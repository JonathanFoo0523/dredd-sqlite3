-- Time: 2024/06/07 23:12:30
-- Database: database26
-- Database version: 3.40.0
-- seed value: 2681613426
PRAGMA cache_size = 50000; -- 6ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA case_sensitive_like=ON; -- 0ms;
PRAGMA encoding = 'UTF-16'; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts4(c0 UNINDEXED); -- 1ms;
CREATE TABLE IF NOT EXISTS t1 (c0 INT ); -- 0ms;
PRAGMA temp.automatic_index = true; -- 0ms;
ROLLBACK TRANSACTION; -- 3ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
END; -- 0ms;
ANALYZE; -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES ('N桢'); -- 1ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (NULL); -- 0ms;
INSERT OR IGNORE INTO t1(c0) VALUES ('i~'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
CREATE TRIGGER IF NOT EXISTS tr0 AFTER DELETE ON t1 WHEN (((t1.c0, t1.c0, CAST(t1.c0 AS INTEGER)))>=((NULLIF(t1.c0, t1.c0), ((t1.c0)<<(t1.c0)), (+ (t1.c0))))) BEGIN DELETE FROM vt0 WHERE ABS(((0.7467004182098059) IS FALSE));END; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1423231111); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1674090497); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 6ms;
END TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (0.021671361574221337), (NULL), ('I~'); -- 0ms;
REINDEX NOCASE; -- 0ms;
INSERT OR FAIL INTO t1 VALUES (NULL), (NULL), (NULL); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 3); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 1ms;
ANALYZE main; -- 0ms;
INSERT OR ABORT INTO vt0(c0) VALUES ('275689826'); -- 1ms;
INSERT OR IGNORE INTO t1(c0) VALUES (x''); -- 1ms;
REINDEX; -- 0ms;
PRAGMA temp.optimize; -- 0ms;
INSERT OR FAIL INTO t1(c0) VALUES (0.5517069644432695), (0.021671361574221337), (x''); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
UPDATE vt0 SET (c0)=(0.17402388590760942); -- 1ms;
UPDATE vt0 SET c0=NULL WHERE vt0.c0 COLLATE BINARY; -- 1ms;
PRAGMA shrink_memory; -- 0ms;
END; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 9); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 2101256442); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', 1236341716);\n; -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 1ms;
INSERT OR ABORT INTO vt0(c0) VALUES (NULL); -- 1ms;
UPDATE OR IGNORE vt0 SET c0=x'' WHERE '-751374655'; -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 6); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 9); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 2); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
UPDATE OR IGNORE vt0 SET (c0)=(1486122562) WHERE ((((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)OR(((vt0.c0)/(vt0.c0)))))OR(LIKELY(vt0.c0))); -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
COMMIT; -- 0ms;
PRAGMA main.busy_timeout = 10000; -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
UPDATE OR ROLLBACK vt0 SET c0=x'90d9' WHERE ((highlight(vt0.c0, vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((~ (vt0.c0))) AND (vt0.c0 COLLATE NOCASE)); -- 0ms;
UPDATE OR IGNORE t1 SET (c0)=(0.9347435878574487); -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
ANALYZE main; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', 1375970341);\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1463792668); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
UPDATE OR IGNORE vt0 SET c0='1236341716'; -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
PRAGMA shrink_memory; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=-105188220,9');\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 13); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1319036347); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 2); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=1301059600,7');\n; -- 0ms;
PRAGMA integrity_check; -- 0ms;
UPDATE OR ROLLBACK t1 SET c0=x'bbb9' WHERE ((((t1.c0)=(t1.c0))) IS FALSE); -- 0ms;
INSERT OR IGNORE INTO t1 VALUES (x'1a57'); -- 0ms;
CREATE TABLE IF NOT EXISTS t0 (c0 INTEGER , c1 TEXT , c2 INTEGER CHECK ( UPPER(NULLIF(DISTINCT c1, c1)))  CHECK ( (((((c0)) NOT BETWEEN (('1301059600')) AND ((c1)))) IS TRUE))); -- 1ms;
INSERT OR IGNORE INTO t0(c1, c0, c2) VALUES (NULL, 1818788898, NULL); -- 0ms;
ALTER TABLE t1 RENAME TO t2; -- 1ms;
ALTER TABLE t0 RENAME TO t2; -- 1ms;
ALTER TABLE t1 RENAME COLUMN c0 TO c7; -- 0ms;
ALTER TABLE t1 RENAME COLUMN c0 TO c88; -- 0ms;
ALTER TABLE t1 RENAME TO t2; -- 0ms;
ALTER TABLE t0 RENAME TO t2; -- 1ms;
ALTER TABLE t1 ADD COLUMN c50 BLOB CHECK ( TYPEOF(t1.c0)); -- 1ms;
ALTER TABLE t0 ADD COLUMN c92 INT; -- 1ms;
UPDATE OR ROLLBACK t0 SET (c0)=(x'159b'); -- 0ms;
PRAGMA main.defer_foreign_keys; -- 0ms;
PRAGMA wal_checkpoint(RESTART); -- 0ms;
PRAGMA auto_vacuum; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 149341435); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', 1818788898);\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', -42494772);\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '1100'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=0'); -- 0ms;
UPDATE OR IGNORE t0 SET (c0, c92)=('', '1848932079'); -- 0ms;
UPDATE t1 SET c0=NULL; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR REPLACE INTO vt0 VALUES (x'64fe'); -- 0ms;
INSERT OR IGNORE INTO t1(c0) VALUES (0xfffffffff6f04b8c); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 1); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1891615146); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
ALTER TABLE t1 ADD COLUMN c54 BLOB; -- 0ms;
VACUUM; -- 0ms;
VACUUM; -- 0ms;
VACUUM temp; -- 0ms;
ALTER TABLE t1 RENAME TO t0; -- 1ms;
ALTER TABLE t1 RENAME COLUMN c0 TO c5; -- 0ms;
ALTER TABLE t1 RENAME COLUMN c0 TO c20; -- 0ms;
ALTER TABLE t1 RENAME COLUMN c0 TO c49; -- 0ms;
ALTER TABLE t1 RENAME COLUMN c54 TO c74; -- 0ms;
ALTER TABLE t1 RENAME TO t0; -- 0ms;
ALTER TABLE t1 RENAME COLUMN c0 TO c7; -- 1ms;
ALTER TABLE t1 RENAME COLUMN c54 TO c35; -- 0ms;
ALTER TABLE t1 RENAME COLUMN c0 TO c84; -- 1ms;
ALTER TABLE t1 RENAME TO t0; -- 0ms;
ALTER TABLE t1 ADD COLUMN c89 INTEGER; -- 0ms;
ANALYZE; -- 0ms;
UPDATE t1 SET c54=NULL; -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
PRAGMA temp.cache_size; -- 0ms;
UPDATE OR IGNORE vt0 SET (c0, c0)=(0.09035944233432924, '-1158236009'); -- 1ms;
INSERT OR IGNORE INTO t1(c89, c0, c54) VALUES (x'', '', '1506828617'), (0.30241331362482415, '-751374655', NULL), (NULL, (CASE '-1680224607'  WHEN NULL THEN 0.8549498982775312 WHEN 0.4104948171864089 THEN 0.6661696131329081 WHEN 0Xffffffffb3941175 THEN '' ELSE x'' END IN ()), '}}뢗q*w'); -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (NULL), ('TN]R6⤸ᶹH'), (x'cda5d4b782b5'); -- 0ms;
UPDATE vt0 SET (c0, c0)=(450845933, '') WHERE vt0.c0; -- 0ms;
CREATE UNIQUE INDEX i82 ON t1(CASE ((c0) BETWEEN (c54) AND (c0))  WHEN CAST(c54 AS INTEGER) THEN ((c0)IS NOT(c54)) ELSE 0x7ec49cf END DESC,TRIM(c0) COLLATE NOCASE COLLATE RTRIM COLLATE NOCASE,(~ ((c54 IN (c0)))) COLLATE NOCASE); -- 0ms;
PRAGMA wal_checkpoint(PASSIVE); -- 0ms;
PRAGMA temp.cache_size = 0; -- 0ms;
UPDATE t1 SET (c54)=(0.17402388590760942); -- 1ms;
UPDATE OR IGNORE t1 SET (c54, c0, c0)=('275689826', NULL, '-558621255') WHERE (((((((((t1.c89)OR(t1.c0)))OR(t1.c0)))OR(t1.c0)))OR(t1.c89)) IN ()); -- 0ms;
COMMIT TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 7); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 9); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', -1282141835);\n; -- 1ms;
INSERT INTO vt0(vt0) VALUES('merge=-42494772,5');\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=-458870735,11');\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 13); -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=1108166555,6');\n; -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
ANALYZE sqlite_master; -- 0ms;
ANALYZE sqlite_master; -- 0ms;
PRAGMA cell_size_check; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR FAIL INTO t1(c89) VALUES ('202423281'), ('j䙝Gn9#Jb'), (x''); -- 0ms;
PRAGMA temp.journal_mode; -- 0ms;
REINDEX i82; -- 1ms;
END; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT ((CASE vt0.c0  WHEN t1.c54 THEN t1.c0 WHEN vt0.c0 THEN t1.c54 WHEN t1.c54 THEN t1.c0 END)IS NOT(((NULL)AND(t1.c0)))) FROM vt0, t1; -- 0ms;
SELECT ((((t1.c54) ISNULL))%(CAST(t1.c54 AS NUMERIC))) FROM t1 WHERE ((((((x'')OR('-76921251')))AND(NULL)) IN (x'' COLLATE BINARY))); -- 0ms;
SELECT (((+ (t1.c0))) IS TRUE) FROM vt0 WHERE (CASE 'JU'  WHEN 0x61f5cd7b THEN NULL END COLLATE RTRIM);SELECT DISTINCT ((TYPEOF(t1.c0))*(((('-42494772', vt0.c0, t1.c89, vt0.c0, t1.c0))==((vt0.c0, t1.c89, t1.c0, vt0.c0, t1.c54))))) FROM vt0, t1; -- 1ms;
SELECT t1.c0 FROM t1, vt0 GROUP BY ((((vt0.c0)OR((((t1.c54, t1.c0, vt0.c0)) BETWEEN ((t1.c54, vt0.c0, t1.c89)) AND ((t1.c89, t1.c0, t1.c54))))))OR((+ (t1.c54)))), t1.c54, t1.c89, (((t1.c0 IN ()))IS NOT(t1.c54 COLLATE BINARY)), TRIM(t1.c0 COLLATE RTRIM), (NOT (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN t1.c0 THEN vt0.c0 WHEN t1.c89 THEN x'' ELSE t1.c0 END)), (- (t1.c0)); -- 0ms;
SELECT DISTINCT MAX(((((((((0.7544235880938222)OR(t1.c89)))AND('-1199195967')))AND(vt0.c0)))AND(t1.c89))) FROM vt0, t1; -- 1ms;
SELECT DISTINCT HEX(COUNT(vt0.c0)), ((x'')>(CAST(vt0.c0 AS REAL))), ((((vt0.c0)IS NOT(t1.c89))) NOT BETWEEN (TOTAL(vt0.c0)) AND (((t1.c89) NOT NULL))) FROM t1 ORDER BY LOWER(DISTINCT ((vt0.c0)<(t1.c0))), '-76921251'  NULLS FIRST;SELECT LIKELIHOOD(DISTINCT vt0.c0, 0.6363111496707287) COLLATE RTRIM, t1.c89, '〱jfs-!O?''' FROM t1, vt0 WHERE (0X31494c2c); -- 0ms;
SELECT DISTINCT (((((((t1.c0)OR(t1.c89)))OR(vt0.c0)), ((((t1.c54)AND(t1.c89)))AND(t1.c54)), ((t1.c54) NOTNULL)))<((CAST(vt0.c0 AS BLOB), UNLIKELY(DISTINCT t1.c0), ((((t1.c54)AND(vt0.c0)))AND(t1.c89))))) FROM vt0, t1; -- 0ms;
SELECT ALL CASE WHEN ((t1.c0) BETWEEN (t1.c89) AND (t1.c89)) THEN CAST(t1.c54 AS REAL) WHEN (vt0.c0 IN ()) THEN vt0.c0 WHEN ((t1.c54)-(t1.c89)) THEN CAST(t1.c0 AS REAL) END FROM t1 WHERE (((((('ZAz&U]iI\' IN ()))OR(((NULL)IS NOT('')))))OR('0.4104948171864089')));SELECT (+ (((t1.c0)>>(t1.c89)))), NTILE(t1.c54) OVER (), ')-', (((~ (t1.c0)))!=(((((t1.c0)OR(vt0.c0)))AND(t1.c0)))), x'' FROM t1 LIMIT 202423281 OFFSET -460102278;SELECT ALL CAST(json_array_length(t1.c54) AS TEXT), (((((t1.c0) BETWEEN (t1.c0) AND (vt0.c0)), CAST(vt0.c0 AS REAL), ((vt0.c0) NOTNULL)))>=((CAST(t1.c0 AS INTEGER), ((vt0.c0)-(t1.c89)), MAX(t1.c0)))), (t1.c0 IN ()) FROM vt0, t1 WHERE (LIKELIHOOD(DISTINCT CASE WHEN NULL THEN 0.04561298511713652 WHEN '-1680224607' THEN 0X54711b39 WHEN 0.4509850537555564 THEN NULL END, 0.08345658422222757)) ORDER BY x'' DESC  NULLS LAST, CAST(((vt0.c0)%('-229094699')) AS INTEGER)  NULLS FIRST, ((x'') BETWEEN (x'') AND (t1.c89)) COLLATE RTRIM  NULLS FIRST; -- 0ms;
SELECT ((t1.c89 COLLATE RTRIM)IS NOT(((t1.c89)&(t1.c89)))) FROM vt0, t1 WHERE ((((('' COLLATE NOCASE)AND(CAST(x'6ec8' AS INTEGER))))AND((~ ('-685831610'))))) ORDER BY 1486122562 COLLATE BINARY ASC;SELECT DISTINCT NULL FROM vt0, t1 WHERE (((('-1158236009')*(-1.282141835E9)) IN (((((((((x'23ed')AND(NULL)))AND(NULL)))AND(0.7544235880938222)))AND('-1282141835'))))); -- 0ms;
SELECT DISTINCT vt0.c0 COLLATE BINARY FROM vt0 WHERE (((((x'0a1c') NOT BETWEEN ('') AND ('|桢}'))) BETWEEN ((NOT (x''))) AND (((x'')||(0Xfffffffffe583992))))) ORDER BY ((t1.c89) NOT BETWEEN ('-904273007') AND (0xffffffff88e9b320)) COLLATE NOCASE DESC  NULLS LAST;SELECT DISTINCT ((SUM(t1.c0)) NOTNULL) FROM t1; -- 0ms;
SELECT ALL '1108166555' FROM vt0 WHERE ((('<783 -2698697373832199615 1713 384:73-454T248:1855:-5606602840063372215:tZ3') ISNULL)) LIMIT 1428032570 OFFSET -110819452; -- 0ms;
SELECT ALL t1.c89 FROM vt0, t1; -- 0ms;
SELECT DISTINCT COUNT(*) OVER ( RANGE  CURRENT ROW) FROM vt0 WHERE (SQLITE_COMPILEOPTION_USED('-1921238578')); -- 0ms;
SELECT DISTINCT COUNT(*) OVER ( PARTITION BY (- (((((vt0.c0)OR(t1.c89)))AND(t1.c0)))), CAST((t1.c89 IN (t1.c54)) AS INTEGER)), (((t1.c0)) NOT BETWEEN ((vt0.c0)) AND (('-1055942147'))), ((vt0.c0 COLLATE RTRIM)<=(((t1.c54)-(t1.c89)))) FROM t1, vt0; -- 0ms;
SELECT ALL GROUP_CONCAT(((t1.c0) IS TRUE)) FROM t1, vt0 LIMIT -1395729143; -- 1ms;
SELECT (((t1.c0 IN ())) NOT BETWEEN (t1.c89) AND (t1.c0)) FROM vt0;SELECT DISTINCT GROUP_CONCAT((((t1.c89))<((vt0.c0)))) OVER (), CAST(((t1.c54) NOT NULL) AS REAL), t1.c89 FROM vt0, t1 ORDER BY (((((t1.c0)) BETWEEN ((vt0.c0)) AND ((t1.c54))))IS(((t1.c89) BETWEEN (NULL) AND (vt0.c0)))); -- 0ms;
SELECT CASE WHEN LOWER(vt0.c0) THEN ((((t1.c89)AND(vt0.c0)))OR(vt0.c0)) WHEN ((t1.c89)>=(t1.c54)) THEN CASE WHEN vt0.c0 THEN vt0.c0 WHEN t1.c54 THEN t1.c89 WHEN t1.c54 THEN t1.c0 END WHEN SUM(t1.c0) THEN ((t1.c54) NOT BETWEEN (vt0.c0) AND (vt0.c0)) ELSE MIN(t1.c89) END FROM t1;SELECT DISTINCT x'', AVG(CAST(t1.c89 AS TEXT)) OVER (), ((((((((NULL COLLATE RTRIM)OR((t1.c54 IN ()))))AND(((((t1.c0)AND(t1.c54)))AND(NULL)))))OR(0.616913426527204)))AND(TOTAL(vt0.c0))) FROM vt0, t1; -- 1ms;
SELECT vt0.c0 FROM t1 WHERE (0X62f08fbe);SELECT ALL (((t1.c89)) BETWEEN ((((((t1.c89)AND(t1.c89)))OR(t1.c0)))) AND ((((t1.c54) ISNULL)))) FROM t1; -- 0ms;
SELECT ALL ((((t1.c0)OR('0.04561298511713652'))) NOT BETWEEN (((vt0.c0) NOT NULL)) AND ((((-27772526)) NOT BETWEEN ((t1.c0)) AND ((vt0.c0))))) FROM vt0, t1 WHERE (((((x'c32d') BETWEEN ('-1184942313') AND (NULL)))>=((('?N') NOT BETWEEN (NULL) AND ('\l|C2'))))); -- 0ms;
SELECT DISTINCT CAST(((((vt0.c0)AND(t1.c54)))OR(t1.c54)) AS TEXT) FROM t1, vt0 WHERE (CAST('*L' AS INTEGER)) GROUP BY (CAST(t1.c0 AS TEXT) IN ((- (t1.c89)))); -- 0ms;
SELECT DISTINCT ((t1.c89 IN ()) IN ()) FROM vt0, t1; -- 0ms;
SELECT DISTINCT ((COALESCE(vt0.c0, t1.c0, t1.c54, t1.c89))&(COUNT(*))) FROM t1, vt0 ORDER BY ((((((t1.c89)OR(vt0.c0)))OR(t1.c54)))LIKE((NOT (t1.c89)))); -- 0ms;
SELECT CASE t1.c89  WHEN ABS(t1.c0) THEN COUNT(*) ELSE vt0.c0 END, CASE ((vt0.c0) BETWEEN (vt0.c0) AND (t1.c0))  WHEN ((vt0.c0)IS NOT(vt0.c0)) THEN NULLIF(DISTINCT '-1177441265', 0X662e5848) WHEN CAST(0x3a520458 AS TEXT) THEN ((t1.c89)&(t1.c54)) WHEN COUNT(vt0.c0) THEN ((t1.c54) IS FALSE) END, (CASE vt0.c0  WHEN t1.c0 THEN t1.c89 WHEN t1.c0 THEN vt0.c0 WHEN vt0.c0 THEN t1.c54 ELSE t1.c89 END IN ()) FROM t1 WHERE (((CASE '-458870735'  WHEN '1198879590' THEN NULL ELSE NULL END)IS(CASE WHEN '' THEN NULL WHEN NULL THEN x'' WHEN x'' THEN NULL END)));SELECT DISTINCT ((((((((t1.c54)OR(vt0.c0)))AND(t1.c54)))AND(((t1.c0) NOT BETWEEN (t1.c89) AND (t1.c0)))))AND(CAST(0.9347435878574487 AS INTEGER))) FROM vt0, t1 WHERE ((((('0.9347435878574487')|(0.3965084914000856)))<=((-1395729143 IN ())))) GROUP BY ((((0.5279899921419271)OR(((t1.c89) NOTNULL))))OR((((t1.c89, t1.c89, vt0.c0)) NOT BETWEEN ((NULL, t1.c89, vt0.c0)) AND ((t1.c0, t1.c0, 0.8252159933103789))))) HAVING CAST((NOT (0.3318179839299189)) AS NUMERIC); -- 0ms;
SELECT DISTINCT TOTAL(((((((((t1.c89)OR(t1.c54)))OR(t1.c89)))AND(t1.c0)))AND(t1.c54))) FROM vt0, t1 WHERE (CASE WHEN ((x'')%('-533631404')) THEN ((x'') NOT BETWEEN ('g%+&Oe8{C') AND ('-558621255')) END); -- 0ms;
SELECT (((t1.c89)) NOT BETWEEN ((t1.c89 COLLATE BINARY)) AND ((((((t1.c89)AND(t1.c89)))OR(t1.c54))))), CAST(((t1.c54) IS FALSE) AS NUMERIC), CASE t1.c0  WHEN (t1.c89 IN ()) THEN t1.c89 COLLATE BINARY END FROM vt0, t1 WHERE ('n%') GROUP BY 0.017137608824929318 LIMIT 202423281 OFFSET -618570601; -- 0ms;
SELECT DISTINCT t1.c0 FROM t1 WHERE (((((NULL)IS NOT(x''))) BETWEEN (CASE NULL  WHEN NULL THEN 0xfffffffffd7794cc ELSE 0x5f86b753 END) AND (LOWER(DISTINCT x'')))); -- 1ms;
SELECT DISTINCT ((((NULL) NOT BETWEEN (vt0.c0) AND (vt0.c0))) NOT NULL) FROM t1, vt0; -- 0ms;
SELECT t1.c54, GROUP_CONCAT(((t1.c54) BETWEEN (t1.c89) AND (t1.c89))), (((t1.c0 IN (t1.c54)))OR(CAST(t1.c0 AS INTEGER))), SUM(((0.8393694529188527)|(t1.c89))) OVER ( RANGE  CURRENT ROW EXCLUDE CURRENT ROW), ((CAST(vt0.c0 AS INTEGER)) NOT NULL) FROM t1 WHERE (LTRIM(NULL COLLATE RTRIM, TRIM(DISTINCT '-1055942147', NULL)));SELECT DISTINCT ((((((t1.c0) ISNULL))OR(CAST(NULL AS BLOB))))AND(TRIM(DISTINCT t1.c0))), TRIM('n', CASE WHEN vt0.c0 THEN NULL ELSE NULL END), CASE ((t1.c0)+(t1.c54))  WHEN CASE WHEN t1.c89 THEN t1.c89 END THEN ((t1.c54) NOTNULL) WHEN ((vt0.c0) IS FALSE) THEN vt0.c0 WHEN CASE WHEN t1.c0 THEN vt0.c0 WHEN NULL THEN vt0.c0 WHEN vt0.c0 THEN t1.c54 END THEN ((t1.c0)<=(t1.c0)) WHEN ((t1.c54)%(t1.c54)) THEN CASE WHEN NULL THEN t1.c54 WHEN t1.c89 THEN t1.c89 WHEN vt0.c0 THEN 0.5461386770403404 END WHEN t1.c54 COLLATE BINARY THEN t1.c0 ELSE ((((((((t1.c54)AND(t1.c0)))AND(t1.c54)))OR(t1.c0)))OR(t1.c0)) END FROM t1 GROUP BY (vt0.c0 IN (((t1.c89) BETWEEN (t1.c0) AND (t1.c54)))) HAVING CASE WHEN vt0.c0 THEN (NOT (t1.c0)) ELSE (((t1.c89, t1.c54, t1.c89, t1.c0, t1.c54))<=((vt0.c0, t1.c89, t1.c54, vt0.c0, vt0.c0))) END;SELECT ((TOTAL(0x1db10b71))IS((((vt0.c0)) NOT BETWEEN ((t1.c54)) AND ((t1.c54))))), CAST(((vt0.c0)%(t1.c0)) AS BLOB), ((((((vt0.c0)OR(t1.c54)))AND(1668663850)))=(t1.c0 COLLATE RTRIM)) FROM vt0;SELECT DISTINCT -246794435 FROM vt0 WHERE ((~ (((((((((x'4b9b')AND('''tmXlc!?J')))OR(x'')))OR('1078521717')))OR(x''))))); -- 0ms;
SELECT DISTINCT CASE vt0.c0 COLLATE BINARY  WHEN (- (t1.c54)) THEN NULL ELSE vt0.c0 END FROM vt0, t1; -- 0ms;
SELECT ((((((((((t1.c89)AND(vt0.c0)))AND(x'1e04')))OR(t1.c0)))AND(t1.c89))) NOTNULL), (t1.c0 COLLATE NOCASE IN ()), CAST(t1.c54 AS REAL) COLLATE RTRIM FROM t1, vt0 WHERE (((~ ('0.017137608824929318')) IN (((((0.7467004182098059)AND(-2073332934)))AND(''))))); -- 0ms;
SELECT DISTINCT (NOT (t1.c54)) COLLATE BINARY FROM vt0;SELECT DISTINCT t1.c89 FROM vt0 WHERE (NULL);SELECT t1.c0, CASE WHEN vt0.c0 THEN t1.c89 END COLLATE BINARY, ((t1.c0 COLLATE NOCASE)||(vt0.c0)) FROM t1 WHERE (((LIKELY(-1.055942147E9)) BETWEEN (((x'e45ca13e') NOT BETWEEN (NULL) AND (0.36666026710584154))) AND (CAST(-1971526992 AS BLOB))));SELECT CUME_DIST() OVER () FROM vt0 WHERE ((((- (''))) BETWEEN ((((0.5517069644432695)) BETWEEN ((0xffffffffdd7757d1)) AND ((NULL)))) AND (((((-6.8583161E8)OR(0.37608751567417686)))AND('T'))))); -- 0ms;
SELECT ALL (~ (t1.c89 COLLATE BINARY)) FROM vt0, t1 GROUP BY ((t1.c54) IS TRUE) COLLATE RTRIM, (((vt0.c0) BETWEEN (t1.c0) AND (t1.c54)) IN ()), (vt0.c0 IN (t1.c54)) COLLATE NOCASE, '', (((t1.c89)IS NOT(vt0.c0)) IN (0X7fffffffffffffff COLLATE BINARY, (~ (t1.c0)))); -- 0ms;
SELECT MAX((t1.c54 IN ())), ((((+ (vt0.c0))))<((LIKELY(vt0.c0)))), (~ ((vt0.c0 IN ()))) FROM vt0, t1; -- 0ms;
SELECT ALL DENSE_RANK() OVER (), 450845933, ((NULL) NOT NULL) FROM vt0 GROUP BY vt0.c0 HAVING (((((vt0.c0))==((t1.c54)))) BETWEEN (t1.c0 COLLATE NOCASE) AND (t1.c89 COLLATE NOCASE)) ORDER BY CAST(NULL COLLATE BINARY AS NUMERIC) DESC  NULLS LAST, (((vt0.c0 IN ()))||(MIN(vt0.c0, vt0.c0))) LIMIT 1855184702;SELECT ALL ((CASE WHEN vt0.c0 THEN t1.c54 WHEN t1.c0 THEN t1.c54 WHEN t1.c0 THEN t1.c89 WHEN vt0.c0 THEN t1.c0 WHEN vt0.c0 THEN t1.c0 END) NOT BETWEEN ((+ (1.855184702E9))) AND (((t1.c54)-(t1.c89)))), ((((LIKE(t1.c54, t1.c0))AND(CASE t1.c89  WHEN t1.c0 THEN t1.c0 ELSE t1.c89 END)))OR(t1.c54)), (((((t1.c89 IN (t1.c0)))OR(t1.c54 COLLATE NOCASE)))OR(((t1.c54)&(t1.c54)))) FROM t1, vt0 WHERE ((+ (CASE WHEN 0.16134795010030778 THEN NULL END))) ORDER BY t1.c0  NULLS LAST; -- 0ms;
SELECT DISTINCT CASE NULL  WHEN (((t1.c89)) NOT BETWEEN ((t1.c54)) AND ((t1.c89))) THEN vt0.c0 WHEN ((t1.c89) NOT BETWEEN (t1.c89) AND (t1.c0)) THEN ((((((((vt0.c0)AND(t1.c0)))OR(t1.c89)))AND(t1.c89)))OR(t1.c54)) WHEN (t1.c0 IN ()) THEN (NOT (t1.c54)) ELSE t1.c54 END FROM t1 LIMIT -1403356082;SELECT CAST(COUNT(vt0.c0) AS BLOB) FROM t1;SELECT DISTINCT SUM((NOT (t1.c89))), CASE WHEN AVG(t1.c89) THEN ((t1.c54)+(t1.c54)) END, COUNT(CAST(t1.c89 AS INTEGER)) FROM vt0;SELECT ALL ((vt0.c0 IN ()) IN (ABS(DISTINCT t1.c54))) FROM t1 GROUP BY ((((t1.c89)*(t1.c0)))AND(CASE t1.c0  WHEN t1.c0 THEN vt0.c0 ELSE vt0.c0 END)), (((t1.c0)) NOT BETWEEN ((TRIM(0.5517069644432695))) AND (((t1.c0 IN (t1.c54))))), (((t1.c54)<<(vt0.c0)) IN ());SELECT ALL ((((vt0.c0)LIKE(vt0.c0))) NOT BETWEEN (t1.c0) AND ((- (vt0.c0)))), ((((t1.c0) NOTNULL))>(t1.c54)), MAX(((t1.c54) BETWEEN (t1.c0) AND (t1.c89))) FROM t1 WHERE ((CAST(NULL AS INTEGER) IN ()));SELECT ((((x'ed9e82c7')IS(vt0.c0)))LIKE(CASE t1.c0  WHEN t1.c54 THEN t1.c54 ELSE vt0.c0 END)) FROM t1 WHERE ((((NOT (NULL)))OR(((0xfffffffff14a373d)<(0.6537510414589234)))));SELECT (- (((((t1.c89)AND(t1.c89)))AND(t1.c89)))), (((~ (x''))) NOT BETWEEN ((((t1.c89, t1.c54, t1.c0)) BETWEEN ((vt0.c0, t1.c89, vt0.c0)) AND ((t1.c89, NULL, t1.c89)))) AND (t1.c54 COLLATE NOCASE)), TOTAL(((0.9341107314848786) NOT NULL)) OVER ( GROUPS  CURRENT ROW) FROM vt0, t1; -- 0ms;
SELECT ALL ((((((vt0.c0)OR(t1.c0)))AND(t1.c54)))OR(CASE t1.c0  WHEN vt0.c0 THEN t1.c54 END)) FROM vt0, t1; -- 0ms;
SELECT TOTAL(((t1.c54) IS TRUE)), FIRST_VALUE((((vt0.c0) NOTNULL) IN ())) OVER (), NULL FROM vt0 WHERE (((((x'')AND((((x'c43f', x'', 0.616913426527204)) BETWEEN ((x'', NULL, x'8a91')) AND ((x'cc79', '#?〱#\''~o', 0.1043809780211864))))))AND((('-685831610')<=(0X6ac02b7c)))));SELECT COALESCE((t1.c0 IN ()), MAX(vt0.c0)) FROM vt0; -- 0ms;
SELECT DISTINCT ((TRIM(t1.c89))>=((('')&(t1.c54)))), ((((GROUP_CONCAT(x'4f83'))OR(((((t1.c0)OR(t1.c54)))OR(t1.c0)))))AND(((NULL)%(vt0.c0)))), (((t1.c54, (((vt0.c0)) NOT BETWEEN ((0.4797400484802705)) AND ((t1.c0))), ((((t1.c54)AND(t1.c54)))OR(t1.c54))))>(((t1.c54 IN (t1.c89)), TRIM(DISTINCT t1.c54, vt0.c0), ((t1.c0)GLOB(t1.c89))))) FROM vt0, t1 WHERE ('0.021671361574221337') ORDER BY t1.c54  NULLS FIRST, (+ (((((((((t1.c0)OR(vt0.c0)))OR(t1.c89)))AND(vt0.c0)))AND(t1.c54)))) ASC; -- 0ms;
SELECT DISTINCT ((((t1.c54) BETWEEN (vt0.c0) AND (t1.c0)))<(t1.c89)), CAST(t1.c54 AS INTEGER), TOTAL(t1.c54) OVER () FROM vt0 WHERE (((((NULL)<(0.14874059819946095)))IS NOT((+ (0.7544235880938222)))));SELECT DISTINCT ((((CAST(vt0.c0 AS REAL))AND((t1.c54 IN ()))))AND(((t1.c89) IS FALSE))) FROM t1 WHERE (CAST(((x'') BETWEEN (x'') AND (NULL)) AS TEXT)); -- 0ms;
SELECT ALL t1.c0, t1.c54, CASE CASE WHEN t1.c0 THEN t1.c0 END  WHEN COALESCE(NULL, t1.c89) THEN ((t1.c54)>=(t1.c89)) ELSE CAST(t1.c89 AS NUMERIC) END FROM vt0, t1 LIMIT -1276761899; -- 0ms;
SELECT DISTINCT (- (x'3aa1')), ((CASE WHEN t1.c54 THEN 'n챁6&MIﺶz' END)AND(((t1.c0)IS(vt0.c0)))), CAST(DATE(t1.c0, vt0.c0, x'') AS REAL) FROM t1 WHERE (CASE ((0xffffffffff450cb2) IS FALSE)  WHEN CAST(x'' AS BLOB) THEN 'QV' COLLATE NOCASE ELSE CASE -1837601372  WHEN x'' THEN 1.42803257E9 END END);SELECT (+ (CAST(t1.c54 AS BLOB))) FROM t1; -- 0ms;
SELECT (TRIM(t1.c54) IN (0xffffffffe0316e54)) FROM vt0, t1; -- 1ms;
SELECT CASE t1.c0  WHEN CAST(t1.c54 AS INTEGER) THEN vt0.c0 END FROM vt0 WHERE ('-1e500') LIMIT -1561928546;SELECT ALL ((t1.c0) NOTNULL) FROM t1, vt0 WHERE ((((((('')OR(0.572748837462053)))OR((NULL IN ()))))AND(x'85427e1a' COLLATE BINARY))); -- 0ms;
SELECT DISTINCT (CASE WHEN t1.c54 THEN t1.c0 WHEN t1.c89 THEN t1.c89 WHEN vt0.c0 THEN t1.c54 ELSE t1.c54 END IN ()) FROM t1 NOT INDEXED, vt0 WHERE ((((((((NULL)AND('')))AND(NULL))))<>((1659029462)))); -- 0ms;
SELECT ((((TRIM(t1.c0))OR(((t1.c89)>=(t1.c54)))))OR(t1.c54)) FROM vt0 WHERE ((((('E>Fw2')LIKE('~-')))<<(((NULL)/('-359175636')))));SELECT DISTINCT (((vt0.c0)|(vt0.c0)) IN ()) FROM vt0, t1 WHERE ((((CASE WHEN 'oPR+5I' THEN 2.75689826E8 WHEN '-59443955' THEN x'' WHEN NULL THEN x'37c7d8dc' ELSE '1953689889' END))>=((((0.6904965978302502)/(NULL)))))); -- 0ms;
SELECT ALL TRIM(CAST(vt0.c0 AS TEXT), vt0.c0 COLLATE RTRIM), (((((t1.c89, t1.c0, vt0.c0)) BETWEEN ((t1.c89, t1.c54, x'4f1c')) AND ((t1.c54, t1.c0, 0.26295627291850754))))OR(((vt0.c0)<<('')))), (((((t1.c54, '1848932079', vt0.c0)) BETWEEN ((t1.c0, 0.20286007754682212, t1.c0)) AND ((t1.c54, t1.c0, t1.c0)))) BETWEEN ((+ (t1.c0))) AND (((vt0.c0) BETWEEN (t1.c89) AND (t1.c54)))) FROM vt0;SELECT (SUM(t1.c89) IN ()), CASE WHEN ((((vt0.c0)AND(t1.c89)))OR(vt0.c0)) THEN x'' ELSE (~ (t1.c54)) END, AVG((((vt0.c0, t1.c0, t1.c0)) NOT BETWEEN ((t1.c89, t1.c54, t1.c0)) AND ((t1.c0, t1.c0, vt0.c0)))) FROM vt0, t1; -- 0ms;
SELECT DISTINCT ((+ (t1.c54)) IN ()) FROM t1, vt0 WHERE ((NOT (x'' COLLATE BINARY))) LIMIT 1602664275 OFFSET -12251982; -- 2ms;
SELECT DISTINCT t1.c89 FROM t1 WHERE ((((((NOT (0X6b69a47a)))AND(json_object(NULL, NULL))))OR(('NaꢋQ?gIjO' IN ())))); -- 0ms;
SELECT DISTINCT CAST(((x'')%(t1.c54)) AS REAL) FROM t1, vt0 NOT INDEXED; -- 0ms;
SELECT ((-3.59175636E8) NOT BETWEEN (((t1.c54)/(t1.c89))) AND (((vt0.c0)<(vt0.c0)))), CASE ((t1.c54) IS TRUE)  WHEN (t1.c89 IN ()) THEN (NOT (x'')) END, CAST(COUNT(*) AS NUMERIC) FROM vt0, t1 WHERE (CASE CAST(NULL AS INTEGER)  WHEN CAST(NULL AS REAL) THEN ((('\rU', 0.4885337306742783, 0xfffffffffb6a465d)) BETWEEN ((NULL, 0.8549498982775312, '-1561928546')) AND (('', '', 0.4635184392192868))) END) GROUP BY '0\r녢I~', '1668663850', (NOT (((vt0.c0)<(t1.c0)))), ((NOT (t1.c89)) IN ()), (((t1.c89)) NOT BETWEEN (((((t1.c54))>((vt0.c0))))) AND (((((t1.c0, vt0.c0, t1.c89))>=((x'', vt0.c0, vt0.c0)))))) HAVING (((t1.c0)AND(t1.c0)) IN (COUNT(t1.c0), CASE WHEN NULL THEN t1.c89 WHEN t1.c0 THEN t1.c89 WHEN vt0.c0 THEN t1.c0 WHEN t1.c0 THEN vt0.c0 WHEN vt0.c0 THEN t1.c54 END)); -- 16ms;
SELECT ALL (((((t1.c54) BETWEEN (vt0.c0) AND (t1.c0)), LIKELIHOOD(DISTINCT vt0.c0, 0.4604216117850939), (+ (t1.c0))))<=((((t1.c89)>=(0.08992609214558522)), CASE t1.c89  WHEN t1.c89 THEN t1.c0 END, ((t1.c89)!=(t1.c54))))) FROM t1, vt0; -- 0ms;
SELECT ALL ((((t1.c0)!=(vt0.c0))) ISNULL), ((CASE t1.c89  WHEN t1.c0 THEN t1.c89 ELSE t1.c89 END) NOTNULL), (((((NOT (vt0.c0)))AND((t1.c89 IN (t1.c54, x'')))))OR(((t1.c89)<(t1.c89)))) FROM vt0, t1; -- 0ms;
SELECT CAST(GLOB(NULL, vt0.c0) AS NUMERIC) FROM t1 WHERE (CAST((('g%+&Oe8{C') NOT BETWEEN (0.3694756848358971) AND (1162183904)) AS NUMERIC));SELECT ALL TYPEOF(DISTINCT ((t1.c0)>>(t1.c0))), (((('538226983')AND(CASE WHEN t1.c89 THEN t1.c89 WHEN t1.c0 THEN t1.c54 WHEN t1.c0 THEN t1.c0 ELSE t1.c89 END)))OR('')), t1.c89 FROM vt0, t1 WHERE (CASE 0.1938804304978805 COLLATE BINARY  WHEN ((0.5461386770403404)OR(NULL)) THEN (((0.12952000327871438, NULL, 0.6090483399475316))==(('-786537621', '-950633609', NULL))) ELSE ((0.4797400484802705)+(-1515864369)) END); -- 1ms;
SELECT DISTINCT (~ (CASE t1.c54  WHEN vt0.c0 THEN t1.c0 ELSE t1.c0 END)), CASE WHEN 0.5517069644432695 THEN ((t1.c89)/(t1.c54)) WHEN CAST(t1.c0 AS BLOB) THEN t1.c0 COLLATE NOCASE WHEN ((t1.c89) ISNULL) THEN ((t1.c54) BETWEEN (t1.c54) AND (t1.c89)) END, TOTAL(((t1.c54)%(t1.c0)) COLLATE BINARY) OVER () FROM t1;SELECT t1.c89 COLLATE NOCASE FROM vt0 ORDER BY ((((((vt0.c0)OR(t1.c0)))AND(t1.c0))) NOT BETWEEN (((vt0.c0) BETWEEN (t1.c0) AND (t1.c0))) AND (((t1.c89)/(t1.c54)))) ASC;SELECT ((CASE WHEN vt0.c0 THEN t1.c89 ELSE t1.c0 END) IS FALSE) FROM t1 WHERE (CASE ((NULL)<(0.08992609214558522))  WHEN (((0Xffffffffdb215c97))=(('-1035497630'))) THEN ((0.862701449409744) BETWEEN (NULL) AND ('0.4797400484802705')) ELSE (('	{')<<('	{')) END) GROUP BY (HEX(t1.c0) IN ());SELECT DISTINCT CUME_DIST() OVER () FROM vt0 NOT INDEXED, t1; -- 0ms;
SELECT DISTINCT PERCENT_RANK() OVER ( ORDER BY ((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c89)) COLLATE RTRIM ASC GROUPS  UNBOUNDED PRECEDING) FROM vt0, t1 WHERE ((((x'' IN ('', '1414992301')))!=(((((((((0.3796322216568403)AND(NULL)))AND('i~')))OR('-152024180')))AND(0.3135233682087979))))); -- 1ms;
SELECT (AVG(t1.c89) IN ()), CAST(((t1.c0) BETWEEN (t1.c89) AND (t1.c89)) AS INTEGER), (((NOT (t1.c89))) ISNULL) FROM vt0 WHERE ((('-2132592466')<>((('0') IS FALSE))));SELECT DISTINCT (((NOT (t1.c89)))IS(((vt0.c0) BETWEEN (vt0.c0) AND (t1.c89)))), (((((((t1.c54))<(('\nw'))))OR(t1.c89)))OR(((t1.c89)<(t1.c0)))), ((((t1.c54) IS FALSE))<=((((t1.c54)) BETWEEN ((t1.c89)) AND ((t1.c0))))) FROM vt0 LIMIT 1467689041;SELECT CAST((NOT (t1.c0)) AS TEXT) FROM vt0, t1 WHERE ((((2146772934, NULL, -2.29094699E8)) BETWEEN ((((x'')<=(NULL)), ((((((((0.24859372566468407)AND(x'')))OR(x'')))AND('')))OR(NULL)), (x'' IN ()))) AND (((((NULL))>=((x''))), CASE WHEN 0X6f55175e THEN x'9a09' ELSE NULL END, ((0.7255887679267836) NOT BETWEEN (0.9347435878574487) AND ('-2101794668')))))) GROUP BY ((((CASE WHEN t1.c54 THEN t1.c89 WHEN t1.c54 THEN vt0.c0 WHEN t1.c54 THEN t1.c54 WHEN vt0.c0 THEN t1.c54 WHEN t1.c89 THEN t1.c54 WHEN t1.c54 THEN vt0.c0 WHEN t1.c89 THEN t1.c54 END)OR(CAST(t1.c54 AS TEXT))))AND(((((t1.c0)AND(t1.c0)))OR(vt0.c0)))) HAVING CAST(((vt0.c0) NOT BETWEEN (vt0.c0) AND (NULL)) AS BLOB); -- 1ms;
SELECT DISTINCT ((((json_remove(t1.c89, t1.c54, vt0.c0, t1.c89))OR(LIKELIHOOD(vt0.c0, 0.7411629112703143))))OR('-1319060798')) FROM vt0;SELECT ALL CAST(AVG(t1.c89) AS NUMERIC) FROM vt0, t1 WHERE ('S' COLLATE NOCASE) LIMIT 993779192; -- 0ms;
SELECT DISTINCT (- (((t1.c0)*(vt0.c0)))) FROM t1, vt0 WHERE ((((((0X61f5cd7b))<((NULL))))%((((NULL))<((x'')))))); -- 0ms;
SELECT t1.c54 COLLATE NOCASE, CAST((~ (t1.c89)) AS NUMERIC), '-558621255' COLLATE RTRIM FROM t1, vt0; -- 0ms;
SELECT ((CASE t1.c0  WHEN t1.c54 THEN t1.c89 END)>=(((t1.c89)/(vt0.c0)))) FROM vt0 WHERE (((CAST(NULL AS NUMERIC)) NOT BETWEEN (((((x'')OR(0.42708447560024254)))AND(NULL))) AND (((NULL) BETWEEN (0.9487152741522815) AND (''))))) GROUP BY vt0.c0, CAST(vt0.c0 AS REAL), CASE t1.c0  WHEN t1.c54 THEN vt0.c0 ELSE t1.c54 END COLLATE RTRIM HAVING ((((((((((t1.c54) NOT BETWEEN (t1.c0) AND (vt0.c0)))OR(GLOB(t1.c0, ''))))OR(CASE 0.056770137417999855  WHEN 'Vq\r0F' THEN t1.c89 END)))AND(CASE WHEN t1.c89 THEN t1.c0 END)))OR(GROUP_CONCAT(t1.c54)));SELECT ALL LOWER(t1.c89 COLLATE NOCASE) FROM vt0;SELECT DISTINCT COUNT(((t1.c54) NOT BETWEEN (t1.c0) AND (t1.c0))) FILTER(WHERE ((((t1.c54)AND('-42494772')))<(((((((((vt0.c0)AND(t1.c0)))OR(0.04561298511713652)))OR(t1.c54)))OR(t1.c54))))) OVER () FROM vt0;SELECT DISTINCT CAST(((t1.c0) IS FALSE) AS INTEGER) FROM vt0 NOT INDEXED WHERE (TRIM(DISTINCT CAST(x'' AS BLOB))) LIMIT -1728861886;SELECT DISTINCT vt0.c0, (CAST(t1.c89 AS INTEGER) IN ()), CAST((((t1.c54, '~]', 0.06724680123347015, t1.c54, vt0.c0)) NOT BETWEEN ((vt0.c0, t1.c89, vt0.c0, 0.7467004182098059, t1.c54)) AND ((t1.c54, t1.c0, t1.c89, t1.c89, vt0.c0))) AS INTEGER), ((((t1.c0) BETWEEN (t1.c89) AND (vt0.c0))) NOT NULL), (((CASE WHEN vt0.c0 THEN t1.c89 END))!=((((t1.c89) IS FALSE)))) FROM vt0 WHERE (NULL);SELECT ALL (((HEX(t1.c0)))<=((((t1.c0) NOT NULL)))) FROM vt0 WHERE ((((((((((('1848932079')<('')))AND(((0.7619398820772679) BETWEEN (x'') AND (0.9712214248687094)))))AND(((NULL)==(0.344620233729345)))))OR(('1797925637' IN ()))))AND(((NULL)+(NULL)))));SELECT (((t1.c89 IN ()))+(((vt0.c0)+(vt0.c0)))) FROM vt0, t1 GROUP BY t1.c54 HAVING x'7885'; -- 0ms;
SELECT CASE ((t1.c89)AND(t1.c89))  WHEN ((t1.c0) BETWEEN (vt0.c0) AND (t1.c54)) THEN (+ (t1.c89)) END FROM t1;SELECT (((NOT (vt0.c0))) BETWEEN (((t1.c0)=(t1.c0))) AND (MIN(t1.c89))) FROM t1, vt0; -- 0ms;
SELECT DISTINCT ((((((t1.c89)AND(vt0.c0)))AND(t1.c54))) NOT BETWEEN (CAST(t1.c54 AS TEXT)) AND (t1.c89 COLLATE RTRIM)) FROM t1;SELECT DISTINCT (((((((((((t1.c89))<((vt0.c0))))OR(((x'46d7')>=(t1.c89)))))AND((('481420912')AND(t1.c0)))))OR(vt0.c0 COLLATE NOCASE)))AND((NOT (t1.c54)))) FROM vt0 WHERE (CAST((('u-') NOTNULL) AS BLOB));SELECT t1.c0 FROM vt0, t1 WHERE (CASE ((('1301059600')) BETWEEN ((x'')) AND ((0.31810049008241836)))  WHEN ((x'')*(x'')) THEN (- ('1802085498')) ELSE 'T' END) GROUP BY (((t1.c0, t1.c89, vt0.c0, vt0.c0, t1.c54)) NOT BETWEEN (((t1.c89 IN ()), (- (t1.c54)), 0x61cd17a2, ((vt0.c0) NOT NULL), (~ (t1.c89)))) AND ((t1.c0, CAST(t1.c0 AS BLOB), TRIM(NULL, vt0.c0), (((vt0.c0, t1.c0, ''))==((t1.c0, t1.c54, t1.c89))), vt0.c0 COLLATE RTRIM))), (('') BETWEEN (('-599879282' IN ())) AND (((t1.c89)AND(0.639611180118507)))), t1.c89 HAVING ((((((vt0.c0)AND(vt0.c0)))OR(t1.c89)))<<(((t1.c89) BETWEEN (t1.c54) AND (t1.c0)))) LIMIT -1253732392 OFFSET -208106968; -- 1ms;
SELECT t1.c89 FROM vt0, t1 WHERE (((0.17402388590760942 COLLATE RTRIM)>>(((x'')%(0.5422936114709052))))); -- 0ms;
SELECT DISTINCT CAST(((((t1.c0)AND(t1.c54)))OR(vt0.c0)) AS BLOB) FROM vt0 WHERE (0xcda5741);SELECT DISTINCT FIRST_VALUE(0.33364410011250567) OVER () FROM vt0 WHERE ((((('-533631404')AND(((NULL)>(x'')))))OR(((NULL) BETWEEN (x'') AND (-1387511650))))); -- 0ms;
SELECT DISTINCT ((CASE WHEN x'' THEN t1.c89 ELSE t1.c89 END) NOT NULL) FROM vt0;SELECT (GROUP_CONCAT('1659932606') IN ()) FROM t1; -- 0ms;
SELECT ALL CAST((((t1.c89)) BETWEEN ((t1.c89)) AND ((t1.c0))) AS BLOB), ((MAX(t1.c89)) BETWEEN (((((t1.c54)OR(t1.c89)))OR(t1.c89))) AND (0.7440244938174959)), ((((t1.c0) NOT NULL))<<(CASE vt0.c0  WHEN vt0.c0 THEN t1.c89 WHEN t1.c54 THEN -1717189863 WHEN t1.c89 THEN t1.c54 ELSE t1.c0 END)) FROM t1, vt0 WHERE ((((0.7359188047540803, ' ', NULL))>=((0.9744239231075565, NULL, 0.09035944233432924))) COLLATE NOCASE); -- 1ms;
SELECT ALL FIRST_VALUE((t1.c0 IN ()) COLLATE RTRIM) OVER (), (- ((vt0.c0 IN ()))), (- (TOTAL(t1.c54))) FROM vt0, t1; -- 0ms;
SELECT ALL t1.c54 FROM vt0, t1 WHERE (((((0.8597484331450583)OR('1461920175')))<<(((NULL)-(x''))))); -- 0ms;
SELECT (((t1.c89) IS FALSE) IN (((t1.c89)<=(t1.c0)))) FROM vt0 WHERE (((((((-904273007, x'', NULL)) BETWEEN ((x'b267', '1668663850', '1241006307')) AND ((0xffffffff846b733a, x'', NULL)))))>(((((x'', NULL, 0.9748645275114171))<(('', x'', 'D(')))))));SELECT DISTINCT ((CASE t1.c89  WHEN t1.c89 THEN NULL ELSE t1.c89 END) ISNULL) FROM vt0, t1; -- 0ms;
SELECT DISTINCT x'' COLLATE RTRIM FROM vt0, t1 WHERE ((((CASE x'2089'  WHEN '199628208' THEN x'' ELSE 0.020937059820000714 END))!=((((0.12952000327871438)<>('-954372782')))))); -- 0ms;
SELECT x'', IFNULL(DISTINCT ((((t1.c0)OR(vt0.c0)))AND(t1.c89)), (((t1.c54)) BETWEEN ((t1.c54)) AND ((t1.c54)))), ((((((t1.c89)OR(t1.c89)))AND(t1.c0)))<<(CAST(NULL AS BLOB))) FROM vt0, t1 WHERE ((((NULL, 0Xfffffffff6732863, 0.3983407527111458)) BETWEEN ((((('[C'))=((0.034569843814190926))), (0xfffffffffbcdddf3 IN ()), (((1634101255)) BETWEEN ((x'3446')) AND (('og'))))) AND ((CAST(0x705b2938 AS BLOB), ('1754671984' IN ('')), ((1.867847518E9)>>(NULL)))))); -- 0ms;
SELECT t1.c89 FROM t1; -- 0ms;
SELECT DISTINCT COUNT(((t1.c54) NOT NULL)) OVER (), (((t1.c0 COLLATE RTRIM, t1.c89, (t1.c0 IN ())))>=((((vt0.c0)<(t1.c0)), json_patch(t1.c54, vt0.c0), CAST(t1.c89 AS INTEGER)))), AVG(CASE WHEN t1.c0 THEN x'' END) FROM vt0 WHERE ((NOT ((~ (0.8744691279211559)))));SELECT (((t1.c89 IN (t1.c0)))*(t1.c0 COLLATE NOCASE)) FROM t1, vt0; -- 0ms;
SELECT ALL ((((0.418950740615213)IS(vt0.c0)))|((t1.c0 IN ()))) FROM t1, vt0 WHERE (''); -- 0ms;
SELECT DISTINCT CASE COUNT(*)  WHEN t1.c0 THEN ((((vt0.c0)OR(t1.c54)))AND(t1.c89)) WHEN '1687574714' THEN t1.c54 WHEN '0.7255887679267836' THEN '1486122562' ELSE (((t1.c0))>((t1.c89))) END FROM t1, vt0 NOT INDEXED; -- 0ms;
SELECT ALL (((t1.c0)) BETWEEN (((((t1.c0, t1.c0, t1.c89))<=((t1.c54, vt0.c0, t1.c89))))) AND ((NULL))) FROM t1, vt0; -- 0ms;
SELECT ALL ((((((((((t1.c0) ISNULL))OR(((((t1.c0)OR(vt0.c0)))OR(t1.c0)))))OR(((t1.c54)/(t1.c54)))))OR(((t1.c54) ISNULL))))AND(((t1.c0)OR(t1.c54)))) FROM t1;SELECT DISTINCT ((LIKELIHOOD(t1.c89, 0.17825501088919804))LIKE(((vt0.c0) ISNULL))), (((t1.c54))!=((t1.c0))) COLLATE NOCASE, ((t1.c89) BETWEEN (t1.c0) AND ((t1.c0 IN ()))) FROM t1, vt0 WHERE (((('' IN (x'', 0xda34f0)))=(((((x'')AND('')))AND(0.20530984553056797))))); -- 0ms;
SELECT DISTINCT CASE WHEN GROUP_CONCAT(vt0.c0) THEN CAST(t1.c89 AS INTEGER) ELSE (1607966077 IN (t1.c54)) END FROM vt0, t1 WHERE (CAST(-359175636 AS INTEGER)); -- 0ms;
SELECT DISTINCT SUM(1.66866385E9) FROM t1, vt0 WHERE ('1629618895'); -- 1ms;
SELECT DISTINCT CASE ((t1.c54)||(vt0.c0))  WHEN (~ (vt0.c0)) THEN ((vt0.c0) IS FALSE) WHEN ((t1.c0) NOT BETWEEN (t1.c54) AND (t1.c54)) THEN (t1.c54 IN ()) WHEN CASE WHEN t1.c54 THEN vt0.c0 ELSE t1.c54 END THEN AVG(t1.c89) END FROM vt0 GROUP BY ((LIKELIHOOD(t1.c0, 0.9555819233560634))AND((t1.c54 IN (t1.c89)))) HAVING ((((((((((((((((((t1.c0) IS FALSE))OR(COUNT(*))))OR(t1.c0)))AND((((vt0.c0)) NOT BETWEEN ((t1.c0)) AND ((t1.c89))))))OR(((vt0.c0) NOTNULL))))OR((NOT (vt0.c0)))))OR(CAST(t1.c89 AS BLOB))))OR(((vt0.c0)|(NULL)))))AND(((t1.c54) NOT BETWEEN ('g|,Rg%') AND (vt0.c0))));SELECT ALL CAST(t1.c89 AS REAL), ((((t1.c0 IN (t1.c0))))<=(((t1.c89 IN ())))), ((CAST(t1.c54 AS INTEGER)) ISNULL) FROM vt0, t1 WHERE ((((('-1790556916')AND(NULL)))AND(0.7619398820772679)) COLLATE NOCASE) ORDER BY ((CAST(t1.c0 AS BLOB)) NOT BETWEEN (((t1.c0)IS NOT(vt0.c0))) AND (CASE t1.c54  WHEN '' THEN vt0.c0 WHEN t1.c89 THEN t1.c89 WHEN vt0.c0 THEN 0.5183999477885219 END))  NULLS LAST, NULLIF(t1.c89, t1.c54) COLLATE NOCASE COLLATE NOCASE DESC  NULLS FIRST; -- 0ms;
SELECT DISTINCT (+ (GROUP_CONCAT(t1.c0))) FROM vt0, t1; -- 0ms;
SELECT DISTINCT (((((((t1.c89))>((0.41682859670743677))))OR(t1.c89 COLLATE NOCASE)))OR(t1.c54 COLLATE BINARY)), (((((vt0.c0)AND(t1.c54)))AND(t1.c0)) IN ()), NULL, (((t1.c0, 'Ir&''', t1.c0)) NOT BETWEEN ((((t1.c0) NOT NULL), (((x'', t1.c89, t1.c89)) BETWEEN ((t1.c0, x'2d8b', '-1309797368')) AND ((t1.c0, t1.c89, t1.c0))), t1.c0 COLLATE RTRIM)) AND ((CAST(vt0.c0 AS NUMERIC), (t1.c0 IN ()), CAST(t1.c0 AS INTEGER)))), ((((((((vt0.c0)AND(vt0.c0)))AND(t1.c54)))OR((((t1.c54, t1.c0, t1.c89))>=((t1.c0, '', t1.c89))))))OR(0.2809825960974732)), MIN(((t1.c0)IS NOT(t1.c54))), CASE WHEN TOTAL(vt0.c0) THEN ((vt0.c0)>>(t1.c54)) ELSE x'' END FROM t1;SELECT DISTINCT ((((((((t1.c54 COLLATE NOCASE)AND('Yw')))OR(((t1.c0)AND(t1.c0)))))AND(CASE WHEN 132925903 THEN vt0.c0 ELSE vt0.c0 END)))AND(UNLIKELY(DISTINCT vt0.c0))) FROM vt0, t1 WHERE (((CAST('^v' AS BLOB))IS NOT(NULL))); -- 0ms;
SELECT ALL t1.c89 FROM t1 WHERE (((0.7820335969845198 COLLATE BINARY)AND(CAST('' AS BLOB)))); -- 0ms;
SELECT ALL CASE vt0.c0 COLLATE NOCASE  WHEN ((t1.c0) ISNULL) THEN CASE t1.c54  WHEN t1.c0 THEN vt0.c0 ELSE t1.c54 END WHEN t1.c54 THEN CAST(t1.c0 AS REAL) WHEN ((t1.c54)>>(vt0.c0)) THEN (- (0.39295229934213627)) END, PERCENT_RANK() OVER (), (((vt0.c0)>(t1.c54)) IN ()) FROM t1 WHERE ((NOT ((~ (-1.728861886E9)))));SELECT ALL (((t1.c0 COLLATE NOCASE))>=(((- (t1.c0))))) FROM t1 WHERE (CAST(0.7331234258981685 COLLATE NOCASE AS TEXT)); -- 0ms;
SELECT DISTINCT t1.c89, (- (CAST(t1.c0 AS TEXT))), MIN((t1.c89 IN ())), ((CAST(t1.c89 AS BLOB)) BETWEEN (((NULL) IS TRUE)) AND ((+ (t1.c89)))), CAST((- (t1.c89)) AS BLOB) FROM vt0 WHERE ((((('-1630499095') NOTNULL)) BETWEEN (0.7217948529403672) AND (0.03836242549487201 COLLATE NOCASE)));SELECT DISTINCT COUNT(*) OVER () FROM vt0; -- 0ms;
SELECT ALL ((CAST(t1.c54 AS NUMERIC))AND(CAST(t1.c0 AS REAL))) FROM vt0, t1 WHERE (((MAX(0.2171166189014595, NULL, 'qg', '-1199195967')) BETWEEN ((NULL IN (-983984530))) AND (((((((((0.5279899921419271)AND(x'0e4b')))AND(x'')))OR('-460102278')))OR('1848932079'))))); -- 0ms;
SELECT DISTINCT rtreenode((((t1.c89, t1.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, t1.c54, t1.c54)) AND ((vt0.c0, NULL, t1.c54))), ((t1.c89) BETWEEN (t1.c89) AND (vt0.c0))) FROM t1, vt0 WHERE ((((- (0Xffffffffa5a5becf)))<(CAST(0.9193455029343802 AS INTEGER)))) ORDER BY ((((((vt0.c0) NOTNULL))OR(CAST(t1.c54 AS INTEGER))))AND(CASE WHEN t1.c89 THEN t1.c89 END)) ASC; -- 0ms;
SELECT (((((t1.c0))>=((t1.c54))))IS(LTRIM(t1.c89))) FROM t1 ORDER BY x'5d2f' COLLATE BINARY DESC  NULLS LAST; -- 0ms;
SELECT 'uQ䫕B' FROM t1, vt0 WHERE (TYPEOF((((x'')) BETWEEN ((1797925637)) AND ((x''))))); -- 0ms;
SELECT ALL (NULLIF(t1.c89, vt0.c0) IN ()), vt0.c0, vt0.c0 FROM vt0 ORDER BY TIME(t1.c89 COLLATE RTRIM, ((t1.c0)=(t1.c54)), (t1.c0 IN (t1.c54))) DESC  NULLS LAST;SELECT DISTINCT ((CAST(t1.c89 AS INTEGER))%(MAX(t1.c54))) FROM vt0 WHERE ('-460102278' COLLATE RTRIM) GROUP BY CASE WHEN ((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c54)) THEN ((t1.c54)%(t1.c54)) WHEN ((t1.c54) NOT NULL) THEN (t1.c89 IN (vt0.c0, vt0.c0)) WHEN ((t1.c89) NOT NULL) THEN (((t1.c54)) BETWEEN ((t1.c0)) AND ((vt0.c0))) END;SELECT DISTINCT ((CAST(t1.c0 AS NUMERIC))<<(MAX(t1.c89))) FROM t1 WHERE ((RTRIM(x'd932') IN ())) GROUP BY ((((((((((vt0.c0) BETWEEN (t1.c0) AND (t1.c89)))AND(((t1.c89)||(t1.c0)))))OR((vt0.c0 IN ()))))AND(0.2934371110507793)))AND((- (vt0.c0)))), CASE LTRIM(t1.c89)  WHEN ((vt0.c0)OR(vt0.c0)) THEN CAST(t1.c0 AS INTEGER) END, ((((vt0.c0) ISNULL)) NOTNULL);SELECT CASE (((t1.c0))>((t1.c89)))  WHEN ((t1.c54) NOT BETWEEN (t1.c54) AND (vt0.c0)) THEN CAST(t1.c54 AS BLOB) WHEN AVG(NULL) THEN ((x'79ae')>=(t1.c0)) WHEN CASE t1.c54  WHEN vt0.c0 THEN t1.c54 ELSE vt0.c0 END THEN ((t1.c54)<(t1.c89)) ELSE (NOT (0.16895474397446308)) END FROM t1;SELECT DISTINCT ((((t1.c54) NOT NULL))-((t1.c54 IN ()))) FROM vt0, t1 WHERE (0.43701286243045445); -- 0ms;
SELECT ALL ((((NOT (t1.c89))))<=((((t1.c0) BETWEEN (t1.c89) AND (t1.c0))))) FROM t1 WHERE ((0.46022434930811595 COLLATE BINARY IN ())); -- 0ms;
SELECT ((((vt0.c0)OR(vt0.c0)))AND(t1.c54)) COLLATE RTRIM, FIRST_VALUE((+ (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) OVER (), ((CASE WHEN x'' THEN vt0.c0 ELSE t1.c54 END)>=(((t1.c54) IS TRUE))) FROM vt0 WHERE ((((UPPER(DISTINCT x'f74a')))>=((((((0.20530984553056797)AND(x'')))OR(0.5450993506584523))))));SELECT ((CAST('SphX䧏i~mB' AS BLOB)) BETWEEN (((vt0.c0) NOT BETWEEN (t1.c54) AND (t1.c54))) AND (CAST(vt0.c0 AS TEXT))), CASE WHEN ((((((((vt0.c0)AND(vt0.c0)))AND(t1.c54)))OR(t1.c54)))AND(t1.c0)) THEN vt0.c0 WHEN (+ (t1.c0)) THEN ((t1.c89)LIKE(t1.c0)) WHEN ((vt0.c0) NOT BETWEEN (t1.c89) AND ('s鳋')) THEN CAST(t1.c0 AS TEXT) END, ((((((vt0.c0)OR(vt0.c0)))AND(t1.c89))) BETWEEN (CAST(t1.c89 AS REAL)) AND (CAST(t1.c54 AS REAL))) FROM vt0, t1; -- 0ms;
SELECT (((t1.c89 IN ())) IS FALSE) FROM t1, vt0; -- 0ms;
SELECT ALL ((TRIM(DISTINCT vt0.c0, t1.c54))IS NOT(((t1.c89) NOTNULL))) FROM vt0;SELECT ALL CASE WHEN ((t1.c89)>=(vt0.c0)) THEN LAST_INSERT_ROWID() END FROM t1, vt0; -- 0ms;
SELECT DISTINCT CASE WHEN SUM(vt0.c0) THEN (- (t1.c54)) ELSE (t1.c89 IN ()) END FROM vt0 CROSS JOIN t1 ON ((t1.c89 COLLATE NOCASE) NOT NULL); -- 1ms;
SELECT ALL ((CASE t1.c89  WHEN NULL THEN vt0.c0 ELSE vt0.c0 END) BETWEEN (((t1.c0)LIKE(t1.c0))) AND ((((t1.c54, t1.c54, t1.c89)) NOT BETWEEN (('1428032570', vt0.c0, t1.c54)) AND ((t1.c54, vt0.c0, t1.c89))))) FROM vt0, t1 ORDER BY (((t1.c0)) NOT BETWEEN ((CAST(vt0.c0 AS NUMERIC))) AND ((((((((((t1.c89)OR(t1.c54)))OR(t1.c89)))OR(vt0.c0)))AND(vt0.c0))))) ASC  NULLS FIRST; -- 0ms;
SELECT DISTINCT (((t1.c54)) BETWEEN ((UPPER(t1.c54))) AND ((CASE vt0.c0  WHEN 0.23357144112238104 THEN vt0.c0 END))) FROM vt0;SELECT DISTINCT ((CASE WHEN NULL THEN x'209f' WHEN t1.c0 THEN t1.c54 WHEN t1.c54 THEN 0.7576909781449602 END)>=(AVG(t1.c89))), (((((vt0.c0))!=((t1.c89)))) BETWEEN (((((t1.c89)OR(t1.c89)))OR(vt0.c0))) AND (((((x'32fb9d01')AND(t1.c89)))OR(t1.c54)))), (((+ (t1.c54))) BETWEEN ((('VQ\r0F') BETWEEN (t1.c89) AND (t1.c0))) AND (((t1.c89) NOT NULL))), CAST(vt0.c0 AS INTEGER) COLLATE RTRIM, CAST(NULL AS INTEGER) COLLATE RTRIM COLLATE BINARY FROM t1, vt0; -- 0ms;
SELECT DISTINCT CASE MAX(t1.c0)  WHEN (NOT (vt0.c0)) THEN ((t1.c54) BETWEEN (t1.c0) AND (vt0.c0)) ELSE (NOT ('1078521717')) END, json_valid((t1.c89 IN ())), (x'53871b8b' IN ()) FROM t1 GROUP BY (((t1.c0)) BETWEEN ((CASE vt0.c0  WHEN vt0.c0 THEN t1.c89 END)) AND ((((((((((t1.c54)OR(t1.c89)))AND(t1.c89)))AND(t1.c89)))OR(vt0.c0))))) HAVING CAST(t1.c54 AS INTEGER);SELECT DISTINCT vt0.c0 FROM t1;SELECT ALL CASE ((vt0.c0) NOT BETWEEN (t1.c89) AND (t1.c89))  WHEN ((vt0.c0) IS FALSE) THEN ((NULL) ISNULL) ELSE ((((t1.c54)AND(vt0.c0)))AND(t1.c89)) END, ((vt0.c0)>(t1.c89)) COLLATE BINARY, (+ ((t1.c0 IN ()))) FROM t1, vt0 WHERE ((((((('0.7820335969845198')+(NULL)))OR(((((x'')AND('-458870735')))AND('-2125698974')))))AND(JULIANDAY(0.196797041409967, NULL, NULL)))); -- 0ms;
SELECT DISTINCT (CASE WHEN t1.c89 THEN t1.c89 ELSE t1.c54 END IN ((~ (t1.c0)), json_extract(t1.c89, vt0.c0))) FROM vt0 RIGHT OUTER JOIN t1 ON CAST(((t1.c54) IS FALSE) AS NUMERIC); -- 0ms;
SELECT t1.c0, (((((t1.c89, vt0.c0, t1.c0, -5.9443955E7, t1.c89))==((t1.c54, t1.c0, t1.c89, t1.c89, t1.c0)))) BETWEEN (((((NULL)AND(t1.c0)))OR(t1.c0))) AND (CAST(vt0.c0 AS BLOB))), ((((t1.c89)%(t1.c54)))|(CAST(x'' AS NUMERIC))), ((STRFTIME(vt0.c0, t1.c0, t1.c54)) NOT NULL), CASE WHEN CASE WHEN t1.c89 THEN t1.c0 ELSE t1.c0 END THEN CASE WHEN t1.c89 THEN vt0.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c54 THEN 'tR Y?y ' END ELSE ((vt0.c0) IS TRUE) END FROM vt0 CROSS JOIN t1 ON (((((t1.c54)) NOT BETWEEN ((t1.c54)) AND ((vt0.c0)))) BETWEEN (((t1.c0)%(t1.c54))) AND (SQLITE_COMPILEOPTION_USED(-2073332934))) UNION SELECT DISTINCT TRIM(DISTINCT (t1.c54 IN ()), AVG(t1.c89)), (NOT ((t1.c89 IN (t1.c89, t1.c54)))), ((t1.c0)*((t1.c54 IN ()))), CAST((t1.c54 IN (t1.c0)) AS NUMERIC), (((((~ (t1.c0)))AND(CASE WHEN vt0.c0 THEN t1.c0 END)))AND(TOTAL(t1.c89))) FROM t1 WHERE (SQLITE_COMPILEOPTION_GET(json_insert('2007379704', x'', -1319060798)));SELECT DISTINCT ((x'8fab') BETWEEN (0Xfffffffffc74f50d) AND (vt0.c0)), COUNT(*) OVER (), ((((t1.c0)AND(t1.c89)))&(((x'') IS FALSE))) FROM t1, vt0; -- 0ms;
SELECT DISTINCT SUM((((t1.c89))>=((x'')))) FROM vt0, t1 WHERE ((((x'' IN ())) BETWEEN (2.15635777E8) AND (CASE WHEN '0.8252159933103789' THEN 1.797925637E9 END))) LIMIT 581305102; -- 0ms;
SELECT DISTINCT vt0.c0, (NOT ((+ (t1.c54)))), json_type((((t1.c0, t1.c89, vt0.c0))!=((t1.c54, vt0.c0, t1.c54)))) FROM vt0 WHERE (((('UX\#(<Zj')) NOT BETWEEN ((('' IN ()))) AND (((x'9f25' IN ())))));SELECT DISTINCT CAST(vt0.c0 AS BLOB) FROM t1;SELECT DISTINCT ((t1.c54 COLLATE NOCASE)==(SUM(t1.c89))) FROM t1, vt0 GROUP BY (('') IS TRUE) COLLATE RTRIM, ((t1.c0)GLOB(0.6903896604399318)), ((CAST('dq' AS TEXT))<>((~ (t1.c54)))), (((NULLIF(t1.c54, 0.37608751567417686), ((((vt0.c0)OR(vt0.c0)))AND(t1.c89)), ((NULL) NOTNULL)))>=((((t1.c0) ISNULL), t1.c89, t1.c89 COLLATE RTRIM))), (((t1.c54)) BETWEEN ((((t1.c89)>(t1.c54)))) AND ((((t1.c0) BETWEEN (t1.c89) AND (t1.c54))))) HAVING CASE WHEN ((t1.c89)LIKE(t1.c54)) THEN CAST(t1.c0 AS NUMERIC) WHEN ((t1.c0)GLOB(0.4481286336738286)) THEN ((t1.c54) NOT BETWEEN (vt0.c0) AND (t1.c54)) WHEN ((t1.c89)GLOB(vt0.c0)) THEN CAST(t1.c0 AS TEXT) END; -- 0ms;
SELECT ALL COALESCE(((('JR', '', x'48e6', t1.c89, vt0.c0))!=((t1.c0, t1.c0, t1.c0, t1.c89, 0.889934464681523))), vt0.c0 COLLATE BINARY, UNLIKELY(t1.c0), t1.c89) FROM vt0, t1 WHERE ((((NULL) BETWEEN (NULL) AND (0.9193455029343802)) IN ())); -- 0ms;
SELECT DISTINCT GROUP_CONCAT((((t1.c89))<>((t1.c54)))) FROM vt0, t1 WHERE ((((((0.44074582331186507)=(481420912))))<=((((0.13443461304995097) IS TRUE))))) ORDER BY LOWER(((t1.c89) NOT BETWEEN (t1.c0) AND ('+J'))), ((t1.c54)>=(t1.c54)) COLLATE NOCASE  NULLS LAST; -- 1ms;
SELECT ALL (- ((('1847064396')=(t1.c89)))) FROM t1, vt0 LIMIT 978453592; -- 0ms;
SELECT ALL (- (((vt0.c0)<>(t1.c89)))), CAST((0.01297343506368076 IN ()) AS TEXT), ((((t1.c54)!=(t1.c54))) IS TRUE) FROM vt0, t1 WHERE (CAST(((NULL)<=(NULL)) AS TEXT)) GROUP BY (((((t1.c0, t1.c54, vt0.c0))<((t1.c54, t1.c0, vt0.c0)))) NOTNULL), vt0.c0, CASE WHEN t1.c0 THEN t1.c0 WHEN vt0.c0 THEN t1.c89 WHEN vt0.c0 THEN t1.c0 END COLLATE RTRIM HAVING ((CAST(t1.c89 AS NUMERIC))<((((t1.c89, t1.c54, t1.c89)) BETWEEN ((t1.c54, vt0.c0, t1.c89)) AND ((t1.c89, t1.c0, t1.c0))))); -- 0ms;
SELECT ALL vt0.c0 FROM vt0 LEFT OUTER JOIN t1 ON t1.c0; -- 0ms;
SELECT DISTINCT SUM((((t1.c89)) NOT BETWEEN ((t1.c0)) AND (('733818040')))) OVER (), ((((((t1.c0)AND(vt0.c0)))OR(0x0))) BETWEEN (((t1.c89)||(t1.c54))) AND (((t1.c54)>>(t1.c54)))), (NOT ((((x''))>=((t1.c54))))), t1.c54, MIN(((t1.c0)>>(t1.c0))) FROM vt0 WHERE ((((('') BETWEEN (NULL) AND (x'')))*(CASE x''  WHEN '-1319060798' THEN x'' WHEN x'' THEN x'5b5d01df' WHEN 0.2549030900065139 THEN x'41f8' END))) GROUP BY (((- (t1.c0))) NOT BETWEEN (CASE WHEN vt0.c0 THEN t1.c89 WHEN t1.c0 THEN x'' WHEN t1.c89 THEN vt0.c0 WHEN t1.c0 THEN t1.c54 WHEN vt0.c0 THEN vt0.c0 END) AND ('')) HAVING (NOT (((((t1.c0)AND(t1.c89)))AND(t1.c54))));SELECT DISTINCT (((vt0.c0)||(t1.c54)) IN (MAX(x''))) FROM t1, vt0 WHERE ((((NOT ('in/H5o')))!=((((('')OR(NULL)))OR(0.020365295178602638))))); -- 1ms;
SELECT ALL t1.c0, CASE WHEN ((t1.c0)OR(t1.c89)) THEN (((t1.c54)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) ELSE CAST(vt0.c0 AS TEXT) END, (- ((NOT (vt0.c0)))) FROM t1, vt0 WHERE (CASE WHEN json_object('3y', 0.5022460211265051) THEN (NULL IN ()) END) GROUP BY ((t1.c89) BETWEEN (t1.c54) AND ('Ee')), t1.c89, CAST(((t1.c89) NOT BETWEEN (t1.c89) AND (t1.c0)) AS NUMERIC) HAVING CAST(CAST(vt0.c0 AS BLOB) AS REAL); -- 0ms;
SELECT DISTINCT ROW_NUMBER() OVER ( ORDER BY TRIM(((t1.c0)AND(t1.c89))) ASC, ((CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c54 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END) NOTNULL) ASC  NULLS LAST ROWS BETWEEN  UNBOUNDED PRECEDING AND  CURRENT ROW), ((LIKELY(DISTINCT t1.c54)) IS FALSE), -1035497630 FROM t1, vt0; -- 0ms;
SELECT DISTINCT LEAD(x'', ((((t1.c89, t1.c54, t1.c54)) NOT BETWEEN ((t1.c54, t1.c0, t1.c54)) AND ((t1.c0, '1190655972', t1.c89))) IN (t1.c0)), ((((t1.c0)*(t1.c54)))LIKE((((t1.c0)) BETWEEN ((t1.c0)) AND ((t1.c89)))))) OVER (), (NOT (CAST(vt0.c0 AS REAL))), (((((t1.c0, t1.c54, vt0.c0))<((t1.c0, t1.c89, 0.4088356287436996)))) BETWEEN ((t1.c54 IN (x''))) AND (MAX(')v^\r'))) FROM t1;SELECT ALL ((((('-105188220'))==((t1.c0))))>=((~ (vt0.c0)))) FROM t1, vt0; -- 0ms;
SELECT DISTINCT TOTAL((~ (t1.c89))) FROM vt0, t1 WHERE ((NOT (((0.43701286243045445)&('1170188427'))))); -- 0ms;
SELECT ALL ((((t1.c89)<=(t1.c0))) IS TRUE), CASE ((t1.c54) BETWEEN (vt0.c0) AND (t1.c54))  WHEN t1.c89 COLLATE RTRIM THEN ((vt0.c0)+(t1.c54)) END, ((((vt0.c0) NOT NULL))*(((0.19699604818178496) ISNULL))) FROM vt0 WHERE (((NULL COLLATE NOCASE)+(((((NULL)AND(NULL)))AND(NULL))))) ORDER BY ((((t1.c0) NOT BETWEEN (0.7217948529403672) AND (vt0.c0)))<>((t1.c54 IN ()))) DESC;SELECT DISTINCT NTILE(((((vt0.c0)!=(vt0.c0)))-(NULL))) OVER ( GROUPS BETWEEN x'' FOLLOWING AND  CURRENT ROW EXCLUDE TIES) FROM vt0 WHERE (UNLIKELY(DISTINCT CAST(NULL AS NUMERIC))) GROUP BY (- (t1.c54)) COLLATE RTRIM, t1.c54, CAST(t1.c89 AS TEXT) HAVING CASE 0.0  WHEN t1.c54 THEN t1.c54 ELSE vt0.c0 END COLLATE BINARY;SELECT ((vt0.c0 COLLATE RTRIM)AND(SUM(t1.c54))) FROM vt0 WHERE (UNICODE(STRFTIME(NULL, '2', 'L}GTe(')));SELECT ALL AVG(x'e2dff26e') FROM t1 NATURAL JOIN vt0 GROUP BY ((((vt0.c0)>=(t1.c89))) NOTNULL), t1.c89, (((((t1.c54))<=((t1.c89)))) NOT BETWEEN (CASE vt0.c0  WHEN t1.c0 THEN 0Xffffffffa5a5becf WHEN 0xffffffffc78d9f8a THEN vt0.c0 WHEN t1.c89 THEN t1.c0 ELSE t1.c0 END) AND (((t1.c89)>=(t1.c54)))); -- 1ms;
SELECT ALL CAST((((t1.c0))<((t1.c89))) AS REAL) FROM vt0;SELECT CASE WHEN CAST(vt0.c0 AS NUMERIC) THEN CAST(t1.c89 AS REAL) ELSE CAST(t1.c0 AS NUMERIC) END, (GROUP_CONCAT(vt0.c0) IN ()), (~ ((t1.c0 IN ()))) FROM vt0, t1; -- 0ms;
SELECT DISTINCT FIRST_VALUE(CASE ((0Xfffffffff2662894) BETWEEN (t1.c0) AND (t1.c89))  WHEN CAST(t1.c0 AS NUMERIC) THEN CASE t1.c0  WHEN t1.c54 THEN 'z' ELSE t1.c54 END END) OVER ( PARTITION BY ((((((((((t1.c89)AND(t1.c89)))OR(t1.c54)))AND(t1.c54)))OR(t1.c0)))|(((vt0.c0) NOT NULL))), t1.c89 ORDER BY ((((0.2541240478150003, vt0.c0, t1.c0, t1.c54, t1.c0))<=((t1.c89, vt0.c0, t1.c0, vt0.c0, t1.c0))) IN ()) ASC) FROM t1;SELECT DISTINCT (NOT (t1.c89)) FROM vt0 GROUP BY ((CAST(vt0.c0 AS BLOB))IS NOT(SQLITE_COMPILEOPTION_USED(t1.c0))) HAVING (((t1.c89, 0Xffffffffa58839e5, NULL)) NOT BETWEEN ((IFNULL(t1.c0, vt0.c0), ((vt0.c0) ISNULL), ABS(t1.c0))) AND (((t1.c0 IN (vt0.c0)), (t1.c89 IN ()), '-751374655')));SELECT DISTINCT (CASE WHEN t1.c54 THEN t1.c0 WHEN vt0.c0 THEN t1.c89 WHEN t1.c0 THEN vt0.c0 END IN (((0.44837863742131545)+(t1.c89)))), ((TOTAL(t1.c0))GLOB(t1.c0)), ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE t1.c89 END) NOTNULL), t1.c0, TOTAL((NOT (t1.c0))) FROM t1, vt0 NOT INDEXED; -- 0ms;
SELECT DISTINCT (((t1.c89)) BETWEEN ((((t1.c89)*(vt0.c0)))) AND ((t1.c0))), (NOT ((t1.c89 IN (t1.c0, vt0.c0)))), SUM(vt0.c0) OVER () FROM vt0 WHERE (((((((((((((((((x'')OR(NULL)))OR(NULL)))OR(2146772934)))AND('199628208')))OR(CASE WHEN x'' THEN x'' WHEN x'' THEN 'm9' WHEN '-1981974192' THEN x'f8c9' ELSE -8.30616511E8 END)))OR(CAST(NULL AS TEXT))))OR((~ ('0.6661696131329081')))))AND((('') NOT BETWEEN (0.20383007176588452) AND (x''))))) GROUP BY ((INSTR(t1.c89, t1.c89))/(((t1.c0) NOT NULL))) HAVING ((~ (t1.c89)) IN ());SELECT DISTINCT COUNT(*) OVER ( ORDER BY (~ ((~ (t1.c0))))) FROM vt0, t1 WHERE (((0.8217328201124099 COLLATE BINARY)*(CASE 'T'  WHEN -1055712329 THEN '' WHEN -1572570901 THEN '-2101794668' WHEN NULL THEN '199628208' ELSE x'94f1' END))); -- 0ms;
SELECT DISTINCT 0.36815079717279864, CAST((((t1.c54, t1.c89, t1.c54)) BETWEEN ((vt0.c0, vt0.c0, t1.c89)) AND ((t1.c0, t1.c54, -9.04273007E8))) AS REAL), LEAD((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE x'' END IN ()), ((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))*(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))), x'805c') OVER () FROM vt0 WHERE (CASE WHEN CAST(x'a2a2' AS BLOB) THEN ((0.20545804663767142)IS NOT(1617414356)) ELSE ((1486122562) NOT BETWEEN ('450845933') AND (0X7400acc2)) END);SELECT DISTINCT ((((vt0.c0)<=(t1.c54))) NOTNULL), TOTAL((- (vt0.c0))), TYPEOF(DISTINCT (('998763662')<>(t1.c89))) FROM t1, vt0; -- 0ms;
SELECT DISTINCT ((((t1.c89)GLOB('-1024791872')))<<(CAST(t1.c0 AS BLOB))), ((((((vt0.c0) IS TRUE))AND(vt0.c0 COLLATE NOCASE)))OR((~ (t1.c0)))), ((((t1.c0) IS TRUE)) IS TRUE) FROM t1, vt0 WHERE ((((NULL, '', 0.741218154859028)) NOT BETWEEN (((((0.37608751567417686))!=(('-1403356082'))), (('653331693')>>(NULL)), (0.5685886693496046 IN (x'')))) AND ((((x'')IS NOT('''tmXlc!?J')), (((NULL, x'fbf3b90c', 0xffffffff956c3c79))<=((NULL, NULL, x''))), HEX('-1253732392'))))); -- 0ms;
SELECT DISTINCT SQLITE_COMPILEOPTION_GET((+ (t1.c0))) FROM t1; -- 0ms;
SELECT ALL ((CAST(t1.c54 AS INTEGER)) NOT BETWEEN ('599613461') AND (AVG(vt0.c0))) FROM t1 WHERE (((NULL)==(NULL)) COLLATE BINARY) GROUP BY (x'' IN ());SELECT ALL ((((t1.c89) NOT BETWEEN (vt0.c0) AND (t1.c89)))<<(((t1.c0) IS TRUE))), CAST(t1.c54 AS TEXT), (((t1.c54) ISNULL) IN ()) FROM vt0;SELECT ALL t1.c54 FROM vt0, t1 GROUP BY CAST(((vt0.c0)<(vt0.c0)) AS REAL); -- 1ms;
SELECT ((CASE vt0.c0  WHEN vt0.c0 THEN t1.c54 END)!=((((t1.c54))=((vt0.c0))))) FROM vt0, t1 WHERE (((((x'')IS NOT(4.81420912E8)))GLOB((('X')+(NULL))))); -- 0ms;
SELECT DISTINCT (((((t1.c54, t1.c0, vt0.c0))>((vt0.c0, t1.c0, t1.c89))))AND(('	<&Z[hbA' IN (t1.c89)))) FROM vt0 NOT INDEXED, t1 ORDER BY (- ((vt0.c0 IN ()))), vt0.c0 DESC LIMIT 932626149 OFFSET -1753436171; -- 0ms;
SELECT ALL (9.93779192E8 COLLATE BINARY IN (1.108166555E9)) FROM t1; -- 0ms;
SELECT CASE TYPEOF(vt0.c0)  WHEN CASE t1.c89  WHEN t1.c0 THEN t1.c54 END THEN ((t1.c0) NOTNULL) END FROM vt0, t1 WHERE ((~ ((NOT (NULL))))); -- 0ms;
SELECT DISTINCT (((NULL) IS TRUE) IN (((t1.c54) IS FALSE))) FROM t1 GROUP BY TYPEOF(DISTINCT CAST(t1.c54 AS NUMERIC)); -- 0ms;
SELECT DISTINCT ((((((((((((CAST(t1.c54 AS REAL))OR(vt0.c0 COLLATE RTRIM)))AND((((vt0.c0))!=((vt0.c0))))))OR(vt0.c0 COLLATE RTRIM)))OR(((vt0.c0) BETWEEN (t1.c0) AND (t1.c89)))))AND((NOT (t1.c54)))))OR(((vt0.c0)LIKE(vt0.c0)))) FROM vt0;SELECT DISTINCT (((t1.c89 IN ())) BETWEEN ((NOT (t1.c54))) AND ((((t1.c89, t1.c54, x'', t1.c54, vt0.c0)) BETWEEN ((t1.c54, t1.c54, -536468999, t1.c0, t1.c0)) AND ((t1.c54, t1.c0, t1.c54, '0.7217948529403672', t1.c54))))) FROM vt0;SELECT ALL t1.c89 FROM vt0 WHERE (CASE (('-344390328') NOT BETWEEN (0.6820659454512198) AND ('-2125698974'))  WHEN ((NULL)AND(NULL)) THEN ((x'') BETWEEN ('132925903') AND (x'')) END);SELECT ALL ((((t1.c54) BETWEEN (t1.c54) AND (vt0.c0)))>>(((vt0.c0) NOT NULL))), AVG((((NULL))<>((vt0.c0)))) OVER (), GROUP_CONCAT(t1.c89) FROM t1;SELECT DISTINCT TOTAL(((1.32925903E8) NOT NULL)) OVER (), ((((((vt0.c0) NOT BETWEEN (t1.c0) AND (x'')))OR(t1.c0)))OR(CASE vt0.c0  WHEN 4.98142065E8 THEN vt0.c0 WHEN t1.c54 THEN vt0.c0 WHEN t1.c89 THEN 'n챁6&miﺶz' ELSE vt0.c0 END)), '#蓠<' FROM t1 CROSS JOIN vt0 ON (((t1.c54)GLOB(NULL)) IN ()) WHERE ((CASE NULL  WHEN '' THEN 0.1616855523793499 WHEN 0X3506adfb THEN '157767157' WHEN '' THEN 0.5534384100081602 WHEN NULL THEN x'' WHEN '1108166555' THEN -27772526 END IN ())) EXCEPT SELECT ALL LIKELY(vt0.c0) COLLATE RTRIM, COUNT(*) OVER (), (((NOT (t1.c54))) NOTNULL) FROM vt0, t1; -- 0ms;
SELECT DISTINCT TYPEOF(CAST(vt0.c0 AS TEXT)), NTH_VALUE(((CAST(t1.c0 AS INTEGER)) IS TRUE), ((SUBSTR(t1.c0, t1.c89)) BETWEEN (((t1.c54)>>(t1.c0))) AND (((((((((((((t1.c89)AND(t1.c54)))OR(t1.c54)))AND(t1.c0)))AND(t1.c89)))AND(-1.403356082E9)))OR(t1.c89))))) OVER (), t1.c0 FROM t1 WHERE ((((x'522f')OR('<783 -2698697373832199615 1713 384:73-454t248:1855:-5606602840063372215:tz3')) IN (0.3159604456270243 COLLATE NOCASE)));SELECT LEAD(vt0.c0, (((vt0.c0 COLLATE NOCASE))<(((+ (vt0.c0))))), (((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))) BETWEEN (NULL) AND ((((NULL))=((vt0.c0)))))) OVER ( PARTITION BY ((((t1.c0) ISNULL)) NOT BETWEEN (t1.c54) AND (NULL)), (((t1.c89)) NOT BETWEEN ((CAST(vt0.c0 AS BLOB))) AND (((vt0.c0 IN ())))), (- ((~ (x'')))), (((t1.c54))<((x'68aa'))), CASE t1.c0  WHEN t1.c54 THEN x'9696' ELSE t1.c54 END COLLATE RTRIM, (((t1.c89 IN ()))GLOB(((((vt0.c0)AND(t1.c54)))OR(t1.c89)))) ROWS  UNBOUNDED PRECEDING EXCLUDE GROUP) FROM vt0;SELECT DISTINCT LEAD(CASE ((t1.c0) IS FALSE)  WHEN CAST(t1.c89 AS BLOB) THEN t1.c54 ELSE ((((vt0.c0)OR(vt0.c0)))AND(t1.c89)) END, ((t1.c54) BETWEEN (((t1.c0)IS(t1.c89))) AND ((((t1.c89))>((t1.c0))))), 0.21213368254544662 COLLATE BINARY) OVER () FROM vt0, t1 WHERE (CASE WHEN (~ (x'3b68')) THEN (NULL IN ()) ELSE x'' COLLATE NOCASE END) LIMIT -143778901; -- 0ms;
SELECT DISTINCT CAST(NULLIF(DISTINCT vt0.c0, vt0.c0) AS REAL) FROM t1, vt0 WHERE ((((0Xfffffffff14a373d)OR(NULL)) IN (x''))) GROUP BY t1.c89, (NOT (((vt0.c0) NOT BETWEEN (t1.c54) AND (vt0.c0)))), t1.c54 COLLATE RTRIM, ((((((t1.c89)AND('580392485')))OR(t1.c54)))LIKE(1.32925903E8)), CAST(CASE vt0.c0  WHEN t1.c0 THEN t1.c0 ELSE t1.c89 END AS NUMERIC), t1.c89, -5.9443955E7 HAVING 0.1938804304978805; -- 0ms;
SELECT ((((((t1.c54) IS FALSE))AND(CAST(vt0.c0 AS NUMERIC))))OR('')), (((vt0.c0)IS(vt0.c0)) IN ((('-1177441265')+(t1.c89)), ((t1.c89) IS TRUE))), CASE CAST(t1.c0 AS NUMERIC)  WHEN ((t1.c54) BETWEEN (t1.c54) AND (t1.c0)) THEN ((t1.c54) IS FALSE) ELSE t1.c0 COLLATE NOCASE END FROM t1 WHERE (((((((x'')IS(-5.33631404E8)))AND((NOT ('448911678')))))AND(0.46883314141440036)));SELECT ALL ((t1.c0 COLLATE NOCASE) NOT NULL) FROM t1, vt0 WHERE ((NOT (((('JU'))=((0.7658135207844096)))))); -- 0ms;
SELECT ((vt0.c0)AND(LIKELIHOOD(vt0.c0, 0.25323545070779085))), x'', AVG(LIKELIHOOD(t1.c0, 0.958478820319794)) FROM vt0 WHERE (((((CAST(x'' AS INTEGER))OR(NULL COLLATE BINARY)))AND((~ (x''))))) ORDER BY (((('')OR((vt0.c0 IN ()))))OR((t1.c54 IN ()))) ASC  NULLS FIRST, (((CASE WHEN t1.c89 THEN t1.c0 ELSE t1.c89 END))>((((((((((vt0.c0)AND(0.6408085723668148)))AND(t1.c89)))AND(t1.c0)))OR(t1.c0)))));SELECT ALL x'', TRIM(((t1.c89)+(vt0.c0)), (((t1.c54))<=((0.7778477997886417)))), ((((t1.c0) NOT BETWEEN (t1.c54) AND (t1.c0)))=(((t1.c54) NOT BETWEEN (t1.c54) AND ('1714313288')))) FROM vt0 WHERE ((((((NULL)) BETWEEN ((68677774)) AND (('-1984670560')))) IS TRUE));SELECT (((((((t1.c0)AND(t1.c89)))OR(t1.c89)), (t1.c0 IN ()), (((t1.c89)) BETWEEN ((vt0.c0)) AND ((t1.c54))), (((t1.c89, t1.c89, x'')) BETWEEN ((t1.c0, t1.c0, t1.c0)) AND ((vt0.c0, vt0.c0, x''))), t1.c0 COLLATE NOCASE))>=(((- (t1.c54)), vt0.c0, LIKELY(t1.c89), (t1.c0 IN (x'', t1.c0)), ((0.35383005715695615)>(t1.c89))))) FROM vt0, t1; -- 0ms;
SELECT ALL NULL FROM t1, vt0 WHERE ((~ (CAST(x'8c56' AS BLOB)))); -- 0ms;
SELECT ALL ((- (t1.c89)) IN (t1.c0 COLLATE BINARY)), CAST(CAST(t1.c0 AS REAL) AS REAL), CAST(vt0.c0 AS NUMERIC) COLLATE NOCASE FROM t1, vt0 WHERE (((IFNULL(0.11006615389531138, '1714313288')) BETWEEN (0.889934464681523 COLLATE NOCASE) AND ((((((((('')AND(x'2057')))AND(0xffffffffb95f3717)))OR(0Xffffffffea976a2c)))AND(x''))))); -- 0ms;
SELECT DISTINCT NULL FROM t1, vt0 WHERE (((((('98812615'))>=((x''))))|(LAST_INSERT_ROWID()))); -- 0ms;
SELECT ALL vt0.c0 FROM vt0, t1 GROUP BY CAST(COALESCE(DISTINCT vt0.c0, vt0.c0) AS BLOB); -- 0ms;
SELECT ALL ((((t1.c0) NOT BETWEEN (t1.c89) AND (t1.c89)))<(((((((((t1.c54)AND(0.62244755732608)))AND(0X2014b127)))AND(t1.c0)))OR(vt0.c0)))) FROM vt0;SELECT ALL (((t1.c0)) NOT BETWEEN ((((((vt0.c0)OR(t1.c54)))OR(vt0.c0)))) AND ((t1.c54 COLLATE RTRIM))), (NOT ((((t1.c89, t1.c0, t1.c89))>=((t1.c54, t1.c0, t1.c89))))), ((((((((vt0.c0)OR(CASE t1.c54  WHEN vt0.c0 THEN t1.c0 ELSE '泔' END)))AND(((t1.c0) IS TRUE))))AND(CAST(t1.c0 AS BLOB))))AND(t1.c89)) FROM vt0, t1 WHERE (((((NULL)>(x'')))<=(((x'') NOTNULL)))) GROUP BY (((x''))>=(((NOT (t1.c54))))); -- 0ms;
SELECT ALL COUNT(*) OVER () FROM vt0, t1 NOT INDEXED WHERE (((((((((((x'')OR(x'e5e0')))AND('1802085498')))AND(x'')))OR('-1678825757'))) BETWEEN (((0.6909089515196507) NOTNULL)) AND ((x'' IN ())))); -- 0ms;
SELECT DISTINCT t1.c54 FROM t1 WHERE ((((NULL IN ())) IS FALSE)) GROUP BY ((x'')>=((((t1.c0))=((t1.c54))))) ORDER BY CAST(NULLIF(DISTINCT t1.c89, t1.c0) AS NUMERIC); -- 0ms;
SELECT ABS(vt0.c0) COLLATE NOCASE FROM t1 WHERE (((((((NULL)AND(-1949672918)))AND(x'')))OR(x'' COLLATE BINARY)));SELECT DISTINCT (((t1.c0, vt0.c0, t1.c89)) BETWEEN ((NULL, ((vt0.c0) NOT BETWEEN (vt0.c0) AND (t1.c0)), ((((-2.125698974E9)OR(t1.c89)))AND(vt0.c0)))) AND ((0.8047880391675489, ((t1.c54)-(t1.c89)), (- (vt0.c0))))) FROM t1, vt0; -- 0ms;
SELECT DISTINCT COUNT(*) FILTER(WHERE (- (NULL))) OVER () FROM vt0, t1 LIMIT 0 OFFSET 498142065; -- 4ms;
SELECT DISTINCT CAST(t1.c0 COLLATE RTRIM AS BLOB), x'd0cd5b7b', ((t1.c0) NOT NULL) FROM t1; -- 0ms;
SELECT DISTINCT CAST(t1.c89 COLLATE BINARY AS INTEGER) FROM t1 WHERE (((CASE WHEN 0xe117ece THEN '1198879590' WHEN 'EK' THEN '-27772526' WHEN 0xffffffffdf94495b THEN -1324791562 WHEN 0Xfffffffffb1008ca THEN NULL WHEN -359175636 THEN NULL ELSE 0.3647278356039716 END) NOT BETWEEN ((('~*')<('-110415468'))) AND (((x'')GLOB(-1175042076))))); -- 1ms;
SELECT DISTINCT vt0.c0 FROM t1, vt0 WHERE (-783205217) ORDER BY ((((t1.c89)<(t1.c54)))&(((t1.c0)%(t1.c0)))) ASC; -- 0ms;
SELECT ALL ((((t1.c54)AND((~ (t1.c0)))))OR(CAST(t1.c0 AS NUMERIC))), json_object(((t1.c54) NOT BETWEEN (t1.c54) AND (t1.c89)), ((t1.c54)AND(t1.c54))), vt0.c0, MIN(((t1.c89) ISNULL)), IFNULL(DISTINCT '-1319060798', ((((vt0.c0)OR(t1.c54)))AND(-618570601))) FROM t1;SELECT DISTINCT (((t1.c0)) NOT BETWEEN ((t1.c89)) AND ((t1.c0))) COLLATE BINARY, ((((vt0.c0)<=(t1.c89)))<>(((((t1.c0)AND(t1.c0)))AND(vt0.c0)))), LAST_INSERT_ROWID() FROM vt0, t1; -- 0ms;
SELECT ALL ((((((t1.c89)<<(t1.c0)))AND(t1.c54)))OR(((vt0.c0) BETWEEN (t1.c89) AND (t1.c89)))) FROM vt0, t1 WHERE (TIME(CAST(0.8547147774602623 AS TEXT), ((0.5461386770403404) IS TRUE), ((-1.0518822E8) NOTNULL))); -- 0ms;
SELECT ALL CASE WHEN ((vt0.c0) NOT BETWEEN (t1.c0) AND (t1.c89)) THEN (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((t1.c0, t1.c0, t1.c0)) AND ((t1.c54, t1.c0, t1.c0))) ELSE CAST(vt0.c0 AS REAL) END FROM vt0, t1; -- 0ms;
SELECT DISTINCT (((CAST(vt0.c0 AS BLOB)))==(((t1.c0 IN ())))) FROM t1;SELECT DISTINCT ((CASE WHEN t1.c54 THEN t1.c0 ELSE vt0.c0 END)AND(((t1.c54)LIKE(t1.c54)))) FROM vt0;SELECT ALL ((IFNULL(t1.c0, t1.c89)) NOT BETWEEN (CASE t1.c0  WHEN t1.c89 THEN t1.c89 ELSE t1.c0 END) AND ((((t1.c0, 1690865403, t1.c54, '-1786688665', t1.c89))==((t1.c54, t1.c0, t1.c89, vt0.c0, t1.c54))))) FROM t1, vt0; -- 0ms;
SELECT (((((t1.c0) BETWEEN (vt0.c0) AND (t1.c54)), ((vt0.c0)>=(t1.c54)), ((t1.c54)<=(t1.c54))))<=((((((((((t1.c54)OR(t1.c89)))OR(t1.c89)))AND(t1.c0)))AND(vt0.c0)), ((vt0.c0)||(vt0.c0)), CAST(vt0.c0 AS TEXT)))), COUNT(*) OVER (), vt0.c0 FROM t1 WHERE ((((0.18681178681436295 IN ())) NOT BETWEEN (x'') AND (((0.12755983808355675)<=(0.8139771980960786))))) GROUP BY CASE WHEN (((vt0.c0, t1.c54, t1.c54))<((vt0.c0, t1.c89, t1.c54))) THEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN t1.c89 THEN t1.c0 WHEN t1.c54 THEN vt0.c0 END ELSE CASE WHEN x'' THEN t1.c54 WHEN t1.c89 THEN t1.c54 WHEN 0.31810049008241836 THEN t1.c54 END END, CASE ((t1.c89)*(vt0.c0))  WHEN ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) THEN DATE(t1.c54, '-1041096749', t1.c0) ELSE CAST(t1.c89 AS BLOB) END, (((vt0.c0, t1.c89, vt0.c0))>=((vt0.c0, t1.c0, t1.c89))) COLLATE RTRIM HAVING CAST(COUNT(t1.c89) AS INTEGER);SELECT ALL CASE (+ (t1.c89))  WHEN vt0.c0 COLLATE NOCASE THEN (- (t1.c89)) ELSE 'NBz' END FROM t1, vt0; -- 0ms;
SELECT DISTINCT ((('927261198'))>((((t1.c0)-(t1.c0))))) FROM vt0, t1 WHERE (NULLIF(DISTINCT TYPEOF(NULL), ((x'')+('-208106968')))); -- 1ms;
SELECT DISTINCT SUM(((vt0.c0) BETWEEN ('-898448308') AND (vt0.c0))), AVG(0.33530596833461823), (((t1.c54 IN ())) NOTNULL) FROM vt0; -- 0ms;
SELECT t1.c54 FROM t1, vt0; -- 0ms;
SELECT ALL ((TOTAL_CHANGES())&(TYPEOF(t1.c89))) FROM t1; -- 0ms;
SELECT ALL CAST(((t1.c0)GLOB(vt0.c0)) AS BLOB) FROM t1, vt0; -- 0ms;
SELECT DISTINCT ((((((((((t1.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(t1.c89)))AND(((vt0.c0) IS FALSE))) FROM t1;SELECT DISTINCT CASE WHEN ((((((((t1.c54)OR(t1.c54)))AND(vt0.c0)))AND(t1.c54)))OR(t1.c0)) THEN CAST(t1.c54 AS TEXT) END FROM t1 WHERE ((CASE 1.659029462E9  WHEN '656372917' THEN 0.8238560401377034 ELSE 1e500 END IN ()));SELECT ALL ((((((t1.c0) NOT BETWEEN (vt0.c0) AND (t1.c89)))AND(((vt0.c0)LIKE(t1.c0)))))OR((~ (x'')))) FROM vt0 NOT INDEXED WHERE (((CASE WHEN 0.5029970818722489 THEN '0.196797041409967' WHEN NULL THEN x'e0d4' WHEN 0.6903896604399318 THEN x'' END)GLOB((- (-1247705275)))));SELECT DISTINCT (LOWER(t1.c89) IN ()) FROM vt0, t1 WHERE (x'e738') GROUP BY ((CAST(t1.c0 AS TEXT)) IS TRUE); -- 0ms;
SELECT ALL ((t1.c54) NOT BETWEEN ((~ (t1.c54))) AND (((t1.c0)||(t1.c54)))), LAG(((t1.c0) NOT NULL) COLLATE RTRIM, HEX((((NULL))>((vt0.c0)))), ((CASE vt0.c0  WHEN t1.c54 THEN t1.c54 ELSE t1.c89 END)*(0Xffffffffe742e79e))) OVER (), (NOT (CAST(t1.c89 AS BLOB))) FROM t1, vt0; -- 0ms;
SELECT DISTINCT '' FROM vt0; -- 0ms;
SELECT DISTINCT CASE WHEN t1.c54 THEN (t1.c0 IN (t1.c54)) ELSE CAST(t1.c54 AS BLOB) END FROM t1 WHERE ((((NULL IN ())) IS FALSE)); -- 0ms;
SELECT CASE CAST(t1.c0 AS BLOB)  WHEN ((1416698681)/(t1.c54)) THEN TOTAL(t1.c0) END FROM t1 WHERE ((+ ('-950633609' COLLATE NOCASE))); -- 0ms;
SELECT ALL HEX(DISTINCT x'03b6'), ((t1.c89) IS FALSE), ((0xffffffff94ff0901)>=(0.655147895742084)) FROM t1 WHERE (x'') LIMIT -1384761923; -- 0ms;
SELECT DISTINCT ((DATE(t1.c54, t1.c0, x'', t1.c54, t1.c54))||(NULL)) FROM t1, vt0 WHERE (CASE (((('^v')AND(0Xffffffffe235f601)))OR(NULL))  WHEN (((0.020365295178602638))!=((0.2825384542653874))) THEN (0.22693985483466916 IN ('53浒L?Z')) ELSE NULL COLLATE NOCASE END); -- 0ms;
SELECT ALL 'I蹊땬8U#嬕r1' FROM t1 WHERE ((CASE ''  WHEN 0xffffffff96d3e863 THEN '-1276761899' END IN (((NULL) NOT BETWEEN ('-1035497630') AND ('-1276761899')), x'eb11'))) ORDER BY CAST(CAST(t1.c89 AS TEXT) AS TEXT)  NULLS FIRST; -- 0ms;
SELECT DISTINCT ('' IN ()) FROM t1, vt0; -- 0ms;
SELECT DISTINCT ((((x'')AND(((t1.c0)GLOB(vt0.c0)))))OR(CAST(t1.c89 AS TEXT))) FROM vt0, t1; -- 0ms;
SELECT DISTINCT (~ (t1.c0)) COLLATE BINARY FROM vt0, t1 WHERE (((((((NULL)&(0.7298603015728429)))OR(CAST(x'' AS REAL))))AND(SUBSTR(NULL, '')))) LIMIT -110819452 OFFSET 897308989; -- 0ms;
SELECT ((((t1.c0)>>(t1.c89)))<<(((vt0.c0)GLOB(t1.c54)))) FROM vt0, t1 WHERE ((json_object(-2.7772526E7, 'v\nnL[2-O') IN ())); -- 1ms;
SELECT json_type(CASE vt0.c0  WHEN t1.c89 THEN vt0.c0 WHEN vt0.c0 THEN x'' WHEN t1.c54 THEN t1.c0 ELSE t1.c89 END) FROM t1 WHERE (0.7167940171080147);SELECT DISTINCT ((((((t1.c54)AND('0.5517069644432695')))AND(t1.c0))) NOT BETWEEN (t1.c54 COLLATE NOCASE) AND (CAST(vt0.c0 AS REAL))), (((t1.c89, t1.c54, vt0.c0, t1.c89, t1.c0)) BETWEEN ((((t1.c54)||(t1.c0)), CAST(t1.c0 AS INTEGER), vt0.c0 COLLATE RTRIM, ((t1.c89) NOT BETWEEN (t1.c89) AND (t1.c0)), ((-1.0518822E8)>>(t1.c0)))) AND ((CASE t1.c0  WHEN t1.c0 THEN t1.c0 ELSE t1.c54 END, ((((((((t1.c0)AND(vt0.c0)))AND(t1.c89)))OR(t1.c0)))AND(t1.c54)), ((vt0.c0) IS FALSE), CASE WHEN t1.c54 THEN t1.c54 WHEN t1.c54 THEN t1.c0 WHEN vt0.c0 THEN t1.c54 ELSE t1.c54 END, ((t1.c89)||(t1.c89))))), ((NULL) NOTNULL) FROM vt0 ORDER BY (((t1.c0) NOT NULL) IN ()) LIMIT 993779192;SELECT DISTINCT ((HEX(DISTINCT t1.c89))=(t1.c89 COLLATE RTRIM)), t1.c54, RANK() OVER () FROM t1 WHERE (x''); -- 0ms;
SELECT ALL CAST(((t1.c89)+(t1.c89)) AS BLOB) FROM t1, vt0 WHERE (((('-200608801' COLLATE NOCASE))<=(((('-1032527123') ISNULL))))); -- 0ms;
SELECT ALL ((COUNT(*)) NOT BETWEEN (((t1.c89)-(t1.c89))) AND (((t1.c89)IS NOT(t1.c54)))) FROM t1 WHERE (CASE -1199195967  WHEN 'tg' COLLATE RTRIM THEN ((((x'')OR(0.1938804304978805)))OR('19I~84')) WHEN (('') NOT BETWEEN (1485848592) AND (x'fa92')) THEN ((x'')OR(0.46017688779482135)) WHEN ((1713825685) BETWEEN (NULL) AND (NULL)) THEN ((((((((-242452520)OR(x'')))OR('')))AND(0.6416278074285902)))AND(0.7048294115270285)) ELSE ((x'')>=(NULL)) END) ORDER BY COALESCE(t1.c0, (vt0.c0 IN ())), ('0.8549498982775312' IN ()) DESC  NULLS FIRST; -- 0ms;
SELECT ALL CAST(((vt0.c0)>>(t1.c89)) AS REAL) FROM t1 WHERE ((((0.5172297555719958 IN ()))IS NOT(CAST(0.1860434339038144 AS NUMERIC)))) LIMIT -44954412 OFFSET 1802085498;SELECT DISTINCT TRIM(DISTINCT ((t1.c0) NOT BETWEEN (t1.c89) AND (t1.c54)), ((((((((((((vt0.c0)AND(1.783552623E9)))AND(x'8179e08e')))OR(vt0.c0)))OR(t1.c0)))AND(t1.c54)))AND(vt0.c0))) FROM vt0 INDEXED BY i82;SELECT DISTINCT (- ((((t1.c89)) NOT BETWEEN ((t1.c54)) AND ((t1.c54))))) FROM t1, vt0 WHERE ((((('538226983')LIKE(0.794553223411669))) NOTNULL)) ORDER BY CASE WHEN t1.c54 COLLATE BINARY THEN (((0X989b0bd, t1.c54, vt0.c0))>((t1.c89, '', vt0.c0))) WHEN ((((t1.c0)OR(vt0.c0)))OR(t1.c89)) THEN CASE WHEN vt0.c0 THEN t1.c89 WHEN t1.c89 THEN vt0.c0 WHEN t1.c0 THEN vt0.c0 END WHEN x'c73c' THEN ((t1.c54) NOT BETWEEN (t1.c89) AND (t1.c0)) END; -- 0ms;
SELECT ALL SUM(((vt0.c0)<(vt0.c0))) FILTER(WHERE CASE ((t1.c89)IS NOT(vt0.c0))  WHEN ((t1.c54)<<(t1.c54)) THEN (+ (t1.c0)) END) OVER (), ((((t1.c54) NOTNULL))<=(CAST(t1.c54 AS BLOB))), LEAD(CASE WHEN LIKELIHOOD(t1.c0, 0.9317010165059803) THEN CAST(t1.c0 AS TEXT) WHEN ((t1.c0)>=(t1.c89)) THEN ((((t1.c54)AND(t1.c54)))AND(t1.c89)) WHEN (((-761053243, t1.c0, t1.c0)) NOT BETWEEN ((t1.c0, t1.c54, t1.c54)) AND ((t1.c54, t1.c54, t1.c54))) THEN (- (t1.c89)) END, t1.c89, ((t1.c54 COLLATE NOCASE)+(((t1.c54)IS(t1.c54))))) OVER () FROM t1 GROUP BY (+ ((t1.c54 IN (t1.c0)))) HAVING ((x'' COLLATE RTRIM)<(((t1.c89) BETWEEN (1668663850) AND (NULL))));SELECT DISTINCT COUNT(*) OVER (), t1.c0, GROUP_CONCAT(CASE WHEN t1.c54 THEN vt0.c0 WHEN vt0.c0 THEN '#<' WHEN t1.c54 THEN vt0.c0 END) OVER () FROM t1, vt0; -- 0ms;
SELECT DISTINCT ((('-1659996815')GLOB(t1.c0)) IN ()) FROM vt0, t1; -- 0ms;
SELECT DISTINCT (('-1576679158') IS FALSE) FROM t1 WHERE (highlight(UPPER('-890400944'), ((((x'')OR('-1395729143')))OR('978453592')), ((NULL) NOT NULL), (('') BETWEEN (0Xffffffffa5a5becf) AND (NULL)))) ORDER BY (~ ((t1.c54 IN ()))) DESC;SELECT ALL CAST((((vt0.c0)) NOT BETWEEN ((1.953689889E9)) AND ((vt0.c0))) AS NUMERIC) FROM vt0, t1; -- 0ms;
SELECT ALL '賤[ai4' FROM t1 GROUP BY (vt0.c0 IN ()) HAVING (- (ABS(DISTINCT t1.c54))) ORDER BY ((((CASE WHEN t1.c89 THEN t1.c54 WHEN t1.c54 THEN vt0.c0 WHEN t1.c54 THEN t1.c89 ELSE t1.c54 END)OR(((vt0.c0) NOT BETWEEN (t1.c54) AND (t1.c0)))))OR(t1.c54 COLLATE NOCASE));SELECT DISTINCT (((((t1.c0)AND(vt0.c0)))AND(0.06053152293307107)) IN ()) FROM t1; -- 0ms;
SELECT ALL (((vt0.c0)) NOT BETWEEN ((((vt0.c0)+(t1.c54)))) AND ((CAST(t1.c0 AS TEXT)))), (((((t1.c89)AND(t1.c54))))!=(((((t1.c54))!=((NULL)))))), CAST(((((((((vt0.c0)AND(t1.c54)))OR(t1.c89)))AND(vt0.c0)))OR(t1.c89)) AS NUMERIC) FROM t1 GROUP BY ('-1178934416' IN ()), vt0.c0, ((((t1.c0)LIKE(t1.c54))) ISNULL);SELECT DISTINCT ((vt0.c0 IN ()) IN (((t1.c0)&(vt0.c0)), COUNT(*))), AVG((NOT (t1.c0))), COUNT((((t1.c54)) BETWEEN ((vt0.c0)) AND ((t1.c89)))), ((highlight(t1.c54, t1.c54, t1.c54, t1.c89)) NOT BETWEEN (NULL) AND (CASE WHEN t1.c54 THEN t1.c0 ELSE x'' END)), CAST(t1.c89 AS INTEGER) COLLATE BINARY FROM vt0, t1;SELECT t1.c54, ((CASE WHEN -1028862360 THEN vt0.c0 END) NOT NULL), ((((((t1.c0)!=(vt0.c0)))AND(x'')))OR((NOT (t1.c0)))) FROM vt0;SELECT ALL LOWER(CAST(t1.c0 AS NUMERIC)) FROM vt0 RIGHT OUTER JOIN t1 ON CASE json_array(t1.c0, vt0.c0, t1.c54, vt0.c0)  WHEN UPPER(t1.c54) THEN t1.c0 WHEN t1.c0 THEN ((t1.c54)<>(t1.c89)) WHEN ((vt0.c0)>>(t1.c0)) THEN vt0.c0 END WHERE (((('' IN (0.04048766646272828, '_U}Ah'))) IS FALSE));SELECT CAST(((t1.c54) IS TRUE) AS REAL) FROM t1, vt0; -- 1ms;
SELECT DISTINCT ((((t1.c54)OR(0.5856243088904415 COLLATE BINARY)))OR((((t1.c0, t1.c0, t1.c54, t1.c0, t1.c54)) NOT BETWEEN ((t1.c89, t1.c89, t1.c89, NULL, t1.c89)) AND ((t1.c89, vt0.c0, vt0.c0, t1.c89, t1.c89))))), LAG((((vt0.c0 IN (t1.c89, t1.c54))) IS FALSE), (NOT (CAST(t1.c89 AS REAL))), ((CAST(t1.c0 AS BLOB))IS(t1.c0))) OVER ( RANGE  UNBOUNDED PRECEDING), (((t1.c0)) NOT BETWEEN (((vt0.c0 IN ('H]')))) AND ((CAST(vt0.c0 AS NUMERIC)))) FROM t1, vt0; -- 0ms;
SELECT COUNT(*) FROM t1 WHERE ((((x'')) NOT BETWEEN ((CASE '-193280853'  WHEN x'9139' THEN NULL ELSE x'' END)) AND ((((('c4DiaⵠG', 0X797c7554, NULL, '', 0.0044435149414731034))<((0.426610094548862, '-1708992984', 12123817, 0Xffffffffec4e8b3c, -1.253732392E9))))))); -- 4ms;
SELECT ALL vt0.c0 FROM t1, vt0 WHERE ((((('') BETWEEN (NULL) AND (''))) BETWEEN (((((-1.158236009E9)OR(0.5945405531301121)))AND(-1657240818))) AND ((((-1847434454))<=(('/E')))))); -- 0ms;
SELECT ((((t1.c0) NOT BETWEEN (vt0.c0) AND (0.9188317287934309))) BETWEEN (((vt0.c0) ISNULL)) AND (CAST(t1.c0 AS TEXT))) FROM t1, vt0; -- 0ms;
SELECT DISTINCT CASE ((t1.c54) NOT BETWEEN ('-659879682') AND (vt0.c0))  WHEN (((0.2809825960974732)) NOT BETWEEN ((t1.c0)) AND ((t1.c0))) THEN TOTAL(t1.c89) WHEN (~ (t1.c89)) THEN MIN(0.7576909781449602) WHEN t1.c54 COLLATE BINARY THEN ((t1.c54)>>(t1.c54)) ELSE ((t1.c0) ISNULL) END, ((NULL)>>(((0.3445363263686705) IS FALSE))), (((((t1.c89)) NOT BETWEEN ((t1.c0)) AND ((vt0.c0)))) NOT BETWEEN (vt0.c0 COLLATE RTRIM) AND (((((((((t1.c0)OR(t1.c89)))OR(NULL)))AND(t1.c0)))OR(t1.c54)))) FROM vt0 ORDER BY ((x'')&(CASE t1.c54  WHEN vt0.c0 THEN t1.c89 WHEN -55892130 THEN vt0.c0 WHEN t1.c89 THEN t1.c54 END)) DESC;SELECT DISTINCT t1.c54 FROM vt0, t1 WHERE ((NOT (0.4283806366429215)) COLLATE RTRIM) GROUP BY (((t1.c54))>=((t1.c54))) COLLATE NOCASE; -- 0ms;
SELECT DISTINCT load_extension(CAST(t1.c0 AS INTEGER), t1.c54) FROM vt0, t1 WHERE (((((0.5517069644432695) IS TRUE))>>(CASE WHEN NULL THEN NULL END))); -- 0ms;
SELECT DISTINCT NULLIF(LOWER(DISTINCT vt0.c0), ((t1.c0)<<(NULL))) FROM vt0 WHERE (CASE ((((x'')AND(0.5717561959483299)))OR(-76921251))  WHEN ((1205868865) NOT BETWEEN (x'') AND (0.1466758928484102)) THEN CAST(x'efd0' AS NUMERIC) WHEN CAST(NULL AS REAL) THEN ((0.8533537904191586) IS FALSE) WHEN (((-209879280))>(('10937683'))) THEN IFNULL(x'cd7e', NULL) END);SELECT DISTINCT CASE ((t1.c54) ISNULL)  WHEN t1.c54 THEN COUNT(*) ELSE (NOT (t1.c54)) END FROM vt0 WHERE (((((NULL)>>(x''))) IS TRUE));SELECT ALL (NOT (((vt0.c0) BETWEEN (t1.c54) AND (vt0.c0)))) FROM t1 WHERE ((0.40461771538981195 IN ()));SELECT DISTINCT ((((((0.3658664757570309)OR(t1.c0)))OR(vt0.c0)))<(((t1.c89) BETWEEN (t1.c0) AND (vt0.c0)))), (((((vt0.c0)) BETWEEN (('0.41682859670743677')) AND ((t1.c54)))) NOT BETWEEN (((t1.c89)<<(t1.c89))) AND (((((((((vt0.c0)OR(NULL)))OR(t1.c0)))AND(vt0.c0)))OR(t1.c89)))), (CASE t1.c54  WHEN NULL THEN t1.c0 ELSE t1.c54 END IN ()) FROM vt0 WHERE (((CAST('Q3窑쇵' AS NUMERIC)) BETWEEN (((0Xfea7631) NOT NULL)) AND (('' IN ())))) ORDER BY ((((((((t1.c54)AND(t1.c89)))AND(0.8913753889210703)))OR(t1.c89)))OR(t1.c0)) COLLATE RTRIM DESC  NULLS LAST;SELECT DISTINCT COUNT(0.29268896084067086) FROM t1 WHERE (((((NULL) IS FALSE))LIKE((- (''))))) LIMIT -1186972330; -- 0ms;
SELECT DISTINCT UNICODE(CAST(x'' AS INTEGER)) FROM t1, vt0 ORDER BY CASE WHEN (vt0.c0 IN ()) THEN CAST(t1.c54 AS REAL) ELSE ((t1.c89) NOT BETWEEN (t1.c89) AND (t1.c54)) END; -- 0ms;
SELECT FIRST_VALUE(((t1.c54) IS FALSE) COLLATE BINARY) OVER ( GROUPS (+ (UPPER(t1.c54))) PRECEDING) FROM t1, vt0 GROUP BY TYPEOF(DISTINCT t1.c54 COLLATE RTRIM);SELECT DISTINCT NULLIF(CAST(t1.c54 AS NUMERIC), ((((t1.c0)AND(t1.c0)))AND(vt0.c0))) FROM t1;SELECT ALL CASE NULLIF(DISTINCT t1.c54, t1.c54)  WHEN t1.c89 COLLATE BINARY THEN CAST(t1.c0 AS NUMERIC) ELSE (t1.c54 IN ()) END FROM vt0 WHERE ((~ (((0.7243671792067414)>>(NULL)))));SELECT TRIM(DISTINCT (((t1.c0)) BETWEEN ((x'd427')) AND ((t1.c89))), (vt0.c0 IN ())) FROM t1; -- 0ms;
SELECT DISTINCT GROUP_CONCAT((((t1.c0))<=((t1.c0)))), SUM(((t1.c54) BETWEEN (t1.c89) AND (vt0.c0)) COLLATE BINARY) OVER (), 0.599200802632612 FROM t1, vt0 WHERE (CASE (((('8')OR(NULL)))OR(0.3770521151692686))  WHEN (+ ('uq䫕b')) THEN x'' WHEN (('91204898') IS FALSE) THEN CASE WHEN 0.0862671805147548 THEN 'tV' END WHEN ((((NULL)OR('#<')))AND('5Cbrf>')) THEN CAST(x'' AS BLOB) ELSE (('') BETWEEN ('') AND (0Xffffffff814c6862)) END) ORDER BY (CAST(t1.c0 AS NUMERIC) IN (CAST(x'fc1a' AS BLOB))), ((((((((((vt0.c0)OR(t1.c89)))OR(t1.c89)))AND(NULL)))OR(vt0.c0))) NOTNULL) ASC  NULLS LAST; -- 0ms;
SELECT ((((vt0.c0)) NOT BETWEEN ((t1.c0)) AND (('0.6537510414589234'))) IN ()), MIN(t1.c54), NULLIF(((t1.c89) BETWEEN (t1.c89) AND (t1.c89)), t1.c89 COLLATE RTRIM) FROM vt0;SELECT DISTINCT ((x'')+(((t1.c89) BETWEEN (vt0.c0) AND (t1.c0)))), ((((((t1.c89)OR(t1.c89)))OR(vt0.c0)))&(CAST(t1.c0 AS INTEGER))), (- ((vt0.c0 IN ()))), DATE(0.344620233729345 COLLATE BINARY, NULLIF(t1.c54, 911125277), ((t1.c0)-(t1.c0)), LIKELY(DISTINCT t1.c0), t1.c89), ((t1.c54 COLLATE RTRIM)*(t1.c89)) FROM vt0, t1 GROUP BY ABS(DISTINCT CASE WHEN t1.c89 THEN vt0.c0 END); -- 1ms;
SELECT ALL (('\n/' COLLATE BINARY) IS TRUE) FROM vt0, t1 GROUP BY (+ (((vt0.c0) NOTNULL))); -- 0ms;
SELECT ALL CAST(vt0.c0 AS REAL) FROM vt0 WHERE ((((('អo|S')OR(x'')))AND(0.43754274330915155)) COLLATE RTRIM); -- 0ms;
SELECT (((MIN(t1.c54), NULL, vt0.c0))<((((t1.c54) ISNULL), (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((x'e5b3'))), ((vt0.c0) NOT BETWEEN (t1.c89) AND (t1.c54))))), CAST('' AS REAL), CUME_DIST() OVER ( ORDER BY (- (vt0.c0 COLLATE NOCASE)) DESC  NULLS LAST) FROM t1, vt0; -- 0ms;
SELECT ALL (((((vt0.c0)) BETWEEN ((t1.c89)) AND ((vt0.c0)))) NOT BETWEEN (-1594838376) AND ((t1.c0 IN ()))), ((((t1.c0) BETWEEN ('-27772526') AND (t1.c54)))-(((t1.c89) IS FALSE))), '32458553' COLLATE RTRIM FROM t1, vt0 WHERE ((CAST(NULL AS INTEGER) IN ('-59443955' COLLATE NOCASE))); -- 0ms;
SELECT ALL (((t1.c0)) NOT BETWEEN ((GROUP_CONCAT(t1.c54))) AND ((((t1.c0) IS TRUE)))) FROM vt0, t1 WHERE ('1428032570'); -- 0ms;
SELECT ROW_NUMBER() OVER ( PARTITION BY ((((t1.c0) ISNULL))=(((t1.c0)||(t1.c54)))), ((UNLIKELY(DISTINCT t1.c0)) NOT BETWEEN (((t1.c0) ISNULL)) AND (((t1.c0)<(t1.c54)))) RANGE  UNBOUNDED PRECEDING EXCLUDE NO OTHERS) FROM t1, vt0; -- 0ms;
SELECT DISTINCT ((((vt0.c0)OR(t1.c89)))GLOB((t1.c54 IN ()))), 0.7489879848200757, (- (t1.c0)) FROM t1 WHERE (((((x'') IS FALSE))IS(json_extract('-830616511', 0.545982349815))));SELECT t1.c0 FROM vt0;SELECT DISTINCT TOTAL(vt0.c0) FROM vt0; -- 0ms;
SELECT ALL ((t1.c54) BETWEEN ((((vt0.c0)) NOT BETWEEN ((t1.c54)) AND ((NULL)))) AND ((((t1.c54)) BETWEEN ((t1.c89)) AND ((t1.c54))))) FROM t1 GROUP BY vt0.c0 HAVING TOTAL(TOTAL((((t1.c0, t1.c89, t1.c54))>((t1.c54, t1.c54, t1.c0)))));SELECT DISTINCT ((t1.c0)+(t1.c89)) COLLATE RTRIM, COUNT(CASE WHEN vt0.c0 THEN t1.c54 ELSE vt0.c0 END), LOWER(DISTINCT ((vt0.c0) BETWEEN (t1.c0) AND (t1.c54))) FROM t1 WHERE ((((0.7217948529403672)) BETWEEN (((NULL IN ()))) AND ((('410388684' IN ())))));SELECT ALL CASE CAST(t1.c54 AS INTEGER)  WHEN ((vt0.c0)GLOB('-135623707')) THEN ((t1.c89)!=(t1.c89)) ELSE COUNT(t1.c0) END FROM vt0, t1 WHERE (((CASE WHEN x'198e' THEN ')v^\r' ELSE 1109786905 END) NOT BETWEEN (CASE 0.6633875695812087  WHEN '-1728861886' THEN 'gOD{%첄' ELSE 0.006096077008821754 END) AND (CASE WHEN '-1537153291' THEN x'08ef' WHEN x'940c' THEN x'1832' WHEN 0.8217328201124099 THEN 0.8833904818918044 ELSE 0.0069103470629748864 END))); -- 0ms;
SELECT DISTINCT '' FROM vt0 WHERE ((('r\rEX''' COLLATE RTRIM)==(((x'')GLOB(0Xffffffffdd7757d1))))) LIMIT -1971526992; -- 0ms;
SELECT DISTINCT ((((((t1.c54)OR(vt0.c0)))OR(x'ddd1')))*((t1.c54 IN ()))), COALESCE(DISTINCT ((vt0.c0)<(t1.c89)), MIN(t1.c89)), ((MIN(vt0.c0)) BETWEEN (CAST(t1.c89 AS REAL)) AND (CAST(t1.c89 AS REAL))) FROM vt0;SELECT ALL GROUP_CONCAT((vt0.c0 IN ())), t1.c89, (((t1.c0 IN ()))*(((((t1.c89)AND(vt0.c0)))AND(t1.c54)))) FROM t1 ORDER BY ((CAST(t1.c89 AS BLOB)) NOT BETWEEN (((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c89))) AND (CAST(t1.c54 AS NUMERIC)))  NULLS LAST, (((((((((~ (t1.c0)))AND(t1.c54)))AND(((t1.c89)*(t1.c54)))))OR((vt0.c0 IN ()))))AND(((vt0.c0)==(vt0.c0)))) DESC;SELECT DISTINCT x'', AVG(((t1.c0) BETWEEN (t1.c54) AND (t1.c0))), ((t1.c0) NOT NULL) FROM t1; -- 0ms;
SELECT DISTINCT RANK() OVER ( ORDER BY CHANGES() COLLATE BINARY DESC  NULLS FIRST, ((((vt0.c0)=(t1.c89))) BETWEEN ((((vt0.c0))>((t1.c0)))) AND (((t1.c0) NOT BETWEEN (t1.c89) AND (0.4104948171864089)))), CASE (~ (t1.c54))  WHEN CASE vt0.c0  WHEN vt0.c0 THEN t1.c89 WHEN vt0.c0 THEN vt0.c0 WHEN t1.c89 THEN t1.c54 END THEN (((vt0.c0))=((t1.c89))) END ASC) FROM vt0;SELECT DISTINCT ((((t1.c89) NOT BETWEEN (t1.c0) AND (t1.c89)))IS((- ('Y-.s')))) FROM t1; -- 0ms;
SELECT vt0.c0 FROM vt0 WHERE (CASE ('g/)HSrP0' IN ())  WHEN CAST(NULL AS BLOB) THEN ((('T7', '', 0.4509850537555564)) BETWEEN ((-1323411838, x'', '607046153')) AND (('[9', x'', 4.98142065E8))) WHEN (+ (x'6f39')) THEN (-1921238578 IN (NULL)) WHEN ((x'') IS TRUE) THEN (+ (x'')) ELSE (x'' IN ('-1540735445')) END) GROUP BY vt0.c0 HAVING ((NULLIF(t1.c89, t1.c54))<>(AVG('')));SELECT DISTINCT (((((t1.c54)) BETWEEN ((t1.c54)) AND ((vt0.c0))))<(((((t1.c54)OR(t1.c54)))AND(t1.c54)))) FROM t1 WHERE ((((((x''))<=((x'')))) BETWEEN (((x'')-('-27772526'))) AND ((- (x'ba27')))));SELECT ALL DENSE_RANK() OVER () FROM t1 WHERE (((((('0M'))=(('3y')))) ISNULL)) ORDER BY CASE WHEN t1.c89 COLLATE RTRIM THEN vt0.c0 ELSE ((((t1.c89)AND(t1.c54)))AND(vt0.c0)) END  NULLS FIRST, (NOT (((t1.c0)>>(vt0.c0))))  NULLS LAST;SELECT ALL CASE WHEN ((t1.c0)<>(t1.c89)) THEN t1.c54 COLLATE NOCASE ELSE (((vt0.c0))<>((t1.c54))) END FROM vt0;SELECT DISTINCT ((CASE WHEN t1.c0 THEN t1.c0 END)<=('1889653554')) FROM t1, vt0 ORDER BY SUBSTR(CAST(t1.c89 AS INTEGER), NULL) ASC, ((((((((((((IFNULL(t1.c54, vt0.c0))AND((vt0.c0 IN ('1715572197', t1.c0)))))OR(t1.c89)))OR(t1.c0)))AND(highlight(vt0.c0, t1.c89, vt0.c0, t1.c89))))OR(NULLIF(t1.c54, vt0.c0))))AND(((t1.c0) IS FALSE)))  NULLS FIRST;SELECT x'2067' FROM vt0; -- 0ms;
SELECT DISTINCT (((+ (t1.c54))) IS TRUE), x'', t1.c0 FROM t1 WHERE (((((((0.580906621018591)OR('-74721590')))AND(-855840068))) NOT BETWEEN (CASE NULL  WHEN 0.6236202566397696 THEN NULL ELSE '-1699541454' END) AND ((('df')&(0.7314144356246861))))) ORDER BY '#oEA4Q댠' ASC; -- 0ms;
SELECT ALL (((((t1.c89))<((t1.c89))))IS NOT(((t1.c89)/(t1.c54)))) FROM t1, vt0 WHERE (json_insert(((('aE-J', '450845933', x''))<((x'778ddd71', '?᳔e/W0', x'5e0d'))), (NOT (NULL)), ((((0.607427735114991)OR('1953689889')))AND('')))); -- 0ms;
SELECT ALL CASE WHEN (((vt0.c0))=((t1.c89))) THEN (((t1.c54)) BETWEEN ((t1.c89)) AND ((t1.c89))) ELSE (+ (vt0.c0)) END, ((((((((((t1.c0) BETWEEN (t1.c54) AND (vt0.c0)))OR(UNICODE(t1.c54))))AND(COUNT(*))))AND((t1.c0 IN ('Z<JsJG잺')))))AND(NULL)), ((((t1.c54) NOT BETWEEN (t1.c89) AND (t1.c0))) IS TRUE) FROM t1;SELECT DENSE_RANK() OVER ( ROWS  CURRENT ROW EXCLUDE GROUP) FROM t1 WHERE (((-1753666421 COLLATE BINARY)=(((NULL) NOT BETWEEN (1170188427) AND (NULL))))); -- 0ms;
SELECT RANK() OVER () FROM vt0, t1 LIMIT 1251282804 OFFSET 1953689889; -- 0ms;
SELECT DISTINCT (((((+ (t1.c89)))OR((t1.c0 IN (t1.c0)))))OR(((t1.c0)LIKE(t1.c54)))), -1.561928546E9, COUNT(((t1.c0)IS(t1.c0))) OVER (), CASE (~ ('1867847518'))  WHEN (~ (vt0.c0)) THEN SUM(t1.c89) WHEN (- (t1.c0)) THEN (t1.c0 IN (t1.c54)) WHEN SUM(t1.c54) THEN COUNT(t1.c54) END, ((((MIN('2146772934'))OR(((t1.c0) IS TRUE))))AND(((0.12036610627834221) ISNULL))), ((((((t1.c54)OR(t1.c0)))OR(vt0.c0))) BETWEEN (((t1.c0)AND(t1.c0))) AND (((t1.c0)||(t1.c0)))), ((GLOB(t1.c54, t1.c89))OR(((vt0.c0)|(t1.c89)))) FROM t1, vt0 WHERE ((((0.33758887946724736)>>(NULL)) IN ())); -- 0ms;
SELECT DISTINCT (((t1.c0)) BETWEEN ((vt0.c0)) AND (((((t1.c54, t1.c54, vt0.c0))<((t1.c0, vt0.c0, vt0.c0)))))) FROM vt0 GROUP BY ((t1.c0) BETWEEN ((t1.c89 IN ())) AND (((t1.c54)==(t1.c89)))), 0X27604191, t1.c89, ((((vt0.c0) BETWEEN (t1.c0) AND (t1.c54))) BETWEEN (((t1.c89) NOTNULL)) AND (((((t1.c0)OR(t1.c0)))AND(vt0.c0)))), ((x'')%((t1.c89 IN ())));SELECT DISTINCT (((vt0.c0 IN ()))!=(CAST(vt0.c0 AS REAL))) FROM t1, vt0; -- 0ms;
SELECT ALL CAST((- (t1.c54)) AS INTEGER), (((t1.c89 IN ()))OR(((t1.c89) NOTNULL))), CAST(UPPER(DISTINCT t1.c89) AS INTEGER) FROM vt0, t1 WHERE ((NULL COLLATE NOCASE IN ())) ORDER BY ((((((t1.c89) ISNULL))OR(((t1.c89) ISNULL))))AND('1885022520')) DESC  NULLS LAST, CAST(t1.c89 AS INTEGER) DESC  NULLS FIRST; -- 0ms;
SELECT DISTINCT ((- (t1.c89)) IN ()) FROM t1 WHERE (CASE WHEN (- ('1414992301')) THEN SQLITE_COMPILEOPTION_GET(NULL) END); -- 0ms;
SELECT DISTINCT CUME_DIST() OVER () FROM t1 ORDER BY 722714295 ASC  NULLS FIRST;SELECT DISTINCT ((CASE WHEN t1.c0 THEN vt0.c0 ELSE x'4908' END)|(((t1.c54)*(t1.c54)))), CAST((t1.c54 IN ()) AS REAL), (+ (x'4a95')) FROM t1 WHERE (((CAST(NULL AS BLOB))>>((- (x'5e2a77d0')))));SELECT ALL CAST(CAST(t1.c54 AS NUMERIC) AS INTEGER), NTH_VALUE(CAST(0.6550544582514862 AS BLOB), ((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)) COLLATE RTRIM) OVER ( ORDER BY TYPEOF(DISTINCT (+ (t1.c0))) ASC), MAX(SUM(((t1.c0)*(t1.c54)))) FROM vt0 WHERE ((((CASE NULL  WHEN NULL THEN '-96959244' END, (('')IS NOT('0.6661696131329081')), ((NULL)<<(-1.276761899E9))))<=((CAST(x'' AS NUMERIC), DATE(0.61689653545139, 0.29047884560130366, NULL, x'', '-458870735'), UNLIKELY(DISTINCT '')))));SELECT DISTINCT (((t1.c54)) BETWEEN ((LIKE(vt0.c0, t1.c0))) AND ((((t1.c0)GLOB(NULL))))), t1.c54, ((CAST(t1.c89 AS BLOB))<>(((t1.c89)>>(t1.c54)))) FROM vt0, t1; -- 0ms;
SELECT ALL CAST((((vt0.c0))=((t1.c0))) AS REAL), CAST((((t1.c54))>(('-110819452'))) AS BLOB), (((t1.c0) NOT BETWEEN (t1.c54) AND (t1.c0)) IN ()) FROM vt0 WHERE ((+ (CASE 0.8049636115769548  WHEN '!' THEN 1.108166555E9 WHEN NULL THEN x'' WHEN '' THEN -1403356082 ELSE -1408123365 END))) LIMIT -1001070935 OFFSET -1964688714;SELECT NTH_VALUE(((t1.c0)<((t1.c54 IN ()))), ((((t1.c54)>(t1.c0)))=((0.5431434732635017 IN (t1.c0, t1.c89))))) OVER ( ORDER BY x'eb0d' DESC  NULLS LAST) FROM t1, vt0;SELECT TRIM(DISTINCT (((vt0.c0, t1.c54, vt0.c0))<((t1.c0, '', t1.c0)))) FROM t1;SELECT DISTINCT '199628208' FROM t1; -- 0ms;
SELECT DISTINCT ((((t1.c0 COLLATE BINARY)OR(((t1.c0)IS(t1.c54)))))AND(((vt0.c0) BETWEEN (vt0.c0) AND (t1.c89)))), TOTAL(((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c89))), (((TRIM(DISTINCT t1.c89, t1.c0), (t1.c54 IN ()), (- (t1.c54))))>=((CASE WHEN t1.c89 THEN t1.c0 ELSE vt0.c0 END, vt0.c0, ((t1.c54)/(t1.c89))))) FROM t1, vt0 WHERE ((((((0.616913426527204)<<('0.2171166189014595'))))<(((('')<('_7D')))))); -- 0ms;
SELECT ALL CAST(((t1.c54) NOT BETWEEN (t1.c0) AND (t1.c89)) AS BLOB) FROM vt0;SELECT DISTINCT (NOT ((t1.c54 IN (t1.c0)))) FROM t1 WHERE ((((((x'a04f' IN ()))AND((+ (NULL)))))OR(x'' COLLATE RTRIM))); -- 1ms;
SELECT DISTINCT SUM(((t1.c89)GLOB('-1698672746'))), ((((t1.c89)==(t1.c54)))-((t1.c0 IN (t1.c54)))), ((((t1.c0 IN (t1.c0, t1.c89, t1.c89, 0.8597484331450583)), ((NULL)|(t1.c0)), COUNT(vt0.c0)))>=((((((t1.c54)OR(t1.c0)))AND(t1.c54)), vt0.c0 COLLATE NOCASE, ((((((((t1.c54)AND(t1.c0)))AND(t1.c89)))OR(vt0.c0)))OR(t1.c89))))) FROM vt0;SELECT DISTINCT (((t1.c89)+(t1.c0)) IN ()) FROM t1; -- 0ms;
SELECT ALL (((((t1.c89)>=(t1.c0))))=((((t1.c54) ISNULL)))), ((NULL) NOTNULL), CAST(CAST(t1.c54 AS NUMERIC) AS TEXT) FROM t1, vt0; -- 0ms;
SELECT DISTINCT ((((('1486122562') IS TRUE), ((t1.c54)>=(t1.c89)), ('1503 1820775701232576636 3171880752115884340T-566998675784212948:714T1431 7985794890155828202T270:463:' IN ())))==((((t1.c0)>(t1.c0)), ((((t1.c54)AND(t1.c54)))AND(t1.c0)), (((t1.c89, vt0.c0, t1.c0))>((t1.c54, t1.c54, vt0.c0)))))) FROM vt0, t1 WHERE ((((-151739162) NOTNULL) IN ())) LIMIT -1175558366; -- 0ms;
SELECT DISTINCT COUNT(*) FROM t1 WHERE (((572554842)>(0.5450993506584523)) COLLATE RTRIM); -- 0ms;
SELECT ALL AVG(TRIM(DISTINCT vt0.c0)) FROM vt0, t1 WHERE ((((- (-1874936772)))<<((('-618570601') BETWEEN ('*}\r(u6*') AND (x''))))); -- 1ms;
SELECT ALL (~ (t1.c54)), ((CASE vt0.c0  WHEN x'' THEN t1.c0 ELSE t1.c54 END) NOT BETWEEN (CAST(t1.c89 AS BLOB)) AND (((t1.c0)OR(t1.c54)))), TOTAL(((t1.c89)<('\ULoU'))) FROM vt0, t1 LIMIT 194723079 OFFSET 1591596190; -- 0ms;
SELECT DISTINCT (+ (vt0.c0 COLLATE BINARY)), NTILE((+ ((((t1.c0, t1.c89, t1.c0, vt0.c0, vt0.c0)) BETWEEN ((t1.c0, vt0.c0, t1.c0, t1.c54, vt0.c0)) AND ((vt0.c0, t1.c0, vt0.c0, '0.4797400484802705', t1.c54)))))) OVER (), (((((t1.c0) BETWEEN (t1.c54) AND (0.31507033447786825))))<((CAST(t1.c54 AS BLOB)))) FROM vt0, t1;SELECT ALL ((((CAST(vt0.c0 AS BLOB))OR(CASE WHEN t1.c89 THEN t1.c0 END)))OR(((((t1.c89)OR(t1.c89)))OR(t1.c89)))) FROM t1 ORDER BY (((t1.c0) NOT NULL) IN ())  NULLS LAST;SELECT ((((t1.c54) NOT BETWEEN (t1.c0) AND ('0.36666026710584154'))) IS TRUE) FROM t1, vt0; -- 0ms;
SELECT DISTINCT (((CASE WHEN vt0.c0 THEN t1.c89 ELSE t1.c0 END))==((((t1.c89) BETWEEN (t1.c0) AND (t1.c0))))) FROM vt0;SELECT ALL AVG((('')<<(t1.c0))) OVER (), t1.c0, t1.c89 FROM vt0 LIMIT -566965125 OFFSET 1928776722;SELECT DISTINCT ((((((t1.c0)OR(vt0.c0)))OR(vt0.c0))) IS TRUE) FROM vt0 ORDER BY t1.c89  NULLS LAST, ((((vt0.c0) ISNULL))&(''))  NULLS FIRST;SELECT DISTINCT MIN(((((((((0.16778416434076238)AND(t1.c0)))AND(t1.c0)))AND(t1.c0)))OR(t1.c89))) FROM t1, vt0 WHERE (x''); -- 0ms;
SELECT (t1.c54 IN ()) FROM t1; -- 0ms;
SELECT DISTINCT ABS(COUNT(t1.c0)) FROM t1; -- 0ms;
SELECT DISTINCT CASE WHEN (- (0.23834959801634814)) THEN (- (t1.c54)) WHEN ((t1.c0)AND(vt0.c0)) THEN CAST(vt0.c0 AS TEXT) WHEN ((x'')>=(t1.c0)) THEN ((t1.c89) NOT BETWEEN (vt0.c0) AND (t1.c89)) END, CAST(x'e182' AS TEXT), ((((((((vt0.c0)AND(((((((((t1.c89)AND(t1.c54)))OR(vt0.c0)))OR(t1.c89)))AND(t1.c89)))))OR((0.43309359206244336 IN ()))))OR(((t1.c89) IS TRUE))))OR(IFNULL(t1.c0, vt0.c0))) FROM t1, vt0; -- 0ms;
SELECT ALL json_extract(CAST(vt0.c0 AS REAL), ABS(t1.c0), (~ (t1.c89)), ((t1.c0)AND(t1.c54))) FROM t1, vt0;SELECT ((((vt0.c0)>=(vt0.c0))) NOTNULL) FROM vt0 LIMIT 1687983589; -- 0ms;
SELECT ALL ((0X4afb96e3)AND(((((((((vt0.c0)OR(t1.c54)))OR(t1.c54)))OR(t1.c54)))AND(t1.c54)))) FROM t1, vt0; -- 0ms;
SELECT DISTINCT ((vt0.c0) IS FALSE) COLLATE BINARY, (~ ((t1.c54 IN ()))), x'' FROM vt0, t1; -- 1ms;
SELECT DISTINCT ((((t1.c89) NOT NULL)) NOT BETWEEN (CASE vt0.c0  WHEN t1.c0 THEN t1.c54 END) AND (((((t1.c54)OR(vt0.c0)))OR(t1.c89)))), (NOT (1.170188427E9)), GROUP_CONCAT(((t1.c54) NOT BETWEEN (t1.c54) AND (t1.c89))) FROM vt0 WHERE ((('g)' IN ()) IN ())) ORDER BY t1.c89;SELECT DISTINCT CAST(CAST(t1.c54 AS TEXT) AS BLOB) FROM vt0 GROUP BY x'' ORDER BY (- (((t1.c54)||(t1.c0))));SELECT DISTINCT LOWER(DISTINCT COUNT(t1.c54)), (t1.c54 IN ()) COLLATE RTRIM, ((((TOTAL(t1.c0))AND(TRIM(DISTINCT t1.c0, t1.c0))))OR((((t1.c0)) NOT BETWEEN ((t1.c54)) AND ((vt0.c0))))), (((t1.c0 IN ())) IS TRUE), CAST(((((((((vt0.c0)AND(NULL)))OR(t1.c89)))OR(vt0.c0)))AND(t1.c0)) AS BLOB) FROM vt0;SELECT DISTINCT CASE WHEN vt0.c0 COLLATE BINARY THEN MIN(NULL) WHEN ((((x'')OR(vt0.c0)))AND(t1.c54)) THEN CASE t1.c89  WHEN vt0.c0 THEN vt0.c0 ELSE t1.c54 END WHEN CASE WHEN t1.c89 THEN vt0.c0 END THEN CASE -160462274  WHEN t1.c54 THEN -359175636 ELSE x'bd8d' END END FROM vt0, t1; -- 0ms;
SELECT ALL AVG(ABS(DISTINCT t1.c54)) OVER (), ((vt0.c0) NOT BETWEEN ((t1.c0 IN (t1.c89))) AND ('0.5183999477885219')), (((NOT (t1.c89))) NOTNULL) FROM vt0, t1 WHERE (CASE (('') ISNULL)  WHEN ((0.6248930625722694)*(x'f17135e2')) THEN ((x'efe42914') ISNULL) ELSE NULL END); -- 0ms;
SELECT ((LIKELY(x'5d50')) BETWEEN (((t1.c0) NOTNULL)) AND (((t1.c54) NOT NULL))) FROM vt0, t1; -- 0ms;
SELECT '2328595' FROM t1, vt0; -- 0ms;
SELECT (((((vt0.c0, t1.c0, vt0.c0, vt0.c0, t1.c54)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, t1.c89)) AND ((vt0.c0, t1.c54, t1.c89, t1.c89, t1.c89))))AND(((vt0.c0)AND(t1.c89)))) FROM vt0, t1 WHERE ((((('AU') ISNULL))%(((x'ca39')+('-1403356082'))))); -- 0ms;
SELECT ((((vt0.c0)<=(t1.c89))) ISNULL) FROM vt0;SELECT ALL t1.c54 FROM t1; -- 0ms;
SELECT ALL (((((t1.c0)) NOT BETWEEN ((t1.c54)) AND ((t1.c0)))) BETWEEN (MIN(t1.c89)) AND (((t1.c89) BETWEEN (vt0.c0) AND (vt0.c0)))), vt0.c0, (~ (((t1.c0) NOTNULL))) FROM t1 WHERE (((CASE WHEN x'8d75' THEN x'' END)<(CAST(NULL AS TEXT))));SELECT DISTINCT (((~ (0.452691904354384))) NOTNULL) FROM vt0, t1 WHERE (((CASE '0.01297343506368076'  WHEN x'' THEN 275689826 END)*(CASE WHEN x'120f' THEN x'' END))) ORDER BY (((~ (t1.c0)))<=(CAST(t1.c89 AS INTEGER))); -- 0ms;
SELECT ((((((((((x'')GLOB(t1.c54)))OR(((t1.c0) NOT BETWEEN (vt0.c0) AND (t1.c89)))))OR(vt0.c0 COLLATE RTRIM)))OR(0.33364410011250567)))OR(json_extract('', t1.c0))), CASE (- (t1.c0))  WHEN vt0.c0 COLLATE NOCASE THEN (NOT (t1.c0)) WHEN COUNT(*) THEN (((vt0.c0)) NOT BETWEEN ((t1.c0)) AND ((t1.c0))) WHEN t1.c54 COLLATE NOCASE THEN t1.c54 END, t1.c54 FROM t1 WHERE ('-1184942313') LIMIT -1463341855;SELECT DISTINCT (- (((t1.c89)>=(vt0.c0)))) FROM vt0, t1 WHERE (((TYPEOF(DISTINCT NULL))%((('') NOT BETWEEN ('1867847518') AND (NULL))))); -- 0ms;
SELECT ((((t1.c89)) BETWEEN ((vt0.c0)) AND ((t1.c89))) IN ()) FROM vt0 WHERE ((((x'9eee' IN ()))<<((((x'', NULL, x'dd4668a9')) NOT BETWEEN ((0.882462376364655, '1127444704', 0X5ba4751e)) AND ((x'', 1026333101, '-2009672025')))))); -- 0ms;
SELECT DISTINCT (((((((((((((t1.c89)AND(t1.c0)))AND(t1.c54)))AND('-1544430750')))AND(vt0.c0)))OR(vt0.c0)))OR(t1.c0)) IN ()) FROM vt0 LIMIT 982094381; -- 0ms;
SELECT CASE ((t1.c89)<(vt0.c0))  WHEN (t1.c0 IN ()) THEN CAST(t1.c54 AS INTEGER) END, ((t1.c0)!=((vt0.c0 IN ()))), (CAST(t1.c0 AS NUMERIC) IN ()), ((t1.c0)IS(((t1.c54)<>(t1.c54)))), (((0x6a4eda6f) NOT NULL) IN ()) FROM t1, vt0; -- 0ms;
SELECT ALL ((AVG(NULL)) ISNULL), ((COUNT(*))*(((t1.c89) BETWEEN (t1.c0) AND (t1.c54)))), (vt0.c0 IN ()) COLLATE RTRIM FROM t1 WHERE ((NOT ((('!\r#/ZI2')%('\ḺT'))))) GROUP BY (((t1.c54)<=(t1.c89)) IN ()) HAVING (CAST(vt0.c0 AS BLOB) IN ()); -- 0ms;
SELECT DISTINCT (((t1.c0)) BETWEEN (((NOT (t1.c0)))) AND ((((t1.c89)AND(t1.c89))))) FROM vt0, t1 WHERE ((UPPER(0.7007640292918125) IN (QUOTE(x'')))); -- 0ms;
SELECT DISTINCT ((NULL)>(t1.c89)) COLLATE NOCASE COLLATE RTRIM FROM t1, vt0; -- 0ms;
SELECT DISTINCT (+ (((((vt0.c0)OR(t1.c89)))AND(t1.c89)))), ((((t1.c54)GLOB('8]㦒pX}7')))>(((t1.c0) NOTNULL))), t1.c54 COLLATE NOCASE COLLATE RTRIM FROM t1 WHERE (UPPER(DISTINCT 0.2809825960974732 COLLATE RTRIM)) GROUP BY (((((~ (t1.c89)))AND(((t1.c54) NOTNULL))))OR(t1.c0)), (((t1.c89, t1.c89, t1.c54, vt0.c0, t1.c89)) BETWEEN ((CAST(t1.c89 AS BLOB), vt0.c0 COLLATE NOCASE, (vt0.c0 IN ()), (((t1.c89)) NOT BETWEEN ((vt0.c0)) AND ((t1.c89))), t1.c89 COLLATE BINARY)) AND ((CAST(t1.c89 AS BLOB), UNLIKELY(t1.c54), ((t1.c0)<<(0x25444180)), ((((((((t1.c89)OR(t1.c0)))AND(t1.c0)))AND(t1.c0)))AND(t1.c54)), UNLIKELY(DISTINCT vt0.c0)))), (CASE WHEN '-950633609' THEN t1.c54 END IN (t1.c89)) HAVING (((~ (t1.c54))) BETWEEN (UNLIKELY(t1.c0)) AND ((t1.c89 IN (x''))));SELECT DISTINCT MIN(0.5152469353726014) FROM t1, vt0 UNION ALL SELECT DISTINCT (((t1.c54)) BETWEEN (((((t1.c54))<((t1.c0))))) AND ((CASE WHEN x'a5a9' THEN t1.c0 END))) FROM vt0;SELECT DISTINCT ((x'')<=(((vt0.c0) ISNULL))) FROM vt0 WHERE ('iN<ꑺ	0'); -- 0ms;
SELECT ALL t1.c54 FROM vt0, t1 WHERE (((0.7255887679267836 COLLATE RTRIM) NOT BETWEEN ((((x''))=(('<T뇝')))) AND ((((((((('')AND(x'')))AND(x'')))OR(NULL)))AND(x'c7aef9db'))))); -- 1ms;
SELECT DISTINCT ROW_NUMBER() OVER () FROM vt0, t1; -- 0ms;
SELECT ALL CAST(CASE t1.c89  WHEN t1.c54 THEN t1.c54 WHEN vt0.c0 THEN vt0.c0 WHEN t1.c0 THEN t1.c54 ELSE vt0.c0 END AS INTEGER) FROM vt0, t1 WHERE (((((0.15792187142269842)AND('PnAyaXS'))) NOT BETWEEN (CAST(x'eb3c' AS REAL)) AND (((((((((x'0db3')AND(x'f998')))AND(x'')))OR(0.8398315677959235)))OR('1797925637'))))) GROUP BY (((((((((((-1971526992)OR(vt0.c0)))OR(t1.c0)))OR(t1.c54)))OR(vt0.c0))))>=((CAST(t1.c0 AS TEXT)))) HAVING CASE highlight(vt0.c0, vt0.c0, t1.c0, t1.c0)  WHEN COUNT(*) THEN ((t1.c54)>=(vt0.c0)) WHEN t1.c0 THEN ((('1486122562', t1.c0, vt0.c0))<((t1.c0, t1.c0, vt0.c0))) WHEN ((t1.c89) BETWEEN (1790978940) AND (t1.c0)) THEN (~ (t1.c0)) ELSE (('') BETWEEN (vt0.c0) AND (vt0.c0)) END; -- 0ms;
SELECT ALL 965747824 COLLATE RTRIM, ((TRIM(vt0.c0, t1.c89)) NOT BETWEEN (((((vt0.c0)OR(vt0.c0)))OR(t1.c54))) AND ('-27772526')), ((CASE t1.c89  WHEN t1.c54 THEN t1.c54 WHEN t1.c54 THEN t1.c0 WHEN t1.c0 THEN vt0.c0 ELSE t1.c89 END)<<(t1.c54)) FROM vt0, t1; -- 0ms;
SELECT DISTINCT COUNT(((t1.c0) BETWEEN (t1.c0) AND (t1.c89))) OVER ( ORDER BY (~ (((t1.c54) NOT BETWEEN (vt0.c0) AND (t1.c54))))) FROM t1, vt0 NOT INDEXED WHERE ((~ (CAST(0X6a4eda6f AS NUMERIC)))); -- 0ms;
SELECT ALL NTH_VALUE(((((t1.c54)*(t1.c0))) NOT BETWEEN (CAST(t1.c0 AS NUMERIC)) AND (((t1.c89)<=(t1.c0)))), ((((vt0.c0) NOTNULL)) ISNULL)) OVER ( ROWS BETWEEN  CURRENT ROW AND  UNBOUNDED FOLLOWING) FROM vt0, t1 ORDER BY (((t1.c54, t1.c0, t1.c54)) NOT BETWEEN ((((t1.c54)GLOB(t1.c89)), DATETIME(t1.c89, t1.c54, t1.c89), CAST(t1.c54 AS REAL))) AND ((CASE WHEN t1.c0 THEN t1.c89 WHEN t1.c0 THEN t1.c89 WHEN t1.c89 THEN vt0.c0 WHEN t1.c89 THEN '0.889934464681523' WHEN NULL THEN t1.c89 END, (t1.c54 IN ()), 0.7063722494822569)))  NULLS FIRST;SELECT DISTINCT t1.c89 FROM t1, vt0; -- 0ms;
SELECT DISTINCT (- ((t1.c54 IN ()))) FROM t1, vt0; -- 0ms;
SELECT DISTINCT ((((t1.c54) IS FALSE)) NOT NULL) FROM vt0 WHERE (LIKELY(DISTINCT ((0.8166628326769578)IS(NULL))));SELECT ALL (((((t1.c0 IN (t1.c0)))OR(((((((((((((NULL)OR(t1.c54)))AND(vt0.c0)))OR(t1.c0)))OR(x'')))OR(t1.c54)))OR(t1.c54)))))AND(t1.c0 COLLATE NOCASE)) FROM vt0;SELECT DISTINCT MAX(((t1.c0) NOT BETWEEN (t1.c89) AND (t1.c0))) FROM t1; -- 1ms;
SELECT ((((t1.c54)=(t1.c54)))AND(((NULL)>=(vt0.c0)))) FROM t1, vt0 WHERE (((CAST(x'4262' AS REAL)) ISNULL)) LIMIT -963365051; -- 0ms;
SELECT DISTINCT t1.c54 FROM t1 WHERE (((CAST('' AS REAL))>>(((0xffffffffedae53ab) BETWEEN ('{vzb') AND (0xffffffffafd1ecce))))); -- 0ms;
SELECT DISTINCT ((-1078367059)<(0.8234750890649521)) FROM vt0 NOT INDEXED FULL OUTER JOIN t1 ON vt0.c0 WHERE ((((x'') BETWEEN (0.057656628886745165) AND (0.15889116083348087)) IN ((('1640830882')GLOB('-77151241'))))); -- 0ms;
SELECT ALL COUNT(*), CASE WHEN ((vt0.c0)AND(t1.c0)) THEN '峭(Cz	rF0)' ELSE vt0.c0 COLLATE NOCASE END, CASE ((t1.c89)IS NOT(t1.c54))  WHEN CASE WHEN t1.c89 THEN t1.c0 ELSE t1.c54 END THEN GROUP_CONCAT(t1.c54) ELSE ((((t1.c54)AND(t1.c0)))OR(vt0.c0)) END FROM t1;SELECT DISTINCT LOWER(x'') FROM vt0 WHERE (ABS(((((((((((((0X5c9d1e05)AND('&ML')))AND(1461920175)))OR(-1319060798)))AND('')))AND(x'')))OR('1055564168')))); -- 0ms;
SELECT (((t1.c0, x'', t1.c0)) BETWEEN ((((t1.c54)<<(t1.c0)), ((((t1.c89)OR(t1.c54)))AND(t1.c89)), ((t1.c54) IS TRUE))) AND ((CAST(0.09776669202231891 AS NUMERIC), ((((((((t1.c89)OR(t1.c54)))AND(t1.c89)))OR(0.5594904525978588)))OR(vt0.c0)), t1.c89 COLLATE BINARY))), AVG((t1.c54 IN ())), CASE ((0.9911929408840974) IS FALSE)  WHEN ((t1.c89) BETWEEN (t1.c0) AND (t1.c89)) THEN t1.c89 COLLATE NOCASE WHEN t1.c89 THEN (((vt0.c0, t1.c54, t1.c54))>((t1.c89, t1.c89, '*{)'))) WHEN (((vt0.c0))>=((t1.c0))) THEN ((((t1.c54)AND(t1.c0)))OR(t1.c89)) END FROM vt0, t1; -- 1ms;
SELECT DISTINCT ((t1.c54 COLLATE BINARY) NOT BETWEEN (((NULL)GLOB(t1.c54))) AND (t1.c89 COLLATE NOCASE)) FROM t1; -- 0ms;
SELECT DISTINCT CAST((NOT (t1.c0)) AS INTEGER), t1.c54, (((t1.c54 IN (t1.c0, 0.5183999477885219))) NOT NULL) FROM t1 WHERE ((((0.034277667853893745 IN ())) BETWEEN (CAST('0.020937059820000714' AS TEXT)) AND (CASE WHEN x'dd57' THEN '-693281946' ELSE x'829c' END))) ORDER BY (((((vt0.c0))>((t1.c89)))) BETWEEN (CASE WHEN t1.c54 THEN '-910545783' END) AND (((t1.c54)%(t1.c0)))) ASC  NULLS FIRST;SELECT DISTINCT (((((((((((((((t1.c0))>=((t1.c89))))AND(((t1.c54)IS(NULL)))))OR((((t1.c0, t1.c89, t1.c54))<=((t1.c54, vt0.c0, vt0.c0))))))OR(t1.c0 COLLATE BINARY)))OR(((t1.c89) IS TRUE))))OR(((t1.c89)|(t1.c89)))))AND(LOWER(t1.c89))) FROM vt0, t1; -- 0ms;
SELECT DISTINCT ((COUNT(*))OR(((((((((t1.c89)OR(t1.c89)))OR(0.23947355430483974)))OR(NULL)))AND(vt0.c0)))), t1.c89, LAST_VALUE(((t1.c54) IS TRUE) COLLATE BINARY) OVER () FROM t1 WHERE ('L[L3Xl');SELECT DISTINCT CASE WHEN CASE vt0.c0  WHEN t1.c89 THEN t1.c54 ELSE t1.c89 END THEN CASE WHEN vt0.c0 THEN t1.c54 ELSE vt0.c0 END WHEN load_extension(vt0.c0) THEN CASE WHEN vt0.c0 THEN vt0.c0 WHEN t1.c89 THEN t1.c89 WHEN vt0.c0 THEN t1.c54 END WHEN '	{' THEN ((vt0.c0)+(vt0.c0)) ELSE COUNT(t1.c89) END FROM vt0 WHERE ((NOT (HEX(DISTINCT NULL)))) LIMIT -506351840;SELECT DISTINCT LENGTH(((t1.c0) BETWEEN (t1.c0) AND (t1.c54))) FROM t1 WHERE (CASE WHEN ((((-1216088482)AND('-1102727759')))OR('L#')) THEN '-1690258981' COLLATE BINARY WHEN ((x'')<=(x'1e9f')) THEN CAST('E	' AS TEXT) WHEN NULL COLLATE NOCASE THEN ((x'2487')<(196279903)) END) GROUP BY (NOT ((~ (t1.c0)))) LIMIT 1867847518; -- 1ms;
SELECT DISTINCT SUM(((((t1.c0)AND(vt0.c0)))AND(t1.c54))) OVER (), (((vt0.c0 COLLATE RTRIM, ((t1.c0)IS(NULL)), (((t1.c54))<=((NULL)))))<((((vt0.c0) BETWEEN (t1.c89) AND (t1.c0)), MIN(NULL), vt0.c0 COLLATE RTRIM))), ((((t1.c89) NOTNULL))GLOB(((((t1.c0)AND(t1.c89)))AND(t1.c89)))) FROM vt0 RIGHT OUTER JOIN t1 ON TYPEOF(CASE t1.c54  WHEN t1.c54 THEN t1.c89 END); -- 0ms;
SELECT DISTINCT COUNT(x'') OVER (), ((vt0.c0) NOT BETWEEN (x'ff8c') AND (t1.c0)) COLLATE NOCASE, NULL FROM t1, vt0; -- 0ms;
SELECT DISTINCT 1516462383 FROM t1 WHERE (CAST(((x'9c53') NOT BETWEEN (NULL) AND ('2000439530')) AS INTEGER)); -- 0ms;
SELECT DISTINCT TOTAL((NOT (t1.c54))) FILTER(WHERE 0.36211405615769965) OVER () FROM t1 NOT INDEXED, vt0 WHERE (CAST(UNLIKELY(DISTINCT NULL) AS INTEGER)) ORDER BY (((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c89)) IN ()) DESC; -- 0ms;
SELECT DISTINCT (((((t1.c89))<((t1.c89)))) NOT BETWEEN (((((vt0.c0)AND(t1.c54)))AND(t1.c0))) AND (((vt0.c0)+(t1.c89)))) FROM vt0, t1 GROUP BY ((~ (t1.c89)) IN ()); -- 1ms;
SELECT ALL CASE WHEN vt0.c0 THEN ((((t1.c54)AND(t1.c89)))OR(t1.c89)) ELSE CAST(t1.c89 AS REAL) END FROM t1, vt0; -- 0ms;
SELECT DISTINCT ((((t1.c54)*(t1.c0))) NOT NULL), ((((t1.c54) BETWEEN (t1.c89) AND (t1.c0))) NOTNULL), ((((('-830616511' IN ()))AND(((t1.c89)-(t1.c0)))))OR((t1.c0 IN (0.09198787485385573, t1.c89)))) FROM vt0, t1 WHERE (ROUND((x'' IN ()), (+ (NULL)))); -- 0ms;
SELECT DISTINCT LIKELIHOOD(vt0.c0, 0.7316360686354625) FROM vt0 WHERE ((((NULL)>>(0.055689632224614205)) IN (CAST(0.4394667789908002 AS TEXT)))); -- 0ms;
SELECT DISTINCT COUNT(((t1.c54)LIKE(t1.c54))) OVER () FROM vt0, t1 WHERE (((((NULL) NOT BETWEEN (NULL) AND (0Xffffffffa97fe6fe))) BETWEEN ((('0.4104948171864089')>=(NULL))) AND ((('PxB&D1vrC') NOT BETWEEN (0x124fe084) AND (0.09035944233432924))))); -- 0ms;
SELECT ((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))OR(t1.c0)))OR(((((t1.c89)OR(t1.c89)))OR(t1.c89)))) FROM t1;SELECT CASE WHEN x'' THEN t1.c0 END COLLATE NOCASE, ((- (t1.c54)) IN (((t1.c89) NOT BETWEEN (t1.c89) AND (t1.c0)), (vt0.c0 IN ()))), CAST(NULL AS BLOB) COLLATE BINARY COLLATE RTRIM FROM t1 ORDER BY UNLIKELY(DISTINCT CAST(t1.c89 AS REAL)) ASC, (('1486122562') ISNULL) COLLATE RTRIM  NULLS LAST, t1.c89 DESC  NULLS FIRST, ((((((((((t1.c89)OR(vt0.c0)))AND(x'')))OR(x'')))AND(vt0.c0))) NOT NULL) ASC  NULLS LAST;SELECT CAST((('df') IS TRUE) AS INTEGER) FROM t1, vt0; -- 0ms;
SELECT ALL ((((t1.c54) IS FALSE))<(NULL)) FROM t1 WHERE ((+ (((((NULL)AND(x'')))OR(x''))))); -- 0ms;
SELECT DISTINCT json_remove(((t1.c89)<=(t1.c54)), ((((NULL)OR(t1.c54)))OR(t1.c0)), CAST(t1.c89 AS NUMERIC), t1.c54 COLLATE RTRIM) FROM t1 WHERE ((-869800098 COLLATE RTRIM IN ())); -- 0ms;
SELECT ALL ((((t1.c54)GLOB(0.6706733612968762))) NOT BETWEEN (((vt0.c0)*(t1.c89))) AND (CAST(vt0.c0 AS BLOB))) FROM t1 WHERE (CAST((NULL IN (0.10705214465549784, x'4907db55', 1802085498)) AS TEXT));SELECT ALL (((t1.c89 COLLATE NOCASE))<((((((t1.c89)AND(t1.c0)))OR(t1.c0))))) FROM t1, vt0; -- 0ms;
SELECT ALL (((CAST(t1.c0 AS NUMERIC)))<((TOTAL(t1.c0)))) FROM t1 ORDER BY (('1170188427') NOT BETWEEN (((t1.c89) ISNULL)) AND (((t1.c0) IS FALSE))) DESC  NULLS FIRST, (((('TN]R6⤸ᶹH')<>(vt0.c0))) BETWEEN (CASE WHEN t1.c89 THEN t1.c0 ELSE t1.c54 END) AND ((vt0.c0 IN ()))) DESC;SELECT DISTINCT (- ((t1.c89 IN ()))) FROM vt0, t1 WHERE ('-1202123700') ORDER BY ((((t1.c54)+(t1.c89)))<=(CASE t1.c54  WHEN t1.c0 THEN t1.c89 ELSE vt0.c0 END)) ASC, (TRIM(DISTINCT t1.c0) IN ())  NULLS FIRST, ((((((('wd')AND(t1.c54)))AND(vt0.c0))))=((((vt0.c0) BETWEEN (t1.c54) AND (vt0.c0))))) ASC  NULLS FIRST; -- 0ms;
SELECT DISTINCT ((((((((((((t1.c89)AND(t1.c0)))AND(vt0.c0)))AND(t1.c89)))OR(t1.c54)))AND(t1.c54)))AND(t1.c54)) COLLATE RTRIM FROM t1;SELECT DISTINCT (+ ((((t1.c89)) BETWEEN ((t1.c0)) AND ((vt0.c0))))), vt0.c0, NULL FROM vt0 WHERE (((((x'')+(x'456c')))IS('E>Fw2' COLLATE RTRIM))) ORDER BY ((((t1.c54)AND((t1.c0 IN ()))))OR(((((t1.c54)AND(vt0.c0)))AND(vt0.c0)))) ASC, ((((t1.c0)%(t1.c54)))GLOB((t1.c0 IN ())))  NULLS FIRST;SELECT ALL NTH_VALUE(t1.c54, x'') OVER () FROM t1 WHERE (((CAST(0xfffffffff6f04b8c AS INTEGER)) NOT BETWEEN (((0.017137608824929318) BETWEEN (0.30241331362482415) AND (''))) AND (CAST(NULL AS NUMERIC))));SELECT DISTINCT (((t1.c89 IN ()))AND(TOTAL(0.8452767727979383))) FROM t1 WHERE ((((('%G')IS NOT(x'fb15')))<(((NULL)|(x''))))); -- 0ms;
SELECT DISTINCT t1.c0, NULL, (((((((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))OR(((t1.c0)<<(vt0.c0)))))AND((((vt0.c0)) BETWEEN ((t1.c89)) AND ((vt0.c0))))))OR(((t1.c54)LIKE(t1.c0)))))OR(((t1.c0) NOTNULL))) FROM t1, vt0; -- 0ms;
SELECT DISTINCT CASE WHEN (- (t1.c54)) THEN ((t1.c54) IS FALSE) ELSE ((vt0.c0)OR(t1.c89)) END, CASE CASE WHEN vt0.c0 THEN ' oRh\nY\n&~' WHEN t1.c0 THEN vt0.c0 WHEN t1.c89 THEN -351437813 END  WHEN CAST(t1.c54 AS REAL) THEN (t1.c0 IN (vt0.c0)) WHEN ((((t1.c54)AND(5.38226983E8)))AND(vt0.c0)) THEN ((t1.c89)+(t1.c54)) WHEN x'' COLLATE BINARY THEN (- (t1.c89)) END, CASE WHEN CASE t1.c54  WHEN t1.c0 THEN t1.c89 ELSE t1.c0 END THEN (NOT (t1.c54)) END FROM vt0, t1 WHERE (CHANGES()) ORDER BY (NOT ((~ (t1.c0)))) DESC  NULLS FIRST, t1.c54, ((((((((((t1.c0)OR(t1.c0)))AND(vt0.c0)))AND(t1.c89)))OR(0.3410471546056387))) NOT BETWEEN ((('jxV') NOT BETWEEN (t1.c54) AND (t1.c54))) AND (((((t1.c89)OR(t1.c0)))OR(vt0.c0)))) ASC  NULLS LAST; -- 0ms;
SELECT DISTINCT CAST(CASE WHEN t1.c54 THEN '275689826' END AS REAL), NTH_VALUE(CAST(vt0.c0 AS NUMERIC) COLLATE RTRIM, (+ (((vt0.c0)-(vt0.c0))))) OVER (), (((vt0.c0)) BETWEEN ((t1.c54 COLLATE NOCASE)) AND ((MAX(t1.c89)))) FROM vt0;SELECT DISTINCT COUNT(*) OVER () FROM t1 WHERE ((~ (((x'82be')-(0.7565435216166639))))); -- 0ms;
SELECT CASE CASE t1.c54  WHEN t1.c0 THEN vt0.c0 WHEN vt0.c0 THEN t1.c54 WHEN t1.c89 THEN t1.c0 ELSE t1.c89 END  WHEN ((((t1.c54)OR(vt0.c0)))AND(t1.c89)) THEN CAST(0X6ed4b925 AS INTEGER) END FROM t1 WHERE (((CASE WHEN '' THEN NULL ELSE '' END) BETWEEN ((0.6929350338856209 IN (x'', ''))) AND ((('-954372782')GLOB(1503063458)))));SELECT ALL ((t1.c54)%(321850035)) FROM t1 ORDER BY (((((vt0.c0))>((t1.c54))))!=((~ (t1.c89)))) DESC;SELECT DISTINCT GROUP_CONCAT(((t1.c54)||(t1.c89))) OVER ( PARTITION BY ((((t1.c0)AND(t1.c0)))AND(vt0.c0)) COLLATE BINARY, ((((((vt0.c0) IS TRUE))AND(((t1.c0) IS TRUE))))OR(((t1.c0)AND(t1.c0))))), ((((t1.c0, t1.c54, vt0.c0, t1.c0, vt0.c0)) NOT BETWEEN ((0.5297367173039897, t1.c0, t1.c89, vt0.c0, vt0.c0)) AND ((vt0.c0, x'', t1.c89, t1.c54, t1.c89))) IN ()), LIKELIHOOD(vt0.c0, 0.3035056310550235) FROM t1, vt0; -- 0ms;
SELECT DISTINCT (NOT (CASE t1.c0  WHEN t1.c0 THEN t1.c89 ELSE t1.c54 END)), (((((t1.c0))=((t1.c0)))) NOT BETWEEN (((0.5704260744366269)&(vt0.c0))) AND (t1.c89)), (NOT (t1.c54)) COLLATE RTRIM COLLATE NOCASE FROM t1 WHERE ((0Xffffffffdb215c97 COLLATE NOCASE IN (NULL))) GROUP BY ((LOWER(DISTINCT vt0.c0))/(DATE(t1.c0, t1.c0, NULL))), (+ (t1.c54)) COLLATE NOCASE, (((t1.c0)) NOT BETWEEN (((((t1.c54)) BETWEEN ((t1.c89)) AND ((t1.c54))))) AND ((((((vt0.c0)AND(t1.c89)))AND(t1.c54))))) HAVING (((~ (vt0.c0))) BETWEEN (((((t1.c89)OR(t1.c54)))AND(NULL))) AND ((((vt0.c0)) BETWEEN ((t1.c0)) AND ((t1.c89)))));SELECT DISTINCT DENSE_RANK() OVER () FROM t1 LIMIT -1756522933 OFFSET 443757645; -- 1ms;
SELECT ALL (+ (vt0.c0)), 0.1624422212197718, (- ((vt0.c0 IN ()))) FROM vt0 WHERE (((('iKZy64+X', '-950633609', '}vWG\r涤o')) BETWEEN (((((NULL))<=((x''))), (1.236341716E9 IN ()), CASE WHEN 0.9601424683136717 THEN x'03c5' END)) AND ((((x'')GLOB('t')), (((NULL))<=((0x35957a9f))), 'qg' COLLATE NOCASE)))); -- 0ms;
SELECT DISTINCT (((LOWER(vt0.c0)))<((((vt0.c0)IS(t1.c0))))) FROM t1, vt0 WHERE (CASE WHEN CASE 0.41003711266252874  WHEN 0.05660027474796214 THEN 0.9193455029343802 ELSE -2050037330 END THEN (NOT ('')) END); -- 0ms;
SELECT ((COUNT(*))IS(t1.c54 COLLATE NOCASE)) FROM t1; -- 0ms;
SELECT DISTINCT (((NOT (t1.c0))) NOTNULL) FROM vt0, t1 WHERE (((PRINTF('', NULL, '')) NOT BETWEEN (((0X3194b71e)<(NULL))) AND (((NULL)LIKE(x''))))) LIMIT -241997602 OFFSET 1108166555; -- 3ms;
SELECT ALL CASE WHEN CAST(t1.c54 AS REAL) THEN LOWER(vt0.c0) END FROM t1 WHERE (CAST(CAST(0.4885337306742783 AS REAL) AS INTEGER)) LIMIT 1087020366;SELECT ALL ((((((((((t1.c0)OR(t1.c89)))OR((NOT (t1.c0)))))OR(AVG(NULL))))OR(JULIANDAY(t1.c89, t1.c54, t1.c89))))OR((- (vt0.c0)))), '275689826', t1.c0, (NOT (SUM(vt0.c0))), ((((((((((((((t1.c89)OR(t1.c54)))OR(t1.c89)))OR(t1.c89)))AND(vt0.c0)))OR(vt0.c0)))AND(t1.c0))) IS TRUE) FROM t1 WHERE (CASE WHEN (('')-(NULL)) THEN (NOT ('儃co')) ELSE ((((NULL)OR(0.9023986027885004)))OR('-732763050')) END);SELECT DISTINCT ((t1.c0) NOT BETWEEN (t1.c0 COLLATE NOCASE) AND (t1.c0 COLLATE RTRIM)) FROM vt0 WHERE (CAST(((x'') IS FALSE) AS REAL));SELECT ((((t1.c89) BETWEEN (vt0.c0) AND (vt0.c0))) NOT BETWEEN (CASE vt0.c0  WHEN t1.c54 THEN vt0.c0 WHEN t1.c89 THEN t1.c0 WHEN t1.c54 THEN t1.c89 ELSE t1.c89 END) AND (t1.c89)), CASE WHEN ((t1.c0)==(vt0.c0)) THEN t1.c89 END, '0.20383007176588452' FROM t1, vt0; -- 0ms;
SELECT FIRST_VALUE(((vt0.c0 COLLATE NOCASE) NOTNULL)) OVER (), (((((t1.c0 IN ()))OR((((t1.c0))>((t1.c0))))))AND((~ (vt0.c0)))), t1.c54 FROM t1, vt0 WHERE ((NULL IN ()) COLLATE BINARY); -- 0ms;
SELECT ALL t1.c89, (+ (((((((((vt0.c0)AND(vt0.c0)))OR('뜱~#X%')))AND(t1.c89)))AND(t1.c89)))), NULL COLLATE NOCASE FROM t1 ORDER BY ((CASE t1.c0  WHEN vt0.c0 THEN 1.99628208E8 WHEN t1.c0 THEN x'' WHEN t1.c0 THEN t1.c0 WHEN t1.c54 THEN vt0.c0 WHEN t1.c0 THEN vt0.c0 END)GLOB(CAST(vt0.c0 AS INTEGER)))  NULLS LAST, t1.c89;SELECT DISTINCT (((vt0.c0))<=((0.26295627291850754))) COLLATE RTRIM, ((((CAST(t1.c54 AS REAL))OR(((t1.c54) BETWEEN (vt0.c0) AND (t1.c0)))))AND(vt0.c0)), (((t1.c89 IN ()))<=(CAST(t1.c0 AS TEXT))) FROM t1 WHERE (LIKELY(JULIANDAY(0.16895474397446308, 0xffffffffb709b530, 0X2af98ba8)));SELECT ABS(vt0.c0), ((t1.c89) NOT BETWEEN (t1.c0) AND (x'')) COLLATE BINARY, CAST(((t1.c89)LIKE(t1.c89)) AS TEXT) FROM t1;SELECT DISTINCT (((t1.c89)) BETWEEN ((UPPER(t1.c54))) AND ((CAST(NULL AS INTEGER)))), 0X54711b39, (NOT (t1.c89)) FROM vt0 WHERE (((-1276761899) BETWEEN (CAST(797519485 AS BLOB)) AND (((('^|သJ5>'))!=(('669041444'))))));SELECT DISTINCT ((t1.c54 IN ()) IN (((t1.c54) NOT BETWEEN (t1.c0) AND (t1.c0)))) FROM vt0 ORDER BY CASE WHEN vt0.c0 THEN t1.c89 ELSE t1.c54 END COLLATE NOCASE COLLATE NOCASE, 0.044162346012779685  NULLS LAST;SELECT DISTINCT ((((0.6188454172150435)OR(((t1.c54) BETWEEN (t1.c54) AND (vt0.c0)))))AND(UNLIKELY(DISTINCT t1.c54))) FROM vt0 GROUP BY ((CASE t1.c0  WHEN t1.c0 THEN t1.c0 WHEN t1.c54 THEN vt0.c0 WHEN t1.c54 THEN t1.c89 ELSE '0.2541240478150003' END) BETWEEN (CAST(t1.c0 AS BLOB)) AND ((~ (t1.c0)))) HAVING (((((0.015550691658107851))<=((t1.c0))))==(COUNT(*)));SELECT ALL LIKE(((t1.c54) NOT NULL), vt0.c0, '0'), ((((t1.c0)OR(t1.c54))) NOT BETWEEN (AVG(t1.c0)) AND (GROUP_CONCAT(vt0.c0))), ((((((((COUNT(t1.c89))AND('-1305571746')))OR(t1.c89)))OR(NULL)))OR(t1.c89)), CAST(((((((((vt0.c0)OR(vt0.c0)))OR(t1.c89)))OR(t1.c54)))AND(vt0.c0)) AS NUMERIC), (+ (((((t1.c89)OR(t1.c54)))OR(vt0.c0)))), (- (t1.c0)), (- (CASE WHEN vt0.c0 THEN vt0.c0 WHEN t1.c89 THEN vt0.c0 WHEN t1.c89 THEN t1.c0 ELSE t1.c54 END)) FROM vt0 NOT INDEXED;SELECT DISTINCT ((AVG(t1.c89))>=((((t1.c54, vt0.c0, vt0.c0))>((1.640830882E9, t1.c89, t1.c0))))) FROM t1, vt0 WHERE (CAST(0.6467108368111213 AS INTEGER)); -- 0ms;
SELECT DISTINCT (((t1.c89) NOT NULL) IN ((((t1.c89, t1.c54, t1.c0)) NOT BETWEEN ((t1.c0, 'naꢋq?gijo', t1.c54)) AND ((vt0.c0, t1.c89, t1.c89))), t1.c0 COLLATE RTRIM)) FROM vt0;SELECT DISTINCT '1797925637' FROM t1, vt0 WHERE (((NULL)-(NULL)) COLLATE RTRIM); -- 0ms;
SELECT CASE TYPEOF(t1.c89)  WHEN (('?*')==(vt0.c0)) THEN DATETIME(t1.c0, t1.c89, vt0.c0, t1.c0, t1.c54) WHEN ((vt0.c0)>=(t1.c54)) THEN ((vt0.c0)AND(t1.c0)) WHEN CASE WHEN t1.c89 THEN t1.c89 ELSE t1.c54 END THEN t1.c54 ELSE LIKE(NULL, t1.c0) END FROM t1, vt0; -- 0ms;
SELECT DISTINCT (((COUNT(*), (+ (t1.c54)), t1.c54 COLLATE NOCASE))<((('-1497107816' IN ()), ((t1.c54) NOTNULL), ((((((((((((t1.c89)OR(0.5862922399947974)))OR(t1.c0)))OR(t1.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(t1.c54))))) FROM vt0, t1; -- 0ms;
SELECT ALL (((((t1.c89)) BETWEEN ((vt0.c0)) AND ((t1.c0))))*(GROUP_CONCAT(vt0.c0))) FROM t1, vt0; -- 0ms;
SELECT DISTINCT (NOT (vt0.c0)), ((vt0.c0 IN ()) IN ()), ((((t1.c89) NOTNULL))<<((((t1.c89))>=((vt0.c0))))) FROM t1, vt0 WHERE ((((((((NULL)AND(-375592255)))OR(NULL)), (~ (x'')), CAST('' AS BLOB)))!=((((450845933) NOT BETWEEN (NULL) AND (1.506828617E9)), CASE WHEN x'' THEN 0.585837025719139 END, ((('978453592')) BETWEEN (('-1184942313')) AND ((x'a0e3'))))))) GROUP BY (((1918947345 IN ())) NOTNULL) HAVING t1.c54 LIMIT -1802396624 OFFSET -555613780; -- 0ms;
SELECT ALL ((((((t1.c54) NOT NULL))OR(COUNT(*))))OR(CAST(t1.c54 AS BLOB))), t1.c89, (- (((0.4509850537555564)&(vt0.c0)))) FROM t1 WHERE (((+ (0.22596121604799901)) IN ()));SELECT NULL FROM t1, vt0 WHERE ((((((((((('f桢')IS NOT(0.5217939033301399)))AND((('')==('0.44074582331186507')))))AND(((NULL)<<(x'')))))AND((NOT (1732303289)))))AND(0.021671361574221337))); -- 0ms;
SELECT DISTINCT vt0.c0, ((((t1.c89) IS FALSE))|('/E')), (((t1.c89)) NOT BETWEEN ((CASE vt0.c0  WHEN t1.c54 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN t1.c89 THEN t1.c89 END)) AND ((t1.c54))) FROM t1, vt0; -- 0ms;
SELECT ((((vt0.c0)IS(0.8860258378788495)))*(1236341716)), ((x'04b1') BETWEEN (((((((((x'')OR(0.8549498982775312)))OR('53浒L?Z')))OR(t1.c89)))AND(t1.c89))) AND (((t1.c54) NOT BETWEEN (t1.c89) AND (t1.c54)))), (+ (CASE t1.c0  WHEN vt0.c0 THEN t1.c0 WHEN t1.c54 THEN t1.c89 WHEN t1.c89 THEN t1.c0 ELSE t1.c0 END)) FROM t1, vt0; -- 0ms;
SELECT DISTINCT LAG((- (vt0.c0)) COLLATE BINARY, CASE WHEN ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) THEN ((vt0.c0)<>(vt0.c0)) ELSE (('')-(vt0.c0)) END, (vt0.c0 COLLATE BINARY IN ())) OVER (), (+ (LIKE(t1.c89, t1.c89))), ((t1.c54)<>(((t1.c89)LIKE(t1.c54)))), CASE CAST(t1.c89 AS BLOB)  WHEN (t1.c0 IN ()) THEN (~ (vt0.c0)) END, t1.c54 FROM vt0;SELECT (((- (vt0.c0))) BETWEEN (((t1.c89)*(t1.c54))) AND ((((t1.c0)) BETWEEN ((x'')) AND ((t1.c89))))) FROM t1 WHERE ((((x'', x'', x'')) BETWEEN ((x'' COLLATE NOCASE, CAST('0.3796322216568403' AS REAL), ((((0X9520f2f)AND(0.8286608386209233)))OR(NULL)))) AND (((('0.39295229934213627')*('l')), ('2106903604' IN ()), (('1066631565')>>(NULL)))))) ORDER BY (((((t1.c89, t1.c0, t1.c0))<((t1.c89, t1.c89, vt0.c0))))OR(x'')), LIKELIHOOD(CAST(t1.c54 AS REAL), 0.08056862692338285), ((((((vt0.c0)>=(t1.c0)))AND(((t1.c0)<<(vt0.c0)))))AND(((t1.c89)<<(vt0.c0))))  NULLS FIRST;SELECT ALL ((((TRIM(t1.c54))OR(((vt0.c0) BETWEEN (t1.c54) AND (t1.c0)))))OR((- (t1.c54)))) FROM t1, vt0 WHERE ('TQ&<'); -- 0ms;
SELECT DISTINCT (((t1.c54) NOT BETWEEN (t1.c54) AND (t1.c0)) IN ()) FROM t1 WHERE ((- (CAST('1428032570' AS NUMERIC)))); -- 0ms;
SELECT CUME_DIST() OVER ( GROUPS BETWEEN  CURRENT ROW AND CAST(CAST(vt0.c0 AS INTEGER) AS REAL) PRECEDING), CAST(((((((((((((t1.c54)OR(t1.c89)))OR(0x595471f9)))AND(t1.c54)))OR(t1.c0)))AND(t1.c89)))AND(NULL)) AS REAL), (- (CASE t1.c89  WHEN t1.c0 THEN t1.c54 END)) FROM t1;SELECT DISTINCT (((t1.c0) BETWEEN (vt0.c0) AND (vt0.c0)) IN ()), ((((t1.c89) NOTNULL))<>((((t1.c54)) NOT BETWEEN ((t1.c0)) AND ((vt0.c0))))), (('JR')%(((((t1.c0)AND(t1.c89)))AND(t1.c89)))) FROM t1 WHERE (CAST((0.6693677734491825 IN ()) AS INTEGER));SELECT DISTINCT CAST(((t1.c0) IS TRUE) AS BLOB) FROM t1, vt0 WHERE ((- (x'')) COLLATE NOCASE); -- 0ms;
SELECT DISTINCT x'' FROM vt0, t1; -- 0ms;
SELECT DISTINCT (- (ABS(t1.c54))) FROM t1; -- 0ms;
SELECT ((((t1.c89)&(x''))) BETWEEN ((t1.c0 IN ())) AND ((x'' IN (0.07968825831624471)))), ((t1.c89)OR(((t1.c54)OR(0.9494930135396316)))), (((((((((t1.c54 IN ()))OR(vt0.c0)))OR((~ (t1.c0)))))AND((+ (t1.c54)))))AND(CASE t1.c89  WHEN t1.c0 THEN vt0.c0 WHEN vt0.c0 THEN t1.c89 WHEN t1.c0 THEN t1.c0 END)), GROUP_CONCAT(729754748), (~ ((- (vt0.c0)))), (((t1.c0)) NOT BETWEEN (((vt0.c0 IN ()))) AND ((MIN(t1.c0, vt0.c0)))), RANK() OVER () FROM t1;SELECT DISTINCT (((t1.c89)) NOT BETWEEN ((t1.c0)) AND ((AVG(t1.c0)))) FROM t1; -- 0ms;
SELECT ALL t1.c54 FROM t1, vt0; -- 0ms;
SELECT ALL (((((t1.c0 IN ()))AND(((((vt0.c0)OR(vt0.c0)))OR(t1.c89)))))OR(((t1.c89)<<(t1.c89)))), CAST(t1.c54 AS BLOB), (((t1.c89, t1.c54, vt0.c0)) NOT BETWEEN (((((t1.c0, vt0.c0, t1.c89))==((vt0.c0, t1.c0, t1.c0))), ((t1.c0) NOT NULL), (~ (t1.c0)))) AND ((((vt0.c0)||(t1.c89)), CASE vt0.c0  WHEN '1640830882' THEN t1.c0 ELSE t1.c54 END, ((t1.c89)==(t1.c89))))) FROM vt0, t1 WHERE ((~ (((((((((((((NULL)OR('-950633609')))AND(-867935799)))AND('-1403356082')))OR(x'')))OR(NULL)))OR(''))))); -- 1ms;
SELECT LAG(((((vt0.c0) ISNULL)) NOT NULL), vt0.c0, ((((((((((t1.c0)AND(vt0.c0)))OR(vt0.c0)))AND(816487572)))AND(0.11806112805862867)))AND(((t1.c0)LIKE('fw'))))) OVER ( ROWS t1.c89 PRECEDING) FROM t1, vt0; -- 0ms;
SELECT DISTINCT COUNT(*) FROM vt0, t1 ORDER BY ((((t1.c0)<=(t1.c0)))-(((vt0.c0)-(t1.c89)))), x''  NULLS FIRST; -- 0ms;
SELECT t1.c0 FROM t1 INNER JOIN vt0 ON CASE WHEN vt0.c0 THEN CAST(t1.c89 AS BLOB) WHEN CASE WHEN t1.c0 THEN t1.c54 ELSE vt0.c0 END THEN ((((t1.c89)AND(t1.c0)))OR(vt0.c0)) WHEN (t1.c0 IN ()) THEN ((((t1.c89)OR(t1.c54)))AND(t1.c54)) END WHERE (((NOT ('')) IN ((((((((('')AND(x'')))AND(NULL)))OR(-1387511650)))AND(-1.395729143E9)), (0Xffffffffe3b9da94 IN ())))); -- 0ms;
SELECT DISTINCT (((- ('⡮툠')))<<(CAST(t1.c0 AS REAL))) FROM vt0;SELECT DISTINCT CAST(CASE t1.c54  WHEN vt0.c0 THEN t1.c0 ELSE '1813533330' END AS TEXT) FROM t1;SELECT ALL (IFNULL(t1.c0, t1.c89) IN (vt0.c0)), LAST_VALUE((((t1.c0 IN (t1.c89)))IS((0.5101061764210506 IN ())))) OVER (), ((((vt0.c0) IS FALSE)) NOT NULL) FROM t1, vt0; -- 1ms;
SELECT DISTINCT (vt0.c0 COLLATE BINARY IN ()), (((vt0.c0, t1.c0, vt0.c0)) NOT BETWEEN ((((((t1.c0)AND(t1.c89)))AND(t1.c54)), TOTAL(t1.c89), (((t1.c0)) BETWEEN ((0xffffffffa2e6dc9e)) AND ((t1.c54))))) AND ((((vt0.c0)&(t1.c89)), CAST(t1.c0 AS NUMERIC), ((t1.c54)<(t1.c0))))), ((CAST(t1.c54 AS REAL)) NOT NULL) FROM vt0, t1 WHERE ((('-593210185') NOT BETWEEN (x'd94e') AND (NULL)) COLLATE BINARY); -- 0ms;
SELECT DISTINCT ((((((((NULLIF(t1.c0, vt0.c0))AND((t1.c54 IN ()))))AND(LIKELIHOOD(t1.c0, 0.31465306315639463))))OR(CASE t1.c89  WHEN t1.c0 THEN vt0.c0 ELSE vt0.c0 END)))AND(IFNULL(t1.c89, t1.c0))), (t1.c89 IN ()), CAST((+ (t1.c89)) AS TEXT) FROM t1, vt0 INDEXED BY i82;SELECT DISTINCT (((((('-1043073188')AND(t1.c89)))AND(t1.c89))) BETWEEN (TOTAL(0.990617149594495)) AND ((+ (t1.c89)))), AVG(((t1.c54) BETWEEN (t1.c89) AND (t1.c0))) OVER ( ORDER BY ((t1.c0 IN ()) IN (CASE WHEN t1.c54 THEN t1.c54 END))  NULLS LAST, ((CASE WHEN t1.c89 THEN vt0.c0 WHEN t1.c89 THEN t1.c89 WHEN t1.c89 THEN t1.c0 ELSE t1.c54 END)>>(t1.c0)), ((((CASE WHEN t1.c89 THEN t1.c54 END)OR(CASE WHEN vt0.c0 THEN t1.c54 ELSE t1.c89 END)))AND((- (t1.c54)))) ASC  NULLS FIRST), (~ ((+ (vt0.c0)))) FROM vt0 WHERE ((((((((0xfffffffff9baf484)) NOT BETWEEN ((0Xffffffffeda91f49)) AND ((NULL))))OR(((((((((0.9503237410835899)AND('-210546124')))AND(0.6857489104103337)))OR(0.3742889232762676)))AND(0xfffffffff50af2de)))))OR((((NULL))>((''))))));SELECT ALL CASE WHEN CASE WHEN vt0.c0 THEN vt0.c0 WHEN t1.c89 THEN t1.c0 WHEN vt0.c0 THEN vt0.c0 ELSE t1.c54 END THEN CASE WHEN t1.c89 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN t1.c0 THEN t1.c89 ELSE t1.c89 END ELSE CASE WHEN t1.c54 THEN vt0.c0 END END, ((t1.c0 COLLATE BINARY) IS FALSE), ((((((t1.c0)AND(t1.c89)))OR(t1.c89))) IS TRUE) FROM t1 CROSS JOIN vt0 ON ((CASE x''  WHEN t1.c89 THEN t1.c89 END)%(((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c89)))) WHERE ((((((0.07922988820391663) IS TRUE)))!=(((((NULL)) BETWEEN ((x'')) AND ((NULL))))))); -- 0ms;
SELECT DISTINCT ((x'')!=(CASE t1.c89  WHEN t1.c54 THEN vt0.c0 WHEN t1.c89 THEN NULL WHEN t1.c54 THEN t1.c0 ELSE t1.c89 END)), CAST(CAST(t1.c54 AS REAL) AS INTEGER), (((TOTAL(t1.c0)))==(((~ (t1.c54))))) FROM t1, vt0; -- 1ms;
SELECT DISTINCT (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0 COLLATE RTRIM))), (((vt0.c0) NOT NULL) IN ()), ((CAST(x'' AS TEXT)) BETWEEN ((- (t1.c89))) AND (((t1.c89) NOT BETWEEN (vt0.c0) AND (t1.c54)))) FROM vt0, t1 WHERE ((TRIM(DISTINCT 0.2171166189014595, NULL) IN ())); -- 0ms;
SELECT DISTINCT GLOB(((t1.c89)IS NOT(t1.c0)), CAST(t1.c54 AS NUMERIC)) FROM t1; -- 0ms;
SELECT DISTINCT t1.c0 FROM vt0;SELECT ALL ((((t1.c54) NOTNULL)) NOT BETWEEN (UNLIKELY(t1.c0)) AND ((+ (vt0.c0)))) FROM vt0;SELECT TOTAL(((t1.c54)IS(vt0.c0))) OVER (), SUM((((t1.c0, t1.c89, vt0.c0)) NOT BETWEEN ((t1.c54, t1.c54, vt0.c0)) AND ((vt0.c0, NULL, t1.c0)))), MAX(CAST(t1.c54 AS NUMERIC)) FROM vt0, t1 WHERE (x'' COLLATE BINARY); -- 1ms;
SELECT DISTINCT MIN(((vt0.c0)<=(t1.c0))) FROM vt0;