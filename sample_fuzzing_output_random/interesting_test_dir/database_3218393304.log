-- Time: 2024/06/07 15:32:27
-- Database: database4
-- Database version: 3.40.0
-- seed value: 3218393304
PRAGMA cache_size = 50000; -- 7ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
CREATE TEMP TABLE IF NOT EXISTS t0 (c0 BLOB ); -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
ALTER TABLE t0 RENAME TO t1; -- 0ms;
CREATE INDEX i14 ON t1(((((c0)AND(c0)))AND(c0)) COLLATE NOCASE COLLATE RTRIM DESC) WHERE ((((((c0)AND(c0)))OR(c0))) NOT BETWEEN (((((c0)OR(c0)))AND(c0))) AND (((c0)|(c0)))); -- 0ms;
ANALYZE t1; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT OR ABORT INTO t1(c0) VALUES (NULL); -- 1ms;
REINDEX; -- 0ms;
PRAGMA legacy_file_format = true; -- 0ms;
ANALYZE; -- 0ms;
REINDEX; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' unordered'); -- 0ms;
VACUUM temp; -- 0ms;
PRAGMA main.defer_foreign_keys = true; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR FAIL INTO t1(c0) VALUES (NULL); -- 0ms;
INSERT OR ROLLBACK INTO t1 VALUES (x''); -- 1ms;
ANALYZE; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT OR REPLACE INTO t1 VALUES (0.6587899887294352); -- 1ms;
PRAGMA main.reverse_unordered_selects; -- 1ms;
END; -- 0ms;
INSERT OR IGNORE INTO t1(c0) VALUES ('-1103926348'); -- 0ms;
INSERT OR ABORT INTO t1 VALUES ('-353684806'); -- 0ms;
PRAGMA temp.defer_foreign_keys = true; -- 0ms;
INSERT OR ABORT INTO t1 VALUES (NULL); -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO t1(c0) VALUES ('0.6587899887294352'); -- 0ms;
INSERT OR IGNORE INTO t1(c0) VALUES (NULL); -- 0ms;
CREATE UNIQUE INDEX i89 ON t1(c0 COLLATE RTRIM) WHERE (((((c0, c0, c0)) BETWEEN ((c0, c0, c0)) AND ((c0, c0, c0))))%(c0 COLLATE BINARY)); -- 0ms;
DELETE FROM t1; -- 0ms;
PRAGMA stats; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO t1 VALUES (0.7404522334458915); -- 0ms;
UPDATE t1 SET c0='' WHERE t1.c0; -- 1ms;
UPDATE t1 SET c0=NULL; -- 1ms;
INSERT OR REPLACE INTO t1(c0) VALUES (NULL), (0.782977909074161), (0.782977909074161); -- 0ms;
REINDEX; -- 0ms;
VACUUM; -- 1ms;
PRAGMA legacy_file_format; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR FAIL t1 SET (c0)=('1}+l!_'); -- 0ms;
REINDEX; -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
UPDATE OR ABORT t1 SET c0=x'' WHERE (((t1.c0)) NOT BETWEEN ((((t1.c0) IS TRUE))) AND ((((t1.c0)!=('atB{d '))))); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
REINDEX; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA automatic_index = false; -- 0ms;
REINDEX RTRIM; -- 0ms;
ALTER TABLE t1 RENAME COLUMN c0 TO c14; -- 0ms;
UPDATE OR IGNORE t1 SET c14=0.10964481771769274, c14=x'' WHERE CASE CAST(t1.c14 AS NUMERIC)  WHEN t1.c14 THEN COALESCE(t1.c14, t1.c14, t1.c14, t1.c14) END; -- 1ms;
UPDATE t1 SET c14='', c14='', c14=x'' WHERE ((t1.c14)|(((t1.c14)*(t1.c14)))); -- 0ms;
UPDATE OR IGNORE t1 SET c14=x'', c14=0.4231540335046805 WHERE (((- (t1.c14)))>>(TRIM(DISTINCT t1.c14))); -- 0ms;
ALTER TABLE t1 RENAME TO t0; -- 0ms;
UPDATE t0 SET c14=0.7404522334458915, c14=NULL; -- 0ms;
PRAGMA main.journal_mode = TRUNCATE; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
REINDEX; -- 0ms;
REINDEX; -- 0ms;
UPDATE t0 SET (c14)=(1104264688) WHERE ((((((((((((((((t0.c14)OR(t0.c14)))OR(t0.c14)))OR(t0.c14)))AND(t0.c14)))OR(t0.c14)))OR(t0.c14)))AND(((((((((t0.c14)OR(t0.c14)))AND(t0.c14)))AND(t0.c14)))OR(x'')))))AND(t0.c14 COLLATE RTRIM)); -- 0ms;
UPDATE OR ROLLBACK t0 SET (c14)=(x'2cc2'); -- 0ms;
PRAGMA defer_foreign_keys = true; -- 0ms;
UPDATE OR REPLACE t0 SET (c14, c14)=(x'', x''); -- 0ms;
UPDATE OR ROLLBACK t0 SET c14=-1e500, c14=x'a7f3', c14=x'', c14=0x3e9307e1; -- 1ms;
UPDATE OR IGNORE t0 SET c14=0.8824467477105383, c14=0.9274944855043876, c14=NULL; -- 0ms;
UPDATE OR IGNORE t0 SET c14=0.08420500746367288 WHERE (+ (HEX(DISTINCT t0.c14))); -- 0ms;
UPDATE t0 SET (c14)=(0.9946780604585652); -- 0ms;
ALTER TABLE t0 RENAME COLUMN c14 TO c25; -- 0ms;
INSERT OR REPLACE INTO t0 VALUES ('0.7404522334458915'), (0Xffffffff8444b499), (NULL); -- 0ms;
INSERT OR REPLACE INTO t0(c25) VALUES (''), ('-2075872103'), (x'3507'), (0.4812771640649931), (''); -- 0ms;
ALTER TABLE t0 RENAME TO t1; -- 0ms;
UPDATE OR IGNORE t1 SET c25=0.4231540335046805; -- 0ms;
UPDATE OR IGNORE t1 SET (c25, c25, c25)=('', x'', NULL) WHERE ((CASE t1.c25  WHEN t1.c25 THEN t1.c25 WHEN t1.c25 THEN t1.c25 WHEN t1.c25 THEN t1.c25 END)|(CAST(t1.c25 AS INTEGER))); -- 3ms;
PRAGMA checkpoint_fullfsync = false; -- 0ms;
INSERT OR REPLACE INTO t1 VALUES (NULL), (-135305840), ('0.4231540335046805'); -- 0ms;
ANALYZE sqlite_master; -- 0ms;
CREATE INDEX IF NOT EXISTS i86 ON t1((c25 IN ()) COLLATE NOCASE) WHERE (((((c25, c25, c25))<=((c25, 0.9274944855043876, x'4170'))))==(TYPEOF(DISTINCT 0.4364930318543727))); -- 0ms;
CREATE TEMP VIEW v0(c0) AS SELECT CASE WHEN ((t1.c25)AND(t1.c25)) THEN ((NULL)>>(t1.c25)) END FROM t1 WHERE (((((('{2Y}', 0.45612584524529187, NULL))==((x'', NULL, x'')))) NOT BETWEEN (LIKELIHOOD(0Xfffffffff252f7b5, 0.6153694733257579)) AND (((((-1948284025)OR(x'')))AND(0.22414616559912814))))) LIMIT -135305840; -- 0ms;
PRAGMA journal_size_limit = 0; -- 0ms;
INSERT OR IGNORE INTO t1 VALUES (''), ('1711154191'), (0.08192093532928735), (0.03908280768076999), (NULL), ('1486981909'), (0.9946780604585652); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((CAST(0.3102621955576703 AS NUMERIC)))<((((NULL) NOT BETWEEN (NULL) AND (1.711154191E9))))); -- 0ms;
ANALYZE; -- 0ms;
ANALYZE v0; -- 0ms;
ANALYZE; -- 2ms;
UPDATE OR IGNORE t1 SET (c25)=(NULL); -- 0ms;
UPDATE OR REPLACE t1 SET c25=NULL, c25=x'ff70601aebc0'; -- 0ms;
PRAGMA main.journal_size_limit; -- 0ms;
INSERT OR IGNORE INTO t1(c25) VALUES ('684654961'); -- 0ms;
ALTER TABLE t1 ADD COLUMN c83 INT CHECK ( (((t1.c25, t1.c25, t1.c25)) BETWEEN (((t1.c25 IN ()), ((t1.c25)LIKE(t1.c25)), ((t1.c25)IS(t1.c25)))) AND ((((t1.c25)OR(t1.c25)), ((((t1.c25)AND(t1.c25)))AND(t1.c25)), 0.24211552583901996 COLLATE NOCASE)))); -- 0ms;
ALTER TABLE t1 RENAME TO t0; -- 1ms;
ANALYZE sqlite_master; -- 1ms;
ALTER TABLE t0 ADD COLUMN c86 TEXT; -- 0ms;
ALTER TABLE t0 RENAME COLUMN c86 TO c55; -- 3ms;
UPDATE OR IGNORE t0 SET c55='1486981909', c55=0Xffffffff8444b499, c25=x'9611' WHERE t0.c55; -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
END; -- 0ms;
UPDATE OR ABORT t0 SET (c25)=(0.7362959769271126); -- 0ms;
REINDEX; -- 1ms;
INSERT OR IGNORE INTO t0(c25) VALUES (0.9681531375407813); -- 1ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO t0(c55) VALUES (0.23204352730883582); -- 0ms;
ALTER TABLE t0 RENAME COLUMN c55 TO c37; -- 1ms;
BEGIN EXCLUSIVE TRANSACTION; -- 1ms;
END TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT ALL COUNT(*) OVER () FROM v0; -- 0ms;
SELECT DISTINCT CASE ''  WHEN '-229443659' THEN ((((((((((((((((t0.c25)OR(v0.c0)))OR(t0.c37)))AND(t0.c25)))OR('㓿~*&G')))AND(t0.c37)))OR(t0.c25)))AND(v0.c0)))AND(t0.c37)) ELSE x'' END FROM v0 WHERE (CASE '-1222110441' COLLATE NOCASE  WHEN ((NULL)<=('1049823201')) THEN ((x'') NOT BETWEEN (6.84654961E8) AND ('204599478')) END) ORDER BY (((t0.c25 IN ())) NOT BETWEEN (0.14257401051775243) AND (((t0.c25) NOT BETWEEN (v0.c0) AND (v0.c0)))) ASC;SELECT ALL ((((CAST(t0.c25 AS BLOB))OR(CASE WHEN v0.c0 THEN t0.c25 WHEN t0.c37 THEN t0.c25 WHEN t0.c25 THEN v0.c0 ELSE v0.c0 END)))OR((((t0.c37))<((t0.c37))))) FROM t0 WHERE ((((((0.6381027726819934)&(x''))))!=(((('-866543740') NOT BETWEEN (NULL) AND (NULL)))))) ORDER BY ((((IFNULL(v0.c0, v0.c0))OR(((((v0.c0)OR(t0.c25)))AND(v0.c0)))))AND(((t0.c25) NOTNULL))) LIMIT 1982567049;SELECT DISTINCT CAST(((t0.c37)-(t0.c25)) AS REAL) FROM v0;SELECT DISTINCT 6.84654961E8 FROM t0, v0 WHERE (CASE (((((((('871093702')OR(-816988914)))AND(0.9240997909638439)))AND(0.16979774490012411)))OR(x''))  WHEN (((x'ea25')) NOT BETWEEN (('')) AND (('1904689208'))) THEN NULL ELSE x'9e86' END); -- 0ms;
SELECT (((CAST(t0.c25 AS TEXT)))<>(((NOT (t0.c25))))) FROM v0, t0 WHERE (CAST(((x'') NOT BETWEEN ('-353684806') AND ('1904689208')) AS TEXT)); -- 0ms;
SELECT DISTINCT (((t0.c25 IN (t0.c25)))-(((t0.c25)<>(t0.c37)))) FROM v0, t0 WHERE ((+ (((0.6587899887294352)LIKE(837671617))))); -- 0ms;
SELECT ALL UNLIKELY(((v0.c0) ISNULL)) FROM v0 WHERE (CASE WHEN ((((x'')AND(0xffffffffe9f02526)))AND(0.21889354273918882)) THEN ((0X41d1bdf0)<(516858945)) WHEN (('iVd3R뷰Zi,')||('800878518')) THEN (('1}+l!_')<<(-1900463948)) WHEN ((0.9946780604585652) NOT BETWEEN (0X65fe240f) AND (-184166997)) THEN ((NULL) BETWEEN (x'') AND ('-2011402369')) WHEN ((x'') NOT NULL) THEN (NOT (5.16858945E8)) WHEN (NOT (x'')) THEN (((((((('')AND(x'')))OR('Eb')))AND('''9뒙Y&oN')))OR(0xffffffffff3d3732)) ELSE ((x'')AND(0.5668310433763405)) END); -- 0ms;
SELECT DISTINCT ((((((t0.c37)AND(t0.c37)))OR(t0.c37))) NOT BETWEEN (((((v0.c0)AND(0.8594041114010432)))AND(v0.c0))) AND (CAST(t0.c25 AS REAL))), DENSE_RANK() OVER (), (((v0.c0 IN ('-1e500'))) BETWEEN (t0.c25) AND (((((((((t0.c37)OR(t0.c37)))AND(v0.c0)))OR(v0.c0)))OR(t0.c37)))) FROM t0 WHERE (CAST(((0xffffffff9d749391)|(x'697e')) AS BLOB));SELECT DISTINCT TYPEOF(CAST(t0.c37 AS INTEGER)), TOTAL(((((t0.c37)AND(v0.c0)))AND(v0.c0))), ((LIKE(t0.c37, t0.c37))AND(COUNT(*))) FROM v0 WHERE (((CASE 8.71093702E8  WHEN x'' THEN '0.6587899887294352' END)GLOB(((x'd3b2') ISNULL))));SELECT DISTINCT (+ (t0.c37)) FROM t0 WHERE (((COALESCE(DISTINCT x'9cf2', x'', x'', NULL))>(((NULL) BETWEEN (x'') AND (0.9946780604585652))))); -- 0ms;
SELECT DISTINCT ((v0.c0 COLLATE BINARY) NOT BETWEEN (((((t0.c25)AND(v0.c0)))AND(v0.c0))) AND (TOTAL_CHANGES())), ((CAST(t0.c37 AS BLOB)) ISNULL), LOWER(DISTINCT IFNULL(v0.c0, t0.c37)) FROM v0;SELECT 0.6587899887294352 FROM v0, t0 WHERE (((((0.23204352730883582)=(880312186))) NOT NULL)) ORDER BY t0.c25 DESC  NULLS LAST, ('' IN (((t0.c37) NOT BETWEEN (x'') AND (t0.c25)), v0.c0 COLLATE NOCASE, ((t0.c25)|(v0.c0))))  NULLS LAST, ((((((0.6272136342746198)+(v0.c0)))OR(((t0.c37) IS FALSE))))OR(CAST(t0.c25 AS NUMERIC))); -- 0ms;
SELECT DISTINCT v0.c0 FROM v0, t0 LIMIT -689140617; -- 0ms;
SELECT DISTINCT IFNULL(SQLITE_VERSION(), ((v0.c0)!=(t0.c37))) FROM v0;SELECT DISTINCT (- ((t0.c37 IN ()))) FROM t0, v0; -- 0ms;
SELECT DISTINCT (('%p') NOT BETWEEN (TOTAL(x'')) AND (((t0.c25) NOT NULL))) FROM v0 ORDER BY (((GLOB(v0.c0, t0.c37)))<((((t0.c37) NOT BETWEEN (t0.c25) AND (v0.c0))))), x''  NULLS FIRST;SELECT LIKELIHOOD(DISTINCT (- (v0.c0)), 0.21266554324975995), (~ (CAST('/	' AS INTEGER))), ((CASE v0.c0  WHEN t0.c25 THEN v0.c0 END)<=((+ (t0.c25)))) FROM t0, v0 WHERE (((((('-353684806'))>(('!!Ay!F')))) NOT BETWEEN ((('716353551') NOT BETWEEN ('O!\rMy~㓿uI') AND ('800878518'))) AND (((0.316584456822256) NOT NULL)))) LIMIT 1172678787; -- 0ms;
SELECT DISTINCT (((('斐V뀏	*6+9b') IS TRUE)) NOT BETWEEN (((v0.c0)IS(v0.c0))) AND (((t0.c25)OR(t0.c25)))) FROM t0, v0 WHERE (-1902947111); -- 0ms;
SELECT ALL v0.c0 COLLATE RTRIM FROM t0, v0; -- 0ms;
SELECT (v0.c0 IN ()) FROM t0, v0 WHERE (((((x'34bf') NOT BETWEEN (0.9680533937353717) AND (0.08124404240251304))) BETWEEN (((((0.8016946772897442)OR(0.33062403311169775)))OR(NULL))) AND ((('0WHa\n_\')&('-816988914'))))) GROUP BY ((((((v0.c0)OR(t0.c25)))OR(t0.c25))) NOTNULL); -- 0ms;
SELECT DISTINCT CASE CASE NULL  WHEN t0.c37 THEN t0.c25 ELSE t0.c25 END  WHEN CAST(t0.c37 AS BLOB) THEN ((v0.c0) BETWEEN (t0.c37) AND (NULL)) WHEN (- (v0.c0)) THEN 'ihm/9g' WHEN (+ (v0.c0)) THEN ((v0.c0) BETWEEN (t0.c37) AND (NULL)) END, ((((v0.c0)OR(t0.c37)))<=(((((((((t0.c25)OR(t0.c37)))AND(t0.c25)))AND(v0.c0)))AND(t0.c25)))), (t0.c37 IN ()) COLLATE BINARY FROM v0, t0 WHERE (((((((((((((NULL)AND('800878518')))AND(NULL)))AND(((NULL) BETWEEN (0.33062403311169775) AND (NULL)))))AND(((((((((0.9669328067240596)AND(NULL)))OR('-107840478')))OR(0Xfffffffff7ef6590)))AND(x'')))))AND(CASE WHEN ',^' THEN NULL ELSE 716353551 END)))OR((~ ('1885838608'))))); -- 1ms;
SELECT DISTINCT (((+ (t0.c37)))LIKE(((('%p'))!=((t0.c25))))) FROM v0;SELECT DISTINCT ((TRIM(v0.c0))%((NULL IN ()))) FROM t0 WHERE ((NOT ('Z.~I|⥁')));SELECT ALL (('-1653304431') IS TRUE) FROM t0 GROUP BY ((((t0.c25)AND((((t0.c37))<=((x''))))))OR(t0.c37 COLLATE RTRIM)) HAVING t0.c25; -- 0ms;
SELECT x'2a68' FROM v0, t0 WHERE (((((0.8563991027271266)&(NULL)))+(NULL))); -- 0ms;
SELECT ALL SQLITE_COMPILEOPTION_USED((t0.c37 IN ())) FROM v0, t0 GROUP BY CASE ((v0.c0) ISNULL)  WHEN (((v0.c0))<((t0.c25))) THEN ((v0.c0) NOT BETWEEN (v0.c0) AND (t0.c37)) WHEN v0.c0 THEN t0.c25 COLLATE NOCASE WHEN SQLITE_VERSION() THEN CAST(v0.c0 AS NUMERIC) END; -- 0ms;
SELECT ALL CAST(t0.c37 AS BLOB) FROM t0, v0 LIMIT 891710232; -- 0ms;
SELECT DISTINCT TRIM(DISTINCT IFNULL(t0.c37, NULL)) FROM t0, v0 WHERE (CASE (((x'6699')) NOT BETWEEN ((0.18868120779109)) AND ((0.3155474467422146)))  WHEN (('斐V뀏	*6+9b')GLOB('891710232')) THEN ((0.15625194403615816) BETWEEN (x'9b6b') AND (NULL)) WHEN 0xffffffff8de881d1 THEN (- (NULL)) WHEN json_remove(0.08341060293747471, '', '', 0.31257213186807853) THEN CAST(0Xffffffff960ef2a2 AS REAL) WHEN 'y' COLLATE BINARY THEN ((x'') IS FALSE) WHEN ((NULL)IS NOT(NULL)) THEN ((NULL) IS TRUE) END);SELECT DISTINCT ((CASE WHEN v0.c0 THEN t0.c25 ELSE t0.c37 END)OR(CASE t0.c25  WHEN t0.c37 THEN t0.c37 ELSE v0.c0 END)), MAX(MIN(t0.c25 COLLATE RTRIM)), ((CAST(v0.c0 AS INTEGER)) BETWEEN (t0.c37 COLLATE BINARY) AND (x'')), COUNT(*) OVER (), CASE WHEN TOTAL(v0.c0) THEN ((v0.c0)<=(t0.c37)) END FROM v0 WHERE (CAST((~ ('1072258874')) AS INTEGER));SELECT DISTINCT ((v0.c0)+(GROUP_CONCAT(t0.c37))), LIKELY(((t0.c25) NOT BETWEEN (v0.c0) AND (v0.c0))), AVG(((t0.c25) BETWEEN (v0.c0) AND (t0.c37))) OVER () FROM v0, t0 WHERE (((((('-704188503'))==((NULL)))) NOT BETWEEN (((')}')<>(NULL))) AND ((('')-('837671617'))))) GROUP BY v0.c0, ((((((((((v0.c0)AND(t0.c37)))AND(t0.c37)))OR(t0.c25)))AND(t0.c25))) BETWEEN ((~ (t0.c25))) AND (CASE v0.c0  WHEN t0.c37 THEN v0.c0 WHEN t0.c25 THEN t0.c37 WHEN v0.c0 THEN t0.c37 END)), (((t0.c25 IN ()))*(((((t0.c37)AND(t0.c37)))OR(t0.c37)))) HAVING ((((t0.c37)GLOB(v0.c0)))AND(((((t0.c37)OR(v0.c0)))OR(t0.c37)))); -- 0ms;
SELECT (+ (TYPEOF(t0.c37))), x'', (+ (((t0.c25) NOT BETWEEN (t0.c25) AND (t0.c25)))) FROM t0, v0; -- 0ms;
SELECT DISTINCT ((((v0.c0) NOT BETWEEN (t0.c37) AND (v0.c0)))<(MIN(t0.c37))) FROM v0, t0; -- 0ms;
SELECT ALL COUNT(*) OVER () FROM t0 WHERE (((CASE 'Uyl>舗Bq&2'  WHEN 0.8872837660534767 THEN -931354348 END) NOT BETWEEN ((+ ('-931354348'))) AND (((NULL)AND('-704188503'))))); -- 0ms;
SELECT ((((t0.c37, 0xffffffff98a3035b, v0.c0)) BETWEEN ((v0.c0, t0.c37, t0.c37)) AND ((t0.c37, v0.c0, 0Xffffffffff3d3732))) IN ()) FROM t0 WHERE ((((0xffffffffcf4dbd0e)<=(2107513327)) IN ())); -- 0ms;
SELECT DISTINCT CAST(((v0.c0) NOTNULL) AS BLOB), COUNT(*) OVER (), CAST(t0.c25 COLLATE RTRIM AS TEXT) FROM v0 NOT INDEXED WHERE (IFNULL(DISTINCT ((1.172678787E9)OR(1.486981909E9)), (('ihm/9g')IS(4.76742167E8))));SELECT ((((((t0.c25))>=((t0.c37))), GROUP_CONCAT(t0.c25), v0.c0 COLLATE NOCASE))<=((((t0.c37) NOTNULL), CASE t0.c25  WHEN v0.c0 THEN t0.c25 ELSE v0.c0 END, ((t0.c37) BETWEEN (t0.c37) AND (t0.c25))))) FROM v0, t0 WHERE (CASE WHEN '1486981909' COLLATE NOCASE THEN (0.5214134527433621 IN (NULL)) ELSE CAST(NULL AS BLOB) END); -- 0ms;
SELECT ((COUNT(t0.c37)) IS FALSE) FROM v0 INDEXED BY i89 WHERE ((('IHM/9G' COLLATE RTRIM)GLOB(((NULL)GLOB(NULL)))));SELECT DISTINCT CASE WHEN ((((t0.c25)AND(v0.c0)))AND(t0.c37)) THEN t0.c37 COLLATE RTRIM END FROM v0 WHERE (((((NULL) IS TRUE))/(CASE '1711154191'  WHEN '0.782977909074161' THEN x'' END)));SELECT MIN(((t0.c25) NOT BETWEEN (t0.c25) AND (v0.c0))) FROM v0 WHERE ((((((('-477448205') BETWEEN ('-1680085412') AND (x'c649')))AND(NULL)))AND(CASE WHEN '-12765390' THEN NULL WHEN 0.29476252918697776 THEN NULL WHEN 0.4231540335046805 THEN NULL END)));SELECT DISTINCT ((((NULL)OR(CAST(v0.c0 AS NUMERIC))))OR(json_patch(t0.c25, v0.c0))), TRIM(DISTINCT t0.c25, t0.c25) COLLATE RTRIM, ((((t0.c25)>>(t0.c37)))%(CASE t0.c37  WHEN v0.c0 THEN t0.c37 WHEN v0.c0 THEN v0.c0 WHEN t0.c25 THEN v0.c0 ELSE 890200136 END)), LENGTH(t0.c25), (+ ((((v0.c0, t0.c25, t0.c37))<>((t0.c37, t0.c25, v0.c0))))) FROM t0, v0 GROUP BY (IFNULL(v0.c0, NULL) IN ()), (2034374976 IN ()), (((((t0.c37))==((v0.c0)))) NOT NULL) HAVING (((v0.c0 IN ()))|(COALESCE(t0.c25, v0.c0))); -- 0ms;
SELECT DISTINCT ((COUNT(*))!=(t0.c37 COLLATE RTRIM)) FROM v0, t0 WHERE ((((x'' IN (NULL)))OR(CASE NULL  WHEN '-866543740' THEN 'nu' ELSE 0xffffffffb23bdc01 END))); -- 0ms;
SELECT (((t0.c37)=(x'')) IN (GROUP_CONCAT(t0.c25))) FROM v0;SELECT t0.c37 COLLATE NOCASE FROM v0;SELECT ALL NTH_VALUE((((v0.c0)) BETWEEN (((((v0.c0))>((x'c205'))))) AND (((t0.c37 IN ())))), CASE WHEN v0.c0 COLLATE NOCASE THEN ((t0.c37) BETWEEN (NULL) AND (t0.c37)) WHEN t0.c25 COLLATE NOCASE THEN CAST(t0.c25 AS REAL) WHEN (('0.6381027726819934')IS NOT(v0.c0)) THEN (x'' IN ()) ELSE NULL COLLATE RTRIM END) OVER () FROM t0, v0; -- 0ms;
SELECT ALL MAX(((t0.c25) IS FALSE)), ((GROUP_CONCAT(t0.c25))=((+ (t0.c25)))), (TOTAL(v0.c0) IN ((((t0.c37, t0.c25, NULL))>((t0.c25, t0.c37, '891710232'))), ((t0.c25)<(t0.c37)))), ((t0.c25) NOT NULL), (((TRIM(t0.c25)))<((((t0.c25) BETWEEN (v0.c0) AND (t0.c37))))) FROM v0;SELECT DISTINCT ((v0.c0) BETWEEN (((((t0.c25)AND(t0.c25)))OR(t0.c25))) AND (CAST(t0.c37 AS INTEGER))) FROM t0 WHERE ('-2115964262') ORDER BY IFNULL(CAST(t0.c25 AS NUMERIC), t0.c37 COLLATE NOCASE) DESC  NULLS FIRST;SELECT DISTINCT NULL, SUM((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))) OVER (), x'd077', LEAD(MIN(((t0.c25)IS(t0.c25)), (NOT (t0.c25)), CAST(0.5915552236451084 AS REAL), CASE WHEN '-12765390' THEN t0.c25 END), '-2041178282', ((((t0.c37)-(t0.c37))) IS TRUE)) OVER (), TRIM(DISTINCT 227687912) FROM t0 WHERE (((((0.8306967489917878) BETWEEN (NULL) AND (0.19493418416946917)))>=(('ce2p' IN ()))));SELECT DISTINCT GROUP_CONCAT((((v0.c0, t0.c37, t0.c25))<=((v0.c0, v0.c0, t0.c25)))), MAX((~ (v0.c0))), ((((t0.c37) IS FALSE)) BETWEEN (NULLIF(DISTINCT t0.c37, t0.c37)) AND (CAST(v0.c0 AS NUMERIC))), (((('-1313304780')&(t0.c37)))LIKE('-557917516' COLLATE RTRIM)), TOTAL((NOT (t0.c37))) FROM t0, v0 GROUP BY ((((v0.c0) BETWEEN (t0.c25) AND (x'')))<((((v0.c0)) NOT BETWEEN ((t0.c25)) AND ((v0.c0))))) HAVING rtreenode(((t0.c37) IS FALSE), (t0.c25 IN (t0.c37, '~22ꤔ*'))) ORDER BY 0x61be4ffe;SELECT DISTINCT ((((CAST(t0.c37 AS REAL))OR(SUM(t0.c37))))AND((NOT (x'a7d2')))) FROM t0, v0 WHERE (((((((x'') IS FALSE))AND((('1820914852')IS NOT(x'ae20')))))AND(((-595056073)>(NULL))))) GROUP BY (((((((t0.c37, 0.8957527615085009, v0.c0))<((t0.c25, x'', v0.c0))))OR(((t0.c37)*(t0.c25)))))OR(((v0.c0)GLOB(t0.c37)))) HAVING ((((LTRIM(''))AND(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))))OR(TRIM(DISTINCT v0.c0, v0.c0))); -- 0ms;
SELECT DISTINCT t0.c37 FROM t0, v0 LIMIT 1915808738 OFFSET -1507855631; -- 0ms;
SELECT (~ (load_extension(t0.c37))) FROM v0 WHERE (((((0.3102621955576703)AND('M<*pkfQ')))AND(x'')) COLLATE RTRIM) GROUP BY ((((((((((0.6611285433871394) NOT BETWEEN (v0.c0) AND (t0.c37)))AND((((v0.c0)) BETWEEN ((t0.c25)) AND ((t0.c25))))))AND(((v0.c0) NOT BETWEEN (v0.c0) AND (t0.c37)))))OR(CAST(v0.c0 AS INTEGER))))OR(CASE t0.c25  WHEN v0.c0 THEN t0.c37 END)) HAVING v0.c0;SELECT ALL SUM(((t0.c25)<<(v0.c0))) OVER (), ((v0.c0 COLLATE BINARY)&(CAST(t0.c25 AS BLOB))), NULL FROM v0, t0 WHERE (CAST(((x'f8e7') BETWEEN ('') AND (x'')) AS NUMERIC)) GROUP BY ((CASE WHEN t0.c25 THEN v0.c0 END) BETWEEN (t0.c25) AND (((t0.c25) IS FALSE))); -- 0ms;
SELECT DISTINCT CUME_DIST() OVER (), ((((t0.c37) NOT BETWEEN (v0.c0) AND (t0.c37))) BETWEEN (((v0.c0)AND(t0.c37))) AND ((((v0.c0, v0.c0, t0.c37)) NOT BETWEEN ((t0.c25, t0.c25, '-704188503')) AND ((t0.c37, t0.c37, t0.c37))))), COUNT((((t0.c37, 0x41d1bdf0, t0.c25)) NOT BETWEEN ((t0.c25, t0.c37, v0.c0)) AND ((v0.c0, t0.c25, -8.6654374E8)))) FROM t0 WHERE (0.8128231804801149);SELECT DISTINCT SUM(NULLIF(t0.c25, v0.c0)) FILTER(WHERE (((t0.c37)) NOT BETWEEN ((t0.c37)) AND ((NULL)))) OVER () FROM v0;SELECT DISTINCT ((MIN(t0.c37)) NOT NULL), LAST_VALUE(0.3853133646259862) OVER ( ORDER BY ((((-178451616) IS TRUE))>=(CAST(t0.c37 AS BLOB))) ASC  NULLS LAST), MAX(((t0.c37)&(t0.c25))) FROM t0 WHERE (CASE ('1639862270' IN ())  WHEN CAST('~22ꤔ*' AS BLOB) THEN (((((((((((('x\r~N')OR(x'')))OR('')))AND(x'42c9')))OR('36978538')))AND(NULL)))OR('d_')) WHEN CASE WHEN '482795733' THEN 'yI' ELSE x'' END THEN (x'' IN ('-1904871510')) WHEN ((NULL)IS(NULL)) THEN ((x'')<<(NULL)) ELSE CASE WHEN 0.3921257328613508 THEN 0.7426667798472714 WHEN NULL THEN NULL WHEN '-1507855631' THEN -1.78451616E8 ELSE '-1777405278' END END); -- 5ms;
SELECT (((~ (v0.c0))) NOTNULL) FROM t0, v0; -- 0ms;
SELECT ALL ((((((t0.c25)<<(v0.c0)))OR(0x350f6048)))OR((t0.c37 IN (t0.c37)))) FROM v0 WHERE ('-229443659') LIMIT 1072258874;SELECT t0.c37, CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE t0.c37 END COLLATE RTRIM, ((((t0.c25) NOT BETWEEN (v0.c0) AND (t0.c37)))IS(t0.c37 COLLATE NOCASE)) FROM t0 WHERE (CASE WHEN ((('1820914852', 0.7474121725716079, '-184166997'))>(('-2031960141', -353684806, -8.6654374E8))) THEN ((x'')IS(-9.31354348E8)) ELSE (0.6960516044566044 IN ()) END) LIMIT 31766217;SELECT ((((((t0.c25)AND(t0.c37)))AND(v0.c0))) NOTNULL) FROM v0, t0; -- 0ms;
SELECT DISTINCT ((NULL COLLATE RTRIM)GLOB(CASE WHEN t0.c25 THEN x'' ELSE t0.c37 END)), ((0.6250395618913893) NOT BETWEEN (CAST(0.22414616559912814 AS TEXT)) AND (NULL)), ((((((t0.c25))==((v0.c0))), ((v0.c0) IS FALSE), SUM(t0.c25)))>=((((((t0.c25)AND(t0.c37)))AND(t0.c25)), CASE WHEN t0.c25 THEN t0.c25 END, CASE t0.c25  WHEN v0.c0 THEN t0.c37 END))) FROM t0, v0 WHERE (CAST(0.5216124973902628 AS TEXT)); -- 0ms;
SELECT ((((t0.c37) NOTNULL)) IS TRUE) FROM v0, t0 WHERE (NULL); -- 0ms;
SELECT DISTINCT MIN((v0.c0 IN ())), (((t0.c37)&(v0.c0)) IN ()), ((t0.c37) IS FALSE) COLLATE NOCASE, ((t0.c25) ISNULL), ((t0.c37) NOT BETWEEN (t0.c37) AND (v0.c0)) COLLATE NOCASE FROM v0 WHERE ((((~ ('372091150')))>=(CAST(0.1616861493201025 AS BLOB)))) GROUP BY '-866543740' HAVING (- (((v0.c0)>>(t0.c37))));SELECT ALL LAST_INSERT_ROWID() FROM t0 WHERE (((CAST(x'e2b3' AS TEXT))>=((((0.47951795821208776))>=((x'3836')))))); -- 0ms;
SELECT DISTINCT ((DATE(t0.c25, t0.c37, t0.c25, v0.c0, t0.c25, t0.c37, t0.c37))&(((v0.c0)IS NOT(NULL)))) FROM t0;SELECT DISTINCT ((CASE t0.c37  WHEN t0.c25 THEN 0.1401819911540143 END) BETWEEN (((v0.c0)<=(t0.c37))) AND (((t0.c37)-(t0.c37)))) FROM t0, v0 WHERE (CAST(LIKELIHOOD('0.47951795821208776', 0.7895828347354328) AS NUMERIC)); -- 1ms;
SELECT DISTINCT (((t0.c25 IN ())) NOTNULL) FROM v0, t0 LIMIT 1711154191 OFFSET -2031960141; -- 0ms;
SELECT DISTINCT ((t0.c37)>(t0.c25)) COLLATE RTRIM FROM t0, v0 WHERE (((((x'') NOT NULL))GLOB((((('pK]o踸')OR('Ma')))AND(NULL))))); -- 0ms;
SELECT ABS(DISTINCT ((t0.c37) IS TRUE)) FROM t0 WHERE (((('1094225002')) BETWEEN ((CASE WHEN 0.2243380268325723 THEN '0.3921257328613508' END)) AND ((0.3216082979105688)))); -- 0ms;
SELECT DISTINCT ((NULL)IS NOT(CASE v0.c0  WHEN t0.c25 THEN '' WHEN v0.c0 THEN t0.c37 WHEN t0.c37 THEN t0.c25 ELSE v0.c0 END)), (((t0.c25, t0.c37, t0.c25)) NOT BETWEEN ((CASE v0.c0  WHEN -1.948284025E9 THEN v0.c0 WHEN t0.c25 THEN v0.c0 WHEN v0.c0 THEN t0.c25 END, CAST(v0.c0 AS INTEGER), (('') IS FALSE))) AND ((SUM(v0.c0), ((v0.c0)<(v0.c0)), (t0.c37 IN ())))), (((t0.c37)) BETWEEN ((((NULL)>(t0.c37)))) AND ((SUM(v0.c0)))), MAX((+ (0.541514157046906))), (((((~ (v0.c0)))AND(CAST(t0.c37 AS TEXT))))OR(((((t0.c37)OR(v0.c0)))OR(v0.c0)))) FROM t0, v0 WHERE ((((x'' COLLATE NOCASE))==((((x'908d') IS FALSE))))); -- 0ms;
SELECT DISTINCT HEX(DISTINCT (~ (t0.c37))) FROM t0, v0; -- 0ms;
SELECT ALL ((((((v0.c0) IS TRUE))OR((((x'', t0.c37, v0.c0))<=((v0.c0, t0.c37, t0.c37))))))AND((v0.c0 IN ()))) FROM t0, v0; -- 1ms;
SELECT (- (((x'')IS(v0.c0)))), ((((LTRIM(t0.c25, t0.c37))AND('<')))OR(TRIM(DISTINCT t0.c37, t0.c25))), ((NULL) BETWEEN ((t0.c37 IN (v0.c0))) AND (NULL)), MAX(((t0.c37) NOT BETWEEN (t0.c25) AND (t0.c25))), DATETIME(x'4581', (~ (t0.c25)), CAST(t0.c37 AS BLOB), CASE WHEN t0.c25 THEN v0.c0 END, ((t0.c37) IS TRUE)) FROM t0 NOT INDEXED, v0 WHERE ((((UNLIKELY(8.71093702E8)))!=((x'')))); -- 0ms;
SELECT (((x'5dc6' IN ())) NOT BETWEEN ('') AND (CAST(t0.c25 AS INTEGER))) FROM v0 NOT INDEXED, t0; -- 0ms;
SELECT DISTINCT (((('')OR(((t0.c25)==(t0.c37)))))OR(v0.c0)) FROM t0, v0; -- 0ms;
SELECT DISTINCT (~ (0.3696467402004119)) FROM v0, t0 WHERE (((((((NULL)AND('')))OR(NULL)))IS(CAST(NULL AS TEXT)))); -- 0ms;
SELECT ALL ((((v0.c0) IS TRUE)) BETWEEN (t0.c25) AND (NULL)) FROM t0 GROUP BY CASE WHEN (v0.c0 IN ()) THEN IFNULL(DISTINCT t0.c25, '') WHEN t0.c25 THEN ((t0.c37) IS FALSE) WHEN ((v0.c0) NOT BETWEEN (-4.77448205E8) AND (t0.c37)) THEN (v0.c0 IN ()) END HAVING ((((v0.c0) NOT BETWEEN (v0.c0) AND (t0.c37))) BETWEEN ((('391603381') IS TRUE)) AND (((t0.c37)||(t0.c37))));SELECT DISTINCT t0.c25 COLLATE BINARY, x'ac39', (- ((x'5ade' IN ()))) FROM v0 WHERE (((x'2658')<>('-322226235')) COLLATE BINARY);SELECT DISTINCT CAST(((x'') IS TRUE) AS TEXT) FROM v0; -- 0ms;
SELECT DISTINCT (- (MIN(t0.c37, t0.c25))) FROM v0;SELECT DISTINCT (((((((((t0.c25)AND(0x762b9289)))OR(NULL)))OR(t0.c25)))AND(t0.c37)) IN ()) FROM t0 WHERE (CAST(((((-2.115964262E9)AND(0xfffffffff6e340e0)))OR(x'')) AS BLOB)); -- 0ms;
SELECT ((((t0.c25)<>(t0.c25))) IS TRUE), (((CAST(NULL AS TEXT)))!=((NULL COLLATE BINARY))), ((v0.c0) NOT NULL) FROM t0 INDEXED BY i86 WHERE ((~ (CAST(0.1883749393900811 AS NUMERIC))));SELECT DISTINCT (- (((t0.c37)GLOB(t0.c25)))), ((((t0.c37)|(t0.c25)))LIKE(CASE t0.c25  WHEN t0.c37 THEN v0.c0 WHEN t0.c37 THEN t0.c25 WHEN t0.c37 THEN v0.c0 ELSE v0.c0 END)), CASE WHEN (((t0.c25))<=((t0.c37))) THEN ((((t0.c37)AND(v0.c0)))AND(x'e10d')) ELSE (((t0.c37, v0.c0, t0.c25, v0.c0, v0.c0)) BETWEEN ((v0.c0, t0.c37, t0.c25, t0.c37, v0.c0)) AND ((t0.c25, v0.c0, t0.c25, t0.c37, v0.c0))) END FROM t0, v0; -- 0ms;
SELECT DISTINCT UNLIKELY('0.2243380268325723') FROM t0 NATURAL JOIN v0 GROUP BY ((t0.c25 IN ()) IN (((v0.c0) NOTNULL))) HAVING NULL; -- 0ms;
SELECT DISTINCT AVG(load_extension(t0.c25)) FROM v0, t0; -- 0ms;
SELECT DISTINCT (AVG(v0.c0) IN ()) FROM v0 LIMIT -1507855631 OFFSET -1924593746; -- 0ms;
SELECT DISTINCT ((t0.c37) NOT NULL) COLLATE BINARY COLLATE BINARY FROM t0 WHERE ((((CAST(NULL AS REAL)))==((((0.3216082979105688) NOT BETWEEN (x'fc89') AND ('/	')))))); -- 0ms;
SELECT ((((v0.c0) BETWEEN (t0.c25) AND (t0.c37))) NOT BETWEEN (COUNT(t0.c37)) AND (v0.c0 COLLATE RTRIM)), (((((t0.c37, t0.c37, t0.c37))>=((v0.c0, t0.c37, t0.c25)))) BETWEEN (((t0.c37)LIKE(t0.c37))) AND ((NOT (t0.c25)))), (((0.4372526717268118, v0.c0, t0.c37)) BETWEEN ((CASE WHEN v0.c0 THEN t0.c25 ELSE v0.c0 END, ((((t0.c25)AND(v0.c0)))AND(t0.c25)), ((((v0.c0)AND(t0.c37)))OR(t0.c37)))) AND (((((v0.c0, t0.c25, v0.c0))>((t0.c37, t0.c25, v0.c0))), ((t0.c37) IS TRUE), 0.8946336226021597))) FROM t0;SELECT DISTINCT (((v0.c0) NOT BETWEEN (t0.c37) AND (t0.c25)) IN (CASE '!m䓺'  WHEN v0.c0 THEN t0.c37 END)) FROM v0;SELECT DISTINCT (((v0.c0, t0.c37, t0.c37)) BETWEEN ((((t0.c37) IS FALSE), MAX(t0.c25), ((t0.c37) NOT BETWEEN (t0.c37) AND (t0.c25)))) AND (((((x''))>((v0.c0))), ((t0.c25)AND(v0.c0)), CAST(v0.c0 AS NUMERIC)))) FROM v0 WHERE (CASE NULL  WHEN 'BV' THEN x'0f62bafe' END COLLATE NOCASE) ORDER BY ((CAST(v0.c0 AS NUMERIC))IS((((t0.c25, v0.c0, t0.c37))>((t0.c37, t0.c25, t0.c37))))) ASC;SELECT AVG(0.31257213186807853), ((((((((((t0.c25)OR(t0.c25)))AND(t0.c25)))OR(t0.c37)))AND(t0.c25)))>=(((t0.c25) BETWEEN (t0.c37) AND (t0.c37)))), CAST(t0.c37 COLLATE RTRIM AS BLOB) FROM t0; -- 0ms;
SELECT ALL json_type(((t0.c25) NOT BETWEEN (t0.c25) AND (v0.c0))), AVG(v0.c0) OVER (), ((((((((MAX(v0.c0))OR((((v0.c0))!=((t0.c25))))))AND(((t0.c25) NOTNULL))))OR(((((v0.c0)AND(x'18ca')))AND(v0.c0)))))AND(((x'')!=(v0.c0)))) FROM v0;SELECT DISTINCT ((t0.c37) BETWEEN ((((t0.c25)) BETWEEN ((t0.c25)) AND (('bW')))) AND ('Y')) FROM t0; -- 0ms;
SELECT ALL (SUM(v0.c0) IN ()), t0.c25, '-931354348' FROM t0 WHERE ('bW'); -- 0ms;
SELECT (+ (v0.c0)) COLLATE NOCASE FROM v0, t0 ORDER BY v0.c0; -- 0ms;
SELECT DISTINCT CAST(CAST(t0.c37 AS INTEGER) AS NUMERIC) FROM v0, t0; -- 0ms;
SELECT DISTINCT t0.c37, CAST((((t0.c25, t0.c37, t0.c25)) NOT BETWEEN ((v0.c0, t0.c37, v0.c0)) AND ((t0.c25, '', t0.c37))) AS BLOB), json(t0.c37 COLLATE BINARY) FROM v0 WHERE (CASE WHEN (((1.466057978E9, x'', NULL, x'', NULL))>=(('2XbLHWq-', x'', 0.6250395618913893, x'', NULL))) THEN 'V*1|}2.' ELSE ((NULL)IS(1820914852)) END) GROUP BY 0xffffffffbe656dfc HAVING (((t0.c25 COLLATE BINARY))!=((((t0.c37) NOT BETWEEN (v0.c0) AND (t0.c25)))));SELECT AVG(CASE t0.c37  WHEN v0.c0 THEN v0.c0 ELSE t0.c25 END) FROM v0 LIMIT -1680085412 OFFSET -726074352;SELECT ALL SQLITE_SOURCE_ID(), (((((v0.c0)) NOT BETWEEN ((x'')) AND ((t0.c25)))) BETWEEN (((v0.c0)%('x&UXqr,&%'))) AND (LIKELY(DISTINCT v0.c0))), CASE WHEN v0.c0 THEN ((v0.c0)/(t0.c25)) END, TYPEOF(DISTINCT ((v0.c0)<=(t0.c37))), x'13f1' FROM v0 NATURAL JOIN t0; -- 0ms;
SELECT DISTINCT (- (v0.c0 COLLATE RTRIM)), (((v0.c0)IS NOT(t0.c37)) IN ((((t0.c37))!=((v0.c0))))), t0.c25 FROM t0, v0 GROUP BY (((((v0.c0)OR(v0.c0)))AND(v0.c0)) IN (((t0.c25) BETWEEN (t0.c37) AND (t0.c37)))) HAVING GROUP_CONCAT(((((t0.c25)AND('1409960917')))AND(t0.c37))); -- 0ms;
SELECT ALL GROUP_CONCAT(((t0.c25)<>(v0.c0))) OVER () FROM t0 WHERE (((('-1339356535')>(NULL)) IN ((('y쩷gdY<!') NOT NULL))));SELECT DISTINCT TYPEOF(DISTINCT ((((x'')AND(v0.c0)))OR(t0.c37))), CASE (t0.c25 IN ())  WHEN ((t0.c25) BETWEEN (t0.c37) AND (v0.c0)) THEN t0.c37 ELSE ((-1339356535) BETWEEN (t0.c25) AND (t0.c25)) END, TOTAL(CAST(t0.c25 AS NUMERIC)) FROM t0, v0 GROUP BY ((((v0.c0)IS NOT(0.30745614195447746))) NOT BETWEEN ((((x'')) BETWEEN ((v0.c0)) AND ((0.1961905359246897)))) AND (((((((((((((t0.c37)AND(t0.c37)))OR(x'56196cd1')))AND(t0.c25)))OR(v0.c0)))OR(t0.c37)))OR(t0.c37)))); -- 0ms;
SELECT ALL (((((+ (t0.c37)))AND((t0.c37 IN (t0.c37, v0.c0)))))AND(v0.c0 COLLATE NOCASE)), (((v0.c0 IN ())) IS FALSE), MAX(((t0.c37) NOT BETWEEN (x'') AND (v0.c0))) FROM v0, t0; -- 0ms;
SELECT DISTINCT ((((((v0.c0) NOT NULL))AND(((t0.c25) BETWEEN (t0.c37) AND (t0.c37)))))AND(t0.c25)), ((((ABS(t0.c37))OR(GROUP_CONCAT(t0.c25))))OR(((((((((t0.c37)AND(NULL)))OR(t0.c37)))AND(t0.c37)))OR(v0.c0)))), (+ (v0.c0)) FROM t0, v0 WHERE (((((CASE WHEN 'Gf' THEN x'' ELSE NULL END)AND((+ (0.7057732357980286)))))AND((NOT (NULL))))) LIMIT 1264690840; -- 0ms;
SELECT DISTINCT CASE WHEN CASE t0.c25  WHEN v0.c0 THEN v0.c0 END THEN ((t0.c25) ISNULL) ELSE (((v0.c0))<=((v0.c0))) END FROM t0;SELECT ALL CASE WHEN AVG(v0.c0) THEN (t0.c25 IN (v0.c0, v0.c0)) ELSE CASE t0.c25  WHEN v0.c0 THEN t0.c37 WHEN '' THEN t0.c25 WHEN t0.c37 THEN t0.c37 ELSE t0.c25 END END FROM t0, v0 WHERE ((+ (((((((((((((x'a1da')OR(NULL)))OR(x'')))OR(0xffffffffe481a481)))AND(0.08932973585338999)))OR(x'')))AND('-285207710'))))); -- 0ms;
SELECT DISTINCT ((((NULL) BETWEEN (t0.c25) AND (t0.c37)))=(CASE WHEN t0.c25 THEN t0.c37 WHEN t0.c25 THEN x'6e2d' WHEN 0.08124404240251304 THEN t0.c25 END)), LIKE(t0.c25, ((v0.c0) NOT BETWEEN (t0.c37) AND (t0.c37))), UNLIKELY(DISTINCT t0.c25 COLLATE NOCASE) FROM t0 NOT INDEXED WHERE ((((((x'6d19')||(x'')), '0Su?\<*', ((NULL)>>(-1.3530584E8))))<>(((+ ('%')), (0.1096840567753804 IN ()), (('')&('0.8563991027271266'))))));SELECT DISTINCT (((t0.c37)) NOT BETWEEN ((x'dbbe')) AND ((UPPER(DISTINCT v0.c0)))), ((('gJ', v0.c0, t0.c37))==((t0.c37, t0.c25, t0.c25))) COLLATE NOCASE, ((t0.c37 COLLATE RTRIM)%(CASE WHEN v0.c0 THEN t0.c37 END)) FROM v0;SELECT LTRIM((v0.c0 IN (t0.c25, t0.c25)), UNLIKELY(DISTINCT t0.c25)) FROM t0, v0; -- 1ms;
SELECT ALL CAST(UNLIKELY(t0.c37) AS INTEGER), ((CAST(1.486981909E9 AS BLOB))>>(t0.c25 COLLATE BINARY)), MAX((- (v0.c0))) FROM v0;SELECT DISTINCT NULL FROM t0; -- 0ms;
SELECT DISTINCT 'KW', GROUP_CONCAT((- (v0.c0)) COLLATE BINARY) OVER (), ((((TOTAL(NULL))OR(HEX(v0.c0))))OR(((t0.c25)+(t0.c25)))) FROM v0, t0; -- 0ms;
SELECT DISTINCT CASE CASE WHEN t0.c37 THEN t0.c25 END  WHEN TOTAL(t0.c37) THEN ((t0.c25)>>(t0.c25)) ELSE ((v0.c0) NOT BETWEEN (t0.c37) AND (t0.c25)) END FROM t0 WHERE (CAST(((0xffffffffbdcb1134)=(0.7230733822537881)) AS TEXT)) GROUP BY (((((t0.c25)OR(t0.c25)))AND(v0.c0)) IN (((((((((t0.c37)AND(t0.c37)))AND(v0.c0)))AND(6.84654961E8)))AND(x'8a3d')), ((t0.c25)>>(t0.c37)))) HAVING SUM((((t0.c37, t0.c25, v0.c0)) NOT BETWEEN ((t0.c37, t0.c37, 0.05385662664733859)) AND ((t0.c37, t0.c25, t0.c25))));SELECT DISTINCT -5.57917516E8 FROM t0 WHERE ('-655786985'); -- 0ms;
SELECT ((((((t0.c25) NOT BETWEEN (t0.c37) AND (t0.c37)))OR(((v0.c0) NOTNULL))))AND((v0.c0 IN ()))), CAST(((v0.c0)GLOB(t0.c25)) AS TEXT), ((((((v0.c0) IS TRUE))AND(CASE t0.c25  WHEN t0.c37 THEN v0.c0 END)))AND((((v0.c0))!=((t0.c37))))) FROM v0, t0 WHERE (((x'' COLLATE NOCASE)>(CASE WHEN '2034374976' THEN '1736162359' ELSE NULL END))); -- 1ms;
SELECT DISTINCT (NOT ((~ (v0.c0)))), ((MIN(v0.c0)) NOT BETWEEN (((t0.c37)LIKE(t0.c37))) AND (-383900771)), ((t0.c25) IS FALSE) COLLATE RTRIM, ((((t0.c25)AND(v0.c0)))AND(v0.c0)) COLLATE NOCASE, CAST((t0.c25 IN ()) AS NUMERIC) FROM v0, t0 WHERE (CASE ((0.2286030628373934) BETWEEN (NULL) AND (x''))  WHEN ((('-1777405278'))>(('8C'))) THEN ((NULL)>(1012927208)) ELSE ('\nZk%/' IN (-12765390)) END); -- 0ms;
SELECT DISTINCT ((((~ (t0.c37)), '*N8seM૨5[', -1.339356535E9, COUNT(*), ((t0.c25) BETWEEN (t0.c25) AND (0.36528569043901826))))>=(((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))), t0.c37, v0.c0 COLLATE BINARY, CAST(t0.c37 AS REAL), COUNT(*)))) FROM t0, v0; -- 0ms;
SELECT DISTINCT ((NOT (v0.c0)) IN ()) FROM t0, v0 WHERE ((((NULL))<>((((NULL)IS(NULL)))))) LIMIT -1401790879; -- 0ms;
SELECT DISTINCT SUM(x'') OVER () FROM t0, v0 WHERE ((((0x7d9e19ef IN ('8KjW⥁탺'))) BETWEEN (0X7ef767d6 COLLATE NOCASE) AND (((NULL) NOTNULL)))); -- 2ms;
SELECT DISTINCT (((CASE t0.c25  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN t0.c25 WHEN t0.c37 THEN v0.c0 ELSE t0.c25 END))>(((+ (t0.c25))))) FROM t0;SELECT (NOT (v0.c0)) FROM v0; -- 0ms;
SELECT ALL ((((((t0.c37)OR(t0.c25)))AND(t0.c37))) NOT BETWEEN ((NOT ('-1324561446'))) AND (((((((((((((t0.c37)OR(t0.c37)))AND(v0.c0)))AND(t0.c37)))AND(t0.c37)))AND(t0.c25)))OR(t0.c37)))) FROM v0, t0; -- 0ms;
SELECT (~ (((((t0.c37)AND(t0.c25)))OR(v0.c0)))) FROM t0, v0 LIMIT -2011402369; -- 0ms;
SELECT DISTINCT (((((t0.c25) BETWEEN (t0.c37) AND (t0.c25)), CAST(v0.c0 AS NUMERIC), ((v0.c0) BETWEEN (t0.c37) AND (v0.c0))))>((COALESCE(t0.c37, t0.c37), ((v0.c0) BETWEEN (t0.c37) AND (t0.c25)), LIKE(t0.c25, t0.c25, 'D')))) FROM v0;SELECT t0.c37 COLLATE NOCASE FROM v0, t0 WHERE ((((('!!ay!f')OR('1133993762' COLLATE BINARY)))AND(NULL))); -- 1ms;
SELECT CASE WHEN CAST(t0.c25 AS TEXT) THEN (t0.c25 IN (t0.c37, t0.c37)) ELSE (((t0.c25))==((x''))) END, v0.c0, NULL FROM t0, v0 WHERE ((~ (NULL))); -- 0ms;
SELECT (+ (t0.c37)), TOTAL(((((t0.c37)AND(t0.c37)))OR(t0.c25))), NULL FROM v0, t0 WHERE (CASE IFNULL(1030315267, x'6bbd')  WHEN (('-1508504362')IS NOT(x'')) THEN (((('-184166997')AND(0.19286034968198695)))AND(NULL)) ELSE TIME('516858945', 0.8007477689065996, 837671617, NULL, '-1680085412', '1&a', 2130143190) END); -- 0ms;
SELECT DISTINCT LEAD(CAST((((t0.c25))>=((t0.c25))) AS BLOB), ((((((((x'' COLLATE RTRIM)OR(((t0.c25)IS NOT(t0.c25)))))OR(((t0.c37) BETWEEN (t0.c37) AND (t0.c37)))))OR((- (t0.c25)))))AND(t0.c37 COLLATE RTRIM)), (((+ (t0.c37))) NOT BETWEEN ((((t0.c37, t0.c37, t0.c37)) NOT BETWEEN ((t0.c37, t0.c37, t0.c25)) AND ((t0.c25, t0.c37, t0.c25)))) AND (ABS(t0.c37)))) OVER () FROM t0 WHERE (((TYPEOF('{h{}'))GLOB((0x3dfc72de IN ('-1751035263'))))) GROUP BY (((~ (v0.c0))) IS TRUE);SELECT DISTINCT t0.c25 FROM t0, v0; -- 0ms;
SELECT DISTINCT v0.c0 FROM v0, t0 WHERE ((~ ((('yI')<(x''))))); -- 0ms;
SELECT DISTINCT ((-2.115964262E9)>(v0.c0)) FROM v0, t0 GROUP BY CASE ((t0.c37)<(v0.c0))  WHEN ((t0.c25)/('-610351963')) THEN UNLIKELY(DISTINCT 0.6802264303145374) WHEN (t0.c25 IN ()) THEN CAST(t0.c37 AS BLOB) WHEN CASE t0.c25  WHEN v0.c0 THEN t0.c25 ELSE v0.c0 END THEN v0.c0 COLLATE RTRIM WHEN ((t0.c25) IS FALSE) THEN (((v0.c0)) BETWEEN ((t0.c25)) AND ((t0.c25))) WHEN x'' COLLATE RTRIM THEN '516858945' WHEN ((((t0.c25)AND(t0.c37)))AND(t0.c37)) THEN t0.c25 COLLATE RTRIM WHEN '227687912' THEN v0.c0 END HAVING (((v0.c0)) BETWEEN ((((v0.c0) ISNULL))) AND (((t0.c25 IN (NULL))))); -- 3ms;
SELECT (((v0.c0) BETWEEN (t0.c37) AND (t0.c37)) IN (t0.c25 COLLATE BINARY)), LAG((((t0.c25 COLLATE NOCASE))>((v0.c0 COLLATE BINARY))), ((t0.c37) IS TRUE), v0.c0) OVER ( ROWS  UNBOUNDED PRECEDING EXCLUDE NO OTHERS), '0.782977909074161' FROM v0, t0 WHERE ((('' COLLATE RTRIM) NOT BETWEEN (x'83ec') AND ((('1844885301') NOT BETWEEN (NULL) AND (0.3921257328613508))))); -- 0ms;
SELECT ALL MIN(((v0.c0)=(t0.c25)) COLLATE NOCASE) FROM t0, v0 NOT INDEXED WHERE (IFNULL(DISTINCT (+ ('1885838608')), LIKELIHOOD(DISTINCT x'', 0.27406743811205647))) LIMIT -370137818 OFFSET -477448205; -- 0ms;
SELECT DISTINCT CASE CASE WHEN t0.c37 THEN v0.c0 ELSE v0.c0 END  WHEN (NOT (t0.c37)) THEN ((v0.c0) NOT BETWEEN (t0.c25) AND (v0.c0)) END FROM t0, v0; -- 0ms;
SELECT DISTINCT CAST(CAST(t0.c37 AS BLOB) AS INTEGER) FROM t0, v0 WHERE ((((((((((((((('-1222110441') IS TRUE))OR((~ ('F5Nw')))))AND(((x'7ac8') ISNULL))))AND(487547854 COLLATE BINARY)))AND((+ (NULL)))))OR((0.4059539856130324 IN ()))))OR('1030315267'))) GROUP BY json_array_length((t0.c25 IN ())); -- 0ms;
SELECT DISTINCT (((((((((t0.c25)AND(v0.c0)))AND(x'')))OR(v0.c0)))OR(t0.c25)) IN ()) FROM v0 WHERE (CASE WHEN (('Db') IS TRUE) THEN ((('0.8306967489917878')) BETWEEN (('2107513327')) AND (('~U'))) END); -- 0ms;
SELECT ALL (((v0.c0 IN ())) NOTNULL), (~ (CASE WHEN '997755087' THEN v0.c0 END)), LENGTH(v0.c0) COLLATE RTRIM FROM t0;SELECT ALL (((~ (t0.c37)))>(COUNT(*))), MAX(((t0.c25)&(v0.c0))), rtreenode(CAST(t0.c25 AS BLOB), (((v0.c0, x'', t0.c37)) BETWEEN ((t0.c37, v0.c0, NULL)) AND ((t0.c25, v0.c0, t0.c25)))) FROM t0;SELECT (NOT (((t0.c37)==(v0.c0)))) FROM v0, t0 WHERE ((((('-463484297')/(x''))) NOT BETWEEN ((0.11968425804136096 IN ('42r''j%/W'))) AND (('' IN ())))); -- 0ms;
SELECT ALL ((((t0.c25) NOT NULL)) BETWEEN (CAST(x'' AS INTEGER)) AND (CASE '-1653304431'  WHEN t0.c37 THEN v0.c0 ELSE v0.c0 END)), (+ ((('eAdn噳?U/') NOT BETWEEN (t0.c25) AND (t0.c37)))), ((('-704188503')) NOT BETWEEN ((t0.c25)) AND ((t0.c25))) COLLATE BINARY, (- (CASE v0.c0  WHEN v0.c0 THEN t0.c37 ELSE t0.c25 END)), ((((t0.c25) BETWEEN (t0.c25) AND (t0.c25))) BETWEEN ((~ (t0.c37))) AND (UPPER(DISTINCT t0.c37))) FROM t0, v0; -- 1ms;
SELECT ALL t0.c25 FROM v0, t0; -- 0ms;
SELECT DISTINCT (CAST(t0.c25 AS NUMERIC) IN ()) FROM v0, t0; -- 0ms;
SELECT 0.19493418416946917 FROM t0, v0 WHERE ((CAST(1.885838608E9 AS TEXT) IN (('d>po2\&q' IN (''))))) GROUP BY ((t0.c25 IN (v0.c0)) IN ()) HAVING (((t0.c25)) BETWEEN ((((v0.c0)&(t0.c37)))) AND (((t0.c25 IN (t0.c37))))); -- 0ms;
SELECT DISTINCT CASE 391603381  WHEN t0.c37 THEN 0x14c7d324 ELSE t0.c25 END COLLATE BINARY FROM t0, v0; -- 0ms;
SELECT DISTINCT t0.c25, (- (CAST(t0.c25 AS INTEGER))), LIKELIHOOD((t0.c25 IN ()), 0.6428982797399713), (~ (((t0.c37) IS TRUE))), ((t0.c37)<(t0.c37)) COLLATE RTRIM FROM v0, t0 WHERE ((((('PT')OR(((0.07674221587033259) IS TRUE))))OR((NULL IN ())))) LIMIT -1860409531 OFFSET -834710652; -- 0ms;
SELECT DISTINCT CAST(t0.c25 COLLATE RTRIM AS REAL), GROUP_CONCAT(CASE t0.c25  WHEN t0.c25 THEN t0.c25 END) OVER (), 'fyxQb#' FROM t0 WHERE (((0.8984607477568435) ISNULL) COLLATE BINARY); -- 0ms;
SELECT ALL CAST(((t0.c25) ISNULL) AS NUMERIC), (('-1324561446')LIKE((NOT (t0.c37)))), SQLITE_COMPILEOPTION_USED(((t0.c37)>=(v0.c0))) FROM v0, t0 WHERE (SQLITE_SOURCE_ID()) GROUP BY ((((t0.c37) IS FALSE)) BETWEEN (((t0.c25) BETWEEN (v0.c0) AND (t0.c25))) AND ((~ (v0.c0)))) HAVING CASE '33961215'  WHEN v0.c0 THEN CASE WHEN t0.c25 THEN '' END WHEN COUNT(v0.c0) THEN (- (v0.c0)) WHEN v0.c0 COLLATE BINARY THEN (x'' IN ()) ELSE CASE WHEN v0.c0 THEN v0.c0 WHEN t0.c25 THEN t0.c37 WHEN t0.c25 THEN v0.c0 ELSE t0.c37 END END; -- 4ms;
SELECT DISTINCT (~ (((((t0.c25)OR(t0.c37)))AND(v0.c0)))), CAST(((t0.c25) IS TRUE) AS NUMERIC), (((((t0.c25)AND(t0.c25)))OR(t0.c25)) IN ()) FROM t0 WHERE ((190975333 IN ()));SELECT DISTINCT CAST(t0.c25 COLLATE BINARY AS TEXT) FROM t0 WHERE (UPPER((('')IS NOT(x'')))); -- 0ms;
SELECT '-1651126260' FROM v0 LIMIT 2116759307; -- 0ms;
SELECT ALL ((((((((((v0.c0) ISNULL))OR(((t0.c37)>>(t0.c25)))))AND(((((((((t0.c37)AND(v0.c0)))OR(v0.c0)))AND(t0.c37)))OR('')))))AND((t0.c25 IN (t0.c25)))))AND((t0.c25 IN ()))), (((((((('-1677298024')AND(((t0.c25)<<(t0.c37)))))AND(CASE t0.c25  WHEN t0.c37 THEN v0.c0 ELSE t0.c25 END)))AND(CASE WHEN t0.c37 THEN '' ELSE t0.c37 END)))OR(t0.c25 COLLATE NOCASE)), ((((t0.c25)<(t0.c37)))&((NOT (t0.c37)))) FROM v0, t0; -- 0ms;
SELECT DISTINCT GROUP_CONCAT(((v0.c0)*(t0.c37))) FROM v0 WHERE (SQLITE_SOURCE_ID());SELECT DISTINCT (('')<<(((t0.c25)<(t0.c37)))) FROM t0, v0; -- 0ms;
SELECT DISTINCT (t0.c25 IN ()) COLLATE RTRIM FROM t0, v0; -- 0ms;
SELECT DISTINCT CASE WHEN UPPER(NULL) THEN ((v0.c0)IS(t0.c25)) WHEN json_valid(t0.c37) THEN ((t0.c37)=(t0.c25)) WHEN ((t0.c25) NOT NULL) THEN COALESCE(t0.c37, v0.c0) ELSE v0.c0 END FROM v0, t0; -- 0ms;
SELECT DISTINCT ((((t0.c37) BETWEEN (v0.c0) AND (x'8158'))) NOT BETWEEN (((t0.c37) NOT BETWEEN (t0.c37) AND (t0.c25))) AND ((NOT (v0.c0)))) FROM t0 WHERE (((((0.9824336998076053)||(0.7361985424537877)))LIKE(LOWER(x'0d5e'))));SELECT DISTINCT (NOT (x'')) FROM v0, t0; -- 1ms;
SELECT DISTINCT CASE CASE WHEN v0.c0 THEN v0.c0 ELSE t0.c25 END  WHEN CASE t0.c37  WHEN NULL THEN t0.c37 WHEN v0.c0 THEN v0.c0 WHEN x'c5cc' THEN t0.c37 WHEN t0.c25 THEN t0.c37 WHEN t0.c25 THEN t0.c37 ELSE t0.c37 END THEN t0.c37 ELSE (- (t0.c25)) END FROM v0 RIGHT OUTER JOIN t0 ON ((((t0.c37) NOT BETWEEN (v0.c0) AND (t0.c37)))%(LIKE(NULL, t0.c37, '-'))) WHERE (('qnX' COLLATE NOCASE IN ())) GROUP BY CASE WHEN '232576009' COLLATE RTRIM THEN (t0.c37 IN ()) END; -- 0ms;
SELECT DISTINCT (((t0.c25) NOT BETWEEN (x'') AND (v0.c0)) IN (NULL, ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))) FROM t0;SELECT NULLIF(DISTINCT ((t0.c25) BETWEEN (v0.c0) AND (t0.c25)), ((t0.c25)*(v0.c0))) FROM v0, t0; -- 0ms;
SELECT DISTINCT ((((((t0.c37)-(t0.c37)))AND((((t0.c25)) BETWEEN ((t0.c37)) AND ((t0.c37))))))OR(t0.c25)) FROM v0;SELECT DISTINCT ((t0.c37) NOT BETWEEN (v0.c0) AND (v0.c0)) COLLATE BINARY FROM v0;SELECT t0.c25, CAST(v0.c0 AS INTEGER) COLLATE NOCASE, (((v0.c0)) NOT BETWEEN ((((t0.c25)>(t0.c37)))) AND ((('516858945' IN (t0.c37, t0.c25))))) FROM t0 ORDER BY CASE WHEN LIKELIHOOD('-1177775431', 0.34712174573036525) THEN t0.c25 COLLATE NOCASE ELSE ((t0.c37) BETWEEN (v0.c0) AND (t0.c25)) END DESC;SELECT ALL (((NOT (t0.c37)))>=(((v0.c0)IS NOT(v0.c0)))) FROM v0, t0; -- 0ms;
SELECT CAST(((((((((v0.c0)AND(t0.c25)))AND(t0.c37)))AND(v0.c0)))AND(t0.c37)) AS BLOB) FROM v0 GROUP BY ((((t0.c37)OR(t0.c37)))AND('j濺')) COLLATE BINARY COLLATE BINARY;SELECT ((((t0.c25) NOT BETWEEN (v0.c0) AND (x'')))||(v0.c0)) FROM v0;SELECT DISTINCT t0.c37 FROM v0;SELECT DISTINCT ((t0.c37)>(((v0.c0) NOT NULL))) FROM t0, v0 LIMIT -135305840; -- 0ms;
SELECT DISTINCT (~ (COUNT(*))), (((t0.c37)) NOT BETWEEN ((t0.c25)) AND ((t0.c25))) COLLATE RTRIM, (+ (((t0.c25) ISNULL))) FROM v0, t0; -- 0ms;
SELECT ALL ROW_NUMBER() OVER () FROM t0; -- 0ms;
SELECT DISTINCT CASE CAST(t0.c37 AS REAL)  WHEN NULLIF(t0.c25, t0.c25) THEN (~ (v0.c0)) END FROM v0, t0; -- 0ms;
SELECT ((MIN(v0.c0))IS NOT(((((((((((((v0.c0)AND(t0.c25)))OR(v0.c0)))AND(t0.c25)))AND(t0.c25)))OR(t0.c37)))OR(t0.c37)))), (((v0.c0)) BETWEEN (((('')+(t0.c37)))) AND ((t0.c25))), ((((v0.c0 COLLATE BINARY)AND(((NULL)==(t0.c25)))))OR(t0.c37 COLLATE BINARY)), ((((t0.c25) NOTNULL))LIKE((((t0.c37, v0.c0, v0.c0))>((t0.c37, t0.c25, t0.c25))))), (+ (((((t0.c37)OR(t0.c37)))OR(t0.c25)))) FROM v0, t0 WHERE ((+ (((((((((0.4812771640649931)OR(x'')))AND(NULL)))OR(0.35267437784943245)))AND(NULL))))); -- 0ms;
SELECT DISTINCT (~ (((t0.c37) NOTNULL))), AVG(((t0.c25) BETWEEN (v0.c0) AND (t0.c37))) OVER ( ORDER BY ((((t0.c37)IS NOT(v0.c0))) NOT NULL)  NULLS FIRST), 0X15dc8911 FROM t0 WHERE ((~ (((x'')||(0xfffffffff149d05c)))));SELECT DISTINCT ((t0.c25 COLLATE NOCASE) IS TRUE), CAST(t0.c37 AS BLOB) COLLATE BINARY, (t0.c37 IN (v0.c0, v0.c0)) COLLATE BINARY, MIN((- (v0.c0))) COLLATE BINARY, COUNT(*) FILTER(WHERE ((t0.c25)||((+ ('pk]o踸'))))) OVER () FROM v0;SELECT DISTINCT (((NOT (t0.c37))) BETWEEN (CASE WHEN x'dd29' THEN NULL END) AND (t0.c37)) FROM t0 GROUP BY x''; -- 0ms;
SELECT DISTINCT ((((t0.c37) NOTNULL)) NOTNULL) FROM v0 WHERE ('si숩8') ORDER BY t0.c37;SELECT DISTINCT (('0.07674221587033259')LIKE(t0.c37 COLLATE BINARY)), SUM(((t0.c37)<(v0.c0))), COUNT(*) COLLATE BINARY COLLATE RTRIM FROM t0;SELECT DISTINCT CAST(CAST(t0.c25 AS REAL) AS INTEGER) FROM t0, v0 WHERE (json_array(((x'')>=('-107840478')), CASE WHEN 1072258874 THEN x'ae11' WHEN x'' THEN '' WHEN '-135281261' THEN -1.7976931348623157E308 WHEN x'' THEN '~Z๖n-v^l' WHEN 0.3081570823616485 THEN 0.31257213186807853 ELSE 0.34088476577850346 END, COALESCE(DISTINCT 0X1cd8e25, '-1417373598'), ((NULL)LIKE('-881567473')), (NOT (x'')), CASE '-1339356535'  WHEN '%p' THEN x'' WHEN NULL THEN 0.7230733822537881 WHEN x'fdce' THEN x'' END));SELECT DISTINCT (- (CASE NULL  WHEN t0.c25 THEN t0.c25 ELSE -1.914142255E9 END)) FROM t0 INNER JOIN v0 ON (v0.c0 IN ()); -- 0ms;
SELECT DISTINCT TOTAL(COUNT((v0.c0 IN (v0.c0, v0.c0)))), ((((v0.c0) ISNULL)) BETWEEN (((t0.c25)IS NOT(t0.c37))) AND (t0.c25)), IFNULL('1157691261', ((((((((t0.c25)AND(t0.c25)))OR(t0.c25)))OR(v0.c0)))OR(t0.c37))) FROM t0, v0 WHERE (load_extension((('-2041178282') NOT BETWEEN (NULL) AND (x'')), JULIANDAY(NULL, NULL, 'X	}#|57Y')));SELECT DISTINCT (HEX(DISTINCT t0.c25) IN ()), t0.c25, v0.c0 FROM t0, v0; -- 0ms;
SELECT DISTINCT ((((t0.c37 IN (v0.c0))))<=(((((t0.c37)) BETWEEN ((t0.c37)) AND ((t0.c25)))))), CASE WHEN (~ (NULL)) THEN (((v0.c0, v0.c0, t0.c25)) BETWEEN ((t0.c37, t0.c37, t0.c37)) AND ((t0.c37, t0.c37, NULL))) WHEN (t0.c25 IN ()) THEN CASE WHEN x'' THEN v0.c0 END WHEN ((t0.c37) NOT BETWEEN (t0.c37) AND (0.8109868783438474)) THEN CAST(t0.c25 AS REAL) WHEN CASE v0.c0  WHEN t0.c25 THEN 0.04093146259082481 END THEN ((t0.c37)=('Ob.]{Dh')) WHEN '-1331058698' THEN AVG(t0.c25) END, x'' FROM t0;SELECT AVG(((v0.c0) IS FALSE)), TOTAL(((x'') IS TRUE)), SUM(((t0.c25) NOT NULL)) OVER () FROM t0, v0; -- 0ms;
SELECT v0.c0 COLLATE RTRIM FROM v0 NOT INDEXED WHERE ((CASE WHEN 0.46227558452445705 THEN 0xffffffff9ca00939 END IN (((-6.89140617E8) NOT BETWEEN ('-107840478') AND (NULL))))) GROUP BY ((t0.c25)<<(((t0.c25)AND(t0.c37)))), CASE WHEN CASE WHEN t0.c25 THEN v0.c0 WHEN t0.c25 THEN t0.c37 WHEN t0.c37 THEN t0.c37 ELSE t0.c25 END THEN v0.c0 COLLATE NOCASE WHEN CAST(v0.c0 AS TEXT) THEN ((t0.c37)LIKE(v0.c0)) WHEN CASE WHEN t0.c37 THEN 0.6727056998556287 WHEN v0.c0 THEN 0.9103489048698633 WHEN t0.c37 THEN t0.c25 ELSE t0.c25 END THEN ((t0.c25) ISNULL) WHEN TRIM(v0.c0) THEN (((t0.c37)) BETWEEN ((t0.c25)) AND ((t0.c37))) WHEN 0.9114357805093769 THEN v0.c0 COLLATE BINARY END, LOWER(((t0.c25)&(v0.c0)));SELECT DISTINCT CAST(t0.c25 AS REAL) COLLATE BINARY, CAST(((((t0.c25)OR(t0.c37)))OR(t0.c25)) AS NUMERIC), v0.c0 FROM v0, t0; -- 0ms;
SELECT DISTINCT load_extension(CASE WHEN t0.c25 THEN t0.c25 WHEN x'3385' THEN t0.c37 WHEN v0.c0 THEN t0.c37 ELSE t0.c37 END, ((((t0.c37)AND(v0.c0)))OR(t0.c25))) FROM t0, v0; -- 1ms;
SELECT DISTINCT CUME_DIST() OVER () FROM v0 WHERE ((+ (0.29476252918697776)) COLLATE NOCASE); -- 0ms;
SELECT DISTINCT CASE WHEN (('293601622')<<(v0.c0)) THEN (((t0.c37, v0.c0, t0.c25, t0.c25, v0.c0)) BETWEEN ((t0.c25, t0.c25, v0.c0, 0.6583688594325499, t0.c37)) AND ((t0.c25, t0.c25, v0.c0, t0.c25, v0.c0))) ELSE CAST(t0.c25 AS INTEGER) END, (((((((((+ (t0.c25)))AND(v0.c0 COLLATE BINARY)))OR(t0.c25 COLLATE RTRIM)))AND(((v0.c0) NOT BETWEEN (t0.c37) AND (t0.c37)))))AND(NULL)), (((((((((NOT (t0.c37)))AND(SUM(t0.c37))))OR(((t0.c37) IS TRUE))))AND(((v0.c0) IS FALSE))))AND(CAST(v0.c0 AS REAL))) FROM v0, t0 WHERE (CASE ((((((((NULL)OR(0xffffffffb7281317)))OR('36978538')))OR('ath7e.Q +')))OR(0x1d9a227a))  WHEN (((NULL, 0.7808278391451572, '-1783424069')) NOT BETWEEN ((0.8563991027271266, 0.9340137411611236, 1.63986227E9)) AND ((NULL, NULL, 0.6300587237643993))) THEN ((550841985) NOT BETWEEN (-383900771) AND ('-1590128008')) ELSE ((x'') NOT BETWEEN (0.37089535550240593) AND ('-743959359')) END); -- 0ms;
SELECT DISTINCT (((t0.c37) NOT BETWEEN (v0.c0) AND (t0.c25)) IN ()), (('') NOT BETWEEN (((t0.c37)*(v0.c0))) AND (SQLITE_SOURCE_ID())), CAST(t0.c37 COLLATE BINARY AS REAL) FROM v0;SELECT (((t0.c37)) NOT BETWEEN ((HEX(x''))) AND ((CAST(t0.c25 AS TEXT)))) FROM v0, t0; -- 0ms;
SELECT DISTINCT CASE (v0.c0 IN (v0.c0))  WHEN ((t0.c37) NOTNULL) THEN (+ (t0.c37)) END FROM v0 GROUP BY ((((NULL)LIKE(v0.c0))) NOT BETWEEN (((t0.c37)+(t0.c25))) AND (CAST(v0.c0 AS NUMERIC))) ORDER BY (((t0.c37) ISNULL) IN ()) DESC;SELECT ALL ((((((((((v0.c0)AND(v0.c0)))AND(t0.c25)))AND(t0.c25)))OR(t0.c37)))LIKE((NOT (t0.c37)))) FROM v0 WHERE ('');SELECT DISTINCT x'' FROM v0, t0; -- 0ms;
SELECT ALL ((((v0.c0) NOT BETWEEN ('-655786985') AND (t0.c25)))OR(((NULL) ISNULL))) FROM t0 WHERE (DATETIME((NOT ('-1291022489')), CAST('>XfmpY' AS BLOB), NULL));SELECT ALL (x'' IN ()) FROM t0, v0 GROUP BY LIKELY(IFNULL(t0.c37, NULL)) HAVING (((v0.c0) BETWEEN (t0.c25) AND (t0.c37)) IN (((t0.c37)LIKE(v0.c0)), MIN(v0.c0))); -- 0ms;
SELECT DISTINCT MIN(((t0.c25)||(v0.c0))) FROM v0;SELECT ALL (0.46193596351975696 IN ()) COLLATE NOCASE, (('9223372036854775807')<=(((t0.c37)==(t0.c37)))), (('탊p' COLLATE NOCASE)<>(CASE x'9450'  WHEN t0.c37 THEN t0.c37 ELSE t0.c37 END)) FROM v0 WHERE (((NOT (x'')) IN ())) ORDER BY CASE CASE v0.c0  WHEN t0.c37 THEN t0.c25 END  WHEN CASE '1}+l!_'  WHEN v0.c0 THEN t0.c25 ELSE v0.c0 END THEN t0.c37 COLLATE RTRIM ELSE CASE WHEN t0.c25 THEN t0.c37 WHEN v0.c0 THEN t0.c25 WHEN t0.c37 THEN v0.c0 ELSE t0.c25 END END ASC, ((((((v0.c0))<=((t0.c25))), (- (t0.c37)), CAST(v0.c0 AS BLOB)))<>((((v0.c0) NOTNULL), ((t0.c37)AND('-655786985')), t0.c37)));SELECT ALL LIKE(t0.c37 COLLATE RTRIM, CASE WHEN t0.c37 THEN t0.c37 END), '-1350182743', ((t0.c37) IS TRUE) FROM t0, v0 WHERE ((~ (LIKELY(DISTINCT x'')))); -- 0ms;
SELECT ((v0.c0) NOTNULL) COLLATE BINARY FROM v0 WHERE (CAST(0Xffffffffa670a852 AS BLOB)); -- 0ms;
SELECT (((CAST(v0.c0 AS BLOB), ((t0.c25) NOT BETWEEN (t0.c37) AND (v0.c0)), HEX(v0.c0), ((((t0.c37)AND(t0.c37)))OR(0x3dfc72de)), ((v0.c0) BETWEEN (t0.c37) AND (v0.c0))))<=((MIN(t0.c37), (NOT (t0.c37)), SUM(t0.c25), CASE WHEN v0.c0 THEN t0.c25 END, CASE t0.c37  WHEN v0.c0 THEN t0.c25 END))) FROM v0, t0 WHERE (x''); -- 0ms;
SELECT DISTINCT (((~ (t0.c25)))LIKE(((v0.c0) NOT BETWEEN (t0.c25) AND (v0.c0)))) FROM v0 WHERE (('0.9114357805093769' IN (0Xffffffffe58742d6, x'4a15')) COLLATE NOCASE);SELECT DISTINCT LIKELIHOOD(v0.c0 COLLATE BINARY, 0.5604824438878451) FROM t0 WHERE (CASE WHEN (((('-1734147237')AND(-1.924593746E9)))OR(0.8548045453133258)) THEN CASE NULL  WHEN NULL THEN x'' ELSE -1653304431 END WHEN ((NULL)>=(NULL)) THEN (('-1304699903') IS FALSE) WHEN (('1982567049') BETWEEN ('0.7361985424537877') AND (0.8109868783438474)) THEN ('-940228884' IN ()) END) GROUP BY (((+ (t0.c25)))|('K|?'''));SELECT DISTINCT CAST((t0.c25 IN ()) AS TEXT), (+ (((((v0.c0)OR(t0.c37)))OR(t0.c25)))), (AVG(t0.c37) IN (((t0.c25)!=(v0.c0)))) FROM t0, v0 WHERE (((((((x'6e7f')AND('[OT뀏>#Rvq')))AND(''))) BETWEEN (((x'')>('516858945'))) AND (NULL))) ORDER BY x'' ASC, CAST((v0.c0 IN ()) AS REAL) DESC  NULLS LAST; -- 0ms;
SELECT ALL COUNT(*) OVER () FROM t0, v0 WHERE (((((0Xffffffffe5ea6b88)OR(x'')))AND(x'')) COLLATE NOCASE); -- 0ms;
SELECT (TOTAL(x'db27') IN (json(v0.c0), ((v0.c0)%(v0.c0)))), x'', '' FROM v0, t0 WHERE (((NULL IN (NULL)) IN ())); -- 0ms;
SELECT ((LIKELIHOOD(0X7e0d3e0, 0.7006944644627927)) IS FALSE) FROM v0, t0; -- 0ms;
SELECT CASE WHEN (((v0.c0)) BETWEEN ((t0.c37)) AND ((t0.c25))) THEN CASE t0.c25  WHEN t0.c37 THEN t0.c37 END END FROM v0 WHERE (((('-1680085412')) NOT BETWEEN ((((((NULL)OR('9E')))AND(0.7426667798472714)))) AND (((('')IS(x''))))));SELECT DISTINCT CAST(MAX(t0.c25, 0.26022411058969563, v0.c0, t0.c25) AS TEXT), (NOT (((t0.c25)<(v0.c0)))), v0.c0 FROM t0, v0 WHERE (((((x'1b8d') NOT BETWEEN (0.7724948817786353) AND (NULL)))/((((x''))>=((NULL)))))); -- 0ms;
SELECT ALL LOWER(((v0.c0) NOT BETWEEN (t0.c37) AND (v0.c0))) FROM t0, v0 WHERE ((NULL IN ())) LIMIT -2115964262; -- 0ms;
SELECT DISTINCT ((((t0.c37) NOT BETWEEN (t0.c25) AND (v0.c0))) BETWEEN (CAST(t0.c25 AS INTEGER)) AND (json_insert(t0.c37, '48', t0.c37))) FROM v0 WHERE (LIKELIHOOD(((0.5383252742917263) IS FALSE), 0.3229303280794602)) ORDER BY TRIM(CAST(0.7230733822537881 AS INTEGER))  NULLS LAST, 0x5fa829da  NULLS LAST;SELECT ALL (- (t0.c25)) FROM t0 WHERE ((('Ta')%(x'')) COLLATE RTRIM) GROUP BY t0.c37 HAVING '-2031960141'; -- 0ms;
SELECT DISTINCT RANK() OVER () FROM v0 WHERE ((NOT ((+ (NULL))))) GROUP BY (NULL IN ()), ((((t0.c25)|(x''))) IS FALSE), (('䓺시B.Z8ꋄ' IN ()) IN ()) HAVING CAST('' AS INTEGER);SELECT DISTINCT ((UPPER(v0.c0))<(((t0.c37)>(t0.c37)))) FROM t0 ORDER BY CASE WHEN (('-140319181')%(t0.c37)) THEN ((t0.c25)AND(t0.c25)) END  NULLS FIRST, CASE WHEN (((t0.c37))<((v0.c0))) THEN ((t0.c37) NOT NULL) END  NULLS FIRST;SELECT DISTINCT ((((CASE WHEN t0.c25 THEN v0.c0 END)OR((((x'')) NOT BETWEEN ((t0.c25)) AND ((t0.c37))))))AND(NULL)) FROM t0;SELECT ALL ((((((((AVG(t0.c25))OR(((x'') ISNULL))))OR(TOTAL(v0.c0))))OR(((0.7230733822537881)<(t0.c37)))))OR(CAST(t0.c25 AS TEXT))) FROM t0 WHERE ((((x'0185') IS FALSE) IN (CAST('_c,z?' AS BLOB))));SELECT ((0.2233428320039893 COLLATE NOCASE) ISNULL) FROM t0, v0; -- 0ms;
SELECT CASE WHEN (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((NULL))) THEN (((t0.c25))<>((t0.c25))) END, -9.31354348E8, ((((v0.c0)AND(v0.c0))) IS FALSE) FROM v0 WHERE (SQLITE_COMPILEOPTION_GET('%p') COLLATE BINARY);SELECT ALL (((v0.c0, t0.c37, v0.c0, t0.c37, v0.c0)) NOT BETWEEN ((v0.c0, t0.c37, t0.c37, t0.c25, 0.8357619528609608)) AND ((t0.c37, v0.c0, t0.c25, t0.c37, t0.c37))) COLLATE BINARY, COUNT(JULIANDAY(t0.c37, v0.c0, v0.c0)) OVER (), CASE WHEN NULL THEN CAST(t0.c25 AS INTEGER) ELSE t0.c25 COLLATE NOCASE END FROM t0, v0 ORDER BY 0.06173588269287844 ASC, COALESCE(t0.c25, t0.c37) COLLATE RTRIM DESC LIMIT -1181236070 OFFSET -1336740116; -- 0ms;
SELECT DISTINCT ((CAST(t0.c25 AS REAL))>>(((v0.c0)>=(t0.c37)))) FROM v0;SELECT PERCENT_RANK() OVER () FROM v0; -- 0ms;
SELECT DISTINCT (((t0.c37, t0.c37, t0.c25))==((t0.c25, v0.c0, v0.c0))) COLLATE RTRIM, (- (((t0.c25) IS TRUE))), ((COUNT(*))<>((((t0.c37, t0.c25, t0.c25, t0.c25, t0.c37))<>((t0.c25, t0.c37, t0.c25, t0.c25, t0.c25))))) FROM v0, t0 WHERE (((((((106018926) BETWEEN (NULL) AND (1.915808738E9)))OR((('+璽')>('F5Nw')))))OR((((NULL)) NOT BETWEEN ((0X6ab59d84)) AND ((NULL)))))); -- 0ms;
SELECT CAST(v0.c0 COLLATE RTRIM AS REAL) FROM v0, t0; -- 0ms;
SELECT DISTINCT CAST((- (t0.c25)) AS TEXT) FROM v0, t0 WHERE ((((0.8466452847960186)<=('qK,銉k0/X_')) IN (CAST(x'' AS BLOB)))); -- 0ms;
SELECT ((((v0.c0)>=(t0.c37)))*(((((t0.c37)OR(v0.c0)))OR(v0.c0)))) FROM v0 LIMIT -704188503;SELECT ((((SUM(v0.c0))OR(COUNT(*))))AND(((v0.c0)<>(v0.c0)))) FROM t0 WHERE ((((((('')+(-8.16988914E8)))OR(-1979370588)))AND(((((0.11847588095333184)OR(NULL)))AND(x''))))) GROUP BY ((((((((v0.c0)OR(v0.c0)))AND(t0.c37)))OR(0.49216232170552987)))OR(((v0.c0) NOT BETWEEN (t0.c37) AND (t0.c37)))), ((v0.c0) NOT BETWEEN (t0.c25) AND (t0.c37)) COLLATE RTRIM, t0.c37 HAVING (NOT (0.8520575589063354));SELECT DISTINCT (((- (v0.c0))) NOT NULL) FROM v0 WHERE ((- ((('-107062240') BETWEEN ('1072808207') AND (NULL))))); -- 0ms;
SELECT ALL (((+ (t0.c37))) BETWEEN (((t0.c25)||(t0.c37))) AND (CAST(t0.c37 AS NUMERIC))), ((((((((((((((((t0.c37)OR(t0.c37)))AND(t0.c37)))OR(t0.c25)))AND(v0.c0)))OR((t0.c25 IN ()))))OR('斐V뀏	*6+9b')))AND(((v0.c0)&(v0.c0)))))AND(t0.c37)), LTRIM(CASE WHEN t0.c37 THEN v0.c0 END, '/|,	w~'), (((((((((((t0.c37))>((t0.c25))))AND(((t0.c37) NOT BETWEEN (v0.c0) AND (v0.c0)))))AND(((v0.c0)>(t0.c37)))))OR(0.18813001239562066)))OR(((((t0.c25)OR(t0.c37)))OR(v0.c0)))), COUNT(*) FROM v0 WHERE (IFNULL(DISTINCT CAST(0.7608319926293796 AS INTEGER), ABS(DISTINCT 'M2#\')));SELECT ALL COUNT(*) OVER ( ORDER BY ((v0.c0)<<(t0.c37)) COLLATE BINARY ASC) FROM t0 WHERE (CAST(((('1133993762', NULL, 0Xffffffffb23bdc01, NULL, '-1496575390'))>((x'', '-1507855631', NULL, '3', '-681924685'))) AS REAL));SELECT DISTINCT (+ (t0.c25)) FROM t0, v0; -- 0ms;
SELECT DISTINCT (((v0.c0 IN ())) IS FALSE) FROM v0, t0; -- 0ms;
SELECT ALL v0.c0 FROM v0 WHERE ((((-1.7976931348623157E308 IN ()))==(((x'99b4') IS TRUE)))); -- 1ms;
SELECT DISTINCT (((((((v0.c0, v0.c0, t0.c37)) BETWEEN ((t0.c37, v0.c0, '')) AND ((v0.c0, t0.c25, t0.c25))))AND(((t0.c25)%(t0.c37)))))OR('')) FROM t0;SELECT DISTINCT CASE ((t0.c25) NOT BETWEEN (t0.c25) AND (v0.c0))  WHEN t0.c37 THEN '&6' WHEN json_array_length(NULL) THEN -1.734147237E9 WHEN v0.c0 COLLATE RTRIM THEN ((v0.c0) NOT NULL) ELSE ((t0.c37) NOT NULL) END FROM v0, t0 WHERE (((((((0.31795455909330983)OR(NULL)))AND('t3'))) IS TRUE)); -- 0ms;
SELECT DISTINCT ((((v0.c0)&(t0.c37))) NOT BETWEEN (((v0.c0)%(t0.c37))) AND (((x'')*(NULL)))) FROM v0 INDEXED BY i89, t0;SELECT DISTINCT CASE ((t0.c25) NOTNULL)  WHEN v0.c0 THEN ((t0.c37)>>(t0.c25)) ELSE (t0.c37 IN ()) END, ((json_array_length(t0.c25)) BETWEEN ((((t0.c37, v0.c0, v0.c0))>((v0.c0, t0.c25, v0.c0)))) AND (CASE v0.c0  WHEN '(8\rh.nsW' THEN '-1836590745' END)), TOTAL((((t0.c25)) BETWEEN ((NULL)) AND ((v0.c0)))) FILTER(WHERE (((t0.c37)<>(v0.c0)) IN ())) OVER () FROM t0, v0 GROUP BY json_object(HEX(DISTINCT v0.c0), (- (t0.c25))), ((((NULL)AND(CAST(t0.c37 AS TEXT))))AND(t0.c37 COLLATE NOCASE)), ((((((t0.c25)AND(t0.c25)))OR(x'')))-(((v0.c0)-(v0.c0)))) HAVING ((((t0.c25)&(t0.c25))) ISNULL); -- 0ms;
SELECT ((x'') BETWEEN ('871093702') AND (t0.c25)) FROM t0, v0 WHERE ((((('0.35267437784943245') BETWEEN ('0') AND (0.21986597070185532)))==((x'' IN ())))) GROUP BY CAST(CAST(t0.c37 AS BLOB) AS REAL) HAVING CASE WHEN ((t0.c25) NOT BETWEEN (t0.c25) AND (t0.c25)) THEN t0.c37 ELSE '' END; -- 0ms;
SELECT ALL CUME_DIST() OVER () FROM t0 ORDER BY LIKE(v0.c0 COLLATE RTRIM, ((t0.c37) NOT NULL)) ASC;SELECT ALL ((((t0.c25) NOT NULL))>((+ (0.22318737647769438)))), x'', 0.6697551249507301 FROM t0; -- 0ms;
SELECT LIKELY(DISTINCT '1639862270') FROM v0, t0; -- 0ms;
SELECT ALL (((t0.c37) IS TRUE) IN ()), TYPEOF((((v0.c0)) NOT BETWEEN ((t0.c37)) AND ((t0.c25)))), (((t0.c37 IN (v0.c0, v0.c0))) NOTNULL), ((((v0.c0)<<(t0.c25)))IS NOT(UNICODE(t0.c37))), ((COUNT(t0.c25))<=(((t0.c25) IS FALSE))) FROM v0, t0 LIMIT 1820914852 OFFSET 2107513327; -- 0ms;
SELECT ALL LAST_VALUE('h]\rQ+)') OVER () FROM v0 WHERE ((((((NULL) BETWEEN (NULL) AND ('-1353588746')), ((x'b7c7') ISNULL), ((1.486981909E9)<>(''))))>((((NULL) IS FALSE), ((NULL) NOT BETWEEN ('o#') AND ('/|,	W~')), ((NULL) NOT NULL))))); -- 0ms;
SELECT ALL ((((('-1030863177', t0.c37, t0.c37))>((t0.c37, t0.c37, t0.c25)))) IS FALSE) FROM v0 GROUP BY ((v0.c0) NOT BETWEEN ('450116097') AND (t0.c25)), ((((v0.c0) ISNULL)) NOT BETWEEN ((((v0.c0))<((t0.c37)))) AND (CASE WHEN v0.c0 THEN v0.c0 END)), (- (CASE t0.c25  WHEN v0.c0 THEN '1110-' WHEN t0.c25 THEN t0.c37 WHEN v0.c0 THEN t0.c37 END)) ORDER BY (NOT (t0.c25)) COLLATE BINARY COLLATE BINARY DESC  NULLS FIRST;SELECT NTH_VALUE(((((((((CAST(v0.c0 AS BLOB))AND((~ (v0.c0)))))OR(CAST(v0.c0 AS NUMERIC))))OR(v0.c0 COLLATE BINARY)))AND(CAST(v0.c0 AS REAL))), ((v0.c0) NOT NULL) COLLATE BINARY) OVER () FROM v0; -- 0ms;
SELECT DISTINCT ((((('-1508504362' IN ()))OR(((((t0.c25)OR(t0.c25)))AND(t0.c37)))))AND((NOT ('0.18868120779109')))), (((t0.c37)>=(t0.c37)) IN ()), ((CAST(t0.c37 AS INTEGER))IS(((t0.c37)IS NOT(t0.c25)))) FROM t0, v0; -- 0ms;
SELECT CAST(v0.c0 COLLATE NOCASE AS INTEGER) FROM v0, t0 LIMIT 1094225002; -- 0ms;
SELECT ALL ((((v0.c0) NOT BETWEEN (t0.c37) AND (t0.c25)))OR(GROUP_CONCAT(t0.c25))), ((CASE WHEN t0.c37 THEN t0.c37 END)==(((t0.c37) NOT BETWEEN (t0.c37) AND (t0.c25)))), GROUP_CONCAT(((v0.c0) NOT NULL)) OVER () FROM t0 WHERE ((CAST(NULL AS BLOB) IN ()));SELECT DISTINCT (((t0.c37)) BETWEEN (((t0.c25 IN ()))) AND ((v0.c0))) FROM t0, v0 LIMIT 988998329 OFFSET -322226235; -- 0ms;
SELECT DISTINCT AVG((t0.c37 IN ())) OVER () FROM v0 LIMIT 1483816925 OFFSET -254087753; -- 0ms;
SELECT DISTINCT (((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((((t0.c37) BETWEEN (v0.c0) AND (v0.c0)), CAST(v0.c0 AS BLOB), (t0.c37 IN ()))) AND ((((v0.c0) BETWEEN (t0.c25) AND (v0.c0)), (((t0.c25)) NOT BETWEEN ((v0.c0)) AND ((-467874666))), ((((v0.c0)AND(v0.c0)))AND(t0.c37))))) FROM v0, t0; -- 0ms;
SELECT ALL (+ (((t0.c37) NOT NULL))), NTILE((((((((((((v0.c0))>((v0.c0))))AND(((v0.c0)||(v0.c0)))))OR((((v0.c0, v0.c0, v0.c0))<=((v0.c0, v0.c0, v0.c0))))))AND(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))))AND(((v0.c0)GLOB(v0.c0))))) OVER (), '' FROM v0 LIMIT -133261896;SELECT DISTINCT STRFTIME(CASE t0.c37  WHEN '-1508504362' THEN t0.c37 WHEN x'' THEN v0.c0 WHEN t0.c25 THEN v0.c0 ELSE v0.c0 END, CASE WHEN t0.c37 THEN t0.c37 ELSE t0.c25 END, ((t0.c37)-(v0.c0))) FROM t0 WHERE ((('1873016414')<<((('')%('1039954654')))));SELECT DISTINCT (((((v0.c0)OR(t0.c25)))AND(v0.c0)) IN ()) FROM v0 WHERE ((((((('')AND('-1625795582')))OR(''))) IS TRUE)) LIMIT -1222110441 OFFSET -1904147815; -- 0ms;
SELECT DISTINCT SQLITE_SOURCE_ID() FROM t0, v0 WHERE (COALESCE('1172678787', 0.4686917289315934 COLLATE RTRIM)); -- 0ms;
SELECT ALL ((((CASE WHEN v0.c0 THEN t0.c25 WHEN t0.c37 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN t0.c25 WHEN t0.c25 THEN t0.c25 END)AND(CAST(t0.c25 AS REAL))))AND(CHAR(v0.c0, t0.c37, t0.c37, v0.c0, t0.c25))) FROM t0, v0; -- 0ms;
SELECT ALL t0.c37, ((LAST_INSERT_ROWID()) NOT BETWEEN (CASE WHEN t0.c25 THEN t0.c25 ELSE t0.c25 END) AND (CASE v0.c0  WHEN t0.c25 THEN t0.c37 ELSE t0.c37 END)), (((((t0.c25)) BETWEEN ((t0.c25)) AND ((t0.c25)))) NOT BETWEEN (RTRIM(t0.c37)) AND (((((t0.c25)AND(v0.c0)))OR(t0.c25)))) FROM v0, t0 WHERE (((((NULL)||(x'0091')))>(CASE WHEN '1403498280' THEN '-940076902' WHEN NULL THEN 0Xffffffffeaeb32ba WHEN 0.541514157046906 THEN '1685378405' END))); -- 0ms;
SELECT DISTINCT (+ (COUNT(*))), (((t0.c25)/(t0.c37)) IN ()), ((v0.c0)=((+ (-550019099)))) FROM v0, t0 WHERE (((0.5753940611406988 COLLATE NOCASE) IS FALSE)) LIMIT -206657298 OFFSET -1650133690; -- 0ms;
SELECT ((LOWER(t0.c37))=(t0.c37)) FROM t0; -- 0ms;
SELECT DISTINCT CAST(((t0.c37) NOT BETWEEN (v0.c0) AND (t0.c37)) AS REAL) FROM t0 WHERE ((((~ ('-1832438716')))+(CASE WHEN '' THEN x'' WHEN '<L' THEN '863315204' WHEN 278308629 THEN 0Xfffffffffd467ec5 ELSE '' END)));SELECT COUNT(((t0.c25) IS TRUE)) FROM v0;SELECT ((((v0.c0) NOT BETWEEN (t0.c25) AND ('-184126767')))%(((t0.c25) NOT BETWEEN (v0.c0) AND (v0.c0)))) FROM v0, t0 WHERE (((CASE 0.22414616559912814  WHEN '芖j{u!' THEN '1266758423' ELSE NULL END) NOT BETWEEN (TYPEOF(NULL)) AND (CASE '''<-y淼k'  WHEN NULL THEN 't3' ELSE '' END))); -- 0ms;
SELECT 0.5710070694507553 FROM v0, t0; -- 0ms;
SELECT DISTINCT CAST((((t0.c37)) NOT BETWEEN ((v0.c0)) AND ((t0.c37))) AS NUMERIC) FROM v0, t0 WHERE (((((((NULL)AND(0Xffffffffe0f490ac)))OR(x''))) IS FALSE)); -- 0ms;
SELECT DISTINCT COUNT('') FROM t0, v0; -- 0ms;
SELECT DISTINCT CAST(((v0.c0)IS(v0.c0)) AS BLOB) FROM t0;SELECT (((v0.c0)) NOT BETWEEN ((t0.c25 COLLATE NOCASE)) AND (((((t0.c37)) NOT BETWEEN ((t0.c37)) AND ((v0.c0)))))) FROM v0, t0 LIMIT -1897661106; -- 0ms;
SELECT CUME_DIST() OVER (), t0.c25, (+ (((v0.c0)IS(t0.c37)))) FROM v0;SELECT DISTINCT (((v0.c0)) BETWEEN ((t0.c37 COLLATE BINARY)) AND (((+ (t0.c25))))) FROM v0, t0; -- 0ms;
SELECT ALL ((((t0.c37) NOT BETWEEN (t0.c37) AND (t0.c25)))%((v0.c0 IN ()))) FROM t0 WHERE (LIKELY(DISTINCT CAST(0.7343615358477434 AS BLOB))); -- 0ms;
SELECT DISTINCT ((((((t0.c25)OR(v0.c0)))OR(t0.c25))) BETWEEN (v0.c0) AND (((((t0.c37)OR(t0.c25)))AND(v0.c0)))), GROUP_CONCAT(json_object(t0.c37, t0.c25)) OVER (), ((((((((((t0.c25)AND(v0.c0)))OR(v0.c0)))AND(v0.c0)))AND('-1900463948'))) IS FALSE) FROM t0, v0 WHERE (((NOT (NULL)) IN ())); -- 0ms;
SELECT ALL (('-2115964262')IS(((((((((t0.c25)AND(t0.c37)))OR(0.18169656731899253)))OR(v0.c0)))OR(t0.c25)))) FROM t0 WHERE ((('-9223372036854775808')>=(((0.7230733822537881) IS TRUE))));SELECT (((- (v0.c0)))!=(((((x'd46c')AND(t0.c37)))OR(v0.c0)))) FROM t0, v0; -- 0ms;
SELECT DISTINCT ((((v0.c0))>=((v0.c0))) IN ()) FROM v0, t0 WHERE (CAST(((0.32874567700679447)LIKE('-350760820')) AS BLOB)); -- 0ms;
SELECT DISTINCT t0.c37 FROM v0, t0; -- 0ms;
SELECT DISTINCT ((((t0.c25)OR((((v0.c0, t0.c25, t0.c37)) BETWEEN ((t0.c37, t0.c25, t0.c25)) AND (('ce2p', t0.c25, v0.c0))))))AND(t0.c37 COLLATE BINARY)) FROM v0;SELECT ALL CASE (+ (t0.c37))  WHEN ((((t0.c37)OR(t0.c37)))AND(t0.c25)) THEN ((v0.c0)LIKE(t0.c25)) END FROM t0 WHERE (PRINTF(CASE WHEN 0.4446264691338322 THEN '1049823201' ELSE NULL END));SELECT DISTINCT COUNT(*) FROM t0, v0 WHERE (CASE WHEN 1446581430 THEN '[OT뀏>#Rvq' ELSE -1.78451616E8 END COLLATE RTRIM) ORDER BY ((((t0.c37) IS FALSE))|((((t0.c37))!=((v0.c0))))) ASC; -- 0ms;
SELECT TOTAL(((v0.c0) IS FALSE)) OVER (), ((t0.c37)<((0.28351872212420204 IN ()))), AVG(((t0.c37) IS TRUE)) FROM t0, v0 WHERE ((NOT ((((('-2041178282')AND(x'')))OR(x'0e72'))))) ORDER BY ((((((((((((((v0.c0)AND(t0.c25)))AND(v0.c0)))AND(t0.c25)))OR(t0.c25)))OR(0.2336905268059406)))OR(v0.c0)))<>(CAST(x'' AS BLOB))) ASC, ((t0.c37 COLLATE NOCASE)|(((v0.c0) NOTNULL))) ASC  NULLS LAST; -- 0ms;
SELECT CASE WHEN t0.c37 THEN TOTAL(t0.c25) WHEN t0.c25 THEN GROUP_CONCAT(0x1cc6e0d5) WHEN LOWER(DISTINCT NULL) THEN 0.3293198279228998 END FROM t0 WHERE (NULL); -- 0ms;
SELECT ALL ((CAST(v0.c0 AS BLOB)) BETWEEN (((t0.c25)+(v0.c0))) AND (NULL)), (((t0.c37)||(t0.c37)) IN (((((t0.c25)OR(v0.c0)))OR(t0.c37)))), PERCENT_RANK() OVER () FROM t0 WHERE ((((((0X426f04cf)) NOT BETWEEN ((0.3921257328613508)) AND ((NULL)))) BETWEEN ((x'' IN ('-29237780'))) AND (((-4.61265791E8)|(NULL))))) GROUP BY ((x'') NOT NULL), 'e|', CAST(CASE WHEN v0.c0 THEN t0.c37 WHEN t0.c25 THEN v0.c0 WHEN t0.c37 THEN NULL END AS TEXT);SELECT DISTINCT (((t0.c25 IN ())) BETWEEN (((t0.c25) NOT BETWEEN (t0.c37) AND (v0.c0))) AND (t0.c37 COLLATE NOCASE)), COUNT(*), SUM(((((((((NULL)OR(v0.c0)))OR(0Xffffffff86e2bfb3)))AND(t0.c37)))AND(v0.c0))) FROM v0;SELECT DISTINCT (t0.c37 COLLATE NOCASE IN ()), (CAST('9E' AS REAL) IN ()), (~ (CAST(t0.c25 AS REAL))) FROM t0; -- 0ms;
SELECT DISTINCT ROW_NUMBER() OVER (), UPPER(x''), ((((t0.c25)GLOB(t0.c25)))!=(((v0.c0) NOT BETWEEN (t0.c25) AND (t0.c25)))) FROM t0, v0 WHERE ((((('')>=('-x1sL]'))) NOT BETWEEN (((((-1.734147237E9)OR(x'8759')))AND('-2056131347'))) AND (-2115964262 COLLATE NOCASE))); -- 0ms;
SELECT DISTINCT CASE WHEN CAST(t0.c25 AS REAL) THEN ((t0.c37) IS FALSE) ELSE (((t0.c25, t0.c25, t0.c25))=((t0.c37, v0.c0, t0.c25))) END, CHAR(((v0.c0)%(t0.c25))), CASE WHEN ((t0.c37) NOT BETWEEN (t0.c37) AND (v0.c0)) THEN CAST(t0.c37 AS NUMERIC) ELSE (+ (t0.c25)) END FROM t0, v0 WHERE (CAST((('0wha\n_\') BETWEEN (1046523555) AND ('696692506')) AS NUMERIC)); -- 0ms;
SELECT DISTINCT CASE CASE WHEN t0.c25 THEN t0.c25 END  WHEN ((t0.c25)&(t0.c37)) THEN ((t0.c37)-(t0.c37)) END FROM v0;SELECT DISTINCT UPPER((~ (t0.c25))), TYPEOF(COUNT(t0.c37)), CASE (((v0.c0))<=((v0.c0)))  WHEN ((((t0.c25)AND('1701449269')))OR(t0.c37)) THEN TRIM(t0.c37, v0.c0) WHEN ((v0.c0) NOT NULL) THEN (NOT (v0.c0)) WHEN ((t0.c37) NOTNULL) THEN CASE v0.c0  WHEN v0.c0 THEN t0.c37 ELSE x'' END ELSE ((t0.c25)>=(v0.c0)) END FROM v0, t0; -- 0ms;
SELECT ALL MIN((t0.c25 IN ())) FROM v0, t0 WHERE (((((0.732360478104076)>>('-557917516'))) BETWEEN (CAST(0.3052371524550611 AS NUMERIC)) AND ((('_T_.G')/(x''))))); -- 0ms;
SELECT ALL CASE WHEN v0.c0 THEN t0.c37 COLLATE NOCASE ELSE ((((((((t0.c37)AND(t0.c25)))AND(v0.c0)))OR(t0.c37)))OR(t0.c37)) END, (- (((v0.c0) NOT NULL))), (NOT (((v0.c0) NOT BETWEEN (v0.c0) AND (t0.c37)))) FROM t0;SELECT DISTINCT (NOT (v0.c0)) FROM v0; -- 0ms;
SELECT DISTINCT '>ꕃbxy^B柖' FROM t0, v0 WHERE (((((0.44083645832892204) BETWEEN (0.8165724072912329) AND ('-152878880'))) NOT NULL)); -- 0ms;
SELECT DISTINCT CAST((~ (t0.c37)) AS NUMERIC) FROM t0 WHERE (((((((((CASE 0.7764327922299145  WHEN x'' THEN 1741056547 END)OR(((x'') NOTNULL))))OR(CASE NULL  WHEN 0.063728371517637 THEN 0.07471550869601307 ELSE NULL END)))AND((((('')OR(-1829409720)))OR(0Xffffffffbdcb1134)))))AND((+ ('2<䱢\n.M'))))) LIMIT 1885838608; -- 0ms;
SELECT DISTINCT t0.c25, ((((((((CASE t0.c25  WHEN t0.c37 THEN '0룰' WHEN t0.c25 THEN t0.c25 WHEN t0.c37 THEN v0.c0 ELSE t0.c37 END)OR(((v0.c0)*(t0.c37)))))AND(((v0.c0)>=(t0.c37)))))AND(((t0.c37) IS TRUE))))AND(CASE WHEN v0.c0 THEN t0.c37 WHEN v0.c0 THEN t0.c25 WHEN t0.c25 THEN t0.c25 END)), ROW_NUMBER() OVER () FROM v0 GROUP BY ((t0.c37 COLLATE BINARY)IS NOT(((t0.c37)IS(t0.c25)))), (((t0.c37)>>(t0.c37)) IN ()), ((((t0.c25)OR((((v0.c0, '-1657048681', t0.c37, v0.c0, v0.c0))<=((v0.c0, v0.c0, v0.c0, t0.c37, t0.c37))))))OR(((t0.c25)IS(t0.c25)))), ((CAST(v0.c0 AS INTEGER))<=(((t0.c37) NOT BETWEEN (t0.c25) AND (v0.c0)))), CAST(((v0.c0) NOT NULL) AS REAL);SELECT ALL (t0.c25 COLLATE NOCASE IN ((((t0.c25, t0.c25, v0.c0, v0.c0, t0.c37)) BETWEEN ((t0.c37, v0.c0, t0.c37, v0.c0, t0.c25)) AND ((t0.c25, t0.c37, t0.c37, v0.c0, t0.c25))))) FROM t0;SELECT (-1.84166997E8 IN (((((t0.c25)AND(v0.c0)))OR(v0.c0)))) FROM t0;SELECT DISTINCT MAX(CAST(t0.c25 AS BLOB)) FROM v0 WHERE ((((NULL IN (''))) NOT NULL));SELECT (((- (v0.c0)))|((- (v0.c0)))), (CASE WHEN t0.c37 THEN v0.c0 WHEN t0.c25 THEN t0.c25 WHEN t0.c37 THEN v0.c0 ELSE v0.c0 END IN ()), v0.c0, NULL, ((((t0.c37)LIKE('m'))) IS FALSE) FROM t0, v0; -- 0ms;
SELECT json_insert(((((v0.c0)AND(t0.c25)))OR(v0.c0)), ((t0.c25)-(t0.c25)), t0.c25) FROM v0, t0; -- 0ms;
SELECT ALL ((((CAST(t0.c37 AS BLOB))AND(v0.c0)))OR(x'')), ((((((((((((t0.c25)AND(NULL)))OR(v0.c0)))AND(((t0.c25)GLOB(v0.c0)))))OR(0.3874004021530768)))OR(CAST(v0.c0 AS BLOB))))AND(t0.c37)), CAST(v0.c0 COLLATE RTRIM AS BLOB) FROM v0;SELECT DISTINCT CASE WHEN ((t0.c25)>(v0.c0)) THEN ((((((((v0.c0)OR('-1653304431')))AND(v0.c0)))OR(t0.c37)))AND(t0.c25)) ELSE (((t0.c25, t0.c37, NULL)) NOT BETWEEN ((t0.c37, t0.c37, NULL)) AND ((t0.c37, v0.c0, t0.c37))) END FROM v0 ORDER BY ((CAST(NULL AS NUMERIC)) ISNULL) DESC;SELECT DISTINCT ((CAST(t0.c25 AS BLOB))AND(((t0.c25)||(t0.c37)))) FROM v0 WHERE (CASE WHEN ('' IN ()) THEN ((((x'')OR('\nG')))OR(x'c944')) ELSE (('TFg听R8l\n')+(x'')) END);SELECT ALL x'', LIKELY(DISTINCT t0.c25 COLLATE NOCASE), CASE '9r'  WHEN t0.c25 THEN v0.c0 WHEN v0.c0 THEN t0.c25 WHEN v0.c0 THEN v0.c0 ELSE t0.c25 END COLLATE NOCASE FROM v0, t0; -- 0ms;
SELECT ALL ((CASE WHEN x'' THEN v0.c0 END) NOT BETWEEN ((+ (v0.c0))) AND (((t0.c25)IS(t0.c37)))), ((UNLIKELY(DISTINCT v0.c0)) BETWEEN ('-1902947111') AND (((t0.c25) ISNULL))), (((v0.c0) NOT NULL) IN (-1669411914)) FROM t0, v0; -- 0ms;
SELECT COUNT(*) FROM v0, t0; -- 0ms;
SELECT DISTINCT COUNT(*) FROM t0; -- 0ms;
SELECT ((t0.c37 COLLATE NOCASE) NOT BETWEEN (AVG(NULL)) AND (((t0.c37)-(t0.c25)))) FROM v0, t0 WHERE (((((NULL)>=(NULL)))*(-1304699903))); -- 0ms;
SELECT ALL ((((((((((((((v0.c0)|(t0.c25)))AND((t0.c25 IN (t0.c25)))))AND((t0.c37 IN ()))))AND(((((((((v0.c0)AND(v0.c0)))OR(t0.c25)))OR(v0.c0)))AND(t0.c37)))))AND(((t0.c37)*(v0.c0)))))OR(((v0.c0)-(t0.c25)))))AND(((((x'')OR(v0.c0)))AND(v0.c0)))) FROM t0, v0 WHERE ((((('734079724')>>(NULL))) IS FALSE)) GROUP BY ((((((((((t0.c25) ISNULL))OR(((x'c89b') NOT BETWEEN (t0.c25) AND (t0.c37)))))OR(((((((((NULL)OR(v0.c0)))AND(t0.c25)))AND(0.17643544847307613)))OR(v0.c0)))))AND((- (v0.c0)))))OR((- (v0.c0)))) HAVING AVG('c<3鴐ta6'); -- 0ms;
SELECT ALL (((- (t0.c37)))LIKE(((',/f8Pz\n.')IS NOT(v0.c0)))), ((((((((((v0.c0)OR(t0.c37)))AND(t0.c37)))OR(0.8133351791549386)))OR(t0.c25))) IS FALSE), NULL COLLATE NOCASE FROM v0, t0 WHERE (((((3.7209115E8)<('0.47951795821208776'))) ISNULL)); -- 0ms;
SELECT DISTINCT COUNT(CAST(x'' AS REAL)), ((UPPER(v0.c0)) NOT BETWEEN (NULL) AND (CAST(1200044012 AS NUMERIC))), LAST_VALUE('9]') OVER () FROM v0, t0 INDEXED BY i14 WHERE (NULL);SELECT DISTINCT -1e500 FROM t0 WHERE (((x'' COLLATE NOCASE)OR((('-931354348')<<(NULL))))); -- 0ms;
SELECT PERCENT_RANK() OVER () FROM v0, t0 WHERE ((((NULL, ((((0.7474121725716079)OR(0.32888712520290797)))OR(NULL)), CASE WHEN NULL THEN '' END))>(('-76148750' COLLATE RTRIM, '343642815' COLLATE RTRIM, 0.541514157046906)))); -- 0ms;
SELECT GROUP_CONCAT(NULL) OVER () FROM t0; -- 0ms;
SELECT DISTINCT AVG(((v0.c0) NOT BETWEEN (t0.c25) AND (t0.c25))) OVER () FROM t0;SELECT DISTINCT COUNT(CASE t0.c25  WHEN t0.c25 THEN t0.c25 ELSE t0.c37 END) FROM t0; -- 0ms;
SELECT ALL ((((v0.c0)AND((((t0.c37, t0.c25, v0.c0))<>((t0.c25, 0.5564528083546764, v0.c0))))))OR(IFNULL(v0.c0, t0.c37))) FROM t0 WHERE ((((0.8197596058711056)) BETWEEN ((2.27687912E8 COLLATE BINARY)) AND ((x''))));SELECT DISTINCT ((t0.c25) BETWEEN (TOTAL(t0.c25)) AND (CASE WHEN v0.c0 THEN t0.c37 END)) FROM v0, t0 NOT INDEXED; -- 0ms;
SELECT 'q?烣\r!\n3*' FROM v0 WHERE (((((NULL)==(x''))) NOT BETWEEN (load_extension('-1912523395', -1.31330478E9)) AND (NULL))); -- 0ms;
SELECT ALL ABS(DISTINCT ((t0.c37) NOT BETWEEN (t0.c25) AND (t0.c25))), (- (MAX(v0.c0))), ((((((((((((((((t0.c25)OR(t0.c37)))AND(x'')))AND(t0.c25)))AND(t0.c25)))OR((((t0.c25, t0.c37, t0.c25, v0.c0, t0.c37)) BETWEEN ((v0.c0, t0.c37, t0.c25, t0.c37, v0.c0)) AND ((t0.c25, t0.c37, t0.c37, t0.c25, t0.c25))))))OR(x'')))OR((t0.c25 IN ()))))AND('')), TIME((v0.c0 IN ()), CASE t0.c37  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END, 0x2352aca9), ((COUNT(*))>>(MIN(v0.c0))) FROM t0, v0; -- 0ms;
SELECT DISTINCT (+ ('wo-P')), t0.c37 COLLATE NOCASE, MAX(((t0.c37)<(t0.c25))) FROM t0; -- 0ms;
SELECT ALL ((((v0.c0) NOTNULL))OR(GROUP_CONCAT(0.7068011863725794))) FROM v0 WHERE (((((((((((NULL)AND('Xxp''')))AND(701867979)))OR(x'')))OR('IKű>')))OR((((((((('')AND('-1100648964')))OR('0.6587899887294352')))AND(x'')))OR(NULL))))); -- 0ms;
SELECT DISTINCT SQLITE_VERSION(), MAX(((((t0.c25)OR(v0.c0)))OR(t0.c37))), ((t0.c25)IS NOT((((t0.c37, v0.c0, v0.c0)) NOT BETWEEN ((t0.c37, v0.c0, t0.c25)) AND ((t0.c25, t0.c37, t0.c25))))) FROM t0 GROUP BY ((CAST(t0.c37 AS NUMERIC))>>(LIKELY(DISTINCT t0.c37))), ((v0.c0)GLOB(v0.c0)) COLLATE BINARY, LOWER(t0.c37) COLLATE BINARY;SELECT DISTINCT CASE v0.c0  WHEN (NULL IN ()) THEN ((v0.c0) IS TRUE) END FROM v0; -- 0ms;
SELECT DISTINCT LIKELIHOOD(t0.c25, 0.3236071862140576) COLLATE BINARY FROM t0, v0 WHERE (-819940225); -- 0ms;
SELECT ALL (((NULL) NOT BETWEEN (t0.c25) AND (t0.c25)) IN ()) FROM v0, t0 WHERE (((CAST(0.5834377209500617 AS INTEGER))-((('1044352568') BETWEEN (0.6299169399266278) AND ('-857465276'))))) ORDER BY (- (CAST('?ꢃ	' AS TEXT)))  NULLS LAST; -- 0ms;
SELECT DISTINCT '-1', (((((NULL)) NOT BETWEEN ((t0.c25)) AND ((v0.c0)))) NOT BETWEEN (((t0.c25) NOT BETWEEN (t0.c37) AND (v0.c0))) AND (COUNT(t0.c25))), (((-1.751035263E9))=((t0.c25 COLLATE RTRIM))) FROM v0;SELECT DISTINCT ((HEX(DISTINCT 0.811216747558495)) IS TRUE) FROM t0, v0 ORDER BY 1.049823201E9 ASC  NULLS LAST, ((((((t0.c37)%(t0.c25)))AND(COALESCE(t0.c37, v0.c0, '1957723261', t0.c25))))OR(((v0.c0)IS NOT(t0.c25))))  NULLS FIRST; -- 0ms;
SELECT ALL SUM(((1776930144) NOT BETWEEN (t0.c37) AND (t0.c37))) OVER ( ORDER BY (((t0.c25)) NOT BETWEEN (((((v0.c0))<=((v0.c0))))) AND ((t0.c25 COLLATE NOCASE))) ASC, CAST((~ (t0.c37)) AS NUMERIC), (- (t0.c25)) COLLATE RTRIM DESC) FROM v0, t0 GROUP BY DATE(IFNULL(t0.c25, t0.c37), CAST(v0.c0 AS REAL), CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN t0.c37 THEN t0.c25 END), x'', (NOT (LIKELIHOOD(t0.c37, 0.8311600818246913))) ORDER BY (((NOT (t0.c25))) ISNULL) DESC  NULLS LAST; -- 1ms;
SELECT ALL CAST(x'' AS INTEGER), (('') NOT NULL), t0.c37 FROM t0 WHERE (TRIM(CASE -229443659  WHEN NULL THEN '7亦s?n' END, ((0.7311031938130113)-(x'')))) GROUP BY NULLIF(CAST(v0.c0 AS REAL), (((t0.c25)) NOT BETWEEN ((t0.c37)) AND ((t0.c37))));SELECT DISTINCT CAST(CASE t0.c37  WHEN t0.c25 THEN v0.c0 WHEN t0.c25 THEN t0.c37 WHEN t0.c25 THEN '0.9680533937353717' END AS TEXT) FROM t0 WHERE (CASE WHEN ((0Xffffffffedbbe028)AND(NULL)) THEN ((NULL) IS FALSE) END) ORDER BY (((((((((((v0.c0)OR(t0.c25)))AND(t0.c25)))AND(t0.c25)))OR(t0.c25))))<=((CASE t0.c25  WHEN v0.c0 THEN t0.c25 END))) ASC;SELECT DISTINCT COUNT(*) FROM v0, t0 WHERE (CASE (((NULL, '431262662', 0.8222273734262217)) BETWEEN ((NULL, '1700394238', x'')) AND (('0.9103489048698633', x'', '')))  WHEN ((x'') BETWEEN ('-477448205') AND (0.3034852976126927)) THEN ((((((((-477448205)AND('1264690840')))OR(x'7fe1')))OR(x'21d8')))AND(NULL)) ELSE CASE WHEN 'jc4P' THEN NULL END END); -- 0ms;
SELECT DISTINCT CASE WHEN CAST(NULL AS REAL) THEN ((t0.c37)+(t0.c25)) WHEN t0.c37 THEN CASE '-1520956527'  WHEN t0.c25 THEN t0.c25 WHEN v0.c0 THEN 0Xfffffffff252f7b5 WHEN v0.c0 THEN x'' ELSE v0.c0 END WHEN ((t0.c37)&(t0.c37)) THEN ((v0.c0) NOT BETWEEN (t0.c25) AND (NULL)) END FROM t0 ORDER BY ((((((((((v0.c0)AND(x'f772')))AND(v0.c0)))AND(t0.c37)))AND(t0.c37))) NOTNULL) ASC  NULLS FIRST;SELECT ((((v0.c0) NOT BETWEEN (t0.c37) AND (t0.c25))) BETWEEN (((v0.c0) ISNULL)) AND (CASE WHEN t0.c37 THEN t0.c25 ELSE t0.c37 END)) FROM t0;SELECT DISTINCT CASE WHEN (((v0.c0))>=((t0.c37))) THEN CAST(v0.c0 AS REAL) END FROM v0 WHERE (CAST((NOT (NULL)) AS TEXT)) GROUP BY (((t0.c25))<((v0.c0))) COLLATE NOCASE, NULL, CAST(t0.c37 COLLATE BINARY AS REAL);SELECT DISTINCT ((((v0.c0 COLLATE NOCASE)OR((- (NULL)))))OR(((t0.c37)IS NOT(t0.c37)))) FROM t0 WHERE (LOWER('') COLLATE RTRIM);SELECT DISTINCT '2034374976' FROM t0 LIMIT -1416989710; -- 0ms;
SELECT ALL ((((v0.c0 COLLATE NOCASE)AND(((t0.c25)<<(t0.c37)))))AND((t0.c25 IN (t0.c37, t0.c37)))) FROM t0, v0 WHERE ((((CAST(x'9d297ab9' AS REAL)))=((((((NULL)OR(-902295191)))OR(NULL)))))) GROUP BY (~ (((((t0.c37)OR(t0.c25)))OR(v0.c0)))), ((((v0.c0) NOT BETWEEN (v0.c0) AND (t0.c37)))<>(((v0.c0) NOTNULL))), t0.c37 HAVING CASE WHEN (t0.c25 IN (t0.c25)) THEN (v0.c0 IN ()) END; -- 0ms;
SELECT DISTINCT CAST((t0.c37 IN ()) AS NUMERIC) FROM v0, t0 WHERE ('0.08420500746367288') GROUP BY x'599c'; -- 0ms;
SELECT ALL (((((+ (t0.c25)))AND((('2075307236')LIKE(v0.c0)))))OR(((((t0.c25)OR(t0.c37)))AND(t0.c37)))) FROM t0, v0; -- 0ms;
SELECT ALL t0.c37, (NOT (x'')), CASE '-687525045'  WHEN t0.c37 THEN v0.c0 END COLLATE BINARY FROM v0, t0 LIMIT -1208866034; -- 0ms;
SELECT DISTINCT AVG(((t0.c37)=(t0.c37))), (((v0.c0)) NOT BETWEEN ((TRIM(DISTINCT t0.c37, t0.c37))) AND ((NULL))), UNLIKELY(DISTINCT UNLIKELY(x'')) FROM v0;SELECT DISTINCT GROUP_CONCAT(v0.c0 COLLATE NOCASE) COLLATE NOCASE FROM v0; -- 1ms;
SELECT ((((t0.c25)LIKE(t0.c25))) BETWEEN (t0.c37) AND (((v0.c0)||(t0.c25)))) FROM t0, v0 WHERE (((0.38179504038392975 COLLATE RTRIM)&(CAST('''' AS REAL)))); -- 0ms;
SELECT ((TYPEOF(t0.c37)) NOT BETWEEN (NULL) AND (CAST(t0.c37 AS BLOB))), RANK() OVER (), (((((((t0.c37, v0.c0, t0.c37)) BETWEEN ((t0.c25, v0.c0, v0.c0)) AND ((t0.c25, t0.c25, v0.c0))))AND(((v0.c0)!=(t0.c25)))))OR(((v0.c0)OR(t0.c37)))) FROM v0;SELECT (- (((t0.c37) ISNULL))) FROM v0 GROUP BY ((((((t0.c37)AND(t0.c25)))AND(t0.c37))) BETWEEN (((v0.c0) NOT BETWEEN (t0.c37) AND (v0.c0))) AND ((t0.c37 IN ()))) HAVING '-431043007' ORDER BY 'LQ' ASC;SELECT (((v0.c0) NOTNULL) IN ()) FROM t0, v0 WHERE (((((0.09241865374735991) IS TRUE)) IS TRUE)); -- 0ms;
SELECT DISTINCT (((((((v0.c0)) NOT BETWEEN ((t0.c25)) AND ((0.33062403311169775))))OR((+ (t0.c25)))))OR(((((t0.c25)AND(t0.c37)))AND(NULL)))), ((((t0.c37) NOT NULL)) NOT BETWEEN (((0x34787f7a)!=(t0.c25))) AND (json(t0.c37))), (((t0.c25)) BETWEEN ((AVG(t0.c25))) AND ((COUNT(v0.c0)))) FROM v0, t0 GROUP BY CASE WHEN ((t0.c37) BETWEEN (0.5868999757790159) AND (t0.c25)) THEN (~ (v0.c0)) END; -- 0ms;
SELECT DISTINCT ((t0.c37 COLLATE NOCASE) BETWEEN (((t0.c37) BETWEEN (t0.c25) AND (t0.c37))) AND ((~ ('qnx')))) FROM t0 WHERE (''); -- 0ms;
SELECT ((((((v0.c0)AND(t0.c37)))OR(t0.c25))) NOT BETWEEN (((((t0.c37)AND(t0.c37)))OR(t0.c25))) AND ('-461265791')) FROM v0 WHERE (((((((x'')GLOB('')))AND(0.4249393168702986 COLLATE NOCASE)))AND(((('q뜸\np_''AX'))>((NULL))))));SELECT DISTINCT (NOT (CASE WHEN t0.c25 THEN v0.c0 WHEN v0.c0 THEN t0.c25 WHEN t0.c25 THEN t0.c37 WHEN t0.c37 THEN t0.c25 WHEN v0.c0 THEN v0.c0 ELSE t0.c37 END)) FROM t0 ORDER BY ((((v0.c0))<=((v0.c0))) IN ())  NULLS FIRST LIMIT 1005474641 OFFSET -509061992;SELECT DISTINCT (NOT ((((t0.c25))>=((v0.c0))))), ((CASE v0.c0  WHEN t0.c37 THEN t0.c25 WHEN t0.c25 THEN -1511981862 WHEN NULL THEN v0.c0 ELSE t0.c37 END)>(TOTAL(x''))), MIN(DATE(t0.c37, v0.c0, v0.c0, t0.c25, t0.c37)) FROM t0 GROUP BY ((((t0.c25)+(t0.c25))) NOT BETWEEN (((v0.c0) ISNULL)) AND (NULL)) HAVING ((((CAST(v0.c0 AS REAL))OR(((t0.c37) IS TRUE))))OR(CAST(t0.c37 AS REAL)));SELECT ALL ((0.49057278650474534 COLLATE RTRIM)&(t0.c37)), json_array_length(t0.c25, MAX(x'a0a3')), CHAR(0.5915552236451084) FROM t0 WHERE ((((x'', NULL, '-283870180')) NOT BETWEEN (('2025417334' COLLATE RTRIM, NULL COLLATE RTRIM, COALESCE(0.7261216681293576, ''))) AND ((((NULL) NOT BETWEEN ('') AND (NULL)), ((((((((0.8244756551315807)OR(x'982e')))OR(NULL)))OR(NULL)))AND(0.1883749393900811)), (((('')AND(0.3081570823616485)))AND(0.8602923211063354)))))); -- 0ms;
SELECT ((v0.c0 COLLATE BINARY) NOT NULL) FROM v0; -- 0ms;
SELECT DISTINCT AVG(((v0.c0)GLOB(t0.c25))) OVER () FROM v0, t0 NOT INDEXED WHERE ((+ ((('1895421921')|(x'1731'))))) LIMIT 1248008902 OFFSET 1035698311; -- 0ms;
SELECT DISTINCT SUM(t0.c25 COLLATE BINARY), t0.c37, (((t0.c25)IS(t0.c37)) IN ((t0.c37 IN (v0.c0)), ((t0.c25)/(t0.c37)))) FROM t0, v0 WHERE (json_extract(x'c81d', LIKELIHOOD('1634034006', 0.3020460399140742)));SELECT ALL ((ABS(DISTINCT t0.c37)) BETWEEN ((((t0.c25))>=((v0.c0)))) AND (((t0.c37) IS FALSE))), ((((((((((((t0.c37)OR(t0.c25)))AND(v0.c0)))OR(((t0.c25)=(t0.c37)))))AND(CAST(t0.c25 AS INTEGER))))OR(t0.c37 COLLATE BINARY)))AND(json_quote(t0.c37))), x'' FROM t0 WHERE ((((COALESCE(DISTINCT 0X28cf0171, 'Hi', x'', x'c1db', 0.7587578180560872, '-931354348')))>((UPPER(8.91710232E8)))));SELECT ALL t0.c25 COLLATE RTRIM, UNLIKELY('-810731322'), ((((CAST('''_' AS REAL))OR(((t0.c25) IS TRUE))))OR(t0.c25 COLLATE NOCASE)) FROM v0, t0; -- 0ms;
SELECT DISTINCT GROUP_CONCAT(CAST(t0.c25 AS BLOB)) FROM t0, v0; -- 0ms;
SELECT DISTINCT ((t0.c37 COLLATE NOCASE) BETWEEN ((((t0.c37))>=((t0.c37)))) AND (GROUP_CONCAT(t0.c25))) FROM v0, t0 ORDER BY x''; -- 0ms;
SELECT ((((t0.c37)LIKE(v0.c0))) BETWEEN (v0.c0) AND (CASE WHEN t0.c25 THEN t0.c25 ELSE 0.42306948602572225 END)), (((v0.c0)) BETWEEN ((((NULL)<(v0.c0)))) AND ((CASE WHEN t0.c25 THEN v0.c0 ELSE 0X1e69b845 END))), ((AVG(t0.c37))-(((v0.c0) BETWEEN (t0.c25) AND (t0.c37)))) FROM t0, v0 ORDER BY ((((v0.c0 COLLATE BINARY)OR((t0.c37 IN ()))))OR(((8.90200136E8)<(t0.c37)))); -- 0ms;
SELECT DISTINCT (((v0.c0)) BETWEEN (((((t0.c37)) NOT BETWEEN ((v0.c0)) AND ((t0.c37))))) AND ((COALESCE(v0.c0, t0.c25)))) FROM v0 GROUP BY x'' COLLATE NOCASE HAVING (((~ (-3.83900771E8))) NOT BETWEEN ((v0.c0 IN (x''))) AND (CASE WHEN x'fa39' THEN v0.c0 WHEN t0.c25 THEN t0.c37 WHEN v0.c0 THEN t0.c37 END));SELECT ALL CHAR(CASE t0.c37  WHEN t0.c37 THEN t0.c37 END), ((DATETIME(t0.c25, t0.c37, '')) NOT NULL), CAST(t0.c25 AS TEXT), CASE CHAR(0.846344492892602)  WHEN (t0.c37 IN (v0.c0)) THEN ((t0.c37) BETWEEN (v0.c0) AND (t0.c25)) WHEN ((0.3437321570560131)=(t0.c37)) THEN t0.c25 WHEN v0.c0 THEN ((t0.c25) BETWEEN ('0.33062403311169775') AND (v0.c0)) WHEN (- (t0.c25)) THEN COUNT(-3.70137818E8) WHEN ((t0.c25)/(t0.c37)) THEN ((t0.c37) NOT NULL) END, ((((t0.c37)OR((- (v0.c0)))))OR(AVG(v0.c0))) FROM t0, v0 WHERE (((CAST('-1902947111' AS NUMERIC))<=(CASE WHEN 3.1766217E7 THEN x'fc75' WHEN '482795733' THEN ')}' WHEN '0.4372526717268118' THEN -63096374 END))) LIMIT 372091150; -- 0ms;
SELECT ALL CAST(CASE t0.c37  WHEN '0.6727056998556287' THEN t0.c37 END AS BLOB) FROM t0 WHERE (NULL); -- 0ms;
SELECT 0x532ef317 FROM v0 GROUP BY t0.c37 HAVING (((t0.c25) IS TRUE) IN ());SELECT DISTINCT t0.c25, ROW_NUMBER() OVER ( GROUPS  CURRENT ROW), (('') BETWEEN (((v0.c0) IS TRUE)) AND (((t0.c37)>(v0.c0)))) FROM v0;SELECT DISTINCT ((t0.c25 COLLATE RTRIM) ISNULL) FROM v0 WHERE ((x'' IN (((x'3bcf') NOT BETWEEN ('oG{%jtk') AND ('<L'))))) LIMIT -517627944;SELECT ALL ((((((t0.c25)OR(t0.c37)))AND(t0.c37))) IS FALSE), GROUP_CONCAT(((t0.c25)>>(t0.c25))), ((((t0.c37)OR(v0.c0)))OR(t0.c37)) COLLATE BINARY FROM v0, t0; -- 0ms;
SELECT ALL CASE WHEN ((t0.c37) ISNULL) THEN t0.c37 COLLATE NOCASE END, x'6b30ad75', CAST((t0.c37 IN (t0.c25)) AS INTEGER) FROM t0 WHERE (((((('0J쵎Mm\cK혥')AND(NULL)))AND('516858945')) IN ('-816988914', IFNULL(x'', -1.680085412E9)))) GROUP BY (((((t0.c37) IS FALSE)))>((0.2823249684957265))) HAVING HEX(DISTINCT SQLITE_SOURCE_ID()); -- 0ms;
SELECT DISTINCT CAST(v0.c0 COLLATE BINARY AS NUMERIC), t0.c25, TOTAL(((((v0.c0)AND(v0.c0)))OR(t0.c25))) FROM t0 GROUP BY ((((v0.c0)OR((x'ed80' IN ()))))OR(v0.c0)) ORDER BY (((((t0.c25)AND(t0.c25)))AND(v0.c0)) IN ()) DESC  NULLS FIRST, ((((CASE WHEN t0.c37 THEN t0.c37 ELSE t0.c25 END)OR(CAST(t0.c25 AS TEXT))))OR(t0.c25))  NULLS LAST, ((-6.89140617E8) IS FALSE)  NULLS FIRST;SELECT ((((t0.c25) NOT BETWEEN (t0.c25) AND (v0.c0))) ISNULL), LIKELIHOOD(CASE WHEN v0.c0 THEN t0.c37 WHEN t0.c25 THEN t0.c25 WHEN x'dc47' THEN t0.c37 ELSE t0.c25 END, 0.343779779562142), ((((t0.c25)*(t0.c25))) NOTNULL) FROM t0, v0 WHERE (CASE WHEN 'w' THEN '1694611904' WHEN x'' THEN NULL WHEN -1739204094 THEN x'' ELSE x'' END COLLATE RTRIM); -- 0ms;
SELECT DISTINCT CAST(((((v0.c0)AND(t0.c37)))AND('[OT뀏>#Rvq')) AS TEXT) FROM v0, t0 WHERE ((((((((((NOT (8.90200136E8)))OR(CASE '-726074352'  WHEN '2146476501' THEN 0.9848509962056496 END)))OR(((('(^l)')) BETWEEN (('')) AND (('1104264688'))))))AND(((x'04e7')>=(0.24296090973191709)))))OR((('199072055') IS FALSE)))); -- 0ms;
SELECT DISTINCT (((t0.c37)) NOT BETWEEN ((t0.c37)) AND ((t0.c37))) COLLATE RTRIM FROM t0, v0 WHERE (CASE WHEN (((NULL, 0.47951795821208776, NULL)) NOT BETWEEN ((NULL, 0.08502373054010037, 0.7390644000946849)) AND ((x'', 0.2991211243915646, '1635768539'))) THEN NULL COLLATE NOCASE ELSE (0.9831592941670717 IN ()) END) ORDER BY (((((t0.c37)) NOT BETWEEN (('476742167')) AND ((v0.c0)))) NOTNULL) ASC; -- 0ms;
SELECT ALL CAST((~ (t0.c37)) AS REAL), (((CAST(t0.c37 AS INTEGER)))>=(('-1209531488'))), (~ (CAST(NULL AS INTEGER))) FROM t0 WHERE (((((x'') NOTNULL))<=(((0.8566114621146741)LIKE(1.030315267E9))))); -- 1ms;
SELECT (v0.c0 IN ()) FROM t0; -- 0ms;
SELECT DISTINCT (((- (v0.c0)))>(((((((((t0.c25)OR(v0.c0)))AND(t0.c37)))AND(v0.c0)))AND(t0.c25)))) FROM v0;SELECT CAST(((((t0.c37)OR(v0.c0)))AND(t0.c37)) AS BLOB) FROM t0;SELECT ALL ((0.6295217134703917) NOT BETWEEN (t0.c25 COLLATE BINARY) AND (CASE 0Xffffffffef83b5c7  WHEN t0.c25 THEN t0.c37 END)) FROM v0 WHERE ((((((x'')) NOT BETWEEN ((0.8815794604470566)) AND ((0.7474452828951822)))) ISNULL)) GROUP BY t0.c37 HAVING SUM(((((((((t0.c25)OR(v0.c0)))OR(v0.c0)))OR(t0.c37)))OR(v0.c0))) COLLATE NOCASE ORDER BY (NOT (CASE WHEN v0.c0 THEN v0.c0 END))  NULLS FIRST;SELECT DISTINCT ((ABS(t0.c37)) BETWEEN (GROUP_CONCAT(t0.c37)) AND (json_remove(t0.c37, t0.c37))) FROM v0 WHERE ((((((('')-(x'')))AND((((x'')) NOT BETWEEN ((-882187310)) AND (('z!'))))))OR((NOT (NULL)))));SELECT DISTINCT (((t0.c37)LIKE(t0.c25)) IN ()), ((((((t0.c25)AND(t0.c25)))AND(v0.c0))) NOT BETWEEN (v0.c0) AND ((((t0.c37, v0.c0, NULL)) NOT BETWEEN ((t0.c37, v0.c0, t0.c25)) AND ((v0.c0, v0.c0, t0.c25))))), ((((t0.c37) BETWEEN (t0.c25) AND (t0.c25)))IS(((v0.c0)>(t0.c25)))), x'', CAST(((((((((x'141d')OR(v0.c0)))AND(t0.c37)))AND(t0.c37)))OR(t0.c37)) AS BLOB) FROM t0 WHERE (json_array_length(((((NULL)OR(NULL)))OR('H|8TWaP'))));SELECT ALL ((((((((((v0.c0)IS NOT(v0.c0)))AND(t0.c37 COLLATE NOCASE)))OR(((t0.c37)%(0xffffffffe91e239d)))))AND(CASE WHEN v0.c0 THEN t0.c37 END)))AND(x'2ac8')) FROM v0, t0; -- 1ms;
SELECT ((((0.541514157046906) NOT BETWEEN (t0.c37) AND (t0.c25))) BETWEEN (COUNT(t0.c37)) AND (((x'') BETWEEN (0Xffffffffeda3ff81) AND (v0.c0)))) FROM v0;SELECT DISTINCT ((((v0.c0)<<(v0.c0)))IS((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))), v0.c0, t0.c37 FROM v0 WHERE (CASE WHEN ((NULL)OR(0.8502707445902175)) THEN CAST('-832882168539264494:-6643124804508364531:-3667349430412125932 1487T1704T-3504467196062555330 씻P' AS BLOB) END) LIMIT -1538489836 OFFSET 1782687636;SELECT DISTINCT (((((v0.c0)) NOT BETWEEN ((t0.c37)) AND ((v0.c0)))) NOT BETWEEN (CAST(t0.c25 AS NUMERIC)) AND (CAST(x'bfcc' AS REAL))) FROM t0, v0; -- 0ms;
SELECT DISTINCT ((CAST(t0.c25 AS TEXT)) IS FALSE) FROM t0; -- 0ms;
SELECT DISTINCT STRFTIME(v0.c0 COLLATE RTRIM, (t0.c25 IN ()), UPPER(t0.c25)), CASE WHEN 0.2955407254445207 THEN CASE WHEN t0.c25 THEN t0.c25 WHEN v0.c0 THEN t0.c37 WHEN v0.c0 THEN t0.c25 ELSE t0.c37 END ELSE -1324561446 END, (- (((((t0.c25)OR(v0.c0)))OR(v0.c0)))) FROM v0, t0; -- 0ms;
SELECT ((GROUP_CONCAT(t0.c37)) ISNULL), NULL COLLATE NOCASE, ((((t0.c37) NOT BETWEEN (v0.c0) AND (0x3e856ec8))) NOT BETWEEN (((t0.c37) NOTNULL)) AND (0.3921257328613508)) FROM t0, v0 WHERE ((((('-2031960141') IS FALSE))||(((0.3975875298691315)*(NULL))))) GROUP BY TRIM(DISTINCT '', NULLIF(t0.c37, NULL)) HAVING SUM(((t0.c37) NOT BETWEEN (t0.c25) AND (t0.c25))); -- 0ms;
SELECT TOTAL(TRIM(0.40766221634615385)) OVER () FROM t0, v0 WHERE (((((x'92f8')LIKE(NULL))) IS TRUE)); -- 0ms;
SELECT DISTINCT COUNT(*) FROM v0, t0 GROUP BY (~ (((((t0.c25)OR(t0.c25)))AND(v0.c0)))), 1586337916, '-795878492' LIMIT -152878880;SELECT ALL AVG(((v0.c0) IS TRUE)) OVER (), ((t0.c25 COLLATE BINARY)>=(((v0.c0) NOTNULL))), (((v0.c0, v0.c0, t0.c37)) NOT BETWEEN (((- (t0.c37)), (v0.c0 IN (t0.c25, v0.c0, t0.c37)), ((t0.c37) NOT BETWEEN (t0.c25) AND (t0.c25)))) AND ((UPPER(DISTINCT NULL), ((v0.c0) NOT NULL), ((t0.c37)=(v0.c0))))) FROM t0, v0 WHERE (x''); -- 0ms;
SELECT DISTINCT ((((((t0.c25)OR(t0.c37)))AND(v0.c0))) NOT NULL), ((MIN(59036647))*((NOT (v0.c0)))), AVG((- (t0.c37))), UNLIKELY(((t0.c37) IS FALSE)), ((t0.c37) IS TRUE) FROM v0, t0 WHERE (((0.7302632737222338)||(x'60ac'))); -- 0ms;
SELECT (CAST(t0.c25 AS TEXT) IN (((t0.c37) NOT BETWEEN (t0.c37) AND (v0.c0)))) FROM v0, t0; -- 0ms;
SELECT ROW_NUMBER() OVER () FROM v0, t0 WHERE (ABS(UNLIKELY(NULL))); -- 0ms;
SELECT DISTINCT (((t0.c37)) NOT BETWEEN (((+ (t0.c37)))) AND ((((t0.c25)GLOB(v0.c0))))) FROM t0, v0; -- 1ms;
SELECT DISTINCT ((((v0.c0)IS NOT(t0.c37))) NOTNULL), v0.c0, '0.8128231804801149' FROM t0, v0 LIMIT -1768663942 OFFSET -1606852514; -- 0ms;
SELECT ((CASE WHEN t0.c37 THEN v0.c0 WHEN t0.c25 THEN t0.c25 WHEN v0.c0 THEN t0.c37 END)&(((t0.c25)>=(t0.c37)))) FROM v0 WHERE (((LAST_INSERT_ROWID()) NOTNULL));SELECT DISTINCT COALESCE(DISTINCT t0.c37, t0.c37, t0.c37, t0.c25) COLLATE NOCASE FROM t0 WHERE ((((0x2007720c))<=((((('c,hM5dp'))<((1.885838608E9))))))); -- 0ms;
SELECT ALL (- (((NULL) IS TRUE))), CAST((((0.8948166415282077)) BETWEEN ((v0.c0)) AND ((v0.c0))) AS BLOB), CAST(CASE WHEN v0.c0 THEN t0.c37 ELSE t0.c37 END AS NUMERIC) FROM t0 WHERE ((0.11516689508321709 IN (0.5504123296902798)) COLLATE BINARY);SELECT ALL t0.c25 FROM t0 WHERE (CASE ((x'a57a')IS NOT(''))  WHEN ((((0.42712975977747125)OR(0.8163597170620437)))OR(x'')) THEN ((NULL) IS FALSE) ELSE ((x'167c') BETWEEN (0x3f283a30) AND ('964509331')) END); -- 0ms;
SELECT DISTINCT CAST(CASE WHEN v0.c0 THEN t0.c25 END AS REAL), MAX(((v0.c0) BETWEEN (v0.c0) AND (t0.c37))), (((- (t0.c37)))AND(CAST(t0.c37 AS BLOB))) FROM v0, t0 WHERE ((((('zaU]x)') NOT BETWEEN (0.04373405964440846) AND (0.22852631689344416)))==(CAST('x&UXqr,&%' AS INTEGER)))) ORDER BY ((((v0.c0, t0.c25, t0.c25)) NOT BETWEEN ((0xffffffffca9a3f1d, t0.c25, v0.c0)) AND ((t0.c37, t0.c25, t0.c37))) IN ()); -- 0ms;
SELECT (((t0.c37) IS FALSE) IN ((((t0.c25)) NOT BETWEEN ((v0.c0)) AND ((x''))))), ((((CASE t0.c25  WHEN t0.c25 THEN t0.c37 END)OR(t0.c37)))OR(((t0.c25) IS TRUE))), v0.c0 FROM v0, t0 WHERE (CASE ((0.14257401051775243) NOT BETWEEN ('Xj') AND (0.9723098889125952))  WHEN CASE x''  WHEN '1172678787' THEN x'' ELSE x'' END THEN (~ ('1406990825')) ELSE ((0.4556240257229959)+(NULL)) END); -- 1ms;
SELECT CAST(((t0.c37) BETWEEN (t0.c37) AND (v0.c0)) AS REAL) FROM v0 LIMIT -896859046;SELECT DISTINCT (((t0.c25)=(t0.c37)) IN ()) FROM v0, t0 WHERE (NULL); -- 0ms;
SELECT DISTINCT UPPER(DISTINCT LIKE(t0.c37, v0.c0, '-')) FROM v0 RIGHT OUTER JOIN t0 ON ((LIKELY(t0.c37)) NOT BETWEEN ((((v0.c0, t0.c37, 0.5807020935497558))<=((v0.c0, t0.c25, NULL)))) AND (((t0.c37)%(x'')))) WHERE (CASE ROUND(NULL, '-370137818')  WHEN (NOT (x'')) THEN (x'' IN ()) END); -- 0ms;
SELECT ((((((v0.c0)<(x'68ce')))AND(((t0.c37)*(v0.c0)))))OR(MIN(v0.c0))) FROM v0, t0 WHERE (((CASE '1270948344'  WHEN 'Rc' THEN x'' END)OR(CASE WHEN -1304699903 THEN NULL END))); -- 0ms;
SELECT DISTINCT t0.c37 FROM v0;SELECT ALL ((v0.c0)!=(t0.c25)) COLLATE BINARY, CUME_DIST() OVER (), ((MAX(v0.c0)) BETWEEN ((- (v0.c0))) AND (((t0.c25)=(v0.c0)))) FROM t0;SELECT ALL CAST(((t0.c37)>=(t0.c25)) AS NUMERIC) FROM v0, t0; -- 0ms;
SELECT DISTINCT (((((((t0.c37)) BETWEEN ((t0.c37)) AND ((t0.c25))))AND(((t0.c37)>(v0.c0)))))OR((((v0.c0)) BETWEEN ((v0.c0)) AND ((t0.c25))))) FROM t0, v0 WHERE (CASE ((NULL) NOT NULL)  WHEN ((NULL) NOTNULL) THEN '<' COLLATE NOCASE WHEN ((NULL) BETWEEN (0.9274944855043876) AND ('K*')) THEN ((-2031960141)>=(x'')) WHEN CASE WHEN '-610351963' THEN NULL END THEN ((('', NULL, -9.31354348E8))>((0x1ecff6c6, NULL, 0.541514157046906))) ELSE CASE x'a187'  WHEN 't3' THEN 'a9G豪䘰%k|''' WHEN x'' THEN '\-JX' WHEN x'' THEN 0.7581848799690657 ELSE x'' END END); -- 0ms;
SELECT CAST(x'8384' AS REAL), ((((((((((t0.c37)OR(t0.c37)))OR(t0.c37)))OR(t0.c25)))AND(0.21661849610484862)))-((~ (v0.c0)))), SUM(((t0.c25) BETWEEN (t0.c25) AND (t0.c25))) OVER ( RANGE ((((t0.c25 COLLATE RTRIM)AND((- (t0.c25)))))AND(((t0.c37) IS TRUE))) PRECEDING EXCLUDE GROUP) FROM v0;SELECT DISTINCT ((((((((x'f3b3')OR(((t0.c25) NOT NULL))))OR(t0.c25 COLLATE RTRIM)))OR(((((((((t0.c37)AND(NULL)))OR(t0.c37)))AND(t0.c25)))OR(t0.c25)))))OR(((v0.c0) NOT BETWEEN (t0.c37) AND (v0.c0)))) FROM t0 WHERE (((CAST(NULL AS TEXT))!=((((x'95de', 'u}^7	', x'')) BETWEEN ((x'', '153665237', '-152878880')) AND ((x'6971', 0.3096201799810153, -1163884951))))));SELECT ((((t0.c25)OR(t0.c37)))%(t0.c37)) FROM t0 WHERE (CASE WHEN (('837671617') NOT BETWEEN (NULL) AND (NULL)) THEN (('-2038902275') BETWEEN ('516858945') AND ('芖j{u!')) WHEN ((NULL)<>('-931354348')) THEN ((x'')IS(0.8058955822689937)) WHEN ((0x7ba7db3d)*(NULL)) THEN (('')<(x'5e7e')) ELSE CAST('wf' AS INTEGER) END) ORDER BY (((((t0.c25 IN ()))OR(v0.c0 COLLATE NOCASE)))OR(CASE WHEN t0.c25 THEN t0.c25 ELSE t0.c25 END)) DESC  NULLS LAST;SELECT ALL MAX((- (v0.c0))) FROM v0 ORDER BY ((((rtreenode(t0.c37, t0.c37))AND(t0.c25)))OR(TRIM(DISTINCT t0.c25)))  NULLS LAST;SELECT ((((-2.075872103E9)AND(CASE '<H'  WHEN v0.c0 THEN v0.c0 ELSE t0.c37 END)))OR(SUM(v0.c0))), PERCENT_RANK() OVER (), t0.c37 FROM t0, v0; -- 0ms;
SELECT DISTINCT ((GROUP_CONCAT(t0.c25)) NOT BETWEEN ((NOT (t0.c37))) AND (((t0.c25)LIKE(NULL)))) FROM t0; -- 0ms;
SELECT DISTINCT 1094225002 FROM t0, v0 WHERE (x''); -- 0ms;
SELECT ((((t0.c25) NOT NULL))=((NOT (t0.c25)))) FROM t0, v0 WHERE ((NOT (((NULL)IS NOT(x'2ab5'))))); -- 0ms;
SELECT ALL ((((t0.c25)<<(t0.c25))) IS TRUE) FROM v0, t0 WHERE (((((NULL IN (x''))))<((((((0.7305605108046821)AND(x'')))AND(NULL)))))); -- 0ms;
SELECT AVG(((v0.c0)|(v0.c0))), ((((v0.c0) NOT NULL)) IS FALSE), NULL FROM t0;SELECT DISTINCT (((- (t0.c25)))LIKE((NOT (0.36922989799381867)))) FROM t0, v0 WHERE ((((NULL COLLATE BINARY))>=(((('')>=('_T_.G')))))) ORDER BY (((('', t0.c25, t0.c37)) BETWEEN ((v0.c0, t0.c37, t0.c37)) AND ((t0.c25, v0.c0, t0.c25))) IN (((t0.c25)||(v0.c0)), ((t0.c25)/(v0.c0)))) DESC  NULLS FIRST LIMIT -934699883; -- 0ms;
SELECT DISTINCT (+ (((t0.c37)/(v0.c0)))), (('') NOT BETWEEN ((t0.c37 IN (v0.c0))) AND (CASE WHEN t0.c37 THEN v0.c0 END)), ((((((((v0.c0)AND(t0.c25)))OR(t0.c25)))AND(']NO^4W-')))OR(0.6671305954705405)) FROM t0;SELECT DISTINCT (('-890543608')*(((t0.c25) IS FALSE))), ((((v0.c0) IS FALSE))/(CAST(x'' AS BLOB))), ((v0.c0 COLLATE BINARY)+((v0.c0 IN ()))) FROM t0 CROSS JOIN v0 ON (- (('' IN ()))) WHERE (LIKELIHOOD(DISTINCT CASE NULL  WHEN NULL THEN NULL ELSE x'b184' END, 0.0736734533605401)); -- 0ms;
SELECT DISTINCT ((((v0.c0)+(t0.c37)))=(TRIM(DISTINCT t0.c37))) FROM v0, t0 WHERE ((((0.4059539856130324)) BETWEEN ((CAST(NULL AS REAL))) AND ((LOWER(DISTINCT '-1752115115'))))); -- 0ms;
SELECT DISTINCT (((((v0.c0, 'OaCp', t0.c37)) BETWEEN ((t0.c25, v0.c0, t0.c37)) AND ((0X1bfb3977, 0.35865860250567083, t0.c37)))) IS FALSE), (((x'ef7d' IN (v0.c0, t0.c37))) BETWEEN (-1.507855631E9) AND (MAX(t0.c37))), NULL FROM t0, v0; -- 0ms;
SELECT DISTINCT -1.734147237E9 FROM v0, t0 WHERE (((((NOT (0.9373753913753978))))>((NULL COLLATE RTRIM)))); -- 0ms;
SELECT CAST(((v0.c0) NOT NULL) AS NUMERIC) FROM v0 WHERE ((- (((((((((0.1890187648427939)OR(x'')))AND(0.15351016784102434)))AND(0.026306887712498006)))AND('2034374976'))))); -- 1ms;
SELECT (+ (v0.c0 COLLATE NOCASE)) FROM v0, t0 LIMIT -711730284 OFFSET -1380391427; -- 0ms;
SELECT DISTINCT ((CAST(v0.c0 AS INTEGER))<((~ (t0.c37)))) FROM v0 LIMIT 818834582 OFFSET 1610001306;SELECT (((CAST(v0.c0 AS REAL), TYPEOF(t0.c37), CAST(t0.c37 AS INTEGER)))!=((CASE WHEN t0.c37 THEN NULL ELSE t0.c25 END, CASE t0.c25  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END, ((t0.c25)!=(t0.c25))))) FROM t0, v0 WHERE ((NOT (TYPEOF(DISTINCT NULL)))); -- 0ms;
SELECT DISTINCT ((AVG(v0.c0)) IS FALSE), ((((CASE v0.c0  WHEN t0.c25 THEN v0.c0 ELSE t0.c37 END)AND(((NULL) NOT NULL))))AND(((t0.c37)IS NOT(t0.c37)))), CAST((((('?6ST	')OR(v0.c0)))AND(t0.c37)) AS BLOB) FROM v0 WHERE ((- (((NULL)OR(0xffffffffd67bece4))))) LIMIT -2104474941 OFFSET -467110838;SELECT DISTINCT AVG((((v0.c0, t0.c37, t0.c25)) BETWEEN ((t0.c25, NULL, t0.c25)) AND ((t0.c37, t0.c37, v0.c0)))) OVER () FROM v0 WHERE (CASE '-1324561446'  WHEN '871093702' THEN NULL END COLLATE NOCASE);SELECT ALL (+ (x'')) FROM v0, t0 WHERE (((NULLIF(DISTINCT 1490303517, x''))<>(((x'28668cda')&(0.026552916840013818))))); -- 0ms;
SELECT '' COLLATE RTRIM FROM t0, v0; -- 0ms;
SELECT ALL (NOT (UNLIKELY(t0.c37))), ((((((v0.c0)AND(t0.c37)))AND(t0.c25))) BETWEEN (((v0.c0) IS TRUE)) AND (json_remove(v0.c0, t0.c37, t0.c37, t0.c37))), PERCENT_RANK() OVER ( ORDER BY (((0.5815493254424963 COLLATE BINARY, ((('Y)')) BETWEEN ((v0.c0)) AND ((t0.c25))), ((NULL) BETWEEN (t0.c37) AND (t0.c37))))!=(((((v0.c0, t0.c37, NULL, v0.c0, 0.9917542394623955)) NOT BETWEEN ((v0.c0, t0.c37, NULL, v0.c0, t0.c37)) AND ((t0.c37, NULL, t0.c25, v0.c0, v0.c0))), ((NULL)|(v0.c0)), ((((v0.c0)AND(t0.c37)))AND('kV&')))))  NULLS FIRST) FROM t0 WHERE ((NOT ((x'' IN ())))) GROUP BY QUOTE(CASE v0.c0  WHEN t0.c37 THEN t0.c37 END), (((- (t0.c25))) IS FALSE), t0.c25;SELECT ALL ((((t0.c37)GLOB(v0.c0))) NOT NULL) FROM t0, v0 WHERE ((('')GLOB(0.8153346850245219)) COLLATE NOCASE COLLATE BINARY); -- 0ms;
SELECT DISTINCT CASE t0.c37  WHEN ((v0.c0)<(v0.c0)) THEN ((((t0.c37)OR(t0.c37)))OR(t0.c37)) ELSE v0.c0 END FROM v0, t0 WHERE ((x'0743' IN ()) COLLATE RTRIM); -- 0ms;
SELECT DISTINCT (~ (((t0.c37) BETWEEN (t0.c25) AND (v0.c0)))) FROM t0 WHERE (CASE WHEN 0.9540416170542999 COLLATE NOCASE THEN ((('-904708967'))<>((x''))) END) LIMIT -251326410 OFFSET -1065882328;SELECT DISTINCT ((((((((((t0.c37)|(t0.c25)))AND(CAST(t0.c37 AS INTEGER))))OR(((t0.c25) IS TRUE))))OR((((v0.c0)) BETWEEN ((t0.c37)) AND ((t0.c25))))))AND((NOT (v0.c0)))), ((((0.2458037065766282)<>(t0.c25))) NOTNULL), (((t0.c25) NOT NULL) IN ()) FROM t0, v0; -- 0ms;
SELECT ALL (((t0.c25 IN ())) BETWEEN (((t0.c37)<<(t0.c37))) AND (t0.c25 COLLATE BINARY)) FROM t0, v0 WHERE ((((((((((((NULL)) NOT BETWEEN ((1.104264688E9)) AND (('0.19493418416946917'))))AND((((0xffffffff9919d260))!=(('212899599'))))))OR(x'')))OR(0.6395895742070951)))OR(((((1133993762)OR('')))AND(0.8306967489917878))))); -- 1ms;
SELECT DISTINCT ((((t0.c25) IS TRUE))/(MIN(v0.c0))), CASE WHEN v0.c0 COLLATE BINARY THEN (('') BETWEEN (t0.c25) AND (t0.c25)) ELSE t0.c25 END, CAST(((t0.c25) ISNULL) AS BLOB) FROM v0, t0 LIMIT -401474440; -- 0ms;
SELECT ALL COUNT((((NULL))<((v0.c0)))) OVER () FROM v0 ORDER BY ((((t0.c25) BETWEEN (t0.c37) AND (v0.c0))) ISNULL)  NULLS LAST;SELECT ALL ((t0.c37) IS FALSE), (- ((+ (t0.c37)))), t0.c25 FROM v0, t0 WHERE (((((x'7744' IN (x'a98d'))))<=((CAST(NULL AS NUMERIC))))); -- 0ms;
SELECT ALL (((t0.c37)) BETWEEN (((0.2645866749090521 IN ()))) AND ((NULL))) FROM t0, v0 WHERE (((((x'')%(-1014296031)))>=((((((((('-1675468760')AND(x'')))AND(0x350f6048)))OR(NULL)))AND(x''))))); -- 0ms;
SELECT ((CAST(t0.c37 AS INTEGER)) NOTNULL) FROM v0 WHERE (((((NULL)==(0.056115382027914884)))-((((0.6124696598810772, '-1307603029', ''))<((9223372036854775807, 0.34552898366007767, ''))))));SELECT ALL MAX(v0.c0) FROM t0, v0 WHERE ((('䠘5' IN (0.5092477077708025)) IN ())) ORDER BY ((x'')OR(CASE WHEN t0.c37 THEN t0.c25 WHEN v0.c0 THEN v0.c0 WHEN 'nh' THEN t0.c37 WHEN t0.c37 THEN '*' WHEN v0.c0 THEN t0.c25 ELSE v0.c0 END)), (((((t0.c37) NOT BETWEEN (t0.c37) AND (v0.c0)), ((t0.c37)IS(t0.c37)), ((v0.c0)>=(t0.c37))))<=((((x'')<=(t0.c25)), SQLITE_SOURCE_ID(), ((((t0.c25)AND(t0.c37)))OR(t0.c37)))))  NULLS LAST; -- 0ms;
SELECT DISTINCT ((((((((((((t0.c37)OR(v0.c0)))AND('9]')))OR(t0.c25)))AND(t0.c37)))OR(((t0.c37)!=(t0.c25)))))OR(AVG(t0.c37))) FROM v0, t0; -- 0ms;
SELECT DISTINCT (((t0.c25)) BETWEEN ((v0.c0)) AND ((t0.c37))) COLLATE BINARY FROM v0, t0 WHERE (CASE WHEN '\ns' THEN '572593505' END COLLATE RTRIM COLLATE RTRIM); -- 0ms;
SELECT CAST(((((v0.c0)OR(t0.c25)))AND(v0.c0)) AS REAL) FROM v0;SELECT DISTINCT ((t0.c25)<(x'4d2c')) FROM t0 WHERE (((((x'5d7c')<>(x'')))LIKE(((x'')*('ꂶR'))))); -- 0ms;
SELECT DISTINCT ((NULLIF(t0.c25, 'k,i]}VT'))&((v0.c0 IN ()))) FROM t0, v0 WHERE (LENGTH((~ (0xffffffff83f8b474)))); -- 0ms;
SELECT DISTINCT (+ ((t0.c37 IN ()))) FROM t0 WHERE (((((0.7804003361033789) NOT BETWEEN ('-359732991') AND ('1711154191')))*(((0.9427770974258183)<(0xb1632c2))))); -- 0ms;
SELECT DISTINCT CAST(x'' AS INTEGER) FROM t0, v0 WHERE (CAST((('~u')|(NULL)) AS REAL)); -- 0ms;
SELECT ALL (+ ((t0.c25 IN (t0.c25)))) FROM v0, t0 WHERE (((x'')OR((('') IS FALSE)))) GROUP BY ((((v0.c0)LIKE(v0.c0)))/(CAST(t0.c25 AS BLOB))); -- 0ms;
SELECT DISTINCT ((((v0.c0) NOT BETWEEN (t0.c37) AND (t0.c25))) ISNULL) FROM v0, t0; -- 0ms;
SELECT DISTINCT NTH_VALUE(((t0.c25 COLLATE RTRIM) IS TRUE), ((((t0.c37) NOTNULL)) BETWEEN ((+ (t0.c25))) AND (((v0.c0)IS NOT(v0.c0))))) OVER ( ORDER BY ((((v0.c0) NOTNULL))||(((x'4fb9')+(v0.c0)))) DESC) FROM v0, t0; -- 0ms;
SELECT ALL CAST(MIN(v0.c0) AS INTEGER) FROM v0; -- 0ms;
SELECT ALL x'04bc', ((0.9554142079844852 COLLATE RTRIM) IS TRUE), MIN(3.6978538E7) COLLATE RTRIM, (+ (821652192)), 0.004364381527878214 FROM t0, v0 ORDER BY ((v0.c0 IN ()) IN ()) ASC  NULLS FIRST; -- 0ms;
SELECT DISTINCT CAST((((t0.c37))=((t0.c25))) AS REAL), (- (((t0.c25) NOT BETWEEN (t0.c37) AND (v0.c0)))), LOWER(DISTINCT (- (v0.c0))), AVG(CASE t0.c37  WHEN t0.c37 THEN t0.c25 ELSE v0.c0 END), ((((((t0.c25) IS FALSE))AND(((v0.c0) NOTNULL))))OR('578527857')) FROM t0, v0; -- 0ms;
SELECT ALL COUNT(*) FROM t0; -- 0ms;
SELECT DISTINCT CAST(((t0.c25) NOT BETWEEN (t0.c25) AND (t0.c37)) AS INTEGER) FROM v0 WHERE (0.683138846452379);SELECT ALL ((((t0.c25) BETWEEN (t0.c37) AND (t0.c25))) NOT BETWEEN (((((v0.c0)OR(t0.c25)))OR(t0.c37))) AND (v0.c0)) FROM t0 WHERE (((((x'ad17') IS TRUE))>(((((((((x'')OR(0.8922629040362055)))OR(0.8660562558392594)))AND(x'')))AND(x'dfef636e')))));SELECT ((((57278108)<=(t0.c25))) NOTNULL) FROM v0;SELECT ALL ((COUNT(*)) NOTNULL) FROM v0 WHERE (((((x'2c02') NOT NULL)) ISNULL)); -- 1ms;
SELECT LAG((((((x''))>=((v0.c0))))||((('1172678787')<>(v0.c0)))), ((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))|(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))), (+ ((~ (v0.c0))))) OVER () FROM v0; -- 0ms;
SELECT DISTINCT CAST(UNLIKELY(t0.c25) AS INTEGER), x'f752', CAST(((v0.c0)%(t0.c25)) AS NUMERIC) FROM t0, v0 LIMIT 716241034 OFFSET 1371706492; -- 0ms;
SELECT ((((v0.c0)||(v0.c0))) IS FALSE) FROM v0 ORDER BY (((NOT (t0.c37)))/(x'')) ASC  NULLS FIRST;SELECT ALL ROW_NUMBER() OVER ( ORDER BY ((((v0.c0) BETWEEN (v0.c0) AND (t0.c25)))AND(((((-1.304699903E9)OR(x'')))AND(t0.c25))))  NULLS LAST, ((CAST(x'c58a' AS INTEGER))OR(((t0.c25)<(t0.c25)))) ASC) FROM v0, t0; -- 0ms;
SELECT DISTINCT CAST((v0.c0 IN (v0.c0)) AS REAL), ((CAST(NULL AS TEXT))LIKE(t0.c37)), ((t0.c25 IN ()) IN ()) FROM t0 WHERE (((CASE WHEN -6.05083327E8 THEN x'' END) BETWEEN ((NOT (NULL))) AND ((('') BETWEEN (NULL) AND (0x4ccf2d9b)))));SELECT DISTINCT ((TOTAL(NULL)) NOTNULL), t0.c25, 1466794317 FROM v0, t0; -- 0ms;
SELECT DISTINCT ' ^{T' FROM v0 WHERE ((((x'')) NOT BETWEEN (((NULL IN (0.3060149947862355)))) AND (((x'' IN ()))))) ORDER BY (((((((t0.c37)AND(t0.c37)))AND(v0.c0)), ((x'') BETWEEN (t0.c25) AND (t0.c25)), ((t0.c25) ISNULL), t0.c25, ((((t0.c25)OR(t0.c25)))AND(v0.c0))))<=((((t0.c25) NOTNULL), t0.c25, ((x'') NOTNULL), NULLIF(DISTINCT t0.c37, v0.c0), ((t0.c25) BETWEEN ('8q+Nn+') AND (t0.c37)))))  NULLS FIRST;SELECT ALL CASE WHEN (t0.c37 IN ()) THEN t0.c25 COLLATE NOCASE ELSE ((((((((t0.c37)AND(t0.c37)))OR(t0.c37)))AND(v0.c0)))OR(t0.c25)) END FROM v0 WHERE (((x'') NOT NULL));SELECT DISTINCT ((((t0.c37) NOT BETWEEN (t0.c37) AND (1039954654)))!=(CASE x''  WHEN '1146366447' THEN t0.c37 END)), LEAD(LIKELY(DISTINCT ((v0.c0)*('1609723839'))), (((- (t0.c37))) IS FALSE), ((0.9658517029819984 COLLATE RTRIM)<(CASE WHEN t0.c37 THEN NULL END))) OVER (), CASE v0.c0 COLLATE BINARY  WHEN ('*N8SEM૨5[' IN ()) THEN LIKELIHOOD(t0.c25, 0.009629840657150668) WHEN (v0.c0 IN ()) THEN COALESCE(DISTINCT t0.c37, -2075872103) WHEN (NOT (v0.c0)) THEN t0.c25 COLLATE BINARY END FROM t0, v0; -- 0ms;
SELECT ALL MAX(AVG(t0.c25) COLLATE BINARY) FROM t0;SELECT ((((((v0.c0) NOT BETWEEN (t0.c25) AND (v0.c0)))AND((((t0.c37)) BETWEEN ((t0.c37)) AND ((t0.c37))))))AND(t0.c25 COLLATE BINARY)) FROM v0, t0 WHERE (QUOTE((((('482795733')OR(NULL)))AND(x'')))); -- 0ms;
SELECT ALL ((((((v0.c0) ISNULL))OR(((t0.c37)GLOB(v0.c0)))))AND(v0.c0)), ((x'')>(ABS(NULL))), ((t0.c25)==(CAST(v0.c0 AS NUMERIC))) FROM t0, v0 WHERE ((((0.04093146259082481 IN ())) IS FALSE)); -- 0ms;
SELECT DISTINCT (((t0.c37)<=(v0.c0)) IN ()), ((((((t0.c25) IS TRUE))OR(SQLITE_COMPILEOPTION_GET(v0.c0))))AND(t0.c37)), CASE WHEN (((t0.c37))>=((t0.c37))) THEN ((t0.c25) NOT BETWEEN (v0.c0) AND (v0.c0)) ELSE ((((t0.c25)OR(t0.c25)))OR(v0.c0)) END, ((((((v0.c0)AND(x'b05a')))AND(t0.c37)))<=((((v0.c0, v0.c0, '-1282716779')) BETWEEN ((t0.c37, '-1318321059', t0.c37)) AND ((t0.c37, t0.c25, t0.c25))))), v0.c0 FROM v0 WHERE (((((x'8503') BETWEEN (NULL) AND (0.754897395371069)))%((((NULL))<>(('8|n)h5aL'))))));SELECT ALL ((t0.c25) NOT NULL), v0.c0 COLLATE BINARY, (NOT ((t0.c37 IN (v0.c0)))) FROM v0, t0 WHERE (((0.3853133646259862) IS FALSE) COLLATE RTRIM); -- 0ms;
SELECT DISTINCT v0.c0 FROM t0 NOT INDEXED, v0 WHERE ((((((x'd93f6279', '-1377147969', x'')) BETWEEN (('', 0.7155862897053936, 'FE()KJ')) AND ((0.8003120553230635, '1904689208', '')))) IS FALSE)); -- 0ms;
SELECT (((t0.c37)) BETWEEN ((CAST(t0.c37 AS INTEGER))) AND ((((((v0.c0)OR(t0.c25)))AND(v0.c0))))) FROM t0, v0 WHERE (((('' IN ()))/(CAST('-1047771231' AS REAL)))); -- 0ms;
SELECT DISTINCT CAST(NULL AS NUMERIC), ABS(DISTINCT ((v0.c0) IS TRUE)), ((((t0.c37) ISNULL))<>(GLOB(t0.c25, '*G'))) FROM v0 WHERE (((((((NULL))!=(('~22ꤔ*')))))<=((0.4372526717268118))));SELECT DISTINCT TRIM((((t0.c25)) NOT BETWEEN ((t0.c25)) AND ((t0.c37)))), ((((((t0.c25) ISNULL))AND(((v0.c0) NOT NULL))))OR((v0.c0 IN ()))), ABS(DISTINCT CAST(t0.c37 AS BLOB)) FROM v0, t0; -- 0ms;
SELECT DISTINCT GROUP_CONCAT(((v0.c0)/(t0.c25)) COLLATE BINARY) FILTER(WHERE ((((t0.c25) IS FALSE))==((NOT (t0.c37))))) OVER () FROM t0 WHERE (((((0X41d1bdf0)-('+᝖7-v'))) NOT BETWEEN (NULL) AND (((1.409960917E9)AND('/	')))));SELECT DISTINCT CAST(((v0.c0) IS FALSE) AS REAL) FROM v0, t0; -- 0ms;
SELECT NULLIF(SQLITE_SOURCE_ID(), ((t0.c37)&(t0.c37))), ((((((((((t0.c25)AND(t0.c37)))OR(t0.c25)))AND(t0.c25)))AND(v0.c0)))LIKE(CAST(t0.c25 AS NUMERIC))), (((((v0.c0)AND(t0.c37)))AND(0.18868120779109)) IN ()) FROM t0, v0 WHERE ((((((('X	\O')OR(x'')))AND(x'e740')))-(CAST(NULL AS REAL)))) GROUP BY CASE WHEN (v0.c0 IN ()) THEN (t0.c25 IN (v0.c0)) WHEN ((v0.c0)IS(v0.c0)) THEN 1030315267 WHEN (t0.c37 IN ()) THEN CASE WHEN NULL THEN v0.c0 WHEN v0.c0 THEN t0.c37 WHEN '-22532819' THEN x'' END END HAVING (((((t0.c37, -1948284025, t0.c25)) NOT BETWEEN ((t0.c25, t0.c37, v0.c0)) AND ((v0.c0, v0.c0, v0.c0)))) BETWEEN (((t0.c25) NOT BETWEEN (v0.c0) AND (t0.c37))) AND (((x'') NOTNULL))); -- 0ms;
SELECT DISTINCT ((((v0.c0 IN (t0.c37))))>=((v0.c0 COLLATE BINARY))) FROM t0, v0; -- 0ms;
SELECT (SQLITE_COMPILEOPTION_GET(v0.c0) IN ()), LAG(t0.c25, ((((((((CAST(t0.c37 AS NUMERIC))OR(((t0.c25)|(t0.c25)))))AND(t0.c25)))AND(t0.c25 COLLATE BINARY)))OR((NOT (t0.c37)))), t0.c37) OVER (), MIN(-1126513095) FROM v0, t0 WHERE ((((NULL)LIKE('1012927208')) IN ())); -- 0ms;
SELECT DISTINCT (t0.c37 COLLATE RTRIM IN (CASE WHEN NULL THEN v0.c0 ELSE v0.c0 END, (((t0.c25)) BETWEEN ((t0.c37)) AND ((v0.c0))))) FROM v0, t0; -- 0ms;
SELECT ALL LTRIM((+ (v0.c0))) FROM t0 WHERE (((((((NULL)AND(NULL)))AND(x''))) BETWEEN ((('1519191366') IS FALSE)) AND (((0.318062012260639)GLOB(x''))))) LIMIT 2039063723;SELECT DISTINCT ((((v0.c0)IS(v0.c0))) NOT BETWEEN (((t0.c25) NOT BETWEEN (t0.c37) AND (t0.c37))) AND (t0.c25)) FROM v0, t0 WHERE (CAST((('-294649091')==(NULL)) AS BLOB)); -- 0ms;
SELECT ALL COUNT(*) COLLATE NOCASE, (NOT (((v0.c0)LIKE(t0.c25)))), ((v0.c0 COLLATE NOCASE)OR(((v0.c0) IS FALSE))), x'', (((v0.c0)) NOT BETWEEN ((((((t0.c37)OR(t0.c25)))OR(t0.c37)))) AND ((TOTAL(t0.c37)))) FROM v0, t0 GROUP BY (- (((((t0.c37)OR(v0.c0)))OR(t0.c25)))); -- 0ms;
SELECT DISTINCT ((((t0.c37) NOT BETWEEN (t0.c25) AND (t0.c25)))GLOB(((((((((t0.c37)AND(t0.c37)))OR(v0.c0)))OR(t0.c25)))AND(t0.c37)))) FROM t0;SELECT ALL CASE ((((t0.c37)OR(NULL)))OR(v0.c0))  WHEN ((v0.c0) IS FALSE) THEN t0.c37 COLLATE RTRIM ELSE ((v0.c0) NOT BETWEEN (0.910110441091985) AND (t0.c37)) END FROM t0 WHERE (((((((((x'800c' COLLATE BINARY)AND(x'' COLLATE NOCASE)))AND(((-202439674)|(x'')))))AND(CAST(x'' AS INTEGER))))OR((('-817001899')<<('')))));SELECT DISTINCT AVG((t0.c37 IN ())) FROM v0, t0 WHERE ('斐V뀏	*6+9b'); -- 0ms;
SELECT DISTINCT TRIM(DISTINCT v0.c0, t0.c25) COLLATE RTRIM, CAST(((t0.c25)-(t0.c37)) AS NUMERIC), CAST('-285207710' AS TEXT) FROM v0, t0; -- 0ms;
SELECT DISTINCT CASE WHEN CASE WHEN v0.c0 THEN t0.c37 ELSE t0.c37 END THEN (- (t0.c25)) END FROM v0, t0 LIMIT -2098213085 OFFSET -9223372036854775808; -- 0ms;
SELECT ALL CAST(0x7712a441 AS BLOB), (((- (v0.c0)))|(highlight(v0.c0, t0.c37, t0.c37, t0.c25))), CASE t0.c25  WHEN v0.c0 COLLATE BINARY THEN (t0.c25 IN ()) WHEN CASE v0.c0  WHEN t0.c25 THEN t0.c25 ELSE t0.c37 END THEN ((((0.4372526717268118)OR(v0.c0)))AND(t0.c25)) WHEN (((v0.c0, t0.c37, t0.c25))>((t0.c37, v0.c0, t0.c25))) THEN ((((t0.c37)OR(t0.c37)))OR('2G\rǨ j')) ELSE ((v0.c0) NOT BETWEEN (t0.c25) AND (t0.c25)) END FROM t0 WHERE ((((NULL) NOT NULL) IN ()));SELECT (+ (NULL)) FROM t0, v0 WHERE (CASE WHEN ((x'')%(0.35760879176777527)) THEN ((((NULL)AND(0.1883749393900811)))OR(NULL)) WHEN 'FALSE' COLLATE RTRIM THEN ((NULL) NOT NULL) WHEN ((NULL) IS TRUE) THEN (- ('-1222110441')) ELSE ((0.0013665819147171687) NOT BETWEEN (1878100408) AND ('LK')) END); -- 1ms;
SELECT ((((t0.c25)>(t0.c37))) IS FALSE), t0.c37, LTRIM(((t0.c25)!=(t0.c37)), ((v0.c0) NOT NULL)) FROM v0, t0; -- 0ms;
SELECT DISTINCT ((0.2832299914099816) NOT BETWEEN ((- (v0.c0))) AND ((((((((('')OR(t0.c37)))AND(t0.c37)))AND('-353684806')))AND(t0.c25)))), ((AVG(v0.c0))&(((t0.c37)&(t0.c25)))), v0.c0, ((((v0.c0)IS(t0.c25)))>=((((v0.c0)) NOT BETWEEN ((t0.c37)) AND ((v0.c0))))), (((t0.c37)) BETWEEN ((t0.c25)) AND ((v0.c0))) COLLATE NOCASE FROM t0, v0 WHERE ((~ ((('1982567049') ISNULL)))); -- 0ms;
SELECT DISTINCT (((v0.c0)<<(v0.c0)) IN ()) FROM v0 WHERE ((~ (((NULL) BETWEEN (0.479637825600139) AND (NULL))))); -- 0ms;
SELECT DISTINCT LTRIM(((((v0.c0)AND(t0.c25)))OR(t0.c37))) FROM t0 WHERE (((((x'cb27') BETWEEN (x'') AND (0.9109851633504217))) BETWEEN ((NOT (0.5840202225321733))) AND ((('hm,*\')>>(NULL)))));SELECT ALL ((((t0.c25)>(v0.c0)))<>(DATETIME(x'', t0.c25, v0.c0, t0.c37, v0.c0))), (((t0.c25) BETWEEN (v0.c0) AND (t0.c37)) IN ()), CASE WHEN CAST(v0.c0 AS TEXT) THEN (- (t0.c37)) END FROM t0, v0; -- 0ms;
SELECT ((TOTAL(t0.c25))>>(((v0.c0)<=(t0.c37)))), CASE 0.586308341083761  WHEN ((t0.c25) BETWEEN (v0.c0) AND (0.08420500746367288)) THEN CAST(t0.c25 AS TEXT) ELSE ((x'') ISNULL) END, CASE ((t0.c37) NOTNULL)  WHEN -3.83900771E8 THEN ROUND(v0.c0, t0.c25) END FROM v0;SELECT ALL ABS((t0.c37 IN ())) FROM t0 WHERE ((NOT (json_object(NULL, NULL, '-726074352', x'')))) ORDER BY ((((((v0.c0)AND('1}+l!_')))AND(t0.c25))) BETWEEN (((t0.c37)/(t0.c25))) AND (((t0.c25) NOT NULL))) ASC  NULLS FIRST;