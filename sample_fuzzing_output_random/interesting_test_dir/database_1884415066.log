-- Time: 2024/06/06 02:35:56
-- Database: database66
-- Database version: 3.40.0
-- seed value: 1884415066
PRAGMA cache_size = 50000; -- 0ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA encoding = 'UTF-16le'; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts4(c0); -- 0ms;
CREATE VIRTUAL TABLE rt1 USING rtree_i32(c0, c1, c2); -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
UPDATE OR ABORT vt0 SET (c0)=('C⤵W{Lj>^') WHERE vt0.c0; -- 0ms;
DELETE FROM vt0 WHERE (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN (((+ (vt0.c0)), ((('-1132975819', x'', vt0.c0))=((vt0.c0, vt0.c0, vt0.c0))), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) AND ((vt0.c0, (vt0.c0 IN (vt0.c0)), (((vt0.c0)) NOT BETWEEN ((0.8151936602236162)) AND ((vt0.c0)))))); -- 1ms;
PRAGMA journal_mode = WAL; -- 1ms;
REINDEX BINARY; -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 5); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
DROP TABLE IF EXISTS rt1; -- 3ms;
VACUUM main; -- 0ms;
UPDATE OR IGNORE vt0 SET c0=0.08012026280224505, c0=x'', c0='' WHERE (NOT (((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))); -- 0ms;
ANALYZE; -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 1ms;
INSERT INTO vt0(vt0) VALUES('automerge=2'); -- 0ms;
INSERT OR REPLACE INTO vt0 VALUES (NULL); -- 0ms;
PRAGMA main.cell_size_check; -- 0ms;
ANALYZE sqlite_master; -- 1ms;
PRAGMA main.application_id = 5978803071790515658; -- 0ms;
UPDATE OR ABORT vt0 SET (c0)=(0Xffffffffecaca296); -- 0ms;
INSERT OR REPLACE INTO vt0 VALUES ('v!1#VpT'); -- 0ms;
INSERT OR ROLLBACK INTO vt0(c0) VALUES ('-1132975819'); -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES ('W'), (NULL), (-3.24230506E8); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 10); -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=-324230506,8');\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', -324230506);\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 997864469); -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=986460728,13');\n; -- 0ms;
PRAGMA wal_checkpoint(FULL); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 611404925); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', -1915171878);\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '64282'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
INSERT OR REPLACE INTO vt0(c0) VALUES (0.9849547976548443); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '64502'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', 986460728);\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 2058192851); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '3285'); -- 1ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', 836782306);\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 4); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 3); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1743506698); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 7); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
UPDATE OR IGNORE vt0 SET c0=x'', c0=8.36782306E8, c0=NULL WHERE CASE WHEN ((vt0.c0) NOT NULL) THEN (~ (vt0.c0)) END; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR IGNORE vt0 SET c0=0xffffffffd856d463, c0=x'9aee0918' WHERE (((CAST(vt0.c0 AS TEXT)))<=((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1577584035); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 1ms;
COMMIT TRANSACTION; -- 0ms;
REINDEX; -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
REINDEX; -- 0ms;
PRAGMA stats; -- 0ms;
UPDATE OR IGNORE vt0 SET c0=0.49313780213319003, c0=x''; -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES (x'76ee'); -- 1ms;
PRAGMA main.auto_vacuum = INCREMENTAL; -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
UPDATE vt0 SET (c0)=(0.14923764132674977) WHERE 8.36782306E8; -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=0'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 207813790); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
PRAGMA main.integrity_check; -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=0'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 10); -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '40470'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '29824'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 10); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
ANALYZE temp; -- 0ms;
UPDATE OR IGNORE vt0 SET (c0, c0)=('KH5ve', NULL); -- 0ms;
PRAGMA main.cache_size; -- 0ms;
UPDATE OR ROLLBACK vt0 SET (c0)=(NULL) WHERE ((vt0.c0)|(vt0.c0)) COLLATE RTRIM; -- 0ms;
PRAGMA busy_timeout = 10000; -- 0ms;
INSERT OR FAIL INTO vt0(c0) VALUES (0.08012026280224505); -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES (NULL); -- 0ms;
PRAGMA temp.soft_heap_limit; -- 0ms;
UPDATE OR IGNORE vt0 SET c0=x'd1bd', c0='-1915171878' WHERE (NOT (vt0.c0)); -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (x''), (0xffffffffbc782935), (0.3369155833780565); -- 0ms;
CREATE VIRTUAL TABLE vt1 USING fts4(c0, c1); -- 1ms;
INSERT INTO vt1(vt1, rank) VALUES('merge', -1915171878);\n; -- 0ms;
INSERT INTO vt1(vt1) VALUES('rebuild'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1413337047); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
REINDEX BINARY; -- 0ms;
INSERT OR IGNORE INTO vt1 VALUES (x'', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE -1.915171878E9; -- 0ms;
PRAGMA shrink_memory; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR ABORT INTO vt0(c0) VALUES (''); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 11); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1872111020); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=-1915171878,11');\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 377912538); -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=-285004827,3');\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 15); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '51619'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=10'); -- 0ms;
UPDATE vt0 SET c0='0.9849547976548443' WHERE (((- (vt0.c0))) NOTNULL); -- 1ms;
ANALYZE; -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES (''), (CASE ((((((((0x31e048e2)OR(x'')))AND(NULL)))OR(')䣢꣏m#y_Q')))AND(0xffffffffd856d463))  WHEN '986460728' THEN ((x'6394')OR(x'a321')) WHEN ((NULL)>>(NULL)) THEN (((NULL, NULL, -1.915171878E9)) BETWEEN ((NULL, 0x47f047d9, NULL)) AND ((-2.85004827E8, NULL, '0.8151936602236162'))) WHEN CASE WHEN '' THEN 896834989 END THEN TRIM(DISTINCT 0.024916087563926714, x'') WHEN (('tD富)')IS NOT('0.49313780213319003')) THEN ((x'') IS FALSE) WHEN (NOT (0.08012026280224505)) THEN '-476306274' ELSE UPPER(DISTINCT ' MSWg6_if') END), ('986460728'); -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree(c0, c1, c2, c3, c4, c5, c6); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-476306274'); -- 0ms;
PRAGMA main.threads = 2758592660365183731; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA legacy_file_format; -- 0ms;
ANALYZE; -- 1ms;
UPDATE OR REPLACE vt0 SET (c0)=(-926145742); -- 0ms;
PRAGMA main.wal_autocheckpoint = -110120337254659983; -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
ANALYZE sqlite_master; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 14); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 620452378); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', -926145742);\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1823464337); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', 814538414);\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1484001702); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 622514760); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '43518'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
REINDEX BINARY; -- 0ms;
ANALYZE sqlite_master; -- 0ms;
END; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT ((AVG(rt0.c4)) NOT BETWEEN (((rt0.c0)AND(rt0.c3))) AND (MIN(rt0.c0))), (+ (rt0.c3)) COLLATE BINARY, ((((rt0.c1)IS NOT(rt0.c5))) BETWEEN (vt0.c0) AND (CAST(rt0.c6 AS BLOB))), COALESCE(rt0.c0 COLLATE BINARY, (~ (rt0.c3))), '* 7' FROM rt0 WHERE (CASE ((x'08c8')*('+G'))  WHEN UPPER(DISTINCT -410206236) THEN CAST(0.845504173570312 AS INTEGER) WHEN ((((((((NULL)AND(NULL)))AND(0.1750073631712401)))OR('')))OR(1983005963)) THEN (x'0def' IN ()) WHEN (NULL IN ()) THEN (- (0.4817931120401274)) END);SELECT DISTINCT ((((((rt0.c5) NOT BETWEEN (rt0.c0) AND (rt0.c1)))OR(MAX(rt0.c4))))OR(CASE vt0.c0  WHEN rt0.c1 THEN rt0.c5 END)) FROM vt0;SELECT ((json_array_length(rt0.c1))LIKE((((rt0.c5)) BETWEEN ((rt0.c1)) AND ((vt0.c0))))) FROM vt0, rt0 WHERE (0.281779003916223); -- 0ms;
SELECT DISTINCT DENSE_RANK() OVER ( PARTITION BY CASE CASE WHEN rt0.c4 THEN rt0.c4 ELSE rt0.c1 END  WHEN CASE WHEN rt0.c6 THEN '5t*k' WHEN rt0.c2 THEN rt0.c6 WHEN rt0.c4 THEN vt0.c0 ELSE x'' END THEN CASE WHEN vt0.c0 THEN rt0.c4 WHEN -2.85004827E8 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c1 ELSE rt0.c3 END END, ((((rt0.c4)OR(((rt0.c2)=(rt0.c6)))))AND(LTRIM(vt0.c0))) ORDER BY rt0.c1) FROM vt0, rt0; -- 0ms;
SELECT DISTINCT SUM((0.29266317437135514 IN ('2029357142'))) FROM rt0; -- 0ms;
SELECT DISTINCT (+ (CASE WHEN rt0.c0 THEN rt0.c5 END)) FROM rt0 WHERE (((((((((NULL)OR(x'')))OR(NULL)))OR('-1915171878')))AND(0Xffffffffef032be5)) COLLATE RTRIM); -- 1ms;
SELECT DISTINCT ((((vt0.c0) IS FALSE))*((((rt0.c4)) BETWEEN ((rt0.c4)) AND ((rt0.c0))))), '-926145742', COUNT(((rt0.c3) NOT BETWEEN (rt0.c0) AND (vt0.c0))) OVER () FROM vt0;SELECT (~ (rt0.c6)), '-926145742', CAST(CASE vt0.c0  WHEN 0Xfffffffff5c070bc THEN vt0.c0 END AS REAL), SUM(CASE WHEN NULL THEN rt0.c4 WHEN rt0.c6 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 END), ((((rt0.c0) NOTNULL))>((+ (rt0.c2)))) FROM rt0, vt0; -- 0ms;
SELECT DISTINCT AVG(((rt0.c5) NOT NULL)) OVER () FROM vt0;SELECT -3.24230506E8 FROM vt0, rt0 WHERE (((((((((x'c994')AND(NULL)))OR(NULL)))OR(0.504398372929191)))OR(0xfffffffffe91f046)) COLLATE BINARY); -- 0ms;
SELECT SUM(LIKELY(vt0.c0)), AVG(((rt0.c5)IS NOT(rt0.c0))), ((UPPER(rt0.c6)) IS FALSE) FROM rt0 WHERE (json_valid('-1935522288'));SELECT ((0xffffffff8dd8cbda) ISNULL) COLLATE NOCASE FROM vt0 WHERE (((CASE WHEN NULL THEN 'm(b*f4' ELSE '-2046635899' END)/(CAST('1206929369' AS NUMERIC)))); -- 0ms;
SELECT DISTINCT ((~ (rt0.c0)) IN ()), NTILE(CASE WHEN CAST('2029357142' AS REAL) THEN (rt0.c5 IN ('')) END) OVER (), (+ (CASE rt0.c1  WHEN vt0.c0 THEN 0.22569144688714926 ELSE vt0.c0 END)) FROM vt0, rt0 WHERE ((- (CAST(x'' AS TEXT)))) LIMIT 1983005963; -- 0ms;
SELECT DISTINCT x'', MAX((((x''))>((rt0.c3))), ((rt0.c3)IS NOT(rt0.c4))), GROUP_CONCAT(x'') OVER ( ORDER BY LOWER(((rt0.c1)<<(rt0.c6))) DESC) FROM vt0, rt0; -- 0ms;
SELECT CASE WHEN ((rt0.c5) BETWEEN (rt0.c2) AND (vt0.c0)) THEN MAX(rt0.c3) WHEN ((vt0.c0) BETWEEN (0.3924677745185907) AND (rt0.c4)) THEN (rt0.c6 IN (rt0.c1)) WHEN rt0.c5 THEN vt0.c0 ELSE rt0.c6 END FROM vt0 WHERE ((((NULL)) NOT BETWEEN (((~ (x'e02f')))) AND (((- (0.21074783678525544))))));SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (CASE (((('-171937604')OR(x'e76e')))OR(x''))  WHEN (('')&(0.1750073631712401)) THEN '0.3369155833780565' END); -- 0ms;
SELECT ALL CAST(rt0.c1 AS TEXT) FROM vt0 ORDER BY (- (((rt0.c0)AND(rt0.c4)))) ASC, rt0.c0 DESC  NULLS FIRST LIMIT -926145742 OFFSET -476306274;SELECT DISTINCT ((((rt0.c4) NOT BETWEEN (rt0.c5) AND (rt0.c5)))&(((rt0.c4)>>(rt0.c1)))) FROM vt0 WHERE ((((((('!푣') BETWEEN (NULL) AND (0.02076444067687777)))OR(JULIANDAY(x'', x'', x''))))AND((~ (1983005963))))) LIMIT -2046635899;SELECT DISTINCT NULL FROM vt0, rt0 WHERE (((((x'3e6a')OR(x'')))AND(x'6c51')) COLLATE RTRIM) GROUP BY ((((rt0.c3))>=((vt0.c0))) IN ()), CAST(((rt0.c1) ISNULL) AS REAL), (rt0.c2 IN ()); -- 0ms;
SELECT (((((- (rt0.c4)))AND(((rt0.c5) NOT NULL))))AND(((((((((rt0.c6)AND(1.206929369E9)))OR(rt0.c4)))OR(rt0.c5)))AND(rt0.c0)))) FROM rt0, vt0 WHERE (((((NULL)<('782445621'))) BETWEEN (CASE WHEN x'' THEN x'' END) AND ((0.2870886811220045 IN ())))); -- 0ms;
SELECT ALL ((((((rt0.c2)AND(rt0.c0)))AND(rt0.c1))) BETWEEN (CASE rt0.c3  WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c0 WHEN NULL THEN rt0.c4 WHEN vt0.c0 THEN rt0.c4 END) AND (vt0.c0 COLLATE NOCASE)), ((((((((((((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c6 WHEN rt0.c6 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c4 END)OR(((rt0.c5) BETWEEN (rt0.c4) AND (rt0.c4)))))AND('* 7')))AND(((rt0.c3) IS FALSE))))AND((- (rt0.c5)))))OR(((rt0.c6) BETWEEN (rt0.c1) AND (rt0.c1)))))AND((((rt0.c5)) BETWEEN ((rt0.c5)) AND ((rt0.c2))))), (((rt0.c4 IN (vt0.c0))) NOT NULL) FROM rt0, vt0; -- 0ms;
SELECT ALL ((- (rt0.c4)) IN (TYPEOF(DISTINCT rt0.c0))), (((((rt0.c3)) BETWEEN ((rt0.c6)) AND ((rt0.c5)))) NOTNULL), (((x'' IN ())) BETWEEN (rt0.c3 COLLATE BINARY) AND (((((rt0.c6)AND(rt0.c0)))AND(rt0.c5)))) FROM vt0, rt0 WHERE (((((((0.2870886811220045)OR(NULL)))AND(0.4817931120401274)))|(HEX(-1196996724)))) ORDER BY ((((((rt0.c3)&(rt0.c5)))AND(((rt0.c6)&(rt0.c6)))))AND((rt0.c0 IN ())))  NULLS LAST, ((((rt0.c1, rt0.c2, vt0.c0, rt0.c5, rt0.c4))>=((rt0.c0, ')䣢꣏m#y_q', rt0.c2, vt0.c0, rt0.c3))) IN ()) DESC;SELECT LEAD(CAST(UNLIKELY(0.536289712634298) AS INTEGER), (((('1128260127')AND(vt0.c0)))OR((((vt0.c0))<((NULL))))), ((vt0.c0 COLLATE RTRIM) IS TRUE)) OVER () FROM vt0 WHERE (((((('X2nowX⌲', 0.2726564800094551, NULL))<=((x'', '-1115011746', ' MSWg6_if')))) IS TRUE)); -- 0ms;
SELECT DISTINCT ((CAST(x'4a646511' AS INTEGER)) NOT BETWEEN ((rt0.c6 IN ())) AND (CAST(rt0.c0 AS BLOB))) FROM rt0, vt0 LIMIT -596275041 OFFSET -1115011746; -- 0ms;
SELECT ALL ((HEX(DISTINCT rt0.c1))<((x'eeec' IN ()))) FROM rt0; -- 0ms;
SELECT DISTINCT x'a54b' FROM rt0, vt0 WHERE ((((((((((NOT (0.3859265724824317)))OR(((((118017784)OR('Y')))AND('[]')))))OR(CAST(NULL AS REAL))))AND((('-2046635899')LIKE(0.3859265724824317)))))OR(((546116832)+('h'))))); -- 0ms;
SELECT DISTINCT ((rt0.c0) NOT NULL) COLLATE BINARY, (((CAST(rt0.c1 AS NUMERIC)))<=(((~ (0.27028144396017095))))), CHAR(vt0.c0 COLLATE NOCASE) FROM vt0 ORDER BY CAST((((vt0.c0))==((rt0.c0))) AS BLOB) DESC;SELECT DISTINCT ((GLOB(rt0.c5, rt0.c6))-(json_array(rt0.c4, rt0.c1))) FROM rt0 GROUP BY (~ (((x'f2a2')||(rt0.c4)))) HAVING CASE ((rt0.c1)<<(rt0.c6))  WHEN (~ (rt0.c5)) THEN ((((((((rt0.c4)AND(rt0.c0)))OR(vt0.c0)))AND(rt0.c0)))OR(vt0.c0)) END;SELECT DISTINCT ((((rt0.c2)>=(rt0.c0)))GLOB(CASE WHEN NULL THEN rt0.c1 ELSE rt0.c3 END)) FROM rt0, vt0 ORDER BY CASE WHEN CASE vt0.c0  WHEN rt0.c5 THEN vt0.c0 WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c0 END THEN rt0.c1 COLLATE BINARY WHEN ((rt0.c1)*(rt0.c5)) THEN (rt0.c5 IN ()) WHEN vt0.c0 THEN ((rt0.c1)LIKE(rt0.c6)) ELSE CASE rt0.c6  WHEN rt0.c3 THEN vt0.c0 ELSE rt0.c5 END END ASC  NULLS FIRST; -- 0ms;
SELECT vt0.c0, rt0.c2, (+ (CASE rt0.c1  WHEN rt0.c5 THEN rt0.c3 ELSE rt0.c4 END)) FROM rt0 WHERE (('nd' COLLATE RTRIM IN ()));SELECT DISTINCT '0bc' FROM vt0, rt0 WHERE ((((((('-1844823760') NOT NULL))AND(((x'') BETWEEN ('') AND (NULL)))))AND('-290173193' COLLATE BINARY))); -- 0ms;
SELECT DISTINCT SUM(CAST(rt0.c5 AS REAL)) FROM vt0, rt0 LIMIT 1206929369 OFFSET 541621744; -- 0ms;
SELECT DISTINCT PRINTF(((NULL) NOTNULL)), CASE WHEN ((rt0.c5)LIKE(vt0.c0)) THEN rt0.c6 COLLATE BINARY ELSE CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c4 THEN rt0.c4 WHEN 0x308cdeae THEN rt0.c3 WHEN rt0.c0 THEN rt0.c6 WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c5 THEN rt0.c1 END END, (((rt0.c3)) NOT BETWEEN ((((rt0.c6) NOTNULL))) AND (((rt0.c2 IN ())))), NULL, 0.4817931120401274 FROM vt0, rt0; -- 0ms;
SELECT ALL ((((((rt0.c5)AND(rt0.c0)))OR(rt0.c2)))IS NOT(x'')) FROM vt0, rt0 GROUP BY ((rt0.c3)=(rt0.c0)) COLLATE BINARY HAVING ((((rt0.c4) IS FALSE))OR(NULLIF(vt0.c0, rt0.c2))); -- 0ms;
SELECT DISTINCT (((rt0.c3)>=(vt0.c0)) IN ()) FROM rt0, vt0; -- 0ms;
SELECT 0.8724938238180996 FROM rt0, vt0 ORDER BY SQLITE_VERSION() COLLATE BINARY ASC, ((((((((rt0.c6)OR(((vt0.c0) NOTNULL))))AND(((NULL)!=(rt0.c6)))))AND(((rt0.c2) NOT BETWEEN (x'3788') AND (5.46116832E8)))))AND(((((0Xfffffffffe91f046)AND(vt0.c0)))OR(NULL)))), (((TRIM(DISTINCT rt0.c6)))>((CAST('592176921' AS INTEGER))))  NULLS LAST; -- 0ms;
SELECT ALL TOTAL_CHANGES() FROM vt0; -- 0ms;
SELECT ALL (CASE WHEN rt0.c0 THEN vt0.c0 ELSE rt0.c1 END IN ()) FROM vt0; -- 0ms;
SELECT ALL CASE rt0.c0  WHEN vt0.c0 THEN rt0.c5 WHEN rt0.c4 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c5 ELSE vt0.c0 END COLLATE NOCASE, NULL, LAG(((((rt0.c6 COLLATE BINARY)AND(rt0.c1 COLLATE NOCASE)))AND(LIKELY(DISTINCT rt0.c1))), rt0.c6, rt0.c1) OVER ( ORDER BY (((((rt0.c3) BETWEEN (rt0.c3) AND (rt0.c2))))==(((+ (rt0.c5)))))  NULLS LAST) FROM rt0, vt0 WHERE ((NOT (CASE x'f40a3357'  WHEN 0.3369155833780565 THEN NULL ELSE x'' END))); -- 0ms;
SELECT (((+ (rt0.c5))) NOT BETWEEN (RTRIM(rt0.c4)) AND (CAST(rt0.c6 AS INTEGER))) FROM vt0;SELECT DISTINCT json_remove(vt0.c0, vt0.c0) COLLATE BINARY FROM rt0, vt0; -- 0ms;
SELECT DISTINCT ((CAST(rt0.c1 AS REAL)) BETWEEN (((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c6))) AND (vt0.c0 COLLATE BINARY)) FROM rt0;SELECT json_remove(((rt0.c6) BETWEEN (rt0.c3) AND (rt0.c1)), CAST(rt0.c4 AS BLOB)), CASE WHEN rt0.c2 COLLATE BINARY THEN ((rt0.c6)<<(0.14923764132674977)) WHEN SUM(rt0.c6) THEN ((rt0.c4)GLOB(rt0.c6)) WHEN (rt0.c1 IN (rt0.c6)) THEN ((rt0.c1) IS FALSE) END, GROUP_CONCAT(((rt0.c6)%(rt0.c1))) FROM rt0, vt0 WHERE (CAST('1525857278' COLLATE RTRIM AS TEXT)); -- 0ms;
SELECT DISTINCT (((rt0.c2) NOT BETWEEN (rt0.c5) AND (rt0.c5)) IN ((((rt0.c2))<=((rt0.c4))), CASE rt0.c0  WHEN rt0.c3 THEN rt0.c2 ELSE vt0.c0 END)), COUNT((rt0.c4 IN (rt0.c1))), ((rt0.c6 COLLATE NOCASE) BETWEEN (CASE WHEN rt0.c2 THEN vt0.c0 END) AND (CAST(rt0.c3 AS REAL))) FROM vt0, rt0; -- 0ms;
SELECT DISTINCT COUNT(*) OVER () FROM rt0 ORDER BY LTRIM('1211272186', CASE WHEN rt0.c0 THEN vt0.c0 END) DESC  NULLS FIRST;SELECT DISTINCT COUNT(*) FROM rt0 WHERE (x''); -- 0ms;
SELECT DISTINCT CUME_DIST() OVER (), ((((rt0.c2) NOT BETWEEN (rt0.c4) AND (rt0.c4))) IS FALSE), rt0.c0 FROM vt0, rt0 WHERE (CAST(x'' AS INTEGER)); -- 1ms;
SELECT ALL CASE SUM(rt0.c1)  WHEN (NOT (x'e4c9')) THEN (rt0.c0 IN ()) ELSE (+ (rt0.c5)) END, ((vt0.c0) BETWEEN (CASE WHEN rt0.c6 THEN 0.11691484000900887 WHEN rt0.c3 THEN 0.08446165962346486 WHEN vt0.c0 THEN rt0.c4 END) AND ((((rt0.c2))=((rt0.c3))))), CASE WHEN rt0.c4 COLLATE BINARY THEN CASE WHEN rt0.c5 THEN vt0.c0 ELSE -836180937 END END FROM rt0, vt0 WHERE (((1373887246)>(0.7707168716338122)) COLLATE NOCASE); -- 0ms;
SELECT ALL COUNT(*) OVER () FROM vt0; -- 0ms;
SELECT DISTINCT CAST(vt0.c0 AS BLOB) COLLATE RTRIM FROM vt0, rt0 WHERE (((CASE 0.8843656011841555  WHEN x'' THEN '1XTp' ELSE x'9e8a' END) NOT BETWEEN (CASE 0Xffffffffb8a7478c  WHEN '1282172197' THEN 'Y' WHEN 0.5845655389391636 THEN x'' WHEN 0.09280844298884972 THEN '' WHEN 'Kn' THEN x'48e9' WHEN x'df2d' THEN 0.8151936602236162 END) AND (((x'') NOT BETWEEN (1887995343) AND (0X1c7aa679))))) GROUP BY ((((rt0.c5)GLOB(rt0.c2))) IS FALSE); -- 0ms;
SELECT (('-280364157') NOT BETWEEN (rt0.c0) AND (rt0.c0)) COLLATE NOCASE, CAST(((vt0.c0)%(rt0.c4)) AS REAL), (CASE rt0.c1  WHEN 0.5886003158899662 THEN NULL WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c6 THEN vt0.c0 END IN ()) FROM rt0, vt0 WHERE ((((('') NOT BETWEEN ('') AND (NULL)))||('0.11691484000900887' COLLATE NOCASE))); -- 0ms;
SELECT DISTINCT ((((rt0.c2 IN ())))<=((COUNT(vt0.c0)))), ((rt0.c3) BETWEEN (load_extension(rt0.c2, x'67fa')) AND ((rt0.c0 IN ()))), ((CAST(rt0.c5 AS INTEGER)) NOT NULL) FROM rt0 GROUP BY CAST(rt0.c6 AS TEXT) COLLATE NOCASE HAVING rt0.c3;SELECT ALL (rt0.c1 IN ()) FROM rt0; -- 0ms;
SELECT DISTINCT CASE rt0.c3  WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c5 THEN rt0.c6 WHEN rt0.c5 THEN rt0.c0 ELSE rt0.c0 END COLLATE BINARY, CASE CASE x''  WHEN rt0.c6 THEN rt0.c4 WHEN rt0.c2 THEN rt0.c2 WHEN vt0.c0 THEN rt0.c2 ELSE rt0.c5 END  WHEN rt0.c2 COLLATE NOCASE THEN CAST(rt0.c3 AS INTEGER) WHEN TOTAL('1981486932') THEN CASE WHEN rt0.c1 THEN rt0.c0 END WHEN (~ (rt0.c2)) THEN CASE vt0.c0  WHEN rt0.c4 THEN rt0.c1 WHEN rt0.c4 THEN rt0.c6 WHEN rt0.c2 THEN rt0.c2 END WHEN '' THEN TOTAL(rt0.c6) WHEN CASE WHEN vt0.c0 THEN rt0.c0 ELSE rt0.c2 END THEN NULL END, ((((rt0.c6) NOT NULL)) NOT BETWEEN (((rt0.c3)|(rt0.c6))) AND (((rt0.c2)>=(rt0.c3)))) FROM rt0 WHERE ((- (((((NULL)AND('0.024916087563926714')))AND(1278033701)))));SELECT rt0.c6 FROM vt0;SELECT DISTINCT (~ (rt0.c6 COLLATE RTRIM)) FROM rt0 WHERE ((((0.0)) NOT BETWEEN (((((('0.3924677745185907')AND('44735238')))AND(x'86c6f0a8')))) AND ((9.86460728E8 COLLATE BINARY)))) GROUP BY CAST(((rt0.c3)||(rt0.c0)) AS INTEGER), ((((LOWER(DISTINCT vt0.c0))AND(((0.9849547976548443)GLOB(rt0.c1)))))AND(((x'dfd0')||(rt0.c2)))), json_patch(((rt0.c2)LIKE(rt0.c1)), rt0.c3), (((- (rt0.c6)))-(0.8237292445945281)), (((rt0.c1 IN ())) NOT BETWEEN (((x'') NOT NULL)) AND (rt0.c0 COLLATE NOCASE)) HAVING CASE rt0.c0 COLLATE NOCASE  WHEN ((rt0.c2) NOT NULL) THEN ((rt0.c1)/(rt0.c6)) END;SELECT DISTINCT CASE WHEN (~ (rt0.c4)) THEN rt0.c2 COLLATE RTRIM ELSE CAST(rt0.c1 AS NUMERIC) END, ((NOT (rt0.c4)) IN ()), ((((((rt0.c1)OR(0.12852315855296237)))AND(rt0.c2)))<(((rt0.c1) IS FALSE))) FROM rt0, vt0 LIMIT -798169728; -- 0ms;
SELECT DISTINCT NULL FROM rt0 WHERE ((+ ((((NULL, NULL, x'')) BETWEEN ((NULL, 'Ӿ^qN\r', NULL)) AND ((-2.90173193E8, x'5126', '衝8')))))) ORDER BY (((((rt0.c1)) BETWEEN ((rt0.c0)) AND ((vt0.c0)))) BETWEEN (TRIM(rt0.c6, rt0.c0)) AND ((((rt0.c3))=((rt0.c4))))) LIMIT 1741970380;SELECT DISTINCT CAST(((rt0.c4)>(rt0.c4)) AS TEXT) FROM rt0 WHERE ((- (x'' COLLATE BINARY))) LIMIT -2030775627; -- 0ms;
SELECT DISTINCT ((((rt0.c4)GLOB(rt0.c0)))*(CASE WHEN rt0.c6 THEN rt0.c1 ELSE rt0.c3 END)) FROM rt0; -- 0ms;
SELECT DISTINCT TOTAL((vt0.c0 IN ())) COLLATE RTRIM FROM rt0; -- 0ms;
SELECT ALL ((x'')IS(CAST(rt0.c0 AS REAL))) FROM rt0 WHERE ((((0X1944da15 IN (NULL))) NOT NULL)) GROUP BY ((rt0.c2) IS TRUE); -- 0ms;
SELECT ALL ((rt0.c2 IN (rt0.c4)) IN ((- (rt0.c3)), ((((((((0.9959844549574747)AND(vt0.c0)))OR(rt0.c1)))AND(rt0.c4)))AND(rt0.c1)))), ((((rt0.c1) BETWEEN (rt0.c5) AND (rt0.c3)))>>(((rt0.c0)LIKE(rt0.c2)))), ((((AVG(rt0.c3))AND((rt0.c3 IN (vt0.c0)))))OR(COUNT(rt0.c4))) FROM rt0, vt0; -- 0ms;
SELECT ALL TYPEOF(rt0.c5) FROM vt0 WHERE (CAST(json_object(0.9394647784673863, x'') AS NUMERIC));SELECT DISTINCT ((((((rt0.c4)OR(rt0.c2)))AND(rt0.c5))) NOT BETWEEN (((((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(rt0.c1)))AND('hLdF컸QM\r')))OR(rt0.c6))) AND ((NULL IN ()))) FROM rt0, vt0 WHERE (((((((x'')OR('yY''s')))OR('-1180231199')))<=((((x'', '-208416724', 0.6572929617065828)) NOT BETWEEN ((0.7707168716338122, -1.7976931348623157E308, '')) AND ((x'', NULL, '')))))); -- 0ms;
SELECT DISTINCT x'59edd76d' FROM vt0; -- 0ms;
SELECT DISTINCT rt0.c3, (((rt0.c1)) NOT BETWEEN ((x'')) AND (('1983005963'))), (((rt0.c3 IN ()))==(((rt0.c4)<(rt0.c6)))) FROM vt0, rt0 WHERE (((((((((((((((x'') BETWEEN (NULL) AND (0.7108770988160631)))OR((('')<(x'a91f')))))OR(((x'16b2') NOT BETWEEN (0x6ce578a7) AND (',w')))))OR(NULL)))OR((((1.238534237E9))=(('d'))))))OR(((NULL) BETWEEN (x'3852f3dd4788') AND (NULL)))))AND((((NULL, '-324230506', 0.4817931120401274)) BETWEEN ((0.7818051981629911, NULL, NULL)) AND ((0.9200066540776779, x'fcea', x'')))))); -- 0ms;
SELECT ALL SUM(((((((((rt0.c2)AND(rt0.c2)))AND(rt0.c5)))OR(vt0.c0)))AND(rt0.c0))) OVER ( ORDER BY (((rt0.c5 IN (rt0.c2))) NOT NULL) DESC), ((LOWER(DISTINCT rt0.c2))<=(CAST(rt0.c2 AS TEXT))), ((((((((((rt0.c3)!=(rt0.c4)))OR(rt0.c1 COLLATE RTRIM)))AND(rt0.c2)))AND((rt0.c3 IN ()))))AND(CAST(-2021460733 AS BLOB))) FROM vt0, rt0 ORDER BY ((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c3 END)<((NOT (vt0.c0)))) DESC  NULLS LAST; -- 0ms;
SELECT ALL NULL, ((rt0.c3) NOT NULL), rt0.c0 FROM rt0 WHERE (CASE ((0.7185358046196128)LIKE(NULL))  WHEN ((('0.2870886811220045', x'', '-1e500'))<>((x'', '|8', NULL))) THEN CASE WHEN x'' THEN 0.04784136212963175 END WHEN ((0x692b4bb2) NOT BETWEEN ('') AND (x'c656')) THEN (('50579447') IS TRUE) WHEN ((0Xffffffff855ad9d3)IS(0.8070516812992773)) THEN ((0.5011585225857952)||(0X395c2d04)) WHEN -1668524993 THEN ((0Xffffffffb64c7c52)+('1211272186')) WHEN ((((NULL)AND(-2138155090)))OR('tg*Gk_\')) THEN (('-1196996724') NOTNULL) ELSE ((x'e736')>(0.4748823895352764)) END); -- 0ms;
SELECT (((rt0.c6 IN ()))*(((rt0.c4)IS NOT(rt0.c2)))) FROM rt0, vt0; -- 0ms;
SELECT DISTINCT CAST(((rt0.c3)>>(rt0.c0)) AS NUMERIC) FROM rt0; -- 1ms;
SELECT DISTINCT MIN(((vt0.c0) ISNULL)) FROM vt0, rt0 WHERE (CAST((((''))<((NULL))) AS TEXT)); -- 0ms;
SELECT (vt0.c0 COLLATE BINARY IN ((((''))==((rt0.c3))))), (~ (((((rt0.c6)AND(vt0.c0)))AND(rt0.c1)))), NULL FROM rt0 WHERE (((CASE NULL  WHEN NULL THEN x'' ELSE '[]' END)*(((((((((0xffffffff8f1dd2bc)OR(x'03d8')))OR(x'98f337d5')))OR(x'')))OR(0X20487df0)))));SELECT ((rt0.c1)IS(CASE rt0.c6  WHEN rt0.c6 THEN vt0.c0 ELSE rt0.c5 END)) FROM vt0, rt0; -- 0ms;
SELECT DISTINCT (((((rt0.c2, rt0.c4, rt0.c5, vt0.c0, NULL)) NOT BETWEEN ((rt0.c6, rt0.c2, rt0.c2, rt0.c5, vt0.c0)) AND ((rt0.c6, rt0.c4, rt0.c3, rt0.c2, vt0.c0)))) NOT BETWEEN ((rt0.c0 IN ())) AND (0.0)), ((((rt0.c6)+(rt0.c5))) ISNULL), (((((rt0.c3)-(rt0.c0))))<=((NULL))) FROM rt0, vt0 WHERE (NULLIF(DISTINCT (((x''))<((1.887995343E9))), (('dD')-(0.2870886811220045)))); -- 0ms;
SELECT (+ (((rt0.c1) IS FALSE))), (((rt0.c4) IS FALSE) IN ()), ((rt0.c4)IS(((rt0.c4) IS TRUE))) FROM vt0, rt0; -- 0ms;
SELECT DISTINCT AVG(COALESCE(DISTINCT '-577019356', rt0.c3, rt0.c6, rt0.c6)) FROM vt0, rt0 WHERE (((CAST(0.764820490801235 AS BLOB)) NOTNULL)) LIMIT -208416724; -- 0ms;
SELECT ((rt0.c6) NOT BETWEEN ((rt0.c0 IN (vt0.c0))) AND (((((rt0.c5)OR('-1196996724')))AND(vt0.c0)))), (((('*]Qc&5u쓜z')OR(((((vt0.c0)OR(vt0.c0)))AND(x'')))))OR((~ (vt0.c0)))), (((- (rt0.c5))) NOT NULL) FROM rt0;SELECT DISTINCT ((((((((((592176921)OR(rt0.c0)))AND('735344138')))OR(rt0.c1)))AND(rt0.c2))) NOT BETWEEN ((vt0.c0 IN ())) AND ((rt0.c0 IN ()))), ((((rt0.c1)|(rt0.c1))) NOTNULL), rt0.c2 FROM vt0 WHERE ((((('C⤵W{Lj>^')LIKE('')))+((((0.1933240791951668))>(('0.281779003916223'))))));SELECT ALL 0xffffffffdd9b6224 FROM rt0, vt0; -- 0ms;
SELECT ALL (- (SUM(0.2960299109506226))), NULLIF(MIN(vt0.c0, vt0.c0), NULL), rt0.c3 FROM vt0, rt0; -- 0ms;
SELECT DISTINCT CAST(((vt0.c0)AND(rt0.c5)) AS BLOB), x'', ((((rt0.c4)<=(rt0.c6))) IS FALSE) FROM vt0 WHERE (TOTAL_CHANGES()) GROUP BY '-2021460733' HAVING ((((((((rt0.c1)AND(((((rt0.c6)AND(rt0.c2)))AND(rt0.c2)))))OR(((rt0.c6) IS FALSE))))AND(((((x'0bd8')OR(rt0.c6)))AND(rt0.c0)))))OR(((rt0.c1) BETWEEN (vt0.c0) AND (rt0.c4))));SELECT ALL (+ (LIKE(rt0.c1, rt0.c0))), (((rt0.c4 IN ())) IS TRUE), ((rt0.c5)-(((rt0.c1) NOT BETWEEN (vt0.c0) AND (rt0.c0)))) FROM rt0;SELECT rt0.c3 FROM rt0 WHERE (((('1238534237')) NOT BETWEEN (((- (-4.10206236E8)))) AND (((0.6814734347747096 IN ()))))); -- 0ms;
SELECT DISTINCT rt0.c3 FROM rt0, vt0; -- 0ms;
SELECT rt0.c5 FROM vt0;SELECT (NOT (5.92176921E8)), (('-781985276') IS TRUE), ((rt0.c6 COLLATE BINARY) IS TRUE) FROM rt0; -- 0ms;
SELECT SUM(CAST(rt0.c2 AS INTEGER)) OVER ( PARTITION BY ((rt0.c1) BETWEEN ((- (rt0.c6))) AND (0.2515630593549797)), CASE IFNULL(DISTINCT rt0.c1, rt0.c4)  WHEN (((rt0.c0, rt0.c2, rt0.c0))>(('', rt0.c0, 0.5094605356418114))) THEN ((rt0.c0) NOTNULL) END) FROM rt0 LIMIT -1439596866; -- 1ms;
SELECT DISTINCT ((AVG(rt0.c6)) BETWEEN (CAST(NULL AS REAL)) AND ((~ (rt0.c4)))) FROM rt0, vt0 WHERE (CASE 'w' COLLATE NOCASE  WHEN CAST(NULL AS REAL) THEN ('-330381648' IN (NULL)) END); -- 0ms;
SELECT DISTINCT vt0.c0, ((MAX(rt0.c2))||((rt0.c4 IN ()))), ((((rt0.c0)AND(CASE rt0.c2  WHEN rt0.c6 THEN rt0.c3 END)))OR(rt0.c0 COLLATE BINARY)) FROM rt0, vt0; -- 0ms;
SELECT DISTINCT ((MAX(vt0.c0)) NOTNULL), TOTAL(CASE WHEN rt0.c4 THEN rt0.c1 WHEN x'' THEN rt0.c3 WHEN rt0.c2 THEN rt0.c0 END COLLATE RTRIM) OVER (), ((((vt0.c0) BETWEEN (rt0.c4) AND (rt0.c2)))|(rt0.c4 COLLATE BINARY)) FROM vt0 NOT INDEXED WHERE ((((('' IN ()), 'J瘊]#' COLLATE BINARY, CAST('' AS NUMERIC)))>((CASE x''  WHEN '' THEN x'' WHEN '1525857278' THEN NULL WHEN NULL THEN NULL END, highlight('-1668524993', 0.04538778652019215, '-330381648', x'ba14'), (x'' IN ())))));SELECT ALL (SUM(rt0.c4) IN ()), COUNT((((0Xffffffffffffffff))==((rt0.c5))) COLLATE RTRIM) OVER ( ORDER BY (((((rt0.c5 IN ()))OR('pN' COLLATE RTRIM)))AND((+ (rt0.c5)))) ASC  NULLS FIRST, rt0.c3 DESC  NULLS LAST), CASE (((rt0.c1, rt0.c4, rt0.c6)) NOT BETWEEN ((rt0.c6, rt0.c6, '')) AND ((rt0.c3, rt0.c3, rt0.c5)))  WHEN 0xffffffffe78cbfe4 THEN ((rt0.c6)||(rt0.c3)) END FROM rt0 WHERE (0.12907571125424933); -- 0ms;
SELECT DISTINCT (NOT ((+ (vt0.c0)))) FROM rt0, vt0 WHERE ((((('1525857278') NOT BETWEEN ('-1427604041') AND (x'8633')))IS(LAST_INSERT_ROWID()))); -- 0ms;
SELECT SUM(((rt0.c5)LIKE(rt0.c2))), (rt0.c2 IN (vt0.c0)) COLLATE RTRIM, (((('')OR((((rt0.c3, rt0.c2, rt0.c5)) BETWEEN ((rt0.c2, rt0.c6, rt0.c2)) AND ((rt0.c5, ' >8%', rt0.c5))))))OR(((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c6)))) FROM rt0, vt0 ORDER BY rt0.c0 COLLATE NOCASE ASC, (CAST(rt0.c1 AS BLOB) IN ()) ASC  NULLS FIRST, ((((vt0.c0) NOTNULL)) IS TRUE) DESC LIMIT -893496383; -- 0ms;
SELECT DISTINCT TYPEOF(SUM(rt0.c1)) FROM vt0, rt0 WHERE ((((((((0.8724938238180996))>=((0.08446165962346486))))OR(CASE WHEN NULL THEN x'' ELSE '1920688286' END)))OR(CAST(x'' AS BLOB)))); -- 0ms;
SELECT ALL LTRIM((((vt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c3))), ((0.024916087563926714)LIKE(rt0.c6))) FROM rt0 WHERE ('-330381648');SELECT DISTINCT CAST(((rt0.c2)IS NOT(rt0.c1)) AS INTEGER) FROM rt0, vt0; -- 0ms;
SELECT DISTINCT -101646379, UNLIKELY(((rt0.c1) NOTNULL)), ((rt0.c5) NOTNULL) FROM vt0, rt0 WHERE (LOWER(DISTINCT NULL COLLATE NOCASE)); -- 0ms;
SELECT ALL CASE MAX(rt0.c3)  WHEN vt0.c0 THEN CAST(rt0.c6 AS TEXT) ELSE (- (rt0.c5)) END, ((COUNT(rt0.c1)) BETWEEN ('-798953150') AND (((rt0.c0) IS FALSE))), ((CAST(rt0.c2 AS INTEGER))IS NOT(((rt0.c0)GLOB(vt0.c0)))) FROM vt0, rt0 WHERE (CAST(CAST(NULL AS BLOB) AS BLOB)); -- 0ms;
SELECT ALL (((0.9373242566107264, rt0.c6, (- (rt0.c6)), ((rt0.c5) NOT BETWEEN (rt0.c6) AND (rt0.c5)), ((rt0.c6) NOT BETWEEN (rt0.c6) AND (rt0.c2))))<((((rt0.c6)||(rt0.c3)), (((rt0.c0)) BETWEEN ((rt0.c0)) AND ((vt0.c0))), ((x'448d')==(rt0.c5)), ((rt0.c6)<(',*^\')), ((rt0.c5) NOTNULL)))), ((rt0.c5) NOTNULL) COLLATE BINARY, ((((vt0.c0)IS NOT(rt0.c5)))>(CASE WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c5 THEN rt0.c2 WHEN rt0.c6 THEN -1626979148 END)), (((rt0.c6)) BETWEEN ((((vt0.c0) NOT BETWEEN (rt0.c6) AND (rt0.c6)))) AND ((TOTAL(rt0.c6)))), COUNT(0.23367512053593698) FROM vt0, rt0; -- 0ms;
SELECT ALL MAX(CAST(rt0.c2 AS INTEGER)) FROM vt0;SELECT ALL ((((rt0.c6) IS TRUE)) NOT NULL) FROM rt0, vt0 WHERE (CASE WHEN CASE NULL  WHEN 0.3318622787288582 THEN NULL END THEN (('TRUE')<<('-1115011746')) END) ORDER BY CAST(((rt0.c3)IS NOT(rt0.c5)) AS INTEGER)  NULLS LAST; -- 0ms;
SELECT COUNT(*), CAST(CAST(rt0.c2 AS BLOB) AS NUMERIC), CASE WHEN CAST(rt0.c1 AS REAL) THEN json_quote(rt0.c1) WHEN ((rt0.c3)*(rt0.c6)) THEN rt0.c5 COLLATE NOCASE WHEN CAST('h' AS INTEGER) THEN (NOT (NULL)) ELSE ((rt0.c6)>(rt0.c1)) END FROM vt0, rt0; -- 0ms;
SELECT ALL (((rt0.c2 IN (rt0.c6, rt0.c6)))<>(CASE WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c4 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c1 END)) FROM rt0, vt0 WHERE (((((x'') ISNULL)) NOTNULL)); -- 0ms;
SELECT DISTINCT UPPER((+ (rt0.c1))) FROM vt0, rt0 WHERE ((((((((((x'9dff' IN ()))AND(CAST(-2.96483586E8 AS BLOB))))AND('~#' COLLATE NOCASE)))AND(CASE '⌲'  WHEN '1212516865' THEN NULL ELSE 0.769683284296515 END)))OR(((0.33619218400981654)IS(x'ddb5'))))); -- 0ms;
SELECT DISTINCT (((((rt0.c6))<>((rt0.c0)))) NOT NULL), LAST_VALUE((((rt0.c2 IN (vt0.c0))) NOT NULL)) OVER (), CASE WHEN AVG(rt0.c6) THEN CAST(rt0.c0 AS INTEGER) ELSE ((rt0.c6)GLOB(rt0.c3)) END FROM vt0, rt0; -- 0ms;
SELECT DISTINCT (((rt0.c0, rt0.c4, rt0.c6)) BETWEEN ((vt0.c0 COLLATE NOCASE, rt0.c2, ((rt0.c2)IS(rt0.c4)))) AND (('', LOWER(DISTINCT vt0.c0), ((rt0.c3)||(rt0.c6))))) FROM vt0, rt0 WHERE (CASE 0.2691177891580022 COLLATE NOCASE  WHEN CASE WHEN 9.62342148E8 THEN 0.33619218400981654 END THEN (NOT (0.31586368850992097)) END); -- 0ms;
SELECT DISTINCT ((((rt0.c5) NOT BETWEEN (rt0.c4) AND (rt0.c5))) BETWEEN (rt0.c5) AND (rt0.c6)) FROM vt0 CROSS JOIN rt0 ON (((rt0.c4 IN (NULL, rt0.c0))) NOT NULL) WHERE (CASE (('369328645')*('-1915171878'))  WHEN json_patch(0.07791988823013685, NULL) THEN (- ('')) WHEN (((2050790062)) BETWEEN ((NULL)) AND ((0.047055431067966835))) THEN (- (NULL)) WHEN (((0.550331595406412))>=((x''))) THEN CAST(0.550331595406412 AS TEXT) WHEN (x'' IN ()) THEN -206540784 COLLATE BINARY WHEN (((75339167))==((1.74197038E9))) THEN CASE WHEN 'o~댾' THEN '0.12852315855296237' ELSE '0.5011585225857952' END END) ORDER BY (((((vt0.c0 IN (rt0.c4)))AND(0xffffffffa5431964)))OR(CAST(rt0.c1 AS BLOB))) DESC  NULLS FIRST, CASE (((x''))>((rt0.c5)))  WHEN ((rt0.c5)=(rt0.c0)) THEN ((vt0.c0)&(rt0.c2)) END  NULLS FIRST; -- 0ms;
SELECT ((((((-8.36180937E8) NOT BETWEEN (rt0.c5) AND (vt0.c0)))AND(((((rt0.c4)AND(rt0.c6)))OR(rt0.c6)))))OR(((vt0.c0) NOT BETWEEN (rt0.c6) AND (rt0.c6)))) FROM vt0;SELECT DISTINCT ((((rt0.c1)||(rt0.c0)))||((- (rt0.c5)))) FROM vt0 WHERE (((((NULL) BETWEEN ('') AND (0.7394075943885589))) NOT BETWEEN (0.31988360381567926 COLLATE NOCASE) AND ((('538887351')&(0.48365019164143763))))) GROUP BY ((rt0.c2)AND(rt0.c3)) COLLATE BINARY;SELECT ALL ((((rt0.c5) NOTNULL)) IS TRUE) FROM vt0, rt0 WHERE (0.3682222100801913) LIMIT 1981486932 OFFSET -1487220237; -- 0ms;
SELECT DISTINCT UPPER(vt0.c0) COLLATE BINARY FROM rt0, vt0 LIMIT -1844823760; -- 0ms;
SELECT (((('0.3859265724824317' COLLATE RTRIM)AND(((((rt0.c2)OR(rt0.c2)))OR(rt0.c3)))))OR(ABS(rt0.c6))) FROM vt0 WHERE (((((((((NULL)OR(NULL)))OR(-2077406888)))OR(((NULL) NOT BETWEEN ('cB') AND ('-827389238')))))OR((((((((('-798953150')OR(x'86fd698d')))AND(0.23367512053593698)))AND(NULL)))OR(x'')))));SELECT DISTINCT (((vt0.c0, rt0.c2, rt0.c4)) NOT BETWEEN ((CASE rt0.c1  WHEN vt0.c0 THEN rt0.c4 ELSE rt0.c1 END, ('' IN (rt0.c4, rt0.c3)), LOWER(rt0.c3))) AND (((((-1271695058))>=((rt0.c2))), ((rt0.c5) NOT NULL), (((rt0.c0, rt0.c2, rt0.c4)) BETWEEN ((rt0.c2, rt0.c1, rt0.c3)) AND ((rt0.c5, rt0.c0, rt0.c3)))))) FROM rt0, vt0 WHERE (DATETIME(CASE WHEN x'3b28' THEN 0.8940107155864753 WHEN 0.9686013657806145 THEN '2122688719' WHEN 'wuV|MAd)7' THEN x'5729' END, CAST(NULL AS BLOB), GLOB(NULL, 0.3037030116804532), ((0.9373242566107264)<(NULL)), (0.5804282310911546 IN ()))); -- 0ms;
SELECT ALL ((((rt0.c1) NOTNULL)) IS FALSE) FROM vt0, rt0 WHERE (((('', 0.1933240791951668, x'')) BETWEEN ((((NULL) ISNULL), ((NULL) BETWEEN ('') AND (0.8744773010185671)), CAST(x'' AS BLOB))) AND ((CAST(0X48ab622d AS REAL), ((NULL)<(x'3127')), '1e500' COLLATE BINARY)))); -- 0ms;
SELECT DISTINCT 'CW', CAST(CAST(rt0.c1 AS REAL) AS REAL), (((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((vt0.c0)))) ISNULL) FROM rt0 WHERE ((((NULL IN ()))>(((x'6248') BETWEEN (NULL) AND (x'')))));SELECT rt0.c0 FROM vt0, rt0; -- 0ms;
SELECT ALL (+ ((((vt0.c0, rt0.c2, rt0.c1)) BETWEEN ((vt0.c0, rt0.c5, rt0.c0)) AND ((rt0.c1, rt0.c0, rt0.c3))))) FROM vt0;SELECT ALL (((rt0.c5, x'507ca699', vt0.c0)) NOT BETWEEN (((rt0.c5 IN (vt0.c0)), ((rt0.c5) NOT BETWEEN (rt0.c6) AND (rt0.c0)), (rt0.c4 IN ()))) AND ((IFNULL(DISTINCT rt0.c5, rt0.c1), CAST(rt0.c5 AS BLOB), CASE rt0.c4  WHEN rt0.c6 THEN vt0.c0 ELSE rt0.c3 END))) FROM rt0 GROUP BY JULIANDAY(((rt0.c6)<<(rt0.c0)), ((((rt0.c2)OR(vt0.c0)))AND(rt0.c6)), ((rt0.c5)+(rt0.c5)));SELECT rt0.c3 FROM rt0; -- 0ms;
SELECT DISTINCT ((((((((GROUP_CONCAT(rt0.c1))OR(((rt0.c6)%(rt0.c2)))))AND((rt0.c0 IN ()))))AND((('1026031497')%(rt0.c1)))))OR('369328645' COLLATE NOCASE)) FROM vt0, rt0 WHERE ((- (json_valid('44735238')))); -- 0ms;
SELECT DISTINCT COUNT('naUx4*') FROM rt0, vt0 WHERE ((+ (0.8342876722168256)) COLLATE BINARY); -- 0ms;
SELECT ALL MIN((rt0.c4 IN (''))) FROM rt0; -- 0ms;
SELECT DISTINCT (NOT (rt0.c1)) COLLATE NOCASE, ((((rt0.c0)==(rt0.c3))) NOT BETWEEN ('⌲') AND ((((rt0.c4))>=((-665398173))))), DENSE_RANK() OVER ( GROUPS BETWEEN ((((rt0.c2) ISNULL))+((- (rt0.c4)))) FOLLOWING AND ((((vt0.c0)AND(x'')))AND(rt0.c4)) COLLATE BINARY FOLLOWING) FROM rt0 GROUP BY ((vt0.c0) NOT BETWEEN (((((((((NULL)AND(rt0.c0)))AND(rt0.c3)))OR(rt0.c5)))OR(rt0.c2))) AND (NULL)), ((json_valid(rt0.c4))IS NOT(((rt0.c3) BETWEEN (rt0.c2) AND (rt0.c4)))), ((NULL)=(((rt0.c6) IS FALSE))) HAVING ((((((vt0.c0)OR(rt0.c5)))AND(rt0.c1))) ISNULL) LIMIT -23990202;SELECT ALL rt0.c1 FROM rt0, vt0 WHERE (0.6264410374348798); -- 0ms;
SELECT (((rt0.c2)) NOT BETWEEN ((((rt0.c1)IS(rt0.c1)))) AND ((((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c1))))) FROM vt0, rt0 LIMIT 592176921; -- 0ms;
SELECT ALL (((((NOT (rt0.c6)))OR(((rt0.c3) NOT BETWEEN (rt0.c6) AND (rt0.c1)))))OR(json_insert('2083778703', rt0.c2, -2043509449))), FIRST_VALUE((((rt0.c2)) NOT BETWEEN ((CAST(rt0.c5 AS NUMERIC))) AND ((((rt0.c1)LIKE(rt0.c3)))))) OVER (), COUNT(*) FROM vt0, rt0 WHERE ((((('y0./')AND('	+')))AND('1211272186')) COLLATE NOCASE) LIMIT 1826528316 OFFSET -929538560; -- 0ms;
SELECT DISTINCT ((CASE rt0.c3  WHEN x'' THEN rt0.c6 ELSE rt0.c0 END) NOTNULL), vt0.c0 COLLATE BINARY COLLATE NOCASE, ((CASE rt0.c6  WHEN NULL THEN vt0.c0 END) NOT BETWEEN (CAST(rt0.c3 AS REAL)) AND (((rt0.c6)-(rt0.c6)))) FROM rt0, vt0 GROUP BY LTRIM(((rt0.c1)<(rt0.c1))); -- 0ms;
SELECT CUME_DIST() OVER () FROM vt0 WHERE ('2050790062') LIMIT 541621744; -- 0ms;
SELECT CASE WHEN ((rt0.c3)>>(rt0.c4)) THEN ((vt0.c0)<=(rt0.c1)) END FROM rt0, vt0; -- 0ms;
SELECT DISTINCT ROW_NUMBER() OVER ( ORDER BY ((+ (rt0.c2)) IN ())  NULLS LAST) FROM vt0, rt0 WHERE ((UPPER(DISTINCT 0.550331595406412) IN ())); -- 0ms;
SELECT DISTINCT (((rt0.c0 IN ()))>(((vt0.c0) IS TRUE))) FROM rt0 WHERE ((~ ((('ND') IS FALSE))));SELECT CAST(-1935522288 AS REAL) FROM rt0, vt0 WHERE ('962342148' COLLATE NOCASE); -- 0ms;
SELECT (((~ (rt0.c5))) NOT BETWEEN (rt0.c4 COLLATE RTRIM) AND (((rt0.c6) BETWEEN (rt0.c2) AND (rt0.c6)))) FROM rt0; -- 0ms;
SELECT ((((((rt0.c3)IS(rt0.c5)))OR('1408973353')))OR(json(rt0.c1))), CAST((NOT (rt0.c1)) AS TEXT), GROUP_CONCAT(CAST(rt0.c3 AS INTEGER)) FILTER(WHERE (((vt0.c0)) BETWEEN ((CAST(rt0.c3 AS INTEGER))) AND ((CASE rt0.c5  WHEN rt0.c2 THEN rt0.c3 END)))) OVER () FROM vt0, rt0; -- 1ms;
SELECT (+ (((rt0.c6)IS NOT(rt0.c3)))) FROM rt0, vt0 WHERE ((CAST('-645154335' AS BLOB) IN ((('986460728')>(''))))); -- 0ms;
SELECT ALL ((((vt0.c0)OR(SUM(rt0.c0))))OR(((NULL)+(rt0.c1)))), CAST(((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0)) AS NUMERIC), CAST(((((rt0.c5)OR(rt0.c1)))AND(vt0.c0)) AS NUMERIC) FROM rt0, vt0; -- 0ms;
SELECT DISTINCT (((rt0.c0)>>(rt0.c0)) IN ()) FROM rt0 NOT INDEXED, vt0 WHERE ((((1212516865 IN (NULL))) NOTNULL)); -- 0ms;
SELECT DISTINCT rt0.c2 FROM rt0 WHERE (CAST((0.27028144396017095 IN (x'caa1')) AS BLOB)); -- 0ms;
SELECT ((((((rt0.c1) NOT NULL))OR(((rt0.c0) IS TRUE))))OR(('-1817213705' IN ()))), json_array((- (rt0.c2)), CASE rt0.c2  WHEN rt0.c3 THEN '118017784' WHEN rt0.c2 THEN vt0.c0 WHEN rt0.c2 THEN '-1132975819' END, rt0.c1, COUNT(rt0.c3)), CAST((~ (rt0.c6)) AS BLOB) FROM vt0;SELECT (((((rt0.c3) IS TRUE)))<=((((((((((rt0.c4)AND(rt0.c0)))OR(rt0.c6)))AND(vt0.c0)))AND(rt0.c4))))) FROM vt0, rt0; -- 0ms;
SELECT CAST(0Xfffffffff6bab22d AS REAL) FROM rt0 WHERE (CAST(((NULL) BETWEEN ('0.5011585225857952') AND (x'')) AS BLOB)); -- 0ms;
SELECT (((0x1944da15)) BETWEEN ((((((rt0.c1)AND(rt0.c6)))OR(0.5968987687590469)))) AND ((((rt0.c2) NOT BETWEEN (rt0.c5) AND (rt0.c5))))) FROM rt0, vt0; -- 1ms;
SELECT DISTINCT ((LIKE(0x2e81784f, vt0.c0, '衝'))<>(((rt0.c0) NOT NULL))) FROM rt0, vt0 WHERE ((((0x78f58856, 'j밶2', 0x2edf0096)) NOT BETWEEN (((- ('-285004827')), CASE WHEN -8.27389238E8 THEN 0Xffffffffe429f1a2 WHEN 0Xffffffffe36d7e2f THEN NULL WHEN 0X51a8785e THEN NULL WHEN NULL THEN 0Xffffffffd888de8e WHEN '' THEN NULL END, (~ ('Y/')))) AND (((~ ('-152093935')), ((2143845342)%(0.057394675116138494)), (- (-7.9895315E8)))))); -- 0ms;
SELECT rt0.c1 FROM rt0; -- 0ms;
SELECT ALL COUNT(((rt0.c6)*(rt0.c2))) FROM vt0, rt0 WHERE (((~ ('-23990202')) IN ())); -- 0ms;
SELECT IFNULL(((((((((((((vt0.c0)AND(rt0.c0)))AND(rt0.c4)))OR(rt0.c6)))AND(x'')))OR(rt0.c6)))AND(rt0.c4)), IFNULL(DISTINCT rt0.c4, rt0.c0)), ((((((((((vt0.c0)>(rt0.c6)))AND((- (rt0.c1)))))OR(NULL)))AND(MAX(rt0.c4))))AND((((rt0.c3, rt0.c4, rt0.c2))<((rt0.c4, rt0.c2, rt0.c3))))), MAX(CAST(rt0.c4 AS REAL)) FROM vt0 WHERE (((((('TD富)' IN ()))AND(CASE -1460943652  WHEN '߲G⌲?QN' THEN -662118770 ELSE x'7cf0' END)))OR(CASE WHEN x'' THEN x'' WHEN '-285004827' THEN '2122688719' WHEN x'' THEN x'' ELSE x'5da8' END))) LIMIT -2116021468 OFFSET -1243196106;SELECT DISTINCT ((((rt0.c4 IN ())))<((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))))), LIKELY(DISTINCT rt0.c5 COLLATE BINARY), ((- (rt0.c5)) IN ()) FROM rt0, vt0; -- 0ms;
SELECT DISTINCT x'' COLLATE RTRIM FROM rt0 WHERE (((((x'3063381d') NOT BETWEEN (x'') AND (NULL))) NOT NULL)); -- 0ms;
SELECT ((((((((((((((((NULL)AND(vt0.c0)))OR('WUV|MAD)7')))OR(rt0.c1)))OR(rt0.c4)))AND(MAX(rt0.c4))))OR((+ (rt0.c6)))))AND((rt0.c0 IN ()))))AND((rt0.c1 IN ()))) FROM rt0 WHERE (((('-1174594304', -1e500, '0.0')) BETWEEN ((CASE 0.3826134792817162  WHEN 0xffffffffead53303 THEN 0.764820490801235 END, ((0.08275934583952671) BETWEEN ('0/M''') AND (x'')), SQLITE_SOURCE_ID())) AND ((x'7c61' COLLATE NOCASE, CASE WHEN 0.7722072711472469 THEN 'KH5ve' END, (- ('-2021460733')))))); -- 1ms;
SELECT AVG((rt0.c4 IN ())) OVER ( GROUPS ((((rt0.c3) NOTNULL)) NOT BETWEEN ('') AND (((((0.302464962289102)OR(rt0.c2)))AND(rt0.c1)))) PRECEDING EXCLUDE CURRENT ROW), COUNT(*), (((rt0.c3 IN (rt0.c4))) IS FALSE) FROM rt0 WHERE (ROUND(((x'58ce3e4d') IS TRUE), (('')<=(x'78ba'))));SELECT DISTINCT x'', LOWER(DISTINCT ((rt0.c1)>=(rt0.c1))), (((((vt0.c0, rt0.c3, vt0.c0)) NOT BETWEEN ((rt0.c0, vt0.c0, vt0.c0)) AND ((x'', rt0.c6, rt0.c4)))) IS FALSE) FROM vt0;SELECT DISTINCT CASE WHEN CAST(rt0.c4 AS TEXT) THEN ((NULL)<>(rt0.c6)) ELSE CASE rt0.c3  WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c0 END END, (~ (0.37961857175480984)), (((((rt0.c5 IN ()))OR((rt0.c6 IN ()))))AND((~ (rt0.c5)))) FROM rt0, vt0; -- 0ms;
SELECT ALL ((CASE rt0.c1  WHEN rt0.c4 THEN rt0.c4 END)-(CASE WHEN rt0.c1 THEN rt0.c0 END)), rt0.c4, ((((((((((((((rt0.c2)OR(NULL)))AND(rt0.c2)))OR(rt0.c4)))AND(rt0.c5)))OR(rt0.c4)))OR(vt0.c0)))==(CAST(rt0.c2 AS NUMERIC))) FROM rt0, vt0 WHERE ((- ((~ (x''))))); -- 0ms;
SELECT DISTINCT ((rt0.c4) NOTNULL) FROM vt0;SELECT '5t*k' COLLATE BINARY FROM rt0, vt0 WHERE (((CASE 0.3859265724824317  WHEN 0.27179044827652155 THEN 0xffffffff9f4a79b0 WHEN x'b85b' THEN 0.02607285755947142 WHEN '2109302804' THEN '477800057' END) NOTNULL)); -- 0ms;
SELECT ALL ((((rt0.c5) NOT NULL))>=(((((rt0.c3)OR(NULL)))AND(rt0.c1)))) FROM rt0, vt0 GROUP BY ((0.4040618991418723)=((rt0.c2 IN ()))) HAVING rt0.c2; -- 0ms;
SELECT DISTINCT ((NULL)/((((rt0.c5, rt0.c1, rt0.c0))!=((rt0.c1, rt0.c6, rt0.c5))))) FROM vt0 WHERE (CAST(((x'')<=(0.19451259613057892)) AS NUMERIC));SELECT ALL (((0.09280844298884972)) NOT BETWEEN ((NULL)) AND ((((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c1))))) FROM vt0 WHERE ((CAST('1038977618' AS BLOB) IN ()));SELECT DISTINCT AVG(CAST(rt0.c5 AS TEXT)) OVER () FROM vt0, rt0 WHERE ((((('')/(NULL)))<=(CASE ''  WHEN x'' THEN NULL END))); -- 0ms;
SELECT DISTINCT (NOT (vt0.c0)) COLLATE NOCASE FROM rt0;SELECT ALL TYPEOF(((vt0.c0)<(rt0.c1))), ((((((rt0.c1) NOT BETWEEN (rt0.c4) AND (rt0.c6)))OR(CAST(rt0.c3 AS TEXT))))OR(((((rt0.c1)OR(vt0.c0)))OR(rt0.c1)))), ((((NULL) NOT BETWEEN (0.486606831392594) AND (NULL))) IS FALSE) FROM vt0 WHERE (((((NULL)OR(x'b7c5')))OR(0Xffffffffec4ec6b0)) COLLATE NOCASE);SELECT (rt0.c5 COLLATE BINARY IN ()) FROM vt0, rt0 LIMIT 569838243; -- 0ms;
SELECT DISTINCT ((0.12444496957389284) BETWEEN (((rt0.c2) NOTNULL)) AND (((rt0.c2) NOT BETWEEN (rt0.c0) AND (vt0.c0)))) FROM rt0 WHERE ((+ ((('983708333') IS TRUE))));SELECT DISTINCT GROUP_CONCAT(((rt0.c6) BETWEEN (rt0.c4) AND (rt0.c6))) FROM rt0 GROUP BY ((CASE WHEN rt0.c3 THEN rt0.c5 END) NOT NULL) HAVING (((((vt0.c0, vt0.c0, rt0.c2)) BETWEEN ((rt0.c1, rt0.c3, rt0.c4)) AND ((rt0.c0, vt0.c0, vt0.c0)))) IS TRUE);SELECT DISTINCT CASE WHEN CASE rt0.c5  WHEN rt0.c2 THEN vt0.c0 END THEN ((rt0.c6) NOT BETWEEN (rt0.c1) AND (rt0.c2)) END, MAX(((rt0.c3)GLOB(rt0.c0))), (0.15590899453389495 IN ()) FROM rt0, vt0 WHERE ((((((0.6572929617065828)GLOB('-1253672408'))))>(((('44735238')<('944955407')))))); -- 0ms;
SELECT DISTINCT (+ (CAST(rt0.c1 AS NUMERIC))), (((((('!푣') BETWEEN (vt0.c0) AND (rt0.c3)))OR(rt0.c4)))AND(((((((((-290173193)AND(rt0.c2)))AND('')))AND(rt0.c6)))OR(0x63ecc5f9)))), rt0.c4 FROM vt0 WHERE (((((((((((x'')AND('-662118770')))AND(0X1deb0c8)))AND(-1.271695058E9)))OR(''))) BETWEEN ((x'' IN (NULL, 'H+'))) AND (((369328645) NOT BETWEEN (0X51a8785e) AND ('n/	!腷''}g-')))));SELECT DISTINCT ((((vt0.c0)AND(rt0.c6)))AND(rt0.c5)) COLLATE BINARY, ((((rt0.c2) BETWEEN (rt0.c0) AND (0.6239604091043036)))<=(CASE rt0.c3  WHEN rt0.c5 THEN rt0.c5 ELSE rt0.c2 END)), CAST(((rt0.c4)=(0x4ac329d1)) AS BLOB) FROM rt0 WHERE (json_array_length(CAST(NULL AS INTEGER), '-1409672767' COLLATE RTRIM));SELECT DISTINCT ((((vt0.c0) BETWEEN (vt0.c0) AND (rt0.c4))) BETWEEN (vt0.c0) AND ((rt0.c3 IN (rt0.c1, rt0.c0)))) FROM vt0, rt0; -- 0ms;
SELECT ALL RANK() OVER ( ORDER BY ((((((((((rt0.c2) NOTNULL))AND(CAST(rt0.c0 AS BLOB))))AND(0.8940107155864753)))AND(CASE WHEN vt0.c0 THEN rt0.c5 END)))OR(vt0.c0)) GROUPS  CURRENT ROW EXCLUDE TIES) FROM rt0, vt0 WHERE (x'') LIMIT 1741970380 OFFSET -37979234; -- 0ms;
SELECT DISTINCT SUM(((rt0.c6)IS NOT(rt0.c2))) FILTER(WHERE (+ (TYPEOF(DISTINCT rt0.c2)))) OVER ( RANGE  CURRENT ROW) FROM vt0;SELECT ((((rt0.c1) BETWEEN (rt0.c3) AND (rt0.c3))) NOT BETWEEN (json_patch(546116832, rt0.c2)) AND (COUNT(vt0.c0))), GROUP_CONCAT(((rt0.c5) BETWEEN (rt0.c6) AND (rt0.c6))) OVER (), TOTAL((- (rt0.c4))) OVER () FROM rt0;SELECT DISTINCT ((MIN(rt0.c5)) NOT BETWEEN ((vt0.c0 IN ())) AND ((+ (rt0.c6)))) FROM vt0 WHERE (((NULL) IS TRUE)) GROUP BY CASE CASE rt0.c6  WHEN rt0.c1 THEN rt0.c4 WHEN rt0.c1 THEN NULL WHEN rt0.c3 THEN rt0.c3 END  WHEN 0.5965715375768343 COLLATE RTRIM THEN rt0.c6 COLLATE RTRIM WHEN (- (rt0.c6)) THEN (rt0.c2 IN (x'', NULL)) WHEN (((rt0.c0))==((vt0.c0))) THEN ((rt0.c1) BETWEEN (rt0.c4) AND (rt0.c1)) END, ((((rt0.c4) BETWEEN (rt0.c4) AND (NULL)))GLOB(CAST('141204425' AS BLOB))), rt0.c6 HAVING rt0.c6;SELECT ALL (CASE 0.29445034841552764  WHEN rt0.c3 THEN rt0.c2 END IN ()), (((CASE WHEN rt0.c1 THEN rt0.c6 END))>=(((~ (vt0.c0))))), GROUP_CONCAT(((rt0.c1)IS('1007459381')) COLLATE RTRIM), (((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c3)) IN (CASE rt0.c5  WHEN rt0.c4 THEN rt0.c3 END, CASE rt0.c0  WHEN rt0.c1 THEN rt0.c3 WHEN 0.486174140248136 THEN x'' WHEN rt0.c6 THEN rt0.c2 END)), TYPEOF(CAST(rt0.c1 AS REAL)) FROM vt0 WHERE (LIKELY(LOWER(DISTINCT 0Xffffffffbb1e5ff9)));SELECT DISTINCT ((load_extension(vt0.c0, rt0.c4))IS(((rt0.c2) NOT BETWEEN (rt0.c5) AND (rt0.c4)))) FROM rt0 WHERE (((((NULL) BETWEEN ('0.22569144688714926') AND (x''))) BETWEEN ((~ (NULL))) AND ((0.48957098608954563 IN ())))) GROUP BY ((((rt0.c1)IS(rt0.c1))) NOTNULL) HAVING (- (vt0.c0 COLLATE RTRIM)) LIMIT 1421499767;SELECT DISTINCT (- (rt0.c0)) COLLATE BINARY, (((rt0.c4) IS TRUE) IN ()), 'WVtZSs6e쟷' FROM vt0, rt0; -- 0ms;
SELECT ALL CASE vt0.c0 COLLATE RTRIM  WHEN x'' THEN ((rt0.c4)|(rt0.c3)) END FROM vt0, rt0 LIMIT -2002811697 OFFSET -1378845628; -- 0ms;
SELECT DISTINCT ((((rt0.c2)+(rt0.c4)))<(HEX(vt0.c0))) FROM rt0;SELECT DISTINCT 0x62c57877, ((json_quote(rt0.c3))%((rt0.c1 IN (rt0.c5, rt0.c5)))), (((((((((('1033393677')GLOB(rt0.c4)))AND(((rt0.c5)>=(rt0.c3)))))AND(vt0.c0)))OR(rt0.c1 COLLATE NOCASE)))AND(((((rt0.c5)OR(rt0.c1)))OR(rt0.c2)))) FROM vt0, rt0; -- 1ms;
SELECT DISTINCT rt0.c2, ((TRIM(DISTINCT rt0.c3)) NOTNULL), ((((('0.769683284296515')) BETWEEN ((rt0.c5)) AND ((vt0.c0))))LIKE(MAX(rt0.c2))) FROM vt0, rt0; -- 0ms;
SELECT DISTINCT rt0.c6 FROM vt0 INNER JOIN rt0 ON rt0.c5; -- 0ms;
SELECT ALL 0X16bfc247, COUNT(((rt0.c0) IS TRUE)), (((vt0.c0) BETWEEN (0X26935b3c) AND (0.6474744858479434)) IN ()) FROM vt0 INTERSECT SELECT DISTINCT ((((rt0.c6)OR(rt0.c5)))OR(rt0.c5)) COLLATE BINARY, (NOT (UNLIKELY(rt0.c4))), ((NULL)&(((rt0.c4) BETWEEN (rt0.c2) AND (rt0.c6)))) FROM rt0, vt0;SELECT ALL (+ (NULL)) COLLATE RTRIM FROM rt0; -- 0ms;
SELECT ALL MAX((rt0.c5 IN ('䮍J]ea'))) FROM rt0 WHERE (x''); -- 0ms;
SELECT ALL (((MIN(rt0.c6), ((((rt0.c2)AND(0xffffffff842d4958)))AND('782445621')), HEX(rt0.c6)))<=((((rt0.c6)<<(rt0.c0)), 896834989, ((rt0.c4) NOT BETWEEN (rt0.c2) AND (vt0.c0))))) FROM rt0, vt0; -- 0ms;
SELECT CUME_DIST() OVER ( RANGE BETWEEN ((((rt0.c6 IN ())))<=((CAST(rt0.c2 AS BLOB)))) FOLLOWING AND  CURRENT ROW EXCLUDE CURRENT ROW) FROM rt0;SELECT DISTINCT CASE GLOB(rt0.c5, '-1271695058')  WHEN ((vt0.c0)|(rt0.c2)) THEN LIKELIHOOD(rt0.c5, 0.6529038909410936) END, (((((rt0.c6))<=((rt0.c3))))>>(CASE rt0.c4  WHEN rt0.c2 THEN rt0.c4 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c4 THEN NULL ELSE rt0.c1 END)), (- ('Wf')) FROM rt0 WHERE ((NOT (TRIM(0.17931622339616027, x''))));SELECT DISTINCT ((rt0.c2)>(CASE rt0.c2  WHEN vt0.c0 THEN rt0.c6 END)), 0X34efeb50, (((((((('477800057')AND(((vt0.c0) BETWEEN (rt0.c3) AND (rt0.c2)))))OR(rt0.c6 COLLATE BINARY)))OR('9%I俖*w' COLLATE BINARY)))AND(json_object(rt0.c5, rt0.c2, rt0.c4, rt0.c3))) FROM vt0;SELECT ALL SUM(NULL) FROM vt0; -- 0ms;
SELECT DISTINCT CASE rt0.c0  WHEN vt0.c0 THEN rt0.c6 ELSE rt0.c1 END COLLATE BINARY FROM rt0, vt0 WHERE ((((x'')) NOT BETWEEN ((NULL)) AND (((((-469954760)) BETWEEN ((x'')) AND (('~*4u'))))))) GROUP BY -2.06540784E8 HAVING '1238534237'; -- 0ms;
SELECT CAST(rt0.c1 AS REAL) COLLATE NOCASE, (rt0.c2 IN ()) COLLATE BINARY, (((((~ (rt0.c5)))AND(((((rt0.c3)OR(rt0.c0)))AND(rt0.c1)))))OR(MAX(rt0.c4))), ((CASE WHEN rt0.c1 THEN NULL WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c5 THEN rt0.c3 END) NOT BETWEEN (CASE rt0.c5  WHEN rt0.c0 THEN rt0.c4 WHEN rt0.c0 THEN rt0.c4 WHEN rt0.c2 THEN vt0.c0 ELSE 0x95eba81 END) AND (((rt0.c5) NOT BETWEEN (rt0.c0) AND (rt0.c4)))), CASE WHEN rt0.c5 THEN ((rt0.c1)AND(rt0.c1)) ELSE GROUP_CONCAT(rt0.c0) END FROM rt0, vt0; -- 0ms;
SELECT DISTINCT (((rt0.c2 IN (rt0.c0))) BETWEEN (rt0.c2 COLLATE BINARY) AND (((((((((rt0.c6)OR(rt0.c2)))OR(vt0.c0)))OR(rt0.c6)))AND(rt0.c4)))), GROUP_CONCAT(((x'') NOT BETWEEN (rt0.c2) AND (rt0.c0))) OVER (), ((rt0.c3)!=(((((((((rt0.c2)OR(0.12444496957389284)))AND(vt0.c0)))AND(rt0.c2)))OR(rt0.c4)))) FROM rt0, vt0; -- 0ms;
SELECT DISTINCT '-826728623' FROM vt0, rt0 WHERE ((((1621846985, x'', '+XA#')) BETWEEN ((((0.01543171989624137) NOT BETWEEN (NULL) AND (-841487963)), ((NULL)*(x'')), ((x'') NOT BETWEEN (0Xffffffff89dadbc5) AND ('2063229825')))) AND (((('1741970380')*(x'')), ((NULL) NOTNULL), ((0X1b7b45b9)-(-1.196996724E9)))))); -- 0ms;
SELECT ALL (((rt0.c3)) NOT BETWEEN ((rt0.c4 COLLATE RTRIM)) AND ((((rt0.c4)<(0.7651394162923986))))) FROM vt0, rt0 WHERE ((((0x2b0b8216, 'yabq', x'')) NOT BETWEEN (((((0.486606831392594)) NOT BETWEEN ((1.525857278E9)) AND ((0Xffffffffbf0e64fc))), (((NULL, 0.2803073791347461, NULL))>=((x'', NULL, NULL))), ((((((((0xfffffffff5c070bc)AND(-2103926784)))OR('896834989')))OR(x'')))AND(0xffffffffa7ce2f2f)))) AND (((+ (x'')), ((((0.7744535674199033)OR(0xffffffffc62fab5e)))AND(NULL)), ((0.7175646645611579)>>(0.9121634969047054)))))); -- 0ms;
SELECT DISTINCT LAST_VALUE((CASE WHEN NULL THEN '\nTY*' END IN ())) OVER () FROM rt0; -- 0ms;
SELECT ALL ((UPPER(x'00e7')) BETWEEN (((rt0.c1) NOT BETWEEN (rt0.c6) AND (rt0.c4))) AND (MAX(vt0.c0, rt0.c5))) FROM rt0, vt0 GROUP BY ((((('硏[BK'))!=((vt0.c0))))<>(((rt0.c6)GLOB(rt0.c2)))) HAVING CAST(((rt0.c4)>(rt0.c5)) AS BLOB); -- 0ms;
SELECT DISTINCT ((CAST(rt0.c1 AS REAL))%(COUNT(*))), (((rt0.c4)) NOT BETWEEN (((~ (rt0.c5)))) AND (((((vt0.c0))>=((rt0.c6)))))), ((((((rt0.c4)OR(vt0.c0)))OR(rt0.c5))) IS TRUE) FROM rt0 WHERE ((((x'') NOTNULL) IN ()));SELECT ALL CASE (rt0.c6 IN ())  WHEN rt0.c3 COLLATE NOCASE THEN rt0.c4 COLLATE NOCASE ELSE ((rt0.c4)AND(rt0.c3)) END FROM vt0, rt0 WHERE (((((+ ('悗'))))>=(((x'6eff' IN ()))))); -- 0ms;
SELECT DISTINCT (((rt0.c1, rt0.c4, rt0.c3, '546116832', rt0.c4)) NOT BETWEEN (((((((((('')AND(rt0.c1)))OR(rt0.c4)))AND(rt0.c3)))AND(rt0.c3)), (((rt0.c1))>((rt0.c4))), ((((((((rt0.c1)OR(vt0.c0)))AND(rt0.c0)))OR(rt0.c0)))OR(rt0.c2)), (NULL IN (rt0.c3, rt0.c0)), CAST(rt0.c1 AS INTEGER))) AND (((~ (x'')), rt0.c2 COLLATE RTRIM, CAST(rt0.c1 AS NUMERIC), CAST(rt0.c0 AS BLOB), ((rt0.c2)LIKE(rt0.c1))))) FROM vt0, rt0; -- 0ms;
SELECT DISTINCT rt0.c6 FROM rt0, vt0; -- 0ms;
SELECT DISTINCT GROUP_CONCAT(((rt0.c5)|(rt0.c0))) OVER () FROM vt0 GROUP BY CAST(vt0.c0 COLLATE BINARY AS INTEGER) ORDER BY (((rt0.c6)) NOT BETWEEN ((((rt0.c6)%(rt0.c5)))) AND ((CAST(rt0.c5 AS NUMERIC)))) DESC;SELECT DISTINCT rt0.c0 COLLATE BINARY, MAX(((rt0.c3) ISNULL)) COLLATE RTRIM, ((((-23990202) IS TRUE))IS NOT(rt0.c2 COLLATE RTRIM)) FROM rt0, vt0 ORDER BY ((((rt0.c1)!=(rt0.c5))) IS FALSE); -- 0ms;
SELECT ALL rt0.c0 FROM rt0 WHERE (((-159581446 COLLATE RTRIM) BETWEEN ((('M3') IS FALSE)) AND (((NULL)*(x''))))); -- 0ms;
SELECT DISTINCT CAST((rt0.c1 IN ()) AS BLOB) FROM rt0, vt0 WHERE (((((('0.01543171989624137')) BETWEEN ((0.7169195677869289)) AND ((NULL)))) ISNULL)) ORDER BY (CAST(rt0.c3 AS INTEGER) IN ((rt0.c2 IN ()))), UPPER(DISTINCT ((x'')<>(rt0.c0)))  NULLS LAST LIMIT 75339167 OFFSET 1983005963; -- 0ms;
SELECT DISTINCT CASE ((rt0.c5)>>(vt0.c0))  WHEN rt0.c2 THEN ((rt0.c4)|(rt0.c1)) ELSE -783125146 END, ((((((((((0.024916087563926714)AND(rt0.c3)))AND(rt0.c1)))OR(rt0.c0)))OR(rt0.c6))) NOTNULL), 0.8161815269233391 FROM vt0;SELECT rt0.c5 FROM rt0, vt0 ORDER BY (((rt0.c5 IN ()))IS NOT(json_object(vt0.c0, rt0.c3)))  NULLS FIRST; -- 0ms;
SELECT DISTINCT ((((rt0.c3)!=(rt0.c3))) NOT BETWEEN (CASE ''  WHEN rt0.c3 THEN NULL WHEN vt0.c0 THEN '-1626979148' WHEN rt0.c6 THEN rt0.c4 END) AND ((NOT (rt0.c1)))), CASE WHEN rt0.c4 THEN rt0.c4 END COLLATE BINARY, CAST((rt0.c6 IN ()) AS INTEGER) FROM vt0 WHERE (((((NULL)<(NULL))) BETWEEN (((((x'')AND(0.9686237301322034)))AND('\}k'))) AND ((((0.9239167602884428)) NOT BETWEEN (('1206929369')) AND ((0.7744535674199033))))));SELECT ALL (((rt0.c6) IS TRUE) IN ()), RANK() OVER (), NTILE(CASE CAST(rt0.c5 AS INTEGER)  WHEN ((rt0.c2)<<(rt0.c5)) THEN (rt0.c4 IN ()) END) OVER (), ((((((rt0.c6)OR(rt0.c4)))AND(rt0.c4))) BETWEEN (rt0.c0 COLLATE NOCASE) AND (((((rt0.c4)OR(rt0.c2)))OR(rt0.c4)))), TRIM(DISTINCT ((rt0.c5) IS FALSE), ((('592176921'))>((rt0.c0)))) FROM rt0 LEFT OUTER JOIN vt0 ON ((((rt0.c0) NOTNULL))>(NULL)) WHERE ((((x'daa3' COLLATE RTRIM))<((-1935522288)))); -- 0ms;
SELECT DISTINCT ((NULL IN (1278033701)) IN ()), (((rt0.c3)>(vt0.c0)) IN ()), ROW_NUMBER() OVER () FROM vt0 WHERE ('mF4!]m') ORDER BY ((NULL)IS(((rt0.c1)OR(rt0.c1)))), 666253891  NULLS FIRST;SELECT ALL (((((((((vt0.c0 IN ()))OR(753554403)))AND(((rt0.c3) NOT NULL))))OR((((rt0.c2)) NOT BETWEEN ((rt0.c5)) AND ((rt0.c5))))))AND((((rt0.c3, rt0.c6, vt0.c0, rt0.c6, rt0.c5))>((vt0.c0, rt0.c3, 1.826977959E9, vt0.c0, rt0.c3))))) FROM rt0, vt0 WHERE ((CAST(x'' AS TEXT) IN (CAST('1' AS INTEGER)))); -- 0ms;
SELECT ALL CAST(CAST(rt0.c4 AS TEXT) AS NUMERIC), ((((rt0.c1)>>(rt0.c4)))||((((0.52485520481588, rt0.c1, rt0.c5)) NOT BETWEEN ((rt0.c6, rt0.c0, rt0.c6)) AND ((rt0.c0, rt0.c0, vt0.c0))))), (((vt0.c0 IN (rt0.c1, rt0.c6)))GLOB((((rt0.c2))<=((rt0.c5))))) FROM rt0 WHERE (((CASE '520395368'  WHEN NULL THEN x'9118' ELSE 0xffffffff935de5b7 END)IS(((NULL)|('423942677')))));SELECT DISTINCT CASE vt0.c0  WHEN (~ (vt0.c0)) THEN CASE WHEN '' THEN rt0.c1 END ELSE x'cd89' END FROM vt0, rt0 WHERE (((CASE WHEN -1208934074 THEN x'' END)OR((- (2010995101))))); -- 0ms;
SELECT ALL (((((x'')) BETWEEN ((rt0.c5)) AND ((vt0.c0))))OR(((rt0.c6) NOTNULL))) FROM rt0, vt0 WHERE (((((NULL, -2.021460733E9, NULL))>((x'd687', 0.2808577657550818, x''))) IN ())) ORDER BY (((0.9959844549574747 IN ())) BETWEEN ((((rt0.c5, rt0.c4, 0.07441601339679593)) NOT BETWEEN ((rt0.c4, rt0.c1, rt0.c3)) AND ((rt0.c1, rt0.c0, rt0.c1)))) AND (((rt0.c0) NOT BETWEEN (rt0.c5) AND (rt0.c1)))) ASC  NULLS LAST, (((rt0.c2 IN ())) NOTNULL); -- 0ms;
SELECT ((((((((((((NULL)OR(rt0.c4)))OR(rt0.c3)))OR(vt0.c0)))AND(rt0.c5)))OR(INSTR(rt0.c0, 1.74197038E9))))AND(((((((((rt0.c2)AND(NULL)))AND(rt0.c6)))OR(rt0.c3)))AND(rt0.c0)))), 0.35578416663083823, ((IFNULL(DISTINCT rt0.c5, -101646379))-(rt0.c6 COLLATE RTRIM)), (('735344138' IN ()) IN (CAST(vt0.c0 AS NUMERIC))), RANK() OVER () FROM vt0 GROUP BY (((vt0.c0, rt0.c5, rt0.c2)) NOT BETWEEN ((((rt0.c0)<>(rt0.c0)), ((((rt0.c5)AND(rt0.c1)))OR(rt0.c0)), ((((vt0.c0)AND(rt0.c3)))OR(rt0.c2)))) AND (((((rt0.c3)) NOT BETWEEN ((x'')) AND ((rt0.c2))), ((((rt0.c6)AND(rt0.c6)))OR(rt0.c3)), (- (rt0.c6))))) ORDER BY ((((rt0.c3) NOT BETWEEN ('') AND (rt0.c3))) NOT BETWEEN (rt0.c5 COLLATE NOCASE) AND (TRIM(rt0.c1))), (CAST(rt0.c3 AS INTEGER) IN ()) DESC, (((rt0.c1, rt0.c5, rt0.c2)) BETWEEN ((0Xffffffff940b330d, CASE vt0.c0  WHEN rt0.c5 THEN rt0.c2 WHEN vt0.c0 THEN rt0.c6 WHEN rt0.c6 THEN rt0.c6 ELSE x'' END, rt0.c6 COLLATE NOCASE)) AND ((((((rt0.c5)OR(rt0.c0)))AND(rt0.c5)), 0.741890196611489, CASE rt0.c0  WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c0 END)));SELECT DISTINCT AVG(rt0.c0) OVER (), ((((rt0.c6) NOT BETWEEN (rt0.c1) AND (rt0.c3)))LIKE(SUM(0.11546953980852337))), ((DATE(rt0.c4, rt0.c1, rt0.c5, rt0.c5, rt0.c2)) IS TRUE) FROM rt0, vt0 WHERE ((- (((NULL)GLOB(0.17186042652132694))))) GROUP BY ABS(CASE WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c4 THEN rt0.c6 ELSE rt0.c3 END); -- 0ms;
SELECT DISTINCT ((rt0.c0 COLLATE NOCASE)|(MAX(rt0.c1))) FROM rt0, vt0 WHERE ((((x'' IN ('m(b*f4'))) NOT NULL)); -- 0ms;
SELECT DISTINCT ((((((((((((rt0.c2)OR(rt0.c2)))OR(rt0.c3)))OR(rt0.c3)))AND(rt0.c2)))OR((rt0.c4 IN ()))))AND(CASE rt0.c5  WHEN rt0.c6 THEN rt0.c1 ELSE rt0.c6 END)) FROM rt0 WHERE ((NOT ((((NULL))>(('')))))) ORDER BY CASE WHEN CAST(x'' AS NUMERIC) THEN ((rt0.c5)AND(rt0.c6)) ELSE ((((rt0.c3)OR(rt0.c3)))OR(vt0.c0)) END  NULLS LAST, (NOT (COALESCE(DISTINCT vt0.c0, rt0.c5))), json_type(rt0.c3) DESC  NULLS FIRST;SELECT DISTINCT ((((TOTAL(rt0.c3))OR(CASE WHEN rt0.c2 THEN vt0.c0 ELSE vt0.c0 END)))OR(NULLIF(rt0.c3, 0X44670b29))) FROM vt0 GROUP BY ((((vt0.c0)AND(rt0.c1)))AND(((((rt0.c2)OR(rt0.c2)))AND(rt0.c2)))), ((((rt0.c1)AND(rt0.c4)))AND(rt0.c0)) COLLATE BINARY, (((('-1487220237')OR(CASE WHEN vt0.c0 THEN vt0.c0 ELSE rt0.c3 END)))AND(((rt0.c2)+(rt0.c0))));SELECT CASE WHEN rt0.c1 THEN rt0.c6 ELSE rt0.c3 END COLLATE BINARY FROM rt0; -- 0ms;
SELECT ((vt0.c0) ISNULL) COLLATE NOCASE FROM vt0 WHERE (CASE ''  WHEN (((x'')) NOT BETWEEN ((x'')) AND (('0.37961857175480984'))) THEN (('1278033701')|(-1812180149)) END) ORDER BY ((CAST(rt0.c6 AS BLOB))<=(((((rt0.c2)AND(rt0.c5)))AND(rt0.c6)))) DESC  NULLS FIRST, (((rt0.c3)) NOT BETWEEN ((((rt0.c6)IS(rt0.c0)))) AND ((HEX(DISTINCT rt0.c6)))) DESC, CASE WHEN ((rt0.c2)>(vt0.c0)) THEN ((((rt0.c5)OR(rt0.c0)))AND(rt0.c4)) ELSE (((rt0.c3)) BETWEEN ((rt0.c6)) AND ((x''))) END  NULLS FIRST LIMIT 227479625 OFFSET 42075396;SELECT ALL ((((rt0.c3) IS TRUE)) IS TRUE) FROM vt0, rt0 WHERE ((((('-1132975819') BETWEEN ('0.9200066540776779') AND ('1525857278'))) NOT BETWEEN ((('j')GLOB(x''))) AND (CASE WHEN x'' THEN x'' END))); -- 0ms;
SELECT ALL ((SUM(rt0.c6)) NOT BETWEEN (rt0.c6 COLLATE RTRIM) AND (((rt0.c4)<=(rt0.c3)))), COUNT((rt0.c2 IN (rt0.c6))) OVER ( ROWS ((CAST(rt0.c4 AS INTEGER))/((+ (rt0.c4)))) PRECEDING EXCLUDE NO OTHERS), ((TYPEOF(DISTINCT rt0.c4))GLOB(CAST(rt0.c6 AS BLOB))) FROM vt0;SELECT ALL rt0.c1 FROM vt0, rt0 LIMIT -60562233 OFFSET -476306274; -- 0ms;
SELECT DISTINCT ((CASE rt0.c5  WHEN rt0.c1 THEN rt0.c5 WHEN rt0.c5 THEN rt0.c4 WHEN rt0.c0 THEN rt0.c0 END) BETWEEN ((- (rt0.c2))) AND ((~ (rt0.c6)))), (~ (CAST(rt0.c0 AS BLOB))), COUNT(CAST(vt0.c0 AS TEXT)) FILTER(WHERE rt0.c5) OVER (), (((rt0.c3)) BETWEEN ((rt0.c0 COLLATE BINARY)) AND (((rt0.c2 IN (rt0.c0))))), rt0.c4 FROM vt0 WHERE ((((('iOC*\r') ISNULL)) ISNULL));SELECT DISTINCT COUNT(CAST(rt0.c2 AS TEXT)), (- (((((rt0.c5)OR(rt0.c0)))AND(0.23367512053593698)))), ((LIKELIHOOD(DISTINCT rt0.c2, 0.09519479350327087))OR(AVG(rt0.c6))) FROM rt0, vt0 WHERE ((((~ ('-1115011746'))) NOT NULL)); -- 0ms;
SELECT DISTINCT GROUP_CONCAT((+ (vt0.c0))), CASE ((((((((((((rt0.c2)AND(rt0.c5)))AND(vt0.c0)))OR(rt0.c5)))OR(rt0.c5)))AND(rt0.c1)))AND(rt0.c6))  WHEN CAST('' AS INTEGER) THEN rt0.c2 COLLATE NOCASE END, ((rt0.c4) IS FALSE) FROM vt0 ORDER BY ((((rt0.c5) BETWEEN (rt0.c6) AND (rt0.c2))) NOTNULL) ASC;SELECT ALL rt0.c3 FROM rt0, vt0 WHERE ((NULL COLLATE RTRIM IN ())); -- 0ms;
SELECT DISTINCT '1856924144' FROM rt0; -- 0ms;
SELECT DISTINCT x'' FROM rt0, vt0 WHERE (((CAST(x'' AS REAL)) IS TRUE)); -- 0ms;
SELECT ALL ((((NOT (rt0.c1))))>=((((rt0.c3)LIKE(rt0.c5))))), ((((rt0.c5)+('0.9686013657806145'))) IS TRUE), (((rt0.c3)|(rt0.c0)) IN ((vt0.c0 IN ()))) FROM vt0;SELECT DISTINCT CAST(((NULL)>(rt0.c0)) AS NUMERIC) FROM vt0, rt0 WHERE (((((((x'') NOT BETWEEN (0xffffffffe39c249e) AND ('836782306')))OR((('') BETWEEN ('K') AND ('ꝯLb敠w')))))OR(NULL))); -- 0ms;
SELECT ((((vt0.c0)GLOB(rt0.c2))) NOT NULL), NULL, COUNT((((0X4baf9d63))<((rt0.c6)))) FROM rt0;SELECT ((((rt0.c4)<>(rt0.c2))) ISNULL) FROM rt0, vt0 ORDER BY (((rt0.c6)) BETWEEN ((((rt0.c2)||(rt0.c3)))) AND ((((((rt0.c2)OR(rt0.c1)))AND(rt0.c4))))); -- 0ms;
SELECT ((rt0.c4 COLLATE NOCASE) NOT BETWEEN (CAST(0.8909852563570394 AS BLOB)) AND (((rt0.c5)*(rt0.c2)))) FROM vt0, rt0 WHERE (((0xffffffff92619bb2) NOTNULL)) LIMIT 1862729059; -- 0ms;
SELECT CASE LIKELIHOOD(vt0.c0, 0.29197312387321295)  WHEN ((rt0.c6) ISNULL) THEN rt0.c4 WHEN CASE WHEN rt0.c1 THEN 0.0 ELSE rt0.c1 END THEN (~ (rt0.c5)) WHEN 0.501069683004697 THEN IFNULL(DISTINCT rt0.c4, rt0.c4) ELSE ((rt0.c3)/(rt0.c3)) END FROM vt0, rt0 WHERE (json_object((x'' IN ('-751716384', x'')), LOWER('')));SELECT DISTINCT ((CAST(rt0.c4 AS INTEGER)) NOT BETWEEN (((rt0.c1)<(rt0.c2))) AND (((rt0.c2) NOT BETWEEN (rt0.c6) AND (vt0.c0)))) FROM rt0 WHERE ((((x'')) NOT BETWEEN (((('tN')OR(x'')))) AND ((((('a4', -1.487220237E9, NULL)) BETWEEN ((x'624a1b9e', '1279530439', NULL)) AND ((x'', '-1196996724', NULL)))))));SELECT DISTINCT ((0X2d529aa8) BETWEEN (974199836) AND (SQLITE_COMPILEOPTION_GET(rt0.c0))) FROM rt0 LIMIT -1935522288 OFFSET 1525857278; -- 0ms;
SELECT UPPER(((((rt0.c2)AND(rt0.c4)))OR(NULL))) FROM rt0, vt0; -- 0ms;
SELECT (~ (((rt0.c2) NOTNULL))), ((rt0.c6) BETWEEN (rt0.c5) AND (rt0.c6)) COLLATE NOCASE, COUNT((~ (rt0.c2))) FROM rt0, vt0 GROUP BY (- ((- (rt0.c4)))); -- 0ms;
SELECT DISTINCT CAST((rt0.c0 IN (rt0.c5)) AS INTEGER) FROM rt0 WHERE (((CASE WHEN 0.9373242566107264 THEN 0.8031712902346901 WHEN 0Xffffffffbffb628c THEN 1515902207 WHEN NULL THEN x'' ELSE 0Xffffffffd856d463 END) IS FALSE)); -- 0ms;
SELECT DISTINCT ((((vt0.c0)OR('NBIs	H[')))OR(((((rt0.c4)OR(rt0.c4)))OR(rt0.c3)))), rt0.c1, CAST((vt0.c0 IN ()) AS BLOB) FROM vt0, rt0 GROUP BY rt0.c3; -- 0ms;
SELECT DISTINCT CAST(CASE rt0.c2  WHEN vt0.c0 THEN rt0.c1 ELSE rt0.c0 END AS BLOB) FROM rt0, vt0 WHERE ((((0.7365892769725971) IS FALSE) IN ())); -- 0ms;
SELECT DISTINCT CASE WHEN ((rt0.c4) BETWEEN (rt0.c3) AND (rt0.c6)) THEN TOTAL(rt0.c2) END FROM rt0 LIMIT 713400847 OFFSET -349434096; -- 0ms;
SELECT DISTINCT SUM((rt0.c4 IN ())) FROM vt0, rt0 GROUP BY rt0.c3 COLLATE RTRIM HAVING ((+ (rt0.c2)) IN ()); -- 0ms;
SELECT DISTINCT ((CASE rt0.c4  WHEN rt0.c2 THEN rt0.c6 WHEN vt0.c0 THEN rt0.c6 WHEN rt0.c2 THEN '-1472093946' WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c6 END) NOT NULL) FROM vt0, rt0 WHERE (CASE x'' COLLATE RTRIM  WHEN ((NULL) NOT BETWEEN (-1.84482376E9) AND (0.035479839768492116)) THEN ((0.4014134780507431)>>(x'')) ELSE '䮍j]ea' END); -- 1ms;
SELECT (((((((((((((rt0.c3)AND(x'')))AND(rt0.c0)))AND(rt0.c6)))OR(rt0.c4)))AND(vt0.c0)))AND(rt0.c6)) IN (CASE rt0.c5  WHEN rt0.c4 THEN rt0.c0 WHEN vt0.c0 THEN rt0.c5 WHEN rt0.c0 THEN rt0.c0 END)) FROM vt0, rt0; -- 0ms;
SELECT DISTINCT rt0.c2 FROM rt0 WHERE (((NULL) BETWEEN (CASE WHEN '-DSo' THEN 0.42352576381293705 END) AND (NULL COLLATE RTRIM))); -- 0ms;
SELECT DISTINCT ((((rt0.c3) NOT BETWEEN (4.4735238E7) AND ('-893496383')))+(((x'') NOTNULL))) FROM rt0, vt0 WHERE (((('Ak' IN ()))LIKE(NULLIF(DISTINCT x'eaa313b1', 0.451261100171622)))); -- 0ms;
SELECT DISTINCT (((vt0.c0 COLLATE BINARY, ((((((((0.565936608456765)OR(rt0.c1)))OR(rt0.c5)))OR(rt0.c5)))OR(rt0.c6)), ((NULL)&(rt0.c4))))>=((((rt0.c2)||(NULL)), ((rt0.c2)<=(rt0.c6)), (((rt0.c3, rt0.c3, rt0.c5))<>((rt0.c2, rt0.c3, vt0.c0)))))) FROM vt0;SELECT SUM((rt0.c2 IN ()) COLLATE BINARY) OVER () FROM vt0 WHERE (((((((',w')AND('-1363600833')))OR(x''))) BETWEEN (((((((((x'')AND(0Xffffffff982d17bb)))AND(0.8940107155864753)))OR('')))AND('\r?'))) AND (CASE 0.26597125732219307  WHEN 0.7169195677869289 THEN NULL END))) ORDER BY (((((rt0.c1))<>((rt0.c0)))) NOT BETWEEN (((NULL)IS(rt0.c0))) AND ((rt0.c3 IN (vt0.c0)))), (-1.132975819E9 IN ()) DESC;SELECT DISTINCT CAST((+ (rt0.c5)) AS TEXT) FROM vt0, rt0 WHERE ((((((((((('(k')AND(0.3924677745185907)))AND(0.8835938674198095)))AND(0Xffffffffe39c249e)))OR(6961610)))<(x''))); -- 0ms;
SELECT ((((rt0.c4) NOT BETWEEN (vt0.c0) AND (rt0.c1)))>>(IFNULL(DISTINCT rt0.c5, '844222543'))) FROM rt0;SELECT CASE WHEN TOTAL(rt0.c4) THEN -836180937 ELSE (((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c6))) END, ((0.3975089882514463) NOTNULL), x'' FROM rt0 WHERE ((((((''))<=(('QU')))) BETWEEN (NULLIF(DISTINCT x'', '')) AND (LIKELY(DISTINCT '0.31586368850992097')))); -- 0ms;
SELECT DISTINCT (~ (rt0.c1 COLLATE BINARY)), rt0.c2, (((vt0.c0, rt0.c5, rt0.c2)) NOT BETWEEN ((CAST(rt0.c2 AS BLOB), ((((rt0.c6)AND(vt0.c0)))AND(vt0.c0)), CASE 0.5018736689571993  WHEN rt0.c5 THEN rt0.c5 END)) AND ((rt0.c6, ((rt0.c5)-(rt0.c3)), ((rt0.c5)LIKE(rt0.c0))))) FROM rt0 WHERE ((- (COALESCE(0.5565044574828267, 0.1882405795705443)))) LIMIT 889763647;SELECT DISTINCT (+ (((((rt0.c5)AND(rt0.c4)))AND(rt0.c0)))), (((rt0.c4)) BETWEEN ((((((rt0.c4)AND(rt0.c5)))OR(rt0.c2)))) AND ((((vt0.c0)AND(rt0.c5))))), CASE WHEN ((((rt0.c4)OR(rt0.c6)))AND(vt0.c0)) THEN ((((rt0.c1)AND(rt0.c6)))OR(rt0.c6)) WHEN HEX(x'cad5') THEN COUNT(*) WHEN rt0.c1 COLLATE NOCASE THEN ((rt0.c2)&(vt0.c0)) ELSE (724151388 IN ()) END FROM rt0 WHERE (((('44735238' IN (1776057934)))AND((~ ('1206929369')))));SELECT COUNT(*) OVER () FROM rt0 WHERE ((+ ((((((((((((('940586302')AND(0.8843656011841555)))AND(1.764445106E9)))OR(x'')))AND(x'')))OR(x'dd44')))OR('1731642895'))))); -- 0ms;
SELECT ALL CAST(SUM(rt0.c3) AS BLOB) FROM rt0; -- 0ms;
SELECT DISTINCT (((((rt0.c0) NOTNULL)))>=((CAST(rt0.c0 AS INTEGER)))), x'', COUNT(GROUP_CONCAT(rt0.c3 COLLATE NOCASE)) FROM rt0;SELECT DISTINCT CAST(rt0.c4 AS INTEGER) COLLATE RTRIM FROM vt0, rt0 ORDER BY ((~ (rt0.c2)) IN (((rt0.c1)<(rt0.c2)), ((0.5568410440975385)<(rt0.c3)), ((((rt0.c3)AND(vt0.c0)))OR(rt0.c3)))) ASC; -- 0ms;
SELECT DISTINCT ((((rt0.c1))!=((rt0.c0))) IN ()) FROM rt0, vt0 WHERE (CASE LIKELIHOOD(2060470004, 0.1662908433028556)  WHEN '' THEN x'' WHEN ((((0.09464549325305638)OR('-1110354871')))OR(x'')) THEN ((NULL)|(0.02607285755947142)) WHEN (NOT (x'')) THEN ((0Xffffffff8602d085)LIKE(NULL)) END); -- 0ms;
SELECT DISTINCT CASE CASE WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c4 WHEN rt0.c4 THEN -1432147785 END  WHEN vt0.c0 COLLATE NOCASE THEN (- (rt0.c2)) END FROM rt0, vt0 WHERE (((((((((x'')OR(x'')))AND(x'4712')))AND(NULL)))AND('k!f9\')) COLLATE BINARY) LIMIT 1981486932 OFFSET 1479814769; -- 0ms;
SELECT DISTINCT GROUP_CONCAT(CAST(rt0.c6 AS BLOB)) OVER (), (~ ((((rt0.c6))!=((rt0.c4))))), LAST_INSERT_ROWID() FROM rt0; -- 1ms;
SELECT DISTINCT CAST(((((((((rt0.c5)OR(rt0.c5)))OR(rt0.c6)))AND(rt0.c2)))OR(rt0.c4)) AS BLOB) FROM vt0, rt0; -- 0ms;
SELECT DISTINCT ((CAST(vt0.c0 AS INTEGER))<=(((rt0.c1)%(rt0.c1)))) FROM rt0 ORDER BY (((rt0.c6) IS TRUE) IN ());SELECT DISTINCT COUNT(('-2087713819' IN ())) OVER (), (- (((rt0.c0) IS TRUE))), ((COUNT(*))*(((((((((rt0.c6)AND(rt0.c5)))AND(rt0.c1)))AND(rt0.c5)))AND(x'facb11f6')))) FROM rt0; -- 0ms;
SELECT DISTINCT ((((CASE 0.19451259613057892  WHEN rt0.c0 THEN rt0.c5 WHEN vt0.c0 THEN rt0.c6 WHEN rt0.c6 THEN rt0.c5 END)AND(CAST(vt0.c0 AS TEXT))))AND((rt0.c0 IN ()))) FROM vt0, rt0 NOT INDEXED; -- 0ms;
SELECT CASE WHEN ((rt0.c5) NOT BETWEEN (rt0.c0) AND (rt0.c4)) THEN ((((vt0.c0)AND(rt0.c3)))OR(rt0.c5)) ELSE rt0.c4 END FROM vt0, rt0 WHERE (((CAST(0Xffffffffa75ad1f3 AS REAL))>=(NULL COLLATE BINARY))) GROUP BY (NOT (CASE rt0.c3  WHEN rt0.c5 THEN rt0.c3 END)) HAVING (~ (((rt0.c3)!=(rt0.c4)))) LIMIT -929538560; -- 0ms;
SELECT GROUP_CONCAT(((rt0.c1)GLOB(rt0.c4))) OVER () FROM vt0, rt0; -- 0ms;
SELECT DISTINCT TRIM(DISTINCT ((rt0.c2) NOTNULL), CAST('hX' AS TEXT)) FROM rt0; -- 0ms;
SELECT (LTRIM(rt0.c3, rt0.c4) IN ()), ((CASE rt0.c6  WHEN x'' THEN rt0.c3 END) BETWEEN ((((('1408973353')OR(rt0.c4)))OR(rt0.c6))) AND (((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c1)))), CAST(((vt0.c0)%(rt0.c0)) AS REAL) FROM rt0 WHERE (CASE WHEN x'' THEN NULL END COLLATE BINARY) LIMIT 1562829294 OFFSET -1427235164;SELECT ALL vt0.c0 FROM vt0, rt0 WHERE (((('ꝯLb敠w' IN ())) NOT BETWEEN ((('3Afol)䯁T')&(x''))) AND (NULLIF(DISTINCT 0.7683119065323144, NULL)))) LIMIT 735344138; -- 0ms;
SELECT ALL COUNT(*) OVER () FROM rt0; -- 1ms;
SELECT ALL ((CASE rt0.c0  WHEN rt0.c2 THEN rt0.c5 ELSE rt0.c4 END) IS FALSE) FROM rt0, vt0 WHERE (((TRIM(DISTINCT 0.43847039372178753))LIKE(CASE WHEN x'' THEN NULL WHEN 'Wbn' THEN 247895668 WHEN 0.7755037401317759 THEN NULL WHEN x'' THEN '1826528316' WHEN '-1439596866' THEN x'' ELSE '121144369' END))); -- 0ms;
SELECT DISTINCT (- (((rt0.c5)<(rt0.c4)))), CAST('Ns99vU' AS BLOB), MAX(MAX((rt0.c1 IN (rt0.c1, rt0.c3)))) FROM vt0, rt0 WHERE (((((((('-856721328', x'', x'99b2'))=(('', x'', NULL))))OR((('-1236501422') NOTNULL))))AND(load_extension(NULL, '1764445106')))) GROUP BY (((('0.5886003158899662') BETWEEN (rt0.c6) AND (rt0.c0))) IS TRUE);SELECT ALL ((rt0.c2 COLLATE BINARY) IS TRUE) FROM rt0, vt0 ORDER BY (((((- (rt0.c4)))AND(((((rt0.c4)AND('X\nlj]邟3')))OR(vt0.c0)))))OR(ABS(rt0.c2))), ((((rt0.c1) IS TRUE))%(((vt0.c0) NOT BETWEEN (rt0.c5) AND (rt0.c5)))); -- 0ms;
SELECT (+ (((rt0.c4) NOT NULL))), DENSE_RANK() OVER (), ((((rt0.c4)AND(rt0.c4)))OR(vt0.c0)) COLLATE RTRIM FROM rt0 GROUP BY ((((rt0.c4) NOT BETWEEN (rt0.c4) AND (vt0.c0))) NOT NULL);SELECT DISTINCT (((((rt0.c0) IS TRUE)))<=(((((rt0.c3, rt0.c1, rt0.c4)) BETWEEN ((rt0.c6, rt0.c1, 0.7969858462595301)) AND ((0.7377191982542569, rt0.c1, rt0.c0)))))) FROM vt0;SELECT DISTINCT rt0.c4 FROM rt0, vt0; -- 0ms;
SELECT ALL (((~ (rt0.c2)))<=(((rt0.c5)AND(rt0.c0)))) FROM rt0, vt0; -- 0ms;
SELECT DISTINCT CASE ((vt0.c0) ISNULL)  WHEN ((-1427604041) NOT BETWEEN (rt0.c4) AND (rt0.c0)) THEN ((vt0.c0)/(rt0.c0)) ELSE highlight(rt0.c4, '', rt0.c4, 'P+䮲<') END FROM rt0, vt0 WHERE (json_object(0.7213693376677852, ((-101350002)AND(0.7938133971345533)), NULL, (((('-768145713')OR(x'a727')))AND(0Xffffffffda9a2833)))) ORDER BY ((rt0.c3 COLLATE BINARY) BETWEEN (((rt0.c1) BETWEEN (rt0.c6) AND (rt0.c0))) AND (-926145742)) DESC  NULLS FIRST;SELECT ALL (((rt0.c3)) BETWEEN ((rt0.c6)) AND (('Q%Fg\n'))) COLLATE RTRIM COLLATE NOCASE FROM vt0, rt0 EXCEPT SELECT DISTINCT ((SUM(vt0.c0)) NOT NULL) FROM rt0 WHERE (((((0.0059344621444288315)<=(0.2870886811220045))) BETWEEN ((('')&(-2106990468))) AND (NULL))) UNION ALL SELECT DISTINCT PERCENT_RANK() OVER () FROM rt0, vt0;SELECT DISTINCT (+ ((NOT (rt0.c0)))) FROM vt0;SELECT DISTINCT ((rt0.c4) NOT BETWEEN (rt0.c3) AND (rt0.c5)) COLLATE RTRIM FROM rt0 WHERE (x''); -- 0ms;
SELECT CAST(CAST(rt0.c1 AS NUMERIC) AS INTEGER) FROM vt0 WHERE ((((x'90482698' IN ()))|((- (-30146218)))));SELECT DISTINCT ((CAST(rt0.c2 AS INTEGER)) ISNULL) FROM vt0, rt0; -- 0ms;
SELECT DISTINCT ((UPPER(DISTINCT rt0.c2)) IS FALSE) FROM rt0 WHERE (((CAST(x'' AS BLOB))IS NOT((((0.302464962289102)) BETWEEN ((x'')) AND ((8.14538414E8)))))); -- 0ms;
SELECT IFNULL(DISTINCT CAST(rt0.c1 AS BLOB), MIN(rt0.c3)), HEX((- (rt0.c3))), ((((((rt0.c6, rt0.c3, rt0.c2))<=((rt0.c5, rt0.c4, 0.5903471971499968)))))>=((COUNT(rt0.c4)))), (((rt0.c2)) NOT BETWEEN ((((rt0.c5) ISNULL))) AND ((COUNT(*)))), ((vt0.c0) BETWEEN ((((-2.08416724E8)) BETWEEN ((0.7886814502342271)) AND ((rt0.c3)))) AND ((+ (rt0.c4)))) FROM rt0 WHERE ((+ ((('-1487942957')<('-1e500')))));SELECT ((rt0.c6) IS FALSE), (+ (((vt0.c0)<=(rt0.c0)))), rt0.c0 FROM rt0, vt0 WHERE ((((- (-5.96275041E8)))==(CAST(x'' AS INTEGER)))); -- 0ms;
SELECT ALL CASE WHEN (((rt0.c3))<>((rt0.c0))) THEN ((rt0.c6) BETWEEN (rt0.c1) AND (x'')) ELSE (~ (rt0.c5)) END, 0xffffffffeee5f101, ((((((rt0.c4)&(vt0.c0)))AND((rt0.c5 IN ()))))OR(((rt0.c6)GLOB(0.3090570301586293)))), rt0.c0, ((rt0.c0) IS TRUE), CASE WHEN (((rt0.c3, rt0.c3, rt0.c4))<=((vt0.c0, rt0.c2, -23990202))) THEN 0x452e0f2f ELSE ((((vt0.c0)AND(rt0.c2)))OR(rt0.c6)) END, (((rt0.c0) BETWEEN (rt0.c3) AND (vt0.c0)) IN (MAX(rt0.c4))) FROM vt0;SELECT DISTINCT ((CAST(rt0.c2 AS INTEGER))>>(CAST(rt0.c1 AS REAL))), (((('1826977959') NOT BETWEEN (rt0.c6) AND (rt0.c1)))<(CASE WHEN rt0.c3 THEN rt0.c0 END)), ((MIN(rt0.c2))LIKE((((rt0.c1))<=((rt0.c6))))) FROM rt0; -- 0ms;
SELECT CASE WHEN rt0.c2 COLLATE BINARY THEN ((rt0.c6)IS NOT(rt0.c6)) END, NULL, rt0.c6 FROM rt0, vt0; -- 0ms;
SELECT DISTINCT SUM(((rt0.c2)==(rt0.c6))) OVER (), (((vt0.c0, rt0.c1, rt0.c6)) BETWEEN ((('538887351' IN ('-1236501422', rt0.c1)), CAST(rt0.c1 AS REAL), rt0.c0 COLLATE RTRIM)) AND ((((NULL) ISNULL), ((rt0.c0) ISNULL), ((rt0.c2)IS(rt0.c5))))), COUNT(*) FROM rt0;SELECT DISTINCT (((rt0.c2)) BETWEEN ((((rt0.c4) BETWEEN (rt0.c2) AND (rt0.c0)))) AND ((((rt0.c1) IS TRUE)))) FROM rt0; -- 0ms;
SELECT DISTINCT CASE WHEN rt0.c5 THEN -929538560 END COLLATE NOCASE FROM vt0 WHERE ((+ (CAST(NULL AS BLOB))));SELECT ALL ((((COUNT(*))AND((- (rt0.c2)))))OR((rt0.c3 IN ()))) FROM rt0; -- 0ms;
SELECT ALL HEX(DISTINCT x'' COLLATE RTRIM) FROM rt0 GROUP BY ((rt0.c1 COLLATE RTRIM)<>(CAST(rt0.c5 AS TEXT))), ((rt0.c1)|(rt0.c4)) COLLATE NOCASE, ((((x'')AND('0.024916087563926714')))AND(((rt0.c0)<>(rt0.c3)))); -- 0ms;
SELECT ALL CAST(x'7cf7' AS TEXT), ((CASE WHEN rt0.c1 THEN rt0.c6 END) IS FALSE), ((x'')>>(rt0.c3)), (NOT (NULL COLLATE BINARY)), AVG(((rt0.c5)AND(rt0.c4))) OVER () FROM rt0; -- 0ms;
SELECT ALL (- ((- (rt0.c4)))), vt0.c0, 0.5353204990570013 FROM vt0;SELECT DISTINCT GROUP_CONCAT((rt0.c6 IN (''))) FROM rt0, vt0; -- 0ms;
SELECT (((~ (rt0.c1)))/(CAST(rt0.c0 AS TEXT))), CASE WHEN ((vt0.c0)*(rt0.c1)) THEN CASE rt0.c5  WHEN vt0.c0 THEN rt0.c0 ELSE rt0.c6 END ELSE ((rt0.c4) NOTNULL) END, ((rt0.c6)==(rt0.c6)) COLLATE RTRIM, (((rt0.c4, rt0.c0, rt0.c6, rt0.c2, vt0.c0)) NOT BETWEEN ((CAST(rt0.c5 AS INTEGER), rt0.c4, ((rt0.c0) NOTNULL), CASE rt0.c1  WHEN rt0.c2 THEN rt0.c4 END, rt0.c4)) AND (((((rt0.c5))!=((rt0.c0))), ((rt0.c4) NOTNULL), ((vt0.c0) BETWEEN (rt0.c4) AND (rt0.c2)), CAST(vt0.c0 AS TEXT), rt0.c5 COLLATE BINARY))), json_object((NOT (rt0.c0)), ((((rt0.c3)AND(rt0.c3)))OR(vt0.c0))) FROM rt0, vt0 WHERE (json_type('\n뿤e<'));SELECT DISTINCT CASE ((rt0.c4) IS TRUE)  WHEN COUNT(*) THEN NULLIF(rt0.c6, rt0.c1) ELSE ((rt0.c2)>('-1636541939')) END FROM rt0, vt0; -- 0ms;
SELECT DISTINCT ((LOWER(rt0.c6)) BETWEEN (CAST(rt0.c6 AS NUMERIC)) AND (0.12852315855296237 COLLATE BINARY)), rt0.c2, TRIM(((rt0.c6) NOT BETWEEN (x'') AND (rt0.c2))), CAST(CASE rt0.c1  WHEN rt0.c6 THEN rt0.c6 END AS NUMERIC), COUNT(((((rt0.c1)AND(735344138)))OR(vt0.c0))) FROM vt0;SELECT DISTINCT SUM(CASE WHEN rt0.c4 THEN rt0.c5 END) FROM vt0 WHERE ((((0.163552717903223))>=((x'262b'))) COLLATE BINARY) GROUP BY CAST(((rt0.c6)>>(rt0.c0)) AS INTEGER), (((rt0.c2)) NOT BETWEEN ((rt0.c4 COLLATE NOCASE)) AND ((CAST(rt0.c6 AS TEXT)))), ((((rt0.c0)!=(rt0.c2)))||(((((rt0.c5)AND(rt0.c1)))OR(vt0.c0)))) HAVING ((AVG(rt0.c5)) NOT BETWEEN (((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1))) AND (LIKELIHOOD(rt0.c4, 0.9954409511598522)));SELECT COUNT(-1522329244) FROM rt0; -- 0ms;
SELECT RANK() OVER () FROM vt0 WHERE (CAST((x'b1dd' IN (x'')) AS TEXT)); -- 0ms;
SELECT CASE COALESCE(rt0.c3, rt0.c3)  WHEN ((((rt0.c4)AND(vt0.c0)))OR(0.15532851268329395)) THEN rt0.c5 COLLATE NOCASE ELSE CASE x''  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c0 END END, json_quote(((((rt0.c6)OR(rt0.c6)))AND(rt0.c4))), CAST((rt0.c5 IN ()) AS REAL) FROM vt0 LEFT OUTER JOIN rt0 ON ((((rt0.c6)||(rt0.c0)))&(CASE WHEN rt0.c5 THEN -2077406888 ELSE rt0.c5 END)); -- 0ms;
SELECT rt0.c4, GROUP_CONCAT(((rt0.c5)IS(rt0.c2))) OVER (), COUNT(*) FILTER(WHERE CAST((0.5544390253547798 IN (rt0.c2)) AS TEXT)) OVER () FROM vt0, rt0; -- 0ms;
SELECT DISTINCT HEX(CASE rt0.c6  WHEN -1.522329244E9 THEN rt0.c3 END) FROM vt0, rt0 GROUP BY ((((rt0.c4)/(NULL))) BETWEEN (((((rt0.c5)OR(rt0.c4)))AND(rt0.c3))) AND ('ᥤ衝')), (((rt0.c1)) BETWEEN ((rt0.c3)) AND ((CASE WHEN rt0.c6 THEN rt0.c0 END))), ((rt0.c2 IN ()) IN ()) HAVING (((((NOT (rt0.c3)))AND(AVG(rt0.c5))))OR((((rt0.c0)) NOT BETWEEN ((rt0.c5)) AND ((rt0.c0))))); -- 0ms;
SELECT rt0.c2 COLLATE NOCASE FROM vt0, rt0 WHERE (((((2122688719)) BETWEEN (('')) AND ((x''))) IN ())); -- 0ms;
SELECT DISTINCT CASE WHEN CASE WHEN rt0.c5 THEN rt0.c5 END THEN ((rt0.c6) IS FALSE) END FROM vt0 WHERE ('-1773338789' COLLATE RTRIM) GROUP BY (((((rt0.c2)) BETWEEN ((rt0.c5)) AND ((rt0.c3)))) ISNULL);SELECT COUNT(0.6245474694388214) OVER (), AVG(rt0.c5) FILTER(WHERE rt0.c1) OVER (), COUNT(*) OVER () FROM rt0 WHERE (UNLIKELY(((7.80236879E8) NOT NULL))); -- 0ms;
SELECT ALL TRIM((((rt0.c2))<((rt0.c0)))) FROM rt0 WHERE (((CASE '⥭Q)mamF'  WHEN -6.65398173E8 THEN 0.9524669545615028 END)=(0X308cdeae))); -- 0ms;
SELECT ALL ((rt0.c3) IS TRUE) COLLATE BINARY, ((((((rt0.c5)OR(rt0.c1)))AND(vt0.c0))) ISNULL), (NOT (LIKELY(DISTINCT rt0.c1))) FROM rt0, vt0 WHERE (((((CASE WHEN x'bddb126b' THEN '' WHEN 0.23416545382235876 THEN NULL WHEN '1836822325' THEN '쒷*' END)AND(CAST(NULL AS BLOB))))OR(x'9f16' COLLATE BINARY))); -- 0ms;
SELECT CAST((NULL IN ()) AS BLOB), GROUP_CONCAT(((rt0.c2)OR(rt0.c6))) OVER (), LAST_INSERT_ROWID() COLLATE RTRIM, NTILE(CAST(TRIM(rt0.c1) AS NUMERIC)) OVER (), ((HEX(rt0.c2)) NOT NULL) FROM rt0, vt0; -- 0ms;
SELECT DISTINCT TOTAL((('-1221659762') BETWEEN (rt0.c1) AND (rt0.c2))) FROM rt0, vt0 WHERE (COALESCE(DISTINCT CAST(x'' AS TEXT), NULL, CAST(NULL AS TEXT), (('')AND(NULL)))) GROUP BY (NOT ((((rt0.c0, rt0.c3, rt0.c2))<=((rt0.c6, rt0.c6, rt0.c1))))); -- 0ms;
SELECT ALL ((CASE WHEN rt0.c5 THEN vt0.c0 END)<<(TOTAL(vt0.c0))), ((((CAST(NULL AS REAL))AND(CASE rt0.c3  WHEN vt0.c0 THEN rt0.c3 END)))OR(((rt0.c0)GLOB(rt0.c1)))), ((CAST(rt0.c4 AS NUMERIC))*(rt0.c5 COLLATE RTRIM)) FROM vt0, rt0 WHERE (MAX((NOT (1920688286)), ((((NULL)AND(0.30346166016747056)))AND(0.21975577613165542)))); -- 0ms;
SELECT DISTINCT UPPER(CAST(rt0.c1 AS TEXT)), IFNULL(((rt0.c3) IS TRUE), CASE rt0.c0  WHEN rt0.c5 THEN 'Aꅧ' END), (((rt0.c5)/(vt0.c0)) IN (((rt0.c0)<(rt0.c4)))) FROM rt0, vt0 GROUP BY ((((((rt0.c0)AND(vt0.c0)))AND(((vt0.c0)&(vt0.c0)))))OR(((rt0.c6) NOT NULL))) HAVING ((SUM(rt0.c4))+(((0.17931622339616027)=(rt0.c5)))); -- 1ms;
SELECT (((((+ (rt0.c3)))AND(CAST(rt0.c3 AS INTEGER))))OR(x'')) FROM rt0; -- 0ms;
SELECT DISTINCT ((CASE 0x340fd533  WHEN vt0.c0 THEN rt0.c4 END) IS FALSE) FROM vt0, rt0 WHERE (CASE ((x'7b9e')<<(x'd5f893c9c925'))  WHEN CASE x'fe58'  WHEN x'' THEN x'' WHEN 0.9959844549574747 THEN x'' WHEN 'uY' THEN x'6d30' ELSE '1611029773' END THEN ((x'695d') ISNULL) WHEN ((('-280364157')) BETWEEN ((x'3f40')) AND (('z4x'))) THEN (NULL IN ()) WHEN ((0.1750073631712401)*(NULL)) THEN (NULL IN ()) END); -- 0ms;
SELECT ALL MAX((rt0.c3 IN ())) FROM vt0 WHERE (CASE ((((((((x'cb66')AND(x'')))OR('')))OR('-1810150272')))OR(NULL))  WHEN ((NULL) NOTNULL) THEN CASE WHEN 0Xfffffffff8ab819d THEN NULL END WHEN '-1e500' THEN ('-1180231199' IN ()) WHEN CAST(-1.915171878E9 AS TEXT) THEN NULLIF(1.983005963E9, '-155536851') END); -- 0ms;
SELECT DISTINCT ((((rt0.c6)<(rt0.c5)))LIKE(((rt0.c6) BETWEEN (rt0.c2) AND (vt0.c0)))), ((COUNT(rt0.c6)) IS FALSE), ((((((rt0.c0)OR(vt0.c0)))OR(rt0.c1))) ISNULL) FROM vt0;SELECT DISTINCT ((COUNT(vt0.c0)) IS FALSE) FROM vt0, rt0 LIMIT 1826528316; -- 0ms;
SELECT DISTINCT TOTAL(((rt0.c5) BETWEEN (vt0.c0) AND (rt0.c0))) FROM vt0 WHERE (CAST(0Xe696ccb AS TEXT));SELECT DISTINCT ((((((((((rt0.c0)AND(rt0.c3)))AND(rt0.c5)))AND(rt0.c6)))OR(rt0.c4))) BETWEEN (((rt0.c0)<=(vt0.c0))) AND (((rt0.c2) ISNULL))) FROM rt0 WHERE (((('-847863318') ISNULL) IN ()));SELECT DISTINCT (NOT (CAST(rt0.c5 AS BLOB))) FROM vt0 WHERE (((0.3369155833780565)LIKE(((x'') NOT NULL))));SELECT DISTINCT AVG(((((rt0.c6)OR(rt0.c4)))AND(vt0.c0))) OVER (), CHAR(((0.8250150478180288)>(vt0.c0)), rt0.c3, rt0.c2, ((rt0.c2)+(rt0.c1)), CAST(vt0.c0 AS NUMERIC)), ((rt0.c0) IS FALSE) COLLATE BINARY FROM rt0, vt0 WHERE (0Xffffffff855ad9d3) LIMIT -1491210801; -- 0ms;
SELECT ALL CAST(((((rt0.c4)AND(rt0.c5)))OR(rt0.c0)) AS BLOB) FROM rt0, vt0; -- 0ms;
SELECT DISTINCT (((rt0.c2)) BETWEEN ((((rt0.c2) NOTNULL))) AND ((AVG(rt0.c0)))) FROM rt0, vt0 WHERE ((((('-1508000553')||(0.6570346427275344))) IS FALSE)) LIMIT -806220159; -- 0ms;
SELECT (TOTAL(rt0.c0) IN (LAST_INSERT_ROWID())) FROM rt0, vt0; -- 0ms;
SELECT DISTINCT PERCENT_RANK() OVER ( ORDER BY ((((((((HEX(rt0.c6))AND((rt0.c5 IN (rt0.c4)))))AND((((vt0.c0)) NOT BETWEEN ((rt0.c3)) AND ((x''))))))OR(LIKELIHOOD(DISTINCT rt0.c3, 0.6480521493672637))))AND(CAST(rt0.c4 AS TEXT)))  NULLS LAST RANGE BETWEEN (((rt0.c0) NOT BETWEEN (rt0.c4) AND (rt0.c3)) IN ()) PRECEDING AND  UNBOUNDED FOLLOWING EXCLUDE NO OTHERS) FROM vt0, rt0 WHERE (((((x'') IS TRUE))&(1.826528316E9 COLLATE NOCASE))); -- 0ms;
SELECT DISTINCT COUNT(CASE rt0.c6  WHEN vt0.c0 THEN vt0.c0 ELSE rt0.c1 END) FROM vt0, rt0 WHERE (CAST(((NULL) BETWEEN ('1071443898') AND (0.04538778652019215)) AS REAL)) GROUP BY ((((rt0.c5)!=(rt0.c3)))>=((~ (rt0.c5)))), CASE WHEN rt0.c2 THEN (rt0.c4 IN ()) WHEN rt0.c2 THEN CAST(rt0.c5 AS NUMERIC) WHEN CAST(rt0.c0 AS TEXT) THEN (rt0.c6 IN (rt0.c1)) ELSE '-324230506' END, ((rt0.c5)<(vt0.c0)) COLLATE NOCASE, (((((rt0.c0)>>(rt0.c3)), ((rt0.c5) BETWEEN (rt0.c3) AND (rt0.c1)), (rt0.c2 IN ())))!=(((((vt0.c0))>((rt0.c5))), (- (rt0.c3)), ((rt0.c0)=(rt0.c0))))), ((((((rt0.c3)%(rt0.c0)))AND(json_object(rt0.c2, rt0.c4))))AND(vt0.c0 COLLATE NOCASE)) HAVING ((NULL)GLOB((rt0.c2 IN ()))); -- 0ms;
SELECT (((NOT (rt0.c6)))>(CASE WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c4 THEN rt0.c2 WHEN rt0.c0 THEN 0.22362058510529847 END)), CAST((((rt0.c1, rt0.c2, NULL)) NOT BETWEEN ((rt0.c0, vt0.c0, vt0.c0)) AND ((rt0.c2, rt0.c6, rt0.c1))) AS TEXT), (+ (rt0.c6)) FROM vt0 WHERE (((CAST(x'' AS TEXT))>=(CAST(0.8611322897966374 AS NUMERIC))));SELECT DISTINCT ((((((rt0.c1)AND(NULL)))OR(rt0.c3)))OR(((rt0.c0) NOTNULL))) FROM vt0, rt0 LIMIT 44735238; -- 0ms;
SELECT rt0.c0 FROM rt0, vt0 WHERE (IFNULL((- ('')), ((NULL) BETWEEN (1.74197038E9) AND ('0.27179044827652155')))) GROUP BY (((((((rt0.c0, rt0.c6, rt0.c0))>=((rt0.c4, rt0.c1, rt0.c0))))OR(((1.026031497E9)>=(rt0.c0)))))AND(((rt0.c5)GLOB(rt0.c1)))); -- 0ms;
SELECT DISTINCT NULL, UNLIKELY((('U0rH%') NOTNULL)), SUM(CAST(rt0.c3 AS INTEGER)) OVER () FROM rt0 WHERE (((((('0.3826134792817162')OR(0.45953067830574734)))AND('|l')) IN ((- (0.2515630593549797))))); -- 0ms;
SELECT CAST(x'2089' AS REAL) COLLATE BINARY FROM rt0, vt0 WHERE ((((NULL, x'', 0Xffffffffd06ce580))>=((x'', x'0a74', NULL))) COLLATE RTRIM COLLATE RTRIM); -- 0ms;
SELECT DISTINCT ((CASE rt0.c0  WHEN rt0.c5 THEN 0.08275934583952671 ELSE rt0.c0 END) NOT BETWEEN (((rt0.c2)&(''))) AND (((vt0.c0) NOT BETWEEN (0.29820329675369484) AND (vt0.c0)))) FROM vt0 WHERE (((UNLIKELY(NULL))<(((1.238534237E9) BETWEEN (-1115011746) AND (x''))))) LIMIT -1324630269;SELECT (rt0.c4 IN (vt0.c0)) COLLATE NOCASE FROM rt0, vt0; -- 0ms;
SELECT DISTINCT (((((vt0.c0 IN ()))OR(((rt0.c5)>(rt0.c3)))))OR((rt0.c0 IN ()))), (((((rt0.c4)!=(rt0.c5)), ((rt0.c1) IS FALSE), CASE rt0.c5  WHEN rt0.c4 THEN rt0.c4 WHEN rt0.c4 THEN rt0.c5 WHEN rt0.c4 THEN rt0.c6 WHEN rt0.c2 THEN rt0.c4 WHEN rt0.c3 THEN rt0.c5 END))<(((0.3659706425230296 IN ()), HEX(DISTINCT vt0.c0), ((0.8091269302201577)<>(rt0.c3))))), ((((((((rt0.c4)OR(rt0.c4)))OR(rt0.c2)))AND(CHAR(rt0.c1))))AND(CASE WHEN rt0.c0 THEN vt0.c0 ELSE rt0.c0 END)), (((vt0.c0)) NOT BETWEEN ((rt0.c5)) AND ((((rt0.c2)==(rt0.c5))))), x'' FROM vt0 WHERE ((NULL IN (((0.31586368850992097)<=(NULL)), (('-372035571')>>(0.4467580054635134))))) GROUP BY CASE WHEN rt0.c6 COLLATE NOCASE THEN (rt0.c3 IN (rt0.c5, rt0.c6, rt0.c3)) END, CASE NULL COLLATE NOCASE  WHEN ((((((((rt0.c0)AND(rt0.c6)))OR(rt0.c0)))OR(vt0.c0)))OR(rt0.c4)) THEN CAST(rt0.c5 AS NUMERIC) ELSE rt0.c0 COLLATE NOCASE END, ((NULLIF(DISTINCT vt0.c0, -1807598630)) IS TRUE) HAVING LIKELIHOOD(((rt0.c0)&(rt0.c1)), 0.45914306659452886);SELECT DISTINCT (~ (CASE rt0.c4  WHEN rt0.c2 THEN vt0.c0 ELSE vt0.c0 END)) FROM rt0;SELECT ((SUM(rt0.c3))<<(HEX(rt0.c0))) FROM vt0, rt0 ORDER BY ((CASE rt0.c3  WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c1 END)>>(((rt0.c4)&(rt0.c4)))) DESC  NULLS FIRST; -- 0ms;
SELECT ALL NULL FROM rt0; -- 0ms;
SELECT DISTINCT 0xfffffffffe91f046 FROM vt0 WHERE (COALESCE((('-1860916791')-(x'')), CAST(x'' AS NUMERIC), ((0.2698920267317063) NOT BETWEEN (x'') AND ('1920688286')), (('0.3318622787288582') BETWEEN ('600280511') AND ('1981486932')), json_valid(''), LOWER(DISTINCT 0.8376371220549133))) LIMIT 1282172197; -- 0ms;
SELECT DISTINCT TOTAL(((rt0.c0)<<(rt0.c2))) FROM rt0 WHERE (((CASE x'5320'  WHEN x'' THEN NULL END) NOT BETWEEN ((('1278033701') IS TRUE)) AND (LOWER(x'2550')))); -- 0ms;
SELECT ALL COUNT((~ (rt0.c4))) OVER ( ORDER BY ((rt0.c5 COLLATE NOCASE)/(((rt0.c5) BETWEEN (rt0.c4) AND (rt0.c6)))) ASC  NULLS FIRST) FROM vt0;SELECT rt0.c3 FROM vt0, rt0 WHERE (((((((0.5965715375768343)OR('-23967689')))OR('wuV|MAd)7')))+(json_array(0.01397820224529267, NULL, 0.015917626502085724, '-290173193', x'', NULL))));SELECT CAST(ROUND(rt0.c4, rt0.c6) AS NUMERIC) FROM vt0, rt0 WHERE (((('1740903129')) BETWEEN ((CAST('1196902813' AS TEXT))) AND ((LIKELIHOOD(DISTINCT NULL, 0.19882897408919897))))); -- 0ms;
SELECT ((((((((rt0.c1)AND(rt0.c4)))AND(rt0.c1)))AND(((rt0.c4) NOT NULL))))OR(0.47236183469013804)) FROM rt0, vt0; -- 0ms;
SELECT ALL x'' FROM vt0, rt0 WHERE ((((((0.7094150662479836)AND(NULL)))OR(0X13673601)) IN ())); -- 0ms;
SELECT DISTINCT (((rt0.c6) NOTNULL) IN (rt0.c6 COLLATE RTRIM)) FROM rt0; -- 0ms;
SELECT DISTINCT rt0.c3 FROM vt0, rt0 WHERE ((((((((((~ (x'')))AND(CAST(0.14153042433035679 AS TEXT))))OR((- (0X5af2bbfe)))))AND(NULL)))OR(CAST(0.31586368850992097 AS INTEGER)))); -- 0ms;
SELECT DISTINCT (- (CASE rt0.c4  WHEN rt0.c6 THEN rt0.c6 ELSE rt0.c4 END)) FROM vt0 WHERE (CAST(((NULL) ISNULL) AS INTEGER));SELECT DISTINCT NULLIF(0.24329571407966144, ((rt0.c6) ISNULL)), ((MAX(rt0.c3))||(AVG(rt0.c3))), CAST(CAST(x'' AS INTEGER) AS BLOB) FROM vt0, rt0 WHERE (((TOTAL_CHANGES()) IS FALSE)) ORDER BY (((rt0.c6)) BETWEEN (((rt0.c5 IN ()))) AND ((CAST(rt0.c6 AS NUMERIC))))  NULLS FIRST, CAST((+ (rt0.c0)) AS NUMERIC)  NULLS LAST; -- 0ms;
SELECT DISTINCT CAST(CASE rt0.c6  WHEN rt0.c5 THEN rt0.c0 WHEN rt0.c4 THEN vt0.c0 WHEN vt0.c0 THEN rt0.c3 END AS TEXT) FROM rt0, vt0 NOT INDEXED WHERE (((((x'')AND(((1369995358) IS FALSE))))AND((NOT (x'10c4'))))); -- 0ms;
SELECT 0x31e048e2 FROM vt0; -- 0ms;
SELECT DISTINCT (NOT ((((rt0.c2))=((rt0.c3))))) FROM vt0 WHERE (CAST(((0.6572929617065828) BETWEEN (0.07884684287455224) AND ('F1')) AS REAL)) LIMIT -155536851;SELECT DISTINCT (~ (((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c3)))) FROM vt0, rt0; -- 0ms;
SELECT 0.8843656011841555 FROM rt0; -- 0ms;
SELECT (((((rt0.c3)>>(rt0.c3))))<((CASE rt0.c2  WHEN rt0.c2 THEN rt0.c1 WHEN vt0.c0 THEN rt0.c4 WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c3 THEN 0.1651836679003864 ELSE rt0.c3 END))), COUNT(rt0.c0), (((rt0.c4)) BETWEEN (((((vt0.c0)) NOT BETWEEN ((rt0.c6)) AND ((rt0.c0))))) AND ((((rt0.c1) NOT BETWEEN (rt0.c5) AND (rt0.c5))))) FROM rt0;SELECT DISTINCT ROW_NUMBER() OVER ( ORDER BY (~ ((- (rt0.c2)))) ASC  NULLS FIRST) FROM rt0 WHERE (((NULLIF(DISTINCT '', 0Xffffffffce054c9e)) NOT NULL)); -- 0ms;
SELECT DISTINCT ((((((((((rt0.c0)|(vt0.c0)))AND(((vt0.c0) BETWEEN (rt0.c4) AND (rt0.c4)))))AND(COUNT(rt0.c4))))OR(((rt0.c5) NOT BETWEEN (rt0.c1) AND (rt0.c6)))))AND(UPPER(vt0.c0))) FROM vt0, rt0 WHERE (CAST(CAST(1718797439 AS TEXT) AS INTEGER)); -- 0ms;
SELECT ALL (NULL IN ()) COLLATE BINARY, rt0.c0, TOTAL(UPPER(DISTINCT rt0.c5)) FILTER(WHERE LOWER(DISTINCT rt0.c2) COLLATE BINARY) OVER ( RANGE LOWER(DISTINCT UPPER(DISTINCT rt0.c2)) PRECEDING) FROM rt0, vt0 WHERE (json_type(NULL) COLLATE BINARY);SELECT DISTINCT ((CAST(rt0.c0 AS TEXT)) NOTNULL), (((rt0.c3)) NOT BETWEEN (((NOT (0Xfffffffff6bab22d)))) AND (((((rt0.c5)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c4)))))), ((CASE rt0.c6  WHEN rt0.c6 THEN rt0.c6 ELSE rt0.c1 END)%(MIN(rt0.c0))) FROM vt0, rt0 WHERE (CASE WHEN (((((((('538887351')AND(x'c0f8')))AND(0x3df8fc36)))OR(NULL)))OR('814538414')) THEN ((0.0597008678329467)IS(2021636806)) WHEN (NULL IN ()) THEN (~ (NULL)) WHEN ((('1373887246')) BETWEEN ((0.8705666658705876)) AND ((0.3779057903003046))) THEN (('-208416724')==('-926145742')) END); -- 0ms;
SELECT ALL json_array_length(((rt0.c6) BETWEEN (rt0.c1) AND (rt0.c1)), CASE WHEN rt0.c1 THEN rt0.c5 WHEN NULL THEN rt0.c1 WHEN vt0.c0 THEN rt0.c4 END), ((((((((((((((rt0.c6)AND(rt0.c3)))AND(x'')))OR(vt0.c0)))OR(vt0.c0)))OR(NULL)))OR(rt0.c4)))<<(((rt0.c4) NOT BETWEEN (x'056d') AND (rt0.c6)))), SUM('1408973353') FROM rt0, vt0 WHERE ((((('J价'))!=((x'583e'))) IN ('tD富)' COLLATE BINARY, ((0.24364538297400218)<>('-1525242092'))))) ORDER BY (0Xffffffffe527fab9 IN ()) DESC  NULLS LAST, (rt0.c2 IN (((rt0.c5) NOTNULL))); -- 0ms;
SELECT DISTINCT (GROUP_CONCAT(rt0.c3) IN ()) FROM vt0 WHERE (((((0.9537767080475242) IS TRUE))&(CAST(x'' AS REAL)))); -- 0ms;
SELECT ((((((((((rt0.c3)AND(rt0.c5)))OR(vt0.c0)))OR(rt0.c1)))OR(vt0.c0)))>(((0X2139ab3f)||(rt0.c1)))), (((- (rt0.c1)))>>(((((((((rt0.c0)AND(0.5121161661788343)))OR(rt0.c2)))AND(rt0.c3)))AND(rt0.c2)))), ((MIN(rt0.c0))%(((rt0.c0)/(rt0.c5)))) FROM vt0 ORDER BY -2.08416724E8  NULLS LAST;SELECT DISTINCT (NOT (((rt0.c1)*(rt0.c5)))), CASE ((rt0.c3)&(x'34b5'))  WHEN (((rt0.c6))>=((rt0.c6))) THEN ((rt0.c5) NOT BETWEEN (rt0.c5) AND ('-959159751')) ELSE ((rt0.c4)>=(rt0.c3)) END, json_insert((~ (rt0.c5)), ((rt0.c5) NOT NULL), NULL) FROM rt0, vt0 GROUP BY (((CAST(rt0.c5 AS NUMERIC), rt0.c5, CASE WHEN x'' THEN rt0.c0 WHEN rt0.c3 THEN vt0.c0 WHEN rt0.c5 THEN x'' END))>((CASE WHEN rt0.c1 THEN x'' END, (NOT (rt0.c3)), CASE WHEN rt0.c6 THEN vt0.c0 ELSE rt0.c2 END))); -- 0ms;
SELECT DISTINCT (((0.29405021671709286 IN ()))%((rt0.c1 IN (rt0.c1, rt0.c4)))) FROM rt0, vt0 WHERE ((((x'')&('240117776')) IN ())); -- 0ms;
SELECT ((((((rt0.c6)AND(vt0.c0)))OR(NULL)))<=(((vt0.c0)<(rt0.c4)))) FROM rt0, vt0; -- 0ms;
SELECT ALL IFNULL(DISTINCT UNLIKELY(DISTINCT rt0.c1), x'9c92') FROM rt0, vt0 WHERE ((((((('ur')AND(NULL)))AND('')))>>((((x'56c1'))>(('q|.座bog')))))) ORDER BY ((((rt0.c6) NOT BETWEEN (rt0.c4) AND (rt0.c1))) NOT BETWEEN (COALESCE(rt0.c6, vt0.c0)) AND (CAST(rt0.c6 AS BLOB)))  NULLS LAST, (~ ((vt0.c0 IN ())))  NULLS LAST; -- 0ms;
SELECT ALL (((((rt0.c2))<((rt0.c6)))) IS TRUE), CASE GROUP_CONCAT(vt0.c0)  WHEN CAST(rt0.c4 AS TEXT) THEN CASE WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c5 THEN rt0.c4 WHEN vt0.c0 THEN rt0.c5 WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c4 END END, ((((((((((((((((0x2ef711cc)OR(rt0.c4)))OR(rt0.c0)))OR(rt0.c1)))AND(1324787961)))AND(((rt0.c1) NOT BETWEEN (rt0.c4) AND (rt0.c5)))))AND(rt0.c4)))OR(vt0.c0)))AND(CASE WHEN rt0.c4 THEN rt0.c4 END)) FROM rt0, vt0 WHERE ((('Ak' IN ()) IN ())); -- 0ms;
SELECT ALL ((((rt0.c1)!=(vt0.c0)))LIKE(((((rt0.c1)AND(rt0.c3)))AND(vt0.c0)))) FROM vt0 WHERE ((~ (((-4.76306274E8) IS TRUE))));SELECT DISTINCT NTH_VALUE((((((((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))))AND(json_type(vt0.c0))))AND((vt0.c0 IN ()))), vt0.c0) OVER () FROM vt0 WHERE (((((x'') BETWEEN (3.69328645E8) AND ('-1935522288')))+(x'' COLLATE RTRIM))); -- 0ms;
SELECT ALL CAST(rt0.c3 COLLATE BINARY AS BLOB) FROM vt0, rt0; -- 1ms;
SELECT GROUP_CONCAT(((((rt0.c6)AND(x'3df6')))OR(rt0.c3))) OVER ( GROUPS  UNBOUNDED PRECEDING EXCLUDE TIES) FROM vt0 WHERE (MIN(GLOB('Ph*q37_iJ', NULL), ((0x20487df0) BETWEEN (NULL) AND (-1879456292)))) LIMIT 1038433538 OFFSET -2128767026;SELECT DISTINCT (('C⤵W{Lj>^')AND((((rt0.c5)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c3))))) FROM vt0 ORDER BY NULL ASC  NULLS LAST;SELECT DISTINCT (((((x'')+(rt0.c6))))<>((((rt0.c2) NOT NULL)))) FROM rt0 WHERE (((CASE WHEN x'' THEN x'ec613ea8' WHEN '' THEN '' WHEN '134039804' THEN 0.6115182066970569 ELSE -191873940 END) ISNULL)); -- 0ms;
SELECT DISTINCT CASE WHEN ((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c6)) THEN SQLITE_SOURCE_ID() END, CASE vt0.c0  WHEN NULL THEN vt0.c0 END COLLATE BINARY, json_remove(((rt0.c1) ISNULL), CAST(rt0.c6 AS INTEGER)) FROM vt0 WHERE (CASE ('2145923020' IN ('652983823', x''))  WHEN CAST('1728406718' AS NUMERIC) THEN ((((((((-945243050)OR(NULL)))OR(0X3a252724)))OR(NULL)))AND(NULL)) ELSE (((('1826977959')AND('1278033701')))OR('1325352876')) END) GROUP BY (((rt0.c0) IS TRUE) IN ()) HAVING ((vt0.c0) ISNULL) COLLATE NOCASE;SELECT ((AVG(rt0.c1))IS((((vt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c5))))), TOTAL(((rt0.c3) BETWEEN (rt0.c0) AND (rt0.c3))) OVER (), (((((((rt0.c5)) NOT BETWEEN ((NULL)) AND ((vt0.c0))))AND(((((rt0.c5)OR(rt0.c4)))AND(vt0.c0)))))OR(CASE WHEN rt0.c4 THEN rt0.c5 ELSE rt0.c5 END)), rt0.c2 COLLATE NOCASE, CASE (rt0.c0 IN (rt0.c4))  WHEN ((vt0.c0) BETWEEN (rt0.c3) AND ('919562117')) THEN ((vt0.c0) IS TRUE) END, CASE WHEN (vt0.c0 IN (rt0.c2)) THEN ((((((((rt0.c5)AND(rt0.c5)))AND(rt0.c3)))OR(rt0.c1)))AND(x'18b7')) END, ((((rt0.c3)LIKE(rt0.c5))) NOT BETWEEN (((rt0.c2) BETWEEN (rt0.c3) AND (-957553845))) AND (rt0.c4)) FROM vt0 WHERE ((NULL IN ()));SELECT ((NULL) IS FALSE) FROM rt0, vt0 NOT INDEXED WHERE ((((0Xffffffffebdef35e)) NOT BETWEEN (((('')*(x'')))) AND ((CASE WHEN -1.7976931348623157E308 THEN NULL WHEN '571071630' THEN 0.92093204187197 WHEN x'' THEN '120826710' ELSE x'509f' END)))); -- 3ms;
SELECT (((((rt0.c0)<=(rt0.c6))))<((((0.6928350057227668) NOT BETWEEN (rt0.c4) AND (rt0.c3))))), ((((CAST(rt0.c0 AS BLOB))AND(rt0.c1)))AND(LIKE(rt0.c2, rt0.c2))), (CASE vt0.c0  WHEN rt0.c5 THEN vt0.c0 END IN ()) FROM rt0, vt0 WHERE (TRIM(DISTINCT '1542075754')) GROUP BY rt0.c1; -- 1ms;
SELECT ((rt0.c0 COLLATE BINARY)GLOB(CASE '1490434643'  WHEN rt0.c0 THEN '0.9121634969047054' ELSE rt0.c3 END)) FROM vt0, rt0 GROUP BY ((((((((rt0.c4)AND(rt0.c5)))OR('')))AND(rt0.c3)))AND(((rt0.c4) IS TRUE))); -- 0ms;
SELECT DISTINCT CASE rt0.c4  WHEN rt0.c6 THEN rt0.c2 WHEN '1212516865' THEN rt0.c5 WHEN rt0.c4 THEN 0.6165448643948404 WHEN NULL THEN rt0.c2 WHEN rt0.c5 THEN rt0.c5 ELSE rt0.c1 END COLLATE NOCASE COLLATE NOCASE FROM rt0 WHERE ((- (((('4f,vi')) BETWEEN ((173929605)) AND ((x'')))))); -- 0ms;
SELECT DISTINCT ((((((((rt0.c1)OR(rt0.c2)))OR(rt0.c0)))AND(COUNT(rt0.c0))))OR((+ (rt0.c3)))), MAX(COUNT(((rt0.c4)||(0.24747105035702444)))), CASE WHEN ((((rt0.c5)OR(rt0.c0)))OR(rt0.c5)) THEN CASE rt0.c2  WHEN rt0.c4 THEN 0.5783129056312488 ELSE rt0.c0 END WHEN MAX(rt0.c3) THEN ((rt0.c3)*(rt0.c2)) WHEN (NOT (rt0.c4)) THEN ROUND(rt0.c1, rt0.c0) END FROM rt0;SELECT DISTINCT (((rt0.c1)IS NOT(vt0.c0)) IN ()) FROM rt0; -- 0ms;
SELECT ((((rt0.c4)LIKE(rt0.c3)))*(rt0.c2)) FROM vt0, rt0 WHERE (CASE WHEN (((('-384342639')OR('134267943')))AND(NULL)) THEN CAST('|8' AS INTEGER) WHEN CASE NULL  WHEN '-290173193' THEN 0.02607285755947142 END THEN ((0.15590899453389495)>(NULL)) WHEN (0Xffffffffff9007e3 IN (NULL)) THEN ((NULL) NOTNULL) ELSE (0.7070274060467011 IN ('538887351', 'n+Rwy4)')) END); -- 0ms;
SELECT NULLIF(rt0.c2, ((vt0.c0) NOT BETWEEN ('1954332311') AND (rt0.c4))), CASE WHEN CASE NULL  WHEN rt0.c5 THEN rt0.c6 ELSE rt0.c6 END THEN load_extension(rt0.c1, rt0.c6) WHEN (rt0.c3 IN (vt0.c0)) THEN '50579447' WHEN CAST(rt0.c4 AS REAL) THEN AVG(rt0.c4) END, ((((rt0.c0) NOTNULL)) BETWEEN ((((rt0.c5)) NOT BETWEEN ((rt0.c5)) AND ((rt0.c1)))) AND (NULL)) FROM rt0 LEFT OUTER JOIN vt0 ON ((((((rt0.c3)OR(rt0.c4)))AND(rt0.c2))) BETWEEN ('vS>ka䕞f') AND (rt0.c2)) WHERE ((('1898978155' IN ()) IN ())); -- 0ms;
SELECT '' FROM rt0; -- 0ms;
SELECT DISTINCT SUM(CAST('gVgC' AS NUMERIC) COLLATE RTRIM) FROM rt0; -- 0ms;
SELECT ALL ((((((((rt0.c6 COLLATE RTRIM)OR(LIKELY(''))))AND(0.9954199016933372)))OR(CASE WHEN rt0.c6 THEN rt0.c2 WHEN rt0.c5 THEN rt0.c6 WHEN rt0.c4 THEN rt0.c1 END)))AND(vt0.c0 COLLATE BINARY)) FROM rt0 WHERE (0.3682222100801913) ORDER BY ((((((((((((CASE rt0.c0  WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c5 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c5 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c4 END)OR(((((((((rt0.c3)AND(rt0.c5)))AND(rt0.c3)))OR(rt0.c2)))OR(rt0.c5)))))AND(NULL)))AND(((vt0.c0)IS(rt0.c5)))))OR((((vt0.c0)) NOT BETWEEN ((rt0.c6)) AND ((rt0.c2))))))AND(CAST(rt0.c6 AS NUMERIC))))AND(CASE rt0.c0  WHEN rt0.c5 THEN rt0.c3 END));SELECT ALL ((((vt0.c0)==(rt0.c3)))+(((NULL)-(rt0.c1)))), ((CAST(rt0.c3 AS TEXT)) ISNULL), CASE WHEN (('ns99vu') ISNULL) THEN CASE rt0.c1  WHEN rt0.c2 THEN NULL END WHEN ((rt0.c6)<<(rt0.c6)) THEN ((((((((((((rt0.c1)AND(rt0.c2)))AND(rt0.c0)))OR(rt0.c2)))OR(rt0.c2)))AND('-167661320')))AND(rt0.c3)) WHEN NULL COLLATE BINARY THEN ((rt0.c5) BETWEEN (rt0.c5) AND (rt0.c6)) END FROM vt0, rt0 WHERE (UNICODE((((((((('坑雼\rN+it')AND(x'')))AND(NULL)))AND('d')))AND(1.369995358E9)))); -- 0ms;
SELECT DISTINCT ((((rt0.c3)|(rt0.c1))) BETWEEN (rt0.c6 COLLATE NOCASE) AND ((((rt0.c6)) BETWEEN ((rt0.c0)) AND ((rt0.c6))))) FROM rt0, vt0 ORDER BY (((vt0.c0) IS FALSE) IN (vt0.c0 COLLATE NOCASE)) DESC  NULLS LAST; -- 0ms;
SELECT DISTINCT vt0.c0 FROM vt0, rt0; -- 0ms;
SELECT DISTINCT (((~ (rt0.c6)))AND(rt0.c1 COLLATE RTRIM)), CAST('-631751171' AS NUMERIC), CASE (('-1115011746')<(rt0.c6))  WHEN ((((rt0.c1)OR(rt0.c6)))OR(rt0.c6)) THEN ((x'') NOT BETWEEN (rt0.c2) AND ('-290173193')) WHEN CASE WHEN 0.4527845359816368 THEN rt0.c5 WHEN rt0.c4 THEN vt0.c0 WHEN rt0.c2 THEN rt0.c1 END THEN CAST(rt0.c3 AS BLOB) WHEN rt0.c4 THEN ((((vt0.c0)AND(rt0.c3)))OR(rt0.c1)) ELSE (vt0.c0 IN ()) END FROM rt0, vt0 WHERE (CASE WHEN RTRIM(0.38388494500911297) THEN CASE WHEN -280364157 THEN NULL END WHEN LIKELIHOOD(x'2762', 0.266347628557714) THEN 0.5845655389391636 COLLATE BINARY WHEN ((((((((NULL)OR(NULL)))OR(0X748d3e7d)))AND(1.282172197E9)))OR(0.40617932650693733)) THEN TRIM(NULL) WHEN ((('2083778703')) NOT BETWEEN ((NULL)) AND ((NULL))) THEN ((('369328645'))<=((x'34b2'))) WHEN (('-827389238')*('1347101226')) THEN (('477800057')IS(NULL)) ELSE CAST(0x15c3fae6 AS REAL) END); -- 0ms;
SELECT ALL ((rt0.c4) BETWEEN ((rt0.c3 IN ())) AND (json_quote(rt0.c4))) FROM vt0 WHERE (CAST(x'' AS BLOB) COLLATE NOCASE);SELECT COUNT(*) FROM vt0, rt0 LIMIT 1396608522 OFFSET 369328645; -- 0ms;
SELECT DISTINCT (- (x'')), ((((rt0.c1)<<(rt0.c4)))<>(((rt0.c0)OR(vt0.c0)))), LTRIM((rt0.c1 IN ())) FROM vt0 WHERE (CAST(x'' AS NUMERIC)) ORDER BY (((NOT (vt0.c0))) NOT BETWEEN ((((rt0.c1))<=((rt0.c2)))) AND (0.6205734257619953))  NULLS FIRST, ((((((((((rt0.c3)AND('')))AND(rt0.c0)))OR(rt0.c2)))AND(rt0.c4))) ISNULL)  NULLS LAST;SELECT DISTINCT rt0.c2 FROM rt0, vt0; -- 0ms;
SELECT DISTINCT 2.050790062E9, ((x'')==(CAST(rt0.c4 AS INTEGER))), CASE WHEN ((vt0.c0)<=(rt0.c3)) THEN rt0.c3 COLLATE RTRIM ELSE ((((((((rt0.c0)AND(0.7568045405954269)))OR(rt0.c3)))AND(rt0.c5)))OR(vt0.c0)) END FROM rt0, vt0 WHERE ((((((('-1460943652')OR('')))OR(((((0.29877094211595934)AND(x'')))AND(0.9858366808205982)))))OR(0.10146573636965961 COLLATE BINARY))) ORDER BY ((((((rt0.c4)AND(rt0.c0)))OR(rt0.c6))) NOT BETWEEN (((rt0.c4)AND(rt0.c6))) AND (rt0.c1))  NULLS FIRST; -- 0ms;
SELECT ALL NULLIF(((vt0.c0) BETWEEN (rt0.c0) AND (vt0.c0)), ((((vt0.c0)AND(rt0.c0)))OR(rt0.c1))) FROM rt0, vt0 ORDER BY (LIKELY(rt0.c0) IN ())  NULLS LAST LIMIT -1635581385 OFFSET 1603643558; -- 0ms;
SELECT COUNT(*) FILTER(WHERE rt0.c5) OVER ( GROUPS  UNBOUNDED PRECEDING EXCLUDE CURRENT ROW) FROM rt0, vt0 ORDER BY (rt0.c3 IN ())  NULLS FIRST; -- 0ms;
SELECT DISTINCT ((((rt0.c4)!=(rt0.c4)))+((+ (NULL)))), (((rt0.c2, rt0.c4, rt0.c0)) BETWEEN ((((rt0.c3) NOTNULL), -2022694156, CHAR(rt0.c3, rt0.c3, NULL, rt0.c1, vt0.c0))) AND ((NULLIF(vt0.c0, rt0.c3), ((rt0.c2)IS NOT(rt0.c6)), ((rt0.c0)<=(rt0.c6))))), (rt0.c2 COLLATE RTRIM IN (CAST(rt0.c1 AS INTEGER))) FROM vt0 WHERE ((((((+ (x'c819')))OR((+ ('')))))AND(((((x'8439')AND(50579447)))AND('-757987692')))));SELECT ALL ((((NULL)AND(rt0.c3)))<=(load_extension(NULL, rt0.c0))) FROM rt0; -- 0ms;
SELECT DISTINCT CASE rt0.c2  WHEN vt0.c0 THEN rt0.c0 END COLLATE NOCASE, CAST(((vt0.c0)>=(vt0.c0)) AS INTEGER), (rt0.c1 COLLATE NOCASE IN (((rt0.c0)<=(rt0.c0)))), ((rt0.c5 IN ()) IN ((~ (rt0.c0)), ((rt0.c6)<=(vt0.c0)))), ((CASE rt0.c5  WHEN rt0.c3 THEN rt0.c4 ELSE rt0.c4 END)==((((rt0.c6, NULL, rt0.c3))=((vt0.c0, rt0.c0, rt0.c1))))) FROM vt0, rt0 WHERE (((((x'85a8') ISNULL)) IS FALSE)); -- 0ms;
SELECT ALL (((rt0.c3 IN ())) IS TRUE) FROM rt0 WHERE ((((0.2266539631533102)) NOT BETWEEN (((-994881772 IN ()))) AND ((TRIM(DISTINCT NULL))))); -- 0ms;
SELECT DISTINCT (('-1941892358')<(rt0.c0 COLLATE BINARY)), ((((((rt0.c4) NOT BETWEEN (rt0.c4) AND (rt0.c6)))OR(x'')))OR(NULL)), '' FROM rt0, vt0 GROUP BY (((0.36692448396929256))>(((((vt0.c0))>=((x'')))))); -- 0ms;
SELECT DISTINCT CAST(((((((((rt0.c1)AND(rt0.c5)))OR(rt0.c4)))OR(NULL)))OR(rt0.c1)) AS INTEGER), COUNT(*), (((rt0.c6)<=(vt0.c0)) IN ((NOT (vt0.c0)), ((rt0.c4) NOT BETWEEN (rt0.c6) AND (rt0.c0)))) FROM vt0 WHERE (UNLIKELY(1 COLLATE BINARY));SELECT DISTINCT ((TRIM(DISTINCT rt0.c0, rt0.c1))||(((rt0.c1)+(rt0.c6)))) FROM vt0, rt0 WHERE (((('' COLLATE BINARY))>=((x'')))) ORDER BY ((rt0.c4)>>(rt0.c2)) COLLATE NOCASE ASC LIMIT 50579447 OFFSET -83736665; -- 0ms;
SELECT ALL (((rt0.c0)) NOT BETWEEN ((((rt0.c0)AND('-330381648')))) AND ((rt0.c2 COLLATE NOCASE))) FROM vt0 WHERE (((((((x'')OR('M+')))AND(x''))) NOTNULL));SELECT DISTINCT CASE ((rt0.c0) BETWEEN (vt0.c0) AND (rt0.c1))  WHEN x'1acd77c4' THEN rt0.c3 ELSE CAST(vt0.c0 AS NUMERIC) END FROM rt0;SELECT DISTINCT ((((((((rt0.c2)OR(rt0.c6)))OR(rt0.c2)))AND((rt0.c0 IN ()))))OR(CASE rt0.c6  WHEN rt0.c1 THEN '' END)), rt0.c6, CAST(0.20934376003150446 AS NUMERIC) FROM rt0 WHERE (LIKE((((-1487220237)) BETWEEN ((0.486606831392594)) AND ((x'ae49'))), ((NULL)>(x'a3c34d4d')), 'L')) ORDER BY ((0.6104663898371097 COLLATE BINARY)!=(rt0.c5 COLLATE RTRIM)) LIMIT -1425726177; -- 0ms;
SELECT ALL LIKE(rt0.c0 COLLATE BINARY, ((vt0.c0) IS TRUE)), (rt0.c6 IN ()) COLLATE BINARY, (CAST(rt0.c2 AS TEXT) IN ()) FROM vt0 WHERE (((((('e&iV')>=(NULL))))>=(((~ (''))))));SELECT ALL ((rt0.c4)||(rt0.c3)) COLLATE NOCASE FROM rt0, vt0; -- 0ms;
SELECT DISTINCT COUNT(CASE rt0.c5  WHEN rt0.c4 THEN vt0.c0 END), ((GROUP_CONCAT(vt0.c0)) IS FALSE), CASE WHEN (((rt0.c6)) NOT BETWEEN ((rt0.c5)) AND ((vt0.c0))) THEN ((rt0.c0)<>(rt0.c3)) ELSE LIKELY(rt0.c2) END FROM rt0, vt0 WHERE (CASE 0.2803073791347461  WHEN '' THEN '' END COLLATE NOCASE); -- 0ms;
SELECT ((((rt0.c5)OR(rt0.c0)))AND(0xffffffffeeeef0ac)) COLLATE BINARY FROM rt0; -- 0ms;
SELECT DISTINCT CAST(((rt0.c2) IS FALSE) AS REAL), CASE rt0.c3  WHEN rt0.c1 THEN rt0.c5 ELSE rt0.c0 END COLLATE NOCASE, CAST(((0x308cdeae) BETWEEN (rt0.c6) AND (vt0.c0)) AS NUMERIC) FROM vt0 WHERE ('-1180231199') GROUP BY ((rt0.c6) ISNULL);SELECT UPPER(DISTINCT (((rt0.c1)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c1)))) FROM rt0 WHERE (('-206540784' IN (0.18896189188215862)) COLLATE BINARY) ORDER BY CAST(NULL COLLATE BINARY AS TEXT); -- 0ms;
SELECT ((((rt0.c1) IS FALSE)) NOT BETWEEN (CAST(rt0.c2 AS REAL)) AND (((rt0.c2)!=(vt0.c0)))) FROM rt0;SELECT ((COALESCE(rt0.c5, rt0.c0)) NOTNULL) FROM vt0, rt0 UNION SELECT DISTINCT ((vt0.c0)&(vt0.c0)) COLLATE NOCASE FROM rt0 LIMIT -2126273391 OFFSET -1200314695;SELECT DISTINCT ((((TOTAL(rt0.c0))OR(((vt0.c0)&(rt0.c0)))))OR(CAST(rt0.c3 AS TEXT))) FROM vt0, rt0 WHERE ((NULL IN ()) COLLATE NOCASE); -- 0ms;
SELECT DISTINCT (+ ((rt0.c3 IN ()))) FROM rt0, vt0 WHERE ((UNLIKELY(-126474160) IN ())); -- 0ms;
SELECT DISTINCT CASE WHEN x'' THEN ((0.12444496957389284) NOT BETWEEN (rt0.c0) AND (rt0.c4)) END, ((vt0.c0) NOT BETWEEN ((((rt0.c4, rt0.c4, rt0.c4))!=((rt0.c5, rt0.c0, rt0.c2)))) AND (((rt0.c1) BETWEEN (rt0.c1) AND ('.D8 ')))), (((rt0.c3))>=((rt0.c5))) COLLATE RTRIM COLLATE BINARY FROM vt0, rt0; -- 0ms;
SELECT FIRST_VALUE(0.8083731148469732) OVER () FROM rt0, vt0 WHERE ((((NULL)>(0.4322884079631102)) IN ())) ORDER BY (((((vt0.c0) BETWEEN (rt0.c3) AND (rt0.c4)), ((vt0.c0) NOTNULL), ((((rt0.c3)AND(rt0.c1)))OR(rt0.c3))))<((CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c6 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN -832524371 THEN rt0.c4 WHEN rt0.c3 THEN rt0.c5 ELSE rt0.c0 END, (NOT (vt0.c0)), HEX(DISTINCT rt0.c6)))) DESC  NULLS FIRST; -- 0ms;
SELECT ALL CAST(((((rt0.c6)OR(rt0.c2)))AND(rt0.c3)) AS TEXT), CAST(NULL AS TEXT), ((((rt0.c6)AND(rt0.c6)))AND(((rt0.c6)GLOB(rt0.c2)))) FROM rt0; -- 0ms;
SELECT DISTINCT CAST(((rt0.c3)<<(rt0.c3)) AS BLOB) FROM vt0, rt0; -- 0ms;
SELECT (+ (((rt0.c6)<(rt0.c0)))) FROM vt0, rt0 WHERE ((((((((((0.9417652406348991 IN ()))OR(((0.7265229143117771)||('1722715717')))))AND(UPPER(DISTINCT '1787567507'))))AND(0.942149257028954)))AND((((('FALSE')OR(x'')))AND(-820330567))))); -- 0ms;
SELECT DISTINCT (((((rt0.c6))=((rt0.c3)))) NOT NULL) FROM vt0, rt0; -- 0ms;
SELECT DISTINCT (((((rt0.c4)>=(rt0.c3))))<((vt0.c0))) FROM rt0, vt0 WHERE ((((-81211904) IS FALSE) IN ())); -- 0ms;
SELECT DISTINCT CAST(TYPEOF(rt0.c4) AS BLOB) FROM vt0;SELECT DISTINCT ((((((((NULL)OR(((rt0.c0)||(rt0.c1)))))OR(CASE rt0.c3  WHEN rt0.c6 THEN vt0.c0 WHEN NULL THEN rt0.c2 WHEN rt0.c3 THEN rt0.c6 END)))AND(((rt0.c6) ISNULL))))AND((((rt0.c5))<=((rt0.c3))))), rt0.c1, ((rt0.c2 IN (x'')) IN (0.3391218661601937)) FROM vt0 WHERE ((((0.13765922422278465, 0.8109599605285797, x'fbe5')) NOT BETWEEN ((x'', NULL, 0.057394675116138494)) AND ((CASE WHEN 0.778904126164593 THEN '-420659701' ELSE '_Jrc.' END, (((NULL, 'Sp蚉瘡>', 1.282172197E9))==(('1423748434', x'', 0.9959844549574747))), (((((((('0.486606831392594')AND(NULL)))OR(-296483586)))OR(0Xce84d3b)))OR(0.769683284296515))))));SELECT DISTINCT (((rt0.c2 IN ()))>>(CAST(rt0.c6 AS REAL))) FROM rt0, vt0; -- 0ms;
SELECT DISTINCT QUOTE(vt0.c0), CASE rt0.c3  WHEN rt0.c4 THEN rt0.c0 ELSE rt0.c3 END COLLATE NOCASE COLLATE RTRIM, ((x'')GLOB(((rt0.c6)GLOB(rt0.c0)))) FROM rt0 WHERE (((-0.0)OR('-1299597897')) COLLATE NOCASE) LIMIT -645154335 OFFSET 44735238;SELECT rt0.c6, CAST(((x'') IS FALSE) AS REAL), ((NULL COLLATE BINARY)AND(CAST(vt0.c0 AS REAL))) FROM rt0 WHERE (CASE ((((((((0.5968987687590469)OR('1')))AND(x'')))OR(0.12852315855296237)))AND(0Xffffffffb77f70e2))  WHEN (((('Y\nH[')OR(-1958341937)))AND(0.7524120591935426)) THEN x'' END) LIMIT -781985276 OFFSET -1100837614;SELECT ALL COUNT(*) OVER () FROM vt0 WHERE ((((0.7546380550305034, NULL, 0.8989495383728651)) BETWEEN ((((x'')GLOB(x'71db')), (~ (0.5062809228059003)), ((('', 0.9633313553655453, 0.04040249135688645))>((x'171c', '', NULL))))) AND ((((((NULL)AND('-484439112')))OR(NULL)), CAST(NULL AS NUMERIC), (~ (0.9583893774705745)))))); -- 0ms;
SELECT ALL rt0.c2 COLLATE NOCASE FROM vt0, rt0; -- 0ms;
SELECT ALL '' FROM vt0, rt0 WHERE (((CAST('-1364826283' AS BLOB))IS((((('ZD')OR('')))OR(0.9456997833829615))))); -- 0ms;
SELECT ALL ((((vt0.c0)GLOB(rt0.c1))) NOTNULL) FROM rt0, vt0 WHERE ((((0xffffffffa665d728)) BETWEEN (((('0.31586368850992097')IS NOT(NULL)))) AND ((((x'2a18')<(0.9845236150377342)))))); -- 0ms;
SELECT DISTINCT CAST(CASE rt0.c2  WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c6 WHEN rt0.c6 THEN vt0.c0 END AS INTEGER) FROM vt0;SELECT (CASE WHEN rt0.c2 THEN vt0.c0 END IN (((((((((rt0.c2)OR(rt0.c5)))AND('蝠飖5 D')))AND(rt0.c6)))AND(rt0.c5)))), (((+ (rt0.c0))) IS FALSE), (((((0.6877101417990572, rt0.c5, rt0.c6)) NOT BETWEEN (('939044807', rt0.c0, rt0.c0)) AND ((rt0.c4, rt0.c5, rt0.c6))))GLOB(rt0.c2)) FROM rt0 WHERE ((- ((0.10542803898457975 IN ())))) GROUP BY json_array(((rt0.c2)+(rt0.c4)), ((((rt0.c0)OR(rt0.c5)))OR(rt0.c0))) HAVING SUM(((x'06e7')/(rt0.c2)));SELECT DISTINCT ((CAST(rt0.c3 AS TEXT))<<('-55826258')), (((NOT (rt0.c6)))IS(SUM(vt0.c0))), (((NOT (rt0.c6)))AND(CASE WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c3 THEN vt0.c0 WHEN rt0.c6 THEN rt0.c6 WHEN rt0.c6 THEN rt0.c6 END)) FROM rt0, vt0 WHERE (INSTR(x'', CASE 1282172197  WHEN '눣I~' THEN NULL WHEN x'f4ce' THEN x'' WHEN '-1853124310' THEN x'' END)) LIMIT -1623617721; -- 0ms;
SELECT DISTINCT ROW_NUMBER() OVER (), CAST(((rt0.c4)IS NOT(0.3655542250010694)) AS INTEGER), CAST(TRIM(rt0.c0, rt0.c1) AS BLOB) FROM rt0, vt0 WHERE (TIME((('u7e8S&-鮄') IS FALSE), CAST(NULL AS INTEGER), (('2588141')>(x'')), ((0.7825568471268682) ISNULL), LOWER(DISTINCT NULL), x'' COLLATE RTRIM, (('1467032420') NOT NULL))) LIMIT -237273925; -- 0ms;
SELECT ALL ((((((((((((vt0.c0)OR(rt0.c2)))OR(rt0.c4)))AND(rt0.c6)))AND(rt0.c5)))AND(rt0.c0 COLLATE RTRIM)))AND(((rt0.c1) NOT NULL))), x'', COUNT(TYPEOF(rt0.c4)) FILTER(WHERE -152066763) OVER () FROM rt0, vt0 WHERE (UPPER(DISTINCT (x'' IN ()))); -- 0ms;
SELECT DISTINCT ((((vt0.c0) NOT BETWEEN (rt0.c0) AND (vt0.c0)))-(((((rt0.c0)AND(rt0.c3)))OR(rt0.c4)))) FROM rt0, vt0 WHERE (((DATETIME('0.04784136212963175', NULL, 0xffffffff86328537, 0.268522585363104, 0.6675297629068849))<<(((NULL) NOT BETWEEN ('') AND (NULL))))) GROUP BY ((rt0.c1)<=(((rt0.c0) BETWEEN (1023631662) AND (rt0.c6)))); -- 0ms;
SELECT DISTINCT rt0.c5 FROM vt0, rt0 WHERE (COALESCE(DISTINCT ((((0.9936554990058587)AND(NULL)))OR(0xec9b272)), (((('0.7175646645611579')OR(NULL)))OR('-432452994')))); -- 4ms;
SELECT DISTINCT (LOWER(DISTINCT rt0.c6) IN (((rt0.c6)>>(rt0.c3)))) FROM vt0;SELECT GROUP_CONCAT(CAST(rt0.c4 AS INTEGER)), rt0.c1, TOTAL(((rt0.c5) ISNULL)) OVER (), (((~ (rt0.c2)))<>(rt0.c5)), x'' FROM rt0, vt0; -- 0ms;
SELECT DISTINCT ((rt0.c4)IS((rt0.c2 IN (vt0.c0)))) FROM vt0;SELECT DISTINCT LOWER(DISTINCT json_patch(rt0.c4, rt0.c0)), ((((((rt0.c3)-(rt0.c5)))OR(GROUP_CONCAT(rt0.c1))))OR(((rt0.c3)OR(rt0.c6)))), ((rt0.c2 IN ()) IN ()) FROM vt0 WHERE ((((((x''))=((0x1944da15))))IS NOT((((NULL))=((0Xffffffff842d4958)))))) LIMIT -280364157 OFFSET 2038466534;SELECT CASE WHEN CASE WHEN rt0.c6 THEN rt0.c4 WHEN 0Xffffffff96bcb8cc THEN rt0.c2 WHEN rt0.c0 THEN rt0.c6 END THEN COUNT(*) END, NULLIF(DISTINCT CASE WHEN rt0.c4 THEN vt0.c0 END, TRIM(DISTINCT vt0.c0, rt0.c0)), ((((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c4 ELSE rt0.c2 END)OR(LIKELIHOOD(DISTINCT rt0.c1, 0.21484093788100622))))OR(((rt0.c6)<(vt0.c0)))) FROM rt0, vt0 WHERE ((((('108088828')<('1741970380'))) BETWEEN (((-1.668524993E9)+(NULL))) AND (((x'ddcb') NOT NULL)))) GROUP BY ((rt0.c6)OR(rt0.c1)) COLLATE NOCASE COLLATE NOCASE HAVING CAST((((rt0.c5, x'', vt0.c0)) NOT BETWEEN ((rt0.c3, vt0.c0, rt0.c4)) AND ((vt0.c0, rt0.c6, rt0.c2))) AS TEXT); -- 0ms;
SELECT DISTINCT (((rt0.c6 IN ())) NOT BETWEEN (rt0.c5 COLLATE NOCASE) AND ((((rt0.c0, rt0.c5, rt0.c5))<((rt0.c5, rt0.c6, ''))))) FROM vt0 WHERE (((((((((((((((((NULL)AND('-280364157')))AND(NULL)))AND((x'b09b' IN ()))))OR((- (1.282172197E9)))))OR(LAST_INSERT_ROWID())))AND(CAST('-115216765' AS REAL))))AND(((NULL) ISNULL))))OR((((((((('')OR(x'')))AND(x'')))AND(0.5862569175099503)))OR(1979226921)))));SELECT DISTINCT (highlight(rt0.c0, rt0.c0, rt0.c2, vt0.c0) IN ()) FROM rt0, vt0 WHERE (CAST(((x'') IS TRUE) AS INTEGER)); -- 0ms;
SELECT DISTINCT TOTAL(((rt0.c3) IS TRUE)) OVER () FROM vt0;SELECT ALL ((CAST(vt0.c0 AS NUMERIC))LIKE(((((rt0.c3)OR(rt0.c1)))AND(rt0.c6)))) FROM rt0 WHERE ((((('䮰0zrYwund') BETWEEN ('<P^HTu') AND (NULL)))+('lx')));SELECT DISTINCT '3' FROM rt0, vt0; -- 0ms;
SELECT DISTINCT CAST(SUM(rt0.c1) AS NUMERIC) FROM vt0, rt0; -- 0ms;
SELECT ALL GROUP_CONCAT(((rt0.c3)GLOB(rt0.c5))) FROM vt0;SELECT ALL CASE rt0.c4 COLLATE BINARY  WHEN ((rt0.c6)*(rt0.c6)) THEN ((rt0.c5) IS TRUE) END, ((((vt0.c0)+(rt0.c3))) IS TRUE), (((rt0.c3)) BETWEEN ((((((rt0.c4)AND(rt0.c1)))AND(rt0.c1)))) AND (((((rt0.c0)) BETWEEN ((rt0.c6)) AND ((rt0.c1)))))) FROM vt0 WHERE (('༡o分' IN ()) COLLATE BINARY);SELECT CAST(UNLIKELY(rt0.c4) AS REAL), CAST(((rt0.c1)+(rt0.c6)) AS NUMERIC), CAST(CAST(rt0.c4 AS INTEGER) AS INTEGER) FROM rt0; -- 0ms;
SELECT DISTINCT AVG(UPPER(DISTINCT rt0.c5)) OVER () FROM rt0, vt0; -- 0ms;
SELECT ALL (((((rt0.c0))==((rt0.c0)))) NOT BETWEEN (-497573189) AND (CASE rt0.c4  WHEN vt0.c0 THEN rt0.c6 ELSE vt0.c0 END)), ((COUNT(x'3888'))LIKE((- (rt0.c6)))), LIKELY(DISTINCT ((rt0.c4) NOT BETWEEN (rt0.c1) AND (0X5d144b84))), ((0.13672125308164562 COLLATE RTRIM) NOT BETWEEN ((vt0.c0 IN ())) AND (rt0.c0)), NTH_VALUE(((((((rt0.c3)AND('0.5804282310911546')))OR(rt0.c0))) NOT BETWEEN (COALESCE(rt0.c4, rt0.c1)) AND (TRIM(DISTINCT rt0.c5))), (((rt0.c6) NOT BETWEEN (rt0.c5) AND (rt0.c2)) IN ())) OVER () FROM rt0 WHERE ((CASE 0.716104303994875  WHEN '-2077406888' THEN NULL END IN ()));SELECT TOTAL(rt0.c3) FROM rt0, vt0 WHERE (((((CASE WHEN NULL THEN NULL END)AND(CASE x''  WHEN '' THEN 0.9269041787978904 WHEN 0x49d2885d THEN NULL WHEN 0.3743154490828665 THEN NULL ELSE 675445083 END)))AND((- (0.9713692632026042))))); -- 1ms;
SELECT DISTINCT ((SUM(vt0.c0)) NOTNULL) FROM vt0, rt0 WHERE (1.212516865E9); -- 0ms;
SELECT ((((((((((rt0.c5) IS TRUE))OR((rt0.c0 IN ()))))AND(((rt0.c2)<(vt0.c0)))))AND(rt0.c3)))AND((((rt0.c5)) NOT BETWEEN ((rt0.c6)) AND ((rt0.c4))))), ((rt0.c1)IS NOT(rt0.c0)) COLLATE NOCASE, ((('6E')LIKE(rt0.c6)) IN ()) FROM vt0, rt0 WHERE (((((CASE 0.5142326723846463  WHEN 0.05658940842363447 THEN x'' END)AND((('G(a-)\')+(NULL)))))OR((((NULL, '', '-1235979225'))>=((NULL, 0.5886003158899662, 0.7821322199922074)))))) ORDER BY ((CASE rt0.c5  WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c4 WHEN rt0.c4 THEN rt0.c3 END) IS FALSE)  NULLS LAST; -- 0ms;
SELECT COUNT(CAST(rt0.c0 AS REAL)) FROM rt0 WHERE ((((((x'') NOT BETWEEN (NULL) AND (0.10725967703010875))))>(((~ ('Vy')))))); -- 0ms;
SELECT ALL load_extension(COUNT(*), (-220279937 IN ())) FROM rt0 WHERE ((('889036953' COLLATE NOCASE)>(CASE 0.8070516812992773  WHEN x'' THEN 'q|.座bog' WHEN 0x2ea32c35 THEN '' WHEN 0.8307341132485739 THEN '-40160150' END)));SELECT (((rt0.c6 IN ('LR'))) NOTNULL) FROM vt0, rt0 WHERE (((~ ('')) IN ())); -- 0ms;
SELECT NULL FROM vt0, rt0 WHERE (CASE WHEN ((0.8051113992288297)IS('	-鼯]꣏~뿤,㚅')) THEN ('' IN ()) END); -- 0ms;
SELECT DISTINCT (NOT (((rt0.c6)LIKE(rt0.c0)))) FROM vt0, rt0; -- 0ms;
SELECT DISTINCT (((rt0.c3) NOTNULL) IN (x'' COLLATE RTRIM)), CAST(((rt0.c3) IS TRUE) AS TEXT), ((((vt0.c0))<=((vt0.c0))) IN (COUNT(rt0.c1))) FROM vt0 WHERE (CAST(((x'')-(NULL)) AS INTEGER)) LIMIT -1660122151;SELECT TOTAL((- (rt0.c5))) FROM rt0 WHERE (CASE WHEN NULL THEN ((0.7730293264852784) NOT BETWEEN (NULL) AND (x'')) END); -- 0ms;
SELECT DISTINCT AVG(((rt0.c4) NOTNULL)) FROM vt0;SELECT 0.6130421195676031 FROM rt0, vt0 WHERE (((((NULL)OR(NULL)))OR('PN')) COLLATE BINARY); -- 0ms;
SELECT CAST(((rt0.c5)<>(rt0.c4)) AS INTEGER) FROM vt0, rt0 WHERE (((((TRIM('871576322', -1.893870916E9))AND(SQLITE_SOURCE_ID())))OR(LOWER('0.02607285755947142')))); -- 0ms;
SELECT (((rt0.c6, rt0.c6, rt0.c3)) NOT BETWEEN ((((rt0.c6) BETWEEN (rt0.c3) AND (rt0.c0)), ((rt0.c6) ISNULL), (rt0.c5 IN ()))) AND ((((((rt0.c1)AND(rt0.c6)))OR('-410206236')), json_array(rt0.c2, rt0.c2), CASE rt0.c1  WHEN rt0.c4 THEN rt0.c6 WHEN x'be78' THEN rt0.c5 WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c1 THEN rt0.c6 WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c4 END))), x'', COUNT(*) FROM vt0, rt0 ORDER BY CAST(CAST(rt0.c1 AS TEXT) AS NUMERIC)  NULLS LAST LIMIT -1869465951; -- 0ms;
SELECT ALL ((CASE WHEN vt0.c0 THEN rt0.c3 END)GLOB(AVG(rt0.c1))) FROM vt0, rt0 WHERE ((((- ('-662118770'))) NOT NULL)) ORDER BY ((((rt0.c4)=(rt0.c4))) BETWEEN ((((x''))>=((rt0.c5)))) AND ((rt0.c4 IN (0.35368057776014106)))); -- 0ms;
SELECT DISTINCT ((rt0.c4 COLLATE NOCASE)=((NOT (rt0.c0)))) FROM rt0 WHERE (((((CASE WHEN 0Xffffffff86f4d2b5 THEN NULL END)AND(((NULL)|(2050790062)))))AND((((-4.67013214E8)) NOT BETWEEN ((-1460943652)) AND ((x'')))))) GROUP BY ((rt0.c5) NOT BETWEEN ((+ (rt0.c3))) AND (rt0.c5)); -- 0ms;
SELECT DISTINCT ((((rt0.c2 IN ())))==((((((rt0.c2)AND(rt0.c3)))AND(rt0.c2))))) FROM rt0, vt0; -- 1ms;
SELECT DISTINCT ((((((((((((rt0.c0)AND(vt0.c0)))OR(rt0.c2)))OR(rt0.c2)))OR(rt0.c3)))AND(((((rt0.c2)AND(rt0.c4)))OR(rt0.c3)))))OR(json_array_length(rt0.c1))) FROM rt0 LIMIT -246997681 OFFSET -903236802;SELECT DISTINCT (rt0.c1 IN (((rt0.c3)LIKE(vt0.c0)))), (vt0.c0 COLLATE RTRIM IN ()), COUNT(*) OVER () FROM vt0 WHERE ((((~ ('1373887246'))) NOTNULL));SELECT DISTINCT NULL, (((rt0.c4, rt0.c2, rt0.c4)) NOT BETWEEN ((IFNULL(DISTINCT vt0.c0, vt0.c0), UNLIKELY(rt0.c1), ((((rt0.c0)AND(rt0.c6)))AND(rt0.c3)))) AND ((CASE rt0.c6  WHEN 0.6188338083599303 THEN rt0.c3 WHEN rt0.c6 THEN vt0.c0 WHEN rt0.c0 THEN rt0.c2 END, AVG(rt0.c2), TOTAL(rt0.c2)))), ((((rt0.c6) NOT BETWEEN (rt0.c4) AND (rt0.c2)))LIKE((+ (rt0.c2)))) FROM rt0, vt0; -- 0ms;
SELECT DISTINCT CAST(TOTAL(rt0.c3) AS INTEGER), CAST('' AS BLOB), ((((vt0.c0) BETWEEN (vt0.c0) AND (rt0.c6)))OR((NOT (x'')))) FROM rt0;SELECT CASE WHEN ((rt0.c0) IS TRUE) THEN rt0.c2 END FROM vt0, rt0 WHERE ('K!F9\') LIMIT -1222570181; -- 0ms;
SELECT ALL NULL, (~ (x'670a')), AVG(((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c0))) FROM rt0, vt0 WHERE ((NOT ('' COLLATE BINARY))); -- 0ms;
SELECT CASE WHEN ((rt0.c0) IS TRUE) THEN ((vt0.c0)IS NOT(rt0.c2)) WHEN ((rt0.c6) NOT BETWEEN (rt0.c0) AND (x'')) THEN ((vt0.c0)!=(rt0.c4)) WHEN rt0.c2 THEN ((rt0.c0) NOT NULL) WHEN rt0.c3 THEN SQLITE_COMPILEOPTION_USED(rt0.c6) WHEN (NOT (rt0.c3)) THEN (rt0.c1 IN ()) END FROM vt0, rt0; -- 0ms;
SELECT DISTINCT (NOT (CASE rt0.c5  WHEN rt0.c6 THEN rt0.c5 END)) FROM vt0 ORDER BY CAST(CAST(0.6386150476863706 AS INTEGER) AS TEXT)  NULLS FIRST, (((vt0.c0)) NOT BETWEEN ((((vt0.c0)>>(vt0.c0)))) AND ((vt0.c0))) ASC  NULLS FIRST;SELECT ALL '-836180937', (((- (vt0.c0))) BETWEEN (CASE 1.212516865E9  WHEN vt0.c0 THEN vt0.c0 ELSE 0.9783840633113491 END) AND ((rt0.c4 IN ()))), SUM((((rt0.c3)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c5)))) OVER ( PARTITION BY json_insert('^83oO	鬒Mk', rt0.c3 COLLATE NOCASE, (('QU') NOT NULL)), ((CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c6 THEN rt0.c3 WHEN vt0.c0 THEN rt0.c3 ELSE '592434866' END)OR(vt0.c0 COLLATE BINARY)) ORDER BY CAST(((rt0.c3)!=(rt0.c2)) AS NUMERIC)  NULLS LAST, ((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))) BETWEEN (CASE WHEN rt0.c6 THEN rt0.c6 ELSE vt0.c0 END) AND (((((vt0.c0)OR(rt0.c0)))AND(rt0.c0)))), (('-285004827')&((((0.03069328312014996, rt0.c1, 0.892215873346858)) NOT BETWEEN ((rt0.c1, rt0.c5, vt0.c0)) AND ((0Xffffffffaae87db7, rt0.c1, rt0.c4))))) ASC  NULLS LAST) FROM rt0, vt0 WHERE ((((x'7f8a' COLLATE NOCASE, ((NULL)=(NULL)), NULL COLLATE NOCASE))<=((((x'9e4b')<>('*!')), ((NULL) BETWEEN (0.4489045906251886) AND ('|l')), CAST(x'cb8cbdc8' AS BLOB))))); -- 0ms;
SELECT DISTINCT MAX(CAST(rt0.c5 AS NUMERIC)) FROM rt0, vt0; -- 0ms;
SELECT DISTINCT ((((rt0.c6)>>(rt0.c3)))*(((rt0.c5)&(rt0.c1)))) FROM rt0, vt0 ORDER BY ((rt0.c6) NOT BETWEEN (rt0.c6) AND (rt0.c4)) COLLATE NOCASE DESC  NULLS LAST, (~ (CAST(rt0.c5 AS INTEGER))) ASC  NULLS LAST; -- 0ms;
SELECT DISTINCT CAST('naux4*' AS TEXT) FROM vt0 WHERE (CASE WHEN NULL THEN 0.11872825515456975 WHEN x'' THEN 0xffffffffc8985e00 WHEN x'd2d5' THEN NULL END COLLATE BINARY); -- 0ms;
SELECT DISTINCT ((((rt0.c0) BETWEEN (NULL) AND (vt0.c0))) NOT BETWEEN (vt0.c0 COLLATE NOCASE) AND (rt0.c0)) FROM vt0 WHERE ('0.5965715375768343');SELECT DISTINCT CASE rt0.c5 COLLATE NOCASE  WHEN QUOTE(rt0.c0) THEN rt0.c2 WHEN MIN(rt0.c2) THEN (((rt0.c4, rt0.c2, rt0.c2, rt0.c3, rt0.c1))<((rt0.c3, rt0.c6, rt0.c5, rt0.c5, rt0.c6))) WHEN (rt0.c6 IN ()) THEN (rt0.c3 IN (rt0.c2)) WHEN CAST(rt0.c4 AS TEXT) THEN CAST(x'' AS INTEGER) WHEN (('1500846554') ISNULL) THEN ((rt0.c1) BETWEEN (rt0.c6) AND (rt0.c6)) ELSE NULL END, ((((GROUP_CONCAT(rt0.c1))OR(((((rt0.c2)OR(rt0.c5)))OR(rt0.c4)))))OR(NULLIF(rt0.c4, rt0.c5))), ((((rt0.c4)<(rt0.c3)))<(((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c0)))) FROM vt0, rt0 WHERE (CAST(x'2a05' COLLATE NOCASE AS TEXT)); -- 1ms;
SELECT ALL CASE (((rt0.c0)) NOT BETWEEN (('-1589312279')) AND ((rt0.c4)))  WHEN rt0.c6 COLLATE BINARY THEN (rt0.c5 IN (rt0.c4)) END FROM rt0; -- 0ms;
SELECT LIKELY(DISTINCT (('diJx9nHQ4')IS(vt0.c0))) FROM vt0, rt0 WHERE (CASE WHEN CAST('x+3鬇U|8홉' AS NUMERIC) THEN ((('j!'))>=((0.40194808752960187))) WHEN (('rAT\r\r]P|')GLOB(0xffffffff855ad9d3)) THEN ((((1.026031497E9)OR(NULL)))AND(0.14387139160926943)) WHEN CAST(x'' AS NUMERIC) THEN HEX('0.48957098608954563') ELSE ((NULL)IS(x'')) END) ORDER BY x'bea6'; -- 0ms;
SELECT ALL (((((((vt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((vt0.c0))))AND(SUM(rt0.c5))))OR(rt0.c6 COLLATE RTRIM)), CAST((((vt0.c0, rt0.c2, rt0.c0))!=((rt0.c3, rt0.c4, rt0.c3))) AS NUMERIC), SQLITE_VERSION() FROM rt0 WHERE (((CAST('' AS NUMERIC)) IS TRUE));SELECT DISTINCT ((((rt0.c6)<=(0.49598165439980746))) ISNULL) FROM vt0, rt0 WHERE ((((+ (3.69328645E8)))IS((- ('CPxD'))))); -- 0ms;
SELECT (((rt0.c0)) NOT BETWEEN ((rt0.c6)) AND ((rt0.c6))) COLLATE BINARY FROM vt0;SELECT DISTINCT rt0.c2, (vt0.c0 COLLATE NOCASE IN ()), DATETIME((rt0.c6 IN (rt0.c3)), CAST(rt0.c5 AS INTEGER), ((((rt0.c2)OR(rt0.c1)))OR(rt0.c2))) FROM vt0, rt0 WHERE (((('-662118770')||('bZ&J>fUa')) IN ())); -- 0ms;
SELECT CASE WHEN (('!6+hHv捕sa')/(rt0.c1)) THEN 9.62342148E8 ELSE ((rt0.c1)LIKE(rt0.c4)) END, LEAD(rt0.c4, CASE ((rt0.c4) IS TRUE)  WHEN ((rt0.c3) NOT NULL) THEN ((rt0.c0)||(rt0.c2)) WHEN ((x'')=(vt0.c0)) THEN rt0.c6 WHEN ((vt0.c0)IS('')) THEN ((0.22199323992405628)>=(vt0.c0)) ELSE (rt0.c4 IN (rt0.c2, vt0.c0)) END, (((rt0.c2 IN ())) NOT NULL)) OVER ( ORDER BY (((((rt0.c5)+(rt0.c1))))>=((((((((((rt0.c6)AND(rt0.c5)))OR(rt0.c4)))OR(NULL)))OR(rt0.c6)))))  NULLS FIRST), (rt0.c1 COLLATE RTRIM IN ()) FROM rt0 NOT INDEXED, vt0 WHERE (((('Z,&#6<iR')>=(1.369995358E9)) IN ())) GROUP BY (CAST(vt0.c0 AS INTEGER) IN (rt0.c2 COLLATE NOCASE)), ((((rt0.c0) BETWEEN (rt0.c6) AND (rt0.c1))) BETWEEN (LIKELY(DISTINCT 0.10246496123610616)) AND (CASE WHEN rt0.c3 THEN vt0.c0 END)), CASE CAST(rt0.c2 AS BLOB)  WHEN ((rt0.c2)OR(rt0.c6)) THEN (((rt0.c4, rt0.c2, rt0.c2))<=((rt0.c6, rt0.c4, vt0.c0))) WHEN 'ok' THEN (((rt0.c6)) BETWEEN ((rt0.c6)) AND ((rt0.c3))) WHEN CASE rt0.c0  WHEN rt0.c6 THEN rt0.c0 WHEN '1135049762' THEN rt0.c4 WHEN rt0.c4 THEN rt0.c0 END THEN CAST(rt0.c2 AS INTEGER) WHEN rt0.c0 COLLATE RTRIM THEN vt0.c0 COLLATE RTRIM WHEN (~ (rt0.c6)) THEN json_extract(rt0.c6, rt0.c0) ELSE (~ (rt0.c1)) END, (((rt0.c5, rt0.c5, rt0.c0, rt0.c0, rt0.c3)) NOT BETWEEN ((-607528386, UPPER(rt0.c6), (rt0.c2 IN ()), rt0.c2, (- (rt0.c3)))) AND ((rt0.c5, ((x'')OR(rt0.c2)), rt0.c1, ((vt0.c0) ISNULL), (vt0.c0 IN (vt0.c0))))), CAST(((rt0.c2)+(rt0.c4)) AS INTEGER) HAVING ((((rt0.c0)<(0.08498252981344312)))<=(CAST(rt0.c1 AS NUMERIC))); -- 0ms;
SELECT DISTINCT CASE ((NULL) NOT NULL)  WHEN ((0X4b40f0cb) BETWEEN (vt0.c0) AND (rt0.c6)) THEN ((rt0.c6) NOT NULL) ELSE (rt0.c5 IN ()) END, (NOT ('0.3826134792817162')), (((rt0.c3, rt0.c0, rt0.c0)) NOT BETWEEN ((rt0.c1, ((rt0.c2) IS TRUE), (((rt0.c3, rt0.c0, rt0.c3)) BETWEEN ((rt0.c5, vt0.c0, rt0.c5)) AND ((rt0.c1, rt0.c2, vt0.c0))))) AND ((rt0.c6, ((rt0.c5)LIKE(rt0.c5)), rtreenode(rt0.c3, rt0.c4)))) FROM rt0, vt0 WHERE (((('')) BETWEEN ((x'0fd4')) AND ((''))) COLLATE RTRIM); -- 0ms;
SELECT DISTINCT (((((rt0.c1)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c0))))IS(((rt0.c5)>=(rt0.c1)))), UPPER((rt0.c5 IN ())), ((json_valid(rt0.c4)) NOT BETWEEN (((((((((rt0.c2)AND(rt0.c0)))OR(rt0.c6)))AND(rt0.c5)))OR(rt0.c1))) AND (rt0.c6)), DATETIME(rt0.c4 COLLATE NOCASE, (0.6593423431375798 IN ()), rt0.c0), AVG(((rt0.c3) BETWEEN (rt0.c3) AND (rt0.c1)) COLLATE BINARY) FROM rt0, vt0; -- 0ms;
