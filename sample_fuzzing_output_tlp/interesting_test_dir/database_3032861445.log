-- Time: 2024/06/11 08:43:36
-- Database: database45
-- Database version: 3.40.0
-- seed value: 3032861445
PRAGMA cache_size = 50000; -- 1ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA case_sensitive_like=ON; -- 0ms;
PRAGMA encoding = 'UTF-16le'; -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree_i32(c0, c1, c2); -- 0ms;
CREATE VIRTUAL TABLE vt1 USING fts4(c0 UNINDEXED, c1 UNINDEXED, c2, order=ASC); -- 1ms;
REINDEX; -- 1ms;
BEGIN  TRANSACTION; -- 0ms;
UPDATE rt0 SET (c2)=(NULL) WHERE ((((rt0.c0)||(rt0.c1))) NOT BETWEEN (((rt0.c0)/(rt0.c0))) AND (IFNULL(DISTINCT rt0.c1, NULL))); -- 0ms;
REINDEX RTRIM; -- 0ms;
UPDATE vt1 SET (c2)=(NULL); -- 0ms;
PRAGMA cache_spill = true; -- 0ms;
UPDATE OR IGNORE vt1 SET c2=x'', c1=853579097; -- 0ms;
UPDATE OR IGNORE rt0 SET (c1)=(x'') WHERE (((('41-500000v')/(rt0.c0)))/(x'')); -- 0ms;
INSERT OR IGNORE INTO rt0(c0, c1) VALUES ('41-500000v', x'7c9f'); -- 0ms;
ANALYZE sqlite_master; -- 0ms;
PRAGMA temp.wal_autocheckpoint = 2453558881404170805; -- 0ms;
REINDEX; -- 0ms;
UPDATE OR IGNORE rt0 SET c2=0.8849272183048081, c0=x'' WHERE rt0.c1; -- 0ms;
PRAGMA wal_checkpoint(FULL); -- 0ms;
PRAGMA defer_foreign_keys = true; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
PRAGMA auto_vacuum; -- 0ms;
REINDEX; -- 1ms;
REINDEX; -- 0ms;
INSERT INTO vt1(vt1) VALUES('optimize'); -- 0ms;
PRAGMA checkpoint_fullfsync; -- 0ms;
INSERT OR REPLACE INTO rt0 VALUES (NULL, 0.912199772623575, '-1025803815'); -- 0ms;
INSERT OR IGNORE INTO rt0(c2) VALUES (x''), (x'96d6'), (NULL); -- 1ms;
INSERT OR IGNORE INTO vt1(c2) VALUES (''), (0.8849272183048081), (x''); -- 0ms;
INSERT INTO vt1(vt1) VALUES('optimize'); -- 0ms;
DROP TABLE vt1; -- 1ms;
UPDATE OR IGNORE rt0 SET (c0)=('M&') WHERE (((0.6954499744564897)%(rt0.c1)) IN ()); -- 0ms;
PRAGMA mmap_size; -- 0ms;
UPDATE OR IGNORE rt0 SET c1=8.53579097E8 WHERE (((- (rt0.c0))) IS TRUE); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
VACUUM; -- 0ms;
VACUUM temp; -- 0ms;
REINDEX RTRIM; -- 0ms;
UPDATE OR ABORT rt0 SET (c0, c2, c1)=(x'', x'3e89', x'') WHERE MAX(((rt0.c0) IS TRUE), rt0.c1 COLLATE BINARY, (((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c0))), CASE rt0.c2  WHEN -2017967981 THEN rt0.c1 ELSE rt0.c2 END); -- 0ms;
UPDATE OR IGNORE rt0 SET (c2)=(0.6313197053666522); -- 1ms;
UPDATE OR IGNORE rt0 SET c1='541599248' WHERE ',0'; -- 0ms;
PRAGMA cache_size; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA stats; -- 0ms;
UPDATE OR IGNORE rt0 SET c2=NULL WHERE ((((rt0.c1)<=(rt0.c1)))&(rt0.c0)); -- 0ms;
PRAGMA main.ignore_check_constraints; -- 0ms;
UPDATE OR IGNORE rt0 SET (c2, c1)=(NULL, x'') WHERE ((((rt0.c1)-(rt0.c1)))IS NOT(((((rt0.c1)OR(rt0.c1)))OR(rt0.c1)))); -- 0ms;
REINDEX BINARY; -- 0ms;
UPDATE OR IGNORE rt0 SET (c0)=(0.09917900111937039) WHERE ((rt0.c2 COLLATE BINARY)IS NOT(rt0.c0 COLLATE RTRIM)); -- 0ms;
UPDATE OR IGNORE rt0 SET (c0)=(0.912199772623575) WHERE ((((((((((rt0.c0)*(rt0.c1)))OR(((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0)))))OR(((rt0.c2)||(rt0.c0)))))AND(CASE WHEN rt0.c2 THEN x'' WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c0 END)))AND((rt0.c2 IN (rt0.c1, rt0.c1)))); -- 0ms;
UPDATE rt0 SET (c0)=(NULL); -- 0ms;
UPDATE OR REPLACE rt0 SET c0=0.35235597593917556, c1=x'5ca5'; -- 0ms;
PRAGMA temp.reverse_unordered_selects; -- 0ms;
ANALYZE; -- 0ms;
UPDATE OR IGNORE rt0 SET (c0)=(NULL); -- 0ms;
INSERT OR IGNORE INTO rt0(c2, c1) VALUES (x'', ''), (0.3672452083314731, NULL), (x'', x''), (-1.025803815E9, 'mw䂓'), (0.5825801577232079, 0xffffffff87b84093); -- 0ms;
DELETE FROM rt0; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
UPDATE OR IGNORE rt0 SET c1=-1552454215 WHERE (((- (rt0.c2))) NOT NULL); -- 0ms;
UPDATE OR IGNORE rt0 SET (c1)=(NULL) WHERE ((((rt0.c2)>=(rt0.c2))) NOT BETWEEN (((rt0.c2) NOT BETWEEN (x'') AND (rt0.c2))) AND ((rt0.c0 IN ()))); -- 0ms;
PRAGMA incremental_vacuum(-1552454215); -- 0ms;
INSERT OR IGNORE INTO rt0(c0, c1) VALUES (0.912199772623575, x''); -- 0ms;
END; -- 0ms;
UPDATE OR IGNORE rt0 SET c2=0.12259536758611644; -- 1ms;
UPDATE OR IGNORE rt0 SET (c1)=(x'') WHERE ((((rt0.c0) IS TRUE))>>((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c0))))); -- 4ms;
UPDATE rt0 SET (c0)=(NULL) WHERE (((rt0.c1)) NOT BETWEEN ((((((rt0.c1)AND(rt0.c0)))AND(rt0.c1)))) AND ((((rt0.c2)LIKE(rt0.c0))))); -- 0ms;
PRAGMA main.reverse_unordered_selects; -- 0ms;
INSERT OR IGNORE INTO rt0(c2, c0) VALUES (0Xffffffffa3776db9, -1.025803815E9); -- 0ms;
UPDATE OR IGNORE rt0 SET (c0)=('M&'); -- 0ms;
UPDATE OR IGNORE rt0 SET c2=''; -- 0ms;
UPDATE rt0 SET (c0)=('-497914357') WHERE rt0.c1; -- 0ms;
REINDEX NOCASE; -- 0ms;
END; -- 0ms;
VACUUM temp; -- 0ms;
UPDATE OR IGNORE rt0 SET (c0)=(x'f843') WHERE ((((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1)))&(((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO rt0(c2) VALUES ('m&'); -- 0ms;
UPDATE OR IGNORE rt0 SET (c2)=(x'be90'); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
UPDATE OR IGNORE rt0 SET c2=NULL WHERE (((rt0.c2 IN ())) IS TRUE); -- 0ms;
UPDATE rt0 SET (c1)=(x'3fa6cee0'); -- 0ms;
COMMIT; -- 1ms;
ANALYZE rt0; -- 1ms;
REINDEX  rt0; -- 0ms;
UPDATE OR IGNORE rt0 SET (c1)=(x'') WHERE (((((((((rt0.c0 IN ()))AND((((rt0.c1, rt0.c1, rt0.c1)) NOT BETWEEN ((rt0.c0, rt0.c1, rt0.c0)) AND ((rt0.c2, x'7059', rt0.c2))))))OR((rt0.c1 IN (rt0.c1)))))AND(rt0.c0)))AND(((rt0.c1) NOT BETWEEN (rt0.c1) AND (0.42328431539676115)))); -- 3ms;
PRAGMA temp.recursive_triggers = false; -- 0ms;
PRAGMA main.cache_spill = true; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO rt0(c1) VALUES (NULL), (0.9383561309021836), (NULL); -- 0ms;
PRAGMA main.checkpoint_fullfsync = false; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE ((+ ((rt0.c2 IN ())))) UNION ALL SELECT * FROM rt0 WHERE ((NOT ((+ ((rt0.c2 IN ())))))) UNION ALL SELECT ALL * FROM rt0 WHERE ((((+ ((rt0.c2 IN ())))) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((CASE rt0.c0  WHEN rt0.c2 THEN rt0.c2 END) NOT BETWEEN (CAST(rt0.c2 AS TEXT)) AND (CAST(rt0.c0 AS BLOB)))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((CASE rt0.c0  WHEN rt0.c2 THEN rt0.c2 END) NOT BETWEEN (CAST(rt0.c2 AS TEXT)) AND (CAST(rt0.c0 AS BLOB)))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((CASE rt0.c0  WHEN rt0.c2 THEN rt0.c2 END) NOT BETWEEN (CAST(rt0.c2 AS TEXT)) AND (CAST(rt0.c0 AS BLOB)))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 WHERE ((('-2017967981' COLLATE RTRIM) ISNULL)) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0 WHERE ((NOT ((('-2017967981' COLLATE RTRIM) ISNULL)))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0 WHERE ((((('-2017967981' COLLATE RTRIM) ISNULL)) ISNULL)) GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM rt0;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 WHERE (((((((((CASE rt0.c1  WHEN rt0.c2 THEN rt0.c2 END)AND((NOT (rt0.c1)))))AND(CAST(rt0.c0 AS TEXT))))OR((('') NOT BETWEEN (rt0.c1) AND (rt0.c1)))))OR(UNLIKELY(DISTINCT rt0.c0)))) UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (((((((((CASE rt0.c1  WHEN rt0.c2 THEN rt0.c2 END)AND((NOT (rt0.c1)))))AND(CAST(rt0.c0 AS TEXT))))OR((('') NOT BETWEEN (rt0.c1) AND (rt0.c1)))))OR(UNLIKELY(DISTINCT rt0.c0)))))) UNION ALL SELECT rt0.c2, rt0.c1 FROM rt0 WHERE (((((((((((CASE rt0.c1  WHEN rt0.c2 THEN rt0.c2 END)AND((NOT (rt0.c1)))))AND(CAST(rt0.c0 AS TEXT))))OR((('') NOT BETWEEN (rt0.c1) AND (rt0.c1)))))OR(UNLIKELY(DISTINCT rt0.c0)))) ISNULL));
SELECT ALL rt0.c2, rt0.c1 FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (TRIM(ROUND(rt0.c2, rt0.c0))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (TRIM(ROUND(rt0.c2, rt0.c0))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((TRIM(ROUND(rt0.c2, rt0.c0))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE (((x'')OR(821914994))) GROUP BY rt0.c0, rt0.c2, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (((x'')OR(821914994))))) GROUP BY rt0.c0, rt0.c2, rt0.c1 UNION SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE (((((x'')OR(821914994))) ISNULL)) GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT ALL rt0.c0 FROM rt0;
SELECT ALL rt0.c0 FROM rt0 WHERE (((((0.3974828042247981)OR(rt0.c0)))AND((- (rt0.c2))))) UNION ALL SELECT ALL rt0.c0 FROM rt0 WHERE ((NOT (((((0.3974828042247981)OR(rt0.c0)))AND((- (rt0.c2))))))) UNION ALL SELECT ALL rt0.c0 FROM rt0 WHERE (((((((0.3974828042247981)OR(rt0.c0)))AND((- (rt0.c2))))) ISNULL));
SELECT ALL rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0 WHERE (CASE ('' IN ())  WHEN ((rt0.c1) NOT BETWEEN (x'') AND ('-1532343475')) THEN ((rt0.c0)=(rt0.c2)) WHEN ((rt0.c1)IS NOT(rt0.c0)) THEN rt0.c2 WHEN CAST(rt0.c0 AS NUMERIC) THEN 541599248 END) UNION SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (CASE ('' IN ())  WHEN ((rt0.c1) NOT BETWEEN (x'') AND ('-1532343475')) THEN ((rt0.c0)==(rt0.c2)) WHEN ((rt0.c1)IS NOT(rt0.c0)) THEN rt0.c2 WHEN CAST(rt0.c0 AS NUMERIC) THEN 541599248 END))) UNION SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0 WHERE (((CASE ('' IN ())  WHEN ((rt0.c1) NOT BETWEEN (x'') AND ('-1532343475')) THEN ((rt0.c0)==(rt0.c2)) WHEN ((rt0.c1)IS NOT(rt0.c0)) THEN rt0.c2 WHEN CAST(rt0.c0 AS NUMERIC) THEN 541599248 END) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 WHERE (((((0X20482610)/(rt0.c1)))/(CAST(rt0.c0 AS INTEGER)))) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM rt0 WHERE ((NOT (((((0X20482610)/(rt0.c1)))/(CAST(rt0.c0 AS INTEGER)))))) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM rt0 WHERE (((((((0X20482610)/(rt0.c1)))/(CAST(rt0.c0 AS INTEGER)))) ISNULL)) GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING COUNT(((rt0.c2) NOT NULL)) UNION ALL SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING (NOT (COUNT(((rt0.c2) NOT NULL)))) UNION ALL SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING ((COUNT(((rt0.c2) NOT NULL))) ISNULL);
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING COUNT(((rt0.c2) NOT NULL)) UNION ALL SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING (NOT (COUNT(((rt0.c2) NOT NULL)))) UNION ALL SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING ((COUNT(((rt0.c2) NOT NULL))) ISNULL);
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c1, rt0.c2 FROM rt0;
SELECT rt0.c1, rt0.c2 FROM rt0 WHERE (rt0.c1) UNION ALL SELECT ALL rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (rt0.c1))) UNION ALL SELECT ALL rt0.c1, rt0.c2 FROM rt0 WHERE (((rt0.c1) ISNULL));
SELECT rt0.c1, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((((('2101901811') BETWEEN (rt0.c2) AND (rt0.c0)))<<(((((rt0.c0)OR(rt0.c2)))OR(1509851641))))) UNION SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT ((((('2101901811') BETWEEN (rt0.c2) AND (rt0.c0)))<<(((((rt0.c0)OR(rt0.c2)))OR(1509851641))))))) UNION SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((((((('2101901811') BETWEEN (rt0.c2) AND (rt0.c0)))<<(((((rt0.c0)OR(rt0.c2)))OR(1509851641))))) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0;
SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c1, rt0.c2 FROM rt0 WHERE (((((rt0.c2)GLOB(rt0.c1)))<>(LTRIM(rt0.c0)))) GROUP BY rt0.c1, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (((((rt0.c2)GLOB(rt0.c1)))!=(LTRIM(rt0.c0)))))) GROUP BY rt0.c1, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c2 FROM rt0 WHERE (((((((rt0.c2)GLOB(rt0.c1)))<>(LTRIM(rt0.c0)))) ISNULL)) GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING ((COUNT(*)) NOT BETWEEN (((COUNT(AVG(rt0.c0))) NOT BETWEEN (rt0.c0) AND (SUM(AVG(rt0.c0))))) AND ((~ ('-497914357')))) UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT (((COUNT(*)) NOT BETWEEN (((COUNT(AVG(rt0.c0))) NOT BETWEEN (rt0.c0) AND (SUM(AVG(rt0.c0))))) AND ((~ ('-497914357')))))) UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING ((((COUNT(*)) NOT BETWEEN (((COUNT(AVG(rt0.c0))) NOT BETWEEN (rt0.c0) AND (SUM(AVG(rt0.c0))))) AND ((~ ('-497914357'))))) ISNULL);
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE (((HEX(rt0.c2)) NOT NULL)) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (((HEX(rt0.c2)) NOT NULL)))) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE (((((HEX(rt0.c2)) NOT NULL)) ISNULL));
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c1 FROM rt0 WHERE ((((rt0.c1, rt0.c0, rt0.c2, rt0.c1, rt0.c0)) BETWEEN ((TYPEOF(DISTINCT rt0.c0), ((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c0)), rt0.c0 COLLATE RTRIM, ((rt0.c2)GLOB(rt0.c2)), CASE WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END)) AND ((((((rt0.c0)OR(rt0.c2)))OR('0.3974828042247981')), CAST(rt0.c2 AS TEXT), (- (rt0.c0)), (rt0.c1 IN (rt0.c0)), ((1.509851641E9)||(rt0.c2)))))) UNION SELECT DISTINCT rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT ((((rt0.c1, rt0.c0, rt0.c2, rt0.c1, rt0.c0)) BETWEEN ((TYPEOF(DISTINCT rt0.c0), ((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c0)), rt0.c0 COLLATE RTRIM, ((rt0.c2)GLOB(rt0.c2)), CASE WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END)) AND ((((((rt0.c0)OR(rt0.c2)))OR('0.3974828042247981')), CAST(rt0.c2 AS TEXT), (- (rt0.c0)), (rt0.c1 IN (rt0.c0)), ((1.509851641E9)||(rt0.c2)))))))) UNION SELECT DISTINCT rt0.c0, rt0.c1 FROM rt0 WHERE ((((((rt0.c1, rt0.c0, rt0.c2, rt0.c1, rt0.c0)) BETWEEN ((TYPEOF(DISTINCT rt0.c0), ((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c0)), rt0.c0 COLLATE RTRIM, ((rt0.c2)GLOB(rt0.c2)), CASE WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END)) AND ((((((rt0.c0)OR(rt0.c2)))OR('0.3974828042247981')), CAST(rt0.c2 AS TEXT), (- (rt0.c0)), (rt0.c1 IN (rt0.c0)), ((1.509851641E9)||(rt0.c2)))))) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c1 FROM rt0;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (rt0.c1) GROUP BY rt0.c1, rt0.c0, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (rt0.c1))) GROUP BY rt0.c1, rt0.c0, rt0.c2 UNION SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (((rt0.c1) ISNULL)) GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING CASE TYPEOF(rt0.c1)  WHEN TOTAL(rt0.c2) THEN (((SUM(SUM(x'21cc'))))<=((COUNT(*)))) WHEN SQLITE_COMPILEOPTION_USED(MIN(GROUP_CONCAT(rt0.c0))) THEN rt0.c2 WHEN SUM(rt0.c1) THEN UNLIKELY(DISTINCT TOTAL(rt0.c0)) END UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING (NOT (CASE TYPEOF(rt0.c1)  WHEN TOTAL(rt0.c2) THEN (((SUM(SUM(x'21cc'))))<=((COUNT(*)))) WHEN SQLITE_COMPILEOPTION_USED(MIN(GROUP_CONCAT(rt0.c0))) THEN rt0.c2 WHEN SUM(rt0.c1) THEN UNLIKELY(DISTINCT TOTAL(rt0.c0)) END)) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING ((CASE TYPEOF(rt0.c1)  WHEN TOTAL(rt0.c2) THEN (((SUM(SUM(x'21cc'))))<=((COUNT(*)))) WHEN SQLITE_COMPILEOPTION_USED(MIN(GROUP_CONCAT(rt0.c0))) THEN rt0.c2 WHEN SUM(rt0.c1) THEN UNLIKELY(DISTINCT TOTAL(rt0.c0)) END) ISNULL);
SELECT ALL rt0.c2 FROM rt0;
SELECT ALL rt0.c2 FROM rt0 WHERE (x'') UNION ALL SELECT rt0.c2 FROM rt0 WHERE ((NOT (x''))) UNION ALL SELECT rt0.c2 FROM rt0 WHERE (((x'') ISNULL));
SELECT ALL rt0.c2 FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((((rt0.c1)) BETWEEN ((CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END)) AND ((CAST(rt0.c1 AS TEXT))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((((rt0.c1)) BETWEEN ((CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END)) AND ((CAST(rt0.c1 AS TEXT))))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((((rt0.c1)) BETWEEN ((CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END)) AND ((CAST(rt0.c1 AS TEXT))))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE (((((rt0.c1)AND(rt0.c0))) NOTNULL)) GROUP BY rt0.c0, rt0.c2, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (((((rt0.c1)AND(rt0.c0))) NOTNULL)))) GROUP BY rt0.c0, rt0.c2, rt0.c1 UNION SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE (((((((rt0.c1)AND(rt0.c0))) NOTNULL)) ISNULL)) GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING ((((rt0.c1) IS TRUE))||(MAX(rt0.c2))) UNION ALL SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (NOT (((((rt0.c1) IS TRUE))||(MAX(rt0.c2))))) UNION ALL SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING ((((((rt0.c1) IS TRUE))||(MAX(rt0.c2)))) ISNULL);
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING ((((rt0.c1) IS TRUE))||(MAX(rt0.c2))) UNION ALL SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (NOT (((((rt0.c1) IS TRUE))||(MAX(rt0.c2))))) UNION ALL SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING ((((((rt0.c1) IS TRUE))||(MAX(rt0.c2)))) ISNULL);
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL * FROM rt0;
SELECT * FROM rt0 WHERE ((((((rt0.c1, rt0.c2, x'')) BETWEEN ((rt0.c0, rt0.c0, rt0.c1)) AND ((rt0.c1, rt0.c1, rt0.c0))))%(rt0.c1 COLLATE RTRIM))) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT ((((((rt0.c1, rt0.c2, x'')) BETWEEN ((rt0.c0, rt0.c0, rt0.c1)) AND ((rt0.c1, rt0.c1, rt0.c0))))%(rt0.c1 COLLATE RTRIM))))) UNION ALL SELECT * FROM rt0 WHERE ((((((((rt0.c1, rt0.c2, x'')) BETWEEN ((rt0.c0, rt0.c0, rt0.c1)) AND ((rt0.c1, rt0.c1, rt0.c0))))%(rt0.c1 COLLATE RTRIM))) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((~ (CAST(rt0.c2 AS BLOB)))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((~ (CAST(rt0.c2 AS BLOB)))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((~ (CAST(rt0.c2 AS BLOB)))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE (json_type(((rt0.c1) ISNULL))) GROUP BY rt0.c1, rt0.c2, rt0.c0 UNION SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (json_type(((rt0.c1) ISNULL))))) GROUP BY rt0.c1, rt0.c2, rt0.c0 UNION SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE (((json_type(((rt0.c1) ISNULL))) ISNULL)) GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING GROUP_CONCAT(MAX(rt0.c1)) COLLATE NOCASE UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING (NOT (GROUP_CONCAT(MAX(rt0.c1)) COLLATE NOCASE)) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING ((GROUP_CONCAT(MAX(rt0.c1)) COLLATE NOCASE) ISNULL);
SELECT rt0.c0, rt0.c1 FROM rt0;
SELECT rt0.c0, rt0.c1 FROM rt0 WHERE ((((rt0.c2 IN ()))&(((x'')OR(rt0.c1))))) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT ((((rt0.c2 IN ()))&(((x'')OR(rt0.c1))))))) UNION ALL SELECT rt0.c0, rt0.c1 FROM rt0 WHERE ((((((rt0.c2 IN ()))&(((x'')OR(rt0.c1))))) ISNULL));
SELECT rt0.c0, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE (((0.10236799685140674)LIKE(rt0.c0 COLLATE RTRIM))) UNION SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (((0.10236799685140674)LIKE(rt0.c0 COLLATE RTRIM))))) UNION SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE (((((0.10236799685140674)LIKE(rt0.c0 COLLATE RTRIM))) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM rt0;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((- (((rt0.c2)AND(rt0.c0))))) GROUP BY rt0.c2, rt0.c0, rt0.c1 UNION SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT ((- (((rt0.c2)AND(rt0.c0))))))) GROUP BY rt0.c2, rt0.c0, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((((- (((rt0.c2)AND(rt0.c0))))) ISNULL)) GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING CAST(CAST(AVG(rt0.c0) AS REAL) AS NUMERIC) UNION ALL SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (NOT (CAST(CAST(AVG(rt0.c0) AS REAL) AS NUMERIC))) UNION ALL SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING ((CAST(CAST(AVG(rt0.c0) AS REAL) AS NUMERIC)) ISNULL);
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING CAST(CAST(AVG(rt0.c0) AS REAL) AS NUMERIC) UNION ALL SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (NOT (CAST(CAST(AVG(rt0.c0) AS REAL) AS NUMERIC))) UNION ALL SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING ((CAST(CAST(AVG(rt0.c0) AS REAL) AS NUMERIC)) ISNULL);
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL MIN(((((rt0.c0)=(rt0.c1)))AND(((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2))))) FROM rt0;
SELECT ALL rt0.c2 FROM rt0;
SELECT rt0.c2 FROM rt0 WHERE ((+ (CAST(rt0.c2 AS BLOB)))) UNION ALL SELECT ALL rt0.c2 FROM rt0 WHERE ((NOT ((+ (CAST(rt0.c2 AS BLOB)))))) UNION ALL SELECT rt0.c2 FROM rt0 WHERE ((((+ (CAST(rt0.c2 AS BLOB)))) ISNULL));
SELECT ALL rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c1 FROM rt0 WHERE ((((rt0.c1)-(rt0.c1)) IN (CAST(rt0.c2 AS INTEGER)))) UNION SELECT DISTINCT rt0.c1 FROM rt0 WHERE ((NOT ((((rt0.c1)-(rt0.c1)) IN (CAST(rt0.c2 AS INTEGER)))))) UNION SELECT DISTINCT rt0.c1 FROM rt0 WHERE ((((((rt0.c1)-(rt0.c1)) IN (CAST(rt0.c2 AS INTEGER)))) ISNULL));
SELECT DISTINCT rt0.c1 FROM rt0;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((((((rt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c2))))=(((432950701) NOTNULL)))) GROUP BY rt0.c1, rt0.c0, rt0.c2 UNION SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT ((((((rt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c2))))==(((432950701) NOTNULL)))))) GROUP BY rt0.c1, rt0.c0, rt0.c2 UNION SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((((((((rt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c2))))=(((432950701) NOTNULL)))) ISNULL)) GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING ((COUNT(*)) NOTNULL) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING (NOT (((COUNT(*)) NOTNULL))) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING ((((COUNT(*)) NOTNULL)) ISNULL);
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING ((COUNT(*)) NOTNULL) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING (NOT (((COUNT(*)) NOTNULL))) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING ((((COUNT(*)) NOTNULL)) ISNULL);
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE (CASE (~ (rt0.c1))  WHEN rt0.c1 THEN rt0.c0 COLLATE NOCASE WHEN ((((((((rt0.c1)AND(rt0.c2)))OR(rt0.c0)))OR(rt0.c1)))OR(rt0.c2)) THEN ((rt0.c0)LIKE(rt0.c2)) WHEN SQLITE_SOURCE_ID() THEN CAST(rt0.c0 AS TEXT) ELSE CAST(rt0.c0 AS NUMERIC) END) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (CASE (~ (rt0.c1))  WHEN rt0.c1 THEN rt0.c0 COLLATE NOCASE WHEN ((((((((rt0.c1)AND(rt0.c2)))OR(rt0.c0)))OR(rt0.c1)))OR(rt0.c2)) THEN ((rt0.c0)LIKE(rt0.c2)) WHEN SQLITE_SOURCE_ID() THEN CAST(rt0.c0 AS TEXT) ELSE CAST(rt0.c0 AS NUMERIC) END))) UNION ALL SELECT ALL * FROM rt0 WHERE (((CASE (~ (rt0.c1))  WHEN rt0.c1 THEN rt0.c0 COLLATE NOCASE WHEN ((((((((rt0.c1)AND(rt0.c2)))OR(rt0.c0)))OR(rt0.c1)))OR(rt0.c2)) THEN ((rt0.c0)LIKE(rt0.c2)) WHEN SQLITE_SOURCE_ID() THEN CAST(rt0.c0 AS TEXT) ELSE CAST(rt0.c0 AS NUMERIC) END) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE (CAST(NULL AS REAL)) UNION SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (CAST(NULL AS REAL)))) UNION SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE (((CAST(NULL AS REAL)) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0 FROM rt0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM rt0 WHERE (((GLOB(rt0.c1, rt0.c0)) ISNULL)) GROUP BY rt0.c2, rt0.c0 UNION SELECT rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (((GLOB(rt0.c1, rt0.c0)) ISNULL)))) GROUP BY rt0.c2, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c0 FROM rt0 WHERE (((((GLOB(rt0.c1, rt0.c0)) ISNULL)) ISNULL)) GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING 0.8728732641186079 UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING (NOT (0.8728732641186079)) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING ((0.8728732641186079) ISNULL);
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING 0.8728732641186079 UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING (NOT (0.8728732641186079)) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING ((0.8728732641186079) ISNULL);
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT ALL * FROM rt0;
SELECT * FROM rt0 WHERE (((((CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 END)OR(((((rt0.c2)AND(rt0.c1)))AND(rt0.c0)))))OR(rt0.c2))) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (((((CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 END)OR(((((rt0.c2)AND(rt0.c1)))AND(rt0.c0)))))OR(rt0.c2))))) UNION ALL SELECT * FROM rt0 WHERE (((((((CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 END)OR(((((rt0.c2)AND(rt0.c1)))AND(rt0.c0)))))OR(rt0.c2))) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0 FROM rt0 NOT INDEXED WHERE (rt0.c1) UNION SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (rt0.c1))) UNION SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE (((rt0.c1) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0 FROM rt0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE (((CAST(rt0.c0 AS TEXT))=(((rt0.c2)LIKE(rt0.c2))))) GROUP BY rt0.c1, rt0.c2, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (((CAST(rt0.c0 AS TEXT))=(((rt0.c2)LIKE(rt0.c2))))))) GROUP BY rt0.c1, rt0.c2, rt0.c0 UNION SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE (((((CAST(rt0.c0 AS TEXT))==(((rt0.c2)LIKE(rt0.c2))))) ISNULL)) GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING rt0.c0 UNION ALL SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING (NOT (rt0.c0)) UNION ALL SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING ((rt0.c0) ISNULL);
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING rt0.c0 UNION ALL SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING (NOT (rt0.c0)) UNION ALL SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING ((rt0.c0) ISNULL);
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE (((((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2))) NOT BETWEEN (CASE WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c2 END) AND (((((rt0.c1)OR(rt0.c2)))OR(0Xffffffffc70060f2))))) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (((((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2))) NOT BETWEEN (CASE WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c2 END) AND (((((rt0.c1)OR(rt0.c2)))OR(0xffffffffc70060f2))))))) UNION ALL SELECT * FROM rt0 WHERE (((((((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2))) NOT BETWEEN (CASE WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c2 END) AND (((((rt0.c1)OR(rt0.c2)))OR(0Xffffffffc70060f2))))) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0 WHERE (((rt0.c2) BETWEEN (((rt0.c0) IS FALSE)) AND ((- ('fG'))))) UNION SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (((rt0.c2) BETWEEN (((rt0.c0) IS FALSE)) AND ((- ('fG'))))))) UNION SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0 WHERE (((((rt0.c2) BETWEEN (((rt0.c0) IS FALSE)) AND ((- ('fG'))))) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((- (CASE WHEN rt0.c2 THEN 1984038354 END))) GROUP BY rt0.c0, rt0.c2, rt0.c1 UNION SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT ((- (CASE WHEN rt0.c2 THEN 1984038354 END))))) GROUP BY rt0.c0, rt0.c2, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((((- (CASE WHEN rt0.c2 THEN 1984038354 END))) ISNULL)) GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING ((((((((rt0.c2)AND(rt0.c1)))OR(rt0.c2)))OR(0.2414108658771349)))OR((+ (SUM(GROUP_CONCAT(MIN(COUNT(rt0.c2)))))))) UNION ALL SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING (NOT (((((((((rt0.c2)AND(rt0.c1)))OR(rt0.c2)))OR(0.2414108658771349)))OR((+ (SUM(GROUP_CONCAT(MIN(COUNT(rt0.c2)))))))))) UNION ALL SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING ((((((((((rt0.c2)AND(rt0.c1)))OR(rt0.c2)))OR(0.2414108658771349)))OR((+ (SUM(GROUP_CONCAT(MIN(COUNT(rt0.c2))))))))) ISNULL);
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE (0.867026878075554) UNION ALL SELECT * FROM rt0 WHERE ((NOT (0.867026878075554))) UNION ALL SELECT ALL * FROM rt0 WHERE (((0.867026878075554) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE (LOWER(DISTINCT CAST(rt0.c2 AS REAL))) UNION SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (LOWER(DISTINCT CAST(rt0.c2 AS REAL))))) UNION SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE (((LOWER(DISTINCT CAST(rt0.c2 AS REAL))) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0 FROM rt0;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE (CAST(rt0.c0 AS INTEGER)) GROUP BY rt0.c0, rt0.c1, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (CAST(rt0.c0 AS INTEGER)))) GROUP BY rt0.c0, rt0.c1, rt0.c2 UNION SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE (((CAST(rt0.c0 AS INTEGER)) ISNULL)) GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING ((((rt0.c0)=(SUM(rt0.c1))))<>(GROUP_CONCAT(rt0.c0))) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING (NOT (((((rt0.c0)=(SUM(rt0.c1))))!=(GROUP_CONCAT(rt0.c0))))) UNION ALL SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING ((((((rt0.c0)=(SUM(rt0.c1))))<>(GROUP_CONCAT(rt0.c0)))) ISNULL);
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING ((((rt0.c0)=(SUM(rt0.c1))))<>(GROUP_CONCAT(rt0.c0))) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING (NOT (((((rt0.c0)=(SUM(rt0.c1))))!=(GROUP_CONCAT(rt0.c0))))) UNION ALL SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING ((((((rt0.c0)=(SUM(rt0.c1))))<>(GROUP_CONCAT(rt0.c0)))) ISNULL);
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT rt0.c1, rt0.c0 FROM rt0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 WHERE ((((((((((((((((0.15913613738961752))>((rt0.c1))))OR(((rt0.c1)<=(rt0.c2)))))OR(((((rt0.c2)OR(rt0.c1)))AND(rt0.c1)))))AND(((rt0.c1)<<(rt0.c0)))))AND(((((((((rt0.c0)OR(rt0.c2)))AND(rt0.c0)))AND(rt0.c0)))OR(rt0.c2)))))AND(((rt0.c0)&(rt0.c2)))))AND(CAST(rt0.c1 AS BLOB)))) UNION ALL SELECT ALL rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT ((((((((((((((((0.15913613738961752))>((rt0.c1))))OR(((rt0.c1)<=(rt0.c2)))))OR(((((rt0.c2)OR(rt0.c1)))AND(rt0.c1)))))AND(((rt0.c1)<<(rt0.c0)))))AND(((((((((rt0.c0)OR(rt0.c2)))AND(rt0.c0)))AND(rt0.c0)))OR(rt0.c2)))))AND(((rt0.c0)&(rt0.c2)))))AND(CAST(rt0.c1 AS BLOB)))))) UNION ALL SELECT ALL rt0.c1, rt0.c0 FROM rt0 WHERE ((((((((((((((((((0.15913613738961752))>((rt0.c1))))OR(((rt0.c1)<=(rt0.c2)))))OR(((((rt0.c2)OR(rt0.c1)))AND(rt0.c1)))))AND(((rt0.c1)<<(rt0.c0)))))AND(((((((((rt0.c0)OR(rt0.c2)))AND(rt0.c0)))AND(rt0.c0)))OR(rt0.c2)))))AND(((rt0.c0)&(rt0.c2)))))AND(CAST(rt0.c1 AS BLOB)))) ISNULL));
SELECT rt0.c1, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c2 FROM rt0 WHERE (rt0.c2) UNION SELECT DISTINCT rt0.c2 FROM rt0 WHERE ((NOT (rt0.c2))) UNION SELECT DISTINCT rt0.c2 FROM rt0 WHERE (((rt0.c2) ISNULL));
SELECT DISTINCT rt0.c2 FROM rt0;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 WHERE ((((rt0.c0))>=((((rt0.c1) ISNULL))))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0 WHERE ((NOT ((((rt0.c0))>=((((rt0.c1) ISNULL))))))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0 WHERE ((((((rt0.c0))>=((((rt0.c1) ISNULL))))) ISNULL)) GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING 0.2843407248600387 UNION ALL SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING (NOT (0.2843407248600387)) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING ((0.2843407248600387) ISNULL);
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING 0.2843407248600387 UNION ALL SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING (NOT (0.2843407248600387)) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING ((0.2843407248600387) ISNULL);
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM rt0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 WHERE (UNLIKELY(DISTINCT LOWER(rt0.c1))) UNION ALL SELECT rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (UNLIKELY(DISTINCT LOWER(rt0.c1))))) UNION ALL SELECT rt0.c2, rt0.c0 FROM rt0 WHERE (((UNLIKELY(DISTINCT LOWER(rt0.c1))) ISNULL));
SELECT rt0.c2, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0 WHERE (CASE ((rt0.c0)==(rt0.c0))  WHEN ((rt0.c2) IS TRUE) THEN ((((rt0.c0)OR(rt0.c0)))AND(rt0.c1)) END) UNION SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (CASE ((rt0.c0)==(rt0.c0))  WHEN ((rt0.c2) IS TRUE) THEN ((((rt0.c0)OR(rt0.c0)))AND(rt0.c1)) END))) UNION SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0 WHERE (((CASE ((rt0.c0)==(rt0.c0))  WHEN ((rt0.c2) IS TRUE) THEN ((((rt0.c0)OR(rt0.c0)))AND(rt0.c1)) END) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE (((((((rt0.c0)AND(rt0.c0)))OR(rt0.c1)))<(CAST(rt0.c2 AS REAL)))) GROUP BY rt0.c2, rt0.c0, rt0.c1 UNION SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (((((((rt0.c0)AND(rt0.c0)))OR(rt0.c1)))<(CAST(rt0.c2 AS REAL)))))) GROUP BY rt0.c2, rt0.c0, rt0.c1 UNION SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE (((((((((rt0.c0)AND(rt0.c0)))OR(rt0.c1)))<(CAST(rt0.c2 AS REAL)))) ISNULL)) GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING (COUNT(*) IN ()) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING (NOT ((COUNT(*) IN ()))) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING (((COUNT(*) IN ())) ISNULL);
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING (COUNT(*) IN ()) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING (NOT ((COUNT(*) IN ()))) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING (((COUNT(*) IN ())) ISNULL);
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE (((((rt0.c1) IS FALSE)) NOT BETWEEN (((rt0.c2)<(rt0.c1))) AND ((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c0)))))) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 NOT INDEXED WHERE ((NOT (((((rt0.c1) IS FALSE)) NOT BETWEEN (((rt0.c2)<(rt0.c1))) AND ((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c0)))))))) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE (((((((rt0.c1) IS FALSE)) NOT BETWEEN (((rt0.c2)<(rt0.c1))) AND ((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c0)))))) ISNULL));
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((CAST(rt0.c1 AS TEXT)) BETWEEN (rt0.c1) AND ((rt0.c0 IN ())))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((CAST(rt0.c1 AS TEXT)) BETWEEN (rt0.c1) AND ((rt0.c0 IN ())))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((CAST(rt0.c1 AS TEXT)) BETWEEN (rt0.c1) AND ((rt0.c0 IN ())))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 WHERE (TRIM(x'', rt0.c1)) GROUP BY rt0.c2, rt0.c0 UNION SELECT rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (TRIM(x'', rt0.c1)))) GROUP BY rt0.c2, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c0 FROM rt0 WHERE (((TRIM(x'', rt0.c1)) ISNULL)) GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING GROUP_CONCAT(',Q1[c') UNION ALL SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT (GROUP_CONCAT(',Q1[c'))) UNION ALL SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((GROUP_CONCAT(',Q1[c')) ISNULL);
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING GROUP_CONCAT(',Q1[c') UNION ALL SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT (GROUP_CONCAT(',Q1[c'))) UNION ALL SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((GROUP_CONCAT(',Q1[c')) ISNULL);
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2, rt0.c0 FROM rt0;
SELECT rt0.c2, rt0.c0 FROM rt0 WHERE ((+ ((((0.8316740005169162))<=((rt0.c0)))))) UNION ALL SELECT rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT ((+ ((((0.8316740005169162))<=((rt0.c0)))))))) UNION ALL SELECT rt0.c2, rt0.c0 FROM rt0 WHERE ((((+ ((((0.8316740005169162))<=((rt0.c0)))))) ISNULL));
SELECT rt0.c2, rt0.c0 FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (CASE WHEN CAST(rt0.c1 AS INTEGER) THEN rt0.c2 COLLATE RTRIM WHEN NULLIF(DISTINCT rt0.c2, rt0.c0) THEN (~ (rt0.c0)) WHEN rt0.c1 COLLATE RTRIM THEN (+ (rt0.c2)) ELSE CAST(rt0.c2 AS REAL) END) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (CASE WHEN CAST(rt0.c1 AS INTEGER) THEN rt0.c2 COLLATE RTRIM WHEN NULLIF(DISTINCT rt0.c2, rt0.c0) THEN (~ (rt0.c0)) WHEN rt0.c1 COLLATE RTRIM THEN (+ (rt0.c2)) ELSE CAST(rt0.c2 AS REAL) END))) UNION SELECT DISTINCT * FROM rt0 WHERE (((CASE WHEN CAST(rt0.c1 AS INTEGER) THEN rt0.c2 COLLATE RTRIM WHEN NULLIF(DISTINCT rt0.c2, rt0.c0) THEN (~ (rt0.c0)) WHEN rt0.c1 COLLATE RTRIM THEN (+ (rt0.c2)) ELSE CAST(rt0.c2 AS REAL) END) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM rt0 WHERE (TYPEOF('')) GROUP BY rt0.c2, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (TYPEOF('')))) GROUP BY rt0.c2, rt0.c0 UNION SELECT rt0.c2, rt0.c0 FROM rt0 WHERE (((TYPEOF('')) ISNULL)) GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING COUNT(CAST(rt0.c2 AS REAL)) UNION ALL SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING (NOT (COUNT(CAST(rt0.c2 AS REAL)))) UNION ALL SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING ((COUNT(CAST(rt0.c2 AS REAL))) ISNULL);
SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING COUNT(CAST(rt0.c2 AS REAL)) UNION ALL SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING (NOT (COUNT(CAST(rt0.c2 AS REAL)))) UNION ALL SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING ((COUNT(CAST(rt0.c2 AS REAL))) ISNULL);
SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT ALL SUM(NULL) FROM rt0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE (((((rt0.c2) IS FALSE)) BETWEEN (((rt0.c0) ISNULL)) AND (CAST(rt0.c1 AS INTEGER)))) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (((((rt0.c2) IS FALSE)) BETWEEN (((rt0.c0) ISNULL)) AND (CAST(rt0.c1 AS INTEGER)))))) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE (((((((rt0.c2) IS FALSE)) BETWEEN (((rt0.c0) ISNULL)) AND (CAST(rt0.c1 AS INTEGER)))) ISNULL));
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((GLOB(rt0.c1, 0X30fd6d72))<<(CAST(rt0.c2 AS REAL)))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((GLOB(rt0.c1, 0X30fd6d72))<<(CAST(rt0.c2 AS REAL)))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((GLOB(rt0.c1, 0X30fd6d72))<<(CAST(rt0.c2 AS REAL)))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 WHERE (x'' COLLATE NOCASE) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM rt0 WHERE ((NOT (x'' COLLATE NOCASE))) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM rt0 WHERE (((x'' COLLATE NOCASE) ISNULL)) GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((((CASE WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c1 END)OR(COUNT(rt0.c2))))AND(TOTAL(COUNT(rt0.c1)))) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT (((((CASE WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c1 END)OR(COUNT(rt0.c2))))AND(TOTAL(COUNT(rt0.c1)))))) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((((((CASE WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c1 END)OR(COUNT(rt0.c2))))AND(TOTAL(COUNT(rt0.c1))))) ISNULL);
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE (rt0.c2) UNION ALL SELECT * FROM rt0 WHERE ((NOT (rt0.c2))) UNION ALL SELECT ALL * FROM rt0 WHERE (((rt0.c2) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (((((((rt0.c0)*('-1761717114')))AND(((rt0.c2) IS TRUE))))AND((- (rt0.c2))))) UNION SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (((((((rt0.c0)*('-1761717114')))AND(((rt0.c2) IS TRUE))))AND((- (rt0.c2))))))) UNION SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (((((((((rt0.c0)*('-1761717114')))AND(((rt0.c2) IS TRUE))))AND((- (rt0.c2))))) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0;
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 WHERE (((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)) COLLATE BINARY COLLATE BINARY) GROUP BY rt0.c0, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)) COLLATE BINARY COLLATE BINARY))) GROUP BY rt0.c0, rt0.c2 UNION SELECT rt0.c0, rt0.c2 FROM rt0 WHERE (((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)) COLLATE BINARY COLLATE BINARY) ISNULL)) GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING GROUP_CONCAT(COUNT(rt0.c0)) UNION ALL SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING (NOT (GROUP_CONCAT(COUNT(rt0.c0)))) UNION ALL SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING ((GROUP_CONCAT(COUNT(rt0.c0))) ISNULL);
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE ((((('')*(rt0.c0)))==(((rt0.c1)-(rt0.c1))))) UNION ALL SELECT * FROM rt0 WHERE ((NOT ((((('')*(rt0.c0)))=(((rt0.c1)-(rt0.c1))))))) UNION ALL SELECT * FROM rt0 WHERE ((((((('')*(rt0.c0)))==(((rt0.c1)-(rt0.c1))))) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0 WHERE ((((rt0.c1 IN (rt0.c0)))%(('-856160662' IN (rt0.c2))))) UNION SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT ((((rt0.c1 IN (rt0.c0)))%(('-856160662' IN (rt0.c2))))))) UNION SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0 WHERE ((((((rt0.c1 IN (rt0.c0)))%(('-856160662' IN (rt0.c2))))) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (((((rt0.c0) IS FALSE)) ISNULL)) GROUP BY rt0.c1, rt0.c0, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (((((rt0.c0) IS FALSE)) ISNULL)))) GROUP BY rt0.c1, rt0.c0, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (((((((rt0.c0) IS FALSE)) ISNULL)) ISNULL)) GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING CASE WHEN SUM(TOTAL(MIN(COUNT(*)))) THEN ((rt0.c0)==(rt0.c1)) END UNION ALL SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (NOT (CASE WHEN SUM(TOTAL(MIN(COUNT(*)))) THEN ((rt0.c0)==(rt0.c1)) END)) UNION ALL SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING ((CASE WHEN SUM(TOTAL(MIN(COUNT(*)))) THEN ((rt0.c0)==(rt0.c1)) END) ISNULL);
SELECT ALL rt0.c1 FROM rt0;
SELECT rt0.c1 FROM rt0 WHERE (((((rt0.c0)AND(rt0.c0)))AND(rt0.c0)) COLLATE BINARY) UNION ALL SELECT ALL rt0.c1 FROM rt0 WHERE ((NOT (((((rt0.c0)AND(rt0.c0)))AND(rt0.c0)) COLLATE BINARY))) UNION ALL SELECT rt0.c1 FROM rt0 WHERE (((((((rt0.c0)AND(rt0.c0)))AND(rt0.c0)) COLLATE BINARY) ISNULL));
SELECT ALL rt0.c1 FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (-2.017967981E9) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (-2.017967981E9))) UNION SELECT DISTINCT * FROM rt0 WHERE (((-2.017967981E9) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE (((NULL)|(x''))) GROUP BY rt0.c0, rt0.c1, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (((NULL)|(x''))))) GROUP BY rt0.c0, rt0.c1, rt0.c2 UNION SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE (((((NULL)|(x''))) ISNULL)) GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING (CASE WHEN rt0.c0 THEN rt0.c0 WHEN AVG(rt0.c1) THEN MIN(rt0.c0) WHEN rt0.c1 THEN MAX(rt0.c0) WHEN rt0.c1 THEN rt0.c2 WHEN '''+^\n' THEN SUM(AVG(x'4f5afd25')) END IN ()) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING (NOT ((CASE WHEN rt0.c0 THEN rt0.c0 WHEN AVG(rt0.c1) THEN MIN(rt0.c0) WHEN rt0.c1 THEN MAX(rt0.c0) WHEN rt0.c1 THEN rt0.c2 WHEN '''+^\n' THEN SUM(AVG(x'4f5afd25')) END IN ()))) UNION ALL SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING (((CASE WHEN rt0.c0 THEN rt0.c0 WHEN AVG(rt0.c1) THEN MIN(rt0.c0) WHEN rt0.c1 THEN MAX(rt0.c0) WHEN rt0.c1 THEN rt0.c2 WHEN '''+^\n' THEN SUM(AVG(x'4f5afd25')) END IN ())) ISNULL);
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING (CASE WHEN rt0.c0 THEN rt0.c0 WHEN AVG(rt0.c1) THEN MIN(rt0.c0) WHEN rt0.c1 THEN MAX(rt0.c0) WHEN rt0.c1 THEN rt0.c2 WHEN '''+^\n' THEN SUM(AVG(x'4f5afd25')) END IN ()) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING (NOT ((CASE WHEN rt0.c0 THEN rt0.c0 WHEN AVG(rt0.c1) THEN MIN(rt0.c0) WHEN rt0.c1 THEN MAX(rt0.c0) WHEN rt0.c1 THEN rt0.c2 WHEN '''+^\n' THEN SUM(AVG(x'4f5afd25')) END IN ()))) UNION ALL SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING (((CASE WHEN rt0.c0 THEN rt0.c0 WHEN AVG(rt0.c1) THEN MIN(rt0.c0) WHEN rt0.c1 THEN MAX(rt0.c0) WHEN rt0.c1 THEN rt0.c2 WHEN '''+^\n' THEN SUM(AVG(x'4f5afd25')) END IN ())) ISNULL);
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE (((CAST(rt0.c0 AS TEXT)) BETWEEN (rt0.c2) AND (COALESCE(rt0.c1, rt0.c0, rt0.c1, rt0.c2)))) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (((CAST(rt0.c0 AS TEXT)) BETWEEN (rt0.c2) AND (COALESCE(rt0.c1, rt0.c0, rt0.c1, rt0.c2)))))) UNION ALL SELECT * FROM rt0 WHERE (((((CAST(rt0.c0 AS TEXT)) BETWEEN (rt0.c2) AND (COALESCE(rt0.c1, rt0.c0, rt0.c1, rt0.c2)))) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (CAST(((rt0.c2) BETWEEN (rt0.c0) AND (NULL)) AS TEXT)) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (CAST(((rt0.c2) BETWEEN (rt0.c0) AND (NULL)) AS TEXT)))) UNION SELECT DISTINCT * FROM rt0 WHERE (((CAST(((rt0.c2) BETWEEN (rt0.c0) AND (NULL)) AS TEXT)) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 WHERE (ABS(rt0.c1 COLLATE RTRIM)) GROUP BY rt0.c1, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (ABS(rt0.c1 COLLATE RTRIM)))) GROUP BY rt0.c1, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c0 FROM rt0 WHERE (((ABS(rt0.c1 COLLATE RTRIM)) ISNULL)) GROUP BY rt0.c1, rt0.c0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING SUM(GROUP_CONCAT(AVG(MIN(rt0.c0)))) COLLATE RTRIM UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING (NOT (SUM(GROUP_CONCAT(AVG(MIN(rt0.c0)))) COLLATE RTRIM)) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING ((SUM(GROUP_CONCAT(AVG(MIN(rt0.c0)))) COLLATE RTRIM) ISNULL);
SELECT SUM(((((rt0.c0 COLLATE RTRIM)OR(((rt0.c0)GLOB(rt0.c0)))))OR(CASE rt0.c0  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c0 END))) FROM rt0 ORDER BY ((((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c1))) NOT BETWEEN (((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c1))) AND ((- (rt0.c1))))  NULLS LAST;
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE (CAST(((((((((rt0.c0)AND(rt0.c2)))AND(rt0.c1)))OR(rt0.c2)))AND(rt0.c1)) AS BLOB)) UNION ALL SELECT * FROM rt0 WHERE ((NOT (CAST(((((((((rt0.c0)AND(rt0.c2)))AND(rt0.c1)))OR(rt0.c2)))AND(rt0.c1)) AS BLOB)))) UNION ALL SELECT ALL * FROM rt0 WHERE (((CAST(((((((((rt0.c0)AND(rt0.c2)))AND(rt0.c1)))OR(rt0.c2)))AND(rt0.c1)) AS BLOB)) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE (((((rt0.c1) NOTNULL)) NOT NULL)) UNION SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (((((rt0.c1) NOTNULL)) NOT NULL)))) UNION SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE (((((((rt0.c1) NOTNULL)) NOT NULL)) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 WHERE (((((((((rt0.c1)AND(rt0.c2)))AND(rt0.c1)))OR((+ (rt0.c0)))))AND(CAST(rt0.c1 AS TEXT)))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0 WHERE ((NOT (((((((((rt0.c1)AND(rt0.c2)))AND(rt0.c1)))OR((+ (rt0.c0)))))AND(CAST(rt0.c1 AS TEXT)))))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0 WHERE (((((((((((rt0.c1)AND(rt0.c2)))AND(rt0.c1)))OR((+ (rt0.c0)))))AND(CAST(rt0.c1 AS TEXT)))) ISNULL)) GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (((SUM(NULL)))==((((rt0.c2) BETWEEN (COUNT(*)) AND (rt0.c1))))) UNION ALL SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (NOT ((((SUM(NULL)))==((((rt0.c2) BETWEEN (COUNT(*)) AND (rt0.c1))))))) UNION ALL SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (((((SUM(NULL)))==((((rt0.c2) BETWEEN (COUNT(*)) AND (rt0.c1)))))) ISNULL);
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (((SUM(NULL)))==((((rt0.c2) BETWEEN (COUNT(*)) AND (rt0.c1))))) UNION ALL SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (NOT ((((SUM(NULL)))==((((rt0.c2) BETWEEN (COUNT(*)) AND (rt0.c1))))))) UNION ALL SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (((((SUM(NULL)))==((((rt0.c2) BETWEEN (COUNT(*)) AND (rt0.c1)))))) ISNULL);
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE (LIKELY(rt0.c2)) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (LIKELY(rt0.c2)))) UNION ALL SELECT ALL * FROM rt0 WHERE (((LIKELY(rt0.c2)) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE (rt0.c2) UNION SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1 FROM rt0 NOT INDEXED WHERE ((NOT (rt0.c2))) UNION SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE (((rt0.c2) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1 FROM rt0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 WHERE ((((NOT (NULL)))<>(((rt0.c0)IS NOT(rt0.c0))))) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM rt0 WHERE ((NOT ((((NOT (NULL)))!=(((rt0.c0)IS NOT(rt0.c0))))))) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM rt0 WHERE ((((((NOT (NULL)))!=(((rt0.c0)IS NOT(rt0.c0))))) ISNULL)) GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING MIN((((rt0.c2)) BETWEEN ((COUNT(rt0.c0))) AND ((rt0.c2)))) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING (NOT (MIN((((rt0.c2)) BETWEEN ((COUNT(rt0.c0))) AND ((rt0.c2)))))) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING ((MIN((((rt0.c2)) BETWEEN ((COUNT(rt0.c0))) AND ((rt0.c2))))) ISNULL);
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE (x'') UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (x''))) UNION ALL SELECT ALL * FROM rt0 WHERE (((x'') ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0 WHERE ((((0.3121247775220365)) BETWEEN (((rt0.c0 IN ()))) AND ((json_valid(rt0.c1))))) UNION SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT ((((0.3121247775220365)) BETWEEN (((rt0.c0 IN ()))) AND ((json_valid(rt0.c1))))))) UNION SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0 WHERE ((((((0.3121247775220365)) BETWEEN (((rt0.c0 IN ()))) AND ((json_valid(rt0.c1))))) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0;
SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 WHERE ('''+^\n') GROUP BY rt0.c2, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT ('''+^\n'))) GROUP BY rt0.c2, rt0.c1 UNION SELECT rt0.c2, rt0.c1 FROM rt0 WHERE ((('''+^\n') ISNULL)) GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING CASE rt0.c1 COLLATE BINARY  WHEN SUM(COUNT(*)) THEN ((MAX(rt0.c2))*(rt0.c0)) WHEN COUNT(*) THEN GROUP_CONCAT(rt0.c2) WHEN GROUP_CONCAT(rt0.c1) THEN TOTAL(rt0.c2) ELSE SUM(AVG(rt0.c2)) END UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING (NOT (CASE rt0.c1 COLLATE BINARY  WHEN SUM(COUNT(*)) THEN ((MAX(rt0.c2))*(rt0.c0)) WHEN COUNT(*) THEN GROUP_CONCAT(rt0.c2) WHEN GROUP_CONCAT(rt0.c1) THEN TOTAL(rt0.c2) ELSE SUM(AVG(rt0.c2)) END)) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING ((CASE rt0.c1 COLLATE BINARY  WHEN SUM(COUNT(*)) THEN ((MAX(rt0.c2))*(rt0.c0)) WHEN COUNT(*) THEN GROUP_CONCAT(rt0.c2) WHEN GROUP_CONCAT(rt0.c1) THEN TOTAL(rt0.c2) ELSE SUM(AVG(rt0.c2)) END) ISNULL);
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 NOT INDEXED WHERE (((((rt0.c2)IS(rt0.c2)))==(((rt0.c2)LIKE(rt0.c2))))) UNION ALL SELECT * FROM rt0 WHERE ((NOT (((((rt0.c2)IS(rt0.c2)))=(((rt0.c2)LIKE(rt0.c2))))))) UNION ALL SELECT * FROM rt0 WHERE (((((((rt0.c2)IS(rt0.c2)))==(((rt0.c2)LIKE(rt0.c2))))) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((((rt0.c0)) NOT BETWEEN (((((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0))))) AND ((((rt0.c2) ISNULL))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((((rt0.c0)) NOT BETWEEN (((((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0))))) AND ((((rt0.c2) ISNULL))))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((((rt0.c0)) NOT BETWEEN (((((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0))))) AND ((((rt0.c2) ISNULL))))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE (CAST((NOT (rt0.c0)) AS TEXT)) GROUP BY rt0.c2, rt0.c1, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (CAST((NOT (rt0.c0)) AS TEXT)))) GROUP BY rt0.c2, rt0.c1, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE (((CAST((NOT (rt0.c0)) AS TEXT)) ISNULL)) GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING TOTAL(SUM('-1338946245')) UNION ALL SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING (NOT (TOTAL(SUM('-1338946245')))) UNION ALL SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING ((TOTAL(SUM('-1338946245'))) ISNULL);
SELECT ALL rt0.c0 FROM rt0;
SELECT rt0.c0 FROM rt0 WHERE ((~ (((rt0.c2)>(rt0.c1))))) UNION ALL SELECT rt0.c0 FROM rt0 NOT INDEXED WHERE ((NOT ((~ (((rt0.c2)>(rt0.c1))))))) UNION ALL SELECT ALL rt0.c0 FROM rt0 WHERE ((((~ (((rt0.c2)>(rt0.c1))))) ISNULL));
SELECT ALL rt0.c0 FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (CASE CAST(rt0.c2 AS REAL)  WHEN TYPEOF(DISTINCT rt0.c2) THEN CAST(rt0.c0 AS TEXT) END) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (CASE CAST(rt0.c2 AS REAL)  WHEN TYPEOF(DISTINCT rt0.c2) THEN CAST(rt0.c0 AS TEXT) END))) UNION SELECT DISTINCT * FROM rt0 WHERE (((CASE CAST(rt0.c2 AS REAL)  WHEN TYPEOF(DISTINCT rt0.c2) THEN CAST(rt0.c0 AS TEXT) END) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 WHERE ((- ((+ (rt0.c1))))) GROUP BY rt0.c2, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT ((- ((+ (rt0.c1))))))) GROUP BY rt0.c2, rt0.c1 UNION SELECT rt0.c2, rt0.c1 FROM rt0 WHERE ((((- ((+ (rt0.c1))))) ISNULL)) GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING (((NULL, rt0.c1, SUM(COUNT(*)))) NOT BETWEEN ((((((rt0.c2)AND(rt0.c2)))AND(rt0.c0)), CASE GROUP_CONCAT(rt0.c2)  WHEN TOTAL(rt0.c2) THEN rt0.c2 END, COUNT(*))) AND (((((rt0.c2)) BETWEEN ((GROUP_CONCAT(rt0.c1))) AND ((rt0.c2))), MAX(rt0.c1), 0xffffffffa4aa4b4d))) UNION ALL SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING (NOT ((((NULL, rt0.c1, SUM(COUNT(*)))) NOT BETWEEN ((((((rt0.c2)AND(rt0.c2)))AND(rt0.c0)), CASE GROUP_CONCAT(rt0.c2)  WHEN TOTAL(rt0.c2) THEN rt0.c2 END, COUNT(*))) AND (((((rt0.c2)) BETWEEN ((GROUP_CONCAT(rt0.c1))) AND ((rt0.c2))), MAX(rt0.c1), 0xffffffffa4aa4b4d))))) UNION ALL SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING (((((NULL, rt0.c1, SUM(COUNT(*)))) NOT BETWEEN ((((((rt0.c2)AND(rt0.c2)))AND(rt0.c0)), CASE GROUP_CONCAT(rt0.c2)  WHEN TOTAL(rt0.c2) THEN rt0.c2 END, COUNT(*))) AND (((((rt0.c2)) BETWEEN ((GROUP_CONCAT(rt0.c1))) AND ((rt0.c2))), MAX(rt0.c1), 0Xffffffffa4aa4b4d)))) ISNULL);
SELECT ALL rt0.c1, rt0.c0 FROM rt0;
SELECT rt0.c1, rt0.c0 FROM rt0 WHERE ((((((('	FTw^I{')AND(rt0.c1)))AND(rt0.c0)))/(UNLIKELY(DISTINCT rt0.c1)))) UNION ALL SELECT rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT ((((((('	FTw^I{')AND(rt0.c1)))AND(rt0.c0)))/(UNLIKELY(DISTINCT rt0.c1)))))) UNION ALL SELECT ALL rt0.c1, rt0.c0 FROM rt0 WHERE ((((((((('	FTw^I{')AND(rt0.c1)))AND(rt0.c0)))/(UNLIKELY(DISTINCT rt0.c1)))) ISNULL));
SELECT ALL rt0.c1, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0 WHERE (((TRIM(DISTINCT rt0.c0))%(rt0.c1))) UNION SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (((TRIM(DISTINCT rt0.c0))%(rt0.c1))))) UNION SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0 WHERE (((((TRIM(DISTINCT rt0.c0))%(rt0.c1))) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0;
SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 WHERE ((((rt0.c0) NOT BETWEEN (rt0.c1) AND (0xffffffffccf8066a)) IN ())) GROUP BY rt0.c1, rt0.c2 UNION SELECT rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT ((((rt0.c0) NOT BETWEEN (rt0.c1) AND (0Xffffffffccf8066a)) IN ())))) GROUP BY rt0.c1, rt0.c2 UNION SELECT rt0.c1, rt0.c2 FROM rt0 WHERE ((((((rt0.c0) NOT BETWEEN (rt0.c1) AND (0Xffffffffccf8066a)) IN ())) ISNULL)) GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING ((((TOTAL(rt0.c0))OR(((GROUP_CONCAT(GROUP_CONCAT(SUM(rt0.c2)))) NOT BETWEEN (rt0.c0) AND (rt0.c1)))))OR(GROUP_CONCAT('-1430286542'))) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING (NOT (((((TOTAL(rt0.c0))OR(((GROUP_CONCAT(GROUP_CONCAT(SUM(rt0.c2)))) NOT BETWEEN (rt0.c0) AND (rt0.c1)))))OR(GROUP_CONCAT('-1430286542'))))) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING ((((((TOTAL(rt0.c0))OR(((GROUP_CONCAT(GROUP_CONCAT(SUM(rt0.c2)))) NOT BETWEEN (rt0.c0) AND (rt0.c1)))))OR(GROUP_CONCAT('-1430286542')))) ISNULL);
SELECT MIN(CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c1 END COLLATE RTRIM COLLATE BINARY) FROM rt0 ORDER BY ((rt0.c0) NOT BETWEEN (((((rt0.c0)OR(rt0.c2)))AND(rt0.c1))) AND (0.2843407248600387));
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE (((((rt0.c2)OR(x'')))OR(CAST(rt0.c1 AS NUMERIC)))) UNION ALL SELECT * FROM rt0 WHERE ((NOT (((((rt0.c2)OR(x'')))OR(CAST(rt0.c1 AS NUMERIC)))))) UNION ALL SELECT * FROM rt0 WHERE (((((((rt0.c2)OR(x'')))OR(CAST(rt0.c1 AS NUMERIC)))) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c1 FROM rt0 WHERE (((CASE WHEN rt0.c2 THEN rt0.c1 END)>(((rt0.c2)LIKE(-1127165598))))) UNION SELECT DISTINCT rt0.c1 FROM rt0 WHERE ((NOT (((CASE WHEN rt0.c2 THEN rt0.c1 END)>(((rt0.c2)LIKE(-1127165598))))))) UNION SELECT DISTINCT rt0.c1 FROM rt0 WHERE (((((CASE WHEN rt0.c2 THEN rt0.c1 END)>(((rt0.c2)LIKE(-1127165598))))) ISNULL));
SELECT DISTINCT rt0.c1 FROM rt0;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE (HEX(DISTINCT rt0.c0 COLLATE NOCASE)) GROUP BY rt0.c0, rt0.c2, rt0.c1 UNION SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (HEX(DISTINCT rt0.c0 COLLATE NOCASE)))) GROUP BY rt0.c0, rt0.c2, rt0.c1 UNION SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE (((HEX(DISTINCT rt0.c0 COLLATE NOCASE)) ISNULL)) GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING MIN(CAST(GROUP_CONCAT(rt0.c2) AS TEXT)) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING (NOT (MIN(CAST(GROUP_CONCAT(rt0.c2) AS TEXT)))) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING ((MIN(CAST(GROUP_CONCAT(rt0.c2) AS TEXT))) ISNULL);
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE ((NOT (((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1))))) UNION ALL SELECT * FROM rt0 WHERE ((NOT ((NOT (((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1))))))) UNION ALL SELECT ALL * FROM rt0 WHERE ((((NOT (((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1))))) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c2 FROM rt0 WHERE ((+ (((rt0.c0)IS(rt0.c0))))) UNION SELECT DISTINCT rt0.c2 FROM rt0 WHERE ((NOT ((+ (((rt0.c0)IS(rt0.c0))))))) UNION SELECT DISTINCT rt0.c2 FROM rt0 WHERE ((((+ (((rt0.c0)IS(rt0.c0))))) ISNULL));
SELECT DISTINCT rt0.c2 FROM rt0;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 WHERE (rt0.c0) GROUP BY rt0.c0, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (rt0.c0))) GROUP BY rt0.c0, rt0.c1 UNION SELECT rt0.c0, rt0.c1 FROM rt0 WHERE (((rt0.c0) ISNULL)) GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING '-451186664' UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT ('-451186664')) UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (('-451186664') ISNULL);
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING '-451186664' UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT ('-451186664')) UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (('-451186664') ISNULL);
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c0 FROM rt0;
SELECT rt0.c0 FROM rt0 WHERE (((rt0.c2 COLLATE BINARY) IS TRUE)) UNION ALL SELECT rt0.c0 FROM rt0 WHERE ((NOT (((rt0.c2 COLLATE BINARY) IS TRUE)))) UNION ALL SELECT rt0.c0 FROM rt0 WHERE (((((rt0.c2 COLLATE BINARY) IS TRUE)) ISNULL));
SELECT ALL rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c2 FROM rt0 WHERE ((NOT ((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c0)))))) UNION SELECT DISTINCT rt0.c2 FROM rt0 WHERE ((NOT ((NOT ((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c0)))))))) UNION SELECT DISTINCT rt0.c2 FROM rt0 WHERE ((((NOT ((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c0)))))) ISNULL));
SELECT DISTINCT rt0.c2 FROM rt0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT rt0.c1, rt0.c0 FROM rt0 WHERE ((((rt0.c1 IN ())) ISNULL)) GROUP BY rt0.c1, rt0.c0 UNION SELECT rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT ((((rt0.c1 IN ())) ISNULL)))) GROUP BY rt0.c1, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c0 FROM rt0 WHERE ((((((rt0.c1 IN ())) ISNULL)) ISNULL)) GROUP BY rt0.c1, rt0.c0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING GROUP_CONCAT(GROUP_CONCAT(rt0.c0)) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT (GROUP_CONCAT(GROUP_CONCAT(rt0.c0)))) UNION ALL SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((GROUP_CONCAT(GROUP_CONCAT(rt0.c0))) ISNULL);
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((+ (((((((((rt0.c1)AND(rt0.c2)))AND(rt0.c0)))OR(rt0.c2)))OR(rt0.c2))))) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT ((+ (((((((((rt0.c1)AND(rt0.c2)))AND(rt0.c0)))OR(rt0.c2)))OR(rt0.c2))))))) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((((+ (((((((((rt0.c1)AND(rt0.c2)))AND(rt0.c0)))OR(rt0.c2)))OR(rt0.c2))))) ISNULL));
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ('뱬?2}\n}K') UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ('뱬?2}\n}K'))) UNION SELECT DISTINCT * FROM rt0 WHERE ((('뱬?2}\n}K') ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((rt0.c0 COLLATE RTRIM IN ((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((NULL)))))) GROUP BY rt0.c0, rt0.c1, rt0.c2 UNION SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT ((rt0.c0 COLLATE RTRIM IN ((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((NULL)))))))) GROUP BY rt0.c0, rt0.c1, rt0.c2 UNION SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((((rt0.c0 COLLATE RTRIM IN ((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((NULL)))))) ISNULL)) GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING MAX(CASE TOTAL(rt0.c0)  WHEN SUM(TOTAL(TOTAL(rt0.c1))) THEN rt0.c2 WHEN x'' THEN COUNT(*) WHEN COUNT(MIN(rt0.c0)) THEN COUNT(rt0.c1) END) UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING (NOT (MAX(CASE TOTAL(rt0.c0)  WHEN SUM(TOTAL(TOTAL(rt0.c1))) THEN rt0.c2 WHEN x'' THEN COUNT(*) WHEN COUNT(MIN(rt0.c0)) THEN COUNT(rt0.c1) END))) UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING ((MAX(CASE TOTAL(rt0.c0)  WHEN SUM(TOTAL(TOTAL(rt0.c1))) THEN rt0.c2 WHEN x'' THEN COUNT(*) WHEN COUNT(MIN(rt0.c0)) THEN COUNT(rt0.c1) END)) ISNULL);
SELECT ALL rt0.c0 FROM rt0;
SELECT rt0.c0 FROM rt0 WHERE ('qk') UNION ALL SELECT rt0.c0 FROM rt0 WHERE ((NOT ('qk'))) UNION ALL SELECT rt0.c0 FROM rt0 WHERE ((('qk') ISNULL));
SELECT ALL rt0.c0 FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((rt0.c1 COLLATE RTRIM) NOTNULL)) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((rt0.c1 COLLATE RTRIM) NOTNULL)))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((rt0.c1 COLLATE RTRIM) NOTNULL)) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE (rt0.c1) GROUP BY rt0.c2, rt0.c0, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (rt0.c1))) GROUP BY rt0.c2, rt0.c0, rt0.c1 UNION SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE (((rt0.c1) ISNULL)) GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING MIN(SUM('')) UNION ALL SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING (NOT (MIN(SUM('')))) UNION ALL SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING ((MIN(SUM(''))) ISNULL);
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE (rt0.c0) UNION ALL SELECT * FROM rt0 WHERE ((NOT (rt0.c0))) UNION ALL SELECT ALL * FROM rt0 WHERE (((rt0.c0) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (CASE WHEN NULL THEN (((NULL, x'', rt0.c1))>=((0xffffffff8ff29228, rt0.c1, rt0.c2))) ELSE (('0.8316740005169162')GLOB(rt0.c0)) END) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (CASE WHEN NULL THEN (((NULL, x'', rt0.c1))>=((0Xffffffff8ff29228, rt0.c1, rt0.c2))) ELSE (('0.8316740005169162')GLOB(rt0.c0)) END))) UNION SELECT DISTINCT * FROM rt0 WHERE (((CASE WHEN NULL THEN (((NULL, x'', rt0.c1))>=((0Xffffffff8ff29228, rt0.c1, rt0.c2))) ELSE (('0.8316740005169162')GLOB(rt0.c0)) END) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE (((CAST(rt0.c0 AS BLOB)) NOT NULL)) GROUP BY rt0.c2, rt0.c0, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (((CAST(rt0.c0 AS BLOB)) NOT NULL)))) GROUP BY rt0.c2, rt0.c0, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE (((((CAST(rt0.c0 AS BLOB)) NOT NULL)) ISNULL)) GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING AVG(COUNT(rt0.c0)) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING (NOT (AVG(COUNT(rt0.c0)))) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING ((AVG(COUNT(rt0.c0))) ISNULL);
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE (CASE ((NULL) BETWEEN (rt0.c1) AND (rt0.c1))  WHEN ((x'5e7c') IS FALSE) THEN 0.7290824015713634 WHEN rt0.c1 COLLATE RTRIM THEN CASE WHEN rt0.c0 THEN -1.552454215E9 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN NULL WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 END WHEN ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c0)) THEN ((rt0.c2)+(rt0.c0)) END) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (CASE ((NULL) BETWEEN (rt0.c1) AND (rt0.c1))  WHEN ((x'5e7c') IS FALSE) THEN 0.7290824015713634 WHEN rt0.c1 COLLATE RTRIM THEN CASE WHEN rt0.c0 THEN -1.552454215E9 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN NULL WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 END WHEN ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c0)) THEN ((rt0.c2)+(rt0.c0)) END))) UNION ALL SELECT * FROM rt0 WHERE (((CASE ((NULL) BETWEEN (rt0.c1) AND (rt0.c1))  WHEN ((x'5e7c') IS FALSE) THEN 0.7290824015713634 WHEN rt0.c1 COLLATE RTRIM THEN CASE WHEN rt0.c0 THEN -1.552454215E9 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN NULL WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 END WHEN ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c0)) THEN ((rt0.c2)+(rt0.c0)) END) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0 WHERE ((('-451186664') NOT NULL)) UNION SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT ((('-451186664') NOT NULL)))) UNION SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0 WHERE ((((('-451186664') NOT NULL)) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0;
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 WHERE (((rt0.c0) NOT BETWEEN ((- (rt0.c0))) AND ((('mVz') NOT BETWEEN (0.8160133392264908) AND (rt0.c0))))) GROUP BY rt0.c0, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (((rt0.c0) NOT BETWEEN ((- (rt0.c0))) AND ((('mVz') NOT BETWEEN (0.8160133392264908) AND (rt0.c0))))))) GROUP BY rt0.c0, rt0.c1 UNION SELECT rt0.c0, rt0.c1 FROM rt0 WHERE (((((rt0.c0) NOT BETWEEN ((- (rt0.c0))) AND ((('mVz') NOT BETWEEN (0.8160133392264908) AND (rt0.c0))))) ISNULL)) GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING ((AVG(TOTAL(rt0.c1)))AND(HEX(rt0.c1))) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING (NOT (((AVG(TOTAL(rt0.c1)))AND(HEX(rt0.c1))))) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING ((((AVG(TOTAL(rt0.c1)))AND(HEX(rt0.c1)))) ISNULL);
SELECT ALL * FROM rt0;
SELECT * FROM rt0 WHERE (((('Tn', rt0.c0, ((rt0.c1)LIKE(rt0.c2))))<=((((rt0.c0)%(rt0.c2)), ((rt0.c2)IS(rt0.c0)), 0X19ce4dad)))) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (((('Tn', rt0.c0, ((rt0.c1)LIKE(rt0.c2))))<=((((rt0.c0)%(rt0.c2)), ((rt0.c2)IS(rt0.c0)), 0x19ce4dad)))))) UNION ALL SELECT ALL * FROM rt0 WHERE (((((('Tn', rt0.c0, ((rt0.c1)LIKE(rt0.c2))))<=((((rt0.c0)%(rt0.c2)), ((rt0.c2)IS(rt0.c0)), 0X19ce4dad)))) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((- (((rt0.c2) NOT NULL)))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((- (((rt0.c2) NOT NULL)))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((- (((rt0.c2) NOT NULL)))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c1, rt0.c2 FROM rt0 WHERE ((('-1103385123') ISNULL)) GROUP BY rt0.c1, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT ((('-1103385123') ISNULL)))) GROUP BY rt0.c1, rt0.c2 UNION SELECT rt0.c1, rt0.c2 FROM rt0 WHERE ((((('-1103385123') ISNULL)) ISNULL)) GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING MAX(MIN(AVG(rt0.c2))) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING (NOT (MAX(MIN(AVG(rt0.c2))))) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING ((MAX(MIN(AVG(rt0.c2)))) ISNULL);
SELECT ALL rt0.c2, rt0.c0 FROM rt0;
SELECT rt0.c2, rt0.c0 FROM rt0 WHERE (((((CAST(rt0.c2 AS REAL))OR(UPPER(rt0.c1))))OR((+ (rt0.c1))))) UNION ALL SELECT rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (((((CAST(rt0.c2 AS REAL))OR(UPPER(rt0.c1))))OR((+ (rt0.c1))))))) UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM rt0 WHERE (((((((CAST(rt0.c2 AS REAL))OR(UPPER(rt0.c1))))OR((+ (rt0.c1))))) ISNULL));
SELECT ALL rt0.c2, rt0.c0 FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (QUOTE(CASE WHEN 0.07516571382849457 THEN rt0.c2 ELSE rt0.c0 END)) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (QUOTE(CASE WHEN 0.07516571382849457 THEN rt0.c2 ELSE rt0.c0 END)))) UNION SELECT DISTINCT * FROM rt0 WHERE (((QUOTE(CASE WHEN 0.07516571382849457 THEN rt0.c2 ELSE rt0.c0 END)) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 WHERE (CASE WHEN ((rt0.c1) ISNULL) THEN (((NULL))>=((rt0.c2))) ELSE ((((((((1.984038354E9)OR(rt0.c1)))OR(rt0.c2)))AND(rt0.c2)))OR(rt0.c2)) END) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0 WHERE ((NOT (CASE WHEN ((rt0.c1) ISNULL) THEN (((NULL))>=((rt0.c2))) ELSE ((((((((1.984038354E9)OR(rt0.c1)))OR(rt0.c2)))AND(rt0.c2)))OR(rt0.c2)) END))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0 WHERE (((CASE WHEN ((rt0.c1) ISNULL) THEN (((NULL))>=((rt0.c2))) ELSE ((((((((1.984038354E9)OR(rt0.c1)))OR(rt0.c2)))AND(rt0.c2)))OR(rt0.c2)) END) ISNULL)) GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING COALESCE(((rt0.c0)OR(rt0.c1)), GROUP_CONCAT(SUM(rt0.c2)), COUNT(COUNT(rt0.c2)), COUNT(rt0.c2), (- (rt0.c0)), TOTAL(rt0.c0)) UNION ALL SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING (NOT (COALESCE(((rt0.c0)OR(rt0.c1)), GROUP_CONCAT(SUM(rt0.c2)), COUNT(COUNT(rt0.c2)), COUNT(rt0.c2), (- (rt0.c0)), TOTAL(rt0.c0)))) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING ((COALESCE(((rt0.c0)OR(rt0.c1)), GROUP_CONCAT(SUM(rt0.c2)), COUNT(COUNT(rt0.c2)), COUNT(rt0.c2), (- (rt0.c0)), TOTAL(rt0.c0))) ISNULL);
SELECT rt0.c2 FROM rt0;
SELECT ALL rt0.c2 FROM rt0 WHERE (CAST(((rt0.c0)<=(rt0.c1)) AS BLOB)) UNION ALL SELECT rt0.c2 FROM rt0 WHERE ((NOT (CAST(((rt0.c0)<=(rt0.c1)) AS BLOB)))) UNION ALL SELECT ALL rt0.c2 FROM rt0 WHERE (((CAST(((rt0.c0)<=(rt0.c1)) AS BLOB)) ISNULL));
SELECT rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0 WHERE (UNICODE(((((rt0.c2)AND(rt0.c0)))AND(rt0.c0)))) UNION SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (UNICODE(((((rt0.c2)AND(rt0.c0)))AND(rt0.c0)))))) UNION SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0 WHERE (((UNICODE(((((rt0.c2)AND(rt0.c0)))AND(rt0.c0)))) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 WHERE (((((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2))) IS FALSE)) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0 WHERE ((NOT (((((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2))) IS FALSE)))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0 WHERE (((((((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2))) IS FALSE)) ISNULL)) GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING 0X75eb84f3 UNION ALL SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING (NOT (0x75eb84f3)) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING ((0x75eb84f3) ISNULL);
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING 0X75eb84f3 UNION ALL SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING (NOT (0x75eb84f3)) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING ((0x75eb84f3) ISNULL);
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((~ (((((((((rt0.c1)AND(rt0.c2)))AND(rt0.c0)))AND(rt0.c2)))AND(rt0.c0))))) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT ((~ (((((((((rt0.c1)AND(rt0.c2)))AND(rt0.c0)))AND(rt0.c2)))AND(rt0.c0))))))) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((((~ (((((((((rt0.c1)AND(rt0.c2)))AND(rt0.c0)))AND(rt0.c2)))AND(rt0.c0))))) ISNULL));
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c2 FROM rt0 WHERE (((((((rt0.c1)AND(rt0.c1)))AND(rt0.c0))) NOT NULL)) UNION SELECT DISTINCT rt0.c2 FROM rt0 WHERE ((NOT (((((((rt0.c1)AND(rt0.c1)))AND(rt0.c0))) NOT NULL)))) UNION SELECT DISTINCT rt0.c2 FROM rt0 WHERE (((((((((rt0.c1)AND(rt0.c1)))AND(rt0.c0))) NOT NULL)) ISNULL));
SELECT DISTINCT rt0.c2 FROM rt0;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 WHERE (((rt0.c2) IS TRUE)) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0 WHERE ((NOT (((rt0.c2) IS TRUE)))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0 WHERE (((((rt0.c2) IS TRUE)) ISNULL)) GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING NULL UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT (NULL)) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((NULL) ISNULL);
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING NULL UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT (NULL)) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((NULL) ISNULL);
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((~ ((((((((('-1103385123')AND(rt0.c2)))AND(x'')))AND(rt0.c0)))OR(rt0.c1))))) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT ((~ ((((((((('-1103385123')AND(rt0.c2)))AND(x'')))AND(rt0.c0)))OR(rt0.c1))))))) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((((~ ((((((((('-1103385123')AND(rt0.c2)))AND(x'')))AND(rt0.c0)))OR(rt0.c1))))) ISNULL));
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((((rt0.c0) NOTNULL)) NOTNULL)) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((((rt0.c0) NOTNULL)) NOTNULL)))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((((rt0.c0) NOTNULL)) NOTNULL)) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c1, rt0.c2 FROM rt0 WHERE ((((+ (rt0.c1)))AND(CAST(rt0.c2 AS REAL)))) GROUP BY rt0.c1, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT ((((+ (rt0.c1)))AND(CAST(rt0.c2 AS REAL)))))) GROUP BY rt0.c1, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c2 FROM rt0 WHERE ((((((+ (rt0.c1)))AND(CAST(rt0.c2 AS REAL)))) ISNULL)) GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING TOTAL(((AVG(AVG(AVG(x''))))<=(SUM(COUNT(*))))) UNION ALL SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING (NOT (TOTAL(((AVG(AVG(AVG(x''))))<=(SUM(COUNT(*))))))) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING ((TOTAL(((AVG(AVG(AVG(x''))))<=(SUM(COUNT(*)))))) ISNULL);
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE (((((rt0.c2)<<(1921615070)))|(CASE WHEN rt0.c1 THEN '2055560612' END))) UNION ALL SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (((((rt0.c2)<<(1921615070)))|(CASE WHEN rt0.c1 THEN '2055560612' END))))) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE (((((((rt0.c2)<<(1921615070)))|(CASE WHEN rt0.c1 THEN '2055560612' END))) ISNULL));
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 END IN ())) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 END IN ())))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 END IN ())) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 WHERE (((((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c0)))GLOB((+ (rt0.c1))))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0 WHERE ((NOT (((((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c0)))GLOB((+ (rt0.c1))))))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0 WHERE (((((((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c0)))GLOB((+ (rt0.c1))))) ISNULL)) GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING ((((TOTAL(MAX(rt0.c0)))>>('-428317356')))-(AVG(COUNT(rt0.c2)))) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING (NOT (((((TOTAL(MAX(rt0.c0)))>>('-428317356')))-(AVG(COUNT(rt0.c2)))))) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING ((((((TOTAL(MAX(rt0.c0)))>>('-428317356')))-(AVG(COUNT(rt0.c2))))) ISNULL);
SELECT ALL rt0.c2 FROM rt0;
SELECT ALL rt0.c2 FROM rt0 WHERE (HEX(CASE rt0.c1  WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END)) UNION ALL SELECT rt0.c2 FROM rt0 WHERE ((NOT (HEX(CASE rt0.c1  WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END)))) UNION ALL SELECT ALL rt0.c2 FROM rt0 WHERE (((HEX(CASE rt0.c1  WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END)) ISNULL));
SELECT ALL rt0.c2 FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((((x'')AND(((((((((rt0.c1)AND(rt0.c2)))OR(rt0.c2)))AND(rt0.c2)))AND(rt0.c0)))))OR(NULL))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((((x'')AND(((((((((rt0.c1)AND(rt0.c2)))OR(rt0.c2)))AND(rt0.c2)))AND(rt0.c0)))))OR(NULL))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((((x'')AND(((((((((rt0.c1)AND(rt0.c2)))OR(rt0.c2)))AND(rt0.c2)))AND(rt0.c0)))))OR(NULL))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c2 FROM rt0 WHERE (CAST(TRIM(DISTINCT rt0.c2) AS INTEGER)) GROUP BY rt0.c0, rt0.c2 UNION SELECT rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (CAST(TRIM(DISTINCT rt0.c2) AS INTEGER)))) GROUP BY rt0.c0, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c2 FROM rt0 WHERE (((CAST(TRIM(DISTINCT rt0.c2) AS INTEGER)) ISNULL)) GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING ((SUM(NULL))&((rt0.c1 IN (SUM(rt0.c2))))) UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING (NOT (((SUM(NULL))&((rt0.c1 IN (SUM(rt0.c2))))))) UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING ((((SUM(NULL))&((rt0.c1 IN (SUM(rt0.c2)))))) ISNULL);
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING ((SUM(NULL))&((rt0.c1 IN (SUM(rt0.c2))))) UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING (NOT (((SUM(NULL))&((rt0.c1 IN (SUM(rt0.c2))))))) UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING ((((SUM(NULL))&((rt0.c1 IN (SUM(rt0.c2)))))) ISNULL);
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 WHERE (((rt0.c1) BETWEEN (((rt0.c2)>(rt0.c0))) AND (((rt0.c0)/(x'4a15'))))) UNION ALL SELECT rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (((rt0.c1) BETWEEN (((rt0.c2)>(rt0.c0))) AND (((rt0.c0)/(x'4a15'))))))) UNION ALL SELECT ALL rt0.c1, rt0.c0 FROM rt0 WHERE (((((rt0.c1) BETWEEN (((rt0.c2)>(rt0.c0))) AND (((rt0.c0)/(x'4a15'))))) ISNULL));
SELECT ALL rt0.c1, rt0.c0 FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((((NOT (rt0.c1))) BETWEEN (((((rt0.c1)AND(rt0.c2)))OR(rt0.c2))) AND (0.1659448446669457))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((((NOT (rt0.c1))) BETWEEN (((((rt0.c1)AND(rt0.c2)))OR(rt0.c2))) AND (0.1659448446669457))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((((NOT (rt0.c1))) BETWEEN (((((rt0.c1)AND(rt0.c2)))OR(rt0.c2))) AND (0.1659448446669457))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((((NULL)) NOT BETWEEN ((CASE rt0.c2  WHEN x'fad8' THEN rt0.c2 END)) AND ((CAST(NULL AS INTEGER))))) GROUP BY rt0.c2, rt0.c0, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT ((((NULL)) NOT BETWEEN ((CASE rt0.c2  WHEN x'fad8' THEN rt0.c2 END)) AND ((CAST(NULL AS INTEGER))))))) GROUP BY rt0.c2, rt0.c0, rt0.c1 UNION SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((((((NULL)) NOT BETWEEN ((CASE rt0.c2  WHEN x'fad8' THEN rt0.c2 END)) AND ((CAST(NULL AS INTEGER))))) ISNULL)) GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING (((COUNT(MAX(AVG(rt0.c2))))) BETWEEN ((GROUP_CONCAT(rt0.c0))) AND (((+ (NULL))))) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING (NOT ((((COUNT(MAX(AVG(rt0.c2))))) BETWEEN ((GROUP_CONCAT(rt0.c0))) AND (((+ (NULL))))))) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING (((((COUNT(MAX(AVG(rt0.c2))))) BETWEEN ((GROUP_CONCAT(rt0.c0))) AND (((+ (NULL)))))) ISNULL);
SELECT rt0.c2 FROM rt0;
SELECT rt0.c2 FROM rt0 WHERE (((~ (rt0.c0)) IN (json_quote(rt0.c1)))) UNION ALL SELECT rt0.c2 FROM rt0 WHERE ((NOT (((~ (rt0.c0)) IN (json_quote(rt0.c1)))))) UNION ALL SELECT ALL rt0.c2 FROM rt0 WHERE (((((~ (rt0.c0)) IN (json_quote(rt0.c1)))) ISNULL));
SELECT rt0.c2 FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((CASE rt0.c2  WHEN rt0.c0 THEN rt0.c2 END IN ())) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((CASE rt0.c2  WHEN rt0.c0 THEN rt0.c2 END IN ())))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((CASE rt0.c2  WHEN rt0.c0 THEN rt0.c2 END IN ())) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 WHERE (((((rt0.c1) IS FALSE)) BETWEEN (CASE 'W+*	joh_X'  WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN x'' ELSE x'64ae' END) AND ((- (rt0.c2))))) GROUP BY rt0.c0, rt0.c1 UNION SELECT rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (((((rt0.c1) IS FALSE)) BETWEEN (CASE 'W+*	joh_X'  WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN x'' ELSE x'64ae' END) AND ((- (rt0.c2))))))) GROUP BY rt0.c0, rt0.c1 UNION SELECT rt0.c0, rt0.c1 FROM rt0 WHERE (((((((rt0.c1) IS FALSE)) BETWEEN (CASE 'W+*	joh_X'  WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN x'' ELSE x'64ae' END) AND ((- (rt0.c2))))) ISNULL)) GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING ((((x'4110')AND(COUNT(AVG(TOTAL(COUNT(*)))))))OR(MIN(rt0.c1))) UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT (((((x'4110')AND(COUNT(AVG(TOTAL(COUNT(*)))))))OR(MIN(rt0.c1))))) UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING ((((((x'4110')AND(COUNT(AVG(TOTAL(COUNT(*)))))))OR(MIN(rt0.c1)))) ISNULL);
SELECT MAX(((rt0.c0 COLLATE RTRIM) NOT BETWEEN (((rt0.c0)AND(rt0.c1))) AND ((((rt0.c2, rt0.c0, rt0.c2)) NOT BETWEEN ((rt0.c2, rt0.c0, rt0.c2)) AND ((rt0.c2, NULL, rt0.c1)))))) FROM rt0;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (JULIANDAY(((rt0.c2)OR(rt0.c2)), ((((((((rt0.c2)AND(rt0.c2)))AND(rt0.c1)))AND(rt0.c2)))OR(rt0.c0)), '', 0xffffffffd0a83078, (((rt0.c2))<=(('1835675798'))))) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (JULIANDAY(((rt0.c2)OR(rt0.c2)), ((((((((rt0.c2)AND(rt0.c2)))AND(rt0.c1)))AND(rt0.c2)))OR(rt0.c0)), '', 0xffffffffd0a83078, (((rt0.c2))<=(('1835675798'))))))) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (((JULIANDAY(((rt0.c2)OR(rt0.c2)), ((((((((rt0.c2)AND(rt0.c2)))AND(rt0.c1)))AND(rt0.c2)))OR(rt0.c0)), '', 0Xffffffffd0a83078, (((rt0.c2))<=(('1835675798'))))) ISNULL));
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (CAST((~ (rt0.c0)) AS INTEGER)) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (CAST((~ (rt0.c0)) AS INTEGER)))) UNION SELECT DISTINCT * FROM rt0 WHERE (((CAST((~ (rt0.c0)) AS INTEGER)) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c2 FROM rt0 WHERE ('1978369267') GROUP BY rt0.c0, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT ('1978369267'))) GROUP BY rt0.c0, rt0.c2 UNION SELECT rt0.c0, rt0.c2 FROM rt0 WHERE ((('1978369267') ISNULL)) GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING MAX((((MAX(MIN(rt0.c2)), COUNT(*), GROUP_CONCAT(rt0.c2)))>=((rt0.c1, SUM(rt0.c0), rt0.c2)))) UNION ALL SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (NOT (MAX((((MAX(MIN(rt0.c2)), COUNT(*), GROUP_CONCAT(rt0.c2)))>=((rt0.c1, SUM(rt0.c0), rt0.c2)))))) UNION ALL SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING ((MAX((((MAX(MIN(rt0.c2)), COUNT(*), GROUP_CONCAT(rt0.c2)))>=((rt0.c1, SUM(rt0.c0), rt0.c2))))) ISNULL);
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((~ ('0.41576517656223466'))) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT ((~ ('0.41576517656223466'))))) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((((~ ('0.41576517656223466'))) ISNULL));
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((((((((rt0.c1 COLLATE BINARY)OR((rt0.c0 IN ()))))AND(rt0.c0 COLLATE RTRIM)))OR(((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2)))))AND(((rt0.c0)<(rt0.c1))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((((((((rt0.c1 COLLATE BINARY)OR((rt0.c0 IN ()))))AND(rt0.c0 COLLATE RTRIM)))OR(((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2)))))AND(((rt0.c0)<(rt0.c1))))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((((((((rt0.c1 COLLATE BINARY)OR((rt0.c0 IN ()))))AND(rt0.c0 COLLATE RTRIM)))OR(((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2)))))AND(((rt0.c0)<(rt0.c1))))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 WHERE (CASE ((rt0.c0)LIKE(rt0.c2))  WHEN rt0.c2 COLLATE NOCASE THEN ((rt0.c1)+(rt0.c0)) END) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0 WHERE ((NOT (CASE ((rt0.c0)LIKE(rt0.c2))  WHEN rt0.c2 COLLATE NOCASE THEN ((rt0.c1)+(rt0.c0)) END))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0 WHERE (((CASE ((rt0.c0)LIKE(rt0.c2))  WHEN rt0.c2 COLLATE NOCASE THEN ((rt0.c1)+(rt0.c0)) END) ISNULL)) GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING (('1213631772')>(TOTAL(rt0.c0))) COLLATE RTRIM UNION ALL SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING (NOT ((('1213631772')>(TOTAL(rt0.c0))) COLLATE RTRIM)) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING (((('1213631772')>(TOTAL(rt0.c0))) COLLATE RTRIM) ISNULL);
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING (('1213631772')>(TOTAL(rt0.c0))) COLLATE RTRIM UNION ALL SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING (NOT ((('1213631772')>(TOTAL(rt0.c0))) COLLATE RTRIM)) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING (((('1213631772')>(TOTAL(rt0.c0))) COLLATE RTRIM) ISNULL);
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE ((((rt0.c2)+(rt0.c0)) IN (((((rt0.c2)AND(rt0.c1)))OR(rt0.c2))))) UNION ALL SELECT * FROM rt0 WHERE ((NOT ((((rt0.c2)+(rt0.c0)) IN (((((rt0.c2)AND(rt0.c1)))OR(rt0.c2))))))) UNION ALL SELECT * FROM rt0 WHERE ((((((rt0.c2)+(rt0.c0)) IN (((((rt0.c2)AND(rt0.c1)))OR(rt0.c2))))) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE (((CAST(rt0.c1 AS INTEGER)) NOT BETWEEN ((rt0.c2 IN ())) AND ((NOT (rt0.c1))))) UNION SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (((CAST(rt0.c1 AS INTEGER)) NOT BETWEEN ((rt0.c2 IN ())) AND ((NOT (rt0.c1))))))) UNION SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE (((((CAST(rt0.c1 AS INTEGER)) NOT BETWEEN ((rt0.c2 IN ())) AND ((NOT (rt0.c1))))) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1 FROM rt0;
SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 WHERE (((rt0.c1 COLLATE NOCASE) BETWEEN (('1705010250' IN ())) AND ((rt0.c0 IN ())))) GROUP BY rt0.c1, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (((rt0.c1 COLLATE NOCASE) BETWEEN (('1705010250' IN ())) AND ((rt0.c0 IN ())))))) GROUP BY rt0.c1, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c2 FROM rt0 WHERE (((((rt0.c1 COLLATE NOCASE) BETWEEN (('1705010250' IN ())) AND ((rt0.c0 IN ())))) ISNULL)) GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING COUNT(COUNT(*)) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING (NOT (COUNT(COUNT(*)))) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING ((COUNT(COUNT(*))) ISNULL);
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE (rt0.c1) UNION ALL SELECT * FROM rt0 WHERE ((NOT (rt0.c1))) UNION ALL SELECT ALL * FROM rt0 WHERE (((rt0.c1) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c0 FROM rt0 WHERE (CASE ((((rt0.c2)OR(rt0.c2)))OR(rt0.c1))  WHEN ((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2)) THEN rt0.c2 END) UNION SELECT DISTINCT rt0.c0 FROM rt0 WHERE ((NOT (CASE ((((rt0.c2)OR(rt0.c2)))OR(rt0.c1))  WHEN ((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2)) THEN rt0.c2 END))) UNION SELECT DISTINCT rt0.c0 FROM rt0 WHERE (((CASE ((((rt0.c2)OR(rt0.c2)))OR(rt0.c1))  WHEN ((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2)) THEN rt0.c2 END) ISNULL));
SELECT DISTINCT rt0.c0 FROM rt0;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE (((((rt0.c0) NOTNULL))OR((((x'', rt0.c0, rt0.c1, rt0.c1, rt0.c2))<((rt0.c1, rt0.c1, rt0.c2, rt0.c1, rt0.c2)))))) GROUP BY rt0.c0, rt0.c1, rt0.c2 UNION SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (((((rt0.c0) NOTNULL))OR((((x'', rt0.c0, rt0.c1, rt0.c1, rt0.c2))<((rt0.c1, rt0.c1, rt0.c2, rt0.c1, rt0.c2)))))))) GROUP BY rt0.c0, rt0.c1, rt0.c2 UNION SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE (((((((rt0.c0) NOTNULL))OR((((x'', rt0.c0, rt0.c1, rt0.c1, rt0.c2))<((rt0.c1, rt0.c1, rt0.c2, rt0.c1, rt0.c2)))))) ISNULL)) GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING SUM((((AVG(TOTAL(MIN(AVG(rt0.c0)))))) NOT BETWEEN ((rt0.c1)) AND ((TOTAL(rt0.c2))))) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING (NOT (SUM((((AVG(TOTAL(MIN(AVG(rt0.c0)))))) NOT BETWEEN ((rt0.c1)) AND ((TOTAL(rt0.c2))))))) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING ((SUM((((AVG(TOTAL(MIN(AVG(rt0.c0)))))) NOT BETWEEN ((rt0.c1)) AND ((TOTAL(rt0.c2)))))) ISNULL);
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((- ((rt0.c0 IN ())))) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT ((- ((rt0.c0 IN ())))))) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((((- ((rt0.c0 IN ())))) ISNULL));
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (CASE WHEN (rt0.c2 IN ()) THEN rt0.c2 END) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (CASE WHEN (rt0.c2 IN ()) THEN rt0.c2 END))) UNION SELECT DISTINCT * FROM rt0 WHERE (((CASE WHEN (rt0.c2 IN ()) THEN rt0.c2 END) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE (((((rt0.c1) NOT BETWEEN (rt0.c1) AND ('P_I*'))) IS TRUE)) GROUP BY rt0.c1, rt0.c2, rt0.c0 UNION SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (((((rt0.c1) NOT BETWEEN (rt0.c1) AND ('P_I*'))) IS TRUE)))) GROUP BY rt0.c1, rt0.c2, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE (((((((rt0.c1) NOT BETWEEN (rt0.c1) AND ('P_I*'))) IS TRUE)) ISNULL)) GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (((COUNT(TOTAL(AVG(MAX(rt0.c2)))), '''Q', COUNT(*))) BETWEEN (((- (rt0.c2)), ABS(rt0.c1), SUM(MAX(rt0.c2)))) AND ((((rt0.c0)IS(rt0.c0)), TOTAL(SUM(rt0.c0)), SUM(rt0.c2)))) UNION ALL SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT ((((COUNT(TOTAL(AVG(MAX(rt0.c2)))), '''Q', COUNT(*))) BETWEEN (((- (rt0.c2)), ABS(rt0.c1), SUM(MAX(rt0.c2)))) AND ((((rt0.c0)IS(rt0.c0)), TOTAL(SUM(rt0.c0)), SUM(rt0.c2)))))) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (((((COUNT(TOTAL(AVG(MAX(rt0.c2)))), '''Q', COUNT(*))) BETWEEN (((- (rt0.c2)), ABS(rt0.c1), SUM(MAX(rt0.c2)))) AND ((((rt0.c0)IS(rt0.c0)), TOTAL(SUM(rt0.c0)), SUM(rt0.c2))))) ISNULL);
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE (((((rt0.c2)==(rt0.c0)))*(rt0.c0 COLLATE NOCASE))) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (((((rt0.c2)=(rt0.c0)))*(rt0.c0 COLLATE NOCASE))))) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE (((((((rt0.c2)==(rt0.c0)))*(rt0.c0 COLLATE NOCASE))) ISNULL));
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c2 FROM rt0 WHERE ('zE<4uᖞ1') UNION SELECT DISTINCT rt0.c2 FROM rt0 WHERE ((NOT ('zE<4uᖞ1'))) UNION SELECT DISTINCT rt0.c2 FROM rt0 WHERE ((('zE<4uᖞ1') ISNULL));
SELECT DISTINCT rt0.c2 FROM rt0;
SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 WHERE (((CASE WHEN rt0.c1 THEN rt0.c1 END)LIKE(CAST(rt0.c2 AS INTEGER)))) GROUP BY rt0.c2, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (((CASE WHEN rt0.c1 THEN rt0.c1 END)LIKE(CAST(rt0.c2 AS INTEGER)))))) GROUP BY rt0.c2, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c0 FROM rt0 WHERE (((((CASE WHEN rt0.c1 THEN rt0.c1 END)LIKE(CAST(rt0.c2 AS INTEGER)))) ISNULL)) GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING SUM(rt0.c2) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING (NOT (SUM(rt0.c2))) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING ((SUM(rt0.c2)) ISNULL);
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING SUM(rt0.c2) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING (NOT (SUM(rt0.c2))) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING ((SUM(rt0.c2)) ISNULL);
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE (((CAST(rt0.c2 AS INTEGER))*(rt0.c1))) UNION ALL SELECT * FROM rt0 WHERE ((NOT (((CAST(rt0.c2 AS INTEGER))*(rt0.c1))))) UNION ALL SELECT ALL * FROM rt0 WHERE (((((CAST(rt0.c2 AS INTEGER))*(rt0.c1))) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0 WHERE (((((((((rt0.c0)OR(((rt0.c2)||(rt0.c1)))))OR((((((((('Tn')OR(rt0.c0)))OR(0.42615332932695005)))OR(rt0.c1)))OR(rt0.c0)))))AND(((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c2)))))OR(((rt0.c1) IS FALSE)))) UNION SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0 NOT INDEXED WHERE ((NOT (((((((((rt0.c0)OR(((rt0.c2)||(rt0.c1)))))OR((((((((('Tn')OR(rt0.c0)))OR(0.42615332932695005)))OR(rt0.c1)))OR(rt0.c0)))))AND(((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c2)))))OR(((rt0.c1) IS FALSE)))))) UNION SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0 WHERE (((((((((((rt0.c0)OR(((rt0.c2)||(rt0.c1)))))OR((((((((('Tn')OR(rt0.c0)))OR(0.42615332932695005)))OR(rt0.c1)))OR(rt0.c0)))))AND(((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c2)))))OR(((rt0.c1) IS FALSE)))) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ('') GROUP BY rt0.c0, rt0.c2, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (''))) GROUP BY rt0.c0, rt0.c2, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((('') ISNULL)) GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING COUNT(TOTAL_CHANGES()) UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING (NOT (COUNT(TOTAL_CHANGES()))) UNION ALL SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING ((COUNT(TOTAL_CHANGES())) ISNULL);
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING COUNT(TOTAL_CHANGES()) UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING (NOT (COUNT(TOTAL_CHANGES()))) UNION ALL SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING ((COUNT(TOTAL_CHANGES())) ISNULL);
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c1, rt0.c2 FROM rt0;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 WHERE (rt0.c2) UNION ALL SELECT ALL rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (rt0.c2))) UNION ALL SELECT rt0.c1, rt0.c2 FROM rt0 WHERE (((rt0.c2) ISNULL));
SELECT ALL rt0.c1, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c2 FROM rt0 WHERE (((((((((LOWER(rt0.c2))OR((rt0.c0 IN ()))))OR((- (rt0.c0)))))AND(CASE WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 END)))OR((NOT (rt0.c1))))) UNION SELECT DISTINCT rt0.c2 FROM rt0 WHERE ((NOT (((((((((LOWER(rt0.c2))OR((rt0.c0 IN ()))))OR((- (rt0.c0)))))AND(CASE WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 END)))OR((NOT (rt0.c1))))))) UNION SELECT DISTINCT rt0.c2 FROM rt0 WHERE (((((((((((LOWER(rt0.c2))OR((rt0.c0 IN ()))))OR((- (rt0.c0)))))AND(CASE WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 END)))OR((NOT (rt0.c1))))) ISNULL));
SELECT DISTINCT rt0.c2 FROM rt0;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 WHERE (((CAST(rt0.c2 AS BLOB)) NOT BETWEEN (CAST(rt0.c2 AS BLOB)) AND (CASE NULL  WHEN rt0.c1 THEN rt0.c1 END))) GROUP BY rt0.c0, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (((CAST(rt0.c2 AS BLOB)) NOT BETWEEN (CAST(rt0.c2 AS BLOB)) AND (CASE NULL  WHEN rt0.c1 THEN rt0.c1 END))))) GROUP BY rt0.c0, rt0.c1 UNION SELECT rt0.c0, rt0.c1 FROM rt0 WHERE (((((CAST(rt0.c2 AS BLOB)) NOT BETWEEN (CAST(rt0.c2 AS BLOB)) AND (CASE NULL  WHEN rt0.c1 THEN rt0.c1 END))) ISNULL)) GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING (- (COUNT(*))) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING (NOT ((- (COUNT(*))))) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING (((- (COUNT(*)))) ISNULL);
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING (- (COUNT(*))) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING (NOT ((- (COUNT(*))))) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING (((- (COUNT(*)))) ISNULL);
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE (CAST((rt0.c0 IN ()) AS BLOB)) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (CAST((rt0.c0 IN ()) AS BLOB)))) UNION ALL SELECT ALL * FROM rt0 WHERE (((CAST((rt0.c0 IN ()) AS BLOB)) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((((((0.8978114955981246)AND(rt0.c2)))AND(CASE WHEN rt0.c0 THEN rt0.c2 ELSE 'W ' END)))OR(((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((((((0.8978114955981246)AND(rt0.c2)))AND(CASE WHEN rt0.c0 THEN rt0.c2 ELSE 'W ' END)))OR(((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2))))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((((((0.8978114955981246)AND(rt0.c2)))AND(CASE WHEN rt0.c0 THEN rt0.c2 ELSE 'W ' END)))OR(((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2))))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE (CASE rt0.c0 COLLATE NOCASE  WHEN (((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1))) THEN 0.608366056074719 ELSE ((rt0.c1)<=(rt0.c1)) END) GROUP BY rt0.c0, rt0.c1, rt0.c2 UNION SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (CASE rt0.c0 COLLATE NOCASE  WHEN (((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1))) THEN 0.608366056074719 ELSE ((rt0.c1)<=(rt0.c1)) END))) GROUP BY rt0.c0, rt0.c1, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE (((CASE rt0.c0 COLLATE NOCASE  WHEN (((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1))) THEN 0.608366056074719 ELSE ((rt0.c1)<=(rt0.c1)) END) ISNULL)) GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING TOTAL((+ (rt0.c1))) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT (TOTAL((+ (rt0.c1))))) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((TOTAL((+ (rt0.c1)))) ISNULL);
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING TOTAL((+ (rt0.c1))) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT (TOTAL((+ (rt0.c1))))) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((TOTAL((+ (rt0.c1)))) ISNULL);
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c1 FROM rt0;
SELECT rt0.c1 FROM rt0 WHERE (CASE WHEN (((rt0.c0))!=((rt0.c2))) THEN ((((((((rt0.c0)OR(rt0.c0)))OR(rt0.c2)))AND(x'')))AND(rt0.c2)) END) UNION ALL SELECT rt0.c1 FROM rt0 WHERE ((NOT (CASE WHEN (((rt0.c0))<>((rt0.c2))) THEN ((((((((rt0.c0)OR(rt0.c0)))OR(rt0.c2)))AND(x'')))AND(rt0.c2)) END))) UNION ALL SELECT rt0.c1 FROM rt0 WHERE (((CASE WHEN (((rt0.c0))<>((rt0.c2))) THEN ((((((((rt0.c0)OR(rt0.c0)))OR(rt0.c2)))AND(x'')))AND(rt0.c2)) END) ISNULL));
SELECT rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0 WHERE (((CAST(rt0.c1 AS TEXT))>=((+ (rt0.c0))))) UNION SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (((CAST(rt0.c1 AS TEXT))>=((+ (rt0.c0))))))) UNION SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0 WHERE (((((CAST(rt0.c1 AS TEXT))>=((+ (rt0.c0))))) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE (((((rt0.c2)<(rt0.c1))) NOT BETWEEN (((x'')-(rt0.c2))) AND (CAST(rt0.c0 AS NUMERIC)))) GROUP BY rt0.c0, rt0.c2, rt0.c1 UNION SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (((((rt0.c2)<(rt0.c1))) NOT BETWEEN (((x'')-(rt0.c2))) AND (CAST(rt0.c0 AS NUMERIC)))))) GROUP BY rt0.c0, rt0.c2, rt0.c1 UNION SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE (((((((rt0.c2)<(rt0.c1))) NOT BETWEEN (((x'')-(rt0.c2))) AND (CAST(rt0.c0 AS NUMERIC)))) ISNULL)) GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT ALL TOTAL(((rt0.c0)OR(((rt0.c0)OR(rt0.c1))))) FROM rt0;
SELECT rt0.c1, rt0.c0 FROM rt0;
SELECT rt0.c1, rt0.c0 FROM rt0 WHERE ((CHANGES() IN (CAST(rt0.c0 AS REAL)))) UNION ALL SELECT ALL rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT ((CHANGES() IN (CAST(rt0.c0 AS REAL)))))) UNION ALL SELECT rt0.c1, rt0.c0 FROM rt0 WHERE ((((CHANGES() IN (CAST(rt0.c0 AS REAL)))) ISNULL));
SELECT rt0.c1, rt0.c0 FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (LIKELIHOOD(x'c306', 0.3700184110232251)) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (LIKELIHOOD(x'c306', 0.3700184110232251)))) UNION SELECT DISTINCT * FROM rt0 WHERE (((LIKELIHOOD(x'c306', 0.3700184110232251)) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 WHERE (((CASE rt0.c1  WHEN rt0.c0 THEN rt0.c1 ELSE NULL END) BETWEEN (rt0.c1) AND (((rt0.c1)+(rt0.c1))))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0 WHERE ((NOT (((CASE rt0.c1  WHEN rt0.c0 THEN rt0.c1 ELSE NULL END) BETWEEN (rt0.c1) AND (((rt0.c1)+(rt0.c1))))))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0 WHERE (((((CASE rt0.c1  WHEN rt0.c0 THEN rt0.c1 ELSE NULL END) BETWEEN (rt0.c1) AND (((rt0.c1)+(rt0.c1))))) ISNULL)) GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING COUNT(SUM(rt0.c0)) UNION ALL SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT (COUNT(SUM(rt0.c0)))) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((COUNT(SUM(rt0.c0))) ISNULL);
SELECT TOTAL(((((rt0.c2) NOT NULL)) NOT NULL)) FROM rt0 ORDER BY (((rt0.c1)&(rt0.c2)) IN (((((rt0.c2)OR(rt0.c1)))AND(rt0.c0))))  NULLS LAST;
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE (((((rt0.c2)||(rt0.c2)))>=((NOT (rt0.c1))))) UNION ALL SELECT * FROM rt0 WHERE ((NOT (((((rt0.c2)||(rt0.c2)))>=((NOT (rt0.c1))))))) UNION ALL SELECT ALL * FROM rt0 WHERE (((((((rt0.c2)||(rt0.c2)))>=((NOT (rt0.c1))))) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0 WHERE (((((((((((((rt0.c0)AND(rt0.c0)))AND(rt0.c0)))AND(((rt0.c1)*(0.6797024773488963)))))OR(((((((((rt0.c0)AND(rt0.c1)))AND(rt0.c0)))AND(rt0.c0)))AND(rt0.c1)))))OR(((rt0.c2)=(rt0.c0)))))OR(((rt0.c0) ISNULL)))) UNION SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (((((((((((((rt0.c0)AND(rt0.c0)))AND(rt0.c0)))AND(((rt0.c1)*(0.6797024773488963)))))OR(((((((((rt0.c0)AND(rt0.c1)))AND(rt0.c0)))AND(rt0.c0)))AND(rt0.c1)))))OR(((rt0.c2)==(rt0.c0)))))OR(((rt0.c0) ISNULL)))))) UNION SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0 WHERE (((((((((((((((rt0.c0)AND(rt0.c0)))AND(rt0.c0)))AND(((rt0.c1)*(0.6797024773488963)))))OR(((((((((rt0.c0)AND(rt0.c1)))AND(rt0.c0)))AND(rt0.c0)))AND(rt0.c1)))))OR(((rt0.c2)=(rt0.c0)))))OR(((rt0.c0) ISNULL)))) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 WHERE (((-2846072)>=(CASE rt0.c2  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c0 END))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0 WHERE ((NOT (((-2846072)>=(CASE rt0.c2  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c0 END))))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0 WHERE (((((-2846072)>=(CASE rt0.c2  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c0 END))) ISNULL)) GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING TOTAL(AVG(rt0.c1)) UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT (TOTAL(AVG(rt0.c1)))) UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING ((TOTAL(AVG(rt0.c1))) ISNULL);
SELECT ALL * FROM rt0;
SELECT * FROM rt0 WHERE (0.9918916479605226) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (0.9918916479605226))) UNION ALL SELECT * FROM rt0 WHERE (((0.9918916479605226) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))) COLLATE RTRIM) UNION SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT ((((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))) COLLATE RTRIM))) UNION SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((((((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))) COLLATE RTRIM) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1 FROM rt0;
SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c1, rt0.c2 FROM rt0 WHERE ((rt0.c1 IN (rt0.c2)) COLLATE RTRIM) GROUP BY rt0.c1, rt0.c2 UNION SELECT rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT ((rt0.c1 IN (rt0.c2)) COLLATE RTRIM))) GROUP BY rt0.c1, rt0.c2 UNION SELECT rt0.c1, rt0.c2 FROM rt0 WHERE ((((rt0.c1 IN (rt0.c2)) COLLATE RTRIM) ISNULL)) GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING ((AVG(rt0.c0))-(CASE rt0.c1  WHEN SUM(MIN(AVG(rt0.c2))) THEN x'be44' END)) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING (NOT (((AVG(rt0.c0))-(CASE rt0.c1  WHEN SUM(MIN(AVG(rt0.c2))) THEN x'be44' END)))) UNION ALL SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING ((((AVG(rt0.c0))-(CASE rt0.c1  WHEN SUM(MIN(AVG(rt0.c2))) THEN x'be44' END))) ISNULL);
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE (SQLITE_COMPILEOPTION_GET(CAST('-1532343475' AS TEXT))) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (SQLITE_COMPILEOPTION_GET(CAST('-1532343475' AS TEXT))))) UNION ALL SELECT * FROM rt0 WHERE (((SQLITE_COMPILEOPTION_GET(CAST('-1532343475' AS TEXT))) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((((((((((rt0.c1) IS TRUE))OR(((rt0.c0)GLOB(rt0.c1)))))OR(rt0.c2)))OR(CAST(rt0.c1 AS TEXT))))AND(((((rt0.c2)OR(rt0.c1)))AND(rt0.c2))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((((((((((rt0.c1) IS TRUE))OR(((rt0.c0)GLOB(rt0.c1)))))OR(rt0.c2)))OR(CAST(rt0.c1 AS TEXT))))AND(((((rt0.c2)OR(rt0.c1)))AND(rt0.c2))))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((((((((((rt0.c1) IS TRUE))OR(((rt0.c0)GLOB(rt0.c1)))))OR(rt0.c2)))OR(CAST(rt0.c1 AS TEXT))))AND(((((rt0.c2)OR(rt0.c1)))AND(rt0.c2))))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 WHERE ((((((rt0.c2))<>((0.34662817658970513)))) BETWEEN (((rt0.c2)LIKE(rt0.c1))) AND (((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1))))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0 WHERE ((NOT ((((((rt0.c2))<>((0.34662817658970513)))) BETWEEN (((rt0.c2)LIKE(rt0.c1))) AND (((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1))))))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0 WHERE ((((((((rt0.c2))<>((0.34662817658970513)))) BETWEEN (((rt0.c2)LIKE(rt0.c1))) AND (((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1))))) ISNULL)) GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING MAX(((('')) BETWEEN ((rt0.c2)) AND ((rt0.c2)))) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING (NOT (MAX(((('')) BETWEEN ((rt0.c2)) AND ((rt0.c2)))))) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING ((MAX(((('')) BETWEEN ((rt0.c2)) AND ((rt0.c2))))) ISNULL);
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING MAX(((('')) BETWEEN ((rt0.c2)) AND ((rt0.c2)))) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING (NOT (MAX(((('')) BETWEEN ((rt0.c2)) AND ((rt0.c2)))))) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING ((MAX(((('')) BETWEEN ((rt0.c2)) AND ((rt0.c2))))) ISNULL);
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE (CASE WHEN CASE rt0.c0  WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c2 END THEN rt0.c2 COLLATE NOCASE WHEN ' sb)W' THEN (rt0.c2 IN (rt0.c1)) WHEN CHANGES() THEN CASE rt0.c0  WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c1 END ELSE ((rt0.c2)>(rt0.c2)) END) UNION ALL SELECT * FROM rt0 WHERE ((NOT (CASE WHEN CASE rt0.c0  WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c2 END THEN rt0.c2 COLLATE NOCASE WHEN ' sb)W' THEN (rt0.c2 IN (rt0.c1)) WHEN CHANGES() THEN CASE rt0.c0  WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c1 END ELSE ((rt0.c2)>(rt0.c2)) END))) UNION ALL SELECT * FROM rt0 WHERE (((CASE WHEN CASE rt0.c0  WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c2 END THEN rt0.c2 COLLATE NOCASE WHEN ' sb)W' THEN (rt0.c2 IN (rt0.c1)) WHEN CHANGES() THEN CASE rt0.c0  WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c1 END ELSE ((rt0.c2)>(rt0.c2)) END) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (CASE WHEN (NOT (rt0.c1)) THEN ((((rt0.c0)AND(rt0.c0)))OR(rt0.c2)) WHEN (~ (rt0.c2)) THEN (((rt0.c2)) BETWEEN ((NULL)) AND ((rt0.c0))) WHEN (((rt0.c2))<=((rt0.c1))) THEN rt0.c0 END) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (CASE WHEN (NOT (rt0.c1)) THEN ((((rt0.c0)AND(rt0.c0)))OR(rt0.c2)) WHEN (~ (rt0.c2)) THEN (((rt0.c2)) BETWEEN ((NULL)) AND ((rt0.c0))) WHEN (((rt0.c2))<=((rt0.c1))) THEN rt0.c0 END))) UNION SELECT DISTINCT * FROM rt0 WHERE (((CASE WHEN (NOT (rt0.c1)) THEN ((((rt0.c0)AND(rt0.c0)))OR(rt0.c2)) WHEN (~ (rt0.c2)) THEN (((rt0.c2)) BETWEEN ((NULL)) AND ((rt0.c0))) WHEN (((rt0.c2))<=((rt0.c1))) THEN rt0.c0 END) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE (((rt0.c1)<((rt0.c2 IN ())))) GROUP BY rt0.c2, rt0.c0, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (((rt0.c1)<((rt0.c2 IN ())))))) GROUP BY rt0.c2, rt0.c0, rt0.c1 UNION SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE (((((rt0.c1)<((rt0.c2 IN ())))) ISNULL)) GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING ((((((((COUNT(*))OR(MIN(rt0.c2))))OR(rt0.c0)))OR(UNLIKELY(rt0.c1))))OR(SUM(rt0.c0))) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING (NOT (((((((((COUNT(*))OR(MIN(rt0.c2))))OR(rt0.c0)))OR(UNLIKELY(rt0.c1))))OR(SUM(rt0.c0))))) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING ((((((((((COUNT(*))OR(MIN(rt0.c2))))OR(rt0.c0)))OR(UNLIKELY(rt0.c1))))OR(SUM(rt0.c0)))) ISNULL);
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING ((((((((COUNT(*))OR(MIN(rt0.c2))))OR(rt0.c0)))OR(UNLIKELY(rt0.c1))))OR(SUM(rt0.c0))) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING (NOT (((((((((COUNT(*))OR(MIN(rt0.c2))))OR(rt0.c0)))OR(UNLIKELY(rt0.c1))))OR(SUM(rt0.c0))))) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING ((((((((((COUNT(*))OR(MIN(rt0.c2))))OR(rt0.c0)))OR(UNLIKELY(rt0.c1))))OR(SUM(rt0.c0)))) ISNULL);
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE (((((rt0.c2) ISNULL))&(CAST(rt0.c2 AS REAL)))) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (((((rt0.c2) ISNULL))&(CAST(rt0.c2 AS REAL)))))) UNION ALL SELECT * FROM rt0 WHERE (((((((rt0.c2) ISNULL))&(CAST(rt0.c2 AS REAL)))) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0 WHERE (rt0.c2) UNION SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (rt0.c2))) UNION SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0 WHERE (((rt0.c2) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 WHERE (NULLIF(TRIM(DISTINCT rt0.c0), rt0.c2 COLLATE NOCASE)) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0 WHERE ((NOT (NULLIF(TRIM(DISTINCT rt0.c0), rt0.c2 COLLATE NOCASE)))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0 WHERE (((NULLIF(TRIM(DISTINCT rt0.c0), rt0.c2 COLLATE NOCASE)) ISNULL)) GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING MIN(MAX(rt0.c0)) UNION ALL SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING (NOT (MIN(MAX(rt0.c0)))) UNION ALL SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING ((MIN(MAX(rt0.c0))) ISNULL);
SELECT ALL rt0.c2 FROM rt0;
SELECT ALL rt0.c2 FROM rt0 WHERE ((- (SQLITE_VERSION()))) UNION ALL SELECT ALL rt0.c2 FROM rt0 WHERE ((NOT ((- (SQLITE_VERSION()))))) UNION ALL SELECT ALL rt0.c2 FROM rt0 WHERE ((((- (SQLITE_VERSION()))) ISNULL));
SELECT ALL rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0 WHERE ((((- (rt0.c1)))%(((rt0.c1)/(rt0.c1))))) UNION SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT ((((- (rt0.c1)))%(((rt0.c1)/(rt0.c1))))))) UNION SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0 WHERE ((((((- (rt0.c1)))%(((rt0.c1)/(rt0.c1))))) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 WHERE (rt0.c0) GROUP BY rt0.c2, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (rt0.c0))) GROUP BY rt0.c2, rt0.c1 UNION SELECT rt0.c2, rt0.c1 FROM rt0 WHERE (((rt0.c0) ISNULL)) GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING 'Ywn\nF' UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT ('Ywn\nF')) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (('Ywn\nF') ISNULL);
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING 'Ywn\nF' UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT ('Ywn\nF')) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (('Ywn\nF') ISNULL);
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT * FROM rt0 NOT INDEXED;
SELECT ALL * FROM rt0 WHERE ((+ (((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c0))))) UNION ALL SELECT * FROM rt0 WHERE ((NOT ((+ (((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c0))))))) UNION ALL SELECT * FROM rt0 WHERE ((((+ (((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c0))))) ISNULL));
SELECT * FROM rt0 NOT INDEXED;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((CAST(rt0.c2 AS BLOB))>(CAST(rt0.c2 AS BLOB)))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((CAST(rt0.c2 AS BLOB))>(CAST(rt0.c2 AS BLOB)))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((CAST(rt0.c2 AS BLOB))>(CAST(rt0.c2 AS BLOB)))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE (x'561a' COLLATE BINARY) GROUP BY rt0.c0, rt0.c1, rt0.c2 UNION SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (x'561a' COLLATE BINARY))) GROUP BY rt0.c0, rt0.c1, rt0.c2 UNION SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 NOT INDEXED WHERE (((x'561a' COLLATE BINARY) ISNULL)) GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING ((((((((((MIN(x'')) NOT BETWEEN (COUNT(COUNT(COUNT(*)))) AND (MIN(MAX(SUM(rt0.c2))))))OR(AVG(COUNT(*)))))AND(TOTAL(COUNT(*)))))AND(rt0.c0)))AND(((((rt0.c1)AND(rt0.c2)))OR(GROUP_CONCAT(MAX(MAX(rt0.c2))))))) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING (NOT (((((((((((MIN(x'')) NOT BETWEEN (COUNT(COUNT(COUNT(*)))) AND (MIN(MAX(SUM(rt0.c2))))))OR(AVG(COUNT(*)))))AND(TOTAL(COUNT(*)))))AND(rt0.c0)))AND(((((rt0.c1)AND(rt0.c2)))OR(GROUP_CONCAT(MAX(MAX(rt0.c2))))))))) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING ((((((((((((MIN(x'')) NOT BETWEEN (COUNT(COUNT(COUNT(*)))) AND (MIN(MAX(SUM(rt0.c2))))))OR(AVG(COUNT(*)))))AND(TOTAL(COUNT(*)))))AND(rt0.c0)))AND(((((rt0.c1)AND(rt0.c2)))OR(GROUP_CONCAT(MAX(MAX(rt0.c2)))))))) ISNULL);
SELECT ALL SUM(CASE WHEN ((rt0.c0)IS(rt0.c2)) THEN (x'09c1' IN ()) ELSE ((rt0.c0)>(rt0.c0)) END) FROM rt0;
SELECT ALL rt0.c1, rt0.c2 FROM rt0;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 WHERE (((rt0.c2)<=(rt0.c0)) COLLATE BINARY) UNION ALL SELECT rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (((rt0.c2)<=(rt0.c0)) COLLATE BINARY))) UNION ALL SELECT rt0.c1, rt0.c2 FROM rt0 WHERE (((((rt0.c2)<=(rt0.c0)) COLLATE BINARY) ISNULL));
SELECT ALL rt0.c1, rt0.c2 FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((((rt0.c2 IN ()))IS NOT(MIN(rt0.c1, rt0.c2, rt0.c2, rt0.c1, rt0.c1, 0.6018732674384907)))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((((rt0.c2 IN ()))IS NOT(MIN(rt0.c1, rt0.c2, rt0.c2, rt0.c1, rt0.c1, 0.6018732674384907)))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((((rt0.c2 IN ()))IS NOT(MIN(rt0.c1, rt0.c2, rt0.c2, rt0.c1, rt0.c1, 0.6018732674384907)))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE (x'624e') GROUP BY rt0.c0, rt0.c2, rt0.c1 UNION SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (x'624e'))) GROUP BY rt0.c0, rt0.c2, rt0.c1 UNION SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE (((x'624e') ISNULL)) GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING CAST((rt0.c2 IN (rt0.c1)) AS REAL) UNION ALL SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING (NOT (CAST((rt0.c2 IN (rt0.c1)) AS REAL))) UNION ALL SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING ((CAST((rt0.c2 IN (rt0.c1)) AS REAL)) ISNULL);
SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING CAST((rt0.c2 IN (rt0.c1)) AS REAL) UNION ALL SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING (NOT (CAST((rt0.c2 IN (rt0.c1)) AS REAL))) UNION ALL SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING ((CAST((rt0.c2 IN (rt0.c1)) AS REAL)) ISNULL);
SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE (((((((((rt0.c0)AND((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((0.27490276498110067))))))OR((((rt0.c2))<((rt0.c0))))))OR(rt0.c0)))OR(((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1))))) UNION ALL SELECT * FROM rt0 WHERE ((NOT (((((((((rt0.c0)AND((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((0.27490276498110067))))))OR((((rt0.c2))<((rt0.c0))))))OR(rt0.c0)))OR(((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1))))))) UNION ALL SELECT ALL * FROM rt0 WHERE (((((((((((rt0.c0)AND((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((0.27490276498110067))))))OR((((rt0.c2))<((rt0.c0))))))OR(rt0.c0)))OR(((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1))))) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (LIKELIHOOD(((((((((rt0.c1)AND(rt0.c0)))AND(rt0.c2)))OR(rt0.c2)))OR(x'27a9')), 0.10725985085147915)) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (LIKELIHOOD(((((((((rt0.c1)AND(rt0.c0)))AND(rt0.c2)))OR(rt0.c2)))OR(x'27a9')), 0.10725985085147915)))) UNION SELECT DISTINCT * FROM rt0 WHERE (((LIKELIHOOD(((((((((rt0.c1)AND(rt0.c0)))AND(rt0.c2)))OR(rt0.c2)))OR(x'27a9')), 0.10725985085147915)) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE (((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2))) IS TRUE)) GROUP BY rt0.c2, rt0.c0, rt0.c1 UNION SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2))) IS TRUE)))) GROUP BY rt0.c2, rt0.c0, rt0.c1 UNION SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE (((((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2))) IS TRUE)) ISNULL)) GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING ((((TOTAL(rt0.c0))AND(CASE WHEN rt0.c2 THEN MIN(COUNT(*)) WHEN rt0.c0 THEN COUNT(rt0.c0) WHEN COUNT(*) THEN rt0.c1 END)))AND(MIN(NULL))) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING (NOT (((((TOTAL(rt0.c0))AND(CASE WHEN rt0.c2 THEN MIN(COUNT(*)) WHEN rt0.c0 THEN COUNT(rt0.c0) WHEN COUNT(*) THEN rt0.c1 END)))AND(MIN(NULL))))) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING ((((((TOTAL(rt0.c0))AND(CASE WHEN rt0.c2 THEN MIN(COUNT(*)) WHEN rt0.c0 THEN COUNT(rt0.c0) WHEN COUNT(*) THEN rt0.c1 END)))AND(MIN(NULL)))) ISNULL);
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE (x'') UNION ALL SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (x''))) UNION ALL SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE (((x'') ISNULL));
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0 WHERE (((rt0.c0)|(rt0.c2)) COLLATE RTRIM) UNION SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (((rt0.c0)|(rt0.c2)) COLLATE RTRIM))) UNION SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0 WHERE (((((rt0.c0)|(rt0.c2)) COLLATE RTRIM) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2))) NOT BETWEEN (((rt0.c2)LIKE(rt0.c2))) AND (rt0.c0))) GROUP BY rt0.c1, rt0.c0, rt0.c2 UNION SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2))) NOT BETWEEN (((rt0.c2)LIKE(rt0.c2))) AND (rt0.c0))))) GROUP BY rt0.c1, rt0.c0, rt0.c2 UNION SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (((((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2))) NOT BETWEEN (((rt0.c2)LIKE(rt0.c2))) AND (rt0.c0))) ISNULL)) GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING COUNT(TOTAL(rt0.c2)) UNION ALL SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING (NOT (COUNT(TOTAL(rt0.c2)))) UNION ALL SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING ((COUNT(TOTAL(rt0.c2))) ISNULL);
SELECT ALL TOTAL(IFNULL(((rt0.c1)LIKE(NULL)), ((rt0.c1)>=(rt0.c0)))) FROM rt0;
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE ((((rt0.c0)<(rt0.c0)) IN ())) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT ((((rt0.c0)<(rt0.c0)) IN ())))) UNION ALL SELECT * FROM rt0 WHERE ((((((rt0.c0)<(rt0.c0)) IN ())) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (ABS(DISTINCT rt0.c2) COLLATE NOCASE) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (ABS(DISTINCT rt0.c2) COLLATE NOCASE))) UNION SELECT DISTINCT * FROM rt0 WHERE (((ABS(DISTINCT rt0.c2) COLLATE NOCASE) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE (HEX(DISTINCT load_extension(rt0.c1))) GROUP BY rt0.c1, rt0.c2, rt0.c0 UNION SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (HEX(DISTINCT load_extension(rt0.c1))))) GROUP BY rt0.c1, rt0.c2, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE (((HEX(DISTINCT load_extension(rt0.c1))) ISNULL)) GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING ((GROUP_CONCAT(MIN(rt0.c2)))+(rt0.c0 COLLATE BINARY)) UNION ALL SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING (NOT (((GROUP_CONCAT(MIN(rt0.c2)))+(rt0.c0 COLLATE BINARY)))) UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING ((((GROUP_CONCAT(MIN(rt0.c2)))+(rt0.c0 COLLATE BINARY))) ISNULL);
SELECT ALL rt0.c1, rt0.c0 FROM rt0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 WHERE (CAST(((rt0.c2) NOTNULL) AS BLOB)) UNION ALL SELECT rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (CAST(((rt0.c2) NOTNULL) AS BLOB)))) UNION ALL SELECT rt0.c1, rt0.c0 FROM rt0 WHERE (((CAST(((rt0.c2) NOTNULL) AS BLOB)) ISNULL));
SELECT ALL rt0.c1, rt0.c0 FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((((rt0.c1)) BETWEEN ((0.08017112206070953)) AND ((((rt0.c0)==(rt0.c1)))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((((rt0.c1)) BETWEEN ((0.08017112206070953)) AND ((((rt0.c0)=(rt0.c1)))))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((((rt0.c1)) BETWEEN ((0.08017112206070953)) AND ((((rt0.c0)==(rt0.c1)))))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ('821914994') GROUP BY rt0.c1, rt0.c0, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT ('821914994'))) GROUP BY rt0.c1, rt0.c0, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((('821914994') ISNULL)) GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING CAST(((NULL) NOT NULL) AS BLOB) UNION ALL SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING (NOT (CAST(((NULL) NOT NULL) AS BLOB))) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING ((CAST(((NULL) NOT NULL) AS BLOB)) ISNULL);
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING CAST(((NULL) NOT NULL) AS BLOB) UNION ALL SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING (NOT (CAST(((NULL) NOT NULL) AS BLOB))) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING ((CAST(((NULL) NOT NULL) AS BLOB)) ISNULL);
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE (((rt0.c1 COLLATE RTRIM)&((((rt0.c2))<((rt0.c1)))))) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (((rt0.c1 COLLATE RTRIM)&((((rt0.c2))<((rt0.c1)))))))) UNION ALL SELECT * FROM rt0 WHERE (((((rt0.c1 COLLATE RTRIM)&((((rt0.c2))<((rt0.c1)))))) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c2 FROM rt0 WHERE ((((((rt0.c0))<((rt0.c1))))LIKE(((rt0.c1)/(rt0.c0))))) UNION SELECT DISTINCT rt0.c2 FROM rt0 WHERE ((NOT ((((((rt0.c0))<((rt0.c1))))LIKE(((rt0.c1)/(rt0.c0))))))) UNION SELECT DISTINCT rt0.c2 FROM rt0 WHERE ((((((((rt0.c0))<((rt0.c1))))LIKE(((rt0.c1)/(rt0.c0))))) ISNULL));
SELECT DISTINCT rt0.c2 FROM rt0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((+ (((rt0.c0)LIKE(0.9428595900062553))))) GROUP BY rt0.c1, rt0.c2, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT ((+ (((rt0.c0)LIKE(0.9428595900062553))))))) GROUP BY rt0.c1, rt0.c2, rt0.c0 UNION SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((((+ (((rt0.c0)LIKE(0.9428595900062553))))) ISNULL)) GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL * FROM rt0;
SELECT * FROM rt0 WHERE (rt0.c1) UNION ALL SELECT * FROM rt0 WHERE ((NOT (rt0.c1))) UNION ALL SELECT * FROM rt0 WHERE (((rt0.c1) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (rt0.c2) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (rt0.c2))) UNION SELECT DISTINCT * FROM rt0 WHERE (((rt0.c2) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 WHERE (0.9015643962860714 COLLATE BINARY) GROUP BY rt0.c0, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (0.9015643962860714 COLLATE BINARY))) GROUP BY rt0.c0, rt0.c1 UNION SELECT rt0.c0, rt0.c1 FROM rt0 WHERE (((0.9015643962860714 COLLATE BINARY) ISNULL)) GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING AVG(MAX(rt0.c1)) UNION ALL SELECT rt0.c2 FROM rt0 NOT INDEXED GROUP BY rt0.c2 HAVING (NOT (AVG(MAX(rt0.c1)))) UNION ALL SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((AVG(MAX(rt0.c1))) ISNULL);
SELECT ALL * FROM rt0;
SELECT * FROM rt0 WHERE ((~ (((rt0.c0)+(rt0.c2))))) UNION ALL SELECT * FROM rt0 WHERE ((NOT ((~ (((rt0.c0)+(rt0.c2))))))) UNION ALL SELECT * FROM rt0 WHERE ((((~ (((rt0.c0)+(rt0.c2))))) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((((json_insert(rt0.c1, '-161755700', rt0.c1))AND(((((((((rt0.c1)AND(rt0.c0)))AND(rt0.c2)))AND(rt0.c0)))OR(rt0.c0)))))OR((((rt0.c2))==((rt0.c2)))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((((json_insert(rt0.c1, '-161755700', rt0.c1))AND(((((((((rt0.c1)AND(rt0.c0)))AND(rt0.c2)))AND(rt0.c0)))OR(rt0.c0)))))OR((((rt0.c2))=((rt0.c2)))))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((((json_insert(rt0.c1, '-161755700', rt0.c1))AND(((((((((rt0.c1)AND(rt0.c0)))AND(rt0.c2)))AND(rt0.c0)))OR(rt0.c0)))))OR((((rt0.c2))==((rt0.c2)))))) ISNULL));
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c1 FROM rt0 WHERE (NULL) GROUP BY rt0.c0, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (NULL))) GROUP BY rt0.c0, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c1 FROM rt0 WHERE (((NULL) ISNULL)) GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING SUM((NOT (rt0.c1))) UNION ALL SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING (NOT (SUM((NOT (rt0.c1))))) UNION ALL SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING ((SUM((NOT (rt0.c1)))) ISNULL);
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING SUM((NOT (rt0.c1))) UNION ALL SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING (NOT (SUM((NOT (rt0.c1))))) UNION ALL SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING ((SUM((NOT (rt0.c1)))) ISNULL);
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c1 FROM rt0;
SELECT rt0.c1 FROM rt0 WHERE (((rt0.c2 IN ()) IN ())) UNION ALL SELECT rt0.c1 FROM rt0 WHERE ((NOT (((rt0.c2 IN ()) IN ())))) UNION ALL SELECT rt0.c1 FROM rt0 WHERE (((((rt0.c2 IN ()) IN ())) ISNULL));
SELECT rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE (((((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c2))) IS TRUE)) UNION SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (((((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c2))) IS TRUE)))) UNION SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE (((((((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c2))) IS TRUE)) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0 FROM rt0;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 WHERE (rt0.c2) GROUP BY rt0.c0, rt0.c1 UNION SELECT rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (rt0.c2))) GROUP BY rt0.c0, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c1 FROM rt0 WHERE (((rt0.c2) ISNULL)) GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING GROUP_CONCAT(SUM(AVG(MAX(rt0.c1)))) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING (NOT (GROUP_CONCAT(SUM(AVG(MAX(rt0.c1)))))) UNION ALL SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING ((GROUP_CONCAT(SUM(AVG(MAX(rt0.c1))))) ISNULL);
SELECT ALL MIN((((rt0.c2)) BETWEEN ((((rt0.c0) NOT NULL))) AND ((NULL)))) FROM rt0;
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE ((NOT ((- (rt0.c1))))) ORDER BY (((+ (rt0.c2))) IS TRUE) DESC, (((((('0.968134583744573')AND(rt0.c2)))AND(rt0.c1))) NOT BETWEEN ((((rt0.c0, rt0.c1, rt0.c0)) NOT BETWEEN ((rt0.c2, rt0.c0, rt0.c1)) AND ((rt0.c2, rt0.c2, x'')))) AND ((rt0.c2 IN (rt0.c0))))  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE ((NOT ((NOT ((- (rt0.c1))))))) ORDER BY (((+ (rt0.c2))) IS TRUE) DESC, (((((('0.968134583744573')AND(rt0.c2)))AND(rt0.c1))) NOT BETWEEN ((((rt0.c0, rt0.c1, rt0.c0)) NOT BETWEEN ((rt0.c2, rt0.c0, rt0.c1)) AND ((rt0.c2, rt0.c2, x'')))) AND ((rt0.c2 IN (rt0.c0))))  NULLS FIRST;
SELECT * FROM rt0 WHERE ((((NOT ((- (rt0.c1))))) ISNULL)) ORDER BY (((+ (rt0.c2))) IS TRUE) DESC, (((((('0.968134583744573')AND(rt0.c2)))AND(rt0.c1))) NOT BETWEEN ((((rt0.c0, rt0.c1, rt0.c0)) NOT BETWEEN ((rt0.c2, rt0.c0, rt0.c1)) AND ((rt0.c2, rt0.c2, x'')))) AND ((rt0.c2 IN (rt0.c0))))  NULLS FIRST;
SELECT * FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((((rt0.c2, rt0.c1, rt0.c1)) BETWEEN (((rt0.c0 IN ()), rt0.c1 COLLATE BINARY, (NOT (rt0.c0)))) AND ((((rt0.c1)&(rt0.c1)), (+ (rt0.c2)), (rt0.c0 IN ()))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((((rt0.c2, rt0.c1, rt0.c1)) BETWEEN (((rt0.c0 IN ()), rt0.c1 COLLATE BINARY, (NOT (rt0.c0)))) AND ((((rt0.c1)&(rt0.c1)), (+ (rt0.c2)), (rt0.c0 IN ()))))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((((rt0.c2, rt0.c1, rt0.c1)) BETWEEN (((rt0.c0 IN ()), rt0.c1 COLLATE BINARY, (NOT (rt0.c0)))) AND ((((rt0.c1)&(rt0.c1)), (+ (rt0.c2)), (rt0.c0 IN ()))))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c1 FROM rt0 WHERE (((((CAST(rt0.c2 AS REAL))AND(rt0.c0)))AND((rt0.c2 IN (rt0.c1))))) GROUP BY rt0.c0, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (((((CAST(rt0.c2 AS REAL))AND(rt0.c0)))AND((rt0.c2 IN (rt0.c1))))))) GROUP BY rt0.c0, rt0.c1 UNION SELECT rt0.c0, rt0.c1 FROM rt0 WHERE (((((((CAST(rt0.c2 AS REAL))AND(rt0.c0)))AND((rt0.c2 IN (rt0.c1))))) ISNULL)) GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING GROUP_CONCAT(((COUNT(rt0.c2)) NOT NULL)) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING (NOT (GROUP_CONCAT(((COUNT(rt0.c2)) NOT NULL)))) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING ((GROUP_CONCAT(((COUNT(rt0.c2)) NOT NULL))) ISNULL);
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((((CAST(rt0.c2 AS BLOB)))>((((rt0.c2)>(rt0.c0)))))) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT ((((CAST(rt0.c2 AS BLOB)))>((((rt0.c2)>(rt0.c0)))))))) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((((((CAST(rt0.c2 AS BLOB)))>((((rt0.c2)>(rt0.c0)))))) ISNULL));
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((0.9197947038274948) NOT NULL)) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((0.9197947038274948) NOT NULL)))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((0.9197947038274948) NOT NULL)) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (CAST(rt0.c0 AS REAL)) GROUP BY rt0.c1, rt0.c0, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (CAST(rt0.c0 AS REAL)))) GROUP BY rt0.c1, rt0.c0, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (((CAST(rt0.c0 AS REAL)) ISNULL)) GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING rt0.c2 COLLATE BINARY UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT (rt0.c2 COLLATE BINARY)) UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING ((rt0.c2 COLLATE BINARY) ISNULL);
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING rt0.c2 COLLATE BINARY UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT (rt0.c2 COLLATE BINARY)) UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING ((rt0.c2 COLLATE BINARY) ISNULL);
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE (((rt0.c0)IS(rt0.c1)) COLLATE RTRIM) UNION ALL SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (((rt0.c0)IS(rt0.c1)) COLLATE RTRIM))) UNION ALL SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE (((((rt0.c0)IS(rt0.c1)) COLLATE RTRIM) ISNULL));
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c0 FROM rt0 NOT INDEXED WHERE ((((- (rt0.c0)))<<(rt0.c0 COLLATE NOCASE))) UNION SELECT DISTINCT rt0.c0 FROM rt0 WHERE ((NOT ((((- (rt0.c0)))<<(rt0.c0 COLLATE NOCASE))))) UNION SELECT DISTINCT rt0.c0 FROM rt0 WHERE ((((((- (rt0.c0)))<<(rt0.c0 COLLATE NOCASE))) ISNULL));
SELECT DISTINCT rt0.c0 FROM rt0;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE (COALESCE(DISTINCT rt0.c0, (~ (rt0.c0)))) GROUP BY rt0.c0, rt0.c1, rt0.c2 UNION SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (COALESCE(DISTINCT rt0.c0, (~ (rt0.c0)))))) GROUP BY rt0.c0, rt0.c1, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE (((COALESCE(DISTINCT rt0.c0, (~ (rt0.c0)))) ISNULL)) GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING AVG(rt0.c0) COLLATE RTRIM UNION ALL SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING (NOT (AVG(rt0.c0) COLLATE RTRIM)) UNION ALL SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING ((AVG(rt0.c0) COLLATE RTRIM) ISNULL);
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING AVG(rt0.c0) COLLATE RTRIM UNION ALL SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING (NOT (AVG(rt0.c0) COLLATE RTRIM)) UNION ALL SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING ((AVG(rt0.c0) COLLATE RTRIM) ISNULL);
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c1 FROM rt0;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 WHERE ((((((rt0.c2))!=((rt0.c1)))) BETWEEN ((rt0.c1 IN ())) AND (CAST(x'7aee' AS BLOB)))) UNION ALL SELECT rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT ((((((rt0.c2))!=((rt0.c1)))) BETWEEN ((rt0.c1 IN ())) AND (CAST(x'7aee' AS BLOB)))))) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM rt0 WHERE ((((((((rt0.c2))<>((rt0.c1)))) BETWEEN ((rt0.c1 IN ())) AND (CAST(x'7aee' AS BLOB)))) ISNULL));
SELECT rt0.c0, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0 WHERE (((((rt0.c2) IS TRUE)) NOTNULL)) UNION SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (((((rt0.c2) IS TRUE)) NOTNULL)))) UNION SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0 WHERE (((((((rt0.c2) IS TRUE)) NOTNULL)) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 WHERE ((((rt0.c0 IN ()))-(rt0.c1))) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM rt0 WHERE ((NOT ((((rt0.c0 IN ()))-(rt0.c1))))) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM rt0 WHERE ((((((rt0.c0 IN ()))-(rt0.c1))) ISNULL)) GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING ((((((MAX(MIN(rt0.c0)))OR(TOTAL(GROUP_CONCAT(MAX(x'afb5'))))))OR(rt0.c1))) NOT NULL) UNION ALL SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING (NOT (((((((MAX(MIN(rt0.c0)))OR(TOTAL(GROUP_CONCAT(MAX(x'afb5'))))))OR(rt0.c1))) NOT NULL))) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING ((((((((MAX(MIN(rt0.c0)))OR(TOTAL(GROUP_CONCAT(MAX(x'afb5'))))))OR(rt0.c1))) NOT NULL)) ISNULL);
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE (((((rt0.c2)*(rt0.c2))) IS TRUE)) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (((((rt0.c2)*(rt0.c2))) IS TRUE)))) UNION ALL SELECT ALL * FROM rt0 WHERE (((((((rt0.c2)*(rt0.c2))) IS TRUE)) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c0 FROM rt0 WHERE (x'92da') UNION SELECT DISTINCT rt0.c0 FROM rt0 WHERE ((NOT (x'92da'))) UNION SELECT DISTINCT rt0.c0 FROM rt0 WHERE (((x'92da') ISNULL));
SELECT DISTINCT rt0.c0 FROM rt0;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 WHERE (CAST((('[⥵')>(rt0.c0)) AS TEXT)) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0 WHERE ((NOT (CAST((('[⥵')>(rt0.c0)) AS TEXT)))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0 WHERE (((CAST((('[⥵')>(rt0.c0)) AS TEXT)) ISNULL)) GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING TOTAL((+ (MAX(rt0.c0)))) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING (NOT (TOTAL((+ (MAX(rt0.c0)))))) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING ((TOTAL((+ (MAX(rt0.c0))))) ISNULL);
SELECT ALL MAX((- (((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c0))))) FROM rt0 ORDER BY ((((rt0.c1)<<(rt0.c0)))+((((0.3445775020178383)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1))))) ASC  NULLS LAST;
SELECT ALL rt0.c2 FROM rt0;
SELECT ALL rt0.c2 FROM rt0 WHERE (rt0.c0) UNION ALL SELECT rt0.c2 FROM rt0 WHERE ((NOT (rt0.c0))) UNION ALL SELECT rt0.c2 FROM rt0 WHERE (((rt0.c0) ISNULL));
SELECT ALL rt0.c2 FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (MAX(((((rt0.c1)OR(rt0.c2)))AND(rt0.c1)), NULL)) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (MAX(((((rt0.c1)OR(rt0.c2)))AND(rt0.c1)), NULL)))) UNION SELECT DISTINCT * FROM rt0 WHERE (((MAX(((((rt0.c1)OR(rt0.c2)))AND(rt0.c1)), NULL)) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 WHERE ((((((rt0.c2)>>(rt0.c2))))=((rt0.c0)))) GROUP BY rt0.c0, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT ((((((rt0.c2)>>(rt0.c2))))=((rt0.c0)))))) GROUP BY rt0.c0, rt0.c2 UNION SELECT rt0.c0, rt0.c2 FROM rt0 WHERE ((((((((rt0.c2)>>(rt0.c2))))==((rt0.c0)))) ISNULL)) GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (((- (GROUP_CONCAT(rt0.c0))))&(AVG(rt0.c0))) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT ((((- (GROUP_CONCAT(rt0.c0))))&(AVG(rt0.c0))))) UNION ALL SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (((((- (GROUP_CONCAT(rt0.c0))))&(AVG(rt0.c0)))) ISNULL);
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (((- (GROUP_CONCAT(rt0.c0))))&(AVG(rt0.c0))) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT ((((- (GROUP_CONCAT(rt0.c0))))&(AVG(rt0.c0))))) UNION ALL SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (((((- (GROUP_CONCAT(rt0.c0))))&(AVG(rt0.c0)))) ISNULL);
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE ((('-2017967981')AND('H8h<p'))) UNION ALL SELECT * FROM rt0 WHERE ((NOT ((('-2017967981')AND('H8h<p'))))) UNION ALL SELECT * FROM rt0 WHERE ((((('-2017967981')AND('H8h<p'))) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (0.015084313009946837) UNION SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (0.015084313009946837))) UNION SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (((0.015084313009946837) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 WHERE ((((rt0.c0 IN ())) BETWEEN (((((((((rt0.c2)OR(rt0.c1)))OR(rt0.c0)))AND(rt0.c1)))OR(rt0.c2))) AND (((((rt0.c2)OR(rt0.c1)))AND(rt0.c0))))) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM rt0 WHERE ((NOT ((((rt0.c0 IN ())) BETWEEN (((((((((rt0.c2)OR(rt0.c1)))OR(rt0.c0)))AND(rt0.c1)))OR(rt0.c2))) AND (((((rt0.c2)OR(rt0.c1)))AND(rt0.c0))))))) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM rt0 WHERE ((((((rt0.c0 IN ())) BETWEEN (((((((((rt0.c2)OR(rt0.c1)))OR(rt0.c0)))AND(rt0.c1)))OR(rt0.c2))) AND (((((rt0.c2)OR(rt0.c1)))AND(rt0.c0))))) ISNULL)) GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING GROUP_CONCAT(MAX(COUNT(*))) UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING (NOT (GROUP_CONCAT(MAX(COUNT(*))))) UNION ALL SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING ((GROUP_CONCAT(MAX(COUNT(*)))) ISNULL);
SELECT ALL * FROM rt0;
SELECT * FROM rt0 WHERE (UNICODE(((rt0.c2) ISNULL))) UNION ALL SELECT * FROM rt0 WHERE ((NOT (UNICODE(((rt0.c2) ISNULL))))) UNION ALL SELECT * FROM rt0 WHERE (((UNICODE(((rt0.c2) ISNULL))) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c0 FROM rt0 WHERE ('-1980040145') UNION SELECT DISTINCT rt0.c0 FROM rt0 WHERE ((NOT ('-1980040145'))) UNION SELECT DISTINCT rt0.c0 FROM rt0 WHERE ((('-1980040145') ISNULL));
SELECT DISTINCT rt0.c0 FROM rt0;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 WHERE (rt0.c2) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0 WHERE ((NOT (rt0.c2))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0 WHERE (((rt0.c2) ISNULL)) GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING MAX(MIN(MAX(rt0.c1))) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING (NOT (MAX(MIN(MAX(rt0.c1))))) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING ((MAX(MIN(MAX(rt0.c1)))) ISNULL);
SELECT SUM(LIKELIHOOD(CAST(rt0.c2 AS TEXT), 0.4997130015877199)) FROM rt0;
SELECT ALL * FROM rt0;
SELECT * FROM rt0 WHERE (CAST((rt0.c0 IN ()) AS BLOB)) UNION ALL SELECT * FROM rt0 WHERE ((NOT (CAST((rt0.c0 IN ()) AS BLOB)))) UNION ALL SELECT ALL * FROM rt0 WHERE (((CAST((rt0.c0 IN ()) AS BLOB)) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((rt0.c1)>(LOWER(DISTINCT rt0.c1)))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((rt0.c1)>(LOWER(DISTINCT rt0.c1)))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((rt0.c1)>(LOWER(DISTINCT rt0.c1)))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE (NULLIF(DISTINCT LIKELIHOOD(DISTINCT rt0.c1, 0.2959879980684994), ((rt0.c1)==(rt0.c1)))) GROUP BY rt0.c2, rt0.c0, rt0.c1 UNION SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 NOT INDEXED WHERE ((NOT (NULLIF(DISTINCT LIKELIHOOD(DISTINCT rt0.c1, 0.2959879980684994), ((rt0.c1)==(rt0.c1)))))) GROUP BY rt0.c2, rt0.c0, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE (((NULLIF(DISTINCT LIKELIHOOD(DISTINCT rt0.c1, 0.2959879980684994), ((rt0.c1)==(rt0.c1)))) ISNULL)) GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING CASE GROUP_CONCAT('jt?0%贜鈨Q')  WHEN ((rt0.c1)AND(SUM(MAX(MAX(AVG(TOTAL(x''))))))) THEN (AVG(MAX(GROUP_CONCAT(rt0.c0))) IN ()) WHEN TOTAL(GROUP_CONCAT(rt0.c2)) THEN AVG(rt0.c0) WHEN (((MIN(TOTAL(COUNT(*))))) BETWEEN ((SUM(TOTAL(rt0.c2)))) AND ((MAX(rt0.c0)))) THEN COUNT(SUM(AVG(AVG(rt0.c1)))) END UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING (NOT (CASE GROUP_CONCAT('jt?0%贜鈨Q')  WHEN ((rt0.c1)AND(SUM(MAX(MAX(AVG(TOTAL(x''))))))) THEN (AVG(MAX(GROUP_CONCAT(rt0.c0))) IN ()) WHEN TOTAL(GROUP_CONCAT(rt0.c2)) THEN AVG(rt0.c0) WHEN (((MIN(TOTAL(COUNT(*))))) BETWEEN ((SUM(TOTAL(rt0.c2)))) AND ((MAX(rt0.c0)))) THEN COUNT(SUM(AVG(AVG(rt0.c1)))) END)) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING ((CASE GROUP_CONCAT('jt?0%贜鈨Q')  WHEN ((rt0.c1)AND(SUM(MAX(MAX(AVG(TOTAL(x''))))))) THEN (AVG(MAX(GROUP_CONCAT(rt0.c0))) IN ()) WHEN TOTAL(GROUP_CONCAT(rt0.c2)) THEN AVG(rt0.c0) WHEN (((MIN(TOTAL(COUNT(*))))) BETWEEN ((SUM(TOTAL(rt0.c2)))) AND ((MAX(rt0.c0)))) THEN COUNT(SUM(AVG(AVG(rt0.c1)))) END) ISNULL);
SELECT rt0.c1, rt0.c2 FROM rt0;
SELECT rt0.c1, rt0.c2 FROM rt0 WHERE (CAST(CAST(rt0.c0 AS NUMERIC) AS TEXT)) UNION ALL SELECT ALL rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (CAST(CAST(rt0.c0 AS NUMERIC) AS TEXT)))) UNION ALL SELECT ALL rt0.c1, rt0.c2 FROM rt0 NOT INDEXED WHERE (((CAST(CAST(rt0.c0 AS NUMERIC) AS TEXT)) ISNULL));
SELECT rt0.c1, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (rt0.c1) UNION SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (rt0.c1))) UNION SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (((rt0.c1) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 WHERE ((((((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c0)), ((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c2)), ((rt0.c1)||(rt0.c1))))=((0.4214660373035367 COLLATE RTRIM, rt0.c2 COLLATE RTRIM, rt0.c0)))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0 WHERE ((NOT ((((((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c0)), ((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c2)), ((rt0.c1)||(rt0.c1))))=((0.4214660373035367 COLLATE RTRIM, rt0.c2 COLLATE RTRIM, rt0.c0)))))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0 WHERE ((((((((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c0)), ((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c2)), ((rt0.c1)||(rt0.c1))))=((0.4214660373035367 COLLATE RTRIM, rt0.c2 COLLATE RTRIM, rt0.c0)))) ISNULL)) GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING TOTAL(CASE WHEN rt0.c1 THEN rt0.c1 ELSE '' END) UNION ALL SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING (NOT (TOTAL(CASE WHEN rt0.c1 THEN rt0.c1 ELSE '' END))) UNION ALL SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING ((TOTAL(CASE WHEN rt0.c1 THEN rt0.c1 ELSE '' END)) ISNULL);
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING TOTAL(CASE WHEN rt0.c1 THEN rt0.c1 ELSE '' END) UNION ALL SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING (NOT (TOTAL(CASE WHEN rt0.c1 THEN rt0.c1 ELSE '' END))) UNION ALL SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING ((TOTAL(CASE WHEN rt0.c1 THEN rt0.c1 ELSE '' END)) ISNULL);
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT ALL * FROM rt0;
SELECT * FROM rt0 WHERE ((rt0.c0 IN ()) COLLATE NOCASE) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT ((rt0.c0 IN ()) COLLATE NOCASE))) UNION ALL SELECT ALL * FROM rt0 WHERE ((((rt0.c0 IN ()) COLLATE NOCASE) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((((((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2)), rt0.c0, ((((((((((((rt0.c1)AND(rt0.c0)))OR(rt0.c0)))AND(rt0.c0)))AND(rt0.c2)))AND(rt0.c0)))AND(rt0.c0))))>((json_type(rt0.c2), ((rt0.c0)-(rt0.c2)), CAST(rt0.c1 AS REAL))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((((((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2)), rt0.c0, ((((((((((((rt0.c1)AND(rt0.c0)))OR(rt0.c0)))AND(rt0.c0)))AND(rt0.c2)))AND(rt0.c0)))AND(rt0.c0))))>((json_type(rt0.c2), ((rt0.c0)-(rt0.c2)), CAST(rt0.c1 AS REAL))))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((((((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2)), rt0.c0, ((((((((((((rt0.c1)AND(rt0.c0)))OR(rt0.c0)))AND(rt0.c0)))AND(rt0.c2)))AND(rt0.c0)))AND(rt0.c0))))>((json_type(rt0.c2), ((rt0.c0)-(rt0.c2)), CAST(rt0.c1 AS REAL))))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 WHERE (rt0.c0) GROUP BY rt0.c1, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (rt0.c0))) GROUP BY rt0.c1, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c0 FROM rt0 WHERE (((rt0.c0) ISNULL)) GROUP BY rt0.c1, rt0.c0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING COUNT(*) UNION ALL SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING COUNT(*) UNION ALL SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT TOTAL(rt0.c0) FROM rt0 ORDER BY ((rt0.c1)*(rt0.c1)) COLLATE BINARY;
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE (((rt0.c0)IS NOT(CAST('UDq^' AS NUMERIC)))) UNION ALL SELECT * FROM rt0 WHERE ((NOT (((rt0.c0)IS NOT(CAST('UDq^' AS NUMERIC)))))) UNION ALL SELECT ALL * FROM rt0 WHERE (((((rt0.c0)IS NOT(CAST('UDq^' AS NUMERIC)))) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c2 FROM rt0 WHERE (((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c0 END)LIKE(((rt0.c1)/(rt0.c0))))) UNION SELECT DISTINCT rt0.c2 FROM rt0 WHERE ((NOT (((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c0 END)LIKE(((rt0.c1)/(rt0.c0))))))) UNION SELECT DISTINCT rt0.c2 FROM rt0 WHERE (((((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c0 END)LIKE(((rt0.c1)/(rt0.c0))))) ISNULL));
SELECT DISTINCT rt0.c2 FROM rt0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 WHERE (((((rt0.c1))>((rt0.c0))) IN ())) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM rt0 WHERE ((NOT (((((rt0.c1))>((rt0.c0))) IN ())))) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM rt0 WHERE (((((((rt0.c1))>((rt0.c0))) IN ())) ISNULL)) GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING COUNT(CASE COUNT(*)  WHEN rt0.c1 THEN MAX(rt0.c2) WHEN TOTAL(rt0.c0) THEN '-294918578' WHEN TOTAL(MAX(SUM(GROUP_CONCAT(AVG(x''))))) THEN '432950701' END) UNION ALL SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING (NOT (COUNT(CASE COUNT(*)  WHEN rt0.c1 THEN MAX(rt0.c2) WHEN TOTAL(rt0.c0) THEN '-294918578' WHEN TOTAL(MAX(SUM(GROUP_CONCAT(AVG(x''))))) THEN '432950701' END))) UNION ALL SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING ((COUNT(CASE COUNT(*)  WHEN rt0.c1 THEN MAX(rt0.c2) WHEN TOTAL(rt0.c0) THEN '-294918578' WHEN TOTAL(MAX(SUM(GROUP_CONCAT(AVG(x''))))) THEN '432950701' END)) ISNULL);
SELECT ALL rt0.c2, rt0.c0 FROM rt0;
SELECT rt0.c2, rt0.c0 FROM rt0 WHERE ((((rt0.c2)) NOT BETWEEN ((((rt0.c2) IS TRUE))) AND ((x'')))) UNION ALL SELECT rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT ((((rt0.c2)) NOT BETWEEN ((((rt0.c2) IS TRUE))) AND ((x'')))))) UNION ALL SELECT rt0.c2, rt0.c0 FROM rt0 WHERE ((((((rt0.c2)) NOT BETWEEN ((((rt0.c2) IS TRUE))) AND ((x'')))) ISNULL));
SELECT ALL rt0.c2, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE (((((CASE rt0.c2  WHEN rt0.c0 THEN rt0.c2 END)OR(((rt0.c2) BETWEEN (1.984038354E9) AND (rt0.c0)))))OR(rt0.c2 COLLATE NOCASE))) UNION SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (((((CASE rt0.c2  WHEN rt0.c0 THEN rt0.c2 END)OR(((rt0.c2) BETWEEN (1.984038354E9) AND (rt0.c0)))))OR(rt0.c2 COLLATE NOCASE))))) UNION SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE (((((((CASE rt0.c2  WHEN rt0.c0 THEN rt0.c2 END)OR(((rt0.c2) BETWEEN (1.984038354E9) AND (rt0.c0)))))OR(rt0.c2 COLLATE NOCASE))) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM rt0;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((- ((((rt0.c2, rt0.c2, rt0.c0))<((rt0.c0, rt0.c1, rt0.c1)))))) GROUP BY rt0.c0, rt0.c1, rt0.c2 UNION SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT ((- ((((rt0.c2, rt0.c2, rt0.c0))<((rt0.c0, rt0.c1, rt0.c1)))))))) GROUP BY rt0.c0, rt0.c1, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((((- ((((rt0.c2, rt0.c2, rt0.c0))<((rt0.c0, rt0.c1, rt0.c1)))))) ISNULL)) GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING GROUP_CONCAT(MAX(MAX(rt0.c0))) UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING (NOT (GROUP_CONCAT(MAX(MAX(rt0.c0))))) UNION ALL SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING ((GROUP_CONCAT(MAX(MAX(rt0.c0)))) ISNULL);
SELECT rt0.c2 FROM rt0;
SELECT rt0.c2 FROM rt0 WHERE (rt0.c1) UNION ALL SELECT rt0.c2 FROM rt0 WHERE ((NOT (rt0.c1))) UNION ALL SELECT rt0.c2 FROM rt0 WHERE (((rt0.c1) ISNULL));
SELECT rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0 WHERE ((((NOT (rt0.c0)))GLOB(((rt0.c0) IS FALSE)))) UNION SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT ((((NOT (rt0.c0)))GLOB(((rt0.c0) IS FALSE)))))) UNION SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0 WHERE ((((((NOT (rt0.c0)))GLOB(((rt0.c0) IS FALSE)))) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c1, rt0.c2 FROM rt0 WHERE (x'') GROUP BY rt0.c1, rt0.c2 UNION SELECT rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (x''))) GROUP BY rt0.c1, rt0.c2 UNION SELECT rt0.c1, rt0.c2 FROM rt0 WHERE (((x'') ISNULL)) GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (((((rt0.c1)/(MAX(rt0.c0))), AVG(rt0.c0), AVG(GROUP_CONCAT(rt0.c0))))>=((((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c2)), ((rt0.c1)>=(rt0.c2)), (((COUNT(SUM(rt0.c1))))>=((rt0.c0)))))) UNION ALL SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (NOT ((((((rt0.c1)/(MAX(rt0.c0))), AVG(rt0.c0), AVG(GROUP_CONCAT(rt0.c0))))>=((((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c2)), ((rt0.c1)>=(rt0.c2)), (((COUNT(SUM(rt0.c1))))>=((rt0.c0)))))))) UNION ALL SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (((((((rt0.c1)/(MAX(rt0.c0))), AVG(rt0.c0), AVG(GROUP_CONCAT(rt0.c0))))>=((((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c2)), ((rt0.c1)>=(rt0.c2)), (((COUNT(SUM(rt0.c1))))>=((rt0.c0))))))) ISNULL);
SELECT rt0.c2, rt0.c0 FROM rt0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 WHERE (rt0.c0) UNION ALL SELECT rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (rt0.c0))) UNION ALL SELECT rt0.c2, rt0.c0 FROM rt0 WHERE (((rt0.c0) ISNULL));
SELECT rt0.c2, rt0.c0 FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((+ (0x4cd629d8)) COLLATE RTRIM) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((+ (0x4cd629d8)) COLLATE RTRIM))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((+ (0X4cd629d8)) COLLATE RTRIM) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((- (('5v' IN ())))) GROUP BY rt0.c0, rt0.c1, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT ((- (('5v' IN ())))))) GROUP BY rt0.c0, rt0.c1, rt0.c2 UNION SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((((- (('5v' IN ())))) ISNULL)) GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING MAX(TOTAL(rt0.c2)) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING (NOT (MAX(TOTAL(rt0.c2)))) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING ((MAX(TOTAL(rt0.c2))) ISNULL);
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE (NULL) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (NULL))) UNION ALL SELECT * FROM rt0 WHERE (((NULL) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((rt0.c0 COLLATE NOCASE) ISNULL)) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((rt0.c0 COLLATE NOCASE) ISNULL)))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((rt0.c0 COLLATE NOCASE) ISNULL)) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 WHERE ((~ (NULLIF(rt0.c0, rt0.c1)))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0 WHERE ((NOT ((~ (NULLIF(rt0.c0, rt0.c1)))))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0 WHERE ((((~ (NULLIF(rt0.c0, rt0.c1)))) ISNULL)) GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING TOTAL(rt0.c0 COLLATE BINARY) UNION ALL SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING (NOT (TOTAL(rt0.c0 COLLATE BINARY))) UNION ALL SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING ((TOTAL(rt0.c0 COLLATE BINARY)) ISNULL);
SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING TOTAL(rt0.c0 COLLATE BINARY) UNION ALL SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING (NOT (TOTAL(rt0.c0 COLLATE BINARY))) UNION ALL SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING ((TOTAL(rt0.c0 COLLATE BINARY)) ISNULL);
SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE (rt0.c2) UNION ALL SELECT ALL * FROM rt0 NOT INDEXED WHERE ((NOT (rt0.c2))) UNION ALL SELECT * FROM rt0 WHERE (((rt0.c2) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((rt0.c2 COLLATE RTRIM)<(((rt0.c2) IS TRUE)))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((rt0.c2 COLLATE RTRIM)<(((rt0.c2) IS TRUE)))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((rt0.c2 COLLATE RTRIM)<(((rt0.c2) IS TRUE)))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE (IFNULL(DISTINCT NULL COLLATE BINARY, CAST(rt0.c0 AS NUMERIC))) GROUP BY rt0.c0, rt0.c2, rt0.c1 UNION SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (IFNULL(DISTINCT NULL COLLATE BINARY, CAST(rt0.c0 AS NUMERIC))))) GROUP BY rt0.c0, rt0.c2, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE (((IFNULL(DISTINCT NULL COLLATE BINARY, CAST(rt0.c0 AS NUMERIC))) ISNULL)) GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING GROUP_CONCAT((NOT (COUNT(*)))) UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT (GROUP_CONCAT((NOT (COUNT(*)))))) UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING ((GROUP_CONCAT((NOT (COUNT(*))))) ISNULL);
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE (UNLIKELY(((rt0.c2)+(rt0.c2)))) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (UNLIKELY(((rt0.c2)+(rt0.c2)))))) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE (((UNLIKELY(((rt0.c2)+(rt0.c2)))) ISNULL));
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (CAST(LIKELY(rt0.c1) AS REAL)) UNION SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (CAST(LIKELY(rt0.c1) AS REAL)))) UNION SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (((CAST(LIKELY(rt0.c1) AS REAL)) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE (CASE ((rt0.c1)<=(rt0.c2))  WHEN 1 THEN (((rt0.c1)) BETWEEN (('f4!')) AND ((rt0.c0))) ELSE ((rt0.c1) IS TRUE) END) GROUP BY rt0.c2, rt0.c1, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (CASE ((rt0.c1)<=(rt0.c2))  WHEN 1 THEN (((rt0.c1)) BETWEEN (('f4!')) AND ((rt0.c0))) ELSE ((rt0.c1) IS TRUE) END))) GROUP BY rt0.c2, rt0.c1, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE (((CASE ((rt0.c1)<=(rt0.c2))  WHEN 1 THEN (((rt0.c1)) BETWEEN (('f4!')) AND ((rt0.c0))) ELSE ((rt0.c1) IS TRUE) END) ISNULL)) GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING MAX(MAX(rt0.c2)) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING (NOT (MAX(MAX(rt0.c2)))) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING ((MAX(MAX(rt0.c2))) ISNULL);
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((- (CASE WHEN rt0.c1 THEN ' .' ELSE rt0.c1 END))) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT ((- (CASE WHEN rt0.c1 THEN ' .' ELSE rt0.c1 END))))) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((((- (CASE WHEN rt0.c1 THEN ' .' ELSE rt0.c1 END))) ISNULL));
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0 WHERE ((((rt0.c1 IN ())) NOT BETWEEN (((((rt0.c0)AND(rt0.c1)))OR(rt0.c1))) AND (((rt0.c2)|(x'2f0f'))))) UNION SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT ((((rt0.c1 IN ())) NOT BETWEEN (((((rt0.c0)AND(rt0.c1)))OR(rt0.c1))) AND (((rt0.c2)|(x'2f0f'))))))) UNION SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0 WHERE ((((((rt0.c1 IN ())) NOT BETWEEN (((((rt0.c0)AND(rt0.c1)))OR(rt0.c1))) AND (((rt0.c2)|(x'2f0f'))))) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 WHERE (x'a2b0') GROUP BY rt0.c0, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (x'a2b0'))) GROUP BY rt0.c0, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c1 FROM rt0 WHERE (((x'a2b0') ISNULL)) GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING MIN(((rt0.c2) BETWEEN (rt0.c0) AND (AVG(COUNT(*))))) UNION ALL SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING (NOT (MIN(((rt0.c2) BETWEEN (rt0.c0) AND (AVG(COUNT(*))))))) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING ((MIN(((rt0.c2) BETWEEN (rt0.c0) AND (AVG(COUNT(*)))))) ISNULL);
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE (((((((((((((rt0.c0)OR(rt0.c1)))OR(rt0.c1)))OR(((x'')*(rt0.c0)))))AND(CASE WHEN rt0.c0 THEN rt0.c0 END)))AND(CAST(rt0.c2 AS BLOB))))AND(CASE rt0.c0  WHEN rt0.c1 THEN rt0.c2 END))) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (((((((((((((rt0.c0)OR(rt0.c1)))OR(rt0.c1)))OR(((x'')*(rt0.c0)))))AND(CASE WHEN rt0.c0 THEN rt0.c0 END)))AND(CAST(rt0.c2 AS BLOB))))AND(CASE rt0.c0  WHEN rt0.c1 THEN rt0.c2 END))))) UNION ALL SELECT * FROM rt0 WHERE (((((((((((((((rt0.c0)OR(rt0.c1)))OR(rt0.c1)))OR(((x'')*(rt0.c0)))))AND(CASE WHEN rt0.c0 THEN rt0.c0 END)))AND(CAST(rt0.c2 AS BLOB))))AND(CASE rt0.c0  WHEN rt0.c1 THEN rt0.c2 END))) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (rt0.c0) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (rt0.c0))) UNION SELECT DISTINCT * FROM rt0 WHERE (((rt0.c0) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c2 FROM rt0 WHERE (CAST(CASE WHEN rt0.c1 THEN rt0.c1 ELSE 0.21313465197743187 END AS TEXT)) GROUP BY rt0.c0, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (CAST(CASE WHEN rt0.c1 THEN rt0.c1 ELSE 0.21313465197743187 END AS TEXT)))) GROUP BY rt0.c0, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c2 FROM rt0 WHERE (((CAST(CASE WHEN rt0.c1 THEN rt0.c1 ELSE 0.21313465197743187 END AS TEXT)) ISNULL)) GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING SUM(COUNT(rt0.c0)) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING (NOT (SUM(COUNT(rt0.c0)))) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING ((SUM(COUNT(rt0.c0))) ISNULL);
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE (((((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2))) NOTNULL)) UNION ALL SELECT * FROM rt0 WHERE ((NOT (((((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2))) NOTNULL)))) UNION ALL SELECT * FROM rt0 WHERE (((((((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2))) NOTNULL)) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((((rt0.c2)!=('1487300542')))AND(UPPER(DISTINCT 0xffffffffd1cbc02f)))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((((rt0.c2)<>('1487300542')))AND(UPPER(DISTINCT 0Xffffffffd1cbc02f)))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((((rt0.c2)!=('1487300542')))AND(UPPER(DISTINCT 0Xffffffffd1cbc02f)))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM rt0 WHERE (CAST(CASE WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 END AS NUMERIC)) GROUP BY rt0.c2, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (CAST(CASE WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 END AS NUMERIC)))) GROUP BY rt0.c2, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c0 FROM rt0 WHERE (((CAST(CASE WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 END AS NUMERIC)) ISNULL)) GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING MIN(MIN(AVG(41816596))) UNION ALL SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING (NOT (MIN(MIN(AVG(41816596))))) UNION ALL SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING ((MIN(MIN(AVG(41816596)))) ISNULL);
SELECT ALL * FROM rt0;
SELECT * FROM rt0 WHERE (HEX(CAST(rt0.c0 AS REAL))) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (HEX(CAST(rt0.c0 AS REAL))))) UNION ALL SELECT * FROM rt0 WHERE (((HEX(CAST(rt0.c0 AS REAL))) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c0 FROM rt0 WHERE ((NOT (rt0.c1)) COLLATE NOCASE) UNION SELECT DISTINCT rt0.c0 FROM rt0 WHERE ((NOT ((NOT (rt0.c1)) COLLATE NOCASE))) UNION SELECT DISTINCT rt0.c0 FROM rt0 WHERE ((((NOT (rt0.c1)) COLLATE NOCASE) ISNULL));
SELECT DISTINCT rt0.c0 FROM rt0;
SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c1, rt0.c2 FROM rt0 WHERE (((((rt0.c0, rt0.c1, rt0.c0))==((rt0.c2, rt0.c2, rt0.c0))) IN ())) GROUP BY rt0.c1, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (((((rt0.c0, rt0.c1, rt0.c0))==((rt0.c2, rt0.c2, rt0.c0))) IN ())))) GROUP BY rt0.c1, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c2 FROM rt0 WHERE (((((((rt0.c0, rt0.c1, rt0.c0))==((rt0.c2, rt0.c2, rt0.c0))) IN ())) ISNULL)) GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 NOT INDEXED GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING (- (((COUNT(COUNT(*))) NOTNULL))) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING (NOT ((- (((COUNT(COUNT(*))) NOTNULL))))) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING (((- (((COUNT(COUNT(*))) NOTNULL)))) ISNULL);
SELECT rt0.c2, rt0.c0 FROM rt0;
SELECT rt0.c2, rt0.c0 FROM rt0 WHERE (((rt0.c2 COLLATE RTRIM) IS TRUE)) UNION ALL SELECT rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (((rt0.c2 COLLATE RTRIM) IS TRUE)))) UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM rt0 WHERE (((((rt0.c2 COLLATE RTRIM) IS TRUE)) ISNULL));
SELECT rt0.c2, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c0 FROM rt0 WHERE (CAST(((rt0.c0)OR(rt0.c0)) AS REAL)) UNION SELECT DISTINCT rt0.c0 FROM rt0 WHERE ((NOT (CAST(((rt0.c0)OR(rt0.c0)) AS REAL)))) UNION SELECT DISTINCT rt0.c0 FROM rt0 WHERE (((CAST(((rt0.c0)OR(rt0.c0)) AS REAL)) ISNULL));
SELECT DISTINCT rt0.c0 FROM rt0;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (((rt0.c2)>(rt0.c1))))) GROUP BY rt0.c2, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT ((NOT (((rt0.c2)>(rt0.c1))))))) GROUP BY rt0.c2, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c1 FROM rt0 WHERE ((((NOT (((rt0.c2)>(rt0.c1))))) ISNULL)) GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING CASE WHEN CAST(GROUP_CONCAT(rt0.c2) AS INTEGER) THEN MIN(COUNT(*)) WHEN MIN(rt0.c1) THEN COUNT(MAX(rt0.c1)) WHEN ((TOTAL(rt0.c0)) NOT BETWEEN (MAX(rt0.c1)) AND (TOTAL(MIN(rt0.c2)))) THEN (- (rt0.c0)) END UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING (NOT (CASE WHEN CAST(GROUP_CONCAT(rt0.c2) AS INTEGER) THEN MIN(COUNT(*)) WHEN MIN(rt0.c1) THEN COUNT(MAX(rt0.c1)) WHEN ((TOTAL(rt0.c0)) NOT BETWEEN (MAX(rt0.c1)) AND (TOTAL(MIN(rt0.c2)))) THEN (- (rt0.c0)) END)) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING ((CASE WHEN CAST(GROUP_CONCAT(rt0.c2) AS INTEGER) THEN MIN(COUNT(*)) WHEN MIN(rt0.c1) THEN COUNT(MAX(rt0.c1)) WHEN ((TOTAL(rt0.c0)) NOT BETWEEN (MAX(rt0.c1)) AND (TOTAL(MIN(rt0.c2)))) THEN (- (rt0.c0)) END) ISNULL);
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE (6652990) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (6652990))) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE (((6652990) ISNULL));
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0 WHERE (((((rt0.c0)/(rt0.c1)))||(((rt0.c0)<>(rt0.c1))))) UNION SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (((((rt0.c0)/(rt0.c1)))||(((rt0.c0)!=(rt0.c1))))))) UNION SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0 WHERE (((((((rt0.c0)/(rt0.c1)))||(((rt0.c0)!=(rt0.c1))))) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 WHERE ((rt0.c2 IN ()) COLLATE BINARY) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0 WHERE ((NOT ((rt0.c2 IN ()) COLLATE BINARY))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0 WHERE ((((rt0.c2 IN ()) COLLATE BINARY) ISNULL)) GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING SUM(((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c0))) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING (NOT (SUM(((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c0))))) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING ((SUM(((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c0)))) ISNULL);
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING SUM(((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c0))) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING (NOT (SUM(((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c0))))) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING ((SUM(((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c0)))) ISNULL);
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE ((~ (''))) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT ((~ (''))))) UNION ALL SELECT * FROM rt0 WHERE ((((~ (''))) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0 WHERE (((((rt0.c2)<<(rt0.c2))) ISNULL)) UNION SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (((((rt0.c2)<<(rt0.c2))) ISNULL)))) UNION SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0 WHERE (((((((rt0.c2)<<(rt0.c2))) ISNULL)) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 WHERE (SQLITE_VERSION()) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0 WHERE ((NOT (SQLITE_VERSION()))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0 WHERE (((SQLITE_VERSION()) ISNULL)) GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING NULL UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING (NOT (NULL)) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING ((NULL) ISNULL);
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING NULL UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING (NOT (NULL)) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING ((NULL) ISNULL);
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE (CASE UPPER(DISTINCT rt0.c0)  WHEN (~ (rt0.c0)) THEN ((rt0.c2)+(x'')) WHEN ((rt0.c1)IS NOT(rt0.c2)) THEN LIKELY(DISTINCT rt0.c2) WHEN (- (rt0.c2)) THEN CAST(rt0.c1 AS INTEGER) ELSE ((0.6160890560072685)&(rt0.c0)) END) UNION ALL SELECT * FROM rt0 WHERE ((NOT (CASE UPPER(DISTINCT rt0.c0)  WHEN (~ (rt0.c0)) THEN ((rt0.c2)+(x'')) WHEN ((rt0.c1)IS NOT(rt0.c2)) THEN LIKELY(DISTINCT rt0.c2) WHEN (- (rt0.c2)) THEN CAST(rt0.c1 AS INTEGER) ELSE ((0.6160890560072685)&(rt0.c0)) END))) UNION ALL SELECT * FROM rt0 WHERE (((CASE UPPER(DISTINCT rt0.c0)  WHEN (~ (rt0.c0)) THEN ((rt0.c2)+(x'')) WHEN ((rt0.c1)IS NOT(rt0.c2)) THEN LIKELY(DISTINCT rt0.c2) WHEN (- (rt0.c2)) THEN CAST(rt0.c1 AS INTEGER) ELSE ((0.6160890560072685)&(rt0.c0)) END) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((rt0.c0 IN ())) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((rt0.c0 IN ())))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((rt0.c0 IN ())) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE (((((~ (rt0.c1)), CAST(rt0.c2 AS REAL), ((((rt0.c2)AND(rt0.c0)))AND(rt0.c2))))<=((rt0.c1 COLLATE NOCASE, CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c2 END, (NULL IN ()))))) GROUP BY rt0.c0, rt0.c1, rt0.c2 UNION SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (((((~ (rt0.c1)), CAST(rt0.c2 AS REAL), ((((rt0.c2)AND(rt0.c0)))AND(rt0.c2))))<=((rt0.c1 COLLATE NOCASE, CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c2 END, (NULL IN ()))))))) GROUP BY rt0.c0, rt0.c1, rt0.c2 UNION SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE (((((((~ (rt0.c1)), CAST(rt0.c2 AS REAL), ((((rt0.c2)AND(rt0.c0)))AND(rt0.c2))))<=((rt0.c1 COLLATE NOCASE, CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c2 END, (NULL IN ()))))) ISNULL)) GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING SUM(CASE COUNT(rt0.c0)  WHEN MAX('2101901811') THEN rt0.c0 ELSE MIN(GROUP_CONCAT(AVG(MIN(rt0.c1)))) END) UNION ALL SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING (NOT (SUM(CASE COUNT(rt0.c0)  WHEN MAX('2101901811') THEN rt0.c0 ELSE MIN(GROUP_CONCAT(AVG(MIN(rt0.c1)))) END))) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING ((SUM(CASE COUNT(rt0.c0)  WHEN MAX('2101901811') THEN rt0.c0 ELSE MIN(GROUP_CONCAT(AVG(MIN(rt0.c1)))) END)) ISNULL);
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE ((((rt0.c1))>((rt0.c2))) COLLATE NOCASE) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT ((((rt0.c1))>((rt0.c2))) COLLATE NOCASE))) UNION ALL SELECT ALL * FROM rt0 WHERE ((((((rt0.c1))>((rt0.c2))) COLLATE NOCASE) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((MIN('-1050645860', rt0.c2))>>((rt0.c1 IN (rt0.c0, rt0.c1))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((MIN('-1050645860', rt0.c2))>>((rt0.c1 IN (rt0.c0, rt0.c1))))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((MIN('-1050645860', rt0.c2))>>((rt0.c1 IN (rt0.c0, rt0.c1))))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 WHERE ((rt0.c0 IN ())) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM rt0 WHERE ((NOT ((rt0.c0 IN ())))) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM rt0 WHERE ((((rt0.c0 IN ())) ISNULL)) GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING GROUP_CONCAT((rt0.c0 IN ())) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING (NOT (GROUP_CONCAT((rt0.c0 IN ())))) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING ((GROUP_CONCAT((rt0.c0 IN ()))) ISNULL);
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING GROUP_CONCAT((rt0.c0 IN ())) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING (NOT (GROUP_CONCAT((rt0.c0 IN ())))) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING ((GROUP_CONCAT((rt0.c0 IN ()))) ISNULL);
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT rt0.c1, rt0.c2 FROM rt0;
SELECT rt0.c1, rt0.c2 FROM rt0 WHERE (((((((rt0.c0)>>(rt0.c1)))OR(((rt0.c2)|(rt0.c2)))))OR(((((rt0.c1)AND('')))AND(rt0.c0))))) UNION ALL SELECT ALL rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (((((((rt0.c0)>>(rt0.c1)))OR(((rt0.c2)|(rt0.c2)))))OR(((((rt0.c1)AND('')))AND(rt0.c0))))))) UNION ALL SELECT rt0.c1, rt0.c2 FROM rt0 WHERE (((((((((rt0.c0)>>(rt0.c1)))OR(((rt0.c2)|(rt0.c2)))))OR(((((rt0.c1)AND('')))AND(rt0.c0))))) ISNULL));
SELECT rt0.c1, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((- (((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c0))))) UNION SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT ((- (((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c0))))))) UNION SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((((- (((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c0))))) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE (CAST(((rt0.c0) IS FALSE) AS INTEGER)) GROUP BY rt0.c2, rt0.c0, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (CAST(((rt0.c0) IS FALSE) AS INTEGER)))) GROUP BY rt0.c2, rt0.c0, rt0.c1 UNION SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE (((CAST(((rt0.c0) IS FALSE) AS INTEGER)) ISNULL)) GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING ((((MIN(GROUP_CONCAT(COUNT(rt0.c0))))||(rt0.c2)))<>(SUM(GROUP_CONCAT(GROUP_CONCAT(rt0.c2))))) UNION ALL SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING (NOT (((((MIN(GROUP_CONCAT(COUNT(rt0.c0))))||(rt0.c2)))!=(SUM(GROUP_CONCAT(GROUP_CONCAT(rt0.c2))))))) UNION ALL SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING ((((((MIN(GROUP_CONCAT(COUNT(rt0.c0))))||(rt0.c2)))!=(SUM(GROUP_CONCAT(GROUP_CONCAT(rt0.c2)))))) ISNULL);
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE (NULLIF(DISTINCT CAST(rt0.c1 AS INTEGER), NULL)) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (NULLIF(DISTINCT CAST(rt0.c1 AS INTEGER), NULL)))) UNION ALL SELECT * FROM rt0 WHERE (((NULLIF(DISTINCT CAST(rt0.c1 AS INTEGER), NULL)) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((((rt0.c0 COLLATE RTRIM))<=((((rt0.c0)GLOB(rt0.c2)))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((((rt0.c0 COLLATE RTRIM))<=((((rt0.c0)GLOB(rt0.c2)))))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((((rt0.c0 COLLATE RTRIM))<=((((rt0.c0)GLOB(rt0.c2)))))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE (((((((((((rt0.c2)OR(rt0.c0)))OR(rt0.c0)))OR(rt0.c2)))OR(rt0.c2))) IS TRUE)) GROUP BY rt0.c1, rt0.c2, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (((((((((((rt0.c2)OR(rt0.c0)))OR(rt0.c0)))OR(rt0.c2)))OR(rt0.c2))) IS TRUE)))) GROUP BY rt0.c1, rt0.c2, rt0.c0 UNION SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE (((((((((((((rt0.c2)OR(rt0.c0)))OR(rt0.c0)))OR(rt0.c2)))OR(rt0.c2))) IS TRUE)) ISNULL)) GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT MAX(CAST(((x'') NOT BETWEEN (rt0.c1) AND (rt0.c2)) AS BLOB)) FROM rt0 ORDER BY ((((((rt0.c0)AND('1694290646')))OR(rt0.c2))) NOT BETWEEN (((rt0.c0) NOT NULL)) AND (((rt0.c0)/(rt0.c2)))) ASC  NULLS LAST, ((CAST(rt0.c0 AS BLOB))-(((rt0.c1)LIKE(rt0.c1)))) DESC;
SELECT rt0.c0 FROM rt0;
SELECT ALL rt0.c0 FROM rt0 WHERE (TRIM(rt0.c2) COLLATE NOCASE) UNION ALL SELECT rt0.c0 FROM rt0 WHERE ((NOT (TRIM(rt0.c2) COLLATE NOCASE))) UNION ALL SELECT ALL rt0.c0 FROM rt0 WHERE (((TRIM(rt0.c2) COLLATE NOCASE) ISNULL));
SELECT rt0.c0 FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ('1180216213') UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ('1180216213'))) UNION SELECT DISTINCT * FROM rt0 WHERE ((('1180216213') ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 WHERE (json_patch(x'', ((rt0.c2)GLOB(rt0.c2)))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0 WHERE ((NOT (json_patch(x'', ((rt0.c2)GLOB(rt0.c2)))))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0 WHERE (((json_patch(x'', ((rt0.c2)GLOB(rt0.c2)))) ISNULL)) GROUP BY rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING ((((((TOTAL(TOTAL(GROUP_CONCAT(rt0.c1))))OR(COUNT(GROUP_CONCAT(MAX(rt0.c0))))))OR(rt0.c0)))IS NOT(((rt0.c2) IS TRUE))) UNION ALL SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING (NOT (((((((TOTAL(TOTAL(GROUP_CONCAT(rt0.c1))))OR(COUNT(GROUP_CONCAT(MAX(rt0.c0))))))OR(rt0.c0)))IS NOT(((rt0.c2) IS TRUE))))) UNION ALL SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING ((((((((TOTAL(TOTAL(GROUP_CONCAT(rt0.c1))))OR(COUNT(GROUP_CONCAT(MAX(rt0.c0))))))OR(rt0.c0)))IS NOT(((rt0.c2) IS TRUE)))) ISNULL);
SELECT ALL * FROM rt0;
SELECT * FROM rt0 WHERE ((((rt0.c1))<=(('')))) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT ((((rt0.c1))<=(('')))))) UNION ALL SELECT * FROM rt0 WHERE ((((((rt0.c1))<=(('')))) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((((rt0.c2 IN ()))%(((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((((rt0.c2 IN ()))%(((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0))))))) UNION SELECT DISTINCT * FROM rt0 NOT INDEXED WHERE ((((((rt0.c2 IN ()))%(((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0))))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 WHERE (((((rt0.c1)/(rt0.c1))) NOT NULL)) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM rt0 WHERE ((NOT (((((rt0.c1)/(rt0.c1))) NOT NULL)))) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM rt0 WHERE (((((((rt0.c1)/(rt0.c1))) NOT NULL)) ISNULL)) GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING (TOTAL(rt0.c1) IN ()) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING (NOT ((TOTAL(rt0.c1) IN ()))) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING (((TOTAL(rt0.c1) IN ())) ISNULL);
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING (TOTAL(rt0.c1) IN ()) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING (NOT ((TOTAL(rt0.c1) IN ()))) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING (((TOTAL(rt0.c1) IN ())) ISNULL);
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE (NULLIF(((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0)), CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN NULL THEN rt0.c2 END)) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (NULLIF(((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0)), CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN NULL THEN rt0.c2 END)))) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 NOT INDEXED WHERE (((NULLIF(((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0)), CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN NULL THEN rt0.c2 END)) ISNULL));
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c1 FROM rt0 WHERE ((~ ((rt0.c1 IN ())))) UNION SELECT DISTINCT rt0.c1 FROM rt0 WHERE ((NOT ((~ ((rt0.c1 IN ())))))) UNION SELECT DISTINCT rt0.c1 FROM rt0 WHERE ((((~ ((rt0.c1 IN ())))) ISNULL));
SELECT DISTINCT rt0.c1 FROM rt0;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE (CAST(rt0.c0 AS NUMERIC)) GROUP BY rt0.c0, rt0.c2, rt0.c1 UNION SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (CAST(rt0.c0 AS NUMERIC)))) GROUP BY rt0.c0, rt0.c2, rt0.c1 UNION SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE (((CAST(rt0.c0 AS NUMERIC)) ISNULL)) GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING MAX(SUM(rt0.c0)) COLLATE RTRIM UNION ALL SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT (MAX(SUM(rt0.c0)) COLLATE RTRIM)) UNION ALL SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((MAX(SUM(rt0.c0)) COLLATE RTRIM) ISNULL);
SELECT ALL rt0.c1, rt0.c0 FROM rt0;
SELECT rt0.c1, rt0.c0 FROM rt0 WHERE (HEX(((rt0.c2)AND(rt0.c0)))) UNION ALL SELECT ALL rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (HEX(((rt0.c2)AND(rt0.c0)))))) UNION ALL SELECT ALL rt0.c1, rt0.c0 FROM rt0 WHERE (((HEX(((rt0.c2)AND(rt0.c0)))) ISNULL));
SELECT ALL rt0.c1, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c1 FROM rt0 WHERE (CASE (rt0.c0 IN (rt0.c2))  WHEN CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 END THEN (~ (rt0.c1)) END) UNION SELECT DISTINCT rt0.c1 FROM rt0 WHERE ((NOT (CASE (rt0.c0 IN (rt0.c2))  WHEN CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 END THEN (~ (rt0.c1)) END))) UNION SELECT DISTINCT rt0.c1 FROM rt0 WHERE (((CASE (rt0.c0 IN (rt0.c2))  WHEN CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 END THEN (~ (rt0.c1)) END) ISNULL));
SELECT DISTINCT rt0.c1 FROM rt0;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 WHERE (((CAST(NULL AS INTEGER))+(CAST(rt0.c0 AS INTEGER)))) GROUP BY rt0.c2, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (((CAST(NULL AS INTEGER))+(CAST(rt0.c0 AS INTEGER)))))) GROUP BY rt0.c2, rt0.c1 UNION SELECT rt0.c2, rt0.c1 FROM rt0 WHERE (((((CAST(NULL AS INTEGER))+(CAST(rt0.c0 AS INTEGER)))) ISNULL)) GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING ((COUNT(rt0.c2))*(TOTAL(MAX(0Xffffffffa88e513a)))) UNION ALL SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING (NOT (((COUNT(rt0.c2))*(TOTAL(MAX(0Xffffffffa88e513a)))))) UNION ALL SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING ((((COUNT(rt0.c2))*(TOTAL(MAX(0Xffffffffa88e513a))))) ISNULL);
SELECT rt0.c2, rt0.c0 FROM rt0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 WHERE ('958464478') UNION ALL SELECT rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT ('958464478'))) UNION ALL SELECT rt0.c2, rt0.c0 FROM rt0 WHERE ((('958464478') ISNULL));
SELECT rt0.c2, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (CASE WHEN CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c1 END THEN ((rt0.c2) NOTNULL) END) UNION SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (CASE WHEN CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c1 END THEN ((rt0.c2) NOTNULL) END))) UNION SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (((CASE WHEN CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c1 END THEN ((rt0.c2) NOTNULL) END) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0;
SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM rt0 WHERE (CHANGES()) GROUP BY rt0.c2, rt0.c0 UNION SELECT rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (CHANGES()))) GROUP BY rt0.c2, rt0.c0 UNION SELECT rt0.c2, rt0.c0 FROM rt0 WHERE (((CHANGES()) ISNULL)) GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING CASE WHEN ((rt0.c0)<<(rt0.c2)) THEN COUNT(rt0.c2) WHEN SQLITE_SOURCE_ID() THEN SUM(rt0.c0) WHEN SUM(SUM(COUNT(*))) THEN MAX(GROUP_CONCAT(rt0.c0)) END UNION ALL SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT (CASE WHEN ((rt0.c0)<<(rt0.c2)) THEN COUNT(rt0.c2) WHEN SQLITE_SOURCE_ID() THEN SUM(rt0.c0) WHEN SUM(SUM(COUNT(*))) THEN MAX(GROUP_CONCAT(rt0.c0)) END)) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((CASE WHEN ((rt0.c0)<<(rt0.c2)) THEN COUNT(rt0.c2) WHEN SQLITE_SOURCE_ID() THEN SUM(rt0.c0) WHEN SUM(SUM(COUNT(*))) THEN MAX(GROUP_CONCAT(rt0.c0)) END) ISNULL);
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE (0.6277855179999735 COLLATE NOCASE) UNION ALL SELECT * FROM rt0 WHERE ((NOT (0.6277855179999735 COLLATE NOCASE))) UNION ALL SELECT * FROM rt0 WHERE (((0.6277855179999735 COLLATE NOCASE) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c0 FROM rt0 WHERE (((((((((CAST(rt0.c2 AS BLOB))AND((rt0.c2 IN ()))))AND((rt0.c2 IN ()))))OR((rt0.c2 IN ()))))OR(rt0.c2))) UNION SELECT DISTINCT rt0.c0 FROM rt0 WHERE ((NOT (((((((((CAST(rt0.c2 AS BLOB))AND((rt0.c2 IN ()))))AND((rt0.c2 IN ()))))OR((rt0.c2 IN ()))))OR(rt0.c2))))) UNION SELECT DISTINCT rt0.c0 FROM rt0 WHERE (((((((((((CAST(rt0.c2 AS BLOB))AND((rt0.c2 IN ()))))AND((rt0.c2 IN ()))))OR((rt0.c2 IN ()))))OR(rt0.c2))) ISNULL));
SELECT DISTINCT rt0.c0 FROM rt0;
SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT rt0.c1, rt0.c0 FROM rt0 WHERE ((((NULL, CAST(rt0.c1 AS BLOB), ((rt0.c2)-(rt0.c2))))>(((NOT (rt0.c1)), rt0.c2, ((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c0)))))) GROUP BY rt0.c1, rt0.c0 UNION SELECT rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT ((((NULL, CAST(rt0.c1 AS BLOB), ((rt0.c2)-(rt0.c2))))>(((NOT (rt0.c1)), rt0.c2, ((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c0)))))))) GROUP BY rt0.c1, rt0.c0 UNION SELECT rt0.c1, rt0.c0 FROM rt0 WHERE ((((((NULL, CAST(rt0.c1 AS BLOB), ((rt0.c2)-(rt0.c2))))>(((NOT (rt0.c1)), rt0.c2, ((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c0)))))) ISNULL)) GROUP BY rt0.c1, rt0.c0;
SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING '*' UNION ALL SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING (NOT ('*')) UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING (('*') ISNULL);
SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING '*' UNION ALL SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING (NOT ('*')) UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING (('*') ISNULL);
SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE ((((rt0.c0, '1373801189', rt0.c0)) BETWEEN ((((rt0.c1)||(rt0.c2)), ((rt0.c1) NOT BETWEEN (rt0.c2) AND (x'bd77')), ((rt0.c2) IS FALSE))) AND ((rt0.c1, (- (rt0.c0)), CASE WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN 0Xffffffffe83e50c0 WHEN NULL THEN rt0.c2 END)))) UNION ALL SELECT * FROM rt0 WHERE ((NOT ((((rt0.c0, '1373801189', rt0.c0)) BETWEEN ((((rt0.c1)||(rt0.c2)), ((rt0.c1) NOT BETWEEN (rt0.c2) AND (x'bd77')), ((rt0.c2) IS FALSE))) AND ((rt0.c1, (- (rt0.c0)), CASE WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN 0Xffffffffe83e50c0 WHEN NULL THEN rt0.c2 END)))))) UNION ALL SELECT ALL * FROM rt0 WHERE ((((((rt0.c0, '1373801189', rt0.c0)) BETWEEN ((((rt0.c1)||(rt0.c2)), ((rt0.c1) NOT BETWEEN (rt0.c2) AND (x'bd77')), ((rt0.c2) IS FALSE))) AND ((rt0.c1, (- (rt0.c0)), CASE WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN 0Xffffffffe83e50c0 WHEN NULL THEN rt0.c2 END)))) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE (((SQLITE_COMPILEOPTION_USED(rt0.c1))>((- (rt0.c1))))) UNION SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (((SQLITE_COMPILEOPTION_USED(rt0.c1))>((- (rt0.c1))))))) UNION SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE (((((SQLITE_COMPILEOPTION_USED(rt0.c1))>((- (rt0.c1))))) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1 FROM rt0;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 WHERE ((((rt0.c2 IN ())) NOT BETWEEN (rt0.c0) AND (SQLITE_VERSION()))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0 WHERE ((NOT ((((rt0.c2 IN ())) NOT BETWEEN (rt0.c0) AND (SQLITE_VERSION()))))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0 WHERE ((((((rt0.c2 IN ())) NOT BETWEEN (rt0.c0) AND (SQLITE_VERSION()))) ISNULL)) GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING rt0.c1 UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT (rt0.c1)) UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING ((rt0.c1) ISNULL);
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING rt0.c1 UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT (rt0.c1)) UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING ((rt0.c1) ISNULL);
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT TOTAL(CAST(rt0.c1 AS REAL) COLLATE RTRIM) FROM rt0;
SELECT ALL * FROM rt0;
SELECT * FROM rt0 WHERE ((+ ('1625662478'))) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT ((+ ('1625662478'))))) UNION ALL SELECT ALL * FROM rt0 WHERE ((((+ ('1625662478'))) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c0 FROM rt0 WHERE (((HEX(''))==(json_remove(rt0.c1, rt0.c0)))) UNION SELECT DISTINCT rt0.c0 FROM rt0 WHERE ((NOT (((HEX(''))=(json_remove(rt0.c1, rt0.c0)))))) UNION SELECT DISTINCT rt0.c0 FROM rt0 WHERE (((((HEX(''))=(json_remove(rt0.c1, rt0.c0)))) ISNULL));
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((~ ((+ (rt0.c2))))) GROUP BY rt0.c2, rt0.c1, rt0.c0 UNION SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT ((~ ((+ (rt0.c2))))))) GROUP BY rt0.c2, rt0.c1, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((((~ ((+ (rt0.c2))))) ISNULL)) GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING ((SUM(rt0.c2))GLOB(((AVG(rt0.c2)) NOT BETWEEN (rt0.c2) AND (TOTAL(x'025ffe50'))))) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING (NOT (((SUM(rt0.c2))GLOB(((AVG(rt0.c2)) NOT BETWEEN (rt0.c2) AND (TOTAL(x'025ffe50'))))))) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING ((((SUM(rt0.c2))GLOB(((AVG(rt0.c2)) NOT BETWEEN (rt0.c2) AND (TOTAL(x'025ffe50')))))) ISNULL);
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING ((SUM(rt0.c2))GLOB(((AVG(rt0.c2)) NOT BETWEEN (rt0.c2) AND (TOTAL(x'025ffe50'))))) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING (NOT (((SUM(rt0.c2))GLOB(((AVG(rt0.c2)) NOT BETWEEN (rt0.c2) AND (TOTAL(x'025ffe50'))))))) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING ((((SUM(rt0.c2))GLOB(((AVG(rt0.c2)) NOT BETWEEN (rt0.c2) AND (TOTAL(x'025ffe50')))))) ISNULL);
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c1 FROM rt0;
SELECT ALL rt0.c1 FROM rt0 WHERE (-4.97914357E8) UNION ALL SELECT rt0.c1 FROM rt0 WHERE ((NOT (-4.97914357E8))) UNION ALL SELECT rt0.c1 FROM rt0 WHERE (((-4.97914357E8) ISNULL));
SELECT rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE (CASE rt0.c0 COLLATE BINARY  WHEN CASE rt0.c1  WHEN NULL THEN rt0.c1 ELSE rt0.c0 END THEN ((rt0.c1)GLOB(rt0.c1)) ELSE ((x'4dda')&(rt0.c0)) END) UNION SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (CASE rt0.c0 COLLATE BINARY  WHEN CASE rt0.c1  WHEN NULL THEN rt0.c1 ELSE rt0.c0 END THEN ((rt0.c1)GLOB(rt0.c1)) ELSE ((x'4dda')&(rt0.c0)) END))) UNION SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE (((CASE rt0.c0 COLLATE BINARY  WHEN CASE rt0.c1  WHEN NULL THEN rt0.c1 ELSE rt0.c0 END THEN ((rt0.c1)GLOB(rt0.c1)) ELSE ((x'4dda')&(rt0.c0)) END) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0 FROM rt0;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE (rt0.c1) GROUP BY rt0.c0, rt0.c2, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (rt0.c1))) GROUP BY rt0.c0, rt0.c2, rt0.c1 UNION SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE (((rt0.c1) ISNULL)) GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING IFNULL(DISTINCT COUNT(TOTAL(rt0.c2)), rt0.c1) COLLATE NOCASE UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT (IFNULL(DISTINCT COUNT(TOTAL(rt0.c2)), rt0.c1) COLLATE NOCASE)) UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING ((IFNULL(DISTINCT COUNT(TOTAL(rt0.c2)), rt0.c1) COLLATE NOCASE) ISNULL);
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((((rt0.c0)) BETWEEN (((((0.7523721477234147, rt0.c2, rt0.c2)) BETWEEN ((rt0.c2, rt0.c1, rt0.c1)) AND ((rt0.c1, rt0.c2, rt0.c0))))) AND ((LIKE(rt0.c2, rt0.c2))))) UNION ALL SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT ((((rt0.c0)) BETWEEN (((((0.7523721477234147, rt0.c2, rt0.c2)) BETWEEN ((rt0.c2, rt0.c1, rt0.c1)) AND ((rt0.c1, rt0.c2, rt0.c0))))) AND ((LIKE(rt0.c2, rt0.c2))))))) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((((((rt0.c0)) BETWEEN (((((0.7523721477234147, rt0.c2, rt0.c2)) BETWEEN ((rt0.c2, rt0.c1, rt0.c1)) AND ((rt0.c1, rt0.c2, rt0.c0))))) AND ((LIKE(rt0.c2, rt0.c2))))) ISNULL));
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c1 FROM rt0 WHERE (rt0.c0) UNION SELECT DISTINCT rt0.c1 FROM rt0 WHERE ((NOT (rt0.c0))) UNION SELECT DISTINCT rt0.c1 FROM rt0 WHERE (((rt0.c0) ISNULL));
SELECT DISTINCT rt0.c1 FROM rt0;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 WHERE ((((((rt0.c1, rt0.c0, rt0.c2))<((rt0.c0, rt0.c1, rt0.c1))))/(((((((((rt0.c2)OR(rt0.c2)))OR(rt0.c0)))AND(rt0.c1)))AND(rt0.c1))))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0 WHERE ((NOT ((((((rt0.c1, rt0.c0, rt0.c2))<((rt0.c0, rt0.c1, rt0.c1))))/(((((((((rt0.c2)OR(rt0.c2)))OR(rt0.c0)))AND(rt0.c1)))AND(rt0.c1))))))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0 WHERE ((((((((rt0.c1, rt0.c0, rt0.c2))<((rt0.c0, rt0.c1, rt0.c1))))/(((((((((rt0.c2)OR(rt0.c2)))OR(rt0.c0)))AND(rt0.c1)))AND(rt0.c1))))) ISNULL)) GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING NULL UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT (NULL)) UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING ((NULL) ISNULL);
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING NULL UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT (NULL)) UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING ((NULL) ISNULL);
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE ((+ ((+ (rt0.c2))))) UNION ALL SELECT * FROM rt0 WHERE ((NOT ((+ ((+ (rt0.c2))))))) UNION ALL SELECT * FROM rt0 WHERE ((((+ ((+ (rt0.c2))))) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c2 FROM rt0 WHERE ((NOT ((rt0.c0 IN ())))) UNION SELECT DISTINCT rt0.c2 FROM rt0 WHERE ((NOT ((NOT ((rt0.c0 IN ())))))) UNION SELECT DISTINCT rt0.c2 FROM rt0 WHERE ((((NOT ((rt0.c0 IN ())))) ISNULL));
SELECT DISTINCT rt0.c2 FROM rt0;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE (UNLIKELY(HEX('933700856'))) GROUP BY rt0.c2, rt0.c1, rt0.c0 UNION SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (UNLIKELY(HEX('933700856'))))) GROUP BY rt0.c2, rt0.c1, rt0.c0 UNION SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE (((UNLIKELY(HEX('933700856'))) ISNULL)) GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING rt0.c0 UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT (rt0.c0)) UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING ((rt0.c0) ISNULL);
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING rt0.c0 UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT (rt0.c0)) UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING ((rt0.c0) ISNULL);
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1, rt0.c2 FROM rt0;
SELECT rt0.c1, rt0.c2 FROM rt0 WHERE (((((rt0.c0)IS NOT(rt0.c0))) NOT BETWEEN (((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1))) AND (rt0.c0 COLLATE NOCASE))) UNION ALL SELECT rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (((((rt0.c0)IS NOT(rt0.c0))) NOT BETWEEN (((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1))) AND (rt0.c0 COLLATE NOCASE))))) UNION ALL SELECT rt0.c1, rt0.c2 FROM rt0 WHERE (((((((rt0.c0)IS NOT(rt0.c0))) NOT BETWEEN (((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1))) AND (rt0.c0 COLLATE NOCASE))) ISNULL));
SELECT ALL rt0.c1, rt0.c2 FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((rt0.c2)<(rt0.c0)) COLLATE RTRIM) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((rt0.c2)<(rt0.c0)) COLLATE RTRIM))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((rt0.c2)<(rt0.c0)) COLLATE RTRIM) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ('1978369267') GROUP BY rt0.c2, rt0.c0, rt0.c1 UNION SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT ('1978369267'))) GROUP BY rt0.c2, rt0.c0, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((('1978369267') ISNULL)) GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING GROUP_CONCAT(((AVG(COUNT(COUNT(GROUP_CONCAT(COUNT(MAX(rt0.c0)))))))%(rt0.c0))) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING (NOT (GROUP_CONCAT(((AVG(COUNT(COUNT(GROUP_CONCAT(COUNT(MAX(rt0.c0)))))))%(rt0.c0))))) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING ((GROUP_CONCAT(((AVG(COUNT(COUNT(GROUP_CONCAT(COUNT(MAX(rt0.c0)))))))%(rt0.c0)))) ISNULL);
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE (rt0.c1) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (rt0.c1))) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE (((rt0.c1) ISNULL));
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c0 FROM rt0 WHERE (((COALESCE(rt0.c1, rt0.c0)) NOT NULL)) UNION SELECT DISTINCT rt0.c0 FROM rt0 WHERE ((NOT (((COALESCE(rt0.c1, rt0.c0)) NOT NULL)))) UNION SELECT DISTINCT rt0.c0 FROM rt0 WHERE (((((COALESCE(rt0.c1, rt0.c0)) NOT NULL)) ISNULL));
SELECT DISTINCT rt0.c0 FROM rt0;
SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 WHERE (((json_array_length(rt0.c1, rt0.c1)) NOT BETWEEN (((rt0.c1)>(rt0.c2))) AND (((rt0.c2)-(rt0.c2))))) GROUP BY rt0.c1, rt0.c2 UNION SELECT rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (((json_array_length(rt0.c1, rt0.c1)) NOT BETWEEN (((rt0.c1)>(rt0.c2))) AND (((rt0.c2)-(rt0.c2))))))) GROUP BY rt0.c1, rt0.c2 UNION SELECT rt0.c1, rt0.c2 FROM rt0 WHERE (((((json_array_length(rt0.c1, rt0.c1)) NOT BETWEEN (((rt0.c1)>(rt0.c2))) AND (((rt0.c2)-(rt0.c2))))) ISNULL)) GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING TOTAL(MAX(rt0.c1)) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING (NOT (TOTAL(MAX(rt0.c1)))) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING ((TOTAL(MAX(rt0.c1))) ISNULL);
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (rt0.c0)) COLLATE NOCASE COLLATE BINARY) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT ((NOT (rt0.c0)) COLLATE NOCASE COLLATE BINARY))) UNION ALL SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((((NOT (rt0.c0)) COLLATE NOCASE COLLATE BINARY) ISNULL));
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c0 FROM rt0 WHERE (x'') UNION SELECT DISTINCT rt0.c0 FROM rt0 WHERE ((NOT (x''))) UNION SELECT DISTINCT rt0.c0 FROM rt0 WHERE (((x'') ISNULL));
SELECT DISTINCT rt0.c0 FROM rt0;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((((rt0.c1)) NOT BETWEEN ((0.6122272193474689)) AND (((rt0.c2 IN ()))))) GROUP BY rt0.c0, rt0.c2, rt0.c1 UNION SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT ((((rt0.c1)) NOT BETWEEN ((0.6122272193474689)) AND (((rt0.c2 IN ()))))))) GROUP BY rt0.c0, rt0.c2, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((((((rt0.c1)) NOT BETWEEN ((0.6122272193474689)) AND (((rt0.c2 IN ()))))) ISNULL)) GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING AVG(TOTAL(SUM(x'8159'))) UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING (NOT (AVG(TOTAL(SUM(x'8159'))))) UNION ALL SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING ((AVG(TOTAL(SUM(x'8159')))) ISNULL);
SELECT MAX((NOT (((rt0.c2)-(rt0.c2))))) FROM rt0 ORDER BY (((((((rt0.c0)AND(0.7172518274267573)))AND(rt0.c1))))<=((((rt0.c2) NOTNULL)))), NULL DESC  NULLS FIRST;
SELECT rt0.c0, rt0.c2 FROM rt0;
SELECT rt0.c0, rt0.c2 FROM rt0 WHERE (CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END COLLATE NOCASE) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END COLLATE NOCASE))) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt0 WHERE (((CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END COLLATE NOCASE) ISNULL));
SELECT rt0.c0, rt0.c2 FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((+ (CAST(rt0.c1 AS TEXT)))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((+ (CAST(rt0.c1 AS TEXT)))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((+ (CAST(rt0.c1 AS TEXT)))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 WHERE (115603300) GROUP BY rt0.c2, rt0.c0 UNION SELECT rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (115603300))) GROUP BY rt0.c2, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c0 FROM rt0 WHERE (((115603300) ISNULL)) GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING load_extension(NULL) UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT (load_extension(NULL))) UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING ((load_extension(NULL)) ISNULL);
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE (CASE rt0.c2  WHEN (rt0.c2 IN ()) THEN ((rt0.c1) NOT NULL) END) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (CASE rt0.c2  WHEN (rt0.c2 IN ()) THEN ((rt0.c1) NOT NULL) END))) UNION ALL SELECT ALL * FROM rt0 WHERE (((CASE rt0.c2  WHEN (rt0.c2 IN ()) THEN ((rt0.c1) NOT NULL) END) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0 WHERE (((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c1)) COLLATE BINARY) UNION SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c1)) COLLATE BINARY))) UNION SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0 WHERE (((((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c1)) COLLATE BINARY) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0;
SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM rt0 WHERE ((('432950701')|(((rt0.c0)&(rt0.c2))))) GROUP BY rt0.c2, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT ((('432950701')|(((rt0.c0)&(rt0.c2))))))) GROUP BY rt0.c2, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c0 FROM rt0 WHERE ((((('432950701')|(((rt0.c0)&(rt0.c2))))) ISNULL)) GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING rt0.c2 UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING (NOT (rt0.c2)) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING ((rt0.c2) ISNULL);
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING rt0.c2 UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING (NOT (rt0.c2)) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING ((rt0.c2) ISNULL);
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE (((((((((((((((rt0.c2)OR(rt0.c1)))AND(rt0.c2)))AND(rt0.c2)))OR(rt0.c1)))OR(rt0.c2)))OR(rt0.c2)))<<(rt0.c1 COLLATE NOCASE))) UNION ALL SELECT * FROM rt0 WHERE ((NOT (((((((((((((((rt0.c2)OR(rt0.c1)))AND(rt0.c2)))AND(rt0.c2)))OR(rt0.c1)))OR(rt0.c2)))OR(rt0.c2)))<<(rt0.c1 COLLATE NOCASE))))) UNION ALL SELECT ALL * FROM rt0 WHERE (((((((((((((((((rt0.c2)OR(rt0.c1)))AND(rt0.c2)))AND(rt0.c2)))OR(rt0.c1)))OR(rt0.c2)))OR(rt0.c2)))<<(rt0.c1 COLLATE NOCASE))) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (CASE WHEN x'90c7' THEN (((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((NULL))) ELSE rt0.c0 END) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (CASE WHEN x'90c7' THEN (((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((NULL))) ELSE rt0.c0 END))) UNION SELECT DISTINCT * FROM rt0 WHERE (((CASE WHEN x'90c7' THEN (((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((NULL))) ELSE rt0.c0 END) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 WHERE (((((rt0.c0) IS TRUE))<=((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((x'')))))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0 WHERE ((NOT (((((rt0.c0) IS TRUE))<=((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((x'')))))))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0 WHERE (((((((rt0.c0) IS TRUE))<=((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((x'')))))) ISNULL)) GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING LIKELIHOOD(MIN(NULL), 0.16898531459366206) UNION ALL SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT (LIKELIHOOD(MIN(NULL), 0.16898531459366206))) UNION ALL SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((LIKELIHOOD(MIN(NULL), 0.16898531459366206)) ISNULL);
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING LIKELIHOOD(MIN(NULL), 0.16898531459366206) UNION ALL SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT (LIKELIHOOD(MIN(NULL), 0.16898531459366206))) UNION ALL SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((LIKELIHOOD(MIN(NULL), 0.16898531459366206)) ISNULL);
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2, rt0.c0 FROM rt0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 WHERE (((((rt0.c2) NOT NULL)) NOT BETWEEN ('-294918578') AND (UNLIKELY(x'')))) UNION ALL SELECT rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (((((rt0.c2) NOT NULL)) NOT BETWEEN ('-294918578') AND (UNLIKELY(x'')))))) UNION ALL SELECT rt0.c2, rt0.c0 FROM rt0 WHERE (((((((rt0.c2) NOT NULL)) NOT BETWEEN ('-294918578') AND (UNLIKELY(x'')))) ISNULL));
SELECT ALL rt0.c2, rt0.c0 FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((+ ((+ (rt0.c0))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((+ ((+ (rt0.c0))))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((+ ((+ (rt0.c0))))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE (((rt0.c0 COLLATE RTRIM) IS TRUE)) GROUP BY rt0.c1, rt0.c2, rt0.c0 UNION SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (((rt0.c0 COLLATE RTRIM) IS TRUE)))) GROUP BY rt0.c1, rt0.c2, rt0.c0 UNION SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE (((((rt0.c0 COLLATE RTRIM) IS TRUE)) ISNULL)) GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING TOTAL(TOTAL(COUNT(*))) UNION ALL SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (NOT (TOTAL(TOTAL(COUNT(*))))) UNION ALL SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING ((TOTAL(TOTAL(COUNT(*)))) ISNULL);
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE (((((((((((rt0.c2)OR(rt0.c0)))OR(rt0.c0)))OR(0.6187074225570346)))AND(rt0.c0)))/(((rt0.c2) NOT BETWEEN (rt0.c2) AND ('U('))))) UNION ALL SELECT * FROM rt0 WHERE ((NOT (((((((((((rt0.c2)OR(rt0.c0)))OR(rt0.c0)))OR(0.6187074225570346)))AND(rt0.c0)))/(((rt0.c2) NOT BETWEEN (rt0.c2) AND ('U('))))))) UNION ALL SELECT ALL * FROM rt0 WHERE (((((((((((((rt0.c2)OR(rt0.c0)))OR(rt0.c0)))OR(0.6187074225570346)))AND(rt0.c0)))/(((rt0.c2) NOT BETWEEN (rt0.c2) AND ('U('))))) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE (((rt0.c0)OR((rt0.c2 IN ('墺', rt0.c1))))) UNION SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (((rt0.c0)OR((rt0.c2 IN ('墺', rt0.c1))))))) UNION SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE (((((rt0.c0)OR((rt0.c2 IN ('墺', rt0.c1))))) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0 FROM rt0;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 WHERE ((((+ (x''))) BETWEEN (((rt0.c0)LIKE(rt0.c1))) AND (CASE rt0.c2  WHEN x'' THEN rt0.c1 END))) GROUP BY rt0.c0, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT ((((+ (x''))) BETWEEN (((rt0.c0)LIKE(rt0.c1))) AND (CASE rt0.c2  WHEN x'' THEN rt0.c1 END))))) GROUP BY rt0.c0, rt0.c2 UNION SELECT rt0.c0, rt0.c2 FROM rt0 WHERE ((((((+ (x''))) BETWEEN (((rt0.c0)LIKE(rt0.c1))) AND (CASE rt0.c2  WHEN x'' THEN rt0.c1 END))) ISNULL)) GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING (((rt0.c0)||(rt0.c0)) IN ()) UNION ALL SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING (NOT ((((rt0.c0)||(rt0.c0)) IN ()))) UNION ALL SELECT ALL rt0.c1, rt0.c2 FROM rt0 NOT INDEXED GROUP BY rt0.c1, rt0.c2 HAVING (((((rt0.c0)||(rt0.c0)) IN ())) ISNULL);
SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING (((rt0.c0)||(rt0.c0)) IN ()) UNION ALL SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING (NOT ((((rt0.c0)||(rt0.c0)) IN ()))) UNION ALL SELECT ALL rt0.c1, rt0.c2 FROM rt0 NOT INDEXED GROUP BY rt0.c1, rt0.c2 HAVING (((((rt0.c0)||(rt0.c0)) IN ())) ISNULL);
SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT ALL * FROM rt0;
SELECT * FROM rt0 WHERE (UNLIKELY(rt0.c2)) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (UNLIKELY(rt0.c2)))) UNION ALL SELECT * FROM rt0 WHERE (((UNLIKELY(rt0.c2)) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((rt0.c0 COLLATE RTRIM) BETWEEN (((((((((((((rt0.c1)OR(rt0.c0)))AND(rt0.c0)))AND(rt0.c1)))OR(rt0.c1)))AND(rt0.c1)))AND(rt0.c2))) AND (((((rt0.c0)AND(rt0.c0)))OR(NULL))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((rt0.c0 COLLATE RTRIM) BETWEEN (((((((((((((rt0.c1)OR(rt0.c0)))AND(rt0.c0)))AND(rt0.c1)))OR(rt0.c1)))AND(rt0.c1)))AND(rt0.c2))) AND (((((rt0.c0)AND(rt0.c0)))OR(NULL))))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((rt0.c0 COLLATE RTRIM) BETWEEN (((((((((((((rt0.c1)OR(rt0.c0)))AND(rt0.c0)))AND(rt0.c1)))OR(rt0.c1)))AND(rt0.c1)))AND(rt0.c2))) AND (((((rt0.c0)AND(rt0.c0)))OR(NULL))))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE (CAST('' AS INTEGER)) GROUP BY rt0.c2, rt0.c1, rt0.c0 UNION SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (CAST('' AS INTEGER)))) GROUP BY rt0.c2, rt0.c1, rt0.c0 UNION SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE (((CAST('' AS INTEGER)) ISNULL)) GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING GROUP_CONCAT(TOTAL(rt0.c1)) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING (NOT (GROUP_CONCAT(TOTAL(rt0.c1)))) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING ((GROUP_CONCAT(TOTAL(rt0.c1))) ISNULL);
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE (-2.94918578E8) UNION ALL SELECT * FROM rt0 NOT INDEXED WHERE ((NOT (-2.94918578E8))) UNION ALL SELECT ALL * FROM rt0 WHERE (((-2.94918578E8) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (CAST(CAST(rt0.c0 AS TEXT) AS TEXT)) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (CAST(CAST(rt0.c0 AS TEXT) AS TEXT)))) UNION SELECT DISTINCT * FROM rt0 WHERE (((CAST(CAST(rt0.c0 AS TEXT) AS TEXT)) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE (((((rt0.c1) NOTNULL)) NOTNULL)) GROUP BY rt0.c1, rt0.c2, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (((((rt0.c1) NOTNULL)) NOTNULL)))) GROUP BY rt0.c1, rt0.c2, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE (((((((rt0.c1) NOTNULL)) NOTNULL)) ISNULL)) GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING SUM(MIN(GROUP_CONCAT(rt0.c0))) UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT (SUM(MIN(GROUP_CONCAT(rt0.c0))))) UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING ((SUM(MIN(GROUP_CONCAT(rt0.c0)))) ISNULL);
SELECT rt0.c1 FROM rt0;
SELECT rt0.c1 FROM rt0 WHERE ((NOT (((rt0.c0)-(rt0.c0))))) UNION ALL SELECT ALL rt0.c1 FROM rt0 WHERE ((NOT ((NOT (((rt0.c0)-(rt0.c0))))))) UNION ALL SELECT rt0.c1 FROM rt0 WHERE ((((NOT (((rt0.c0)-(rt0.c0))))) ISNULL));
SELECT rt0.c1 FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (TYPEOF(((rt0.c0) IS FALSE))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (TYPEOF(((rt0.c0) IS FALSE))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((TYPEOF(((rt0.c0) IS FALSE))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE (CASE (- (rt0.c2))  WHEN CAST(rt0.c1 AS REAL) THEN ((rt0.c1)!=(rt0.c2)) ELSE rt0.c2 END) GROUP BY rt0.c2, rt0.c1, rt0.c0 UNION SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (CASE (- (rt0.c2))  WHEN CAST(rt0.c1 AS REAL) THEN ((rt0.c1)!=(rt0.c2)) ELSE rt0.c2 END))) GROUP BY rt0.c2, rt0.c1, rt0.c0 UNION SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE (((CASE (- (rt0.c2))  WHEN CAST(rt0.c1 AS REAL) THEN ((rt0.c1)!=(rt0.c2)) ELSE rt0.c2 END) ISNULL)) GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING MAX(CAST(TOTAL(GROUP_CONCAT(MAX(rt0.c1))) AS BLOB)) UNION ALL SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING (NOT (MAX(CAST(TOTAL(GROUP_CONCAT(MAX(rt0.c1))) AS BLOB)))) UNION ALL SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING ((MAX(CAST(TOTAL(GROUP_CONCAT(MAX(rt0.c1))) AS BLOB))) ISNULL);
SELECT ALL SUM(0.0409814104381897) FROM rt0;
SELECT rt0.c2, rt0.c1 FROM rt0;
SELECT rt0.c2, rt0.c1 FROM rt0 WHERE ((((((rt0.c1 IN (rt0.c1)))AND(TIME(rt0.c2, NULL, -1.05064586E9))))AND(CAST(rt0.c1 AS NUMERIC)))) UNION ALL SELECT rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT ((((((rt0.c1 IN (rt0.c1)))AND(TIME(rt0.c2, NULL, -1.05064586E9))))AND(CAST(rt0.c1 AS NUMERIC)))))) UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM rt0 WHERE ((((((((rt0.c1 IN (rt0.c1)))AND(TIME(rt0.c2, NULL, -1.05064586E9))))AND(CAST(rt0.c1 AS NUMERIC)))) ISNULL));
SELECT rt0.c2, rt0.c1 FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (rt0.c2) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (rt0.c2))) UNION SELECT DISTINCT * FROM rt0 WHERE (((rt0.c2) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 WHERE (((rt0.c1)|(rt0.c2)) COLLATE NOCASE) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0 WHERE ((NOT (((rt0.c1)|(rt0.c2)) COLLATE NOCASE))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0 WHERE (((((rt0.c1)|(rt0.c2)) COLLATE NOCASE) ISNULL)) GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING CAST(((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0)) AS BLOB) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING (NOT (CAST(((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0)) AS BLOB))) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING ((CAST(((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0)) AS BLOB)) ISNULL);
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING CAST(((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0)) AS BLOB) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING (NOT (CAST(((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0)) AS BLOB))) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING ((CAST(((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0)) AS BLOB)) ISNULL);
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c2, rt0.c0 FROM rt0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (rt0.c2)) COLLATE RTRIM) UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT ((NOT (rt0.c2)) COLLATE RTRIM))) UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM rt0 WHERE ((((NOT (rt0.c2)) COLLATE RTRIM) ISNULL));
SELECT rt0.c2, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ('1986167664') UNION SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT ('1986167664'))) UNION SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((('1986167664') ISNULL));
SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 WHERE (((rt0.c0)>=(rt0.c2)) COLLATE NOCASE) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0 WHERE ((NOT (((rt0.c0)>=(rt0.c2)) COLLATE NOCASE))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0 WHERE (((((rt0.c0)>=(rt0.c2)) COLLATE NOCASE) ISNULL)) GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING TOTAL(AVG(MAX(TOTAL(MAX(AVG(rt0.c2)))))) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING (NOT (TOTAL(AVG(MAX(TOTAL(MAX(AVG(rt0.c2)))))))) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING ((TOTAL(AVG(MAX(TOTAL(MAX(AVG(rt0.c2))))))) ISNULL);
SELECT ALL rt0.c1, rt0.c2 FROM rt0;
SELECT rt0.c1, rt0.c2 FROM rt0 WHERE (((((((NULL)<=(rt0.c0)))AND(rt0.c0)))OR(((rt0.c0)GLOB(rt0.c0))))) UNION ALL SELECT ALL rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (((((((NULL)<=(rt0.c0)))AND(rt0.c0)))OR(((rt0.c0)GLOB(rt0.c0))))))) UNION ALL SELECT rt0.c1, rt0.c2 FROM rt0 WHERE (((((((((NULL)<=(rt0.c0)))AND(rt0.c0)))OR(((rt0.c0)GLOB(rt0.c0))))) ISNULL));
SELECT ALL rt0.c1, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0 WHERE (((NULL) BETWEEN (UPPER(rt0.c2)) AND (rt0.c2 COLLATE BINARY))) UNION SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (((NULL) BETWEEN (UPPER(rt0.c2)) AND (rt0.c2 COLLATE BINARY))))) UNION SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0 WHERE (((((NULL) BETWEEN (UPPER(rt0.c2)) AND (rt0.c2 COLLATE BINARY))) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 WHERE (LIKELY(DISTINCT ((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0)))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0 WHERE ((NOT (LIKELY(DISTINCT ((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0)))))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0 WHERE (((LIKELY(DISTINCT ((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0)))) ISNULL)) GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING MAX(((rt0.c1) ISNULL)) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING (NOT (MAX(((rt0.c1) ISNULL)))) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING ((MAX(((rt0.c1) ISNULL))) ISNULL);
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING MAX(((rt0.c1) ISNULL)) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING (NOT (MAX(((rt0.c1) ISNULL)))) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING ((MAX(((rt0.c1) ISNULL))) ISNULL);
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT ALL rt0.c1 FROM rt0;
SELECT rt0.c1 FROM rt0 WHERE (CASE WHEN rt0.c1 COLLATE BINARY THEN rt0.c1 ELSE ((rt0.c0)||(rt0.c0)) END) UNION ALL SELECT ALL rt0.c1 FROM rt0 WHERE ((NOT (CASE WHEN rt0.c1 COLLATE BINARY THEN rt0.c1 ELSE ((rt0.c0)||(rt0.c0)) END))) UNION ALL SELECT ALL rt0.c1 FROM rt0 WHERE (((CASE WHEN rt0.c1 COLLATE BINARY THEN rt0.c1 ELSE ((rt0.c0)||(rt0.c0)) END) ISNULL));
SELECT ALL rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c0 FROM rt0 WHERE ((((+ (rt0.c0))) BETWEEN (((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1))) AND (((((x'')OR(rt0.c2)))OR('541599248'))))) UNION SELECT DISTINCT rt0.c0 FROM rt0 WHERE ((NOT ((((+ (rt0.c0))) BETWEEN (((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1))) AND (((((x'')OR(rt0.c2)))OR('541599248'))))))) UNION SELECT DISTINCT rt0.c0 FROM rt0 WHERE ((((((+ (rt0.c0))) BETWEEN (((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1))) AND (((((x'')OR(rt0.c2)))OR('541599248'))))) ISNULL));
SELECT DISTINCT rt0.c0 FROM rt0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE (((CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c2 END)IS(CASE rt0.c1  WHEN rt0.c1 THEN -1598494632 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c0 END))) GROUP BY rt0.c1, rt0.c2, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (((CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c2 END)IS(CASE rt0.c1  WHEN rt0.c1 THEN -1598494632 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c0 END))))) GROUP BY rt0.c1, rt0.c2, rt0.c0 UNION SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE (((((CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c2 END)IS(CASE rt0.c1  WHEN rt0.c1 THEN -1598494632 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c0 END))) ISNULL)) GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING SUM(COUNT(*)) UNION ALL SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (NOT (SUM(COUNT(*)))) UNION ALL SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING ((SUM(COUNT(*))) ISNULL);
SELECT rt0.c0 FROM rt0;
SELECT rt0.c0 FROM rt0 WHERE ((((- (rt0.c2)))<(STRFTIME(rt0.c1, rt0.c0, rt0.c1, rt0.c0, rt0.c1)))) UNION ALL SELECT ALL rt0.c0 FROM rt0 WHERE ((NOT ((((- (rt0.c2)))<(STRFTIME(rt0.c1, rt0.c0, rt0.c1, rt0.c0, rt0.c1)))))) UNION ALL SELECT ALL rt0.c0 FROM rt0 WHERE ((((((- (rt0.c2)))<(STRFTIME(rt0.c1, rt0.c0, rt0.c1, rt0.c0, rt0.c1)))) ISNULL));
SELECT rt0.c0 FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((((('-0.0')AND(((rt0.c2)-(rt0.c0)))))OR(((((((((x'9202')AND(rt0.c2)))AND(rt0.c1)))OR(rt0.c1)))AND(rt0.c0))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((((('-0.0')AND(((rt0.c2)-(rt0.c0)))))OR(((((((((x'9202')AND(rt0.c2)))AND(rt0.c1)))OR(rt0.c1)))AND(rt0.c0))))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((((('-0.0')AND(((rt0.c2)-(rt0.c0)))))OR(((((((((x'9202')AND(rt0.c2)))AND(rt0.c1)))OR(rt0.c1)))AND(rt0.c0))))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 WHERE (((SQLITE_VERSION()) ISNULL)) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM rt0 WHERE ((NOT (((SQLITE_VERSION()) ISNULL)))) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM rt0 WHERE (((((SQLITE_VERSION()) ISNULL)) ISNULL)) GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING ((TOTAL(MAX(rt0.c0)))+(MAX(rt0.c0))) UNION ALL SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING (NOT (((TOTAL(MAX(rt0.c0)))+(MAX(rt0.c0))))) UNION ALL SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING ((((TOTAL(MAX(rt0.c0)))+(MAX(rt0.c0)))) ISNULL);
SELECT ALL SUM((((rt0.c0)) BETWEEN (((~ (rt0.c1)))) AND ((CASE rt0.c2  WHEN rt0.c0 THEN rt0.c2 END)))) FROM rt0 ORDER BY ABS('qQ')  NULLS LAST;
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE (CASE CASE WHEN x'6e47' THEN NULL ELSE rt0.c1 END  WHEN (~ (rt0.c2)) THEN ((rt0.c2)IS NOT(rt0.c1)) END) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (CASE CASE WHEN x'6e47' THEN NULL ELSE rt0.c1 END  WHEN (~ (rt0.c2)) THEN ((rt0.c2)IS NOT(rt0.c1)) END))) UNION ALL SELECT ALL * FROM rt0 WHERE (((CASE CASE WHEN x'6e47' THEN NULL ELSE rt0.c1 END  WHEN (~ (rt0.c2)) THEN ((rt0.c2)IS NOT(rt0.c1)) END) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((((rt0.c0)OR((NOT (rt0.c2)))))OR((rt0.c2 IN ())))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((((rt0.c0)OR((NOT (rt0.c2)))))OR((rt0.c2 IN ())))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((((rt0.c0)OR((NOT (rt0.c2)))))OR((rt0.c2 IN ())))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 WHERE (((((((((CAST(NULL AS REAL))OR(rt0.c1)))AND(CAST(rt0.c2 AS NUMERIC))))AND((+ (rt0.c2)))))OR(rt0.c1))) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM rt0 WHERE ((NOT (((((((((CAST(NULL AS REAL))OR(rt0.c1)))AND(CAST(rt0.c2 AS NUMERIC))))AND((+ (rt0.c2)))))OR(rt0.c1))))) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM rt0 WHERE (((((((((((CAST(NULL AS REAL))OR(rt0.c1)))AND(CAST(rt0.c2 AS NUMERIC))))AND((+ (rt0.c2)))))OR(rt0.c1))) ISNULL)) GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING TOTAL(AVG(rt0.c2)) UNION ALL SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT (TOTAL(AVG(rt0.c2)))) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((TOTAL(AVG(rt0.c2))) ISNULL);
SELECT rt0.c1 FROM rt0;
SELECT ALL rt0.c1 FROM rt0 WHERE ((((((rt0.c2)) NOT BETWEEN (('-1357482736')) AND ((x''))))+(((rt0.c2) NOTNULL)))) UNION ALL SELECT ALL rt0.c1 FROM rt0 WHERE ((NOT ((((((rt0.c2)) NOT BETWEEN (('-1357482736')) AND ((x''))))+(((rt0.c2) NOTNULL)))))) UNION ALL SELECT ALL rt0.c1 FROM rt0 WHERE ((((((((rt0.c2)) NOT BETWEEN (('-1357482736')) AND ((x''))))+(((rt0.c2) NOTNULL)))) ISNULL));
SELECT rt0.c1 FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((((((rt0.c0)AND(rt0.c0)))OR(rt0.c0))) NOT NULL)) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((((((rt0.c0)AND(rt0.c0)))OR(rt0.c0))) NOT NULL)))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((((((rt0.c0)AND(rt0.c0)))OR(rt0.c0))) NOT NULL)) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE (((((rt0.c2)AND(rt0.c2)))AND(rt0.c2)) COLLATE BINARY) GROUP BY rt0.c0, rt0.c2, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (((((rt0.c2)AND(rt0.c2)))AND(rt0.c2)) COLLATE BINARY))) GROUP BY rt0.c0, rt0.c2, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE (((((((rt0.c2)AND(rt0.c2)))AND(rt0.c2)) COLLATE BINARY) ISNULL)) GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING GROUP_CONCAT((MIN(MIN(GROUP_CONCAT(rt0.c0))) IN (COUNT(*)))) UNION ALL SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING (NOT (GROUP_CONCAT((MIN(MIN(GROUP_CONCAT(rt0.c0))) IN (COUNT(*)))))) UNION ALL SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING ((GROUP_CONCAT((MIN(MIN(GROUP_CONCAT(rt0.c0))) IN (COUNT(*))))) ISNULL);
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ('2101901811') UNION ALL SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT ('2101901811'))) UNION ALL SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((('2101901811') ISNULL));
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c2 FROM rt0 WHERE (((((CASE WHEN rt0.c1 THEN rt0.c1 END)AND((rt0.c0 IN ()))))AND((NOT (rt0.c2))))) UNION SELECT DISTINCT rt0.c2 FROM rt0 WHERE ((NOT (((((CASE WHEN rt0.c1 THEN rt0.c1 END)AND((rt0.c0 IN ()))))AND((NOT (rt0.c2))))))) UNION SELECT DISTINCT rt0.c2 FROM rt0 WHERE (((((((CASE WHEN rt0.c1 THEN rt0.c1 END)AND((rt0.c0 IN ()))))AND((NOT (rt0.c2))))) ISNULL));
SELECT DISTINCT rt0.c2 FROM rt0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 WHERE (CAST(((rt0.c2)GLOB(rt0.c0)) AS BLOB)) GROUP BY rt0.c2, rt0.c0 UNION SELECT rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (CAST(((rt0.c2)GLOB(rt0.c0)) AS BLOB)))) GROUP BY rt0.c2, rt0.c0 UNION SELECT rt0.c2, rt0.c0 FROM rt0 WHERE (((CAST(((rt0.c2)GLOB(rt0.c0)) AS BLOB)) ISNULL)) GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING CASE WHEN AVG(rt0.c2) THEN MAX(AVG('')) WHEN (- (MAX(rt0.c0))) THEN GROUP_CONCAT(rt0.c0) WHEN SQLITE_VERSION() THEN AVG(rt0.c1) ELSE TOTAL(SUM(COUNT(*))) END UNION ALL SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING (NOT (CASE WHEN AVG(rt0.c2) THEN MAX(AVG('')) WHEN (- (MAX(rt0.c0))) THEN GROUP_CONCAT(rt0.c0) WHEN SQLITE_VERSION() THEN AVG(rt0.c1) ELSE TOTAL(SUM(COUNT(*))) END)) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING ((CASE WHEN AVG(rt0.c2) THEN MAX(AVG('')) WHEN (- (MAX(rt0.c0))) THEN GROUP_CONCAT(rt0.c0) WHEN SQLITE_VERSION() THEN AVG(rt0.c1) ELSE TOTAL(SUM(COUNT(*))) END) ISNULL);
SELECT SUM(((rt0.c2)IS(((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2))))) FROM rt0 ORDER BY '_{', CAST(rt0.c1 AS REAL) COLLATE BINARY  NULLS FIRST;
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE (((CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c0 END)/(((((((((rt0.c1)AND(rt0.c2)))AND(rt0.c0)))OR(rt0.c2)))AND(rt0.c0))))) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (((CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c0 END)/(((((((((rt0.c1)AND(rt0.c2)))AND(rt0.c0)))OR(rt0.c2)))AND(rt0.c0))))))) UNION ALL SELECT ALL * FROM rt0 WHERE (((((CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c0 END)/(((((((((rt0.c1)AND(rt0.c2)))AND(rt0.c0)))OR(rt0.c2)))AND(rt0.c0))))) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((rt0.c2)OR(rt0.c2)) COLLATE RTRIM) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((rt0.c2)OR(rt0.c2)) COLLATE RTRIM))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((rt0.c2)OR(rt0.c2)) COLLATE RTRIM) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 WHERE (((((((rt0.c2))>=((rt0.c2)))))==(((~ (rt0.c1)))))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0 WHERE ((NOT (((((((rt0.c2))>=((rt0.c2)))))==(((~ (rt0.c1)))))))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0 WHERE (((((((((rt0.c2))>=((rt0.c2)))))=(((~ (rt0.c1)))))) ISNULL)) GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (((MAX(MAX(COUNT(*))), MIN(rt0.c0), SUM(rt0.c2)))<=((GROUP_CONCAT(MIN(0.08256218691688144)), HEX(DISTINCT rt0.c2), COUNT(rt0.c2)))) UNION ALL SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT ((((MAX(MAX(COUNT(*))), MIN(rt0.c0), SUM(rt0.c2)))<=((GROUP_CONCAT(MIN(0.08256218691688144)), HEX(DISTINCT rt0.c2), COUNT(rt0.c2)))))) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (((((MAX(MAX(COUNT(*))), MIN(rt0.c0), SUM(rt0.c2)))<=((GROUP_CONCAT(MIN(0.08256218691688144)), HEX(DISTINCT rt0.c2), COUNT(rt0.c2))))) ISNULL);
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE (((((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0))) NOT NULL)) UNION ALL SELECT * FROM rt0 WHERE ((NOT (((((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0))) NOT NULL)))) UNION ALL SELECT ALL * FROM rt0 WHERE (((((((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0))) NOT NULL)) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (NULLIF(DISTINCT rt0.c2 COLLATE RTRIM, NULL)) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (NULLIF(DISTINCT rt0.c2 COLLATE RTRIM, NULL)))) UNION SELECT DISTINCT * FROM rt0 WHERE (((NULLIF(DISTINCT rt0.c2 COLLATE RTRIM, NULL)) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 WHERE (CASE WHEN ((rt0.c0)>(rt0.c0)) THEN (NOT (rt0.c0)) WHEN (rt0.c0 IN ()) THEN CAST(rt0.c0 AS TEXT) WHEN (- (rt0.c0)) THEN (('V9')>=(rt0.c0)) END) GROUP BY rt0.c2, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (CASE WHEN ((rt0.c0)>(rt0.c0)) THEN (NOT (rt0.c0)) WHEN (rt0.c0 IN ()) THEN CAST(rt0.c0 AS TEXT) WHEN (- (rt0.c0)) THEN (('V9')>=(rt0.c0)) END))) GROUP BY rt0.c2, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c0 FROM rt0 WHERE (((CASE WHEN ((rt0.c0)>(rt0.c0)) THEN (NOT (rt0.c0)) WHEN (rt0.c0 IN ()) THEN CAST(rt0.c0 AS TEXT) WHEN (- (rt0.c0)) THEN (('V9')>=(rt0.c0)) END) ISNULL)) GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING TOTAL(AVG(MAX(rt0.c1))) UNION ALL SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (NOT (TOTAL(AVG(MAX(rt0.c1))))) UNION ALL SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING ((TOTAL(AVG(MAX(rt0.c1)))) ISNULL);
SELECT ALL * FROM rt0;
SELECT * FROM rt0 WHERE (CAST(((rt0.c2)&(rt0.c1)) AS INTEGER)) UNION ALL SELECT * FROM rt0 WHERE ((NOT (CAST(((rt0.c2)&(rt0.c1)) AS INTEGER)))) UNION ALL SELECT ALL * FROM rt0 WHERE (((CAST(((rt0.c2)&(rt0.c1)) AS INTEGER)) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE (rt0.c0) UNION SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (rt0.c0))) UNION SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE (((rt0.c0) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 WHERE (CASE WHEN (((rt0.c1))<=((rt0.c2))) THEN ((((((((rt0.c0)OR(rt0.c1)))OR(rt0.c2)))AND(rt0.c0)))OR(rt0.c1)) WHEN CASE WHEN rt0.c0 THEN '*' WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 END THEN '-1357482736' WHEN (((rt0.c0, rt0.c0, rt0.c2)) NOT BETWEEN ((rt0.c1, rt0.c1, rt0.c0)) AND ((rt0.c1, rt0.c0, x'd36f'))) THEN (rt0.c1 IN ()) ELSE CASE WHEN rt0.c0 THEN rt0.c2 END END) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0 WHERE ((NOT (CASE WHEN (((rt0.c1))<=((rt0.c2))) THEN ((((((((rt0.c0)OR(rt0.c1)))OR(rt0.c2)))AND(rt0.c0)))OR(rt0.c1)) WHEN CASE WHEN rt0.c0 THEN '*' WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 END THEN '-1357482736' WHEN (((rt0.c0, rt0.c0, rt0.c2)) NOT BETWEEN ((rt0.c1, rt0.c1, rt0.c0)) AND ((rt0.c1, rt0.c0, x'd36f'))) THEN (rt0.c1 IN ()) ELSE CASE WHEN rt0.c0 THEN rt0.c2 END END))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0 WHERE (((CASE WHEN (((rt0.c1))<=((rt0.c2))) THEN ((((((((rt0.c0)OR(rt0.c1)))OR(rt0.c2)))AND(rt0.c0)))OR(rt0.c1)) WHEN CASE WHEN rt0.c0 THEN '*' WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 END THEN '-1357482736' WHEN (((rt0.c0, rt0.c0, rt0.c2)) NOT BETWEEN ((rt0.c1, rt0.c1, rt0.c0)) AND ((rt0.c1, rt0.c0, x'd36f'))) THEN (rt0.c1 IN ()) ELSE CASE WHEN rt0.c0 THEN rt0.c2 END END) ISNULL)) GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING AVG(CASE MAX(COUNT(rt0.c0))  WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN 0x7ccca3aa WHEN MAX(rt0.c1) THEN rt0.c0 ELSE rt0.c0 END) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING (NOT (AVG(CASE MAX(COUNT(rt0.c0))  WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN 0x7ccca3aa WHEN MAX(rt0.c1) THEN rt0.c0 ELSE rt0.c0 END))) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING ((AVG(CASE MAX(COUNT(rt0.c0))  WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN 0x7ccca3aa WHEN MAX(rt0.c1) THEN rt0.c0 ELSE rt0.c0 END)) ISNULL);
SELECT ALL rt0.c1, rt0.c2 FROM rt0;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 WHERE (((((((((((rt0.c2)*(rt0.c2)))AND(UPPER(DISTINCT rt0.c1))))OR((((rt0.c2, x'', rt0.c1, rt0.c1, rt0.c1)) NOT BETWEEN ((rt0.c0, rt0.c0, rt0.c0, rt0.c2, rt0.c1)) AND ((rt0.c0, rt0.c2, rt0.c2, rt0.c0, rt0.c0))))))AND('106189112')))AND((+ (rt0.c1))))) UNION ALL SELECT ALL rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (((((((((((rt0.c2)*(rt0.c2)))AND(UPPER(DISTINCT rt0.c1))))OR((((rt0.c2, x'', rt0.c1, rt0.c1, rt0.c1)) NOT BETWEEN ((rt0.c0, rt0.c0, rt0.c0, rt0.c2, rt0.c1)) AND ((rt0.c0, rt0.c2, rt0.c2, rt0.c0, rt0.c0))))))AND('106189112')))AND((+ (rt0.c1))))))) UNION ALL SELECT ALL rt0.c1, rt0.c2 FROM rt0 WHERE (((((((((((((rt0.c2)*(rt0.c2)))AND(UPPER(DISTINCT rt0.c1))))OR((((rt0.c2, x'', rt0.c1, rt0.c1, rt0.c1)) NOT BETWEEN ((rt0.c0, rt0.c0, rt0.c0, rt0.c2, rt0.c1)) AND ((rt0.c0, rt0.c2, rt0.c2, rt0.c0, rt0.c0))))))AND('106189112')))AND((+ (rt0.c1))))) ISNULL));
SELECT ALL rt0.c1, rt0.c2 FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (0.0469032225963506) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (0.0469032225963506))) UNION SELECT DISTINCT * FROM rt0 WHERE (((0.0469032225963506) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 WHERE (((((rt0.c0)>>(rt0.c1))) NOT BETWEEN (x'') AND (NULL))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0 WHERE ((NOT (((((rt0.c0)>>(rt0.c1))) NOT BETWEEN (x'') AND (NULL))))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0 WHERE (((((((rt0.c0)>>(rt0.c1))) NOT BETWEEN (x'') AND (NULL))) ISNULL)) GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING MAX(GROUP_CONCAT(rt0.c2)) UNION ALL SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (NOT (MAX(GROUP_CONCAT(rt0.c2)))) UNION ALL SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING ((MAX(GROUP_CONCAT(rt0.c2))) ISNULL);
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE (((+ (rt0.c1)) IN ())) UNION ALL SELECT * FROM rt0 WHERE ((NOT (((+ (rt0.c1)) IN ())))) UNION ALL SELECT * FROM rt0 WHERE (((((+ (rt0.c1)) IN ())) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c0 FROM rt0 WHERE (rt0.c2) UNION SELECT DISTINCT rt0.c0 FROM rt0 WHERE ((NOT (rt0.c2))) UNION SELECT DISTINCT rt0.c0 FROM rt0 WHERE (((rt0.c2) ISNULL));
SELECT DISTINCT rt0.c0 FROM rt0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM rt0 NOT INDEXED WHERE (((((rt0.c2)GLOB(rt0.c0))) IS FALSE)) GROUP BY rt0.c2, rt0.c0 UNION SELECT rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (((((rt0.c2)GLOB(rt0.c0))) IS FALSE)))) GROUP BY rt0.c2, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c0 FROM rt0 WHERE (((((((rt0.c2)GLOB(rt0.c0))) IS FALSE)) ISNULL)) GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING MAX(((((AVG(SUM(AVG(GROUP_CONCAT(0.12820928161156742)))))OR(1.984038354E9)))OR(COUNT(rt0.c1)))) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING (NOT (MAX(((((AVG(SUM(AVG(GROUP_CONCAT(0.12820928161156742)))))OR(1.984038354E9)))OR(COUNT(rt0.c1)))))) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING ((MAX(((((AVG(SUM(AVG(GROUP_CONCAT(0.12820928161156742)))))OR(1.984038354E9)))OR(COUNT(rt0.c1))))) ISNULL);
SELECT rt0.c0, rt0.c2 FROM rt0;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 WHERE ((((((((((rt0.c1)AND(rt0.c1)))OR(rt0.c0)))AND(rt0.c2)))OR(rt0.c0)) IN ())) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT ((((((((((rt0.c1)AND(rt0.c1)))OR(rt0.c0)))AND(rt0.c2)))OR(rt0.c0)) IN ())))) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt0 WHERE ((((((((((((rt0.c1)AND(rt0.c1)))OR(rt0.c0)))AND(rt0.c2)))OR(rt0.c0)) IN ())) ISNULL));
SELECT rt0.c0, rt0.c2 FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (CASE ((rt0.c0) IS TRUE)  WHEN rt0.c2 THEN CAST(rt0.c1 AS BLOB) ELSE LTRIM(rt0.c0, rt0.c0) END) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (CASE ((rt0.c0) IS TRUE)  WHEN rt0.c2 THEN CAST(rt0.c1 AS BLOB) ELSE LTRIM(rt0.c0, rt0.c0) END))) UNION SELECT DISTINCT * FROM rt0 WHERE (((CASE ((rt0.c0) IS TRUE)  WHEN rt0.c2 THEN CAST(rt0.c1 AS BLOB) ELSE LTRIM(rt0.c0, rt0.c0) END) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE (((((rt0.c1)LIKE(rt0.c1)))IS NOT((((NULL)) BETWEEN ((rt0.c1)) AND ((rt0.c1)))))) GROUP BY rt0.c2, rt0.c0, rt0.c1 UNION SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (((((rt0.c1)LIKE(rt0.c1)))IS NOT((((NULL)) BETWEEN ((rt0.c1)) AND ((rt0.c1)))))))) GROUP BY rt0.c2, rt0.c0, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE (((((((rt0.c1)LIKE(rt0.c1)))IS NOT((((NULL)) BETWEEN ((rt0.c1)) AND ((rt0.c1)))))) ISNULL)) GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING ((MAX(MAX(MAX(rt0.c0))))&(MIN(rt0.c1))) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING (NOT (((MAX(MAX(MAX(rt0.c0))))&(MIN(rt0.c1))))) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING ((((MAX(MAX(MAX(rt0.c0))))&(MIN(rt0.c1)))) ISNULL);
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (((((((rt0.c1)OR(rt0.c1)))AND(rt0.c1)))!=(((rt0.c2)LIKE(x''))))) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (((((((rt0.c1)OR(rt0.c1)))AND(rt0.c1)))<>(((rt0.c2)LIKE(x''))))))) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (((((((((rt0.c1)OR(rt0.c1)))AND(rt0.c1)))<>(((rt0.c2)LIKE(x''))))) ISNULL));
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c2 FROM rt0 WHERE (rt0.c2) UNION SELECT DISTINCT rt0.c2 FROM rt0 WHERE ((NOT (rt0.c2))) UNION SELECT DISTINCT rt0.c2 FROM rt0 WHERE (((rt0.c2) ISNULL));
SELECT DISTINCT rt0.c2 FROM rt0;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 WHERE ((+ ((((rt0.c1))=((NULL)))))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0 WHERE ((NOT ((+ ((((rt0.c1))=((NULL)))))))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0 WHERE ((((+ ((((rt0.c1))=((NULL)))))) ISNULL)) GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING COUNT(((MIN(rt0.c1))|(rt0.c0))) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING (NOT (COUNT(((MIN(rt0.c1))|(rt0.c0))))) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING ((COUNT(((MIN(rt0.c1))|(rt0.c0)))) ISNULL);
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE ((((rt0.c1 IN ()))/((+ (rt0.c2))))) ORDER BY ((rt0.c1 IN ()) IN ())  NULLS LAST;
SELECT ALL * FROM rt0 WHERE ((NOT ((((rt0.c1 IN ()))/((+ (rt0.c2))))))) ORDER BY ((rt0.c1 IN ()) IN ())  NULLS LAST;
SELECT ALL * FROM rt0 WHERE ((((((rt0.c1 IN ()))/((+ (rt0.c2))))) ISNULL)) ORDER BY ((rt0.c1 IN ()) IN ())  NULLS LAST;
SELECT * FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((((((rt0.c1)||(rt0.c1)))AND(((((rt0.c2)AND(rt0.c2)))AND(rt0.c0)))))OR(COALESCE(DISTINCT rt0.c1, NULL)))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((((((rt0.c1)||(rt0.c1)))AND(((((rt0.c2)AND(rt0.c2)))AND(rt0.c0)))))OR(COALESCE(DISTINCT rt0.c1, NULL)))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((((((rt0.c1)||(rt0.c1)))AND(((((rt0.c2)AND(rt0.c2)))AND(rt0.c0)))))OR(COALESCE(DISTINCT rt0.c1, NULL)))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c1 FROM rt0 WHERE (CASE WHEN ((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0)) THEN CAST(rt0.c1 AS NUMERIC) END) GROUP BY rt0.c0, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (CASE WHEN ((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0)) THEN CAST(rt0.c1 AS NUMERIC) END))) GROUP BY rt0.c0, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c1 FROM rt0 WHERE (((CASE WHEN ((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0)) THEN CAST(rt0.c1 AS NUMERIC) END) ISNULL)) GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING COUNT(MIN(SUM(MIN(TOTAL(0.08017112206070953))))) UNION ALL SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING (NOT (COUNT(MIN(SUM(MIN(TOTAL(0.08017112206070953))))))) UNION ALL SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING ((COUNT(MIN(SUM(MIN(TOTAL(0.08017112206070953)))))) ISNULL);
SELECT ALL * FROM rt0;
SELECT * FROM rt0 WHERE (((((rt0.c1)>>(rt0.c0))) BETWEEN (((rt0.c2)||(rt0.c0))) AND (NULL))) UNION ALL SELECT * FROM rt0 WHERE ((NOT (((((rt0.c1)>>(rt0.c0))) BETWEEN (((rt0.c2)||(rt0.c0))) AND (NULL))))) UNION ALL SELECT ALL * FROM rt0 WHERE (((((((rt0.c1)>>(rt0.c0))) BETWEEN (((rt0.c2)||(rt0.c0))) AND (NULL))) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0 WHERE (((((rt0.c1) NOT NULL))/(((((((((x'')AND(rt0.c2)))AND(rt0.c1)))AND(rt0.c1)))AND(rt0.c1))))) UNION SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (((((rt0.c1) NOT NULL))/(((((((((x'')AND(rt0.c2)))AND(rt0.c1)))AND(rt0.c1)))AND(rt0.c1))))))) UNION SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0 WHERE (((((((rt0.c1) NOT NULL))/(((((((((x'')AND(rt0.c2)))AND(rt0.c1)))AND(rt0.c1)))AND(rt0.c1))))) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 WHERE (((CAST(rt0.c0 AS INTEGER))GLOB(((((rt0.c2)OR(rt0.c1)))AND(rt0.c1))))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0 WHERE ((NOT (((CAST(rt0.c0 AS INTEGER))GLOB(((((rt0.c2)OR(rt0.c1)))AND(rt0.c1))))))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0 WHERE (((((CAST(rt0.c0 AS INTEGER))GLOB(((((rt0.c2)OR(rt0.c1)))AND(rt0.c1))))) ISNULL)) GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING SUM(MIN(rt0.c2)) UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT (SUM(MIN(rt0.c2)))) UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING ((SUM(MIN(rt0.c2))) ISNULL);
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE (CASE WHEN ((rt0.c2)IS NOT(rt0.c2)) THEN (+ (rt0.c1)) END) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (CASE WHEN ((rt0.c2)IS NOT(rt0.c2)) THEN (+ (rt0.c1)) END))) UNION ALL SELECT ALL * FROM rt0 WHERE (((CASE WHEN ((rt0.c2)IS NOT(rt0.c2)) THEN (+ (rt0.c1)) END) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((((((rt0.c2)/(rt0.c2)), ((((rt0.c1)AND(rt0.c2)))OR(rt0.c2)), ((NULL) NOT BETWEEN (rt0.c1) AND (rt0.c0))))>((CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c1 END, '1835675798', rt0.c1)))) UNION SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT ((((((rt0.c2)/(rt0.c2)), ((((rt0.c1)AND(rt0.c2)))OR(rt0.c2)), ((NULL) NOT BETWEEN (rt0.c1) AND (rt0.c0))))>((CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c1 END, '1835675798', rt0.c1)))))) UNION SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((((((((rt0.c2)/(rt0.c2)), ((((rt0.c1)AND(rt0.c2)))OR(rt0.c2)), ((NULL) NOT BETWEEN (rt0.c1) AND (rt0.c0))))>((CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c1 END, '1835675798', rt0.c1)))) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0 FROM rt0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((((((rt0.c0, rt0.c0, rt0.c1))>=((rt0.c2, rt0.c0, rt0.c2))))IS(CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c0 END))) GROUP BY rt0.c1, rt0.c2, rt0.c0 UNION SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT ((((((rt0.c0, rt0.c0, rt0.c1))>=((rt0.c2, rt0.c0, rt0.c2))))IS(CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c0 END))))) GROUP BY rt0.c1, rt0.c2, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((((((((rt0.c0, rt0.c0, rt0.c1))>=((rt0.c2, rt0.c0, rt0.c2))))IS(CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c0 END))) ISNULL)) GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING (COUNT(rt0.c0) IN ((~ (SUM(COUNT(GROUP_CONCAT(MAX(rt0.c0)))))))) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING (NOT ((COUNT(rt0.c0) IN ((~ (SUM(COUNT(GROUP_CONCAT(MAX(rt0.c0)))))))))) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING (((COUNT(rt0.c0) IN ((~ (SUM(COUNT(GROUP_CONCAT(MAX(rt0.c0))))))))) ISNULL);
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE ((NOT (((rt0.c0)/(rt0.c2))))) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT ((NOT (((rt0.c0)/(rt0.c2))))))) UNION ALL SELECT * FROM rt0 WHERE ((((NOT (((rt0.c0)/(rt0.c2))))) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((rt0.c1 IN ()) IN ())) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((rt0.c1 IN ()) IN ())))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((rt0.c1 IN ()) IN ())) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c1, rt0.c2 FROM rt0 WHERE ((~ (((rt0.c2)<<(rt0.c1))))) GROUP BY rt0.c1, rt0.c2 UNION SELECT rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT ((~ (((rt0.c2)<<(rt0.c1))))))) GROUP BY rt0.c1, rt0.c2 UNION SELECT rt0.c1, rt0.c2 FROM rt0 WHERE ((((~ (((rt0.c2)<<(rt0.c1))))) ISNULL)) GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING GROUP_CONCAT(TYPEOF(DISTINCT AVG(rt0.c1))) UNION ALL SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (NOT (GROUP_CONCAT(TYPEOF(DISTINCT AVG(rt0.c1))))) UNION ALL SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING ((GROUP_CONCAT(TYPEOF(DISTINCT AVG(rt0.c1)))) ISNULL);
SELECT rt0.c2, rt0.c0 FROM rt0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 WHERE ((((NOT (rt0.c1))) ISNULL)) UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT ((((NOT (rt0.c1))) ISNULL)))) UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM rt0 WHERE ((((((NOT (rt0.c1))) ISNULL)) ISNULL));
SELECT rt0.c2, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c0 FROM rt0 WHERE (((CAST(rt0.c0 AS BLOB))!=(0.33108081299493386))) UNION SELECT DISTINCT rt0.c0 FROM rt0 WHERE ((NOT (((CAST(rt0.c0 AS BLOB))<>(0.33108081299493386))))) UNION SELECT DISTINCT rt0.c0 FROM rt0 WHERE (((((CAST(rt0.c0 AS BLOB))!=(0.33108081299493386))) ISNULL));
SELECT DISTINCT rt0.c0 FROM rt0;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c1, rt0.c2 FROM rt0 WHERE (CASE ((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1))  WHEN CASE WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c2 END THEN rt0.c0 END) GROUP BY rt0.c1, rt0.c2 UNION SELECT rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (CASE ((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1))  WHEN CASE WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c2 END THEN rt0.c0 END))) GROUP BY rt0.c1, rt0.c2 UNION SELECT rt0.c1, rt0.c2 FROM rt0 WHERE (((CASE ((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1))  WHEN CASE WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c2 END THEN rt0.c0 END) ISNULL)) GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING rt0.c0 UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING (NOT (rt0.c0)) UNION ALL SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING ((rt0.c0) ISNULL);
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING rt0.c0 UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING (NOT (rt0.c0)) UNION ALL SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING ((rt0.c0) ISNULL);
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c1 FROM rt0;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 WHERE ((- (rt0.c1 COLLATE RTRIM))) UNION ALL SELECT rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT ((- (rt0.c1 COLLATE RTRIM))))) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM rt0 WHERE ((((- (rt0.c1 COLLATE RTRIM))) ISNULL));
SELECT rt0.c0, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0 WHERE ((((rt0.c0 IN (rt0.c1, rt0.c2)))AND((+ (rt0.c0))))) UNION SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT ((((rt0.c0 IN (rt0.c1, rt0.c2)))AND((+ (rt0.c0))))))) UNION SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0 WHERE ((((((rt0.c0 IN (rt0.c1, rt0.c2)))AND((+ (rt0.c0))))) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 WHERE ((((((((((((((((rt0.c0, rt0.c0, rt0.c2))!=((rt0.c1, rt0.c2, rt0.c0))))OR(((rt0.c1) NOT NULL))))OR((rt0.c1 IN (rt0.c1, x'60a2')))))AND(((rt0.c1)-(rt0.c0)))))OR(((rt0.c1)%(rt0.c0)))))AND(rt0.c2 COLLATE BINARY)))AND((((rt0.c2, rt0.c1, rt0.c0))>=(('	j', rt0.c1, rt0.c1)))))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0 WHERE ((NOT ((((((((((((((((rt0.c0, rt0.c0, rt0.c2))!=((rt0.c1, rt0.c2, rt0.c0))))OR(((rt0.c1) NOT NULL))))OR((rt0.c1 IN (rt0.c1, x'60a2')))))AND(((rt0.c1)-(rt0.c0)))))OR(((rt0.c1)%(rt0.c0)))))AND(rt0.c2 COLLATE BINARY)))AND((((rt0.c2, rt0.c1, rt0.c0))>=(('	j', rt0.c1, rt0.c1)))))))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0 WHERE ((((((((((((((((((rt0.c0, rt0.c0, rt0.c2))!=((rt0.c1, rt0.c2, rt0.c0))))OR(((rt0.c1) NOT NULL))))OR((rt0.c1 IN (rt0.c1, x'60a2')))))AND(((rt0.c1)-(rt0.c0)))))OR(((rt0.c1)%(rt0.c0)))))AND(rt0.c2 COLLATE BINARY)))AND((((rt0.c2, rt0.c1, rt0.c0))>=(('	j', rt0.c1, rt0.c1)))))) ISNULL)) GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (('-1888947148') NOTNULL) UNION ALL SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (NOT ((('-1888947148') NOTNULL))) UNION ALL SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (((('-1888947148') NOTNULL)) ISNULL);
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (('-1888947148') NOTNULL) UNION ALL SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (NOT ((('-1888947148') NOTNULL))) UNION ALL SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (((('-1888947148') NOTNULL)) ISNULL);
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c2 FROM rt0;
SELECT ALL rt0.c2 FROM rt0 WHERE (CASE ((rt0.c2) BETWEEN (NULL) AND (rt0.c2))  WHEN ((rt0.c2) NOT BETWEEN (rt0.c1) AND (0.5808997871955528)) THEN ((rt0.c2)IS(rt0.c2)) ELSE ((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2)) END) UNION ALL SELECT ALL rt0.c2 FROM rt0 WHERE ((NOT (CASE ((rt0.c2) BETWEEN (NULL) AND (rt0.c2))  WHEN ((rt0.c2) NOT BETWEEN (rt0.c1) AND (0.5808997871955528)) THEN ((rt0.c2)IS(rt0.c2)) ELSE ((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2)) END))) UNION ALL SELECT ALL rt0.c2 FROM rt0 WHERE (((CASE ((rt0.c2) BETWEEN (NULL) AND (rt0.c2))  WHEN ((rt0.c2) NOT BETWEEN (rt0.c1) AND (0.5808997871955528)) THEN ((rt0.c2)IS(rt0.c2)) ELSE ((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2)) END) ISNULL));
SELECT rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((((((((((~ (rt0.c0)))OR(((((rt0.c1)OR(rt0.c1)))OR(rt0.c1)))))OR(CAST(rt0.c0 AS REAL))))OR(rt0.c2)))OR((~ (0.6706048276195763))))) UNION SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT ((((((((((~ (rt0.c0)))OR(((((rt0.c1)OR(rt0.c1)))OR(rt0.c1)))))OR(CAST(rt0.c0 AS REAL))))OR(rt0.c2)))OR((~ (0.6706048276195763))))))) UNION SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((((((((((((~ (rt0.c0)))OR(((((rt0.c1)OR(rt0.c1)))OR(rt0.c1)))))OR(CAST(rt0.c0 AS REAL))))OR(rt0.c2)))OR((~ (0.6706048276195763))))) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM rt0;
