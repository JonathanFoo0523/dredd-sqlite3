-- Time: 2024/06/10 04:30:22
-- Database: database67
-- Database version: 3.40.0
-- seed value: 2388658567
PRAGMA cache_size = 50000; -- 0ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA encoding = 'UTF-16be'; -- 0ms;
CREATE TABLE t0 (c0 INTEGER ); -- 11ms;
INSERT OR IGNORE INTO t0 VALUES (0.6751166078117906), (x'7363'), (x''); -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
VACUUM; -- 0ms;
VACUUM temp; -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES (-1064211492); -- 0ms;
INSERT OR FAIL INTO t0(c0) VALUES (x'aa0789b2'); -- 0ms;
PRAGMA cache_spill = -2190266168428381319; -- 0ms;
REINDEX  t0; -- 0ms;
PRAGMA locking_mode; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
ANALYZE; -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (x''); -- 0ms;
REINDEX; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
PRAGMA main.auto_vacuum; -- 0ms;
PRAGMA temp.auto_vacuum = FULL; -- 0ms;
INSERT OR REPLACE INTO t0 VALUES (x''), (0.5319299676358724), (NULL); -- 1ms;
INSERT OR IGNORE INTO t0(c0) VALUES (NULL); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES (NULL); -- 0ms;
VACUUM; -- 0ms;
VACUUM; -- 0ms;
VACUUM main; -- 0ms;
VACUUM; -- 0ms;
VACUUM temp; -- 0ms;
ANALYZE t0; -- 0ms;
REINDEX  t0; -- 0ms;
END; -- 0ms;
PRAGMA soft_heap_limit = 4170009124185661492; -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
CREATE VIEW  IF NOT EXISTS v0(c0, c1, c2) AS SELECT DISTINCT CASE WHEN ((t0.c0)*(t0.c0)) THEN (t0.c0 IN ()) WHEN AVG(t0.c0) THEN CAST(x'' AS REAL) WHEN CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END THEN ((t0.c0)>=(t0.c0)) END, t0.c0, NULLIF(DISTINCT (x'' IN ()), '-1747207886' COLLATE RTRIM) FROM t0; -- 1ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
PRAGMA journal_size_limit; -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (x''), (0.5319299676358724), ('\n'), (x''), (''); -- 0ms;
PRAGMA mmap_size = -2663227896317353349; -- 0ms;
INSERT OR ABORT INTO t0(c0) VALUES ('\n'), (NULL), ('rqN'), (''), (NULL); -- 0ms;
INSERT OR ROLLBACK INTO t0 VALUES (0.5158212515279317); -- 0ms;
ANALYZE; -- 0ms;
END TRANSACTION; -- 0ms;
PRAGMA temp.busy_timeout; -- 3ms;
ROLLBACK TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO t0 VALUES ('-1064211492'); -- 0ms;
INSERT OR REPLACE INTO t0(c0) VALUES ('-1747207886'); -- 0ms;
CREATE INDEX i13 ON t0(c0 DESC) WHERE CAST((x'5394' IN ()) AS INTEGER); -- 0ms;
INSERT OR ROLLBACK INTO t0 VALUES (x'c448'); -- 0ms;
PRAGMA shrink_memory; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES (NULL); -- 0ms;
INSERT OR REPLACE INTO t0(c0) VALUES (''), ('4170009124185661492'), (0.5539572513353643); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES (x''); -- 2ms;
COMMIT TRANSACTION; -- 1ms;
PRAGMA short_column_names; -- 0ms;
PRAGMA stats; -- 0ms;
PRAGMA short_column_names; -- 0ms;
ANALYZE i13; -- 1ms;
PRAGMA auto_vacuum; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA main.foreign_keys = false; -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES (''); -- 4ms;
REINDEX  t0; -- 1ms;
INSERT OR IGNORE INTO t0(c0) VALUES ('Mlnw뤲h&k'); -- 4ms;
END; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT ALL * FROM t0 FULL OUTER JOIN v0 ON 0.06155328382379477;
SELECT * FROM t0 FULL OUTER JOIN v0 ON 0.06155328382379477 WHERE (LIKELIHOOD(DISTINCT t0.c0 COLLATE NOCASE, 0.9446144269133797)) UNION ALL SELECT ALL * FROM t0 FULL OUTER JOIN v0 ON 0.06155328382379477 WHERE ((NOT (LIKELIHOOD(DISTINCT t0.c0 COLLATE NOCASE, 0.9446144269133797)))) UNION ALL SELECT ALL * FROM t0 FULL OUTER JOIN v0 ON 0.06155328382379477 WHERE (((LIKELIHOOD(DISTINCT t0.c0 COLLATE NOCASE, 0.9446144269133797)) ISNULL));
SELECT ALL * FROM t0 FULL OUTER JOIN v0 ON 0.06155328382379477;
SELECT DISTINCT * FROM v0, t0;
SELECT DISTINCT * FROM v0, t0 WHERE (v0.c0) UNION SELECT DISTINCT * FROM v0, t0 WHERE ((NOT (v0.c0))) UNION SELECT DISTINCT * FROM v0, t0 WHERE (((v0.c0) ISNULL));
SELECT DISTINCT * FROM v0, t0;
SELECT v0.c1, v0.c0, v0.c2 FROM v0 GROUP BY v0.c1, v0.c0, v0.c2;
SELECT v0.c1, v0.c0, v0.c2 FROM v0 WHERE (v0.c1) GROUP BY v0.c1, v0.c0, v0.c2 UNION SELECT ALL v0.c1, v0.c0, v0.c2 FROM v0 WHERE ((NOT (v0.c1))) GROUP BY v0.c1, v0.c0, v0.c2 UNION SELECT v0.c1, v0.c0, v0.c2 FROM v0 WHERE (((v0.c1) ISNULL)) GROUP BY v0.c1, v0.c0, v0.c2;
SELECT v0.c1, v0.c0, v0.c2 FROM v0 GROUP BY v0.c1, v0.c0, v0.c2;
SELECT v0.c1, t0.c0 FROM t0, v0 GROUP BY v0.c1, t0.c0;
SELECT ALL v0.c1, t0.c0 FROM t0, v0 GROUP BY v0.c1, t0.c0 HAVING ((((((GROUP_CONCAT(v0.c0))*(GROUP_CONCAT(v0.c1))))AND(v0.c2)))AND(COUNT(t0.c0))) UNION ALL SELECT v0.c1, t0.c0 FROM t0, v0 GROUP BY v0.c1, t0.c0 HAVING (NOT (((((((GROUP_CONCAT(v0.c0))*(GROUP_CONCAT(v0.c1))))AND(v0.c2)))AND(COUNT(t0.c0))))) UNION ALL SELECT v0.c1, t0.c0 FROM t0, v0 GROUP BY v0.c1, t0.c0 HAVING ((((((((GROUP_CONCAT(v0.c0))*(GROUP_CONCAT(v0.c1))))AND(v0.c2)))AND(COUNT(t0.c0)))) ISNULL);
SELECT v0.c1, t0.c0 FROM t0, v0 GROUP BY v0.c1, t0.c0;
SELECT ALL v0.c1, t0.c0 FROM t0, v0 GROUP BY v0.c1, t0.c0 HAVING ((((((GROUP_CONCAT(v0.c0))*(GROUP_CONCAT(v0.c1))))AND(v0.c2)))AND(COUNT(t0.c0))) UNION ALL SELECT v0.c1, t0.c0 FROM t0, v0 GROUP BY v0.c1, t0.c0 HAVING (NOT (((((((GROUP_CONCAT(v0.c0))*(GROUP_CONCAT(v0.c1))))AND(v0.c2)))AND(COUNT(t0.c0))))) UNION ALL SELECT v0.c1, t0.c0 FROM t0, v0 GROUP BY v0.c1, t0.c0 HAVING ((((((((GROUP_CONCAT(v0.c0))*(GROUP_CONCAT(v0.c1))))AND(v0.c2)))AND(COUNT(t0.c0)))) ISNULL);
SELECT v0.c1, t0.c0 FROM t0, v0 GROUP BY v0.c1, t0.c0;
SELECT v0.c1, v0.c2, t0.c0 FROM t0, v0;
SELECT v0.c1, v0.c2, t0.c0 FROM t0, v0 WHERE (((v0.c2 IN ()) IN ())) UNION ALL SELECT ALL v0.c1, v0.c2, t0.c0 FROM t0, v0 WHERE ((NOT (((v0.c2 IN ()) IN ())))) UNION ALL SELECT v0.c1, v0.c2, t0.c0 FROM t0, v0 WHERE (((((v0.c2 IN ()) IN ())) ISNULL));
SELECT v0.c1, v0.c2, t0.c0 FROM t0, v0;
SELECT DISTINCT v0.c0, v0.c1 FROM v0;
SELECT DISTINCT v0.c0, v0.c1 FROM v0 WHERE (((((v0.c2)IS NOT(v0.c1))) NOT BETWEEN ((('')*(v0.c1))) AND (CAST(330298126 AS NUMERIC)))) UNION SELECT DISTINCT v0.c0, v0.c1 FROM v0 WHERE ((NOT (((((v0.c2)IS NOT(v0.c1))) NOT BETWEEN ((('')*(v0.c1))) AND (CAST(330298126 AS NUMERIC)))))) UNION SELECT DISTINCT v0.c0, v0.c1 FROM v0 WHERE (((((((v0.c2)IS NOT(v0.c1))) NOT BETWEEN ((('')*(v0.c1))) AND (CAST(330298126 AS NUMERIC)))) ISNULL));
SELECT DISTINCT v0.c0, v0.c1 FROM v0;
SELECT v0.c1, v0.c0, v0.c2 FROM v0 GROUP BY v0.c1, v0.c0, v0.c2;
SELECT v0.c1, v0.c0, v0.c2 FROM v0 WHERE (((((v0.c0 IN ())))>((((v0.c1)>(v0.c2)))))) GROUP BY v0.c1, v0.c0, v0.c2 UNION SELECT v0.c1, v0.c0, v0.c2 FROM v0 WHERE ((NOT (((((v0.c0 IN ())))>((((v0.c1)>(v0.c2)))))))) GROUP BY v0.c1, v0.c0, v0.c2 UNION SELECT ALL v0.c1, v0.c0, v0.c2 FROM v0 WHERE (((((((v0.c0 IN ())))>((((v0.c1)>(v0.c2)))))) ISNULL)) GROUP BY v0.c1, v0.c0, v0.c2;
SELECT v0.c1, v0.c0, v0.c2 FROM v0 GROUP BY v0.c1, v0.c0, v0.c2;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING AVG(COUNT(*)) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (AVG(COUNT(*)))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((AVG(COUNT(*))) ISNULL);
SELECT t0.c0, v0.c2, v0.c1 FROM v0, t0;
SELECT t0.c0, v0.c2, v0.c1 FROM v0, t0 WHERE (((((v0.c0) NOTNULL)) IS FALSE)) UNION ALL SELECT ALL t0.c0, v0.c2, v0.c1 FROM v0, t0 WHERE ((NOT (((((v0.c0) NOTNULL)) IS FALSE)))) UNION ALL SELECT t0.c0, v0.c2, v0.c1 FROM v0, t0 WHERE (((((((v0.c0) NOTNULL)) IS FALSE)) ISNULL));
SELECT t0.c0, v0.c2, v0.c1 FROM v0, t0;
SELECT DISTINCT t0.c0, v0.c1, v0.c0, v0.c2 FROM t0, v0;
SELECT DISTINCT t0.c0, v0.c1, v0.c0, v0.c2 FROM t0, v0 WHERE ((+ (((v0.c1)%(v0.c1))))) UNION SELECT DISTINCT t0.c0, v0.c1, v0.c0, v0.c2 FROM t0, v0 WHERE ((NOT ((+ (((v0.c1)%(v0.c1))))))) UNION SELECT DISTINCT t0.c0, v0.c1, v0.c0, v0.c2 FROM t0, v0 WHERE ((((+ (((v0.c1)%(v0.c1))))) ISNULL));
SELECT DISTINCT t0.c0, v0.c1, v0.c0, v0.c2 FROM t0, v0;
SELECT v0.c0, v0.c2, v0.c1 FROM v0 GROUP BY v0.c0, v0.c2, v0.c1;
SELECT ALL v0.c0, v0.c2, v0.c1 FROM v0 WHERE ((HEX(v0.c0) IN (((v0.c1)>(v0.c0))))) GROUP BY v0.c0, v0.c2, v0.c1 UNION SELECT ALL v0.c0, v0.c2, v0.c1 FROM v0 WHERE ((NOT ((HEX(v0.c0) IN (((v0.c1)>(v0.c0))))))) GROUP BY v0.c0, v0.c2, v0.c1 UNION SELECT ALL v0.c0, v0.c2, v0.c1 FROM v0 WHERE ((((HEX(v0.c0) IN (((v0.c1)>(v0.c0))))) ISNULL)) GROUP BY v0.c0, v0.c2, v0.c1;
SELECT v0.c0, v0.c2, v0.c1 FROM v0 GROUP BY v0.c0, v0.c2, v0.c1;
SELECT v0.c2, v0.c0, v0.c1 FROM v0 GROUP BY v0.c2, v0.c0, v0.c1;
SELECT ALL v0.c2, v0.c0, v0.c1 FROM v0 GROUP BY v0.c2, v0.c0, v0.c1 HAVING (((v0.c2, v0.c2, v0.c1)) BETWEEN ((GROUP_CONCAT(v0.c0), GROUP_CONCAT(v0.c2), ((((MIN(v0.c2))AND('Mlnw뤲h&k')))OR(v0.c1)))) AND (((+ (v0.c0)), TOTAL(v0.c1), v0.c1 COLLATE BINARY))) UNION ALL SELECT v0.c2, v0.c0, v0.c1 FROM v0 GROUP BY v0.c2, v0.c0, v0.c1 HAVING (NOT ((((v0.c2, v0.c2, v0.c1)) BETWEEN ((GROUP_CONCAT(v0.c0), GROUP_CONCAT(v0.c2), ((((MIN(v0.c2))AND('Mlnw뤲h&k')))OR(v0.c1)))) AND (((+ (v0.c0)), TOTAL(v0.c1), v0.c1 COLLATE BINARY))))) UNION ALL SELECT ALL v0.c2, v0.c0, v0.c1 FROM v0 GROUP BY v0.c2, v0.c0, v0.c1 HAVING (((((v0.c2, v0.c2, v0.c1)) BETWEEN ((GROUP_CONCAT(v0.c0), GROUP_CONCAT(v0.c2), ((((MIN(v0.c2))AND('Mlnw뤲h&k')))OR(v0.c1)))) AND (((+ (v0.c0)), TOTAL(v0.c1), v0.c1 COLLATE BINARY)))) ISNULL);
SELECT v0.c2, v0.c0, v0.c1 FROM v0 GROUP BY v0.c2, v0.c0, v0.c1;
SELECT ALL v0.c2, v0.c0, v0.c1 FROM v0 GROUP BY v0.c2, v0.c0, v0.c1 HAVING (((v0.c2, v0.c2, v0.c1)) BETWEEN ((GROUP_CONCAT(v0.c0), GROUP_CONCAT(v0.c2), ((((MIN(v0.c2))AND('Mlnw뤲h&k')))OR(v0.c1)))) AND (((+ (v0.c0)), TOTAL(v0.c1), v0.c1 COLLATE BINARY))) UNION ALL SELECT v0.c2, v0.c0, v0.c1 FROM v0 GROUP BY v0.c2, v0.c0, v0.c1 HAVING (NOT ((((v0.c2, v0.c2, v0.c1)) BETWEEN ((GROUP_CONCAT(v0.c0), GROUP_CONCAT(v0.c2), ((((MIN(v0.c2))AND('Mlnw뤲h&k')))OR(v0.c1)))) AND (((+ (v0.c0)), TOTAL(v0.c1), v0.c1 COLLATE BINARY))))) UNION ALL SELECT ALL v0.c2, v0.c0, v0.c1 FROM v0 GROUP BY v0.c2, v0.c0, v0.c1 HAVING (((((v0.c2, v0.c2, v0.c1)) BETWEEN ((GROUP_CONCAT(v0.c0), GROUP_CONCAT(v0.c2), ((((MIN(v0.c2))AND('Mlnw뤲h&k')))OR(v0.c1)))) AND (((+ (v0.c0)), TOTAL(v0.c1), v0.c1 COLLATE BINARY)))) ISNULL);
SELECT v0.c2, v0.c0, v0.c1 FROM v0 GROUP BY v0.c2, v0.c0, v0.c1;
SELECT ALL MAX(CAST(((v0.c0)!=(v0.c0)) AS TEXT)) FROM v0, t0;
SELECT t0.c0 FROM t0;
SELECT t0.c0 FROM t0 WHERE ((((t0.c0 IN ())) NOTNULL)) UNION ALL SELECT ALL t0.c0 FROM t0 WHERE ((NOT ((((t0.c0 IN ())) NOTNULL)))) UNION ALL SELECT t0.c0 FROM t0 WHERE ((((((t0.c0 IN ())) NOTNULL)) ISNULL));
SELECT t0.c0 FROM t0;
SELECT DISTINCT v0.c2, v0.c1 FROM t0, v0;
SELECT DISTINCT v0.c2, v0.c1 FROM t0, v0 WHERE (((((v0.c0 COLLATE RTRIM)AND(v0.c2)))AND((((v0.c2)) NOT BETWEEN ((v0.c0)) AND ((t0.c0)))))) UNION SELECT DISTINCT v0.c2, v0.c1 FROM t0, v0 WHERE ((NOT (((((v0.c0 COLLATE RTRIM)AND(v0.c2)))AND((((v0.c2)) NOT BETWEEN ((v0.c0)) AND ((t0.c0)))))))) UNION SELECT DISTINCT v0.c2, v0.c1 FROM t0, v0 WHERE (((((((v0.c0 COLLATE RTRIM)AND(v0.c2)))AND((((v0.c2)) NOT BETWEEN ((v0.c0)) AND ((t0.c0)))))) ISNULL));
SELECT DISTINCT v0.c2, v0.c1 FROM t0, v0;
SELECT t0.c0 FROM t0, v0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0, v0 WHERE (NULL COLLATE NOCASE) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0, v0 WHERE ((NOT (NULL COLLATE NOCASE))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0, v0 WHERE (((NULL COLLATE NOCASE) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0, v0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING AVG(ABS(t0.c0)) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (AVG(ABS(t0.c0)))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((AVG(ABS(t0.c0))) ISNULL);
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING AVG(ABS(t0.c0)) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (AVG(ABS(t0.c0)))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((AVG(ABS(t0.c0))) ISNULL);
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0;
SELECT t0.c0 FROM t0 WHERE (CASE WHEN 0.7690417169385969 THEN (t0.c0 IN (t0.c0)) WHEN (- (t0.c0)) THEN UNLIKELY(t0.c0) WHEN t0.c0 THEN (t0.c0 IN ()) END) UNION ALL SELECT ALL t0.c0 FROM t0 WHERE ((NOT (CASE WHEN 0.7690417169385969 THEN (t0.c0 IN (t0.c0)) WHEN (- (t0.c0)) THEN UNLIKELY(t0.c0) WHEN t0.c0 THEN (t0.c0 IN ()) END))) UNION ALL SELECT ALL t0.c0 FROM t0 WHERE (((CASE WHEN 0.7690417169385969 THEN (t0.c0 IN (t0.c0)) WHEN (- (t0.c0)) THEN UNLIKELY(t0.c0) WHEN t0.c0 THEN (t0.c0 IN ()) END) ISNULL));
SELECT t0.c0 FROM t0;
SELECT DISTINCT * FROM t0 INDEXED BY i13;
SELECT ALL t0.c0, v0.c0, v0.c1, v0.c2 FROM v0, t0 GROUP BY t0.c0, v0.c0, v0.c1, v0.c2;
SELECT ALL t0.c0, v0.c0, v0.c1, v0.c2 FROM v0, t0 WHERE ((CASE WHEN v0.c0 THEN v0.c2 ELSE v0.c0 END IN ())) GROUP BY t0.c0, v0.c0, v0.c1, v0.c2 UNION SELECT ALL t0.c0, v0.c0, v0.c1, v0.c2 FROM v0, t0 WHERE ((NOT ((CASE WHEN v0.c0 THEN v0.c2 ELSE v0.c0 END IN ())))) GROUP BY t0.c0, v0.c0, v0.c1, v0.c2 UNION SELECT t0.c0, v0.c0, v0.c1, v0.c2 FROM v0, t0 WHERE ((((CASE WHEN v0.c0 THEN v0.c2 ELSE v0.c0 END IN ())) ISNULL)) GROUP BY t0.c0, v0.c0, v0.c1, v0.c2;
SELECT ALL t0.c0, v0.c0, v0.c1, v0.c2 FROM v0, t0 GROUP BY t0.c0, v0.c0, v0.c1, v0.c2;
SELECT ALL t0.c0 FROM v0, t0 GROUP BY t0.c0;
SELECT t0.c0 FROM v0, t0 GROUP BY t0.c0 HAVING TOTAL(UNLIKELY(MAX(v0.c1))) UNION ALL SELECT t0.c0 FROM v0, t0 GROUP BY t0.c0 HAVING (NOT (TOTAL(UNLIKELY(MAX(v0.c1))))) UNION ALL SELECT ALL t0.c0 FROM v0, t0 GROUP BY t0.c0 HAVING ((TOTAL(UNLIKELY(MAX(v0.c1)))) ISNULL);
SELECT MAX(CASE v0.c0  WHEN CAST(v0.c0 AS TEXT) THEN (v0.c2 IN ()) END) FROM v0, t0 ORDER BY (t0.c0 IN (v0.c2)) COLLATE BINARY, (((v0.c0)) BETWEEN ((((v0.c1) ISNULL))) AND ((((v0.c1) BETWEEN (t0.c0) AND (0xffffffff845fd736))))), t0.c0 COLLATE RTRIM;
SELECT ALL t0.c0 FROM t0;
SELECT ALL t0.c0 FROM t0 WHERE (CASE t0.c0 COLLATE BINARY  WHEN json_array_length(NULL, t0.c0) THEN (+ (t0.c0)) ELSE ((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))OR(t0.c0)))OR(t0.c0)) END) UNION ALL SELECT ALL t0.c0 FROM t0 WHERE ((NOT (CASE t0.c0 COLLATE BINARY  WHEN json_array_length(NULL, t0.c0) THEN (+ (t0.c0)) ELSE ((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))OR(t0.c0)))OR(t0.c0)) END))) UNION ALL SELECT t0.c0 FROM t0 WHERE (((CASE t0.c0 COLLATE BINARY  WHEN json_array_length(NULL, t0.c0) THEN (+ (t0.c0)) ELSE ((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))OR(t0.c0)))OR(t0.c0)) END) ISNULL));
SELECT ALL t0.c0 FROM t0;
SELECT DISTINCT v0.c1, v0.c0 FROM v0;
SELECT DISTINCT v0.c1, v0.c0 FROM v0 WHERE ('4170009124185661492') UNION SELECT DISTINCT v0.c1, v0.c0 FROM v0 WHERE ((NOT ('4170009124185661492'))) UNION SELECT DISTINCT v0.c1, v0.c0 FROM v0 WHERE ((('4170009124185661492') ISNULL));
SELECT DISTINCT v0.c1, v0.c0 FROM v0;
SELECT ALL v0.c1, t0.c0, v0.c0 FROM t0, v0 INDEXED BY i13 GROUP BY v0.c1, t0.c0, v0.c0;
SELECT v0.c0 FROM v0 NATURAL JOIN t0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 NATURAL JOIN t0 GROUP BY v0.c0 HAVING x'' UNION ALL SELECT ALL v0.c0 FROM v0 NATURAL JOIN t0 GROUP BY v0.c0 HAVING (NOT (x'')) UNION ALL SELECT ALL v0.c0 FROM v0 NATURAL JOIN t0 GROUP BY v0.c0 HAVING ((x'') ISNULL);
SELECT v0.c0 FROM v0 NATURAL JOIN t0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 NATURAL JOIN t0 GROUP BY v0.c0 HAVING x'' UNION ALL SELECT ALL v0.c0 FROM v0 NATURAL JOIN t0 GROUP BY v0.c0 HAVING (NOT (x'')) UNION ALL SELECT ALL v0.c0 FROM v0 NATURAL JOIN t0 GROUP BY v0.c0 HAVING ((x'') ISNULL);
SELECT v0.c0 FROM v0 NATURAL JOIN t0 GROUP BY v0.c0;
SELECT t0.c0, v0.c0, v0.c1, v0.c2 FROM t0, v0;
SELECT t0.c0, v0.c0, v0.c1, v0.c2 FROM t0, v0 WHERE (((((((v0.c2) NOT BETWEEN (v0.c1) AND (t0.c0)))OR((v0.c2 IN (t0.c0)))))OR((~ (v0.c0))))) UNION ALL SELECT ALL t0.c0, v0.c0, v0.c1, v0.c2 FROM t0, v0 WHERE ((NOT (((((((v0.c2) NOT BETWEEN (v0.c1) AND (t0.c0)))OR((v0.c2 IN (t0.c0)))))OR((~ (v0.c0))))))) UNION ALL SELECT t0.c0, v0.c0, v0.c1, v0.c2 FROM t0, v0 WHERE (((((((((v0.c2) NOT BETWEEN (v0.c1) AND (t0.c0)))OR((v0.c2 IN (t0.c0)))))OR((~ (v0.c0))))) ISNULL));
SELECT t0.c0, v0.c0, v0.c1, v0.c2 FROM t0, v0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (v0.c1) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (v0.c1))) UNION SELECT DISTINCT * FROM v0 WHERE (((v0.c1) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 WHERE ((((((t0.c0 IN ()))OR(t0.c0 COLLATE BINARY)))AND(t0.c0 COLLATE BINARY))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT ((((((t0.c0 IN ()))OR(t0.c0 COLLATE BINARY)))AND(t0.c0 COLLATE BINARY))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((((((((t0.c0 IN ()))OR(t0.c0 COLLATE BINARY)))AND(t0.c0 COLLATE BINARY))) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0, v0.c0 FROM v0, t0 GROUP BY t0.c0, v0.c0;
SELECT t0.c0, v0.c0 FROM v0, t0 GROUP BY t0.c0, v0.c0 HAVING AVG(CAST(MAX(TOTAL(MIN(v0.c1))) AS NUMERIC)) UNION ALL SELECT ALL t0.c0, v0.c0 FROM v0, t0 GROUP BY t0.c0, v0.c0 HAVING (NOT (AVG(CAST(MAX(TOTAL(MIN(v0.c1))) AS NUMERIC)))) UNION ALL SELECT ALL t0.c0, v0.c0 FROM v0, t0 GROUP BY t0.c0, v0.c0 HAVING ((AVG(CAST(MAX(TOTAL(MIN(v0.c1))) AS NUMERIC))) ISNULL);
SELECT ALL * FROM t0, v0;
SELECT ALL * FROM t0, v0 WHERE ((t0.c0 COLLATE BINARY IN ())) UNION ALL SELECT * FROM t0, v0 WHERE ((NOT ((t0.c0 COLLATE BINARY IN ())))) UNION ALL SELECT ALL * FROM t0, v0 WHERE ((((t0.c0 COLLATE BINARY IN ())) ISNULL));
SELECT ALL * FROM t0, v0;
SELECT DISTINCT t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0 WHERE ((((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0)))) BETWEEN ((((t0.c0))!=((t0.c0)))) AND ((('-1747207886')GLOB(t0.c0))))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((NOT ((((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0)))) BETWEEN ((((t0.c0))<>((t0.c0)))) AND ((('-1747207886')GLOB(t0.c0))))))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((((((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0)))) BETWEEN ((((t0.c0))<>((t0.c0)))) AND ((('-1747207886')GLOB(t0.c0))))) ISNULL));
SELECT DISTINCT t0.c0 FROM t0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 WHERE (t0.c0) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT (t0.c0))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE (((t0.c0) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT v0.c0, t0.c0 FROM t0, v0 GROUP BY v0.c0, t0.c0;
SELECT v0.c0, t0.c0 FROM t0, v0 GROUP BY v0.c0, t0.c0 HAVING SUM(MIN(t0.c0)) UNION ALL SELECT ALL v0.c0, t0.c0 FROM t0, v0 GROUP BY v0.c0, t0.c0 HAVING (NOT (SUM(MIN(t0.c0)))) UNION ALL SELECT v0.c0, t0.c0 FROM t0, v0 GROUP BY v0.c0, t0.c0 HAVING ((SUM(MIN(t0.c0))) ISNULL);
SELECT ALL * FROM t0, v0;
SELECT ALL * FROM t0, v0 WHERE (((((t0.c0) NOTNULL)) BETWEEN (((v0.c2) ISNULL)) AND (CASE WHEN x'c5dc' THEN v0.c0 ELSE x'a4ec' END))) UNION ALL SELECT * FROM t0, v0 WHERE ((NOT (((((t0.c0) NOTNULL)) BETWEEN (((v0.c2) ISNULL)) AND (CASE WHEN x'c5dc' THEN v0.c0 ELSE x'a4ec' END))))) UNION ALL SELECT * FROM t0, v0 WHERE (((((((t0.c0) NOTNULL)) BETWEEN (((v0.c2) ISNULL)) AND (CASE WHEN x'c5dc' THEN v0.c0 ELSE x'a4ec' END))) ISNULL));
SELECT ALL * FROM t0, v0;
SELECT DISTINCT * FROM t0 NATURAL JOIN v0;
SELECT DISTINCT * FROM t0 NATURAL JOIN v0 WHERE ((~ (((((NULL)OR(t0.c0)))OR(v0.c2))))) UNION SELECT DISTINCT * FROM t0 NATURAL JOIN v0 WHERE ((NOT ((~ (((((NULL)OR(t0.c0)))OR(v0.c2))))))) UNION SELECT DISTINCT * FROM t0 NATURAL JOIN v0 WHERE ((((~ (((((NULL)OR(t0.c0)))OR(v0.c2))))) ISNULL));
SELECT DISTINCT * FROM t0 NATURAL JOIN v0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE (((t0.c0)>=(t0.c0)) COLLATE RTRIM) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT (((t0.c0)>=(t0.c0)) COLLATE RTRIM))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE (((((t0.c0)>=(t0.c0)) COLLATE RTRIM) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL v0.c1 FROM v0 GROUP BY v0.c1;
SELECT v0.c1 FROM v0 NOT INDEXED GROUP BY v0.c1 HAVING COUNT(MAX(v0.c2)) UNION ALL SELECT ALL v0.c1 FROM v0 GROUP BY v0.c1 HAVING (NOT (COUNT(MAX(v0.c2)))) UNION ALL SELECT v0.c1 FROM v0 GROUP BY v0.c1 HAVING ((COUNT(MAX(v0.c2))) ISNULL);
SELECT ALL * FROM t0;
SELECT * FROM t0 WHERE (x'') UNION ALL SELECT ALL * FROM t0 WHERE ((NOT (x''))) UNION ALL SELECT ALL * FROM t0 WHERE (((x'') ISNULL));
SELECT ALL * FROM t0;
SELECT DISTINCT t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0 WHERE (((~ (t0.c0)) IN ())) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((NOT (((~ (t0.c0)) IN ())))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE (((((~ (t0.c0)) IN ())) ISNULL));
SELECT DISTINCT t0.c0 FROM t0;
SELECT v0.c0, v0.c2 FROM v0, t0 GROUP BY v0.c0, v0.c2;
SELECT v0.c0, v0.c2 FROM v0, t0 WHERE (CASE WHEN v0.c0 COLLATE RTRIM THEN (('-1747207886') BETWEEN (t0.c0) AND (v0.c2)) WHEN '-1316146407' THEN v0.c0 COLLATE NOCASE WHEN ((t0.c0)<<(v0.c2)) THEN NULL END) GROUP BY v0.c0, v0.c2 UNION SELECT ALL v0.c0, v0.c2 FROM v0, t0 WHERE ((NOT (CASE WHEN v0.c0 COLLATE RTRIM THEN (('-1747207886') BETWEEN (t0.c0) AND (v0.c2)) WHEN '-1316146407' THEN v0.c0 COLLATE NOCASE WHEN ((t0.c0)<<(v0.c2)) THEN NULL END))) GROUP BY v0.c0, v0.c2 UNION SELECT v0.c0, v0.c2 FROM v0, t0 WHERE (((CASE WHEN v0.c0 COLLATE RTRIM THEN (('-1747207886') BETWEEN (t0.c0) AND (v0.c2)) WHEN '-1316146407' THEN v0.c0 COLLATE NOCASE WHEN ((t0.c0)<<(v0.c2)) THEN NULL END) ISNULL)) GROUP BY v0.c0, v0.c2;
SELECT v0.c0, v0.c2 FROM v0, t0 GROUP BY v0.c0, v0.c2;
SELECT ALL v0.c1, v0.c0 FROM v0 GROUP BY v0.c1, v0.c0;
SELECT v0.c1, v0.c0 FROM v0 GROUP BY v0.c1, v0.c0 HAVING v0.c0 UNION ALL SELECT ALL v0.c1, v0.c0 FROM v0 NOT INDEXED GROUP BY v0.c1, v0.c0 HAVING (NOT (v0.c0)) UNION ALL SELECT ALL v0.c1, v0.c0 FROM v0 GROUP BY v0.c1, v0.c0 HAVING ((v0.c0) ISNULL);
SELECT ALL v0.c1, v0.c0 FROM v0 GROUP BY v0.c1, v0.c0;
SELECT v0.c1, v0.c0 FROM v0 GROUP BY v0.c1, v0.c0 HAVING v0.c0 UNION ALL SELECT ALL v0.c1, v0.c0 FROM v0 NOT INDEXED GROUP BY v0.c1, v0.c0 HAVING (NOT (v0.c0)) UNION ALL SELECT ALL v0.c1, v0.c0 FROM v0 GROUP BY v0.c1, v0.c0 HAVING ((v0.c0) ISNULL);
SELECT ALL v0.c1, v0.c0 FROM v0 GROUP BY v0.c1, v0.c0;
SELECT * FROM t0 CROSS JOIN v0 ON CASE WHEN CASE v0.c2  WHEN v0.c2 THEN v0.c2 WHEN t0.c0 THEN 'G6' WHEN v0.c0 THEN v0.c0 ELSE v0.c1 END THEN v0.c0 WHEN 0.5606657767189935 THEN ((((v0.c1)AND(v0.c1)))AND(v0.c1)) WHEN ((t0.c0) NOT BETWEEN ('-1747207886') AND (v0.c1)) THEN CASE WHEN NULL THEN t0.c0 ELSE v0.c1 END END;
SELECT ALL * FROM t0 CROSS JOIN v0 ON CASE WHEN CASE v0.c2  WHEN v0.c2 THEN v0.c2 WHEN t0.c0 THEN 'G6' WHEN v0.c0 THEN v0.c0 ELSE v0.c1 END THEN v0.c0 WHEN 0.5606657767189935 THEN ((((v0.c1)AND(v0.c1)))AND(v0.c1)) WHEN ((t0.c0) NOT BETWEEN ('-1747207886') AND (v0.c1)) THEN CASE WHEN NULL THEN t0.c0 ELSE v0.c1 END END WHERE ((~ (t0.c0)) COLLATE BINARY) UNION ALL SELECT ALL * FROM t0 CROSS JOIN v0 ON CASE WHEN CASE v0.c2  WHEN v0.c2 THEN v0.c2 WHEN t0.c0 THEN 'G6' WHEN v0.c0 THEN v0.c0 ELSE v0.c1 END THEN v0.c0 WHEN 0.5606657767189935 THEN ((((v0.c1)AND(v0.c1)))AND(v0.c1)) WHEN ((t0.c0) NOT BETWEEN ('-1747207886') AND (v0.c1)) THEN CASE WHEN NULL THEN t0.c0 ELSE v0.c1 END END WHERE ((NOT ((~ (t0.c0)) COLLATE BINARY))) UNION ALL SELECT ALL * FROM t0 CROSS JOIN v0 ON CASE WHEN CASE v0.c2  WHEN v0.c2 THEN v0.c2 WHEN t0.c0 THEN 'G6' WHEN v0.c0 THEN v0.c0 ELSE v0.c1 END THEN v0.c0 WHEN 0.5606657767189935 THEN ((((v0.c1)AND(v0.c1)))AND(v0.c1)) WHEN ((t0.c0) NOT BETWEEN ('-1747207886') AND (v0.c1)) THEN CASE WHEN NULL THEN t0.c0 ELSE v0.c1 END END WHERE ((((~ (t0.c0)) COLLATE BINARY) ISNULL));
SELECT * FROM t0 CROSS JOIN v0 ON CASE WHEN CASE v0.c2  WHEN v0.c2 THEN v0.c2 WHEN t0.c0 THEN 'G6' WHEN v0.c0 THEN v0.c0 ELSE v0.c1 END THEN v0.c0 WHEN 0.5606657767189935 THEN ((((v0.c1)AND(v0.c1)))AND(v0.c1)) WHEN ((t0.c0) NOT BETWEEN ('-1747207886') AND (v0.c1)) THEN CASE WHEN NULL THEN t0.c0 ELSE v0.c1 END END;
SELECT DISTINCT t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0 WHERE ((NOT ((((t0.c0))>((t0.c0)))))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((NOT ((NOT ((((t0.c0))>((t0.c0)))))))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((((NOT ((((t0.c0))>((t0.c0)))))) ISNULL));
SELECT DISTINCT t0.c0 FROM t0;
SELECT ALL t0.c0, v0.c1 FROM v0, t0 GROUP BY t0.c0, v0.c1;
SELECT ALL t0.c0, v0.c1 FROM v0, t0 WHERE ((((UNICODE(t0.c0)))!=((json_insert(v0.c2, 0.8643044059915603, v0.c2))))) GROUP BY t0.c0, v0.c1 UNION SELECT t0.c0, v0.c1 FROM v0, t0 WHERE ((NOT ((((UNICODE(t0.c0)))<>((json_insert(v0.c2, 0.8643044059915603, v0.c2))))))) GROUP BY t0.c0, v0.c1 UNION SELECT ALL t0.c0, v0.c1 FROM v0, t0 WHERE ((((((UNICODE(t0.c0)))<>((json_insert(v0.c2, 0.8643044059915603, v0.c2))))) ISNULL)) GROUP BY t0.c0, v0.c1;
SELECT ALL v0.c2 FROM v0 GROUP BY v0.c2;
SELECT v0.c2 FROM v0 GROUP BY v0.c2 HAVING ((GROUP_CONCAT(COUNT(v0.c0))) NOT NULL) UNION ALL SELECT ALL v0.c2 FROM v0 GROUP BY v0.c2 HAVING (NOT (((GROUP_CONCAT(COUNT(v0.c0))) NOT NULL))) UNION ALL SELECT ALL v0.c2 FROM v0 GROUP BY v0.c2 HAVING ((((GROUP_CONCAT(COUNT(v0.c0))) NOT NULL)) ISNULL);
SELECT t0.c0 FROM t0;
SELECT ALL t0.c0 FROM t0 WHERE (((LIKELIHOOD(DISTINCT t0.c0, 0.29498771159998705)) IS FALSE)) UNION ALL SELECT t0.c0 FROM t0 WHERE ((NOT (((LIKELIHOOD(DISTINCT t0.c0, 0.29498771159998705)) IS FALSE)))) UNION ALL SELECT t0.c0 FROM t0 WHERE (((((LIKELIHOOD(DISTINCT t0.c0, 0.29498771159998705)) IS FALSE)) ISNULL));
SELECT t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0, v0;
SELECT DISTINCT t0.c0 FROM t0, v0 WHERE (UNLIKELY(((t0.c0) NOT BETWEEN (t0.c0) AND (0.3424097651588911)))) UNION SELECT DISTINCT t0.c0 FROM t0, v0 WHERE ((NOT (UNLIKELY(((t0.c0) NOT BETWEEN (t0.c0) AND (0.3424097651588911)))))) UNION SELECT DISTINCT t0.c0 FROM t0, v0 WHERE (((UNLIKELY(((t0.c0) NOT BETWEEN (t0.c0) AND (0.3424097651588911)))) ISNULL));
SELECT DISTINCT t0.c0 FROM t0, v0;
SELECT v0.c0, t0.c0, v0.c2 FROM v0 FULL OUTER JOIN t0 ON CASE ''  WHEN CASE WHEN '38317532' THEN t0.c0 WHEN v0.c1 THEN v0.c1 WHEN v0.c0 THEN 4.1700091241856614E18 END THEN (- (t0.c0)) WHEN CASE v0.c2  WHEN v0.c0 THEN t0.c0 ELSE v0.c0 END THEN 392948473 WHEN ((v0.c2) IS FALSE) THEN DATE(t0.c0, v0.c2, t0.c0, t0.c0, t0.c0) WHEN ((t0.c0) BETWEEN (v0.c2) AND ('392948473')) THEN (~ (t0.c0)) WHEN (t0.c0 IN ()) THEN (NOT (t0.c0)) END GROUP BY v0.c0, t0.c0, v0.c2;
SELECT v0.c0, t0.c0, v0.c2 FROM v0 FULL OUTER JOIN t0 ON CASE ''  WHEN CASE WHEN '38317532' THEN t0.c0 WHEN v0.c1 THEN v0.c1 WHEN v0.c0 THEN 4.1700091241856614E18 END THEN (- (t0.c0)) WHEN CASE v0.c2  WHEN v0.c0 THEN t0.c0 ELSE v0.c0 END THEN 392948473 WHEN ((v0.c2) IS FALSE) THEN DATE(t0.c0, v0.c2, t0.c0, t0.c0, t0.c0) WHEN ((t0.c0) BETWEEN (v0.c2) AND ('392948473')) THEN (~ (t0.c0)) WHEN (t0.c0 IN ()) THEN (NOT (t0.c0)) END WHERE ((NOT (((((((((v0.c2)AND(v0.c2)))AND(v0.c0)))AND(v0.c1)))OR(v0.c0))))) GROUP BY v0.c0, t0.c0, v0.c2 UNION SELECT ALL v0.c0, t0.c0, v0.c2 FROM v0 FULL OUTER JOIN t0 ON CASE ''  WHEN CASE WHEN '38317532' THEN t0.c0 WHEN v0.c1 THEN v0.c1 WHEN v0.c0 THEN 4.1700091241856614E18 END THEN (- (t0.c0)) WHEN CASE v0.c2  WHEN v0.c0 THEN t0.c0 ELSE v0.c0 END THEN 392948473 WHEN ((v0.c2) IS FALSE) THEN DATE(t0.c0, v0.c2, t0.c0, t0.c0, t0.c0) WHEN ((t0.c0) BETWEEN (v0.c2) AND ('392948473')) THEN (~ (t0.c0)) WHEN (t0.c0 IN ()) THEN (NOT (t0.c0)) END WHERE ((NOT ((NOT (((((((((v0.c2)AND(v0.c2)))AND(v0.c0)))AND(v0.c1)))OR(v0.c0))))))) GROUP BY v0.c0, t0.c0, v0.c2 UNION SELECT ALL v0.c0, t0.c0, v0.c2 FROM v0 FULL OUTER JOIN t0 ON CASE ''  WHEN CASE WHEN '38317532' THEN t0.c0 WHEN v0.c1 THEN v0.c1 WHEN v0.c0 THEN 4.1700091241856614E18 END THEN (- (t0.c0)) WHEN CASE v0.c2  WHEN v0.c0 THEN t0.c0 ELSE v0.c0 END THEN 392948473 WHEN ((v0.c2) IS FALSE) THEN DATE(t0.c0, v0.c2, t0.c0, t0.c0, t0.c0) WHEN ((t0.c0) BETWEEN (v0.c2) AND ('392948473')) THEN (~ (t0.c0)) WHEN (t0.c0 IN ()) THEN (NOT (t0.c0)) END WHERE ((((NOT (((((((((v0.c2)AND(v0.c2)))AND(v0.c0)))AND(v0.c1)))OR(v0.c0))))) ISNULL)) GROUP BY v0.c0, t0.c0, v0.c2;
SELECT v0.c0, t0.c0, v0.c2 FROM v0 FULL OUTER JOIN t0 ON CASE ''  WHEN CASE WHEN '38317532' THEN t0.c0 WHEN v0.c1 THEN v0.c1 WHEN v0.c0 THEN 4.1700091241856614E18 END THEN (- (t0.c0)) WHEN CASE v0.c2  WHEN v0.c0 THEN t0.c0 ELSE v0.c0 END THEN 392948473 WHEN ((v0.c2) IS FALSE) THEN DATE(t0.c0, v0.c2, t0.c0, t0.c0, t0.c0) WHEN ((t0.c0) BETWEEN (v0.c2) AND ('392948473')) THEN (~ (t0.c0)) WHEN (t0.c0 IN ()) THEN (NOT (t0.c0)) END GROUP BY v0.c0, t0.c0, v0.c2;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((COUNT(*)) NOT BETWEEN (MIN(t0.c0)) AND (AVG(x''))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (((COUNT(*)) NOT BETWEEN (MIN(t0.c0)) AND (AVG(x''))))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((((COUNT(*)) NOT BETWEEN (MIN(t0.c0)) AND (AVG(x'')))) ISNULL);
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((COUNT(*)) NOT BETWEEN (MIN(t0.c0)) AND (AVG(x''))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (((COUNT(*)) NOT BETWEEN (MIN(t0.c0)) AND (AVG(x''))))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((((COUNT(*)) NOT BETWEEN (MIN(t0.c0)) AND (AVG(x'')))) ISNULL);
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT * FROM t0, v0;
SELECT ALL * FROM t0, v0 WHERE ((((v0.c2)) BETWEEN ((x'' COLLATE NOCASE)) AND ((LIKELY(v0.c2))))) UNION ALL SELECT ALL * FROM t0, v0 WHERE ((NOT ((((v0.c2)) BETWEEN ((x'' COLLATE NOCASE)) AND ((LIKELY(v0.c2))))))) UNION ALL SELECT ALL * FROM t0, v0 WHERE ((((((v0.c2)) BETWEEN ((x'' COLLATE NOCASE)) AND ((LIKELY(v0.c2))))) ISNULL));
SELECT * FROM t0, v0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE ((((t0.c0)) NOT BETWEEN ((CAST(t0.c0 AS REAL))) AND ((((t0.c0)<>(0.19204410147939954)))))) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT ((((t0.c0)) NOT BETWEEN ((CAST(t0.c0 AS REAL))) AND ((((t0.c0)<>(0.19204410147939954)))))))) UNION SELECT DISTINCT * FROM t0 WHERE ((((((t0.c0)) NOT BETWEEN ((CAST(t0.c0 AS REAL))) AND ((((t0.c0)!=(0.19204410147939954)))))) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT v0.c2, v0.c1 FROM v0, t0 GROUP BY v0.c2, v0.c1;
SELECT v0.c2, v0.c1 FROM v0, t0 WHERE ((~ (CAST(v0.c1 AS TEXT)))) GROUP BY v0.c2, v0.c1 UNION SELECT ALL v0.c2, v0.c1 FROM v0, t0 WHERE ((NOT ((~ (CAST(v0.c1 AS TEXT)))))) GROUP BY v0.c2, v0.c1 UNION SELECT ALL v0.c2, v0.c1 FROM v0, t0 WHERE ((((~ (CAST(v0.c1 AS TEXT)))) ISNULL)) GROUP BY v0.c2, v0.c1;
SELECT v0.c2, v0.c1 FROM v0, t0 GROUP BY v0.c2, v0.c1;
SELECT ALL v0.c2, v0.c1, v0.c0 FROM v0 GROUP BY v0.c2, v0.c1, v0.c0;
SELECT v0.c2, v0.c1, v0.c0 FROM v0 GROUP BY v0.c2, v0.c1, v0.c0 HAVING CASE CASE SUM(v0.c1)  WHEN v0.c2 THEN AVG(COUNT(*)) END  WHEN (((v0.c2))<>((v0.c2))) THEN ((((v0.c0)AND(GROUP_CONCAT(COUNT(v0.c0)))))AND(MAX(GROUP_CONCAT(MIN(COUNT(*)))))) WHEN (~ (MIN(COUNT(SUM(SUM(MIN(v0.c2))))))) THEN '' WHEN MIN(v0.c0) THEN MAX(COUNT(*)) END UNION ALL SELECT ALL v0.c2, v0.c1, v0.c0 FROM v0 GROUP BY v0.c2, v0.c1, v0.c0 HAVING (NOT (CASE CASE SUM(v0.c1)  WHEN v0.c2 THEN AVG(COUNT(*)) END  WHEN (((v0.c2))!=((v0.c2))) THEN ((((v0.c0)AND(GROUP_CONCAT(COUNT(v0.c0)))))AND(MAX(GROUP_CONCAT(MIN(COUNT(*)))))) WHEN (~ (MIN(COUNT(SUM(SUM(MIN(v0.c2))))))) THEN '' WHEN MIN(v0.c0) THEN MAX(COUNT(*)) END)) UNION ALL SELECT ALL v0.c2, v0.c1, v0.c0 FROM v0 GROUP BY v0.c2, v0.c1, v0.c0 HAVING ((CASE CASE SUM(v0.c1)  WHEN v0.c2 THEN AVG(COUNT(*)) END  WHEN (((v0.c2))!=((v0.c2))) THEN ((((v0.c0)AND(GROUP_CONCAT(COUNT(v0.c0)))))AND(MAX(GROUP_CONCAT(MIN(COUNT(*)))))) WHEN (~ (MIN(COUNT(SUM(SUM(MIN(v0.c2))))))) THEN '' WHEN MIN(v0.c0) THEN MAX(COUNT(*)) END) ISNULL);
SELECT t0.c0, v0.c1, v0.c2, v0.c0 FROM v0 CROSS JOIN t0 ON ((((((((v0.c1)OR(v0.c2)))AND(v0.c0)))OR((v0.c2 IN (v0.c2)))))OR(((((t0.c0)AND(v0.c1)))OR(v0.c2))));
SELECT ALL t0.c0, v0.c1, v0.c2, v0.c0 FROM v0 CROSS JOIN t0 ON ((((((((v0.c1)OR(v0.c2)))AND(v0.c0)))OR((v0.c2 IN (v0.c2)))))OR(((((t0.c0)AND(v0.c1)))OR(v0.c2)))) WHERE ((((v0.c1)) BETWEEN ((t0.c0)) AND ((json_patch(t0.c0, v0.c2))))) UNION ALL SELECT ALL t0.c0, v0.c1, v0.c2, v0.c0 FROM v0 CROSS JOIN t0 ON ((((((((v0.c1)OR(v0.c2)))AND(v0.c0)))OR((v0.c2 IN (v0.c2)))))OR(((((t0.c0)AND(v0.c1)))OR(v0.c2)))) WHERE ((NOT ((((v0.c1)) BETWEEN ((t0.c0)) AND ((json_patch(t0.c0, v0.c2))))))) UNION ALL SELECT ALL t0.c0, v0.c1, v0.c2, v0.c0 FROM v0 CROSS JOIN t0 ON ((((((((v0.c1)OR(v0.c2)))AND(v0.c0)))OR((v0.c2 IN (v0.c2)))))OR(((((t0.c0)AND(v0.c1)))OR(v0.c2)))) WHERE ((((((v0.c1)) BETWEEN ((t0.c0)) AND ((json_patch(t0.c0, v0.c2))))) ISNULL));
SELECT DISTINCT t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0 WHERE (NULL) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((NOT (NULL))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE (((NULL) ISNULL));
SELECT DISTINCT t0.c0 FROM t0;
SELECT v0.c1, t0.c0, v0.c0 FROM t0, v0 NOT INDEXED GROUP BY v0.c1, t0.c0, v0.c0;
SELECT ALL v0.c1, t0.c0, v0.c0 FROM t0, v0 WHERE (((x'') NOT NULL)) GROUP BY v0.c1, t0.c0, v0.c0 UNION SELECT v0.c1, t0.c0, v0.c0 FROM t0, v0 WHERE ((NOT (((x'') NOT NULL)))) GROUP BY v0.c1, t0.c0, v0.c0 UNION SELECT ALL v0.c1, t0.c0, v0.c0 FROM t0, v0 WHERE (((((x'') NOT NULL)) ISNULL)) GROUP BY v0.c1, t0.c0, v0.c0;
SELECT v0.c1, t0.c0, v0.c0 FROM t0, v0 NOT INDEXED GROUP BY v0.c1, t0.c0, v0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((SUM(t0.c0))OR(((((COUNT(*))OR(MIN(SUM(AVG(x'f243'))))))AND(AVG(GROUP_CONCAT(t0.c0)))))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (((SUM(t0.c0))OR(((((COUNT(*))OR(MIN(SUM(AVG(x'f243'))))))AND(AVG(GROUP_CONCAT(t0.c0)))))))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((((SUM(t0.c0))OR(((((COUNT(*))OR(MIN(SUM(AVG(x'f243'))))))AND(AVG(GROUP_CONCAT(t0.c0))))))) ISNULL);
SELECT ALL * FROM v0;
SELECT ALL * FROM v0 WHERE ('Gk') UNION ALL SELECT ALL * FROM v0 WHERE ((NOT ('Gk'))) UNION ALL SELECT * FROM v0 WHERE ((('Gk') ISNULL));
SELECT ALL * FROM v0;
SELECT DISTINCT * FROM t0, v0;
SELECT DISTINCT * FROM t0, v0 WHERE (((((v0.c0)IS NOT(v0.c0))) NOT BETWEEN ((((v0.c0)) BETWEEN ((v0.c2)) AND ((t0.c0)))) AND (CASE WHEN v0.c1 THEN v0.c0 END))) UNION SELECT DISTINCT * FROM t0, v0 WHERE ((NOT (((((v0.c0)IS NOT(v0.c0))) NOT BETWEEN ((((v0.c0)) BETWEEN ((v0.c2)) AND ((t0.c0)))) AND (CASE WHEN v0.c1 THEN v0.c0 END))))) UNION SELECT DISTINCT * FROM t0, v0 WHERE (((((((v0.c0)IS NOT(v0.c0))) NOT BETWEEN ((((v0.c0)) BETWEEN ((v0.c2)) AND ((t0.c0)))) AND (CASE WHEN v0.c1 THEN v0.c0 END))) ISNULL));
SELECT DISTINCT * FROM t0, v0;
SELECT ALL v0.c1, v0.c2, v0.c0 FROM v0, t0 GROUP BY v0.c1, v0.c2, v0.c0;
SELECT v0.c1, v0.c2, v0.c0 FROM v0, t0 WHERE (((ABS(t0.c0)) IS FALSE)) GROUP BY v0.c1, v0.c2, v0.c0 UNION SELECT v0.c1, v0.c2, v0.c0 FROM v0, t0 WHERE ((NOT (((ABS(t0.c0)) IS FALSE)))) GROUP BY v0.c1, v0.c2, v0.c0 UNION SELECT v0.c1, v0.c2, v0.c0 FROM v0, t0 WHERE (((((ABS(t0.c0)) IS FALSE)) ISNULL)) GROUP BY v0.c1, v0.c2, v0.c0;
SELECT ALL v0.c1, v0.c2, v0.c0 FROM v0, t0 GROUP BY v0.c1, v0.c2, v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING GROUP_CONCAT(COUNT(*)) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (GROUP_CONCAT(COUNT(*)))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((GROUP_CONCAT(COUNT(*))) ISNULL);
SELECT TOTAL(((((t0.c0)OR('')))AND(((t0.c0) NOTNULL)))) FROM t0;
SELECT t0.c0 FROM t0 INDEXED BY i13;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))OR(CAST(t0.c0 AS TEXT))))OR(((t0.c0) IS FALSE)))) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))OR(CAST(t0.c0 AS TEXT))))OR(((t0.c0) IS FALSE)))))) UNION SELECT DISTINCT * FROM t0 WHERE (((((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))OR(CAST(t0.c0 AS TEXT))))OR(((t0.c0) IS FALSE)))) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT v0.c1, v0.c2, v0.c0 FROM v0 GROUP BY v0.c1, v0.c2, v0.c0;
SELECT v0.c1, v0.c2, v0.c0 FROM v0 NOT INDEXED WHERE ((((+ (v0.c0)))<<(((((((((v0.c0)AND(v0.c2)))AND(v0.c1)))AND(v0.c2)))AND(v0.c1))))) GROUP BY v0.c1, v0.c2, v0.c0 UNION SELECT v0.c1, v0.c2, v0.c0 FROM v0 WHERE ((NOT ((((+ (v0.c0)))<<(((((((((v0.c0)AND(v0.c2)))AND(v0.c1)))AND(v0.c2)))AND(v0.c1))))))) GROUP BY v0.c1, v0.c2, v0.c0 UNION SELECT v0.c1, v0.c2, v0.c0 FROM v0 WHERE ((((((+ (v0.c0)))<<(((((((((v0.c0)AND(v0.c2)))AND(v0.c1)))AND(v0.c2)))AND(v0.c1))))) ISNULL)) GROUP BY v0.c1, v0.c2, v0.c0;
SELECT v0.c1, v0.c2, v0.c0 FROM v0 GROUP BY v0.c1, v0.c2, v0.c0;
SELECT ALL t0.c0, v0.c0, v0.c1 FROM t0, v0 GROUP BY t0.c0, v0.c0, v0.c1;
SELECT ALL t0.c0, v0.c0, v0.c1 FROM t0, v0 GROUP BY t0.c0, v0.c0, v0.c1 HAVING TOTAL((((v0.c2))>=((t0.c0)))) UNION ALL SELECT ALL t0.c0, v0.c0, v0.c1 FROM t0, v0 GROUP BY t0.c0, v0.c0, v0.c1 HAVING (NOT (TOTAL((((v0.c2))>=((t0.c0)))))) UNION ALL SELECT t0.c0, v0.c0, v0.c1 FROM t0, v0 GROUP BY t0.c0, v0.c0, v0.c1 HAVING ((TOTAL((((v0.c2))>=((t0.c0))))) ISNULL);
SELECT ALL t0.c0, v0.c0, v0.c1 FROM t0, v0 GROUP BY t0.c0, v0.c0, v0.c1;
SELECT ALL t0.c0, v0.c0, v0.c1 FROM t0, v0 GROUP BY t0.c0, v0.c0, v0.c1 HAVING TOTAL((((v0.c2))>=((t0.c0)))) UNION ALL SELECT ALL t0.c0, v0.c0, v0.c1 FROM t0, v0 GROUP BY t0.c0, v0.c0, v0.c1 HAVING (NOT (TOTAL((((v0.c2))>=((t0.c0)))))) UNION ALL SELECT t0.c0, v0.c0, v0.c1 FROM t0, v0 GROUP BY t0.c0, v0.c0, v0.c1 HAVING ((TOTAL((((v0.c2))>=((t0.c0))))) ISNULL);
SELECT ALL t0.c0, v0.c0, v0.c1 FROM t0, v0 GROUP BY t0.c0, v0.c0, v0.c1;
SELECT * FROM t0;
SELECT * FROM t0 WHERE (CAST(t0.c0 COLLATE RTRIM AS NUMERIC)) UNION ALL SELECT * FROM t0 WHERE ((NOT (CAST(t0.c0 COLLATE RTRIM AS NUMERIC)))) UNION ALL SELECT ALL * FROM t0 WHERE (((CAST(t0.c0 COLLATE RTRIM AS NUMERIC)) ISNULL));
SELECT * FROM t0;
SELECT DISTINCT v0.c1, v0.c0, v0.c2, t0.c0 FROM v0, t0;
SELECT DISTINCT v0.c1, v0.c0, v0.c2, t0.c0 FROM v0, t0 WHERE (0x77f580c0) UNION SELECT DISTINCT v0.c1, v0.c0, v0.c2, t0.c0 FROM v0, t0 WHERE ((NOT (0X77f580c0))) UNION SELECT DISTINCT v0.c1, v0.c0, v0.c2, t0.c0 FROM v0, t0 WHERE (((0x77f580c0) ISNULL));
SELECT DISTINCT v0.c1, v0.c0, v0.c2, t0.c0 FROM v0, t0;
SELECT v0.c1 FROM v0 NATURAL JOIN t0 GROUP BY v0.c1;
SELECT ALL v0.c1 FROM v0 NATURAL JOIN t0 WHERE ((((- (v0.c1))) NOT BETWEEN (((t0.c0) IS TRUE)) AND (CAST(t0.c0 AS REAL)))) GROUP BY v0.c1 UNION SELECT v0.c1 FROM v0 NATURAL JOIN t0 WHERE ((NOT ((((- (v0.c1))) NOT BETWEEN (((t0.c0) IS TRUE)) AND (CAST(t0.c0 AS REAL)))))) GROUP BY v0.c1 UNION SELECT ALL v0.c1 FROM v0 NATURAL JOIN t0 WHERE ((((((- (v0.c1))) NOT BETWEEN (((t0.c0) IS TRUE)) AND (CAST(t0.c0 AS REAL)))) ISNULL)) GROUP BY v0.c1;
SELECT v0.c1 FROM v0 NATURAL JOIN t0 GROUP BY v0.c1;
SELECT v0.c2, v0.c0 FROM v0 GROUP BY v0.c2, v0.c0;
SELECT v0.c2, v0.c0 FROM v0 GROUP BY v0.c2, v0.c0 HAVING AVG(MAX(v0.c0)) UNION ALL SELECT ALL v0.c2, v0.c0 FROM v0 GROUP BY v0.c2, v0.c0 HAVING (NOT (AVG(MAX(v0.c0)))) UNION ALL SELECT v0.c2, v0.c0 FROM v0 GROUP BY v0.c2, v0.c0 HAVING ((AVG(MAX(v0.c0))) ISNULL);
SELECT ALL t0.c0, v0.c1, v0.c2, v0.c0 FROM t0, v0;
SELECT t0.c0, v0.c1, v0.c2, v0.c0 FROM t0, v0 WHERE (((((x'22cc') NOTNULL)) NOT BETWEEN (((((v0.c2)OR(t0.c0)))AND(x''))) AND ((- (v0.c2))))) UNION ALL SELECT t0.c0, v0.c1, v0.c2, v0.c0 FROM t0, v0 WHERE ((NOT (((((x'22cc') NOTNULL)) NOT BETWEEN (((((v0.c2)OR(t0.c0)))AND(x''))) AND ((- (v0.c2))))))) UNION ALL SELECT ALL t0.c0, v0.c1, v0.c2, v0.c0 FROM t0, v0 WHERE (((((((x'22cc') NOTNULL)) NOT BETWEEN (((((v0.c2)OR(t0.c0)))AND(x''))) AND ((- (v0.c2))))) ISNULL));
SELECT ALL t0.c0, v0.c1, v0.c2, v0.c0 FROM t0, v0;
SELECT DISTINCT v0.c1 FROM v0 INDEXED BY i13, t0;
SELECT v0.c2, v0.c0, t0.c0 FROM v0, t0 GROUP BY v0.c2, v0.c0, t0.c0;
SELECT v0.c2, v0.c0, t0.c0 FROM v0, t0 WHERE (json_array_length(((v0.c2)<=(t0.c0)))) GROUP BY v0.c2, v0.c0, t0.c0 UNION SELECT ALL v0.c2, v0.c0, t0.c0 FROM v0, t0 WHERE ((NOT (json_array_length(((v0.c2)<=(t0.c0)))))) GROUP BY v0.c2, v0.c0, t0.c0 UNION SELECT v0.c2, v0.c0, t0.c0 FROM v0, t0 WHERE (((json_array_length(((v0.c2)<=(t0.c0)))) ISNULL)) GROUP BY v0.c2, v0.c0, t0.c0;
SELECT v0.c2, v0.c0, t0.c0 FROM v0, t0 GROUP BY v0.c2, v0.c0, t0.c0;
SELECT v0.c1, v0.c2, v0.c0 FROM t0 RIGHT OUTER JOIN v0 ON (NOT (((v0.c0) NOT BETWEEN (t0.c0) AND ('')))) GROUP BY v0.c1, v0.c2, v0.c0;
SELECT ALL v0.c1, v0.c2, v0.c0 FROM t0 RIGHT OUTER JOIN v0 ON (NOT (((v0.c0) NOT BETWEEN (t0.c0) AND ('')))) GROUP BY v0.c1, v0.c2, v0.c0 HAVING TOTAL(SUM(TOTAL(t0.c0))) UNION ALL SELECT ALL v0.c1, v0.c2, v0.c0 FROM t0 RIGHT OUTER JOIN v0 ON (NOT (((v0.c0) NOT BETWEEN (t0.c0) AND ('')))) GROUP BY v0.c1, v0.c2, v0.c0 HAVING (NOT (TOTAL(SUM(TOTAL(t0.c0))))) UNION ALL SELECT ALL v0.c1, v0.c2, v0.c0 FROM t0 RIGHT OUTER JOIN v0 ON (NOT (((v0.c0) NOT BETWEEN (t0.c0) AND ('')))) GROUP BY v0.c1, v0.c2, v0.c0 HAVING ((TOTAL(SUM(TOTAL(t0.c0)))) ISNULL);
SELECT t0.c0 FROM t0;
SELECT ALL t0.c0 FROM t0 WHERE (CAST((t0.c0 IN (t0.c0)) AS NUMERIC)) UNION ALL SELECT t0.c0 FROM t0 WHERE ((NOT (CAST((t0.c0 IN (t0.c0)) AS NUMERIC)))) UNION ALL SELECT t0.c0 FROM t0 WHERE (((CAST((t0.c0 IN (t0.c0)) AS NUMERIC)) ISNULL));
SELECT t0.c0 FROM t0;
SELECT DISTINCT v0.c0, v0.c1, v0.c2 FROM v0;
SELECT DISTINCT v0.c0, v0.c1, v0.c2 FROM v0 WHERE (((CAST(v0.c1 AS INTEGER))IS NOT((NOT (v0.c0))))) UNION SELECT DISTINCT v0.c0, v0.c1, v0.c2 FROM v0 WHERE ((NOT (((CAST(v0.c1 AS INTEGER))IS NOT((NOT (v0.c0))))))) UNION SELECT DISTINCT v0.c0, v0.c1, v0.c2 FROM v0 WHERE (((((CAST(v0.c1 AS INTEGER))IS NOT((NOT (v0.c0))))) ISNULL));
SELECT DISTINCT v0.c0, v0.c1, v0.c2 FROM v0;
SELECT ALL t0.c0, v0.c0 FROM v0, t0 GROUP BY t0.c0, v0.c0;
SELECT t0.c0, v0.c0 FROM v0, t0 WHERE (((((((t0.c0)AND(v0.c0)))AND(v0.c2)))|((v0.c2 IN ())))) GROUP BY t0.c0, v0.c0 UNION SELECT t0.c0, v0.c0 FROM v0, t0 WHERE ((NOT (((((((t0.c0)AND(v0.c0)))AND(v0.c2)))|((v0.c2 IN ())))))) GROUP BY t0.c0, v0.c0 UNION SELECT t0.c0, v0.c0 FROM v0, t0 WHERE (((((((((t0.c0)AND(v0.c0)))AND(v0.c2)))|((v0.c2 IN ())))) ISNULL)) GROUP BY t0.c0, v0.c0;
SELECT ALL t0.c0, v0.c0 FROM v0, t0 GROUP BY t0.c0, v0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((SUM(TOTAL(TOTAL(t0.c0))))GLOB(CAST(t0.c0 AS BLOB))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (((SUM(TOTAL(TOTAL(t0.c0))))GLOB(CAST(t0.c0 AS BLOB))))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((((SUM(TOTAL(TOTAL(t0.c0))))GLOB(CAST(t0.c0 AS BLOB)))) ISNULL);
SELECT ALL * FROM t0;
SELECT ALL * FROM t0 WHERE (((t0.c0 COLLATE BINARY) BETWEEN (((t0.c0) ISNULL)) AND ((t0.c0 IN ())))) UNION ALL SELECT ALL * FROM t0 WHERE ((NOT (((t0.c0 COLLATE BINARY) BETWEEN (((t0.c0) ISNULL)) AND ((t0.c0 IN ())))))) UNION ALL SELECT ALL * FROM t0 WHERE (((((t0.c0 COLLATE BINARY) BETWEEN (((t0.c0) ISNULL)) AND ((t0.c0 IN ())))) ISNULL));
SELECT ALL * FROM t0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (LIKELY(DISTINCT -2.07409377E9)) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (LIKELY(DISTINCT -2.07409377E9)))) UNION SELECT DISTINCT * FROM t0 WHERE (((LIKELY(DISTINCT -2.07409377E9)) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT ALL t0.c0 FROM v0, t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM v0, t0 WHERE ((((((v0.c1))==((t0.c0)))) ISNULL)) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM v0, t0 WHERE ((NOT ((((((v0.c1))=((t0.c0)))) ISNULL)))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM v0, t0 WHERE ((((((((v0.c1))==((t0.c0)))) ISNULL)) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM v0, t0 GROUP BY t0.c0;
SELECT ALL v0.c1, v0.c0, v0.c2, t0.c0 FROM v0, t0 GROUP BY v0.c1, v0.c0, v0.c2, t0.c0;
SELECT ALL v0.c1, v0.c0, v0.c2, t0.c0 FROM v0, t0 GROUP BY v0.c1, v0.c0, v0.c2, t0.c0 HAVING COUNT(v0.c0) UNION ALL SELECT v0.c1, v0.c0, v0.c2, t0.c0 FROM v0, t0 GROUP BY v0.c1, v0.c0, v0.c2, t0.c0 HAVING (NOT (COUNT(v0.c0))) UNION ALL SELECT v0.c1, v0.c0, v0.c2, t0.c0 FROM v0, t0 GROUP BY v0.c1, v0.c0, v0.c2, t0.c0 HAVING ((COUNT(v0.c0)) ISNULL);
SELECT ALL v0.c1, v0.c0, v0.c2, t0.c0 FROM v0, t0 GROUP BY v0.c1, v0.c0, v0.c2, t0.c0;
SELECT ALL v0.c1, v0.c0, v0.c2, t0.c0 FROM v0, t0 GROUP BY v0.c1, v0.c0, v0.c2, t0.c0 HAVING COUNT(v0.c0) UNION ALL SELECT v0.c1, v0.c0, v0.c2, t0.c0 FROM v0, t0 GROUP BY v0.c1, v0.c0, v0.c2, t0.c0 HAVING (NOT (COUNT(v0.c0))) UNION ALL SELECT v0.c1, v0.c0, v0.c2, t0.c0 FROM v0, t0 GROUP BY v0.c1, v0.c0, v0.c2, t0.c0 HAVING ((COUNT(v0.c0)) ISNULL);
SELECT ALL v0.c1, v0.c0, v0.c2, t0.c0 FROM v0, t0 GROUP BY v0.c1, v0.c0, v0.c2, t0.c0;
SELECT * FROM v0, t0;
SELECT ALL * FROM v0, t0 WHERE ((((v0.c2 IN (v0.c0, v0.c0)))||(v0.c0))) UNION ALL SELECT ALL * FROM v0, t0 WHERE ((NOT ((((v0.c2 IN (v0.c0, v0.c0)))||(v0.c0))))) UNION ALL SELECT ALL * FROM v0, t0 WHERE ((((((v0.c2 IN (v0.c0, v0.c0)))||(v0.c0))) ISNULL));
SELECT * FROM v0, t0;
SELECT DISTINCT v0.c2, v0.c0, t0.c0, v0.c1 FROM t0 INNER JOIN v0 ON ((TRIM(v0.c2, v0.c1)) NOT NULL);
SELECT DISTINCT v0.c2, v0.c0, t0.c0, v0.c1 FROM t0 INNER JOIN v0 ON ((TRIM(v0.c2, v0.c1)) NOT NULL) WHERE (((((t0.c0)+(t0.c0))) ISNULL)) UNION SELECT DISTINCT v0.c2, v0.c0, t0.c0, v0.c1 FROM t0 INNER JOIN v0 ON ((TRIM(v0.c2, v0.c1)) NOT NULL) WHERE ((NOT (((((t0.c0)+(t0.c0))) ISNULL)))) UNION SELECT DISTINCT v0.c2, v0.c0, t0.c0, v0.c1 FROM t0 INNER JOIN v0 ON ((TRIM(v0.c2, v0.c1)) NOT NULL) WHERE (((((((t0.c0)+(t0.c0))) ISNULL)) ISNULL));
SELECT DISTINCT v0.c2, v0.c0, t0.c0, v0.c1 FROM t0 INNER JOIN v0 ON ((TRIM(v0.c2, v0.c1)) NOT NULL);
SELECT ALL v0.c2, t0.c0, v0.c0, v0.c1 FROM t0 NATURAL JOIN v0 GROUP BY v0.c2, t0.c0, v0.c0, v0.c1;
SELECT v0.c2, t0.c0, v0.c0, v0.c1 FROM t0 NATURAL JOIN v0 WHERE ((((+ (v0.c0)))>>(((v0.c0) BETWEEN (t0.c0) AND (t0.c0))))) GROUP BY v0.c2, t0.c0, v0.c0, v0.c1 UNION SELECT ALL v0.c2, t0.c0, v0.c0, v0.c1 FROM t0 NATURAL JOIN v0 WHERE ((NOT ((((+ (v0.c0)))>>(((v0.c0) BETWEEN (t0.c0) AND (t0.c0))))))) GROUP BY v0.c2, t0.c0, v0.c0, v0.c1 UNION SELECT v0.c2, t0.c0, v0.c0, v0.c1 FROM t0 NATURAL JOIN v0 WHERE ((((((+ (v0.c0)))>>(((v0.c0) BETWEEN (t0.c0) AND (t0.c0))))) ISNULL)) GROUP BY v0.c2, t0.c0, v0.c0, v0.c1;
SELECT ALL v0.c2, t0.c0, v0.c0, v0.c1 FROM t0 NATURAL JOIN v0 GROUP BY v0.c2, t0.c0, v0.c0, v0.c1;
SELECT v0.c1 FROM v0, t0 GROUP BY v0.c1;
SELECT ALL v0.c1 FROM v0, t0 GROUP BY v0.c1 HAVING SUBSTR(AVG(v0.c1), (t0.c0 IN (x'2e36', t0.c0))) UNION ALL SELECT ALL v0.c1 FROM v0, t0 GROUP BY v0.c1 HAVING (NOT (SUBSTR(AVG(v0.c1), (t0.c0 IN (x'2e36', t0.c0))))) UNION ALL SELECT v0.c1 FROM v0, t0 GROUP BY v0.c1 HAVING ((SUBSTR(AVG(v0.c1), (t0.c0 IN (x'2e36', t0.c0)))) ISNULL);
SELECT v0.c1 FROM v0, t0 GROUP BY v0.c1;
SELECT ALL v0.c1 FROM v0, t0 GROUP BY v0.c1 HAVING SUBSTR(AVG(v0.c1), (t0.c0 IN (x'2e36', t0.c0))) UNION ALL SELECT ALL v0.c1 FROM v0, t0 GROUP BY v0.c1 HAVING (NOT (SUBSTR(AVG(v0.c1), (t0.c0 IN (x'2e36', t0.c0))))) UNION ALL SELECT v0.c1 FROM v0, t0 GROUP BY v0.c1 HAVING ((SUBSTR(AVG(v0.c1), (t0.c0 IN (x'2e36', t0.c0)))) ISNULL);
SELECT v0.c1 FROM v0, t0 GROUP BY v0.c1;
SELECT * FROM v0 CROSS JOIN t0 ON CASE ((v0.c1) NOT NULL)  WHEN (v0.c2 IN ()) THEN 0xffffffffa3b4128a ELSE (t0.c0 IN ()) END;
SELECT * FROM v0 CROSS JOIN t0 ON CASE ((v0.c1) NOT NULL)  WHEN (v0.c2 IN ()) THEN 0xffffffffa3b4128a ELSE (t0.c0 IN ()) END WHERE (t0.c0) UNION ALL SELECT * FROM v0 CROSS JOIN t0 ON CASE ((v0.c1) NOT NULL)  WHEN (v0.c2 IN ()) THEN 0xffffffffa3b4128a ELSE (t0.c0 IN ()) END WHERE ((NOT (t0.c0))) UNION ALL SELECT ALL * FROM v0 CROSS JOIN t0 ON CASE ((v0.c1) NOT NULL)  WHEN (v0.c2 IN ()) THEN 0xffffffffa3b4128a ELSE (t0.c0 IN ()) END WHERE (((t0.c0) ISNULL));
SELECT * FROM v0 CROSS JOIN t0 ON CASE ((v0.c1) NOT NULL)  WHEN (v0.c2 IN ()) THEN 0xffffffffa3b4128a ELSE (t0.c0 IN ()) END;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE ((((((v0.c2 IN ()))OR(((v0.c2) BETWEEN (v0.c0) AND (v0.c2)))))AND(((((((((v0.c2)OR(v0.c1)))AND(v0.c2)))OR(v0.c0)))AND(v0.c1))))) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT ((((((v0.c2 IN ()))OR(((v0.c2) BETWEEN (v0.c0) AND (v0.c2)))))AND(((((((((v0.c2)OR(v0.c1)))AND(v0.c2)))OR(v0.c0)))AND(v0.c1))))))) UNION SELECT DISTINCT * FROM v0 WHERE ((((((((v0.c2 IN ()))OR(((v0.c2) BETWEEN (v0.c0) AND (v0.c2)))))AND(((((((((v0.c2)OR(v0.c1)))AND(v0.c2)))OR(v0.c0)))AND(v0.c1))))) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (v0.c0) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT (v0.c0))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((v0.c0) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c2, v0.c0, v0.c1, t0.c0 FROM t0, v0 GROUP BY v0.c2, v0.c0, v0.c1, t0.c0;
SELECT ALL v0.c2, v0.c0, v0.c1, t0.c0 FROM t0, v0 GROUP BY v0.c2, v0.c0, v0.c1, t0.c0 HAVING v0.c2 UNION ALL SELECT ALL v0.c2, v0.c0, v0.c1, t0.c0 FROM t0, v0 GROUP BY v0.c2, v0.c0, v0.c1, t0.c0 HAVING (NOT (v0.c2)) UNION ALL SELECT ALL v0.c2, v0.c0, v0.c1, t0.c0 FROM t0, v0 GROUP BY v0.c2, v0.c0, v0.c1, t0.c0 HAVING ((v0.c2) ISNULL);
SELECT ALL v0.c2, v0.c0, v0.c1, t0.c0 FROM t0, v0 GROUP BY v0.c2, v0.c0, v0.c1, t0.c0;
SELECT ALL v0.c2, v0.c0, v0.c1, t0.c0 FROM t0, v0 GROUP BY v0.c2, v0.c0, v0.c1, t0.c0 HAVING v0.c2 UNION ALL SELECT ALL v0.c2, v0.c0, v0.c1, t0.c0 FROM t0, v0 GROUP BY v0.c2, v0.c0, v0.c1, t0.c0 HAVING (NOT (v0.c2)) UNION ALL SELECT ALL v0.c2, v0.c0, v0.c1, t0.c0 FROM t0, v0 GROUP BY v0.c2, v0.c0, v0.c1, t0.c0 HAVING ((v0.c2) ISNULL);
SELECT ALL v0.c2, v0.c0, v0.c1, t0.c0 FROM t0, v0 GROUP BY v0.c2, v0.c0, v0.c1, t0.c0;
SELECT ALL t0.c0 FROM t0;
SELECT ALL t0.c0 FROM t0 WHERE (CAST(CAST(t0.c0 AS NUMERIC) AS INTEGER)) UNION ALL SELECT ALL t0.c0 FROM t0 WHERE ((NOT (CAST(CAST(t0.c0 AS NUMERIC) AS INTEGER)))) UNION ALL SELECT ALL t0.c0 FROM t0 WHERE (((CAST(CAST(t0.c0 AS NUMERIC) AS INTEGER)) ISNULL));
SELECT ALL t0.c0 FROM t0;
SELECT DISTINCT * FROM v0, t0;
SELECT DISTINCT * FROM v0, t0 WHERE (t0.c0) UNION SELECT DISTINCT * FROM v0, t0 WHERE ((NOT (t0.c0))) UNION SELECT DISTINCT * FROM v0, t0 WHERE (((t0.c0) ISNULL));
SELECT DISTINCT * FROM v0, t0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE (CAST(CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN x'f5fd' THEN t0.c0 END AS TEXT)) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT (CAST(CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN x'f5fd' THEN t0.c0 END AS TEXT)))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE (((CAST(CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN x'f5fd' THEN t0.c0 END AS TEXT)) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING GROUP_CONCAT(MIN('88500384')) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (GROUP_CONCAT(MIN('88500384')))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((GROUP_CONCAT(MIN('88500384'))) ISNULL);
SELECT ALL v0.c0 FROM v0, t0;
SELECT v0.c0 FROM v0, t0 WHERE ((((v0.c2)) NOT BETWEEN ((v0.c1)) AND ((v0.c0 COLLATE NOCASE)))) UNION ALL SELECT v0.c0 FROM v0, t0 WHERE ((NOT ((((v0.c2)) NOT BETWEEN ((v0.c1)) AND ((v0.c0 COLLATE NOCASE)))))) UNION ALL SELECT v0.c0 FROM v0, t0 WHERE ((((((v0.c2)) NOT BETWEEN ((v0.c1)) AND ((v0.c0 COLLATE NOCASE)))) ISNULL));
SELECT ALL v0.c0 FROM v0, t0;
SELECT DISTINCT t0.c0, v0.c2 FROM t0 CROSS JOIN v0 ON ((v0.c1 COLLATE NOCASE) IS FALSE);
SELECT DISTINCT t0.c0, v0.c2 FROM t0 CROSS JOIN v0 ON ((v0.c1 COLLATE NOCASE) IS FALSE) WHERE (NULL) UNION SELECT DISTINCT t0.c0, v0.c2 FROM t0 CROSS JOIN v0 ON ((v0.c1 COLLATE NOCASE) IS FALSE) WHERE ((NOT (NULL))) UNION SELECT DISTINCT t0.c0, v0.c2 FROM t0 CROSS JOIN v0 ON ((v0.c1 COLLATE NOCASE) IS FALSE) WHERE (((NULL) ISNULL));
SELECT DISTINCT t0.c0, v0.c2 FROM t0 CROSS JOIN v0 ON ((v0.c1 COLLATE NOCASE) IS FALSE);
SELECT v0.c1, v0.c0, t0.c0 FROM v0, t0 GROUP BY v0.c1, v0.c0, t0.c0;
SELECT ALL v0.c1, v0.c0, t0.c0 FROM v0, t0 WHERE ((((((v0.c2)*(v0.c2))))<=((((t0.c0) ISNULL))))) GROUP BY v0.c1, v0.c0, t0.c0 UNION SELECT ALL v0.c1, v0.c0, t0.c0 FROM v0, t0 WHERE ((NOT ((((((v0.c2)*(v0.c2))))<=((((t0.c0) ISNULL))))))) GROUP BY v0.c1, v0.c0, t0.c0 UNION SELECT v0.c1, v0.c0, t0.c0 FROM v0, t0 NOT INDEXED WHERE ((((((((v0.c2)*(v0.c2))))<=((((t0.c0) ISNULL))))) ISNULL)) GROUP BY v0.c1, v0.c0, t0.c0;
SELECT v0.c1, v0.c0, t0.c0 FROM v0, t0 GROUP BY v0.c1, v0.c0, t0.c0;
SELECT ALL v0.c0, t0.c0, v0.c2, v0.c1 FROM v0, t0 GROUP BY v0.c0, t0.c0, v0.c2, v0.c1;
SELECT v0.c0, t0.c0, v0.c2, v0.c1 FROM v0, t0 GROUP BY v0.c0, t0.c0, v0.c2, v0.c1 HAVING -1.747207886E9 UNION ALL SELECT ALL v0.c0, t0.c0, v0.c2, v0.c1 FROM v0, t0 GROUP BY v0.c0, t0.c0, v0.c2, v0.c1 HAVING (NOT (-1.747207886E9)) UNION ALL SELECT v0.c0, t0.c0, v0.c2, v0.c1 FROM v0, t0 GROUP BY v0.c0, t0.c0, v0.c2, v0.c1 HAVING ((-1.747207886E9) ISNULL);
SELECT ALL v0.c0, t0.c0, v0.c2, v0.c1 FROM v0, t0 GROUP BY v0.c0, t0.c0, v0.c2, v0.c1;
SELECT v0.c0, t0.c0, v0.c2, v0.c1 FROM v0, t0 GROUP BY v0.c0, t0.c0, v0.c2, v0.c1 HAVING -1.747207886E9 UNION ALL SELECT ALL v0.c0, t0.c0, v0.c2, v0.c1 FROM v0, t0 GROUP BY v0.c0, t0.c0, v0.c2, v0.c1 HAVING (NOT (-1.747207886E9)) UNION ALL SELECT v0.c0, t0.c0, v0.c2, v0.c1 FROM v0, t0 GROUP BY v0.c0, t0.c0, v0.c2, v0.c1 HAVING ((-1.747207886E9) ISNULL);
SELECT ALL v0.c0, t0.c0, v0.c2, v0.c1 FROM v0, t0 GROUP BY v0.c0, t0.c0, v0.c2, v0.c1;
SELECT ALL v0.c2, v0.c1, t0.c0 FROM v0 CROSS JOIN t0 ON ((CASE v0.c1  WHEN v0.c2 THEN v0.c0 END)<((t0.c0 IN ())));
SELECT v0.c2, v0.c1, t0.c0 FROM v0 CROSS JOIN t0 ON ((CASE v0.c1  WHEN v0.c2 THEN v0.c0 END)<((t0.c0 IN ()))) WHERE (((CASE t0.c0  WHEN '88500384' THEN t0.c0 WHEN v0.c2 THEN v0.c1 WHEN t0.c0 THEN NULL ELSE t0.c0 END)IS((((v0.c2)) NOT BETWEEN ((t0.c0)) AND ((t0.c0)))))) UNION ALL SELECT v0.c2, v0.c1, t0.c0 FROM v0 CROSS JOIN t0 ON ((CASE v0.c1  WHEN v0.c2 THEN v0.c0 END)<((t0.c0 IN ()))) WHERE ((NOT (((CASE t0.c0  WHEN '88500384' THEN t0.c0 WHEN v0.c2 THEN v0.c1 WHEN t0.c0 THEN NULL ELSE t0.c0 END)IS((((v0.c2)) NOT BETWEEN ((t0.c0)) AND ((t0.c0)))))))) UNION ALL SELECT ALL v0.c2, v0.c1, t0.c0 FROM v0 CROSS JOIN t0 ON ((CASE v0.c1  WHEN v0.c2 THEN v0.c0 END)<((t0.c0 IN ()))) WHERE (((((CASE t0.c0  WHEN '88500384' THEN t0.c0 WHEN v0.c2 THEN v0.c1 WHEN t0.c0 THEN NULL ELSE t0.c0 END)IS((((v0.c2)) NOT BETWEEN ((t0.c0)) AND ((t0.c0)))))) ISNULL));
SELECT ALL v0.c2, v0.c1, t0.c0 FROM v0 CROSS JOIN t0 ON ((CASE v0.c1  WHEN v0.c2 THEN v0.c0 END)<((t0.c0 IN ())));
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (((((t0.c0) NOT NULL)) NOTNULL)) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (((((t0.c0) NOT NULL)) NOTNULL)))) UNION SELECT DISTINCT * FROM t0 WHERE (((((((t0.c0) NOT NULL)) NOTNULL)) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT v0.c0, v0.c2 FROM v0 GROUP BY v0.c0, v0.c2;
SELECT ALL v0.c0, v0.c2 FROM v0 WHERE ((((v0.c2)) NOT BETWEEN ((((v0.c2)<=(v0.c2)))) AND ((((NULL) NOT BETWEEN (v0.c1) AND (v0.c1)))))) GROUP BY v0.c0, v0.c2 UNION SELECT ALL v0.c0, v0.c2 FROM v0 WHERE ((NOT ((((v0.c2)) NOT BETWEEN ((((v0.c2)<=(v0.c2)))) AND ((((NULL) NOT BETWEEN (v0.c1) AND (v0.c1)))))))) GROUP BY v0.c0, v0.c2 UNION SELECT v0.c0, v0.c2 FROM v0 WHERE ((((((v0.c2)) NOT BETWEEN ((((v0.c2)<=(v0.c2)))) AND ((((NULL) NOT BETWEEN (v0.c1) AND (v0.c1)))))) ISNULL)) GROUP BY v0.c0, v0.c2;
SELECT v0.c0, v0.c2 FROM v0 GROUP BY v0.c0, v0.c2;
SELECT ALL v0.c0, v0.c1, v0.c2 FROM t0, v0 GROUP BY v0.c0, v0.c1, v0.c2;
SELECT v0.c0, v0.c1, v0.c2 FROM t0, v0 GROUP BY v0.c0, v0.c1, v0.c2 HAVING (NOT (COUNT(v0.c2))) UNION ALL SELECT ALL v0.c0, v0.c1, v0.c2 FROM t0, v0 GROUP BY v0.c0, v0.c1, v0.c2 HAVING (NOT ((NOT (COUNT(v0.c2))))) UNION ALL SELECT v0.c0, v0.c1, v0.c2 FROM t0, v0 GROUP BY v0.c0, v0.c1, v0.c2 HAVING (((NOT (COUNT(v0.c2)))) ISNULL);
SELECT ALL v0.c0, v0.c1, v0.c2 FROM t0, v0 GROUP BY v0.c0, v0.c1, v0.c2;
SELECT v0.c0, v0.c1, v0.c2 FROM t0, v0 GROUP BY v0.c0, v0.c1, v0.c2 HAVING (NOT (COUNT(v0.c2))) UNION ALL SELECT ALL v0.c0, v0.c1, v0.c2 FROM t0, v0 GROUP BY v0.c0, v0.c1, v0.c2 HAVING (NOT ((NOT (COUNT(v0.c2))))) UNION ALL SELECT v0.c0, v0.c1, v0.c2 FROM t0, v0 GROUP BY v0.c0, v0.c1, v0.c2 HAVING (((NOT (COUNT(v0.c2)))) ISNULL);
SELECT ALL v0.c0, v0.c1, v0.c2 FROM t0, v0 GROUP BY v0.c0, v0.c1, v0.c2;
SELECT ALL t0.c0 FROM t0;
SELECT t0.c0 FROM t0 WHERE (((((t0.c0) NOT NULL))-(CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END))) UNION ALL SELECT ALL t0.c0 FROM t0 WHERE ((NOT (((((t0.c0) NOT NULL))-(CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END))))) UNION ALL SELECT t0.c0 FROM t0 WHERE (((((((t0.c0) NOT NULL))-(CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END))) ISNULL));
SELECT ALL t0.c0 FROM t0;
SELECT DISTINCT * FROM t0, v0;
SELECT DISTINCT * FROM t0, v0 WHERE (((((((v0.c0) NOTNULL))OR(((v0.c2) NOT BETWEEN (v0.c2) AND (x'')))))OR(((v0.c2)<<(v0.c0))))) UNION SELECT DISTINCT * FROM t0, v0 WHERE ((NOT (((((((v0.c0) NOTNULL))OR(((v0.c2) NOT BETWEEN (v0.c2) AND (x'')))))OR(((v0.c2)<<(v0.c0))))))) UNION SELECT DISTINCT * FROM t0, v0 WHERE (((((((((v0.c0) NOTNULL))OR(((v0.c2) NOT BETWEEN (v0.c2) AND (x'')))))OR(((v0.c2)<<(v0.c0))))) ISNULL));
SELECT DISTINCT * FROM t0, v0;
SELECT v0.c2, v0.c1 FROM v0 GROUP BY v0.c2, v0.c1;
SELECT v0.c2, v0.c1 FROM v0 WHERE (((v0.c2 COLLATE NOCASE) NOT BETWEEN (TRIM(v0.c1, v0.c1)) AND (((v0.c1) NOTNULL)))) GROUP BY v0.c2, v0.c1 UNION SELECT v0.c2, v0.c1 FROM v0 WHERE ((NOT (((v0.c2 COLLATE NOCASE) NOT BETWEEN (TRIM(v0.c1, v0.c1)) AND (((v0.c1) NOTNULL)))))) GROUP BY v0.c2, v0.c1 UNION SELECT ALL v0.c2, v0.c1 FROM v0 WHERE (((((v0.c2 COLLATE NOCASE) NOT BETWEEN (TRIM(v0.c1, v0.c1)) AND (((v0.c1) NOTNULL)))) ISNULL)) GROUP BY v0.c2, v0.c1;
SELECT v0.c2, v0.c1 FROM v0 GROUP BY v0.c2, v0.c1;
SELECT v0.c1 FROM v0 GROUP BY v0.c1;
SELECT v0.c1 FROM v0 GROUP BY v0.c1 HAVING AVG(COUNT(*)) UNION ALL SELECT ALL v0.c1 FROM v0 GROUP BY v0.c1 HAVING (NOT (AVG(COUNT(*)))) UNION ALL SELECT v0.c1 FROM v0 GROUP BY v0.c1 HAVING ((AVG(COUNT(*))) ISNULL);
SELECT * FROM v0, t0;
SELECT ALL * FROM v0, t0 WHERE (LOWER(v0.c1) COLLATE NOCASE) UNION ALL SELECT ALL * FROM v0, t0 WHERE ((NOT (LOWER(v0.c1) COLLATE NOCASE))) UNION ALL SELECT * FROM v0, t0 WHERE (((LOWER(v0.c1) COLLATE NOCASE) ISNULL));
SELECT * FROM v0, t0;
SELECT DISTINCT * FROM v0 CROSS JOIN t0 ON (((((((((t0.c0 IN (v0.c1)))OR(((v0.c2) BETWEEN (v0.c0) AND (v0.c2)))))OR(v0.c2)))OR(((0.7773296003268042) NOT BETWEEN (v0.c0) AND (v0.c2)))))AND(v0.c0 COLLATE RTRIM));
SELECT DISTINCT * FROM v0 CROSS JOIN t0 ON (((((((((t0.c0 IN (v0.c1)))OR(((v0.c2) BETWEEN (v0.c0) AND (v0.c2)))))OR(v0.c2)))OR(((0.7773296003268042) NOT BETWEEN (v0.c0) AND (v0.c2)))))AND(v0.c0 COLLATE RTRIM)) WHERE ((NOT (('m*gkNbc' IN ())))) UNION SELECT DISTINCT * FROM v0 CROSS JOIN t0 ON (((((((((t0.c0 IN (v0.c1)))OR(((v0.c2) BETWEEN (v0.c0) AND (v0.c2)))))OR(v0.c2)))OR(((0.7773296003268042) NOT BETWEEN (v0.c0) AND (v0.c2)))))AND(v0.c0 COLLATE RTRIM)) WHERE ((NOT ((NOT (('m*gkNbc' IN ())))))) UNION SELECT DISTINCT * FROM v0 CROSS JOIN t0 ON (((((((((t0.c0 IN (v0.c1)))OR(((v0.c2) BETWEEN (v0.c0) AND (v0.c2)))))OR(v0.c2)))OR(((0.7773296003268042) NOT BETWEEN (v0.c0) AND (v0.c2)))))AND(v0.c0 COLLATE RTRIM)) WHERE ((((NOT (('m*gkNbc' IN ())))) ISNULL));
SELECT DISTINCT * FROM v0 CROSS JOIN t0 ON (((((((((t0.c0 IN (v0.c1)))OR(((v0.c2) BETWEEN (v0.c0) AND (v0.c2)))))OR(v0.c2)))OR(((0.7773296003268042) NOT BETWEEN (v0.c0) AND (v0.c2)))))AND(v0.c0 COLLATE RTRIM));
SELECT ALL v0.c0, v0.c2 FROM v0 GROUP BY v0.c0, v0.c2;
SELECT v0.c0, v0.c2 FROM v0 WHERE (((v0.c2) BETWEEN (((((v0.c1)AND(v0.c2)))OR(x'7370'))) AND (v0.c1))) GROUP BY v0.c0, v0.c2 UNION SELECT v0.c0, v0.c2 FROM v0 WHERE ((NOT (((v0.c2) BETWEEN (((((v0.c1)AND(v0.c2)))OR(x'7370'))) AND (v0.c1))))) GROUP BY v0.c0, v0.c2 UNION SELECT ALL v0.c0, v0.c2 FROM v0 WHERE (((((v0.c2) BETWEEN (((((v0.c1)AND(v0.c2)))OR(x'7370'))) AND (v0.c1))) ISNULL)) GROUP BY v0.c0, v0.c2;
SELECT ALL v0.c0, v0.c2 FROM v0 GROUP BY v0.c0, v0.c2;
SELECT ALL v0.c2 FROM v0 GROUP BY v0.c2;
SELECT v0.c2 FROM v0 GROUP BY v0.c2 HAVING SUM(((v0.c1)IS NOT(v0.c0))) UNION ALL SELECT v0.c2 FROM v0 GROUP BY v0.c2 HAVING (NOT (SUM(((v0.c1)IS NOT(v0.c0))))) UNION ALL SELECT v0.c2 FROM v0 GROUP BY v0.c2 HAVING ((SUM(((v0.c1)IS NOT(v0.c0)))) ISNULL);
SELECT ALL v0.c2 FROM v0 GROUP BY v0.c2;
SELECT v0.c2 FROM v0 GROUP BY v0.c2 HAVING SUM(((v0.c1)IS NOT(v0.c0))) UNION ALL SELECT v0.c2 FROM v0 GROUP BY v0.c2 HAVING (NOT (SUM(((v0.c1)IS NOT(v0.c0))))) UNION ALL SELECT v0.c2 FROM v0 GROUP BY v0.c2 HAVING ((SUM(((v0.c1)IS NOT(v0.c0)))) ISNULL);
SELECT ALL v0.c2 FROM v0 GROUP BY v0.c2;
SELECT * FROM v0;
SELECT * FROM v0 WHERE (x'') UNION ALL SELECT ALL * FROM v0 WHERE ((NOT (x''))) UNION ALL SELECT * FROM v0 WHERE (((x'') ISNULL));
SELECT * FROM v0;
SELECT DISTINCT * FROM v0, t0;
SELECT DISTINCT * FROM v0, t0 WHERE (t0.c0 COLLATE BINARY COLLATE BINARY COLLATE NOCASE) UNION SELECT DISTINCT * FROM v0, t0 WHERE ((NOT (t0.c0 COLLATE BINARY COLLATE BINARY COLLATE NOCASE))) UNION SELECT DISTINCT * FROM v0, t0 WHERE (((t0.c0 COLLATE BINARY COLLATE BINARY COLLATE NOCASE) ISNULL));
SELECT DISTINCT * FROM v0, t0;
SELECT v0.c1, v0.c2 FROM v0 GROUP BY v0.c1, v0.c2;
SELECT ALL v0.c1, v0.c2 FROM v0 WHERE ((CASE WHEN v0.c1 THEN v0.c0 END IN ())) GROUP BY v0.c1, v0.c2 UNION SELECT v0.c1, v0.c2 FROM v0 WHERE ((NOT ((CASE WHEN v0.c1 THEN v0.c0 END IN ())))) GROUP BY v0.c1, v0.c2 UNION SELECT ALL v0.c1, v0.c2 FROM v0 WHERE ((((CASE WHEN v0.c1 THEN v0.c0 END IN ())) ISNULL)) GROUP BY v0.c1, v0.c2;
SELECT v0.c1, v0.c2 FROM v0 GROUP BY v0.c1, v0.c2;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING COUNT(*) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING COUNT(*) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0;
SELECT t0.c0 FROM t0 WHERE (((((t0.c0 COLLATE NOCASE)OR((((t0.c0))<>((t0.c0))))))AND(((t0.c0)>=(t0.c0))))) UNION ALL SELECT t0.c0 FROM t0 WHERE ((NOT (((((t0.c0 COLLATE NOCASE)OR((((t0.c0))<>((t0.c0))))))AND(((t0.c0)>=(t0.c0))))))) UNION ALL SELECT t0.c0 FROM t0 WHERE (((((((t0.c0 COLLATE NOCASE)OR((((t0.c0))<>((t0.c0))))))AND(((t0.c0)>=(t0.c0))))) ISNULL));
SELECT t0.c0 FROM t0;
SELECT DISTINCT * FROM v0, t0;
SELECT DISTINCT * FROM v0, t0 WHERE (((CASE WHEN v0.c2 THEN v0.c1 WHEN 2.096510723E9 THEN v0.c2 WHEN v0.c1 THEN v0.c1 ELSE t0.c0 END) BETWEEN ((- (v0.c0))) AND (((v0.c1)LIKE(v0.c1))))) UNION SELECT DISTINCT * FROM v0, t0 WHERE ((NOT (((CASE WHEN v0.c2 THEN v0.c1 WHEN 2.096510723E9 THEN v0.c2 WHEN v0.c1 THEN v0.c1 ELSE t0.c0 END) BETWEEN ((- (v0.c0))) AND (((v0.c1)LIKE(v0.c1))))))) UNION SELECT DISTINCT * FROM v0, t0 WHERE (((((CASE WHEN v0.c2 THEN v0.c1 WHEN 2.096510723E9 THEN v0.c2 WHEN v0.c1 THEN v0.c1 ELSE t0.c0 END) BETWEEN ((- (v0.c0))) AND (((v0.c1)LIKE(v0.c1))))) ISNULL));
SELECT DISTINCT * FROM v0, t0;
SELECT v0.c2, v0.c1 FROM v0 GROUP BY v0.c2, v0.c1;
SELECT ALL v0.c2, v0.c1 FROM v0 WHERE (((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c1))) NOT NULL)) GROUP BY v0.c2, v0.c1 UNION SELECT ALL v0.c2, v0.c1 FROM v0 WHERE ((NOT (((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c1))) NOT NULL)))) GROUP BY v0.c2, v0.c1 UNION SELECT ALL v0.c2, v0.c1 FROM v0 WHERE (((((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c1))) NOT NULL)) ISNULL)) GROUP BY v0.c2, v0.c1;
SELECT v0.c2, v0.c1 FROM v0 GROUP BY v0.c2, v0.c1;
SELECT v0.c1, v0.c0, t0.c0 FROM t0 FULL OUTER JOIN v0 ON (((CAST(t0.c0 AS REAL)))==(((NOT (v0.c2))))) GROUP BY v0.c1, v0.c0, t0.c0;
SELECT v0.c1, v0.c0, t0.c0 FROM t0 FULL OUTER JOIN v0 ON (((CAST(t0.c0 AS REAL)))=(((NOT (v0.c2))))) GROUP BY v0.c1, v0.c0, t0.c0 HAVING CAST(t0.c0 COLLATE RTRIM AS INTEGER) UNION ALL SELECT ALL v0.c1, v0.c0, t0.c0 FROM t0 FULL OUTER JOIN v0 ON (((CAST(t0.c0 AS REAL)))=(((NOT (v0.c2))))) GROUP BY v0.c1, v0.c0, t0.c0 HAVING (NOT (CAST(t0.c0 COLLATE RTRIM AS INTEGER))) UNION ALL SELECT v0.c1, v0.c0, t0.c0 FROM t0 FULL OUTER JOIN v0 ON (((CAST(t0.c0 AS REAL)))==(((NOT (v0.c2))))) GROUP BY v0.c1, v0.c0, t0.c0 HAVING ((CAST(t0.c0 COLLATE RTRIM AS INTEGER)) ISNULL);
SELECT v0.c1, v0.c0, t0.c0 FROM t0 FULL OUTER JOIN v0 ON (((CAST(t0.c0 AS REAL)))==(((NOT (v0.c2))))) GROUP BY v0.c1, v0.c0, t0.c0;
SELECT v0.c1, v0.c0, t0.c0 FROM t0 FULL OUTER JOIN v0 ON (((CAST(t0.c0 AS REAL)))=(((NOT (v0.c2))))) GROUP BY v0.c1, v0.c0, t0.c0 HAVING CAST(t0.c0 COLLATE RTRIM AS INTEGER) UNION ALL SELECT ALL v0.c1, v0.c0, t0.c0 FROM t0 FULL OUTER JOIN v0 ON (((CAST(t0.c0 AS REAL)))=(((NOT (v0.c2))))) GROUP BY v0.c1, v0.c0, t0.c0 HAVING (NOT (CAST(t0.c0 COLLATE RTRIM AS INTEGER))) UNION ALL SELECT v0.c1, v0.c0, t0.c0 FROM t0 FULL OUTER JOIN v0 ON (((CAST(t0.c0 AS REAL)))==(((NOT (v0.c2))))) GROUP BY v0.c1, v0.c0, t0.c0 HAVING ((CAST(t0.c0 COLLATE RTRIM AS INTEGER)) ISNULL);
SELECT v0.c1, v0.c0, t0.c0 FROM t0 FULL OUTER JOIN v0 ON (((CAST(t0.c0 AS REAL)))==(((NOT (v0.c2))))) GROUP BY v0.c1, v0.c0, t0.c0;
SELECT MIN((((((v0.c0, v0.c0, v0.c2, v0.c2, v0.c1)) BETWEEN (('>C', '0.7690417169385969', v0.c0, v0.c0, v0.c0)) AND ((v0.c1, v0.c0, v0.c1, v0.c0, v0.c0)))) NOT BETWEEN (NULL) AND ((v0.c2 IN ())))) FROM v0;
SELECT ALL v0.c1 FROM v0 INDEXED BY i13, t0;
SELECT DISTINCT v0.c1 FROM t0, v0;
SELECT DISTINCT v0.c1 FROM t0, v0 WHERE (CAST(NULL AS INTEGER)) UNION SELECT DISTINCT v0.c1 FROM t0, v0 WHERE ((NOT (CAST(NULL AS INTEGER)))) UNION SELECT DISTINCT v0.c1 FROM t0, v0 WHERE (((CAST(NULL AS INTEGER)) ISNULL));
SELECT DISTINCT v0.c1 FROM t0, v0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE (IFNULL(CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END, (((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0))>=((t0.c0, '1079952059', t0.c0, 'jNH{', t0.c0))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT (IFNULL(CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END, (((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0))>=((t0.c0, '1079952059', t0.c0, 'jNH{', t0.c0))))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE (((IFNULL(CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END, (((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0))>=((t0.c0, '1079952059', t0.c0, 'jNH{', t0.c0))))) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL v0.c1, t0.c0 FROM v0, t0 GROUP BY v0.c1, t0.c0;
SELECT v0.c1, t0.c0 FROM v0, t0 GROUP BY v0.c1, t0.c0 HAVING GROUP_CONCAT(COUNT(*)) UNION ALL SELECT v0.c1, t0.c0 FROM v0, t0 GROUP BY v0.c1, t0.c0 HAVING (NOT (GROUP_CONCAT(COUNT(*)))) UNION ALL SELECT v0.c1, t0.c0 FROM v0, t0 GROUP BY v0.c1, t0.c0 HAVING ((GROUP_CONCAT(COUNT(*))) ISNULL);
SELECT v0.c1, v0.c2 FROM v0, t0;
SELECT ALL v0.c1, v0.c2 FROM v0, t0 WHERE (MIN(((t0.c0)<=(v0.c1)), ((t0.c0) IS FALSE))) UNION ALL SELECT v0.c1, v0.c2 FROM v0, t0 WHERE ((NOT (MIN(((t0.c0)<=(v0.c1)), ((t0.c0) IS FALSE))))) UNION ALL SELECT ALL v0.c1, v0.c2 FROM v0, t0 WHERE (((MIN(((t0.c0)<=(v0.c1)), ((t0.c0) IS FALSE))) ISNULL));
SELECT v0.c1, v0.c2 FROM v0, t0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (((((t0.c0) NOT NULL)) IS TRUE)) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (((((t0.c0) NOT NULL)) IS TRUE)))) UNION SELECT DISTINCT * FROM t0 WHERE (((((((t0.c0) NOT NULL)) IS TRUE)) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT v0.c0, v0.c1 FROM t0 FULL OUTER JOIN v0 ON ((NULL) IS FALSE) GROUP BY v0.c0, v0.c1;
SELECT v0.c0, v0.c1 FROM t0 FULL OUTER JOIN v0 ON ((NULL) IS FALSE) WHERE (CASE '4170009124185661492'  WHEN v0.c0 THEN v0.c2 ELSE '' END COLLATE NOCASE) GROUP BY v0.c0, v0.c1 UNION SELECT ALL v0.c0, v0.c1 FROM t0 FULL OUTER JOIN v0 ON ((NULL) IS FALSE) WHERE ((NOT (CASE '4170009124185661492'  WHEN v0.c0 THEN v0.c2 ELSE '' END COLLATE NOCASE))) GROUP BY v0.c0, v0.c1 UNION SELECT ALL v0.c0, v0.c1 FROM t0 FULL OUTER JOIN v0 ON ((NULL) IS FALSE) WHERE (((CASE '4170009124185661492'  WHEN v0.c0 THEN v0.c2 ELSE '' END COLLATE NOCASE) ISNULL)) GROUP BY v0.c0, v0.c1;
SELECT v0.c0, v0.c1 FROM t0 FULL OUTER JOIN v0 ON ((NULL) IS FALSE) GROUP BY v0.c0, v0.c1;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING MAX(COUNT(t0.c0)) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (MAX(COUNT(t0.c0)))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((MAX(COUNT(t0.c0))) ISNULL);
SELECT t0.c0 FROM t0;
SELECT t0.c0 FROM t0 WHERE (((((t0.c0)IS NOT(t0.c0)))-((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0)))))) UNION ALL SELECT ALL t0.c0 FROM t0 WHERE ((NOT (((((t0.c0)IS NOT(t0.c0)))-((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0)))))))) UNION ALL SELECT t0.c0 FROM t0 WHERE (((((((t0.c0)IS NOT(t0.c0)))-((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0)))))) ISNULL));
SELECT t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0 WHERE ((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((NULL))) COLLATE BINARY) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((NOT ((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((NULL))) COLLATE BINARY))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((NULL))) COLLATE BINARY) ISNULL));
SELECT DISTINCT t0.c0 FROM t0;
SELECT t0.c0 FROM v0, t0 GROUP BY t0.c0;
SELECT t0.c0 FROM v0, t0 WHERE (((- (v0.c1)) IN ())) GROUP BY t0.c0 UNION SELECT t0.c0 FROM v0, t0 WHERE ((NOT (((- (v0.c1)) IN ())))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM v0, t0 WHERE (((((- (v0.c1)) IN ())) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM v0, t0 GROUP BY t0.c0;
SELECT v0.c2 FROM v0, t0 GROUP BY v0.c2;
SELECT v0.c2 FROM v0, t0 GROUP BY v0.c2 HAVING ((v0.c2) NOT NULL) COLLATE NOCASE UNION ALL SELECT v0.c2 FROM v0, t0 GROUP BY v0.c2 HAVING (NOT (((v0.c2) NOT NULL) COLLATE NOCASE)) UNION ALL SELECT v0.c2 FROM v0, t0 GROUP BY v0.c2 HAVING ((((v0.c2) NOT NULL) COLLATE NOCASE) ISNULL);
SELECT v0.c2 FROM v0, t0 GROUP BY v0.c2;
SELECT v0.c2 FROM v0, t0 GROUP BY v0.c2 HAVING ((v0.c2) NOT NULL) COLLATE NOCASE UNION ALL SELECT v0.c2 FROM v0, t0 GROUP BY v0.c2 HAVING (NOT (((v0.c2) NOT NULL) COLLATE NOCASE)) UNION ALL SELECT v0.c2 FROM v0, t0 GROUP BY v0.c2 HAVING ((((v0.c2) NOT NULL) COLLATE NOCASE) ISNULL);
SELECT v0.c2 FROM v0, t0 GROUP BY v0.c2;
SELECT ALL * FROM t0, v0;
SELECT * FROM t0, v0 WHERE (v0.c0) UNION ALL SELECT ALL * FROM t0, v0 WHERE ((NOT (v0.c0))) UNION ALL SELECT ALL * FROM t0, v0 WHERE (((v0.c0) ISNULL));
SELECT ALL * FROM t0, v0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (CASE (- (t0.c0))  WHEN ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) THEN ((t0.c0) IS TRUE) WHEN ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) THEN '0.3424097651588911' WHEN ((0.45963862955959744)>(t0.c0)) THEN (((t0.c0))<>((t0.c0))) WHEN (+ (t0.c0)) THEN '0.952748399042319' WHEN ((t0.c0) BETWEEN (x'') AND (t0.c0)) THEN CAST(t0.c0 AS BLOB) ELSE ((t0.c0) NOTNULL) END) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (CASE (- (t0.c0))  WHEN ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) THEN ((t0.c0) IS TRUE) WHEN ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) THEN '0.3424097651588911' WHEN ((0.45963862955959744)>(t0.c0)) THEN (((t0.c0))<>((t0.c0))) WHEN (+ (t0.c0)) THEN '0.952748399042319' WHEN ((t0.c0) BETWEEN (x'') AND (t0.c0)) THEN CAST(t0.c0 AS BLOB) ELSE ((t0.c0) NOTNULL) END))) UNION SELECT DISTINCT * FROM t0 WHERE (((CASE (- (t0.c0))  WHEN ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) THEN ((t0.c0) IS TRUE) WHEN ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) THEN '0.3424097651588911' WHEN ((0.45963862955959744)>(t0.c0)) THEN (((t0.c0))<>((t0.c0))) WHEN (+ (t0.c0)) THEN '0.952748399042319' WHEN ((t0.c0) BETWEEN (x'') AND (t0.c0)) THEN CAST(t0.c0 AS BLOB) ELSE ((t0.c0) NOTNULL) END) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT ALL v0.c0, t0.c0, v0.c2 FROM t0, v0 GROUP BY v0.c0, t0.c0, v0.c2;
SELECT v0.c0, t0.c0, v0.c2 FROM t0, v0 WHERE (((((0.3060977495002255)OR(v0.c0)))AND(v0.c2)) COLLATE BINARY) GROUP BY v0.c0, t0.c0, v0.c2 UNION SELECT v0.c0, t0.c0, v0.c2 FROM t0, v0 WHERE ((NOT (((((0.3060977495002255)OR(v0.c0)))AND(v0.c2)) COLLATE BINARY))) GROUP BY v0.c0, t0.c0, v0.c2 UNION SELECT v0.c0, t0.c0, v0.c2 FROM t0, v0 WHERE (((((((0.3060977495002255)OR(v0.c0)))AND(v0.c2)) COLLATE BINARY) ISNULL)) GROUP BY v0.c0, t0.c0, v0.c2;
SELECT ALL v0.c0, t0.c0, v0.c2 FROM t0, v0 GROUP BY v0.c0, t0.c0, v0.c2;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((TOTAL(v0.c2))LIKE(v0.c1)) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (((TOTAL(v0.c2))LIKE(v0.c1)))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((((TOTAL(v0.c2))LIKE(v0.c1))) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((TOTAL(v0.c2))LIKE(v0.c1)) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (((TOTAL(v0.c2))LIKE(v0.c1)))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((((TOTAL(v0.c2))LIKE(v0.c1))) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c1 FROM v0, t0;
SELECT v0.c1 FROM v0, t0 WHERE (v0.c0 COLLATE BINARY) UNION ALL SELECT ALL v0.c1 FROM v0, t0 WHERE ((NOT (v0.c0 COLLATE BINARY))) UNION ALL SELECT v0.c1 FROM v0, t0 WHERE (((v0.c0 COLLATE BINARY) ISNULL));
SELECT ALL v0.c1 FROM v0, t0;
SELECT DISTINCT v0.c1, v0.c0, v0.c2, t0.c0 FROM t0, v0;
SELECT DISTINCT v0.c1, v0.c0, v0.c2, t0.c0 FROM t0, v0 WHERE ((- (((v0.c0) BETWEEN (v0.c2) AND (v0.c1))))) UNION SELECT DISTINCT v0.c1, v0.c0, v0.c2, t0.c0 FROM t0, v0 WHERE ((NOT ((- (((v0.c0) BETWEEN (v0.c2) AND (v0.c1))))))) UNION SELECT DISTINCT v0.c1, v0.c0, v0.c2, t0.c0 FROM t0, v0 WHERE ((((- (((v0.c0) BETWEEN (v0.c2) AND (v0.c1))))) ISNULL));
SELECT DISTINCT v0.c1, v0.c0, v0.c2, t0.c0 FROM t0, v0;
SELECT v0.c1, v0.c2, v0.c0 FROM v0 GROUP BY v0.c1, v0.c2, v0.c0;
SELECT ALL v0.c1, v0.c2, v0.c0 FROM v0 WHERE ((NOT (((v0.c0) NOT BETWEEN (v0.c1) AND ('605324204'))))) GROUP BY v0.c1, v0.c2, v0.c0 UNION SELECT v0.c1, v0.c2, v0.c0 FROM v0 WHERE ((NOT ((NOT (((v0.c0) NOT BETWEEN (v0.c1) AND ('605324204'))))))) GROUP BY v0.c1, v0.c2, v0.c0 UNION SELECT v0.c1, v0.c2, v0.c0 FROM v0 WHERE ((((NOT (((v0.c0) NOT BETWEEN (v0.c1) AND ('605324204'))))) ISNULL)) GROUP BY v0.c1, v0.c2, v0.c0;
SELECT v0.c1, v0.c2, v0.c0 FROM v0 GROUP BY v0.c1, v0.c2, v0.c0;
SELECT ALL v0.c1, v0.c2, v0.c0 FROM v0 GROUP BY v0.c1, v0.c2, v0.c0;
SELECT ALL v0.c1, v0.c2, v0.c0 FROM v0 GROUP BY v0.c1, v0.c2, v0.c0 HAVING GROUP_CONCAT(TOTAL(v0.c0)) UNION ALL SELECT ALL v0.c1, v0.c2, v0.c0 FROM v0 GROUP BY v0.c1, v0.c2, v0.c0 HAVING (NOT (GROUP_CONCAT(TOTAL(v0.c0)))) UNION ALL SELECT v0.c1, v0.c2, v0.c0 FROM v0 GROUP BY v0.c1, v0.c2, v0.c0 HAVING ((GROUP_CONCAT(TOTAL(v0.c0))) ISNULL);
SELECT * FROM v0 INNER JOIN t0 ON ((((v0.c2)OR(v0.c2))) NOT BETWEEN (CASE WHEN v0.c2 THEN v0.c2 ELSE v0.c2 END) AND (CASE WHEN v0.c2 THEN v0.c0 WHEN v0.c2 THEN v0.c0 WHEN v0.c2 THEN v0.c0 ELSE v0.c2 END));
SELECT ALL * FROM v0 INNER JOIN t0 ON ((((v0.c2)OR(v0.c2))) NOT BETWEEN (CASE WHEN v0.c2 THEN v0.c2 ELSE v0.c2 END) AND (CASE WHEN v0.c2 THEN v0.c0 WHEN v0.c2 THEN v0.c0 WHEN v0.c2 THEN v0.c0 ELSE v0.c2 END)) WHERE ((((((v0.c2))>((t0.c0)))) NOT BETWEEN (CAST(t0.c0 AS TEXT)) AND (((((((((v0.c0)OR(t0.c0)))OR(v0.c1)))AND(v0.c2)))OR(v0.c2))))) UNION ALL SELECT * FROM v0 INNER JOIN t0 ON ((((v0.c2)OR(v0.c2))) NOT BETWEEN (CASE WHEN v0.c2 THEN v0.c2 ELSE v0.c2 END) AND (CASE WHEN v0.c2 THEN v0.c0 WHEN v0.c2 THEN v0.c0 WHEN v0.c2 THEN v0.c0 ELSE v0.c2 END)) WHERE ((NOT ((((((v0.c2))>((t0.c0)))) NOT BETWEEN (CAST(t0.c0 AS TEXT)) AND (((((((((v0.c0)OR(t0.c0)))OR(v0.c1)))AND(v0.c2)))OR(v0.c2))))))) UNION ALL SELECT ALL * FROM v0 INNER JOIN t0 ON ((((v0.c2)OR(v0.c2))) NOT BETWEEN (CASE WHEN v0.c2 THEN v0.c2 ELSE v0.c2 END) AND (CASE WHEN v0.c2 THEN v0.c0 WHEN v0.c2 THEN v0.c0 WHEN v0.c2 THEN v0.c0 ELSE v0.c2 END)) WHERE ((((((((v0.c2))>((t0.c0)))) NOT BETWEEN (CAST(t0.c0 AS TEXT)) AND (((((((((v0.c0)OR(t0.c0)))OR(v0.c1)))AND(v0.c2)))OR(v0.c2))))) ISNULL));
SELECT * FROM v0 INNER JOIN t0 ON ((((v0.c2)OR(v0.c2))) NOT BETWEEN (CASE WHEN v0.c2 THEN v0.c2 ELSE v0.c2 END) AND (CASE WHEN v0.c2 THEN v0.c0 WHEN v0.c2 THEN v0.c0 WHEN v0.c2 THEN v0.c0 ELSE v0.c2 END));
SELECT DISTINCT v0.c2 FROM t0, v0;
SELECT DISTINCT v0.c2 FROM t0, v0 WHERE (t0.c0) UNION SELECT DISTINCT v0.c2 FROM t0, v0 WHERE ((NOT (t0.c0))) UNION SELECT DISTINCT v0.c2 FROM t0, v0 WHERE (((t0.c0) ISNULL));
SELECT DISTINCT v0.c2 FROM t0, v0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 WHERE (CAST(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) AS BLOB)) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT (CAST(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) AS BLOB)))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 NOT INDEXED WHERE (((CAST(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) AS BLOB)) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING SUM(COUNT(*)) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (SUM(COUNT(*)))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((SUM(COUNT(*))) ISNULL);
SELECT t0.c0 FROM t0;
SELECT ALL t0.c0 FROM t0 WHERE ((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) IN (((t0.c0) BETWEEN (t0.c0) AND (t0.c0))))) UNION ALL SELECT t0.c0 FROM t0 WHERE ((NOT ((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) IN (((t0.c0) BETWEEN (t0.c0) AND (t0.c0))))))) UNION ALL SELECT ALL t0.c0 FROM t0 WHERE ((((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) IN (((t0.c0) BETWEEN (t0.c0) AND (t0.c0))))) ISNULL));
SELECT t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0 WHERE (((RTRIM('GfE~Hc!W'))*(CAST(t0.c0 AS TEXT)))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((NOT (((RTRIM('GfE~Hc!W'))*(CAST(t0.c0 AS TEXT)))))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE (((((RTRIM('GfE~Hc!W'))*(CAST(t0.c0 AS TEXT)))) ISNULL));
SELECT DISTINCT t0.c0 FROM t0;
SELECT ALL v0.c1 FROM t0, v0 NOT INDEXED GROUP BY v0.c1;
SELECT v0.c1 FROM t0, v0 WHERE (((0.10260819596292914)OR(t0.c0)) COLLATE NOCASE) GROUP BY v0.c1 UNION SELECT ALL v0.c1 FROM t0, v0 WHERE ((NOT (((0.10260819596292914)OR(t0.c0)) COLLATE NOCASE))) GROUP BY v0.c1 UNION SELECT v0.c1 FROM t0, v0 WHERE (((((0.10260819596292914)OR(t0.c0)) COLLATE NOCASE) ISNULL)) GROUP BY v0.c1;
SELECT ALL v0.c1 FROM t0, v0 NOT INDEXED GROUP BY v0.c1;
SELECT t0.c0, v0.c0, v0.c1 FROM t0 FULL OUTER JOIN v0 ON TYPEOF(DISTINCT (- (v0.c2))) GROUP BY t0.c0, v0.c0, v0.c1;
SELECT t0.c0, v0.c0, v0.c1 FROM t0 FULL OUTER JOIN v0 ON TYPEOF(DISTINCT (- (v0.c2))) GROUP BY t0.c0, v0.c0, v0.c1 HAVING SUM(((((((((t0.c0)AND(COUNT(v0.c0))))AND(v0.c2)))AND(v0.c0)))AND(COUNT(*)))) UNION ALL SELECT ALL t0.c0, v0.c0, v0.c1 FROM t0 FULL OUTER JOIN v0 ON TYPEOF(DISTINCT (- (v0.c2))) GROUP BY t0.c0, v0.c0, v0.c1 HAVING (NOT (SUM(((((((((t0.c0)AND(COUNT(v0.c0))))AND(v0.c2)))AND(v0.c0)))AND(COUNT(*)))))) UNION ALL SELECT ALL t0.c0, v0.c0, v0.c1 FROM t0 FULL OUTER JOIN v0 ON TYPEOF(DISTINCT (- (v0.c2))) GROUP BY t0.c0, v0.c0, v0.c1 HAVING ((SUM(((((((((t0.c0)AND(COUNT(v0.c0))))AND(v0.c2)))AND(v0.c0)))AND(COUNT(*))))) ISNULL);
SELECT ALL * FROM v0, t0;
SELECT ALL * FROM v0, t0 WHERE (((((v0.c2)+(v0.c1))) BETWEEN (x'b505') AND (t0.c0))) UNION ALL SELECT ALL * FROM v0, t0 WHERE ((NOT (((((v0.c2)+(v0.c1))) BETWEEN (x'b505') AND (t0.c0))))) UNION ALL SELECT ALL * FROM v0, t0 WHERE (((((((v0.c2)+(v0.c1))) BETWEEN (x'b505') AND (t0.c0))) ISNULL));
SELECT ALL * FROM v0, t0;
SELECT DISTINCT v0.c1, v0.c0 FROM v0 RIGHT OUTER JOIN t0 ON ((LIKELY(v0.c2)) IS FALSE);
SELECT DISTINCT v0.c1, v0.c0 FROM v0 RIGHT OUTER JOIN t0 ON ((LIKELY(v0.c2)) IS FALSE) WHERE (((((((((x'2bb7')AND(v0.c2 COLLATE RTRIM)))AND(t0.c0 COLLATE RTRIM)))OR((v0.c2 IN ()))))OR(t0.c0 COLLATE BINARY))) UNION SELECT DISTINCT v0.c1, v0.c0 FROM v0 RIGHT OUTER JOIN t0 ON ((LIKELY(v0.c2)) IS FALSE) WHERE ((NOT (((((((((x'2bb7')AND(v0.c2 COLLATE RTRIM)))AND(t0.c0 COLLATE RTRIM)))OR((v0.c2 IN ()))))OR(t0.c0 COLLATE BINARY))))) UNION SELECT DISTINCT v0.c1, v0.c0 FROM v0 RIGHT OUTER JOIN t0 ON ((LIKELY(v0.c2)) IS FALSE) WHERE (((((((((((x'2bb7')AND(v0.c2 COLLATE RTRIM)))AND(t0.c0 COLLATE RTRIM)))OR((v0.c2 IN ()))))OR(t0.c0 COLLATE BINARY))) ISNULL));
SELECT DISTINCT v0.c1, v0.c0 FROM v0 RIGHT OUTER JOIN t0 ON ((LIKELY(v0.c2)) IS FALSE);
SELECT t0.c0, v0.c2, v0.c1, v0.c0 FROM t0, v0 GROUP BY t0.c0, v0.c2, v0.c1, v0.c0;
SELECT ALL t0.c0, v0.c2, v0.c1, v0.c0 FROM t0, v0 WHERE ((((((v0.c1)) NOT BETWEEN ((v0.c2)) AND ((v0.c1)))) NOT BETWEEN (t0.c0) AND (((t0.c0) NOT BETWEEN (v0.c2) AND (v0.c2))))) GROUP BY t0.c0, v0.c2, v0.c1, v0.c0 UNION SELECT t0.c0, v0.c2, v0.c1, v0.c0 FROM t0, v0 WHERE ((NOT ((((((v0.c1)) NOT BETWEEN ((v0.c2)) AND ((v0.c1)))) NOT BETWEEN (t0.c0) AND (((t0.c0) NOT BETWEEN (v0.c2) AND (v0.c2))))))) GROUP BY t0.c0, v0.c2, v0.c1, v0.c0 UNION SELECT t0.c0, v0.c2, v0.c1, v0.c0 FROM t0, v0 WHERE ((((((((v0.c1)) NOT BETWEEN ((v0.c2)) AND ((v0.c1)))) NOT BETWEEN (t0.c0) AND (((t0.c0) NOT BETWEEN (v0.c2) AND (v0.c2))))) ISNULL)) GROUP BY t0.c0, v0.c2, v0.c1, v0.c0;
SELECT t0.c0, v0.c2, v0.c1, v0.c0 FROM t0, v0 GROUP BY t0.c0, v0.c2, v0.c1, v0.c0;
SELECT ALL v0.c2, v0.c0 FROM v0 GROUP BY v0.c2, v0.c0;
SELECT ALL v0.c2, v0.c0 FROM v0 GROUP BY v0.c2, v0.c0 HAVING (((GROUP_CONCAT(v0.c1)))<((MIN(MIN(SUM(v0.c1)))))) UNION ALL SELECT v0.c2, v0.c0 FROM v0 GROUP BY v0.c2, v0.c0 HAVING (NOT ((((GROUP_CONCAT(v0.c1)))<((MIN(MIN(SUM(v0.c1)))))))) UNION ALL SELECT v0.c2, v0.c0 FROM v0 GROUP BY v0.c2, v0.c0 HAVING (((((GROUP_CONCAT(v0.c1)))<((MIN(MIN(SUM(v0.c1))))))) ISNULL);
SELECT ALL * FROM v0;
SELECT * FROM v0 WHERE (((-2.07409377E9) IS FALSE)) UNION ALL SELECT ALL * FROM v0 WHERE ((NOT (((-2.07409377E9) IS FALSE)))) UNION ALL SELECT * FROM v0 WHERE (((((-2.07409377E9) IS FALSE)) ISNULL));
SELECT ALL * FROM v0;
SELECT DISTINCT v0.c0, v0.c1 FROM t0, v0;
SELECT DISTINCT v0.c0, v0.c1 FROM t0, v0 WHERE ((0.38503238897806813 IN ((x'' IN ())))) UNION SELECT DISTINCT v0.c0, v0.c1 FROM t0, v0 NOT INDEXED WHERE ((NOT ((0.38503238897806813 IN ((x'' IN ())))))) UNION SELECT DISTINCT v0.c0, v0.c1 FROM t0, v0 WHERE ((((0.38503238897806813 IN ((x'' IN ())))) ISNULL));
SELECT DISTINCT v0.c0, v0.c1 FROM t0, v0;
SELECT ALL v0.c0, v0.c2 FROM t0 LEFT OUTER JOIN v0 ON (((v0.c2 IN ()))-((('')=(v0.c0)))) GROUP BY v0.c0, v0.c2;
SELECT ALL v0.c0, v0.c2 FROM t0 LEFT OUTER JOIN v0 ON (((v0.c2 IN ()))-((('')==(v0.c0)))) WHERE (((CASE t0.c0  WHEN v0.c0 THEN v0.c2 WHEN t0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c2 END)OR((- (0xffffffffe212de5f))))) GROUP BY v0.c0, v0.c2 UNION SELECT v0.c0, v0.c2 FROM t0 LEFT OUTER JOIN v0 ON (((v0.c2 IN ()))-((('')=(v0.c0)))) WHERE ((NOT (((CASE t0.c0  WHEN v0.c0 THEN v0.c2 WHEN t0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c2 END)OR((- (0Xffffffffe212de5f))))))) GROUP BY v0.c0, v0.c2 UNION SELECT ALL v0.c0, v0.c2 FROM t0 LEFT OUTER JOIN v0 ON (((v0.c2 IN ()))-((('')=(v0.c0)))) WHERE (((((CASE t0.c0  WHEN v0.c0 THEN v0.c2 WHEN t0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c2 END)OR((- (0Xffffffffe212de5f))))) ISNULL)) GROUP BY v0.c0, v0.c2;
SELECT ALL v0.c0, v0.c2 FROM t0 LEFT OUTER JOIN v0 ON (((v0.c2 IN ()))-((('')=(v0.c0)))) GROUP BY v0.c0, v0.c2;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING CASE WHEN ((MIN(MIN(t0.c0))) BETWEEN (t0.c0) AND (AVG(SUM(AVG(t0.c0))))) THEN AVG(t0.c0) END UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (CASE WHEN ((MIN(MIN(t0.c0))) BETWEEN (t0.c0) AND (AVG(SUM(AVG(t0.c0))))) THEN AVG(t0.c0) END)) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((CASE WHEN ((MIN(MIN(t0.c0))) BETWEEN (t0.c0) AND (AVG(SUM(AVG(t0.c0))))) THEN AVG(t0.c0) END) ISNULL);
SELECT ALL * FROM v0 RIGHT OUTER JOIN t0 ON ((v0.c0 COLLATE NOCASE) NOT NULL);
SELECT ALL * FROM v0 RIGHT OUTER JOIN t0 ON ((v0.c0 COLLATE NOCASE) NOT NULL) WHERE (((v0.c0)GLOB(CAST(v0.c2 AS REAL)))) UNION ALL SELECT ALL * FROM v0 RIGHT OUTER JOIN t0 ON ((v0.c0 COLLATE NOCASE) NOT NULL) WHERE ((NOT (((v0.c0)GLOB(CAST(v0.c2 AS REAL)))))) UNION ALL SELECT * FROM v0 RIGHT OUTER JOIN t0 ON ((v0.c0 COLLATE NOCASE) NOT NULL) WHERE (((((v0.c0)GLOB(CAST(v0.c2 AS REAL)))) ISNULL));
SELECT ALL * FROM v0 RIGHT OUTER JOIN t0 ON ((v0.c0 COLLATE NOCASE) NOT NULL);
SELECT DISTINCT * FROM v0, t0;
SELECT DISTINCT * FROM v0 NOT INDEXED, t0 WHERE (((v0.c2) IS FALSE)) UNION SELECT DISTINCT * FROM v0, t0 WHERE ((NOT (((v0.c2) IS FALSE)))) UNION SELECT DISTINCT * FROM v0, t0 WHERE (((((v0.c2) IS FALSE)) ISNULL));
SELECT DISTINCT * FROM v0, t0;
SELECT v0.c0 FROM t0, v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM t0, v0 WHERE (((CAST(v0.c1 AS INTEGER))>(('1747446395' IN ())))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM t0, v0 WHERE ((NOT (((CAST(v0.c1 AS INTEGER))>(('1747446395' IN ())))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM t0, v0 WHERE (((((CAST(v0.c1 AS INTEGER))>(('1747446395' IN ())))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM t0, v0 GROUP BY v0.c0;
SELECT ALL v0.c2, v0.c1 FROM v0, t0 GROUP BY v0.c2, v0.c1;
SELECT ALL v0.c2, v0.c1 FROM v0, t0 GROUP BY v0.c2, v0.c1 HAVING AVG(((GROUP_CONCAT(v0.c2)) IS FALSE)) UNION ALL SELECT ALL v0.c2, v0.c1 FROM v0, t0 GROUP BY v0.c2, v0.c1 HAVING (NOT (AVG(((GROUP_CONCAT(v0.c2)) IS FALSE)))) UNION ALL SELECT ALL v0.c2, v0.c1 FROM v0, t0 GROUP BY v0.c2, v0.c1 HAVING ((AVG(((GROUP_CONCAT(v0.c2)) IS FALSE))) ISNULL);
SELECT * FROM v0;
SELECT * FROM v0 WHERE (CASE WHEN v0.c2 THEN ((v0.c2) BETWEEN (v0.c0) AND (v0.c1)) ELSE '8B/>ov' END) UNION ALL SELECT * FROM v0 WHERE ((NOT (CASE WHEN v0.c2 THEN ((v0.c2) BETWEEN (v0.c0) AND (v0.c1)) ELSE '8B/>ov' END))) UNION ALL SELECT * FROM v0 WHERE (((CASE WHEN v0.c2 THEN ((v0.c2) BETWEEN (v0.c0) AND (v0.c1)) ELSE '8B/>ov' END) ISNULL));
SELECT * FROM v0;
SELECT DISTINCT v0.c2, v0.c0, t0.c0, v0.c1 FROM t0 CROSS JOIN v0 ON IFNULL(DISTINCT ((v0.c0) NOT NULL), CAST(v0.c2 AS TEXT));
SELECT DISTINCT v0.c2, v0.c0, t0.c0, v0.c1 FROM t0 CROSS JOIN v0 ON IFNULL(DISTINCT ((v0.c0) NOT NULL), CAST(v0.c2 AS TEXT)) WHERE (CASE ((v0.c0) BETWEEN (v0.c0) AND (v0.c0))  WHEN v0.c1 THEN ((v0.c0) NOT BETWEEN (t0.c0) AND (v0.c0)) END) UNION SELECT DISTINCT v0.c2, v0.c0, t0.c0, v0.c1 FROM t0 CROSS JOIN v0 ON IFNULL(DISTINCT ((v0.c0) NOT NULL), CAST(v0.c2 AS TEXT)) WHERE ((NOT (CASE ((v0.c0) BETWEEN (v0.c0) AND (v0.c0))  WHEN v0.c1 THEN ((v0.c0) NOT BETWEEN (t0.c0) AND (v0.c0)) END))) UNION SELECT DISTINCT v0.c2, v0.c0, t0.c0, v0.c1 FROM t0 CROSS JOIN v0 ON IFNULL(DISTINCT ((v0.c0) NOT NULL), CAST(v0.c2 AS TEXT)) WHERE (((CASE ((v0.c0) BETWEEN (v0.c0) AND (v0.c0))  WHEN v0.c1 THEN ((v0.c0) NOT BETWEEN (t0.c0) AND (v0.c0)) END) ISNULL));
SELECT DISTINCT v0.c2, v0.c0, t0.c0, v0.c1 FROM t0 CROSS JOIN v0 ON IFNULL(DISTINCT ((v0.c0) NOT NULL), CAST(v0.c2 AS TEXT));
SELECT v0.c2, v0.c0, v0.c1, t0.c0 FROM v0 RIGHT OUTER JOIN t0 ON (((~ (v0.c0)))>=(((((v0.c2)OR(t0.c0)))AND(v0.c1)))) GROUP BY v0.c2, v0.c0, v0.c1, t0.c0;
SELECT ALL v0.c2, v0.c0, v0.c1, t0.c0 FROM v0 RIGHT OUTER JOIN t0 ON (((~ (v0.c0)))>=(((((v0.c2)OR(t0.c0)))AND(v0.c1)))) WHERE (v0.c0) GROUP BY v0.c2, v0.c0, v0.c1, t0.c0 UNION SELECT v0.c2, v0.c0, v0.c1, t0.c0 FROM v0 RIGHT OUTER JOIN t0 ON (((~ (v0.c0)))>=(((((v0.c2)OR(t0.c0)))AND(v0.c1)))) WHERE ((NOT (v0.c0))) GROUP BY v0.c2, v0.c0, v0.c1, t0.c0 UNION SELECT ALL v0.c2, v0.c0, v0.c1, t0.c0 FROM v0 RIGHT OUTER JOIN t0 ON (((~ (v0.c0)))>=(((((v0.c2)OR(t0.c0)))AND(v0.c1)))) WHERE (((v0.c0) ISNULL)) GROUP BY v0.c2, v0.c0, v0.c1, t0.c0;
SELECT v0.c2, v0.c0, v0.c1, t0.c0 FROM v0 RIGHT OUTER JOIN t0 ON (((~ (v0.c0)))>=(((((v0.c2)OR(t0.c0)))AND(v0.c1)))) GROUP BY v0.c2, v0.c0, v0.c1, t0.c0;
SELECT ALL v0.c0, v0.c1, v0.c2, t0.c0 FROM t0, v0 GROUP BY v0.c0, v0.c1, v0.c2, t0.c0;
SELECT ALL v0.c0, v0.c1, v0.c2, t0.c0 FROM t0, v0 GROUP BY v0.c0, v0.c1, v0.c2, t0.c0 HAVING SUM((NOT (t0.c0))) UNION ALL SELECT v0.c0, v0.c1, v0.c2, t0.c0 FROM t0, v0 GROUP BY v0.c0, v0.c1, v0.c2, t0.c0 HAVING (NOT (SUM((NOT (t0.c0))))) UNION ALL SELECT v0.c0, v0.c1, v0.c2, t0.c0 FROM t0, v0 GROUP BY v0.c0, v0.c1, v0.c2, t0.c0 HAVING ((SUM((NOT (t0.c0)))) ISNULL);
SELECT ALL v0.c0, v0.c1, v0.c2, t0.c0 FROM t0, v0 GROUP BY v0.c0, v0.c1, v0.c2, t0.c0;
SELECT ALL v0.c0, v0.c1, v0.c2, t0.c0 FROM t0, v0 GROUP BY v0.c0, v0.c1, v0.c2, t0.c0 HAVING SUM((NOT (t0.c0))) UNION ALL SELECT v0.c0, v0.c1, v0.c2, t0.c0 FROM t0, v0 GROUP BY v0.c0, v0.c1, v0.c2, t0.c0 HAVING (NOT (SUM((NOT (t0.c0))))) UNION ALL SELECT v0.c0, v0.c1, v0.c2, t0.c0 FROM t0, v0 GROUP BY v0.c0, v0.c1, v0.c2, t0.c0 HAVING ((SUM((NOT (t0.c0)))) ISNULL);
SELECT ALL v0.c0, v0.c1, v0.c2, t0.c0 FROM t0, v0 GROUP BY v0.c0, v0.c1, v0.c2, t0.c0;
SELECT v0.c0 FROM t0, v0;
SELECT v0.c0 FROM t0, v0 WHERE (((CASE t0.c0  WHEN v0.c0 THEN t0.c0 WHEN v0.c2 THEN t0.c0 WHEN v0.c1 THEN v0.c2 WHEN v0.c1 THEN v0.c2 WHEN v0.c1 THEN v0.c1 ELSE t0.c0 END)LIKE(CASE WHEN t0.c0 THEN t0.c0 WHEN v0.c2 THEN x'1c62bd99' WHEN v0.c2 THEN v0.c1 ELSE v0.c2 END))) UNION ALL SELECT v0.c0 FROM t0, v0 WHERE ((NOT (((CASE t0.c0  WHEN v0.c0 THEN t0.c0 WHEN v0.c2 THEN t0.c0 WHEN v0.c1 THEN v0.c2 WHEN v0.c1 THEN v0.c2 WHEN v0.c1 THEN v0.c1 ELSE t0.c0 END)LIKE(CASE WHEN t0.c0 THEN t0.c0 WHEN v0.c2 THEN x'1c62bd99' WHEN v0.c2 THEN v0.c1 ELSE v0.c2 END))))) UNION ALL SELECT v0.c0 FROM t0, v0 WHERE (((((CASE t0.c0  WHEN v0.c0 THEN t0.c0 WHEN v0.c2 THEN t0.c0 WHEN v0.c1 THEN v0.c2 WHEN v0.c1 THEN v0.c2 WHEN v0.c1 THEN v0.c1 ELSE t0.c0 END)LIKE(CASE WHEN t0.c0 THEN t0.c0 WHEN v0.c2 THEN x'1c62bd99' WHEN v0.c2 THEN v0.c1 ELSE v0.c2 END))) ISNULL));
SELECT v0.c0 FROM t0, v0;
SELECT DISTINCT * FROM v0, t0;
SELECT DISTINCT * FROM v0, t0 WHERE ((~ (((((t0.c0)AND(t0.c0)))AND(v0.c0))))) UNION SELECT DISTINCT * FROM v0, t0 WHERE ((NOT ((~ (((((t0.c0)AND(t0.c0)))AND(v0.c0))))))) UNION SELECT DISTINCT * FROM v0, t0 WHERE ((((~ (((((t0.c0)AND(t0.c0)))AND(v0.c0))))) ISNULL));
SELECT DISTINCT * FROM v0, t0;
SELECT ALL v0.c0, v0.c2, v0.c1 FROM v0 GROUP BY v0.c0, v0.c2, v0.c1;
SELECT ALL v0.c0, v0.c2, v0.c1 FROM v0 WHERE (((((v0.c1)=(v0.c2)))GLOB(x'1694'))) GROUP BY v0.c0, v0.c2, v0.c1 UNION SELECT v0.c0, v0.c2, v0.c1 FROM v0 WHERE ((NOT (((((v0.c1)=(v0.c2)))GLOB(x'1694'))))) GROUP BY v0.c0, v0.c2, v0.c1 UNION SELECT v0.c0, v0.c2, v0.c1 FROM v0 WHERE (((((((v0.c1)=(v0.c2)))GLOB(x'1694'))) ISNULL)) GROUP BY v0.c0, v0.c2, v0.c1;
SELECT ALL v0.c0, v0.c2, v0.c1 FROM v0 GROUP BY v0.c0, v0.c2, v0.c1;
SELECT v0.c2, t0.c0 FROM t0 RIGHT OUTER JOIN v0 ON t0.c0 GROUP BY v0.c2, t0.c0;
SELECT v0.c2, t0.c0 FROM t0 RIGHT OUTER JOIN v0 ON t0.c0 GROUP BY v0.c2, t0.c0 HAVING SUM((((MIN(v0.c1))) BETWEEN ((v0.c1)) AND ((v0.c2)))) UNION ALL SELECT v0.c2, t0.c0 FROM t0 RIGHT OUTER JOIN v0 ON t0.c0 GROUP BY v0.c2, t0.c0 HAVING (NOT (SUM((((MIN(v0.c1))) BETWEEN ((v0.c1)) AND ((v0.c2)))))) UNION ALL SELECT v0.c2, t0.c0 FROM t0 RIGHT OUTER JOIN v0 ON t0.c0 GROUP BY v0.c2, t0.c0 HAVING ((SUM((((MIN(v0.c1))) BETWEEN ((v0.c1)) AND ((v0.c2))))) ISNULL);
SELECT ALL v0.c1, t0.c0, v0.c0, v0.c2 FROM t0, v0;
SELECT ALL v0.c1, t0.c0, v0.c0, v0.c2 FROM t0, v0 WHERE ((((((((v0.c0, v0.c1, x'')) BETWEEN ((v0.c0, v0.c0, v0.c2)) AND ((v0.c1, t0.c0, ' u'))))AND((((v0.c1))!=((v0.c2))))))OR(((v0.c0)<<(v0.c1))))) UNION ALL SELECT ALL v0.c1, t0.c0, v0.c0, v0.c2 FROM t0, v0 WHERE ((NOT ((((((((v0.c0, v0.c1, x'')) BETWEEN ((v0.c0, v0.c0, v0.c2)) AND ((v0.c1, t0.c0, ' u'))))AND((((v0.c1))!=((v0.c2))))))OR(((v0.c0)<<(v0.c1))))))) UNION ALL SELECT v0.c1, t0.c0, v0.c0, v0.c2 FROM t0, v0 WHERE ((((((((((v0.c0, v0.c1, x'')) BETWEEN ((v0.c0, v0.c0, v0.c2)) AND ((v0.c1, t0.c0, ' u'))))AND((((v0.c1))<>((v0.c2))))))OR(((v0.c0)<<(v0.c1))))) ISNULL));
SELECT ALL v0.c1, t0.c0, v0.c0, v0.c2 FROM t0, v0;
SELECT DISTINCT v0.c1 FROM v0;
SELECT DISTINCT v0.c1 FROM v0 WHERE ((NOT (CAST(v0.c1 AS REAL)))) UNION SELECT DISTINCT v0.c1 FROM v0 WHERE ((NOT ((NOT (CAST(v0.c1 AS REAL)))))) UNION SELECT DISTINCT v0.c1 FROM v0 WHERE ((((NOT (CAST(v0.c1 AS REAL)))) ISNULL));
SELECT DISTINCT v0.c1 FROM v0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE (((((NULL IN ())))=((((t0.c0) NOTNULL))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT (((((NULL IN ())))=((((t0.c0) NOTNULL))))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE (((((((NULL IN ())))==((((t0.c0) NOTNULL))))) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT v0.c0, v0.c2 FROM v0, t0 GROUP BY v0.c0, v0.c2;
SELECT ALL v0.c0, v0.c2 FROM v0, t0 GROUP BY v0.c0, v0.c2 HAVING MAX(0.0765427914670227) UNION ALL SELECT v0.c0, v0.c2 FROM v0, t0 GROUP BY v0.c0, v0.c2 HAVING (NOT (MAX(0.0765427914670227))) UNION ALL SELECT v0.c0, v0.c2 FROM v0, t0 GROUP BY v0.c0, v0.c2 HAVING ((MAX(0.0765427914670227)) ISNULL);
SELECT v0.c0, v0.c2 FROM v0, t0 GROUP BY v0.c0, v0.c2;
SELECT ALL v0.c0, v0.c2 FROM v0, t0 GROUP BY v0.c0, v0.c2 HAVING MAX(0.0765427914670227) UNION ALL SELECT v0.c0, v0.c2 FROM v0, t0 GROUP BY v0.c0, v0.c2 HAVING (NOT (MAX(0.0765427914670227))) UNION ALL SELECT v0.c0, v0.c2 FROM v0, t0 GROUP BY v0.c0, v0.c2 HAVING ((MAX(0.0765427914670227)) ISNULL);
SELECT v0.c0, v0.c2 FROM v0, t0 GROUP BY v0.c0, v0.c2;
SELECT v0.c0, v0.c2, v0.c1 FROM v0;
SELECT v0.c0, v0.c2, v0.c1 FROM v0 WHERE (CAST((NOT (v0.c2)) AS INTEGER)) UNION ALL SELECT ALL v0.c0, v0.c2, v0.c1 FROM v0 WHERE ((NOT (CAST((NOT (v0.c2)) AS INTEGER)))) UNION ALL SELECT ALL v0.c0, v0.c2, v0.c1 FROM v0 WHERE (((CAST((NOT (v0.c2)) AS INTEGER)) ISNULL));
SELECT v0.c0, v0.c2, v0.c1 FROM v0;
SELECT DISTINCT * FROM v0, t0;
SELECT DISTINCT * FROM v0, t0 WHERE ('?_') UNION SELECT DISTINCT * FROM v0, t0 WHERE ((NOT ('?_'))) UNION SELECT DISTINCT * FROM v0, t0 WHERE ((('?_') ISNULL));
SELECT DISTINCT * FROM v0, t0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE (((t0.c0)/((t0.c0 IN (t0.c0, t0.c0))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT (((t0.c0)/((t0.c0 IN (t0.c0, t0.c0))))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE (((((t0.c0)/((t0.c0 IN (t0.c0, t0.c0))))) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT v0.c2 FROM t0, v0 GROUP BY v0.c2;
SELECT ALL v0.c2 FROM t0, v0 GROUP BY v0.c2 HAVING MIN(GROUP_CONCAT(v0.c2)) UNION ALL SELECT ALL v0.c2 FROM t0, v0 GROUP BY v0.c2 HAVING (NOT (MIN(GROUP_CONCAT(v0.c2)))) UNION ALL SELECT v0.c2 FROM t0, v0 GROUP BY v0.c2 HAVING ((MIN(GROUP_CONCAT(v0.c2))) ISNULL);
SELECT t0.c0 FROM t0;
SELECT ALL t0.c0 FROM t0 WHERE (((t0.c0)AND('\n8')) COLLATE RTRIM) UNION ALL SELECT ALL t0.c0 FROM t0 WHERE ((NOT (((t0.c0)AND('\n8')) COLLATE RTRIM))) UNION ALL SELECT t0.c0 FROM t0 WHERE (((((t0.c0)AND('\n8')) COLLATE RTRIM) ISNULL));
SELECT t0.c0 FROM t0;
SELECT DISTINCT v0.c1, v0.c0, t0.c0 FROM t0, v0;
SELECT DISTINCT v0.c1, v0.c0, t0.c0 FROM t0, v0 WHERE ((((v0.c2))!=((v0.c2)))) UNION SELECT DISTINCT v0.c1, v0.c0, t0.c0 FROM t0, v0 WHERE ((NOT ((((v0.c2))<>((v0.c2)))))) UNION SELECT DISTINCT v0.c1, v0.c0, t0.c0 FROM t0, v0 WHERE ((((((v0.c2))!=((v0.c2)))) ISNULL));
SELECT DISTINCT v0.c1, v0.c0, t0.c0 FROM t0, v0;
SELECT ALL t0.c0, v0.c0 FROM v0 INNER JOIN t0 ON (CAST(v0.c0 AS REAL) IN (((v0.c0) ISNULL), v0.c1)) GROUP BY t0.c0, v0.c0;
SELECT t0.c0, v0.c0 FROM v0 INNER JOIN t0 ON (CAST(v0.c0 AS REAL) IN (((v0.c0) ISNULL), v0.c1)) WHERE (((CASE WHEN v0.c1 THEN v0.c0 WHEN t0.c0 THEN t0.c0 WHEN v0.c2 THEN v0.c2 END) IS FALSE)) GROUP BY t0.c0, v0.c0 UNION SELECT t0.c0, v0.c0 FROM v0 INNER JOIN t0 ON (CAST(v0.c0 AS REAL) IN (((v0.c0) ISNULL), v0.c1)) WHERE ((NOT (((CASE WHEN v0.c1 THEN v0.c0 WHEN t0.c0 THEN t0.c0 WHEN v0.c2 THEN v0.c2 END) IS FALSE)))) GROUP BY t0.c0, v0.c0 UNION SELECT t0.c0, v0.c0 FROM v0 INNER JOIN t0 ON (CAST(v0.c0 AS REAL) IN (((v0.c0) ISNULL), v0.c1)) WHERE (((((CASE WHEN v0.c1 THEN v0.c0 WHEN t0.c0 THEN t0.c0 WHEN v0.c2 THEN v0.c2 END) IS FALSE)) ISNULL)) GROUP BY t0.c0, v0.c0;
SELECT ALL t0.c0, v0.c0 FROM v0 INNER JOIN t0 ON (CAST(v0.c0 AS REAL) IN (((v0.c0) ISNULL), v0.c1)) GROUP BY t0.c0, v0.c0;
SELECT ALL v0.c0, v0.c1 FROM v0, t0 GROUP BY v0.c0, v0.c1;
SELECT v0.c0, v0.c1 FROM v0, t0 GROUP BY v0.c0, v0.c1 HAVING CAST(COUNT(*) AS INTEGER) UNION ALL SELECT ALL v0.c0, v0.c1 FROM v0, t0 GROUP BY v0.c0, v0.c1 HAVING (NOT (CAST(COUNT(*) AS INTEGER))) UNION ALL SELECT ALL v0.c0, v0.c1 FROM v0, t0 GROUP BY v0.c0, v0.c1 HAVING ((CAST(COUNT(*) AS INTEGER)) ISNULL);
SELECT ALL v0.c0, v0.c1 FROM v0, t0 GROUP BY v0.c0, v0.c1;
SELECT v0.c0, v0.c1 FROM v0, t0 GROUP BY v0.c0, v0.c1 HAVING CAST(COUNT(*) AS INTEGER) UNION ALL SELECT ALL v0.c0, v0.c1 FROM v0, t0 GROUP BY v0.c0, v0.c1 HAVING (NOT (CAST(COUNT(*) AS INTEGER))) UNION ALL SELECT ALL v0.c0, v0.c1 FROM v0, t0 GROUP BY v0.c0, v0.c1 HAVING ((CAST(COUNT(*) AS INTEGER)) ISNULL);
SELECT ALL v0.c0, v0.c1 FROM v0, t0 GROUP BY v0.c0, v0.c1;
SELECT * FROM v0, t0;
SELECT ALL * FROM v0, t0 WHERE (CASE WHEN ((t0.c0) BETWEEN (v0.c1) AND (v0.c0)) THEN ((((((((v0.c1)AND(v0.c1)))AND(0.7771303511007751)))OR(v0.c1)))OR(v0.c2)) ELSE x'' COLLATE BINARY END) UNION ALL SELECT * FROM v0, t0 WHERE ((NOT (CASE WHEN ((t0.c0) BETWEEN (v0.c1) AND (v0.c0)) THEN ((((((((v0.c1)AND(v0.c1)))AND(0.7771303511007751)))OR(v0.c1)))OR(v0.c2)) ELSE x'' COLLATE BINARY END))) UNION ALL SELECT * FROM v0, t0 WHERE (((CASE WHEN ((t0.c0) BETWEEN (v0.c1) AND (v0.c0)) THEN ((((((((v0.c1)AND(v0.c1)))AND(0.7771303511007751)))OR(v0.c1)))OR(v0.c2)) ELSE x'' COLLATE BINARY END) ISNULL));
SELECT * FROM v0, t0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE ((((+ (v0.c0)))<=(v0.c0))) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT ((((+ (v0.c0)))<=(v0.c0))))) UNION SELECT DISTINCT * FROM v0 WHERE ((((((+ (v0.c0)))<=(v0.c0))) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT ALL v0.c1 FROM v0, t0 GROUP BY v0.c1;
SELECT v0.c1 FROM v0, t0 WHERE ((~ (TIME(v0.c1, t0.c0, v0.c2, v0.c0, t0.c0)))) GROUP BY v0.c1 UNION SELECT ALL v0.c1 FROM v0, t0 WHERE ((NOT ((~ (TIME(v0.c1, t0.c0, v0.c2, v0.c0, t0.c0)))))) GROUP BY v0.c1 UNION SELECT v0.c1 FROM v0, t0 WHERE ((((~ (TIME(v0.c1, t0.c0, v0.c2, v0.c0, t0.c0)))) ISNULL)) GROUP BY v0.c1;
SELECT ALL v0.c1 FROM v0, t0 GROUP BY v0.c1;
SELECT v0.c0, v0.c2 FROM v0 GROUP BY v0.c0, v0.c2;
SELECT v0.c0, v0.c2 FROM v0 GROUP BY v0.c0, v0.c2 HAVING COUNT(MIN(GROUP_CONCAT(COUNT(COUNT(*))))) UNION ALL SELECT ALL v0.c0, v0.c2 FROM v0 GROUP BY v0.c0, v0.c2 HAVING (NOT (COUNT(MIN(GROUP_CONCAT(COUNT(COUNT(*))))))) UNION ALL SELECT v0.c0, v0.c2 FROM v0 GROUP BY v0.c0, v0.c2 HAVING ((COUNT(MIN(GROUP_CONCAT(COUNT(COUNT(*)))))) ISNULL);
SELECT ALL * FROM v0, t0;
SELECT * FROM v0, t0 WHERE ((((v0.c1 IN ())) NOTNULL)) UNION ALL SELECT ALL * FROM v0, t0 WHERE ((NOT ((((v0.c1 IN ())) NOTNULL)))) UNION ALL SELECT ALL * FROM v0, t0 WHERE ((((((v0.c1 IN ())) NOTNULL)) ISNULL));
SELECT ALL * FROM v0, t0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (((CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)GLOB(((((t0.c0)AND(t0.c0)))OR(t0.c0))))) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (((CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)GLOB(((((t0.c0)AND(t0.c0)))OR(t0.c0))))))) UNION SELECT DISTINCT * FROM t0 WHERE (((((CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)GLOB(((((t0.c0)AND(t0.c0)))OR(t0.c0))))) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE ((x'' IN ()) COLLATE BINARY) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT ((x'' IN ()) COLLATE BINARY))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((((x'' IN ()) COLLATE BINARY) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT v0.c1, t0.c0 FROM v0, t0 GROUP BY v0.c1, t0.c0;
SELECT v0.c1, t0.c0 FROM v0, t0 GROUP BY v0.c1, t0.c0 HAVING MIN(CAST(v0.c0 AS INTEGER)) UNION ALL SELECT ALL v0.c1, t0.c0 FROM v0, t0 GROUP BY v0.c1, t0.c0 HAVING (NOT (MIN(CAST(v0.c0 AS INTEGER)))) UNION ALL SELECT ALL v0.c1, t0.c0 FROM v0, t0 GROUP BY v0.c1, t0.c0 HAVING ((MIN(CAST(v0.c0 AS INTEGER))) ISNULL);
SELECT v0.c1, t0.c0 FROM v0, t0 GROUP BY v0.c1, t0.c0;
SELECT v0.c1, t0.c0 FROM v0, t0 GROUP BY v0.c1, t0.c0 HAVING MIN(CAST(v0.c0 AS INTEGER)) UNION ALL SELECT ALL v0.c1, t0.c0 FROM v0, t0 GROUP BY v0.c1, t0.c0 HAVING (NOT (MIN(CAST(v0.c0 AS INTEGER)))) UNION ALL SELECT ALL v0.c1, t0.c0 FROM v0, t0 GROUP BY v0.c1, t0.c0 HAVING ((MIN(CAST(v0.c0 AS INTEGER))) ISNULL);
SELECT v0.c1, t0.c0 FROM v0, t0 GROUP BY v0.c1, t0.c0;
SELECT * FROM t0, v0;
SELECT * FROM t0, v0 WHERE (((((v0.c0) NOT BETWEEN (t0.c0) AND (v0.c2))) IS FALSE)) UNION ALL SELECT ALL * FROM t0, v0 WHERE ((NOT (((((v0.c0) NOT BETWEEN (t0.c0) AND (v0.c2))) IS FALSE)))) UNION ALL SELECT ALL * FROM t0, v0 WHERE (((((((v0.c0) NOT BETWEEN (t0.c0) AND (v0.c2))) IS FALSE)) ISNULL));
SELECT * FROM t0, v0;
SELECT DISTINCT v0.c2 FROM v0;
SELECT DISTINCT v0.c2 FROM v0 WHERE (v0.c1) UNION SELECT DISTINCT v0.c2 FROM v0 WHERE ((NOT (v0.c1))) UNION SELECT DISTINCT v0.c2 FROM v0 WHERE (((v0.c1) ISNULL));
SELECT DISTINCT v0.c2 FROM v0;
SELECT v0.c0 FROM t0, v0 GROUP BY v0.c0;
SELECT v0.c0 FROM t0, v0 WHERE (((((((t0.c0)OR(v0.c1)))AND(t0.c0)))<<((NULL IN (v0.c0))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM t0, v0 WHERE ((NOT (((((((t0.c0)OR(v0.c1)))AND(t0.c0)))<<((NULL IN (v0.c0))))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM t0, v0 WHERE (((((((((t0.c0)OR(v0.c1)))AND(t0.c0)))<<((NULL IN (v0.c0))))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM t0, v0 GROUP BY v0.c0;
SELECT v0.c0, t0.c0, v0.c1, v0.c2 FROM v0, t0 GROUP BY v0.c0, t0.c0, v0.c1, v0.c2;
SELECT ALL v0.c0, t0.c0, v0.c1, v0.c2 FROM v0, t0 GROUP BY v0.c0, t0.c0, v0.c1, v0.c2 HAVING ((CASE AVG(AVG(v0.c1))  WHEN GROUP_CONCAT(COUNT(*)) THEN v0.c1 ELSE v0.c1 END) IS FALSE) UNION ALL SELECT v0.c0, t0.c0, v0.c1, v0.c2 FROM v0, t0 GROUP BY v0.c0, t0.c0, v0.c1, v0.c2 HAVING (NOT (((CASE AVG(AVG(v0.c1))  WHEN GROUP_CONCAT(COUNT(*)) THEN v0.c1 ELSE v0.c1 END) IS FALSE))) UNION ALL SELECT ALL v0.c0, t0.c0, v0.c1, v0.c2 FROM v0, t0 GROUP BY v0.c0, t0.c0, v0.c1, v0.c2 HAVING ((((CASE AVG(AVG(v0.c1))  WHEN GROUP_CONCAT(COUNT(*)) THEN v0.c1 ELSE v0.c1 END) IS FALSE)) ISNULL);
SELECT * FROM t0;
SELECT * FROM t0 WHERE (((CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END) NOT BETWEEN ((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0)))) AND ((- (t0.c0))))) UNION ALL SELECT * FROM t0 WHERE ((NOT (((CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END) NOT BETWEEN ((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0)))) AND ((- (t0.c0))))))) UNION ALL SELECT ALL * FROM t0 WHERE (((((CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END) NOT BETWEEN ((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0)))) AND ((- (t0.c0))))) ISNULL));
SELECT * FROM t0;
SELECT DISTINCT t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0 WHERE (((((t0.c0)/(t0.c0)))IS NOT(0.4831181680402321))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((NOT (((((t0.c0)/(t0.c0)))IS NOT(0.4831181680402321))))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE (((((((t0.c0)/(t0.c0)))IS NOT(0.4831181680402321))) ISNULL));
SELECT DISTINCT t0.c0 FROM t0;
SELECT ALL v0.c2 FROM t0, v0 GROUP BY v0.c2;
SELECT v0.c2 FROM t0, v0 WHERE ((((- (v0.c1))) NOT NULL)) GROUP BY v0.c2 UNION SELECT ALL v0.c2 FROM t0, v0 WHERE ((NOT ((((- (v0.c1))) NOT NULL)))) GROUP BY v0.c2 UNION SELECT ALL v0.c2 FROM t0, v0 WHERE ((((((- (v0.c1))) NOT NULL)) ISNULL)) GROUP BY v0.c2;
SELECT ALL v0.c2 FROM t0, v0 GROUP BY v0.c2;
SELECT v0.c2, v0.c0 FROM v0 GROUP BY v0.c2, v0.c0;
SELECT v0.c2, v0.c0 FROM v0 GROUP BY v0.c2, v0.c0 HAVING v0.c2 UNION ALL SELECT v0.c2, v0.c0 FROM v0 GROUP BY v0.c2, v0.c0 HAVING (NOT (v0.c2)) UNION ALL SELECT v0.c2, v0.c0 FROM v0 GROUP BY v0.c2, v0.c0 HAVING ((v0.c2) ISNULL);
SELECT v0.c2, v0.c0 FROM v0 GROUP BY v0.c2, v0.c0;
SELECT v0.c2, v0.c0 FROM v0 GROUP BY v0.c2, v0.c0 HAVING v0.c2 UNION ALL SELECT v0.c2, v0.c0 FROM v0 GROUP BY v0.c2, v0.c0 HAVING (NOT (v0.c2)) UNION ALL SELECT v0.c2, v0.c0 FROM v0 GROUP BY v0.c2, v0.c0 HAVING ((v0.c2) ISNULL);
SELECT v0.c2, v0.c0 FROM v0 GROUP BY v0.c2, v0.c0;
SELECT t0.c0 FROM t0;
SELECT t0.c0 FROM t0 WHERE (((TRIM(DISTINCT t0.c0)) NOTNULL)) UNION ALL SELECT ALL t0.c0 FROM t0 WHERE ((NOT (((TRIM(DISTINCT t0.c0)) NOTNULL)))) UNION ALL SELECT t0.c0 FROM t0 WHERE (((((TRIM(DISTINCT t0.c0)) NOTNULL)) ISNULL));
SELECT t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0 WHERE ((~ (CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((NOT ((~ (CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END))))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((((~ (CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END))) ISNULL));
SELECT DISTINCT t0.c0 FROM t0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 WHERE (((((CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)OR((((t0.c0, t0.c0, t0.c0))>=((t0.c0, t0.c0, t0.c0))))))AND((+ (t0.c0))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT (((((CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)OR((((t0.c0, t0.c0, t0.c0))>=((t0.c0, t0.c0, t0.c0))))))AND((+ (t0.c0))))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE (((((((CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)OR((((t0.c0, t0.c0, t0.c0))>=((t0.c0, t0.c0, t0.c0))))))AND((+ (t0.c0))))) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL v0.c1 FROM v0, t0 GROUP BY v0.c1;
SELECT ALL v0.c1 FROM v0, t0 GROUP BY v0.c1 HAVING v0.c2 UNION ALL SELECT ALL v0.c1 FROM v0, t0 GROUP BY v0.c1 HAVING (NOT (v0.c2)) UNION ALL SELECT ALL v0.c1 FROM v0, t0 GROUP BY v0.c1 HAVING ((v0.c2) ISNULL);
SELECT ALL v0.c1 FROM v0, t0 GROUP BY v0.c1;
SELECT ALL v0.c1 FROM v0, t0 GROUP BY v0.c1 HAVING v0.c2 UNION ALL SELECT ALL v0.c1 FROM v0, t0 GROUP BY v0.c1 HAVING (NOT (v0.c2)) UNION ALL SELECT ALL v0.c1 FROM v0, t0 GROUP BY v0.c1 HAVING ((v0.c2) ISNULL);
SELECT ALL v0.c1 FROM v0, t0 GROUP BY v0.c1;
SELECT ALL v0.c2, v0.c0, t0.c0 FROM v0, t0;
SELECT v0.c2, v0.c0, t0.c0 FROM v0, t0 WHERE ((- (((((v0.c2)OR(v0.c1)))OR(t0.c0))))) ORDER BY ((((NULL)AND(v0.c1)))OR(v0.c1)) COLLATE NOCASE COLLATE NOCASE DESC, CASE WHEN v0.c1 THEN INSTR(v0.c1, t0.c0) ELSE (v0.c0 IN ()) END DESC, (((t0.c0)) BETWEEN (((+ (t0.c0)))) AND ((v0.c0 COLLATE RTRIM))) ASC  NULLS FIRST;
SELECT v0.c2, v0.c0, t0.c0 FROM v0, t0 WHERE ((NOT ((- (((((v0.c2)OR(v0.c1)))OR(t0.c0))))))) ORDER BY ((((NULL)AND(v0.c1)))OR(v0.c1)) COLLATE NOCASE COLLATE NOCASE DESC, CASE WHEN v0.c1 THEN INSTR(v0.c1, t0.c0) ELSE (v0.c0 IN ()) END DESC, (((t0.c0)) BETWEEN (((+ (t0.c0)))) AND ((v0.c0 COLLATE RTRIM))) ASC  NULLS FIRST;
SELECT ALL v0.c2, v0.c0, t0.c0 FROM v0, t0 WHERE ((((- (((((v0.c2)OR(v0.c1)))OR(t0.c0))))) ISNULL)) ORDER BY ((((NULL)AND(v0.c1)))OR(v0.c1)) COLLATE NOCASE COLLATE NOCASE DESC, CASE WHEN v0.c1 THEN INSTR(v0.c1, t0.c0) ELSE (v0.c0 IN ()) END DESC, (((t0.c0)) BETWEEN (((+ (t0.c0)))) AND ((v0.c0 COLLATE RTRIM))) ASC  NULLS FIRST;
SELECT ALL v0.c2, v0.c0, t0.c0 FROM v0, t0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE ((~ (t0.c0)) COLLATE BINARY) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT ((~ (t0.c0)) COLLATE BINARY))) UNION SELECT DISTINCT * FROM t0 WHERE ((((~ (t0.c0)) COLLATE BINARY) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT t0.c0, v0.c2, v0.c1 FROM t0, v0 GROUP BY t0.c0, v0.c2, v0.c1;
SELECT ALL t0.c0, v0.c2, v0.c1 FROM t0, v0 WHERE ((((('605324204')||(v0.c2)))>((v0.c0 IN (v0.c0))))) GROUP BY t0.c0, v0.c2, v0.c1 UNION SELECT t0.c0, v0.c2, v0.c1 FROM t0, v0 WHERE ((NOT ((((('605324204')||(v0.c2)))>((v0.c0 IN (v0.c0))))))) GROUP BY t0.c0, v0.c2, v0.c1 UNION SELECT ALL t0.c0, v0.c2, v0.c1 FROM t0, v0 NOT INDEXED WHERE ((((((('605324204')||(v0.c2)))>((v0.c0 IN (v0.c0))))) ISNULL)) GROUP BY t0.c0, v0.c2, v0.c1;
SELECT t0.c0, v0.c2, v0.c1 FROM t0, v0 GROUP BY t0.c0, v0.c2, v0.c1;
SELECT v0.c1, v0.c2 FROM v0 GROUP BY v0.c1, v0.c2;
SELECT ALL v0.c1, v0.c2 FROM v0 GROUP BY v0.c1, v0.c2 HAVING v0.c2 UNION ALL SELECT ALL v0.c1, v0.c2 FROM v0 GROUP BY v0.c1, v0.c2 HAVING (NOT (v0.c2)) UNION ALL SELECT v0.c1, v0.c2 FROM v0 GROUP BY v0.c1, v0.c2 HAVING ((v0.c2) ISNULL);
SELECT v0.c1, v0.c2 FROM v0 GROUP BY v0.c1, v0.c2;
SELECT ALL v0.c1, v0.c2 FROM v0 GROUP BY v0.c1, v0.c2 HAVING v0.c2 UNION ALL SELECT ALL v0.c1, v0.c2 FROM v0 GROUP BY v0.c1, v0.c2 HAVING (NOT (v0.c2)) UNION ALL SELECT v0.c1, v0.c2 FROM v0 GROUP BY v0.c1, v0.c2 HAVING ((v0.c2) ISNULL);
SELECT v0.c1, v0.c2 FROM v0 GROUP BY v0.c1, v0.c2;
SELECT ALL * FROM t0;
SELECT * FROM t0 WHERE (('H' IN (((((t0.c0)AND(t0.c0)))AND(t0.c0))))) UNION ALL SELECT * FROM t0 WHERE ((NOT (('H' IN (((((t0.c0)AND(t0.c0)))AND(t0.c0))))))) UNION ALL SELECT ALL * FROM t0 WHERE (((('H' IN (((((t0.c0)AND(t0.c0)))AND(t0.c0))))) ISNULL));
SELECT ALL * FROM t0;
SELECT DISTINCT * FROM v0, t0;
SELECT DISTINCT * FROM v0, t0 WHERE (t0.c0) UNION SELECT DISTINCT * FROM v0, t0 WHERE ((NOT (t0.c0))) UNION SELECT DISTINCT * FROM v0, t0 WHERE (((t0.c0) ISNULL));
SELECT DISTINCT * FROM v0, t0;
SELECT v0.c1, v0.c2 FROM v0 GROUP BY v0.c1, v0.c2;
SELECT v0.c1, v0.c2 FROM v0 WHERE (COALESCE(DISTINCT v0.c2, (v0.c2 IN ()), (((v0.c1))>=((v0.c2))), (v0.c1 IN (0.8282699882719613)))) GROUP BY v0.c1, v0.c2 UNION SELECT v0.c1, v0.c2 FROM v0 WHERE ((NOT (COALESCE(DISTINCT v0.c2, (v0.c2 IN ()), (((v0.c1))>=((v0.c2))), (v0.c1 IN (0.8282699882719613)))))) GROUP BY v0.c1, v0.c2 UNION SELECT v0.c1, v0.c2 FROM v0 WHERE (((COALESCE(DISTINCT v0.c2, (v0.c2 IN ()), (((v0.c1))>=((v0.c2))), (v0.c1 IN (0.8282699882719613)))) ISNULL)) GROUP BY v0.c1, v0.c2;
SELECT v0.c1, v0.c2 FROM v0 GROUP BY v0.c1, v0.c2;
SELECT v0.c2, v0.c1, t0.c0 FROM t0 FULL OUTER JOIN v0 ON ((((((((((v0.c2)AND(v0.c0)))OR(v0.c1)))AND(((v0.c1)/(v0.c2)))))OR(((v0.c0)+(v0.c0)))))AND(((v0.c2) BETWEEN (v0.c1) AND (v0.c1)))) GROUP BY v0.c2, v0.c1, t0.c0;
SELECT v0.c2, v0.c1, t0.c0 FROM t0 FULL OUTER JOIN v0 ON ((((((((((v0.c2)AND(v0.c0)))OR(v0.c1)))AND(((v0.c1)/(v0.c2)))))OR(((v0.c0)+(v0.c0)))))AND(((v0.c2) BETWEEN (v0.c1) AND (v0.c1)))) GROUP BY v0.c2, v0.c1, t0.c0 HAVING (MAX(v0.c1) IN ()) UNION ALL SELECT v0.c2, v0.c1, t0.c0 FROM t0 FULL OUTER JOIN v0 ON ((((((((((v0.c2)AND(v0.c0)))OR(v0.c1)))AND(((v0.c1)/(v0.c2)))))OR(((v0.c0)+(v0.c0)))))AND(((v0.c2) BETWEEN (v0.c1) AND (v0.c1)))) GROUP BY v0.c2, v0.c1, t0.c0 HAVING (NOT ((MAX(v0.c1) IN ()))) UNION ALL SELECT v0.c2, v0.c1, t0.c0 FROM t0 FULL OUTER JOIN v0 ON ((((((((((v0.c2)AND(v0.c0)))OR(v0.c1)))AND(((v0.c1)/(v0.c2)))))OR(((v0.c0)+(v0.c0)))))AND(((v0.c2) BETWEEN (v0.c1) AND (v0.c1)))) GROUP BY v0.c2, v0.c1, t0.c0 HAVING (((MAX(v0.c1) IN ())) ISNULL);
SELECT v0.c2, v0.c1, t0.c0 FROM t0 FULL OUTER JOIN v0 ON ((((((((((v0.c2)AND(v0.c0)))OR(v0.c1)))AND(((v0.c1)/(v0.c2)))))OR(((v0.c0)+(v0.c0)))))AND(((v0.c2) BETWEEN (v0.c1) AND (v0.c1)))) GROUP BY v0.c2, v0.c1, t0.c0;
SELECT v0.c2, v0.c1, t0.c0 FROM t0 FULL OUTER JOIN v0 ON ((((((((((v0.c2)AND(v0.c0)))OR(v0.c1)))AND(((v0.c1)/(v0.c2)))))OR(((v0.c0)+(v0.c0)))))AND(((v0.c2) BETWEEN (v0.c1) AND (v0.c1)))) GROUP BY v0.c2, v0.c1, t0.c0 HAVING (MAX(v0.c1) IN ()) UNION ALL SELECT v0.c2, v0.c1, t0.c0 FROM t0 FULL OUTER JOIN v0 ON ((((((((((v0.c2)AND(v0.c0)))OR(v0.c1)))AND(((v0.c1)/(v0.c2)))))OR(((v0.c0)+(v0.c0)))))AND(((v0.c2) BETWEEN (v0.c1) AND (v0.c1)))) GROUP BY v0.c2, v0.c1, t0.c0 HAVING (NOT ((MAX(v0.c1) IN ()))) UNION ALL SELECT v0.c2, v0.c1, t0.c0 FROM t0 FULL OUTER JOIN v0 ON ((((((((((v0.c2)AND(v0.c0)))OR(v0.c1)))AND(((v0.c1)/(v0.c2)))))OR(((v0.c0)+(v0.c0)))))AND(((v0.c2) BETWEEN (v0.c1) AND (v0.c1)))) GROUP BY v0.c2, v0.c1, t0.c0 HAVING (((MAX(v0.c1) IN ())) ISNULL);
SELECT v0.c2, v0.c1, t0.c0 FROM t0 FULL OUTER JOIN v0 ON ((((((((((v0.c2)AND(v0.c0)))OR(v0.c1)))AND(((v0.c1)/(v0.c2)))))OR(((v0.c0)+(v0.c0)))))AND(((v0.c2) BETWEEN (v0.c1) AND (v0.c1)))) GROUP BY v0.c2, v0.c1, t0.c0;
SELECT ALL * FROM v0, t0;
SELECT ALL * FROM v0, t0 WHERE ((((t0.c0 IN ()))IS NOT(((t0.c0) NOT BETWEEN (t0.c0) AND (v0.c2))))) UNION ALL SELECT * FROM v0, t0 WHERE ((NOT ((((t0.c0 IN ()))IS NOT(((t0.c0) NOT BETWEEN (t0.c0) AND (v0.c2))))))) UNION ALL SELECT ALL * FROM v0, t0 WHERE ((((((t0.c0 IN ()))IS NOT(((t0.c0) NOT BETWEEN (t0.c0) AND (v0.c2))))) ISNULL));
SELECT ALL * FROM v0, t0;
SELECT DISTINCT * FROM t0, v0;
SELECT DISTINCT * FROM t0, v0 WHERE (UNLIKELY(DISTINCT CAST(0.5692452135765043 AS BLOB))) UNION SELECT DISTINCT * FROM t0, v0 WHERE ((NOT (UNLIKELY(DISTINCT CAST(0.5692452135765043 AS BLOB))))) UNION SELECT DISTINCT * FROM t0, v0 WHERE (((UNLIKELY(DISTINCT CAST(0.5692452135765043 AS BLOB))) ISNULL));
SELECT DISTINCT * FROM t0, v0;
SELECT v0.c1, v0.c2, v0.c0 FROM v0 GROUP BY v0.c1, v0.c2, v0.c0;
SELECT ALL v0.c1, v0.c2, v0.c0 FROM v0 WHERE (((CAST(v0.c1 AS BLOB))OR((v0.c0 IN (v0.c0, v0.c1))))) GROUP BY v0.c1, v0.c2, v0.c0 UNION SELECT ALL v0.c1, v0.c2, v0.c0 FROM v0 WHERE ((NOT (((CAST(v0.c1 AS BLOB))OR((v0.c0 IN (v0.c0, v0.c1))))))) GROUP BY v0.c1, v0.c2, v0.c0 UNION SELECT ALL v0.c1, v0.c2, v0.c0 FROM v0 WHERE (((((CAST(v0.c1 AS BLOB))OR((v0.c0 IN (v0.c0, v0.c1))))) ISNULL)) GROUP BY v0.c1, v0.c2, v0.c0;
SELECT v0.c1, v0.c2, v0.c0 FROM v0 GROUP BY v0.c1, v0.c2, v0.c0;
SELECT ALL t0.c0, v0.c0 FROM t0, v0 GROUP BY t0.c0, v0.c0;
SELECT ALL t0.c0, v0.c0 FROM t0, v0 GROUP BY t0.c0, v0.c0 HAVING CASE CASE TOTAL(GROUP_CONCAT(MIN(v0.c1)))  WHEN TOTAL(MAX(GROUP_CONCAT(v0.c1))) THEN t0.c0 END  WHEN ((v0.c2)<(SUM(v0.c0))) THEN TOTAL(v0.c0) END UNION ALL SELECT ALL t0.c0, v0.c0 FROM t0, v0 GROUP BY t0.c0, v0.c0 HAVING (NOT (CASE CASE TOTAL(GROUP_CONCAT(MIN(v0.c1)))  WHEN TOTAL(MAX(GROUP_CONCAT(v0.c1))) THEN t0.c0 END  WHEN ((v0.c2)<(SUM(v0.c0))) THEN TOTAL(v0.c0) END)) UNION ALL SELECT t0.c0, v0.c0 FROM t0, v0 GROUP BY t0.c0, v0.c0 HAVING ((CASE CASE TOTAL(GROUP_CONCAT(MIN(v0.c1)))  WHEN TOTAL(MAX(GROUP_CONCAT(v0.c1))) THEN t0.c0 END  WHEN ((v0.c2)<(SUM(v0.c0))) THEN TOTAL(v0.c0) END) ISNULL);
SELECT MAX((~ (((v0.c0)LIKE(v0.c1))))) FROM v0;
SELECT ALL * FROM t0, v0;
SELECT * FROM t0, v0 WHERE (((v0.c0)>>(t0.c0)) COLLATE BINARY) UNION ALL SELECT ALL * FROM t0, v0 WHERE ((NOT (((v0.c0)>>(t0.c0)) COLLATE BINARY))) UNION ALL SELECT * FROM t0, v0 WHERE (((((v0.c0)>>(t0.c0)) COLLATE BINARY) ISNULL));
SELECT ALL * FROM t0, v0;
SELECT DISTINCT v0.c1, t0.c0, v0.c0 FROM t0, v0;
SELECT DISTINCT v0.c1, t0.c0, v0.c0 FROM t0, v0 WHERE ((~ (v0.c2)) COLLATE RTRIM) UNION SELECT DISTINCT v0.c1, t0.c0, v0.c0 FROM t0, v0 WHERE ((NOT ((~ (v0.c2)) COLLATE RTRIM))) UNION SELECT DISTINCT v0.c1, t0.c0, v0.c0 FROM t0, v0 WHERE ((((~ (v0.c2)) COLLATE RTRIM) ISNULL));
SELECT DISTINCT v0.c1, t0.c0, v0.c0 FROM t0, v0;
SELECT v0.c1, v0.c2, v0.c0 FROM v0 GROUP BY v0.c1, v0.c2, v0.c0;
SELECT ALL v0.c1, v0.c2, v0.c0 FROM v0 WHERE (((CASE v0.c2  WHEN v0.c1 THEN v0.c0 WHEN v0.c0 THEN v0.c2 WHEN v0.c2 THEN v0.c0 ELSE v0.c1 END) NOT BETWEEN (CAST('' AS REAL)) AND (HEX(v0.c0)))) GROUP BY v0.c1, v0.c2, v0.c0 UNION SELECT v0.c1, v0.c2, v0.c0 FROM v0 WHERE ((NOT (((CASE v0.c2  WHEN v0.c1 THEN v0.c0 WHEN v0.c0 THEN v0.c2 WHEN v0.c2 THEN v0.c0 ELSE v0.c1 END) NOT BETWEEN (CAST('' AS REAL)) AND (HEX(v0.c0)))))) GROUP BY v0.c1, v0.c2, v0.c0 UNION SELECT ALL v0.c1, v0.c2, v0.c0 FROM v0 WHERE (((((CASE v0.c2  WHEN v0.c1 THEN v0.c0 WHEN v0.c0 THEN v0.c2 WHEN v0.c2 THEN v0.c0 ELSE v0.c1 END) NOT BETWEEN (CAST('' AS REAL)) AND (HEX(v0.c0)))) ISNULL)) GROUP BY v0.c1, v0.c2, v0.c0;
SELECT v0.c1, v0.c2, v0.c0 FROM v0 GROUP BY v0.c1, v0.c2, v0.c0;
SELECT v0.c1, v0.c0 FROM v0 GROUP BY v0.c1, v0.c0;
SELECT v0.c1, v0.c0 FROM v0 GROUP BY v0.c1, v0.c0 HAVING ((GROUP_CONCAT(COUNT(MIN(MAX(v0.c2))))) IS FALSE) UNION ALL SELECT ALL v0.c1, v0.c0 FROM v0 GROUP BY v0.c1, v0.c0 HAVING (NOT (((GROUP_CONCAT(COUNT(MIN(MAX(v0.c2))))) IS FALSE))) UNION ALL SELECT v0.c1, v0.c0 FROM v0 GROUP BY v0.c1, v0.c0 HAVING ((((GROUP_CONCAT(COUNT(MIN(MAX(v0.c2))))) IS FALSE)) ISNULL);
SELECT * FROM t0, v0;
SELECT * FROM t0, v0 WHERE (1171012767) UNION ALL SELECT ALL * FROM t0, v0 WHERE ((NOT (1171012767))) UNION ALL SELECT ALL * FROM t0, v0 WHERE (((1171012767) ISNULL));
SELECT * FROM t0, v0;
SELECT DISTINCT * FROM v0, t0;
SELECT DISTINCT * FROM v0, t0 WHERE ((((((v0.c2)) NOT BETWEEN ((v0.c1)) AND ((v0.c0))))<>(((((v0.c1)AND(NULL)))OR(v0.c0))))) UNION SELECT DISTINCT * FROM v0, t0 WHERE ((NOT ((((((v0.c2)) NOT BETWEEN ((v0.c1)) AND ((v0.c0))))!=(((((v0.c1)AND(NULL)))OR(v0.c0))))))) UNION SELECT DISTINCT * FROM v0, t0 WHERE ((((((((v0.c2)) NOT BETWEEN ((v0.c1)) AND ((v0.c0))))!=(((((v0.c1)AND(NULL)))OR(v0.c0))))) ISNULL));
SELECT DISTINCT * FROM v0, t0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 WHERE (CAST((((((((('8ut]gLtUG')OR(NULL)))AND(t0.c0)))OR(t0.c0)))OR(t0.c0)) AS NUMERIC)) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT (CAST((((((((('8ut]gLtUG')OR(NULL)))AND(t0.c0)))OR(t0.c0)))OR(t0.c0)) AS NUMERIC)))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE (((CAST((((((((('8ut]gLtUG')OR(NULL)))AND(t0.c0)))OR(t0.c0)))OR(t0.c0)) AS NUMERIC)) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0, v0.c1 FROM t0 CROSS JOIN v0 ON ((((v0.c1) BETWEEN (v0.c0) AND (v0.c2))) NOT NULL) GROUP BY t0.c0, v0.c1;
SELECT t0.c0, v0.c1 FROM t0 CROSS JOIN v0 ON ((((v0.c1) BETWEEN (v0.c0) AND (v0.c2))) NOT NULL) GROUP BY t0.c0, v0.c1 HAVING MAX(COUNT(TOTAL(COUNT(COUNT(TOTAL(t0.c0)))))) UNION ALL SELECT t0.c0, v0.c1 FROM t0 CROSS JOIN v0 ON ((((v0.c1) BETWEEN (v0.c0) AND (v0.c2))) NOT NULL) GROUP BY t0.c0, v0.c1 HAVING (NOT (MAX(COUNT(TOTAL(COUNT(COUNT(TOTAL(t0.c0)))))))) UNION ALL SELECT t0.c0, v0.c1 FROM t0 CROSS JOIN v0 ON ((((v0.c1) BETWEEN (v0.c0) AND (v0.c2))) NOT NULL) GROUP BY t0.c0, v0.c1 HAVING ((MAX(COUNT(TOTAL(COUNT(COUNT(TOTAL(t0.c0))))))) ISNULL);
SELECT ALL t0.c0, v0.c0 FROM v0, t0;
SELECT ALL t0.c0, v0.c0 FROM v0, t0 WHERE (((((v0.c1)%(v0.c2))) ISNULL)) UNION ALL SELECT ALL t0.c0, v0.c0 FROM v0, t0 WHERE ((NOT (((((v0.c1)%(v0.c2))) ISNULL)))) UNION ALL SELECT t0.c0, v0.c0 FROM v0, t0 WHERE (((((((v0.c1)%(v0.c2))) ISNULL)) ISNULL));
SELECT ALL t0.c0, v0.c0 FROM v0, t0;
SELECT DISTINCT v0.c2, v0.c1 FROM v0;
SELECT DISTINCT v0.c2, v0.c1 FROM v0 WHERE ((((v0.c2)) BETWEEN (((((x''))<=((v0.c1))))) AND (((- (NULL)))))) UNION SELECT DISTINCT v0.c2, v0.c1 FROM v0 WHERE ((NOT ((((v0.c2)) BETWEEN (((((x''))<=((v0.c1))))) AND (((- (NULL)))))))) UNION SELECT DISTINCT v0.c2, v0.c1 FROM v0 WHERE ((((((v0.c2)) BETWEEN (((((x''))<=((v0.c1))))) AND (((- (NULL)))))) ISNULL));
SELECT DISTINCT v0.c2, v0.c1 FROM v0;
SELECT t0.c0, v0.c0, v0.c2 FROM t0, v0 GROUP BY t0.c0, v0.c0, v0.c2;
SELECT ALL t0.c0, v0.c0, v0.c2 FROM t0, v0 WHERE (v0.c0) GROUP BY t0.c0, v0.c0, v0.c2 UNION SELECT ALL t0.c0, v0.c0, v0.c2 FROM t0, v0 WHERE ((NOT (v0.c0))) GROUP BY t0.c0, v0.c0, v0.c2 UNION SELECT ALL t0.c0, v0.c0, v0.c2 FROM t0, v0 WHERE (((v0.c0) ISNULL)) GROUP BY t0.c0, v0.c0, v0.c2;
SELECT t0.c0, v0.c0, v0.c2 FROM t0, v0 GROUP BY t0.c0, v0.c0, v0.c2;
SELECT v0.c2 FROM t0, v0 GROUP BY v0.c2;
SELECT ALL v0.c2 FROM t0, v0 GROUP BY v0.c2 HAVING ((COUNT(*)) BETWEEN (MIN(v0.c2)) AND (AVG(COUNT(v0.c0)))) UNION ALL SELECT ALL v0.c2 FROM t0, v0 GROUP BY v0.c2 HAVING (NOT (((COUNT(*)) BETWEEN (MIN(v0.c2)) AND (AVG(COUNT(v0.c0)))))) UNION ALL SELECT v0.c2 FROM t0, v0 GROUP BY v0.c2 HAVING ((((COUNT(*)) BETWEEN (MIN(v0.c2)) AND (AVG(COUNT(v0.c0))))) ISNULL);
SELECT v0.c2, v0.c1, v0.c0 FROM v0;
SELECT ALL v0.c2, v0.c1, v0.c0 FROM v0 WHERE (((((0.5064872678277517) NOT BETWEEN (0.576730252776894) AND (v0.c1)))IS(((v0.c1) BETWEEN (v0.c2) AND (v0.c2))))) UNION ALL SELECT v0.c2, v0.c1, v0.c0 FROM v0 WHERE ((NOT (((((0.5064872678277517) NOT BETWEEN (0.576730252776894) AND (v0.c1)))IS(((v0.c1) BETWEEN (v0.c2) AND (v0.c2))))))) UNION ALL SELECT ALL v0.c2, v0.c1, v0.c0 FROM v0 WHERE (((((((0.5064872678277517) NOT BETWEEN (0.576730252776894) AND (v0.c1)))IS(((v0.c1) BETWEEN (v0.c2) AND (v0.c2))))) ISNULL));
SELECT v0.c2, v0.c1, v0.c0 FROM v0;
SELECT DISTINCT v0.c2, v0.c1, v0.c0 FROM v0;
SELECT DISTINCT v0.c2, v0.c1, v0.c0 FROM v0 WHERE ((v0.c2 COLLATE NOCASE IN ())) UNION SELECT DISTINCT v0.c2, v0.c1, v0.c0 FROM v0 WHERE ((NOT ((v0.c2 COLLATE NOCASE IN ())))) UNION SELECT DISTINCT v0.c2, v0.c1, v0.c0 FROM v0 WHERE ((((v0.c2 COLLATE NOCASE IN ())) ISNULL));
SELECT DISTINCT v0.c2, v0.c1, v0.c0 FROM v0;
SELECT t0.c0, v0.c1 FROM v0 INNER JOIN t0 ON ((((v0.c2 IN ()), (+ (v0.c0)), (v0.c0 IN ())))>=(((v0.c0 IN ()), ((v0.c2) NOT BETWEEN (v0.c0) AND (v0.c0)), json_type(v0.c1)))) GROUP BY t0.c0, v0.c1;
SELECT t0.c0, v0.c1 FROM v0 INNER JOIN t0 ON ((((v0.c2 IN ()), (+ (v0.c0)), (v0.c0 IN ())))>=(((v0.c0 IN ()), ((v0.c2) NOT BETWEEN (v0.c0) AND (v0.c0)), json_type(v0.c1)))) WHERE (t0.c0) GROUP BY t0.c0, v0.c1 UNION SELECT t0.c0, v0.c1 FROM v0 INNER JOIN t0 ON ((((v0.c2 IN ()), (+ (v0.c0)), (v0.c0 IN ())))>=(((v0.c0 IN ()), ((v0.c2) NOT BETWEEN (v0.c0) AND (v0.c0)), json_type(v0.c1)))) WHERE ((NOT (t0.c0))) GROUP BY t0.c0, v0.c1 UNION SELECT t0.c0, v0.c1 FROM v0 INNER JOIN t0 ON ((((v0.c2 IN ()), (+ (v0.c0)), (v0.c0 IN ())))>=(((v0.c0 IN ()), ((v0.c2) NOT BETWEEN (v0.c0) AND (v0.c0)), json_type(v0.c1)))) WHERE (((t0.c0) ISNULL)) GROUP BY t0.c0, v0.c1;
SELECT t0.c0, v0.c1 FROM v0 INNER JOIN t0 ON ((((v0.c2 IN ()), (+ (v0.c0)), (v0.c0 IN ())))>=(((v0.c0 IN ()), ((v0.c2) NOT BETWEEN (v0.c0) AND (v0.c0)), json_type(v0.c1)))) GROUP BY t0.c0, v0.c1;
SELECT t0.c0, v0.c0 FROM v0, t0 GROUP BY t0.c0, v0.c0;
SELECT ALL t0.c0, v0.c0 FROM v0, t0 GROUP BY t0.c0, v0.c0 HAVING ((((MAX(MIN(TOTAL(v0.c2)))) NOT BETWEEN (TOTAL(t0.c0)) AND (GROUP_CONCAT(v0.c2))))>>(((((((((v0.c0)AND(v0.c0)))AND(COUNT(*))))AND(GROUP_CONCAT(COUNT(*)))))OR(v0.c2)))) UNION ALL SELECT ALL t0.c0, v0.c0 FROM v0, t0 GROUP BY t0.c0, v0.c0 HAVING (NOT (((((MAX(MIN(TOTAL(v0.c2)))) NOT BETWEEN (TOTAL(t0.c0)) AND (GROUP_CONCAT(v0.c2))))>>(((((((((v0.c0)AND(v0.c0)))AND(COUNT(*))))AND(GROUP_CONCAT(COUNT(*)))))OR(v0.c2)))))) UNION ALL SELECT t0.c0, v0.c0 FROM v0, t0 GROUP BY t0.c0, v0.c0 HAVING ((((((MAX(MIN(TOTAL(v0.c2)))) NOT BETWEEN (TOTAL(t0.c0)) AND (GROUP_CONCAT(v0.c2))))>>(((((((((v0.c0)AND(v0.c0)))AND(COUNT(*))))AND(GROUP_CONCAT(COUNT(*)))))OR(v0.c2))))) ISNULL);
SELECT ALL * FROM v0;
SELECT * FROM v0 WHERE (((+ (v0.c0)) IN ())) UNION ALL SELECT * FROM v0 WHERE ((NOT (((+ (v0.c0)) IN ())))) UNION ALL SELECT * FROM v0 WHERE (((((+ (v0.c0)) IN ())) ISNULL));
SELECT ALL * FROM v0;
SELECT DISTINCT v0.c2, v0.c1, v0.c0 FROM v0;
SELECT DISTINCT v0.c2, v0.c1, v0.c0 FROM v0 WHERE (((v0.c0 IN ()) IN ())) UNION SELECT DISTINCT v0.c2, v0.c1, v0.c0 FROM v0 WHERE ((NOT (((v0.c0 IN ()) IN ())))) UNION SELECT DISTINCT v0.c2, v0.c1, v0.c0 FROM v0 WHERE (((((v0.c0 IN ()) IN ())) ISNULL));
SELECT DISTINCT v0.c2, v0.c1, v0.c0 FROM v0;
SELECT ALL v0.c0, v0.c1 FROM v0 GROUP BY v0.c0, v0.c1;
SELECT v0.c0, v0.c1 FROM v0 WHERE (((((((v0.c2)OR(v0.c0)))AND(v0.c1))) NOT BETWEEN (CASE WHEN 2.012577984E9 THEN '' END) AND ((((v0.c2, v0.c1, v0.c1))<=((0.25957346457356467, v0.c1, '-741201444')))))) GROUP BY v0.c0, v0.c1 UNION SELECT ALL v0.c0, v0.c1 FROM v0 WHERE ((NOT (((((((v0.c2)OR(v0.c0)))AND(v0.c1))) NOT BETWEEN (CASE WHEN 2.012577984E9 THEN '' END) AND ((((v0.c2, v0.c1, v0.c1))<=((0.25957346457356467, v0.c1, '-741201444')))))))) GROUP BY v0.c0, v0.c1 UNION SELECT v0.c0, v0.c1 FROM v0 WHERE (((((((((v0.c2)OR(v0.c0)))AND(v0.c1))) NOT BETWEEN (CASE WHEN 2.012577984E9 THEN '' END) AND ((((v0.c2, v0.c1, v0.c1))<=((0.25957346457356467, v0.c1, '-741201444')))))) ISNULL)) GROUP BY v0.c0, v0.c1;
SELECT ALL v0.c0, v0.c1 FROM v0 GROUP BY v0.c0, v0.c1;
SELECT ALL v0.c0, v0.c1, t0.c0 FROM v0, t0 GROUP BY v0.c0, v0.c1, t0.c0;
SELECT ALL v0.c0, v0.c1, t0.c0 FROM v0, t0 GROUP BY v0.c0, v0.c1, t0.c0 HAVING (AVG(t0.c0) IN ()) UNION ALL SELECT v0.c0, v0.c1, t0.c0 FROM v0, t0 GROUP BY v0.c0, v0.c1, t0.c0 HAVING (NOT ((AVG(t0.c0) IN ()))) UNION ALL SELECT ALL v0.c0, v0.c1, t0.c0 FROM v0, t0 GROUP BY v0.c0, v0.c1, t0.c0 HAVING (((AVG(t0.c0) IN ())) ISNULL);
SELECT ALL v0.c0, v0.c1, t0.c0 FROM v0, t0 GROUP BY v0.c0, v0.c1, t0.c0;
SELECT ALL v0.c0, v0.c1, t0.c0 FROM v0, t0 GROUP BY v0.c0, v0.c1, t0.c0 HAVING (AVG(t0.c0) IN ()) UNION ALL SELECT v0.c0, v0.c1, t0.c0 FROM v0, t0 GROUP BY v0.c0, v0.c1, t0.c0 HAVING (NOT ((AVG(t0.c0) IN ()))) UNION ALL SELECT ALL v0.c0, v0.c1, t0.c0 FROM v0, t0 GROUP BY v0.c0, v0.c1, t0.c0 HAVING (((AVG(t0.c0) IN ())) ISNULL);
SELECT ALL v0.c0, v0.c1, t0.c0 FROM v0, t0 GROUP BY v0.c0, v0.c1, t0.c0;
SELECT ALL v0.c0, v0.c1, t0.c0 FROM t0, v0;
SELECT ALL v0.c0, v0.c1, t0.c0 FROM t0, v0 WHERE (CAST(x'' COLLATE NOCASE AS REAL)) UNION ALL SELECT ALL v0.c0, v0.c1, t0.c0 FROM t0, v0 WHERE ((NOT (CAST(x'' COLLATE NOCASE AS REAL)))) UNION ALL SELECT ALL v0.c0, v0.c1, t0.c0 FROM t0 NOT INDEXED, v0 WHERE (((CAST(x'' COLLATE NOCASE AS REAL)) ISNULL));
SELECT ALL v0.c0, v0.c1, t0.c0 FROM t0, v0;
SELECT DISTINCT v0.c0, t0.c0 FROM t0, v0;
SELECT DISTINCT v0.c0, t0.c0 FROM t0, v0 WHERE (json_extract((NOT (v0.c0)), v0.c1 COLLATE RTRIM, ((v0.c2) NOT BETWEEN (v0.c1) AND (v0.c1)), ((v0.c1)OR(t0.c0)))) UNION SELECT DISTINCT v0.c0, t0.c0 FROM t0, v0 WHERE ((NOT (json_extract((NOT (v0.c0)), v0.c1 COLLATE RTRIM, ((v0.c2) NOT BETWEEN (v0.c1) AND (v0.c1)), ((v0.c1)OR(t0.c0)))))) UNION SELECT DISTINCT v0.c0, t0.c0 FROM t0, v0 WHERE (((json_extract((NOT (v0.c0)), v0.c1 COLLATE RTRIM, ((v0.c2) NOT BETWEEN (v0.c1) AND (v0.c1)), ((v0.c1)OR(t0.c0)))) ISNULL));
SELECT t0.c0, v0.c0 FROM v0, t0 GROUP BY t0.c0, v0.c0;
SELECT t0.c0, v0.c0 FROM v0, t0 WHERE (v0.c1) GROUP BY t0.c0, v0.c0 UNION SELECT t0.c0, v0.c0 FROM v0, t0 WHERE ((NOT (v0.c1))) GROUP BY t0.c0, v0.c0 UNION SELECT ALL t0.c0, v0.c0 FROM v0, t0 WHERE (((v0.c1) ISNULL)) GROUP BY t0.c0, v0.c0;
SELECT t0.c0, v0.c0 FROM v0, t0 GROUP BY t0.c0, v0.c0;
SELECT v0.c1, v0.c0, v0.c2 FROM v0 GROUP BY v0.c1, v0.c0, v0.c2;
SELECT ALL v0.c1, v0.c0, v0.c2 FROM v0 GROUP BY v0.c1, v0.c0, v0.c2 HAVING COUNT(*) UNION ALL SELECT ALL v0.c1, v0.c0, v0.c2 FROM v0 GROUP BY v0.c1, v0.c0, v0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT v0.c1, v0.c0, v0.c2 FROM v0 GROUP BY v0.c1, v0.c0, v0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT v0.c1, v0.c0, v0.c2 FROM v0 GROUP BY v0.c1, v0.c0, v0.c2;
SELECT ALL v0.c1, v0.c0, v0.c2 FROM v0 GROUP BY v0.c1, v0.c0, v0.c2 HAVING COUNT(*) UNION ALL SELECT ALL v0.c1, v0.c0, v0.c2 FROM v0 GROUP BY v0.c1, v0.c0, v0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT v0.c1, v0.c0, v0.c2 FROM v0 GROUP BY v0.c1, v0.c0, v0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT v0.c1, v0.c0, v0.c2 FROM v0 GROUP BY v0.c1, v0.c0, v0.c2;
SELECT * FROM t0, v0;
SELECT * FROM t0, v0 WHERE (v0.c2) UNION ALL SELECT ALL * FROM t0, v0 WHERE ((NOT (v0.c2))) UNION ALL SELECT ALL * FROM t0, v0 WHERE (((v0.c2) ISNULL));
SELECT * FROM t0, v0;
SELECT DISTINCT t0.c0, v0.c0, v0.c2, v0.c1 FROM t0, v0;
SELECT DISTINCT t0.c0, v0.c0, v0.c2, v0.c1 FROM t0, v0 WHERE (LAST_INSERT_ROWID()) UNION SELECT DISTINCT t0.c0, v0.c0, v0.c2, v0.c1 FROM t0, v0 WHERE ((NOT (LAST_INSERT_ROWID()))) UNION SELECT DISTINCT t0.c0, v0.c0, v0.c2, v0.c1 FROM t0, v0 WHERE (((LAST_INSERT_ROWID()) ISNULL));
SELECT DISTINCT t0.c0, v0.c0, v0.c2, v0.c1 FROM t0, v0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 NOT INDEXED WHERE ((((((t0.c0, t0.c0, '-572051352')) NOT BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0)))) BETWEEN ((((t0.c0, t0.c0, t0.c0))<=((t0.c0, t0.c0, t0.c0)))) AND (((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT ((((((t0.c0, t0.c0, '-572051352')) NOT BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0)))) BETWEEN ((((t0.c0, t0.c0, t0.c0))<=((t0.c0, t0.c0, t0.c0)))) AND (((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((((((((t0.c0, t0.c0, '-572051352')) NOT BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0)))) BETWEEN ((((t0.c0, t0.c0, t0.c0))<=((t0.c0, t0.c0, t0.c0)))) AND (((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL v0.c1, t0.c0 FROM t0, v0 GROUP BY v0.c1, t0.c0;
SELECT v0.c1, t0.c0 FROM t0, v0 GROUP BY v0.c1, t0.c0 HAVING SUM(GROUP_CONCAT(TOTAL(v0.c1))) UNION ALL SELECT v0.c1, t0.c0 FROM t0, v0 GROUP BY v0.c1, t0.c0 HAVING (NOT (SUM(GROUP_CONCAT(TOTAL(v0.c1))))) UNION ALL SELECT ALL v0.c1, t0.c0 FROM t0, v0 GROUP BY v0.c1, t0.c0 HAVING ((SUM(GROUP_CONCAT(TOTAL(v0.c1)))) ISNULL);
SELECT ALL * FROM t0, v0;
SELECT ALL * FROM t0, v0 WHERE ((CASE WHEN t0.c0 THEN v0.c1 ELSE t0.c0 END IN ())) UNION ALL SELECT * FROM t0, v0 WHERE ((NOT ((CASE WHEN t0.c0 THEN v0.c1 ELSE t0.c0 END IN ())))) UNION ALL SELECT ALL * FROM t0, v0 WHERE ((((CASE WHEN t0.c0 THEN v0.c1 ELSE t0.c0 END IN ())) ISNULL));
SELECT ALL * FROM t0, v0;
SELECT DISTINCT v0.c2, v0.c0 FROM t0, v0;
SELECT DISTINCT v0.c2, v0.c0 FROM t0, v0 WHERE ((((t0.c0) BETWEEN (v0.c2) AND (v0.c1)) IN ())) UNION SELECT DISTINCT v0.c2, v0.c0 FROM t0, v0 WHERE ((NOT ((((t0.c0) BETWEEN (v0.c2) AND (v0.c1)) IN ())))) UNION SELECT DISTINCT v0.c2, v0.c0 FROM t0, v0 WHERE ((((((t0.c0) BETWEEN (v0.c2) AND (v0.c1)) IN ())) ISNULL));
SELECT DISTINCT v0.c2, v0.c0 FROM t0, v0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE ((t0.c0 COLLATE NOCASE IN ())) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT ((t0.c0 COLLATE NOCASE IN ())))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((((t0.c0 COLLATE NOCASE IN ())) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING TOTAL(((AVG(TOTAL(t0.c0)))GLOB(t0.c0))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (TOTAL(((AVG(TOTAL(t0.c0)))GLOB(t0.c0))))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((TOTAL(((AVG(TOTAL(t0.c0)))GLOB(t0.c0)))) ISNULL);
SELECT t0.c0 FROM t0;
SELECT ALL t0.c0 FROM t0 WHERE ((((~ (t0.c0))) NOT BETWEEN ((- (t0.c0))) AND ((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0)))))) UNION ALL SELECT ALL t0.c0 FROM t0 WHERE ((NOT ((((~ (t0.c0))) NOT BETWEEN ((- (t0.c0))) AND ((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0)))))))) UNION ALL SELECT t0.c0 FROM t0 WHERE ((((((~ (t0.c0))) NOT BETWEEN ((- (t0.c0))) AND ((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0)))))) ISNULL));
SELECT t0.c0 FROM t0;
SELECT DISTINCT * FROM t0, v0;
SELECT DISTINCT * FROM t0, v0 WHERE (t0.c0) UNION SELECT DISTINCT * FROM t0, v0 WHERE ((NOT (t0.c0))) UNION SELECT DISTINCT * FROM t0, v0 WHERE (((t0.c0) ISNULL));
SELECT DISTINCT * FROM t0, v0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 WHERE ((((t0.c0)<(0.4490531963658452)) IN ())) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT ((((t0.c0)<(0.4490531963658452)) IN ())))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((((((t0.c0)<(0.4490531963658452)) IN ())) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL v0.c1, v0.c0, t0.c0 FROM t0, v0 GROUP BY v0.c1, v0.c0, t0.c0;
SELECT ALL v0.c1, v0.c0, t0.c0 FROM t0, v0 GROUP BY v0.c1, v0.c0, t0.c0 HAVING ((((AVG(t0.c0))OR(v0.c0)))AND(CAST(v0.c2 AS INTEGER))) UNION ALL SELECT ALL v0.c1, v0.c0, t0.c0 FROM t0, v0 GROUP BY v0.c1, v0.c0, t0.c0 HAVING (NOT (((((AVG(t0.c0))OR(v0.c0)))AND(CAST(v0.c2 AS INTEGER))))) UNION ALL SELECT ALL v0.c1, v0.c0, t0.c0 FROM t0, v0 GROUP BY v0.c1, v0.c0, t0.c0 HAVING ((((((AVG(t0.c0))OR(v0.c0)))AND(CAST(v0.c2 AS INTEGER)))) ISNULL);
SELECT ALL v0.c1, v0.c0, t0.c0 FROM t0, v0 GROUP BY v0.c1, v0.c0, t0.c0;
SELECT ALL v0.c1, v0.c0, t0.c0 FROM t0, v0 GROUP BY v0.c1, v0.c0, t0.c0 HAVING ((((AVG(t0.c0))OR(v0.c0)))AND(CAST(v0.c2 AS INTEGER))) UNION ALL SELECT ALL v0.c1, v0.c0, t0.c0 FROM t0, v0 GROUP BY v0.c1, v0.c0, t0.c0 HAVING (NOT (((((AVG(t0.c0))OR(v0.c0)))AND(CAST(v0.c2 AS INTEGER))))) UNION ALL SELECT ALL v0.c1, v0.c0, t0.c0 FROM t0, v0 GROUP BY v0.c1, v0.c0, t0.c0 HAVING ((((((AVG(t0.c0))OR(v0.c0)))AND(CAST(v0.c2 AS INTEGER)))) ISNULL);
SELECT ALL v0.c1, v0.c0, t0.c0 FROM t0, v0 GROUP BY v0.c1, v0.c0, t0.c0;
SELECT t0.c0 FROM t0;
SELECT t0.c0 FROM t0 WHERE (t0.c0) UNION ALL SELECT ALL t0.c0 FROM t0 WHERE ((NOT (t0.c0))) UNION ALL SELECT t0.c0 FROM t0 WHERE (((t0.c0) ISNULL));
SELECT t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0 WHERE ((((t0.c0)) NOT BETWEEN (((+ (t0.c0)))) AND ((((0.5136249526784169) NOT BETWEEN ('-1288633304') AND (t0.c0)))))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((NOT ((((t0.c0)) NOT BETWEEN (((+ (t0.c0)))) AND ((((0.5136249526784169) NOT BETWEEN ('-1288633304') AND (t0.c0)))))))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((((((t0.c0)) NOT BETWEEN (((+ (t0.c0)))) AND ((((0.5136249526784169) NOT BETWEEN ('-1288633304') AND (t0.c0)))))) ISNULL));
SELECT DISTINCT t0.c0 FROM t0;
SELECT ALL v0.c2, v0.c1 FROM v0 GROUP BY v0.c2, v0.c1;
SELECT v0.c2, v0.c1 FROM v0 WHERE (((+ (x'')) IN ())) GROUP BY v0.c2, v0.c1 UNION SELECT ALL v0.c2, v0.c1 FROM v0 WHERE ((NOT (((+ (x'')) IN ())))) GROUP BY v0.c2, v0.c1 UNION SELECT v0.c2, v0.c1 FROM v0 WHERE (((((+ (x'')) IN ())) ISNULL)) GROUP BY v0.c2, v0.c1;
SELECT ALL v0.c2, v0.c1 FROM v0 GROUP BY v0.c2, v0.c1;
SELECT t0.c0 FROM v0 FULL OUTER JOIN t0 ON IFNULL((((v0.c1)) NOT BETWEEN ((v0.c0)) AND ((v0.c1))), ((v0.c1)||(v0.c2))) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM v0 FULL OUTER JOIN t0 ON IFNULL((((v0.c1)) NOT BETWEEN ((v0.c0)) AND ((v0.c1))), ((v0.c1)||(v0.c2))) GROUP BY t0.c0 HAVING MIN(TOTAL(SUM(COUNT(COUNT(COUNT(TOTAL('}vbV'))))))) UNION ALL SELECT t0.c0 FROM v0 FULL OUTER JOIN t0 ON IFNULL((((v0.c1)) NOT BETWEEN ((v0.c0)) AND ((v0.c1))), ((v0.c1)||(v0.c2))) GROUP BY t0.c0 HAVING (NOT (MIN(TOTAL(SUM(COUNT(COUNT(COUNT(TOTAL('}vbV'))))))))) UNION ALL SELECT ALL t0.c0 FROM v0 FULL OUTER JOIN t0 ON IFNULL((((v0.c1)) NOT BETWEEN ((v0.c0)) AND ((v0.c1))), ((v0.c1)||(v0.c2))) GROUP BY t0.c0 HAVING ((MIN(TOTAL(SUM(COUNT(COUNT(COUNT(TOTAL('}vbV')))))))) ISNULL);
SELECT ALL * FROM t0 RIGHT OUTER JOIN v0 ON CAST(((v0.c0)>=(v0.c2)) AS INTEGER);
SELECT * FROM t0 RIGHT OUTER JOIN v0 ON CAST(((v0.c0)>=(v0.c2)) AS INTEGER) WHERE (((TRIM(DISTINCT v0.c0)) NOT NULL)) UNION ALL SELECT * FROM t0 RIGHT OUTER JOIN v0 ON CAST(((v0.c0)>=(v0.c2)) AS INTEGER) WHERE ((NOT (((TRIM(DISTINCT v0.c0)) NOT NULL)))) UNION ALL SELECT * FROM t0 RIGHT OUTER JOIN v0 ON CAST(((v0.c0)>=(v0.c2)) AS INTEGER) WHERE (((((TRIM(DISTINCT v0.c0)) NOT NULL)) ISNULL));
SELECT ALL * FROM t0 RIGHT OUTER JOIN v0 ON CAST(((v0.c0)>=(v0.c2)) AS INTEGER);
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE ((NULLIF(t0.c0, t0.c0) IN ((t0.c0 IN (t0.c0)), ((((((((t0.c0)AND('-994436954')))OR(t0.c0)))AND(t0.c0)))OR(t0.c0))))) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT ((NULLIF(t0.c0, t0.c0) IN ((t0.c0 IN (t0.c0)), ((((((((t0.c0)AND('-994436954')))OR(t0.c0)))AND(t0.c0)))OR(t0.c0))))))) UNION SELECT DISTINCT * FROM t0 WHERE ((((NULLIF(t0.c0, t0.c0) IN ((t0.c0 IN (t0.c0)), ((((((((t0.c0)AND('-994436954')))OR(t0.c0)))AND(t0.c0)))OR(t0.c0))))) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE (((((t0.c0) NOTNULL))>=(((t0.c0)!=(0.7771303511007751))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT (((((t0.c0) NOTNULL))>=(((t0.c0)!=(0.7771303511007751))))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE (((((((t0.c0) NOTNULL))>=(((t0.c0)<>(0.7771303511007751))))) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0, v0.c2, v0.c0, v0.c1 FROM t0, v0 GROUP BY t0.c0, v0.c2, v0.c0, v0.c1;
SELECT ALL t0.c0, v0.c2, v0.c0, v0.c1 FROM t0, v0 GROUP BY t0.c0, v0.c2, v0.c0, v0.c1 HAVING ((COUNT(*))!=(COUNT(*))) UNION ALL SELECT ALL t0.c0, v0.c2, v0.c0, v0.c1 FROM t0, v0 GROUP BY t0.c0, v0.c2, v0.c0, v0.c1 HAVING (NOT (((COUNT(*))!=(COUNT(*))))) UNION ALL SELECT t0.c0, v0.c2, v0.c0, v0.c1 FROM t0, v0 GROUP BY t0.c0, v0.c2, v0.c0, v0.c1 HAVING ((((COUNT(*))<>(COUNT(*)))) ISNULL);
SELECT t0.c0, v0.c2, v0.c0, v0.c1 FROM t0, v0 GROUP BY t0.c0, v0.c2, v0.c0, v0.c1;
SELECT ALL t0.c0, v0.c2, v0.c0, v0.c1 FROM t0, v0 GROUP BY t0.c0, v0.c2, v0.c0, v0.c1 HAVING ((COUNT(*))!=(COUNT(*))) UNION ALL SELECT ALL t0.c0, v0.c2, v0.c0, v0.c1 FROM t0, v0 GROUP BY t0.c0, v0.c2, v0.c0, v0.c1 HAVING (NOT (((COUNT(*))!=(COUNT(*))))) UNION ALL SELECT t0.c0, v0.c2, v0.c0, v0.c1 FROM t0, v0 GROUP BY t0.c0, v0.c2, v0.c0, v0.c1 HAVING ((((COUNT(*))<>(COUNT(*)))) ISNULL);
SELECT t0.c0, v0.c2, v0.c0, v0.c1 FROM t0, v0 GROUP BY t0.c0, v0.c2, v0.c0, v0.c1;
SELECT v0.c0, v0.c1, v0.c2, t0.c0 FROM v0, t0;
SELECT ALL v0.c0, v0.c1, v0.c2, t0.c0 FROM v0, t0 WHERE (((v0.c1) NOT NULL)) UNION ALL SELECT v0.c0, v0.c1, v0.c2, t0.c0 FROM v0, t0 WHERE ((NOT (((v0.c1) NOT NULL)))) UNION ALL SELECT ALL v0.c0, v0.c1, v0.c2, t0.c0 FROM v0, t0 WHERE (((((v0.c1) NOT NULL)) ISNULL));
SELECT v0.c0, v0.c1, v0.c2, t0.c0 FROM v0, t0;
SELECT DISTINCT v0.c0, v0.c1 FROM v0;
SELECT DISTINCT v0.c0, v0.c1 FROM v0 WHERE ((v0.c0 COLLATE BINARY IN (2012577984))) UNION SELECT DISTINCT v0.c0, v0.c1 FROM v0 WHERE ((NOT ((v0.c0 COLLATE BINARY IN (2012577984))))) UNION SELECT DISTINCT v0.c0, v0.c1 FROM v0 WHERE ((((v0.c0 COLLATE BINARY IN (2012577984))) ISNULL));
SELECT DISTINCT v0.c0, v0.c1 FROM v0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (CAST(((((v0.c0)AND(v0.c2)))OR(v0.c2)) AS INTEGER)) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (CAST(((((v0.c0)AND(v0.c2)))OR(v0.c2)) AS INTEGER)))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((CAST(((((v0.c0)AND(v0.c2)))OR(v0.c2)) AS INTEGER)) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0, v0.c1, v0.c2 FROM v0, t0 GROUP BY v0.c0, v0.c1, v0.c2;
SELECT ALL v0.c0, v0.c1, v0.c2 FROM v0, t0 GROUP BY v0.c0, v0.c1, v0.c2 HAVING COUNT(*) UNION ALL SELECT v0.c0, v0.c1, v0.c2 FROM v0, t0 GROUP BY v0.c0, v0.c1, v0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL v0.c0, v0.c1, v0.c2 FROM v0, t0 GROUP BY v0.c0, v0.c1, v0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT v0.c0, v0.c1, v0.c2 FROM v0, t0 GROUP BY v0.c0, v0.c1, v0.c2;
SELECT ALL v0.c0, v0.c1, v0.c2 FROM v0, t0 GROUP BY v0.c0, v0.c1, v0.c2 HAVING COUNT(*) UNION ALL SELECT v0.c0, v0.c1, v0.c2 FROM v0, t0 GROUP BY v0.c0, v0.c1, v0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL v0.c0, v0.c1, v0.c2 FROM v0, t0 GROUP BY v0.c0, v0.c1, v0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT v0.c0, v0.c1, v0.c2 FROM v0, t0 GROUP BY v0.c0, v0.c1, v0.c2;
SELECT v0.c0, v0.c1, t0.c0 FROM t0 CROSS JOIN v0 ON CASE WHEN ((v0.c0)%(v0.c2)) THEN (v0.c0 IN ()) END;
SELECT ALL v0.c0, v0.c1, t0.c0 FROM t0 CROSS JOIN v0 ON CASE WHEN ((v0.c0)%(v0.c2)) THEN (v0.c0 IN ()) END WHERE (((((v0.c1) NOT BETWEEN (v0.c2) AND (v0.c1))) IS FALSE)) UNION ALL SELECT ALL v0.c0, v0.c1, t0.c0 FROM t0 CROSS JOIN v0 ON CASE WHEN ((v0.c0)%(v0.c2)) THEN (v0.c0 IN ()) END WHERE ((NOT (((((v0.c1) NOT BETWEEN (v0.c2) AND (v0.c1))) IS FALSE)))) UNION ALL SELECT v0.c0, v0.c1, t0.c0 FROM t0 CROSS JOIN v0 ON CASE WHEN ((v0.c0)%(v0.c2)) THEN (v0.c0 IN ()) END WHERE (((((((v0.c1) NOT BETWEEN (v0.c2) AND (v0.c1))) IS FALSE)) ISNULL));
SELECT v0.c0, v0.c1, t0.c0 FROM t0 CROSS JOIN v0 ON CASE WHEN ((v0.c0)%(v0.c2)) THEN (v0.c0 IN ()) END;
SELECT DISTINCT t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0 WHERE ((((NULL, 0Xffffffffa227da9a, t0.c0)) BETWEEN ((((t0.c0)>=(t0.c0)), t0.c0, CAST(t0.c0 AS BLOB))) AND (((t0.c0 IN (t0.c0, NULL)), t0.c0 COLLATE NOCASE, ((t0.c0) NOT NULL))))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((NOT ((((NULL, 0Xffffffffa227da9a, t0.c0)) BETWEEN ((((t0.c0)>=(t0.c0)), t0.c0, CAST(t0.c0 AS BLOB))) AND (((t0.c0 IN (t0.c0, NULL)), t0.c0 COLLATE NOCASE, ((t0.c0) NOT NULL))))))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((((((NULL, 0xffffffffa227da9a, t0.c0)) BETWEEN ((((t0.c0)>=(t0.c0)), t0.c0, CAST(t0.c0 AS BLOB))) AND (((t0.c0 IN (t0.c0, NULL)), t0.c0 COLLATE NOCASE, ((t0.c0) NOT NULL))))) ISNULL));
SELECT DISTINCT t0.c0 FROM t0;
SELECT ALL v0.c2 FROM v0 GROUP BY v0.c2;
SELECT ALL v0.c2 FROM v0 WHERE (v0.c1) GROUP BY v0.c2 UNION SELECT v0.c2 FROM v0 WHERE ((NOT (v0.c1))) GROUP BY v0.c2 UNION SELECT ALL v0.c2 FROM v0 WHERE (((v0.c1) ISNULL)) GROUP BY v0.c2;
SELECT ALL v0.c2 FROM v0 GROUP BY v0.c2;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING AVG(((t0.c0)IS NOT(NULL))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (AVG(((t0.c0)IS NOT(NULL))))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((AVG(((t0.c0)IS NOT(NULL)))) ISNULL);
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING AVG(((t0.c0)IS NOT(NULL))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (AVG(((t0.c0)IS NOT(NULL))))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((AVG(((t0.c0)IS NOT(NULL)))) ISNULL);
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL v0.c1, v0.c2, t0.c0, v0.c0 FROM t0, v0;
SELECT ALL v0.c1, v0.c2, t0.c0, v0.c0 FROM t0, v0 WHERE ((0.5973578517204791 IN ())) UNION ALL SELECT ALL v0.c1, v0.c2, t0.c0, v0.c0 FROM t0, v0 WHERE ((NOT ((0.5973578517204791 IN ())))) UNION ALL SELECT ALL v0.c1, v0.c2, t0.c0, v0.c0 FROM t0, v0 WHERE ((((0.5973578517204791 IN ())) ISNULL));
SELECT ALL v0.c1, v0.c2, t0.c0, v0.c0 FROM t0, v0;
SELECT DISTINCT v0.c1, v0.c0 FROM v0;
SELECT DISTINCT v0.c1, v0.c0 FROM v0 WHERE ((((v0.c0 COLLATE BINARY, v0.c0, CAST(v0.c1 AS TEXT)))<=(((NOT (v0.c1)), '', NULL)))) UNION SELECT DISTINCT v0.c1, v0.c0 FROM v0 WHERE ((NOT ((((v0.c0 COLLATE BINARY, v0.c0, CAST(v0.c1 AS TEXT)))<=(((NOT (v0.c1)), '', NULL)))))) UNION SELECT DISTINCT v0.c1, v0.c0 FROM v0 WHERE ((((((v0.c0 COLLATE BINARY, v0.c0, CAST(v0.c1 AS TEXT)))<=(((NOT (v0.c1)), '', NULL)))) ISNULL));
SELECT DISTINCT v0.c1, v0.c0 FROM v0;
SELECT ALL v0.c2, v0.c1, v0.c0 FROM v0 GROUP BY v0.c2, v0.c1, v0.c0;
SELECT v0.c2, v0.c1, v0.c0 FROM v0 WHERE (((((((((v0.c1)AND(v0.c1)))OR(v0.c2)))AND(UNLIKELY(v0.c1))))AND(v0.c1))) GROUP BY v0.c2, v0.c1, v0.c0 UNION SELECT v0.c2, v0.c1, v0.c0 FROM v0 WHERE ((NOT (((((((((v0.c1)AND(v0.c1)))OR(v0.c2)))AND(UNLIKELY(v0.c1))))AND(v0.c1))))) GROUP BY v0.c2, v0.c1, v0.c0 UNION SELECT ALL v0.c2, v0.c1, v0.c0 FROM v0 WHERE (((((((((((v0.c1)AND(v0.c1)))OR(v0.c2)))AND(UNLIKELY(v0.c1))))AND(v0.c1))) ISNULL)) GROUP BY v0.c2, v0.c1, v0.c0;
SELECT ALL v0.c2, v0.c1, v0.c0 FROM v0 GROUP BY v0.c2, v0.c1, v0.c0;
SELECT v0.c0, v0.c1 FROM v0 GROUP BY v0.c0, v0.c1;
SELECT v0.c0, v0.c1 FROM v0 GROUP BY v0.c0, v0.c1 HAVING CAST(AVG(COUNT(v0.c0)) AS INTEGER) UNION ALL SELECT v0.c0, v0.c1 FROM v0 GROUP BY v0.c0, v0.c1 HAVING (NOT (CAST(AVG(COUNT(v0.c0)) AS INTEGER))) UNION ALL SELECT v0.c0, v0.c1 FROM v0 GROUP BY v0.c0, v0.c1 HAVING ((CAST(AVG(COUNT(v0.c0)) AS INTEGER)) ISNULL);
SELECT ALL * FROM t0;
SELECT ALL * FROM t0 WHERE (x'') UNION ALL SELECT ALL * FROM t0 WHERE ((NOT (x''))) UNION ALL SELECT ALL * FROM t0 WHERE (((x'') ISNULL));
SELECT ALL * FROM t0;
SELECT DISTINCT t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0 WHERE (((LIKELIHOOD(t0.c0, 0.11747857129394634))>>((~ (t0.c0))))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((NOT (((LIKELIHOOD(t0.c0, 0.11747857129394634))>>((~ (t0.c0))))))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE (((((LIKELIHOOD(t0.c0, 0.11747857129394634))>>((~ (t0.c0))))) ISNULL));
SELECT DISTINCT t0.c0 FROM t0;
SELECT ALL v0.c1, v0.c2, v0.c0 FROM v0 GROUP BY v0.c1, v0.c2, v0.c0;
SELECT ALL v0.c1, v0.c2, v0.c0 FROM v0 WHERE (((v0.c2 IN ()) IN (CAST(v0.c2 AS INTEGER), (v0.c0 IN ())))) GROUP BY v0.c1, v0.c2, v0.c0 UNION SELECT ALL v0.c1, v0.c2, v0.c0 FROM v0 WHERE ((NOT (((v0.c2 IN ()) IN (CAST(v0.c2 AS INTEGER), (v0.c0 IN ())))))) GROUP BY v0.c1, v0.c2, v0.c0 UNION SELECT v0.c1, v0.c2, v0.c0 FROM v0 WHERE (((((v0.c2 IN ()) IN (CAST(v0.c2 AS INTEGER), (v0.c0 IN ())))) ISNULL)) GROUP BY v0.c1, v0.c2, v0.c0;
SELECT ALL v0.c1, v0.c2, v0.c0 FROM v0 GROUP BY v0.c1, v0.c2, v0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING GROUP_CONCAT(COUNT(COUNT(*))) UNION ALL SELECT t0.c0 FROM t0 NOT INDEXED GROUP BY t0.c0 HAVING (NOT (GROUP_CONCAT(COUNT(COUNT(*))))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((GROUP_CONCAT(COUNT(COUNT(*)))) ISNULL);
SELECT * FROM t0, v0;
SELECT * FROM t0, v0 WHERE ('') UNION ALL SELECT * FROM t0, v0 WHERE ((NOT (''))) UNION ALL SELECT * FROM t0, v0 WHERE ((('') ISNULL));
SELECT * FROM t0, v0;
SELECT DISTINCT v0.c2, t0.c0, v0.c0 FROM t0 RIGHT OUTER JOIN v0 ON CAST(CASE '6'  WHEN v0.c2 THEN v0.c1 WHEN v0.c2 THEN v0.c0 WHEN t0.c0 THEN v0.c1 END AS TEXT);
SELECT DISTINCT v0.c2, t0.c0, v0.c0 FROM t0 RIGHT OUTER JOIN v0 ON CAST(CASE '6'  WHEN v0.c2 THEN v0.c1 WHEN v0.c2 THEN v0.c0 WHEN t0.c0 THEN v0.c1 END AS TEXT) WHERE (((((v0.c1)/(t0.c0)))LIKE(CAST(t0.c0 AS TEXT)))) UNION SELECT DISTINCT v0.c2, t0.c0, v0.c0 FROM t0 RIGHT OUTER JOIN v0 ON CAST(CASE '6'  WHEN v0.c2 THEN v0.c1 WHEN v0.c2 THEN v0.c0 WHEN t0.c0 THEN v0.c1 END AS TEXT) WHERE ((NOT (((((v0.c1)/(t0.c0)))LIKE(CAST(t0.c0 AS TEXT)))))) UNION SELECT DISTINCT v0.c2, t0.c0, v0.c0 FROM t0 RIGHT OUTER JOIN v0 ON CAST(CASE '6'  WHEN v0.c2 THEN v0.c1 WHEN v0.c2 THEN v0.c0 WHEN t0.c0 THEN v0.c1 END AS TEXT) WHERE (((((((v0.c1)/(t0.c0)))LIKE(CAST(t0.c0 AS TEXT)))) ISNULL));
SELECT DISTINCT v0.c2, t0.c0, v0.c0 FROM t0 RIGHT OUTER JOIN v0 ON CAST(CASE '6'  WHEN v0.c2 THEN v0.c1 WHEN v0.c2 THEN v0.c0 WHEN t0.c0 THEN v0.c1 END AS TEXT);
SELECT v0.c2, t0.c0, v0.c1, v0.c0 FROM t0, v0 GROUP BY v0.c2, t0.c0, v0.c1, v0.c0;
SELECT v0.c2, t0.c0, v0.c1, v0.c0 FROM t0, v0 WHERE (CAST(v0.c1 AS REAL) COLLATE BINARY) GROUP BY v0.c2, t0.c0, v0.c1, v0.c0 UNION SELECT v0.c2, t0.c0, v0.c1, v0.c0 FROM t0, v0 WHERE ((NOT (CAST(v0.c1 AS REAL) COLLATE BINARY))) GROUP BY v0.c2, t0.c0, v0.c1, v0.c0 UNION SELECT v0.c2, t0.c0, v0.c1, v0.c0 FROM t0, v0 WHERE (((CAST(v0.c1 AS REAL) COLLATE BINARY) ISNULL)) GROUP BY v0.c2, t0.c0, v0.c1, v0.c0;
SELECT v0.c2, t0.c0, v0.c1, v0.c0 FROM t0, v0 GROUP BY v0.c2, t0.c0, v0.c1, v0.c0;
SELECT v0.c2 FROM v0 GROUP BY v0.c2;
SELECT v0.c2 FROM v0 GROUP BY v0.c2 HAVING ((MAX(v0.c2))<(MAX(v0.c0))) UNION ALL SELECT ALL v0.c2 FROM v0 GROUP BY v0.c2 HAVING (NOT (((MAX(v0.c2))<(MAX(v0.c0))))) UNION ALL SELECT v0.c2 FROM v0 GROUP BY v0.c2 HAVING ((((MAX(v0.c2))<(MAX(v0.c0)))) ISNULL);
SELECT v0.c2 FROM v0 GROUP BY v0.c2;
SELECT v0.c2 FROM v0 GROUP BY v0.c2 HAVING ((MAX(v0.c2))<(MAX(v0.c0))) UNION ALL SELECT ALL v0.c2 FROM v0 GROUP BY v0.c2 HAVING (NOT (((MAX(v0.c2))<(MAX(v0.c0))))) UNION ALL SELECT v0.c2 FROM v0 GROUP BY v0.c2 HAVING ((((MAX(v0.c2))<(MAX(v0.c0)))) ISNULL);
SELECT v0.c2 FROM v0 GROUP BY v0.c2;
SELECT ALL v0.c1, v0.c0, t0.c0 FROM v0 INDEXED BY i13, t0;
SELECT DISTINCT * FROM v0, t0;
SELECT DISTINCT * FROM v0, t0 WHERE (((((t0.c0) IS TRUE)) IS FALSE)) UNION SELECT DISTINCT * FROM v0, t0 WHERE ((NOT (((((t0.c0) IS TRUE)) IS FALSE)))) UNION SELECT DISTINCT * FROM v0, t0 WHERE (((((((t0.c0) IS TRUE)) IS FALSE)) ISNULL));
SELECT DISTINCT * FROM v0, t0;
SELECT ALL v0.c2, t0.c0 FROM t0, v0 GROUP BY v0.c2, t0.c0;
SELECT v0.c2, t0.c0 FROM t0, v0 WHERE (((CASE WHEN t0.c0 THEN v0.c1 ELSE NULL END)>((~ (t0.c0))))) GROUP BY v0.c2, t0.c0 UNION SELECT v0.c2, t0.c0 FROM t0, v0 WHERE ((NOT (((CASE WHEN t0.c0 THEN v0.c1 ELSE NULL END)>((~ (t0.c0))))))) GROUP BY v0.c2, t0.c0 UNION SELECT v0.c2, t0.c0 FROM t0, v0 WHERE (((((CASE WHEN t0.c0 THEN v0.c1 ELSE NULL END)>((~ (t0.c0))))) ISNULL)) GROUP BY v0.c2, t0.c0;
SELECT ALL v0.c2, t0.c0 FROM t0, v0 GROUP BY v0.c2, t0.c0;
SELECT v0.c0, t0.c0, v0.c2 FROM v0, t0 GROUP BY v0.c0, t0.c0, v0.c2;
SELECT ALL v0.c0, t0.c0, v0.c2 FROM v0, t0 GROUP BY v0.c0, t0.c0, v0.c2 HAVING GROUP_CONCAT(((v0.c0)LIKE(TOTAL(MIN(v0.c0))))) UNION ALL SELECT ALL v0.c0, t0.c0, v0.c2 FROM v0, t0 GROUP BY v0.c0, t0.c0, v0.c2 HAVING (NOT (GROUP_CONCAT(((v0.c0)LIKE(TOTAL(MIN(v0.c0))))))) UNION ALL SELECT ALL v0.c0, t0.c0, v0.c2 FROM v0, t0 GROUP BY v0.c0, t0.c0, v0.c2 HAVING ((GROUP_CONCAT(((v0.c0)LIKE(TOTAL(MIN(v0.c0)))))) ISNULL);
SELECT ALL MAX(((-5.72051352E8) BETWEEN (1424279995) AND (((v0.c0)<<(x'a343'))))) FROM v0, t0 ORDER BY (((((v0.c2, v0.c1, v0.c0))<>((v0.c1, v0.c0, v0.c1))))<>(NULL COLLATE BINARY)) DESC;
SELECT * FROM v0;
SELECT * FROM v0 WHERE (((((((v0.c2)<(v0.c1)))OR((((v0.c1))=((v0.c2))))))OR(TYPEOF(v0.c0)))) UNION ALL SELECT ALL * FROM v0 WHERE ((NOT (((((((v0.c2)<(v0.c1)))OR((((v0.c1))==((v0.c2))))))OR(TYPEOF(v0.c0)))))) UNION ALL SELECT * FROM v0 WHERE (((((((((v0.c2)<(v0.c1)))OR((((v0.c1))==((v0.c2))))))OR(TYPEOF(v0.c0)))) ISNULL));
SELECT * FROM v0;
SELECT DISTINCT * FROM t0 NOT INDEXED;
SELECT DISTINCT * FROM t0 WHERE (CAST(t0.c0 COLLATE NOCASE AS BLOB)) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (CAST(t0.c0 COLLATE NOCASE AS BLOB)))) UNION SELECT DISTINCT * FROM t0 WHERE (((CAST(t0.c0 COLLATE NOCASE AS BLOB)) ISNULL));
SELECT DISTINCT * FROM t0 NOT INDEXED;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 WHERE (ABS(t0.c0) COLLATE BINARY) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT (ABS(t0.c0) COLLATE BINARY))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE (((ABS(t0.c0) COLLATE BINARY) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT v0.c1 FROM v0 GROUP BY v0.c1;
SELECT v0.c1 FROM v0 GROUP BY v0.c1 HAVING MAX(GROUP_CONCAT(v0.c0) COLLATE NOCASE) UNION ALL SELECT v0.c1 FROM v0 GROUP BY v0.c1 HAVING (NOT (MAX(GROUP_CONCAT(v0.c0) COLLATE NOCASE))) UNION ALL SELECT v0.c1 FROM v0 GROUP BY v0.c1 HAVING ((MAX(GROUP_CONCAT(v0.c0) COLLATE NOCASE)) ISNULL);
SELECT ALL v0.c0, v0.c1 FROM v0, t0;
SELECT v0.c0, v0.c1 FROM v0, t0 WHERE ((v0.c2 IN (v0.c1)) COLLATE NOCASE) UNION ALL SELECT v0.c0, v0.c1 FROM v0, t0 WHERE ((NOT ((v0.c2 IN (v0.c1)) COLLATE NOCASE))) UNION ALL SELECT ALL v0.c0, v0.c1 FROM v0, t0 WHERE ((((v0.c2 IN (v0.c1)) COLLATE NOCASE) ISNULL));
SELECT ALL v0.c0, v0.c1 FROM v0, t0;
SELECT DISTINCT t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0 NOT INDEXED WHERE ((((t0.c0 IN (t0.c0))) BETWEEN (((t0.c0)||(t0.c0))) AND (((t0.c0)=(t0.c0))))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((NOT ((((t0.c0 IN (t0.c0))) BETWEEN (((t0.c0)||(t0.c0))) AND (((t0.c0)=(t0.c0))))))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((((((t0.c0 IN (t0.c0))) BETWEEN (((t0.c0)||(t0.c0))) AND (((t0.c0)=(t0.c0))))) ISNULL));
SELECT DISTINCT t0.c0 FROM t0;
SELECT t0.c0, v0.c1, v0.c0, v0.c2 FROM v0 LEFT OUTER JOIN t0 ON UNICODE(((v0.c0) BETWEEN (v0.c1) AND (v0.c0))) GROUP BY t0.c0, v0.c1, v0.c0, v0.c2;
SELECT ALL t0.c0, v0.c1, v0.c0, v0.c2 FROM v0 LEFT OUTER JOIN t0 ON UNICODE(((v0.c0) BETWEEN (v0.c1) AND (v0.c0))) WHERE ('0.38503238897806813') GROUP BY t0.c0, v0.c1, v0.c0, v0.c2 UNION SELECT ALL t0.c0, v0.c1, v0.c0, v0.c2 FROM v0 LEFT OUTER JOIN t0 ON UNICODE(((v0.c0) BETWEEN (v0.c1) AND (v0.c0))) WHERE ((NOT ('0.38503238897806813'))) GROUP BY t0.c0, v0.c1, v0.c0, v0.c2 UNION SELECT t0.c0, v0.c1, v0.c0, v0.c2 FROM v0 LEFT OUTER JOIN t0 ON UNICODE(((v0.c0) BETWEEN (v0.c1) AND (v0.c0))) WHERE ((('0.38503238897806813') ISNULL)) GROUP BY t0.c0, v0.c1, v0.c0, v0.c2;
SELECT t0.c0, v0.c1, v0.c0, v0.c2 FROM v0 LEFT OUTER JOIN t0 ON UNICODE(((v0.c0) BETWEEN (v0.c1) AND (v0.c0))) GROUP BY t0.c0, v0.c1, v0.c0, v0.c2;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING COUNT(*) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING COUNT(*) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL v0.c0, v0.c1, v0.c2, t0.c0 FROM t0 RIGHT OUTER JOIN v0 ON CAST(t0.c0 AS BLOB);
SELECT v0.c0, v0.c1, v0.c2, t0.c0 FROM t0 RIGHT OUTER JOIN v0 ON CAST(t0.c0 AS BLOB) WHERE ((((((((((NOT (v0.c0)))OR((((v0.c0)) NOT BETWEEN ((v0.c2)) AND ((v0.c2))))))AND(((v0.c1) BETWEEN (t0.c0) AND (v0.c0)))))AND(CASE WHEN t0.c0 THEN v0.c1 WHEN t0.c0 THEN t0.c0 WHEN 'W ⅽ{ኊ' THEN v0.c2 ELSE t0.c0 END)))OR((~ (v0.c0))))) UNION ALL SELECT ALL v0.c0, v0.c1, v0.c2, t0.c0 FROM t0 RIGHT OUTER JOIN v0 ON CAST(t0.c0 AS BLOB) WHERE ((NOT ((((((((((NOT (v0.c0)))OR((((v0.c0)) NOT BETWEEN ((v0.c2)) AND ((v0.c2))))))AND(((v0.c1) BETWEEN (t0.c0) AND (v0.c0)))))AND(CASE WHEN t0.c0 THEN v0.c1 WHEN t0.c0 THEN t0.c0 WHEN 'W ⅽ{ኊ' THEN v0.c2 ELSE t0.c0 END)))OR((~ (v0.c0))))))) UNION ALL SELECT v0.c0, v0.c1, v0.c2, t0.c0 FROM t0 RIGHT OUTER JOIN v0 ON CAST(t0.c0 AS BLOB) WHERE ((((((((((((NOT (v0.c0)))OR((((v0.c0)) NOT BETWEEN ((v0.c2)) AND ((v0.c2))))))AND(((v0.c1) BETWEEN (t0.c0) AND (v0.c0)))))AND(CASE WHEN t0.c0 THEN v0.c1 WHEN t0.c0 THEN t0.c0 WHEN 'W ⅽ{ኊ' THEN v0.c2 ELSE t0.c0 END)))OR((~ (v0.c0))))) ISNULL));
SELECT ALL v0.c0, v0.c1, v0.c2, t0.c0 FROM t0 RIGHT OUTER JOIN v0 ON CAST(t0.c0 AS BLOB);
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (((CAST(t0.c0 AS REAL))IS NOT(((t0.c0) IS FALSE)))) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (((CAST(t0.c0 AS REAL))IS NOT(((t0.c0) IS FALSE)))))) UNION SELECT DISTINCT * FROM t0 WHERE (((((CAST(t0.c0 AS REAL))IS NOT(((t0.c0) IS FALSE)))) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT ALL v0.c2, v0.c1 FROM t0 CROSS JOIN v0 ON (((((t0.c0)OR(v0.c2))))>=((v0.c1 COLLATE NOCASE))) GROUP BY v0.c2, v0.c1;
SELECT v0.c2, v0.c1 FROM t0 CROSS JOIN v0 ON (((((t0.c0)OR(v0.c2))))>=((v0.c1 COLLATE NOCASE))) WHERE ((((v0.c1, v0.c1, t0.c0)) BETWEEN ((((v0.c1) BETWEEN (v0.c0) AND (v0.c0)), ((v0.c2)AND(v0.c2)), ((v0.c2)>=(v0.c0)))) AND (('D<b{dU_', ((v0.c2) BETWEEN (t0.c0) AND (v0.c1)), (NOT (v0.c1)))))) GROUP BY v0.c2, v0.c1 UNION SELECT v0.c2, v0.c1 FROM t0 CROSS JOIN v0 ON (((((t0.c0)OR(v0.c2))))>=((v0.c1 COLLATE NOCASE))) WHERE ((NOT ((((v0.c1, v0.c1, t0.c0)) BETWEEN ((((v0.c1) BETWEEN (v0.c0) AND (v0.c0)), ((v0.c2)AND(v0.c2)), ((v0.c2)>=(v0.c0)))) AND (('D<b{dU_', ((v0.c2) BETWEEN (t0.c0) AND (v0.c1)), (NOT (v0.c1)))))))) GROUP BY v0.c2, v0.c1 UNION SELECT ALL v0.c2, v0.c1 FROM t0 CROSS JOIN v0 ON (((((t0.c0)OR(v0.c2))))>=((v0.c1 COLLATE NOCASE))) WHERE ((((((v0.c1, v0.c1, t0.c0)) BETWEEN ((((v0.c1) BETWEEN (v0.c0) AND (v0.c0)), ((v0.c2)AND(v0.c2)), ((v0.c2)>=(v0.c0)))) AND (('D<b{dU_', ((v0.c2) BETWEEN (t0.c0) AND (v0.c1)), (NOT (v0.c1)))))) ISNULL)) GROUP BY v0.c2, v0.c1;
SELECT ALL v0.c2, v0.c1 FROM t0 CROSS JOIN v0 ON (((((t0.c0)OR(v0.c2))))>=((v0.c1 COLLATE NOCASE))) GROUP BY v0.c2, v0.c1;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING TOTAL(((t0.c0)/(t0.c0))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (TOTAL(((t0.c0)/(t0.c0))))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((TOTAL(((t0.c0)/(t0.c0)))) ISNULL);
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING TOTAL(((t0.c0)/(t0.c0))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (TOTAL(((t0.c0)/(t0.c0))))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((TOTAL(((t0.c0)/(t0.c0)))) ISNULL);
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT * FROM v0, t0;
SELECT ALL * FROM v0, t0 WHERE ((+ (((v0.c1) BETWEEN (v0.c1) AND (t0.c0))))) UNION ALL SELECT ALL * FROM v0, t0 WHERE ((NOT ((+ (((v0.c1) BETWEEN (v0.c1) AND (t0.c0))))))) UNION ALL SELECT ALL * FROM v0, t0 WHERE ((((+ (((v0.c1) BETWEEN (v0.c1) AND (t0.c0))))) ISNULL));
SELECT * FROM v0, t0;
SELECT DISTINCT v0.c1, v0.c0, v0.c2, t0.c0 FROM t0 LEFT OUTER JOIN v0 ON (((v0.c1)) NOT BETWEEN ((CASE v0.c1  WHEN v0.c1 THEN v0.c2 ELSE v0.c2 END)) AND ((((1.079952059E9) ISNULL))));
SELECT DISTINCT v0.c1, v0.c0, v0.c2, t0.c0 FROM t0 LEFT OUTER JOIN v0 ON (((v0.c1)) NOT BETWEEN ((CASE v0.c1  WHEN v0.c1 THEN v0.c2 ELSE v0.c2 END)) AND ((((1.079952059E9) ISNULL)))) WHERE (x'') UNION SELECT DISTINCT v0.c1, v0.c0, v0.c2, t0.c0 FROM t0 LEFT OUTER JOIN v0 ON (((v0.c1)) NOT BETWEEN ((CASE v0.c1  WHEN v0.c1 THEN v0.c2 ELSE v0.c2 END)) AND ((((1.079952059E9) ISNULL)))) WHERE ((NOT (x''))) UNION SELECT DISTINCT v0.c1, v0.c0, v0.c2, t0.c0 FROM t0 LEFT OUTER JOIN v0 ON (((v0.c1)) NOT BETWEEN ((CASE v0.c1  WHEN v0.c1 THEN v0.c2 ELSE v0.c2 END)) AND ((((1.079952059E9) ISNULL)))) WHERE (((x'') ISNULL));
SELECT DISTINCT v0.c1, v0.c0, v0.c2, t0.c0 FROM t0 LEFT OUTER JOIN v0 ON (((v0.c1)) NOT BETWEEN ((CASE v0.c1  WHEN v0.c1 THEN v0.c2 ELSE v0.c2 END)) AND ((((1.079952059E9) ISNULL))));
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 WHERE (((((NULL)OR(t0.c0))) BETWEEN ((+ (t0.c0))) AND ((~ (t0.c0))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT (((((NULL)OR(t0.c0))) BETWEEN ((+ (t0.c0))) AND ((~ (t0.c0))))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE (((((((NULL)OR(t0.c0))) BETWEEN ((+ (t0.c0))) AND ((~ (t0.c0))))) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL v0.c0 FROM v0, t0 NOT INDEXED GROUP BY v0.c0;
SELECT v0.c0 FROM v0, t0 GROUP BY v0.c0 HAVING SUM(CASE WHEN v0.c1 THEN TOTAL(v0.c1) ELSE v0.c2 END) UNION ALL SELECT v0.c0 FROM v0, t0 GROUP BY v0.c0 HAVING (NOT (SUM(CASE WHEN v0.c1 THEN TOTAL(v0.c1) ELSE v0.c2 END))) UNION ALL SELECT ALL v0.c0 FROM v0, t0 GROUP BY v0.c0 HAVING ((SUM(CASE WHEN v0.c1 THEN TOTAL(v0.c1) ELSE v0.c2 END)) ISNULL);
SELECT t0.c0 FROM t0;
SELECT ALL t0.c0 FROM t0 WHERE (((((((((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))OR(((t0.c0)|(t0.c0)))))OR(CAST(t0.c0 AS INTEGER))))AND((t0.c0 IN ()))))AND(0.5319299676358724))) UNION ALL SELECT ALL t0.c0 FROM t0 WHERE ((NOT (((((((((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))OR(((t0.c0)|(t0.c0)))))OR(CAST(t0.c0 AS INTEGER))))AND((t0.c0 IN ()))))AND(0.5319299676358724))))) UNION ALL SELECT t0.c0 FROM t0 NOT INDEXED WHERE (((((((((((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))OR(((t0.c0)|(t0.c0)))))OR(CAST(t0.c0 AS INTEGER))))AND((t0.c0 IN ()))))AND(0.5319299676358724))) ISNULL));
SELECT t0.c0 FROM t0;
SELECT DISTINCT v0.c0, t0.c0 FROM t0 INNER JOIN v0 ON (((((v0.c1)) NOT BETWEEN ((v0.c2)) AND ((v0.c1))))&(v0.c1));
SELECT DISTINCT v0.c0, t0.c0 FROM t0 INNER JOIN v0 ON (((((v0.c1)) NOT BETWEEN ((v0.c2)) AND ((v0.c1))))&(v0.c1)) WHERE ('') UNION SELECT DISTINCT v0.c0, t0.c0 FROM t0 INNER JOIN v0 ON (((((v0.c1)) NOT BETWEEN ((v0.c2)) AND ((v0.c1))))&(v0.c1)) WHERE ((NOT (''))) UNION SELECT DISTINCT v0.c0, t0.c0 FROM t0 INNER JOIN v0 ON (((((v0.c1)) NOT BETWEEN ((v0.c2)) AND ((v0.c1))))&(v0.c1)) WHERE ((('') ISNULL));
SELECT DISTINCT v0.c0, t0.c0 FROM t0 INNER JOIN v0 ON (((((v0.c1)) NOT BETWEEN ((v0.c2)) AND ((v0.c1))))&(v0.c1));
SELECT v0.c2 FROM v0, t0 GROUP BY v0.c2;
SELECT v0.c2 FROM v0, t0 WHERE ((('(y' IN (771725169)) IN ())) GROUP BY v0.c2 UNION SELECT v0.c2 FROM v0, t0 WHERE ((NOT ((('(y' IN (771725169)) IN ())))) GROUP BY v0.c2 UNION SELECT v0.c2 FROM v0, t0 WHERE ((((('(y' IN (771725169)) IN ())) ISNULL)) GROUP BY v0.c2;
SELECT v0.c2 FROM v0, t0 GROUP BY v0.c2;
SELECT ALL v0.c1 FROM t0 LEFT OUTER JOIN v0 ON (((v0.c0, v0.c0 COLLATE BINARY, (v0.c0 IN ())))>((((t0.c0) NOT BETWEEN (v0.c2) AND (v0.c1)), ((((((((t0.c0)OR(v0.c1)))OR(NULL)))OR(t0.c0)))OR(v0.c1)), CASE WHEN v0.c1 THEN v0.c2 WHEN x'cea8' THEN v0.c2 WHEN v0.c0 THEN t0.c0 END))) GROUP BY v0.c1;
SELECT v0.c1 FROM t0 LEFT OUTER JOIN v0 ON (((v0.c0, v0.c0 COLLATE BINARY, (v0.c0 IN ())))>((((t0.c0) NOT BETWEEN (v0.c2) AND (v0.c1)), ((((((((t0.c0)OR(v0.c1)))OR(NULL)))OR(t0.c0)))OR(v0.c1)), CASE WHEN v0.c1 THEN v0.c2 WHEN x'cea8' THEN v0.c2 WHEN v0.c0 THEN t0.c0 END))) GROUP BY v0.c1 HAVING AVG(COUNT(*)) UNION ALL SELECT ALL v0.c1 FROM t0 LEFT OUTER JOIN v0 ON (((v0.c0, v0.c0 COLLATE BINARY, (v0.c0 IN ())))>((((t0.c0) NOT BETWEEN (v0.c2) AND (v0.c1)), ((((((((t0.c0)OR(v0.c1)))OR(NULL)))OR(t0.c0)))OR(v0.c1)), CASE WHEN v0.c1 THEN v0.c2 WHEN x'cea8' THEN v0.c2 WHEN v0.c0 THEN t0.c0 END))) GROUP BY v0.c1 HAVING (NOT (AVG(COUNT(*)))) UNION ALL SELECT v0.c1 FROM t0 LEFT OUTER JOIN v0 ON (((v0.c0, v0.c0 COLLATE BINARY, (v0.c0 IN ())))>((((t0.c0) NOT BETWEEN (v0.c2) AND (v0.c1)), ((((((((t0.c0)OR(v0.c1)))OR(NULL)))OR(t0.c0)))OR(v0.c1)), CASE WHEN v0.c1 THEN v0.c2 WHEN x'cea8' THEN v0.c2 WHEN v0.c0 THEN t0.c0 END))) GROUP BY v0.c1 HAVING ((AVG(COUNT(*))) ISNULL);
SELECT v0.c2 FROM t0, v0;
SELECT v0.c2 FROM t0, v0 WHERE (((((((((((((t0.c0)OR(t0.c0)))AND(v0.c1)))OR(t0.c0)))OR(v0.c0)))AND(NULL)))AND((((v0.c1))<=((v0.c1)))))) UNION ALL SELECT ALL v0.c2 FROM t0, v0 WHERE ((NOT (((((((((((((t0.c0)OR(t0.c0)))AND(v0.c1)))OR(t0.c0)))OR(v0.c0)))AND(NULL)))AND((((v0.c1))<=((v0.c1)))))))) UNION ALL SELECT ALL v0.c2 FROM t0, v0 WHERE (((((((((((((((t0.c0)OR(t0.c0)))AND(v0.c1)))OR(t0.c0)))OR(v0.c0)))AND(NULL)))AND((((v0.c1))<=((v0.c1)))))) ISNULL));
SELECT v0.c2 FROM t0, v0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (NULL) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (NULL))) UNION SELECT DISTINCT * FROM t0 WHERE (((NULL) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT v0.c2, v0.c0, v0.c1 FROM v0 GROUP BY v0.c2, v0.c0, v0.c1;
SELECT ALL v0.c2, v0.c0, v0.c1 FROM v0 WHERE (((((v0.c0) IS FALSE)) BETWEEN (((v0.c1)/(x''))) AND (((((v0.c1)AND(v0.c1)))OR(v0.c2))))) GROUP BY v0.c2, v0.c0, v0.c1 UNION SELECT ALL v0.c2, v0.c0, v0.c1 FROM v0 WHERE ((NOT (((((v0.c0) IS FALSE)) BETWEEN (((v0.c1)/(x''))) AND (((((v0.c1)AND(v0.c1)))OR(v0.c2))))))) GROUP BY v0.c2, v0.c0, v0.c1 UNION SELECT ALL v0.c2, v0.c0, v0.c1 FROM v0 WHERE (((((((v0.c0) IS FALSE)) BETWEEN (((v0.c1)/(x''))) AND (((((v0.c1)AND(v0.c1)))OR(v0.c2))))) ISNULL)) GROUP BY v0.c2, v0.c0, v0.c1;
SELECT v0.c2, v0.c0, v0.c1 FROM v0 GROUP BY v0.c2, v0.c0, v0.c1;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((((((t0.c0)OR(AVG(SUM(COUNT(t0.c0))))))AND(MAX(TOTAL(t0.c0)))))>>(MIN(t0.c0))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (((((((t0.c0)OR(AVG(SUM(COUNT(t0.c0))))))AND(MAX(TOTAL(t0.c0)))))>>(MIN(t0.c0))))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((((((((t0.c0)OR(AVG(SUM(COUNT(t0.c0))))))AND(MAX(TOTAL(t0.c0)))))>>(MIN(t0.c0)))) ISNULL);
SELECT ALL * FROM t0;
SELECT ALL * FROM t0 WHERE ((json_array_length(t0.c0) IN ())) UNION ALL SELECT * FROM t0 WHERE ((NOT ((json_array_length(t0.c0) IN ())))) UNION ALL SELECT ALL * FROM t0 WHERE ((((json_array_length(t0.c0) IN ())) ISNULL));
SELECT ALL * FROM t0;
SELECT DISTINCT v0.c2, v0.c1 FROM v0;
SELECT DISTINCT v0.c2, v0.c1 FROM v0 WHERE (CAST(0.6762532306307091 AS INTEGER)) UNION SELECT DISTINCT v0.c2, v0.c1 FROM v0 WHERE ((NOT (CAST(0.6762532306307091 AS INTEGER)))) UNION SELECT DISTINCT v0.c2, v0.c1 FROM v0 WHERE (((CAST(0.6762532306307091 AS INTEGER)) ISNULL));
SELECT DISTINCT v0.c2, v0.c1 FROM v0;
SELECT v0.c0 FROM v0, t0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0, t0 WHERE (CAST(CASE WHEN v0.c1 THEN v0.c2 END AS BLOB)) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0, t0 WHERE ((NOT (CAST(CASE WHEN v0.c1 THEN v0.c2 END AS BLOB)))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0, t0 WHERE (((CAST(CASE WHEN v0.c1 THEN v0.c2 END AS BLOB)) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0, t0 GROUP BY v0.c0;
SELECT v0.c1, v0.c2 FROM v0 GROUP BY v0.c1, v0.c2;
SELECT ALL v0.c1, v0.c2 FROM v0 GROUP BY v0.c1, v0.c2 HAVING (AVG(MAX(MAX(SUM(v0.c0)))) IN ()) UNION ALL SELECT ALL v0.c1, v0.c2 FROM v0 GROUP BY v0.c1, v0.c2 HAVING (NOT ((AVG(MAX(MAX(SUM(v0.c0)))) IN ()))) UNION ALL SELECT v0.c1, v0.c2 FROM v0 GROUP BY v0.c1, v0.c2 HAVING (((AVG(MAX(MAX(SUM(v0.c0)))) IN ())) ISNULL);
SELECT v0.c1, v0.c2 FROM v0 GROUP BY v0.c1, v0.c2;
SELECT ALL v0.c1, v0.c2 FROM v0 GROUP BY v0.c1, v0.c2 HAVING (AVG(MAX(MAX(SUM(v0.c0)))) IN ()) UNION ALL SELECT ALL v0.c1, v0.c2 FROM v0 GROUP BY v0.c1, v0.c2 HAVING (NOT ((AVG(MAX(MAX(SUM(v0.c0)))) IN ()))) UNION ALL SELECT v0.c1, v0.c2 FROM v0 GROUP BY v0.c1, v0.c2 HAVING (((AVG(MAX(MAX(SUM(v0.c0)))) IN ())) ISNULL);
SELECT v0.c1, v0.c2 FROM v0 GROUP BY v0.c1, v0.c2;
SELECT * FROM t0, v0;
SELECT ALL * FROM t0, v0 WHERE ((((((('0.47483294000928145')OR(v0.c1)))OR(1e500))) IS TRUE)) UNION ALL SELECT * FROM t0, v0 WHERE ((NOT ((((((('0.47483294000928145')OR(v0.c1)))OR(1e500))) IS TRUE)))) UNION ALL SELECT ALL * FROM t0, v0 WHERE ((((((((('0.47483294000928145')OR(v0.c1)))OR(1e500))) IS TRUE)) ISNULL));
SELECT * FROM t0, v0;
SELECT DISTINCT * FROM v0, t0;
SELECT DISTINCT * FROM v0, t0 WHERE (CAST('-572051352' AS TEXT)) UNION SELECT DISTINCT * FROM v0, t0 WHERE ((NOT (CAST('-572051352' AS TEXT)))) UNION SELECT DISTINCT * FROM v0, t0 WHERE (((CAST('-572051352' AS TEXT)) ISNULL));
SELECT DISTINCT * FROM v0, t0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE ((((t0.c0)) BETWEEN ((((t0.c0)GLOB(t0.c0)))) AND ((((t0.c0) NOTNULL))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT ((((t0.c0)) BETWEEN ((((t0.c0)GLOB(t0.c0)))) AND ((((t0.c0) NOTNULL))))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((((((t0.c0)) BETWEEN ((((t0.c0)GLOB(t0.c0)))) AND ((((t0.c0) NOTNULL))))) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT v0.c1, v0.c0, v0.c2 FROM t0, v0 GROUP BY v0.c1, v0.c0, v0.c2;
SELECT ALL v0.c1, v0.c0, v0.c2 FROM t0, v0 GROUP BY v0.c1, v0.c0, v0.c2 HAVING MAX(((t0.c0)+(MIN(t0.c0)))) UNION ALL SELECT v0.c1, v0.c0, v0.c2 FROM t0, v0 GROUP BY v0.c1, v0.c0, v0.c2 HAVING (NOT (MAX(((t0.c0)+(MIN(t0.c0)))))) UNION ALL SELECT ALL v0.c1, v0.c0, v0.c2 FROM t0, v0 GROUP BY v0.c1, v0.c0, v0.c2 HAVING ((MAX(((t0.c0)+(MIN(t0.c0))))) ISNULL);
SELECT ALL v0.c0, v0.c2 FROM v0;
SELECT ALL v0.c0, v0.c2 FROM v0 WHERE (TOTAL_CHANGES()) UNION ALL SELECT v0.c0, v0.c2 FROM v0 WHERE ((NOT (TOTAL_CHANGES()))) UNION ALL SELECT v0.c0, v0.c2 FROM v0 WHERE (((TOTAL_CHANGES()) ISNULL));
SELECT ALL v0.c0, v0.c2 FROM v0;
SELECT DISTINCT * FROM t0 INDEXED BY i13, v0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE (t0.c0) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT (t0.c0))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE (((t0.c0) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT v0.c0, v0.c2 FROM v0 GROUP BY v0.c0, v0.c2;
SELECT ALL v0.c0, v0.c2 FROM v0 GROUP BY v0.c0, v0.c2 HAVING MAX(v0.c2) UNION ALL SELECT ALL v0.c0, v0.c2 FROM v0 GROUP BY v0.c0, v0.c2 HAVING (NOT (MAX(v0.c2))) UNION ALL SELECT ALL v0.c0, v0.c2 FROM v0 GROUP BY v0.c0, v0.c2 HAVING ((MAX(v0.c2)) ISNULL);
SELECT v0.c0, v0.c2 FROM v0 GROUP BY v0.c0, v0.c2;
SELECT ALL v0.c0, v0.c2 FROM v0 GROUP BY v0.c0, v0.c2 HAVING MAX(v0.c2) UNION ALL SELECT ALL v0.c0, v0.c2 FROM v0 GROUP BY v0.c0, v0.c2 HAVING (NOT (MAX(v0.c2))) UNION ALL SELECT ALL v0.c0, v0.c2 FROM v0 GROUP BY v0.c0, v0.c2 HAVING ((MAX(v0.c2)) ISNULL);
SELECT v0.c0, v0.c2 FROM v0 GROUP BY v0.c0, v0.c2;
SELECT ALL v0.c2 FROM v0;
SELECT v0.c2 FROM v0 WHERE (((((v0.c0)<<(v0.c1))) BETWEEN (('d(a' IN (v0.c0))) AND (((v0.c2) ISNULL)))) UNION ALL SELECT v0.c2 FROM v0 WHERE ((NOT (((((v0.c0)<<(v0.c1))) BETWEEN (('d(a' IN (v0.c0))) AND (((v0.c2) ISNULL)))))) UNION ALL SELECT v0.c2 FROM v0 WHERE (((((((v0.c0)<<(v0.c1))) BETWEEN (('d(a' IN (v0.c0))) AND (((v0.c2) ISNULL)))) ISNULL));
SELECT ALL v0.c2 FROM v0;
SELECT DISTINCT * FROM t0 CROSS JOIN v0 ON (((v0.c2 IN (0.7104477057246081))) NOT BETWEEN (CASE WHEN v0.c1 THEN v0.c1 END) AND ((v0.c2 IN ())));
SELECT DISTINCT * FROM t0 CROSS JOIN v0 ON (((v0.c2 IN (0.7104477057246081))) NOT BETWEEN (CASE WHEN v0.c1 THEN v0.c1 END) AND ((v0.c2 IN ()))) WHERE (v0.c2) UNION SELECT DISTINCT * FROM t0 CROSS JOIN v0 ON (((v0.c2 IN (0.7104477057246081))) NOT BETWEEN (CASE WHEN v0.c1 THEN v0.c1 END) AND ((v0.c2 IN ()))) WHERE ((NOT (v0.c2))) UNION SELECT DISTINCT * FROM t0 CROSS JOIN v0 ON (((v0.c2 IN (0.7104477057246081))) NOT BETWEEN (CASE WHEN v0.c1 THEN v0.c1 END) AND ((v0.c2 IN ()))) WHERE (((v0.c2) ISNULL));
SELECT DISTINCT * FROM t0 CROSS JOIN v0 ON (((v0.c2 IN (0.7104477057246081))) NOT BETWEEN (CASE WHEN v0.c1 THEN v0.c1 END) AND ((v0.c2 IN ())));
SELECT ALL v0.c2, v0.c1 FROM v0 GROUP BY v0.c2, v0.c1;
SELECT ALL v0.c2, v0.c1 FROM v0 WHERE (LIKELY(CASE v0.c0  WHEN v0.c2 THEN v0.c0 END)) GROUP BY v0.c2, v0.c1 UNION SELECT v0.c2, v0.c1 FROM v0 WHERE ((NOT (LIKELY(CASE v0.c0  WHEN v0.c2 THEN v0.c0 END)))) GROUP BY v0.c2, v0.c1 UNION SELECT v0.c2, v0.c1 FROM v0 WHERE (((LIKELY(CASE v0.c0  WHEN v0.c2 THEN v0.c0 END)) ISNULL)) GROUP BY v0.c2, v0.c1;
SELECT ALL v0.c2, v0.c1 FROM v0 GROUP BY v0.c2, v0.c1;
SELECT v0.c0, v0.c2 FROM t0 INNER JOIN v0 ON (((NOT (v0.c2))) NOT NULL) GROUP BY v0.c0, v0.c2;
SELECT v0.c0, v0.c2 FROM t0 INNER JOIN v0 ON (((NOT (v0.c2))) NOT NULL) GROUP BY v0.c0, v0.c2 HAVING ((GROUP_CONCAT(TOTAL(v0.c0))) NOT BETWEEN (v0.c1) AND (v0.c2 COLLATE RTRIM)) UNION ALL SELECT ALL v0.c0, v0.c2 FROM t0 INNER JOIN v0 ON (((NOT (v0.c2))) NOT NULL) GROUP BY v0.c0, v0.c2 HAVING (NOT (((GROUP_CONCAT(TOTAL(v0.c0))) NOT BETWEEN (v0.c1) AND (v0.c2 COLLATE RTRIM)))) UNION ALL SELECT v0.c0, v0.c2 FROM t0 INNER JOIN v0 ON (((NOT (v0.c2))) NOT NULL) GROUP BY v0.c0, v0.c2 HAVING ((((GROUP_CONCAT(TOTAL(v0.c0))) NOT BETWEEN (v0.c1) AND (v0.c2 COLLATE RTRIM))) ISNULL);
SELECT ALL * FROM t0;
SELECT * FROM t0 WHERE (((((((t0.c0)AND(t0.c0)))AND(t0.c0))) NOTNULL)) UNION ALL SELECT ALL * FROM t0 WHERE ((NOT (((((((t0.c0)AND(t0.c0)))AND(t0.c0))) NOTNULL)))) UNION ALL SELECT * FROM t0 WHERE (((((((((t0.c0)AND(t0.c0)))AND(t0.c0))) NOTNULL)) ISNULL));
SELECT ALL * FROM t0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (((v0.c0 COLLATE NOCASE) NOT BETWEEN (v0.c2 COLLATE NOCASE) AND ((v0.c0 IN ())))) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (((v0.c0 COLLATE NOCASE) NOT BETWEEN (v0.c2 COLLATE NOCASE) AND ((v0.c0 IN ())))))) UNION SELECT DISTINCT * FROM v0 WHERE (((((v0.c0 COLLATE NOCASE) NOT BETWEEN (v0.c2 COLLATE NOCASE) AND ((v0.c0 IN ())))) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT ALL v0.c2, t0.c0, v0.c1 FROM t0, v0 GROUP BY v0.c2, t0.c0, v0.c1;
SELECT v0.c2, t0.c0, v0.c1 FROM t0, v0 WHERE (CASE t0.c0  WHEN v0.c2 THEN t0.c0 ELSE v0.c1 END COLLATE NOCASE) GROUP BY v0.c2, t0.c0, v0.c1 UNION SELECT v0.c2, t0.c0, v0.c1 FROM t0, v0 WHERE ((NOT (CASE t0.c0  WHEN v0.c2 THEN t0.c0 ELSE v0.c1 END COLLATE NOCASE))) GROUP BY v0.c2, t0.c0, v0.c1 UNION SELECT v0.c2, t0.c0, v0.c1 FROM t0, v0 WHERE (((CASE t0.c0  WHEN v0.c2 THEN t0.c0 ELSE v0.c1 END COLLATE NOCASE) ISNULL)) GROUP BY v0.c2, t0.c0, v0.c1;
SELECT ALL v0.c2, t0.c0, v0.c1 FROM t0, v0 GROUP BY v0.c2, t0.c0, v0.c1;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING COUNT(*) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING COUNT(*) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT * FROM v0;
SELECT ALL * FROM v0 WHERE (CAST(v0.c1 AS INTEGER) COLLATE RTRIM) UNION ALL SELECT ALL * FROM v0 WHERE ((NOT (CAST(v0.c1 AS INTEGER) COLLATE RTRIM))) UNION ALL SELECT ALL * FROM v0 WHERE (((CAST(v0.c1 AS INTEGER) COLLATE RTRIM) ISNULL));
SELECT * FROM v0;
SELECT DISTINCT v0.c1, v0.c2, v0.c0 FROM v0;
SELECT DISTINCT v0.c1, v0.c2, v0.c0 FROM v0 WHERE (((v0.c1 COLLATE NOCASE)>(((v0.c0)>>(v0.c2))))) UNION SELECT DISTINCT v0.c1, v0.c2, v0.c0 FROM v0 WHERE ((NOT (((v0.c1 COLLATE NOCASE)>(((v0.c0)>>(v0.c2))))))) UNION SELECT DISTINCT v0.c1, v0.c2, v0.c0 FROM v0 WHERE (((((v0.c1 COLLATE NOCASE)>(((v0.c0)>>(v0.c2))))) ISNULL));
SELECT DISTINCT v0.c1, v0.c2, v0.c0 FROM v0;
SELECT v0.c1, v0.c2, t0.c0 FROM v0, t0 GROUP BY v0.c1, v0.c2, t0.c0;
SELECT ALL v0.c1, v0.c2, t0.c0 FROM v0, t0 WHERE ((((((t0.c0, t0.c0, v0.c1)) BETWEEN ((v0.c2, v0.c2, v0.c2)) AND ((v0.c0, v0.c2, v0.c2)))) IS FALSE)) GROUP BY v0.c1, v0.c2, t0.c0 UNION SELECT v0.c1, v0.c2, t0.c0 FROM v0, t0 WHERE ((NOT ((((((t0.c0, t0.c0, v0.c1)) BETWEEN ((v0.c2, v0.c2, v0.c2)) AND ((v0.c0, v0.c2, v0.c2)))) IS FALSE)))) GROUP BY v0.c1, v0.c2, t0.c0 UNION SELECT ALL v0.c1, v0.c2, t0.c0 FROM v0, t0 WHERE ((((((((t0.c0, t0.c0, v0.c1)) BETWEEN ((v0.c2, v0.c2, v0.c2)) AND ((v0.c0, v0.c2, v0.c2)))) IS FALSE)) ISNULL)) GROUP BY v0.c1, v0.c2, t0.c0;
SELECT v0.c1, v0.c2, t0.c0 FROM v0, t0 GROUP BY v0.c1, v0.c2, t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING '0.45963862955959744' UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT ('0.45963862955959744')) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (('0.45963862955959744') ISNULL);
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING '0.45963862955959744' UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT ('0.45963862955959744')) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (('0.45963862955959744') ISNULL);
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT * FROM t0;
SELECT ALL * FROM t0 WHERE (((((((t0.c0)&(t0.c0)))AND('CV')))AND((((((((('-767981763')OR(t0.c0)))OR(t0.c0)))OR(t0.c0)))AND(t0.c0))))) UNION ALL SELECT * FROM t0 WHERE ((NOT (((((((t0.c0)&(t0.c0)))AND('CV')))AND((((((((('-767981763')OR(t0.c0)))OR(t0.c0)))OR(t0.c0)))AND(t0.c0))))))) UNION ALL SELECT * FROM t0 WHERE (((((((((t0.c0)&(t0.c0)))AND('CV')))AND((((((((('-767981763')OR(t0.c0)))OR(t0.c0)))OR(t0.c0)))AND(t0.c0))))) ISNULL));
SELECT * FROM t0;
SELECT DISTINCT * FROM t0 LEFT OUTER JOIN v0 ON ((NULL) ISNULL);
SELECT DISTINCT * FROM t0 LEFT OUTER JOIN v0 ON ((NULL) ISNULL) WHERE (((v0.c0)&(((v0.c1) IS TRUE)))) UNION SELECT DISTINCT * FROM t0 LEFT OUTER JOIN v0 ON ((NULL) ISNULL) WHERE ((NOT (((v0.c0)&(((v0.c1) IS TRUE)))))) UNION SELECT DISTINCT * FROM t0 LEFT OUTER JOIN v0 ON ((NULL) ISNULL) WHERE (((((v0.c0)&(((v0.c1) IS TRUE)))) ISNULL));
SELECT DISTINCT * FROM t0 LEFT OUTER JOIN v0 ON ((NULL) ISNULL);
SELECT v0.c1, v0.c2 FROM v0 NATURAL JOIN t0 GROUP BY v0.c1, v0.c2;
SELECT ALL v0.c1, v0.c2 FROM v0 NATURAL JOIN t0 WHERE (((v0.c2) NOT BETWEEN (((t0.c0)%(v0.c2))) AND (v0.c2))) GROUP BY v0.c1, v0.c2 UNION SELECT v0.c1, v0.c2 FROM v0 NATURAL JOIN t0 WHERE ((NOT (((v0.c2) NOT BETWEEN (((t0.c0)%(v0.c2))) AND (v0.c2))))) GROUP BY v0.c1, v0.c2 UNION SELECT ALL v0.c1, v0.c2 FROM v0 NATURAL JOIN t0 WHERE (((((v0.c2) NOT BETWEEN (((t0.c0)%(v0.c2))) AND (v0.c2))) ISNULL)) GROUP BY v0.c1, v0.c2;
SELECT v0.c1, v0.c2 FROM v0 NATURAL JOIN t0 GROUP BY v0.c1, v0.c2;
SELECT v0.c0, v0.c2, v0.c1, t0.c0 FROM t0, v0 GROUP BY v0.c0, v0.c2, v0.c1, t0.c0;
SELECT ALL v0.c0, v0.c2, v0.c1, t0.c0 FROM t0, v0 GROUP BY v0.c0, v0.c2, v0.c1, t0.c0 HAVING GROUP_CONCAT(((t0.c0)>=(COUNT(MIN(v0.c1))))) UNION ALL SELECT ALL v0.c0, v0.c2, v0.c1, t0.c0 FROM t0, v0 GROUP BY v0.c0, v0.c2, v0.c1, t0.c0 HAVING (NOT (GROUP_CONCAT(((t0.c0)>=(COUNT(MIN(v0.c1))))))) UNION ALL SELECT ALL v0.c0, v0.c2, v0.c1, t0.c0 FROM t0, v0 GROUP BY v0.c0, v0.c2, v0.c1, t0.c0 HAVING ((GROUP_CONCAT(((t0.c0)>=(COUNT(MIN(v0.c1)))))) ISNULL);
SELECT * FROM v0;
SELECT * FROM v0 WHERE (CAST(v0.c0 AS NUMERIC) COLLATE NOCASE) UNION ALL SELECT * FROM v0 WHERE ((NOT (CAST(v0.c0 AS NUMERIC) COLLATE NOCASE))) UNION ALL SELECT * FROM v0 WHERE (((CAST(v0.c0 AS NUMERIC) COLLATE NOCASE) ISNULL));
SELECT * FROM v0;
SELECT DISTINCT * FROM t0, v0;
SELECT DISTINCT * FROM t0, v0 WHERE ((((((((t0.c0)) NOT BETWEEN ((v0.c2)) AND ((0.03674728087803092))))AND(v0.c0 COLLATE NOCASE)))AND((((v0.c0))<=((t0.c0)))))) UNION SELECT DISTINCT * FROM t0 NOT INDEXED, v0 WHERE ((NOT ((((((((t0.c0)) NOT BETWEEN ((v0.c2)) AND ((0.03674728087803092))))AND(v0.c0 COLLATE NOCASE)))AND((((v0.c0))<=((t0.c0)))))))) UNION SELECT DISTINCT * FROM t0, v0 WHERE ((((((((((t0.c0)) NOT BETWEEN ((v0.c2)) AND ((0.03674728087803092))))AND(v0.c0 COLLATE NOCASE)))AND((((v0.c0))<=((t0.c0)))))) ISNULL));
SELECT DISTINCT * FROM t0, v0;
SELECT v0.c1, v0.c0, v0.c2 FROM v0 NOT INDEXED GROUP BY v0.c1, v0.c0, v0.c2;
SELECT v0.c1, v0.c0, v0.c2 FROM v0 WHERE (CAST(v0.c0 COLLATE BINARY AS REAL)) GROUP BY v0.c1, v0.c0, v0.c2 UNION SELECT ALL v0.c1, v0.c0, v0.c2 FROM v0 WHERE ((NOT (CAST(v0.c0 COLLATE BINARY AS REAL)))) GROUP BY v0.c1, v0.c0, v0.c2 UNION SELECT ALL v0.c1, v0.c0, v0.c2 FROM v0 WHERE (((CAST(v0.c0 COLLATE BINARY AS REAL)) ISNULL)) GROUP BY v0.c1, v0.c0, v0.c2;
SELECT v0.c1, v0.c0, v0.c2 FROM v0 NOT INDEXED GROUP BY v0.c1, v0.c0, v0.c2;
SELECT v0.c1, v0.c2, v0.c0 FROM v0 GROUP BY v0.c1, v0.c2, v0.c0;
SELECT v0.c1, v0.c2, v0.c0 FROM v0 GROUP BY v0.c1, v0.c2, v0.c0 HAVING (NOT (MIN(TOTAL(MAX(v0.c1))))) UNION ALL SELECT ALL v0.c1, v0.c2, v0.c0 FROM v0 GROUP BY v0.c1, v0.c2, v0.c0 HAVING (NOT ((NOT (MIN(TOTAL(MAX(v0.c1))))))) UNION ALL SELECT ALL v0.c1, v0.c2, v0.c0 FROM v0 GROUP BY v0.c1, v0.c2, v0.c0 HAVING (((NOT (MIN(TOTAL(MAX(v0.c1)))))) ISNULL);
SELECT * FROM v0, t0;
SELECT ALL * FROM v0, t0 WHERE (((LOWER(DISTINCT t0.c0)) BETWEEN (((v0.c2) IS FALSE)) AND (UPPER(v0.c2)))) UNION ALL SELECT ALL * FROM v0, t0 NOT INDEXED WHERE ((NOT (((LOWER(DISTINCT t0.c0)) BETWEEN (((v0.c2) IS FALSE)) AND (UPPER(v0.c2)))))) UNION ALL SELECT * FROM v0, t0 WHERE (((((LOWER(DISTINCT t0.c0)) BETWEEN (((v0.c2) IS FALSE)) AND (UPPER(v0.c2)))) ISNULL));
SELECT * FROM v0, t0;
SELECT DISTINCT v0.c2 FROM v0;
SELECT DISTINCT v0.c2 FROM v0 WHERE (CASE WHEN CASE v0.c2  WHEN v0.c2 THEN v0.c2 ELSE v0.c0 END THEN UNLIKELY(v0.c0) END) UNION SELECT DISTINCT v0.c2 FROM v0 WHERE ((NOT (CASE WHEN CASE v0.c2  WHEN v0.c2 THEN v0.c2 ELSE v0.c0 END THEN UNLIKELY(v0.c0) END))) UNION SELECT DISTINCT v0.c2 FROM v0 WHERE (((CASE WHEN CASE v0.c2  WHEN v0.c2 THEN v0.c2 ELSE v0.c0 END THEN UNLIKELY(v0.c0) END) ISNULL));
SELECT DISTINCT v0.c2 FROM v0;
SELECT ALL t0.c0, v0.c0, v0.c2 FROM t0, v0 GROUP BY t0.c0, v0.c0, v0.c2;
SELECT ALL t0.c0, v0.c0, v0.c2 FROM t0, v0 WHERE ((((v0.c0) NOT BETWEEN (v0.c1) AND (t0.c0)) IN ())) GROUP BY t0.c0, v0.c0, v0.c2 UNION SELECT ALL t0.c0, v0.c0, v0.c2 FROM t0, v0 NOT INDEXED WHERE ((NOT ((((v0.c0) NOT BETWEEN (v0.c1) AND (t0.c0)) IN ())))) GROUP BY t0.c0, v0.c0, v0.c2 UNION SELECT ALL t0.c0, v0.c0, v0.c2 FROM t0, v0 WHERE ((((((v0.c0) NOT BETWEEN (v0.c1) AND (t0.c0)) IN ())) ISNULL)) GROUP BY t0.c0, v0.c0, v0.c2;
SELECT ALL t0.c0, v0.c0, v0.c2 FROM t0, v0 GROUP BY t0.c0, v0.c0, v0.c2;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING CAST(((MIN(MIN(TOTAL(t0.c0))))-(MAX(COUNT(*)))) AS BLOB) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (CAST(((MIN(MIN(TOTAL(t0.c0))))-(MAX(COUNT(*)))) AS BLOB))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((CAST(((MIN(MIN(TOTAL(t0.c0))))-(MAX(COUNT(*)))) AS BLOB)) ISNULL);
SELECT ALL v0.c1 FROM v0, t0;
SELECT ALL v0.c1 FROM v0, t0 WHERE (((('-463092548')) BETWEEN ((((v0.c2)/(v0.c1)))) AND ((((v0.c2)-(v0.c2)))))) UNION ALL SELECT ALL v0.c1 FROM v0, t0 WHERE ((NOT (((('-463092548')) BETWEEN ((((v0.c2)/(v0.c1)))) AND ((((v0.c2)-(v0.c2)))))))) UNION ALL SELECT v0.c1 FROM v0, t0 WHERE (((((('-463092548')) BETWEEN ((((v0.c2)/(v0.c1)))) AND ((((v0.c2)-(v0.c2)))))) ISNULL));
SELECT ALL v0.c1 FROM v0, t0;
SELECT DISTINCT v0.c2, v0.c1 FROM t0, v0;
SELECT DISTINCT v0.c2, v0.c1 FROM t0, v0 WHERE (((CASE v0.c2  WHEN v0.c1 THEN t0.c0 WHEN v0.c1 THEN t0.c0 WHEN v0.c0 THEN v0.c1 ELSE v0.c0 END)/(((0.5756787460064688) NOT BETWEEN (v0.c1) AND (v0.c2))))) UNION SELECT DISTINCT v0.c2, v0.c1 FROM t0, v0 WHERE ((NOT (((CASE v0.c2  WHEN v0.c1 THEN t0.c0 WHEN v0.c1 THEN t0.c0 WHEN v0.c0 THEN v0.c1 ELSE v0.c0 END)/(((0.5756787460064688) NOT BETWEEN (v0.c1) AND (v0.c2))))))) UNION SELECT DISTINCT v0.c2, v0.c1 FROM t0, v0 WHERE (((((CASE v0.c2  WHEN v0.c1 THEN t0.c0 WHEN v0.c1 THEN t0.c0 WHEN v0.c0 THEN v0.c1 ELSE v0.c0 END)/(((0.5756787460064688) NOT BETWEEN (v0.c1) AND (v0.c2))))) ISNULL));
SELECT DISTINCT v0.c2, v0.c1 FROM t0, v0;
SELECT v0.c2, t0.c0, v0.c1 FROM t0, v0 GROUP BY v0.c2, t0.c0, v0.c1;
SELECT ALL v0.c2, t0.c0, v0.c1 FROM t0, v0 WHERE ((CAST(t0.c0 AS NUMERIC) IN ())) GROUP BY v0.c2, t0.c0, v0.c1 UNION SELECT v0.c2, t0.c0, v0.c1 FROM t0, v0 WHERE ((NOT ((CAST(t0.c0 AS NUMERIC) IN ())))) GROUP BY v0.c2, t0.c0, v0.c1 UNION SELECT ALL v0.c2, t0.c0, v0.c1 FROM t0, v0 WHERE ((((CAST(t0.c0 AS NUMERIC) IN ())) ISNULL)) GROUP BY v0.c2, t0.c0, v0.c1;
SELECT v0.c2, t0.c0, v0.c1 FROM t0, v0 GROUP BY v0.c2, t0.c0, v0.c1;
SELECT v0.c1, v0.c2, v0.c0, t0.c0 FROM v0 RIGHT OUTER JOIN t0 ON CAST(CASE WHEN 0.5388787355357308 THEN t0.c0 WHEN 0.4346049022283295 THEN t0.c0 WHEN v0.c0 THEN v0.c1 END AS REAL) GROUP BY v0.c1, v0.c2, v0.c0, t0.c0;
SELECT v0.c1, v0.c2, v0.c0, t0.c0 FROM v0 RIGHT OUTER JOIN t0 ON CAST(CASE WHEN 0.5388787355357308 THEN t0.c0 WHEN 0.4346049022283295 THEN t0.c0 WHEN v0.c0 THEN v0.c1 END AS REAL) GROUP BY v0.c1, v0.c2, v0.c0, t0.c0 HAVING MAX(COUNT(*)) UNION ALL SELECT ALL v0.c1, v0.c2, v0.c0, t0.c0 FROM v0 RIGHT OUTER JOIN t0 ON CAST(CASE WHEN 0.5388787355357308 THEN t0.c0 WHEN 0.4346049022283295 THEN t0.c0 WHEN v0.c0 THEN v0.c1 END AS REAL) GROUP BY v0.c1, v0.c2, v0.c0, t0.c0 HAVING (NOT (MAX(COUNT(*)))) UNION ALL SELECT v0.c1, v0.c2, v0.c0, t0.c0 FROM v0 RIGHT OUTER JOIN t0 ON CAST(CASE WHEN 0.5388787355357308 THEN t0.c0 WHEN 0.4346049022283295 THEN t0.c0 WHEN v0.c0 THEN v0.c1 END AS REAL) GROUP BY v0.c1, v0.c2, v0.c0, t0.c0 HAVING ((MAX(COUNT(*))) ISNULL);
SELECT ALL t0.c0, v0.c2, v0.c1, v0.c0 FROM t0, v0;
SELECT ALL t0.c0, v0.c2, v0.c1, v0.c0 FROM t0, v0 WHERE (v0.c1) UNION ALL SELECT t0.c0, v0.c2, v0.c1, v0.c0 FROM t0, v0 WHERE ((NOT (v0.c1))) UNION ALL SELECT ALL t0.c0, v0.c2, v0.c1, v0.c0 FROM t0, v0 WHERE (((v0.c1) ISNULL));
SELECT ALL t0.c0, v0.c2, v0.c1, v0.c0 FROM t0, v0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (COALESCE(DISTINCT (v0.c0 IN ()), ((v0.c1) NOTNULL))) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (COALESCE(DISTINCT (v0.c0 IN ()), ((v0.c1) NOTNULL))))) UNION SELECT DISTINCT * FROM v0 WHERE (((COALESCE(DISTINCT (v0.c0 IN ()), ((v0.c1) NOTNULL))) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT ALL v0.c0 FROM t0 NATURAL JOIN v0 GROUP BY v0.c0;
SELECT v0.c0 FROM t0 NATURAL JOIN v0 WHERE (CAST(v0.c1 COLLATE NOCASE AS TEXT)) GROUP BY v0.c0 UNION SELECT v0.c0 FROM t0 NATURAL JOIN v0 WHERE ((NOT (CAST(v0.c1 COLLATE NOCASE AS TEXT)))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM t0 NATURAL JOIN v0 WHERE (((CAST(v0.c1 COLLATE NOCASE AS TEXT)) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM t0 NATURAL JOIN v0 GROUP BY v0.c0;
SELECT ALL v0.c2, v0.c1 FROM v0 GROUP BY v0.c2, v0.c1;
SELECT ALL v0.c2, v0.c1 FROM v0 GROUP BY v0.c2, v0.c1 HAVING '0.576730252776894' UNION ALL SELECT ALL v0.c2, v0.c1 FROM v0 GROUP BY v0.c2, v0.c1 HAVING (NOT ('0.576730252776894')) UNION ALL SELECT ALL v0.c2, v0.c1 FROM v0 GROUP BY v0.c2, v0.c1 HAVING (('0.576730252776894') ISNULL);
SELECT ALL v0.c2, v0.c1 FROM v0 GROUP BY v0.c2, v0.c1;
SELECT ALL v0.c2, v0.c1 FROM v0 GROUP BY v0.c2, v0.c1 HAVING '0.576730252776894' UNION ALL SELECT ALL v0.c2, v0.c1 FROM v0 GROUP BY v0.c2, v0.c1 HAVING (NOT ('0.576730252776894')) UNION ALL SELECT ALL v0.c2, v0.c1 FROM v0 GROUP BY v0.c2, v0.c1 HAVING (('0.576730252776894') ISNULL);
SELECT ALL v0.c2, v0.c1 FROM v0 GROUP BY v0.c2, v0.c1;
SELECT ALL * FROM v0, t0;
SELECT ALL * FROM v0, t0 WHERE (((((v0.c1) IS TRUE)) ISNULL)) UNION ALL SELECT * FROM v0, t0 WHERE ((NOT (((((v0.c1) IS TRUE)) ISNULL)))) UNION ALL SELECT * FROM v0, t0 WHERE (((((((v0.c1) IS TRUE)) ISNULL)) ISNULL));
SELECT ALL * FROM v0, t0;
SELECT DISTINCT t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0 WHERE (TRIM((t0.c0 IN ()))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((NOT (TRIM((t0.c0 IN ()))))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE (((TRIM((t0.c0 IN ()))) ISNULL));
SELECT DISTINCT t0.c0 FROM t0;
SELECT ALL t0.c0 FROM t0, v0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0, v0 WHERE (json_quote(((v0.c0)>(v0.c1)))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0, v0 WHERE ((NOT (json_quote(((v0.c0)>(v0.c1)))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0, v0 WHERE (((json_quote(((v0.c0)>(v0.c1)))) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0, v0 GROUP BY t0.c0;
SELECT v0.c1 FROM v0, t0 GROUP BY v0.c1;
SELECT v0.c1 FROM v0, t0 GROUP BY v0.c1 HAVING TOTAL(COUNT(1.171012767E9)) UNION ALL SELECT ALL v0.c1 FROM v0, t0 GROUP BY v0.c1 HAVING (NOT (TOTAL(COUNT(1.171012767E9)))) UNION ALL SELECT v0.c1 FROM v0, t0 GROUP BY v0.c1 HAVING ((TOTAL(COUNT(1.171012767E9))) ISNULL);
SELECT ALL * FROM v0, t0;
SELECT ALL * FROM v0, t0 WHERE ((((v0.c2 IN (v0.c2))) IS FALSE)) UNION ALL SELECT ALL * FROM v0, t0 WHERE ((NOT ((((v0.c2 IN (v0.c2))) IS FALSE)))) UNION ALL SELECT * FROM v0, t0 WHERE ((((((v0.c2 IN (v0.c2))) IS FALSE)) ISNULL));
SELECT ALL * FROM v0, t0;
SELECT DISTINCT * FROM t0, v0;
SELECT DISTINCT * FROM t0, v0 WHERE (CASE ((v0.c1) ISNULL)  WHEN ((v0.c1)-(NULL)) THEN CAST(v0.c0 AS BLOB) END) UNION SELECT DISTINCT * FROM t0, v0 WHERE ((NOT (CASE ((v0.c1) ISNULL)  WHEN ((v0.c1)-(NULL)) THEN CAST(v0.c0 AS BLOB) END))) UNION SELECT DISTINCT * FROM t0, v0 WHERE (((CASE ((v0.c1) ISNULL)  WHEN ((v0.c1)-(NULL)) THEN CAST(v0.c0 AS BLOB) END) ISNULL));
SELECT DISTINCT * FROM t0, v0;
SELECT v0.c2, v0.c0, t0.c0, v0.c1 FROM t0, v0 GROUP BY v0.c2, v0.c0, t0.c0, v0.c1;
SELECT v0.c2, v0.c0, t0.c0, v0.c1 FROM t0, v0 WHERE ((NOT ((NOT (t0.c0))))) GROUP BY v0.c2, v0.c0, t0.c0, v0.c1 UNION SELECT v0.c2, v0.c0, t0.c0, v0.c1 FROM t0, v0 WHERE ((NOT ((NOT ((NOT (t0.c0))))))) GROUP BY v0.c2, v0.c0, t0.c0, v0.c1 UNION SELECT ALL v0.c2, v0.c0, t0.c0, v0.c1 FROM t0, v0 WHERE ((((NOT ((NOT (t0.c0))))) ISNULL)) GROUP BY v0.c2, v0.c0, t0.c0, v0.c1;
SELECT v0.c2, v0.c0, t0.c0, v0.c1 FROM t0, v0 GROUP BY v0.c2, v0.c0, t0.c0, v0.c1;
SELECT ALL v0.c2 FROM v0 GROUP BY v0.c2;
SELECT ALL v0.c2 FROM v0 GROUP BY v0.c2 HAVING COUNT(((COUNT(v0.c1)) BETWEEN (MAX(MIN(v0.c0))) AND (SUM(v0.c0)))) UNION ALL SELECT ALL v0.c2 FROM v0 GROUP BY v0.c2 HAVING (NOT (COUNT(((COUNT(v0.c1)) BETWEEN (MAX(MIN(v0.c0))) AND (SUM(v0.c0)))))) UNION ALL SELECT v0.c2 FROM v0 GROUP BY v0.c2 HAVING ((COUNT(((COUNT(v0.c1)) BETWEEN (MAX(MIN(v0.c0))) AND (SUM(v0.c0))))) ISNULL);
SELECT MIN(((v0.c0)<=(((v0.c0) ISNULL)))) FROM v0 ORDER BY 0.6204430030397534 ASC;
SELECT ALL v0.c1, v0.c0, t0.c0, v0.c2 FROM t0, v0;
SELECT ALL v0.c1, v0.c0, t0.c0, v0.c2 FROM t0, v0 WHERE (HEX(DISTINCT v0.c2) COLLATE NOCASE) UNION ALL SELECT v0.c1, v0.c0, t0.c0, v0.c2 FROM t0, v0 WHERE ((NOT (HEX(DISTINCT v0.c2) COLLATE NOCASE))) UNION ALL SELECT ALL v0.c1, v0.c0, t0.c0, v0.c2 FROM t0, v0 WHERE (((HEX(DISTINCT v0.c2) COLLATE NOCASE) ISNULL));
SELECT ALL v0.c1, v0.c0, t0.c0, v0.c2 FROM t0, v0;
SELECT DISTINCT v0.c2 FROM v0, t0;
SELECT DISTINCT v0.c2 FROM v0, t0 WHERE (((CASE WHEN v0.c2 THEN 0.7771303511007751 END)OR(v0.c2 COLLATE RTRIM))) UNION SELECT DISTINCT v0.c2 FROM v0, t0 WHERE ((NOT (((CASE WHEN v0.c2 THEN 0.7771303511007751 END)OR(v0.c2 COLLATE RTRIM))))) UNION SELECT DISTINCT v0.c2 FROM v0, t0 WHERE (((((CASE WHEN v0.c2 THEN 0.7771303511007751 END)OR(v0.c2 COLLATE RTRIM))) ISNULL));
SELECT DISTINCT v0.c2 FROM v0, t0;
SELECT v0.c0, v0.c1 FROM v0 NOT INDEXED GROUP BY v0.c0, v0.c1;
SELECT v0.c0, v0.c1 FROM v0 WHERE (((CASE v0.c1  WHEN v0.c1 THEN v0.c1 ELSE v0.c1 END)-(v0.c0 COLLATE BINARY))) GROUP BY v0.c0, v0.c1 UNION SELECT v0.c0, v0.c1 FROM v0 WHERE ((NOT (((CASE v0.c1  WHEN v0.c1 THEN v0.c1 ELSE v0.c1 END)-(v0.c0 COLLATE BINARY))))) GROUP BY v0.c0, v0.c1 UNION SELECT ALL v0.c0, v0.c1 FROM v0 WHERE (((((CASE v0.c1  WHEN v0.c1 THEN v0.c1 ELSE v0.c1 END)-(v0.c0 COLLATE BINARY))) ISNULL)) GROUP BY v0.c0, v0.c1;
SELECT v0.c0, v0.c1 FROM v0 NOT INDEXED GROUP BY v0.c0, v0.c1;
SELECT t0.c0, v0.c1, v0.c2 FROM v0 LEFT OUTER JOIN t0 ON ((((((t0.c0)OR(v0.c1)))AND(v0.c1))) IS FALSE) GROUP BY t0.c0, v0.c1, v0.c2;
SELECT ALL t0.c0, v0.c1, v0.c2 FROM v0 LEFT OUTER JOIN t0 ON ((((((t0.c0)OR(v0.c1)))AND(v0.c1))) IS FALSE) GROUP BY t0.c0, v0.c1, v0.c2 HAVING COUNT(TOTAL(t0.c0)) UNION ALL SELECT ALL t0.c0, v0.c1, v0.c2 FROM v0 LEFT OUTER JOIN t0 ON ((((((t0.c0)OR(v0.c1)))AND(v0.c1))) IS FALSE) GROUP BY t0.c0, v0.c1, v0.c2 HAVING (NOT (COUNT(TOTAL(t0.c0)))) UNION ALL SELECT t0.c0, v0.c1, v0.c2 FROM v0 LEFT OUTER JOIN t0 ON ((((((t0.c0)OR(v0.c1)))AND(v0.c1))) IS FALSE) GROUP BY t0.c0, v0.c1, v0.c2 HAVING ((COUNT(TOTAL(t0.c0))) ISNULL);
SELECT t0.c0, v0.c2, v0.c0 FROM t0, v0;
SELECT t0.c0, v0.c2, v0.c0 FROM t0, v0 WHERE (((((v0.c0)!=(v0.c0))) BETWEEN ((v0.c2 IN ())) AND (((t0.c0)==(v0.c0))))) UNION ALL SELECT t0.c0, v0.c2, v0.c0 FROM t0, v0 WHERE ((NOT (((((v0.c0)!=(v0.c0))) BETWEEN ((v0.c2 IN ())) AND (((t0.c0)=(v0.c0))))))) UNION ALL SELECT t0.c0, v0.c2, v0.c0 FROM t0, v0 WHERE (((((((v0.c0)<>(v0.c0))) BETWEEN ((v0.c2 IN ())) AND (((t0.c0)=(v0.c0))))) ISNULL));
SELECT t0.c0, v0.c2, v0.c0 FROM t0, v0;
SELECT DISTINCT v0.c2 FROM v0 INNER JOIN t0 ON ((CAST(v0.c1 AS NUMERIC))>>(CASE v0.c0  WHEN v0.c1 THEN v0.c0 WHEN ']-&I)2l' THEN v0.c0 WHEN t0.c0 THEN v0.c2 ELSE v0.c2 END));
SELECT DISTINCT v0.c2 FROM v0 INNER JOIN t0 ON ((CAST(v0.c1 AS NUMERIC))>>(CASE v0.c0  WHEN v0.c1 THEN v0.c0 WHEN ']-&I)2l' THEN v0.c0 WHEN t0.c0 THEN v0.c2 ELSE v0.c2 END)) WHERE (((v0.c0 COLLATE BINARY) BETWEEN (((t0.c0)>>(v0.c2))) AND ((((v0.c2, v0.c1, v0.c1)) NOT BETWEEN ((t0.c0, v0.c1, v0.c1)) AND ((0.8158396065255579, v0.c0, v0.c2)))))) UNION SELECT DISTINCT v0.c2 FROM v0 INNER JOIN t0 ON ((CAST(v0.c1 AS NUMERIC))>>(CASE v0.c0  WHEN v0.c1 THEN v0.c0 WHEN ']-&I)2l' THEN v0.c0 WHEN t0.c0 THEN v0.c2 ELSE v0.c2 END)) WHERE ((NOT (((v0.c0 COLLATE BINARY) BETWEEN (((t0.c0)>>(v0.c2))) AND ((((v0.c2, v0.c1, v0.c1)) NOT BETWEEN ((t0.c0, v0.c1, v0.c1)) AND ((0.8158396065255579, v0.c0, v0.c2)))))))) UNION SELECT DISTINCT v0.c2 FROM v0 INNER JOIN t0 ON ((CAST(v0.c1 AS NUMERIC))>>(CASE v0.c0  WHEN v0.c1 THEN v0.c0 WHEN ']-&I)2l' THEN v0.c0 WHEN t0.c0 THEN v0.c2 ELSE v0.c2 END)) WHERE (((((v0.c0 COLLATE BINARY) BETWEEN (((t0.c0)>>(v0.c2))) AND ((((v0.c2, v0.c1, v0.c1)) NOT BETWEEN ((t0.c0, v0.c1, v0.c1)) AND ((0.8158396065255579, v0.c0, v0.c2)))))) ISNULL));
SELECT DISTINCT v0.c2 FROM v0 INNER JOIN t0 ON ((CAST(v0.c1 AS NUMERIC))>>(CASE v0.c0  WHEN v0.c1 THEN v0.c0 WHEN ']-&I)2l' THEN v0.c0 WHEN t0.c0 THEN v0.c2 ELSE v0.c2 END));
SELECT ALL v0.c1, v0.c0, v0.c2 FROM v0 GROUP BY v0.c1, v0.c0, v0.c2;
SELECT v0.c1, v0.c0, v0.c2 FROM v0 WHERE (v0.c2) GROUP BY v0.c1, v0.c0, v0.c2 UNION SELECT ALL v0.c1, v0.c0, v0.c2 FROM v0 WHERE ((NOT (v0.c2))) GROUP BY v0.c1, v0.c0, v0.c2 UNION SELECT v0.c1, v0.c0, v0.c2 FROM v0 WHERE (((v0.c2) ISNULL)) GROUP BY v0.c1, v0.c0, v0.c2;
SELECT ALL v0.c1, v0.c0, v0.c2 FROM v0 GROUP BY v0.c1, v0.c0, v0.c2;
SELECT ALL v0.c2, v0.c1, v0.c0 FROM v0 GROUP BY v0.c2, v0.c1, v0.c0;
SELECT v0.c2, v0.c1, v0.c0 FROM v0 GROUP BY v0.c2, v0.c1, v0.c0 HAVING AVG(MAX(v0.c1)) UNION ALL SELECT v0.c2, v0.c1, v0.c0 FROM v0 GROUP BY v0.c2, v0.c1, v0.c0 HAVING (NOT (AVG(MAX(v0.c1)))) UNION ALL SELECT v0.c2, v0.c1, v0.c0 FROM v0 GROUP BY v0.c2, v0.c1, v0.c0 HAVING ((AVG(MAX(v0.c1))) ISNULL);
SELECT ALL t0.c0, v0.c2, v0.c1, v0.c0 FROM v0, t0;
SELECT t0.c0, v0.c2, v0.c1, v0.c0 FROM v0, t0 WHERE (CAST((((v0.c1, v0.c0, v0.c1)) BETWEEN ((NULL, v0.c1, v0.c0)) AND (('+', v0.c1, t0.c0))) AS TEXT)) UNION ALL SELECT t0.c0, v0.c2, v0.c1, v0.c0 FROM v0, t0 WHERE ((NOT (CAST((((v0.c1, v0.c0, v0.c1)) BETWEEN ((NULL, v0.c1, v0.c0)) AND (('+', v0.c1, t0.c0))) AS TEXT)))) UNION ALL SELECT t0.c0, v0.c2, v0.c1, v0.c0 FROM v0, t0 WHERE (((CAST((((v0.c1, v0.c0, v0.c1)) BETWEEN ((NULL, v0.c1, v0.c0)) AND (('+', v0.c1, t0.c0))) AS TEXT)) ISNULL));
SELECT ALL t0.c0, v0.c2, v0.c1, v0.c0 FROM v0, t0;
SELECT DISTINCT * FROM t0, v0;
SELECT DISTINCT * FROM t0, v0 WHERE (((LIKELIHOOD(v0.c0, 0.8910736438332718))/(((v0.c1) IS TRUE)))) UNION SELECT DISTINCT * FROM t0, v0 WHERE ((NOT (((LIKELIHOOD(v0.c0, 0.8910736438332718))/(((v0.c1) IS TRUE)))))) UNION SELECT DISTINCT * FROM t0, v0 WHERE (((((LIKELIHOOD(v0.c0, 0.8910736438332718))/(((v0.c1) IS TRUE)))) ISNULL));
SELECT DISTINCT * FROM t0, v0;
SELECT v0.c0, t0.c0 FROM t0, v0 GROUP BY v0.c0, t0.c0;
SELECT v0.c0, t0.c0 FROM t0, v0 WHERE (((v0.c2) NOT NULL)) GROUP BY v0.c0, t0.c0 UNION SELECT v0.c0, t0.c0 FROM t0, v0 WHERE ((NOT (((v0.c2) NOT NULL)))) GROUP BY v0.c0, t0.c0 UNION SELECT v0.c0, t0.c0 FROM t0, v0 WHERE (((((v0.c2) NOT NULL)) ISNULL)) GROUP BY v0.c0, t0.c0;
SELECT v0.c0, t0.c0 FROM t0, v0 GROUP BY v0.c0, t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((MIN(COUNT(*)))IS NOT(((((GROUP_CONCAT(MAX(t0.c0)))AND(t0.c0)))AND(MAX(t0.c0))))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (((MIN(COUNT(*)))IS NOT(((((GROUP_CONCAT(MAX(t0.c0)))AND(t0.c0)))AND(MAX(t0.c0))))))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((((MIN(COUNT(*)))IS NOT(((((GROUP_CONCAT(MAX(t0.c0)))AND(t0.c0)))AND(MAX(t0.c0)))))) ISNULL);
SELECT ALL t0.c0, v0.c0 FROM t0, v0;
SELECT t0.c0, v0.c0 FROM t0 NOT INDEXED, v0 WHERE (COALESCE(((((v0.c1)OR(v0.c1)))OR(v0.c1)), v0.c1 COLLATE RTRIM)) UNION ALL SELECT ALL t0.c0, v0.c0 FROM t0, v0 WHERE ((NOT (COALESCE(((((v0.c1)OR(v0.c1)))OR(v0.c1)), v0.c1 COLLATE RTRIM)))) UNION ALL SELECT t0.c0, v0.c0 FROM t0, v0 WHERE (((COALESCE(((((v0.c1)OR(v0.c1)))OR(v0.c1)), v0.c1 COLLATE RTRIM)) ISNULL));
SELECT ALL t0.c0, v0.c0 FROM t0, v0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE ((((((v0.c1))>=((v0.c2))))+(((v0.c1) BETWEEN (v0.c0) AND (v0.c0))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT ((((((v0.c1))>=((v0.c2))))+(((v0.c1) BETWEEN (v0.c0) AND (v0.c0))))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((((((((v0.c1))>=((v0.c2))))+(((v0.c1) BETWEEN (v0.c0) AND (v0.c0))))) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT ALL v0.c2 FROM v0 GROUP BY v0.c2;
SELECT ALL v0.c2 FROM v0 WHERE (((x'' COLLATE NOCASE) IS FALSE)) GROUP BY v0.c2 UNION SELECT ALL v0.c2 FROM v0 WHERE ((NOT (((x'' COLLATE NOCASE) IS FALSE)))) GROUP BY v0.c2 UNION SELECT v0.c2 FROM v0 WHERE (((((x'' COLLATE NOCASE) IS FALSE)) ISNULL)) GROUP BY v0.c2;
SELECT ALL v0.c2 FROM v0 GROUP BY v0.c2;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING AVG(COUNT(t0.c0)) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (AVG(COUNT(t0.c0)))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((AVG(COUNT(t0.c0))) ISNULL);
SELECT ALL t0.c0 FROM t0;
SELECT t0.c0 FROM t0 WHERE ((((t0.c0)) NOT BETWEEN ((((((t0.c0)AND(t0.c0)))AND(t0.c0)))) AND ((CAST(t0.c0 AS INTEGER))))) UNION ALL SELECT t0.c0 FROM t0 WHERE ((NOT ((((t0.c0)) NOT BETWEEN ((((((t0.c0)AND(t0.c0)))AND(t0.c0)))) AND ((CAST(t0.c0 AS INTEGER))))))) UNION ALL SELECT ALL t0.c0 FROM t0 WHERE ((((((t0.c0)) NOT BETWEEN ((((((t0.c0)AND(t0.c0)))AND(t0.c0)))) AND ((CAST(t0.c0 AS INTEGER))))) ISNULL));
SELECT ALL t0.c0 FROM t0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (TYPEOF(ABS(x'9f40'))) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (TYPEOF(ABS(x'9f40'))))) UNION SELECT DISTINCT * FROM v0 WHERE (((TYPEOF(ABS(x'9f40'))) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT v0.c2, v0.c0 FROM v0 GROUP BY v0.c2, v0.c0;
SELECT ALL v0.c2, v0.c0 FROM v0 WHERE (CASE CASE WHEN v0.c0 THEN v0.c2 END  WHEN ((v0.c1) BETWEEN (v0.c2) AND (v0.c0)) THEN TRIM(v0.c1) WHEN v0.c2 COLLATE RTRIM THEN v0.c2 WHEN x'2ba1' THEN (((v0.c2))<((v0.c1))) END) GROUP BY v0.c2, v0.c0 UNION SELECT v0.c2, v0.c0 FROM v0 WHERE ((NOT (CASE CASE WHEN v0.c0 THEN v0.c2 END  WHEN ((v0.c1) BETWEEN (v0.c2) AND (v0.c0)) THEN TRIM(v0.c1) WHEN v0.c2 COLLATE RTRIM THEN v0.c2 WHEN x'2ba1' THEN (((v0.c2))<((v0.c1))) END))) GROUP BY v0.c2, v0.c0 UNION SELECT ALL v0.c2, v0.c0 FROM v0 WHERE (((CASE CASE WHEN v0.c0 THEN v0.c2 END  WHEN ((v0.c1) BETWEEN (v0.c2) AND (v0.c0)) THEN TRIM(v0.c1) WHEN v0.c2 COLLATE RTRIM THEN v0.c2 WHEN x'2ba1' THEN (((v0.c2))<((v0.c1))) END) ISNULL)) GROUP BY v0.c2, v0.c0;
SELECT v0.c2, v0.c0 FROM v0 GROUP BY v0.c2, v0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING MIN(CAST(t0.c0 AS INTEGER)) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (MIN(CAST(t0.c0 AS INTEGER)))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((MIN(CAST(t0.c0 AS INTEGER))) ISNULL);
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING MIN(CAST(t0.c0 AS INTEGER)) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (MIN(CAST(t0.c0 AS INTEGER)))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((MIN(CAST(t0.c0 AS INTEGER))) ISNULL);
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT v0.c0, v0.c2, v0.c1, t0.c0 FROM v0, t0;
SELECT v0.c0, v0.c2, v0.c1, t0.c0 FROM v0, t0 WHERE (((((((v0.c1)OR(v0.c2)))AND(v0.c2)))<=(((((t0.c0)AND(v0.c1)))OR(t0.c0))))) UNION ALL SELECT ALL v0.c0, v0.c2, v0.c1, t0.c0 FROM v0, t0 WHERE ((NOT (((((((v0.c1)OR(v0.c2)))AND(v0.c2)))<=(((((t0.c0)AND(v0.c1)))OR(t0.c0))))))) UNION ALL SELECT v0.c0, v0.c2, v0.c1, t0.c0 FROM v0, t0 WHERE (((((((((v0.c1)OR(v0.c2)))AND(v0.c2)))<=(((((t0.c0)AND(v0.c1)))OR(t0.c0))))) ISNULL));
SELECT v0.c0, v0.c2, v0.c1, t0.c0 FROM v0, t0;
SELECT DISTINCT * FROM v0, t0;
SELECT DISTINCT * FROM v0, t0 WHERE (((((v0.c2)%(v0.c0)))>=(v0.c2))) UNION SELECT DISTINCT * FROM v0, t0 WHERE ((NOT (((((v0.c2)%(v0.c0)))>=(v0.c2))))) UNION SELECT DISTINCT * FROM v0, t0 WHERE (((((((v0.c2)%(v0.c0)))>=(v0.c2))) ISNULL));
SELECT DISTINCT * FROM v0, t0;
SELECT v0.c0, v0.c2, v0.c1 FROM v0, t0 GROUP BY v0.c0, v0.c2, v0.c1;
SELECT ALL v0.c0, v0.c2, v0.c1 FROM v0, t0 WHERE (CAST(v0.c0 AS TEXT) COLLATE NOCASE) GROUP BY v0.c0, v0.c2, v0.c1 UNION SELECT ALL v0.c0, v0.c2, v0.c1 FROM v0, t0 WHERE ((NOT (CAST(v0.c0 AS TEXT) COLLATE NOCASE))) GROUP BY v0.c0, v0.c2, v0.c1 UNION SELECT ALL v0.c0, v0.c2, v0.c1 FROM v0, t0 WHERE (((CAST(v0.c0 AS TEXT) COLLATE NOCASE) ISNULL)) GROUP BY v0.c0, v0.c2, v0.c1;
SELECT v0.c0, v0.c2, v0.c1 FROM v0, t0 GROUP BY v0.c0, v0.c2, v0.c1;
SELECT ALL v0.c2 FROM v0 GROUP BY v0.c2;
SELECT ALL v0.c2 FROM v0 GROUP BY v0.c2 HAVING COUNT(*) UNION ALL SELECT v0.c2 FROM v0 GROUP BY v0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT v0.c2 FROM v0 GROUP BY v0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT ALL v0.c2 FROM v0 GROUP BY v0.c2;
SELECT ALL v0.c2 FROM v0 GROUP BY v0.c2 HAVING COUNT(*) UNION ALL SELECT v0.c2 FROM v0 GROUP BY v0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT v0.c2 FROM v0 GROUP BY v0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT ALL v0.c2 FROM v0 GROUP BY v0.c2;
SELECT ALL * FROM v0;
SELECT ALL * FROM v0 WHERE (CAST(PRINTF(v0.c0, v0.c2, v0.c2) AS BLOB)) UNION ALL SELECT * FROM v0 WHERE ((NOT (CAST(PRINTF(v0.c0, v0.c2, v0.c2) AS BLOB)))) UNION ALL SELECT * FROM v0 WHERE (((CAST(PRINTF(v0.c0, v0.c2, v0.c2) AS BLOB)) ISNULL));
SELECT ALL * FROM v0;
SELECT DISTINCT * FROM t0, v0;
SELECT DISTINCT * FROM t0 NOT INDEXED, v0 WHERE (CAST(v0.c0 AS NUMERIC) COLLATE BINARY) UNION SELECT DISTINCT * FROM t0, v0 WHERE ((NOT (CAST(v0.c0 AS NUMERIC) COLLATE BINARY))) UNION SELECT DISTINCT * FROM t0, v0 WHERE (((CAST(v0.c0 AS NUMERIC) COLLATE BINARY) ISNULL));
SELECT DISTINCT * FROM t0, v0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE (((((((t0.c0) NOT NULL))OR(((t0.c0) NOT NULL))))OR(t0.c0 COLLATE BINARY))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT (((((((t0.c0) NOT NULL))OR(((t0.c0) NOT NULL))))OR(t0.c0 COLLATE BINARY))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE (((((((((t0.c0) NOT NULL))OR(((t0.c0) NOT NULL))))OR(t0.c0 COLLATE BINARY))) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL v0.c0, t0.c0 FROM t0, v0 GROUP BY v0.c0, t0.c0;
SELECT ALL v0.c0, t0.c0 FROM t0, v0 GROUP BY v0.c0, t0.c0 HAVING NULL UNION ALL SELECT v0.c0, t0.c0 FROM t0, v0 GROUP BY v0.c0, t0.c0 HAVING (NOT (NULL)) UNION ALL SELECT v0.c0, t0.c0 FROM t0, v0 GROUP BY v0.c0, t0.c0 HAVING ((NULL) ISNULL);
SELECT ALL v0.c0, t0.c0 FROM t0, v0 GROUP BY v0.c0, t0.c0;
SELECT ALL v0.c0, t0.c0 FROM t0, v0 GROUP BY v0.c0, t0.c0 HAVING NULL UNION ALL SELECT v0.c0, t0.c0 FROM t0, v0 GROUP BY v0.c0, t0.c0 HAVING (NOT (NULL)) UNION ALL SELECT v0.c0, t0.c0 FROM t0, v0 GROUP BY v0.c0, t0.c0 HAVING ((NULL) ISNULL);
SELECT ALL v0.c0, t0.c0 FROM t0, v0 GROUP BY v0.c0, t0.c0;
SELECT v0.c1, v0.c2, v0.c0 FROM v0;
SELECT v0.c1, v0.c2, v0.c0 FROM v0 WHERE (CASE WHEN (+ (v0.c1)) THEN v0.c0 ELSE CAST(v0.c1 AS BLOB) END) UNION ALL SELECT ALL v0.c1, v0.c2, v0.c0 FROM v0 WHERE ((NOT (CASE WHEN (+ (v0.c1)) THEN v0.c0 ELSE CAST(v0.c1 AS BLOB) END))) UNION ALL SELECT ALL v0.c1, v0.c2, v0.c0 FROM v0 WHERE (((CASE WHEN (+ (v0.c1)) THEN v0.c0 ELSE CAST(v0.c1 AS BLOB) END) ISNULL));
SELECT v0.c1, v0.c2, v0.c0 FROM v0;
SELECT DISTINCT t0.c0, v0.c1 FROM t0 FULL OUTER JOIN v0 ON CASE CAST(v0.c1 AS BLOB)  WHEN t0.c0 THEN ((v0.c0)>=(v0.c2)) WHEN SQLITE_SOURCE_ID() THEN ((v0.c0)-(t0.c0)) WHEN ((((((((v0.c1)OR(v0.c1)))AND(t0.c0)))OR(v0.c2)))OR(v0.c0)) THEN ((v0.c2) NOT BETWEEN (v0.c1) AND (v0.c1)) END;
SELECT DISTINCT t0.c0, v0.c1 FROM t0 FULL OUTER JOIN v0 ON CASE CAST(v0.c1 AS BLOB)  WHEN t0.c0 THEN ((v0.c0)>=(v0.c2)) WHEN SQLITE_SOURCE_ID() THEN ((v0.c0)-(t0.c0)) WHEN ((((((((v0.c1)OR(v0.c1)))AND(t0.c0)))OR(v0.c2)))OR(v0.c0)) THEN ((v0.c2) NOT BETWEEN (v0.c1) AND (v0.c1)) END WHERE (((0Xffffffff85d733b2) NOT NULL)) UNION SELECT DISTINCT t0.c0, v0.c1 FROM t0 FULL OUTER JOIN v0 ON CASE CAST(v0.c1 AS BLOB)  WHEN t0.c0 THEN ((v0.c0)>=(v0.c2)) WHEN SQLITE_SOURCE_ID() THEN ((v0.c0)-(t0.c0)) WHEN ((((((((v0.c1)OR(v0.c1)))AND(t0.c0)))OR(v0.c2)))OR(v0.c0)) THEN ((v0.c2) NOT BETWEEN (v0.c1) AND (v0.c1)) END WHERE ((NOT (((0Xffffffff85d733b2) NOT NULL)))) UNION SELECT DISTINCT t0.c0, v0.c1 FROM t0 FULL OUTER JOIN v0 ON CASE CAST(v0.c1 AS BLOB)  WHEN t0.c0 THEN ((v0.c0)>=(v0.c2)) WHEN SQLITE_SOURCE_ID() THEN ((v0.c0)-(t0.c0)) WHEN ((((((((v0.c1)OR(v0.c1)))AND(t0.c0)))OR(v0.c2)))OR(v0.c0)) THEN ((v0.c2) NOT BETWEEN (v0.c1) AND (v0.c1)) END WHERE (((((0Xffffffff85d733b2) NOT NULL)) ISNULL));
SELECT DISTINCT t0.c0, v0.c1 FROM t0 FULL OUTER JOIN v0 ON CASE CAST(v0.c1 AS BLOB)  WHEN t0.c0 THEN ((v0.c0)>=(v0.c2)) WHEN SQLITE_SOURCE_ID() THEN ((v0.c0)-(t0.c0)) WHEN ((((((((v0.c1)OR(v0.c1)))AND(t0.c0)))OR(v0.c2)))OR(v0.c0)) THEN ((v0.c2) NOT BETWEEN (v0.c1) AND (v0.c1)) END;
SELECT ALL v0.c2, v0.c0 FROM v0 GROUP BY v0.c2, v0.c0;
SELECT ALL v0.c2, v0.c0 FROM v0 WHERE (((((v0.c2)*(v0.c0)))=((NOT (v0.c1))))) GROUP BY v0.c2, v0.c0 UNION SELECT v0.c2, v0.c0 FROM v0 WHERE ((NOT (((((v0.c2)*(v0.c0)))==((NOT (v0.c1))))))) GROUP BY v0.c2, v0.c0 UNION SELECT ALL v0.c2, v0.c0 FROM v0 WHERE (((((((v0.c2)*(v0.c0)))==((NOT (v0.c1))))) ISNULL)) GROUP BY v0.c2, v0.c0;
SELECT ALL v0.c2, v0.c0 FROM v0 GROUP BY v0.c2, v0.c0;
SELECT v0.c1 FROM v0 GROUP BY v0.c1;
SELECT ALL v0.c1 FROM v0 GROUP BY v0.c1 HAVING AVG(((((TOTAL(MIN(COUNT(*))))AND(COUNT(*))))AND(v0.c1))) UNION ALL SELECT ALL v0.c1 FROM v0 GROUP BY v0.c1 HAVING (NOT (AVG(((((TOTAL(MIN(COUNT(*))))AND(COUNT(*))))AND(v0.c1))))) UNION ALL SELECT ALL v0.c1 FROM v0 GROUP BY v0.c1 HAVING ((AVG(((((TOTAL(MIN(COUNT(*))))AND(COUNT(*))))AND(v0.c1)))) ISNULL);
SELECT ALL v0.c2 FROM v0;
SELECT ALL v0.c2 FROM v0 WHERE (0Xffffffffb672a6c6) UNION ALL SELECT v0.c2 FROM v0 WHERE ((NOT (0xffffffffb672a6c6))) UNION ALL SELECT ALL v0.c2 FROM v0 WHERE (((0Xffffffffb672a6c6) ISNULL));
SELECT ALL v0.c2 FROM v0;
SELECT DISTINCT v0.c2, t0.c0 FROM v0, t0;
SELECT DISTINCT v0.c2, t0.c0 FROM v0, t0 WHERE (v0.c0) UNION SELECT DISTINCT v0.c2, t0.c0 FROM v0, t0 WHERE ((NOT (v0.c0))) UNION SELECT DISTINCT v0.c2, t0.c0 FROM v0, t0 WHERE (((v0.c0) ISNULL));
SELECT DISTINCT v0.c2, t0.c0 FROM v0, t0;
SELECT ALL v0.c0, v0.c2, v0.c1 FROM v0 GROUP BY v0.c0, v0.c2, v0.c1;
SELECT ALL v0.c0, v0.c2, v0.c1 FROM v0 WHERE (((((v0.c0)>(v0.c1))) ISNULL)) GROUP BY v0.c0, v0.c2, v0.c1 UNION SELECT v0.c0, v0.c2, v0.c1 FROM v0 WHERE ((NOT (((((v0.c0)>(v0.c1))) ISNULL)))) GROUP BY v0.c0, v0.c2, v0.c1 UNION SELECT ALL v0.c0, v0.c2, v0.c1 FROM v0 WHERE (((((((v0.c0)>(v0.c1))) ISNULL)) ISNULL)) GROUP BY v0.c0, v0.c2, v0.c1;
SELECT ALL v0.c0, v0.c2, v0.c1 FROM v0 GROUP BY v0.c0, v0.c2, v0.c1;
SELECT ALL v0.c2, t0.c0 FROM v0, t0 GROUP BY v0.c2, t0.c0;
SELECT ALL v0.c2, t0.c0 FROM v0, t0 GROUP BY v0.c2, t0.c0 HAVING (((NOT (GROUP_CONCAT(AVG(v0.c0))))) BETWEEN (AVG(v0.c1)) AND (((((t0.c0)AND(t0.c0)))OR(COUNT(v0.c1))))) UNION ALL SELECT v0.c2, t0.c0 FROM v0, t0 GROUP BY v0.c2, t0.c0 HAVING (NOT ((((NOT (GROUP_CONCAT(AVG(v0.c0))))) BETWEEN (AVG(v0.c1)) AND (((((t0.c0)AND(t0.c0)))OR(COUNT(v0.c1))))))) UNION ALL SELECT v0.c2, t0.c0 FROM v0, t0 GROUP BY v0.c2, t0.c0 HAVING (((((NOT (GROUP_CONCAT(AVG(v0.c0))))) BETWEEN (AVG(v0.c1)) AND (((((t0.c0)AND(t0.c0)))OR(COUNT(v0.c1)))))) ISNULL);
SELECT ALL v0.c1, t0.c0, v0.c0 FROM t0, v0;
SELECT v0.c1, t0.c0, v0.c0 FROM t0, v0 WHERE (((TYPEOF(v0.c0)) NOT BETWEEN ((v0.c2 IN (v0.c2, v0.c0))) AND (0Xffffffffdc72111f))) UNION ALL SELECT ALL v0.c1, t0.c0, v0.c0 FROM t0, v0 WHERE ((NOT (((TYPEOF(v0.c0)) NOT BETWEEN ((v0.c2 IN (v0.c2, v0.c0))) AND (0xffffffffdc72111f))))) UNION ALL SELECT ALL v0.c1, t0.c0, v0.c0 FROM t0, v0 WHERE (((((TYPEOF(v0.c0)) NOT BETWEEN ((v0.c2 IN (v0.c2, v0.c0))) AND (0xffffffffdc72111f))) ISNULL));
SELECT ALL v0.c1, t0.c0, v0.c0 FROM t0, v0;
SELECT DISTINCT * FROM v0 RIGHT OUTER JOIN t0 ON ((LIKELY(v0.c1))<<('0.25957346457356467' COLLATE RTRIM));
SELECT DISTINCT * FROM v0 RIGHT OUTER JOIN t0 ON ((LIKELY(v0.c1))<<('0.25957346457356467' COLLATE RTRIM)) WHERE ((- (v0.c1))) UNION SELECT DISTINCT * FROM v0 RIGHT OUTER JOIN t0 ON ((LIKELY(v0.c1))<<('0.25957346457356467' COLLATE RTRIM)) WHERE ((NOT ((- (v0.c1))))) UNION SELECT DISTINCT * FROM v0 RIGHT OUTER JOIN t0 ON ((LIKELY(v0.c1))<<('0.25957346457356467' COLLATE RTRIM)) WHERE ((((- (v0.c1))) ISNULL));
SELECT DISTINCT * FROM v0 RIGHT OUTER JOIN t0 ON ((LIKELY(v0.c1))<<('0.25957346457356467' COLLATE RTRIM));
SELECT v0.c1, v0.c0, v0.c2 FROM v0 GROUP BY v0.c1, v0.c0, v0.c2;
SELECT ALL v0.c1, v0.c0, v0.c2 FROM v0 WHERE (highlight(((v0.c1)IS NOT(v0.c1)), (((v0.c0))<>((v0.c1))), (v0.c1 IN (v0.c0)), (v0.c1 IN (v0.c1)))) GROUP BY v0.c1, v0.c0, v0.c2 UNION SELECT ALL v0.c1, v0.c0, v0.c2 FROM v0 WHERE ((NOT (highlight(((v0.c1)IS NOT(v0.c1)), (((v0.c0))!=((v0.c1))), (v0.c1 IN (v0.c0)), (v0.c1 IN (v0.c1)))))) GROUP BY v0.c1, v0.c0, v0.c2 UNION SELECT ALL v0.c1, v0.c0, v0.c2 FROM v0 WHERE (((highlight(((v0.c1)IS NOT(v0.c1)), (((v0.c0))!=((v0.c1))), (v0.c1 IN (v0.c0)), (v0.c1 IN (v0.c1)))) ISNULL)) GROUP BY v0.c1, v0.c0, v0.c2;
SELECT v0.c2, v0.c0, v0.c1 FROM v0, t0 GROUP BY v0.c2, v0.c0, v0.c1;
SELECT v0.c2, v0.c0, v0.c1 FROM v0, t0 GROUP BY v0.c2, v0.c0, v0.c1 HAVING COUNT(*) UNION ALL SELECT ALL v0.c2, v0.c0, v0.c1 FROM v0, t0 GROUP BY v0.c2, v0.c0, v0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL v0.c2, v0.c0, v0.c1 FROM v0, t0 GROUP BY v0.c2, v0.c0, v0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT v0.c2, v0.c0, v0.c1 FROM v0, t0 GROUP BY v0.c2, v0.c0, v0.c1;
SELECT v0.c2, v0.c0, v0.c1 FROM v0, t0 GROUP BY v0.c2, v0.c0, v0.c1 HAVING COUNT(*) UNION ALL SELECT ALL v0.c2, v0.c0, v0.c1 FROM v0, t0 GROUP BY v0.c2, v0.c0, v0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL v0.c2, v0.c0, v0.c1 FROM v0, t0 GROUP BY v0.c2, v0.c0, v0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT v0.c2, v0.c0, v0.c1 FROM v0, t0 GROUP BY v0.c2, v0.c0, v0.c1;
SELECT v0.c0, v0.c1, t0.c0, v0.c2 FROM t0, v0;
SELECT v0.c0, v0.c1, t0.c0, v0.c2 FROM t0 NOT INDEXED, v0 WHERE (((((JULIANDAY(v0.c0, t0.c0, x'4781'))OR((((v0.c0, v0.c0, v0.c0))>((v0.c0, v0.c1, t0.c0))))))OR(((v0.c2)>=(v0.c0))))) UNION ALL SELECT v0.c0, v0.c1, t0.c0, v0.c2 FROM t0, v0 WHERE ((NOT (((((JULIANDAY(v0.c0, t0.c0, x'4781'))OR((((v0.c0, v0.c0, v0.c0))>((v0.c0, v0.c1, t0.c0))))))OR(((v0.c2)>=(v0.c0))))))) UNION ALL SELECT v0.c0, v0.c1, t0.c0, v0.c2 FROM t0, v0 WHERE (((((((JULIANDAY(v0.c0, t0.c0, x'4781'))OR((((v0.c0, v0.c0, v0.c0))>((v0.c0, v0.c1, t0.c0))))))OR(((v0.c2)>=(v0.c0))))) ISNULL));
SELECT v0.c0, v0.c1, t0.c0, v0.c2 FROM t0, v0;
SELECT DISTINCT t0.c0, v0.c2, v0.c0, v0.c1 FROM v0, t0 INDEXED BY i13;
SELECT v0.c1 FROM t0, v0 GROUP BY v0.c1;
SELECT ALL v0.c1 FROM t0, v0 WHERE (t0.c0) GROUP BY v0.c1 UNION SELECT ALL v0.c1 FROM t0, v0 WHERE ((NOT (t0.c0))) GROUP BY v0.c1 UNION SELECT v0.c1 FROM t0, v0 NOT INDEXED WHERE (((t0.c0) ISNULL)) GROUP BY v0.c1;
SELECT v0.c1 FROM t0, v0 GROUP BY v0.c1;
SELECT ALL v0.c2 FROM t0 INNER JOIN v0 ON ((((v0.c2)||(v0.c1)))<=(((v0.c0)OR(v0.c2)))) GROUP BY v0.c2;
SELECT ALL v0.c2 FROM t0 INNER JOIN v0 ON ((((v0.c2)||(v0.c1)))<=(((v0.c0)OR(v0.c2)))) GROUP BY v0.c2 HAVING (('')GLOB(((COUNT(*)) IS TRUE))) UNION ALL SELECT ALL v0.c2 FROM t0 INNER JOIN v0 ON ((((v0.c2)||(v0.c1)))<=(((v0.c0)OR(v0.c2)))) GROUP BY v0.c2 HAVING (NOT ((('')GLOB(((COUNT(*)) IS TRUE))))) UNION ALL SELECT v0.c2 FROM t0 INNER JOIN v0 ON ((((v0.c2)||(v0.c1)))<=(((v0.c0)OR(v0.c2)))) GROUP BY v0.c2 HAVING (((('')GLOB(((COUNT(*)) IS TRUE)))) ISNULL);
SELECT ALL v0.c2 FROM t0 INNER JOIN v0 ON ((((v0.c2)||(v0.c1)))<=(((v0.c0)OR(v0.c2)))) GROUP BY v0.c2;
SELECT ALL v0.c2 FROM t0 INNER JOIN v0 ON ((((v0.c2)||(v0.c1)))<=(((v0.c0)OR(v0.c2)))) GROUP BY v0.c2 HAVING (('')GLOB(((COUNT(*)) IS TRUE))) UNION ALL SELECT ALL v0.c2 FROM t0 INNER JOIN v0 ON ((((v0.c2)||(v0.c1)))<=(((v0.c0)OR(v0.c2)))) GROUP BY v0.c2 HAVING (NOT ((('')GLOB(((COUNT(*)) IS TRUE))))) UNION ALL SELECT v0.c2 FROM t0 INNER JOIN v0 ON ((((v0.c2)||(v0.c1)))<=(((v0.c0)OR(v0.c2)))) GROUP BY v0.c2 HAVING (((('')GLOB(((COUNT(*)) IS TRUE)))) ISNULL);
SELECT ALL v0.c2 FROM t0 INNER JOIN v0 ON ((((v0.c2)||(v0.c1)))<=(((v0.c0)OR(v0.c2)))) GROUP BY v0.c2;
SELECT * FROM t0 RIGHT OUTER JOIN v0 ON t0.c0;
SELECT ALL * FROM t0 RIGHT OUTER JOIN v0 ON t0.c0 WHERE (LIKELY(DISTINCT (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((t0.c0))))) UNION ALL SELECT ALL * FROM t0 RIGHT OUTER JOIN v0 ON t0.c0 WHERE ((NOT (LIKELY(DISTINCT (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((t0.c0))))))) UNION ALL SELECT ALL * FROM t0 RIGHT OUTER JOIN v0 ON t0.c0 WHERE (((LIKELY(DISTINCT (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((t0.c0))))) ISNULL));
SELECT * FROM t0 RIGHT OUTER JOIN v0 ON t0.c0;
SELECT DISTINCT v0.c1, t0.c0, v0.c2 FROM v0, t0;
SELECT DISTINCT v0.c1, t0.c0, v0.c2 FROM v0, t0 WHERE (((v0.c2) BETWEEN (v0.c0) AND (t0.c0)) COLLATE RTRIM) UNION SELECT DISTINCT v0.c1, t0.c0, v0.c2 FROM v0, t0 WHERE ((NOT (((v0.c2) BETWEEN (v0.c0) AND (t0.c0)) COLLATE RTRIM))) UNION SELECT DISTINCT v0.c1, t0.c0, v0.c2 FROM v0, t0 WHERE (((((v0.c2) BETWEEN (v0.c0) AND (t0.c0)) COLLATE RTRIM) ISNULL));
SELECT DISTINCT v0.c1, t0.c0, v0.c2 FROM v0, t0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE (t0.c0) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT (t0.c0))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE (((t0.c0) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING AVG(AVG(COUNT(*))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (AVG(AVG(COUNT(*))))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((AVG(AVG(COUNT(*)))) ISNULL);
SELECT ALL SUM(CAST(CASE WHEN v0.c1 THEN t0.c0 ELSE t0.c0 END AS TEXT)) FROM t0, v0;
SELECT v0.c2, t0.c0, v0.c1 FROM t0, v0;
SELECT v0.c2, t0.c0, v0.c1 FROM t0, v0 WHERE ((((v0.c1)-(v0.c2)) IN ())) UNION ALL SELECT ALL v0.c2, t0.c0, v0.c1 FROM t0, v0 WHERE ((NOT ((((v0.c1)-(v0.c2)) IN ())))) UNION ALL SELECT v0.c2, t0.c0, v0.c1 FROM t0, v0 WHERE ((((((v0.c1)-(v0.c2)) IN ())) ISNULL));
SELECT v0.c2, t0.c0, v0.c1 FROM t0, v0;
SELECT DISTINCT v0.c0, v0.c1, v0.c2, t0.c0 FROM t0, v0;
SELECT DISTINCT v0.c0, v0.c1, v0.c2, t0.c0 FROM t0, v0 WHERE (NULL) UNION SELECT DISTINCT v0.c0, v0.c1, v0.c2, t0.c0 FROM t0, v0 WHERE ((NOT (NULL))) UNION SELECT DISTINCT v0.c0, v0.c1, v0.c2, t0.c0 FROM t0, v0 WHERE (((NULL) ISNULL));
SELECT DISTINCT v0.c0, v0.c1, v0.c2, t0.c0 FROM t0, v0;
SELECT t0.c0, v0.c2, v0.c1, v0.c0 FROM v0 CROSS JOIN t0 ON v0.c1 GROUP BY t0.c0, v0.c2, v0.c1, v0.c0;
SELECT t0.c0, v0.c2, v0.c1, v0.c0 FROM v0 CROSS JOIN t0 ON v0.c1 WHERE (CAST(((((((((v0.c0)AND(v0.c0)))OR(v0.c1)))AND(t0.c0)))OR(t0.c0)) AS BLOB)) GROUP BY t0.c0, v0.c2, v0.c1, v0.c0 UNION SELECT t0.c0, v0.c2, v0.c1, v0.c0 FROM v0 CROSS JOIN t0 ON v0.c1 WHERE ((NOT (CAST(((((((((v0.c0)AND(v0.c0)))OR(v0.c1)))AND(t0.c0)))OR(t0.c0)) AS BLOB)))) GROUP BY t0.c0, v0.c2, v0.c1, v0.c0 UNION SELECT ALL t0.c0, v0.c2, v0.c1, v0.c0 FROM v0 CROSS JOIN t0 ON v0.c1 WHERE (((CAST(((((((((v0.c0)AND(v0.c0)))OR(v0.c1)))AND(t0.c0)))OR(t0.c0)) AS BLOB)) ISNULL)) GROUP BY t0.c0, v0.c2, v0.c1, v0.c0;
SELECT t0.c0, v0.c2, v0.c1, v0.c0 FROM v0 CROSS JOIN t0 ON v0.c1 GROUP BY t0.c0, v0.c2, v0.c1, v0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((CASE GROUP_CONCAT(GROUP_CONCAT(COUNT(*)))  WHEN SUM(COUNT(AVG(SUM(MIN(MAX(t0.c0)))))) THEN GROUP_CONCAT(t0.c0) ELSE AVG(GROUP_CONCAT(MIN(t0.c0))) END) BETWEEN (MIN(MIN(t0.c0))) AND (MAX(SUM(t0.c0)))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (((CASE GROUP_CONCAT(GROUP_CONCAT(COUNT(*)))  WHEN SUM(COUNT(AVG(SUM(MIN(MAX(t0.c0)))))) THEN GROUP_CONCAT(t0.c0) ELSE AVG(GROUP_CONCAT(MIN(t0.c0))) END) BETWEEN (MIN(MIN(t0.c0))) AND (MAX(SUM(t0.c0)))))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((((CASE GROUP_CONCAT(GROUP_CONCAT(COUNT(*)))  WHEN SUM(COUNT(AVG(SUM(MIN(MAX(t0.c0)))))) THEN GROUP_CONCAT(t0.c0) ELSE AVG(GROUP_CONCAT(MIN(t0.c0))) END) BETWEEN (MIN(MIN(t0.c0))) AND (MAX(SUM(t0.c0))))) ISNULL);
SELECT MAX(LOWER((t0.c0 IN ()))) FROM t0 ORDER BY (t0.c0 IN (t0.c0)) COLLATE RTRIM DESC;
SELECT * FROM t0;
SELECT * FROM t0 WHERE (t0.c0 COLLATE BINARY) UNION ALL SELECT * FROM t0 WHERE ((NOT (t0.c0 COLLATE BINARY))) UNION ALL SELECT ALL * FROM t0 WHERE (((t0.c0 COLLATE BINARY) ISNULL));
SELECT * FROM t0;
SELECT DISTINCT * FROM t0, v0;
SELECT DISTINCT * FROM t0, v0 WHERE ((((v0.c2, v0.c2 COLLATE RTRIM, ((v0.c1)AND(v0.c0))))>((((v0.c1) NOT BETWEEN (v0.c2) AND (v0.c0)), (((v0.c1, v0.c1, v0.c1))>((v0.c0, v0.c1, v0.c2))), ((v0.c1) IS FALSE))))) UNION SELECT DISTINCT * FROM t0, v0 WHERE ((NOT ((((v0.c2, v0.c2 COLLATE RTRIM, ((v0.c1)AND(v0.c0))))>((((v0.c1) NOT BETWEEN (v0.c2) AND (v0.c0)), (((v0.c1, v0.c1, v0.c1))>((v0.c0, v0.c1, v0.c2))), ((v0.c1) IS FALSE))))))) UNION SELECT DISTINCT * FROM t0 NOT INDEXED, v0 WHERE ((((((v0.c2, v0.c2 COLLATE RTRIM, ((v0.c1)AND(v0.c0))))>((((v0.c1) NOT BETWEEN (v0.c2) AND (v0.c0)), (((v0.c1, v0.c1, v0.c1))>((v0.c0, v0.c1, v0.c2))), ((v0.c1) IS FALSE))))) ISNULL));
SELECT DISTINCT * FROM t0, v0;
SELECT v0.c1, v0.c0, t0.c0 FROM v0, t0 GROUP BY v0.c1, v0.c0, t0.c0;
SELECT ALL v0.c1, v0.c0, t0.c0 FROM v0, t0 WHERE ((('1301503317') NOTNULL)) GROUP BY v0.c1, v0.c0, t0.c0 UNION SELECT ALL v0.c1, v0.c0, t0.c0 FROM v0, t0 WHERE ((NOT ((('1301503317') NOTNULL)))) GROUP BY v0.c1, v0.c0, t0.c0 UNION SELECT ALL v0.c1, v0.c0, t0.c0 FROM v0, t0 WHERE ((((('1301503317') NOTNULL)) ISNULL)) GROUP BY v0.c1, v0.c0, t0.c0;
SELECT v0.c1, v0.c0, t0.c0 FROM v0, t0 GROUP BY v0.c1, v0.c0, t0.c0;
SELECT v0.c2, v0.c0 FROM v0 GROUP BY v0.c2, v0.c0;
SELECT v0.c2, v0.c0 FROM v0 GROUP BY v0.c2, v0.c0 HAVING (+ (COUNT(*))) UNION ALL SELECT ALL v0.c2, v0.c0 FROM v0 GROUP BY v0.c2, v0.c0 HAVING (NOT ((+ (COUNT(*))))) UNION ALL SELECT ALL v0.c2, v0.c0 FROM v0 GROUP BY v0.c2, v0.c0 HAVING (((+ (COUNT(*)))) ISNULL);
SELECT v0.c2, v0.c0 FROM v0 GROUP BY v0.c2, v0.c0;
SELECT v0.c2, v0.c0 FROM v0 GROUP BY v0.c2, v0.c0 HAVING (+ (COUNT(*))) UNION ALL SELECT ALL v0.c2, v0.c0 FROM v0 GROUP BY v0.c2, v0.c0 HAVING (NOT ((+ (COUNT(*))))) UNION ALL SELECT ALL v0.c2, v0.c0 FROM v0 GROUP BY v0.c2, v0.c0 HAVING (((+ (COUNT(*)))) ISNULL);
SELECT v0.c2, v0.c0 FROM v0 GROUP BY v0.c2, v0.c0;
SELECT ALL * FROM v0, t0;
SELECT * FROM v0, t0 WHERE (json_patch(CAST(v0.c0 AS TEXT), CASE WHEN v0.c0 THEN v0.c0 ELSE 0.47483294000928145 END)) UNION ALL SELECT * FROM v0, t0 WHERE ((NOT (json_patch(CAST(v0.c0 AS TEXT), CASE WHEN v0.c0 THEN v0.c0 ELSE 0.47483294000928145 END)))) UNION ALL SELECT * FROM v0, t0 WHERE (((json_patch(CAST(v0.c0 AS TEXT), CASE WHEN v0.c0 THEN v0.c0 ELSE 0.47483294000928145 END)) ISNULL));
SELECT ALL * FROM v0, t0;
SELECT DISTINCT v0.c2 FROM t0 FULL OUTER JOIN v0 ON CASE v0.c0  WHEN NULL THEN v0.c0 WHEN v0.c1 THEN t0.c0 WHEN v0.c2 THEN NULL WHEN v0.c2 THEN t0.c0 WHEN t0.c0 THEN v0.c1 ELSE v0.c0 END COLLATE BINARY;
SELECT DISTINCT v0.c2 FROM t0 FULL OUTER JOIN v0 ON CASE v0.c0  WHEN NULL THEN v0.c0 WHEN v0.c1 THEN t0.c0 WHEN v0.c2 THEN NULL WHEN v0.c2 THEN t0.c0 WHEN t0.c0 THEN v0.c1 ELSE v0.c0 END COLLATE BINARY WHERE ((((v0.c1)) BETWEEN ((x'')) AND ((CASE t0.c0  WHEN t0.c0 THEN v0.c0 ELSE v0.c1 END)))) UNION SELECT DISTINCT v0.c2 FROM t0 FULL OUTER JOIN v0 ON CASE v0.c0  WHEN NULL THEN v0.c0 WHEN v0.c1 THEN t0.c0 WHEN v0.c2 THEN NULL WHEN v0.c2 THEN t0.c0 WHEN t0.c0 THEN v0.c1 ELSE v0.c0 END COLLATE BINARY WHERE ((NOT ((((v0.c1)) BETWEEN ((x'')) AND ((CASE t0.c0  WHEN t0.c0 THEN v0.c0 ELSE v0.c1 END)))))) UNION SELECT DISTINCT v0.c2 FROM t0 FULL OUTER JOIN v0 ON CASE v0.c0  WHEN NULL THEN v0.c0 WHEN v0.c1 THEN t0.c0 WHEN v0.c2 THEN NULL WHEN v0.c2 THEN t0.c0 WHEN t0.c0 THEN v0.c1 ELSE v0.c0 END COLLATE BINARY WHERE ((((((v0.c1)) BETWEEN ((x'')) AND ((CASE t0.c0  WHEN t0.c0 THEN v0.c0 ELSE v0.c1 END)))) ISNULL));
SELECT DISTINCT v0.c2 FROM t0 FULL OUTER JOIN v0 ON CASE v0.c0  WHEN NULL THEN v0.c0 WHEN v0.c1 THEN t0.c0 WHEN v0.c2 THEN NULL WHEN v0.c2 THEN t0.c0 WHEN t0.c0 THEN v0.c1 ELSE v0.c0 END COLLATE BINARY;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE (((CAST(t0.c0 AS NUMERIC))>(t0.c0 COLLATE BINARY))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT (((CAST(t0.c0 AS NUMERIC))>(t0.c0 COLLATE BINARY))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE (((((CAST(t0.c0 AS NUMERIC))>(t0.c0 COLLATE BINARY))) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((MIN(GROUP_CONCAT(GROUP_CONCAT(t0.c0))))/(COUNT(*))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (((MIN(GROUP_CONCAT(GROUP_CONCAT(t0.c0))))/(COUNT(*))))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((((MIN(GROUP_CONCAT(GROUP_CONCAT(t0.c0))))/(COUNT(*)))) ISNULL);
SELECT ALL * FROM t0, v0;
SELECT * FROM t0, v0 WHERE ((((NULL)>(v0.c0)) IN ())) UNION ALL SELECT * FROM t0, v0 WHERE ((NOT ((((NULL)>(v0.c0)) IN ())))) UNION ALL SELECT * FROM t0, v0 WHERE ((((((NULL)>(v0.c0)) IN ())) ISNULL));
SELECT ALL * FROM t0, v0;
SELECT DISTINCT * FROM v0, t0;
SELECT DISTINCT * FROM v0, t0 WHERE ((((v0.c2)LIKE(t0.c0)) IN ())) UNION SELECT DISTINCT * FROM v0, t0 WHERE ((NOT ((((v0.c2)LIKE(t0.c0)) IN ())))) UNION SELECT DISTINCT * FROM v0, t0 WHERE ((((((v0.c2)LIKE(t0.c0)) IN ())) ISNULL));
SELECT DISTINCT * FROM v0, t0;
SELECT v0.c2, v0.c0 FROM v0 GROUP BY v0.c2, v0.c0;
SELECT v0.c2, v0.c0 FROM v0 WHERE (((((v0.c1)&(v0.c1)))%(((v0.c0) NOTNULL)))) GROUP BY v0.c2, v0.c0 UNION SELECT ALL v0.c2, v0.c0 FROM v0 WHERE ((NOT (((((v0.c1)&(v0.c1)))%(((v0.c0) NOTNULL)))))) GROUP BY v0.c2, v0.c0 UNION SELECT ALL v0.c2, v0.c0 FROM v0 WHERE (((((((v0.c1)&(v0.c1)))%(((v0.c0) NOTNULL)))) ISNULL)) GROUP BY v0.c2, v0.c0;
SELECT v0.c2, v0.c0 FROM v0 GROUP BY v0.c2, v0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING TOTAL('*''>.K1s' COLLATE BINARY) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (TOTAL('*''>.K1s' COLLATE BINARY))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((TOTAL('*''>.K1s' COLLATE BINARY)) ISNULL);
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING TOTAL('*''>.K1s' COLLATE BINARY) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (TOTAL('*''>.K1s' COLLATE BINARY))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((TOTAL('*''>.K1s' COLLATE BINARY)) ISNULL);
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL v0.c0, v0.c1, v0.c2, t0.c0 FROM t0, v0;
SELECT v0.c0, v0.c1, v0.c2, t0.c0 FROM t0, v0 WHERE (CAST(ROUND(v0.c0, v0.c2) AS REAL)) UNION ALL SELECT ALL v0.c0, v0.c1, v0.c2, t0.c0 FROM t0, v0 WHERE ((NOT (CAST(ROUND(v0.c0, v0.c2) AS REAL)))) UNION ALL SELECT ALL v0.c0, v0.c1, v0.c2, t0.c0 FROM t0, v0 WHERE (((CAST(ROUND(v0.c0, v0.c2) AS REAL)) ISNULL));
SELECT ALL v0.c0, v0.c1, v0.c2, t0.c0 FROM t0, v0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (((((t0.c0)GLOB(t0.c0))) NOT BETWEEN (CAST(t0.c0 AS TEXT)) AND (((((NULL)AND(t0.c0)))OR(t0.c0))))) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (((((t0.c0)GLOB(t0.c0))) NOT BETWEEN (CAST(t0.c0 AS TEXT)) AND (((((NULL)AND(t0.c0)))OR(t0.c0))))))) UNION SELECT DISTINCT * FROM t0 WHERE (((((((t0.c0)GLOB(t0.c0))) NOT BETWEEN (CAST(t0.c0 AS TEXT)) AND (((((NULL)AND(t0.c0)))OR(t0.c0))))) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE (((CAST(t0.c0 AS REAL)) ISNULL)) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT (((CAST(t0.c0 AS REAL)) ISNULL)))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE (((((CAST(t0.c0 AS REAL)) ISNULL)) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT v0.c0, v0.c1, t0.c0 FROM t0 LEFT OUTER JOIN v0 ON ((v0.c0 IN ()) IN ('')) GROUP BY v0.c0, v0.c1, t0.c0;
SELECT ALL v0.c0, v0.c1, t0.c0 FROM t0 LEFT OUTER JOIN v0 ON ((v0.c0 IN ()) IN ('')) GROUP BY v0.c0, v0.c1, t0.c0 HAVING GROUP_CONCAT((v0.c2 IN ())) UNION ALL SELECT ALL v0.c0, v0.c1, t0.c0 FROM t0 LEFT OUTER JOIN v0 ON ((v0.c0 IN ()) IN ('')) GROUP BY v0.c0, v0.c1, t0.c0 HAVING (NOT (GROUP_CONCAT((v0.c2 IN ())))) UNION ALL SELECT v0.c0, v0.c1, t0.c0 FROM t0 LEFT OUTER JOIN v0 ON ((v0.c0 IN ()) IN ('')) GROUP BY v0.c0, v0.c1, t0.c0 HAVING ((GROUP_CONCAT((v0.c2 IN ()))) ISNULL);
SELECT v0.c0, v0.c1, t0.c0 FROM t0 LEFT OUTER JOIN v0 ON ((v0.c0 IN ()) IN ('')) GROUP BY v0.c0, v0.c1, t0.c0;
SELECT ALL v0.c0, v0.c1, t0.c0 FROM t0 LEFT OUTER JOIN v0 ON ((v0.c0 IN ()) IN ('')) GROUP BY v0.c0, v0.c1, t0.c0 HAVING GROUP_CONCAT((v0.c2 IN ())) UNION ALL SELECT ALL v0.c0, v0.c1, t0.c0 FROM t0 LEFT OUTER JOIN v0 ON ((v0.c0 IN ()) IN ('')) GROUP BY v0.c0, v0.c1, t0.c0 HAVING (NOT (GROUP_CONCAT((v0.c2 IN ())))) UNION ALL SELECT v0.c0, v0.c1, t0.c0 FROM t0 LEFT OUTER JOIN v0 ON ((v0.c0 IN ()) IN ('')) GROUP BY v0.c0, v0.c1, t0.c0 HAVING ((GROUP_CONCAT((v0.c2 IN ()))) ISNULL);
SELECT v0.c0, v0.c1, t0.c0 FROM t0 LEFT OUTER JOIN v0 ON ((v0.c0 IN ()) IN ('')) GROUP BY v0.c0, v0.c1, t0.c0;
SELECT ALL * FROM t0, v0;
SELECT ALL * FROM t0, v0 WHERE ((('x')*((- (''))))) UNION ALL SELECT ALL * FROM t0, v0 WHERE ((NOT ((('x')*((- (''))))))) UNION ALL SELECT * FROM t0, v0 WHERE ((((('x')*((- (''))))) ISNULL));
SELECT ALL * FROM t0, v0;
SELECT DISTINCT v0.c0, v0.c1 FROM v0 NATURAL JOIN t0;
SELECT DISTINCT v0.c0, v0.c1 FROM v0 NATURAL JOIN t0 WHERE (((v0.c2)%(t0.c0)) COLLATE BINARY) UNION SELECT DISTINCT v0.c0, v0.c1 FROM v0 NATURAL JOIN t0 WHERE ((NOT (((v0.c2)%(t0.c0)) COLLATE BINARY))) UNION SELECT DISTINCT v0.c0, v0.c1 FROM v0 NATURAL JOIN t0 WHERE (((((v0.c2)%(t0.c0)) COLLATE BINARY) ISNULL));
SELECT DISTINCT v0.c0, v0.c1 FROM v0 NATURAL JOIN t0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE (CAST(CAST(0.4756538098844957 AS TEXT) AS INTEGER)) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT (CAST(CAST(0.4756538098844957 AS TEXT) AS INTEGER)))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE (((CAST(CAST(0.4756538098844957 AS TEXT) AS INTEGER)) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL v0.c2, v0.c0, v0.c1 FROM t0, v0 GROUP BY v0.c2, v0.c0, v0.c1;
SELECT v0.c2, v0.c0, v0.c1 FROM t0, v0 GROUP BY v0.c2, v0.c0, v0.c1 HAVING (~ (COUNT(*))) UNION ALL SELECT ALL v0.c2, v0.c0, v0.c1 FROM t0, v0 GROUP BY v0.c2, v0.c0, v0.c1 HAVING (NOT ((~ (COUNT(*))))) UNION ALL SELECT v0.c2, v0.c0, v0.c1 FROM t0, v0 GROUP BY v0.c2, v0.c0, v0.c1 HAVING (((~ (COUNT(*)))) ISNULL);
SELECT ALL v0.c2, v0.c0, v0.c1 FROM t0, v0 GROUP BY v0.c2, v0.c0, v0.c1;
SELECT v0.c2, v0.c0, v0.c1 FROM t0, v0 GROUP BY v0.c2, v0.c0, v0.c1 HAVING (~ (COUNT(*))) UNION ALL SELECT ALL v0.c2, v0.c0, v0.c1 FROM t0, v0 GROUP BY v0.c2, v0.c0, v0.c1 HAVING (NOT ((~ (COUNT(*))))) UNION ALL SELECT v0.c2, v0.c0, v0.c1 FROM t0, v0 GROUP BY v0.c2, v0.c0, v0.c1 HAVING (((~ (COUNT(*)))) ISNULL);
SELECT ALL v0.c2, v0.c0, v0.c1 FROM t0, v0 GROUP BY v0.c2, v0.c0, v0.c1;
SELECT ALL v0.c0, v0.c2, t0.c0 FROM v0, t0;
SELECT v0.c0, v0.c2, t0.c0 FROM v0, t0 WHERE (((((v0.c2) NOT BETWEEN (v0.c2) AND (v0.c2))) NOT BETWEEN ('T8~M(㥊') AND (CAST(v0.c1 AS REAL)))) UNION ALL SELECT v0.c0, v0.c2, t0.c0 FROM v0, t0 WHERE ((NOT (((((v0.c2) NOT BETWEEN (v0.c2) AND (v0.c2))) NOT BETWEEN ('T8~M(㥊') AND (CAST(v0.c1 AS REAL)))))) UNION ALL SELECT v0.c0, v0.c2, t0.c0 FROM v0, t0 WHERE (((((((v0.c2) NOT BETWEEN (v0.c2) AND (v0.c2))) NOT BETWEEN ('T8~M(㥊') AND (CAST(v0.c1 AS REAL)))) ISNULL));
SELECT ALL v0.c0, v0.c2, t0.c0 FROM v0, t0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (((((v0.c2) NOT BETWEEN (v0.c2) AND (v0.c2)))IS NOT(v0.c0))) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (((((v0.c2) NOT BETWEEN (v0.c2) AND (v0.c2)))IS NOT(v0.c0))))) UNION SELECT DISTINCT * FROM v0 WHERE (((((((v0.c2) NOT BETWEEN (v0.c2) AND (v0.c2)))IS NOT(v0.c0))) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT ALL v0.c1, v0.c2, v0.c0 FROM v0 GROUP BY v0.c1, v0.c2, v0.c0;
SELECT v0.c1, v0.c2, v0.c0 FROM v0 WHERE (((((((NULL)OR(v0.c0)))AND(v0.c2)))GLOB(((v0.c2) BETWEEN (v0.c2) AND (v0.c2))))) GROUP BY v0.c1, v0.c2, v0.c0 UNION SELECT ALL v0.c1, v0.c2, v0.c0 FROM v0 WHERE ((NOT (((((((NULL)OR(v0.c0)))AND(v0.c2)))GLOB(((v0.c2) BETWEEN (v0.c2) AND (v0.c2))))))) GROUP BY v0.c1, v0.c2, v0.c0 UNION SELECT v0.c1, v0.c2, v0.c0 FROM v0 WHERE (((((((((NULL)OR(v0.c0)))AND(v0.c2)))GLOB(((v0.c2) BETWEEN (v0.c2) AND (v0.c2))))) ISNULL)) GROUP BY v0.c1, v0.c2, v0.c0;
SELECT ALL v0.c1, v0.c2, v0.c0 FROM v0 GROUP BY v0.c1, v0.c2, v0.c0;
SELECT ALL v0.c1, v0.c2, v0.c0, t0.c0 FROM t0 CROSS JOIN v0 ON ((((((v0.c2)LIKE(-1850920776)))OR(((t0.c0) NOT NULL))))AND(CAST(t0.c0 AS BLOB))) GROUP BY v0.c1, v0.c2, v0.c0, t0.c0;
SELECT ALL v0.c1, v0.c2, v0.c0, t0.c0 FROM t0 CROSS JOIN v0 ON ((((((v0.c2)LIKE(-1850920776)))OR(((t0.c0) NOT NULL))))AND(CAST(t0.c0 AS BLOB))) GROUP BY v0.c1, v0.c2, v0.c0, t0.c0 HAVING MAX(((GROUP_CONCAT(t0.c0))>>(t0.c0))) UNION ALL SELECT v0.c1, v0.c2, v0.c0, t0.c0 FROM t0 CROSS JOIN v0 ON ((((((v0.c2)LIKE(-1850920776)))OR(((t0.c0) NOT NULL))))AND(CAST(t0.c0 AS BLOB))) GROUP BY v0.c1, v0.c2, v0.c0, t0.c0 HAVING (NOT (MAX(((GROUP_CONCAT(t0.c0))>>(t0.c0))))) UNION ALL SELECT v0.c1, v0.c2, v0.c0, t0.c0 FROM t0 CROSS JOIN v0 ON ((((((v0.c2)LIKE(-1850920776)))OR(((t0.c0) NOT NULL))))AND(CAST(t0.c0 AS BLOB))) GROUP BY v0.c1, v0.c2, v0.c0, t0.c0 HAVING ((MAX(((GROUP_CONCAT(t0.c0))>>(t0.c0)))) ISNULL);
SELECT * FROM t0 LEFT OUTER JOIN v0 ON 3.30298126E8;
SELECT ALL * FROM t0 LEFT OUTER JOIN v0 ON 3.30298126E8 WHERE (CAST(highlight(v0.c0, 0.050053552500597176, '', v0.c1) AS TEXT)) UNION ALL SELECT * FROM t0 LEFT OUTER JOIN v0 ON 3.30298126E8 WHERE ((NOT (CAST(highlight(v0.c0, 0.050053552500597176, '', v0.c1) AS TEXT)))) UNION ALL SELECT * FROM t0 LEFT OUTER JOIN v0 ON 3.30298126E8 WHERE (((CAST(highlight(v0.c0, 0.050053552500597176, '', v0.c1) AS TEXT)) ISNULL));
SELECT DISTINCT t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0 WHERE (t0.c0) UNION SELECT DISTINCT t0.c0 FROM t0 NOT INDEXED WHERE ((NOT (t0.c0))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE (((t0.c0) ISNULL));
SELECT DISTINCT t0.c0 FROM t0;
SELECT v0.c0, v0.c2 FROM v0 GROUP BY v0.c0, v0.c2;
SELECT v0.c0, v0.c2 FROM v0 WHERE (((((v0.c0)) NOT BETWEEN ((v0.c2)) AND ((v0.c1))) IN (((v0.c0)+(v0.c1)), CAST(v0.c2 AS REAL)))) GROUP BY v0.c0, v0.c2 UNION SELECT v0.c0, v0.c2 FROM v0 WHERE ((NOT (((((v0.c0)) NOT BETWEEN ((v0.c2)) AND ((v0.c1))) IN (((v0.c0)+(v0.c1)), CAST(v0.c2 AS REAL)))))) GROUP BY v0.c0, v0.c2 UNION SELECT v0.c0, v0.c2 FROM v0 WHERE (((((((v0.c0)) NOT BETWEEN ((v0.c2)) AND ((v0.c1))) IN (((v0.c0)+(v0.c1)), CAST(v0.c2 AS REAL)))) ISNULL)) GROUP BY v0.c0, v0.c2;
SELECT v0.c0, v0.c2 FROM v0 GROUP BY v0.c0, v0.c2;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING COUNT(MIN(t0.c0)) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (COUNT(MIN(t0.c0)))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((COUNT(MIN(t0.c0))) ISNULL);
SELECT * FROM v0;
SELECT * FROM v0 WHERE (0.16712866081725064) UNION ALL SELECT ALL * FROM v0 WHERE ((NOT (0.16712866081725064))) UNION ALL SELECT ALL * FROM v0 WHERE (((0.16712866081725064) ISNULL));
SELECT * FROM v0;
SELECT DISTINCT * FROM t0, v0;
SELECT DISTINCT * FROM t0, v0 WHERE ((((t0.c0 IN ())) IS TRUE)) UNION SELECT DISTINCT * FROM t0, v0 WHERE ((NOT ((((t0.c0 IN ())) IS TRUE)))) UNION SELECT DISTINCT * FROM t0, v0 WHERE ((((((t0.c0 IN ())) IS TRUE)) ISNULL));
SELECT DISTINCT * FROM t0, v0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE (((((x'0b91') NOTNULL))<<(((t0.c0) IS TRUE)))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT (((((x'0b91') NOTNULL))<<(((t0.c0) IS TRUE)))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE (((((((x'0b91') NOTNULL))<<(((t0.c0) IS TRUE)))) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL v0.c2 FROM v0, t0 GROUP BY v0.c2;
SELECT ALL v0.c2 FROM v0, t0 GROUP BY v0.c2 HAVING HEX(((v0.c0)%(v0.c0))) UNION ALL SELECT v0.c2 FROM v0, t0 GROUP BY v0.c2 HAVING (NOT (HEX(((v0.c0)%(v0.c0))))) UNION ALL SELECT ALL v0.c2 FROM v0, t0 GROUP BY v0.c2 HAVING ((HEX(((v0.c0)%(v0.c0)))) ISNULL);
SELECT ALL v0.c2 FROM v0, t0 GROUP BY v0.c2;
SELECT ALL v0.c2 FROM v0, t0 GROUP BY v0.c2 HAVING HEX(((v0.c0)%(v0.c0))) UNION ALL SELECT v0.c2 FROM v0, t0 GROUP BY v0.c2 HAVING (NOT (HEX(((v0.c0)%(v0.c0))))) UNION ALL SELECT ALL v0.c2 FROM v0, t0 GROUP BY v0.c2 HAVING ((HEX(((v0.c0)%(v0.c0)))) ISNULL);
SELECT ALL v0.c2 FROM v0, t0 GROUP BY v0.c2;
SELECT ALL * FROM v0;
SELECT * FROM v0 WHERE ((((((v0.c0) IS TRUE)))>=((v0.c1 COLLATE NOCASE)))) UNION ALL SELECT ALL * FROM v0 WHERE ((NOT ((((((v0.c0) IS TRUE)))>=((v0.c1 COLLATE NOCASE)))))) UNION ALL SELECT * FROM v0 WHERE ((((((((v0.c0) IS TRUE)))>=((v0.c1 COLLATE NOCASE)))) ISNULL));
SELECT ALL * FROM v0;
SELECT DISTINCT t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0 WHERE (t0.c0) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((NOT (t0.c0))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE (((t0.c0) ISNULL));
SELECT DISTINCT t0.c0 FROM t0;
SELECT v0.c1, v0.c2, v0.c0 FROM v0 GROUP BY v0.c1, v0.c2, v0.c0;
SELECT v0.c1, v0.c2, v0.c0 FROM v0 WHERE (((((TRIM(0.9603116102936199))AND(((v0.c0)||(v0.c2)))))OR((- (v0.c2))))) GROUP BY v0.c1, v0.c2, v0.c0 UNION SELECT v0.c1, v0.c2, v0.c0 FROM v0 WHERE ((NOT (((((TRIM(0.9603116102936199))AND(((v0.c0)||(v0.c2)))))OR((- (v0.c2))))))) GROUP BY v0.c1, v0.c2, v0.c0 UNION SELECT ALL v0.c1, v0.c2, v0.c0 FROM v0 WHERE (((((((TRIM(0.9603116102936199))AND(((v0.c0)||(v0.c2)))))OR((- (v0.c2))))) ISNULL)) GROUP BY v0.c1, v0.c2, v0.c0;
SELECT v0.c1, v0.c2, v0.c0 FROM v0 GROUP BY v0.c1, v0.c2, v0.c0;
SELECT ALL t0.c0 FROM t0, v0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0, v0 GROUP BY t0.c0 HAVING TOTAL(CAST(v0.c2 AS REAL)) UNION ALL SELECT ALL t0.c0 FROM t0, v0 GROUP BY t0.c0 HAVING (NOT (TOTAL(CAST(v0.c2 AS REAL)))) UNION ALL SELECT t0.c0 FROM t0, v0 GROUP BY t0.c0 HAVING ((TOTAL(CAST(v0.c2 AS REAL))) ISNULL);
SELECT ALL t0.c0 FROM t0, v0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0, v0 GROUP BY t0.c0 HAVING TOTAL(CAST(v0.c2 AS REAL)) UNION ALL SELECT ALL t0.c0 FROM t0, v0 GROUP BY t0.c0 HAVING (NOT (TOTAL(CAST(v0.c2 AS REAL)))) UNION ALL SELECT t0.c0 FROM t0, v0 GROUP BY t0.c0 HAVING ((TOTAL(CAST(v0.c2 AS REAL))) ISNULL);
SELECT ALL t0.c0 FROM t0, v0 GROUP BY t0.c0;
SELECT ALL * FROM v0;
SELECT * FROM v0 WHERE ((((((((((v0.c1 IN (v0.c0, v0.c1)))OR(((v0.c1) BETWEEN (v0.c1) AND (v0.c1)))))AND(HEX(DISTINCT v0.c2))))OR(LOWER(DISTINCT v0.c0))))OR((v0.c0 IN (v0.c2))))) UNION ALL SELECT ALL * FROM v0 WHERE ((NOT ((((((((((v0.c1 IN (v0.c0, v0.c1)))OR(((v0.c1) BETWEEN (v0.c1) AND (v0.c1)))))AND(HEX(DISTINCT v0.c2))))OR(LOWER(DISTINCT v0.c0))))OR((v0.c0 IN (v0.c2))))))) UNION ALL SELECT * FROM v0 WHERE ((((((((((((v0.c1 IN (v0.c0, v0.c1)))OR(((v0.c1) BETWEEN (v0.c1) AND (v0.c1)))))AND(HEX(DISTINCT v0.c2))))OR(LOWER(DISTINCT v0.c0))))OR((v0.c0 IN (v0.c2))))) ISNULL));
SELECT ALL * FROM v0;
SELECT DISTINCT * FROM v0, t0;
SELECT DISTINCT * FROM v0, t0 WHERE (((NOT (v0.c1)) IN (((v0.c0)==(v0.c2))))) UNION SELECT DISTINCT * FROM v0, t0 WHERE ((NOT (((NOT (v0.c1)) IN (((v0.c0)==(v0.c2))))))) UNION SELECT DISTINCT * FROM v0, t0 WHERE (((((NOT (v0.c1)) IN (((v0.c0)=(v0.c2))))) ISNULL));
SELECT DISTINCT * FROM v0, t0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 WHERE ((t0.c0 IN (x'')) COLLATE BINARY) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT ((t0.c0 IN (x'')) COLLATE BINARY))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((((t0.c0 IN (x'')) COLLATE BINARY) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0, v0.c1, v0.c0 FROM t0, v0 GROUP BY t0.c0, v0.c1, v0.c0;
SELECT t0.c0, v0.c1, v0.c0 FROM t0, v0 GROUP BY t0.c0, v0.c1, v0.c0 HAVING COUNT(*) UNION ALL SELECT t0.c0, v0.c1, v0.c0 FROM t0, v0 GROUP BY t0.c0, v0.c1, v0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL t0.c0, v0.c1, v0.c0 FROM t0, v0 GROUP BY t0.c0, v0.c1, v0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL t0.c0, v0.c1, v0.c0 FROM t0, v0 GROUP BY t0.c0, v0.c1, v0.c0;
SELECT t0.c0, v0.c1, v0.c0 FROM t0, v0 GROUP BY t0.c0, v0.c1, v0.c0 HAVING COUNT(*) UNION ALL SELECT t0.c0, v0.c1, v0.c0 FROM t0, v0 GROUP BY t0.c0, v0.c1, v0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL t0.c0, v0.c1, v0.c0 FROM t0, v0 GROUP BY t0.c0, v0.c1, v0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL t0.c0, v0.c1, v0.c0 FROM t0, v0 GROUP BY t0.c0, v0.c1, v0.c0;
SELECT v0.c0, v0.c1, v0.c2, t0.c0 FROM v0, t0;
SELECT v0.c0, v0.c1, v0.c2, t0.c0 FROM v0, t0 WHERE (((v0.c2) BETWEEN (json_patch(v0.c2, t0.c0)) AND (((t0.c0) BETWEEN (0.8433388452228684) AND (v0.c1))))) UNION ALL SELECT v0.c0, v0.c1, v0.c2, t0.c0 FROM v0, t0 WHERE ((NOT (((v0.c2) BETWEEN (json_patch(v0.c2, t0.c0)) AND (((t0.c0) BETWEEN (0.8433388452228684) AND (v0.c1))))))) UNION ALL SELECT ALL v0.c0, v0.c1, v0.c2, t0.c0 FROM v0, t0 WHERE (((((v0.c2) BETWEEN (json_patch(v0.c2, t0.c0)) AND (((t0.c0) BETWEEN (0.8433388452228684) AND (v0.c1))))) ISNULL));
SELECT DISTINCT v0.c1 FROM v0 NOT INDEXED;
SELECT DISTINCT v0.c1 FROM v0 WHERE (CASE v0.c0  WHEN v0.c1 THEN v0.c2 WHEN v0.c0 THEN v0.c0 WHEN v0.c1 THEN v0.c2 END COLLATE RTRIM) UNION SELECT DISTINCT v0.c1 FROM v0 WHERE ((NOT (CASE v0.c0  WHEN v0.c1 THEN v0.c2 WHEN v0.c0 THEN v0.c0 WHEN v0.c1 THEN v0.c2 END COLLATE RTRIM))) UNION SELECT DISTINCT v0.c1 FROM v0 WHERE (((CASE v0.c0  WHEN v0.c1 THEN v0.c2 WHEN v0.c0 THEN v0.c0 WHEN v0.c1 THEN v0.c2 END COLLATE RTRIM) ISNULL));
SELECT DISTINCT v0.c1 FROM v0 NOT INDEXED;
SELECT v0.c1 FROM v0, t0 GROUP BY v0.c1;
SELECT v0.c1 FROM v0, t0 WHERE (CAST(IFNULL(v0.c0, v0.c2) AS BLOB)) GROUP BY v0.c1 UNION SELECT ALL v0.c1 FROM v0, t0 WHERE ((NOT (CAST(IFNULL(v0.c0, v0.c2) AS BLOB)))) GROUP BY v0.c1 UNION SELECT v0.c1 FROM v0, t0 WHERE (((CAST(IFNULL(v0.c0, v0.c2) AS BLOB)) ISNULL)) GROUP BY v0.c1;
SELECT v0.c1 FROM v0, t0 GROUP BY v0.c1;
SELECT ALL v0.c2 FROM v0 GROUP BY v0.c2;
SELECT v0.c2 FROM v0 GROUP BY v0.c2 HAVING AVG(TOTAL(SUM(v0.c2)) COLLATE RTRIM) UNION ALL SELECT ALL v0.c2 FROM v0 GROUP BY v0.c2 HAVING (NOT (AVG(TOTAL(SUM(v0.c2)) COLLATE RTRIM))) UNION ALL SELECT ALL v0.c2 FROM v0 GROUP BY v0.c2 HAVING ((AVG(TOTAL(SUM(v0.c2)) COLLATE RTRIM)) ISNULL);
SELECT v0.c1, v0.c2 FROM t0, v0;
SELECT v0.c1, v0.c2 FROM t0, v0 WHERE ((+ (((v0.c2)AND(v0.c0))))) UNION ALL SELECT v0.c1, v0.c2 FROM t0, v0 WHERE ((NOT ((+ (((v0.c2)AND(v0.c0))))))) UNION ALL SELECT ALL v0.c1, v0.c2 FROM t0, v0 WHERE ((((+ (((v0.c2)AND(v0.c0))))) ISNULL));
SELECT v0.c1, v0.c2 FROM t0, v0;
SELECT DISTINCT t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0 WHERE (CAST(t0.c0 COLLATE BINARY AS REAL)) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((NOT (CAST(t0.c0 COLLATE BINARY AS REAL)))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE (((CAST(t0.c0 COLLATE BINARY AS REAL)) ISNULL));
SELECT DISTINCT t0.c0 FROM t0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE (((CAST(t0.c0 AS NUMERIC)) ISNULL)) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT (((CAST(t0.c0 AS NUMERIC)) ISNULL)))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE (((((CAST(t0.c0 AS NUMERIC)) ISNULL)) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING SUM(AVG(AVG(t0.c0))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (SUM(AVG(AVG(t0.c0))))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((SUM(AVG(AVG(t0.c0)))) ISNULL);
SELECT * FROM v0;
SELECT ALL * FROM v0 WHERE (COALESCE('0.06155328382379477', (NOT (v0.c0)))) UNION ALL SELECT ALL * FROM v0 WHERE ((NOT (COALESCE('0.06155328382379477', (NOT (v0.c0)))))) UNION ALL SELECT ALL * FROM v0 WHERE (((COALESCE('0.06155328382379477', (NOT (v0.c0)))) ISNULL));
SELECT * FROM v0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (CAST((~ (t0.c0)) AS INTEGER)) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (CAST((~ (t0.c0)) AS INTEGER)))) UNION SELECT DISTINCT * FROM t0 WHERE (((CAST((~ (t0.c0)) AS INTEGER)) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT t0.c0, v0.c1 FROM t0 RIGHT OUTER JOIN v0 ON CASE WHEN v0.c1 THEN v0.c0 WHEN 0.9584844028182531 THEN v0.c1 WHEN t0.c0 THEN v0.c2 ELSE t0.c0 END COLLATE NOCASE GROUP BY t0.c0, v0.c1;
SELECT t0.c0, v0.c1 FROM t0 RIGHT OUTER JOIN v0 ON CASE WHEN v0.c1 THEN v0.c0 WHEN 0.9584844028182531 THEN v0.c1 WHEN t0.c0 THEN v0.c2 ELSE t0.c0 END COLLATE NOCASE WHERE (((t0.c0)-(v0.c1)) COLLATE BINARY) GROUP BY t0.c0, v0.c1 UNION SELECT t0.c0, v0.c1 FROM t0 NOT INDEXED RIGHT OUTER JOIN v0 ON CASE WHEN v0.c1 THEN v0.c0 WHEN 0.9584844028182531 THEN v0.c1 WHEN t0.c0 THEN v0.c2 ELSE t0.c0 END COLLATE NOCASE WHERE ((NOT (((t0.c0)-(v0.c1)) COLLATE BINARY))) GROUP BY t0.c0, v0.c1 UNION SELECT t0.c0, v0.c1 FROM t0 RIGHT OUTER JOIN v0 ON CASE WHEN v0.c1 THEN v0.c0 WHEN 0.9584844028182531 THEN v0.c1 WHEN t0.c0 THEN v0.c2 ELSE t0.c0 END COLLATE NOCASE WHERE (((((t0.c0)-(v0.c1)) COLLATE BINARY) ISNULL)) GROUP BY t0.c0, v0.c1;
SELECT t0.c0, v0.c1 FROM t0 RIGHT OUTER JOIN v0 ON CASE WHEN v0.c1 THEN v0.c0 WHEN 0.9584844028182531 THEN v0.c1 WHEN t0.c0 THEN v0.c2 ELSE t0.c0 END COLLATE NOCASE GROUP BY t0.c0, v0.c1;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((((COUNT(t0.c0))*(t0.c0))) NOT BETWEEN (((SUM(SUM(GROUP_CONCAT(GROUP_CONCAT(GROUP_CONCAT(GROUP_CONCAT(TOTAL(t0.c0))))))))-(AVG(COUNT(t0.c0))))) AND (x'')) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (((((COUNT(t0.c0))*(t0.c0))) NOT BETWEEN (((SUM(SUM(GROUP_CONCAT(GROUP_CONCAT(GROUP_CONCAT(GROUP_CONCAT(TOTAL(t0.c0))))))))-(AVG(COUNT(t0.c0))))) AND (x'')))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((((((COUNT(t0.c0))*(t0.c0))) NOT BETWEEN (((SUM(SUM(GROUP_CONCAT(GROUP_CONCAT(GROUP_CONCAT(GROUP_CONCAT(TOTAL(t0.c0))))))))-(AVG(COUNT(t0.c0))))) AND (x''))) ISNULL);
SELECT ALL t0.c0, v0.c2, v0.c1, v0.c0 FROM t0, v0;
SELECT t0.c0, v0.c2, v0.c1, v0.c0 FROM t0, v0 WHERE (t0.c0) UNION ALL SELECT t0.c0, v0.c2, v0.c1, v0.c0 FROM t0, v0 WHERE ((NOT (t0.c0))) UNION ALL SELECT ALL t0.c0, v0.c2, v0.c1, v0.c0 FROM t0, v0 WHERE (((t0.c0) ISNULL));
SELECT ALL t0.c0, v0.c2, v0.c1, v0.c0 FROM t0, v0;
SELECT DISTINCT t0.c0, v0.c2, v0.c0, v0.c1 FROM v0, t0;
SELECT DISTINCT t0.c0, v0.c2, v0.c0, v0.c1 FROM v0, t0 WHERE (NULL) UNION SELECT DISTINCT t0.c0, v0.c2, v0.c0, v0.c1 FROM v0, t0 WHERE ((NOT (NULL))) UNION SELECT DISTINCT t0.c0, v0.c2, v0.c0, v0.c1 FROM v0, t0 WHERE (((NULL) ISNULL));
SELECT DISTINCT t0.c0, v0.c2, v0.c0, v0.c1 FROM v0, t0;
SELECT v0.c2, v0.c1, v0.c0 FROM v0, t0 GROUP BY v0.c2, v0.c1, v0.c0;
SELECT ALL v0.c2, v0.c1, v0.c0 FROM v0, t0 WHERE ((((v0.c1 IN ())) IS TRUE)) GROUP BY v0.c2, v0.c1, v0.c0 UNION SELECT v0.c2, v0.c1, v0.c0 FROM v0, t0 WHERE ((NOT ((((v0.c1 IN ())) IS TRUE)))) GROUP BY v0.c2, v0.c1, v0.c0 UNION SELECT ALL v0.c2, v0.c1, v0.c0 FROM v0, t0 WHERE ((((((v0.c1 IN ())) IS TRUE)) ISNULL)) GROUP BY v0.c2, v0.c1, v0.c0;
SELECT v0.c2, v0.c1, v0.c0 FROM v0, t0 GROUP BY v0.c2, v0.c1, v0.c0;
SELECT t0.c0, v0.c1 FROM t0 INNER JOIN v0 ON ((v0.c1 IN ()) IN ()) GROUP BY t0.c0, v0.c1;
SELECT ALL t0.c0, v0.c1 FROM t0 INNER JOIN v0 ON ((v0.c1 IN ()) IN ()) GROUP BY t0.c0, v0.c1 HAVING COUNT(CASE v0.c1  WHEN GROUP_CONCAT(MIN(TOTAL(v0.c1))) THEN v0.c2 WHEN COUNT(*) THEN v0.c1 WHEN v0.c0 THEN v0.c2 ELSE COUNT(AVG(v0.c1)) END) UNION ALL SELECT t0.c0, v0.c1 FROM t0 INNER JOIN v0 ON ((v0.c1 IN ()) IN ()) GROUP BY t0.c0, v0.c1 HAVING (NOT (COUNT(CASE v0.c1  WHEN GROUP_CONCAT(MIN(TOTAL(v0.c1))) THEN v0.c2 WHEN COUNT(*) THEN v0.c1 WHEN v0.c0 THEN v0.c2 ELSE COUNT(AVG(v0.c1)) END))) UNION ALL SELECT t0.c0, v0.c1 FROM t0 INNER JOIN v0 ON ((v0.c1 IN ()) IN ()) GROUP BY t0.c0, v0.c1 HAVING ((COUNT(CASE v0.c1  WHEN GROUP_CONCAT(MIN(TOTAL(v0.c1))) THEN v0.c2 WHEN COUNT(*) THEN v0.c1 WHEN v0.c0 THEN v0.c2 ELSE COUNT(AVG(v0.c1)) END)) ISNULL);
SELECT t0.c0 FROM t0;
SELECT ALL t0.c0 FROM t0 WHERE ((((NOT (t0.c0)))|((t0.c0 IN ())))) UNION ALL SELECT ALL t0.c0 FROM t0 WHERE ((NOT ((((NOT (t0.c0)))|((t0.c0 IN ())))))) UNION ALL SELECT ALL t0.c0 FROM t0 WHERE ((((((NOT (t0.c0)))|((t0.c0 IN ())))) ISNULL));
SELECT t0.c0 FROM t0;
SELECT DISTINCT v0.c1 FROM v0, t0;
SELECT DISTINCT v0.c1 FROM v0, t0 WHERE (((((v0.c1)LIKE(v0.c1)))!=((+ (t0.c0))))) UNION SELECT DISTINCT v0.c1 FROM v0, t0 WHERE ((NOT (((((v0.c1)LIKE(v0.c1)))!=((+ (t0.c0))))))) UNION SELECT DISTINCT v0.c1 FROM v0, t0 WHERE (((((((v0.c1)LIKE(v0.c1)))!=((+ (t0.c0))))) ISNULL));
SELECT DISTINCT v0.c1 FROM v0, t0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE ((- (((v0.c0) NOT BETWEEN (v0.c2) AND (v0.c0))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT ((- (((v0.c0) NOT BETWEEN (v0.c2) AND (v0.c0))))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((((- (((v0.c0) NOT BETWEEN (v0.c2) AND (v0.c0))))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING COUNT(*) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING COUNT(*) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT v0.c0 FROM t0 NATURAL JOIN v0;
SELECT ALL v0.c0 FROM t0 NATURAL JOIN v0 WHERE (((((((((((t0.c0)<(v0.c2)))OR((NOT (v0.c1)))))OR(v0.c0 COLLATE NOCASE)))OR(((0.9075673551519272)>>(x'')))))AND(t0.c0))) UNION ALL SELECT v0.c0 FROM t0 NATURAL JOIN v0 WHERE ((NOT (((((((((((t0.c0)<(v0.c2)))OR((NOT (v0.c1)))))OR(v0.c0 COLLATE NOCASE)))OR(((0.9075673551519272)>>(x'')))))AND(t0.c0))))) UNION ALL SELECT v0.c0 FROM t0 NATURAL JOIN v0 WHERE (((((((((((((t0.c0)<(v0.c2)))OR((NOT (v0.c1)))))OR(v0.c0 COLLATE NOCASE)))OR(((0.9075673551519272)>>(x'')))))AND(t0.c0))) ISNULL));
SELECT v0.c0 FROM t0 NATURAL JOIN v0;
SELECT DISTINCT * FROM t0, v0;
SELECT DISTINCT * FROM t0, v0 WHERE (CASE (v0.c1 IN ())  WHEN ((v0.c2)<=(0.6197302816392677)) THEN ((((v0.c0)AND(v0.c1)))AND(v0.c1)) END) UNION SELECT DISTINCT * FROM t0, v0 WHERE ((NOT (CASE (v0.c1 IN ())  WHEN ((v0.c2)<=(0.6197302816392677)) THEN ((((v0.c0)AND(v0.c1)))AND(v0.c1)) END))) UNION SELECT DISTINCT * FROM t0, v0 WHERE (((CASE (v0.c1 IN ())  WHEN ((v0.c2)<=(0.6197302816392677)) THEN ((((v0.c0)AND(v0.c1)))AND(v0.c1)) END) ISNULL));
SELECT DISTINCT * FROM t0, v0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 WHERE (((CASE 0.4799230792057053  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END) NOT BETWEEN (NULL) AND ((((t0.c0))>((t0.c0)))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT (((CASE 0.4799230792057053  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END) NOT BETWEEN (NULL) AND ((((t0.c0))>((t0.c0)))))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE (((((CASE 0.4799230792057053  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END) NOT BETWEEN (NULL) AND ((((t0.c0))>((t0.c0)))))) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0, v0.c1, v0.c2, v0.c0 FROM v0, t0 GROUP BY t0.c0, v0.c1, v0.c2, v0.c0;
SELECT t0.c0, v0.c1, v0.c2, v0.c0 FROM v0, t0 GROUP BY t0.c0, v0.c1, v0.c2, v0.c0 HAVING MAX(COUNT(*)) UNION ALL SELECT ALL t0.c0, v0.c1, v0.c2, v0.c0 FROM v0, t0 GROUP BY t0.c0, v0.c1, v0.c2, v0.c0 HAVING (NOT (MAX(COUNT(*)))) UNION ALL SELECT ALL t0.c0, v0.c1, v0.c2, v0.c0 FROM v0, t0 GROUP BY t0.c0, v0.c1, v0.c2, v0.c0 HAVING ((MAX(COUNT(*))) ISNULL);
SELECT t0.c0 FROM t0 NOT INDEXED;
SELECT ALL t0.c0 FROM t0 WHERE (((x'')!=(((t0.c0) BETWEEN (t0.c0) AND (t0.c0))))) UNION ALL SELECT ALL t0.c0 FROM t0 WHERE ((NOT (((x'')!=(((t0.c0) BETWEEN (t0.c0) AND (t0.c0))))))) UNION ALL SELECT t0.c0 FROM t0 WHERE (((((x'')!=(((t0.c0) BETWEEN (t0.c0) AND (t0.c0))))) ISNULL));
SELECT t0.c0 FROM t0 NOT INDEXED;
SELECT DISTINCT t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0 WHERE ((((NULL)) BETWEEN ((t0.c0 COLLATE BINARY)) AND ((((t0.c0)>=(t0.c0)))))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((NOT ((((NULL)) BETWEEN ((t0.c0 COLLATE BINARY)) AND ((((t0.c0)>=(t0.c0)))))))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((((((NULL)) BETWEEN ((t0.c0 COLLATE BINARY)) AND ((((t0.c0)>=(t0.c0)))))) ISNULL));
SELECT DISTINCT t0.c0 FROM t0;
SELECT v0.c1, v0.c2, v0.c0 FROM v0, t0 GROUP BY v0.c1, v0.c2, v0.c0;
SELECT v0.c1, v0.c2, v0.c0 FROM v0, t0 WHERE ((+ (t0.c0))) GROUP BY v0.c1, v0.c2, v0.c0 UNION SELECT v0.c1, v0.c2, v0.c0 FROM v0, t0 WHERE ((NOT ((+ (t0.c0))))) GROUP BY v0.c1, v0.c2, v0.c0 UNION SELECT v0.c1, v0.c2, v0.c0 FROM v0, t0 NOT INDEXED WHERE ((((+ (t0.c0))) ISNULL)) GROUP BY v0.c1, v0.c2, v0.c0;
SELECT v0.c1, v0.c2, v0.c0 FROM v0, t0 GROUP BY v0.c1, v0.c2, v0.c0;
SELECT ALL v0.c1, v0.c0 FROM v0 GROUP BY v0.c1, v0.c0;
SELECT v0.c1, v0.c0 FROM v0 GROUP BY v0.c1, v0.c0 HAVING SUM(MIN(TOTAL(v0.c1))) UNION ALL SELECT ALL v0.c1, v0.c0 FROM v0 GROUP BY v0.c1, v0.c0 HAVING (NOT (SUM(MIN(TOTAL(v0.c1))))) UNION ALL SELECT v0.c1, v0.c0 FROM v0 GROUP BY v0.c1, v0.c0 HAVING ((SUM(MIN(TOTAL(v0.c1)))) ISNULL);
SELECT * FROM t0 RIGHT OUTER JOIN v0 ON t0.c0;
SELECT ALL * FROM t0 RIGHT OUTER JOIN v0 ON t0.c0 WHERE (v0.c1) UNION ALL SELECT * FROM t0 RIGHT OUTER JOIN v0 ON t0.c0 WHERE ((NOT (v0.c1))) UNION ALL SELECT * FROM t0 RIGHT OUTER JOIN v0 ON t0.c0 WHERE (((v0.c1) ISNULL));
SELECT * FROM t0 RIGHT OUTER JOIN v0 ON t0.c0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (x'e64b') UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (x'e64b'))) UNION SELECT DISTINCT * FROM t0 WHERE (((x'e64b') ISNULL));
SELECT DISTINCT * FROM t0;
SELECT ALL v0.c1, v0.c2, v0.c0, t0.c0 FROM t0, v0 GROUP BY v0.c1, v0.c2, v0.c0, t0.c0;
SELECT v0.c1, v0.c2, v0.c0, t0.c0 FROM t0, v0 WHERE (-1809636452) GROUP BY v0.c1, v0.c2, v0.c0, t0.c0 UNION SELECT v0.c1, v0.c2, v0.c0, t0.c0 FROM t0, v0 WHERE ((NOT (-1809636452))) GROUP BY v0.c1, v0.c2, v0.c0, t0.c0 UNION SELECT ALL v0.c1, v0.c2, v0.c0, t0.c0 FROM t0, v0 WHERE (((-1809636452) ISNULL)) GROUP BY v0.c1, v0.c2, v0.c0, t0.c0;
SELECT ALL v0.c1, v0.c2, v0.c0, t0.c0 FROM t0, v0 GROUP BY v0.c1, v0.c2, v0.c0, t0.c0;
SELECT v0.c2 FROM t0, v0 GROUP BY v0.c2;
SELECT ALL v0.c2 FROM t0, v0 GROUP BY v0.c2 HAVING ((((v0.c0) ISNULL))>(t0.c0 COLLATE RTRIM)) UNION ALL SELECT v0.c2 FROM t0, v0 GROUP BY v0.c2 HAVING (NOT (((((v0.c0) ISNULL))>(t0.c0 COLLATE RTRIM)))) UNION ALL SELECT v0.c2 FROM t0, v0 GROUP BY v0.c2 HAVING ((((((v0.c0) ISNULL))>(t0.c0 COLLATE RTRIM))) ISNULL);
SELECT v0.c2 FROM t0, v0 GROUP BY v0.c2;
SELECT ALL v0.c2 FROM t0, v0 GROUP BY v0.c2 HAVING ((((v0.c0) ISNULL))>(t0.c0 COLLATE RTRIM)) UNION ALL SELECT v0.c2 FROM t0, v0 GROUP BY v0.c2 HAVING (NOT (((((v0.c0) ISNULL))>(t0.c0 COLLATE RTRIM)))) UNION ALL SELECT v0.c2 FROM t0, v0 GROUP BY v0.c2 HAVING ((((((v0.c0) ISNULL))>(t0.c0 COLLATE RTRIM))) ISNULL);
SELECT v0.c2 FROM t0, v0 GROUP BY v0.c2;
SELECT ALL v0.c0 FROM t0 LEFT OUTER JOIN v0 ON ((CASE t0.c0  WHEN t0.c0 THEN v0.c2 ELSE v0.c2 END) NOT BETWEEN (v0.c1) AND (LIKELY(DISTINCT v0.c0)));
SELECT v0.c0 FROM t0 LEFT OUTER JOIN v0 ON ((CASE t0.c0  WHEN t0.c0 THEN v0.c2 ELSE v0.c2 END) NOT BETWEEN (v0.c1) AND (LIKELY(DISTINCT v0.c0))) WHERE (v0.c1) UNION ALL SELECT v0.c0 FROM t0 LEFT OUTER JOIN v0 ON ((CASE t0.c0  WHEN t0.c0 THEN v0.c2 ELSE v0.c2 END) NOT BETWEEN (v0.c1) AND (LIKELY(DISTINCT v0.c0))) WHERE ((NOT (v0.c1))) UNION ALL SELECT ALL v0.c0 FROM t0 LEFT OUTER JOIN v0 ON ((CASE t0.c0  WHEN t0.c0 THEN v0.c2 ELSE v0.c2 END) NOT BETWEEN (v0.c1) AND (LIKELY(DISTINCT v0.c0))) WHERE (((v0.c1) ISNULL));
SELECT ALL v0.c0 FROM t0 LEFT OUTER JOIN v0 ON ((CASE t0.c0  WHEN t0.c0 THEN v0.c2 ELSE v0.c2 END) NOT BETWEEN (v0.c1) AND (LIKELY(DISTINCT v0.c0)));
SELECT DISTINCT v0.c0, v0.c1, v0.c2 FROM v0;
SELECT DISTINCT v0.c0, v0.c1, v0.c2 FROM v0 WHERE (v0.c0) UNION SELECT DISTINCT v0.c0, v0.c1, v0.c2 FROM v0 WHERE ((NOT (v0.c0))) UNION SELECT DISTINCT v0.c0, v0.c1, v0.c2 FROM v0 WHERE (((v0.c0) ISNULL));
SELECT DISTINCT v0.c0, v0.c1, v0.c2 FROM v0;
SELECT ALL v0.c1 FROM v0 GROUP BY v0.c1;
SELECT ALL v0.c1 FROM v0 WHERE (((((json_extract(x'', v0.c0))OR(((v0.c0) BETWEEN (v0.c0) AND (v0.c2)))))OR(((v0.c2)&(v0.c1))))) GROUP BY v0.c1 UNION SELECT v0.c1 FROM v0 WHERE ((NOT (((((json_extract(x'', v0.c0))OR(((v0.c0) BETWEEN (v0.c0) AND (v0.c2)))))OR(((v0.c2)&(v0.c1))))))) GROUP BY v0.c1 UNION SELECT ALL v0.c1 FROM v0 WHERE (((((((json_extract(x'', v0.c0))OR(((v0.c0) BETWEEN (v0.c0) AND (v0.c2)))))OR(((v0.c2)&(v0.c1))))) ISNULL)) GROUP BY v0.c1;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING '~<' UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT ('~<')) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (('~<') ISNULL);
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING '~<' UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT ('~<')) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (('~<') ISNULL);
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL * FROM t0, v0;
SELECT ALL * FROM t0, v0 WHERE (v0.c1) UNION ALL SELECT * FROM t0, v0 WHERE ((NOT (v0.c1))) UNION ALL SELECT * FROM t0, v0 WHERE (((v0.c1) ISNULL));
SELECT ALL * FROM t0, v0;
SELECT DISTINCT * FROM t0 FULL OUTER JOIN v0 ON (NULL IN ());
SELECT DISTINCT * FROM t0 FULL OUTER JOIN v0 ON (NULL IN ()) WHERE ((((('502830361')|(v0.c1)))>=(CASE WHEN v0.c1 THEN v0.c1 ELSE 0.10710742388154082 END))) UNION SELECT DISTINCT * FROM t0 FULL OUTER JOIN v0 ON (NULL IN ()) WHERE ((NOT ((((('502830361')|(v0.c1)))>=(CASE WHEN v0.c1 THEN v0.c1 ELSE 0.10710742388154082 END))))) UNION SELECT DISTINCT * FROM t0 FULL OUTER JOIN v0 ON (NULL IN ()) WHERE ((((((('502830361')|(v0.c1)))>=(CASE WHEN v0.c1 THEN v0.c1 ELSE 0.10710742388154082 END))) ISNULL));
SELECT DISTINCT * FROM t0 FULL OUTER JOIN v0 ON (NULL IN ());
SELECT ALL v0.c0, v0.c2 FROM v0 GROUP BY v0.c0, v0.c2;
SELECT ALL v0.c0, v0.c2 FROM v0 WHERE ((0.05055299675424474 IN ())) GROUP BY v0.c0, v0.c2 UNION SELECT ALL v0.c0, v0.c2 FROM v0 WHERE ((NOT ((0.05055299675424474 IN ())))) GROUP BY v0.c0, v0.c2 UNION SELECT v0.c0, v0.c2 FROM v0 WHERE ((((0.05055299675424474 IN ())) ISNULL)) GROUP BY v0.c0, v0.c2;
SELECT ALL v0.c0, v0.c2 FROM v0 GROUP BY v0.c0, v0.c2;
SELECT v0.c1, t0.c0 FROM t0, v0 GROUP BY v0.c1, t0.c0;
SELECT v0.c1, t0.c0 FROM t0, v0 GROUP BY v0.c1, t0.c0 HAVING MAX(AVG(v0.c2)) UNION ALL SELECT ALL v0.c1, t0.c0 FROM t0, v0 GROUP BY v0.c1, t0.c0 HAVING (NOT (MAX(AVG(v0.c2)))) UNION ALL SELECT ALL v0.c1, t0.c0 FROM t0, v0 GROUP BY v0.c1, t0.c0 HAVING ((MAX(AVG(v0.c2))) ISNULL);
SELECT MIN((((NOT (t0.c0)))AND((t0.c0 IN ())))) FROM t0 ORDER BY ((((CHANGES())AND(t0.c0 COLLATE NOCASE)))AND(((t0.c0) NOTNULL))) ASC;
SELECT * FROM t0, v0;
SELECT * FROM t0 NOT INDEXED, v0 WHERE (CASE ((((v0.c1)OR(0.8295429327128178)))AND(t0.c0))  WHEN ((('ⷘ)<''艰Rx[P'))<=((v0.c2))) THEN CASE WHEN 0.8486679521069994 THEN v0.c0 END ELSE (v0.c0 IN ()) END) UNION ALL SELECT ALL * FROM t0, v0 WHERE ((NOT (CASE ((((v0.c1)OR(0.8295429327128178)))AND(t0.c0))  WHEN ((('ⷘ)<''艰Rx[P'))<=((v0.c2))) THEN CASE WHEN 0.8486679521069994 THEN v0.c0 END ELSE (v0.c0 IN ()) END))) UNION ALL SELECT * FROM t0, v0 WHERE (((CASE ((((v0.c1)OR(0.8295429327128178)))AND(t0.c0))  WHEN ((('ⷘ)<''艰Rx[P'))<=((v0.c2))) THEN CASE WHEN 0.8486679521069994 THEN v0.c0 END ELSE (v0.c0 IN ()) END) ISNULL));
SELECT * FROM t0, v0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (CAST((NOT (t0.c0)) AS TEXT)) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (CAST((NOT (t0.c0)) AS TEXT)))) UNION SELECT DISTINCT * FROM t0 WHERE (((CAST((NOT (t0.c0)) AS TEXT)) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT v0.c1 FROM v0 GROUP BY v0.c1;
SELECT ALL v0.c1 FROM v0 WHERE ((((json_array_length(v0.c1), (((v0.c1, v0.c0, v0.c2)) BETWEEN ((v0.c1, v0.c2, v0.c1)) AND ((v0.c2, v0.c0, v0.c1))), ((v0.c1)LIKE(v0.c0))))>((v0.c2, CAST(v0.c1 AS TEXT), CAST(v0.c2 AS NUMERIC))))) GROUP BY v0.c1 UNION SELECT ALL v0.c1 FROM v0 WHERE ((NOT ((((json_array_length(v0.c1), (((v0.c1, v0.c0, v0.c2)) BETWEEN ((v0.c1, v0.c2, v0.c1)) AND ((v0.c2, v0.c0, v0.c1))), ((v0.c1)LIKE(v0.c0))))>((v0.c2, CAST(v0.c1 AS TEXT), CAST(v0.c2 AS NUMERIC))))))) GROUP BY v0.c1 UNION SELECT ALL v0.c1 FROM v0 WHERE ((((((json_array_length(v0.c1), (((v0.c1, v0.c0, v0.c2)) BETWEEN ((v0.c1, v0.c2, v0.c1)) AND ((v0.c2, v0.c0, v0.c1))), ((v0.c1)LIKE(v0.c0))))>((v0.c2, CAST(v0.c1 AS TEXT), CAST(v0.c2 AS NUMERIC))))) ISNULL)) GROUP BY v0.c1;
SELECT v0.c1 FROM v0 GROUP BY v0.c1;
SELECT ALL v0.c0 FROM t0, v0 GROUP BY v0.c0;
SELECT v0.c0 FROM t0, v0 GROUP BY v0.c0 HAVING ((GROUP_CONCAT(TOTAL(v0.c2))) BETWEEN (GROUP_CONCAT(0.5287937026291285)) AND (((v0.c1)*(SUM(v0.c2))))) UNION ALL SELECT v0.c0 FROM t0, v0 GROUP BY v0.c0 HAVING (NOT (((GROUP_CONCAT(TOTAL(v0.c2))) BETWEEN (GROUP_CONCAT(0.5287937026291285)) AND (((v0.c1)*(SUM(v0.c2))))))) UNION ALL SELECT v0.c0 FROM t0, v0 GROUP BY v0.c0 HAVING ((((GROUP_CONCAT(TOTAL(v0.c2))) BETWEEN (GROUP_CONCAT(0.5287937026291285)) AND (((v0.c1)*(SUM(v0.c2)))))) ISNULL);
SELECT SUM(((((((v0.c0)OR(v0.c1)))OR(t0.c0))) BETWEEN ((t0.c0 IN (v0.c1, v0.c2))) AND ((((t0.c0, v0.c2, v0.c0))>((t0.c0, v0.c2, v0.c0)))))) FROM t0, v0 ORDER BY ((CAST(t0.c0 AS TEXT)) NOTNULL) ASC  NULLS LAST;
SELECT ALL v0.c1, v0.c0, v0.c2, t0.c0 FROM t0 INDEXED BY i13, v0;
SELECT DISTINCT * FROM t0 CROSS JOIN v0 ON ((((t0.c0)IS NOT(v0.c0))) BETWEEN (((v0.c2)IS NOT(v0.c0))) AND (((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))OR(t0.c0)))OR(v0.c2))));
SELECT DISTINCT * FROM t0 CROSS JOIN v0 ON ((((t0.c0)IS NOT(v0.c0))) BETWEEN (((v0.c2)IS NOT(v0.c0))) AND (((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))OR(t0.c0)))OR(v0.c2)))) WHERE (LIKELY(v0.c0) COLLATE BINARY) UNION SELECT DISTINCT * FROM t0 CROSS JOIN v0 ON ((((t0.c0)IS NOT(v0.c0))) BETWEEN (((v0.c2)IS NOT(v0.c0))) AND (((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))OR(t0.c0)))OR(v0.c2)))) WHERE ((NOT (LIKELY(v0.c0) COLLATE BINARY))) UNION SELECT DISTINCT * FROM t0 CROSS JOIN v0 ON ((((t0.c0)IS NOT(v0.c0))) BETWEEN (((v0.c2)IS NOT(v0.c0))) AND (((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))OR(t0.c0)))OR(v0.c2)))) WHERE (((LIKELY(v0.c0) COLLATE BINARY) ISNULL));
SELECT DISTINCT * FROM t0 CROSS JOIN v0 ON ((((t0.c0)IS NOT(v0.c0))) BETWEEN (((v0.c2)IS NOT(v0.c0))) AND (((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))OR(t0.c0)))OR(v0.c2))));
SELECT ALL v0.c1, t0.c0, v0.c2 FROM t0 NATURAL JOIN v0 GROUP BY v0.c1, t0.c0, v0.c2;
SELECT ALL v0.c1, t0.c0, v0.c2 FROM t0 NATURAL JOIN v0 WHERE (CAST(x'' AS BLOB)) GROUP BY v0.c1, t0.c0, v0.c2 UNION SELECT ALL v0.c1, t0.c0, v0.c2 FROM t0 NATURAL JOIN v0 WHERE ((NOT (CAST(x'' AS BLOB)))) GROUP BY v0.c1, t0.c0, v0.c2 UNION SELECT v0.c1, t0.c0, v0.c2 FROM t0 NATURAL JOIN v0 WHERE (((CAST(x'' AS BLOB)) ISNULL)) GROUP BY v0.c1, t0.c0, v0.c2;
SELECT ALL v0.c1, t0.c0, v0.c2 FROM t0 NATURAL JOIN v0 GROUP BY v0.c1, t0.c0, v0.c2;
SELECT ALL v0.c2, t0.c0 FROM v0 FULL OUTER JOIN t0 ON ((v0.c0)<=(((v0.c0)>(v0.c1)))) GROUP BY v0.c2, t0.c0;
SELECT ALL v0.c2, t0.c0 FROM v0 FULL OUTER JOIN t0 ON ((v0.c0)<=(((v0.c0)>(v0.c1)))) GROUP BY v0.c2, t0.c0 HAVING (- (AVG(COUNT(*)))) UNION ALL SELECT v0.c2, t0.c0 FROM v0 FULL OUTER JOIN t0 ON ((v0.c0)<=(((v0.c0)>(v0.c1)))) GROUP BY v0.c2, t0.c0 HAVING (NOT ((- (AVG(COUNT(*)))))) UNION ALL SELECT ALL v0.c2, t0.c0 FROM v0 FULL OUTER JOIN t0 ON ((v0.c0)<=(((v0.c0)>(v0.c1)))) GROUP BY v0.c2, t0.c0 HAVING (((- (AVG(COUNT(*))))) ISNULL);
SELECT * FROM t0;
SELECT ALL * FROM t0 WHERE (x'') UNION ALL SELECT ALL * FROM t0 WHERE ((NOT (x''))) UNION ALL SELECT * FROM t0 WHERE (((x'') ISNULL));
SELECT * FROM t0;
SELECT DISTINCT v0.c2 FROM t0, v0;
SELECT DISTINCT v0.c2 FROM t0, v0 WHERE (((((v0.c2)GLOB(v0.c1)))==(((v0.c2) IS FALSE)))) UNION SELECT DISTINCT v0.c2 FROM t0, v0 WHERE ((NOT (((((v0.c2)GLOB(v0.c1)))=(((v0.c2) IS FALSE)))))) UNION SELECT DISTINCT v0.c2 FROM t0, v0 WHERE (((((((v0.c2)GLOB(v0.c1)))=(((v0.c2) IS FALSE)))) ISNULL));
SELECT DISTINCT v0.c2 FROM t0, v0;
SELECT ALL v0.c1 FROM t0 NATURAL JOIN v0 GROUP BY v0.c1;
SELECT v0.c1 FROM t0 NATURAL JOIN v0 WHERE ((((v0.c2)<=(v0.c2)) IN ())) GROUP BY v0.c1 UNION SELECT v0.c1 FROM t0 NATURAL JOIN v0 WHERE ((NOT ((((v0.c2)<=(v0.c2)) IN ())))) GROUP BY v0.c1 UNION SELECT ALL v0.c1 FROM t0 NATURAL JOIN v0 WHERE ((((((v0.c2)<=(v0.c2)) IN ())) ISNULL)) GROUP BY v0.c1;
SELECT ALL v0.c1 FROM t0 NATURAL JOIN v0 GROUP BY v0.c1;
SELECT ALL v0.c1, t0.c0, v0.c0, v0.c2 FROM t0, v0 GROUP BY v0.c1, t0.c0, v0.c0, v0.c2;
SELECT v0.c1, t0.c0, v0.c0, v0.c2 FROM t0, v0 GROUP BY v0.c1, t0.c0, v0.c0, v0.c2 HAVING ((TOTAL(v0.c2))%(COUNT(*))) UNION ALL SELECT v0.c1, t0.c0, v0.c0, v0.c2 FROM t0, v0 GROUP BY v0.c1, t0.c0, v0.c0, v0.c2 HAVING (NOT (((TOTAL(v0.c2))%(COUNT(*))))) UNION ALL SELECT v0.c1, t0.c0, v0.c0, v0.c2 FROM t0, v0 GROUP BY v0.c1, t0.c0, v0.c0, v0.c2 HAVING ((((TOTAL(v0.c2))%(COUNT(*)))) ISNULL);
SELECT ALL v0.c1, t0.c0, v0.c0, v0.c2 FROM t0, v0 GROUP BY v0.c1, t0.c0, v0.c0, v0.c2;
SELECT v0.c1, t0.c0, v0.c0, v0.c2 FROM t0, v0 GROUP BY v0.c1, t0.c0, v0.c0, v0.c2 HAVING ((TOTAL(v0.c2))%(COUNT(*))) UNION ALL SELECT v0.c1, t0.c0, v0.c0, v0.c2 FROM t0, v0 GROUP BY v0.c1, t0.c0, v0.c0, v0.c2 HAVING (NOT (((TOTAL(v0.c2))%(COUNT(*))))) UNION ALL SELECT v0.c1, t0.c0, v0.c0, v0.c2 FROM t0, v0 GROUP BY v0.c1, t0.c0, v0.c0, v0.c2 HAVING ((((TOTAL(v0.c2))%(COUNT(*)))) ISNULL);
SELECT ALL v0.c1, t0.c0, v0.c0, v0.c2 FROM t0, v0 GROUP BY v0.c1, t0.c0, v0.c0, v0.c2;
SELECT * FROM t0, v0;
SELECT ALL * FROM t0, v0 WHERE (((((x'bc0e')AND((v0.c1 IN ()))))OR(TRIM(v0.c0)))) UNION ALL SELECT ALL * FROM t0, v0 WHERE ((NOT (((((x'bc0e')AND((v0.c1 IN ()))))OR(TRIM(v0.c0)))))) UNION ALL SELECT * FROM t0, v0 WHERE (((((((x'bc0e')AND((v0.c1 IN ()))))OR(TRIM(v0.c0)))) ISNULL));
SELECT * FROM t0, v0;
SELECT DISTINCT t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0 WHERE (((((t0.c0)%(t0.c0)))GLOB('255739173'))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((NOT (((((t0.c0)%(t0.c0)))GLOB('255739173'))))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE (((((((t0.c0)%(t0.c0)))GLOB('255739173'))) ISNULL));
SELECT DISTINCT t0.c0 FROM t0;
SELECT ALL v0.c0, v0.c2, v0.c1 FROM v0 GROUP BY v0.c0, v0.c2, v0.c1;
SELECT v0.c0, v0.c2, v0.c1 FROM v0 WHERE (v0.c1) GROUP BY v0.c0, v0.c2, v0.c1 UNION SELECT v0.c0, v0.c2, v0.c1 FROM v0 WHERE ((NOT (v0.c1))) GROUP BY v0.c0, v0.c2, v0.c1 UNION SELECT ALL v0.c0, v0.c2, v0.c1 FROM v0 WHERE (((v0.c1) ISNULL)) GROUP BY v0.c0, v0.c2, v0.c1;
SELECT ALL v0.c0, v0.c2, v0.c1 FROM v0 GROUP BY v0.c0, v0.c2, v0.c1;
SELECT t0.c0, v0.c2, v0.c1, v0.c0 FROM v0 FULL OUTER JOIN t0 ON NULL GROUP BY t0.c0, v0.c2, v0.c1, v0.c0;
SELECT ALL t0.c0, v0.c2, v0.c1, v0.c0 FROM v0 FULL OUTER JOIN t0 ON NULL GROUP BY t0.c0, v0.c2, v0.c1, v0.c0 HAVING ((v0.c2) ISNULL) UNION ALL SELECT t0.c0, v0.c2, v0.c1, v0.c0 FROM v0 FULL OUTER JOIN t0 ON NULL GROUP BY t0.c0, v0.c2, v0.c1, v0.c0 HAVING (NOT (((v0.c2) ISNULL))) UNION ALL SELECT t0.c0, v0.c2, v0.c1, v0.c0 FROM v0 FULL OUTER JOIN t0 ON NULL GROUP BY t0.c0, v0.c2, v0.c1, v0.c0 HAVING ((((v0.c2) ISNULL)) ISNULL);
SELECT t0.c0, v0.c2, v0.c1, v0.c0 FROM v0 FULL OUTER JOIN t0 ON NULL GROUP BY t0.c0, v0.c2, v0.c1, v0.c0;
SELECT ALL t0.c0, v0.c2, v0.c1, v0.c0 FROM v0 FULL OUTER JOIN t0 ON NULL GROUP BY t0.c0, v0.c2, v0.c1, v0.c0 HAVING ((v0.c2) ISNULL) UNION ALL SELECT t0.c0, v0.c2, v0.c1, v0.c0 FROM v0 FULL OUTER JOIN t0 ON NULL GROUP BY t0.c0, v0.c2, v0.c1, v0.c0 HAVING (NOT (((v0.c2) ISNULL))) UNION ALL SELECT t0.c0, v0.c2, v0.c1, v0.c0 FROM v0 FULL OUTER JOIN t0 ON NULL GROUP BY t0.c0, v0.c2, v0.c1, v0.c0 HAVING ((((v0.c2) ISNULL)) ISNULL);
SELECT t0.c0, v0.c2, v0.c1, v0.c0 FROM v0 FULL OUTER JOIN t0 ON NULL GROUP BY t0.c0, v0.c2, v0.c1, v0.c0;
SELECT * FROM t0;
SELECT * FROM t0 WHERE (((+ (t0.c0)) IN ())) UNION ALL SELECT * FROM t0 WHERE ((NOT (((+ (t0.c0)) IN ())))) UNION ALL SELECT ALL * FROM t0 WHERE (((((+ (t0.c0)) IN ())) ISNULL));
SELECT * FROM t0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (NULLIF(DISTINCT ((v0.c2) NOT BETWEEN ('1790970376') AND (v0.c0)), ((v0.c0)IS NOT(v0.c0)))) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (NULLIF(DISTINCT ((v0.c2) NOT BETWEEN ('1790970376') AND (v0.c0)), ((v0.c0)IS NOT(v0.c0)))))) UNION SELECT DISTINCT * FROM v0 WHERE (((NULLIF(DISTINCT ((v0.c2) NOT BETWEEN ('1790970376') AND (v0.c0)), ((v0.c0)IS NOT(v0.c0)))) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT ALL v0.c1, v0.c0, v0.c2 FROM t0, v0 GROUP BY v0.c1, v0.c0, v0.c2;
SELECT v0.c1, v0.c0, v0.c2 FROM t0, v0 WHERE (LIKELIHOOD(((t0.c0) BETWEEN (v0.c0) AND (v0.c2)), 0.5085900651017196)) GROUP BY v0.c1, v0.c0, v0.c2 UNION SELECT ALL v0.c1, v0.c0, v0.c2 FROM t0, v0 WHERE ((NOT (LIKELIHOOD(((t0.c0) BETWEEN (v0.c0) AND (v0.c2)), 0.5085900651017196)))) GROUP BY v0.c1, v0.c0, v0.c2 UNION SELECT ALL v0.c1, v0.c0, v0.c2 FROM t0, v0 WHERE (((LIKELIHOOD(((t0.c0) BETWEEN (v0.c0) AND (v0.c2)), 0.5085900651017196)) ISNULL)) GROUP BY v0.c1, v0.c0, v0.c2;
SELECT ALL v0.c1, v0.c0, v0.c2 FROM t0, v0 GROUP BY v0.c1, v0.c0, v0.c2;
SELECT ALL v0.c0 FROM t0, v0 GROUP BY v0.c0;
SELECT v0.c0 FROM t0, v0 GROUP BY v0.c0 HAVING MAX(MAX(COUNT(v0.c0))) UNION ALL SELECT ALL v0.c0 FROM t0, v0 GROUP BY v0.c0 HAVING (NOT (MAX(MAX(COUNT(v0.c0))))) UNION ALL SELECT ALL v0.c0 FROM t0, v0 GROUP BY v0.c0 HAVING ((MAX(MAX(COUNT(v0.c0)))) ISNULL);
SELECT ALL v0.c1 FROM v0;
SELECT v0.c1 FROM v0 WHERE ((json_quote(v0.c1) IN ())) UNION ALL SELECT ALL v0.c1 FROM v0 WHERE ((NOT ((json_quote(v0.c1) IN ())))) UNION ALL SELECT ALL v0.c1 FROM v0 WHERE ((((json_quote(v0.c1) IN ())) ISNULL));
SELECT ALL v0.c1 FROM v0;
SELECT DISTINCT * FROM v0, t0;
SELECT DISTINCT * FROM v0, t0 WHERE (UNLIKELY(CAST(t0.c0 AS REAL))) UNION SELECT DISTINCT * FROM v0, t0 WHERE ((NOT (UNLIKELY(CAST(t0.c0 AS REAL))))) UNION SELECT DISTINCT * FROM v0, t0 WHERE (((UNLIKELY(CAST(t0.c0 AS REAL))) ISNULL));
SELECT DISTINCT * FROM v0, t0;
SELECT ALL t0.c0 FROM t0 INNER JOIN v0 ON (+ (rtreenode(v0.c2, NULL))) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 INNER JOIN v0 ON (+ (rtreenode(v0.c2, NULL))) WHERE (v0.c0) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 INNER JOIN v0 ON (+ (rtreenode(v0.c2, NULL))) WHERE ((NOT (v0.c0))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 INNER JOIN v0 ON (+ (rtreenode(v0.c2, NULL))) WHERE (((v0.c0) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 INNER JOIN v0 ON (+ (rtreenode(v0.c2, NULL))) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING SQLITE_COMPILEOPTION_USED(SUM(MAX(MIN(COUNT(t0.c0))))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (SQLITE_COMPILEOPTION_USED(SUM(MAX(MIN(COUNT(t0.c0))))))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((SQLITE_COMPILEOPTION_USED(SUM(MAX(MIN(COUNT(t0.c0)))))) ISNULL);
SELECT v0.c1, v0.c0, v0.c2 FROM v0;
SELECT ALL v0.c1, v0.c0, v0.c2 FROM v0 WHERE (CASE CASE v0.c2  WHEN v0.c0 THEN v0.c1 WHEN '0.1495759778910043' THEN v0.c1 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END  WHEN v0.c1 COLLATE BINARY THEN UNLIKELY(v0.c1) END) UNION ALL SELECT ALL v0.c1, v0.c0, v0.c2 FROM v0 WHERE ((NOT (CASE CASE v0.c2  WHEN v0.c0 THEN v0.c1 WHEN '0.1495759778910043' THEN v0.c1 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END  WHEN v0.c1 COLLATE BINARY THEN UNLIKELY(v0.c1) END))) UNION ALL SELECT v0.c1, v0.c0, v0.c2 FROM v0 WHERE (((CASE CASE v0.c2  WHEN v0.c0 THEN v0.c1 WHEN '0.1495759778910043' THEN v0.c1 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END  WHEN v0.c1 COLLATE BINARY THEN UNLIKELY(v0.c1) END) ISNULL));
SELECT v0.c1, v0.c0, v0.c2 FROM v0;
SELECT DISTINCT v0.c2, t0.c0 FROM v0, t0;
SELECT DISTINCT v0.c2, t0.c0 FROM v0, t0 NOT INDEXED WHERE (CASE WHEN ((((((((t0.c0)AND(v0.c0)))AND(v0.c1)))AND(v0.c0)))OR(v0.c0)) THEN 0.16326955587225822 ELSE ((-224548178)*(v0.c1)) END) UNION SELECT DISTINCT v0.c2, t0.c0 FROM v0, t0 WHERE ((NOT (CASE WHEN ((((((((t0.c0)AND(v0.c0)))AND(v0.c1)))AND(v0.c0)))OR(v0.c0)) THEN 0.16326955587225822 ELSE ((-224548178)*(v0.c1)) END))) UNION SELECT DISTINCT v0.c2, t0.c0 FROM v0, t0 WHERE (((CASE WHEN ((((((((t0.c0)AND(v0.c0)))AND(v0.c1)))AND(v0.c0)))OR(v0.c0)) THEN 0.16326955587225822 ELSE ((-224548178)*(v0.c1)) END) ISNULL));
SELECT DISTINCT v0.c2, t0.c0 FROM v0, t0;
SELECT v0.c2 FROM v0, t0 GROUP BY v0.c2;
SELECT v0.c2 FROM v0, t0 WHERE (((CASE WHEN v0.c1 THEN t0.c0 WHEN v0.c2 THEN v0.c0 WHEN v0.c2 THEN 0Xffffffffdd0bc8eb ELSE t0.c0 END)&(((v0.c2) NOT NULL)))) GROUP BY v0.c2 UNION SELECT ALL v0.c2 FROM v0, t0 WHERE ((NOT (((CASE WHEN v0.c1 THEN t0.c0 WHEN v0.c2 THEN v0.c0 WHEN v0.c2 THEN 0Xffffffffdd0bc8eb ELSE t0.c0 END)&(((v0.c2) NOT NULL)))))) GROUP BY v0.c2 UNION SELECT ALL v0.c2 FROM v0, t0 WHERE (((((CASE WHEN v0.c1 THEN t0.c0 WHEN v0.c2 THEN v0.c0 WHEN v0.c2 THEN 0xffffffffdd0bc8eb ELSE t0.c0 END)&(((v0.c2) NOT NULL)))) ISNULL)) GROUP BY v0.c2;
SELECT v0.c2 FROM v0, t0 GROUP BY v0.c2;
SELECT ALL v0.c0, v0.c2, v0.c1 FROM v0 GROUP BY v0.c0, v0.c2, v0.c1;
SELECT ALL v0.c0, v0.c2, v0.c1 FROM v0 GROUP BY v0.c0, v0.c2, v0.c1 HAVING ((((AVG(TOTAL(v0.c0)))AND(((COUNT(v0.c0))IS NOT(v0.c1)))))OR(CAST(v0.c0 AS TEXT))) UNION ALL SELECT ALL v0.c0, v0.c2, v0.c1 FROM v0 GROUP BY v0.c0, v0.c2, v0.c1 HAVING (NOT (((((AVG(TOTAL(v0.c0)))AND(((COUNT(v0.c0))IS NOT(v0.c1)))))OR(CAST(v0.c0 AS TEXT))))) UNION ALL SELECT v0.c0, v0.c2, v0.c1 FROM v0 GROUP BY v0.c0, v0.c2, v0.c1 HAVING ((((((AVG(TOTAL(v0.c0)))AND(((COUNT(v0.c0))IS NOT(v0.c1)))))OR(CAST(v0.c0 AS TEXT)))) ISNULL);
SELECT v0.c1, v0.c2, t0.c0 FROM t0, v0;
SELECT ALL v0.c1, v0.c2, t0.c0 FROM t0, v0 WHERE (CAST(t0.c0 COLLATE BINARY AS BLOB)) UNION ALL SELECT ALL v0.c1, v0.c2, t0.c0 FROM t0, v0 WHERE ((NOT (CAST(t0.c0 COLLATE BINARY AS BLOB)))) UNION ALL SELECT v0.c1, v0.c2, t0.c0 FROM t0, v0 WHERE (((CAST(t0.c0 COLLATE BINARY AS BLOB)) ISNULL));
SELECT v0.c1, v0.c2, t0.c0 FROM t0, v0;
SELECT DISTINCT * FROM v0, t0 NOT INDEXED;
SELECT DISTINCT * FROM v0, t0 WHERE (CAST(((x'd56d') IS FALSE) AS TEXT)) UNION SELECT DISTINCT * FROM v0, t0 WHERE ((NOT (CAST(((x'd56d') IS FALSE) AS TEXT)))) UNION SELECT DISTINCT * FROM v0, t0 WHERE (((CAST(((x'd56d') IS FALSE) AS TEXT)) ISNULL));
SELECT DISTINCT * FROM v0, t0 NOT INDEXED;
SELECT ALL v0.c2, t0.c0, v0.c1, v0.c0 FROM v0 INNER JOIN t0 ON CASE WHEN (((v0.c0)) BETWEEN ((v0.c0)) AND ((t0.c0))) THEN (v0.c2 IN ()) ELSE ((t0.c0)*(v0.c1)) END GROUP BY v0.c2, t0.c0, v0.c1, v0.c0;
SELECT v0.c2, t0.c0, v0.c1, v0.c0 FROM v0 INNER JOIN t0 ON CASE WHEN (((v0.c0)) BETWEEN ((v0.c0)) AND ((t0.c0))) THEN (v0.c2 IN ()) ELSE ((t0.c0)*(v0.c1)) END WHERE ((((v0.c2, v0.c0, v0.c0)) NOT BETWEEN (((((0.3107533340042361))!=((v0.c0))), t0.c0, CAST(x'c67a' AS INTEGER))) AND ((CAST(v0.c0 AS INTEGER), (((v0.c1)) BETWEEN ((v0.c2)) AND ((t0.c0))), ((v0.c0) IS FALSE))))) GROUP BY v0.c2, t0.c0, v0.c1, v0.c0 UNION SELECT ALL v0.c2, t0.c0, v0.c1, v0.c0 FROM v0 INNER JOIN t0 ON CASE WHEN (((v0.c0)) BETWEEN ((v0.c0)) AND ((t0.c0))) THEN (v0.c2 IN ()) ELSE ((t0.c0)*(v0.c1)) END WHERE ((NOT ((((v0.c2, v0.c0, v0.c0)) NOT BETWEEN (((((0.3107533340042361))<>((v0.c0))), t0.c0, CAST(x'c67a' AS INTEGER))) AND ((CAST(v0.c0 AS INTEGER), (((v0.c1)) BETWEEN ((v0.c2)) AND ((t0.c0))), ((v0.c0) IS FALSE))))))) GROUP BY v0.c2, t0.c0, v0.c1, v0.c0 UNION SELECT ALL v0.c2, t0.c0, v0.c1, v0.c0 FROM v0 NOT INDEXED INNER JOIN t0 ON CASE WHEN (((v0.c0)) BETWEEN ((v0.c0)) AND ((t0.c0))) THEN (v0.c2 IN ()) ELSE ((t0.c0)*(v0.c1)) END WHERE ((((((v0.c2, v0.c0, v0.c0)) NOT BETWEEN (((((0.3107533340042361))!=((v0.c0))), t0.c0, CAST(x'c67a' AS INTEGER))) AND ((CAST(v0.c0 AS INTEGER), (((v0.c1)) BETWEEN ((v0.c2)) AND ((t0.c0))), ((v0.c0) IS FALSE))))) ISNULL)) GROUP BY v0.c2, t0.c0, v0.c1, v0.c0;
SELECT ALL v0.c2, t0.c0, v0.c1, v0.c0 FROM v0 INNER JOIN t0 ON CASE WHEN (((v0.c0)) BETWEEN ((v0.c0)) AND ((t0.c0))) THEN (v0.c2 IN ()) ELSE ((t0.c0)*(v0.c1)) END GROUP BY v0.c2, t0.c0, v0.c1, v0.c0;
SELECT v0.c2, v0.c0, v0.c1, t0.c0 FROM v0, t0 GROUP BY v0.c2, v0.c0, v0.c1, t0.c0;
SELECT v0.c2, v0.c0, v0.c1, t0.c0 FROM v0 NOT INDEXED, t0 GROUP BY v0.c2, v0.c0, v0.c1, t0.c0 HAVING (COUNT(MIN(v0.c1)) IN ()) UNION ALL SELECT ALL v0.c2, v0.c0, v0.c1, t0.c0 FROM v0 NOT INDEXED, t0 GROUP BY v0.c2, v0.c0, v0.c1, t0.c0 HAVING (NOT ((COUNT(MIN(v0.c1)) IN ()))) UNION ALL SELECT ALL v0.c2, v0.c0, v0.c1, t0.c0 FROM v0, t0 GROUP BY v0.c2, v0.c0, v0.c1, t0.c0 HAVING (((COUNT(MIN(v0.c1)) IN ())) ISNULL);
SELECT v0.c2, v0.c0, v0.c1, t0.c0 FROM v0, t0 GROUP BY v0.c2, v0.c0, v0.c1, t0.c0;
SELECT v0.c2, v0.c0, v0.c1, t0.c0 FROM v0 NOT INDEXED, t0 GROUP BY v0.c2, v0.c0, v0.c1, t0.c0 HAVING (COUNT(MIN(v0.c1)) IN ()) UNION ALL SELECT ALL v0.c2, v0.c0, v0.c1, t0.c0 FROM v0 NOT INDEXED, t0 GROUP BY v0.c2, v0.c0, v0.c1, t0.c0 HAVING (NOT ((COUNT(MIN(v0.c1)) IN ()))) UNION ALL SELECT ALL v0.c2, v0.c0, v0.c1, t0.c0 FROM v0, t0 GROUP BY v0.c2, v0.c0, v0.c1, t0.c0 HAVING (((COUNT(MIN(v0.c1)) IN ())) ISNULL);
SELECT v0.c2, v0.c0, v0.c1, t0.c0 FROM v0, t0 GROUP BY v0.c2, v0.c0, v0.c1, t0.c0;
SELECT * FROM t0;
SELECT * FROM t0 WHERE (CAST(((t0.c0)LIKE(t0.c0)) AS BLOB)) UNION ALL SELECT ALL * FROM t0 WHERE ((NOT (CAST(((t0.c0)LIKE(t0.c0)) AS BLOB)))) UNION ALL SELECT ALL * FROM t0 WHERE (((CAST(((t0.c0)LIKE(t0.c0)) AS BLOB)) ISNULL));
SELECT * FROM t0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE ((((((t0.c0)OR(t0.c0)))OR(t0.c0)) IN ())) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT ((((((t0.c0)OR(t0.c0)))OR(t0.c0)) IN ())))) UNION SELECT DISTINCT * FROM t0 WHERE ((((((((t0.c0)OR(t0.c0)))OR(t0.c0)) IN ())) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT ALL t0.c0, v0.c2, v0.c0, v0.c1 FROM t0, v0 GROUP BY t0.c0, v0.c2, v0.c0, v0.c1;
SELECT t0.c0, v0.c2, v0.c0, v0.c1 FROM t0, v0 WHERE ((~ (((t0.c0)+(v0.c2))))) GROUP BY t0.c0, v0.c2, v0.c0, v0.c1 UNION SELECT ALL t0.c0, v0.c2, v0.c0, v0.c1 FROM t0, v0 WHERE ((NOT ((~ (((t0.c0)+(v0.c2))))))) GROUP BY t0.c0, v0.c2, v0.c0, v0.c1 UNION SELECT ALL t0.c0, v0.c2, v0.c0, v0.c1 FROM t0, v0 WHERE ((((~ (((t0.c0)+(v0.c2))))) ISNULL)) GROUP BY t0.c0, v0.c2, v0.c0, v0.c1;
SELECT ALL t0.c0, v0.c2, v0.c0, v0.c1 FROM t0, v0 GROUP BY t0.c0, v0.c2, v0.c0, v0.c1;
SELECT v0.c1 FROM v0 GROUP BY v0.c1;
SELECT v0.c1 FROM v0 GROUP BY v0.c1 HAVING ((AVG(COUNT(COUNT(v0.c2)))) NOT NULL) UNION ALL SELECT v0.c1 FROM v0 GROUP BY v0.c1 HAVING (NOT (((AVG(COUNT(COUNT(v0.c2)))) NOT NULL))) UNION ALL SELECT v0.c1 FROM v0 GROUP BY v0.c1 HAVING ((((AVG(COUNT(COUNT(v0.c2)))) NOT NULL)) ISNULL);
SELECT * FROM t0;
SELECT ALL * FROM t0 WHERE ((CAST(t0.c0 AS INTEGER) IN (t0.c0 COLLATE BINARY, ('G>F' IN ())))) UNION ALL SELECT ALL * FROM t0 WHERE ((NOT ((CAST(t0.c0 AS INTEGER) IN (t0.c0 COLLATE BINARY, ('G>F' IN ())))))) UNION ALL SELECT ALL * FROM t0 WHERE ((((CAST(t0.c0 AS INTEGER) IN (t0.c0 COLLATE BINARY, ('G>F' IN ())))) ISNULL));
SELECT * FROM t0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE ((((v0.c1)) NOT BETWEEN ((CAST(v0.c0 AS NUMERIC))) AND (((- (v0.c0)))))) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT ((((v0.c1)) NOT BETWEEN ((CAST(v0.c0 AS NUMERIC))) AND (((- (v0.c0)))))))) UNION SELECT DISTINCT * FROM v0 WHERE ((((((v0.c1)) NOT BETWEEN ((CAST(v0.c0 AS NUMERIC))) AND (((- (v0.c0)))))) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT v0.c0, t0.c0, v0.c2, v0.c1 FROM v0, t0 GROUP BY v0.c0, t0.c0, v0.c2, v0.c1;
SELECT v0.c0, t0.c0, v0.c2, v0.c1 FROM v0, t0 WHERE (t0.c0) GROUP BY v0.c0, t0.c0, v0.c2, v0.c1 UNION SELECT ALL v0.c0, t0.c0, v0.c2, v0.c1 FROM v0, t0 WHERE ((NOT (t0.c0))) GROUP BY v0.c0, t0.c0, v0.c2, v0.c1 UNION SELECT v0.c0, t0.c0, v0.c2, v0.c1 FROM v0, t0 WHERE (((t0.c0) ISNULL)) GROUP BY v0.c0, t0.c0, v0.c2, v0.c1;
SELECT v0.c0, t0.c0, v0.c2, v0.c1 FROM v0, t0 GROUP BY v0.c0, t0.c0, v0.c2, v0.c1;
SELECT v0.c1, t0.c0, v0.c0 FROM t0, v0 GROUP BY v0.c1, t0.c0, v0.c0;
SELECT ALL v0.c1, t0.c0, v0.c0 FROM t0, v0 GROUP BY v0.c1, t0.c0, v0.c0 HAVING MAX((((COUNT(*)))<=((COUNT(v0.c2))))) UNION ALL SELECT v0.c1, t0.c0, v0.c0 FROM t0, v0 GROUP BY v0.c1, t0.c0, v0.c0 HAVING (NOT (MAX((((COUNT(*)))<=((COUNT(v0.c2))))))) UNION ALL SELECT ALL v0.c1, t0.c0, v0.c0 FROM t0, v0 GROUP BY v0.c1, t0.c0, v0.c0 HAVING ((MAX((((COUNT(*)))<=((COUNT(v0.c2)))))) ISNULL);
SELECT t0.c0 FROM t0;
SELECT ALL t0.c0 FROM t0 WHERE ((((((t0.c0) NOTNULL)))>((((t0.c0) IS FALSE))))) UNION ALL SELECT t0.c0 FROM t0 WHERE ((NOT ((((((t0.c0) NOTNULL)))>((((t0.c0) IS FALSE))))))) UNION ALL SELECT ALL t0.c0 FROM t0 WHERE ((((((((t0.c0) NOTNULL)))>((((t0.c0) IS FALSE))))) ISNULL));
SELECT t0.c0 FROM t0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE ((((v0.c1)) NOT BETWEEN ((v0.c1)) AND ((v0.c2))) COLLATE RTRIM) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT ((((v0.c1)) NOT BETWEEN ((v0.c1)) AND ((v0.c2))) COLLATE RTRIM))) UNION SELECT DISTINCT * FROM v0 WHERE ((((((v0.c1)) NOT BETWEEN ((v0.c1)) AND ((v0.c2))) COLLATE RTRIM) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE ((((t0.c0)&(t0.c0)) IN ())) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT ((((t0.c0)&(t0.c0)) IN ())))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((((((t0.c0)&(t0.c0)) IN ())) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT v0.c1, v0.c0, v0.c2 FROM v0 GROUP BY v0.c1, v0.c0, v0.c2;
SELECT ALL v0.c1, v0.c0, v0.c2 FROM v0 GROUP BY v0.c1, v0.c0, v0.c2 HAVING COUNT(*) UNION ALL SELECT ALL v0.c1, v0.c0, v0.c2 FROM v0 GROUP BY v0.c1, v0.c0, v0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT v0.c1, v0.c0, v0.c2 FROM v0 NOT INDEXED GROUP BY v0.c1, v0.c0, v0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT v0.c1, v0.c0, v0.c2 FROM v0 GROUP BY v0.c1, v0.c0, v0.c2;
SELECT ALL v0.c1, v0.c0, v0.c2 FROM v0 GROUP BY v0.c1, v0.c0, v0.c2 HAVING COUNT(*) UNION ALL SELECT ALL v0.c1, v0.c0, v0.c2 FROM v0 GROUP BY v0.c1, v0.c0, v0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT v0.c1, v0.c0, v0.c2 FROM v0 NOT INDEXED GROUP BY v0.c1, v0.c0, v0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT v0.c1, v0.c0, v0.c2 FROM v0 GROUP BY v0.c1, v0.c0, v0.c2;
SELECT * FROM t0, v0;
SELECT ALL * FROM t0, v0 WHERE (((((v0.c1) NOT BETWEEN (v0.c1) AND (v0.c0)))IS NOT(v0.c1))) UNION ALL SELECT * FROM t0, v0 WHERE ((NOT (((((v0.c1) NOT BETWEEN (v0.c1) AND (v0.c0)))IS NOT(v0.c1))))) UNION ALL SELECT ALL * FROM t0, v0 WHERE (((((((v0.c1) NOT BETWEEN (v0.c1) AND (v0.c0)))IS NOT(v0.c1))) ISNULL));
SELECT * FROM t0, v0;
SELECT DISTINCT v0.c0, v0.c1 FROM v0;
SELECT DISTINCT v0.c0, v0.c1 FROM v0 WHERE (CAST(CASE v0.c0  WHEN v0.c2 THEN v0.c0 ELSE v0.c1 END AS REAL)) UNION SELECT DISTINCT v0.c0, v0.c1 FROM v0 WHERE ((NOT (CAST(CASE v0.c0  WHEN v0.c2 THEN v0.c0 ELSE v0.c1 END AS REAL)))) UNION SELECT DISTINCT v0.c0, v0.c1 FROM v0 WHERE (((CAST(CASE v0.c0  WHEN v0.c2 THEN v0.c0 ELSE v0.c1 END AS REAL)) ISNULL));
SELECT DISTINCT v0.c0, v0.c1 FROM v0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 WHERE (x'') GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT (x''))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 NOT INDEXED WHERE (((x'') ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL v0.c0, v0.c1, v0.c2 FROM t0, v0 GROUP BY v0.c0, v0.c1, v0.c2;
SELECT ALL v0.c0, v0.c1, v0.c2 FROM t0, v0 GROUP BY v0.c0, v0.c1, v0.c2 HAVING COUNT(((((((((v0.c1)AND(AVG(v0.c1))))OR(AVG(MAX(TOTAL(NULL))))))AND(MIN(MAX(SUM(v0.c0))))))OR(MIN(v0.c0)))) UNION ALL SELECT ALL v0.c0, v0.c1, v0.c2 FROM t0, v0 GROUP BY v0.c0, v0.c1, v0.c2 HAVING (NOT (COUNT(((((((((v0.c1)AND(AVG(v0.c1))))OR(AVG(MAX(TOTAL(NULL))))))AND(MIN(MAX(SUM(v0.c0))))))OR(MIN(v0.c0)))))) UNION ALL SELECT ALL v0.c0, v0.c1, v0.c2 FROM t0, v0 GROUP BY v0.c0, v0.c1, v0.c2 HAVING ((COUNT(((((((((v0.c1)AND(AVG(v0.c1))))OR(AVG(MAX(TOTAL(NULL))))))AND(MIN(MAX(SUM(v0.c0))))))OR(MIN(v0.c0))))) ISNULL);
SELECT ALL v0.c0 FROM v0;
SELECT v0.c0 FROM v0 WHERE (LOWER(DISTINCT ((v0.c2) NOT BETWEEN (v0.c2) AND (v0.c2)))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE ((NOT (LOWER(DISTINCT ((v0.c2) NOT BETWEEN (v0.c2) AND (v0.c2)))))) UNION ALL SELECT v0.c0 FROM v0 WHERE (((LOWER(DISTINCT ((v0.c2) NOT BETWEEN (v0.c2) AND (v0.c2)))) ISNULL));
SELECT ALL v0.c0 FROM v0;
SELECT DISTINCT t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0 WHERE ('-1475894279') UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((NOT ('-1475894279'))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((('-1475894279') ISNULL));
SELECT DISTINCT t0.c0 FROM t0;
SELECT ALL t0.c0 FROM t0 NOT INDEXED GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 WHERE ('1790970376') GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT ('1790970376'))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((('1790970376') ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 NOT INDEXED GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING TOTAL(t0.c0) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (TOTAL(t0.c0))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((TOTAL(t0.c0)) ISNULL);
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING TOTAL(t0.c0) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (TOTAL(t0.c0))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((TOTAL(t0.c0)) ISNULL);
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT * FROM v0;
SELECT * FROM v0 WHERE (((NULL) NOTNULL)) UNION ALL SELECT * FROM v0 WHERE ((NOT (((NULL) NOTNULL)))) UNION ALL SELECT ALL * FROM v0 WHERE (((((NULL) NOTNULL)) ISNULL));
SELECT * FROM v0;
SELECT DISTINCT v0.c0, t0.c0, v0.c1, v0.c2 FROM t0 CROSS JOIN v0 ON json_object(((v0.c1) NOT NULL), ((v0.c0) BETWEEN (v0.c2) AND (t0.c0)));
SELECT v0.c0, v0.c1, v0.c2 FROM t0, v0 GROUP BY v0.c0, v0.c1, v0.c2;
SELECT v0.c0, v0.c1, v0.c2 FROM t0, v0 WHERE (((((v0.c1)!=(v0.c2)))<<(RTRIM(v0.c2)))) GROUP BY v0.c0, v0.c1, v0.c2 UNION SELECT v0.c0, v0.c1, v0.c2 FROM t0, v0 WHERE ((NOT (((((v0.c1)<>(v0.c2)))<<(RTRIM(v0.c2)))))) GROUP BY v0.c0, v0.c1, v0.c2 UNION SELECT ALL v0.c0, v0.c1, v0.c2 FROM t0, v0 WHERE (((((((v0.c1)!=(v0.c2)))<<(RTRIM(v0.c2)))) ISNULL)) GROUP BY v0.c0, v0.c1, v0.c2;
SELECT v0.c0, v0.c1, v0.c2 FROM t0, v0 GROUP BY v0.c0, v0.c1, v0.c2;
SELECT ALL v0.c1, v0.c0 FROM v0 GROUP BY v0.c1, v0.c0;
SELECT v0.c1, v0.c0 FROM v0 GROUP BY v0.c1, v0.c0 HAVING MAX(CASE WHEN v0.c0 THEN v0.c0 WHEN x'' THEN GROUP_CONCAT(TOTAL(COUNT(*))) WHEN v0.c2 THEN MIN(v0.c0) ELSE MIN(v0.c0) END) UNION ALL SELECT v0.c1, v0.c0 FROM v0 GROUP BY v0.c1, v0.c0 HAVING (NOT (MAX(CASE WHEN v0.c0 THEN v0.c0 WHEN x'' THEN GROUP_CONCAT(TOTAL(COUNT(*))) WHEN v0.c2 THEN MIN(v0.c0) ELSE MIN(v0.c0) END))) UNION ALL SELECT v0.c1, v0.c0 FROM v0 GROUP BY v0.c1, v0.c0 HAVING ((MAX(CASE WHEN v0.c0 THEN v0.c0 WHEN x'' THEN GROUP_CONCAT(TOTAL(COUNT(*))) WHEN v0.c2 THEN MIN(v0.c0) ELSE MIN(v0.c0) END)) ISNULL);
SELECT ALL * FROM t0;
SELECT * FROM t0 WHERE (((((((((((((t0.c0)AND((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))))))AND(((((t0.c0)AND(t0.c0)))OR(t0.c0)))))OR(CAST(t0.c0 AS TEXT))))OR(((t0.c0)=(t0.c0)))))AND(CAST(t0.c0 AS NUMERIC))))AND(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))) UNION ALL SELECT ALL * FROM t0 WHERE ((NOT (((((((((((((t0.c0)AND((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))))))AND(((((t0.c0)AND(t0.c0)))OR(t0.c0)))))OR(CAST(t0.c0 AS TEXT))))OR(((t0.c0)==(t0.c0)))))AND(CAST(t0.c0 AS NUMERIC))))AND(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))))) UNION ALL SELECT * FROM t0 WHERE (((((((((((((((t0.c0)AND((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))))))AND(((((t0.c0)AND(t0.c0)))OR(t0.c0)))))OR(CAST(t0.c0 AS TEXT))))OR(((t0.c0)==(t0.c0)))))AND(CAST(t0.c0 AS NUMERIC))))AND(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))) ISNULL));
SELECT ALL * FROM t0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (((((((t0.c0)|(t0.c0)))AND((- (t0.c0)))))OR(CAST(0x10d74853 AS REAL)))) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (((((((t0.c0)|(t0.c0)))AND((- (t0.c0)))))OR(CAST(0x10d74853 AS REAL)))))) UNION SELECT DISTINCT * FROM t0 WHERE (((((((((t0.c0)|(t0.c0)))AND((- (t0.c0)))))OR(CAST(0x10d74853 AS REAL)))) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 WHERE ((NOT (t0.c0))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT ((NOT (t0.c0))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((((NOT (t0.c0))) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT v0.c2 FROM v0, t0 GROUP BY v0.c2;
SELECT v0.c2 FROM v0, t0 GROUP BY v0.c2 HAVING ((TOTAL(v0.c0)) ISNULL) UNION ALL SELECT ALL v0.c2 FROM v0, t0 GROUP BY v0.c2 HAVING (NOT (((TOTAL(v0.c0)) ISNULL))) UNION ALL SELECT ALL v0.c2 FROM v0, t0 GROUP BY v0.c2 HAVING ((((TOTAL(v0.c0)) ISNULL)) ISNULL);
SELECT v0.c2 FROM v0, t0 GROUP BY v0.c2;
SELECT v0.c2 FROM v0, t0 GROUP BY v0.c2 HAVING ((TOTAL(v0.c0)) ISNULL) UNION ALL SELECT ALL v0.c2 FROM v0, t0 GROUP BY v0.c2 HAVING (NOT (((TOTAL(v0.c0)) ISNULL))) UNION ALL SELECT ALL v0.c2 FROM v0, t0 GROUP BY v0.c2 HAVING ((((TOTAL(v0.c0)) ISNULL)) ISNULL);
SELECT v0.c2 FROM v0, t0 GROUP BY v0.c2;
SELECT t0.c0 FROM t0;
SELECT t0.c0 FROM t0 WHERE (LIKELIHOOD(DISTINCT json_insert(t0.c0, x'9424', 0x20c2289a), 0.6102826919604465)) UNION ALL SELECT t0.c0 FROM t0 WHERE ((NOT (LIKELIHOOD(DISTINCT json_insert(t0.c0, x'9424', 0x20c2289a), 0.6102826919604465)))) UNION ALL SELECT t0.c0 FROM t0 WHERE (((LIKELIHOOD(DISTINCT json_insert(t0.c0, x'9424', 0X20c2289a), 0.6102826919604465)) ISNULL));
SELECT DISTINCT v0.c1, v0.c0 FROM t0 NATURAL JOIN v0;
SELECT DISTINCT v0.c1, v0.c0 FROM t0 NATURAL JOIN v0 WHERE ((v0.c0 IN (v0.c1)) COLLATE NOCASE) UNION SELECT DISTINCT v0.c1, v0.c0 FROM t0 NATURAL JOIN v0 WHERE ((NOT ((v0.c0 IN (v0.c1)) COLLATE NOCASE))) UNION SELECT DISTINCT v0.c1, v0.c0 FROM t0 NATURAL JOIN v0 WHERE ((((v0.c0 IN (v0.c1)) COLLATE NOCASE) ISNULL));
SELECT DISTINCT v0.c1, v0.c0 FROM t0 NATURAL JOIN v0;
SELECT ALL t0.c0 FROM v0, t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM v0, t0 WHERE (CAST(CASE WHEN v0.c1 THEN v0.c1 ELSE v0.c1 END AS INTEGER)) GROUP BY t0.c0 UNION SELECT t0.c0 FROM v0, t0 WHERE ((NOT (CAST(CASE WHEN v0.c1 THEN v0.c1 ELSE v0.c1 END AS INTEGER)))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM v0, t0 WHERE (((CAST(CASE WHEN v0.c1 THEN v0.c1 ELSE v0.c1 END AS INTEGER)) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM v0, t0 GROUP BY t0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((((CAST(AVG(TOTAL(v0.c2)) AS INTEGER))AND(AVG(TOTAL(COUNT(*))))))OR(COUNT(v0.c2))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (((((CAST(AVG(TOTAL(v0.c2)) AS INTEGER))AND(AVG(TOTAL(COUNT(*))))))OR(COUNT(v0.c2))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((((((CAST(AVG(TOTAL(v0.c2)) AS INTEGER))AND(AVG(TOTAL(COUNT(*))))))OR(COUNT(v0.c2)))) ISNULL);
SELECT ALL * FROM t0;
SELECT * FROM t0 WHERE ((((((t0.c0)<<(t0.c0))))<=((t0.c0 COLLATE RTRIM)))) UNION ALL SELECT * FROM t0 WHERE ((NOT ((((((t0.c0)<<(t0.c0))))<=((t0.c0 COLLATE RTRIM)))))) UNION ALL SELECT ALL * FROM t0 WHERE ((((((((t0.c0)<<(t0.c0))))<=((t0.c0 COLLATE RTRIM)))) ISNULL));
SELECT ALL * FROM t0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 NOT INDEXED WHERE (((((((((t0.c0)AND(((t0.c0) ISNULL))))AND(2006079933)))OR(t0.c0 COLLATE BINARY)))OR(((t0.c0) NOTNULL)))) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (((((((((t0.c0)AND(((t0.c0) ISNULL))))AND(2006079933)))OR(t0.c0 COLLATE BINARY)))OR(((t0.c0) NOTNULL)))))) UNION SELECT DISTINCT * FROM t0 WHERE (((((((((((t0.c0)AND(((t0.c0) ISNULL))))AND(2006079933)))OR(t0.c0 COLLATE BINARY)))OR(((t0.c0) NOTNULL)))) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT ALL t0.c0, v0.c1 FROM v0, t0 GROUP BY t0.c0, v0.c1;
SELECT ALL t0.c0, v0.c1 FROM v0, t0 WHERE (((~ ('739126907')) IN ())) GROUP BY t0.c0, v0.c1 UNION SELECT ALL t0.c0, v0.c1 FROM v0, t0 WHERE ((NOT (((~ ('739126907')) IN ())))) GROUP BY t0.c0, v0.c1 UNION SELECT ALL t0.c0, v0.c1 FROM v0, t0 WHERE (((((~ ('739126907')) IN ())) ISNULL)) GROUP BY t0.c0, v0.c1;
SELECT ALL t0.c0, v0.c1 FROM v0, t0 GROUP BY t0.c0, v0.c1;
SELECT ALL v0.c2, v0.c1 FROM v0 GROUP BY v0.c2, v0.c1;
SELECT ALL v0.c2, v0.c1 FROM v0 GROUP BY v0.c2, v0.c1 HAVING ((CAST(GROUP_CONCAT(MAX(AVG(AVG(v0.c0)))) AS TEXT))>(CASE WHEN v0.c2 THEN MAX(v0.c1) END)) UNION ALL SELECT v0.c2, v0.c1 FROM v0 GROUP BY v0.c2, v0.c1 HAVING (NOT (((CAST(GROUP_CONCAT(MAX(AVG(AVG(v0.c0)))) AS TEXT))>(CASE WHEN v0.c2 THEN MAX(v0.c1) END)))) UNION ALL SELECT v0.c2, v0.c1 FROM v0 GROUP BY v0.c2, v0.c1 HAVING ((((CAST(GROUP_CONCAT(MAX(AVG(AVG(v0.c0)))) AS TEXT))>(CASE WHEN v0.c2 THEN MAX(v0.c1) END))) ISNULL);
SELECT TOTAL((((- (v0.c2)))<(((x'4575') BETWEEN (v0.c0) AND (v0.c2))))) FROM v0 ORDER BY (- (((v0.c2)LIKE(v0.c0))))  NULLS FIRST;
SELECT v0.c2 FROM t0, v0;
SELECT v0.c2 FROM t0, v0 WHERE (((~ (v0.c2)) IN ())) UNION ALL SELECT v0.c2 FROM t0, v0 WHERE ((NOT (((~ (v0.c2)) IN ())))) UNION ALL SELECT v0.c2 FROM t0, v0 WHERE (((((~ (v0.c2)) IN ())) ISNULL));
SELECT v0.c2 FROM t0, v0;
SELECT DISTINCT v0.c0, v0.c1, t0.c0 FROM v0 NATURAL JOIN t0;
SELECT DISTINCT v0.c0, v0.c1, t0.c0 FROM v0 NATURAL JOIN t0 WHERE (CAST((v0.c2 IN ()) AS NUMERIC)) UNION SELECT DISTINCT v0.c0, v0.c1, t0.c0 FROM v0 NATURAL JOIN t0 WHERE ((NOT (CAST((v0.c2 IN ()) AS NUMERIC)))) UNION SELECT DISTINCT v0.c0, v0.c1, t0.c0 FROM v0 NATURAL JOIN t0 WHERE (((CAST((v0.c2 IN ()) AS NUMERIC)) ISNULL));
SELECT DISTINCT v0.c0, v0.c1, t0.c0 FROM v0 NATURAL JOIN t0;
SELECT ALL v0.c2, t0.c0, v0.c1, v0.c0 FROM v0, t0 GROUP BY v0.c2, t0.c0, v0.c1, v0.c0;
SELECT ALL v0.c2, t0.c0, v0.c1, v0.c0 FROM v0, t0 WHERE (((((((v0.c1) NOT BETWEEN (t0.c0) AND (v0.c0)))AND(json_array(v0.c0, v0.c1, v0.c2, v0.c1))))OR(NULL))) GROUP BY v0.c2, t0.c0, v0.c1, v0.c0 UNION SELECT v0.c2, t0.c0, v0.c1, v0.c0 FROM v0, t0 WHERE ((NOT (((((((v0.c1) NOT BETWEEN (t0.c0) AND (v0.c0)))AND(json_array(v0.c0, v0.c1, v0.c2, v0.c1))))OR(NULL))))) GROUP BY v0.c2, t0.c0, v0.c1, v0.c0 UNION SELECT v0.c2, t0.c0, v0.c1, v0.c0 FROM v0, t0 WHERE (((((((((v0.c1) NOT BETWEEN (t0.c0) AND (v0.c0)))AND(json_array(v0.c0, v0.c1, v0.c2, v0.c1))))OR(NULL))) ISNULL)) GROUP BY v0.c2, t0.c0, v0.c1, v0.c0;
SELECT ALL v0.c2, t0.c0, v0.c1, v0.c0 FROM v0, t0 GROUP BY v0.c2, t0.c0, v0.c1, v0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING MAX(t0.c0) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (MAX(t0.c0))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((MAX(t0.c0)) ISNULL);
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING MAX(t0.c0) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (MAX(t0.c0))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((MAX(t0.c0)) ISNULL);
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL TOTAL(((CAST(v0.c2 AS BLOB))IS NOT(((v0.c0)=(v0.c2))))) FROM v0, t0;
SELECT * FROM v0;
SELECT * FROM v0 WHERE ((((TYPEOF(v0.c0)))>=(((NOT (v0.c2)))))) UNION ALL SELECT ALL * FROM v0 WHERE ((NOT ((((TYPEOF(v0.c0)))>=(((NOT (v0.c2)))))))) UNION ALL SELECT ALL * FROM v0 WHERE ((((((TYPEOF(v0.c0)))>=(((NOT (v0.c2)))))) ISNULL));
SELECT * FROM v0;
SELECT DISTINCT v0.c0, v0.c1, v0.c2 FROM v0;
SELECT DISTINCT v0.c0, v0.c1, v0.c2 FROM v0 WHERE (((CAST(v0.c2 AS TEXT))|(((v0.c0) NOT BETWEEN (v0.c1) AND (v0.c0))))) UNION SELECT DISTINCT v0.c0, v0.c1, v0.c2 FROM v0 WHERE ((NOT (((CAST(v0.c2 AS TEXT))|(((v0.c0) NOT BETWEEN (v0.c1) AND (v0.c0))))))) UNION SELECT DISTINCT v0.c0, v0.c1, v0.c2 FROM v0 WHERE (((((CAST(v0.c2 AS TEXT))|(((v0.c0) NOT BETWEEN (v0.c1) AND (v0.c0))))) ISNULL));
SELECT DISTINCT v0.c0, v0.c1, v0.c2 FROM v0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 WHERE ((t0.c0 COLLATE RTRIM IN (((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))OR(t0.c0)))AND(t0.c0))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT ((t0.c0 COLLATE RTRIM IN (((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))OR(t0.c0)))AND(t0.c0))))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((((t0.c0 COLLATE RTRIM IN (((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))OR(t0.c0)))AND(t0.c0))))) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0, v0.c2 FROM v0, t0 GROUP BY t0.c0, v0.c2;
SELECT ALL t0.c0, v0.c2 FROM v0, t0 GROUP BY t0.c0, v0.c2 HAVING GROUP_CONCAT(COUNT(*) COLLATE NOCASE) UNION ALL SELECT t0.c0, v0.c2 FROM v0, t0 GROUP BY t0.c0, v0.c2 HAVING (NOT (GROUP_CONCAT(COUNT(*) COLLATE NOCASE))) UNION ALL SELECT t0.c0, v0.c2 FROM v0, t0 GROUP BY t0.c0, v0.c2 HAVING ((GROUP_CONCAT(COUNT(*) COLLATE NOCASE)) ISNULL);
SELECT ALL v0.c1 FROM v0, t0;
SELECT v0.c1 FROM v0, t0 WHERE (((((((((((((v0.c0 COLLATE NOCASE)OR(((v0.c2)|(v0.c1)))))OR(((t0.c0) BETWEEN (v0.c1) AND (v0.c1)))))OR(((((t0.c0)AND(x'')))AND(v0.c0)))))AND(CAST(t0.c0 AS REAL))))OR(((v0.c2)%(v0.c1)))))OR((((v0.c0)) BETWEEN ((v0.c2)) AND ((NULL)))))) UNION ALL SELECT ALL v0.c1 FROM v0, t0 WHERE ((NOT (((((((((((((v0.c0 COLLATE NOCASE)OR(((v0.c2)|(v0.c1)))))OR(((t0.c0) BETWEEN (v0.c1) AND (v0.c1)))))OR(((((t0.c0)AND(x'')))AND(v0.c0)))))AND(CAST(t0.c0 AS REAL))))OR(((v0.c2)%(v0.c1)))))OR((((v0.c0)) BETWEEN ((v0.c2)) AND ((NULL)))))))) UNION ALL SELECT v0.c1 FROM v0, t0 WHERE (((((((((((((((v0.c0 COLLATE NOCASE)OR(((v0.c2)|(v0.c1)))))OR(((t0.c0) BETWEEN (v0.c1) AND (v0.c1)))))OR(((((t0.c0)AND(x'')))AND(v0.c0)))))AND(CAST(t0.c0 AS REAL))))OR(((v0.c2)%(v0.c1)))))OR((((v0.c0)) BETWEEN ((v0.c2)) AND ((NULL)))))) ISNULL));
SELECT ALL v0.c1 FROM v0, t0;
SELECT DISTINCT * FROM t0 FULL OUTER JOIN v0 ON ((CASE v0.c0  WHEN v0.c0 THEN t0.c0 ELSE v0.c2 END)-(((x'') NOTNULL)));
SELECT DISTINCT * FROM t0 FULL OUTER JOIN v0 ON ((CASE v0.c0  WHEN v0.c0 THEN t0.c0 ELSE v0.c2 END)-(((x'') NOTNULL))) WHERE (CAST(((v0.c2)<(v0.c2)) AS NUMERIC)) UNION SELECT DISTINCT * FROM t0 FULL OUTER JOIN v0 ON ((CASE v0.c0  WHEN v0.c0 THEN t0.c0 ELSE v0.c2 END)-(((x'') NOTNULL))) WHERE ((NOT (CAST(((v0.c2)<(v0.c2)) AS NUMERIC)))) UNION SELECT DISTINCT * FROM t0 FULL OUTER JOIN v0 ON ((CASE v0.c0  WHEN v0.c0 THEN t0.c0 ELSE v0.c2 END)-(((x'') NOTNULL))) WHERE (((CAST(((v0.c2)<(v0.c2)) AS NUMERIC)) ISNULL));
SELECT DISTINCT * FROM t0 FULL OUTER JOIN v0 ON ((CASE v0.c0  WHEN v0.c0 THEN t0.c0 ELSE v0.c2 END)-(((x'') NOTNULL)));
SELECT v0.c2 FROM v0 GROUP BY v0.c2;
SELECT v0.c2 FROM v0 WHERE ((NOT (((v0.c1) BETWEEN (v0.c2) AND (v0.c0))))) GROUP BY v0.c2 UNION SELECT ALL v0.c2 FROM v0 WHERE ((NOT ((NOT (((v0.c1) BETWEEN (v0.c2) AND (v0.c0))))))) GROUP BY v0.c2 UNION SELECT v0.c2 FROM v0 WHERE ((((NOT (((v0.c1) BETWEEN (v0.c2) AND (v0.c0))))) ISNULL)) GROUP BY v0.c2;
SELECT v0.c2 FROM v0 GROUP BY v0.c2;
SELECT ALL v0.c2, v0.c0 FROM v0 GROUP BY v0.c2, v0.c0;
SELECT v0.c2, v0.c0 FROM v0 GROUP BY v0.c2, v0.c0 HAVING MIN(((TOTAL(v0.c0))<>(v0.c0))) UNION ALL SELECT ALL v0.c2, v0.c0 FROM v0 GROUP BY v0.c2, v0.c0 HAVING (NOT (MIN(((TOTAL(v0.c0))<>(v0.c0))))) UNION ALL SELECT v0.c2, v0.c0 FROM v0 GROUP BY v0.c2, v0.c0 HAVING ((MIN(((TOTAL(v0.c0))<>(v0.c0)))) ISNULL);
SELECT * FROM t0, v0;
SELECT * FROM t0, v0 WHERE (((((((t0.c0)OR(v0.c2)))AND(v0.c0))) BETWEEN (CASE WHEN v0.c0 THEN v0.c1 END) AND (((t0.c0)AND(v0.c1))))) UNION ALL SELECT ALL * FROM t0, v0 WHERE ((NOT (((((((t0.c0)OR(v0.c2)))AND(v0.c0))) BETWEEN (CASE WHEN v0.c0 THEN v0.c1 END) AND (((t0.c0)AND(v0.c1))))))) UNION ALL SELECT ALL * FROM t0, v0 WHERE (((((((((t0.c0)OR(v0.c2)))AND(v0.c0))) BETWEEN (CASE WHEN v0.c0 THEN v0.c1 END) AND (((t0.c0)AND(v0.c1))))) ISNULL));
SELECT * FROM t0, v0;
SELECT DISTINCT t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0 WHERE ((((CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN '605324204' WHEN t0.c0 THEN t0.c0 END))<(((('FALSE') NOT NULL))))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((NOT ((((CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN '605324204' WHEN t0.c0 THEN t0.c0 END))<(((('FALSE') NOT NULL))))))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((((((CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN '605324204' WHEN t0.c0 THEN t0.c0 END))<(((('FALSE') NOT NULL))))) ISNULL));
SELECT DISTINCT t0.c0 FROM t0;
SELECT ALL t0.c0, v0.c1 FROM t0, v0 GROUP BY t0.c0, v0.c1;
SELECT ALL t0.c0, v0.c1 FROM t0, v0 WHERE ((((t0.c0)) NOT BETWEEN (((- (v0.c2)))) AND ((NULL)))) GROUP BY t0.c0, v0.c1 UNION SELECT ALL t0.c0, v0.c1 FROM t0, v0 WHERE ((NOT ((((t0.c0)) NOT BETWEEN (((- (v0.c2)))) AND ((NULL)))))) GROUP BY t0.c0, v0.c1 UNION SELECT ALL t0.c0, v0.c1 FROM t0, v0 WHERE ((((((t0.c0)) NOT BETWEEN (((- (v0.c2)))) AND ((NULL)))) ISNULL)) GROUP BY t0.c0, v0.c1;
SELECT ALL t0.c0, v0.c1 FROM t0, v0 GROUP BY t0.c0, v0.c1;
SELECT ALL t0.c0, v0.c0, v0.c2, v0.c1 FROM t0, v0 GROUP BY t0.c0, v0.c0, v0.c2, v0.c1;
SELECT ALL t0.c0, v0.c0, v0.c2, v0.c1 FROM t0, v0 GROUP BY t0.c0, v0.c0, v0.c2, v0.c1 HAVING MAX(TOTAL(GROUP_CONCAT(COUNT(*)))) UNION ALL SELECT ALL t0.c0, v0.c0, v0.c2, v0.c1 FROM t0, v0 GROUP BY t0.c0, v0.c0, v0.c2, v0.c1 HAVING (NOT (MAX(TOTAL(GROUP_CONCAT(COUNT(*)))))) UNION ALL SELECT t0.c0, v0.c0, v0.c2, v0.c1 FROM t0, v0 GROUP BY t0.c0, v0.c0, v0.c2, v0.c1 HAVING ((MAX(TOTAL(GROUP_CONCAT(COUNT(*))))) ISNULL);
SELECT ALL t0.c0, v0.c2, v0.c0, v0.c1 FROM t0, v0;
SELECT ALL t0.c0, v0.c2, v0.c0, v0.c1 FROM t0, v0 WHERE (((((v0.c0)>=(v0.c2)))AND(v0.c2))) UNION ALL SELECT t0.c0, v0.c2, v0.c0, v0.c1 FROM t0, v0 WHERE ((NOT (((((v0.c0)>=(v0.c2)))AND(v0.c2))))) UNION ALL SELECT t0.c0, v0.c2, v0.c0, v0.c1 FROM t0, v0 WHERE (((((((v0.c0)>=(v0.c2)))AND(v0.c2))) ISNULL));
SELECT ALL t0.c0, v0.c2, v0.c0, v0.c1 FROM t0, v0;
SELECT DISTINCT v0.c1, t0.c0, v0.c2 FROM t0, v0;
SELECT DISTINCT v0.c1, t0.c0, v0.c2 FROM t0, v0 WHERE (((LIKELIHOOD(NULL, 0.115752306024826)) IS TRUE)) UNION SELECT DISTINCT v0.c1, t0.c0, v0.c2 FROM t0, v0 WHERE ((NOT (((LIKELIHOOD(NULL, 0.115752306024826)) IS TRUE)))) UNION SELECT DISTINCT v0.c1, t0.c0, v0.c2 FROM t0, v0 WHERE (((((LIKELIHOOD(NULL, 0.115752306024826)) IS TRUE)) ISNULL));
SELECT DISTINCT v0.c1, t0.c0, v0.c2 FROM t0, v0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 WHERE (((((((((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))AND((~ (t0.c0)))))OR((- (t0.c0)))))AND((+ (t0.c0)))))AND(((((t0.c0)OR(t0.c0)))AND(t0.c0))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT (((((((((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))AND((~ (t0.c0)))))OR((- (t0.c0)))))AND((+ (t0.c0)))))AND(((((t0.c0)OR(t0.c0)))AND(t0.c0))))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE (((((((((((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))AND((~ (t0.c0)))))OR((- (t0.c0)))))AND((+ (t0.c0)))))AND(((((t0.c0)OR(t0.c0)))AND(t0.c0))))) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0)))) BETWEEN (MAX(t0.c0)) AND ((t0.c0 IN ()))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT ((((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0)))) BETWEEN (MAX(t0.c0)) AND ((t0.c0 IN ()))))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (((((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0)))) BETWEEN (MAX(t0.c0)) AND ((t0.c0 IN ())))) ISNULL);
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0)))) BETWEEN (MAX(t0.c0)) AND ((t0.c0 IN ()))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT ((((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0)))) BETWEEN (MAX(t0.c0)) AND ((t0.c0 IN ()))))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (((((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0)))) BETWEEN (MAX(t0.c0)) AND ((t0.c0 IN ())))) ISNULL);
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL SUM(((v0.c1 IN (v0.c1)) IN (((v0.c1) IS FALSE)))) FROM v0;
SELECT ALL v0.c1 FROM t0, v0;
SELECT v0.c1 FROM t0, v0 WHERE (((((((v0.c2) NOT BETWEEN (t0.c0) AND (x'')))AND(((v0.c1)IS(v0.c0)))))OR((((v0.c0))=((v0.c2)))))) UNION ALL SELECT ALL v0.c1 FROM t0, v0 WHERE ((NOT (((((((v0.c2) NOT BETWEEN (t0.c0) AND (x'')))AND(((v0.c1)IS(v0.c0)))))OR((((v0.c0))==((v0.c2)))))))) UNION ALL SELECT ALL v0.c1 FROM t0, v0 WHERE (((((((((v0.c2) NOT BETWEEN (t0.c0) AND (x'')))AND(((v0.c1)IS(v0.c0)))))OR((((v0.c0))=((v0.c2)))))) ISNULL));
SELECT ALL v0.c1 FROM t0, v0;
SELECT DISTINCT * FROM t0 CROSS JOIN v0 ON CASE WHEN (((t0.c0))<=((v0.c0))) THEN ((v0.c2) ISNULL) END;
SELECT DISTINCT * FROM t0 CROSS JOIN v0 ON CASE WHEN (((t0.c0))<=((v0.c0))) THEN ((v0.c2) ISNULL) END WHERE (2012577984) UNION SELECT DISTINCT * FROM t0 CROSS JOIN v0 ON CASE WHEN (((t0.c0))<=((v0.c0))) THEN ((v0.c2) ISNULL) END WHERE ((NOT (2012577984))) UNION SELECT DISTINCT * FROM t0 CROSS JOIN v0 ON CASE WHEN (((t0.c0))<=((v0.c0))) THEN ((v0.c2) ISNULL) END WHERE (((2012577984) ISNULL));
SELECT DISTINCT * FROM t0 CROSS JOIN v0 ON CASE WHEN (((t0.c0))<=((v0.c0))) THEN ((v0.c2) ISNULL) END;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 WHERE ((((((((t0.c0))==((t0.c0))))OR(((t0.c0) NOT NULL))))OR(((t0.c0) BETWEEN (t0.c0) AND (t0.c0))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT ((((((((t0.c0))=((t0.c0))))OR(((t0.c0) NOT NULL))))OR(((t0.c0) BETWEEN (t0.c0) AND (t0.c0))))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((((((((((t0.c0))==((t0.c0))))OR(((t0.c0) NOT NULL))))OR(((t0.c0) BETWEEN (t0.c0) AND (t0.c0))))) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL v0.c2 FROM v0 GROUP BY v0.c2;
SELECT v0.c2 FROM v0 GROUP BY v0.c2 HAVING v0.c1 UNION ALL SELECT ALL v0.c2 FROM v0 GROUP BY v0.c2 HAVING (NOT (v0.c1)) UNION ALL SELECT v0.c2 FROM v0 GROUP BY v0.c2 HAVING ((v0.c1) ISNULL);
SELECT ALL v0.c2 FROM v0 GROUP BY v0.c2;
SELECT v0.c2 FROM v0 GROUP BY v0.c2 HAVING v0.c1 UNION ALL SELECT ALL v0.c2 FROM v0 GROUP BY v0.c2 HAVING (NOT (v0.c1)) UNION ALL SELECT v0.c2 FROM v0 GROUP BY v0.c2 HAVING ((v0.c1) ISNULL);
SELECT ALL v0.c2 FROM v0 GROUP BY v0.c2;
SELECT * FROM v0;
SELECT ALL * FROM v0 WHERE (TRIM(DISTINCT ((v0.c0)<=('4170009124185661492')))) UNION ALL SELECT * FROM v0 WHERE ((NOT (TRIM(DISTINCT ((v0.c0)<=('4170009124185661492')))))) UNION ALL SELECT ALL * FROM v0 WHERE (((TRIM(DISTINCT ((v0.c0)<=('4170009124185661492')))) ISNULL));
SELECT * FROM v0;
SELECT DISTINCT v0.c1, v0.c2 FROM v0;
SELECT DISTINCT v0.c1, v0.c2 FROM v0 WHERE (CASE (+ (v0.c1))  WHEN ((v0.c0)>>(v0.c0)) THEN ((v0.c0)>>(v0.c0)) WHEN CAST(v0.c2 AS NUMERIC) THEN ((v0.c1)&(v0.c1)) WHEN ((NULL)<<(v0.c0)) THEN (v0.c0 IN ()) ELSE -1.574446438E9 END) UNION SELECT DISTINCT v0.c1, v0.c2 FROM v0 WHERE ((NOT (CASE (+ (v0.c1))  WHEN ((v0.c0)>>(v0.c0)) THEN ((v0.c0)>>(v0.c0)) WHEN CAST(v0.c2 AS NUMERIC) THEN ((v0.c1)&(v0.c1)) WHEN ((NULL)<<(v0.c0)) THEN (v0.c0 IN ()) ELSE -1.574446438E9 END))) UNION SELECT DISTINCT v0.c1, v0.c2 FROM v0 WHERE (((CASE (+ (v0.c1))  WHEN ((v0.c0)>>(v0.c0)) THEN ((v0.c0)>>(v0.c0)) WHEN CAST(v0.c2 AS NUMERIC) THEN ((v0.c1)&(v0.c1)) WHEN ((NULL)<<(v0.c0)) THEN (v0.c0 IN ()) ELSE -1.574446438E9 END) ISNULL));
SELECT DISTINCT v0.c1, v0.c2 FROM v0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 WHERE (((t0.c0) NOTNULL)) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT (((t0.c0) NOTNULL)))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE (((((t0.c0) NOTNULL)) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL v0.c1 FROM t0 INNER JOIN v0 ON (((v0.c1) NOTNULL) IN (v0.c2 COLLATE BINARY)) GROUP BY v0.c1;
SELECT ALL v0.c1 FROM t0 INNER JOIN v0 ON (((v0.c1) NOTNULL) IN (v0.c2 COLLATE BINARY)) GROUP BY v0.c1 HAVING MIN(COUNT(x'a069')) UNION ALL SELECT v0.c1 FROM t0 INNER JOIN v0 ON (((v0.c1) NOTNULL) IN (v0.c2 COLLATE BINARY)) GROUP BY v0.c1 HAVING (NOT (MIN(COUNT(x'a069')))) UNION ALL SELECT ALL v0.c1 FROM t0 INNER JOIN v0 ON (((v0.c1) NOTNULL) IN (v0.c2 COLLATE BINARY)) GROUP BY v0.c1 HAVING ((MIN(COUNT(x'a069'))) ISNULL);
SELECT ALL v0.c0, t0.c0, v0.c1, v0.c2 FROM v0, t0;
SELECT v0.c0, t0.c0, v0.c1, v0.c2 FROM v0, t0 WHERE ((- (PRINTF(v0.c0, NULL, v0.c1)))) UNION ALL SELECT ALL v0.c0, t0.c0, v0.c1, v0.c2 FROM v0, t0 WHERE ((NOT ((- (PRINTF(v0.c0, NULL, v0.c1)))))) UNION ALL SELECT v0.c0, t0.c0, v0.c1, v0.c2 FROM v0, t0 WHERE ((((- (PRINTF(v0.c0, NULL, v0.c1)))) ISNULL));
SELECT ALL v0.c0, t0.c0, v0.c1, v0.c2 FROM v0, t0;
SELECT DISTINCT * FROM t0, v0;
SELECT DISTINCT * FROM t0, v0 WHERE (((((v0.c0)>=(v0.c2))) NOT NULL)) UNION SELECT DISTINCT * FROM t0, v0 WHERE ((NOT (((((v0.c0)>=(v0.c2))) NOT NULL)))) UNION SELECT DISTINCT * FROM t0, v0 WHERE (((((((v0.c0)>=(v0.c2))) NOT NULL)) ISNULL));
SELECT DISTINCT * FROM t0, v0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE ((((((NULL) ISNULL)))>((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT ((((((NULL) ISNULL)))>((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((((((((NULL) ISNULL)))>((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))))) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL v0.c0, v0.c2, v0.c1, t0.c0 FROM t0 RIGHT OUTER JOIN v0 ON v0.c1 COLLATE NOCASE GROUP BY v0.c0, v0.c2, v0.c1, t0.c0;
SELECT ALL v0.c0, v0.c2, v0.c1, t0.c0 FROM t0 RIGHT OUTER JOIN v0 ON v0.c1 COLLATE NOCASE GROUP BY v0.c0, v0.c2, v0.c1, t0.c0 HAVING TOTAL(CASE WHEN TOTAL(v0.c2) THEN -224548178 WHEN t0.c0 THEN 'g&' WHEN v0.c2 THEN 0.0941133893237538 END) UNION ALL SELECT v0.c0, v0.c2, v0.c1, t0.c0 FROM t0 RIGHT OUTER JOIN v0 ON v0.c1 COLLATE NOCASE GROUP BY v0.c0, v0.c2, v0.c1, t0.c0 HAVING (NOT (TOTAL(CASE WHEN TOTAL(v0.c2) THEN -224548178 WHEN t0.c0 THEN 'g&' WHEN v0.c2 THEN 0.0941133893237538 END))) UNION ALL SELECT v0.c0, v0.c2, v0.c1, t0.c0 FROM t0 RIGHT OUTER JOIN v0 ON v0.c1 COLLATE NOCASE GROUP BY v0.c0, v0.c2, v0.c1, t0.c0 HAVING ((TOTAL(CASE WHEN TOTAL(v0.c2) THEN -224548178 WHEN t0.c0 THEN 'g&' WHEN v0.c2 THEN 0.0941133893237538 END)) ISNULL);
SELECT ALL t0.c0 FROM t0, v0;
SELECT ALL t0.c0 FROM t0, v0 WHERE ((((v0.c1)) BETWEEN ((v0.c1 COLLATE RTRIM)) AND ((CASE WHEN v0.c2 THEN t0.c0 WHEN v0.c1 THEN v0.c2 WHEN v0.c1 THEN v0.c1 ELSE v0.c2 END)))) UNION ALL SELECT t0.c0 FROM t0, v0 WHERE ((NOT ((((v0.c1)) BETWEEN ((v0.c1 COLLATE RTRIM)) AND ((CASE WHEN v0.c2 THEN t0.c0 WHEN v0.c1 THEN v0.c2 WHEN v0.c1 THEN v0.c1 ELSE v0.c2 END)))))) UNION ALL SELECT t0.c0 FROM t0, v0 WHERE ((((((v0.c1)) BETWEEN ((v0.c1 COLLATE RTRIM)) AND ((CASE WHEN v0.c2 THEN t0.c0 WHEN v0.c1 THEN v0.c2 WHEN v0.c1 THEN v0.c1 ELSE v0.c2 END)))) ISNULL));
SELECT ALL t0.c0 FROM t0, v0;
SELECT DISTINCT v0.c1, v0.c2, v0.c0 FROM v0;
SELECT DISTINCT v0.c1, v0.c2, v0.c0 FROM v0 WHERE (json_array_length((((v0.c2)) NOT BETWEEN ((v0.c2)) AND ((v0.c0))))) UNION SELECT DISTINCT v0.c1, v0.c2, v0.c0 FROM v0 WHERE ((NOT (json_array_length((((v0.c2)) NOT BETWEEN ((v0.c2)) AND ((v0.c0))))))) UNION SELECT DISTINCT v0.c1, v0.c2, v0.c0 FROM v0 WHERE (((json_array_length((((v0.c2)) NOT BETWEEN ((v0.c2)) AND ((v0.c0))))) ISNULL));
SELECT DISTINCT v0.c1, v0.c2, v0.c0 FROM v0;
SELECT ALL v0.c1, v0.c0, t0.c0, v0.c2 FROM v0 LEFT OUTER JOIN t0 ON ((((CASE v0.c0  WHEN v0.c2 THEN v0.c1 END)OR(NULL)))AND(LENGTH(t0.c0))) GROUP BY v0.c1, v0.c0, t0.c0, v0.c2;
SELECT ALL v0.c1, v0.c0, t0.c0, v0.c2 FROM v0 LEFT OUTER JOIN t0 ON ((((CASE v0.c0  WHEN v0.c2 THEN v0.c1 END)OR(NULL)))AND(LENGTH(t0.c0))) WHERE (CASE WHEN CASE WHEN t0.c0 THEN v0.c0 END THEN ((0.2637056317467692) NOT BETWEEN (v0.c1) AND (t0.c0)) WHEN ((v0.c1)%(v0.c0)) THEN ((0.5319299676358724) BETWEEN ('') AND (v0.c2)) WHEN v0.c0 THEN CASE v0.c1  WHEN v0.c1 THEN v0.c0 ELSE v0.c2 END END) GROUP BY v0.c1, v0.c0, t0.c0, v0.c2 UNION SELECT v0.c1, v0.c0, t0.c0, v0.c2 FROM v0 LEFT OUTER JOIN t0 ON ((((CASE v0.c0  WHEN v0.c2 THEN v0.c1 END)OR(NULL)))AND(LENGTH(t0.c0))) WHERE ((NOT (CASE WHEN CASE WHEN t0.c0 THEN v0.c0 END THEN ((0.2637056317467692) NOT BETWEEN (v0.c1) AND (t0.c0)) WHEN ((v0.c1)%(v0.c0)) THEN ((0.5319299676358724) BETWEEN ('') AND (v0.c2)) WHEN v0.c0 THEN CASE v0.c1  WHEN v0.c1 THEN v0.c0 ELSE v0.c2 END END))) GROUP BY v0.c1, v0.c0, t0.c0, v0.c2 UNION SELECT v0.c1, v0.c0, t0.c0, v0.c2 FROM v0 LEFT OUTER JOIN t0 ON ((((CASE v0.c0  WHEN v0.c2 THEN v0.c1 END)OR(NULL)))AND(LENGTH(t0.c0))) WHERE (((CASE WHEN CASE WHEN t0.c0 THEN v0.c0 END THEN ((0.2637056317467692) NOT BETWEEN (v0.c1) AND (t0.c0)) WHEN ((v0.c1)%(v0.c0)) THEN ((0.5319299676358724) BETWEEN ('') AND (v0.c2)) WHEN v0.c0 THEN CASE v0.c1  WHEN v0.c1 THEN v0.c0 ELSE v0.c2 END END) ISNULL)) GROUP BY v0.c1, v0.c0, t0.c0, v0.c2;
SELECT ALL v0.c1, v0.c0, t0.c0, v0.c2 FROM v0 LEFT OUTER JOIN t0 ON ((((CASE v0.c0  WHEN v0.c2 THEN v0.c1 END)OR(NULL)))AND(LENGTH(t0.c0))) GROUP BY v0.c1, v0.c0, t0.c0, v0.c2;
