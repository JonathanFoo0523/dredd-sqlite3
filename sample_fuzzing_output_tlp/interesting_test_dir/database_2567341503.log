-- Time: 2024/06/09 06:45:53
-- Database: database3
-- Database version: 3.40.0
-- seed value: 2567341503
PRAGMA cache_size = 50000; -- 13ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA case_sensitive_like=ON; -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree(c0, c1, c2, c3, c4); -- 1ms;
REINDEX; -- 0ms;
UPDATE OR IGNORE rt0 SET (c1, c4)=(0.8346413245312801, x''); -- 0ms;
INSERT OR FAIL INTO rt0(c0, c1, c4, c3) VALUES (x'', '0.8346413245312801', 313926240, 3.1392624E8); -- 0ms;
INSERT OR IGNORE INTO rt0(c1, c4, c0) VALUES (0.011758227847642022, NULL, x'390b'); -- 0ms;
ANALYZE sqlite_master; -- 1ms;
BEGIN  TRANSACTION; -- 0ms;
PRAGMA temp.checkpoint_fullfsync = true; -- 0ms;
PRAGMA main.cache_spill = -1391214619841050482; -- 0ms;
UPDATE OR IGNORE rt0 SET (c2)=(0.3208335469667899) WHERE x''; -- 1ms;
CREATE VIRTUAL TABLE rt1 USING rtree(c0, c1, c2); -- 0ms;
INSERT OR REPLACE INTO rt1 VALUES (NULL, 'I)d푷g', '-30762394'); -- 0ms;
INSERT OR ROLLBACK INTO rt1(c2) VALUES (NULL); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '1920852599 unordered noskipscan'); -- 1ms;
INSERT OR REPLACE INTO rt0(c2) VALUES ('1920852599'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR IGNORE rt0 SET c3='i)d푷g'; -- 0ms;
COMMIT; -- 0ms;
INSERT OR IGNORE INTO rt0(c0, c1, c2, c3, c4) VALUES (x'', 0.5253040922174236, 0.01038509777968688, 313926240, 0.3220137949919303), (x'', '438093739', NULL, x'877ca4e5', 0.00922377737442548), ('156460090', NULL, 'jK', NULL, 'I)d푷g'); -- 0ms;
UPDATE OR IGNORE rt0 SET c3=x'' WHERE (NOT (((rt0.c2) ISNULL))); -- 0ms;
INSERT OR IGNORE INTO rt0(c2, c4, c3, c1, c0) VALUES ('2090439585', NULL, x'd3ee', '5吁', NULL); -- 0ms;
INSERT OR IGNORE INTO rt0(c0, c4, c2, c3, c1) VALUES (0.3220137949919303, NULL, x'd1f5', x'', NULL), (NULL, 0.00922377737442548, 0.2361453613635247, '|)', 'w'), (NULL, x'4515', 1856491891, '-638859100', ''), (0.33206662685609634, NULL, x'', x'7814', NULL), (0.9011205321123059, NULL, 'w', 0.11699830777532327, -2057328822); -- 0ms;
UPDATE OR REPLACE rt0 SET c0=x'' WHERE ((((((rt0.c1)AND(rt0.c4)))AND(rt0.c0)))GLOB(0.25256554755235083)); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO rt0(c4) VALUES ('438093739'); -- 1ms;
INSERT OR IGNORE INTO rt0(c2, c0, c1) VALUES (x'', x'ea3b', '2140778249'); -- 0ms;
UPDATE OR IGNORE rt0 SET (c4, c1)=('', NULL); -- 0ms;
UPDATE rt0 SET c3=0.016692031559900622; -- 5ms;
UPDATE OR REPLACE rt0 SET c0=x'', c3=NULL, c4='C'; -- 0ms;
UPDATE OR REPLACE rt0 SET c3=NULL, c2=x'' WHERE 'Rf'; -- 0ms;
UPDATE rt0 SET c0=x''; -- 0ms;
INSERT OR IGNORE INTO rt0(c0, c4, c2, c1) VALUES (4.38093739E8, '', NULL, '1193498576'), ('-1346752259', 'E携', NULL, x'098e'), (x'', NULL, NULL, x''); -- 1ms;
PRAGMA main.secure_delete = false; -- 0ms;
REINDEX  rt0; -- 0ms;
UPDATE OR FAIL rt0 SET c0=0.378142755666817; -- 0ms;
UPDATE OR IGNORE rt0 SET c4=0.5926934942968306, c4='nR' WHERE rt0.c2; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR ABORT INTO rt0(c2, c0, c1) VALUES (x'', 0.3598916563728347, x''), (x'', 0Xffffffffca5dd477, x'f0b5'), ('~', 0.9743009071320632, 2.140778249E9), (0.8247090765564267, NULL, 0.08425787741692492), (0.5523886318585853, NULL, x''); -- 0ms;
INSERT OR ABORT INTO rt0(c4, c2) VALUES (0xffffffff911aaeb1, '1920852599'); -- 0ms;
INSERT OR ROLLBACK INTO rt0(c2, c0) VALUES ('', x''), (x'', 0.7784417537523566), (0X17fda97a, x''); -- 1ms;
INSERT OR IGNORE INTO rt0(c2, c4, c0, c3, c1) VALUES (0.3904739035843168, x'372c', NULL, '0.08425787741692492', 0.3128640489357618); -- 0ms;
COMMIT TRANSACTION; -- 0ms;
UPDATE rt0 SET c3='-899820425' WHERE (((NULL) NOTNULL) IN ((rt0.c2 IN (rt0.c2)))); -- 0ms;
PRAGMA main.short_column_names = true; -- 0ms;
UPDATE OR IGNORE rt0 SET c2=x''; -- 1ms;
PRAGMA ignore_check_constraints = false; -- 0ms;
INSERT OR FAIL INTO rt0(c3, c1, c4) VALUES (NULL, '-305410475', 0.5253040922174236); -- 0ms;
END TRANSACTION; -- 0ms;
REINDEX BINARY; -- 0ms;
INSERT OR IGNORE INTO rt0(c3, c2, c1) VALUES (NULL, TRIM(CASE WHEN '?ꐷ3%({v6x' THEN NULL END, (((('1191044823')AND('')))OR(0X953643a))), ''); -- 0ms;
PRAGMA temp.incremental_vacuum; -- 0ms;
UPDATE OR IGNORE rt0 SET c2=0x19b17d7b, c0=-1860522319, c0='0.3220137949919303' WHERE ((rt0.c3)IS(((rt0.c2)-(rt0.c3)))); -- 1ms;
REINDEX; -- 0ms;
UPDATE OR ROLLBACK rt0 SET (c0)=('jK') WHERE (NOT (NULLIF(rt0.c4, rt0.c0))); -- 0ms;
UPDATE OR IGNORE rt0 SET (c4)=(0.8247090765564267); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR IGNORE rt0 SET c4='' WHERE ((((rt0.c2) IS TRUE))IS(json_type(rt0.c2))); -- 0ms;
INSERT OR IGNORE INTO rt0 VALUES (0.3936065189149027, '', 0.7654358212408243, 0.8930975861575788, 0.9916667061670039), (NULL, NULL, '%qlv', x'', 0.41807396071166913), (x'7217dabd', NULL, '', x'', -1.860522319E9); -- 0ms;
INSERT OR IGNORE INTO rt0(c4, c1, c0, c2) VALUES (633361968, -3.05410475E8, x'', 'uu'); -- 0ms;
END; -- 0ms;
END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((1074439223) ISNULL) THEN (('nR') BETWEEN ('-698681902') AND ('mQ')) WHEN ((NULL)OR(NULL)) THEN 0.5311017768067595 COLLATE BINARY WHEN ((x'') IS TRUE) THEN ((0.8869600828182671) NOT NULL) END; -- 0ms;
INSERT OR ABORT INTO rt0(c4) VALUES (2.140778249E9), (x''), ('438093739'); -- 0ms;
INSERT OR REPLACE INTO rt0 VALUES ('0.41807396071166913', x'b5069081', x'', 't,rG>', NULL); -- 1ms;
UPDATE OR IGNORE rt0 SET (c0, c3)=(x'', -282982549) WHERE ((((rt0.c0)OR('-1860522319')))OR(((((((((rt0.c4)OR(rt0.c1)))OR(rt0.c2)))AND(rt0.c2)))AND(rt0.c2)))); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
ANALYZE; -- 0ms;
INSERT OR FAIL INTO rt0(c0, c4, c3) VALUES (NULL, NULL, 0.059649455235526005), (NULL, 0.6756789939226312, -1860522319), (0.930952340558052, x'', '438093739'); -- 0ms;
INSERT OR IGNORE INTO rt0(c2, c3, c4) VALUES (NULL, NULL, '156460090'), ('.F絻87q', 0.21355011659778145, NULL), (-1.7976931348623157E308, '1156587717', NULL); -- 0ms;
INSERT OR IGNORE INTO rt0(c4, c0, c2, c1, c3) VALUES (NULL, NULL, '-1921144082', NULL, x''), (NULL, 'p莑', x'', 0.3904739035843168, NULL), (0.27266685117323664, x'254b', 0.0, 'MRH', 0.14092507387873787); -- 0ms;
UPDATE OR ABORT rt0 SET (c2, c4)=('1370389963', NULL) WHERE ((rt0.c2 COLLATE RTRIM)AND(((rt0.c4) IS FALSE))); -- 0ms;
UPDATE rt0 SET (c1, c1, c0)=(x'43a5', NULL, 0xffffffffef22076b) WHERE CAST((rt0.c2 IN (rt0.c2, rt0.c1)) AS BLOB); -- 0ms;
UPDATE rt0 SET (c0)=(x''); -- 0ms;
UPDATE OR REPLACE rt0 SET c4=x'23a3' WHERE 0.8869600828182671; -- 0ms;
UPDATE OR IGNORE rt0 SET c4='', c0=178401173 WHERE ((x'72f0' COLLATE RTRIM)/(CAST(rt0.c3 AS NUMERIC))); -- 0ms;
INSERT OR IGNORE INTO rt0(c0, c2) VALUES (x'0a79', x'7f45'), ('2034029315', x''), (2034029315, NULL); -- 0ms;
UPDATE OR IGNORE rt0 SET c3=x'', c4=0.7319883876228463, c0='-1458856319', c1='<''' WHERE ((((0x5586e3ea) NOT BETWEEN (rt0.c4) AND (rt0.c3))) BETWEEN (CAST(rt0.c0 AS NUMERIC)) AND (rt0.c4)); -- 0ms;
CREATE TEMP VIEW  IF NOT EXISTS v0(c0) AS SELECT DISTINCT CASE WHEN ((x'')IS(rt0.c0)) THEN rt0.c0 ELSE (rt0.c3 IN ()) END FROM rt0 WHERE (CAST(x'' AS REAL)) ORDER BY (((rt0.c3)) BETWEEN ((((rt0.c3)LIKE(rt0.c2)))) AND (((NULL IN ()))))  NULLS FIRST; -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO rt0(c0, c2, c4, c3) VALUES (x'', 0X47135a3d, NULL, x''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', '-899820425 824020105 sz=1290363456'); -- 0ms;
ANALYZE; -- 0ms;
DELETE FROM rt0; -- 0ms;
INSERT OR IGNORE INTO rt0 VALUES ('mQ', 0Xffffffffba8c26e4, 313926240, 0.016692031559900622, x''), ('954904137', x'', x'ca881d55', x'd32e50b1', x'ed24'), (x'', 0.21355011659778145, NULL, '-Infinity(', x''); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR ROLLBACK INTO rt0(c0) VALUES (''); -- 0ms;
INSERT OR IGNORE INTO rt0(c4, c1, c0) VALUES (NULL, x'', 0.8930975861575788), ('2猅A7j', 0.7598950713259813, 'hHLWe5]%/'), ('', '', '-2116879618'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
ANALYZE; -- 0ms;
PRAGMA main.default_cache_size = -1600326761; -- 0ms;
UPDATE OR IGNORE rt0 SET (c4, c2, c4)=(0.47167079447218385, 0x6a985720, '903947109') WHERE 0.6796857918074091; -- 1ms;
UPDATE OR REPLACE rt0 SET (c4)=(x'') WHERE CAST(((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c3)) AS INTEGER); -- 0ms;
INSERT OR FAIL INTO rt0(c1) VALUES (0.05014131217970763); -- 0ms;
INSERT OR IGNORE INTO rt0(c4, c1, c0) VALUES ('q', 0.4453296672711139, '335066549'); -- 0ms;
VACUUM main; -- 1ms;
PRAGMA threads = 131469077522387018; -- 0ms;
REINDEX; -- 0ms;
INSERT OR ABORT INTO rt0(c3, c0) VALUES (NULL, '(\n'), (x'f350', 0.336870538877582), ('-1165220124', '0.8930975861575788'), (NULL, ''']. +'), ('-960403362', '0.11699830777532327'); -- 0ms;
INSERT OR ROLLBACK INTO rt0(c4) VALUES (NULL), ('|)'), (x''); -- 0ms;
UPDATE OR IGNORE rt0 SET (c3, c1)=(-2.102963199E9, 0.5549070885214961); -- 0ms;
INSERT OR IGNORE INTO rt0(c2, c0) VALUES (x'', x''), (NULL, ''), (0xf673436, 954904137); -- 0ms;
INSERT OR REPLACE INTO rt0(c3, c4) VALUES (NULL, NULL), (x'', x''), (NULL, x''), (0x400aa437, -335847617), (NULL, 0.6535911851289529); -- 1ms;
INSERT OR IGNORE INTO rt0(c2, c4, c0) VALUES (x'b038', '258421814', x'c999e45d'); -- 0ms;
INSERT OR IGNORE INTO rt0(c0, c1, c3) VALUES (0.7114523133571067, 0X5295b72e, NULL), ('-30762394', x'', NULL), (0.7319883876228463, 0.9995663430279519, NULL); -- 1ms;
COMMIT; -- 0ms;
UPDATE OR IGNORE rt0 SET c2=x''; -- 0ms;
UPDATE rt0 SET c0=0.33849587615401844 WHERE CAST(((((rt0.c0)AND(rt0.c2)))OR(rt0.c0)) AS NUMERIC); -- 0ms;
UPDATE rt0 SET (c0, c2)=(x'4481', 0.14092507387873787) WHERE (((((rt0.c3)*(rt0.c0))))>(((rt0.c3 IN ())))); -- 0ms;
UPDATE OR IGNORE rt0 SET c1=x'f642'; -- 0ms;
INSERT OR REPLACE INTO rt0(c1, c3, c0, c2) VALUES (0.5947842827810157, x'', x'bf77', 'TRUE'), (0xffffffffd9ebc8a4, NULL, NULL, ((x'' COLLATE NOCASE) NOTNULL)), (0.3220137949919303, -6.388591E8, 'qkmZ!lvi', '1884252449'); -- 1ms;
INSERT OR FAIL INTO rt0(c4) VALUES (''); -- 0ms;
REINDEX; -- 0ms;
COMMIT; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT rt0.c3, rt0.c1 FROM rt0, v0;
SELECT rt0.c3, rt0.c1 FROM rt0, v0 WHERE ((((0.798600052139397))<=((rt0.c0))) COLLATE BINARY) UNION ALL SELECT rt0.c3, rt0.c1 FROM rt0, v0 WHERE ((NOT ((((0.798600052139397))<=((rt0.c0))) COLLATE BINARY))) UNION ALL SELECT rt0.c3, rt0.c1 FROM rt0, v0 WHERE ((((((0.798600052139397))<=((rt0.c0))) COLLATE BINARY) ISNULL));
SELECT rt0.c3, rt0.c1 FROM rt0, v0;
SELECT DISTINCT * FROM v0 NOT INDEXED;
SELECT DISTINCT * FROM v0 WHERE (CASE WHEN v0.c0 COLLATE NOCASE THEN v0.c0 WHEN CASE v0.c0  WHEN NULL THEN v0.c0 ELSE v0.c0 END THEN (((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, x'', v0.c0))) WHEN ((0.9461552677514367) IS TRUE) THEN v0.c0 END) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (CASE WHEN v0.c0 COLLATE NOCASE THEN v0.c0 WHEN CASE v0.c0  WHEN NULL THEN v0.c0 ELSE v0.c0 END THEN (((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, x'', v0.c0))) WHEN ((0.9461552677514367) IS TRUE) THEN v0.c0 END))) UNION SELECT DISTINCT * FROM v0 WHERE (((CASE WHEN v0.c0 COLLATE NOCASE THEN v0.c0 WHEN CASE v0.c0  WHEN NULL THEN v0.c0 ELSE v0.c0 END THEN (((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, x'', v0.c0))) WHEN ((0.9461552677514367) IS TRUE) THEN v0.c0 END) ISNULL));
SELECT DISTINCT * FROM v0 NOT INDEXED;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 NOT INDEXED, v0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0, v0 WHERE ((((rt0.c4)) BETWEEN ((x'')) AND (((- (rt0.c0)))))) GROUP BY rt0.c2, rt0.c1, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0, v0 WHERE ((NOT ((((rt0.c4)) BETWEEN ((x'')) AND (((- (rt0.c0)))))))) GROUP BY rt0.c2, rt0.c1, rt0.c0 UNION SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0, v0 WHERE ((((((rt0.c4)) BETWEEN ((x'')) AND (((- (rt0.c0)))))) ISNULL)) GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 NOT INDEXED, v0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT ALL rt0.c4, rt0.c0 FROM rt0, v0 GROUP BY rt0.c4, rt0.c0;
SELECT ALL rt0.c4, rt0.c0 FROM rt0, v0 GROUP BY rt0.c4, rt0.c0 HAVING (COUNT(*) IN (GROUP_CONCAT(rt0.c1), rt0.c4 COLLATE RTRIM)) UNION ALL SELECT rt0.c4, rt0.c0 FROM rt0, v0 GROUP BY rt0.c4, rt0.c0 HAVING (NOT ((COUNT(*) IN (GROUP_CONCAT(rt0.c1), rt0.c4 COLLATE RTRIM)))) UNION ALL SELECT rt0.c4, rt0.c0 FROM rt0, v0 GROUP BY rt0.c4, rt0.c0 HAVING (((COUNT(*) IN (GROUP_CONCAT(rt0.c1), rt0.c4 COLLATE RTRIM))) ISNULL);
SELECT ALL rt0.c4, rt0.c0 FROM rt0, v0 GROUP BY rt0.c4, rt0.c0;
SELECT ALL rt0.c4, rt0.c0 FROM rt0, v0 GROUP BY rt0.c4, rt0.c0 HAVING (COUNT(*) IN (GROUP_CONCAT(rt0.c1), rt0.c4 COLLATE RTRIM)) UNION ALL SELECT rt0.c4, rt0.c0 FROM rt0, v0 GROUP BY rt0.c4, rt0.c0 HAVING (NOT ((COUNT(*) IN (GROUP_CONCAT(rt0.c1), rt0.c4 COLLATE RTRIM)))) UNION ALL SELECT rt0.c4, rt0.c0 FROM rt0, v0 GROUP BY rt0.c4, rt0.c0 HAVING (((COUNT(*) IN (GROUP_CONCAT(rt0.c1), rt0.c4 COLLATE RTRIM))) ISNULL);
SELECT ALL rt0.c4, rt0.c0 FROM rt0, v0 GROUP BY rt0.c4, rt0.c0;
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE ((~ (((NULL)LIKE(rt0.c4))))) UNION ALL SELECT * FROM rt0 WHERE ((NOT ((~ (((NULL)LIKE(rt0.c4))))))) UNION ALL SELECT * FROM rt0 WHERE ((((~ (((NULL)LIKE(rt0.c4))))) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT rt0.c3, v0.c0, rt0.c2, rt0.c4 FROM rt0, v0;
SELECT DISTINCT rt0.c3, v0.c0, rt0.c2, rt0.c4 FROM rt0, v0 WHERE ((((v0.c0))<((NULL))) COLLATE BINARY) UNION SELECT DISTINCT rt0.c3, v0.c0, rt0.c2, rt0.c4 FROM rt0, v0 WHERE ((NOT ((((v0.c0))<((NULL))) COLLATE BINARY))) UNION SELECT DISTINCT rt0.c3, v0.c0, rt0.c2, rt0.c4 FROM rt0, v0 WHERE ((((((v0.c0))<((NULL))) COLLATE BINARY) ISNULL));
SELECT DISTINCT rt0.c3, v0.c0, rt0.c2, rt0.c4 FROM rt0, v0;
SELECT v0.c0 FROM v0 NOT INDEXED GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (0.050163792314299904 COLLATE RTRIM) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT (0.050163792314299904 COLLATE RTRIM))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((0.050163792314299904 COLLATE RTRIM) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 NOT INDEXED GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING COUNT(((v0.c0)*(GROUP_CONCAT(MIN(MIN(TOTAL(TOTAL(v0.c0)))))))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (COUNT(((v0.c0)*(GROUP_CONCAT(MIN(MIN(TOTAL(TOTAL(v0.c0)))))))))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((COUNT(((v0.c0)*(GROUP_CONCAT(MIN(MIN(TOTAL(TOTAL(v0.c0))))))))) ISNULL);
SELECT TOTAL((NOT (v0.c0)) COLLATE RTRIM) FROM v0 ORDER BY ((NULLIF(DISTINCT v0.c0, x'')) NOT BETWEEN (x'') AND ((~ (v0.c0))))  NULLS LAST;
SELECT ALL rt0.c0, rt0.c2, rt0.c1, rt0.c4 FROM rt0, v0;
SELECT ALL rt0.c0, rt0.c2, rt0.c1, rt0.c4 FROM rt0, v0 WHERE (STRFTIME(((rt0.c2)<=(rt0.c2)), ((rt0.c4) ISNULL), (((rt0.c3, rt0.c4, rt0.c0)) NOT BETWEEN ((rt0.c2, rt0.c1, 0.6981095069641716)) AND (('', rt0.c2, v0.c0))))) UNION ALL SELECT ALL rt0.c0, rt0.c2, rt0.c1, rt0.c4 FROM rt0, v0 WHERE ((NOT (STRFTIME(((rt0.c2)<=(rt0.c2)), ((rt0.c4) ISNULL), (((rt0.c3, rt0.c4, rt0.c0)) NOT BETWEEN ((rt0.c2, rt0.c1, 0.6981095069641716)) AND (('', rt0.c2, v0.c0))))))) UNION ALL SELECT ALL rt0.c0, rt0.c2, rt0.c1, rt0.c4 FROM rt0, v0 WHERE (((STRFTIME(((rt0.c2)<=(rt0.c2)), ((rt0.c4) ISNULL), (((rt0.c3, rt0.c4, rt0.c0)) NOT BETWEEN ((rt0.c2, rt0.c1, 0.6981095069641716)) AND (('', rt0.c2, v0.c0))))) ISNULL));
SELECT ALL rt0.c0, rt0.c2, rt0.c1, rt0.c4 FROM rt0, v0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((((rt0.c4) BETWEEN (1.193498576E9) AND (rt0.c1)) IN ())) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((((rt0.c4) BETWEEN (1.193498576E9) AND (rt0.c1)) IN ())))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((((rt0.c4) BETWEEN (1.193498576E9) AND (rt0.c1)) IN ())) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c2, v0.c0, rt0.c4, rt0.c1 FROM rt0 LEFT OUTER JOIN v0 ON ((rt0.c4 COLLATE BINARY)OR(((((rt0.c2)AND(rt0.c4)))AND(rt0.c0)))) GROUP BY rt0.c2, v0.c0, rt0.c4, rt0.c1;
SELECT rt0.c2, v0.c0, rt0.c4, rt0.c1 FROM rt0 LEFT OUTER JOIN v0 ON ((rt0.c4 COLLATE BINARY)OR(((((rt0.c2)AND(rt0.c4)))AND(rt0.c0)))) WHERE (0.7145520848341813) GROUP BY rt0.c2, v0.c0, rt0.c4, rt0.c1 UNION SELECT ALL rt0.c2, v0.c0, rt0.c4, rt0.c1 FROM rt0 LEFT OUTER JOIN v0 ON ((rt0.c4 COLLATE BINARY)OR(((((rt0.c2)AND(rt0.c4)))AND(rt0.c0)))) WHERE ((NOT (0.7145520848341813))) GROUP BY rt0.c2, v0.c0, rt0.c4, rt0.c1 UNION SELECT rt0.c2, v0.c0, rt0.c4, rt0.c1 FROM rt0 LEFT OUTER JOIN v0 ON ((rt0.c4 COLLATE BINARY)OR(((((rt0.c2)AND(rt0.c4)))AND(rt0.c0)))) WHERE (((0.7145520848341813) ISNULL)) GROUP BY rt0.c2, v0.c0, rt0.c4, rt0.c1;
SELECT rt0.c2, v0.c0, rt0.c4, rt0.c1 FROM rt0 LEFT OUTER JOIN v0 ON ((rt0.c4 COLLATE BINARY)OR(((((rt0.c2)AND(rt0.c4)))AND(rt0.c0)))) GROUP BY rt0.c2, v0.c0, rt0.c4, rt0.c1;
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING MIN(CAST(rt0.c4 AS INTEGER)) UNION ALL SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING (NOT (MIN(CAST(rt0.c4 AS INTEGER)))) UNION ALL SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING ((MIN(CAST(rt0.c4 AS INTEGER))) ISNULL);
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING MIN(CAST(rt0.c4 AS INTEGER)) UNION ALL SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING (NOT (MIN(CAST(rt0.c4 AS INTEGER)))) UNION ALL SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING ((MIN(CAST(rt0.c4 AS INTEGER))) ISNULL);
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE (((CAST(rt0.c2 AS NUMERIC)) NOT BETWEEN ((- (rt0.c4))) AND ((rt0.c3 IN (rt0.c1))))) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (((CAST(rt0.c2 AS NUMERIC)) NOT BETWEEN ((- (rt0.c4))) AND ((rt0.c3 IN (rt0.c1))))))) UNION ALL SELECT * FROM rt0 WHERE (((((CAST(rt0.c2 AS NUMERIC)) NOT BETWEEN ((- (rt0.c4))) AND ((rt0.c3 IN (rt0.c1))))) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((('rU') NOT BETWEEN (rt0.c1) AND (rt0.c3)) IN ())) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((('rU') NOT BETWEEN (rt0.c1) AND (rt0.c3)) IN ())))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((('rU') NOT BETWEEN (rt0.c1) AND (rt0.c3)) IN ())) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c3 FROM rt0 GROUP BY rt0.c3;
SELECT rt0.c3 FROM rt0 WHERE (CASE CAST(rt0.c4 AS BLOB)  WHEN (rt0.c2 IN (rt0.c0, rt0.c4)) THEN ((rt0.c3)IS NOT(NULL)) END) GROUP BY rt0.c3 UNION SELECT ALL rt0.c3 FROM rt0 WHERE ((NOT (CASE CAST(rt0.c4 AS BLOB)  WHEN (rt0.c2 IN (rt0.c0, rt0.c4)) THEN ((rt0.c3)IS NOT(NULL)) END))) GROUP BY rt0.c3 UNION SELECT ALL rt0.c3 FROM rt0 WHERE (((CASE CAST(rt0.c4 AS BLOB)  WHEN (rt0.c2 IN (rt0.c0, rt0.c4)) THEN ((rt0.c3)IS NOT(NULL)) END) ISNULL)) GROUP BY rt0.c3;
SELECT ALL rt0.c3 FROM rt0 GROUP BY rt0.c3;
SELECT ALL rt0.c4, rt0.c1, rt0.c3, rt0.c0 FROM rt0, v0 GROUP BY rt0.c4, rt0.c1, rt0.c3, rt0.c0;
SELECT rt0.c4, rt0.c1, rt0.c3, rt0.c0 FROM rt0, v0 GROUP BY rt0.c4, rt0.c1, rt0.c3, rt0.c0 HAVING SUM(((((rt0.c0)AND(rt0.c3)))OR(v0.c0))) UNION ALL SELECT ALL rt0.c4, rt0.c1, rt0.c3, rt0.c0 FROM rt0, v0 GROUP BY rt0.c4, rt0.c1, rt0.c3, rt0.c0 HAVING (NOT (SUM(((((rt0.c0)AND(rt0.c3)))OR(v0.c0))))) UNION ALL SELECT rt0.c4, rt0.c1, rt0.c3, rt0.c0 FROM rt0, v0 GROUP BY rt0.c4, rt0.c1, rt0.c3, rt0.c0 HAVING ((SUM(((((rt0.c0)AND(rt0.c3)))OR(v0.c0)))) ISNULL);
SELECT ALL rt0.c4, rt0.c1, rt0.c3, rt0.c0 FROM rt0, v0 GROUP BY rt0.c4, rt0.c1, rt0.c3, rt0.c0;
SELECT rt0.c4, rt0.c1, rt0.c3, rt0.c0 FROM rt0, v0 GROUP BY rt0.c4, rt0.c1, rt0.c3, rt0.c0 HAVING SUM(((((rt0.c0)AND(rt0.c3)))OR(v0.c0))) UNION ALL SELECT ALL rt0.c4, rt0.c1, rt0.c3, rt0.c0 FROM rt0, v0 GROUP BY rt0.c4, rt0.c1, rt0.c3, rt0.c0 HAVING (NOT (SUM(((((rt0.c0)AND(rt0.c3)))OR(v0.c0))))) UNION ALL SELECT rt0.c4, rt0.c1, rt0.c3, rt0.c0 FROM rt0, v0 GROUP BY rt0.c4, rt0.c1, rt0.c3, rt0.c0 HAVING ((SUM(((((rt0.c0)AND(rt0.c3)))OR(v0.c0)))) ISNULL);
SELECT ALL rt0.c4, rt0.c1, rt0.c3, rt0.c0 FROM rt0, v0 GROUP BY rt0.c4, rt0.c1, rt0.c3, rt0.c0;
SELECT ALL v0.c0 FROM v0;
SELECT ALL v0.c0 FROM v0 WHERE ((((v0.c0)) BETWEEN (((((v0.c0, v0.c0, v0.c0))<=((v0.c0, NULL, v0.c0))))) AND ((CHANGES())))) UNION ALL SELECT v0.c0 FROM v0 WHERE ((NOT ((((v0.c0)) BETWEEN (((((v0.c0, v0.c0, v0.c0))<=((v0.c0, NULL, v0.c0))))) AND ((CHANGES())))))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE ((((((v0.c0)) BETWEEN (((((v0.c0, v0.c0, v0.c0))<=((v0.c0, NULL, v0.c0))))) AND ((CHANGES())))) ISNULL));
SELECT ALL v0.c0 FROM v0;
SELECT DISTINCT * FROM v0, rt0;
SELECT DISTINCT * FROM v0, rt0 WHERE (CAST(((v0.c0)>(rt0.c3)) AS NUMERIC)) UNION SELECT DISTINCT * FROM v0, rt0 WHERE ((NOT (CAST(((v0.c0)>(rt0.c3)) AS NUMERIC)))) UNION SELECT DISTINCT * FROM v0, rt0 WHERE (((CAST(((v0.c0)>(rt0.c3)) AS NUMERIC)) ISNULL));
SELECT DISTINCT * FROM v0, rt0;
SELECT ALL rt0.c4, rt0.c0 FROM rt0, v0 GROUP BY rt0.c4, rt0.c0;
SELECT ALL rt0.c4, rt0.c0 FROM rt0, v0 WHERE (CASE '!7'  WHEN rt0.c2 THEN ((rt0.c0) NOT NULL) WHEN ((rt0.c2)|(rt0.c3)) THEN CASE WHEN v0.c0 THEN '' END WHEN '-1989925242' THEN ((rt0.c3)|(rt0.c2)) ELSE (rt0.c0 IN ()) END) GROUP BY rt0.c4, rt0.c0 UNION SELECT rt0.c4, rt0.c0 FROM rt0, v0 WHERE ((NOT (CASE '!7'  WHEN rt0.c2 THEN ((rt0.c0) NOT NULL) WHEN ((rt0.c2)|(rt0.c3)) THEN CASE WHEN v0.c0 THEN '' END WHEN '-1989925242' THEN ((rt0.c3)|(rt0.c2)) ELSE (rt0.c0 IN ()) END))) GROUP BY rt0.c4, rt0.c0 UNION SELECT ALL rt0.c4, rt0.c0 FROM rt0, v0 WHERE (((CASE '!7'  WHEN rt0.c2 THEN ((rt0.c0) NOT NULL) WHEN ((rt0.c2)|(rt0.c3)) THEN CASE WHEN v0.c0 THEN '' END WHEN '-1989925242' THEN ((rt0.c3)|(rt0.c2)) ELSE (rt0.c0 IN ()) END) ISNULL)) GROUP BY rt0.c4, rt0.c0;
SELECT ALL rt0.c4, rt0.c0 FROM rt0, v0 GROUP BY rt0.c4, rt0.c0;
SELECT rt0.c0, rt0.c2, rt0.c3, v0.c0, rt0.c4 FROM v0, rt0 GROUP BY rt0.c0, rt0.c2, rt0.c3, v0.c0, rt0.c4;
SELECT ALL rt0.c0, rt0.c2, rt0.c3, v0.c0, rt0.c4 FROM v0, rt0 GROUP BY rt0.c0, rt0.c2, rt0.c3, v0.c0, rt0.c4 HAVING MIN(MIN(rt0.c1)) UNION ALL SELECT rt0.c0, rt0.c2, rt0.c3, v0.c0, rt0.c4 FROM v0, rt0 GROUP BY rt0.c0, rt0.c2, rt0.c3, v0.c0, rt0.c4 HAVING (NOT (MIN(MIN(rt0.c1)))) UNION ALL SELECT ALL rt0.c0, rt0.c2, rt0.c3, v0.c0, rt0.c4 FROM v0, rt0 GROUP BY rt0.c0, rt0.c2, rt0.c3, v0.c0, rt0.c4 HAVING ((MIN(MIN(rt0.c1))) ISNULL);
SELECT rt0.c3 FROM rt0, v0;
SELECT ALL rt0.c3 FROM rt0, v0 WHERE ((((rt0.c2 COLLATE NOCASE, ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)), (((v0.c0)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c2)))))>((((v0.c0)<(rt0.c0)), ((0.6252187421130596) IS TRUE), (rt0.c2 IN (rt0.c4)))))) UNION ALL SELECT ALL rt0.c3 FROM rt0, v0 WHERE ((NOT ((((rt0.c2 COLLATE NOCASE, ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)), (((v0.c0)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c2)))))>((((v0.c0)<(rt0.c0)), ((0.6252187421130596) IS TRUE), (rt0.c2 IN (rt0.c4)))))))) UNION ALL SELECT ALL rt0.c3 FROM rt0, v0 WHERE ((((((rt0.c2 COLLATE NOCASE, ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)), (((v0.c0)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c2)))))>((((v0.c0)<(rt0.c0)), ((0.6252187421130596) IS TRUE), (rt0.c2 IN (rt0.c4)))))) ISNULL));
SELECT rt0.c3 FROM rt0, v0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (((((v0.c0) NOT BETWEEN (v0.c0) AND (x'')))*(ABS(DISTINCT v0.c0)))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (((((v0.c0) NOT BETWEEN (v0.c0) AND (x'')))*(ABS(DISTINCT v0.c0)))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((((((v0.c0) NOT BETWEEN (v0.c0) AND (x'')))*(ABS(DISTINCT v0.c0)))) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT ALL rt0.c0, rt0.c3, rt0.c4 FROM rt0 GROUP BY rt0.c0, rt0.c3, rt0.c4;
SELECT ALL rt0.c0, rt0.c3, rt0.c4 FROM rt0 WHERE (((((rt0.c1 IN (rt0.c2))))<=((x'48dc')))) GROUP BY rt0.c0, rt0.c3, rt0.c4 UNION SELECT rt0.c0, rt0.c3, rt0.c4 FROM rt0 WHERE ((NOT (((((rt0.c1 IN (rt0.c2))))<=((x'48dc')))))) GROUP BY rt0.c0, rt0.c3, rt0.c4 UNION SELECT rt0.c0, rt0.c3, rt0.c4 FROM rt0 WHERE (((((((rt0.c1 IN (rt0.c2))))<=((x'48dc')))) ISNULL)) GROUP BY rt0.c0, rt0.c3, rt0.c4;
SELECT ALL rt0.c0, rt0.c3, rt0.c4 FROM rt0 GROUP BY rt0.c0, rt0.c3, rt0.c4;
SELECT ALL rt0.c1, rt0.c2, rt0.c0, rt0.c3, v0.c0 FROM rt0, v0 GROUP BY rt0.c1, rt0.c2, rt0.c0, rt0.c3, v0.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0, rt0.c3, v0.c0 FROM rt0, v0 GROUP BY rt0.c1, rt0.c2, rt0.c0, rt0.c3, v0.c0 HAVING COUNT(rt0.c2) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0, rt0.c3, v0.c0 FROM rt0, v0 GROUP BY rt0.c1, rt0.c2, rt0.c0, rt0.c3, v0.c0 HAVING (NOT (COUNT(rt0.c2))) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c0, rt0.c3, v0.c0 FROM rt0, v0 GROUP BY rt0.c1, rt0.c2, rt0.c0, rt0.c3, v0.c0 HAVING ((COUNT(rt0.c2)) ISNULL);
SELECT ALL rt0.c1, rt0.c2, rt0.c0, rt0.c3, v0.c0 FROM rt0, v0 GROUP BY rt0.c1, rt0.c2, rt0.c0, rt0.c3, v0.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0, rt0.c3, v0.c0 FROM rt0, v0 GROUP BY rt0.c1, rt0.c2, rt0.c0, rt0.c3, v0.c0 HAVING COUNT(rt0.c2) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0, rt0.c3, v0.c0 FROM rt0, v0 GROUP BY rt0.c1, rt0.c2, rt0.c0, rt0.c3, v0.c0 HAVING (NOT (COUNT(rt0.c2))) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c0, rt0.c3, v0.c0 FROM rt0, v0 GROUP BY rt0.c1, rt0.c2, rt0.c0, rt0.c3, v0.c0 HAVING ((COUNT(rt0.c2)) ISNULL);
SELECT ALL rt0.c1, rt0.c2, rt0.c0, rt0.c3, v0.c0 FROM rt0, v0 GROUP BY rt0.c1, rt0.c2, rt0.c0, rt0.c3, v0.c0;
SELECT ALL MIN(((((((((((((((rt0.c0)OR(v0.c0)))OR(rt0.c4)))OR(rt0.c3)))AND(v0.c0)))OR(rt0.c3)))OR(rt0.c3)))OR(CASE rt0.c0  WHEN rt0.c3 THEN v0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c0 END))) FROM v0, rt0 ORDER BY CASE CASE rt0.c2  WHEN rt0.c2 THEN rt0.c4 ELSE rt0.c3 END  WHEN ((rt0.c2)>(rt0.c2)) THEN ((v0.c0) BETWEEN (rt0.c4) AND (rt0.c2)) END  NULLS LAST;
SELECT v0.c0 FROM v0;
SELECT ALL v0.c0 FROM v0 WHERE (((CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END) IS FALSE)) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE ((NOT (((CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END) IS FALSE)))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE (((((CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END) IS FALSE)) ISNULL));
SELECT v0.c0 FROM v0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (CASE x''  WHEN (0.5816446187059491 IN (rt0.c2)) THEN ((rt0.c0) IS TRUE) END) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (CASE x''  WHEN (0.5816446187059491 IN (rt0.c2)) THEN ((rt0.c0) IS TRUE) END))) UNION SELECT DISTINCT * FROM rt0 WHERE (((CASE x''  WHEN (0.5816446187059491 IN (rt0.c2)) THEN ((rt0.c0) IS TRUE) END) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c0 FROM rt0, v0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0, v0 WHERE (((rt0.c1)IS NOT(rt0.c2)) COLLATE RTRIM) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM rt0, v0 WHERE ((NOT (((rt0.c1)IS NOT(rt0.c2)) COLLATE RTRIM))) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM rt0, v0 WHERE (((((rt0.c1)IS NOT(rt0.c2)) COLLATE RTRIM) ISNULL)) GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0, v0 GROUP BY rt0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING v0.c0 UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (v0.c0)) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((v0.c0) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING v0.c0 UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (v0.c0)) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((v0.c0) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0;
SELECT ALL v0.c0 FROM v0 WHERE ((((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)), ((NULL) NOT NULL), CASE v0.c0  WHEN v0.c0 THEN v0.c0 END))==((0.23508641893385251, (NOT (v0.c0)), ((((v0.c0)OR(v0.c0)))AND(v0.c0)))))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE ((NOT ((((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)), ((NULL) NOT NULL), CASE v0.c0  WHEN v0.c0 THEN v0.c0 END))==((0.23508641893385251, (NOT (v0.c0)), ((((v0.c0)OR(v0.c0)))AND(v0.c0)))))))) UNION ALL SELECT v0.c0 FROM v0 WHERE ((((((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)), ((NULL) NOT NULL), CASE v0.c0  WHEN v0.c0 THEN v0.c0 END))==((0.23508641893385251, (NOT (v0.c0)), ((((v0.c0)OR(v0.c0)))AND(v0.c0)))))) ISNULL));
SELECT v0.c0 FROM v0;
SELECT DISTINCT rt0.c4, rt0.c0, rt0.c2, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c4, rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE (((((((rt0.c4))>((rt0.c3)))))>=((((((rt0.c2)OR(rt0.c4)))AND(rt0.c4)))))) UNION SELECT DISTINCT rt0.c4, rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (((((((rt0.c4))>((rt0.c3)))))>=((((((rt0.c2)OR(rt0.c4)))AND(rt0.c4)))))))) UNION SELECT DISTINCT rt0.c4, rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE (((((((((rt0.c4))>((rt0.c3)))))>=((((((rt0.c2)OR(rt0.c4)))AND(rt0.c4)))))) ISNULL));
SELECT DISTINCT rt0.c4, rt0.c0, rt0.c2, rt0.c1 FROM rt0;
SELECT rt0.c0, rt0.c4, rt0.c3 FROM rt0, v0 GROUP BY rt0.c0, rt0.c4, rt0.c3;
SELECT rt0.c0, rt0.c4, rt0.c3 FROM rt0, v0 WHERE ((((rt0.c4)) BETWEEN ((((rt0.c2)>(rt0.c3)))) AND ((rt0.c2 COLLATE NOCASE)))) GROUP BY rt0.c0, rt0.c4, rt0.c3 UNION SELECT rt0.c0, rt0.c4, rt0.c3 FROM rt0, v0 WHERE ((NOT ((((rt0.c4)) BETWEEN ((((rt0.c2)>(rt0.c3)))) AND ((rt0.c2 COLLATE NOCASE)))))) GROUP BY rt0.c0, rt0.c4, rt0.c3 UNION SELECT rt0.c0, rt0.c4, rt0.c3 FROM rt0, v0 WHERE ((((((rt0.c4)) BETWEEN ((((rt0.c2)>(rt0.c3)))) AND ((rt0.c2 COLLATE NOCASE)))) ISNULL)) GROUP BY rt0.c0, rt0.c4, rt0.c3;
SELECT rt0.c0, rt0.c4, rt0.c3 FROM rt0, v0 GROUP BY rt0.c0, rt0.c4, rt0.c3;
SELECT ALL rt0.c0, rt0.c2, rt0.c4, rt0.c1, v0.c0 FROM v0 FULL OUTER JOIN rt0 ON ((CAST(rt0.c0 AS BLOB))IS NOT(rt0.c2)) GROUP BY rt0.c0, rt0.c2, rt0.c4, rt0.c1, v0.c0;
SELECT rt0.c0, rt0.c2, rt0.c4, rt0.c1, v0.c0 FROM v0 FULL OUTER JOIN rt0 ON ((CAST(rt0.c0 AS BLOB))IS NOT(rt0.c2)) GROUP BY rt0.c0, rt0.c2, rt0.c4, rt0.c1, v0.c0 HAVING (MIN(rt0.c1) IN ()) UNION ALL SELECT rt0.c0, rt0.c2, rt0.c4, rt0.c1, v0.c0 FROM v0 FULL OUTER JOIN rt0 ON ((CAST(rt0.c0 AS BLOB))IS NOT(rt0.c2)) GROUP BY rt0.c0, rt0.c2, rt0.c4, rt0.c1, v0.c0 HAVING (NOT ((MIN(rt0.c1) IN ()))) UNION ALL SELECT ALL rt0.c0, rt0.c2, rt0.c4, rt0.c1, v0.c0 FROM v0 FULL OUTER JOIN rt0 ON ((CAST(rt0.c0 AS BLOB))IS NOT(rt0.c2)) GROUP BY rt0.c0, rt0.c2, rt0.c4, rt0.c1, v0.c0 HAVING (((MIN(rt0.c1) IN ())) ISNULL);
SELECT ALL rt0.c0, rt0.c2, rt0.c4, rt0.c1, v0.c0 FROM v0 FULL OUTER JOIN rt0 ON ((CAST(rt0.c0 AS BLOB))IS NOT(rt0.c2)) GROUP BY rt0.c0, rt0.c2, rt0.c4, rt0.c1, v0.c0;
SELECT rt0.c0, rt0.c2, rt0.c4, rt0.c1, v0.c0 FROM v0 FULL OUTER JOIN rt0 ON ((CAST(rt0.c0 AS BLOB))IS NOT(rt0.c2)) GROUP BY rt0.c0, rt0.c2, rt0.c4, rt0.c1, v0.c0 HAVING (MIN(rt0.c1) IN ()) UNION ALL SELECT rt0.c0, rt0.c2, rt0.c4, rt0.c1, v0.c0 FROM v0 FULL OUTER JOIN rt0 ON ((CAST(rt0.c0 AS BLOB))IS NOT(rt0.c2)) GROUP BY rt0.c0, rt0.c2, rt0.c4, rt0.c1, v0.c0 HAVING (NOT ((MIN(rt0.c1) IN ()))) UNION ALL SELECT ALL rt0.c0, rt0.c2, rt0.c4, rt0.c1, v0.c0 FROM v0 FULL OUTER JOIN rt0 ON ((CAST(rt0.c0 AS BLOB))IS NOT(rt0.c2)) GROUP BY rt0.c0, rt0.c2, rt0.c4, rt0.c1, v0.c0 HAVING (((MIN(rt0.c1) IN ())) ISNULL);
SELECT ALL rt0.c0, rt0.c2, rt0.c4, rt0.c1, v0.c0 FROM v0 FULL OUTER JOIN rt0 ON ((CAST(rt0.c0 AS BLOB))IS NOT(rt0.c2)) GROUP BY rt0.c0, rt0.c2, rt0.c4, rt0.c1, v0.c0;
SELECT ALL MAX(rt0.c0) FROM v0, rt0;
SELECT ALL rt0.c4, rt0.c2, rt0.c3, rt0.c0, rt0.c1 FROM rt0;
SELECT rt0.c4, rt0.c2, rt0.c3, rt0.c0, rt0.c1 FROM rt0 WHERE (json_quote((((rt0.c1))>=((rt0.c0))))) UNION ALL SELECT ALL rt0.c4, rt0.c2, rt0.c3, rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (json_quote((((rt0.c1))>=((rt0.c0))))))) UNION ALL SELECT rt0.c4, rt0.c2, rt0.c3, rt0.c0, rt0.c1 FROM rt0 WHERE (((json_quote((((rt0.c1))>=((rt0.c0))))) ISNULL));
SELECT ALL rt0.c4, rt0.c2, rt0.c3, rt0.c0, rt0.c1 FROM rt0;
SELECT DISTINCT * FROM v0, rt0;
SELECT DISTINCT * FROM v0, rt0 WHERE (((((((((IFNULL(rt0.c4, rt0.c4))OR(rt0.c2 COLLATE BINARY)))AND(CAST(rt0.c4 AS BLOB))))AND((rt0.c0 IN (rt0.c1, rt0.c4)))))OR(json_valid(v0.c0)))) UNION SELECT DISTINCT * FROM v0, rt0 WHERE ((NOT (((((((((IFNULL(rt0.c4, rt0.c4))OR(rt0.c2 COLLATE BINARY)))AND(CAST(rt0.c4 AS BLOB))))AND((rt0.c0 IN (rt0.c1, rt0.c4)))))OR(json_valid(v0.c0)))))) UNION SELECT DISTINCT * FROM v0, rt0 WHERE (((((((((((IFNULL(rt0.c4, rt0.c4))OR(rt0.c2 COLLATE BINARY)))AND(CAST(rt0.c4 AS BLOB))))AND((rt0.c0 IN (rt0.c1, rt0.c4)))))OR(json_valid(v0.c0)))) ISNULL));
SELECT DISTINCT * FROM v0, rt0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (CASE WHEN CAST(v0.c0 AS INTEGER) THEN NULLIF(v0.c0, v0.c0) WHEN (~ (v0.c0)) THEN CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END WHEN ((v0.c0) IS TRUE) THEN CAST(v0.c0 AS INTEGER) ELSE ((v0.c0)<>(v0.c0)) END) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT (CASE WHEN CAST(v0.c0 AS INTEGER) THEN NULLIF(v0.c0, v0.c0) WHEN (~ (v0.c0)) THEN CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END WHEN ((v0.c0) IS TRUE) THEN CAST(v0.c0 AS INTEGER) ELSE ((v0.c0)<>(v0.c0)) END))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE (((CASE WHEN CAST(v0.c0 AS INTEGER) THEN NULLIF(v0.c0, v0.c0) WHEN (~ (v0.c0)) THEN CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END WHEN ((v0.c0) IS TRUE) THEN CAST(v0.c0 AS INTEGER) ELSE ((v0.c0)!=(v0.c0)) END) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL rt0.c2, rt0.c4 FROM rt0 GROUP BY rt0.c2, rt0.c4;
SELECT ALL rt0.c2, rt0.c4 FROM rt0 GROUP BY rt0.c2, rt0.c4 HAVING ((((((((TOTAL(rt0.c3))AND(json_object(-1761514915, COUNT(*)))))AND(TOTAL(rt0.c2))))AND(SUM(COUNT(*)))))OR(((rt0.c3)=(COUNT(GROUP_CONCAT(MIN(COUNT(MAX(SUM('1788368672')))))))))) UNION ALL SELECT rt0.c2, rt0.c4 FROM rt0 GROUP BY rt0.c2, rt0.c4 HAVING (NOT (((((((((TOTAL(rt0.c3))AND(json_object(-1761514915, COUNT(*)))))AND(TOTAL(rt0.c2))))AND(SUM(COUNT(*)))))OR(((rt0.c3)=(COUNT(GROUP_CONCAT(MIN(COUNT(MAX(SUM('1788368672')))))))))))) UNION ALL SELECT ALL rt0.c2, rt0.c4 FROM rt0 GROUP BY rt0.c2, rt0.c4 HAVING ((((((((((TOTAL(rt0.c3))AND(json_object(-1761514915, COUNT(*)))))AND(TOTAL(rt0.c2))))AND(SUM(COUNT(*)))))OR(((rt0.c3)=(COUNT(GROUP_CONCAT(MIN(COUNT(MAX(SUM('1788368672'))))))))))) ISNULL);
SELECT rt0.c1, v0.c0, rt0.c3, rt0.c4, rt0.c2, rt0.c0 FROM v0, rt0;
SELECT ALL rt0.c1, v0.c0, rt0.c3, rt0.c4, rt0.c2, rt0.c0 FROM v0 NOT INDEXED, rt0 WHERE (CASE WHEN ((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1)) THEN ((((0.5131391929226411)OR(rt0.c1)))AND(rt0.c4)) WHEN CAST(rt0.c2 AS TEXT) THEN rt0.c2 COLLATE RTRIM WHEN ((rt0.c0) NOTNULL) THEN NULL ELSE (+ (rt0.c0)) END) UNION ALL SELECT ALL rt0.c1, v0.c0, rt0.c3, rt0.c4, rt0.c2, rt0.c0 FROM v0, rt0 WHERE ((NOT (CASE WHEN ((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1)) THEN ((((0.5131391929226411)OR(rt0.c1)))AND(rt0.c4)) WHEN CAST(rt0.c2 AS TEXT) THEN rt0.c2 COLLATE RTRIM WHEN ((rt0.c0) NOTNULL) THEN NULL ELSE (+ (rt0.c0)) END))) UNION ALL SELECT rt0.c1, v0.c0, rt0.c3, rt0.c4, rt0.c2, rt0.c0 FROM v0, rt0 WHERE (((CASE WHEN ((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1)) THEN ((((0.5131391929226411)OR(rt0.c1)))AND(rt0.c4)) WHEN CAST(rt0.c2 AS TEXT) THEN rt0.c2 COLLATE RTRIM WHEN ((rt0.c0) NOTNULL) THEN NULL ELSE (+ (rt0.c0)) END) ISNULL));
SELECT rt0.c1, v0.c0, rt0.c3, rt0.c4, rt0.c2, rt0.c0 FROM v0, rt0;
SELECT DISTINCT * FROM v0 LEFT OUTER JOIN rt0 ON ((rt0.c4 COLLATE NOCASE) IS FALSE);
SELECT DISTINCT * FROM v0 LEFT OUTER JOIN rt0 ON ((rt0.c4 COLLATE NOCASE) IS FALSE) WHERE ((((rt0.c3 IN ())) NOT BETWEEN ((rt0.c1 IN ())) AND (NULL))) UNION SELECT DISTINCT * FROM v0 LEFT OUTER JOIN rt0 ON ((rt0.c4 COLLATE NOCASE) IS FALSE) WHERE ((NOT ((((rt0.c3 IN ())) NOT BETWEEN ((rt0.c1 IN ())) AND (NULL))))) UNION SELECT DISTINCT * FROM v0 LEFT OUTER JOIN rt0 ON ((rt0.c4 COLLATE NOCASE) IS FALSE) WHERE ((((((rt0.c3 IN ())) NOT BETWEEN ((rt0.c1 IN ())) AND (NULL))) ISNULL));
SELECT DISTINCT * FROM v0 LEFT OUTER JOIN rt0 ON ((rt0.c4 COLLATE NOCASE) IS FALSE);
SELECT v0.c0, rt0.c4, rt0.c3, rt0.c1 FROM v0, rt0 GROUP BY v0.c0, rt0.c4, rt0.c3, rt0.c1;
SELECT v0.c0, rt0.c4, rt0.c3, rt0.c1 FROM v0, rt0 WHERE (CAST(rt0.c0 COLLATE NOCASE AS INTEGER)) GROUP BY v0.c0, rt0.c4, rt0.c3, rt0.c1 UNION SELECT v0.c0, rt0.c4, rt0.c3, rt0.c1 FROM v0, rt0 WHERE ((NOT (CAST(rt0.c0 COLLATE NOCASE AS INTEGER)))) GROUP BY v0.c0, rt0.c4, rt0.c3, rt0.c1 UNION SELECT v0.c0, rt0.c4, rt0.c3, rt0.c1 FROM v0, rt0 WHERE (((CAST(rt0.c0 COLLATE NOCASE AS INTEGER)) ISNULL)) GROUP BY v0.c0, rt0.c4, rt0.c3, rt0.c1;
SELECT v0.c0, rt0.c4, rt0.c3, rt0.c1 FROM v0, rt0 GROUP BY v0.c0, rt0.c4, rt0.c3, rt0.c1;
SELECT ALL rt0.c3 FROM rt0 GROUP BY rt0.c3;
SELECT rt0.c3 FROM rt0 GROUP BY rt0.c3 HAVING rt0.c4 UNION ALL SELECT ALL rt0.c3 FROM rt0 GROUP BY rt0.c3 HAVING (NOT (rt0.c4)) UNION ALL SELECT rt0.c3 FROM rt0 GROUP BY rt0.c3 HAVING ((rt0.c4) ISNULL);
SELECT ALL rt0.c3 FROM rt0 GROUP BY rt0.c3;
SELECT rt0.c3 FROM rt0 GROUP BY rt0.c3 HAVING rt0.c4 UNION ALL SELECT ALL rt0.c3 FROM rt0 GROUP BY rt0.c3 HAVING (NOT (rt0.c4)) UNION ALL SELECT rt0.c3 FROM rt0 GROUP BY rt0.c3 HAVING ((rt0.c4) ISNULL);
SELECT ALL rt0.c3 FROM rt0 GROUP BY rt0.c3;
SELECT v0.c0 FROM v0;
SELECT v0.c0 FROM v0 WHERE (((((v0.c0 COLLATE NOCASE)AND(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))))OR(CAST(v0.c0 AS REAL)))) UNION ALL SELECT v0.c0 FROM v0 WHERE ((NOT (((((v0.c0 COLLATE NOCASE)AND(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))))OR(CAST(v0.c0 AS REAL)))))) UNION ALL SELECT v0.c0 FROM v0 WHERE (((((((v0.c0 COLLATE NOCASE)AND(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))))OR(CAST(v0.c0 AS REAL)))) ISNULL));
SELECT v0.c0 FROM v0;
SELECT DISTINCT rt0.c0, rt0.c4 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c4 FROM rt0 WHERE (((UNLIKELY(rt0.c1)) IS TRUE)) UNION SELECT DISTINCT rt0.c0, rt0.c4 FROM rt0 WHERE ((NOT (((UNLIKELY(rt0.c1)) IS TRUE)))) UNION SELECT DISTINCT rt0.c0, rt0.c4 FROM rt0 WHERE (((((UNLIKELY(rt0.c1)) IS TRUE)) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c4 FROM rt0;
SELECT rt0.c3, rt0.c1, v0.c0, rt0.c2, rt0.c0, rt0.c4 FROM rt0 NATURAL JOIN v0 GROUP BY rt0.c3, rt0.c1, v0.c0, rt0.c2, rt0.c0, rt0.c4;
SELECT ALL rt0.c3, rt0.c1, v0.c0, rt0.c2, rt0.c0, rt0.c4 FROM rt0 NATURAL JOIN v0 WHERE (((0.6404688145487644) NOT BETWEEN ((rt0.c3 IN ())) AND (((((rt0.c4)AND(rt0.c0)))AND(rt0.c2))))) GROUP BY rt0.c3, rt0.c1, v0.c0, rt0.c2, rt0.c0, rt0.c4 UNION SELECT rt0.c3, rt0.c1, v0.c0, rt0.c2, rt0.c0, rt0.c4 FROM rt0 NATURAL JOIN v0 WHERE ((NOT (((0.6404688145487644) NOT BETWEEN ((rt0.c3 IN ())) AND (((((rt0.c4)AND(rt0.c0)))AND(rt0.c2))))))) GROUP BY rt0.c3, rt0.c1, v0.c0, rt0.c2, rt0.c0, rt0.c4 UNION SELECT rt0.c3, rt0.c1, v0.c0, rt0.c2, rt0.c0, rt0.c4 FROM rt0 NATURAL JOIN v0 WHERE (((((0.6404688145487644) NOT BETWEEN ((rt0.c3 IN ())) AND (((((rt0.c4)AND(rt0.c0)))AND(rt0.c2))))) ISNULL)) GROUP BY rt0.c3, rt0.c1, v0.c0, rt0.c2, rt0.c0, rt0.c4;
SELECT rt0.c3, rt0.c1, v0.c0, rt0.c2, rt0.c0, rt0.c4 FROM rt0 NATURAL JOIN v0 GROUP BY rt0.c3, rt0.c1, v0.c0, rt0.c2, rt0.c0, rt0.c4;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING 0.6833985419013417 UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (0.6833985419013417)) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((0.6833985419013417) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING 0.6833985419013417 UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (0.6833985419013417)) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((0.6833985419013417) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL rt0.c0, rt0.c4, rt0.c1, rt0.c2 FROM rt0 INNER JOIN v0 ON LIKELIHOOD(DISTINCT (- (rt0.c2)), 0.67981286036945);
SELECT ALL rt0.c0, rt0.c4, rt0.c1, rt0.c2 FROM rt0 INNER JOIN v0 ON LIKELIHOOD(DISTINCT (- (rt0.c2)), 0.67981286036945) WHERE (rt0.c3) UNION ALL SELECT rt0.c0, rt0.c4, rt0.c1, rt0.c2 FROM rt0 INNER JOIN v0 ON LIKELIHOOD(DISTINCT (- (rt0.c2)), 0.67981286036945) WHERE ((NOT (rt0.c3))) UNION ALL SELECT ALL rt0.c0, rt0.c4, rt0.c1, rt0.c2 FROM rt0 INNER JOIN v0 ON LIKELIHOOD(DISTINCT (- (rt0.c2)), 0.67981286036945) WHERE (((rt0.c3) ISNULL));
SELECT ALL rt0.c0, rt0.c4, rt0.c1, rt0.c2 FROM rt0 INNER JOIN v0 ON LIKELIHOOD(DISTINCT (- (rt0.c2)), 0.67981286036945);
SELECT DISTINCT * FROM v0 FULL OUTER JOIN rt0 ON ((rt0.c1)<=(rt0.c4)) COLLATE BINARY;
SELECT DISTINCT * FROM v0 FULL OUTER JOIN rt0 ON ((rt0.c1)<=(rt0.c4)) COLLATE BINARY WHERE ((~ (TYPEOF(DISTINCT rt0.c2)))) UNION SELECT DISTINCT * FROM v0 FULL OUTER JOIN rt0 ON ((rt0.c1)<=(rt0.c4)) COLLATE BINARY WHERE ((NOT ((~ (TYPEOF(DISTINCT rt0.c2)))))) UNION SELECT DISTINCT * FROM v0 FULL OUTER JOIN rt0 ON ((rt0.c1)<=(rt0.c4)) COLLATE BINARY WHERE ((((~ (TYPEOF(DISTINCT rt0.c2)))) ISNULL));
SELECT DISTINCT * FROM v0 FULL OUTER JOIN rt0 ON ((rt0.c1)<=(rt0.c4)) COLLATE BINARY;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE ((~ ((((NULL)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT ((~ ((((NULL)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((((~ ((((NULL)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0, rt0.c0, rt0.c4, rt0.c1, rt0.c3 FROM v0, rt0 GROUP BY v0.c0, rt0.c0, rt0.c4, rt0.c1, rt0.c3;
SELECT v0.c0, rt0.c0, rt0.c4, rt0.c1, rt0.c3 FROM v0, rt0 GROUP BY v0.c0, rt0.c0, rt0.c4, rt0.c1, rt0.c3 HAVING ((TOTAL(AVG(COUNT(*)))) NOT NULL) UNION ALL SELECT ALL v0.c0, rt0.c0, rt0.c4, rt0.c1, rt0.c3 FROM v0, rt0 GROUP BY v0.c0, rt0.c0, rt0.c4, rt0.c1, rt0.c3 HAVING (NOT (((TOTAL(AVG(COUNT(*)))) NOT NULL))) UNION ALL SELECT v0.c0, rt0.c0, rt0.c4, rt0.c1, rt0.c3 FROM v0, rt0 GROUP BY v0.c0, rt0.c0, rt0.c4, rt0.c1, rt0.c3 HAVING ((((TOTAL(AVG(COUNT(*)))) NOT NULL)) ISNULL);
SELECT ALL * FROM v0;
SELECT ALL * FROM v0 WHERE (((((v0.c0) NOT NULL)) IS TRUE)) UNION ALL SELECT * FROM v0 WHERE ((NOT (((((v0.c0) NOT NULL)) IS TRUE)))) UNION ALL SELECT * FROM v0 WHERE (((((((v0.c0) NOT NULL)) IS TRUE)) ISNULL));
SELECT ALL * FROM v0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE ((((+ (v0.c0)))>=(v0.c0 COLLATE NOCASE))) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT ((((+ (v0.c0)))>=(v0.c0 COLLATE NOCASE))))) UNION SELECT DISTINCT * FROM v0 WHERE ((((((+ (v0.c0)))>=(v0.c0 COLLATE NOCASE))) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT rt0.c4, v0.c0, rt0.c1, rt0.c3, rt0.c0 FROM v0 RIGHT OUTER JOIN rt0 ON CAST(CASE v0.c0  WHEN v0.c0 THEN '' ELSE rt0.c3 END AS TEXT) GROUP BY rt0.c4, v0.c0, rt0.c1, rt0.c3, rt0.c0;
SELECT ALL rt0.c4, v0.c0, rt0.c1, rt0.c3, rt0.c0 FROM v0 RIGHT OUTER JOIN rt0 ON CAST(CASE v0.c0  WHEN v0.c0 THEN '' ELSE rt0.c3 END AS TEXT) WHERE (SUBSTR(rt0.c0, rt0.c2) COLLATE RTRIM) GROUP BY rt0.c4, v0.c0, rt0.c1, rt0.c3, rt0.c0 UNION SELECT ALL rt0.c4, v0.c0, rt0.c1, rt0.c3, rt0.c0 FROM v0 RIGHT OUTER JOIN rt0 ON CAST(CASE v0.c0  WHEN v0.c0 THEN '' ELSE rt0.c3 END AS TEXT) WHERE ((NOT (SUBSTR(rt0.c0, rt0.c2) COLLATE RTRIM))) GROUP BY rt0.c4, v0.c0, rt0.c1, rt0.c3, rt0.c0 UNION SELECT ALL rt0.c4, v0.c0, rt0.c1, rt0.c3, rt0.c0 FROM v0 RIGHT OUTER JOIN rt0 ON CAST(CASE v0.c0  WHEN v0.c0 THEN '' ELSE rt0.c3 END AS TEXT) WHERE (((SUBSTR(rt0.c0, rt0.c2) COLLATE RTRIM) ISNULL)) GROUP BY rt0.c4, v0.c0, rt0.c1, rt0.c3, rt0.c0;
SELECT rt0.c4, v0.c0, rt0.c1, rt0.c3, rt0.c0 FROM v0 RIGHT OUTER JOIN rt0 ON CAST(CASE v0.c0  WHEN v0.c0 THEN '' ELSE rt0.c3 END AS TEXT) GROUP BY rt0.c4, v0.c0, rt0.c1, rt0.c3, rt0.c0;
SELECT rt0.c3 FROM v0, rt0 GROUP BY rt0.c3;
SELECT rt0.c3 FROM v0, rt0 GROUP BY rt0.c3 HAVING SUM((rt0.c0 IN (COUNT(TOTAL(MAX(0.4349001867159854)))))) UNION ALL SELECT ALL rt0.c3 FROM v0, rt0 GROUP BY rt0.c3 HAVING (NOT (SUM((rt0.c0 IN (COUNT(TOTAL(MAX(0.4349001867159854)))))))) UNION ALL SELECT ALL rt0.c3 FROM v0, rt0 GROUP BY rt0.c3 HAVING ((SUM((rt0.c0 IN (COUNT(TOTAL(MAX(0.4349001867159854))))))) ISNULL);
SELECT MIN(((rt0.c2) ISNULL)) FROM v0, rt0;
SELECT ALL v0.c0 FROM v0;
SELECT ALL v0.c0 FROM v0 WHERE (((((v0.c0) NOT NULL))GLOB(CAST(v0.c0 AS BLOB)))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE ((NOT (((((v0.c0) NOT NULL))GLOB(CAST(v0.c0 AS BLOB)))))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE (((((((v0.c0) NOT NULL))GLOB(CAST(v0.c0 AS BLOB)))) ISNULL));
SELECT ALL v0.c0 FROM v0;
SELECT DISTINCT rt0.c4, rt0.c2, rt0.c3, rt0.c1, rt0.c0, v0.c0 FROM rt0, v0;
SELECT DISTINCT rt0.c4, rt0.c2, rt0.c3, rt0.c1, rt0.c0, v0.c0 FROM rt0, v0 WHERE (((((((rt0.c1)AND(rt0.c2)))AND(rt0.c3))) NOTNULL)) UNION SELECT DISTINCT rt0.c4, rt0.c2, rt0.c3, rt0.c1, rt0.c0, v0.c0 FROM rt0, v0 WHERE ((NOT (((((((rt0.c1)AND(rt0.c2)))AND(rt0.c3))) NOTNULL)))) UNION SELECT DISTINCT rt0.c4, rt0.c2, rt0.c3, rt0.c1, rt0.c0, v0.c0 FROM rt0, v0 WHERE (((((((((rt0.c1)AND(rt0.c2)))AND(rt0.c3))) NOTNULL)) ISNULL));
SELECT DISTINCT rt0.c4, rt0.c2, rt0.c3, rt0.c1, rt0.c0, v0.c0 FROM rt0, v0;
SELECT rt0.c2, v0.c0 FROM v0, rt0 GROUP BY rt0.c2, v0.c0;
SELECT rt0.c2, v0.c0 FROM v0, rt0 WHERE ((((rt0.c4, rt0.c3, rt0.c2)) NOT BETWEEN (('#', ABS(v0.c0), rt0.c0 COLLATE RTRIM)) AND ((((((((((v0.c0)AND(rt0.c2)))OR(rt0.c1)))OR(rt0.c2)))OR(rt0.c2)), (NOT (rt0.c4)), ((rt0.c0)&(rt0.c4)))))) GROUP BY rt0.c2, v0.c0 UNION SELECT rt0.c2, v0.c0 FROM v0, rt0 WHERE ((NOT ((((rt0.c4, rt0.c3, rt0.c2)) NOT BETWEEN (('#', ABS(v0.c0), rt0.c0 COLLATE RTRIM)) AND ((((((((((v0.c0)AND(rt0.c2)))OR(rt0.c1)))OR(rt0.c2)))OR(rt0.c2)), (NOT (rt0.c4)), ((rt0.c0)&(rt0.c4)))))))) GROUP BY rt0.c2, v0.c0 UNION SELECT ALL rt0.c2, v0.c0 FROM v0, rt0 WHERE ((((((rt0.c4, rt0.c3, rt0.c2)) NOT BETWEEN (('#', ABS(v0.c0), rt0.c0 COLLATE RTRIM)) AND ((((((((((v0.c0)AND(rt0.c2)))OR(rt0.c1)))OR(rt0.c2)))OR(rt0.c2)), (NOT (rt0.c4)), ((rt0.c0)&(rt0.c4)))))) ISNULL)) GROUP BY rt0.c2, v0.c0;
SELECT rt0.c2, v0.c0 FROM v0, rt0 GROUP BY rt0.c2, v0.c0;
SELECT ALL rt0.c2, rt0.c3, rt0.c4, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c3, rt0.c4, rt0.c0, rt0.c1;
SELECT rt0.c2, rt0.c3, rt0.c4, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c3, rt0.c4, rt0.c0, rt0.c1 HAVING MAX(0.4453296672711139) UNION ALL SELECT rt0.c2, rt0.c3, rt0.c4, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c3, rt0.c4, rt0.c0, rt0.c1 HAVING (NOT (MAX(0.4453296672711139))) UNION ALL SELECT rt0.c2, rt0.c3, rt0.c4, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c3, rt0.c4, rt0.c0, rt0.c1 HAVING ((MAX(0.4453296672711139)) ISNULL);
SELECT ALL rt0.c2, rt0.c3, rt0.c4, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c3, rt0.c4, rt0.c0, rt0.c1;
SELECT rt0.c2, rt0.c3, rt0.c4, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c3, rt0.c4, rt0.c0, rt0.c1 HAVING MAX(0.4453296672711139) UNION ALL SELECT rt0.c2, rt0.c3, rt0.c4, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c3, rt0.c4, rt0.c0, rt0.c1 HAVING (NOT (MAX(0.4453296672711139))) UNION ALL SELECT rt0.c2, rt0.c3, rt0.c4, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c3, rt0.c4, rt0.c0, rt0.c1 HAVING ((MAX(0.4453296672711139)) ISNULL);
SELECT ALL rt0.c2, rt0.c3, rt0.c4, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c3, rt0.c4, rt0.c0, rt0.c1;
SELECT * FROM rt0, v0;
SELECT * FROM rt0, v0 WHERE ('') UNION ALL SELECT ALL * FROM rt0, v0 WHERE ((NOT (''))) UNION ALL SELECT * FROM rt0, v0 WHERE ((('') ISNULL));
SELECT * FROM rt0, v0;
SELECT DISTINCT v0.c0, rt0.c3, rt0.c1 FROM rt0, v0;
SELECT DISTINCT v0.c0, rt0.c3, rt0.c1 FROM rt0, v0 WHERE ((~ (TRIM(DISTINCT 'b橝', rt0.c1)))) UNION SELECT DISTINCT v0.c0, rt0.c3, rt0.c1 FROM rt0, v0 WHERE ((NOT ((~ (TRIM(DISTINCT 'b橝', rt0.c1)))))) UNION SELECT DISTINCT v0.c0, rt0.c3, rt0.c1 FROM rt0, v0 WHERE ((((~ (TRIM(DISTINCT 'b橝', rt0.c1)))) ISNULL));
SELECT DISTINCT v0.c0, rt0.c3, rt0.c1 FROM rt0, v0;
SELECT ALL rt0.c1, rt0.c3, rt0.c4, rt0.c2, rt0.c0, v0.c0 FROM rt0, v0 GROUP BY rt0.c1, rt0.c3, rt0.c4, rt0.c2, rt0.c0, v0.c0;
SELECT rt0.c1, rt0.c3, rt0.c4, rt0.c2, rt0.c0, v0.c0 FROM rt0, v0 WHERE (((rt0.c4 COLLATE NOCASE) BETWEEN (CAST(rt0.c4 AS INTEGER)) AND ((((rt0.c1, v0.c0, rt0.c3))!=((rt0.c3, v0.c0, rt0.c1)))))) GROUP BY rt0.c1, rt0.c3, rt0.c4, rt0.c2, rt0.c0, v0.c0 UNION SELECT ALL rt0.c1, rt0.c3, rt0.c4, rt0.c2, rt0.c0, v0.c0 FROM rt0, v0 WHERE ((NOT (((rt0.c4 COLLATE NOCASE) BETWEEN (CAST(rt0.c4 AS INTEGER)) AND ((((rt0.c1, v0.c0, rt0.c3))<>((rt0.c3, v0.c0, rt0.c1)))))))) GROUP BY rt0.c1, rt0.c3, rt0.c4, rt0.c2, rt0.c0, v0.c0 UNION SELECT ALL rt0.c1, rt0.c3, rt0.c4, rt0.c2, rt0.c0, v0.c0 FROM rt0, v0 WHERE (((((rt0.c4 COLLATE NOCASE) BETWEEN (CAST(rt0.c4 AS INTEGER)) AND ((((rt0.c1, v0.c0, rt0.c3))!=((rt0.c3, v0.c0, rt0.c1)))))) ISNULL)) GROUP BY rt0.c1, rt0.c3, rt0.c4, rt0.c2, rt0.c0, v0.c0;
SELECT ALL rt0.c1, rt0.c3, rt0.c4, rt0.c2, rt0.c0, v0.c0 FROM rt0, v0 GROUP BY rt0.c1, rt0.c3, rt0.c4, rt0.c2, rt0.c0, v0.c0;
SELECT ALL rt0.c1, rt0.c0, rt0.c2, rt0.c4, rt0.c3 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2, rt0.c4, rt0.c3;
SELECT rt0.c1, rt0.c0, rt0.c2, rt0.c4, rt0.c3 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2, rt0.c4, rt0.c3 HAVING SUM(UPPER(SUM(COUNT(SUM(COUNT(rt0.c2)))))) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c2, rt0.c4, rt0.c3 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2, rt0.c4, rt0.c3 HAVING (NOT (SUM(UPPER(SUM(COUNT(SUM(COUNT(rt0.c2)))))))) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c2, rt0.c4, rt0.c3 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2, rt0.c4, rt0.c3 HAVING ((SUM(UPPER(SUM(COUNT(SUM(COUNT(rt0.c2))))))) ISNULL);
SELECT * FROM rt0, v0;
SELECT ALL * FROM rt0, v0 WHERE ((((NOT (rt0.c4))) BETWEEN (CAST(v0.c0 AS NUMERIC)) AND ((rt0.c3 IN ())))) UNION ALL SELECT ALL * FROM rt0, v0 WHERE ((NOT ((((NOT (rt0.c4))) BETWEEN (CAST(v0.c0 AS NUMERIC)) AND ((rt0.c3 IN ())))))) UNION ALL SELECT * FROM rt0 NOT INDEXED, v0 WHERE ((((((NOT (rt0.c4))) BETWEEN (CAST(v0.c0 AS NUMERIC)) AND ((rt0.c3 IN ())))) ISNULL));
SELECT * FROM rt0, v0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE ((((((v0.c0)AND(v0.c0)))AND('1370389963')) IN (CAST(v0.c0 AS NUMERIC)))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT ((((((v0.c0)AND(v0.c0)))AND('1370389963')) IN (CAST(v0.c0 AS NUMERIC)))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((((((((v0.c0)AND(v0.c0)))AND('1370389963')) IN (CAST(v0.c0 AS NUMERIC)))) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT ALL rt0.c3, rt0.c1, v0.c0 FROM v0, rt0 GROUP BY rt0.c3, rt0.c1, v0.c0;
SELECT rt0.c3, rt0.c1, v0.c0 FROM v0, rt0 WHERE (x'5d315e17' COLLATE BINARY) GROUP BY rt0.c3, rt0.c1, v0.c0 UNION SELECT rt0.c3, rt0.c1, v0.c0 FROM v0, rt0 WHERE ((NOT (x'5d315e17' COLLATE BINARY))) GROUP BY rt0.c3, rt0.c1, v0.c0 UNION SELECT rt0.c3, rt0.c1, v0.c0 FROM v0, rt0 WHERE (((x'5d315e17' COLLATE BINARY) ISNULL)) GROUP BY rt0.c3, rt0.c1, v0.c0;
SELECT ALL rt0.c3, rt0.c1, v0.c0 FROM v0, rt0 GROUP BY rt0.c3, rt0.c1, v0.c0;
SELECT v0.c0, rt0.c0, rt0.c1, rt0.c3, rt0.c4, rt0.c2 FROM rt0, v0 GROUP BY v0.c0, rt0.c0, rt0.c1, rt0.c3, rt0.c4, rt0.c2;
SELECT ALL v0.c0, rt0.c0, rt0.c1, rt0.c3, rt0.c4, rt0.c2 FROM rt0, v0 GROUP BY v0.c0, rt0.c0, rt0.c1, rt0.c3, rt0.c4, rt0.c2 HAVING 0.48931068463944616 UNION ALL SELECT v0.c0, rt0.c0, rt0.c1, rt0.c3, rt0.c4, rt0.c2 FROM rt0, v0 GROUP BY v0.c0, rt0.c0, rt0.c1, rt0.c3, rt0.c4, rt0.c2 HAVING (NOT (0.48931068463944616)) UNION ALL SELECT v0.c0, rt0.c0, rt0.c1, rt0.c3, rt0.c4, rt0.c2 FROM rt0, v0 GROUP BY v0.c0, rt0.c0, rt0.c1, rt0.c3, rt0.c4, rt0.c2 HAVING ((0.48931068463944616) ISNULL);
SELECT v0.c0, rt0.c0, rt0.c1, rt0.c3, rt0.c4, rt0.c2 FROM rt0, v0 GROUP BY v0.c0, rt0.c0, rt0.c1, rt0.c3, rt0.c4, rt0.c2;
SELECT ALL v0.c0, rt0.c0, rt0.c1, rt0.c3, rt0.c4, rt0.c2 FROM rt0, v0 GROUP BY v0.c0, rt0.c0, rt0.c1, rt0.c3, rt0.c4, rt0.c2 HAVING 0.48931068463944616 UNION ALL SELECT v0.c0, rt0.c0, rt0.c1, rt0.c3, rt0.c4, rt0.c2 FROM rt0, v0 GROUP BY v0.c0, rt0.c0, rt0.c1, rt0.c3, rt0.c4, rt0.c2 HAVING (NOT (0.48931068463944616)) UNION ALL SELECT v0.c0, rt0.c0, rt0.c1, rt0.c3, rt0.c4, rt0.c2 FROM rt0, v0 GROUP BY v0.c0, rt0.c0, rt0.c1, rt0.c3, rt0.c4, rt0.c2 HAVING ((0.48931068463944616) ISNULL);
SELECT v0.c0, rt0.c0, rt0.c1, rt0.c3, rt0.c4, rt0.c2 FROM rt0, v0 GROUP BY v0.c0, rt0.c0, rt0.c1, rt0.c3, rt0.c4, rt0.c2;
SELECT ALL * FROM v0 FULL OUTER JOIN rt0 ON rt0.c3;
SELECT ALL * FROM v0 FULL OUTER JOIN rt0 ON rt0.c3 WHERE (CAST(((rt0.c4)>=(v0.c0)) AS TEXT)) UNION ALL SELECT * FROM v0 FULL OUTER JOIN rt0 ON rt0.c3 WHERE ((NOT (CAST(((rt0.c4)>=(v0.c0)) AS TEXT)))) UNION ALL SELECT * FROM v0 FULL OUTER JOIN rt0 ON rt0.c3 WHERE (((CAST(((rt0.c4)>=(v0.c0)) AS TEXT)) ISNULL));
SELECT ALL * FROM v0 FULL OUTER JOIN rt0 ON rt0.c3;
SELECT DISTINCT rt0.c1, rt0.c3 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c3 FROM rt0 WHERE ((((((- (rt0.c2)))AND(CAST(rt0.c0 AS TEXT))))AND(((rt0.c4) ISNULL)))) UNION SELECT DISTINCT rt0.c1, rt0.c3 FROM rt0 WHERE ((NOT ((((((- (rt0.c2)))AND(CAST(rt0.c0 AS TEXT))))AND(((rt0.c4) ISNULL)))))) UNION SELECT DISTINCT rt0.c1, rt0.c3 FROM rt0 WHERE ((((((((- (rt0.c2)))AND(CAST(rt0.c0 AS TEXT))))AND(((rt0.c4) ISNULL)))) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c3 FROM rt0;
SELECT rt0.c4 FROM v0 LEFT OUTER JOIN rt0 ON CASE (('')AND(0.9995663430279519))  WHEN ((rt0.c0)+(v0.c0)) THEN rt0.c2 ELSE NULL END GROUP BY rt0.c4;
SELECT ALL rt0.c4 FROM v0 LEFT OUTER JOIN rt0 ON CASE (('')AND(0.9995663430279519))  WHEN ((rt0.c0)+(v0.c0)) THEN rt0.c2 ELSE NULL END WHERE (((CASE rt0.c4  WHEN rt0.c4 THEN rt0.c4 END) IS TRUE)) GROUP BY rt0.c4 UNION SELECT ALL rt0.c4 FROM v0 LEFT OUTER JOIN rt0 ON CASE (('')AND(0.9995663430279519))  WHEN ((rt0.c0)+(v0.c0)) THEN rt0.c2 ELSE NULL END WHERE ((NOT (((CASE rt0.c4  WHEN rt0.c4 THEN rt0.c4 END) IS TRUE)))) GROUP BY rt0.c4 UNION SELECT rt0.c4 FROM v0 LEFT OUTER JOIN rt0 ON CASE (('')AND(0.9995663430279519))  WHEN ((rt0.c0)+(v0.c0)) THEN rt0.c2 ELSE NULL END WHERE (((((CASE rt0.c4  WHEN rt0.c4 THEN rt0.c4 END) IS TRUE)) ISNULL)) GROUP BY rt0.c4;
SELECT rt0.c4 FROM v0 LEFT OUTER JOIN rt0 ON CASE (('')AND(0.9995663430279519))  WHEN ((rt0.c0)+(v0.c0)) THEN rt0.c2 ELSE NULL END GROUP BY rt0.c4;
SELECT ALL rt0.c1, rt0.c2, v0.c0, rt0.c3, rt0.c4 FROM v0 CROSS JOIN rt0 ON ((rt0.c3)<((v0.c0 IN ()))) GROUP BY rt0.c1, rt0.c2, v0.c0, rt0.c3, rt0.c4;
SELECT ALL rt0.c1, rt0.c2, v0.c0, rt0.c3, rt0.c4 FROM v0 CROSS JOIN rt0 ON ((rt0.c3)<((v0.c0 IN ()))) GROUP BY rt0.c1, rt0.c2, v0.c0, rt0.c3, rt0.c4 HAVING COUNT(rt0.c4) COLLATE BINARY UNION ALL SELECT rt0.c1, rt0.c2, v0.c0, rt0.c3, rt0.c4 FROM v0 CROSS JOIN rt0 ON ((rt0.c3)<((v0.c0 IN ()))) GROUP BY rt0.c1, rt0.c2, v0.c0, rt0.c3, rt0.c4 HAVING (NOT (COUNT(rt0.c4) COLLATE BINARY)) UNION ALL SELECT ALL rt0.c1, rt0.c2, v0.c0, rt0.c3, rt0.c4 FROM v0 CROSS JOIN rt0 ON ((rt0.c3)<((v0.c0 IN ()))) GROUP BY rt0.c1, rt0.c2, v0.c0, rt0.c3, rt0.c4 HAVING ((COUNT(rt0.c4) COLLATE BINARY) ISNULL);
SELECT ALL rt0.c1, rt0.c2, v0.c0, rt0.c3, rt0.c4 FROM v0 CROSS JOIN rt0 ON ((rt0.c3)<((v0.c0 IN ()))) GROUP BY rt0.c1, rt0.c2, v0.c0, rt0.c3, rt0.c4;
SELECT ALL rt0.c1, rt0.c2, v0.c0, rt0.c3, rt0.c4 FROM v0 CROSS JOIN rt0 ON ((rt0.c3)<((v0.c0 IN ()))) GROUP BY rt0.c1, rt0.c2, v0.c0, rt0.c3, rt0.c4 HAVING COUNT(rt0.c4) COLLATE BINARY UNION ALL SELECT rt0.c1, rt0.c2, v0.c0, rt0.c3, rt0.c4 FROM v0 CROSS JOIN rt0 ON ((rt0.c3)<((v0.c0 IN ()))) GROUP BY rt0.c1, rt0.c2, v0.c0, rt0.c3, rt0.c4 HAVING (NOT (COUNT(rt0.c4) COLLATE BINARY)) UNION ALL SELECT ALL rt0.c1, rt0.c2, v0.c0, rt0.c3, rt0.c4 FROM v0 CROSS JOIN rt0 ON ((rt0.c3)<((v0.c0 IN ()))) GROUP BY rt0.c1, rt0.c2, v0.c0, rt0.c3, rt0.c4 HAVING ((COUNT(rt0.c4) COLLATE BINARY) ISNULL);
SELECT ALL rt0.c1, rt0.c2, v0.c0, rt0.c3, rt0.c4 FROM v0 CROSS JOIN rt0 ON ((rt0.c3)<((v0.c0 IN ()))) GROUP BY rt0.c1, rt0.c2, v0.c0, rt0.c3, rt0.c4;
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE (CASE rt0.c2  WHEN CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 END THEN CAST(x'' AS INTEGER) END) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (CASE rt0.c2  WHEN CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 END THEN CAST(x'' AS INTEGER) END))) UNION ALL SELECT * FROM rt0 WHERE (((CASE rt0.c2  WHEN CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 END THEN CAST(x'' AS INTEGER) END) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((~ (CASE WHEN NULL THEN rt0.c4 ELSE rt0.c1 END))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((~ (CASE WHEN NULL THEN rt0.c4 ELSE rt0.c1 END))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((~ (CASE WHEN NULL THEN rt0.c4 ELSE rt0.c1 END))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c2, rt0.c4 FROM v0, rt0 GROUP BY rt0.c2, rt0.c4;
SELECT rt0.c2, rt0.c4 FROM v0, rt0 WHERE (((((v0.c0)AND((v0.c0 IN (v0.c0)))))AND(CAST(rt0.c0 AS INTEGER)))) GROUP BY rt0.c2, rt0.c4 UNION SELECT rt0.c2, rt0.c4 FROM v0, rt0 WHERE ((NOT (((((v0.c0)AND((v0.c0 IN (v0.c0)))))AND(CAST(rt0.c0 AS INTEGER)))))) GROUP BY rt0.c2, rt0.c4 UNION SELECT rt0.c2, rt0.c4 FROM v0, rt0 WHERE (((((((v0.c0)AND((v0.c0 IN (v0.c0)))))AND(CAST(rt0.c0 AS INTEGER)))) ISNULL)) GROUP BY rt0.c2, rt0.c4;
SELECT ALL rt0.c2, rt0.c4 FROM v0, rt0 GROUP BY rt0.c2, rt0.c4;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING COUNT(*) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING COUNT(*) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0;
SELECT v0.c0 FROM v0 WHERE (((LIKE(v0.c0, v0.c0, '0'))LIKE(v0.c0))) UNION ALL SELECT v0.c0 FROM v0 WHERE ((NOT (((LIKE(v0.c0, v0.c0, '0'))LIKE(v0.c0))))) UNION ALL SELECT v0.c0 FROM v0 WHERE (((((LIKE(v0.c0, v0.c0, '0'))LIKE(v0.c0))) ISNULL));
SELECT v0.c0 FROM v0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((CASE WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c4 THEN NULL ELSE rt0.c4 END)>=(((rt0.c3)>>(rt0.c3))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((CASE WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c4 THEN NULL ELSE rt0.c4 END)>=(((rt0.c3)>>(rt0.c3))))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((CASE WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c4 THEN NULL ELSE rt0.c4 END)>=(((rt0.c3)>>(rt0.c3))))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c2, rt0.c3, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c3, rt0.c0, rt0.c1;
SELECT rt0.c2, rt0.c3, rt0.c0, rt0.c1 FROM rt0 WHERE ((~ (rt0.c0 COLLATE RTRIM))) GROUP BY rt0.c2, rt0.c3, rt0.c0, rt0.c1 UNION SELECT rt0.c2, rt0.c3, rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT ((~ (rt0.c0 COLLATE RTRIM))))) GROUP BY rt0.c2, rt0.c3, rt0.c0, rt0.c1 UNION SELECT rt0.c2, rt0.c3, rt0.c0, rt0.c1 FROM rt0 WHERE ((((~ (rt0.c0 COLLATE RTRIM))) ISNULL)) GROUP BY rt0.c2, rt0.c3, rt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c3, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c3, rt0.c0, rt0.c1;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((v0.c0)>=(v0.c0)) COLLATE NOCASE UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (((v0.c0)>=(v0.c0)) COLLATE NOCASE)) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((((v0.c0)>=(v0.c0)) COLLATE NOCASE) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((v0.c0)>=(v0.c0)) COLLATE NOCASE UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (((v0.c0)>=(v0.c0)) COLLATE NOCASE)) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((((v0.c0)>=(v0.c0)) COLLATE NOCASE) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL * FROM rt0, v0;
SELECT ALL * FROM rt0, v0 WHERE (TYPEOF(((rt0.c4) NOT BETWEEN (rt0.c0) AND (v0.c0)))) UNION ALL SELECT * FROM rt0, v0 WHERE ((NOT (TYPEOF(((rt0.c4) NOT BETWEEN (rt0.c0) AND (v0.c0)))))) UNION ALL SELECT ALL * FROM rt0, v0 WHERE (((TYPEOF(((rt0.c4) NOT BETWEEN (rt0.c0) AND (v0.c0)))) ISNULL));
SELECT ALL * FROM rt0, v0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (((v0.c0)+((((v0.c0))!=((v0.c0)))))) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (((v0.c0)+((((v0.c0))<>((v0.c0)))))))) UNION SELECT DISTINCT * FROM v0 WHERE (((((v0.c0)+((((v0.c0))!=((v0.c0)))))) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT ALL rt0.c4, rt0.c0, rt0.c2, rt0.c3, rt0.c1, v0.c0 FROM rt0, v0 GROUP BY rt0.c4, rt0.c0, rt0.c2, rt0.c3, rt0.c1, v0.c0;
SELECT ALL rt0.c4, rt0.c0, rt0.c2, rt0.c3, rt0.c1, v0.c0 FROM rt0, v0 WHERE (SQLITE_COMPILEOPTION_GET(((rt0.c0) IS TRUE))) GROUP BY rt0.c4, rt0.c0, rt0.c2, rt0.c3, rt0.c1, v0.c0 UNION SELECT rt0.c4, rt0.c0, rt0.c2, rt0.c3, rt0.c1, v0.c0 FROM rt0, v0 WHERE ((NOT (SQLITE_COMPILEOPTION_GET(((rt0.c0) IS TRUE))))) GROUP BY rt0.c4, rt0.c0, rt0.c2, rt0.c3, rt0.c1, v0.c0 UNION SELECT rt0.c4, rt0.c0, rt0.c2, rt0.c3, rt0.c1, v0.c0 FROM rt0, v0 WHERE (((SQLITE_COMPILEOPTION_GET(((rt0.c0) IS TRUE))) ISNULL)) GROUP BY rt0.c4, rt0.c0, rt0.c2, rt0.c3, rt0.c1, v0.c0;
SELECT ALL rt0.c4, rt0.c0, rt0.c2, rt0.c3, rt0.c1, v0.c0 FROM rt0, v0 GROUP BY rt0.c4, rt0.c0, rt0.c2, rt0.c3, rt0.c1, v0.c0;
SELECT rt0.c3 FROM rt0, v0 GROUP BY rt0.c3;
SELECT ALL rt0.c3 FROM rt0, v0 GROUP BY rt0.c3 HAVING AVG(((((rt0.c1)OR(rt0.c1)))AND(AVG(rt0.c2)))) UNION ALL SELECT ALL rt0.c3 FROM rt0, v0 GROUP BY rt0.c3 HAVING (NOT (AVG(((((rt0.c1)OR(rt0.c1)))AND(AVG(rt0.c2)))))) UNION ALL SELECT ALL rt0.c3 FROM rt0 NOT INDEXED, v0 GROUP BY rt0.c3 HAVING ((AVG(((((rt0.c1)OR(rt0.c1)))AND(AVG(rt0.c2))))) ISNULL);
SELECT rt0.c1, rt0.c2, rt0.c3, rt0.c0, v0.c0 FROM v0 INNER JOIN rt0 ON ((((rt0.c3) NOT BETWEEN (rt0.c2) AND ('')))+(NULL));
SELECT ALL rt0.c1, rt0.c2, rt0.c3, rt0.c0, v0.c0 FROM v0 INNER JOIN rt0 ON ((((rt0.c3) NOT BETWEEN (rt0.c2) AND ('')))+(NULL)) WHERE (((CASE WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c3 END) NOT BETWEEN ((v0.c0 IN ())) AND (((rt0.c2) NOT NULL)))) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c3, rt0.c0, v0.c0 FROM v0 INNER JOIN rt0 ON ((((rt0.c3) NOT BETWEEN (rt0.c2) AND ('')))+(NULL)) WHERE ((NOT (((CASE WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c3 END) NOT BETWEEN ((v0.c0 IN ())) AND (((rt0.c2) NOT NULL)))))) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c3, rt0.c0, v0.c0 FROM v0 INNER JOIN rt0 ON ((((rt0.c3) NOT BETWEEN (rt0.c2) AND ('')))+(NULL)) WHERE (((((CASE WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c3 END) NOT BETWEEN ((v0.c0 IN ())) AND (((rt0.c2) NOT NULL)))) ISNULL));
SELECT rt0.c1, rt0.c2, rt0.c3, rt0.c0, v0.c0 FROM v0 INNER JOIN rt0 ON ((((rt0.c3) NOT BETWEEN (rt0.c2) AND ('')))+(NULL));
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (CAST(CASE WHEN rt0.c4 THEN rt0.c4 ELSE rt0.c1 END AS TEXT)) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (CAST(CASE WHEN rt0.c4 THEN rt0.c4 ELSE rt0.c1 END AS TEXT)))) UNION SELECT DISTINCT * FROM rt0 NOT INDEXED WHERE (((CAST(CASE WHEN rt0.c4 THEN rt0.c4 ELSE rt0.c1 END AS TEXT)) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT v0.c0, rt0.c3, rt0.c1, rt0.c2, rt0.c0, rt0.c4 FROM rt0, v0 GROUP BY v0.c0, rt0.c3, rt0.c1, rt0.c2, rt0.c0, rt0.c4;
SELECT v0.c0, rt0.c3, rt0.c1, rt0.c2, rt0.c0, rt0.c4 FROM rt0, v0 WHERE (((CAST(rt0.c0 AS INTEGER))<<(((rt0.c2) IS FALSE)))) GROUP BY v0.c0, rt0.c3, rt0.c1, rt0.c2, rt0.c0, rt0.c4 UNION SELECT v0.c0, rt0.c3, rt0.c1, rt0.c2, rt0.c0, rt0.c4 FROM rt0, v0 WHERE ((NOT (((CAST(rt0.c0 AS INTEGER))<<(((rt0.c2) IS FALSE)))))) GROUP BY v0.c0, rt0.c3, rt0.c1, rt0.c2, rt0.c0, rt0.c4 UNION SELECT v0.c0, rt0.c3, rt0.c1, rt0.c2, rt0.c0, rt0.c4 FROM rt0, v0 WHERE (((((CAST(rt0.c0 AS INTEGER))<<(((rt0.c2) IS FALSE)))) ISNULL)) GROUP BY v0.c0, rt0.c3, rt0.c1, rt0.c2, rt0.c0, rt0.c4;
SELECT v0.c0, rt0.c3, rt0.c1, rt0.c2, rt0.c0, rt0.c4 FROM rt0, v0 GROUP BY v0.c0, rt0.c3, rt0.c1, rt0.c2, rt0.c0, rt0.c4;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (((((COUNT(*))OR(COUNT(COUNT(v0.c0)))))OR(v0.c0)) IN (((COUNT(*))/(MIN(MIN(MAX(SUM(TOTAL(SUM(v0.c0)))))))))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT ((((((COUNT(*))OR(COUNT(COUNT(v0.c0)))))OR(v0.c0)) IN (((COUNT(*))/(MIN(MIN(MAX(SUM(TOTAL(SUM(v0.c0)))))))))))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (((((((COUNT(*))OR(COUNT(COUNT(v0.c0)))))OR(v0.c0)) IN (((COUNT(*))/(MIN(MIN(MAX(SUM(TOTAL(SUM(v0.c0))))))))))) ISNULL);
SELECT ALL rt0.c0 FROM rt0, v0;
SELECT ALL rt0.c0 FROM rt0, v0 WHERE (NULL COLLATE NOCASE) UNION ALL SELECT rt0.c0 FROM rt0, v0 WHERE ((NOT (NULL COLLATE NOCASE))) UNION ALL SELECT ALL rt0.c0 FROM rt0, v0 WHERE (((NULL COLLATE NOCASE) ISNULL));
SELECT ALL rt0.c0 FROM rt0, v0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (((v0.c0) IS TRUE)) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (((v0.c0) IS TRUE)))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((((v0.c0) IS TRUE)) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT ALL v0.c0, rt0.c1, rt0.c4 FROM v0, rt0 GROUP BY v0.c0, rt0.c1, rt0.c4;
SELECT v0.c0, rt0.c1, rt0.c4 FROM v0, rt0 WHERE (CASE rt0.c1  WHEN rt0.c3 THEN v0.c0 WHEN rt0.c1 THEN rt0.c4 WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c2 END COLLATE NOCASE) GROUP BY v0.c0, rt0.c1, rt0.c4 UNION SELECT ALL v0.c0, rt0.c1, rt0.c4 FROM v0 NOT INDEXED, rt0 WHERE ((NOT (CASE rt0.c1  WHEN rt0.c3 THEN v0.c0 WHEN rt0.c1 THEN rt0.c4 WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c2 END COLLATE NOCASE))) GROUP BY v0.c0, rt0.c1, rt0.c4 UNION SELECT ALL v0.c0, rt0.c1, rt0.c4 FROM v0, rt0 WHERE (((CASE rt0.c1  WHEN rt0.c3 THEN v0.c0 WHEN rt0.c1 THEN rt0.c4 WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c2 END COLLATE NOCASE) ISNULL)) GROUP BY v0.c0, rt0.c1, rt0.c4;
SELECT ALL v0.c0, rt0.c1, rt0.c4 FROM v0, rt0 GROUP BY v0.c0, rt0.c1, rt0.c4;
SELECT rt0.c4, rt0.c0, rt0.c3, rt0.c1 FROM rt0, v0 GROUP BY rt0.c4, rt0.c0, rt0.c3, rt0.c1;
SELECT ALL rt0.c4, rt0.c0, rt0.c3, rt0.c1 FROM rt0, v0 GROUP BY rt0.c4, rt0.c0, rt0.c3, rt0.c1 HAVING CAST(TOTAL(rt0.c4) AS TEXT) UNION ALL SELECT ALL rt0.c4, rt0.c0, rt0.c3, rt0.c1 FROM rt0, v0 GROUP BY rt0.c4, rt0.c0, rt0.c3, rt0.c1 HAVING (NOT (CAST(TOTAL(rt0.c4) AS TEXT))) UNION ALL SELECT rt0.c4, rt0.c0, rt0.c3, rt0.c1 FROM rt0, v0 GROUP BY rt0.c4, rt0.c0, rt0.c3, rt0.c1 HAVING ((CAST(TOTAL(rt0.c4) AS TEXT)) ISNULL);
SELECT rt0.c4, rt0.c0, rt0.c3, rt0.c1 FROM rt0, v0 GROUP BY rt0.c4, rt0.c0, rt0.c3, rt0.c1;
SELECT ALL rt0.c4, rt0.c0, rt0.c3, rt0.c1 FROM rt0, v0 GROUP BY rt0.c4, rt0.c0, rt0.c3, rt0.c1 HAVING CAST(TOTAL(rt0.c4) AS TEXT) UNION ALL SELECT ALL rt0.c4, rt0.c0, rt0.c3, rt0.c1 FROM rt0, v0 GROUP BY rt0.c4, rt0.c0, rt0.c3, rt0.c1 HAVING (NOT (CAST(TOTAL(rt0.c4) AS TEXT))) UNION ALL SELECT rt0.c4, rt0.c0, rt0.c3, rt0.c1 FROM rt0, v0 GROUP BY rt0.c4, rt0.c0, rt0.c3, rt0.c1 HAVING ((CAST(TOTAL(rt0.c4) AS TEXT)) ISNULL);
SELECT rt0.c4, rt0.c0, rt0.c3, rt0.c1 FROM rt0, v0 GROUP BY rt0.c4, rt0.c0, rt0.c3, rt0.c1;
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE (((((rt0.c0) ISNULL))LIKE(UPPER(DISTINCT rt0.c3)))) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (((((rt0.c0) ISNULL))LIKE(UPPER(DISTINCT rt0.c3)))))) UNION ALL SELECT * FROM rt0 WHERE (((((((rt0.c0) ISNULL))LIKE(UPPER(DISTINCT rt0.c3)))) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE ((((((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))OR(v0.c0)))AND(v0.c0)), ((x'') NOTNULL), ((((v0.c0)AND(v0.c0)))OR(v0.c0)), (~ (v0.c0)), CAST(v0.c0 AS BLOB)))>((v0.c0 COLLATE RTRIM, ((((v0.c0)AND(v0.c0)))OR(v0.c0)), ((v0.c0)<=(335066549)), CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END, (+ (v0.c0)))))) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT ((((((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))OR(v0.c0)))AND(v0.c0)), ((x'') NOTNULL), ((((v0.c0)AND(v0.c0)))OR(v0.c0)), (~ (v0.c0)), CAST(v0.c0 AS BLOB)))>((v0.c0 COLLATE RTRIM, ((((v0.c0)AND(v0.c0)))OR(v0.c0)), ((v0.c0)<=(335066549)), CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END, (+ (v0.c0)))))))) UNION SELECT DISTINCT * FROM v0 WHERE ((((((((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))OR(v0.c0)))AND(v0.c0)), ((x'') NOTNULL), ((((v0.c0)AND(v0.c0)))OR(v0.c0)), (~ (v0.c0)), CAST(v0.c0 AS BLOB)))>((v0.c0 COLLATE RTRIM, ((((v0.c0)AND(v0.c0)))OR(v0.c0)), ((v0.c0)<=(335066549)), CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END, (+ (v0.c0)))))) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT rt0.c1, rt0.c3, rt0.c4, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c3, rt0.c4, rt0.c2, rt0.c0;
SELECT rt0.c1, rt0.c3, rt0.c4, rt0.c2, rt0.c0 FROM rt0 WHERE (json_quote((((rt0.c4, '-800965085', -1.921144082E9, rt0.c2, rt0.c3)) NOT BETWEEN ((rt0.c4, rt0.c3, rt0.c0, rt0.c3, rt0.c4)) AND ((rt0.c2, rt0.c1, rt0.c2, rt0.c1, rt0.c2))))) GROUP BY rt0.c1, rt0.c3, rt0.c4, rt0.c2, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c3, rt0.c4, rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (json_quote((((rt0.c4, '-800965085', -1.921144082E9, rt0.c2, rt0.c3)) NOT BETWEEN ((rt0.c4, rt0.c3, rt0.c0, rt0.c3, rt0.c4)) AND ((rt0.c2, rt0.c1, rt0.c2, rt0.c1, rt0.c2))))))) GROUP BY rt0.c1, rt0.c3, rt0.c4, rt0.c2, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c3, rt0.c4, rt0.c2, rt0.c0 FROM rt0 WHERE (((json_quote((((rt0.c4, '-800965085', -1.921144082E9, rt0.c2, rt0.c3)) NOT BETWEEN ((rt0.c4, rt0.c3, rt0.c0, rt0.c3, rt0.c4)) AND ((rt0.c2, rt0.c1, rt0.c2, rt0.c1, rt0.c2))))) ISNULL)) GROUP BY rt0.c1, rt0.c3, rt0.c4, rt0.c2, rt0.c0;
SELECT rt0.c1, rt0.c3, rt0.c4, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c3, rt0.c4, rt0.c2, rt0.c0;
SELECT rt0.c4, rt0.c0, rt0.c1 FROM rt0, v0 GROUP BY rt0.c4, rt0.c0, rt0.c1;
SELECT ALL rt0.c4, rt0.c0, rt0.c1 FROM rt0, v0 GROUP BY rt0.c4, rt0.c0, rt0.c1 HAVING CASE MIN(rt0.c0)  WHEN CAST(v0.c0 AS TEXT) THEN CASE WHEN rt0.c3 THEN MAX(v0.c0) END ELSE rt0.c1 END UNION ALL SELECT rt0.c4, rt0.c0, rt0.c1 FROM rt0, v0 GROUP BY rt0.c4, rt0.c0, rt0.c1 HAVING (NOT (CASE MIN(rt0.c0)  WHEN CAST(v0.c0 AS TEXT) THEN CASE WHEN rt0.c3 THEN MAX(v0.c0) END ELSE rt0.c1 END)) UNION ALL SELECT rt0.c4, rt0.c0, rt0.c1 FROM rt0, v0 GROUP BY rt0.c4, rt0.c0, rt0.c1 HAVING ((CASE MIN(rt0.c0)  WHEN CAST(v0.c0 AS TEXT) THEN CASE WHEN rt0.c3 THEN MAX(v0.c0) END ELSE rt0.c1 END) ISNULL);
SELECT rt0.c4, rt0.c0, rt0.c1 FROM rt0, v0 GROUP BY rt0.c4, rt0.c0, rt0.c1;
SELECT ALL rt0.c4, rt0.c0, rt0.c1 FROM rt0, v0 GROUP BY rt0.c4, rt0.c0, rt0.c1 HAVING CASE MIN(rt0.c0)  WHEN CAST(v0.c0 AS TEXT) THEN CASE WHEN rt0.c3 THEN MAX(v0.c0) END ELSE rt0.c1 END UNION ALL SELECT rt0.c4, rt0.c0, rt0.c1 FROM rt0, v0 GROUP BY rt0.c4, rt0.c0, rt0.c1 HAVING (NOT (CASE MIN(rt0.c0)  WHEN CAST(v0.c0 AS TEXT) THEN CASE WHEN rt0.c3 THEN MAX(v0.c0) END ELSE rt0.c1 END)) UNION ALL SELECT rt0.c4, rt0.c0, rt0.c1 FROM rt0, v0 GROUP BY rt0.c4, rt0.c0, rt0.c1 HAVING ((CASE MIN(rt0.c0)  WHEN CAST(v0.c0 AS TEXT) THEN CASE WHEN rt0.c3 THEN MAX(v0.c0) END ELSE rt0.c1 END) ISNULL);
SELECT rt0.c4, rt0.c0, rt0.c1 FROM rt0, v0 GROUP BY rt0.c4, rt0.c0, rt0.c1;
SELECT rt0.c3, rt0.c1, rt0.c0, rt0.c4, v0.c0, rt0.c2 FROM rt0, v0;
SELECT rt0.c3, rt0.c1, rt0.c0, rt0.c4, v0.c0, rt0.c2 FROM rt0, v0 WHERE ((+ (rt0.c1 COLLATE NOCASE))) UNION ALL SELECT ALL rt0.c3, rt0.c1, rt0.c0, rt0.c4, v0.c0, rt0.c2 FROM rt0, v0 WHERE ((NOT ((+ (rt0.c1 COLLATE NOCASE))))) UNION ALL SELECT rt0.c3, rt0.c1, rt0.c0, rt0.c4, v0.c0, rt0.c2 FROM rt0, v0 WHERE ((((+ (rt0.c1 COLLATE NOCASE))) ISNULL));
SELECT rt0.c3, rt0.c1, rt0.c0, rt0.c4, v0.c0, rt0.c2 FROM rt0, v0;
SELECT DISTINCT rt0.c1, rt0.c2, rt0.c3, v0.c0, rt0.c4 FROM v0, rt0;
SELECT DISTINCT rt0.c1, rt0.c2, rt0.c3, v0.c0, rt0.c4 FROM v0, rt0 WHERE (((((((((((rt0.c3)OR(rt0.c4)))AND(rt0.c2)))OR(rt0.c4)))OR(rt0.c3))) NOT NULL)) UNION SELECT DISTINCT rt0.c1, rt0.c2, rt0.c3, v0.c0, rt0.c4 FROM v0, rt0 WHERE ((NOT (((((((((((rt0.c3)OR(rt0.c4)))AND(rt0.c2)))OR(rt0.c4)))OR(rt0.c3))) NOT NULL)))) UNION SELECT DISTINCT rt0.c1, rt0.c2, rt0.c3, v0.c0, rt0.c4 FROM v0, rt0 WHERE (((((((((((((rt0.c3)OR(rt0.c4)))AND(rt0.c2)))OR(rt0.c4)))OR(rt0.c3))) NOT NULL)) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c2, rt0.c3, v0.c0, rt0.c4 FROM v0, rt0;
SELECT rt0.c0, rt0.c1, rt0.c4 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c4;
SELECT ALL rt0.c0, rt0.c1, rt0.c4 FROM rt0 WHERE (LIKE(CASE rt0.c4  WHEN 0.798600052139397 THEN rt0.c1 END, (~ (rt0.c4)), ' ')) GROUP BY rt0.c0, rt0.c1, rt0.c4 UNION SELECT rt0.c0, rt0.c1, rt0.c4 FROM rt0 WHERE ((NOT (LIKE(CASE rt0.c4  WHEN 0.798600052139397 THEN rt0.c1 END, (~ (rt0.c4)), ' ')))) GROUP BY rt0.c0, rt0.c1, rt0.c4 UNION SELECT rt0.c0, rt0.c1, rt0.c4 FROM rt0 WHERE (((LIKE(CASE rt0.c4  WHEN 0.798600052139397 THEN rt0.c1 END, (~ (rt0.c4)), ' ')) ISNULL)) GROUP BY rt0.c0, rt0.c1, rt0.c4;
SELECT rt0.c0, rt0.c1, rt0.c4 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c4;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 CROSS JOIN v0 ON json_valid(rt0.c0 COLLATE NOCASE) GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c1 FROM rt0 CROSS JOIN v0 ON json_valid(rt0.c0 COLLATE NOCASE) GROUP BY rt0.c0, rt0.c1 HAVING GROUP_CONCAT(TOTAL(MAX(GROUP_CONCAT(MAX(COUNT(TOTAL(AVG(v0.c0)))))))) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM rt0 CROSS JOIN v0 ON json_valid(rt0.c0 COLLATE NOCASE) GROUP BY rt0.c0, rt0.c1 HAVING (NOT (GROUP_CONCAT(TOTAL(MAX(GROUP_CONCAT(MAX(COUNT(TOTAL(AVG(v0.c0)))))))))) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM rt0 CROSS JOIN v0 ON json_valid(rt0.c0 COLLATE NOCASE) GROUP BY rt0.c0, rt0.c1 HAVING ((GROUP_CONCAT(TOTAL(MAX(GROUP_CONCAT(MAX(COUNT(TOTAL(AVG(v0.c0))))))))) ISNULL);
SELECT v0.c0 FROM v0;
SELECT ALL v0.c0 FROM v0 WHERE (((((v0.c0 IN ())))>(((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE ((NOT (((((v0.c0 IN ())))>(((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))))))) UNION ALL SELECT v0.c0 FROM v0 WHERE (((((((v0.c0 IN ())))>(((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))))) ISNULL));
SELECT v0.c0 FROM v0;
SELECT DISTINCT * FROM v0, rt0;
SELECT DISTINCT * FROM v0, rt0 WHERE (rt0.c3) UNION SELECT DISTINCT * FROM v0, rt0 WHERE ((NOT (rt0.c3))) UNION SELECT DISTINCT * FROM v0, rt0 WHERE (((rt0.c3) ISNULL));
SELECT DISTINCT * FROM v0, rt0;
SELECT ALL rt0.c4, rt0.c3, v0.c0, rt0.c1 FROM v0, rt0 GROUP BY rt0.c4, rt0.c3, v0.c0, rt0.c1;
SELECT ALL rt0.c4, rt0.c3, v0.c0, rt0.c1 FROM v0, rt0 WHERE (((((((((((rt0.c1)>>(rt0.c1)))OR((((rt0.c0)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c0))))))OR(((rt0.c0) ISNULL))))OR(('o' IN ()))))AND(((v0.c0) BETWEEN (rt0.c1) AND (rt0.c0))))) GROUP BY rt0.c4, rt0.c3, v0.c0, rt0.c1 UNION SELECT ALL rt0.c4, rt0.c3, v0.c0, rt0.c1 FROM v0, rt0 WHERE ((NOT (((((((((((rt0.c1)>>(rt0.c1)))OR((((rt0.c0)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c0))))))OR(((rt0.c0) ISNULL))))OR(('o' IN ()))))AND(((v0.c0) BETWEEN (rt0.c1) AND (rt0.c0))))))) GROUP BY rt0.c4, rt0.c3, v0.c0, rt0.c1 UNION SELECT rt0.c4, rt0.c3, v0.c0, rt0.c1 FROM v0, rt0 WHERE (((((((((((((rt0.c1)>>(rt0.c1)))OR((((rt0.c0)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c0))))))OR(((rt0.c0) ISNULL))))OR(('o' IN ()))))AND(((v0.c0) BETWEEN (rt0.c1) AND (rt0.c0))))) ISNULL)) GROUP BY rt0.c4, rt0.c3, v0.c0, rt0.c1;
SELECT ALL rt0.c4, rt0.c3, v0.c0, rt0.c1 FROM v0, rt0 GROUP BY rt0.c4, rt0.c3, v0.c0, rt0.c1;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING TOTAL(GROUP_CONCAT(SUM(TOTAL(COUNT(*)))) COLLATE NOCASE) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (TOTAL(GROUP_CONCAT(SUM(TOTAL(COUNT(*)))) COLLATE NOCASE))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((TOTAL(GROUP_CONCAT(SUM(TOTAL(COUNT(*)))) COLLATE NOCASE)) ISNULL);
SELECT rt0.c0 FROM rt0, v0;
SELECT rt0.c0 FROM rt0, v0 WHERE (x'') UNION ALL SELECT rt0.c0 FROM rt0, v0 WHERE ((NOT (x''))) UNION ALL SELECT rt0.c0 FROM rt0, v0 WHERE (((x'') ISNULL));
SELECT rt0.c0 FROM rt0, v0;
SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0, rt0.c4, rt0.c3 FROM v0, rt0;
SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0, rt0.c4, rt0.c3 FROM v0, rt0 WHERE (UNLIKELY(DISTINCT (rt0.c2 IN (rt0.c3, -1283204677)))) UNION SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0, rt0.c4, rt0.c3 FROM v0, rt0 WHERE ((NOT (UNLIKELY(DISTINCT (rt0.c2 IN (rt0.c3, -1283204677)))))) UNION SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0, rt0.c4, rt0.c3 FROM v0, rt0 WHERE (((UNLIKELY(DISTINCT (rt0.c2 IN (rt0.c3, -1283204677)))) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0, rt0.c4, rt0.c3 FROM v0, rt0;
SELECT ALL rt0.c3, rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c3, rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c3, rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (CAST((rt0.c1 IN ()) AS TEXT)) GROUP BY rt0.c3, rt0.c1, rt0.c0, rt0.c2 UNION SELECT rt0.c3, rt0.c1, rt0.c0, rt0.c2 FROM rt0 NOT INDEXED WHERE ((NOT (CAST((rt0.c1 IN ()) AS TEXT)))) GROUP BY rt0.c3, rt0.c1, rt0.c0, rt0.c2 UNION SELECT rt0.c3, rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (((CAST((rt0.c1 IN ()) AS TEXT)) ISNULL)) GROUP BY rt0.c3, rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c3, rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c3, rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c2, rt0.c4 FROM rt0 RIGHT OUTER JOIN v0 ON rt0.c2 GROUP BY rt0.c2, rt0.c4;
SELECT ALL rt0.c2, rt0.c4 FROM rt0 RIGHT OUTER JOIN v0 ON rt0.c2 GROUP BY rt0.c2, rt0.c4 HAVING COUNT(TOTAL(TOTAL(rt0.c2))) UNION ALL SELECT ALL rt0.c2, rt0.c4 FROM rt0 RIGHT OUTER JOIN v0 ON rt0.c2 GROUP BY rt0.c2, rt0.c4 HAVING (NOT (COUNT(TOTAL(TOTAL(rt0.c2))))) UNION ALL SELECT rt0.c2, rt0.c4 FROM rt0 RIGHT OUTER JOIN v0 ON rt0.c2 GROUP BY rt0.c2, rt0.c4 HAVING ((COUNT(TOTAL(TOTAL(rt0.c2)))) ISNULL);
SELECT ALL * FROM v0;
SELECT * FROM v0 WHERE (v0.c0) UNION ALL SELECT * FROM v0 WHERE ((NOT (v0.c0))) UNION ALL SELECT * FROM v0 WHERE (((v0.c0) ISNULL));
SELECT ALL * FROM v0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (((UPPER(DISTINCT v0.c0))AND(x'ecaa'))) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (((UPPER(DISTINCT v0.c0))AND(x'ecaa'))))) UNION SELECT DISTINCT * FROM v0 WHERE (((((UPPER(DISTINCT v0.c0))AND(x'ecaa'))) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT v0.c0, rt0.c4, rt0.c1, rt0.c0, rt0.c2 FROM v0, rt0 GROUP BY v0.c0, rt0.c4, rt0.c1, rt0.c0, rt0.c2;
SELECT v0.c0, rt0.c4, rt0.c1, rt0.c0, rt0.c2 FROM v0, rt0 WHERE ((((((rt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c4))))=((v0.c0 IN ())))) GROUP BY v0.c0, rt0.c4, rt0.c1, rt0.c0, rt0.c2 UNION SELECT ALL v0.c0, rt0.c4, rt0.c1, rt0.c0, rt0.c2 FROM v0, rt0 WHERE ((NOT ((((((rt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c4))))=((v0.c0 IN ())))))) GROUP BY v0.c0, rt0.c4, rt0.c1, rt0.c0, rt0.c2 UNION SELECT ALL v0.c0, rt0.c4, rt0.c1, rt0.c0, rt0.c2 FROM v0, rt0 WHERE ((((((((rt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c4))))=((v0.c0 IN ())))) ISNULL)) GROUP BY v0.c0, rt0.c4, rt0.c1, rt0.c0, rt0.c2;
SELECT v0.c0, rt0.c4, rt0.c1, rt0.c0, rt0.c2 FROM v0, rt0 GROUP BY v0.c0, rt0.c4, rt0.c1, rt0.c0, rt0.c2;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((IFNULL(v0.c0, SUM(v0.c0)))AND(COUNT(*))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (((IFNULL(v0.c0, SUM(v0.c0)))AND(COUNT(*))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((((IFNULL(v0.c0, SUM(v0.c0)))AND(COUNT(*)))) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((IFNULL(v0.c0, SUM(v0.c0)))AND(COUNT(*))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (((IFNULL(v0.c0, SUM(v0.c0)))AND(COUNT(*))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((((IFNULL(v0.c0, SUM(v0.c0)))AND(COUNT(*)))) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT * FROM v0, rt0;
SELECT ALL * FROM v0, rt0 WHERE ((((rt0.c2) IS FALSE) IN (((v0.c0) ISNULL)))) UNION ALL SELECT ALL * FROM v0, rt0 WHERE ((NOT ((((rt0.c2) IS FALSE) IN (((v0.c0) ISNULL)))))) UNION ALL SELECT * FROM v0, rt0 WHERE ((((((rt0.c2) IS FALSE) IN (((v0.c0) ISNULL)))) ISNULL));
SELECT * FROM v0, rt0;
SELECT DISTINCT * FROM rt0, v0;
SELECT DISTINCT * FROM rt0, v0 WHERE ((((((rt0.c3)IS(rt0.c0))))<((CASE WHEN rt0.c0 THEN rt0.c1 WHEN v0.c0 THEN rt0.c3 WHEN v0.c0 THEN rt0.c1 ELSE rt0.c4 END)))) UNION SELECT DISTINCT * FROM rt0, v0 WHERE ((NOT ((((((rt0.c3)IS(rt0.c0))))<((CASE WHEN rt0.c0 THEN rt0.c1 WHEN v0.c0 THEN rt0.c3 WHEN v0.c0 THEN rt0.c1 ELSE rt0.c4 END)))))) UNION SELECT DISTINCT * FROM rt0, v0 WHERE ((((((((rt0.c3)IS(rt0.c0))))<((CASE WHEN rt0.c0 THEN rt0.c1 WHEN v0.c0 THEN rt0.c3 WHEN v0.c0 THEN rt0.c1 ELSE rt0.c4 END)))) ISNULL));
SELECT DISTINCT * FROM rt0, v0;
SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c1, rt0.c2 FROM rt0 WHERE (((rt0.c4)IS NOT(rt0.c2)) COLLATE NOCASE) GROUP BY rt0.c1, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (((rt0.c4)IS NOT(rt0.c2)) COLLATE NOCASE))) GROUP BY rt0.c1, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c2 FROM rt0 WHERE (((((rt0.c4)IS NOT(rt0.c2)) COLLATE NOCASE) ISNULL)) GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT v0.c0, rt0.c4, rt0.c3, rt0.c2 FROM rt0, v0 GROUP BY v0.c0, rt0.c4, rt0.c3, rt0.c2;
SELECT ALL v0.c0, rt0.c4, rt0.c3, rt0.c2 FROM rt0, v0 GROUP BY v0.c0, rt0.c4, rt0.c3, rt0.c2 HAVING rt0.c0 UNION ALL SELECT v0.c0, rt0.c4, rt0.c3, rt0.c2 FROM rt0, v0 GROUP BY v0.c0, rt0.c4, rt0.c3, rt0.c2 HAVING (NOT (rt0.c0)) UNION ALL SELECT ALL v0.c0, rt0.c4, rt0.c3, rt0.c2 FROM rt0, v0 GROUP BY v0.c0, rt0.c4, rt0.c3, rt0.c2 HAVING ((rt0.c0) ISNULL);
SELECT v0.c0, rt0.c4, rt0.c3, rt0.c2 FROM rt0, v0 GROUP BY v0.c0, rt0.c4, rt0.c3, rt0.c2;
SELECT ALL v0.c0, rt0.c4, rt0.c3, rt0.c2 FROM rt0, v0 GROUP BY v0.c0, rt0.c4, rt0.c3, rt0.c2 HAVING rt0.c0 UNION ALL SELECT v0.c0, rt0.c4, rt0.c3, rt0.c2 FROM rt0, v0 GROUP BY v0.c0, rt0.c4, rt0.c3, rt0.c2 HAVING (NOT (rt0.c0)) UNION ALL SELECT ALL v0.c0, rt0.c4, rt0.c3, rt0.c2 FROM rt0, v0 GROUP BY v0.c0, rt0.c4, rt0.c3, rt0.c2 HAVING ((rt0.c0) ISNULL);
SELECT v0.c0, rt0.c4, rt0.c3, rt0.c2 FROM rt0, v0 GROUP BY v0.c0, rt0.c4, rt0.c3, rt0.c2;
SELECT * FROM rt0 RIGHT OUTER JOIN v0 ON (((NULL, rt0.c4, rt0.c4)) BETWEEN ((((v0.c0)!=(rt0.c2)), ((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c4)), '258421814')) AND ((TRIM(v0.c0), CASE rt0.c1  WHEN v0.c0 THEN rt0.c2 END, CAST(rt0.c1 AS REAL))));
SELECT * FROM rt0 RIGHT OUTER JOIN v0 ON (((NULL, rt0.c4, rt0.c4)) BETWEEN ((((v0.c0)!=(rt0.c2)), ((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c4)), '258421814')) AND ((TRIM(v0.c0), CASE rt0.c1  WHEN v0.c0 THEN rt0.c2 END, CAST(rt0.c1 AS REAL)))) WHERE (((CAST(rt0.c2 AS REAL))>=(((rt0.c2) NOTNULL)))) UNION ALL SELECT ALL * FROM rt0 RIGHT OUTER JOIN v0 ON (((NULL, rt0.c4, rt0.c4)) BETWEEN ((((v0.c0)!=(rt0.c2)), ((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c4)), '258421814')) AND ((TRIM(v0.c0), CASE rt0.c1  WHEN v0.c0 THEN rt0.c2 END, CAST(rt0.c1 AS REAL)))) WHERE ((NOT (((CAST(rt0.c2 AS REAL))>=(((rt0.c2) NOTNULL)))))) UNION ALL SELECT ALL * FROM rt0 RIGHT OUTER JOIN v0 ON (((NULL, rt0.c4, rt0.c4)) BETWEEN ((((v0.c0)<>(rt0.c2)), ((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c4)), '258421814')) AND ((TRIM(v0.c0), CASE rt0.c1  WHEN v0.c0 THEN rt0.c2 END, CAST(rt0.c1 AS REAL)))) WHERE (((((CAST(rt0.c2 AS REAL))>=(((rt0.c2) NOTNULL)))) ISNULL));
SELECT * FROM rt0 RIGHT OUTER JOIN v0 ON (((NULL, rt0.c4, rt0.c4)) BETWEEN ((((v0.c0)!=(rt0.c2)), ((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c4)), '258421814')) AND ((TRIM(v0.c0), CASE rt0.c1  WHEN v0.c0 THEN rt0.c2 END, CAST(rt0.c1 AS REAL))));
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (TYPEOF(DISTINCT ((((v0.c0)AND(v0.c0)))AND(v0.c0)))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (TYPEOF(DISTINCT ((((v0.c0)AND(v0.c0)))AND(v0.c0)))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((TYPEOF(DISTINCT ((((v0.c0)AND(v0.c0)))AND(v0.c0)))) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT ALL rt0.c4, rt0.c1, v0.c0 FROM v0 LEFT OUTER JOIN rt0 ON (((rt0.c2 IN ())) BETWEEN (CAST(rt0.c0 AS BLOB)) AND (((v0.c0) BETWEEN (rt0.c2) AND (rt0.c3)))) GROUP BY rt0.c4, rt0.c1, v0.c0;
SELECT ALL rt0.c4, rt0.c1, v0.c0 FROM v0 LEFT OUTER JOIN rt0 ON (((rt0.c2 IN ())) BETWEEN (CAST(rt0.c0 AS BLOB)) AND (((v0.c0) BETWEEN (rt0.c2) AND (rt0.c3)))) WHERE (((((((((((v0.c0)AND(rt0.c4)))AND(rt0.c0)))AND(rt0.c0)))AND(-6.98681902E8))) NOT BETWEEN (CAST(rt0.c4 AS NUMERIC)) AND ((+ (rt0.c2))))) GROUP BY rt0.c4, rt0.c1, v0.c0 UNION SELECT rt0.c4, rt0.c1, v0.c0 FROM v0 LEFT OUTER JOIN rt0 ON (((rt0.c2 IN ())) BETWEEN (CAST(rt0.c0 AS BLOB)) AND (((v0.c0) BETWEEN (rt0.c2) AND (rt0.c3)))) WHERE ((NOT (((((((((((v0.c0)AND(rt0.c4)))AND(rt0.c0)))AND(rt0.c0)))AND(-6.98681902E8))) NOT BETWEEN (CAST(rt0.c4 AS NUMERIC)) AND ((+ (rt0.c2))))))) GROUP BY rt0.c4, rt0.c1, v0.c0 UNION SELECT rt0.c4, rt0.c1, v0.c0 FROM v0 LEFT OUTER JOIN rt0 ON (((rt0.c2 IN ())) BETWEEN (CAST(rt0.c0 AS BLOB)) AND (((v0.c0) BETWEEN (rt0.c2) AND (rt0.c3)))) WHERE (((((((((((((v0.c0)AND(rt0.c4)))AND(rt0.c0)))AND(rt0.c0)))AND(-6.98681902E8))) NOT BETWEEN (CAST(rt0.c4 AS NUMERIC)) AND ((+ (rt0.c2))))) ISNULL)) GROUP BY rt0.c4, rt0.c1, v0.c0;
SELECT ALL rt0.c4, rt0.c1, v0.c0 FROM v0 LEFT OUTER JOIN rt0 ON (((rt0.c2 IN ())) BETWEEN (CAST(rt0.c0 AS BLOB)) AND (((v0.c0) BETWEEN (rt0.c2) AND (rt0.c3)))) GROUP BY rt0.c4, rt0.c1, v0.c0;
SELECT ALL rt0.c2, rt0.c0, v0.c0, rt0.c3, rt0.c4 FROM rt0 CROSS JOIN v0 ON (((rt0.c0, rt0.c3, x'', rt0.c3, rt0.c0)) NOT BETWEEN ((((rt0.c1)<=(rt0.c2)), (((rt0.c3))>((rt0.c1))), ((rt0.c1)+(v0.c0)), (+ (v0.c0)), rt0.c2)) AND ((((((rt0.c4)AND('')))OR(rt0.c0)), ABS(DISTINCT v0.c0), ((rt0.c3)<<(rt0.c3)), rt0.c0 COLLATE NOCASE, ((rt0.c2) NOT BETWEEN (rt0.c4) AND (rt0.c1))))) GROUP BY rt0.c2, rt0.c0, v0.c0, rt0.c3, rt0.c4;
SELECT ALL rt0.c2, rt0.c0, v0.c0, rt0.c3, rt0.c4 FROM rt0 CROSS JOIN v0 ON (((rt0.c0, rt0.c3, x'', rt0.c3, rt0.c0)) NOT BETWEEN ((((rt0.c1)<=(rt0.c2)), (((rt0.c3))>((rt0.c1))), ((rt0.c1)+(v0.c0)), (+ (v0.c0)), rt0.c2)) AND ((((((rt0.c4)AND('')))OR(rt0.c0)), ABS(DISTINCT v0.c0), ((rt0.c3)<<(rt0.c3)), rt0.c0 COLLATE NOCASE, ((rt0.c2) NOT BETWEEN (rt0.c4) AND (rt0.c1))))) GROUP BY rt0.c2, rt0.c0, v0.c0, rt0.c3, rt0.c4 HAVING (((((rt0.c2 IN ()))OR(HEX(DISTINCT AVG(COUNT(*))))))OR('埐+᷃&INኇ4')) UNION ALL SELECT rt0.c2, rt0.c0, v0.c0, rt0.c3, rt0.c4 FROM rt0 CROSS JOIN v0 ON (((rt0.c0, rt0.c3, x'', rt0.c3, rt0.c0)) NOT BETWEEN ((((rt0.c1)<=(rt0.c2)), (((rt0.c3))>((rt0.c1))), ((rt0.c1)+(v0.c0)), (+ (v0.c0)), rt0.c2)) AND ((((((rt0.c4)AND('')))OR(rt0.c0)), ABS(DISTINCT v0.c0), ((rt0.c3)<<(rt0.c3)), rt0.c0 COLLATE NOCASE, ((rt0.c2) NOT BETWEEN (rt0.c4) AND (rt0.c1))))) GROUP BY rt0.c2, rt0.c0, v0.c0, rt0.c3, rt0.c4 HAVING (NOT ((((((rt0.c2 IN ()))OR(HEX(DISTINCT AVG(COUNT(*))))))OR('埐+᷃&INኇ4')))) UNION ALL SELECT rt0.c2, rt0.c0, v0.c0, rt0.c3, rt0.c4 FROM rt0 CROSS JOIN v0 ON (((rt0.c0, rt0.c3, x'', rt0.c3, rt0.c0)) NOT BETWEEN ((((rt0.c1)<=(rt0.c2)), (((rt0.c3))>((rt0.c1))), ((rt0.c1)+(v0.c0)), (+ (v0.c0)), rt0.c2)) AND ((((((rt0.c4)AND('')))OR(rt0.c0)), ABS(DISTINCT v0.c0), ((rt0.c3)<<(rt0.c3)), rt0.c0 COLLATE NOCASE, ((rt0.c2) NOT BETWEEN (rt0.c4) AND (rt0.c1))))) GROUP BY rt0.c2, rt0.c0, v0.c0, rt0.c3, rt0.c4 HAVING (((((((rt0.c2 IN ()))OR(HEX(DISTINCT AVG(COUNT(*))))))OR('埐+᷃&INኇ4'))) ISNULL);
SELECT rt0.c2, v0.c0, rt0.c4 FROM rt0, v0;
SELECT ALL rt0.c2, v0.c0, rt0.c4 FROM rt0, v0 WHERE ((~ (((v0.c0) IS FALSE)))) UNION ALL SELECT ALL rt0.c2, v0.c0, rt0.c4 FROM rt0, v0 WHERE ((NOT ((~ (((v0.c0) IS FALSE)))))) UNION ALL SELECT ALL rt0.c2, v0.c0, rt0.c4 FROM rt0, v0 WHERE ((((~ (((v0.c0) IS FALSE)))) ISNULL));
SELECT rt0.c2, v0.c0, rt0.c4 FROM rt0, v0;
SELECT DISTINCT * FROM rt0, v0;
SELECT DISTINCT * FROM rt0, v0 WHERE (rt0.c0) UNION SELECT DISTINCT * FROM rt0, v0 WHERE ((NOT (rt0.c0))) UNION SELECT DISTINCT * FROM rt0, v0 WHERE (((rt0.c0) ISNULL));
SELECT DISTINCT * FROM rt0, v0;
SELECT rt0.c0, rt0.c4, rt0.c3, v0.c0, rt0.c2, rt0.c1 FROM rt0, v0 GROUP BY rt0.c0, rt0.c4, rt0.c3, v0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c0, rt0.c4, rt0.c3, v0.c0, rt0.c2, rt0.c1 FROM rt0, v0 WHERE ((('(\n') NOT BETWEEN (rt0.c3) AND (v0.c0)) COLLATE BINARY) GROUP BY rt0.c0, rt0.c4, rt0.c3, v0.c0, rt0.c2, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c4, rt0.c3, v0.c0, rt0.c2, rt0.c1 FROM rt0, v0 WHERE ((NOT ((('(\n') NOT BETWEEN (rt0.c3) AND (v0.c0)) COLLATE BINARY))) GROUP BY rt0.c0, rt0.c4, rt0.c3, v0.c0, rt0.c2, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c4, rt0.c3, v0.c0, rt0.c2, rt0.c1 FROM rt0, v0 WHERE ((((('(\n') NOT BETWEEN (rt0.c3) AND (v0.c0)) COLLATE BINARY) ISNULL)) GROUP BY rt0.c0, rt0.c4, rt0.c3, v0.c0, rt0.c2, rt0.c1;
SELECT rt0.c0, rt0.c4, rt0.c3, v0.c0, rt0.c2, rt0.c1 FROM rt0, v0 GROUP BY rt0.c0, rt0.c4, rt0.c3, v0.c0, rt0.c2, rt0.c1;
SELECT ALL v0.c0, rt0.c1 FROM rt0 FULL OUTER JOIN v0 ON ((CASE rt0.c3  WHEN v0.c0 THEN rt0.c1 ELSE rt0.c4 END)<>((((rt0.c1, rt0.c0, rt0.c3))<=((rt0.c0, v0.c0, v0.c0))))) GROUP BY v0.c0, rt0.c1;
SELECT ALL v0.c0, rt0.c1 FROM rt0 FULL OUTER JOIN v0 ON ((CASE rt0.c3  WHEN v0.c0 THEN rt0.c1 ELSE rt0.c4 END)!=((((rt0.c1, rt0.c0, rt0.c3))<=((rt0.c0, v0.c0, v0.c0))))) GROUP BY v0.c0, rt0.c1 HAVING COUNT(*) UNION ALL SELECT ALL v0.c0, rt0.c1 FROM rt0 FULL OUTER JOIN v0 ON ((CASE rt0.c3  WHEN v0.c0 THEN rt0.c1 ELSE rt0.c4 END)!=((((rt0.c1, rt0.c0, rt0.c3))<=((rt0.c0, v0.c0, v0.c0))))) GROUP BY v0.c0, rt0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL v0.c0, rt0.c1 FROM rt0 FULL OUTER JOIN v0 ON ((CASE rt0.c3  WHEN v0.c0 THEN rt0.c1 ELSE rt0.c4 END)!=((((rt0.c1, rt0.c0, rt0.c3))<=((rt0.c0, v0.c0, v0.c0))))) GROUP BY v0.c0, rt0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT ALL v0.c0, rt0.c1 FROM rt0 FULL OUTER JOIN v0 ON ((CASE rt0.c3  WHEN v0.c0 THEN rt0.c1 ELSE rt0.c4 END)<>((((rt0.c1, rt0.c0, rt0.c3))<=((rt0.c0, v0.c0, v0.c0))))) GROUP BY v0.c0, rt0.c1;
SELECT ALL v0.c0, rt0.c1 FROM rt0 FULL OUTER JOIN v0 ON ((CASE rt0.c3  WHEN v0.c0 THEN rt0.c1 ELSE rt0.c4 END)!=((((rt0.c1, rt0.c0, rt0.c3))<=((rt0.c0, v0.c0, v0.c0))))) GROUP BY v0.c0, rt0.c1 HAVING COUNT(*) UNION ALL SELECT ALL v0.c0, rt0.c1 FROM rt0 FULL OUTER JOIN v0 ON ((CASE rt0.c3  WHEN v0.c0 THEN rt0.c1 ELSE rt0.c4 END)!=((((rt0.c1, rt0.c0, rt0.c3))<=((rt0.c0, v0.c0, v0.c0))))) GROUP BY v0.c0, rt0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL v0.c0, rt0.c1 FROM rt0 FULL OUTER JOIN v0 ON ((CASE rt0.c3  WHEN v0.c0 THEN rt0.c1 ELSE rt0.c4 END)!=((((rt0.c1, rt0.c0, rt0.c3))<=((rt0.c0, v0.c0, v0.c0))))) GROUP BY v0.c0, rt0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT ALL v0.c0, rt0.c1 FROM rt0 FULL OUTER JOIN v0 ON ((CASE rt0.c3  WHEN v0.c0 THEN rt0.c1 ELSE rt0.c4 END)<>((((rt0.c1, rt0.c0, rt0.c3))<=((rt0.c0, v0.c0, v0.c0))))) GROUP BY v0.c0, rt0.c1;
SELECT ALL * FROM v0;
SELECT ALL * FROM v0 WHERE (v0.c0) UNION ALL SELECT ALL * FROM v0 WHERE ((NOT (v0.c0))) UNION ALL SELECT * FROM v0 WHERE (((v0.c0) ISNULL));
SELECT ALL * FROM v0;
SELECT DISTINCT rt0.c4, rt0.c0, rt0.c2, v0.c0, rt0.c3 FROM v0 LEFT OUTER JOIN rt0 ON ((((((((((rt0.c4)AND(0.5808225708112476)))OR(rt0.c3)))AND(rt0.c0)))AND(rt0.c1)))AND(rt0.c0 COLLATE BINARY));
SELECT DISTINCT rt0.c4, rt0.c0, rt0.c2, v0.c0, rt0.c3 FROM v0 LEFT OUTER JOIN rt0 ON ((((((((((rt0.c4)AND(0.5808225708112476)))OR(rt0.c3)))AND(rt0.c0)))AND(rt0.c1)))AND(rt0.c0 COLLATE BINARY)) WHERE (rt0.c0) UNION SELECT DISTINCT rt0.c4, rt0.c0, rt0.c2, v0.c0, rt0.c3 FROM v0 LEFT OUTER JOIN rt0 ON ((((((((((rt0.c4)AND(0.5808225708112476)))OR(rt0.c3)))AND(rt0.c0)))AND(rt0.c1)))AND(rt0.c0 COLLATE BINARY)) WHERE ((NOT (rt0.c0))) UNION SELECT DISTINCT rt0.c4, rt0.c0, rt0.c2, v0.c0, rt0.c3 FROM v0 LEFT OUTER JOIN rt0 ON ((((((((((rt0.c4)AND(0.5808225708112476)))OR(rt0.c3)))AND(rt0.c0)))AND(rt0.c1)))AND(rt0.c0 COLLATE BINARY)) WHERE (((rt0.c0) ISNULL));
SELECT DISTINCT rt0.c4, rt0.c0, rt0.c2, v0.c0, rt0.c3 FROM v0 LEFT OUTER JOIN rt0 ON ((((((((((rt0.c4)AND(0.5808225708112476)))OR(rt0.c3)))AND(rt0.c0)))AND(rt0.c1)))AND(rt0.c0 COLLATE BINARY));
SELECT rt0.c0, rt0.c2, rt0.c4, rt0.c3 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c4, rt0.c3;
SELECT ALL rt0.c0, rt0.c2, rt0.c4, rt0.c3 FROM rt0 WHERE (((((((((((((NULL)OR(CAST(rt0.c2 AS TEXT))))OR((~ (rt0.c1)))))AND(CAST(rt0.c2 AS REAL))))OR(CAST(rt0.c1 AS TEXT))))OR('-267745389')))AND(((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c3))))) GROUP BY rt0.c0, rt0.c2, rt0.c4, rt0.c3 UNION SELECT ALL rt0.c0, rt0.c2, rt0.c4, rt0.c3 FROM rt0 WHERE ((NOT (((((((((((((NULL)OR(CAST(rt0.c2 AS TEXT))))OR((~ (rt0.c1)))))AND(CAST(rt0.c2 AS REAL))))OR(CAST(rt0.c1 AS TEXT))))OR('-267745389')))AND(((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c3))))))) GROUP BY rt0.c0, rt0.c2, rt0.c4, rt0.c3 UNION SELECT rt0.c0, rt0.c2, rt0.c4, rt0.c3 FROM rt0 WHERE (((((((((((((((NULL)OR(CAST(rt0.c2 AS TEXT))))OR((~ (rt0.c1)))))AND(CAST(rt0.c2 AS REAL))))OR(CAST(rt0.c1 AS TEXT))))OR('-267745389')))AND(((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c3))))) ISNULL)) GROUP BY rt0.c0, rt0.c2, rt0.c4, rt0.c3;
SELECT rt0.c0, rt0.c2, rt0.c4, rt0.c3 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c4, rt0.c3;
SELECT rt0.c2, rt0.c1, rt0.c0, v0.c0 FROM v0, rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0, v0.c0;
SELECT rt0.c2, rt0.c1, rt0.c0, v0.c0 FROM v0, rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0, v0.c0 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0, v0.c0 FROM v0, rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0, v0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0, v0.c0 FROM v0, rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0, v0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c2, rt0.c1, rt0.c0, v0.c0 FROM v0, rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0, v0.c0;
SELECT rt0.c2, rt0.c1, rt0.c0, v0.c0 FROM v0, rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0, v0.c0 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0, v0.c0 FROM v0, rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0, v0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0, v0.c0 FROM v0, rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0, v0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c2, rt0.c1, rt0.c0, v0.c0 FROM v0, rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0, v0.c0;
SELECT rt0.c3, rt0.c1, rt0.c0 FROM v0, rt0;
SELECT rt0.c3, rt0.c1, rt0.c0 FROM v0, rt0 WHERE ((((((v0.c0)/(rt0.c4))))>((CAST(v0.c0 AS INTEGER))))) UNION ALL SELECT rt0.c3, rt0.c1, rt0.c0 FROM v0, rt0 WHERE ((NOT ((((((v0.c0)/(rt0.c4))))>((CAST(v0.c0 AS INTEGER))))))) UNION ALL SELECT rt0.c3, rt0.c1, rt0.c0 FROM v0, rt0 WHERE ((((((((v0.c0)/(rt0.c4))))>((CAST(v0.c0 AS INTEGER))))) ISNULL));
SELECT rt0.c3, rt0.c1, rt0.c0 FROM v0, rt0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE ((((NOT (v0.c0))) BETWEEN (CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN 0xffffffffedcbce55 WHEN v0.c0 THEN 0.2361453613635247 END) AND (((v0.c0) BETWEEN ('㕾vr''钮tb') AND (NULL))))) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT ((((NOT (v0.c0))) BETWEEN (CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN 0Xffffffffedcbce55 WHEN v0.c0 THEN 0.2361453613635247 END) AND (((v0.c0) BETWEEN ('㕾vr''钮tb') AND (NULL))))))) UNION SELECT DISTINCT * FROM v0 WHERE ((((((NOT (v0.c0))) BETWEEN (CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN 0xffffffffedcbce55 WHEN v0.c0 THEN 0.2361453613635247 END) AND (((v0.c0) BETWEEN ('㕾vr''钮tb') AND (NULL))))) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0, rt0.c3, rt0.c4 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0, rt0.c3, rt0.c4;
SELECT rt0.c2, rt0.c1, rt0.c0, rt0.c3, rt0.c4 FROM rt0 WHERE (CASE ((rt0.c3) NOT BETWEEN (rt0.c2) AND (rt0.c2))  WHEN CAST(rt0.c1 AS TEXT) THEN ((rt0.c0)*(rt0.c0)) END) GROUP BY rt0.c2, rt0.c1, rt0.c0, rt0.c3, rt0.c4 UNION SELECT rt0.c2, rt0.c1, rt0.c0, rt0.c3, rt0.c4 FROM rt0 WHERE ((NOT (CASE ((rt0.c3) NOT BETWEEN (rt0.c2) AND (rt0.c2))  WHEN CAST(rt0.c1 AS TEXT) THEN ((rt0.c0)*(rt0.c0)) END))) GROUP BY rt0.c2, rt0.c1, rt0.c0, rt0.c3, rt0.c4 UNION SELECT ALL rt0.c2, rt0.c1, rt0.c0, rt0.c3, rt0.c4 FROM rt0 WHERE (((CASE ((rt0.c3) NOT BETWEEN (rt0.c2) AND (rt0.c2))  WHEN CAST(rt0.c1 AS TEXT) THEN ((rt0.c0)*(rt0.c0)) END) ISNULL)) GROUP BY rt0.c2, rt0.c1, rt0.c0, rt0.c3, rt0.c4;
SELECT ALL rt0.c2, rt0.c1, rt0.c0, rt0.c3, rt0.c4 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0, rt0.c3, rt0.c4;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING MIN(CASE WHEN COUNT(*) THEN v0.c0 WHEN v0.c0 THEN SUM(MAX(AVG(x''))) WHEN TOTAL(MAX(v0.c0)) THEN TOTAL(v0.c0) END) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (MIN(CASE WHEN COUNT(*) THEN v0.c0 WHEN v0.c0 THEN SUM(MAX(AVG(x''))) WHEN TOTAL(MAX(v0.c0)) THEN TOTAL(v0.c0) END))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((MIN(CASE WHEN COUNT(*) THEN v0.c0 WHEN v0.c0 THEN SUM(MAX(AVG(x''))) WHEN TOTAL(MAX(v0.c0)) THEN TOTAL(v0.c0) END)) ISNULL);
SELECT ALL * FROM v0 INNER JOIN rt0 ON CASE WHEN (((rt0.c2, rt0.c2, rt0.c3))=((rt0.c2, rt0.c4, rt0.c4))) THEN ((((((((((((rt0.c2)OR(rt0.c4)))OR(v0.c0)))AND(rt0.c4)))AND(v0.c0)))OR(rt0.c4)))OR(rt0.c1)) END;
SELECT ALL * FROM v0 INNER JOIN rt0 ON CASE WHEN (((rt0.c2, rt0.c2, rt0.c3))==((rt0.c2, rt0.c4, rt0.c4))) THEN ((((((((((((rt0.c2)OR(rt0.c4)))OR(v0.c0)))AND(rt0.c4)))AND(v0.c0)))OR(rt0.c4)))OR(rt0.c1)) END WHERE ((~ (rt0.c1 COLLATE NOCASE))) UNION ALL SELECT ALL * FROM v0 INNER JOIN rt0 ON CASE WHEN (((rt0.c2, rt0.c2, rt0.c3))=((rt0.c2, rt0.c4, rt0.c4))) THEN ((((((((((((rt0.c2)OR(rt0.c4)))OR(v0.c0)))AND(rt0.c4)))AND(v0.c0)))OR(rt0.c4)))OR(rt0.c1)) END WHERE ((NOT ((~ (rt0.c1 COLLATE NOCASE))))) UNION ALL SELECT * FROM v0 INNER JOIN rt0 ON CASE WHEN (((rt0.c2, rt0.c2, rt0.c3))=((rt0.c2, rt0.c4, rt0.c4))) THEN ((((((((((((rt0.c2)OR(rt0.c4)))OR(v0.c0)))AND(rt0.c4)))AND(v0.c0)))OR(rt0.c4)))OR(rt0.c1)) END WHERE ((((~ (rt0.c1 COLLATE NOCASE))) ISNULL));
SELECT ALL * FROM v0 INNER JOIN rt0 ON CASE WHEN (((rt0.c2, rt0.c2, rt0.c3))=((rt0.c2, rt0.c4, rt0.c4))) THEN ((((((((((((rt0.c2)OR(rt0.c4)))OR(v0.c0)))AND(rt0.c4)))AND(v0.c0)))OR(rt0.c4)))OR(rt0.c1)) END;
SELECT DISTINCT rt0.c0, rt0.c3, rt0.c1 FROM rt0 RIGHT OUTER JOIN v0 ON ((CASE WHEN 0.04187307831988074 THEN rt0.c0 END) BETWEEN (((rt0.c3)GLOB(rt0.c1))) AND ((((rt0.c2, v0.c0, rt0.c1))<((rt0.c3, NULL, rt0.c0)))));
SELECT DISTINCT rt0.c0, rt0.c3, rt0.c1 FROM rt0 RIGHT OUTER JOIN v0 ON ((CASE WHEN 0.04187307831988074 THEN rt0.c0 END) BETWEEN (((rt0.c3)GLOB(rt0.c1))) AND ((((rt0.c2, v0.c0, rt0.c1))<((rt0.c3, NULL, rt0.c0))))) WHERE (((((v0.c0 COLLATE RTRIM)OR(RTRIM(rt0.c1))))OR(((((x'')AND(rt0.c1)))OR(rt0.c2))))) UNION SELECT DISTINCT rt0.c0, rt0.c3, rt0.c1 FROM rt0 RIGHT OUTER JOIN v0 ON ((CASE WHEN 0.04187307831988074 THEN rt0.c0 END) BETWEEN (((rt0.c3)GLOB(rt0.c1))) AND ((((rt0.c2, v0.c0, rt0.c1))<((rt0.c3, NULL, rt0.c0))))) WHERE ((NOT (((((v0.c0 COLLATE RTRIM)OR(RTRIM(rt0.c1))))OR(((((x'')AND(rt0.c1)))OR(rt0.c2))))))) UNION SELECT DISTINCT rt0.c0, rt0.c3, rt0.c1 FROM rt0 RIGHT OUTER JOIN v0 ON ((CASE WHEN 0.04187307831988074 THEN rt0.c0 END) BETWEEN (((rt0.c3)GLOB(rt0.c1))) AND ((((rt0.c2, v0.c0, rt0.c1))<((rt0.c3, NULL, rt0.c0))))) WHERE (((((((v0.c0 COLLATE RTRIM)OR(RTRIM(rt0.c1))))OR(((((x'')AND(rt0.c1)))OR(rt0.c2))))) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c3, rt0.c1 FROM rt0 RIGHT OUTER JOIN v0 ON ((CASE WHEN 0.04187307831988074 THEN rt0.c0 END) BETWEEN (((rt0.c3)GLOB(rt0.c1))) AND ((((rt0.c2, v0.c0, rt0.c1))<((rt0.c3, NULL, rt0.c0)))));
SELECT ALL rt0.c3 FROM rt0 GROUP BY rt0.c3;
SELECT ALL rt0.c3 FROM rt0 WHERE (CAST(((rt0.c4)*(x'e708')) AS INTEGER)) GROUP BY rt0.c3 UNION SELECT rt0.c3 FROM rt0 WHERE ((NOT (CAST(((rt0.c4)*(x'e708')) AS INTEGER)))) GROUP BY rt0.c3 UNION SELECT ALL rt0.c3 FROM rt0 WHERE (((CAST(((rt0.c4)*(x'e708')) AS INTEGER)) ISNULL)) GROUP BY rt0.c3;
SELECT ALL rt0.c3 FROM rt0 GROUP BY rt0.c3;
SELECT rt0.c1, rt0.c4, rt0.c2, rt0.c0, rt0.c3 FROM rt0 GROUP BY rt0.c1, rt0.c4, rt0.c2, rt0.c0, rt0.c3;
SELECT ALL rt0.c1, rt0.c4, rt0.c2, rt0.c0, rt0.c3 FROM rt0 GROUP BY rt0.c1, rt0.c4, rt0.c2, rt0.c0, rt0.c3 HAVING CAST(NULL AS BLOB) UNION ALL SELECT rt0.c1, rt0.c4, rt0.c2, rt0.c0, rt0.c3 FROM rt0 GROUP BY rt0.c1, rt0.c4, rt0.c2, rt0.c0, rt0.c3 HAVING (NOT (CAST(NULL AS BLOB))) UNION ALL SELECT ALL rt0.c1, rt0.c4, rt0.c2, rt0.c0, rt0.c3 FROM rt0 GROUP BY rt0.c1, rt0.c4, rt0.c2, rt0.c0, rt0.c3 HAVING ((CAST(NULL AS BLOB)) ISNULL);
SELECT rt0.c1, rt0.c4, rt0.c2, rt0.c0, rt0.c3 FROM rt0 GROUP BY rt0.c1, rt0.c4, rt0.c2, rt0.c0, rt0.c3;
SELECT ALL rt0.c1, rt0.c4, rt0.c2, rt0.c0, rt0.c3 FROM rt0 GROUP BY rt0.c1, rt0.c4, rt0.c2, rt0.c0, rt0.c3 HAVING CAST(NULL AS BLOB) UNION ALL SELECT rt0.c1, rt0.c4, rt0.c2, rt0.c0, rt0.c3 FROM rt0 GROUP BY rt0.c1, rt0.c4, rt0.c2, rt0.c0, rt0.c3 HAVING (NOT (CAST(NULL AS BLOB))) UNION ALL SELECT ALL rt0.c1, rt0.c4, rt0.c2, rt0.c0, rt0.c3 FROM rt0 GROUP BY rt0.c1, rt0.c4, rt0.c2, rt0.c0, rt0.c3 HAVING ((CAST(NULL AS BLOB)) ISNULL);
SELECT rt0.c1, rt0.c4, rt0.c2, rt0.c0, rt0.c3 FROM rt0 GROUP BY rt0.c1, rt0.c4, rt0.c2, rt0.c0, rt0.c3;
SELECT ALL * FROM v0;
SELECT * FROM v0 WHERE ((((v0.c0)<=(v0.c0)) IN ())) UNION ALL SELECT ALL * FROM v0 WHERE ((NOT ((((v0.c0)<=(v0.c0)) IN ())))) UNION ALL SELECT ALL * FROM v0 WHERE ((((((v0.c0)<=(v0.c0)) IN ())) ISNULL));
SELECT ALL * FROM v0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE ((((PRINTF(v0.c0, v0.c0, v0.c0)))>=((((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))AND(v0.c0)))AND(v0.c0)))))) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT ((((PRINTF(v0.c0, v0.c0, v0.c0)))>=((((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))AND(v0.c0)))AND(v0.c0)))))))) UNION SELECT DISTINCT * FROM v0 WHERE ((((((PRINTF(v0.c0, v0.c0, v0.c0)))>=((((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))AND(v0.c0)))AND(v0.c0)))))) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT rt0.c4, v0.c0, rt0.c0 FROM rt0 LEFT OUTER JOIN v0 ON CAST(CAST(v0.c0 AS INTEGER) AS NUMERIC) GROUP BY rt0.c4, v0.c0, rt0.c0;
SELECT ALL rt0.c4, v0.c0, rt0.c0 FROM rt0 LEFT OUTER JOIN v0 ON CAST(CAST(v0.c0 AS INTEGER) AS NUMERIC) WHERE (CAST((- (rt0.c2)) AS REAL)) GROUP BY rt0.c4, v0.c0, rt0.c0 UNION SELECT ALL rt0.c4, v0.c0, rt0.c0 FROM rt0 LEFT OUTER JOIN v0 ON CAST(CAST(v0.c0 AS INTEGER) AS NUMERIC) WHERE ((NOT (CAST((- (rt0.c2)) AS REAL)))) GROUP BY rt0.c4, v0.c0, rt0.c0 UNION SELECT rt0.c4, v0.c0, rt0.c0 FROM rt0 LEFT OUTER JOIN v0 ON CAST(CAST(v0.c0 AS INTEGER) AS NUMERIC) WHERE (((CAST((- (rt0.c2)) AS REAL)) ISNULL)) GROUP BY rt0.c4, v0.c0, rt0.c0;
SELECT rt0.c4, v0.c0, rt0.c0 FROM rt0 LEFT OUTER JOIN v0 ON CAST(CAST(v0.c0 AS INTEGER) AS NUMERIC) GROUP BY rt0.c4, v0.c0, rt0.c0;
SELECT ALL rt0.c4, rt0.c2, v0.c0 FROM rt0, v0 GROUP BY rt0.c4, rt0.c2, v0.c0;
SELECT rt0.c4, rt0.c2, v0.c0 FROM rt0, v0 GROUP BY rt0.c4, rt0.c2, v0.c0 HAVING COUNT(((GROUP_CONCAT(rt0.c2)) IS FALSE)) UNION ALL SELECT ALL rt0.c4, rt0.c2, v0.c0 FROM rt0, v0 GROUP BY rt0.c4, rt0.c2, v0.c0 HAVING (NOT (COUNT(((GROUP_CONCAT(rt0.c2)) IS FALSE)))) UNION ALL SELECT rt0.c4, rt0.c2, v0.c0 FROM rt0, v0 GROUP BY rt0.c4, rt0.c2, v0.c0 HAVING ((COUNT(((GROUP_CONCAT(rt0.c2)) IS FALSE))) ISNULL);
SELECT ALL rt0.c2 FROM rt0;
SELECT rt0.c2 FROM rt0 WHERE (CAST(((rt0.c4)<=(rt0.c1)) AS NUMERIC)) UNION ALL SELECT ALL rt0.c2 FROM rt0 WHERE ((NOT (CAST(((rt0.c4)<=(rt0.c1)) AS NUMERIC)))) UNION ALL SELECT rt0.c2 FROM rt0 WHERE (((CAST(((rt0.c4)<=(rt0.c1)) AS NUMERIC)) ISNULL));
SELECT ALL rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c1, rt0.c4, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c1, rt0.c4, rt0.c2 FROM rt0 WHERE (rt0.c2) UNION SELECT DISTINCT rt0.c0, rt0.c1, rt0.c4, rt0.c2 FROM rt0 WHERE ((NOT (rt0.c2))) UNION SELECT DISTINCT rt0.c0, rt0.c1, rt0.c4, rt0.c2 FROM rt0 WHERE (((rt0.c2) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c1, rt0.c4, rt0.c2 FROM rt0;
SELECT v0.c0, rt0.c2, rt0.c4 FROM v0, rt0 GROUP BY v0.c0, rt0.c2, rt0.c4;
SELECT v0.c0, rt0.c2, rt0.c4 FROM v0, rt0 WHERE (x'b35d') GROUP BY v0.c0, rt0.c2, rt0.c4 UNION SELECT v0.c0, rt0.c2, rt0.c4 FROM v0, rt0 WHERE ((NOT (x'b35d'))) GROUP BY v0.c0, rt0.c2, rt0.c4 UNION SELECT ALL v0.c0, rt0.c2, rt0.c4 FROM v0, rt0 WHERE (((x'b35d') ISNULL)) GROUP BY v0.c0, rt0.c2, rt0.c4;
SELECT v0.c0, rt0.c2, rt0.c4 FROM v0, rt0 GROUP BY v0.c0, rt0.c2, rt0.c4;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING MIN(((TOTAL(v0.c0))|(COUNT(*)))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (MIN(((TOTAL(v0.c0))|(COUNT(*)))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((MIN(((TOTAL(v0.c0))|(COUNT(*))))) ISNULL);
SELECT ALL * FROM v0;
SELECT ALL * FROM v0 WHERE ((CASE WHEN v0.c0 THEN v0.c0 WHEN '5吁' THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END IN (((v0.c0)OR(-1798858649))))) UNION ALL SELECT ALL * FROM v0 WHERE ((NOT ((CASE WHEN v0.c0 THEN v0.c0 WHEN '5吁' THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END IN (((v0.c0)OR(-1798858649))))))) UNION ALL SELECT * FROM v0 WHERE ((((CASE WHEN v0.c0 THEN v0.c0 WHEN '5吁' THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END IN (((v0.c0)OR(-1798858649))))) ISNULL));
SELECT ALL * FROM v0;
SELECT DISTINCT * FROM rt0, v0;
SELECT DISTINCT * FROM rt0, v0 WHERE (((((rt0.c1)IS(v0.c0)))<>(((rt0.c2)%(rt0.c4))))) UNION SELECT DISTINCT * FROM rt0, v0 WHERE ((NOT (((((rt0.c1)IS(v0.c0)))!=(((rt0.c2)%(rt0.c4))))))) UNION SELECT DISTINCT * FROM rt0, v0 WHERE (((((((rt0.c1)IS(v0.c0)))!=(((rt0.c2)%(rt0.c4))))) ISNULL));
SELECT DISTINCT * FROM rt0, v0;
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c1 FROM rt0 NOT INDEXED WHERE ((NOT (((rt0.c0)==(rt0.c4))))) GROUP BY rt0.c0, rt0.c1 UNION SELECT rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT ((NOT (((rt0.c0)==(rt0.c4))))))) GROUP BY rt0.c0, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c1 FROM rt0 WHERE ((((NOT (((rt0.c0)==(rt0.c4))))) ISNULL)) GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c4, v0.c0, rt0.c3, rt0.c1, rt0.c0 FROM v0, rt0 GROUP BY rt0.c4, v0.c0, rt0.c3, rt0.c1, rt0.c0;
SELECT rt0.c4, v0.c0, rt0.c3, rt0.c1, rt0.c0 FROM v0, rt0 GROUP BY rt0.c4, v0.c0, rt0.c3, rt0.c1, rt0.c0 HAVING MIN(COUNT(MAX(v0.c0))) UNION ALL SELECT rt0.c4, v0.c0, rt0.c3, rt0.c1, rt0.c0 FROM v0, rt0 GROUP BY rt0.c4, v0.c0, rt0.c3, rt0.c1, rt0.c0 HAVING (NOT (MIN(COUNT(MAX(v0.c0))))) UNION ALL SELECT rt0.c4, v0.c0, rt0.c3, rt0.c1, rt0.c0 FROM v0, rt0 GROUP BY rt0.c4, v0.c0, rt0.c3, rt0.c1, rt0.c0 HAVING ((MIN(COUNT(MAX(v0.c0)))) ISNULL);
SELECT ALL rt0.c2 FROM v0 RIGHT OUTER JOIN rt0 ON ((rt0.c4)<<(rt0.c2)) COLLATE BINARY;
SELECT ALL rt0.c2 FROM v0 RIGHT OUTER JOIN rt0 ON ((rt0.c4)<<(rt0.c2)) COLLATE BINARY WHERE (0.26640529680486613) UNION ALL SELECT ALL rt0.c2 FROM v0 RIGHT OUTER JOIN rt0 ON ((rt0.c4)<<(rt0.c2)) COLLATE BINARY WHERE ((NOT (0.26640529680486613))) UNION ALL SELECT ALL rt0.c2 FROM v0 RIGHT OUTER JOIN rt0 ON ((rt0.c4)<<(rt0.c2)) COLLATE BINARY WHERE (((0.26640529680486613) ISNULL));
SELECT ALL rt0.c2 FROM v0 RIGHT OUTER JOIN rt0 ON ((rt0.c4)<<(rt0.c2)) COLLATE BINARY;
SELECT DISTINCT * FROM v0 INNER JOIN rt0 ON ((((NULL)<>(rt0.c0)))AND(((rt0.c0) BETWEEN (rt0.c4) AND (rt0.c0))));
SELECT DISTINCT * FROM v0 INNER JOIN rt0 ON ((((NULL)<>(rt0.c0)))AND(((rt0.c0) BETWEEN (rt0.c4) AND (rt0.c0)))) WHERE ((+ (NULL))) UNION SELECT DISTINCT * FROM v0 INNER JOIN rt0 ON ((((NULL)<>(rt0.c0)))AND(((rt0.c0) BETWEEN (rt0.c4) AND (rt0.c0)))) WHERE ((NOT ((+ (NULL))))) UNION SELECT DISTINCT * FROM v0 INNER JOIN rt0 ON ((((NULL)<>(rt0.c0)))AND(((rt0.c0) BETWEEN (rt0.c4) AND (rt0.c0)))) WHERE ((((+ (NULL))) ISNULL));
SELECT DISTINCT * FROM v0 INNER JOIN rt0 ON ((((NULL)<>(rt0.c0)))AND(((rt0.c0) BETWEEN (rt0.c4) AND (rt0.c0))));
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE ((~ (((v0.c0)+(v0.c0))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT ((~ (((v0.c0)+(v0.c0))))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((((~ (((v0.c0)+(v0.c0))))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT rt0.c3, v0.c0, rt0.c0 FROM v0 FULL OUTER JOIN rt0 ON (((~ (0X40463d71)))-((NOT (rt0.c1)))) GROUP BY rt0.c3, v0.c0, rt0.c0;
SELECT ALL rt0.c3, v0.c0, rt0.c0 FROM v0 FULL OUTER JOIN rt0 ON (((~ (0x40463d71)))-((NOT (rt0.c1)))) GROUP BY rt0.c3, v0.c0, rt0.c0 HAVING COUNT(CASE rt0.c2  WHEN AVG(rt0.c3) THEN rt0.c0 END) UNION ALL SELECT rt0.c3, v0.c0, rt0.c0 FROM v0 FULL OUTER JOIN rt0 ON (((~ (0X40463d71)))-((NOT (rt0.c1)))) GROUP BY rt0.c3, v0.c0, rt0.c0 HAVING (NOT (COUNT(CASE rt0.c2  WHEN AVG(rt0.c3) THEN rt0.c0 END))) UNION ALL SELECT ALL rt0.c3, v0.c0, rt0.c0 FROM v0 FULL OUTER JOIN rt0 ON (((~ (0X40463d71)))-((NOT (rt0.c1)))) GROUP BY rt0.c3, v0.c0, rt0.c0 HAVING ((COUNT(CASE rt0.c2  WHEN AVG(rt0.c3) THEN rt0.c0 END)) ISNULL);
SELECT ALL rt0.c2, rt0.c0 FROM rt0 LEFT OUTER JOIN v0 ON ((((((((((((((((((rt0.c3)||(rt0.c4)))AND(CASE rt0.c3  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c1 END)))OR(((rt0.c4) NOTNULL))))AND(rt0.c3 COLLATE RTRIM)))OR((~ (v0.c0)))))AND(v0.c0)))OR(((rt0.c3)>=(rt0.c3)))))OR((((rt0.c4, rt0.c4, 0x7fffffffffffffff)) BETWEEN ((rt0.c1, rt0.c4, rt0.c3)) AND ((v0.c0, NULL, rt0.c1))))))OR(((((rt0.c1)OR('')))AND(rt0.c0))));
SELECT ALL rt0.c2, rt0.c0 FROM rt0 LEFT OUTER JOIN v0 ON ((((((((((((((((((rt0.c3)||(rt0.c4)))AND(CASE rt0.c3  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c1 END)))OR(((rt0.c4) NOTNULL))))AND(rt0.c3 COLLATE RTRIM)))OR((~ (v0.c0)))))AND(v0.c0)))OR(((rt0.c3)>=(rt0.c3)))))OR((((rt0.c4, rt0.c4, 0X7fffffffffffffff)) BETWEEN ((rt0.c1, rt0.c4, rt0.c3)) AND ((v0.c0, NULL, rt0.c1))))))OR(((((rt0.c1)OR('')))AND(rt0.c0)))) WHERE ((~ (((((rt0.c0)AND(rt0.c4)))AND(rt0.c3))))) UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM rt0 LEFT OUTER JOIN v0 ON ((((((((((((((((((rt0.c3)||(rt0.c4)))AND(CASE rt0.c3  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c1 END)))OR(((rt0.c4) NOTNULL))))AND(rt0.c3 COLLATE RTRIM)))OR((~ (v0.c0)))))AND(v0.c0)))OR(((rt0.c3)>=(rt0.c3)))))OR((((rt0.c4, rt0.c4, 0X7fffffffffffffff)) BETWEEN ((rt0.c1, rt0.c4, rt0.c3)) AND ((v0.c0, NULL, rt0.c1))))))OR(((((rt0.c1)OR('')))AND(rt0.c0)))) WHERE ((NOT ((~ (((((rt0.c0)AND(rt0.c4)))AND(rt0.c3))))))) UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM rt0 LEFT OUTER JOIN v0 ON ((((((((((((((((((rt0.c3)||(rt0.c4)))AND(CASE rt0.c3  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c1 END)))OR(((rt0.c4) NOTNULL))))AND(rt0.c3 COLLATE RTRIM)))OR((~ (v0.c0)))))AND(v0.c0)))OR(((rt0.c3)>=(rt0.c3)))))OR((((rt0.c4, rt0.c4, 0x7fffffffffffffff)) BETWEEN ((rt0.c1, rt0.c4, rt0.c3)) AND ((v0.c0, NULL, rt0.c1))))))OR(((((rt0.c1)OR('')))AND(rt0.c0)))) WHERE ((((~ (((((rt0.c0)AND(rt0.c4)))AND(rt0.c3))))) ISNULL));
SELECT ALL rt0.c2, rt0.c0 FROM rt0 LEFT OUTER JOIN v0 ON ((((((((((((((((((rt0.c3)||(rt0.c4)))AND(CASE rt0.c3  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c1 END)))OR(((rt0.c4) NOTNULL))))AND(rt0.c3 COLLATE RTRIM)))OR((~ (v0.c0)))))AND(v0.c0)))OR(((rt0.c3)>=(rt0.c3)))))OR((((rt0.c4, rt0.c4, 0x7fffffffffffffff)) BETWEEN ((rt0.c1, rt0.c4, rt0.c3)) AND ((v0.c0, NULL, rt0.c1))))))OR(((((rt0.c1)OR('')))AND(rt0.c0))));
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (CAST(ABS(v0.c0) AS BLOB)) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (CAST(ABS(v0.c0) AS BLOB)))) UNION SELECT DISTINCT * FROM v0 WHERE (((CAST(ABS(v0.c0) AS BLOB)) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT rt0.c0, rt0.c3, rt0.c4, v0.c0, rt0.c2 FROM rt0, v0 GROUP BY rt0.c0, rt0.c3, rt0.c4, v0.c0, rt0.c2;
SELECT rt0.c0, rt0.c3, rt0.c4, v0.c0, rt0.c2 FROM rt0, v0 WHERE (((((((rt0.c3)IS NOT(rt0.c4)))OR(((v0.c0) ISNULL))))AND((rt0.c3 IN ())))) GROUP BY rt0.c0, rt0.c3, rt0.c4, v0.c0, rt0.c2 UNION SELECT rt0.c0, rt0.c3, rt0.c4, v0.c0, rt0.c2 FROM rt0, v0 WHERE ((NOT (((((((rt0.c3)IS NOT(rt0.c4)))OR(((v0.c0) ISNULL))))AND((rt0.c3 IN ())))))) GROUP BY rt0.c0, rt0.c3, rt0.c4, v0.c0, rt0.c2 UNION SELECT rt0.c0, rt0.c3, rt0.c4, v0.c0, rt0.c2 FROM rt0, v0 WHERE (((((((((rt0.c3)IS NOT(rt0.c4)))OR(((v0.c0) ISNULL))))AND((rt0.c3 IN ())))) ISNULL)) GROUP BY rt0.c0, rt0.c3, rt0.c4, v0.c0, rt0.c2;
SELECT rt0.c0, rt0.c3, rt0.c4, v0.c0, rt0.c2 FROM rt0, v0 GROUP BY rt0.c0, rt0.c3, rt0.c4, v0.c0, rt0.c2;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING COUNT(CAST(COUNT(GROUP_CONCAT(v0.c0)) AS NUMERIC)) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (COUNT(CAST(COUNT(GROUP_CONCAT(v0.c0)) AS NUMERIC)))) UNION ALL SELECT ALL v0.c0 FROM v0 NOT INDEXED GROUP BY v0.c0 HAVING ((COUNT(CAST(COUNT(GROUP_CONCAT(v0.c0)) AS NUMERIC))) ISNULL);
SELECT v0.c0 FROM v0;
SELECT ALL v0.c0 FROM v0 WHERE (v0.c0) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE ((NOT (v0.c0))) UNION ALL SELECT v0.c0 FROM v0 WHERE (((v0.c0) ISNULL));
SELECT v0.c0 FROM v0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((((rt0.c1 COLLATE RTRIM)OR(((rt0.c0)>=(rt0.c0)))))AND(((rt0.c3) ISNULL)))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((((rt0.c1 COLLATE RTRIM)OR(((rt0.c0)>=(rt0.c0)))))AND(((rt0.c3) ISNULL)))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((((rt0.c1 COLLATE RTRIM)OR(((rt0.c0)>=(rt0.c0)))))AND(((rt0.c3) ISNULL)))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c2 FROM rt0 INNER JOIN v0 ON json_remove(COALESCE(NULL, v0.c0, rt0.c1, rt0.c0), ((((rt0.c1)OR(v0.c0)))AND(0.5131391929226411)), (rt0.c4 IN ()), CHANGES()) GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 INNER JOIN v0 ON json_remove(COALESCE(NULL, v0.c0, rt0.c1, rt0.c0), ((((rt0.c1)OR(v0.c0)))AND(0.5131391929226411)), (rt0.c4 IN ()), CHANGES()) WHERE ((((((rt0.c3) BETWEEN (rt0.c3) AND (rt0.c2))))>((rt0.c4)))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0 INNER JOIN v0 ON json_remove(COALESCE(NULL, v0.c0, rt0.c1, rt0.c0), ((((rt0.c1)OR(v0.c0)))AND(0.5131391929226411)), (rt0.c4 IN ()), CHANGES()) WHERE ((NOT ((((((rt0.c3) BETWEEN (rt0.c3) AND (rt0.c2))))>((rt0.c4)))))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0 INNER JOIN v0 ON json_remove(COALESCE(NULL, v0.c0, rt0.c1, rt0.c0), ((((rt0.c1)OR(v0.c0)))AND(0.5131391929226411)), (rt0.c4 IN ()), CHANGES()) WHERE ((((((((rt0.c3) BETWEEN (rt0.c3) AND (rt0.c2))))>((rt0.c4)))) ISNULL)) GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 INNER JOIN v0 ON json_remove(COALESCE(NULL, v0.c0, rt0.c1, rt0.c0), ((((rt0.c1)OR(v0.c0)))AND(0.5131391929226411)), (rt0.c4 IN ()), CHANGES()) GROUP BY rt0.c2;
SELECT ALL rt0.c0, rt0.c4, rt0.c3, rt0.c1 FROM rt0, v0 GROUP BY rt0.c0, rt0.c4, rt0.c3, rt0.c1;
SELECT rt0.c0, rt0.c4, rt0.c3, rt0.c1 FROM rt0, v0 GROUP BY rt0.c0, rt0.c4, rt0.c3, rt0.c1 HAVING AVG(MAX(COUNT(rt0.c1))) UNION ALL SELECT ALL rt0.c0, rt0.c4, rt0.c3, rt0.c1 FROM rt0, v0 GROUP BY rt0.c0, rt0.c4, rt0.c3, rt0.c1 HAVING (NOT (AVG(MAX(COUNT(rt0.c1))))) UNION ALL SELECT rt0.c0, rt0.c4, rt0.c3, rt0.c1 FROM rt0, v0 GROUP BY rt0.c0, rt0.c4, rt0.c3, rt0.c1 HAVING ((AVG(MAX(COUNT(rt0.c1)))) ISNULL);
SELECT v0.c0 FROM v0;
SELECT ALL v0.c0 FROM v0 WHERE ((((((v0.c0 IN ()))OR(CAST(v0.c0 AS REAL))))OR(((v0.c0)<>(v0.c0))))) UNION ALL SELECT v0.c0 FROM v0 WHERE ((NOT ((((((v0.c0 IN ()))OR(CAST(v0.c0 AS REAL))))OR(((v0.c0)<>(v0.c0))))))) UNION ALL SELECT v0.c0 FROM v0 WHERE ((((((((v0.c0 IN ()))OR(CAST(v0.c0 AS REAL))))OR(((v0.c0)<>(v0.c0))))) ISNULL));
SELECT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE ((((v0.c0, v0.c0, v0.c0)) NOT BETWEEN (((- (v0.c0)), ((v0.c0)OR(v0.c0)), v0.c0)) AND ((((v0.c0)==(v0.c0)), CASE v0.c0  WHEN v0.c0 THEN v0.c0 END, ((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))OR(v0.c0)))OR(v0.c0)))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT ((((v0.c0, v0.c0, v0.c0)) NOT BETWEEN (((- (v0.c0)), ((v0.c0)OR(v0.c0)), v0.c0)) AND ((((v0.c0)=(v0.c0)), CASE v0.c0  WHEN v0.c0 THEN v0.c0 END, ((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))OR(v0.c0)))OR(v0.c0)))))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((((((v0.c0, v0.c0, v0.c0)) NOT BETWEEN (((- (v0.c0)), ((v0.c0)OR(v0.c0)), v0.c0)) AND ((((v0.c0)==(v0.c0)), CASE v0.c0  WHEN v0.c0 THEN v0.c0 END, ((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))OR(v0.c0)))OR(v0.c0)))))) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE ((NOT (CAST(v0.c0 AS NUMERIC)))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT ((NOT (CAST(v0.c0 AS NUMERIC)))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((((NOT (CAST(v0.c0 AS NUMERIC)))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT rt0.c3 FROM v0, rt0 GROUP BY rt0.c3;
SELECT ALL rt0.c3 FROM v0, rt0 GROUP BY rt0.c3 HAVING GROUP_CONCAT(MAX(rt0.c2) COLLATE NOCASE) UNION ALL SELECT rt0.c3 FROM v0, rt0 GROUP BY rt0.c3 HAVING (NOT (GROUP_CONCAT(MAX(rt0.c2) COLLATE NOCASE))) UNION ALL SELECT rt0.c3 FROM v0, rt0 GROUP BY rt0.c3 HAVING ((GROUP_CONCAT(MAX(rt0.c2) COLLATE NOCASE)) ISNULL);
SELECT ALL * FROM rt0;
SELECT * FROM rt0 WHERE (CASE (NOT (rt0.c2))  WHEN ((((((((rt0.c1)OR(rt0.c3)))AND(rt0.c3)))OR(rt0.c2)))AND(rt0.c4)) THEN ((((((((NULL)AND(rt0.c4)))AND(rt0.c2)))OR(rt0.c0)))AND(rt0.c1)) ELSE (rt0.c2 IN ()) END) UNION ALL SELECT * FROM rt0 WHERE ((NOT (CASE (NOT (rt0.c2))  WHEN ((((((((rt0.c1)OR(rt0.c3)))AND(rt0.c3)))OR(rt0.c2)))AND(rt0.c4)) THEN ((((((((NULL)AND(rt0.c4)))AND(rt0.c2)))OR(rt0.c0)))AND(rt0.c1)) ELSE (rt0.c2 IN ()) END))) UNION ALL SELECT * FROM rt0 WHERE (((CASE (NOT (rt0.c2))  WHEN ((((((((rt0.c1)OR(rt0.c3)))AND(rt0.c3)))OR(rt0.c2)))AND(rt0.c4)) THEN ((((((((NULL)AND(rt0.c4)))AND(rt0.c2)))OR(rt0.c0)))AND(rt0.c1)) ELSE (rt0.c2 IN ()) END) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (((INSTR(v0.c0, v0.c0))|((((x''))<((v0.c0)))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (((INSTR(v0.c0, v0.c0))|((((x''))<((v0.c0)))))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((((INSTR(v0.c0, v0.c0))|((((x''))<((v0.c0)))))) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (CAST(((v0.c0)%(v0.c0)) AS TEXT)) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT (CAST(((v0.c0)%(v0.c0)) AS TEXT)))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE (((CAST(((v0.c0)%(v0.c0)) AS TEXT)) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT rt0.c2 FROM rt0, v0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0, v0 GROUP BY rt0.c2 HAVING ((NULL) BETWEEN (rt0.c0) AND (((v0.c0)LIKE(MIN(rt0.c3))))) UNION ALL SELECT ALL rt0.c2 FROM rt0, v0 GROUP BY rt0.c2 HAVING (NOT (((NULL) BETWEEN (rt0.c0) AND (((v0.c0)LIKE(MIN(rt0.c3))))))) UNION ALL SELECT rt0.c2 FROM rt0, v0 GROUP BY rt0.c2 HAVING ((((NULL) BETWEEN (rt0.c0) AND (((v0.c0)LIKE(MIN(rt0.c3)))))) ISNULL);
SELECT rt0.c2 FROM rt0, v0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0, v0 GROUP BY rt0.c2 HAVING ((NULL) BETWEEN (rt0.c0) AND (((v0.c0)LIKE(MIN(rt0.c3))))) UNION ALL SELECT ALL rt0.c2 FROM rt0, v0 GROUP BY rt0.c2 HAVING (NOT (((NULL) BETWEEN (rt0.c0) AND (((v0.c0)LIKE(MIN(rt0.c3))))))) UNION ALL SELECT rt0.c2 FROM rt0, v0 GROUP BY rt0.c2 HAVING ((((NULL) BETWEEN (rt0.c0) AND (((v0.c0)LIKE(MIN(rt0.c3)))))) ISNULL);
SELECT rt0.c2 FROM rt0, v0 GROUP BY rt0.c2;
SELECT ALL MIN(CAST(TYPEOF(DISTINCT rt0.c4) AS NUMERIC)) FROM rt0, v0 ORDER BY CAST(((rt0.c2)<<(rt0.c4)) AS NUMERIC) DESC, '0.07578913593159942' DESC  NULLS FIRST;
SELECT ALL v0.c0, rt0.c1, rt0.c2, rt0.c3 FROM rt0, v0;
SELECT ALL v0.c0, rt0.c1, rt0.c2, rt0.c3 FROM rt0, v0 WHERE (v0.c0) UNION ALL SELECT v0.c0, rt0.c1, rt0.c2, rt0.c3 FROM rt0, v0 WHERE ((NOT (v0.c0))) UNION ALL SELECT ALL v0.c0, rt0.c1, rt0.c2, rt0.c3 FROM rt0, v0 WHERE (((v0.c0) ISNULL));
SELECT ALL v0.c0, rt0.c1, rt0.c2, rt0.c3 FROM rt0, v0;
SELECT DISTINCT rt0.c4, rt0.c1, v0.c0, rt0.c3 FROM v0, rt0;
SELECT DISTINCT rt0.c4, rt0.c1, v0.c0, rt0.c3 FROM v0, rt0 WHERE (((((((rt0.c0)>=(rt0.c0)))OR(((rt0.c4)IS NOT(0.8590985938722812)))))AND('9p1(c'))) UNION SELECT DISTINCT rt0.c4, rt0.c1, v0.c0, rt0.c3 FROM v0, rt0 WHERE ((NOT (((((((rt0.c0)>=(rt0.c0)))OR(((rt0.c4)IS NOT(0.8590985938722812)))))AND('9p1(c'))))) UNION SELECT DISTINCT rt0.c4, rt0.c1, v0.c0, rt0.c3 FROM v0, rt0 WHERE (((((((((rt0.c0)>=(rt0.c0)))OR(((rt0.c4)IS NOT(0.8590985938722812)))))AND('9p1(c'))) ISNULL));
SELECT DISTINCT rt0.c4, rt0.c1, v0.c0, rt0.c3 FROM v0, rt0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE ((((((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0)))) BETWEEN (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) AND ((('1484564806')&(v0.c0))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT ((((((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0)))) BETWEEN (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) AND ((('1484564806')&(v0.c0))))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((((((((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0)))) BETWEEN (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) AND ((('1484564806')&(v0.c0))))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0, rt0.c3, rt0.c4, rt0.c0, rt0.c2 FROM rt0, v0 GROUP BY v0.c0, rt0.c3, rt0.c4, rt0.c0, rt0.c2;
SELECT ALL v0.c0, rt0.c3, rt0.c4, rt0.c0, rt0.c2 FROM rt0, v0 GROUP BY v0.c0, rt0.c3, rt0.c4, rt0.c0, rt0.c2 HAVING AVG(rt0.c1) UNION ALL SELECT v0.c0, rt0.c3, rt0.c4, rt0.c0, rt0.c2 FROM rt0, v0 GROUP BY v0.c0, rt0.c3, rt0.c4, rt0.c0, rt0.c2 HAVING (NOT (AVG(rt0.c1))) UNION ALL SELECT ALL v0.c0, rt0.c3, rt0.c4, rt0.c0, rt0.c2 FROM rt0, v0 GROUP BY v0.c0, rt0.c3, rt0.c4, rt0.c0, rt0.c2 HAVING ((AVG(rt0.c1)) ISNULL);
SELECT v0.c0, rt0.c3, rt0.c4, rt0.c0, rt0.c2 FROM rt0, v0 GROUP BY v0.c0, rt0.c3, rt0.c4, rt0.c0, rt0.c2;
SELECT ALL v0.c0, rt0.c3, rt0.c4, rt0.c0, rt0.c2 FROM rt0, v0 GROUP BY v0.c0, rt0.c3, rt0.c4, rt0.c0, rt0.c2 HAVING AVG(rt0.c1) UNION ALL SELECT v0.c0, rt0.c3, rt0.c4, rt0.c0, rt0.c2 FROM rt0, v0 GROUP BY v0.c0, rt0.c3, rt0.c4, rt0.c0, rt0.c2 HAVING (NOT (AVG(rt0.c1))) UNION ALL SELECT ALL v0.c0, rt0.c3, rt0.c4, rt0.c0, rt0.c2 FROM rt0, v0 GROUP BY v0.c0, rt0.c3, rt0.c4, rt0.c0, rt0.c2 HAVING ((AVG(rt0.c1)) ISNULL);
SELECT v0.c0, rt0.c3, rt0.c4, rt0.c0, rt0.c2 FROM rt0, v0 GROUP BY v0.c0, rt0.c3, rt0.c4, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, rt0.c3, rt0.c2 FROM rt0;
SELECT ALL rt0.c1, rt0.c0, rt0.c3, rt0.c2 FROM rt0 WHERE ((((((~ (rt0.c0)))AND((- (rt0.c1)))))AND(rt0.c0))) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c3, rt0.c2 FROM rt0 WHERE ((NOT ((((((~ (rt0.c0)))AND((- (rt0.c1)))))AND(rt0.c0))))) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c3, rt0.c2 FROM rt0 WHERE ((((((((~ (rt0.c0)))AND((- (rt0.c1)))))AND(rt0.c0))) ISNULL));
SELECT ALL rt0.c1, rt0.c0, rt0.c3, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c2, rt0.c4, rt0.c3 FROM rt0, v0;
SELECT DISTINCT rt0.c0, rt0.c2, rt0.c4, rt0.c3 FROM rt0, v0 WHERE ((((('F⹮᪹Y')+(rt0.c1))) ISNULL)) UNION SELECT DISTINCT rt0.c0, rt0.c2, rt0.c4, rt0.c3 FROM rt0, v0 WHERE ((NOT ((((('F⹮᪹Y')+(rt0.c1))) ISNULL)))) UNION SELECT DISTINCT rt0.c0, rt0.c2, rt0.c4, rt0.c3 FROM rt0, v0 WHERE ((((((('F⹮᪹Y')+(rt0.c1))) ISNULL)) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c2, rt0.c4, rt0.c3 FROM rt0, v0;
SELECT ALL rt0.c1, rt0.c0, rt0.c4 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c4;
SELECT ALL rt0.c1, rt0.c0, rt0.c4 FROM rt0 WHERE (INSTR(((rt0.c2) IS FALSE), '-2082665830' COLLATE RTRIM)) GROUP BY rt0.c1, rt0.c0, rt0.c4 UNION SELECT rt0.c1, rt0.c0, rt0.c4 FROM rt0 WHERE ((NOT (INSTR(((rt0.c2) IS FALSE), '-2082665830' COLLATE RTRIM)))) GROUP BY rt0.c1, rt0.c0, rt0.c4 UNION SELECT ALL rt0.c1, rt0.c0, rt0.c4 FROM rt0 WHERE (((INSTR(((rt0.c2) IS FALSE), '-2082665830' COLLATE RTRIM)) ISNULL)) GROUP BY rt0.c1, rt0.c0, rt0.c4;
SELECT ALL rt0.c1, rt0.c0, rt0.c4 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c4;
SELECT rt0.c2, rt0.c1, rt0.c3 FROM v0 RIGHT OUTER JOIN rt0 ON ((((rt0.c3 COLLATE BINARY)OR(((rt0.c1)||(rt0.c3)))))AND(((((rt0.c3)OR(rt0.c0)))OR(rt0.c1)))) GROUP BY rt0.c2, rt0.c1, rt0.c3;
SELECT ALL rt0.c2, rt0.c1, rt0.c3 FROM v0 RIGHT OUTER JOIN rt0 ON ((((rt0.c3 COLLATE BINARY)OR(((rt0.c1)||(rt0.c3)))))AND(((((rt0.c3)OR(rt0.c0)))OR(rt0.c1)))) GROUP BY rt0.c2, rt0.c1, rt0.c3 HAVING ((AVG(rt0.c4))=(CAST(TOTAL(AVG(rt0.c2)) AS REAL))) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c3 FROM v0 RIGHT OUTER JOIN rt0 ON ((((rt0.c3 COLLATE BINARY)OR(((rt0.c1)||(rt0.c3)))))AND(((((rt0.c3)OR(rt0.c0)))OR(rt0.c1)))) GROUP BY rt0.c2, rt0.c1, rt0.c3 HAVING (NOT (((AVG(rt0.c4))=(CAST(TOTAL(AVG(rt0.c2)) AS REAL))))) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c3 FROM v0 RIGHT OUTER JOIN rt0 ON ((((rt0.c3 COLLATE BINARY)OR(((rt0.c1)||(rt0.c3)))))AND(((((rt0.c3)OR(rt0.c0)))OR(rt0.c1)))) GROUP BY rt0.c2, rt0.c1, rt0.c3 HAVING ((((AVG(rt0.c4))==(CAST(TOTAL(AVG(rt0.c2)) AS REAL)))) ISNULL);
SELECT ALL * FROM v0;
SELECT ALL * FROM v0 WHERE (UNLIKELY(CAST(v0.c0 AS TEXT))) UNION ALL SELECT * FROM v0 WHERE ((NOT (UNLIKELY(CAST(v0.c0 AS TEXT))))) UNION ALL SELECT ALL * FROM v0 WHERE (((UNLIKELY(CAST(v0.c0 AS TEXT))) ISNULL));
SELECT ALL * FROM v0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (x'ec2d') UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (x'ec2d'))) UNION SELECT DISTINCT * FROM v0 WHERE (((x'ec2d') ISNULL));
SELECT DISTINCT * FROM v0;
SELECT rt0.c3, rt0.c1, rt0.c0, rt0.c4 FROM rt0 GROUP BY rt0.c3, rt0.c1, rt0.c0, rt0.c4;
SELECT rt0.c3, rt0.c1, rt0.c0, rt0.c4 FROM rt0 WHERE ((((rt0.c2)) BETWEEN (((rt0.c1 IN ()))) AND ((((rt0.c4) NOT BETWEEN (rt0.c2) AND (rt0.c4)))))) GROUP BY rt0.c3, rt0.c1, rt0.c0, rt0.c4 UNION SELECT ALL rt0.c3, rt0.c1, rt0.c0, rt0.c4 FROM rt0 WHERE ((NOT ((((rt0.c2)) BETWEEN (((rt0.c1 IN ()))) AND ((((rt0.c4) NOT BETWEEN (rt0.c2) AND (rt0.c4)))))))) GROUP BY rt0.c3, rt0.c1, rt0.c0, rt0.c4 UNION SELECT rt0.c3, rt0.c1, rt0.c0, rt0.c4 FROM rt0 WHERE ((((((rt0.c2)) BETWEEN (((rt0.c1 IN ()))) AND ((((rt0.c4) NOT BETWEEN (rt0.c2) AND (rt0.c4)))))) ISNULL)) GROUP BY rt0.c3, rt0.c1, rt0.c0, rt0.c4;
SELECT rt0.c3, rt0.c1, rt0.c0, rt0.c4 FROM rt0 GROUP BY rt0.c3, rt0.c1, rt0.c0, rt0.c4;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING COUNT(((v0.c0)LIKE(v0.c0))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (COUNT(((v0.c0)LIKE(v0.c0))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((COUNT(((v0.c0)LIKE(v0.c0)))) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING COUNT(((v0.c0)LIKE(v0.c0))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (COUNT(((v0.c0)LIKE(v0.c0))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((COUNT(((v0.c0)LIKE(v0.c0)))) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL * FROM v0, rt0;
SELECT ALL * FROM v0, rt0 WHERE (x'3f7c') UNION ALL SELECT * FROM v0, rt0 WHERE ((NOT (x'3f7c'))) UNION ALL SELECT ALL * FROM v0, rt0 WHERE (((x'3f7c') ISNULL));
SELECT ALL * FROM v0, rt0;
SELECT DISTINCT * FROM rt0, v0;
SELECT DISTINCT * FROM rt0, v0 WHERE (((((((rt0.c0) NOT BETWEEN (rt0.c4) AND (rt0.c2)))OR(rt0.c3)))OR(rtreenode(rt0.c4, rt0.c2)))) UNION SELECT DISTINCT * FROM rt0, v0 WHERE ((NOT (((((((rt0.c0) NOT BETWEEN (rt0.c4) AND (rt0.c2)))OR(rt0.c3)))OR(rtreenode(rt0.c4, rt0.c2)))))) UNION SELECT DISTINCT * FROM rt0, v0 WHERE (((((((((rt0.c0) NOT BETWEEN (rt0.c4) AND (rt0.c2)))OR(rt0.c3)))OR(rtreenode(rt0.c4, rt0.c2)))) ISNULL));
SELECT DISTINCT * FROM rt0, v0;
SELECT ALL rt0.c2, rt0.c0, rt0.c1, rt0.c4, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1, rt0.c4, rt0.c3;
SELECT rt0.c2, rt0.c0, rt0.c1, rt0.c4, rt0.c3 FROM rt0 WHERE (NULL) GROUP BY rt0.c2, rt0.c0, rt0.c1, rt0.c4, rt0.c3 UNION SELECT rt0.c2, rt0.c0, rt0.c1, rt0.c4, rt0.c3 FROM rt0 WHERE ((NOT (NULL))) GROUP BY rt0.c2, rt0.c0, rt0.c1, rt0.c4, rt0.c3 UNION SELECT ALL rt0.c2, rt0.c0, rt0.c1, rt0.c4, rt0.c3 FROM rt0 WHERE (((NULL) ISNULL)) GROUP BY rt0.c2, rt0.c0, rt0.c1, rt0.c4, rt0.c3;
SELECT ALL rt0.c2, rt0.c0, rt0.c1, rt0.c4, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1, rt0.c4, rt0.c3;
SELECT ALL rt0.c0 FROM v0, rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM v0, rt0 GROUP BY rt0.c0 HAVING ((((((((((((TOTAL(rt0.c0))OR((+ (v0.c0)))))AND('팃<')))AND(rt0.c2 COLLATE BINARY)))OR((MAX(COUNT(*)) IN ()))))OR(TOTAL(rt0.c4))))OR((rt0.c1 IN ()))) UNION ALL SELECT rt0.c0 FROM v0, rt0 GROUP BY rt0.c0 HAVING (NOT (((((((((((((TOTAL(rt0.c0))OR((+ (v0.c0)))))AND('팃<')))AND(rt0.c2 COLLATE BINARY)))OR((MAX(COUNT(*)) IN ()))))OR(TOTAL(rt0.c4))))OR((rt0.c1 IN ()))))) UNION ALL SELECT rt0.c0 FROM v0, rt0 GROUP BY rt0.c0 HAVING ((((((((((((((TOTAL(rt0.c0))OR((+ (v0.c0)))))AND('팃<')))AND(rt0.c2 COLLATE BINARY)))OR((MAX(COUNT(*)) IN ()))))OR(TOTAL(rt0.c4))))OR((rt0.c1 IN ())))) ISNULL);
SELECT ALL rt0.c0 FROM v0, rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM v0, rt0 GROUP BY rt0.c0 HAVING ((((((((((((TOTAL(rt0.c0))OR((+ (v0.c0)))))AND('팃<')))AND(rt0.c2 COLLATE BINARY)))OR((MAX(COUNT(*)) IN ()))))OR(TOTAL(rt0.c4))))OR((rt0.c1 IN ()))) UNION ALL SELECT rt0.c0 FROM v0, rt0 GROUP BY rt0.c0 HAVING (NOT (((((((((((((TOTAL(rt0.c0))OR((+ (v0.c0)))))AND('팃<')))AND(rt0.c2 COLLATE BINARY)))OR((MAX(COUNT(*)) IN ()))))OR(TOTAL(rt0.c4))))OR((rt0.c1 IN ()))))) UNION ALL SELECT rt0.c0 FROM v0, rt0 GROUP BY rt0.c0 HAVING ((((((((((((((TOTAL(rt0.c0))OR((+ (v0.c0)))))AND('팃<')))AND(rt0.c2 COLLATE BINARY)))OR((MAX(COUNT(*)) IN ()))))OR(TOTAL(rt0.c4))))OR((rt0.c1 IN ())))) ISNULL);
SELECT ALL rt0.c0 FROM v0, rt0 GROUP BY rt0.c0;
SELECT ALL MAX(v0.c0) FROM v0;
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE ((CAST(rt0.c3 AS REAL) IN ())) UNION ALL SELECT * FROM rt0 WHERE ((NOT ((CAST(rt0.c3 AS REAL) IN ())))) UNION ALL SELECT * FROM rt0 WHERE ((((CAST(rt0.c3 AS REAL) IN ())) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT * FROM v0, rt0;
SELECT DISTINCT * FROM v0, rt0 WHERE (CASE CAST(rt0.c4 AS INTEGER)  WHEN (~ (rt0.c3)) THEN ((rt0.c0)>=(x'')) WHEN ((rt0.c1) IS FALSE) THEN CASE WHEN rt0.c0 THEN v0.c0 ELSE rt0.c1 END WHEN rt0.c3 COLLATE RTRIM THEN x'' END) UNION SELECT DISTINCT * FROM v0, rt0 WHERE ((NOT (CASE CAST(rt0.c4 AS INTEGER)  WHEN (~ (rt0.c3)) THEN ((rt0.c0)>=(x'')) WHEN ((rt0.c1) IS FALSE) THEN CASE WHEN rt0.c0 THEN v0.c0 ELSE rt0.c1 END WHEN rt0.c3 COLLATE RTRIM THEN x'' END))) UNION SELECT DISTINCT * FROM v0, rt0 WHERE (((CASE CAST(rt0.c4 AS INTEGER)  WHEN (~ (rt0.c3)) THEN ((rt0.c0)>=(x'')) WHEN ((rt0.c1) IS FALSE) THEN CASE WHEN rt0.c0 THEN v0.c0 ELSE rt0.c1 END WHEN rt0.c3 COLLATE RTRIM THEN x'' END) ISNULL));
SELECT DISTINCT * FROM v0, rt0;
SELECT ALL rt0.c2, rt0.c1, rt0.c4 FROM v0, rt0 GROUP BY rt0.c2, rt0.c1, rt0.c4;
SELECT ALL rt0.c2, rt0.c1, rt0.c4 FROM v0, rt0 WHERE ((((rt0.c1, rt0.c0, rt0.c1)) BETWEEN ((((v0.c0)>>(rt0.c4)), '303301202', ((((rt0.c4)AND(rt0.c2)))AND(rt0.c0)))) AND (((rt0.c2 IN ()), ((((((((rt0.c3)OR(rt0.c3)))OR(rt0.c3)))OR(rt0.c0)))AND(rt0.c0)), ((NULL)IS NOT(v0.c0)))))) GROUP BY rt0.c2, rt0.c1, rt0.c4 UNION SELECT ALL rt0.c2, rt0.c1, rt0.c4 FROM v0, rt0 WHERE ((NOT ((((rt0.c1, rt0.c0, rt0.c1)) BETWEEN ((((v0.c0)>>(rt0.c4)), '303301202', ((((rt0.c4)AND(rt0.c2)))AND(rt0.c0)))) AND (((rt0.c2 IN ()), ((((((((rt0.c3)OR(rt0.c3)))OR(rt0.c3)))OR(rt0.c0)))AND(rt0.c0)), ((NULL)IS NOT(v0.c0)))))))) GROUP BY rt0.c2, rt0.c1, rt0.c4 UNION SELECT ALL rt0.c2, rt0.c1, rt0.c4 FROM v0, rt0 WHERE ((((((rt0.c1, rt0.c0, rt0.c1)) BETWEEN ((((v0.c0)>>(rt0.c4)), '303301202', ((((rt0.c4)AND(rt0.c2)))AND(rt0.c0)))) AND (((rt0.c2 IN ()), ((((((((rt0.c3)OR(rt0.c3)))OR(rt0.c3)))OR(rt0.c0)))AND(rt0.c0)), ((NULL)IS NOT(v0.c0)))))) ISNULL)) GROUP BY rt0.c2, rt0.c1, rt0.c4;
SELECT ALL rt0.c2, rt0.c1, rt0.c4 FROM v0, rt0 GROUP BY rt0.c2, rt0.c1, rt0.c4;
SELECT ALL rt0.c4, rt0.c0 FROM rt0 GROUP BY rt0.c4, rt0.c0;
SELECT ALL rt0.c4, rt0.c0 FROM rt0 GROUP BY rt0.c4, rt0.c0 HAVING COUNT(*) UNION ALL SELECT rt0.c4, rt0.c0 FROM rt0 GROUP BY rt0.c4, rt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c4, rt0.c0 FROM rt0 GROUP BY rt0.c4, rt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c4, rt0.c0 FROM rt0 GROUP BY rt0.c4, rt0.c0;
SELECT ALL rt0.c4, rt0.c0 FROM rt0 GROUP BY rt0.c4, rt0.c0 HAVING COUNT(*) UNION ALL SELECT rt0.c4, rt0.c0 FROM rt0 GROUP BY rt0.c4, rt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c4, rt0.c0 FROM rt0 GROUP BY rt0.c4, rt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c4, rt0.c0 FROM rt0 GROUP BY rt0.c4, rt0.c0;
SELECT ALL v0.c0 FROM v0;
SELECT ALL v0.c0 FROM v0 WHERE ((NOT (CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))) UNION ALL SELECT v0.c0 FROM v0 NOT INDEXED WHERE ((NOT ((NOT (CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE ((((NOT (CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))) ISNULL));
SELECT ALL v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM rt0 CROSS JOIN v0 ON CAST('' AS TEXT);
SELECT DISTINCT v0.c0 FROM rt0 CROSS JOIN v0 ON CAST('' AS TEXT) WHERE (rt0.c0) UNION SELECT DISTINCT v0.c0 FROM rt0 CROSS JOIN v0 ON CAST('' AS TEXT) WHERE ((NOT (rt0.c0))) UNION SELECT DISTINCT v0.c0 FROM rt0 CROSS JOIN v0 ON CAST('' AS TEXT) WHERE (((rt0.c0) ISNULL));
SELECT DISTINCT v0.c0 FROM rt0 CROSS JOIN v0 ON CAST('' AS TEXT);
SELECT rt0.c0, v0.c0, rt0.c3, rt0.c2, rt0.c4 FROM v0, rt0 GROUP BY rt0.c0, v0.c0, rt0.c3, rt0.c2, rt0.c4;
SELECT rt0.c0, v0.c0, rt0.c3, rt0.c2, rt0.c4 FROM v0, rt0 WHERE (CAST(rt0.c1 AS BLOB)) GROUP BY rt0.c0, v0.c0, rt0.c3, rt0.c2, rt0.c4 UNION SELECT ALL rt0.c0, v0.c0, rt0.c3, rt0.c2, rt0.c4 FROM v0, rt0 WHERE ((NOT (CAST(rt0.c1 AS BLOB)))) GROUP BY rt0.c0, v0.c0, rt0.c3, rt0.c2, rt0.c4 UNION SELECT ALL rt0.c0, v0.c0, rt0.c3, rt0.c2, rt0.c4 FROM v0, rt0 WHERE (((CAST(rt0.c1 AS BLOB)) ISNULL)) GROUP BY rt0.c0, v0.c0, rt0.c3, rt0.c2, rt0.c4;
SELECT rt0.c0, v0.c0, rt0.c3, rt0.c2, rt0.c4 FROM v0, rt0 GROUP BY rt0.c0, v0.c0, rt0.c3, rt0.c2, rt0.c4;
SELECT ALL v0.c0, rt0.c1, rt0.c2, rt0.c0, rt0.c4, rt0.c3 FROM rt0 INNER JOIN v0 ON rt0.c3 GROUP BY v0.c0, rt0.c1, rt0.c2, rt0.c0, rt0.c4, rt0.c3;
SELECT v0.c0, rt0.c1, rt0.c2, rt0.c0, rt0.c4, rt0.c3 FROM rt0 INNER JOIN v0 ON rt0.c3 GROUP BY v0.c0, rt0.c1, rt0.c2, rt0.c0, rt0.c4, rt0.c3 HAVING ((TYPEOF(DISTINCT rt0.c2))<<(((v0.c0) BETWEEN (v0.c0) AND (MAX(rt0.c2))))) UNION ALL SELECT v0.c0, rt0.c1, rt0.c2, rt0.c0, rt0.c4, rt0.c3 FROM rt0 INNER JOIN v0 ON rt0.c3 GROUP BY v0.c0, rt0.c1, rt0.c2, rt0.c0, rt0.c4, rt0.c3 HAVING (NOT (((TYPEOF(DISTINCT rt0.c2))<<(((v0.c0) BETWEEN (v0.c0) AND (MAX(rt0.c2))))))) UNION ALL SELECT v0.c0, rt0.c1, rt0.c2, rt0.c0, rt0.c4, rt0.c3 FROM rt0 INNER JOIN v0 ON rt0.c3 GROUP BY v0.c0, rt0.c1, rt0.c2, rt0.c0, rt0.c4, rt0.c3 HAVING ((((TYPEOF(DISTINCT rt0.c2))<<(((v0.c0) BETWEEN (v0.c0) AND (MAX(rt0.c2)))))) ISNULL);
SELECT ALL v0.c0, rt0.c1, rt0.c2, rt0.c0, rt0.c4, rt0.c3 FROM rt0 INNER JOIN v0 ON rt0.c3 GROUP BY v0.c0, rt0.c1, rt0.c2, rt0.c0, rt0.c4, rt0.c3;
SELECT v0.c0, rt0.c1, rt0.c2, rt0.c0, rt0.c4, rt0.c3 FROM rt0 INNER JOIN v0 ON rt0.c3 GROUP BY v0.c0, rt0.c1, rt0.c2, rt0.c0, rt0.c4, rt0.c3 HAVING ((TYPEOF(DISTINCT rt0.c2))<<(((v0.c0) BETWEEN (v0.c0) AND (MAX(rt0.c2))))) UNION ALL SELECT v0.c0, rt0.c1, rt0.c2, rt0.c0, rt0.c4, rt0.c3 FROM rt0 INNER JOIN v0 ON rt0.c3 GROUP BY v0.c0, rt0.c1, rt0.c2, rt0.c0, rt0.c4, rt0.c3 HAVING (NOT (((TYPEOF(DISTINCT rt0.c2))<<(((v0.c0) BETWEEN (v0.c0) AND (MAX(rt0.c2))))))) UNION ALL SELECT v0.c0, rt0.c1, rt0.c2, rt0.c0, rt0.c4, rt0.c3 FROM rt0 INNER JOIN v0 ON rt0.c3 GROUP BY v0.c0, rt0.c1, rt0.c2, rt0.c0, rt0.c4, rt0.c3 HAVING ((((TYPEOF(DISTINCT rt0.c2))<<(((v0.c0) BETWEEN (v0.c0) AND (MAX(rt0.c2)))))) ISNULL);
SELECT ALL v0.c0, rt0.c1, rt0.c2, rt0.c0, rt0.c4, rt0.c3 FROM rt0 INNER JOIN v0 ON rt0.c3 GROUP BY v0.c0, rt0.c1, rt0.c2, rt0.c0, rt0.c4, rt0.c3;
SELECT ALL v0.c0, rt0.c2, rt0.c3 FROM v0, rt0;
SELECT v0.c0, rt0.c2, rt0.c3 FROM v0, rt0 WHERE (CASE (NULL IN ())  WHEN ((v0.c0) BETWEEN (rt0.c2) AND (rt0.c2)) THEN ((((rt0.c0)AND(rt0.c0)))AND(rt0.c4)) WHEN 0.5994995718941055 THEN LAST_INSERT_ROWID() WHEN rt0.c2 COLLATE NOCASE THEN (+ (rt0.c4)) ELSE ((rt0.c3) NOT BETWEEN (rt0.c2) AND (v0.c0)) END) UNION ALL SELECT ALL v0.c0, rt0.c2, rt0.c3 FROM v0, rt0 WHERE ((NOT (CASE (NULL IN ())  WHEN ((v0.c0) BETWEEN (rt0.c2) AND (rt0.c2)) THEN ((((rt0.c0)AND(rt0.c0)))AND(rt0.c4)) WHEN 0.5994995718941055 THEN LAST_INSERT_ROWID() WHEN rt0.c2 COLLATE NOCASE THEN (+ (rt0.c4)) ELSE ((rt0.c3) NOT BETWEEN (rt0.c2) AND (v0.c0)) END))) UNION ALL SELECT v0.c0, rt0.c2, rt0.c3 FROM v0, rt0 WHERE (((CASE (NULL IN ())  WHEN ((v0.c0) BETWEEN (rt0.c2) AND (rt0.c2)) THEN ((((rt0.c0)AND(rt0.c0)))AND(rt0.c4)) WHEN 0.5994995718941055 THEN LAST_INSERT_ROWID() WHEN rt0.c2 COLLATE NOCASE THEN (+ (rt0.c4)) ELSE ((rt0.c3) NOT BETWEEN (rt0.c2) AND (v0.c0)) END) ISNULL));
SELECT ALL v0.c0, rt0.c2, rt0.c3 FROM v0, rt0;
SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0, v0 NOT INDEXED;
SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0, v0 WHERE (json(HEX(DISTINCT rt0.c4))) UNION SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0, v0 WHERE ((NOT (json(HEX(DISTINCT rt0.c4))))) UNION SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0, v0 WHERE (((json(HEX(DISTINCT rt0.c4))) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0, v0 NOT INDEXED;
SELECT rt0.c2 FROM v0, rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM v0, rt0 WHERE (CAST(((v0.c0)&(rt0.c1)) AS INTEGER)) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM v0, rt0 WHERE ((NOT (CAST(((v0.c0)&(rt0.c1)) AS INTEGER)))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM v0, rt0 WHERE (((CAST(((v0.c0)&(rt0.c1)) AS INTEGER)) ISNULL)) GROUP BY rt0.c2;
SELECT rt0.c2 FROM v0, rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c4, rt0.c3, rt0.c0, v0.c0, rt0.c2 FROM v0, rt0 GROUP BY rt0.c4, rt0.c3, rt0.c0, v0.c0, rt0.c2;
SELECT rt0.c4, rt0.c3, rt0.c0, v0.c0, rt0.c2 FROM v0, rt0 GROUP BY rt0.c4, rt0.c3, rt0.c0, v0.c0, rt0.c2 HAVING (((MAX(AVG(AVG(SUM(v0.c0)))))) BETWEEN ((AVG(x'8e37'))) AND ((GROUP_CONCAT(COUNT(COUNT(rt0.c3)))))) UNION ALL SELECT rt0.c4, rt0.c3, rt0.c0, v0.c0, rt0.c2 FROM v0, rt0 GROUP BY rt0.c4, rt0.c3, rt0.c0, v0.c0, rt0.c2 HAVING (NOT ((((MAX(AVG(AVG(SUM(v0.c0)))))) BETWEEN ((AVG(x'8e37'))) AND ((GROUP_CONCAT(COUNT(COUNT(rt0.c3)))))))) UNION ALL SELECT ALL rt0.c4, rt0.c3, rt0.c0, v0.c0, rt0.c2 FROM v0, rt0 GROUP BY rt0.c4, rt0.c3, rt0.c0, v0.c0, rt0.c2 HAVING (((((MAX(AVG(AVG(SUM(v0.c0)))))) BETWEEN ((AVG(x'8e37'))) AND ((GROUP_CONCAT(COUNT(COUNT(rt0.c3))))))) ISNULL);
SELECT ALL * FROM v0;
SELECT ALL * FROM v0 WHERE ((((((v0.c0))=((v0.c0)))) NOT NULL)) UNION ALL SELECT ALL * FROM v0 WHERE ((NOT ((((((v0.c0))=((v0.c0)))) NOT NULL)))) UNION ALL SELECT * FROM v0 WHERE ((((((((v0.c0))==((v0.c0)))) NOT NULL)) ISNULL));
SELECT ALL * FROM v0;
SELECT DISTINCT * FROM rt0, v0;
SELECT DISTINCT * FROM rt0, v0 WHERE (NULLIF(((rt0.c1) IS FALSE), (((' 	gg')) NOT BETWEEN ((rt0.c4)) AND ((rt0.c4))))) UNION SELECT DISTINCT * FROM rt0, v0 WHERE ((NOT (NULLIF(((rt0.c1) IS FALSE), (((' 	gg')) NOT BETWEEN ((rt0.c4)) AND ((rt0.c4))))))) UNION SELECT DISTINCT * FROM rt0, v0 WHERE (((NULLIF(((rt0.c1) IS FALSE), (((' 	gg')) NOT BETWEEN ((rt0.c4)) AND ((rt0.c4))))) ISNULL));
SELECT DISTINCT * FROM rt0, v0;
SELECT rt0.c3, rt0.c4 FROM rt0 GROUP BY rt0.c3, rt0.c4;
SELECT rt0.c3, rt0.c4 FROM rt0 WHERE (CASE ((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c4))  WHEN ((0.9197578159481835) BETWEEN (rt0.c2) AND (rt0.c2)) THEN CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c1 END ELSE ((NULL)|(rt0.c4)) END) GROUP BY rt0.c3, rt0.c4 UNION SELECT rt0.c3, rt0.c4 FROM rt0 WHERE ((NOT (CASE ((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c4))  WHEN ((0.9197578159481835) BETWEEN (rt0.c2) AND (rt0.c2)) THEN CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c1 END ELSE ((NULL)|(rt0.c4)) END))) GROUP BY rt0.c3, rt0.c4 UNION SELECT ALL rt0.c3, rt0.c4 FROM rt0 WHERE (((CASE ((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c4))  WHEN ((0.9197578159481835) BETWEEN (rt0.c2) AND (rt0.c2)) THEN CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c1 END ELSE ((NULL)|(rt0.c4)) END) ISNULL)) GROUP BY rt0.c3, rt0.c4;
SELECT rt0.c3, rt0.c4 FROM rt0 GROUP BY rt0.c3, rt0.c4;
SELECT v0.c0, rt0.c1, rt0.c2, rt0.c4, rt0.c0 FROM rt0, v0 GROUP BY v0.c0, rt0.c1, rt0.c2, rt0.c4, rt0.c0;
SELECT ALL v0.c0, rt0.c1, rt0.c2, rt0.c4, rt0.c0 FROM rt0, v0 GROUP BY v0.c0, rt0.c1, rt0.c2, rt0.c4, rt0.c0 HAVING COUNT(*) UNION ALL SELECT v0.c0, rt0.c1, rt0.c2, rt0.c4, rt0.c0 FROM rt0, v0 GROUP BY v0.c0, rt0.c1, rt0.c2, rt0.c4, rt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT v0.c0, rt0.c1, rt0.c2, rt0.c4, rt0.c0 FROM rt0, v0 GROUP BY v0.c0, rt0.c1, rt0.c2, rt0.c4, rt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT v0.c0, rt0.c1, rt0.c2, rt0.c4, rt0.c0 FROM rt0, v0 GROUP BY v0.c0, rt0.c1, rt0.c2, rt0.c4, rt0.c0;
SELECT ALL v0.c0, rt0.c1, rt0.c2, rt0.c4, rt0.c0 FROM rt0, v0 GROUP BY v0.c0, rt0.c1, rt0.c2, rt0.c4, rt0.c0 HAVING COUNT(*) UNION ALL SELECT v0.c0, rt0.c1, rt0.c2, rt0.c4, rt0.c0 FROM rt0, v0 GROUP BY v0.c0, rt0.c1, rt0.c2, rt0.c4, rt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT v0.c0, rt0.c1, rt0.c2, rt0.c4, rt0.c0 FROM rt0, v0 GROUP BY v0.c0, rt0.c1, rt0.c2, rt0.c4, rt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT v0.c0, rt0.c1, rt0.c2, rt0.c4, rt0.c0 FROM rt0, v0 GROUP BY v0.c0, rt0.c1, rt0.c2, rt0.c4, rt0.c0;
SELECT ALL rt0.c4, rt0.c1 FROM rt0, v0;
SELECT ALL rt0.c4, rt0.c1 FROM rt0, v0 WHERE (rt0.c1) UNION ALL SELECT rt0.c4, rt0.c1 FROM rt0, v0 WHERE ((NOT (rt0.c1))) UNION ALL SELECT ALL rt0.c4, rt0.c1 FROM rt0, v0 WHERE (((rt0.c1) ISNULL));
SELECT ALL rt0.c4, rt0.c1 FROM rt0, v0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (NULLIF(CAST(rt0.c2 AS INTEGER), TYPEOF(DISTINCT rt0.c2))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (NULLIF(CAST(rt0.c2 AS INTEGER), TYPEOF(DISTINCT rt0.c2))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((NULLIF(CAST(rt0.c2 AS INTEGER), TYPEOF(DISTINCT rt0.c2))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c2, rt0.c0, rt0.c4, v0.c0 FROM v0, rt0 GROUP BY rt0.c2, rt0.c0, rt0.c4, v0.c0;
SELECT ALL rt0.c2, rt0.c0, rt0.c4, v0.c0 FROM v0, rt0 WHERE (CASE WHEN CASE WHEN v0.c0 THEN rt0.c3 END THEN (((rt0.c3)) BETWEEN ((rt0.c4)) AND ((rt0.c3))) WHEN (- (v0.c0)) THEN ((v0.c0) BETWEEN (rt0.c3) AND (rt0.c2)) WHEN CAST(rt0.c1 AS NUMERIC) THEN (rt0.c1 IN ()) ELSE ((((v0.c0)OR(rt0.c0)))AND('-688237703')) END) GROUP BY rt0.c2, rt0.c0, rt0.c4, v0.c0 UNION SELECT ALL rt0.c2, rt0.c0, rt0.c4, v0.c0 FROM v0, rt0 WHERE ((NOT (CASE WHEN CASE WHEN v0.c0 THEN rt0.c3 END THEN (((rt0.c3)) BETWEEN ((rt0.c4)) AND ((rt0.c3))) WHEN (- (v0.c0)) THEN ((v0.c0) BETWEEN (rt0.c3) AND (rt0.c2)) WHEN CAST(rt0.c1 AS NUMERIC) THEN (rt0.c1 IN ()) ELSE ((((v0.c0)OR(rt0.c0)))AND('-688237703')) END))) GROUP BY rt0.c2, rt0.c0, rt0.c4, v0.c0 UNION SELECT ALL rt0.c2, rt0.c0, rt0.c4, v0.c0 FROM v0, rt0 WHERE (((CASE WHEN CASE WHEN v0.c0 THEN rt0.c3 END THEN (((rt0.c3)) BETWEEN ((rt0.c4)) AND ((rt0.c3))) WHEN (- (v0.c0)) THEN ((v0.c0) BETWEEN (rt0.c3) AND (rt0.c2)) WHEN CAST(rt0.c1 AS NUMERIC) THEN (rt0.c1 IN ()) ELSE ((((v0.c0)OR(rt0.c0)))AND('-688237703')) END) ISNULL)) GROUP BY rt0.c2, rt0.c0, rt0.c4, v0.c0;
SELECT rt0.c2, rt0.c0, rt0.c4, v0.c0 FROM v0, rt0 GROUP BY rt0.c2, rt0.c0, rt0.c4, v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((MAX(v0.c0))IS(MAX(v0.c0))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (((MAX(v0.c0))IS(MAX(v0.c0))))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((((MAX(v0.c0))IS(MAX(v0.c0)))) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((MAX(v0.c0))IS(MAX(v0.c0))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (((MAX(v0.c0))IS(MAX(v0.c0))))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((((MAX(v0.c0))IS(MAX(v0.c0)))) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT rt0.c0, rt0.c1 FROM rt0;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 WHERE ((((+ (rt0.c2)))>((((rt0.c4, NULL, rt0.c1))>((rt0.c0, rt0.c0, rt0.c4)))))) UNION ALL SELECT rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT ((((+ (rt0.c2)))>((((rt0.c4, NULL, rt0.c1))>((rt0.c0, rt0.c0, rt0.c4)))))))) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM rt0 WHERE ((((((+ (rt0.c2)))>((((rt0.c4, NULL, rt0.c1))>((rt0.c0, rt0.c0, rt0.c4)))))) ISNULL));
SELECT rt0.c0, rt0.c1 FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (COALESCE(DISTINCT ((rt0.c1)%(rt0.c4)), ((rt0.c1)||(rt0.c2)))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (COALESCE(DISTINCT ((rt0.c1)%(rt0.c4)), ((rt0.c1)||(rt0.c2)))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((COALESCE(DISTINCT ((rt0.c1)%(rt0.c4)), ((rt0.c1)||(rt0.c2)))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (((((v0.c0)>(v0.c0)))||(CAST(v0.c0 AS TEXT)))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (((((v0.c0)>(v0.c0)))||(CAST(v0.c0 AS TEXT)))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((((((v0.c0)>(v0.c0)))||(CAST(v0.c0 AS TEXT)))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 NATURAL JOIN v0 GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c1 FROM rt0 NATURAL JOIN v0 GROUP BY rt0.c0, rt0.c1 HAVING ((((((TOTAL(rt0.c0))IS NOT(MAX(rt0.c3))))AND(COUNT(*) COLLATE NOCASE)))AND(COUNT(rt0.c3))) UNION ALL SELECT rt0.c0, rt0.c1 FROM rt0 NATURAL JOIN v0 GROUP BY rt0.c0, rt0.c1 HAVING (NOT (((((((TOTAL(rt0.c0))IS NOT(MAX(rt0.c3))))AND(COUNT(*) COLLATE NOCASE)))AND(COUNT(rt0.c3))))) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM rt0 NATURAL JOIN v0 GROUP BY rt0.c0, rt0.c1 HAVING ((((((((TOTAL(rt0.c0))IS NOT(MAX(rt0.c3))))AND(COUNT(*) COLLATE NOCASE)))AND(COUNT(rt0.c3)))) ISNULL);
SELECT ALL rt0.c0, rt0.c1 FROM rt0 NATURAL JOIN v0 GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c1 FROM rt0 NATURAL JOIN v0 GROUP BY rt0.c0, rt0.c1 HAVING ((((((TOTAL(rt0.c0))IS NOT(MAX(rt0.c3))))AND(COUNT(*) COLLATE NOCASE)))AND(COUNT(rt0.c3))) UNION ALL SELECT rt0.c0, rt0.c1 FROM rt0 NATURAL JOIN v0 GROUP BY rt0.c0, rt0.c1 HAVING (NOT (((((((TOTAL(rt0.c0))IS NOT(MAX(rt0.c3))))AND(COUNT(*) COLLATE NOCASE)))AND(COUNT(rt0.c3))))) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM rt0 NATURAL JOIN v0 GROUP BY rt0.c0, rt0.c1 HAVING ((((((((TOTAL(rt0.c0))IS NOT(MAX(rt0.c3))))AND(COUNT(*) COLLATE NOCASE)))AND(COUNT(rt0.c3)))) ISNULL);
SELECT ALL rt0.c0, rt0.c1 FROM rt0 NATURAL JOIN v0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL SUM(((CAST(rt0.c0 AS NUMERIC)) IS TRUE)) FROM rt0, v0;
SELECT ALL v0.c0 FROM v0;
SELECT ALL v0.c0 FROM v0 WHERE (CAST(((((v0.c0)AND(v0.c0)))AND(v0.c0)) AS INTEGER)) UNION ALL SELECT v0.c0 FROM v0 WHERE ((NOT (CAST(((((v0.c0)AND(v0.c0)))AND(v0.c0)) AS INTEGER)))) UNION ALL SELECT v0.c0 FROM v0 WHERE (((CAST(((((v0.c0)AND(v0.c0)))AND(v0.c0)) AS INTEGER)) ISNULL));
SELECT ALL v0.c0 FROM v0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (UNLIKELY(((v0.c0) NOTNULL))) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (UNLIKELY(((v0.c0) NOTNULL))))) UNION SELECT DISTINCT * FROM v0 WHERE (((UNLIKELY(((v0.c0) NOTNULL))) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT ALL rt0.c4, rt0.c0, rt0.c1 FROM rt0 CROSS JOIN v0 ON -698472263 GROUP BY rt0.c4, rt0.c0, rt0.c1;
SELECT rt0.c4, rt0.c0, rt0.c1 FROM rt0 CROSS JOIN v0 ON -698472263 WHERE (COALESCE(DISTINCT rt0.c4, rtreenode(rt0.c0, rt0.c1))) GROUP BY rt0.c4, rt0.c0, rt0.c1 UNION SELECT rt0.c4, rt0.c0, rt0.c1 FROM rt0 CROSS JOIN v0 ON -698472263 WHERE ((NOT (COALESCE(DISTINCT rt0.c4, rtreenode(rt0.c0, rt0.c1))))) GROUP BY rt0.c4, rt0.c0, rt0.c1 UNION SELECT rt0.c4, rt0.c0, rt0.c1 FROM rt0 CROSS JOIN v0 ON -698472263 WHERE (((COALESCE(DISTINCT rt0.c4, rtreenode(rt0.c0, rt0.c1))) ISNULL)) GROUP BY rt0.c4, rt0.c0, rt0.c1;
SELECT ALL rt0.c4, rt0.c0, rt0.c1 FROM rt0 CROSS JOIN v0 ON -698472263 GROUP BY rt0.c4, rt0.c0, rt0.c1;
SELECT rt0.c3, rt0.c0, rt0.c2, v0.c0, rt0.c4 FROM v0, rt0 GROUP BY rt0.c3, rt0.c0, rt0.c2, v0.c0, rt0.c4;
SELECT rt0.c3, rt0.c0, rt0.c2, v0.c0, rt0.c4 FROM v0, rt0 GROUP BY rt0.c3, rt0.c0, rt0.c2, v0.c0, rt0.c4 HAVING ((((v0.c0)>(rt0.c1))) IS TRUE) UNION ALL SELECT rt0.c3, rt0.c0, rt0.c2, v0.c0, rt0.c4 FROM v0, rt0 GROUP BY rt0.c3, rt0.c0, rt0.c2, v0.c0, rt0.c4 HAVING (NOT (((((v0.c0)>(rt0.c1))) IS TRUE))) UNION ALL SELECT rt0.c3, rt0.c0, rt0.c2, v0.c0, rt0.c4 FROM v0, rt0 GROUP BY rt0.c3, rt0.c0, rt0.c2, v0.c0, rt0.c4 HAVING ((((((v0.c0)>(rt0.c1))) IS TRUE)) ISNULL);
SELECT rt0.c3, rt0.c0, rt0.c2, v0.c0, rt0.c4 FROM v0, rt0 GROUP BY rt0.c3, rt0.c0, rt0.c2, v0.c0, rt0.c4;
SELECT rt0.c3, rt0.c0, rt0.c2, v0.c0, rt0.c4 FROM v0, rt0 GROUP BY rt0.c3, rt0.c0, rt0.c2, v0.c0, rt0.c4 HAVING ((((v0.c0)>(rt0.c1))) IS TRUE) UNION ALL SELECT rt0.c3, rt0.c0, rt0.c2, v0.c0, rt0.c4 FROM v0, rt0 GROUP BY rt0.c3, rt0.c0, rt0.c2, v0.c0, rt0.c4 HAVING (NOT (((((v0.c0)>(rt0.c1))) IS TRUE))) UNION ALL SELECT rt0.c3, rt0.c0, rt0.c2, v0.c0, rt0.c4 FROM v0, rt0 GROUP BY rt0.c3, rt0.c0, rt0.c2, v0.c0, rt0.c4 HAVING ((((((v0.c0)>(rt0.c1))) IS TRUE)) ISNULL);
SELECT rt0.c3, rt0.c0, rt0.c2, v0.c0, rt0.c4 FROM v0, rt0 GROUP BY rt0.c3, rt0.c0, rt0.c2, v0.c0, rt0.c4;
SELECT * FROM v0, rt0;
SELECT ALL * FROM v0, rt0 WHERE (((((((((v0.c0)AND(rt0.c4)))OR(rt0.c3)))OR(((rt0.c3)%(NULL)))))OR(((rt0.c3)%(rt0.c3))))) UNION ALL SELECT ALL * FROM v0, rt0 WHERE ((NOT (((((((((v0.c0)AND(rt0.c4)))OR(rt0.c3)))OR(((rt0.c3)%(NULL)))))OR(((rt0.c3)%(rt0.c3))))))) UNION ALL SELECT ALL * FROM v0, rt0 WHERE (((((((((((v0.c0)AND(rt0.c4)))OR(rt0.c3)))OR(((rt0.c3)%(NULL)))))OR(((rt0.c3)%(rt0.c3))))) ISNULL));
SELECT * FROM v0, rt0;
SELECT DISTINCT v0.c0, rt0.c3, rt0.c1 FROM v0, rt0;
SELECT DISTINCT v0.c0, rt0.c3, rt0.c1 FROM v0, rt0 WHERE ((((NOT (rt0.c2))) BETWEEN (CASE rt0.c3  WHEN rt0.c1 THEN v0.c0 END) AND ('lQMl.+s'))) UNION SELECT DISTINCT v0.c0, rt0.c3, rt0.c1 FROM v0, rt0 WHERE ((NOT ((((NOT (rt0.c2))) BETWEEN (CASE rt0.c3  WHEN rt0.c1 THEN v0.c0 END) AND ('lQMl.+s'))))) UNION SELECT DISTINCT v0.c0, rt0.c3, rt0.c1 FROM v0, rt0 WHERE ((((((NOT (rt0.c2))) BETWEEN (CASE rt0.c3  WHEN rt0.c1 THEN v0.c0 END) AND ('lQMl.+s'))) ISNULL));
SELECT DISTINCT v0.c0, rt0.c3, rt0.c1 FROM v0, rt0;
SELECT rt0.c0, rt0.c1, rt0.c4, v0.c0, rt0.c2, rt0.c3 FROM v0, rt0 GROUP BY rt0.c0, rt0.c1, rt0.c4, v0.c0, rt0.c2, rt0.c3;
SELECT ALL rt0.c0, rt0.c1, rt0.c4, v0.c0, rt0.c2, rt0.c3 FROM v0, rt0 WHERE (CAST((rt0.c4 IN ()) AS REAL)) GROUP BY rt0.c0, rt0.c1, rt0.c4, v0.c0, rt0.c2, rt0.c3 UNION SELECT ALL rt0.c0, rt0.c1, rt0.c4, v0.c0, rt0.c2, rt0.c3 FROM v0, rt0 WHERE ((NOT (CAST((rt0.c4 IN ()) AS REAL)))) GROUP BY rt0.c0, rt0.c1, rt0.c4, v0.c0, rt0.c2, rt0.c3 UNION SELECT rt0.c0, rt0.c1, rt0.c4, v0.c0, rt0.c2, rt0.c3 FROM v0, rt0 NOT INDEXED WHERE (((CAST((rt0.c4 IN ()) AS REAL)) ISNULL)) GROUP BY rt0.c0, rt0.c1, rt0.c4, v0.c0, rt0.c2, rt0.c3;
SELECT rt0.c0, rt0.c1, rt0.c4, v0.c0, rt0.c2, rt0.c3 FROM v0, rt0 GROUP BY rt0.c0, rt0.c1, rt0.c4, v0.c0, rt0.c2, rt0.c3;
SELECT ALL v0.c0, rt0.c2 FROM rt0, v0 GROUP BY v0.c0, rt0.c2;
SELECT v0.c0, rt0.c2 FROM rt0, v0 GROUP BY v0.c0, rt0.c2 HAVING (COUNT(*) COLLATE NOCASE IN ()) UNION ALL SELECT v0.c0, rt0.c2 FROM rt0, v0 GROUP BY v0.c0, rt0.c2 HAVING (NOT ((COUNT(*) COLLATE NOCASE IN ()))) UNION ALL SELECT v0.c0, rt0.c2 FROM rt0, v0 GROUP BY v0.c0, rt0.c2 HAVING (((COUNT(*) COLLATE NOCASE IN ())) ISNULL);
SELECT ALL v0.c0, rt0.c2 FROM rt0, v0 GROUP BY v0.c0, rt0.c2;
SELECT v0.c0, rt0.c2 FROM rt0, v0 GROUP BY v0.c0, rt0.c2 HAVING (COUNT(*) COLLATE NOCASE IN ()) UNION ALL SELECT v0.c0, rt0.c2 FROM rt0, v0 GROUP BY v0.c0, rt0.c2 HAVING (NOT ((COUNT(*) COLLATE NOCASE IN ()))) UNION ALL SELECT v0.c0, rt0.c2 FROM rt0, v0 GROUP BY v0.c0, rt0.c2 HAVING (((COUNT(*) COLLATE NOCASE IN ())) ISNULL);
SELECT ALL v0.c0, rt0.c2 FROM rt0, v0 GROUP BY v0.c0, rt0.c2;
SELECT SUM(((((((((rt0.c2)AND(v0.c0)))AND('')))OR(rt0.c2)))AND(rt0.c2)) COLLATE BINARY) FROM v0, rt0 ORDER BY (((rt0.c0)) BETWEEN ((((((((((x'')OR(rt0.c1)))AND(rt0.c3)))OR(v0.c0)))AND(v0.c0)))) AND ((((rt0.c3)*(rt0.c1))))) DESC  NULLS LAST, ((-1.283204677E9)%((((rt0.c4, rt0.c3, rt0.c0)) NOT BETWEEN ((rt0.c4, rt0.c4, rt0.c3)) AND ((v0.c0, rt0.c0, v0.c0))))) DESC, ((((((((CASE rt0.c4  WHEN rt0.c1 THEN rt0.c4 END)OR(CASE rt0.c0  WHEN rt0.c4 THEN v0.c0 ELSE rt0.c4 END)))OR(x'')))AND(0.0989560846210511)))AND(((((rt0.c1)AND(rt0.c4)))OR(rt0.c2)))) DESC  NULLS FIRST;
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE ((((((rt0.c3, rt0.c3, rt0.c3)) NOT BETWEEN ((rt0.c4, 0.9412300940958762, rt0.c4)) AND ((rt0.c1, rt0.c0, rt0.c4))))>=((~ ('0.5253040922174236'))))) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT ((((((rt0.c3, rt0.c3, rt0.c3)) NOT BETWEEN ((rt0.c4, 0.9412300940958762, rt0.c4)) AND ((rt0.c1, rt0.c0, rt0.c4))))>=((~ ('0.5253040922174236'))))))) UNION ALL SELECT ALL * FROM rt0 WHERE ((((((((rt0.c3, rt0.c3, rt0.c3)) NOT BETWEEN ((rt0.c4, 0.9412300940958762, rt0.c4)) AND ((rt0.c1, rt0.c0, rt0.c4))))>=((~ ('0.5253040922174236'))))) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (CASE WHEN (v0.c0 IN ()) THEN (NOT (v0.c0)) END) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (CASE WHEN (v0.c0 IN ()) THEN (NOT (v0.c0)) END))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((CASE WHEN (v0.c0 IN ()) THEN (NOT (v0.c0)) END) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (ABS(v0.c0)) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT (ABS(v0.c0)))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((ABS(v0.c0)) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT rt0.c3, rt0.c1, rt0.c4, rt0.c0 FROM rt0 GROUP BY rt0.c3, rt0.c1, rt0.c4, rt0.c0;
SELECT rt0.c3, rt0.c1, rt0.c4, rt0.c0 FROM rt0 GROUP BY rt0.c3, rt0.c1, rt0.c4, rt0.c0 HAVING (((((((((((((((x'')) BETWEEN ((COUNT(*))) AND ((1629938911))))OR(CASE MAX(AVG(MAX(SUM(rt0.c1))))  WHEN MIN(x'') THEN rt0.c0 END)))AND(GROUP_CONCAT(COUNT(*)))))AND(SUM(rt0.c4))))OR(MAX(MAX(TOTAL(rt0.c0))))))AND(((rt0.c0)LIKE(rt0.c2)))))OR(MIN(AVG(COUNT(rt0.c3))))) UNION ALL SELECT rt0.c3, rt0.c1, rt0.c4, rt0.c0 FROM rt0 GROUP BY rt0.c3, rt0.c1, rt0.c4, rt0.c0 HAVING (NOT ((((((((((((((((x'')) BETWEEN ((COUNT(*))) AND ((1629938911))))OR(CASE MAX(AVG(MAX(SUM(rt0.c1))))  WHEN MIN(x'') THEN rt0.c0 END)))AND(GROUP_CONCAT(COUNT(*)))))AND(SUM(rt0.c4))))OR(MAX(MAX(TOTAL(rt0.c0))))))AND(((rt0.c0)LIKE(rt0.c2)))))OR(MIN(AVG(COUNT(rt0.c3))))))) UNION ALL SELECT ALL rt0.c3, rt0.c1, rt0.c4, rt0.c0 FROM rt0 GROUP BY rt0.c3, rt0.c1, rt0.c4, rt0.c0 HAVING (((((((((((((((((x'')) BETWEEN ((COUNT(*))) AND ((1629938911))))OR(CASE MAX(AVG(MAX(SUM(rt0.c1))))  WHEN MIN(x'') THEN rt0.c0 END)))AND(GROUP_CONCAT(COUNT(*)))))AND(SUM(rt0.c4))))OR(MAX(MAX(TOTAL(rt0.c0))))))AND(((rt0.c0)LIKE(rt0.c2)))))OR(MIN(AVG(COUNT(rt0.c3)))))) ISNULL);
SELECT ALL * FROM rt0, v0;
SELECT * FROM rt0, v0 WHERE ((((((NOT (rt0.c4)))OR((((rt0.c0)) NOT BETWEEN ((v0.c0)) AND (('Ks驦'))))))OR(((((v0.c0)AND(x'ea11')))OR(rt0.c2))))) UNION ALL SELECT * FROM rt0, v0 WHERE ((NOT ((((((NOT (rt0.c4)))OR((((rt0.c0)) NOT BETWEEN ((v0.c0)) AND (('Ks驦'))))))OR(((((v0.c0)AND(x'ea11')))OR(rt0.c2))))))) UNION ALL SELECT * FROM rt0, v0 WHERE ((((((((NOT (rt0.c4)))OR((((rt0.c0)) NOT BETWEEN ((v0.c0)) AND (('Ks驦'))))))OR(((((v0.c0)AND(x'ea11')))OR(rt0.c2))))) ISNULL));
SELECT ALL * FROM rt0, v0;
SELECT DISTINCT * FROM v0, rt0;
SELECT DISTINCT * FROM v0, rt0 WHERE ((~ (NULL))) UNION SELECT DISTINCT * FROM v0, rt0 WHERE ((NOT ((~ (NULL))))) UNION SELECT DISTINCT * FROM v0, rt0 WHERE ((((~ (NULL))) ISNULL));
SELECT DISTINCT * FROM v0, rt0;
SELECT rt0.c3, rt0.c2, rt0.c1, v0.c0, rt0.c0, rt0.c4 FROM v0, rt0 GROUP BY rt0.c3, rt0.c2, rt0.c1, v0.c0, rt0.c0, rt0.c4;
SELECT rt0.c3, rt0.c2, rt0.c1, v0.c0, rt0.c0, rt0.c4 FROM v0, rt0 WHERE ((((((rt0.c3, rt0.c0, rt0.c1)) BETWEEN ((rt0.c4, rt0.c2, rt0.c4)) AND ((rt0.c2, rt0.c3, rt0.c4))))+(((rt0.c4) BETWEEN (rt0.c1) AND (rt0.c0))))) GROUP BY rt0.c3, rt0.c2, rt0.c1, v0.c0, rt0.c0, rt0.c4 UNION SELECT rt0.c3, rt0.c2, rt0.c1, v0.c0, rt0.c0, rt0.c4 FROM v0, rt0 WHERE ((NOT ((((((rt0.c3, rt0.c0, rt0.c1)) BETWEEN ((rt0.c4, rt0.c2, rt0.c4)) AND ((rt0.c2, rt0.c3, rt0.c4))))+(((rt0.c4) BETWEEN (rt0.c1) AND (rt0.c0))))))) GROUP BY rt0.c3, rt0.c2, rt0.c1, v0.c0, rt0.c0, rt0.c4 UNION SELECT ALL rt0.c3, rt0.c2, rt0.c1, v0.c0, rt0.c0, rt0.c4 FROM v0, rt0 WHERE ((((((((rt0.c3, rt0.c0, rt0.c1)) BETWEEN ((rt0.c4, rt0.c2, rt0.c4)) AND ((rt0.c2, rt0.c3, rt0.c4))))+(((rt0.c4) BETWEEN (rt0.c1) AND (rt0.c0))))) ISNULL)) GROUP BY rt0.c3, rt0.c2, rt0.c1, v0.c0, rt0.c0, rt0.c4;
SELECT rt0.c3, rt0.c2, rt0.c1, v0.c0, rt0.c0, rt0.c4 FROM v0, rt0 GROUP BY rt0.c3, rt0.c2, rt0.c1, v0.c0, rt0.c0, rt0.c4;
SELECT ALL rt0.c1 FROM v0, rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM v0, rt0 GROUP BY rt0.c1 HAVING COUNT(CASE WHEN v0.c0 THEN AVG('633361968') WHEN COUNT(*) THEN MAX(rt0.c2) WHEN '/' THEN GROUP_CONCAT(COUNT(COUNT(rt0.c1))) WHEN rt0.c4 THEN rt0.c4 WHEN SUM(v0.c0) THEN SUM(rt0.c1) END) UNION ALL SELECT rt0.c1 FROM v0, rt0 GROUP BY rt0.c1 HAVING (NOT (COUNT(CASE WHEN v0.c0 THEN AVG('633361968') WHEN COUNT(*) THEN MAX(rt0.c2) WHEN '/' THEN GROUP_CONCAT(COUNT(COUNT(rt0.c1))) WHEN rt0.c4 THEN rt0.c4 WHEN SUM(v0.c0) THEN SUM(rt0.c1) END))) UNION ALL SELECT ALL rt0.c1 FROM v0, rt0 GROUP BY rt0.c1 HAVING ((COUNT(CASE WHEN v0.c0 THEN AVG('633361968') WHEN COUNT(*) THEN MAX(rt0.c2) WHEN '/' THEN GROUP_CONCAT(COUNT(COUNT(rt0.c1))) WHEN rt0.c4 THEN rt0.c4 WHEN SUM(v0.c0) THEN SUM(rt0.c1) END)) ISNULL);
SELECT rt0.c1, rt0.c2 FROM rt0 NOT INDEXED;
SELECT rt0.c1, rt0.c2 FROM rt0 WHERE ((((- (rt0.c0))) NOT NULL)) UNION ALL SELECT rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT ((((- (rt0.c0))) NOT NULL)))) UNION ALL SELECT ALL rt0.c1, rt0.c2 FROM rt0 WHERE ((((((- (rt0.c0))) NOT NULL)) ISNULL));
SELECT rt0.c1, rt0.c2 FROM rt0 NOT INDEXED;
SELECT DISTINCT rt0.c4, rt0.c0, rt0.c2, rt0.c3 FROM rt0;
SELECT DISTINCT rt0.c4, rt0.c0, rt0.c2, rt0.c3 FROM rt0 WHERE (((((NULL) IS FALSE)) NOT NULL)) UNION SELECT DISTINCT rt0.c4, rt0.c0, rt0.c2, rt0.c3 FROM rt0 WHERE ((NOT (((((NULL) IS FALSE)) NOT NULL)))) UNION SELECT DISTINCT rt0.c4, rt0.c0, rt0.c2, rt0.c3 FROM rt0 WHERE (((((((NULL) IS FALSE)) NOT NULL)) ISNULL));
SELECT DISTINCT rt0.c4, rt0.c0, rt0.c2, rt0.c3 FROM rt0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (((v0.c0 IN ()) IN ())) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT (((v0.c0 IN ()) IN ())))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE (((((v0.c0 IN ()) IN ())) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL rt0.c0, rt0.c1, rt0.c3, rt0.c2, rt0.c4 FROM v0, rt0 GROUP BY rt0.c0, rt0.c1, rt0.c3, rt0.c2, rt0.c4;
SELECT rt0.c0, rt0.c1, rt0.c3, rt0.c2, rt0.c4 FROM v0, rt0 GROUP BY rt0.c0, rt0.c1, rt0.c3, rt0.c2, rt0.c4 HAVING SUM(SUM(AVG(GROUP_CONCAT(AVG(0X4716af8b))))) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c3, rt0.c2, rt0.c4 FROM v0, rt0 GROUP BY rt0.c0, rt0.c1, rt0.c3, rt0.c2, rt0.c4 HAVING (NOT (SUM(SUM(AVG(GROUP_CONCAT(AVG(0x4716af8b))))))) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c3, rt0.c2, rt0.c4 FROM v0, rt0 GROUP BY rt0.c0, rt0.c1, rt0.c3, rt0.c2, rt0.c4 HAVING ((SUM(SUM(AVG(GROUP_CONCAT(AVG(0x4716af8b)))))) ISNULL);
SELECT ALL * FROM v0;
SELECT * FROM v0 WHERE (CASE ((v0.c0) BETWEEN (v0.c0) AND (v0.c0))  WHEN RTRIM(NULL) THEN ((v0.c0)>(v0.c0)) WHEN CAST(NULL AS TEXT) THEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) WHEN 'Xf' THEN ((((((((((((((((NULL)AND(v0.c0)))AND(v0.c0)))AND(v0.c0)))AND(v0.c0)))OR(v0.c0)))OR(v0.c0)))OR(v0.c0)))OR(v0.c0)) END) UNION ALL SELECT * FROM v0 WHERE ((NOT (CASE ((v0.c0) BETWEEN (v0.c0) AND (v0.c0))  WHEN RTRIM(NULL) THEN ((v0.c0)>(v0.c0)) WHEN CAST(NULL AS TEXT) THEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) WHEN 'Xf' THEN ((((((((((((((((NULL)AND(v0.c0)))AND(v0.c0)))AND(v0.c0)))AND(v0.c0)))OR(v0.c0)))OR(v0.c0)))OR(v0.c0)))OR(v0.c0)) END))) UNION ALL SELECT ALL * FROM v0 WHERE (((CASE ((v0.c0) BETWEEN (v0.c0) AND (v0.c0))  WHEN RTRIM(NULL) THEN ((v0.c0)>(v0.c0)) WHEN CAST(NULL AS TEXT) THEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) WHEN 'Xf' THEN ((((((((((((((((NULL)AND(v0.c0)))AND(v0.c0)))AND(v0.c0)))AND(v0.c0)))OR(v0.c0)))OR(v0.c0)))OR(v0.c0)))OR(v0.c0)) END) ISNULL));
SELECT ALL * FROM v0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (CAST(TYPEOF(DISTINCT rt0.c1) AS BLOB)) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (CAST(TYPEOF(DISTINCT rt0.c1) AS BLOB)))) UNION SELECT DISTINCT * FROM rt0 WHERE (((CAST(TYPEOF(DISTINCT rt0.c1) AS BLOB)) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c1, rt0.c2, rt0.c4, rt0.c0, rt0.c3 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c4, rt0.c0, rt0.c3;
SELECT ALL rt0.c1, rt0.c2, rt0.c4, rt0.c0, rt0.c3 FROM rt0 WHERE (NULL) GROUP BY rt0.c1, rt0.c2, rt0.c4, rt0.c0, rt0.c3 UNION SELECT rt0.c1, rt0.c2, rt0.c4, rt0.c0, rt0.c3 FROM rt0 WHERE ((NOT (NULL))) GROUP BY rt0.c1, rt0.c2, rt0.c4, rt0.c0, rt0.c3 UNION SELECT rt0.c1, rt0.c2, rt0.c4, rt0.c0, rt0.c3 FROM rt0 WHERE (((NULL) ISNULL)) GROUP BY rt0.c1, rt0.c2, rt0.c4, rt0.c0, rt0.c3;
SELECT rt0.c1, rt0.c2, rt0.c4, rt0.c0, rt0.c3 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c4, rt0.c0, rt0.c3;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((AVG(v0.c0))IS NOT(COUNT(*))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (((AVG(v0.c0))IS NOT(COUNT(*))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((((AVG(v0.c0))IS NOT(COUNT(*)))) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((AVG(v0.c0))IS NOT(COUNT(*))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (((AVG(v0.c0))IS NOT(COUNT(*))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((((AVG(v0.c0))IS NOT(COUNT(*)))) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL * FROM v0;
SELECT * FROM v0 WHERE (SQLITE_COMPILEOPTION_GET(CASE WHEN v0.c0 THEN 0.9461552677514367 END)) UNION ALL SELECT ALL * FROM v0 WHERE ((NOT (SQLITE_COMPILEOPTION_GET(CASE WHEN v0.c0 THEN 0.9461552677514367 END)))) UNION ALL SELECT * FROM v0 WHERE (((SQLITE_COMPILEOPTION_GET(CASE WHEN v0.c0 THEN 0.9461552677514367 END)) ISNULL));
SELECT ALL * FROM v0;
SELECT DISTINCT * FROM rt0, v0;
SELECT DISTINCT * FROM rt0, v0 WHERE ((x'' IN (((rt0.c4)OR(rt0.c3))))) UNION SELECT DISTINCT * FROM rt0, v0 WHERE ((NOT ((x'' IN (((rt0.c4)OR(rt0.c3))))))) UNION SELECT DISTINCT * FROM rt0, v0 WHERE ((((x'' IN (((rt0.c4)OR(rt0.c3))))) ISNULL));
SELECT DISTINCT * FROM rt0, v0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (LOWER((+ (0.5634497796451954)))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (LOWER((+ (0.5634497796451954)))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((LOWER((+ (0.5634497796451954)))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL rt0.c2, v0.c0, rt0.c0 FROM rt0, v0 NOT INDEXED GROUP BY rt0.c2, v0.c0, rt0.c0;
SELECT rt0.c2, v0.c0, rt0.c0 FROM rt0, v0 GROUP BY rt0.c2, v0.c0, rt0.c0 HAVING COUNT(*) UNION ALL SELECT rt0.c2, v0.c0, rt0.c0 FROM rt0, v0 GROUP BY rt0.c2, v0.c0, rt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c2, v0.c0, rt0.c0 FROM rt0, v0 GROUP BY rt0.c2, v0.c0, rt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c2, v0.c0, rt0.c0 FROM rt0, v0 NOT INDEXED GROUP BY rt0.c2, v0.c0, rt0.c0;
SELECT rt0.c2, v0.c0, rt0.c0 FROM rt0, v0 GROUP BY rt0.c2, v0.c0, rt0.c0 HAVING COUNT(*) UNION ALL SELECT rt0.c2, v0.c0, rt0.c0 FROM rt0, v0 GROUP BY rt0.c2, v0.c0, rt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c2, v0.c0, rt0.c0 FROM rt0, v0 GROUP BY rt0.c2, v0.c0, rt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c2, v0.c0, rt0.c0 FROM rt0, v0 NOT INDEXED GROUP BY rt0.c2, v0.c0, rt0.c0;
SELECT * FROM v0, rt0;
SELECT ALL * FROM v0, rt0 WHERE (((((v0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c4))) BETWEEN (((rt0.c1)>(rt0.c0))) AND (CAST(rt0.c4 AS REAL)))) UNION ALL SELECT * FROM v0, rt0 WHERE ((NOT (((((v0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c4))) BETWEEN (((rt0.c1)>(rt0.c0))) AND (CAST(rt0.c4 AS REAL)))))) UNION ALL SELECT ALL * FROM v0, rt0 WHERE (((((((v0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c4))) BETWEEN (((rt0.c1)>(rt0.c0))) AND (CAST(rt0.c4 AS REAL)))) ISNULL));
SELECT * FROM v0, rt0;
SELECT DISTINCT * FROM rt0 FULL OUTER JOIN v0 ON rt0.c0;
SELECT DISTINCT * FROM rt0 FULL OUTER JOIN v0 ON rt0.c0 WHERE (((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c3)) COLLATE BINARY) UNION SELECT DISTINCT * FROM rt0 FULL OUTER JOIN v0 ON rt0.c0 WHERE ((NOT (((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c3)) COLLATE BINARY))) UNION SELECT DISTINCT * FROM rt0 FULL OUTER JOIN v0 ON rt0.c0 WHERE (((((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c3)) COLLATE BINARY) ISNULL));
SELECT DISTINCT * FROM rt0 FULL OUTER JOIN v0 ON rt0.c0;
SELECT rt0.c1, rt0.c0, rt0.c4, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c4, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, rt0.c4, rt0.c2 FROM rt0 WHERE (((x'3c78')GLOB(rt0.c0 COLLATE RTRIM))) GROUP BY rt0.c1, rt0.c0, rt0.c4, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c0, rt0.c4, rt0.c2 FROM rt0 WHERE ((NOT (((x'3c78')GLOB(rt0.c0 COLLATE RTRIM))))) GROUP BY rt0.c1, rt0.c0, rt0.c4, rt0.c2 UNION SELECT rt0.c1, rt0.c0, rt0.c4, rt0.c2 FROM rt0 WHERE (((((x'3c78')GLOB(rt0.c0 COLLATE RTRIM))) ISNULL)) GROUP BY rt0.c1, rt0.c0, rt0.c4, rt0.c2;
SELECT rt0.c1, rt0.c0, rt0.c4, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c4, rt0.c2;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((v0.c0 IN (TOTAL(GROUP_CONCAT(v0.c0)), v0.c0)) IN ()) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (((v0.c0 IN (TOTAL(GROUP_CONCAT(v0.c0)), v0.c0)) IN ()))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((((v0.c0 IN (TOTAL(GROUP_CONCAT(v0.c0)), v0.c0)) IN ())) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((v0.c0 IN (TOTAL(GROUP_CONCAT(v0.c0)), v0.c0)) IN ()) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (((v0.c0 IN (TOTAL(GROUP_CONCAT(v0.c0)), v0.c0)) IN ()))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((((v0.c0 IN (TOTAL(GROUP_CONCAT(v0.c0)), v0.c0)) IN ())) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0;
SELECT ALL v0.c0 FROM v0 WHERE (CASE WHEN v0.c0 THEN v0.c0 WHEN x'' THEN v0.c0 WHEN v0.c0 THEN '962440873' ELSE x'90d4' END COLLATE NOCASE) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE ((NOT (CASE WHEN v0.c0 THEN v0.c0 WHEN x'' THEN v0.c0 WHEN v0.c0 THEN '962440873' ELSE x'90d4' END COLLATE NOCASE))) UNION ALL SELECT v0.c0 FROM v0 WHERE (((CASE WHEN v0.c0 THEN v0.c0 WHEN x'' THEN v0.c0 WHEN v0.c0 THEN '962440873' ELSE x'90d4' END COLLATE NOCASE) ISNULL));
SELECT ALL v0.c0 FROM v0;
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c3 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c3 FROM rt0 WHERE (CAST(rt0.c4 AS TEXT)) UNION SELECT DISTINCT rt0.c1, rt0.c0, rt0.c3 FROM rt0 WHERE ((NOT (CAST(rt0.c4 AS TEXT)))) UNION SELECT DISTINCT rt0.c1, rt0.c0, rt0.c3 FROM rt0 WHERE (((CAST(rt0.c4 AS TEXT)) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c3 FROM rt0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (((((v0.c0)OR(((v0.c0)&(v0.c0)))))AND(CAST('1146625475' AS NUMERIC)))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (((((v0.c0)OR(((v0.c0)&(v0.c0)))))AND(CAST('1146625475' AS NUMERIC)))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((((((v0.c0)OR(((v0.c0)&(v0.c0)))))AND(CAST('1146625475' AS NUMERIC)))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL rt0.c3, rt0.c4 FROM rt0 GROUP BY rt0.c3, rt0.c4;
SELECT ALL rt0.c3, rt0.c4 FROM rt0 GROUP BY rt0.c3, rt0.c4 HAVING COUNT(((((((((MIN(MAX(SUM(COUNT(GROUP_CONCAT(rt0.c2))))))AND(rt0.c4)))OR(rt0.c4)))AND(rt0.c1)))OR(MAX(rt0.c1)))) UNION ALL SELECT ALL rt0.c3, rt0.c4 FROM rt0 GROUP BY rt0.c3, rt0.c4 HAVING (NOT (COUNT(((((((((MIN(MAX(SUM(COUNT(GROUP_CONCAT(rt0.c2))))))AND(rt0.c4)))OR(rt0.c4)))AND(rt0.c1)))OR(MAX(rt0.c1)))))) UNION ALL SELECT ALL rt0.c3, rt0.c4 FROM rt0 GROUP BY rt0.c3, rt0.c4 HAVING ((COUNT(((((((((MIN(MAX(SUM(COUNT(GROUP_CONCAT(rt0.c2))))))AND(rt0.c4)))OR(rt0.c4)))AND(rt0.c1)))OR(MAX(rt0.c1))))) ISNULL);
SELECT v0.c0 FROM v0;
SELECT v0.c0 FROM v0 WHERE ('lQMl.+s') UNION ALL SELECT v0.c0 FROM v0 WHERE ((NOT ('lQMl.+s'))) UNION ALL SELECT v0.c0 FROM v0 WHERE ((('lQMl.+s') ISNULL));
SELECT v0.c0 FROM v0;
SELECT DISTINCT * FROM v0, rt0;
SELECT DISTINCT * FROM v0, rt0 WHERE ((((((rt0.c2, rt0.c3, NULL))<((rt0.c0, v0.c0, rt0.c3)))) NOT BETWEEN ((rt0.c3 IN ())) AND (((rt0.c0)IS NOT(rt0.c0))))) UNION SELECT DISTINCT * FROM v0, rt0 WHERE ((NOT ((((((rt0.c2, rt0.c3, NULL))<((rt0.c0, v0.c0, rt0.c3)))) NOT BETWEEN ((rt0.c3 IN ())) AND (((rt0.c0)IS NOT(rt0.c0))))))) UNION SELECT DISTINCT * FROM v0, rt0 WHERE ((((((((rt0.c2, rt0.c3, NULL))<((rt0.c0, v0.c0, rt0.c3)))) NOT BETWEEN ((rt0.c3 IN ())) AND (((rt0.c0)IS NOT(rt0.c0))))) ISNULL));
SELECT DISTINCT * FROM v0, rt0;
SELECT rt0.c2, rt0.c3, rt0.c1, v0.c0 FROM v0, rt0 GROUP BY rt0.c2, rt0.c3, rt0.c1, v0.c0;
SELECT ALL rt0.c2, rt0.c3, rt0.c1, v0.c0 FROM v0, rt0 WHERE (x'') GROUP BY rt0.c2, rt0.c3, rt0.c1, v0.c0 UNION SELECT rt0.c2, rt0.c3, rt0.c1, v0.c0 FROM v0, rt0 WHERE ((NOT (x''))) GROUP BY rt0.c2, rt0.c3, rt0.c1, v0.c0 UNION SELECT ALL rt0.c2, rt0.c3, rt0.c1, v0.c0 FROM v0, rt0 WHERE (((x'') ISNULL)) GROUP BY rt0.c2, rt0.c3, rt0.c1, v0.c0;
SELECT rt0.c2, rt0.c3, rt0.c1, v0.c0 FROM v0, rt0 GROUP BY rt0.c2, rt0.c3, rt0.c1, v0.c0;
SELECT ALL rt0.c4, v0.c0 FROM v0, rt0 GROUP BY rt0.c4, v0.c0;
SELECT ALL rt0.c4, v0.c0 FROM v0, rt0 GROUP BY rt0.c4, v0.c0 HAVING CASE WHEN COUNT(*) COLLATE NOCASE THEN TOTAL(TOTAL(rt0.c3)) ELSE COUNT(COUNT(*)) END UNION ALL SELECT rt0.c4, v0.c0 FROM v0, rt0 GROUP BY rt0.c4, v0.c0 HAVING (NOT (CASE WHEN COUNT(*) COLLATE NOCASE THEN TOTAL(TOTAL(rt0.c3)) ELSE COUNT(COUNT(*)) END)) UNION ALL SELECT rt0.c4, v0.c0 FROM v0, rt0 GROUP BY rt0.c4, v0.c0 HAVING ((CASE WHEN COUNT(*) COLLATE NOCASE THEN TOTAL(TOTAL(rt0.c3)) ELSE COUNT(COUNT(*)) END) ISNULL);
SELECT * FROM v0 INNER JOIN rt0 ON ((CASE rt0.c3  WHEN rt0.c2 THEN rt0.c0 ELSE v0.c0 END) NOT NULL);
SELECT * FROM v0 INNER JOIN rt0 ON ((CASE rt0.c3  WHEN rt0.c2 THEN rt0.c0 ELSE v0.c0 END) NOT NULL) WHERE (rt0.c2) UNION ALL SELECT ALL * FROM v0 INNER JOIN rt0 ON ((CASE rt0.c3  WHEN rt0.c2 THEN rt0.c0 ELSE v0.c0 END) NOT NULL) WHERE ((NOT (rt0.c2))) UNION ALL SELECT * FROM v0 INNER JOIN rt0 ON ((CASE rt0.c3  WHEN rt0.c2 THEN rt0.c0 ELSE v0.c0 END) NOT NULL) WHERE (((rt0.c2) ISNULL));
SELECT * FROM v0 INNER JOIN rt0 ON ((CASE rt0.c3  WHEN rt0.c2 THEN rt0.c0 ELSE v0.c0 END) NOT NULL);
SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2, rt0.c4 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2, rt0.c4 FROM rt0 WHERE (((((((rt0.c4)OR(rt0.c3)))AND(rt0.c3))) IS TRUE)) UNION SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2, rt0.c4 FROM rt0 WHERE ((NOT (((((((rt0.c4)OR(rt0.c3)))AND(rt0.c3))) IS TRUE)))) UNION SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2, rt0.c4 FROM rt0 WHERE (((((((((rt0.c4)OR(rt0.c3)))AND(rt0.c3))) IS TRUE)) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2, rt0.c4 FROM rt0;
SELECT rt0.c2, v0.c0, rt0.c3, rt0.c1, rt0.c4 FROM v0 INNER JOIN rt0 ON NULL GROUP BY rt0.c2, v0.c0, rt0.c3, rt0.c1, rt0.c4;
SELECT rt0.c2, v0.c0, rt0.c3, rt0.c1, rt0.c4 FROM v0 NOT INDEXED INNER JOIN rt0 ON NULL WHERE (((rt0.c1)/(rt0.c0)) COLLATE BINARY COLLATE BINARY) GROUP BY rt0.c2, v0.c0, rt0.c3, rt0.c1, rt0.c4 UNION SELECT rt0.c2, v0.c0, rt0.c3, rt0.c1, rt0.c4 FROM v0 INNER JOIN rt0 ON NULL WHERE ((NOT (((rt0.c1)/(rt0.c0)) COLLATE BINARY COLLATE BINARY))) GROUP BY rt0.c2, v0.c0, rt0.c3, rt0.c1, rt0.c4 UNION SELECT ALL rt0.c2, v0.c0, rt0.c3, rt0.c1, rt0.c4 FROM v0 INNER JOIN rt0 ON NULL WHERE (((((rt0.c1)/(rt0.c0)) COLLATE BINARY COLLATE BINARY) ISNULL)) GROUP BY rt0.c2, v0.c0, rt0.c3, rt0.c1, rt0.c4;
SELECT rt0.c2, v0.c0, rt0.c3, rt0.c1, rt0.c4 FROM v0 INNER JOIN rt0 ON NULL GROUP BY rt0.c2, v0.c0, rt0.c3, rt0.c1, rt0.c4;
SELECT rt0.c4, v0.c0 FROM rt0, v0 GROUP BY rt0.c4, v0.c0;
SELECT ALL rt0.c4, v0.c0 FROM rt0, v0 GROUP BY rt0.c4, v0.c0 HAVING ((MIN(MAX(rt0.c1)))IS NOT(((rt0.c2)GLOB(GROUP_CONCAT(rt0.c2))))) UNION ALL SELECT ALL rt0.c4, v0.c0 FROM rt0, v0 GROUP BY rt0.c4, v0.c0 HAVING (NOT (((MIN(MAX(rt0.c1)))IS NOT(((rt0.c2)GLOB(GROUP_CONCAT(rt0.c2))))))) UNION ALL SELECT rt0.c4, v0.c0 FROM rt0, v0 GROUP BY rt0.c4, v0.c0 HAVING ((((MIN(MAX(rt0.c1)))IS NOT(((rt0.c2)GLOB(GROUP_CONCAT(rt0.c2)))))) ISNULL);
SELECT ALL * FROM v0, rt0;
SELECT ALL * FROM v0, rt0 WHERE (rt0.c3 COLLATE RTRIM) UNION ALL SELECT * FROM v0, rt0 WHERE ((NOT (rt0.c3 COLLATE RTRIM))) UNION ALL SELECT ALL * FROM v0, rt0 WHERE (((rt0.c3 COLLATE RTRIM) ISNULL));
SELECT ALL * FROM v0, rt0;
SELECT DISTINCT * FROM v0 FULL OUTER JOIN rt0 ON (('R>Ucni^B*')>=((- (rt0.c0))));
SELECT DISTINCT * FROM v0 FULL OUTER JOIN rt0 ON (('R>Ucni^B*')>=((- (rt0.c0)))) WHERE (rt0.c3) UNION SELECT DISTINCT * FROM v0 FULL OUTER JOIN rt0 ON (('R>Ucni^B*')>=((- (rt0.c0)))) WHERE ((NOT (rt0.c3))) UNION SELECT DISTINCT * FROM v0 FULL OUTER JOIN rt0 ON (('R>Ucni^B*')>=((- (rt0.c0)))) WHERE (((rt0.c3) ISNULL));
SELECT DISTINCT * FROM v0 FULL OUTER JOIN rt0 ON (('R>Ucni^B*')>=((- (rt0.c0))));
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE ((- (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT ((- (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((((- (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING MAX(TOTAL(v0.c0)) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (MAX(TOTAL(v0.c0)))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((MAX(TOTAL(v0.c0))) ISNULL);
SELECT rt0.c3, rt0.c0, v0.c0 FROM rt0 FULL OUTER JOIN v0 ON ROUND(((v0.c0)&(rt0.c0)), ((rt0.c1) ISNULL));
SELECT rt0.c3, rt0.c0, v0.c0 FROM rt0 FULL OUTER JOIN v0 ON ROUND(((v0.c0)&(rt0.c0)), ((rt0.c1) ISNULL)) WHERE ((((rt0.c3) BETWEEN (rt0.c2) AND (rt0.c4)) IN ())) UNION ALL SELECT ALL rt0.c3, rt0.c0, v0.c0 FROM rt0 FULL OUTER JOIN v0 ON ROUND(((v0.c0)&(rt0.c0)), ((rt0.c1) ISNULL)) WHERE ((NOT ((((rt0.c3) BETWEEN (rt0.c2) AND (rt0.c4)) IN ())))) UNION ALL SELECT rt0.c3, rt0.c0, v0.c0 FROM rt0 FULL OUTER JOIN v0 ON ROUND(((v0.c0)&(rt0.c0)), ((rt0.c1) ISNULL)) WHERE ((((((rt0.c3) BETWEEN (rt0.c2) AND (rt0.c4)) IN ())) ISNULL));
SELECT rt0.c3, rt0.c0, v0.c0 FROM rt0 FULL OUTER JOIN v0 ON ROUND(((v0.c0)&(rt0.c0)), ((rt0.c1) ISNULL));
SELECT DISTINCT * FROM v0, rt0;
SELECT DISTINCT * FROM v0, rt0 WHERE (((((rt0.c2) BETWEEN (rt0.c3) AND (rt0.c2))) IS TRUE)) UNION SELECT DISTINCT * FROM v0, rt0 WHERE ((NOT (((((rt0.c2) BETWEEN (rt0.c3) AND (rt0.c2))) IS TRUE)))) UNION SELECT DISTINCT * FROM v0, rt0 WHERE (((((((rt0.c2) BETWEEN (rt0.c3) AND (rt0.c2))) IS TRUE)) ISNULL));
SELECT DISTINCT * FROM v0, rt0;
SELECT v0.c0 FROM rt0 NOT INDEXED CROSS JOIN v0 ON (~ (((((rt0.c2)AND(rt0.c1)))AND(rt0.c4)))) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM rt0 CROSS JOIN v0 ON (~ (((((rt0.c2)AND(rt0.c1)))AND(rt0.c4)))) WHERE (((((((rt0.c4)AND(v0.c0)))AND(rt0.c4)))<>(0.35825902826309375))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM rt0 NOT INDEXED CROSS JOIN v0 ON (~ (((((rt0.c2)AND(rt0.c1)))AND(rt0.c4)))) WHERE ((NOT (((((((rt0.c4)AND(v0.c0)))AND(rt0.c4)))<>(0.35825902826309375))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM rt0 CROSS JOIN v0 ON (~ (((((rt0.c2)AND(rt0.c1)))AND(rt0.c4)))) WHERE (((((((((rt0.c4)AND(v0.c0)))AND(rt0.c4)))!=(0.35825902826309375))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM rt0 NOT INDEXED CROSS JOIN v0 ON (~ (((((rt0.c2)AND(rt0.c1)))AND(rt0.c4)))) GROUP BY v0.c0;
SELECT rt0.c1, rt0.c4, rt0.c2 FROM v0, rt0 GROUP BY rt0.c1, rt0.c4, rt0.c2;
SELECT ALL rt0.c1, rt0.c4, rt0.c2 FROM v0, rt0 GROUP BY rt0.c1, rt0.c4, rt0.c2 HAVING COUNT((((AVG(rt0.c1), MIN(v0.c0), rt0.c1)) NOT BETWEEN ((TOTAL(rt0.c1), rt0.c3, '')) AND ((v0.c0, rt0.c1, rt0.c1)))) UNION ALL SELECT rt0.c1, rt0.c4, rt0.c2 FROM v0, rt0 GROUP BY rt0.c1, rt0.c4, rt0.c2 HAVING (NOT (COUNT((((AVG(rt0.c1), MIN(v0.c0), rt0.c1)) NOT BETWEEN ((TOTAL(rt0.c1), rt0.c3, '')) AND ((v0.c0, rt0.c1, rt0.c1)))))) UNION ALL SELECT ALL rt0.c1, rt0.c4, rt0.c2 FROM v0, rt0 GROUP BY rt0.c1, rt0.c4, rt0.c2 HAVING ((COUNT((((AVG(rt0.c1), MIN(v0.c0), rt0.c1)) NOT BETWEEN ((TOTAL(rt0.c1), rt0.c3, '')) AND ((v0.c0, rt0.c1, rt0.c1))))) ISNULL);
SELECT * FROM rt0, v0;
SELECT ALL * FROM rt0, v0 WHERE ((((rt0.c1 IN (NULL, v0.c0)))|((((rt0.c3))<=(('-1389806359')))))) UNION ALL SELECT * FROM rt0, v0 WHERE ((NOT ((((rt0.c1 IN (NULL, v0.c0)))|((((rt0.c3))<=(('-1389806359')))))))) UNION ALL SELECT * FROM rt0, v0 WHERE ((((((rt0.c1 IN (NULL, v0.c0)))|((((rt0.c3))<=(('-1389806359')))))) ISNULL));
SELECT * FROM rt0, v0;
SELECT DISTINCT * FROM v0 LEFT OUTER JOIN rt0 ON ((MAX(rt0.c0, rt0.c0))/(rt0.c0));
SELECT DISTINCT * FROM v0 LEFT OUTER JOIN rt0 ON ((MAX(rt0.c0, rt0.c0))/(rt0.c0)) WHERE (((rt0.c4 COLLATE NOCASE)OR(((rt0.c2)GLOB(v0.c0))))) UNION SELECT DISTINCT * FROM v0 LEFT OUTER JOIN rt0 ON ((MAX(rt0.c0, rt0.c0))/(rt0.c0)) WHERE ((NOT (((rt0.c4 COLLATE NOCASE)OR(((rt0.c2)GLOB(v0.c0))))))) UNION SELECT DISTINCT * FROM v0 LEFT OUTER JOIN rt0 ON ((MAX(rt0.c0, rt0.c0))/(rt0.c0)) WHERE (((((rt0.c4 COLLATE NOCASE)OR(((rt0.c2)GLOB(v0.c0))))) ISNULL));
SELECT DISTINCT * FROM v0 LEFT OUTER JOIN rt0 ON ((MAX(rt0.c0, rt0.c0))/(rt0.c0));
SELECT ALL rt0.c3, rt0.c0, rt0.c4 FROM rt0, v0 GROUP BY rt0.c3, rt0.c0, rt0.c4;
SELECT ALL rt0.c3, rt0.c0, rt0.c4 FROM rt0, v0 WHERE (((((((((((((rt0.c4)OR(v0.c0)))OR(rt0.c0)))AND(rt0.c1)))AND(rt0.c4)))AND(rt0.c4)))OR(v0.c0)) COLLATE NOCASE) GROUP BY rt0.c3, rt0.c0, rt0.c4 UNION SELECT rt0.c3, rt0.c0, rt0.c4 FROM rt0, v0 WHERE ((NOT (((((((((((((rt0.c4)OR(v0.c0)))OR(rt0.c0)))AND(rt0.c1)))AND(rt0.c4)))AND(rt0.c4)))OR(v0.c0)) COLLATE NOCASE))) GROUP BY rt0.c3, rt0.c0, rt0.c4 UNION SELECT rt0.c3, rt0.c0, rt0.c4 FROM rt0, v0 WHERE (((((((((((((((rt0.c4)OR(v0.c0)))OR(rt0.c0)))AND(rt0.c1)))AND(rt0.c4)))AND(rt0.c4)))OR(v0.c0)) COLLATE NOCASE) ISNULL)) GROUP BY rt0.c3, rt0.c0, rt0.c4;
SELECT ALL rt0.c3, rt0.c0, rt0.c4 FROM rt0, v0 GROUP BY rt0.c3, rt0.c0, rt0.c4;
SELECT rt0.c4, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c4, rt0.c0, rt0.c1;
SELECT ALL rt0.c4, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c4, rt0.c0, rt0.c1 HAVING TOTAL(AVG(MAX(rt0.c1))) UNION ALL SELECT ALL rt0.c4, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c4, rt0.c0, rt0.c1 HAVING (NOT (TOTAL(AVG(MAX(rt0.c1))))) UNION ALL SELECT ALL rt0.c4, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c4, rt0.c0, rt0.c1 HAVING ((TOTAL(AVG(MAX(rt0.c1)))) ISNULL);
SELECT ALL TOTAL(LOWER((rt0.c3 IN (rt0.c1)))) FROM rt0;
SELECT ALL * FROM rt0 INNER JOIN v0 ON CAST(((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c4)) AS TEXT);
SELECT ALL * FROM rt0 INNER JOIN v0 ON CAST(((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c4)) AS TEXT) WHERE (((((rt0.c4) BETWEEN (rt0.c0) AND (rt0.c1))) IS TRUE)) UNION ALL SELECT * FROM rt0 INNER JOIN v0 ON CAST(((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c4)) AS TEXT) WHERE ((NOT (((((rt0.c4) BETWEEN (rt0.c0) AND (rt0.c1))) IS TRUE)))) UNION ALL SELECT ALL * FROM rt0 INNER JOIN v0 ON CAST(((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c4)) AS TEXT) WHERE (((((((rt0.c4) BETWEEN (rt0.c0) AND (rt0.c1))) IS TRUE)) ISNULL));
SELECT ALL * FROM rt0 INNER JOIN v0 ON CAST(((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c4)) AS TEXT);
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE ((v0.c0 IN (v0.c0, v0.c0)) COLLATE BINARY COLLATE NOCASE) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT ((v0.c0 IN (v0.c0, v0.c0)) COLLATE BINARY COLLATE NOCASE))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((((v0.c0 IN (v0.c0, v0.c0)) COLLATE BINARY COLLATE NOCASE) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 WHERE (CASE (NOT (rt0.c3))  WHEN TRIM(rt0.c4) THEN ((rt0.c3) NOT BETWEEN (rt0.c2) AND (rt0.c3)) WHEN (rt0.c4 IN (rt0.c3)) THEN TRIM(rt0.c2) WHEN ((rt0.c4)||(rt0.c2)) THEN ((((rt0.c1)OR(rt0.c0)))OR(rt0.c4)) END) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0 WHERE ((NOT (CASE (NOT (rt0.c3))  WHEN TRIM(rt0.c4) THEN ((rt0.c3) NOT BETWEEN (rt0.c2) AND (rt0.c3)) WHEN (rt0.c4 IN (rt0.c3)) THEN TRIM(rt0.c2) WHEN ((rt0.c4)||(rt0.c2)) THEN ((((rt0.c1)OR(rt0.c0)))OR(rt0.c4)) END))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0 WHERE (((CASE (NOT (rt0.c3))  WHEN TRIM(rt0.c4) THEN ((rt0.c3) NOT BETWEEN (rt0.c2) AND (rt0.c3)) WHEN (rt0.c4 IN (rt0.c3)) THEN TRIM(rt0.c2) WHEN ((rt0.c4)||(rt0.c2)) THEN ((((rt0.c1)OR(rt0.c0)))OR(rt0.c4)) END) ISNULL)) GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1, rt0.c4, v0.c0 FROM rt0, v0 GROUP BY rt0.c1, rt0.c4, v0.c0;
SELECT ALL rt0.c1, rt0.c4, v0.c0 FROM rt0, v0 GROUP BY rt0.c1, rt0.c4, v0.c0 HAVING (+ ((~ (rt0.c4)))) UNION ALL SELECT rt0.c1, rt0.c4, v0.c0 FROM rt0, v0 GROUP BY rt0.c1, rt0.c4, v0.c0 HAVING (NOT ((+ ((~ (rt0.c4)))))) UNION ALL SELECT ALL rt0.c1, rt0.c4, v0.c0 FROM rt0, v0 GROUP BY rt0.c1, rt0.c4, v0.c0 HAVING (((+ ((~ (rt0.c4))))) ISNULL);
SELECT ALL rt0.c1, rt0.c4, v0.c0 FROM rt0, v0 GROUP BY rt0.c1, rt0.c4, v0.c0;
SELECT ALL rt0.c1, rt0.c4, v0.c0 FROM rt0, v0 GROUP BY rt0.c1, rt0.c4, v0.c0 HAVING (+ ((~ (rt0.c4)))) UNION ALL SELECT rt0.c1, rt0.c4, v0.c0 FROM rt0, v0 GROUP BY rt0.c1, rt0.c4, v0.c0 HAVING (NOT ((+ ((~ (rt0.c4)))))) UNION ALL SELECT ALL rt0.c1, rt0.c4, v0.c0 FROM rt0, v0 GROUP BY rt0.c1, rt0.c4, v0.c0 HAVING (((+ ((~ (rt0.c4))))) ISNULL);
SELECT ALL rt0.c1, rt0.c4, v0.c0 FROM rt0, v0 GROUP BY rt0.c1, rt0.c4, v0.c0;
SELECT v0.c0 FROM v0;
SELECT v0.c0 FROM v0 WHERE (((v0.c0)=(NULL)) COLLATE NOCASE) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE ((NOT (((v0.c0)==(NULL)) COLLATE NOCASE))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE (((((v0.c0)==(NULL)) COLLATE NOCASE) ISNULL));
SELECT v0.c0 FROM v0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE ((CAST(v0.c0 AS REAL) IN ())) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT ((CAST(v0.c0 AS REAL) IN ())))) UNION SELECT DISTINCT * FROM v0 WHERE ((((CAST(v0.c0 AS REAL) IN ())) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT ALL rt0.c4, rt0.c2 FROM rt0, v0 GROUP BY rt0.c4, rt0.c2;
SELECT rt0.c4, rt0.c2 FROM rt0, v0 WHERE ((((~ (rt0.c3))) NOT BETWEEN (TOTAL_CHANGES()) AND (rt0.c1))) GROUP BY rt0.c4, rt0.c2 UNION SELECT rt0.c4, rt0.c2 FROM rt0, v0 WHERE ((NOT ((((~ (rt0.c3))) NOT BETWEEN (TOTAL_CHANGES()) AND (rt0.c1))))) GROUP BY rt0.c4, rt0.c2 UNION SELECT ALL rt0.c4, rt0.c2 FROM rt0, v0 WHERE ((((((~ (rt0.c3))) NOT BETWEEN (TOTAL_CHANGES()) AND (rt0.c1))) ISNULL)) GROUP BY rt0.c4, rt0.c2;
SELECT ALL rt0.c4, rt0.c2 FROM rt0, v0 GROUP BY rt0.c4, rt0.c2;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((GROUP_CONCAT(MIN(v0.c0))) ISNULL) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (((GROUP_CONCAT(MIN(v0.c0))) ISNULL))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((((GROUP_CONCAT(MIN(v0.c0))) ISNULL)) ISNULL);
SELECT ALL rt0.c0, rt0.c4 FROM rt0;
SELECT ALL rt0.c0, rt0.c4 FROM rt0 WHERE ('1675871049') UNION ALL SELECT ALL rt0.c0, rt0.c4 FROM rt0 WHERE ((NOT ('1675871049'))) UNION ALL SELECT rt0.c0, rt0.c4 FROM rt0 WHERE ((('1675871049') ISNULL));
SELECT ALL rt0.c0, rt0.c4 FROM rt0;
SELECT DISTINCT rt0.c3, rt0.c1, rt0.c2, rt0.c0, v0.c0 FROM rt0, v0;
SELECT DISTINCT rt0.c3, rt0.c1, rt0.c2, rt0.c0, v0.c0 FROM rt0, v0 WHERE (CAST(rt0.c0 AS TEXT)) UNION SELECT DISTINCT rt0.c3, rt0.c1, rt0.c2, rt0.c0, v0.c0 FROM rt0, v0 WHERE ((NOT (CAST(rt0.c0 AS TEXT)))) UNION SELECT DISTINCT rt0.c3, rt0.c1, rt0.c2, rt0.c0, v0.c0 FROM rt0, v0 WHERE (((CAST(rt0.c0 AS TEXT)) ISNULL));
SELECT DISTINCT rt0.c3, rt0.c1, rt0.c2, rt0.c0, v0.c0 FROM rt0, v0;
SELECT ALL rt0.c0 FROM v0 INNER JOIN rt0 ON (rt0.c4 COLLATE RTRIM IN ()) GROUP BY rt0.c0;
SELECT rt0.c0 FROM v0 INNER JOIN rt0 ON (rt0.c4 COLLATE RTRIM IN ()) WHERE ((+ (NULL))) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM v0 INNER JOIN rt0 ON (rt0.c4 COLLATE RTRIM IN ()) WHERE ((NOT ((+ (NULL))))) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM v0 INNER JOIN rt0 ON (rt0.c4 COLLATE RTRIM IN ()) WHERE ((((+ (NULL))) ISNULL)) GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM v0 INNER JOIN rt0 ON (rt0.c4 COLLATE RTRIM IN ()) GROUP BY rt0.c0;
SELECT ALL rt0.c1, rt0.c3, rt0.c4 FROM rt0 GROUP BY rt0.c1, rt0.c3, rt0.c4;
SELECT rt0.c1, rt0.c3, rt0.c4 FROM rt0 GROUP BY rt0.c1, rt0.c3, rt0.c4 HAVING TOTAL(SUM(GROUP_CONCAT(TOTAL(TOTAL(MAX(rt0.c3)))))) UNION ALL SELECT rt0.c1, rt0.c3, rt0.c4 FROM rt0 GROUP BY rt0.c1, rt0.c3, rt0.c4 HAVING (NOT (TOTAL(SUM(GROUP_CONCAT(TOTAL(TOTAL(MAX(rt0.c3)))))))) UNION ALL SELECT rt0.c1, rt0.c3, rt0.c4 FROM rt0 GROUP BY rt0.c1, rt0.c3, rt0.c4 HAVING ((TOTAL(SUM(GROUP_CONCAT(TOTAL(TOTAL(MAX(rt0.c3))))))) ISNULL);
SELECT v0.c0 FROM v0;
SELECT ALL v0.c0 FROM v0 NOT INDEXED WHERE ((((v0.c0)) NOT BETWEEN ((764172910)) AND ((CAST(v0.c0 AS INTEGER))))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE ((NOT ((((v0.c0)) NOT BETWEEN ((764172910)) AND ((CAST(v0.c0 AS INTEGER))))))) UNION ALL SELECT v0.c0 FROM v0 WHERE ((((((v0.c0)) NOT BETWEEN ((764172910)) AND ((CAST(v0.c0 AS INTEGER))))) ISNULL));
SELECT v0.c0 FROM v0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((x'd34391da') BETWEEN (CAST(rt0.c4 AS BLOB)) AND ((~ (rt0.c3))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((x'd34391da') BETWEEN (CAST(rt0.c4 AS BLOB)) AND ((~ (rt0.c3))))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((x'd34391da') BETWEEN (CAST(rt0.c4 AS BLOB)) AND ((~ (rt0.c3))))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c4, rt0.c2 FROM v0, rt0 GROUP BY rt0.c4, rt0.c2;
SELECT ALL rt0.c4, rt0.c2 FROM v0, rt0 WHERE (x'') GROUP BY rt0.c4, rt0.c2 UNION SELECT ALL rt0.c4, rt0.c2 FROM v0, rt0 WHERE ((NOT (x''))) GROUP BY rt0.c4, rt0.c2 UNION SELECT ALL rt0.c4, rt0.c2 FROM v0, rt0 WHERE (((x'') ISNULL)) GROUP BY rt0.c4, rt0.c2;
SELECT rt0.c4, rt0.c2 FROM v0, rt0 GROUP BY rt0.c4, rt0.c2;
SELECT ALL rt0.c2, rt0.c1, rt0.c3, rt0.c0, rt0.c4 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c3, rt0.c0, rt0.c4;
SELECT ALL rt0.c2, rt0.c1, rt0.c3, rt0.c0, rt0.c4 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c3, rt0.c0, rt0.c4 HAVING (((SUM(COUNT(GROUP_CONCAT(TOTAL(MAX(COUNT(SUM(rt0.c3))))))), ((COUNT(TOTAL(COUNT(rt0.c4))))>>(x'')), rt0.c3 COLLATE NOCASE))<=((GROUP_CONCAT(rt0.c0), ((COUNT(rt0.c1))>=(SUM(rt0.c2))), ((SUM(rt0.c4)) NOT NULL)))) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c3, rt0.c0, rt0.c4 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c3, rt0.c0, rt0.c4 HAVING (NOT ((((SUM(COUNT(GROUP_CONCAT(TOTAL(MAX(COUNT(SUM(rt0.c3))))))), ((COUNT(TOTAL(COUNT(rt0.c4))))>>(x'')), rt0.c3 COLLATE NOCASE))<=((GROUP_CONCAT(rt0.c0), ((COUNT(rt0.c1))>=(SUM(rt0.c2))), ((SUM(rt0.c4)) NOT NULL)))))) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c3, rt0.c0, rt0.c4 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c3, rt0.c0, rt0.c4 HAVING (((((SUM(COUNT(GROUP_CONCAT(TOTAL(MAX(COUNT(SUM(rt0.c3))))))), ((COUNT(TOTAL(COUNT(rt0.c4))))>>(x'')), rt0.c3 COLLATE NOCASE))<=((GROUP_CONCAT(rt0.c0), ((COUNT(rt0.c1))>=(SUM(rt0.c2))), ((SUM(rt0.c4)) NOT NULL))))) ISNULL);
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE (((rt0.c1 COLLATE BINARY) NOT BETWEEN (((rt0.c3) BETWEEN ('999870439') AND (rt0.c1))) AND ((('')GLOB(rt0.c0))))) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (((rt0.c1 COLLATE BINARY) NOT BETWEEN (((rt0.c3) BETWEEN ('999870439') AND (rt0.c1))) AND ((('')GLOB(rt0.c0))))))) UNION ALL SELECT * FROM rt0 WHERE (((((rt0.c1 COLLATE BINARY) NOT BETWEEN (((rt0.c3) BETWEEN ('999870439') AND (rt0.c1))) AND ((('')GLOB(rt0.c0))))) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (DATETIME((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))), ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)), ((v0.c0)>>('qD㞱Z3*<~o')))) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (DATETIME((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))), ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)), ((v0.c0)>>('qD㞱Z3*<~o')))))) UNION SELECT DISTINCT * FROM v0 WHERE (((DATETIME((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))), ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)), ((v0.c0)>>('qD㞱Z3*<~o')))) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (((((v0.c0)AND(v0.c0))) NOT BETWEEN (CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN 0.9706220308445095 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END) AND (v0.c0))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (((((v0.c0)AND(v0.c0))) NOT BETWEEN (CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN 0.9706220308445095 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END) AND (v0.c0))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((((((v0.c0)AND(v0.c0))) NOT BETWEEN (CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN 0.9706220308445095 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END) AND (v0.c0))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT rt0.c4, rt0.c1 FROM rt0 GROUP BY rt0.c4, rt0.c1;
SELECT ALL rt0.c4, rt0.c1 FROM rt0 GROUP BY rt0.c4, rt0.c1 HAVING AVG(((((rt0.c0)OR(rt0.c0)))OR(rt0.c4))) UNION ALL SELECT rt0.c4, rt0.c1 FROM rt0 GROUP BY rt0.c4, rt0.c1 HAVING (NOT (AVG(((((rt0.c0)OR(rt0.c0)))OR(rt0.c4))))) UNION ALL SELECT rt0.c4, rt0.c1 FROM rt0 GROUP BY rt0.c4, rt0.c1 HAVING ((AVG(((((rt0.c0)OR(rt0.c0)))OR(rt0.c4)))) ISNULL);
SELECT rt0.c4, rt0.c1 FROM rt0 GROUP BY rt0.c4, rt0.c1;
SELECT ALL rt0.c4, rt0.c1 FROM rt0 GROUP BY rt0.c4, rt0.c1 HAVING AVG(((((rt0.c0)OR(rt0.c0)))OR(rt0.c4))) UNION ALL SELECT rt0.c4, rt0.c1 FROM rt0 GROUP BY rt0.c4, rt0.c1 HAVING (NOT (AVG(((((rt0.c0)OR(rt0.c0)))OR(rt0.c4))))) UNION ALL SELECT rt0.c4, rt0.c1 FROM rt0 GROUP BY rt0.c4, rt0.c1 HAVING ((AVG(((((rt0.c0)OR(rt0.c0)))OR(rt0.c4)))) ISNULL);
SELECT rt0.c4, rt0.c1 FROM rt0 GROUP BY rt0.c4, rt0.c1;
SELECT ALL v0.c0, rt0.c4, rt0.c1, rt0.c3, rt0.c0 FROM rt0 NATURAL JOIN v0;
SELECT ALL v0.c0, rt0.c4, rt0.c1, rt0.c3, rt0.c0 FROM rt0 NATURAL JOIN v0 WHERE (((rt0.c3)LIKE(v0.c0)) COLLATE RTRIM) UNION ALL SELECT ALL v0.c0, rt0.c4, rt0.c1, rt0.c3, rt0.c0 FROM rt0 NATURAL JOIN v0 WHERE ((NOT (((rt0.c3)LIKE(v0.c0)) COLLATE RTRIM))) UNION ALL SELECT ALL v0.c0, rt0.c4, rt0.c1, rt0.c3, rt0.c0 FROM rt0 NATURAL JOIN v0 WHERE (((((rt0.c3)LIKE(v0.c0)) COLLATE RTRIM) ISNULL));
SELECT ALL v0.c0, rt0.c4, rt0.c1, rt0.c3, rt0.c0 FROM rt0 NATURAL JOIN v0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (((((v0.c0 IN ())))!=(((- (v0.c0)))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (((((v0.c0 IN ())))<>(((- (v0.c0)))))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((((((v0.c0 IN ())))<>(((- (v0.c0)))))) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT ALL rt0.c3, rt0.c2, rt0.c0, v0.c0 FROM rt0, v0 GROUP BY rt0.c3, rt0.c2, rt0.c0, v0.c0;
SELECT ALL rt0.c3, rt0.c2, rt0.c0, v0.c0 FROM rt0, v0 WHERE (TYPEOF(DISTINCT ((rt0.c2)IS(rt0.c4)))) GROUP BY rt0.c3, rt0.c2, rt0.c0, v0.c0 UNION SELECT ALL rt0.c3, rt0.c2, rt0.c0, v0.c0 FROM rt0, v0 WHERE ((NOT (TYPEOF(DISTINCT ((rt0.c2)IS(rt0.c4)))))) GROUP BY rt0.c3, rt0.c2, rt0.c0, v0.c0 UNION SELECT ALL rt0.c3, rt0.c2, rt0.c0, v0.c0 FROM rt0, v0 WHERE (((TYPEOF(DISTINCT ((rt0.c2)IS(rt0.c4)))) ISNULL)) GROUP BY rt0.c3, rt0.c2, rt0.c0, v0.c0;
SELECT ALL rt0.c3, rt0.c2, rt0.c0, v0.c0 FROM rt0, v0 GROUP BY rt0.c3, rt0.c2, rt0.c0, v0.c0;
SELECT rt0.c4 FROM v0, rt0 GROUP BY rt0.c4;
SELECT ALL rt0.c4 FROM v0, rt0 GROUP BY rt0.c4 HAVING ((((TRIM(rt0.c2))OR(rt0.c4)))AND(SUM(rt0.c1))) UNION ALL SELECT rt0.c4 FROM v0, rt0 GROUP BY rt0.c4 HAVING (NOT (((((TRIM(rt0.c2))OR(rt0.c4)))AND(SUM(rt0.c1))))) UNION ALL SELECT rt0.c4 FROM v0, rt0 GROUP BY rt0.c4 HAVING ((((((TRIM(rt0.c2))OR(rt0.c4)))AND(SUM(rt0.c1)))) ISNULL);
SELECT rt0.c4 FROM v0, rt0 GROUP BY rt0.c4;
SELECT ALL rt0.c4 FROM v0, rt0 GROUP BY rt0.c4 HAVING ((((TRIM(rt0.c2))OR(rt0.c4)))AND(SUM(rt0.c1))) UNION ALL SELECT rt0.c4 FROM v0, rt0 GROUP BY rt0.c4 HAVING (NOT (((((TRIM(rt0.c2))OR(rt0.c4)))AND(SUM(rt0.c1))))) UNION ALL SELECT rt0.c4 FROM v0, rt0 GROUP BY rt0.c4 HAVING ((((((TRIM(rt0.c2))OR(rt0.c4)))AND(SUM(rt0.c1)))) ISNULL);
SELECT rt0.c4 FROM v0, rt0 GROUP BY rt0.c4;
SELECT ALL rt0.c0, rt0.c3, rt0.c2, rt0.c1, v0.c0, rt0.c4 FROM rt0 CROSS JOIN v0 ON (NOT (TRIM(v0.c0)));
SELECT ALL rt0.c0, rt0.c3, rt0.c2, rt0.c1, v0.c0, rt0.c4 FROM rt0 CROSS JOIN v0 ON (NOT (TRIM(v0.c0))) WHERE (('1503599712' IN ())) UNION ALL SELECT rt0.c0, rt0.c3, rt0.c2, rt0.c1, v0.c0, rt0.c4 FROM rt0 CROSS JOIN v0 ON (NOT (TRIM(v0.c0))) WHERE ((NOT (('1503599712' IN ())))) UNION ALL SELECT rt0.c0, rt0.c3, rt0.c2, rt0.c1, v0.c0, rt0.c4 FROM rt0 CROSS JOIN v0 ON (NOT (TRIM(v0.c0))) WHERE (((('1503599712' IN ())) ISNULL));
SELECT ALL rt0.c0, rt0.c3, rt0.c2, rt0.c1, v0.c0, rt0.c4 FROM rt0 CROSS JOIN v0 ON (NOT (TRIM(v0.c0)));
SELECT DISTINCT rt0.c4, rt0.c3, rt0.c2 FROM rt0, v0;
SELECT DISTINCT rt0.c4, rt0.c3, rt0.c2 FROM rt0, v0 WHERE (((((rt0.c1) BETWEEN (v0.c0) AND (v0.c0))) NOT BETWEEN (((rt0.c0) NOT BETWEEN (NULL) AND (rt0.c0))) AND ((((('962440873')AND(rt0.c1)))AND(rt0.c2))))) UNION SELECT DISTINCT rt0.c4, rt0.c3, rt0.c2 FROM rt0, v0 WHERE ((NOT (((((rt0.c1) BETWEEN (v0.c0) AND (v0.c0))) NOT BETWEEN (((rt0.c0) NOT BETWEEN (NULL) AND (rt0.c0))) AND ((((('962440873')AND(rt0.c1)))AND(rt0.c2))))))) UNION SELECT DISTINCT rt0.c4, rt0.c3, rt0.c2 FROM rt0, v0 WHERE (((((((rt0.c1) BETWEEN (v0.c0) AND (v0.c0))) NOT BETWEEN (((rt0.c0) NOT BETWEEN (NULL) AND (rt0.c0))) AND ((((('962440873')AND(rt0.c1)))AND(rt0.c2))))) ISNULL));
SELECT DISTINCT rt0.c4, rt0.c3, rt0.c2 FROM rt0, v0;
SELECT ALL rt0.c3, rt0.c1, rt0.c4, v0.c0, rt0.c0 FROM v0, rt0 GROUP BY rt0.c3, rt0.c1, rt0.c4, v0.c0, rt0.c0;
SELECT rt0.c3, rt0.c1, rt0.c4, v0.c0, rt0.c0 FROM v0, rt0 WHERE (NULL) GROUP BY rt0.c3, rt0.c1, rt0.c4, v0.c0, rt0.c0 UNION SELECT ALL rt0.c3, rt0.c1, rt0.c4, v0.c0, rt0.c0 FROM v0, rt0 WHERE ((NOT (NULL))) GROUP BY rt0.c3, rt0.c1, rt0.c4, v0.c0, rt0.c0 UNION SELECT rt0.c3, rt0.c1, rt0.c4, v0.c0, rt0.c0 FROM v0, rt0 WHERE (((NULL) ISNULL)) GROUP BY rt0.c3, rt0.c1, rt0.c4, v0.c0, rt0.c0;
SELECT ALL rt0.c3, rt0.c1, rt0.c4, v0.c0, rt0.c0 FROM v0, rt0 GROUP BY rt0.c3, rt0.c1, rt0.c4, v0.c0, rt0.c0;
SELECT rt0.c2, rt0.c4, v0.c0, rt0.c3, rt0.c1, rt0.c0 FROM rt0 FULL OUTER JOIN v0 ON (NOT (CAST(rt0.c3 AS INTEGER))) GROUP BY rt0.c2, rt0.c4, v0.c0, rt0.c3, rt0.c1, rt0.c0;
SELECT ALL rt0.c2, rt0.c4, v0.c0, rt0.c3, rt0.c1, rt0.c0 FROM rt0 FULL OUTER JOIN v0 ON (NOT (CAST(rt0.c3 AS INTEGER))) GROUP BY rt0.c2, rt0.c4, v0.c0, rt0.c3, rt0.c1, rt0.c0 HAVING TOTAL((~ (rt0.c1))) UNION ALL SELECT ALL rt0.c2, rt0.c4, v0.c0, rt0.c3, rt0.c1, rt0.c0 FROM rt0 FULL OUTER JOIN v0 ON (NOT (CAST(rt0.c3 AS INTEGER))) GROUP BY rt0.c2, rt0.c4, v0.c0, rt0.c3, rt0.c1, rt0.c0 HAVING (NOT (TOTAL((~ (rt0.c1))))) UNION ALL SELECT ALL rt0.c2, rt0.c4, v0.c0, rt0.c3, rt0.c1, rt0.c0 FROM rt0 FULL OUTER JOIN v0 ON (NOT (CAST(rt0.c3 AS INTEGER))) GROUP BY rt0.c2, rt0.c4, v0.c0, rt0.c3, rt0.c1, rt0.c0 HAVING ((TOTAL((~ (rt0.c1)))) ISNULL);
SELECT rt0.c2, rt0.c4, v0.c0, rt0.c3, rt0.c1, rt0.c0 FROM rt0 FULL OUTER JOIN v0 ON (NOT (CAST(rt0.c3 AS INTEGER))) GROUP BY rt0.c2, rt0.c4, v0.c0, rt0.c3, rt0.c1, rt0.c0;
SELECT ALL rt0.c2, rt0.c4, v0.c0, rt0.c3, rt0.c1, rt0.c0 FROM rt0 FULL OUTER JOIN v0 ON (NOT (CAST(rt0.c3 AS INTEGER))) GROUP BY rt0.c2, rt0.c4, v0.c0, rt0.c3, rt0.c1, rt0.c0 HAVING TOTAL((~ (rt0.c1))) UNION ALL SELECT ALL rt0.c2, rt0.c4, v0.c0, rt0.c3, rt0.c1, rt0.c0 FROM rt0 FULL OUTER JOIN v0 ON (NOT (CAST(rt0.c3 AS INTEGER))) GROUP BY rt0.c2, rt0.c4, v0.c0, rt0.c3, rt0.c1, rt0.c0 HAVING (NOT (TOTAL((~ (rt0.c1))))) UNION ALL SELECT ALL rt0.c2, rt0.c4, v0.c0, rt0.c3, rt0.c1, rt0.c0 FROM rt0 FULL OUTER JOIN v0 ON (NOT (CAST(rt0.c3 AS INTEGER))) GROUP BY rt0.c2, rt0.c4, v0.c0, rt0.c3, rt0.c1, rt0.c0 HAVING ((TOTAL((~ (rt0.c1)))) ISNULL);
SELECT rt0.c2, rt0.c4, v0.c0, rt0.c3, rt0.c1, rt0.c0 FROM rt0 FULL OUTER JOIN v0 ON (NOT (CAST(rt0.c3 AS INTEGER))) GROUP BY rt0.c2, rt0.c4, v0.c0, rt0.c3, rt0.c1, rt0.c0;
SELECT ALL v0.c0, rt0.c0, rt0.c4, rt0.c1, rt0.c3 FROM rt0, v0;
SELECT v0.c0, rt0.c0, rt0.c4, rt0.c1, rt0.c3 FROM rt0, v0 WHERE (((((rt0.c0)-(v0.c0)))+(CAST(rt0.c0 AS NUMERIC)))) UNION ALL SELECT ALL v0.c0, rt0.c0, rt0.c4, rt0.c1, rt0.c3 FROM rt0, v0 WHERE ((NOT (((((rt0.c0)-(v0.c0)))+(CAST(rt0.c0 AS NUMERIC)))))) UNION ALL SELECT v0.c0, rt0.c0, rt0.c4, rt0.c1, rt0.c3 FROM rt0, v0 WHERE (((((((rt0.c0)-(v0.c0)))+(CAST(rt0.c0 AS NUMERIC)))) ISNULL));
SELECT ALL v0.c0, rt0.c0, rt0.c4, rt0.c1, rt0.c3 FROM rt0, v0;
SELECT DISTINCT rt0.c0 FROM rt0, v0;
SELECT DISTINCT rt0.c0 FROM rt0, v0 WHERE (((((rt0.c3)>>(rt0.c4)))IS NOT(((((((((rt0.c2)AND(rt0.c3)))AND(rt0.c0)))AND(rt0.c0)))OR(1820408165))))) UNION SELECT DISTINCT rt0.c0 FROM rt0, v0 WHERE ((NOT (((((rt0.c3)>>(rt0.c4)))IS NOT(((((((((rt0.c2)AND(rt0.c3)))AND(rt0.c0)))AND(rt0.c0)))OR(1820408165))))))) UNION SELECT DISTINCT rt0.c0 FROM rt0, v0 WHERE (((((((rt0.c3)>>(rt0.c4)))IS NOT(((((((((rt0.c2)AND(rt0.c3)))AND(rt0.c0)))AND(rt0.c0)))OR(1820408165))))) ISNULL));
SELECT DISTINCT rt0.c0 FROM rt0, v0;
SELECT rt0.c4, rt0.c3, rt0.c1 FROM rt0 GROUP BY rt0.c4, rt0.c3, rt0.c1;
SELECT rt0.c4, rt0.c3, rt0.c1 FROM rt0 WHERE (LIKELIHOOD(((rt0.c1)IS NOT(rt0.c2)), 0.8512657479565657)) GROUP BY rt0.c4, rt0.c3, rt0.c1 UNION SELECT ALL rt0.c4, rt0.c3, rt0.c1 FROM rt0 WHERE ((NOT (LIKELIHOOD(((rt0.c1)IS NOT(rt0.c2)), 0.8512657479565657)))) GROUP BY rt0.c4, rt0.c3, rt0.c1 UNION SELECT rt0.c4, rt0.c3, rt0.c1 FROM rt0 WHERE (((LIKELIHOOD(((rt0.c1)IS NOT(rt0.c2)), 0.8512657479565657)) ISNULL)) GROUP BY rt0.c4, rt0.c3, rt0.c1;
SELECT rt0.c4, rt0.c3, rt0.c1 FROM rt0 GROUP BY rt0.c4, rt0.c3, rt0.c1;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING MIN(((SUM(COUNT(v0.c0))) IS FALSE)) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (MIN(((SUM(COUNT(v0.c0))) IS FALSE)))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((MIN(((SUM(COUNT(v0.c0))) IS FALSE))) ISNULL);
SELECT * FROM v0;
SELECT * FROM v0 WHERE (LIKELY(IFNULL(v0.c0, NULL))) UNION ALL SELECT ALL * FROM v0 WHERE ((NOT (LIKELY(IFNULL(v0.c0, NULL))))) UNION ALL SELECT * FROM v0 WHERE (((LIKELY(IFNULL(v0.c0, NULL))) ISNULL));
SELECT * FROM v0;
SELECT DISTINCT * FROM v0, rt0;
SELECT DISTINCT * FROM v0, rt0 WHERE (((((CAST(v0.c0 AS TEXT))OR(((rt0.c4) BETWEEN (rt0.c0) AND (v0.c0)))))OR(((rt0.c2) IS FALSE)))) UNION SELECT DISTINCT * FROM v0, rt0 WHERE ((NOT (((((CAST(v0.c0 AS TEXT))OR(((rt0.c4) BETWEEN (rt0.c0) AND (v0.c0)))))OR(((rt0.c2) IS FALSE)))))) UNION SELECT DISTINCT * FROM v0, rt0 WHERE (((((((CAST(v0.c0 AS TEXT))OR(((rt0.c4) BETWEEN (rt0.c0) AND (v0.c0)))))OR(((rt0.c2) IS FALSE)))) ISNULL));
SELECT DISTINCT * FROM v0, rt0;
SELECT rt0.c2, rt0.c1, rt0.c3, v0.c0, rt0.c0, rt0.c4 FROM rt0 RIGHT OUTER JOIN v0 ON (((((((rt0.c2)) BETWEEN ((rt0.c4)) AND ((rt0.c3))))OR(rt0.c3 COLLATE BINARY)))OR('-1348107685' COLLATE RTRIM)) GROUP BY rt0.c2, rt0.c1, rt0.c3, v0.c0, rt0.c0, rt0.c4;
SELECT rt0.c2, rt0.c1, rt0.c3, v0.c0, rt0.c0, rt0.c4 FROM rt0 RIGHT OUTER JOIN v0 ON (((((((rt0.c2)) BETWEEN ((rt0.c4)) AND ((rt0.c3))))OR(rt0.c3 COLLATE BINARY)))OR('-1348107685' COLLATE RTRIM)) WHERE (((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((NULL))) IN ())) GROUP BY rt0.c2, rt0.c1, rt0.c3, v0.c0, rt0.c0, rt0.c4 UNION SELECT ALL rt0.c2, rt0.c1, rt0.c3, v0.c0, rt0.c0, rt0.c4 FROM rt0 RIGHT OUTER JOIN v0 ON (((((((rt0.c2)) BETWEEN ((rt0.c4)) AND ((rt0.c3))))OR(rt0.c3 COLLATE BINARY)))OR('-1348107685' COLLATE RTRIM)) WHERE ((NOT (((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((NULL))) IN ())))) GROUP BY rt0.c2, rt0.c1, rt0.c3, v0.c0, rt0.c0, rt0.c4 UNION SELECT rt0.c2, rt0.c1, rt0.c3, v0.c0, rt0.c0, rt0.c4 FROM rt0 RIGHT OUTER JOIN v0 ON (((((((rt0.c2)) BETWEEN ((rt0.c4)) AND ((rt0.c3))))OR(rt0.c3 COLLATE BINARY)))OR('-1348107685' COLLATE RTRIM)) WHERE (((((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((NULL))) IN ())) ISNULL)) GROUP BY rt0.c2, rt0.c1, rt0.c3, v0.c0, rt0.c0, rt0.c4;
SELECT rt0.c2, rt0.c1, rt0.c3, v0.c0, rt0.c0, rt0.c4 FROM rt0 RIGHT OUTER JOIN v0 ON (((((((rt0.c2)) BETWEEN ((rt0.c4)) AND ((rt0.c3))))OR(rt0.c3 COLLATE BINARY)))OR('-1348107685' COLLATE RTRIM)) GROUP BY rt0.c2, rt0.c1, rt0.c3, v0.c0, rt0.c0, rt0.c4;
SELECT ALL rt0.c2, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c3;
SELECT rt0.c2, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c3 HAVING MIN(COUNT(COUNT(rt0.c2))) COLLATE RTRIM UNION ALL SELECT ALL rt0.c2, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c3 HAVING (NOT (MIN(COUNT(COUNT(rt0.c2))) COLLATE RTRIM)) UNION ALL SELECT ALL rt0.c2, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c3 HAVING ((MIN(COUNT(COUNT(rt0.c2))) COLLATE RTRIM) ISNULL);
SELECT ALL * FROM v0 LEFT OUTER JOIN rt0 ON (((rt0.c0 IN ()))>=(CAST(0.8533632648670871 AS REAL)));
SELECT * FROM v0 LEFT OUTER JOIN rt0 ON (((rt0.c0 IN ()))>=(CAST(0.8533632648670871 AS REAL))) WHERE (((x'c285') NOTNULL)) UNION ALL SELECT ALL * FROM v0 LEFT OUTER JOIN rt0 ON (((rt0.c0 IN ()))>=(CAST(0.8533632648670871 AS REAL))) WHERE ((NOT (((x'c285') NOTNULL)))) UNION ALL SELECT ALL * FROM v0 LEFT OUTER JOIN rt0 ON (((rt0.c0 IN ()))>=(CAST(0.8533632648670871 AS REAL))) WHERE (((((x'c285') NOTNULL)) ISNULL));
SELECT ALL * FROM v0 LEFT OUTER JOIN rt0 ON (((rt0.c0 IN ()))>=(CAST(0.8533632648670871 AS REAL)));
SELECT DISTINCT * FROM v0, rt0;
SELECT DISTINCT * FROM v0, rt0 WHERE (((((((((((((((rt0.c3)IS NOT(rt0.c4)))OR((rt0.c4 IN ()))))AND(((rt0.c1) ISNULL))))AND(((0.9262656742875416) BETWEEN (rt0.c3) AND (rt0.c4)))))AND(((((((((((((rt0.c0)AND(rt0.c0)))OR(rt0.c1)))OR(rt0.c0)))OR(rt0.c4)))AND(0.7654358212408243)))OR(rt0.c4)))))AND(((rt0.c2)IS NOT(rt0.c3)))))OR('\''.v2妅s+*'))) UNION SELECT DISTINCT * FROM v0, rt0 WHERE ((NOT (((((((((((((((rt0.c3)IS NOT(rt0.c4)))OR((rt0.c4 IN ()))))AND(((rt0.c1) ISNULL))))AND(((0.9262656742875416) BETWEEN (rt0.c3) AND (rt0.c4)))))AND(((((((((((((rt0.c0)AND(rt0.c0)))OR(rt0.c1)))OR(rt0.c0)))OR(rt0.c4)))AND(0.7654358212408243)))OR(rt0.c4)))))AND(((rt0.c2)IS NOT(rt0.c3)))))OR('\''.v2妅s+*'))))) UNION SELECT DISTINCT * FROM v0, rt0 WHERE (((((((((((((((((rt0.c3)IS NOT(rt0.c4)))OR((rt0.c4 IN ()))))AND(((rt0.c1) ISNULL))))AND(((0.9262656742875416) BETWEEN (rt0.c3) AND (rt0.c4)))))AND(((((((((((((rt0.c0)AND(rt0.c0)))OR(rt0.c1)))OR(rt0.c0)))OR(rt0.c4)))AND(0.7654358212408243)))OR(rt0.c4)))))AND(((rt0.c2)IS NOT(rt0.c3)))))OR('\''.v2妅s+*'))) ISNULL));
SELECT DISTINCT * FROM v0, rt0;
SELECT ALL rt0.c3, rt0.c1 FROM rt0, v0 GROUP BY rt0.c3, rt0.c1;
SELECT ALL rt0.c3, rt0.c1 FROM rt0, v0 WHERE (UPPER(CHANGES())) GROUP BY rt0.c3, rt0.c1 UNION SELECT ALL rt0.c3, rt0.c1 FROM rt0, v0 WHERE ((NOT (UPPER(CHANGES())))) GROUP BY rt0.c3, rt0.c1 UNION SELECT rt0.c3, rt0.c1 FROM rt0, v0 WHERE (((UPPER(CHANGES())) ISNULL)) GROUP BY rt0.c3, rt0.c1;
SELECT ALL rt0.c3, rt0.c1 FROM rt0, v0 GROUP BY rt0.c3, rt0.c1;
SELECT ALL rt0.c1, rt0.c0, rt0.c3, rt0.c4, v0.c0, rt0.c2 FROM rt0, v0 GROUP BY rt0.c1, rt0.c0, rt0.c3, rt0.c4, v0.c0, rt0.c2;
SELECT rt0.c1, rt0.c0, rt0.c3, rt0.c4, v0.c0, rt0.c2 FROM rt0, v0 GROUP BY rt0.c1, rt0.c0, rt0.c3, rt0.c4, v0.c0, rt0.c2 HAVING CAST(COUNT(v0.c0) AS BLOB) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c3, rt0.c4, v0.c0, rt0.c2 FROM rt0, v0 GROUP BY rt0.c1, rt0.c0, rt0.c3, rt0.c4, v0.c0, rt0.c2 HAVING (NOT (CAST(COUNT(v0.c0) AS BLOB))) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c3, rt0.c4, v0.c0, rt0.c2 FROM rt0, v0 GROUP BY rt0.c1, rt0.c0, rt0.c3, rt0.c4, v0.c0, rt0.c2 HAVING ((CAST(COUNT(v0.c0) AS BLOB)) ISNULL);
SELECT ALL rt0.c1, rt0.c0, rt0.c3, rt0.c4, v0.c0, rt0.c2 FROM rt0, v0 GROUP BY rt0.c1, rt0.c0, rt0.c3, rt0.c4, v0.c0, rt0.c2;
SELECT rt0.c1, rt0.c0, rt0.c3, rt0.c4, v0.c0, rt0.c2 FROM rt0, v0 GROUP BY rt0.c1, rt0.c0, rt0.c3, rt0.c4, v0.c0, rt0.c2 HAVING CAST(COUNT(v0.c0) AS BLOB) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c3, rt0.c4, v0.c0, rt0.c2 FROM rt0, v0 GROUP BY rt0.c1, rt0.c0, rt0.c3, rt0.c4, v0.c0, rt0.c2 HAVING (NOT (CAST(COUNT(v0.c0) AS BLOB))) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c3, rt0.c4, v0.c0, rt0.c2 FROM rt0, v0 GROUP BY rt0.c1, rt0.c0, rt0.c3, rt0.c4, v0.c0, rt0.c2 HAVING ((CAST(COUNT(v0.c0) AS BLOB)) ISNULL);
SELECT ALL rt0.c1, rt0.c0, rt0.c3, rt0.c4, v0.c0, rt0.c2 FROM rt0, v0 GROUP BY rt0.c1, rt0.c0, rt0.c3, rt0.c4, v0.c0, rt0.c2;
SELECT ALL rt0.c1 FROM v0 RIGHT OUTER JOIN rt0 ON rt0.c2 COLLATE RTRIM;
SELECT rt0.c1 FROM v0 RIGHT OUTER JOIN rt0 ON rt0.c2 COLLATE RTRIM WHERE (CASE WHEN (+ (rt0.c1)) THEN (+ (v0.c0)) WHEN CASE v0.c0  WHEN rt0.c2 THEN rt0.c0 END THEN v0.c0 WHEN (rt0.c4 IN (rt0.c4)) THEN ((rt0.c0) IS TRUE) END) UNION ALL SELECT ALL rt0.c1 FROM v0 RIGHT OUTER JOIN rt0 ON rt0.c2 COLLATE RTRIM WHERE ((NOT (CASE WHEN (+ (rt0.c1)) THEN (+ (v0.c0)) WHEN CASE v0.c0  WHEN rt0.c2 THEN rt0.c0 END THEN v0.c0 WHEN (rt0.c4 IN (rt0.c4)) THEN ((rt0.c0) IS TRUE) END))) UNION ALL SELECT ALL rt0.c1 FROM v0 RIGHT OUTER JOIN rt0 ON rt0.c2 COLLATE RTRIM WHERE (((CASE WHEN (+ (rt0.c1)) THEN (+ (v0.c0)) WHEN CASE v0.c0  WHEN rt0.c2 THEN rt0.c0 END THEN v0.c0 WHEN (rt0.c4 IN (rt0.c4)) THEN ((rt0.c0) IS TRUE) END) ISNULL));
SELECT ALL rt0.c1 FROM v0 RIGHT OUTER JOIN rt0 ON rt0.c2 COLLATE RTRIM;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (rt0.c1) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (rt0.c1))) UNION SELECT DISTINCT * FROM rt0 WHERE (((rt0.c1) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (v0.c0) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (v0.c0))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE (((v0.c0) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT rt0.c1, rt0.c2, rt0.c4 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c4;
SELECT ALL rt0.c1, rt0.c2, rt0.c4 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c4 HAVING (((rt0.c0, MAX(COUNT(*)), SUM(MAX(rt0.c4)))) BETWEEN (('231866194', AVG(AVG(SUM(MAX(MIN(x'658cb8e0'))))), AVG(TOTAL(GROUP_CONCAT(rt0.c2))))) AND ((GROUP_CONCAT(rt0.c1), GROUP_CONCAT(1.503599712E9), GROUP_CONCAT(rt0.c2)))) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c4 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c4 HAVING (NOT ((((rt0.c0, MAX(COUNT(*)), SUM(MAX(rt0.c4)))) BETWEEN (('231866194', AVG(AVG(SUM(MAX(MIN(x'658cb8e0'))))), AVG(TOTAL(GROUP_CONCAT(rt0.c2))))) AND ((GROUP_CONCAT(rt0.c1), GROUP_CONCAT(1.503599712E9), GROUP_CONCAT(rt0.c2)))))) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c4 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c4 HAVING (((((rt0.c0, MAX(COUNT(*)), SUM(MAX(rt0.c4)))) BETWEEN (('231866194', AVG(AVG(SUM(MAX(MIN(x'658cb8e0'))))), AVG(TOTAL(GROUP_CONCAT(rt0.c2))))) AND ((GROUP_CONCAT(rt0.c1), GROUP_CONCAT(1.503599712E9), GROUP_CONCAT(rt0.c2))))) ISNULL);
SELECT rt0.c3, rt0.c0, rt0.c4, rt0.c1 FROM rt0, v0;
SELECT ALL rt0.c3, rt0.c0, rt0.c4, rt0.c1 FROM rt0, v0 WHERE (((((v0.c0)OR(v0.c0)))AND(((rt0.c0)<(rt0.c4))))) UNION ALL SELECT ALL rt0.c3, rt0.c0, rt0.c4, rt0.c1 FROM rt0, v0 WHERE ((NOT (((((v0.c0)OR(v0.c0)))AND(((rt0.c0)<(rt0.c4))))))) UNION ALL SELECT rt0.c3, rt0.c0, rt0.c4, rt0.c1 FROM rt0, v0 WHERE (((((((v0.c0)OR(v0.c0)))AND(((rt0.c0)<(rt0.c4))))) ISNULL));
SELECT rt0.c3, rt0.c0, rt0.c4, rt0.c1 FROM rt0, v0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((CASE rt0.c2  WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c4 END) NOT BETWEEN (((((rt0.c4)OR(rt0.c4)))AND(rt0.c3))) AND (((rt0.c4)%(rt0.c3))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((CASE rt0.c2  WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c4 END) NOT BETWEEN (((((rt0.c4)OR(rt0.c4)))AND(rt0.c3))) AND (((rt0.c4)%(rt0.c3))))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((CASE rt0.c2  WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c4 END) NOT BETWEEN (((((rt0.c4)OR(rt0.c4)))AND(rt0.c3))) AND (((rt0.c4)%(rt0.c3))))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c3, rt0.c4, rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c3, rt0.c4, rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c3, rt0.c4, rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((~ (NULL))) GROUP BY rt0.c3, rt0.c4, rt0.c1, rt0.c0, rt0.c2 UNION SELECT ALL rt0.c3, rt0.c4, rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT ((~ (NULL))))) GROUP BY rt0.c3, rt0.c4, rt0.c1, rt0.c0, rt0.c2 UNION SELECT ALL rt0.c3, rt0.c4, rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((((~ (NULL))) ISNULL)) GROUP BY rt0.c3, rt0.c4, rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c3, rt0.c4, rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c3, rt0.c4, rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c4, rt0.c3, rt0.c2, rt0.c0, v0.c0 FROM rt0, v0 GROUP BY rt0.c4, rt0.c3, rt0.c2, rt0.c0, v0.c0;
SELECT ALL rt0.c4, rt0.c3, rt0.c2, rt0.c0, v0.c0 FROM rt0, v0 GROUP BY rt0.c4, rt0.c3, rt0.c2, rt0.c0, v0.c0 HAVING ((AVG(GROUP_CONCAT(MIN(rt0.c1)))) ISNULL) UNION ALL SELECT rt0.c4, rt0.c3, rt0.c2, rt0.c0, v0.c0 FROM rt0, v0 GROUP BY rt0.c4, rt0.c3, rt0.c2, rt0.c0, v0.c0 HAVING (NOT (((AVG(GROUP_CONCAT(MIN(rt0.c1)))) ISNULL))) UNION ALL SELECT ALL rt0.c4, rt0.c3, rt0.c2, rt0.c0, v0.c0 FROM rt0, v0 GROUP BY rt0.c4, rt0.c3, rt0.c2, rt0.c0, v0.c0 HAVING ((((AVG(GROUP_CONCAT(MIN(rt0.c1)))) ISNULL)) ISNULL);
SELECT ALL v0.c0, rt0.c0 FROM v0 RIGHT OUTER JOIN rt0 ON (- (GLOB(v0.c0, rt0.c2)));
SELECT ALL v0.c0, rt0.c0 FROM v0 RIGHT OUTER JOIN rt0 ON (- (GLOB(v0.c0, rt0.c2))) WHERE ((((rt0.c1 IN ()))GLOB((NOT (rt0.c3))))) UNION ALL SELECT ALL v0.c0, rt0.c0 FROM v0 RIGHT OUTER JOIN rt0 ON (- (GLOB(v0.c0, rt0.c2))) WHERE ((NOT ((((rt0.c1 IN ()))GLOB((NOT (rt0.c3))))))) UNION ALL SELECT v0.c0, rt0.c0 FROM v0 RIGHT OUTER JOIN rt0 ON (- (GLOB(v0.c0, rt0.c2))) WHERE ((((((rt0.c1 IN ()))GLOB((NOT (rt0.c3))))) ISNULL));
SELECT ALL v0.c0, rt0.c0 FROM v0 RIGHT OUTER JOIN rt0 ON (- (GLOB(v0.c0, rt0.c2)));
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (CAST(((v0.c0)|(v0.c0)) AS NUMERIC)) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (CAST(((v0.c0)|(v0.c0)) AS NUMERIC)))) UNION SELECT DISTINCT * FROM v0 WHERE (((CAST(((v0.c0)|(v0.c0)) AS NUMERIC)) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT ALL rt0.c2, rt0.c4, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c4, rt0.c1, rt0.c0;
SELECT rt0.c2, rt0.c4, rt0.c1, rt0.c0 FROM rt0 WHERE ((rt0.c1 IN ())) GROUP BY rt0.c2, rt0.c4, rt0.c1, rt0.c0 UNION SELECT rt0.c2, rt0.c4, rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT ((rt0.c1 IN ())))) GROUP BY rt0.c2, rt0.c4, rt0.c1, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c4, rt0.c1, rt0.c0 FROM rt0 WHERE ((((rt0.c1 IN ())) ISNULL)) GROUP BY rt0.c2, rt0.c4, rt0.c1, rt0.c0;
SELECT ALL rt0.c2, rt0.c4, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c4, rt0.c1, rt0.c0;
SELECT rt0.c2, rt0.c4, rt0.c1 FROM v0 NOT INDEXED, rt0 GROUP BY rt0.c2, rt0.c4, rt0.c1;
SELECT rt0.c2, rt0.c4, rt0.c1 FROM v0, rt0 GROUP BY rt0.c2, rt0.c4, rt0.c1 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c2, rt0.c4, rt0.c1 FROM v0, rt0 GROUP BY rt0.c2, rt0.c4, rt0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c2, rt0.c4, rt0.c1 FROM v0, rt0 GROUP BY rt0.c2, rt0.c4, rt0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c2, rt0.c4, rt0.c1 FROM v0 NOT INDEXED, rt0 GROUP BY rt0.c2, rt0.c4, rt0.c1;
SELECT rt0.c2, rt0.c4, rt0.c1 FROM v0, rt0 GROUP BY rt0.c2, rt0.c4, rt0.c1 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c2, rt0.c4, rt0.c1 FROM v0, rt0 GROUP BY rt0.c2, rt0.c4, rt0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c2, rt0.c4, rt0.c1 FROM v0, rt0 GROUP BY rt0.c2, rt0.c4, rt0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c2, rt0.c4, rt0.c1 FROM v0 NOT INDEXED, rt0 GROUP BY rt0.c2, rt0.c4, rt0.c1;
SELECT v0.c0, rt0.c1 FROM v0, rt0;
SELECT v0.c0, rt0.c1 FROM v0, rt0 WHERE (CAST(((rt0.c2) NOT BETWEEN (rt0.c3) AND (0.2648751687515387)) AS INTEGER)) UNION ALL SELECT v0.c0, rt0.c1 FROM v0, rt0 WHERE ((NOT (CAST(((rt0.c2) NOT BETWEEN (rt0.c3) AND (0.2648751687515387)) AS INTEGER)))) UNION ALL SELECT ALL v0.c0, rt0.c1 FROM v0, rt0 WHERE (((CAST(((rt0.c2) NOT BETWEEN (rt0.c3) AND (0.2648751687515387)) AS INTEGER)) ISNULL));
SELECT v0.c0, rt0.c1 FROM v0, rt0;
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2, rt0.c3, v0.c0, rt0.c4 FROM v0, rt0;
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2, rt0.c3, v0.c0, rt0.c4 FROM v0, rt0 WHERE (((0.672745926580435) IS FALSE) COLLATE NOCASE) UNION SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2, rt0.c3, v0.c0, rt0.c4 FROM v0, rt0 WHERE ((NOT (((0.672745926580435) IS FALSE) COLLATE NOCASE))) UNION SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2, rt0.c3, v0.c0, rt0.c4 FROM v0, rt0 WHERE (((((0.672745926580435) IS FALSE) COLLATE NOCASE) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2, rt0.c3, v0.c0, rt0.c4 FROM v0, rt0;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM v0, rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM v0, rt0 WHERE (NULL) GROUP BY rt0.c1, rt0.c0, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM v0, rt0 WHERE ((NOT (NULL))) GROUP BY rt0.c1, rt0.c0, rt0.c2 UNION SELECT rt0.c1, rt0.c0, rt0.c2 FROM v0, rt0 WHERE (((NULL) ISNULL)) GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM v0, rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING TOTAL(((((((((rt0.c4)OR(rt0.c4)))AND(rt0.c4)))AND(rt0.c4)))AND(AVG(rt0.c1)))) UNION ALL SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING (NOT (TOTAL(((((((((rt0.c4)OR(rt0.c4)))AND(rt0.c4)))AND(rt0.c4)))AND(AVG(rt0.c1)))))) UNION ALL SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING ((TOTAL(((((((((rt0.c4)OR(rt0.c4)))AND(rt0.c4)))AND(rt0.c4)))AND(AVG(rt0.c1))))) ISNULL);
SELECT ALL * FROM v0;
SELECT ALL * FROM v0 WHERE ((((v0.c0 IN ()))/(v0.c0))) UNION ALL SELECT ALL * FROM v0 WHERE ((NOT ((((v0.c0 IN ()))/(v0.c0))))) UNION ALL SELECT ALL * FROM v0 WHERE ((((((v0.c0 IN ()))/(v0.c0))) ISNULL));
SELECT ALL * FROM v0;
SELECT DISTINCT * FROM rt0 CROSS JOIN v0 ON (((v0.c0)-(rt0.c1)) IN ());
SELECT DISTINCT * FROM rt0 CROSS JOIN v0 ON (((v0.c0)-(rt0.c1)) IN ()) WHERE (CAST(rt0.c2 AS REAL) COLLATE NOCASE) UNION SELECT DISTINCT * FROM rt0 CROSS JOIN v0 ON (((v0.c0)-(rt0.c1)) IN ()) WHERE ((NOT (CAST(rt0.c2 AS REAL) COLLATE NOCASE))) UNION SELECT DISTINCT * FROM rt0 CROSS JOIN v0 ON (((v0.c0)-(rt0.c1)) IN ()) WHERE (((CAST(rt0.c2 AS REAL) COLLATE NOCASE) ISNULL));
SELECT DISTINCT * FROM rt0 CROSS JOIN v0 ON (((v0.c0)-(rt0.c1)) IN ());
SELECT ALL rt0.c2, rt0.c0 FROM rt0, v0 GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM rt0, v0 WHERE (LIKELIHOOD(DISTINCT (((rt0.c3, rt0.c4, rt0.c3)) BETWEEN ((rt0.c1, rt0.c0, rt0.c1)) AND ((rt0.c1, rt0.c3, rt0.c2))), 0.39574877671279274)) GROUP BY rt0.c2, rt0.c0 UNION SELECT rt0.c2, rt0.c0 FROM rt0, v0 WHERE ((NOT (LIKELIHOOD(DISTINCT (((rt0.c3, rt0.c4, rt0.c3)) BETWEEN ((rt0.c1, rt0.c0, rt0.c1)) AND ((rt0.c1, rt0.c3, rt0.c2))), 0.39574877671279274)))) GROUP BY rt0.c2, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c0 FROM rt0, v0 WHERE (((LIKELIHOOD(DISTINCT (((rt0.c3, rt0.c4, rt0.c3)) BETWEEN ((rt0.c1, rt0.c0, rt0.c1)) AND ((rt0.c1, rt0.c3, rt0.c2))), 0.39574877671279274)) ISNULL)) GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0, v0 GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c1, rt0.c3, v0.c0, rt0.c0, rt0.c4, rt0.c2 FROM rt0, v0 GROUP BY rt0.c1, rt0.c3, v0.c0, rt0.c0, rt0.c4, rt0.c2;
SELECT ALL rt0.c1, rt0.c3, v0.c0, rt0.c0, rt0.c4, rt0.c2 FROM rt0, v0 GROUP BY rt0.c1, rt0.c3, v0.c0, rt0.c0, rt0.c4, rt0.c2 HAVING MAX(CASE WHEN SUM(AVG(TOTAL(AVG(SUM(COUNT(*)))))) THEN rt0.c2 END) UNION ALL SELECT rt0.c1, rt0.c3, v0.c0, rt0.c0, rt0.c4, rt0.c2 FROM rt0, v0 GROUP BY rt0.c1, rt0.c3, v0.c0, rt0.c0, rt0.c4, rt0.c2 HAVING (NOT (MAX(CASE WHEN SUM(AVG(TOTAL(AVG(SUM(COUNT(*)))))) THEN rt0.c2 END))) UNION ALL SELECT rt0.c1, rt0.c3, v0.c0, rt0.c0, rt0.c4, rt0.c2 FROM rt0, v0 GROUP BY rt0.c1, rt0.c3, v0.c0, rt0.c0, rt0.c4, rt0.c2 HAVING ((MAX(CASE WHEN SUM(AVG(TOTAL(AVG(SUM(COUNT(*)))))) THEN rt0.c2 END)) ISNULL);
SELECT ALL rt0.c3, v0.c0, rt0.c1, rt0.c4, rt0.c0, rt0.c2 FROM rt0, v0;
SELECT rt0.c3, v0.c0, rt0.c1, rt0.c4, rt0.c0, rt0.c2 FROM rt0, v0 WHERE (CASE WHEN rt0.c4 THEN TRIM(DISTINCT rt0.c2, rt0.c1) ELSE ((rt0.c2) IS FALSE) END) UNION ALL SELECT ALL rt0.c3, v0.c0, rt0.c1, rt0.c4, rt0.c0, rt0.c2 FROM rt0, v0 WHERE ((NOT (CASE WHEN rt0.c4 THEN TRIM(DISTINCT rt0.c2, rt0.c1) ELSE ((rt0.c2) IS FALSE) END))) UNION ALL SELECT ALL rt0.c3, v0.c0, rt0.c1, rt0.c4, rt0.c0, rt0.c2 FROM rt0, v0 WHERE (((CASE WHEN rt0.c4 THEN TRIM(DISTINCT rt0.c2, rt0.c1) ELSE ((rt0.c2) IS FALSE) END) ISNULL));
SELECT ALL rt0.c3, v0.c0, rt0.c1, rt0.c4, rt0.c0, rt0.c2 FROM rt0, v0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (((((((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))AND(v0.c0)))OR(v0.c0)))AND(((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))OR(v0.c0)))))AND(NULL))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (((((((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))AND(v0.c0)))OR(v0.c0)))AND(((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))OR(v0.c0)))))AND(NULL))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((((((((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))AND(v0.c0)))OR(v0.c0)))AND(((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))OR(v0.c0)))))AND(NULL))) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (TRIM(DISTINCT CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE NULL END, CAST(v0.c0 AS INTEGER))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (TRIM(DISTINCT CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE NULL END, CAST(v0.c0 AS INTEGER))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((TRIM(DISTINCT CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE NULL END, CAST(v0.c0 AS INTEGER))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING TOTAL(AVG(v0.c0)) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (TOTAL(AVG(v0.c0)))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((TOTAL(AVG(v0.c0))) ISNULL);
SELECT MAX((x'26b5' IN ())) FROM rt0, v0;
SELECT rt0.c2, rt0.c1, rt0.c3, rt0.c4 FROM rt0;
SELECT rt0.c2, rt0.c1, rt0.c3, rt0.c4 FROM rt0 WHERE (rt0.c4) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c3, rt0.c4 FROM rt0 WHERE ((NOT (rt0.c4))) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c3, rt0.c4 FROM rt0 WHERE (((rt0.c4) ISNULL));
SELECT rt0.c2, rt0.c1, rt0.c3, rt0.c4 FROM rt0;
SELECT DISTINCT rt0.c4, rt0.c1, rt0.c2, rt0.c0, rt0.c3 FROM rt0;
SELECT DISTINCT rt0.c4, rt0.c1, rt0.c2, rt0.c0, rt0.c3 FROM rt0 WHERE ((- (((((((((rt0.c2)OR(rt0.c1)))OR(rt0.c4)))AND(rt0.c4)))AND(rt0.c0))))) UNION SELECT DISTINCT rt0.c4, rt0.c1, rt0.c2, rt0.c0, rt0.c3 FROM rt0 WHERE ((NOT ((- (((((((((rt0.c2)OR(rt0.c1)))OR(rt0.c4)))AND(rt0.c4)))AND(rt0.c0))))))) UNION SELECT DISTINCT rt0.c4, rt0.c1, rt0.c2, rt0.c0, rt0.c3 FROM rt0 WHERE ((((- (((((((((rt0.c2)OR(rt0.c1)))OR(rt0.c4)))AND(rt0.c4)))AND(rt0.c0))))) ISNULL));
SELECT DISTINCT rt0.c4, rt0.c1, rt0.c2, rt0.c0, rt0.c3 FROM rt0;
SELECT ALL v0.c0, rt0.c4, rt0.c3, rt0.c0 FROM v0 LEFT OUTER JOIN rt0 ON (((((0.7369539370543596)/(rt0.c4))))<((x''))) GROUP BY v0.c0, rt0.c4, rt0.c3, rt0.c0;
SELECT v0.c0, rt0.c4, rt0.c3, rt0.c0 FROM v0 LEFT OUTER JOIN rt0 ON (((((0.7369539370543596)/(rt0.c4))))<((x''))) WHERE (((((((((rt0.c0)AND((((rt0.c0))!=((NULL))))))OR(CAST(rt0.c0 AS NUMERIC))))AND((~ (rt0.c4)))))OR(UPPER(rt0.c4)))) GROUP BY v0.c0, rt0.c4, rt0.c3, rt0.c0 UNION SELECT v0.c0, rt0.c4, rt0.c3, rt0.c0 FROM v0 LEFT OUTER JOIN rt0 ON (((((0.7369539370543596)/(rt0.c4))))<((x''))) WHERE ((NOT (((((((((rt0.c0)AND((((rt0.c0))!=((NULL))))))OR(CAST(rt0.c0 AS NUMERIC))))AND((~ (rt0.c4)))))OR(UPPER(rt0.c4)))))) GROUP BY v0.c0, rt0.c4, rt0.c3, rt0.c0 UNION SELECT ALL v0.c0, rt0.c4, rt0.c3, rt0.c0 FROM v0 LEFT OUTER JOIN rt0 ON (((((0.7369539370543596)/(rt0.c4))))<((x''))) WHERE (((((((((((rt0.c0)AND((((rt0.c0))<>((NULL))))))OR(CAST(rt0.c0 AS NUMERIC))))AND((~ (rt0.c4)))))OR(UPPER(rt0.c4)))) ISNULL)) GROUP BY v0.c0, rt0.c4, rt0.c3, rt0.c0;
SELECT ALL v0.c0, rt0.c4, rt0.c3, rt0.c0 FROM v0 LEFT OUTER JOIN rt0 ON (((((0.7369539370543596)/(rt0.c4))))<((x''))) GROUP BY v0.c0, rt0.c4, rt0.c3, rt0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING json(MAX(MIN(GROUP_CONCAT(MIN(v0.c0))))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (json(MAX(MIN(GROUP_CONCAT(MIN(v0.c0))))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((json(MAX(MIN(GROUP_CONCAT(MIN(v0.c0)))))) ISNULL);
SELECT ALL rt0.c0 FROM rt0;
SELECT rt0.c0 FROM rt0 WHERE ((highlight(rt0.c4, rt0.c2, 767579283, rt0.c2) IN ())) UNION ALL SELECT rt0.c0 FROM rt0 WHERE ((NOT ((highlight(rt0.c4, rt0.c2, 767579283, rt0.c2) IN ())))) UNION ALL SELECT rt0.c0 FROM rt0 WHERE ((((highlight(rt0.c4, rt0.c2, 767579283, rt0.c2) IN ())) ISNULL));
SELECT ALL rt0.c0 FROM rt0;
SELECT DISTINCT * FROM rt0, v0;
SELECT DISTINCT * FROM rt0, v0 WHERE (LIKELY(DISTINCT ((rt0.c2)<(rt0.c2)))) UNION SELECT DISTINCT * FROM rt0, v0 WHERE ((NOT (LIKELY(DISTINCT ((rt0.c2)<(rt0.c2)))))) UNION SELECT DISTINCT * FROM rt0, v0 WHERE (((LIKELY(DISTINCT ((rt0.c2)<(rt0.c2)))) ISNULL));
SELECT DISTINCT * FROM rt0, v0;
SELECT rt0.c4, rt0.c3, rt0.c2 FROM rt0 INNER JOIN v0 ON (~ ((((((((('545859878')AND(rt0.c4)))AND(0xffffffffad293ce9)))OR(v0.c0)))OR(v0.c0)))) GROUP BY rt0.c4, rt0.c3, rt0.c2;
SELECT rt0.c4, rt0.c3, rt0.c2 FROM rt0 INNER JOIN v0 ON (~ ((((((((('545859878')AND(rt0.c4)))AND(0xffffffffad293ce9)))OR(v0.c0)))OR(v0.c0)))) WHERE ((rt0.c4 COLLATE BINARY IN ())) GROUP BY rt0.c4, rt0.c3, rt0.c2 UNION SELECT ALL rt0.c4, rt0.c3, rt0.c2 FROM rt0 INNER JOIN v0 ON (~ ((((((((('545859878')AND(rt0.c4)))AND(0Xffffffffad293ce9)))OR(v0.c0)))OR(v0.c0)))) WHERE ((NOT ((rt0.c4 COLLATE BINARY IN ())))) GROUP BY rt0.c4, rt0.c3, rt0.c2 UNION SELECT rt0.c4, rt0.c3, rt0.c2 FROM rt0 INNER JOIN v0 ON (~ ((((((((('545859878')AND(rt0.c4)))AND(0Xffffffffad293ce9)))OR(v0.c0)))OR(v0.c0)))) WHERE ((((rt0.c4 COLLATE BINARY IN ())) ISNULL)) GROUP BY rt0.c4, rt0.c3, rt0.c2;
SELECT rt0.c4, rt0.c3, rt0.c2 FROM rt0 INNER JOIN v0 ON (~ ((((((((('545859878')AND(rt0.c4)))AND(0xffffffffad293ce9)))OR(v0.c0)))OR(v0.c0)))) GROUP BY rt0.c4, rt0.c3, rt0.c2;
SELECT ALL rt0.c4 FROM rt0 GROUP BY rt0.c4;
SELECT rt0.c4 FROM rt0 GROUP BY rt0.c4 HAVING COUNT(SUM(0xffffffff95b31ab9)) UNION ALL SELECT ALL rt0.c4 FROM rt0 GROUP BY rt0.c4 HAVING (NOT (COUNT(SUM(0Xffffffff95b31ab9)))) UNION ALL SELECT ALL rt0.c4 FROM rt0 GROUP BY rt0.c4 HAVING ((COUNT(SUM(0xffffffff95b31ab9))) ISNULL);
SELECT rt0.c0, rt0.c4 FROM rt0;
SELECT ALL rt0.c0, rt0.c4 FROM rt0 WHERE (((((rt0.c3))>((NULL))) IN (LIKELY(DISTINCT rt0.c2)))) UNION ALL SELECT ALL rt0.c0, rt0.c4 FROM rt0 WHERE ((NOT (((((rt0.c3))>((NULL))) IN (LIKELY(DISTINCT rt0.c2)))))) UNION ALL SELECT ALL rt0.c0, rt0.c4 FROM rt0 WHERE (((((((rt0.c3))>((NULL))) IN (LIKELY(DISTINCT rt0.c2)))) ISNULL));
SELECT rt0.c0, rt0.c4 FROM rt0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (CASE WHEN v0.c0 THEN (+ (v0.c0)) WHEN ((v0.c0)IS NOT(v0.c0)) THEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) WHEN CAST(v0.c0 AS BLOB) THEN (((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((0.5523886318585853, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0))) WHEN CASE v0.c0  WHEN v0.c0 THEN v0.c0 END THEN (((v0.c0))==((v0.c0))) WHEN (('y)\ኇ[!p')OR(v0.c0)) THEN ((v0.c0)IS(v0.c0)) WHEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) THEN ((v0.c0) IS TRUE) WHEN ((((v0.c0)OR(v0.c0)))AND(v0.c0)) THEN CASE WHEN v0.c0 THEN NULL END END) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (CASE WHEN v0.c0 THEN (+ (v0.c0)) WHEN ((v0.c0)IS NOT(v0.c0)) THEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) WHEN CAST(v0.c0 AS BLOB) THEN (((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((0.5523886318585853, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0))) WHEN CASE v0.c0  WHEN v0.c0 THEN v0.c0 END THEN (((v0.c0))==((v0.c0))) WHEN (('y)\ኇ[!p')OR(v0.c0)) THEN ((v0.c0)IS(v0.c0)) WHEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) THEN ((v0.c0) IS TRUE) WHEN ((((v0.c0)OR(v0.c0)))AND(v0.c0)) THEN CASE WHEN v0.c0 THEN NULL END END))) UNION SELECT DISTINCT * FROM v0 WHERE (((CASE WHEN v0.c0 THEN (+ (v0.c0)) WHEN ((v0.c0)IS NOT(v0.c0)) THEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) WHEN CAST(v0.c0 AS BLOB) THEN (((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((0.5523886318585853, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0))) WHEN CASE v0.c0  WHEN v0.c0 THEN v0.c0 END THEN (((v0.c0))==((v0.c0))) WHEN (('y)\ኇ[!p')OR(v0.c0)) THEN ((v0.c0)IS(v0.c0)) WHEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) THEN ((v0.c0) IS TRUE) WHEN ((((v0.c0)OR(v0.c0)))AND(v0.c0)) THEN CASE WHEN v0.c0 THEN NULL END END) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT rt0.c4, rt0.c3, rt0.c0 FROM rt0 GROUP BY rt0.c4, rt0.c3, rt0.c0;
SELECT rt0.c4, rt0.c3, rt0.c0 FROM rt0 WHERE (CAST(((rt0.c4) BETWEEN (rt0.c4) AND (rt0.c0)) AS INTEGER)) GROUP BY rt0.c4, rt0.c3, rt0.c0 UNION SELECT rt0.c4, rt0.c3, rt0.c0 FROM rt0 WHERE ((NOT (CAST(((rt0.c4) BETWEEN (rt0.c4) AND (rt0.c0)) AS INTEGER)))) GROUP BY rt0.c4, rt0.c3, rt0.c0 UNION SELECT ALL rt0.c4, rt0.c3, rt0.c0 FROM rt0 WHERE (((CAST(((rt0.c4) BETWEEN (rt0.c4) AND (rt0.c0)) AS INTEGER)) ISNULL)) GROUP BY rt0.c4, rt0.c3, rt0.c0;
SELECT rt0.c4, rt0.c3, rt0.c0 FROM rt0 GROUP BY rt0.c4, rt0.c3, rt0.c0;
SELECT ALL rt0.c4, rt0.c1 FROM v0, rt0 GROUP BY rt0.c4, rt0.c1;
SELECT rt0.c4, rt0.c1 FROM v0, rt0 GROUP BY rt0.c4, rt0.c1 HAVING TOTAL(CAST(TOTAL(COUNT(MIN(v0.c0))) AS REAL)) UNION ALL SELECT ALL rt0.c4, rt0.c1 FROM v0, rt0 GROUP BY rt0.c4, rt0.c1 HAVING (NOT (TOTAL(CAST(TOTAL(COUNT(MIN(v0.c0))) AS REAL)))) UNION ALL SELECT rt0.c4, rt0.c1 FROM v0, rt0 GROUP BY rt0.c4, rt0.c1 HAVING ((TOTAL(CAST(TOTAL(COUNT(MIN(v0.c0))) AS REAL))) ISNULL);
SELECT rt0.c4, rt0.c2, rt0.c0, rt0.c3, v0.c0, rt0.c1 FROM rt0, v0;
SELECT ALL rt0.c4, rt0.c2, rt0.c0, rt0.c3, v0.c0, rt0.c1 FROM rt0, v0 WHERE (CASE (+ (rt0.c2))  WHEN ((rt0.c2) NOT BETWEEN (rt0.c2) AND (v0.c0)) THEN ((((v0.c0)OR(rt0.c1)))OR(rt0.c0)) ELSE ((rt0.c4) ISNULL) END) UNION ALL SELECT ALL rt0.c4, rt0.c2, rt0.c0, rt0.c3, v0.c0, rt0.c1 FROM rt0, v0 WHERE ((NOT (CASE (+ (rt0.c2))  WHEN ((rt0.c2) NOT BETWEEN (rt0.c2) AND (v0.c0)) THEN ((((v0.c0)OR(rt0.c1)))OR(rt0.c0)) ELSE ((rt0.c4) ISNULL) END))) UNION ALL SELECT ALL rt0.c4, rt0.c2, rt0.c0, rt0.c3, v0.c0, rt0.c1 FROM rt0, v0 WHERE (((CASE (+ (rt0.c2))  WHEN ((rt0.c2) NOT BETWEEN (rt0.c2) AND (v0.c0)) THEN ((((v0.c0)OR(rt0.c1)))OR(rt0.c0)) ELSE ((rt0.c4) ISNULL) END) ISNULL));
SELECT rt0.c4, rt0.c2, rt0.c0, rt0.c3, v0.c0, rt0.c1 FROM rt0, v0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE ((((v0.c0)) BETWEEN ((((((v0.c0)OR(v0.c0)))OR('dicg6m%w\')))) AND ((v0.c0)))) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT ((((v0.c0)) BETWEEN ((((((v0.c0)OR(v0.c0)))OR('dicg6m%w\')))) AND ((v0.c0)))))) UNION SELECT DISTINCT * FROM v0 WHERE ((((((v0.c0)) BETWEEN ((((((v0.c0)OR(v0.c0)))OR('dicg6m%w\')))) AND ((v0.c0)))) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT ALL rt0.c4, rt0.c2, rt0.c0, rt0.c3, rt0.c1 FROM rt0 GROUP BY rt0.c4, rt0.c2, rt0.c0, rt0.c3, rt0.c1;
SELECT rt0.c4, rt0.c2, rt0.c0, rt0.c3, rt0.c1 FROM rt0 WHERE (CAST((- (rt0.c1)) AS NUMERIC)) GROUP BY rt0.c4, rt0.c2, rt0.c0, rt0.c3, rt0.c1 UNION SELECT rt0.c4, rt0.c2, rt0.c0, rt0.c3, rt0.c1 FROM rt0 WHERE ((NOT (CAST((- (rt0.c1)) AS NUMERIC)))) GROUP BY rt0.c4, rt0.c2, rt0.c0, rt0.c3, rt0.c1 UNION SELECT rt0.c4, rt0.c2, rt0.c0, rt0.c3, rt0.c1 FROM rt0 WHERE (((CAST((- (rt0.c1)) AS NUMERIC)) ISNULL)) GROUP BY rt0.c4, rt0.c2, rt0.c0, rt0.c3, rt0.c1;
SELECT ALL rt0.c4, rt0.c2, rt0.c0, rt0.c3, rt0.c1 FROM rt0 GROUP BY rt0.c4, rt0.c2, rt0.c0, rt0.c3, rt0.c1;
SELECT ALL rt0.c0, rt0.c3, rt0.c4 FROM rt0 NATURAL JOIN v0 GROUP BY rt0.c0, rt0.c3, rt0.c4;
SELECT ALL rt0.c0, rt0.c3, rt0.c4 FROM rt0 NATURAL JOIN v0 GROUP BY rt0.c0, rt0.c3, rt0.c4 HAVING COUNT(*) UNION ALL SELECT rt0.c0, rt0.c3, rt0.c4 FROM rt0 NATURAL JOIN v0 GROUP BY rt0.c0, rt0.c3, rt0.c4 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c0, rt0.c3, rt0.c4 FROM rt0 NATURAL JOIN v0 GROUP BY rt0.c0, rt0.c3, rt0.c4 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c0, rt0.c3, rt0.c4 FROM rt0 NATURAL JOIN v0 GROUP BY rt0.c0, rt0.c3, rt0.c4;
SELECT ALL rt0.c0, rt0.c3, rt0.c4 FROM rt0 NATURAL JOIN v0 GROUP BY rt0.c0, rt0.c3, rt0.c4 HAVING COUNT(*) UNION ALL SELECT rt0.c0, rt0.c3, rt0.c4 FROM rt0 NATURAL JOIN v0 GROUP BY rt0.c0, rt0.c3, rt0.c4 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c0, rt0.c3, rt0.c4 FROM rt0 NATURAL JOIN v0 GROUP BY rt0.c0, rt0.c3, rt0.c4 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c0, rt0.c3, rt0.c4 FROM rt0 NATURAL JOIN v0 GROUP BY rt0.c0, rt0.c3, rt0.c4;
SELECT ALL rt0.c1 FROM rt0, v0;
SELECT ALL rt0.c1 FROM rt0, v0 WHERE ((((((rt0.c4) NOT NULL), (~ (rt0.c2)), (+ (rt0.c0))))<=((CASE WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c1 END, ((rt0.c4)/(rt0.c0)), v0.c0)))) UNION ALL SELECT ALL rt0.c1 FROM rt0, v0 WHERE ((NOT ((((((rt0.c4) NOT NULL), (~ (rt0.c2)), (+ (rt0.c0))))<=((CASE WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c1 END, ((rt0.c4)/(rt0.c0)), v0.c0)))))) UNION ALL SELECT rt0.c1 FROM rt0, v0 WHERE ((((((((rt0.c4) NOT NULL), (~ (rt0.c2)), (+ (rt0.c0))))<=((CASE WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c1 END, ((rt0.c4)/(rt0.c0)), v0.c0)))) ISNULL));
SELECT ALL rt0.c1 FROM rt0, v0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (((~ (v0.c0)) IN (v0.c0))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (((~ (v0.c0)) IN (v0.c0))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((((~ (v0.c0)) IN (v0.c0))) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE ((((((v0.c0))<>((v0.c0)))) NOT BETWEEN ((((v0.c0, v0.c0, v0.c0, v0.c0, v0.c0))=((v0.c0, v0.c0, v0.c0, v0.c0, v0.c0)))) AND (((v0.c0)<(v0.c0))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT ((((((v0.c0))<>((v0.c0)))) NOT BETWEEN ((((v0.c0, v0.c0, v0.c0, v0.c0, v0.c0))=((v0.c0, v0.c0, v0.c0, v0.c0, v0.c0)))) AND (((v0.c0)<(v0.c0))))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((((((((v0.c0))!=((v0.c0)))) NOT BETWEEN ((((v0.c0, v0.c0, v0.c0, v0.c0, v0.c0))==((v0.c0, v0.c0, v0.c0, v0.c0, v0.c0)))) AND (((v0.c0)<(v0.c0))))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT rt0.c0, rt0.c2, rt0.c1, rt0.c3, rt0.c4 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1, rt0.c3, rt0.c4;
SELECT ALL rt0.c0, rt0.c2, rt0.c1, rt0.c3, rt0.c4 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1, rt0.c3, rt0.c4 HAVING (ABS(GROUP_CONCAT(COUNT(*))) IN ()) UNION ALL SELECT rt0.c0, rt0.c2, rt0.c1, rt0.c3, rt0.c4 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1, rt0.c3, rt0.c4 HAVING (NOT ((ABS(GROUP_CONCAT(COUNT(*))) IN ()))) UNION ALL SELECT ALL rt0.c0, rt0.c2, rt0.c1, rt0.c3, rt0.c4 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1, rt0.c3, rt0.c4 HAVING (((ABS(GROUP_CONCAT(COUNT(*))) IN ())) ISNULL);
SELECT rt0.c0, rt0.c2, rt0.c1, rt0.c3, rt0.c4 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1, rt0.c3, rt0.c4;
SELECT ALL rt0.c0, rt0.c2, rt0.c1, rt0.c3, rt0.c4 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1, rt0.c3, rt0.c4 HAVING (ABS(GROUP_CONCAT(COUNT(*))) IN ()) UNION ALL SELECT rt0.c0, rt0.c2, rt0.c1, rt0.c3, rt0.c4 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1, rt0.c3, rt0.c4 HAVING (NOT ((ABS(GROUP_CONCAT(COUNT(*))) IN ()))) UNION ALL SELECT ALL rt0.c0, rt0.c2, rt0.c1, rt0.c3, rt0.c4 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1, rt0.c3, rt0.c4 HAVING (((ABS(GROUP_CONCAT(COUNT(*))) IN ())) ISNULL);
SELECT rt0.c0, rt0.c2, rt0.c1, rt0.c3, rt0.c4 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1, rt0.c3, rt0.c4;
SELECT ALL v0.c0 FROM v0;
SELECT v0.c0 FROM v0 NOT INDEXED WHERE (((((v0.c0) NOTNULL)) NOT BETWEEN (v0.c0 COLLATE RTRIM) AND (((v0.c0) NOT NULL)))) UNION ALL SELECT v0.c0 FROM v0 WHERE ((NOT (((((v0.c0) NOTNULL)) NOT BETWEEN (v0.c0 COLLATE RTRIM) AND (((v0.c0) NOT NULL)))))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE (((((((v0.c0) NOTNULL)) NOT BETWEEN (v0.c0 COLLATE RTRIM) AND (((v0.c0) NOT NULL)))) ISNULL));
SELECT ALL v0.c0 FROM v0;
SELECT DISTINCT * FROM rt0, v0;
SELECT DISTINCT * FROM rt0, v0 WHERE ((((rt0.c0, v0.c0, rt0.c2)) NOT BETWEEN ((CAST(rt0.c2 AS NUMERIC), CASE WHEN rt0.c3 THEN rt0.c2 END, (rt0.c1 IN ()))) AND ((rt0.c3, CAST(rt0.c4 AS INTEGER), ((((((((rt0.c0)OR('-1529578248')))AND(rt0.c2)))OR(rt0.c3)))AND(rt0.c0)))))) UNION SELECT DISTINCT * FROM rt0, v0 WHERE ((NOT ((((rt0.c0, v0.c0, rt0.c2)) NOT BETWEEN ((CAST(rt0.c2 AS NUMERIC), CASE WHEN rt0.c3 THEN rt0.c2 END, (rt0.c1 IN ()))) AND ((rt0.c3, CAST(rt0.c4 AS INTEGER), ((((((((rt0.c0)OR('-1529578248')))AND(rt0.c2)))OR(rt0.c3)))AND(rt0.c0)))))))) UNION SELECT DISTINCT * FROM rt0, v0 WHERE ((((((rt0.c0, v0.c0, rt0.c2)) NOT BETWEEN ((CAST(rt0.c2 AS NUMERIC), CASE WHEN rt0.c3 THEN rt0.c2 END, (rt0.c1 IN ()))) AND ((rt0.c3, CAST(rt0.c4 AS INTEGER), ((((((((rt0.c0)OR('-1529578248')))AND(rt0.c2)))OR(rt0.c3)))AND(rt0.c0)))))) ISNULL));
SELECT DISTINCT * FROM rt0, v0;
SELECT ALL rt0.c4, rt0.c2, rt0.c1, rt0.c3 FROM v0, rt0 GROUP BY rt0.c4, rt0.c2, rt0.c1, rt0.c3;
SELECT rt0.c4, rt0.c2, rt0.c1, rt0.c3 FROM v0, rt0 WHERE (((((v0.c0)<(rt0.c3))) BETWEEN (rt0.c2 COLLATE NOCASE) AND (CASE v0.c0  WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c1 END))) GROUP BY rt0.c4, rt0.c2, rt0.c1, rt0.c3 UNION SELECT rt0.c4, rt0.c2, rt0.c1, rt0.c3 FROM v0, rt0 WHERE ((NOT (((((v0.c0)<(rt0.c3))) BETWEEN (rt0.c2 COLLATE NOCASE) AND (CASE v0.c0  WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c1 END))))) GROUP BY rt0.c4, rt0.c2, rt0.c1, rt0.c3 UNION SELECT rt0.c4, rt0.c2, rt0.c1, rt0.c3 FROM v0, rt0 WHERE (((((((v0.c0)<(rt0.c3))) BETWEEN (rt0.c2 COLLATE NOCASE) AND (CASE v0.c0  WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c1 END))) ISNULL)) GROUP BY rt0.c4, rt0.c2, rt0.c1, rt0.c3;
SELECT ALL rt0.c4, rt0.c2, rt0.c1, rt0.c3 FROM v0, rt0 GROUP BY rt0.c4, rt0.c2, rt0.c1, rt0.c3;
SELECT ALL rt0.c1, rt0.c4, rt0.c3, v0.c0 FROM v0, rt0 GROUP BY rt0.c1, rt0.c4, rt0.c3, v0.c0;
SELECT ALL rt0.c1, rt0.c4, rt0.c3, v0.c0 FROM v0, rt0 GROUP BY rt0.c1, rt0.c4, rt0.c3, v0.c0 HAVING ((((COUNT('FP'))AND(AVG(MAX(MIN(MIN(v0.c0)))))))OR(CAST(rt0.c3 AS INTEGER))) UNION ALL SELECT ALL rt0.c1, rt0.c4, rt0.c3, v0.c0 FROM v0, rt0 GROUP BY rt0.c1, rt0.c4, rt0.c3, v0.c0 HAVING (NOT (((((COUNT('FP'))AND(AVG(MAX(MIN(MIN(v0.c0)))))))OR(CAST(rt0.c3 AS INTEGER))))) UNION ALL SELECT ALL rt0.c1, rt0.c4, rt0.c3, v0.c0 FROM v0, rt0 GROUP BY rt0.c1, rt0.c4, rt0.c3, v0.c0 HAVING ((((((COUNT('FP'))AND(AVG(MAX(MIN(MIN(v0.c0)))))))OR(CAST(rt0.c3 AS INTEGER)))) ISNULL);
SELECT * FROM rt0, v0;
SELECT * FROM rt0, v0 WHERE ((((rt0.c1)<(rt0.c3)) IN ())) UNION ALL SELECT ALL * FROM rt0, v0 WHERE ((NOT ((((rt0.c1)<(rt0.c3)) IN ())))) UNION ALL SELECT ALL * FROM rt0, v0 WHERE ((((((rt0.c1)<(rt0.c3)) IN ())) ISNULL));
SELECT * FROM rt0, v0;
SELECT DISTINCT * FROM rt0, v0;
SELECT DISTINCT * FROM rt0, v0 WHERE (((((rt0.c0)>>(rt0.c1)))GLOB(CAST(rt0.c4 AS BLOB)))) UNION SELECT DISTINCT * FROM rt0, v0 WHERE ((NOT (((((rt0.c0)>>(rt0.c1)))GLOB(CAST(rt0.c4 AS BLOB)))))) UNION SELECT DISTINCT * FROM rt0, v0 WHERE (((((((rt0.c0)>>(rt0.c1)))GLOB(CAST(rt0.c4 AS BLOB)))) ISNULL));
SELECT DISTINCT * FROM rt0, v0;
SELECT rt0.c3, rt0.c0, rt0.c2, rt0.c4, rt0.c1 FROM rt0 GROUP BY rt0.c3, rt0.c0, rt0.c2, rt0.c4, rt0.c1;
SELECT rt0.c3, rt0.c0, rt0.c2, rt0.c4, rt0.c1 FROM rt0 WHERE (rt0.c4) GROUP BY rt0.c3, rt0.c0, rt0.c2, rt0.c4, rt0.c1 UNION SELECT rt0.c3, rt0.c0, rt0.c2, rt0.c4, rt0.c1 FROM rt0 WHERE ((NOT (rt0.c4))) GROUP BY rt0.c3, rt0.c0, rt0.c2, rt0.c4, rt0.c1 UNION SELECT rt0.c3, rt0.c0, rt0.c2, rt0.c4, rt0.c1 FROM rt0 WHERE (((rt0.c4) ISNULL)) GROUP BY rt0.c3, rt0.c0, rt0.c2, rt0.c4, rt0.c1;
SELECT rt0.c3, rt0.c0, rt0.c2, rt0.c4, rt0.c1 FROM rt0 GROUP BY rt0.c3, rt0.c0, rt0.c2, rt0.c4, rt0.c1;
SELECT ALL rt0.c0, v0.c0, rt0.c2, rt0.c4, rt0.c1, rt0.c3 FROM v0 INNER JOIN rt0 ON (((((x'2666'))<=((rt0.c3))))+(rt0.c0 COLLATE BINARY)) GROUP BY rt0.c0, v0.c0, rt0.c2, rt0.c4, rt0.c1, rt0.c3;
SELECT rt0.c0, v0.c0, rt0.c2, rt0.c4, rt0.c1, rt0.c3 FROM v0 INNER JOIN rt0 ON (((((x'2666'))<=((rt0.c3))))+(rt0.c0 COLLATE BINARY)) GROUP BY rt0.c0, v0.c0, rt0.c2, rt0.c4, rt0.c1, rt0.c3 HAVING SUM(TOTAL(COUNT(*))) UNION ALL SELECT ALL rt0.c0, v0.c0, rt0.c2, rt0.c4, rt0.c1, rt0.c3 FROM v0 INNER JOIN rt0 ON (((((x'2666'))<=((rt0.c3))))+(rt0.c0 COLLATE BINARY)) GROUP BY rt0.c0, v0.c0, rt0.c2, rt0.c4, rt0.c1, rt0.c3 HAVING (NOT (SUM(TOTAL(COUNT(*))))) UNION ALL SELECT rt0.c0, v0.c0, rt0.c2, rt0.c4, rt0.c1, rt0.c3 FROM v0 INNER JOIN rt0 ON (((((x'2666'))<=((rt0.c3))))+(rt0.c0 COLLATE BINARY)) GROUP BY rt0.c0, v0.c0, rt0.c2, rt0.c4, rt0.c1, rt0.c3 HAVING ((SUM(TOTAL(COUNT(*)))) ISNULL);
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE ((((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c4)) IN ())) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT ((((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c4)) IN ())))) UNION ALL SELECT ALL * FROM rt0 WHERE ((((((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c4)) IN ())) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT * FROM v0, rt0;
SELECT DISTINCT * FROM v0, rt0 WHERE (CAST(((rt0.c4) NOT BETWEEN (rt0.c3) AND (rt0.c2)) AS INTEGER)) UNION SELECT DISTINCT * FROM v0, rt0 WHERE ((NOT (CAST(((rt0.c4) NOT BETWEEN (rt0.c3) AND (rt0.c2)) AS INTEGER)))) UNION SELECT DISTINCT * FROM v0, rt0 WHERE (((CAST(((rt0.c4) NOT BETWEEN (rt0.c3) AND (rt0.c2)) AS INTEGER)) ISNULL));
SELECT DISTINCT * FROM v0, rt0;
SELECT ALL rt0.c2 FROM rt0, v0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0, v0 WHERE ('') GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0, v0 WHERE ((NOT (''))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0, v0 WHERE ((('') ISNULL)) GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0, v0 GROUP BY rt0.c2;
SELECT rt0.c3, v0.c0 FROM v0, rt0 GROUP BY rt0.c3, v0.c0;
SELECT rt0.c3, v0.c0 FROM v0, rt0 GROUP BY rt0.c3, v0.c0 HAVING AVG(SUM(rt0.c0)) UNION ALL SELECT ALL rt0.c3, v0.c0 FROM v0, rt0 GROUP BY rt0.c3, v0.c0 HAVING (NOT (AVG(SUM(rt0.c0)))) UNION ALL SELECT ALL rt0.c3, v0.c0 FROM v0, rt0 GROUP BY rt0.c3, v0.c0 HAVING ((AVG(SUM(rt0.c0))) ISNULL);
SELECT ALL SUM(((rt0.c0 IN ()) IN (((v0.c0)<<(v0.c0)), ((rt0.c0) NOTNULL)))) FROM rt0, v0 ORDER BY ((rt0.c2 IN ()) IN ());
SELECT rt0.c3, rt0.c4, rt0.c0, v0.c0, rt0.c2, rt0.c1 FROM rt0, v0;
SELECT rt0.c3, rt0.c4, rt0.c0, v0.c0, rt0.c2, rt0.c1 FROM rt0, v0 WHERE (TYPEOF(DISTINCT ((v0.c0) IS FALSE))) UNION ALL SELECT rt0.c3, rt0.c4, rt0.c0, v0.c0, rt0.c2, rt0.c1 FROM rt0, v0 WHERE ((NOT (TYPEOF(DISTINCT ((v0.c0) IS FALSE))))) UNION ALL SELECT rt0.c3, rt0.c4, rt0.c0, v0.c0, rt0.c2, rt0.c1 FROM rt0, v0 WHERE (((TYPEOF(DISTINCT ((v0.c0) IS FALSE))) ISNULL));
SELECT rt0.c3, rt0.c4, rt0.c0, v0.c0, rt0.c2, rt0.c1 FROM rt0, v0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (json(rt0.c0)) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (json(rt0.c0)))) UNION SELECT DISTINCT * FROM rt0 WHERE (((json(rt0.c0)) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (0.3874911637100258 COLLATE BINARY) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (0.3874911637100258 COLLATE BINARY))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE (((0.3874911637100258 COLLATE BINARY) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT rt0.c2, rt0.c0, rt0.c4, rt0.c1, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c4, rt0.c1, rt0.c3;
SELECT rt0.c2, rt0.c0, rt0.c4, rt0.c1, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c4, rt0.c1, rt0.c3 HAVING ((NULLIF(rt0.c4, GROUP_CONCAT(COUNT(*))))/(GROUP_CONCAT(MAX(rt0.c1)))) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c4, rt0.c1, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c4, rt0.c1, rt0.c3 HAVING (NOT (((NULLIF(rt0.c4, GROUP_CONCAT(COUNT(*))))/(GROUP_CONCAT(MAX(rt0.c1)))))) UNION ALL SELECT rt0.c2, rt0.c0, rt0.c4, rt0.c1, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c4, rt0.c1, rt0.c3 HAVING ((((NULLIF(rt0.c4, GROUP_CONCAT(COUNT(*))))/(GROUP_CONCAT(MAX(rt0.c1))))) ISNULL);
SELECT v0.c0 FROM v0;
SELECT v0.c0 FROM v0 WHERE ('633361968') UNION ALL SELECT v0.c0 FROM v0 WHERE ((NOT ('633361968'))) UNION ALL SELECT v0.c0 FROM v0 WHERE ((('633361968') ISNULL));
SELECT v0.c0 FROM v0;
SELECT DISTINCT rt0.c3 FROM v0 LEFT OUTER JOIN rt0 ON CAST(((rt0.c1)>(rt0.c1)) AS TEXT);
SELECT DISTINCT rt0.c3 FROM v0 LEFT OUTER JOIN rt0 ON CAST(((rt0.c1)>(rt0.c1)) AS TEXT) WHERE ((+ (((x'') NOT BETWEEN (0.832288068647573) AND (rt0.c4))))) UNION SELECT DISTINCT rt0.c3 FROM v0 LEFT OUTER JOIN rt0 ON CAST(((rt0.c1)>(rt0.c1)) AS TEXT) WHERE ((NOT ((+ (((x'') NOT BETWEEN (0.832288068647573) AND (rt0.c4))))))) UNION SELECT DISTINCT rt0.c3 FROM v0 LEFT OUTER JOIN rt0 ON CAST(((rt0.c1)>(rt0.c1)) AS TEXT) WHERE ((((+ (((x'') NOT BETWEEN (0.832288068647573) AND (rt0.c4))))) ISNULL));
SELECT DISTINCT rt0.c3 FROM v0 LEFT OUTER JOIN rt0 ON CAST(((rt0.c1)>(rt0.c1)) AS TEXT);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (v0.c0) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (v0.c0))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE (((v0.c0) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL rt0.c0, rt0.c3, rt0.c1, v0.c0, rt0.c4, rt0.c2 FROM v0 NATURAL JOIN rt0 GROUP BY rt0.c0, rt0.c3, rt0.c1, v0.c0, rt0.c4, rt0.c2;
SELECT ALL rt0.c0, rt0.c3, rt0.c1, v0.c0, rt0.c4, rt0.c2 FROM v0 NATURAL JOIN rt0 GROUP BY rt0.c0, rt0.c3, rt0.c1, v0.c0, rt0.c4, rt0.c2 HAVING MAX(GROUP_CONCAT(MAX(COUNT(*)))) UNION ALL SELECT ALL rt0.c0, rt0.c3, rt0.c1, v0.c0, rt0.c4, rt0.c2 FROM v0 NATURAL JOIN rt0 GROUP BY rt0.c0, rt0.c3, rt0.c1, v0.c0, rt0.c4, rt0.c2 HAVING (NOT (MAX(GROUP_CONCAT(MAX(COUNT(*)))))) UNION ALL SELECT rt0.c0, rt0.c3, rt0.c1, v0.c0, rt0.c4, rt0.c2 FROM v0 NATURAL JOIN rt0 GROUP BY rt0.c0, rt0.c3, rt0.c1, v0.c0, rt0.c4, rt0.c2 HAVING ((MAX(GROUP_CONCAT(MAX(COUNT(*))))) ISNULL);
SELECT * FROM v0, rt0;
SELECT ALL * FROM v0, rt0 WHERE ((((((v0.c0)) BETWEEN ((rt0.c2)) AND ((0.10796680844048245))))<<('*'))) UNION ALL SELECT * FROM v0, rt0 WHERE ((NOT ((((((v0.c0)) BETWEEN ((rt0.c2)) AND ((0.10796680844048245))))<<('*'))))) UNION ALL SELECT * FROM v0, rt0 WHERE ((((((((v0.c0)) BETWEEN ((rt0.c2)) AND ((0.10796680844048245))))<<('*'))) ISNULL));
SELECT * FROM v0, rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((CASE rt0.c1  WHEN rt0.c2 THEN rt0.c4 END)IS NOT((rt0.c3 IN (rt0.c0, 0.8362259791329111))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((CASE rt0.c1  WHEN rt0.c2 THEN rt0.c4 END)IS NOT((rt0.c3 IN (rt0.c0, 0.8362259791329111))))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((CASE rt0.c1  WHEN rt0.c2 THEN rt0.c4 END)IS NOT((rt0.c3 IN (rt0.c0, 0.8362259791329111))))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0, rt0.c3;
SELECT ALL rt0.c2, rt0.c1, rt0.c0, rt0.c3 FROM rt0 WHERE (CAST((((rt0.c4, rt0.c4, rt0.c2))<((0.42356237954952747, rt0.c1, rt0.c1))) AS INTEGER)) GROUP BY rt0.c2, rt0.c1, rt0.c0, rt0.c3 UNION SELECT ALL rt0.c2, rt0.c1, rt0.c0, rt0.c3 FROM rt0 WHERE ((NOT (CAST((((rt0.c4, rt0.c4, rt0.c2))<((0.42356237954952747, rt0.c1, rt0.c1))) AS INTEGER)))) GROUP BY rt0.c2, rt0.c1, rt0.c0, rt0.c3 UNION SELECT ALL rt0.c2, rt0.c1, rt0.c0, rt0.c3 FROM rt0 WHERE (((CAST((((rt0.c4, rt0.c4, rt0.c2))<((0.42356237954952747, rt0.c1, rt0.c1))) AS INTEGER)) ISNULL)) GROUP BY rt0.c2, rt0.c1, rt0.c0, rt0.c3;
SELECT ALL rt0.c2, rt0.c1, rt0.c0, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0, rt0.c3;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING MIN(CASE WHEN rt0.c3 THEN SUM(rt0.c4) END) UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT (MIN(CASE WHEN rt0.c3 THEN SUM(rt0.c4) END))) UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING ((MIN(CASE WHEN rt0.c3 THEN SUM(rt0.c4) END)) ISNULL);
SELECT v0.c0 FROM v0;
SELECT ALL v0.c0 FROM v0 WHERE (1920852599) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE ((NOT (1920852599))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE (((1920852599) ISNULL));
SELECT v0.c0 FROM v0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((rt0.c0 IN ()) COLLATE RTRIM) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((rt0.c0 IN ()) COLLATE RTRIM))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((rt0.c0 IN ()) COLLATE RTRIM) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0, v0.c0, rt0.c4 FROM rt0, v0 GROUP BY rt0.c2, rt0.c1, rt0.c0, v0.c0, rt0.c4;
SELECT rt0.c2, rt0.c1, rt0.c0, v0.c0, rt0.c4 FROM rt0, v0 WHERE (((CAST(rt0.c1 AS INTEGER)) NOT BETWEEN ((NOT (rt0.c4))) AND ('0.6252187421130596'))) GROUP BY rt0.c2, rt0.c1, rt0.c0, v0.c0, rt0.c4 UNION SELECT ALL rt0.c2, rt0.c1, rt0.c0, v0.c0, rt0.c4 FROM rt0, v0 WHERE ((NOT (((CAST(rt0.c1 AS INTEGER)) NOT BETWEEN ((NOT (rt0.c4))) AND ('0.6252187421130596'))))) GROUP BY rt0.c2, rt0.c1, rt0.c0, v0.c0, rt0.c4 UNION SELECT rt0.c2, rt0.c1, rt0.c0, v0.c0, rt0.c4 FROM rt0, v0 WHERE (((((CAST(rt0.c1 AS INTEGER)) NOT BETWEEN ((NOT (rt0.c4))) AND ('0.6252187421130596'))) ISNULL)) GROUP BY rt0.c2, rt0.c1, rt0.c0, v0.c0, rt0.c4;
SELECT ALL rt0.c2, rt0.c1, rt0.c0, v0.c0, rt0.c4 FROM rt0, v0 GROUP BY rt0.c2, rt0.c1, rt0.c0, v0.c0, rt0.c4;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING MAX(COUNT(COUNT(*))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (MAX(COUNT(COUNT(*))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((MAX(COUNT(COUNT(*)))) ISNULL);
SELECT MAX(((((((v0.c0)<<(v0.c0)))OR((((v0.c0))=((v0.c0))))))OR(LIKELIHOOD(DISTINCT v0.c0, 0.15760621549676002)))) FROM v0;
SELECT rt0.c3 FROM rt0, v0;
SELECT ALL rt0.c3 FROM rt0, v0 WHERE ((((rt0.c3) NOT BETWEEN (rt0.c1) AND (v0.c0)) IN (((rt0.c2)*(rt0.c2))))) UNION ALL SELECT ALL rt0.c3 FROM rt0, v0 WHERE ((NOT ((((rt0.c3) NOT BETWEEN (rt0.c1) AND (v0.c0)) IN (((rt0.c2)*(rt0.c2))))))) UNION ALL SELECT ALL rt0.c3 FROM rt0, v0 WHERE ((((((rt0.c3) NOT BETWEEN (rt0.c1) AND (v0.c0)) IN (((rt0.c2)*(rt0.c2))))) ISNULL));
SELECT rt0.c3 FROM rt0, v0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (JULIANDAY(((NULL)>>(v0.c0)), (NOT (v0.c0)), 0x2dc05493)) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (JULIANDAY(((NULL)>>(v0.c0)), (NOT (v0.c0)), 0X2dc05493)))) UNION SELECT DISTINCT * FROM v0 WHERE (((JULIANDAY(((NULL)>>(v0.c0)), (NOT (v0.c0)), 0x2dc05493)) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (((CASE NULL  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END) NOT BETWEEN (LOWER(v0.c0)) AND ((~ (v0.c0))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (((CASE NULL  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END) NOT BETWEEN (LOWER(v0.c0)) AND ((~ (v0.c0))))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE (((((CASE NULL  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END) NOT BETWEEN (LOWER(v0.c0)) AND ((~ (v0.c0))))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL rt0.c0, rt0.c1, rt0.c4 FROM v0 LEFT OUTER JOIN rt0 ON CAST(((rt0.c2)>=(rt0.c4)) AS REAL) GROUP BY rt0.c0, rt0.c1, rt0.c4;
SELECT ALL rt0.c0, rt0.c1, rt0.c4 FROM v0 LEFT OUTER JOIN rt0 ON CAST(((rt0.c2)>=(rt0.c4)) AS REAL) GROUP BY rt0.c0, rt0.c1, rt0.c4 HAVING SUM(COUNT(AVG(rt0.c3))) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c4 FROM v0 LEFT OUTER JOIN rt0 ON CAST(((rt0.c2)>=(rt0.c4)) AS REAL) GROUP BY rt0.c0, rt0.c1, rt0.c4 HAVING (NOT (SUM(COUNT(AVG(rt0.c3))))) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c4 FROM v0 LEFT OUTER JOIN rt0 ON CAST(((rt0.c2)>=(rt0.c4)) AS REAL) GROUP BY rt0.c0, rt0.c1, rt0.c4 HAVING ((SUM(COUNT(AVG(rt0.c3)))) ISNULL);
SELECT MAX((((rt0.c4)|(rt0.c2)) IN ((~ ('-558511864'))))) FROM rt0, v0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0, rt0.c4, rt0.c3 FROM rt0;
SELECT rt0.c1, rt0.c2, rt0.c0, rt0.c4, rt0.c3 FROM rt0 WHERE (x'') UNION ALL SELECT rt0.c1, rt0.c2, rt0.c0, rt0.c4, rt0.c3 FROM rt0 WHERE ((NOT (x''))) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0, rt0.c4, rt0.c3 FROM rt0 WHERE (((x'') ISNULL));
SELECT ALL rt0.c1, rt0.c2, rt0.c0, rt0.c4, rt0.c3 FROM rt0;
SELECT DISTINCT rt0.c4, v0.c0, rt0.c2 FROM rt0 FULL OUTER JOIN v0 ON ((NULL)>((NOT (rt0.c1))));
SELECT DISTINCT rt0.c4, v0.c0, rt0.c2 FROM rt0 FULL OUTER JOIN v0 ON ((NULL)>((NOT (rt0.c1)))) WHERE ((NOT (rt0.c1))) UNION SELECT DISTINCT rt0.c4, v0.c0, rt0.c2 FROM rt0 FULL OUTER JOIN v0 ON ((NULL)>((NOT (rt0.c1)))) WHERE ((NOT ((NOT (rt0.c1))))) UNION SELECT DISTINCT rt0.c4, v0.c0, rt0.c2 FROM rt0 FULL OUTER JOIN v0 ON ((NULL)>((NOT (rt0.c1)))) WHERE ((((NOT (rt0.c1))) ISNULL));
SELECT DISTINCT rt0.c4, v0.c0, rt0.c2 FROM rt0 FULL OUTER JOIN v0 ON ((NULL)>((NOT (rt0.c1))));
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (CASE WHEN LIKELIHOOD(DISTINCT v0.c0, 0.5404199469164666) THEN (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))) WHEN NULL THEN NULL WHEN -8.99820425E8 THEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) WHEN ((v0.c0) IS FALSE) THEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) WHEN v0.c0 THEN v0.c0 ELSE ((v0.c0)!=('')) END) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (CASE WHEN LIKELIHOOD(DISTINCT v0.c0, 0.5404199469164666) THEN (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))) WHEN NULL THEN NULL WHEN -8.99820425E8 THEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) WHEN ((v0.c0) IS FALSE) THEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) WHEN v0.c0 THEN v0.c0 ELSE ((v0.c0)!=('')) END))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((CASE WHEN LIKELIHOOD(DISTINCT v0.c0, 0.5404199469164666) THEN (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))) WHEN NULL THEN NULL WHEN -8.99820425E8 THEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) WHEN ((v0.c0) IS FALSE) THEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) WHEN v0.c0 THEN v0.c0 ELSE ((v0.c0)<>('')) END) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT rt0.c3, v0.c0 FROM rt0, v0 NOT INDEXED GROUP BY rt0.c3, v0.c0;
SELECT ALL rt0.c3, v0.c0 FROM rt0, v0 GROUP BY rt0.c3, v0.c0 HAVING AVG(COUNT(*)) UNION ALL SELECT rt0.c3, v0.c0 FROM rt0, v0 GROUP BY rt0.c3, v0.c0 HAVING (NOT (AVG(COUNT(*)))) UNION ALL SELECT rt0.c3, v0.c0 FROM rt0, v0 GROUP BY rt0.c3, v0.c0 HAVING ((AVG(COUNT(*))) ISNULL);
SELECT ALL * FROM rt0 INNER JOIN v0 ON (+ (((('h~m')) NOT BETWEEN ((rt0.c3)) AND ((rt0.c2)))));
SELECT ALL * FROM rt0 INNER JOIN v0 ON (+ (((('h~m')) NOT BETWEEN ((rt0.c3)) AND ((rt0.c2))))) WHERE ((~ (((((rt0.c0)OR(rt0.c3)))OR(rt0.c0))))) UNION ALL SELECT * FROM rt0 INNER JOIN v0 ON (+ (((('h~m')) NOT BETWEEN ((rt0.c3)) AND ((rt0.c2))))) WHERE ((NOT ((~ (((((rt0.c0)OR(rt0.c3)))OR(rt0.c0))))))) UNION ALL SELECT ALL * FROM rt0 INNER JOIN v0 ON (+ (((('h~m')) NOT BETWEEN ((rt0.c3)) AND ((rt0.c2))))) WHERE ((((~ (((((rt0.c0)OR(rt0.c3)))OR(rt0.c0))))) ISNULL));
SELECT ALL * FROM rt0 INNER JOIN v0 ON (+ (((('h~m')) NOT BETWEEN ((rt0.c3)) AND ((rt0.c2)))));
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (DATE(((((((((rt0.c1)AND(rt0.c0)))OR(rt0.c3)))AND(rt0.c4)))AND(rt0.c1)), ((NULL)GLOB(rt0.c1)), rt0.c1)) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (DATE(((((((((rt0.c1)AND(rt0.c0)))OR(rt0.c3)))AND(rt0.c4)))AND(rt0.c1)), ((NULL)GLOB(rt0.c1)), rt0.c1)))) UNION SELECT DISTINCT * FROM rt0 WHERE (((DATE(((((((((rt0.c1)AND(rt0.c0)))OR(rt0.c3)))AND(rt0.c4)))AND(rt0.c1)), ((NULL)GLOB(rt0.c1)), rt0.c1)) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE ((((v0.c0)AND(v0.c0)) IN ((v0.c0 IN (v0.c0))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT ((((v0.c0)AND(v0.c0)) IN ((v0.c0 IN (v0.c0))))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((((((v0.c0)AND(v0.c0)) IN ((v0.c0 IN (v0.c0))))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT rt0.c3, rt0.c1, rt0.c4 FROM rt0 GROUP BY rt0.c3, rt0.c1, rt0.c4;
SELECT rt0.c3, rt0.c1, rt0.c4 FROM rt0 GROUP BY rt0.c3, rt0.c1, rt0.c4 HAVING GROUP_CONCAT(HEX(rt0.c0)) UNION ALL SELECT ALL rt0.c3, rt0.c1, rt0.c4 FROM rt0 GROUP BY rt0.c3, rt0.c1, rt0.c4 HAVING (NOT (GROUP_CONCAT(HEX(rt0.c0)))) UNION ALL SELECT ALL rt0.c3, rt0.c1, rt0.c4 FROM rt0 GROUP BY rt0.c3, rt0.c1, rt0.c4 HAVING ((GROUP_CONCAT(HEX(rt0.c0))) ISNULL);
SELECT rt0.c3, rt0.c1, rt0.c4 FROM rt0 GROUP BY rt0.c3, rt0.c1, rt0.c4;
SELECT rt0.c3, rt0.c1, rt0.c4 FROM rt0 GROUP BY rt0.c3, rt0.c1, rt0.c4 HAVING GROUP_CONCAT(HEX(rt0.c0)) UNION ALL SELECT ALL rt0.c3, rt0.c1, rt0.c4 FROM rt0 GROUP BY rt0.c3, rt0.c1, rt0.c4 HAVING (NOT (GROUP_CONCAT(HEX(rt0.c0)))) UNION ALL SELECT ALL rt0.c3, rt0.c1, rt0.c4 FROM rt0 GROUP BY rt0.c3, rt0.c1, rt0.c4 HAVING ((GROUP_CONCAT(HEX(rt0.c0))) ISNULL);
SELECT rt0.c3, rt0.c1, rt0.c4 FROM rt0 GROUP BY rt0.c3, rt0.c1, rt0.c4;
SELECT MAX((CASE WHEN v0.c0 THEN rt0.c3 ELSE rt0.c2 END IN ())) FROM v0, rt0 ORDER BY ((- (x'')) IN ())  NULLS FIRST;
SELECT ALL rt0.c4, rt0.c0, rt0.c1, rt0.c2, rt0.c3 FROM rt0;
SELECT rt0.c4, rt0.c0, rt0.c1, rt0.c2, rt0.c3 FROM rt0 WHERE ((('J3') IS TRUE)) UNION ALL SELECT ALL rt0.c4, rt0.c0, rt0.c1, rt0.c2, rt0.c3 FROM rt0 WHERE ((NOT ((('J3') IS TRUE)))) UNION ALL SELECT ALL rt0.c4, rt0.c0, rt0.c1, rt0.c2, rt0.c3 FROM rt0 WHERE ((((('J3') IS TRUE)) ISNULL));
SELECT ALL rt0.c4, rt0.c0, rt0.c1, rt0.c2, rt0.c3 FROM rt0;
SELECT DISTINCT rt0.c4 FROM rt0 LEFT OUTER JOIN v0 ON (((rt0.c1)IS NOT(rt0.c2)) IN ());
SELECT DISTINCT rt0.c4 FROM rt0 LEFT OUTER JOIN v0 ON (((rt0.c1)IS NOT(rt0.c2)) IN ()) WHERE (CAST(v0.c0 AS INTEGER) COLLATE NOCASE) UNION SELECT DISTINCT rt0.c4 FROM rt0 LEFT OUTER JOIN v0 ON (((rt0.c1)IS NOT(rt0.c2)) IN ()) WHERE ((NOT (CAST(v0.c0 AS INTEGER) COLLATE NOCASE))) UNION SELECT DISTINCT rt0.c4 FROM rt0 LEFT OUTER JOIN v0 ON (((rt0.c1)IS NOT(rt0.c2)) IN ()) WHERE (((CAST(v0.c0 AS INTEGER) COLLATE NOCASE) ISNULL));
SELECT DISTINCT rt0.c4 FROM rt0 LEFT OUTER JOIN v0 ON (((rt0.c1)IS NOT(rt0.c2)) IN ());
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (((v0.c0)AND(v0.c0)) COLLATE NOCASE) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (((v0.c0)AND(v0.c0)) COLLATE NOCASE))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE (((((v0.c0)AND(v0.c0)) COLLATE NOCASE) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING v0.c0 UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (v0.c0)) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((v0.c0) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING v0.c0 UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (v0.c0)) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((v0.c0) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0;
SELECT ALL v0.c0 FROM v0 WHERE ('-305410475') ORDER BY CAST(CAST('rO' AS BLOB) AS INTEGER)  NULLS LAST, NULL DESC;
SELECT ALL v0.c0 FROM v0 WHERE ((NOT ('-305410475'))) ORDER BY CAST(CAST('rO' AS BLOB) AS INTEGER)  NULLS LAST, NULL DESC;
SELECT ALL v0.c0 FROM v0 WHERE ((('-305410475') ISNULL)) ORDER BY CAST(CAST('rO' AS BLOB) AS INTEGER)  NULLS LAST, NULL DESC;
SELECT v0.c0 FROM v0;
SELECT DISTINCT * FROM v0, rt0;
SELECT DISTINCT * FROM v0, rt0 WHERE (TRIM(DISTINCT ((rt0.c1)IS(rt0.c0)), ((rt0.c4) NOT BETWEEN (rt0.c1) AND (0.5926934942968306)))) UNION SELECT DISTINCT * FROM v0, rt0 WHERE ((NOT (TRIM(DISTINCT ((rt0.c1)IS(rt0.c0)), ((rt0.c4) NOT BETWEEN (rt0.c1) AND (0.5926934942968306)))))) UNION SELECT DISTINCT * FROM v0, rt0 WHERE (((TRIM(DISTINCT ((rt0.c1)IS(rt0.c0)), ((rt0.c4) NOT BETWEEN (rt0.c1) AND (0.5926934942968306)))) ISNULL));
SELECT DISTINCT * FROM v0, rt0;
SELECT rt0.c2, rt0.c4, v0.c0 FROM v0, rt0 GROUP BY rt0.c2, rt0.c4, v0.c0;
SELECT ALL rt0.c2, rt0.c4, v0.c0 FROM v0, rt0 WHERE (((((CAST(rt0.c2 AS INTEGER))AND(NULL COLLATE NOCASE)))OR(((rt0.c0) NOT NULL)))) GROUP BY rt0.c2, rt0.c4, v0.c0 UNION SELECT rt0.c2, rt0.c4, v0.c0 FROM v0, rt0 WHERE ((NOT (((((CAST(rt0.c2 AS INTEGER))AND(NULL COLLATE NOCASE)))OR(((rt0.c0) NOT NULL)))))) GROUP BY rt0.c2, rt0.c4, v0.c0 UNION SELECT ALL rt0.c2, rt0.c4, v0.c0 FROM v0, rt0 WHERE (((((((CAST(rt0.c2 AS INTEGER))AND(NULL COLLATE NOCASE)))OR(((rt0.c0) NOT NULL)))) ISNULL)) GROUP BY rt0.c2, rt0.c4, v0.c0;
SELECT rt0.c2, rt0.c4, v0.c0 FROM v0, rt0 GROUP BY rt0.c2, rt0.c4, v0.c0;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING MIN(AVG(rt0.c1)) UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT (MIN(AVG(rt0.c1)))) UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING ((MIN(AVG(rt0.c1))) ISNULL);
SELECT rt0.c1, rt0.c0, rt0.c2, rt0.c3, rt0.c4 FROM rt0;
SELECT rt0.c1, rt0.c0, rt0.c2, rt0.c3, rt0.c4 FROM rt0 WHERE (((rt0.c0 COLLATE RTRIM)%(NULL))) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c2, rt0.c3, rt0.c4 FROM rt0 WHERE ((NOT (((rt0.c0 COLLATE RTRIM)%(NULL))))) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c2, rt0.c3, rt0.c4 FROM rt0 WHERE (((((rt0.c0 COLLATE RTRIM)%(NULL))) ISNULL));
SELECT rt0.c1, rt0.c0, rt0.c2, rt0.c3, rt0.c4 FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((((rt0.c3)) NOT BETWEEN ((((rt0.c4) BETWEEN (rt0.c1) AND (rt0.c3)))) AND (((rt0.c4 IN ()))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((((rt0.c3)) NOT BETWEEN ((((rt0.c4) BETWEEN (rt0.c1) AND (rt0.c3)))) AND (((rt0.c4 IN ()))))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((((rt0.c3)) NOT BETWEEN ((((rt0.c4) BETWEEN (rt0.c1) AND (rt0.c3)))) AND (((rt0.c4 IN ()))))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (v0.c0 COLLATE RTRIM) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (v0.c0 COLLATE RTRIM))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE (((v0.c0 COLLATE RTRIM) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT rt0.c2, rt0.c3, rt0.c1, v0.c0 FROM v0, rt0 GROUP BY rt0.c2, rt0.c3, rt0.c1, v0.c0;
SELECT rt0.c2, rt0.c3, rt0.c1, v0.c0 FROM v0, rt0 GROUP BY rt0.c2, rt0.c3, rt0.c1, v0.c0 HAVING CASE WHEN MAX(rt0.c4) THEN ((rt0.c2)>(COUNT(*))) ELSE (((''))<=((AVG(v0.c0)))) END UNION ALL SELECT ALL rt0.c2, rt0.c3, rt0.c1, v0.c0 FROM v0, rt0 GROUP BY rt0.c2, rt0.c3, rt0.c1, v0.c0 HAVING (NOT (CASE WHEN MAX(rt0.c4) THEN ((rt0.c2)>(COUNT(*))) ELSE (((''))<=((AVG(v0.c0)))) END)) UNION ALL SELECT rt0.c2, rt0.c3, rt0.c1, v0.c0 FROM v0, rt0 GROUP BY rt0.c2, rt0.c3, rt0.c1, v0.c0 HAVING ((CASE WHEN MAX(rt0.c4) THEN ((rt0.c2)>(COUNT(*))) ELSE (((''))<=((AVG(v0.c0)))) END) ISNULL);
SELECT rt0.c2, rt0.c3, rt0.c1, v0.c0 FROM v0, rt0 GROUP BY rt0.c2, rt0.c3, rt0.c1, v0.c0;
SELECT rt0.c2, rt0.c3, rt0.c1, v0.c0 FROM v0, rt0 GROUP BY rt0.c2, rt0.c3, rt0.c1, v0.c0 HAVING CASE WHEN MAX(rt0.c4) THEN ((rt0.c2)>(COUNT(*))) ELSE (((''))<=((AVG(v0.c0)))) END UNION ALL SELECT ALL rt0.c2, rt0.c3, rt0.c1, v0.c0 FROM v0, rt0 GROUP BY rt0.c2, rt0.c3, rt0.c1, v0.c0 HAVING (NOT (CASE WHEN MAX(rt0.c4) THEN ((rt0.c2)>(COUNT(*))) ELSE (((''))<=((AVG(v0.c0)))) END)) UNION ALL SELECT rt0.c2, rt0.c3, rt0.c1, v0.c0 FROM v0, rt0 GROUP BY rt0.c2, rt0.c3, rt0.c1, v0.c0 HAVING ((CASE WHEN MAX(rt0.c4) THEN ((rt0.c2)>(COUNT(*))) ELSE (((''))<=((AVG(v0.c0)))) END) ISNULL);
SELECT rt0.c2, rt0.c3, rt0.c1, v0.c0 FROM v0, rt0 GROUP BY rt0.c2, rt0.c3, rt0.c1, v0.c0;
SELECT ALL * FROM v0;
SELECT ALL * FROM v0 WHERE ('C+/{\n}97') UNION ALL SELECT ALL * FROM v0 WHERE ((NOT ('C+/{\n}97'))) UNION ALL SELECT ALL * FROM v0 WHERE ((('C+/{\n}97') ISNULL));
SELECT ALL * FROM v0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (CASE WHEN (+ (rt0.c4)) THEN ((rt0.c3)<(rt0.c2)) ELSE CASE rt0.c1  WHEN '1156587717' THEN rt0.c0 WHEN rt0.c4 THEN rt0.c4 WHEN '545859878' THEN rt0.c1 END END) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (CASE WHEN (+ (rt0.c4)) THEN ((rt0.c3)<(rt0.c2)) ELSE CASE rt0.c1  WHEN '1156587717' THEN rt0.c0 WHEN rt0.c4 THEN rt0.c4 WHEN '545859878' THEN rt0.c1 END END))) UNION SELECT DISTINCT * FROM rt0 WHERE (((CASE WHEN (+ (rt0.c4)) THEN ((rt0.c3)<(rt0.c2)) ELSE CASE rt0.c1  WHEN '1156587717' THEN rt0.c0 WHEN rt0.c4 THEN rt0.c4 WHEN '545859878' THEN rt0.c1 END END) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c2, rt0.c3, rt0.c0, rt0.c1 FROM v0, rt0 GROUP BY rt0.c2, rt0.c3, rt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c3, rt0.c0, rt0.c1 FROM v0, rt0 WHERE (((((rt0.c2)|(rt0.c0)))=(((rt0.c4)>>(rt0.c4))))) GROUP BY rt0.c2, rt0.c3, rt0.c0, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c3, rt0.c0, rt0.c1 FROM v0, rt0 WHERE ((NOT (((((rt0.c2)|(rt0.c0)))==(((rt0.c4)>>(rt0.c4))))))) GROUP BY rt0.c2, rt0.c3, rt0.c0, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c3, rt0.c0, rt0.c1 FROM v0, rt0 WHERE (((((((rt0.c2)|(rt0.c0)))==(((rt0.c4)>>(rt0.c4))))) ISNULL)) GROUP BY rt0.c2, rt0.c3, rt0.c0, rt0.c1;
SELECT rt0.c2, rt0.c3, rt0.c0, rt0.c1 FROM v0, rt0 GROUP BY rt0.c2, rt0.c3, rt0.c0, rt0.c1;
SELECT v0.c0, rt0.c1, rt0.c0, rt0.c3, rt0.c4 FROM rt0, v0 GROUP BY v0.c0, rt0.c1, rt0.c0, rt0.c3, rt0.c4;
SELECT ALL v0.c0, rt0.c1, rt0.c0, rt0.c3, rt0.c4 FROM rt0, v0 GROUP BY v0.c0, rt0.c1, rt0.c0, rt0.c3, rt0.c4 HAVING 0.07292963431941857 UNION ALL SELECT ALL v0.c0, rt0.c1, rt0.c0, rt0.c3, rt0.c4 FROM rt0, v0 GROUP BY v0.c0, rt0.c1, rt0.c0, rt0.c3, rt0.c4 HAVING (NOT (0.07292963431941857)) UNION ALL SELECT v0.c0, rt0.c1, rt0.c0, rt0.c3, rt0.c4 FROM rt0, v0 GROUP BY v0.c0, rt0.c1, rt0.c0, rt0.c3, rt0.c4 HAVING ((0.07292963431941857) ISNULL);
SELECT v0.c0, rt0.c1, rt0.c0, rt0.c3, rt0.c4 FROM rt0, v0 GROUP BY v0.c0, rt0.c1, rt0.c0, rt0.c3, rt0.c4;
SELECT ALL v0.c0, rt0.c1, rt0.c0, rt0.c3, rt0.c4 FROM rt0, v0 GROUP BY v0.c0, rt0.c1, rt0.c0, rt0.c3, rt0.c4 HAVING 0.07292963431941857 UNION ALL SELECT ALL v0.c0, rt0.c1, rt0.c0, rt0.c3, rt0.c4 FROM rt0, v0 GROUP BY v0.c0, rt0.c1, rt0.c0, rt0.c3, rt0.c4 HAVING (NOT (0.07292963431941857)) UNION ALL SELECT v0.c0, rt0.c1, rt0.c0, rt0.c3, rt0.c4 FROM rt0, v0 GROUP BY v0.c0, rt0.c1, rt0.c0, rt0.c3, rt0.c4 HAVING ((0.07292963431941857) ISNULL);
SELECT v0.c0, rt0.c1, rt0.c0, rt0.c3, rt0.c4 FROM rt0, v0 GROUP BY v0.c0, rt0.c1, rt0.c0, rt0.c3, rt0.c4;
SELECT * FROM v0;
SELECT ALL * FROM v0 WHERE (CAST(v0.c0 COLLATE BINARY AS BLOB)) UNION ALL SELECT ALL * FROM v0 WHERE ((NOT (CAST(v0.c0 COLLATE BINARY AS BLOB)))) UNION ALL SELECT ALL * FROM v0 WHERE (((CAST(v0.c0 COLLATE BINARY AS BLOB)) ISNULL));
SELECT * FROM v0;
SELECT DISTINCT * FROM rt0, v0;
SELECT DISTINCT * FROM rt0, v0 WHERE (CASE WHEN CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c2 END THEN (((rt0.c0, v0.c0, rt0.c0))<=((rt0.c3, rt0.c3, rt0.c0))) ELSE NULLIF(0.2740942656479579, rt0.c0) END) UNION SELECT DISTINCT * FROM rt0, v0 WHERE ((NOT (CASE WHEN CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c2 END THEN (((rt0.c0, v0.c0, rt0.c0))<=((rt0.c3, rt0.c3, rt0.c0))) ELSE NULLIF(0.2740942656479579, rt0.c0) END))) UNION SELECT DISTINCT * FROM rt0, v0 WHERE (((CASE WHEN CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c2 END THEN (((rt0.c0, v0.c0, rt0.c0))<=((rt0.c3, rt0.c3, rt0.c0))) ELSE NULLIF(0.2740942656479579, rt0.c0) END) ISNULL));
SELECT DISTINCT * FROM rt0, v0;
SELECT rt0.c3 FROM v0, rt0 GROUP BY rt0.c3;
SELECT rt0.c3 FROM v0, rt0 WHERE (CAST(((((((((((((v0.c0)OR(rt0.c0)))OR(rt0.c4)))AND(rt0.c4)))AND(rt0.c0)))OR(rt0.c4)))OR(rt0.c2)) AS BLOB)) GROUP BY rt0.c3 UNION SELECT rt0.c3 FROM v0, rt0 WHERE ((NOT (CAST(((((((((((((v0.c0)OR(rt0.c0)))OR(rt0.c4)))AND(rt0.c4)))AND(rt0.c0)))OR(rt0.c4)))OR(rt0.c2)) AS BLOB)))) GROUP BY rt0.c3 UNION SELECT rt0.c3 FROM v0, rt0 WHERE (((CAST(((((((((((((v0.c0)OR(rt0.c0)))OR(rt0.c4)))AND(rt0.c4)))AND(rt0.c0)))OR(rt0.c4)))OR(rt0.c2)) AS BLOB)) ISNULL)) GROUP BY rt0.c3;
SELECT rt0.c3 FROM v0, rt0 GROUP BY rt0.c3;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING TOTAL((GROUP_CONCAT(v0.c0) IN ())) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (TOTAL((GROUP_CONCAT(v0.c0) IN ())))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((TOTAL((GROUP_CONCAT(v0.c0) IN ()))) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING TOTAL((GROUP_CONCAT(v0.c0) IN ())) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (TOTAL((GROUP_CONCAT(v0.c0) IN ())))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((TOTAL((GROUP_CONCAT(v0.c0) IN ()))) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT * FROM v0;
SELECT * FROM v0 WHERE (x'') UNION ALL SELECT * FROM v0 WHERE ((NOT (x''))) UNION ALL SELECT * FROM v0 WHERE (((x'') ISNULL));
SELECT * FROM v0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (CASE WHEN (v0.c0 IN (v0.c0)) THEN ((v0.c0) IS TRUE) WHEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) THEN ((v0.c0)<<(v0.c0)) WHEN ((v0.c0)OR(9.62440873E8)) THEN ((v0.c0)+(v0.c0)) ELSE ((((v0.c0)OR(v0.c0)))OR(v0.c0)) END) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (CASE WHEN (v0.c0 IN (v0.c0)) THEN ((v0.c0) IS TRUE) WHEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) THEN ((v0.c0)<<(v0.c0)) WHEN ((v0.c0)OR(9.62440873E8)) THEN ((v0.c0)+(v0.c0)) ELSE ((((v0.c0)OR(v0.c0)))OR(v0.c0)) END))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((CASE WHEN (v0.c0 IN (v0.c0)) THEN ((v0.c0) IS TRUE) WHEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) THEN ((v0.c0)<<(v0.c0)) WHEN ((v0.c0)OR(9.62440873E8)) THEN ((v0.c0)+(v0.c0)) ELSE ((((v0.c0)OR(v0.c0)))OR(v0.c0)) END) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT ALL rt0.c1, v0.c0, rt0.c3, rt0.c0, rt0.c4 FROM v0, rt0 GROUP BY rt0.c1, v0.c0, rt0.c3, rt0.c0, rt0.c4;
SELECT rt0.c1, v0.c0, rt0.c3, rt0.c0, rt0.c4 FROM v0, rt0 WHERE ((((NOT (rt0.c1)))OR(((v0.c0)>>(rt0.c0))))) GROUP BY rt0.c1, v0.c0, rt0.c3, rt0.c0, rt0.c4 UNION SELECT ALL rt0.c1, v0.c0, rt0.c3, rt0.c0, rt0.c4 FROM v0, rt0 WHERE ((NOT ((((NOT (rt0.c1)))OR(((v0.c0)>>(rt0.c0))))))) GROUP BY rt0.c1, v0.c0, rt0.c3, rt0.c0, rt0.c4 UNION SELECT ALL rt0.c1, v0.c0, rt0.c3, rt0.c0, rt0.c4 FROM v0, rt0 WHERE ((((((NOT (rt0.c1)))OR(((v0.c0)>>(rt0.c0))))) ISNULL)) GROUP BY rt0.c1, v0.c0, rt0.c3, rt0.c0, rt0.c4;
SELECT ALL rt0.c1, v0.c0, rt0.c3, rt0.c0, rt0.c4 FROM v0, rt0 GROUP BY rt0.c1, v0.c0, rt0.c3, rt0.c0, rt0.c4;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING MIN(v0.c0) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (MIN(v0.c0))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((MIN(v0.c0)) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING MIN(v0.c0) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (MIN(v0.c0))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((MIN(v0.c0)) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL * FROM v0;
SELECT * FROM v0 WHERE (CASE x''  WHEN v0.c0 COLLATE NOCASE THEN ((v0.c0) ISNULL) END) UNION ALL SELECT ALL * FROM v0 WHERE ((NOT (CASE x''  WHEN v0.c0 COLLATE NOCASE THEN ((v0.c0) ISNULL) END))) UNION ALL SELECT * FROM v0 WHERE (((CASE x''  WHEN v0.c0 COLLATE NOCASE THEN ((v0.c0) ISNULL) END) ISNULL));
SELECT ALL * FROM v0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (((CAST(v0.c0 AS REAL)) NOT BETWEEN ((+ (v0.c0))) AND (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (((CAST(v0.c0 AS REAL)) NOT BETWEEN ((+ (v0.c0))) AND (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))))) UNION SELECT DISTINCT * FROM v0 WHERE (((((CAST(v0.c0 AS REAL)) NOT BETWEEN ((+ (v0.c0))) AND (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (((((((v0.c0) NOT BETWEEN (v0.c0) AND ('^EGI\n.rm')))AND(((v0.c0)LIKE('-1811016172')))))OR(((v0.c0)||(v0.c0))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (((((((v0.c0) NOT BETWEEN (v0.c0) AND ('^EGI\n.rm')))AND(((v0.c0)LIKE('-1811016172')))))OR(((v0.c0)||(v0.c0))))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((((((((v0.c0) NOT BETWEEN (v0.c0) AND ('^EGI\n.rm')))AND(((v0.c0)LIKE('-1811016172')))))OR(((v0.c0)||(v0.c0))))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT rt0.c3, rt0.c0, rt0.c1 FROM rt0, v0 GROUP BY rt0.c3, rt0.c0, rt0.c1;
SELECT rt0.c3, rt0.c0, rt0.c1 FROM rt0, v0 GROUP BY rt0.c3, rt0.c0, rt0.c1 HAVING CASE WHEN (((v0.c0))!=((rt0.c3))) THEN ((AVG(v0.c0)) NOT BETWEEN (TOTAL(rt0.c2)) AND (COUNT(rt0.c0))) WHEN GROUP_CONCAT(TOTAL(rt0.c1)) THEN TOTAL(AVG(rt0.c2)) WHEN COUNT(v0.c0) THEN load_extension(TOTAL(rt0.c0)) END UNION ALL SELECT ALL rt0.c3, rt0.c0, rt0.c1 FROM rt0, v0 GROUP BY rt0.c3, rt0.c0, rt0.c1 HAVING (NOT (CASE WHEN (((v0.c0))!=((rt0.c3))) THEN ((AVG(v0.c0)) NOT BETWEEN (TOTAL(rt0.c2)) AND (COUNT(rt0.c0))) WHEN GROUP_CONCAT(TOTAL(rt0.c1)) THEN TOTAL(AVG(rt0.c2)) WHEN COUNT(v0.c0) THEN load_extension(TOTAL(rt0.c0)) END)) UNION ALL SELECT rt0.c3, rt0.c0, rt0.c1 FROM rt0, v0 GROUP BY rt0.c3, rt0.c0, rt0.c1 HAVING ((CASE WHEN (((v0.c0))<>((rt0.c3))) THEN ((AVG(v0.c0)) NOT BETWEEN (TOTAL(rt0.c2)) AND (COUNT(rt0.c0))) WHEN GROUP_CONCAT(TOTAL(rt0.c1)) THEN TOTAL(AVG(rt0.c2)) WHEN COUNT(v0.c0) THEN load_extension(TOTAL(rt0.c0)) END) ISNULL);
SELECT * FROM v0, rt0;
SELECT * FROM v0, rt0 WHERE ((- (rt0.c4 COLLATE RTRIM))) UNION ALL SELECT * FROM v0, rt0 WHERE ((NOT ((- (rt0.c4 COLLATE RTRIM))))) UNION ALL SELECT ALL * FROM v0, rt0 WHERE ((((- (rt0.c4 COLLATE RTRIM))) ISNULL));
SELECT * FROM v0, rt0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (((((TYPEOF(DISTINCT v0.c0))OR(((v0.c0) ISNULL))))AND(v0.c0 COLLATE NOCASE))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (((((TYPEOF(DISTINCT v0.c0))OR(((v0.c0) ISNULL))))AND(v0.c0 COLLATE NOCASE))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((((((TYPEOF(DISTINCT v0.c0))OR(((v0.c0) ISNULL))))AND(v0.c0 COLLATE NOCASE))) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT v0.c0, rt0.c2, rt0.c4, rt0.c0 FROM v0, rt0 GROUP BY v0.c0, rt0.c2, rt0.c4, rt0.c0;
SELECT ALL v0.c0, rt0.c2, rt0.c4, rt0.c0 FROM v0 NOT INDEXED, rt0 WHERE (rt0.c0) GROUP BY v0.c0, rt0.c2, rt0.c4, rt0.c0 UNION SELECT v0.c0, rt0.c2, rt0.c4, rt0.c0 FROM v0, rt0 WHERE ((NOT (rt0.c0))) GROUP BY v0.c0, rt0.c2, rt0.c4, rt0.c0 UNION SELECT v0.c0, rt0.c2, rt0.c4, rt0.c0 FROM v0, rt0 WHERE (((rt0.c0) ISNULL)) GROUP BY v0.c0, rt0.c2, rt0.c4, rt0.c0;
SELECT v0.c0, rt0.c2, rt0.c4, rt0.c0 FROM v0, rt0 GROUP BY v0.c0, rt0.c2, rt0.c4, rt0.c0;
SELECT rt0.c2, v0.c0, rt0.c0 FROM v0, rt0 GROUP BY rt0.c2, v0.c0, rt0.c0;
SELECT ALL rt0.c2, v0.c0, rt0.c0 FROM v0, rt0 GROUP BY rt0.c2, v0.c0, rt0.c0 HAVING TOTAL(rt0.c4 COLLATE BINARY) UNION ALL SELECT ALL rt0.c2, v0.c0, rt0.c0 FROM v0, rt0 GROUP BY rt0.c2, v0.c0, rt0.c0 HAVING (NOT (TOTAL(rt0.c4 COLLATE BINARY))) UNION ALL SELECT rt0.c2, v0.c0, rt0.c0 FROM v0, rt0 GROUP BY rt0.c2, v0.c0, rt0.c0 HAVING ((TOTAL(rt0.c4 COLLATE BINARY)) ISNULL);
SELECT rt0.c2, v0.c0, rt0.c0 FROM v0, rt0 GROUP BY rt0.c2, v0.c0, rt0.c0;
SELECT ALL rt0.c2, v0.c0, rt0.c0 FROM v0, rt0 GROUP BY rt0.c2, v0.c0, rt0.c0 HAVING TOTAL(rt0.c4 COLLATE BINARY) UNION ALL SELECT ALL rt0.c2, v0.c0, rt0.c0 FROM v0, rt0 GROUP BY rt0.c2, v0.c0, rt0.c0 HAVING (NOT (TOTAL(rt0.c4 COLLATE BINARY))) UNION ALL SELECT rt0.c2, v0.c0, rt0.c0 FROM v0, rt0 GROUP BY rt0.c2, v0.c0, rt0.c0 HAVING ((TOTAL(rt0.c4 COLLATE BINARY)) ISNULL);
SELECT rt0.c2, v0.c0, rt0.c0 FROM v0, rt0 GROUP BY rt0.c2, v0.c0, rt0.c0;
SELECT ALL * FROM v0;
SELECT * FROM v0 WHERE ((((((v0.c0))<((v0.c0)))) ISNULL)) UNION ALL SELECT * FROM v0 WHERE ((NOT ((((((v0.c0))<((v0.c0)))) ISNULL)))) UNION ALL SELECT * FROM v0 WHERE ((((((((v0.c0))<((v0.c0)))) ISNULL)) ISNULL));
SELECT ALL * FROM v0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE ('-2088785983') UNION SELECT DISTINCT * FROM v0 WHERE ((NOT ('-2088785983'))) UNION SELECT DISTINCT * FROM v0 WHERE ((('-2088785983') ISNULL));
SELECT DISTINCT * FROM v0;
SELECT ALL rt0.c1, v0.c0 FROM rt0, v0 GROUP BY rt0.c1, v0.c0;
SELECT rt0.c1, v0.c0 FROM rt0, v0 WHERE (rt0.c3) GROUP BY rt0.c1, v0.c0 UNION SELECT rt0.c1, v0.c0 FROM rt0, v0 WHERE ((NOT (rt0.c3))) GROUP BY rt0.c1, v0.c0 UNION SELECT ALL rt0.c1, v0.c0 FROM rt0, v0 WHERE (((rt0.c3) ISNULL)) GROUP BY rt0.c1, v0.c0;
SELECT ALL rt0.c1, v0.c0 FROM rt0, v0 GROUP BY rt0.c1, v0.c0;
SELECT rt0.c2 FROM v0, rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM v0, rt0 GROUP BY rt0.c2 HAVING SUM((- (TOTAL(rt0.c1)))) UNION ALL SELECT ALL rt0.c2 FROM v0, rt0 GROUP BY rt0.c2 HAVING (NOT (SUM((- (TOTAL(rt0.c1)))))) UNION ALL SELECT ALL rt0.c2 FROM v0 NOT INDEXED, rt0 GROUP BY rt0.c2 HAVING ((SUM((- (TOTAL(rt0.c1))))) ISNULL);
SELECT ALL * FROM rt0, v0;
SELECT * FROM rt0, v0 WHERE ((((CASE WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c1 END))>((((rt0.c3)<=(rt0.c4)))))) UNION ALL SELECT * FROM rt0, v0 WHERE ((NOT ((((CASE WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c1 END))>((((rt0.c3)<=(rt0.c4)))))))) UNION ALL SELECT * FROM rt0, v0 WHERE ((((((CASE WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c1 END))>((((rt0.c3)<=(rt0.c4)))))) ISNULL));
SELECT ALL * FROM rt0, v0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((((rt0.c2) BETWEEN (NULL) AND (rt0.c0)) IN ())) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((((rt0.c2) BETWEEN (NULL) AND (rt0.c0)) IN ())))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((((rt0.c2) BETWEEN (NULL) AND (rt0.c0)) IN ())) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 WHERE ((((rt0.c4) NOT NULL) IN ())) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0 WHERE ((NOT ((((rt0.c4) NOT NULL) IN ())))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0 WHERE ((((((rt0.c4) NOT NULL) IN ())) ISNULL)) GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c4 FROM rt0 GROUP BY rt0.c4;
SELECT rt0.c4 FROM rt0 GROUP BY rt0.c4 HAVING COUNT(*) COLLATE BINARY UNION ALL SELECT rt0.c4 FROM rt0 GROUP BY rt0.c4 HAVING (NOT (COUNT(*) COLLATE BINARY)) UNION ALL SELECT rt0.c4 FROM rt0 GROUP BY rt0.c4 HAVING ((COUNT(*) COLLATE BINARY) ISNULL);
SELECT rt0.c4 FROM rt0 GROUP BY rt0.c4;
SELECT rt0.c4 FROM rt0 GROUP BY rt0.c4 HAVING COUNT(*) COLLATE BINARY UNION ALL SELECT rt0.c4 FROM rt0 GROUP BY rt0.c4 HAVING (NOT (COUNT(*) COLLATE BINARY)) UNION ALL SELECT rt0.c4 FROM rt0 GROUP BY rt0.c4 HAVING ((COUNT(*) COLLATE BINARY) ISNULL);
SELECT rt0.c4 FROM rt0 GROUP BY rt0.c4;
SELECT MIN(CASE WHEN x'e970' THEN ((rt0.c3)|(rt0.c0)) ELSE MIN(rt0.c4, rt0.c1) END) FROM rt0;
SELECT ALL * FROM v0 RIGHT OUTER JOIN rt0 ON ((((rt0.c3)<<(rt0.c4))) NOT NULL);
SELECT * FROM v0 RIGHT OUTER JOIN rt0 ON ((((rt0.c3)<<(rt0.c4))) NOT NULL) WHERE (CASE WHEN QUOTE(rt0.c4) THEN CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c4 END END) UNION ALL SELECT * FROM v0 RIGHT OUTER JOIN rt0 ON ((((rt0.c3)<<(rt0.c4))) NOT NULL) WHERE ((NOT (CASE WHEN QUOTE(rt0.c4) THEN CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c4 END END))) UNION ALL SELECT * FROM v0 RIGHT OUTER JOIN rt0 ON ((((rt0.c3)<<(rt0.c4))) NOT NULL) WHERE (((CASE WHEN QUOTE(rt0.c4) THEN CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c4 END END) ISNULL));
SELECT ALL * FROM v0 RIGHT OUTER JOIN rt0 ON ((((rt0.c3)<<(rt0.c4))) NOT NULL);
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (CASE (+ (v0.c0))  WHEN x'' THEN ((((v0.c0)AND(v0.c0)))OR(v0.c0)) WHEN (- (v0.c0)) THEN v0.c0 WHEN ((((v0.c0)OR(v0.c0)))AND(v0.c0)) THEN CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END WHEN ((((v0.c0)AND(v0.c0)))AND(v0.c0)) THEN (v0.c0 IN ()) WHEN ((v0.c0)<<(x'3e34')) THEN ((x'') NOTNULL) ELSE x'a6793068' END) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (CASE (+ (v0.c0))  WHEN x'' THEN ((((v0.c0)AND(v0.c0)))OR(v0.c0)) WHEN (- (v0.c0)) THEN v0.c0 WHEN ((((v0.c0)OR(v0.c0)))AND(v0.c0)) THEN CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END WHEN ((((v0.c0)AND(v0.c0)))AND(v0.c0)) THEN (v0.c0 IN ()) WHEN ((v0.c0)<<(x'3e34')) THEN ((x'') NOTNULL) ELSE x'a6793068' END))) UNION SELECT DISTINCT * FROM v0 WHERE (((CASE (+ (v0.c0))  WHEN x'' THEN ((((v0.c0)AND(v0.c0)))OR(v0.c0)) WHEN (- (v0.c0)) THEN v0.c0 WHEN ((((v0.c0)OR(v0.c0)))AND(v0.c0)) THEN CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END WHEN ((((v0.c0)AND(v0.c0)))AND(v0.c0)) THEN (v0.c0 IN ()) WHEN ((v0.c0)<<(x'3e34')) THEN ((x'') NOTNULL) ELSE x'a6793068' END) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT rt0.c3, v0.c0, rt0.c1, rt0.c2, rt0.c4, rt0.c0 FROM rt0, v0 GROUP BY rt0.c3, v0.c0, rt0.c1, rt0.c2, rt0.c4, rt0.c0;
SELECT rt0.c3, v0.c0, rt0.c1, rt0.c2, rt0.c4, rt0.c0 FROM rt0, v0 WHERE ((- (CAST(rt0.c3 AS REAL)))) GROUP BY rt0.c3, v0.c0, rt0.c1, rt0.c2, rt0.c4, rt0.c0 UNION SELECT rt0.c3, v0.c0, rt0.c1, rt0.c2, rt0.c4, rt0.c0 FROM rt0, v0 WHERE ((NOT ((- (CAST(rt0.c3 AS REAL)))))) GROUP BY rt0.c3, v0.c0, rt0.c1, rt0.c2, rt0.c4, rt0.c0 UNION SELECT ALL rt0.c3, v0.c0, rt0.c1, rt0.c2, rt0.c4, rt0.c0 FROM rt0, v0 WHERE ((((- (CAST(rt0.c3 AS REAL)))) ISNULL)) GROUP BY rt0.c3, v0.c0, rt0.c1, rt0.c2, rt0.c4, rt0.c0;
SELECT rt0.c3, v0.c0, rt0.c1, rt0.c2, rt0.c4, rt0.c0 FROM rt0, v0 GROUP BY rt0.c3, v0.c0, rt0.c1, rt0.c2, rt0.c4, rt0.c0;
SELECT ALL rt0.c3, rt0.c1 FROM rt0 GROUP BY rt0.c3, rt0.c1;
SELECT rt0.c3, rt0.c1 FROM rt0 GROUP BY rt0.c3, rt0.c1 HAVING TOTAL(SUM(AVG(rt0.c2)) COLLATE RTRIM) UNION ALL SELECT ALL rt0.c3, rt0.c1 FROM rt0 GROUP BY rt0.c3, rt0.c1 HAVING (NOT (TOTAL(SUM(AVG(rt0.c2)) COLLATE RTRIM))) UNION ALL SELECT rt0.c3, rt0.c1 FROM rt0 GROUP BY rt0.c3, rt0.c1 HAVING ((TOTAL(SUM(AVG(rt0.c2)) COLLATE RTRIM)) ISNULL);
SELECT ALL rt0.c2, rt0.c1 FROM rt0;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 WHERE ((((+ (rt0.c0))) IS TRUE)) UNION ALL SELECT rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT ((((+ (rt0.c0))) IS TRUE)))) UNION ALL SELECT rt0.c2, rt0.c1 FROM rt0 WHERE ((((((+ (rt0.c0))) IS TRUE)) ISNULL));
SELECT ALL rt0.c2, rt0.c1 FROM rt0;
SELECT DISTINCT v0.c0, rt0.c1, rt0.c4, rt0.c3, rt0.c0, rt0.c2 FROM rt0, v0;
SELECT DISTINCT v0.c0, rt0.c1, rt0.c4, rt0.c3, rt0.c0, rt0.c2 FROM rt0, v0 WHERE ((~ ((rt0.c4 IN ())))) UNION SELECT DISTINCT v0.c0, rt0.c1, rt0.c4, rt0.c3, rt0.c0, rt0.c2 FROM rt0, v0 WHERE ((NOT ((~ ((rt0.c4 IN ())))))) UNION SELECT DISTINCT v0.c0, rt0.c1, rt0.c4, rt0.c3, rt0.c0, rt0.c2 FROM rt0, v0 WHERE ((((~ ((rt0.c4 IN ())))) ISNULL));
SELECT DISTINCT v0.c0, rt0.c1, rt0.c4, rt0.c3, rt0.c0, rt0.c2 FROM rt0, v0;
SELECT ALL rt0.c2, rt0.c0, v0.c0 FROM rt0, v0 GROUP BY rt0.c2, rt0.c0, v0.c0;
SELECT rt0.c2, rt0.c0, v0.c0 FROM rt0, v0 NOT INDEXED WHERE (((((((((((((rt0.c1)AND(v0.c0)))AND(rt0.c0)))OR(CAST(rt0.c1 AS NUMERIC))))AND(((((rt0.c0)AND(rt0.c4)))AND(rt0.c3)))))OR(((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c3)))))OR(((rt0.c0)-(rt0.c2))))) GROUP BY rt0.c2, rt0.c0, v0.c0 UNION SELECT rt0.c2, rt0.c0, v0.c0 FROM rt0, v0 WHERE ((NOT (((((((((((((rt0.c1)AND(v0.c0)))AND(rt0.c0)))OR(CAST(rt0.c1 AS NUMERIC))))AND(((((rt0.c0)AND(rt0.c4)))AND(rt0.c3)))))OR(((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c3)))))OR(((rt0.c0)-(rt0.c2))))))) GROUP BY rt0.c2, rt0.c0, v0.c0 UNION SELECT rt0.c2, rt0.c0, v0.c0 FROM rt0, v0 WHERE (((((((((((((((rt0.c1)AND(v0.c0)))AND(rt0.c0)))OR(CAST(rt0.c1 AS NUMERIC))))AND(((((rt0.c0)AND(rt0.c4)))AND(rt0.c3)))))OR(((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c3)))))OR(((rt0.c0)-(rt0.c2))))) ISNULL)) GROUP BY rt0.c2, rt0.c0, v0.c0;
SELECT ALL rt0.c2, rt0.c0, v0.c0 FROM rt0, v0 GROUP BY rt0.c2, rt0.c0, v0.c0;
SELECT rt0.c3, rt0.c0, rt0.c4, rt0.c1, rt0.c2, v0.c0 FROM rt0, v0 GROUP BY rt0.c3, rt0.c0, rt0.c4, rt0.c1, rt0.c2, v0.c0;
SELECT rt0.c3, rt0.c0, rt0.c4, rt0.c1, rt0.c2, v0.c0 FROM rt0, v0 GROUP BY rt0.c3, rt0.c0, rt0.c4, rt0.c1, rt0.c2, v0.c0 HAVING TOTAL(((((((((MAX(COUNT(*)))AND(x'')))OR(MIN(SUM(rt0.c4)))))AND(rt0.c2)))OR(SUM(TOTAL(SUM(MIN(MAX(AVG(COUNT(*)))))))))) UNION ALL SELECT ALL rt0.c3, rt0.c0, rt0.c4, rt0.c1, rt0.c2, v0.c0 FROM rt0, v0 GROUP BY rt0.c3, rt0.c0, rt0.c4, rt0.c1, rt0.c2, v0.c0 HAVING (NOT (TOTAL(((((((((MAX(COUNT(*)))AND(x'')))OR(MIN(SUM(rt0.c4)))))AND(rt0.c2)))OR(SUM(TOTAL(SUM(MIN(MAX(AVG(COUNT(*)))))))))))) UNION ALL SELECT ALL rt0.c3, rt0.c0, rt0.c4, rt0.c1, rt0.c2, v0.c0 FROM rt0, v0 GROUP BY rt0.c3, rt0.c0, rt0.c4, rt0.c1, rt0.c2, v0.c0 HAVING ((TOTAL(((((((((MAX(COUNT(*)))AND(x'')))OR(MIN(SUM(rt0.c4)))))AND(rt0.c2)))OR(SUM(TOTAL(SUM(MIN(MAX(AVG(COUNT(*))))))))))) ISNULL);
SELECT ALL * FROM v0;
SELECT ALL * FROM v0 WHERE ((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))) COLLATE BINARY) UNION ALL SELECT * FROM v0 WHERE ((NOT ((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))) COLLATE BINARY))) UNION ALL SELECT * FROM v0 WHERE ((((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))) COLLATE BINARY) ISNULL));
SELECT ALL * FROM v0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE ((COALESCE(DISTINCT v0.c0, NULL) IN (CAST(v0.c0 AS BLOB)))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT ((COALESCE(DISTINCT v0.c0, NULL) IN (CAST(v0.c0 AS BLOB)))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((((COALESCE(DISTINCT v0.c0, NULL) IN (CAST(v0.c0 AS BLOB)))) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT v0.c0, rt0.c3 FROM v0 INNER JOIN rt0 ON CASE ((rt0.c1) IS TRUE)  WHEN x'5651' COLLATE BINARY THEN (rt0.c2 IN ()) ELSE ((v0.c0)+(v0.c0)) END GROUP BY v0.c0, rt0.c3;
SELECT ALL v0.c0, rt0.c3 FROM v0 INNER JOIN rt0 ON CASE ((rt0.c1) IS TRUE)  WHEN x'5651' COLLATE BINARY THEN (rt0.c2 IN ()) ELSE ((v0.c0)+(v0.c0)) END WHERE (((rt0.c4 COLLATE BINARY)OR(CASE WHEN v0.c0 THEN rt0.c4 ELSE rt0.c2 END))) GROUP BY v0.c0, rt0.c3 UNION SELECT ALL v0.c0, rt0.c3 FROM v0 INNER JOIN rt0 ON CASE ((rt0.c1) IS TRUE)  WHEN x'5651' COLLATE BINARY THEN (rt0.c2 IN ()) ELSE ((v0.c0)+(v0.c0)) END WHERE ((NOT (((rt0.c4 COLLATE BINARY)OR(CASE WHEN v0.c0 THEN rt0.c4 ELSE rt0.c2 END))))) GROUP BY v0.c0, rt0.c3 UNION SELECT v0.c0, rt0.c3 FROM v0 INNER JOIN rt0 ON CASE ((rt0.c1) IS TRUE)  WHEN x'5651' COLLATE BINARY THEN (rt0.c2 IN ()) ELSE ((v0.c0)+(v0.c0)) END WHERE (((((rt0.c4 COLLATE BINARY)OR(CASE WHEN v0.c0 THEN rt0.c4 ELSE rt0.c2 END))) ISNULL)) GROUP BY v0.c0, rt0.c3;
SELECT v0.c0, rt0.c3 FROM v0 INNER JOIN rt0 ON CASE ((rt0.c1) IS TRUE)  WHEN x'5651' COLLATE BINARY THEN (rt0.c2 IN ()) ELSE ((v0.c0)+(v0.c0)) END GROUP BY v0.c0, rt0.c3;
SELECT ALL rt0.c4, v0.c0, rt0.c0 FROM v0, rt0 GROUP BY rt0.c4, v0.c0, rt0.c0;
SELECT ALL rt0.c4, v0.c0, rt0.c0 FROM v0, rt0 GROUP BY rt0.c4, v0.c0, rt0.c0 HAVING rt0.c3 UNION ALL SELECT ALL rt0.c4, v0.c0, rt0.c0 FROM v0, rt0 GROUP BY rt0.c4, v0.c0, rt0.c0 HAVING (NOT (rt0.c3)) UNION ALL SELECT rt0.c4, v0.c0, rt0.c0 FROM v0, rt0 GROUP BY rt0.c4, v0.c0, rt0.c0 HAVING ((rt0.c3) ISNULL);
SELECT ALL rt0.c4, v0.c0, rt0.c0 FROM v0, rt0 GROUP BY rt0.c4, v0.c0, rt0.c0;
SELECT ALL rt0.c4, v0.c0, rt0.c0 FROM v0, rt0 GROUP BY rt0.c4, v0.c0, rt0.c0 HAVING rt0.c3 UNION ALL SELECT ALL rt0.c4, v0.c0, rt0.c0 FROM v0, rt0 GROUP BY rt0.c4, v0.c0, rt0.c0 HAVING (NOT (rt0.c3)) UNION ALL SELECT rt0.c4, v0.c0, rt0.c0 FROM v0, rt0 GROUP BY rt0.c4, v0.c0, rt0.c0 HAVING ((rt0.c3) ISNULL);
SELECT ALL rt0.c4, v0.c0, rt0.c0 FROM v0, rt0 GROUP BY rt0.c4, v0.c0, rt0.c0;
SELECT ALL rt0.c0 FROM rt0;
SELECT rt0.c0 FROM rt0 WHERE ((((rt0.c2) NOTNULL) IN (0.6833985419013417))) UNION ALL SELECT rt0.c0 FROM rt0 WHERE ((NOT ((((rt0.c2) NOTNULL) IN (0.6833985419013417))))) UNION ALL SELECT rt0.c0 FROM rt0 WHERE ((((((rt0.c2) NOTNULL) IN (0.6833985419013417))) ISNULL));
SELECT ALL rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c4, rt0.c0, rt0.c3, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c4, rt0.c0, rt0.c3, rt0.c1 FROM rt0 WHERE ('901119823') UNION SELECT DISTINCT rt0.c4, rt0.c0, rt0.c3, rt0.c1 FROM rt0 WHERE ((NOT ('901119823'))) UNION SELECT DISTINCT rt0.c4, rt0.c0, rt0.c3, rt0.c1 FROM rt0 WHERE ((('901119823') ISNULL));
SELECT DISTINCT rt0.c4, rt0.c0, rt0.c3, rt0.c1 FROM rt0;
SELECT rt0.c2, rt0.c4, rt0.c3, rt0.c1, v0.c0 FROM rt0, v0 GROUP BY rt0.c2, rt0.c4, rt0.c3, rt0.c1, v0.c0;
SELECT rt0.c2, rt0.c4, rt0.c3, rt0.c1, v0.c0 FROM rt0, v0 WHERE ((((rt0.c0 IN (v0.c0, rt0.c3)))+((rt0.c0 IN ())))) GROUP BY rt0.c2, rt0.c4, rt0.c3, rt0.c1, v0.c0 UNION SELECT ALL rt0.c2, rt0.c4, rt0.c3, rt0.c1, v0.c0 FROM rt0, v0 WHERE ((NOT ((((rt0.c0 IN (v0.c0, rt0.c3)))+((rt0.c0 IN ())))))) GROUP BY rt0.c2, rt0.c4, rt0.c3, rt0.c1, v0.c0 UNION SELECT rt0.c2, rt0.c4, rt0.c3, rt0.c1, v0.c0 FROM rt0, v0 WHERE ((((((rt0.c0 IN (v0.c0, rt0.c3)))+((rt0.c0 IN ())))) ISNULL)) GROUP BY rt0.c2, rt0.c4, rt0.c3, rt0.c1, v0.c0;
SELECT rt0.c2, rt0.c4, rt0.c3, rt0.c1, v0.c0 FROM rt0, v0 GROUP BY rt0.c2, rt0.c4, rt0.c3, rt0.c1, v0.c0;
SELECT ALL v0.c0, rt0.c1 FROM v0, rt0 GROUP BY v0.c0, rt0.c1;
SELECT v0.c0, rt0.c1 FROM v0, rt0 GROUP BY v0.c0, rt0.c1 HAVING COUNT(*) UNION ALL SELECT ALL v0.c0, rt0.c1 FROM v0, rt0 GROUP BY v0.c0, rt0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT v0.c0, rt0.c1 FROM v0, rt0 GROUP BY v0.c0, rt0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT ALL v0.c0, rt0.c1 FROM v0, rt0 GROUP BY v0.c0, rt0.c1;
SELECT v0.c0, rt0.c1 FROM v0, rt0 GROUP BY v0.c0, rt0.c1 HAVING COUNT(*) UNION ALL SELECT ALL v0.c0, rt0.c1 FROM v0, rt0 GROUP BY v0.c0, rt0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT v0.c0, rt0.c1 FROM v0, rt0 GROUP BY v0.c0, rt0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT ALL v0.c0, rt0.c1 FROM v0, rt0 GROUP BY v0.c0, rt0.c1;
SELECT ALL * FROM v0, rt0;
SELECT * FROM v0, rt0 WHERE (CAST(rt0.c0 COLLATE RTRIM AS NUMERIC)) UNION ALL SELECT ALL * FROM v0, rt0 WHERE ((NOT (CAST(rt0.c0 COLLATE RTRIM AS NUMERIC)))) UNION ALL SELECT * FROM v0, rt0 WHERE (((CAST(rt0.c0 COLLATE RTRIM AS NUMERIC)) ISNULL));
SELECT ALL * FROM v0, rt0;
SELECT DISTINCT * FROM rt0, v0;
SELECT DISTINCT * FROM rt0 NOT INDEXED, v0 WHERE (rt0.c1) UNION SELECT DISTINCT * FROM rt0, v0 WHERE ((NOT (rt0.c1))) UNION SELECT DISTINCT * FROM rt0, v0 WHERE (((rt0.c1) ISNULL));
SELECT DISTINCT * FROM rt0, v0;
SELECT ALL v0.c0, rt0.c2, rt0.c3, rt0.c1, rt0.c0 FROM rt0, v0 GROUP BY v0.c0, rt0.c2, rt0.c3, rt0.c1, rt0.c0;
SELECT v0.c0, rt0.c2, rt0.c3, rt0.c1, rt0.c0 FROM rt0, v0 WHERE (((((rt0.c0)<=(rt0.c3)))|(CASE WHEN rt0.c4 THEN rt0.c1 END))) GROUP BY v0.c0, rt0.c2, rt0.c3, rt0.c1, rt0.c0 UNION SELECT v0.c0, rt0.c2, rt0.c3, rt0.c1, rt0.c0 FROM rt0, v0 WHERE ((NOT (((((rt0.c0)<=(rt0.c3)))|(CASE WHEN rt0.c4 THEN rt0.c1 END))))) GROUP BY v0.c0, rt0.c2, rt0.c3, rt0.c1, rt0.c0 UNION SELECT v0.c0, rt0.c2, rt0.c3, rt0.c1, rt0.c0 FROM rt0, v0 WHERE (((((((rt0.c0)<=(rt0.c3)))|(CASE WHEN rt0.c4 THEN rt0.c1 END))) ISNULL)) GROUP BY v0.c0, rt0.c2, rt0.c3, rt0.c1, rt0.c0;
SELECT ALL v0.c0, rt0.c2, rt0.c3, rt0.c1, rt0.c0 FROM rt0, v0 GROUP BY v0.c0, rt0.c2, rt0.c3, rt0.c1, rt0.c0;
SELECT rt0.c4, rt0.c1, v0.c0, rt0.c3 FROM v0 NOT INDEXED, rt0 GROUP BY rt0.c4, rt0.c1, v0.c0, rt0.c3;
SELECT ALL rt0.c4, rt0.c1, v0.c0, rt0.c3 FROM v0, rt0 GROUP BY rt0.c4, rt0.c1, v0.c0, rt0.c3 HAVING TOTAL(CASE rt0.c1  WHEN MAX(rt0.c4) THEN rt0.c1 WHEN rt0.c1 THEN AVG(v0.c0) WHEN rt0.c4 THEN MAX(rt0.c4) WHEN SUM(rt0.c2) THEN AVG(MAX(rt0.c0)) WHEN rt0.c0 THEN TOTAL(rt0.c2) ELSE SUM(AVG(rt0.c4)) END) UNION ALL SELECT ALL rt0.c4, rt0.c1, v0.c0, rt0.c3 FROM v0, rt0 GROUP BY rt0.c4, rt0.c1, v0.c0, rt0.c3 HAVING (NOT (TOTAL(CASE rt0.c1  WHEN MAX(rt0.c4) THEN rt0.c1 WHEN rt0.c1 THEN AVG(v0.c0) WHEN rt0.c4 THEN MAX(rt0.c4) WHEN SUM(rt0.c2) THEN AVG(MAX(rt0.c0)) WHEN rt0.c0 THEN TOTAL(rt0.c2) ELSE SUM(AVG(rt0.c4)) END))) UNION ALL SELECT ALL rt0.c4, rt0.c1, v0.c0, rt0.c3 FROM v0, rt0 GROUP BY rt0.c4, rt0.c1, v0.c0, rt0.c3 HAVING ((TOTAL(CASE rt0.c1  WHEN MAX(rt0.c4) THEN rt0.c1 WHEN rt0.c1 THEN AVG(v0.c0) WHEN rt0.c4 THEN MAX(rt0.c4) WHEN SUM(rt0.c2) THEN AVG(MAX(rt0.c0)) WHEN rt0.c0 THEN TOTAL(rt0.c2) ELSE SUM(AVG(rt0.c4)) END)) ISNULL);
SELECT SUM(((((0.38550001728596095)/(0.28997253039960635))) IS TRUE)) FROM v0 ORDER BY (((v0.c0)>=(v0.c0)) IN ())  NULLS FIRST;
SELECT ALL * FROM v0 NOT INDEXED, rt0;
SELECT ALL * FROM v0, rt0 WHERE (((((rt0.c1)OR(v0.c0)))OR(rt0.c3)) COLLATE BINARY) ORDER BY CAST((rt0.c2 IN ()) AS NUMERIC) ASC, CASE ((rt0.c2)&(rt0.c2))  WHEN ((rt0.c3) IS TRUE) THEN ((((((((rt0.c1)OR(rt0.c3)))OR(rt0.c1)))OR(rt0.c0)))OR(rt0.c1)) WHEN (rt0.c3 IN ()) THEN ((((v0.c0)AND(rt0.c1)))AND(rt0.c1)) WHEN rt0.c3 THEN rt0.c4 COLLATE BINARY END ASC;
SELECT ALL * FROM v0, rt0 WHERE ((NOT (((((rt0.c1)OR(v0.c0)))OR(rt0.c3)) COLLATE BINARY))) ORDER BY CAST((rt0.c2 IN ()) AS NUMERIC) ASC, CASE ((rt0.c2)&(rt0.c2))  WHEN ((rt0.c3) IS TRUE) THEN ((((((((rt0.c1)OR(rt0.c3)))OR(rt0.c1)))OR(rt0.c0)))OR(rt0.c1)) WHEN (rt0.c3 IN ()) THEN ((((v0.c0)AND(rt0.c1)))AND(rt0.c1)) WHEN rt0.c3 THEN rt0.c4 COLLATE BINARY END ASC;
SELECT * FROM v0, rt0 WHERE (((((((rt0.c1)OR(v0.c0)))OR(rt0.c3)) COLLATE BINARY) ISNULL)) ORDER BY CAST((rt0.c2 IN ()) AS NUMERIC) ASC, CASE ((rt0.c2)&(rt0.c2))  WHEN ((rt0.c3) IS TRUE) THEN ((((((((rt0.c1)OR(rt0.c3)))OR(rt0.c1)))OR(rt0.c0)))OR(rt0.c1)) WHEN (rt0.c3 IN ()) THEN ((((v0.c0)AND(rt0.c1)))AND(rt0.c1)) WHEN rt0.c3 THEN rt0.c4 COLLATE BINARY END ASC;
SELECT ALL * FROM v0 NOT INDEXED, rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((CASE WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c4 THEN rt0.c2 END IN (((rt0.c1)GLOB(rt0.c2))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((CASE WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c4 THEN rt0.c2 END IN (((rt0.c1)GLOB(rt0.c2))))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((CASE WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c4 THEN rt0.c2 END IN (((rt0.c1)GLOB(rt0.c2))))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE ((((v0.c0)) BETWEEN ((CASE v0.c0  WHEN v0.c0 THEN v0.c0 END)) AND ((((v0.c0) NOTNULL))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT ((((v0.c0)) BETWEEN ((CASE v0.c0  WHEN v0.c0 THEN v0.c0 END)) AND ((((v0.c0) NOTNULL))))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((((((v0.c0)) BETWEEN ((CASE v0.c0  WHEN v0.c0 THEN v0.c0 END)) AND ((((v0.c0) NOTNULL))))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT rt0.c0, rt0.c4, v0.c0, rt0.c1, rt0.c3 FROM rt0, v0 GROUP BY rt0.c0, rt0.c4, v0.c0, rt0.c1, rt0.c3;
SELECT ALL rt0.c0, rt0.c4, v0.c0, rt0.c1, rt0.c3 FROM rt0, v0 GROUP BY rt0.c0, rt0.c4, v0.c0, rt0.c1, rt0.c3 HAVING SUM(CASE rt0.c0  WHEN MAX(TOTAL(MAX(rt0.c0))) THEN rt0.c1 WHEN MAX(rt0.c2) THEN AVG(rt0.c2) WHEN '1942628073' THEN rt0.c4 ELSE AVG(rt0.c1) END) UNION ALL SELECT rt0.c0, rt0.c4, v0.c0, rt0.c1, rt0.c3 FROM rt0, v0 GROUP BY rt0.c0, rt0.c4, v0.c0, rt0.c1, rt0.c3 HAVING (NOT (SUM(CASE rt0.c0  WHEN MAX(TOTAL(MAX(rt0.c0))) THEN rt0.c1 WHEN MAX(rt0.c2) THEN AVG(rt0.c2) WHEN '1942628073' THEN rt0.c4 ELSE AVG(rt0.c1) END))) UNION ALL SELECT rt0.c0, rt0.c4, v0.c0, rt0.c1, rt0.c3 FROM rt0, v0 GROUP BY rt0.c0, rt0.c4, v0.c0, rt0.c1, rt0.c3 HAVING ((SUM(CASE rt0.c0  WHEN MAX(TOTAL(MAX(rt0.c0))) THEN rt0.c1 WHEN MAX(rt0.c2) THEN AVG(rt0.c2) WHEN '1942628073' THEN rt0.c4 ELSE AVG(rt0.c1) END)) ISNULL);
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE ((~ (x'f046')) COLLATE RTRIM) UNION ALL SELECT * FROM rt0 WHERE ((NOT ((~ (x'f046')) COLLATE RTRIM))) UNION ALL SELECT * FROM rt0 WHERE ((((~ (x'f046')) COLLATE RTRIM) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT * FROM v0 LEFT OUTER JOIN rt0 ON (((((~ (v0.c0)))OR(x'758e')))AND(((v0.c0) NOTNULL)));
SELECT DISTINCT * FROM v0 LEFT OUTER JOIN rt0 ON (((((~ (v0.c0)))OR(x'758e')))AND(((v0.c0) NOTNULL))) WHERE (CASE CASE rt0.c4  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c2 THEN v0.c0 ELSE rt0.c2 END  WHEN ((rt0.c1)||(rt0.c3)) THEN (rt0.c0 IN ()) ELSE rt0.c4 END) UNION SELECT DISTINCT * FROM v0 LEFT OUTER JOIN rt0 ON (((((~ (v0.c0)))OR(x'758e')))AND(((v0.c0) NOTNULL))) WHERE ((NOT (CASE CASE rt0.c4  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c2 THEN v0.c0 ELSE rt0.c2 END  WHEN ((rt0.c1)||(rt0.c3)) THEN (rt0.c0 IN ()) ELSE rt0.c4 END))) UNION SELECT DISTINCT * FROM v0 NOT INDEXED LEFT OUTER JOIN rt0 ON (((((~ (v0.c0)))OR(x'758e')))AND(((v0.c0) NOTNULL))) WHERE (((CASE CASE rt0.c4  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c2 THEN v0.c0 ELSE rt0.c2 END  WHEN ((rt0.c1)||(rt0.c3)) THEN (rt0.c0 IN ()) ELSE rt0.c4 END) ISNULL));
SELECT DISTINCT * FROM v0 LEFT OUTER JOIN rt0 ON (((((~ (v0.c0)))OR(x'758e')))AND(((v0.c0) NOTNULL)));
SELECT v0.c0, rt0.c1 FROM v0, rt0 NOT INDEXED GROUP BY v0.c0, rt0.c1;
SELECT v0.c0, rt0.c1 FROM v0 NOT INDEXED, rt0 WHERE (CASE WHEN (- (rt0.c4)) THEN ((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c1)) END) GROUP BY v0.c0, rt0.c1 UNION SELECT ALL v0.c0, rt0.c1 FROM v0, rt0 WHERE ((NOT (CASE WHEN (- (rt0.c4)) THEN ((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c1)) END))) GROUP BY v0.c0, rt0.c1 UNION SELECT v0.c0, rt0.c1 FROM v0, rt0 WHERE (((CASE WHEN (- (rt0.c4)) THEN ((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c1)) END) ISNULL)) GROUP BY v0.c0, rt0.c1;
SELECT v0.c0, rt0.c1 FROM v0, rt0 NOT INDEXED GROUP BY v0.c0, rt0.c1;
SELECT rt0.c4, rt0.c3 FROM v0 FULL OUTER JOIN rt0 ON CAST((v0.c0 IN ()) AS NUMERIC) GROUP BY rt0.c4, rt0.c3;
SELECT rt0.c4, rt0.c3 FROM v0 FULL OUTER JOIN rt0 ON CAST((v0.c0 IN ()) AS NUMERIC) GROUP BY rt0.c4, rt0.c3 HAVING ((COUNT(*)) BETWEEN (MIN(SUM(rt0.c0))) AND (MIN(rt0.c1))) UNION ALL SELECT ALL rt0.c4, rt0.c3 FROM v0 FULL OUTER JOIN rt0 ON CAST((v0.c0 IN ()) AS NUMERIC) GROUP BY rt0.c4, rt0.c3 HAVING (NOT (((COUNT(*)) BETWEEN (MIN(SUM(rt0.c0))) AND (MIN(rt0.c1))))) UNION ALL SELECT ALL rt0.c4, rt0.c3 FROM v0 FULL OUTER JOIN rt0 ON CAST((v0.c0 IN ()) AS NUMERIC) GROUP BY rt0.c4, rt0.c3 HAVING ((((COUNT(*)) BETWEEN (MIN(SUM(rt0.c0))) AND (MIN(rt0.c1)))) ISNULL);
SELECT * FROM v0;
SELECT ALL * FROM v0 WHERE ((+ (((v0.c0)<=(v0.c0))))) UNION ALL SELECT * FROM v0 WHERE ((NOT ((+ (((v0.c0)<=(v0.c0))))))) UNION ALL SELECT * FROM v0 WHERE ((((+ (((v0.c0)<=(v0.c0))))) ISNULL));
SELECT * FROM v0;
SELECT DISTINCT rt0.c0, rt0.c3 FROM rt0 RIGHT OUTER JOIN v0 ON ((v0.c0) BETWEEN (rt0.c4) AND (v0.c0)) COLLATE BINARY;
SELECT DISTINCT rt0.c0, rt0.c3 FROM rt0 RIGHT OUTER JOIN v0 ON ((v0.c0) BETWEEN (rt0.c4) AND (v0.c0)) COLLATE BINARY WHERE (LOWER(((((((((NULL)AND(rt0.c4)))AND(rt0.c4)))OR(1.192450621E9)))AND(rt0.c3)))) UNION SELECT DISTINCT rt0.c0, rt0.c3 FROM rt0 RIGHT OUTER JOIN v0 ON ((v0.c0) BETWEEN (rt0.c4) AND (v0.c0)) COLLATE BINARY WHERE ((NOT (LOWER(((((((((NULL)AND(rt0.c4)))AND(rt0.c4)))OR(1.192450621E9)))AND(rt0.c3)))))) UNION SELECT DISTINCT rt0.c0, rt0.c3 FROM rt0 RIGHT OUTER JOIN v0 ON ((v0.c0) BETWEEN (rt0.c4) AND (v0.c0)) COLLATE BINARY WHERE (((LOWER(((((((((NULL)AND(rt0.c4)))AND(rt0.c4)))OR(1.192450621E9)))AND(rt0.c3)))) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c3 FROM rt0 RIGHT OUTER JOIN v0 ON ((v0.c0) BETWEEN (rt0.c4) AND (v0.c0)) COLLATE BINARY;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE ((- (LOWER(v0.c0)))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT ((- (LOWER(v0.c0)))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((((- (LOWER(v0.c0)))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT rt0.c2, rt0.c1, rt0.c3, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c3, rt0.c0;
SELECT rt0.c2, rt0.c1, rt0.c3, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c3, rt0.c0 HAVING MAX(COUNT('0.9412300940958762')) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c3, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c3, rt0.c0 HAVING (NOT (MAX(COUNT('0.9412300940958762')))) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c3, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c3, rt0.c0 HAVING ((MAX(COUNT('0.9412300940958762'))) ISNULL);
SELECT ALL rt0.c1, rt0.c3 FROM rt0;
SELECT ALL rt0.c1, rt0.c3 FROM rt0 WHERE (TOTAL_CHANGES() COLLATE BINARY) UNION ALL SELECT ALL rt0.c1, rt0.c3 FROM rt0 WHERE ((NOT (TOTAL_CHANGES() COLLATE BINARY))) UNION ALL SELECT ALL rt0.c1, rt0.c3 FROM rt0 WHERE (((TOTAL_CHANGES() COLLATE BINARY) ISNULL));
SELECT ALL rt0.c1, rt0.c3 FROM rt0;
SELECT DISTINCT * FROM rt0, v0;
SELECT DISTINCT * FROM rt0, v0 WHERE ((LIKELIHOOD(v0.c0, 0.5896817313251257) IN ())) UNION SELECT DISTINCT * FROM rt0, v0 WHERE ((NOT ((LIKELIHOOD(v0.c0, 0.5896817313251257) IN ())))) UNION SELECT DISTINCT * FROM rt0, v0 WHERE ((((LIKELIHOOD(v0.c0, 0.5896817313251257) IN ())) ISNULL));
SELECT DISTINCT * FROM rt0, v0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (CASE (v0.c0 IN (v0.c0))  WHEN (v0.c0 IN ()) THEN (((v0.c0, v0.c0, v0.c0, v0.c0, v0.c0)) BETWEEN ((v0.c0, v0.c0, v0.c0, v0.c0, v0.c0)) AND ((0Xffffffff96b00812, v0.c0, v0.c0, v0.c0, v0.c0))) ELSE ((v0.c0)|(v0.c0)) END) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT (CASE (v0.c0 IN (v0.c0))  WHEN (v0.c0 IN ()) THEN (((v0.c0, v0.c0, v0.c0, v0.c0, v0.c0)) BETWEEN ((v0.c0, v0.c0, v0.c0, v0.c0, v0.c0)) AND ((0xffffffff96b00812, v0.c0, v0.c0, v0.c0, v0.c0))) ELSE ((v0.c0)|(v0.c0)) END))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((CASE (v0.c0 IN (v0.c0))  WHEN (v0.c0 IN ()) THEN (((v0.c0, v0.c0, v0.c0, v0.c0, v0.c0)) BETWEEN ((v0.c0, v0.c0, v0.c0, v0.c0, v0.c0)) AND ((0xffffffff96b00812, v0.c0, v0.c0, v0.c0, v0.c0))) ELSE ((v0.c0)|(v0.c0)) END) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT rt0.c0 FROM rt0, v0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0, v0 GROUP BY rt0.c0 HAVING (((rt0.c1)) NOT BETWEEN ((MIN(COUNT(GROUP_CONCAT(GROUP_CONCAT(rt0.c3)))))) AND ((rt0.c0))) UNION ALL SELECT rt0.c0 FROM rt0, v0 GROUP BY rt0.c0 HAVING (NOT ((((rt0.c1)) NOT BETWEEN ((MIN(COUNT(GROUP_CONCAT(GROUP_CONCAT(rt0.c3)))))) AND ((rt0.c0))))) UNION ALL SELECT rt0.c0 FROM rt0, v0 GROUP BY rt0.c0 HAVING (((((rt0.c1)) NOT BETWEEN ((MIN(COUNT(GROUP_CONCAT(GROUP_CONCAT(rt0.c3)))))) AND ((rt0.c0)))) ISNULL);
SELECT ALL * FROM rt0, v0;
SELECT * FROM rt0, v0 WHERE (v0.c0) UNION ALL SELECT ALL * FROM rt0, v0 WHERE ((NOT (v0.c0))) UNION ALL SELECT ALL * FROM rt0, v0 WHERE (((v0.c0) ISNULL));
SELECT ALL * FROM rt0, v0;
SELECT DISTINCT * FROM rt0 CROSS JOIN v0 ON 'uu';
SELECT DISTINCT * FROM rt0 CROSS JOIN v0 ON 'uu' WHERE ((((~ (rt0.c4)))GLOB(rt0.c4))) UNION SELECT DISTINCT * FROM rt0 CROSS JOIN v0 ON 'uu' WHERE ((NOT ((((~ (rt0.c4)))GLOB(rt0.c4))))) UNION SELECT DISTINCT * FROM rt0 CROSS JOIN v0 ON 'uu' WHERE ((((((~ (rt0.c4)))GLOB(rt0.c4))) ISNULL));
SELECT DISTINCT * FROM rt0 CROSS JOIN v0 ON 'uu';
SELECT ALL rt0.c2 FROM rt0 CROSS JOIN v0 ON ((((((v0.c0)OR(v0.c0)))OR(rt0.c2)))<>(((rt0.c2)<=(rt0.c3)))) GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 CROSS JOIN v0 ON ((((((v0.c0)OR(v0.c0)))OR(rt0.c2)))<>(((rt0.c2)<=(rt0.c3)))) WHERE ((((((rt0.c2))<((rt0.c1))))LIKE((rt0.c2 IN (rt0.c3))))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0 CROSS JOIN v0 ON ((((((v0.c0)OR(v0.c0)))OR(rt0.c2)))<>(((rt0.c2)<=(rt0.c3)))) WHERE ((NOT ((((((rt0.c2))<((rt0.c1))))LIKE((rt0.c2 IN (rt0.c3))))))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0 NOT INDEXED CROSS JOIN v0 ON ((((((v0.c0)OR(v0.c0)))OR(rt0.c2)))<>(((rt0.c2)<=(rt0.c3)))) WHERE ((((((((rt0.c2))<((rt0.c1))))LIKE((rt0.c2 IN (rt0.c3))))) ISNULL)) GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 CROSS JOIN v0 ON ((((((v0.c0)OR(v0.c0)))OR(rt0.c2)))<>(((rt0.c2)<=(rt0.c3)))) GROUP BY rt0.c2;
SELECT v0.c0, rt0.c0 FROM v0, rt0 GROUP BY v0.c0, rt0.c0;
SELECT ALL v0.c0, rt0.c0 FROM v0, rt0 GROUP BY v0.c0, rt0.c0 HAVING SUM(((rt0.c1)>(MAX(rt0.c2)))) UNION ALL SELECT ALL v0.c0, rt0.c0 FROM v0, rt0 GROUP BY v0.c0, rt0.c0 HAVING (NOT (SUM(((rt0.c1)>(MAX(rt0.c2)))))) UNION ALL SELECT ALL v0.c0, rt0.c0 FROM v0, rt0 GROUP BY v0.c0, rt0.c0 HAVING ((SUM(((rt0.c1)>(MAX(rt0.c2))))) ISNULL);
SELECT ALL v0.c0 FROM rt0, v0;
SELECT ALL v0.c0 FROM rt0, v0 WHERE ((((rt0.c4)) NOT BETWEEN ((((rt0.c2)<=(v0.c0)))) AND ((((rt0.c0)<(rt0.c4)))))) UNION ALL SELECT v0.c0 FROM rt0, v0 WHERE ((NOT ((((rt0.c4)) NOT BETWEEN ((((rt0.c2)<=(v0.c0)))) AND ((((rt0.c0)<(rt0.c4)))))))) UNION ALL SELECT ALL v0.c0 FROM rt0, v0 WHERE ((((((rt0.c4)) NOT BETWEEN ((((rt0.c2)<=(v0.c0)))) AND ((((rt0.c0)<(rt0.c4)))))) ISNULL));
SELECT ALL v0.c0 FROM rt0, v0;
SELECT DISTINCT rt0.c4, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c4, rt0.c0 FROM rt0 WHERE (UPPER(json_insert(x'', rt0.c1, rt0.c1))) UNION SELECT DISTINCT rt0.c4, rt0.c0 FROM rt0 WHERE ((NOT (UPPER(json_insert(x'', rt0.c1, rt0.c1))))) UNION SELECT DISTINCT rt0.c4, rt0.c0 FROM rt0 WHERE (((UPPER(json_insert(x'', rt0.c1, rt0.c1))) ISNULL));
SELECT rt0.c2, rt0.c1, rt0.c4, rt0.c3, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c4, rt0.c3, rt0.c0;
SELECT rt0.c2, rt0.c1, rt0.c4, rt0.c3, rt0.c0 FROM rt0 WHERE (0.548480957945706) GROUP BY rt0.c2, rt0.c1, rt0.c4, rt0.c3, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c1, rt0.c4, rt0.c3, rt0.c0 FROM rt0 WHERE ((NOT (0.548480957945706))) GROUP BY rt0.c2, rt0.c1, rt0.c4, rt0.c3, rt0.c0 UNION SELECT rt0.c2, rt0.c1, rt0.c4, rt0.c3, rt0.c0 FROM rt0 WHERE (((0.548480957945706) ISNULL)) GROUP BY rt0.c2, rt0.c1, rt0.c4, rt0.c3, rt0.c0;
SELECT rt0.c2, rt0.c1, rt0.c4, rt0.c3, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c4, rt0.c3, rt0.c0;
SELECT rt0.c2, rt0.c1, rt0.c4, rt0.c3 FROM v0, rt0 GROUP BY rt0.c2, rt0.c1, rt0.c4, rt0.c3;
SELECT ALL rt0.c2, rt0.c1, rt0.c4, rt0.c3 FROM v0, rt0 GROUP BY rt0.c2, rt0.c1, rt0.c4, rt0.c3 HAVING GROUP_CONCAT(TOTAL(rt0.c0)) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c4, rt0.c3 FROM v0, rt0 GROUP BY rt0.c2, rt0.c1, rt0.c4, rt0.c3 HAVING (NOT (GROUP_CONCAT(TOTAL(rt0.c0)))) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c4, rt0.c3 FROM v0, rt0 GROUP BY rt0.c2, rt0.c1, rt0.c4, rt0.c3 HAVING ((GROUP_CONCAT(TOTAL(rt0.c0))) ISNULL);
SELECT rt0.c2, rt0.c3, rt0.c1 FROM v0 FULL OUTER JOIN rt0 ON ((((rt0.c4)IS NOT(rt0.c0))) IS TRUE);
SELECT rt0.c2, rt0.c3, rt0.c1 FROM v0 FULL OUTER JOIN rt0 ON ((((rt0.c4)IS NOT(rt0.c0))) IS TRUE) WHERE (v0.c0) UNION ALL SELECT rt0.c2, rt0.c3, rt0.c1 FROM v0 FULL OUTER JOIN rt0 ON ((((rt0.c4)IS NOT(rt0.c0))) IS TRUE) WHERE ((NOT (v0.c0))) UNION ALL SELECT rt0.c2, rt0.c3, rt0.c1 FROM v0 FULL OUTER JOIN rt0 ON ((((rt0.c4)IS NOT(rt0.c0))) IS TRUE) WHERE (((v0.c0) ISNULL));
SELECT rt0.c2, rt0.c3, rt0.c1 FROM v0 FULL OUTER JOIN rt0 ON ((((rt0.c4)IS NOT(rt0.c0))) IS TRUE);
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE ((((((v0.c0, v0.c0, v0.c0))>=((v0.c0, '-1120488066', v0.c0)))) BETWEEN ('l⇳~K') AND (CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT ((((((v0.c0, v0.c0, v0.c0))>=((v0.c0, '-1120488066', v0.c0)))) BETWEEN ('l⇳~K') AND (CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))))) UNION SELECT DISTINCT * FROM v0 WHERE ((((((((v0.c0, v0.c0, v0.c0))>=((v0.c0, '-1120488066', v0.c0)))) BETWEEN ('l⇳~K') AND (CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE ('[7X뜮璯Y') GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT ('[7X뜮璯Y'))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((('[7X뜮璯Y') ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL rt0.c4 FROM v0, rt0 GROUP BY rt0.c4;
SELECT ALL rt0.c4 FROM v0, rt0 GROUP BY rt0.c4 HAVING ((GROUP_CONCAT(NULL)) NOT NULL) UNION ALL SELECT ALL rt0.c4 FROM v0, rt0 GROUP BY rt0.c4 HAVING (NOT (((GROUP_CONCAT(NULL)) NOT NULL))) UNION ALL SELECT ALL rt0.c4 FROM v0, rt0 GROUP BY rt0.c4 HAVING ((((GROUP_CONCAT(NULL)) NOT NULL)) ISNULL);
SELECT ALL rt0.c4 FROM v0, rt0 GROUP BY rt0.c4;
SELECT ALL rt0.c4 FROM v0, rt0 GROUP BY rt0.c4 HAVING ((GROUP_CONCAT(NULL)) NOT NULL) UNION ALL SELECT ALL rt0.c4 FROM v0, rt0 GROUP BY rt0.c4 HAVING (NOT (((GROUP_CONCAT(NULL)) NOT NULL))) UNION ALL SELECT ALL rt0.c4 FROM v0, rt0 GROUP BY rt0.c4 HAVING ((((GROUP_CONCAT(NULL)) NOT NULL)) ISNULL);
SELECT ALL rt0.c4 FROM v0, rt0 GROUP BY rt0.c4;
SELECT * FROM v0 FULL OUTER JOIN rt0 ON SUBSTR(rt0.c1, json_array_length(rt0.c2, rt0.c1));
SELECT * FROM v0 FULL OUTER JOIN rt0 ON SUBSTR(rt0.c1, json_array_length(rt0.c2, rt0.c1)) WHERE ((((((rt0.c2) IS FALSE), (((rt0.c0, rt0.c3, rt0.c2, rt0.c3, x'1f17')) BETWEEN (('1771799441', rt0.c4, rt0.c4, rt0.c3, rt0.c1)) AND ((rt0.c0, rt0.c2, NULL, rt0.c2, rt0.c1))), ((rt0.c3) NOT NULL)))<=((CAST(v0.c0 AS INTEGER), CASE rt0.c4  WHEN rt0.c4 THEN v0.c0 END, LOWER(v0.c0))))) UNION ALL SELECT ALL * FROM v0 FULL OUTER JOIN rt0 ON SUBSTR(rt0.c1, json_array_length(rt0.c2, rt0.c1)) WHERE ((NOT ((((((rt0.c2) IS FALSE), (((rt0.c0, rt0.c3, rt0.c2, rt0.c3, x'1f17')) BETWEEN (('1771799441', rt0.c4, rt0.c4, rt0.c3, rt0.c1)) AND ((rt0.c0, rt0.c2, NULL, rt0.c2, rt0.c1))), ((rt0.c3) NOT NULL)))<=((CAST(v0.c0 AS INTEGER), CASE rt0.c4  WHEN rt0.c4 THEN v0.c0 END, LOWER(v0.c0))))))) UNION ALL SELECT * FROM v0 FULL OUTER JOIN rt0 ON SUBSTR(rt0.c1, json_array_length(rt0.c2, rt0.c1)) WHERE ((((((((rt0.c2) IS FALSE), (((rt0.c0, rt0.c3, rt0.c2, rt0.c3, x'1f17')) BETWEEN (('1771799441', rt0.c4, rt0.c4, rt0.c3, rt0.c1)) AND ((rt0.c0, rt0.c2, NULL, rt0.c2, rt0.c1))), ((rt0.c3) NOT NULL)))<=((CAST(v0.c0 AS INTEGER), CASE rt0.c4  WHEN rt0.c4 THEN v0.c0 END, LOWER(v0.c0))))) ISNULL));
SELECT * FROM v0 FULL OUTER JOIN rt0 ON SUBSTR(rt0.c1, json_array_length(rt0.c2, rt0.c1));
SELECT DISTINCT v0.c0, rt0.c3, rt0.c2 FROM rt0, v0;
SELECT DISTINCT v0.c0, rt0.c3, rt0.c2 FROM rt0, v0 WHERE (0.8533632648670871) UNION SELECT DISTINCT v0.c0, rt0.c3, rt0.c2 FROM rt0, v0 WHERE ((NOT (0.8533632648670871))) UNION SELECT DISTINCT v0.c0, rt0.c3, rt0.c2 FROM rt0, v0 WHERE (((0.8533632648670871) ISNULL));
SELECT DISTINCT v0.c0, rt0.c3, rt0.c2 FROM rt0, v0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (v0.c0) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (v0.c0))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE (((v0.c0) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT rt0.c2, rt0.c1, rt0.c0, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0, rt0.c3;
SELECT rt0.c2, rt0.c1, rt0.c0, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0, rt0.c3 HAVING (((COUNT(0.9816187515896482), '-1374866560', ((COUNT(GROUP_CONCAT(MIN(SUM(TOTAL(AVG(AVG(TOTAL(rt0.c2)))))))))<(AVG(rt0.c1))), GROUP_CONCAT(rt0.c1), ''))<(((+ (MAX(rt0.c1))), rt0.c3 COLLATE BINARY, CAST(NULL AS REAL), ((MAX(GROUP_CONCAT(AVG(COUNT(AVG(rt0.c0))))))*(GROUP_CONCAT(rt0.c0))), COUNT(*)))) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0, rt0.c3 HAVING (NOT ((((COUNT(0.9816187515896482), '-1374866560', ((COUNT(GROUP_CONCAT(MIN(SUM(TOTAL(AVG(AVG(TOTAL(rt0.c2)))))))))<(AVG(rt0.c1))), GROUP_CONCAT(rt0.c1), ''))<(((+ (MAX(rt0.c1))), rt0.c3 COLLATE BINARY, CAST(NULL AS REAL), ((MAX(GROUP_CONCAT(AVG(COUNT(AVG(rt0.c0))))))*(GROUP_CONCAT(rt0.c0))), COUNT(*)))))) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0, rt0.c3 HAVING (((((COUNT(0.9816187515896482), '-1374866560', ((COUNT(GROUP_CONCAT(MIN(SUM(TOTAL(AVG(AVG(TOTAL(rt0.c2)))))))))<(AVG(rt0.c1))), GROUP_CONCAT(rt0.c1), ''))<(((+ (MAX(rt0.c1))), rt0.c3 COLLATE BINARY, CAST(NULL AS REAL), ((MAX(GROUP_CONCAT(AVG(COUNT(AVG(rt0.c0))))))*(GROUP_CONCAT(rt0.c0))), COUNT(*))))) ISNULL);
SELECT ALL rt0.c4, rt0.c2, rt0.c3, v0.c0, rt0.c0 FROM rt0, v0;
SELECT ALL rt0.c4, rt0.c2, rt0.c3, v0.c0, rt0.c0 FROM rt0, v0 WHERE ((- (((rt0.c0) IS TRUE)))) UNION ALL SELECT rt0.c4, rt0.c2, rt0.c3, v0.c0, rt0.c0 FROM rt0, v0 WHERE ((NOT ((- (((rt0.c0) IS TRUE)))))) UNION ALL SELECT rt0.c4, rt0.c2, rt0.c3, v0.c0, rt0.c0 FROM rt0, v0 WHERE ((((- (((rt0.c0) IS TRUE)))) ISNULL));
SELECT ALL rt0.c4, rt0.c2, rt0.c3, v0.c0, rt0.c0 FROM rt0, v0;
SELECT DISTINCT * FROM rt0, v0;
SELECT DISTINCT * FROM rt0, v0 WHERE ((((- (''))) BETWEEN (((rt0.c3) NOTNULL)) AND ((((rt0.c3)) BETWEEN ((rt0.c1)) AND ((rt0.c0)))))) UNION SELECT DISTINCT * FROM rt0, v0 WHERE ((NOT ((((- (''))) BETWEEN (((rt0.c3) NOTNULL)) AND ((((rt0.c3)) BETWEEN ((rt0.c1)) AND ((rt0.c0)))))))) UNION SELECT DISTINCT * FROM rt0, v0 WHERE ((((((- (''))) BETWEEN (((rt0.c3) NOTNULL)) AND ((((rt0.c3)) BETWEEN ((rt0.c1)) AND ((rt0.c0)))))) ISNULL));
SELECT DISTINCT * FROM rt0, v0;
SELECT ALL rt0.c2, rt0.c4, v0.c0, rt0.c1, rt0.c0, rt0.c3 FROM rt0, v0 GROUP BY rt0.c2, rt0.c4, v0.c0, rt0.c1, rt0.c0, rt0.c3;
SELECT rt0.c2, rt0.c4, v0.c0, rt0.c1, rt0.c0, rt0.c3 FROM rt0, v0 WHERE (((((rt0.c2) IS TRUE))*(((rt0.c3)<<(-1.389806359E9))))) GROUP BY rt0.c2, rt0.c4, v0.c0, rt0.c1, rt0.c0, rt0.c3 UNION SELECT ALL rt0.c2, rt0.c4, v0.c0, rt0.c1, rt0.c0, rt0.c3 FROM rt0, v0 WHERE ((NOT (((((rt0.c2) IS TRUE))*(((rt0.c3)<<(-1.389806359E9))))))) GROUP BY rt0.c2, rt0.c4, v0.c0, rt0.c1, rt0.c0, rt0.c3 UNION SELECT ALL rt0.c2, rt0.c4, v0.c0, rt0.c1, rt0.c0, rt0.c3 FROM rt0, v0 WHERE (((((((rt0.c2) IS TRUE))*(((rt0.c3)<<(-1.389806359E9))))) ISNULL)) GROUP BY rt0.c2, rt0.c4, v0.c0, rt0.c1, rt0.c0, rt0.c3;
SELECT ALL rt0.c2, rt0.c4, v0.c0, rt0.c1, rt0.c0, rt0.c3 FROM rt0, v0 GROUP BY rt0.c2, rt0.c4, v0.c0, rt0.c1, rt0.c0, rt0.c3;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING GROUP_CONCAT(TOTAL(AVG(SUM('-1203949434')))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (GROUP_CONCAT(TOTAL(AVG(SUM('-1203949434')))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((GROUP_CONCAT(TOTAL(AVG(SUM('-1203949434'))))) ISNULL);
SELECT * FROM v0, rt0;
SELECT ALL * FROM v0, rt0 WHERE (((((((rt0.c3)AND(rt0.c2)))AND(rt0.c1)))IS NOT(((rt0.c0)LIKE(v0.c0))))) UNION ALL SELECT ALL * FROM v0, rt0 WHERE ((NOT (((((((rt0.c3)AND(rt0.c2)))AND(rt0.c1)))IS NOT(((rt0.c0)LIKE(v0.c0))))))) UNION ALL SELECT ALL * FROM v0, rt0 WHERE (((((((((rt0.c3)AND(rt0.c2)))AND(rt0.c1)))IS NOT(((rt0.c0)LIKE(v0.c0))))) ISNULL));
SELECT * FROM v0, rt0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (v0.c0) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (v0.c0))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((v0.c0) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT rt0.c2, rt0.c1, rt0.c0, rt0.c4 FROM rt0, v0 GROUP BY rt0.c2, rt0.c1, rt0.c0, rt0.c4;
SELECT ALL rt0.c2, rt0.c1, rt0.c0, rt0.c4 FROM rt0, v0 WHERE (((((((((((rt0.c1) NOT BETWEEN (rt0.c4) AND (0Xffffffffad293ce9)))OR((((rt0.c4))>=((NULL))))))AND((((v0.c0))>((rt0.c3))))))AND((rt0.c1 IN ()))))AND((((rt0.c1, rt0.c1, rt0.c4))<>((rt0.c2, v0.c0, rt0.c0)))))) GROUP BY rt0.c2, rt0.c1, rt0.c0, rt0.c4 UNION SELECT ALL rt0.c2, rt0.c1, rt0.c0, rt0.c4 FROM rt0, v0 WHERE ((NOT (((((((((((rt0.c1) NOT BETWEEN (rt0.c4) AND (0Xffffffffad293ce9)))OR((((rt0.c4))>=((NULL))))))AND((((v0.c0))>((rt0.c3))))))AND((rt0.c1 IN ()))))AND((((rt0.c1, rt0.c1, rt0.c4))!=((rt0.c2, v0.c0, rt0.c0)))))))) GROUP BY rt0.c2, rt0.c1, rt0.c0, rt0.c4 UNION SELECT ALL rt0.c2, rt0.c1, rt0.c0, rt0.c4 FROM rt0, v0 WHERE (((((((((((((rt0.c1) NOT BETWEEN (rt0.c4) AND (0Xffffffffad293ce9)))OR((((rt0.c4))>=((NULL))))))AND((((v0.c0))>((rt0.c3))))))AND((rt0.c1 IN ()))))AND((((rt0.c1, rt0.c1, rt0.c4))!=((rt0.c2, v0.c0, rt0.c0)))))) ISNULL)) GROUP BY rt0.c2, rt0.c1, rt0.c0, rt0.c4;
SELECT rt0.c2, rt0.c1, rt0.c0, rt0.c4 FROM rt0, v0 GROUP BY rt0.c2, rt0.c1, rt0.c0, rt0.c4;
SELECT ALL rt0.c2 FROM v0, rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM v0, rt0 GROUP BY rt0.c2 HAVING ((-2137798572) NOT BETWEEN (CAST(MIN(MIN(rt0.c4)) AS BLOB)) AND (LIKELIHOOD(MIN(rt0.c4), 0.3517592225664511))) UNION ALL SELECT ALL rt0.c2 FROM v0, rt0 GROUP BY rt0.c2 HAVING (NOT (((-2137798572) NOT BETWEEN (CAST(MIN(MIN(rt0.c4)) AS BLOB)) AND (LIKELIHOOD(MIN(rt0.c4), 0.3517592225664511))))) UNION ALL SELECT ALL rt0.c2 FROM v0, rt0 GROUP BY rt0.c2 HAVING ((((-2137798572) NOT BETWEEN (CAST(MIN(MIN(rt0.c4)) AS BLOB)) AND (LIKELIHOOD(MIN(rt0.c4), 0.3517592225664511)))) ISNULL);
SELECT * FROM v0;
SELECT * FROM v0 WHERE (((((v0.c0) ISNULL))OR(((v0.c0) IS FALSE)))) UNION ALL SELECT ALL * FROM v0 WHERE ((NOT (((((v0.c0) ISNULL))OR(((v0.c0) IS FALSE)))))) UNION ALL SELECT ALL * FROM v0 WHERE (((((((v0.c0) ISNULL))OR(((v0.c0) IS FALSE)))) ISNULL));
SELECT * FROM v0;
SELECT DISTINCT * FROM v0, rt0;
SELECT DISTINCT * FROM v0, rt0 WHERE (rt0.c0) UNION SELECT DISTINCT * FROM v0, rt0 WHERE ((NOT (rt0.c0))) UNION SELECT DISTINCT * FROM v0, rt0 WHERE (((rt0.c0) ISNULL));
SELECT DISTINCT * FROM v0, rt0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (((((v0.c0)*(v0.c0)))<(((((((((v0.c0)OR(v0.c0)))AND(0xffffffffeb88ebb7)))AND(v0.c0)))AND(x''))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT (((((v0.c0)*(v0.c0)))<(((((((((v0.c0)OR(v0.c0)))AND(0Xffffffffeb88ebb7)))AND(v0.c0)))AND(x''))))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((((((v0.c0)*(v0.c0)))<(((((((((v0.c0)OR(v0.c0)))AND(0Xffffffffeb88ebb7)))AND(v0.c0)))AND(x''))))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL rt0.c3, v0.c0 FROM v0, rt0 GROUP BY rt0.c3, v0.c0;
SELECT rt0.c3, v0.c0 FROM v0, rt0 GROUP BY rt0.c3, v0.c0 HAVING SUM(COUNT(COUNT(*))) UNION ALL SELECT rt0.c3, v0.c0 FROM v0, rt0 GROUP BY rt0.c3, v0.c0 HAVING (NOT (SUM(COUNT(COUNT(*))))) UNION ALL SELECT ALL rt0.c3, v0.c0 FROM v0, rt0 GROUP BY rt0.c3, v0.c0 HAVING ((SUM(COUNT(COUNT(*)))) ISNULL);
SELECT ALL MAX(((((((((rt0.c2 COLLATE RTRIM)AND(((rt0.c0)<=(rt0.c1)))))AND(rt0.c3)))OR(((rt0.c1)+(rt0.c1)))))AND(((rt0.c4)==(rt0.c0))))) FROM v0, rt0 ORDER BY CAST(((rt0.c0) NOTNULL) AS TEXT)  NULLS LAST, ((((rt0.c1)AND(''))) ISNULL) DESC;
SELECT ALL * FROM v0;
SELECT ALL * FROM v0 WHERE (((((((v0.c0)OR(v0.c0)))AND(CASE v0.c0  WHEN 0.16662843943800165 THEN '745239727' WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END)))AND((- (v0.c0))))) UNION ALL SELECT ALL * FROM v0 WHERE ((NOT (((((((v0.c0)OR(v0.c0)))AND(CASE v0.c0  WHEN 0.16662843943800165 THEN '745239727' WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END)))AND((- (v0.c0))))))) UNION ALL SELECT * FROM v0 WHERE (((((((((v0.c0)OR(v0.c0)))AND(CASE v0.c0  WHEN 0.16662843943800165 THEN '745239727' WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END)))AND((- (v0.c0))))) ISNULL));
SELECT ALL * FROM v0;
SELECT DISTINCT rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c0 FROM rt0 WHERE (rt0.c3) UNION SELECT DISTINCT rt0.c0 FROM rt0 WHERE ((NOT (rt0.c3))) UNION SELECT DISTINCT rt0.c0 FROM rt0 WHERE (((rt0.c3) ISNULL));
SELECT DISTINCT rt0.c0 FROM rt0;
SELECT ALL rt0.c3, rt0.c0, rt0.c4, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c3, rt0.c0, rt0.c4, rt0.c2, rt0.c1;
SELECT ALL rt0.c3, rt0.c0, rt0.c4, rt0.c2, rt0.c1 FROM rt0 WHERE (((((((rt0.c1)<(rt0.c4)))OR(rt0.c3)))AND((('-1592465497')GLOB(rt0.c4))))) GROUP BY rt0.c3, rt0.c0, rt0.c4, rt0.c2, rt0.c1 UNION SELECT ALL rt0.c3, rt0.c0, rt0.c4, rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (((((((rt0.c1)<(rt0.c4)))OR(rt0.c3)))AND((('-1592465497')GLOB(rt0.c4))))))) GROUP BY rt0.c3, rt0.c0, rt0.c4, rt0.c2, rt0.c1 UNION SELECT rt0.c3, rt0.c0, rt0.c4, rt0.c2, rt0.c1 FROM rt0 WHERE (((((((((rt0.c1)<(rt0.c4)))OR(rt0.c3)))AND((('-1592465497')GLOB(rt0.c4))))) ISNULL)) GROUP BY rt0.c3, rt0.c0, rt0.c4, rt0.c2, rt0.c1;
SELECT ALL rt0.c3, rt0.c0, rt0.c4, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c3, rt0.c0, rt0.c4, rt0.c2, rt0.c1;
SELECT rt0.c3, rt0.c1, rt0.c0, rt0.c4, rt0.c2 FROM rt0 GROUP BY rt0.c3, rt0.c1, rt0.c0, rt0.c4, rt0.c2;
SELECT ALL rt0.c3, rt0.c1, rt0.c0, rt0.c4, rt0.c2 FROM rt0 GROUP BY rt0.c3, rt0.c1, rt0.c0, rt0.c4, rt0.c2 HAVING (((rt0.c3)) BETWEEN ((0Xffffffffe55e9088)) AND (((~ (SUM(AVG(AVG(rt0.c3)))))))) UNION ALL SELECT ALL rt0.c3, rt0.c1, rt0.c0, rt0.c4, rt0.c2 FROM rt0 GROUP BY rt0.c3, rt0.c1, rt0.c0, rt0.c4, rt0.c2 HAVING (NOT ((((rt0.c3)) BETWEEN ((0xffffffffe55e9088)) AND (((~ (SUM(AVG(AVG(rt0.c3)))))))))) UNION ALL SELECT rt0.c3, rt0.c1, rt0.c0, rt0.c4, rt0.c2 FROM rt0 GROUP BY rt0.c3, rt0.c1, rt0.c0, rt0.c4, rt0.c2 HAVING (((((rt0.c3)) BETWEEN ((0Xffffffffe55e9088)) AND (((~ (SUM(AVG(AVG(rt0.c3))))))))) ISNULL);
SELECT ALL rt0.c3, rt0.c1 FROM v0, rt0;
SELECT ALL rt0.c3, rt0.c1 FROM v0, rt0 WHERE (rt0.c4) UNION ALL SELECT ALL rt0.c3, rt0.c1 FROM v0, rt0 WHERE ((NOT (rt0.c4))) UNION ALL SELECT ALL rt0.c3, rt0.c1 FROM v0, rt0 WHERE (((rt0.c4) ISNULL));
SELECT ALL rt0.c3, rt0.c1 FROM v0, rt0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE ((v0.c0 IN ())) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT ((v0.c0 IN ())))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((((v0.c0 IN ())) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT ALL rt0.c4, rt0.c2, rt0.c0 FROM rt0, v0 GROUP BY rt0.c4, rt0.c2, rt0.c0;
SELECT rt0.c4, rt0.c2, rt0.c0 FROM rt0, v0 WHERE ((- (((rt0.c1)OR(rt0.c4))))) GROUP BY rt0.c4, rt0.c2, rt0.c0 UNION SELECT rt0.c4, rt0.c2, rt0.c0 FROM rt0, v0 WHERE ((NOT ((- (((rt0.c1)OR(rt0.c4))))))) GROUP BY rt0.c4, rt0.c2, rt0.c0 UNION SELECT rt0.c4, rt0.c2, rt0.c0 FROM rt0, v0 WHERE ((((- (((rt0.c1)OR(rt0.c4))))) ISNULL)) GROUP BY rt0.c4, rt0.c2, rt0.c0;
SELECT ALL rt0.c4, rt0.c2, rt0.c0 FROM rt0, v0 GROUP BY rt0.c4, rt0.c2, rt0.c0;
SELECT ALL v0.c0 FROM rt0, v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM rt0, v0 GROUP BY v0.c0 HAVING ((((GROUP_CONCAT(v0.c0)) BETWEEN (COUNT(*)) AND (MIN(rt0.c4)))) NOTNULL) UNION ALL SELECT v0.c0 FROM rt0, v0 GROUP BY v0.c0 HAVING (NOT (((((GROUP_CONCAT(v0.c0)) BETWEEN (COUNT(*)) AND (MIN(rt0.c4)))) NOTNULL))) UNION ALL SELECT ALL v0.c0 FROM rt0, v0 GROUP BY v0.c0 HAVING ((((((GROUP_CONCAT(v0.c0)) BETWEEN (COUNT(*)) AND (MIN(rt0.c4)))) NOTNULL)) ISNULL);
SELECT ALL v0.c0 FROM rt0, v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM rt0, v0 GROUP BY v0.c0 HAVING ((((GROUP_CONCAT(v0.c0)) BETWEEN (COUNT(*)) AND (MIN(rt0.c4)))) NOTNULL) UNION ALL SELECT v0.c0 FROM rt0, v0 GROUP BY v0.c0 HAVING (NOT (((((GROUP_CONCAT(v0.c0)) BETWEEN (COUNT(*)) AND (MIN(rt0.c4)))) NOTNULL))) UNION ALL SELECT ALL v0.c0 FROM rt0, v0 GROUP BY v0.c0 HAVING ((((((GROUP_CONCAT(v0.c0)) BETWEEN (COUNT(*)) AND (MIN(rt0.c4)))) NOTNULL)) ISNULL);
SELECT ALL v0.c0 FROM rt0, v0 GROUP BY v0.c0;
SELECT ALL * FROM rt0, v0;
SELECT ALL * FROM rt0, v0 WHERE (ABS(rt0.c1) COLLATE BINARY) UNION ALL SELECT * FROM rt0, v0 WHERE ((NOT (ABS(rt0.c1) COLLATE BINARY))) UNION ALL SELECT * FROM rt0, v0 WHERE (((ABS(rt0.c1) COLLATE BINARY) ISNULL));
SELECT ALL * FROM rt0, v0;
SELECT DISTINCT rt0.c0, rt0.c2, rt0.c3, rt0.c1 FROM v0, rt0;
SELECT DISTINCT rt0.c0, rt0.c2, rt0.c3, rt0.c1 FROM v0, rt0 WHERE (CASE CASE WHEN rt0.c1 THEN x'' ELSE rt0.c2 END  WHEN rt0.c1 COLLATE BINARY THEN ((((((((rt0.c3)AND(rt0.c3)))AND(0.7482901045760584)))OR(NULL)))AND(v0.c0)) ELSE ((0.13357246548431156) BETWEEN (v0.c0) AND (rt0.c3)) END) UNION SELECT DISTINCT rt0.c0, rt0.c2, rt0.c3, rt0.c1 FROM v0, rt0 WHERE ((NOT (CASE CASE WHEN rt0.c1 THEN x'' ELSE rt0.c2 END  WHEN rt0.c1 COLLATE BINARY THEN ((((((((rt0.c3)AND(rt0.c3)))AND(0.7482901045760584)))OR(NULL)))AND(v0.c0)) ELSE ((0.13357246548431156) BETWEEN (v0.c0) AND (rt0.c3)) END))) UNION SELECT DISTINCT rt0.c0, rt0.c2, rt0.c3, rt0.c1 FROM v0, rt0 WHERE (((CASE CASE WHEN rt0.c1 THEN x'' ELSE rt0.c2 END  WHEN rt0.c1 COLLATE BINARY THEN ((((((((rt0.c3)AND(rt0.c3)))AND(0.7482901045760584)))OR(NULL)))AND(v0.c0)) ELSE ((0.13357246548431156) BETWEEN (v0.c0) AND (rt0.c3)) END) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c2, rt0.c3, rt0.c1 FROM v0, rt0;
SELECT rt0.c0, rt0.c1, rt0.c4, rt0.c3, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c4, rt0.c3, rt0.c2;
SELECT rt0.c0, rt0.c1, rt0.c4, rt0.c3, rt0.c2 FROM rt0 WHERE (((((((rt0.c4)|(rt0.c0)))AND(x'')))AND(rt0.c3 COLLATE NOCASE))) GROUP BY rt0.c0, rt0.c1, rt0.c4, rt0.c3, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c1, rt0.c4, rt0.c3, rt0.c2 FROM rt0 WHERE ((NOT (((((((rt0.c4)|(rt0.c0)))AND(x'')))AND(rt0.c3 COLLATE NOCASE))))) GROUP BY rt0.c0, rt0.c1, rt0.c4, rt0.c3, rt0.c2 UNION SELECT rt0.c0, rt0.c1, rt0.c4, rt0.c3, rt0.c2 FROM rt0 WHERE (((((((((rt0.c4)|(rt0.c0)))AND(x'')))AND(rt0.c3 COLLATE NOCASE))) ISNULL)) GROUP BY rt0.c0, rt0.c1, rt0.c4, rt0.c3, rt0.c2;
SELECT rt0.c0, rt0.c1, rt0.c4, rt0.c3, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c4, rt0.c3, rt0.c2;
SELECT ALL rt0.c2 FROM rt0, v0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0, v0 GROUP BY rt0.c2 HAVING json_patch(TOTAL(AVG(COUNT(*))), COUNT(v0.c0)) UNION ALL SELECT ALL rt0.c2 FROM rt0, v0 GROUP BY rt0.c2 HAVING (NOT (json_patch(TOTAL(AVG(COUNT(*))), COUNT(v0.c0)))) UNION ALL SELECT rt0.c2 FROM rt0, v0 GROUP BY rt0.c2 HAVING ((json_patch(TOTAL(AVG(COUNT(*))), COUNT(v0.c0))) ISNULL);
SELECT * FROM v0 INNER JOIN rt0 ON (((rt0.c3 IN ()))>>(((rt0.c3)AND(0.35825902826309375))));
SELECT * FROM v0 INNER JOIN rt0 ON (((rt0.c3 IN ()))>>(((rt0.c3)AND(0.35825902826309375)))) WHERE ((NOT ((1547067107 IN (rt0.c3, v0.c0))))) UNION ALL SELECT * FROM v0 INNER JOIN rt0 ON (((rt0.c3 IN ()))>>(((rt0.c3)AND(0.35825902826309375)))) WHERE ((NOT ((NOT ((1547067107 IN (rt0.c3, v0.c0))))))) UNION ALL SELECT * FROM v0 INNER JOIN rt0 ON (((rt0.c3 IN ()))>>(((rt0.c3)AND(0.35825902826309375)))) WHERE ((((NOT ((1547067107 IN (rt0.c3, v0.c0))))) ISNULL));
SELECT * FROM v0 INNER JOIN rt0 ON (((rt0.c3 IN ()))>>(((rt0.c3)AND(0.35825902826309375))));
SELECT DISTINCT rt0.c3, rt0.c0 FROM rt0, v0;
SELECT DISTINCT rt0.c3, rt0.c0 FROM rt0, v0 WHERE ((((NOT (rt0.c3)))=(HEX(DISTINCT x'')))) UNION SELECT DISTINCT rt0.c3, rt0.c0 FROM rt0, v0 WHERE ((NOT ((((NOT (rt0.c3)))=(HEX(DISTINCT x'')))))) UNION SELECT DISTINCT rt0.c3, rt0.c0 FROM rt0, v0 WHERE ((((((NOT (rt0.c3)))==(HEX(DISTINCT x'')))) ISNULL));
SELECT DISTINCT rt0.c3, rt0.c0 FROM rt0, v0;
SELECT rt0.c3, rt0.c4, rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c3, rt0.c4, rt0.c2, rt0.c1, rt0.c0;
SELECT ALL rt0.c3, rt0.c4, rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE (NULLIF(((rt0.c3) ISNULL), SUBSTR(rt0.c3, rt0.c2))) GROUP BY rt0.c3, rt0.c4, rt0.c2, rt0.c1, rt0.c0 UNION SELECT rt0.c3, rt0.c4, rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (NULLIF(((rt0.c3) ISNULL), SUBSTR(rt0.c3, rt0.c2))))) GROUP BY rt0.c3, rt0.c4, rt0.c2, rt0.c1, rt0.c0 UNION SELECT rt0.c3, rt0.c4, rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE (((NULLIF(((rt0.c3) ISNULL), SUBSTR(rt0.c3, rt0.c2))) ISNULL)) GROUP BY rt0.c3, rt0.c4, rt0.c2, rt0.c1, rt0.c0;
SELECT rt0.c3, rt0.c4, rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c3, rt0.c4, rt0.c2, rt0.c1, rt0.c0;
SELECT rt0.c3 FROM rt0 GROUP BY rt0.c3;
SELECT ALL rt0.c3 FROM rt0 GROUP BY rt0.c3 HAVING ((1852986852) NOT NULL) UNION ALL SELECT ALL rt0.c3 FROM rt0 GROUP BY rt0.c3 HAVING (NOT (((1852986852) NOT NULL))) UNION ALL SELECT ALL rt0.c3 FROM rt0 GROUP BY rt0.c3 HAVING ((((1852986852) NOT NULL)) ISNULL);
SELECT rt0.c3 FROM rt0 GROUP BY rt0.c3;
SELECT ALL rt0.c3 FROM rt0 GROUP BY rt0.c3 HAVING ((1852986852) NOT NULL) UNION ALL SELECT ALL rt0.c3 FROM rt0 GROUP BY rt0.c3 HAVING (NOT (((1852986852) NOT NULL))) UNION ALL SELECT ALL rt0.c3 FROM rt0 GROUP BY rt0.c3 HAVING ((((1852986852) NOT NULL)) ISNULL);
SELECT rt0.c3 FROM rt0 GROUP BY rt0.c3;
SELECT * FROM rt0 NATURAL JOIN v0;
SELECT ALL * FROM rt0 NATURAL JOIN v0 WHERE (((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) ISNULL)) UNION ALL SELECT ALL * FROM rt0 NATURAL JOIN v0 WHERE ((NOT (((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) ISNULL)))) UNION ALL SELECT * FROM rt0 NATURAL JOIN v0 WHERE (((((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) ISNULL)) ISNULL));
SELECT * FROM rt0 NATURAL JOIN v0;
SELECT DISTINCT * FROM rt0, v0;
SELECT DISTINCT * FROM rt0, v0 WHERE (((((v0.c0) BETWEEN (rt0.c0) AND (NULL))) IS FALSE)) UNION SELECT DISTINCT * FROM rt0, v0 WHERE ((NOT (((((v0.c0) BETWEEN (rt0.c0) AND (NULL))) IS FALSE)))) UNION SELECT DISTINCT * FROM rt0, v0 WHERE (((((((v0.c0) BETWEEN (rt0.c0) AND (NULL))) IS FALSE)) ISNULL));
SELECT DISTINCT * FROM rt0, v0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 WHERE ((((rt0.c0 IN ())) NOT BETWEEN (load_extension(rt0.c1)) AND (((((rt0.c2)OR(rt0.c2)))AND(rt0.c4))))) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM rt0 WHERE ((NOT ((((rt0.c0 IN ())) NOT BETWEEN (load_extension(rt0.c1)) AND (((((rt0.c2)OR(rt0.c2)))AND(rt0.c4))))))) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM rt0 WHERE ((((((rt0.c0 IN ())) NOT BETWEEN (load_extension(rt0.c1)) AND (((((rt0.c2)OR(rt0.c2)))AND(rt0.c4))))) ISNULL)) GROUP BY rt0.c0;
SELECT ALL v0.c0 FROM v0, rt0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0, rt0 GROUP BY v0.c0 HAVING ((COUNT(COUNT(*))) IS TRUE) UNION ALL SELECT v0.c0 FROM v0, rt0 GROUP BY v0.c0 HAVING (NOT (((COUNT(COUNT(*))) IS TRUE))) UNION ALL SELECT v0.c0 FROM v0, rt0 GROUP BY v0.c0 HAVING ((((COUNT(COUNT(*))) IS TRUE)) ISNULL);
SELECT rt0.c3, v0.c0, rt0.c4 FROM v0 CROSS JOIN rt0 ON (- (((rt0.c0)|(rt0.c1))));
SELECT ALL rt0.c3, v0.c0, rt0.c4 FROM v0 CROSS JOIN rt0 ON (- (((rt0.c0)|(rt0.c1)))) WHERE ((+ (rt0.c3)) COLLATE RTRIM) UNION ALL SELECT rt0.c3, v0.c0, rt0.c4 FROM v0 CROSS JOIN rt0 ON (- (((rt0.c0)|(rt0.c1)))) WHERE ((NOT ((+ (rt0.c3)) COLLATE RTRIM))) UNION ALL SELECT rt0.c3, v0.c0, rt0.c4 FROM v0 CROSS JOIN rt0 ON (- (((rt0.c0)|(rt0.c1)))) WHERE ((((+ (rt0.c3)) COLLATE RTRIM) ISNULL));
SELECT rt0.c3, v0.c0, rt0.c4 FROM v0 CROSS JOIN rt0 ON (- (((rt0.c0)|(rt0.c1))));
SELECT DISTINCT rt0.c0, rt0.c1, rt0.c4, rt0.c3 FROM v0 RIGHT OUTER JOIN rt0 ON (~ (rt0.c2 COLLATE RTRIM));
SELECT DISTINCT rt0.c0, rt0.c1, rt0.c4, rt0.c3 FROM v0 RIGHT OUTER JOIN rt0 ON (~ (rt0.c2 COLLATE RTRIM)) WHERE (rt0.c0 COLLATE BINARY COLLATE RTRIM) UNION SELECT DISTINCT rt0.c0, rt0.c1, rt0.c4, rt0.c3 FROM v0 RIGHT OUTER JOIN rt0 ON (~ (rt0.c2 COLLATE RTRIM)) WHERE ((NOT (rt0.c0 COLLATE BINARY COLLATE RTRIM))) UNION SELECT DISTINCT rt0.c0, rt0.c1, rt0.c4, rt0.c3 FROM v0 RIGHT OUTER JOIN rt0 ON (~ (rt0.c2 COLLATE RTRIM)) WHERE (((rt0.c0 COLLATE BINARY COLLATE RTRIM) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c1, rt0.c4, rt0.c3 FROM v0 RIGHT OUTER JOIN rt0 ON (~ (rt0.c2 COLLATE RTRIM));
SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 WHERE (0.19794502100018818 COLLATE RTRIM) GROUP BY rt0.c2, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (0.19794502100018818 COLLATE RTRIM))) GROUP BY rt0.c2, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c1 FROM rt0 WHERE (((0.19794502100018818 COLLATE RTRIM) ISNULL)) GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (COUNT(*) IN (v0.c0 COLLATE RTRIM, TOTAL(v0.c0))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT ((COUNT(*) IN (v0.c0 COLLATE RTRIM, TOTAL(v0.c0))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (((COUNT(*) IN (v0.c0 COLLATE RTRIM, TOTAL(v0.c0)))) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (COUNT(*) IN (v0.c0 COLLATE RTRIM, TOTAL(v0.c0))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT ((COUNT(*) IN (v0.c0 COLLATE RTRIM, TOTAL(v0.c0))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (((COUNT(*) IN (v0.c0 COLLATE RTRIM, TOTAL(v0.c0)))) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL MAX((((v0.c0)==(v0.c0)) IN ())) FROM v0;
SELECT ALL * FROM v0, rt0;
SELECT ALL * FROM v0, rt0 WHERE (((((rt0.c0)/(rt0.c4)))<=(CASE WHEN x'' THEN rt0.c3 ELSE rt0.c1 END))) UNION ALL SELECT * FROM v0, rt0 WHERE ((NOT (((((rt0.c0)/(rt0.c4)))<=(CASE WHEN x'' THEN rt0.c3 ELSE rt0.c1 END))))) UNION ALL SELECT ALL * FROM v0, rt0 WHERE (((((((rt0.c0)/(rt0.c4)))<=(CASE WHEN x'' THEN rt0.c3 ELSE rt0.c1 END))) ISNULL));
SELECT ALL * FROM v0, rt0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE ((((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))<>((((v0.c0))<((v0.c0)))))) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT ((((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))<>((((v0.c0))<((v0.c0)))))))) UNION SELECT DISTINCT * FROM v0 WHERE ((((((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))<>((((v0.c0))<((v0.c0)))))) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (((((+ (x'7184'))))!=((v0.c0 COLLATE BINARY)))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (((((+ (x'7184'))))!=((v0.c0 COLLATE BINARY)))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE (((((((+ (x'7184'))))!=((v0.c0 COLLATE BINARY)))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (+ (UNLIKELY(DISTINCT COUNT(v0.c0)))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT ((+ (UNLIKELY(DISTINCT COUNT(v0.c0)))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (((+ (UNLIKELY(DISTINCT COUNT(v0.c0))))) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (+ (UNLIKELY(DISTINCT COUNT(v0.c0)))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT ((+ (UNLIKELY(DISTINCT COUNT(v0.c0)))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (((+ (UNLIKELY(DISTINCT COUNT(v0.c0))))) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT TOTAL(-698681902) FROM rt0, v0 ORDER BY (((((NOT (rt0.c1)))AND(CAST(rt0.c2 AS INTEGER))))OR(((rt0.c2)<<(rt0.c0))))  NULLS LAST, CASE WHEN ((rt0.c1)GLOB(rt0.c1)) THEN (((rt0.c3, rt0.c2, rt0.c1)) BETWEEN ((rt0.c2, 1.920852599E9, rt0.c3)) AND ((rt0.c1, rt0.c0, rt0.c4))) END  NULLS FIRST;
SELECT v0.c0 FROM v0;
SELECT v0.c0 FROM v0 WHERE (CAST(CASE WHEN v0.c0 THEN v0.c0 END AS BLOB)) UNION ALL SELECT v0.c0 FROM v0 WHERE ((NOT (CAST(CASE WHEN v0.c0 THEN v0.c0 END AS BLOB)))) UNION ALL SELECT v0.c0 FROM v0 WHERE (((CAST(CASE WHEN v0.c0 THEN v0.c0 END AS BLOB)) ISNULL));
SELECT v0.c0 FROM v0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE ((((NULL)) BETWEEN ((NULL)) AND (((((v0.c0, v0.c0, v0.c0))!=((v0.c0, v0.c0, v0.c0))))))) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT ((((NULL)) BETWEEN ((NULL)) AND (((((v0.c0, v0.c0, v0.c0))<>((v0.c0, v0.c0, v0.c0))))))))) UNION SELECT DISTINCT * FROM v0 WHERE ((((((NULL)) BETWEEN ((NULL)) AND (((((v0.c0, v0.c0, v0.c0))!=((v0.c0, v0.c0, v0.c0))))))) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT ALL rt0.c2 FROM v0, rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM v0, rt0 WHERE (CAST(CASE rt0.c4  WHEN rt0.c4 THEN 0.24097118974782616 ELSE x'254f' END AS REAL)) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM v0, rt0 WHERE ((NOT (CAST(CASE rt0.c4  WHEN rt0.c4 THEN 0.24097118974782616 ELSE x'254f' END AS REAL)))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM v0, rt0 WHERE (((CAST(CASE rt0.c4  WHEN rt0.c4 THEN 0.24097118974782616 ELSE x'254f' END AS REAL)) ISNULL)) GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM v0, rt0 GROUP BY rt0.c2;
SELECT ALL v0.c0 FROM v0, rt0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0, rt0 GROUP BY v0.c0 HAVING ABS(GROUP_CONCAT(COUNT(MAX(rt0.c4)))) UNION ALL SELECT ALL v0.c0 FROM v0, rt0 GROUP BY v0.c0 HAVING (NOT (ABS(GROUP_CONCAT(COUNT(MAX(rt0.c4)))))) UNION ALL SELECT ALL v0.c0 FROM v0, rt0 GROUP BY v0.c0 HAVING ((ABS(GROUP_CONCAT(COUNT(MAX(rt0.c4))))) ISNULL);
SELECT ALL * FROM v0;
SELECT * FROM v0 WHERE ((((v0.c0)<<(v0.c0)) IN ())) UNION ALL SELECT * FROM v0 WHERE ((NOT ((((v0.c0)<<(v0.c0)) IN ())))) UNION ALL SELECT * FROM v0 WHERE ((((((v0.c0)<<(v0.c0)) IN ())) ISNULL));
SELECT ALL * FROM v0;
SELECT DISTINCT rt0.c1, rt0.c2, v0.c0, rt0.c4, rt0.c0, rt0.c3 FROM rt0, v0;
SELECT DISTINCT rt0.c1, rt0.c2, v0.c0, rt0.c4, rt0.c0, rt0.c3 FROM rt0, v0 WHERE (((COALESCE(DISTINCT rt0.c0, rt0.c0)) NOTNULL)) UNION SELECT DISTINCT rt0.c1, rt0.c2, v0.c0, rt0.c4, rt0.c0, rt0.c3 FROM rt0, v0 WHERE ((NOT (((COALESCE(DISTINCT rt0.c0, rt0.c0)) NOTNULL)))) UNION SELECT DISTINCT rt0.c1, rt0.c2, v0.c0, rt0.c4, rt0.c0, rt0.c3 FROM rt0, v0 WHERE (((((COALESCE(DISTINCT rt0.c0, rt0.c0)) NOTNULL)) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c2, v0.c0, rt0.c4, rt0.c0, rt0.c3 FROM rt0, v0;
SELECT v0.c0, rt0.c1, rt0.c3, rt0.c2, rt0.c4 FROM rt0, v0 GROUP BY v0.c0, rt0.c1, rt0.c3, rt0.c2, rt0.c4;
SELECT ALL v0.c0, rt0.c1, rt0.c3, rt0.c2, rt0.c4 FROM rt0, v0 WHERE (rt0.c0 COLLATE RTRIM) GROUP BY v0.c0, rt0.c1, rt0.c3, rt0.c2, rt0.c4 UNION SELECT ALL v0.c0, rt0.c1, rt0.c3, rt0.c2, rt0.c4 FROM rt0, v0 WHERE ((NOT (rt0.c0 COLLATE RTRIM))) GROUP BY v0.c0, rt0.c1, rt0.c3, rt0.c2, rt0.c4 UNION SELECT ALL v0.c0, rt0.c1, rt0.c3, rt0.c2, rt0.c4 FROM rt0, v0 WHERE (((rt0.c0 COLLATE RTRIM) ISNULL)) GROUP BY v0.c0, rt0.c1, rt0.c3, rt0.c2, rt0.c4;
SELECT v0.c0, rt0.c1, rt0.c3, rt0.c2, rt0.c4 FROM rt0, v0 GROUP BY v0.c0, rt0.c1, rt0.c3, rt0.c2, rt0.c4;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING NULL UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING (NOT (NULL)) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING ((NULL) ISNULL);
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING NULL UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING (NOT (NULL)) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING ((NULL) ISNULL);
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL v0.c0 FROM v0, rt0;
SELECT v0.c0 FROM v0, rt0 WHERE (((((v0.c0)AND(rt0.c0)))>(((rt0.c4) NOT BETWEEN (rt0.c0) AND (rt0.c0))))) UNION ALL SELECT ALL v0.c0 FROM v0, rt0 WHERE ((NOT (((((v0.c0)AND(rt0.c0)))>(((rt0.c4) NOT BETWEEN (rt0.c0) AND (rt0.c0))))))) UNION ALL SELECT v0.c0 FROM v0, rt0 WHERE (((((((v0.c0)AND(rt0.c0)))>(((rt0.c4) NOT BETWEEN (rt0.c0) AND (rt0.c0))))) ISNULL));
SELECT ALL v0.c0 FROM v0, rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (CAST(rt0.c2 AS BLOB)) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (CAST(rt0.c2 AS BLOB)))) UNION SELECT DISTINCT * FROM rt0 WHERE (((CAST(rt0.c2 AS BLOB)) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c4, rt0.c0 FROM rt0 GROUP BY rt0.c4, rt0.c0;
SELECT rt0.c4, rt0.c0 FROM rt0 WHERE (CAST((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))) AS INTEGER)) GROUP BY rt0.c4, rt0.c0 UNION SELECT rt0.c4, rt0.c0 FROM rt0 WHERE ((NOT (CAST((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))) AS INTEGER)))) GROUP BY rt0.c4, rt0.c0 UNION SELECT rt0.c4, rt0.c0 FROM rt0 WHERE (((CAST((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))) AS INTEGER)) ISNULL)) GROUP BY rt0.c4, rt0.c0;
SELECT ALL rt0.c4, rt0.c0 FROM rt0 GROUP BY rt0.c4, rt0.c0;
SELECT ALL rt0.c2, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c3;
SELECT rt0.c2, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c3 HAVING MIN(MIN(TOTAL(rt0.c4))) UNION ALL SELECT ALL rt0.c2, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c3 HAVING (NOT (MIN(MIN(TOTAL(rt0.c4))))) UNION ALL SELECT rt0.c2, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c3 HAVING ((MIN(MIN(TOTAL(rt0.c4)))) ISNULL);
SELECT ALL rt0.c1, rt0.c3, rt0.c4, rt0.c2, rt0.c0, v0.c0 FROM v0 RIGHT OUTER JOIN rt0 ON CASE ((rt0.c2) IS FALSE)  WHEN ((v0.c0) BETWEEN (rt0.c3) AND (rt0.c3)) THEN (('149546655') BETWEEN (rt0.c3) AND (rt0.c2)) ELSE ((((((((rt0.c0)AND(rt0.c0)))AND(rt0.c1)))AND(rt0.c1)))OR(rt0.c4)) END;
SELECT ALL rt0.c1, rt0.c3, rt0.c4, rt0.c2, rt0.c0, v0.c0 FROM v0 RIGHT OUTER JOIN rt0 ON CASE ((rt0.c2) IS FALSE)  WHEN ((v0.c0) BETWEEN (rt0.c3) AND (rt0.c3)) THEN (('149546655') BETWEEN (rt0.c3) AND (rt0.c2)) ELSE ((((((((rt0.c0)AND(rt0.c0)))AND(rt0.c1)))AND(rt0.c1)))OR(rt0.c4)) END WHERE (((+ (rt0.c1)) IN (((((rt0.c2)OR(v0.c0)))OR(rt0.c1))))) UNION ALL SELECT ALL rt0.c1, rt0.c3, rt0.c4, rt0.c2, rt0.c0, v0.c0 FROM v0 NOT INDEXED RIGHT OUTER JOIN rt0 ON CASE ((rt0.c2) IS FALSE)  WHEN ((v0.c0) BETWEEN (rt0.c3) AND (rt0.c3)) THEN (('149546655') BETWEEN (rt0.c3) AND (rt0.c2)) ELSE ((((((((rt0.c0)AND(rt0.c0)))AND(rt0.c1)))AND(rt0.c1)))OR(rt0.c4)) END WHERE ((NOT (((+ (rt0.c1)) IN (((((rt0.c2)OR(v0.c0)))OR(rt0.c1))))))) UNION ALL SELECT ALL rt0.c1, rt0.c3, rt0.c4, rt0.c2, rt0.c0, v0.c0 FROM v0 RIGHT OUTER JOIN rt0 ON CASE ((rt0.c2) IS FALSE)  WHEN ((v0.c0) BETWEEN (rt0.c3) AND (rt0.c3)) THEN (('149546655') BETWEEN (rt0.c3) AND (rt0.c2)) ELSE ((((((((rt0.c0)AND(rt0.c0)))AND(rt0.c1)))AND(rt0.c1)))OR(rt0.c4)) END WHERE (((((+ (rt0.c1)) IN (((((rt0.c2)OR(v0.c0)))OR(rt0.c1))))) ISNULL));
SELECT ALL rt0.c1, rt0.c3, rt0.c4, rt0.c2, rt0.c0, v0.c0 FROM v0 RIGHT OUTER JOIN rt0 ON CASE ((rt0.c2) IS FALSE)  WHEN ((v0.c0) BETWEEN (rt0.c3) AND (rt0.c3)) THEN (('149546655') BETWEEN (rt0.c3) AND (rt0.c2)) ELSE ((((((((rt0.c0)AND(rt0.c0)))AND(rt0.c1)))AND(rt0.c1)))OR(rt0.c4)) END;
SELECT DISTINCT rt0.c4, rt0.c3, rt0.c0, rt0.c1, v0.c0, rt0.c2 FROM rt0, v0;
SELECT DISTINCT rt0.c4, rt0.c3, rt0.c0, rt0.c1, v0.c0, rt0.c2 FROM rt0, v0 WHERE ((CAST(rt0.c0 AS NUMERIC) IN ())) UNION SELECT DISTINCT rt0.c4, rt0.c3, rt0.c0, rt0.c1, v0.c0, rt0.c2 FROM rt0, v0 WHERE ((NOT ((CAST(rt0.c0 AS NUMERIC) IN ())))) UNION SELECT DISTINCT rt0.c4, rt0.c3, rt0.c0, rt0.c1, v0.c0, rt0.c2 FROM rt0, v0 WHERE ((((CAST(rt0.c0 AS NUMERIC) IN ())) ISNULL));
SELECT DISTINCT rt0.c4, rt0.c3, rt0.c0, rt0.c1, v0.c0, rt0.c2 FROM rt0, v0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE ((NOT (((''']. +')IS NOT(v0.c0))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT ((NOT (((''']. +')IS NOT(v0.c0))))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((((NOT (((''']. +')IS NOT(v0.c0))))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING MIN((((COUNT(TOTAL(MAX(MIN(AVG(v0.c0))))))) BETWEEN ((v0.c0)) AND ((v0.c0)))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (MIN((((COUNT(TOTAL(MAX(MIN(AVG(v0.c0))))))) BETWEEN ((v0.c0)) AND ((v0.c0)))))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((MIN((((COUNT(TOTAL(MAX(MIN(AVG(v0.c0))))))) BETWEEN ((v0.c0)) AND ((v0.c0))))) ISNULL);
SELECT rt0.c3, rt0.c1, rt0.c4, rt0.c0 FROM rt0;
SELECT rt0.c3, rt0.c1, rt0.c4, rt0.c0 FROM rt0 WHERE (CASE WHEN ((rt0.c1)-(0x3b3357ba)) THEN rt0.c1 COLLATE BINARY ELSE ((((rt0.c0)AND(rt0.c4)))AND(rt0.c3)) END) UNION ALL SELECT rt0.c3, rt0.c1, rt0.c4, rt0.c0 FROM rt0 WHERE ((NOT (CASE WHEN ((rt0.c1)-(0x3b3357ba)) THEN rt0.c1 COLLATE BINARY ELSE ((((rt0.c0)AND(rt0.c4)))AND(rt0.c3)) END))) UNION ALL SELECT rt0.c3, rt0.c1, rt0.c4, rt0.c0 FROM rt0 WHERE (((CASE WHEN ((rt0.c1)-(0x3b3357ba)) THEN rt0.c1 COLLATE BINARY ELSE ((((rt0.c0)AND(rt0.c4)))AND(rt0.c3)) END) ISNULL));
SELECT rt0.c3, rt0.c1, rt0.c4, rt0.c0 FROM rt0;
SELECT DISTINCT v0.c0, rt0.c4, rt0.c2 FROM v0, rt0;
SELECT DISTINCT v0.c0, rt0.c4, rt0.c2 FROM v0, rt0 WHERE (rt0.c4) UNION SELECT DISTINCT v0.c0, rt0.c4, rt0.c2 FROM v0, rt0 WHERE ((NOT (rt0.c4))) UNION SELECT DISTINCT v0.c0, rt0.c4, rt0.c2 FROM v0, rt0 WHERE (((rt0.c4) ISNULL));
SELECT DISTINCT v0.c0, rt0.c4, rt0.c2 FROM v0, rt0;
SELECT ALL rt0.c1, v0.c0, rt0.c2, rt0.c0, rt0.c3 FROM v0 INNER JOIN rt0 ON (LOWER(rt0.c4) IN (rt0.c1 COLLATE BINARY)) GROUP BY rt0.c1, v0.c0, rt0.c2, rt0.c0, rt0.c3;
SELECT rt0.c1, v0.c0, rt0.c2, rt0.c0, rt0.c3 FROM v0 INNER JOIN rt0 ON (LOWER(rt0.c4) IN (rt0.c1 COLLATE BINARY)) WHERE (((rt0.c2)>=(rt0.c3)) COLLATE NOCASE) GROUP BY rt0.c1, v0.c0, rt0.c2, rt0.c0, rt0.c3 UNION SELECT ALL rt0.c1, v0.c0, rt0.c2, rt0.c0, rt0.c3 FROM v0 INNER JOIN rt0 ON (LOWER(rt0.c4) IN (rt0.c1 COLLATE BINARY)) WHERE ((NOT (((rt0.c2)>=(rt0.c3)) COLLATE NOCASE))) GROUP BY rt0.c1, v0.c0, rt0.c2, rt0.c0, rt0.c3 UNION SELECT ALL rt0.c1, v0.c0, rt0.c2, rt0.c0, rt0.c3 FROM v0 INNER JOIN rt0 ON (LOWER(rt0.c4) IN (rt0.c1 COLLATE BINARY)) WHERE (((((rt0.c2)>=(rt0.c3)) COLLATE NOCASE) ISNULL)) GROUP BY rt0.c1, v0.c0, rt0.c2, rt0.c0, rt0.c3;
SELECT ALL rt0.c1, v0.c0, rt0.c2, rt0.c0, rt0.c3 FROM v0 INNER JOIN rt0 ON (LOWER(rt0.c4) IN (rt0.c1 COLLATE BINARY)) GROUP BY rt0.c1, v0.c0, rt0.c2, rt0.c0, rt0.c3;
SELECT ALL rt0.c4, rt0.c0, rt0.c2, rt0.c1, rt0.c3 FROM rt0 GROUP BY rt0.c4, rt0.c0, rt0.c2, rt0.c1, rt0.c3;
SELECT rt0.c4, rt0.c0, rt0.c2, rt0.c1, rt0.c3 FROM rt0 GROUP BY rt0.c4, rt0.c0, rt0.c2, rt0.c1, rt0.c3 HAVING AVG(AVG(rt0.c3)) UNION ALL SELECT rt0.c4, rt0.c0, rt0.c2, rt0.c1, rt0.c3 FROM rt0 GROUP BY rt0.c4, rt0.c0, rt0.c2, rt0.c1, rt0.c3 HAVING (NOT (AVG(AVG(rt0.c3)))) UNION ALL SELECT ALL rt0.c4, rt0.c0, rt0.c2, rt0.c1, rt0.c3 FROM rt0 GROUP BY rt0.c4, rt0.c0, rt0.c2, rt0.c1, rt0.c3 HAVING ((AVG(AVG(rt0.c3))) ISNULL);
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE (((rt0.c3)==(rt0.c3 COLLATE NOCASE))) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (((rt0.c3)==(rt0.c3 COLLATE NOCASE))))) UNION ALL SELECT * FROM rt0 WHERE (((((rt0.c3)=(rt0.c3 COLLATE NOCASE))) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE ((((v0.c0, v0.c0, v0.c0)) BETWEEN ((v0.c0 COLLATE BINARY, (((v0.c0, v0.c0, v0.c0)) BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0))), ((v0.c0) IS TRUE))) AND ((((v0.c0) IS TRUE), ((v0.c0)LIKE(-620605226)), ABS(v0.c0))))) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT ((((v0.c0, v0.c0, v0.c0)) BETWEEN ((v0.c0 COLLATE BINARY, (((v0.c0, v0.c0, v0.c0)) BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0))), ((v0.c0) IS TRUE))) AND ((((v0.c0) IS TRUE), ((v0.c0)LIKE(-620605226)), ABS(v0.c0))))))) UNION SELECT DISTINCT * FROM v0 WHERE ((((((v0.c0, v0.c0, v0.c0)) BETWEEN ((v0.c0 COLLATE BINARY, (((v0.c0, v0.c0, v0.c0)) BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0))), ((v0.c0) IS TRUE))) AND ((((v0.c0) IS TRUE), ((v0.c0)LIKE(-620605226)), ABS(v0.c0))))) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT ALL rt0.c2, rt0.c0, v0.c0, rt0.c3 FROM v0, rt0 GROUP BY rt0.c2, rt0.c0, v0.c0, rt0.c3;
SELECT ALL rt0.c2, rt0.c0, v0.c0, rt0.c3 FROM v0, rt0 WHERE ((~ (rt0.c1))) GROUP BY rt0.c2, rt0.c0, v0.c0, rt0.c3 UNION SELECT ALL rt0.c2, rt0.c0, v0.c0, rt0.c3 FROM v0, rt0 WHERE ((NOT ((~ (rt0.c1))))) GROUP BY rt0.c2, rt0.c0, v0.c0, rt0.c3 UNION SELECT ALL rt0.c2, rt0.c0, v0.c0, rt0.c3 FROM v0, rt0 WHERE ((((~ (rt0.c1))) ISNULL)) GROUP BY rt0.c2, rt0.c0, v0.c0, rt0.c3;
SELECT ALL rt0.c2, rt0.c0, v0.c0, rt0.c3 FROM v0, rt0 GROUP BY rt0.c2, rt0.c0, v0.c0, rt0.c3;
SELECT ALL rt0.c0, v0.c0, rt0.c4 FROM rt0, v0 GROUP BY rt0.c0, v0.c0, rt0.c4;
SELECT rt0.c0, v0.c0, rt0.c4 FROM rt0, v0 GROUP BY rt0.c0, v0.c0, rt0.c4 HAVING ((CASE COUNT(*)  WHEN SUM(TOTAL(-26019099)) THEN COUNT(GROUP_CONCAT(TOTAL(SUM(MIN(MAX(rt0.c3)))))) ELSE GROUP_CONCAT(MIN(v0.c0)) END) BETWEEN (((rt0.c0)GLOB(MAX(COUNT(*))))) AND ('1047179286')) UNION ALL SELECT rt0.c0, v0.c0, rt0.c4 FROM rt0, v0 GROUP BY rt0.c0, v0.c0, rt0.c4 HAVING (NOT (((CASE COUNT(*)  WHEN SUM(TOTAL(-26019099)) THEN COUNT(GROUP_CONCAT(TOTAL(SUM(MIN(MAX(rt0.c3)))))) ELSE GROUP_CONCAT(MIN(v0.c0)) END) BETWEEN (((rt0.c0)GLOB(MAX(COUNT(*))))) AND ('1047179286')))) UNION ALL SELECT ALL rt0.c0, v0.c0, rt0.c4 FROM rt0, v0 GROUP BY rt0.c0, v0.c0, rt0.c4 HAVING ((((CASE COUNT(*)  WHEN SUM(TOTAL(-26019099)) THEN COUNT(GROUP_CONCAT(TOTAL(SUM(MIN(MAX(rt0.c3)))))) ELSE GROUP_CONCAT(MIN(v0.c0)) END) BETWEEN (((rt0.c0)GLOB(MAX(COUNT(*))))) AND ('1047179286'))) ISNULL);
SELECT ALL * FROM v0 CROSS JOIN rt0 ON (((rt0.c3) IS TRUE) IN ());
SELECT * FROM v0 CROSS JOIN rt0 ON (((rt0.c3) IS TRUE) IN ()) WHERE (CAST(rt0.c4 COLLATE BINARY AS NUMERIC)) UNION ALL SELECT ALL * FROM v0 CROSS JOIN rt0 ON (((rt0.c3) IS TRUE) IN ()) WHERE ((NOT (CAST(rt0.c4 COLLATE BINARY AS NUMERIC)))) UNION ALL SELECT * FROM v0 CROSS JOIN rt0 ON (((rt0.c3) IS TRUE) IN ()) WHERE (((CAST(rt0.c4 COLLATE BINARY AS NUMERIC)) ISNULL));
SELECT ALL * FROM v0 CROSS JOIN rt0 ON (((rt0.c3) IS TRUE) IN ());
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (CAST(((((rt0.c0)AND(rt0.c2)))OR(rt0.c2)) AS INTEGER)) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (CAST(((((rt0.c0)AND(rt0.c2)))OR(rt0.c2)) AS INTEGER)))) UNION SELECT DISTINCT * FROM rt0 WHERE (((CAST(((((rt0.c0)AND(rt0.c2)))OR(rt0.c2)) AS INTEGER)) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (UNLIKELY((- (v0.c0)))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT (UNLIKELY((- (v0.c0)))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((UNLIKELY((- (v0.c0)))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING CASE ((v0.c0) IS FALSE)  WHEN ((COUNT(v0.c0))GLOB(v0.c0)) THEN RTRIM(SUM(v0.c0)) ELSE TYPEOF(DISTINCT SUM(SUM(v0.c0))) END UNION ALL SELECT v0.c0 FROM v0 NOT INDEXED GROUP BY v0.c0 HAVING (NOT (CASE ((v0.c0) IS FALSE)  WHEN ((COUNT(v0.c0))GLOB(v0.c0)) THEN RTRIM(SUM(v0.c0)) ELSE TYPEOF(DISTINCT SUM(SUM(v0.c0))) END)) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((CASE ((v0.c0) IS FALSE)  WHEN ((COUNT(v0.c0))GLOB(v0.c0)) THEN RTRIM(SUM(v0.c0)) ELSE TYPEOF(DISTINCT SUM(SUM(v0.c0))) END) ISNULL);
SELECT ALL * FROM v0;
SELECT ALL * FROM v0 WHERE (((v0.c0 COLLATE BINARY)<(((((v0.c0)OR(v0.c0)))AND(v0.c0))))) UNION ALL SELECT * FROM v0 WHERE ((NOT (((v0.c0 COLLATE BINARY)<(((((v0.c0)OR(v0.c0)))AND(v0.c0))))))) UNION ALL SELECT ALL * FROM v0 WHERE (((((v0.c0 COLLATE BINARY)<(((((v0.c0)OR(v0.c0)))AND(v0.c0))))) ISNULL));
SELECT ALL * FROM v0;
SELECT DISTINCT rt0.c3, rt0.c2, rt0.c4, rt0.c1, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c3, rt0.c2, rt0.c4, rt0.c1, rt0.c0 FROM rt0 WHERE (CAST(CASE rt0.c2  WHEN rt0.c2 THEN rt0.c3 END AS TEXT)) UNION SELECT DISTINCT rt0.c3, rt0.c2, rt0.c4, rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (CAST(CASE rt0.c2  WHEN rt0.c2 THEN rt0.c3 END AS TEXT)))) UNION SELECT DISTINCT rt0.c3, rt0.c2, rt0.c4, rt0.c1, rt0.c0 FROM rt0 WHERE (((CAST(CASE rt0.c2  WHEN rt0.c2 THEN rt0.c3 END AS TEXT)) ISNULL));
SELECT DISTINCT rt0.c3, rt0.c2, rt0.c4, rt0.c1, rt0.c0 FROM rt0;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE (((rt0.c0) NOT BETWEEN (CASE 'L'  WHEN '-2074413961' THEN rt0.c3 END) AND ((+ (rt0.c4))))) GROUP BY rt0.c2, rt0.c1, rt0.c0 UNION SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (((rt0.c0) NOT BETWEEN (CASE 'L'  WHEN '-2074413961' THEN rt0.c3 END) AND ((+ (rt0.c4))))))) GROUP BY rt0.c2, rt0.c1, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE (((((rt0.c0) NOT BETWEEN (CASE 'L'  WHEN '-2074413961' THEN rt0.c3 END) AND ((+ (rt0.c4))))) ISNULL)) GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT ALL rt0.c4, v0.c0, rt0.c1, rt0.c0, rt0.c2 FROM v0, rt0 GROUP BY rt0.c4, v0.c0, rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c4, v0.c0, rt0.c1, rt0.c0, rt0.c2 FROM v0, rt0 GROUP BY rt0.c4, v0.c0, rt0.c1, rt0.c0, rt0.c2 HAVING CAST(SUM(v0.c0) AS INTEGER) UNION ALL SELECT ALL rt0.c4, v0.c0, rt0.c1, rt0.c0, rt0.c2 FROM v0, rt0 GROUP BY rt0.c4, v0.c0, rt0.c1, rt0.c0, rt0.c2 HAVING (NOT (CAST(SUM(v0.c0) AS INTEGER))) UNION ALL SELECT rt0.c4, v0.c0, rt0.c1, rt0.c0, rt0.c2 FROM v0, rt0 GROUP BY rt0.c4, v0.c0, rt0.c1, rt0.c0, rt0.c2 HAVING ((CAST(SUM(v0.c0) AS INTEGER)) ISNULL);
SELECT ALL rt0.c4, v0.c0, rt0.c1, rt0.c0, rt0.c2 FROM v0, rt0 GROUP BY rt0.c4, v0.c0, rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c4, v0.c0, rt0.c1, rt0.c0, rt0.c2 FROM v0, rt0 GROUP BY rt0.c4, v0.c0, rt0.c1, rt0.c0, rt0.c2 HAVING CAST(SUM(v0.c0) AS INTEGER) UNION ALL SELECT ALL rt0.c4, v0.c0, rt0.c1, rt0.c0, rt0.c2 FROM v0, rt0 GROUP BY rt0.c4, v0.c0, rt0.c1, rt0.c0, rt0.c2 HAVING (NOT (CAST(SUM(v0.c0) AS INTEGER))) UNION ALL SELECT rt0.c4, v0.c0, rt0.c1, rt0.c0, rt0.c2 FROM v0, rt0 GROUP BY rt0.c4, v0.c0, rt0.c1, rt0.c0, rt0.c2 HAVING ((CAST(SUM(v0.c0) AS INTEGER)) ISNULL);
SELECT ALL rt0.c4, v0.c0, rt0.c1, rt0.c0, rt0.c2 FROM v0, rt0 GROUP BY rt0.c4, v0.c0, rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c2, rt0.c4 FROM rt0;
SELECT rt0.c2, rt0.c4 FROM rt0 WHERE (((((rt0.c3)+(rt0.c4)))%(''))) UNION ALL SELECT ALL rt0.c2, rt0.c4 FROM rt0 WHERE ((NOT (((((rt0.c3)+(rt0.c4)))%(''))))) UNION ALL SELECT ALL rt0.c2, rt0.c4 FROM rt0 WHERE (((((((rt0.c3)+(rt0.c4)))%(''))) ISNULL));
SELECT ALL rt0.c2, rt0.c4 FROM rt0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (((((((((CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)OR((((v0.c0))<=((v0.c0))))))AND(((x'') BETWEEN (v0.c0) AND (v0.c0)))))OR(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))))AND(-1608341207))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (((((((((CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)OR((((v0.c0))<=((v0.c0))))))AND(((x'') BETWEEN (v0.c0) AND (v0.c0)))))OR(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))))AND(-1608341207))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((((((((((CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)OR((((v0.c0))<=((v0.c0))))))AND(((x'') BETWEEN (v0.c0) AND (v0.c0)))))OR(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))))AND(-1608341207))) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT rt0.c1, rt0.c2, rt0.c4, rt0.c3, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c4, rt0.c3, rt0.c0;
SELECT rt0.c1, rt0.c2, rt0.c4, rt0.c3, rt0.c0 FROM rt0 WHERE (((CAST(rt0.c3 AS BLOB))IS NOT(CAST(rt0.c1 AS NUMERIC)))) GROUP BY rt0.c1, rt0.c2, rt0.c4, rt0.c3, rt0.c0 UNION SELECT rt0.c1, rt0.c2, rt0.c4, rt0.c3, rt0.c0 FROM rt0 WHERE ((NOT (((CAST(rt0.c3 AS BLOB))IS NOT(CAST(rt0.c1 AS NUMERIC)))))) GROUP BY rt0.c1, rt0.c2, rt0.c4, rt0.c3, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c2, rt0.c4, rt0.c3, rt0.c0 FROM rt0 WHERE (((((CAST(rt0.c3 AS BLOB))IS NOT(CAST(rt0.c1 AS NUMERIC)))) ISNULL)) GROUP BY rt0.c1, rt0.c2, rt0.c4, rt0.c3, rt0.c0;
SELECT rt0.c1, rt0.c2, rt0.c4, rt0.c3, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c4, rt0.c3, rt0.c0;
SELECT rt0.c2 FROM v0, rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM v0, rt0 GROUP BY rt0.c2 HAVING CAST(MAX(rt0.c1) AS REAL) COLLATE RTRIM UNION ALL SELECT ALL rt0.c2 FROM v0, rt0 GROUP BY rt0.c2 HAVING (NOT (CAST(MAX(rt0.c1) AS REAL) COLLATE RTRIM)) UNION ALL SELECT ALL rt0.c2 FROM v0, rt0 GROUP BY rt0.c2 HAVING ((CAST(MAX(rt0.c1) AS REAL) COLLATE RTRIM) ISNULL);
SELECT rt0.c2 FROM v0, rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM v0, rt0 GROUP BY rt0.c2 HAVING CAST(MAX(rt0.c1) AS REAL) COLLATE RTRIM UNION ALL SELECT ALL rt0.c2 FROM v0, rt0 GROUP BY rt0.c2 HAVING (NOT (CAST(MAX(rt0.c1) AS REAL) COLLATE RTRIM)) UNION ALL SELECT ALL rt0.c2 FROM v0, rt0 GROUP BY rt0.c2 HAVING ((CAST(MAX(rt0.c1) AS REAL) COLLATE RTRIM) ISNULL);
SELECT rt0.c2 FROM v0, rt0 GROUP BY rt0.c2;
SELECT rt0.c4, rt0.c1 FROM rt0;
SELECT rt0.c4, rt0.c1 FROM rt0 WHERE (((((rt0.c1)*(rt0.c3)))>(CASE WHEN rt0.c0 THEN rt0.c0 ELSE x'' END))) UNION ALL SELECT rt0.c4, rt0.c1 FROM rt0 WHERE ((NOT (((((rt0.c1)*(rt0.c3)))>(CASE WHEN rt0.c0 THEN rt0.c0 ELSE x'' END))))) UNION ALL SELECT ALL rt0.c4, rt0.c1 FROM rt0 WHERE (((((((rt0.c1)*(rt0.c3)))>(CASE WHEN rt0.c0 THEN rt0.c0 ELSE x'' END))) ISNULL));
SELECT rt0.c4, rt0.c1 FROM rt0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (((NOT (v0.c0)) IN ())) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (((NOT (v0.c0)) IN ())))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((((NOT (v0.c0)) IN ())) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT rt0.c1, rt0.c2, v0.c0, rt0.c4 FROM v0, rt0 GROUP BY rt0.c1, rt0.c2, v0.c0, rt0.c4;
SELECT rt0.c1, rt0.c2, v0.c0, rt0.c4 FROM v0, rt0 WHERE (((v0.c0)==(rt0.c3)) COLLATE RTRIM) GROUP BY rt0.c1, rt0.c2, v0.c0, rt0.c4 UNION SELECT ALL rt0.c1, rt0.c2, v0.c0, rt0.c4 FROM v0, rt0 WHERE ((NOT (((v0.c0)==(rt0.c3)) COLLATE RTRIM))) GROUP BY rt0.c1, rt0.c2, v0.c0, rt0.c4 UNION SELECT ALL rt0.c1, rt0.c2, v0.c0, rt0.c4 FROM v0, rt0 WHERE (((((v0.c0)=(rt0.c3)) COLLATE RTRIM) ISNULL)) GROUP BY rt0.c1, rt0.c2, v0.c0, rt0.c4;
SELECT rt0.c1, rt0.c2, v0.c0, rt0.c4 FROM v0, rt0 GROUP BY rt0.c1, rt0.c2, v0.c0, rt0.c4;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((MAX(v0.c0)) BETWEEN (CAST(v0.c0 AS REAL)) AND (MAX(TOTAL(MIN(v0.c0))) COLLATE BINARY)) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (((MAX(v0.c0)) BETWEEN (CAST(v0.c0 AS REAL)) AND (MAX(TOTAL(MIN(v0.c0))) COLLATE BINARY)))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((((MAX(v0.c0)) BETWEEN (CAST(v0.c0 AS REAL)) AND (MAX(TOTAL(MIN(v0.c0))) COLLATE BINARY))) ISNULL);
SELECT ALL rt0.c0, rt0.c1, rt0.c3 FROM v0, rt0;
SELECT rt0.c0, rt0.c1, rt0.c3 FROM v0, rt0 WHERE (('u#' IN ())) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c3 FROM v0, rt0 WHERE ((NOT (('u#' IN ())))) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c3 FROM v0, rt0 WHERE (((('u#' IN ())) ISNULL));
SELECT ALL rt0.c0, rt0.c1, rt0.c3 FROM v0, rt0;
SELECT DISTINCT rt0.c2, rt0.c3, rt0.c1, rt0.c0, rt0.c4 FROM v0, rt0;
SELECT DISTINCT rt0.c2, rt0.c3, rt0.c1, rt0.c0, rt0.c4 FROM v0, rt0 WHERE (((((((((CASE WHEN v0.c0 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN v0.c0 END)AND(((rt0.c0)<=(rt0.c4)))))OR(rt0.c4)))AND(UNLIKELY(rt0.c0))))AND(UNLIKELY(DISTINCT rt0.c2)))) UNION SELECT DISTINCT rt0.c2, rt0.c3, rt0.c1, rt0.c0, rt0.c4 FROM v0, rt0 WHERE ((NOT (((((((((CASE WHEN v0.c0 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN v0.c0 END)AND(((rt0.c0)<=(rt0.c4)))))OR(rt0.c4)))AND(UNLIKELY(rt0.c0))))AND(UNLIKELY(DISTINCT rt0.c2)))))) UNION SELECT DISTINCT rt0.c2, rt0.c3, rt0.c1, rt0.c0, rt0.c4 FROM v0, rt0 WHERE (((((((((((CASE WHEN v0.c0 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN v0.c0 END)AND(((rt0.c0)<=(rt0.c4)))))OR(rt0.c4)))AND(UNLIKELY(rt0.c0))))AND(UNLIKELY(DISTINCT rt0.c2)))) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c3, rt0.c1, rt0.c0, rt0.c4 FROM v0, rt0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (((CAST(v0.c0 AS INTEGER)) NOT BETWEEN ('-1411690973') AND (((v0.c0)IS NOT(v0.c0))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT (((CAST(v0.c0 AS INTEGER)) NOT BETWEEN ('-1411690973') AND (((v0.c0)IS NOT(v0.c0))))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE (((((CAST(v0.c0 AS INTEGER)) NOT BETWEEN ('-1411690973') AND (((v0.c0)IS NOT(v0.c0))))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT rt0.c0, rt0.c2, rt0.c1, rt0.c4, v0.c0, rt0.c3 FROM rt0, v0 GROUP BY rt0.c0, rt0.c2, rt0.c1, rt0.c4, v0.c0, rt0.c3;
SELECT ALL rt0.c0, rt0.c2, rt0.c1, rt0.c4, v0.c0, rt0.c3 FROM rt0, v0 GROUP BY rt0.c0, rt0.c2, rt0.c1, rt0.c4, v0.c0, rt0.c3 HAVING SUM(COUNT(SUM(v0.c0))) UNION ALL SELECT rt0.c0, rt0.c2, rt0.c1, rt0.c4, v0.c0, rt0.c3 FROM rt0, v0 GROUP BY rt0.c0, rt0.c2, rt0.c1, rt0.c4, v0.c0, rt0.c3 HAVING (NOT (SUM(COUNT(SUM(v0.c0))))) UNION ALL SELECT rt0.c0, rt0.c2, rt0.c1, rt0.c4, v0.c0, rt0.c3 FROM rt0, v0 GROUP BY rt0.c0, rt0.c2, rt0.c1, rt0.c4, v0.c0, rt0.c3 HAVING ((SUM(COUNT(SUM(v0.c0)))) ISNULL);
SELECT * FROM v0;
SELECT ALL * FROM v0 WHERE (((((v0.c0) NOTNULL))%(((v0.c0)LIKE(v0.c0))))) UNION ALL SELECT * FROM v0 WHERE ((NOT (((((v0.c0) NOTNULL))%(((v0.c0)LIKE(v0.c0))))))) UNION ALL SELECT ALL * FROM v0 WHERE (((((((v0.c0) NOTNULL))%(((v0.c0)LIKE(v0.c0))))) ISNULL));
SELECT * FROM v0;
SELECT DISTINCT rt0.c3 FROM v0 NATURAL JOIN rt0;
SELECT DISTINCT rt0.c3 FROM v0 NATURAL JOIN rt0 WHERE (((('856368498' IN (rt0.c4))) BETWEEN ((NOT (rt0.c4))) AND (NULL))) UNION SELECT DISTINCT rt0.c3 FROM v0 NATURAL JOIN rt0 WHERE ((NOT (((('856368498' IN (rt0.c4))) BETWEEN ((NOT (rt0.c4))) AND (NULL))))) UNION SELECT DISTINCT rt0.c3 FROM v0 NATURAL JOIN rt0 WHERE (((((('856368498' IN (rt0.c4))) BETWEEN ((NOT (rt0.c4))) AND (NULL))) ISNULL));
SELECT DISTINCT rt0.c3 FROM v0 NATURAL JOIN rt0;
SELECT ALL rt0.c3, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c3, rt0.c1, rt0.c2;
SELECT ALL rt0.c3, rt0.c1, rt0.c2 FROM rt0 WHERE (((((((((rt0.c3)OR(NULL)))OR(((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c1)))))AND(rt0.c4)))OR((rt0.c0 IN ())))) GROUP BY rt0.c3, rt0.c1, rt0.c2 UNION SELECT ALL rt0.c3, rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (((((((((rt0.c3)OR(NULL)))OR(((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c1)))))AND(rt0.c4)))OR((rt0.c0 IN ())))))) GROUP BY rt0.c3, rt0.c1, rt0.c2 UNION SELECT ALL rt0.c3, rt0.c1, rt0.c2 FROM rt0 WHERE (((((((((((rt0.c3)OR(NULL)))OR(((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c1)))))AND(rt0.c4)))OR((rt0.c0 IN ())))) ISNULL)) GROUP BY rt0.c3, rt0.c1, rt0.c2;
SELECT ALL rt0.c3, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c3, rt0.c1, rt0.c2;
