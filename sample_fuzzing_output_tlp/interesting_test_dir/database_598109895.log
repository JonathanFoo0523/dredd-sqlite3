-- Time: 2024/06/09 00:24:56
-- Database: database95
-- Database version: 3.40.0
-- seed value: 598109895
PRAGMA cache_size = 50000; -- 0ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA case_sensitive_like=ON; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts5(c0, c1); -- 1ms;
PRAGMA temp.cache_size; -- 0ms;
PRAGMA integrity_check; -- 0ms;
UPDATE OR IGNORE vt0 SET c1=x'6862', c0=0.7704005884373025, c0=x'3770', c1='0.7704005884373025'; -- 0ms;
ANALYZE temp; -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES (NULL, x'fed3ae2441b0'), (x'', NULL), ('X<', '1930947834'); -- 0ms;
UPDATE OR ABORT vt0 SET c1='0.7704005884373025' WHERE DATE(vt0.c1, vt0.c0, vt0.c1) COLLATE NOCASE; -- 0ms;
UPDATE OR IGNORE vt0 SET (c0)=('1930947834'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR FAIL vt0 SET (c0)=(1.930947834E9); -- 1ms;
ANALYZE; -- 1ms;
INSERT OR IGNORE INTO vt0(c1, c0) VALUES (-911722739, x'0a02'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
UPDATE vt0 SET c1=x'', c0='305481086', c0='î³ºg'; -- 0ms;
UPDATE vt0 SET (c0)=('-911722739') WHERE ((ROUND(vt0.c1, vt0.c0))|((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))); -- 0ms;
ANALYZE; -- 1ms;
INSERT OR ROLLBACK INTO vt0(c0, c1) VALUES ('305481086', '305481086'); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
REINDEX  vt0; -- 0ms;
PRAGMA main.locking_mode; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
ANALYZE; -- 0ms;
ANALYZE; -- 1ms;
UPDATE OR ROLLBACK vt0 SET c0=NULL; -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=12'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 10); -- 0ms;
PRAGMA incremental_vacuum; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '45666'); -- 0ms;
UPDATE vt0 SET (c1, c1)=('{/', x''); -- 0ms;
INSERT OR FAIL INTO vt0 VALUES ('[ABUZ2UC', -1.7976931348623157E308), (-911722739, '305481086'), ('{/', 0.008323430061824233); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 477007182); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 sz=-1564988031 unordered'); -- 0ms;
ROLLBACK TRANSACTION; -- 1ms;
INSERT OR ABORT INTO vt0(c1) VALUES (x''); -- 0ms;
ANALYZE; -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 1ms;
UPDATE OR IGNORE vt0 SET (c1)=('1930947834'); -- 0ms;
PRAGMA recursive_triggers; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA checkpoint_fullfsync = false; -- 0ms;
INSERT OR IGNORE INTO vt0(c1) VALUES (''), (x''), (0.7704005884373025); -- 0ms;
CREATE VIEW  IF NOT EXISTS v0(c0) AS SELECT (- (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) FROM vt0 WHERE (CAST(0.39724759306282453 AS BLOB)) ORDER BY CAST(((vt0.c1) NOT NULL) AS REAL) DESC, ((CAST(vt0.c1 AS BLOB)) NOT BETWEEN ((NOT (vt0.c0))) AND (vt0.c1)) DESC; -- 0ms;
PRAGMA main.stats; -- 0ms;
INSERT OR IGNORE INTO vt0(c1) VALUES ('umoyu'), (x''), (0.5479817061515329); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 9); -- 0ms;
UPDATE OR IGNORE vt0 SET (c1)=('1930947834'); -- 0ms;
UPDATE OR IGNORE vt0 SET c1=0.94153565294141 WHERE ABS(DISTINCT CASE WHEN vt0.c1 THEN vt0.c1 END); -- 0ms;
PRAGMA temp.automatic_index = false; -- 0ms;
ANALYZE; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
END; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 207400130); -- 0ms;
INSERT OR ABORT INTO vt0(c1) VALUES (3.05481086E8); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR ROLLBACK INTO vt0(c0) VALUES ('{<'), (x''), (0.05949469649464412), (0.8493839492889395), (0.5327640139593176); -- 0ms;
CREATE VIRTUAL TABLE vt1 USING fts4(c0 UNINDEXED, c1 UNINDEXED, notindexed=c0, compress=likely, uncompress=likely); -- 0ms;
PRAGMA temp.cell_size_check; -- 0ms;
UPDATE vt0 SET (c1)=(NULL) WHERE ((UPPER(DISTINCT vt0.c1)) ISNULL); -- 5ms;
END; -- 0ms;
INSERT OR FAIL INTO vt1(c1) VALUES (NULL), (x''), (NULL); -- 0ms;
UPDATE vt0 SET c1='VOz43JN'; -- 0ms;
INSERT OR ABORT INTO vt1 VALUES ('305481086', '1930947834'), (-1564988031, x''), ('-911722739', -9.11722739E8), (0X50941030, '775329027'), (x'b572', 643554284); -- 1ms;
DELETE FROM sqlite_stat1 WHERE CAST(((NULL) BETWEEN (0.7602939671023325) AND ('jO')) AS INTEGER); -- 0ms;
INSERT OR FAIL INTO vt0 VALUES ('Z', x''), (CASE ((NULL)LIKE(0.8950896924423775))  WHEN CAST('-1' AS REAL) THEN NULL END, x'a66b'), ('', NULL); -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (1930947834), (x''), (x'a980'); -- 1ms;
UPDATE vt1 SET c1=NULL WHERE ((((((vt1.c0)<(vt1.c1)))AND(x'')))AND(((vt1.c1) IS TRUE))); -- 0ms;
UPDATE OR IGNORE vt1 SET c1=-1.564988031E9; -- 1ms;
UPDATE OR IGNORE vt0 SET (c0, c0)=('-1564988031', 0.4618927369113849); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT OR ABORT INTO vt0 VALUES (NULL, 'f7{'), ('1774320914', 0x6eb0eee8), (CASE (('0.39724759306282453')>(1.930947834E9))  WHEN ((NULL)GLOB(0.621841404207275)) THEN '' WHEN (- (NULL)) THEN ((((-1.564988031E9)OR('1930947834')))AND(NULL)) WHEN ((((x'')AND(x'1493')))AND(0.621841404207275)) THEN x'52f7' COLLATE NOCASE ELSE (((0.608034543515))!=((x''))) END, '&B2[4Ztq'), (1619533066, 0X50941030), (x'', NULL); -- 0ms;
UPDATE vt0 SET c1='' WHERE ((((((vt0.c0)<<(vt0.c1)))OR(vt0.c0)))OR(vt0.c0)); -- 0ms;
CREATE TABLE IF NOT EXISTS t0 (c0 INTEGER UNIQUE ON CONFLICT REPLACE PRIMARY KEY AUTOINCREMENT NOT NULL  CHECK ( ((((((((((((c0)OR(c0)))AND(c0)))OR((NOT (c0)))))OR(((c0)IS(c0)))))OR((c0 IN (c0, c0)))))AND(CAST(-9.11722739E8 AS NUMERIC))))); -- 1ms;
INSERT OR REPLACE INTO vt1 VALUES (x'c776', '-2010862646'), (NULL, 0.39263128391657387), ('-2091412282', 305481086); -- 0ms;
UPDATE OR ROLLBACK t0 SET c0=1395194600 WHERE IFNULL(DISTINCT ((t0.c0) NOT BETWEEN (0xffffffffe8b310db) AND (t0.c0)), CAST(t0.c0 AS BLOB)); -- 0ms;
ANALYZE; -- 1ms;
UPDATE OR IGNORE vt0 SET (c1)=('\r') WHERE CAST(((vt0.c0) IS FALSE) AS BLOB); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES ('f7{'); -- 0ms;
ANALYZE; -- 0ms;
END; -- 0ms;
INSERT OR FAIL INTO vt0 VALUES ('33253066', 0.29408829738769426); -- 0ms;
PRAGMA main.auto_vacuum; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('usermerge', 15); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 1ms;
UPDATE OR IGNORE vt1 SET c1='1180804769', c1=0.23165225899808306, c0=0xffffffffc0ddd36f; -- 0ms;
UPDATE OR IGNORE vt1 SET (c0)=(NULL); -- 4ms;
INSERT OR ABORT INTO vt1 VALUES (x'79f6', ''); -- 0ms;
UPDATE OR IGNORE vt0 SET c0='-2127856850'; -- 3ms;
UPDATE OR IGNORE vt1 SET c0=NULL; -- 1ms;
INSERT OR FAIL INTO vt0 VALUES (x'', NULL); -- 0ms;
PRAGMA main.short_column_names; -- 0ms;
DELETE FROM vt0; -- 1ms;
PRAGMA main.checkpoint_fullfsync; -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
COMMIT TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 1ms;
SELECT ALL vt1.c0 FROM vt1;
SELECT ALL vt1.c0 FROM vt1 WHERE (CAST((~ (vt1.c0)) AS TEXT)) ORDER BY NULL  NULLS FIRST;
SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (CAST((~ (vt1.c0)) AS TEXT)))) ORDER BY NULL  NULLS FIRST;
SELECT vt1.c0 FROM vt1 WHERE (((CAST((~ (vt1.c0)) AS TEXT)) ISNULL)) ORDER BY NULL  NULLS FIRST;
SELECT ALL vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c1, vt0.c0, vt0.c1, vt1.c0 FROM vt1 NATURAL JOIN vt0;
SELECT DISTINCT vt1.c1, vt0.c0, vt0.c1, vt1.c0 FROM vt1 NATURAL JOIN vt0 WHERE (((((vt1.c0) ISNULL))||((vt0.c0 IN (vt0.c0, vt1.c0))))) UNION SELECT DISTINCT vt1.c1, vt0.c0, vt0.c1, vt1.c0 FROM vt1 NATURAL JOIN vt0 WHERE ((NOT (((((vt1.c0) ISNULL))||((vt0.c0 IN (vt0.c0, vt1.c0))))))) UNION SELECT DISTINCT vt1.c1, vt0.c0, vt0.c1, vt1.c0 FROM vt1 NATURAL JOIN vt0 WHERE (((((((vt1.c0) ISNULL))||((vt0.c0 IN (vt0.c0, vt1.c0))))) ISNULL));
SELECT DISTINCT vt1.c1, vt0.c0, vt0.c1, vt1.c0 FROM vt1 NATURAL JOIN vt0;
SELECT ALL vt1.c1 FROM v0, vt0 NATURAL JOIN vt1 GROUP BY vt1.c1;
SELECT ALL vt1.c1 FROM v0, vt0 NATURAL JOIN vt1 WHERE (v0.c0) GROUP BY vt1.c1 UNION SELECT vt1.c1 FROM v0, vt0 NATURAL JOIN vt1 WHERE ((NOT (v0.c0))) GROUP BY vt1.c1 UNION SELECT vt1.c1 FROM v0, vt0 NATURAL JOIN vt1 WHERE (((v0.c0) ISNULL)) GROUP BY vt1.c1;
SELECT ALL vt1.c1 FROM v0, vt0 NATURAL JOIN vt1 GROUP BY vt1.c1;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (((GROUP_CONCAT(v0.c0)))>=((COUNT(v0.c0)))) COLLATE RTRIM UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT ((((GROUP_CONCAT(v0.c0)))>=((COUNT(v0.c0)))) COLLATE RTRIM)) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (((((GROUP_CONCAT(v0.c0)))>=((COUNT(v0.c0)))) COLLATE RTRIM) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (((GROUP_CONCAT(v0.c0)))>=((COUNT(v0.c0)))) COLLATE RTRIM UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT ((((GROUP_CONCAT(v0.c0)))>=((COUNT(v0.c0)))) COLLATE RTRIM)) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (((((GROUP_CONCAT(v0.c0)))>=((COUNT(v0.c0)))) COLLATE RTRIM) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT vt0.c0 FROM v0, vt0, vt1;
SELECT ALL vt0.c0 FROM v0, vt0, vt1 WHERE ((- (((v0.c0)*(vt0.c1))))) UNION ALL SELECT vt0.c0 FROM v0, vt0, vt1 WHERE ((NOT ((- (((v0.c0)*(vt0.c1))))))) UNION ALL SELECT ALL vt0.c0 FROM v0, vt0, vt1 WHERE ((((- (((v0.c0)*(vt0.c1))))) ISNULL));
SELECT vt0.c0 FROM v0, vt0, vt1;
SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0;
SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0 WHERE ((((- (vt0.c1))) ISNULL)) UNION SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0 WHERE ((NOT ((((- (vt0.c1))) ISNULL)))) UNION SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0 WHERE ((((((- (vt0.c1))) ISNULL)) ISNULL));
SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c0, vt0.c1 FROM vt0 WHERE (TYPEOF(DISTINCT (vt0.c1 IN ()))) GROUP BY vt0.c0, vt0.c1 UNION SELECT ALL vt0.c0, vt0.c1 FROM vt0 WHERE ((NOT (TYPEOF(DISTINCT (vt0.c1 IN ()))))) GROUP BY vt0.c0, vt0.c1 UNION SELECT vt0.c0, vt0.c1 FROM vt0 WHERE (((TYPEOF(DISTINCT (vt0.c1 IN ()))) ISNULL)) GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1;
SELECT ALL vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1 HAVING ((MAX(vt1.c1))OR(SUM(COUNT(TOTAL(TOTAL(vt1.c0)))))) UNION ALL SELECT ALL vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1 HAVING (NOT (((MAX(vt1.c1))OR(SUM(COUNT(TOTAL(TOTAL(vt1.c0)))))))) UNION ALL SELECT ALL vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1 HAVING ((((MAX(vt1.c1))OR(SUM(COUNT(TOTAL(TOTAL(vt1.c0))))))) ISNULL);
SELECT vt0.c0, vt0.c1 FROM vt1, vt0;
SELECT vt0.c0, vt0.c1 FROM vt1, vt0 WHERE ((('R*#rx	-UB')AND(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))))) UNION ALL SELECT vt0.c0, vt0.c1 FROM vt1, vt0 WHERE ((NOT ((('R*#rx	-UB')AND(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))))))) UNION ALL SELECT vt0.c0, vt0.c1 FROM vt1, vt0 WHERE ((((('R*#rx	-UB')AND(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))))) ISNULL));
SELECT vt0.c0, vt0.c1 FROM vt1, vt0;
SELECT DISTINCT vt1.c0, vt0.c0, vt1.c1 FROM vt0, v0, vt1;
SELECT DISTINCT vt1.c0, vt0.c0, vt1.c1 FROM vt0, v0, vt1 WHERE (CASE WHEN (x'79b9' IN ()) THEN (+ (vt1.c0)) ELSE (((vt1.c1))!=((vt1.c1))) END) UNION SELECT DISTINCT vt1.c0, vt0.c0, vt1.c1 FROM vt0, v0, vt1 WHERE ((NOT (CASE WHEN (x'79b9' IN ()) THEN (+ (vt1.c0)) ELSE (((vt1.c1))<>((vt1.c1))) END))) UNION SELECT DISTINCT vt1.c0, vt0.c0, vt1.c1 FROM vt0, v0, vt1 WHERE (((CASE WHEN (x'79b9' IN ()) THEN (+ (vt1.c0)) ELSE (((vt1.c1))!=((vt1.c1))) END) ISNULL));
SELECT DISTINCT vt1.c0, vt0.c0, vt1.c1 FROM vt0, v0, vt1;
SELECT ALL vt0.c1, vt0.c0 FROM vt0, v0, vt1 GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0, v0, vt1 WHERE ((((((v0.c0, vt0.c1, '1503486866')) NOT BETWEEN ((v0.c0, v0.c0, vt1.c0)) AND ((vt0.c0, 0.598303845932804, vt1.c1)))) IS FALSE)) GROUP BY vt0.c1, vt0.c0 UNION SELECT vt0.c1, vt0.c0 FROM vt0, v0, vt1 WHERE ((NOT ((((((v0.c0, vt0.c1, '1503486866')) NOT BETWEEN ((v0.c0, v0.c0, vt1.c0)) AND ((vt0.c0, 0.598303845932804, vt1.c1)))) IS FALSE)))) GROUP BY vt0.c1, vt0.c0 UNION SELECT ALL vt0.c1, vt0.c0 FROM vt0, v0, vt1 WHERE ((((((((v0.c0, vt0.c1, '1503486866')) NOT BETWEEN ((v0.c0, v0.c0, vt1.c0)) AND ((vt0.c0, 0.598303845932804, vt1.c1)))) IS FALSE)) ISNULL)) GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0, v0, vt1 GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c1, vt0.c0 FROM v0 RIGHT OUTER JOIN vt0 ON LOWER(((vt0.c0)IS NOT(v0.c0))) GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM v0 RIGHT OUTER JOIN vt0 ON LOWER(((vt0.c0)IS NOT(v0.c0))) GROUP BY vt0.c1, vt0.c0 HAVING MAX(((TOTAL(v0.c0)) ISNULL)) UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM v0 RIGHT OUTER JOIN vt0 ON LOWER(((vt0.c0)IS NOT(v0.c0))) GROUP BY vt0.c1, vt0.c0 HAVING (NOT (MAX(((TOTAL(v0.c0)) ISNULL)))) UNION ALL SELECT vt0.c1, vt0.c0 FROM v0 RIGHT OUTER JOIN vt0 ON LOWER(((vt0.c0)IS NOT(v0.c0))) GROUP BY vt0.c1, vt0.c0 HAVING ((MAX(((TOTAL(v0.c0)) ISNULL))) ISNULL);
SELECT ALL * FROM v0;
SELECT * FROM v0 WHERE (((v0.c0 COLLATE NOCASE)*(((v0.c0) IS FALSE)))) UNION ALL SELECT ALL * FROM v0 WHERE ((NOT (((v0.c0 COLLATE NOCASE)*(((v0.c0) IS FALSE)))))) UNION ALL SELECT ALL * FROM v0 WHERE (((((v0.c0 COLLATE NOCASE)*(((v0.c0) IS FALSE)))) ISNULL));
SELECT ALL * FROM v0;
SELECT DISTINCT * FROM vt1 FULL OUTER JOIN vt0 ON (CASE WHEN vt1.c1 THEN vt0.c1 ELSE vt1.c0 END IN (CASE ', '  WHEN vt1.c0 THEN vt1.c0 WHEN x'f116' THEN vt1.c0 WHEN '+ej8' THEN vt1.c0 ELSE vt1.c1 END, CAST(vt1.c1 AS NUMERIC)));
SELECT DISTINCT * FROM vt1 FULL OUTER JOIN vt0 ON (CASE WHEN vt1.c1 THEN vt0.c1 ELSE vt1.c0 END IN (CASE ', '  WHEN vt1.c0 THEN vt1.c0 WHEN x'f116' THEN vt1.c0 WHEN '+ej8' THEN vt1.c0 ELSE vt1.c1 END, CAST(vt1.c1 AS NUMERIC))) WHERE (((vt1.c1)|(((((vt0.c1)OR(vt1.c0)))OR('Y&XáHH<W'))))) UNION SELECT DISTINCT * FROM vt1 FULL OUTER JOIN vt0 ON (CASE WHEN vt1.c1 THEN vt0.c1 ELSE vt1.c0 END IN (CASE ', '  WHEN vt1.c0 THEN vt1.c0 WHEN x'f116' THEN vt1.c0 WHEN '+ej8' THEN vt1.c0 ELSE vt1.c1 END, CAST(vt1.c1 AS NUMERIC))) WHERE ((NOT (((vt1.c1)|(((((vt0.c1)OR(vt1.c0)))OR('Y&XáHH<W'))))))) UNION SELECT DISTINCT * FROM vt1 FULL OUTER JOIN vt0 ON (CASE WHEN vt1.c1 THEN vt0.c1 ELSE vt1.c0 END IN (CASE ', '  WHEN vt1.c0 THEN vt1.c0 WHEN x'f116' THEN vt1.c0 WHEN '+ej8' THEN vt1.c0 ELSE vt1.c1 END, CAST(vt1.c1 AS NUMERIC))) WHERE (((((vt1.c1)|(((((vt0.c1)OR(vt1.c0)))OR('Y&XáHH<W'))))) ISNULL));
SELECT DISTINCT * FROM vt1 FULL OUTER JOIN vt0 ON (CASE WHEN vt1.c1 THEN vt0.c1 ELSE vt1.c0 END IN (CASE ', '  WHEN vt1.c0 THEN vt1.c0 WHEN x'f116' THEN vt1.c0 WHEN '+ej8' THEN vt1.c0 ELSE vt1.c1 END, CAST(vt1.c1 AS NUMERIC)));
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE ((- (CAST(0.45620776324576917 AS REAL)))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 NOT INDEXED WHERE ((NOT ((- (CAST(0.45620776324576917 AS REAL)))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((((- (CAST(0.45620776324576917 AS REAL)))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT vt0.c1, vt0.c0, vt1.c0, vt1.c1 FROM vt1, vt0 NOT INDEXED GROUP BY vt0.c1, vt0.c0, vt1.c0, vt1.c1;
SELECT ALL vt0.c1, vt0.c0, vt1.c0, vt1.c1 FROM vt1, vt0 GROUP BY vt0.c1, vt0.c0, vt1.c0, vt1.c1 HAVING COUNT(*) UNION ALL SELECT ALL vt0.c1, vt0.c0, vt1.c0, vt1.c1 FROM vt1, vt0 GROUP BY vt0.c1, vt0.c0, vt1.c0, vt1.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt0.c1, vt0.c0, vt1.c0, vt1.c1 FROM vt1, vt0 GROUP BY vt0.c1, vt0.c0, vt1.c0, vt1.c1 HAVING ((COUNT(*)) ISNULL);
SELECT vt0.c1, vt0.c0, vt1.c0, vt1.c1 FROM vt1, vt0 NOT INDEXED GROUP BY vt0.c1, vt0.c0, vt1.c0, vt1.c1;
SELECT ALL vt0.c1, vt0.c0, vt1.c0, vt1.c1 FROM vt1, vt0 GROUP BY vt0.c1, vt0.c0, vt1.c0, vt1.c1 HAVING COUNT(*) UNION ALL SELECT ALL vt0.c1, vt0.c0, vt1.c0, vt1.c1 FROM vt1, vt0 GROUP BY vt0.c1, vt0.c0, vt1.c0, vt1.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt0.c1, vt0.c0, vt1.c0, vt1.c1 FROM vt1, vt0 GROUP BY vt0.c1, vt0.c0, vt1.c0, vt1.c1 HAVING ((COUNT(*)) ISNULL);
SELECT vt0.c1, vt0.c0, vt1.c0, vt1.c1 FROM vt1, vt0 NOT INDEXED GROUP BY vt0.c1, vt0.c0, vt1.c0, vt1.c1;
SELECT ALL * FROM vt0, vt1;
SELECT ALL * FROM vt0, vt1 WHERE (vt0.c1) UNION ALL SELECT ALL * FROM vt0, vt1 NOT INDEXED WHERE ((NOT (vt0.c1))) UNION ALL SELECT * FROM vt0, vt1 WHERE (((vt0.c1) ISNULL));
SELECT ALL * FROM vt0, vt1;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (((LIKELY(DISTINCT v0.c0)) NOT BETWEEN (CASE v0.c0  WHEN v0.c0 THEN v0.c0 END) AND ((((v0.c0, v0.c0, v0.c0, '-1303151150', v0.c0))<((v0.c0, v0.c0, v0.c0, '0.7704005884373025', v0.c0)))))) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (((LIKELY(DISTINCT v0.c0)) NOT BETWEEN (CASE v0.c0  WHEN v0.c0 THEN v0.c0 END) AND ((((v0.c0, v0.c0, v0.c0, '-1303151150', v0.c0))<((v0.c0, v0.c0, v0.c0, '0.7704005884373025', v0.c0)))))))) UNION SELECT DISTINCT * FROM v0 WHERE (((((LIKELY(DISTINCT v0.c0)) NOT BETWEEN (CASE v0.c0  WHEN v0.c0 THEN v0.c0 END) AND ((((v0.c0, v0.c0, v0.c0, '-1303151150', v0.c0))<((v0.c0, v0.c0, v0.c0, '0.7704005884373025', v0.c0)))))) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT vt1.c0 FROM vt1, vt0, v0 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1, vt0, v0 WHERE (CAST(((vt0.c1) NOT BETWEEN (vt1.c0) AND (v0.c0)) AS BLOB)) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1, vt0, v0 WHERE ((NOT (CAST(((vt0.c1) NOT BETWEEN (vt1.c0) AND (v0.c0)) AS BLOB)))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1, vt0, v0 WHERE (((CAST(((vt0.c1) NOT BETWEEN (vt1.c0) AND (v0.c0)) AS BLOB)) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1, vt0, v0 GROUP BY vt1.c0;
SELECT v0.c0, vt0.c1, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c1, vt0.c0;
SELECT ALL v0.c0, vt0.c1, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c1, vt0.c0 HAVING (- (GROUP_CONCAT(TOTAL(MIN(SUM(vt0.c1)))))) UNION ALL SELECT v0.c0, vt0.c1, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c1, vt0.c0 HAVING (NOT ((- (GROUP_CONCAT(TOTAL(MIN(SUM(vt0.c1)))))))) UNION ALL SELECT v0.c0, vt0.c1, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c1, vt0.c0 HAVING (((- (GROUP_CONCAT(TOTAL(MIN(SUM(vt0.c1))))))) ISNULL);
SELECT ALL SUM(((vt0.c1)GLOB(vt1.c0)) COLLATE NOCASE) FROM vt1, vt0, v0 ORDER BY (NOT (CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 ELSE vt1.c0 END)) DESC;
SELECT vt0.c1, vt0.c0 FROM vt1, v0, vt0;
SELECT vt0.c1, vt0.c0 FROM vt1, v0, vt0 WHERE (((v0.c0) BETWEEN (CASE WHEN 5.68707508E8 THEN vt0.c1 WHEN vt1.c1 THEN v0.c0 WHEN vt0.c0 THEN 'ê ³^R|i(^ì¦´w' END) AND (((vt1.c0) ISNULL)))) UNION ALL SELECT vt0.c1, vt0.c0 FROM vt1, v0, vt0 WHERE ((NOT (((v0.c0) BETWEEN (CASE WHEN 5.68707508E8 THEN vt0.c1 WHEN vt1.c1 THEN v0.c0 WHEN vt0.c0 THEN 'ê ³^R|i(^ì¦´w' END) AND (((vt1.c0) ISNULL)))))) UNION ALL SELECT vt0.c1, vt0.c0 FROM vt1, v0, vt0 WHERE (((((v0.c0) BETWEEN (CASE WHEN 5.68707508E8 THEN vt0.c1 WHEN vt1.c1 THEN v0.c0 WHEN vt0.c0 THEN 'ê ³^R|i(^ì¦´w' END) AND (((vt1.c0) ISNULL)))) ISNULL));
SELECT vt0.c1, vt0.c0 FROM vt1, v0, vt0;
SELECT DISTINCT * FROM v0 LEFT OUTER JOIN vt1 ON CASE ((vt1.c0)LIKE(vt0.c0))  WHEN ((vt0.c1)>>(v0.c0)) THEN v0.c0 COLLATE BINARY END INNER JOIN vt0 ON (NOT (vt1.c1));
SELECT DISTINCT * FROM v0 LEFT OUTER JOIN vt1 ON CASE ((vt1.c0)LIKE(vt0.c0))  WHEN ((vt0.c1)>>(v0.c0)) THEN v0.c0 COLLATE BINARY END INNER JOIN vt0 ON (NOT (vt1.c1)) WHERE ((((((vt0.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c1)))) NOT NULL)) UNION SELECT DISTINCT * FROM v0 LEFT OUTER JOIN vt1 ON CASE ((vt1.c0)LIKE(vt0.c0))  WHEN ((vt0.c1)>>(v0.c0)) THEN v0.c0 COLLATE BINARY END INNER JOIN vt0 ON (NOT (vt1.c1)) WHERE ((NOT ((((((vt0.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c1)))) NOT NULL)))) UNION SELECT DISTINCT * FROM v0 LEFT OUTER JOIN vt1 ON CASE ((vt1.c0)LIKE(vt0.c0))  WHEN ((vt0.c1)>>(v0.c0)) THEN v0.c0 COLLATE BINARY END INNER JOIN vt0 ON (NOT (vt1.c1)) WHERE ((((((((vt0.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c1)))) NOT NULL)) ISNULL));
SELECT DISTINCT * FROM v0 LEFT OUTER JOIN vt1 ON CASE ((vt1.c0)LIKE(vt0.c0))  WHEN ((vt0.c1)>>(v0.c0)) THEN v0.c0 COLLATE BINARY END INNER JOIN vt0 ON (NOT (vt1.c1));
SELECT vt1.c1, v0.c0, vt1.c0 FROM v0, vt1 GROUP BY vt1.c1, v0.c0, vt1.c0;
SELECT ALL vt1.c1, v0.c0, vt1.c0 FROM v0, vt1 WHERE (((((vt1.c0)<=(vt1.c0))) BETWEEN (((v0.c0) BETWEEN (vt1.c1) AND (vt1.c1))) AND (CASE WHEN v0.c0 THEN v0.c0 ELSE vt1.c1 END))) GROUP BY vt1.c1, v0.c0, vt1.c0 UNION SELECT ALL vt1.c1, v0.c0, vt1.c0 FROM v0, vt1 WHERE ((NOT (((((vt1.c0)<=(vt1.c0))) BETWEEN (((v0.c0) BETWEEN (vt1.c1) AND (vt1.c1))) AND (CASE WHEN v0.c0 THEN v0.c0 ELSE vt1.c1 END))))) GROUP BY vt1.c1, v0.c0, vt1.c0 UNION SELECT ALL vt1.c1, v0.c0, vt1.c0 FROM v0, vt1 WHERE (((((((vt1.c0)<=(vt1.c0))) BETWEEN (((v0.c0) BETWEEN (vt1.c1) AND (vt1.c1))) AND (CASE WHEN v0.c0 THEN v0.c0 ELSE vt1.c1 END))) ISNULL)) GROUP BY vt1.c1, v0.c0, vt1.c0;
SELECT vt1.c1, v0.c0, vt1.c0 FROM v0, vt1 GROUP BY vt1.c1, v0.c0, vt1.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((json_array(v0.c0, TOTAL(TOTAL(SUM(SUM(MAX(COUNT(*)))))), v0.c0, SUM(TOTAL(MAX(COUNT('1233082828')))))) NOT BETWEEN (MAX(MIN(v0.c0))) AND (((v0.c0)GLOB(v0.c0)))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (((json_array(v0.c0, TOTAL(TOTAL(SUM(SUM(MAX(COUNT(*)))))), v0.c0, SUM(TOTAL(MAX(COUNT('1233082828')))))) NOT BETWEEN (MAX(MIN(v0.c0))) AND (((v0.c0)GLOB(v0.c0)))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((((json_array(v0.c0, TOTAL(TOTAL(SUM(SUM(MAX(COUNT(*)))))), v0.c0, SUM(TOTAL(MAX(COUNT('1233082828')))))) NOT BETWEEN (MAX(MIN(v0.c0))) AND (((v0.c0)GLOB(v0.c0))))) ISNULL);
SELECT v0.c0 FROM v0;
SELECT v0.c0 FROM v0 WHERE (((x'6032')<(((v0.c0)IS NOT(v0.c0))))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE ((NOT (((x'6032')<(((v0.c0)IS NOT(v0.c0))))))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE (((((x'6032')<(((v0.c0)IS NOT(v0.c0))))) ISNULL));
SELECT v0.c0 FROM v0;
SELECT DISTINCT * FROM v0, vt1 INNER JOIN vt0 ON (- ((((vt1.c0)) BETWEEN ((v0.c0)) AND ((vt0.c1)))));
SELECT DISTINCT * FROM v0, vt1 INNER JOIN vt0 ON (- ((((vt1.c0)) BETWEEN ((v0.c0)) AND ((vt0.c1))))) WHERE ((((vt1.c0 IN (v0.c0))) NOTNULL)) UNION SELECT DISTINCT * FROM v0, vt1 INNER JOIN vt0 ON (- ((((vt1.c0)) BETWEEN ((v0.c0)) AND ((vt0.c1))))) WHERE ((NOT ((((vt1.c0 IN (v0.c0))) NOTNULL)))) UNION SELECT DISTINCT * FROM v0, vt1 INNER JOIN vt0 ON (- ((((vt1.c0)) BETWEEN ((v0.c0)) AND ((vt0.c1))))) WHERE ((((((vt1.c0 IN (v0.c0))) NOTNULL)) ISNULL));
SELECT DISTINCT * FROM v0, vt1 INNER JOIN vt0 ON (- ((((vt1.c0)) BETWEEN ((v0.c0)) AND ((vt0.c1)))));
SELECT vt1.c1, vt1.c0, vt0.c0, v0.c0, vt0.c1 FROM v0, vt0, vt1 GROUP BY vt1.c1, vt1.c0, vt0.c0, v0.c0, vt0.c1;
SELECT ALL vt1.c1, vt1.c0, vt0.c0, v0.c0, vt0.c1 FROM v0, vt0, vt1 WHERE (vt1.c0) GROUP BY vt1.c1, vt1.c0, vt0.c0, v0.c0, vt0.c1 UNION SELECT ALL vt1.c1, vt1.c0, vt0.c0, v0.c0, vt0.c1 FROM v0, vt0, vt1 WHERE ((NOT (vt1.c0))) GROUP BY vt1.c1, vt1.c0, vt0.c0, v0.c0, vt0.c1 UNION SELECT ALL vt1.c1, vt1.c0, vt0.c0, v0.c0, vt0.c1 FROM v0, vt0, vt1 WHERE (((vt1.c0) ISNULL)) GROUP BY vt1.c1, vt1.c0, vt0.c0, v0.c0, vt0.c1;
SELECT vt1.c1, vt1.c0, vt0.c0, v0.c0, vt0.c1 FROM v0, vt0, vt1 GROUP BY vt1.c1, vt1.c0, vt0.c0, v0.c0, vt0.c1;
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING COUNT(DATETIME(COUNT(MAX(GROUP_CONCAT(COUNT(*)))), vt0.c1, COUNT(*))) UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING (NOT (COUNT(DATETIME(COUNT(MAX(GROUP_CONCAT(COUNT(*)))), vt0.c1, COUNT(*))))) UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING ((COUNT(DATETIME(COUNT(MAX(GROUP_CONCAT(COUNT(*)))), vt0.c1, COUNT(*)))) ISNULL);
SELECT ALL TOTAL(LIKELIHOOD(44965822, 0.017049517759033184) COLLATE BINARY) FROM vt0, vt1 ORDER BY (((- (vt0.c0)))>=((~ (vt0.c0))));
SELECT ALL * FROM vt0, vt1;
SELECT * FROM vt0, vt1 WHERE (((CAST(vt0.c1 AS INTEGER))IS(CAST(vt1.c0 AS NUMERIC)))) UNION ALL SELECT ALL * FROM vt0, vt1 WHERE ((NOT (((CAST(vt0.c1 AS INTEGER))IS(CAST(vt1.c0 AS NUMERIC)))))) UNION ALL SELECT ALL * FROM vt0, vt1 WHERE (((((CAST(vt0.c1 AS INTEGER))IS(CAST(vt1.c0 AS NUMERIC)))) ISNULL));
SELECT ALL * FROM vt0, vt1;
SELECT DISTINCT * FROM vt1, vt0;
SELECT DISTINCT * FROM vt1, vt0 WHERE ('|Ro') UNION SELECT DISTINCT * FROM vt1, vt0 WHERE ((NOT ('|Ro'))) UNION SELECT DISTINCT * FROM vt1, vt0 WHERE ((('|Ro') ISNULL));
SELECT DISTINCT * FROM vt1, vt0;
SELECT ALL vt0.c0, v0.c0 FROM v0, vt0, vt1 GROUP BY vt0.c0, v0.c0;
SELECT vt0.c0, v0.c0 FROM v0, vt0, vt1 WHERE (((((vt0.c0) NOTNULL)) BETWEEN (HEX(v0.c0)) AND (((vt0.c0)|(vt0.c1))))) GROUP BY vt0.c0, v0.c0 UNION SELECT vt0.c0, v0.c0 FROM v0, vt0, vt1 WHERE ((NOT (((((vt0.c0) NOTNULL)) BETWEEN (HEX(v0.c0)) AND (((vt0.c0)|(vt0.c1))))))) GROUP BY vt0.c0, v0.c0 UNION SELECT vt0.c0, v0.c0 FROM v0, vt0, vt1 WHERE (((((((vt0.c0) NOTNULL)) BETWEEN (HEX(v0.c0)) AND (((vt0.c0)|(vt0.c1))))) ISNULL)) GROUP BY vt0.c0, v0.c0;
SELECT ALL vt0.c0, v0.c0 FROM v0, vt0, vt1 GROUP BY vt0.c0, v0.c0;
SELECT ALL vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0;
SELECT ALL vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0 HAVING ((((MIN(MIN(COUNT(*))))AND(TOTAL(COUNT(*)))))AND(TOTAL(COUNT(*)))) UNION ALL SELECT vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0 HAVING (NOT (((((MIN(MIN(COUNT(*))))AND(TOTAL(COUNT(*)))))AND(TOTAL(COUNT(*)))))) UNION ALL SELECT ALL vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0 HAVING ((((((MIN(MIN(COUNT(*))))AND(TOTAL(COUNT(*)))))AND(TOTAL(COUNT(*))))) ISNULL);
SELECT * FROM vt1 CROSS JOIN vt0 ON x'64c3' FULL OUTER JOIN v0 ON DATETIME((~ (v0.c0)), 0.2489334885214355, CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 WHEN vt1.c1 THEN v0.c0 WHEN v0.c0 THEN vt0.c0 END);
SELECT ALL * FROM vt1 CROSS JOIN vt0 ON x'64c3' FULL OUTER JOIN v0 ON DATETIME((~ (v0.c0)), 0.2489334885214355, CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 WHEN vt1.c1 THEN v0.c0 WHEN v0.c0 THEN vt0.c0 END) WHERE (((CAST(v0.c0 AS REAL))*(x''))) UNION ALL SELECT * FROM vt1 CROSS JOIN vt0 ON x'64c3' FULL OUTER JOIN v0 ON DATETIME((~ (v0.c0)), 0.2489334885214355, CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 WHEN vt1.c1 THEN v0.c0 WHEN v0.c0 THEN vt0.c0 END) WHERE ((NOT (((CAST(v0.c0 AS REAL))*(x''))))) UNION ALL SELECT * FROM vt1 CROSS JOIN vt0 ON x'64c3' FULL OUTER JOIN v0 ON DATETIME((~ (v0.c0)), 0.2489334885214355, CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 WHEN vt1.c1 THEN v0.c0 WHEN v0.c0 THEN vt0.c0 END) WHERE (((((CAST(v0.c0 AS REAL))*(x''))) ISNULL));
SELECT * FROM vt1 CROSS JOIN vt0 ON x'64c3' FULL OUTER JOIN v0 ON DATETIME((~ (v0.c0)), 0.2489334885214355, CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 WHEN vt1.c1 THEN v0.c0 WHEN v0.c0 THEN vt0.c0 END);
SELECT DISTINCT vt0.c0 FROM vt1, vt0;
SELECT DISTINCT vt0.c0 FROM vt1, vt0 WHERE (((((CAST(vt1.c0 AS BLOB))OR(x'397a')))AND(((((vt0.c0)AND(vt0.c0)))OR(vt1.c0))))) UNION SELECT DISTINCT vt0.c0 FROM vt1, vt0 WHERE ((NOT (((((CAST(vt1.c0 AS BLOB))OR(x'397a')))AND(((((vt0.c0)AND(vt0.c0)))OR(vt1.c0))))))) UNION SELECT DISTINCT vt0.c0 FROM vt1, vt0 WHERE (((((((CAST(vt1.c0 AS BLOB))OR(x'397a')))AND(((((vt0.c0)AND(vt0.c0)))OR(vt1.c0))))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt1, vt0;
SELECT ALL vt0.c1 FROM v0, vt0 GROUP BY vt0.c1;
SELECT vt0.c1 FROM v0, vt0 WHERE (v0.c0) GROUP BY vt0.c1 UNION SELECT ALL vt0.c1 FROM v0, vt0 WHERE ((NOT (v0.c0))) GROUP BY vt0.c1 UNION SELECT vt0.c1 FROM v0, vt0 WHERE (((v0.c0) ISNULL)) GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM v0, vt0 GROUP BY vt0.c1;
SELECT ALL vt1.c1, vt1.c0 FROM v0, vt0, vt1 GROUP BY vt1.c1, vt1.c0;
SELECT ALL vt1.c1, vt1.c0 FROM v0, vt0, vt1 GROUP BY vt1.c1, vt1.c0 HAVING MAX(SUM(vt1.c1)) UNION ALL SELECT ALL vt1.c1, vt1.c0 FROM v0, vt0, vt1 GROUP BY vt1.c1, vt1.c0 HAVING (NOT (MAX(SUM(vt1.c1)))) UNION ALL SELECT ALL vt1.c1, vt1.c0 FROM v0, vt0, vt1 GROUP BY vt1.c1, vt1.c0 HAVING ((MAX(SUM(vt1.c1))) ISNULL);
SELECT * FROM vt1 FULL OUTER JOIN vt0 ON (((CASE vt1.c0  WHEN '568724680' THEN v0.c0 END))<((((((vt1.c0)OR(vt1.c0)))AND(vt0.c0))))) INNER JOIN v0 ON CASE CAST(x'' AS INTEGER)  WHEN ((vt1.c1) NOTNULL) THEN (~ (vt1.c1)) END;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (vt0.c0) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (vt0.c0))) UNION SELECT DISTINCT * FROM vt0 WHERE (((vt0.c0) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL vt0.c0 FROM vt0, vt1 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0, vt1 WHERE (x'17fe') GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0, vt1 WHERE ((NOT (x'17fe'))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0, vt1 WHERE (((x'17fe') ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, vt1 GROUP BY vt0.c0;
SELECT ALL vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0;
SELECT vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0 HAVING CAST(COUNT(*) AS REAL) UNION ALL SELECT vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0 HAVING (NOT (CAST(COUNT(*) AS REAL))) UNION ALL SELECT ALL vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0 HAVING ((CAST(COUNT(*) AS REAL)) ISNULL);
SELECT ALL vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0;
SELECT vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0 HAVING CAST(COUNT(*) AS REAL) UNION ALL SELECT vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0 HAVING (NOT (CAST(COUNT(*) AS REAL))) UNION ALL SELECT ALL vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0 HAVING ((CAST(COUNT(*) AS REAL)) ISNULL);
SELECT ALL vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0;
SELECT ALL vt1.c0, vt1.c1, vt0.c0, vt0.c1, v0.c0 FROM vt0, vt1, v0;
SELECT ALL vt1.c0, vt1.c1, vt0.c0, vt0.c1, v0.c0 FROM vt0, vt1, v0 WHERE (((v0.c0 COLLATE NOCASE) NOT BETWEEN (((((((((x'')AND(vt0.c0)))AND(v0.c0)))OR(vt1.c0)))AND(vt0.c1))) AND (v0.c0))) UNION ALL SELECT vt1.c0, vt1.c1, vt0.c0, vt0.c1, v0.c0 FROM vt0, vt1, v0 WHERE ((NOT (((v0.c0 COLLATE NOCASE) NOT BETWEEN (((((((((x'')AND(vt0.c0)))AND(v0.c0)))OR(vt1.c0)))AND(vt0.c1))) AND (v0.c0))))) UNION ALL SELECT vt1.c0, vt1.c1, vt0.c0, vt0.c1, v0.c0 FROM vt0, vt1, v0 WHERE (((((v0.c0 COLLATE NOCASE) NOT BETWEEN (((((((((x'')AND(vt0.c0)))AND(v0.c0)))OR(vt1.c0)))AND(vt0.c1))) AND (v0.c0))) ISNULL));
SELECT ALL vt1.c0, vt1.c1, vt0.c0, vt0.c1, v0.c0 FROM vt0, vt1, v0;
SELECT DISTINCT * FROM vt0, v0, vt1;
SELECT DISTINCT * FROM vt0, v0, vt1 WHERE (CASE (((vt1.c1, vt1.c0, vt0.c0))>((vt0.c0, vt0.c0, vt1.c1)))  WHEN ((('-2010862646', vt0.c0, vt1.c0))<>((vt0.c0, v0.c0, v0.c0))) THEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c1)) WHEN ((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c1)) THEN ((vt0.c1)|('-1115712063')) WHEN (~ (v0.c0)) THEN ((v0.c0) NOT BETWEEN (vt1.c1) AND (v0.c0)) WHEN ((0Xffffffffaaa5aba4)LIKE(vt0.c0)) THEN TRIM(vt0.c1, vt0.c1) WHEN ((v0.c0) ISNULL) THEN ((v0.c0)IS NOT(v0.c0)) WHEN CASE WHEN vt1.c0 THEN 1920934612 WHEN vt1.c0 THEN vt1.c1 WHEN v0.c0 THEN v0.c0 END THEN (vt1.c0 IN (vt1.c1, v0.c0)) WHEN ((vt0.c0) BETWEEN (vt0.c1) AND (vt1.c0)) THEN ((vt0.c1) NOT BETWEEN (vt0.c1) AND (v0.c0)) ELSE ABS(vt0.c1) END) UNION SELECT DISTINCT * FROM vt0, v0, vt1 WHERE ((NOT (CASE (((vt1.c1, vt1.c0, vt0.c0))>((vt0.c0, vt0.c0, vt1.c1)))  WHEN ((('-2010862646', vt0.c0, vt1.c0))!=((vt0.c0, v0.c0, v0.c0))) THEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c1)) WHEN ((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c1)) THEN ((vt0.c1)|('-1115712063')) WHEN (~ (v0.c0)) THEN ((v0.c0) NOT BETWEEN (vt1.c1) AND (v0.c0)) WHEN ((0xffffffffaaa5aba4)LIKE(vt0.c0)) THEN TRIM(vt0.c1, vt0.c1) WHEN ((v0.c0) ISNULL) THEN ((v0.c0)IS NOT(v0.c0)) WHEN CASE WHEN vt1.c0 THEN 1920934612 WHEN vt1.c0 THEN vt1.c1 WHEN v0.c0 THEN v0.c0 END THEN (vt1.c0 IN (vt1.c1, v0.c0)) WHEN ((vt0.c0) BETWEEN (vt0.c1) AND (vt1.c0)) THEN ((vt0.c1) NOT BETWEEN (vt0.c1) AND (v0.c0)) ELSE ABS(vt0.c1) END))) UNION SELECT DISTINCT * FROM vt0, v0 NOT INDEXED, vt1 WHERE (((CASE (((vt1.c1, vt1.c0, vt0.c0))>((vt0.c0, vt0.c0, vt1.c1)))  WHEN ((('-2010862646', vt0.c0, vt1.c0))<>((vt0.c0, v0.c0, v0.c0))) THEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c1)) WHEN ((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c1)) THEN ((vt0.c1)|('-1115712063')) WHEN (~ (v0.c0)) THEN ((v0.c0) NOT BETWEEN (vt1.c1) AND (v0.c0)) WHEN ((0xffffffffaaa5aba4)LIKE(vt0.c0)) THEN TRIM(vt0.c1, vt0.c1) WHEN ((v0.c0) ISNULL) THEN ((v0.c0)IS NOT(v0.c0)) WHEN CASE WHEN vt1.c0 THEN 1920934612 WHEN vt1.c0 THEN vt1.c1 WHEN v0.c0 THEN v0.c0 END THEN (vt1.c0 IN (vt1.c1, v0.c0)) WHEN ((vt0.c0) BETWEEN (vt0.c1) AND (vt1.c0)) THEN ((vt0.c1) NOT BETWEEN (vt0.c1) AND (v0.c0)) ELSE ABS(vt0.c1) END) ISNULL));
SELECT DISTINCT * FROM vt0, v0, vt1;
SELECT vt1.c0, vt0.c1, vt1.c1 FROM vt1, vt0 CROSS JOIN v0 ON ((vt0.c1 COLLATE NOCASE)LIKE(CHAR(vt1.c0))) GROUP BY vt1.c0, vt0.c1, vt1.c1;
SELECT ALL vt1.c0, vt0.c1, vt1.c1 FROM vt1, vt0 CROSS JOIN v0 ON ((vt0.c1 COLLATE NOCASE)LIKE(CHAR(vt1.c0))) WHERE (0.7947517013409737) GROUP BY vt1.c0, vt0.c1, vt1.c1 UNION SELECT ALL vt1.c0, vt0.c1, vt1.c1 FROM vt1, vt0 CROSS JOIN v0 ON ((vt0.c1 COLLATE NOCASE)LIKE(CHAR(vt1.c0))) WHERE ((NOT (0.7947517013409737))) GROUP BY vt1.c0, vt0.c1, vt1.c1 UNION SELECT ALL vt1.c0, vt0.c1, vt1.c1 FROM vt1, vt0 CROSS JOIN v0 ON ((vt0.c1 COLLATE NOCASE)LIKE(CHAR(vt1.c0))) WHERE (((0.7947517013409737) ISNULL)) GROUP BY vt1.c0, vt0.c1, vt1.c1;
SELECT vt1.c0, vt0.c1, vt1.c1 FROM vt1, vt0 CROSS JOIN v0 ON ((vt0.c1 COLLATE NOCASE)LIKE(CHAR(vt1.c0))) GROUP BY vt1.c0, vt0.c1, vt1.c1;
SELECT ALL vt1.c0 FROM v0, vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM v0, vt1 GROUP BY vt1.c0 HAVING AVG(GROUP_CONCAT(COUNT(v0.c0))) UNION ALL SELECT vt1.c0 FROM v0, vt1 GROUP BY vt1.c0 HAVING (NOT (AVG(GROUP_CONCAT(COUNT(v0.c0))))) UNION ALL SELECT ALL vt1.c0 FROM v0, vt1 GROUP BY vt1.c0 HAVING ((AVG(GROUP_CONCAT(COUNT(v0.c0)))) ISNULL);
SELECT vt1.c0 FROM vt1, v0;
SELECT vt1.c0 FROM vt1, v0 WHERE (((x'')AND(LIKELIHOOD(v0.c0, 0.23018128576527253)))) UNION ALL SELECT ALL vt1.c0 FROM vt1, v0 WHERE ((NOT (((x'')AND(LIKELIHOOD(v0.c0, 0.23018128576527253)))))) UNION ALL SELECT vt1.c0 FROM vt1, v0 WHERE (((((x'')AND(LIKELIHOOD(v0.c0, 0.23018128576527253)))) ISNULL));
SELECT vt1.c0 FROM vt1, v0;
SELECT DISTINCT * FROM vt1, vt0;
SELECT DISTINCT * FROM vt1, vt0 WHERE (0.4874375567677255) UNION SELECT DISTINCT * FROM vt1, vt0 WHERE ((NOT (0.4874375567677255))) UNION SELECT DISTINCT * FROM vt1, vt0 WHERE (((0.4874375567677255) ISNULL));
SELECT DISTINCT * FROM vt1, vt0;
SELECT ALL vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0;
SELECT ALL vt1.c1, vt1.c0 FROM vt1 WHERE (((CAST(vt1.c0 AS INTEGER))OR(((vt1.c1)*(vt1.c0))))) GROUP BY vt1.c1, vt1.c0 UNION SELECT vt1.c1, vt1.c0 FROM vt1 WHERE ((NOT (((CAST(vt1.c0 AS INTEGER))OR(((vt1.c1)*(vt1.c0))))))) GROUP BY vt1.c1, vt1.c0 UNION SELECT ALL vt1.c1, vt1.c0 FROM vt1 WHERE (((((CAST(vt1.c0 AS INTEGER))OR(((vt1.c1)*(vt1.c0))))) ISNULL)) GROUP BY vt1.c1, vt1.c0;
SELECT ALL vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0;
SELECT vt0.c0, vt1.c1, vt0.c1, vt1.c0 FROM vt0, vt1 RIGHT OUTER JOIN v0 ON ((((((((CAST(vt0.c1 AS TEXT))AND(x'')))AND(((((((((vt1.c0)OR(vt1.c0)))AND(vt0.c0)))AND(vt1.c0)))AND(vt1.c1)))))AND(((vt0.c0) ISNULL))))OR(((v0.c0) BETWEEN (vt1.c1) AND (vt0.c1)))) GROUP BY vt0.c0, vt1.c1, vt0.c1, vt1.c0;
SELECT ALL vt0.c0, vt1.c1, vt0.c1, vt1.c0 FROM vt0, vt1 RIGHT OUTER JOIN v0 ON ((((((((CAST(vt0.c1 AS TEXT))AND(x'')))AND(((((((((vt1.c0)OR(vt1.c0)))AND(vt0.c0)))AND(vt1.c0)))AND(vt1.c1)))))AND(((vt0.c0) ISNULL))))OR(((v0.c0) BETWEEN (vt1.c1) AND (vt0.c1)))) GROUP BY vt0.c0, vt1.c1, vt0.c1, vt1.c0 HAVING MIN((((vt0.c1)) NOT BETWEEN ((GROUP_CONCAT(TOTAL(MIN(GROUP_CONCAT(vt0.c0)))))) AND ((vt1.c1)))) UNION ALL SELECT ALL vt0.c0, vt1.c1, vt0.c1, vt1.c0 FROM vt0, vt1 RIGHT OUTER JOIN v0 ON ((((((((CAST(vt0.c1 AS TEXT))AND(x'')))AND(((((((((vt1.c0)OR(vt1.c0)))AND(vt0.c0)))AND(vt1.c0)))AND(vt1.c1)))))AND(((vt0.c0) ISNULL))))OR(((v0.c0) BETWEEN (vt1.c1) AND (vt0.c1)))) GROUP BY vt0.c0, vt1.c1, vt0.c1, vt1.c0 HAVING (NOT (MIN((((vt0.c1)) NOT BETWEEN ((GROUP_CONCAT(TOTAL(MIN(GROUP_CONCAT(vt0.c0)))))) AND ((vt1.c1)))))) UNION ALL SELECT vt0.c0, vt1.c1, vt0.c1, vt1.c0 FROM vt0, vt1 RIGHT OUTER JOIN v0 ON ((((((((CAST(vt0.c1 AS TEXT))AND(x'')))AND(((((((((vt1.c0)OR(vt1.c0)))AND(vt0.c0)))AND(vt1.c0)))AND(vt1.c1)))))AND(((vt0.c0) ISNULL))))OR(((v0.c0) BETWEEN (vt1.c1) AND (vt0.c1)))) GROUP BY vt0.c0, vt1.c1, vt0.c1, vt1.c0 HAVING ((MIN((((vt0.c1)) NOT BETWEEN ((GROUP_CONCAT(TOTAL(MIN(GROUP_CONCAT(vt0.c0)))))) AND ((vt1.c1))))) ISNULL);
SELECT v0.c0 FROM v0;
SELECT v0.c0 FROM v0 WHERE (((json_object(v0.c0, x''))>=(('TRUE' IN ())))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE ((NOT (((json_object(v0.c0, x''))>=(('TRUE' IN ())))))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE (((((json_object(v0.c0, x''))>=(('TRUE' IN ())))) ISNULL));
SELECT v0.c0 FROM v0;
SELECT DISTINCT v0.c0, vt1.c1, vt0.c0 FROM v0, vt1 INNER JOIN vt0 ON ((((vt1.c0)|(v0.c0)))GLOB(CASE v0.c0  WHEN vt1.c0 THEN v0.c0 END));
SELECT DISTINCT v0.c0, vt1.c1, vt0.c0 FROM v0, vt1 INNER JOIN vt0 ON ((((vt1.c0)|(v0.c0)))GLOB(CASE v0.c0  WHEN vt1.c0 THEN v0.c0 END)) WHERE (((((0Xffffffff939483e0, vt0.c0, vt0.c1, vt0.c1, v0.c0)) NOT BETWEEN ((v0.c0, vt1.c0, x'f12089c58d15', '-1488441268', v0.c0)) AND ((vt1.c0, vt0.c1, x'', vt1.c0, 'k2Ã©iGrD'))) IN ())) UNION SELECT DISTINCT v0.c0, vt1.c1, vt0.c0 FROM v0, vt1 INNER JOIN vt0 ON ((((vt1.c0)|(v0.c0)))GLOB(CASE v0.c0  WHEN vt1.c0 THEN v0.c0 END)) WHERE ((NOT (((((0Xffffffff939483e0, vt0.c0, vt0.c1, vt0.c1, v0.c0)) NOT BETWEEN ((v0.c0, vt1.c0, x'f12089c58d15', '-1488441268', v0.c0)) AND ((vt1.c0, vt0.c1, x'', vt1.c0, 'k2Ã©iGrD'))) IN ())))) UNION SELECT DISTINCT v0.c0, vt1.c1, vt0.c0 FROM v0, vt1 INNER JOIN vt0 ON ((((vt1.c0)|(v0.c0)))GLOB(CASE v0.c0  WHEN vt1.c0 THEN v0.c0 END)) WHERE (((((((0xffffffff939483e0, vt0.c0, vt0.c1, vt0.c1, v0.c0)) NOT BETWEEN ((v0.c0, vt1.c0, x'f12089c58d15', '-1488441268', v0.c0)) AND ((vt1.c0, vt0.c1, x'', vt1.c0, 'k2Ã©iGrD'))) IN ())) ISNULL));
SELECT DISTINCT v0.c0, vt1.c1, vt0.c0 FROM v0, vt1 INNER JOIN vt0 ON ((((vt1.c0)|(v0.c0)))GLOB(CASE v0.c0  WHEN vt1.c0 THEN v0.c0 END));
SELECT ALL vt0.c1, vt1.c1, vt0.c0, vt1.c0 FROM vt0, v0 NATURAL JOIN vt1 GROUP BY vt0.c1, vt1.c1, vt0.c0, vt1.c0;
SELECT vt0.c1, vt1.c1, vt0.c0, vt1.c0 FROM vt0, v0 NATURAL JOIN vt1 WHERE (TRIM(DISTINCT ((vt1.c1) IS TRUE))) GROUP BY vt0.c1, vt1.c1, vt0.c0, vt1.c0 UNION SELECT ALL vt0.c1, vt1.c1, vt0.c0, vt1.c0 FROM vt0, v0 NATURAL JOIN vt1 WHERE ((NOT (TRIM(DISTINCT ((vt1.c1) IS TRUE))))) GROUP BY vt0.c1, vt1.c1, vt0.c0, vt1.c0 UNION SELECT vt0.c1, vt1.c1, vt0.c0, vt1.c0 FROM vt0, v0 NATURAL JOIN vt1 WHERE (((TRIM(DISTINCT ((vt1.c1) IS TRUE))) ISNULL)) GROUP BY vt0.c1, vt1.c1, vt0.c0, vt1.c0;
SELECT ALL vt0.c1, vt1.c1, vt0.c0, vt1.c0 FROM vt0, v0 NATURAL JOIN vt1 GROUP BY vt0.c1, vt1.c1, vt0.c0, vt1.c0;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING COUNT(*) UNION ALL SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING COUNT(*) UNION ALL SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL * FROM vt0, v0, vt1;
SELECT * FROM vt0, v0, vt1 WHERE (COALESCE((~ (vt0.c0)), ((vt1.c0)IS NOT(vt1.c1)))) UNION ALL SELECT ALL * FROM vt0, v0, vt1 WHERE ((NOT (COALESCE((~ (vt0.c0)), ((vt1.c0)IS NOT(vt1.c1)))))) UNION ALL SELECT * FROM vt0, v0, vt1 WHERE (((COALESCE((~ (vt0.c0)), ((vt1.c0)IS NOT(vt1.c1)))) ISNULL));
SELECT ALL * FROM vt0, v0, vt1;
SELECT DISTINCT * FROM v0 NATURAL JOIN vt1;
SELECT DISTINCT * FROM v0 NATURAL JOIN vt1 WHERE (COALESCE(((x'753bf6cb') NOT BETWEEN (v0.c0) AND (v0.c0)), NULL)) UNION SELECT DISTINCT * FROM v0 NATURAL JOIN vt1 WHERE ((NOT (COALESCE(((x'753bf6cb') NOT BETWEEN (v0.c0) AND (v0.c0)), NULL)))) UNION SELECT DISTINCT * FROM v0 NATURAL JOIN vt1 WHERE (((COALESCE(((x'753bf6cb') NOT BETWEEN (v0.c0) AND (v0.c0)), NULL)) ISNULL));
SELECT DISTINCT * FROM v0 NATURAL JOIN vt1;
SELECT vt1.c1, v0.c0 FROM v0, vt1 GROUP BY vt1.c1, v0.c0;
SELECT vt1.c1, v0.c0 FROM v0, vt1 WHERE (0.38903529304051965) GROUP BY vt1.c1, v0.c0 UNION SELECT ALL vt1.c1, v0.c0 FROM v0, vt1 WHERE ((NOT (0.38903529304051965))) GROUP BY vt1.c1, v0.c0 UNION SELECT ALL vt1.c1, v0.c0 FROM v0, vt1 WHERE (((0.38903529304051965) ISNULL)) GROUP BY vt1.c1, v0.c0;
SELECT vt1.c1, v0.c0 FROM v0, vt1 GROUP BY vt1.c1, v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING AVG(CAST(COUNT(*) AS NUMERIC)) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (AVG(CAST(COUNT(*) AS NUMERIC)))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((AVG(CAST(COUNT(*) AS NUMERIC))) ISNULL);
SELECT * FROM vt1 RIGHT OUTER JOIN v0 ON ((((vt0.c0)||(v0.c0)))>>((~ (vt1.c1)))) RIGHT OUTER JOIN vt0 ON ((((vt0.c1 IN ())))<=((CAST(vt0.c0 AS BLOB))));
SELECT DISTINCT vt0.c1, v0.c0, vt1.c1, vt0.c0, vt1.c0 FROM v0, vt1, vt0;
SELECT DISTINCT vt0.c1, v0.c0, vt1.c1, vt0.c0, vt1.c0 FROM v0, vt1, vt0 WHERE (((((v0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)))<<(v0.c0))) UNION SELECT DISTINCT vt0.c1, v0.c0, vt1.c1, vt0.c0, vt1.c0 FROM v0, vt1, vt0 WHERE ((NOT (((((v0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)))<<(v0.c0))))) UNION SELECT DISTINCT vt0.c1, v0.c0, vt1.c1, vt0.c0, vt1.c0 FROM v0, vt1, vt0 WHERE (((((((v0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)))<<(v0.c0))) ISNULL));
SELECT DISTINCT vt0.c1, v0.c0, vt1.c1, vt0.c0, vt1.c0 FROM v0, vt1, vt0;
SELECT vt0.c1, v0.c0 FROM v0, vt0 GROUP BY vt0.c1, v0.c0;
SELECT vt0.c1, v0.c0 FROM v0, vt0 WHERE (NULLIF(DISTINCT CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END, LOWER(vt0.c1))) GROUP BY vt0.c1, v0.c0 UNION SELECT ALL vt0.c1, v0.c0 FROM v0 NOT INDEXED, vt0 WHERE ((NOT (NULLIF(DISTINCT CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END, LOWER(vt0.c1))))) GROUP BY vt0.c1, v0.c0 UNION SELECT ALL vt0.c1, v0.c0 FROM v0, vt0 WHERE (((NULLIF(DISTINCT CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END, LOWER(vt0.c1))) ISNULL)) GROUP BY vt0.c1, v0.c0;
SELECT vt0.c1, v0.c0 FROM v0, vt0 GROUP BY vt0.c1, v0.c0;
SELECT ALL v0.c0, vt1.c0, vt1.c1 FROM v0, vt1 GROUP BY v0.c0, vt1.c0, vt1.c1;
SELECT ALL v0.c0, vt1.c0, vt1.c1 FROM v0, vt1 GROUP BY v0.c0, vt1.c0, vt1.c1 HAVING v0.c0 UNION ALL SELECT v0.c0, vt1.c0, vt1.c1 FROM v0, vt1 GROUP BY v0.c0, vt1.c0, vt1.c1 HAVING (NOT (v0.c0)) UNION ALL SELECT v0.c0, vt1.c0, vt1.c1 FROM v0, vt1 GROUP BY v0.c0, vt1.c0, vt1.c1 HAVING ((v0.c0) ISNULL);
SELECT ALL v0.c0, vt1.c0, vt1.c1 FROM v0, vt1 GROUP BY v0.c0, vt1.c0, vt1.c1;
SELECT ALL v0.c0, vt1.c0, vt1.c1 FROM v0, vt1 GROUP BY v0.c0, vt1.c0, vt1.c1 HAVING v0.c0 UNION ALL SELECT v0.c0, vt1.c0, vt1.c1 FROM v0, vt1 GROUP BY v0.c0, vt1.c0, vt1.c1 HAVING (NOT (v0.c0)) UNION ALL SELECT v0.c0, vt1.c0, vt1.c1 FROM v0, vt1 GROUP BY v0.c0, vt1.c0, vt1.c1 HAVING ((v0.c0) ISNULL);
SELECT ALL v0.c0, vt1.c0, vt1.c1 FROM v0, vt1 GROUP BY v0.c0, vt1.c0, vt1.c1;
SELECT * FROM vt0;
SELECT * FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((((vt0.c1)>=(vt0.c0)))) AND ((((((vt0.c1)AND(vt0.c1)))OR(vt0.c1)))))) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT ((((vt0.c0)) BETWEEN ((((vt0.c1)>=(vt0.c0)))) AND ((((((vt0.c1)AND(vt0.c1)))OR(vt0.c1)))))))) UNION ALL SELECT ALL * FROM vt0 WHERE ((((((vt0.c0)) BETWEEN ((((vt0.c1)>=(vt0.c0)))) AND ((((((vt0.c1)AND(vt0.c1)))OR(vt0.c1)))))) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT * FROM vt0, v0;
SELECT DISTINCT * FROM vt0, v0 WHERE ((((+ (v0.c0)))-(((vt0.c1)GLOB(v0.c0))))) UNION SELECT DISTINCT * FROM vt0, v0 WHERE ((NOT ((((+ (v0.c0)))-(((vt0.c1)GLOB(v0.c0))))))) UNION SELECT DISTINCT * FROM vt0, v0 WHERE ((((((+ (v0.c0)))-(((vt0.c1)GLOB(v0.c0))))) ISNULL));
SELECT DISTINCT * FROM vt0, v0;
SELECT ALL v0.c0, vt1.c0, vt1.c1 FROM v0, vt1 GROUP BY v0.c0, vt1.c0, vt1.c1;
SELECT ALL v0.c0, vt1.c0, vt1.c1 FROM v0, vt1 WHERE ((((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((vt1.c1)))) NOTNULL)) GROUP BY v0.c0, vt1.c0, vt1.c1 UNION SELECT v0.c0, vt1.c0, vt1.c1 FROM v0, vt1 WHERE ((NOT ((((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((vt1.c1)))) NOTNULL)))) GROUP BY v0.c0, vt1.c0, vt1.c1 UNION SELECT v0.c0, vt1.c0, vt1.c1 FROM v0, vt1 WHERE ((((((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((vt1.c1)))) NOTNULL)) ISNULL)) GROUP BY v0.c0, vt1.c0, vt1.c1;
SELECT ALL v0.c0, vt1.c0, vt1.c1 FROM v0, vt1 GROUP BY v0.c0, vt1.c0, vt1.c1;
SELECT vt0.c1 FROM vt0, v0 GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0, v0 GROUP BY vt0.c1 HAVING ((MAX(v0.c0))LIKE(((('')) NOT BETWEEN ((TOTAL(vt0.c0))) AND ((v0.c0))))) UNION ALL SELECT vt0.c1 FROM vt0, v0 GROUP BY vt0.c1 HAVING (NOT (((MAX(v0.c0))LIKE(((('')) NOT BETWEEN ((TOTAL(vt0.c0))) AND ((v0.c0))))))) UNION ALL SELECT ALL vt0.c1 FROM vt0, v0 GROUP BY vt0.c1 HAVING ((((MAX(v0.c0))LIKE(((('')) NOT BETWEEN ((TOTAL(vt0.c0))) AND ((v0.c0)))))) ISNULL);
SELECT vt0.c1 FROM vt0, v0 GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0, v0 GROUP BY vt0.c1 HAVING ((MAX(v0.c0))LIKE(((('')) NOT BETWEEN ((TOTAL(vt0.c0))) AND ((v0.c0))))) UNION ALL SELECT vt0.c1 FROM vt0, v0 GROUP BY vt0.c1 HAVING (NOT (((MAX(v0.c0))LIKE(((('')) NOT BETWEEN ((TOTAL(vt0.c0))) AND ((v0.c0))))))) UNION ALL SELECT ALL vt0.c1 FROM vt0, v0 GROUP BY vt0.c1 HAVING ((((MAX(v0.c0))LIKE(((('')) NOT BETWEEN ((TOTAL(vt0.c0))) AND ((v0.c0)))))) ISNULL);
SELECT vt0.c1 FROM vt0, v0 GROUP BY vt0.c1;
SELECT vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE (vt0.c0) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (vt0.c0))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE (((vt0.c0) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT vt1.c1, vt1.c0, vt0.c0 FROM vt0 INNER JOIN vt1 ON CASE WHEN (('')AND(vt1.c1)) THEN (((vt1.c0, vt0.c1, vt1.c1))<>((vt1.c1, v0.c0, v0.c0))) END RIGHT OUTER JOIN v0 ON LOWER(vt1.c0) COLLATE RTRIM;
SELECT ALL vt0.c0, vt0.c1 FROM vt1, vt0, v0 GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c0, vt0.c1 FROM vt1, vt0, v0 WHERE (CASE COALESCE(vt1.c0, v0.c0, 1.543897321E9, '''8YDvrP]')  WHEN CASE vt0.c1  WHEN vt1.c1 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c1 WHEN vt0.c0 THEN v0.c0 WHEN 0x32d6e414 THEN vt0.c1 WHEN v0.c0 THEN vt1.c0 ELSE vt0.c1 END THEN (((vt1.c1, vt0.c1, vt0.c1)) NOT BETWEEN ((vt0.c0, 0.12696024474671674, '')) AND ((vt1.c0, vt0.c1, vt0.c1))) ELSE ((v0.c0)|(vt1.c1)) END) GROUP BY vt0.c0, vt0.c1 UNION SELECT ALL vt0.c0, vt0.c1 FROM vt1, vt0, v0 WHERE ((NOT (CASE COALESCE(vt1.c0, v0.c0, 1.543897321E9, '''8YDvrP]')  WHEN CASE vt0.c1  WHEN vt1.c1 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c1 WHEN vt0.c0 THEN v0.c0 WHEN 0x32d6e414 THEN vt0.c1 WHEN v0.c0 THEN vt1.c0 ELSE vt0.c1 END THEN (((vt1.c1, vt0.c1, vt0.c1)) NOT BETWEEN ((vt0.c0, 0.12696024474671674, '')) AND ((vt1.c0, vt0.c1, vt0.c1))) ELSE ((v0.c0)|(vt1.c1)) END))) GROUP BY vt0.c0, vt0.c1 UNION SELECT vt0.c0, vt0.c1 FROM vt1, vt0, v0 WHERE (((CASE COALESCE(vt1.c0, v0.c0, 1.543897321E9, '''8YDvrP]')  WHEN CASE vt0.c1  WHEN vt1.c1 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c1 WHEN vt0.c0 THEN v0.c0 WHEN 0x32d6e414 THEN vt0.c1 WHEN v0.c0 THEN vt1.c0 ELSE vt0.c1 END THEN (((vt1.c1, vt0.c1, vt0.c1)) NOT BETWEEN ((vt0.c0, 0.12696024474671674, '')) AND ((vt1.c0, vt0.c1, vt0.c1))) ELSE ((v0.c0)|(vt1.c1)) END) ISNULL)) GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt1, vt0, v0 GROUP BY vt0.c0, vt0.c1;
SELECT vt1.c1 FROM vt1 GROUP BY vt1.c1;
SELECT vt1.c1 FROM vt1 GROUP BY vt1.c1 HAVING (((TOTAL(COUNT(AVG(COUNT(*)))), ((((SUM(GROUP_CONCAT(SUM(vt1.c0))))OR(vt1.c0)))OR(SUM(0.1291669177508361))), (((vt1.c1)) NOT BETWEEN ((COUNT(*))) AND ((AVG(COUNT(*))))), TOTAL(x''), ((COUNT(AVG(vt1.c1))) NOT BETWEEN (vt1.c0) AND (MIN(vt1.c1)))))>((AVG(vt1.c0), SUM(vt1.c1), (NOT (vt1.c0)), COUNT(vt1.c1), TOTAL(COUNT(SUM(vt1.c0)))))) UNION ALL SELECT ALL vt1.c1 FROM vt1 GROUP BY vt1.c1 HAVING (NOT ((((TOTAL(COUNT(AVG(COUNT(*)))), ((((SUM(GROUP_CONCAT(SUM(vt1.c0))))OR(vt1.c0)))OR(SUM(0.1291669177508361))), (((vt1.c1)) NOT BETWEEN ((COUNT(*))) AND ((AVG(COUNT(*))))), TOTAL(x''), ((COUNT(AVG(vt1.c1))) NOT BETWEEN (vt1.c0) AND (MIN(vt1.c1)))))>((AVG(vt1.c0), SUM(vt1.c1), (NOT (vt1.c0)), COUNT(vt1.c1), TOTAL(COUNT(SUM(vt1.c0)))))))) UNION ALL SELECT vt1.c1 FROM vt1 GROUP BY vt1.c1 HAVING (((((TOTAL(COUNT(AVG(COUNT(*)))), ((((SUM(GROUP_CONCAT(SUM(vt1.c0))))OR(vt1.c0)))OR(SUM(0.1291669177508361))), (((vt1.c1)) NOT BETWEEN ((COUNT(*))) AND ((AVG(COUNT(*))))), TOTAL(x''), ((COUNT(AVG(vt1.c1))) NOT BETWEEN (vt1.c0) AND (MIN(vt1.c1)))))>((AVG(vt1.c0), SUM(vt1.c1), (NOT (vt1.c0)), COUNT(vt1.c1), TOTAL(COUNT(SUM(vt1.c0))))))) ISNULL);
SELECT * FROM vt1, v0;
SELECT * FROM vt1, v0 WHERE (((((v0.c0) BETWEEN (vt1.c1) AND (v0.c0)))+(NULL))) UNION ALL SELECT ALL * FROM vt1, v0 WHERE ((NOT (((((v0.c0) BETWEEN (vt1.c1) AND (v0.c0)))+(NULL))))) UNION ALL SELECT ALL * FROM vt1, v0 WHERE (((((((v0.c0) BETWEEN (vt1.c1) AND (v0.c0)))+(NULL))) ISNULL));
SELECT * FROM vt1, v0;
SELECT DISTINCT * FROM v0, vt0, vt1 NOT INDEXED;
SELECT DISTINCT * FROM v0, vt0, vt1 WHERE ((NOT ((- (vt0.c1))))) UNION SELECT DISTINCT * FROM v0, vt0, vt1 WHERE ((NOT ((NOT ((- (vt0.c1))))))) UNION SELECT DISTINCT * FROM v0, vt0, vt1 WHERE ((((NOT ((- (vt0.c1))))) ISNULL));
SELECT DISTINCT * FROM v0, vt0, vt1 NOT INDEXED;
SELECT ALL vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0;
SELECT ALL vt1.c1, vt1.c0 FROM vt1 WHERE (vt1.c1) GROUP BY vt1.c1, vt1.c0 UNION SELECT vt1.c1, vt1.c0 FROM vt1 WHERE ((NOT (vt1.c1))) GROUP BY vt1.c1, vt1.c0 UNION SELECT ALL vt1.c1, vt1.c0 FROM vt1 WHERE (((vt1.c1) ISNULL)) GROUP BY vt1.c1, vt1.c0;
SELECT ALL vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING COUNT(HEX(DISTINCT AVG(0.6942321017466802))) UNION ALL SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING (NOT (COUNT(HEX(DISTINCT AVG(0.6942321017466802))))) UNION ALL SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING ((COUNT(HEX(DISTINCT AVG(0.6942321017466802)))) ISNULL);
SELECT ALL vt1.c0 FROM vt1;
SELECT vt1.c0 FROM vt1 WHERE (((((vt1.c0) BETWEEN (vt1.c1) AND (vt1.c0)))|(CAST(vt1.c0 AS TEXT)))) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (((((vt1.c0) BETWEEN (vt1.c1) AND (vt1.c0)))|(CAST(vt1.c0 AS TEXT)))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE (((((((vt1.c0) BETWEEN (vt1.c1) AND (vt1.c0)))|(CAST(vt1.c0 AS TEXT)))) ISNULL));
SELECT ALL vt1.c0 FROM vt1;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (((((vt1.c1) NOT NULL)) IS TRUE)) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (((((vt1.c1) NOT NULL)) IS TRUE)))) UNION SELECT DISTINCT * FROM vt1 WHERE (((((((vt1.c1) NOT NULL)) IS TRUE)) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT vt0.c1, vt1.c1, v0.c0, vt1.c0 FROM vt1, v0 NOT INDEXED, vt0 GROUP BY vt0.c1, vt1.c1, v0.c0, vt1.c0;
SELECT ALL vt0.c1, vt1.c1, v0.c0, vt1.c0 FROM vt1, v0, vt0 WHERE (CAST(NULL COLLATE BINARY AS NUMERIC)) GROUP BY vt0.c1, vt1.c1, v0.c0, vt1.c0 UNION SELECT ALL vt0.c1, vt1.c1, v0.c0, vt1.c0 FROM vt1, v0, vt0 WHERE ((NOT (CAST(NULL COLLATE BINARY AS NUMERIC)))) GROUP BY vt0.c1, vt1.c1, v0.c0, vt1.c0 UNION SELECT vt0.c1, vt1.c1, v0.c0, vt1.c0 FROM vt1, v0, vt0 WHERE (((CAST(NULL COLLATE BINARY AS NUMERIC)) ISNULL)) GROUP BY vt0.c1, vt1.c1, v0.c0, vt1.c0;
SELECT vt0.c1, vt1.c1, v0.c0, vt1.c0 FROM vt1, v0 NOT INDEXED, vt0 GROUP BY vt0.c1, vt1.c1, v0.c0, vt1.c0;
SELECT vt1.c1, v0.c0, vt0.c0, vt0.c1 FROM vt1, vt0, v0 GROUP BY vt1.c1, v0.c0, vt0.c0, vt0.c1;
SELECT ALL vt1.c1, v0.c0, vt0.c0, vt0.c1 FROM vt1 NOT INDEXED, vt0, v0 GROUP BY vt1.c1, v0.c0, vt0.c0, vt0.c1 HAVING ((vt1.c1 COLLATE NOCASE)>>(vt1.c1 COLLATE NOCASE)) UNION ALL SELECT vt1.c1, v0.c0, vt0.c0, vt0.c1 FROM vt1, vt0, v0 GROUP BY vt1.c1, v0.c0, vt0.c0, vt0.c1 HAVING (NOT (((vt1.c1 COLLATE NOCASE)>>(vt1.c1 COLLATE NOCASE)))) UNION ALL SELECT ALL vt1.c1, v0.c0, vt0.c0, vt0.c1 FROM vt1, vt0, v0 GROUP BY vt1.c1, v0.c0, vt0.c0, vt0.c1 HAVING ((((vt1.c1 COLLATE NOCASE)>>(vt1.c1 COLLATE NOCASE))) ISNULL);
SELECT vt1.c1, v0.c0, vt0.c0, vt0.c1 FROM vt1, vt0, v0 GROUP BY vt1.c1, v0.c0, vt0.c0, vt0.c1;
SELECT ALL vt1.c1, v0.c0, vt0.c0, vt0.c1 FROM vt1 NOT INDEXED, vt0, v0 GROUP BY vt1.c1, v0.c0, vt0.c0, vt0.c1 HAVING ((vt1.c1 COLLATE NOCASE)>>(vt1.c1 COLLATE NOCASE)) UNION ALL SELECT vt1.c1, v0.c0, vt0.c0, vt0.c1 FROM vt1, vt0, v0 GROUP BY vt1.c1, v0.c0, vt0.c0, vt0.c1 HAVING (NOT (((vt1.c1 COLLATE NOCASE)>>(vt1.c1 COLLATE NOCASE)))) UNION ALL SELECT ALL vt1.c1, v0.c0, vt0.c0, vt0.c1 FROM vt1, vt0, v0 GROUP BY vt1.c1, v0.c0, vt0.c0, vt0.c1 HAVING ((((vt1.c1 COLLATE NOCASE)>>(vt1.c1 COLLATE NOCASE))) ISNULL);
SELECT vt1.c1, v0.c0, vt0.c0, vt0.c1 FROM vt1, vt0, v0 GROUP BY vt1.c1, v0.c0, vt0.c0, vt0.c1;
SELECT ALL * FROM v0;
SELECT ALL * FROM v0 WHERE (0.3231470366917758) UNION ALL SELECT * FROM v0 WHERE ((NOT (0.3231470366917758))) UNION ALL SELECT * FROM v0 WHERE (((0.3231470366917758) ISNULL));
SELECT ALL * FROM v0;
SELECT DISTINCT * FROM v0, vt1;
SELECT DISTINCT * FROM v0, vt1 WHERE (((((NULL) IS TRUE)) IS TRUE)) UNION SELECT DISTINCT * FROM v0, vt1 WHERE ((NOT (((((NULL) IS TRUE)) IS TRUE)))) UNION SELECT DISTINCT * FROM v0, vt1 WHERE (((((((NULL) IS TRUE)) IS TRUE)) ISNULL));
SELECT DISTINCT * FROM v0, vt1;
SELECT vt1.c1, v0.c0, vt0.c0, vt1.c0 FROM v0, vt1, vt0 GROUP BY vt1.c1, v0.c0, vt0.c0, vt1.c0;
SELECT vt1.c1, v0.c0, vt0.c0, vt1.c0 FROM v0 NOT INDEXED, vt1, vt0 WHERE (((CASE vt0.c1  WHEN vt1.c0 THEN vt1.c1 ELSE vt0.c1 END)>=(((vt1.c1)>>(vt1.c1))))) GROUP BY vt1.c1, v0.c0, vt0.c0, vt1.c0 UNION SELECT ALL vt1.c1, v0.c0, vt0.c0, vt1.c0 FROM v0, vt1, vt0 WHERE ((NOT (((CASE vt0.c1  WHEN vt1.c0 THEN vt1.c1 ELSE vt0.c1 END)>=(((vt1.c1)>>(vt1.c1))))))) GROUP BY vt1.c1, v0.c0, vt0.c0, vt1.c0 UNION SELECT ALL vt1.c1, v0.c0, vt0.c0, vt1.c0 FROM v0, vt1, vt0 WHERE (((((CASE vt0.c1  WHEN vt1.c0 THEN vt1.c1 ELSE vt0.c1 END)>=(((vt1.c1)>>(vt1.c1))))) ISNULL)) GROUP BY vt1.c1, v0.c0, vt0.c0, vt1.c0;
SELECT vt1.c1, v0.c0, vt0.c0, vt1.c0 FROM v0, vt1, vt0 GROUP BY vt1.c1, v0.c0, vt0.c0, vt1.c0;
SELECT ALL vt0.c1 FROM v0, vt0, vt1 GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM v0, vt0, vt1 GROUP BY vt0.c1 HAVING GROUP_CONCAT((+ (MAX(v0.c0)))) UNION ALL SELECT vt0.c1 FROM v0, vt0, vt1 GROUP BY vt0.c1 HAVING (NOT (GROUP_CONCAT((+ (MAX(v0.c0)))))) UNION ALL SELECT vt0.c1 FROM v0, vt0, vt1 GROUP BY vt0.c1 HAVING ((GROUP_CONCAT((+ (MAX(v0.c0))))) ISNULL);
SELECT ALL * FROM vt1, vt0;
SELECT ALL * FROM vt1, vt0 WHERE ((~ (vt1.c0)) COLLATE BINARY) UNION ALL SELECT ALL * FROM vt1, vt0 NOT INDEXED WHERE ((NOT ((~ (vt1.c0)) COLLATE BINARY))) UNION ALL SELECT * FROM vt1, vt0 WHERE ((((~ (vt1.c0)) COLLATE BINARY) ISNULL));
SELECT ALL * FROM vt1, vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE ((NOT (vt0.c0)) COLLATE NOCASE) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT ((NOT (vt0.c0)) COLLATE NOCASE))) UNION SELECT DISTINCT * FROM vt0 WHERE ((((NOT (vt0.c0)) COLLATE NOCASE) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT vt1.c1, v0.c0 FROM v0 CROSS JOIN vt1 ON (((NOT (v0.c0)))<<(1878042570)) GROUP BY vt1.c1, v0.c0;
SELECT vt1.c1, v0.c0 FROM v0 CROSS JOIN vt1 ON (((NOT (v0.c0)))<<(1878042570)) WHERE ('-1608145861') GROUP BY vt1.c1, v0.c0 UNION SELECT vt1.c1, v0.c0 FROM v0 CROSS JOIN vt1 ON (((NOT (v0.c0)))<<(1878042570)) WHERE ((NOT ('-1608145861'))) GROUP BY vt1.c1, v0.c0 UNION SELECT ALL vt1.c1, v0.c0 FROM v0 CROSS JOIN vt1 ON (((NOT (v0.c0)))<<(1878042570)) WHERE ((('-1608145861') ISNULL)) GROUP BY vt1.c1, v0.c0;
SELECT vt1.c1, v0.c0 FROM v0 CROSS JOIN vt1 ON (((NOT (v0.c0)))<<(1878042570)) GROUP BY vt1.c1, v0.c0;
SELECT vt1.c1 FROM vt1 GROUP BY vt1.c1;
SELECT ALL vt1.c1 FROM vt1 GROUP BY vt1.c1 HAVING COUNT(*) UNION ALL SELECT ALL vt1.c1 FROM vt1 GROUP BY vt1.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt1.c1 FROM vt1 GROUP BY vt1.c1 HAVING ((COUNT(*)) ISNULL);
SELECT vt1.c1 FROM vt1 GROUP BY vt1.c1;
SELECT ALL vt1.c1 FROM vt1 GROUP BY vt1.c1 HAVING COUNT(*) UNION ALL SELECT ALL vt1.c1 FROM vt1 GROUP BY vt1.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt1.c1 FROM vt1 GROUP BY vt1.c1 HAVING ((COUNT(*)) ISNULL);
SELECT vt1.c1 FROM vt1 GROUP BY vt1.c1;
SELECT ALL * FROM vt0;
SELECT ALL * FROM vt0 WHERE (((((vt0.c1) BETWEEN (vt0.c1) AND (-379187868))) BETWEEN (((vt0.c0)LIKE('-1564988031'))) AND ((((vt0.c0, vt0.c1, vt0.c0)) NOT BETWEEN ((vt0.c1, vt0.c0, vt0.c0)) AND ((vt0.c1, vt0.c1, vt0.c1)))))) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (((((vt0.c1) BETWEEN (vt0.c1) AND (-379187868))) BETWEEN (((vt0.c0)LIKE('-1564988031'))) AND ((((vt0.c0, vt0.c1, vt0.c0)) NOT BETWEEN ((vt0.c1, vt0.c0, vt0.c0)) AND ((vt0.c1, vt0.c1, vt0.c1)))))))) UNION ALL SELECT * FROM vt0 WHERE (((((((vt0.c1) BETWEEN (vt0.c1) AND (-379187868))) BETWEEN (((vt0.c0)LIKE('-1564988031'))) AND ((((vt0.c0, vt0.c1, vt0.c0)) NOT BETWEEN ((vt0.c1, vt0.c0, vt0.c0)) AND ((vt0.c1, vt0.c1, vt0.c1)))))) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT * FROM vt0, vt1;
SELECT DISTINCT * FROM vt0, vt1 WHERE ((((vt0.c1)) NOT BETWEEN ((NULL)) AND ((((vt0.c1)GLOB(vt1.c1)))))) UNION SELECT DISTINCT * FROM vt0, vt1 WHERE ((NOT ((((vt0.c1)) NOT BETWEEN ((NULL)) AND ((((vt0.c1)GLOB(vt1.c1)))))))) UNION SELECT DISTINCT * FROM vt0, vt1 WHERE ((((((vt0.c1)) NOT BETWEEN ((NULL)) AND ((((vt0.c1)GLOB(vt1.c1)))))) ISNULL));
SELECT DISTINCT * FROM vt0, vt1;
SELECT ALL vt0.c1, vt1.c1, v0.c0, vt0.c0 FROM vt1, vt0, v0 GROUP BY vt0.c1, vt1.c1, v0.c0, vt0.c0;
SELECT vt0.c1, vt1.c1, v0.c0, vt0.c0 FROM vt1, vt0, v0 WHERE (((((- (v0.c0))))==(((((vt0.c1))>=((vt1.c0))))))) GROUP BY vt0.c1, vt1.c1, v0.c0, vt0.c0 UNION SELECT ALL vt0.c1, vt1.c1, v0.c0, vt0.c0 FROM vt1 NOT INDEXED, vt0, v0 WHERE ((NOT (((((- (v0.c0))))==(((((vt0.c1))>=((vt1.c0))))))))) GROUP BY vt0.c1, vt1.c1, v0.c0, vt0.c0 UNION SELECT ALL vt0.c1, vt1.c1, v0.c0, vt0.c0 FROM vt1, vt0, v0 WHERE (((((((- (v0.c0))))=(((((vt0.c1))>=((vt1.c0))))))) ISNULL)) GROUP BY vt0.c1, vt1.c1, v0.c0, vt0.c0;
SELECT ALL vt0.c1, vt1.c1, v0.c0, vt0.c0 FROM vt1, vt0, v0 GROUP BY vt0.c1, vt1.c1, v0.c0, vt0.c0;
SELECT ALL v0.c0, vt1.c0, vt0.c0, vt0.c1, vt1.c1 FROM v0, vt1, vt0 GROUP BY v0.c0, vt1.c0, vt0.c0, vt0.c1, vt1.c1;
SELECT v0.c0, vt1.c0, vt0.c0, vt0.c1, vt1.c1 FROM v0 NOT INDEXED, vt1, vt0 GROUP BY v0.c0, vt1.c0, vt0.c0, vt0.c1, vt1.c1 HAVING GROUP_CONCAT(COUNT(vt1.c1)) UNION ALL SELECT v0.c0, vt1.c0, vt0.c0, vt0.c1, vt1.c1 FROM v0, vt1, vt0 GROUP BY v0.c0, vt1.c0, vt0.c0, vt0.c1, vt1.c1 HAVING (NOT (GROUP_CONCAT(COUNT(vt1.c1)))) UNION ALL SELECT v0.c0, vt1.c0, vt0.c0, vt0.c1, vt1.c1 FROM v0, vt1, vt0 GROUP BY v0.c0, vt1.c0, vt0.c0, vt0.c1, vt1.c1 HAVING ((GROUP_CONCAT(COUNT(vt1.c1))) ISNULL);
SELECT ALL * FROM v0 RIGHT OUTER JOIN vt1 ON ((vt1.c1)IS NOT(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))));
SELECT * FROM v0 RIGHT OUTER JOIN vt1 ON ((vt1.c1)IS NOT(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))) WHERE ((+ (((vt1.c0) IS FALSE)))) UNION ALL SELECT ALL * FROM v0 RIGHT OUTER JOIN vt1 ON ((vt1.c1)IS NOT(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))) WHERE ((NOT ((+ (((vt1.c0) IS FALSE)))))) UNION ALL SELECT * FROM v0 RIGHT OUTER JOIN vt1 ON ((vt1.c1)IS NOT(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))) WHERE ((((+ (((vt1.c0) IS FALSE)))) ISNULL));
SELECT ALL * FROM v0 RIGHT OUTER JOIN vt1 ON ((vt1.c1)IS NOT(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))));
SELECT DISTINCT * FROM vt0, v0;
SELECT DISTINCT * FROM vt0, v0 WHERE ((+ (((((v0.c0)OR('1930947834')))AND(0.6235702279936224))))) UNION SELECT DISTINCT * FROM vt0, v0 NOT INDEXED WHERE ((NOT ((+ (((((v0.c0)OR('1930947834')))AND(0.6235702279936224))))))) UNION SELECT DISTINCT * FROM vt0, v0 WHERE ((((+ (((((v0.c0)OR('1930947834')))AND(0.6235702279936224))))) ISNULL));
SELECT DISTINCT * FROM vt0, v0;
SELECT ALL vt1.c1, vt0.c1, v0.c0 FROM v0, vt1, vt0 GROUP BY vt1.c1, vt0.c1, v0.c0;
SELECT vt1.c1, vt0.c1, v0.c0 FROM v0, vt1, vt0 WHERE (v0.c0 COLLATE BINARY) GROUP BY vt1.c1, vt0.c1, v0.c0 UNION SELECT vt1.c1, vt0.c1, v0.c0 FROM v0, vt1, vt0 WHERE ((NOT (v0.c0 COLLATE BINARY))) GROUP BY vt1.c1, vt0.c1, v0.c0 UNION SELECT ALL vt1.c1, vt0.c1, v0.c0 FROM v0, vt1, vt0 WHERE (((v0.c0 COLLATE BINARY) ISNULL)) GROUP BY vt1.c1, vt0.c1, v0.c0;
SELECT ALL vt1.c1, vt0.c1, v0.c0 FROM v0, vt1, vt0 GROUP BY vt1.c1, vt0.c1, v0.c0;
SELECT vt1.c1, vt0.c0 FROM v0, vt1, vt0 GROUP BY vt1.c1, vt0.c0;
SELECT vt1.c1, vt0.c0 FROM v0, vt1, vt0 GROUP BY vt1.c1, vt0.c0 HAVING SUM(COUNT(COUNT(TOTAL(vt0.c1)))) UNION ALL SELECT ALL vt1.c1, vt0.c0 FROM v0, vt1, vt0 GROUP BY vt1.c1, vt0.c0 HAVING (NOT (SUM(COUNT(COUNT(TOTAL(vt0.c1)))))) UNION ALL SELECT ALL vt1.c1, vt0.c0 FROM v0, vt1, vt0 GROUP BY vt1.c1, vt0.c0 HAVING ((SUM(COUNT(COUNT(TOTAL(vt0.c1))))) ISNULL);
SELECT vt1.c1 FROM v0, vt1;
SELECT ALL vt1.c1 FROM v0, vt1 NOT INDEXED WHERE ('HFaZ') UNION ALL SELECT ALL vt1.c1 FROM v0, vt1 WHERE ((NOT ('HFaZ'))) UNION ALL SELECT ALL vt1.c1 FROM v0 NOT INDEXED, vt1 WHERE ((('HFaZ') ISNULL));
SELECT vt1.c1 FROM v0, vt1;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (((((v0.c0) NOT NULL)) NOT BETWEEN (ABS(DISTINCT v0.c0)) AND (NULL COLLATE RTRIM))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (((((v0.c0) NOT NULL)) NOT BETWEEN (ABS(DISTINCT v0.c0)) AND (NULL COLLATE RTRIM))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((((((v0.c0) NOT NULL)) NOT BETWEEN (ABS(DISTINCT v0.c0)) AND (NULL COLLATE RTRIM))) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT ALL v0.c0, vt0.c0, vt1.c0, vt0.c1 FROM vt1, v0 INNER JOIN vt0 ON ((((vt1.c1)IS NOT(vt0.c1)))OR((((vt0.c1, vt1.c0, vt0.c1)) BETWEEN ((v0.c0, '1869995030', vt0.c0)) AND (('+ej8', v0.c0, vt1.c0))))) GROUP BY v0.c0, vt0.c0, vt1.c0, vt0.c1;
SELECT v0.c0, vt0.c0, vt1.c0, vt0.c1 FROM vt1, v0 INNER JOIN vt0 ON ((((vt1.c1)IS NOT(vt0.c1)))OR((((vt0.c1, vt1.c0, vt0.c1)) BETWEEN ((v0.c0, '1869995030', vt0.c0)) AND (('+ej8', v0.c0, vt1.c0))))) WHERE (0.19429198458954244) GROUP BY v0.c0, vt0.c0, vt1.c0, vt0.c1 UNION SELECT v0.c0, vt0.c0, vt1.c0, vt0.c1 FROM vt1, v0 INNER JOIN vt0 ON ((((vt1.c1)IS NOT(vt0.c1)))OR((((vt0.c1, vt1.c0, vt0.c1)) BETWEEN ((v0.c0, '1869995030', vt0.c0)) AND (('+ej8', v0.c0, vt1.c0))))) WHERE ((NOT (0.19429198458954244))) GROUP BY v0.c0, vt0.c0, vt1.c0, vt0.c1 UNION SELECT v0.c0, vt0.c0, vt1.c0, vt0.c1 FROM vt1, v0 INNER JOIN vt0 ON ((((vt1.c1)IS NOT(vt0.c1)))OR((((vt0.c1, vt1.c0, vt0.c1)) BETWEEN ((v0.c0, '1869995030', vt0.c0)) AND (('+ej8', v0.c0, vt1.c0))))) WHERE (((0.19429198458954244) ISNULL)) GROUP BY v0.c0, vt0.c0, vt1.c0, vt0.c1;
SELECT ALL v0.c0, vt0.c0, vt1.c0, vt0.c1 FROM vt1, v0 INNER JOIN vt0 ON ((((vt1.c1)IS NOT(vt0.c1)))OR((((vt0.c1, vt1.c0, vt0.c1)) BETWEEN ((v0.c0, '1869995030', vt0.c0)) AND (('+ej8', v0.c0, vt1.c0))))) GROUP BY v0.c0, vt0.c0, vt1.c0, vt0.c1;
SELECT ALL vt0.c1 FROM vt1, vt0 GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt1, vt0 GROUP BY vt0.c1 HAVING GROUP_CONCAT(((TOTAL(SUM(COUNT(AVG(GROUP_CONCAT(COUNT(*))))))) NOT BETWEEN (NULL) AND (vt0.c1))) UNION ALL SELECT ALL vt0.c1 FROM vt1, vt0 GROUP BY vt0.c1 HAVING (NOT (GROUP_CONCAT(((TOTAL(SUM(COUNT(AVG(GROUP_CONCAT(COUNT(*))))))) NOT BETWEEN (NULL) AND (vt0.c1))))) UNION ALL SELECT vt0.c1 FROM vt1 NOT INDEXED, vt0 GROUP BY vt0.c1 HAVING ((GROUP_CONCAT(((TOTAL(SUM(COUNT(AVG(GROUP_CONCAT(COUNT(*))))))) NOT BETWEEN (NULL) AND (vt0.c1)))) ISNULL);
SELECT vt1.c0, vt1.c1 FROM vt1;
SELECT ALL vt1.c0, vt1.c1 FROM vt1 WHERE (vt1.c1) UNION ALL SELECT vt1.c0, vt1.c1 FROM vt1 WHERE ((NOT (vt1.c1))) UNION ALL SELECT ALL vt1.c0, vt1.c1 FROM vt1 WHERE (((vt1.c1) ISNULL));
SELECT vt1.c0, vt1.c1 FROM vt1;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE ((- ((vt0.c1 IN (vt0.c0))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT ((- ((vt0.c1 IN (vt0.c0))))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((((- ((vt0.c1 IN (vt0.c0))))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT vt1.c1 FROM vt0, vt1, v0 GROUP BY vt1.c1;
SELECT ALL vt1.c1 FROM vt0, vt1, v0 WHERE (CASE COALESCE(DISTINCT -1145604133, vt0.c1, vt1.c1, vt1.c0)  WHEN vt0.c0 THEN NULL ELSE v0.c0 END) GROUP BY vt1.c1 UNION SELECT vt1.c1 FROM vt0, vt1, v0 WHERE ((NOT (CASE COALESCE(DISTINCT -1145604133, vt0.c1, vt1.c1, vt1.c0)  WHEN vt0.c0 THEN NULL ELSE v0.c0 END))) GROUP BY vt1.c1 UNION SELECT ALL vt1.c1 FROM vt0, vt1, v0 WHERE (((CASE COALESCE(DISTINCT -1145604133, vt0.c1, vt1.c1, vt1.c0)  WHEN vt0.c0 THEN NULL ELSE v0.c0 END) ISNULL)) GROUP BY vt1.c1;
SELECT vt1.c1 FROM vt0, vt1, v0 GROUP BY vt1.c1;
SELECT v0.c0, vt0.c1 FROM vt1, vt0, v0 GROUP BY v0.c0, vt0.c1;
SELECT ALL v0.c0, vt0.c1 FROM vt1, vt0, v0 GROUP BY v0.c0, vt0.c1 HAVING (NOT (0.608034543515)) UNION ALL SELECT v0.c0, vt0.c1 FROM vt1, vt0 NOT INDEXED, v0 GROUP BY v0.c0, vt0.c1 HAVING (NOT ((NOT (0.608034543515)))) UNION ALL SELECT v0.c0, vt0.c1 FROM vt1, vt0, v0 GROUP BY v0.c0, vt0.c1 HAVING (((NOT (0.608034543515))) ISNULL);
SELECT v0.c0, vt0.c1 FROM vt1, vt0, v0 GROUP BY v0.c0, vt0.c1;
SELECT ALL v0.c0, vt0.c1 FROM vt1, vt0, v0 GROUP BY v0.c0, vt0.c1 HAVING (NOT (0.608034543515)) UNION ALL SELECT v0.c0, vt0.c1 FROM vt1, vt0 NOT INDEXED, v0 GROUP BY v0.c0, vt0.c1 HAVING (NOT ((NOT (0.608034543515)))) UNION ALL SELECT v0.c0, vt0.c1 FROM vt1, vt0, v0 GROUP BY v0.c0, vt0.c1 HAVING (((NOT (0.608034543515))) ISNULL);
SELECT v0.c0, vt0.c1 FROM vt1, vt0, v0 GROUP BY v0.c0, vt0.c1;
SELECT ALL * FROM v0, vt1;
SELECT * FROM v0, vt1 WHERE (((CAST(v0.c0 AS INTEGER)) NOT BETWEEN (0.15566975969441088) AND (CAST(vt1.c1 AS NUMERIC)))) UNION ALL SELECT * FROM v0, vt1 WHERE ((NOT (((CAST(v0.c0 AS INTEGER)) NOT BETWEEN (0.15566975969441088) AND (CAST(vt1.c1 AS NUMERIC)))))) UNION ALL SELECT ALL * FROM v0, vt1 WHERE (((((CAST(v0.c0 AS INTEGER)) NOT BETWEEN (0.15566975969441088) AND (CAST(vt1.c1 AS NUMERIC)))) ISNULL));
SELECT ALL * FROM v0, vt1;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (CASE WHEN (+ (v0.c0)) THEN 0.3231470366917758 ELSE (((0X84065ab, v0.c0, x'')) NOT BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, x''))) END) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (CASE WHEN (+ (v0.c0)) THEN 0.3231470366917758 ELSE (((0x84065ab, v0.c0, x'')) NOT BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, x''))) END))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((CASE WHEN (+ (v0.c0)) THEN 0.3231470366917758 ELSE (((0x84065ab, v0.c0, x'')) NOT BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, x''))) END) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT ALL vt0.c1, vt1.c1, vt0.c0, vt1.c0 FROM vt0 CROSS JOIN vt1 ON LIKELIHOOD(DISTINCT ((293882219)LIKE(vt0.c1)), 0.19759741775564976) GROUP BY vt0.c1, vt1.c1, vt0.c0, vt1.c0;
SELECT vt0.c1, vt1.c1, vt0.c0, vt1.c0 FROM vt0 CROSS JOIN vt1 ON LIKELIHOOD(DISTINCT ((293882219)LIKE(vt0.c1)), 0.19759741775564976) WHERE (vt0.c0) GROUP BY vt0.c1, vt1.c1, vt0.c0, vt1.c0 UNION SELECT ALL vt0.c1, vt1.c1, vt0.c0, vt1.c0 FROM vt0 CROSS JOIN vt1 ON LIKELIHOOD(DISTINCT ((293882219)LIKE(vt0.c1)), 0.19759741775564976) WHERE ((NOT (vt0.c0))) GROUP BY vt0.c1, vt1.c1, vt0.c0, vt1.c0 UNION SELECT ALL vt0.c1, vt1.c1, vt0.c0, vt1.c0 FROM vt0 CROSS JOIN vt1 ON LIKELIHOOD(DISTINCT ((293882219)LIKE(vt0.c1)), 0.19759741775564976) WHERE (((vt0.c0) ISNULL)) GROUP BY vt0.c1, vt1.c1, vt0.c0, vt1.c0;
SELECT ALL vt0.c1, vt1.c1, vt0.c0, vt1.c0 FROM vt0 CROSS JOIN vt1 ON LIKELIHOOD(DISTINCT ((293882219)LIKE(vt0.c1)), 0.19759741775564976) GROUP BY vt0.c1, vt1.c1, vt0.c0, vt1.c0;
SELECT ALL vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1;
SELECT ALL vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1 HAVING CAST(AVG(vt1.c0) AS NUMERIC) UNION ALL SELECT ALL vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1 HAVING (NOT (CAST(AVG(vt1.c0) AS NUMERIC))) UNION ALL SELECT ALL vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1 HAVING ((CAST(AVG(vt1.c0) AS NUMERIC)) ISNULL);
SELECT ALL vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1;
SELECT ALL vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1 HAVING CAST(AVG(vt1.c0) AS NUMERIC) UNION ALL SELECT ALL vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1 HAVING (NOT (CAST(AVG(vt1.c0) AS NUMERIC))) UNION ALL SELECT ALL vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1 HAVING ((CAST(AVG(vt1.c0) AS NUMERIC)) ISNULL);
SELECT ALL vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1;
SELECT ALL v0.c0 FROM vt0, v0, vt1;
SELECT v0.c0 FROM vt0, v0, vt1 WHERE ((((NULL))<((HEX(v0.c0))))) UNION ALL SELECT ALL v0.c0 FROM vt0, v0, vt1 WHERE ((NOT ((((NULL))<((HEX(v0.c0))))))) UNION ALL SELECT v0.c0 FROM vt0, v0, vt1 WHERE ((((((NULL))<((HEX(v0.c0))))) ISNULL));
SELECT ALL v0.c0 FROM vt0, v0, vt1;
SELECT DISTINCT vt1.c1, vt0.c0 FROM vt1, vt0;
SELECT DISTINCT vt1.c1, vt0.c0 FROM vt1, vt0 WHERE ((((~ (vt0.c0)))IS(((vt0.c1)!=('(Vkã©}'))))) UNION SELECT DISTINCT vt1.c1, vt0.c0 FROM vt1, vt0 WHERE ((NOT ((((~ (vt0.c0)))IS(((vt0.c1)!=('(Vkã©}'))))))) UNION SELECT DISTINCT vt1.c1, vt0.c0 FROM vt1, vt0 WHERE ((((((~ (vt0.c0)))IS(((vt0.c1)<>('(Vkã©}'))))) ISNULL));
SELECT DISTINCT vt1.c1, vt0.c0 FROM vt1, vt0;
SELECT ALL vt1.c0, v0.c0 FROM vt0, vt1, v0 GROUP BY vt1.c0, v0.c0;
SELECT ALL vt1.c0, v0.c0 FROM vt0, vt1, v0 WHERE ((v0.c0 IN ())) GROUP BY vt1.c0, v0.c0 UNION SELECT vt1.c0, v0.c0 FROM vt0, vt1, v0 WHERE ((NOT ((v0.c0 IN ())))) GROUP BY vt1.c0, v0.c0 UNION SELECT vt1.c0, v0.c0 FROM vt0, vt1, v0 WHERE ((((v0.c0 IN ())) ISNULL)) GROUP BY vt1.c0, v0.c0;
SELECT ALL vt1.c0, v0.c0 FROM vt0, vt1, v0 GROUP BY vt1.c0, v0.c0;
SELECT vt1.c0, vt0.c1, vt0.c0, vt1.c1, v0.c0 FROM v0 RIGHT OUTER JOIN vt1 ON vt0.c0 COLLATE BINARY COLLATE NOCASE RIGHT OUTER JOIN vt0 ON CASE WHEN CASE WHEN vt0.c1 THEN vt1.c1 ELSE vt1.c0 END THEN ((vt0.c1)!=(v0.c0)) ELSE vt1.c0 END GROUP BY vt1.c0, vt0.c1, vt0.c0, vt1.c1, v0.c0;
SELECT ALL * FROM vt0, v0;
SELECT ALL * FROM vt0, v0 WHERE (CAST((+ (vt0.c1)) AS BLOB)) UNION ALL SELECT ALL * FROM vt0, v0 WHERE ((NOT (CAST((+ (vt0.c1)) AS BLOB)))) UNION ALL SELECT * FROM vt0, v0 WHERE (((CAST((+ (vt0.c1)) AS BLOB)) ISNULL));
SELECT ALL * FROM vt0, v0;
SELECT DISTINCT vt1.c0, v0.c0, vt1.c1 FROM v0, vt1;
SELECT DISTINCT vt1.c0, v0.c0, vt1.c1 FROM v0, vt1 WHERE (vt1.c0) UNION SELECT DISTINCT vt1.c0, v0.c0, vt1.c1 FROM v0, vt1 WHERE ((NOT (vt1.c0))) UNION SELECT DISTINCT vt1.c0, v0.c0, vt1.c1 FROM v0, vt1 WHERE (((vt1.c0) ISNULL));
SELECT DISTINCT vt1.c0, v0.c0, vt1.c1 FROM v0, vt1;
SELECT vt1.c0, vt1.c1 FROM vt0 INNER JOIN v0 ON vt1.c1 CROSS JOIN vt1 ON (NOT (vt0.c1)) COLLATE BINARY GROUP BY vt1.c0, vt1.c1;
SELECT ALL vt1.c0, vt1.c1 FROM vt0 INNER JOIN v0 ON vt1.c1 CROSS JOIN vt1 ON (NOT (vt0.c1)) COLLATE BINARY WHERE (((NULL) NOT BETWEEN (CAST(v0.c0 AS TEXT)) AND (((vt1.c1) NOT NULL)))) GROUP BY vt1.c0, vt1.c1 UNION SELECT ALL vt1.c0, vt1.c1 FROM vt0 INNER JOIN v0 ON vt1.c1 CROSS JOIN vt1 ON (NOT (vt0.c1)) COLLATE BINARY WHERE ((NOT (((NULL) NOT BETWEEN (CAST(v0.c0 AS TEXT)) AND (((vt1.c1) NOT NULL)))))) GROUP BY vt1.c0, vt1.c1 UNION SELECT ALL vt1.c0, vt1.c1 FROM vt0 INNER JOIN v0 ON vt1.c1 CROSS JOIN vt1 ON (NOT (vt0.c1)) COLLATE BINARY WHERE (((((NULL) NOT BETWEEN (CAST(v0.c0 AS TEXT)) AND (((vt1.c1) NOT NULL)))) ISNULL)) GROUP BY vt1.c0, vt1.c1;
SELECT vt1.c0, vt1.c1 FROM vt0 INNER JOIN v0 ON vt1.c1 CROSS JOIN vt1 ON (NOT (vt0.c1)) COLLATE BINARY GROUP BY vt1.c0, vt1.c1;
SELECT vt1.c0, vt0.c0, vt0.c1 FROM vt1, v0, vt0 GROUP BY vt1.c0, vt0.c0, vt0.c1;
SELECT vt1.c0, vt0.c0, vt0.c1 FROM vt1, v0, vt0 GROUP BY vt1.c0, vt0.c0, vt0.c1 HAVING (COUNT(MIN(TOTAL(GROUP_CONCAT(v0.c0)))) IN ()) UNION ALL SELECT vt1.c0, vt0.c0, vt0.c1 FROM vt1, v0, vt0 GROUP BY vt1.c0, vt0.c0, vt0.c1 HAVING (NOT ((COUNT(MIN(TOTAL(GROUP_CONCAT(v0.c0)))) IN ()))) UNION ALL SELECT vt1.c0, vt0.c0, vt0.c1 FROM vt1, v0, vt0 GROUP BY vt1.c0, vt0.c0, vt0.c1 HAVING (((COUNT(MIN(TOTAL(GROUP_CONCAT(v0.c0)))) IN ())) ISNULL);
SELECT vt1.c0, vt0.c0, vt0.c1 FROM vt1, v0, vt0 GROUP BY vt1.c0, vt0.c0, vt0.c1;
SELECT vt1.c0, vt0.c0, vt0.c1 FROM vt1, v0, vt0 GROUP BY vt1.c0, vt0.c0, vt0.c1 HAVING (COUNT(MIN(TOTAL(GROUP_CONCAT(v0.c0)))) IN ()) UNION ALL SELECT vt1.c0, vt0.c0, vt0.c1 FROM vt1, v0, vt0 GROUP BY vt1.c0, vt0.c0, vt0.c1 HAVING (NOT ((COUNT(MIN(TOTAL(GROUP_CONCAT(v0.c0)))) IN ()))) UNION ALL SELECT vt1.c0, vt0.c0, vt0.c1 FROM vt1, v0, vt0 GROUP BY vt1.c0, vt0.c0, vt0.c1 HAVING (((COUNT(MIN(TOTAL(GROUP_CONCAT(v0.c0)))) IN ())) ISNULL);
SELECT vt1.c0, vt0.c0, vt0.c1 FROM vt1, v0, vt0 GROUP BY vt1.c0, vt0.c0, vt0.c1;
SELECT ALL v0.c0 FROM v0;
SELECT ALL v0.c0 FROM v0 WHERE (((((((v0.c0)AND(v0.c0)))OR(v0.c0))) BETWEEN (((v0.c0)<(v0.c0))) AND (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))) UNION ALL SELECT v0.c0 FROM v0 WHERE ((NOT (((((((v0.c0)AND(v0.c0)))OR(v0.c0))) BETWEEN (((v0.c0)<(v0.c0))) AND (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE (((((((((v0.c0)AND(v0.c0)))OR(v0.c0))) BETWEEN (((v0.c0)<(v0.c0))) AND (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))) ISNULL));
SELECT ALL v0.c0 FROM v0;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE (PRINTF(TIME(vt1.c0, vt1.c0, vt1.c0))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT (PRINTF(TIME(vt1.c0, vt1.c0, vt1.c0))))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((PRINTF(TIME(vt1.c0, vt1.c0, vt1.c0))) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT vt1.c1, vt1.c0, v0.c0 FROM vt1, v0 GROUP BY vt1.c1, vt1.c0, v0.c0;
SELECT vt1.c1, vt1.c0, v0.c0 FROM vt1, v0 WHERE (CASE ((((vt1.c1)AND(vt1.c0)))OR(''))  WHEN ((v0.c0) NOT BETWEEN (v0.c0) AND ('336235982')) THEN ((0.7892143620450969)||(vt1.c0)) ELSE (((vt1.c1, vt1.c1, v0.c0))<((vt1.c1, v0.c0, vt1.c1))) END) GROUP BY vt1.c1, vt1.c0, v0.c0 UNION SELECT ALL vt1.c1, vt1.c0, v0.c0 FROM vt1, v0 WHERE ((NOT (CASE ((((vt1.c1)AND(vt1.c0)))OR(''))  WHEN ((v0.c0) NOT BETWEEN (v0.c0) AND ('336235982')) THEN ((0.7892143620450969)||(vt1.c0)) ELSE (((vt1.c1, vt1.c1, v0.c0))<((vt1.c1, v0.c0, vt1.c1))) END))) GROUP BY vt1.c1, vt1.c0, v0.c0 UNION SELECT vt1.c1, vt1.c0, v0.c0 FROM vt1, v0 WHERE (((CASE ((((vt1.c1)AND(vt1.c0)))OR(''))  WHEN ((v0.c0) NOT BETWEEN (v0.c0) AND ('336235982')) THEN ((0.7892143620450969)||(vt1.c0)) ELSE (((vt1.c1, vt1.c1, v0.c0))<((vt1.c1, v0.c0, vt1.c1))) END) ISNULL)) GROUP BY vt1.c1, vt1.c0, v0.c0;
SELECT vt1.c1, vt1.c0, v0.c0 FROM vt1, v0 GROUP BY vt1.c1, vt1.c0, v0.c0;
SELECT ALL vt0.c1, v0.c0 FROM v0 FULL OUTER JOIN vt0 ON ((((((vt0.c0)AND(vt0.c1)))AND(v0.c0))) IS FALSE) GROUP BY vt0.c1, v0.c0;
SELECT ALL vt0.c1, v0.c0 FROM v0 FULL OUTER JOIN vt0 ON ((((((vt0.c0)AND(vt0.c1)))AND(v0.c0))) IS FALSE) GROUP BY vt0.c1, v0.c0 HAVING AVG(((v0.c0)%(GROUP_CONCAT(v0.c0)))) UNION ALL SELECT ALL vt0.c1, v0.c0 FROM v0 FULL OUTER JOIN vt0 ON ((((((vt0.c0)AND(vt0.c1)))AND(v0.c0))) IS FALSE) GROUP BY vt0.c1, v0.c0 HAVING (NOT (AVG(((v0.c0)%(GROUP_CONCAT(v0.c0)))))) UNION ALL SELECT ALL vt0.c1, v0.c0 FROM v0 FULL OUTER JOIN vt0 ON ((((((vt0.c0)AND(vt0.c1)))AND(v0.c0))) IS FALSE) GROUP BY vt0.c1, v0.c0 HAVING ((AVG(((v0.c0)%(GROUP_CONCAT(v0.c0))))) ISNULL);
SELECT ALL * FROM vt0;
SELECT ALL * FROM vt0 WHERE (x'') UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (x''))) UNION ALL SELECT ALL * FROM vt0 WHERE (((x'') ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE ((((vt1.c1 IN ())) NOT BETWEEN ((NOT (vt1.c1))) AND (vt1.c1))) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT ((((vt1.c1 IN ())) NOT BETWEEN ((NOT (vt1.c1))) AND (vt1.c1))))) UNION SELECT DISTINCT * FROM vt1 WHERE ((((((vt1.c1 IN ())) NOT BETWEEN ((NOT (vt1.c1))) AND (vt1.c1))) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0;
SELECT ALL vt1.c1, vt1.c0 FROM vt1 WHERE (CASE ((vt1.c1)<>(NULL))  WHEN ((vt1.c1) BETWEEN (vt1.c1) AND (vt1.c0)) THEN CAST(vt1.c0 AS NUMERIC) END) GROUP BY vt1.c1, vt1.c0 UNION SELECT vt1.c1, vt1.c0 FROM vt1 WHERE ((NOT (CASE ((vt1.c1)!=(NULL))  WHEN ((vt1.c1) BETWEEN (vt1.c1) AND (vt1.c0)) THEN CAST(vt1.c0 AS NUMERIC) END))) GROUP BY vt1.c1, vt1.c0 UNION SELECT ALL vt1.c1, vt1.c0 FROM vt1 WHERE (((CASE ((vt1.c1)<>(NULL))  WHEN ((vt1.c1) BETWEEN (vt1.c1) AND (vt1.c0)) THEN CAST(vt1.c0 AS NUMERIC) END) ISNULL)) GROUP BY vt1.c1, vt1.c0;
SELECT vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING COUNT((v0.c0 IN (2.88280756E8))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (COUNT((v0.c0 IN (2.88280756E8))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((COUNT((v0.c0 IN (2.88280756E8)))) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING COUNT((v0.c0 IN (2.88280756E8))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (COUNT((v0.c0 IN (2.88280756E8))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((COUNT((v0.c0 IN (2.88280756E8)))) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL vt1.c0, vt1.c1 FROM vt1;
SELECT vt1.c0, vt1.c1 FROM vt1 WHERE (CAST(x'de08' AS NUMERIC)) UNION ALL SELECT ALL vt1.c0, vt1.c1 FROM vt1 WHERE ((NOT (CAST(x'de08' AS NUMERIC)))) UNION ALL SELECT vt1.c0, vt1.c1 FROM vt1 WHERE (((CAST(x'de08' AS NUMERIC)) ISNULL));
SELECT ALL vt1.c0, vt1.c1 FROM vt1;
SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0, v0;
SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0, v0 WHERE ((~ (STRFTIME(v0.c0, vt0.c1, v0.c0)))) UNION SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0, v0 WHERE ((NOT ((~ (STRFTIME(v0.c0, vt0.c1, v0.c0)))))) UNION SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0, v0 WHERE ((((~ (STRFTIME(v0.c0, vt0.c1, v0.c0)))) ISNULL));
SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0, v0;
SELECT vt1.c0, vt0.c1, vt0.c0, v0.c0, vt1.c1 FROM vt0, v0, vt1 GROUP BY vt1.c0, vt0.c1, vt0.c0, v0.c0, vt1.c1;
SELECT vt1.c0, vt0.c1, vt0.c0, v0.c0, vt1.c1 FROM vt0, v0, vt1 WHERE ((((vt1.c1)) NOT BETWEEN (((vt0.c0 IN (vt1.c1, vt0.c1)))) AND ((CAST(vt1.c1 AS INTEGER))))) GROUP BY vt1.c0, vt0.c1, vt0.c0, v0.c0, vt1.c1 UNION SELECT vt1.c0, vt0.c1, vt0.c0, v0.c0, vt1.c1 FROM vt0, v0, vt1 WHERE ((NOT ((((vt1.c1)) NOT BETWEEN (((vt0.c0 IN (vt1.c1, vt0.c1)))) AND ((CAST(vt1.c1 AS INTEGER))))))) GROUP BY vt1.c0, vt0.c1, vt0.c0, v0.c0, vt1.c1 UNION SELECT vt1.c0, vt0.c1, vt0.c0, v0.c0, vt1.c1 FROM vt0, v0, vt1 WHERE ((((((vt1.c1)) NOT BETWEEN (((vt0.c0 IN (vt1.c1, vt0.c1)))) AND ((CAST(vt1.c1 AS INTEGER))))) ISNULL)) GROUP BY vt1.c0, vt0.c1, vt0.c0, v0.c0, vt1.c1;
SELECT vt1.c0, vt0.c1, vt0.c0, v0.c0, vt1.c1 FROM vt0, v0, vt1 GROUP BY vt1.c0, vt0.c1, vt0.c0, v0.c0, vt1.c1;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING MIN((- (v0.c0))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (MIN((- (v0.c0))))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((MIN((- (v0.c0)))) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING MIN((- (v0.c0))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (MIN((- (v0.c0))))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((MIN((- (v0.c0)))) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0;
SELECT ALL v0.c0 FROM v0 WHERE (json_insert((((v0.c0))<=((v0.c0))), (+ (v0.c0)), ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE ((NOT (json_insert((((v0.c0))<=((v0.c0))), (+ (v0.c0)), ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE (((json_insert((((v0.c0))<=((v0.c0))), (+ (v0.c0)), ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))) ISNULL));
SELECT ALL v0.c0 FROM v0;
SELECT DISTINCT vt1.c1, vt0.c1, vt1.c0 FROM vt1, vt0, v0;
SELECT DISTINCT vt1.c1, vt0.c1, vt1.c0 FROM vt1, vt0, v0 WHERE (CAST((((vt1.c0))<=((vt0.c1))) AS BLOB)) UNION SELECT DISTINCT vt1.c1, vt0.c1, vt1.c0 FROM vt1, vt0, v0 WHERE ((NOT (CAST((((vt1.c0))<=((vt0.c1))) AS BLOB)))) UNION SELECT DISTINCT vt1.c1, vt0.c1, vt1.c0 FROM vt1, vt0, v0 WHERE (((CAST((((vt1.c0))<=((vt0.c1))) AS BLOB)) ISNULL));
SELECT DISTINCT vt1.c1, vt0.c1, vt1.c0 FROM vt1, vt0, v0;
SELECT ALL vt1.c1 FROM vt1 GROUP BY vt1.c1;
SELECT ALL vt1.c1 FROM vt1 WHERE ((((UPPER(DISTINCT vt1.c1), CAST(vt1.c1 AS TEXT), (+ (x'')), ((((((((vt1.c1)AND(vt1.c1)))AND(0.29408829738769426)))OR(vt1.c0)))OR('1e500')), CAST(vt1.c1 AS BLOB)))>(('-938865202', ((vt1.c1)IS NOT(vt1.c0)), ((vt1.c1) ISNULL), vt1.c1, ((vt1.c0)IS NOT(vt1.c1)))))) GROUP BY vt1.c1 UNION SELECT vt1.c1 FROM vt1 WHERE ((NOT ((((UPPER(DISTINCT vt1.c1), CAST(vt1.c1 AS TEXT), (+ (x'')), ((((((((vt1.c1)AND(vt1.c1)))AND(0.29408829738769426)))OR(vt1.c0)))OR('1e500')), CAST(vt1.c1 AS BLOB)))>(('-938865202', ((vt1.c1)IS NOT(vt1.c0)), ((vt1.c1) ISNULL), vt1.c1, ((vt1.c0)IS NOT(vt1.c1)))))))) GROUP BY vt1.c1 UNION SELECT vt1.c1 FROM vt1 WHERE ((((((UPPER(DISTINCT vt1.c1), CAST(vt1.c1 AS TEXT), (+ (x'')), ((((((((vt1.c1)AND(vt1.c1)))AND(0.29408829738769426)))OR(vt1.c0)))OR('1e500')), CAST(vt1.c1 AS BLOB)))>(('-938865202', ((vt1.c1)IS NOT(vt1.c0)), ((vt1.c1) ISNULL), vt1.c1, ((vt1.c0)IS NOT(vt1.c1)))))) ISNULL)) GROUP BY vt1.c1;
SELECT ALL vt1.c1 FROM vt1 GROUP BY vt1.c1;
SELECT ALL vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0;
SELECT vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0 HAVING SUM(COUNT(GROUP_CONCAT(TOTAL(MAX(x'b8da'))))) UNION ALL SELECT ALL vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0 HAVING (NOT (SUM(COUNT(GROUP_CONCAT(TOTAL(MAX(x'b8da'))))))) UNION ALL SELECT vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0 HAVING ((SUM(COUNT(GROUP_CONCAT(TOTAL(MAX(x'b8da')))))) ISNULL);
SELECT * FROM v0;
SELECT ALL * FROM v0 WHERE (json_object(v0.c0, ((x'4526') NOT NULL))) UNION ALL SELECT * FROM v0 WHERE ((NOT (json_object(v0.c0, ((x'4526') NOT NULL))))) UNION ALL SELECT * FROM v0 WHERE (((json_object(v0.c0, ((x'4526') NOT NULL))) ISNULL));
SELECT * FROM v0;
SELECT DISTINCT * FROM vt0, vt1, v0;
SELECT DISTINCT * FROM vt0, vt1, v0 WHERE (x'4e7e') UNION SELECT DISTINCT * FROM vt0, vt1, v0 WHERE ((NOT (x'4e7e'))) UNION SELECT DISTINCT * FROM vt0, vt1, v0 WHERE (((x'4e7e') ISNULL));
SELECT DISTINCT * FROM vt0, vt1, v0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE ((((~ (vt1.c0))) BETWEEN (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END) AND (((vt1.c1)*(vt1.c0))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT ((((~ (vt1.c0))) BETWEEN (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END) AND (((vt1.c1)*(vt1.c0))))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((((((~ (vt1.c0))) BETWEEN (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END) AND (((vt1.c1)*(vt1.c0))))) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt0.c0, vt0.c1, v0.c0 FROM v0 NATURAL JOIN vt0 GROUP BY vt0.c0, vt0.c1, v0.c0;
SELECT vt0.c0, vt0.c1, v0.c0 FROM v0 NATURAL JOIN vt0 GROUP BY vt0.c0, vt0.c1, v0.c0 HAVING CASE ((SUM(COUNT(TOTAL(COUNT(*))))) BETWEEN (x'') AND (vt0.c1))  WHEN vt0.c1 COLLATE RTRIM THEN (+ (COUNT(*))) END UNION ALL SELECT vt0.c0, vt0.c1, v0.c0 FROM v0 NATURAL JOIN vt0 GROUP BY vt0.c0, vt0.c1, v0.c0 HAVING (NOT (CASE ((SUM(COUNT(TOTAL(COUNT(*))))) BETWEEN (x'') AND (vt0.c1))  WHEN vt0.c1 COLLATE RTRIM THEN (+ (COUNT(*))) END)) UNION ALL SELECT ALL vt0.c0, vt0.c1, v0.c0 FROM v0 NATURAL JOIN vt0 GROUP BY vt0.c0, vt0.c1, v0.c0 HAVING ((CASE ((SUM(COUNT(TOTAL(COUNT(*))))) BETWEEN (x'') AND (vt0.c1))  WHEN vt0.c1 COLLATE RTRIM THEN (+ (COUNT(*))) END) ISNULL);
SELECT TOTAL(NULL) FROM vt0 ORDER BY (NOT (vt0.c0)) COLLATE NOCASE DESC;
SELECT ALL * FROM vt0;
SELECT * FROM vt0 WHERE (((((vt0.c0)>(vt0.c0))) NOT BETWEEN (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 END) AND (((vt0.c0)<(vt0.c0))))) UNION ALL SELECT * FROM vt0 WHERE ((NOT (((((vt0.c0)>(vt0.c0))) NOT BETWEEN (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 END) AND (((vt0.c0)<(vt0.c0))))))) UNION ALL SELECT * FROM vt0 WHERE (((((((vt0.c0)>(vt0.c0))) NOT BETWEEN (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 END) AND (((vt0.c0)<(vt0.c0))))) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT * FROM vt0, vt1;
SELECT DISTINCT * FROM vt0, vt1 WHERE ((NOT (0X7d280b4c))) UNION SELECT DISTINCT * FROM vt0, vt1 WHERE ((NOT ((NOT (0x7d280b4c))))) UNION SELECT DISTINCT * FROM vt0, vt1 WHERE ((((NOT (0X7d280b4c))) ISNULL));
SELECT DISTINCT * FROM vt0, vt1;
SELECT ALL vt0.c1, vt1.c1, vt0.c0, vt1.c0 FROM vt0 CROSS JOIN vt1 ON ((vt1.c1) NOTNULL) GROUP BY vt0.c1, vt1.c1, vt0.c0, vt1.c0;
SELECT vt0.c1, vt1.c1, vt0.c0, vt1.c0 FROM vt0 CROSS JOIN vt1 ON ((vt1.c1) NOTNULL) WHERE (((((vt0.c1) NOT BETWEEN (vt1.c0) AND (vt0.c0))) NOT NULL)) GROUP BY vt0.c1, vt1.c1, vt0.c0, vt1.c0 UNION SELECT vt0.c1, vt1.c1, vt0.c0, vt1.c0 FROM vt0 CROSS JOIN vt1 ON ((vt1.c1) NOTNULL) WHERE ((NOT (((((vt0.c1) NOT BETWEEN (vt1.c0) AND (vt0.c0))) NOT NULL)))) GROUP BY vt0.c1, vt1.c1, vt0.c0, vt1.c0 UNION SELECT vt0.c1, vt1.c1, vt0.c0, vt1.c0 FROM vt0 CROSS JOIN vt1 ON ((vt1.c1) NOTNULL) WHERE (((((((vt0.c1) NOT BETWEEN (vt1.c0) AND (vt0.c0))) NOT NULL)) ISNULL)) GROUP BY vt0.c1, vt1.c1, vt0.c0, vt1.c0;
SELECT ALL vt0.c1, vt1.c1, vt0.c0, vt1.c0 FROM vt0 CROSS JOIN vt1 ON ((vt1.c1) NOTNULL) GROUP BY vt0.c1, vt1.c1, vt0.c0, vt1.c0;
SELECT vt1.c1, vt0.c1 FROM vt1, vt0 GROUP BY vt1.c1, vt0.c1;
SELECT ALL vt1.c1, vt0.c1 FROM vt1, vt0 GROUP BY vt1.c1, vt0.c1 HAVING ((SUM(vt1.c0))!=(MIN(vt1.c1))) UNION ALL SELECT ALL vt1.c1, vt0.c1 FROM vt1, vt0 GROUP BY vt1.c1, vt0.c1 HAVING (NOT (((SUM(vt1.c0))!=(MIN(vt1.c1))))) UNION ALL SELECT vt1.c1, vt0.c1 FROM vt1, vt0 GROUP BY vt1.c1, vt0.c1 HAVING ((((SUM(vt1.c0))!=(MIN(vt1.c1)))) ISNULL);
SELECT vt1.c1, vt0.c1 FROM vt1, vt0 GROUP BY vt1.c1, vt0.c1;
SELECT ALL vt1.c1, vt0.c1 FROM vt1, vt0 GROUP BY vt1.c1, vt0.c1 HAVING ((SUM(vt1.c0))!=(MIN(vt1.c1))) UNION ALL SELECT ALL vt1.c1, vt0.c1 FROM vt1, vt0 GROUP BY vt1.c1, vt0.c1 HAVING (NOT (((SUM(vt1.c0))!=(MIN(vt1.c1))))) UNION ALL SELECT vt1.c1, vt0.c1 FROM vt1, vt0 GROUP BY vt1.c1, vt0.c1 HAVING ((((SUM(vt1.c0))!=(MIN(vt1.c1)))) ISNULL);
SELECT vt1.c1, vt0.c1 FROM vt1, vt0 GROUP BY vt1.c1, vt0.c1;
SELECT ALL * FROM vt0;
SELECT * FROM vt0 WHERE ((((((((((((vt0.c0))==((vt0.c0))))OR(CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))AND(((vt0.c1)LIKE(vt0.c1)))))OR(((vt0.c0)==(vt0.c1)))))AND((((vt0.c1))=((vt0.c1)))))) UNION ALL SELECT * FROM vt0 WHERE ((NOT ((((((((((((vt0.c0))==((vt0.c0))))OR(CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))AND(((vt0.c1)LIKE(vt0.c1)))))OR(((vt0.c0)==(vt0.c1)))))AND((((vt0.c1))==((vt0.c1)))))))) UNION ALL SELECT * FROM vt0 WHERE ((((((((((((((vt0.c0))==((vt0.c0))))OR(CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))AND(((vt0.c1)LIKE(vt0.c1)))))OR(((vt0.c0)=(vt0.c1)))))AND((((vt0.c1))==((vt0.c1)))))) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT vt0.c0, vt0.c1, v0.c0, vt1.c0, vt1.c1 FROM vt1, v0, vt0;
SELECT DISTINCT vt0.c0, vt0.c1, v0.c0, vt1.c0, vt1.c1 FROM vt1, v0, vt0 WHERE (((((CASE WHEN vt1.c0 THEN vt1.c1 END)AND(vt1.c1)))OR(vt0.c1))) UNION SELECT DISTINCT vt0.c0, vt0.c1, v0.c0, vt1.c0, vt1.c1 FROM vt1, v0, vt0 WHERE ((NOT (((((CASE WHEN vt1.c0 THEN vt1.c1 END)AND(vt1.c1)))OR(vt0.c1))))) UNION SELECT DISTINCT vt0.c0, vt0.c1, v0.c0, vt1.c0, vt1.c1 FROM vt1, v0, vt0 WHERE (((((((CASE WHEN vt1.c0 THEN vt1.c1 END)AND(vt1.c1)))OR(vt0.c1))) ISNULL));
SELECT DISTINCT vt0.c0, vt0.c1, v0.c0, vt1.c0, vt1.c1 FROM vt1, v0, vt0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE ((((v0.c0, v0.c0, v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)), ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)), ((((v0.c0)AND(v0.c0)))OR(v0.c0)), CAST(v0.c0 AS INTEGER), (v0.c0 IN (v0.c0)))) AND ((CAST(v0.c0 AS NUMERIC), CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END, v0.c0, ((v0.c0)IS NOT(v0.c0)), v0.c0)))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT ((((v0.c0, v0.c0, v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)), ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)), ((((v0.c0)AND(v0.c0)))OR(v0.c0)), CAST(v0.c0 AS INTEGER), (v0.c0 IN (v0.c0)))) AND ((CAST(v0.c0 AS NUMERIC), CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END, v0.c0, ((v0.c0)IS NOT(v0.c0)), v0.c0)))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((((((v0.c0, v0.c0, v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)), ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)), ((((v0.c0)AND(v0.c0)))OR(v0.c0)), CAST(v0.c0 AS INTEGER), (v0.c0 IN (v0.c0)))) AND ((CAST(v0.c0 AS NUMERIC), CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END, v0.c0, ((v0.c0)IS NOT(v0.c0)), v0.c0)))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING MIN((- (vt0.c0))) UNION ALL SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING (NOT (MIN((- (vt0.c0))))) UNION ALL SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING ((MIN((- (vt0.c0)))) ISNULL);
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING MIN((- (vt0.c0))) UNION ALL SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING (NOT (MIN((- (vt0.c0))))) UNION ALL SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING ((MIN((- (vt0.c0)))) ISNULL);
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT v0.c0 FROM v0;
SELECT v0.c0 FROM v0 WHERE (CASE ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))  WHEN ((v0.c0) IS TRUE) THEN ((v0.c0)>(v0.c0)) END) UNION ALL SELECT v0.c0 FROM v0 WHERE ((NOT (CASE ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))  WHEN ((v0.c0) IS TRUE) THEN ((v0.c0)>(v0.c0)) END))) UNION ALL SELECT v0.c0 FROM v0 WHERE (((CASE ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))  WHEN ((v0.c0) IS TRUE) THEN ((v0.c0)>(v0.c0)) END) ISNULL));
SELECT v0.c0 FROM v0;
SELECT DISTINCT * FROM vt1, vt0, v0;
SELECT DISTINCT * FROM vt1, vt0, v0 WHERE (((((vt0.c1)*(v0.c0))) NOT NULL)) UNION SELECT DISTINCT * FROM vt1, vt0, v0 WHERE ((NOT (((((vt0.c1)*(v0.c0))) NOT NULL)))) UNION SELECT DISTINCT * FROM vt1, vt0, v0 WHERE (((((((vt0.c1)*(v0.c0))) NOT NULL)) ISNULL));
SELECT DISTINCT * FROM vt1, vt0, v0;
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c0, vt0.c1 FROM vt0 WHERE (((vt0.c0) ISNULL)) GROUP BY vt0.c0, vt0.c1 UNION SELECT ALL vt0.c0, vt0.c1 FROM vt0 WHERE ((NOT (((vt0.c0) ISNULL)))) GROUP BY vt0.c0, vt0.c1 UNION SELECT ALL vt0.c0, vt0.c1 FROM vt0 WHERE (((((vt0.c0) ISNULL)) ISNULL)) GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c0 FROM vt0, vt1 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0, vt1 GROUP BY vt0.c0 HAVING MIN(AVG(MAX(COUNT(vt1.c0)))) UNION ALL SELECT ALL vt0.c0 FROM vt0, vt1 GROUP BY vt0.c0 HAVING (NOT (MIN(AVG(MAX(COUNT(vt1.c0)))))) UNION ALL SELECT ALL vt0.c0 FROM vt0, vt1 GROUP BY vt0.c0 HAVING ((MIN(AVG(MAX(COUNT(vt1.c0))))) ISNULL);
SELECT ALL SUM((((((v0.c0 IN ()))AND(((v0.c0)IS(v0.c0)))))OR(((v0.c0)<<(v0.c0))))) FROM v0 ORDER BY ((((((v0.c0)OR(v0.c0)))OR(v0.c0))) IS TRUE);
SELECT ALL * FROM v0, vt0;
SELECT * FROM v0, vt0 WHERE (CHAR(((0.5197217775434027)+(v0.c0)))) UNION ALL SELECT * FROM v0, vt0 WHERE ((NOT (CHAR(((0.5197217775434027)+(v0.c0)))))) UNION ALL SELECT * FROM v0, vt0 WHERE (((CHAR(((0.5197217775434027)+(v0.c0)))) ISNULL));
SELECT ALL * FROM v0, vt0;
SELECT DISTINCT vt0.c0, v0.c0 FROM vt0 CROSS JOIN v0 ON ((v0.c0 COLLATE NOCASE) IS TRUE);
SELECT DISTINCT vt0.c0, v0.c0 FROM vt0 CROSS JOIN v0 ON ((v0.c0 COLLATE NOCASE) IS TRUE) WHERE (CAST((+ (NULL)) AS BLOB)) UNION SELECT DISTINCT vt0.c0, v0.c0 FROM vt0 CROSS JOIN v0 ON ((v0.c0 COLLATE NOCASE) IS TRUE) WHERE ((NOT (CAST((+ (NULL)) AS BLOB)))) UNION SELECT DISTINCT vt0.c0, v0.c0 FROM vt0 CROSS JOIN v0 ON ((v0.c0 COLLATE NOCASE) IS TRUE) WHERE (((CAST((+ (NULL)) AS BLOB)) ISNULL));
SELECT DISTINCT vt0.c0, v0.c0 FROM vt0 CROSS JOIN v0 ON ((v0.c0 COLLATE NOCASE) IS TRUE);
SELECT ALL vt0.c1, vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c1, vt0.c0, v0.c0;
SELECT vt0.c1, vt0.c0, v0.c0 FROM vt0, v0 WHERE (CAST(CASE WHEN vt0.c1 THEN vt0.c0 ELSE v0.c0 END AS REAL)) GROUP BY vt0.c1, vt0.c0, v0.c0 UNION SELECT vt0.c1, vt0.c0, v0.c0 FROM vt0, v0 WHERE ((NOT (CAST(CASE WHEN vt0.c1 THEN vt0.c0 ELSE v0.c0 END AS REAL)))) GROUP BY vt0.c1, vt0.c0, v0.c0 UNION SELECT ALL vt0.c1, vt0.c0, v0.c0 FROM vt0, v0 WHERE (((CAST(CASE WHEN vt0.c1 THEN vt0.c0 ELSE v0.c0 END AS REAL)) ISNULL)) GROUP BY vt0.c1, vt0.c0, v0.c0;
SELECT ALL vt0.c1, vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c1, vt0.c0, v0.c0;
SELECT ALL vt0.c0, vt0.c1 FROM v0, vt0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM v0, vt0 GROUP BY vt0.c0, vt0.c1 HAVING COUNT(CAST(v0.c0 AS REAL)) UNION ALL SELECT vt0.c0, vt0.c1 FROM v0, vt0 GROUP BY vt0.c0, vt0.c1 HAVING (NOT (COUNT(CAST(v0.c0 AS REAL)))) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM v0, vt0 GROUP BY vt0.c0, vt0.c1 HAVING ((COUNT(CAST(v0.c0 AS REAL))) ISNULL);
SELECT ALL vt0.c0, vt0.c1 FROM v0, vt0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM v0, vt0 GROUP BY vt0.c0, vt0.c1 HAVING COUNT(CAST(v0.c0 AS REAL)) UNION ALL SELECT vt0.c0, vt0.c1 FROM v0, vt0 GROUP BY vt0.c0, vt0.c1 HAVING (NOT (COUNT(CAST(v0.c0 AS REAL)))) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM v0, vt0 GROUP BY vt0.c0, vt0.c1 HAVING ((COUNT(CAST(v0.c0 AS REAL))) ISNULL);
SELECT ALL vt0.c0, vt0.c1 FROM v0, vt0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c1 FROM vt0;
SELECT vt0.c1 FROM vt0 WHERE (SQLITE_COMPILEOPTION_GET((((vt0.c1, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c1, vt0.c0)) AND ((vt0.c1, vt0.c0, vt0.c0))))) UNION ALL SELECT vt0.c1 FROM vt0 WHERE ((NOT (SQLITE_COMPILEOPTION_GET((((vt0.c1, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c1, vt0.c0)) AND ((vt0.c1, vt0.c0, vt0.c0))))))) UNION ALL SELECT ALL vt0.c1 FROM vt0 WHERE (((SQLITE_COMPILEOPTION_GET((((vt0.c1, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c1, vt0.c0)) AND ((vt0.c1, vt0.c0, vt0.c0))))) ISNULL));
SELECT ALL vt0.c1 FROM vt0;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((((('-136147605')OR(NULL)))AND('494076179'))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT ((((('-136147605')OR(NULL)))AND('494076179'))))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((((((('-136147605')OR(NULL)))AND('494076179'))) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT vt1.c0, vt0.c0, vt1.c1, v0.c0 FROM v0, vt0, vt1 GROUP BY vt1.c0, vt0.c0, vt1.c1, v0.c0;
SELECT vt1.c0, vt0.c0, vt1.c1, v0.c0 FROM v0, vt0, vt1 WHERE ('sb\&]1)!') GROUP BY vt1.c0, vt0.c0, vt1.c1, v0.c0 UNION SELECT vt1.c0, vt0.c0, vt1.c1, v0.c0 FROM v0, vt0, vt1 WHERE ((NOT ('sb\&]1)!'))) GROUP BY vt1.c0, vt0.c0, vt1.c1, v0.c0 UNION SELECT ALL vt1.c0, vt0.c0, vt1.c1, v0.c0 FROM v0, vt0, vt1 WHERE ((('sb\&]1)!') ISNULL)) GROUP BY vt1.c0, vt0.c0, vt1.c1, v0.c0;
SELECT vt1.c0, vt0.c0, vt1.c1, v0.c0 FROM v0, vt0, vt1 GROUP BY vt1.c0, vt0.c0, vt1.c1, v0.c0;
SELECT ALL vt1.c0 FROM vt0, v0 INNER JOIN vt1 ON (((((vt0.c1 IN ()))AND(((((((((vt0.c1)AND(vt1.c0)))AND(v0.c0)))AND(vt1.c0)))AND(v0.c0)))))OR(CAST(v0.c0 AS INTEGER))) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt0, v0 INNER JOIN vt1 ON (((((vt0.c1 IN ()))AND(((((((((vt0.c1)AND(vt1.c0)))AND(v0.c0)))AND(vt1.c0)))AND(v0.c0)))))OR(CAST(v0.c0 AS INTEGER))) GROUP BY vt1.c0 HAVING ((((vt1.c0) ISNULL)) NOT BETWEEN (MAX(MAX(MIN(GROUP_CONCAT(COUNT(*)))))) AND ((((COUNT(vt0.c0), AVG(vt1.c0), vt0.c1))>((COUNT(*), vt1.c1, vt0.c1))))) UNION ALL SELECT vt1.c0 FROM vt0, v0 INNER JOIN vt1 ON (((((vt0.c1 IN ()))AND(((((((((vt0.c1)AND(vt1.c0)))AND(v0.c0)))AND(vt1.c0)))AND(v0.c0)))))OR(CAST(v0.c0 AS INTEGER))) GROUP BY vt1.c0 HAVING (NOT (((((vt1.c0) ISNULL)) NOT BETWEEN (MAX(MAX(MIN(GROUP_CONCAT(COUNT(*)))))) AND ((((COUNT(vt0.c0), AVG(vt1.c0), vt0.c1))>((COUNT(*), vt1.c1, vt0.c1))))))) UNION ALL SELECT vt1.c0 FROM vt0, v0 INNER JOIN vt1 ON (((((vt0.c1 IN ()))AND(((((((((vt0.c1)AND(vt1.c0)))AND(v0.c0)))AND(vt1.c0)))AND(v0.c0)))))OR(CAST(v0.c0 AS INTEGER))) GROUP BY vt1.c0 HAVING ((((((vt1.c0) ISNULL)) NOT BETWEEN (MAX(MAX(MIN(GROUP_CONCAT(COUNT(*)))))) AND ((((COUNT(vt0.c0), AVG(vt1.c0), vt0.c1))>((COUNT(*), vt1.c1, vt0.c1)))))) ISNULL);
SELECT vt1.c1 FROM vt1;
SELECT vt1.c1 FROM vt1 WHERE (((vt1.c0) NOT BETWEEN (((vt1.c0)>(vt1.c1))) AND (CAST(vt1.c0 AS INTEGER)))) UNION ALL SELECT vt1.c1 FROM vt1 WHERE ((NOT (((vt1.c0) NOT BETWEEN (((vt1.c0)>(vt1.c1))) AND (CAST(vt1.c0 AS INTEGER)))))) UNION ALL SELECT vt1.c1 FROM vt1 WHERE (((((vt1.c0) NOT BETWEEN (((vt1.c0)>(vt1.c1))) AND (CAST(vt1.c0 AS INTEGER)))) ISNULL));
SELECT vt1.c1 FROM vt1;
SELECT DISTINCT vt0.c0, vt0.c1, vt1.c1 FROM vt0, vt1, v0;
SELECT DISTINCT vt0.c0, vt0.c1, vt1.c1 FROM vt0, vt1, v0 WHERE (vt1.c0) UNION SELECT DISTINCT vt0.c0, vt0.c1, vt1.c1 FROM vt0, vt1, v0 WHERE ((NOT (vt1.c0))) UNION SELECT DISTINCT vt0.c0, vt0.c1, vt1.c1 FROM vt0, vt1, v0 WHERE (((vt1.c0) ISNULL));
SELECT DISTINCT vt0.c0, vt0.c1, vt1.c1 FROM vt0, vt1, v0;
SELECT vt0.c1 FROM v0, vt0 LEFT OUTER JOIN vt1 ON CAST(((((((((vt1.c1)OR(v0.c0)))AND(vt1.c0)))OR(vt1.c1)))AND(vt1.c1)) AS TEXT) GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM v0, vt0 LEFT OUTER JOIN vt1 ON CAST(((((((((vt1.c1)OR(v0.c0)))AND(vt1.c0)))OR(vt1.c1)))AND(vt1.c1)) AS TEXT) WHERE (x'') GROUP BY vt0.c1 UNION SELECT vt0.c1 FROM v0, vt0 LEFT OUTER JOIN vt1 ON CAST(((((((((vt1.c1)OR(v0.c0)))AND(vt1.c0)))OR(vt1.c1)))AND(vt1.c1)) AS TEXT) WHERE ((NOT (x''))) GROUP BY vt0.c1 UNION SELECT vt0.c1 FROM v0, vt0 LEFT OUTER JOIN vt1 ON CAST(((((((((vt1.c1)OR(v0.c0)))AND(vt1.c0)))OR(vt1.c1)))AND(vt1.c1)) AS TEXT) WHERE (((x'') ISNULL)) GROUP BY vt0.c1;
SELECT vt0.c1 FROM v0, vt0 LEFT OUTER JOIN vt1 ON CAST(((((((((vt1.c1)OR(v0.c0)))AND(vt1.c0)))OR(vt1.c1)))AND(vt1.c1)) AS TEXT) GROUP BY vt0.c1;
SELECT ALL vt1.c0, v0.c0, vt0.c0 FROM v0, vt0, vt1 GROUP BY vt1.c0, v0.c0, vt0.c0;
SELECT ALL vt1.c0, v0.c0, vt0.c0 FROM v0, vt0, vt1 GROUP BY vt1.c0, v0.c0, vt0.c0 HAVING vt1.c0 UNION ALL SELECT vt1.c0, v0.c0, vt0.c0 FROM v0, vt0, vt1 GROUP BY vt1.c0, v0.c0, vt0.c0 HAVING (NOT (vt1.c0)) UNION ALL SELECT ALL vt1.c0, v0.c0, vt0.c0 FROM v0, vt0, vt1 GROUP BY vt1.c0, v0.c0, vt0.c0 HAVING ((vt1.c0) ISNULL);
SELECT ALL vt1.c0, v0.c0, vt0.c0 FROM v0, vt0, vt1 GROUP BY vt1.c0, v0.c0, vt0.c0;
SELECT ALL vt1.c0, v0.c0, vt0.c0 FROM v0, vt0, vt1 GROUP BY vt1.c0, v0.c0, vt0.c0 HAVING vt1.c0 UNION ALL SELECT vt1.c0, v0.c0, vt0.c0 FROM v0, vt0, vt1 GROUP BY vt1.c0, v0.c0, vt0.c0 HAVING (NOT (vt1.c0)) UNION ALL SELECT ALL vt1.c0, v0.c0, vt0.c0 FROM v0, vt0, vt1 GROUP BY vt1.c0, v0.c0, vt0.c0 HAVING ((vt1.c0) ISNULL);
SELECT ALL vt1.c0, v0.c0, vt0.c0 FROM v0, vt0, vt1 GROUP BY vt1.c0, v0.c0, vt0.c0;
SELECT v0.c0 FROM v0;
SELECT ALL v0.c0 FROM v0 WHERE ((((((((((v0.c0 IN ()))OR((+ (v0.c0)))))AND(CAST(NULL AS BLOB))))AND((((x''))<((v0.c0))))))OR(v0.c0))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE ((NOT ((((((((((v0.c0 IN ()))OR((+ (v0.c0)))))AND(CAST(NULL AS BLOB))))AND((((x''))<((v0.c0))))))OR(v0.c0))))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE ((((((((((((v0.c0 IN ()))OR((+ (v0.c0)))))AND(CAST(NULL AS BLOB))))AND((((x''))<((v0.c0))))))OR(v0.c0))) ISNULL));
SELECT v0.c0 FROM v0;
SELECT DISTINCT * FROM vt0, v0, vt1;
SELECT DISTINCT * FROM vt0, v0, vt1 WHERE ((CASE WHEN '1890038272' THEN vt0.c1 ELSE vt0.c1 END IN ())) UNION SELECT DISTINCT * FROM vt0, v0, vt1 WHERE ((NOT ((CASE WHEN '1890038272' THEN vt0.c1 ELSE vt0.c1 END IN ())))) UNION SELECT DISTINCT * FROM vt0, v0, vt1 WHERE ((((CASE WHEN '1890038272' THEN vt0.c1 ELSE vt0.c1 END IN ())) ISNULL));
SELECT DISTINCT * FROM vt0, v0, vt1;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0 WHERE (((((((vt0.c0)AND(vt0.c1)))AND(vt0.c0))) BETWEEN (((vt0.c1) BETWEEN (x'') AND (vt0.c0))) AND ((vt0.c1 IN (vt0.c1))))) GROUP BY vt0.c1, vt0.c0 UNION SELECT ALL vt0.c1, vt0.c0 FROM vt0 WHERE ((NOT (((((((vt0.c0)AND(vt0.c1)))AND(vt0.c0))) BETWEEN (((vt0.c1) BETWEEN (x'') AND (vt0.c0))) AND ((vt0.c1 IN (vt0.c1))))))) GROUP BY vt0.c1, vt0.c0 UNION SELECT ALL vt0.c1, vt0.c0 FROM vt0 WHERE (((((((((vt0.c0)AND(vt0.c1)))AND(vt0.c0))) BETWEEN (((vt0.c1) BETWEEN (x'') AND (vt0.c0))) AND ((vt0.c1 IN (vt0.c1))))) ISNULL)) GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c0, vt0.c1 FROM vt0, vt1 GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0, vt1 GROUP BY vt0.c0, vt0.c1 HAVING ((((0.8440228291873535)/(MIN(vt0.c0)))) IS FALSE) UNION ALL SELECT vt0.c0, vt0.c1 FROM vt0, vt1 GROUP BY vt0.c0, vt0.c1 HAVING (NOT (((((0.8440228291873535)/(MIN(vt0.c0)))) IS FALSE))) UNION ALL SELECT vt0.c0, vt0.c1 FROM vt0, vt1 GROUP BY vt0.c0, vt0.c1 HAVING ((((((0.8440228291873535)/(MIN(vt0.c0)))) IS FALSE)) ISNULL);
SELECT vt0.c0, vt0.c1 FROM vt0, vt1 GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0, vt1 GROUP BY vt0.c0, vt0.c1 HAVING ((((0.8440228291873535)/(MIN(vt0.c0)))) IS FALSE) UNION ALL SELECT vt0.c0, vt0.c1 FROM vt0, vt1 GROUP BY vt0.c0, vt0.c1 HAVING (NOT (((((0.8440228291873535)/(MIN(vt0.c0)))) IS FALSE))) UNION ALL SELECT vt0.c0, vt0.c1 FROM vt0, vt1 GROUP BY vt0.c0, vt0.c1 HAVING ((((((0.8440228291873535)/(MIN(vt0.c0)))) IS FALSE)) ISNULL);
SELECT vt0.c0, vt0.c1 FROM vt0, vt1 GROUP BY vt0.c0, vt0.c1;
SELECT vt1.c0, vt1.c1 FROM vt1;
SELECT vt1.c0, vt1.c1 FROM vt1 WHERE ('628797249') UNION ALL SELECT vt1.c0, vt1.c1 FROM vt1 WHERE ((NOT ('628797249'))) UNION ALL SELECT ALL vt1.c0, vt1.c1 FROM vt1 WHERE ((('628797249') ISNULL));
SELECT vt1.c0, vt1.c1 FROM vt1;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (0.9742100689213697) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (0.9742100689213697))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((0.9742100689213697) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT v0.c0, vt1.c0, vt0.c1 FROM vt0, v0, vt1 GROUP BY v0.c0, vt1.c0, vt0.c1;
SELECT v0.c0, vt1.c0, vt0.c1 FROM vt0, v0, vt1 WHERE (vt0.c1) GROUP BY v0.c0, vt1.c0, vt0.c1 UNION SELECT ALL v0.c0, vt1.c0, vt0.c1 FROM vt0, v0, vt1 WHERE ((NOT (vt0.c1))) GROUP BY v0.c0, vt1.c0, vt0.c1 UNION SELECT v0.c0, vt1.c0, vt0.c1 FROM vt0, v0, vt1 WHERE (((vt0.c1) ISNULL)) GROUP BY v0.c0, vt1.c0, vt0.c1;
SELECT v0.c0, vt1.c0, vt0.c1 FROM vt0, v0, vt1 GROUP BY v0.c0, vt1.c0, vt0.c1;
SELECT ALL vt1.c0, vt1.c1, v0.c0 FROM vt1, v0 GROUP BY vt1.c0, vt1.c1, v0.c0;
SELECT vt1.c0, vt1.c1, v0.c0 FROM vt1, v0 GROUP BY vt1.c0, vt1.c1, v0.c0 HAVING ((((((((((v0.c0)OR(COUNT(*))))OR(v0.c0)))OR(vt1.c1)))AND(AVG('345952124')))) NOT BETWEEN (SUM(vt1.c0)) AND (COUNT(*))) UNION ALL SELECT vt1.c0, vt1.c1, v0.c0 FROM vt1, v0 GROUP BY vt1.c0, vt1.c1, v0.c0 HAVING (NOT (((((((((((v0.c0)OR(COUNT(*))))OR(v0.c0)))OR(vt1.c1)))AND(AVG('345952124')))) NOT BETWEEN (SUM(vt1.c0)) AND (COUNT(*))))) UNION ALL SELECT ALL vt1.c0, vt1.c1, v0.c0 FROM vt1, v0 GROUP BY vt1.c0, vt1.c1, v0.c0 HAVING ((((((((((((v0.c0)OR(COUNT(*))))OR(v0.c0)))OR(vt1.c1)))AND(AVG('345952124')))) NOT BETWEEN (SUM(vt1.c0)) AND (COUNT(*)))) ISNULL);
SELECT ALL vt1.c0, vt1.c1, v0.c0 FROM vt1, v0 GROUP BY vt1.c0, vt1.c1, v0.c0;
SELECT vt1.c0, vt1.c1, v0.c0 FROM vt1, v0 GROUP BY vt1.c0, vt1.c1, v0.c0 HAVING ((((((((((v0.c0)OR(COUNT(*))))OR(v0.c0)))OR(vt1.c1)))AND(AVG('345952124')))) NOT BETWEEN (SUM(vt1.c0)) AND (COUNT(*))) UNION ALL SELECT vt1.c0, vt1.c1, v0.c0 FROM vt1, v0 GROUP BY vt1.c0, vt1.c1, v0.c0 HAVING (NOT (((((((((((v0.c0)OR(COUNT(*))))OR(v0.c0)))OR(vt1.c1)))AND(AVG('345952124')))) NOT BETWEEN (SUM(vt1.c0)) AND (COUNT(*))))) UNION ALL SELECT ALL vt1.c0, vt1.c1, v0.c0 FROM vt1, v0 GROUP BY vt1.c0, vt1.c1, v0.c0 HAVING ((((((((((((v0.c0)OR(COUNT(*))))OR(v0.c0)))OR(vt1.c1)))AND(AVG('345952124')))) NOT BETWEEN (SUM(vt1.c0)) AND (COUNT(*)))) ISNULL);
SELECT ALL vt1.c0, vt1.c1, v0.c0 FROM vt1, v0 GROUP BY vt1.c0, vt1.c1, v0.c0;
SELECT ALL * FROM vt1, vt0;
SELECT ALL * FROM vt1, vt0 WHERE (vt1.c0) UNION ALL SELECT * FROM vt1 NOT INDEXED, vt0 WHERE ((NOT (vt1.c0))) UNION ALL SELECT ALL * FROM vt1, vt0 WHERE (((vt1.c0) ISNULL));
SELECT ALL * FROM vt1, vt0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (((CASE v0.c0  WHEN v0.c0 THEN v0.c0 END) NOT BETWEEN (((v0.c0)AND(v0.c0))) AND ((~ (v0.c0))))) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (((CASE v0.c0  WHEN v0.c0 THEN v0.c0 END) NOT BETWEEN (((v0.c0)AND(v0.c0))) AND ((~ (v0.c0))))))) UNION SELECT DISTINCT * FROM v0 WHERE (((((CASE v0.c0  WHEN v0.c0 THEN v0.c0 END) NOT BETWEEN (((v0.c0)AND(v0.c0))) AND ((~ (v0.c0))))) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT vt0.c1, vt0.c0, v0.c0 FROM vt1, v0, vt0 GROUP BY vt0.c1, vt0.c0, v0.c0;
SELECT ALL vt0.c1, vt0.c0, v0.c0 FROM vt1, v0, vt0 WHERE ((((((vt0.c1) NOT BETWEEN (v0.c0) AND (vt1.c1))))<((((vt1.c0)*(vt0.c0)))))) GROUP BY vt0.c1, vt0.c0, v0.c0 UNION SELECT ALL vt0.c1, vt0.c0, v0.c0 FROM vt1, v0, vt0 WHERE ((NOT ((((((vt0.c1) NOT BETWEEN (v0.c0) AND (vt1.c1))))<((((vt1.c0)*(vt0.c0)))))))) GROUP BY vt0.c1, vt0.c0, v0.c0 UNION SELECT ALL vt0.c1, vt0.c0, v0.c0 FROM vt1, v0, vt0 WHERE ((((((((vt0.c1) NOT BETWEEN (v0.c0) AND (vt1.c1))))<((((vt1.c0)*(vt0.c0)))))) ISNULL)) GROUP BY vt0.c1, vt0.c0, v0.c0;
SELECT vt0.c1, vt0.c0, v0.c0 FROM vt1, v0, vt0 GROUP BY vt0.c1, vt0.c0, v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING AVG(((MIN(TOTAL(GROUP_CONCAT(v0.c0)))) IS TRUE)) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (AVG(((MIN(TOTAL(GROUP_CONCAT(v0.c0)))) IS TRUE)))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((AVG(((MIN(TOTAL(GROUP_CONCAT(v0.c0)))) IS TRUE))) ISNULL);
SELECT ALL * FROM vt1;
SELECT * FROM vt1 WHERE (CASE WHEN ((vt1.c1)<<(vt1.c0)) THEN ((vt1.c1)LIKE(vt1.c1)) END) UNION ALL SELECT * FROM vt1 WHERE ((NOT (CASE WHEN ((vt1.c1)<<(vt1.c0)) THEN ((vt1.c1)LIKE(vt1.c1)) END))) UNION ALL SELECT * FROM vt1 WHERE (((CASE WHEN ((vt1.c1)<<(vt1.c0)) THEN ((vt1.c1)LIKE(vt1.c1)) END) ISNULL));
SELECT ALL * FROM vt1;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE ('e&XáHH<W') UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT ('e&XáHH<W'))) UNION SELECT DISTINCT * FROM vt1 WHERE ((('e&XáHH<W') ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT ALL vt0.c1, vt0.c0, vt1.c0 FROM vt0, v0 LEFT OUTER JOIN vt1 ON CASE NULL  WHEN ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)) THEN (+ (x'')) WHEN (vt1.c1 IN ()) THEN ((v0.c0)-(vt1.c1)) WHEN ((vt1.c0)<<(vt1.c1)) THEN ((((vt0.c0)AND(vt1.c1)))OR(x'')) END GROUP BY vt0.c1, vt0.c0, vt1.c0;
SELECT ALL vt0.c1, vt0.c0, vt1.c0 FROM vt0, v0 LEFT OUTER JOIN vt1 ON CASE NULL  WHEN ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)) THEN (+ (x'')) WHEN (vt1.c1 IN ()) THEN ((v0.c0)-(vt1.c1)) WHEN ((vt1.c0)<<(vt1.c1)) THEN ((((vt0.c0)AND(vt1.c1)))OR(x'')) END WHERE (CASE WHEN (- (vt0.c1)) THEN (+ (vt1.c1)) ELSE (((vt1.c0)) NOT BETWEEN ((v0.c0)) AND ((0X1376cdcc))) END) GROUP BY vt0.c1, vt0.c0, vt1.c0 UNION SELECT ALL vt0.c1, vt0.c0, vt1.c0 FROM vt0, v0 LEFT OUTER JOIN vt1 ON CASE NULL  WHEN ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)) THEN (+ (x'')) WHEN (vt1.c1 IN ()) THEN ((v0.c0)-(vt1.c1)) WHEN ((vt1.c0)<<(vt1.c1)) THEN ((((vt0.c0)AND(vt1.c1)))OR(x'')) END WHERE ((NOT (CASE WHEN (- (vt0.c1)) THEN (+ (vt1.c1)) ELSE (((vt1.c0)) NOT BETWEEN ((v0.c0)) AND ((0x1376cdcc))) END))) GROUP BY vt0.c1, vt0.c0, vt1.c0 UNION SELECT ALL vt0.c1, vt0.c0, vt1.c0 FROM vt0, v0 LEFT OUTER JOIN vt1 ON CASE NULL  WHEN ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)) THEN (+ (x'')) WHEN (vt1.c1 IN ()) THEN ((v0.c0)-(vt1.c1)) WHEN ((vt1.c0)<<(vt1.c1)) THEN ((((vt0.c0)AND(vt1.c1)))OR(x'')) END WHERE (((CASE WHEN (- (vt0.c1)) THEN (+ (vt1.c1)) ELSE (((vt1.c0)) NOT BETWEEN ((v0.c0)) AND ((0X1376cdcc))) END) ISNULL)) GROUP BY vt0.c1, vt0.c0, vt1.c0;
SELECT ALL vt0.c1, vt0.c0, vt1.c0 FROM vt0, v0 LEFT OUTER JOIN vt1 ON CASE NULL  WHEN ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)) THEN (+ (x'')) WHEN (vt1.c1 IN ()) THEN ((v0.c0)-(vt1.c1)) WHEN ((vt1.c0)<<(vt1.c1)) THEN ((((vt0.c0)AND(vt1.c1)))OR(x'')) END GROUP BY vt0.c1, vt0.c0, vt1.c0;
SELECT vt0.c1, vt0.c0 FROM v0, vt1 RIGHT OUTER JOIN vt0 ON (CAST(vt0.c0 AS TEXT) IN (((vt1.c1) IS FALSE))) GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c1, vt0.c0 FROM v0, vt1 RIGHT OUTER JOIN vt0 ON (CAST(vt0.c0 AS TEXT) IN (((vt1.c1) IS FALSE))) GROUP BY vt0.c1, vt0.c0 HAVING MIN((+ (vt1.c0))) UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM v0, vt1 RIGHT OUTER JOIN vt0 ON (CAST(vt0.c0 AS TEXT) IN (((vt1.c1) IS FALSE))) GROUP BY vt0.c1, vt0.c0 HAVING (NOT (MIN((+ (vt1.c0))))) UNION ALL SELECT vt0.c1, vt0.c0 FROM v0, vt1 RIGHT OUTER JOIN vt0 ON (CAST(vt0.c0 AS TEXT) IN (((vt1.c1) IS FALSE))) GROUP BY vt0.c1, vt0.c0 HAVING ((MIN((+ (vt1.c0)))) ISNULL);
SELECT vt0.c1, vt0.c0 FROM v0, vt1 RIGHT OUTER JOIN vt0 ON (CAST(vt0.c0 AS TEXT) IN (((vt1.c1) IS FALSE))) GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c1, vt0.c0 FROM v0, vt1 RIGHT OUTER JOIN vt0 ON (CAST(vt0.c0 AS TEXT) IN (((vt1.c1) IS FALSE))) GROUP BY vt0.c1, vt0.c0 HAVING MIN((+ (vt1.c0))) UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM v0, vt1 RIGHT OUTER JOIN vt0 ON (CAST(vt0.c0 AS TEXT) IN (((vt1.c1) IS FALSE))) GROUP BY vt0.c1, vt0.c0 HAVING (NOT (MIN((+ (vt1.c0))))) UNION ALL SELECT vt0.c1, vt0.c0 FROM v0, vt1 RIGHT OUTER JOIN vt0 ON (CAST(vt0.c0 AS TEXT) IN (((vt1.c1) IS FALSE))) GROUP BY vt0.c1, vt0.c0 HAVING ((MIN((+ (vt1.c0)))) ISNULL);
SELECT vt0.c1, vt0.c0 FROM v0, vt1 RIGHT OUTER JOIN vt0 ON (CAST(vt0.c0 AS TEXT) IN (((vt1.c1) IS FALSE))) GROUP BY vt0.c1, vt0.c0;
SELECT * FROM vt0;
SELECT * FROM vt0 WHERE ((CASE vt0.c0  WHEN '' THEN vt0.c1 ELSE vt0.c1 END IN ())) UNION ALL SELECT * FROM vt0 WHERE ((NOT ((CASE vt0.c0  WHEN '' THEN vt0.c1 ELSE vt0.c1 END IN ())))) UNION ALL SELECT * FROM vt0 WHERE ((((CASE vt0.c0  WHEN '' THEN vt0.c1 ELSE vt0.c1 END IN ())) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (v0.c0) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (v0.c0))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((v0.c0) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT vt1.c1, v0.c0 FROM v0 INNER JOIN vt1 ON x'0a35' GROUP BY vt1.c1, v0.c0;
SELECT vt1.c1, v0.c0 FROM v0 INNER JOIN vt1 ON x'0a35' WHERE ((~ (vt1.c0)) COLLATE RTRIM) GROUP BY vt1.c1, v0.c0 UNION SELECT vt1.c1, v0.c0 FROM v0 INNER JOIN vt1 ON x'0a35' WHERE ((NOT ((~ (vt1.c0)) COLLATE RTRIM))) GROUP BY vt1.c1, v0.c0 UNION SELECT ALL vt1.c1, v0.c0 FROM v0 INNER JOIN vt1 ON x'0a35' WHERE ((((~ (vt1.c0)) COLLATE RTRIM) ISNULL)) GROUP BY vt1.c1, v0.c0;
SELECT vt1.c1, v0.c0 FROM v0 INNER JOIN vt1 ON x'0a35' GROUP BY vt1.c1, v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING MAX(((((COUNT(*))AND(v0.c0)))AND(SUM(v0.c0)))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (MAX(((((COUNT(*))AND(v0.c0)))AND(SUM(v0.c0)))))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((MAX(((((COUNT(*))AND(v0.c0)))AND(SUM(v0.c0))))) ISNULL);
SELECT ALL TOTAL(((((vt0.c1) BETWEEN (vt1.c0) AND (vt1.c1)))<<(ABS(DISTINCT vt0.c0)))) FROM vt1, vt0;
SELECT * FROM vt1, vt0;
SELECT * FROM vt1, vt0 WHERE (((((vt0.c1)LIKE(vt1.c0))) IS TRUE)) UNION ALL SELECT ALL * FROM vt1, vt0 WHERE ((NOT (((((vt0.c1)LIKE(vt1.c0))) IS TRUE)))) UNION ALL SELECT * FROM vt1, vt0 WHERE (((((((vt0.c1)LIKE(vt1.c0))) IS TRUE)) ISNULL));
SELECT * FROM vt1, vt0;
SELECT DISTINCT vt0.c0, vt1.c0, v0.c0, vt0.c1, vt1.c1 FROM v0 FULL OUTER JOIN vt0 ON LENGTH(v0.c0 COLLATE BINARY) FULL OUTER JOIN vt1 ON LIKELY(DISTINCT (((vt0.c1))==((v0.c0))));
SELECT DISTINCT vt0.c0, vt1.c0, v0.c0, vt0.c1, vt1.c1 FROM v0 FULL OUTER JOIN vt0 ON LENGTH(v0.c0 COLLATE BINARY) FULL OUTER JOIN vt1 ON LIKELY(DISTINCT (((vt0.c1))==((v0.c0)))) WHERE (vt1.c1) UNION SELECT DISTINCT vt0.c0, vt1.c0, v0.c0, vt0.c1, vt1.c1 FROM v0 FULL OUTER JOIN vt0 ON LENGTH(v0.c0 COLLATE BINARY) FULL OUTER JOIN vt1 ON LIKELY(DISTINCT (((vt0.c1))==((v0.c0)))) WHERE ((NOT (vt1.c1))) UNION SELECT DISTINCT vt0.c0, vt1.c0, v0.c0, vt0.c1, vt1.c1 FROM v0 FULL OUTER JOIN vt0 ON LENGTH(v0.c0 COLLATE BINARY) FULL OUTER JOIN vt1 ON LIKELY(DISTINCT (((vt0.c1))==((v0.c0)))) WHERE (((vt1.c1) ISNULL));
SELECT DISTINCT vt0.c0, vt1.c0, v0.c0, vt0.c1, vt1.c1 FROM v0 FULL OUTER JOIN vt0 ON LENGTH(v0.c0 COLLATE BINARY) FULL OUTER JOIN vt1 ON LIKELY(DISTINCT (((vt0.c1))==((v0.c0))));
SELECT ALL vt1.c0, vt0.c1 FROM vt0, vt1, v0 GROUP BY vt1.c0, vt0.c1;
SELECT vt1.c0, vt0.c1 FROM vt0, vt1, v0 WHERE (((v0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)) COLLATE NOCASE) GROUP BY vt1.c0, vt0.c1 UNION SELECT ALL vt1.c0, vt0.c1 FROM vt0, vt1, v0 WHERE ((NOT (((v0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)) COLLATE NOCASE))) GROUP BY vt1.c0, vt0.c1 UNION SELECT ALL vt1.c0, vt0.c1 FROM vt0, vt1, v0 WHERE (((((v0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)) COLLATE NOCASE) ISNULL)) GROUP BY vt1.c0, vt0.c1;
SELECT ALL vt1.c0, vt0.c1 FROM vt0, vt1, v0 GROUP BY vt1.c0, vt0.c1;
SELECT vt0.c1 FROM v0 LEFT OUTER JOIN vt0 ON ((((((vt0.c0)AND(vt1.c1)))OR(vt0.c0)))<=(NULL)) RIGHT OUTER JOIN vt1 ON IFNULL(v0.c0, CASE vt1.c1  WHEN x'' THEN vt0.c0 ELSE vt0.c1 END) GROUP BY vt0.c1;
SELECT ALL * FROM vt1, vt0 RIGHT OUTER JOIN v0 ON (('') IS FALSE) COLLATE NOCASE;
SELECT ALL * FROM vt1, vt0 RIGHT OUTER JOIN v0 ON (('') IS FALSE) COLLATE NOCASE WHERE (((((((vt0.c0)OR(vt1.c0)))OR(vt1.c1 COLLATE RTRIM)))OR(CAST(vt1.c0 AS TEXT)))) UNION ALL SELECT * FROM vt1, vt0 RIGHT OUTER JOIN v0 ON (('') IS FALSE) COLLATE NOCASE WHERE ((NOT (((((((vt0.c0)OR(vt1.c0)))OR(vt1.c1 COLLATE RTRIM)))OR(CAST(vt1.c0 AS TEXT)))))) UNION ALL SELECT ALL * FROM vt1, vt0 RIGHT OUTER JOIN v0 ON (('') IS FALSE) COLLATE NOCASE WHERE (((((((((vt0.c0)OR(vt1.c0)))OR(vt1.c1 COLLATE RTRIM)))OR(CAST(vt1.c0 AS TEXT)))) ISNULL));
SELECT ALL * FROM vt1, vt0 RIGHT OUTER JOIN v0 ON (('') IS FALSE) COLLATE NOCASE;
SELECT DISTINCT vt0.c1 FROM vt0;
SELECT DISTINCT vt0.c1 FROM vt0 WHERE (CAST(((vt0.c1) IS TRUE) AS NUMERIC)) UNION SELECT DISTINCT vt0.c1 FROM vt0 WHERE ((NOT (CAST(((vt0.c1) IS TRUE) AS NUMERIC)))) UNION SELECT DISTINCT vt0.c1 FROM vt0 WHERE (((CAST(((vt0.c1) IS TRUE) AS NUMERIC)) ISNULL));
SELECT DISTINCT vt0.c1 FROM vt0;
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0 WHERE (LIKELIHOOD(DISTINCT (((vt0.c0))>=((vt0.c0))), 0.7807252044822627)) GROUP BY vt0.c1 UNION SELECT ALL vt0.c1 FROM vt0 WHERE ((NOT (LIKELIHOOD(DISTINCT (((vt0.c0))>=((vt0.c0))), 0.7807252044822627)))) GROUP BY vt0.c1 UNION SELECT ALL vt0.c1 FROM vt0 WHERE (((LIKELIHOOD(DISTINCT (((vt0.c0))>=((vt0.c0))), 0.7807252044822627)) ISNULL)) GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING SUM((v0.c0 IN (TOTAL(v0.c0)))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (SUM((v0.c0 IN (TOTAL(v0.c0)))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((SUM((v0.c0 IN (TOTAL(v0.c0))))) ISNULL);
SELECT ALL v0.c0, vt1.c1, vt0.c0, vt1.c0, vt0.c1 FROM vt0, vt1, v0;
SELECT ALL v0.c0, vt1.c1, vt0.c0, vt1.c0, vt0.c1 FROM vt0, vt1, v0 WHERE (CASE ((v0.c0)+(vt1.c1))  WHEN CASE WHEN '7~	1}' THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN NULL ELSE ']Wã­©Oià·4Nr' END THEN ((vt1.c0)IS(vt0.c0)) WHEN UPPER(DISTINCT vt1.c0) THEN vt0.c0 WHEN CASE v0.c0  WHEN '246548676' THEN vt0.c1 ELSE vt0.c1 END THEN (((vt0.c0))<=((vt0.c0))) ELSE (0x149ecf7c IN ()) END) UNION ALL SELECT ALL v0.c0, vt1.c1, vt0.c0, vt1.c0, vt0.c1 FROM vt0, vt1, v0 WHERE ((NOT (CASE ((v0.c0)+(vt1.c1))  WHEN CASE WHEN '7~	1}' THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN NULL ELSE ']Wã­©Oià·4Nr' END THEN ((vt1.c0)IS(vt0.c0)) WHEN UPPER(DISTINCT vt1.c0) THEN vt0.c0 WHEN CASE v0.c0  WHEN '246548676' THEN vt0.c1 ELSE vt0.c1 END THEN (((vt0.c0))<=((vt0.c0))) ELSE (0X149ecf7c IN ()) END))) UNION ALL SELECT v0.c0, vt1.c1, vt0.c0, vt1.c0, vt0.c1 FROM vt0, vt1, v0 WHERE (((CASE ((v0.c0)+(vt1.c1))  WHEN CASE WHEN '7~	1}' THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN NULL ELSE ']Wã­©Oià·4Nr' END THEN ((vt1.c0)IS(vt0.c0)) WHEN UPPER(DISTINCT vt1.c0) THEN vt0.c0 WHEN CASE v0.c0  WHEN '246548676' THEN vt0.c1 ELSE vt0.c1 END THEN (((vt0.c0))<=((vt0.c0))) ELSE (0X149ecf7c IN ()) END) ISNULL));
SELECT ALL v0.c0, vt1.c1, vt0.c0, vt1.c0, vt0.c1 FROM vt0, vt1, v0;
SELECT DISTINCT * FROM vt0, vt1;
SELECT DISTINCT * FROM vt0, vt1 WHERE (((((vt0.c0 IN ())))=((((((vt1.c0)AND(vt0.c1)))AND(vt1.c1)))))) UNION SELECT DISTINCT * FROM vt0, vt1 WHERE ((NOT (((((vt0.c0 IN ())))=((((((vt1.c0)AND(vt0.c1)))AND(vt1.c1)))))))) UNION SELECT DISTINCT * FROM vt0, vt1 WHERE (((((((vt0.c0 IN ())))=((((((vt1.c0)AND(vt0.c1)))AND(vt1.c1)))))) ISNULL));
SELECT DISTINCT * FROM vt0, vt1;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (CASE WHEN ((v0.c0)||(v0.c0)) THEN LOWER(DISTINCT v0.c0) END) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT (CASE WHEN ((v0.c0)||(v0.c0)) THEN LOWER(DISTINCT v0.c0) END))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE (((CASE WHEN ((v0.c0)||(v0.c0)) THEN LOWER(DISTINCT v0.c0) END) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT vt1.c0, vt1.c1, vt0.c0, vt0.c1 FROM vt1, vt0 NATURAL JOIN v0 GROUP BY vt1.c0, vt1.c1, vt0.c0, vt0.c1;
SELECT vt1.c0, vt1.c1, vt0.c0, vt0.c1 FROM vt1, vt0 NATURAL JOIN v0 GROUP BY vt1.c0, vt1.c1, vt0.c0, vt0.c1 HAVING GROUP_CONCAT(TOTAL(vt1.c0)) COLLATE BINARY COLLATE BINARY UNION ALL SELECT vt1.c0, vt1.c1, vt0.c0, vt0.c1 FROM vt1, vt0 NATURAL JOIN v0 GROUP BY vt1.c0, vt1.c1, vt0.c0, vt0.c1 HAVING (NOT (GROUP_CONCAT(TOTAL(vt1.c0)) COLLATE BINARY COLLATE BINARY)) UNION ALL SELECT ALL vt1.c0, vt1.c1, vt0.c0, vt0.c1 FROM vt1, vt0 NATURAL JOIN v0 GROUP BY vt1.c0, vt1.c1, vt0.c0, vt0.c1 HAVING ((GROUP_CONCAT(TOTAL(vt1.c0)) COLLATE BINARY COLLATE BINARY) ISNULL);
SELECT ALL * FROM vt0, vt1, v0;
SELECT * FROM vt0, vt1, v0 WHERE (((((CASE WHEN vt0.c0 THEN -1745018732 ELSE vt1.c1 END)AND(((v0.c0) NOT BETWEEN (v0.c0) AND (vt0.c1)))))OR((((x'', vt0.c0, v0.c0))!=((v0.c0, vt1.c0, v0.c0)))))) UNION ALL SELECT * FROM vt0, vt1, v0 WHERE ((NOT (((((CASE WHEN vt0.c0 THEN -1745018732 ELSE vt1.c1 END)AND(((v0.c0) NOT BETWEEN (v0.c0) AND (vt0.c1)))))OR((((x'', vt0.c0, v0.c0))<>((v0.c0, vt1.c0, v0.c0)))))))) UNION ALL SELECT * FROM vt0, vt1, v0 WHERE (((((((CASE WHEN vt0.c0 THEN -1745018732 ELSE vt1.c1 END)AND(((v0.c0) NOT BETWEEN (v0.c0) AND (vt0.c1)))))OR((((x'', vt0.c0, v0.c0))<>((v0.c0, vt1.c0, v0.c0)))))) ISNULL));
SELECT ALL * FROM vt0, vt1, v0;
SELECT DISTINCT * FROM vt0, v0, vt1;
SELECT DISTINCT * FROM vt0, v0, vt1 WHERE (TRIM(DISTINCT ((vt0.c0)>(vt0.c1)), CAST(vt0.c1 AS INTEGER))) UNION SELECT DISTINCT * FROM vt0, v0, vt1 WHERE ((NOT (TRIM(DISTINCT ((vt0.c0)>(vt0.c1)), CAST(vt0.c1 AS INTEGER))))) UNION SELECT DISTINCT * FROM vt0, v0, vt1 WHERE (((TRIM(DISTINCT ((vt0.c0)>(vt0.c1)), CAST(vt0.c1 AS INTEGER))) ISNULL));
SELECT DISTINCT * FROM vt0, v0, vt1;
SELECT vt0.c1, vt1.c0, v0.c0 FROM v0 CROSS JOIN vt1 ON (('0M') BETWEEN (NULL) AND (v0.c0)) COLLATE RTRIM FULL OUTER JOIN vt0 ON ((((CASE WHEN v0.c0 THEN vt1.c1 END)OR(((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)))))AND((((vt0.c0))>((vt1.c0))))) GROUP BY vt0.c1, vt1.c0, v0.c0;
SELECT ALL vt0.c1, vt1.c0, v0.c0 FROM v0 CROSS JOIN vt1 ON (('0M') BETWEEN (NULL) AND (v0.c0)) COLLATE RTRIM FULL OUTER JOIN vt0 ON ((((CASE WHEN v0.c0 THEN vt1.c1 END)OR(((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)))))AND((((vt0.c0))>((vt1.c0))))) WHERE (CAST(((v0.c0) NOT NULL) AS NUMERIC)) GROUP BY vt0.c1, vt1.c0, v0.c0 UNION SELECT vt0.c1, vt1.c0, v0.c0 FROM v0 CROSS JOIN vt1 ON (('0M') BETWEEN (NULL) AND (v0.c0)) COLLATE RTRIM FULL OUTER JOIN vt0 ON ((((CASE WHEN v0.c0 THEN vt1.c1 END)OR(((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)))))AND((((vt0.c0))>((vt1.c0))))) WHERE ((NOT (CAST(((v0.c0) NOT NULL) AS NUMERIC)))) GROUP BY vt0.c1, vt1.c0, v0.c0 UNION SELECT vt0.c1, vt1.c0, v0.c0 FROM v0 CROSS JOIN vt1 ON (('0M') BETWEEN (NULL) AND (v0.c0)) COLLATE RTRIM FULL OUTER JOIN vt0 ON ((((CASE WHEN v0.c0 THEN vt1.c1 END)OR(((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)))))AND((((vt0.c0))>((vt1.c0))))) WHERE (((CAST(((v0.c0) NOT NULL) AS NUMERIC)) ISNULL)) GROUP BY vt0.c1, vt1.c0, v0.c0;
SELECT vt0.c1, vt1.c0, v0.c0 FROM v0 CROSS JOIN vt1 ON (('0M') BETWEEN (NULL) AND (v0.c0)) COLLATE RTRIM FULL OUTER JOIN vt0 ON ((((CASE WHEN v0.c0 THEN vt1.c1 END)OR(((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)))))AND((((vt0.c0))>((vt1.c0))))) GROUP BY vt0.c1, vt1.c0, v0.c0;
SELECT ALL vt0.c0, vt0.c1, vt1.c0, v0.c0 FROM v0, vt1, vt0 GROUP BY vt0.c0, vt0.c1, vt1.c0, v0.c0;
SELECT ALL vt0.c0, vt0.c1, vt1.c0, v0.c0 FROM v0, vt1, vt0 GROUP BY vt0.c0, vt0.c1, vt1.c0, v0.c0 HAVING GROUP_CONCAT(AVG(MAX(vt0.c1))) UNION ALL SELECT ALL vt0.c0, vt0.c1, vt1.c0, v0.c0 FROM v0, vt1, vt0 GROUP BY vt0.c0, vt0.c1, vt1.c0, v0.c0 HAVING (NOT (GROUP_CONCAT(AVG(MAX(vt0.c1))))) UNION ALL SELECT ALL vt0.c0, vt0.c1, vt1.c0, v0.c0 FROM v0, vt1, vt0 GROUP BY vt0.c0, vt0.c1, vt1.c0, v0.c0 HAVING ((GROUP_CONCAT(AVG(MAX(vt0.c1)))) ISNULL);
SELECT * FROM vt1 NOT INDEXED;
SELECT ALL * FROM vt1 WHERE ('nULZmC') UNION ALL SELECT ALL * FROM vt1 WHERE ((NOT ('nULZmC'))) UNION ALL SELECT ALL * FROM vt1 WHERE ((('nULZmC') ISNULL));
SELECT * FROM vt1 NOT INDEXED;
SELECT DISTINCT v0.c0, vt0.c0, vt0.c1 FROM vt1, vt0, v0;
SELECT DISTINCT v0.c0, vt0.c0, vt0.c1 FROM vt1, vt0, v0 WHERE (CAST(((vt1.c1) BETWEEN (vt1.c1) AND (v0.c0)) AS INTEGER)) UNION SELECT DISTINCT v0.c0, vt0.c0, vt0.c1 FROM vt1, vt0, v0 WHERE ((NOT (CAST(((vt1.c1) BETWEEN (vt1.c1) AND (v0.c0)) AS INTEGER)))) UNION SELECT DISTINCT v0.c0, vt0.c0, vt0.c1 FROM vt1, vt0, v0 WHERE (((CAST(((vt1.c1) BETWEEN (vt1.c1) AND (v0.c0)) AS INTEGER)) ISNULL));
SELECT DISTINCT v0.c0, vt0.c0, vt0.c1 FROM vt1, vt0, v0;
SELECT ALL vt1.c1 FROM vt1 GROUP BY vt1.c1;
SELECT vt1.c1 FROM vt1 WHERE (((((vt1.c0)GLOB(vt1.c0))) IS FALSE)) GROUP BY vt1.c1 UNION SELECT vt1.c1 FROM vt1 WHERE ((NOT (((((vt1.c0)GLOB(vt1.c0))) IS FALSE)))) GROUP BY vt1.c1 UNION SELECT ALL vt1.c1 FROM vt1 WHERE (((((((vt1.c0)GLOB(vt1.c0))) IS FALSE)) ISNULL)) GROUP BY vt1.c1;
SELECT ALL vt1.c1 FROM vt1 GROUP BY vt1.c1;
SELECT vt0.c0 FROM vt0 NATURAL JOIN v0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 NATURAL JOIN v0 GROUP BY vt0.c0 HAVING vt0.c1 UNION ALL SELECT ALL vt0.c0 FROM vt0 NATURAL JOIN v0 GROUP BY vt0.c0 HAVING (NOT (vt0.c1)) UNION ALL SELECT vt0.c0 FROM vt0 NATURAL JOIN v0 GROUP BY vt0.c0 HAVING ((vt0.c1) ISNULL);
SELECT vt0.c0 FROM vt0 NATURAL JOIN v0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 NATURAL JOIN v0 GROUP BY vt0.c0 HAVING vt0.c1 UNION ALL SELECT ALL vt0.c0 FROM vt0 NATURAL JOIN v0 GROUP BY vt0.c0 HAVING (NOT (vt0.c1)) UNION ALL SELECT vt0.c0 FROM vt0 NATURAL JOIN v0 GROUP BY vt0.c0 HAVING ((vt0.c1) ISNULL);
SELECT vt0.c0 FROM vt0 NATURAL JOIN v0 GROUP BY vt0.c0;
SELECT * FROM vt0, v0, vt1;
SELECT * FROM vt0, v0, vt1 WHERE (CASE WHEN NULL THEN ((vt0.c0)<>(vt0.c0)) END) UNION ALL SELECT * FROM vt0, v0, vt1 WHERE ((NOT (CASE WHEN NULL THEN ((vt0.c0)!=(vt0.c0)) END))) UNION ALL SELECT * FROM vt0, v0, vt1 WHERE (((CASE WHEN NULL THEN ((vt0.c0)<>(vt0.c0)) END) ISNULL));
SELECT * FROM vt0, v0, vt1;
SELECT DISTINCT vt1.c0, vt1.c1 FROM vt1, v0;
SELECT DISTINCT vt1.c0, vt1.c1 FROM vt1, v0 WHERE (((((((v0.c0)AND(vt1.c0)))AND(v0.c0))) NOT BETWEEN ((((vt1.c1))<>((vt1.c1)))) AND (LIKELY(DISTINCT vt1.c1)))) UNION SELECT DISTINCT vt1.c0, vt1.c1 FROM vt1, v0 WHERE ((NOT (((((((v0.c0)AND(vt1.c0)))AND(v0.c0))) NOT BETWEEN ((((vt1.c1))<>((vt1.c1)))) AND (LIKELY(DISTINCT vt1.c1)))))) UNION SELECT DISTINCT vt1.c0, vt1.c1 FROM vt1, v0 WHERE (((((((((v0.c0)AND(vt1.c0)))AND(v0.c0))) NOT BETWEEN ((((vt1.c1))<>((vt1.c1)))) AND (LIKELY(DISTINCT vt1.c1)))) ISNULL));
SELECT DISTINCT vt1.c0, vt1.c1 FROM vt1, v0;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0 WHERE (((CAST(vt0.c0 AS TEXT)) BETWEEN (vt0.c0) AND ((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((0xffffffff8efcef58)))))) GROUP BY vt0.c1 UNION SELECT vt0.c1 FROM vt0 WHERE ((NOT (((CAST(vt0.c0 AS TEXT)) BETWEEN (vt0.c0) AND ((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((0Xffffffff8efcef58)))))))) GROUP BY vt0.c1 UNION SELECT ALL vt0.c1 FROM vt0 WHERE (((((CAST(vt0.c0 AS TEXT)) BETWEEN (vt0.c0) AND ((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((0Xffffffff8efcef58)))))) ISNULL)) GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0;
SELECT v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0 HAVING ((((COUNT(MAX(v0.c0))) NOT BETWEEN (vt0.c0) AND (vt0.c0))) BETWEEN (((MIN(v0.c0)) NOT BETWEEN (MAX(COUNT(*))) AND (v0.c0))) AND ((NOT (TOTAL(TOTAL(vt0.c1)))))) UNION ALL SELECT v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0 HAVING (NOT (((((COUNT(MAX(v0.c0))) NOT BETWEEN (vt0.c0) AND (vt0.c0))) BETWEEN (((MIN(v0.c0)) NOT BETWEEN (MAX(COUNT(*))) AND (v0.c0))) AND ((NOT (TOTAL(TOTAL(vt0.c1)))))))) UNION ALL SELECT ALL v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0 HAVING ((((((COUNT(MAX(v0.c0))) NOT BETWEEN (vt0.c0) AND (vt0.c0))) BETWEEN (((MIN(v0.c0)) NOT BETWEEN (MAX(COUNT(*))) AND (v0.c0))) AND ((NOT (TOTAL(TOTAL(vt0.c1))))))) ISNULL);
SELECT MAX(UNLIKELY(((vt0.c0)/(x'')))) FROM v0, vt1, vt0 ORDER BY CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 WHEN 5.68707508E8 THEN vt1.c1 ELSE vt0.c0 END COLLATE BINARY ASC  NULLS LAST;
SELECT ALL * FROM v0 NOT INDEXED, vt1, vt0;
SELECT * FROM v0, vt1, vt0 WHERE (CAST(json_patch(vt0.c1, vt0.c1) AS NUMERIC)) UNION ALL SELECT * FROM v0, vt1, vt0 WHERE ((NOT (CAST(json_patch(vt0.c1, vt0.c1) AS NUMERIC)))) UNION ALL SELECT ALL * FROM v0, vt1, vt0 WHERE (((CAST(json_patch(vt0.c1, vt0.c1) AS NUMERIC)) ISNULL));
SELECT ALL * FROM v0 NOT INDEXED, vt1, vt0;
SELECT DISTINCT vt0.c0 FROM vt1, vt0, v0;
SELECT DISTINCT vt0.c0 FROM vt1, vt0, v0 WHERE (v0.c0 COLLATE NOCASE) UNION SELECT DISTINCT vt0.c0 FROM vt1, vt0, v0 WHERE ((NOT (v0.c0 COLLATE NOCASE))) UNION SELECT DISTINCT vt0.c0 FROM vt1, vt0, v0 WHERE (((v0.c0 COLLATE NOCASE) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt1, vt0, v0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (CAST(((v0.c0)GLOB(0.9971997650370331)) AS INTEGER)) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT (CAST(((v0.c0)GLOB(0.9971997650370331)) AS INTEGER)))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((CAST(((v0.c0)GLOB(0.9971997650370331)) AS INTEGER)) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0, vt0.c1 FROM v0 LEFT OUTER JOIN vt1 ON json_type(((v0.c0)%(v0.c0))) FULL OUTER JOIN vt0 ON ((((-2.12785685E9 COLLATE NOCASE)AND(vt0.c0 COLLATE BINARY)))OR(json_array(vt1.c0, vt0.c0))) GROUP BY v0.c0, vt0.c1;
SELECT v0.c0, vt0.c1 FROM v0 LEFT OUTER JOIN vt1 ON json_type(((v0.c0)%(v0.c0))) FULL OUTER JOIN vt0 ON ((((-2.12785685E9 COLLATE NOCASE)AND(vt0.c0 COLLATE BINARY)))OR(json_array(vt1.c0, vt0.c0))) GROUP BY v0.c0, vt0.c1 HAVING NULL UNION ALL SELECT v0.c0, vt0.c1 FROM v0 LEFT OUTER JOIN vt1 ON json_type(((v0.c0)%(v0.c0))) FULL OUTER JOIN vt0 ON ((((-2.12785685E9 COLLATE NOCASE)AND(vt0.c0 COLLATE BINARY)))OR(json_array(vt1.c0, vt0.c0))) GROUP BY v0.c0, vt0.c1 HAVING (NOT (NULL)) UNION ALL SELECT ALL v0.c0, vt0.c1 FROM v0 LEFT OUTER JOIN vt1 ON json_type(((v0.c0)%(v0.c0))) FULL OUTER JOIN vt0 ON ((((-2.12785685E9 COLLATE NOCASE)AND(vt0.c0 COLLATE BINARY)))OR(json_array(vt1.c0, vt0.c0))) GROUP BY v0.c0, vt0.c1 HAVING ((NULL) ISNULL);
SELECT v0.c0, vt0.c1 FROM v0 LEFT OUTER JOIN vt1 ON json_type(((v0.c0)%(v0.c0))) FULL OUTER JOIN vt0 ON ((((-2.12785685E9 COLLATE NOCASE)AND(vt0.c0 COLLATE BINARY)))OR(json_array(vt1.c0, vt0.c0))) GROUP BY v0.c0, vt0.c1;
SELECT v0.c0, vt0.c1 FROM v0 LEFT OUTER JOIN vt1 ON json_type(((v0.c0)%(v0.c0))) FULL OUTER JOIN vt0 ON ((((-2.12785685E9 COLLATE NOCASE)AND(vt0.c0 COLLATE BINARY)))OR(json_array(vt1.c0, vt0.c0))) GROUP BY v0.c0, vt0.c1 HAVING NULL UNION ALL SELECT v0.c0, vt0.c1 FROM v0 LEFT OUTER JOIN vt1 ON json_type(((v0.c0)%(v0.c0))) FULL OUTER JOIN vt0 ON ((((-2.12785685E9 COLLATE NOCASE)AND(vt0.c0 COLLATE BINARY)))OR(json_array(vt1.c0, vt0.c0))) GROUP BY v0.c0, vt0.c1 HAVING (NOT (NULL)) UNION ALL SELECT ALL v0.c0, vt0.c1 FROM v0 LEFT OUTER JOIN vt1 ON json_type(((v0.c0)%(v0.c0))) FULL OUTER JOIN vt0 ON ((((-2.12785685E9 COLLATE NOCASE)AND(vt0.c0 COLLATE BINARY)))OR(json_array(vt1.c0, vt0.c0))) GROUP BY v0.c0, vt0.c1 HAVING ((NULL) ISNULL);
SELECT v0.c0, vt0.c1 FROM v0 LEFT OUTER JOIN vt1 ON json_type(((v0.c0)%(v0.c0))) FULL OUTER JOIN vt0 ON ((((-2.12785685E9 COLLATE NOCASE)AND(vt0.c0 COLLATE BINARY)))OR(json_array(vt1.c0, vt0.c0))) GROUP BY v0.c0, vt0.c1;
SELECT ALL * FROM vt0;
SELECT ALL * FROM vt0 WHERE (((CAST(vt0.c1 AS TEXT)) ISNULL)) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (((CAST(vt0.c1 AS TEXT)) ISNULL)))) UNION ALL SELECT * FROM vt0 WHERE (((((CAST(vt0.c1 AS TEXT)) ISNULL)) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (TRIM(vt0.c0, (((vt0.c1))<>((vt0.c1))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (TRIM(vt0.c0, (((vt0.c1))<>((vt0.c1))))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((TRIM(vt0.c0, (((vt0.c1))!=((vt0.c1))))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT ALL v0.c0 FROM vt1, v0 GROUP BY v0.c0;
SELECT v0.c0 FROM vt1, v0 WHERE (((CAST(v0.c0 AS TEXT))<=(vt1.c1))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM vt1 NOT INDEXED, v0 WHERE ((NOT (((CAST(v0.c0 AS TEXT))<=(vt1.c1))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM vt1, v0 WHERE (((((CAST(v0.c0 AS TEXT))<=(vt1.c1))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM vt1, v0 GROUP BY v0.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING CASE COUNT(*)  WHEN MAX(NULL) THEN MAX(vt1.c0) WHEN TOTAL(TOTAL(vt1.c0)) THEN SUM(MAX(vt1.c0)) WHEN ((COUNT(*)) NOT BETWEEN (vt1.c1) AND (AVG(COUNT(COUNT(COUNT(*)))))) THEN (((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c1)) NOT BETWEEN ((SUM(vt1.c1), vt1.c0, SUM(vt1.c1), vt1.c1, AVG(MAX(vt1.c0)))) AND ((SUM(TOTAL(MIN(COUNT(vt1.c1)))), GROUP_CONCAT(vt1.c1), vt1.c0, vt1.c0, vt1.c0))) END UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (CASE COUNT(*)  WHEN MAX(NULL) THEN MAX(vt1.c0) WHEN TOTAL(TOTAL(vt1.c0)) THEN SUM(MAX(vt1.c0)) WHEN ((COUNT(*)) NOT BETWEEN (vt1.c1) AND (AVG(COUNT(COUNT(COUNT(*)))))) THEN (((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c1)) NOT BETWEEN ((SUM(vt1.c1), vt1.c0, SUM(vt1.c1), vt1.c1, AVG(MAX(vt1.c0)))) AND ((SUM(TOTAL(MIN(COUNT(vt1.c1)))), GROUP_CONCAT(vt1.c1), vt1.c0, vt1.c0, vt1.c0))) END)) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((CASE COUNT(*)  WHEN MAX(NULL) THEN MAX(vt1.c0) WHEN TOTAL(TOTAL(vt1.c0)) THEN SUM(MAX(vt1.c0)) WHEN ((COUNT(*)) NOT BETWEEN (vt1.c1) AND (AVG(COUNT(COUNT(COUNT(*)))))) THEN (((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c1)) NOT BETWEEN ((SUM(vt1.c1), vt1.c0, SUM(vt1.c1), vt1.c1, AVG(MAX(vt1.c0)))) AND ((SUM(TOTAL(MIN(COUNT(vt1.c1)))), GROUP_CONCAT(vt1.c1), vt1.c0, vt1.c0, vt1.c0))) END) ISNULL);
SELECT * FROM v0, vt0;
SELECT ALL * FROM v0, vt0 WHERE (NULL) UNION ALL SELECT ALL * FROM v0, vt0 WHERE ((NOT (NULL))) UNION ALL SELECT ALL * FROM v0, vt0 WHERE (((NULL) ISNULL));
SELECT * FROM v0, vt0;
SELECT DISTINCT vt0.c1 FROM vt0;
SELECT DISTINCT vt0.c1 FROM vt0 WHERE (((((vt0.c1) NOT NULL)) BETWEEN (CAST(vt0.c1 AS TEXT)) AND (vt0.c0 COLLATE RTRIM))) UNION SELECT DISTINCT vt0.c1 FROM vt0 WHERE ((NOT (((((vt0.c1) NOT NULL)) BETWEEN (CAST(vt0.c1 AS TEXT)) AND (vt0.c0 COLLATE RTRIM))))) UNION SELECT DISTINCT vt0.c1 FROM vt0 WHERE (((((((vt0.c1) NOT NULL)) BETWEEN (CAST(vt0.c1 AS TEXT)) AND (vt0.c0 COLLATE RTRIM))) ISNULL));
SELECT DISTINCT vt0.c1 FROM vt0;
SELECT v0.c0, vt0.c0, vt0.c1, vt1.c0 FROM v0, vt1, vt0 GROUP BY v0.c0, vt0.c0, vt0.c1, vt1.c0;
SELECT v0.c0, vt0.c0, vt0.c1, vt1.c0 FROM v0, vt1, vt0 WHERE (CASE WHEN ((vt1.c0)>(vt1.c1)) THEN ((vt1.c0)GLOB(v0.c0)) ELSE LIKELIHOOD(v0.c0, 0.2949444893562353) END) GROUP BY v0.c0, vt0.c0, vt0.c1, vt1.c0 UNION SELECT ALL v0.c0, vt0.c0, vt0.c1, vt1.c0 FROM v0, vt1, vt0 WHERE ((NOT (CASE WHEN ((vt1.c0)>(vt1.c1)) THEN ((vt1.c0)GLOB(v0.c0)) ELSE LIKELIHOOD(v0.c0, 0.2949444893562353) END))) GROUP BY v0.c0, vt0.c0, vt0.c1, vt1.c0 UNION SELECT v0.c0, vt0.c0, vt0.c1, vt1.c0 FROM v0, vt1, vt0 WHERE (((CASE WHEN ((vt1.c0)>(vt1.c1)) THEN ((vt1.c0)GLOB(v0.c0)) ELSE LIKELIHOOD(v0.c0, 0.2949444893562353) END) ISNULL)) GROUP BY v0.c0, vt0.c0, vt0.c1, vt1.c0;
SELECT v0.c0, vt0.c0, vt0.c1, vt1.c0 FROM v0, vt1, vt0 GROUP BY v0.c0, vt0.c0, vt0.c1, vt1.c0;
SELECT vt1.c1, vt1.c0, v0.c0 FROM vt1, v0 GROUP BY vt1.c1, vt1.c0, v0.c0;
SELECT vt1.c1, vt1.c0, v0.c0 FROM vt1, v0 GROUP BY vt1.c1, vt1.c0, v0.c0 HAVING ((vt1.c1) NOT BETWEEN (((vt1.c1)&(MIN(v0.c0)))) AND (SUM(v0.c0))) UNION ALL SELECT ALL vt1.c1, vt1.c0, v0.c0 FROM vt1, v0 GROUP BY vt1.c1, vt1.c0, v0.c0 HAVING (NOT (((vt1.c1) NOT BETWEEN (((vt1.c1)&(MIN(v0.c0)))) AND (SUM(v0.c0))))) UNION ALL SELECT vt1.c1, vt1.c0, v0.c0 FROM vt1, v0 GROUP BY vt1.c1, vt1.c0, v0.c0 HAVING ((((vt1.c1) NOT BETWEEN (((vt1.c1)&(MIN(v0.c0)))) AND (SUM(v0.c0)))) ISNULL);
SELECT vt1.c1, vt1.c0, v0.c0 FROM vt1, v0 GROUP BY vt1.c1, vt1.c0, v0.c0;
SELECT vt1.c1, vt1.c0, v0.c0 FROM vt1, v0 GROUP BY vt1.c1, vt1.c0, v0.c0 HAVING ((vt1.c1) NOT BETWEEN (((vt1.c1)&(MIN(v0.c0)))) AND (SUM(v0.c0))) UNION ALL SELECT ALL vt1.c1, vt1.c0, v0.c0 FROM vt1, v0 GROUP BY vt1.c1, vt1.c0, v0.c0 HAVING (NOT (((vt1.c1) NOT BETWEEN (((vt1.c1)&(MIN(v0.c0)))) AND (SUM(v0.c0))))) UNION ALL SELECT vt1.c1, vt1.c0, v0.c0 FROM vt1, v0 GROUP BY vt1.c1, vt1.c0, v0.c0 HAVING ((((vt1.c1) NOT BETWEEN (((vt1.c1)&(MIN(v0.c0)))) AND (SUM(v0.c0)))) ISNULL);
SELECT vt1.c1, vt1.c0, v0.c0 FROM vt1, v0 GROUP BY vt1.c1, vt1.c0, v0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0;
SELECT vt0.c1, vt0.c0 FROM vt0 WHERE (((CAST(vt0.c0 AS REAL))OR((+ (vt0.c1))))) UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM vt0 WHERE ((NOT (((CAST(vt0.c0 AS REAL))OR((+ (vt0.c1))))))) UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM vt0 WHERE (((((CAST(vt0.c0 AS REAL))OR((+ (vt0.c1))))) ISNULL));
SELECT ALL vt0.c1, vt0.c0 FROM vt0;
SELECT DISTINCT * FROM v0, vt1;
SELECT DISTINCT * FROM v0, vt1 WHERE (CAST(v0.c0 AS BLOB) COLLATE NOCASE) UNION SELECT DISTINCT * FROM v0, vt1 WHERE ((NOT (CAST(v0.c0 AS BLOB) COLLATE NOCASE))) UNION SELECT DISTINCT * FROM v0, vt1 WHERE (((CAST(v0.c0 AS BLOB) COLLATE NOCASE) ISNULL));
SELECT DISTINCT * FROM v0, vt1;
SELECT ALL vt0.c0, v0.c0 FROM vt1, vt0, v0 GROUP BY vt0.c0, v0.c0;
SELECT ALL vt0.c0, v0.c0 FROM vt1, vt0, v0 WHERE (((vt1.c1) BETWEEN (vt1.c0) AND ((vt0.c0 IN (v0.c0, v0.c0))))) GROUP BY vt0.c0, v0.c0 UNION SELECT ALL vt0.c0, v0.c0 FROM vt1, vt0, v0 WHERE ((NOT (((vt1.c1) BETWEEN (vt1.c0) AND ((vt0.c0 IN (v0.c0, v0.c0))))))) GROUP BY vt0.c0, v0.c0 UNION SELECT ALL vt0.c0, v0.c0 FROM vt1, vt0, v0 WHERE (((((vt1.c1) BETWEEN (vt1.c0) AND ((vt0.c0 IN (v0.c0, v0.c0))))) ISNULL)) GROUP BY vt0.c0, v0.c0;
SELECT ALL vt0.c0, v0.c0 FROM vt1, vt0, v0 GROUP BY vt0.c0, v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING '336235982' UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT ('336235982')) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (('336235982') ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING '336235982' UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT ('336235982')) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (('336235982') ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT SUM(((vt0.c1) NOT BETWEEN ((((vt1.c1))!=((vt1.c0)))) AND ((~ (vt1.c1))))) FROM vt0, vt1, v0 ORDER BY vt1.c1 ASC  NULLS FIRST, json_insert(((vt0.c0) BETWEEN (vt1.c0) AND (v0.c0)), NULL, NULL) ASC  NULLS FIRST, ((vt1.c0)AND(((((((((((((v0.c0)AND(vt0.c1)))OR(v0.c0)))AND(x'')))AND(vt0.c1)))AND(v0.c0)))OR(vt1.c0)))) DESC  NULLS LAST, CASE vt1.c0 COLLATE BINARY  WHEN v0.c0 THEN vt0.c1 ELSE (((v0.c0))>((-22967909))) END  NULLS LAST;
SELECT ALL * FROM v0, vt0, vt1;
SELECT * FROM v0, vt0, vt1 WHERE (((((((vt0.c1)OR(v0.c0)))OR(vt1.c1))) NOT BETWEEN (0.8645942806878051) AND (((vt1.c1) NOTNULL)))) UNION ALL SELECT * FROM v0, vt0, vt1 WHERE ((NOT (((((((vt0.c1)OR(v0.c0)))OR(vt1.c1))) NOT BETWEEN (0.8645942806878051) AND (((vt1.c1) NOTNULL)))))) UNION ALL SELECT * FROM v0, vt0, vt1 WHERE (((((((((vt0.c1)OR(v0.c0)))OR(vt1.c1))) NOT BETWEEN (0.8645942806878051) AND (((vt1.c1) NOTNULL)))) ISNULL));
SELECT ALL * FROM v0, vt0, vt1;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((CAST(vt1.c1 AS TEXT)) NOT BETWEEN ((~ (vt1.c0))) AND ((((((((('x^')AND(vt1.c1)))AND(vt1.c1)))AND(']u')))AND(vt1.c1))))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT (((CAST(vt1.c1 AS TEXT)) NOT BETWEEN ((~ (vt1.c0))) AND ((((((((('x^')AND(vt1.c1)))AND(vt1.c1)))AND(']u')))AND(vt1.c1))))))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((((CAST(vt1.c1 AS TEXT)) NOT BETWEEN ((~ (vt1.c0))) AND ((((((((('x^')AND(vt1.c1)))AND(vt1.c1)))AND(']u')))AND(vt1.c1))))) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT vt0.c0, v0.c0, vt0.c1 FROM v0, vt0 GROUP BY vt0.c0, v0.c0, vt0.c1;
SELECT vt0.c0, v0.c0, vt0.c1 FROM v0, vt0 WHERE (NULLIF(((vt0.c1)LIKE(vt0.c0)), CAST(vt0.c0 AS BLOB))) GROUP BY vt0.c0, v0.c0, vt0.c1 UNION SELECT ALL vt0.c0, v0.c0, vt0.c1 FROM v0, vt0 WHERE ((NOT (NULLIF(((vt0.c1)LIKE(vt0.c0)), CAST(vt0.c0 AS BLOB))))) GROUP BY vt0.c0, v0.c0, vt0.c1 UNION SELECT ALL vt0.c0, v0.c0, vt0.c1 FROM v0, vt0 WHERE (((NULLIF(((vt0.c1)LIKE(vt0.c0)), CAST(vt0.c0 AS BLOB))) ISNULL)) GROUP BY vt0.c0, v0.c0, vt0.c1;
SELECT vt0.c0, v0.c0, vt0.c1 FROM v0, vt0 GROUP BY vt0.c0, v0.c0, vt0.c1;
SELECT vt0.c0, vt1.c1 FROM vt1, v0, vt0 GROUP BY vt0.c0, vt1.c1;
SELECT vt0.c0, vt1.c1 FROM vt1, v0, vt0 GROUP BY vt0.c0, vt1.c1 HAVING COUNT(((SUM(MIN(v0.c0)))||('-1059204241'))) UNION ALL SELECT ALL vt0.c0, vt1.c1 FROM vt1, v0, vt0 GROUP BY vt0.c0, vt1.c1 HAVING (NOT (COUNT(((SUM(MIN(v0.c0)))||('-1059204241'))))) UNION ALL SELECT vt0.c0, vt1.c1 FROM vt1, v0, vt0 GROUP BY vt0.c0, vt1.c1 HAVING ((COUNT(((SUM(MIN(v0.c0)))||('-1059204241')))) ISNULL);
SELECT ALL vt0.c1, vt0.c0, vt1.c0 FROM vt1, vt0;
SELECT ALL vt0.c1, vt0.c0, vt1.c0 FROM vt1, vt0 WHERE (vt1.c0) UNION ALL SELECT vt0.c1, vt0.c0, vt1.c0 FROM vt1, vt0 WHERE ((NOT (vt1.c0))) UNION ALL SELECT vt0.c1, vt0.c0, vt1.c0 FROM vt1, vt0 WHERE (((vt1.c0) ISNULL));
SELECT ALL vt0.c1, vt0.c0, vt1.c0 FROM vt1, vt0;
SELECT DISTINCT * FROM vt0, vt1, v0;
SELECT DISTINCT * FROM vt0, vt1, v0 WHERE ((CAST(vt0.c0 AS REAL) IN (vt1.c1))) UNION SELECT DISTINCT * FROM vt0, vt1, v0 WHERE ((NOT ((CAST(vt0.c0 AS REAL) IN (vt1.c1))))) UNION SELECT DISTINCT * FROM vt0, vt1, v0 WHERE ((((CAST(vt0.c0 AS REAL) IN (vt1.c1))) ISNULL));
SELECT DISTINCT * FROM vt0, vt1, v0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0 WHERE (CASE WHEN (+ (vt0.c1)) THEN CASE WHEN vt0.c0 THEN vt0.c0 END WHEN CAST(vt0.c0 AS BLOB) THEN 0.39263128391657387 WHEN 0.9971997650370331 THEN ((vt0.c0) NOT BETWEEN (0.9046681647033911) AND (vt0.c0)) ELSE CASE WHEN vt0.c1 THEN vt0.c0 END END) GROUP BY vt0.c1, vt0.c0 UNION SELECT vt0.c1, vt0.c0 FROM vt0 WHERE ((NOT (CASE WHEN (+ (vt0.c1)) THEN CASE WHEN vt0.c0 THEN vt0.c0 END WHEN CAST(vt0.c0 AS BLOB) THEN 0.39263128391657387 WHEN 0.9971997650370331 THEN ((vt0.c0) NOT BETWEEN (0.9046681647033911) AND (vt0.c0)) ELSE CASE WHEN vt0.c1 THEN vt0.c0 END END))) GROUP BY vt0.c1, vt0.c0 UNION SELECT ALL vt0.c1, vt0.c0 FROM vt0 WHERE (((CASE WHEN (+ (vt0.c1)) THEN CASE WHEN vt0.c0 THEN vt0.c0 END WHEN CAST(vt0.c0 AS BLOB) THEN 0.39263128391657387 WHEN 0.9971997650370331 THEN ((vt0.c0) NOT BETWEEN (0.9046681647033911) AND (vt0.c0)) ELSE CASE WHEN vt0.c1 THEN vt0.c0 END END) ISNULL)) GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT vt1.c1, vt0.c0, vt0.c1, v0.c0, vt1.c0 FROM v0, vt1, vt0 GROUP BY vt1.c1, vt0.c0, vt0.c1, v0.c0, vt1.c0;
SELECT vt1.c1, vt0.c0, vt0.c1, v0.c0, vt1.c0 FROM v0, vt1, vt0 GROUP BY vt1.c1, vt0.c0, vt0.c1, v0.c0, vt1.c0 HAVING COUNT(MAX(GROUP_CONCAT(NULL))) UNION ALL SELECT ALL vt1.c1, vt0.c0, vt0.c1, v0.c0, vt1.c0 FROM v0, vt1, vt0 GROUP BY vt1.c1, vt0.c0, vt0.c1, v0.c0, vt1.c0 HAVING (NOT (COUNT(MAX(GROUP_CONCAT(NULL))))) UNION ALL SELECT vt1.c1, vt0.c0, vt0.c1, v0.c0, vt1.c0 FROM v0, vt1, vt0 GROUP BY vt1.c1, vt0.c0, vt0.c1, v0.c0, vt1.c0 HAVING ((COUNT(MAX(GROUP_CONCAT(NULL)))) ISNULL);
SELECT ALL * FROM v0, vt0;
SELECT * FROM v0, vt0 WHERE ((((('0Y') BETWEEN (vt0.c1) AND (vt0.c1))) IS FALSE)) UNION ALL SELECT * FROM v0, vt0 WHERE ((NOT ((((('0Y') BETWEEN (vt0.c1) AND (vt0.c1))) IS FALSE)))) UNION ALL SELECT * FROM v0, vt0 WHERE ((((((('0Y') BETWEEN (vt0.c1) AND (vt0.c1))) IS FALSE)) ISNULL));
SELECT ALL * FROM v0, vt0;
SELECT DISTINCT * FROM vt1 FULL OUTER JOIN vt0 ON ((CAST(vt0.c0 AS BLOB))<<(((((vt0.c0)AND(vt0.c1)))OR(vt0.c0)))) LEFT OUTER JOIN v0 ON ((((((((((v0.c0)OR(v0.c0)))AND(((v0.c0) IS TRUE))))OR(IFNULL(vt1.c0, vt0.c0))))AND(((((vt1.c1)AND(vt1.c0)))AND(vt1.c1)))))OR((v0.c0 IN (vt1.c1))));
SELECT DISTINCT * FROM vt1 FULL OUTER JOIN vt0 ON ((CAST(vt0.c0 AS BLOB))<<(((((vt0.c0)AND(vt0.c1)))OR(vt0.c0)))) LEFT OUTER JOIN v0 ON ((((((((((v0.c0)OR(v0.c0)))AND(((v0.c0) IS TRUE))))OR(IFNULL(vt1.c0, vt0.c0))))AND(((((vt1.c1)AND(vt1.c0)))AND(vt1.c1)))))OR((v0.c0 IN (vt1.c1)))) WHERE (((((((((((vt0.c0) NOT NULL))OR(CASE v0.c0  WHEN vt0.c0 THEN v0.c0 END)))AND((((vt1.c0, NULL, vt0.c1))=((vt0.c1, vt0.c1, vt1.c0))))))AND(((NULL) NOT NULL))))OR((((vt0.c0))>=((vt1.c0)))))) UNION SELECT DISTINCT * FROM vt1 FULL OUTER JOIN vt0 ON ((CAST(vt0.c0 AS BLOB))<<(((((vt0.c0)AND(vt0.c1)))OR(vt0.c0)))) LEFT OUTER JOIN v0 ON ((((((((((v0.c0)OR(v0.c0)))AND(((v0.c0) IS TRUE))))OR(IFNULL(vt1.c0, vt0.c0))))AND(((((vt1.c1)AND(vt1.c0)))AND(vt1.c1)))))OR((v0.c0 IN (vt1.c1)))) WHERE ((NOT (((((((((((vt0.c0) NOT NULL))OR(CASE v0.c0  WHEN vt0.c0 THEN v0.c0 END)))AND((((vt1.c0, NULL, vt0.c1))=((vt0.c1, vt0.c1, vt1.c0))))))AND(((NULL) NOT NULL))))OR((((vt0.c0))>=((vt1.c0)))))))) UNION SELECT DISTINCT * FROM vt1 FULL OUTER JOIN vt0 ON ((CAST(vt0.c0 AS BLOB))<<(((((vt0.c0)AND(vt0.c1)))OR(vt0.c0)))) LEFT OUTER JOIN v0 ON ((((((((((v0.c0)OR(v0.c0)))AND(((v0.c0) IS TRUE))))OR(IFNULL(vt1.c0, vt0.c0))))AND(((((vt1.c1)AND(vt1.c0)))AND(vt1.c1)))))OR((v0.c0 IN (vt1.c1)))) WHERE (((((((((((((vt0.c0) NOT NULL))OR(CASE v0.c0  WHEN vt0.c0 THEN v0.c0 END)))AND((((vt1.c0, NULL, vt0.c1))==((vt0.c1, vt0.c1, vt1.c0))))))AND(((NULL) NOT NULL))))OR((((vt0.c0))>=((vt1.c0)))))) ISNULL));
SELECT DISTINCT * FROM vt1 FULL OUTER JOIN vt0 ON ((CAST(vt0.c0 AS BLOB))<<(((((vt0.c0)AND(vt0.c1)))OR(vt0.c0)))) LEFT OUTER JOIN v0 ON ((((((((((v0.c0)OR(v0.c0)))AND(((v0.c0) IS TRUE))))OR(IFNULL(vt1.c0, vt0.c0))))AND(((((vt1.c1)AND(vt1.c0)))AND(vt1.c1)))))OR((v0.c0 IN (vt1.c1))));
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt0 WHERE (((vt0.c0) NOT BETWEEN (x'7f92') AND (vt0.c1)) COLLATE RTRIM) GROUP BY vt0.c1 UNION SELECT vt0.c1 FROM vt0 WHERE ((NOT (((vt0.c0) NOT BETWEEN (x'7f92') AND (vt0.c1)) COLLATE RTRIM))) GROUP BY vt0.c1 UNION SELECT vt0.c1 FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (x'7f92') AND (vt0.c1)) COLLATE RTRIM) ISNULL)) GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT ALL vt0.c1, vt1.c1, vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt0.c1, vt1.c1, vt1.c0, vt0.c0;
SELECT vt0.c1, vt1.c1, vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt0.c1, vt1.c1, vt1.c0, vt0.c0 HAVING CAST((((COUNT(*)))!=((vt0.c1))) AS TEXT) UNION ALL SELECT ALL vt0.c1, vt1.c1, vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt0.c1, vt1.c1, vt1.c0, vt0.c0 HAVING (NOT (CAST((((COUNT(*)))<>((vt0.c1))) AS TEXT))) UNION ALL SELECT ALL vt0.c1, vt1.c1, vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt0.c1, vt1.c1, vt1.c0, vt0.c0 HAVING ((CAST((((COUNT(*)))<>((vt0.c1))) AS TEXT)) ISNULL);
SELECT ALL vt0.c1, vt1.c1, vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt0.c1, vt1.c1, vt1.c0, vt0.c0;
SELECT vt0.c1, vt1.c1, vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt0.c1, vt1.c1, vt1.c0, vt0.c0 HAVING CAST((((COUNT(*)))!=((vt0.c1))) AS TEXT) UNION ALL SELECT ALL vt0.c1, vt1.c1, vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt0.c1, vt1.c1, vt1.c0, vt0.c0 HAVING (NOT (CAST((((COUNT(*)))<>((vt0.c1))) AS TEXT))) UNION ALL SELECT ALL vt0.c1, vt1.c1, vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt0.c1, vt1.c1, vt1.c0, vt0.c0 HAVING ((CAST((((COUNT(*)))<>((vt0.c1))) AS TEXT)) ISNULL);
SELECT ALL vt0.c1, vt1.c1, vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt0.c1, vt1.c1, vt1.c0, vt0.c0;
SELECT vt1.c0, v0.c0, vt1.c1 FROM vt1, v0;
SELECT ALL vt1.c0, v0.c0, vt1.c1 FROM vt1, v0 WHERE (vt1.c0) UNION ALL SELECT ALL vt1.c0, v0.c0, vt1.c1 FROM vt1, v0 NOT INDEXED WHERE ((NOT (vt1.c0))) UNION ALL SELECT vt1.c0, v0.c0, vt1.c1 FROM vt1, v0 WHERE (((vt1.c0) ISNULL));
SELECT vt1.c0, v0.c0, vt1.c1 FROM vt1, v0;
SELECT DISTINCT vt1.c1, vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c1, vt1.c0 FROM vt1 WHERE ((((((NULL)OR(vt1.c0)))OR(vt1.c1)) IN ())) UNION SELECT DISTINCT vt1.c1, vt1.c0 FROM vt1 WHERE ((NOT ((((((NULL)OR(vt1.c0)))OR(vt1.c1)) IN ())))) UNION SELECT DISTINCT vt1.c1, vt1.c0 FROM vt1 WHERE ((((((((NULL)OR(vt1.c0)))OR(vt1.c1)) IN ())) ISNULL));
SELECT DISTINCT vt1.c1, vt1.c0 FROM vt1;
SELECT v0.c0, vt1.c0, vt1.c1 FROM v0, vt1 GROUP BY v0.c0, vt1.c0, vt1.c1;
SELECT v0.c0, vt1.c0, vt1.c1 FROM v0, vt1 WHERE (((CAST(vt1.c1 AS BLOB))OR(((vt1.c0) NOT BETWEEN (vt1.c1) AND (v0.c0))))) GROUP BY v0.c0, vt1.c0, vt1.c1 UNION SELECT v0.c0, vt1.c0, vt1.c1 FROM v0, vt1 WHERE ((NOT (((CAST(vt1.c1 AS BLOB))OR(((vt1.c0) NOT BETWEEN (vt1.c1) AND (v0.c0))))))) GROUP BY v0.c0, vt1.c0, vt1.c1 UNION SELECT ALL v0.c0, vt1.c0, vt1.c1 FROM v0, vt1 WHERE (((((CAST(vt1.c1 AS BLOB))OR(((vt1.c0) NOT BETWEEN (vt1.c1) AND (v0.c0))))) ISNULL)) GROUP BY v0.c0, vt1.c0, vt1.c1;
SELECT v0.c0, vt1.c0, vt1.c1 FROM v0, vt1 GROUP BY v0.c0, vt1.c0, vt1.c1;
SELECT v0.c0, vt0.c1, vt1.c1 FROM v0 FULL OUTER JOIN vt1 ON CASE WHEN ((((v0.c0)AND(v0.c0)))OR(vt1.c0)) THEN ((vt0.c1)||(vt1.c0)) WHEN ((((vt0.c0)OR(v0.c0)))AND(vt1.c0)) THEN vt1.c1 COLLATE BINARY WHEN ((((vt1.c1)OR(vt0.c0)))AND(vt0.c1)) THEN ((vt0.c0)<=(vt1.c1)) ELSE ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c1)) END LEFT OUTER JOIN vt0 ON vt1.c1 GROUP BY v0.c0, vt0.c1, vt1.c1;
SELECT v0.c0 FROM v0;
SELECT ALL v0.c0 FROM v0 WHERE ((((0X406853f5))<=(((((v0.c0))>((v0.c0))))))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE ((NOT ((((0X406853f5))<=(((((v0.c0))>((v0.c0))))))))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE ((((((0x406853f5))<=(((((v0.c0))>((v0.c0))))))) ISNULL));
SELECT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (((CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END)>>(v0.c0 COLLATE BINARY))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (((CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END)>>(v0.c0 COLLATE BINARY))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((((CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END)>>(v0.c0 COLLATE BINARY))) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT vt1.c0, vt1.c1, v0.c0, vt0.c0 FROM v0, vt0, vt1 GROUP BY vt1.c0, vt1.c1, v0.c0, vt0.c0;
SELECT ALL vt1.c0, vt1.c1, v0.c0, vt0.c0 FROM v0, vt0, vt1 WHERE (((CASE WHEN vt0.c1 THEN vt0.c1 END) BETWEEN (v0.c0) AND ((~ (vt1.c0))))) GROUP BY vt1.c0, vt1.c1, v0.c0, vt0.c0 UNION SELECT vt1.c0, vt1.c1, v0.c0, vt0.c0 FROM v0, vt0, vt1 WHERE ((NOT (((CASE WHEN vt0.c1 THEN vt0.c1 END) BETWEEN (v0.c0) AND ((~ (vt1.c0))))))) GROUP BY vt1.c0, vt1.c1, v0.c0, vt0.c0 UNION SELECT vt1.c0, vt1.c1, v0.c0, vt0.c0 FROM v0, vt0, vt1 WHERE (((((CASE WHEN vt0.c1 THEN vt0.c1 END) BETWEEN (v0.c0) AND ((~ (vt1.c0))))) ISNULL)) GROUP BY vt1.c0, vt1.c1, v0.c0, vt0.c0;
SELECT vt1.c0, vt1.c1, v0.c0, vt0.c0 FROM v0, vt0, vt1 GROUP BY vt1.c0, vt1.c1, v0.c0, vt0.c0;
SELECT vt0.c0, vt0.c1, v0.c0 FROM v0, vt0 NOT INDEXED GROUP BY vt0.c0, vt0.c1, v0.c0;
SELECT vt0.c0, vt0.c1, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, vt0.c1, v0.c0 HAVING ((((COUNT(*)) NOT BETWEEN (TOTAL(COUNT(vt0.c0))) AND (v0.c0)))>>(((vt0.c1) BETWEEN (v0.c0) AND (MIN(TOTAL(v0.c0)))))) UNION ALL SELECT ALL vt0.c0, vt0.c1, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, vt0.c1, v0.c0 HAVING (NOT (((((COUNT(*)) NOT BETWEEN (TOTAL(COUNT(vt0.c0))) AND (v0.c0)))>>(((vt0.c1) BETWEEN (v0.c0) AND (MIN(TOTAL(v0.c0)))))))) UNION ALL SELECT vt0.c0, vt0.c1, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, vt0.c1, v0.c0 HAVING ((((((COUNT(*)) NOT BETWEEN (TOTAL(COUNT(vt0.c0))) AND (v0.c0)))>>(((vt0.c1) BETWEEN (v0.c0) AND (MIN(TOTAL(v0.c0))))))) ISNULL);
SELECT ALL vt1.c1, v0.c0, vt1.c0 FROM vt0, v0, vt1;
SELECT ALL vt1.c1, v0.c0, vt1.c0 FROM vt0, v0, vt1 WHERE ((((LIKELIHOOD(DISTINCT vt1.c1, 0.4697798188317214)))==((CAST(vt1.c0 AS TEXT))))) UNION ALL SELECT vt1.c1, v0.c0, vt1.c0 FROM vt0, v0, vt1 WHERE ((NOT ((((LIKELIHOOD(DISTINCT vt1.c1, 0.4697798188317214)))=((CAST(vt1.c0 AS TEXT))))))) UNION ALL SELECT ALL vt1.c1, v0.c0, vt1.c0 FROM vt0, v0 NOT INDEXED, vt1 WHERE ((((((LIKELIHOOD(DISTINCT vt1.c1, 0.4697798188317214)))=((CAST(vt1.c0 AS TEXT))))) ISNULL));
SELECT ALL vt1.c1, v0.c0, vt1.c0 FROM vt0, v0, vt1;
SELECT DISTINCT vt0.c1, vt0.c0, vt1.c1, v0.c0, vt1.c0 FROM vt1, vt0, v0;
SELECT DISTINCT vt0.c1, vt0.c0, vt1.c1, v0.c0, vt1.c0 FROM vt1, vt0, v0 WHERE (TRIM(DISTINCT (NOT (vt0.c1)), 0xffffffffecba9995)) UNION SELECT DISTINCT vt0.c1, vt0.c0, vt1.c1, v0.c0, vt1.c0 FROM vt1, vt0, v0 WHERE ((NOT (TRIM(DISTINCT (NOT (vt0.c1)), 0xffffffffecba9995)))) UNION SELECT DISTINCT vt0.c1, vt0.c0, vt1.c1, v0.c0, vt1.c0 FROM vt1, vt0, v0 WHERE (((TRIM(DISTINCT (NOT (vt0.c1)), 0Xffffffffecba9995)) ISNULL));
SELECT DISTINCT vt0.c1, vt0.c0, vt1.c1, v0.c0, vt1.c0 FROM vt1, vt0, v0;
SELECT vt1.c1, vt0.c0, vt0.c1, vt1.c0 FROM vt0 NOT INDEXED RIGHT OUTER JOIN v0 ON -3.40208879E8 RIGHT OUTER JOIN vt1 ON ((((v0.c0)AND(((vt1.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)))))OR(CASE vt0.c1  WHEN vt1.c0 THEN vt0.c0 END)) GROUP BY vt1.c1, vt0.c0, vt0.c1, vt1.c0;
SELECT ALL vt1.c1, vt0.c0, vt0.c1, vt1.c0 FROM vt0 RIGHT OUTER JOIN v0 ON -3.40208879E8 RIGHT OUTER JOIN vt1 ON ((((v0.c0)AND(((vt1.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)))))OR(CASE vt0.c1  WHEN vt1.c0 THEN vt0.c0 END)) WHERE (NULLIF(CASE WHEN vt0.c0 THEN vt1.c1 WHEN vt0.c0 THEN vt1.c1 WHEN v0.c0 THEN v0.c0 END, (('gH') IS TRUE))) GROUP BY vt1.c1, vt0.c0, vt0.c1, vt1.c0 UNION SELECT ALL vt1.c1, vt0.c0, vt0.c1, vt1.c0 FROM vt0 RIGHT OUTER JOIN v0 ON -3.40208879E8 RIGHT OUTER JOIN vt1 ON ((((v0.c0)AND(((vt1.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)))))OR(CASE vt0.c1  WHEN vt1.c0 THEN vt0.c0 END)) WHERE ((NOT (NULLIF(CASE WHEN vt0.c0 THEN vt1.c1 WHEN vt0.c0 THEN vt1.c1 WHEN v0.c0 THEN v0.c0 END, (('gH') IS TRUE))))) GROUP BY vt1.c1, vt0.c0, vt0.c1, vt1.c0 UNION SELECT ALL vt1.c1, vt0.c0, vt0.c1, vt1.c0 FROM vt0 RIGHT OUTER JOIN v0 ON -3.40208879E8 RIGHT OUTER JOIN vt1 ON ((((v0.c0)AND(((vt1.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)))))OR(CASE vt0.c1  WHEN vt1.c0 THEN vt0.c0 END)) WHERE (((NULLIF(CASE WHEN vt0.c0 THEN vt1.c1 WHEN vt0.c0 THEN vt1.c1 WHEN v0.c0 THEN v0.c0 END, (('gH') IS TRUE))) ISNULL)) GROUP BY vt1.c1, vt0.c0, vt0.c1, vt1.c0;
SELECT vt1.c1, vt0.c0, vt0.c1, vt1.c0 FROM vt0 NOT INDEXED RIGHT OUTER JOIN v0 ON -3.40208879E8 RIGHT OUTER JOIN vt1 ON ((((v0.c0)AND(((vt1.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)))))OR(CASE vt0.c1  WHEN vt1.c0 THEN vt0.c0 END)) GROUP BY vt1.c1, vt0.c0, vt0.c1, vt1.c0;
SELECT v0.c0 FROM v0 LEFT OUTER JOIN vt0 ON (- (LIKELY(vt0.c1))) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 LEFT OUTER JOIN vt0 ON (- (LIKELY(vt0.c1))) GROUP BY v0.c0 HAVING ((TOTAL(SUM(vt0.c0))) NOT BETWEEN (COUNT(vt0.c0)) AND (CASE WHEN MIN(vt0.c1) THEN '1233082828' WHEN COUNT(*) THEN '-953189352' WHEN v0.c0 THEN COUNT(*) WHEN GROUP_CONCAT(COUNT(MAX(vt0.c1))) THEN v0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE MAX(AVG(AVG(0.6375322945894282))) END)) UNION ALL SELECT v0.c0 FROM v0 LEFT OUTER JOIN vt0 ON (- (LIKELY(vt0.c1))) GROUP BY v0.c0 HAVING (NOT (((TOTAL(SUM(vt0.c0))) NOT BETWEEN (COUNT(vt0.c0)) AND (CASE WHEN MIN(vt0.c1) THEN '1233082828' WHEN COUNT(*) THEN '-953189352' WHEN v0.c0 THEN COUNT(*) WHEN GROUP_CONCAT(COUNT(MAX(vt0.c1))) THEN v0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE MAX(AVG(AVG(0.6375322945894282))) END)))) UNION ALL SELECT v0.c0 FROM v0 LEFT OUTER JOIN vt0 ON (- (LIKELY(vt0.c1))) GROUP BY v0.c0 HAVING ((((TOTAL(SUM(vt0.c0))) NOT BETWEEN (COUNT(vt0.c0)) AND (CASE WHEN MIN(vt0.c1) THEN '1233082828' WHEN COUNT(*) THEN '-953189352' WHEN v0.c0 THEN COUNT(*) WHEN GROUP_CONCAT(COUNT(MAX(vt0.c1))) THEN v0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE MAX(AVG(AVG(0.6375322945894282))) END))) ISNULL);
SELECT ALL * FROM vt0, vt1, v0;
SELECT ALL * FROM vt0, vt1, v0 WHERE ((+ (vt1.c0))) UNION ALL SELECT * FROM vt0, vt1, v0 WHERE ((NOT ((+ (vt1.c0))))) UNION ALL SELECT * FROM vt0, vt1, v0 WHERE ((((+ (vt1.c0))) ISNULL));
SELECT ALL * FROM vt0, vt1, v0;
SELECT DISTINCT vt1.c1 FROM vt1;
SELECT DISTINCT vt1.c1 FROM vt1 WHERE (((((((((((vt1.c0)OR(vt1.c1)))AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))<((vt1.c1 IN ())))) UNION SELECT DISTINCT vt1.c1 FROM vt1 WHERE ((NOT (((((((((((vt1.c0)OR(vt1.c1)))AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))<((vt1.c1 IN ())))))) UNION SELECT DISTINCT vt1.c1 FROM vt1 WHERE (((((((((((((vt1.c0)OR(vt1.c1)))AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))<((vt1.c1 IN ())))) ISNULL));
SELECT DISTINCT vt1.c1 FROM vt1;
SELECT ALL vt1.c0 FROM vt1 RIGHT OUTER JOIN v0 ON (vt1.c0 IN ((x'28a5' IN (v0.c0, v0.c0)), ((((((((x'')OR(vt1.c0)))AND(vt0.c0)))AND(vt1.c0)))OR(vt1.c1)))) CROSS JOIN vt0 ON ((vt1.c0 IN (vt1.c0)) IN ()) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 RIGHT OUTER JOIN v0 ON (vt1.c0 IN ((x'28a5' IN (v0.c0, v0.c0)), ((((((((x'')OR(vt1.c0)))AND(vt0.c0)))AND(vt1.c0)))OR(vt1.c1)))) CROSS JOIN vt0 ON ((vt1.c0 IN (vt1.c0)) IN ()) WHERE (((((vt0.c0)LIKE(vt1.c0))) IS TRUE)) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 RIGHT OUTER JOIN v0 ON (vt1.c0 IN ((x'28a5' IN (v0.c0, v0.c0)), ((((((((x'')OR(vt1.c0)))AND(vt0.c0)))AND(vt1.c0)))OR(vt1.c1)))) CROSS JOIN vt0 ON ((vt1.c0 IN (vt1.c0)) IN ()) WHERE ((NOT (((((vt0.c0)LIKE(vt1.c0))) IS TRUE)))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 RIGHT OUTER JOIN v0 ON (vt1.c0 IN ((x'28a5' IN (v0.c0, v0.c0)), ((((((((x'')OR(vt1.c0)))AND(vt0.c0)))AND(vt1.c0)))OR(vt1.c1)))) CROSS JOIN vt0 ON ((vt1.c0 IN (vt1.c0)) IN ()) WHERE (((((((vt0.c0)LIKE(vt1.c0))) IS TRUE)) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 RIGHT OUTER JOIN v0 ON (vt1.c0 IN ((x'28a5' IN (v0.c0, v0.c0)), ((((((((x'')OR(vt1.c0)))AND(vt0.c0)))AND(vt1.c0)))OR(vt1.c1)))) CROSS JOIN vt0 ON ((vt1.c0 IN (vt1.c0)) IN ()) GROUP BY vt1.c0;
SELECT vt1.c0, v0.c0, vt1.c1, vt0.c0, vt0.c1 FROM v0, vt0, vt1 GROUP BY vt1.c0, v0.c0, vt1.c1, vt0.c0, vt0.c1;
SELECT ALL vt1.c0, v0.c0, vt1.c1, vt0.c0, vt0.c1 FROM v0, vt0, vt1 GROUP BY vt1.c0, v0.c0, vt1.c1, vt0.c0, vt0.c1 HAVING GROUP_CONCAT(COUNT(*)) UNION ALL SELECT vt1.c0, v0.c0, vt1.c1, vt0.c0, vt0.c1 FROM v0, vt0, vt1 GROUP BY vt1.c0, v0.c0, vt1.c1, vt0.c0, vt0.c1 HAVING (NOT (GROUP_CONCAT(COUNT(*)))) UNION ALL SELECT ALL vt1.c0, v0.c0, vt1.c1, vt0.c0, vt0.c1 FROM v0, vt0, vt1 GROUP BY vt1.c0, v0.c0, vt1.c1, vt0.c0, vt0.c1 HAVING ((GROUP_CONCAT(COUNT(*))) ISNULL);
SELECT SUM(((vt0.c0) NOTNULL) COLLATE RTRIM) FROM v0, vt0;
SELECT ALL * FROM vt0;
SELECT ALL * FROM vt0 WHERE (CAST((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) AS INTEGER)) UNION ALL SELECT * FROM vt0 WHERE ((NOT (CAST((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) AS INTEGER)))) UNION ALL SELECT ALL * FROM vt0 WHERE (((CAST((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) AS INTEGER)) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT v0.c0, vt1.c0, vt0.c0, vt0.c1, vt1.c1 FROM vt1, vt0, v0;
SELECT DISTINCT v0.c0, vt1.c0, vt0.c0, vt0.c1, vt1.c1 FROM vt1, vt0, v0 WHERE ((((+ (vt0.c1))) IS FALSE)) UNION SELECT DISTINCT v0.c0, vt1.c0, vt0.c0, vt0.c1, vt1.c1 FROM vt1, vt0, v0 WHERE ((NOT ((((+ (vt0.c1))) IS FALSE)))) UNION SELECT DISTINCT v0.c0, vt1.c0, vt0.c0, vt0.c1, vt1.c1 FROM vt1, vt0, v0 WHERE ((((((+ (vt0.c1))) IS FALSE)) ISNULL));
SELECT DISTINCT v0.c0, vt1.c0, vt0.c0, vt0.c1, vt1.c1 FROM vt1, vt0, v0;
SELECT vt0.c1, vt1.c0, vt1.c1, vt0.c0 FROM vt0 CROSS JOIN vt1 ON ((NULL) BETWEEN ((vt1.c0 IN ())) AND (CAST(vt1.c1 AS REAL))) GROUP BY vt0.c1, vt1.c0, vt1.c1, vt0.c0;
SELECT vt0.c1, vt1.c0, vt1.c1, vt0.c0 FROM vt0 CROSS JOIN vt1 ON ((NULL) BETWEEN ((vt1.c0 IN ())) AND (CAST(vt1.c1 AS REAL))) WHERE ((((vt1.c0)==(vt0.c1)) IN (((NULL)IS(vt1.c0))))) GROUP BY vt0.c1, vt1.c0, vt1.c1, vt0.c0 UNION SELECT ALL vt0.c1, vt1.c0, vt1.c1, vt0.c0 FROM vt0 CROSS JOIN vt1 ON ((NULL) BETWEEN ((vt1.c0 IN ())) AND (CAST(vt1.c1 AS REAL))) WHERE ((NOT ((((vt1.c0)==(vt0.c1)) IN (((NULL)IS(vt1.c0))))))) GROUP BY vt0.c1, vt1.c0, vt1.c1, vt0.c0 UNION SELECT vt0.c1, vt1.c0, vt1.c1, vt0.c0 FROM vt0 CROSS JOIN vt1 ON ((NULL) BETWEEN ((vt1.c0 IN ())) AND (CAST(vt1.c1 AS REAL))) WHERE ((((((vt1.c0)==(vt0.c1)) IN (((NULL)IS(vt1.c0))))) ISNULL)) GROUP BY vt0.c1, vt1.c0, vt1.c1, vt0.c0;
SELECT vt0.c1, vt1.c0, vt1.c1, vt0.c0 FROM vt0 CROSS JOIN vt1 ON ((NULL) BETWEEN ((vt1.c0 IN ())) AND (CAST(vt1.c1 AS REAL))) GROUP BY vt0.c1, vt1.c0, vt1.c1, vt0.c0;
SELECT vt1.c1, vt1.c0, vt0.c0, v0.c0, vt0.c1 FROM vt1, vt0, v0 GROUP BY vt1.c1, vt1.c0, vt0.c0, v0.c0, vt0.c1;
SELECT ALL vt1.c1, vt1.c0, vt0.c0, v0.c0, vt0.c1 FROM vt1, vt0, v0 GROUP BY vt1.c1, vt1.c0, vt0.c0, v0.c0, vt0.c1 HAVING CASE WHEN AVG(vt1.c1) THEN (+ (COUNT(*))) END UNION ALL SELECT vt1.c1, vt1.c0, vt0.c0, v0.c0, vt0.c1 FROM vt1, vt0, v0 GROUP BY vt1.c1, vt1.c0, vt0.c0, v0.c0, vt0.c1 HAVING (NOT (CASE WHEN AVG(vt1.c1) THEN (+ (COUNT(*))) END)) UNION ALL SELECT ALL vt1.c1, vt1.c0, vt0.c0, v0.c0, vt0.c1 FROM vt1, vt0, v0 GROUP BY vt1.c1, vt1.c0, vt0.c0, v0.c0, vt0.c1 HAVING ((CASE WHEN AVG(vt1.c1) THEN (+ (COUNT(*))) END) ISNULL);
SELECT vt1.c1, vt1.c0, vt0.c0, v0.c0, vt0.c1 FROM vt1, vt0, v0 GROUP BY vt1.c1, vt1.c0, vt0.c0, v0.c0, vt0.c1;
SELECT ALL vt1.c1, vt1.c0, vt0.c0, v0.c0, vt0.c1 FROM vt1, vt0, v0 GROUP BY vt1.c1, vt1.c0, vt0.c0, v0.c0, vt0.c1 HAVING CASE WHEN AVG(vt1.c1) THEN (+ (COUNT(*))) END UNION ALL SELECT vt1.c1, vt1.c0, vt0.c0, v0.c0, vt0.c1 FROM vt1, vt0, v0 GROUP BY vt1.c1, vt1.c0, vt0.c0, v0.c0, vt0.c1 HAVING (NOT (CASE WHEN AVG(vt1.c1) THEN (+ (COUNT(*))) END)) UNION ALL SELECT ALL vt1.c1, vt1.c0, vt0.c0, v0.c0, vt0.c1 FROM vt1, vt0, v0 GROUP BY vt1.c1, vt1.c0, vt0.c0, v0.c0, vt0.c1 HAVING ((CASE WHEN AVG(vt1.c1) THEN (+ (COUNT(*))) END) ISNULL);
SELECT vt1.c1, vt1.c0, vt0.c0, v0.c0, vt0.c1 FROM vt1, vt0, v0 GROUP BY vt1.c1, vt1.c0, vt0.c0, v0.c0, vt0.c1;
SELECT * FROM vt1 NOT INDEXED, vt0;
SELECT * FROM vt1, vt0 WHERE (((CAST(vt1.c0 AS REAL))&(((((vt0.c0)OR(vt0.c1)))OR(vt1.c0))))) UNION ALL SELECT ALL * FROM vt1, vt0 WHERE ((NOT (((CAST(vt1.c0 AS REAL))&(((((vt0.c0)OR(vt0.c1)))OR(vt1.c0))))))) UNION ALL SELECT ALL * FROM vt1, vt0 WHERE (((((CAST(vt1.c0 AS REAL))&(((((vt0.c0)OR(vt0.c1)))OR(vt1.c0))))) ISNULL));
SELECT * FROM vt1 NOT INDEXED, vt0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE ((((v0.c0 IN (v0.c0))) NOT BETWEEN (((v0.c0) IS TRUE)) AND (((v0.c0) BETWEEN (v0.c0) AND (0.5333900410370338))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT ((((v0.c0 IN (v0.c0))) NOT BETWEEN (((v0.c0) IS TRUE)) AND (((v0.c0) BETWEEN (v0.c0) AND (0.5333900410370338))))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((((((v0.c0 IN (v0.c0))) NOT BETWEEN (((v0.c0) IS TRUE)) AND (((v0.c0) BETWEEN (v0.c0) AND (0.5333900410370338))))) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT ALL vt0.c0 FROM vt1, v0, vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt1, v0, vt0 WHERE ((((v0.c0 IN ()))&(NULL))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt1, v0, vt0 WHERE ((NOT ((((v0.c0 IN ()))&(NULL))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt1, v0, vt0 WHERE ((((((v0.c0 IN ()))&(NULL))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt1, v0, vt0 GROUP BY vt0.c0;
SELECT vt1.c1 FROM vt1 GROUP BY vt1.c1;
SELECT vt1.c1 FROM vt1 GROUP BY vt1.c1 HAVING CAST(NULL AS TEXT) UNION ALL SELECT ALL vt1.c1 FROM vt1 GROUP BY vt1.c1 HAVING (NOT (CAST(NULL AS TEXT))) UNION ALL SELECT vt1.c1 FROM vt1 GROUP BY vt1.c1 HAVING ((CAST(NULL AS TEXT)) ISNULL);
SELECT vt1.c1 FROM vt1 GROUP BY vt1.c1;
SELECT vt1.c1 FROM vt1 GROUP BY vt1.c1 HAVING CAST(NULL AS TEXT) UNION ALL SELECT ALL vt1.c1 FROM vt1 GROUP BY vt1.c1 HAVING (NOT (CAST(NULL AS TEXT))) UNION ALL SELECT vt1.c1 FROM vt1 GROUP BY vt1.c1 HAVING ((CAST(NULL AS TEXT)) ISNULL);
SELECT vt1.c1 FROM vt1 GROUP BY vt1.c1;
SELECT v0.c0 FROM v0;
SELECT v0.c0 FROM v0 WHERE (((v0.c0) NOTNULL) COLLATE RTRIM) UNION ALL SELECT v0.c0 FROM v0 WHERE ((NOT (((v0.c0) NOTNULL) COLLATE RTRIM))) UNION ALL SELECT v0.c0 FROM v0 WHERE (((((v0.c0) NOTNULL) COLLATE RTRIM) ISNULL));
SELECT v0.c0 FROM v0;
SELECT DISTINCT * FROM vt0, v0, vt1;
SELECT DISTINCT * FROM vt0, v0, vt1 WHERE ((((vt0.c0, vt1.c0, v0.c0, vt0.c0, vt0.c1)) BETWEEN ((((((v0.c0)OR(v0.c0)))AND(vt1.c0)), 0Xffffffff89cc78ce, CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 ELSE vt1.c1 END, ((((((((v0.c0)OR(vt1.c1)))AND(vt0.c0)))AND(vt1.c1)))OR(vt1.c0)), ((vt1.c0) IS TRUE))) AND ((((((((((vt0.c1)AND(vt1.c1)))OR(0x1cde1a89)))OR(v0.c0)))OR(vt1.c0)), (- (vt1.c1)), CASE vt0.c1  WHEN vt0.c0 THEN v0.c0 ELSE v0.c0 END, vt0.c0, CAST(vt1.c1 AS BLOB))))) UNION SELECT DISTINCT * FROM vt0, v0 NOT INDEXED, vt1 WHERE ((NOT ((((vt0.c0, vt1.c0, v0.c0, vt0.c0, vt0.c1)) BETWEEN ((((((v0.c0)OR(v0.c0)))AND(vt1.c0)), 0xffffffff89cc78ce, CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 ELSE vt1.c1 END, ((((((((v0.c0)OR(vt1.c1)))AND(vt0.c0)))AND(vt1.c1)))OR(vt1.c0)), ((vt1.c0) IS TRUE))) AND ((((((((((vt0.c1)AND(vt1.c1)))OR(0X1cde1a89)))OR(v0.c0)))OR(vt1.c0)), (- (vt1.c1)), CASE vt0.c1  WHEN vt0.c0 THEN v0.c0 ELSE v0.c0 END, vt0.c0, CAST(vt1.c1 AS BLOB))))))) UNION SELECT DISTINCT * FROM vt0, v0, vt1 WHERE ((((((vt0.c0, vt1.c0, v0.c0, vt0.c0, vt0.c1)) BETWEEN ((((((v0.c0)OR(v0.c0)))AND(vt1.c0)), 0xffffffff89cc78ce, CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 ELSE vt1.c1 END, ((((((((v0.c0)OR(vt1.c1)))AND(vt0.c0)))AND(vt1.c1)))OR(vt1.c0)), ((vt1.c0) IS TRUE))) AND ((((((((((vt0.c1)AND(vt1.c1)))OR(0x1cde1a89)))OR(v0.c0)))OR(vt1.c0)), (- (vt1.c1)), CASE vt0.c1  WHEN vt0.c0 THEN v0.c0 ELSE v0.c0 END, vt0.c0, CAST(vt1.c1 AS BLOB))))) ISNULL));
SELECT DISTINCT * FROM vt0, v0, vt1;
SELECT v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0;
SELECT v0.c0, vt0.c0 FROM v0, vt0 WHERE ((- ((+ (v0.c0))))) GROUP BY v0.c0, vt0.c0 UNION SELECT v0.c0, vt0.c0 FROM v0, vt0 WHERE ((NOT ((- ((+ (v0.c0))))))) GROUP BY v0.c0, vt0.c0 UNION SELECT ALL v0.c0, vt0.c0 FROM v0, vt0 WHERE ((((- ((+ (v0.c0))))) ISNULL)) GROUP BY v0.c0, vt0.c0;
SELECT v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0;
SELECT ALL vt1.c1, vt1.c0, vt0.c0 FROM v0, vt0, vt1 GROUP BY vt1.c1, vt1.c0, vt0.c0;
SELECT ALL vt1.c1, vt1.c0, vt0.c0 FROM v0, vt0, vt1 GROUP BY vt1.c1, vt1.c0, vt0.c0 HAVING CAST(TOTAL(vt0.c0) AS TEXT) UNION ALL SELECT vt1.c1, vt1.c0, vt0.c0 FROM v0, vt0, vt1 GROUP BY vt1.c1, vt1.c0, vt0.c0 HAVING (NOT (CAST(TOTAL(vt0.c0) AS TEXT))) UNION ALL SELECT vt1.c1, vt1.c0, vt0.c0 FROM v0, vt0, vt1 GROUP BY vt1.c1, vt1.c0, vt0.c0 HAVING ((CAST(TOTAL(vt0.c0) AS TEXT)) ISNULL);
SELECT ALL vt1.c1, vt1.c0, vt0.c0 FROM v0, vt0, vt1 GROUP BY vt1.c1, vt1.c0, vt0.c0;
SELECT ALL vt1.c1, vt1.c0, vt0.c0 FROM v0, vt0, vt1 GROUP BY vt1.c1, vt1.c0, vt0.c0 HAVING CAST(TOTAL(vt0.c0) AS TEXT) UNION ALL SELECT vt1.c1, vt1.c0, vt0.c0 FROM v0, vt0, vt1 GROUP BY vt1.c1, vt1.c0, vt0.c0 HAVING (NOT (CAST(TOTAL(vt0.c0) AS TEXT))) UNION ALL SELECT vt1.c1, vt1.c0, vt0.c0 FROM v0, vt0, vt1 GROUP BY vt1.c1, vt1.c0, vt0.c0 HAVING ((CAST(TOTAL(vt0.c0) AS TEXT)) ISNULL);
SELECT ALL vt1.c1, vt1.c0, vt0.c0 FROM v0, vt0, vt1 GROUP BY vt1.c1, vt1.c0, vt0.c0;
SELECT ALL * FROM v0, vt1 FULL OUTER JOIN vt0 ON ((LIKELY(DISTINCT vt1.c1)) BETWEEN ((((vt1.c0))<>((vt1.c0)))) AND (0xffffffff9e3e92ce));
SELECT * FROM v0, vt1 FULL OUTER JOIN vt0 ON ((LIKELY(DISTINCT vt1.c1)) BETWEEN ((((vt1.c0))<>((vt1.c0)))) AND (0Xffffffff9e3e92ce)) WHERE ((((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c1)) IN ())) UNION ALL SELECT ALL * FROM v0, vt1 FULL OUTER JOIN vt0 ON ((LIKELY(DISTINCT vt1.c1)) BETWEEN ((((vt1.c0))<>((vt1.c0)))) AND (0Xffffffff9e3e92ce)) WHERE ((NOT ((((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c1)) IN ())))) UNION ALL SELECT ALL * FROM v0, vt1 FULL OUTER JOIN vt0 ON ((LIKELY(DISTINCT vt1.c1)) BETWEEN ((((vt1.c0))!=((vt1.c0)))) AND (0Xffffffff9e3e92ce)) WHERE ((((((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c1)) IN ())) ISNULL));
SELECT ALL * FROM v0, vt1 FULL OUTER JOIN vt0 ON ((LIKELY(DISTINCT vt1.c1)) BETWEEN ((((vt1.c0))<>((vt1.c0)))) AND (0xffffffff9e3e92ce));
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (v0.c0) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (v0.c0))) UNION SELECT DISTINCT * FROM v0 WHERE (((v0.c0) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c0, vt0.c1 FROM vt0 WHERE (((((vt0.c1)AND(vt0.c1)))AND(vt0.c0)) COLLATE BINARY) GROUP BY vt0.c0, vt0.c1 UNION SELECT ALL vt0.c0, vt0.c1 FROM vt0 WHERE ((NOT (((((vt0.c1)AND(vt0.c1)))AND(vt0.c0)) COLLATE BINARY))) GROUP BY vt0.c0, vt0.c1 UNION SELECT ALL vt0.c0, vt0.c1 FROM vt0 WHERE (((((((vt0.c1)AND(vt0.c1)))AND(vt0.c0)) COLLATE BINARY) ISNULL)) GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c1, vt1.c0, v0.c0, vt1.c1, vt0.c0 FROM vt1, v0 NATURAL JOIN vt0 GROUP BY vt0.c1, vt1.c0, v0.c0, vt1.c1, vt0.c0;
SELECT vt0.c1, vt1.c0, v0.c0, vt1.c1, vt0.c0 FROM vt1, v0 NATURAL JOIN vt0 GROUP BY vt0.c1, vt1.c0, v0.c0, vt1.c1, vt0.c0 HAVING MIN((vt1.c1 IN ())) UNION ALL SELECT vt0.c1, vt1.c0, v0.c0, vt1.c1, vt0.c0 FROM vt1, v0 NOT INDEXED NATURAL JOIN vt0 GROUP BY vt0.c1, vt1.c0, v0.c0, vt1.c1, vt0.c0 HAVING (NOT (MIN((vt1.c1 IN ())))) UNION ALL SELECT ALL vt0.c1, vt1.c0, v0.c0, vt1.c1, vt0.c0 FROM vt1, v0 NATURAL JOIN vt0 GROUP BY vt0.c1, vt1.c0, v0.c0, vt1.c1, vt0.c0 HAVING ((MIN((vt1.c1 IN ()))) ISNULL);
SELECT ALL vt0.c1, vt1.c0, v0.c0, vt1.c1, vt0.c0 FROM vt1, v0 NATURAL JOIN vt0 GROUP BY vt0.c1, vt1.c0, v0.c0, vt1.c1, vt0.c0;
SELECT vt0.c1, vt1.c0, v0.c0, vt1.c1, vt0.c0 FROM vt1, v0 NATURAL JOIN vt0 GROUP BY vt0.c1, vt1.c0, v0.c0, vt1.c1, vt0.c0 HAVING MIN((vt1.c1 IN ())) UNION ALL SELECT vt0.c1, vt1.c0, v0.c0, vt1.c1, vt0.c0 FROM vt1, v0 NOT INDEXED NATURAL JOIN vt0 GROUP BY vt0.c1, vt1.c0, v0.c0, vt1.c1, vt0.c0 HAVING (NOT (MIN((vt1.c1 IN ())))) UNION ALL SELECT ALL vt0.c1, vt1.c0, v0.c0, vt1.c1, vt0.c0 FROM vt1, v0 NATURAL JOIN vt0 GROUP BY vt0.c1, vt1.c0, v0.c0, vt1.c1, vt0.c0 HAVING ((MIN((vt1.c1 IN ()))) ISNULL);
SELECT ALL vt0.c1, vt1.c0, v0.c0, vt1.c1, vt0.c0 FROM vt1, v0 NATURAL JOIN vt0 GROUP BY vt0.c1, vt1.c0, v0.c0, vt1.c1, vt0.c0;
SELECT * FROM v0, vt1;
SELECT ALL * FROM v0, vt1 WHERE (((vt1.c0) ISNULL) COLLATE BINARY) UNION ALL SELECT ALL * FROM v0, vt1 WHERE ((NOT (((vt1.c0) ISNULL) COLLATE BINARY))) UNION ALL SELECT * FROM v0, vt1 WHERE (((((vt1.c0) ISNULL) COLLATE BINARY) ISNULL));
SELECT * FROM v0, vt1;
SELECT DISTINCT vt0.c1 FROM v0, vt0;
SELECT DISTINCT vt0.c1 FROM v0, vt0 WHERE (((v0.c0 COLLATE NOCASE)LIKE(NULL))) UNION SELECT DISTINCT vt0.c1 FROM v0, vt0 WHERE ((NOT (((v0.c0 COLLATE NOCASE)LIKE(NULL))))) UNION SELECT DISTINCT vt0.c1 FROM v0, vt0 WHERE (((((v0.c0 COLLATE NOCASE)LIKE(NULL))) ISNULL));
SELECT DISTINCT vt0.c1 FROM v0, vt0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) COLLATE NOCASE) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) COLLATE NOCASE))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE (((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) COLLATE NOCASE) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0, vt0.c0, vt0.c1 FROM v0 LEFT OUTER JOIN vt0 ON CAST(CAST(vt0.c1 AS REAL) AS REAL) GROUP BY v0.c0, vt0.c0, vt0.c1;
SELECT v0.c0, vt0.c0, vt0.c1 FROM v0 LEFT OUTER JOIN vt0 ON CAST(CAST(vt0.c1 AS REAL) AS REAL) GROUP BY v0.c0, vt0.c0, vt0.c1 HAVING COUNT(*) UNION ALL SELECT v0.c0, vt0.c0, vt0.c1 FROM v0 LEFT OUTER JOIN vt0 ON CAST(CAST(vt0.c1 AS REAL) AS REAL) GROUP BY v0.c0, vt0.c0, vt0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT v0.c0, vt0.c0, vt0.c1 FROM v0 LEFT OUTER JOIN vt0 ON CAST(CAST(vt0.c1 AS REAL) AS REAL) GROUP BY v0.c0, vt0.c0, vt0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT v0.c0, vt0.c0, vt0.c1 FROM v0 LEFT OUTER JOIN vt0 ON CAST(CAST(vt0.c1 AS REAL) AS REAL) GROUP BY v0.c0, vt0.c0, vt0.c1;
SELECT v0.c0, vt0.c0, vt0.c1 FROM v0 LEFT OUTER JOIN vt0 ON CAST(CAST(vt0.c1 AS REAL) AS REAL) GROUP BY v0.c0, vt0.c0, vt0.c1 HAVING COUNT(*) UNION ALL SELECT v0.c0, vt0.c0, vt0.c1 FROM v0 LEFT OUTER JOIN vt0 ON CAST(CAST(vt0.c1 AS REAL) AS REAL) GROUP BY v0.c0, vt0.c0, vt0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT v0.c0, vt0.c0, vt0.c1 FROM v0 LEFT OUTER JOIN vt0 ON CAST(CAST(vt0.c1 AS REAL) AS REAL) GROUP BY v0.c0, vt0.c0, vt0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT v0.c0, vt0.c0, vt0.c1 FROM v0 LEFT OUTER JOIN vt0 ON CAST(CAST(vt0.c1 AS REAL) AS REAL) GROUP BY v0.c0, vt0.c0, vt0.c1;
SELECT ALL * FROM vt0, v0, vt1;
SELECT * FROM vt0, v0, vt1 WHERE (CAST(((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)) AS INTEGER)) UNION ALL SELECT ALL * FROM vt0, v0, vt1 WHERE ((NOT (CAST(((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)) AS INTEGER)))) UNION ALL SELECT * FROM vt0, v0, vt1 WHERE (((CAST(((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)) AS INTEGER)) ISNULL));
SELECT ALL * FROM vt0, v0, vt1;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE (CAST(vt1.c0 COLLATE RTRIM AS NUMERIC)) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT (CAST(vt1.c0 COLLATE RTRIM AS NUMERIC)))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((CAST(vt1.c0 COLLATE RTRIM AS NUMERIC)) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT vt1.c1, vt0.c1, vt1.c0 FROM vt1, vt0 GROUP BY vt1.c1, vt0.c1, vt1.c0;
SELECT vt1.c1, vt0.c1, vt1.c0 FROM vt1, vt0 WHERE ((((vt1.c1, vt0.c1, x'4097')) NOT BETWEEN ((((((((((vt0.c0)AND(vt0.c1)))OR(vt0.c1)))OR(vt0.c1)))OR(vt0.c0)), vt0.c0, CASE WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c0 END)) AND (('', CAST(vt0.c0 AS REAL), ((((((((vt1.c0)AND(vt1.c1)))OR(vt1.c1)))OR(vt1.c1)))OR(vt0.c0)))))) GROUP BY vt1.c1, vt0.c1, vt1.c0 UNION SELECT ALL vt1.c1, vt0.c1, vt1.c0 FROM vt1, vt0 WHERE ((NOT ((((vt1.c1, vt0.c1, x'4097')) NOT BETWEEN ((((((((((vt0.c0)AND(vt0.c1)))OR(vt0.c1)))OR(vt0.c1)))OR(vt0.c0)), vt0.c0, CASE WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c0 END)) AND (('', CAST(vt0.c0 AS REAL), ((((((((vt1.c0)AND(vt1.c1)))OR(vt1.c1)))OR(vt1.c1)))OR(vt0.c0)))))))) GROUP BY vt1.c1, vt0.c1, vt1.c0 UNION SELECT vt1.c1, vt0.c1, vt1.c0 FROM vt1, vt0 WHERE ((((((vt1.c1, vt0.c1, x'4097')) NOT BETWEEN ((((((((((vt0.c0)AND(vt0.c1)))OR(vt0.c1)))OR(vt0.c1)))OR(vt0.c0)), vt0.c0, CASE WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c0 END)) AND (('', CAST(vt0.c0 AS REAL), ((((((((vt1.c0)AND(vt1.c1)))OR(vt1.c1)))OR(vt1.c1)))OR(vt0.c0)))))) ISNULL)) GROUP BY vt1.c1, vt0.c1, vt1.c0;
SELECT vt1.c1, vt0.c1, vt1.c0 FROM vt1, vt0 GROUP BY vt1.c1, vt0.c1, vt1.c0;
SELECT vt0.c0, vt1.c1 FROM vt1, vt0, v0 GROUP BY vt0.c0, vt1.c1;
SELECT ALL vt0.c0, vt1.c1 FROM vt1, vt0, v0 GROUP BY vt0.c0, vt1.c1 HAVING COUNT(*) UNION ALL SELECT ALL vt0.c0, vt1.c1 FROM vt1, vt0, v0 GROUP BY vt0.c0, vt1.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt0.c0, vt1.c1 FROM vt1, vt0, v0 GROUP BY vt0.c0, vt1.c1 HAVING ((COUNT(*)) ISNULL);
SELECT vt0.c0, vt1.c1 FROM vt1, vt0, v0 GROUP BY vt0.c0, vt1.c1;
SELECT ALL vt0.c0, vt1.c1 FROM vt1, vt0, v0 GROUP BY vt0.c0, vt1.c1 HAVING COUNT(*) UNION ALL SELECT ALL vt0.c0, vt1.c1 FROM vt1, vt0, v0 GROUP BY vt0.c0, vt1.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt0.c0, vt1.c1 FROM vt1, vt0, v0 GROUP BY vt0.c0, vt1.c1 HAVING ((COUNT(*)) ISNULL);
SELECT vt0.c0, vt1.c1 FROM vt1, vt0, v0 GROUP BY vt0.c0, vt1.c1;
SELECT ALL * FROM vt1, v0, vt0;
SELECT * FROM vt1, v0, vt0 WHERE (((vt1.c1) BETWEEN (((NULL) NOT BETWEEN (vt1.c1) AND (vt0.c1))) AND ((vt0.c0 IN (vt1.c1))))) UNION ALL SELECT * FROM vt1, v0, vt0 WHERE ((NOT (((vt1.c1) BETWEEN (((NULL) NOT BETWEEN (vt1.c1) AND (vt0.c1))) AND ((vt0.c0 IN (vt1.c1))))))) UNION ALL SELECT * FROM vt1, v0, vt0 WHERE (((((vt1.c1) BETWEEN (((NULL) NOT BETWEEN (vt1.c1) AND (vt0.c1))) AND ((vt0.c0 IN (vt1.c1))))) ISNULL));
SELECT ALL * FROM vt1, v0, vt0;
SELECT DISTINCT * FROM vt0 FULL OUTER JOIN v0 ON CAST((NULL IN ()) AS INTEGER);
SELECT DISTINCT * FROM vt0 FULL OUTER JOIN v0 ON CAST((NULL IN ()) AS INTEGER) WHERE (CASE WHEN ((vt0.c1)*(vt0.c1)) THEN (((vt0.c0, '1395194600', vt0.c0))>((vt0.c1, v0.c0, v0.c0))) END) UNION SELECT DISTINCT * FROM vt0 FULL OUTER JOIN v0 ON CAST((NULL IN ()) AS INTEGER) WHERE ((NOT (CASE WHEN ((vt0.c1)*(vt0.c1)) THEN (((vt0.c0, '1395194600', vt0.c0))>((vt0.c1, v0.c0, v0.c0))) END))) UNION SELECT DISTINCT * FROM vt0 FULL OUTER JOIN v0 ON CAST((NULL IN ()) AS INTEGER) WHERE (((CASE WHEN ((vt0.c1)*(vt0.c1)) THEN (((vt0.c0, '1395194600', vt0.c0))>((vt0.c1, v0.c0, v0.c0))) END) ISNULL));
SELECT DISTINCT * FROM vt0 FULL OUTER JOIN v0 ON CAST((NULL IN ()) AS INTEGER);
SELECT ALL vt1.c1, vt1.c0, v0.c0 FROM vt1, v0 GROUP BY vt1.c1, vt1.c0, v0.c0;
SELECT vt1.c1, vt1.c0, v0.c0 FROM vt1, v0 WHERE (((((vt1.c1) NOT BETWEEN (vt1.c1) AND (v0.c0)))IS NOT(vt1.c1))) GROUP BY vt1.c1, vt1.c0, v0.c0 UNION SELECT vt1.c1, vt1.c0, v0.c0 FROM vt1, v0 WHERE ((NOT (((((vt1.c1) NOT BETWEEN (vt1.c1) AND (v0.c0)))IS NOT(vt1.c1))))) GROUP BY vt1.c1, vt1.c0, v0.c0 UNION SELECT ALL vt1.c1, vt1.c0, v0.c0 FROM vt1, v0 WHERE (((((((vt1.c1) NOT BETWEEN (vt1.c1) AND (v0.c0)))IS NOT(vt1.c1))) ISNULL)) GROUP BY vt1.c1, vt1.c0, v0.c0;
SELECT ALL vt1.c1, vt1.c0, v0.c0 FROM vt1, v0 GROUP BY vt1.c1, vt1.c0, v0.c0;
SELECT ALL vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1;
SELECT vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1 HAVING ((vt1.c1) NOT NULL) COLLATE NOCASE UNION ALL SELECT vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1 HAVING (NOT (((vt1.c1) NOT NULL) COLLATE NOCASE)) UNION ALL SELECT ALL vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1 HAVING ((((vt1.c1) NOT NULL) COLLATE NOCASE) ISNULL);
SELECT ALL vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1;
SELECT vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1 HAVING ((vt1.c1) NOT NULL) COLLATE NOCASE UNION ALL SELECT vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1 HAVING (NOT (((vt1.c1) NOT NULL) COLLATE NOCASE)) UNION ALL SELECT ALL vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1 HAVING ((((vt1.c1) NOT NULL) COLLATE NOCASE) ISNULL);
SELECT ALL vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1;
SELECT ALL * FROM vt0;
SELECT ALL * FROM vt0 WHERE (((((vt0.c0) NOT NULL))<=(((vt0.c1) NOTNULL)))) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (((((vt0.c0) NOT NULL))<=(((vt0.c1) NOTNULL)))))) UNION ALL SELECT ALL * FROM vt0 WHERE (((((((vt0.c0) NOT NULL))<=(((vt0.c1) NOTNULL)))) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (x'6938ebfd8d06' COLLATE BINARY) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (x'6938ebfd8d06' COLLATE BINARY))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((x'6938ebfd8d06' COLLATE BINARY) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT vt1.c0, vt0.c1 FROM vt0 FULL OUTER JOIN vt1 ON ((vt1.c0) ISNULL) COLLATE BINARY GROUP BY vt1.c0, vt0.c1;
SELECT ALL vt1.c0, vt0.c1 FROM vt0 FULL OUTER JOIN vt1 ON ((vt1.c0) ISNULL) COLLATE BINARY WHERE (((((vt0.c0) ISNULL)) IS FALSE)) GROUP BY vt1.c0, vt0.c1 UNION SELECT vt1.c0, vt0.c1 FROM vt0 NOT INDEXED FULL OUTER JOIN vt1 ON ((vt1.c0) ISNULL) COLLATE BINARY WHERE ((NOT (((((vt0.c0) ISNULL)) IS FALSE)))) GROUP BY vt1.c0, vt0.c1 UNION SELECT vt1.c0, vt0.c1 FROM vt0 FULL OUTER JOIN vt1 ON ((vt1.c0) ISNULL) COLLATE BINARY WHERE (((((((vt0.c0) ISNULL)) IS FALSE)) ISNULL)) GROUP BY vt1.c0, vt0.c1;
SELECT vt1.c0, vt0.c1 FROM vt0 FULL OUTER JOIN vt1 ON ((vt1.c0) ISNULL) COLLATE BINARY GROUP BY vt1.c0, vt0.c1;
SELECT ALL vt0.c0, v0.c0, vt0.c1, vt1.c1 FROM v0, vt0, vt1 GROUP BY vt0.c0, v0.c0, vt0.c1, vt1.c1;
SELECT ALL vt0.c0, v0.c0, vt0.c1, vt1.c1 FROM v0, vt0, vt1 GROUP BY vt0.c0, v0.c0, vt0.c1, vt1.c1 HAVING AVG(((vt1.c1)>=(COUNT(*)))) UNION ALL SELECT vt0.c0, v0.c0, vt0.c1, vt1.c1 FROM v0, vt0, vt1 GROUP BY vt0.c0, v0.c0, vt0.c1, vt1.c1 HAVING (NOT (AVG(((vt1.c1)>=(COUNT(*)))))) UNION ALL SELECT ALL vt0.c0, v0.c0, vt0.c1, vt1.c1 FROM v0, vt0, vt1 GROUP BY vt0.c0, v0.c0, vt0.c1, vt1.c1 HAVING ((AVG(((vt1.c1)>=(COUNT(*))))) ISNULL);
SELECT ALL SUM(-550253102) FROM vt1, v0, vt0;
SELECT vt1.c1, vt1.c0, v0.c0 FROM v0 LEFT OUTER JOIN vt1 ON (((vt1.c0, vt1.c1, -1186733430, vt1.c1, v0.c0)) NOT BETWEEN ((CASE ''  WHEN v0.c0 THEN vt0.c1 END, (vt1.c1 IN ()), (v0.c0 IN ()), (((v0.c0, vt0.c1, vt0.c0)) NOT BETWEEN (('x_', vt1.c0, vt0.c1)) AND ((vt1.c0, vt0.c1, v0.c0))), (((vt1.c1, vt0.c0, vt0.c0))<=((NULL, vt1.c1, vt0.c0))))) AND ((((((vt0.c0)AND(vt0.c0)))OR(vt1.c0)), CAST(v0.c0 AS REAL), x'', CASE WHEN vt0.c0 THEN vt0.c0 END, ((vt0.c1)<(vt1.c1))))) RIGHT OUTER JOIN vt0 ON (~ ('o9%f' COLLATE BINARY));
SELECT DISTINCT vt0.c0, vt0.c1, vt1.c0, v0.c0 FROM vt1, vt0 LEFT OUTER JOIN v0 ON CASE WHEN vt1.c1 THEN (((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))) ELSE (NOT (vt1.c0)) END;
SELECT DISTINCT vt0.c0, vt0.c1, vt1.c0, v0.c0 FROM vt1, vt0 LEFT OUTER JOIN v0 ON CASE WHEN vt1.c1 THEN (((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))) ELSE (NOT (vt1.c0)) END WHERE (((((((vt1.c0)+(vt0.c1)))AND((vt0.c0 IN ()))))OR((((vt0.c1))>=((vt0.c1)))))) UNION SELECT DISTINCT vt0.c0, vt0.c1, vt1.c0, v0.c0 FROM vt1, vt0 LEFT OUTER JOIN v0 ON CASE WHEN vt1.c1 THEN (((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))) ELSE (NOT (vt1.c0)) END WHERE ((NOT (((((((vt1.c0)+(vt0.c1)))AND((vt0.c0 IN ()))))OR((((vt0.c1))>=((vt0.c1)))))))) UNION SELECT DISTINCT vt0.c0, vt0.c1, vt1.c0, v0.c0 FROM vt1, vt0 LEFT OUTER JOIN v0 ON CASE WHEN vt1.c1 THEN (((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))) ELSE (NOT (vt1.c0)) END WHERE (((((((((vt1.c0)+(vt0.c1)))AND((vt0.c0 IN ()))))OR((((vt0.c1))>=((vt0.c1)))))) ISNULL));
SELECT DISTINCT vt0.c0, vt0.c1, vt1.c0, v0.c0 FROM vt1, vt0 LEFT OUTER JOIN v0 ON CASE WHEN vt1.c1 THEN (((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))) ELSE (NOT (vt1.c0)) END;
SELECT ALL vt0.c0, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c0;
SELECT vt0.c0, vt1.c0 FROM vt1, vt0 WHERE (((((ABS(DISTINCT vt1.c1))OR(vt1.c0)))OR('tâº£Iv'))) GROUP BY vt0.c0, vt1.c0 UNION SELECT ALL vt0.c0, vt1.c0 FROM vt1, vt0 WHERE ((NOT (((((ABS(DISTINCT vt1.c1))OR(vt1.c0)))OR('tâº£Iv'))))) GROUP BY vt0.c0, vt1.c0 UNION SELECT vt0.c0, vt1.c0 FROM vt1, vt0 WHERE (((((((ABS(DISTINCT vt1.c1))OR(vt1.c0)))OR('tâº£Iv'))) ISNULL)) GROUP BY vt0.c0, vt1.c0;
SELECT ALL vt0.c0, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING COUNT(*) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING COUNT(*) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT * FROM v0;
SELECT * FROM v0 WHERE ((+ ((+ (v0.c0))))) UNION ALL SELECT ALL * FROM v0 WHERE ((NOT ((+ ((+ (v0.c0))))))) UNION ALL SELECT * FROM v0 WHERE ((((+ ((+ (v0.c0))))) ISNULL));
SELECT * FROM v0;
SELECT DISTINCT * FROM vt0, vt1, v0;
SELECT DISTINCT * FROM vt0, vt1, v0 WHERE ((~ (((vt1.c1) NOT BETWEEN (vt1.c0) AND (v0.c0))))) UNION SELECT DISTINCT * FROM vt0, vt1, v0 WHERE ((NOT ((~ (((vt1.c1) NOT BETWEEN (vt1.c0) AND (v0.c0))))))) UNION SELECT DISTINCT * FROM vt0, vt1, v0 WHERE ((((~ (((vt1.c1) NOT BETWEEN (vt1.c0) AND (v0.c0))))) ISNULL));
SELECT DISTINCT * FROM vt0, vt1, v0;
SELECT v0.c0, vt0.c1, vt0.c0 FROM vt0 RIGHT OUTER JOIN v0 ON ((vt0.c1)>=(vt0.c1)) COLLATE NOCASE GROUP BY v0.c0, vt0.c1, vt0.c0;
SELECT ALL v0.c0, vt0.c1, vt0.c0 FROM vt0 RIGHT OUTER JOIN v0 ON ((vt0.c1)>=(vt0.c1)) COLLATE NOCASE WHERE (CAST((((v0.c0))>((vt0.c0))) AS INTEGER)) GROUP BY v0.c0, vt0.c1, vt0.c0 UNION SELECT ALL v0.c0, vt0.c1, vt0.c0 FROM vt0 RIGHT OUTER JOIN v0 ON ((vt0.c1)>=(vt0.c1)) COLLATE NOCASE WHERE ((NOT (CAST((((v0.c0))>((vt0.c0))) AS INTEGER)))) GROUP BY v0.c0, vt0.c1, vt0.c0 UNION SELECT ALL v0.c0, vt0.c1, vt0.c0 FROM vt0 RIGHT OUTER JOIN v0 ON ((vt0.c1)>=(vt0.c1)) COLLATE NOCASE WHERE (((CAST((((v0.c0))>((vt0.c0))) AS INTEGER)) ISNULL)) GROUP BY v0.c0, vt0.c1, vt0.c0;
SELECT v0.c0, vt0.c1, vt0.c0 FROM vt0 RIGHT OUTER JOIN v0 ON ((vt0.c1)>=(vt0.c1)) COLLATE NOCASE GROUP BY v0.c0, vt0.c1, vt0.c0;
SELECT ALL vt0.c1, vt1.c0, vt0.c0 FROM vt1 CROSS JOIN vt0 ON CASE ((((vt1.c0)OR(v0.c0)))OR(v0.c0))  WHEN (vt1.c0 IN ()) THEN ((vt0.c1)&(v0.c0)) END FULL OUTER JOIN v0 ON ((+ (vt0.c0)) IN ()) GROUP BY vt0.c1, vt1.c0, vt0.c0;
SELECT ALL v0.c0 FROM v0;
SELECT v0.c0 FROM v0 WHERE (((CAST(v0.c0 AS BLOB)) BETWEEN (LIKELY(v0.c0)) AND (((v0.c0) NOT NULL)))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE ((NOT (((CAST(v0.c0 AS BLOB)) BETWEEN (LIKELY(v0.c0)) AND (((v0.c0) NOT NULL)))))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE (((((CAST(v0.c0 AS BLOB)) BETWEEN (LIKELY(v0.c0)) AND (((v0.c0) NOT NULL)))) ISNULL));
SELECT ALL v0.c0 FROM v0;
SELECT DISTINCT * FROM v0, vt1, vt0;
SELECT DISTINCT * FROM v0, vt1, vt0 WHERE (CAST(((((v0.c0)OR(v0.c0)))OR(vt0.c1)) AS NUMERIC)) UNION SELECT DISTINCT * FROM v0, vt1, vt0 WHERE ((NOT (CAST(((((v0.c0)OR(v0.c0)))OR(vt0.c1)) AS NUMERIC)))) UNION SELECT DISTINCT * FROM v0, vt1, vt0 WHERE (((CAST(((((v0.c0)OR(v0.c0)))OR(vt0.c1)) AS NUMERIC)) ISNULL));
SELECT DISTINCT * FROM v0, vt1, vt0;
SELECT ALL vt1.c0, vt1.c1, v0.c0 FROM v0, vt1 GROUP BY vt1.c0, vt1.c1, v0.c0;
SELECT ALL vt1.c0, vt1.c1, v0.c0 FROM v0, vt1 WHERE (CAST(vt1.c0 AS NUMERIC) COLLATE BINARY) GROUP BY vt1.c0, vt1.c1, v0.c0 UNION SELECT vt1.c0, vt1.c1, v0.c0 FROM v0, vt1 WHERE ((NOT (CAST(vt1.c0 AS NUMERIC) COLLATE BINARY))) GROUP BY vt1.c0, vt1.c1, v0.c0 UNION SELECT ALL vt1.c0, vt1.c1, v0.c0 FROM v0, vt1 WHERE (((CAST(vt1.c0 AS NUMERIC) COLLATE BINARY) ISNULL)) GROUP BY vt1.c0, vt1.c1, v0.c0;
SELECT ALL vt1.c0, vt1.c1, v0.c0 FROM v0, vt1 GROUP BY vt1.c0, vt1.c1, v0.c0;
SELECT vt1.c1 FROM vt1, v0 GROUP BY vt1.c1;
SELECT ALL vt1.c1 FROM vt1, v0 GROUP BY vt1.c1 HAVING ((COUNT(COUNT(SUM(vt1.c0))))OR(CAST(MAX(vt1.c0) AS REAL))) UNION ALL SELECT vt1.c1 FROM vt1, v0 GROUP BY vt1.c1 HAVING (NOT (((COUNT(COUNT(SUM(vt1.c0))))OR(CAST(MAX(vt1.c0) AS REAL))))) UNION ALL SELECT ALL vt1.c1 FROM vt1, v0 GROUP BY vt1.c1 HAVING ((((COUNT(COUNT(SUM(vt1.c0))))OR(CAST(MAX(vt1.c0) AS REAL)))) ISNULL);
SELECT ALL vt0.c1, vt0.c0 FROM vt0;
SELECT vt0.c1, vt0.c0 FROM vt0 WHERE ((- (CAST(vt0.c1 AS NUMERIC)))) UNION ALL SELECT vt0.c1, vt0.c0 FROM vt0 WHERE ((NOT ((- (CAST(vt0.c1 AS NUMERIC)))))) UNION ALL SELECT vt0.c1, vt0.c0 FROM vt0 WHERE ((((- (CAST(vt0.c1 AS NUMERIC)))) ISNULL));
SELECT ALL vt0.c1, vt0.c0 FROM vt0;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (((((vt1.c0))<((NULL))) IN ())) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (((((vt1.c0))<((NULL))) IN ())))) UNION SELECT DISTINCT * FROM vt1 WHERE (((((((vt1.c0))<((NULL))) IN ())) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT ALL vt0.c0 FROM v0, vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM v0, vt0 WHERE (((((v0.c0) IS FALSE)) NOT BETWEEN (v0.c0) AND ((NOT (vt0.c1))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM v0, vt0 WHERE ((NOT (((((v0.c0) IS FALSE)) NOT BETWEEN (v0.c0) AND ((NOT (vt0.c1))))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM v0, vt0 WHERE (((((((v0.c0) IS FALSE)) NOT BETWEEN (v0.c0) AND ((NOT (vt0.c1))))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM v0, vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING CASE ((MIN(vt0.c1)) NOT BETWEEN (SUM(vt0.c1)) AND (SUM(vt0.c1)))  WHEN (((vt0.c1))<=((AVG(vt0.c0)))) THEN TOTAL(COUNT(*)) ELSE GROUP_CONCAT(vt0.c0) END UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (CASE ((MIN(vt0.c1)) NOT BETWEEN (SUM(vt0.c1)) AND (SUM(vt0.c1)))  WHEN (((vt0.c1))<=((AVG(vt0.c0)))) THEN TOTAL(COUNT(*)) ELSE GROUP_CONCAT(vt0.c0) END)) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((CASE ((MIN(vt0.c1)) NOT BETWEEN (SUM(vt0.c1)) AND (SUM(vt0.c1)))  WHEN (((vt0.c1))<=((AVG(vt0.c0)))) THEN TOTAL(COUNT(*)) ELSE GROUP_CONCAT(vt0.c0) END) ISNULL);
SELECT * FROM vt0, v0;
SELECT * FROM vt0, v0 WHERE (vt0.c1) UNION ALL SELECT ALL * FROM vt0, v0 WHERE ((NOT (vt0.c1))) UNION ALL SELECT * FROM vt0, v0 WHERE (((vt0.c1) ISNULL));
SELECT * FROM vt0, v0;
SELECT DISTINCT * FROM vt0, v0, vt1;
SELECT DISTINCT * FROM vt0, v0, vt1 WHERE ((CASE WHEN vt0.c0 THEN '' ELSE v0.c0 END IN ())) UNION SELECT DISTINCT * FROM vt0, v0, vt1 WHERE ((NOT ((CASE WHEN vt0.c0 THEN '' ELSE v0.c0 END IN ())))) UNION SELECT DISTINCT * FROM vt0, v0, vt1 WHERE ((((CASE WHEN vt0.c0 THEN '' ELSE v0.c0 END IN ())) ISNULL));
SELECT DISTINCT * FROM vt0, v0, vt1;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (((v0.c0)%(v0.c0)) COLLATE BINARY) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (((v0.c0)%(v0.c0)) COLLATE BINARY))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE (((((v0.c0)%(v0.c0)) COLLATE BINARY) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING AVG(AVG('')) UNION ALL SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING (NOT (AVG(AVG('')))) UNION ALL SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING ((AVG(AVG(''))) ISNULL);
SELECT ALL * FROM vt1;
SELECT * FROM vt1 WHERE (((((vt1.c1) NOT NULL)) NOT NULL)) UNION ALL SELECT * FROM vt1 WHERE ((NOT (((((vt1.c1) NOT NULL)) NOT NULL)))) UNION ALL SELECT ALL * FROM vt1 WHERE (((((((vt1.c1) NOT NULL)) NOT NULL)) ISNULL));
SELECT ALL * FROM vt1;
SELECT DISTINCT vt0.c0, v0.c0, vt1.c0, vt0.c1, vt1.c1 FROM vt0 LEFT OUTER JOIN v0 ON ((LOWER(DISTINCT v0.c0)) BETWEEN ('' COLLATE BINARY) AND (((v0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)))) FULL OUTER JOIN vt1 ON ((((vt0.c1)*(vt1.c0)))<>(((vt1.c0) ISNULL)));
SELECT DISTINCT vt0.c0, v0.c0, vt1.c0, vt0.c1, vt1.c1 FROM vt0 LEFT OUTER JOIN v0 ON ((LOWER(DISTINCT v0.c0)) BETWEEN ('' COLLATE BINARY) AND (((v0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)))) FULL OUTER JOIN vt1 ON ((((vt0.c1)*(vt1.c0)))!=(((vt1.c0) ISNULL))) WHERE (x'') UNION SELECT DISTINCT vt0.c0, v0.c0, vt1.c0, vt0.c1, vt1.c1 FROM vt0 LEFT OUTER JOIN v0 ON ((LOWER(DISTINCT v0.c0)) BETWEEN ('' COLLATE BINARY) AND (((v0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)))) FULL OUTER JOIN vt1 ON ((((vt0.c1)*(vt1.c0)))<>(((vt1.c0) ISNULL))) WHERE ((NOT (x''))) UNION SELECT DISTINCT vt0.c0, v0.c0, vt1.c0, vt0.c1, vt1.c1 FROM vt0 LEFT OUTER JOIN v0 ON ((LOWER(DISTINCT v0.c0)) BETWEEN ('' COLLATE BINARY) AND (((v0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)))) FULL OUTER JOIN vt1 ON ((((vt0.c1)*(vt1.c0)))!=(((vt1.c0) ISNULL))) WHERE (((x'') ISNULL));
SELECT DISTINCT vt0.c0, v0.c0, vt1.c0, vt0.c1, vt1.c1 FROM vt0 LEFT OUTER JOIN v0 ON ((LOWER(DISTINCT v0.c0)) BETWEEN ('' COLLATE BINARY) AND (((v0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)))) FULL OUTER JOIN vt1 ON ((((vt0.c1)*(vt1.c0)))<>(((vt1.c0) ISNULL)));
SELECT vt1.c1 FROM vt1, vt0 GROUP BY vt1.c1;
SELECT vt1.c1 FROM vt1, vt0 WHERE (vt0.c0) GROUP BY vt1.c1 UNION SELECT ALL vt1.c1 FROM vt1, vt0 WHERE ((NOT (vt0.c0))) GROUP BY vt1.c1 UNION SELECT ALL vt1.c1 FROM vt1, vt0 WHERE (((vt0.c0) ISNULL)) GROUP BY vt1.c1;
SELECT vt1.c1 FROM vt1, vt0 GROUP BY vt1.c1;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (- (v0.c0)) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT ((- (v0.c0)))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (((- (v0.c0))) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (- (v0.c0)) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT ((- (v0.c0)))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (((- (v0.c0))) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL * FROM vt0, vt1;
SELECT ALL * FROM vt0, vt1 WHERE ((+ (((vt0.c0)GLOB(vt1.c0))))) UNION ALL SELECT * FROM vt0, vt1 WHERE ((NOT ((+ (((vt0.c0)GLOB(vt1.c0))))))) UNION ALL SELECT ALL * FROM vt0, vt1 WHERE ((((+ (((vt0.c0)GLOB(vt1.c0))))) ISNULL));
SELECT ALL * FROM vt0, vt1;
SELECT DISTINCT vt1.c0, vt0.c1, vt1.c1 FROM vt1, vt0;
SELECT DISTINCT vt1.c0, vt0.c1, vt1.c1 FROM vt1, vt0 WHERE (vt0.c0) UNION SELECT DISTINCT vt1.c0, vt0.c1, vt1.c1 FROM vt1, vt0 WHERE ((NOT (vt0.c0))) UNION SELECT DISTINCT vt1.c0, vt0.c1, vt1.c1 FROM vt1, vt0 WHERE (((vt0.c0) ISNULL));
SELECT DISTINCT vt1.c0, vt0.c1, vt1.c1 FROM vt1, vt0;
SELECT ALL v0.c0, vt1.c0 FROM v0, vt0, vt1 GROUP BY v0.c0, vt1.c0;
SELECT v0.c0, vt1.c0 FROM v0, vt0, vt1 WHERE ((((('-1276464350')OR(NULL COLLATE NOCASE)))AND(((v0.c0)%(v0.c0))))) GROUP BY v0.c0, vt1.c0 UNION SELECT ALL v0.c0, vt1.c0 FROM v0, vt0, vt1 WHERE ((NOT ((((('-1276464350')OR(NULL COLLATE NOCASE)))AND(((v0.c0)%(v0.c0))))))) GROUP BY v0.c0, vt1.c0 UNION SELECT v0.c0, vt1.c0 FROM v0, vt0, vt1 WHERE ((((((('-1276464350')OR(NULL COLLATE NOCASE)))AND(((v0.c0)%(v0.c0))))) ISNULL)) GROUP BY v0.c0, vt1.c0;
SELECT ALL v0.c0, vt1.c0 FROM v0, vt0, vt1 GROUP BY v0.c0, vt1.c0;
SELECT vt1.c1, vt1.c0 FROM v0, vt1 GROUP BY vt1.c1, vt1.c0;
SELECT ALL vt1.c1, vt1.c0 FROM v0, vt1 GROUP BY vt1.c1, vt1.c0 HAVING (((CASE vt1.c1  WHEN AVG(GROUP_CONCAT(MAX(MIN(TOTAL(SUM(vt1.c0)))))) THEN vt1.c0 END, AVG(SUM(vt1.c0)), (COUNT(*) IN ())))!=((AVG(vt1.c1), MIN(AVG(SUM(vt1.c0))), UNICODE(NULL)))) UNION ALL SELECT vt1.c1, vt1.c0 FROM v0, vt1 GROUP BY vt1.c1, vt1.c0 HAVING (NOT ((((CASE vt1.c1  WHEN AVG(GROUP_CONCAT(MAX(MIN(TOTAL(SUM(vt1.c0)))))) THEN vt1.c0 END, AVG(SUM(vt1.c0)), (COUNT(*) IN ())))!=((AVG(vt1.c1), MIN(AVG(SUM(vt1.c0))), UNICODE(NULL)))))) UNION ALL SELECT vt1.c1, vt1.c0 FROM v0, vt1 GROUP BY vt1.c1, vt1.c0 HAVING (((((CASE vt1.c1  WHEN AVG(GROUP_CONCAT(MAX(MIN(TOTAL(SUM(vt1.c0)))))) THEN vt1.c0 END, AVG(SUM(vt1.c0)), (COUNT(*) IN ())))!=((AVG(vt1.c1), MIN(AVG(SUM(vt1.c0))), UNICODE(NULL))))) ISNULL);
SELECT ALL vt0.c1, vt0.c0 FROM vt0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 WHERE (((((((0.09879830458755123) ISNULL))OR(((vt0.c1)OR(vt0.c1)))))OR(vt0.c1 COLLATE RTRIM))) UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM vt0 WHERE ((NOT (((((((0.09879830458755123) ISNULL))OR(((vt0.c1)OR(vt0.c1)))))OR(vt0.c1 COLLATE RTRIM))))) UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM vt0 WHERE (((((((((0.09879830458755123) ISNULL))OR(((vt0.c1)OR(vt0.c1)))))OR(vt0.c1 COLLATE RTRIM))) ISNULL));
SELECT ALL vt0.c1, vt0.c0 FROM vt0;
SELECT DISTINCT v0.c0 FROM v0, vt0;
SELECT DISTINCT v0.c0 FROM v0, vt0 WHERE ((- (((v0.c0) IS FALSE)))) UNION SELECT DISTINCT v0.c0 FROM v0, vt0 WHERE ((NOT ((- (((v0.c0) IS FALSE)))))) UNION SELECT DISTINCT v0.c0 FROM v0, vt0 WHERE ((((- (((v0.c0) IS FALSE)))) ISNULL));
SELECT DISTINCT v0.c0 FROM v0, vt0;
SELECT v0.c0 FROM v0, vt0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0, vt0 WHERE (vt0.c0) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0, vt0 WHERE ((NOT (vt0.c0))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0, vt0 WHERE (((vt0.c0) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0, vt0 GROUP BY v0.c0;
SELECT ALL vt1.c0, v0.c0, vt0.c0, vt1.c1, vt0.c1 FROM vt1, vt0, v0 GROUP BY vt1.c0, v0.c0, vt0.c0, vt1.c1, vt0.c1;
SELECT ALL vt1.c0, v0.c0, vt0.c0, vt1.c1, vt0.c1 FROM vt1, vt0, v0 NOT INDEXED GROUP BY vt1.c0, v0.c0, vt0.c0, vt1.c1, vt0.c1 HAVING vt1.c0 UNION ALL SELECT vt1.c0, v0.c0, vt0.c0, vt1.c1, vt0.c1 FROM vt1, vt0, v0 GROUP BY vt1.c0, v0.c0, vt0.c0, vt1.c1, vt0.c1 HAVING (NOT (vt1.c0)) UNION ALL SELECT ALL vt1.c0, v0.c0, vt0.c0, vt1.c1, vt0.c1 FROM vt1, vt0, v0 GROUP BY vt1.c0, v0.c0, vt0.c0, vt1.c1, vt0.c1 HAVING ((vt1.c0) ISNULL);
SELECT ALL vt1.c0, v0.c0, vt0.c0, vt1.c1, vt0.c1 FROM vt1, vt0, v0 GROUP BY vt1.c0, v0.c0, vt0.c0, vt1.c1, vt0.c1;
SELECT ALL vt1.c0, v0.c0, vt0.c0, vt1.c1, vt0.c1 FROM vt1, vt0, v0 NOT INDEXED GROUP BY vt1.c0, v0.c0, vt0.c0, vt1.c1, vt0.c1 HAVING vt1.c0 UNION ALL SELECT vt1.c0, v0.c0, vt0.c0, vt1.c1, vt0.c1 FROM vt1, vt0, v0 GROUP BY vt1.c0, v0.c0, vt0.c0, vt1.c1, vt0.c1 HAVING (NOT (vt1.c0)) UNION ALL SELECT ALL vt1.c0, v0.c0, vt0.c0, vt1.c1, vt0.c1 FROM vt1, vt0, v0 GROUP BY vt1.c0, v0.c0, vt0.c0, vt1.c1, vt0.c1 HAVING ((vt1.c0) ISNULL);
SELECT ALL vt1.c0, v0.c0, vt0.c0, vt1.c1, vt0.c1 FROM vt1, vt0, v0 GROUP BY vt1.c0, v0.c0, vt0.c0, vt1.c1, vt0.c1;
SELECT ALL vt1.c1, vt1.c0 FROM vt1;
SELECT vt1.c1, vt1.c0 FROM vt1 WHERE (((vt1.c0) IS FALSE)) UNION ALL SELECT ALL vt1.c1, vt1.c0 FROM vt1 WHERE ((NOT (((vt1.c0) IS FALSE)))) UNION ALL SELECT ALL vt1.c1, vt1.c0 FROM vt1 WHERE (((((vt1.c0) IS FALSE)) ISNULL));
SELECT ALL vt1.c1, vt1.c0 FROM vt1;
SELECT DISTINCT * FROM vt1, v0 FULL OUTER JOIN vt0 ON ((((v0.c0, vt0.c1, vt1.c1)) NOT BETWEEN ((vt1.c0, vt1.c0, v0.c0)) AND ((vt1.c0, vt1.c1, v0.c0))) IN (((vt1.c0) IS TRUE)));
SELECT DISTINCT * FROM vt1, v0 FULL OUTER JOIN vt0 ON ((((v0.c0, vt0.c1, vt1.c1)) NOT BETWEEN ((vt1.c0, vt1.c0, v0.c0)) AND ((vt1.c0, vt1.c1, v0.c0))) IN (((vt1.c0) IS TRUE))) WHERE ('wd') UNION SELECT DISTINCT * FROM vt1, v0 FULL OUTER JOIN vt0 ON ((((v0.c0, vt0.c1, vt1.c1)) NOT BETWEEN ((vt1.c0, vt1.c0, v0.c0)) AND ((vt1.c0, vt1.c1, v0.c0))) IN (((vt1.c0) IS TRUE))) WHERE ((NOT ('wd'))) UNION SELECT DISTINCT * FROM vt1, v0 FULL OUTER JOIN vt0 ON ((((v0.c0, vt0.c1, vt1.c1)) NOT BETWEEN ((vt1.c0, vt1.c0, v0.c0)) AND ((vt1.c0, vt1.c1, v0.c0))) IN (((vt1.c0) IS TRUE))) WHERE ((('wd') ISNULL));
SELECT DISTINCT * FROM vt1, v0 FULL OUTER JOIN vt0 ON ((((v0.c0, vt0.c1, vt1.c1)) NOT BETWEEN ((vt1.c0, vt1.c0, v0.c0)) AND ((vt1.c0, vt1.c1, v0.c0))) IN (((vt1.c0) IS TRUE)));
SELECT v0.c0, vt0.c0, vt0.c1 FROM vt0, v0 GROUP BY v0.c0, vt0.c0, vt0.c1;
SELECT ALL v0.c0, vt0.c0, vt0.c1 FROM vt0, v0 WHERE ((((vt0.c0 IN ())) NOT BETWEEN (((vt0.c0)IS NOT(vt0.c1))) AND (CAST(vt0.c1 AS INTEGER)))) GROUP BY v0.c0, vt0.c0, vt0.c1 UNION SELECT ALL v0.c0, vt0.c0, vt0.c1 FROM vt0, v0 WHERE ((NOT ((((vt0.c0 IN ())) NOT BETWEEN (((vt0.c0)IS NOT(vt0.c1))) AND (CAST(vt0.c1 AS INTEGER)))))) GROUP BY v0.c0, vt0.c0, vt0.c1 UNION SELECT ALL v0.c0, vt0.c0, vt0.c1 FROM vt0, v0 WHERE ((((((vt0.c0 IN ())) NOT BETWEEN (((vt0.c0)IS NOT(vt0.c1))) AND (CAST(vt0.c1 AS INTEGER)))) ISNULL)) GROUP BY v0.c0, vt0.c0, vt0.c1;
SELECT v0.c0, vt0.c0, vt0.c1 FROM vt0, v0 GROUP BY v0.c0, vt0.c0, vt0.c1;
SELECT vt1.c0 FROM v0, vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM v0, vt1 GROUP BY vt1.c0 HAVING MAX(v0.c0) COLLATE RTRIM UNION ALL SELECT ALL vt1.c0 FROM v0, vt1 GROUP BY vt1.c0 HAVING (NOT (MAX(v0.c0) COLLATE RTRIM)) UNION ALL SELECT vt1.c0 FROM v0, vt1 GROUP BY vt1.c0 HAVING ((MAX(v0.c0) COLLATE RTRIM) ISNULL);
SELECT vt1.c0 FROM v0, vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM v0, vt1 GROUP BY vt1.c0 HAVING MAX(v0.c0) COLLATE RTRIM UNION ALL SELECT ALL vt1.c0 FROM v0, vt1 GROUP BY vt1.c0 HAVING (NOT (MAX(v0.c0) COLLATE RTRIM)) UNION ALL SELECT vt1.c0 FROM v0, vt1 GROUP BY vt1.c0 HAVING ((MAX(v0.c0) COLLATE RTRIM) ISNULL);
SELECT vt1.c0 FROM v0, vt1 GROUP BY vt1.c0;
SELECT * FROM v0, vt0;
SELECT * FROM v0, vt0 WHERE (v0.c0) ORDER BY ((CASE WHEN v0.c0 THEN vt0.c0 END) NOTNULL), CASE vt0.c1  WHEN ((v0.c0)<=(v0.c0)) THEN json_valid(0Xffffffff86b9fca9) WHEN ((vt0.c0) ISNULL) THEN TOTAL_CHANGES() WHEN (vt0.c0 IN (vt0.c0, v0.c0)) THEN ((vt0.c1) NOT BETWEEN (vt0.c1) AND (v0.c0)) ELSE (+ (v0.c0)) END DESC;
SELECT * FROM v0, vt0 WHERE ((NOT (v0.c0))) ORDER BY ((CASE WHEN v0.c0 THEN vt0.c0 END) NOTNULL), CASE vt0.c1  WHEN ((v0.c0)<=(v0.c0)) THEN json_valid(0Xffffffff86b9fca9) WHEN ((vt0.c0) ISNULL) THEN TOTAL_CHANGES() WHEN (vt0.c0 IN (vt0.c0, v0.c0)) THEN ((vt0.c1) NOT BETWEEN (vt0.c1) AND (v0.c0)) ELSE (+ (v0.c0)) END DESC;
SELECT * FROM v0, vt0 WHERE (((v0.c0) ISNULL)) ORDER BY ((CASE WHEN v0.c0 THEN vt0.c0 END) NOTNULL), CASE vt0.c1  WHEN ((v0.c0)<=(v0.c0)) THEN json_valid(0xffffffff86b9fca9) WHEN ((vt0.c0) ISNULL) THEN TOTAL_CHANGES() WHEN (vt0.c0 IN (vt0.c0, v0.c0)) THEN ((vt0.c1) NOT BETWEEN (vt0.c1) AND (v0.c0)) ELSE (+ (v0.c0)) END DESC;
SELECT * FROM v0, vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((vt0.c1 COLLATE BINARY)*(vt0.c0))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((vt0.c1 COLLATE BINARY)*(vt0.c0))))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((vt0.c1 COLLATE BINARY)*(vt0.c0))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT vt0.c1 FROM v0 NOT INDEXED, vt0 GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM v0, vt0 WHERE (UNICODE(LOWER(vt0.c1))) GROUP BY vt0.c1 UNION SELECT vt0.c1 FROM v0, vt0 WHERE ((NOT (UNICODE(LOWER(vt0.c1))))) GROUP BY vt0.c1 UNION SELECT vt0.c1 FROM v0, vt0 WHERE (((UNICODE(LOWER(vt0.c1))) ISNULL)) GROUP BY vt0.c1;
SELECT vt0.c1 FROM v0 NOT INDEXED, vt0 GROUP BY vt0.c1;
SELECT vt1.c0 FROM v0, vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM v0, vt1 GROUP BY vt1.c0 HAVING HEX(DISTINCT COUNT(*)) UNION ALL SELECT vt1.c0 FROM v0, vt1 GROUP BY vt1.c0 HAVING (NOT (HEX(DISTINCT COUNT(*)))) UNION ALL SELECT ALL vt1.c0 FROM v0, vt1 GROUP BY vt1.c0 HAVING ((HEX(DISTINCT COUNT(*))) ISNULL);
SELECT vt1.c0 FROM v0, vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM v0, vt1 GROUP BY vt1.c0 HAVING HEX(DISTINCT COUNT(*)) UNION ALL SELECT vt1.c0 FROM v0, vt1 GROUP BY vt1.c0 HAVING (NOT (HEX(DISTINCT COUNT(*)))) UNION ALL SELECT ALL vt1.c0 FROM v0, vt1 GROUP BY vt1.c0 HAVING ((HEX(DISTINCT COUNT(*))) ISNULL);
SELECT vt1.c0 FROM v0, vt1 GROUP BY vt1.c0;
SELECT ALL * FROM vt0, v0;
SELECT ALL * FROM vt0, v0 WHERE ((NOT (((((v0.c0)OR(vt0.c0)))AND(vt0.c1))))) UNION ALL SELECT ALL * FROM vt0, v0 WHERE ((NOT ((NOT (((((v0.c0)OR(vt0.c0)))AND(vt0.c1))))))) UNION ALL SELECT * FROM vt0, v0 WHERE ((((NOT (((((v0.c0)OR(vt0.c0)))AND(vt0.c1))))) ISNULL));
SELECT ALL * FROM vt0, v0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (((((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))OR('-452852036' COLLATE BINARY)))OR(0.9046681647033911))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (((((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))OR('-452852036' COLLATE BINARY)))OR(0.9046681647033911))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((((((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))OR('-452852036' COLLATE BINARY)))OR(0.9046681647033911))) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT ALL vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1;
SELECT vt1.c0, vt1.c1 FROM vt1 WHERE (TRIM(CAST(vt1.c0 AS BLOB))) GROUP BY vt1.c0, vt1.c1 UNION SELECT vt1.c0, vt1.c1 FROM vt1 WHERE ((NOT (TRIM(CAST(vt1.c0 AS BLOB))))) GROUP BY vt1.c0, vt1.c1 UNION SELECT ALL vt1.c0, vt1.c1 FROM vt1 WHERE (((TRIM(CAST(vt1.c0 AS BLOB))) ISNULL)) GROUP BY vt1.c0, vt1.c1;
SELECT ALL vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1;
SELECT ALL vt1.c0, vt1.c1 FROM vt1, v0 GROUP BY vt1.c0, vt1.c1;
SELECT ALL vt1.c0, vt1.c1 FROM vt1, v0 GROUP BY vt1.c0, vt1.c1 HAVING COUNT(GROUP_CONCAT(COUNT(*))) UNION ALL SELECT vt1.c0, vt1.c1 FROM vt1, v0 GROUP BY vt1.c0, vt1.c1 HAVING (NOT (COUNT(GROUP_CONCAT(COUNT(*))))) UNION ALL SELECT vt1.c0, vt1.c1 FROM vt1, v0 GROUP BY vt1.c0, vt1.c1 HAVING ((COUNT(GROUP_CONCAT(COUNT(*)))) ISNULL);
SELECT v0.c0, vt0.c1, vt1.c0, vt0.c0 FROM vt1, v0, vt0;
SELECT ALL v0.c0, vt0.c1, vt1.c0, vt0.c0 FROM vt1, v0, vt0 WHERE (UPPER((~ (vt0.c0)))) UNION ALL SELECT ALL v0.c0, vt0.c1, vt1.c0, vt0.c0 FROM vt1, v0, vt0 WHERE ((NOT (UPPER((~ (vt0.c0)))))) UNION ALL SELECT ALL v0.c0, vt0.c1, vt1.c0, vt0.c0 FROM vt1, v0, vt0 WHERE (((UPPER((~ (vt0.c0)))) ISNULL));
SELECT v0.c0, vt0.c1, vt1.c0, vt0.c0 FROM vt1, v0, vt0;
SELECT DISTINCT * FROM vt0, v0;
SELECT DISTINCT * FROM vt0, v0 WHERE (((((((x'f8640cef')OR(vt0.c1)))OR(vt0.c1)))-(v0.c0 COLLATE RTRIM))) UNION SELECT DISTINCT * FROM vt0, v0 WHERE ((NOT (((((((x'f8640cef')OR(vt0.c1)))OR(vt0.c1)))-(v0.c0 COLLATE RTRIM))))) UNION SELECT DISTINCT * FROM vt0, v0 WHERE (((((((((x'f8640cef')OR(vt0.c1)))OR(vt0.c1)))-(v0.c0 COLLATE RTRIM))) ISNULL));
SELECT DISTINCT * FROM vt0, v0;
SELECT ALL v0.c0 FROM v0 FULL OUTER JOIN vt0 ON CAST(vt0.c1 AS REAL) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 FULL OUTER JOIN vt0 ON CAST(vt0.c1 AS REAL) WHERE (((((~ (vt0.c1))))=((((vt0.c1)LIKE(vt0.c1)))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 FULL OUTER JOIN vt0 ON CAST(vt0.c1 AS REAL) WHERE ((NOT (((((~ (vt0.c1))))=((((vt0.c1)LIKE(vt0.c1)))))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 FULL OUTER JOIN vt0 ON CAST(vt0.c1 AS REAL) WHERE (((((((~ (vt0.c1))))==((((vt0.c1)LIKE(vt0.c1)))))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 FULL OUTER JOIN vt0 ON CAST(vt0.c1 AS REAL) GROUP BY v0.c0;
SELECT vt0.c1, vt1.c1, v0.c0, vt1.c0, vt0.c0 FROM v0 LEFT OUTER JOIN vt0 ON (((vt1.c0 IN (vt1.c1)))*(((vt1.c1)|('-2113383013')))) LEFT OUTER JOIN vt1 ON (-6.9737378E8 IN ()) GROUP BY vt0.c1, vt1.c1, v0.c0, vt1.c0, vt0.c0;
SELECT MIN(CAST(((vt0.c0)&(vt1.c1)) AS TEXT)) FROM vt1, vt0 ORDER BY ((CAST(vt1.c1 AS BLOB)) NOTNULL) DESC;
SELECT ALL * FROM vt1 FULL OUTER JOIN vt0 ON (((((((((vt1.c1)OR(vt0.c0)))OR(vt0.c1)))AND(vt0.c1)))AND(vt1.c0)) IN ());
SELECT * FROM vt1 FULL OUTER JOIN vt0 ON (((((((((vt1.c1)OR(vt0.c0)))OR(vt0.c1)))AND(vt0.c1)))AND(vt1.c0)) IN ()) WHERE ((+ (TYPEOF(vt0.c1)))) UNION ALL SELECT * FROM vt1 FULL OUTER JOIN vt0 ON (((((((((vt1.c1)OR(vt0.c0)))OR(vt0.c1)))AND(vt0.c1)))AND(vt1.c0)) IN ()) WHERE ((NOT ((+ (TYPEOF(vt0.c1)))))) UNION ALL SELECT * FROM vt1 FULL OUTER JOIN vt0 ON (((((((((vt1.c1)OR(vt0.c0)))OR(vt0.c1)))AND(vt0.c1)))AND(vt1.c0)) IN ()) WHERE ((((+ (TYPEOF(vt0.c1)))) ISNULL));
SELECT ALL * FROM vt1 FULL OUTER JOIN vt0 ON (((((((((vt1.c1)OR(vt0.c0)))OR(vt0.c1)))AND(vt0.c1)))AND(vt1.c0)) IN ());
SELECT DISTINCT vt1.c0, vt1.c1, vt0.c0 FROM vt1, vt0;
SELECT DISTINCT vt1.c0, vt1.c1, vt0.c0 FROM vt1, vt0 WHERE (((UNLIKELY(DISTINCT vt0.c0)) BETWEEN (CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END) AND (((vt0.c1) NOT BETWEEN (vt1.c1) AND (vt0.c0))))) UNION SELECT DISTINCT vt1.c0, vt1.c1, vt0.c0 FROM vt1, vt0 WHERE ((NOT (((UNLIKELY(DISTINCT vt0.c0)) BETWEEN (CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END) AND (((vt0.c1) NOT BETWEEN (vt1.c1) AND (vt0.c0))))))) UNION SELECT DISTINCT vt1.c0, vt1.c1, vt0.c0 FROM vt1, vt0 WHERE (((((UNLIKELY(DISTINCT vt0.c0)) BETWEEN (CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END) AND (((vt0.c1) NOT BETWEEN (vt1.c1) AND (vt0.c0))))) ISNULL));
SELECT DISTINCT vt1.c0, vt1.c1, vt0.c0 FROM vt1, vt0;
SELECT ALL vt1.c0, v0.c0 FROM v0, vt1 GROUP BY vt1.c0, v0.c0;
SELECT vt1.c0, v0.c0 FROM v0, vt1 WHERE (((vt1.c1)-(v0.c0)) COLLATE NOCASE) GROUP BY vt1.c0, v0.c0 UNION SELECT vt1.c0, v0.c0 FROM v0 NOT INDEXED, vt1 WHERE ((NOT (((vt1.c1)-(v0.c0)) COLLATE NOCASE))) GROUP BY vt1.c0, v0.c0 UNION SELECT vt1.c0, v0.c0 FROM v0, vt1 WHERE (((((vt1.c1)-(v0.c0)) COLLATE NOCASE) ISNULL)) GROUP BY vt1.c0, v0.c0;
SELECT ALL vt1.c0, v0.c0 FROM v0, vt1 GROUP BY vt1.c0, v0.c0;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING TOTAL(((vt0.c0)<(vt0.c1))) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING (NOT (TOTAL(((vt0.c0)<(vt0.c1))))) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING ((TOTAL(((vt0.c0)<(vt0.c1)))) ISNULL);
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING TOTAL(((vt0.c0)<(vt0.c1))) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING (NOT (TOTAL(((vt0.c0)<(vt0.c1))))) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING ((TOTAL(((vt0.c0)<(vt0.c1)))) ISNULL);
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL v0.c0 FROM v0;
SELECT v0.c0 FROM v0 WHERE (((((((((869871267)AND((((v0.c0))>=((v0.c0))))))OR(TRIM(DISTINCT v0.c0, v0.c0))))AND(((v0.c0)IS NOT(NULL)))))OR(((((v0.c0)OR(v0.c0)))AND(v0.c0))))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE ((NOT (((((((((869871267)AND((((v0.c0))>=((v0.c0))))))OR(TRIM(DISTINCT v0.c0, v0.c0))))AND(((v0.c0)IS NOT(NULL)))))OR(((((v0.c0)OR(v0.c0)))AND(v0.c0))))))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE (((((((((((869871267)AND((((v0.c0))>=((v0.c0))))))OR(TRIM(DISTINCT v0.c0, v0.c0))))AND(((v0.c0)IS NOT(NULL)))))OR(((((v0.c0)OR(v0.c0)))AND(v0.c0))))) ISNULL));
SELECT ALL v0.c0 FROM v0;
SELECT DISTINCT vt1.c0 FROM v0, vt1;
SELECT DISTINCT vt1.c0 FROM v0, vt1 WHERE (((((v0.c0)IS(vt1.c0)))%(((vt1.c1) BETWEEN (vt1.c0) AND (v0.c0))))) UNION SELECT DISTINCT vt1.c0 FROM v0, vt1 WHERE ((NOT (((((v0.c0)IS(vt1.c0)))%(((vt1.c1) BETWEEN (vt1.c0) AND (v0.c0))))))) UNION SELECT DISTINCT vt1.c0 FROM v0, vt1 WHERE (((((((v0.c0)IS(vt1.c0)))%(((vt1.c1) BETWEEN (vt1.c0) AND (v0.c0))))) ISNULL));
SELECT DISTINCT vt1.c0 FROM v0, vt1;
SELECT ALL vt1.c1 FROM vt1 GROUP BY vt1.c1;
SELECT vt1.c1 FROM vt1 WHERE ((((CASE vt1.c0  WHEN '' THEN vt1.c1 ELSE vt1.c0 END))>=((((vt1.c1)<=(vt1.c0)))))) GROUP BY vt1.c1 UNION SELECT vt1.c1 FROM vt1 WHERE ((NOT ((((CASE vt1.c0  WHEN '' THEN vt1.c1 ELSE vt1.c0 END))>=((((vt1.c1)<=(vt1.c0)))))))) GROUP BY vt1.c1 UNION SELECT ALL vt1.c1 FROM vt1 WHERE ((((((CASE vt1.c0  WHEN '' THEN vt1.c1 ELSE vt1.c0 END))>=((((vt1.c1)<=(vt1.c0)))))) ISNULL)) GROUP BY vt1.c1;
SELECT ALL vt1.c1 FROM vt1 GROUP BY vt1.c1;
SELECT vt1.c1 FROM vt1 CROSS JOIN v0 ON UNLIKELY(DISTINCT (v0.c0 IN ())) GROUP BY vt1.c1;
SELECT vt1.c1 FROM vt1 CROSS JOIN v0 ON UNLIKELY(DISTINCT (v0.c0 IN ())) GROUP BY vt1.c1 HAVING COUNT(MIN(MAX(v0.c0))) UNION ALL SELECT ALL vt1.c1 FROM vt1 CROSS JOIN v0 ON UNLIKELY(DISTINCT (v0.c0 IN ())) GROUP BY vt1.c1 HAVING (NOT (COUNT(MIN(MAX(v0.c0))))) UNION ALL SELECT ALL vt1.c1 FROM vt1 CROSS JOIN v0 ON UNLIKELY(DISTINCT (v0.c0 IN ())) GROUP BY vt1.c1 HAVING ((COUNT(MIN(MAX(v0.c0)))) ISNULL);
SELECT ALL * FROM vt0, v0, vt1;
SELECT * FROM vt0, v0, vt1 WHERE ((vt0.c1 COLLATE NOCASE IN (CAST(vt0.c1 AS BLOB)))) UNION ALL SELECT * FROM vt0, v0, vt1 WHERE ((NOT ((vt0.c1 COLLATE NOCASE IN (CAST(vt0.c1 AS BLOB)))))) UNION ALL SELECT ALL * FROM vt0, v0, vt1 WHERE ((((vt0.c1 COLLATE NOCASE IN (CAST(vt0.c1 AS BLOB)))) ISNULL));
SELECT ALL * FROM vt0, v0, vt1;
SELECT DISTINCT vt1.c1, vt0.c0, vt0.c1, vt1.c0, v0.c0 FROM vt1 FULL OUTER JOIN vt0 ON (((((vt0.c0))<((v0.c0))))%(v0.c0)) INNER JOIN v0 ON vt1.c1;
SELECT vt0.c0, v0.c0, vt0.c1, vt1.c0 FROM vt1, vt0, v0 GROUP BY vt0.c0, v0.c0, vt0.c1, vt1.c0;
SELECT ALL vt0.c0, v0.c0, vt0.c1, vt1.c0 FROM vt1 NOT INDEXED, vt0, v0 WHERE (((vt1.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)) COLLATE RTRIM) GROUP BY vt0.c0, v0.c0, vt0.c1, vt1.c0 UNION SELECT ALL vt0.c0, v0.c0, vt0.c1, vt1.c0 FROM vt1, vt0, v0 WHERE ((NOT (((vt1.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)) COLLATE RTRIM))) GROUP BY vt0.c0, v0.c0, vt0.c1, vt1.c0 UNION SELECT vt0.c0, v0.c0, vt0.c1, vt1.c0 FROM vt1, vt0, v0 WHERE (((((vt1.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)) COLLATE RTRIM) ISNULL)) GROUP BY vt0.c0, v0.c0, vt0.c1, vt1.c0;
SELECT vt0.c0, v0.c0, vt0.c1, vt1.c0 FROM vt1, vt0, v0 GROUP BY vt0.c0, v0.c0, vt0.c1, vt1.c0;
SELECT ALL v0.c0, vt0.c1 FROM vt0, v0, vt1 GROUP BY v0.c0, vt0.c1;
SELECT ALL v0.c0, vt0.c1 FROM vt0, v0, vt1 GROUP BY v0.c0, vt0.c1 HAVING ((((TOTAL(TOTAL('ê¯5r')))OR(MAX(vt1.c0))))AND(TOTAL(v0.c0))) UNION ALL SELECT ALL v0.c0, vt0.c1 FROM vt0, v0, vt1 GROUP BY v0.c0, vt0.c1 HAVING (NOT (((((TOTAL(TOTAL('ê¯5r')))OR(MAX(vt1.c0))))AND(TOTAL(v0.c0))))) UNION ALL SELECT ALL v0.c0, vt0.c1 FROM vt0, v0, vt1 GROUP BY v0.c0, vt0.c1 HAVING ((((((TOTAL(TOTAL('ê¯5r')))OR(MAX(vt1.c0))))AND(TOTAL(v0.c0)))) ISNULL);
SELECT * FROM vt1;
SELECT ALL * FROM vt1 WHERE (((CASE vt1.c1  WHEN vt1.c0 THEN vt1.c1 ELSE vt1.c0 END)GLOB(0.1537057719231184))) UNION ALL SELECT ALL * FROM vt1 WHERE ((NOT (((CASE vt1.c1  WHEN vt1.c0 THEN vt1.c1 ELSE vt1.c0 END)GLOB(0.1537057719231184))))) UNION ALL SELECT ALL * FROM vt1 WHERE (((((CASE vt1.c1  WHEN vt1.c0 THEN vt1.c1 ELSE vt1.c0 END)GLOB(0.1537057719231184))) ISNULL));
SELECT * FROM vt1;
SELECT DISTINCT * FROM v0, vt1;
SELECT DISTINCT * FROM v0, vt1 WHERE (UPPER(DISTINCT -1485338235)) UNION SELECT DISTINCT * FROM v0, vt1 WHERE ((NOT (UPPER(DISTINCT -1485338235)))) UNION SELECT DISTINCT * FROM v0, vt1 WHERE (((UPPER(DISTINCT -1485338235)) ISNULL));
SELECT DISTINCT * FROM v0, vt1;
SELECT vt0.c0, vt1.c0 FROM vt1 NATURAL JOIN vt0 GROUP BY vt0.c0, vt1.c0;
SELECT vt0.c0, vt1.c0 FROM vt1 NATURAL JOIN vt0 WHERE (CASE WHEN ((vt0.c0) NOT NULL) THEN ((((((((vt0.c0)OR(vt0.c1)))AND(vt0.c1)))AND(vt1.c1)))OR(vt1.c1)) WHEN ((((vt0.c1)OR(vt0.c0)))OR(vt1.c0)) THEN (((vt1.c0)) BETWEEN ((vt1.c1)) AND ((vt0.c0))) WHEN ((vt0.c1)<<(vt0.c0)) THEN ((vt1.c1)-(vt1.c0)) ELSE ((0.6942321017466802)IS(vt0.c1)) END) GROUP BY vt0.c0, vt1.c0 UNION SELECT vt0.c0, vt1.c0 FROM vt1 NATURAL JOIN vt0 WHERE ((NOT (CASE WHEN ((vt0.c0) NOT NULL) THEN ((((((((vt0.c0)OR(vt0.c1)))AND(vt0.c1)))AND(vt1.c1)))OR(vt1.c1)) WHEN ((((vt0.c1)OR(vt0.c0)))OR(vt1.c0)) THEN (((vt1.c0)) BETWEEN ((vt1.c1)) AND ((vt0.c0))) WHEN ((vt0.c1)<<(vt0.c0)) THEN ((vt1.c1)-(vt1.c0)) ELSE ((0.6942321017466802)IS(vt0.c1)) END))) GROUP BY vt0.c0, vt1.c0 UNION SELECT ALL vt0.c0, vt1.c0 FROM vt1 NATURAL JOIN vt0 WHERE (((CASE WHEN ((vt0.c0) NOT NULL) THEN ((((((((vt0.c0)OR(vt0.c1)))AND(vt0.c1)))AND(vt1.c1)))OR(vt1.c1)) WHEN ((((vt0.c1)OR(vt0.c0)))OR(vt1.c0)) THEN (((vt1.c0)) BETWEEN ((vt1.c1)) AND ((vt0.c0))) WHEN ((vt0.c1)<<(vt0.c0)) THEN ((vt1.c1)-(vt1.c0)) ELSE ((0.6942321017466802)IS(vt0.c1)) END) ISNULL)) GROUP BY vt0.c0, vt1.c0;
SELECT vt0.c0, vt1.c0 FROM vt1 NATURAL JOIN vt0 GROUP BY vt0.c0, vt1.c0;
SELECT vt1.c1, vt0.c1, vt1.c0 FROM vt0, vt1 GROUP BY vt1.c1, vt0.c1, vt1.c0;
SELECT vt1.c1, vt0.c1, vt1.c0 FROM vt0, vt1 GROUP BY vt1.c1, vt0.c1, vt1.c0 HAVING COUNT(*) UNION ALL SELECT vt1.c1, vt0.c1, vt1.c0 FROM vt0, vt1 GROUP BY vt1.c1, vt0.c1, vt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt1.c1, vt0.c1, vt1.c0 FROM vt0, vt1 GROUP BY vt1.c1, vt0.c1, vt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt1.c1, vt0.c1, vt1.c0 FROM vt0, vt1 GROUP BY vt1.c1, vt0.c1, vt1.c0;
SELECT vt1.c1, vt0.c1, vt1.c0 FROM vt0, vt1 GROUP BY vt1.c1, vt0.c1, vt1.c0 HAVING COUNT(*) UNION ALL SELECT vt1.c1, vt0.c1, vt1.c0 FROM vt0, vt1 GROUP BY vt1.c1, vt0.c1, vt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt1.c1, vt0.c1, vt1.c0 FROM vt0, vt1 GROUP BY vt1.c1, vt0.c1, vt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt1.c1, vt0.c1, vt1.c0 FROM vt0, vt1 GROUP BY vt1.c1, vt0.c1, vt1.c0;
SELECT * FROM vt1;
SELECT ALL * FROM vt1 WHERE ((((vt1.c0)>=(NULL)) IN ())) UNION ALL SELECT ALL * FROM vt1 WHERE ((NOT ((((vt1.c0)>=(NULL)) IN ())))) UNION ALL SELECT ALL * FROM vt1 WHERE ((((((vt1.c0)>=(NULL)) IN ())) ISNULL));
SELECT * FROM vt1;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (CASE (((v0.c0, v0.c0, v0.c0)) BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0)))  WHEN (((v0.c0))<((v0.c0))) THEN ((v0.c0) NOT BETWEEN (NULL) AND (v0.c0)) WHEN ((NULL) IS TRUE) THEN v0.c0 WHEN (((v0.c0, v0.c0, v0.c0)) BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0))) THEN ((((v0.c0)OR(v0.c0)))OR(v0.c0)) ELSE ((v0.c0)+(v0.c0)) END) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (CASE (((v0.c0, v0.c0, v0.c0)) BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0)))  WHEN (((v0.c0))<((v0.c0))) THEN ((v0.c0) NOT BETWEEN (NULL) AND (v0.c0)) WHEN ((NULL) IS TRUE) THEN v0.c0 WHEN (((v0.c0, v0.c0, v0.c0)) BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0))) THEN ((((v0.c0)OR(v0.c0)))OR(v0.c0)) ELSE ((v0.c0)+(v0.c0)) END))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((CASE (((v0.c0, v0.c0, v0.c0)) BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0)))  WHEN (((v0.c0))<((v0.c0))) THEN ((v0.c0) NOT BETWEEN (NULL) AND (v0.c0)) WHEN ((NULL) IS TRUE) THEN v0.c0 WHEN (((v0.c0, v0.c0, v0.c0)) BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0))) THEN ((((v0.c0)OR(v0.c0)))OR(v0.c0)) ELSE ((v0.c0)+(v0.c0)) END) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT vt0.c0, vt0.c1 FROM v0, vt0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM v0, vt0 WHERE (CAST(((v0.c0)||(vt0.c0)) AS REAL)) GROUP BY vt0.c0, vt0.c1 UNION SELECT vt0.c0, vt0.c1 FROM v0, vt0 WHERE ((NOT (CAST(((v0.c0)||(vt0.c0)) AS REAL)))) GROUP BY vt0.c0, vt0.c1 UNION SELECT ALL vt0.c0, vt0.c1 FROM v0, vt0 WHERE (((CAST(((v0.c0)||(vt0.c0)) AS REAL)) ISNULL)) GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c0, vt0.c1 FROM v0, vt0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c0;
SELECT ALL vt0.c0, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c0 HAVING TOTAL(((vt1.c0) IS FALSE)) UNION ALL SELECT vt0.c0, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c0 HAVING (NOT (TOTAL(((vt1.c0) IS FALSE)))) UNION ALL SELECT ALL vt0.c0, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c0 HAVING ((TOTAL(((vt1.c0) IS FALSE))) ISNULL);
SELECT ALL vt0.c0, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c0;
SELECT ALL vt0.c0, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c0 HAVING TOTAL(((vt1.c0) IS FALSE)) UNION ALL SELECT vt0.c0, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c0 HAVING (NOT (TOTAL(((vt1.c0) IS FALSE)))) UNION ALL SELECT ALL vt0.c0, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c0 HAVING ((TOTAL(((vt1.c0) IS FALSE))) ISNULL);
SELECT ALL vt0.c0, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c0;
SELECT * FROM vt1;
SELECT ALL * FROM vt1 WHERE ((((vt1.c1, vt1.c0, vt1.c1)) BETWEEN ((7.75329027E8, (NOT (vt1.c1)), vt1.c0 COLLATE BINARY)) AND ((CASE vt1.c1  WHEN vt1.c0 THEN vt1.c0 END, vt1.c1, ((vt1.c1) NOT NULL))))) UNION ALL SELECT * FROM vt1 WHERE ((NOT ((((vt1.c1, vt1.c0, vt1.c1)) BETWEEN ((7.75329027E8, (NOT (vt1.c1)), vt1.c0 COLLATE BINARY)) AND ((CASE vt1.c1  WHEN vt1.c0 THEN vt1.c0 END, vt1.c1, ((vt1.c1) NOT NULL))))))) UNION ALL SELECT * FROM vt1 WHERE ((((((vt1.c1, vt1.c0, vt1.c1)) BETWEEN ((7.75329027E8, (NOT (vt1.c1)), vt1.c0 COLLATE BINARY)) AND ((CASE vt1.c1  WHEN vt1.c0 THEN vt1.c0 END, vt1.c1, ((vt1.c1) NOT NULL))))) ISNULL));
SELECT * FROM vt1;
SELECT DISTINCT vt0.c1, vt1.c0, v0.c0 FROM vt1, v0 LEFT OUTER JOIN vt0 ON (vt1.c0 COLLATE NOCASE IN ((vt0.c0 IN ())));
SELECT DISTINCT vt0.c1, vt1.c0, v0.c0 FROM vt1, v0 LEFT OUTER JOIN vt0 ON (vt1.c0 COLLATE NOCASE IN ((vt0.c0 IN ()))) WHERE (((((((((((vt1.c1)AND(vt0.c1)))OR(vt1.c0)))AND(vt1.c0)))AND(v0.c0)))+(((vt1.c0)<<(vt1.c1))))) UNION SELECT DISTINCT vt0.c1, vt1.c0, v0.c0 FROM vt1, v0 LEFT OUTER JOIN vt0 ON (vt1.c0 COLLATE NOCASE IN ((vt0.c0 IN ()))) WHERE ((NOT (((((((((((vt1.c1)AND(vt0.c1)))OR(vt1.c0)))AND(vt1.c0)))AND(v0.c0)))+(((vt1.c0)<<(vt1.c1))))))) UNION SELECT DISTINCT vt0.c1, vt1.c0, v0.c0 FROM vt1, v0 LEFT OUTER JOIN vt0 ON (vt1.c0 COLLATE NOCASE IN ((vt0.c0 IN ()))) WHERE (((((((((((((vt1.c1)AND(vt0.c1)))OR(vt1.c0)))AND(vt1.c0)))AND(v0.c0)))+(((vt1.c0)<<(vt1.c1))))) ISNULL));
SELECT DISTINCT vt0.c1, vt1.c0, v0.c0 FROM vt1, v0 LEFT OUTER JOIN vt0 ON (vt1.c0 COLLATE NOCASE IN ((vt0.c0 IN ())));
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE ((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0))))>=((CAST(vt1.c1 AS TEXT))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT ((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0))))>=((CAST(vt1.c1 AS TEXT))))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0))))>=((CAST(vt1.c1 AS TEXT))))) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt0.c1, vt1.c1, vt0.c0, vt1.c0, v0.c0 FROM vt1, v0, vt0 GROUP BY vt0.c1, vt1.c1, vt0.c0, vt1.c0, v0.c0;
SELECT vt0.c1, vt1.c1, vt0.c0, vt1.c0, v0.c0 FROM vt1, v0, vt0 GROUP BY vt0.c1, vt1.c1, vt0.c0, vt1.c0, v0.c0 HAVING GROUP_CONCAT(((GROUP_CONCAT(TOTAL(vt0.c1))) BETWEEN (vt0.c0) AND (v0.c0))) UNION ALL SELECT ALL vt0.c1, vt1.c1, vt0.c0, vt1.c0, v0.c0 FROM vt1, v0, vt0 GROUP BY vt0.c1, vt1.c1, vt0.c0, vt1.c0, v0.c0 HAVING (NOT (GROUP_CONCAT(((GROUP_CONCAT(TOTAL(vt0.c1))) BETWEEN (vt0.c0) AND (v0.c0))))) UNION ALL SELECT vt0.c1, vt1.c1, vt0.c0, vt1.c0, v0.c0 FROM vt1, v0, vt0 GROUP BY vt0.c1, vt1.c1, vt0.c0, vt1.c0, v0.c0 HAVING ((GROUP_CONCAT(((GROUP_CONCAT(TOTAL(vt0.c1))) BETWEEN (vt0.c0) AND (v0.c0)))) ISNULL);
SELECT ALL vt0.c1, vt0.c0, v0.c0 FROM vt0, v0;
SELECT vt0.c1, vt0.c0, v0.c0 FROM vt0, v0 WHERE (((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)) COLLATE RTRIM) UNION ALL SELECT ALL vt0.c1, vt0.c0, v0.c0 FROM vt0, v0 WHERE ((NOT (((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)) COLLATE RTRIM))) UNION ALL SELECT vt0.c1, vt0.c0, v0.c0 FROM vt0, v0 WHERE (((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)) COLLATE RTRIM) ISNULL));
SELECT ALL vt0.c1, vt0.c0, v0.c0 FROM vt0, v0;
SELECT DISTINCT vt0.c1 FROM vt0, vt1, v0;
SELECT DISTINCT vt0.c1 FROM vt0, vt1, v0 WHERE (CASE WHEN (NOT (v0.c0)) THEN ((x'd0e5')<<(v0.c0)) WHEN ((vt0.c1) BETWEEN (NULL) AND (v0.c0)) THEN ((vt1.c0)>(vt1.c0)) WHEN (NOT (vt0.c0)) THEN x'' WHEN vt0.c0 COLLATE RTRIM THEN ((v0.c0) ISNULL) WHEN (NOT (vt1.c0)) THEN ((((((((vt1.c1)AND(vt0.c0)))AND(v0.c0)))AND(vt1.c1)))OR(vt1.c1)) END) UNION SELECT DISTINCT vt0.c1 FROM vt0, vt1, v0 WHERE ((NOT (CASE WHEN (NOT (v0.c0)) THEN ((x'd0e5')<<(v0.c0)) WHEN ((vt0.c1) BETWEEN (NULL) AND (v0.c0)) THEN ((vt1.c0)>(vt1.c0)) WHEN (NOT (vt0.c0)) THEN x'' WHEN vt0.c0 COLLATE RTRIM THEN ((v0.c0) ISNULL) WHEN (NOT (vt1.c0)) THEN ((((((((vt1.c1)AND(vt0.c0)))AND(v0.c0)))AND(vt1.c1)))OR(vt1.c1)) END))) UNION SELECT DISTINCT vt0.c1 FROM vt0, vt1, v0 WHERE (((CASE WHEN (NOT (v0.c0)) THEN ((x'd0e5')<<(v0.c0)) WHEN ((vt0.c1) BETWEEN (NULL) AND (v0.c0)) THEN ((vt1.c0)>(vt1.c0)) WHEN (NOT (vt0.c0)) THEN x'' WHEN vt0.c0 COLLATE RTRIM THEN ((v0.c0) ISNULL) WHEN (NOT (vt1.c0)) THEN ((((((((vt1.c1)AND(vt0.c0)))AND(v0.c0)))AND(vt1.c1)))OR(vt1.c1)) END) ISNULL));
SELECT DISTINCT vt0.c1 FROM vt0, vt1, v0;
SELECT vt0.c1, v0.c0, vt0.c0 FROM v0, vt0 GROUP BY vt0.c1, v0.c0, vt0.c0;
SELECT vt0.c1, v0.c0, vt0.c0 FROM v0, vt0 WHERE (CAST(((vt0.c1)GLOB(v0.c0)) AS TEXT)) GROUP BY vt0.c1, v0.c0, vt0.c0 UNION SELECT vt0.c1, v0.c0, vt0.c0 FROM v0, vt0 WHERE ((NOT (CAST(((vt0.c1)GLOB(v0.c0)) AS TEXT)))) GROUP BY vt0.c1, v0.c0, vt0.c0 UNION SELECT ALL vt0.c1, v0.c0, vt0.c0 FROM v0, vt0 WHERE (((CAST(((vt0.c1)GLOB(v0.c0)) AS TEXT)) ISNULL)) GROUP BY vt0.c1, v0.c0, vt0.c0;
SELECT vt0.c1, v0.c0, vt0.c0 FROM v0, vt0 GROUP BY vt0.c1, v0.c0, vt0.c0;
SELECT vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0;
SELECT vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0 HAVING NULL UNION ALL SELECT ALL vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0 HAVING (NOT (NULL)) UNION ALL SELECT ALL vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0 HAVING ((NULL) ISNULL);
SELECT vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0;
SELECT vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0 HAVING NULL UNION ALL SELECT ALL vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0 HAVING (NOT (NULL)) UNION ALL SELECT ALL vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0 HAVING ((NULL) ISNULL);
SELECT vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0;
SELECT ALL * FROM vt1, vt0, v0;
SELECT * FROM vt1, vt0, v0 WHERE (((((v0.c0) BETWEEN (v0.c0) AND (vt0.c0)))AND(((vt1.c1) ISNULL)))) UNION ALL SELECT ALL * FROM vt1, vt0, v0 WHERE ((NOT (((((v0.c0) BETWEEN (v0.c0) AND (vt0.c0)))AND(((vt1.c1) ISNULL)))))) UNION ALL SELECT * FROM vt1, vt0, v0 WHERE (((((((v0.c0) BETWEEN (v0.c0) AND (vt0.c0)))AND(((vt1.c1) ISNULL)))) ISNULL));
SELECT ALL * FROM vt1, vt0, v0;
SELECT DISTINCT vt0.c1, vt0.c0, vt1.c1 FROM vt0, vt1;
SELECT DISTINCT vt0.c1, vt0.c0, vt1.c1 FROM vt0, vt1 WHERE (NULL) UNION SELECT DISTINCT vt0.c1, vt0.c0, vt1.c1 FROM vt0, vt1 WHERE ((NOT (NULL))) UNION SELECT DISTINCT vt0.c1, vt0.c0, vt1.c1 FROM vt0, vt1 WHERE (((NULL) ISNULL));
SELECT DISTINCT vt0.c1, vt0.c0, vt1.c1 FROM vt0, vt1;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE ((+ (((('')) BETWEEN ((v0.c0)) AND ((v0.c0)))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT ((+ (((('')) BETWEEN ((v0.c0)) AND ((v0.c0)))))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((((+ (((('')) BETWEEN ((v0.c0)) AND ((v0.c0)))))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING GROUP_CONCAT(((GROUP_CONCAT(vt0.c0)) NOT NULL)) UNION ALL SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING (NOT (GROUP_CONCAT(((GROUP_CONCAT(vt0.c0)) NOT NULL)))) UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING ((GROUP_CONCAT(((GROUP_CONCAT(vt0.c0)) NOT NULL))) ISNULL);
SELECT * FROM vt0, v0, vt1;
SELECT ALL * FROM vt0, v0, vt1 WHERE (NULL) UNION ALL SELECT ALL * FROM vt0, v0, vt1 WHERE ((NOT (NULL))) UNION ALL SELECT * FROM vt0, v0, vt1 WHERE (((NULL) ISNULL));
SELECT * FROM vt0, v0, vt1;
SELECT DISTINCT * FROM vt0, v0, vt1;
SELECT DISTINCT * FROM vt0, v0, vt1 WHERE (((((((vt0.c1) IS FALSE))OR(',Vbeyç¶ä·²')))AND(CASE v0.c0  WHEN vt1.c0 THEN vt1.c1 ELSE vt0.c0 END))) UNION SELECT DISTINCT * FROM vt0, v0, vt1 WHERE ((NOT (((((((vt0.c1) IS FALSE))OR(',Vbeyç¶ä·²')))AND(CASE v0.c0  WHEN vt1.c0 THEN vt1.c1 ELSE vt0.c0 END))))) UNION SELECT DISTINCT * FROM vt0, v0, vt1 WHERE (((((((((vt0.c1) IS FALSE))OR(',Vbeyç¶ä·²')))AND(CASE v0.c0  WHEN vt1.c0 THEN vt1.c1 ELSE vt0.c0 END))) ISNULL));
SELECT DISTINCT * FROM vt0, v0, vt1;
SELECT ALL vt0.c0 FROM vt1, vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt1, vt0 WHERE (CAST(NULL AS NUMERIC)) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt1, vt0 WHERE ((NOT (CAST(NULL AS NUMERIC)))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt1, vt0 WHERE (((CAST(NULL AS NUMERIC)) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt1, vt0 GROUP BY vt0.c0;
SELECT ALL v0.c0, vt1.c1, vt1.c0, vt0.c0 FROM vt1, vt0, v0 GROUP BY v0.c0, vt1.c1, vt1.c0, vt0.c0;
SELECT ALL v0.c0, vt1.c1, vt1.c0, vt0.c0 FROM vt1, vt0, v0 GROUP BY v0.c0, vt1.c1, vt1.c0, vt0.c0 HAVING ((((vt1.c0) IS FALSE))*((+ (MAX(MIN(TOTAL(TOTAL(GROUP_CONCAT(GROUP_CONCAT(AVG(COUNT(COUNT(*))))))))))))) UNION ALL SELECT ALL v0.c0, vt1.c1, vt1.c0, vt0.c0 FROM vt1, vt0, v0 GROUP BY v0.c0, vt1.c1, vt1.c0, vt0.c0 HAVING (NOT (((((vt1.c0) IS FALSE))*((+ (MAX(MIN(TOTAL(TOTAL(GROUP_CONCAT(GROUP_CONCAT(AVG(COUNT(COUNT(*))))))))))))))) UNION ALL SELECT ALL v0.c0, vt1.c1, vt1.c0, vt0.c0 FROM vt1, vt0, v0 GROUP BY v0.c0, vt1.c1, vt1.c0, vt0.c0 HAVING ((((((vt1.c0) IS FALSE))*((+ (MAX(MIN(TOTAL(TOTAL(GROUP_CONCAT(GROUP_CONCAT(AVG(COUNT(COUNT(*)))))))))))))) ISNULL);
SELECT ALL * FROM v0;
SELECT * FROM v0 WHERE ((+ ((v0.c0 IN (v0.c0))))) UNION ALL SELECT ALL * FROM v0 WHERE ((NOT ((+ ((v0.c0 IN (v0.c0))))))) UNION ALL SELECT ALL * FROM v0 WHERE ((((+ ((v0.c0 IN (v0.c0))))) ISNULL));
SELECT ALL * FROM v0;
SELECT DISTINCT * FROM v0 CROSS JOIN vt0 ON CASE WHEN vt0.c0 COLLATE BINARY THEN CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 END WHEN ((vt0.c1) NOT BETWEEN (vt1.c0) AND (NULL)) THEN ((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)) WHEN (((vt0.c0))=((v0.c0))) THEN (((('0.22221389868878272')OR(vt0.c0)))AND('\rP*W')) ELSE CAST(vt1.c1 AS INTEGER) END INNER JOIN vt1 ON ((((((vt1.c1)||(v0.c0)))AND(((vt1.c0)IS(vt0.c1)))))OR((('-47101957')IS NOT(vt1.c0))));
SELECT DISTINCT * FROM v0 CROSS JOIN vt0 ON CASE WHEN vt0.c0 COLLATE BINARY THEN CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 END WHEN ((vt0.c1) NOT BETWEEN (vt1.c0) AND (NULL)) THEN ((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)) WHEN (((vt0.c0))=((v0.c0))) THEN (((('0.22221389868878272')OR(vt0.c0)))AND('\rP*W')) ELSE CAST(vt1.c1 AS INTEGER) END INNER JOIN vt1 ON ((((((vt1.c1)||(v0.c0)))AND(((vt1.c0)IS(vt0.c1)))))OR((('-47101957')IS NOT(vt1.c0)))) WHERE (((((vt0.c0)<<(vt0.c0))) NOT NULL)) UNION SELECT DISTINCT * FROM v0 CROSS JOIN vt0 ON CASE WHEN vt0.c0 COLLATE BINARY THEN CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 END WHEN ((vt0.c1) NOT BETWEEN (vt1.c0) AND (NULL)) THEN ((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)) WHEN (((vt0.c0))=((v0.c0))) THEN (((('0.22221389868878272')OR(vt0.c0)))AND('\rP*W')) ELSE CAST(vt1.c1 AS INTEGER) END INNER JOIN vt1 ON ((((((vt1.c1)||(v0.c0)))AND(((vt1.c0)IS(vt0.c1)))))OR((('-47101957')IS NOT(vt1.c0)))) WHERE ((NOT (((((vt0.c0)<<(vt0.c0))) NOT NULL)))) UNION SELECT DISTINCT * FROM v0 CROSS JOIN vt0 ON CASE WHEN vt0.c0 COLLATE BINARY THEN CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 END WHEN ((vt0.c1) NOT BETWEEN (vt1.c0) AND (NULL)) THEN ((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)) WHEN (((vt0.c0))=((v0.c0))) THEN (((('0.22221389868878272')OR(vt0.c0)))AND('\rP*W')) ELSE CAST(vt1.c1 AS INTEGER) END INNER JOIN vt1 ON ((((((vt1.c1)||(v0.c0)))AND(((vt1.c0)IS(vt0.c1)))))OR((('-47101957')IS NOT(vt1.c0)))) WHERE (((((((vt0.c0)<<(vt0.c0))) NOT NULL)) ISNULL));
SELECT DISTINCT * FROM v0 CROSS JOIN vt0 ON CASE WHEN vt0.c0 COLLATE BINARY THEN CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 END WHEN ((vt0.c1) NOT BETWEEN (vt1.c0) AND (NULL)) THEN ((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)) WHEN (((vt0.c0))=((v0.c0))) THEN (((('0.22221389868878272')OR(vt0.c0)))AND('\rP*W')) ELSE CAST(vt1.c1 AS INTEGER) END INNER JOIN vt1 ON ((((((vt1.c1)||(v0.c0)))AND(((vt1.c0)IS(vt0.c1)))))OR((('-47101957')IS NOT(vt1.c0))));
SELECT ALL vt1.c1 FROM vt1 GROUP BY vt1.c1;
SELECT vt1.c1 FROM vt1 WHERE (((((((((HEX(DISTINCT vt1.c1))OR(CASE vt1.c0  WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c1 END)))AND(((vt1.c0) BETWEEN (vt1.c1) AND (vt1.c0)))))OR(vt1.c1 COLLATE BINARY)))AND(LIKELIHOOD(vt1.c0, 0.40428319809260915)))) GROUP BY vt1.c1 UNION SELECT ALL vt1.c1 FROM vt1 WHERE ((NOT (((((((((HEX(DISTINCT vt1.c1))OR(CASE vt1.c0  WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c1 END)))AND(((vt1.c0) BETWEEN (vt1.c1) AND (vt1.c0)))))OR(vt1.c1 COLLATE BINARY)))AND(LIKELIHOOD(vt1.c0, 0.40428319809260915)))))) GROUP BY vt1.c1 UNION SELECT vt1.c1 FROM vt1 WHERE (((((((((((HEX(DISTINCT vt1.c1))OR(CASE vt1.c0  WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c1 END)))AND(((vt1.c0) BETWEEN (vt1.c1) AND (vt1.c0)))))OR(vt1.c1 COLLATE BINARY)))AND(LIKELIHOOD(vt1.c0, 0.40428319809260915)))) ISNULL)) GROUP BY vt1.c1;
SELECT ALL vt1.c1 FROM vt1 GROUP BY vt1.c1;
SELECT vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1;
SELECT ALL vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1 HAVING COUNT((((vt1.c0, TOTAL(-951618705), vt1.c0)) BETWEEN ((vt1.c1, MAX(TOTAL(vt1.c0)), vt1.c0)) AND ((vt1.c0, COUNT(*), vt1.c0)))) UNION ALL SELECT ALL vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1 HAVING (NOT (COUNT((((vt1.c0, TOTAL(-951618705), vt1.c0)) BETWEEN ((vt1.c1, MAX(TOTAL(vt1.c0)), vt1.c0)) AND ((vt1.c0, COUNT(*), vt1.c0)))))) UNION ALL SELECT ALL vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1 HAVING ((COUNT((((vt1.c0, TOTAL(-951618705), vt1.c0)) BETWEEN ((vt1.c1, MAX(TOTAL(vt1.c0)), vt1.c0)) AND ((vt1.c0, COUNT(*), vt1.c0))))) ISNULL);
SELECT ALL MIN(((v0.c0)>>(v0.c0)) COLLATE NOCASE) FROM vt1, v0;
SELECT * FROM v0, vt1;
SELECT ALL * FROM v0, vt1 WHERE ((v0.c0 IN ())) UNION ALL SELECT * FROM v0, vt1 WHERE ((NOT ((v0.c0 IN ())))) UNION ALL SELECT * FROM v0, vt1 WHERE ((((v0.c0 IN ())) ISNULL));
SELECT * FROM v0, vt1;
SELECT DISTINCT * FROM vt1, vt0;
SELECT DISTINCT * FROM vt1, vt0 WHERE ('Yî®«') UNION SELECT DISTINCT * FROM vt1, vt0 WHERE ((NOT ('Yî®«'))) UNION SELECT DISTINCT * FROM vt1, vt0 WHERE ((('Yî®«') ISNULL));
SELECT DISTINCT * FROM vt1, vt0;
SELECT vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0;
SELECT vt1.c1, vt1.c0 FROM vt1 WHERE (vt1.c1) GROUP BY vt1.c1, vt1.c0 UNION SELECT ALL vt1.c1, vt1.c0 FROM vt1 WHERE ((NOT (vt1.c1))) GROUP BY vt1.c1, vt1.c0 UNION SELECT ALL vt1.c1, vt1.c0 FROM vt1 WHERE (((vt1.c1) ISNULL)) GROUP BY vt1.c1, vt1.c0;
SELECT vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((AVG(COUNT(*))) BETWEEN (LIKELIHOOD(v0.c0, 0.16929559394858906)) AND (TOTAL(v0.c0))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (((AVG(COUNT(*))) BETWEEN (LIKELIHOOD(v0.c0, 0.16929559394858906)) AND (TOTAL(v0.c0))))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((((AVG(COUNT(*))) BETWEEN (LIKELIHOOD(v0.c0, 0.16929559394858906)) AND (TOTAL(v0.c0)))) ISNULL);
SELECT vt0.c1 FROM vt0, v0, vt1;
SELECT ALL vt0.c1 FROM vt0, v0, vt1 WHERE (((((v0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))) NOT BETWEEN (CAST(vt0.c0 AS REAL)) AND (CAST(v0.c0 AS NUMERIC)))) UNION ALL SELECT ALL vt0.c1 FROM vt0, v0, vt1 WHERE ((NOT (((((v0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))) NOT BETWEEN (CAST(vt0.c0 AS REAL)) AND (CAST(v0.c0 AS NUMERIC)))))) UNION ALL SELECT ALL vt0.c1 FROM vt0, v0, vt1 WHERE (((((((v0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))) NOT BETWEEN (CAST(vt0.c0 AS REAL)) AND (CAST(v0.c0 AS NUMERIC)))) ISNULL));
SELECT vt0.c1 FROM vt0, v0, vt1;
SELECT DISTINCT vt1.c0, vt0.c0, vt1.c1 FROM vt1 LEFT OUTER JOIN vt0 ON '0.9900719466671484' LEFT OUTER JOIN v0 ON vt1.c0;
SELECT DISTINCT vt1.c0, vt0.c0, vt1.c1 FROM vt1 LEFT OUTER JOIN vt0 ON '0.9900719466671484' LEFT OUTER JOIN v0 ON vt1.c0 WHERE (UPPER(DISTINCT 0Xffffffffc506fdf0)) UNION SELECT DISTINCT vt1.c0, vt0.c0, vt1.c1 FROM vt1 LEFT OUTER JOIN vt0 ON '0.9900719466671484' LEFT OUTER JOIN v0 ON vt1.c0 WHERE ((NOT (UPPER(DISTINCT 0xffffffffc506fdf0)))) UNION SELECT DISTINCT vt1.c0, vt0.c0, vt1.c1 FROM vt1 LEFT OUTER JOIN vt0 ON '0.9900719466671484' LEFT OUTER JOIN v0 ON vt1.c0 WHERE (((UPPER(DISTINCT 0xffffffffc506fdf0)) ISNULL));
SELECT DISTINCT vt1.c0, vt0.c0, vt1.c1 FROM vt1 LEFT OUTER JOIN vt0 ON '0.9900719466671484' LEFT OUTER JOIN v0 ON vt1.c0;
SELECT vt1.c0, vt1.c1, v0.c0, vt0.c1, vt0.c0 FROM vt0, vt1, v0 GROUP BY vt1.c0, vt1.c1, v0.c0, vt0.c1, vt0.c0;
SELECT vt1.c0, vt1.c1, v0.c0, vt0.c1, vt0.c0 FROM vt0, vt1, v0 WHERE (((((CAST(vt0.c0 AS NUMERIC))AND(((vt0.c1) NOT BETWEEN (vt0.c0) AND (4.4965822E7)))))AND((- (x'ef9e'))))) GROUP BY vt1.c0, vt1.c1, v0.c0, vt0.c1, vt0.c0 UNION SELECT vt1.c0, vt1.c1, v0.c0, vt0.c1, vt0.c0 FROM vt0, vt1, v0 WHERE ((NOT (((((CAST(vt0.c0 AS NUMERIC))AND(((vt0.c1) NOT BETWEEN (vt0.c0) AND (4.4965822E7)))))AND((- (x'ef9e'))))))) GROUP BY vt1.c0, vt1.c1, v0.c0, vt0.c1, vt0.c0 UNION SELECT vt1.c0, vt1.c1, v0.c0, vt0.c1, vt0.c0 FROM vt0, vt1, v0 WHERE (((((((CAST(vt0.c0 AS NUMERIC))AND(((vt0.c1) NOT BETWEEN (vt0.c0) AND (4.4965822E7)))))AND((- (x'ef9e'))))) ISNULL)) GROUP BY vt1.c0, vt1.c1, v0.c0, vt0.c1, vt0.c0;
SELECT vt1.c0, vt1.c1, v0.c0, vt0.c1, vt0.c0 FROM vt0, vt1, v0 GROUP BY vt1.c0, vt1.c1, v0.c0, vt0.c1, vt0.c0;
SELECT ALL vt0.c0, vt0.c1 FROM vt0, v0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0, v0 GROUP BY vt0.c0, vt0.c1 HAVING AVG(((((SUM(AVG(v0.c0)))AND(COUNT(MIN(COUNT(v0.c0))))))AND(SUM(vt0.c1)))) UNION ALL SELECT vt0.c0, vt0.c1 FROM vt0 NOT INDEXED, v0 GROUP BY vt0.c0, vt0.c1 HAVING (NOT (AVG(((((SUM(AVG(v0.c0)))AND(COUNT(MIN(COUNT(v0.c0))))))AND(SUM(vt0.c1)))))) UNION ALL SELECT vt0.c0, vt0.c1 FROM vt0, v0 GROUP BY vt0.c0, vt0.c1 HAVING ((AVG(((((SUM(AVG(v0.c0)))AND(COUNT(MIN(COUNT(v0.c0))))))AND(SUM(vt0.c1))))) ISNULL);
SELECT v0.c0, vt0.c0, vt0.c1, vt1.c0 FROM v0, vt1, vt0;
SELECT v0.c0, vt0.c0, vt0.c1, vt1.c0 FROM v0, vt1, vt0 WHERE (((((((((((((((((vt1.c1)AND(v0.c0)))AND(vt0.c0)))OR(vt0.c1)))OR(vt0.c0)))AND(((vt0.c1) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))AND(v0.c0)))OR(x'')))AND(((vt1.c1)IS(vt0.c0))))) UNION ALL SELECT ALL v0.c0, vt0.c0, vt0.c1, vt1.c0 FROM v0, vt1, vt0 WHERE ((NOT (((((((((((((((((vt1.c1)AND(v0.c0)))AND(vt0.c0)))OR(vt0.c1)))OR(vt0.c0)))AND(((vt0.c1) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))AND(v0.c0)))OR(x'')))AND(((vt1.c1)IS(vt0.c0))))))) UNION ALL SELECT v0.c0, vt0.c0, vt0.c1, vt1.c0 FROM v0, vt1, vt0 WHERE (((((((((((((((((((vt1.c1)AND(v0.c0)))AND(vt0.c0)))OR(vt0.c1)))OR(vt0.c0)))AND(((vt0.c1) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))AND(v0.c0)))OR(x'')))AND(((vt1.c1)IS(vt0.c0))))) ISNULL));
SELECT v0.c0, vt0.c0, vt0.c1, vt1.c0 FROM v0, vt1, vt0;
SELECT DISTINCT v0.c0, vt0.c0, vt1.c1, vt0.c1 FROM vt1, vt0, v0 NOT INDEXED;
SELECT DISTINCT v0.c0, vt0.c0, vt1.c1, vt0.c1 FROM vt1, vt0, v0 WHERE ((((vt1.c0 IN ()))<=(((((vt1.c1)OR(vt1.c0)))AND(v0.c0))))) UNION SELECT DISTINCT v0.c0, vt0.c0, vt1.c1, vt0.c1 FROM vt1, vt0, v0 WHERE ((NOT ((((vt1.c0 IN ()))<=(((((vt1.c1)OR(vt1.c0)))AND(v0.c0))))))) UNION SELECT DISTINCT v0.c0, vt0.c0, vt1.c1, vt0.c1 FROM vt1, vt0, v0 WHERE ((((((vt1.c0 IN ()))<=(((((vt1.c1)OR(vt1.c0)))AND(v0.c0))))) ISNULL));
SELECT DISTINCT v0.c0, vt0.c0, vt1.c1, vt0.c1 FROM vt1, vt0, v0 NOT INDEXED;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE ((1262591798 IN ())) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT ((1262591798 IN ())))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((((1262591798 IN ())) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL vt0.c1, vt1.c1, vt0.c0, vt1.c0 FROM vt1, v0, vt0 GROUP BY vt0.c1, vt1.c1, vt0.c0, vt1.c0;
SELECT vt0.c1, vt1.c1, vt0.c0, vt1.c0 FROM vt1, v0, vt0 GROUP BY vt0.c1, vt1.c1, vt0.c0, vt1.c0 HAVING (((+ (vt0.c0))) NOT BETWEEN (((MIN(TOTAL(v0.c0)))*(vt0.c1))) AND (vt1.c1)) UNION ALL SELECT ALL vt0.c1, vt1.c1, vt0.c0, vt1.c0 FROM vt1, v0, vt0 GROUP BY vt0.c1, vt1.c1, vt0.c0, vt1.c0 HAVING (NOT ((((+ (vt0.c0))) NOT BETWEEN (((MIN(TOTAL(v0.c0)))*(vt0.c1))) AND (vt1.c1)))) UNION ALL SELECT vt0.c1, vt1.c1, vt0.c0, vt1.c0 FROM vt1, v0, vt0 GROUP BY vt0.c1, vt1.c1, vt0.c0, vt1.c0 HAVING (((((+ (vt0.c0))) NOT BETWEEN (((MIN(TOTAL(v0.c0)))*(vt0.c1))) AND (vt1.c1))) ISNULL);
SELECT vt1.c0, vt0.c1 FROM vt1, vt0;
SELECT vt1.c0, vt0.c1 FROM vt1, vt0 WHERE (vt1.c0) UNION ALL SELECT vt1.c0, vt0.c1 FROM vt1, vt0 WHERE ((NOT (vt1.c0))) UNION ALL SELECT ALL vt1.c0, vt0.c1 FROM vt1, vt0 WHERE (((vt1.c0) ISNULL));
SELECT vt1.c0, vt0.c1 FROM vt1, vt0;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE (vt1.c1) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT (vt1.c1))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((vt1.c1) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT ALL vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1;
SELECT ALL vt1.c0, vt1.c1 FROM vt1 WHERE (((UNLIKELY(DISTINCT vt1.c1)) NOT BETWEEN (CASE vt1.c1  WHEN vt1.c0 THEN vt1.c1 ELSE vt1.c1 END) AND (((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt1.c0))))) GROUP BY vt1.c0, vt1.c1 UNION SELECT ALL vt1.c0, vt1.c1 FROM vt1 WHERE ((NOT (((UNLIKELY(DISTINCT vt1.c1)) NOT BETWEEN (CASE vt1.c1  WHEN vt1.c0 THEN vt1.c1 ELSE vt1.c1 END) AND (((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt1.c0))))))) GROUP BY vt1.c0, vt1.c1 UNION SELECT ALL vt1.c0, vt1.c1 FROM vt1 WHERE (((((UNLIKELY(DISTINCT vt1.c1)) NOT BETWEEN (CASE vt1.c1  WHEN vt1.c0 THEN vt1.c1 ELSE vt1.c1 END) AND (((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt1.c0))))) ISNULL)) GROUP BY vt1.c0, vt1.c1;
SELECT ALL vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1;
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING ((((GROUP_CONCAT(COUNT(*)))IS(COUNT(TOTAL(MIN(vt0.c1)))))) BETWEEN (((vt0.c1)|(vt0.c0))) AND (TOTAL(TOTAL(MIN(MAX(SUM(vt0.c0))))))) UNION ALL SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING (NOT (((((GROUP_CONCAT(COUNT(*)))IS(COUNT(TOTAL(MIN(vt0.c1)))))) BETWEEN (((vt0.c1)|(vt0.c0))) AND (TOTAL(TOTAL(MIN(MAX(SUM(vt0.c0))))))))) UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING ((((((GROUP_CONCAT(COUNT(*)))IS(COUNT(TOTAL(MIN(vt0.c1)))))) BETWEEN (((vt0.c1)|(vt0.c0))) AND (TOTAL(TOTAL(MIN(MAX(SUM(vt0.c0)))))))) ISNULL);
SELECT vt1.c0, vt1.c1, vt0.c1, vt0.c0 FROM vt0, vt1;
SELECT ALL vt1.c0, vt1.c1, vt0.c1, vt0.c0 FROM vt0, vt1 WHERE (CAST(((vt0.c0)||(vt0.c0)) AS REAL)) UNION ALL SELECT ALL vt1.c0, vt1.c1, vt0.c1, vt0.c0 FROM vt0, vt1 WHERE ((NOT (CAST(((vt0.c0)||(vt0.c0)) AS REAL)))) UNION ALL SELECT vt1.c0, vt1.c1, vt0.c1, vt0.c0 FROM vt0, vt1 WHERE (((CAST(((vt0.c0)||(vt0.c0)) AS REAL)) ISNULL));
SELECT vt1.c0, vt1.c1, vt0.c1, vt0.c0 FROM vt0, vt1;
SELECT DISTINCT vt0.c1, vt1.c1, vt1.c0, vt0.c0 FROM vt0, v0, vt1;
SELECT DISTINCT vt0.c1, vt1.c1, vt1.c0, vt0.c0 FROM vt0, v0, vt1 WHERE (CAST(v0.c0 AS INTEGER) COLLATE RTRIM) UNION SELECT DISTINCT vt0.c1, vt1.c1, vt1.c0, vt0.c0 FROM vt0, v0, vt1 WHERE ((NOT (CAST(v0.c0 AS INTEGER) COLLATE RTRIM))) UNION SELECT DISTINCT vt0.c1, vt1.c1, vt1.c0, vt0.c0 FROM vt0, v0, vt1 WHERE (((CAST(v0.c0 AS INTEGER) COLLATE RTRIM) ISNULL));
SELECT DISTINCT vt0.c1, vt1.c1, vt1.c0, vt0.c0 FROM vt0, v0, vt1;
SELECT vt0.c0, v0.c0, vt0.c1 FROM vt0, v0 GROUP BY vt0.c0, v0.c0, vt0.c1;
SELECT ALL vt0.c0, v0.c0, vt0.c1 FROM vt0, v0 WHERE (CASE WHEN STRFTIME(v0.c0, vt0.c0, v0.c0) THEN x'4cd5' ELSE CASE WHEN vt0.c1 THEN '-1839557700' WHEN vt0.c0 THEN v0.c0 WHEN vt0.c1 THEN vt0.c0 ELSE v0.c0 END END) GROUP BY vt0.c0, v0.c0, vt0.c1 UNION SELECT ALL vt0.c0, v0.c0, vt0.c1 FROM vt0, v0 WHERE ((NOT (CASE WHEN STRFTIME(v0.c0, vt0.c0, v0.c0) THEN x'4cd5' ELSE CASE WHEN vt0.c1 THEN '-1839557700' WHEN vt0.c0 THEN v0.c0 WHEN vt0.c1 THEN vt0.c0 ELSE v0.c0 END END))) GROUP BY vt0.c0, v0.c0, vt0.c1 UNION SELECT vt0.c0, v0.c0, vt0.c1 FROM vt0, v0 WHERE (((CASE WHEN STRFTIME(v0.c0, vt0.c0, v0.c0) THEN x'4cd5' ELSE CASE WHEN vt0.c1 THEN '-1839557700' WHEN vt0.c0 THEN v0.c0 WHEN vt0.c1 THEN vt0.c0 ELSE v0.c0 END END) ISNULL)) GROUP BY vt0.c0, v0.c0, vt0.c1;
SELECT vt0.c0, v0.c0, vt0.c1 FROM vt0, v0 GROUP BY vt0.c0, v0.c0, vt0.c1;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING TOTAL(CAST(v0.c0 AS REAL)) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (TOTAL(CAST(v0.c0 AS REAL)))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((TOTAL(CAST(v0.c0 AS REAL))) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING TOTAL(CAST(v0.c0 AS REAL)) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (TOTAL(CAST(v0.c0 AS REAL)))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((TOTAL(CAST(v0.c0 AS REAL))) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0;
SELECT ALL v0.c0 FROM v0 WHERE ('-923456571') UNION ALL SELECT ALL v0.c0 FROM v0 WHERE ((NOT ('-923456571'))) UNION ALL SELECT v0.c0 FROM v0 WHERE ((('-923456571') ISNULL));
SELECT ALL v0.c0 FROM v0;
SELECT DISTINCT * FROM vt1 RIGHT OUTER JOIN v0 ON CASE ((vt1.c1) IS FALSE)  WHEN '921674754' THEN (v0.c0 IN ()) WHEN ((vt0.c1)<(vt0.c0)) THEN ((((((((vt0.c1)AND(vt0.c1)))OR(vt1.c1)))OR(vt1.c1)))OR(vt0.c1)) WHEN ((v0.c0)LIKE(vt1.c0)) THEN v0.c0 END FULL OUTER JOIN vt0 ON ((((((((((vt0.c1)>>(vt1.c1)))OR(((vt0.c1)>=(vt0.c1)))))OR(v0.c0 COLLATE RTRIM)))AND((v0.c0 IN ()))))AND(x''));
SELECT vt1.c0, v0.c0, vt1.c1 FROM v0, vt1 GROUP BY vt1.c0, v0.c0, vt1.c1;
SELECT ALL vt1.c0, v0.c0, vt1.c1 FROM v0, vt1 WHERE (((vt1.c0)<>(NULL)) COLLATE BINARY COLLATE RTRIM) GROUP BY vt1.c0, v0.c0, vt1.c1 UNION SELECT ALL vt1.c0, v0.c0, vt1.c1 FROM v0, vt1 WHERE ((NOT (((vt1.c0)<>(NULL)) COLLATE BINARY COLLATE RTRIM))) GROUP BY vt1.c0, v0.c0, vt1.c1 UNION SELECT vt1.c0, v0.c0, vt1.c1 FROM v0, vt1 WHERE (((((vt1.c0)<>(NULL)) COLLATE BINARY COLLATE RTRIM) ISNULL)) GROUP BY vt1.c0, v0.c0, vt1.c1;
SELECT vt1.c0, v0.c0, vt1.c1 FROM v0, vt1 GROUP BY vt1.c0, v0.c0, vt1.c1;
SELECT ALL vt0.c1, vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c1, vt0.c0, v0.c0;
SELECT vt0.c1, vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c1, vt0.c0, v0.c0 HAVING MAX(CAST(COUNT(COUNT(*)) AS INTEGER)) UNION ALL SELECT vt0.c1, vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c1, vt0.c0, v0.c0 HAVING (NOT (MAX(CAST(COUNT(COUNT(*)) AS INTEGER)))) UNION ALL SELECT vt0.c1, vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c1, vt0.c0, v0.c0 HAVING ((MAX(CAST(COUNT(COUNT(*)) AS INTEGER))) ISNULL);
SELECT vt1.c1, v0.c0 FROM v0, vt1, vt0;
SELECT ALL vt1.c1, v0.c0 FROM v0, vt1, vt0 WHERE (ABS(DISTINCT ((((vt1.c0)AND(vt0.c0)))AND(vt1.c1)))) UNION ALL SELECT ALL vt1.c1, v0.c0 FROM v0, vt1, vt0 WHERE ((NOT (ABS(DISTINCT ((((vt1.c0)AND(vt0.c0)))AND(vt1.c1)))))) UNION ALL SELECT vt1.c1, v0.c0 FROM v0, vt1, vt0 WHERE (((ABS(DISTINCT ((((vt1.c0)AND(vt0.c0)))AND(vt1.c1)))) ISNULL));
SELECT vt1.c1, v0.c0 FROM v0, vt1, vt0;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE ((~ (vt1.c1)) COLLATE NOCASE) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT ((~ (vt1.c1)) COLLATE NOCASE))) UNION SELECT DISTINCT * FROM vt1 WHERE ((((~ (vt1.c1)) COLLATE NOCASE) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT ALL vt1.c0, vt1.c1 FROM vt1, v0 GROUP BY vt1.c0, vt1.c1;
SELECT ALL vt1.c0, vt1.c1 FROM vt1, v0 WHERE (x'') GROUP BY vt1.c0, vt1.c1 UNION SELECT ALL vt1.c0, vt1.c1 FROM vt1, v0 WHERE ((NOT (x''))) GROUP BY vt1.c0, vt1.c1 UNION SELECT ALL vt1.c0, vt1.c1 FROM vt1, v0 WHERE (((x'') ISNULL)) GROUP BY vt1.c0, vt1.c1;
SELECT ALL vt1.c0, vt1.c1 FROM vt1, v0 GROUP BY vt1.c0, vt1.c1;
SELECT v0.c0, vt0.c1, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c1, vt0.c0;
SELECT ALL v0.c0, vt0.c1, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c1, vt0.c0 HAVING x'29ae' UNION ALL SELECT v0.c0, vt0.c1, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c1, vt0.c0 HAVING (NOT (x'29ae')) UNION ALL SELECT v0.c0, vt0.c1, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c1, vt0.c0 HAVING ((x'29ae') ISNULL);
SELECT v0.c0, vt0.c1, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c1, vt0.c0;
SELECT ALL v0.c0, vt0.c1, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c1, vt0.c0 HAVING x'29ae' UNION ALL SELECT v0.c0, vt0.c1, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c1, vt0.c0 HAVING (NOT (x'29ae')) UNION ALL SELECT v0.c0, vt0.c1, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c1, vt0.c0 HAVING ((x'29ae') ISNULL);
SELECT v0.c0, vt0.c1, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c1, vt0.c0;
SELECT SUM(((((v0.c0) ISNULL)) NOTNULL)) FROM v0;
SELECT ALL vt0.c0, vt0.c1 FROM vt0, v0;
SELECT ALL vt0.c0, vt0.c1 FROM vt0, v0 WHERE (x'd59d') UNION ALL SELECT vt0.c0, vt0.c1 FROM vt0, v0 WHERE ((NOT (x'd59d'))) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt0, v0 WHERE (((x'd59d') ISNULL));
SELECT ALL vt0.c0, vt0.c1 FROM vt0, v0;
SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0;
SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((CASE WHEN vt0.c1 THEN vt0.c0 END)) AND (((- (vt0.c1)))))) UNION SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0 WHERE ((NOT ((((vt0.c0)) BETWEEN ((CASE WHEN vt0.c1 THEN vt0.c0 END)) AND (((- (vt0.c1)))))))) UNION SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0 WHERE ((((((vt0.c0)) BETWEEN ((CASE WHEN vt0.c1 THEN vt0.c0 END)) AND (((- (vt0.c1)))))) ISNULL));
SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0;
SELECT ALL vt0.c0, vt1.c1, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c1, vt1.c0;
SELECT vt0.c0, vt1.c1, vt1.c0 FROM vt0, vt1 WHERE (x'') GROUP BY vt0.c0, vt1.c1, vt1.c0 UNION SELECT ALL vt0.c0, vt1.c1, vt1.c0 FROM vt0, vt1 WHERE ((NOT (x''))) GROUP BY vt0.c0, vt1.c1, vt1.c0 UNION SELECT vt0.c0, vt1.c1, vt1.c0 FROM vt0, vt1 WHERE (((x'') ISNULL)) GROUP BY vt0.c0, vt1.c1, vt1.c0;
SELECT ALL vt0.c0, vt1.c1, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c1, vt1.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (- (GROUP_CONCAT(TOTAL(COUNT(*))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT ((- (GROUP_CONCAT(TOTAL(COUNT(*))))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((- (GROUP_CONCAT(TOTAL(COUNT(*)))))) ISNULL);
SELECT ALL * FROM vt0, vt1;
SELECT * FROM vt0, vt1 WHERE ((((vt1.c0) IS TRUE) IN ())) UNION ALL SELECT ALL * FROM vt0, vt1 WHERE ((NOT ((((vt1.c0) IS TRUE) IN ())))) UNION ALL SELECT * FROM vt0, vt1 WHERE ((((((vt1.c0) IS TRUE) IN ())) ISNULL));
SELECT ALL * FROM vt0, vt1;
SELECT DISTINCT vt1.c1, v0.c0 FROM vt1, v0;
SELECT DISTINCT vt1.c1, v0.c0 FROM vt1, v0 WHERE ((((vt1.c1)) BETWEEN ((v0.c0)) AND ((((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c1)))OR(vt1.c0)))OR(vt1.c0)))))) UNION SELECT DISTINCT vt1.c1, v0.c0 FROM vt1, v0 WHERE ((NOT ((((vt1.c1)) BETWEEN ((v0.c0)) AND ((((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c1)))OR(vt1.c0)))OR(vt1.c0)))))))) UNION SELECT DISTINCT vt1.c1, v0.c0 FROM vt1, v0 WHERE ((((((vt1.c1)) BETWEEN ((v0.c0)) AND ((((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c1)))OR(vt1.c0)))OR(vt1.c0)))))) ISNULL));
SELECT DISTINCT vt1.c1, v0.c0 FROM vt1, v0;
SELECT ALL v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0;
SELECT v0.c0, vt0.c0 FROM v0, vt0 WHERE (((((CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN vt0.c0 WHEN 'D1há¦¯g' THEN vt0.c1 WHEN vt0.c0 THEN v0.c0 WHEN '-922314581' THEN v0.c0 ELSE x'' END)AND(v0.c0)))OR((((vt0.c1))<>((vt0.c0)))))) GROUP BY v0.c0, vt0.c0 UNION SELECT ALL v0.c0, vt0.c0 FROM v0, vt0 WHERE ((NOT (((((CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN vt0.c0 WHEN 'D1há¦¯g' THEN vt0.c1 WHEN vt0.c0 THEN v0.c0 WHEN '-922314581' THEN v0.c0 ELSE x'' END)AND(v0.c0)))OR((((vt0.c1))<>((vt0.c0)))))))) GROUP BY v0.c0, vt0.c0 UNION SELECT ALL v0.c0, vt0.c0 FROM v0, vt0 WHERE (((((((CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN vt0.c0 WHEN 'D1há¦¯g' THEN vt0.c1 WHEN vt0.c0 THEN v0.c0 WHEN '-922314581' THEN v0.c0 ELSE x'' END)AND(v0.c0)))OR((((vt0.c1))<>((vt0.c0)))))) ISNULL)) GROUP BY v0.c0, vt0.c0;
SELECT ALL v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0;
SELECT vt0.c1, vt1.c1, vt0.c0 FROM vt1, vt0 GROUP BY vt0.c1, vt1.c1, vt0.c0;
SELECT ALL vt0.c1, vt1.c1, vt0.c0 FROM vt1, vt0 GROUP BY vt0.c1, vt1.c1, vt0.c0 HAVING CASE (((vt1.c1)) BETWEEN ((vt1.c1)) AND ((AVG(AVG(vt0.c0)))))  WHEN MIN(COUNT(COUNT(vt1.c1))) THEN ((((((((SUM(TOTAL(vt0.c1)))AND(vt1.c0)))AND(GROUP_CONCAT(COUNT(*)))))OR(NULL)))OR(GROUP_CONCAT(COUNT(*)))) END UNION ALL SELECT vt0.c1, vt1.c1, vt0.c0 FROM vt1, vt0 GROUP BY vt0.c1, vt1.c1, vt0.c0 HAVING (NOT (CASE (((vt1.c1)) BETWEEN ((vt1.c1)) AND ((AVG(AVG(vt0.c0)))))  WHEN MIN(COUNT(COUNT(vt1.c1))) THEN ((((((((SUM(TOTAL(vt0.c1)))AND(vt1.c0)))AND(GROUP_CONCAT(COUNT(*)))))OR(NULL)))OR(GROUP_CONCAT(COUNT(*)))) END)) UNION ALL SELECT vt0.c1, vt1.c1, vt0.c0 FROM vt1, vt0 GROUP BY vt0.c1, vt1.c1, vt0.c0 HAVING ((CASE (((vt1.c1)) BETWEEN ((vt1.c1)) AND ((AVG(AVG(vt0.c0)))))  WHEN MIN(COUNT(COUNT(vt1.c1))) THEN ((((((((SUM(TOTAL(vt0.c1)))AND(vt1.c0)))AND(GROUP_CONCAT(COUNT(*)))))OR(NULL)))OR(GROUP_CONCAT(COUNT(*)))) END) ISNULL);
SELECT ALL * FROM v0;
SELECT * FROM v0 WHERE ('-1831238665') UNION ALL SELECT * FROM v0 WHERE ((NOT ('-1831238665'))) UNION ALL SELECT ALL * FROM v0 WHERE ((('-1831238665') ISNULL));
SELECT ALL * FROM v0;
SELECT DISTINCT vt0.c1, vt1.c1, vt0.c0, v0.c0 FROM vt1, v0, vt0;
SELECT DISTINCT vt0.c1, vt1.c1, vt0.c0, v0.c0 FROM vt1, v0, vt0 WHERE (((vt0.c1)<(((v0.c0)<=(vt0.c0))))) UNION SELECT DISTINCT vt0.c1, vt1.c1, vt0.c0, v0.c0 FROM vt1, v0, vt0 WHERE ((NOT (((vt0.c1)<(((v0.c0)<=(vt0.c0))))))) UNION SELECT DISTINCT vt0.c1, vt1.c1, vt0.c0, v0.c0 FROM vt1, v0, vt0 WHERE (((((vt0.c1)<(((v0.c0)<=(vt0.c0))))) ISNULL));
SELECT DISTINCT vt0.c1, vt1.c1, vt0.c0, v0.c0 FROM vt1, v0, vt0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (((v0.c0)OR(((v0.c0) NOT NULL)))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (((v0.c0)OR(((v0.c0) NOT NULL)))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE (((((v0.c0)OR(((v0.c0) NOT NULL)))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT vt1.c1 FROM vt0, v0 RIGHT OUTER JOIN vt1 ON vt1.c1 GROUP BY vt1.c1;
SELECT vt1.c1 FROM vt0, v0 RIGHT OUTER JOIN vt1 ON vt1.c1 GROUP BY vt1.c1 HAVING (CASE WHEN MAX(COUNT(*)) THEN GROUP_CONCAT(vt0.c0) WHEN vt0.c0 THEN COUNT(vt0.c1) WHEN MIN(vt0.c1) THEN MIN(vt1.c0) ELSE COUNT(COUNT(vt0.c0)) END IN (GROUP_CONCAT(MIN(vt0.c0)), COUNT(v0.c0))) UNION ALL SELECT ALL vt1.c1 FROM vt0, v0 RIGHT OUTER JOIN vt1 ON vt1.c1 GROUP BY vt1.c1 HAVING (NOT ((CASE WHEN MAX(COUNT(*)) THEN GROUP_CONCAT(vt0.c0) WHEN vt0.c0 THEN COUNT(vt0.c1) WHEN MIN(vt0.c1) THEN MIN(vt1.c0) ELSE COUNT(COUNT(vt0.c0)) END IN (GROUP_CONCAT(MIN(vt0.c0)), COUNT(v0.c0))))) UNION ALL SELECT vt1.c1 FROM vt0, v0 RIGHT OUTER JOIN vt1 ON vt1.c1 GROUP BY vt1.c1 HAVING (((CASE WHEN MAX(COUNT(*)) THEN GROUP_CONCAT(vt0.c0) WHEN vt0.c0 THEN COUNT(vt0.c1) WHEN MIN(vt0.c1) THEN MIN(vt1.c0) ELSE COUNT(COUNT(vt0.c0)) END IN (GROUP_CONCAT(MIN(vt0.c0)), COUNT(v0.c0)))) ISNULL);
SELECT MIN((((((vt0.c0)|(vt0.c0)), ((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)), (vt0.c0 IN ())))>=((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN -1692717983 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END, vt0.c0, vt0.c1 COLLATE NOCASE)))) FROM vt0 ORDER BY ((((((((vt0.c0 COLLATE RTRIM)AND((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c0))))))AND(CASE WHEN vt0.c1 THEN vt0.c1 END)))AND(IFNULL(DISTINCT vt0.c1, vt0.c0))))OR(((vt0.c1)<=(vt0.c1)))) DESC  NULLS FIRST, (((((vt0.c1)-(vt0.c0)), ((vt0.c0)IS NOT(vt0.c1)), CAST(vt0.c0 AS NUMERIC)))==((vt0.c1, ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)), ((x'') NOTNULL)))) DESC, ((vt0.c1 COLLATE BINARY)&(CAST(vt0.c1 AS TEXT)));
SELECT ALL * FROM v0 INNER JOIN vt0 ON '-2010862646' FULL OUTER JOIN vt1 ON ((((((((CAST(vt0.c1 AS NUMERIC))AND(((((v0.c0)OR(NULL)))OR(vt1.c0)))))OR(((vt1.c0)&(vt0.c1)))))OR((- (vt0.c1)))))OR(((((v0.c0)AND('')))OR(vt0.c0))));
SELECT * FROM v0 INNER JOIN vt0 ON '-2010862646' FULL OUTER JOIN vt1 ON ((((((((CAST(vt0.c1 AS NUMERIC))AND(((((v0.c0)OR(NULL)))OR(vt1.c0)))))OR(((vt1.c0)&(vt0.c1)))))OR((- (vt0.c1)))))OR(((((v0.c0)AND('')))OR(vt0.c0)))) WHERE (((load_extension(v0.c0, vt0.c1))IS NOT((((vt1.c1))<>((vt1.c0)))))) UNION ALL SELECT ALL * FROM v0 INNER JOIN vt0 ON '-2010862646' FULL OUTER JOIN vt1 ON ((((((((CAST(vt0.c1 AS NUMERIC))AND(((((v0.c0)OR(NULL)))OR(vt1.c0)))))OR(((vt1.c0)&(vt0.c1)))))OR((- (vt0.c1)))))OR(((((v0.c0)AND('')))OR(vt0.c0)))) WHERE ((NOT (((load_extension(v0.c0, vt0.c1))IS NOT((((vt1.c1))!=((vt1.c0)))))))) UNION ALL SELECT ALL * FROM v0 INNER JOIN vt0 ON '-2010862646' FULL OUTER JOIN vt1 ON ((((((((CAST(vt0.c1 AS NUMERIC))AND(((((v0.c0)OR(NULL)))OR(vt1.c0)))))OR(((vt1.c0)&(vt0.c1)))))OR((- (vt0.c1)))))OR(((((v0.c0)AND('')))OR(vt0.c0)))) WHERE (((((load_extension(v0.c0, vt0.c1))IS NOT((((vt1.c1))<>((vt1.c0)))))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0, vt1;
SELECT DISTINCT vt0.c0 FROM vt0, vt1 WHERE (((((vt1.c1)!=(vt0.c0))) NOTNULL)) UNION SELECT DISTINCT vt0.c0 FROM vt0, vt1 WHERE ((NOT (((((vt1.c1)<>(vt0.c0))) NOTNULL)))) UNION SELECT DISTINCT vt0.c0 FROM vt0, vt1 WHERE (((((((vt1.c1)<>(vt0.c0))) NOTNULL)) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0, vt1;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN (((vt0.c0 IN (vt0.c1)))) AND (((vt0.c0 IN ()))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT ((((vt0.c0)) NOT BETWEEN (((vt0.c0 IN (vt0.c1)))) AND (((vt0.c0 IN ()))))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((((((vt0.c0)) NOT BETWEEN (((vt0.c0 IN (vt0.c1)))) AND (((vt0.c0 IN ()))))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt1.c0 FROM vt0 FULL OUTER JOIN vt1 ON ((((vt0.c0)<(vt0.c1))) BETWEEN (((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1))) AND (((((((((vt1.c1)AND(vt0.c1)))OR(v0.c0)))AND(x'')))OR(vt1.c1)))) INNER JOIN v0 ON ((((vt1.c0) IS TRUE))=(CASE WHEN vt0.c1 THEN vt1.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END)) GROUP BY vt1.c0;
SELECT ALL * FROM vt1, vt0, v0;
SELECT * FROM vt1, vt0, v0 WHERE ((((((((v0.c0)OR(vt1.c1)))OR(vt1.c1))))>((((vt1.c0) NOT NULL))))) UNION ALL SELECT ALL * FROM vt1, vt0, v0 WHERE ((NOT ((((((((v0.c0)OR(vt1.c1)))OR(vt1.c1))))>((((vt1.c0) NOT NULL))))))) UNION ALL SELECT * FROM vt1, vt0, v0 WHERE ((((((((((v0.c0)OR(vt1.c1)))OR(vt1.c1))))>((((vt1.c0) NOT NULL))))) ISNULL));
SELECT ALL * FROM vt1, vt0, v0;
SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0;
SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0 WHERE (((((vt0.c1) IS FALSE))OR(((vt0.c0)GLOB(vt0.c0))))) UNION SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0 WHERE ((NOT (((((vt0.c1) IS FALSE))OR(((vt0.c0)GLOB(vt0.c0))))))) UNION SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0 WHERE (((((((vt0.c1) IS FALSE))OR(((vt0.c0)GLOB(vt0.c0))))) ISNULL));
SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0;
SELECT ALL vt0.c0, vt1.c0, vt0.c1 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0, vt0.c1;
SELECT vt0.c0, vt1.c0, vt0.c1 FROM vt0, vt1 WHERE ((NOT (vt1.c1)) COLLATE BINARY) GROUP BY vt0.c0, vt1.c0, vt0.c1 UNION SELECT vt0.c0, vt1.c0, vt0.c1 FROM vt0, vt1 WHERE ((NOT ((NOT (vt1.c1)) COLLATE BINARY))) GROUP BY vt0.c0, vt1.c0, vt0.c1 UNION SELECT vt0.c0, vt1.c0, vt0.c1 FROM vt0, vt1 NOT INDEXED WHERE ((((NOT (vt1.c1)) COLLATE BINARY) ISNULL)) GROUP BY vt0.c0, vt1.c0, vt0.c1;
SELECT ALL vt0.c0, vt1.c0, vt0.c1 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0, vt0.c1;
SELECT vt0.c1, v0.c0 FROM v0 LEFT OUTER JOIN vt0 ON LOWER(CAST(vt0.c1 AS INTEGER)) GROUP BY vt0.c1, v0.c0;
SELECT ALL vt0.c1, v0.c0 FROM v0 LEFT OUTER JOIN vt0 ON LOWER(CAST(vt0.c1 AS INTEGER)) GROUP BY vt0.c1, v0.c0 HAVING SUM(GROUP_CONCAT(vt0.c1)) UNION ALL SELECT vt0.c1, v0.c0 FROM v0 LEFT OUTER JOIN vt0 ON LOWER(CAST(vt0.c1 AS INTEGER)) GROUP BY vt0.c1, v0.c0 HAVING (NOT (SUM(GROUP_CONCAT(vt0.c1)))) UNION ALL SELECT vt0.c1, v0.c0 FROM v0 LEFT OUTER JOIN vt0 ON LOWER(CAST(vt0.c1 AS INTEGER)) GROUP BY vt0.c1, v0.c0 HAVING ((SUM(GROUP_CONCAT(vt0.c1))) ISNULL);
SELECT vt1.c1 FROM v0, vt1, vt0;
SELECT vt1.c1 FROM v0, vt1, vt0 WHERE (((CAST(vt0.c1 AS TEXT))IS NOT(CASE vt0.c0  WHEN vt1.c0 THEN v0.c0 END))) UNION ALL SELECT vt1.c1 FROM v0, vt1, vt0 WHERE ((NOT (((CAST(vt0.c1 AS TEXT))IS NOT(CASE vt0.c0  WHEN vt1.c0 THEN v0.c0 END))))) UNION ALL SELECT ALL vt1.c1 FROM v0, vt1, vt0 WHERE (((((CAST(vt0.c1 AS TEXT))IS NOT(CASE vt0.c0  WHEN vt1.c0 THEN v0.c0 END))) ISNULL));
SELECT vt1.c1 FROM v0, vt1, vt0;
SELECT DISTINCT v0.c0, vt0.c0, vt0.c1 FROM vt0, v0;
SELECT DISTINCT v0.c0, vt0.c0, vt0.c1 FROM vt0, v0 WHERE (CAST((((vt0.c0, vt0.c1, vt0.c1)) BETWEEN ((vt0.c1, vt0.c0, vt0.c1)) AND ((v0.c0, v0.c0, v0.c0))) AS TEXT)) UNION SELECT DISTINCT v0.c0, vt0.c0, vt0.c1 FROM vt0, v0 WHERE ((NOT (CAST((((vt0.c0, vt0.c1, vt0.c1)) BETWEEN ((vt0.c1, vt0.c0, vt0.c1)) AND ((v0.c0, v0.c0, v0.c0))) AS TEXT)))) UNION SELECT DISTINCT v0.c0, vt0.c0, vt0.c1 FROM vt0, v0 WHERE (((CAST((((vt0.c0, vt0.c1, vt0.c1)) BETWEEN ((vt0.c1, vt0.c0, vt0.c1)) AND ((v0.c0, v0.c0, v0.c0))) AS TEXT)) ISNULL));
SELECT DISTINCT v0.c0, vt0.c0, vt0.c1 FROM vt0, v0;
SELECT ALL vt0.c0, vt1.c1, vt0.c1, v0.c0, vt1.c0 FROM vt0, vt1, v0 GROUP BY vt0.c0, vt1.c1, vt0.c1, v0.c0, vt1.c0;
SELECT vt0.c0, vt1.c1, vt0.c1, v0.c0, vt1.c0 FROM vt0, vt1, v0 WHERE (x'') GROUP BY vt0.c0, vt1.c1, vt0.c1, v0.c0, vt1.c0 UNION SELECT ALL vt0.c0, vt1.c1, vt0.c1, v0.c0, vt1.c0 FROM vt0, vt1, v0 WHERE ((NOT (x''))) GROUP BY vt0.c0, vt1.c1, vt0.c1, v0.c0, vt1.c0 UNION SELECT ALL vt0.c0, vt1.c1, vt0.c1, v0.c0, vt1.c0 FROM vt0, vt1, v0 WHERE (((x'') ISNULL)) GROUP BY vt0.c0, vt1.c1, vt0.c1, v0.c0, vt1.c0;
SELECT ALL vt0.c0, vt1.c1, vt0.c1, v0.c0, vt1.c0 FROM vt0, vt1, v0 GROUP BY vt0.c0, vt1.c1, vt0.c1, v0.c0, vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (((((AVG(MAX(COUNT(MAX(vt1.c0)))) IN ()))OR(JULIANDAY(MIN(vt1.c1), vt1.c0, MIN(vt1.c0)))))AND(json_object(vt1.c0, vt1.c0))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT ((((((AVG(MAX(COUNT(MAX(vt1.c0)))) IN ()))OR(JULIANDAY(MIN(vt1.c1), vt1.c0, MIN(vt1.c0)))))AND(json_object(vt1.c0, vt1.c0))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (((((((AVG(MAX(COUNT(MAX(vt1.c0)))) IN ()))OR(JULIANDAY(MIN(vt1.c1), vt1.c0, MIN(vt1.c0)))))AND(json_object(vt1.c0, vt1.c0)))) ISNULL);
SELECT v0.c0 FROM v0;
SELECT v0.c0 FROM v0 WHERE (((LIKELY(DISTINCT v0.c0)) BETWEEN (QUOTE(v0.c0)) AND (v0.c0))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE ((NOT (((LIKELY(DISTINCT v0.c0)) BETWEEN (QUOTE(v0.c0)) AND (v0.c0))))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE (((((LIKELY(DISTINCT v0.c0)) BETWEEN (QUOTE(v0.c0)) AND (v0.c0))) ISNULL));
SELECT v0.c0 FROM v0;
SELECT DISTINCT vt0.c0, vt0.c1, vt1.c0, vt1.c1 FROM vt0 CROSS JOIN vt1 ON (((((vt1.c0, vt0.c0, vt0.c1)) BETWEEN ((vt0.c0, vt1.c0, vt1.c1)) AND ((vt0.c1, vt0.c1, vt1.c0)))) BETWEEN (((vt1.c0) IS TRUE)) AND (IFNULL(vt0.c0, vt1.c1)));
SELECT DISTINCT vt0.c0, vt0.c1, vt1.c0, vt1.c1 FROM vt0 CROSS JOIN vt1 ON (((((vt1.c0, vt0.c0, vt0.c1)) BETWEEN ((vt0.c0, vt1.c0, vt1.c1)) AND ((vt0.c1, vt0.c1, vt1.c0)))) BETWEEN (((vt1.c0) IS TRUE)) AND (IFNULL(vt0.c0, vt1.c1))) WHERE ((+ (CASE vt0.c1  WHEN vt1.c1 THEN vt0.c1 ELSE vt0.c1 END))) UNION SELECT DISTINCT vt0.c0, vt0.c1, vt1.c0, vt1.c1 FROM vt0 CROSS JOIN vt1 ON (((((vt1.c0, vt0.c0, vt0.c1)) BETWEEN ((vt0.c0, vt1.c0, vt1.c1)) AND ((vt0.c1, vt0.c1, vt1.c0)))) BETWEEN (((vt1.c0) IS TRUE)) AND (IFNULL(vt0.c0, vt1.c1))) WHERE ((NOT ((+ (CASE vt0.c1  WHEN vt1.c1 THEN vt0.c1 ELSE vt0.c1 END))))) UNION SELECT DISTINCT vt0.c0, vt0.c1, vt1.c0, vt1.c1 FROM vt0 CROSS JOIN vt1 ON (((((vt1.c0, vt0.c0, vt0.c1)) BETWEEN ((vt0.c0, vt1.c0, vt1.c1)) AND ((vt0.c1, vt0.c1, vt1.c0)))) BETWEEN (((vt1.c0) IS TRUE)) AND (IFNULL(vt0.c0, vt1.c1))) WHERE ((((+ (CASE vt0.c1  WHEN vt1.c1 THEN vt0.c1 ELSE vt0.c1 END))) ISNULL));
SELECT DISTINCT vt0.c0, vt0.c1, vt1.c0, vt1.c1 FROM vt0 CROSS JOIN vt1 ON (((((vt1.c0, vt0.c0, vt0.c1)) BETWEEN ((vt0.c0, vt1.c0, vt1.c1)) AND ((vt0.c1, vt0.c1, vt1.c0)))) BETWEEN (((vt1.c0) IS TRUE)) AND (IFNULL(vt0.c0, vt1.c1)));
SELECT vt1.c0, vt1.c1 FROM vt1, v0, vt0 GROUP BY vt1.c0, vt1.c1;
SELECT vt1.c0, vt1.c1 FROM vt1, v0, vt0 WHERE ((((vt1.c0))!=((vt1.c0))) COLLATE NOCASE) GROUP BY vt1.c0, vt1.c1 UNION SELECT vt1.c0, vt1.c1 FROM vt1, v0, vt0 WHERE ((NOT ((((vt1.c0))!=((vt1.c0))) COLLATE NOCASE))) GROUP BY vt1.c0, vt1.c1 UNION SELECT ALL vt1.c0, vt1.c1 FROM vt1, v0, vt0 WHERE ((((((vt1.c0))!=((vt1.c0))) COLLATE NOCASE) ISNULL)) GROUP BY vt1.c0, vt1.c1;
SELECT vt1.c0, vt1.c1 FROM vt1, v0, vt0 GROUP BY vt1.c0, vt1.c1;
SELECT ALL v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0;
SELECT v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0 HAVING MIN(TOTAL(COUNT(v0.c0))) COLLATE RTRIM UNION ALL SELECT ALL v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0 HAVING (NOT (MIN(TOTAL(COUNT(v0.c0))) COLLATE RTRIM)) UNION ALL SELECT v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0 HAVING ((MIN(TOTAL(COUNT(v0.c0))) COLLATE RTRIM) ISNULL);
SELECT * FROM v0, vt1;
SELECT ALL * FROM v0, vt1 WHERE (CASE '-104844045'  WHEN (((1984579341))>=((v0.c0))) THEN (- (vt1.c0)) WHEN ((vt1.c1) NOT NULL) THEN ((((vt1.c1)OR(x'')))AND(vt1.c1)) WHEN ((vt1.c0)!=(v0.c0)) THEN ((v0.c0) IS TRUE) END) UNION ALL SELECT * FROM v0, vt1 WHERE ((NOT (CASE '-104844045'  WHEN (((1984579341))>=((v0.c0))) THEN (- (vt1.c0)) WHEN ((vt1.c1) NOT NULL) THEN ((((vt1.c1)OR(x'')))AND(vt1.c1)) WHEN ((vt1.c0)<>(v0.c0)) THEN ((v0.c0) IS TRUE) END))) UNION ALL SELECT ALL * FROM v0, vt1 WHERE (((CASE '-104844045'  WHEN (((1984579341))>=((v0.c0))) THEN (- (vt1.c0)) WHEN ((vt1.c1) NOT NULL) THEN ((((vt1.c1)OR(x'')))AND(vt1.c1)) WHEN ((vt1.c0)<>(v0.c0)) THEN ((v0.c0) IS TRUE) END) ISNULL));
SELECT * FROM v0, vt1;
SELECT DISTINCT * FROM vt0, v0, vt1;
SELECT DISTINCT * FROM vt0, v0, vt1 WHERE (((((((((((((v0.c0)AND(vt1.c1)))OR(v0.c0)))AND(vt1.c1)))OR(vt0.c0)))OR(((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)))))OR(CAST(v0.c0 AS REAL)))) UNION SELECT DISTINCT * FROM vt0, v0, vt1 WHERE ((NOT (((((((((((((v0.c0)AND(vt1.c1)))OR(v0.c0)))AND(vt1.c1)))OR(vt0.c0)))OR(((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)))))OR(CAST(v0.c0 AS REAL)))))) UNION SELECT DISTINCT * FROM vt0, v0, vt1 WHERE (((((((((((((((v0.c0)AND(vt1.c1)))OR(v0.c0)))AND(vt1.c1)))OR(vt0.c0)))OR(((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)))))OR(CAST(v0.c0 AS REAL)))) ISNULL));
SELECT DISTINCT * FROM vt0, v0, vt1;
SELECT vt1.c1 FROM vt1 NOT INDEXED GROUP BY vt1.c1;
SELECT ALL vt1.c1 FROM vt1 WHERE (((vt1.c1 COLLATE NOCASE) BETWEEN (NULL) AND (json_array_length(vt1.c1, vt1.c0)))) GROUP BY vt1.c1 UNION SELECT ALL vt1.c1 FROM vt1 WHERE ((NOT (((vt1.c1 COLLATE NOCASE) BETWEEN (NULL) AND (json_array_length(vt1.c1, vt1.c0)))))) GROUP BY vt1.c1 UNION SELECT vt1.c1 FROM vt1 WHERE (((((vt1.c1 COLLATE NOCASE) BETWEEN (NULL) AND (json_array_length(vt1.c1, vt1.c0)))) ISNULL)) GROUP BY vt1.c1;
SELECT ALL vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1;
SELECT vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1 HAVING TOTAL((NOT (x'03237d75'))) UNION ALL SELECT ALL vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1 HAVING (NOT (TOTAL((NOT (x'03237d75'))))) UNION ALL SELECT ALL vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1 HAVING ((TOTAL((NOT (x'03237d75')))) ISNULL);
SELECT ALL vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1;
SELECT vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1 HAVING TOTAL((NOT (x'03237d75'))) UNION ALL SELECT ALL vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1 HAVING (NOT (TOTAL((NOT (x'03237d75'))))) UNION ALL SELECT ALL vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1 HAVING ((TOTAL((NOT (x'03237d75')))) ISNULL);
SELECT ALL vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1;
SELECT ALL * FROM v0, vt1;
SELECT * FROM v0, vt1 WHERE ((LOWER(DISTINCT v0.c0) IN ())) UNION ALL SELECT ALL * FROM v0, vt1 WHERE ((NOT ((LOWER(DISTINCT v0.c0) IN ())))) UNION ALL SELECT * FROM v0, vt1 WHERE ((((LOWER(DISTINCT v0.c0) IN ())) ISNULL));
SELECT ALL * FROM v0, vt1;
SELECT DISTINCT vt1.c0, vt1.c1, vt0.c1 FROM vt1, vt0;
SELECT DISTINCT vt1.c0, vt1.c1, vt0.c1 FROM vt1, vt0 WHERE (((UNICODE(vt1.c1)) NOT BETWEEN (((-1375806646)AND(vt1.c0))) AND (((vt0.c0) BETWEEN (vt0.c1) AND (vt1.c0))))) UNION SELECT DISTINCT vt1.c0, vt1.c1, vt0.c1 FROM vt1, vt0 WHERE ((NOT (((UNICODE(vt1.c1)) NOT BETWEEN (((-1375806646)AND(vt1.c0))) AND (((vt0.c0) BETWEEN (vt0.c1) AND (vt1.c0))))))) UNION SELECT DISTINCT vt1.c0, vt1.c1, vt0.c1 FROM vt1, vt0 WHERE (((((UNICODE(vt1.c1)) NOT BETWEEN (((-1375806646)AND(vt1.c0))) AND (((vt0.c0) BETWEEN (vt0.c1) AND (vt1.c0))))) ISNULL));
SELECT DISTINCT vt1.c0, vt1.c1, vt0.c1 FROM vt1, vt0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))||(CAST(v0.c0 AS TEXT)))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))||(CAST(v0.c0 AS TEXT)))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE (((((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))||(CAST(v0.c0 AS TEXT)))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT vt0.c0, vt0.c1 FROM vt0, v0 NATURAL JOIN vt1 GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0, v0 NATURAL JOIN vt1 GROUP BY vt0.c0, vt0.c1 HAVING TOTAL(MIN(v0.c0)) UNION ALL SELECT vt0.c0, vt0.c1 FROM vt0, v0 NATURAL JOIN vt1 GROUP BY vt0.c0, vt0.c1 HAVING (NOT (TOTAL(MIN(v0.c0)))) UNION ALL SELECT vt0.c0, vt0.c1 FROM vt0, v0 NATURAL JOIN vt1 GROUP BY vt0.c0, vt0.c1 HAVING ((TOTAL(MIN(v0.c0))) ISNULL);
SELECT vt0.c0, vt0.c1, v0.c0 FROM vt0, v0;
SELECT vt0.c0, vt0.c1, v0.c0 FROM vt0, v0 WHERE (NULL) UNION ALL SELECT ALL vt0.c0, vt0.c1, v0.c0 FROM vt0, v0 WHERE ((NOT (NULL))) UNION ALL SELECT ALL vt0.c0, vt0.c1, v0.c0 FROM vt0, v0 WHERE (((NULL) ISNULL));
SELECT vt0.c0, vt0.c1, v0.c0 FROM vt0, v0;
SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0;
SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0 WHERE (0xffffffffa32f7128) UNION SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0 WHERE ((NOT (0Xffffffffa32f7128))) UNION SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0 NOT INDEXED WHERE (((0xffffffffa32f7128) ISNULL));
SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0;
SELECT vt1.c0 FROM vt0 LEFT OUTER JOIN vt1 ON vt0.c1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt0 LEFT OUTER JOIN vt1 ON vt0.c1 WHERE (0.38450458531620424) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt0 LEFT OUTER JOIN vt1 ON vt0.c1 WHERE ((NOT (0.38450458531620424))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt0 LEFT OUTER JOIN vt1 ON vt0.c1 WHERE (((0.38450458531620424) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt0 LEFT OUTER JOIN vt1 ON vt0.c1 GROUP BY vt1.c0;
SELECT v0.c0 FROM v0, vt0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0, vt0 GROUP BY v0.c0 HAVING MAX(GROUP_CONCAT(COUNT(*))) COLLATE BINARY UNION ALL SELECT ALL v0.c0 FROM v0, vt0 GROUP BY v0.c0 HAVING (NOT (MAX(GROUP_CONCAT(COUNT(*))) COLLATE BINARY)) UNION ALL SELECT ALL v0.c0 FROM v0, vt0 GROUP BY v0.c0 HAVING ((MAX(GROUP_CONCAT(COUNT(*))) COLLATE BINARY) ISNULL);
SELECT ALL v0.c0 FROM v0;
SELECT v0.c0 FROM v0 WHERE (CASE ((v0.c0) BETWEEN (v0.c0) AND (v0.c0))  WHEN (((((((('{<')OR(v0.c0)))OR(v0.c0)))OR(v0.c0)))AND(v0.c0)) THEN ((((v0.c0)AND(v0.c0)))OR(v0.c0)) ELSE (((v0.c0))<((v0.c0))) END) UNION ALL SELECT v0.c0 FROM v0 WHERE ((NOT (CASE ((v0.c0) BETWEEN (v0.c0) AND (v0.c0))  WHEN (((((((('{<')OR(v0.c0)))OR(v0.c0)))OR(v0.c0)))AND(v0.c0)) THEN ((((v0.c0)AND(v0.c0)))OR(v0.c0)) ELSE (((v0.c0))<((v0.c0))) END))) UNION ALL SELECT v0.c0 FROM v0 WHERE (((CASE ((v0.c0) BETWEEN (v0.c0) AND (v0.c0))  WHEN (((((((('{<')OR(v0.c0)))OR(v0.c0)))OR(v0.c0)))AND(v0.c0)) THEN ((((v0.c0)AND(v0.c0)))OR(v0.c0)) ELSE (((v0.c0))<((v0.c0))) END) ISNULL));
SELECT ALL v0.c0 FROM v0;
SELECT DISTINCT vt1.c0, v0.c0, vt1.c1 FROM vt1, v0;
SELECT DISTINCT vt1.c0, v0.c0, vt1.c1 FROM vt1, v0 WHERE (((((v0.c0)AND(v0.c0))) BETWEEN ((~ (v0.c0))) AND (CASE vt1.c0  WHEN v0.c0 THEN v0.c0 WHEN x'7300' THEN vt1.c0 WHEN v0.c0 THEN '' WHEN vt1.c0 THEN vt1.c0 WHEN v0.c0 THEN vt1.c0 END))) UNION SELECT DISTINCT vt1.c0, v0.c0, vt1.c1 FROM vt1, v0 WHERE ((NOT (((((v0.c0)AND(v0.c0))) BETWEEN ((~ (v0.c0))) AND (CASE vt1.c0  WHEN v0.c0 THEN v0.c0 WHEN x'7300' THEN vt1.c0 WHEN v0.c0 THEN '' WHEN vt1.c0 THEN vt1.c0 WHEN v0.c0 THEN vt1.c0 END))))) UNION SELECT DISTINCT vt1.c0, v0.c0, vt1.c1 FROM vt1, v0 WHERE (((((((v0.c0)AND(v0.c0))) BETWEEN ((~ (v0.c0))) AND (CASE vt1.c0  WHEN v0.c0 THEN v0.c0 WHEN x'7300' THEN vt1.c0 WHEN v0.c0 THEN '' WHEN vt1.c0 THEN vt1.c0 WHEN v0.c0 THEN vt1.c0 END))) ISNULL));
SELECT DISTINCT vt1.c0, v0.c0, vt1.c1 FROM vt1, v0;
SELECT ALL vt0.c0, v0.c0 FROM vt1, v0, vt0 GROUP BY vt0.c0, v0.c0;
SELECT vt0.c0, v0.c0 FROM vt1, v0, vt0 WHERE (((NULL)/(LOWER(DISTINCT vt1.c1)))) GROUP BY vt0.c0, v0.c0 UNION SELECT ALL vt0.c0, v0.c0 FROM vt1, v0, vt0 WHERE ((NOT (((NULL)/(LOWER(DISTINCT vt1.c1)))))) GROUP BY vt0.c0, v0.c0 UNION SELECT ALL vt0.c0, v0.c0 FROM vt1, v0, vt0 WHERE (((((NULL)/(LOWER(DISTINCT vt1.c1)))) ISNULL)) GROUP BY vt0.c0, v0.c0;
SELECT ALL vt0.c0, v0.c0 FROM vt1, v0, vt0 GROUP BY vt0.c0, v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING COUNT(AVG(v0.c0)) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (COUNT(AVG(v0.c0)))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((COUNT(AVG(v0.c0))) ISNULL);
SELECT ALL v0.c0, vt0.c0, vt1.c1, vt1.c0 FROM vt1, vt0, v0;
SELECT ALL v0.c0, vt0.c0, vt1.c1, vt1.c0 FROM vt1, vt0, v0 WHERE (CASE WHEN vt0.c1 THEN vt1.c0 COLLATE BINARY ELSE (((vt1.c0, vt1.c1, vt1.c0))<((vt1.c1, vt0.c0, v0.c0))) END) UNION ALL SELECT ALL v0.c0, vt0.c0, vt1.c1, vt1.c0 FROM vt1, vt0, v0 WHERE ((NOT (CASE WHEN vt0.c1 THEN vt1.c0 COLLATE BINARY ELSE (((vt1.c0, vt1.c1, vt1.c0))<((vt1.c1, vt0.c0, v0.c0))) END))) UNION ALL SELECT v0.c0, vt0.c0, vt1.c1, vt1.c0 FROM vt1, vt0, v0 WHERE (((CASE WHEN vt0.c1 THEN vt1.c0 COLLATE BINARY ELSE (((vt1.c0, vt1.c1, vt1.c0))<((vt1.c1, vt0.c0, v0.c0))) END) ISNULL));
SELECT ALL v0.c0, vt0.c0, vt1.c1, vt1.c0 FROM vt1, vt0, v0;
SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0 NATURAL JOIN v0;
SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0 NATURAL JOIN v0 WHERE (v0.c0) UNION SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0 NATURAL JOIN v0 WHERE ((NOT (v0.c0))) UNION SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0 NATURAL JOIN v0 WHERE (((v0.c0) ISNULL));
SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0 NATURAL JOIN v0;
SELECT ALL v0.c0, vt1.c0 FROM v0 INNER JOIN vt1 ON (((((vt1.c0)<('nULZmC'))))>((((((vt1.c1)AND(vt1.c0)))AND(vt1.c0))))) GROUP BY v0.c0, vt1.c0;
SELECT v0.c0, vt1.c0 FROM v0 INNER JOIN vt1 ON (((((vt1.c0)<('nULZmC'))))>((((((vt1.c1)AND(vt1.c0)))AND(vt1.c0))))) WHERE (CASE WHEN ((v0.c0)<=('1350560683')) THEN CASE vt1.c0  WHEN NULL THEN v0.c0 ELSE v0.c0 END WHEN ((vt1.c1) IS FALSE) THEN json_insert(v0.c0, vt1.c1, vt1.c0, v0.c0, vt1.c1) WHEN ((vt1.c0) IS FALSE) THEN (- (vt1.c1)) ELSE (((vt1.c0)) BETWEEN ((vt1.c1)) AND ((vt1.c1))) END) GROUP BY v0.c0, vt1.c0 UNION SELECT ALL v0.c0, vt1.c0 FROM v0 INNER JOIN vt1 ON (((((vt1.c0)<('nULZmC'))))>((((((vt1.c1)AND(vt1.c0)))AND(vt1.c0))))) WHERE ((NOT (CASE WHEN ((v0.c0)<=('1350560683')) THEN CASE vt1.c0  WHEN NULL THEN v0.c0 ELSE v0.c0 END WHEN ((vt1.c1) IS FALSE) THEN json_insert(v0.c0, vt1.c1, vt1.c0, v0.c0, vt1.c1) WHEN ((vt1.c0) IS FALSE) THEN (- (vt1.c1)) ELSE (((vt1.c0)) BETWEEN ((vt1.c1)) AND ((vt1.c1))) END))) GROUP BY v0.c0, vt1.c0 UNION SELECT v0.c0, vt1.c0 FROM v0 INNER JOIN vt1 ON (((((vt1.c0)<('nULZmC'))))>((((((vt1.c1)AND(vt1.c0)))AND(vt1.c0))))) WHERE (((CASE WHEN ((v0.c0)<=('1350560683')) THEN CASE vt1.c0  WHEN NULL THEN v0.c0 ELSE v0.c0 END WHEN ((vt1.c1) IS FALSE) THEN json_insert(v0.c0, vt1.c1, vt1.c0, v0.c0, vt1.c1) WHEN ((vt1.c0) IS FALSE) THEN (- (vt1.c1)) ELSE (((vt1.c0)) BETWEEN ((vt1.c1)) AND ((vt1.c1))) END) ISNULL)) GROUP BY v0.c0, vt1.c0;
SELECT ALL v0.c0, vt1.c0 FROM v0 INNER JOIN vt1 ON (((((vt1.c0)<('nULZmC'))))>((((((vt1.c1)AND(vt1.c0)))AND(vt1.c0))))) GROUP BY v0.c0, vt1.c0;
SELECT ALL vt0.c0, vt0.c1, v0.c0 FROM vt0 INNER JOIN vt1 ON vt0.c0 RIGHT OUTER JOIN v0 ON (((v0.c0)) NOT BETWEEN ((TRIM(DISTINCT vt0.c0))) AND ((((x'') BETWEEN (vt1.c1) AND (vt1.c0))))) GROUP BY vt0.c0, vt0.c1, v0.c0;
SELECT vt0.c0, vt0.c1, v0.c0 FROM vt0 INNER JOIN vt1 ON vt0.c0 RIGHT OUTER JOIN v0 ON (((v0.c0)) NOT BETWEEN ((TRIM(DISTINCT vt0.c0))) AND ((((x'') BETWEEN (vt1.c1) AND (vt1.c0))))) GROUP BY vt0.c0, vt0.c1, v0.c0 HAVING TOTAL(MAX(vt1.c1)) UNION ALL SELECT ALL vt0.c0, vt0.c1, v0.c0 FROM vt0 INNER JOIN vt1 ON vt0.c0 RIGHT OUTER JOIN v0 ON (((v0.c0)) NOT BETWEEN ((TRIM(DISTINCT vt0.c0))) AND ((((x'') BETWEEN (vt1.c1) AND (vt1.c0))))) GROUP BY vt0.c0, vt0.c1, v0.c0 HAVING (NOT (TOTAL(MAX(vt1.c1)))) UNION ALL SELECT vt0.c0, vt0.c1, v0.c0 FROM vt0 INNER JOIN vt1 ON vt0.c0 RIGHT OUTER JOIN v0 ON (((v0.c0)) NOT BETWEEN ((TRIM(DISTINCT vt0.c0))) AND ((((x'') BETWEEN (vt1.c1) AND (vt1.c0))))) GROUP BY vt0.c0, vt0.c1, v0.c0 HAVING ((TOTAL(MAX(vt1.c1))) ISNULL);
SELECT ALL MIN((((vt0.c1 COLLATE RTRIM))>=((((((((((((((((((vt0.c0)AND(0.5204195006632019)))AND(vt0.c0)))OR(NULL)))AND(vt0.c1)))OR(vt0.c0)))AND(vt0.c0)))OR(NULL)))OR(vt0.c1)))))) FROM vt0 ORDER BY ((('1878042570')) NOT BETWEEN ((((vt0.c1) NOTNULL))) AND ((vt0.c1)))  NULLS FIRST;
SELECT ALL * FROM vt0, vt1;
SELECT ALL * FROM vt0, vt1 WHERE ((((NOT (vt0.c0))) NOT BETWEEN ((x'' IN ())) AND (((vt1.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1))))) UNION ALL SELECT * FROM vt0, vt1 WHERE ((NOT ((((NOT (vt0.c0))) NOT BETWEEN ((x'' IN ())) AND (((vt1.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1))))))) UNION ALL SELECT * FROM vt0, vt1 WHERE ((((((NOT (vt0.c0))) NOT BETWEEN ((x'' IN ())) AND (((vt1.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1))))) ISNULL));
SELECT ALL * FROM vt0, vt1;
SELECT DISTINCT * FROM v0, vt0, vt1;
SELECT DISTINCT * FROM v0, vt0, vt1 WHERE (((((0x6ae99360)IS(vt0.c0)))=((- (vt1.c0))))) UNION SELECT DISTINCT * FROM v0, vt0, vt1 WHERE ((NOT (((((0X6ae99360)IS(vt0.c0)))==((- (vt1.c0))))))) UNION SELECT DISTINCT * FROM v0, vt0, vt1 WHERE (((((((0X6ae99360)IS(vt0.c0)))=((- (vt1.c0))))) ISNULL));
SELECT DISTINCT * FROM v0, vt0, vt1;
SELECT ALL vt1.c0, vt0.c1 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c1;
SELECT vt1.c0, vt0.c1 FROM vt1, vt0 WHERE (((((((vt0.c1) NOTNULL))AND(CASE 0xffffffffc17e36f8  WHEN vt0.c0 THEN vt0.c1 ELSE vt1.c1 END)))OR(((vt1.c1)>=(vt0.c0))))) GROUP BY vt1.c0, vt0.c1 UNION SELECT ALL vt1.c0, vt0.c1 FROM vt1, vt0 WHERE ((NOT (((((((vt0.c1) NOTNULL))AND(CASE 0Xffffffffc17e36f8  WHEN vt0.c0 THEN vt0.c1 ELSE vt1.c1 END)))OR(((vt1.c1)>=(vt0.c0))))))) GROUP BY vt1.c0, vt0.c1 UNION SELECT vt1.c0, vt0.c1 FROM vt1, vt0 WHERE (((((((((vt0.c1) NOTNULL))AND(CASE 0Xffffffffc17e36f8  WHEN vt0.c0 THEN vt0.c1 ELSE vt1.c1 END)))OR(((vt1.c1)>=(vt0.c0))))) ISNULL)) GROUP BY vt1.c0, vt0.c1;
SELECT ALL vt1.c0, vt0.c1 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c1;
SELECT vt1.c0, vt0.c1 FROM vt0 LEFT OUTER JOIN vt1 ON CASE WHEN vt0.c1 COLLATE BINARY THEN ((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c1)) ELSE HEX(DISTINCT vt0.c0) END GROUP BY vt1.c0, vt0.c1;
SELECT vt1.c0, vt0.c1 FROM vt0 LEFT OUTER JOIN vt1 ON CASE WHEN vt0.c1 COLLATE BINARY THEN ((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c1)) ELSE HEX(DISTINCT vt0.c0) END GROUP BY vt1.c0, vt0.c1 HAVING COUNT(*) UNION ALL SELECT vt1.c0, vt0.c1 FROM vt0 LEFT OUTER JOIN vt1 ON CASE WHEN vt0.c1 COLLATE BINARY THEN ((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c1)) ELSE HEX(DISTINCT vt0.c0) END GROUP BY vt1.c0, vt0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt1.c0, vt0.c1 FROM vt0 LEFT OUTER JOIN vt1 ON CASE WHEN vt0.c1 COLLATE BINARY THEN ((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c1)) ELSE HEX(DISTINCT vt0.c0) END GROUP BY vt1.c0, vt0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT vt1.c0, vt0.c1 FROM vt0 LEFT OUTER JOIN vt1 ON CASE WHEN vt0.c1 COLLATE BINARY THEN ((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c1)) ELSE HEX(DISTINCT vt0.c0) END GROUP BY vt1.c0, vt0.c1;
SELECT vt1.c0, vt0.c1 FROM vt0 LEFT OUTER JOIN vt1 ON CASE WHEN vt0.c1 COLLATE BINARY THEN ((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c1)) ELSE HEX(DISTINCT vt0.c0) END GROUP BY vt1.c0, vt0.c1 HAVING COUNT(*) UNION ALL SELECT vt1.c0, vt0.c1 FROM vt0 LEFT OUTER JOIN vt1 ON CASE WHEN vt0.c1 COLLATE BINARY THEN ((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c1)) ELSE HEX(DISTINCT vt0.c0) END GROUP BY vt1.c0, vt0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt1.c0, vt0.c1 FROM vt0 LEFT OUTER JOIN vt1 ON CASE WHEN vt0.c1 COLLATE BINARY THEN ((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c1)) ELSE HEX(DISTINCT vt0.c0) END GROUP BY vt1.c0, vt0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT vt1.c0, vt0.c1 FROM vt0 LEFT OUTER JOIN vt1 ON CASE WHEN vt0.c1 COLLATE BINARY THEN ((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c1)) ELSE HEX(DISTINCT vt0.c0) END GROUP BY vt1.c0, vt0.c1;
SELECT ALL MAX(1.180804769E9) FROM v0, vt0, vt1 ORDER BY (((v0.c0) NOT BETWEEN (vt1.c1) AND (v0.c0)) IN ()) DESC  NULLS FIRST, ((CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 WHEN 0Xffffffffd0476b9c THEN vt0.c0 WHEN NULL THEN vt1.c1 END) NOTNULL)  NULLS FIRST;
SELECT ALL vt0.c1 FROM vt0;
SELECT ALL vt0.c1 FROM vt0 WHERE (((((((vt0.c0)GLOB(vt0.c0)))OR(((vt0.c0)>>(vt0.c1)))))OR(vt0.c0))) UNION ALL SELECT vt0.c1 FROM vt0 WHERE ((NOT (((((((vt0.c0)GLOB(vt0.c0)))OR(((vt0.c0)>>(vt0.c1)))))OR(vt0.c0))))) UNION ALL SELECT vt0.c1 FROM vt0 WHERE (((((((((vt0.c0)GLOB(vt0.c0)))OR(((vt0.c0)>>(vt0.c1)))))OR(vt0.c0))) ISNULL));
SELECT ALL vt0.c1 FROM vt0;
SELECT DISTINCT v0.c0, vt1.c0, vt1.c1 FROM vt1, v0;
SELECT DISTINCT v0.c0, vt1.c0, vt1.c1 FROM vt1, v0 WHERE ('2099776332') UNION SELECT DISTINCT v0.c0, vt1.c0, vt1.c1 FROM vt1, v0 WHERE ((NOT ('2099776332'))) UNION SELECT DISTINCT v0.c0, vt1.c0, vt1.c1 FROM vt1, v0 WHERE ((('2099776332') ISNULL));
SELECT DISTINCT v0.c0, vt1.c0, vt1.c1 FROM vt1, v0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE ((NOT ((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0)))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT ((NOT ((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0)))))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((((NOT ((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0)))))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL vt0.c0 FROM v0, vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM v0, vt0 GROUP BY vt0.c0 HAVING COUNT(*) UNION ALL SELECT vt0.c0 FROM v0, vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt0.c0 FROM v0, vt0 GROUP BY vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt0.c0 FROM v0, vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM v0, vt0 GROUP BY vt0.c0 HAVING COUNT(*) UNION ALL SELECT vt0.c0 FROM v0, vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt0.c0 FROM v0, vt0 GROUP BY vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt0.c0 FROM v0, vt0 GROUP BY vt0.c0;
SELECT ALL vt1.c0, vt1.c1, vt0.c1, vt0.c0 FROM vt1 FULL OUTER JOIN vt0 ON CASE (NOT (vt0.c1))  WHEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c1)) THEN vt1.c0 WHEN CAST(vt1.c0 AS NUMERIC) THEN vt0.c1 WHEN ((vt1.c1)IS(vt0.c0)) THEN CAST(vt0.c1 AS NUMERIC) WHEN ((vt1.c1) ISNULL) THEN CASE vt0.c1  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c0 END WHEN (x'' IN ()) THEN vt1.c1 COLLATE BINARY END;
SELECT vt1.c0, vt1.c1, vt0.c1, vt0.c0 FROM vt1 FULL OUTER JOIN vt0 ON CASE (NOT (vt0.c1))  WHEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c1)) THEN vt1.c0 WHEN CAST(vt1.c0 AS NUMERIC) THEN vt0.c1 WHEN ((vt1.c1)IS(vt0.c0)) THEN CAST(vt0.c1 AS NUMERIC) WHEN ((vt1.c1) ISNULL) THEN CASE vt0.c1  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c0 END WHEN (x'' IN ()) THEN vt1.c1 COLLATE BINARY END WHERE ((((CAST(vt1.c0 AS BLOB)))>=(((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c0))))))) UNION ALL SELECT vt1.c0, vt1.c1, vt0.c1, vt0.c0 FROM vt1 FULL OUTER JOIN vt0 ON CASE (NOT (vt0.c1))  WHEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c1)) THEN vt1.c0 WHEN CAST(vt1.c0 AS NUMERIC) THEN vt0.c1 WHEN ((vt1.c1)IS(vt0.c0)) THEN CAST(vt0.c1 AS NUMERIC) WHEN ((vt1.c1) ISNULL) THEN CASE vt0.c1  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c0 END WHEN (x'' IN ()) THEN vt1.c1 COLLATE BINARY END WHERE ((NOT ((((CAST(vt1.c0 AS BLOB)))>=(((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c0))))))))) UNION ALL SELECT ALL vt1.c0, vt1.c1, vt0.c1, vt0.c0 FROM vt1 FULL OUTER JOIN vt0 ON CASE (NOT (vt0.c1))  WHEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c1)) THEN vt1.c0 WHEN CAST(vt1.c0 AS NUMERIC) THEN vt0.c1 WHEN ((vt1.c1)IS(vt0.c0)) THEN CAST(vt0.c1 AS NUMERIC) WHEN ((vt1.c1) ISNULL) THEN CASE vt0.c1  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c0 END WHEN (x'' IN ()) THEN vt1.c1 COLLATE BINARY END WHERE ((((((CAST(vt1.c0 AS BLOB)))>=(((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c0))))))) ISNULL));
SELECT ALL vt1.c0, vt1.c1, vt0.c1, vt0.c0 FROM vt1 FULL OUTER JOIN vt0 ON CASE (NOT (vt0.c1))  WHEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c1)) THEN vt1.c0 WHEN CAST(vt1.c0 AS NUMERIC) THEN vt0.c1 WHEN ((vt1.c1)IS(vt0.c0)) THEN CAST(vt0.c1 AS NUMERIC) WHEN ((vt1.c1) ISNULL) THEN CASE vt0.c1  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c0 END WHEN (x'' IN ()) THEN vt1.c1 COLLATE BINARY END;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE ((((((((vt1.c1)OR(vt1.c1)))OR(vt1.c0))))>=((((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt1.c0)))))) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT ((((((((vt1.c1)OR(vt1.c1)))OR(vt1.c0))))>=((((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt1.c0)))))))) UNION SELECT DISTINCT * FROM vt1 WHERE ((((((((((vt1.c1)OR(vt1.c1)))OR(vt1.c0))))>=((((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt1.c0)))))) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT vt1.c0, vt1.c1 FROM v0, vt1 GROUP BY vt1.c0, vt1.c1;
SELECT ALL vt1.c0, vt1.c1 FROM v0, vt1 WHERE ((((((vt1.c0)) NOT BETWEEN ((vt1.c1)) AND ((vt1.c0))))-(((v0.c0) BETWEEN (vt1.c1) AND (vt1.c0))))) GROUP BY vt1.c0, vt1.c1 UNION SELECT vt1.c0, vt1.c1 FROM v0, vt1 WHERE ((NOT ((((((vt1.c0)) NOT BETWEEN ((vt1.c1)) AND ((vt1.c0))))-(((v0.c0) BETWEEN (vt1.c1) AND (vt1.c0))))))) GROUP BY vt1.c0, vt1.c1 UNION SELECT vt1.c0, vt1.c1 FROM v0, vt1 WHERE ((((((((vt1.c0)) NOT BETWEEN ((vt1.c1)) AND ((vt1.c0))))-(((v0.c0) BETWEEN (vt1.c1) AND (vt1.c0))))) ISNULL)) GROUP BY vt1.c0, vt1.c1;
SELECT vt1.c0, vt1.c1 FROM v0, vt1 GROUP BY vt1.c0, vt1.c1;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING SUM(((MIN(GROUP_CONCAT(v0.c0))) NOT BETWEEN (v0.c0) AND (AVG(SUM(v0.c0))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (SUM(((MIN(GROUP_CONCAT(v0.c0))) NOT BETWEEN (v0.c0) AND (AVG(SUM(v0.c0))))))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((SUM(((MIN(GROUP_CONCAT(v0.c0))) NOT BETWEEN (v0.c0) AND (AVG(SUM(v0.c0)))))) ISNULL);
SELECT vt1.c0 FROM vt1;
SELECT ALL vt1.c0 FROM vt1 WHERE ((~ (((((vt1.c0)AND(vt1.c0)))AND('Qo'))))) UNION ALL SELECT vt1.c0 FROM vt1 WHERE ((NOT ((~ (((((vt1.c0)AND(vt1.c0)))AND('Qo'))))))) UNION ALL SELECT vt1.c0 FROM vt1 WHERE ((((~ (((((vt1.c0)AND(vt1.c0)))AND('Qo'))))) ISNULL));
SELECT vt1.c0 FROM vt1;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (((((v0.c0) BETWEEN (v0.c0) AND (v0.c0))) NOT BETWEEN ((((v0.c0))==((v0.c0)))) AND ((+ (v0.c0))))) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (((((v0.c0) BETWEEN (v0.c0) AND (v0.c0))) NOT BETWEEN ((((v0.c0))=((v0.c0)))) AND ((+ (v0.c0))))))) UNION SELECT DISTINCT * FROM v0 WHERE (((((((v0.c0) BETWEEN (v0.c0) AND (v0.c0))) NOT BETWEEN ((((v0.c0))=((v0.c0)))) AND ((+ (v0.c0))))) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 WHERE (vt0.c1) GROUP BY vt0.c1, vt0.c0 UNION SELECT vt0.c1, vt0.c0 FROM vt0 WHERE ((NOT (vt0.c1))) GROUP BY vt0.c1, vt0.c0 UNION SELECT vt0.c1, vt0.c0 FROM vt0 WHERE (((vt0.c1) ISNULL)) GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING SUM(MAX(vt1.c1)) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (SUM(MAX(vt1.c1)))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((SUM(MAX(vt1.c1))) ISNULL);
SELECT vt1.c1, v0.c0, vt0.c1, vt0.c0 FROM v0, vt1 FULL OUTER JOIN vt0 ON ((((NULL) ISNULL))GLOB(((((vt0.c0)OR(vt1.c0)))AND(vt0.c1))));
SELECT ALL vt1.c1, v0.c0, vt0.c1, vt0.c0 FROM v0, vt1 FULL OUTER JOIN vt0 ON ((((NULL) ISNULL))GLOB(((((vt0.c0)OR(vt1.c0)))AND(vt0.c1)))) WHERE (CAST(0.49085213306591136 AS BLOB)) UNION ALL SELECT ALL vt1.c1, v0.c0, vt0.c1, vt0.c0 FROM v0, vt1 FULL OUTER JOIN vt0 ON ((((NULL) ISNULL))GLOB(((((vt0.c0)OR(vt1.c0)))AND(vt0.c1)))) WHERE ((NOT (CAST(0.49085213306591136 AS BLOB)))) UNION ALL SELECT vt1.c1, v0.c0, vt0.c1, vt0.c0 FROM v0, vt1 FULL OUTER JOIN vt0 ON ((((NULL) ISNULL))GLOB(((((vt0.c0)OR(vt1.c0)))AND(vt0.c1)))) WHERE (((CAST(0.49085213306591136 AS BLOB)) ISNULL));
SELECT vt1.c1, v0.c0, vt0.c1, vt0.c0 FROM v0, vt1 FULL OUTER JOIN vt0 ON ((((NULL) ISNULL))GLOB(((((vt0.c0)OR(vt1.c0)))AND(vt0.c1))));
SELECT DISTINCT * FROM vt1, v0;
SELECT DISTINCT * FROM vt1, v0 WHERE ((- (CASE WHEN v0.c0 THEN v0.c0 ELSE vt1.c0 END))) UNION SELECT DISTINCT * FROM vt1, v0 WHERE ((NOT ((- (CASE WHEN v0.c0 THEN v0.c0 ELSE vt1.c0 END))))) UNION SELECT DISTINCT * FROM vt1, v0 WHERE ((((- (CASE WHEN v0.c0 THEN v0.c0 ELSE vt1.c0 END))) ISNULL));
SELECT DISTINCT * FROM vt1, v0;
SELECT ALL vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0;
SELECT vt1.c1, vt1.c0 FROM vt1 WHERE (CASE ((((((((vt1.c1)OR(vt1.c0)))AND('k-zCYrìº>u')))OR(vt1.c0)))OR(0.7281033310827498))  WHEN (+ (vt1.c1)) THEN ((((vt1.c0)OR(vt1.c0)))OR(vt1.c1)) ELSE CASE vt1.c0  WHEN vt1.c1 THEN vt1.c1 END END) GROUP BY vt1.c1, vt1.c0 UNION SELECT vt1.c1, vt1.c0 FROM vt1 WHERE ((NOT (CASE ((((((((vt1.c1)OR(vt1.c0)))AND('k-zCYrìº>u')))OR(vt1.c0)))OR(0.7281033310827498))  WHEN (+ (vt1.c1)) THEN ((((vt1.c0)OR(vt1.c0)))OR(vt1.c1)) ELSE CASE vt1.c0  WHEN vt1.c1 THEN vt1.c1 END END))) GROUP BY vt1.c1, vt1.c0 UNION SELECT vt1.c1, vt1.c0 FROM vt1 WHERE (((CASE ((((((((vt1.c1)OR(vt1.c0)))AND('k-zCYrìº>u')))OR(vt1.c0)))OR(0.7281033310827498))  WHEN (+ (vt1.c1)) THEN ((((vt1.c0)OR(vt1.c0)))OR(vt1.c1)) ELSE CASE vt1.c0  WHEN vt1.c1 THEN vt1.c1 END END) ISNULL)) GROUP BY vt1.c1, vt1.c0;
SELECT ALL vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING AVG(COUNT(vt0.c1)) UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING (NOT (AVG(COUNT(vt0.c1)))) UNION ALL SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING ((AVG(COUNT(vt0.c1))) ISNULL);
SELECT vt0.c1, vt0.c0 FROM vt0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 WHERE (((((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1))) NOT BETWEEN ((vt0.c0 IN ())) AND (CASE WHEN vt0.c1 THEN vt0.c1 END))) UNION ALL SELECT vt0.c1, vt0.c0 FROM vt0 WHERE ((NOT (((((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1))) NOT BETWEEN ((vt0.c0 IN ())) AND (CASE WHEN vt0.c1 THEN vt0.c1 END))))) UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM vt0 WHERE (((((((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1))) NOT BETWEEN ((vt0.c0 IN ())) AND (CASE WHEN vt0.c1 THEN vt0.c1 END))) ISNULL));
SELECT vt0.c1, vt0.c0 FROM vt0;
SELECT DISTINCT vt1.c1, vt0.c0 FROM v0, vt0 LEFT OUTER JOIN vt1 ON 0.06895899846409914;
SELECT DISTINCT vt1.c1, vt0.c0 FROM v0, vt0 LEFT OUTER JOIN vt1 ON 0.06895899846409914 WHERE (((vt1.c0) NOT BETWEEN (5.6872468E8) AND (((vt1.c0) IS FALSE)))) UNION SELECT DISTINCT vt1.c1, vt0.c0 FROM v0, vt0 LEFT OUTER JOIN vt1 ON 0.06895899846409914 WHERE ((NOT (((vt1.c0) NOT BETWEEN (5.6872468E8) AND (((vt1.c0) IS FALSE)))))) UNION SELECT DISTINCT vt1.c1, vt0.c0 FROM v0, vt0 LEFT OUTER JOIN vt1 ON 0.06895899846409914 WHERE (((((vt1.c0) NOT BETWEEN (5.6872468E8) AND (((vt1.c0) IS FALSE)))) ISNULL));
SELECT DISTINCT vt1.c1, vt0.c0 FROM v0, vt0 LEFT OUTER JOIN vt1 ON 0.06895899846409914;
SELECT ALL vt0.c0, vt0.c1, vt1.c1, v0.c0, vt1.c0 FROM v0, vt1, vt0 GROUP BY vt0.c0, vt0.c1, vt1.c1, v0.c0, vt1.c0;
SELECT ALL vt0.c0, vt0.c1, vt1.c1, v0.c0, vt1.c0 FROM v0, vt1, vt0 WHERE ((((NOT (vt0.c1)))LIKE(1.233082828E9 COLLATE RTRIM))) GROUP BY vt0.c0, vt0.c1, vt1.c1, v0.c0, vt1.c0 UNION SELECT ALL vt0.c0, vt0.c1, vt1.c1, v0.c0, vt1.c0 FROM v0, vt1, vt0 WHERE ((NOT ((((NOT (vt0.c1)))LIKE(1.233082828E9 COLLATE RTRIM))))) GROUP BY vt0.c0, vt0.c1, vt1.c1, v0.c0, vt1.c0 UNION SELECT ALL vt0.c0, vt0.c1, vt1.c1, v0.c0, vt1.c0 FROM v0, vt1, vt0 WHERE ((((((NOT (vt0.c1)))LIKE(1.233082828E9 COLLATE RTRIM))) ISNULL)) GROUP BY vt0.c0, vt0.c1, vt1.c1, v0.c0, vt1.c0;
SELECT ALL vt0.c0, vt0.c1, vt1.c1, v0.c0, vt1.c0 FROM v0, vt1, vt0 GROUP BY vt0.c0, vt0.c1, vt1.c1, v0.c0, vt1.c0;
SELECT v0.c0, vt1.c1, vt1.c0 FROM vt1, v0 GROUP BY v0.c0, vt1.c1, vt1.c0;
SELECT ALL v0.c0, vt1.c1, vt1.c0 FROM vt1, v0 GROUP BY v0.c0, vt1.c1, vt1.c0 HAVING (+ (AVG(MIN(MIN(vt1.c0))))) UNION ALL SELECT ALL v0.c0, vt1.c1, vt1.c0 FROM vt1, v0 GROUP BY v0.c0, vt1.c1, vt1.c0 HAVING (NOT ((+ (AVG(MIN(MIN(vt1.c0))))))) UNION ALL SELECT v0.c0, vt1.c1, vt1.c0 FROM vt1, v0 GROUP BY v0.c0, vt1.c1, vt1.c0 HAVING (((+ (AVG(MIN(MIN(vt1.c0)))))) ISNULL);
SELECT vt1.c0 FROM v0, vt1;
SELECT ALL vt1.c0 FROM v0, vt1 WHERE (((((vt1.c0) IS TRUE)) NOT NULL)) UNION ALL SELECT ALL vt1.c0 FROM v0, vt1 WHERE ((NOT (((((vt1.c0) IS TRUE)) NOT NULL)))) UNION ALL SELECT vt1.c0 FROM v0, vt1 WHERE (((((((vt1.c0) IS TRUE)) NOT NULL)) ISNULL));
SELECT vt1.c0 FROM v0, vt1;
SELECT DISTINCT * FROM v0, vt0, vt1;
SELECT DISTINCT * FROM v0, vt0, vt1 WHERE ((NOT ((~ (v0.c0))))) UNION SELECT DISTINCT * FROM v0, vt0, vt1 WHERE ((NOT ((NOT ((~ (v0.c0))))))) UNION SELECT DISTINCT * FROM v0, vt0, vt1 WHERE ((((NOT ((~ (v0.c0))))) ISNULL));
SELECT DISTINCT * FROM v0, vt0, vt1;
SELECT ALL vt0.c1, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c1, vt1.c0;
SELECT vt0.c1, vt1.c0 FROM vt1, vt0 WHERE ((((((vt1.c1, vt1.c1, vt1.c0, vt1.c0, vt0.c1))<=((vt1.c1, vt0.c0, vt1.c0, vt0.c1, vt0.c1))))>>((vt1.c0 IN (x'', vt0.c0))))) GROUP BY vt0.c1, vt1.c0 UNION SELECT ALL vt0.c1, vt1.c0 FROM vt1, vt0 WHERE ((NOT ((((((vt1.c1, vt1.c1, vt1.c0, vt1.c0, vt0.c1))<=((vt1.c1, vt0.c0, vt1.c0, vt0.c1, vt0.c1))))>>((vt1.c0 IN (x'', vt0.c0))))))) GROUP BY vt0.c1, vt1.c0 UNION SELECT ALL vt0.c1, vt1.c0 FROM vt1, vt0 WHERE ((((((((vt1.c1, vt1.c1, vt1.c0, vt1.c0, vt0.c1))<=((vt1.c1, vt0.c0, vt1.c0, vt0.c1, vt0.c1))))>>((vt1.c0 IN (x'', vt0.c0))))) ISNULL)) GROUP BY vt0.c1, vt1.c0;
SELECT ALL vt0.c1, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c1, vt1.c0;
SELECT ALL v0.c0, vt0.c1, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c1, vt0.c0;
SELECT ALL v0.c0, vt0.c1, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c1, vt0.c0 HAVING CAST((((MIN(TOTAL(AVG(vt0.c0)))))>=((vt0.c1))) AS TEXT) UNION ALL SELECT v0.c0, vt0.c1, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c1, vt0.c0 HAVING (NOT (CAST((((MIN(TOTAL(AVG(vt0.c0)))))>=((vt0.c1))) AS TEXT))) UNION ALL SELECT v0.c0, vt0.c1, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c1, vt0.c0 HAVING ((CAST((((MIN(TOTAL(AVG(vt0.c0)))))>=((vt0.c1))) AS TEXT)) ISNULL);
SELECT ALL * FROM vt0 RIGHT OUTER JOIN v0 ON ((((vt0.c1) NOT NULL))OR(TRIM(DISTINCT vt1.c0))) RIGHT OUTER JOIN vt1 ON ((((vt1.c0) NOT BETWEEN (vt1.c1) AND (v0.c0))) IS TRUE);
SELECT DISTINCT * FROM vt1 FULL OUTER JOIN vt0 ON (UPPER(vt1.c1) IN ());
SELECT DISTINCT * FROM vt1 FULL OUTER JOIN vt0 ON (UPPER(vt1.c1) IN ()) WHERE (CASE ((((vt0.c1)OR(vt1.c0)))AND(vt1.c0))  WHEN CASE vt1.c1  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c1 END THEN CASE vt1.c1  WHEN NULL THEN vt0.c1 WHEN vt0.c1 THEN vt1.c0 WHEN 0x444edef THEN vt0.c0 ELSE vt1.c0 END END) UNION SELECT DISTINCT * FROM vt1 FULL OUTER JOIN vt0 ON (UPPER(vt1.c1) IN ()) WHERE ((NOT (CASE ((((vt0.c1)OR(vt1.c0)))AND(vt1.c0))  WHEN CASE vt1.c1  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c1 END THEN CASE vt1.c1  WHEN NULL THEN vt0.c1 WHEN vt0.c1 THEN vt1.c0 WHEN 0x444edef THEN vt0.c0 ELSE vt1.c0 END END))) UNION SELECT DISTINCT * FROM vt1 FULL OUTER JOIN vt0 ON (UPPER(vt1.c1) IN ()) WHERE (((CASE ((((vt0.c1)OR(vt1.c0)))AND(vt1.c0))  WHEN CASE vt1.c1  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c1 END THEN CASE vt1.c1  WHEN NULL THEN vt0.c1 WHEN vt0.c1 THEN vt1.c0 WHEN 0x444edef THEN vt0.c0 ELSE vt1.c0 END END) ISNULL));
SELECT DISTINCT * FROM vt1 FULL OUTER JOIN vt0 ON (UPPER(vt1.c1) IN ());
SELECT vt1.c0, v0.c0, vt0.c0 FROM vt1, vt0, v0 GROUP BY vt1.c0, v0.c0, vt0.c0;
SELECT vt1.c0, v0.c0, vt0.c0 FROM vt1, vt0, v0 WHERE (SUBSTR((vt1.c1 IN ()), vt0.c1 COLLATE RTRIM)) GROUP BY vt1.c0, v0.c0, vt0.c0 UNION SELECT vt1.c0, v0.c0, vt0.c0 FROM vt1, vt0, v0 WHERE ((NOT (SUBSTR((vt1.c1 IN ()), vt0.c1 COLLATE RTRIM)))) GROUP BY vt1.c0, v0.c0, vt0.c0 UNION SELECT ALL vt1.c0, v0.c0, vt0.c0 FROM vt1, vt0, v0 WHERE (((SUBSTR((vt1.c1 IN ()), vt0.c1 COLLATE RTRIM)) ISNULL)) GROUP BY vt1.c0, v0.c0, vt0.c0;
SELECT vt1.c0, v0.c0, vt0.c0 FROM vt1, vt0, v0 GROUP BY vt1.c0, v0.c0, vt0.c0;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING ((GROUP_CONCAT('')) IS FALSE) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING (NOT (((GROUP_CONCAT('')) IS FALSE))) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING ((((GROUP_CONCAT('')) IS FALSE)) ISNULL);
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING ((GROUP_CONCAT('')) IS FALSE) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING (NOT (((GROUP_CONCAT('')) IS FALSE))) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING ((((GROUP_CONCAT('')) IS FALSE)) ISNULL);
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT MIN(vt1.c1) FROM vt1, v0 ORDER BY ((((LIKELY(DISTINCT vt1.c1))AND(STRFTIME(v0.c0, vt1.c0, v0.c0, vt1.c0, 0Xffffffffca6e5cef, vt1.c1, vt1.c1))))OR((vt1.c1 IN ())))  NULLS FIRST, CAST(((v0.c0) IS TRUE) AS INTEGER) ASC;
SELECT ALL * FROM v0, vt0;
SELECT ALL * FROM v0, vt0 WHERE (0.9721186530699807 COLLATE BINARY) UNION ALL SELECT * FROM v0, vt0 WHERE ((NOT (0.9721186530699807 COLLATE BINARY))) UNION ALL SELECT ALL * FROM v0, vt0 WHERE (((0.9721186530699807 COLLATE BINARY) ISNULL));
SELECT ALL * FROM v0, vt0;
SELECT DISTINCT v0.c0, vt0.c1 FROM v0, vt0;
SELECT DISTINCT v0.c0, vt0.c1 FROM v0, vt0 WHERE (NULL) UNION SELECT DISTINCT v0.c0, vt0.c1 FROM v0, vt0 WHERE ((NOT (NULL))) UNION SELECT DISTINCT v0.c0, vt0.c1 FROM v0, vt0 WHERE (((NULL) ISNULL));
SELECT DISTINCT v0.c0, vt0.c1 FROM v0, vt0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0, v0 GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0, v0 WHERE (((((vt0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) NOT BETWEEN (((NULL)*(vt0.c1))) AND (NULL))) GROUP BY vt0.c1, vt0.c0 UNION SELECT ALL vt0.c1, vt0.c0 FROM vt0, v0 WHERE ((NOT (((((vt0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) NOT BETWEEN (((NULL)*(vt0.c1))) AND (NULL))))) GROUP BY vt0.c1, vt0.c0 UNION SELECT vt0.c1, vt0.c0 FROM vt0, v0 WHERE (((((((vt0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) NOT BETWEEN (((NULL)*(vt0.c1))) AND (NULL))) ISNULL)) GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0, v0 GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING MIN(json_type(vt0.c0)) UNION ALL SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING (NOT (MIN(json_type(vt0.c0)))) UNION ALL SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING ((MIN(json_type(vt0.c0))) ISNULL);
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING MIN(json_type(vt0.c0)) UNION ALL SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING (NOT (MIN(json_type(vt0.c0)))) UNION ALL SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING ((MIN(json_type(vt0.c0))) ISNULL);
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT ALL * FROM vt0, vt1 CROSS JOIN v0 ON (~ (((vt1.c0) BETWEEN (vt0.c1) AND (vt1.c1))));
SELECT ALL * FROM vt0, vt1 CROSS JOIN v0 ON (~ (((vt1.c0) BETWEEN (vt0.c1) AND (vt1.c1)))) WHERE ((CAST(vt1.c0 AS BLOB) IN ())) UNION ALL SELECT ALL * FROM vt0, vt1 CROSS JOIN v0 ON (~ (((vt1.c0) BETWEEN (vt0.c1) AND (vt1.c1)))) WHERE ((NOT ((CAST(vt1.c0 AS BLOB) IN ())))) UNION ALL SELECT ALL * FROM vt0, vt1 CROSS JOIN v0 ON (~ (((vt1.c0) BETWEEN (vt0.c1) AND (vt1.c1)))) WHERE ((((CAST(vt1.c0 AS BLOB) IN ())) ISNULL));
SELECT ALL * FROM vt0, vt1 CROSS JOIN v0 ON (~ (((vt1.c0) BETWEEN (vt0.c1) AND (vt1.c1))));
SELECT DISTINCT vt1.c0 FROM v0, vt0, vt1;
SELECT DISTINCT vt1.c0 FROM v0, vt0, vt1 WHERE (0.5284582371937316) UNION SELECT DISTINCT vt1.c0 FROM v0, vt0, vt1 WHERE ((NOT (0.5284582371937316))) UNION SELECT DISTINCT vt1.c0 FROM v0, vt0, vt1 WHERE (((0.5284582371937316) ISNULL));
SELECT DISTINCT vt1.c0 FROM v0, vt0, vt1;
SELECT ALL vt0.c1, v0.c0 FROM vt0, v0 GROUP BY vt0.c1, v0.c0;
SELECT ALL vt0.c1, v0.c0 FROM vt0, v0 WHERE (((((((((0x14727df4)OR(v0.c0 COLLATE BINARY)))OR(CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 END)))AND(CASE vt0.c1  WHEN NULL THEN vt0.c1 ELSE -1.431983196E9 END)))AND(NULL))) GROUP BY vt0.c1, v0.c0 UNION SELECT vt0.c1, v0.c0 FROM vt0, v0 WHERE ((NOT (((((((((0x14727df4)OR(v0.c0 COLLATE BINARY)))OR(CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 END)))AND(CASE vt0.c1  WHEN NULL THEN vt0.c1 ELSE -1.431983196E9 END)))AND(NULL))))) GROUP BY vt0.c1, v0.c0 UNION SELECT ALL vt0.c1, v0.c0 FROM vt0, v0 WHERE (((((((((((0X14727df4)OR(v0.c0 COLLATE BINARY)))OR(CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 END)))AND(CASE vt0.c1  WHEN NULL THEN vt0.c1 ELSE -1.431983196E9 END)))AND(NULL))) ISNULL)) GROUP BY vt0.c1, v0.c0;
SELECT ALL vt0.c1, v0.c0 FROM vt0, v0 GROUP BY vt0.c1, v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0)))) BETWEEN (MAX(MIN(v0.c0))) AND (v0.c0)) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT ((((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0)))) BETWEEN (MAX(MIN(v0.c0))) AND (v0.c0)))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (((((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0)))) BETWEEN (MAX(MIN(v0.c0))) AND (v0.c0))) ISNULL);
SELECT ALL vt1.c1, vt1.c0 FROM v0, vt1;
SELECT vt1.c1, vt1.c0 FROM v0, vt1 WHERE (((vt1.c1 COLLATE NOCASE)IS(HEX(DISTINCT 0Xc8d62b4)))) UNION ALL SELECT ALL vt1.c1, vt1.c0 FROM v0, vt1 WHERE ((NOT (((vt1.c1 COLLATE NOCASE)IS(HEX(DISTINCT 0xc8d62b4)))))) UNION ALL SELECT vt1.c1, vt1.c0 FROM v0, vt1 WHERE (((((vt1.c1 COLLATE NOCASE)IS(HEX(DISTINCT 0xc8d62b4)))) ISNULL));
SELECT ALL vt1.c1, vt1.c0 FROM v0, vt1;
SELECT DISTINCT * FROM vt1, vt0;
SELECT DISTINCT * FROM vt1, vt0 WHERE (((((vt0.c0)GLOB(vt1.c1)))GLOB((vt1.c1 IN (vt0.c0))))) UNION SELECT DISTINCT * FROM vt1, vt0 WHERE ((NOT (((((vt0.c0)GLOB(vt1.c1)))GLOB((vt1.c1 IN (vt0.c0))))))) UNION SELECT DISTINCT * FROM vt1, vt0 WHERE (((((((vt0.c0)GLOB(vt1.c1)))GLOB((vt1.c1 IN (vt0.c0))))) ISNULL));
SELECT DISTINCT * FROM vt1, vt0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0 WHERE (((((x'' IN (vt0.c1)), ((vt0.c0)==(vt0.c0)), ((vt0.c0) IS TRUE)))==(((~ (vt0.c1)), ((vt0.c1)IS NOT(vt0.c0)), ((vt0.c0)OR(vt0.c1)))))) GROUP BY vt0.c1, vt0.c0 UNION SELECT vt0.c1, vt0.c0 FROM vt0 WHERE ((NOT (((((x'' IN (vt0.c1)), ((vt0.c0)=(vt0.c0)), ((vt0.c0) IS TRUE)))=(((~ (vt0.c1)), ((vt0.c1)IS NOT(vt0.c0)), ((vt0.c0)OR(vt0.c1)))))))) GROUP BY vt0.c1, vt0.c0 UNION SELECT vt0.c1, vt0.c0 FROM vt0 WHERE (((((((x'' IN (vt0.c1)), ((vt0.c0)==(vt0.c0)), ((vt0.c0) IS TRUE)))==(((~ (vt0.c1)), ((vt0.c1)IS NOT(vt0.c0)), ((vt0.c0)OR(vt0.c1)))))) ISNULL)) GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt1.c1, vt1.c0, v0.c0 FROM vt1, v0 GROUP BY vt1.c1, vt1.c0, v0.c0;
SELECT vt1.c1, vt1.c0, v0.c0 FROM vt1, v0 GROUP BY vt1.c1, vt1.c0, v0.c0 HAVING GROUP_CONCAT(AVG(COUNT(*))) UNION ALL SELECT vt1.c1, vt1.c0, v0.c0 FROM vt1, v0 GROUP BY vt1.c1, vt1.c0, v0.c0 HAVING (NOT (GROUP_CONCAT(AVG(COUNT(*))))) UNION ALL SELECT ALL vt1.c1, vt1.c0, v0.c0 FROM vt1, v0 GROUP BY vt1.c1, vt1.c0, v0.c0 HAVING ((GROUP_CONCAT(AVG(COUNT(*)))) ISNULL);
SELECT * FROM vt1, v0 CROSS JOIN vt0 ON ((vt1.c0)GLOB(vt1.c1)) COLLATE RTRIM;
SELECT * FROM vt1, v0 CROSS JOIN vt0 ON ((vt1.c0)GLOB(vt1.c1)) COLLATE RTRIM WHERE (v0.c0) UNION ALL SELECT ALL * FROM vt1, v0 CROSS JOIN vt0 ON ((vt1.c0)GLOB(vt1.c1)) COLLATE RTRIM WHERE ((NOT (v0.c0))) UNION ALL SELECT ALL * FROM vt1, v0 CROSS JOIN vt0 ON ((vt1.c0)GLOB(vt1.c1)) COLLATE RTRIM WHERE (((v0.c0) ISNULL));
SELECT * FROM vt1, v0 CROSS JOIN vt0 ON ((vt1.c0)GLOB(vt1.c1)) COLLATE RTRIM;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((((x'') ISNULL))IS NOT((((vt0.c1, vt0.c1, vt0.c1))==((vt0.c0, vt0.c0, vt0.c0)))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((((x'') ISNULL))IS NOT((((vt0.c1, vt0.c1, vt0.c1))==((vt0.c0, vt0.c0, vt0.c0)))))))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((((x'') ISNULL))IS NOT((((vt0.c1, vt0.c1, vt0.c1))==((vt0.c0, vt0.c0, vt0.c0)))))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL vt1.c1 FROM vt1, vt0 RIGHT OUTER JOIN v0 ON ((((((vt1.c0)AND(x'')))OR(vt0.c1)))OR(CASE vt0.c1  WHEN v0.c0 THEN vt1.c1 WHEN vt0.c0 THEN vt1.c0 WHEN v0.c0 THEN vt0.c1 END)) GROUP BY vt1.c1;
SELECT ALL vt1.c1 FROM vt1, vt0 RIGHT OUTER JOIN v0 ON ((((((vt1.c0)AND(x'')))OR(vt0.c1)))OR(CASE vt0.c1  WHEN v0.c0 THEN vt1.c1 WHEN vt0.c0 THEN vt1.c0 WHEN v0.c0 THEN vt0.c1 END)) WHERE ((((((((((((vt0.c1))!=((vt1.c0))))AND(LOWER(vt0.c1))))OR(CASE vt1.c1  WHEN vt0.c0 THEN vt0.c1 WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c0 END)))AND(CAST(vt0.c1 AS REAL))))OR(((vt0.c0)IS(vt0.c1))))) GROUP BY vt1.c1 UNION SELECT vt1.c1 FROM vt1, vt0 RIGHT OUTER JOIN v0 ON ((((((vt1.c0)AND(x'')))OR(vt0.c1)))OR(CASE vt0.c1  WHEN v0.c0 THEN vt1.c1 WHEN vt0.c0 THEN vt1.c0 WHEN v0.c0 THEN vt0.c1 END)) WHERE ((NOT ((((((((((((vt0.c1))<>((vt1.c0))))AND(LOWER(vt0.c1))))OR(CASE vt1.c1  WHEN vt0.c0 THEN vt0.c1 WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c0 END)))AND(CAST(vt0.c1 AS REAL))))OR(((vt0.c0)IS(vt0.c1))))))) GROUP BY vt1.c1 UNION SELECT ALL vt1.c1 FROM vt1, vt0 RIGHT OUTER JOIN v0 ON ((((((vt1.c0)AND(x'')))OR(vt0.c1)))OR(CASE vt0.c1  WHEN v0.c0 THEN vt1.c1 WHEN vt0.c0 THEN vt1.c0 WHEN v0.c0 THEN vt0.c1 END)) WHERE ((((((((((((((vt0.c1))!=((vt1.c0))))AND(LOWER(vt0.c1))))OR(CASE vt1.c1  WHEN vt0.c0 THEN vt0.c1 WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c0 END)))AND(CAST(vt0.c1 AS REAL))))OR(((vt0.c0)IS(vt0.c1))))) ISNULL)) GROUP BY vt1.c1;
SELECT ALL vt1.c1 FROM vt1, vt0 RIGHT OUTER JOIN v0 ON ((((((vt1.c0)AND(x'')))OR(vt0.c1)))OR(CASE vt0.c1  WHEN v0.c0 THEN vt1.c1 WHEN vt0.c0 THEN vt1.c0 WHEN v0.c0 THEN vt0.c1 END)) GROUP BY vt1.c1;
SELECT vt1.c1, vt1.c0 FROM vt1, v0 GROUP BY vt1.c1, vt1.c0;
SELECT ALL vt1.c1, vt1.c0 FROM vt1, v0 GROUP BY vt1.c1, vt1.c0 HAVING MIN(GROUP_CONCAT(vt1.c1) COLLATE RTRIM) UNION ALL SELECT ALL vt1.c1, vt1.c0 FROM vt1, v0 GROUP BY vt1.c1, vt1.c0 HAVING (NOT (MIN(GROUP_CONCAT(vt1.c1) COLLATE RTRIM))) UNION ALL SELECT vt1.c1, vt1.c0 FROM vt1, v0 GROUP BY vt1.c1, vt1.c0 HAVING ((MIN(GROUP_CONCAT(vt1.c1) COLLATE RTRIM)) ISNULL);
SELECT vt1.c0, vt1.c1 FROM vt1;
SELECT ALL vt1.c0, vt1.c1 FROM vt1 WHERE ('RXjq') UNION ALL SELECT ALL vt1.c0, vt1.c1 FROM vt1 WHERE ((NOT ('RXjq'))) UNION ALL SELECT ALL vt1.c0, vt1.c1 FROM vt1 WHERE ((('RXjq') ISNULL));
SELECT vt1.c0, vt1.c1 FROM vt1;
SELECT DISTINCT * FROM vt0 FULL OUTER JOIN vt1 ON ((((CAST(vt1.c0 AS NUMERIC))OR(((vt1.c1)=(vt0.c1)))))AND(((((vt0.c1)AND(vt0.c0)))AND(vt1.c1))));
SELECT DISTINCT * FROM vt0 FULL OUTER JOIN vt1 ON ((((CAST(vt1.c0 AS NUMERIC))OR(((vt1.c1)==(vt0.c1)))))AND(((((vt0.c1)AND(vt0.c0)))AND(vt1.c1)))) WHERE (((UPPER(vt1.c1)) BETWEEN ((((vt0.c1))>((x'09a7')))) AND (((((vt0.c1)OR(vt1.c0)))OR(vt0.c1))))) UNION SELECT DISTINCT * FROM vt0 FULL OUTER JOIN vt1 ON ((((CAST(vt1.c0 AS NUMERIC))OR(((vt1.c1)=(vt0.c1)))))AND(((((vt0.c1)AND(vt0.c0)))AND(vt1.c1)))) WHERE ((NOT (((UPPER(vt1.c1)) BETWEEN ((((vt0.c1))>((x'09a7')))) AND (((((vt0.c1)OR(vt1.c0)))OR(vt0.c1))))))) UNION SELECT DISTINCT * FROM vt0 FULL OUTER JOIN vt1 ON ((((CAST(vt1.c0 AS NUMERIC))OR(((vt1.c1)=(vt0.c1)))))AND(((((vt0.c1)AND(vt0.c0)))AND(vt1.c1)))) WHERE (((((UPPER(vt1.c1)) BETWEEN ((((vt0.c1))>((x'09a7')))) AND (((((vt0.c1)OR(vt1.c0)))OR(vt0.c1))))) ISNULL));
SELECT DISTINCT * FROM vt0 FULL OUTER JOIN vt1 ON ((((CAST(vt1.c0 AS NUMERIC))OR(((vt1.c1)=(vt0.c1)))))AND(((((vt0.c1)AND(vt0.c0)))AND(vt1.c1))));
SELECT vt1.c0, v0.c0 FROM vt1, v0 GROUP BY vt1.c0, v0.c0;
SELECT vt1.c0, v0.c0 FROM vt1, v0 WHERE (0X267feefe) GROUP BY vt1.c0, v0.c0 UNION SELECT vt1.c0, v0.c0 FROM vt1, v0 WHERE ((NOT (0X267feefe))) GROUP BY vt1.c0, v0.c0 UNION SELECT ALL vt1.c0, v0.c0 FROM vt1, v0 WHERE (((0X267feefe) ISNULL)) GROUP BY vt1.c0, v0.c0;
SELECT vt1.c0, v0.c0 FROM vt1, v0 GROUP BY vt1.c0, v0.c0;
SELECT ALL vt1.c1, vt0.c0, v0.c0 FROM vt0, v0, vt1 GROUP BY vt1.c1, vt0.c0, v0.c0;
SELECT ALL vt1.c1, vt0.c0, v0.c0 FROM vt0, v0, vt1 GROUP BY vt1.c1, vt0.c0, v0.c0 HAVING (MIN(vt0.c1) IN ()) UNION ALL SELECT vt1.c1, vt0.c0, v0.c0 FROM vt0, v0, vt1 GROUP BY vt1.c1, vt0.c0, v0.c0 HAVING (NOT ((MIN(vt0.c1) IN ()))) UNION ALL SELECT vt1.c1, vt0.c0, v0.c0 FROM vt0, v0, vt1 GROUP BY vt1.c1, vt0.c0, v0.c0 HAVING (((MIN(vt0.c1) IN ())) ISNULL);
SELECT ALL vt1.c1, vt0.c0, v0.c0 FROM vt0, v0, vt1 GROUP BY vt1.c1, vt0.c0, v0.c0;
SELECT ALL vt1.c1, vt0.c0, v0.c0 FROM vt0, v0, vt1 GROUP BY vt1.c1, vt0.c0, v0.c0 HAVING (MIN(vt0.c1) IN ()) UNION ALL SELECT vt1.c1, vt0.c0, v0.c0 FROM vt0, v0, vt1 GROUP BY vt1.c1, vt0.c0, v0.c0 HAVING (NOT ((MIN(vt0.c1) IN ()))) UNION ALL SELECT vt1.c1, vt0.c0, v0.c0 FROM vt0, v0, vt1 GROUP BY vt1.c1, vt0.c0, v0.c0 HAVING (((MIN(vt0.c1) IN ())) ISNULL);
SELECT ALL vt1.c1, vt0.c0, v0.c0 FROM vt0, v0, vt1 GROUP BY vt1.c1, vt0.c0, v0.c0;
SELECT ALL * FROM vt0;
SELECT ALL * FROM vt0 WHERE ((((CAST(vt0.c1 AS INTEGER)))<=((vt0.c0)))) UNION ALL SELECT * FROM vt0 WHERE ((NOT ((((CAST(vt0.c1 AS INTEGER)))<=((vt0.c0)))))) UNION ALL SELECT * FROM vt0 WHERE ((((((CAST(vt0.c1 AS INTEGER)))<=((vt0.c0)))) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE ((((((((((((v0.c0, v0.c0, v0.c0)) BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, 0.08633644922930361, v0.c0))))OR(v0.c0 COLLATE BINARY)))OR(((v0.c0) NOTNULL))))AND(((v0.c0) NOT NULL))))AND(CAST(v0.c0 AS NUMERIC)))) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT ((((((((((((v0.c0, v0.c0, v0.c0)) BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, 0.08633644922930361, v0.c0))))OR(v0.c0 COLLATE BINARY)))OR(((v0.c0) NOTNULL))))AND(((v0.c0) NOT NULL))))AND(CAST(v0.c0 AS NUMERIC)))))) UNION SELECT DISTINCT * FROM v0 WHERE ((((((((((((((v0.c0, v0.c0, v0.c0)) BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, 0.08633644922930361, v0.c0))))OR(v0.c0 COLLATE BINARY)))OR(((v0.c0) NOTNULL))))AND(((v0.c0) NOT NULL))))AND(CAST(v0.c0 AS NUMERIC)))) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT vt0.c1, vt1.c0, v0.c0, vt1.c1 FROM vt0, vt1, v0 GROUP BY vt0.c1, vt1.c0, v0.c0, vt1.c1;
SELECT vt0.c1, vt1.c0, v0.c0, vt1.c1 FROM vt0, vt1, v0 WHERE ((vt0.c0 IN (vt0.c1, v0.c0)) COLLATE RTRIM) GROUP BY vt0.c1, vt1.c0, v0.c0, vt1.c1 UNION SELECT ALL vt0.c1, vt1.c0, v0.c0, vt1.c1 FROM vt0, vt1, v0 WHERE ((NOT ((vt0.c0 IN (vt0.c1, v0.c0)) COLLATE RTRIM))) GROUP BY vt0.c1, vt1.c0, v0.c0, vt1.c1 UNION SELECT ALL vt0.c1, vt1.c0, v0.c0, vt1.c1 FROM vt0, vt1, v0 WHERE ((((vt0.c0 IN (vt0.c1, v0.c0)) COLLATE RTRIM) ISNULL)) GROUP BY vt0.c1, vt1.c0, v0.c0, vt1.c1;
SELECT vt0.c1, vt1.c0, v0.c0, vt1.c1 FROM vt0, vt1, v0 GROUP BY vt0.c1, vt1.c0, v0.c0, vt1.c1;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING COUNT(*) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING COUNT(*) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT vt0.c0, vt1.c0 FROM v0, vt1, vt0;
SELECT vt0.c0, vt1.c0 FROM v0, vt1, vt0 WHERE ('/ç¯') UNION ALL SELECT ALL vt0.c0, vt1.c0 FROM v0, vt1, vt0 WHERE ((NOT ('/ç¯'))) UNION ALL SELECT vt0.c0, vt1.c0 FROM v0, vt1, vt0 WHERE ((('/ç¯') ISNULL));
SELECT vt0.c0, vt1.c0 FROM v0, vt1, vt0;
SELECT DISTINCT vt0.c0, vt1.c0, vt1.c1, vt0.c1 FROM vt0 RIGHT OUTER JOIN vt1 ON CAST((((vt1.c1)) BETWEEN ((vt0.c1)) AND ((vt1.c1))) AS NUMERIC) LEFT OUTER JOIN v0 ON vt0.c1 COLLATE RTRIM;
SELECT DISTINCT vt0.c0, vt1.c0, vt1.c1, vt0.c1 FROM vt0 RIGHT OUTER JOIN vt1 ON CAST((((vt1.c1)) BETWEEN ((vt0.c1)) AND ((vt1.c1))) AS NUMERIC) LEFT OUTER JOIN v0 ON vt0.c1 COLLATE RTRIM WHERE ((((((vt1.c0, vt0.c1, v0.c0)) NOT BETWEEN ((vt0.c0, vt1.c1, vt1.c0)) AND ((v0.c0, vt0.c1, vt1.c1))))LIKE(CASE vt0.c0  WHEN vt1.c0 THEN v0.c0 ELSE vt0.c1 END))) UNION SELECT DISTINCT vt0.c0, vt1.c0, vt1.c1, vt0.c1 FROM vt0 RIGHT OUTER JOIN vt1 ON CAST((((vt1.c1)) BETWEEN ((vt0.c1)) AND ((vt1.c1))) AS NUMERIC) LEFT OUTER JOIN v0 ON vt0.c1 COLLATE RTRIM WHERE ((NOT ((((((vt1.c0, vt0.c1, v0.c0)) NOT BETWEEN ((vt0.c0, vt1.c1, vt1.c0)) AND ((v0.c0, vt0.c1, vt1.c1))))LIKE(CASE vt0.c0  WHEN vt1.c0 THEN v0.c0 ELSE vt0.c1 END))))) UNION SELECT DISTINCT vt0.c0, vt1.c0, vt1.c1, vt0.c1 FROM vt0 RIGHT OUTER JOIN vt1 ON CAST((((vt1.c1)) BETWEEN ((vt0.c1)) AND ((vt1.c1))) AS NUMERIC) LEFT OUTER JOIN v0 ON vt0.c1 COLLATE RTRIM WHERE ((((((((vt1.c0, vt0.c1, v0.c0)) NOT BETWEEN ((vt0.c0, vt1.c1, vt1.c0)) AND ((v0.c0, vt0.c1, vt1.c1))))LIKE(CASE vt0.c0  WHEN vt1.c0 THEN v0.c0 ELSE vt0.c1 END))) ISNULL));
SELECT DISTINCT vt0.c0, vt1.c0, vt1.c1, vt0.c1 FROM vt0 RIGHT OUTER JOIN vt1 ON CAST((((vt1.c1)) BETWEEN ((vt0.c1)) AND ((vt1.c1))) AS NUMERIC) LEFT OUTER JOIN v0 ON vt0.c1 COLLATE RTRIM;
SELECT vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0;
SELECT ALL vt1.c1, vt1.c0 FROM vt1 WHERE ((((((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))AND(((((((((((((0.29778938888846995)OR(vt1.c0)))AND(vt1.c0)))AND(NULL)))OR(NULL)))OR(vt1.c0)))OR(vt1.c0)))))AND(vt1.c0))) GROUP BY vt1.c1, vt1.c0 UNION SELECT vt1.c1, vt1.c0 FROM vt1 WHERE ((NOT ((((((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))AND(((((((((((((0.29778938888846995)OR(vt1.c0)))AND(vt1.c0)))AND(NULL)))OR(NULL)))OR(vt1.c0)))OR(vt1.c0)))))AND(vt1.c0))))) GROUP BY vt1.c1, vt1.c0 UNION SELECT ALL vt1.c1, vt1.c0 FROM vt1 WHERE ((((((((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))AND(((((((((((((0.29778938888846995)OR(vt1.c0)))AND(vt1.c0)))AND(NULL)))OR(NULL)))OR(vt1.c0)))OR(vt1.c0)))))AND(vt1.c0))) ISNULL)) GROUP BY vt1.c1, vt1.c0;
SELECT vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0;
SELECT v0.c0, vt0.c0, vt0.c1, vt1.c1, vt1.c0 FROM vt0, vt1, v0 GROUP BY v0.c0, vt0.c0, vt0.c1, vt1.c1, vt1.c0;
SELECT v0.c0, vt0.c0, vt0.c1, vt1.c1, vt1.c0 FROM vt0, vt1, v0 GROUP BY v0.c0, vt0.c0, vt0.c1, vt1.c1, vt1.c0 HAVING (((x'5ca2')) BETWEEN ((TOTAL(vt0.c1))) AND (((((((((('')AND(SUM(SUM(COUNT(x'24ed70e6'))))))OR(vt0.c0)))OR(v0.c0)))OR(v0.c0))))) UNION ALL SELECT v0.c0, vt0.c0, vt0.c1, vt1.c1, vt1.c0 FROM vt0, vt1, v0 GROUP BY v0.c0, vt0.c0, vt0.c1, vt1.c1, vt1.c0 HAVING (NOT ((((x'5ca2')) BETWEEN ((TOTAL(vt0.c1))) AND (((((((((('')AND(SUM(SUM(COUNT(x'24ed70e6'))))))OR(vt0.c0)))OR(v0.c0)))OR(v0.c0))))))) UNION ALL SELECT ALL v0.c0, vt0.c0, vt0.c1, vt1.c1, vt1.c0 FROM vt0, vt1, v0 GROUP BY v0.c0, vt0.c0, vt0.c1, vt1.c1, vt1.c0 HAVING (((((x'5ca2')) BETWEEN ((TOTAL(vt0.c1))) AND (((((((((('')AND(SUM(SUM(COUNT(x'24ed70e6'))))))OR(vt0.c0)))OR(v0.c0)))OR(v0.c0)))))) ISNULL);
SELECT ALL * FROM v0, vt0;
SELECT ALL * FROM v0, vt0 WHERE (CAST(((vt0.c1) NOT NULL) AS REAL)) UNION ALL SELECT * FROM v0, vt0 WHERE ((NOT (CAST(((vt0.c1) NOT NULL) AS REAL)))) UNION ALL SELECT ALL * FROM v0, vt0 WHERE (((CAST(((vt0.c1) NOT NULL) AS REAL)) ISNULL));
SELECT ALL * FROM v0, vt0;
SELECT DISTINCT vt1.c1 FROM vt1;
SELECT DISTINCT vt1.c1 FROM vt1 WHERE (((NULL COLLATE RTRIM) IS TRUE)) UNION SELECT DISTINCT vt1.c1 FROM vt1 WHERE ((NOT (((NULL COLLATE RTRIM) IS TRUE)))) UNION SELECT DISTINCT vt1.c1 FROM vt1 WHERE (((((NULL COLLATE RTRIM) IS TRUE)) ISNULL));
SELECT DISTINCT vt1.c1 FROM vt1;
SELECT ALL vt0.c0, vt1.c0 FROM v0 LEFT OUTER JOIN vt1 ON (((NULL)) NOT BETWEEN ((CASE WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c0 END)) AND (((+ (vt0.c0))))) FULL OUTER JOIN vt0 ON (CASE vt0.c0  WHEN NULL THEN vt0.c0 END IN (UPPER(vt1.c0), ((vt1.c0)/(vt0.c1)))) GROUP BY vt0.c0, vt1.c0;
SELECT ALL vt1.c0 FROM vt0, v0, vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt0 NOT INDEXED, v0, vt1 GROUP BY vt1.c0 HAVING SUM((((('âµ¾+xæ®¹R')AND(SUM(TOTAL(vt0.c0)))))OR(vt1.c1))) UNION ALL SELECT vt1.c0 FROM vt0, v0, vt1 GROUP BY vt1.c0 HAVING (NOT (SUM((((('âµ¾+xæ®¹R')AND(SUM(TOTAL(vt0.c0)))))OR(vt1.c1))))) UNION ALL SELECT vt1.c0 FROM vt0, v0, vt1 GROUP BY vt1.c0 HAVING ((SUM((((('âµ¾+xæ®¹R')AND(SUM(TOTAL(vt0.c0)))))OR(vt1.c1)))) ISNULL);
SELECT ALL v0.c0 FROM v0;
SELECT v0.c0 FROM v0 WHERE ((CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END IN (((v0.c0)<<(v0.c0)), x'2cc1'))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE ((NOT ((CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END IN (((v0.c0)<<(v0.c0)), x'2cc1'))))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE ((((CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END IN (((v0.c0)<<(v0.c0)), x'2cc1'))) ISNULL));
SELECT ALL v0.c0 FROM v0;
SELECT DISTINCT * FROM v0, vt1, vt0;
SELECT DISTINCT * FROM v0, vt1, vt0 WHERE (((((((((((vt0.c1)AND(v0.c0)))AND(vt1.c0)))AND(vt1.c1)))OR(vt0.c1))) IS TRUE)) UNION SELECT DISTINCT * FROM v0, vt1, vt0 WHERE ((NOT (((((((((((vt0.c1)AND(v0.c0)))AND(vt1.c0)))AND(vt1.c1)))OR(vt0.c1))) IS TRUE)))) UNION SELECT DISTINCT * FROM v0, vt1, vt0 WHERE (((((((((((((vt0.c1)AND(v0.c0)))AND(vt1.c0)))AND(vt1.c1)))OR(vt0.c1))) IS TRUE)) ISNULL));
SELECT DISTINCT * FROM v0, vt1, vt0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (((((NULL) NOT BETWEEN (v0.c0) AND (x'')))OR(v0.c0 COLLATE NOCASE))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT (((((NULL) NOT BETWEEN (v0.c0) AND (x'')))OR(v0.c0 COLLATE NOCASE))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((((((NULL) NOT BETWEEN (v0.c0) AND (x'')))OR(v0.c0 COLLATE NOCASE))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (- (GROUP_CONCAT(v0.c0))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT ((- (GROUP_CONCAT(v0.c0))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (((- (GROUP_CONCAT(v0.c0)))) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (- (GROUP_CONCAT(v0.c0))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT ((- (GROUP_CONCAT(v0.c0))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (((- (GROUP_CONCAT(v0.c0)))) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT * FROM v0;
SELECT ALL * FROM v0 WHERE (CAST(v0.c0 AS REAL)) UNION ALL SELECT ALL * FROM v0 WHERE ((NOT (CAST(v0.c0 AS REAL)))) UNION ALL SELECT * FROM v0 WHERE (((CAST(v0.c0 AS REAL)) ISNULL));
SELECT * FROM v0;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (CAST(((vt1.c0)AND(vt1.c0)) AS TEXT)) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (CAST(((vt1.c0)AND(vt1.c0)) AS TEXT)))) UNION SELECT DISTINCT * FROM vt1 WHERE (((CAST(((vt1.c0)AND(vt1.c0)) AS TEXT)) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE ((((- (vt1.c0))) NOTNULL)) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT ((((- (vt1.c0))) NOTNULL)))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((((((- (vt1.c0))) NOTNULL)) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 RIGHT OUTER JOIN v0 ON ((ABS(DISTINCT vt0.c1))+('-1966380080')) GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 RIGHT OUTER JOIN v0 ON ((ABS(DISTINCT vt0.c1))+('-1966380080')) GROUP BY vt0.c1, vt0.c0 HAVING ((v0.c0) IS FALSE) UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM vt0 NOT INDEXED RIGHT OUTER JOIN v0 ON ((ABS(DISTINCT vt0.c1))+('-1966380080')) GROUP BY vt0.c1, vt0.c0 HAVING (NOT (((v0.c0) IS FALSE))) UNION ALL SELECT vt0.c1, vt0.c0 FROM vt0 RIGHT OUTER JOIN v0 ON ((ABS(DISTINCT vt0.c1))+('-1966380080')) GROUP BY vt0.c1, vt0.c0 HAVING ((((v0.c0) IS FALSE)) ISNULL);
SELECT ALL vt0.c1, vt0.c0 FROM vt0 RIGHT OUTER JOIN v0 ON ((ABS(DISTINCT vt0.c1))+('-1966380080')) GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 RIGHT OUTER JOIN v0 ON ((ABS(DISTINCT vt0.c1))+('-1966380080')) GROUP BY vt0.c1, vt0.c0 HAVING ((v0.c0) IS FALSE) UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM vt0 NOT INDEXED RIGHT OUTER JOIN v0 ON ((ABS(DISTINCT vt0.c1))+('-1966380080')) GROUP BY vt0.c1, vt0.c0 HAVING (NOT (((v0.c0) IS FALSE))) UNION ALL SELECT vt0.c1, vt0.c0 FROM vt0 RIGHT OUTER JOIN v0 ON ((ABS(DISTINCT vt0.c1))+('-1966380080')) GROUP BY vt0.c1, vt0.c0 HAVING ((((v0.c0) IS FALSE)) ISNULL);
SELECT ALL vt0.c1, vt0.c0 FROM vt0 RIGHT OUTER JOIN v0 ON ((ABS(DISTINCT vt0.c1))+('-1966380080')) GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt1.c1, vt1.c0 FROM vt1;
SELECT vt1.c1, vt1.c0 FROM vt1 WHERE ('-800656923') UNION ALL SELECT vt1.c1, vt1.c0 FROM vt1 WHERE ((NOT ('-800656923'))) UNION ALL SELECT vt1.c1, vt1.c0 FROM vt1 WHERE ((('-800656923') ISNULL));
SELECT ALL vt1.c1, vt1.c0 FROM vt1;
SELECT DISTINCT * FROM vt1, v0, vt0;
SELECT DISTINCT * FROM vt1, v0, vt0 WHERE ((((~ (vt1.c1))) NOT BETWEEN ((((vt1.c1))<((NULL)))) AND (vt0.c1 COLLATE BINARY))) UNION SELECT DISTINCT * FROM vt1, v0, vt0 WHERE ((NOT ((((~ (vt1.c1))) NOT BETWEEN ((((vt1.c1))<((NULL)))) AND (vt0.c1 COLLATE BINARY))))) UNION SELECT DISTINCT * FROM vt1, v0, vt0 WHERE ((((((~ (vt1.c1))) NOT BETWEEN ((((vt1.c1))<((NULL)))) AND (vt0.c1 COLLATE BINARY))) ISNULL));
SELECT DISTINCT * FROM vt1, v0, vt0;
SELECT vt1.c0, vt0.c0, vt1.c1, vt0.c1 FROM vt1, vt0, v0 GROUP BY vt1.c0, vt0.c0, vt1.c1, vt0.c1;
SELECT vt1.c0, vt0.c0, vt1.c1, vt0.c1 FROM vt1, vt0, v0 WHERE (CASE WHEN vt1.c0 COLLATE RTRIM THEN CASE vt1.c0  WHEN vt1.c0 THEN vt0.c1 WHEN v0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c1 END ELSE ((vt0.c0) BETWEEN (vt1.c0) AND (vt0.c1)) END) GROUP BY vt1.c0, vt0.c0, vt1.c1, vt0.c1 UNION SELECT ALL vt1.c0, vt0.c0, vt1.c1, vt0.c1 FROM vt1, vt0, v0 WHERE ((NOT (CASE WHEN vt1.c0 COLLATE RTRIM THEN CASE vt1.c0  WHEN vt1.c0 THEN vt0.c1 WHEN v0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c1 END ELSE ((vt0.c0) BETWEEN (vt1.c0) AND (vt0.c1)) END))) GROUP BY vt1.c0, vt0.c0, vt1.c1, vt0.c1 UNION SELECT vt1.c0, vt0.c0, vt1.c1, vt0.c1 FROM vt1, vt0, v0 WHERE (((CASE WHEN vt1.c0 COLLATE RTRIM THEN CASE vt1.c0  WHEN vt1.c0 THEN vt0.c1 WHEN v0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c1 END ELSE ((vt0.c0) BETWEEN (vt1.c0) AND (vt0.c1)) END) ISNULL)) GROUP BY vt1.c0, vt0.c0, vt1.c1, vt0.c1;
SELECT vt1.c0, vt0.c0, vt1.c1, vt0.c1 FROM vt1, vt0, v0 GROUP BY vt1.c0, vt0.c0, vt1.c1, vt0.c1;
SELECT vt1.c0, v0.c0, vt0.c1 FROM v0, vt1, vt0 GROUP BY vt1.c0, v0.c0, vt0.c1;
SELECT vt1.c0, v0.c0, vt0.c1 FROM v0, vt1, vt0 GROUP BY vt1.c0, v0.c0, vt0.c1 HAVING GROUP_CONCAT(MIN(TOTAL(MAX(vt0.c0)))) UNION ALL SELECT vt1.c0, v0.c0, vt0.c1 FROM v0, vt1, vt0 GROUP BY vt1.c0, v0.c0, vt0.c1 HAVING (NOT (GROUP_CONCAT(MIN(TOTAL(MAX(vt0.c0)))))) UNION ALL SELECT ALL vt1.c0, v0.c0, vt0.c1 FROM v0, vt1, vt0 GROUP BY vt1.c0, v0.c0, vt0.c1 HAVING ((GROUP_CONCAT(MIN(TOTAL(MAX(vt0.c0))))) ISNULL);
SELECT ALL TOTAL(UNLIKELY(((vt0.c0) NOTNULL))) FROM vt1, vt0 ORDER BY CASE WHEN ((vt1.c1) NOT BETWEEN ('Fá´') AND (x'd4af9c91')) THEN ((vt0.c1) BETWEEN (vt0.c0) AND (vt1.c1)) ELSE ((vt0.c0)/(vt0.c1)) END;
SELECT * FROM vt1, v0, vt0;
SELECT ALL * FROM vt1, v0, vt0 WHERE (CAST(CAST(v0.c0 AS REAL) AS INTEGER)) UNION ALL SELECT * FROM vt1, v0, vt0 WHERE ((NOT (CAST(CAST(v0.c0 AS REAL) AS INTEGER)))) UNION ALL SELECT * FROM vt1, v0, vt0 WHERE (((CAST(CAST(v0.c0 AS REAL) AS INTEGER)) ISNULL));
SELECT * FROM vt1, v0, vt0;
SELECT DISTINCT * FROM vt1, vt0, v0;
SELECT DISTINCT * FROM vt1, vt0, v0 WHERE (CAST(((vt0.c1) NOT BETWEEN (vt0.c0) AND (v0.c0)) AS NUMERIC)) UNION SELECT DISTINCT * FROM vt1, vt0, v0 WHERE ((NOT (CAST(((vt0.c1) NOT BETWEEN (vt0.c0) AND (v0.c0)) AS NUMERIC)))) UNION SELECT DISTINCT * FROM vt1, vt0, v0 WHERE (((CAST(((vt0.c1) NOT BETWEEN (vt0.c0) AND (v0.c0)) AS NUMERIC)) ISNULL));
SELECT DISTINCT * FROM vt1, vt0, v0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (NULL) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (NULL))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((NULL) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL vt0.c0, vt1.c1, vt0.c1 FROM v0, vt1, vt0 GROUP BY vt0.c0, vt1.c1, vt0.c1;
SELECT vt0.c0, vt1.c1, vt0.c1 FROM v0, vt1, vt0 GROUP BY vt0.c0, vt1.c1, vt0.c1 HAVING MIN(MAX(v0.c0)) UNION ALL SELECT vt0.c0, vt1.c1, vt0.c1 FROM v0, vt1, vt0 GROUP BY vt0.c0, vt1.c1, vt0.c1 HAVING (NOT (MIN(MAX(v0.c0)))) UNION ALL SELECT ALL vt0.c0, vt1.c1, vt0.c1 FROM v0, vt1, vt0 GROUP BY vt0.c0, vt1.c1, vt0.c1 HAVING ((MIN(MAX(v0.c0))) ISNULL);
SELECT ALL vt1.c0, v0.c0 FROM vt1 CROSS JOIN v0 ON ((((((((((vt1.c1) BETWEEN (vt1.c0) AND (v0.c0)))OR(((vt1.c0) IS TRUE))))AND(((vt1.c0)||(vt1.c1)))))AND(vt1.c0 COLLATE BINARY)))AND(((vt1.c1) ISNULL)));
SELECT vt1.c0, v0.c0 FROM vt1 CROSS JOIN v0 ON ((((((((((vt1.c1) BETWEEN (vt1.c0) AND (v0.c0)))OR(((vt1.c0) IS TRUE))))AND(((vt1.c0)||(vt1.c1)))))AND(vt1.c0 COLLATE BINARY)))AND(((vt1.c1) ISNULL))) WHERE (((((v0.c0)IS(x''))) NOT BETWEEN (((v0.c0)<<(0.8345354699050082))) AND (vt1.c0 COLLATE RTRIM))) UNION ALL SELECT ALL vt1.c0, v0.c0 FROM vt1 CROSS JOIN v0 ON ((((((((((vt1.c1) BETWEEN (vt1.c0) AND (v0.c0)))OR(((vt1.c0) IS TRUE))))AND(((vt1.c0)||(vt1.c1)))))AND(vt1.c0 COLLATE BINARY)))AND(((vt1.c1) ISNULL))) WHERE ((NOT (((((v0.c0)IS(x''))) NOT BETWEEN (((v0.c0)<<(0.8345354699050082))) AND (vt1.c0 COLLATE RTRIM))))) UNION ALL SELECT vt1.c0, v0.c0 FROM vt1 CROSS JOIN v0 ON ((((((((((vt1.c1) BETWEEN (vt1.c0) AND (v0.c0)))OR(((vt1.c0) IS TRUE))))AND(((vt1.c0)||(vt1.c1)))))AND(vt1.c0 COLLATE BINARY)))AND(((vt1.c1) ISNULL))) WHERE (((((((v0.c0)IS(x''))) NOT BETWEEN (((v0.c0)<<(0.8345354699050082))) AND (vt1.c0 COLLATE RTRIM))) ISNULL));
SELECT ALL vt1.c0, v0.c0 FROM vt1 CROSS JOIN v0 ON ((((((((((vt1.c1) BETWEEN (vt1.c0) AND (v0.c0)))OR(((vt1.c0) IS TRUE))))AND(((vt1.c0)||(vt1.c1)))))AND(vt1.c0 COLLATE BINARY)))AND(((vt1.c1) ISNULL)));
SELECT DISTINCT v0.c0, vt1.c1, vt0.c0, vt1.c0, vt0.c1 FROM v0, vt0 FULL OUTER JOIN vt1 ON ((((vt1.c1)OR(vt0.c1))) ISNULL);
SELECT DISTINCT v0.c0, vt1.c1, vt0.c0, vt1.c0, vt0.c1 FROM v0, vt0 FULL OUTER JOIN vt1 ON ((((vt1.c1)OR(vt0.c1))) ISNULL) WHERE ((NULLIF(0X2e369503, vt1.c1) IN ())) UNION SELECT DISTINCT v0.c0, vt1.c1, vt0.c0, vt1.c0, vt0.c1 FROM v0, vt0 FULL OUTER JOIN vt1 ON ((((vt1.c1)OR(vt0.c1))) ISNULL) WHERE ((NOT ((NULLIF(0x2e369503, vt1.c1) IN ())))) UNION SELECT DISTINCT v0.c0, vt1.c1, vt0.c0, vt1.c0, vt0.c1 FROM v0, vt0 FULL OUTER JOIN vt1 ON ((((vt1.c1)OR(vt0.c1))) ISNULL) WHERE ((((NULLIF(0X2e369503, vt1.c1) IN ())) ISNULL));
SELECT DISTINCT v0.c0, vt1.c1, vt0.c0, vt1.c0, vt0.c1 FROM v0, vt0 FULL OUTER JOIN vt1 ON ((((vt1.c1)OR(vt0.c1))) ISNULL);
SELECT ALL vt0.c1 FROM vt1, vt0 GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt1, vt0 WHERE (CAST(vt0.c1 AS NUMERIC)) GROUP BY vt0.c1 UNION SELECT ALL vt0.c1 FROM vt1, vt0 WHERE ((NOT (CAST(vt0.c1 AS NUMERIC)))) GROUP BY vt0.c1 UNION SELECT vt0.c1 FROM vt1, vt0 WHERE (((CAST(vt0.c1 AS NUMERIC)) ISNULL)) GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt1, vt0 GROUP BY vt0.c1;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING MIN(COUNT(*)) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (MIN(COUNT(*)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((MIN(COUNT(*))) ISNULL);
SELECT TOTAL(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 ELSE v0.c0 END COLLATE BINARY) FROM v0, vt1, vt0;
SELECT ALL * FROM vt1, vt0 INNER JOIN v0 ON ((CASE WHEN vt1.c1 THEN 'FALSE' END)IS(((v0.c0) NOT BETWEEN (vt1.c1) AND (vt0.c1))));
SELECT ALL * FROM vt1, vt0 INNER JOIN v0 ON ((CASE WHEN vt1.c1 THEN 'FALSE' END)IS(((v0.c0) NOT BETWEEN (vt1.c1) AND (vt0.c1)))) WHERE (((CAST('-1104410544' AS TEXT)) IS TRUE)) UNION ALL SELECT ALL * FROM vt1, vt0 INNER JOIN v0 ON ((CASE WHEN vt1.c1 THEN 'FALSE' END)IS(((v0.c0) NOT BETWEEN (vt1.c1) AND (vt0.c1)))) WHERE ((NOT (((CAST('-1104410544' AS TEXT)) IS TRUE)))) UNION ALL SELECT * FROM vt1, vt0 INNER JOIN v0 ON ((CASE WHEN vt1.c1 THEN 'FALSE' END)IS(((v0.c0) NOT BETWEEN (vt1.c1) AND (vt0.c1)))) WHERE (((((CAST('-1104410544' AS TEXT)) IS TRUE)) ISNULL));
SELECT ALL * FROM vt1, vt0 INNER JOIN v0 ON ((CASE WHEN vt1.c1 THEN 'FALSE' END)IS(((v0.c0) NOT BETWEEN (vt1.c1) AND (vt0.c1))));
SELECT DISTINCT * FROM vt0, vt1;
SELECT DISTINCT * FROM vt0, vt1 WHERE ((NOT (vt0.c0 COLLATE RTRIM))) UNION SELECT DISTINCT * FROM vt0, vt1 WHERE ((NOT ((NOT (vt0.c0 COLLATE RTRIM))))) UNION SELECT DISTINCT * FROM vt0, vt1 WHERE ((((NOT (vt0.c0 COLLATE RTRIM))) ISNULL));
SELECT DISTINCT * FROM vt0, vt1;
SELECT vt0.c1, vt0.c0, vt1.c1, v0.c0, vt1.c0 FROM vt1, vt0, v0 GROUP BY vt0.c1, vt0.c0, vt1.c1, v0.c0, vt1.c0;
SELECT vt0.c1, vt0.c0, vt1.c1, v0.c0, vt1.c0 FROM vt1, vt0, v0 WHERE (((load_extension(vt0.c0, v0.c0))<>(((((((((v0.c0)AND(v0.c0)))OR(vt1.c0)))OR(v0.c0)))OR(vt1.c0))))) GROUP BY vt0.c1, vt0.c0, vt1.c1, v0.c0, vt1.c0 UNION SELECT ALL vt0.c1, vt0.c0, vt1.c1, v0.c0, vt1.c0 FROM vt1, vt0, v0 WHERE ((NOT (((load_extension(vt0.c0, v0.c0))<>(((((((((v0.c0)AND(v0.c0)))OR(vt1.c0)))OR(v0.c0)))OR(vt1.c0))))))) GROUP BY vt0.c1, vt0.c0, vt1.c1, v0.c0, vt1.c0 UNION SELECT ALL vt0.c1, vt0.c0, vt1.c1, v0.c0, vt1.c0 FROM vt1, vt0, v0 WHERE (((((load_extension(vt0.c0, v0.c0))!=(((((((((v0.c0)AND(v0.c0)))OR(vt1.c0)))OR(v0.c0)))OR(vt1.c0))))) ISNULL)) GROUP BY vt0.c1, vt0.c0, vt1.c1, v0.c0, vt1.c0;
SELECT vt0.c1, vt0.c0, vt1.c1, v0.c0, vt1.c0 FROM vt1, vt0, v0 GROUP BY vt0.c1, vt0.c0, vt1.c1, v0.c0, vt1.c0;
SELECT vt1.c1, vt1.c0, v0.c0, vt0.c0, vt0.c1 FROM vt0, v0, vt1 GROUP BY vt1.c1, vt1.c0, v0.c0, vt0.c0, vt0.c1;
SELECT ALL vt1.c1, vt1.c0, v0.c0, vt0.c0, vt0.c1 FROM vt0, v0, vt1 GROUP BY vt1.c1, vt1.c0, v0.c0, vt0.c0, vt0.c1 HAVING GROUP_CONCAT(((TOTAL(MAX(NULL))) NOT BETWEEN (COUNT(*)) AND (AVG(GROUP_CONCAT(v0.c0))))) UNION ALL SELECT ALL vt1.c1, vt1.c0, v0.c0, vt0.c0, vt0.c1 FROM vt0, v0, vt1 GROUP BY vt1.c1, vt1.c0, v0.c0, vt0.c0, vt0.c1 HAVING (NOT (GROUP_CONCAT(((TOTAL(MAX(NULL))) NOT BETWEEN (COUNT(*)) AND (AVG(GROUP_CONCAT(v0.c0))))))) UNION ALL SELECT ALL vt1.c1, vt1.c0, v0.c0, vt0.c0, vt0.c1 FROM vt0, v0, vt1 GROUP BY vt1.c1, vt1.c0, v0.c0, vt0.c0, vt0.c1 HAVING ((GROUP_CONCAT(((TOTAL(MAX(NULL))) NOT BETWEEN (COUNT(*)) AND (AVG(GROUP_CONCAT(v0.c0)))))) ISNULL);
SELECT * FROM vt0 FULL OUTER JOIN v0 ON ((((vt0.c0)%(vt0.c1)))<<(RTRIM(v0.c0)));
SELECT * FROM vt0 FULL OUTER JOIN v0 ON ((((vt0.c0)%(vt0.c1)))<<(RTRIM(v0.c0))) WHERE (((vt0.c1)>(((((vt0.c0)AND(vt0.c1)))OR(0.12147215602993666))))) UNION ALL SELECT ALL * FROM vt0 FULL OUTER JOIN v0 ON ((((vt0.c0)%(vt0.c1)))<<(RTRIM(v0.c0))) WHERE ((NOT (((vt0.c1)>(((((vt0.c0)AND(vt0.c1)))OR(0.12147215602993666))))))) UNION ALL SELECT * FROM vt0 FULL OUTER JOIN v0 ON ((((vt0.c0)%(vt0.c1)))<<(RTRIM(v0.c0))) WHERE (((((vt0.c1)>(((((vt0.c0)AND(vt0.c1)))OR(0.12147215602993666))))) ISNULL));
SELECT * FROM vt0 FULL OUTER JOIN v0 ON ((((vt0.c0)%(vt0.c1)))<<(RTRIM(v0.c0)));
SELECT DISTINCT vt1.c1, vt1.c0 FROM vt0, vt1;
SELECT DISTINCT vt1.c1, vt1.c0 FROM vt0, vt1 WHERE (IFNULL(((0.12499679517522577) IS FALSE), ((vt0.c1)IS(vt1.c1)))) UNION SELECT DISTINCT vt1.c1, vt1.c0 FROM vt0, vt1 WHERE ((NOT (IFNULL(((0.12499679517522577) IS FALSE), ((vt0.c1)IS(vt1.c1)))))) UNION SELECT DISTINCT vt1.c1, vt1.c0 FROM vt0, vt1 WHERE (((IFNULL(((0.12499679517522577) IS FALSE), ((vt0.c1)IS(vt1.c1)))) ISNULL));
SELECT DISTINCT vt1.c1, vt1.c0 FROM vt0, vt1;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (((0x7317ecfa) NOTNULL)) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (((0X7317ecfa) NOTNULL)))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE (((((0X7317ecfa) NOTNULL)) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT vt0.c0, vt0.c1, vt1.c1 FROM vt1, vt0, v0 GROUP BY vt0.c0, vt0.c1, vt1.c1;
SELECT vt0.c0, vt0.c1, vt1.c1 FROM vt1, vt0, v0 GROUP BY vt0.c0, vt0.c1, vt1.c1 HAVING TRIM(((COUNT(*))OR(vt1.c0)), ((SUM(vt0.c0))OR(COUNT(vt0.c1)))) UNION ALL SELECT ALL vt0.c0, vt0.c1, vt1.c1 FROM vt1, vt0, v0 GROUP BY vt0.c0, vt0.c1, vt1.c1 HAVING (NOT (TRIM(((COUNT(*))OR(vt1.c0)), ((SUM(vt0.c0))OR(COUNT(vt0.c1)))))) UNION ALL SELECT ALL vt0.c0, vt0.c1, vt1.c1 FROM vt1, vt0, v0 GROUP BY vt0.c0, vt0.c1, vt1.c1 HAVING ((TRIM(((COUNT(*))OR(vt1.c0)), ((SUM(vt0.c0))OR(COUNT(vt0.c1))))) ISNULL);
SELECT vt0.c0, vt0.c1, vt1.c1 FROM vt1, vt0, v0 GROUP BY vt0.c0, vt0.c1, vt1.c1;
SELECT vt0.c0, vt0.c1, vt1.c1 FROM vt1, vt0, v0 GROUP BY vt0.c0, vt0.c1, vt1.c1 HAVING TRIM(((COUNT(*))OR(vt1.c0)), ((SUM(vt0.c0))OR(COUNT(vt0.c1)))) UNION ALL SELECT ALL vt0.c0, vt0.c1, vt1.c1 FROM vt1, vt0, v0 GROUP BY vt0.c0, vt0.c1, vt1.c1 HAVING (NOT (TRIM(((COUNT(*))OR(vt1.c0)), ((SUM(vt0.c0))OR(COUNT(vt0.c1)))))) UNION ALL SELECT ALL vt0.c0, vt0.c1, vt1.c1 FROM vt1, vt0, v0 GROUP BY vt0.c0, vt0.c1, vt1.c1 HAVING ((TRIM(((COUNT(*))OR(vt1.c0)), ((SUM(vt0.c0))OR(COUNT(vt0.c1))))) ISNULL);
SELECT vt0.c0, vt0.c1, vt1.c1 FROM vt1, vt0, v0 GROUP BY vt0.c0, vt0.c1, vt1.c1;
SELECT ALL v0.c0 FROM vt0, v0;
SELECT ALL v0.c0 FROM vt0, v0 WHERE (CASE WHEN (('ê®¤Zt')>=(vt0.c1)) THEN 0.4669813869814704 WHEN ((vt0.c1) BETWEEN (NULL) AND (vt0.c0)) THEN ((v0.c0) NOTNULL) WHEN ((vt0.c0)-(vt0.c1)) THEN (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((v0.c0))) ELSE vt0.c1 COLLATE RTRIM END) UNION ALL SELECT ALL v0.c0 FROM vt0, v0 WHERE ((NOT (CASE WHEN (('ê®¤Zt')>=(vt0.c1)) THEN 0.4669813869814704 WHEN ((vt0.c1) BETWEEN (NULL) AND (vt0.c0)) THEN ((v0.c0) NOTNULL) WHEN ((vt0.c0)-(vt0.c1)) THEN (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((v0.c0))) ELSE vt0.c1 COLLATE RTRIM END))) UNION ALL SELECT ALL v0.c0 FROM vt0, v0 WHERE (((CASE WHEN (('ê®¤Zt')>=(vt0.c1)) THEN 0.4669813869814704 WHEN ((vt0.c1) BETWEEN (NULL) AND (vt0.c0)) THEN ((v0.c0) NOTNULL) WHEN ((vt0.c0)-(vt0.c1)) THEN (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((v0.c0))) ELSE vt0.c1 COLLATE RTRIM END) ISNULL));
SELECT ALL v0.c0 FROM vt0, v0;
SELECT DISTINCT vt1.c1 FROM vt1;
SELECT DISTINCT vt1.c1 FROM vt1 WHERE (COALESCE(DISTINCT ((vt1.c1) NOT BETWEEN (vt1.c0) AND (vt1.c0)), ((vt1.c1)%(vt1.c0)))) UNION SELECT DISTINCT vt1.c1 FROM vt1 WHERE ((NOT (COALESCE(DISTINCT ((vt1.c1) NOT BETWEEN (vt1.c0) AND (vt1.c0)), ((vt1.c1)%(vt1.c0)))))) UNION SELECT DISTINCT vt1.c1 FROM vt1 WHERE (((COALESCE(DISTINCT ((vt1.c1) NOT BETWEEN (vt1.c0) AND (vt1.c0)), ((vt1.c1)%(vt1.c0)))) ISNULL));
SELECT DISTINCT vt1.c1 FROM vt1;
SELECT ALL v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0;
SELECT ALL v0.c0, vt0.c0 FROM v0, vt0 WHERE (((v0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)) COLLATE RTRIM) GROUP BY v0.c0, vt0.c0 UNION SELECT v0.c0, vt0.c0 FROM v0, vt0 WHERE ((NOT (((v0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)) COLLATE RTRIM))) GROUP BY v0.c0, vt0.c0 UNION SELECT v0.c0, vt0.c0 FROM v0, vt0 WHERE (((((v0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)) COLLATE RTRIM) ISNULL)) GROUP BY v0.c0, vt0.c0;
SELECT ALL v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0;
SELECT ALL vt0.c1 FROM v0, vt1, vt0 GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM v0, vt1, vt0 GROUP BY vt0.c1 HAVING AVG(COUNT(*)) UNION ALL SELECT vt0.c1 FROM v0, vt1, vt0 GROUP BY vt0.c1 HAVING (NOT (AVG(COUNT(*)))) UNION ALL SELECT ALL vt0.c1 FROM v0, vt1, vt0 GROUP BY vt0.c1 HAVING ((AVG(COUNT(*))) ISNULL);
SELECT ALL MAX(CASE WHEN ((vt1.c1)<>(vt1.c0)) THEN ((vt1.c0) NOT NULL) ELSE 1.38438059E8 END) FROM vt1, vt0, v0;
SELECT ALL vt1.c1 FROM vt1;
SELECT ALL vt1.c1 FROM vt1 WHERE (((vt1.c0 COLLATE BINARY)IS NOT(((vt1.c1)>(vt1.c1))))) UNION ALL SELECT ALL vt1.c1 FROM vt1 WHERE ((NOT (((vt1.c0 COLLATE BINARY)IS NOT(((vt1.c1)>(vt1.c1))))))) UNION ALL SELECT ALL vt1.c1 FROM vt1 WHERE (((((vt1.c0 COLLATE BINARY)IS NOT(((vt1.c1)>(vt1.c1))))) ISNULL));
SELECT ALL vt1.c1 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE (CASE WHEN rtreenode(vt1.c1, vt1.c1) THEN (((vt1.c1)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))) ELSE CAST(vt1.c0 AS BLOB) END) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT (CASE WHEN rtreenode(vt1.c1, vt1.c1) THEN (((vt1.c1)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))) ELSE CAST(vt1.c0 AS BLOB) END))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((CASE WHEN rtreenode(vt1.c1, vt1.c1) THEN (((vt1.c1)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))) ELSE CAST(vt1.c0 AS BLOB) END) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT ALL vt1.c0, vt0.c1, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c1, vt0.c0;
SELECT ALL vt1.c0, vt0.c1, vt0.c0 FROM vt1, vt0 WHERE (CASE WHEN CAST(vt1.c1 AS REAL) THEN CASE WHEN vt0.c1 THEN vt1.c0 END ELSE ((vt1.c1)GLOB(vt1.c1)) END) GROUP BY vt1.c0, vt0.c1, vt0.c0 UNION SELECT vt1.c0, vt0.c1, vt0.c0 FROM vt1, vt0 WHERE ((NOT (CASE WHEN CAST(vt1.c1 AS REAL) THEN CASE WHEN vt0.c1 THEN vt1.c0 END ELSE ((vt1.c1)GLOB(vt1.c1)) END))) GROUP BY vt1.c0, vt0.c1, vt0.c0 UNION SELECT ALL vt1.c0, vt0.c1, vt0.c0 FROM vt1, vt0 WHERE (((CASE WHEN CAST(vt1.c1 AS REAL) THEN CASE WHEN vt0.c1 THEN vt1.c0 END ELSE ((vt1.c1)GLOB(vt1.c1)) END) ISNULL)) GROUP BY vt1.c0, vt0.c1, vt0.c0;
SELECT ALL vt1.c0, vt0.c1, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c1, vt0.c0;
SELECT vt0.c0, vt1.c1, vt0.c1, vt1.c0, v0.c0 FROM vt1, v0, vt0 GROUP BY vt0.c0, vt1.c1, vt0.c1, vt1.c0, v0.c0;
SELECT vt0.c0, vt1.c1, vt0.c1, vt1.c0, v0.c0 FROM vt1, v0, vt0 GROUP BY vt0.c0, vt1.c1, vt0.c1, vt1.c0, v0.c0 HAVING TOTAL(MAX(MAX(vt0.c0))) UNION ALL SELECT ALL vt0.c0, vt1.c1, vt0.c1, vt1.c0, v0.c0 FROM vt1, v0, vt0 GROUP BY vt0.c0, vt1.c1, vt0.c1, vt1.c0, v0.c0 HAVING (NOT (TOTAL(MAX(MAX(vt0.c0))))) UNION ALL SELECT ALL vt0.c0, vt1.c1, vt0.c1, vt1.c0, v0.c0 FROM vt1, v0, vt0 GROUP BY vt0.c0, vt1.c1, vt0.c1, vt1.c0, v0.c0 HAVING ((TOTAL(MAX(MAX(vt0.c0)))) ISNULL);
SELECT vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (CAST(vt0.c1 AS REAL)))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT ((NOT (CAST(vt0.c1 AS REAL)))))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((((NOT (CAST(vt0.c1 AS REAL)))) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT vt1.c1, vt0.c0, vt0.c1, vt1.c0 FROM v0, vt0 FULL OUTER JOIN vt1 ON (((vt1.c1 IN ()))||((((vt0.c0, v0.c0, vt0.c1)) BETWEEN ((v0.c0, vt0.c1, vt1.c1)) AND ((v0.c0, vt0.c1, vt0.c1)))));
SELECT DISTINCT vt1.c1, vt0.c0, vt0.c1, vt1.c0 FROM v0, vt0 FULL OUTER JOIN vt1 ON (((vt1.c1 IN ()))||((((vt0.c0, v0.c0, vt0.c1)) BETWEEN ((v0.c0, vt0.c1, vt1.c1)) AND ((v0.c0, vt0.c1, vt0.c1))))) WHERE (((x'48ce' COLLATE BINARY)|(vt0.c1))) UNION SELECT DISTINCT vt1.c1, vt0.c0, vt0.c1, vt1.c0 FROM v0, vt0 FULL OUTER JOIN vt1 ON (((vt1.c1 IN ()))||((((vt0.c0, v0.c0, vt0.c1)) BETWEEN ((v0.c0, vt0.c1, vt1.c1)) AND ((v0.c0, vt0.c1, vt0.c1))))) WHERE ((NOT (((x'48ce' COLLATE BINARY)|(vt0.c1))))) UNION SELECT DISTINCT vt1.c1, vt0.c0, vt0.c1, vt1.c0 FROM v0, vt0 FULL OUTER JOIN vt1 ON (((vt1.c1 IN ()))||((((vt0.c0, v0.c0, vt0.c1)) BETWEEN ((v0.c0, vt0.c1, vt1.c1)) AND ((v0.c0, vt0.c1, vt0.c1))))) WHERE (((((x'48ce' COLLATE BINARY)|(vt0.c1))) ISNULL));
SELECT DISTINCT vt1.c1, vt0.c0, vt0.c1, vt1.c0 FROM v0, vt0 FULL OUTER JOIN vt1 ON (((vt1.c1 IN ()))||((((vt0.c0, v0.c0, vt0.c1)) BETWEEN ((v0.c0, vt0.c1, vt1.c1)) AND ((v0.c0, vt0.c1, vt0.c1)))));
SELECT vt1.c1, vt1.c0, v0.c0, vt0.c0, vt0.c1 FROM vt0, v0, vt1 GROUP BY vt1.c1, vt1.c0, v0.c0, vt0.c0, vt0.c1;
SELECT vt1.c1, vt1.c0, v0.c0, vt0.c0, vt0.c1 FROM vt0, v0, vt1 WHERE (((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) NOT BETWEEN (CAST(vt0.c1 AS REAL)) AND (vt0.c0))) GROUP BY vt1.c1, vt1.c0, v0.c0, vt0.c0, vt0.c1 UNION SELECT vt1.c1, vt1.c0, v0.c0, vt0.c0, vt0.c1 FROM vt0, v0, vt1 WHERE ((NOT (((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) NOT BETWEEN (CAST(vt0.c1 AS REAL)) AND (vt0.c0))))) GROUP BY vt1.c1, vt1.c0, v0.c0, vt0.c0, vt0.c1 UNION SELECT ALL vt1.c1, vt1.c0, v0.c0, vt0.c0, vt0.c1 FROM vt0, v0, vt1 WHERE (((((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) NOT BETWEEN (CAST(vt0.c1 AS REAL)) AND (vt0.c0))) ISNULL)) GROUP BY vt1.c1, vt1.c0, v0.c0, vt0.c0, vt0.c1;
SELECT vt1.c1, vt1.c0, v0.c0, vt0.c0, vt0.c1 FROM vt0, v0, vt1 GROUP BY vt1.c1, vt1.c0, v0.c0, vt0.c0, vt0.c1;
SELECT vt0.c0, vt0.c1 FROM v0 FULL OUTER JOIN vt0 ON v0.c0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM v0 FULL OUTER JOIN vt0 ON v0.c0 GROUP BY vt0.c0, vt0.c1 HAVING SUM('tNM8%+''-^') UNION ALL SELECT vt0.c0, vt0.c1 FROM v0 FULL OUTER JOIN vt0 ON v0.c0 GROUP BY vt0.c0, vt0.c1 HAVING (NOT (SUM('tNM8%+''-^'))) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM v0 FULL OUTER JOIN vt0 ON v0.c0 GROUP BY vt0.c0, vt0.c1 HAVING ((SUM('tNM8%+''-^')) ISNULL);
SELECT vt0.c0, vt0.c1 FROM v0 FULL OUTER JOIN vt0 ON v0.c0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM v0 FULL OUTER JOIN vt0 ON v0.c0 GROUP BY vt0.c0, vt0.c1 HAVING SUM('tNM8%+''-^') UNION ALL SELECT vt0.c0, vt0.c1 FROM v0 FULL OUTER JOIN vt0 ON v0.c0 GROUP BY vt0.c0, vt0.c1 HAVING (NOT (SUM('tNM8%+''-^'))) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM v0 FULL OUTER JOIN vt0 ON v0.c0 GROUP BY vt0.c0, vt0.c1 HAVING ((SUM('tNM8%+''-^')) ISNULL);
SELECT vt0.c0, vt0.c1 FROM v0 FULL OUTER JOIN vt0 ON v0.c0 GROUP BY vt0.c0, vt0.c1;
SELECT MAX(((vt1.c0 COLLATE BINARY) NOT BETWEEN (vt1.c1) AND (CAST(vt1.c1 AS TEXT)))) FROM vt1;
SELECT ALL * FROM v0;
SELECT ALL * FROM v0 WHERE ('-640818613') UNION ALL SELECT * FROM v0 WHERE ((NOT ('-640818613'))) UNION ALL SELECT ALL * FROM v0 WHERE ((('-640818613') ISNULL));
SELECT ALL * FROM v0;
SELECT DISTINCT * FROM vt0 CROSS JOIN v0 ON CAST(CASE v0.c0  WHEN vt0.c0 THEN vt0.c1 END AS TEXT);
SELECT DISTINCT * FROM vt0 CROSS JOIN v0 ON CAST(CASE v0.c0  WHEN vt0.c0 THEN vt0.c1 END AS TEXT) WHERE (((CAST(vt0.c1 AS TEXT))|((((vt0.c0))>=((vt0.c0)))))) UNION SELECT DISTINCT * FROM vt0 CROSS JOIN v0 ON CAST(CASE v0.c0  WHEN vt0.c0 THEN vt0.c1 END AS TEXT) WHERE ((NOT (((CAST(vt0.c1 AS TEXT))|((((vt0.c0))>=((vt0.c0)))))))) UNION SELECT DISTINCT * FROM vt0 CROSS JOIN v0 ON CAST(CASE v0.c0  WHEN vt0.c0 THEN vt0.c1 END AS TEXT) WHERE (((((CAST(vt0.c1 AS TEXT))|((((vt0.c0))>=((vt0.c0)))))) ISNULL));
SELECT DISTINCT * FROM vt0 CROSS JOIN v0 ON CAST(CASE v0.c0  WHEN vt0.c0 THEN vt0.c1 END AS TEXT);
SELECT v0.c0, vt1.c0, vt1.c1 FROM v0, vt1 GROUP BY v0.c0, vt1.c0, vt1.c1;
SELECT ALL v0.c0, vt1.c0, vt1.c1 FROM v0, vt1 WHERE (CASE WHEN vt1.c0 THEN NULLIF(DISTINCT vt1.c1, vt1.c0) END) GROUP BY v0.c0, vt1.c0, vt1.c1 UNION SELECT v0.c0, vt1.c0, vt1.c1 FROM v0, vt1 WHERE ((NOT (CASE WHEN vt1.c0 THEN NULLIF(DISTINCT vt1.c1, vt1.c0) END))) GROUP BY v0.c0, vt1.c0, vt1.c1 UNION SELECT v0.c0, vt1.c0, vt1.c1 FROM v0, vt1 WHERE (((CASE WHEN vt1.c0 THEN NULLIF(DISTINCT vt1.c1, vt1.c0) END) ISNULL)) GROUP BY v0.c0, vt1.c0, vt1.c1;
SELECT v0.c0, vt1.c0, vt1.c1 FROM v0, vt1 GROUP BY v0.c0, vt1.c0, vt1.c1;
SELECT ALL vt0.c0, vt1.c1, vt1.c0 FROM vt0, vt1 FULL OUTER JOIN v0 ON (((((vt1.c1)) BETWEEN ((vt0.c1)) AND ((vt1.c0))))&(0.4874375567677255)) GROUP BY vt0.c0, vt1.c1, vt1.c0;
SELECT ALL vt0.c0, vt1.c1, vt1.c0 FROM vt0, vt1 FULL OUTER JOIN v0 ON (((((vt1.c1)) BETWEEN ((vt0.c1)) AND ((vt1.c0))))&(0.4874375567677255)) GROUP BY vt0.c0, vt1.c1, vt1.c0 HAVING GROUP_CONCAT((+ (vt1.c1))) UNION ALL SELECT vt0.c0, vt1.c1, vt1.c0 FROM vt0, vt1 FULL OUTER JOIN v0 ON (((((vt1.c1)) BETWEEN ((vt0.c1)) AND ((vt1.c0))))&(0.4874375567677255)) GROUP BY vt0.c0, vt1.c1, vt1.c0 HAVING (NOT (GROUP_CONCAT((+ (vt1.c1))))) UNION ALL SELECT vt0.c0, vt1.c1, vt1.c0 FROM vt0, vt1 FULL OUTER JOIN v0 ON (((((vt1.c1)) BETWEEN ((vt0.c1)) AND ((vt1.c0))))&(0.4874375567677255)) GROUP BY vt0.c0, vt1.c1, vt1.c0 HAVING ((GROUP_CONCAT((+ (vt1.c1)))) ISNULL);
SELECT ALL vt0.c0, vt1.c1, vt1.c0 FROM vt0, vt1 FULL OUTER JOIN v0 ON (((((vt1.c1)) BETWEEN ((vt0.c1)) AND ((vt1.c0))))&(0.4874375567677255)) GROUP BY vt0.c0, vt1.c1, vt1.c0;
SELECT ALL vt0.c0, vt1.c1, vt1.c0 FROM vt0, vt1 FULL OUTER JOIN v0 ON (((((vt1.c1)) BETWEEN ((vt0.c1)) AND ((vt1.c0))))&(0.4874375567677255)) GROUP BY vt0.c0, vt1.c1, vt1.c0 HAVING GROUP_CONCAT((+ (vt1.c1))) UNION ALL SELECT vt0.c0, vt1.c1, vt1.c0 FROM vt0, vt1 FULL OUTER JOIN v0 ON (((((vt1.c1)) BETWEEN ((vt0.c1)) AND ((vt1.c0))))&(0.4874375567677255)) GROUP BY vt0.c0, vt1.c1, vt1.c0 HAVING (NOT (GROUP_CONCAT((+ (vt1.c1))))) UNION ALL SELECT vt0.c0, vt1.c1, vt1.c0 FROM vt0, vt1 FULL OUTER JOIN v0 ON (((((vt1.c1)) BETWEEN ((vt0.c1)) AND ((vt1.c0))))&(0.4874375567677255)) GROUP BY vt0.c0, vt1.c1, vt1.c0 HAVING ((GROUP_CONCAT((+ (vt1.c1)))) ISNULL);
SELECT ALL vt0.c0, vt1.c1, vt1.c0 FROM vt0, vt1 FULL OUTER JOIN v0 ON (((((vt1.c1)) BETWEEN ((vt0.c1)) AND ((vt1.c0))))&(0.4874375567677255)) GROUP BY vt0.c0, vt1.c1, vt1.c0;
SELECT MAX(COALESCE(DISTINCT vt1.c0, vt1.c1) COLLATE RTRIM) FROM v0, vt1 ORDER BY ((TRIM(vt1.c1))|(v0.c0 COLLATE BINARY)) DESC  NULLS LAST;
SELECT ALL vt1.c0 FROM vt1;
SELECT vt1.c0 FROM vt1 WHERE ((~ (((vt1.c1) IS TRUE)))) UNION ALL SELECT vt1.c0 FROM vt1 WHERE ((NOT ((~ (((vt1.c1) IS TRUE)))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE ((((~ (((vt1.c1) IS TRUE)))) ISNULL));
SELECT ALL vt1.c0 FROM vt1;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((CAST(vt0.c0 AS NUMERIC)) NOTNULL)) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((CAST(vt0.c0 AS NUMERIC)) NOTNULL)))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((CAST(vt0.c0 AS NUMERIC)) NOTNULL)) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL vt0.c0, vt1.c1, vt1.c0, v0.c0 FROM vt1, vt0, v0 GROUP BY vt0.c0, vt1.c1, vt1.c0, v0.c0;
SELECT ALL vt0.c0, vt1.c1, vt1.c0, v0.c0 FROM vt1, vt0, v0 WHERE ((TRIM(DISTINCT vt1.c1) IN ((+ (v0.c0))))) GROUP BY vt0.c0, vt1.c1, vt1.c0, v0.c0 UNION SELECT vt0.c0, vt1.c1, vt1.c0, v0.c0 FROM vt1, vt0, v0 WHERE ((NOT ((TRIM(DISTINCT vt1.c1) IN ((+ (v0.c0))))))) GROUP BY vt0.c0, vt1.c1, vt1.c0, v0.c0 UNION SELECT vt0.c0, vt1.c1, vt1.c0, v0.c0 FROM vt1, vt0, v0 WHERE ((((TRIM(DISTINCT vt1.c1) IN ((+ (v0.c0))))) ISNULL)) GROUP BY vt0.c0, vt1.c1, vt1.c0, v0.c0;
SELECT ALL vt0.c0, vt1.c1, vt1.c0, v0.c0 FROM vt1, vt0, v0 GROUP BY vt0.c0, vt1.c1, vt1.c0, v0.c0;
SELECT ALL vt0.c0, vt0.c1, vt1.c1, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt0.c1, vt1.c1, vt1.c0;
SELECT ALL vt0.c0, vt0.c1, vt1.c1, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt0.c1, vt1.c1, vt1.c0 HAVING CAST(COUNT(TOTAL(COUNT(vt1.c0))) AS NUMERIC) UNION ALL SELECT ALL vt0.c0, vt0.c1, vt1.c1, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt0.c1, vt1.c1, vt1.c0 HAVING (NOT (CAST(COUNT(TOTAL(COUNT(vt1.c0))) AS NUMERIC))) UNION ALL SELECT vt0.c0, vt0.c1, vt1.c1, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt0.c1, vt1.c1, vt1.c0 HAVING ((CAST(COUNT(TOTAL(COUNT(vt1.c0))) AS NUMERIC)) ISNULL);
SELECT vt0.c1, v0.c0 FROM vt0, v0;
SELECT ALL vt0.c1, v0.c0 FROM vt0, v0 WHERE ((CAST(vt0.c0 AS REAL) IN ())) UNION ALL SELECT ALL vt0.c1, v0.c0 FROM vt0, v0 WHERE ((NOT ((CAST(vt0.c0 AS REAL) IN ())))) UNION ALL SELECT vt0.c1, v0.c0 FROM vt0, v0 WHERE ((((CAST(vt0.c0 AS REAL) IN ())) ISNULL));
SELECT vt0.c1, v0.c0 FROM vt0, v0;
SELECT DISTINCT * FROM vt0, vt1, v0;
SELECT DISTINCT * FROM vt0, vt1, v0 WHERE (CASE WHEN TYPEOF(vt0.c0) THEN ('' IN ()) ELSE vt1.c1 END) UNION SELECT DISTINCT * FROM vt0, vt1, v0 WHERE ((NOT (CASE WHEN TYPEOF(vt0.c0) THEN ('' IN ()) ELSE vt1.c1 END))) UNION SELECT DISTINCT * FROM vt0, vt1, v0 WHERE (((CASE WHEN TYPEOF(vt0.c0) THEN ('' IN ()) ELSE vt1.c1 END) ISNULL));
SELECT DISTINCT * FROM vt0, vt1, v0;
SELECT vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1;
SELECT ALL vt1.c0, vt1.c1 FROM vt1 WHERE (((((vt1.c0)>=(vt1.c1)))IS((~ (vt1.c0))))) GROUP BY vt1.c0, vt1.c1 UNION SELECT vt1.c0, vt1.c1 FROM vt1 WHERE ((NOT (((((vt1.c0)>=(vt1.c1)))IS((~ (vt1.c0))))))) GROUP BY vt1.c0, vt1.c1 UNION SELECT ALL vt1.c0, vt1.c1 FROM vt1 WHERE (((((((vt1.c0)>=(vt1.c1)))IS((~ (vt1.c0))))) ISNULL)) GROUP BY vt1.c0, vt1.c1;
SELECT vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1;
SELECT vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0;
SELECT ALL vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0 HAVING (NOT (SUM(vt1.c1))) UNION ALL SELECT ALL vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0 HAVING (NOT ((NOT (SUM(vt1.c1))))) UNION ALL SELECT ALL vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0 HAVING (((NOT (SUM(vt1.c1)))) ISNULL);
SELECT vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0;
SELECT ALL vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0 HAVING (NOT (SUM(vt1.c1))) UNION ALL SELECT ALL vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0 HAVING (NOT ((NOT (SUM(vt1.c1))))) UNION ALL SELECT ALL vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0 HAVING (((NOT (SUM(vt1.c1)))) ISNULL);
SELECT vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0;
SELECT vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE ((('0.39263128391657387') NOT NULL)) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT ((('0.39263128391657387') NOT NULL)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((((('0.39263128391657387') NOT NULL)) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT v0.c0, vt0.c0, vt1.c1 FROM v0 FULL OUTER JOIN vt1 ON ((CASE v0.c0  WHEN v0.c0 THEN v0.c0 END) BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0))) AND (-3.40208879E8)) INNER JOIN vt0 ON ((vt1.c1)-(((vt0.c1) ISNULL)));
SELECT ALL vt1.c0, vt0.c0, v0.c0 FROM vt1, vt0 INNER JOIN v0 ON CAST(CASE vt0.c1  WHEN vt1.c1 THEN 'z' WHEN vt1.c1 THEN 0.9979837056747247 WHEN vt0.c1 THEN vt0.c1 ELSE 0.29484330285941396 END AS NUMERIC) GROUP BY vt1.c0, vt0.c0, v0.c0;
SELECT vt1.c0, vt0.c0, v0.c0 FROM vt1, vt0 INNER JOIN v0 ON CAST(CASE vt0.c1  WHEN vt1.c1 THEN 'z' WHEN vt1.c1 THEN 0.9979837056747247 WHEN vt0.c1 THEN vt0.c1 ELSE 0.29484330285941396 END AS NUMERIC) WHERE ((vt1.c1 IN ()) COLLATE NOCASE) GROUP BY vt1.c0, vt0.c0, v0.c0 UNION SELECT vt1.c0, vt0.c0, v0.c0 FROM vt1, vt0 INNER JOIN v0 ON CAST(CASE vt0.c1  WHEN vt1.c1 THEN 'z' WHEN vt1.c1 THEN 0.9979837056747247 WHEN vt0.c1 THEN vt0.c1 ELSE 0.29484330285941396 END AS NUMERIC) WHERE ((NOT ((vt1.c1 IN ()) COLLATE NOCASE))) GROUP BY vt1.c0, vt0.c0, v0.c0 UNION SELECT ALL vt1.c0, vt0.c0, v0.c0 FROM vt1, vt0 INNER JOIN v0 ON CAST(CASE vt0.c1  WHEN vt1.c1 THEN 'z' WHEN vt1.c1 THEN 0.9979837056747247 WHEN vt0.c1 THEN vt0.c1 ELSE 0.29484330285941396 END AS NUMERIC) WHERE ((((vt1.c1 IN ()) COLLATE NOCASE) ISNULL)) GROUP BY vt1.c0, vt0.c0, v0.c0;
SELECT ALL vt1.c0, vt0.c0, v0.c0 FROM vt1, vt0 INNER JOIN v0 ON CAST(CASE vt0.c1  WHEN vt1.c1 THEN 'z' WHEN vt1.c1 THEN 0.9979837056747247 WHEN vt0.c1 THEN vt0.c1 ELSE 0.29484330285941396 END AS NUMERIC) GROUP BY vt1.c0, vt0.c0, v0.c0;
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING 'BC\\' UNION ALL SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING (NOT ('BC\\')) UNION ALL SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING (('BC\\') ISNULL);
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING 'BC\\' UNION ALL SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING (NOT ('BC\\')) UNION ALL SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING (('BC\\') ISNULL);
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0 INNER JOIN v0 ON ((v0.c0 IN ()) IN ((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1))), ((v0.c0)IS NOT(vt0.c1))));
SELECT vt0.c1 FROM vt0 INNER JOIN v0 ON ((v0.c0 IN ()) IN ((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1))), ((v0.c0)IS NOT(vt0.c1)))) WHERE (((((vt0.c0)-(v0.c0))) ISNULL)) UNION ALL SELECT ALL vt0.c1 FROM vt0 INNER JOIN v0 ON ((v0.c0 IN ()) IN ((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1))), ((v0.c0)IS NOT(vt0.c1)))) WHERE ((NOT (((((vt0.c0)-(v0.c0))) ISNULL)))) UNION ALL SELECT ALL vt0.c1 FROM vt0 INNER JOIN v0 ON ((v0.c0 IN ()) IN ((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1))), ((v0.c0)IS NOT(vt0.c1)))) WHERE (((((((vt0.c0)-(v0.c0))) ISNULL)) ISNULL));
SELECT vt0.c1 FROM vt0 INNER JOIN v0 ON ((v0.c0 IN ()) IN ((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1))), ((v0.c0)IS NOT(vt0.c1))));
SELECT DISTINCT v0.c0 FROM v0, vt1;
SELECT DISTINCT v0.c0 FROM v0, vt1 WHERE ((((('-571046456')AND((+ (vt1.c1)))))AND(((vt1.c0)IS NOT(x'952c9a92'))))) UNION SELECT DISTINCT v0.c0 FROM v0, vt1 WHERE ((NOT ((((('-571046456')AND((+ (vt1.c1)))))AND(((vt1.c0)IS NOT(x'952c9a92'))))))) UNION SELECT DISTINCT v0.c0 FROM v0, vt1 WHERE ((((((('-571046456')AND((+ (vt1.c1)))))AND(((vt1.c0)IS NOT(x'952c9a92'))))) ISNULL));
SELECT DISTINCT v0.c0 FROM v0, vt1;
SELECT vt0.c0, vt0.c1 FROM v0, vt0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM v0, vt0 WHERE (CASE WHEN vt0.c0 COLLATE NOCASE THEN '' END) GROUP BY vt0.c0, vt0.c1 UNION SELECT vt0.c0, vt0.c1 FROM v0, vt0 WHERE ((NOT (CASE WHEN vt0.c0 COLLATE NOCASE THEN '' END))) GROUP BY vt0.c0, vt0.c1 UNION SELECT vt0.c0, vt0.c1 FROM v0, vt0 WHERE (((CASE WHEN vt0.c0 COLLATE NOCASE THEN '' END) ISNULL)) GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c0, vt0.c1 FROM v0, vt0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((GROUP_CONCAT(v0.c0)) BETWEEN ((((v0.c0))==((AVG(v0.c0))))) AND (((COUNT(*))<>(v0.c0)))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (((GROUP_CONCAT(v0.c0)) BETWEEN ((((v0.c0))=((AVG(v0.c0))))) AND (((COUNT(*))<>(v0.c0)))))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((((GROUP_CONCAT(v0.c0)) BETWEEN ((((v0.c0))=((AVG(v0.c0))))) AND (((COUNT(*))<>(v0.c0))))) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((GROUP_CONCAT(v0.c0)) BETWEEN ((((v0.c0))==((AVG(v0.c0))))) AND (((COUNT(*))<>(v0.c0)))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (((GROUP_CONCAT(v0.c0)) BETWEEN ((((v0.c0))=((AVG(v0.c0))))) AND (((COUNT(*))<>(v0.c0)))))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((((GROUP_CONCAT(v0.c0)) BETWEEN ((((v0.c0))=((AVG(v0.c0))))) AND (((COUNT(*))<>(v0.c0))))) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL * FROM vt0, vt1;
SELECT * FROM vt0, vt1 WHERE (CAST(((((vt0.c1)AND(vt0.c0)))AND(vt1.c1)) AS INTEGER)) UNION ALL SELECT * FROM vt0, vt1 WHERE ((NOT (CAST(((((vt0.c1)AND(vt0.c0)))AND(vt1.c1)) AS INTEGER)))) UNION ALL SELECT * FROM vt0, vt1 WHERE (((CAST(((((vt0.c1)AND(vt0.c0)))AND(vt1.c1)) AS INTEGER)) ISNULL));
SELECT ALL * FROM vt0, vt1;
SELECT DISTINCT * FROM v0 FULL OUTER JOIN vt1 ON ((((((v0.c0) BETWEEN (v0.c0) AND (vt1.c1)))OR(CASE v0.c0  WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c1 END)))OR((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))));
SELECT DISTINCT * FROM v0 FULL OUTER JOIN vt1 ON ((((((v0.c0) BETWEEN (v0.c0) AND (vt1.c1)))OR(CASE v0.c0  WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c1 END)))OR((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))) WHERE (vt1.c1) UNION SELECT DISTINCT * FROM v0 FULL OUTER JOIN vt1 ON ((((((v0.c0) BETWEEN (v0.c0) AND (vt1.c1)))OR(CASE v0.c0  WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c1 END)))OR((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))) WHERE ((NOT (vt1.c1))) UNION SELECT DISTINCT * FROM v0 FULL OUTER JOIN vt1 ON ((((((v0.c0) BETWEEN (v0.c0) AND (vt1.c1)))OR(CASE v0.c0  WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c1 END)))OR((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))) WHERE (((vt1.c1) ISNULL));
SELECT DISTINCT * FROM v0 FULL OUTER JOIN vt1 ON ((((((v0.c0) BETWEEN (v0.c0) AND (vt1.c1)))OR(CASE v0.c0  WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c1 END)))OR((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))));
SELECT v0.c0, vt1.c0, vt1.c1, vt0.c0 FROM v0, vt0, vt1 GROUP BY v0.c0, vt1.c0, vt1.c1, vt0.c0;
SELECT ALL v0.c0, vt1.c0, vt1.c1, vt0.c0 FROM v0, vt0, vt1 WHERE (((((vt1.c1) BETWEEN (vt1.c1) AND (vt1.c1))) NOT NULL)) GROUP BY v0.c0, vt1.c0, vt1.c1, vt0.c0 UNION SELECT ALL v0.c0, vt1.c0, vt1.c1, vt0.c0 FROM v0, vt0, vt1 WHERE ((NOT (((((vt1.c1) BETWEEN (vt1.c1) AND (vt1.c1))) NOT NULL)))) GROUP BY v0.c0, vt1.c0, vt1.c1, vt0.c0 UNION SELECT v0.c0, vt1.c0, vt1.c1, vt0.c0 FROM v0, vt0, vt1 WHERE (((((((vt1.c1) BETWEEN (vt1.c1) AND (vt1.c1))) NOT NULL)) ISNULL)) GROUP BY v0.c0, vt1.c0, vt1.c1, vt0.c0;
SELECT v0.c0, vt1.c0, vt1.c1, vt0.c0 FROM v0, vt0, vt1 GROUP BY v0.c0, vt1.c0, vt1.c1, vt0.c0;
SELECT ALL vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1;
SELECT ALL vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1 HAVING TOTAL(COUNT(COUNT(*))) UNION ALL SELECT vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1 HAVING (NOT (TOTAL(COUNT(COUNT(*))))) UNION ALL SELECT ALL vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1 HAVING ((TOTAL(COUNT(COUNT(*)))) ISNULL);
SELECT vt1.c0 FROM v0, vt0, vt1;
SELECT vt1.c0 FROM v0, vt0, vt1 WHERE (((vt0.c1) NOT BETWEEN (v0.c0) AND (vt0.c1)) COLLATE NOCASE) UNION ALL SELECT vt1.c0 FROM v0, vt0, vt1 WHERE ((NOT (((vt0.c1) NOT BETWEEN (v0.c0) AND (vt0.c1)) COLLATE NOCASE))) UNION ALL SELECT ALL vt1.c0 FROM v0, vt0, vt1 WHERE (((((vt0.c1) NOT BETWEEN (v0.c0) AND (vt0.c1)) COLLATE NOCASE) ISNULL));
SELECT vt1.c0 FROM v0, vt0, vt1;
SELECT DISTINCT * FROM vt1 NOT INDEXED, v0, vt0;
SELECT DISTINCT * FROM vt1, v0, vt0 WHERE ((NOT ((('293882219')&(0.28172118227984555))))) UNION SELECT DISTINCT * FROM vt1, v0, vt0 WHERE ((NOT ((NOT ((('293882219')&(0.28172118227984555))))))) UNION SELECT DISTINCT * FROM vt1, v0, vt0 WHERE ((((NOT ((('293882219')&(0.28172118227984555))))) ISNULL));
SELECT DISTINCT * FROM vt1 NOT INDEXED, v0, vt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE ((((CASE 0.7582936875486409  WHEN vt0.c1 THEN vt0.c0 ELSE '' END))>=((((((((((vt0.c1)AND(vt0.c1)))AND(vt0.c1)))OR(vt0.c1)))OR(vt0.c1)))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT ((((CASE 0.7582936875486409  WHEN vt0.c1 THEN vt0.c0 ELSE '' END))>=((((((((((vt0.c1)AND(vt0.c1)))AND(vt0.c1)))OR(vt0.c1)))OR(vt0.c1)))))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((((((CASE 0.7582936875486409  WHEN vt0.c1 THEN vt0.c0 ELSE '' END))>=((((((((((vt0.c1)AND(vt0.c1)))AND(vt0.c1)))OR(vt0.c1)))OR(vt0.c1)))))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING SUM((((AVG(NULL))) NOT BETWEEN ((vt0.c0)) AND ((SUM(GROUP_CONCAT(MIN(COUNT(*)))))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (SUM((((AVG(NULL))) NOT BETWEEN ((vt0.c0)) AND ((SUM(GROUP_CONCAT(MIN(COUNT(*)))))))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((SUM((((AVG(NULL))) NOT BETWEEN ((vt0.c0)) AND ((SUM(GROUP_CONCAT(MIN(COUNT(*))))))))) ISNULL);
SELECT v0.c0, vt1.c1, vt0.c1, vt0.c0, vt1.c0 FROM v0, vt1, vt0;
SELECT v0.c0, vt1.c1, vt0.c1, vt0.c0, vt1.c0 FROM v0, vt1, vt0 WHERE (TRIM(v0.c0 COLLATE NOCASE, CAST(vt0.c0 AS REAL))) UNION ALL SELECT v0.c0, vt1.c1, vt0.c1, vt0.c0, vt1.c0 FROM v0, vt1, vt0 WHERE ((NOT (TRIM(v0.c0 COLLATE NOCASE, CAST(vt0.c0 AS REAL))))) UNION ALL SELECT ALL v0.c0, vt1.c1, vt0.c1, vt0.c0, vt1.c0 FROM v0, vt1, vt0 WHERE (((TRIM(v0.c0 COLLATE NOCASE, CAST(vt0.c0 AS REAL))) ISNULL));
SELECT v0.c0, vt1.c1, vt0.c1, vt0.c0, vt1.c0 FROM v0, vt1, vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE ((CAST(vt0.c0 AS BLOB) IN (((vt0.c0)AND(vt0.c0))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT ((CAST(vt0.c0 AS BLOB) IN (((vt0.c0)AND(vt0.c0))))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((((CAST(vt0.c0 AS BLOB) IN (((vt0.c0)AND(vt0.c0))))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL vt0.c0, vt1.c1, v0.c0, vt1.c0 FROM v0, vt1, vt0 GROUP BY vt0.c0, vt1.c1, v0.c0, vt1.c0;
SELECT ALL vt0.c0, vt1.c1, v0.c0, vt1.c0 FROM v0, vt1, vt0 WHERE (vt0.c1) GROUP BY vt0.c0, vt1.c1, v0.c0, vt1.c0 UNION SELECT ALL vt0.c0, vt1.c1, v0.c0, vt1.c0 FROM v0, vt1, vt0 WHERE ((NOT (vt0.c1))) GROUP BY vt0.c0, vt1.c1, v0.c0, vt1.c0 UNION SELECT vt0.c0, vt1.c1, v0.c0, vt1.c0 FROM v0, vt1, vt0 WHERE (((vt0.c1) ISNULL)) GROUP BY vt0.c0, vt1.c1, v0.c0, vt1.c0;
SELECT ALL vt0.c0, vt1.c1, v0.c0, vt1.c0 FROM v0, vt1, vt0 GROUP BY vt0.c0, vt1.c1, v0.c0, vt1.c0;
