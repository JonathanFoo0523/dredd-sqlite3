-- Time: 2024/06/09 03:02:38
-- Database: database33
-- Database version: 3.40.0
-- seed value: 2754193133
PRAGMA cache_size = 50000; -- 0ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA case_sensitive_like=ON; -- 1ms;
PRAGMA encoding = 'UTF-16'; -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree_i32(c0, c1, c2); -- 0ms;
CREATE VIRTUAL TABLE vt1 USING fts4(c0 UNINDEXED); -- 1ms;
CREATE VIRTUAL TABLE vt2 USING fts4(c0); -- 1ms;
ANALYZE sqlite_master; -- 0ms;
INSERT OR IGNORE INTO vt2 VALUES (0.3802499679418915), (''), (NULL); -- 0ms;
INSERT OR IGNORE INTO vt1(c0) VALUES ('N♲'); -- 0ms;
END; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR ROLLBACK vt1 SET c0='1389569650'; -- 0ms;
PRAGMA temp.mmap_size; -- 0ms;
PRAGMA incremental_vacuum(458687675); -- 0ms;
UPDATE vt1 SET (c0)=(x''); -- 1ms;
INSERT INTO vt1(vt1) VALUES('optimize'); -- 1ms;
INSERT OR IGNORE INTO vt2 VALUES (0x5f408f85); -- 0ms;
INSERT INTO vt1(vt1) VALUES('automerge=12'); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR IGNORE vt1 SET c0=NULL WHERE ((vt1.c0 COLLATE RTRIM) IS FALSE); -- 1ms;
COMMIT TRANSACTION; -- 1ms;
INSERT OR IGNORE INTO vt1(c0) VALUES (x''); -- 0ms;
INSERT OR IGNORE INTO rt0(c1, c0) VALUES (NULL, 4.58687675E8); -- 0ms;
INSERT OR REPLACE INTO vt1 VALUES ('1598066565'); -- 0ms;
COMMIT; -- 0ms;
END; -- 0ms;
UPDATE OR IGNORE vt2 SET c0=0xffffffffe7a64eeb; -- 2ms;
INSERT OR IGNORE INTO vt2(c0) VALUES (0xffffffffccd0f3b2); -- 1ms;
SELECT rtreecheck('rt0'); -- 0ms;
INSERT OR ROLLBACK INTO rt0(c1, c2) VALUES (x'', ''), (257474177, (('+(sWR-k9' COLLATE BINARY) BETWEEN (((NULL) ISNULL)) AND (CAST(0.28571241818292337 AS REAL)))), ('U4IA?', NULL); -- 1ms;
INSERT OR IGNORE INTO rt0 VALUES (0.28571241818292337, '458687675', 'U4IA?'); -- 0ms;
ROLLBACK TRANSACTION; -- 1ms;
BEGIN  TRANSACTION; -- 0ms;
UPDATE OR IGNORE vt1 SET c0='' WHERE (((((vt1.c0)<>(vt1.c0)), LIKELIHOOD(DISTINCT '\r^ﲫa&V<', 0.5614030687875669), ((vt1.c0)/(vt1.c0))))<>(((vt1.c0 IN (vt1.c0)), ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)), ((vt1.c0)OR(vt1.c0))))); -- 0ms;
INSERT OR IGNORE INTO rt0(c1, c0, c2) VALUES ('458687675', 0.3802499679418915, x'4df0'); -- 0ms;
INSERT INTO vt2(vt2) VALUES('optimize'); -- 0ms;
UPDATE OR IGNORE vt2 SET (c0)=(0xffffffff886fcee5) WHERE (CASE vt2.c0  WHEN vt2.c0 THEN vt2.c0 END IN ()); -- 0ms;
INSERT INTO vt1(vt1) VALUES('integrity-check'); -- 0ms;
INSERT OR IGNORE INTO vt1 VALUES (0.242810827209891), ('p['), (0.052814182080874184); -- 0ms;
INSERT OR REPLACE INTO vt2(c0) VALUES (-1077037350); -- 1ms;
INSERT INTO vt1(vt1, rank) VALUES('usermerge', 15); -- 0ms;
INSERT INTO vt2(vt2, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt2(vt2, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt2(vt2) VALUES('rebuild'); -- 0ms;
INSERT OR FAIL INTO vt1(c0) VALUES (NULL); -- 0ms;
INSERT INTO vt2(vt2, rank) VALUES('pgsz', '30624'); -- 0ms;
INSERT INTO vt2(vt2) VALUES('rebuild'); -- 0ms;
INSERT INTO vt2(vt2, rank) VALUES('usermerge', 5); -- 1ms;
INSERT INTO vt1(vt1) VALUES('rebuild'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT INTO vt2(vt2, rank) VALUES('pgsz', '29845'); -- 0ms;
INSERT INTO vt2(vt2, rank) VALUES('crisismerge', 104922212); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt2(vt2) VALUES('optimize'); -- 1ms;
INSERT INTO vt1(vt1, rank) VALUES('pgsz', '53370'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('usermerge', 9); -- 0ms;
INSERT INTO vt2(vt2, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt2(vt2) VALUES('automerge=7'); -- 1ms;
INSERT OR IGNORE INTO vt2(c0) VALUES ('0iAa1M*'), (NULL), (1.38956965E9); -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
PRAGMA main.reverse_unordered_selects = false; -- 1ms;
INSERT INTO vt2(vt2, rank) VALUES('crisismerge', 222133480); -- 0ms;
INSERT INTO vt1(vt1) VALUES('integrity-check'); -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
UPDATE rt0 SET (c0, c1)=('{y/_vP4(', x'c435') WHERE (((((((((((rt0.c0)OR(rt0.c0)))OR(rt0.c0)))OR(rt0.c0)))OR(rt0.c0))))<=((((((rt0.c0)AND(rt0.c2)))AND(rt0.c1))))); -- 0ms;
INSERT INTO vt1(vt1) VALUES('optimize'); -- 0ms;
COMMIT TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO vt2(c0) VALUES (0.052814182080874184); -- 1ms;
INSERT INTO vt1(vt1, rank) VALUES('automerge', 6); -- 0ms;
INSERT INTO vt1(vt1) VALUES('optimize'); -- 0ms;
INSERT OR IGNORE INTO rt0(c2, c1) VALUES ('{y/_vP4(', -3.12345429E8), ('257474177', '1164956410'), (NULL, 'rO'); -- 1ms;
PRAGMA temp.journal_size_limit = 0; -- 0ms;
UPDATE OR IGNORE vt2 SET c0='r.{'; -- 0ms;
INSERT INTO vt2(vt2, rank) VALUES('crisismerge', 919391285); -- 0ms;
INSERT INTO vt2(vt2, rank) VALUES('merge', -2005938459);\n; -- 0ms;
INSERT INTO vt2(vt2) VALUES('rebuild'); -- 1ms;
INSERT OR REPLACE INTO rt0 VALUES (472295121, x'', 0.27205840067198483); -- 0ms;
INSERT INTO vt1(vt1) VALUES('optimize'); -- 0ms;
PRAGMA main.wal_autocheckpoint = 4165170575150812747; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
PRAGMA reverse_unordered_selects = false; -- 1ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
PRAGMA stats; -- 0ms;
INSERT INTO vt2(vt2, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('merge', -351548771);\n; -- 0ms;
INSERT INTO vt1(vt1) VALUES('rebuild'); -- 0ms;
UPDATE vt2 SET c0=x'', c0='u''|r ''C', c0='1802568309' WHERE ((CAST(vt2.c0 AS REAL))GLOB(vt2.c0)); -- 1ms;
PRAGMA main.busy_timeout; -- 0ms;
PRAGMA main.mmap_size; -- 0ms;
INSERT OR IGNORE INTO vt2 VALUES (0.9603714247815659); -- 1ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
DELETE FROM rt0 WHERE (((0.0084791264766656, -1331382694, ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c1))))<=((LOWER(rt0.c1), rt0.c0, CAST(rt0.c1 AS INTEGER)))); -- 1ms;
UPDATE OR IGNORE rt0 SET (c2)=(''); -- 0ms;
INSERT OR ROLLBACK INTO vt1(c0) VALUES (x'1a97'); -- 0ms;
UPDATE OR FAIL vt2 SET (c0)=(0.5544182687933916); -- 0ms;
PRAGMA temp.busy_timeout = 0; -- 0ms;
SELECT rtreecheck('rt0'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR REPLACE vt2 SET c0=x'', c0=x'' WHERE (((vt2.c0)) BETWEEN (((vt2.c0 IN ()))) AND ((0.30551631586771943 COLLATE BINARY))); -- 0ms;
PRAGMA temp.mmap_size; -- 0ms;
INSERT OR REPLACE INTO vt1 VALUES (x''); -- 0ms;
PRAGMA defer_foreign_keys = false; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt2(vt2, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt1(vt1) VALUES('automerge=2'); -- 0ms;
PRAGMA locking_mode = NORMAL; -- 0ms;
ROLLBACK TRANSACTION; -- 1ms;
UPDATE OR FAIL vt1 SET (c0, c0)=(x'', 0.8293789916549216); -- 1ms;
PRAGMA checkpoint_fullfsync = true; -- 0ms;
INSERT OR REPLACE INTO vt2(c0) VALUES ('0.0084791264766656'); -- 0ms;
INSERT INTO vt2(vt2, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt2(vt2) VALUES('optimize'); -- 0ms;
UPDATE OR ROLLBACK vt2 SET (c0)=(x'af8b291d') WHERE ((((((vt2.c0) NOT BETWEEN (vt2.c0) AND (vt2.c0)))OR(((vt2.c0)GLOB(vt2.c0)))))AND(((vt2.c0)<<('458687675')))); -- 0ms;
END; -- 0ms;
INSERT OR IGNORE INTO vt2(c0) VALUES ('-1943089398'); -- 0ms;
COMMIT; -- 0ms;
INSERT INTO vt2(vt2) VALUES('automerge=5'); -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
PRAGMA cell_size_check = true; -- 0ms;
DROP TABLE vt2; -- 1ms;
PRAGMA temp.cache_spill = 3877593911323102497; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
END TRANSACTION; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('crisismerge', 931023673); -- 0ms;
INSERT INTO vt1(vt1) VALUES('integrity-check'); -- 1ms;
UPDATE OR IGNORE vt1 SET (c0)=(-1922448273); -- 0ms;
INSERT OR IGNORE INTO rt0(c0, c2) VALUES (NULL, -2005938459); -- 0ms;
UPDATE vt2 SET (c0)=(NULL) WHERE (NOT (vt2.c0)); -- 1ms;
INSERT OR IGNORE INTO vt1(c0) VALUES (x''); -- 1ms;
INSERT OR REPLACE INTO rt0(c1, c2, c0) VALUES (x'', -779893798, 0.15922498033294663); -- 0ms;
INSERT OR IGNORE INTO vt2 VALUES (x''), (NULL), (NULL), ('Lo'), (x''); -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR ABORT INTO vt1(c0) VALUES ('\r^ﲫa&v<'); -- 3ms;
UPDATE OR REPLACE vt1 SET c0=x'' WHERE ((('1891443891')) NOT BETWEEN ((vt1.c0)) AND (((- (0xffffffffd6311cc2))))); -- 1ms;
PRAGMA temp.application_id; -- 0ms;
COMMIT; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT ALL * FROM vt2, rt0;
SELECT ALL * FROM vt2, rt0 WHERE ((rt0.c1 IN ()) COLLATE RTRIM) UNION ALL SELECT * FROM vt2, rt0 WHERE ((NOT ((rt0.c1 IN ()) COLLATE RTRIM))) UNION ALL SELECT * FROM vt2, rt0 WHERE ((((rt0.c1 IN ()) COLLATE RTRIM) ISNULL));
SELECT ALL * FROM vt2, rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((rt0.c0)/(rt0.c0)) COLLATE NOCASE) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((rt0.c0)/(rt0.c0)) COLLATE NOCASE))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((rt0.c0)/(rt0.c0)) COLLATE NOCASE) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT vt2.c0, rt0.c1, rt0.c2, rt0.c0 FROM rt0, vt2 GROUP BY vt2.c0, rt0.c1, rt0.c2, rt0.c0;
SELECT ALL vt2.c0, rt0.c1, rt0.c2, rt0.c0 FROM rt0, vt2 WHERE (CASE ((((rt0.c1)OR(x'')))AND(rt0.c1))  WHEN CASE NULL  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END THEN x'' END) GROUP BY vt2.c0, rt0.c1, rt0.c2, rt0.c0 UNION SELECT vt2.c0, rt0.c1, rt0.c2, rt0.c0 FROM rt0, vt2 WHERE ((NOT (CASE ((((rt0.c1)OR(x'')))AND(rt0.c1))  WHEN CASE NULL  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END THEN x'' END))) GROUP BY vt2.c0, rt0.c1, rt0.c2, rt0.c0 UNION SELECT ALL vt2.c0, rt0.c1, rt0.c2, rt0.c0 FROM rt0, vt2 WHERE (((CASE ((((rt0.c1)OR(x'')))AND(rt0.c1))  WHEN CASE NULL  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END THEN x'' END) ISNULL)) GROUP BY vt2.c0, rt0.c1, rt0.c2, rt0.c0;
SELECT vt2.c0, rt0.c1, rt0.c2, rt0.c0 FROM rt0, vt2 GROUP BY vt2.c0, rt0.c1, rt0.c2, rt0.c0;
SELECT ALL rt0.c1, rt0.c2 FROM rt0, vt2 GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c1, rt0.c2 FROM rt0, vt2 GROUP BY rt0.c1, rt0.c2 HAVING GROUP_CONCAT(MIN(rt0.c2)) UNION ALL SELECT ALL rt0.c1, rt0.c2 FROM rt0 NOT INDEXED, vt2 GROUP BY rt0.c1, rt0.c2 HAVING (NOT (GROUP_CONCAT(MIN(rt0.c2)))) UNION ALL SELECT rt0.c1, rt0.c2 FROM rt0, vt2 GROUP BY rt0.c1, rt0.c2 HAVING ((GROUP_CONCAT(MIN(rt0.c2))) ISNULL);
SELECT ALL SUM(CASE WHEN CAST(rt0.c2 AS REAL) THEN JULIANDAY(vt1.c0, rt0.c2, rt0.c0) ELSE (((vt2.c0))=((vt2.c0))) END) FROM vt2, vt1, rt0;
SELECT ALL rt0.c0, rt0.c1, rt0.c2, vt1.c0 FROM rt0 LEFT OUTER JOIN vt1 ON (~ (((rt0.c1) IS TRUE)));
SELECT rt0.c0, rt0.c1, rt0.c2, vt1.c0 FROM rt0 LEFT OUTER JOIN vt1 ON (~ (((rt0.c1) IS TRUE))) WHERE ((~ (vt1.c0)) COLLATE RTRIM) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2, vt1.c0 FROM rt0 LEFT OUTER JOIN vt1 ON (~ (((rt0.c1) IS TRUE))) WHERE ((NOT ((~ (vt1.c0)) COLLATE RTRIM))) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2, vt1.c0 FROM rt0 LEFT OUTER JOIN vt1 ON (~ (((rt0.c1) IS TRUE))) WHERE ((((~ (vt1.c0)) COLLATE RTRIM) ISNULL));
SELECT ALL rt0.c0, rt0.c1, rt0.c2, vt1.c0 FROM rt0 LEFT OUTER JOIN vt1 ON (~ (((rt0.c1) IS TRUE)));
SELECT DISTINCT * FROM vt1, rt0;
SELECT DISTINCT * FROM vt1, rt0 WHERE ((((rt0.c1)) BETWEEN ((rt0.c0)) AND (((+ (rt0.c1)))))) UNION SELECT DISTINCT * FROM vt1, rt0 WHERE ((NOT ((((rt0.c1)) BETWEEN ((rt0.c0)) AND (((+ (rt0.c1)))))))) UNION SELECT DISTINCT * FROM vt1, rt0 WHERE ((((((rt0.c1)) BETWEEN ((rt0.c0)) AND (((+ (rt0.c1)))))) ISNULL));
SELECT DISTINCT * FROM vt1, rt0;
SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT vt2.c0 FROM vt2 WHERE ((((vt2.c0, vt2.c0, vt2.c0)) BETWEEN ((((vt2.c0) BETWEEN (vt2.c0) AND ('udgfe䂝IUj')), vt2.c0, ((vt2.c0) BETWEEN (vt2.c0) AND (vt2.c0)))) AND ((((vt2.c0) ISNULL), INSTR(vt2.c0, vt2.c0), ((vt2.c0)GLOB(vt2.c0)))))) GROUP BY vt2.c0 UNION SELECT vt2.c0 FROM vt2 WHERE ((NOT ((((vt2.c0, vt2.c0, vt2.c0)) BETWEEN ((((vt2.c0) BETWEEN (vt2.c0) AND ('udgfe䂝IUj')), vt2.c0, ((vt2.c0) BETWEEN (vt2.c0) AND (vt2.c0)))) AND ((((vt2.c0) ISNULL), INSTR(vt2.c0, vt2.c0), ((vt2.c0)GLOB(vt2.c0)))))))) GROUP BY vt2.c0 UNION SELECT vt2.c0 FROM vt2 WHERE ((((((vt2.c0, vt2.c0, vt2.c0)) BETWEEN ((((vt2.c0) BETWEEN (vt2.c0) AND ('udgfe䂝IUj')), vt2.c0, ((vt2.c0) BETWEEN (vt2.c0) AND (vt2.c0)))) AND ((((vt2.c0) ISNULL), INSTR(vt2.c0, vt2.c0), ((vt2.c0)GLOB(vt2.c0)))))) ISNULL)) GROUP BY vt2.c0;
SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT ALL rt0.c1, rt0.c0, vt2.c0, rt0.c2 FROM vt2, rt0 GROUP BY rt0.c1, rt0.c0, vt2.c0, rt0.c2;
SELECT rt0.c1, rt0.c0, vt2.c0, rt0.c2 FROM vt2, rt0 GROUP BY rt0.c1, rt0.c0, vt2.c0, rt0.c2 HAVING AVG(COUNT(*)) UNION ALL SELECT rt0.c1, rt0.c0, vt2.c0, rt0.c2 FROM vt2, rt0 GROUP BY rt0.c1, rt0.c0, vt2.c0, rt0.c2 HAVING (NOT (AVG(COUNT(*)))) UNION ALL SELECT ALL rt0.c1, rt0.c0, vt2.c0, rt0.c2 FROM vt2, rt0 GROUP BY rt0.c1, rt0.c0, vt2.c0, rt0.c2 HAVING ((AVG(COUNT(*))) ISNULL);
SELECT vt1.c0, rt0.c0, rt0.c2, rt0.c1 FROM rt0 RIGHT OUTER JOIN vt2 ON ((((((rt0.c0, rt0.c1, rt0.c1))>=((vt2.c0, rt0.c0, rt0.c1)))))<((NULL))) CROSS JOIN vt1 ON (((vt1.c0, vt2.c0, rt0.c1)) BETWEEN ((((rt0.c2) NOT BETWEEN (vt2.c0) AND (vt1.c0)), (- (rt0.c1)), CASE rt0.c2  WHEN vt1.c0 THEN rt0.c1 END)) AND (((NULL IN (vt1.c0)), ((rt0.c1) NOTNULL), ((vt2.c0)||(rt0.c2)))));
SELECT vt1.c0, rt0.c0, rt0.c2, rt0.c1 FROM rt0 RIGHT OUTER JOIN vt2 ON ((((((rt0.c0, rt0.c1, rt0.c1))>=((vt2.c0, rt0.c0, rt0.c1)))))<((NULL))) CROSS JOIN vt1 ON (((vt1.c0, vt2.c0, rt0.c1)) BETWEEN ((((rt0.c2) NOT BETWEEN (vt2.c0) AND (vt1.c0)), (- (rt0.c1)), CASE rt0.c2  WHEN vt1.c0 THEN rt0.c1 END)) AND (((NULL IN (vt1.c0)), ((rt0.c1) NOTNULL), ((vt2.c0)||(rt0.c2))))) WHERE (((((((vt1.c0)!=(vt2.c0)))AND(LIKELIHOOD(rt0.c2, 0.5613950807296726))))OR(NULL))) UNION ALL SELECT vt1.c0, rt0.c0, rt0.c2, rt0.c1 FROM rt0 RIGHT OUTER JOIN vt2 ON ((((((rt0.c0, rt0.c1, rt0.c1))>=((vt2.c0, rt0.c0, rt0.c1)))))<((NULL))) CROSS JOIN vt1 ON (((vt1.c0, vt2.c0, rt0.c1)) BETWEEN ((((rt0.c2) NOT BETWEEN (vt2.c0) AND (vt1.c0)), (- (rt0.c1)), CASE rt0.c2  WHEN vt1.c0 THEN rt0.c1 END)) AND (((NULL IN (vt1.c0)), ((rt0.c1) NOTNULL), ((vt2.c0)||(rt0.c2))))) WHERE ((NOT (((((((vt1.c0)<>(vt2.c0)))AND(LIKELIHOOD(rt0.c2, 0.5613950807296726))))OR(NULL))))) UNION ALL SELECT ALL vt1.c0, rt0.c0, rt0.c2, rt0.c1 FROM rt0 RIGHT OUTER JOIN vt2 ON ((((((rt0.c0, rt0.c1, rt0.c1))>=((vt2.c0, rt0.c0, rt0.c1)))))<((NULL))) CROSS JOIN vt1 ON (((vt1.c0, vt2.c0, rt0.c1)) BETWEEN ((((rt0.c2) NOT BETWEEN (vt2.c0) AND (vt1.c0)), (- (rt0.c1)), CASE rt0.c2  WHEN vt1.c0 THEN rt0.c1 END)) AND (((NULL IN (vt1.c0)), ((rt0.c1) NOTNULL), ((vt2.c0)||(rt0.c2))))) WHERE (((((((((vt1.c0)<>(vt2.c0)))AND(LIKELIHOOD(rt0.c2, 0.5613950807296726))))OR(NULL))) ISNULL));
SELECT vt1.c0, rt0.c0, rt0.c2, rt0.c1 FROM rt0 RIGHT OUTER JOIN vt2 ON ((((((rt0.c0, rt0.c1, rt0.c1))>=((vt2.c0, rt0.c0, rt0.c1)))))<((NULL))) CROSS JOIN vt1 ON (((vt1.c0, vt2.c0, rt0.c1)) BETWEEN ((((rt0.c2) NOT BETWEEN (vt2.c0) AND (vt1.c0)), (- (rt0.c1)), CASE rt0.c2  WHEN vt1.c0 THEN rt0.c1 END)) AND (((NULL IN (vt1.c0)), ((rt0.c1) NOTNULL), ((vt2.c0)||(rt0.c2)))));
SELECT DISTINCT * FROM vt1 LEFT OUTER JOIN vt2 ON CASE ((rt0.c0) BETWEEN (rt0.c0) AND (vt2.c0))  WHEN ((rt0.c1)OR(-1141197756)) THEN vt2.c0 END CROSS JOIN rt0 ON ((rt0.c1) IS TRUE) COLLATE NOCASE;
SELECT ALL vt2.c0, vt1.c0, rt0.c2 FROM rt0 NOT INDEXED, vt1, vt2 GROUP BY vt2.c0, vt1.c0, rt0.c2;
SELECT ALL vt2.c0, vt1.c0, rt0.c2 FROM rt0, vt1, vt2 WHERE ((((((rt0.c2, rt0.c2, rt0.c1))==((vt2.c0, vt1.c0, 'r.{')))) NOT NULL)) GROUP BY vt2.c0, vt1.c0, rt0.c2 UNION SELECT vt2.c0, vt1.c0, rt0.c2 FROM rt0, vt1, vt2 WHERE ((NOT ((((((rt0.c2, rt0.c2, rt0.c1))=((vt2.c0, vt1.c0, 'r.{')))) NOT NULL)))) GROUP BY vt2.c0, vt1.c0, rt0.c2 UNION SELECT vt2.c0, vt1.c0, rt0.c2 FROM rt0, vt1, vt2 WHERE ((((((((rt0.c2, rt0.c2, rt0.c1))=((vt2.c0, vt1.c0, 'r.{')))) NOT NULL)) ISNULL)) GROUP BY vt2.c0, vt1.c0, rt0.c2;
SELECT ALL vt2.c0, vt1.c0, rt0.c2 FROM rt0 NOT INDEXED, vt1, vt2 GROUP BY vt2.c0, vt1.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c1 FROM vt1, vt2, rt0 GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c1 FROM vt1, vt2, rt0 GROUP BY rt0.c0, rt0.c1 HAVING 0Xffffffffe7a64eeb UNION ALL SELECT rt0.c0, rt0.c1 FROM vt1, vt2, rt0 GROUP BY rt0.c0, rt0.c1 HAVING (NOT (0xffffffffe7a64eeb)) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM vt1, vt2, rt0 GROUP BY rt0.c0, rt0.c1 HAVING ((0xffffffffe7a64eeb) ISNULL);
SELECT ALL rt0.c0, rt0.c1 FROM vt1, vt2, rt0 GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c1 FROM vt1, vt2, rt0 GROUP BY rt0.c0, rt0.c1 HAVING 0Xffffffffe7a64eeb UNION ALL SELECT rt0.c0, rt0.c1 FROM vt1, vt2, rt0 GROUP BY rt0.c0, rt0.c1 HAVING (NOT (0xffffffffe7a64eeb)) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM vt1, vt2, rt0 GROUP BY rt0.c0, rt0.c1 HAVING ((0xffffffffe7a64eeb) ISNULL);
SELECT ALL rt0.c0, rt0.c1 FROM vt1, vt2, rt0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL MAX(((((rt0.c1) NOT NULL)) ISNULL)) FROM vt1, vt2, rt0;
SELECT ALL * FROM vt1;
SELECT * FROM vt1 WHERE (((vt1.c0) IS FALSE)) UNION ALL SELECT ALL * FROM vt1 WHERE ((NOT (((vt1.c0) IS FALSE)))) UNION ALL SELECT ALL * FROM vt1 WHERE (((((vt1.c0) IS FALSE)) ISNULL));
SELECT ALL * FROM vt1;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE ((IFNULL(vt1.c0, vt1.c0) IN (-7.01424446E8, UNLIKELY(DISTINCT vt1.c0)))) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT ((IFNULL(vt1.c0, vt1.c0) IN (-7.01424446E8, UNLIKELY(DISTINCT vt1.c0)))))) UNION SELECT DISTINCT * FROM vt1 WHERE ((((IFNULL(vt1.c0, vt1.c0) IN (-7.01424446E8, UNLIKELY(DISTINCT vt1.c0)))) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT rt0.c2, rt0.c1, vt1.c0, vt2.c0, rt0.c0 FROM rt0, vt2 LEFT OUTER JOIN vt1 ON (+ (json_array(rt0.c2, rt0.c0, rt0.c0, vt2.c0))) GROUP BY rt0.c2, rt0.c1, vt1.c0, vt2.c0, rt0.c0;
SELECT rt0.c0, vt1.c0 FROM vt1, rt0 GROUP BY rt0.c0, vt1.c0;
SELECT rt0.c0, vt1.c0 FROM vt1, rt0 GROUP BY rt0.c0, vt1.c0 HAVING vt1.c0 UNION ALL SELECT rt0.c0, vt1.c0 FROM vt1, rt0 GROUP BY rt0.c0, vt1.c0 HAVING (NOT (vt1.c0)) UNION ALL SELECT ALL rt0.c0, vt1.c0 FROM vt1, rt0 GROUP BY rt0.c0, vt1.c0 HAVING ((vt1.c0) ISNULL);
SELECT rt0.c0, vt1.c0 FROM vt1, rt0 GROUP BY rt0.c0, vt1.c0;
SELECT rt0.c0, vt1.c0 FROM vt1, rt0 GROUP BY rt0.c0, vt1.c0 HAVING vt1.c0 UNION ALL SELECT rt0.c0, vt1.c0 FROM vt1, rt0 GROUP BY rt0.c0, vt1.c0 HAVING (NOT (vt1.c0)) UNION ALL SELECT ALL rt0.c0, vt1.c0 FROM vt1, rt0 GROUP BY rt0.c0, vt1.c0 HAVING ((vt1.c0) ISNULL);
SELECT rt0.c0, vt1.c0 FROM vt1, rt0 GROUP BY rt0.c0, vt1.c0;
SELECT ALL * FROM vt2, rt0;
SELECT * FROM vt2, rt0 WHERE (((((rt0.c0 COLLATE RTRIM)AND(TRIM(rt0.c0))))OR(CASE rt0.c1  WHEN rt0.c2 THEN vt2.c0 END))) UNION ALL SELECT ALL * FROM vt2, rt0 WHERE ((NOT (((((rt0.c0 COLLATE RTRIM)AND(TRIM(rt0.c0))))OR(CASE rt0.c1  WHEN rt0.c2 THEN vt2.c0 END))))) UNION ALL SELECT ALL * FROM vt2, rt0 WHERE (((((((rt0.c0 COLLATE RTRIM)AND(TRIM(rt0.c0))))OR(CASE rt0.c1  WHEN rt0.c2 THEN vt2.c0 END))) ISNULL));
SELECT ALL * FROM vt2, rt0;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE ((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))) COLLATE BINARY) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT ((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))) COLLATE BINARY))) UNION SELECT DISTINCT * FROM vt1 WHERE ((((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))) COLLATE BINARY) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE (((((vt1.c0)>(-7.79893798E8)))==(CAST(vt1.c0 AS TEXT)))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (((((vt1.c0)>(-7.79893798E8)))==(CAST(vt1.c0 AS TEXT)))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE (((((((vt1.c0)>(-7.79893798E8)))=(CAST(vt1.c0 AS TEXT)))) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt2, vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt2, vt1 GROUP BY vt1.c0 HAVING COUNT(MAX(vt2.c0)) UNION ALL SELECT ALL vt1.c0 FROM vt2, vt1 GROUP BY vt1.c0 HAVING (NOT (COUNT(MAX(vt2.c0)))) UNION ALL SELECT vt1.c0 FROM vt2, vt1 GROUP BY vt1.c0 HAVING ((COUNT(MAX(vt2.c0))) ISNULL);
SELECT rt0.c2, rt0.c1, vt1.c0, vt2.c0, rt0.c0 FROM rt0, vt2 INNER JOIN vt1 ON ((CAST('Aᴔg?+|Qsa' AS TEXT)) BETWEEN ((+ (vt2.c0))) AND (((rt0.c1)*(vt2.c0))));
SELECT ALL rt0.c2, rt0.c1, vt1.c0, vt2.c0, rt0.c0 FROM rt0, vt2 INNER JOIN vt1 ON ((CAST('Aᴔg?+|Qsa' AS TEXT)) BETWEEN ((+ (vt2.c0))) AND (((rt0.c1)*(vt2.c0)))) WHERE (STRFTIME(TYPEOF(DISTINCT NULL), IFNULL(vt1.c0, vt1.c0), ((vt2.c0)/(rt0.c2)))) UNION ALL SELECT ALL rt0.c2, rt0.c1, vt1.c0, vt2.c0, rt0.c0 FROM rt0, vt2 INNER JOIN vt1 ON ((CAST('Aᴔg?+|Qsa' AS TEXT)) BETWEEN ((+ (vt2.c0))) AND (((rt0.c1)*(vt2.c0)))) WHERE ((NOT (STRFTIME(TYPEOF(DISTINCT NULL), IFNULL(vt1.c0, vt1.c0), ((vt2.c0)/(rt0.c2)))))) UNION ALL SELECT ALL rt0.c2, rt0.c1, vt1.c0, vt2.c0, rt0.c0 FROM rt0, vt2 INNER JOIN vt1 ON ((CAST('Aᴔg?+|Qsa' AS TEXT)) BETWEEN ((+ (vt2.c0))) AND (((rt0.c1)*(vt2.c0)))) WHERE (((STRFTIME(TYPEOF(DISTINCT NULL), IFNULL(vt1.c0, vt1.c0), ((vt2.c0)/(rt0.c2)))) ISNULL));
SELECT rt0.c2, rt0.c1, vt1.c0, vt2.c0, rt0.c0 FROM rt0, vt2 INNER JOIN vt1 ON ((CAST('Aᴔg?+|Qsa' AS TEXT)) BETWEEN ((+ (vt2.c0))) AND (((rt0.c1)*(vt2.c0))));
SELECT DISTINCT vt2.c0 FROM vt1, vt2;
SELECT DISTINCT vt2.c0 FROM vt1, vt2 WHERE (((0x1781f366) NOT BETWEEN (0.5886509954471676) AND ((((x'', vt2.c0, vt2.c0))>=((1.177174173E9, '47028530', vt1.c0)))))) UNION SELECT DISTINCT vt2.c0 FROM vt1, vt2 WHERE ((NOT (((0X1781f366) NOT BETWEEN (0.5886509954471676) AND ((((x'', vt2.c0, vt2.c0))>=((1.177174173E9, '47028530', vt1.c0)))))))) UNION SELECT DISTINCT vt2.c0 FROM vt1, vt2 WHERE (((((0X1781f366) NOT BETWEEN (0.5886509954471676) AND ((((x'', vt2.c0, vt2.c0))>=((1.177174173E9, '47028530', vt1.c0)))))) ISNULL));
SELECT DISTINCT vt2.c0 FROM vt1, vt2;
SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT ALL vt2.c0 FROM vt2 WHERE (((CASE WHEN vt2.c0 THEN vt2.c0 END)>=(((((vt2.c0)OR(vt2.c0)))OR(vt2.c0))))) GROUP BY vt2.c0 UNION SELECT vt2.c0 FROM vt2 WHERE ((NOT (((CASE WHEN vt2.c0 THEN vt2.c0 END)>=(((((vt2.c0)OR(vt2.c0)))OR(vt2.c0))))))) GROUP BY vt2.c0 UNION SELECT ALL vt2.c0 FROM vt2 WHERE (((((CASE WHEN vt2.c0 THEN vt2.c0 END)>=(((((vt2.c0)OR(vt2.c0)))OR(vt2.c0))))) ISNULL)) GROUP BY vt2.c0;
SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((((((((MAX(COUNT(vt1.c0)))AND((vt1.c0 IN ()))))AND(GROUP_CONCAT(MAX(SUM(GROUP_CONCAT(MIN(MAX(MAX(TOTAL(AVG(MAX(vt1.c0)))))))))))))AND(TOTAL(GROUP_CONCAT(GROUP_CONCAT(0.9603714247815659))))))OR(COUNT(*))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (((((((((MAX(COUNT(vt1.c0)))AND((vt1.c0 IN ()))))AND(GROUP_CONCAT(MAX(SUM(GROUP_CONCAT(MIN(MAX(MAX(TOTAL(AVG(MAX(vt1.c0)))))))))))))AND(TOTAL(GROUP_CONCAT(GROUP_CONCAT(0.9603714247815659))))))OR(COUNT(*))))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((((((((((MAX(COUNT(vt1.c0)))AND((vt1.c0 IN ()))))AND(GROUP_CONCAT(MAX(SUM(GROUP_CONCAT(MIN(MAX(MAX(TOTAL(AVG(MAX(vt1.c0)))))))))))))AND(TOTAL(GROUP_CONCAT(GROUP_CONCAT(0.9603714247815659))))))OR(COUNT(*)))) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((((((((MAX(COUNT(vt1.c0)))AND((vt1.c0 IN ()))))AND(GROUP_CONCAT(MAX(SUM(GROUP_CONCAT(MIN(MAX(MAX(TOTAL(AVG(MAX(vt1.c0)))))))))))))AND(TOTAL(GROUP_CONCAT(GROUP_CONCAT(0.9603714247815659))))))OR(COUNT(*))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (((((((((MAX(COUNT(vt1.c0)))AND((vt1.c0 IN ()))))AND(GROUP_CONCAT(MAX(SUM(GROUP_CONCAT(MIN(MAX(MAX(TOTAL(AVG(MAX(vt1.c0)))))))))))))AND(TOTAL(GROUP_CONCAT(GROUP_CONCAT(0.9603714247815659))))))OR(COUNT(*))))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((((((((((MAX(COUNT(vt1.c0)))AND((vt1.c0 IN ()))))AND(GROUP_CONCAT(MAX(SUM(GROUP_CONCAT(MIN(MAX(MAX(TOTAL(AVG(MAX(vt1.c0)))))))))))))AND(TOTAL(GROUP_CONCAT(GROUP_CONCAT(0.9603714247815659))))))OR(COUNT(*)))) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL * FROM rt0;
SELECT * FROM rt0 WHERE (CASE WHEN x'' THEN ((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c0)) ELSE ((((rt0.c1)AND(rt0.c1)))AND(rt0.c1)) END) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (CASE WHEN x'' THEN ((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c0)) ELSE ((((rt0.c1)AND(rt0.c1)))AND(rt0.c1)) END))) UNION ALL SELECT ALL * FROM rt0 WHERE (((CASE WHEN x'' THEN ((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c0)) ELSE ((((rt0.c1)AND(rt0.c1)))AND(rt0.c1)) END) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT * FROM vt1, rt0;
SELECT DISTINCT * FROM vt1, rt0 WHERE (0x1204aaf6 COLLATE RTRIM) UNION SELECT DISTINCT * FROM vt1, rt0 WHERE ((NOT (0X1204aaf6 COLLATE RTRIM))) UNION SELECT DISTINCT * FROM vt1, rt0 WHERE (((0X1204aaf6 COLLATE RTRIM) ISNULL));
SELECT DISTINCT * FROM vt1, rt0;
SELECT vt2.c0, rt0.c0, rt0.c1, rt0.c2 FROM vt2, rt0, vt1 GROUP BY vt2.c0, rt0.c0, rt0.c1, rt0.c2;
SELECT ALL vt2.c0, rt0.c0, rt0.c1, rt0.c2 FROM vt2, rt0, vt1 WHERE ((((((rt0.c1 IN (rt0.c1)))AND(((rt0.c1) IS TRUE))))OR(CAST(vt1.c0 AS INTEGER)))) GROUP BY vt2.c0, rt0.c0, rt0.c1, rt0.c2 UNION SELECT ALL vt2.c0, rt0.c0, rt0.c1, rt0.c2 FROM vt2, rt0, vt1 WHERE ((NOT ((((((rt0.c1 IN (rt0.c1)))AND(((rt0.c1) IS TRUE))))OR(CAST(vt1.c0 AS INTEGER)))))) GROUP BY vt2.c0, rt0.c0, rt0.c1, rt0.c2 UNION SELECT vt2.c0, rt0.c0, rt0.c1, rt0.c2 FROM vt2, rt0, vt1 WHERE ((((((((rt0.c1 IN (rt0.c1)))AND(((rt0.c1) IS TRUE))))OR(CAST(vt1.c0 AS INTEGER)))) ISNULL)) GROUP BY vt2.c0, rt0.c0, rt0.c1, rt0.c2;
SELECT vt2.c0, rt0.c0, rt0.c1, rt0.c2 FROM vt2, rt0, vt1 GROUP BY vt2.c0, rt0.c0, rt0.c1, rt0.c2;
SELECT vt1.c0, vt2.c0 FROM vt1, vt2 GROUP BY vt1.c0, vt2.c0;
SELECT ALL vt1.c0, vt2.c0 FROM vt1, vt2 GROUP BY vt1.c0, vt2.c0 HAVING STRFTIME(COUNT(*), CAST(COUNT(*) AS INTEGER), NULL) UNION ALL SELECT ALL vt1.c0, vt2.c0 FROM vt1, vt2 GROUP BY vt1.c0, vt2.c0 HAVING (NOT (STRFTIME(COUNT(*), CAST(COUNT(*) AS INTEGER), NULL))) UNION ALL SELECT vt1.c0, vt2.c0 FROM vt1, vt2 GROUP BY vt1.c0, vt2.c0 HAVING ((STRFTIME(COUNT(*), CAST(COUNT(*) AS INTEGER), NULL)) ISNULL);
SELECT vt1.c0, vt2.c0 FROM vt1, vt2 GROUP BY vt1.c0, vt2.c0;
SELECT ALL vt1.c0, vt2.c0 FROM vt1, vt2 GROUP BY vt1.c0, vt2.c0 HAVING STRFTIME(COUNT(*), CAST(COUNT(*) AS INTEGER), NULL) UNION ALL SELECT ALL vt1.c0, vt2.c0 FROM vt1, vt2 GROUP BY vt1.c0, vt2.c0 HAVING (NOT (STRFTIME(COUNT(*), CAST(COUNT(*) AS INTEGER), NULL))) UNION ALL SELECT vt1.c0, vt2.c0 FROM vt1, vt2 GROUP BY vt1.c0, vt2.c0 HAVING ((STRFTIME(COUNT(*), CAST(COUNT(*) AS INTEGER), NULL)) ISNULL);
SELECT vt1.c0, vt2.c0 FROM vt1, vt2 GROUP BY vt1.c0, vt2.c0;
SELECT rt0.c0, vt2.c0, rt0.c1 FROM vt2 LEFT OUTER JOIN rt0 ON NULLIF(NULL, ((vt2.c0) NOTNULL));
SELECT ALL rt0.c0, vt2.c0, rt0.c1 FROM vt2 LEFT OUTER JOIN rt0 ON NULLIF(NULL, ((vt2.c0) NOTNULL)) WHERE (CASE (+ (rt0.c2))  WHEN (~ (102791761)) THEN vt2.c0 END) UNION ALL SELECT rt0.c0, vt2.c0, rt0.c1 FROM vt2 LEFT OUTER JOIN rt0 ON NULLIF(NULL, ((vt2.c0) NOTNULL)) WHERE ((NOT (CASE (+ (rt0.c2))  WHEN (~ (102791761)) THEN vt2.c0 END))) UNION ALL SELECT rt0.c0, vt2.c0, rt0.c1 FROM vt2 LEFT OUTER JOIN rt0 ON NULLIF(NULL, ((vt2.c0) NOTNULL)) WHERE (((CASE (+ (rt0.c2))  WHEN (~ (102791761)) THEN vt2.c0 END) ISNULL));
SELECT rt0.c0, vt2.c0, rt0.c1 FROM vt2 LEFT OUTER JOIN rt0 ON NULLIF(NULL, ((vt2.c0) NOTNULL));
SELECT DISTINCT * FROM vt2;
SELECT DISTINCT * FROM vt2 WHERE (((((((vt2.c0)>=(vt2.c0)))AND(((vt2.c0) IS FALSE))))AND(((0.4742313301927116)||(vt2.c0))))) UNION SELECT DISTINCT * FROM vt2 WHERE ((NOT (((((((vt2.c0)>=(vt2.c0)))AND(((vt2.c0) IS FALSE))))AND(((0.4742313301927116)||(vt2.c0))))))) UNION SELECT DISTINCT * FROM vt2 WHERE (((((((((vt2.c0)>=(vt2.c0)))AND(((vt2.c0) IS FALSE))))AND(((0.4742313301927116)||(vt2.c0))))) ISNULL));
SELECT DISTINCT * FROM vt2;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE (((((0.08578747834682243) IS FALSE))AND(((((vt1.c0)OR(vt1.c0)))AND(vt1.c0))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (((((0.08578747834682243) IS FALSE))AND(((((vt1.c0)OR(vt1.c0)))AND(vt1.c0))))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE (((((((0.08578747834682243) IS FALSE))AND(((((vt1.c0)OR(vt1.c0)))AND(vt1.c0))))) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0, vt2.c0 FROM vt2 FULL OUTER JOIN vt1 ON (((~ (vt2.c0))) NOT BETWEEN (((vt2.c0) NOT BETWEEN (vt1.c0) AND (vt2.c0))) AND (x'' COLLATE NOCASE)) GROUP BY vt1.c0, vt2.c0;
SELECT vt1.c0, vt2.c0 FROM vt2 FULL OUTER JOIN vt1 ON (((~ (vt2.c0))) NOT BETWEEN (((vt2.c0) NOT BETWEEN (vt1.c0) AND (vt2.c0))) AND (x'' COLLATE NOCASE)) GROUP BY vt1.c0, vt2.c0 HAVING ((MIN(TOTAL(GROUP_CONCAT(SUM(AVG(vt1.c0)))))) IS TRUE) UNION ALL SELECT vt1.c0, vt2.c0 FROM vt2 FULL OUTER JOIN vt1 ON (((~ (vt2.c0))) NOT BETWEEN (((vt2.c0) NOT BETWEEN (vt1.c0) AND (vt2.c0))) AND (x'' COLLATE NOCASE)) GROUP BY vt1.c0, vt2.c0 HAVING (NOT (((MIN(TOTAL(GROUP_CONCAT(SUM(AVG(vt1.c0)))))) IS TRUE))) UNION ALL SELECT ALL vt1.c0, vt2.c0 FROM vt2 FULL OUTER JOIN vt1 ON (((~ (vt2.c0))) NOT BETWEEN (((vt2.c0) NOT BETWEEN (vt1.c0) AND (vt2.c0))) AND (x'' COLLATE NOCASE)) GROUP BY vt1.c0, vt2.c0 HAVING ((((MIN(TOTAL(GROUP_CONCAT(SUM(AVG(vt1.c0)))))) IS TRUE)) ISNULL);
SELECT ALL rt0.c0, rt0.c2, vt2.c0 FROM vt2, rt0, vt1;
SELECT ALL rt0.c0, rt0.c2, vt2.c0 FROM vt2, rt0, vt1 WHERE ((((((((((rt0.c0 IN ()))AND((rt0.c2 IN (vt1.c0)))))AND(CASE WHEN rt0.c0 THEN rt0.c0 ELSE vt1.c0 END)))OR((((vt2.c0, rt0.c0, rt0.c2)) BETWEEN ((vt1.c0, rt0.c0, vt1.c0)) AND ((vt1.c0, rt0.c1, vt1.c0))))))OR(((0.7862533203278057) NOT BETWEEN (vt2.c0) AND (rt0.c2))))) UNION ALL SELECT ALL rt0.c0, rt0.c2, vt2.c0 FROM vt2, rt0, vt1 WHERE ((NOT ((((((((((rt0.c0 IN ()))AND((rt0.c2 IN (vt1.c0)))))AND(CASE WHEN rt0.c0 THEN rt0.c0 ELSE vt1.c0 END)))OR((((vt2.c0, rt0.c0, rt0.c2)) BETWEEN ((vt1.c0, rt0.c0, vt1.c0)) AND ((vt1.c0, rt0.c1, vt1.c0))))))OR(((0.7862533203278057) NOT BETWEEN (vt2.c0) AND (rt0.c2))))))) UNION ALL SELECT ALL rt0.c0, rt0.c2, vt2.c0 FROM vt2, rt0, vt1 WHERE ((((((((((((rt0.c0 IN ()))AND((rt0.c2 IN (vt1.c0)))))AND(CASE WHEN rt0.c0 THEN rt0.c0 ELSE vt1.c0 END)))OR((((vt2.c0, rt0.c0, rt0.c2)) BETWEEN ((vt1.c0, rt0.c0, vt1.c0)) AND ((vt1.c0, rt0.c1, vt1.c0))))))OR(((0.7862533203278057) NOT BETWEEN (vt2.c0) AND (rt0.c2))))) ISNULL));
SELECT ALL rt0.c0, rt0.c2, vt2.c0 FROM vt2, rt0, vt1;
SELECT DISTINCT vt2.c0, vt1.c0 FROM vt1, vt2;
SELECT DISTINCT vt2.c0, vt1.c0 FROM vt1, vt2 WHERE ((NOT (rtreenode(0.483047916125964, vt2.c0)))) UNION SELECT DISTINCT vt2.c0, vt1.c0 FROM vt1, vt2 WHERE ((NOT ((NOT (rtreenode(0.483047916125964, vt2.c0)))))) UNION SELECT DISTINCT vt2.c0, vt1.c0 FROM vt1, vt2 WHERE ((((NOT (rtreenode(0.483047916125964, vt2.c0)))) ISNULL));
SELECT DISTINCT vt2.c0, vt1.c0 FROM vt1, vt2;
SELECT rt0.c0, rt0.c2 FROM rt0, vt2 GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM rt0, vt2 WHERE (((((((rt0.c1)AND(rt0.c2)))OR(rt0.c1))) IS FALSE)) GROUP BY rt0.c0, rt0.c2 UNION SELECT rt0.c0, rt0.c2 FROM rt0, vt2 WHERE ((NOT (((((((rt0.c1)AND(rt0.c2)))OR(rt0.c1))) IS FALSE)))) GROUP BY rt0.c0, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c2 FROM rt0, vt2 WHERE (((((((((rt0.c1)AND(rt0.c2)))OR(rt0.c1))) IS FALSE)) ISNULL)) GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c2 FROM rt0, vt2 GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 RIGHT OUTER JOIN vt1 ON '458687675' GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 RIGHT OUTER JOIN vt1 ON '458687675' GROUP BY rt0.c0, rt0.c2 HAVING ((((AVG(MAX(rt0.c0)))+(rt0.c0))) NOT BETWEEN (x'') AND (COUNT(rt0.c0))) UNION ALL SELECT rt0.c0, rt0.c2 FROM rt0 RIGHT OUTER JOIN vt1 ON '458687675' GROUP BY rt0.c0, rt0.c2 HAVING (NOT (((((AVG(MAX(rt0.c0)))+(rt0.c0))) NOT BETWEEN (x'') AND (COUNT(rt0.c0))))) UNION ALL SELECT rt0.c0, rt0.c2 FROM rt0 RIGHT OUTER JOIN vt1 ON '458687675' GROUP BY rt0.c0, rt0.c2 HAVING ((((((AVG(MAX(rt0.c0)))+(rt0.c0))) NOT BETWEEN (x'') AND (COUNT(rt0.c0)))) ISNULL);
SELECT * FROM vt1, rt0 RIGHT OUTER JOIN vt2 ON CHANGES();
SELECT * FROM vt1, rt0 RIGHT OUTER JOIN vt2 ON CHANGES() WHERE (CASE rt0.c0  WHEN rt0.c1 THEN ' dA(' END COLLATE NOCASE) UNION ALL SELECT ALL * FROM vt1, rt0 RIGHT OUTER JOIN vt2 ON CHANGES() WHERE ((NOT (CASE rt0.c0  WHEN rt0.c1 THEN ' dA(' END COLLATE NOCASE))) UNION ALL SELECT * FROM vt1, rt0 RIGHT OUTER JOIN vt2 ON CHANGES() WHERE (((CASE rt0.c0  WHEN rt0.c1 THEN ' dA(' END COLLATE NOCASE) ISNULL));
SELECT * FROM vt1, rt0 RIGHT OUTER JOIN vt2 ON CHANGES();
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((rt0.c1 COLLATE NOCASE) BETWEEN (((((rt0.c0)OR(rt0.c2)))OR(rt0.c0))) AND (((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c0))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((rt0.c1 COLLATE NOCASE) BETWEEN (((((rt0.c0)OR(rt0.c2)))OR(rt0.c0))) AND (((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c0))))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((rt0.c1 COLLATE NOCASE) BETWEEN (((((rt0.c0)OR(rt0.c2)))OR(rt0.c0))) AND (((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c0))))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT vt2.c0, rt0.c2, rt0.c1, vt1.c0 FROM vt1, vt2 NATURAL JOIN rt0 GROUP BY vt2.c0, rt0.c2, rt0.c1, vt1.c0;
SELECT ALL vt2.c0, rt0.c2, rt0.c1, vt1.c0 FROM vt1, vt2 NATURAL JOIN rt0 WHERE ((((((vt2.c0 IN (vt2.c0, vt2.c0)))OR(((rt0.c0) NOT BETWEEN (vt1.c0) AND (rt0.c1)))))AND(rt0.c1 COLLATE RTRIM))) GROUP BY vt2.c0, rt0.c2, rt0.c1, vt1.c0 UNION SELECT vt2.c0, rt0.c2, rt0.c1, vt1.c0 FROM vt1, vt2 NATURAL JOIN rt0 WHERE ((NOT ((((((vt2.c0 IN (vt2.c0, vt2.c0)))OR(((rt0.c0) NOT BETWEEN (vt1.c0) AND (rt0.c1)))))AND(rt0.c1 COLLATE RTRIM))))) GROUP BY vt2.c0, rt0.c2, rt0.c1, vt1.c0 UNION SELECT vt2.c0, rt0.c2, rt0.c1, vt1.c0 FROM vt1, vt2 NATURAL JOIN rt0 WHERE ((((((((vt2.c0 IN (vt2.c0, vt2.c0)))OR(((rt0.c0) NOT BETWEEN (vt1.c0) AND (rt0.c1)))))AND(rt0.c1 COLLATE RTRIM))) ISNULL)) GROUP BY vt2.c0, rt0.c2, rt0.c1, vt1.c0;
SELECT vt2.c0, rt0.c2, rt0.c1, vt1.c0 FROM vt1, vt2 NATURAL JOIN rt0 GROUP BY vt2.c0, rt0.c2, rt0.c1, vt1.c0;
SELECT ALL rt0.c1, vt2.c0, vt1.c0 FROM vt2, rt0, vt1 GROUP BY rt0.c1, vt2.c0, vt1.c0;
SELECT rt0.c1, vt2.c0, vt1.c0 FROM vt2, rt0, vt1 GROUP BY rt0.c1, vt2.c0, vt1.c0 HAVING AVG(CASE WHEN rt0.c0 THEN MAX(vt2.c0) END) UNION ALL SELECT ALL rt0.c1, vt2.c0, vt1.c0 FROM vt2, rt0, vt1 GROUP BY rt0.c1, vt2.c0, vt1.c0 HAVING (NOT (AVG(CASE WHEN rt0.c0 THEN MAX(vt2.c0) END))) UNION ALL SELECT rt0.c1, vt2.c0, vt1.c0 FROM vt2, rt0, vt1 GROUP BY rt0.c1, vt2.c0, vt1.c0 HAVING ((AVG(CASE WHEN rt0.c0 THEN MAX(vt2.c0) END)) ISNULL);
SELECT * FROM vt2 FULL OUTER JOIN rt0 ON CASE (rt0.c0 IN (rt0.c2))  WHEN ((vt1.c0) NOT BETWEEN (vt2.c0) AND (vt2.c0)) THEN CASE vt1.c0  WHEN rt0.c2 THEN rt0.c1 WHEN vt1.c0 THEN NULL WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c0 END ELSE (+ (rt0.c1)) END INNER JOIN vt1 ON (((vt1.c0) IS FALSE) IN ());
SELECT ALL * FROM vt2 FULL OUTER JOIN rt0 ON CASE (rt0.c0 IN (rt0.c2))  WHEN ((vt1.c0) NOT BETWEEN (vt2.c0) AND (vt2.c0)) THEN CASE vt1.c0  WHEN rt0.c2 THEN rt0.c1 WHEN vt1.c0 THEN NULL WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c0 END ELSE (+ (rt0.c1)) END INNER JOIN vt1 ON (((vt1.c0) IS FALSE) IN ()) WHERE (((((rt0.c0 COLLATE RTRIM)OR(((rt0.c0)!=(vt2.c0)))))OR((vt1.c0 IN ())))) UNION ALL SELECT * FROM vt2 FULL OUTER JOIN rt0 ON CASE (rt0.c0 IN (rt0.c2))  WHEN ((vt1.c0) NOT BETWEEN (vt2.c0) AND (vt2.c0)) THEN CASE vt1.c0  WHEN rt0.c2 THEN rt0.c1 WHEN vt1.c0 THEN NULL WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c0 END ELSE (+ (rt0.c1)) END INNER JOIN vt1 ON (((vt1.c0) IS FALSE) IN ()) WHERE ((NOT (((((rt0.c0 COLLATE RTRIM)OR(((rt0.c0)!=(vt2.c0)))))OR((vt1.c0 IN ())))))) UNION ALL SELECT ALL * FROM vt2 FULL OUTER JOIN rt0 ON CASE (rt0.c0 IN (rt0.c2))  WHEN ((vt1.c0) NOT BETWEEN (vt2.c0) AND (vt2.c0)) THEN CASE vt1.c0  WHEN rt0.c2 THEN rt0.c1 WHEN vt1.c0 THEN NULL WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c0 END ELSE (+ (rt0.c1)) END INNER JOIN vt1 ON (((vt1.c0) IS FALSE) IN ()) WHERE (((((((rt0.c0 COLLATE RTRIM)OR(((rt0.c0)!=(vt2.c0)))))OR((vt1.c0 IN ())))) ISNULL));
SELECT * FROM vt2 FULL OUTER JOIN rt0 ON CASE (rt0.c0 IN (rt0.c2))  WHEN ((vt1.c0) NOT BETWEEN (vt2.c0) AND (vt2.c0)) THEN CASE vt1.c0  WHEN rt0.c2 THEN rt0.c1 WHEN vt1.c0 THEN NULL WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c0 END ELSE (+ (rt0.c1)) END INNER JOIN vt1 ON (((vt1.c0) IS FALSE) IN ());
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((((((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))AND(0.5692570313760138 COLLATE BINARY)))AND(((((vt1.c0)OR('-411309906')))OR(vt1.c0))))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT ((((((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))AND(0.5692570313760138 COLLATE BINARY)))AND(((((vt1.c0)OR('-411309906')))OR(vt1.c0))))))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((((((((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))AND(0.5692570313760138 COLLATE BINARY)))AND(((((vt1.c0)OR('-411309906')))OR(vt1.c0))))) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT rt0.c1, rt0.c0 FROM rt0 FULL OUTER JOIN vt2 ON (+ (vt2.c0)) COLLATE BINARY GROUP BY rt0.c1, rt0.c0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 FULL OUTER JOIN vt2 ON (+ (vt2.c0)) COLLATE BINARY WHERE (IFNULL(NULL, ((vt2.c0) IS TRUE))) GROUP BY rt0.c1, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c0 FROM rt0 FULL OUTER JOIN vt2 ON (+ (vt2.c0)) COLLATE BINARY WHERE ((NOT (IFNULL(NULL, ((vt2.c0) IS TRUE))))) GROUP BY rt0.c1, rt0.c0 UNION SELECT rt0.c1, rt0.c0 FROM rt0 FULL OUTER JOIN vt2 ON (+ (vt2.c0)) COLLATE BINARY WHERE (((IFNULL(NULL, ((vt2.c0) IS TRUE))) ISNULL)) GROUP BY rt0.c1, rt0.c0;
SELECT rt0.c1, rt0.c0 FROM rt0 FULL OUTER JOIN vt2 ON (+ (vt2.c0)) COLLATE BINARY GROUP BY rt0.c1, rt0.c0;
SELECT ALL vt1.c0 FROM vt2, vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt2, vt1 GROUP BY vt1.c0 HAVING SUM((NOT (vt2.c0))) UNION ALL SELECT vt1.c0 FROM vt2, vt1 GROUP BY vt1.c0 HAVING (NOT (SUM((NOT (vt2.c0))))) UNION ALL SELECT vt1.c0 FROM vt2, vt1 GROUP BY vt1.c0 HAVING ((SUM((NOT (vt2.c0)))) ISNULL);
SELECT ALL vt1.c0 FROM vt2, vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt2, vt1 GROUP BY vt1.c0 HAVING SUM((NOT (vt2.c0))) UNION ALL SELECT vt1.c0 FROM vt2, vt1 GROUP BY vt1.c0 HAVING (NOT (SUM((NOT (vt2.c0))))) UNION ALL SELECT vt1.c0 FROM vt2, vt1 GROUP BY vt1.c0 HAVING ((SUM((NOT (vt2.c0)))) ISNULL);
SELECT ALL vt1.c0 FROM vt2, vt1 GROUP BY vt1.c0;
SELECT * FROM rt0, vt1, vt2;
SELECT ALL * FROM rt0, vt1, vt2 WHERE ((((rt0.c1 IN (rt0.c0))) NOT BETWEEN ((- (rt0.c0))) AND (((rt0.c2) NOT BETWEEN (vt2.c0) AND (vt2.c0))))) UNION ALL SELECT ALL * FROM rt0, vt1, vt2 WHERE ((NOT ((((rt0.c1 IN (rt0.c0))) NOT BETWEEN ((- (rt0.c0))) AND (((rt0.c2) NOT BETWEEN (vt2.c0) AND (vt2.c0))))))) UNION ALL SELECT * FROM rt0, vt1, vt2 WHERE ((((((rt0.c1 IN (rt0.c0))) NOT BETWEEN ((- (rt0.c0))) AND (((rt0.c2) NOT BETWEEN (vt2.c0) AND (vt2.c0))))) ISNULL));
SELECT * FROM rt0, vt1, vt2;
SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM vt1, vt2, rt0;
SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM vt1, vt2, rt0 WHERE (((((rt0.c1)<(vt1.c0))) BETWEEN (0.7336931378516293) AND (vt2.c0 COLLATE BINARY))) UNION SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM vt1, vt2, rt0 WHERE ((NOT (((((rt0.c1)<(vt1.c0))) BETWEEN (0.7336931378516293) AND (vt2.c0 COLLATE BINARY))))) UNION SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM vt1, vt2, rt0 WHERE (((((((rt0.c1)<(vt1.c0))) BETWEEN (0.7336931378516293) AND (vt2.c0 COLLATE BINARY))) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM vt1, vt2, rt0;
SELECT rt0.c0, rt0.c1 FROM vt2, vt1 NOT INDEXED, rt0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM vt2, vt1, rt0 WHERE (CASE 0Xffffffffd183c3da  WHEN ((vt2.c0) ISNULL) THEN (~ (rt0.c2)) WHEN SQLITE_COMPILEOPTION_GET(rt0.c1) THEN (+ (rt0.c2)) WHEN json_quote(' D') THEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END ELSE (+ (vt2.c0)) END) GROUP BY rt0.c0, rt0.c1 UNION SELECT rt0.c0, rt0.c1 FROM vt2, vt1, rt0 WHERE ((NOT (CASE 0Xffffffffd183c3da  WHEN ((vt2.c0) ISNULL) THEN (~ (rt0.c2)) WHEN SQLITE_COMPILEOPTION_GET(rt0.c1) THEN (+ (rt0.c2)) WHEN json_quote(' D') THEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END ELSE (+ (vt2.c0)) END))) GROUP BY rt0.c0, rt0.c1 UNION SELECT rt0.c0, rt0.c1 FROM vt2, vt1, rt0 WHERE (((CASE 0xffffffffd183c3da  WHEN ((vt2.c0) ISNULL) THEN (~ (rt0.c2)) WHEN SQLITE_COMPILEOPTION_GET(rt0.c1) THEN (+ (rt0.c2)) WHEN json_quote(' D') THEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END ELSE (+ (vt2.c0)) END) ISNULL)) GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c1 FROM vt2, vt1 NOT INDEXED, rt0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING MAX(COUNT(*)) UNION ALL SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING (NOT (MAX(COUNT(*)))) UNION ALL SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING ((MAX(COUNT(*))) ISNULL);
SELECT * FROM vt2 RIGHT OUTER JOIN rt0 ON ((json_patch(vt2.c0, rt0.c2))>>(((((((((vt2.c0)AND(rt0.c0)))OR(vt2.c0)))AND(rt0.c0)))AND(rt0.c2))));
SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0 WHERE ((((((((rt0.c1, rt0.c1, rt0.c0))<((rt0.c2, rt0.c2, NULL))))OR(CAST(rt0.c0 AS REAL))))AND(rt0.c2 COLLATE BINARY))) UNION SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT ((((((((rt0.c1, rt0.c1, rt0.c0))<((rt0.c2, rt0.c2, NULL))))OR(CAST(rt0.c0 AS REAL))))AND(rt0.c2 COLLATE BINARY))))) UNION SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0 WHERE ((((((((((rt0.c1, rt0.c1, rt0.c0))<((rt0.c2, rt0.c2, NULL))))OR(CAST(rt0.c0 AS REAL))))AND(rt0.c2 COLLATE BINARY))) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0;
SELECT rt0.c1 FROM rt0, vt1 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0, vt1 WHERE (rt0.c0) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0, vt1 WHERE ((NOT (rt0.c0))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0, vt1 WHERE (((rt0.c0) ISNULL)) GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0, vt1 GROUP BY rt0.c1;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING CASE SUM(GROUP_CONCAT(rt0.c1))  WHEN GROUP_CONCAT(MAX(COUNT(*))) THEN MAX(COUNT(rt0.c0)) ELSE (~ (MIN(AVG(AVG(COUNT(*)))))) END UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING (NOT (CASE SUM(GROUP_CONCAT(rt0.c1))  WHEN GROUP_CONCAT(MAX(COUNT(*))) THEN MAX(COUNT(rt0.c0)) ELSE (~ (MIN(AVG(AVG(COUNT(*)))))) END)) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING ((CASE SUM(GROUP_CONCAT(rt0.c1))  WHEN GROUP_CONCAT(MAX(COUNT(*))) THEN MAX(COUNT(rt0.c0)) ELSE (~ (MIN(AVG(AVG(COUNT(*)))))) END) ISNULL);
SELECT ALL * FROM rt0;
SELECT * FROM rt0 WHERE (CASE (((rt0.c1))<((rt0.c0)))  WHEN rt0.c0 COLLATE BINARY THEN CAST(rt0.c0 AS INTEGER) ELSE rt0.c2 COLLATE RTRIM END) UNION ALL SELECT * FROM rt0 WHERE ((NOT (CASE (((rt0.c1))<((rt0.c0)))  WHEN rt0.c0 COLLATE BINARY THEN CAST(rt0.c0 AS INTEGER) ELSE rt0.c2 COLLATE RTRIM END))) UNION ALL SELECT * FROM rt0 WHERE (((CASE (((rt0.c1))<((rt0.c0)))  WHEN rt0.c0 COLLATE BINARY THEN CAST(rt0.c0 AS INTEGER) ELSE rt0.c2 COLLATE RTRIM END) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((((x'') NOTNULL))+(((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c0))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((((x'') NOTNULL))+(((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c0))))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((((x'') NOTNULL))+(((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c0))))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c1 FROM vt2, vt1 LEFT OUTER JOIN rt0 ON CAST(UNLIKELY(NULL) AS NUMERIC) GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM vt2, vt1 LEFT OUTER JOIN rt0 ON CAST(UNLIKELY(NULL) AS NUMERIC) WHERE (CAST(rt0.c0 AS NUMERIC) COLLATE RTRIM) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM vt2, vt1 LEFT OUTER JOIN rt0 ON CAST(UNLIKELY(NULL) AS NUMERIC) WHERE ((NOT (CAST(rt0.c0 AS NUMERIC) COLLATE RTRIM))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM vt2, vt1 LEFT OUTER JOIN rt0 ON CAST(UNLIKELY(NULL) AS NUMERIC) WHERE (((CAST(rt0.c0 AS NUMERIC) COLLATE RTRIM) ISNULL)) GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM vt2, vt1 LEFT OUTER JOIN rt0 ON CAST(UNLIKELY(NULL) AS NUMERIC) GROUP BY rt0.c1;
SELECT rt0.c2, rt0.c0 FROM rt0 FULL OUTER JOIN vt1 ON (((rt0.c1)) BETWEEN ((vt1.c0)) AND ((((rt0.c1) ISNULL)))) GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 FULL OUTER JOIN vt1 ON (((rt0.c1)) BETWEEN ((vt1.c0)) AND ((((rt0.c1) ISNULL)))) GROUP BY rt0.c2, rt0.c0 HAVING TOTAL(((((((((((((rt0.c1)AND(COUNT(*))))OR(vt1.c0)))AND(COUNT(*))))AND(GROUP_CONCAT(rt0.c0))))AND(vt1.c0)))AND(TOTAL(COUNT(*))))) UNION ALL SELECT rt0.c2, rt0.c0 FROM rt0 FULL OUTER JOIN vt1 ON (((rt0.c1)) BETWEEN ((vt1.c0)) AND ((((rt0.c1) ISNULL)))) GROUP BY rt0.c2, rt0.c0 HAVING (NOT (TOTAL(((((((((((((rt0.c1)AND(COUNT(*))))OR(vt1.c0)))AND(COUNT(*))))AND(GROUP_CONCAT(rt0.c0))))AND(vt1.c0)))AND(TOTAL(COUNT(*))))))) UNION ALL SELECT rt0.c2, rt0.c0 FROM rt0 FULL OUTER JOIN vt1 ON (((rt0.c1)) BETWEEN ((vt1.c0)) AND ((((rt0.c1) ISNULL)))) GROUP BY rt0.c2, rt0.c0 HAVING ((TOTAL(((((((((((((rt0.c1)AND(COUNT(*))))OR(vt1.c0)))AND(COUNT(*))))AND(GROUP_CONCAT(rt0.c0))))AND(vt1.c0)))AND(TOTAL(COUNT(*)))))) ISNULL);
SELECT ALL rt0.c1 FROM rt0;
SELECT rt0.c1 FROM rt0 WHERE ((- (((rt0.c0)IS(rt0.c0))))) UNION ALL SELECT rt0.c1 FROM rt0 WHERE ((NOT ((- (((rt0.c0)IS(rt0.c0))))))) UNION ALL SELECT rt0.c1 FROM rt0 WHERE ((((- (((rt0.c0)IS(rt0.c0))))) ISNULL));
SELECT ALL rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c1 FROM vt2, rt0, vt1;
SELECT DISTINCT rt0.c0, rt0.c1 FROM vt2, rt0, vt1 WHERE (CASE ((((rt0.c0)AND(NULL)))OR(rt0.c2))  WHEN rt0.c2 COLLATE RTRIM THEN rt0.c2 COLLATE NOCASE END) UNION SELECT DISTINCT rt0.c0, rt0.c1 FROM vt2, rt0, vt1 WHERE ((NOT (CASE ((((rt0.c0)AND(NULL)))OR(rt0.c2))  WHEN rt0.c2 COLLATE RTRIM THEN rt0.c2 COLLATE NOCASE END))) UNION SELECT DISTINCT rt0.c0, rt0.c1 FROM vt2, rt0, vt1 WHERE (((CASE ((((rt0.c0)AND(NULL)))OR(rt0.c2))  WHEN rt0.c2 COLLATE RTRIM THEN rt0.c2 COLLATE NOCASE END) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c1 FROM vt2, rt0, vt1;
SELECT rt0.c1, rt0.c2, vt2.c0, vt1.c0 FROM rt0, vt1 LEFT OUTER JOIN vt2 ON ((((rt0.c0)AND((vt1.c0 IN ()))))OR(CAST(vt1.c0 AS NUMERIC))) GROUP BY rt0.c1, rt0.c2, vt2.c0, vt1.c0;
SELECT ALL rt0.c1, rt0.c2, vt2.c0, vt1.c0 FROM rt0, vt1 LEFT OUTER JOIN vt2 ON ((((rt0.c0)AND((vt1.c0 IN ()))))OR(CAST(vt1.c0 AS NUMERIC))) WHERE (((x'')IS((vt2.c0 IN ())))) GROUP BY rt0.c1, rt0.c2, vt2.c0, vt1.c0 UNION SELECT rt0.c1, rt0.c2, vt2.c0, vt1.c0 FROM rt0, vt1 LEFT OUTER JOIN vt2 ON ((((rt0.c0)AND((vt1.c0 IN ()))))OR(CAST(vt1.c0 AS NUMERIC))) WHERE ((NOT (((x'')IS((vt2.c0 IN ())))))) GROUP BY rt0.c1, rt0.c2, vt2.c0, vt1.c0 UNION SELECT rt0.c1, rt0.c2, vt2.c0, vt1.c0 FROM rt0, vt1 LEFT OUTER JOIN vt2 ON ((((rt0.c0)AND((vt1.c0 IN ()))))OR(CAST(vt1.c0 AS NUMERIC))) WHERE (((((x'')IS((vt2.c0 IN ())))) ISNULL)) GROUP BY rt0.c1, rt0.c2, vt2.c0, vt1.c0;
SELECT rt0.c1, rt0.c2, vt2.c0, vt1.c0 FROM rt0, vt1 LEFT OUTER JOIN vt2 ON ((((rt0.c0)AND((vt1.c0 IN ()))))OR(CAST(vt1.c0 AS NUMERIC))) GROUP BY rt0.c1, rt0.c2, vt2.c0, vt1.c0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING COUNT(TYPEOF(rt0.c0)) UNION ALL SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (NOT (COUNT(TYPEOF(rt0.c0)))) UNION ALL SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING ((COUNT(TYPEOF(rt0.c0))) ISNULL);
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING COUNT(TYPEOF(rt0.c0)) UNION ALL SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (NOT (COUNT(TYPEOF(rt0.c0)))) UNION ALL SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING ((COUNT(TYPEOF(rt0.c0))) ISNULL);
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL * FROM rt0;
SELECT * FROM rt0 WHERE (rt0.c1 COLLATE NOCASE) UNION ALL SELECT * FROM rt0 WHERE ((NOT (rt0.c1 COLLATE NOCASE))) UNION ALL SELECT ALL * FROM rt0 WHERE (((rt0.c1 COLLATE NOCASE) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (CASE CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END  WHEN CHANGES() THEN UNLIKELY(DISTINCT vt1.c0) END) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (CASE CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END  WHEN CHANGES() THEN UNLIKELY(DISTINCT vt1.c0) END))) UNION SELECT DISTINCT * FROM vt1 WHERE (((CASE CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END  WHEN CHANGES() THEN UNLIKELY(DISTINCT vt1.c0) END) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT ALL vt1.c0, rt0.c1, rt0.c2 FROM rt0 FULL OUTER JOIN vt1 ON rt0.c2 LEFT OUTER JOIN vt2 ON (((((rt0.c2))=((rt0.c1)))) IS FALSE) GROUP BY vt1.c0, rt0.c1, rt0.c2;
SELECT vt1.c0, rt0.c1, rt0.c2 FROM rt0 FULL OUTER JOIN vt1 ON rt0.c2 LEFT OUTER JOIN vt2 ON (((((rt0.c2))=((rt0.c1)))) IS FALSE) WHERE (((rt0.c2) NOT BETWEEN ((((vt1.c0)) BETWEEN ((vt2.c0)) AND ((vt2.c0)))) AND (((((rt0.c2)OR(rt0.c1)))AND(rt0.c0))))) GROUP BY vt1.c0, rt0.c1, rt0.c2 UNION SELECT ALL vt1.c0, rt0.c1, rt0.c2 FROM rt0 FULL OUTER JOIN vt1 ON rt0.c2 LEFT OUTER JOIN vt2 ON (((((rt0.c2))==((rt0.c1)))) IS FALSE) WHERE ((NOT (((rt0.c2) NOT BETWEEN ((((vt1.c0)) BETWEEN ((vt2.c0)) AND ((vt2.c0)))) AND (((((rt0.c2)OR(rt0.c1)))AND(rt0.c0))))))) GROUP BY vt1.c0, rt0.c1, rt0.c2 UNION SELECT vt1.c0, rt0.c1, rt0.c2 FROM rt0 FULL OUTER JOIN vt1 ON rt0.c2 LEFT OUTER JOIN vt2 ON (((((rt0.c2))==((rt0.c1)))) IS FALSE) WHERE (((((rt0.c2) NOT BETWEEN ((((vt1.c0)) BETWEEN ((vt2.c0)) AND ((vt2.c0)))) AND (((((rt0.c2)OR(rt0.c1)))AND(rt0.c0))))) ISNULL)) GROUP BY vt1.c0, rt0.c1, rt0.c2;
SELECT ALL vt1.c0, rt0.c1, rt0.c2 FROM rt0 FULL OUTER JOIN vt1 ON rt0.c2 LEFT OUTER JOIN vt2 ON (((((rt0.c2))=((rt0.c1)))) IS FALSE) GROUP BY vt1.c0, rt0.c1, rt0.c2;
SELECT vt2.c0 FROM vt2, vt1 GROUP BY vt2.c0;
SELECT vt2.c0 FROM vt2, vt1 GROUP BY vt2.c0 HAVING ((TOTAL(TOTAL(AVG(COUNT(TOTAL(GROUP_CONCAT(vt2.c0))))))) ISNULL) UNION ALL SELECT ALL vt2.c0 FROM vt2, vt1 GROUP BY vt2.c0 HAVING (NOT (((TOTAL(TOTAL(AVG(COUNT(TOTAL(GROUP_CONCAT(vt2.c0))))))) ISNULL))) UNION ALL SELECT vt2.c0 FROM vt2, vt1 GROUP BY vt2.c0 HAVING ((((TOTAL(TOTAL(AVG(COUNT(TOTAL(GROUP_CONCAT(vt2.c0))))))) ISNULL)) ISNULL);
SELECT ALL rt0.c0 FROM vt1, rt0, vt2;
SELECT ALL rt0.c0 FROM vt1, rt0, vt2 WHERE (TYPEOF(rt0.c1) COLLATE NOCASE) UNION ALL SELECT rt0.c0 FROM vt1, rt0, vt2 WHERE ((NOT (TYPEOF(rt0.c1) COLLATE NOCASE))) UNION ALL SELECT rt0.c0 FROM vt1, rt0, vt2 WHERE (((TYPEOF(rt0.c1) COLLATE NOCASE) ISNULL));
SELECT ALL rt0.c0 FROM vt1, rt0, vt2;
SELECT DISTINCT * FROM vt2, vt1;
SELECT DISTINCT * FROM vt2, vt1 WHERE ((((vt2.c0) NOT NULL) IN (((vt2.c0)AND(-312345429))))) UNION SELECT DISTINCT * FROM vt2, vt1 WHERE ((NOT ((((vt2.c0) NOT NULL) IN (((vt2.c0)AND(-312345429))))))) UNION SELECT DISTINCT * FROM vt2, vt1 WHERE ((((((vt2.c0) NOT NULL) IN (((vt2.c0)AND(-312345429))))) ISNULL));
SELECT DISTINCT * FROM vt2, vt1;
SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT ALL vt2.c0 FROM vt2 WHERE (vt2.c0) GROUP BY vt2.c0 UNION SELECT ALL vt2.c0 FROM vt2 WHERE ((NOT (vt2.c0))) GROUP BY vt2.c0 UNION SELECT ALL vt2.c0 FROM vt2 WHERE (((vt2.c0) ISNULL)) GROUP BY vt2.c0;
SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT rt0.c2 FROM rt0, vt1, vt2 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0, vt1, vt2 GROUP BY rt0.c2 HAVING GROUP_CONCAT((+ (SUM(MAX(COUNT(*)))))) UNION ALL SELECT ALL rt0.c2 FROM rt0, vt1, vt2 GROUP BY rt0.c2 HAVING (NOT (GROUP_CONCAT((+ (SUM(MAX(COUNT(*)))))))) UNION ALL SELECT rt0.c2 FROM rt0, vt1, vt2 GROUP BY rt0.c2 HAVING ((GROUP_CONCAT((+ (SUM(MAX(COUNT(*))))))) ISNULL);
SELECT ALL * FROM vt1, rt0;
SELECT * FROM vt1, rt0 WHERE (CASE WHEN CAST(rt0.c2 AS TEXT) THEN ((rt0.c1) IS TRUE) WHEN (NOT (0.15086912492251758)) THEN rt0.c0 COLLATE NOCASE WHEN CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c1 END THEN TRIM(rt0.c0) END) UNION ALL SELECT * FROM vt1, rt0 WHERE ((NOT (CASE WHEN CAST(rt0.c2 AS TEXT) THEN ((rt0.c1) IS TRUE) WHEN (NOT (0.15086912492251758)) THEN rt0.c0 COLLATE NOCASE WHEN CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c1 END THEN TRIM(rt0.c0) END))) UNION ALL SELECT ALL * FROM vt1, rt0 WHERE (((CASE WHEN CAST(rt0.c2 AS TEXT) THEN ((rt0.c1) IS TRUE) WHEN (NOT (0.15086912492251758)) THEN rt0.c0 COLLATE NOCASE WHEN CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c1 END THEN TRIM(rt0.c0) END) ISNULL));
SELECT ALL * FROM vt1, rt0;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (((NULL) BETWEEN (((((vt1.c0)AND(vt1.c0)))AND(vt1.c0))) AND ((+ (vt1.c0))))) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (((NULL) BETWEEN (((((vt1.c0)AND(vt1.c0)))AND(vt1.c0))) AND ((+ (vt1.c0))))))) UNION SELECT DISTINCT * FROM vt1 WHERE (((((NULL) BETWEEN (((((vt1.c0)AND(vt1.c0)))AND(vt1.c0))) AND ((+ (vt1.c0))))) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT ALL vt2.c0 FROM vt2 WHERE (CASE CASE vt2.c0  WHEN vt2.c0 THEN vt2.c0 END  WHEN ((vt2.c0)AND(vt2.c0)) THEN '9223372036854775807' ELSE vt2.c0 END) GROUP BY vt2.c0 UNION SELECT ALL vt2.c0 FROM vt2 WHERE ((NOT (CASE CASE vt2.c0  WHEN vt2.c0 THEN vt2.c0 END  WHEN ((vt2.c0)AND(vt2.c0)) THEN '9223372036854775807' ELSE vt2.c0 END))) GROUP BY vt2.c0 UNION SELECT ALL vt2.c0 FROM vt2 WHERE (((CASE CASE vt2.c0  WHEN vt2.c0 THEN vt2.c0 END  WHEN ((vt2.c0)AND(vt2.c0)) THEN '9223372036854775807' ELSE vt2.c0 END) ISNULL)) GROUP BY vt2.c0;
SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT rt0.c2, rt0.c0 FROM rt0 NATURAL JOIN vt2 GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 NATURAL JOIN vt2 GROUP BY rt0.c2, rt0.c0 HAVING AVG(SUM(MIN(COUNT(rt0.c1)))) UNION ALL SELECT rt0.c2, rt0.c0 FROM rt0 NATURAL JOIN vt2 GROUP BY rt0.c2, rt0.c0 HAVING (NOT (AVG(SUM(MIN(COUNT(rt0.c1)))))) UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM rt0 NATURAL JOIN vt2 GROUP BY rt0.c2, rt0.c0 HAVING ((AVG(SUM(MIN(COUNT(rt0.c1))))) ISNULL);
SELECT ALL rt0.c2, vt2.c0, rt0.c1, rt0.c0 FROM rt0, vt2;
SELECT ALL rt0.c2, vt2.c0, rt0.c1, rt0.c0 FROM rt0, vt2 WHERE (CAST(vt2.c0 AS REAL) COLLATE RTRIM) UNION ALL SELECT ALL rt0.c2, vt2.c0, rt0.c1, rt0.c0 FROM rt0, vt2 WHERE ((NOT (CAST(vt2.c0 AS REAL) COLLATE RTRIM))) UNION ALL SELECT ALL rt0.c2, vt2.c0, rt0.c1, rt0.c0 FROM rt0, vt2 WHERE (((CAST(vt2.c0 AS REAL) COLLATE RTRIM) ISNULL));
SELECT ALL rt0.c2, vt2.c0, rt0.c1, rt0.c0 FROM rt0, vt2;
SELECT DISTINCT * FROM vt1, rt0;
SELECT DISTINCT * FROM vt1, rt0 WHERE ((((rt0.c0)) BETWEEN (((((x''))>((rt0.c2))))) AND ((rt0.c1)))) UNION SELECT DISTINCT * FROM vt1, rt0 WHERE ((NOT ((((rt0.c0)) BETWEEN (((((x''))>((rt0.c2))))) AND ((rt0.c1)))))) UNION SELECT DISTINCT * FROM vt1, rt0 WHERE ((((((rt0.c0)) BETWEEN (((((x''))>((rt0.c2))))) AND ((rt0.c1)))) ISNULL));
SELECT DISTINCT * FROM vt1, rt0;
SELECT rt0.c2, vt1.c0, vt2.c0, rt0.c0, rt0.c1 FROM vt1, vt2, rt0 GROUP BY rt0.c2, vt1.c0, vt2.c0, rt0.c0, rt0.c1;
SELECT ALL rt0.c2, vt1.c0, vt2.c0, rt0.c0, rt0.c1 FROM vt1, vt2, rt0 WHERE (-1.501824292E9) GROUP BY rt0.c2, vt1.c0, vt2.c0, rt0.c0, rt0.c1 UNION SELECT rt0.c2, vt1.c0, vt2.c0, rt0.c0, rt0.c1 FROM vt1, vt2, rt0 WHERE ((NOT (-1.501824292E9))) GROUP BY rt0.c2, vt1.c0, vt2.c0, rt0.c0, rt0.c1 UNION SELECT rt0.c2, vt1.c0, vt2.c0, rt0.c0, rt0.c1 FROM vt1, vt2, rt0 WHERE (((-1.501824292E9) ISNULL)) GROUP BY rt0.c2, vt1.c0, vt2.c0, rt0.c0, rt0.c1;
SELECT rt0.c2, vt1.c0, vt2.c0, rt0.c0, rt0.c1 FROM vt1, vt2, rt0 GROUP BY rt0.c2, vt1.c0, vt2.c0, rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c2, vt1.c0, vt2.c0, rt0.c1 FROM vt2 FULL OUTER JOIN rt0 ON ((((rt0.c1) ISNULL)) IS TRUE) CROSS JOIN vt1 ON 0.0 GROUP BY rt0.c0, rt0.c2, vt1.c0, vt2.c0, rt0.c1;
SELECT rt0.c0, rt0.c2, vt1.c0, vt2.c0, rt0.c1 FROM vt2 FULL OUTER JOIN rt0 ON ((((rt0.c1) ISNULL)) IS TRUE) CROSS JOIN vt1 ON 0.0 GROUP BY rt0.c0, rt0.c2, vt1.c0, vt2.c0, rt0.c1 HAVING COUNT(((((vt2.c0)OR(rt0.c2)))OR(MIN(COUNT(rt0.c0))))) UNION ALL SELECT rt0.c0, rt0.c2, vt1.c0, vt2.c0, rt0.c1 FROM vt2 FULL OUTER JOIN rt0 ON ((((rt0.c1) ISNULL)) IS TRUE) CROSS JOIN vt1 ON 0.0 GROUP BY rt0.c0, rt0.c2, vt1.c0, vt2.c0, rt0.c1 HAVING (NOT (COUNT(((((vt2.c0)OR(rt0.c2)))OR(MIN(COUNT(rt0.c0))))))) UNION ALL SELECT rt0.c0, rt0.c2, vt1.c0, vt2.c0, rt0.c1 FROM vt2 FULL OUTER JOIN rt0 ON ((((rt0.c1) ISNULL)) IS TRUE) CROSS JOIN vt1 ON 0.0 GROUP BY rt0.c0, rt0.c2, vt1.c0, vt2.c0, rt0.c1 HAVING ((COUNT(((((vt2.c0)OR(rt0.c2)))OR(MIN(COUNT(rt0.c0)))))) ISNULL);
SELECT ALL * FROM rt0 CROSS JOIN vt2 ON ((((((((((((0.913988049255933)AND(rt0.c0)))OR(vt1.c0)))OR(rt0.c2)))AND(rt0.c0)))OR((((vt2.c0, vt2.c0, rt0.c2)) BETWEEN ((rt0.c0, rt0.c1, rt0.c1)) AND ((rt0.c2, rt0.c1, vt2.c0))))))OR(-2083285152)) CROSS JOIN vt1 ON ((x'') NOT BETWEEN (((vt1.c0) IS TRUE)) AND (CASE WHEN rt0.c0 THEN vt2.c0 END));
SELECT * FROM rt0 CROSS JOIN vt2 ON ((((((((((((0.913988049255933)AND(rt0.c0)))OR(vt1.c0)))OR(rt0.c2)))AND(rt0.c0)))OR((((vt2.c0, vt2.c0, rt0.c2)) BETWEEN ((rt0.c0, rt0.c1, rt0.c1)) AND ((rt0.c2, rt0.c1, vt2.c0))))))OR(-2083285152)) CROSS JOIN vt1 ON ((x'') NOT BETWEEN (((vt1.c0) IS TRUE)) AND (CASE WHEN rt0.c0 THEN vt2.c0 END)) WHERE ((+ ((rt0.c0 IN (rt0.c1))))) UNION ALL SELECT ALL * FROM rt0 CROSS JOIN vt2 ON ((((((((((((0.913988049255933)AND(rt0.c0)))OR(vt1.c0)))OR(rt0.c2)))AND(rt0.c0)))OR((((vt2.c0, vt2.c0, rt0.c2)) BETWEEN ((rt0.c0, rt0.c1, rt0.c1)) AND ((rt0.c2, rt0.c1, vt2.c0))))))OR(-2083285152)) CROSS JOIN vt1 ON ((x'') NOT BETWEEN (((vt1.c0) IS TRUE)) AND (CASE WHEN rt0.c0 THEN vt2.c0 END)) WHERE ((NOT ((+ ((rt0.c0 IN (rt0.c1))))))) UNION ALL SELECT * FROM rt0 CROSS JOIN vt2 ON ((((((((((((0.913988049255933)AND(rt0.c0)))OR(vt1.c0)))OR(rt0.c2)))AND(rt0.c0)))OR((((vt2.c0, vt2.c0, rt0.c2)) BETWEEN ((rt0.c0, rt0.c1, rt0.c1)) AND ((rt0.c2, rt0.c1, vt2.c0))))))OR(-2083285152)) CROSS JOIN vt1 ON ((x'') NOT BETWEEN (((vt1.c0) IS TRUE)) AND (CASE WHEN rt0.c0 THEN vt2.c0 END)) WHERE ((((+ ((rt0.c0 IN (rt0.c1))))) ISNULL));
SELECT ALL * FROM rt0 CROSS JOIN vt2 ON ((((((((((((0.913988049255933)AND(rt0.c0)))OR(vt1.c0)))OR(rt0.c2)))AND(rt0.c0)))OR((((vt2.c0, vt2.c0, rt0.c2)) BETWEEN ((rt0.c0, rt0.c1, rt0.c1)) AND ((rt0.c2, rt0.c1, vt2.c0))))))OR(-2083285152)) CROSS JOIN vt1 ON ((x'') NOT BETWEEN (((vt1.c0) IS TRUE)) AND (CASE WHEN rt0.c0 THEN vt2.c0 END));
SELECT DISTINCT rt0.c0, rt0.c1, vt2.c0, vt1.c0 FROM rt0, vt1, vt2;
SELECT DISTINCT rt0.c0, rt0.c1, vt2.c0, vt1.c0 FROM rt0, vt1, vt2 WHERE (vt1.c0) UNION SELECT DISTINCT rt0.c0, rt0.c1, vt2.c0, vt1.c0 FROM rt0, vt1, vt2 WHERE ((NOT (vt1.c0))) UNION SELECT DISTINCT rt0.c0, rt0.c1, vt2.c0, vt1.c0 FROM rt0, vt1, vt2 WHERE (((vt1.c0) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c1, vt2.c0, vt1.c0 FROM rt0, vt1, vt2;
SELECT ALL vt1.c0 FROM vt1, vt2 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1, vt2 WHERE (((((((((CASE WHEN vt2.c0 THEN vt1.c0 ELSE vt2.c0 END)AND(((((vt1.c0)AND(vt2.c0)))OR(vt2.c0)))))OR((+ (vt2.c0)))))OR((vt2.c0 IN ()))))OR(((vt2.c0)OR(vt1.c0))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1, vt2 WHERE ((NOT (((((((((CASE WHEN vt2.c0 THEN vt1.c0 ELSE vt2.c0 END)AND(((((vt1.c0)AND(vt2.c0)))OR(vt2.c0)))))OR((+ (vt2.c0)))))OR((vt2.c0 IN ()))))OR(((vt2.c0)OR(vt1.c0))))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1, vt2 WHERE (((((((((((CASE WHEN vt2.c0 THEN vt1.c0 ELSE vt2.c0 END)AND(((((vt1.c0)AND(vt2.c0)))OR(vt2.c0)))))OR((+ (vt2.c0)))))OR((vt2.c0 IN ()))))OR(((vt2.c0)OR(vt1.c0))))) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1, vt2 GROUP BY vt1.c0;
SELECT ALL vt1.c0, rt0.c0, rt0.c1, vt2.c0, rt0.c2 FROM vt2, vt1, rt0 GROUP BY vt1.c0, rt0.c0, rt0.c1, vt2.c0, rt0.c2;
SELECT vt1.c0, rt0.c0, rt0.c1, vt2.c0, rt0.c2 FROM vt2, vt1, rt0 GROUP BY vt1.c0, rt0.c0, rt0.c1, vt2.c0, rt0.c2 HAVING SUM(((TOTAL(vt2.c0)) IS FALSE)) UNION ALL SELECT vt1.c0, rt0.c0, rt0.c1, vt2.c0, rt0.c2 FROM vt2, vt1, rt0 GROUP BY vt1.c0, rt0.c0, rt0.c1, vt2.c0, rt0.c2 HAVING (NOT (SUM(((TOTAL(vt2.c0)) IS FALSE)))) UNION ALL SELECT ALL vt1.c0, rt0.c0, rt0.c1, vt2.c0, rt0.c2 FROM vt2, vt1, rt0 GROUP BY vt1.c0, rt0.c0, rt0.c1, vt2.c0, rt0.c2 HAVING ((SUM(((TOTAL(vt2.c0)) IS FALSE))) ISNULL);
SELECT * FROM vt2, rt0;
SELECT * FROM vt2, rt0 WHERE ((((((rt0.c1)LIKE(rt0.c2)), HEX(rt0.c1), CAST(rt0.c1 AS TEXT)))=(((((0.23148656814957846)) BETWEEN ((rt0.c2)) AND ((vt2.c0))), (rt0.c0 IN ()), (rt0.c1 IN ()))))) UNION ALL SELECT * FROM vt2, rt0 WHERE ((NOT ((((((rt0.c1)LIKE(rt0.c2)), HEX(rt0.c1), CAST(rt0.c1 AS TEXT)))=(((((0.23148656814957846)) BETWEEN ((rt0.c2)) AND ((vt2.c0))), (rt0.c0 IN ()), (rt0.c1 IN ()))))))) UNION ALL SELECT ALL * FROM vt2, rt0 WHERE ((((((((rt0.c1)LIKE(rt0.c2)), HEX(rt0.c1), CAST(rt0.c1 AS TEXT)))=(((((0.23148656814957846)) BETWEEN ((rt0.c2)) AND ((vt2.c0))), (rt0.c0 IN ()), (rt0.c1 IN ()))))) ISNULL));
SELECT * FROM vt2, rt0;
SELECT DISTINCT * FROM vt2;
SELECT DISTINCT * FROM vt2 WHERE (CASE WHEN vt2.c0 THEN vt2.c0 ELSE vt2.c0 END COLLATE NOCASE) UNION SELECT DISTINCT * FROM vt2 WHERE ((NOT (CASE WHEN vt2.c0 THEN vt2.c0 ELSE vt2.c0 END COLLATE NOCASE))) UNION SELECT DISTINCT * FROM vt2 WHERE (((CASE WHEN vt2.c0 THEN vt2.c0 ELSE vt2.c0 END COLLATE NOCASE) ISNULL));
SELECT DISTINCT * FROM vt2;
SELECT ALL vt1.c0, rt0.c1, vt2.c0 FROM rt0, vt2, vt1 GROUP BY vt1.c0, rt0.c1, vt2.c0;
SELECT vt1.c0, rt0.c1, vt2.c0 FROM rt0, vt2, vt1 WHERE ((((((0X2cd9932)|(rt0.c0))))!=((rt0.c0)))) GROUP BY vt1.c0, rt0.c1, vt2.c0 UNION SELECT ALL vt1.c0, rt0.c1, vt2.c0 FROM rt0, vt2, vt1 WHERE ((NOT ((((((0x2cd9932)|(rt0.c0))))!=((rt0.c0)))))) GROUP BY vt1.c0, rt0.c1, vt2.c0 UNION SELECT ALL vt1.c0, rt0.c1, vt2.c0 FROM rt0, vt2, vt1 WHERE ((((((((0x2cd9932)|(rt0.c0))))!=((rt0.c0)))) ISNULL)) GROUP BY vt1.c0, rt0.c1, vt2.c0;
SELECT ALL vt1.c0, rt0.c1, vt2.c0 FROM rt0, vt2, vt1 GROUP BY vt1.c0, rt0.c1, vt2.c0;
SELECT rt0.c2, rt0.c0, rt0.c1, vt2.c0 FROM rt0 NATURAL JOIN vt2 GROUP BY rt0.c2, rt0.c0, rt0.c1, vt2.c0;
SELECT rt0.c2, rt0.c0, rt0.c1, vt2.c0 FROM rt0 NATURAL JOIN vt2 GROUP BY rt0.c2, rt0.c0, rt0.c1, vt2.c0 HAVING CASE WHEN GROUP_CONCAT(vt2.c0) THEN ((rt0.c2)LIKE(MAX(rt0.c1))) END UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c1, vt2.c0 FROM rt0 NATURAL JOIN vt2 GROUP BY rt0.c2, rt0.c0, rt0.c1, vt2.c0 HAVING (NOT (CASE WHEN GROUP_CONCAT(vt2.c0) THEN ((rt0.c2)LIKE(MAX(rt0.c1))) END)) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c1, vt2.c0 FROM rt0 NATURAL JOIN vt2 GROUP BY rt0.c2, rt0.c0, rt0.c1, vt2.c0 HAVING ((CASE WHEN GROUP_CONCAT(vt2.c0) THEN ((rt0.c2)LIKE(MAX(rt0.c1))) END) ISNULL);
SELECT rt0.c2, rt0.c0, rt0.c1, vt2.c0 FROM rt0 NATURAL JOIN vt2 GROUP BY rt0.c2, rt0.c0, rt0.c1, vt2.c0;
SELECT rt0.c2, rt0.c0, rt0.c1, vt2.c0 FROM rt0 NATURAL JOIN vt2 GROUP BY rt0.c2, rt0.c0, rt0.c1, vt2.c0 HAVING CASE WHEN GROUP_CONCAT(vt2.c0) THEN ((rt0.c2)LIKE(MAX(rt0.c1))) END UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c1, vt2.c0 FROM rt0 NATURAL JOIN vt2 GROUP BY rt0.c2, rt0.c0, rt0.c1, vt2.c0 HAVING (NOT (CASE WHEN GROUP_CONCAT(vt2.c0) THEN ((rt0.c2)LIKE(MAX(rt0.c1))) END)) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c1, vt2.c0 FROM rt0 NATURAL JOIN vt2 GROUP BY rt0.c2, rt0.c0, rt0.c1, vt2.c0 HAVING ((CASE WHEN GROUP_CONCAT(vt2.c0) THEN ((rt0.c2)LIKE(MAX(rt0.c1))) END) ISNULL);
SELECT rt0.c2, rt0.c0, rt0.c1, vt2.c0 FROM rt0 NATURAL JOIN vt2 GROUP BY rt0.c2, rt0.c0, rt0.c1, vt2.c0;
SELECT ALL vt2.c0 FROM vt2;
SELECT ALL vt2.c0 FROM vt2 WHERE ((CAST(vt2.c0 AS REAL) IN ())) UNION ALL SELECT vt2.c0 FROM vt2 WHERE ((NOT ((CAST(vt2.c0 AS REAL) IN ())))) UNION ALL SELECT ALL vt2.c0 FROM vt2 WHERE ((((CAST(vt2.c0 AS REAL) IN ())) ISNULL));
SELECT ALL vt2.c0 FROM vt2;
SELECT DISTINCT * FROM vt2, rt0 FULL OUTER JOIN vt1 ON (+ (((vt2.c0) NOT NULL)));
SELECT DISTINCT * FROM vt2, rt0 FULL OUTER JOIN vt1 ON (+ (((vt2.c0) NOT NULL))) WHERE ((NOT ('-2061777344'))) UNION SELECT DISTINCT * FROM vt2, rt0 FULL OUTER JOIN vt1 ON (+ (((vt2.c0) NOT NULL))) WHERE ((NOT ((NOT ('-2061777344'))))) UNION SELECT DISTINCT * FROM vt2, rt0 FULL OUTER JOIN vt1 ON (+ (((vt2.c0) NOT NULL))) WHERE ((((NOT ('-2061777344'))) ISNULL));
SELECT DISTINCT * FROM vt2, rt0 FULL OUTER JOIN vt1 ON (+ (((vt2.c0) NOT NULL)));
SELECT vt2.c0, vt1.c0 FROM vt1, vt2 GROUP BY vt2.c0, vt1.c0;
SELECT vt2.c0, vt1.c0 FROM vt1, vt2 WHERE ((CAST(vt1.c0 AS BLOB) IN ())) GROUP BY vt2.c0, vt1.c0 UNION SELECT vt2.c0, vt1.c0 FROM vt1, vt2 WHERE ((NOT ((CAST(vt1.c0 AS BLOB) IN ())))) GROUP BY vt2.c0, vt1.c0 UNION SELECT vt2.c0, vt1.c0 FROM vt1, vt2 WHERE ((((CAST(vt1.c0 AS BLOB) IN ())) ISNULL)) GROUP BY vt2.c0, vt1.c0;
SELECT vt2.c0, vt1.c0 FROM vt1, vt2 GROUP BY vt2.c0, vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING MAX(MAX(vt1.c0)) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (MAX(MAX(vt1.c0)))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((MAX(MAX(vt1.c0))) ISNULL);
SELECT ALL SUM((~ (((rt0.c1)<=(rt0.c1))))) FROM rt0, vt1 NOT INDEXED;
SELECT ALL rt0.c0, rt0.c1, vt2.c0, rt0.c2, vt1.c0 FROM vt2, rt0, vt1;
SELECT ALL rt0.c0, rt0.c1, vt2.c0, rt0.c2, vt1.c0 FROM vt2, rt0, vt1 WHERE (x'') UNION ALL SELECT rt0.c0, rt0.c1, vt2.c0, rt0.c2, vt1.c0 FROM vt2, rt0, vt1 WHERE ((NOT (x''))) UNION ALL SELECT rt0.c0, rt0.c1, vt2.c0, rt0.c2, vt1.c0 FROM vt2, rt0, vt1 WHERE (((x'') ISNULL));
SELECT ALL rt0.c0, rt0.c1, vt2.c0, rt0.c2, vt1.c0 FROM vt2, rt0, vt1;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE ((((vt1.c0)) BETWEEN ((CAST(vt1.c0 AS NUMERIC))) AND ((CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)))) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT ((((vt1.c0)) BETWEEN ((CAST(vt1.c0 AS NUMERIC))) AND ((CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)))))) UNION SELECT DISTINCT * FROM vt1 WHERE ((((((vt1.c0)) BETWEEN ((CAST(vt1.c0 AS NUMERIC))) AND ((CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)))) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 WHERE (((((rt0.c0 IN ()), load_extension(rt0.c2), (~ (rt0.c2)), (~ (0.8785294083466458)), (~ (rt0.c2))))<>((LIKELY(rt0.c2), ((((rt0.c2)AND(rt0.c0)))AND(rt0.c0)), rt0.c2, ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c1)), '')))) GROUP BY rt0.c0, rt0.c1 UNION SELECT rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (((((rt0.c0 IN ()), load_extension(rt0.c2), (~ (rt0.c2)), (~ (0.8785294083466458)), (~ (rt0.c2))))<>((LIKELY(rt0.c2), ((((rt0.c2)AND(rt0.c0)))AND(rt0.c0)), rt0.c2, ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c1)), '')))))) GROUP BY rt0.c0, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c1 FROM rt0 WHERE (((((((rt0.c0 IN ()), load_extension(rt0.c2), (~ (rt0.c2)), (~ (0.8785294083466458)), (~ (rt0.c2))))<>((LIKELY(rt0.c2), ((((rt0.c2)AND(rt0.c0)))AND(rt0.c0)), rt0.c2, ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c1)), '')))) ISNULL)) GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c1 FROM vt2, rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM vt2, rt0 GROUP BY rt0.c1 HAVING TOTAL(TOTAL(TOTAL(COUNT(*)))) UNION ALL SELECT rt0.c1 FROM vt2, rt0 GROUP BY rt0.c1 HAVING (NOT (TOTAL(TOTAL(TOTAL(COUNT(*)))))) UNION ALL SELECT ALL rt0.c1 FROM vt2, rt0 GROUP BY rt0.c1 HAVING ((TOTAL(TOTAL(TOTAL(COUNT(*))))) ISNULL);
SELECT vt1.c0 FROM vt2, rt0, vt1;
SELECT ALL vt1.c0 FROM vt2, rt0, vt1 WHERE (HEX((vt2.c0 IN ()))) UNION ALL SELECT ALL vt1.c0 FROM vt2, rt0, vt1 WHERE ((NOT (HEX((vt2.c0 IN ()))))) UNION ALL SELECT vt1.c0 FROM vt2, rt0, vt1 WHERE (((HEX((vt2.c0 IN ()))) ISNULL));
SELECT vt1.c0 FROM vt2, rt0, vt1;
SELECT DISTINCT * FROM rt0 CROSS JOIN vt1 ON ((NULL)=((vt1.c0 IN ())));
SELECT DISTINCT * FROM rt0 CROSS JOIN vt1 ON ((NULL)==((vt1.c0 IN ()))) WHERE ((+ (CASE WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c0 END))) UNION SELECT DISTINCT * FROM rt0 CROSS JOIN vt1 ON ((NULL)==((vt1.c0 IN ()))) WHERE ((NOT ((+ (CASE WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c0 END))))) UNION SELECT DISTINCT * FROM rt0 CROSS JOIN vt1 ON ((NULL)=((vt1.c0 IN ()))) WHERE ((((+ (CASE WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c0 END))) ISNULL));
SELECT DISTINCT * FROM rt0 CROSS JOIN vt1 ON ((NULL)=((vt1.c0 IN ())));
SELECT vt1.c0 FROM vt1 NOT INDEXED GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE (LENGTH(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (LENGTH(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE (((LENGTH(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 NOT INDEXED GROUP BY vt1.c0;
SELECT rt0.c2, vt1.c0 FROM vt1 RIGHT OUTER JOIN vt2 ON ((((((((CAST(rt0.c0 AS TEXT))AND(rt0.c2 COLLATE BINARY)))OR(((rt0.c0)!=('')))))AND(UPPER(rt0.c1))))AND((((vt1.c0))!=((vt2.c0))))) FULL OUTER JOIN rt0 ON (((rt0.c0)) BETWEEN ((x'')) AND (((~ (rt0.c0))))) GROUP BY rt0.c2, vt1.c0;
SELECT * FROM vt2;
SELECT ALL * FROM vt2 WHERE ((((vt2.c0)) NOT BETWEEN ((CAST(vt2.c0 AS NUMERIC))) AND ((x'')))) UNION ALL SELECT * FROM vt2 WHERE ((NOT ((((vt2.c0)) NOT BETWEEN ((CAST(vt2.c0 AS NUMERIC))) AND ((x'')))))) UNION ALL SELECT ALL * FROM vt2 WHERE ((((((vt2.c0)) NOT BETWEEN ((CAST(vt2.c0 AS NUMERIC))) AND ((x'')))) ISNULL));
SELECT * FROM vt2;
SELECT DISTINCT rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c2 FROM rt0 WHERE ((NOT (x''))) UNION SELECT DISTINCT rt0.c2 FROM rt0 WHERE ((NOT ((NOT (x''))))) UNION SELECT DISTINCT rt0.c2 FROM rt0 WHERE ((((NOT (x''))) ISNULL));
SELECT DISTINCT rt0.c2 FROM rt0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE (CAST(((rt0.c0)IS NOT(rt0.c2)) AS NUMERIC)) GROUP BY rt0.c1, rt0.c2, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (CAST(((rt0.c0)IS NOT(rt0.c2)) AS NUMERIC)))) GROUP BY rt0.c1, rt0.c2, rt0.c0 UNION SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE (((CAST(((rt0.c0)IS NOT(rt0.c2)) AS NUMERIC)) ISNULL)) GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c1, vt2.c0 FROM rt0, vt2, vt1 GROUP BY rt0.c1, vt2.c0;
SELECT ALL rt0.c1, vt2.c0 FROM rt0, vt2, vt1 GROUP BY rt0.c1, vt2.c0 HAVING ((((('1181355420', rt0.c0, GROUP_CONCAT(rt0.c2))) NOT BETWEEN ((COUNT(*), MIN(TOTAL(rt0.c0)), rt0.c1)) AND ((rt0.c1, COUNT(*), 0.08578747834682243))))GLOB(AVG(rt0.c1))) UNION ALL SELECT rt0.c1, vt2.c0 FROM rt0, vt2, vt1 GROUP BY rt0.c1, vt2.c0 HAVING (NOT (((((('1181355420', rt0.c0, GROUP_CONCAT(rt0.c2))) NOT BETWEEN ((COUNT(*), MIN(TOTAL(rt0.c0)), rt0.c1)) AND ((rt0.c1, COUNT(*), 0.08578747834682243))))GLOB(AVG(rt0.c1))))) UNION ALL SELECT rt0.c1, vt2.c0 FROM rt0, vt2, vt1 GROUP BY rt0.c1, vt2.c0 HAVING ((((((('1181355420', rt0.c0, GROUP_CONCAT(rt0.c2))) NOT BETWEEN ((COUNT(*), MIN(TOTAL(rt0.c0)), rt0.c1)) AND ((rt0.c1, COUNT(*), 0.08578747834682243))))GLOB(AVG(rt0.c1)))) ISNULL);
SELECT * FROM vt2 RIGHT OUTER JOIN vt1 ON ((NULL) NOT BETWEEN (vt2.c0 COLLATE RTRIM) AND (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt2.c0 END));
SELECT * FROM vt2 RIGHT OUTER JOIN vt1 ON ((NULL) NOT BETWEEN (vt2.c0 COLLATE RTRIM) AND (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt2.c0 END)) WHERE (((vt2.c0 COLLATE BINARY)<>(CAST(0.46671953564303337 AS INTEGER)))) UNION ALL SELECT ALL * FROM vt2 RIGHT OUTER JOIN vt1 ON ((NULL) NOT BETWEEN (vt2.c0 COLLATE RTRIM) AND (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt2.c0 END)) WHERE ((NOT (((vt2.c0 COLLATE BINARY)<>(CAST(0.46671953564303337 AS INTEGER)))))) UNION ALL SELECT ALL * FROM vt2 RIGHT OUTER JOIN vt1 ON ((NULL) NOT BETWEEN (vt2.c0 COLLATE RTRIM) AND (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt2.c0 END)) WHERE (((((vt2.c0 COLLATE BINARY)!=(CAST(0.46671953564303337 AS INTEGER)))) ISNULL));
SELECT * FROM vt2 RIGHT OUTER JOIN vt1 ON ((NULL) NOT BETWEEN (vt2.c0 COLLATE RTRIM) AND (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt2.c0 END));
SELECT DISTINCT * FROM vt1, vt2;
SELECT DISTINCT * FROM vt1, vt2 WHERE (((((vt1.c0)OR(((((vt2.c0)AND(vt2.c0)))AND(vt1.c0)))))OR(vt1.c0))) UNION SELECT DISTINCT * FROM vt1, vt2 WHERE ((NOT (((((vt1.c0)OR(((((vt2.c0)AND(vt2.c0)))AND(vt1.c0)))))OR(vt1.c0))))) UNION SELECT DISTINCT * FROM vt1, vt2 WHERE (((((((vt1.c0)OR(((((vt2.c0)AND(vt2.c0)))AND(vt1.c0)))))OR(vt1.c0))) ISNULL));
SELECT DISTINCT * FROM vt1, vt2;
SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT ALL vt2.c0 FROM vt2 WHERE (((CASE x''  WHEN vt2.c0 THEN '' END)<=((((vt2.c0)) BETWEEN (('382047774')) AND ((vt2.c0)))))) GROUP BY vt2.c0 UNION SELECT ALL vt2.c0 FROM vt2 WHERE ((NOT (((CASE x''  WHEN vt2.c0 THEN '' END)<=((((vt2.c0)) BETWEEN (('382047774')) AND ((vt2.c0)))))))) GROUP BY vt2.c0 UNION SELECT vt2.c0 FROM vt2 WHERE (((((CASE x''  WHEN vt2.c0 THEN '' END)<=((((vt2.c0)) BETWEEN (('382047774')) AND ((vt2.c0)))))) ISNULL)) GROUP BY vt2.c0;
SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT rt0.c1, vt1.c0, rt0.c0 FROM vt2, rt0, vt1 GROUP BY rt0.c1, vt1.c0, rt0.c0;
SELECT rt0.c1, vt1.c0, rt0.c0 FROM vt2, rt0, vt1 GROUP BY rt0.c1, vt1.c0, rt0.c0 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c1, vt1.c0, rt0.c0 FROM vt2, rt0, vt1 GROUP BY rt0.c1, vt1.c0, rt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c1, vt1.c0, rt0.c0 FROM vt2, rt0, vt1 GROUP BY rt0.c1, vt1.c0, rt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c1, vt1.c0, rt0.c0 FROM vt2, rt0, vt1 GROUP BY rt0.c1, vt1.c0, rt0.c0;
SELECT rt0.c1, vt1.c0, rt0.c0 FROM vt2, rt0, vt1 GROUP BY rt0.c1, vt1.c0, rt0.c0 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c1, vt1.c0, rt0.c0 FROM vt2, rt0, vt1 GROUP BY rt0.c1, vt1.c0, rt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c1, vt1.c0, rt0.c0 FROM vt2, rt0, vt1 GROUP BY rt0.c1, vt1.c0, rt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c1, vt1.c0, rt0.c0 FROM vt2, rt0, vt1 GROUP BY rt0.c1, vt1.c0, rt0.c0;
SELECT MIN(-1141197756) FROM rt0, vt1, vt2;
SELECT ALL * FROM vt1, vt2;
SELECT * FROM vt1, vt2 WHERE (CASE WHEN '{y/_vP4(' THEN ((vt2.c0) BETWEEN (vt1.c0) AND (vt2.c0)) END) UNION ALL SELECT * FROM vt1, vt2 WHERE ((NOT (CASE WHEN '{y/_vP4(' THEN ((vt2.c0) BETWEEN (vt1.c0) AND (vt2.c0)) END))) UNION ALL SELECT ALL * FROM vt1, vt2 WHERE (((CASE WHEN '{y/_vP4(' THEN ((vt2.c0) BETWEEN (vt1.c0) AND (vt2.c0)) END) ISNULL));
SELECT ALL * FROM vt1, vt2;
SELECT DISTINCT * FROM vt2 LEFT OUTER JOIN rt0 ON ((CASE WHEN vt1.c0 THEN vt2.c0 END) IS FALSE) CROSS JOIN vt1 ON '\r&';
SELECT ALL rt0.c2, vt1.c0, rt0.c0 FROM vt1 FULL OUTER JOIN rt0 ON CASE ((((rt0.c2)AND(rt0.c0)))AND(rt0.c2))  WHEN vt1.c0 COLLATE RTRIM THEN NULLIF(rt0.c2, rt0.c2) ELSE ((rt0.c1) NOT NULL) END GROUP BY rt0.c2, vt1.c0, rt0.c0;
SELECT rt0.c2, vt1.c0, rt0.c0 FROM vt1 FULL OUTER JOIN rt0 ON CASE ((((rt0.c2)AND(rt0.c0)))AND(rt0.c2))  WHEN vt1.c0 COLLATE RTRIM THEN NULLIF(rt0.c2, rt0.c2) ELSE ((rt0.c1) NOT NULL) END WHERE (((rt0.c2)>(((NULL) BETWEEN (rt0.c2) AND (vt1.c0))))) GROUP BY rt0.c2, vt1.c0, rt0.c0 UNION SELECT ALL rt0.c2, vt1.c0, rt0.c0 FROM vt1 FULL OUTER JOIN rt0 ON CASE ((((rt0.c2)AND(rt0.c0)))AND(rt0.c2))  WHEN vt1.c0 COLLATE RTRIM THEN NULLIF(rt0.c2, rt0.c2) ELSE ((rt0.c1) NOT NULL) END WHERE ((NOT (((rt0.c2)>(((NULL) BETWEEN (rt0.c2) AND (vt1.c0))))))) GROUP BY rt0.c2, vt1.c0, rt0.c0 UNION SELECT ALL rt0.c2, vt1.c0, rt0.c0 FROM vt1 FULL OUTER JOIN rt0 ON CASE ((((rt0.c2)AND(rt0.c0)))AND(rt0.c2))  WHEN vt1.c0 COLLATE RTRIM THEN NULLIF(rt0.c2, rt0.c2) ELSE ((rt0.c1) NOT NULL) END WHERE (((((rt0.c2)>(((NULL) BETWEEN (rt0.c2) AND (vt1.c0))))) ISNULL)) GROUP BY rt0.c2, vt1.c0, rt0.c0;
SELECT ALL rt0.c2, vt1.c0, rt0.c0 FROM vt1 FULL OUTER JOIN rt0 ON CASE ((((rt0.c2)AND(rt0.c0)))AND(rt0.c2))  WHEN vt1.c0 COLLATE RTRIM THEN NULLIF(rt0.c2, rt0.c2) ELSE ((rt0.c1) NOT NULL) END GROUP BY rt0.c2, vt1.c0, rt0.c0;
SELECT ALL rt0.c0, vt1.c0 FROM vt2, rt0, vt1 GROUP BY rt0.c0, vt1.c0;
SELECT ALL rt0.c0, vt1.c0 FROM vt2, rt0, vt1 GROUP BY rt0.c0, vt1.c0 HAVING MIN(SUM(COUNT(*))) UNION ALL SELECT ALL rt0.c0, vt1.c0 FROM vt2, rt0, vt1 GROUP BY rt0.c0, vt1.c0 HAVING (NOT (MIN(SUM(COUNT(*))))) UNION ALL SELECT rt0.c0, vt1.c0 FROM vt2, rt0, vt1 GROUP BY rt0.c0, vt1.c0 HAVING ((MIN(SUM(COUNT(*)))) ISNULL);
SELECT ALL * FROM rt0 LEFT OUTER JOIN vt1 ON ((rt0.c1) NOT BETWEEN ('973723326') AND (vt1.c0)) COLLATE NOCASE LEFT OUTER JOIN vt2 ON ((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2))) NOT BETWEEN (x'') AND (CASE vt1.c0  WHEN vt1.c0 THEN rt0.c1 ELSE rt0.c1 END));
SELECT ALL * FROM rt0 LEFT OUTER JOIN vt1 ON ((rt0.c1) NOT BETWEEN ('973723326') AND (vt1.c0)) COLLATE NOCASE LEFT OUTER JOIN vt2 ON ((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2))) NOT BETWEEN (x'') AND (CASE vt1.c0  WHEN vt1.c0 THEN rt0.c1 ELSE rt0.c1 END)) WHERE (CASE ((vt1.c0) NOT NULL)  WHEN CASE WHEN rt0.c0 THEN vt1.c0 ELSE vt2.c0 END THEN (~ (rt0.c0)) END) UNION ALL SELECT ALL * FROM rt0 LEFT OUTER JOIN vt1 ON ((rt0.c1) NOT BETWEEN ('973723326') AND (vt1.c0)) COLLATE NOCASE LEFT OUTER JOIN vt2 ON ((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2))) NOT BETWEEN (x'') AND (CASE vt1.c0  WHEN vt1.c0 THEN rt0.c1 ELSE rt0.c1 END)) WHERE ((NOT (CASE ((vt1.c0) NOT NULL)  WHEN CASE WHEN rt0.c0 THEN vt1.c0 ELSE vt2.c0 END THEN (~ (rt0.c0)) END))) UNION ALL SELECT * FROM rt0 LEFT OUTER JOIN vt1 ON ((rt0.c1) NOT BETWEEN ('973723326') AND (vt1.c0)) COLLATE NOCASE LEFT OUTER JOIN vt2 ON ((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2))) NOT BETWEEN (x'') AND (CASE vt1.c0  WHEN vt1.c0 THEN rt0.c1 ELSE rt0.c1 END)) WHERE (((CASE ((vt1.c0) NOT NULL)  WHEN CASE WHEN rt0.c0 THEN vt1.c0 ELSE vt2.c0 END THEN (~ (rt0.c0)) END) ISNULL));
SELECT ALL * FROM rt0 LEFT OUTER JOIN vt1 ON ((rt0.c1) NOT BETWEEN ('973723326') AND (vt1.c0)) COLLATE NOCASE LEFT OUTER JOIN vt2 ON ((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2))) NOT BETWEEN (x'') AND (CASE vt1.c0  WHEN vt1.c0 THEN rt0.c1 ELSE rt0.c1 END));
SELECT DISTINCT * FROM vt2, rt0, vt1;
SELECT DISTINCT * FROM vt2, rt0, vt1 WHERE (vt2.c0) UNION SELECT DISTINCT * FROM vt2, rt0, vt1 WHERE ((NOT (vt2.c0))) UNION SELECT DISTINCT * FROM vt2, rt0, vt1 WHERE (((vt2.c0) ISNULL));
SELECT DISTINCT * FROM vt2, rt0, vt1;
SELECT rt0.c1 FROM vt1 CROSS JOIN rt0 ON ((rt0.c2)>=(CASE WHEN vt1.c0 THEN rt0.c0 WHEN rt0.c2 THEN x'' WHEN NULL THEN rt0.c0 END)) GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM vt1 CROSS JOIN rt0 ON ((rt0.c2)>=(CASE WHEN vt1.c0 THEN rt0.c0 WHEN rt0.c2 THEN x'' WHEN NULL THEN rt0.c0 END)) WHERE (LOWER(((vt1.c0)/(-1138250797)))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM vt1 CROSS JOIN rt0 ON ((rt0.c2)>=(CASE WHEN vt1.c0 THEN rt0.c0 WHEN rt0.c2 THEN x'' WHEN NULL THEN rt0.c0 END)) WHERE ((NOT (LOWER(((vt1.c0)/(-1138250797)))))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM vt1 CROSS JOIN rt0 ON ((rt0.c2)>=(CASE WHEN vt1.c0 THEN rt0.c0 WHEN rt0.c2 THEN x'' WHEN NULL THEN rt0.c0 END)) WHERE (((LOWER(((vt1.c0)/(-1138250797)))) ISNULL)) GROUP BY rt0.c1;
SELECT rt0.c1 FROM vt1 CROSS JOIN rt0 ON ((rt0.c2)>=(CASE WHEN vt1.c0 THEN rt0.c0 WHEN rt0.c2 THEN x'' WHEN NULL THEN rt0.c0 END)) GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING SUM(MIN(MAX(MIN(rt0.c2)))) UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT (SUM(MIN(MAX(MIN(rt0.c2)))))) UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING ((SUM(MIN(MAX(MIN(rt0.c2))))) ISNULL);
SELECT ALL * FROM vt2, rt0, vt1;
SELECT * FROM vt2, rt0, vt1 WHERE ((((vt1.c0)) NOT BETWEEN (((((rt0.c2))>((rt0.c0))))) AND (((vt1.c0 IN ()))))) UNION ALL SELECT * FROM vt2, rt0, vt1 WHERE ((NOT ((((vt1.c0)) NOT BETWEEN (((((rt0.c2))>((rt0.c0))))) AND (((vt1.c0 IN ()))))))) UNION ALL SELECT * FROM vt2, rt0, vt1 WHERE ((((((vt1.c0)) NOT BETWEEN (((((rt0.c2))>((rt0.c0))))) AND (((vt1.c0 IN ()))))) ISNULL));
SELECT ALL * FROM vt2, rt0, vt1;
SELECT DISTINCT * FROM vt2 NATURAL JOIN vt1;
SELECT DISTINCT * FROM vt2 NATURAL JOIN vt1 WHERE (((((((((((vt2.c0)OR(vt2.c0)))OR(vt2.c0)))AND(vt2.c0)))OR(vt1.c0)))*(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN x'8bc3' THEN vt1.c0 END))) UNION SELECT DISTINCT * FROM vt2 NATURAL JOIN vt1 WHERE ((NOT (((((((((((vt2.c0)OR(vt2.c0)))OR(vt2.c0)))AND(vt2.c0)))OR(vt1.c0)))*(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN x'8bc3' THEN vt1.c0 END))))) UNION SELECT DISTINCT * FROM vt2 NATURAL JOIN vt1 WHERE (((((((((((((vt2.c0)OR(vt2.c0)))OR(vt2.c0)))AND(vt2.c0)))OR(vt1.c0)))*(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN x'8bc3' THEN vt1.c0 END))) ISNULL));
SELECT DISTINCT * FROM vt2 NATURAL JOIN vt1;
SELECT ALL vt2.c0, rt0.c0 FROM rt0, vt2 GROUP BY vt2.c0, rt0.c0;
SELECT vt2.c0, rt0.c0 FROM rt0, vt2 WHERE (((((((((rt0.c0)AND(vt2.c0)))OR(rt0.c2)))AND((((rt0.c0))>((rt0.c2))))))AND(NULL COLLATE BINARY))) GROUP BY vt2.c0, rt0.c0 UNION SELECT vt2.c0, rt0.c0 FROM rt0, vt2 WHERE ((NOT (((((((((rt0.c0)AND(vt2.c0)))OR(rt0.c2)))AND((((rt0.c0))>((rt0.c2))))))AND(NULL COLLATE BINARY))))) GROUP BY vt2.c0, rt0.c0 UNION SELECT ALL vt2.c0, rt0.c0 FROM rt0, vt2 WHERE (((((((((((rt0.c0)AND(vt2.c0)))OR(rt0.c2)))AND((((rt0.c0))>((rt0.c2))))))AND(NULL COLLATE BINARY))) ISNULL)) GROUP BY vt2.c0, rt0.c0;
SELECT ALL vt2.c0, rt0.c0 FROM rt0, vt2 GROUP BY vt2.c0, rt0.c0;
SELECT vt1.c0, vt2.c0 FROM vt2, vt1 GROUP BY vt1.c0, vt2.c0;
SELECT ALL vt1.c0, vt2.c0 FROM vt2, vt1 GROUP BY vt1.c0, vt2.c0 HAVING TOTAL(GROUP_CONCAT(SUM(vt2.c0))) UNION ALL SELECT vt1.c0, vt2.c0 FROM vt2, vt1 GROUP BY vt1.c0, vt2.c0 HAVING (NOT (TOTAL(GROUP_CONCAT(SUM(vt2.c0))))) UNION ALL SELECT ALL vt1.c0, vt2.c0 FROM vt2, vt1 GROUP BY vt1.c0, vt2.c0 HAVING ((TOTAL(GROUP_CONCAT(SUM(vt2.c0)))) ISNULL);
SELECT ALL * FROM rt0 RIGHT OUTER JOIN vt2 ON ((((((rt0.c2) NOT BETWEEN (vt2.c0) AND (rt0.c0)))OR(json_quote(rt0.c2))))OR(NULLIF(DISTINCT vt2.c0, rt0.c2))) FULL OUTER JOIN vt1 ON load_extension(((vt2.c0) BETWEEN (rt0.c0) AND (rt0.c0)), ((rt0.c1)>(vt1.c0)));
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (CASE CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END  WHEN ((vt1.c0)<(0.15605787847606756)) THEN ((((x'8aff')OR(vt1.c0)))AND(vt1.c0)) WHEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) THEN (+ ('eTaHKs!倌')) WHEN ((vt1.c0)%(vt1.c0)) THEN CASE WHEN vt1.c0 THEN '?_' ELSE vt1.c0 END END) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (CASE CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END  WHEN ((vt1.c0)<(0.15605787847606756)) THEN ((((x'8aff')OR(vt1.c0)))AND(vt1.c0)) WHEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) THEN (+ ('eTaHKs!倌')) WHEN ((vt1.c0)%(vt1.c0)) THEN CASE WHEN vt1.c0 THEN '?_' ELSE vt1.c0 END END))) UNION SELECT DISTINCT * FROM vt1 WHERE (((CASE CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END  WHEN ((vt1.c0)<(0.15605787847606756)) THEN ((((x'8aff')OR(vt1.c0)))AND(vt1.c0)) WHEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) THEN (+ ('eTaHKs!倌')) WHEN ((vt1.c0)%(vt1.c0)) THEN CASE WHEN vt1.c0 THEN '?_' ELSE vt1.c0 END END) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT vt2.c0 FROM vt2 WHERE (((((x'')OR(((vt2.c0) BETWEEN (vt2.c0) AND (vt2.c0)))))OR(((vt2.c0) IS FALSE)))) GROUP BY vt2.c0 UNION SELECT ALL vt2.c0 FROM vt2 WHERE ((NOT (((((x'')OR(((vt2.c0) BETWEEN (vt2.c0) AND (vt2.c0)))))OR(((vt2.c0) IS FALSE)))))) GROUP BY vt2.c0 UNION SELECT vt2.c0 FROM vt2 WHERE (((((((x'')OR(((vt2.c0) BETWEEN (vt2.c0) AND (vt2.c0)))))OR(((vt2.c0) IS FALSE)))) ISNULL)) GROUP BY vt2.c0;
SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING ((COUNT(*)) NOT NULL) UNION ALL SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING (NOT (((COUNT(*)) NOT NULL))) UNION ALL SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING ((((COUNT(*)) NOT NULL)) ISNULL);
SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING ((COUNT(*)) NOT NULL) UNION ALL SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING (NOT (((COUNT(*)) NOT NULL))) UNION ALL SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING ((((COUNT(*)) NOT NULL)) ISNULL);
SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT ALL MAX(vt1.c0) FROM vt2, vt1, rt0;
SELECT ALL * FROM rt0, vt2, vt1;
SELECT ALL * FROM rt0, vt2, vt1 WHERE (((rt0.c0) BETWEEN (1.802568309E9) AND (rt0.c2))) UNION ALL SELECT ALL * FROM rt0, vt2, vt1 WHERE ((NOT (((rt0.c0) BETWEEN (1.802568309E9) AND (rt0.c2))))) UNION ALL SELECT * FROM rt0, vt2, vt1 WHERE (((((rt0.c0) BETWEEN (1.802568309E9) AND (rt0.c2))) ISNULL));
SELECT ALL * FROM rt0, vt2, vt1;
SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0, vt1.c0 FROM vt1, rt0;
SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0, vt1.c0 FROM vt1, rt0 WHERE (((CASE WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c1 END) NOT NULL)) UNION SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0, vt1.c0 FROM vt1, rt0 WHERE ((NOT (((CASE WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c1 END) NOT NULL)))) UNION SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0, vt1.c0 FROM vt1, rt0 WHERE (((((CASE WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c1 END) NOT NULL)) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0, vt1.c0 FROM vt1, rt0;
SELECT ALL rt0.c2, rt0.c0, vt1.c0, rt0.c1 FROM rt0, vt1 GROUP BY rt0.c2, rt0.c0, vt1.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c0, vt1.c0, rt0.c1 FROM rt0, vt1 WHERE ((rt0.c0 IN ())) GROUP BY rt0.c2, rt0.c0, vt1.c0, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c0, vt1.c0, rt0.c1 FROM rt0, vt1 WHERE ((NOT ((rt0.c0 IN ())))) GROUP BY rt0.c2, rt0.c0, vt1.c0, rt0.c1 UNION SELECT rt0.c2, rt0.c0, vt1.c0, rt0.c1 FROM rt0, vt1 WHERE ((((rt0.c0 IN ())) ISNULL)) GROUP BY rt0.c2, rt0.c0, vt1.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c0, vt1.c0, rt0.c1 FROM rt0, vt1 GROUP BY rt0.c2, rt0.c0, vt1.c0, rt0.c1;
SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING MAX(COUNT(MAX(vt2.c0))) UNION ALL SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING (NOT (MAX(COUNT(MAX(vt2.c0))))) UNION ALL SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING ((MAX(COUNT(MAX(vt2.c0)))) ISNULL);
SELECT ALL * FROM vt1;
SELECT ALL * FROM vt1 WHERE (CHAR(NULL)) UNION ALL SELECT ALL * FROM vt1 WHERE ((NOT (CHAR(NULL)))) UNION ALL SELECT * FROM vt1 WHERE (((CHAR(NULL)) ISNULL));
SELECT ALL * FROM vt1;
SELECT DISTINCT * FROM vt2;
SELECT DISTINCT * FROM vt2 WHERE (vt2.c0) UNION SELECT DISTINCT * FROM vt2 NOT INDEXED WHERE ((NOT (vt2.c0))) UNION SELECT DISTINCT * FROM vt2 WHERE (((vt2.c0) ISNULL));
SELECT DISTINCT * FROM vt2;
SELECT vt1.c0, vt2.c0 FROM vt2 RIGHT OUTER JOIN vt1 ON NULL GROUP BY vt1.c0, vt2.c0;
SELECT vt1.c0, vt2.c0 FROM vt2 RIGHT OUTER JOIN vt1 ON NULL WHERE (LIKELIHOOD(((((((((vt2.c0)AND(vt2.c0)))AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)), 0.6409815951097069)) GROUP BY vt1.c0, vt2.c0 UNION SELECT ALL vt1.c0, vt2.c0 FROM vt2 RIGHT OUTER JOIN vt1 ON NULL WHERE ((NOT (LIKELIHOOD(((((((((vt2.c0)AND(vt2.c0)))AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)), 0.6409815951097069)))) GROUP BY vt1.c0, vt2.c0 UNION SELECT ALL vt1.c0, vt2.c0 FROM vt2 RIGHT OUTER JOIN vt1 ON NULL WHERE (((LIKELIHOOD(((((((((vt2.c0)AND(vt2.c0)))AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)), 0.6409815951097069)) ISNULL)) GROUP BY vt1.c0, vt2.c0;
SELECT vt1.c0, vt2.c0 FROM vt2 RIGHT OUTER JOIN vt1 ON NULL GROUP BY vt1.c0, vt2.c0;
SELECT rt0.c2 FROM vt2, rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM vt2, rt0 GROUP BY rt0.c2 HAVING ((((COUNT(MAX(rt0.c0)))OR(rt0.c2)))OR(MIN(vt2.c0))) UNION ALL SELECT rt0.c2 FROM vt2, rt0 GROUP BY rt0.c2 HAVING (NOT (((((COUNT(MAX(rt0.c0)))OR(rt0.c2)))OR(MIN(vt2.c0))))) UNION ALL SELECT rt0.c2 FROM vt2, rt0 GROUP BY rt0.c2 HAVING ((((((COUNT(MAX(rt0.c0)))OR(rt0.c2)))OR(MIN(vt2.c0)))) ISNULL);
SELECT ALL * FROM vt1 INNER JOIN vt2 ON ((NULL) IS FALSE) FULL OUTER JOIN rt0 ON TYPEOF(DISTINCT (((rt0.c2))<=((rt0.c0))));
SELECT * FROM vt1 INNER JOIN vt2 ON ((NULL) IS FALSE) FULL OUTER JOIN rt0 ON TYPEOF(DISTINCT (((rt0.c2))<=((rt0.c0)))) WHERE (((rt0.c2)OR(rt0.c2)) COLLATE RTRIM) UNION ALL SELECT ALL * FROM vt1 INNER JOIN vt2 ON ((NULL) IS FALSE) FULL OUTER JOIN rt0 ON TYPEOF(DISTINCT (((rt0.c2))<=((rt0.c0)))) WHERE ((NOT (((rt0.c2)OR(rt0.c2)) COLLATE RTRIM))) UNION ALL SELECT * FROM vt1 INNER JOIN vt2 ON ((NULL) IS FALSE) FULL OUTER JOIN rt0 ON TYPEOF(DISTINCT (((rt0.c2))<=((rt0.c0)))) WHERE (((((rt0.c2)OR(rt0.c2)) COLLATE RTRIM) ISNULL));
SELECT ALL * FROM vt1 INNER JOIN vt2 ON ((NULL) IS FALSE) FULL OUTER JOIN rt0 ON TYPEOF(DISTINCT (((rt0.c2))<=((rt0.c0))));
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((((x'') ISNULL) IN ())) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((((x'') ISNULL) IN ())))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((((x'') ISNULL) IN ())) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c1, rt0.c0, rt0.c2, vt2.c0 FROM rt0, vt2 GROUP BY rt0.c1, rt0.c0, rt0.c2, vt2.c0;
SELECT rt0.c1, rt0.c0, rt0.c2, vt2.c0 FROM rt0, vt2 WHERE ((~ (((rt0.c2)>=(rt0.c0))))) GROUP BY rt0.c1, rt0.c0, rt0.c2, vt2.c0 UNION SELECT rt0.c1, rt0.c0, rt0.c2, vt2.c0 FROM rt0, vt2 WHERE ((NOT ((~ (((rt0.c2)>=(rt0.c0))))))) GROUP BY rt0.c1, rt0.c0, rt0.c2, vt2.c0 UNION SELECT ALL rt0.c1, rt0.c0, rt0.c2, vt2.c0 FROM rt0, vt2 WHERE ((((~ (((rt0.c2)>=(rt0.c0))))) ISNULL)) GROUP BY rt0.c1, rt0.c0, rt0.c2, vt2.c0;
SELECT rt0.c1, rt0.c0, rt0.c2, vt2.c0 FROM rt0, vt2 GROUP BY rt0.c1, rt0.c0, rt0.c2, vt2.c0;
SELECT vt1.c0, vt2.c0 FROM rt0, vt1 NATURAL JOIN vt2 GROUP BY vt1.c0, vt2.c0;
SELECT vt1.c0, vt2.c0 FROM rt0, vt1 NOT INDEXED NATURAL JOIN vt2 GROUP BY vt1.c0, vt2.c0 HAVING ((AVG(COUNT(*)))OR(((((NULL)AND(vt1.c0)))AND(rt0.c1)))) UNION ALL SELECT vt1.c0, vt2.c0 FROM rt0, vt1 NOT INDEXED NATURAL JOIN vt2 GROUP BY vt1.c0, vt2.c0 HAVING (NOT (((AVG(COUNT(*)))OR(((((NULL)AND(vt1.c0)))AND(rt0.c1)))))) UNION ALL SELECT vt1.c0, vt2.c0 FROM rt0, vt1 NATURAL JOIN vt2 GROUP BY vt1.c0, vt2.c0 HAVING ((((AVG(COUNT(*)))OR(((((NULL)AND(vt1.c0)))AND(rt0.c1))))) ISNULL);
SELECT * FROM rt0, vt2;
SELECT * FROM rt0, vt2 WHERE (((((rt0.c0)LIKE(0.7106363054794694))) ISNULL)) UNION ALL SELECT * FROM rt0, vt2 WHERE ((NOT (((((rt0.c0)LIKE(0.7106363054794694))) ISNULL)))) UNION ALL SELECT * FROM rt0, vt2 WHERE (((((((rt0.c0)LIKE(0.7106363054794694))) ISNULL)) ISNULL));
SELECT * FROM rt0, vt2;
SELECT DISTINCT * FROM vt1 NOT INDEXED FULL OUTER JOIN rt0 ON (((vt2.c0))<=((rt0.c1))) COLLATE NOCASE CROSS JOIN vt2 ON (~ (((vt1.c0)+(vt2.c0))));
SELECT rt0.c1 FROM vt2, rt0 FULL OUTER JOIN vt1 ON (((~ (rt0.c2))) IS FALSE) GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM vt2, rt0 FULL OUTER JOIN vt1 ON (((~ (rt0.c2))) IS FALSE) WHERE (CAST(((vt1.c0) ISNULL) AS INTEGER)) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM vt2, rt0 FULL OUTER JOIN vt1 ON (((~ (rt0.c2))) IS FALSE) WHERE ((NOT (CAST(((vt1.c0) ISNULL) AS INTEGER)))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM vt2, rt0 FULL OUTER JOIN vt1 ON (((~ (rt0.c2))) IS FALSE) WHERE (((CAST(((vt1.c0) ISNULL) AS INTEGER)) ISNULL)) GROUP BY rt0.c1;
SELECT rt0.c1 FROM vt2, rt0 FULL OUTER JOIN vt1 ON (((~ (rt0.c2))) IS FALSE) GROUP BY rt0.c1;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING ((CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END)>=(COUNT(*))) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING (NOT (((CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END)>=(COUNT(*))))) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING ((((CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END)>=(COUNT(*)))) ISNULL);
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING ((CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END)>=(COUNT(*))) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING (NOT (((CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END)>=(COUNT(*))))) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING ((((CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END)>=(COUNT(*)))) ISNULL);
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT * FROM vt2, rt0;
SELECT * FROM vt2 NOT INDEXED, rt0 WHERE (MAX('', rt0.c2 COLLATE NOCASE)) UNION ALL SELECT * FROM vt2, rt0 WHERE ((NOT (MAX('', rt0.c2 COLLATE NOCASE)))) UNION ALL SELECT * FROM vt2, rt0 WHERE (((MAX('', rt0.c2 COLLATE NOCASE)) ISNULL));
SELECT * FROM vt2, rt0;
SELECT DISTINCT * FROM vt2, rt0, vt1;
SELECT DISTINCT * FROM vt2, rt0, vt1 WHERE (CASE TYPEOF(DISTINCT NULL)  WHEN CAST(vt2.c0 AS NUMERIC) THEN 0.08707231797479598 ELSE rt0.c2 COLLATE RTRIM END) UNION SELECT DISTINCT * FROM vt2, rt0, vt1 WHERE ((NOT (CASE TYPEOF(DISTINCT NULL)  WHEN CAST(vt2.c0 AS NUMERIC) THEN 0.08707231797479598 ELSE rt0.c2 COLLATE RTRIM END))) UNION SELECT DISTINCT * FROM vt2, rt0, vt1 WHERE (((CASE TYPEOF(DISTINCT NULL)  WHEN CAST(vt2.c0 AS NUMERIC) THEN 0.08707231797479598 ELSE rt0.c2 COLLATE RTRIM END) ISNULL));
SELECT DISTINCT * FROM vt2, rt0, vt1;
SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT ALL vt2.c0 FROM vt2 WHERE (LIKELIHOOD(DISTINCT ((vt2.c0)|(vt2.c0)), 0.5396786505966333)) GROUP BY vt2.c0 UNION SELECT ALL vt2.c0 FROM vt2 WHERE ((NOT (LIKELIHOOD(DISTINCT ((vt2.c0)|(vt2.c0)), 0.5396786505966333)))) GROUP BY vt2.c0 UNION SELECT ALL vt2.c0 FROM vt2 WHERE (((LIKELIHOOD(DISTINCT ((vt2.c0)|(vt2.c0)), 0.5396786505966333)) ISNULL)) GROUP BY vt2.c0;
SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c2 FROM vt2, rt0;
SELECT rt0.c2 FROM vt2, rt0 WHERE (((rt0.c0 COLLATE BINARY) BETWEEN (MAX(rt0.c1, -951949334)) AND (NULL))) UNION ALL SELECT rt0.c2 FROM vt2, rt0 WHERE ((NOT (((rt0.c0 COLLATE BINARY) BETWEEN (MAX(rt0.c1, -951949334)) AND (NULL))))) UNION ALL SELECT ALL rt0.c2 FROM vt2, rt0 WHERE (((((rt0.c0 COLLATE BINARY) BETWEEN (MAX(rt0.c1, -951949334)) AND (NULL))) ISNULL));
SELECT ALL rt0.c2 FROM vt2, rt0;
SELECT DISTINCT rt0.c0, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c1 FROM rt0 WHERE ('1') UNION SELECT DISTINCT rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT ('1'))) UNION SELECT DISTINCT rt0.c0, rt0.c1 FROM rt0 WHERE ((('1') ISNULL));
SELECT DISTINCT rt0.c0, rt0.c1 FROM rt0;
SELECT ALL rt0.c1, vt1.c0 FROM vt2, rt0, vt1 GROUP BY rt0.c1, vt1.c0;
SELECT ALL rt0.c1, vt1.c0 FROM vt2, rt0, vt1 WHERE (((rt0.c2 IN ()) IN (COALESCE(x'84ea', rt0.c1, vt1.c0, 0.04197336290071085)))) GROUP BY rt0.c1, vt1.c0 UNION SELECT rt0.c1, vt1.c0 FROM vt2, rt0, vt1 WHERE ((NOT (((rt0.c2 IN ()) IN (COALESCE(x'84ea', rt0.c1, vt1.c0, 0.04197336290071085)))))) GROUP BY rt0.c1, vt1.c0 UNION SELECT rt0.c1, vt1.c0 FROM vt2, rt0, vt1 WHERE (((((rt0.c2 IN ()) IN (COALESCE(x'84ea', rt0.c1, vt1.c0, 0.04197336290071085)))) ISNULL)) GROUP BY rt0.c1, vt1.c0;
SELECT ALL rt0.c1, vt1.c0 FROM vt2, rt0, vt1 GROUP BY rt0.c1, vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING GROUP_CONCAT(COUNT(*)) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (GROUP_CONCAT(COUNT(*)))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((GROUP_CONCAT(COUNT(*))) ISNULL);
SELECT * FROM vt1;
SELECT ALL * FROM vt1 WHERE (((((vt1.c0) IS TRUE)) BETWEEN (vt1.c0) AND (CAST(vt1.c0 AS TEXT)))) UNION ALL SELECT ALL * FROM vt1 WHERE ((NOT (((((vt1.c0) IS TRUE)) BETWEEN (vt1.c0) AND (CAST(vt1.c0 AS TEXT)))))) UNION ALL SELECT ALL * FROM vt1 WHERE (((((((vt1.c0) IS TRUE)) BETWEEN (vt1.c0) AND (CAST(vt1.c0 AS TEXT)))) ISNULL));
SELECT * FROM vt1;
SELECT DISTINCT * FROM vt2 NOT INDEXED;
SELECT DISTINCT * FROM vt2 WHERE ((CASE vt2.c0  WHEN vt2.c0 THEN vt2.c0 ELSE '716751120' END IN (((((vt2.c0)OR(vt2.c0)))AND(vt2.c0))))) UNION SELECT DISTINCT * FROM vt2 WHERE ((NOT ((CASE vt2.c0  WHEN vt2.c0 THEN vt2.c0 ELSE '716751120' END IN (((((vt2.c0)OR(vt2.c0)))AND(vt2.c0))))))) UNION SELECT DISTINCT * FROM vt2 WHERE ((((CASE vt2.c0  WHEN vt2.c0 THEN vt2.c0 ELSE '716751120' END IN (((((vt2.c0)OR(vt2.c0)))AND(vt2.c0))))) ISNULL));
SELECT DISTINCT * FROM vt2 NOT INDEXED;
SELECT vt1.c0, vt2.c0, rt0.c0 FROM rt0, vt2, vt1 GROUP BY vt1.c0, vt2.c0, rt0.c0;
SELECT ALL vt1.c0, vt2.c0, rt0.c0 FROM rt0, vt2, vt1 WHERE (((GLOB(vt2.c0, '*?Fz')) BETWEEN (x'b0bd') AND (((((((((rt0.c2)OR(rt0.c0)))OR(rt0.c0)))OR(vt2.c0)))AND(rt0.c2))))) GROUP BY vt1.c0, vt2.c0, rt0.c0 UNION SELECT ALL vt1.c0, vt2.c0, rt0.c0 FROM rt0, vt2, vt1 WHERE ((NOT (((GLOB(vt2.c0, '*?Fz')) BETWEEN (x'b0bd') AND (((((((((rt0.c2)OR(rt0.c0)))OR(rt0.c0)))OR(vt2.c0)))AND(rt0.c2))))))) GROUP BY vt1.c0, vt2.c0, rt0.c0 UNION SELECT vt1.c0, vt2.c0, rt0.c0 FROM rt0, vt2, vt1 WHERE (((((GLOB(vt2.c0, '*?Fz')) BETWEEN (x'b0bd') AND (((((((((rt0.c2)OR(rt0.c0)))OR(rt0.c0)))OR(vt2.c0)))AND(rt0.c2))))) ISNULL)) GROUP BY vt1.c0, vt2.c0, rt0.c0;
SELECT vt1.c0, vt2.c0, rt0.c0 FROM rt0, vt2, vt1 GROUP BY vt1.c0, vt2.c0, rt0.c0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING rt0.c2 UNION ALL SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING (NOT (rt0.c2)) UNION ALL SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING ((rt0.c2) ISNULL);
SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING rt0.c2 UNION ALL SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING (NOT (rt0.c2)) UNION ALL SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING ((rt0.c2) ISNULL);
SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT vt1.c0 FROM vt1;
SELECT ALL vt1.c0 FROM vt1 WHERE (vt1.c0) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (vt1.c0))) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE (((vt1.c0) ISNULL));
SELECT vt1.c0 FROM vt1;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE ((((((((vt1.c0, vt1.c0, vt1.c0))<>((vt1.c0, vt1.c0, vt1.c0))))AND(CAST(vt1.c0 AS BLOB))))AND(CAST(vt1.c0 AS BLOB)))) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT ((((((((vt1.c0, vt1.c0, vt1.c0))<>((vt1.c0, vt1.c0, vt1.c0))))AND(CAST(vt1.c0 AS BLOB))))AND(CAST(vt1.c0 AS BLOB)))))) UNION SELECT DISTINCT * FROM vt1 WHERE ((((((((((vt1.c0, vt1.c0, vt1.c0))<>((vt1.c0, vt1.c0, vt1.c0))))AND(CAST(vt1.c0 AS BLOB))))AND(CAST(vt1.c0 AS BLOB)))) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT vt1.c0, vt2.c0 FROM vt1, vt2 GROUP BY vt1.c0, vt2.c0;
SELECT ALL vt1.c0, vt2.c0 FROM vt1, vt2 WHERE (((CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt2.c0 THEN vt2.c0 WHEN '''Y~bn>' THEN vt1.c0 WHEN vt1.c0 THEN vt2.c0 WHEN 0.5299395538695699 THEN vt1.c0 ELSE vt1.c0 END) BETWEEN (CAST(vt2.c0 AS TEXT)) AND (((vt1.c0) NOTNULL)))) GROUP BY vt1.c0, vt2.c0 UNION SELECT ALL vt1.c0, vt2.c0 FROM vt1, vt2 WHERE ((NOT (((CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt2.c0 THEN vt2.c0 WHEN '''Y~bn>' THEN vt1.c0 WHEN vt1.c0 THEN vt2.c0 WHEN 0.5299395538695699 THEN vt1.c0 ELSE vt1.c0 END) BETWEEN (CAST(vt2.c0 AS TEXT)) AND (((vt1.c0) NOTNULL)))))) GROUP BY vt1.c0, vt2.c0 UNION SELECT vt1.c0, vt2.c0 FROM vt1, vt2 WHERE (((((CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt2.c0 THEN vt2.c0 WHEN '''Y~bn>' THEN vt1.c0 WHEN vt1.c0 THEN vt2.c0 WHEN 0.5299395538695699 THEN vt1.c0 ELSE vt1.c0 END) BETWEEN (CAST(vt2.c0 AS TEXT)) AND (((vt1.c0) NOTNULL)))) ISNULL)) GROUP BY vt1.c0, vt2.c0;
SELECT vt1.c0, vt2.c0 FROM vt1, vt2 GROUP BY vt1.c0, vt2.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING UNLIKELY(AVG(MAX(vt1.c0))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (UNLIKELY(AVG(MAX(vt1.c0))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((UNLIKELY(AVG(MAX(vt1.c0)))) ISNULL);
SELECT ALL * FROM vt2;
SELECT ALL * FROM vt2 WHERE ((CASE WHEN vt2.c0 THEN vt2.c0 ELSE vt2.c0 END IN ())) UNION ALL SELECT * FROM vt2 WHERE ((NOT ((CASE WHEN vt2.c0 THEN vt2.c0 ELSE vt2.c0 END IN ())))) UNION ALL SELECT ALL * FROM vt2 WHERE ((((CASE WHEN vt2.c0 THEN vt2.c0 ELSE vt2.c0 END IN ())) ISNULL));
SELECT ALL * FROM vt2;
SELECT DISTINCT rt0.c0, vt2.c0, rt0.c2 FROM vt1, vt2 INNER JOIN rt0 ON ((((vt1.c0) ISNULL))IS((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2)))));
SELECT DISTINCT rt0.c0, vt2.c0, rt0.c2 FROM vt1, vt2 INNER JOIN rt0 ON ((((vt1.c0) ISNULL))IS((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2))))) WHERE (((((rt0.c2) BETWEEN ('') AND (rt0.c0))) NOT NULL)) UNION SELECT DISTINCT rt0.c0, vt2.c0, rt0.c2 FROM vt1, vt2 INNER JOIN rt0 ON ((((vt1.c0) ISNULL))IS((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2))))) WHERE ((NOT (((((rt0.c2) BETWEEN ('') AND (rt0.c0))) NOT NULL)))) UNION SELECT DISTINCT rt0.c0, vt2.c0, rt0.c2 FROM vt1, vt2 INNER JOIN rt0 ON ((((vt1.c0) ISNULL))IS((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2))))) WHERE (((((((rt0.c2) BETWEEN ('') AND (rt0.c0))) NOT NULL)) ISNULL));
SELECT DISTINCT rt0.c0, vt2.c0, rt0.c2 FROM vt1, vt2 INNER JOIN rt0 ON ((((vt1.c0) ISNULL))IS((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2)))));
SELECT ALL rt0.c2, vt2.c0 FROM vt2, rt0 GROUP BY rt0.c2, vt2.c0;
SELECT ALL rt0.c2, vt2.c0 FROM vt2, rt0 WHERE ((- (((((((((vt2.c0)AND(vt2.c0)))AND(0.26566594451386916)))AND(rt0.c2)))OR(vt2.c0))))) GROUP BY rt0.c2, vt2.c0 UNION SELECT rt0.c2, vt2.c0 FROM vt2, rt0 WHERE ((NOT ((- (((((((((vt2.c0)AND(vt2.c0)))AND(0.26566594451386916)))AND(rt0.c2)))OR(vt2.c0))))))) GROUP BY rt0.c2, vt2.c0 UNION SELECT rt0.c2, vt2.c0 FROM vt2, rt0 WHERE ((((- (((((((((vt2.c0)AND(vt2.c0)))AND(0.26566594451386916)))AND(rt0.c2)))OR(vt2.c0))))) ISNULL)) GROUP BY rt0.c2, vt2.c0;
SELECT ALL rt0.c2, vt2.c0 FROM vt2, rt0 GROUP BY rt0.c2, vt2.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING NULL UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (NULL)) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((NULL) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING NULL UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (NULL)) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((NULL) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL rt0.c1, vt2.c0, rt0.c2 FROM vt1, vt2, rt0;
SELECT rt0.c1, vt2.c0, rt0.c2 FROM vt1, vt2, rt0 WHERE ((CAST(rt0.c2 AS BLOB) IN ())) UNION ALL SELECT rt0.c1, vt2.c0, rt0.c2 FROM vt1, vt2, rt0 WHERE ((NOT ((CAST(rt0.c2 AS BLOB) IN ())))) UNION ALL SELECT ALL rt0.c1, vt2.c0, rt0.c2 FROM vt1, vt2, rt0 WHERE ((((CAST(rt0.c2 AS BLOB) IN ())) ISNULL));
SELECT ALL rt0.c1, vt2.c0, rt0.c2 FROM vt1, vt2, rt0;
SELECT DISTINCT vt2.c0, rt0.c2, rt0.c1 FROM vt1, vt2, rt0;
SELECT DISTINCT vt2.c0, rt0.c2, rt0.c1 FROM vt1, vt2, rt0 WHERE ((NOT (((rt0.c2) ISNULL)))) UNION SELECT DISTINCT vt2.c0, rt0.c2, rt0.c1 FROM vt1, vt2, rt0 WHERE ((NOT ((NOT (((rt0.c2) ISNULL)))))) UNION SELECT DISTINCT vt2.c0, rt0.c2, rt0.c1 FROM vt1, vt2, rt0 WHERE ((((NOT (((rt0.c2) ISNULL)))) ISNULL));
SELECT DISTINCT vt2.c0, rt0.c2, rt0.c1 FROM vt1, vt2, rt0;
SELECT ALL rt0.c2, vt2.c0 FROM vt2, rt0 GROUP BY rt0.c2, vt2.c0;
SELECT ALL rt0.c2, vt2.c0 FROM vt2, rt0 WHERE (((((((vt2.c0)%(vt2.c0)))AND(vt2.c0 COLLATE NOCASE)))AND(((vt2.c0) BETWEEN (rt0.c2) AND (NULL))))) GROUP BY rt0.c2, vt2.c0 UNION SELECT rt0.c2, vt2.c0 FROM vt2, rt0 WHERE ((NOT (((((((vt2.c0)%(vt2.c0)))AND(vt2.c0 COLLATE NOCASE)))AND(((vt2.c0) BETWEEN (rt0.c2) AND (NULL))))))) GROUP BY rt0.c2, vt2.c0 UNION SELECT rt0.c2, vt2.c0 FROM vt2, rt0 WHERE (((((((((vt2.c0)%(vt2.c0)))AND(vt2.c0 COLLATE NOCASE)))AND(((vt2.c0) BETWEEN (rt0.c2) AND (NULL))))) ISNULL)) GROUP BY rt0.c2, vt2.c0;
SELECT ALL rt0.c2, vt2.c0 FROM vt2, rt0 GROUP BY rt0.c2, vt2.c0;
SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING COUNT(*) UNION ALL SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING COUNT(*) UNION ALL SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT ALL SUM(((ABS(DISTINCT vt2.c0))>(CAST(rt0.c2 AS BLOB)))) FROM rt0, vt1, vt2 ORDER BY ((((rt0.c2)LIKE('Qb''.K')))/(-7.01424446E8))  NULLS FIRST;
SELECT rt0.c1 FROM vt2, rt0, vt1;
SELECT ALL rt0.c1 FROM vt2, rt0, vt1 WHERE (((CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END) BETWEEN ((NOT (vt2.c0))) AND ((+ (rt0.c0))))) UNION ALL SELECT rt0.c1 FROM vt2, rt0, vt1 WHERE ((NOT (((CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END) BETWEEN ((NOT (vt2.c0))) AND ((+ (rt0.c0))))))) UNION ALL SELECT rt0.c1 FROM vt2, rt0, vt1 WHERE (((((CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END) BETWEEN ((NOT (vt2.c0))) AND ((+ (rt0.c0))))) ISNULL));
SELECT rt0.c1 FROM vt2, rt0, vt1;
SELECT DISTINCT rt0.c1 FROM rt0, vt1;
SELECT DISTINCT rt0.c1 FROM rt0, vt1 WHERE ((((rt0.c0) NOTNULL) IN ())) UNION SELECT DISTINCT rt0.c1 FROM rt0, vt1 WHERE ((NOT ((((rt0.c0) NOTNULL) IN ())))) UNION SELECT DISTINCT rt0.c1 FROM rt0, vt1 WHERE ((((((rt0.c0) NOTNULL) IN ())) ISNULL));
SELECT DISTINCT rt0.c1 FROM rt0, vt1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 WHERE ((- ((+ (rt0.c1))))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0 WHERE ((NOT ((- ((+ (rt0.c1))))))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0 WHERE ((((- ((+ (rt0.c1))))) ISNULL)) GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING (~ (CAST(vt2.c0 AS TEXT))) UNION ALL SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING (NOT ((~ (CAST(vt2.c0 AS TEXT))))) UNION ALL SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING (((~ (CAST(vt2.c0 AS TEXT)))) ISNULL);
SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING (~ (CAST(vt2.c0 AS TEXT))) UNION ALL SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING (NOT ((~ (CAST(vt2.c0 AS TEXT))))) UNION ALL SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING (((~ (CAST(vt2.c0 AS TEXT)))) ISNULL);
SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT * FROM vt1, rt0;
SELECT ALL * FROM vt1, rt0 WHERE ((((CASE WHEN vt1.c0 THEN rt0.c1 END))>((rt0.c2 COLLATE BINARY)))) UNION ALL SELECT ALL * FROM vt1, rt0 WHERE ((NOT ((((CASE WHEN vt1.c0 THEN rt0.c1 END))>((rt0.c2 COLLATE BINARY)))))) UNION ALL SELECT * FROM vt1, rt0 WHERE ((((((CASE WHEN vt1.c0 THEN rt0.c1 END))>((rt0.c2 COLLATE BINARY)))) ISNULL));
SELECT * FROM vt1, rt0;
SELECT DISTINCT vt2.c0, rt0.c2 FROM vt2, rt0;
SELECT DISTINCT vt2.c0, rt0.c2 FROM vt2, rt0 WHERE (ABS(((((rt0.c2)AND(rt0.c1)))OR('9490617')))) UNION SELECT DISTINCT vt2.c0, rt0.c2 FROM vt2, rt0 WHERE ((NOT (ABS(((((rt0.c2)AND(rt0.c1)))OR('9490617')))))) UNION SELECT DISTINCT vt2.c0, rt0.c2 FROM vt2, rt0 WHERE (((ABS(((((rt0.c2)AND(rt0.c1)))OR('9490617')))) ISNULL));
SELECT DISTINCT vt2.c0, rt0.c2 FROM vt2, rt0;
SELECT ALL vt2.c0 FROM rt0 INNER JOIN vt2 ON CASE WHEN (vt1.c0 IN (vt2.c0, rt0.c1)) THEN (((vt2.c0, rt0.c1, rt0.c2)) BETWEEN ((rt0.c1, rt0.c0, vt2.c0)) AND ((vt2.c0, vt1.c0, rt0.c1))) ELSE CASE vt1.c0  WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN vt1.c0 END END FULL OUTER JOIN vt1 ON ((((rt0.c1)OR(rt0.c0)))LIKE((x'' IN (rt0.c0, rt0.c1)))) GROUP BY vt2.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((((COUNT(*))) BETWEEN ((GROUP_CONCAT(AVG(vt1.c0)))) AND ((SUM(MAX(vt1.c0))))) IN (vt1.c0)) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (((((COUNT(*))) BETWEEN ((GROUP_CONCAT(AVG(vt1.c0)))) AND ((SUM(MAX(vt1.c0))))) IN (vt1.c0)))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((((((COUNT(*))) BETWEEN ((GROUP_CONCAT(AVG(vt1.c0)))) AND ((SUM(MAX(vt1.c0))))) IN (vt1.c0))) ISNULL);
SELECT ALL vt2.c0 FROM vt2;
SELECT ALL vt2.c0 FROM vt2 WHERE (SUBSTR(((vt2.c0) BETWEEN (vt2.c0) AND (vt2.c0)), vt2.c0)) UNION ALL SELECT vt2.c0 FROM vt2 WHERE ((NOT (SUBSTR(((vt2.c0) BETWEEN (vt2.c0) AND (vt2.c0)), vt2.c0)))) UNION ALL SELECT vt2.c0 FROM vt2 NOT INDEXED WHERE (((SUBSTR(((vt2.c0) BETWEEN (vt2.c0) AND (vt2.c0)), vt2.c0)) ISNULL));
SELECT ALL vt2.c0 FROM vt2;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (CASE NULL  WHEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) THEN (((vt1.c0))==((584869158))) END) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (CASE NULL  WHEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) THEN (((vt1.c0))=((584869158))) END))) UNION SELECT DISTINCT * FROM vt1 WHERE (((CASE NULL  WHEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) THEN (((vt1.c0))==((584869158))) END) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT ALL vt2.c0, rt0.c2 FROM rt0, vt1, vt2 GROUP BY vt2.c0, rt0.c2;
SELECT ALL vt2.c0, rt0.c2 FROM rt0, vt1, vt2 WHERE (NULL) GROUP BY vt2.c0, rt0.c2 UNION SELECT ALL vt2.c0, rt0.c2 FROM rt0, vt1, vt2 WHERE ((NOT (NULL))) GROUP BY vt2.c0, rt0.c2 UNION SELECT vt2.c0, rt0.c2 FROM rt0, vt1, vt2 WHERE (((NULL) ISNULL)) GROUP BY vt2.c0, rt0.c2;
SELECT ALL vt2.c0, rt0.c2 FROM rt0, vt1, vt2 GROUP BY vt2.c0, rt0.c2;
SELECT vt2.c0 FROM vt2, vt1, rt0 GROUP BY vt2.c0;
SELECT ALL vt2.c0 FROM vt2, vt1, rt0 GROUP BY vt2.c0 HAVING MAX(((rt0.c0)!=(GROUP_CONCAT(AVG(TOTAL(AVG(rt0.c2))))))) UNION ALL SELECT vt2.c0 FROM vt2, vt1, rt0 GROUP BY vt2.c0 HAVING (NOT (MAX(((rt0.c0)<>(GROUP_CONCAT(AVG(TOTAL(AVG(rt0.c2))))))))) UNION ALL SELECT vt2.c0 FROM vt2, vt1, rt0 GROUP BY vt2.c0 HAVING ((MAX(((rt0.c0)!=(GROUP_CONCAT(AVG(TOTAL(AVG(rt0.c2)))))))) ISNULL);
SELECT ALL rt0.c0, rt0.c2, vt2.c0 FROM vt2, rt0;
SELECT ALL rt0.c0, rt0.c2, vt2.c0 FROM vt2, rt0 WHERE (((((rt0.c0)GLOB(vt2.c0)))%(((rt0.c1)>=(0Xffffffffccd0f3b2))))) UNION ALL SELECT ALL rt0.c0, rt0.c2, vt2.c0 FROM vt2, rt0 WHERE ((NOT (((((rt0.c0)GLOB(vt2.c0)))%(((rt0.c1)>=(0xffffffffccd0f3b2))))))) UNION ALL SELECT rt0.c0, rt0.c2, vt2.c0 FROM vt2, rt0 WHERE (((((((rt0.c0)GLOB(vt2.c0)))%(((rt0.c1)>=(0Xffffffffccd0f3b2))))) ISNULL));
SELECT ALL rt0.c0, rt0.c2, vt2.c0 FROM vt2, rt0;
SELECT DISTINCT * FROM vt2 FULL OUTER JOIN vt1 ON (((vt1.c0)) BETWEEN ((((rt0.c0)+(vt1.c0)))) AND ((0.26316962365952434 COLLATE BINARY))) LEFT OUTER JOIN rt0 ON (((rt0.c0 IN ()))==(((((((((vt1.c0)AND(vt1.c0)))AND(-8.58721358E8)))AND(vt1.c0)))AND(rt0.c0))));
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE (((rt0.c2 COLLATE NOCASE) NOT NULL)) GROUP BY rt0.c1, rt0.c2, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (((rt0.c2 COLLATE NOCASE) NOT NULL)))) GROUP BY rt0.c1, rt0.c2, rt0.c0 UNION SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE (((((rt0.c2 COLLATE NOCASE) NOT NULL)) ISNULL)) GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING (~ (MAX(vt2.c0))) UNION ALL SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING (NOT ((~ (MAX(vt2.c0))))) UNION ALL SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING (((~ (MAX(vt2.c0)))) ISNULL);
SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING (~ (MAX(vt2.c0))) UNION ALL SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING (NOT ((~ (MAX(vt2.c0))))) UNION ALL SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING (((~ (MAX(vt2.c0)))) ISNULL);
SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT ALL * FROM vt1;
SELECT * FROM vt1 WHERE (CASE WHEN CASE WHEN vt1.c0 THEN 0.10553621025819537 END THEN NULL ELSE (('-2061777344')==(vt1.c0)) END) UNION ALL SELECT ALL * FROM vt1 WHERE ((NOT (CASE WHEN CASE WHEN vt1.c0 THEN 0.10553621025819537 END THEN NULL ELSE (('-2061777344')==(vt1.c0)) END))) UNION ALL SELECT ALL * FROM vt1 WHERE (((CASE WHEN CASE WHEN vt1.c0 THEN 0.10553621025819537 END THEN NULL ELSE (('-2061777344')=(vt1.c0)) END) ISNULL));
SELECT ALL * FROM vt1;
SELECT DISTINCT rt0.c1 FROM rt0 LEFT OUTER JOIN vt2 ON COALESCE(DISTINCT rt0.c1, rt0.c1) COLLATE NOCASE;
SELECT DISTINCT rt0.c1 FROM rt0 LEFT OUTER JOIN vt2 ON COALESCE(DISTINCT rt0.c1, rt0.c1) COLLATE NOCASE WHERE (((vt2.c0) BETWEEN (rt0.c0) AND (rt0.c2)) COLLATE NOCASE) UNION SELECT DISTINCT rt0.c1 FROM rt0 LEFT OUTER JOIN vt2 ON COALESCE(DISTINCT rt0.c1, rt0.c1) COLLATE NOCASE WHERE ((NOT (((vt2.c0) BETWEEN (rt0.c0) AND (rt0.c2)) COLLATE NOCASE))) UNION SELECT DISTINCT rt0.c1 FROM rt0 LEFT OUTER JOIN vt2 ON COALESCE(DISTINCT rt0.c1, rt0.c1) COLLATE NOCASE WHERE (((((vt2.c0) BETWEEN (rt0.c0) AND (rt0.c2)) COLLATE NOCASE) ISNULL));
SELECT DISTINCT rt0.c1 FROM rt0 LEFT OUTER JOIN vt2 ON COALESCE(DISTINCT rt0.c1, rt0.c1) COLLATE NOCASE;
SELECT ALL rt0.c2, rt0.c1 FROM vt2, rt0 GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM vt2, rt0 WHERE (((((rt0.c1)AND(((rt0.c2)|(vt2.c0)))))AND((- (rt0.c1))))) GROUP BY rt0.c2, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c1 FROM vt2, rt0 WHERE ((NOT (((((rt0.c1)AND(((rt0.c2)|(vt2.c0)))))AND((- (rt0.c1))))))) GROUP BY rt0.c2, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c1 FROM vt2, rt0 WHERE (((((((rt0.c1)AND(((rt0.c2)|(vt2.c0)))))AND((- (rt0.c1))))) ISNULL)) GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM vt2, rt0 GROUP BY rt0.c2, rt0.c1;
SELECT ALL vt1.c0 FROM vt2 LEFT OUTER JOIN vt1 ON NULL GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt2 LEFT OUTER JOIN vt1 ON NULL GROUP BY vt1.c0 HAVING TOTAL(CAST(MAX(TOTAL(TOTAL(vt1.c0))) AS BLOB)) UNION ALL SELECT vt1.c0 FROM vt2 LEFT OUTER JOIN vt1 ON NULL GROUP BY vt1.c0 HAVING (NOT (TOTAL(CAST(MAX(TOTAL(TOTAL(vt1.c0))) AS BLOB)))) UNION ALL SELECT vt1.c0 FROM vt2 LEFT OUTER JOIN vt1 ON NULL GROUP BY vt1.c0 HAVING ((TOTAL(CAST(MAX(TOTAL(TOTAL(vt1.c0))) AS BLOB))) ISNULL);
SELECT ALL * FROM vt1, vt2;
SELECT ALL * FROM vt1, vt2 WHERE (CASE WHEN vt1.c0 COLLATE BINARY THEN ((vt1.c0)%(vt1.c0)) WHEN (((vt2.c0)) BETWEEN ((vt2.c0)) AND ((vt2.c0))) THEN vt2.c0 WHEN ((vt2.c0) ISNULL) THEN CASE '-1719348229'  WHEN vt1.c0 THEN vt1.c0 ELSE vt2.c0 END ELSE 'bK5M\nb1L' END) UNION ALL SELECT ALL * FROM vt1, vt2 WHERE ((NOT (CASE WHEN vt1.c0 COLLATE BINARY THEN ((vt1.c0)%(vt1.c0)) WHEN (((vt2.c0)) BETWEEN ((vt2.c0)) AND ((vt2.c0))) THEN vt2.c0 WHEN ((vt2.c0) ISNULL) THEN CASE '-1719348229'  WHEN vt1.c0 THEN vt1.c0 ELSE vt2.c0 END ELSE 'bK5M\nb1L' END))) UNION ALL SELECT ALL * FROM vt1, vt2 WHERE (((CASE WHEN vt1.c0 COLLATE BINARY THEN ((vt1.c0)%(vt1.c0)) WHEN (((vt2.c0)) BETWEEN ((vt2.c0)) AND ((vt2.c0))) THEN vt2.c0 WHEN ((vt2.c0) ISNULL) THEN CASE '-1719348229'  WHEN vt1.c0 THEN vt1.c0 ELSE vt2.c0 END ELSE 'bK5M\nb1L' END) ISNULL));
SELECT ALL * FROM vt1, vt2;
SELECT DISTINCT * FROM rt0, vt2;
SELECT DISTINCT * FROM rt0, vt2 WHERE (((NOT (vt2.c0)) IN (((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c0))))) UNION SELECT DISTINCT * FROM rt0, vt2 WHERE ((NOT (((NOT (vt2.c0)) IN (((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c0))))))) UNION SELECT DISTINCT * FROM rt0, vt2 WHERE (((((NOT (vt2.c0)) IN (((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c0))))) ISNULL));
SELECT DISTINCT * FROM rt0, vt2;
SELECT ALL rt0.c2, vt2.c0 FROM vt1, vt2, rt0 GROUP BY rt0.c2, vt2.c0;
SELECT rt0.c2, vt2.c0 FROM vt1, vt2, rt0 WHERE ((((((rt0.c0, rt0.c0, rt0.c0)) BETWEEN ((vt2.c0, rt0.c0, rt0.c2)) AND (('', rt0.c1, rt0.c1))))LIKE(CASE 'NP{&'  WHEN vt2.c0 THEN rt0.c0 ELSE rt0.c0 END))) GROUP BY rt0.c2, vt2.c0 UNION SELECT rt0.c2, vt2.c0 FROM vt1, vt2, rt0 WHERE ((NOT ((((((rt0.c0, rt0.c0, rt0.c0)) BETWEEN ((vt2.c0, rt0.c0, rt0.c2)) AND (('', rt0.c1, rt0.c1))))LIKE(CASE 'NP{&'  WHEN vt2.c0 THEN rt0.c0 ELSE rt0.c0 END))))) GROUP BY rt0.c2, vt2.c0 UNION SELECT ALL rt0.c2, vt2.c0 FROM vt1, vt2, rt0 WHERE ((((((((rt0.c0, rt0.c0, rt0.c0)) BETWEEN ((vt2.c0, rt0.c0, rt0.c2)) AND (('', rt0.c1, rt0.c1))))LIKE(CASE 'NP{&'  WHEN vt2.c0 THEN rt0.c0 ELSE rt0.c0 END))) ISNULL)) GROUP BY rt0.c2, vt2.c0;
SELECT ALL rt0.c2, vt2.c0 FROM vt1, vt2, rt0 GROUP BY rt0.c2, vt2.c0;
SELECT rt0.c1, vt1.c0, vt2.c0, rt0.c0 FROM vt1, vt2, rt0 GROUP BY rt0.c1, vt1.c0, vt2.c0, rt0.c0;
SELECT rt0.c1, vt1.c0, vt2.c0, rt0.c0 FROM vt1, vt2, rt0 GROUP BY rt0.c1, vt1.c0, vt2.c0, rt0.c0 HAVING UPPER(DISTINCT rt0.c0) COLLATE NOCASE UNION ALL SELECT ALL rt0.c1, vt1.c0, vt2.c0, rt0.c0 FROM vt1, vt2, rt0 GROUP BY rt0.c1, vt1.c0, vt2.c0, rt0.c0 HAVING (NOT (UPPER(DISTINCT rt0.c0) COLLATE NOCASE)) UNION ALL SELECT ALL rt0.c1, vt1.c0, vt2.c0, rt0.c0 FROM vt1, vt2, rt0 GROUP BY rt0.c1, vt1.c0, vt2.c0, rt0.c0 HAVING ((UPPER(DISTINCT rt0.c0) COLLATE NOCASE) ISNULL);
SELECT rt0.c1, vt1.c0, vt2.c0, rt0.c0 FROM vt1, vt2, rt0 GROUP BY rt0.c1, vt1.c0, vt2.c0, rt0.c0;
SELECT rt0.c1, vt1.c0, vt2.c0, rt0.c0 FROM vt1, vt2, rt0 GROUP BY rt0.c1, vt1.c0, vt2.c0, rt0.c0 HAVING UPPER(DISTINCT rt0.c0) COLLATE NOCASE UNION ALL SELECT ALL rt0.c1, vt1.c0, vt2.c0, rt0.c0 FROM vt1, vt2, rt0 GROUP BY rt0.c1, vt1.c0, vt2.c0, rt0.c0 HAVING (NOT (UPPER(DISTINCT rt0.c0) COLLATE NOCASE)) UNION ALL SELECT ALL rt0.c1, vt1.c0, vt2.c0, rt0.c0 FROM vt1, vt2, rt0 GROUP BY rt0.c1, vt1.c0, vt2.c0, rt0.c0 HAVING ((UPPER(DISTINCT rt0.c0) COLLATE NOCASE) ISNULL);
SELECT rt0.c1, vt1.c0, vt2.c0, rt0.c0 FROM vt1, vt2, rt0 GROUP BY rt0.c1, vt1.c0, vt2.c0, rt0.c0;
SELECT rt0.c0, rt0.c2 FROM rt0;
SELECT rt0.c0, rt0.c2 FROM rt0 WHERE (((IFNULL(rt0.c0, rt0.c2)) IS TRUE)) UNION ALL SELECT rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (((IFNULL(rt0.c0, rt0.c2)) IS TRUE)))) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt0 WHERE (((((IFNULL(rt0.c0, rt0.c2)) IS TRUE)) ISNULL));
SELECT rt0.c0, rt0.c2 FROM rt0;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (((((vt1.c0)&(vt1.c0))) NOT NULL)) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (((((vt1.c0)&(vt1.c0))) NOT NULL)))) UNION SELECT DISTINCT * FROM vt1 WHERE (((((((vt1.c0)&(vt1.c0))) NOT NULL)) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT rt0.c2, rt0.c0, vt1.c0 FROM vt1, rt0 GROUP BY rt0.c2, rt0.c0, vt1.c0;
SELECT ALL rt0.c2, rt0.c0, vt1.c0 FROM vt1, rt0 WHERE ((CAST(rt0.c0 AS BLOB) IN ())) GROUP BY rt0.c2, rt0.c0, vt1.c0 UNION SELECT rt0.c2, rt0.c0, vt1.c0 FROM vt1, rt0 WHERE ((NOT ((CAST(rt0.c0 AS BLOB) IN ())))) GROUP BY rt0.c2, rt0.c0, vt1.c0 UNION SELECT rt0.c2, rt0.c0, vt1.c0 FROM vt1, rt0 WHERE ((((CAST(rt0.c0 AS BLOB) IN ())) ISNULL)) GROUP BY rt0.c2, rt0.c0, vt1.c0;
SELECT rt0.c2, rt0.c0, vt1.c0 FROM vt1, rt0 GROUP BY rt0.c2, rt0.c0, vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (((((('')OR(vt1.c0)))AND(MAX(vt1.c0))))|(TOTAL(AVG(vt1.c0)))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT ((((((('')OR(vt1.c0)))AND(MAX(vt1.c0))))|(TOTAL(AVG(vt1.c0)))))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (((((((('')OR(vt1.c0)))AND(MAX(vt1.c0))))|(TOTAL(AVG(vt1.c0))))) ISNULL);
SELECT rt0.c1, rt0.c2 FROM vt1, rt0;
SELECT rt0.c1, rt0.c2 FROM vt1, rt0 WHERE ((((rt0.c2 COLLATE BINARY, ((vt1.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)), ((((((((rt0.c0)OR(rt0.c0)))AND(rt0.c2)))AND('1181355420')))OR('I_t'))))<=((((((NULL)AND(rt0.c0)))OR(vt1.c0)), ((vt1.c0)+(vt1.c0)), ((rt0.c2)+(rt0.c2)))))) UNION ALL SELECT rt0.c1, rt0.c2 FROM vt1, rt0 WHERE ((NOT ((((rt0.c2 COLLATE BINARY, ((vt1.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)), ((((((((rt0.c0)OR(rt0.c0)))AND(rt0.c2)))AND('1181355420')))OR('I_t'))))<=((((((NULL)AND(rt0.c0)))OR(vt1.c0)), ((vt1.c0)+(vt1.c0)), ((rt0.c2)+(rt0.c2)))))))) UNION ALL SELECT ALL rt0.c1, rt0.c2 FROM vt1, rt0 WHERE ((((((rt0.c2 COLLATE BINARY, ((vt1.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)), ((((((((rt0.c0)OR(rt0.c0)))AND(rt0.c2)))AND('1181355420')))OR('I_t'))))<=((((((NULL)AND(rt0.c0)))OR(vt1.c0)), ((vt1.c0)+(vt1.c0)), ((rt0.c2)+(rt0.c2)))))) ISNULL));
SELECT rt0.c1, rt0.c2 FROM vt1, rt0;
SELECT DISTINCT * FROM vt1, vt2;
SELECT DISTINCT * FROM vt1, vt2 WHERE (CASE LOWER(vt1.c0)  WHEN vt1.c0 THEN ((vt1.c0) BETWEEN (vt2.c0) AND (vt1.c0)) WHEN CAST(vt2.c0 AS BLOB) THEN vt2.c0 COLLATE BINARY WHEN ((vt1.c0) NOT NULL) THEN (vt1.c0 IN ()) ELSE ((((((((vt2.c0)AND(vt2.c0)))AND(vt1.c0)))AND(vt2.c0)))AND(vt1.c0)) END) UNION SELECT DISTINCT * FROM vt1, vt2 WHERE ((NOT (CASE LOWER(vt1.c0)  WHEN vt1.c0 THEN ((vt1.c0) BETWEEN (vt2.c0) AND (vt1.c0)) WHEN CAST(vt2.c0 AS BLOB) THEN vt2.c0 COLLATE BINARY WHEN ((vt1.c0) NOT NULL) THEN (vt1.c0 IN ()) ELSE ((((((((vt2.c0)AND(vt2.c0)))AND(vt1.c0)))AND(vt2.c0)))AND(vt1.c0)) END))) UNION SELECT DISTINCT * FROM vt1, vt2 WHERE (((CASE LOWER(vt1.c0)  WHEN vt1.c0 THEN ((vt1.c0) BETWEEN (vt2.c0) AND (vt1.c0)) WHEN CAST(vt2.c0 AS BLOB) THEN vt2.c0 COLLATE BINARY WHEN ((vt1.c0) NOT NULL) THEN (vt1.c0 IN ()) ELSE ((((((((vt2.c0)AND(vt2.c0)))AND(vt1.c0)))AND(vt2.c0)))AND(vt1.c0)) END) ISNULL));
SELECT DISTINCT * FROM vt1, vt2;
SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT vt2.c0 FROM vt2 WHERE ((((vt2.c0, vt2.c0, vt2.c0, vt2.c0, vt2.c0)) NOT BETWEEN ((vt2.c0, vt2.c0, ((vt2.c0) NOTNULL), ((vt2.c0) BETWEEN (vt2.c0) AND (vt2.c0)), '娗e')) AND ((((vt2.c0) IS TRUE), CAST(vt2.c0 AS NUMERIC), ((((-1687727407)OR(vt2.c0)))OR(vt2.c0)), ((('u,6q|H', vt2.c0, vt2.c0)) BETWEEN (('527989388', vt2.c0, vt2.c0)) AND ((vt2.c0, vt2.c0, vt2.c0))), ((vt2.c0)>=(vt2.c0)))))) GROUP BY vt2.c0 UNION SELECT ALL vt2.c0 FROM vt2 WHERE ((NOT ((((vt2.c0, vt2.c0, vt2.c0, vt2.c0, vt2.c0)) NOT BETWEEN ((vt2.c0, vt2.c0, ((vt2.c0) NOTNULL), ((vt2.c0) BETWEEN (vt2.c0) AND (vt2.c0)), '娗e')) AND ((((vt2.c0) IS TRUE), CAST(vt2.c0 AS NUMERIC), ((((-1687727407)OR(vt2.c0)))OR(vt2.c0)), ((('u,6q|H', vt2.c0, vt2.c0)) BETWEEN (('527989388', vt2.c0, vt2.c0)) AND ((vt2.c0, vt2.c0, vt2.c0))), ((vt2.c0)>=(vt2.c0)))))))) GROUP BY vt2.c0 UNION SELECT ALL vt2.c0 FROM vt2 WHERE ((((((vt2.c0, vt2.c0, vt2.c0, vt2.c0, vt2.c0)) NOT BETWEEN ((vt2.c0, vt2.c0, ((vt2.c0) NOTNULL), ((vt2.c0) BETWEEN (vt2.c0) AND (vt2.c0)), '娗e')) AND ((((vt2.c0) IS TRUE), CAST(vt2.c0 AS NUMERIC), ((((-1687727407)OR(vt2.c0)))OR(vt2.c0)), ((('u,6q|H', vt2.c0, vt2.c0)) BETWEEN (('527989388', vt2.c0, vt2.c0)) AND ((vt2.c0, vt2.c0, vt2.c0))), ((vt2.c0)>=(vt2.c0)))))) ISNULL)) GROUP BY vt2.c0;
SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT ALL vt1.c0, vt2.c0 FROM vt2, vt1 GROUP BY vt1.c0, vt2.c0;
SELECT vt1.c0, vt2.c0 FROM vt2, vt1 GROUP BY vt1.c0, vt2.c0 HAVING MIN(CASE COUNT(TOTAL(vt2.c0))  WHEN vt2.c0 THEN vt1.c0 WHEN vt2.c0 THEN vt2.c0 WHEN '-591921279' THEN vt2.c0 WHEN TOTAL(vt2.c0) THEN vt2.c0 WHEN SUM(vt1.c0) THEN AVG(vt2.c0) END) UNION ALL SELECT ALL vt1.c0, vt2.c0 FROM vt2, vt1 GROUP BY vt1.c0, vt2.c0 HAVING (NOT (MIN(CASE COUNT(TOTAL(vt2.c0))  WHEN vt2.c0 THEN vt1.c0 WHEN vt2.c0 THEN vt2.c0 WHEN '-591921279' THEN vt2.c0 WHEN TOTAL(vt2.c0) THEN vt2.c0 WHEN SUM(vt1.c0) THEN AVG(vt2.c0) END))) UNION ALL SELECT vt1.c0, vt2.c0 FROM vt2, vt1 GROUP BY vt1.c0, vt2.c0 HAVING ((MIN(CASE COUNT(TOTAL(vt2.c0))  WHEN vt2.c0 THEN vt1.c0 WHEN vt2.c0 THEN vt2.c0 WHEN '-591921279' THEN vt2.c0 WHEN TOTAL(vt2.c0) THEN vt2.c0 WHEN SUM(vt1.c0) THEN AVG(vt2.c0) END)) ISNULL);
SELECT ALL * FROM rt0, vt2, vt1;
SELECT * FROM rt0, vt2, vt1 WHERE ((((rt0.c2)) NOT BETWEEN ((((((rt0.c2)OR(vt1.c0)))AND(rt0.c2)))) AND ((((rt0.c1) NOT NULL))))) UNION ALL SELECT ALL * FROM rt0, vt2, vt1 WHERE ((NOT ((((rt0.c2)) NOT BETWEEN ((((((rt0.c2)OR(vt1.c0)))AND(rt0.c2)))) AND ((((rt0.c1) NOT NULL))))))) UNION ALL SELECT * FROM rt0, vt2, vt1 WHERE ((((((rt0.c2)) NOT BETWEEN ((((((rt0.c2)OR(vt1.c0)))AND(rt0.c2)))) AND ((((rt0.c1) NOT NULL))))) ISNULL));
SELECT ALL * FROM rt0, vt2, vt1;
SELECT DISTINCT * FROM vt2;
SELECT DISTINCT * FROM vt2 WHERE (x'6e38') UNION SELECT DISTINCT * FROM vt2 WHERE ((NOT (x'6e38'))) UNION SELECT DISTINCT * FROM vt2 WHERE (((x'6e38') ISNULL));
SELECT DISTINCT * FROM vt2;
SELECT ALL rt0.c0 FROM vt2, rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM vt2, rt0 WHERE (((((x'')IS NOT(rt0.c2)))==(((rt0.c0)OR('r_Mj'))))) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM vt2, rt0 WHERE ((NOT (((((x'')IS NOT(rt0.c2)))==(((rt0.c0)OR('r_Mj'))))))) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM vt2, rt0 WHERE (((((((x'')IS NOT(rt0.c2)))=(((rt0.c0)OR('r_Mj'))))) ISNULL)) GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM vt2, rt0 GROUP BY rt0.c0;
SELECT vt1.c0 FROM vt1, vt2 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 NOT INDEXED, vt2 GROUP BY vt1.c0 HAVING LOWER(vt1.c0) UNION ALL SELECT vt1.c0 FROM vt1, vt2 GROUP BY vt1.c0 HAVING (NOT (LOWER(vt1.c0))) UNION ALL SELECT ALL vt1.c0 FROM vt1, vt2 GROUP BY vt1.c0 HAVING ((LOWER(vt1.c0)) ISNULL);
SELECT vt1.c0 FROM vt1, vt2 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 NOT INDEXED, vt2 GROUP BY vt1.c0 HAVING LOWER(vt1.c0) UNION ALL SELECT vt1.c0 FROM vt1, vt2 GROUP BY vt1.c0 HAVING (NOT (LOWER(vt1.c0))) UNION ALL SELECT ALL vt1.c0 FROM vt1, vt2 GROUP BY vt1.c0 HAVING ((LOWER(vt1.c0)) ISNULL);
SELECT vt1.c0 FROM vt1, vt2 GROUP BY vt1.c0;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE (CAST((((rt0.c0, rt0.c2, rt0.c0)) NOT BETWEEN ((rt0.c1, rt0.c1, rt0.c0)) AND ((rt0.c1, '1595547634', rt0.c2))) AS BLOB)) UNION ALL SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (CAST((((rt0.c0, rt0.c2, rt0.c0)) NOT BETWEEN ((rt0.c1, rt0.c1, rt0.c0)) AND ((rt0.c1, '1595547634', rt0.c2))) AS BLOB)))) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE (((CAST((((rt0.c0, rt0.c2, rt0.c0)) NOT BETWEEN ((rt0.c1, rt0.c1, rt0.c0)) AND ((rt0.c1, '1595547634', rt0.c2))) AS BLOB)) ISNULL));
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0;
SELECT DISTINCT * FROM vt1, rt0 INNER JOIN vt2 ON LIKELIHOOD((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((rt0.c2))), 0.4649345674720379);
SELECT DISTINCT * FROM vt1, rt0 INNER JOIN vt2 ON LIKELIHOOD((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((rt0.c2))), 0.4649345674720379) WHERE ('931599435') UNION SELECT DISTINCT * FROM vt1, rt0 INNER JOIN vt2 ON LIKELIHOOD((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((rt0.c2))), 0.4649345674720379) WHERE ((NOT ('931599435'))) UNION SELECT DISTINCT * FROM vt1, rt0 INNER JOIN vt2 ON LIKELIHOOD((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((rt0.c2))), 0.4649345674720379) WHERE ((('931599435') ISNULL));
SELECT DISTINCT * FROM vt1, rt0 INNER JOIN vt2 ON LIKELIHOOD((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((rt0.c2))), 0.4649345674720379);
SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT ALL vt2.c0 FROM vt2 WHERE (((CASE WHEN vt2.c0 THEN vt2.c0 END)>=((vt2.c0 IN ())))) GROUP BY vt2.c0 UNION SELECT ALL vt2.c0 FROM vt2 WHERE ((NOT (((CASE WHEN vt2.c0 THEN vt2.c0 END)>=((vt2.c0 IN ())))))) GROUP BY vt2.c0 UNION SELECT vt2.c0 FROM vt2 WHERE (((((CASE WHEN vt2.c0 THEN vt2.c0 END)>=((vt2.c0 IN ())))) ISNULL)) GROUP BY vt2.c0;
SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT ALL rt0.c1, rt0.c2 FROM vt2, rt0 NOT INDEXED GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c1, rt0.c2 FROM vt2, rt0 GROUP BY rt0.c1, rt0.c2 HAVING GROUP_CONCAT(((rt0.c2)GLOB(TOTAL(vt2.c0)))) UNION ALL SELECT ALL rt0.c1, rt0.c2 FROM vt2, rt0 GROUP BY rt0.c1, rt0.c2 HAVING (NOT (GROUP_CONCAT(((rt0.c2)GLOB(TOTAL(vt2.c0)))))) UNION ALL SELECT rt0.c1, rt0.c2 FROM vt2, rt0 GROUP BY rt0.c1, rt0.c2 HAVING ((GROUP_CONCAT(((rt0.c2)GLOB(TOTAL(vt2.c0))))) ISNULL);
SELECT * FROM rt0, vt1;
SELECT * FROM rt0, vt1 WHERE (CASE WHEN ((vt1.c0)GLOB('-2005938459')) THEN CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN vt1.c0 WHEN rt0.c2 THEN NULL ELSE rt0.c2 END END) UNION ALL SELECT * FROM rt0, vt1 WHERE ((NOT (CASE WHEN ((vt1.c0)GLOB('-2005938459')) THEN CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN vt1.c0 WHEN rt0.c2 THEN NULL ELSE rt0.c2 END END))) UNION ALL SELECT * FROM rt0, vt1 WHERE (((CASE WHEN ((vt1.c0)GLOB('-2005938459')) THEN CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN vt1.c0 WHEN rt0.c2 THEN NULL ELSE rt0.c2 END END) ISNULL));
SELECT * FROM rt0, vt1;
SELECT DISTINCT * FROM vt2;
SELECT DISTINCT * FROM vt2 WHERE ((CAST(vt2.c0 AS REAL) IN (((vt2.c0)GLOB(vt2.c0)), (~ (vt2.c0))))) UNION SELECT DISTINCT * FROM vt2 WHERE ((NOT ((CAST(vt2.c0 AS REAL) IN (((vt2.c0)GLOB(vt2.c0)), (~ (vt2.c0))))))) UNION SELECT DISTINCT * FROM vt2 WHERE ((((CAST(vt2.c0 AS REAL) IN (((vt2.c0)GLOB(vt2.c0)), (~ (vt2.c0))))) ISNULL));
SELECT DISTINCT * FROM vt2;
SELECT ALL vt2.c0 FROM vt1, vt2 GROUP BY vt2.c0;
SELECT vt2.c0 FROM vt1, vt2 WHERE (CASE WHEN ((vt1.c0) NOT BETWEEN (vt2.c0) AND (vt2.c0)) THEN vt2.c0 COLLATE RTRIM WHEN (- (vt1.c0)) THEN (vt2.c0 IN ()) WHEN '1508401084' THEN (vt1.c0 IN (vt2.c0)) END) GROUP BY vt2.c0 UNION SELECT vt2.c0 FROM vt1, vt2 WHERE ((NOT (CASE WHEN ((vt1.c0) NOT BETWEEN (vt2.c0) AND (vt2.c0)) THEN vt2.c0 COLLATE RTRIM WHEN (- (vt1.c0)) THEN (vt2.c0 IN ()) WHEN '1508401084' THEN (vt1.c0 IN (vt2.c0)) END))) GROUP BY vt2.c0 UNION SELECT vt2.c0 FROM vt1, vt2 WHERE (((CASE WHEN ((vt1.c0) NOT BETWEEN (vt2.c0) AND (vt2.c0)) THEN vt2.c0 COLLATE RTRIM WHEN (- (vt1.c0)) THEN (vt2.c0 IN ()) WHEN '1508401084' THEN (vt1.c0 IN (vt2.c0)) END) ISNULL)) GROUP BY vt2.c0;
SELECT ALL vt2.c0 FROM vt1, vt2 GROUP BY vt2.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING COUNT(*) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING COUNT(*) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL * FROM vt1;
SELECT * FROM vt1 WHERE ((((vt1.c0) ISNULL) IN ())) UNION ALL SELECT ALL * FROM vt1 WHERE ((NOT ((((vt1.c0) ISNULL) IN ())))) UNION ALL SELECT * FROM vt1 WHERE ((((((vt1.c0) ISNULL) IN ())) ISNULL));
SELECT ALL * FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((((vt1.c0) IS TRUE))-(CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN '-530785508' WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT (((((vt1.c0) IS TRUE))-(CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN '-530785508' WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((((((vt1.c0) IS TRUE))-(CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN '-530785508' WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 WHERE ((((rt0.c1)) NOT BETWEEN ((PRINTF(0x5480e171, rt0.c1, rt0.c2))) AND ((CAST(rt0.c1 AS REAL))))) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM rt0 WHERE ((NOT ((((rt0.c1)) NOT BETWEEN ((PRINTF(0X5480e171, rt0.c1, rt0.c2))) AND ((CAST(rt0.c1 AS REAL))))))) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM rt0 WHERE ((((((rt0.c1)) NOT BETWEEN ((PRINTF(0x5480e171, rt0.c1, rt0.c2))) AND ((CAST(rt0.c1 AS REAL))))) ISNULL)) GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL vt1.c0, rt0.c1, rt0.c2, vt2.c0 FROM vt2, rt0, vt1 GROUP BY vt1.c0, rt0.c1, rt0.c2, vt2.c0;
SELECT ALL vt1.c0, rt0.c1, rt0.c2, vt2.c0 FROM vt2, rt0, vt1 GROUP BY vt1.c0, rt0.c1, rt0.c2, vt2.c0 HAVING vt2.c0 UNION ALL SELECT vt1.c0, rt0.c1, rt0.c2, vt2.c0 FROM vt2, rt0, vt1 GROUP BY vt1.c0, rt0.c1, rt0.c2, vt2.c0 HAVING (NOT (vt2.c0)) UNION ALL SELECT vt1.c0, rt0.c1, rt0.c2, vt2.c0 FROM vt2, rt0, vt1 GROUP BY vt1.c0, rt0.c1, rt0.c2, vt2.c0 HAVING ((vt2.c0) ISNULL);
SELECT ALL vt1.c0, rt0.c1, rt0.c2, vt2.c0 FROM vt2, rt0, vt1 GROUP BY vt1.c0, rt0.c1, rt0.c2, vt2.c0;
SELECT ALL vt1.c0, rt0.c1, rt0.c2, vt2.c0 FROM vt2, rt0, vt1 GROUP BY vt1.c0, rt0.c1, rt0.c2, vt2.c0 HAVING vt2.c0 UNION ALL SELECT vt1.c0, rt0.c1, rt0.c2, vt2.c0 FROM vt2, rt0, vt1 GROUP BY vt1.c0, rt0.c1, rt0.c2, vt2.c0 HAVING (NOT (vt2.c0)) UNION ALL SELECT vt1.c0, rt0.c1, rt0.c2, vt2.c0 FROM vt2, rt0, vt1 GROUP BY vt1.c0, rt0.c1, rt0.c2, vt2.c0 HAVING ((vt2.c0) ISNULL);
SELECT ALL vt1.c0, rt0.c1, rt0.c2, vt2.c0 FROM vt2, rt0, vt1 GROUP BY vt1.c0, rt0.c1, rt0.c2, vt2.c0;
SELECT ALL rt0.c1, rt0.c2, vt1.c0, vt2.c0 FROM vt2, vt1, rt0;
SELECT rt0.c1, rt0.c2, vt1.c0, vt2.c0 FROM vt2, vt1, rt0 WHERE ((((rt0.c1 IN ())) IS TRUE)) UNION ALL SELECT rt0.c1, rt0.c2, vt1.c0, vt2.c0 FROM vt2, vt1, rt0 WHERE ((NOT ((((rt0.c1 IN ())) IS TRUE)))) UNION ALL SELECT ALL rt0.c1, rt0.c2, vt1.c0, vt2.c0 FROM vt2, vt1, rt0 WHERE ((((((rt0.c1 IN ())) IS TRUE)) ISNULL));
SELECT ALL rt0.c1, rt0.c2, vt1.c0, vt2.c0 FROM vt2, vt1, rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (json_quote((rt0.c2 IN ()))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (json_quote((rt0.c2 IN ()))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((json_quote((rt0.c2 IN ()))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c2, rt0.c1 FROM rt0, vt1 GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 NOT INDEXED, vt1 WHERE (CASE WHEN rt0.c1 THEN (NOT (rt0.c1)) WHEN '' THEN rt0.c0 COLLATE RTRIM WHEN CAST(rt0.c2 AS REAL) THEN ('603073972' IN (vt1.c0)) END) GROUP BY rt0.c2, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c1 FROM rt0, vt1 WHERE ((NOT (CASE WHEN rt0.c1 THEN (NOT (rt0.c1)) WHEN '' THEN rt0.c0 COLLATE RTRIM WHEN CAST(rt0.c2 AS REAL) THEN ('603073972' IN (vt1.c0)) END))) GROUP BY rt0.c2, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c1 FROM rt0, vt1 WHERE (((CASE WHEN rt0.c1 THEN (NOT (rt0.c1)) WHEN '' THEN rt0.c0 COLLATE RTRIM WHEN CAST(rt0.c2 AS REAL) THEN ('603073972' IN (vt1.c0)) END) ISNULL)) GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c2, rt0.c1 FROM rt0, vt1 GROUP BY rt0.c2, rt0.c1;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING -146279727 UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (-146279727)) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((-146279727) ISNULL);
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING -146279727 UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (-146279727)) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((-146279727) ISNULL);
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt2.c0 FROM vt2 NOT INDEXED;
SELECT ALL vt2.c0 FROM vt2 WHERE ((((vt2.c0)) BETWEEN ((((vt2.c0) NOTNULL))) AND (((- (vt2.c0)))))) UNION ALL SELECT ALL vt2.c0 FROM vt2 WHERE ((NOT ((((vt2.c0)) BETWEEN ((((vt2.c0) NOTNULL))) AND (((- (vt2.c0)))))))) UNION ALL SELECT vt2.c0 FROM vt2 WHERE ((((((vt2.c0)) BETWEEN ((((vt2.c0) NOTNULL))) AND (((- (vt2.c0)))))) ISNULL));
SELECT ALL vt2.c0 FROM vt2 NOT INDEXED;
SELECT DISTINCT * FROM rt0, vt1 RIGHT OUTER JOIN vt2 ON (((((((((((rt0.c2)OR(vt1.c0)))OR(vt2.c0)))AND(rt0.c1)))OR(vt1.c0))))<>((((rt0.c2) ISNULL))));
SELECT DISTINCT * FROM rt0, vt1 RIGHT OUTER JOIN vt2 ON (((((((((((rt0.c2)OR(vt1.c0)))OR(vt2.c0)))AND(rt0.c1)))OR(vt1.c0))))!=((((rt0.c2) ISNULL)))) WHERE ('527989388') UNION SELECT DISTINCT * FROM rt0, vt1 RIGHT OUTER JOIN vt2 ON (((((((((((rt0.c2)OR(vt1.c0)))OR(vt2.c0)))AND(rt0.c1)))OR(vt1.c0))))<>((((rt0.c2) ISNULL)))) WHERE ((NOT ('527989388'))) UNION SELECT DISTINCT * FROM rt0, vt1 RIGHT OUTER JOIN vt2 ON (((((((((((rt0.c2)OR(vt1.c0)))OR(vt2.c0)))AND(rt0.c1)))OR(vt1.c0))))!=((((rt0.c2) ISNULL)))) WHERE ((('527989388') ISNULL));
SELECT DISTINCT * FROM rt0, vt1 RIGHT OUTER JOIN vt2 ON (((((((((((rt0.c2)OR(vt1.c0)))OR(vt2.c0)))AND(rt0.c1)))OR(vt1.c0))))<>((((rt0.c2) ISNULL))));
SELECT vt2.c0 FROM vt2, rt0 GROUP BY vt2.c0;
SELECT ALL vt2.c0 FROM vt2, rt0 WHERE (((rt0.c1)>=(-1798464304)) COLLATE RTRIM) GROUP BY vt2.c0 UNION SELECT vt2.c0 FROM vt2, rt0 WHERE ((NOT (((rt0.c1)>=(-1798464304)) COLLATE RTRIM))) GROUP BY vt2.c0 UNION SELECT ALL vt2.c0 FROM vt2, rt0 WHERE (((((rt0.c1)>=(-1798464304)) COLLATE RTRIM) ISNULL)) GROUP BY vt2.c0;
SELECT vt2.c0 FROM vt2, rt0 GROUP BY vt2.c0;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING GROUP_CONCAT(COUNT(*)) UNION ALL SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING (NOT (GROUP_CONCAT(COUNT(*)))) UNION ALL SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING ((GROUP_CONCAT(COUNT(*))) ISNULL);
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE (rt0.c1 COLLATE NOCASE) UNION ALL SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (rt0.c1 COLLATE NOCASE))) UNION ALL SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE (((rt0.c1 COLLATE NOCASE) ISNULL));
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE (COALESCE(DISTINCT (vt1.c0 IN (vt1.c0)), ('2081309268' IN ()), (((vt1.c0))>((vt1.c0))), CASE WHEN vt1.c0 THEN vt1.c0 END)) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT (COALESCE(DISTINCT (vt1.c0 IN (vt1.c0)), ('2081309268' IN ()), (((vt1.c0))>((vt1.c0))), CASE WHEN vt1.c0 THEN vt1.c0 END)))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((COALESCE(DISTINCT (vt1.c0 IN (vt1.c0)), ('2081309268' IN ()), (((vt1.c0))>((vt1.c0))), CASE WHEN vt1.c0 THEN vt1.c0 END)) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT ALL vt1.c0, vt2.c0 FROM vt1, vt2 GROUP BY vt1.c0, vt2.c0;
SELECT ALL vt1.c0, vt2.c0 FROM vt1, vt2 WHERE (CAST((+ (NULL)) AS INTEGER)) GROUP BY vt1.c0, vt2.c0 UNION SELECT vt1.c0, vt2.c0 FROM vt1, vt2 WHERE ((NOT (CAST((+ (NULL)) AS INTEGER)))) GROUP BY vt1.c0, vt2.c0 UNION SELECT vt1.c0, vt2.c0 FROM vt1, vt2 WHERE (((CAST((+ (NULL)) AS INTEGER)) ISNULL)) GROUP BY vt1.c0, vt2.c0;
SELECT ALL vt1.c0, vt2.c0 FROM vt1, vt2 GROUP BY vt1.c0, vt2.c0;
SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT ALL vt1.c0, rt0.c2 FROM rt0, vt1;
SELECT vt1.c0, rt0.c2 FROM rt0, vt1 WHERE (((((rt0.c2)IS(rt0.c2)))IS NOT(((vt1.c0)AND(rt0.c0))))) UNION ALL SELECT vt1.c0, rt0.c2 FROM rt0, vt1 WHERE ((NOT (((((rt0.c2)IS(rt0.c2)))IS NOT(((vt1.c0)AND(rt0.c0))))))) UNION ALL SELECT vt1.c0, rt0.c2 FROM rt0, vt1 WHERE (((((((rt0.c2)IS(rt0.c2)))IS NOT(((vt1.c0)AND(rt0.c0))))) ISNULL));
SELECT ALL vt1.c0, rt0.c2 FROM rt0, vt1;
SELECT DISTINCT * FROM vt2;
SELECT DISTINCT * FROM vt2 WHERE (CAST(DATE(vt2.c0, vt2.c0, vt2.c0) AS NUMERIC)) UNION SELECT DISTINCT * FROM vt2 WHERE ((NOT (CAST(DATE(vt2.c0, vt2.c0, vt2.c0) AS NUMERIC)))) UNION SELECT DISTINCT * FROM vt2 WHERE (((CAST(DATE(vt2.c0, vt2.c0, vt2.c0) AS NUMERIC)) ISNULL));
SELECT DISTINCT * FROM vt2;
SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 WHERE (0.16731290998121773) GROUP BY rt0.c2, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (0.16731290998121773))) GROUP BY rt0.c2, rt0.c1 UNION SELECT rt0.c2, rt0.c1 FROM rt0 WHERE (((0.16731290998121773) ISNULL)) GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c0, rt0.c2, vt1.c0, rt0.c1, vt2.c0 FROM rt0, vt2, vt1 GROUP BY rt0.c0, rt0.c2, vt1.c0, rt0.c1, vt2.c0;
SELECT rt0.c0, rt0.c2, vt1.c0, rt0.c1, vt2.c0 FROM rt0, vt2, vt1 GROUP BY rt0.c0, rt0.c2, vt1.c0, rt0.c1, vt2.c0 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c0, rt0.c2, vt1.c0, rt0.c1, vt2.c0 FROM rt0, vt2, vt1 GROUP BY rt0.c0, rt0.c2, vt1.c0, rt0.c1, vt2.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c0, rt0.c2, vt1.c0, rt0.c1, vt2.c0 FROM rt0, vt2, vt1 GROUP BY rt0.c0, rt0.c2, vt1.c0, rt0.c1, vt2.c0 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c0, rt0.c2, vt1.c0, rt0.c1, vt2.c0 FROM rt0, vt2, vt1 GROUP BY rt0.c0, rt0.c2, vt1.c0, rt0.c1, vt2.c0;
SELECT rt0.c0, rt0.c2, vt1.c0, rt0.c1, vt2.c0 FROM rt0, vt2, vt1 GROUP BY rt0.c0, rt0.c2, vt1.c0, rt0.c1, vt2.c0 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c0, rt0.c2, vt1.c0, rt0.c1, vt2.c0 FROM rt0, vt2, vt1 GROUP BY rt0.c0, rt0.c2, vt1.c0, rt0.c1, vt2.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c0, rt0.c2, vt1.c0, rt0.c1, vt2.c0 FROM rt0, vt2, vt1 GROUP BY rt0.c0, rt0.c2, vt1.c0, rt0.c1, vt2.c0 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c0, rt0.c2, vt1.c0, rt0.c1, vt2.c0 FROM rt0, vt2, vt1 GROUP BY rt0.c0, rt0.c2, vt1.c0, rt0.c1, vt2.c0;
SELECT rt0.c1, vt2.c0, vt1.c0 FROM rt0, vt2, vt1;
SELECT ALL rt0.c1, vt2.c0, vt1.c0 FROM rt0, vt2, vt1 WHERE (DATE(((((rt0.c2)OR(rt0.c1)))OR(vt1.c0)), CAST(vt2.c0 AS TEXT), CAST(rt0.c2 AS NUMERIC))) UNION ALL SELECT ALL rt0.c1, vt2.c0, vt1.c0 FROM rt0, vt2, vt1 WHERE ((NOT (DATE(((((rt0.c2)OR(rt0.c1)))OR(vt1.c0)), CAST(vt2.c0 AS TEXT), CAST(rt0.c2 AS NUMERIC))))) UNION ALL SELECT rt0.c1, vt2.c0, vt1.c0 FROM rt0, vt2, vt1 WHERE (((DATE(((((rt0.c2)OR(rt0.c1)))OR(vt1.c0)), CAST(vt2.c0 AS TEXT), CAST(rt0.c2 AS NUMERIC))) ISNULL));
SELECT rt0.c1, vt2.c0, vt1.c0 FROM rt0, vt2, vt1;
SELECT DISTINCT * FROM vt1 RIGHT OUTER JOIN vt2 ON CASE ((rt0.c1)%(vt2.c0))  WHEN NULL THEN IFNULL(rt0.c2, rt0.c0) WHEN '-312345429' THEN rt0.c1 COLLATE BINARY WHEN CAST(vt2.c0 AS TEXT) THEN 0xfffffffff1e54f3c ELSE ((rt0.c2) ISNULL) END LEFT OUTER JOIN rt0 ON (+ ((rt0.c1 IN ())));
SELECT ALL vt1.c0, vt2.c0 FROM vt2, vt1 GROUP BY vt1.c0, vt2.c0;
SELECT vt1.c0, vt2.c0 FROM vt2, vt1 WHERE (LOWER(vt2.c0 COLLATE RTRIM)) GROUP BY vt1.c0, vt2.c0 UNION SELECT ALL vt1.c0, vt2.c0 FROM vt2, vt1 WHERE ((NOT (LOWER(vt2.c0 COLLATE RTRIM)))) GROUP BY vt1.c0, vt2.c0 UNION SELECT vt1.c0, vt2.c0 FROM vt2, vt1 WHERE (((LOWER(vt2.c0 COLLATE RTRIM)) ISNULL)) GROUP BY vt1.c0, vt2.c0;
SELECT ALL vt1.c0, vt2.c0 FROM vt2, vt1 GROUP BY vt1.c0, vt2.c0;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 INNER JOIN vt2 ON (- ((rt0.c1 IN (rt0.c0)))) GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 INNER JOIN vt2 ON (- ((rt0.c1 IN (rt0.c0)))) GROUP BY rt0.c2, rt0.c1 HAVING ((COUNT(*)) ISNULL) UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM rt0 INNER JOIN vt2 ON (- ((rt0.c1 IN (rt0.c0)))) GROUP BY rt0.c2, rt0.c1 HAVING (NOT (((COUNT(*)) ISNULL))) UNION ALL SELECT rt0.c2, rt0.c1 FROM rt0 INNER JOIN vt2 ON (- ((rt0.c1 IN (rt0.c0)))) GROUP BY rt0.c2, rt0.c1 HAVING ((((COUNT(*)) ISNULL)) ISNULL);
SELECT ALL rt0.c2, rt0.c1 FROM rt0 INNER JOIN vt2 ON (- ((rt0.c1 IN (rt0.c0)))) GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 INNER JOIN vt2 ON (- ((rt0.c1 IN (rt0.c0)))) GROUP BY rt0.c2, rt0.c1 HAVING ((COUNT(*)) ISNULL) UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM rt0 INNER JOIN vt2 ON (- ((rt0.c1 IN (rt0.c0)))) GROUP BY rt0.c2, rt0.c1 HAVING (NOT (((COUNT(*)) ISNULL))) UNION ALL SELECT rt0.c2, rt0.c1 FROM rt0 INNER JOIN vt2 ON (- ((rt0.c1 IN (rt0.c0)))) GROUP BY rt0.c2, rt0.c1 HAVING ((((COUNT(*)) ISNULL)) ISNULL);
SELECT ALL rt0.c2, rt0.c1 FROM rt0 INNER JOIN vt2 ON (- ((rt0.c1 IN (rt0.c0)))) GROUP BY rt0.c2, rt0.c1;
SELECT ALL TOTAL((((rt0.c1, CAST(rt0.c0 AS NUMERIC), (~ (vt2.c0))))=((((vt2.c0)-(rt0.c0)), (NOT (rt0.c0)), IFNULL(rt0.c2, rt0.c1))))) FROM rt0, vt1, vt2;
SELECT ALL vt2.c0 FROM vt2;
SELECT ALL vt2.c0 FROM vt2 WHERE (((((vt2.c0) NOT BETWEEN (vt2.c0) AND (vt2.c0)))>(((vt2.c0)!=(vt2.c0))))) UNION ALL SELECT vt2.c0 FROM vt2 WHERE ((NOT (((((vt2.c0) NOT BETWEEN (vt2.c0) AND (vt2.c0)))>(((vt2.c0)!=(vt2.c0))))))) UNION ALL SELECT ALL vt2.c0 FROM vt2 WHERE (((((((vt2.c0) NOT BETWEEN (vt2.c0) AND (vt2.c0)))>(((vt2.c0)<>(vt2.c0))))) ISNULL));
SELECT ALL vt2.c0 FROM vt2;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT (ABS(DISTINCT vt1.c0)))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT ((NOT (ABS(DISTINCT vt1.c0)))))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((((NOT (ABS(DISTINCT vt1.c0)))) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 WHERE (((rt0.c1 COLLATE RTRIM) NOT BETWEEN (UNLIKELY(rt0.c2)) AND (rt0.c1))) GROUP BY rt0.c0, rt0.c1 UNION SELECT rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (((rt0.c1 COLLATE RTRIM) NOT BETWEEN (UNLIKELY(rt0.c2)) AND (rt0.c1))))) GROUP BY rt0.c0, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c1 FROM rt0 WHERE (((((rt0.c1 COLLATE RTRIM) NOT BETWEEN (UNLIKELY(rt0.c2)) AND (rt0.c1))) ISNULL)) GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL vt2.c0, vt1.c0 FROM vt1 CROSS JOIN vt2 ON ((((vt2.c0)*(vt2.c0))) NOT BETWEEN (vt1.c0) AND (((vt2.c0) NOTNULL))) GROUP BY vt2.c0, vt1.c0;
SELECT ALL vt2.c0, vt1.c0 FROM vt1 CROSS JOIN vt2 ON ((((vt2.c0)*(vt2.c0))) NOT BETWEEN (vt1.c0) AND (((vt2.c0) NOTNULL))) GROUP BY vt2.c0, vt1.c0 HAVING GROUP_CONCAT(TOTAL(MAX(GROUP_CONCAT(COUNT(vt2.c0))))) UNION ALL SELECT ALL vt2.c0, vt1.c0 FROM vt1 CROSS JOIN vt2 ON ((((vt2.c0)*(vt2.c0))) NOT BETWEEN (vt1.c0) AND (((vt2.c0) NOTNULL))) GROUP BY vt2.c0, vt1.c0 HAVING (NOT (GROUP_CONCAT(TOTAL(MAX(GROUP_CONCAT(COUNT(vt2.c0))))))) UNION ALL SELECT vt2.c0, vt1.c0 FROM vt1 CROSS JOIN vt2 ON ((((vt2.c0)*(vt2.c0))) NOT BETWEEN (vt1.c0) AND (((vt2.c0) NOTNULL))) GROUP BY vt2.c0, vt1.c0 HAVING ((GROUP_CONCAT(TOTAL(MAX(GROUP_CONCAT(COUNT(vt2.c0)))))) ISNULL);
SELECT ALL rt0.c0 FROM rt0;
SELECT rt0.c0 FROM rt0 WHERE ((((rt0.c0)) BETWEEN (((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c1))))) AND ((rt0.c2 COLLATE NOCASE)))) UNION ALL SELECT ALL rt0.c0 FROM rt0 WHERE ((NOT ((((rt0.c0)) BETWEEN (((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c1))))) AND ((rt0.c2 COLLATE NOCASE)))))) UNION ALL SELECT ALL rt0.c0 FROM rt0 WHERE ((((((rt0.c0)) BETWEEN (((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c1))))) AND ((rt0.c2 COLLATE NOCASE)))) ISNULL));
SELECT ALL rt0.c0 FROM rt0;
SELECT DISTINCT * FROM rt0 RIGHT OUTER JOIN vt2 ON ('-415150068' IN ());
SELECT DISTINCT * FROM rt0 RIGHT OUTER JOIN vt2 ON ('-415150068' IN ()) WHERE ((((+ (rt0.c0)))||(((rt0.c0)<<(rt0.c2))))) UNION SELECT DISTINCT * FROM rt0 RIGHT OUTER JOIN vt2 ON ('-415150068' IN ()) WHERE ((NOT ((((+ (rt0.c0)))||(((rt0.c0)<<(rt0.c2))))))) UNION SELECT DISTINCT * FROM rt0 RIGHT OUTER JOIN vt2 ON ('-415150068' IN ()) WHERE ((((((+ (rt0.c0)))||(((rt0.c0)<<(rt0.c2))))) ISNULL));
SELECT DISTINCT * FROM rt0 RIGHT OUTER JOIN vt2 ON ('-415150068' IN ());
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 WHERE ((rt0.c2 IN (rt0.c1)) COLLATE RTRIM) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0 WHERE ((NOT ((rt0.c2 IN (rt0.c1)) COLLATE RTRIM))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0 WHERE ((((rt0.c2 IN (rt0.c1)) COLLATE RTRIM) ISNULL)) GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING GROUP_CONCAT(((MAX(vt1.c0)) ISNULL)) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (GROUP_CONCAT(((MAX(vt1.c0)) ISNULL)))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((GROUP_CONCAT(((MAX(vt1.c0)) ISNULL))) ISNULL);
SELECT ALL rt0.c2, rt0.c0, vt1.c0, rt0.c1 FROM rt0, vt1, vt2;
SELECT ALL rt0.c2, rt0.c0, vt1.c0, rt0.c1 FROM rt0, vt1, vt2 WHERE (((((((((((((((((rt0.c1)OR(rt0.c2)))OR(rt0.c0)))AND(-1148901004)))AND(rt0.c2)))AND(vt1.c0)))AND(x'')))AND(rt0.c0 COLLATE RTRIM)))OR(CASE rt0.c2  WHEN rt0.c1 THEN 0.6204477115479957 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN vt1.c0 END))) UNION ALL SELECT rt0.c2, rt0.c0, vt1.c0, rt0.c1 FROM rt0, vt1, vt2 WHERE ((NOT (((((((((((((((((rt0.c1)OR(rt0.c2)))OR(rt0.c0)))AND(-1148901004)))AND(rt0.c2)))AND(vt1.c0)))AND(x'')))AND(rt0.c0 COLLATE RTRIM)))OR(CASE rt0.c2  WHEN rt0.c1 THEN 0.6204477115479957 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN vt1.c0 END))))) UNION ALL SELECT rt0.c2, rt0.c0, vt1.c0, rt0.c1 FROM rt0, vt1, vt2 WHERE (((((((((((((((((((rt0.c1)OR(rt0.c2)))OR(rt0.c0)))AND(-1148901004)))AND(rt0.c2)))AND(vt1.c0)))AND(x'')))AND(rt0.c0 COLLATE RTRIM)))OR(CASE rt0.c2  WHEN rt0.c1 THEN 0.6204477115479957 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN vt1.c0 END))) ISNULL));
SELECT ALL rt0.c2, rt0.c0, vt1.c0, rt0.c1 FROM rt0, vt1, vt2;
SELECT DISTINCT rt0.c2 FROM vt1 FULL OUTER JOIN vt2 ON TIME(rt0.c0, ((vt1.c0) BETWEEN (rt0.c0) AND (0x25607495)), (NOT (rt0.c1))) CROSS JOIN rt0 ON (((~ (vt1.c0))) NOT BETWEEN (rt0.c2) AND (((vt1.c0) NOT BETWEEN (vt1.c0) AND (rt0.c2))));
SELECT ALL vt2.c0, rt0.c1, rt0.c0, vt1.c0 FROM vt2, vt1, rt0 GROUP BY vt2.c0, rt0.c1, rt0.c0, vt1.c0;
SELECT vt2.c0, rt0.c1, rt0.c0, vt1.c0 FROM vt2, vt1, rt0 WHERE (CASE (((x'2430'))<=((vt1.c0)))  WHEN ((rt0.c2) IS TRUE) THEN ((NULL)IS(rt0.c1)) END) GROUP BY vt2.c0, rt0.c1, rt0.c0, vt1.c0 UNION SELECT vt2.c0, rt0.c1, rt0.c0, vt1.c0 FROM vt2, vt1, rt0 WHERE ((NOT (CASE (((x'2430'))<=((vt1.c0)))  WHEN ((rt0.c2) IS TRUE) THEN ((NULL)IS(rt0.c1)) END))) GROUP BY vt2.c0, rt0.c1, rt0.c0, vt1.c0 UNION SELECT vt2.c0, rt0.c1, rt0.c0, vt1.c0 FROM vt2, vt1, rt0 WHERE (((CASE (((x'2430'))<=((vt1.c0)))  WHEN ((rt0.c2) IS TRUE) THEN ((NULL)IS(rt0.c1)) END) ISNULL)) GROUP BY vt2.c0, rt0.c1, rt0.c0, vt1.c0;
SELECT ALL vt2.c0, rt0.c1, rt0.c0, vt1.c0 FROM vt2, vt1, rt0 GROUP BY vt2.c0, rt0.c1, rt0.c0, vt1.c0;
SELECT ALL rt0.c0 FROM rt0, vt1 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0, vt1 GROUP BY rt0.c0 HAVING ((COUNT(GROUP_CONCAT(COUNT(*)))) IS FALSE) UNION ALL SELECT ALL rt0.c0 FROM rt0, vt1 GROUP BY rt0.c0 HAVING (NOT (((COUNT(GROUP_CONCAT(COUNT(*)))) IS FALSE))) UNION ALL SELECT rt0.c0 FROM rt0, vt1 GROUP BY rt0.c0 HAVING ((((COUNT(GROUP_CONCAT(COUNT(*)))) IS FALSE)) ISNULL);
SELECT * FROM vt1;
SELECT ALL * FROM vt1 WHERE (CAST(CAST(vt1.c0 AS INTEGER) AS TEXT)) UNION ALL SELECT ALL * FROM vt1 WHERE ((NOT (CAST(CAST(vt1.c0 AS INTEGER) AS TEXT)))) UNION ALL SELECT ALL * FROM vt1 WHERE (((CAST(CAST(vt1.c0 AS INTEGER) AS TEXT)) ISNULL));
SELECT * FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((vt1.c0) NOTNULL) COLLATE RTRIM) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT (((vt1.c0) NOTNULL) COLLATE RTRIM))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((((vt1.c0) NOTNULL) COLLATE RTRIM) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE (((vt1.c0)|(vt1.c0)) COLLATE BINARY) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT (((vt1.c0)|(vt1.c0)) COLLATE BINARY))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE (((((vt1.c0)|(vt1.c0)) COLLATE BINARY) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT rt0.c0, rt0.c1, vt2.c0 FROM vt2, rt0 GROUP BY rt0.c0, rt0.c1, vt2.c0;
SELECT ALL rt0.c0, rt0.c1, vt2.c0 FROM vt2, rt0 GROUP BY rt0.c0, rt0.c1, vt2.c0 HAVING ((COUNT(MIN(rt0.c2)))>(COUNT(vt2.c0))) COLLATE RTRIM UNION ALL SELECT rt0.c0, rt0.c1, vt2.c0 FROM vt2, rt0 GROUP BY rt0.c0, rt0.c1, vt2.c0 HAVING (NOT (((COUNT(MIN(rt0.c2)))>(COUNT(vt2.c0))) COLLATE RTRIM)) UNION ALL SELECT rt0.c0, rt0.c1, vt2.c0 FROM vt2, rt0 GROUP BY rt0.c0, rt0.c1, vt2.c0 HAVING ((((COUNT(MIN(rt0.c2)))>(COUNT(vt2.c0))) COLLATE RTRIM) ISNULL);
SELECT ALL vt1.c0 FROM vt1, rt0;
SELECT vt1.c0 FROM vt1, rt0 WHERE (((((rt0.c0)LIKE(rt0.c2)))<(LIKELIHOOD(DISTINCT rt0.c0, 0.6144833282796099)))) UNION ALL SELECT vt1.c0 FROM vt1, rt0 WHERE ((NOT (((((rt0.c0)LIKE(rt0.c2)))<(LIKELIHOOD(DISTINCT rt0.c0, 0.6144833282796099)))))) UNION ALL SELECT vt1.c0 FROM vt1, rt0 WHERE (((((((rt0.c0)LIKE(rt0.c2)))<(LIKELIHOOD(DISTINCT rt0.c0, 0.6144833282796099)))) ISNULL));
SELECT ALL vt1.c0 FROM vt1, rt0;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((((((((vt1.c0, vt1.c0, vt1.c0))<>((0.605865354028577, vt1.c0, vt1.c0))))AND(vt1.c0 COLLATE NOCASE)))OR('i3?}'))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT ((((((((vt1.c0, vt1.c0, vt1.c0))!=((0.605865354028577, vt1.c0, vt1.c0))))AND(vt1.c0 COLLATE NOCASE)))OR('i3?}'))))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((((((((((vt1.c0, vt1.c0, vt1.c0))!=((0.605865354028577, vt1.c0, vt1.c0))))AND(vt1.c0 COLLATE NOCASE)))OR('i3?}'))) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE ((((((NULL))<=((vt1.c0)))) NOT NULL)) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT ((((((NULL))<=((vt1.c0)))) NOT NULL)))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((((((((NULL))<=((vt1.c0)))) NOT NULL)) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0, vt2.c0 FROM rt0, vt2 GROUP BY rt0.c2, rt0.c1, rt0.c0, vt2.c0;
SELECT rt0.c2, rt0.c1, rt0.c0, vt2.c0 FROM rt0, vt2 GROUP BY rt0.c2, rt0.c1, rt0.c0, vt2.c0 HAVING (AVG(SUM(rt0.c1)) IN ()) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0, vt2.c0 FROM rt0, vt2 GROUP BY rt0.c2, rt0.c1, rt0.c0, vt2.c0 HAVING (NOT ((AVG(SUM(rt0.c1)) IN ()))) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0, vt2.c0 FROM rt0, vt2 GROUP BY rt0.c2, rt0.c1, rt0.c0, vt2.c0 HAVING (((AVG(SUM(rt0.c1)) IN ())) ISNULL);
SELECT ALL rt0.c2, rt0.c1, rt0.c0, vt2.c0 FROM rt0, vt2 GROUP BY rt0.c2, rt0.c1, rt0.c0, vt2.c0;
SELECT rt0.c2, rt0.c1, rt0.c0, vt2.c0 FROM rt0, vt2 GROUP BY rt0.c2, rt0.c1, rt0.c0, vt2.c0 HAVING (AVG(SUM(rt0.c1)) IN ()) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0, vt2.c0 FROM rt0, vt2 GROUP BY rt0.c2, rt0.c1, rt0.c0, vt2.c0 HAVING (NOT ((AVG(SUM(rt0.c1)) IN ()))) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0, vt2.c0 FROM rt0, vt2 GROUP BY rt0.c2, rt0.c1, rt0.c0, vt2.c0 HAVING (((AVG(SUM(rt0.c1)) IN ())) ISNULL);
SELECT ALL rt0.c2, rt0.c1, rt0.c0, vt2.c0 FROM rt0, vt2 GROUP BY rt0.c2, rt0.c1, rt0.c0, vt2.c0;
SELECT ALL rt0.c2, vt1.c0, rt0.c1, vt2.c0, rt0.c0 FROM vt2, vt1, rt0;
SELECT rt0.c2, vt1.c0, rt0.c1, vt2.c0, rt0.c0 FROM vt2, vt1, rt0 WHERE (COALESCE(x'', ((rt0.c0)LIKE(vt2.c0)), ((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c0)), ((rt0.c2) NOT BETWEEN (rt0.c0) AND (vt2.c0)))) UNION ALL SELECT rt0.c2, vt1.c0, rt0.c1, vt2.c0, rt0.c0 FROM vt2, vt1, rt0 WHERE ((NOT (COALESCE(x'', ((rt0.c0)LIKE(vt2.c0)), ((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c0)), ((rt0.c2) NOT BETWEEN (rt0.c0) AND (vt2.c0)))))) UNION ALL SELECT rt0.c2, vt1.c0, rt0.c1, vt2.c0, rt0.c0 FROM vt2, vt1, rt0 WHERE (((COALESCE(x'', ((rt0.c0)LIKE(vt2.c0)), ((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c0)), ((rt0.c2) NOT BETWEEN (rt0.c0) AND (vt2.c0)))) ISNULL));
SELECT ALL rt0.c2, vt1.c0, rt0.c1, vt2.c0, rt0.c0 FROM vt2, vt1, rt0;
SELECT DISTINCT * FROM rt0 LEFT OUTER JOIN vt1 ON UNLIKELY(DISTINCT CAST(rt0.c1 AS REAL)) INNER JOIN vt2 ON (((+ (rt0.c2)))&(0x5648a64c));
SELECT DISTINCT * FROM rt0 LEFT OUTER JOIN vt1 ON UNLIKELY(DISTINCT CAST(rt0.c1 AS REAL)) INNER JOIN vt2 ON (((+ (rt0.c2)))&(0x5648a64c)) WHERE (((((vt1.c0) IS TRUE))>=(((rt0.c0)<(vt2.c0))))) UNION SELECT DISTINCT * FROM rt0 LEFT OUTER JOIN vt1 ON UNLIKELY(DISTINCT CAST(rt0.c1 AS REAL)) INNER JOIN vt2 ON (((+ (rt0.c2)))&(0x5648a64c)) WHERE ((NOT (((((vt1.c0) IS TRUE))>=(((rt0.c0)<(vt2.c0))))))) UNION SELECT DISTINCT * FROM rt0 LEFT OUTER JOIN vt1 ON UNLIKELY(DISTINCT CAST(rt0.c1 AS REAL)) INNER JOIN vt2 ON (((+ (rt0.c2)))&(0X5648a64c)) WHERE (((((((vt1.c0) IS TRUE))>=(((rt0.c0)<(vt2.c0))))) ISNULL));
SELECT DISTINCT * FROM rt0 LEFT OUTER JOIN vt1 ON UNLIKELY(DISTINCT CAST(rt0.c1 AS REAL)) INNER JOIN vt2 ON (((+ (rt0.c2)))&(0x5648a64c));
SELECT ALL vt1.c0, rt0.c2, rt0.c0, rt0.c1 FROM rt0, vt1 LEFT OUTER JOIN vt2 ON (+ ((((vt2.c0))>=((rt0.c1))))) GROUP BY vt1.c0, rt0.c2, rt0.c0, rt0.c1;
SELECT ALL vt1.c0, rt0.c2, rt0.c0, rt0.c1 FROM rt0, vt1 LEFT OUTER JOIN vt2 ON (+ ((((vt2.c0))>=((rt0.c1))))) WHERE ((((((vt2.c0, rt0.c1, vt2.c0))<=((rt0.c1, vt1.c0, rt0.c1)))) NOT BETWEEN (NULL) AND (((vt1.c0) BETWEEN (vt1.c0) AND (rt0.c1))))) GROUP BY vt1.c0, rt0.c2, rt0.c0, rt0.c1 UNION SELECT vt1.c0, rt0.c2, rt0.c0, rt0.c1 FROM rt0, vt1 LEFT OUTER JOIN vt2 ON (+ ((((vt2.c0))>=((rt0.c1))))) WHERE ((NOT ((((((vt2.c0, rt0.c1, vt2.c0))<=((rt0.c1, vt1.c0, rt0.c1)))) NOT BETWEEN (NULL) AND (((vt1.c0) BETWEEN (vt1.c0) AND (rt0.c1))))))) GROUP BY vt1.c0, rt0.c2, rt0.c0, rt0.c1 UNION SELECT vt1.c0, rt0.c2, rt0.c0, rt0.c1 FROM rt0, vt1 LEFT OUTER JOIN vt2 ON (+ ((((vt2.c0))>=((rt0.c1))))) WHERE ((((((((vt2.c0, rt0.c1, vt2.c0))<=((rt0.c1, vt1.c0, rt0.c1)))) NOT BETWEEN (NULL) AND (((vt1.c0) BETWEEN (vt1.c0) AND (rt0.c1))))) ISNULL)) GROUP BY vt1.c0, rt0.c2, rt0.c0, rt0.c1;
SELECT ALL vt1.c0, rt0.c2, rt0.c0, rt0.c1 FROM rt0, vt1 LEFT OUTER JOIN vt2 ON (+ ((((vt2.c0))>=((rt0.c1))))) GROUP BY vt1.c0, rt0.c2, rt0.c0, rt0.c1;
SELECT vt2.c0, rt0.c0, rt0.c1, vt1.c0 FROM vt2, rt0, vt1 GROUP BY vt2.c0, rt0.c0, rt0.c1, vt1.c0;
SELECT ALL vt2.c0, rt0.c0, rt0.c1, vt1.c0 FROM vt2, rt0, vt1 GROUP BY vt2.c0, rt0.c0, rt0.c1, vt1.c0 HAVING TOTAL(AVG(vt2.c0)) UNION ALL SELECT vt2.c0, rt0.c0, rt0.c1, vt1.c0 FROM vt2, rt0, vt1 GROUP BY vt2.c0, rt0.c0, rt0.c1, vt1.c0 HAVING (NOT (TOTAL(AVG(vt2.c0)))) UNION ALL SELECT ALL vt2.c0, rt0.c0, rt0.c1, vt1.c0 FROM vt2, rt0, vt1 GROUP BY vt2.c0, rt0.c0, rt0.c1, vt1.c0 HAVING ((TOTAL(AVG(vt2.c0))) ISNULL);
SELECT * FROM rt0, vt1;
SELECT ALL * FROM rt0, vt1 WHERE ((((rt0.c1, '<Rꇖb(', x'eea0')) BETWEEN ((CAST(rt0.c1 AS BLOB), ((rt0.c0)>=(vt1.c0)), (+ (rt0.c2)))) AND ((HEX(rt0.c2), (~ (rt0.c2)), rt0.c1)))) UNION ALL SELECT ALL * FROM rt0, vt1 WHERE ((NOT ((((rt0.c1, '<Rꇖb(', x'eea0')) BETWEEN ((CAST(rt0.c1 AS BLOB), ((rt0.c0)>=(vt1.c0)), (+ (rt0.c2)))) AND ((HEX(rt0.c2), (~ (rt0.c2)), rt0.c1)))))) UNION ALL SELECT * FROM rt0, vt1 WHERE ((((((rt0.c1, '<Rꇖb(', x'eea0')) BETWEEN ((CAST(rt0.c1 AS BLOB), ((rt0.c0)>=(vt1.c0)), (+ (rt0.c2)))) AND ((HEX(rt0.c2), (~ (rt0.c2)), rt0.c1)))) ISNULL));
SELECT * FROM rt0, vt1;
SELECT DISTINCT * FROM rt0, vt1, vt2;
SELECT DISTINCT * FROM rt0, vt1, vt2 WHERE (1891443891 COLLATE BINARY COLLATE BINARY COLLATE BINARY) UNION SELECT DISTINCT * FROM rt0, vt1, vt2 NOT INDEXED WHERE ((NOT (1891443891 COLLATE BINARY COLLATE BINARY COLLATE BINARY))) UNION SELECT DISTINCT * FROM rt0, vt1, vt2 WHERE (((1891443891 COLLATE BINARY COLLATE BINARY COLLATE BINARY) ISNULL));
SELECT DISTINCT * FROM rt0, vt1, vt2;
SELECT rt0.c2, vt2.c0, rt0.c0 FROM rt0, vt2 GROUP BY rt0.c2, vt2.c0, rt0.c0;
SELECT rt0.c2, vt2.c0, rt0.c0 FROM rt0, vt2 WHERE (CASE HEX(vt2.c0)  WHEN ((vt2.c0)%(rt0.c0)) THEN CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c2 END END) GROUP BY rt0.c2, vt2.c0, rt0.c0 UNION SELECT rt0.c2, vt2.c0, rt0.c0 FROM rt0, vt2 WHERE ((NOT (CASE HEX(vt2.c0)  WHEN ((vt2.c0)%(rt0.c0)) THEN CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c2 END END))) GROUP BY rt0.c2, vt2.c0, rt0.c0 UNION SELECT ALL rt0.c2, vt2.c0, rt0.c0 FROM rt0, vt2 WHERE (((CASE HEX(vt2.c0)  WHEN ((vt2.c0)%(rt0.c0)) THEN CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c2 END END) ISNULL)) GROUP BY rt0.c2, vt2.c0, rt0.c0;
SELECT rt0.c2, vt2.c0, rt0.c0 FROM rt0, vt2 GROUP BY rt0.c2, vt2.c0, rt0.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING MIN(x'') UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (MIN(x''))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((MIN(x'')) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING MIN(x'') UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (MIN(x''))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((MIN(x'')) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE (((((rt0.c1)-(rt0.c1)))||((rt0.c1 IN (rt0.c1, x'0090'))))) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (((((rt0.c1)-(rt0.c1)))||((rt0.c1 IN (rt0.c1, x'0090'))))))) UNION ALL SELECT ALL * FROM rt0 WHERE (((((((rt0.c1)-(rt0.c1)))||((rt0.c1 IN (rt0.c1, x'0090'))))) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT vt2.c0, rt0.c0, rt0.c2, rt0.c1 FROM vt2, rt0;
SELECT DISTINCT vt2.c0, rt0.c0, rt0.c2, rt0.c1 FROM vt2, rt0 WHERE (((vt2.c0) IS FALSE)) UNION SELECT DISTINCT vt2.c0, rt0.c0, rt0.c2, rt0.c1 FROM vt2, rt0 WHERE ((NOT (((vt2.c0) IS FALSE)))) UNION SELECT DISTINCT vt2.c0, rt0.c0, rt0.c2, rt0.c1 FROM vt2, rt0 WHERE (((((vt2.c0) IS FALSE)) ISNULL));
SELECT DISTINCT vt2.c0, rt0.c0, rt0.c2, rt0.c1 FROM vt2, rt0;
SELECT ALL rt0.c2 FROM vt1, rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM vt1, rt0 WHERE ((((vt1.c0)) BETWEEN (((((rt0.c1, rt0.c0, vt1.c0))<((rt0.c0, rt0.c2, vt1.c0))))) AND ((NULL)))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM vt1, rt0 WHERE ((NOT ((((vt1.c0)) BETWEEN (((((rt0.c1, rt0.c0, vt1.c0))<((rt0.c0, rt0.c2, vt1.c0))))) AND ((NULL)))))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM vt1, rt0 WHERE ((((((vt1.c0)) BETWEEN (((((rt0.c1, rt0.c0, vt1.c0))<((rt0.c0, rt0.c2, vt1.c0))))) AND ((NULL)))) ISNULL)) GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM vt1, rt0 GROUP BY rt0.c2;
SELECT rt0.c0, rt0.c2, vt1.c0, rt0.c1 FROM rt0 FULL OUTER JOIN vt1 ON ((((((((CASE rt0.c2  WHEN vt1.c0 THEN vt1.c0 WHEN rt0.c2 THEN vt1.c0 WHEN rt0.c1 THEN rt0.c2 ELSE 0.23148656814957846 END)OR(CAST(rt0.c1 AS NUMERIC))))OR((vt1.c0 IN (rt0.c0)))))OR(((rt0.c1) IS FALSE))))OR((rt0.c1 IN ()))) GROUP BY rt0.c0, rt0.c2, vt1.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c2, vt1.c0, rt0.c1 FROM rt0 FULL OUTER JOIN vt1 ON ((((((((CASE rt0.c2  WHEN vt1.c0 THEN vt1.c0 WHEN rt0.c2 THEN vt1.c0 WHEN rt0.c1 THEN rt0.c2 ELSE 0.23148656814957846 END)OR(CAST(rt0.c1 AS NUMERIC))))OR((vt1.c0 IN (rt0.c0)))))OR(((rt0.c1) IS FALSE))))OR((rt0.c1 IN ()))) GROUP BY rt0.c0, rt0.c2, vt1.c0, rt0.c1 HAVING TOTAL(TOTAL(rt0.c1)) UNION ALL SELECT rt0.c0, rt0.c2, vt1.c0, rt0.c1 FROM rt0 FULL OUTER JOIN vt1 ON ((((((((CASE rt0.c2  WHEN vt1.c0 THEN vt1.c0 WHEN rt0.c2 THEN vt1.c0 WHEN rt0.c1 THEN rt0.c2 ELSE 0.23148656814957846 END)OR(CAST(rt0.c1 AS NUMERIC))))OR((vt1.c0 IN (rt0.c0)))))OR(((rt0.c1) IS FALSE))))OR((rt0.c1 IN ()))) GROUP BY rt0.c0, rt0.c2, vt1.c0, rt0.c1 HAVING (NOT (TOTAL(TOTAL(rt0.c1)))) UNION ALL SELECT ALL rt0.c0, rt0.c2, vt1.c0, rt0.c1 FROM rt0 FULL OUTER JOIN vt1 ON ((((((((CASE rt0.c2  WHEN vt1.c0 THEN vt1.c0 WHEN rt0.c2 THEN vt1.c0 WHEN rt0.c1 THEN rt0.c2 ELSE 0.23148656814957846 END)OR(CAST(rt0.c1 AS NUMERIC))))OR((vt1.c0 IN (rt0.c0)))))OR(((rt0.c1) IS FALSE))))OR((rt0.c1 IN ()))) GROUP BY rt0.c0, rt0.c2, vt1.c0, rt0.c1 HAVING ((TOTAL(TOTAL(rt0.c1))) ISNULL);
SELECT * FROM vt1 RIGHT OUTER JOIN vt2 ON (((CASE vt2.c0  WHEN rt0.c0 THEN rt0.c0 WHEN vt1.c0 THEN rt0.c1 WHEN rt0.c2 THEN vt1.c0 END, (~ (vt1.c0)), ((vt1.c0)&(rt0.c1)), ((((((((((((rt0.c0)AND(vt2.c0)))AND(rt0.c1)))AND(rt0.c0)))OR(rt0.c2)))OR(rt0.c0)))AND(rt0.c1)), ((rt0.c2) NOT NULL), vt1.c0, (((vt2.c0, vt2.c0, rt0.c1))<((vt2.c0, rt0.c0, rt0.c2)))))=(((rt0.c0 IN ()), (((vt2.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))), CASE rt0.c0  WHEN rt0.c0 THEN x'' WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 END, (~ (rt0.c2)), rt0.c2 COLLATE RTRIM, ('%<hS' IN (rt0.c0)), ((((((((rt0.c2)AND(rt0.c0)))AND(vt2.c0)))OR(rt0.c0)))AND(vt1.c0))))) FULL OUTER JOIN rt0 ON ((((rt0.c2)<(rt0.c2))) NOT BETWEEN (NULL) AND (((vt2.c0)>>(vt2.c0))));
SELECT DISTINCT rt0.c0, rt0.c2, vt2.c0 FROM vt2, vt1 NATURAL JOIN rt0;
SELECT DISTINCT rt0.c0, rt0.c2, vt2.c0 FROM vt2, vt1 NATURAL JOIN rt0 WHERE (JULIANDAY(((rt0.c2) IS TRUE), ((rt0.c2) IS FALSE), (vt2.c0 IN ()), NULL COLLATE RTRIM, ((NULL)|(rt0.c2)))) UNION SELECT DISTINCT rt0.c0, rt0.c2, vt2.c0 FROM vt2, vt1 NATURAL JOIN rt0 WHERE ((NOT (JULIANDAY(((rt0.c2) IS TRUE), ((rt0.c2) IS FALSE), (vt2.c0 IN ()), NULL COLLATE RTRIM, ((NULL)|(rt0.c2)))))) UNION SELECT DISTINCT rt0.c0, rt0.c2, vt2.c0 FROM vt2, vt1 NATURAL JOIN rt0 WHERE (((JULIANDAY(((rt0.c2) IS TRUE), ((rt0.c2) IS FALSE), (vt2.c0 IN ()), NULL COLLATE RTRIM, ((NULL)|(rt0.c2)))) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c2, vt2.c0 FROM vt2, vt1 NATURAL JOIN rt0;
SELECT ALL rt0.c0, rt0.c1, vt2.c0 FROM vt2, rt0, vt1 GROUP BY rt0.c0, rt0.c1, vt2.c0;
SELECT ALL rt0.c0, rt0.c1, vt2.c0 FROM vt2, rt0, vt1 WHERE (TRIM(((((((((((((rt0.c1)OR(vt1.c0)))OR(rt0.c2)))AND(rt0.c1)))OR(rt0.c1)))AND(1802568309)))AND(x'b443')))) GROUP BY rt0.c0, rt0.c1, vt2.c0 UNION SELECT ALL rt0.c0, rt0.c1, vt2.c0 FROM vt2, rt0, vt1 WHERE ((NOT (TRIM(((((((((((((rt0.c1)OR(vt1.c0)))OR(rt0.c2)))AND(rt0.c1)))OR(rt0.c1)))AND(1802568309)))AND(x'b443')))))) GROUP BY rt0.c0, rt0.c1, vt2.c0 UNION SELECT ALL rt0.c0, rt0.c1, vt2.c0 FROM vt2, rt0, vt1 NOT INDEXED WHERE (((TRIM(((((((((((((rt0.c1)OR(vt1.c0)))OR(rt0.c2)))AND(rt0.c1)))OR(rt0.c1)))AND(1802568309)))AND(x'b443')))) ISNULL)) GROUP BY rt0.c0, rt0.c1, vt2.c0;
SELECT ALL rt0.c0, rt0.c1, vt2.c0 FROM vt2, rt0, vt1 GROUP BY rt0.c0, rt0.c1, vt2.c0;
SELECT vt2.c0 FROM vt2 RIGHT OUTER JOIN rt0 ON (((vt1.c0 IN (rt0.c0))) NOT NULL) INNER JOIN vt1 ON (((rt0.c1 IN ()))==(TRIM(rt0.c1, rt0.c2))) GROUP BY vt2.c0;
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE ((((x'')IS(rt0.c0)) IN ((rt0.c0 IN ()), UPPER(rt0.c1)))) UNION ALL SELECT * FROM rt0 WHERE ((NOT ((((x'')IS(rt0.c0)) IN ((rt0.c0 IN ()), UPPER(rt0.c1)))))) UNION ALL SELECT ALL * FROM rt0 WHERE ((((((x'')IS(rt0.c0)) IN ((rt0.c0 IN ()), UPPER(rt0.c1)))) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT * FROM vt1, vt2, rt0;
SELECT DISTINCT * FROM vt1, vt2, rt0 WHERE ((- (((vt1.c0)IS NOT(rt0.c2))))) UNION SELECT DISTINCT * FROM vt1, vt2, rt0 WHERE ((NOT ((- (((vt1.c0)IS NOT(rt0.c2))))))) UNION SELECT DISTINCT * FROM vt1, vt2, rt0 WHERE ((((- (((vt1.c0)IS NOT(rt0.c2))))) ISNULL));
SELECT DISTINCT * FROM vt1, vt2, rt0;
SELECT vt1.c0, vt2.c0 FROM vt2 CROSS JOIN vt1 ON x'' GROUP BY vt1.c0, vt2.c0;
SELECT vt1.c0, vt2.c0 FROM vt2 CROSS JOIN vt1 ON x'' WHERE (vt1.c0) GROUP BY vt1.c0, vt2.c0 UNION SELECT vt1.c0, vt2.c0 FROM vt2 CROSS JOIN vt1 ON x'' WHERE ((NOT (vt1.c0))) GROUP BY vt1.c0, vt2.c0 UNION SELECT ALL vt1.c0, vt2.c0 FROM vt2 CROSS JOIN vt1 ON x'' WHERE (((vt1.c0) ISNULL)) GROUP BY vt1.c0, vt2.c0;
SELECT vt1.c0, vt2.c0 FROM vt2 CROSS JOIN vt1 ON x'' GROUP BY vt1.c0, vt2.c0;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING CAST('y쏚!' AS INTEGER) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING (NOT (CAST('y쏚!' AS INTEGER))) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING ((CAST('y쏚!' AS INTEGER)) ISNULL);
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING CAST('y쏚!' AS INTEGER) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING (NOT (CAST('y쏚!' AS INTEGER))) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING ((CAST('y쏚!' AS INTEGER)) ISNULL);
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL * FROM vt1 LEFT OUTER JOIN rt0 ON ((CAST(rt0.c1 AS TEXT))<(((rt0.c2)==(rt0.c0)))) RIGHT OUTER JOIN vt2 ON (vt2.c0 IN ('-302951681')) COLLATE RTRIM;
SELECT * FROM vt1 LEFT OUTER JOIN rt0 ON ((CAST(rt0.c1 AS TEXT))<(((rt0.c2)=(rt0.c0)))) RIGHT OUTER JOIN vt2 ON (vt2.c0 IN ('-302951681')) COLLATE RTRIM WHERE (LTRIM(((x'')IS(0.2998494295220161)))) UNION ALL SELECT ALL * FROM vt1 LEFT OUTER JOIN rt0 ON ((CAST(rt0.c1 AS TEXT))<(((rt0.c2)==(rt0.c0)))) RIGHT OUTER JOIN vt2 ON (vt2.c0 IN ('-302951681')) COLLATE RTRIM WHERE ((NOT (LTRIM(((x'')IS(0.2998494295220161)))))) UNION ALL SELECT * FROM vt1 LEFT OUTER JOIN rt0 ON ((CAST(rt0.c1 AS TEXT))<(((rt0.c2)=(rt0.c0)))) RIGHT OUTER JOIN vt2 ON (vt2.c0 IN ('-302951681')) COLLATE RTRIM WHERE (((LTRIM(((x'')IS(0.2998494295220161)))) ISNULL));
SELECT ALL * FROM vt1 LEFT OUTER JOIN rt0 ON ((CAST(rt0.c1 AS TEXT))<(((rt0.c2)==(rt0.c0)))) RIGHT OUTER JOIN vt2 ON (vt2.c0 IN ('-302951681')) COLLATE RTRIM;
SELECT DISTINCT * FROM vt2, vt1 CROSS JOIN rt0 ON (CASE rt0.c0  WHEN rt0.c2 THEN vt2.c0 END IN ());
SELECT DISTINCT * FROM vt2, vt1 CROSS JOIN rt0 ON (CASE rt0.c0  WHEN rt0.c2 THEN vt2.c0 END IN ()) WHERE (((((GLOB(rt0.c2, vt2.c0))AND(0X90d0b9)))OR((((rt0.c1))<>((rt0.c2)))))) UNION SELECT DISTINCT * FROM vt2, vt1 CROSS JOIN rt0 ON (CASE rt0.c0  WHEN rt0.c2 THEN vt2.c0 END IN ()) WHERE ((NOT (((((GLOB(rt0.c2, vt2.c0))AND(0x90d0b9)))OR((((rt0.c1))!=((rt0.c2)))))))) UNION SELECT DISTINCT * FROM vt2, vt1 CROSS JOIN rt0 ON (CASE rt0.c0  WHEN rt0.c2 THEN vt2.c0 END IN ()) WHERE (((((((GLOB(rt0.c2, vt2.c0))AND(0X90d0b9)))OR((((rt0.c1))<>((rt0.c2)))))) ISNULL));
SELECT DISTINCT * FROM vt2, vt1 CROSS JOIN rt0 ON (CASE rt0.c0  WHEN rt0.c2 THEN vt2.c0 END IN ());
SELECT vt2.c0, rt0.c1, rt0.c0, rt0.c2 FROM rt0, vt2 GROUP BY vt2.c0, rt0.c1, rt0.c0, rt0.c2;
SELECT ALL vt2.c0, rt0.c1, rt0.c0, rt0.c2 FROM rt0, vt2 WHERE (x'1e61') GROUP BY vt2.c0, rt0.c1, rt0.c0, rt0.c2 UNION SELECT ALL vt2.c0, rt0.c1, rt0.c0, rt0.c2 FROM rt0, vt2 WHERE ((NOT (x'1e61'))) GROUP BY vt2.c0, rt0.c1, rt0.c0, rt0.c2 UNION SELECT ALL vt2.c0, rt0.c1, rt0.c0, rt0.c2 FROM rt0, vt2 WHERE (((x'1e61') ISNULL)) GROUP BY vt2.c0, rt0.c1, rt0.c0, rt0.c2;
SELECT vt2.c0, rt0.c1, rt0.c0, rt0.c2 FROM rt0, vt2 GROUP BY vt2.c0, rt0.c1, rt0.c0, rt0.c2;
SELECT rt0.c2, vt2.c0, rt0.c1, rt0.c0 FROM rt0, vt1, vt2 GROUP BY rt0.c2, vt2.c0, rt0.c1, rt0.c0;
SELECT rt0.c2, vt2.c0, rt0.c1, rt0.c0 FROM rt0, vt1, vt2 GROUP BY rt0.c2, vt2.c0, rt0.c1, rt0.c0 HAVING AVG(COUNT(vt1.c0)) UNION ALL SELECT ALL rt0.c2, vt2.c0, rt0.c1, rt0.c0 FROM rt0, vt1, vt2 GROUP BY rt0.c2, vt2.c0, rt0.c1, rt0.c0 HAVING (NOT (AVG(COUNT(vt1.c0)))) UNION ALL SELECT rt0.c2, vt2.c0, rt0.c1, rt0.c0 FROM rt0, vt1, vt2 GROUP BY rt0.c2, vt2.c0, rt0.c1, rt0.c0 HAVING ((AVG(COUNT(vt1.c0))) ISNULL);
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE (((((rt0.c1)IS NOT(rt0.c2)))||((('')>>('?'))))) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (((((rt0.c1)IS NOT(rt0.c2)))||((('')>>('?'))))))) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE (((((((rt0.c1)IS NOT(rt0.c2)))||((('')>>('?'))))) ISNULL));
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0;
SELECT DISTINCT * FROM vt1, rt0, vt2;
SELECT DISTINCT * FROM vt1, rt0, vt2 WHERE (CAST((((vt2.c0))>=((-3.02951681E8))) AS INTEGER)) UNION SELECT DISTINCT * FROM vt1, rt0, vt2 WHERE ((NOT (CAST((((vt2.c0))>=((-3.02951681E8))) AS INTEGER)))) UNION SELECT DISTINCT * FROM vt1, rt0, vt2 WHERE (((CAST((((vt2.c0))>=((-3.02951681E8))) AS INTEGER)) ISNULL));
SELECT DISTINCT * FROM vt1, rt0, vt2;
SELECT ALL vt2.c0 FROM vt1, vt2 GROUP BY vt2.c0;
SELECT ALL vt2.c0 FROM vt1, vt2 WHERE (((CAST(vt2.c0 AS REAL))>=(vt1.c0))) GROUP BY vt2.c0 UNION SELECT ALL vt2.c0 FROM vt1, vt2 WHERE ((NOT (((CAST(vt2.c0 AS REAL))>=(vt1.c0))))) GROUP BY vt2.c0 UNION SELECT vt2.c0 FROM vt1, vt2 WHERE (((((CAST(vt2.c0 AS REAL))>=(vt1.c0))) ISNULL)) GROUP BY vt2.c0;
SELECT ALL vt2.c0 FROM vt1, vt2 GROUP BY vt2.c0;
SELECT vt2.c0, rt0.c2 FROM vt2, rt0 CROSS JOIN vt1 ON '' GROUP BY vt2.c0, rt0.c2;
SELECT ALL vt2.c0, rt0.c2 FROM vt2, rt0 CROSS JOIN vt1 ON '' GROUP BY vt2.c0, rt0.c2 HAVING AVG(COUNT(rt0.c1)) UNION ALL SELECT ALL vt2.c0, rt0.c2 FROM vt2, rt0 CROSS JOIN vt1 ON '' GROUP BY vt2.c0, rt0.c2 HAVING (NOT (AVG(COUNT(rt0.c1)))) UNION ALL SELECT ALL vt2.c0, rt0.c2 FROM vt2, rt0 CROSS JOIN vt1 ON '' GROUP BY vt2.c0, rt0.c2 HAVING ((AVG(COUNT(rt0.c1))) ISNULL);
SELECT ALL TOTAL(CASE WHEN (('-952564270') NOT BETWEEN (vt1.c0) AND (vt1.c0)) THEN (vt1.c0 IN ()) END) FROM vt1, vt2 ORDER BY ((((x'fce5')>=(1042331527)))<(((vt2.c0) ISNULL))) DESC, (((('1164956410')AND(CAST(vt1.c0 AS REAL))))OR(vt1.c0))  NULLS LAST;
SELECT ALL rt0.c1 FROM rt0, vt1;
SELECT rt0.c1 FROM rt0, vt1 WHERE (((x'ec6c')AND((+ (rt0.c2))))) UNION ALL SELECT ALL rt0.c1 FROM rt0, vt1 WHERE ((NOT (((x'ec6c')AND((+ (rt0.c2))))))) UNION ALL SELECT rt0.c1 FROM rt0, vt1 WHERE (((((x'ec6c')AND((+ (rt0.c2))))) ISNULL));
SELECT ALL rt0.c1 FROM rt0, vt1;
SELECT DISTINCT * FROM vt1, vt2, rt0;
SELECT DISTINCT * FROM vt1, vt2, rt0 WHERE (((CASE WHEN vt2.c0 THEN rt0.c1 ELSE rt0.c0 END) IS TRUE)) UNION SELECT DISTINCT * FROM vt1, vt2, rt0 WHERE ((NOT (((CASE WHEN vt2.c0 THEN rt0.c1 ELSE rt0.c0 END) IS TRUE)))) UNION SELECT DISTINCT * FROM vt1, vt2, rt0 WHERE (((((CASE WHEN vt2.c0 THEN rt0.c1 ELSE rt0.c0 END) IS TRUE)) ISNULL));
SELECT DISTINCT * FROM vt1, vt2, rt0;
SELECT ALL rt0.c1, rt0.c2 FROM vt1 RIGHT OUTER JOIN rt0 ON ((CASE rt0.c2  WHEN vt2.c0 THEN 0.6204477115479957 ELSE rt0.c1 END)+(vt2.c0)) FULL OUTER JOIN vt2 ON (+ (((vt1.c0) NOT BETWEEN (rt0.c1) AND (vt1.c0)))) GROUP BY rt0.c1, rt0.c2;
SELECT ALL vt2.c0 FROM vt1 CROSS JOIN vt2 ON ((CAST(vt1.c0 AS NUMERIC))<=((((vt2.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt2.c0))))) GROUP BY vt2.c0;
SELECT ALL vt2.c0 FROM vt1 CROSS JOIN vt2 ON ((CAST(vt1.c0 AS NUMERIC))<=((((vt2.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt2.c0))))) GROUP BY vt2.c0 HAVING COUNT(*) UNION ALL SELECT vt2.c0 FROM vt1 CROSS JOIN vt2 ON ((CAST(vt1.c0 AS NUMERIC))<=((((vt2.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt2.c0))))) GROUP BY vt2.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt2.c0 FROM vt1 CROSS JOIN vt2 ON ((CAST(vt1.c0 AS NUMERIC))<=((((vt2.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt2.c0))))) GROUP BY vt2.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt2.c0 FROM vt1 CROSS JOIN vt2 ON ((CAST(vt1.c0 AS NUMERIC))<=((((vt2.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt2.c0))))) GROUP BY vt2.c0;
SELECT ALL vt2.c0 FROM vt1 CROSS JOIN vt2 ON ((CAST(vt1.c0 AS NUMERIC))<=((((vt2.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt2.c0))))) GROUP BY vt2.c0 HAVING COUNT(*) UNION ALL SELECT vt2.c0 FROM vt1 CROSS JOIN vt2 ON ((CAST(vt1.c0 AS NUMERIC))<=((((vt2.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt2.c0))))) GROUP BY vt2.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt2.c0 FROM vt1 CROSS JOIN vt2 ON ((CAST(vt1.c0 AS NUMERIC))<=((((vt2.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt2.c0))))) GROUP BY vt2.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt2.c0 FROM vt1 CROSS JOIN vt2 ON ((CAST(vt1.c0 AS NUMERIC))<=((((vt2.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt2.c0))))) GROUP BY vt2.c0;
SELECT ALL MIN(vt2.c0) FROM rt0, vt2;
SELECT ALL * FROM rt0, vt1;
SELECT ALL * FROM rt0, vt1 WHERE (rt0.c0) UNION ALL SELECT * FROM rt0, vt1 WHERE ((NOT (rt0.c0))) UNION ALL SELECT ALL * FROM rt0, vt1 WHERE (((rt0.c0) ISNULL));
SELECT ALL * FROM rt0, vt1;
SELECT DISTINCT * FROM rt0, vt1 RIGHT OUTER JOIN vt2 ON (CAST(vt2.c0 AS BLOB) IN ());
SELECT DISTINCT * FROM rt0, vt1 RIGHT OUTER JOIN vt2 ON (CAST(vt2.c0 AS BLOB) IN ()) WHERE (((((((((vt2.c0)AND((- (vt1.c0)))))OR((((('u''')AND(vt2.c0)))OR(vt2.c0)))))AND((NOT (0.8321897810871354)))))AND(((((((((vt2.c0)AND(rt0.c1)))OR(vt1.c0)))OR(vt1.c0)))OR(vt2.c0))))) UNION SELECT DISTINCT * FROM rt0, vt1 RIGHT OUTER JOIN vt2 ON (CAST(vt2.c0 AS BLOB) IN ()) WHERE ((NOT (((((((((vt2.c0)AND((- (vt1.c0)))))OR((((('u''')AND(vt2.c0)))OR(vt2.c0)))))AND((NOT (0.8321897810871354)))))AND(((((((((vt2.c0)AND(rt0.c1)))OR(vt1.c0)))OR(vt1.c0)))OR(vt2.c0))))))) UNION SELECT DISTINCT * FROM rt0, vt1 RIGHT OUTER JOIN vt2 ON (CAST(vt2.c0 AS BLOB) IN ()) WHERE (((((((((((vt2.c0)AND((- (vt1.c0)))))OR((((('u''')AND(vt2.c0)))OR(vt2.c0)))))AND((NOT (0.8321897810871354)))))AND(((((((((vt2.c0)AND(rt0.c1)))OR(vt1.c0)))OR(vt1.c0)))OR(vt2.c0))))) ISNULL));
SELECT DISTINCT * FROM rt0, vt1 RIGHT OUTER JOIN vt2 ON (CAST(vt2.c0 AS BLOB) IN ());
SELECT ALL vt2.c0, rt0.c0, rt0.c2 FROM vt1, rt0 NOT INDEXED, vt2 GROUP BY vt2.c0, rt0.c0, rt0.c2;
SELECT vt2.c0, rt0.c0, rt0.c2 FROM vt1, rt0, vt2 WHERE (((('S)DfCN') ISNULL) IN ())) GROUP BY vt2.c0, rt0.c0, rt0.c2 UNION SELECT vt2.c0, rt0.c0, rt0.c2 FROM vt1, rt0, vt2 WHERE ((NOT (((('S)DfCN') ISNULL) IN ())))) GROUP BY vt2.c0, rt0.c0, rt0.c2 UNION SELECT vt2.c0, rt0.c0, rt0.c2 FROM vt1, rt0, vt2 WHERE (((((('S)DfCN') ISNULL) IN ())) ISNULL)) GROUP BY vt2.c0, rt0.c0, rt0.c2;
SELECT ALL vt2.c0, rt0.c0, rt0.c2 FROM vt1, rt0 NOT INDEXED, vt2 GROUP BY vt2.c0, rt0.c0, rt0.c2;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING CASE ((vt1.c0)OR(MIN(vt1.c0)))  WHEN MAX(COUNT(vt1.c0)) THEN COUNT(*) ELSE (((vt1.c0)) BETWEEN ((vt1.c0)) AND ((0x7fffffffffffffff))) END UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (CASE ((vt1.c0)OR(MIN(vt1.c0)))  WHEN MAX(COUNT(vt1.c0)) THEN COUNT(*) ELSE (((vt1.c0)) BETWEEN ((vt1.c0)) AND ((0X7fffffffffffffff))) END)) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((CASE ((vt1.c0)OR(MIN(vt1.c0)))  WHEN MAX(COUNT(vt1.c0)) THEN COUNT(*) ELSE (((vt1.c0)) BETWEEN ((vt1.c0)) AND ((0x7fffffffffffffff))) END) ISNULL);
SELECT ALL * FROM vt2;
SELECT * FROM vt2 WHERE ((vt2.c0 COLLATE NOCASE IN ((vt2.c0 IN ()), ((vt2.c0)*(vt2.c0))))) UNION ALL SELECT * FROM vt2 WHERE ((NOT ((vt2.c0 COLLATE NOCASE IN ((vt2.c0 IN ()), ((vt2.c0)*(vt2.c0))))))) UNION ALL SELECT ALL * FROM vt2 WHERE ((((vt2.c0 COLLATE NOCASE IN ((vt2.c0 IN ()), ((vt2.c0)*(vt2.c0))))) ISNULL));
SELECT ALL * FROM vt2;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (TRIM(CAST('TRUE' AS INTEGER), ((rt0.c1) IS TRUE))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (TRIM(CAST('TRUE' AS INTEGER), ((rt0.c1) IS TRUE))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((TRIM(CAST('TRUE' AS INTEGER), ((rt0.c1) IS TRUE))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c1, rt0.c0, vt2.c0, vt1.c0, rt0.c2 FROM vt2, vt1, rt0 GROUP BY rt0.c1, rt0.c0, vt2.c0, vt1.c0, rt0.c2;
SELECT rt0.c1, rt0.c0, vt2.c0, vt1.c0, rt0.c2 FROM vt2, vt1, rt0 WHERE ((('')>(CAST('둄㚛1_' AS INTEGER)))) GROUP BY rt0.c1, rt0.c0, vt2.c0, vt1.c0, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c0, vt2.c0, vt1.c0, rt0.c2 FROM vt2, vt1, rt0 WHERE ((NOT ((('')>(CAST('둄㚛1_' AS INTEGER)))))) GROUP BY rt0.c1, rt0.c0, vt2.c0, vt1.c0, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c0, vt2.c0, vt1.c0, rt0.c2 FROM vt2 NOT INDEXED, vt1, rt0 WHERE ((((('')>(CAST('둄㚛1_' AS INTEGER)))) ISNULL)) GROUP BY rt0.c1, rt0.c0, vt2.c0, vt1.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, vt2.c0, vt1.c0, rt0.c2 FROM vt2, vt1, rt0 GROUP BY rt0.c1, rt0.c0, vt2.c0, vt1.c0, rt0.c2;
SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING ((vt2.c0)>>(vt2.c0)) COLLATE RTRIM UNION ALL SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING (NOT (((vt2.c0)>>(vt2.c0)) COLLATE RTRIM)) UNION ALL SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING ((((vt2.c0)>>(vt2.c0)) COLLATE RTRIM) ISNULL);
SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING ((vt2.c0)>>(vt2.c0)) COLLATE RTRIM UNION ALL SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING (NOT (((vt2.c0)>>(vt2.c0)) COLLATE RTRIM)) UNION ALL SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING ((((vt2.c0)>>(vt2.c0)) COLLATE RTRIM) ISNULL);
SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT ALL vt2.c0 FROM vt2;
SELECT vt2.c0 FROM vt2 WHERE (((vt2.c0)%(vt2.c0)) COLLATE BINARY COLLATE NOCASE) UNION ALL SELECT vt2.c0 FROM vt2 WHERE ((NOT (((vt2.c0)%(vt2.c0)) COLLATE BINARY COLLATE NOCASE))) UNION ALL SELECT ALL vt2.c0 FROM vt2 WHERE (((((vt2.c0)%(vt2.c0)) COLLATE BINARY COLLATE NOCASE) ISNULL));
SELECT ALL vt2.c0 FROM vt2;
SELECT DISTINCT vt2.c0 FROM vt2;
SELECT DISTINCT vt2.c0 FROM vt2 WHERE (CASE IFNULL(vt2.c0, vt2.c0)  WHEN ((vt2.c0) NOT BETWEEN (vt2.c0) AND (vt2.c0)) THEN ((vt2.c0) NOTNULL) END) UNION SELECT DISTINCT vt2.c0 FROM vt2 WHERE ((NOT (CASE IFNULL(vt2.c0, vt2.c0)  WHEN ((vt2.c0) NOT BETWEEN (vt2.c0) AND (vt2.c0)) THEN ((vt2.c0) NOTNULL) END))) UNION SELECT DISTINCT vt2.c0 FROM vt2 WHERE (((CASE IFNULL(vt2.c0, vt2.c0)  WHEN ((vt2.c0) NOT BETWEEN (vt2.c0) AND (vt2.c0)) THEN ((vt2.c0) NOTNULL) END) ISNULL));
SELECT DISTINCT vt2.c0 FROM vt2;
SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT vt2.c0 FROM vt2 WHERE ('-1853865965') GROUP BY vt2.c0 UNION SELECT ALL vt2.c0 FROM vt2 WHERE ((NOT ('-1853865965'))) GROUP BY vt2.c0 UNION SELECT ALL vt2.c0 FROM vt2 WHERE ((('-1853865965') ISNULL)) GROUP BY vt2.c0;
SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT rt0.c1 FROM vt2, rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM vt2, rt0 GROUP BY rt0.c1 HAVING CAST('-2036395908' AS NUMERIC) UNION ALL SELECT rt0.c1 FROM vt2, rt0 GROUP BY rt0.c1 HAVING (NOT (CAST('-2036395908' AS NUMERIC))) UNION ALL SELECT ALL rt0.c1 FROM vt2, rt0 GROUP BY rt0.c1 HAVING ((CAST('-2036395908' AS NUMERIC)) ISNULL);
SELECT rt0.c1 FROM vt2, rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM vt2, rt0 GROUP BY rt0.c1 HAVING CAST('-2036395908' AS NUMERIC) UNION ALL SELECT rt0.c1 FROM vt2, rt0 GROUP BY rt0.c1 HAVING (NOT (CAST('-2036395908' AS NUMERIC))) UNION ALL SELECT ALL rt0.c1 FROM vt2, rt0 GROUP BY rt0.c1 HAVING ((CAST('-2036395908' AS NUMERIC)) ISNULL);
SELECT rt0.c1 FROM vt2, rt0 GROUP BY rt0.c1;
SELECT * FROM vt1, vt2;
SELECT * FROM vt1, vt2 WHERE (((((vt1.c0) IS TRUE)) BETWEEN (((((vt1.c0)OR(vt1.c0)))AND(vt2.c0))) AND (json(vt1.c0)))) UNION ALL SELECT * FROM vt1, vt2 WHERE ((NOT (((((vt1.c0) IS TRUE)) BETWEEN (((((vt1.c0)OR(vt1.c0)))AND(vt2.c0))) AND (json(vt1.c0)))))) UNION ALL SELECT * FROM vt1, vt2 WHERE (((((((vt1.c0) IS TRUE)) BETWEEN (((((vt1.c0)OR(vt1.c0)))AND(vt2.c0))) AND (json(vt1.c0)))) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((~ (vt1.c0)) IN ())) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT (((~ (vt1.c0)) IN ())))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((((~ (vt1.c0)) IN ())) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT ALL vt1.c0 FROM vt2 FULL OUTER JOIN vt1 ON ((((((vt1.c0)AND(vt2.c0)))AND(vt1.c0))) NOT NULL) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt2 FULL OUTER JOIN vt1 ON ((((((vt1.c0)AND(vt2.c0)))AND(vt1.c0))) NOT NULL) WHERE (((vt1.c0) BETWEEN (vt2.c0) AND ('0.15086912492251758'))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt2 FULL OUTER JOIN vt1 ON ((((((vt1.c0)AND(vt2.c0)))AND(vt1.c0))) NOT NULL) WHERE ((NOT (((vt1.c0) BETWEEN (vt2.c0) AND ('0.15086912492251758'))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt2 FULL OUTER JOIN vt1 ON ((((((vt1.c0)AND(vt2.c0)))AND(vt1.c0))) NOT NULL) WHERE (((((vt1.c0) BETWEEN (vt2.c0) AND ('0.15086912492251758'))) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt2 FULL OUTER JOIN vt1 ON ((((((vt1.c0)AND(vt2.c0)))AND(vt1.c0))) NOT NULL) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING CASE HEX(vt1.c0)  WHEN COUNT(*) THEN ((COUNT(vt1.c0))%(vt1.c0)) WHEN ((MAX(AVG(vt1.c0)))>(MIN(vt1.c0))) THEN ((COUNT(*))>(vt1.c0)) WHEN ((vt1.c0)/(COUNT(*))) THEN COUNT(*) END UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (CASE HEX(vt1.c0)  WHEN COUNT(*) THEN ((COUNT(vt1.c0))%(vt1.c0)) WHEN ((MAX(AVG(vt1.c0)))>(MIN(vt1.c0))) THEN ((COUNT(*))>(vt1.c0)) WHEN ((vt1.c0)/(COUNT(*))) THEN COUNT(*) END)) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((CASE HEX(vt1.c0)  WHEN COUNT(*) THEN ((COUNT(vt1.c0))%(vt1.c0)) WHEN ((MAX(AVG(vt1.c0)))>(MIN(vt1.c0))) THEN ((COUNT(*))>(vt1.c0)) WHEN ((vt1.c0)/(COUNT(*))) THEN COUNT(*) END) ISNULL);
SELECT rt0.c1 FROM rt0;
SELECT ALL rt0.c1 FROM rt0 WHERE (MIN((- ('-907612165')), 0.15922498033294663, ((rt0.c1)OR(rt0.c1)), (- (-1.132804976E9)))) UNION ALL SELECT ALL rt0.c1 FROM rt0 WHERE ((NOT (MIN((- ('-907612165')), 0.15922498033294663, ((rt0.c1)OR(rt0.c1)), (- (-1.132804976E9)))))) UNION ALL SELECT ALL rt0.c1 FROM rt0 WHERE (((MIN((- ('-907612165')), 0.15922498033294663, ((rt0.c1)OR(rt0.c1)), (- (-1.132804976E9)))) ISNULL));
SELECT rt0.c1 FROM rt0;
SELECT DISTINCT * FROM rt0, vt2, vt1;
SELECT DISTINCT * FROM rt0, vt2, vt1 WHERE ((+ (vt1.c0))) UNION SELECT DISTINCT * FROM rt0, vt2, vt1 NOT INDEXED WHERE ((NOT ((+ (vt1.c0))))) UNION SELECT DISTINCT * FROM rt0, vt2, vt1 WHERE ((((+ (vt1.c0))) ISNULL));
SELECT DISTINCT * FROM rt0, vt2, vt1;
SELECT vt1.c0 FROM rt0, vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM rt0, vt1 WHERE (CASE WHEN ((rt0.c1)OR(rt0.c1)) THEN CASE WHEN 'TRUE' THEN rt0.c2 END ELSE ((((((((rt0.c2)AND(rt0.c2)))AND(rt0.c1)))OR(0.7068102607763203)))AND(vt1.c0)) END) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM rt0, vt1 WHERE ((NOT (CASE WHEN ((rt0.c1)OR(rt0.c1)) THEN CASE WHEN 'TRUE' THEN rt0.c2 END ELSE ((((((((rt0.c2)AND(rt0.c2)))AND(rt0.c1)))OR(0.7068102607763203)))AND(vt1.c0)) END))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM rt0, vt1 WHERE (((CASE WHEN ((rt0.c1)OR(rt0.c1)) THEN CASE WHEN 'TRUE' THEN rt0.c2 END ELSE ((((((((rt0.c2)AND(rt0.c2)))AND(rt0.c1)))OR(0.7068102607763203)))AND(vt1.c0)) END) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM rt0, vt1 GROUP BY vt1.c0;
SELECT rt0.c0, vt1.c0, rt0.c1 FROM vt1, rt0 GROUP BY rt0.c0, vt1.c0, rt0.c1;
SELECT rt0.c0, vt1.c0, rt0.c1 FROM vt1, rt0 GROUP BY rt0.c0, vt1.c0, rt0.c1 HAVING MIN(SUM(rt0.c0)) UNION ALL SELECT rt0.c0, vt1.c0, rt0.c1 FROM vt1, rt0 GROUP BY rt0.c0, vt1.c0, rt0.c1 HAVING (NOT (MIN(SUM(rt0.c0)))) UNION ALL SELECT ALL rt0.c0, vt1.c0, rt0.c1 FROM vt1, rt0 GROUP BY rt0.c0, vt1.c0, rt0.c1 HAVING ((MIN(SUM(rt0.c0))) ISNULL);
SELECT * FROM vt2, rt0;
SELECT * FROM vt2, rt0 WHERE ('-1013588008') UNION ALL SELECT * FROM vt2, rt0 WHERE ((NOT ('-1013588008'))) UNION ALL SELECT * FROM vt2, rt0 WHERE ((('-1013588008') ISNULL));
SELECT * FROM vt2, rt0;
SELECT DISTINCT * FROM vt1, vt2, rt0;
SELECT DISTINCT * FROM vt1, vt2, rt0 NOT INDEXED WHERE ((((((((((+ (rt0.c2)))AND(IFNULL(DISTINCT rt0.c2, vt2.c0))))OR(((rt0.c1)+(vt1.c0)))))OR(((rt0.c2) BETWEEN (rt0.c1) AND (vt1.c0)))))OR(NULL))) UNION SELECT DISTINCT * FROM vt1, vt2, rt0 WHERE ((NOT ((((((((((+ (rt0.c2)))AND(IFNULL(DISTINCT rt0.c2, vt2.c0))))OR(((rt0.c1)+(vt1.c0)))))OR(((rt0.c2) BETWEEN (rt0.c1) AND (vt1.c0)))))OR(NULL))))) UNION SELECT DISTINCT * FROM vt1, vt2, rt0 WHERE ((((((((((((+ (rt0.c2)))AND(IFNULL(DISTINCT rt0.c2, vt2.c0))))OR(((rt0.c1)+(vt1.c0)))))OR(((rt0.c2) BETWEEN (rt0.c1) AND (vt1.c0)))))OR(NULL))) ISNULL));
SELECT DISTINCT * FROM vt1, vt2, rt0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE ((((vt1.c0 IN ()))==((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT ((((vt1.c0 IN ()))=((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((((((vt1.c0 IN ()))=((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))))) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT rt0.c1, vt2.c0 FROM vt1, rt0 INNER JOIN vt2 ON ((((((((((rt0.c2) NOT NULL))AND(CASE rt0.c2  WHEN rt0.c0 THEN vt1.c0 END)))AND(CAST(rt0.c2 AS BLOB))))AND(CAST(vt1.c0 AS INTEGER))))OR((+ (vt1.c0)))) GROUP BY rt0.c1, vt2.c0;
SELECT ALL rt0.c1, vt2.c0 FROM vt1, rt0 INNER JOIN vt2 ON ((((((((((rt0.c2) NOT NULL))AND(CASE rt0.c2  WHEN rt0.c0 THEN vt1.c0 END)))AND(CAST(rt0.c2 AS BLOB))))AND(CAST(vt1.c0 AS INTEGER))))OR((+ (vt1.c0)))) GROUP BY rt0.c1, vt2.c0 HAVING CAST(((AVG(rt0.c1))<=(rt0.c2)) AS TEXT) UNION ALL SELECT ALL rt0.c1, vt2.c0 FROM vt1, rt0 INNER JOIN vt2 ON ((((((((((rt0.c2) NOT NULL))AND(CASE rt0.c2  WHEN rt0.c0 THEN vt1.c0 END)))AND(CAST(rt0.c2 AS BLOB))))AND(CAST(vt1.c0 AS INTEGER))))OR((+ (vt1.c0)))) GROUP BY rt0.c1, vt2.c0 HAVING (NOT (CAST(((AVG(rt0.c1))<=(rt0.c2)) AS TEXT))) UNION ALL SELECT rt0.c1, vt2.c0 FROM vt1, rt0 INNER JOIN vt2 ON ((((((((((rt0.c2) NOT NULL))AND(CASE rt0.c2  WHEN rt0.c0 THEN vt1.c0 END)))AND(CAST(rt0.c2 AS BLOB))))AND(CAST(vt1.c0 AS INTEGER))))OR((+ (vt1.c0)))) GROUP BY rt0.c1, vt2.c0 HAVING ((CAST(((AVG(rt0.c1))<=(rt0.c2)) AS TEXT)) ISNULL);
SELECT rt0.c1, vt2.c0 FROM vt1, rt0 INNER JOIN vt2 ON ((((((((((rt0.c2) NOT NULL))AND(CASE rt0.c2  WHEN rt0.c0 THEN vt1.c0 END)))AND(CAST(rt0.c2 AS BLOB))))AND(CAST(vt1.c0 AS INTEGER))))OR((+ (vt1.c0)))) GROUP BY rt0.c1, vt2.c0;
SELECT ALL rt0.c1, vt2.c0 FROM vt1, rt0 INNER JOIN vt2 ON ((((((((((rt0.c2) NOT NULL))AND(CASE rt0.c2  WHEN rt0.c0 THEN vt1.c0 END)))AND(CAST(rt0.c2 AS BLOB))))AND(CAST(vt1.c0 AS INTEGER))))OR((+ (vt1.c0)))) GROUP BY rt0.c1, vt2.c0 HAVING CAST(((AVG(rt0.c1))<=(rt0.c2)) AS TEXT) UNION ALL SELECT ALL rt0.c1, vt2.c0 FROM vt1, rt0 INNER JOIN vt2 ON ((((((((((rt0.c2) NOT NULL))AND(CASE rt0.c2  WHEN rt0.c0 THEN vt1.c0 END)))AND(CAST(rt0.c2 AS BLOB))))AND(CAST(vt1.c0 AS INTEGER))))OR((+ (vt1.c0)))) GROUP BY rt0.c1, vt2.c0 HAVING (NOT (CAST(((AVG(rt0.c1))<=(rt0.c2)) AS TEXT))) UNION ALL SELECT rt0.c1, vt2.c0 FROM vt1, rt0 INNER JOIN vt2 ON ((((((((((rt0.c2) NOT NULL))AND(CASE rt0.c2  WHEN rt0.c0 THEN vt1.c0 END)))AND(CAST(rt0.c2 AS BLOB))))AND(CAST(vt1.c0 AS INTEGER))))OR((+ (vt1.c0)))) GROUP BY rt0.c1, vt2.c0 HAVING ((CAST(((AVG(rt0.c1))<=(rt0.c2)) AS TEXT)) ISNULL);
SELECT rt0.c1, vt2.c0 FROM vt1, rt0 INNER JOIN vt2 ON ((((((((((rt0.c2) NOT NULL))AND(CASE rt0.c2  WHEN rt0.c0 THEN vt1.c0 END)))AND(CAST(rt0.c2 AS BLOB))))AND(CAST(vt1.c0 AS INTEGER))))OR((+ (vt1.c0)))) GROUP BY rt0.c1, vt2.c0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0, vt1.c0 FROM rt0 RIGHT OUTER JOIN vt1 ON ((((((rt0.c0)<(vt1.c0)))OR(((rt0.c1)IS('-1056186641')))))AND((((vt1.c0, rt0.c2, rt0.c0))<=((rt0.c1, rt0.c1, rt0.c2)))));
SELECT ALL rt0.c2, rt0.c1, rt0.c0, vt1.c0 FROM rt0 RIGHT OUTER JOIN vt1 ON ((((((rt0.c0)<(vt1.c0)))OR(((rt0.c1)IS('-1056186641')))))AND((((vt1.c0, rt0.c2, rt0.c0))<=((rt0.c1, rt0.c1, rt0.c2))))) WHERE ((((((0.6199891535643645 IN (rt0.c1)))OR((((rt0.c2)) BETWEEN ((vt1.c0)) AND ((NULL))))))AND((NOT (vt1.c0))))) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0, vt1.c0 FROM rt0 RIGHT OUTER JOIN vt1 ON ((((((rt0.c0)<(vt1.c0)))OR(((rt0.c1)IS('-1056186641')))))AND((((vt1.c0, rt0.c2, rt0.c0))<=((rt0.c1, rt0.c1, rt0.c2))))) WHERE ((NOT ((((((0.6199891535643645 IN (rt0.c1)))OR((((rt0.c2)) BETWEEN ((vt1.c0)) AND ((NULL))))))AND((NOT (vt1.c0))))))) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0, vt1.c0 FROM rt0 RIGHT OUTER JOIN vt1 ON ((((((rt0.c0)<(vt1.c0)))OR(((rt0.c1)IS('-1056186641')))))AND((((vt1.c0, rt0.c2, rt0.c0))<=((rt0.c1, rt0.c1, rt0.c2))))) WHERE ((((((((0.6199891535643645 IN (rt0.c1)))OR((((rt0.c2)) BETWEEN ((vt1.c0)) AND ((NULL))))))AND((NOT (vt1.c0))))) ISNULL));
SELECT ALL rt0.c2, rt0.c1, rt0.c0, vt1.c0 FROM rt0 RIGHT OUTER JOIN vt1 ON ((((((rt0.c0)<(vt1.c0)))OR(((rt0.c1)IS('-1056186641')))))AND((((vt1.c0, rt0.c2, rt0.c0))<=((rt0.c1, rt0.c1, rt0.c2)))));
SELECT DISTINCT vt1.c0 FROM vt1, vt2;
SELECT DISTINCT vt1.c0 FROM vt1, vt2 WHERE (((((CASE vt1.c0  WHEN vt2.c0 THEN vt1.c0 ELSE vt2.c0 END)AND(0.08578747834682243)))AND(vt2.c0))) UNION SELECT DISTINCT vt1.c0 FROM vt1, vt2 WHERE ((NOT (((((CASE vt1.c0  WHEN vt2.c0 THEN vt1.c0 ELSE vt2.c0 END)AND(0.08578747834682243)))AND(vt2.c0))))) UNION SELECT DISTINCT vt1.c0 FROM vt1, vt2 WHERE (((((((CASE vt1.c0  WHEN vt2.c0 THEN vt1.c0 ELSE vt2.c0 END)AND(0.08578747834682243)))AND(vt2.c0))) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1, vt2;
SELECT ALL rt0.c2 FROM vt2, vt1, rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM vt2, vt1, rt0 WHERE (NULLIF(vt2.c0, rt0.c1) COLLATE NOCASE) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM vt2, vt1, rt0 WHERE ((NOT (NULLIF(vt2.c0, rt0.c1) COLLATE NOCASE))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM vt2, vt1, rt0 WHERE (((NULLIF(vt2.c0, rt0.c1) COLLATE NOCASE) ISNULL)) GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM vt2, vt1, rt0 GROUP BY rt0.c2;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING TOTAL(((((((((COUNT(*))AND(MAX(vt1.c0))))AND(vt1.c0)))OR(AVG(COUNT(*)))))AND(vt1.c0))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (TOTAL(((((((((COUNT(*))AND(MAX(vt1.c0))))AND(vt1.c0)))OR(AVG(COUNT(*)))))AND(vt1.c0))))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((TOTAL(((((((((COUNT(*))AND(MAX(vt1.c0))))AND(vt1.c0)))OR(AVG(COUNT(*)))))AND(vt1.c0)))) ISNULL);
SELECT * FROM vt2;
SELECT ALL * FROM vt2 WHERE (((NULL) NOT NULL)) UNION ALL SELECT ALL * FROM vt2 WHERE ((NOT (((NULL) NOT NULL)))) UNION ALL SELECT * FROM vt2 WHERE (((((NULL) NOT NULL)) ISNULL));
SELECT * FROM vt2;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (((+ (vt1.c0)) IN ((x'' IN (vt1.c0)), ((vt1.c0)||(vt1.c0))))) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (((+ (vt1.c0)) IN ((x'' IN (vt1.c0)), ((vt1.c0)||(vt1.c0))))))) UNION SELECT DISTINCT * FROM vt1 WHERE (((((+ (vt1.c0)) IN ((x'' IN (vt1.c0)), ((vt1.c0)||(vt1.c0))))) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT vt1.c0, rt0.c0 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c0;
SELECT vt1.c0, rt0.c0 FROM vt1, rt0 WHERE ((+ ((((vt1.c0, rt0.c2, vt1.c0))<((x'', rt0.c2, vt1.c0)))))) GROUP BY vt1.c0, rt0.c0 UNION SELECT ALL vt1.c0, rt0.c0 FROM vt1, rt0 WHERE ((NOT ((+ ((((vt1.c0, rt0.c2, vt1.c0))<((x'', rt0.c2, vt1.c0)))))))) GROUP BY vt1.c0, rt0.c0 UNION SELECT vt1.c0, rt0.c0 FROM vt1, rt0 WHERE ((((+ ((((vt1.c0, rt0.c2, vt1.c0))<((x'', rt0.c2, vt1.c0)))))) ISNULL)) GROUP BY vt1.c0, rt0.c0;
SELECT vt1.c0, rt0.c0 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c0;
SELECT ALL vt1.c0, vt2.c0 FROM vt2, vt1 GROUP BY vt1.c0, vt2.c0;
SELECT ALL vt1.c0, vt2.c0 FROM vt2, vt1 GROUP BY vt1.c0, vt2.c0 HAVING ((MAX(vt2.c0) COLLATE RTRIM)%(SUM(vt2.c0))) UNION ALL SELECT ALL vt1.c0, vt2.c0 FROM vt2, vt1 GROUP BY vt1.c0, vt2.c0 HAVING (NOT (((MAX(vt2.c0) COLLATE RTRIM)%(SUM(vt2.c0))))) UNION ALL SELECT ALL vt1.c0, vt2.c0 FROM vt2, vt1 GROUP BY vt1.c0, vt2.c0 HAVING ((((MAX(vt2.c0) COLLATE RTRIM)%(SUM(vt2.c0)))) ISNULL);
SELECT ALL vt1.c0, vt2.c0 FROM vt2, vt1 GROUP BY vt1.c0, vt2.c0;
SELECT ALL vt1.c0, vt2.c0 FROM vt2, vt1 GROUP BY vt1.c0, vt2.c0 HAVING ((MAX(vt2.c0) COLLATE RTRIM)%(SUM(vt2.c0))) UNION ALL SELECT ALL vt1.c0, vt2.c0 FROM vt2, vt1 GROUP BY vt1.c0, vt2.c0 HAVING (NOT (((MAX(vt2.c0) COLLATE RTRIM)%(SUM(vt2.c0))))) UNION ALL SELECT ALL vt1.c0, vt2.c0 FROM vt2, vt1 GROUP BY vt1.c0, vt2.c0 HAVING ((((MAX(vt2.c0) COLLATE RTRIM)%(SUM(vt2.c0)))) ISNULL);
SELECT ALL vt1.c0, vt2.c0 FROM vt2, vt1 GROUP BY vt1.c0, vt2.c0;
SELECT vt2.c0 FROM vt2;
SELECT ALL vt2.c0 FROM vt2 WHERE (vt2.c0 COLLATE NOCASE) UNION ALL SELECT vt2.c0 FROM vt2 WHERE ((NOT (vt2.c0 COLLATE NOCASE))) UNION ALL SELECT vt2.c0 FROM vt2 WHERE (((vt2.c0 COLLATE NOCASE) ISNULL));
SELECT vt2.c0 FROM vt2;
SELECT DISTINCT * FROM vt2;
SELECT DISTINCT * FROM vt2 WHERE (TRIM(CASE WHEN vt2.c0 THEN vt2.c0 WHEN vt2.c0 THEN vt2.c0 WHEN vt2.c0 THEN vt2.c0 ELSE x'' END, ((vt2.c0) IS TRUE))) UNION SELECT DISTINCT * FROM vt2 WHERE ((NOT (TRIM(CASE WHEN vt2.c0 THEN vt2.c0 WHEN vt2.c0 THEN vt2.c0 WHEN vt2.c0 THEN vt2.c0 ELSE x'' END, ((vt2.c0) IS TRUE))))) UNION SELECT DISTINCT * FROM vt2 WHERE (((TRIM(CASE WHEN vt2.c0 THEN vt2.c0 WHEN vt2.c0 THEN vt2.c0 WHEN vt2.c0 THEN vt2.c0 ELSE x'' END, ((vt2.c0) IS TRUE))) ISNULL));
SELECT DISTINCT * FROM vt2;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE ((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)) IN ())) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT ((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)) IN ())))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)) IN ())) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT rt0.c1, rt0.c0 FROM vt1, rt0, vt2 GROUP BY rt0.c1, rt0.c0;
SELECT rt0.c1, rt0.c0 FROM vt1, rt0, vt2 GROUP BY rt0.c1, rt0.c0 HAVING '䢀㐝P톐' UNION ALL SELECT rt0.c1, rt0.c0 FROM vt1, rt0, vt2 GROUP BY rt0.c1, rt0.c0 HAVING (NOT ('䢀㐝P톐')) UNION ALL SELECT ALL rt0.c1, rt0.c0 FROM vt1, rt0, vt2 GROUP BY rt0.c1, rt0.c0 HAVING (('䢀㐝P톐') ISNULL);
SELECT rt0.c1, rt0.c0 FROM vt1, rt0, vt2 GROUP BY rt0.c1, rt0.c0;
SELECT rt0.c1, rt0.c0 FROM vt1, rt0, vt2 GROUP BY rt0.c1, rt0.c0 HAVING '䢀㐝P톐' UNION ALL SELECT rt0.c1, rt0.c0 FROM vt1, rt0, vt2 GROUP BY rt0.c1, rt0.c0 HAVING (NOT ('䢀㐝P톐')) UNION ALL SELECT ALL rt0.c1, rt0.c0 FROM vt1, rt0, vt2 GROUP BY rt0.c1, rt0.c0 HAVING (('䢀㐝P톐') ISNULL);
SELECT rt0.c1, rt0.c0 FROM vt1, rt0, vt2 GROUP BY rt0.c1, rt0.c0;
SELECT ALL SUM(((HEX(rt0.c0))*((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2)))))) FROM rt0, vt1;
SELECT ALL vt1.c0, vt2.c0 FROM vt1 RIGHT OUTER JOIN vt2 ON ((x'8c3c')<=((- (vt1.c0))));
SELECT ALL vt1.c0, vt2.c0 FROM vt1 RIGHT OUTER JOIN vt2 ON ((x'8c3c')<=((- (vt1.c0)))) WHERE (CAST(((vt1.c0) NOT NULL) AS BLOB)) UNION ALL SELECT vt1.c0, vt2.c0 FROM vt1 RIGHT OUTER JOIN vt2 ON ((x'8c3c')<=((- (vt1.c0)))) WHERE ((NOT (CAST(((vt1.c0) NOT NULL) AS BLOB)))) UNION ALL SELECT ALL vt1.c0, vt2.c0 FROM vt1 RIGHT OUTER JOIN vt2 ON ((x'8c3c')<=((- (vt1.c0)))) WHERE (((CAST(((vt1.c0) NOT NULL) AS BLOB)) ISNULL));
SELECT ALL vt1.c0, vt2.c0 FROM vt1 RIGHT OUTER JOIN vt2 ON ((x'8c3c')<=((- (vt1.c0))));
SELECT DISTINCT vt1.c0, rt0.c0, vt2.c0 FROM vt1 INNER JOIN vt2 ON ((((rt0.c0) NOTNULL)) NOT NULL) INNER JOIN rt0 ON CASE vt2.c0  WHEN CASE rt0.c2  WHEN vt2.c0 THEN rt0.c1 WHEN vt2.c0 THEN x'9f43' WHEN vt1.c0 THEN rt0.c0 END THEN ((vt1.c0)>>(vt1.c0)) WHEN (((rt0.c0, vt1.c0, rt0.c1))>=((rt0.c2, '', rt0.c1))) THEN ((rt0.c1)*(rt0.c1)) WHEN ((((((((((((rt0.c0)AND(rt0.c2)))OR(rt0.c0)))AND(rt0.c1)))OR(rt0.c2)))AND(rt0.c2)))AND(vt2.c0)) THEN ((rt0.c1)=(NULL)) ELSE CAST(rt0.c1 AS NUMERIC) END;
SELECT DISTINCT vt1.c0, rt0.c0, vt2.c0 FROM vt1 INNER JOIN vt2 ON ((((rt0.c0) NOTNULL)) NOT NULL) INNER JOIN rt0 ON CASE vt2.c0  WHEN CASE rt0.c2  WHEN vt2.c0 THEN rt0.c1 WHEN vt2.c0 THEN x'9f43' WHEN vt1.c0 THEN rt0.c0 END THEN ((vt1.c0)>>(vt1.c0)) WHEN (((rt0.c0, vt1.c0, rt0.c1))>=((rt0.c2, '', rt0.c1))) THEN ((rt0.c1)*(rt0.c1)) WHEN ((((((((((((rt0.c0)AND(rt0.c2)))OR(rt0.c0)))AND(rt0.c1)))OR(rt0.c2)))AND(rt0.c2)))AND(vt2.c0)) THEN ((rt0.c1)=(NULL)) ELSE CAST(rt0.c1 AS NUMERIC) END WHERE ('' COLLATE RTRIM) UNION SELECT DISTINCT vt1.c0, rt0.c0, vt2.c0 FROM vt1 INNER JOIN vt2 ON ((((rt0.c0) NOTNULL)) NOT NULL) INNER JOIN rt0 ON CASE vt2.c0  WHEN CASE rt0.c2  WHEN vt2.c0 THEN rt0.c1 WHEN vt2.c0 THEN x'9f43' WHEN vt1.c0 THEN rt0.c0 END THEN ((vt1.c0)>>(vt1.c0)) WHEN (((rt0.c0, vt1.c0, rt0.c1))>=((rt0.c2, '', rt0.c1))) THEN ((rt0.c1)*(rt0.c1)) WHEN ((((((((((((rt0.c0)AND(rt0.c2)))OR(rt0.c0)))AND(rt0.c1)))OR(rt0.c2)))AND(rt0.c2)))AND(vt2.c0)) THEN ((rt0.c1)==(NULL)) ELSE CAST(rt0.c1 AS NUMERIC) END WHERE ((NOT ('' COLLATE RTRIM))) UNION SELECT DISTINCT vt1.c0, rt0.c0, vt2.c0 FROM vt1 INNER JOIN vt2 ON ((((rt0.c0) NOTNULL)) NOT NULL) INNER JOIN rt0 ON CASE vt2.c0  WHEN CASE rt0.c2  WHEN vt2.c0 THEN rt0.c1 WHEN vt2.c0 THEN x'9f43' WHEN vt1.c0 THEN rt0.c0 END THEN ((vt1.c0)>>(vt1.c0)) WHEN (((rt0.c0, vt1.c0, rt0.c1))>=((rt0.c2, '', rt0.c1))) THEN ((rt0.c1)*(rt0.c1)) WHEN ((((((((((((rt0.c0)AND(rt0.c2)))OR(rt0.c0)))AND(rt0.c1)))OR(rt0.c2)))AND(rt0.c2)))AND(vt2.c0)) THEN ((rt0.c1)=(NULL)) ELSE CAST(rt0.c1 AS NUMERIC) END WHERE ((('' COLLATE RTRIM) ISNULL));
SELECT DISTINCT vt1.c0, rt0.c0, vt2.c0 FROM vt1 INNER JOIN vt2 ON ((((rt0.c0) NOTNULL)) NOT NULL) INNER JOIN rt0 ON CASE vt2.c0  WHEN CASE rt0.c2  WHEN vt2.c0 THEN rt0.c1 WHEN vt2.c0 THEN x'9f43' WHEN vt1.c0 THEN rt0.c0 END THEN ((vt1.c0)>>(vt1.c0)) WHEN (((rt0.c0, vt1.c0, rt0.c1))>=((rt0.c2, '', rt0.c1))) THEN ((rt0.c1)*(rt0.c1)) WHEN ((((((((((((rt0.c0)AND(rt0.c2)))OR(rt0.c0)))AND(rt0.c1)))OR(rt0.c2)))AND(rt0.c2)))AND(vt2.c0)) THEN ((rt0.c1)=(NULL)) ELSE CAST(rt0.c1 AS NUMERIC) END;
SELECT rt0.c0, vt1.c0 FROM rt0 NATURAL JOIN vt1 GROUP BY rt0.c0, vt1.c0;
SELECT ALL rt0.c0, vt1.c0 FROM rt0 NATURAL JOIN vt1 WHERE (((load_extension(rt0.c2, vt1.c0)) BETWEEN (CAST(rt0.c1 AS INTEGER)) AND (((0x27f98cb7) BETWEEN (rt0.c0) AND (rt0.c1))))) GROUP BY rt0.c0, vt1.c0 UNION SELECT ALL rt0.c0, vt1.c0 FROM rt0 NATURAL JOIN vt1 WHERE ((NOT (((load_extension(rt0.c2, vt1.c0)) BETWEEN (CAST(rt0.c1 AS INTEGER)) AND (((0X27f98cb7) BETWEEN (rt0.c0) AND (rt0.c1))))))) GROUP BY rt0.c0, vt1.c0 UNION SELECT ALL rt0.c0, vt1.c0 FROM rt0 NATURAL JOIN vt1 WHERE (((((load_extension(rt0.c2, vt1.c0)) BETWEEN (CAST(rt0.c1 AS INTEGER)) AND (((0X27f98cb7) BETWEEN (rt0.c0) AND (rt0.c1))))) ISNULL)) GROUP BY rt0.c0, vt1.c0;
SELECT rt0.c0, vt1.c0 FROM rt0 NATURAL JOIN vt1 GROUP BY rt0.c0, vt1.c0;
SELECT vt1.c0, vt2.c0 FROM vt2, vt1 GROUP BY vt1.c0, vt2.c0;
SELECT ALL vt1.c0, vt2.c0 FROM vt2, vt1 GROUP BY vt1.c0, vt2.c0 HAVING ((CAST(-1525308764 AS TEXT)) IS FALSE) UNION ALL SELECT ALL vt1.c0, vt2.c0 FROM vt2, vt1 GROUP BY vt1.c0, vt2.c0 HAVING (NOT (((CAST(-1525308764 AS TEXT)) IS FALSE))) UNION ALL SELECT vt1.c0, vt2.c0 FROM vt2, vt1 GROUP BY vt1.c0, vt2.c0 HAVING ((((CAST(-1525308764 AS TEXT)) IS FALSE)) ISNULL);
SELECT vt1.c0, vt2.c0 FROM vt2, vt1 GROUP BY vt1.c0, vt2.c0;
SELECT ALL vt1.c0, vt2.c0 FROM vt2, vt1 GROUP BY vt1.c0, vt2.c0 HAVING ((CAST(-1525308764 AS TEXT)) IS FALSE) UNION ALL SELECT ALL vt1.c0, vt2.c0 FROM vt2, vt1 GROUP BY vt1.c0, vt2.c0 HAVING (NOT (((CAST(-1525308764 AS TEXT)) IS FALSE))) UNION ALL SELECT vt1.c0, vt2.c0 FROM vt2, vt1 GROUP BY vt1.c0, vt2.c0 HAVING ((((CAST(-1525308764 AS TEXT)) IS FALSE)) ISNULL);
SELECT vt1.c0, vt2.c0 FROM vt2, vt1 GROUP BY vt1.c0, vt2.c0;
SELECT ALL vt1.c0, vt2.c0 FROM vt2, vt1;
SELECT vt1.c0, vt2.c0 FROM vt2, vt1 WHERE (load_extension(LOWER(DISTINCT vt2.c0))) UNION ALL SELECT ALL vt1.c0, vt2.c0 FROM vt2, vt1 WHERE ((NOT (load_extension(LOWER(DISTINCT vt2.c0))))) UNION ALL SELECT ALL vt1.c0, vt2.c0 FROM vt2, vt1 WHERE (((load_extension(LOWER(DISTINCT vt2.c0))) ISNULL));
SELECT DISTINCT rt0.c1, vt2.c0 FROM vt2, vt1, rt0;
SELECT DISTINCT rt0.c1, vt2.c0 FROM vt2, vt1, rt0 WHERE (((((rt0.c1)IS(rt0.c1))) BETWEEN ((vt1.c0 IN ())) AND (((NULL) BETWEEN (vt2.c0) AND (vt2.c0))))) UNION SELECT DISTINCT rt0.c1, vt2.c0 FROM vt2, vt1, rt0 WHERE ((NOT (((((rt0.c1)IS(rt0.c1))) BETWEEN ((vt1.c0 IN ())) AND (((NULL) BETWEEN (vt2.c0) AND (vt2.c0))))))) UNION SELECT DISTINCT rt0.c1, vt2.c0 FROM vt2, vt1, rt0 WHERE (((((((rt0.c1)IS(rt0.c1))) BETWEEN ((vt1.c0 IN ())) AND (((NULL) BETWEEN (vt2.c0) AND (vt2.c0))))) ISNULL));
SELECT DISTINCT rt0.c1, vt2.c0 FROM vt2, vt1, rt0;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 LEFT OUTER JOIN vt2 ON (((+ (vt2.c0)))>>(rt0.c2)) GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 LEFT OUTER JOIN vt2 ON (((+ (vt2.c0)))>>(rt0.c2)) WHERE (((((rt0.c2) IS FALSE))<=((rt0.c2 IN ())))) GROUP BY rt0.c0, rt0.c1, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 LEFT OUTER JOIN vt2 ON (((+ (vt2.c0)))>>(rt0.c2)) WHERE ((NOT (((((rt0.c2) IS FALSE))<=((rt0.c2 IN ())))))) GROUP BY rt0.c0, rt0.c1, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 LEFT OUTER JOIN vt2 ON (((+ (vt2.c0)))>>(rt0.c2)) WHERE (((((((rt0.c2) IS FALSE))<=((rt0.c2 IN ())))) ISNULL)) GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 LEFT OUTER JOIN vt2 ON (((+ (vt2.c0)))>>(rt0.c2)) GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, rt0.c1, vt2.c0 FROM vt2, rt0 GROUP BY rt0.c0, rt0.c1, vt2.c0;
SELECT rt0.c0, rt0.c1, vt2.c0 FROM vt2, rt0 GROUP BY rt0.c0, rt0.c1, vt2.c0 HAVING SUM(TRIM(COUNT(*))) UNION ALL SELECT ALL rt0.c0, rt0.c1, vt2.c0 FROM vt2, rt0 GROUP BY rt0.c0, rt0.c1, vt2.c0 HAVING (NOT (SUM(TRIM(COUNT(*))))) UNION ALL SELECT ALL rt0.c0, rt0.c1, vt2.c0 FROM vt2, rt0 GROUP BY rt0.c0, rt0.c1, vt2.c0 HAVING ((SUM(TRIM(COUNT(*)))) ISNULL);
SELECT * FROM vt1;
SELECT * FROM vt1 WHERE ('-1111454560') UNION ALL SELECT ALL * FROM vt1 WHERE ((NOT ('-1111454560'))) UNION ALL SELECT * FROM vt1 WHERE ((('-1111454560') ISNULL));
SELECT * FROM vt1;
SELECT DISTINCT * FROM vt2 FULL OUTER JOIN vt1 ON TYPEOF((('') IS FALSE));
SELECT DISTINCT * FROM vt2 FULL OUTER JOIN vt1 ON TYPEOF((('') IS FALSE)) WHERE (CASE WHEN (((vt1.c0, vt2.c0, '-245938099'))<=((vt1.c0, vt2.c0, vt1.c0))) THEN load_extension(vt2.c0) WHEN (((vt2.c0, vt2.c0, vt1.c0, 0x2a9ee54b, x''))<=((vt2.c0, vt2.c0, vt1.c0, vt2.c0, vt1.c0))) THEN ((((vt2.c0)OR(NULL)))AND(vt2.c0)) WHEN CAST(vt2.c0 AS TEXT) THEN vt2.c0 ELSE (('-1077037350') NOT BETWEEN (vt2.c0) AND (vt1.c0)) END) UNION SELECT DISTINCT * FROM vt2 FULL OUTER JOIN vt1 ON TYPEOF((('') IS FALSE)) WHERE ((NOT (CASE WHEN (((vt1.c0, vt2.c0, '-245938099'))<=((vt1.c0, vt2.c0, vt1.c0))) THEN load_extension(vt2.c0) WHEN (((vt2.c0, vt2.c0, vt1.c0, 0X2a9ee54b, x''))<=((vt2.c0, vt2.c0, vt1.c0, vt2.c0, vt1.c0))) THEN ((((vt2.c0)OR(NULL)))AND(vt2.c0)) WHEN CAST(vt2.c0 AS TEXT) THEN vt2.c0 ELSE (('-1077037350') NOT BETWEEN (vt2.c0) AND (vt1.c0)) END))) UNION SELECT DISTINCT * FROM vt2 FULL OUTER JOIN vt1 ON TYPEOF((('') IS FALSE)) WHERE (((CASE WHEN (((vt1.c0, vt2.c0, '-245938099'))<=((vt1.c0, vt2.c0, vt1.c0))) THEN load_extension(vt2.c0) WHEN (((vt2.c0, vt2.c0, vt1.c0, 0X2a9ee54b, x''))<=((vt2.c0, vt2.c0, vt1.c0, vt2.c0, vt1.c0))) THEN ((((vt2.c0)OR(NULL)))AND(vt2.c0)) WHEN CAST(vt2.c0 AS TEXT) THEN vt2.c0 ELSE (('-1077037350') NOT BETWEEN (vt2.c0) AND (vt1.c0)) END) ISNULL));
SELECT DISTINCT * FROM vt2 FULL OUTER JOIN vt1 ON TYPEOF((('') IS FALSE));
SELECT vt2.c0, rt0.c2, rt0.c0 FROM rt0, vt2 GROUP BY vt2.c0, rt0.c2, rt0.c0;
SELECT ALL vt2.c0, rt0.c2, rt0.c0 FROM rt0, vt2 WHERE ((((vt2.c0)) BETWEEN ((((((((((((((rt0.c0)OR(rt0.c0)))OR(vt2.c0)))AND(rt0.c0)))OR(rt0.c0)))AND(rt0.c2)))OR(rt0.c2)))) AND (((((NULL, vt2.c0, rt0.c1)) NOT BETWEEN ((rt0.c1, 0.5562999724880311, rt0.c1)) AND ((rt0.c2, rt0.c1, rt0.c2))))))) GROUP BY vt2.c0, rt0.c2, rt0.c0 UNION SELECT ALL vt2.c0, rt0.c2, rt0.c0 FROM rt0, vt2 WHERE ((NOT ((((vt2.c0)) BETWEEN ((((((((((((((rt0.c0)OR(rt0.c0)))OR(vt2.c0)))AND(rt0.c0)))OR(rt0.c0)))AND(rt0.c2)))OR(rt0.c2)))) AND (((((NULL, vt2.c0, rt0.c1)) NOT BETWEEN ((rt0.c1, 0.5562999724880311, rt0.c1)) AND ((rt0.c2, rt0.c1, rt0.c2))))))))) GROUP BY vt2.c0, rt0.c2, rt0.c0 UNION SELECT vt2.c0, rt0.c2, rt0.c0 FROM rt0, vt2 WHERE ((((((vt2.c0)) BETWEEN ((((((((((((((rt0.c0)OR(rt0.c0)))OR(vt2.c0)))AND(rt0.c0)))OR(rt0.c0)))AND(rt0.c2)))OR(rt0.c2)))) AND (((((NULL, vt2.c0, rt0.c1)) NOT BETWEEN ((rt0.c1, 0.5562999724880311, rt0.c1)) AND ((rt0.c2, rt0.c1, rt0.c2))))))) ISNULL)) GROUP BY vt2.c0, rt0.c2, rt0.c0;
SELECT vt2.c0, rt0.c2, rt0.c0 FROM rt0, vt2 GROUP BY vt2.c0, rt0.c2, rt0.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING TOTAL(((COUNT(vt1.c0))IS(vt1.c0))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (TOTAL(((COUNT(vt1.c0))IS(vt1.c0))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((TOTAL(((COUNT(vt1.c0))IS(vt1.c0)))) ISNULL);
SELECT ALL * FROM rt0, vt2, vt1;
SELECT ALL * FROM rt0, vt2, vt1 WHERE ((~ ((vt2.c0 IN ())))) UNION ALL SELECT * FROM rt0, vt2, vt1 WHERE ((NOT ((~ ((vt2.c0 IN ())))))) UNION ALL SELECT * FROM rt0, vt2, vt1 WHERE ((((~ ((vt2.c0 IN ())))) ISNULL));
SELECT ALL * FROM rt0, vt2, vt1;
SELECT DISTINCT * FROM vt2;
SELECT DISTINCT * FROM vt2 WHERE ((- (x'5b23')) COLLATE BINARY) UNION SELECT DISTINCT * FROM vt2 WHERE ((NOT ((- (x'5b23')) COLLATE BINARY))) UNION SELECT DISTINCT * FROM vt2 WHERE ((((- (x'5b23')) COLLATE BINARY) ISNULL));
SELECT DISTINCT * FROM vt2;
SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT vt2.c0 FROM vt2 WHERE (vt2.c0) GROUP BY vt2.c0 UNION SELECT vt2.c0 FROM vt2 WHERE ((NOT (vt2.c0))) GROUP BY vt2.c0 UNION SELECT ALL vt2.c0 FROM vt2 WHERE (((vt2.c0) ISNULL)) GROUP BY vt2.c0;
SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT rt0.c1, vt1.c0 FROM rt0, vt1 GROUP BY rt0.c1, vt1.c0;
SELECT rt0.c1, vt1.c0 FROM rt0, vt1 GROUP BY rt0.c1, vt1.c0 HAVING CAST(0.42950041308661047 AS BLOB) UNION ALL SELECT ALL rt0.c1, vt1.c0 FROM rt0, vt1 GROUP BY rt0.c1, vt1.c0 HAVING (NOT (CAST(0.42950041308661047 AS BLOB))) UNION ALL SELECT ALL rt0.c1, vt1.c0 FROM rt0, vt1 GROUP BY rt0.c1, vt1.c0 HAVING ((CAST(0.42950041308661047 AS BLOB)) ISNULL);
SELECT rt0.c1, vt1.c0 FROM rt0, vt1 GROUP BY rt0.c1, vt1.c0;
SELECT rt0.c1, vt1.c0 FROM rt0, vt1 GROUP BY rt0.c1, vt1.c0 HAVING CAST(0.42950041308661047 AS BLOB) UNION ALL SELECT ALL rt0.c1, vt1.c0 FROM rt0, vt1 GROUP BY rt0.c1, vt1.c0 HAVING (NOT (CAST(0.42950041308661047 AS BLOB))) UNION ALL SELECT ALL rt0.c1, vt1.c0 FROM rt0, vt1 GROUP BY rt0.c1, vt1.c0 HAVING ((CAST(0.42950041308661047 AS BLOB)) ISNULL);
SELECT rt0.c1, vt1.c0 FROM rt0, vt1 GROUP BY rt0.c1, vt1.c0;
SELECT rt0.c2 FROM rt0;
SELECT ALL rt0.c2 FROM rt0 WHERE (CASE WHEN ((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c2)) THEN (~ ('J寣')) ELSE ((rt0.c0) IS FALSE) END) UNION ALL SELECT ALL rt0.c2 FROM rt0 WHERE ((NOT (CASE WHEN ((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c2)) THEN (~ ('J寣')) ELSE ((rt0.c0) IS FALSE) END))) UNION ALL SELECT ALL rt0.c2 FROM rt0 WHERE (((CASE WHEN ((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c2)) THEN (~ ('J寣')) ELSE ((rt0.c0) IS FALSE) END) ISNULL));
SELECT rt0.c2 FROM rt0;
SELECT DISTINCT vt2.c0, rt0.c2, rt0.c0 FROM vt1, vt2 NOT INDEXED, rt0;
SELECT DISTINCT vt2.c0, rt0.c2, rt0.c0 FROM vt1, vt2, rt0 WHERE (CAST(rt0.c1 COLLATE RTRIM AS NUMERIC)) UNION SELECT DISTINCT vt2.c0, rt0.c2, rt0.c0 FROM vt1, vt2, rt0 WHERE ((NOT (CAST(rt0.c1 COLLATE RTRIM AS NUMERIC)))) UNION SELECT DISTINCT vt2.c0, rt0.c2, rt0.c0 FROM vt1, vt2, rt0 WHERE (((CAST(rt0.c1 COLLATE RTRIM AS NUMERIC)) ISNULL));
SELECT DISTINCT vt2.c0, rt0.c2, rt0.c0 FROM vt1, vt2 NOT INDEXED, rt0;
SELECT ALL vt1.c0, vt2.c0 FROM vt2, vt1 GROUP BY vt1.c0, vt2.c0;
SELECT vt1.c0, vt2.c0 FROM vt2, vt1 WHERE (vt1.c0) GROUP BY vt1.c0, vt2.c0 UNION SELECT vt1.c0, vt2.c0 FROM vt2, vt1 WHERE ((NOT (vt1.c0))) GROUP BY vt1.c0, vt2.c0 UNION SELECT ALL vt1.c0, vt2.c0 FROM vt2, vt1 WHERE (((vt1.c0) ISNULL)) GROUP BY vt1.c0, vt2.c0;
SELECT ALL vt1.c0, vt2.c0 FROM vt2, vt1 GROUP BY vt1.c0, vt2.c0;
SELECT ALL vt1.c0, rt0.c2, rt0.c1 FROM rt0, vt1 GROUP BY vt1.c0, rt0.c2, rt0.c1;
SELECT ALL vt1.c0, rt0.c2, rt0.c1 FROM rt0, vt1 GROUP BY vt1.c0, rt0.c2, rt0.c1 HAVING (+ (MAX(COUNT(rt0.c2)))) UNION ALL SELECT vt1.c0, rt0.c2, rt0.c1 FROM rt0, vt1 GROUP BY vt1.c0, rt0.c2, rt0.c1 HAVING (NOT ((+ (MAX(COUNT(rt0.c2)))))) UNION ALL SELECT ALL vt1.c0, rt0.c2, rt0.c1 FROM rt0, vt1 GROUP BY vt1.c0, rt0.c2, rt0.c1 HAVING (((+ (MAX(COUNT(rt0.c2))))) ISNULL);
SELECT * FROM vt2 CROSS JOIN rt0 ON '	{ZIp';
SELECT ALL * FROM vt2 CROSS JOIN rt0 ON '	{ZIp' WHERE (((x'327c')=(rt0.c1 COLLATE BINARY))) UNION ALL SELECT * FROM vt2 CROSS JOIN rt0 ON '	{ZIp' WHERE ((NOT (((x'327c')==(rt0.c1 COLLATE BINARY))))) UNION ALL SELECT * FROM vt2 CROSS JOIN rt0 ON '	{ZIp' WHERE (((((x'327c')=(rt0.c1 COLLATE BINARY))) ISNULL));
SELECT * FROM vt2 CROSS JOIN rt0 ON '	{ZIp';
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))<=(((((vt1.c0))<((vt1.c0))))))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT ((((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))<=(((((vt1.c0))<((vt1.c0))))))))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((((((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))<=(((((vt1.c0))<((vt1.c0))))))) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT ALL rt0.c2, rt0.c0 FROM rt0, vt1 RIGHT OUTER JOIN vt2 ON ((CAST(vt2.c0 AS BLOB))*(CAST('e-d3jVz' AS BLOB))) GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM rt0, vt1 RIGHT OUTER JOIN vt2 ON ((CAST(vt2.c0 AS BLOB))*(CAST('e-d3jVz' AS BLOB))) WHERE ((+ (((vt2.c0) IS TRUE)))) GROUP BY rt0.c2, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c0 FROM rt0, vt1 RIGHT OUTER JOIN vt2 ON ((CAST(vt2.c0 AS BLOB))*(CAST('e-d3jVz' AS BLOB))) WHERE ((NOT ((+ (((vt2.c0) IS TRUE)))))) GROUP BY rt0.c2, rt0.c0 UNION SELECT rt0.c2, rt0.c0 FROM rt0, vt1 RIGHT OUTER JOIN vt2 ON ((CAST(vt2.c0 AS BLOB))*(CAST('e-d3jVz' AS BLOB))) WHERE ((((+ (((vt2.c0) IS TRUE)))) ISNULL)) GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0, vt1 RIGHT OUTER JOIN vt2 ON ((CAST(vt2.c0 AS BLOB))*(CAST('e-d3jVz' AS BLOB))) GROUP BY rt0.c2, rt0.c0;
SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING ((vt2.c0) NOT BETWEEN ((((vt2.c0))<=((COUNT(MAX(SUM(vt2.c0))))))) AND (vt2.c0 COLLATE RTRIM)) UNION ALL SELECT vt2.c0 FROM vt2 NOT INDEXED GROUP BY vt2.c0 HAVING (NOT (((vt2.c0) NOT BETWEEN ((((vt2.c0))<=((COUNT(MAX(SUM(vt2.c0))))))) AND (vt2.c0 COLLATE RTRIM)))) UNION ALL SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING ((((vt2.c0) NOT BETWEEN ((((vt2.c0))<=((COUNT(MAX(SUM(vt2.c0))))))) AND (vt2.c0 COLLATE RTRIM))) ISNULL);
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE (CASE WHEN ((rt0.c2) NOT NULL) THEN ((rt0.c0) ISNULL) WHEN CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 END THEN json_remove(0.19831088563566523, rt0.c2, rt0.c0, rt0.c0) WHEN (((rt0.c0, rt0.c2, rt0.c1)) NOT BETWEEN ((rt0.c1, rt0.c2, rt0.c1)) AND ((rt0.c0, rt0.c1, rt0.c2))) THEN rt0.c1 WHEN (((rt0.c2)) NOT BETWEEN ((x'')) AND ((rt0.c1))) THEN ((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2)) WHEN rt0.c2 COLLATE BINARY THEN ((rt0.c1)AND(NULL)) ELSE LOWER(rt0.c1) END) UNION ALL SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (CASE WHEN ((rt0.c2) NOT NULL) THEN ((rt0.c0) ISNULL) WHEN CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 END THEN json_remove(0.19831088563566523, rt0.c2, rt0.c0, rt0.c0) WHEN (((rt0.c0, rt0.c2, rt0.c1)) NOT BETWEEN ((rt0.c1, rt0.c2, rt0.c1)) AND ((rt0.c0, rt0.c1, rt0.c2))) THEN rt0.c1 WHEN (((rt0.c2)) NOT BETWEEN ((x'')) AND ((rt0.c1))) THEN ((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2)) WHEN rt0.c2 COLLATE BINARY THEN ((rt0.c1)AND(NULL)) ELSE LOWER(rt0.c1) END))) UNION ALL SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE (((CASE WHEN ((rt0.c2) NOT NULL) THEN ((rt0.c0) ISNULL) WHEN CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 END THEN json_remove(0.19831088563566523, rt0.c2, rt0.c0, rt0.c0) WHEN (((rt0.c0, rt0.c2, rt0.c1)) NOT BETWEEN ((rt0.c1, rt0.c2, rt0.c1)) AND ((rt0.c0, rt0.c1, rt0.c2))) THEN rt0.c1 WHEN (((rt0.c2)) NOT BETWEEN ((x'')) AND ((rt0.c1))) THEN ((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2)) WHEN rt0.c2 COLLATE BINARY THEN ((rt0.c1)AND(NULL)) ELSE LOWER(rt0.c1) END) ISNULL));
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0;
SELECT DISTINCT * FROM vt1 FULL OUTER JOIN vt2 ON (((vt2.c0))>((vt1.c0))) COLLATE BINARY;
SELECT DISTINCT * FROM vt1 FULL OUTER JOIN vt2 ON (((vt2.c0))>((vt1.c0))) COLLATE BINARY WHERE ((((NOT (0Xffffffffdb8d9490)))*((vt2.c0 IN ())))) UNION SELECT DISTINCT * FROM vt1 FULL OUTER JOIN vt2 ON (((vt2.c0))>((vt1.c0))) COLLATE BINARY WHERE ((NOT ((((NOT (0xffffffffdb8d9490)))*((vt2.c0 IN ())))))) UNION SELECT DISTINCT * FROM vt1 FULL OUTER JOIN vt2 ON (((vt2.c0))>((vt1.c0))) COLLATE BINARY WHERE ((((((NOT (0Xffffffffdb8d9490)))*((vt2.c0 IN ())))) ISNULL));
SELECT DISTINCT * FROM vt1 FULL OUTER JOIN vt2 ON (((vt2.c0))>((vt1.c0))) COLLATE BINARY;
SELECT rt0.c1, vt1.c0, vt2.c0 FROM vt2, vt1, rt0 GROUP BY rt0.c1, vt1.c0, vt2.c0;
SELECT ALL rt0.c1, vt1.c0, vt2.c0 FROM vt2, vt1, rt0 WHERE (CASE CAST(rt0.c2 AS BLOB)  WHEN rt0.c0 THEN x'' END) GROUP BY rt0.c1, vt1.c0, vt2.c0 UNION SELECT ALL rt0.c1, vt1.c0, vt2.c0 FROM vt2, vt1, rt0 WHERE ((NOT (CASE CAST(rt0.c2 AS BLOB)  WHEN rt0.c0 THEN x'' END))) GROUP BY rt0.c1, vt1.c0, vt2.c0 UNION SELECT rt0.c1, vt1.c0, vt2.c0 FROM vt2, vt1, rt0 WHERE (((CASE CAST(rt0.c2 AS BLOB)  WHEN rt0.c0 THEN x'' END) ISNULL)) GROUP BY rt0.c1, vt1.c0, vt2.c0;
SELECT rt0.c1, vt1.c0, vt2.c0 FROM vt2, vt1, rt0 GROUP BY rt0.c1, vt1.c0, vt2.c0;
SELECT ALL vt1.c0 FROM vt1, vt2 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1, vt2 GROUP BY vt1.c0 HAVING ((MAX(vt1.c0))IS NOT(((vt2.c0)*(AVG(vt2.c0))))) UNION ALL SELECT ALL vt1.c0 FROM vt1, vt2 GROUP BY vt1.c0 HAVING (NOT (((MAX(vt1.c0))IS NOT(((vt2.c0)*(AVG(vt2.c0))))))) UNION ALL SELECT ALL vt1.c0 FROM vt1, vt2 GROUP BY vt1.c0 HAVING ((((MAX(vt1.c0))IS NOT(((vt2.c0)*(AVG(vt2.c0)))))) ISNULL);
SELECT ALL vt1.c0 FROM vt1, vt2 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1, vt2 GROUP BY vt1.c0 HAVING ((MAX(vt1.c0))IS NOT(((vt2.c0)*(AVG(vt2.c0))))) UNION ALL SELECT ALL vt1.c0 FROM vt1, vt2 GROUP BY vt1.c0 HAVING (NOT (((MAX(vt1.c0))IS NOT(((vt2.c0)*(AVG(vt2.c0))))))) UNION ALL SELECT ALL vt1.c0 FROM vt1, vt2 GROUP BY vt1.c0 HAVING ((((MAX(vt1.c0))IS NOT(((vt2.c0)*(AVG(vt2.c0)))))) ISNULL);
SELECT ALL vt1.c0 FROM vt1, vt2 GROUP BY vt1.c0;
SELECT ALL TOTAL(((DATE(rt0.c1, rt0.c2, vt1.c0)) NOT BETWEEN (((rt0.c2) IS FALSE)) AND (((rt0.c0)LIKE(vt1.c0))))) FROM vt1, vt2, rt0 ORDER BY ((rt0.c1 COLLATE RTRIM)/((((((((((((('-530785508')OR(vt1.c0)))OR(rt0.c0)))OR(rt0.c1)))OR(vt1.c0)))AND(rt0.c0)))AND(rt0.c1))));
SELECT ALL vt2.c0, rt0.c1, rt0.c0, rt0.c2 FROM vt2, rt0;
SELECT ALL vt2.c0, rt0.c1, rt0.c0, rt0.c2 FROM vt2, rt0 WHERE (TRIM(DISTINCT ABS(DISTINCT rt0.c2), '1967146609')) UNION ALL SELECT ALL vt2.c0, rt0.c1, rt0.c0, rt0.c2 FROM vt2, rt0 WHERE ((NOT (TRIM(DISTINCT ABS(DISTINCT rt0.c2), '1967146609')))) UNION ALL SELECT vt2.c0, rt0.c1, rt0.c0, rt0.c2 FROM vt2, rt0 WHERE (((TRIM(DISTINCT ABS(DISTINCT rt0.c2), '1967146609')) ISNULL));
SELECT ALL vt2.c0, rt0.c1, rt0.c0, rt0.c2 FROM vt2, rt0;
SELECT DISTINCT * FROM rt0, vt1;
SELECT DISTINCT * FROM rt0, vt1 WHERE (CASE ((rt0.c2)=(rt0.c0))  WHEN SUBSTR(rt0.c1, vt1.c0) THEN (((NULL)) NOT BETWEEN ((rt0.c2)) AND ((vt1.c0))) ELSE ((rt0.c0)OR(rt0.c0)) END) UNION SELECT DISTINCT * FROM rt0, vt1 WHERE ((NOT (CASE ((rt0.c2)==(rt0.c0))  WHEN SUBSTR(rt0.c1, vt1.c0) THEN (((NULL)) NOT BETWEEN ((rt0.c2)) AND ((vt1.c0))) ELSE ((rt0.c0)OR(rt0.c0)) END))) UNION SELECT DISTINCT * FROM rt0, vt1 WHERE (((CASE ((rt0.c2)=(rt0.c0))  WHEN SUBSTR(rt0.c1, vt1.c0) THEN (((NULL)) NOT BETWEEN ((rt0.c2)) AND ((vt1.c0))) ELSE ((rt0.c0)OR(rt0.c0)) END) ISNULL));
SELECT DISTINCT * FROM rt0, vt1;
SELECT ALL rt0.c0, rt0.c1, vt1.c0, rt0.c2, vt2.c0 FROM vt1 LEFT OUTER JOIN rt0 ON vt2.c0 INNER JOIN vt2 ON CASE ((NULL) NOTNULL)  WHEN vt1.c0 THEN ((vt1.c0) BETWEEN ('1389569650') AND (rt0.c2)) END GROUP BY rt0.c0, rt0.c1, vt1.c0, rt0.c2, vt2.c0;
SELECT ALL vt1.c0, vt2.c0 FROM vt1, vt2 GROUP BY vt1.c0, vt2.c0;
SELECT ALL vt1.c0, vt2.c0 FROM vt1, vt2 GROUP BY vt1.c0, vt2.c0 HAVING AVG((((vt1.c0))!=((AVG(MAX(vt1.c0)))))) UNION ALL SELECT ALL vt1.c0, vt2.c0 FROM vt1, vt2 GROUP BY vt1.c0, vt2.c0 HAVING (NOT (AVG((((vt1.c0))<>((AVG(MAX(vt1.c0)))))))) UNION ALL SELECT ALL vt1.c0, vt2.c0 FROM vt1, vt2 GROUP BY vt1.c0, vt2.c0 HAVING ((AVG((((vt1.c0))!=((AVG(MAX(vt1.c0))))))) ISNULL);
SELECT ALL vt2.c0 FROM vt2;
SELECT vt2.c0 FROM vt2 WHERE ((((((vt2.c0) BETWEEN (0xffffffffe1b864b3) AND (vt2.c0)), ((vt2.c0)<=(vt2.c0)), vt2.c0 COLLATE BINARY))<((CASE vt2.c0  WHEN vt2.c0 THEN x'' WHEN vt2.c0 THEN vt2.c0 WHEN vt2.c0 THEN vt2.c0 ELSE vt2.c0 END, CASE WHEN vt2.c0 THEN vt2.c0 END, ((vt2.c0) NOT BETWEEN (vt2.c0) AND (vt2.c0)))))) UNION ALL SELECT vt2.c0 FROM vt2 WHERE ((NOT ((((((vt2.c0) BETWEEN (0Xffffffffe1b864b3) AND (vt2.c0)), ((vt2.c0)<=(vt2.c0)), vt2.c0 COLLATE BINARY))<((CASE vt2.c0  WHEN vt2.c0 THEN x'' WHEN vt2.c0 THEN vt2.c0 WHEN vt2.c0 THEN vt2.c0 ELSE vt2.c0 END, CASE WHEN vt2.c0 THEN vt2.c0 END, ((vt2.c0) NOT BETWEEN (vt2.c0) AND (vt2.c0)))))))) UNION ALL SELECT ALL vt2.c0 FROM vt2 WHERE ((((((((vt2.c0) BETWEEN (0xffffffffe1b864b3) AND (vt2.c0)), ((vt2.c0)<=(vt2.c0)), vt2.c0 COLLATE BINARY))<((CASE vt2.c0  WHEN vt2.c0 THEN x'' WHEN vt2.c0 THEN vt2.c0 WHEN vt2.c0 THEN vt2.c0 ELSE vt2.c0 END, CASE WHEN vt2.c0 THEN vt2.c0 END, ((vt2.c0) NOT BETWEEN (vt2.c0) AND (vt2.c0)))))) ISNULL));
SELECT ALL vt2.c0 FROM vt2;
SELECT DISTINCT rt0.c0, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c1 FROM rt0 WHERE ((((MAX(x'', rt0.c1)))<=((((((x'')AND(rt0.c1)))AND(rt0.c0)))))) UNION SELECT DISTINCT rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT ((((MAX(x'', rt0.c1)))<=((((((x'')AND(rt0.c1)))AND(rt0.c0)))))))) UNION SELECT DISTINCT rt0.c0, rt0.c1 FROM rt0 WHERE ((((((MAX(x'', rt0.c1)))<=((((((x'')AND(rt0.c1)))AND(rt0.c0)))))) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c1 FROM rt0;
SELECT vt2.c0, rt0.c2 FROM rt0, vt2, vt1 GROUP BY vt2.c0, rt0.c2;
SELECT ALL vt2.c0, rt0.c2 FROM rt0, vt2, vt1 WHERE (((rt0.c1 COLLATE BINARY)>(vt1.c0 COLLATE RTRIM))) GROUP BY vt2.c0, rt0.c2 UNION SELECT ALL vt2.c0, rt0.c2 FROM rt0, vt2, vt1 WHERE ((NOT (((rt0.c1 COLLATE BINARY)>(vt1.c0 COLLATE RTRIM))))) GROUP BY vt2.c0, rt0.c2 UNION SELECT ALL vt2.c0, rt0.c2 FROM rt0, vt2, vt1 WHERE (((((rt0.c1 COLLATE BINARY)>(vt1.c0 COLLATE RTRIM))) ISNULL)) GROUP BY vt2.c0, rt0.c2;
SELECT vt2.c0, rt0.c2 FROM rt0, vt2, vt1 GROUP BY vt2.c0, rt0.c2;
SELECT ALL rt0.c1, vt2.c0, rt0.c2, rt0.c0 FROM vt2, rt0 GROUP BY rt0.c1, vt2.c0, rt0.c2, rt0.c0;
SELECT ALL rt0.c1, vt2.c0, rt0.c2, rt0.c0 FROM vt2, rt0 GROUP BY rt0.c1, vt2.c0, rt0.c2, rt0.c0 HAVING SUM(CASE SUM(MAX(MIN(vt2.c0)))  WHEN vt2.c0 THEN MIN(MAX(GROUP_CONCAT(MIN(SUM(MAX(TOTAL(rt0.c0))))))) END) UNION ALL SELECT ALL rt0.c1, vt2.c0, rt0.c2, rt0.c0 FROM vt2, rt0 GROUP BY rt0.c1, vt2.c0, rt0.c2, rt0.c0 HAVING (NOT (SUM(CASE SUM(MAX(MIN(vt2.c0)))  WHEN vt2.c0 THEN MIN(MAX(GROUP_CONCAT(MIN(SUM(MAX(TOTAL(rt0.c0))))))) END))) UNION ALL SELECT rt0.c1, vt2.c0, rt0.c2, rt0.c0 FROM vt2, rt0 GROUP BY rt0.c1, vt2.c0, rt0.c2, rt0.c0 HAVING ((SUM(CASE SUM(MAX(MIN(vt2.c0)))  WHEN vt2.c0 THEN MIN(MAX(GROUP_CONCAT(MIN(SUM(MAX(TOTAL(rt0.c0))))))) END)) ISNULL);
SELECT ALL * FROM vt2, vt1, rt0;
SELECT * FROM vt2, vt1, rt0 WHERE (((((((vt2.c0)AND(vt2.c0)))OR(rt0.c0))) NOTNULL)) UNION ALL SELECT * FROM vt2, vt1, rt0 WHERE ((NOT (((((((vt2.c0)AND(vt2.c0)))OR(rt0.c0))) NOTNULL)))) UNION ALL SELECT ALL * FROM vt2, vt1, rt0 WHERE (((((((((vt2.c0)AND(vt2.c0)))OR(rt0.c0))) NOTNULL)) ISNULL));
SELECT ALL * FROM vt2, vt1, rt0;
SELECT DISTINCT vt2.c0, rt0.c0, rt0.c2, rt0.c1 FROM rt0 NATURAL JOIN vt2;
SELECT DISTINCT vt2.c0, rt0.c0, rt0.c2, rt0.c1 FROM rt0 NATURAL JOIN vt2 WHERE (CAST(rt0.c1 COLLATE BINARY AS BLOB)) UNION SELECT DISTINCT vt2.c0, rt0.c0, rt0.c2, rt0.c1 FROM rt0 NATURAL JOIN vt2 WHERE ((NOT (CAST(rt0.c1 COLLATE BINARY AS BLOB)))) UNION SELECT DISTINCT vt2.c0, rt0.c0, rt0.c2, rt0.c1 FROM rt0 NATURAL JOIN vt2 WHERE (((CAST(rt0.c1 COLLATE BINARY AS BLOB)) ISNULL));
SELECT DISTINCT vt2.c0, rt0.c0, rt0.c2, rt0.c1 FROM rt0 NATURAL JOIN vt2;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((((((rt0.c0)) BETWEEN ((rt0.c1)) AND ((''))))%(rt0.c0 COLLATE BINARY))) GROUP BY rt0.c0, rt0.c1, rt0.c2 UNION SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT ((((((rt0.c0)) BETWEEN ((rt0.c1)) AND ((''))))%(rt0.c0 COLLATE BINARY))))) GROUP BY rt0.c0, rt0.c1, rt0.c2 UNION SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 NOT INDEXED WHERE ((((((((rt0.c0)) BETWEEN ((rt0.c1)) AND ((''))))%(rt0.c0 COLLATE BINARY))) ISNULL)) GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL vt2.c0, vt1.c0 FROM vt1, vt2 GROUP BY vt2.c0, vt1.c0;
SELECT vt2.c0, vt1.c0 FROM vt1, vt2 GROUP BY vt2.c0, vt1.c0 HAVING (- (AVG(vt1.c0))) UNION ALL SELECT vt2.c0, vt1.c0 FROM vt1, vt2 GROUP BY vt2.c0, vt1.c0 HAVING (NOT ((- (AVG(vt1.c0))))) UNION ALL SELECT vt2.c0, vt1.c0 FROM vt1, vt2 GROUP BY vt2.c0, vt1.c0 HAVING (((- (AVG(vt1.c0)))) ISNULL);
SELECT ALL vt2.c0, vt1.c0 FROM vt1, vt2 GROUP BY vt2.c0, vt1.c0;
SELECT vt2.c0, vt1.c0 FROM vt1, vt2 GROUP BY vt2.c0, vt1.c0 HAVING (- (AVG(vt1.c0))) UNION ALL SELECT vt2.c0, vt1.c0 FROM vt1, vt2 GROUP BY vt2.c0, vt1.c0 HAVING (NOT ((- (AVG(vt1.c0))))) UNION ALL SELECT vt2.c0, vt1.c0 FROM vt1, vt2 GROUP BY vt2.c0, vt1.c0 HAVING (((- (AVG(vt1.c0)))) ISNULL);
SELECT ALL vt2.c0, vt1.c0 FROM vt1, vt2 GROUP BY vt2.c0, vt1.c0;
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE ((((rt0.c1)) BETWEEN ((rt0.c1 COLLATE RTRIM)) AND ((((rt0.c2) IS FALSE))))) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT ((((rt0.c1)) BETWEEN ((rt0.c1 COLLATE RTRIM)) AND ((((rt0.c2) IS FALSE))))))) UNION ALL SELECT * FROM rt0 WHERE ((((((rt0.c1)) BETWEEN ((rt0.c1 COLLATE RTRIM)) AND ((((rt0.c2) IS FALSE))))) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0 WHERE (rt0.c0) UNION SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (rt0.c0))) UNION SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0 WHERE (((rt0.c0) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE (((vt1.c0)IS(((vt1.c0)>>(vt1.c0))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (((vt1.c0)IS(((vt1.c0)>>(vt1.c0))))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE (((((vt1.c0)IS(((vt1.c0)>>(vt1.c0))))) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING CASE MIN(COUNT(*))  WHEN SUM('2#zz&') THEN ((rt0.c1) BETWEEN (AVG(AVG(rt0.c1))) AND (rt0.c1)) END UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING (NOT (CASE MIN(COUNT(*))  WHEN SUM('2#zz&') THEN ((rt0.c1) BETWEEN (AVG(AVG(rt0.c1))) AND (rt0.c1)) END)) UNION ALL SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING ((CASE MIN(COUNT(*))  WHEN SUM('2#zz&') THEN ((rt0.c1) BETWEEN (AVG(AVG(rt0.c1))) AND (rt0.c1)) END) ISNULL);
SELECT ALL * FROM rt0, vt2;
SELECT * FROM rt0, vt2 WHERE ((((rt0.c1 IN ()))&(((rt0.c2)OR(rt0.c2))))) UNION ALL SELECT ALL * FROM rt0, vt2 WHERE ((NOT ((((rt0.c1 IN ()))&(((rt0.c2)OR(rt0.c2))))))) UNION ALL SELECT * FROM rt0, vt2 WHERE ((((((rt0.c1 IN ()))&(((rt0.c2)OR(rt0.c2))))) ISNULL));
SELECT ALL * FROM rt0, vt2;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (((CAST(x'e509' AS NUMERIC))AND((vt1.c0 IN ())))) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (((CAST(x'e509' AS NUMERIC))AND((vt1.c0 IN ())))))) UNION SELECT DISTINCT * FROM vt1 WHERE (((((CAST(x'e509' AS NUMERIC))AND((vt1.c0 IN ())))) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT rt0.c0, rt0.c2, vt2.c0, vt1.c0 FROM rt0, vt2 FULL OUTER JOIN vt1 ON ((NOT (0.8003919133539138)) IN ()) GROUP BY rt0.c0, rt0.c2, vt2.c0, vt1.c0;
SELECT rt0.c0, rt0.c2, vt2.c0, vt1.c0 FROM rt0, vt2 FULL OUTER JOIN vt1 ON ((NOT (0.8003919133539138)) IN ()) WHERE (TYPEOF(NULLIF(DISTINCT vt2.c0, vt1.c0))) GROUP BY rt0.c0, rt0.c2, vt2.c0, vt1.c0 UNION SELECT ALL rt0.c0, rt0.c2, vt2.c0, vt1.c0 FROM rt0, vt2 FULL OUTER JOIN vt1 ON ((NOT (0.8003919133539138)) IN ()) WHERE ((NOT (TYPEOF(NULLIF(DISTINCT vt2.c0, vt1.c0))))) GROUP BY rt0.c0, rt0.c2, vt2.c0, vt1.c0 UNION SELECT rt0.c0, rt0.c2, vt2.c0, vt1.c0 FROM rt0, vt2 FULL OUTER JOIN vt1 ON ((NOT (0.8003919133539138)) IN ()) WHERE (((TYPEOF(NULLIF(DISTINCT vt2.c0, vt1.c0))) ISNULL)) GROUP BY rt0.c0, rt0.c2, vt2.c0, vt1.c0;
SELECT rt0.c0, rt0.c2, vt2.c0, vt1.c0 FROM rt0, vt2 FULL OUTER JOIN vt1 ON ((NOT (0.8003919133539138)) IN ()) GROUP BY rt0.c0, rt0.c2, vt2.c0, vt1.c0;
SELECT vt1.c0 FROM vt1, vt2 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1, vt2 GROUP BY vt1.c0 HAVING ((((vt1.c0)%(NULL))) IS TRUE) UNION ALL SELECT vt1.c0 FROM vt1, vt2 GROUP BY vt1.c0 HAVING (NOT (((((vt1.c0)%(NULL))) IS TRUE))) UNION ALL SELECT vt1.c0 FROM vt1, vt2 GROUP BY vt1.c0 HAVING ((((((vt1.c0)%(NULL))) IS TRUE)) ISNULL);
SELECT vt1.c0 FROM vt1, vt2 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1, vt2 GROUP BY vt1.c0 HAVING ((((vt1.c0)%(NULL))) IS TRUE) UNION ALL SELECT vt1.c0 FROM vt1, vt2 GROUP BY vt1.c0 HAVING (NOT (((((vt1.c0)%(NULL))) IS TRUE))) UNION ALL SELECT vt1.c0 FROM vt1, vt2 GROUP BY vt1.c0 HAVING ((((((vt1.c0)%(NULL))) IS TRUE)) ISNULL);
SELECT vt1.c0 FROM vt1, vt2 GROUP BY vt1.c0;
SELECT * FROM rt0, vt1 LEFT OUTER JOIN vt2 ON CAST(CAST(rt0.c1 AS INTEGER) AS NUMERIC);
SELECT * FROM rt0, vt1 LEFT OUTER JOIN vt2 ON CAST(CAST(rt0.c1 AS INTEGER) AS NUMERIC) WHERE ((((x'eaf4'))>(((((vt2.c0))<((vt2.c0))))))) UNION ALL SELECT ALL * FROM rt0, vt1 LEFT OUTER JOIN vt2 ON CAST(CAST(rt0.c1 AS INTEGER) AS NUMERIC) WHERE ((NOT ((((x'eaf4'))>(((((vt2.c0))<((vt2.c0))))))))) UNION ALL SELECT ALL * FROM rt0, vt1 LEFT OUTER JOIN vt2 ON CAST(CAST(rt0.c1 AS INTEGER) AS NUMERIC) WHERE ((((((x'eaf4'))>(((((vt2.c0))<((vt2.c0))))))) ISNULL));
SELECT * FROM rt0, vt1 LEFT OUTER JOIN vt2 ON CAST(CAST(rt0.c1 AS INTEGER) AS NUMERIC);
SELECT DISTINCT * FROM vt2;
SELECT DISTINCT * FROM vt2 WHERE ((- (((vt2.c0) IS FALSE)))) UNION SELECT DISTINCT * FROM vt2 WHERE ((NOT ((- (((vt2.c0) IS FALSE)))))) UNION SELECT DISTINCT * FROM vt2 WHERE ((((- (((vt2.c0) IS FALSE)))) ISNULL));
SELECT DISTINCT * FROM vt2;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE (((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE 0.2045560560740749 END) NOTNULL)) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT (((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE 0.2045560560740749 END) NOTNULL)))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE (((((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE 0.2045560560740749 END) NOTNULL)) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0, rt0.c1, vt2.c0 FROM vt2 INNER JOIN vt1 ON 1.177174173E9 CROSS JOIN rt0 ON ((rt0.c0 COLLATE NOCASE) BETWEEN ((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c0)))) AND ((NULL IN ()))) GROUP BY vt1.c0, rt0.c1, vt2.c0;
SELECT vt1.c0, rt0.c1, vt2.c0 FROM vt2 INNER JOIN vt1 ON 1.177174173E9 CROSS JOIN rt0 ON ((rt0.c0 COLLATE NOCASE) BETWEEN ((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c0)))) AND ((NULL IN ()))) GROUP BY vt1.c0, rt0.c1, vt2.c0 HAVING TOTAL(AVG(rt0.c0)) UNION ALL SELECT ALL vt1.c0, rt0.c1, vt2.c0 FROM vt2 INNER JOIN vt1 ON 1.177174173E9 CROSS JOIN rt0 ON ((rt0.c0 COLLATE NOCASE) BETWEEN ((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c0)))) AND ((NULL IN ()))) GROUP BY vt1.c0, rt0.c1, vt2.c0 HAVING (NOT (TOTAL(AVG(rt0.c0)))) UNION ALL SELECT ALL vt1.c0, rt0.c1, vt2.c0 FROM vt2 INNER JOIN vt1 ON 1.177174173E9 CROSS JOIN rt0 ON ((rt0.c0 COLLATE NOCASE) BETWEEN ((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c0)))) AND ((NULL IN ()))) GROUP BY vt1.c0, rt0.c1, vt2.c0 HAVING ((TOTAL(AVG(rt0.c0))) ISNULL);
SELECT vt1.c0 FROM vt1;
SELECT vt1.c0 FROM vt1 WHERE (((0xfffffffff7444f46)||((+ (vt1.c0))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (((0Xfffffffff7444f46)||((+ (vt1.c0))))))) UNION ALL SELECT vt1.c0 FROM vt1 WHERE (((((0Xfffffffff7444f46)||((+ (vt1.c0))))) ISNULL));
SELECT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0, vt2.c0 FROM vt2, vt1;
SELECT DISTINCT vt1.c0, vt2.c0 FROM vt2, vt1 WHERE (((((CASE WHEN vt1.c0 THEN vt2.c0 WHEN 0.5088380425472463 THEN vt2.c0 WHEN vt2.c0 THEN vt1.c0 ELSE vt1.c0 END)AND(((0.5299395538695699) IS TRUE))))OR(vt1.c0))) UNION SELECT DISTINCT vt1.c0, vt2.c0 FROM vt2, vt1 WHERE ((NOT (((((CASE WHEN vt1.c0 THEN vt2.c0 WHEN 0.5088380425472463 THEN vt2.c0 WHEN vt2.c0 THEN vt1.c0 ELSE vt1.c0 END)AND(((0.5299395538695699) IS TRUE))))OR(vt1.c0))))) UNION SELECT DISTINCT vt1.c0, vt2.c0 FROM vt2, vt1 WHERE (((((((CASE WHEN vt1.c0 THEN vt2.c0 WHEN 0.5088380425472463 THEN vt2.c0 WHEN vt2.c0 THEN vt1.c0 ELSE vt1.c0 END)AND(((0.5299395538695699) IS TRUE))))OR(vt1.c0))) ISNULL));
SELECT DISTINCT vt1.c0, vt2.c0 FROM vt2, vt1;
SELECT rt0.c2, vt2.c0, vt1.c0, rt0.c0, rt0.c1 FROM vt2, vt1, rt0 GROUP BY rt0.c2, vt2.c0, vt1.c0, rt0.c0, rt0.c1;
SELECT ALL rt0.c2, vt2.c0, vt1.c0, rt0.c0, rt0.c1 FROM vt2, vt1, rt0 WHERE (vt2.c0) GROUP BY rt0.c2, vt2.c0, vt1.c0, rt0.c0, rt0.c1 UNION SELECT rt0.c2, vt2.c0, vt1.c0, rt0.c0, rt0.c1 FROM vt2, vt1, rt0 WHERE ((NOT (vt2.c0))) GROUP BY rt0.c2, vt2.c0, vt1.c0, rt0.c0, rt0.c1 UNION SELECT ALL rt0.c2, vt2.c0, vt1.c0, rt0.c0, rt0.c1 FROM vt2, vt1 NOT INDEXED, rt0 WHERE (((vt2.c0) ISNULL)) GROUP BY rt0.c2, vt2.c0, vt1.c0, rt0.c0, rt0.c1;
SELECT rt0.c2, vt2.c0, vt1.c0, rt0.c0, rt0.c1 FROM vt2, vt1, rt0 GROUP BY rt0.c2, vt2.c0, vt1.c0, rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c1, vt1.c0, vt2.c0, rt0.c2 FROM vt2, vt1, rt0 GROUP BY rt0.c0, rt0.c1, vt1.c0, vt2.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c1, vt1.c0, vt2.c0, rt0.c2 FROM vt2, vt1, rt0 GROUP BY rt0.c0, rt0.c1, vt1.c0, vt2.c0, rt0.c2 HAVING AVG(AVG(rt0.c1)) UNION ALL SELECT ALL rt0.c0, rt0.c1, vt1.c0, vt2.c0, rt0.c2 FROM vt2, vt1, rt0 NOT INDEXED GROUP BY rt0.c0, rt0.c1, vt1.c0, vt2.c0, rt0.c2 HAVING (NOT (AVG(AVG(rt0.c1)))) UNION ALL SELECT rt0.c0, rt0.c1, vt1.c0, vt2.c0, rt0.c2 FROM vt2, vt1, rt0 GROUP BY rt0.c0, rt0.c1, vt1.c0, vt2.c0, rt0.c2 HAVING ((AVG(AVG(rt0.c1))) ISNULL);
SELECT * FROM rt0, vt2;
SELECT * FROM rt0, vt2 WHERE (rt0.c2) UNION ALL SELECT * FROM rt0, vt2 WHERE ((NOT (rt0.c2))) UNION ALL SELECT ALL * FROM rt0, vt2 WHERE (((rt0.c2) ISNULL));
SELECT * FROM rt0, vt2;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((((((rt0.c0, rt0.c1, rt0.c2)) BETWEEN ((rt0.c0, rt0.c2, rt0.c1)) AND ((rt0.c0, rt0.c1, rt0.c2)))) BETWEEN (CASE rt0.c2  WHEN '-2036725374' THEN rt0.c0 END) AND (((((rt0.c1)OR(rt0.c0)))AND(rt0.c2))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((((((rt0.c0, rt0.c1, rt0.c2)) BETWEEN ((rt0.c0, rt0.c2, rt0.c1)) AND ((rt0.c0, rt0.c1, rt0.c2)))) BETWEEN (CASE rt0.c2  WHEN '-2036725374' THEN rt0.c0 END) AND (((((rt0.c1)OR(rt0.c0)))AND(rt0.c2))))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((((((rt0.c0, rt0.c1, rt0.c2)) BETWEEN ((rt0.c0, rt0.c2, rt0.c1)) AND ((rt0.c0, rt0.c1, rt0.c2)))) BETWEEN (CASE rt0.c2  WHEN '-2036725374' THEN rt0.c0 END) AND (((((rt0.c1)OR(rt0.c0)))AND(rt0.c2))))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c2 FROM rt0 WHERE ((~ (((rt0.c1)<(rt0.c0))))) GROUP BY rt0.c0, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT ((~ (((rt0.c1)<(rt0.c0))))))) GROUP BY rt0.c0, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c2 FROM rt0 WHERE ((((~ (((rt0.c1)<(rt0.c0))))) ISNULL)) GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT vt2.c0 FROM vt2 RIGHT OUTER JOIN vt1 ON CAST(((vt1.c0) NOT BETWEEN (vt2.c0) AND (vt1.c0)) AS REAL) GROUP BY vt2.c0;
SELECT vt2.c0 FROM vt2 RIGHT OUTER JOIN vt1 ON CAST(((vt1.c0) NOT BETWEEN (vt2.c0) AND (vt1.c0)) AS REAL) GROUP BY vt2.c0 HAVING CAST(AVG(TOTAL(vt2.c0)) AS TEXT) UNION ALL SELECT ALL vt2.c0 FROM vt2 RIGHT OUTER JOIN vt1 ON CAST(((vt1.c0) NOT BETWEEN (vt2.c0) AND (vt1.c0)) AS REAL) GROUP BY vt2.c0 HAVING (NOT (CAST(AVG(TOTAL(vt2.c0)) AS TEXT))) UNION ALL SELECT vt2.c0 FROM vt2 RIGHT OUTER JOIN vt1 ON CAST(((vt1.c0) NOT BETWEEN (vt2.c0) AND (vt1.c0)) AS REAL) GROUP BY vt2.c0 HAVING ((CAST(AVG(TOTAL(vt2.c0)) AS TEXT)) ISNULL);
SELECT MAX(vt1.c0) FROM vt1, rt0, vt2 ORDER BY CASE rt0.c2  WHEN vt1.c0 THEN rt0.c1 ELSE rt0.c2 END COLLATE BINARY;
SELECT * FROM vt1 CROSS JOIN vt2 ON rt0.c0 FULL OUTER JOIN rt0 ON (~ (LOWER(vt1.c0)));
SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0, vt2.c0, vt1.c0 FROM vt1, vt2, rt0;
SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0, vt2.c0, vt1.c0 FROM vt1, vt2, rt0 WHERE ((('')/(vt2.c0)) COLLATE RTRIM) UNION SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0, vt2.c0, vt1.c0 FROM vt1, vt2, rt0 WHERE ((NOT ((('')/(vt2.c0)) COLLATE RTRIM))) UNION SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0, vt2.c0, vt1.c0 FROM vt1, vt2, rt0 WHERE ((((('')/(vt2.c0)) COLLATE RTRIM) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0, vt2.c0, vt1.c0 FROM vt1, vt2, rt0;
SELECT ALL vt1.c0 FROM vt1, vt2, rt0 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1, vt2, rt0 WHERE (CASE WHEN UPPER(DISTINCT rt0.c2) THEN NULL ELSE (+ (rt0.c1)) END) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1, vt2, rt0 WHERE ((NOT (CASE WHEN UPPER(DISTINCT rt0.c2) THEN NULL ELSE (+ (rt0.c1)) END))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1, vt2, rt0 WHERE (((CASE WHEN UPPER(DISTINCT rt0.c2) THEN NULL ELSE (+ (rt0.c1)) END) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1, vt2, rt0 GROUP BY vt1.c0;
SELECT rt0.c2 FROM rt0, vt2, vt1 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0, vt2, vt1 GROUP BY rt0.c2 HAVING AVG(((rt0.c1) BETWEEN (GROUP_CONCAT(-1604494466)) AND (COUNT(TOTAL(rt0.c0))))) UNION ALL SELECT rt0.c2 FROM rt0, vt2, vt1 GROUP BY rt0.c2 HAVING (NOT (AVG(((rt0.c1) BETWEEN (GROUP_CONCAT(-1604494466)) AND (COUNT(TOTAL(rt0.c0))))))) UNION ALL SELECT rt0.c2 FROM rt0, vt2, vt1 GROUP BY rt0.c2 HAVING ((AVG(((rt0.c1) BETWEEN (GROUP_CONCAT(-1604494466)) AND (COUNT(TOTAL(rt0.c0)))))) ISNULL);
SELECT ALL rt0.c0, rt0.c2 FROM rt0, vt1, vt2;
SELECT rt0.c0, rt0.c2 FROM rt0, vt1, vt2 WHERE (((((vt1.c0)IS(vt1.c0)))IS(((vt2.c0)<=(rt0.c2))))) UNION ALL SELECT rt0.c0, rt0.c2 FROM rt0, vt1, vt2 WHERE ((NOT (((((vt1.c0)IS(vt1.c0)))IS(((vt2.c0)<=(rt0.c2))))))) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt0, vt1, vt2 WHERE (((((((vt1.c0)IS(vt1.c0)))IS(((vt2.c0)<=(rt0.c2))))) ISNULL));
SELECT ALL rt0.c0, rt0.c2 FROM rt0, vt1, vt2;
SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0 FROM rt0 NOT INDEXED WHERE ((((((rt0.c2) NOT BETWEEN (rt0.c0) AND (0.9865082842433205)), ((rt0.c0)OR(rt0.c2)), rt0.c0))=((((rt0.c1) NOT NULL), (((rt0.c0, '', rt0.c0)) BETWEEN ((rt0.c1, x'', rt0.c2)) AND ((-1077037350, rt0.c1, rt0.c1))), (- (rt0.c0)))))) UNION SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT ((((((rt0.c2) NOT BETWEEN (rt0.c0) AND (0.9865082842433205)), ((rt0.c0)OR(rt0.c2)), rt0.c0))=((((rt0.c1) NOT NULL), (((rt0.c0, '', rt0.c0)) BETWEEN ((rt0.c1, x'', rt0.c2)) AND ((-1077037350, rt0.c1, rt0.c1))), (- (rt0.c0)))))))) UNION SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((((((((rt0.c2) NOT BETWEEN (rt0.c0) AND (0.9865082842433205)), ((rt0.c0)OR(rt0.c2)), rt0.c0))=((((rt0.c1) NOT NULL), (((rt0.c0, '', rt0.c0)) BETWEEN ((rt0.c1, x'', rt0.c2)) AND ((-1077037350, rt0.c1, rt0.c1))), (- (rt0.c0)))))) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0 FROM rt0;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 WHERE (((rt0.c2) ISNULL) COLLATE BINARY) GROUP BY rt0.c0, rt0.c1 UNION SELECT rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (((rt0.c2) ISNULL) COLLATE BINARY))) GROUP BY rt0.c0, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c1 FROM rt0 WHERE (((((rt0.c2) ISNULL) COLLATE BINARY) ISNULL)) GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c2, rt0.c1, vt1.c0, vt2.c0, rt0.c0 FROM vt1 LEFT OUTER JOIN vt2 ON NULLIF(vt2.c0 COLLATE NOCASE, CAST(vt2.c0 AS NUMERIC)) RIGHT OUTER JOIN rt0 ON ((((((((vt1.c0 COLLATE BINARY)AND(CASE rt0.c0  WHEN vt2.c0 THEN vt1.c0 ELSE vt2.c0 END)))AND(('0.7068102607763203' IN ()))))OR(((vt1.c0) NOT NULL))))OR(((vt2.c0)&('lJSN8''Fw')))) GROUP BY rt0.c2, rt0.c1, vt1.c0, vt2.c0, rt0.c0;
SELECT ALL rt0.c2, rt0.c1, vt1.c0, vt2.c0, rt0.c0 FROM vt1 LEFT OUTER JOIN vt2 ON NULLIF(vt2.c0 COLLATE NOCASE, CAST(vt2.c0 AS NUMERIC)) RIGHT OUTER JOIN rt0 ON ((((((((vt1.c0 COLLATE BINARY)AND(CASE rt0.c0  WHEN vt2.c0 THEN vt1.c0 ELSE vt2.c0 END)))AND(('0.7068102607763203' IN ()))))OR(((vt1.c0) NOT NULL))))OR(((vt2.c0)&('lJSN8''Fw')))) GROUP BY rt0.c2, rt0.c1, vt1.c0, vt2.c0, rt0.c0 HAVING '1359255690' UNION ALL SELECT ALL rt0.c2, rt0.c1, vt1.c0, vt2.c0, rt0.c0 FROM vt1 LEFT OUTER JOIN vt2 ON NULLIF(vt2.c0 COLLATE NOCASE, CAST(vt2.c0 AS NUMERIC)) RIGHT OUTER JOIN rt0 ON ((((((((vt1.c0 COLLATE BINARY)AND(CASE rt0.c0  WHEN vt2.c0 THEN vt1.c0 ELSE vt2.c0 END)))AND(('0.7068102607763203' IN ()))))OR(((vt1.c0) NOT NULL))))OR(((vt2.c0)&('lJSN8''Fw')))) GROUP BY rt0.c2, rt0.c1, vt1.c0, vt2.c0, rt0.c0 HAVING (NOT ('1359255690')) UNION ALL SELECT ALL rt0.c2, rt0.c1, vt1.c0, vt2.c0, rt0.c0 FROM vt1 LEFT OUTER JOIN vt2 ON NULLIF(vt2.c0 COLLATE NOCASE, CAST(vt2.c0 AS NUMERIC)) RIGHT OUTER JOIN rt0 ON ((((((((vt1.c0 COLLATE BINARY)AND(CASE rt0.c0  WHEN vt2.c0 THEN vt1.c0 ELSE vt2.c0 END)))AND(('0.7068102607763203' IN ()))))OR(((vt1.c0) NOT NULL))))OR(((vt2.c0)&('lJSN8''Fw')))) GROUP BY rt0.c2, rt0.c1, vt1.c0, vt2.c0, rt0.c0 HAVING (('1359255690') ISNULL);
SELECT rt0.c2, rt0.c1, vt1.c0, vt2.c0, rt0.c0 FROM vt1 LEFT OUTER JOIN vt2 ON NULLIF(vt2.c0 COLLATE NOCASE, CAST(vt2.c0 AS NUMERIC)) RIGHT OUTER JOIN rt0 ON ((((((((vt1.c0 COLLATE BINARY)AND(CASE rt0.c0  WHEN vt2.c0 THEN vt1.c0 ELSE vt2.c0 END)))AND(('0.7068102607763203' IN ()))))OR(((vt1.c0) NOT NULL))))OR(((vt2.c0)&('lJSN8''Fw')))) GROUP BY rt0.c2, rt0.c1, vt1.c0, vt2.c0, rt0.c0;
SELECT ALL rt0.c2, rt0.c1, vt1.c0, vt2.c0, rt0.c0 FROM vt1 LEFT OUTER JOIN vt2 ON NULLIF(vt2.c0 COLLATE NOCASE, CAST(vt2.c0 AS NUMERIC)) RIGHT OUTER JOIN rt0 ON ((((((((vt1.c0 COLLATE BINARY)AND(CASE rt0.c0  WHEN vt2.c0 THEN vt1.c0 ELSE vt2.c0 END)))AND(('0.7068102607763203' IN ()))))OR(((vt1.c0) NOT NULL))))OR(((vt2.c0)&('lJSN8''Fw')))) GROUP BY rt0.c2, rt0.c1, vt1.c0, vt2.c0, rt0.c0 HAVING '1359255690' UNION ALL SELECT ALL rt0.c2, rt0.c1, vt1.c0, vt2.c0, rt0.c0 FROM vt1 LEFT OUTER JOIN vt2 ON NULLIF(vt2.c0 COLLATE NOCASE, CAST(vt2.c0 AS NUMERIC)) RIGHT OUTER JOIN rt0 ON ((((((((vt1.c0 COLLATE BINARY)AND(CASE rt0.c0  WHEN vt2.c0 THEN vt1.c0 ELSE vt2.c0 END)))AND(('0.7068102607763203' IN ()))))OR(((vt1.c0) NOT NULL))))OR(((vt2.c0)&('lJSN8''Fw')))) GROUP BY rt0.c2, rt0.c1, vt1.c0, vt2.c0, rt0.c0 HAVING (NOT ('1359255690')) UNION ALL SELECT ALL rt0.c2, rt0.c1, vt1.c0, vt2.c0, rt0.c0 FROM vt1 LEFT OUTER JOIN vt2 ON NULLIF(vt2.c0 COLLATE NOCASE, CAST(vt2.c0 AS NUMERIC)) RIGHT OUTER JOIN rt0 ON ((((((((vt1.c0 COLLATE BINARY)AND(CASE rt0.c0  WHEN vt2.c0 THEN vt1.c0 ELSE vt2.c0 END)))AND(('0.7068102607763203' IN ()))))OR(((vt1.c0) NOT NULL))))OR(((vt2.c0)&('lJSN8''Fw')))) GROUP BY rt0.c2, rt0.c1, vt1.c0, vt2.c0, rt0.c0 HAVING (('1359255690') ISNULL);
SELECT rt0.c2, rt0.c1, vt1.c0, vt2.c0, rt0.c0 FROM vt1 LEFT OUTER JOIN vt2 ON NULLIF(vt2.c0 COLLATE NOCASE, CAST(vt2.c0 AS NUMERIC)) RIGHT OUTER JOIN rt0 ON ((((((((vt1.c0 COLLATE BINARY)AND(CASE rt0.c0  WHEN vt2.c0 THEN vt1.c0 ELSE vt2.c0 END)))AND(('0.7068102607763203' IN ()))))OR(((vt1.c0) NOT NULL))))OR(((vt2.c0)&('lJSN8''Fw')))) GROUP BY rt0.c2, rt0.c1, vt1.c0, vt2.c0, rt0.c0;
SELECT ALL vt2.c0 FROM vt2;
SELECT vt2.c0 FROM vt2 WHERE (CAST(vt2.c0 COLLATE NOCASE AS INTEGER)) UNION ALL SELECT ALL vt2.c0 FROM vt2 WHERE ((NOT (CAST(vt2.c0 COLLATE NOCASE AS INTEGER)))) UNION ALL SELECT ALL vt2.c0 FROM vt2 WHERE (((CAST(vt2.c0 COLLATE NOCASE AS INTEGER)) ISNULL));
SELECT ALL vt2.c0 FROM vt2;
SELECT DISTINCT vt2.c0 FROM vt2;
SELECT DISTINCT vt2.c0 FROM vt2 WHERE ((((vt2.c0 COLLATE BINARY))>=((((vt2.c0) NOT BETWEEN (vt2.c0) AND (vt2.c0)))))) UNION SELECT DISTINCT vt2.c0 FROM vt2 WHERE ((NOT ((((vt2.c0 COLLATE BINARY))>=((((vt2.c0) NOT BETWEEN (vt2.c0) AND (vt2.c0)))))))) UNION SELECT DISTINCT vt2.c0 FROM vt2 WHERE ((((((vt2.c0 COLLATE BINARY))>=((((vt2.c0) NOT BETWEEN (vt2.c0) AND (vt2.c0)))))) ISNULL));
SELECT DISTINCT vt2.c0 FROM vt2;
SELECT ALL vt1.c0 FROM rt0, vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM rt0, vt1 WHERE ((((rt0.c2, rt0.c0, rt0.c2)) BETWEEN ((((rt0.c1) NOT BETWEEN (vt1.c0) AND (vt1.c0)), rt0.c1 COLLATE RTRIM, vt1.c0)) AND ((((vt1.c0) NOT NULL), rt0.c1, CAST(rt0.c2 AS INTEGER))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM rt0, vt1 WHERE ((NOT ((((rt0.c2, rt0.c0, rt0.c2)) BETWEEN ((((rt0.c1) NOT BETWEEN (vt1.c0) AND (vt1.c0)), rt0.c1 COLLATE RTRIM, vt1.c0)) AND ((((vt1.c0) NOT NULL), rt0.c1, CAST(rt0.c2 AS INTEGER))))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM rt0, vt1 WHERE ((((((rt0.c2, rt0.c0, rt0.c2)) BETWEEN ((((rt0.c1) NOT BETWEEN (vt1.c0) AND (vt1.c0)), rt0.c1 COLLATE RTRIM, vt1.c0)) AND ((((vt1.c0) NOT NULL), rt0.c1, CAST(rt0.c2 AS INTEGER))))) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM rt0, vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0, vt2.c0 FROM vt1, vt2 GROUP BY vt1.c0, vt2.c0;
SELECT ALL vt1.c0, vt2.c0 FROM vt1, vt2 GROUP BY vt1.c0, vt2.c0 HAVING ((COUNT(*)) NOT BETWEEN (((((vt2.c0)AND(0X63868141)))AND(GROUP_CONCAT(vt2.c0)))) AND ((SUM(GROUP_CONCAT(vt1.c0)) IN (vt2.c0)))) UNION ALL SELECT ALL vt1.c0, vt2.c0 FROM vt1, vt2 GROUP BY vt1.c0, vt2.c0 HAVING (NOT (((COUNT(*)) NOT BETWEEN (((((vt2.c0)AND(0x63868141)))AND(GROUP_CONCAT(vt2.c0)))) AND ((SUM(GROUP_CONCAT(vt1.c0)) IN (vt2.c0)))))) UNION ALL SELECT ALL vt1.c0, vt2.c0 FROM vt1, vt2 GROUP BY vt1.c0, vt2.c0 HAVING ((((COUNT(*)) NOT BETWEEN (((((vt2.c0)AND(0x63868141)))AND(GROUP_CONCAT(vt2.c0)))) AND ((SUM(GROUP_CONCAT(vt1.c0)) IN (vt2.c0))))) ISNULL);
SELECT ALL * FROM vt1;
SELECT * FROM vt1 WHERE (CASE CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END  WHEN vt1.c0 THEN (vt1.c0 IN ()) END) UNION ALL SELECT * FROM vt1 WHERE ((NOT (CASE CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END  WHEN vt1.c0 THEN (vt1.c0 IN ()) END))) UNION ALL SELECT ALL * FROM vt1 WHERE (((CASE CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END  WHEN vt1.c0 THEN (vt1.c0 IN ()) END) ISNULL));
SELECT ALL * FROM vt1;
SELECT DISTINCT vt2.c0, vt1.c0 FROM vt1 CROSS JOIN vt2 ON (- (((NULL)<=(vt1.c0))));
SELECT DISTINCT vt2.c0, vt1.c0 FROM vt1 CROSS JOIN vt2 ON (- (((NULL)<=(vt1.c0)))) WHERE (((vt2.c0)GLOB(vt2.c0)) COLLATE NOCASE COLLATE BINARY) UNION SELECT DISTINCT vt2.c0, vt1.c0 FROM vt1 CROSS JOIN vt2 ON (- (((NULL)<=(vt1.c0)))) WHERE ((NOT (((vt2.c0)GLOB(vt2.c0)) COLLATE NOCASE COLLATE BINARY))) UNION SELECT DISTINCT vt2.c0, vt1.c0 FROM vt1 CROSS JOIN vt2 ON (- (((NULL)<=(vt1.c0)))) WHERE (((((vt2.c0)GLOB(vt2.c0)) COLLATE NOCASE COLLATE BINARY) ISNULL));
SELECT DISTINCT vt2.c0, vt1.c0 FROM vt1 CROSS JOIN vt2 ON (- (((NULL)<=(vt1.c0))));
SELECT vt1.c0, rt0.c2 FROM vt2, vt1, rt0 GROUP BY vt1.c0, rt0.c2;
SELECT vt1.c0, rt0.c2 FROM vt2, vt1, rt0 WHERE (0X1c811436) GROUP BY vt1.c0, rt0.c2 UNION SELECT ALL vt1.c0, rt0.c2 FROM vt2, vt1, rt0 WHERE ((NOT (0X1c811436))) GROUP BY vt1.c0, rt0.c2 UNION SELECT ALL vt1.c0, rt0.c2 FROM vt2, vt1, rt0 WHERE (((0X1c811436) ISNULL)) GROUP BY vt1.c0, rt0.c2;
SELECT vt1.c0, rt0.c2 FROM vt2, vt1, rt0 GROUP BY vt1.c0, rt0.c2;
SELECT rt0.c2, rt0.c1, vt1.c0, rt0.c0 FROM vt1 NATURAL JOIN rt0 GROUP BY rt0.c2, rt0.c1, vt1.c0, rt0.c0;
SELECT ALL rt0.c2, rt0.c1, vt1.c0, rt0.c0 FROM vt1 NATURAL JOIN rt0 GROUP BY rt0.c2, rt0.c1, vt1.c0, rt0.c0 HAVING GROUP_CONCAT(((COUNT(*)) IS TRUE)) UNION ALL SELECT rt0.c2, rt0.c1, vt1.c0, rt0.c0 FROM vt1 NATURAL JOIN rt0 GROUP BY rt0.c2, rt0.c1, vt1.c0, rt0.c0 HAVING (NOT (GROUP_CONCAT(((COUNT(*)) IS TRUE)))) UNION ALL SELECT ALL rt0.c2, rt0.c1, vt1.c0, rt0.c0 FROM vt1 NATURAL JOIN rt0 GROUP BY rt0.c2, rt0.c1, vt1.c0, rt0.c0 HAVING ((GROUP_CONCAT(((COUNT(*)) IS TRUE))) ISNULL);
SELECT vt1.c0, rt0.c1 FROM rt0, vt1;
SELECT ALL vt1.c0, rt0.c1 FROM rt0, vt1 WHERE (NULL) UNION ALL SELECT vt1.c0, rt0.c1 FROM rt0, vt1 WHERE ((NOT (NULL))) UNION ALL SELECT vt1.c0, rt0.c1 FROM rt0, vt1 WHERE (((NULL) ISNULL));
SELECT vt1.c0, rt0.c1 FROM rt0, vt1;
SELECT DISTINCT * FROM vt2, rt0, vt1;
SELECT DISTINCT * FROM vt2, rt0, vt1 WHERE (((((CASE rt0.c1  WHEN rt0.c1 THEN rt0.c0 WHEN vt2.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 END)AND(CASE 0X1b5704bb  WHEN vt2.c0 THEN rt0.c2 END)))AND(((vt2.c0) BETWEEN (vt2.c0) AND (rt0.c1))))) UNION SELECT DISTINCT * FROM vt2, rt0, vt1 WHERE ((NOT (((((CASE rt0.c1  WHEN rt0.c1 THEN rt0.c0 WHEN vt2.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 END)AND(CASE 0x1b5704bb  WHEN vt2.c0 THEN rt0.c2 END)))AND(((vt2.c0) BETWEEN (vt2.c0) AND (rt0.c1))))))) UNION SELECT DISTINCT * FROM vt2, rt0, vt1 WHERE (((((((CASE rt0.c1  WHEN rt0.c1 THEN rt0.c0 WHEN vt2.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 END)AND(CASE 0x1b5704bb  WHEN vt2.c0 THEN rt0.c2 END)))AND(((vt2.c0) BETWEEN (vt2.c0) AND (rt0.c1))))) ISNULL));
SELECT DISTINCT * FROM vt2, rt0, vt1;
SELECT rt0.c0, rt0.c1 FROM rt0, vt1, vt2 GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c1 FROM rt0, vt1, vt2 WHERE ((((CAST(rt0.c2 AS BLOB)))>((((NULL) NOT BETWEEN (rt0.c1) AND ('255323194')))))) GROUP BY rt0.c0, rt0.c1 UNION SELECT rt0.c0, rt0.c1 FROM rt0, vt1 NOT INDEXED, vt2 WHERE ((NOT ((((CAST(rt0.c2 AS BLOB)))>((((NULL) NOT BETWEEN (rt0.c1) AND ('255323194')))))))) GROUP BY rt0.c0, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c1 FROM rt0, vt1, vt2 WHERE ((((((CAST(rt0.c2 AS BLOB)))>((((NULL) NOT BETWEEN (rt0.c1) AND ('255323194')))))) ISNULL)) GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c1 FROM rt0, vt1, vt2 GROUP BY rt0.c0, rt0.c1;
SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING (((MAX(COUNT(vt2.c0)))) NOT BETWEEN ((MIN(SUM(GROUP_CONCAT(vt2.c0))))) AND (((((vt2.c0, vt2.c0, COUNT(SUM(vt2.c0))))>=((GROUP_CONCAT(GROUP_CONCAT(vt2.c0)), vt2.c0, SUM(COUNT(MIN(vt2.c0))))))))) UNION ALL SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING (NOT ((((MAX(COUNT(vt2.c0)))) NOT BETWEEN ((MIN(SUM(GROUP_CONCAT(vt2.c0))))) AND (((((vt2.c0, vt2.c0, COUNT(SUM(vt2.c0))))>=((GROUP_CONCAT(GROUP_CONCAT(vt2.c0)), vt2.c0, SUM(COUNT(MIN(vt2.c0))))))))))) UNION ALL SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING (((((MAX(COUNT(vt2.c0)))) NOT BETWEEN ((MIN(SUM(GROUP_CONCAT(vt2.c0))))) AND (((((vt2.c0, vt2.c0, COUNT(SUM(vt2.c0))))>=((GROUP_CONCAT(GROUP_CONCAT(vt2.c0)), vt2.c0, SUM(COUNT(MIN(vt2.c0)))))))))) ISNULL);
SELECT ALL vt1.c0 FROM vt1;
SELECT ALL vt1.c0 FROM vt1 WHERE (((((((((((x'') NOT BETWEEN (vt1.c0) AND (vt1.c0)))AND(((vt1.c0)-(vt1.c0)))))OR(-2.005938459E9)))OR(((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))))OR(NULL))) UNION ALL SELECT vt1.c0 FROM vt1 WHERE ((NOT (((((((((((x'') NOT BETWEEN (vt1.c0) AND (vt1.c0)))AND(((vt1.c0)-(vt1.c0)))))OR(-2.005938459E9)))OR(((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))))OR(NULL))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE (((((((((((((x'') NOT BETWEEN (vt1.c0) AND (vt1.c0)))AND(((vt1.c0)-(vt1.c0)))))OR(-2.005938459E9)))OR(((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))))OR(NULL))) ISNULL));
SELECT ALL vt1.c0 FROM vt1;
SELECT DISTINCT rt0.c2, rt0.c1, vt2.c0, rt0.c0 FROM vt2, rt0;
SELECT DISTINCT rt0.c2, rt0.c1, vt2.c0, rt0.c0 FROM vt2, rt0 WHERE (vt2.c0) UNION SELECT DISTINCT rt0.c2, rt0.c1, vt2.c0, rt0.c0 FROM vt2, rt0 WHERE ((NOT (vt2.c0))) UNION SELECT DISTINCT rt0.c2, rt0.c1, vt2.c0, rt0.c0 FROM vt2, rt0 WHERE (((vt2.c0) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c1, vt2.c0, rt0.c0 FROM vt2, rt0;
SELECT ALL vt2.c0, rt0.c0, rt0.c2, rt0.c1, vt1.c0 FROM vt2, rt0, vt1 GROUP BY vt2.c0, rt0.c0, rt0.c2, rt0.c1, vt1.c0;
SELECT vt2.c0, rt0.c0, rt0.c2, rt0.c1, vt1.c0 FROM vt2, rt0, vt1 WHERE (((((')e7?Al') NOT BETWEEN (rt0.c0) AND (rt0.c0))) NOT BETWEEN (((vt2.c0)/(vt2.c0))) AND ((((vt2.c0))<=((rt0.c1)))))) GROUP BY vt2.c0, rt0.c0, rt0.c2, rt0.c1, vt1.c0 UNION SELECT vt2.c0, rt0.c0, rt0.c2, rt0.c1, vt1.c0 FROM vt2, rt0, vt1 WHERE ((NOT (((((')e7?Al') NOT BETWEEN (rt0.c0) AND (rt0.c0))) NOT BETWEEN (((vt2.c0)/(vt2.c0))) AND ((((vt2.c0))<=((rt0.c1)))))))) GROUP BY vt2.c0, rt0.c0, rt0.c2, rt0.c1, vt1.c0 UNION SELECT vt2.c0, rt0.c0, rt0.c2, rt0.c1, vt1.c0 FROM vt2, rt0, vt1 WHERE (((((((')e7?Al') NOT BETWEEN (rt0.c0) AND (rt0.c0))) NOT BETWEEN (((vt2.c0)/(vt2.c0))) AND ((((vt2.c0))<=((rt0.c1)))))) ISNULL)) GROUP BY vt2.c0, rt0.c0, rt0.c2, rt0.c1, vt1.c0;
SELECT ALL vt2.c0, rt0.c0, rt0.c2, rt0.c1, vt1.c0 FROM vt2, rt0, vt1 GROUP BY vt2.c0, rt0.c0, rt0.c2, rt0.c1, vt1.c0;
SELECT rt0.c0, vt1.c0, rt0.c1, rt0.c2 FROM vt2, vt1 LEFT OUTER JOIN rt0 ON CASE WHEN (NOT (rt0.c0)) THEN ((vt1.c0)<(rt0.c1)) ELSE (rt0.c2 IN ()) END GROUP BY rt0.c0, vt1.c0, rt0.c1, rt0.c2;
SELECT rt0.c0, vt1.c0, rt0.c1, rt0.c2 FROM vt2, vt1 LEFT OUTER JOIN rt0 ON CASE WHEN (NOT (rt0.c0)) THEN ((vt1.c0)<(rt0.c1)) ELSE (rt0.c2 IN ()) END GROUP BY rt0.c0, vt1.c0, rt0.c1, rt0.c2 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c0, vt1.c0, rt0.c1, rt0.c2 FROM vt2, vt1 LEFT OUTER JOIN rt0 ON CASE WHEN (NOT (rt0.c0)) THEN ((vt1.c0)<(rt0.c1)) ELSE (rt0.c2 IN ()) END GROUP BY rt0.c0, vt1.c0, rt0.c1, rt0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c0, vt1.c0, rt0.c1, rt0.c2 FROM vt2, vt1 LEFT OUTER JOIN rt0 ON CASE WHEN (NOT (rt0.c0)) THEN ((vt1.c0)<(rt0.c1)) ELSE (rt0.c2 IN ()) END GROUP BY rt0.c0, vt1.c0, rt0.c1, rt0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c0, vt1.c0, rt0.c1, rt0.c2 FROM vt2, vt1 LEFT OUTER JOIN rt0 ON CASE WHEN (NOT (rt0.c0)) THEN ((vt1.c0)<(rt0.c1)) ELSE (rt0.c2 IN ()) END GROUP BY rt0.c0, vt1.c0, rt0.c1, rt0.c2;
SELECT rt0.c0, vt1.c0, rt0.c1, rt0.c2 FROM vt2, vt1 LEFT OUTER JOIN rt0 ON CASE WHEN (NOT (rt0.c0)) THEN ((vt1.c0)<(rt0.c1)) ELSE (rt0.c2 IN ()) END GROUP BY rt0.c0, vt1.c0, rt0.c1, rt0.c2 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c0, vt1.c0, rt0.c1, rt0.c2 FROM vt2, vt1 LEFT OUTER JOIN rt0 ON CASE WHEN (NOT (rt0.c0)) THEN ((vt1.c0)<(rt0.c1)) ELSE (rt0.c2 IN ()) END GROUP BY rt0.c0, vt1.c0, rt0.c1, rt0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c0, vt1.c0, rt0.c1, rt0.c2 FROM vt2, vt1 LEFT OUTER JOIN rt0 ON CASE WHEN (NOT (rt0.c0)) THEN ((vt1.c0)<(rt0.c1)) ELSE (rt0.c2 IN ()) END GROUP BY rt0.c0, vt1.c0, rt0.c1, rt0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c0, vt1.c0, rt0.c1, rt0.c2 FROM vt2, vt1 LEFT OUTER JOIN rt0 ON CASE WHEN (NOT (rt0.c0)) THEN ((vt1.c0)<(rt0.c1)) ELSE (rt0.c2 IN ()) END GROUP BY rt0.c0, vt1.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, vt2.c0 FROM vt2 INNER JOIN rt0 ON vt2.c0;
SELECT ALL rt0.c1, rt0.c0, vt2.c0 FROM vt2 INNER JOIN rt0 ON vt2.c0 WHERE (CAST(((rt0.c2)<(vt2.c0)) AS REAL)) UNION ALL SELECT ALL rt0.c1, rt0.c0, vt2.c0 FROM vt2 INNER JOIN rt0 ON vt2.c0 WHERE ((NOT (CAST(((rt0.c2)<(vt2.c0)) AS REAL)))) UNION ALL SELECT ALL rt0.c1, rt0.c0, vt2.c0 FROM vt2 INNER JOIN rt0 ON vt2.c0 WHERE (((CAST(((rt0.c2)<(vt2.c0)) AS REAL)) ISNULL));
SELECT ALL rt0.c1, rt0.c0, vt2.c0 FROM vt2 INNER JOIN rt0 ON vt2.c0;
SELECT DISTINCT rt0.c0 FROM rt0, vt1, vt2;
SELECT DISTINCT rt0.c0 FROM rt0, vt1, vt2 WHERE (COALESCE(vt2.c0, rt0.c1, '1359255690', rt0.c1) COLLATE RTRIM) UNION SELECT DISTINCT rt0.c0 FROM rt0, vt1, vt2 WHERE ((NOT (COALESCE(vt2.c0, rt0.c1, '1359255690', rt0.c1) COLLATE RTRIM))) UNION SELECT DISTINCT rt0.c0 FROM rt0, vt1, vt2 WHERE (((COALESCE(vt2.c0, rt0.c1, '1359255690', rt0.c1) COLLATE RTRIM) ISNULL));
SELECT DISTINCT rt0.c0 FROM rt0, vt1, vt2;
SELECT ALL rt0.c2, rt0.c1, vt2.c0, rt0.c0 FROM vt2, vt1 RIGHT OUTER JOIN rt0 ON ((CASE rt0.c0  WHEN vt2.c0 THEN vt1.c0 END) ISNULL) GROUP BY rt0.c2, rt0.c1, vt2.c0, rt0.c0;
SELECT ALL rt0.c2, rt0.c1, vt2.c0, rt0.c0 FROM vt2, vt1 RIGHT OUTER JOIN rt0 ON ((CASE rt0.c0  WHEN vt2.c0 THEN vt1.c0 END) ISNULL) WHERE (((rt0.c0) IS TRUE)) GROUP BY rt0.c2, rt0.c1, vt2.c0, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c1, vt2.c0, rt0.c0 FROM vt2, vt1 RIGHT OUTER JOIN rt0 ON ((CASE rt0.c0  WHEN vt2.c0 THEN vt1.c0 END) ISNULL) WHERE ((NOT (((rt0.c0) IS TRUE)))) GROUP BY rt0.c2, rt0.c1, vt2.c0, rt0.c0 UNION SELECT rt0.c2, rt0.c1, vt2.c0, rt0.c0 FROM vt2, vt1 RIGHT OUTER JOIN rt0 ON ((CASE rt0.c0  WHEN vt2.c0 THEN vt1.c0 END) ISNULL) WHERE (((((rt0.c0) IS TRUE)) ISNULL)) GROUP BY rt0.c2, rt0.c1, vt2.c0, rt0.c0;
SELECT ALL rt0.c2, rt0.c1, vt2.c0, rt0.c0 FROM vt2, vt1 RIGHT OUTER JOIN rt0 ON ((CASE rt0.c0  WHEN vt2.c0 THEN vt1.c0 END) ISNULL) GROUP BY rt0.c2, rt0.c1, vt2.c0, rt0.c0;
SELECT rt0.c0, rt0.c2, vt1.c0, rt0.c1 FROM rt0 CROSS JOIN vt1 ON ((vt1.c0)&(rt0.c1 COLLATE RTRIM)) GROUP BY rt0.c0, rt0.c2, vt1.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c2, vt1.c0, rt0.c1 FROM rt0 CROSS JOIN vt1 ON ((vt1.c0)&(rt0.c1 COLLATE RTRIM)) GROUP BY rt0.c0, rt0.c2, vt1.c0, rt0.c1 HAVING TOTAL(COUNT(rt0.c0)) UNION ALL SELECT rt0.c0, rt0.c2, vt1.c0, rt0.c1 FROM rt0 CROSS JOIN vt1 ON ((vt1.c0)&(rt0.c1 COLLATE RTRIM)) GROUP BY rt0.c0, rt0.c2, vt1.c0, rt0.c1 HAVING (NOT (TOTAL(COUNT(rt0.c0)))) UNION ALL SELECT rt0.c0, rt0.c2, vt1.c0, rt0.c1 FROM rt0 CROSS JOIN vt1 ON ((vt1.c0)&(rt0.c1 COLLATE RTRIM)) GROUP BY rt0.c0, rt0.c2, vt1.c0, rt0.c1 HAVING ((TOTAL(COUNT(rt0.c0))) ISNULL);
SELECT vt2.c0 FROM vt2;
SELECT vt2.c0 FROM vt2 WHERE (UPPER(DISTINCT ((((vt2.c0)OR('')))AND(0.7760313235187911)))) UNION ALL SELECT vt2.c0 FROM vt2 WHERE ((NOT (UPPER(DISTINCT ((((vt2.c0)OR('')))AND(0.7760313235187911)))))) UNION ALL SELECT ALL vt2.c0 FROM vt2 WHERE (((UPPER(DISTINCT ((((vt2.c0)OR('')))AND(0.7760313235187911)))) ISNULL));
SELECT vt2.c0 FROM vt2;
SELECT DISTINCT rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c2 FROM rt0 WHERE (CAST((((rt0.c0, rt0.c1, rt0.c0, rt0.c0, rt0.c1))>((rt0.c1, rt0.c0, rt0.c2, rt0.c0, rt0.c0))) AS NUMERIC)) UNION SELECT DISTINCT rt0.c2 FROM rt0 WHERE ((NOT (CAST((((rt0.c0, rt0.c1, rt0.c0, rt0.c0, rt0.c1))>((rt0.c1, rt0.c0, rt0.c2, rt0.c0, rt0.c0))) AS NUMERIC)))) UNION SELECT DISTINCT rt0.c2 FROM rt0 WHERE (((CAST((((rt0.c0, rt0.c1, rt0.c0, rt0.c0, rt0.c1))>((rt0.c1, rt0.c0, rt0.c2, rt0.c0, rt0.c0))) AS NUMERIC)) ISNULL));
SELECT DISTINCT rt0.c2 FROM rt0;
SELECT vt2.c0 FROM vt2, vt1 GROUP BY vt2.c0;
SELECT ALL vt2.c0 FROM vt2, vt1 WHERE (DATE('603073972', ((x'')>=(vt1.c0)), vt2.c0 COLLATE NOCASE)) GROUP BY vt2.c0 UNION SELECT ALL vt2.c0 FROM vt2, vt1 WHERE ((NOT (DATE('603073972', ((x'')>=(vt1.c0)), vt2.c0 COLLATE NOCASE)))) GROUP BY vt2.c0 UNION SELECT ALL vt2.c0 FROM vt2, vt1 WHERE (((DATE('603073972', ((x'')>=(vt1.c0)), vt2.c0 COLLATE NOCASE)) ISNULL)) GROUP BY vt2.c0;
SELECT vt2.c0 FROM vt2, vt1 GROUP BY vt2.c0;
SELECT ALL vt1.c0, vt2.c0, rt0.c0 FROM vt1, vt2, rt0 GROUP BY vt1.c0, vt2.c0, rt0.c0;
SELECT vt1.c0, vt2.c0, rt0.c0 FROM vt1, vt2, rt0 GROUP BY vt1.c0, vt2.c0, rt0.c0 HAVING TRIM(DISTINCT (+ (AVG(rt0.c0)))) UNION ALL SELECT vt1.c0, vt2.c0, rt0.c0 FROM vt1, vt2, rt0 GROUP BY vt1.c0, vt2.c0, rt0.c0 HAVING (NOT (TRIM(DISTINCT (+ (AVG(rt0.c0)))))) UNION ALL SELECT ALL vt1.c0, vt2.c0, rt0.c0 FROM vt1, vt2, rt0 GROUP BY vt1.c0, vt2.c0, rt0.c0 HAVING ((TRIM(DISTINCT (+ (AVG(rt0.c0))))) ISNULL);
SELECT ALL vt1.c0, vt2.c0, rt0.c0 FROM vt1, vt2, rt0 GROUP BY vt1.c0, vt2.c0, rt0.c0;
SELECT vt1.c0, vt2.c0, rt0.c0 FROM vt1, vt2, rt0 GROUP BY vt1.c0, vt2.c0, rt0.c0 HAVING TRIM(DISTINCT (+ (AVG(rt0.c0)))) UNION ALL SELECT vt1.c0, vt2.c0, rt0.c0 FROM vt1, vt2, rt0 GROUP BY vt1.c0, vt2.c0, rt0.c0 HAVING (NOT (TRIM(DISTINCT (+ (AVG(rt0.c0)))))) UNION ALL SELECT ALL vt1.c0, vt2.c0, rt0.c0 FROM vt1, vt2, rt0 GROUP BY vt1.c0, vt2.c0, rt0.c0 HAVING ((TRIM(DISTINCT (+ (AVG(rt0.c0))))) ISNULL);
SELECT ALL vt1.c0, vt2.c0, rt0.c0 FROM vt1, vt2, rt0 GROUP BY vt1.c0, vt2.c0, rt0.c0;
SELECT rt0.c0 FROM rt0;
SELECT rt0.c0 FROM rt0 WHERE ((((rt0.c2)-(rt0.c0)) IN (CAST(rt0.c0 AS INTEGER)))) UNION ALL SELECT ALL rt0.c0 FROM rt0 WHERE ((NOT ((((rt0.c2)-(rt0.c0)) IN (CAST(rt0.c0 AS INTEGER)))))) UNION ALL SELECT rt0.c0 FROM rt0 WHERE ((((((rt0.c2)-(rt0.c0)) IN (CAST(rt0.c0 AS INTEGER)))) ISNULL));
SELECT rt0.c0 FROM rt0;
SELECT DISTINCT * FROM rt0 NATURAL JOIN vt2;
SELECT DISTINCT * FROM rt0 NATURAL JOIN vt2 WHERE (((rt0.c1) IS FALSE)) UNION SELECT DISTINCT * FROM rt0 NATURAL JOIN vt2 WHERE ((NOT (((rt0.c1) IS FALSE)))) UNION SELECT DISTINCT * FROM rt0 NATURAL JOIN vt2 WHERE (((((rt0.c1) IS FALSE)) ISNULL));
SELECT DISTINCT * FROM rt0 NATURAL JOIN vt2;
SELECT rt0.c1, vt1.c0, rt0.c2, rt0.c0 FROM rt0, vt1 GROUP BY rt0.c1, vt1.c0, rt0.c2, rt0.c0;
SELECT rt0.c1, vt1.c0, rt0.c2, rt0.c0 FROM rt0, vt1 WHERE (((((TRIM(rt0.c2, rt0.c1))AND(((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c0)))))OR((~ (vt1.c0))))) GROUP BY rt0.c1, vt1.c0, rt0.c2, rt0.c0 UNION SELECT rt0.c1, vt1.c0, rt0.c2, rt0.c0 FROM rt0, vt1 WHERE ((NOT (((((TRIM(rt0.c2, rt0.c1))AND(((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c0)))))OR((~ (vt1.c0))))))) GROUP BY rt0.c1, vt1.c0, rt0.c2, rt0.c0 UNION SELECT rt0.c1, vt1.c0, rt0.c2, rt0.c0 FROM rt0, vt1 WHERE (((((((TRIM(rt0.c2, rt0.c1))AND(((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c0)))))OR((~ (vt1.c0))))) ISNULL)) GROUP BY rt0.c1, vt1.c0, rt0.c2, rt0.c0;
SELECT rt0.c1, vt1.c0, rt0.c2, rt0.c0 FROM rt0, vt1 GROUP BY rt0.c1, vt1.c0, rt0.c2, rt0.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING MAX(MAX(GROUP_CONCAT(GROUP_CONCAT(GROUP_CONCAT(GROUP_CONCAT(GROUP_CONCAT(GROUP_CONCAT(0.1757089914770238)))))))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (MAX(MAX(GROUP_CONCAT(GROUP_CONCAT(GROUP_CONCAT(GROUP_CONCAT(GROUP_CONCAT(GROUP_CONCAT(0.1757089914770238)))))))))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((MAX(MAX(GROUP_CONCAT(GROUP_CONCAT(GROUP_CONCAT(GROUP_CONCAT(GROUP_CONCAT(GROUP_CONCAT(0.1757089914770238))))))))) ISNULL);
SELECT * FROM vt2, vt1;
SELECT ALL * FROM vt2, vt1 WHERE (0Xffffffffff60b606) UNION ALL SELECT * FROM vt2, vt1 WHERE ((NOT (0Xffffffffff60b606))) UNION ALL SELECT ALL * FROM vt2, vt1 WHERE (((0xffffffffff60b606) ISNULL));
SELECT * FROM vt2, vt1;
SELECT DISTINCT vt1.c0, rt0.c1, rt0.c2, vt2.c0 FROM vt2, rt0, vt1;
SELECT DISTINCT vt1.c0, rt0.c1, rt0.c2, vt2.c0 FROM vt2, rt0, vt1 WHERE (((CAST(209613871 AS NUMERIC))|(CAST('1256555887' AS BLOB)))) UNION SELECT DISTINCT vt1.c0, rt0.c1, rt0.c2, vt2.c0 FROM vt2, rt0, vt1 WHERE ((NOT (((CAST(209613871 AS NUMERIC))|(CAST('1256555887' AS BLOB)))))) UNION SELECT DISTINCT vt1.c0, rt0.c1, rt0.c2, vt2.c0 FROM vt2, rt0, vt1 WHERE (((((CAST(209613871 AS NUMERIC))|(CAST('1256555887' AS BLOB)))) ISNULL));
SELECT DISTINCT vt1.c0, rt0.c1, rt0.c2, vt2.c0 FROM vt2, rt0, vt1;
SELECT ALL rt0.c1, vt1.c0, rt0.c0, rt0.c2, vt2.c0 FROM rt0, vt1, vt2 GROUP BY rt0.c1, vt1.c0, rt0.c0, rt0.c2, vt2.c0;
SELECT ALL rt0.c1, vt1.c0, rt0.c0, rt0.c2, vt2.c0 FROM rt0, vt1 NOT INDEXED, vt2 WHERE (((((vt2.c0) ISNULL)) NOTNULL)) GROUP BY rt0.c1, vt1.c0, rt0.c0, rt0.c2, vt2.c0 UNION SELECT rt0.c1, vt1.c0, rt0.c0, rt0.c2, vt2.c0 FROM rt0, vt1, vt2 WHERE ((NOT (((((vt2.c0) ISNULL)) NOTNULL)))) GROUP BY rt0.c1, vt1.c0, rt0.c0, rt0.c2, vt2.c0 UNION SELECT rt0.c1, vt1.c0, rt0.c0, rt0.c2, vt2.c0 FROM rt0, vt1, vt2 WHERE (((((((vt2.c0) ISNULL)) NOTNULL)) ISNULL)) GROUP BY rt0.c1, vt1.c0, rt0.c0, rt0.c2, vt2.c0;
SELECT ALL rt0.c1, vt1.c0, rt0.c0, rt0.c2, vt2.c0 FROM rt0, vt1, vt2 GROUP BY rt0.c1, vt1.c0, rt0.c0, rt0.c2, vt2.c0;
SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING GROUP_CONCAT(MIN(vt2.c0)) UNION ALL SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING (NOT (GROUP_CONCAT(MIN(vt2.c0)))) UNION ALL SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING ((GROUP_CONCAT(MIN(vt2.c0))) ISNULL);
SELECT * FROM rt0, vt1 NOT INDEXED;
SELECT * FROM rt0, vt1 WHERE (CAST(TRIM(rt0.c2) AS INTEGER)) UNION ALL SELECT ALL * FROM rt0, vt1 WHERE ((NOT (CAST(TRIM(rt0.c2) AS INTEGER)))) UNION ALL SELECT * FROM rt0, vt1 WHERE (((CAST(TRIM(rt0.c2) AS INTEGER)) ISNULL));
SELECT * FROM rt0, vt1 NOT INDEXED;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE (CASE WHEN ((x'6c14') NOT BETWEEN (vt1.c0) AND (vt1.c0)) THEN (vt1.c0 IN ()) WHEN CASE NULL  WHEN vt1.c0 THEN 0.3554086984200827 END THEN (~ (NULL)) WHEN CAST(vt1.c0 AS NUMERIC) THEN vt1.c0 COLLATE NOCASE ELSE CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END END) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT (CASE WHEN ((x'6c14') NOT BETWEEN (vt1.c0) AND (vt1.c0)) THEN (vt1.c0 IN ()) WHEN CASE NULL  WHEN vt1.c0 THEN 0.3554086984200827 END THEN (~ (NULL)) WHEN CAST(vt1.c0 AS NUMERIC) THEN vt1.c0 COLLATE NOCASE ELSE CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END END))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((CASE WHEN ((x'6c14') NOT BETWEEN (vt1.c0) AND (vt1.c0)) THEN (vt1.c0 IN ()) WHEN CASE NULL  WHEN vt1.c0 THEN 0.3554086984200827 END THEN (~ (NULL)) WHEN CAST(vt1.c0 AS NUMERIC) THEN vt1.c0 COLLATE NOCASE ELSE CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END END) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT vt1.c0, rt0.c2, rt0.c0 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c2, rt0.c0;
SELECT ALL vt1.c0, rt0.c2, rt0.c0 FROM vt1, rt0 WHERE (NULL) GROUP BY vt1.c0, rt0.c2, rt0.c0 UNION SELECT ALL vt1.c0, rt0.c2, rt0.c0 FROM vt1, rt0 WHERE ((NOT (NULL))) GROUP BY vt1.c0, rt0.c2, rt0.c0 UNION SELECT vt1.c0, rt0.c2, rt0.c0 FROM vt1, rt0 WHERE (((NULL) ISNULL)) GROUP BY vt1.c0, rt0.c2, rt0.c0;
SELECT vt1.c0, rt0.c2, rt0.c0 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c2, rt0.c0;
SELECT rt0.c2, vt1.c0, rt0.c1, vt2.c0, rt0.c0 FROM rt0 FULL OUTER JOIN vt2 ON LOWER(CASE WHEN vt1.c0 THEN vt2.c0 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN vt2.c0 ELSE rt0.c1 END) CROSS JOIN vt1 ON ((((vt2.c0)LIKE(rt0.c1)))>(((vt2.c0)<(1e500)))) GROUP BY rt0.c2, vt1.c0, rt0.c1, vt2.c0, rt0.c0;
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE (((rt0.c2) NOT NULL) COLLATE RTRIM) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (((rt0.c2) NOT NULL) COLLATE RTRIM))) UNION ALL SELECT * FROM rt0 WHERE (((((rt0.c2) NOT NULL) COLLATE RTRIM) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT * FROM vt2;
SELECT DISTINCT * FROM vt2 WHERE (((((((((CAST(vt2.c0 AS INTEGER))OR((((vt2.c0))>(('1775183921'))))))AND((vt2.c0 IN ()))))AND(STRFTIME(vt2.c0, vt2.c0, vt2.c0, vt2.c0, vt2.c0, vt2.c0, vt2.c0))))AND(((vt2.c0)-(vt2.c0))))) UNION SELECT DISTINCT * FROM vt2 WHERE ((NOT (((((((((CAST(vt2.c0 AS INTEGER))OR((((vt2.c0))>(('1775183921'))))))AND((vt2.c0 IN ()))))AND(STRFTIME(vt2.c0, vt2.c0, vt2.c0, vt2.c0, vt2.c0, vt2.c0, vt2.c0))))AND(((vt2.c0)-(vt2.c0))))))) UNION SELECT DISTINCT * FROM vt2 WHERE (((((((((((CAST(vt2.c0 AS INTEGER))OR((((vt2.c0))>(('1775183921'))))))AND((vt2.c0 IN ()))))AND(STRFTIME(vt2.c0, vt2.c0, vt2.c0, vt2.c0, vt2.c0, vt2.c0, vt2.c0))))AND(((vt2.c0)-(vt2.c0))))) ISNULL));
SELECT DISTINCT * FROM vt2;
SELECT vt1.c0, rt0.c1, rt0.c0, vt2.c0 FROM rt0 LEFT OUTER JOIN vt2 ON (+ ((((rt0.c0, rt0.c1, vt1.c0))>((vt1.c0, rt0.c1, rt0.c1))))) RIGHT OUTER JOIN vt1 ON ((((CAST(vt1.c0 AS REAL))OR((~ (rt0.c2)))))OR(((0.8398262400079151) ISNULL))) GROUP BY vt1.c0, rt0.c1, rt0.c0, vt2.c0;
SELECT ALL vt1.c0 FROM vt2 CROSS JOIN vt1 ON (((vt1.c0)) BETWEEN ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END)) AND ((((vt1.c0)IS NOT('-351548771'))))) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt2 CROSS JOIN vt1 ON (((vt1.c0)) BETWEEN ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END)) AND ((((vt1.c0)IS NOT('-351548771'))))) GROUP BY vt1.c0 HAVING MAX(MIN(MAX(MAX(vt2.c0)))) UNION ALL SELECT vt1.c0 FROM vt2 CROSS JOIN vt1 ON (((vt1.c0)) BETWEEN ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END)) AND ((((vt1.c0)IS NOT('-351548771'))))) GROUP BY vt1.c0 HAVING (NOT (MAX(MIN(MAX(MAX(vt2.c0)))))) UNION ALL SELECT vt1.c0 FROM vt2 CROSS JOIN vt1 ON (((vt1.c0)) BETWEEN ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END)) AND ((((vt1.c0)IS NOT('-351548771'))))) GROUP BY vt1.c0 HAVING ((MAX(MIN(MAX(MAX(vt2.c0))))) ISNULL);
SELECT ALL * FROM vt2 LEFT OUTER JOIN vt1 ON (((vt1.c0))<=((vt2.c0))) COLLATE BINARY COLLATE RTRIM;
SELECT ALL * FROM vt2 LEFT OUTER JOIN vt1 ON (((vt1.c0))<=((vt2.c0))) COLLATE BINARY COLLATE RTRIM WHERE (((((x'') NOT BETWEEN (vt1.c0) AND (vt2.c0))) IS FALSE)) UNION ALL SELECT ALL * FROM vt2 LEFT OUTER JOIN vt1 ON (((vt1.c0))<=((vt2.c0))) COLLATE BINARY COLLATE RTRIM WHERE ((NOT (((((x'') NOT BETWEEN (vt1.c0) AND (vt2.c0))) IS FALSE)))) UNION ALL SELECT ALL * FROM vt2 LEFT OUTER JOIN vt1 ON (((vt1.c0))<=((vt2.c0))) COLLATE BINARY COLLATE RTRIM WHERE (((((((x'') NOT BETWEEN (vt1.c0) AND (vt2.c0))) IS FALSE)) ISNULL));
SELECT ALL * FROM vt2 LEFT OUTER JOIN vt1 ON (((vt1.c0))<=((vt2.c0))) COLLATE BINARY COLLATE RTRIM;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE (CASE (- (vt1.c0))  WHEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) THEN (((vt1.c0))!=((vt1.c0))) ELSE COALESCE(vt1.c0, vt1.c0) END) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT (CASE (- (vt1.c0))  WHEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) THEN (((vt1.c0))!=((vt1.c0))) ELSE COALESCE(vt1.c0, vt1.c0) END))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((CASE (- (vt1.c0))  WHEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) THEN (((vt1.c0))!=((vt1.c0))) ELSE COALESCE(vt1.c0, vt1.c0) END) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT rt0.c2, vt1.c0, rt0.c1 FROM vt1, rt0 GROUP BY rt0.c2, vt1.c0, rt0.c1;
SELECT ALL rt0.c2, vt1.c0, rt0.c1 FROM vt1, rt0 WHERE (((((((rt0.c0)AND(rt0.c2)))AND(vt1.c0))) ISNULL)) GROUP BY rt0.c2, vt1.c0, rt0.c1 UNION SELECT ALL rt0.c2, vt1.c0, rt0.c1 FROM vt1, rt0 WHERE ((NOT (((((((rt0.c0)AND(rt0.c2)))AND(vt1.c0))) ISNULL)))) GROUP BY rt0.c2, vt1.c0, rt0.c1 UNION SELECT rt0.c2, vt1.c0, rt0.c1 FROM vt1, rt0 WHERE (((((((((rt0.c0)AND(rt0.c2)))AND(vt1.c0))) ISNULL)) ISNULL)) GROUP BY rt0.c2, vt1.c0, rt0.c1;
SELECT rt0.c2, vt1.c0, rt0.c1 FROM vt1, rt0 GROUP BY rt0.c2, vt1.c0, rt0.c1;
SELECT rt0.c2, rt0.c0, vt1.c0 FROM rt0, vt1 GROUP BY rt0.c2, rt0.c0, vt1.c0;
SELECT rt0.c2, rt0.c0, vt1.c0 FROM rt0, vt1 GROUP BY rt0.c2, rt0.c0, vt1.c0 HAVING 0.9369994201850423 UNION ALL SELECT ALL rt0.c2, rt0.c0, vt1.c0 FROM rt0, vt1 GROUP BY rt0.c2, rt0.c0, vt1.c0 HAVING (NOT (0.9369994201850423)) UNION ALL SELECT ALL rt0.c2, rt0.c0, vt1.c0 FROM rt0, vt1 GROUP BY rt0.c2, rt0.c0, vt1.c0 HAVING ((0.9369994201850423) ISNULL);
SELECT rt0.c2, rt0.c0, vt1.c0 FROM rt0, vt1 GROUP BY rt0.c2, rt0.c0, vt1.c0;
SELECT rt0.c2, rt0.c0, vt1.c0 FROM rt0, vt1 GROUP BY rt0.c2, rt0.c0, vt1.c0 HAVING 0.9369994201850423 UNION ALL SELECT ALL rt0.c2, rt0.c0, vt1.c0 FROM rt0, vt1 GROUP BY rt0.c2, rt0.c0, vt1.c0 HAVING (NOT (0.9369994201850423)) UNION ALL SELECT ALL rt0.c2, rt0.c0, vt1.c0 FROM rt0, vt1 GROUP BY rt0.c2, rt0.c0, vt1.c0 HAVING ((0.9369994201850423) ISNULL);
SELECT rt0.c2, rt0.c0, vt1.c0 FROM rt0, vt1 GROUP BY rt0.c2, rt0.c0, vt1.c0;
SELECT * FROM vt2 CROSS JOIN rt0 ON (((((((vt2.c0)OR(rt0.c0)))OR(rt0.c2)), TYPEOF(DISTINCT rt0.c2), NULL))<((UPPER(DISTINCT vt2.c0), ((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c1)), ((vt2.c0)%(rt0.c0)))));
SELECT * FROM vt2 CROSS JOIN rt0 ON (((((((vt2.c0)OR(rt0.c0)))OR(rt0.c2)), TYPEOF(DISTINCT rt0.c2), NULL))<((UPPER(DISTINCT vt2.c0), ((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c1)), ((vt2.c0)%(rt0.c0))))) WHERE ((((rt0.c0 IN ()))>=(((((((((((((vt2.c0)OR(vt2.c0)))AND(rt0.c0)))AND(vt2.c0)))OR(vt2.c0)))OR(vt2.c0)))OR(rt0.c2))))) UNION ALL SELECT * FROM vt2 CROSS JOIN rt0 ON (((((((vt2.c0)OR(rt0.c0)))OR(rt0.c2)), TYPEOF(DISTINCT rt0.c2), NULL))<((UPPER(DISTINCT vt2.c0), ((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c1)), ((vt2.c0)%(rt0.c0))))) WHERE ((NOT ((((rt0.c0 IN ()))>=(((((((((((((vt2.c0)OR(vt2.c0)))AND(rt0.c0)))AND(vt2.c0)))OR(vt2.c0)))OR(vt2.c0)))OR(rt0.c2))))))) UNION ALL SELECT * FROM vt2 CROSS JOIN rt0 ON (((((((vt2.c0)OR(rt0.c0)))OR(rt0.c2)), TYPEOF(DISTINCT rt0.c2), NULL))<((UPPER(DISTINCT vt2.c0), ((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c1)), ((vt2.c0)%(rt0.c0))))) WHERE ((((((rt0.c0 IN ()))>=(((((((((((((vt2.c0)OR(vt2.c0)))AND(rt0.c0)))AND(vt2.c0)))OR(vt2.c0)))OR(vt2.c0)))OR(rt0.c2))))) ISNULL));
SELECT * FROM vt2 CROSS JOIN rt0 ON (((((((vt2.c0)OR(rt0.c0)))OR(rt0.c2)), TYPEOF(DISTINCT rt0.c2), NULL))<((UPPER(DISTINCT vt2.c0), ((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c1)), ((vt2.c0)%(rt0.c0)))));
SELECT DISTINCT * FROM rt0, vt2, vt1;
SELECT DISTINCT * FROM rt0, vt2, vt1 WHERE (((- (rt0.c0)) IN ())) UNION SELECT DISTINCT * FROM rt0, vt2, vt1 WHERE ((NOT (((- (rt0.c0)) IN ())))) UNION SELECT DISTINCT * FROM rt0, vt2, vt1 WHERE (((((- (rt0.c0)) IN ())) ISNULL));
SELECT DISTINCT * FROM rt0, vt2, vt1;
SELECT vt2.c0, vt1.c0 FROM vt1, vt2 GROUP BY vt2.c0, vt1.c0;
SELECT vt2.c0, vt1.c0 FROM vt1, vt2 WHERE (((CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END) BETWEEN (vt2.c0) AND (((vt1.c0) BETWEEN (vt1.c0) AND (NULL))))) GROUP BY vt2.c0, vt1.c0 UNION SELECT ALL vt2.c0, vt1.c0 FROM vt1, vt2 WHERE ((NOT (((CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END) BETWEEN (vt2.c0) AND (((vt1.c0) BETWEEN (vt1.c0) AND (NULL))))))) GROUP BY vt2.c0, vt1.c0 UNION SELECT vt2.c0, vt1.c0 FROM vt1, vt2 WHERE (((((CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END) BETWEEN (vt2.c0) AND (((vt1.c0) BETWEEN (vt1.c0) AND (NULL))))) ISNULL)) GROUP BY vt2.c0, vt1.c0;
SELECT vt2.c0, vt1.c0 FROM vt1, vt2 GROUP BY vt2.c0, vt1.c0;
SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING vt2.c0 UNION ALL SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING (NOT (vt2.c0)) UNION ALL SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING ((vt2.c0) ISNULL);
SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING vt2.c0 UNION ALL SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING (NOT (vt2.c0)) UNION ALL SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING ((vt2.c0) ISNULL);
SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT vt2.c0 FROM vt2;
SELECT ALL vt2.c0 FROM vt2 WHERE (0.42159497221262543) UNION ALL SELECT vt2.c0 FROM vt2 WHERE ((NOT (0.42159497221262543))) UNION ALL SELECT vt2.c0 FROM vt2 WHERE (((0.42159497221262543) ISNULL));
SELECT vt2.c0 FROM vt2;
SELECT DISTINCT * FROM rt0, vt2, vt1;
SELECT DISTINCT * FROM rt0, vt2, vt1 WHERE (((NULL)|(((('')) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2)))))) UNION SELECT DISTINCT * FROM rt0, vt2, vt1 WHERE ((NOT (((NULL)|(((('')) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2)))))))) UNION SELECT DISTINCT * FROM rt0, vt2, vt1 WHERE (((((NULL)|(((('')) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2)))))) ISNULL));
SELECT DISTINCT * FROM rt0, vt2, vt1;
SELECT ALL rt0.c1, rt0.c2, vt2.c0 FROM vt1, rt0, vt2 GROUP BY rt0.c1, rt0.c2, vt2.c0;
SELECT ALL rt0.c1, rt0.c2, vt2.c0 FROM vt1, rt0, vt2 WHERE ((((IFNULL(DISTINCT rt0.c1, vt1.c0)))=((UNLIKELY(vt1.c0))))) GROUP BY rt0.c1, rt0.c2, vt2.c0 UNION SELECT ALL rt0.c1, rt0.c2, vt2.c0 FROM vt1, rt0, vt2 WHERE ((NOT ((((IFNULL(DISTINCT rt0.c1, vt1.c0)))=((UNLIKELY(vt1.c0))))))) GROUP BY rt0.c1, rt0.c2, vt2.c0 UNION SELECT rt0.c1, rt0.c2, vt2.c0 FROM vt1, rt0, vt2 WHERE ((((((IFNULL(DISTINCT rt0.c1, vt1.c0)))=((UNLIKELY(vt1.c0))))) ISNULL)) GROUP BY rt0.c1, rt0.c2, vt2.c0;
SELECT ALL rt0.c1, rt0.c2, vt2.c0 FROM vt1, rt0, vt2 GROUP BY rt0.c1, rt0.c2, vt2.c0;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM vt2, rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM vt2, rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING x'5bc1' UNION ALL SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM vt2, rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING (NOT (x'5bc1')) UNION ALL SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM vt2, rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING ((x'5bc1') ISNULL);
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM vt2, rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM vt2, rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING x'5bc1' UNION ALL SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM vt2, rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING (NOT (x'5bc1')) UNION ALL SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM vt2, rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING ((x'5bc1') ISNULL);
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM vt2, rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT * FROM vt1, vt2;
SELECT ALL * FROM vt1, vt2 WHERE (CAST(((vt1.c0)-(NULL)) AS REAL)) UNION ALL SELECT ALL * FROM vt1, vt2 WHERE ((NOT (CAST(((vt1.c0)-(NULL)) AS REAL)))) UNION ALL SELECT ALL * FROM vt1, vt2 WHERE (((CAST(((vt1.c0)-(NULL)) AS REAL)) ISNULL));
SELECT * FROM vt1, vt2;
SELECT DISTINCT vt2.c0, rt0.c0, rt0.c2, rt0.c1 FROM rt0, vt1 CROSS JOIN vt2 ON ((rt0.c0 COLLATE NOCASE) NOT BETWEEN (LIKE(rt0.c0, vt1.c0)) AND (((rt0.c1) NOT BETWEEN (rt0.c1) AND (vt2.c0))));
SELECT DISTINCT vt2.c0, rt0.c0, rt0.c2, rt0.c1 FROM rt0, vt1 CROSS JOIN vt2 ON ((rt0.c0 COLLATE NOCASE) NOT BETWEEN (LIKE(rt0.c0, vt1.c0)) AND (((rt0.c1) NOT BETWEEN (rt0.c1) AND (vt2.c0)))) WHERE (SQLITE_SOURCE_ID()) UNION SELECT DISTINCT vt2.c0, rt0.c0, rt0.c2, rt0.c1 FROM rt0, vt1 CROSS JOIN vt2 ON ((rt0.c0 COLLATE NOCASE) NOT BETWEEN (LIKE(rt0.c0, vt1.c0)) AND (((rt0.c1) NOT BETWEEN (rt0.c1) AND (vt2.c0)))) WHERE ((NOT (SQLITE_SOURCE_ID()))) UNION SELECT DISTINCT vt2.c0, rt0.c0, rt0.c2, rt0.c1 FROM rt0, vt1 CROSS JOIN vt2 ON ((rt0.c0 COLLATE NOCASE) NOT BETWEEN (LIKE(rt0.c0, vt1.c0)) AND (((rt0.c1) NOT BETWEEN (rt0.c1) AND (vt2.c0)))) WHERE (((SQLITE_SOURCE_ID()) ISNULL));
SELECT DISTINCT vt2.c0, rt0.c0, rt0.c2, rt0.c1 FROM rt0, vt1 CROSS JOIN vt2 ON ((rt0.c0 COLLATE NOCASE) NOT BETWEEN (LIKE(rt0.c0, vt1.c0)) AND (((rt0.c1) NOT BETWEEN (rt0.c1) AND (vt2.c0))));
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE (CAST(x'' AS INTEGER)) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT (CAST(x'' AS INTEGER)))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE (((CAST(x'' AS INTEGER)) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT rt0.c0, rt0.c1, vt1.c0 FROM vt1 INNER JOIN rt0 ON (((vt1.c0)) BETWEEN ((((vt2.c0) NOT BETWEEN (vt1.c0) AND (vt2.c0)))) AND ((vt1.c0 COLLATE RTRIM))) RIGHT OUTER JOIN vt2 ON ((((vt2.c0)OR(rt0.c0)))AND(rt0.c1)) COLLATE NOCASE GROUP BY rt0.c0, rt0.c1, vt1.c0;
SELECT SUM((- ((+ (rt0.c0))))) FROM vt2, rt0, vt1;
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE (CASE WHEN ((((rt0.c0)OR(rt0.c2)))AND(rt0.c1)) THEN x'' ELSE x'' END) UNION ALL SELECT * FROM rt0 WHERE ((NOT (CASE WHEN ((((rt0.c0)OR(rt0.c2)))AND(rt0.c1)) THEN x'' ELSE x'' END))) UNION ALL SELECT * FROM rt0 WHERE (((CASE WHEN ((((rt0.c0)OR(rt0.c2)))AND(rt0.c1)) THEN x'' ELSE x'' END) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (rt0.c0 COLLATE BINARY) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (rt0.c0 COLLATE BINARY))) UNION SELECT DISTINCT * FROM rt0 WHERE (((rt0.c0 COLLATE BINARY) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0, vt1 GROUP BY rt0.c1, rt0.c0;
SELECT rt0.c1, rt0.c0 FROM rt0, vt1 WHERE (((((((rt0.c1) BETWEEN ('593373028') AND (rt0.c1)))OR(((vt1.c0) BETWEEN (rt0.c0) AND (rt0.c2)))))AND(rt0.c2 COLLATE RTRIM))) GROUP BY rt0.c1, rt0.c0 UNION SELECT rt0.c1, rt0.c0 FROM rt0, vt1 WHERE ((NOT (((((((rt0.c1) BETWEEN ('593373028') AND (rt0.c1)))OR(((vt1.c0) BETWEEN (rt0.c0) AND (rt0.c2)))))AND(rt0.c2 COLLATE RTRIM))))) GROUP BY rt0.c1, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c0 FROM rt0, vt1 WHERE (((((((((rt0.c1) BETWEEN ('593373028') AND (rt0.c1)))OR(((vt1.c0) BETWEEN (rt0.c0) AND (rt0.c2)))))AND(rt0.c2 COLLATE RTRIM))) ISNULL)) GROUP BY rt0.c1, rt0.c0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0, vt1 GROUP BY rt0.c1, rt0.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING COUNT(*) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING COUNT(*) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT * FROM vt2 LEFT OUTER JOIN vt1 ON HEX(DISTINCT CAST(vt2.c0 AS INTEGER));
SELECT * FROM vt2 LEFT OUTER JOIN vt1 ON HEX(DISTINCT CAST(vt2.c0 AS INTEGER)) WHERE (((((vt1.c0)*(vt2.c0)))<=((((vt2.c0))=((vt1.c0)))))) UNION ALL SELECT ALL * FROM vt2 LEFT OUTER JOIN vt1 ON HEX(DISTINCT CAST(vt2.c0 AS INTEGER)) WHERE ((NOT (((((vt1.c0)*(vt2.c0)))<=((((vt2.c0))=((vt1.c0)))))))) UNION ALL SELECT ALL * FROM vt2 LEFT OUTER JOIN vt1 ON HEX(DISTINCT CAST(vt2.c0 AS INTEGER)) WHERE (((((((vt1.c0)*(vt2.c0)))<=((((vt2.c0))==((vt1.c0)))))) ISNULL));
SELECT * FROM vt2 LEFT OUTER JOIN vt1 ON HEX(DISTINCT CAST(vt2.c0 AS INTEGER));
SELECT DISTINCT rt0.c0, vt1.c0, vt2.c0, rt0.c1, rt0.c2 FROM vt2 CROSS JOIN vt1 ON '257474177' FULL OUTER JOIN rt0 ON (+ ((vt1.c0 IN ())));
SELECT DISTINCT rt0.c0, vt1.c0, vt2.c0, rt0.c1, rt0.c2 FROM vt2 CROSS JOIN vt1 ON '257474177' FULL OUTER JOIN rt0 ON (+ ((vt1.c0 IN ()))) WHERE ((+ (CAST(rt0.c2 AS BLOB)))) UNION SELECT DISTINCT rt0.c0, vt1.c0, vt2.c0, rt0.c1, rt0.c2 FROM vt2 CROSS JOIN vt1 ON '257474177' FULL OUTER JOIN rt0 ON (+ ((vt1.c0 IN ()))) WHERE ((NOT ((+ (CAST(rt0.c2 AS BLOB)))))) UNION SELECT DISTINCT rt0.c0, vt1.c0, vt2.c0, rt0.c1, rt0.c2 FROM vt2 CROSS JOIN vt1 ON '257474177' FULL OUTER JOIN rt0 ON (+ ((vt1.c0 IN ()))) WHERE ((((+ (CAST(rt0.c2 AS BLOB)))) ISNULL));
SELECT DISTINCT rt0.c0, vt1.c0, vt2.c0, rt0.c1, rt0.c2 FROM vt2 CROSS JOIN vt1 ON '257474177' FULL OUTER JOIN rt0 ON (+ ((vt1.c0 IN ())));
SELECT rt0.c2, rt0.c1, rt0.c0, vt1.c0 FROM vt1 INNER JOIN rt0 ON CAST(TRIM(vt1.c0, rt0.c1) AS NUMERIC) GROUP BY rt0.c2, rt0.c1, rt0.c0, vt1.c0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0, vt1.c0 FROM vt1 INNER JOIN rt0 ON CAST(TRIM(vt1.c0, rt0.c1) AS NUMERIC) WHERE (CASE rt0.c0  WHEN vt1.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c2 END COLLATE RTRIM) GROUP BY rt0.c2, rt0.c1, rt0.c0, vt1.c0 UNION SELECT rt0.c2, rt0.c1, rt0.c0, vt1.c0 FROM vt1 INNER JOIN rt0 ON CAST(TRIM(vt1.c0, rt0.c1) AS NUMERIC) WHERE ((NOT (CASE rt0.c0  WHEN vt1.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c2 END COLLATE RTRIM))) GROUP BY rt0.c2, rt0.c1, rt0.c0, vt1.c0 UNION SELECT ALL rt0.c2, rt0.c1, rt0.c0, vt1.c0 FROM vt1 INNER JOIN rt0 ON CAST(TRIM(vt1.c0, rt0.c1) AS NUMERIC) WHERE (((CASE rt0.c0  WHEN vt1.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c2 END COLLATE RTRIM) ISNULL)) GROUP BY rt0.c2, rt0.c1, rt0.c0, vt1.c0;
SELECT rt0.c2, rt0.c1, rt0.c0, vt1.c0 FROM vt1 INNER JOIN rt0 ON CAST(TRIM(vt1.c0, rt0.c1) AS NUMERIC) GROUP BY rt0.c2, rt0.c1, rt0.c0, vt1.c0;
SELECT rt0.c0, vt1.c0, rt0.c2, rt0.c1 FROM rt0, vt1 GROUP BY rt0.c0, vt1.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c0, vt1.c0, rt0.c2, rt0.c1 FROM rt0, vt1 GROUP BY rt0.c0, vt1.c0, rt0.c2, rt0.c1 HAVING CASE WHEN (((MAX(GROUP_CONCAT(rt0.c1))))<((rt0.c0))) THEN AVG(TOTAL(rt0.c2)) END UNION ALL SELECT rt0.c0, vt1.c0, rt0.c2, rt0.c1 FROM rt0, vt1 GROUP BY rt0.c0, vt1.c0, rt0.c2, rt0.c1 HAVING (NOT (CASE WHEN (((MAX(GROUP_CONCAT(rt0.c1))))<((rt0.c0))) THEN AVG(TOTAL(rt0.c2)) END)) UNION ALL SELECT rt0.c0, vt1.c0, rt0.c2, rt0.c1 FROM rt0, vt1 GROUP BY rt0.c0, vt1.c0, rt0.c2, rt0.c1 HAVING ((CASE WHEN (((MAX(GROUP_CONCAT(rt0.c1))))<((rt0.c0))) THEN AVG(TOTAL(rt0.c2)) END) ISNULL);
SELECT rt0.c2, rt0.c1 FROM rt0 INNER JOIN vt1 ON rt0.c2 CROSS JOIN vt2 ON (NOT ((((x'')) BETWEEN ((rt0.c0)) AND ((-339534337)))));
SELECT ALL rt0.c2, rt0.c1 FROM rt0 INNER JOIN vt1 ON rt0.c2 CROSS JOIN vt2 ON (NOT ((((x'')) BETWEEN ((rt0.c0)) AND ((-339534337))))) WHERE (((((((vt1.c0)OR(x'')))OR(vt1.c0)))GLOB(((rt0.c2) BETWEEN ('') AND (rt0.c0))))) UNION ALL SELECT rt0.c2, rt0.c1 FROM rt0 INNER JOIN vt1 ON rt0.c2 CROSS JOIN vt2 ON (NOT ((((x'')) BETWEEN ((rt0.c0)) AND ((-339534337))))) WHERE ((NOT (((((((vt1.c0)OR(x'')))OR(vt1.c0)))GLOB(((rt0.c2) BETWEEN ('') AND (rt0.c0))))))) UNION ALL SELECT rt0.c2, rt0.c1 FROM rt0 INNER JOIN vt1 ON rt0.c2 CROSS JOIN vt2 ON (NOT ((((x'')) BETWEEN ((rt0.c0)) AND ((-339534337))))) WHERE (((((((((vt1.c0)OR(x'')))OR(vt1.c0)))GLOB(((rt0.c2) BETWEEN ('') AND (rt0.c0))))) ISNULL));
SELECT rt0.c2, rt0.c1 FROM rt0 INNER JOIN vt1 ON rt0.c2 CROSS JOIN vt2 ON (NOT ((((x'')) BETWEEN ((rt0.c0)) AND ((-339534337)))));
SELECT DISTINCT rt0.c2, rt0.c0, vt1.c0 FROM vt1, rt0;
SELECT DISTINCT rt0.c2, rt0.c0, vt1.c0 FROM vt1, rt0 WHERE (((CAST(rt0.c0 AS TEXT)) ISNULL)) UNION SELECT DISTINCT rt0.c2, rt0.c0, vt1.c0 FROM vt1, rt0 WHERE ((NOT (((CAST(rt0.c0 AS TEXT)) ISNULL)))) UNION SELECT DISTINCT rt0.c2, rt0.c0, vt1.c0 FROM vt1, rt0 WHERE (((((CAST(rt0.c0 AS TEXT)) ISNULL)) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c0, vt1.c0 FROM vt1, rt0;
SELECT ALL rt0.c2 FROM vt2, vt1 INNER JOIN rt0 ON ((CAST(vt2.c0 AS BLOB))+(((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2)))) GROUP BY rt0.c2;
SELECT rt0.c2 FROM vt2, vt1 INNER JOIN rt0 ON ((CAST(vt2.c0 AS BLOB))+(((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2)))) WHERE (((((((((((((((((vt1.c0)OR(rt0.c1)))AND(vt1.c0)))OR(vt1.c0)))AND(rt0.c1)))OR(rt0.c1)))OR(vt1.c0)))OR((- (rt0.c2)))))OR(vt2.c0 COLLATE BINARY))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM vt2, vt1 INNER JOIN rt0 ON ((CAST(vt2.c0 AS BLOB))+(((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2)))) WHERE ((NOT (((((((((((((((((vt1.c0)OR(rt0.c1)))AND(vt1.c0)))OR(vt1.c0)))AND(rt0.c1)))OR(rt0.c1)))OR(vt1.c0)))OR((- (rt0.c2)))))OR(vt2.c0 COLLATE BINARY))))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM vt2, vt1 INNER JOIN rt0 ON ((CAST(vt2.c0 AS BLOB))+(((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2)))) WHERE (((((((((((((((((((vt1.c0)OR(rt0.c1)))AND(vt1.c0)))OR(vt1.c0)))AND(rt0.c1)))OR(rt0.c1)))OR(vt1.c0)))OR((- (rt0.c2)))))OR(vt2.c0 COLLATE BINARY))) ISNULL)) GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM vt2, vt1 INNER JOIN rt0 ON ((CAST(vt2.c0 AS BLOB))+(((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2)))) GROUP BY rt0.c2;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (((AVG('')))<((COUNT(*)))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT ((((AVG('')))<((COUNT(*)))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (((((AVG('')))<((COUNT(*))))) ISNULL);
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (((AVG('')))<((COUNT(*)))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT ((((AVG('')))<((COUNT(*)))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (((((AVG('')))<((COUNT(*))))) ISNULL);
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT * FROM vt1, vt2, rt0;
SELECT * FROM vt1, vt2, rt0 WHERE (((IFNULL(DISTINCT NULL, vt2.c0))LIKE(vt2.c0 COLLATE NOCASE))) UNION ALL SELECT * FROM vt1, vt2, rt0 WHERE ((NOT (((IFNULL(DISTINCT NULL, vt2.c0))LIKE(vt2.c0 COLLATE NOCASE))))) UNION ALL SELECT ALL * FROM vt1, vt2, rt0 WHERE (((((IFNULL(DISTINCT NULL, vt2.c0))LIKE(vt2.c0 COLLATE NOCASE))) ISNULL));
SELECT * FROM vt1, vt2, rt0;
SELECT DISTINCT * FROM rt0, vt2 CROSS JOIN vt1 ON CASE WHEN ((((((((rt0.c1)OR(vt1.c0)))OR(rt0.c2)))AND(rt0.c0)))OR(vt2.c0)) THEN ((vt2.c0) NOT BETWEEN (vt2.c0) AND (vt1.c0)) ELSE (NOT (rt0.c0)) END;
SELECT DISTINCT * FROM rt0, vt2 CROSS JOIN vt1 ON CASE WHEN ((((((((rt0.c1)OR(vt1.c0)))OR(rt0.c2)))AND(rt0.c0)))OR(vt2.c0)) THEN ((vt2.c0) NOT BETWEEN (vt2.c0) AND (vt1.c0)) ELSE (NOT (rt0.c0)) END WHERE (CASE (((rt0.c2)) NOT BETWEEN ((vt1.c0)) AND ((rt0.c1)))  WHEN (rt0.c0 IN (vt2.c0, vt2.c0)) THEN 'e%' END) UNION SELECT DISTINCT * FROM rt0, vt2 CROSS JOIN vt1 ON CASE WHEN ((((((((rt0.c1)OR(vt1.c0)))OR(rt0.c2)))AND(rt0.c0)))OR(vt2.c0)) THEN ((vt2.c0) NOT BETWEEN (vt2.c0) AND (vt1.c0)) ELSE (NOT (rt0.c0)) END WHERE ((NOT (CASE (((rt0.c2)) NOT BETWEEN ((vt1.c0)) AND ((rt0.c1)))  WHEN (rt0.c0 IN (vt2.c0, vt2.c0)) THEN 'e%' END))) UNION SELECT DISTINCT * FROM rt0, vt2 CROSS JOIN vt1 ON CASE WHEN ((((((((rt0.c1)OR(vt1.c0)))OR(rt0.c2)))AND(rt0.c0)))OR(vt2.c0)) THEN ((vt2.c0) NOT BETWEEN (vt2.c0) AND (vt1.c0)) ELSE (NOT (rt0.c0)) END WHERE (((CASE (((rt0.c2)) NOT BETWEEN ((vt1.c0)) AND ((rt0.c1)))  WHEN (rt0.c0 IN (vt2.c0, vt2.c0)) THEN 'e%' END) ISNULL));
SELECT DISTINCT * FROM rt0, vt2 CROSS JOIN vt1 ON CASE WHEN ((((((((rt0.c1)OR(vt1.c0)))OR(rt0.c2)))AND(rt0.c0)))OR(vt2.c0)) THEN ((vt2.c0) NOT BETWEEN (vt2.c0) AND (vt1.c0)) ELSE (NOT (rt0.c0)) END;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE (((((rt0.c1) NOT NULL)) BETWEEN (rt0.c2) AND (((rt0.c2)&(rt0.c1))))) GROUP BY rt0.c2, rt0.c0, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (((((rt0.c1) NOT NULL)) BETWEEN (rt0.c2) AND (((rt0.c2)&(rt0.c1))))))) GROUP BY rt0.c2, rt0.c0, rt0.c1 UNION SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE (((((((rt0.c1) NOT NULL)) BETWEEN (rt0.c2) AND (((rt0.c2)&(rt0.c1))))) ISNULL)) GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1, rt0.c2, vt1.c0 FROM vt1, rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2, vt1.c0;
SELECT ALL rt0.c0, rt0.c1, rt0.c2, vt1.c0 FROM vt1, rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2, vt1.c0 HAVING GROUP_CONCAT(MIN(rt0.c2)) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2, vt1.c0 FROM vt1, rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2, vt1.c0 HAVING (NOT (GROUP_CONCAT(MIN(rt0.c2)))) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2, vt1.c0 FROM vt1, rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2, vt1.c0 HAVING ((GROUP_CONCAT(MIN(rt0.c2))) ISNULL);
SELECT ALL MIN((((((vt2.c0)>(vt2.c0))))>((vt2.c0)))) FROM vt1, vt2, rt0;
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE (json(LIKELIHOOD(rt0.c0, 0.6270252719277227))) UNION ALL SELECT * FROM rt0 WHERE ((NOT (json(LIKELIHOOD(rt0.c0, 0.6270252719277227))))) UNION ALL SELECT * FROM rt0 WHERE (((json(LIKELIHOOD(rt0.c0, 0.6270252719277227))) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT * FROM vt2 RIGHT OUTER JOIN rt0 ON TRIM(DISTINCT (NOT (rt0.c0)));
SELECT DISTINCT * FROM vt2 RIGHT OUTER JOIN rt0 ON TRIM(DISTINCT (NOT (rt0.c0))) WHERE (((rt0.c1)>=(CASE WHEN vt2.c0 THEN vt2.c0 ELSE rt0.c2 END))) UNION SELECT DISTINCT * FROM vt2 RIGHT OUTER JOIN rt0 ON TRIM(DISTINCT (NOT (rt0.c0))) WHERE ((NOT (((rt0.c1)>=(CASE WHEN vt2.c0 THEN vt2.c0 ELSE rt0.c2 END))))) UNION SELECT DISTINCT * FROM vt2 RIGHT OUTER JOIN rt0 ON TRIM(DISTINCT (NOT (rt0.c0))) WHERE (((((rt0.c1)>=(CASE WHEN vt2.c0 THEN vt2.c0 ELSE rt0.c2 END))) ISNULL));
SELECT DISTINCT * FROM vt2 RIGHT OUTER JOIN rt0 ON TRIM(DISTINCT (NOT (rt0.c0)));
SELECT rt0.c2, rt0.c0, rt0.c1, vt2.c0 FROM vt2, rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1, vt2.c0;
SELECT rt0.c2, rt0.c0, rt0.c1, vt2.c0 FROM vt2, rt0 WHERE ((((rt0.c1 IN ())) BETWEEN (((rt0.c2)=(rt0.c1))) AND ((NOT (vt2.c0))))) GROUP BY rt0.c2, rt0.c0, rt0.c1, vt2.c0 UNION SELECT ALL rt0.c2, rt0.c0, rt0.c1, vt2.c0 FROM vt2, rt0 WHERE ((NOT ((((rt0.c1 IN ())) BETWEEN (((rt0.c2)==(rt0.c1))) AND ((NOT (vt2.c0))))))) GROUP BY rt0.c2, rt0.c0, rt0.c1, vt2.c0 UNION SELECT rt0.c2, rt0.c0, rt0.c1, vt2.c0 FROM vt2, rt0 WHERE ((((((rt0.c1 IN ())) BETWEEN (((rt0.c2)=(rt0.c1))) AND ((NOT (vt2.c0))))) ISNULL)) GROUP BY rt0.c2, rt0.c0, rt0.c1, vt2.c0;
SELECT rt0.c2, rt0.c0, rt0.c1, vt2.c0 FROM vt2, rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1, vt2.c0;
SELECT vt2.c0, rt0.c0 FROM rt0 LEFT OUTER JOIN vt2 ON SQLITE_VERSION() GROUP BY vt2.c0, rt0.c0;
SELECT ALL vt2.c0, rt0.c0 FROM rt0 LEFT OUTER JOIN vt2 ON SQLITE_VERSION() GROUP BY vt2.c0, rt0.c0 HAVING TOTAL(SUM(SUM(SUM(MIN(MIN(MAX(MIN(rt0.c2))))))) COLLATE BINARY) UNION ALL SELECT vt2.c0, rt0.c0 FROM rt0 LEFT OUTER JOIN vt2 ON SQLITE_VERSION() GROUP BY vt2.c0, rt0.c0 HAVING (NOT (TOTAL(SUM(SUM(SUM(MIN(MIN(MAX(MIN(rt0.c2))))))) COLLATE BINARY))) UNION ALL SELECT vt2.c0, rt0.c0 FROM rt0 LEFT OUTER JOIN vt2 ON SQLITE_VERSION() GROUP BY vt2.c0, rt0.c0 HAVING ((TOTAL(SUM(SUM(SUM(MIN(MIN(MAX(MIN(rt0.c2))))))) COLLATE BINARY)) ISNULL);
SELECT ALL * FROM rt0, vt1;
SELECT * FROM rt0, vt1 WHERE ((vt1.c0 IN ())) UNION ALL SELECT ALL * FROM rt0, vt1 WHERE ((NOT ((vt1.c0 IN ())))) UNION ALL SELECT * FROM rt0, vt1 WHERE ((((vt1.c0 IN ())) ISNULL));
SELECT ALL * FROM rt0, vt1;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((((vt1.c0) IS FALSE))+(NULL))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT (((((vt1.c0) IS FALSE))+(NULL))))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((((((vt1.c0) IS FALSE))+(NULL))) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT ALL vt2.c0, vt1.c0 FROM vt1, vt2 GROUP BY vt2.c0, vt1.c0;
SELECT vt2.c0, vt1.c0 FROM vt1, vt2 WHERE (NULL) GROUP BY vt2.c0, vt1.c0 UNION SELECT ALL vt2.c0, vt1.c0 FROM vt1, vt2 WHERE ((NOT (NULL))) GROUP BY vt2.c0, vt1.c0 UNION SELECT vt2.c0, vt1.c0 FROM vt1, vt2 WHERE (((NULL) ISNULL)) GROUP BY vt2.c0, vt1.c0;
SELECT ALL vt2.c0, vt1.c0 FROM vt1, vt2 GROUP BY vt2.c0, vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING vt1.c0 UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (vt1.c0)) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((vt1.c0) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING vt1.c0 UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (vt1.c0)) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((vt1.c0) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT rt0.c2, vt1.c0, rt0.c0 FROM vt1 CROSS JOIN rt0 ON rt0.c1;
SELECT rt0.c2, vt1.c0, rt0.c0 FROM vt1 CROSS JOIN rt0 ON rt0.c1 WHERE ((+ (x'' COLLATE RTRIM))) UNION ALL SELECT rt0.c2, vt1.c0, rt0.c0 FROM vt1 CROSS JOIN rt0 ON rt0.c1 WHERE ((NOT ((+ (x'' COLLATE RTRIM))))) UNION ALL SELECT ALL rt0.c2, vt1.c0, rt0.c0 FROM vt1 CROSS JOIN rt0 ON rt0.c1 WHERE ((((+ (x'' COLLATE RTRIM))) ISNULL));
SELECT rt0.c2, vt1.c0, rt0.c0 FROM vt1 CROSS JOIN rt0 ON rt0.c1;
SELECT DISTINCT * FROM vt2;
SELECT DISTINCT * FROM vt2 WHERE (((vt2.c0 COLLATE BINARY) NOT BETWEEN ((vt2.c0 IN (vt2.c0))) AND (CASE WHEN vt2.c0 THEN 'nkP-' END))) UNION SELECT DISTINCT * FROM vt2 WHERE ((NOT (((vt2.c0 COLLATE BINARY) NOT BETWEEN ((vt2.c0 IN (vt2.c0))) AND (CASE WHEN vt2.c0 THEN 'nkP-' END))))) UNION SELECT DISTINCT * FROM vt2 WHERE (((((vt2.c0 COLLATE BINARY) NOT BETWEEN ((vt2.c0 IN (vt2.c0))) AND (CASE WHEN vt2.c0 THEN 'nkP-' END))) ISNULL));
SELECT DISTINCT * FROM vt2;
SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT vt2.c0 FROM vt2 WHERE (CASE WHEN ((x'')==(vt2.c0)) THEN ((vt2.c0)>=(vt2.c0)) WHEN ((vt2.c0) NOT BETWEEN (vt2.c0) AND (vt2.c0)) THEN ((vt2.c0)>(vt2.c0)) WHEN (((vt2.c0, vt2.c0, vt2.c0)) NOT BETWEEN ((vt2.c0, 0X286409b8, vt2.c0)) AND ((vt2.c0, vt2.c0, vt2.c0))) THEN ((((vt2.c0)AND(vt2.c0)))AND(vt2.c0)) END) GROUP BY vt2.c0 UNION SELECT vt2.c0 FROM vt2 WHERE ((NOT (CASE WHEN ((x'')==(vt2.c0)) THEN ((vt2.c0)>=(vt2.c0)) WHEN ((vt2.c0) NOT BETWEEN (vt2.c0) AND (vt2.c0)) THEN ((vt2.c0)>(vt2.c0)) WHEN (((vt2.c0, vt2.c0, vt2.c0)) NOT BETWEEN ((vt2.c0, 0x286409b8, vt2.c0)) AND ((vt2.c0, vt2.c0, vt2.c0))) THEN ((((vt2.c0)AND(vt2.c0)))AND(vt2.c0)) END))) GROUP BY vt2.c0 UNION SELECT vt2.c0 FROM vt2 WHERE (((CASE WHEN ((x'')=(vt2.c0)) THEN ((vt2.c0)>=(vt2.c0)) WHEN ((vt2.c0) NOT BETWEEN (vt2.c0) AND (vt2.c0)) THEN ((vt2.c0)>(vt2.c0)) WHEN (((vt2.c0, vt2.c0, vt2.c0)) NOT BETWEEN ((vt2.c0, 0X286409b8, vt2.c0)) AND ((vt2.c0, vt2.c0, vt2.c0))) THEN ((((vt2.c0)AND(vt2.c0)))AND(vt2.c0)) END) ISNULL)) GROUP BY vt2.c0;
SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT ALL rt0.c1 FROM vt2 LEFT OUTER JOIN rt0 ON COALESCE(DISTINCT ((vt1.c0)/(NULL)), CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN vt2.c0 WHEN rt0.c1 THEN rt0.c0 END, (~ (rt0.c2)), ((rt0.c0)IS(vt2.c0))) RIGHT OUTER JOIN vt1 ON LIKELY(DISTINCT x'') COLLATE RTRIM GROUP BY rt0.c1;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE (((NULL)<<(((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c0))))) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (((NULL)<<(((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c0))))))) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE (((((NULL)<<(((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c0))))) ISNULL));
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0;
SELECT DISTINCT vt2.c0 FROM vt2;
SELECT DISTINCT vt2.c0 FROM vt2 WHERE (((((((((vt2.c0)OR(vt2.c0 COLLATE RTRIM)))AND(vt2.c0)))AND((((vt2.c0)) NOT BETWEEN ((vt2.c0)) AND ((vt2.c0))))))AND((NOT (vt2.c0))))) UNION SELECT DISTINCT vt2.c0 FROM vt2 WHERE ((NOT (((((((((vt2.c0)OR(vt2.c0 COLLATE RTRIM)))AND(vt2.c0)))AND((((vt2.c0)) NOT BETWEEN ((vt2.c0)) AND ((vt2.c0))))))AND((NOT (vt2.c0))))))) UNION SELECT DISTINCT vt2.c0 FROM vt2 WHERE (((((((((((vt2.c0)OR(vt2.c0 COLLATE RTRIM)))AND(vt2.c0)))AND((((vt2.c0)) NOT BETWEEN ((vt2.c0)) AND ((vt2.c0))))))AND((NOT (vt2.c0))))) ISNULL));
SELECT DISTINCT vt2.c0 FROM vt2;
SELECT vt2.c0 FROM vt2, rt0, vt1 GROUP BY vt2.c0;
SELECT vt2.c0 FROM vt2, rt0, vt1 WHERE (((LTRIM(vt2.c0, 30620884))==(SQLITE_COMPILEOPTION_GET('-1501824292')))) GROUP BY vt2.c0 UNION SELECT vt2.c0 FROM vt2, rt0, vt1 WHERE ((NOT (((LTRIM(vt2.c0, 30620884))==(SQLITE_COMPILEOPTION_GET('-1501824292')))))) GROUP BY vt2.c0 UNION SELECT ALL vt2.c0 FROM vt2, rt0, vt1 WHERE (((((LTRIM(vt2.c0, 30620884))==(SQLITE_COMPILEOPTION_GET('-1501824292')))) ISNULL)) GROUP BY vt2.c0;
SELECT vt2.c0 FROM vt2, rt0, vt1 GROUP BY vt2.c0;
SELECT ALL rt0.c0 FROM rt0 CROSS JOIN vt1 ON rt0.c2 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 CROSS JOIN vt1 ON rt0.c2 GROUP BY rt0.c0 HAVING COUNT(*) UNION ALL SELECT rt0.c0 FROM rt0 CROSS JOIN vt1 ON rt0.c2 GROUP BY rt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c0 FROM rt0 CROSS JOIN vt1 ON rt0.c2 GROUP BY rt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c0 FROM rt0 CROSS JOIN vt1 ON rt0.c2 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 CROSS JOIN vt1 ON rt0.c2 GROUP BY rt0.c0 HAVING COUNT(*) UNION ALL SELECT rt0.c0 FROM rt0 CROSS JOIN vt1 ON rt0.c2 GROUP BY rt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c0 FROM rt0 CROSS JOIN vt1 ON rt0.c2 GROUP BY rt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c0 FROM rt0 CROSS JOIN vt1 ON rt0.c2 GROUP BY rt0.c0;
SELECT ALL * FROM rt0, vt2, vt1;
SELECT ALL * FROM rt0, vt2, vt1 WHERE ((~ (((NULL)==(vt1.c0))))) UNION ALL SELECT ALL * FROM rt0, vt2, vt1 WHERE ((NOT ((~ (((NULL)==(vt1.c0))))))) UNION ALL SELECT ALL * FROM rt0, vt2, vt1 WHERE ((((~ (((NULL)==(vt1.c0))))) ISNULL));
SELECT ALL * FROM rt0, vt2, vt1;
SELECT DISTINCT vt2.c0, rt0.c0, rt0.c1 FROM rt0 FULL OUTER JOIN vt1 ON CASE WHEN vt2.c0 THEN ((rt0.c2) NOT BETWEEN (0x40e1b492) AND ('102791761')) ELSE 0.9702675658416775 END CROSS JOIN vt2 ON (- (((rt0.c0)+(vt2.c0))));
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE (((((vt1.c0) NOT BETWEEN (vt1.c0) AND (3.82047774E8))) NOT NULL)) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (((((vt1.c0) NOT BETWEEN (vt1.c0) AND (3.82047774E8))) NOT NULL)))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE (((((((vt1.c0) NOT BETWEEN (vt1.c0) AND (3.82047774E8))) NOT NULL)) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt2.c0, vt1.c0 FROM vt1, vt2 GROUP BY vt2.c0, vt1.c0;
SELECT vt2.c0, vt1.c0 FROM vt1, vt2 GROUP BY vt2.c0, vt1.c0 HAVING AVG(GROUP_CONCAT(MAX(vt2.c0))) UNION ALL SELECT vt2.c0, vt1.c0 FROM vt1, vt2 GROUP BY vt2.c0, vt1.c0 HAVING (NOT (AVG(GROUP_CONCAT(MAX(vt2.c0))))) UNION ALL SELECT vt2.c0, vt1.c0 FROM vt1, vt2 GROUP BY vt2.c0, vt1.c0 HAVING ((AVG(GROUP_CONCAT(MAX(vt2.c0)))) ISNULL);
SELECT vt2.c0, rt0.c0, vt1.c0, rt0.c2 FROM rt0, vt2 CROSS JOIN vt1 ON CAST('v^䗁fsF' AS REAL);
SELECT ALL vt2.c0, rt0.c0, vt1.c0, rt0.c2 FROM rt0, vt2 CROSS JOIN vt1 ON CAST('v^䗁fsF' AS REAL) WHERE (((CAST(rt0.c2 AS TEXT))IS NOT((((vt2.c0)) NOT BETWEEN ((rt0.c0)) AND ((vt2.c0)))))) UNION ALL SELECT vt2.c0, rt0.c0, vt1.c0, rt0.c2 FROM rt0, vt2 CROSS JOIN vt1 ON CAST('v^䗁fsF' AS REAL) WHERE ((NOT (((CAST(rt0.c2 AS TEXT))IS NOT((((vt2.c0)) NOT BETWEEN ((rt0.c0)) AND ((vt2.c0)))))))) UNION ALL SELECT ALL vt2.c0, rt0.c0, vt1.c0, rt0.c2 FROM rt0, vt2 CROSS JOIN vt1 ON CAST('v^䗁fsF' AS REAL) WHERE (((((CAST(rt0.c2 AS TEXT))IS NOT((((vt2.c0)) NOT BETWEEN ((rt0.c0)) AND ((vt2.c0)))))) ISNULL));
SELECT vt2.c0, rt0.c0, vt1.c0, rt0.c2 FROM rt0, vt2 CROSS JOIN vt1 ON CAST('v^䗁fsF' AS REAL);
SELECT DISTINCT * FROM vt1, rt0;
SELECT DISTINCT * FROM vt1, rt0 WHERE ((((NULL)) BETWEEN ((((0.242810827209891) NOT BETWEEN (0X12b0cc07) AND (vt1.c0)))) AND ((((((((((rt0.c1)AND(rt0.c2)))AND(rt0.c1)))OR(vt1.c0)))AND(vt1.c0)))))) UNION SELECT DISTINCT * FROM vt1, rt0 WHERE ((NOT ((((NULL)) BETWEEN ((((0.242810827209891) NOT BETWEEN (0x12b0cc07) AND (vt1.c0)))) AND ((((((((((rt0.c1)AND(rt0.c2)))AND(rt0.c1)))OR(vt1.c0)))AND(vt1.c0)))))))) UNION SELECT DISTINCT * FROM vt1, rt0 WHERE ((((((NULL)) BETWEEN ((((0.242810827209891) NOT BETWEEN (0X12b0cc07) AND (vt1.c0)))) AND ((((((((((rt0.c1)AND(rt0.c2)))AND(rt0.c1)))OR(vt1.c0)))AND(vt1.c0)))))) ISNULL));
SELECT DISTINCT * FROM vt1, rt0;
SELECT ALL rt0.c2, rt0.c0, rt0.c1, vt2.c0 FROM rt0, vt2, vt1 GROUP BY rt0.c2, rt0.c0, rt0.c1, vt2.c0;
SELECT ALL rt0.c2, rt0.c0, rt0.c1, vt2.c0 FROM rt0, vt2, vt1 WHERE (((((CASE rt0.c0  WHEN rt0.c1 THEN vt2.c0 END)AND((NOT (rt0.c1)))))AND(((rt0.c0) BETWEEN (rt0.c2) AND (vt1.c0))))) GROUP BY rt0.c2, rt0.c0, rt0.c1, vt2.c0 UNION SELECT rt0.c2, rt0.c0, rt0.c1, vt2.c0 FROM rt0, vt2, vt1 WHERE ((NOT (((((CASE rt0.c0  WHEN rt0.c1 THEN vt2.c0 END)AND((NOT (rt0.c1)))))AND(((rt0.c0) BETWEEN (rt0.c2) AND (vt1.c0))))))) GROUP BY rt0.c2, rt0.c0, rt0.c1, vt2.c0 UNION SELECT rt0.c2, rt0.c0, rt0.c1, vt2.c0 FROM rt0, vt2, vt1 WHERE (((((((CASE rt0.c0  WHEN rt0.c1 THEN vt2.c0 END)AND((NOT (rt0.c1)))))AND(((rt0.c0) BETWEEN (rt0.c2) AND (vt1.c0))))) ISNULL)) GROUP BY rt0.c2, rt0.c0, rt0.c1, vt2.c0;
SELECT ALL rt0.c2, rt0.c0, rt0.c1, vt2.c0 FROM rt0, vt2, vt1 GROUP BY rt0.c2, rt0.c0, rt0.c1, vt2.c0;
SELECT rt0.c2, rt0.c0 FROM vt1, rt0 GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM vt1, rt0 GROUP BY rt0.c2, rt0.c0 HAVING AVG(MAX(COUNT(rt0.c0))) UNION ALL SELECT rt0.c2, rt0.c0 FROM vt1, rt0 GROUP BY rt0.c2, rt0.c0 HAVING (NOT (AVG(MAX(COUNT(rt0.c0))))) UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM vt1, rt0 GROUP BY rt0.c2, rt0.c0 HAVING ((AVG(MAX(COUNT(rt0.c0)))) ISNULL);
SELECT ALL rt0.c1 FROM rt0, vt1;
SELECT rt0.c1 FROM rt0, vt1 WHERE (((rt0.c1) IS TRUE) COLLATE RTRIM) UNION ALL SELECT ALL rt0.c1 FROM rt0, vt1 NOT INDEXED WHERE ((NOT (((rt0.c1) IS TRUE) COLLATE RTRIM))) UNION ALL SELECT rt0.c1 FROM rt0, vt1 WHERE (((((rt0.c1) IS TRUE) COLLATE RTRIM) ISNULL));
SELECT ALL rt0.c1 FROM rt0, vt1;
SELECT DISTINCT vt2.c0, vt1.c0 FROM vt1, vt2;
SELECT DISTINCT vt2.c0, vt1.c0 FROM vt1, vt2 WHERE ((((vt1.c0)IS(vt2.c0)) IN ())) UNION SELECT DISTINCT vt2.c0, vt1.c0 FROM vt1, vt2 WHERE ((NOT ((((vt1.c0)IS(vt2.c0)) IN ())))) UNION SELECT DISTINCT vt2.c0, vt1.c0 FROM vt1, vt2 WHERE ((((((vt1.c0)IS(vt2.c0)) IN ())) ISNULL));
SELECT DISTINCT vt2.c0, vt1.c0 FROM vt1, vt2;
SELECT vt1.c0, vt2.c0 FROM vt2 INNER JOIN vt1 ON ((((((vt1.c0)OR(vt1.c0)))OR(vt2.c0))) NOT BETWEEN ((+ (vt2.c0))) AND (((vt1.c0) NOT BETWEEN (x'5793') AND (vt1.c0)))) GROUP BY vt1.c0, vt2.c0;
SELECT vt1.c0, vt2.c0 FROM vt2 INNER JOIN vt1 ON ((((((vt1.c0)OR(vt1.c0)))OR(vt2.c0))) NOT BETWEEN ((+ (vt2.c0))) AND (((vt1.c0) NOT BETWEEN (x'5793') AND (vt1.c0)))) WHERE (CASE CAST(vt2.c0 AS INTEGER)  WHEN ((((((((vt1.c0)OR(vt1.c0)))AND(vt2.c0)))AND(vt1.c0)))OR('N}|]')) THEN ((((vt2.c0)OR(vt1.c0)))AND(vt2.c0)) WHEN (vt2.c0 IN ()) THEN ('' IN ()) WHEN ((((vt2.c0)OR(vt1.c0)))OR(vt1.c0)) THEN (((vt2.c0)) BETWEEN ((vt2.c0)) AND ((vt1.c0))) END) GROUP BY vt1.c0, vt2.c0 UNION SELECT ALL vt1.c0, vt2.c0 FROM vt2 INNER JOIN vt1 ON ((((((vt1.c0)OR(vt1.c0)))OR(vt2.c0))) NOT BETWEEN ((+ (vt2.c0))) AND (((vt1.c0) NOT BETWEEN (x'5793') AND (vt1.c0)))) WHERE ((NOT (CASE CAST(vt2.c0 AS INTEGER)  WHEN ((((((((vt1.c0)OR(vt1.c0)))AND(vt2.c0)))AND(vt1.c0)))OR('N}|]')) THEN ((((vt2.c0)OR(vt1.c0)))AND(vt2.c0)) WHEN (vt2.c0 IN ()) THEN ('' IN ()) WHEN ((((vt2.c0)OR(vt1.c0)))OR(vt1.c0)) THEN (((vt2.c0)) BETWEEN ((vt2.c0)) AND ((vt1.c0))) END))) GROUP BY vt1.c0, vt2.c0 UNION SELECT vt1.c0, vt2.c0 FROM vt2 INNER JOIN vt1 ON ((((((vt1.c0)OR(vt1.c0)))OR(vt2.c0))) NOT BETWEEN ((+ (vt2.c0))) AND (((vt1.c0) NOT BETWEEN (x'5793') AND (vt1.c0)))) WHERE (((CASE CAST(vt2.c0 AS INTEGER)  WHEN ((((((((vt1.c0)OR(vt1.c0)))AND(vt2.c0)))AND(vt1.c0)))OR('N}|]')) THEN ((((vt2.c0)OR(vt1.c0)))AND(vt2.c0)) WHEN (vt2.c0 IN ()) THEN ('' IN ()) WHEN ((((vt2.c0)OR(vt1.c0)))OR(vt1.c0)) THEN (((vt2.c0)) BETWEEN ((vt2.c0)) AND ((vt1.c0))) END) ISNULL)) GROUP BY vt1.c0, vt2.c0;
SELECT vt1.c0, vt2.c0 FROM vt2 INNER JOIN vt1 ON ((((((vt1.c0)OR(vt1.c0)))OR(vt2.c0))) NOT BETWEEN ((+ (vt2.c0))) AND (((vt1.c0) NOT BETWEEN (x'5793') AND (vt1.c0)))) GROUP BY vt1.c0, vt2.c0;
SELECT rt0.c0, rt0.c1 FROM rt0 RIGHT OUTER JOIN vt1 ON ((SQLITE_VERSION()) IS FALSE) GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 RIGHT OUTER JOIN vt1 ON ((SQLITE_VERSION()) IS FALSE) GROUP BY rt0.c0, rt0.c1 HAVING ((GROUP_CONCAT(rt0.c1)) IS TRUE) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM rt0 NOT INDEXED RIGHT OUTER JOIN vt1 ON ((SQLITE_VERSION()) IS FALSE) GROUP BY rt0.c0, rt0.c1 HAVING (NOT (((GROUP_CONCAT(rt0.c1)) IS TRUE))) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM rt0 RIGHT OUTER JOIN vt1 ON ((SQLITE_VERSION()) IS FALSE) GROUP BY rt0.c0, rt0.c1 HAVING ((((GROUP_CONCAT(rt0.c1)) IS TRUE)) ISNULL);
SELECT rt0.c0, rt0.c1 FROM rt0 RIGHT OUTER JOIN vt1 ON ((SQLITE_VERSION()) IS FALSE) GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 RIGHT OUTER JOIN vt1 ON ((SQLITE_VERSION()) IS FALSE) GROUP BY rt0.c0, rt0.c1 HAVING ((GROUP_CONCAT(rt0.c1)) IS TRUE) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM rt0 NOT INDEXED RIGHT OUTER JOIN vt1 ON ((SQLITE_VERSION()) IS FALSE) GROUP BY rt0.c0, rt0.c1 HAVING (NOT (((GROUP_CONCAT(rt0.c1)) IS TRUE))) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM rt0 RIGHT OUTER JOIN vt1 ON ((SQLITE_VERSION()) IS FALSE) GROUP BY rt0.c0, rt0.c1 HAVING ((((GROUP_CONCAT(rt0.c1)) IS TRUE)) ISNULL);
SELECT rt0.c0, rt0.c1 FROM rt0 RIGHT OUTER JOIN vt1 ON ((SQLITE_VERSION()) IS FALSE) GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c0 FROM rt0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 WHERE (CASE WHEN ((rt0.c0)<(rt0.c2)) THEN ((rt0.c1)IS(rt0.c2)) ELSE ((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1)) END) UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (CASE WHEN ((rt0.c0)<(rt0.c2)) THEN ((rt0.c1)IS(rt0.c2)) ELSE ((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1)) END))) UNION ALL SELECT rt0.c2, rt0.c0 FROM rt0 WHERE (((CASE WHEN ((rt0.c0)<(rt0.c2)) THEN ((rt0.c1)IS(rt0.c2)) ELSE ((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1)) END) ISNULL));
SELECT ALL rt0.c2, rt0.c0 FROM rt0;
SELECT DISTINCT vt1.c0 FROM vt1, vt2, rt0;
SELECT DISTINCT vt1.c0 FROM vt1, vt2, rt0 WHERE (((rt0.c0)<=(CASE vt2.c0  WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN vt2.c0 WHEN vt2.c0 THEN vt1.c0 ELSE rt0.c2 END))) UNION SELECT DISTINCT vt1.c0 FROM vt1, vt2, rt0 WHERE ((NOT (((rt0.c0)<=(CASE vt2.c0  WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN vt2.c0 WHEN vt2.c0 THEN vt1.c0 ELSE rt0.c2 END))))) UNION SELECT DISTINCT vt1.c0 FROM vt1, vt2, rt0 WHERE (((((rt0.c0)<=(CASE vt2.c0  WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN vt2.c0 WHEN vt2.c0 THEN vt1.c0 ELSE rt0.c2 END))) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1, vt2, rt0;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM vt2, rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM vt2, rt0 WHERE (((((rt0.c2 IN ())))>((((rt0.c2) BETWEEN (rt0.c1) AND (vt2.c0)))))) GROUP BY rt0.c1, rt0.c0, rt0.c2 UNION SELECT rt0.c1, rt0.c0, rt0.c2 FROM vt2, rt0 WHERE ((NOT (((((rt0.c2 IN ())))>((((rt0.c2) BETWEEN (rt0.c1) AND (vt2.c0)))))))) GROUP BY rt0.c1, rt0.c0, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM vt2, rt0 WHERE (((((((rt0.c2 IN ())))>((((rt0.c2) BETWEEN (rt0.c1) AND (vt2.c0)))))) ISNULL)) GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM vt2, rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL vt1.c0, vt2.c0 FROM vt1, vt2 GROUP BY vt1.c0, vt2.c0;
SELECT ALL vt1.c0, vt2.c0 FROM vt1, vt2 GROUP BY vt1.c0, vt2.c0 HAVING (~ (AVG(vt2.c0))) UNION ALL SELECT ALL vt1.c0, vt2.c0 FROM vt1, vt2 GROUP BY vt1.c0, vt2.c0 HAVING (NOT ((~ (AVG(vt2.c0))))) UNION ALL SELECT vt1.c0, vt2.c0 FROM vt1, vt2 GROUP BY vt1.c0, vt2.c0 HAVING (((~ (AVG(vt2.c0)))) ISNULL);
SELECT ALL vt1.c0, vt2.c0 FROM vt1, vt2 GROUP BY vt1.c0, vt2.c0;
SELECT ALL vt1.c0, vt2.c0 FROM vt1, vt2 GROUP BY vt1.c0, vt2.c0 HAVING (~ (AVG(vt2.c0))) UNION ALL SELECT ALL vt1.c0, vt2.c0 FROM vt1, vt2 GROUP BY vt1.c0, vt2.c0 HAVING (NOT ((~ (AVG(vt2.c0))))) UNION ALL SELECT vt1.c0, vt2.c0 FROM vt1, vt2 GROUP BY vt1.c0, vt2.c0 HAVING (((~ (AVG(vt2.c0)))) ISNULL);
SELECT ALL vt1.c0, vt2.c0 FROM vt1, vt2 GROUP BY vt1.c0, vt2.c0;
SELECT ALL rt0.c0, rt0.c2, vt1.c0 FROM rt0 RIGHT OUTER JOIN vt1 ON (((CASE vt1.c0  WHEN rt0.c1 THEN vt1.c0 ELSE rt0.c2 END, CAST(rt0.c2 AS REAL), (rt0.c1 IN ())))>(((NOT (rt0.c1)), vt1.c0 COLLATE RTRIM, ((rt0.c1)%(rt0.c0)))));
SELECT ALL rt0.c0, rt0.c2, vt1.c0 FROM rt0 RIGHT OUTER JOIN vt1 ON (((CASE vt1.c0  WHEN rt0.c1 THEN vt1.c0 ELSE rt0.c2 END, CAST(rt0.c2 AS REAL), (rt0.c1 IN ())))>(((NOT (rt0.c1)), vt1.c0 COLLATE RTRIM, ((rt0.c1)%(rt0.c0))))) WHERE (CAST(rt0.c2 AS REAL)) UNION ALL SELECT ALL rt0.c0, rt0.c2, vt1.c0 FROM rt0 RIGHT OUTER JOIN vt1 ON (((CASE vt1.c0  WHEN rt0.c1 THEN vt1.c0 ELSE rt0.c2 END, CAST(rt0.c2 AS REAL), (rt0.c1 IN ())))>(((NOT (rt0.c1)), vt1.c0 COLLATE RTRIM, ((rt0.c1)%(rt0.c0))))) WHERE ((NOT (CAST(rt0.c2 AS REAL)))) UNION ALL SELECT rt0.c0, rt0.c2, vt1.c0 FROM rt0 RIGHT OUTER JOIN vt1 ON (((CASE vt1.c0  WHEN rt0.c1 THEN vt1.c0 ELSE rt0.c2 END, CAST(rt0.c2 AS REAL), (rt0.c1 IN ())))>(((NOT (rt0.c1)), vt1.c0 COLLATE RTRIM, ((rt0.c1)%(rt0.c0))))) WHERE (((CAST(rt0.c2 AS REAL)) ISNULL));
SELECT ALL rt0.c0, rt0.c2, vt1.c0 FROM rt0 RIGHT OUTER JOIN vt1 ON (((CASE vt1.c0  WHEN rt0.c1 THEN vt1.c0 ELSE rt0.c2 END, CAST(rt0.c2 AS REAL), (rt0.c1 IN ())))>(((NOT (rt0.c1)), vt1.c0 COLLATE RTRIM, ((rt0.c1)%(rt0.c0)))));
SELECT DISTINCT rt0.c2, rt0.c0, vt2.c0, rt0.c1 FROM vt1 LEFT OUTER JOIN vt2 ON (((~ (vt1.c0))) NOTNULL) INNER JOIN rt0 ON CASE WHEN (rt0.c1 IN (rt0.c2, rt0.c2)) THEN ((vt1.c0) NOT BETWEEN (0.7945358185674113) AND (rt0.c0)) ELSE ((rt0.c2) NOT BETWEEN (rt0.c2) AND (vt2.c0)) END;
SELECT DISTINCT rt0.c2, rt0.c0, vt2.c0, rt0.c1 FROM vt1 LEFT OUTER JOIN vt2 ON (((~ (vt1.c0))) NOTNULL) INNER JOIN rt0 ON CASE WHEN (rt0.c1 IN (rt0.c2, rt0.c2)) THEN ((vt1.c0) NOT BETWEEN (0.7945358185674113) AND (rt0.c0)) ELSE ((rt0.c2) NOT BETWEEN (rt0.c2) AND (vt2.c0)) END WHERE (((((rt0.c1)>('')))>>((vt1.c0 IN ())))) UNION SELECT DISTINCT rt0.c2, rt0.c0, vt2.c0, rt0.c1 FROM vt1 LEFT OUTER JOIN vt2 ON (((~ (vt1.c0))) NOTNULL) INNER JOIN rt0 ON CASE WHEN (rt0.c1 IN (rt0.c2, rt0.c2)) THEN ((vt1.c0) NOT BETWEEN (0.7945358185674113) AND (rt0.c0)) ELSE ((rt0.c2) NOT BETWEEN (rt0.c2) AND (vt2.c0)) END WHERE ((NOT (((((rt0.c1)>('')))>>((vt1.c0 IN ())))))) UNION SELECT DISTINCT rt0.c2, rt0.c0, vt2.c0, rt0.c1 FROM vt1 LEFT OUTER JOIN vt2 ON (((~ (vt1.c0))) NOTNULL) INNER JOIN rt0 ON CASE WHEN (rt0.c1 IN (rt0.c2, rt0.c2)) THEN ((vt1.c0) NOT BETWEEN (0.7945358185674113) AND (rt0.c0)) ELSE ((rt0.c2) NOT BETWEEN (rt0.c2) AND (vt2.c0)) END WHERE (((((((rt0.c1)>('')))>>((vt1.c0 IN ())))) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c0, vt2.c0, rt0.c1 FROM vt1 LEFT OUTER JOIN vt2 ON (((~ (vt1.c0))) NOTNULL) INNER JOIN rt0 ON CASE WHEN (rt0.c1 IN (rt0.c2, rt0.c2)) THEN ((vt1.c0) NOT BETWEEN (0.7945358185674113) AND (rt0.c0)) ELSE ((rt0.c2) NOT BETWEEN (rt0.c2) AND (vt2.c0)) END;
SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT ALL vt2.c0 FROM vt2 WHERE (CASE ((vt2.c0)<=(x''))  WHEN ((((vt2.c0)AND(vt2.c0)))AND(vt2.c0)) THEN ((vt2.c0) IS TRUE) WHEN ((vt2.c0)IS NOT(vt2.c0)) THEN x'0599' WHEN (('') ISNULL) THEN x'' ELSE TOTAL_CHANGES() END) GROUP BY vt2.c0 UNION SELECT vt2.c0 FROM vt2 WHERE ((NOT (CASE ((vt2.c0)<=(x''))  WHEN ((((vt2.c0)AND(vt2.c0)))AND(vt2.c0)) THEN ((vt2.c0) IS TRUE) WHEN ((vt2.c0)IS NOT(vt2.c0)) THEN x'0599' WHEN (('') ISNULL) THEN x'' ELSE TOTAL_CHANGES() END))) GROUP BY vt2.c0 UNION SELECT ALL vt2.c0 FROM vt2 WHERE (((CASE ((vt2.c0)<=(x''))  WHEN ((((vt2.c0)AND(vt2.c0)))AND(vt2.c0)) THEN ((vt2.c0) IS TRUE) WHEN ((vt2.c0)IS NOT(vt2.c0)) THEN x'0599' WHEN (('') ISNULL) THEN x'' ELSE TOTAL_CHANGES() END) ISNULL)) GROUP BY vt2.c0;
SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT ALL rt0.c2, vt1.c0 FROM rt0, vt1, vt2 GROUP BY rt0.c2, vt1.c0;
SELECT rt0.c2, vt1.c0 FROM rt0, vt1, vt2 GROUP BY rt0.c2, vt1.c0 HAVING (SUM(rt0.c1) IN ()) UNION ALL SELECT rt0.c2, vt1.c0 FROM rt0, vt1, vt2 GROUP BY rt0.c2, vt1.c0 HAVING (NOT ((SUM(rt0.c1) IN ()))) UNION ALL SELECT rt0.c2, vt1.c0 FROM rt0, vt1, vt2 GROUP BY rt0.c2, vt1.c0 HAVING (((SUM(rt0.c1) IN ())) ISNULL);
SELECT ALL rt0.c2, vt1.c0 FROM rt0, vt1, vt2 GROUP BY rt0.c2, vt1.c0;
SELECT rt0.c2, vt1.c0 FROM rt0, vt1, vt2 GROUP BY rt0.c2, vt1.c0 HAVING (SUM(rt0.c1) IN ()) UNION ALL SELECT rt0.c2, vt1.c0 FROM rt0, vt1, vt2 GROUP BY rt0.c2, vt1.c0 HAVING (NOT ((SUM(rt0.c1) IN ()))) UNION ALL SELECT rt0.c2, vt1.c0 FROM rt0, vt1, vt2 GROUP BY rt0.c2, vt1.c0 HAVING (((SUM(rt0.c1) IN ())) ISNULL);
SELECT ALL rt0.c2, vt1.c0 FROM rt0, vt1, vt2 GROUP BY rt0.c2, vt1.c0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE (((((rt0.c0)&(rt0.c1)))||(((((rt0.c2)OR(rt0.c0)))OR(rt0.c0))))) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (((((rt0.c0)&(rt0.c1)))||(((((rt0.c2)OR(rt0.c0)))OR(rt0.c0))))))) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE (((((((rt0.c0)&(rt0.c1)))||(((((rt0.c2)OR(rt0.c0)))OR(rt0.c0))))) ISNULL));
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0;
SELECT DISTINCT * FROM rt0 RIGHT OUTER JOIN vt2 ON ((((vt2.c0) IS FALSE)) NOT NULL) CROSS JOIN vt1 ON (((rt0.c2 COLLATE RTRIM))<((UNLIKELY(rt0.c1))));
SELECT DISTINCT * FROM rt0 RIGHT OUTER JOIN vt2 ON ((((vt2.c0) IS FALSE)) NOT NULL) CROSS JOIN vt1 ON (((rt0.c2 COLLATE RTRIM))<((UNLIKELY(rt0.c1)))) WHERE (vt1.c0) UNION SELECT DISTINCT * FROM rt0 RIGHT OUTER JOIN vt2 ON ((((vt2.c0) IS FALSE)) NOT NULL) CROSS JOIN vt1 ON (((rt0.c2 COLLATE RTRIM))<((UNLIKELY(rt0.c1)))) WHERE ((NOT (vt1.c0))) UNION SELECT DISTINCT * FROM rt0 RIGHT OUTER JOIN vt2 ON ((((vt2.c0) IS FALSE)) NOT NULL) CROSS JOIN vt1 ON (((rt0.c2 COLLATE RTRIM))<((UNLIKELY(rt0.c1)))) WHERE (((vt1.c0) ISNULL));
SELECT DISTINCT * FROM rt0 RIGHT OUTER JOIN vt2 ON ((((vt2.c0) IS FALSE)) NOT NULL) CROSS JOIN vt1 ON (((rt0.c2 COLLATE RTRIM))<((UNLIKELY(rt0.c1))));
SELECT ALL rt0.c1 FROM vt1, vt2 LEFT OUTER JOIN rt0 ON (((vt1.c0)) NOT BETWEEN ((CAST(vt2.c0 AS TEXT))) AND ((((rt0.c0) NOT NULL)))) GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM vt1, vt2 LEFT OUTER JOIN rt0 ON (((vt1.c0)) NOT BETWEEN ((CAST(vt2.c0 AS TEXT))) AND ((((rt0.c0) NOT NULL)))) WHERE (((((rt0.c0)>=(rt0.c2))) NOT BETWEEN (CASE WHEN rt0.c1 THEN rt0.c0 END) AND (rt0.c1))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM vt1, vt2 LEFT OUTER JOIN rt0 ON (((vt1.c0)) NOT BETWEEN ((CAST(vt2.c0 AS TEXT))) AND ((((rt0.c0) NOT NULL)))) WHERE ((NOT (((((rt0.c0)>=(rt0.c2))) NOT BETWEEN (CASE WHEN rt0.c1 THEN rt0.c0 END) AND (rt0.c1))))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM vt1, vt2 LEFT OUTER JOIN rt0 ON (((vt1.c0)) NOT BETWEEN ((CAST(vt2.c0 AS TEXT))) AND ((((rt0.c0) NOT NULL)))) WHERE (((((((rt0.c0)>=(rt0.c2))) NOT BETWEEN (CASE WHEN rt0.c1 THEN rt0.c0 END) AND (rt0.c1))) ISNULL)) GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM vt1, vt2 LEFT OUTER JOIN rt0 ON (((vt1.c0)) NOT BETWEEN ((CAST(vt2.c0 AS TEXT))) AND ((((rt0.c0) NOT NULL)))) GROUP BY rt0.c1;
SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING AVG((((COUNT(0.31077904416523383), COUNT(*), x''))=((vt2.c0, SUM(vt2.c0), AVG(MIN(vt2.c0)))))) UNION ALL SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING (NOT (AVG((((COUNT(0.31077904416523383), COUNT(*), x''))==((vt2.c0, SUM(vt2.c0), AVG(MIN(vt2.c0)))))))) UNION ALL SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING ((AVG((((COUNT(0.31077904416523383), COUNT(*), x''))==((vt2.c0, SUM(vt2.c0), AVG(MIN(vt2.c0))))))) ISNULL);
SELECT ALL vt1.c0 FROM vt1;
SELECT ALL vt1.c0 FROM vt1 WHERE (0.2125701350394239) UNION ALL SELECT vt1.c0 FROM vt1 WHERE ((NOT (0.2125701350394239))) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE (((0.2125701350394239) ISNULL));
SELECT ALL vt1.c0 FROM vt1;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE ((~ (CAST(vt1.c0 AS REAL)))) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT ((~ (CAST(vt1.c0 AS REAL)))))) UNION SELECT DISTINCT * FROM vt1 WHERE ((((~ (CAST(vt1.c0 AS REAL)))) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT ALL rt0.c1, rt0.c2 FROM vt2, rt0 NOT INDEXED GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c1, rt0.c2 FROM vt2, rt0 WHERE (DATETIME(rt0.c1 COLLATE NOCASE, ((rt0.c2)IS NOT(vt2.c0)), ((rt0.c0) BETWEEN (vt2.c0) AND (rt0.c0)), ((vt2.c0) IS TRUE), ((rt0.c2)|(rt0.c2)))) GROUP BY rt0.c1, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c2 FROM vt2, rt0 WHERE ((NOT (DATETIME(rt0.c1 COLLATE NOCASE, ((rt0.c2)IS NOT(vt2.c0)), ((rt0.c0) BETWEEN (vt2.c0) AND (rt0.c0)), ((vt2.c0) IS TRUE), ((rt0.c2)|(rt0.c2)))))) GROUP BY rt0.c1, rt0.c2 UNION SELECT rt0.c1, rt0.c2 FROM vt2, rt0 WHERE (((DATETIME(rt0.c1 COLLATE NOCASE, ((rt0.c2)IS NOT(vt2.c0)), ((rt0.c0) BETWEEN (vt2.c0) AND (rt0.c0)), ((vt2.c0) IS TRUE), ((rt0.c2)|(rt0.c2)))) ISNULL)) GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM vt2, rt0 NOT INDEXED GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c2, rt0.c1, vt1.c0 FROM vt2, vt1, rt0 GROUP BY rt0.c2, rt0.c1, vt1.c0;
SELECT ALL rt0.c2, rt0.c1, vt1.c0 FROM vt2, vt1, rt0 GROUP BY rt0.c2, rt0.c1, vt1.c0 HAVING ((vt1.c0) NOT BETWEEN (COUNT(MIN(TOTAL(vt2.c0)))) AND (AVG(COUNT(vt2.c0)))) UNION ALL SELECT rt0.c2, rt0.c1, vt1.c0 FROM vt2, vt1, rt0 GROUP BY rt0.c2, rt0.c1, vt1.c0 HAVING (NOT (((vt1.c0) NOT BETWEEN (COUNT(MIN(TOTAL(vt2.c0)))) AND (AVG(COUNT(vt2.c0)))))) UNION ALL SELECT ALL rt0.c2, rt0.c1, vt1.c0 FROM vt2, vt1, rt0 GROUP BY rt0.c2, rt0.c1, vt1.c0 HAVING ((((vt1.c0) NOT BETWEEN (COUNT(MIN(TOTAL(vt2.c0)))) AND (AVG(COUNT(vt2.c0))))) ISNULL);
SELECT ALL * FROM rt0;
SELECT * FROM rt0 WHERE (((rtreenode(rt0.c2, rt0.c2)) NOT BETWEEN ((((rt0.c1, rt0.c2, rt0.c2, rt0.c0, '?')) NOT BETWEEN ((rt0.c1, rt0.c0, rt0.c2, rt0.c2, x'')) AND ((rt0.c1, rt0.c1, rt0.c2, rt0.c2, rt0.c1)))) AND (((((((((rt0.c2)OR(rt0.c1)))AND(rt0.c2)))OR(rt0.c0)))AND(rt0.c1))))) UNION ALL SELECT * FROM rt0 WHERE ((NOT (((rtreenode(rt0.c2, rt0.c2)) NOT BETWEEN ((((rt0.c1, rt0.c2, rt0.c2, rt0.c0, '?')) NOT BETWEEN ((rt0.c1, rt0.c0, rt0.c2, rt0.c2, x'')) AND ((rt0.c1, rt0.c1, rt0.c2, rt0.c2, rt0.c1)))) AND (((((((((rt0.c2)OR(rt0.c1)))AND(rt0.c2)))OR(rt0.c0)))AND(rt0.c1))))))) UNION ALL SELECT ALL * FROM rt0 WHERE (((((rtreenode(rt0.c2, rt0.c2)) NOT BETWEEN ((((rt0.c1, rt0.c2, rt0.c2, rt0.c0, '?')) NOT BETWEEN ((rt0.c1, rt0.c0, rt0.c2, rt0.c2, x'')) AND ((rt0.c1, rt0.c1, rt0.c2, rt0.c2, rt0.c1)))) AND (((((((((rt0.c2)OR(rt0.c1)))AND(rt0.c2)))OR(rt0.c0)))AND(rt0.c1))))) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT * FROM vt2, vt1, rt0;
SELECT DISTINCT * FROM vt2, vt1, rt0 WHERE ((((rt0.c0) NOT BETWEEN (rt0.c1) AND (vt1.c0)) IN ())) UNION SELECT DISTINCT * FROM vt2, vt1, rt0 WHERE ((NOT ((((rt0.c0) NOT BETWEEN (rt0.c1) AND (vt1.c0)) IN ())))) UNION SELECT DISTINCT * FROM vt2, vt1, rt0 WHERE ((((((rt0.c0) NOT BETWEEN (rt0.c1) AND (vt1.c0)) IN ())) ISNULL));
SELECT DISTINCT * FROM vt2, vt1, rt0;
SELECT ALL vt1.c0 FROM vt2, rt0, vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt2, rt0, vt1 WHERE ((((rt0.c0, rt0.c0, vt1.c0)) NOT BETWEEN ((((((vt1.c0)AND(vt2.c0)))OR(vt1.c0)), (NOT (rt0.c0)), rt0.c2 COLLATE RTRIM)) AND ((CASE WHEN vt2.c0 THEN vt1.c0 ELSE rt0.c0 END, 9.31599435E8, ((rt0.c1)||(rt0.c0)))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt2, rt0, vt1 WHERE ((NOT ((((rt0.c0, rt0.c0, vt1.c0)) NOT BETWEEN ((((((vt1.c0)AND(vt2.c0)))OR(vt1.c0)), (NOT (rt0.c0)), rt0.c2 COLLATE RTRIM)) AND ((CASE WHEN vt2.c0 THEN vt1.c0 ELSE rt0.c0 END, 9.31599435E8, ((rt0.c1)||(rt0.c0)))))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt2, rt0, vt1 WHERE ((((((rt0.c0, rt0.c0, vt1.c0)) NOT BETWEEN ((((((vt1.c0)AND(vt2.c0)))OR(vt1.c0)), (NOT (rt0.c0)), rt0.c2 COLLATE RTRIM)) AND ((CASE WHEN vt2.c0 THEN vt1.c0 ELSE rt0.c0 END, 9.31599435E8, ((rt0.c1)||(rt0.c0)))))) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt2, rt0, vt1 GROUP BY vt1.c0;
SELECT ALL rt0.c0, vt1.c0, rt0.c1, vt2.c0, rt0.c2 FROM rt0, vt2, vt1 GROUP BY rt0.c0, vt1.c0, rt0.c1, vt2.c0, rt0.c2;
SELECT ALL rt0.c0, vt1.c0, rt0.c1, vt2.c0, rt0.c2 FROM rt0, vt2, vt1 GROUP BY rt0.c0, vt1.c0, rt0.c1, vt2.c0, rt0.c2 HAVING LIKELY(DISTINCT COUNT(*)) UNION ALL SELECT ALL rt0.c0, vt1.c0, rt0.c1, vt2.c0, rt0.c2 FROM rt0, vt2, vt1 GROUP BY rt0.c0, vt1.c0, rt0.c1, vt2.c0, rt0.c2 HAVING (NOT (LIKELY(DISTINCT COUNT(*)))) UNION ALL SELECT rt0.c0, vt1.c0, rt0.c1, vt2.c0, rt0.c2 FROM rt0, vt2, vt1 GROUP BY rt0.c0, vt1.c0, rt0.c1, vt2.c0, rt0.c2 HAVING ((LIKELY(DISTINCT COUNT(*))) ISNULL);
SELECT ALL rt0.c0, vt1.c0, rt0.c1, vt2.c0, rt0.c2 FROM rt0, vt2, vt1 GROUP BY rt0.c0, vt1.c0, rt0.c1, vt2.c0, rt0.c2;
SELECT ALL rt0.c0, vt1.c0, rt0.c1, vt2.c0, rt0.c2 FROM rt0, vt2, vt1 GROUP BY rt0.c0, vt1.c0, rt0.c1, vt2.c0, rt0.c2 HAVING LIKELY(DISTINCT COUNT(*)) UNION ALL SELECT ALL rt0.c0, vt1.c0, rt0.c1, vt2.c0, rt0.c2 FROM rt0, vt2, vt1 GROUP BY rt0.c0, vt1.c0, rt0.c1, vt2.c0, rt0.c2 HAVING (NOT (LIKELY(DISTINCT COUNT(*)))) UNION ALL SELECT rt0.c0, vt1.c0, rt0.c1, vt2.c0, rt0.c2 FROM rt0, vt2, vt1 GROUP BY rt0.c0, vt1.c0, rt0.c1, vt2.c0, rt0.c2 HAVING ((LIKELY(DISTINCT COUNT(*))) ISNULL);
SELECT ALL rt0.c0, vt1.c0, rt0.c1, vt2.c0, rt0.c2 FROM rt0, vt2, vt1 GROUP BY rt0.c0, vt1.c0, rt0.c1, vt2.c0, rt0.c2;
SELECT ALL vt1.c0 FROM vt1;
SELECT vt1.c0 FROM vt1 WHERE (((((vt1.c0)AND(vt1.c0))) IS TRUE)) UNION ALL SELECT vt1.c0 FROM vt1 WHERE ((NOT (((((vt1.c0)AND(vt1.c0))) IS TRUE)))) UNION ALL SELECT vt1.c0 FROM vt1 WHERE (((((((vt1.c0)AND(vt1.c0))) IS TRUE)) ISNULL));
SELECT ALL vt1.c0 FROM vt1;
SELECT DISTINCT * FROM vt2 FULL OUTER JOIN vt1 ON (~ ((+ (vt2.c0))));
SELECT DISTINCT * FROM vt2 FULL OUTER JOIN vt1 ON (~ ((+ (vt2.c0)))) WHERE ((- (((vt1.c0) NOT BETWEEN (vt2.c0) AND (vt2.c0))))) UNION SELECT DISTINCT * FROM vt2 FULL OUTER JOIN vt1 ON (~ ((+ (vt2.c0)))) WHERE ((NOT ((- (((vt1.c0) NOT BETWEEN (vt2.c0) AND (vt2.c0))))))) UNION SELECT DISTINCT * FROM vt2 FULL OUTER JOIN vt1 ON (~ ((+ (vt2.c0)))) WHERE ((((- (((vt1.c0) NOT BETWEEN (vt2.c0) AND (vt2.c0))))) ISNULL));
SELECT DISTINCT * FROM vt2 FULL OUTER JOIN vt1 ON (~ ((+ (vt2.c0))));
SELECT rt0.c0, vt1.c0, rt0.c1 FROM rt0 LEFT OUTER JOIN vt1 ON ((TYPEOF(DISTINCT 627078293)) BETWEEN (rt0.c1 COLLATE BINARY) AND (((vt1.c0) NOT BETWEEN (vt1.c0) AND (0.9281504415170335)))) GROUP BY rt0.c0, vt1.c0, rt0.c1;
SELECT rt0.c0, vt1.c0, rt0.c1 FROM rt0 LEFT OUTER JOIN vt1 ON ((TYPEOF(DISTINCT 627078293)) BETWEEN (rt0.c1 COLLATE BINARY) AND (((vt1.c0) NOT BETWEEN (vt1.c0) AND (0.9281504415170335)))) WHERE (CAST((rt0.c1 IN ()) AS NUMERIC)) GROUP BY rt0.c0, vt1.c0, rt0.c1 UNION SELECT ALL rt0.c0, vt1.c0, rt0.c1 FROM rt0 LEFT OUTER JOIN vt1 ON ((TYPEOF(DISTINCT 627078293)) BETWEEN (rt0.c1 COLLATE BINARY) AND (((vt1.c0) NOT BETWEEN (vt1.c0) AND (0.9281504415170335)))) WHERE ((NOT (CAST((rt0.c1 IN ()) AS NUMERIC)))) GROUP BY rt0.c0, vt1.c0, rt0.c1 UNION SELECT ALL rt0.c0, vt1.c0, rt0.c1 FROM rt0 LEFT OUTER JOIN vt1 ON ((TYPEOF(DISTINCT 627078293)) BETWEEN (rt0.c1 COLLATE BINARY) AND (((vt1.c0) NOT BETWEEN (vt1.c0) AND (0.9281504415170335)))) WHERE (((CAST((rt0.c1 IN ()) AS NUMERIC)) ISNULL)) GROUP BY rt0.c0, vt1.c0, rt0.c1;
SELECT rt0.c0, vt1.c0, rt0.c1 FROM rt0 LEFT OUTER JOIN vt1 ON ((TYPEOF(DISTINCT 627078293)) BETWEEN (rt0.c1 COLLATE BINARY) AND (((vt1.c0) NOT BETWEEN (vt1.c0) AND (0.9281504415170335)))) GROUP BY rt0.c0, vt1.c0, rt0.c1;
SELECT ALL rt0.c2, vt1.c0, rt0.c1 FROM vt1 NATURAL JOIN rt0 GROUP BY rt0.c2, vt1.c0, rt0.c1;
SELECT ALL rt0.c2, vt1.c0, rt0.c1 FROM vt1 NATURAL JOIN rt0 GROUP BY rt0.c2, vt1.c0, rt0.c1 HAVING AVG(COUNT(*)) UNION ALL SELECT ALL rt0.c2, vt1.c0, rt0.c1 FROM vt1 NATURAL JOIN rt0 GROUP BY rt0.c2, vt1.c0, rt0.c1 HAVING (NOT (AVG(COUNT(*)))) UNION ALL SELECT rt0.c2, vt1.c0, rt0.c1 FROM vt1 NATURAL JOIN rt0 GROUP BY rt0.c2, vt1.c0, rt0.c1 HAVING ((AVG(COUNT(*))) ISNULL);
SELECT * FROM vt2;
SELECT * FROM vt2 WHERE (((vt2.c0)>=(vt2.c0)) COLLATE NOCASE) UNION ALL SELECT ALL * FROM vt2 WHERE ((NOT (((vt2.c0)>=(vt2.c0)) COLLATE NOCASE))) UNION ALL SELECT ALL * FROM vt2 WHERE (((((vt2.c0)>=(vt2.c0)) COLLATE NOCASE) ISNULL));
SELECT * FROM vt2;
SELECT DISTINCT rt0.c2 FROM vt2, rt0;
SELECT DISTINCT rt0.c2 FROM vt2, rt0 WHERE ((((rt0.c0 IN ())) NOT BETWEEN (((rt0.c1) ISNULL)) AND (((rt0.c2) ISNULL)))) UNION SELECT DISTINCT rt0.c2 FROM vt2, rt0 WHERE ((NOT ((((rt0.c0 IN ())) NOT BETWEEN (((rt0.c1) ISNULL)) AND (((rt0.c2) ISNULL)))))) UNION SELECT DISTINCT rt0.c2 FROM vt2, rt0 WHERE ((((((rt0.c0 IN ())) NOT BETWEEN (((rt0.c1) ISNULL)) AND (((rt0.c2) ISNULL)))) ISNULL));
SELECT DISTINCT rt0.c2 FROM vt2, rt0;
SELECT rt0.c0, rt0.c2, vt1.c0, rt0.c1 FROM rt0 LEFT OUTER JOIN vt1 ON ((((((vt1.c0)OR(rt0.c2)))AND(rt0.c0))) BETWEEN (((rt0.c1)==(rt0.c1))) AND (vt1.c0 COLLATE NOCASE)) GROUP BY rt0.c0, rt0.c2, vt1.c0, rt0.c1;
SELECT rt0.c0, rt0.c2, vt1.c0, rt0.c1 FROM rt0 LEFT OUTER JOIN vt1 ON ((((((vt1.c0)OR(rt0.c2)))AND(rt0.c0))) BETWEEN (((rt0.c1)==(rt0.c1))) AND (vt1.c0 COLLATE NOCASE)) WHERE ((- (((vt1.c0)<<(vt1.c0))))) GROUP BY rt0.c0, rt0.c2, vt1.c0, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c2, vt1.c0, rt0.c1 FROM rt0 LEFT OUTER JOIN vt1 ON ((((((vt1.c0)OR(rt0.c2)))AND(rt0.c0))) BETWEEN (((rt0.c1)=(rt0.c1))) AND (vt1.c0 COLLATE NOCASE)) WHERE ((NOT ((- (((vt1.c0)<<(vt1.c0))))))) GROUP BY rt0.c0, rt0.c2, vt1.c0, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c2, vt1.c0, rt0.c1 FROM rt0 LEFT OUTER JOIN vt1 ON ((((((vt1.c0)OR(rt0.c2)))AND(rt0.c0))) BETWEEN (((rt0.c1)=(rt0.c1))) AND (vt1.c0 COLLATE NOCASE)) WHERE ((((- (((vt1.c0)<<(vt1.c0))))) ISNULL)) GROUP BY rt0.c0, rt0.c2, vt1.c0, rt0.c1;
SELECT rt0.c0, rt0.c2, vt1.c0, rt0.c1 FROM rt0 LEFT OUTER JOIN vt1 ON ((((((vt1.c0)OR(rt0.c2)))AND(rt0.c0))) BETWEEN (((rt0.c1)==(rt0.c1))) AND (vt1.c0 COLLATE NOCASE)) GROUP BY rt0.c0, rt0.c2, vt1.c0, rt0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING ((MAX(''))<>(MIN(TOTAL(rt0.c0)))) UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT (((MAX(''))!=(MIN(TOTAL(rt0.c0)))))) UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING ((((MAX(''))!=(MIN(TOTAL(rt0.c0))))) ISNULL);
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((((((((rt0.c0, rt0.c0, rt0.c0)) BETWEEN ((rt0.c0, rt0.c1, 0.7343382137353701)) AND ((rt0.c1, rt0.c0, rt0.c0))))OR((((rt0.c2))<=((rt0.c0))))))AND((rt0.c1 IN ())))) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT ((((((((rt0.c0, rt0.c0, rt0.c0)) BETWEEN ((rt0.c0, rt0.c1, 0.7343382137353701)) AND ((rt0.c1, rt0.c0, rt0.c0))))OR((((rt0.c2))<=((rt0.c0))))))AND((rt0.c1 IN ())))))) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((((((((((rt0.c0, rt0.c0, rt0.c0)) BETWEEN ((rt0.c0, rt0.c1, 0.7343382137353701)) AND ((rt0.c1, rt0.c0, rt0.c0))))OR((((rt0.c2))<=((rt0.c0))))))AND((rt0.c1 IN ())))) ISNULL));
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0;
SELECT DISTINCT * FROM vt1, vt2, rt0;
SELECT DISTINCT * FROM vt1, vt2, rt0 WHERE ((((((((((~ (NULL)))AND(vt1.c0)))AND(vt2.c0)))AND(CASE NULL  WHEN vt1.c0 THEN vt1.c0 END)))OR(CAST(rt0.c2 AS INTEGER)))) UNION SELECT DISTINCT * FROM vt1, vt2 NOT INDEXED, rt0 WHERE ((NOT ((((((((((~ (NULL)))AND(vt1.c0)))AND(vt2.c0)))AND(CASE NULL  WHEN vt1.c0 THEN vt1.c0 END)))OR(CAST(rt0.c2 AS INTEGER)))))) UNION SELECT DISTINCT * FROM vt1, vt2, rt0 WHERE ((((((((((((~ (NULL)))AND(vt1.c0)))AND(vt2.c0)))AND(CASE NULL  WHEN vt1.c0 THEN vt1.c0 END)))OR(CAST(rt0.c2 AS INTEGER)))) ISNULL));
SELECT DISTINCT * FROM vt1, vt2, rt0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE ((((vt1.c0)-(vt1.c0)) IN (vt1.c0))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT ((((vt1.c0)-(vt1.c0)) IN (vt1.c0))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((((((vt1.c0)-(vt1.c0)) IN (vt1.c0))) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL rt0.c1, rt0.c0, vt2.c0 FROM vt1, rt0, vt2 GROUP BY rt0.c1, rt0.c0, vt2.c0;
SELECT rt0.c1, rt0.c0, vt2.c0 FROM vt1, rt0, vt2 GROUP BY rt0.c1, rt0.c0, vt2.c0 HAVING GROUP_CONCAT(((rt0.c0)!=(rt0.c2))) UNION ALL SELECT rt0.c1, rt0.c0, vt2.c0 FROM vt1, rt0, vt2 GROUP BY rt0.c1, rt0.c0, vt2.c0 HAVING (NOT (GROUP_CONCAT(((rt0.c0)<>(rt0.c2))))) UNION ALL SELECT ALL rt0.c1, rt0.c0, vt2.c0 FROM vt1, rt0, vt2 GROUP BY rt0.c1, rt0.c0, vt2.c0 HAVING ((GROUP_CONCAT(((rt0.c0)!=(rt0.c2)))) ISNULL);
SELECT ALL rt0.c1, rt0.c0, vt2.c0 FROM vt1, rt0, vt2 GROUP BY rt0.c1, rt0.c0, vt2.c0;
SELECT rt0.c1, rt0.c0, vt2.c0 FROM vt1, rt0, vt2 GROUP BY rt0.c1, rt0.c0, vt2.c0 HAVING GROUP_CONCAT(((rt0.c0)!=(rt0.c2))) UNION ALL SELECT rt0.c1, rt0.c0, vt2.c0 FROM vt1, rt0, vt2 GROUP BY rt0.c1, rt0.c0, vt2.c0 HAVING (NOT (GROUP_CONCAT(((rt0.c0)<>(rt0.c2))))) UNION ALL SELECT ALL rt0.c1, rt0.c0, vt2.c0 FROM vt1, rt0, vt2 GROUP BY rt0.c1, rt0.c0, vt2.c0 HAVING ((GROUP_CONCAT(((rt0.c0)!=(rt0.c2)))) ISNULL);
SELECT ALL rt0.c1, rt0.c0, vt2.c0 FROM vt1, rt0, vt2 GROUP BY rt0.c1, rt0.c0, vt2.c0;
SELECT * FROM vt1, rt0, vt2;
SELECT * FROM vt1, rt0, vt2 WHERE (x'') UNION ALL SELECT ALL * FROM vt1 NOT INDEXED, rt0, vt2 WHERE ((NOT (x''))) UNION ALL SELECT * FROM vt1, rt0, vt2 WHERE (((x'') ISNULL));
SELECT * FROM vt1, rt0, vt2;
SELECT DISTINCT * FROM vt2, vt1, rt0;
SELECT DISTINCT * FROM vt2, vt1, rt0 WHERE (((rt0.c0) NOT BETWEEN ((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c1)))) AND (LENGTH(rt0.c0)))) UNION SELECT DISTINCT * FROM vt2, vt1, rt0 WHERE ((NOT (((rt0.c0) NOT BETWEEN ((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c1)))) AND (LENGTH(rt0.c0)))))) UNION SELECT DISTINCT * FROM vt2, vt1 NOT INDEXED, rt0 WHERE (((((rt0.c0) NOT BETWEEN ((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c1)))) AND (LENGTH(rt0.c0)))) ISNULL));
SELECT DISTINCT * FROM vt2, vt1, rt0;
SELECT rt0.c2, vt2.c0, rt0.c1, rt0.c0 FROM rt0, vt1, vt2 GROUP BY rt0.c2, vt2.c0, rt0.c1, rt0.c0;
SELECT rt0.c2, vt2.c0, rt0.c1, rt0.c0 FROM rt0, vt1, vt2 WHERE (CASE WHEN rt0.c1 THEN rt0.c2 END COLLATE BINARY) GROUP BY rt0.c2, vt2.c0, rt0.c1, rt0.c0 UNION SELECT rt0.c2, vt2.c0, rt0.c1, rt0.c0 FROM rt0, vt1, vt2 WHERE ((NOT (CASE WHEN rt0.c1 THEN rt0.c2 END COLLATE BINARY))) GROUP BY rt0.c2, vt2.c0, rt0.c1, rt0.c0 UNION SELECT ALL rt0.c2, vt2.c0, rt0.c1, rt0.c0 FROM rt0, vt1, vt2 WHERE (((CASE WHEN rt0.c1 THEN rt0.c2 END COLLATE BINARY) ISNULL)) GROUP BY rt0.c2, vt2.c0, rt0.c1, rt0.c0;
SELECT rt0.c2, vt2.c0, rt0.c1, rt0.c0 FROM rt0, vt1, vt2 GROUP BY rt0.c2, vt2.c0, rt0.c1, rt0.c0;
SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING (+ (SUM(vt2.c0))) UNION ALL SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING (NOT ((+ (SUM(vt2.c0))))) UNION ALL SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING (((+ (SUM(vt2.c0)))) ISNULL);
SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING (+ (SUM(vt2.c0))) UNION ALL SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING (NOT ((+ (SUM(vt2.c0))))) UNION ALL SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING (((+ (SUM(vt2.c0)))) ISNULL);
SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT ALL MAX(TIME(((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c0)), vt2.c0 COLLATE BINARY, CAST(rt0.c1 AS REAL))) FROM rt0, vt1, vt2;
SELECT rt0.c1, vt2.c0, rt0.c0, rt0.c2 FROM vt1, vt2, rt0;
SELECT ALL rt0.c1, vt2.c0, rt0.c0, rt0.c2 FROM vt1, vt2, rt0 WHERE (rt0.c0) UNION ALL SELECT rt0.c1, vt2.c0, rt0.c0, rt0.c2 FROM vt1, vt2, rt0 WHERE ((NOT (rt0.c0))) UNION ALL SELECT rt0.c1, vt2.c0, rt0.c0, rt0.c2 FROM vt1, vt2, rt0 WHERE (((rt0.c0) ISNULL));
SELECT rt0.c1, vt2.c0, rt0.c0, rt0.c2 FROM vt1, vt2, rt0;
SELECT DISTINCT * FROM rt0, vt2;
SELECT DISTINCT * FROM rt0, vt2 WHERE (((((((rt0.c2)>=(rt0.c2)))OR(TYPEOF(rt0.c1))))OR((((rt0.c2))>=((vt2.c0)))))) UNION SELECT DISTINCT * FROM rt0, vt2 WHERE ((NOT (((((((rt0.c2)>=(rt0.c2)))OR(TYPEOF(rt0.c1))))OR((((rt0.c2))>=((vt2.c0)))))))) UNION SELECT DISTINCT * FROM rt0, vt2 WHERE (((((((((rt0.c2)>=(rt0.c2)))OR(TYPEOF(rt0.c1))))OR((((rt0.c2))>=((vt2.c0)))))) ISNULL));
SELECT DISTINCT * FROM rt0, vt2;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 WHERE (UPPER(((rt0.c1) IS TRUE))) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM rt0 WHERE ((NOT (UPPER(((rt0.c1) IS TRUE))))) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM rt0 WHERE (((UPPER(((rt0.c1) IS TRUE))) ISNULL)) GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING AVG(COUNT(AVG(vt2.c0))) UNION ALL SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING (NOT (AVG(COUNT(AVG(vt2.c0))))) UNION ALL SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING ((AVG(COUNT(AVG(vt2.c0)))) ISNULL);
SELECT * FROM vt2, vt1;
SELECT ALL * FROM vt2 NOT INDEXED, vt1 WHERE (vt2.c0) UNION ALL SELECT ALL * FROM vt2, vt1 WHERE ((NOT (vt2.c0))) UNION ALL SELECT ALL * FROM vt2, vt1 WHERE (((vt2.c0) ISNULL));
SELECT * FROM vt2, vt1;
SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0 WHERE ('-277981785') UNION SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT ('-277981785'))) UNION SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0 WHERE ((('-277981785') ISNULL));
SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0;
SELECT rt0.c0, rt0.c2, rt0.c1, vt1.c0 FROM rt0, vt1 GROUP BY rt0.c0, rt0.c2, rt0.c1, vt1.c0;
SELECT rt0.c0, rt0.c2, rt0.c1, vt1.c0 FROM rt0, vt1 WHERE ((((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2)) IN ())) GROUP BY rt0.c0, rt0.c2, rt0.c1, vt1.c0 UNION SELECT ALL rt0.c0, rt0.c2, rt0.c1, vt1.c0 FROM rt0, vt1 WHERE ((NOT ((((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2)) IN ())))) GROUP BY rt0.c0, rt0.c2, rt0.c1, vt1.c0 UNION SELECT ALL rt0.c0, rt0.c2, rt0.c1, vt1.c0 FROM rt0, vt1 WHERE ((((((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2)) IN ())) ISNULL)) GROUP BY rt0.c0, rt0.c2, rt0.c1, vt1.c0;
SELECT rt0.c0, rt0.c2, rt0.c1, vt1.c0 FROM rt0, vt1 GROUP BY rt0.c0, rt0.c2, rt0.c1, vt1.c0;
SELECT ALL vt2.c0, rt0.c1, rt0.c0, rt0.c2, vt1.c0 FROM vt1 CROSS JOIN rt0 ON PRINTF(((rt0.c0) BETWEEN ('') AND (rt0.c1)), (- (rt0.c0)), (rt0.c1 IN ())) LEFT OUTER JOIN vt2 ON ((NULL) NOTNULL) GROUP BY vt2.c0, rt0.c1, rt0.c0, rt0.c2, vt1.c0;
SELECT vt2.c0, rt0.c1, rt0.c0, rt0.c2, vt1.c0 FROM vt1 CROSS JOIN rt0 ON PRINTF(((rt0.c0) BETWEEN ('') AND (rt0.c1)), (- (rt0.c0)), (rt0.c1 IN ())) LEFT OUTER JOIN vt2 ON ((NULL) NOTNULL) GROUP BY vt2.c0, rt0.c1, rt0.c0, rt0.c2, vt1.c0 HAVING TOTAL(MIN(COUNT(rt0.c2))) COLLATE RTRIM UNION ALL SELECT vt2.c0, rt0.c1, rt0.c0, rt0.c2, vt1.c0 FROM vt1 CROSS JOIN rt0 ON PRINTF(((rt0.c0) BETWEEN ('') AND (rt0.c1)), (- (rt0.c0)), (rt0.c1 IN ())) LEFT OUTER JOIN vt2 ON ((NULL) NOTNULL) GROUP BY vt2.c0, rt0.c1, rt0.c0, rt0.c2, vt1.c0 HAVING (NOT (TOTAL(MIN(COUNT(rt0.c2))) COLLATE RTRIM)) UNION ALL SELECT ALL vt2.c0, rt0.c1, rt0.c0, rt0.c2, vt1.c0 FROM vt1 CROSS JOIN rt0 ON PRINTF(((rt0.c0) BETWEEN ('') AND (rt0.c1)), (- (rt0.c0)), (rt0.c1 IN ())) LEFT OUTER JOIN vt2 ON ((NULL) NOTNULL) GROUP BY vt2.c0, rt0.c1, rt0.c0, rt0.c2, vt1.c0 HAVING ((TOTAL(MIN(COUNT(rt0.c2))) COLLATE RTRIM) ISNULL);
SELECT ALL rt0.c2, rt0.c0, vt1.c0, rt0.c1 FROM vt1, rt0;
SELECT ALL rt0.c2, rt0.c0, vt1.c0, rt0.c1 FROM vt1, rt0 WHERE (((((vt1.c0 COLLATE RTRIM)OR(CASE rt0.c1  WHEN '-2005938459' THEN rt0.c0 ELSE x'' END)))OR(CASE WHEN rt0.c1 THEN rt0.c0 END))) UNION ALL SELECT rt0.c2, rt0.c0, vt1.c0, rt0.c1 FROM vt1, rt0 WHERE ((NOT (((((vt1.c0 COLLATE RTRIM)OR(CASE rt0.c1  WHEN '-2005938459' THEN rt0.c0 ELSE x'' END)))OR(CASE WHEN rt0.c1 THEN rt0.c0 END))))) UNION ALL SELECT ALL rt0.c2, rt0.c0, vt1.c0, rt0.c1 FROM vt1, rt0 WHERE (((((((vt1.c0 COLLATE RTRIM)OR(CASE rt0.c1  WHEN '-2005938459' THEN rt0.c0 ELSE x'' END)))OR(CASE WHEN rt0.c1 THEN rt0.c0 END))) ISNULL));
SELECT ALL rt0.c2, rt0.c0, vt1.c0, rt0.c1 FROM vt1, rt0;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (((((-616295658)OR((vt1.c0 IN (vt1.c0, vt1.c0, vt1.c0)))))OR(CASE x''  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (((((-616295658)OR((vt1.c0 IN (vt1.c0, vt1.c0, vt1.c0)))))OR(CASE x''  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))))) UNION SELECT DISTINCT * FROM vt1 WHERE (((((((-616295658)OR((vt1.c0 IN (vt1.c0, vt1.c0, vt1.c0)))))OR(CASE x''  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE (vt1.c0) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT (vt1.c0))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE (((vt1.c0) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 CROSS JOIN vt2 ON ((((vt1.c0) NOT BETWEEN (vt2.c0) AND (vt2.c0)))>=(((NULL) ISNULL))) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 CROSS JOIN vt2 ON ((((vt1.c0) NOT BETWEEN (vt2.c0) AND (vt2.c0)))>=(((NULL) ISNULL))) GROUP BY vt1.c0 HAVING MAX((+ (vt2.c0))) UNION ALL SELECT ALL vt1.c0 FROM vt1 CROSS JOIN vt2 ON ((((vt1.c0) NOT BETWEEN (vt2.c0) AND (vt2.c0)))>=(((NULL) ISNULL))) GROUP BY vt1.c0 HAVING (NOT (MAX((+ (vt2.c0))))) UNION ALL SELECT vt1.c0 FROM vt1 CROSS JOIN vt2 ON ((((vt1.c0) NOT BETWEEN (vt2.c0) AND (vt2.c0)))>=(((NULL) ISNULL))) GROUP BY vt1.c0 HAVING ((MAX((+ (vt2.c0)))) ISNULL);
SELECT ALL vt1.c0 FROM vt1 CROSS JOIN vt2 ON ((((vt1.c0) NOT BETWEEN (vt2.c0) AND (vt2.c0)))>=(((NULL) ISNULL))) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 CROSS JOIN vt2 ON ((((vt1.c0) NOT BETWEEN (vt2.c0) AND (vt2.c0)))>=(((NULL) ISNULL))) GROUP BY vt1.c0 HAVING MAX((+ (vt2.c0))) UNION ALL SELECT ALL vt1.c0 FROM vt1 CROSS JOIN vt2 ON ((((vt1.c0) NOT BETWEEN (vt2.c0) AND (vt2.c0)))>=(((NULL) ISNULL))) GROUP BY vt1.c0 HAVING (NOT (MAX((+ (vt2.c0))))) UNION ALL SELECT vt1.c0 FROM vt1 CROSS JOIN vt2 ON ((((vt1.c0) NOT BETWEEN (vt2.c0) AND (vt2.c0)))>=(((NULL) ISNULL))) GROUP BY vt1.c0 HAVING ((MAX((+ (vt2.c0)))) ISNULL);
SELECT ALL vt1.c0 FROM vt1 CROSS JOIN vt2 ON ((((vt1.c0) NOT BETWEEN (vt2.c0) AND (vt2.c0)))>=(((NULL) ISNULL))) GROUP BY vt1.c0;
SELECT ALL * FROM vt2;
SELECT ALL * FROM vt2 WHERE (CAST(((vt2.c0)>=(vt2.c0)) AS INTEGER)) UNION ALL SELECT ALL * FROM vt2 WHERE ((NOT (CAST(((vt2.c0)>=(vt2.c0)) AS INTEGER)))) UNION ALL SELECT * FROM vt2 WHERE (((CAST(((vt2.c0)>=(vt2.c0)) AS INTEGER)) ISNULL));
SELECT ALL * FROM vt2;
SELECT DISTINCT vt2.c0 FROM vt2;
SELECT DISTINCT vt2.c0 FROM vt2 WHERE (((((((vt2.c0)OR(vt2.c0)))OR(vt2.c0))) NOT BETWEEN ((((vt2.c0)) BETWEEN ((vt2.c0)) AND ((vt2.c0)))) AND (((vt2.c0) BETWEEN (vt2.c0) AND (0.7069409335759097))))) UNION SELECT DISTINCT vt2.c0 FROM vt2 WHERE ((NOT (((((((vt2.c0)OR(vt2.c0)))OR(vt2.c0))) NOT BETWEEN ((((vt2.c0)) BETWEEN ((vt2.c0)) AND ((vt2.c0)))) AND (((vt2.c0) BETWEEN (vt2.c0) AND (0.7069409335759097))))))) UNION SELECT DISTINCT vt2.c0 FROM vt2 WHERE (((((((((vt2.c0)OR(vt2.c0)))OR(vt2.c0))) NOT BETWEEN ((((vt2.c0)) BETWEEN ((vt2.c0)) AND ((vt2.c0)))) AND (((vt2.c0) BETWEEN (vt2.c0) AND (0.7069409335759097))))) ISNULL));
SELECT DISTINCT vt2.c0 FROM vt2;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE (vt1.c0) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (vt1.c0))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE (((vt1.c0) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0, rt0.c0 FROM rt0, vt1 GROUP BY vt1.c0, rt0.c0;
SELECT vt1.c0, rt0.c0 FROM rt0, vt1 GROUP BY vt1.c0, rt0.c0 HAVING CAST(1416854288 AS NUMERIC) UNION ALL SELECT ALL vt1.c0, rt0.c0 FROM rt0, vt1 GROUP BY vt1.c0, rt0.c0 HAVING (NOT (CAST(1416854288 AS NUMERIC))) UNION ALL SELECT ALL vt1.c0, rt0.c0 FROM rt0, vt1 GROUP BY vt1.c0, rt0.c0 HAVING ((CAST(1416854288 AS NUMERIC)) ISNULL);
SELECT vt1.c0, rt0.c0 FROM rt0, vt1 GROUP BY vt1.c0, rt0.c0;
SELECT vt1.c0, rt0.c0 FROM rt0, vt1 GROUP BY vt1.c0, rt0.c0 HAVING CAST(1416854288 AS NUMERIC) UNION ALL SELECT ALL vt1.c0, rt0.c0 FROM rt0, vt1 GROUP BY vt1.c0, rt0.c0 HAVING (NOT (CAST(1416854288 AS NUMERIC))) UNION ALL SELECT ALL vt1.c0, rt0.c0 FROM rt0, vt1 GROUP BY vt1.c0, rt0.c0 HAVING ((CAST(1416854288 AS NUMERIC)) ISNULL);
SELECT vt1.c0, rt0.c0 FROM rt0, vt1 GROUP BY vt1.c0, rt0.c0;
SELECT * FROM vt2, rt0 CROSS JOIN vt1 ON CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 END COLLATE RTRIM;
SELECT ALL * FROM vt2, rt0 CROSS JOIN vt1 ON CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 END COLLATE RTRIM WHERE (CAST(CAST(vt2.c0 AS TEXT) AS REAL)) UNION ALL SELECT ALL * FROM vt2, rt0 CROSS JOIN vt1 ON CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 END COLLATE RTRIM WHERE ((NOT (CAST(CAST(vt2.c0 AS TEXT) AS REAL)))) UNION ALL SELECT * FROM vt2, rt0 CROSS JOIN vt1 ON CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 END COLLATE RTRIM WHERE (((CAST(CAST(vt2.c0 AS TEXT) AS REAL)) ISNULL));
SELECT * FROM vt2, rt0 CROSS JOIN vt1 ON CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 END COLLATE RTRIM;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE (vt1.c0) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT (vt1.c0))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((vt1.c0) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((((((((((((((rt0.c1)AND(rt0.c1)))AND(rt0.c1)))AND(rt0.c0)))AND(rt0.c1)))OR(rt0.c2)))OR(rt0.c2)) IN ())) GROUP BY rt0.c1, rt0.c2, rt0.c0 UNION SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT ((((((((((((((rt0.c1)AND(rt0.c1)))AND(rt0.c1)))AND(rt0.c0)))AND(rt0.c1)))OR(rt0.c2)))OR(rt0.c2)) IN ())))) GROUP BY rt0.c1, rt0.c2, rt0.c0 UNION SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((((((((((((((((rt0.c1)AND(rt0.c1)))AND(rt0.c1)))AND(rt0.c0)))AND(rt0.c1)))OR(rt0.c2)))OR(rt0.c2)) IN ())) ISNULL)) GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c0, rt0.c2, rt0.c1, vt2.c0 FROM vt2 FULL OUTER JOIN rt0 ON (((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((vt2.c0)))) NOT BETWEEN (0.5444945001017575) AND (MAX(rt0.c1, vt2.c0, rt0.c2, x'26fb'))) GROUP BY rt0.c0, rt0.c2, rt0.c1, vt2.c0;
SELECT ALL rt0.c0, rt0.c2, rt0.c1, vt2.c0 FROM vt2 FULL OUTER JOIN rt0 ON (((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((vt2.c0)))) NOT BETWEEN (0.5444945001017575) AND (MAX(rt0.c1, vt2.c0, rt0.c2, x'26fb'))) GROUP BY rt0.c0, rt0.c2, rt0.c1, vt2.c0 HAVING vt2.c0 UNION ALL SELECT rt0.c0, rt0.c2, rt0.c1, vt2.c0 FROM vt2 FULL OUTER JOIN rt0 ON (((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((vt2.c0)))) NOT BETWEEN (0.5444945001017575) AND (MAX(rt0.c1, vt2.c0, rt0.c2, x'26fb'))) GROUP BY rt0.c0, rt0.c2, rt0.c1, vt2.c0 HAVING (NOT (vt2.c0)) UNION ALL SELECT ALL rt0.c0, rt0.c2, rt0.c1, vt2.c0 FROM vt2 FULL OUTER JOIN rt0 ON (((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((vt2.c0)))) NOT BETWEEN (0.5444945001017575) AND (MAX(rt0.c1, vt2.c0, rt0.c2, x'26fb'))) GROUP BY rt0.c0, rt0.c2, rt0.c1, vt2.c0 HAVING ((vt2.c0) ISNULL);
SELECT rt0.c0, rt0.c2, rt0.c1, vt2.c0 FROM vt2 FULL OUTER JOIN rt0 ON (((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((vt2.c0)))) NOT BETWEEN (0.5444945001017575) AND (MAX(rt0.c1, vt2.c0, rt0.c2, x'26fb'))) GROUP BY rt0.c0, rt0.c2, rt0.c1, vt2.c0;
SELECT ALL rt0.c0, rt0.c2, rt0.c1, vt2.c0 FROM vt2 FULL OUTER JOIN rt0 ON (((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((vt2.c0)))) NOT BETWEEN (0.5444945001017575) AND (MAX(rt0.c1, vt2.c0, rt0.c2, x'26fb'))) GROUP BY rt0.c0, rt0.c2, rt0.c1, vt2.c0 HAVING vt2.c0 UNION ALL SELECT rt0.c0, rt0.c2, rt0.c1, vt2.c0 FROM vt2 FULL OUTER JOIN rt0 ON (((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((vt2.c0)))) NOT BETWEEN (0.5444945001017575) AND (MAX(rt0.c1, vt2.c0, rt0.c2, x'26fb'))) GROUP BY rt0.c0, rt0.c2, rt0.c1, vt2.c0 HAVING (NOT (vt2.c0)) UNION ALL SELECT ALL rt0.c0, rt0.c2, rt0.c1, vt2.c0 FROM vt2 FULL OUTER JOIN rt0 ON (((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((vt2.c0)))) NOT BETWEEN (0.5444945001017575) AND (MAX(rt0.c1, vt2.c0, rt0.c2, x'26fb'))) GROUP BY rt0.c0, rt0.c2, rt0.c1, vt2.c0 HAVING ((vt2.c0) ISNULL);
SELECT rt0.c0, rt0.c2, rt0.c1, vt2.c0 FROM vt2 FULL OUTER JOIN rt0 ON (((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((vt2.c0)))) NOT BETWEEN (0.5444945001017575) AND (MAX(rt0.c1, vt2.c0, rt0.c2, x'26fb'))) GROUP BY rt0.c0, rt0.c2, rt0.c1, vt2.c0;
SELECT ALL * FROM vt1;
SELECT ALL * FROM vt1 WHERE (((CAST(vt1.c0 AS BLOB))<(HEX(DISTINCT vt1.c0)))) UNION ALL SELECT * FROM vt1 WHERE ((NOT (((CAST(vt1.c0 AS BLOB))<(HEX(DISTINCT vt1.c0)))))) UNION ALL SELECT ALL * FROM vt1 WHERE (((((CAST(vt1.c0 AS BLOB))<(HEX(DISTINCT vt1.c0)))) ISNULL));
SELECT ALL * FROM vt1;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE ((((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))=((vt1.c0 COLLATE RTRIM)))) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT ((((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))=((vt1.c0 COLLATE RTRIM)))))) UNION SELECT DISTINCT * FROM vt1 WHERE ((((((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))==((vt1.c0 COLLATE RTRIM)))) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT vt1.c0, vt2.c0 FROM vt2, vt1 GROUP BY vt1.c0, vt2.c0;
SELECT ALL vt1.c0, vt2.c0 FROM vt2, vt1 WHERE (CAST((vt2.c0 IN ()) AS REAL)) GROUP BY vt1.c0, vt2.c0 UNION SELECT vt1.c0, vt2.c0 FROM vt2, vt1 WHERE ((NOT (CAST((vt2.c0 IN ()) AS REAL)))) GROUP BY vt1.c0, vt2.c0 UNION SELECT vt1.c0, vt2.c0 FROM vt2, vt1 WHERE (((CAST((vt2.c0 IN ()) AS REAL)) ISNULL)) GROUP BY vt1.c0, vt2.c0;
SELECT vt1.c0, vt2.c0 FROM vt2, vt1 GROUP BY vt1.c0, vt2.c0;
SELECT vt1.c0, rt0.c2 FROM rt0, vt1 GROUP BY vt1.c0, rt0.c2;
SELECT ALL vt1.c0, rt0.c2 FROM rt0, vt1 GROUP BY vt1.c0, rt0.c2 HAVING ((SUM(rt0.c1)) IS TRUE) UNION ALL SELECT ALL vt1.c0, rt0.c2 FROM rt0, vt1 GROUP BY vt1.c0, rt0.c2 HAVING (NOT (((SUM(rt0.c1)) IS TRUE))) UNION ALL SELECT vt1.c0, rt0.c2 FROM rt0, vt1 GROUP BY vt1.c0, rt0.c2 HAVING ((((SUM(rt0.c1)) IS TRUE)) ISNULL);
SELECT vt1.c0, rt0.c2 FROM rt0, vt1 GROUP BY vt1.c0, rt0.c2;
SELECT ALL vt1.c0, rt0.c2 FROM rt0, vt1 GROUP BY vt1.c0, rt0.c2 HAVING ((SUM(rt0.c1)) IS TRUE) UNION ALL SELECT ALL vt1.c0, rt0.c2 FROM rt0, vt1 GROUP BY vt1.c0, rt0.c2 HAVING (NOT (((SUM(rt0.c1)) IS TRUE))) UNION ALL SELECT vt1.c0, rt0.c2 FROM rt0, vt1 GROUP BY vt1.c0, rt0.c2 HAVING ((((SUM(rt0.c1)) IS TRUE)) ISNULL);
SELECT vt1.c0, rt0.c2 FROM rt0, vt1 GROUP BY vt1.c0, rt0.c2;
SELECT SUM(((((vt1.c0 COLLATE BINARY)OR(((0.5593444263409691)<(vt2.c0)))))OR((~ (vt1.c0))))) FROM vt1, vt2 ORDER BY (CASE vt2.c0  WHEN vt2.c0 THEN vt2.c0 WHEN vt2.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt2.c0 ELSE vt2.c0 END IN (COALESCE(DISTINCT vt1.c0, vt1.c0), (x'' IN ()))) ASC;
SELECT ALL * FROM rt0, vt2;
SELECT * FROM rt0, vt2 WHERE (CASE CASE WHEN rt0.c2 THEN vt2.c0 WHEN rt0.c1 THEN vt2.c0 WHEN '-351548771' THEN rt0.c0 END  WHEN CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 WHEN 0.7945358185674113 THEN rt0.c1 WHEN rt0.c1 THEN 0.7287777919286673 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 ELSE vt2.c0 END THEN ((x'')<<(rt0.c1)) WHEN UNLIKELY(DISTINCT rt0.c0) THEN ((vt2.c0)+('')) WHEN CHANGES() THEN ((rt0.c0) ISNULL) END) UNION ALL SELECT * FROM rt0, vt2 WHERE ((NOT (CASE CASE WHEN rt0.c2 THEN vt2.c0 WHEN rt0.c1 THEN vt2.c0 WHEN '-351548771' THEN rt0.c0 END  WHEN CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 WHEN 0.7945358185674113 THEN rt0.c1 WHEN rt0.c1 THEN 0.7287777919286673 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 ELSE vt2.c0 END THEN ((x'')<<(rt0.c1)) WHEN UNLIKELY(DISTINCT rt0.c0) THEN ((vt2.c0)+('')) WHEN CHANGES() THEN ((rt0.c0) ISNULL) END))) UNION ALL SELECT * FROM rt0, vt2 WHERE (((CASE CASE WHEN rt0.c2 THEN vt2.c0 WHEN rt0.c1 THEN vt2.c0 WHEN '-351548771' THEN rt0.c0 END  WHEN CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 WHEN 0.7945358185674113 THEN rt0.c1 WHEN rt0.c1 THEN 0.7287777919286673 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 ELSE vt2.c0 END THEN ((x'')<<(rt0.c1)) WHEN UNLIKELY(DISTINCT rt0.c0) THEN ((vt2.c0)+('')) WHEN CHANGES() THEN ((rt0.c0) ISNULL) END) ISNULL));
SELECT ALL * FROM rt0, vt2;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((((rt0.c2)IS NOT(rt0.c2)))>=(CASE WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 END))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((((rt0.c2)IS NOT(rt0.c2)))>=(CASE WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 END))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((((rt0.c2)IS NOT(rt0.c2)))>=(CASE WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 END))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL vt2.c0 FROM vt1, vt2, rt0 GROUP BY vt2.c0;
SELECT vt2.c0 FROM vt1, vt2, rt0 WHERE (CASE WHEN HEX(vt2.c0) THEN ((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c1)) ELSE ((((-79037809)AND(rt0.c2)))AND(vt2.c0)) END) GROUP BY vt2.c0 UNION SELECT ALL vt2.c0 FROM vt1, vt2, rt0 WHERE ((NOT (CASE WHEN HEX(vt2.c0) THEN ((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c1)) ELSE ((((-79037809)AND(rt0.c2)))AND(vt2.c0)) END))) GROUP BY vt2.c0 UNION SELECT ALL vt2.c0 FROM vt1, vt2, rt0 WHERE (((CASE WHEN HEX(vt2.c0) THEN ((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c1)) ELSE ((((-79037809)AND(rt0.c2)))AND(vt2.c0)) END) ISNULL)) GROUP BY vt2.c0;
SELECT ALL vt2.c0 FROM vt1, vt2, rt0 GROUP BY vt2.c0;
SELECT ALL vt1.c0, vt2.c0 FROM vt2, vt1 GROUP BY vt1.c0, vt2.c0;
SELECT ALL vt1.c0, vt2.c0 FROM vt2 NOT INDEXED, vt1 GROUP BY vt1.c0, vt2.c0 HAVING CASE ((vt1.c0) NOT NULL)  WHEN CAST(vt1.c0 AS BLOB) THEN COUNT(*) ELSE TOTAL(vt2.c0) END UNION ALL SELECT vt1.c0, vt2.c0 FROM vt2, vt1 GROUP BY vt1.c0, vt2.c0 HAVING (NOT (CASE ((vt1.c0) NOT NULL)  WHEN CAST(vt1.c0 AS BLOB) THEN COUNT(*) ELSE TOTAL(vt2.c0) END)) UNION ALL SELECT vt1.c0, vt2.c0 FROM vt2, vt1 GROUP BY vt1.c0, vt2.c0 HAVING ((CASE ((vt1.c0) NOT NULL)  WHEN CAST(vt1.c0 AS BLOB) THEN COUNT(*) ELSE TOTAL(vt2.c0) END) ISNULL);
SELECT ALL vt1.c0, vt2.c0 FROM vt2, vt1 GROUP BY vt1.c0, vt2.c0;
SELECT ALL vt1.c0, vt2.c0 FROM vt2 NOT INDEXED, vt1 GROUP BY vt1.c0, vt2.c0 HAVING CASE ((vt1.c0) NOT NULL)  WHEN CAST(vt1.c0 AS BLOB) THEN COUNT(*) ELSE TOTAL(vt2.c0) END UNION ALL SELECT vt1.c0, vt2.c0 FROM vt2, vt1 GROUP BY vt1.c0, vt2.c0 HAVING (NOT (CASE ((vt1.c0) NOT NULL)  WHEN CAST(vt1.c0 AS BLOB) THEN COUNT(*) ELSE TOTAL(vt2.c0) END)) UNION ALL SELECT vt1.c0, vt2.c0 FROM vt2, vt1 GROUP BY vt1.c0, vt2.c0 HAVING ((CASE ((vt1.c0) NOT NULL)  WHEN CAST(vt1.c0 AS BLOB) THEN COUNT(*) ELSE TOTAL(vt2.c0) END) ISNULL);
SELECT ALL vt1.c0, vt2.c0 FROM vt2, vt1 GROUP BY vt1.c0, vt2.c0;
SELECT ALL TOTAL((((((((((('')AND('_䚕3碼?洆!')))OR('|L%cOs8q')))OR(vt1.c0)))AND(rt0.c0))) NOT BETWEEN (CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END) AND ((((vt1.c0))>=((rt0.c0)))))) FROM vt1, vt2, rt0;
SELECT * FROM vt2;
SELECT ALL * FROM vt2 WHERE ((NOT (CAST(vt2.c0 AS TEXT)))) UNION ALL SELECT ALL * FROM vt2 WHERE ((NOT ((NOT (CAST(vt2.c0 AS TEXT)))))) UNION ALL SELECT * FROM vt2 WHERE ((((NOT (CAST(vt2.c0 AS TEXT)))) ISNULL));
SELECT * FROM vt2;
SELECT DISTINCT * FROM rt0, vt1;
SELECT DISTINCT * FROM rt0, vt1 WHERE (((((((((ABS(vt1.c0))OR(NULL)))AND((((rt0.c1))<=((rt0.c2))))))OR(((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))))AND(((rt0.c2)||(vt1.c0))))) UNION SELECT DISTINCT * FROM rt0, vt1 WHERE ((NOT (((((((((ABS(vt1.c0))OR(NULL)))AND((((rt0.c1))<=((rt0.c2))))))OR(((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))))AND(((rt0.c2)||(vt1.c0))))))) UNION SELECT DISTINCT * FROM rt0, vt1 WHERE (((((((((((ABS(vt1.c0))OR(NULL)))AND((((rt0.c1))<=((rt0.c2))))))OR(((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))))AND(((rt0.c2)||(vt1.c0))))) ISNULL));
SELECT DISTINCT * FROM rt0, vt1;
SELECT rt0.c1 FROM vt2, rt0, vt1 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM vt2, rt0, vt1 WHERE ('G\#|.3CD') GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM vt2, rt0, vt1 WHERE ((NOT ('G\#|.3CD'))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM vt2, rt0, vt1 WHERE ((('G\#|.3CD') ISNULL)) GROUP BY rt0.c1;
SELECT rt0.c1 FROM vt2, rt0, vt1 GROUP BY rt0.c1;
SELECT ALL rt0.c2 FROM vt1, vt2 INNER JOIN rt0 ON (((vt2.c0 IN (rt0.c2, rt0.c1))) IS TRUE) GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM vt1, vt2 INNER JOIN rt0 ON (((vt2.c0 IN (rt0.c2, rt0.c1))) IS TRUE) GROUP BY rt0.c2 HAVING SUM(rt0.c1) COLLATE NOCASE UNION ALL SELECT rt0.c2 FROM vt1, vt2 INNER JOIN rt0 ON (((vt2.c0 IN (rt0.c2, rt0.c1))) IS TRUE) GROUP BY rt0.c2 HAVING (NOT (SUM(rt0.c1) COLLATE NOCASE)) UNION ALL SELECT rt0.c2 FROM vt1, vt2 INNER JOIN rt0 ON (((vt2.c0 IN (rt0.c2, rt0.c1))) IS TRUE) GROUP BY rt0.c2 HAVING ((SUM(rt0.c1) COLLATE NOCASE) ISNULL);
SELECT ALL rt0.c2 FROM vt1, vt2 INNER JOIN rt0 ON (((vt2.c0 IN (rt0.c2, rt0.c1))) IS TRUE) GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM vt1, vt2 INNER JOIN rt0 ON (((vt2.c0 IN (rt0.c2, rt0.c1))) IS TRUE) GROUP BY rt0.c2 HAVING SUM(rt0.c1) COLLATE NOCASE UNION ALL SELECT rt0.c2 FROM vt1, vt2 INNER JOIN rt0 ON (((vt2.c0 IN (rt0.c2, rt0.c1))) IS TRUE) GROUP BY rt0.c2 HAVING (NOT (SUM(rt0.c1) COLLATE NOCASE)) UNION ALL SELECT rt0.c2 FROM vt1, vt2 INNER JOIN rt0 ON (((vt2.c0 IN (rt0.c2, rt0.c1))) IS TRUE) GROUP BY rt0.c2 HAVING ((SUM(rt0.c1) COLLATE NOCASE) ISNULL);
SELECT ALL rt0.c2 FROM vt1, vt2 INNER JOIN rt0 ON (((vt2.c0 IN (rt0.c2, rt0.c1))) IS TRUE) GROUP BY rt0.c2;
SELECT rt0.c2, rt0.c1, rt0.c0, vt2.c0 FROM vt1, rt0, vt2;
SELECT rt0.c2, rt0.c1, rt0.c0, vt2.c0 FROM vt1, rt0, vt2 WHERE (((((rt0.c0)=(vt2.c0)))<=((((vt2.c0, rt0.c2, vt2.c0))<=((rt0.c1, rt0.c1, rt0.c0)))))) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0, vt2.c0 FROM vt1, rt0, vt2 WHERE ((NOT (((((rt0.c0)==(vt2.c0)))<=((((vt2.c0, rt0.c2, vt2.c0))<=((rt0.c1, rt0.c1, rt0.c0)))))))) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0, vt2.c0 FROM vt1, rt0, vt2 WHERE (((((((rt0.c0)=(vt2.c0)))<=((((vt2.c0, rt0.c2, vt2.c0))<=((rt0.c1, rt0.c1, rt0.c0)))))) ISNULL));
SELECT rt0.c2, rt0.c1, rt0.c0, vt2.c0 FROM vt1, rt0, vt2;
SELECT DISTINCT * FROM vt2 RIGHT OUTER JOIN rt0 ON rtreenode((+ (rt0.c2)), (rt0.c2 IN (rt0.c2, rt0.c2))) FULL OUTER JOIN vt1 ON ((CASE WHEN vt2.c0 THEN rt0.c2 ELSE vt1.c0 END) IS TRUE);
SELECT DISTINCT * FROM vt2 RIGHT OUTER JOIN rt0 ON rtreenode((+ (rt0.c2)), (rt0.c2 IN (rt0.c2, rt0.c2))) FULL OUTER JOIN vt1 ON ((CASE WHEN vt2.c0 THEN rt0.c2 ELSE vt1.c0 END) IS TRUE) WHERE (rtreenode((NOT (rt0.c1)), (((rt0.c1, rt0.c2, rt0.c1))>=((rt0.c0, rt0.c1, vt2.c0))))) UNION SELECT DISTINCT * FROM vt2 RIGHT OUTER JOIN rt0 ON rtreenode((+ (rt0.c2)), (rt0.c2 IN (rt0.c2, rt0.c2))) FULL OUTER JOIN vt1 ON ((CASE WHEN vt2.c0 THEN rt0.c2 ELSE vt1.c0 END) IS TRUE) WHERE ((NOT (rtreenode((NOT (rt0.c1)), (((rt0.c1, rt0.c2, rt0.c1))>=((rt0.c0, rt0.c1, vt2.c0))))))) UNION SELECT DISTINCT * FROM vt2 RIGHT OUTER JOIN rt0 ON rtreenode((+ (rt0.c2)), (rt0.c2 IN (rt0.c2, rt0.c2))) FULL OUTER JOIN vt1 ON ((CASE WHEN vt2.c0 THEN rt0.c2 ELSE vt1.c0 END) IS TRUE) WHERE (((rtreenode((NOT (rt0.c1)), (((rt0.c1, rt0.c2, rt0.c1))>=((rt0.c0, rt0.c1, vt2.c0))))) ISNULL));
SELECT DISTINCT * FROM vt2 RIGHT OUTER JOIN rt0 ON rtreenode((+ (rt0.c2)), (rt0.c2 IN (rt0.c2, rt0.c2))) FULL OUTER JOIN vt1 ON ((CASE WHEN vt2.c0 THEN rt0.c2 ELSE vt1.c0 END) IS TRUE);
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE (0x3a4d7c1d) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT (0X3a4d7c1d))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE (((0X3a4d7c1d) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0, rt0.c2, vt2.c0 FROM vt1, rt0, vt2 GROUP BY vt1.c0, rt0.c2, vt2.c0;
SELECT ALL vt1.c0, rt0.c2, vt2.c0 FROM vt1, rt0, vt2 GROUP BY vt1.c0, rt0.c2, vt2.c0 HAVING NULL UNION ALL SELECT vt1.c0, rt0.c2, vt2.c0 FROM vt1, rt0, vt2 GROUP BY vt1.c0, rt0.c2, vt2.c0 HAVING (NOT (NULL)) UNION ALL SELECT ALL vt1.c0, rt0.c2, vt2.c0 FROM vt1, rt0, vt2 NOT INDEXED GROUP BY vt1.c0, rt0.c2, vt2.c0 HAVING ((NULL) ISNULL);
SELECT vt1.c0, rt0.c2, vt2.c0 FROM vt1, rt0, vt2 GROUP BY vt1.c0, rt0.c2, vt2.c0;
SELECT ALL vt1.c0, rt0.c2, vt2.c0 FROM vt1, rt0, vt2 GROUP BY vt1.c0, rt0.c2, vt2.c0 HAVING NULL UNION ALL SELECT vt1.c0, rt0.c2, vt2.c0 FROM vt1, rt0, vt2 GROUP BY vt1.c0, rt0.c2, vt2.c0 HAVING (NOT (NULL)) UNION ALL SELECT ALL vt1.c0, rt0.c2, vt2.c0 FROM vt1, rt0, vt2 NOT INDEXED GROUP BY vt1.c0, rt0.c2, vt2.c0 HAVING ((NULL) ISNULL);
SELECT vt1.c0, rt0.c2, vt2.c0 FROM vt1, rt0, vt2 GROUP BY vt1.c0, rt0.c2, vt2.c0;
SELECT ALL * FROM vt2 RIGHT OUTER JOIN vt1 ON '0.28571241818292337' RIGHT OUTER JOIN rt0 ON 9.73723326E8;
SELECT * FROM vt2 RIGHT OUTER JOIN vt1 ON '0.28571241818292337' RIGHT OUTER JOIN rt0 ON 9.73723326E8 WHERE (x'') UNION ALL SELECT * FROM vt2 RIGHT OUTER JOIN vt1 ON '0.28571241818292337' RIGHT OUTER JOIN rt0 ON 9.73723326E8 WHERE ((NOT (x''))) UNION ALL SELECT * FROM vt2 RIGHT OUTER JOIN vt1 ON '0.28571241818292337' RIGHT OUTER JOIN rt0 ON 9.73723326E8 WHERE (((x'') ISNULL));
SELECT ALL * FROM vt2 RIGHT OUTER JOIN vt1 ON '0.28571241818292337' RIGHT OUTER JOIN rt0 ON 9.73723326E8;
SELECT DISTINCT vt1.c0 FROM vt1, vt2;
SELECT DISTINCT vt1.c0 FROM vt1, vt2 WHERE (((((((vt2.c0)OR(vt2.c0)))AND(vt1.c0)))+(CAST(vt2.c0 AS TEXT)))) UNION SELECT DISTINCT vt1.c0 FROM vt1, vt2 WHERE ((NOT (((((((vt2.c0)OR(vt2.c0)))AND(vt1.c0)))+(CAST(vt2.c0 AS TEXT)))))) UNION SELECT DISTINCT vt1.c0 FROM vt1, vt2 WHERE (((((((((vt2.c0)OR(vt2.c0)))AND(vt1.c0)))+(CAST(vt2.c0 AS TEXT)))) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1, vt2;
SELECT rt0.c2 FROM vt1 NOT INDEXED, vt2, rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM vt1, vt2, rt0 WHERE (((((((((((rt0.c0) NOTNULL))AND((NOT (vt1.c0)))))AND(((rt0.c0)IS(vt2.c0)))))OR(vt1.c0)))OR((rt0.c2 IN (rt0.c2, rt0.c2))))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM vt1, vt2, rt0 WHERE ((NOT (((((((((((rt0.c0) NOTNULL))AND((NOT (vt1.c0)))))AND(((rt0.c0)IS(vt2.c0)))))OR(vt1.c0)))OR((rt0.c2 IN (rt0.c2, rt0.c2))))))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM vt1, vt2, rt0 WHERE (((((((((((((rt0.c0) NOTNULL))AND((NOT (vt1.c0)))))AND(((rt0.c0)IS(vt2.c0)))))OR(vt1.c0)))OR((rt0.c2 IN (rt0.c2, rt0.c2))))) ISNULL)) GROUP BY rt0.c2;
SELECT rt0.c2 FROM vt1 NOT INDEXED, vt2, rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM vt2, rt0 GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c2 FROM vt2, rt0 GROUP BY rt0.c0, rt0.c2 HAVING GROUP_CONCAT(CAST(vt2.c0 AS TEXT)) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM vt2, rt0 GROUP BY rt0.c0, rt0.c2 HAVING (NOT (GROUP_CONCAT(CAST(vt2.c0 AS TEXT)))) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM vt2, rt0 GROUP BY rt0.c0, rt0.c2 HAVING ((GROUP_CONCAT(CAST(vt2.c0 AS TEXT))) ISNULL);
SELECT ALL rt0.c0, rt0.c2 FROM vt2, rt0 GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c2 FROM vt2, rt0 GROUP BY rt0.c0, rt0.c2 HAVING GROUP_CONCAT(CAST(vt2.c0 AS TEXT)) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM vt2, rt0 GROUP BY rt0.c0, rt0.c2 HAVING (NOT (GROUP_CONCAT(CAST(vt2.c0 AS TEXT)))) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM vt2, rt0 GROUP BY rt0.c0, rt0.c2 HAVING ((GROUP_CONCAT(CAST(vt2.c0 AS TEXT))) ISNULL);
SELECT ALL rt0.c0, rt0.c2 FROM vt2, rt0 GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c1 FROM rt0;
SELECT ALL rt0.c1 FROM rt0 WHERE (IFNULL(DISTINCT ((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2)), (((rt0.c2))==((rt0.c2))))) UNION ALL SELECT rt0.c1 FROM rt0 WHERE ((NOT (IFNULL(DISTINCT ((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2)), (((rt0.c2))=((rt0.c2))))))) UNION ALL SELECT ALL rt0.c1 FROM rt0 WHERE (((IFNULL(DISTINCT ((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2)), (((rt0.c2))=((rt0.c2))))) ISNULL));
SELECT rt0.c1 FROM rt0;
SELECT DISTINCT * FROM vt1 FULL OUTER JOIN vt2 ON rt0.c0 FULL OUTER JOIN rt0 ON (LIKELIHOOD(DISTINCT vt2.c0, 0.6429059711140239) IN ());
SELECT rt0.c2, vt1.c0, rt0.c1, vt2.c0 FROM vt2, vt1, rt0 GROUP BY rt0.c2, vt1.c0, rt0.c1, vt2.c0;
SELECT rt0.c2, vt1.c0, rt0.c1, vt2.c0 FROM vt2, vt1, rt0 WHERE (((rt0.c1)GLOB((rt0.c1 IN ())))) GROUP BY rt0.c2, vt1.c0, rt0.c1, vt2.c0 UNION SELECT rt0.c2, vt1.c0, rt0.c1, vt2.c0 FROM vt2, vt1, rt0 WHERE ((NOT (((rt0.c1)GLOB((rt0.c1 IN ())))))) GROUP BY rt0.c2, vt1.c0, rt0.c1, vt2.c0 UNION SELECT rt0.c2, vt1.c0, rt0.c1, vt2.c0 FROM vt2, vt1, rt0 WHERE (((((rt0.c1)GLOB((rt0.c1 IN ())))) ISNULL)) GROUP BY rt0.c2, vt1.c0, rt0.c1, vt2.c0;
SELECT rt0.c2, vt1.c0, rt0.c1, vt2.c0 FROM vt2, vt1, rt0 GROUP BY rt0.c2, vt1.c0, rt0.c1, vt2.c0;
SELECT ALL vt1.c0, rt0.c0, rt0.c2 FROM vt1, vt2, rt0 GROUP BY vt1.c0, rt0.c0, rt0.c2;
SELECT ALL vt1.c0, rt0.c0, rt0.c2 FROM vt1, vt2 NOT INDEXED, rt0 GROUP BY vt1.c0, rt0.c0, rt0.c2 HAVING CAST(COUNT(*) AS REAL) UNION ALL SELECT ALL vt1.c0, rt0.c0, rt0.c2 FROM vt1, vt2, rt0 GROUP BY vt1.c0, rt0.c0, rt0.c2 HAVING (NOT (CAST(COUNT(*) AS REAL))) UNION ALL SELECT vt1.c0, rt0.c0, rt0.c2 FROM vt1, vt2, rt0 GROUP BY vt1.c0, rt0.c0, rt0.c2 HAVING ((CAST(COUNT(*) AS REAL)) ISNULL);
SELECT ALL vt1.c0, rt0.c0, rt0.c2 FROM vt1, vt2, rt0 GROUP BY vt1.c0, rt0.c0, rt0.c2;
SELECT ALL vt1.c0, rt0.c0, rt0.c2 FROM vt1, vt2 NOT INDEXED, rt0 GROUP BY vt1.c0, rt0.c0, rt0.c2 HAVING CAST(COUNT(*) AS REAL) UNION ALL SELECT ALL vt1.c0, rt0.c0, rt0.c2 FROM vt1, vt2, rt0 GROUP BY vt1.c0, rt0.c0, rt0.c2 HAVING (NOT (CAST(COUNT(*) AS REAL))) UNION ALL SELECT vt1.c0, rt0.c0, rt0.c2 FROM vt1, vt2, rt0 GROUP BY vt1.c0, rt0.c0, rt0.c2 HAVING ((CAST(COUNT(*) AS REAL)) ISNULL);
SELECT ALL vt1.c0, rt0.c0, rt0.c2 FROM vt1, vt2, rt0 GROUP BY vt1.c0, rt0.c0, rt0.c2;
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE ((- ((rt0.c2 IN ())))) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT ((- ((rt0.c2 IN ())))))) UNION ALL SELECT ALL * FROM rt0 WHERE ((((- ((rt0.c2 IN ())))) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT rt0.c0 FROM rt0, vt2 NATURAL JOIN vt1;
SELECT DISTINCT rt0.c0 FROM rt0, vt2 NATURAL JOIN vt1 WHERE ((((((rt0.c0)AND(x'')), (vt2.c0 IN (NULL)), CAST(vt2.c0 AS TEXT)))>=((((rt0.c2)&(rt0.c0)), ((rt0.c1)-(rt0.c0)), ((((rt0.c1)OR(rt0.c2)))AND('wᓵ%\M즻')))))) UNION SELECT DISTINCT rt0.c0 FROM rt0, vt2 NATURAL JOIN vt1 WHERE ((NOT ((((((rt0.c0)AND(x'')), (vt2.c0 IN (NULL)), CAST(vt2.c0 AS TEXT)))>=((((rt0.c2)&(rt0.c0)), ((rt0.c1)-(rt0.c0)), ((((rt0.c1)OR(rt0.c2)))AND('wᓵ%\M즻')))))))) UNION SELECT DISTINCT rt0.c0 FROM rt0, vt2 NATURAL JOIN vt1 WHERE ((((((((rt0.c0)AND(x'')), (vt2.c0 IN (NULL)), CAST(vt2.c0 AS TEXT)))>=((((rt0.c2)&(rt0.c0)), ((rt0.c1)-(rt0.c0)), ((((rt0.c1)OR(rt0.c2)))AND('wᓵ%\M즻')))))) ISNULL));
SELECT DISTINCT rt0.c0 FROM rt0, vt2 NATURAL JOIN vt1;
SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT ALL vt2.c0 FROM vt2 WHERE ((((NOT (vt2.c0))) ISNULL)) GROUP BY vt2.c0 UNION SELECT ALL vt2.c0 FROM vt2 WHERE ((NOT ((((NOT (vt2.c0))) ISNULL)))) GROUP BY vt2.c0 UNION SELECT vt2.c0 FROM vt2 WHERE ((((((NOT (vt2.c0))) ISNULL)) ISNULL)) GROUP BY vt2.c0;
SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT vt2.c0 FROM vt2, rt0, vt1 GROUP BY vt2.c0;
SELECT ALL vt2.c0 FROM vt2, rt0, vt1 GROUP BY vt2.c0 HAVING (NOT ((rt0.c0 IN ()))) UNION ALL SELECT vt2.c0 FROM vt2, rt0, vt1 GROUP BY vt2.c0 HAVING (NOT ((NOT ((rt0.c0 IN ()))))) UNION ALL SELECT ALL vt2.c0 FROM vt2, rt0, vt1 GROUP BY vt2.c0 HAVING (((NOT ((rt0.c0 IN ())))) ISNULL);
SELECT vt2.c0 FROM vt2, rt0, vt1 GROUP BY vt2.c0;
SELECT ALL vt2.c0 FROM vt2, rt0, vt1 GROUP BY vt2.c0 HAVING (NOT ((rt0.c0 IN ()))) UNION ALL SELECT vt2.c0 FROM vt2, rt0, vt1 GROUP BY vt2.c0 HAVING (NOT ((NOT ((rt0.c0 IN ()))))) UNION ALL SELECT ALL vt2.c0 FROM vt2, rt0, vt1 GROUP BY vt2.c0 HAVING (((NOT ((rt0.c0 IN ())))) ISNULL);
SELECT vt2.c0 FROM vt2, rt0, vt1 GROUP BY vt2.c0;
SELECT vt2.c0, rt0.c2, rt0.c1 FROM rt0, vt2;
SELECT ALL vt2.c0, rt0.c2, rt0.c1 FROM rt0, vt2 WHERE ((CAST(vt2.c0 AS NUMERIC) IN ())) UNION ALL SELECT ALL vt2.c0, rt0.c2, rt0.c1 FROM rt0, vt2 WHERE ((NOT ((CAST(vt2.c0 AS NUMERIC) IN ())))) UNION ALL SELECT ALL vt2.c0, rt0.c2, rt0.c1 FROM rt0, vt2 WHERE ((((CAST(vt2.c0 AS NUMERIC) IN ())) ISNULL));
SELECT vt2.c0, rt0.c2, rt0.c1 FROM rt0, vt2;
SELECT DISTINCT vt1.c0 FROM vt1 LEFT OUTER JOIN vt2 ON vt1.c0;
SELECT DISTINCT vt1.c0 FROM vt1 LEFT OUTER JOIN vt2 ON vt1.c0 WHERE (((vt1.c0)LIKE(vt1.c0)) COLLATE BINARY) UNION SELECT DISTINCT vt1.c0 FROM vt1 LEFT OUTER JOIN vt2 ON vt1.c0 WHERE ((NOT (((vt1.c0)LIKE(vt1.c0)) COLLATE BINARY))) UNION SELECT DISTINCT vt1.c0 FROM vt1 LEFT OUTER JOIN vt2 ON vt1.c0 WHERE (((((vt1.c0)LIKE(vt1.c0)) COLLATE BINARY) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1 LEFT OUTER JOIN vt2 ON vt1.c0;
SELECT rt0.c1 FROM vt2, vt1, rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM vt2, vt1, rt0 WHERE (CAST('0.16731290998121773' AS BLOB)) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM vt2, vt1, rt0 WHERE ((NOT (CAST('0.16731290998121773' AS BLOB)))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM vt2, vt1, rt0 WHERE (((CAST('0.16731290998121773' AS BLOB)) ISNULL)) GROUP BY rt0.c1;
SELECT rt0.c1 FROM vt2, vt1, rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM vt1 RIGHT OUTER JOIN rt0 ON (((rt0.c0)IS NOT(vt1.c0)) IN ()) LEFT OUTER JOIN vt2 ON vt2.c0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM vt1 RIGHT OUTER JOIN rt0 ON (((rt0.c0)IS NOT(vt1.c0)) IN ()) LEFT OUTER JOIN vt2 ON vt2.c0 GROUP BY rt0.c1 HAVING MAX((+ (vt1.c0))) UNION ALL SELECT rt0.c1 FROM vt1 RIGHT OUTER JOIN rt0 ON (((rt0.c0)IS NOT(vt1.c0)) IN ()) LEFT OUTER JOIN vt2 ON vt2.c0 GROUP BY rt0.c1 HAVING (NOT (MAX((+ (vt1.c0))))) UNION ALL SELECT rt0.c1 FROM vt1 RIGHT OUTER JOIN rt0 ON (((rt0.c0)IS NOT(vt1.c0)) IN ()) LEFT OUTER JOIN vt2 ON vt2.c0 GROUP BY rt0.c1 HAVING ((MAX((+ (vt1.c0)))) ISNULL);
SELECT ALL rt0.c1 FROM vt1 RIGHT OUTER JOIN rt0 ON (((rt0.c0)IS NOT(vt1.c0)) IN ()) LEFT OUTER JOIN vt2 ON vt2.c0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM vt1 RIGHT OUTER JOIN rt0 ON (((rt0.c0)IS NOT(vt1.c0)) IN ()) LEFT OUTER JOIN vt2 ON vt2.c0 GROUP BY rt0.c1 HAVING MAX((+ (vt1.c0))) UNION ALL SELECT rt0.c1 FROM vt1 RIGHT OUTER JOIN rt0 ON (((rt0.c0)IS NOT(vt1.c0)) IN ()) LEFT OUTER JOIN vt2 ON vt2.c0 GROUP BY rt0.c1 HAVING (NOT (MAX((+ (vt1.c0))))) UNION ALL SELECT rt0.c1 FROM vt1 RIGHT OUTER JOIN rt0 ON (((rt0.c0)IS NOT(vt1.c0)) IN ()) LEFT OUTER JOIN vt2 ON vt2.c0 GROUP BY rt0.c1 HAVING ((MAX((+ (vt1.c0)))) ISNULL);
SELECT ALL rt0.c1 FROM vt1 RIGHT OUTER JOIN rt0 ON (((rt0.c0)IS NOT(vt1.c0)) IN ()) LEFT OUTER JOIN vt2 ON vt2.c0 GROUP BY rt0.c1;
SELECT vt1.c0, rt0.c1, rt0.c2, rt0.c0 FROM rt0, vt1 NATURAL JOIN vt2;
SELECT vt1.c0, rt0.c1, rt0.c2, rt0.c0 FROM rt0, vt1 NATURAL JOIN vt2 WHERE (NULL) UNION ALL SELECT vt1.c0, rt0.c1, rt0.c2, rt0.c0 FROM rt0, vt1 NATURAL JOIN vt2 WHERE ((NOT (NULL))) UNION ALL SELECT vt1.c0, rt0.c1, rt0.c2, rt0.c0 FROM rt0, vt1 NATURAL JOIN vt2 WHERE (((NULL) ISNULL));
SELECT vt1.c0, rt0.c1, rt0.c2, rt0.c0 FROM rt0, vt1 NATURAL JOIN vt2;
SELECT DISTINCT * FROM vt2, vt1;
SELECT DISTINCT * FROM vt2, vt1 WHERE (CAST((vt2.c0 IN ()) AS INTEGER)) UNION SELECT DISTINCT * FROM vt2, vt1 WHERE ((NOT (CAST((vt2.c0 IN ()) AS INTEGER)))) UNION SELECT DISTINCT * FROM vt2, vt1 WHERE (((CAST((vt2.c0 IN ()) AS INTEGER)) ISNULL));
SELECT DISTINCT * FROM vt2, vt1;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE (vt1.c0) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT (vt1.c0))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE (((vt1.c0) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt2.c0, vt1.c0 FROM vt2 NATURAL JOIN vt1 GROUP BY vt2.c0, vt1.c0;
SELECT ALL vt2.c0, vt1.c0 FROM vt2 NATURAL JOIN vt1 GROUP BY vt2.c0, vt1.c0 HAVING MAX(vt2.c0) COLLATE NOCASE UNION ALL SELECT ALL vt2.c0, vt1.c0 FROM vt2 NATURAL JOIN vt1 GROUP BY vt2.c0, vt1.c0 HAVING (NOT (MAX(vt2.c0) COLLATE NOCASE)) UNION ALL SELECT ALL vt2.c0, vt1.c0 FROM vt2 NATURAL JOIN vt1 GROUP BY vt2.c0, vt1.c0 HAVING ((MAX(vt2.c0) COLLATE NOCASE) ISNULL);
SELECT ALL vt2.c0, vt1.c0 FROM vt2 NATURAL JOIN vt1 GROUP BY vt2.c0, vt1.c0;
SELECT ALL vt2.c0, vt1.c0 FROM vt2 NATURAL JOIN vt1 GROUP BY vt2.c0, vt1.c0 HAVING MAX(vt2.c0) COLLATE NOCASE UNION ALL SELECT ALL vt2.c0, vt1.c0 FROM vt2 NATURAL JOIN vt1 GROUP BY vt2.c0, vt1.c0 HAVING (NOT (MAX(vt2.c0) COLLATE NOCASE)) UNION ALL SELECT ALL vt2.c0, vt1.c0 FROM vt2 NATURAL JOIN vt1 GROUP BY vt2.c0, vt1.c0 HAVING ((MAX(vt2.c0) COLLATE NOCASE) ISNULL);
SELECT ALL vt2.c0, vt1.c0 FROM vt2 NATURAL JOIN vt1 GROUP BY vt2.c0, vt1.c0;
SELECT ALL rt0.c2, rt0.c1 FROM rt0, vt1;
SELECT ALL rt0.c2, rt0.c1 FROM rt0, vt1 WHERE ((((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1)) IN ())) UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM rt0, vt1 WHERE ((NOT ((((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1)) IN ())))) UNION ALL SELECT rt0.c2, rt0.c1 FROM rt0, vt1 WHERE ((((((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1)) IN ())) ISNULL));
SELECT ALL rt0.c2, rt0.c1 FROM rt0, vt1;
SELECT DISTINCT * FROM vt1, vt2, rt0;
SELECT DISTINCT * FROM vt1, vt2, rt0 WHERE (((rt0.c0) NOT NULL) COLLATE RTRIM) UNION SELECT DISTINCT * FROM vt1, vt2, rt0 WHERE ((NOT (((rt0.c0) NOT NULL) COLLATE RTRIM))) UNION SELECT DISTINCT * FROM vt1, vt2, rt0 WHERE (((((rt0.c0) NOT NULL) COLLATE RTRIM) ISNULL));
SELECT DISTINCT * FROM vt1, vt2, rt0;
SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT ALL vt2.c0 FROM vt2 WHERE (COALESCE(((vt2.c0)IS(NULL)), ((vt2.c0) IS FALSE), (((vt2.c0))>=((vt2.c0))), (NOT (vt2.c0)))) GROUP BY vt2.c0 UNION SELECT vt2.c0 FROM vt2 WHERE ((NOT (COALESCE(((vt2.c0)IS(NULL)), ((vt2.c0) IS FALSE), (((vt2.c0))>=((vt2.c0))), (NOT (vt2.c0)))))) GROUP BY vt2.c0 UNION SELECT ALL vt2.c0 FROM vt2 WHERE (((COALESCE(((vt2.c0)IS(NULL)), ((vt2.c0) IS FALSE), (((vt2.c0))>=((vt2.c0))), (NOT (vt2.c0)))) ISNULL)) GROUP BY vt2.c0;
SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT rt0.c0, rt0.c2, vt1.c0 FROM vt2, rt0, vt1 GROUP BY rt0.c0, rt0.c2, vt1.c0;
SELECT ALL rt0.c0, rt0.c2, vt1.c0 FROM vt2, rt0, vt1 GROUP BY rt0.c0, rt0.c2, vt1.c0 HAVING (((rt0.c2)||(rt0.c2)) IN (COUNT(rt0.c2), (GROUP_CONCAT(MAX(TOTAL(rt0.c1))) IN (vt1.c0)))) UNION ALL SELECT ALL rt0.c0, rt0.c2, vt1.c0 FROM vt2, rt0, vt1 GROUP BY rt0.c0, rt0.c2, vt1.c0 HAVING (NOT ((((rt0.c2)||(rt0.c2)) IN (COUNT(rt0.c2), (GROUP_CONCAT(MAX(TOTAL(rt0.c1))) IN (vt1.c0)))))) UNION ALL SELECT rt0.c0, rt0.c2, vt1.c0 FROM vt2, rt0, vt1 GROUP BY rt0.c0, rt0.c2, vt1.c0 HAVING (((((rt0.c2)||(rt0.c2)) IN (COUNT(rt0.c2), (GROUP_CONCAT(MAX(TOTAL(rt0.c1))) IN (vt1.c0))))) ISNULL);
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE (((COALESCE(rt0.c1, rt0.c2)) NOT BETWEEN (((rt0.c1)<(rt0.c1))) AND ((rt0.c0 IN ())))) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (((COALESCE(rt0.c1, rt0.c2)) NOT BETWEEN (((rt0.c1)<(rt0.c1))) AND ((rt0.c0 IN ())))))) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE (((((COALESCE(rt0.c1, rt0.c2)) NOT BETWEEN (((rt0.c1)<(rt0.c1))) AND ((rt0.c0 IN ())))) ISNULL));
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0;
SELECT DISTINCT vt2.c0, rt0.c1, rt0.c0, rt0.c2 FROM vt2, rt0;
SELECT DISTINCT vt2.c0, rt0.c1, rt0.c0, rt0.c2 FROM vt2, rt0 WHERE (((0.380816214812974)IS NOT(931599435))) UNION SELECT DISTINCT vt2.c0, rt0.c1, rt0.c0, rt0.c2 FROM vt2, rt0 WHERE ((NOT (((0.380816214812974)IS NOT(931599435))))) UNION SELECT DISTINCT vt2.c0, rt0.c1, rt0.c0, rt0.c2 FROM vt2, rt0 WHERE (((((0.380816214812974)IS NOT(931599435))) ISNULL));
SELECT DISTINCT vt2.c0, rt0.c1, rt0.c0, rt0.c2 FROM vt2, rt0;
