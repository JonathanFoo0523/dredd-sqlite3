-- Time: 2024/06/09 16:14:20
-- Database: database87
-- Database version: 3.40.0
-- seed value: 4056651987
PRAGMA cache_size = 50000; -- 0ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA encoding = 'UTF-16le'; -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree_i32(c0, c1, c2, c3, c4); -- 0ms;
UPDATE rt0 SET c1=NULL, c3=x'2089', c3=NULL, c2=x''; -- 0ms;
END; -- 0ms;
PRAGMA wal_checkpoint(FULL); -- 0ms;
END; -- 0ms;
INSERT OR IGNORE INTO rt0(c3) VALUES ('118600068'); -- 0ms;
UPDATE OR IGNORE rt0 SET (c0)=(1.18600068E8); -- 0ms;
REINDEX; -- 0ms;
CREATE VIRTUAL TABLE rt1 USING rtree(c0, c1, c2, +c3 BLOB , +c4 INTEGER ); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR IGNORE rt1 SET c0=0x711b184; -- 0ms;
UPDATE rt0 SET c0=2035601410; -- 0ms;
PRAGMA integrity_check; -- 0ms;
ANALYZE; -- 0ms;
PRAGMA main.legacy_file_format; -- 0ms;
PRAGMA temp.foreign_keys = true; -- 0ms;
UPDATE OR IGNORE rt0 SET (c0)=('') WHERE (((rt0.c4, rt0.c0, rt0.c1)) NOT BETWEEN ((((rt0.c1) ISNULL), rt0.c0 COLLATE NOCASE, ((((rt0.c0)OR(rt0.c2)))AND(rt0.c0)))) AND (((((rt0.c1, rt0.c4, rt0.c0)) NOT BETWEEN ((rt0.c3, rt0.c1, rt0.c2)) AND ((rt0.c4, rt0.c3, rt0.c1))), rt0.c4, ((rt0.c3) IS FALSE)))); -- 1ms;
INSERT OR REPLACE INTO rt1(c4, c3, c0, c1) VALUES ('792493871', 0.6682225816428479, NULL, 0x30157508); -- 0ms;
INSERT OR REPLACE INTO rt1(c1, c2) VALUES (x'', 0.5793698236125961); -- 1ms;
PRAGMA temp.automatic_index = false; -- 0ms;
PRAGMA temp.foreign_keys = false; -- 1ms;
PRAGMA main.reverse_unordered_selects = false; -- 0ms;
PRAGMA temp.application_id; -- 0ms;
UPDATE OR FAIL rt0 SET (c2)=(NULL); -- 0ms;
SELECT rtreecheck('rt0'); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
UPDATE rt1 SET (c0, c4, c1)=('806712584', x'', 0xffffffff88353a1a); -- 1ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
ANALYZE; -- 0ms;
END TRANSACTION; -- 0ms;
UPDATE rt0 SET c1='792493871', c3='-1066274108'; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
PRAGMA auto_vacuum; -- 0ms;
COMMIT; -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
UPDATE OR IGNORE rt0 SET c0=0.7344390832304166, c3='-1066274108' WHERE 0.48810744125393957; -- 0ms;
UPDATE rt0 SET c2=''; -- 0ms;
INSERT OR IGNORE INTO rt1(c1, c2, c3) VALUES (NULL, x'', '-1066274108'); -- 1ms;
BEGIN  TRANSACTION; -- 0ms;
UPDATE rt1 SET (c0, c2, c1)=(NULL, x'', NULL); -- 0ms;
PRAGMA main.short_column_names; -- 0ms;
INSERT OR IGNORE INTO rt0(c3) VALUES ('-1066274108'), (NULL), (0.2627155920707489); -- 0ms;
UPDATE OR IGNORE rt0 SET (c3)=(x'fe7d') WHERE (((((rt0.c4)AND(0.2010307080914132)))OR(rt0.c1)) IN (CAST(rt0.c0 AS REAL))); -- 1ms;
REINDEX  rt1; -- 0ms;
INSERT OR IGNORE INTO rt0(c3, c4, c0) VALUES (x'', -9814916, 0.2010307080914132), (1.18600068E8, '', ''), ('0[''%Xo', 0x30157508, 0Xa672382); -- 0ms;
INSERT OR IGNORE INTO rt0(c4, c3) VALUES (NULL, '0[''%xo'); -- 0ms;
UPDATE OR REPLACE rt0 SET (c1)=(0.05594325623877261) WHERE (((NOT (rt0.c3)))<=(SUBSTR(rt0.c1, rt0.c0))); -- 0ms;
INSERT OR ROLLBACK INTO rt1(c2, c1, c0, c4) VALUES (0.2627155920707489, NULL, 0.6682225816428479, 0.16969772634077374); -- 0ms;
REINDEX  rt0; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
PRAGMA main.wal_autocheckpoint; -- 0ms;
UPDATE OR IGNORE rt1 SET (c1, c0, c0)=('0[''%xo', 0.5793698236125961, 0.5287407460806736); -- 1ms;
REINDEX BINARY; -- 0ms;
INSERT OR IGNORE INTO rt1(c3) VALUES (-9814916.0); -- 0ms;
END; -- 0ms;
UPDATE OR IGNORE rt1 SET (c1, c1)=(0.16969772634077374, NULL); -- 0ms;
UPDATE OR IGNORE rt0 SET (c0)=(0.794771796956855) WHERE (rt0.c0 IN (rt0.c1 COLLATE BINARY)); -- 0ms;
INSERT OR FAIL INTO rt1(c2, c4, c1, c0, c3) VALUES (0.056692267652407424, NULL, x'', NULL, 2.03560141E9); -- 1ms;
CREATE TEMP VIEW v0(c0, c1, c2) AS SELECT DISTINCT NULL, (~ ((((rt0.c2))<>((rt1.c1))))), CAST(x'' AS NUMERIC) FROM rt1, rt0 WHERE ((+ ((((0.6170624114939711))>=(('-237113360')))))) ORDER BY CASE rt0.c1 COLLATE BINARY  WHEN LENGTH(rt0.c3) THEN rt1.c0 COLLATE NOCASE ELSE rt1.c0 END  NULLS FIRST; -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO rt0(c4, c0, c3) VALUES (0.9473675675047771, x'd039c234', NULL); -- 0ms;
END; -- 0ms;
UPDATE rt1 SET c1=0.05594325623877261, c0=NULL WHERE (rt1.c3 COLLATE BINARY IN (CAST(rt1.c1 AS REAL))); -- 0ms;
UPDATE rt1 SET c3=NULL, c2=0.3823524545296808, c0='1e500' WHERE ((((((rt1.c1) IS TRUE))AND(rt1.c1 COLLATE BINARY)))OR(((rt1.c4)>>(rt1.c2)))); -- 0ms;
END TRANSACTION; -- 0ms;
UPDATE OR IGNORE rt0 SET c3='H<U' WHERE ((((rt0.c0)LIKE(rt0.c4))) NOTNULL); -- 0ms;
PRAGMA main.mmap_size; -- 0ms;
VACUUM temp; -- 0ms;
PRAGMA temp.application_id; -- 0ms;
INSERT OR IGNORE INTO rt0(c1, c3, c2) VALUES (x'a03f', '0[''%Xo', NULL); -- 0ms;
ANALYZE; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(NULL AS INTEGER)) BETWEEN ((- (-821676532))) AND ('')); -- 0ms;
UPDATE rt0 SET (c4)=(NULL) WHERE (- ((+ (rt0.c0)))); -- 0ms;
PRAGMA journal_size_limit; -- 0ms;
INSERT OR IGNORE INTO rt0(c4, c1, c0, c3) VALUES (-1575219153, '-1575219153', 0X711b184, NULL), (NULL, x'', -1946937528, -1.575219153E9), ('', -1.946937528E9, 0.3823524545296808, -1.066274108E9); -- 0ms;
INSERT OR ABORT INTO rt0(c4, c2) VALUES (-2.009777638E9, '792493871'), ('-2009777638', 0.03125198205855739), ('놄', 0.37289608314708034); -- 0ms;
INSERT OR ABORT INTO rt0(c2, c4, c1) VALUES (0.2010307080914132, '792493871', '0.48810744125393957'), (0.8961051197042991, 1210170319, NULL), (NULL, 0.3405817775414942, ']淲<ᝐV{5ct'); -- 1ms;
BEGIN  TRANSACTION; -- 0ms;
UPDATE OR IGNORE rt1 SET (c2)=('NaN'); -- 1ms;
UPDATE OR IGNORE rt1 SET (c0)=(NULL) WHERE (rt1.c0 COLLATE BINARY IN ()); -- 0ms;
VACUUM; -- 0ms;
VACUUM; -- 0ms;
VACUUM; -- 0ms;
VACUUM; -- 0ms;
VACUUM; -- 0ms;
VACUUM temp; -- 0ms;
UPDATE rt0 SET (c2)=('174531458') WHERE ((CAST(NULL AS INTEGER))IS NOT(((rt0.c4)*(rt0.c1)))); -- 0ms;
PRAGMA foreign_keys = true; -- 0ms;
ANALYZE sqlite_master; -- 0ms;
PRAGMA mmap_size; -- 0ms;
PRAGMA main.integrity_check; -- 0ms;
UPDATE OR IGNORE rt0 SET (c2, c2)=('481722261', x''); -- 0ms;
COMMIT TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO rt1(c4, c0, c1, c3) VALUES (NULL, '-2009777638', '1203707330', '0[''%xo'); -- 0ms;
PRAGMA foreign_keys; -- 0ms;
REINDEX  rt0; -- 0ms;
REINDEX; -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
COMMIT; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT ALL v0.c2, v0.c0, rt1.c1, rt1.c0, rt0.c4, rt1.c4, rt1.c3, rt1.c2, rt0.c0, rt0.c2, rt0.c3, rt0.c1 FROM v0, rt1 RIGHT OUTER JOIN rt0 ON (((((v0.c1)OR(rt0.c3)))AND('甈*')) IN ());
SELECT ALL v0.c2, v0.c0, rt1.c1, rt1.c0, rt0.c4, rt1.c4, rt1.c3, rt1.c2, rt0.c0, rt0.c2, rt0.c3, rt0.c1 FROM v0, rt1 RIGHT OUTER JOIN rt0 ON (((((v0.c1)OR(rt0.c3)))AND('甈*')) IN ()) WHERE (CASE WHEN CAST(v0.c2 AS INTEGER) THEN CAST(v0.c1 AS NUMERIC) END) UNION ALL SELECT v0.c2, v0.c0, rt1.c1, rt1.c0, rt0.c4, rt1.c4, rt1.c3, rt1.c2, rt0.c0, rt0.c2, rt0.c3, rt0.c1 FROM v0, rt1 RIGHT OUTER JOIN rt0 ON (((((v0.c1)OR(rt0.c3)))AND('甈*')) IN ()) WHERE ((NOT (CASE WHEN CAST(v0.c2 AS INTEGER) THEN CAST(v0.c1 AS NUMERIC) END))) UNION ALL SELECT v0.c2, v0.c0, rt1.c1, rt1.c0, rt0.c4, rt1.c4, rt1.c3, rt1.c2, rt0.c0, rt0.c2, rt0.c3, rt0.c1 FROM v0, rt1 RIGHT OUTER JOIN rt0 ON (((((v0.c1)OR(rt0.c3)))AND('甈*')) IN ()) WHERE (((CASE WHEN CAST(v0.c2 AS INTEGER) THEN CAST(v0.c1 AS NUMERIC) END) ISNULL));
SELECT ALL v0.c2, v0.c0, rt1.c1, rt1.c0, rt0.c4, rt1.c4, rt1.c3, rt1.c2, rt0.c0, rt0.c2, rt0.c3, rt0.c1 FROM v0, rt1 RIGHT OUTER JOIN rt0 ON (((((v0.c1)OR(rt0.c3)))AND('甈*')) IN ());
SELECT DISTINCT rt1.c0, rt0.c1, rt1.c4 FROM rt1, rt0;
SELECT DISTINCT rt1.c0, rt0.c1, rt1.c4 FROM rt1, rt0 WHERE (rt0.c4) UNION SELECT DISTINCT rt1.c0, rt0.c1, rt1.c4 FROM rt1, rt0 WHERE ((NOT (rt0.c4))) UNION SELECT DISTINCT rt1.c0, rt0.c1, rt1.c4 FROM rt1, rt0 WHERE (((rt0.c4) ISNULL));
SELECT DISTINCT rt1.c0, rt0.c1, rt1.c4 FROM rt1, rt0;
SELECT ALL rt1.c2, v0.c1, rt1.c3, rt1.c1, v0.c2, v0.c0, rt1.c4, rt1.c0 FROM v0, rt1 GROUP BY rt1.c2, v0.c1, rt1.c3, rt1.c1, v0.c2, v0.c0, rt1.c4, rt1.c0;
SELECT rt1.c2, v0.c1, rt1.c3, rt1.c1, v0.c2, v0.c0, rt1.c4, rt1.c0 FROM v0, rt1 WHERE ('-1182384912') GROUP BY rt1.c2, v0.c1, rt1.c3, rt1.c1, v0.c2, v0.c0, rt1.c4, rt1.c0 UNION SELECT ALL rt1.c2, v0.c1, rt1.c3, rt1.c1, v0.c2, v0.c0, rt1.c4, rt1.c0 FROM v0, rt1 WHERE ((NOT ('-1182384912'))) GROUP BY rt1.c2, v0.c1, rt1.c3, rt1.c1, v0.c2, v0.c0, rt1.c4, rt1.c0 UNION SELECT ALL rt1.c2, v0.c1, rt1.c3, rt1.c1, v0.c2, v0.c0, rt1.c4, rt1.c0 FROM v0, rt1 WHERE ((('-1182384912') ISNULL)) GROUP BY rt1.c2, v0.c1, rt1.c3, rt1.c1, v0.c2, v0.c0, rt1.c4, rt1.c0;
SELECT ALL rt1.c2, v0.c1, rt1.c3, rt1.c1, v0.c2, v0.c0, rt1.c4, rt1.c0 FROM v0, rt1 GROUP BY rt1.c2, v0.c1, rt1.c3, rt1.c1, v0.c2, v0.c0, rt1.c4, rt1.c0;
SELECT ALL rt1.c2, rt0.c2, rt0.c3, rt1.c0, rt0.c4, rt1.c3, rt1.c4, rt0.c1 FROM rt0 INNER JOIN v0 ON CAST(((rt1.c3) NOTNULL) AS NUMERIC) INNER JOIN rt1 ON (NULL IN ()) GROUP BY rt1.c2, rt0.c2, rt0.c3, rt1.c0, rt0.c4, rt1.c3, rt1.c4, rt0.c1;
SELECT rt1.c2, rt0.c2, rt0.c3, rt1.c0, rt0.c4, rt1.c3, rt1.c4, rt0.c1 FROM rt0 INNER JOIN v0 ON CAST(((rt1.c3) NOTNULL) AS NUMERIC) INNER JOIN rt1 ON (NULL IN ()) GROUP BY rt1.c2, rt0.c2, rt0.c3, rt1.c0, rt0.c4, rt1.c3, rt1.c4, rt0.c1 HAVING ((COUNT(*)) NOTNULL) UNION ALL SELECT ALL rt1.c2, rt0.c2, rt0.c3, rt1.c0, rt0.c4, rt1.c3, rt1.c4, rt0.c1 FROM rt0 INNER JOIN v0 ON CAST(((rt1.c3) NOTNULL) AS NUMERIC) INNER JOIN rt1 ON (NULL IN ()) GROUP BY rt1.c2, rt0.c2, rt0.c3, rt1.c0, rt0.c4, rt1.c3, rt1.c4, rt0.c1 HAVING (NOT (((COUNT(*)) NOTNULL))) UNION ALL SELECT ALL rt1.c2, rt0.c2, rt0.c3, rt1.c0, rt0.c4, rt1.c3, rt1.c4, rt0.c1 FROM rt0 INNER JOIN v0 ON CAST(((rt1.c3) NOTNULL) AS NUMERIC) INNER JOIN rt1 ON (NULL IN ()) GROUP BY rt1.c2, rt0.c2, rt0.c3, rt1.c0, rt0.c4, rt1.c3, rt1.c4, rt0.c1 HAVING ((((COUNT(*)) NOTNULL)) ISNULL);
SELECT ALL rt1.c2, rt0.c2, rt0.c3, rt1.c0, rt0.c4, rt1.c3, rt1.c4, rt0.c1 FROM rt0 INNER JOIN v0 ON CAST(((rt1.c3) NOTNULL) AS NUMERIC) INNER JOIN rt1 ON (NULL IN ()) GROUP BY rt1.c2, rt0.c2, rt0.c3, rt1.c0, rt0.c4, rt1.c3, rt1.c4, rt0.c1;
SELECT rt1.c2, rt0.c2, rt0.c3, rt1.c0, rt0.c4, rt1.c3, rt1.c4, rt0.c1 FROM rt0 INNER JOIN v0 ON CAST(((rt1.c3) NOTNULL) AS NUMERIC) INNER JOIN rt1 ON (NULL IN ()) GROUP BY rt1.c2, rt0.c2, rt0.c3, rt1.c0, rt0.c4, rt1.c3, rt1.c4, rt0.c1 HAVING ((COUNT(*)) NOTNULL) UNION ALL SELECT ALL rt1.c2, rt0.c2, rt0.c3, rt1.c0, rt0.c4, rt1.c3, rt1.c4, rt0.c1 FROM rt0 INNER JOIN v0 ON CAST(((rt1.c3) NOTNULL) AS NUMERIC) INNER JOIN rt1 ON (NULL IN ()) GROUP BY rt1.c2, rt0.c2, rt0.c3, rt1.c0, rt0.c4, rt1.c3, rt1.c4, rt0.c1 HAVING (NOT (((COUNT(*)) NOTNULL))) UNION ALL SELECT ALL rt1.c2, rt0.c2, rt0.c3, rt1.c0, rt0.c4, rt1.c3, rt1.c4, rt0.c1 FROM rt0 INNER JOIN v0 ON CAST(((rt1.c3) NOTNULL) AS NUMERIC) INNER JOIN rt1 ON (NULL IN ()) GROUP BY rt1.c2, rt0.c2, rt0.c3, rt1.c0, rt0.c4, rt1.c3, rt1.c4, rt0.c1 HAVING ((((COUNT(*)) NOTNULL)) ISNULL);
SELECT ALL rt1.c2, rt0.c2, rt0.c3, rt1.c0, rt0.c4, rt1.c3, rt1.c4, rt0.c1 FROM rt0 INNER JOIN v0 ON CAST(((rt1.c3) NOTNULL) AS NUMERIC) INNER JOIN rt1 ON (NULL IN ()) GROUP BY rt1.c2, rt0.c2, rt0.c3, rt1.c0, rt0.c4, rt1.c3, rt1.c4, rt0.c1;
SELECT rt1.c1, rt0.c0, rt0.c4, rt1.c3 FROM rt1 FULL OUTER JOIN v0 ON (((((rt0.c1))<=((rt1.c2)))) ISNULL) CROSS JOIN rt0 ON ABS(DISTINCT NULL);
SELECT DISTINCT rt0.c3, rt0.c4, rt0.c2, v0.c2, rt0.c0 FROM rt1 RIGHT OUTER JOIN v0 ON (((((((((-1452795440)AND(rt1.c1)))AND(rt0.c4)))AND(rt0.c0)))AND(rt1.c4)) IN ()) CROSS JOIN rt0 ON rt0.c3;
SELECT DISTINCT rt0.c3, rt0.c4, rt0.c2, v0.c2, rt0.c0 FROM rt1 RIGHT OUTER JOIN v0 ON (((((((((-1452795440)AND(rt1.c1)))AND(rt0.c4)))AND(rt0.c0)))AND(rt1.c4)) IN ()) CROSS JOIN rt0 ON rt0.c3 WHERE (((rt1.c3 COLLATE NOCASE)IS(v0.c0))) UNION SELECT DISTINCT rt0.c3, rt0.c4, rt0.c2, v0.c2, rt0.c0 FROM rt1 RIGHT OUTER JOIN v0 ON (((((((((-1452795440)AND(rt1.c1)))AND(rt0.c4)))AND(rt0.c0)))AND(rt1.c4)) IN ()) CROSS JOIN rt0 ON rt0.c3 WHERE ((NOT (((rt1.c3 COLLATE NOCASE)IS(v0.c0))))) UNION SELECT DISTINCT rt0.c3, rt0.c4, rt0.c2, v0.c2, rt0.c0 FROM rt1 RIGHT OUTER JOIN v0 ON (((((((((-1452795440)AND(rt1.c1)))AND(rt0.c4)))AND(rt0.c0)))AND(rt1.c4)) IN ()) CROSS JOIN rt0 ON rt0.c3 WHERE (((((rt1.c3 COLLATE NOCASE)IS(v0.c0))) ISNULL));
SELECT DISTINCT rt0.c3, rt0.c4, rt0.c2, v0.c2, rt0.c0 FROM rt1 RIGHT OUTER JOIN v0 ON (((((((((-1452795440)AND(rt1.c1)))AND(rt0.c4)))AND(rt0.c0)))AND(rt1.c4)) IN ()) CROSS JOIN rt0 ON rt0.c3;
SELECT rt0.c3, rt0.c0, rt1.c1, rt0.c2, rt1.c0, v0.c1 FROM rt0 RIGHT OUTER JOIN rt1 ON ((((((((v0.c1)OR(v0.c0)))OR(rt1.c2)))AND(rt0.c4)))OR(rt1.c3)) COLLATE NOCASE COLLATE RTRIM FULL OUTER JOIN v0 ON (+ ('-431769456' COLLATE NOCASE)) GROUP BY rt0.c3, rt0.c0, rt1.c1, rt0.c2, rt1.c0, v0.c1;
SELECT rt0.c3, rt0.c0, rt1.c0, v0.c2, rt1.c2, rt0.c2, rt1.c3, rt1.c4 FROM rt1 FULL OUTER JOIN v0 ON CAST(((rt1.c4) IS FALSE) AS TEXT) FULL OUTER JOIN rt0 ON (NULL IN ()) COLLATE BINARY GROUP BY rt0.c3, rt0.c0, rt1.c0, v0.c2, rt1.c2, rt0.c2, rt1.c3, rt1.c4;
SELECT ALL rt0.c3, rt0.c0, rt1.c0, v0.c2, rt1.c2, rt0.c2, rt1.c3, rt1.c4 FROM rt1 FULL OUTER JOIN v0 ON CAST(((rt1.c4) IS FALSE) AS TEXT) FULL OUTER JOIN rt0 ON (NULL IN ()) COLLATE BINARY GROUP BY rt0.c3, rt0.c0, rt1.c0, v0.c2, rt1.c2, rt0.c2, rt1.c3, rt1.c4 HAVING COUNT(*) COLLATE RTRIM UNION ALL SELECT ALL rt0.c3, rt0.c0, rt1.c0, v0.c2, rt1.c2, rt0.c2, rt1.c3, rt1.c4 FROM rt1 FULL OUTER JOIN v0 ON CAST(((rt1.c4) IS FALSE) AS TEXT) FULL OUTER JOIN rt0 ON (NULL IN ()) COLLATE BINARY GROUP BY rt0.c3, rt0.c0, rt1.c0, v0.c2, rt1.c2, rt0.c2, rt1.c3, rt1.c4 HAVING (NOT (COUNT(*) COLLATE RTRIM)) UNION ALL SELECT ALL rt0.c3, rt0.c0, rt1.c0, v0.c2, rt1.c2, rt0.c2, rt1.c3, rt1.c4 FROM rt1 FULL OUTER JOIN v0 ON CAST(((rt1.c4) IS FALSE) AS TEXT) FULL OUTER JOIN rt0 ON (NULL IN ()) COLLATE BINARY GROUP BY rt0.c3, rt0.c0, rt1.c0, v0.c2, rt1.c2, rt0.c2, rt1.c3, rt1.c4 HAVING ((COUNT(*) COLLATE RTRIM) ISNULL);
SELECT rt0.c3, rt0.c0, rt1.c0, v0.c2, rt1.c2, rt0.c2, rt1.c3, rt1.c4 FROM rt1 FULL OUTER JOIN v0 ON CAST(((rt1.c4) IS FALSE) AS TEXT) FULL OUTER JOIN rt0 ON (NULL IN ()) COLLATE BINARY GROUP BY rt0.c3, rt0.c0, rt1.c0, v0.c2, rt1.c2, rt0.c2, rt1.c3, rt1.c4;
SELECT ALL rt0.c3, rt0.c0, rt1.c0, v0.c2, rt1.c2, rt0.c2, rt1.c3, rt1.c4 FROM rt1 FULL OUTER JOIN v0 ON CAST(((rt1.c4) IS FALSE) AS TEXT) FULL OUTER JOIN rt0 ON (NULL IN ()) COLLATE BINARY GROUP BY rt0.c3, rt0.c0, rt1.c0, v0.c2, rt1.c2, rt0.c2, rt1.c3, rt1.c4 HAVING COUNT(*) COLLATE RTRIM UNION ALL SELECT ALL rt0.c3, rt0.c0, rt1.c0, v0.c2, rt1.c2, rt0.c2, rt1.c3, rt1.c4 FROM rt1 FULL OUTER JOIN v0 ON CAST(((rt1.c4) IS FALSE) AS TEXT) FULL OUTER JOIN rt0 ON (NULL IN ()) COLLATE BINARY GROUP BY rt0.c3, rt0.c0, rt1.c0, v0.c2, rt1.c2, rt0.c2, rt1.c3, rt1.c4 HAVING (NOT (COUNT(*) COLLATE RTRIM)) UNION ALL SELECT ALL rt0.c3, rt0.c0, rt1.c0, v0.c2, rt1.c2, rt0.c2, rt1.c3, rt1.c4 FROM rt1 FULL OUTER JOIN v0 ON CAST(((rt1.c4) IS FALSE) AS TEXT) FULL OUTER JOIN rt0 ON (NULL IN ()) COLLATE BINARY GROUP BY rt0.c3, rt0.c0, rt1.c0, v0.c2, rt1.c2, rt0.c2, rt1.c3, rt1.c4 HAVING ((COUNT(*) COLLATE RTRIM) ISNULL);
SELECT rt0.c3, rt0.c0, rt1.c0, v0.c2, rt1.c2, rt0.c2, rt1.c3, rt1.c4 FROM rt1 FULL OUTER JOIN v0 ON CAST(((rt1.c4) IS FALSE) AS TEXT) FULL OUTER JOIN rt0 ON (NULL IN ()) COLLATE BINARY GROUP BY rt0.c3, rt0.c0, rt1.c0, v0.c2, rt1.c2, rt0.c2, rt1.c3, rt1.c4;
SELECT ALL * FROM v0;
SELECT * FROM v0 WHERE ((((+ (v0.c0))) NOT BETWEEN (((v0.c1) NOT NULL)) AND (v0.c2))) UNION ALL SELECT * FROM v0 WHERE ((NOT ((((+ (v0.c0))) NOT BETWEEN (((v0.c1) NOT NULL)) AND (v0.c2))))) UNION ALL SELECT * FROM v0 WHERE ((((((+ (v0.c0))) NOT BETWEEN (((v0.c1) NOT NULL)) AND (v0.c2))) ISNULL));
SELECT ALL * FROM v0;
SELECT DISTINCT rt1.c2, rt0.c0, rt1.c0, rt1.c4, rt0.c3, rt1.c3, rt0.c1, rt1.c1, rt0.c4 FROM rt1, rt0;
SELECT DISTINCT rt1.c2, rt0.c0, rt1.c0, rt1.c4, rt0.c3, rt1.c3, rt0.c1, rt1.c1, rt0.c4 FROM rt1, rt0 WHERE (HEX(((((((((rt0.c3)OR(x'5e07')))AND(rt1.c1)))OR(rt0.c3)))AND(rt1.c0)))) UNION SELECT DISTINCT rt1.c2, rt0.c0, rt1.c0, rt1.c4, rt0.c3, rt1.c3, rt0.c1, rt1.c1, rt0.c4 FROM rt1, rt0 WHERE ((NOT (HEX(((((((((rt0.c3)OR(x'5e07')))AND(rt1.c1)))OR(rt0.c3)))AND(rt1.c0)))))) UNION SELECT DISTINCT rt1.c2, rt0.c0, rt1.c0, rt1.c4, rt0.c3, rt1.c3, rt0.c1, rt1.c1, rt0.c4 FROM rt1, rt0 WHERE (((HEX(((((((((rt0.c3)OR(x'5e07')))AND(rt1.c1)))OR(rt0.c3)))AND(rt1.c0)))) ISNULL));
SELECT DISTINCT rt1.c2, rt0.c0, rt1.c0, rt1.c4, rt0.c3, rt1.c3, rt0.c1, rt1.c1, rt0.c4 FROM rt1, rt0;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 WHERE (((((rt0.c3)&(rt0.c4))) IS FALSE)) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0 WHERE ((NOT (((((rt0.c3)&(rt0.c4))) IS FALSE)))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0 WHERE (((((((rt0.c3)&(rt0.c4))) IS FALSE)) ISNULL)) GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING v0.c0 UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (v0.c0)) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((v0.c0) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING v0.c0 UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (v0.c0)) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((v0.c0) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT * FROM rt1 NOT INDEXED;
SELECT ALL * FROM rt1 WHERE ((((((((((((((rt1.c2 IN (rt1.c3)))AND(rt1.c1)))OR(CAST(rt1.c4 AS NUMERIC))))AND(NULL)))AND((rt1.c4 IN ()))))AND(rt1.c2 COLLATE BINARY)))AND(((rt1.c1) NOTNULL)))) UNION ALL SELECT * FROM rt1 WHERE ((NOT ((((((((((((((rt1.c2 IN (rt1.c3)))AND(rt1.c1)))OR(CAST(rt1.c4 AS NUMERIC))))AND(NULL)))AND((rt1.c4 IN ()))))AND(rt1.c2 COLLATE BINARY)))AND(((rt1.c1) NOTNULL)))))) UNION ALL SELECT * FROM rt1 WHERE ((((((((((((((((rt1.c2 IN (rt1.c3)))AND(rt1.c1)))OR(CAST(rt1.c4 AS NUMERIC))))AND(NULL)))AND((rt1.c4 IN ()))))AND(rt1.c2 COLLATE BINARY)))AND(((rt1.c1) NOTNULL)))) ISNULL));
SELECT * FROM rt1 NOT INDEXED;
SELECT DISTINCT v0.c1, v0.c0, v0.c2 FROM v0;
SELECT DISTINCT v0.c1, v0.c0, v0.c2 FROM v0 WHERE (((((v0.c0) ISNULL)) IS TRUE)) UNION SELECT DISTINCT v0.c1, v0.c0, v0.c2 FROM v0 WHERE ((NOT (((((v0.c0) ISNULL)) IS TRUE)))) UNION SELECT DISTINCT v0.c1, v0.c0, v0.c2 FROM v0 WHERE (((((((v0.c0) ISNULL)) IS TRUE)) ISNULL));
SELECT DISTINCT v0.c1, v0.c0, v0.c2 FROM v0;
SELECT rt0.c2, v0.c1, rt0.c1, rt0.c3, rt0.c0, v0.c0 FROM v0, rt0 GROUP BY rt0.c2, v0.c1, rt0.c1, rt0.c3, rt0.c0, v0.c0;
SELECT rt0.c2, v0.c1, rt0.c1, rt0.c3, rt0.c0, v0.c0 FROM v0, rt0 WHERE ((((- (rt0.c4)))|(((v0.c1)IS(v0.c2))))) GROUP BY rt0.c2, v0.c1, rt0.c1, rt0.c3, rt0.c0, v0.c0 UNION SELECT rt0.c2, v0.c1, rt0.c1, rt0.c3, rt0.c0, v0.c0 FROM v0, rt0 WHERE ((NOT ((((- (rt0.c4)))|(((v0.c1)IS(v0.c2))))))) GROUP BY rt0.c2, v0.c1, rt0.c1, rt0.c3, rt0.c0, v0.c0 UNION SELECT rt0.c2, v0.c1, rt0.c1, rt0.c3, rt0.c0, v0.c0 FROM v0, rt0 WHERE ((((((- (rt0.c4)))|(((v0.c1)IS(v0.c2))))) ISNULL)) GROUP BY rt0.c2, v0.c1, rt0.c1, rt0.c3, rt0.c0, v0.c0;
SELECT rt0.c2, v0.c1, rt0.c1, rt0.c3, rt0.c0, v0.c0 FROM v0, rt0 GROUP BY rt0.c2, v0.c1, rt0.c1, rt0.c3, rt0.c0, v0.c0;
SELECT rt0.c1, rt0.c0, rt0.c4, rt0.c3, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c4, rt0.c3, rt0.c2;
SELECT rt0.c1, rt0.c0, rt0.c4, rt0.c3, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c4, rt0.c3, rt0.c2 HAVING MIN(((rt0.c2)==('\r2'))) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c4, rt0.c3, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c4, rt0.c3, rt0.c2 HAVING (NOT (MIN(((rt0.c2)=('\r2'))))) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c4, rt0.c3, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c4, rt0.c3, rt0.c2 HAVING ((MIN(((rt0.c2)==('\r2')))) ISNULL);
SELECT rt0.c1, rt0.c0, rt0.c4, rt0.c3, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c4, rt0.c3, rt0.c2;
SELECT rt0.c1, rt0.c0, rt0.c4, rt0.c3, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c4, rt0.c3, rt0.c2 HAVING MIN(((rt0.c2)==('\r2'))) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c4, rt0.c3, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c4, rt0.c3, rt0.c2 HAVING (NOT (MIN(((rt0.c2)=('\r2'))))) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c4, rt0.c3, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c4, rt0.c3, rt0.c2 HAVING ((MIN(((rt0.c2)==('\r2')))) ISNULL);
SELECT rt0.c1, rt0.c0, rt0.c4, rt0.c3, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c4, rt0.c3, rt0.c2;
SELECT ALL * FROM rt0;
SELECT * FROM rt0 WHERE (json_array(((rt0.c0)!=(rt0.c1)), highlight(rt0.c1, rt0.c0, rt0.c1, rt0.c4))) UNION ALL SELECT * FROM rt0 WHERE ((NOT (json_array(((rt0.c0)<>(rt0.c1)), highlight(rt0.c1, rt0.c0, rt0.c1, rt0.c4))))) UNION ALL SELECT * FROM rt0 WHERE (((json_array(((rt0.c0)!=(rt0.c1)), highlight(rt0.c1, rt0.c0, rt0.c1, rt0.c4))) ISNULL));
SELECT DISTINCT rt1.c0, rt1.c3, rt1.c4, rt1.c1, rt1.c2 FROM rt1;
SELECT DISTINCT rt1.c0, rt1.c3, rt1.c4, rt1.c1, rt1.c2 FROM rt1 WHERE (((json_array(rt1.c2, rt1.c0))*(rt1.c3))) UNION SELECT DISTINCT rt1.c0, rt1.c3, rt1.c4, rt1.c1, rt1.c2 FROM rt1 WHERE ((NOT (((json_array(rt1.c2, rt1.c0))*(rt1.c3))))) UNION SELECT DISTINCT rt1.c0, rt1.c3, rt1.c4, rt1.c1, rt1.c2 FROM rt1 WHERE (((((json_array(rt1.c2, rt1.c0))*(rt1.c3))) ISNULL));
SELECT DISTINCT rt1.c0, rt1.c3, rt1.c4, rt1.c1, rt1.c2 FROM rt1;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 WHERE (((-1771109149 COLLATE NOCASE)IS NOT(((rt0.c1)%(rt0.c3))))) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM rt0 WHERE ((NOT (((-1771109149 COLLATE NOCASE)IS NOT(((rt0.c1)%(rt0.c3))))))) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM rt0 WHERE (((((-1771109149 COLLATE NOCASE)IS NOT(((rt0.c1)%(rt0.c3))))) ISNULL)) GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0, rt1.c3, v0.c2, rt0.c1, rt1.c0, rt0.c2, rt1.c2, rt1.c4, v0.c0, rt0.c3, rt1.c1, v0.c1 FROM rt1, v0, rt0 GROUP BY rt0.c0, rt1.c3, v0.c2, rt0.c1, rt1.c0, rt0.c2, rt1.c2, rt1.c4, v0.c0, rt0.c3, rt1.c1, v0.c1;
SELECT ALL rt0.c0, rt1.c3, v0.c2, rt0.c1, rt1.c0, rt0.c2, rt1.c2, rt1.c4, v0.c0, rt0.c3, rt1.c1, v0.c1 FROM rt1, v0, rt0 GROUP BY rt0.c0, rt1.c3, v0.c2, rt0.c1, rt1.c0, rt0.c2, rt1.c2, rt1.c4, v0.c0, rt0.c3, rt1.c1, v0.c1 HAVING SUM(((SUM(rt1.c2)) IS TRUE)) UNION ALL SELECT ALL rt0.c0, rt1.c3, v0.c2, rt0.c1, rt1.c0, rt0.c2, rt1.c2, rt1.c4, v0.c0, rt0.c3, rt1.c1, v0.c1 FROM rt1, v0, rt0 GROUP BY rt0.c0, rt1.c3, v0.c2, rt0.c1, rt1.c0, rt0.c2, rt1.c2, rt1.c4, v0.c0, rt0.c3, rt1.c1, v0.c1 HAVING (NOT (SUM(((SUM(rt1.c2)) IS TRUE)))) UNION ALL SELECT ALL rt0.c0, rt1.c3, v0.c2, rt0.c1, rt1.c0, rt0.c2, rt1.c2, rt1.c4, v0.c0, rt0.c3, rt1.c1, v0.c1 FROM rt1, v0, rt0 GROUP BY rt0.c0, rt1.c3, v0.c2, rt0.c1, rt1.c0, rt0.c2, rt1.c2, rt1.c4, v0.c0, rt0.c3, rt1.c1, v0.c1 HAVING ((SUM(((SUM(rt1.c2)) IS TRUE))) ISNULL);
SELECT rt1.c4, rt1.c1, rt1.c2 FROM rt1;
SELECT rt1.c4, rt1.c1, rt1.c2 FROM rt1 WHERE (((((rt1.c3) BETWEEN (rt1.c4) AND (rt1.c2)))GLOB(((rt1.c4)<(rt1.c1))))) UNION ALL SELECT rt1.c4, rt1.c1, rt1.c2 FROM rt1 WHERE ((NOT (((((rt1.c3) BETWEEN (rt1.c4) AND (rt1.c2)))GLOB(((rt1.c4)<(rt1.c1))))))) UNION ALL SELECT ALL rt1.c4, rt1.c1, rt1.c2 FROM rt1 WHERE (((((((rt1.c3) BETWEEN (rt1.c4) AND (rt1.c2)))GLOB(((rt1.c4)<(rt1.c1))))) ISNULL));
SELECT rt1.c4, rt1.c1, rt1.c2 FROM rt1;
SELECT DISTINCT rt0.c0, rt0.c1, rt0.c3, v0.c1, v0.c2, rt0.c2, rt0.c4, v0.c0 FROM rt0 NOT INDEXED, v0;
SELECT DISTINCT rt0.c0, rt0.c1, rt0.c3, v0.c1, v0.c2, rt0.c2, rt0.c4, v0.c0 FROM rt0, v0 WHERE (CAST((((rt0.c4, rt0.c4, rt0.c2)) NOT BETWEEN ((rt0.c2, rt0.c4, rt0.c4)) AND ((rt0.c3, rt0.c1, rt0.c2))) AS TEXT)) UNION SELECT DISTINCT rt0.c0, rt0.c1, rt0.c3, v0.c1, v0.c2, rt0.c2, rt0.c4, v0.c0 FROM rt0, v0 WHERE ((NOT (CAST((((rt0.c4, rt0.c4, rt0.c2)) NOT BETWEEN ((rt0.c2, rt0.c4, rt0.c4)) AND ((rt0.c3, rt0.c1, rt0.c2))) AS TEXT)))) UNION SELECT DISTINCT rt0.c0, rt0.c1, rt0.c3, v0.c1, v0.c2, rt0.c2, rt0.c4, v0.c0 FROM rt0, v0 WHERE (((CAST((((rt0.c4, rt0.c4, rt0.c2)) NOT BETWEEN ((rt0.c2, rt0.c4, rt0.c4)) AND ((rt0.c3, rt0.c1, rt0.c2))) AS TEXT)) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c1, rt0.c3, v0.c1, v0.c2, rt0.c2, rt0.c4, v0.c0 FROM rt0 NOT INDEXED, v0;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 WHERE ((((rt0.c4, rt0.c4, rt0.c3)) BETWEEN ((((rt0.c4)>>(rt0.c0)), (((rt0.c2)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c0))), rt0.c0)) AND (('', ((rt0.c3) NOTNULL), rt0.c1 COLLATE NOCASE)))) GROUP BY rt0.c2, rt0.c1 UNION SELECT rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT ((((rt0.c4, rt0.c4, rt0.c3)) BETWEEN ((((rt0.c4)>>(rt0.c0)), (((rt0.c2)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c0))), rt0.c0)) AND (('', ((rt0.c3) NOTNULL), rt0.c1 COLLATE NOCASE)))))) GROUP BY rt0.c2, rt0.c1 UNION SELECT rt0.c2, rt0.c1 FROM rt0 WHERE ((((((rt0.c4, rt0.c4, rt0.c3)) BETWEEN ((((rt0.c4)>>(rt0.c0)), (((rt0.c2)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c0))), rt0.c0)) AND (('', ((rt0.c3) NOTNULL), rt0.c1 COLLATE NOCASE)))) ISNULL)) GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT ALL v0.c2, v0.c1, v0.c0 FROM v0 GROUP BY v0.c2, v0.c1, v0.c0;
SELECT v0.c2, v0.c1, v0.c0 FROM v0 GROUP BY v0.c2, v0.c1, v0.c0 HAVING NULLIF(DISTINCT CASE COUNT(*)  WHEN COUNT(-1.771109149E9) THEN MIN(v0.c2) ELSE MAX(v0.c2) END, 0.5199877613143581) UNION ALL SELECT v0.c2, v0.c1, v0.c0 FROM v0 GROUP BY v0.c2, v0.c1, v0.c0 HAVING (NOT (NULLIF(DISTINCT CASE COUNT(*)  WHEN COUNT(-1.771109149E9) THEN MIN(v0.c2) ELSE MAX(v0.c2) END, 0.5199877613143581))) UNION ALL SELECT ALL v0.c2, v0.c1, v0.c0 FROM v0 GROUP BY v0.c2, v0.c1, v0.c0 HAVING ((NULLIF(DISTINCT CASE COUNT(*)  WHEN COUNT(-1.771109149E9) THEN MIN(v0.c2) ELSE MAX(v0.c2) END, 0.5199877613143581)) ISNULL);
SELECT ALL v0.c2, v0.c1, v0.c0 FROM v0 GROUP BY v0.c2, v0.c1, v0.c0;
SELECT v0.c2, v0.c1, v0.c0 FROM v0 GROUP BY v0.c2, v0.c1, v0.c0 HAVING NULLIF(DISTINCT CASE COUNT(*)  WHEN COUNT(-1.771109149E9) THEN MIN(v0.c2) ELSE MAX(v0.c2) END, 0.5199877613143581) UNION ALL SELECT v0.c2, v0.c1, v0.c0 FROM v0 GROUP BY v0.c2, v0.c1, v0.c0 HAVING (NOT (NULLIF(DISTINCT CASE COUNT(*)  WHEN COUNT(-1.771109149E9) THEN MIN(v0.c2) ELSE MAX(v0.c2) END, 0.5199877613143581))) UNION ALL SELECT ALL v0.c2, v0.c1, v0.c0 FROM v0 GROUP BY v0.c2, v0.c1, v0.c0 HAVING ((NULLIF(DISTINCT CASE COUNT(*)  WHEN COUNT(-1.771109149E9) THEN MIN(v0.c2) ELSE MAX(v0.c2) END, 0.5199877613143581)) ISNULL);
SELECT ALL v0.c2, v0.c1, v0.c0 FROM v0 GROUP BY v0.c2, v0.c1, v0.c0;
SELECT rt0.c2, rt0.c1, rt0.c0, rt0.c4 FROM rt0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0, rt0.c4 FROM rt0 WHERE (((((CASE WHEN rt0.c2 THEN rt0.c0 END)AND(0.28940295957646733)))OR(((rt0.c0)IS NOT(rt0.c2))))) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0, rt0.c4 FROM rt0 WHERE ((NOT (((((CASE WHEN rt0.c2 THEN rt0.c0 END)AND(0.28940295957646733)))OR(((rt0.c0)IS NOT(rt0.c2))))))) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0, rt0.c4 FROM rt0 WHERE (((((((CASE WHEN rt0.c2 THEN rt0.c0 END)AND(0.28940295957646733)))OR(((rt0.c0)IS NOT(rt0.c2))))) ISNULL));
SELECT rt0.c2, rt0.c1, rt0.c0, rt0.c4 FROM rt0;
SELECT DISTINCT * FROM rt0, rt1;
SELECT DISTINCT * FROM rt0, rt1 WHERE (-1961318388) UNION SELECT DISTINCT * FROM rt0, rt1 WHERE ((NOT (-1961318388))) UNION SELECT DISTINCT * FROM rt0, rt1 WHERE (((-1961318388) ISNULL));
SELECT DISTINCT * FROM rt0, rt1;
SELECT rt1.c3, rt1.c0, rt0.c0, rt1.c4, rt0.c1, v0.c1, rt1.c1, v0.c0, rt0.c2, rt1.c2, v0.c2 FROM v0, rt1, rt0 GROUP BY rt1.c3, rt1.c0, rt0.c0, rt1.c4, rt0.c1, v0.c1, rt1.c1, v0.c0, rt0.c2, rt1.c2, v0.c2;
SELECT ALL rt1.c3, rt1.c0, rt0.c0, rt1.c4, rt0.c1, v0.c1, rt1.c1, v0.c0, rt0.c2, rt1.c2, v0.c2 FROM v0, rt1, rt0 WHERE (v0.c0) GROUP BY rt1.c3, rt1.c0, rt0.c0, rt1.c4, rt0.c1, v0.c1, rt1.c1, v0.c0, rt0.c2, rt1.c2, v0.c2 UNION SELECT ALL rt1.c3, rt1.c0, rt0.c0, rt1.c4, rt0.c1, v0.c1, rt1.c1, v0.c0, rt0.c2, rt1.c2, v0.c2 FROM v0, rt1, rt0 WHERE ((NOT (v0.c0))) GROUP BY rt1.c3, rt1.c0, rt0.c0, rt1.c4, rt0.c1, v0.c1, rt1.c1, v0.c0, rt0.c2, rt1.c2, v0.c2 UNION SELECT ALL rt1.c3, rt1.c0, rt0.c0, rt1.c4, rt0.c1, v0.c1, rt1.c1, v0.c0, rt0.c2, rt1.c2, v0.c2 FROM v0, rt1, rt0 WHERE (((v0.c0) ISNULL)) GROUP BY rt1.c3, rt1.c0, rt0.c0, rt1.c4, rt0.c1, v0.c1, rt1.c1, v0.c0, rt0.c2, rt1.c2, v0.c2;
SELECT rt1.c3, rt1.c0, rt0.c0, rt1.c4, rt0.c1, v0.c1, rt1.c1, v0.c0, rt0.c2, rt1.c2, v0.c2 FROM v0, rt1, rt0 GROUP BY rt1.c3, rt1.c0, rt0.c0, rt1.c4, rt0.c1, v0.c1, rt1.c1, v0.c0, rt0.c2, rt1.c2, v0.c2;
SELECT ALL rt0.c0, rt0.c4, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c4, rt0.c2;
SELECT rt0.c0, rt0.c4, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c4, rt0.c2 HAVING (((rt0.c4)) BETWEEN ((json_valid(rt0.c2))) AND ((((rt0.c0)==(AVG(rt0.c2)))))) UNION ALL SELECT ALL rt0.c0, rt0.c4, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c4, rt0.c2 HAVING (NOT ((((rt0.c4)) BETWEEN ((json_valid(rt0.c2))) AND ((((rt0.c0)==(AVG(rt0.c2)))))))) UNION ALL SELECT ALL rt0.c0, rt0.c4, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c4, rt0.c2 HAVING (((((rt0.c4)) BETWEEN ((json_valid(rt0.c2))) AND ((((rt0.c0)==(AVG(rt0.c2))))))) ISNULL);
SELECT ALL rt0.c0, rt0.c4, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c4, rt0.c2;
SELECT rt0.c0, rt0.c4, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c4, rt0.c2 HAVING (((rt0.c4)) BETWEEN ((json_valid(rt0.c2))) AND ((((rt0.c0)==(AVG(rt0.c2)))))) UNION ALL SELECT ALL rt0.c0, rt0.c4, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c4, rt0.c2 HAVING (NOT ((((rt0.c4)) BETWEEN ((json_valid(rt0.c2))) AND ((((rt0.c0)==(AVG(rt0.c2)))))))) UNION ALL SELECT ALL rt0.c0, rt0.c4, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c4, rt0.c2 HAVING (((((rt0.c4)) BETWEEN ((json_valid(rt0.c2))) AND ((((rt0.c0)==(AVG(rt0.c2))))))) ISNULL);
SELECT ALL rt0.c0, rt0.c4, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c4, rt0.c2;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (CAST(CAST(']淲<ᝐv{5ct' AS NUMERIC) AS TEXT)) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (CAST(CAST(']淲<ᝐv{5ct' AS NUMERIC) AS TEXT)))) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (((CAST(CAST(']淲<ᝐv{5ct' AS NUMERIC) AS TEXT)) ISNULL));
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0;
SELECT DISTINCT * FROM rt0, v0;
SELECT DISTINCT * FROM rt0, v0 WHERE (x'6972') UNION SELECT DISTINCT * FROM rt0, v0 WHERE ((NOT (x'6972'))) UNION SELECT DISTINCT * FROM rt0, v0 WHERE (((x'6972') ISNULL));
SELECT DISTINCT * FROM rt0, v0;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE (CAST(CAST(rt0.c3 AS NUMERIC) AS INTEGER)) GROUP BY rt0.c2, rt0.c0, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (CAST(CAST(rt0.c3 AS NUMERIC) AS INTEGER)))) GROUP BY rt0.c2, rt0.c0, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE (((CAST(CAST(rt0.c3 AS NUMERIC) AS INTEGER)) ISNULL)) GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT v0.c1 FROM v0, rt1 GROUP BY v0.c1;
SELECT v0.c1 FROM v0, rt1 GROUP BY v0.c1 HAVING COUNT(*) UNION ALL SELECT v0.c1 FROM v0, rt1 GROUP BY v0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL v0.c1 FROM v0, rt1 GROUP BY v0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT v0.c1 FROM v0, rt1 GROUP BY v0.c1;
SELECT v0.c1 FROM v0, rt1 GROUP BY v0.c1 HAVING COUNT(*) UNION ALL SELECT v0.c1 FROM v0, rt1 GROUP BY v0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL v0.c1 FROM v0, rt1 GROUP BY v0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT v0.c1 FROM v0, rt1 GROUP BY v0.c1;
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE (rt0.c3 COLLATE NOCASE) UNION ALL SELECT * FROM rt0 WHERE ((NOT (rt0.c3 COLLATE NOCASE))) UNION ALL SELECT ALL * FROM rt0 WHERE (((rt0.c3 COLLATE NOCASE) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT * FROM rt1;
SELECT DISTINCT * FROM rt1 WHERE (LTRIM(rt1.c1, json_type(rt1.c2))) UNION SELECT DISTINCT * FROM rt1 WHERE ((NOT (LTRIM(rt1.c1, json_type(rt1.c2))))) UNION SELECT DISTINCT * FROM rt1 WHERE (((LTRIM(rt1.c1, json_type(rt1.c2))) ISNULL));
SELECT DISTINCT * FROM rt1;
SELECT ALL v0.c0, v0.c2 FROM v0 GROUP BY v0.c0, v0.c2;
SELECT v0.c0, v0.c2 FROM v0 WHERE ((((v0.c1, v0.c1, v0.c1, v0.c0, v0.c0, v0.c2, v0.c1)) BETWEEN ((0.990165230558079, LOWER(DISTINCT v0.c2), (- (v0.c0)), CASE WHEN v0.c2 THEN '\nwD2欃qE䆀X' ELSE v0.c1 END, (~ (v0.c0)), ((v0.c2) BETWEEN (v0.c1) AND (v0.c0)), ((v0.c1) NOT BETWEEN (v0.c0) AND (v0.c0)))) AND ((v0.c2, ((v0.c0)&(v0.c2)), v0.c2 COLLATE BINARY, -1771109149, v0.c0, v0.c1 COLLATE RTRIM, CASE v0.c2  WHEN v0.c1 THEN 0.21101881596543492 END)))) GROUP BY v0.c0, v0.c2 UNION SELECT v0.c0, v0.c2 FROM v0 WHERE ((NOT ((((v0.c1, v0.c1, v0.c1, v0.c0, v0.c0, v0.c2, v0.c1)) BETWEEN ((0.990165230558079, LOWER(DISTINCT v0.c2), (- (v0.c0)), CASE WHEN v0.c2 THEN '\nwD2欃qE䆀X' ELSE v0.c1 END, (~ (v0.c0)), ((v0.c2) BETWEEN (v0.c1) AND (v0.c0)), ((v0.c1) NOT BETWEEN (v0.c0) AND (v0.c0)))) AND ((v0.c2, ((v0.c0)&(v0.c2)), v0.c2 COLLATE BINARY, -1771109149, v0.c0, v0.c1 COLLATE RTRIM, CASE v0.c2  WHEN v0.c1 THEN 0.21101881596543492 END)))))) GROUP BY v0.c0, v0.c2 UNION SELECT ALL v0.c0, v0.c2 FROM v0 WHERE ((((((v0.c1, v0.c1, v0.c1, v0.c0, v0.c0, v0.c2, v0.c1)) BETWEEN ((0.990165230558079, LOWER(DISTINCT v0.c2), (- (v0.c0)), CASE WHEN v0.c2 THEN '\nwD2欃qE䆀X' ELSE v0.c1 END, (~ (v0.c0)), ((v0.c2) BETWEEN (v0.c1) AND (v0.c0)), ((v0.c1) NOT BETWEEN (v0.c0) AND (v0.c0)))) AND ((v0.c2, ((v0.c0)&(v0.c2)), v0.c2 COLLATE BINARY, -1771109149, v0.c0, v0.c1 COLLATE RTRIM, CASE v0.c2  WHEN v0.c1 THEN 0.21101881596543492 END)))) ISNULL)) GROUP BY v0.c0, v0.c2;
SELECT ALL v0.c0, v0.c2 FROM v0 GROUP BY v0.c0, v0.c2;
SELECT ALL v0.c0, rt1.c3, rt1.c0, rt1.c4, rt1.c1, v0.c2, rt1.c2 FROM v0, rt1 GROUP BY v0.c0, rt1.c3, rt1.c0, rt1.c4, rt1.c1, v0.c2, rt1.c2;
SELECT v0.c0, rt1.c3, rt1.c0, rt1.c4, rt1.c1, v0.c2, rt1.c2 FROM v0, rt1 GROUP BY v0.c0, rt1.c3, rt1.c0, rt1.c4, rt1.c1, v0.c2, rt1.c2 HAVING COUNT(MAX(MAX(rt1.c2))) UNION ALL SELECT v0.c0, rt1.c3, rt1.c0, rt1.c4, rt1.c1, v0.c2, rt1.c2 FROM v0, rt1 GROUP BY v0.c0, rt1.c3, rt1.c0, rt1.c4, rt1.c1, v0.c2, rt1.c2 HAVING (NOT (COUNT(MAX(MAX(rt1.c2))))) UNION ALL SELECT v0.c0, rt1.c3, rt1.c0, rt1.c4, rt1.c1, v0.c2, rt1.c2 FROM v0, rt1 GROUP BY v0.c0, rt1.c3, rt1.c0, rt1.c4, rt1.c1, v0.c2, rt1.c2 HAVING ((COUNT(MAX(MAX(rt1.c2)))) ISNULL);
SELECT ALL rt0.c4, rt0.c3, rt0.c2, rt0.c0 FROM rt0;
SELECT ALL rt0.c4, rt0.c3, rt0.c2, rt0.c0 FROM rt0 WHERE (CASE WHEN ((-1071550920) NOT BETWEEN (rt0.c2) AND (rt0.c3)) THEN ((rt0.c1)OR(rt0.c3)) END) UNION ALL SELECT ALL rt0.c4, rt0.c3, rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (CASE WHEN ((-1071550920) NOT BETWEEN (rt0.c2) AND (rt0.c3)) THEN ((rt0.c1)OR(rt0.c3)) END))) UNION ALL SELECT ALL rt0.c4, rt0.c3, rt0.c2, rt0.c0 FROM rt0 WHERE (((CASE WHEN ((-1071550920) NOT BETWEEN (rt0.c2) AND (rt0.c3)) THEN ((rt0.c1)OR(rt0.c3)) END) ISNULL));
SELECT ALL rt0.c4, rt0.c3, rt0.c2, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c0, rt1.c3, v0.c2, rt0.c4, rt1.c0, v0.c0, rt0.c3, rt1.c1, v0.c1, rt0.c2 FROM rt0 FULL OUTER JOIN v0 ON rt1.c0 INNER JOIN rt1 ON QUOTE((~ (x'')));
SELECT v0.c2 FROM v0 GROUP BY v0.c2;
SELECT v0.c2 FROM v0 WHERE (IFNULL(CAST(v0.c2 AS BLOB), NULL)) GROUP BY v0.c2 UNION SELECT ALL v0.c2 FROM v0 WHERE ((NOT (IFNULL(CAST(v0.c2 AS BLOB), NULL)))) GROUP BY v0.c2 UNION SELECT ALL v0.c2 FROM v0 WHERE (((IFNULL(CAST(v0.c2 AS BLOB), NULL)) ISNULL)) GROUP BY v0.c2;
SELECT v0.c2 FROM v0 GROUP BY v0.c2;
SELECT ALL rt0.c2, rt1.c4, rt1.c3, v0.c2, rt1.c1, v0.c1, rt1.c0, v0.c0, rt0.c3, rt0.c1, rt0.c4, rt0.c0 FROM rt1, rt0, v0 GROUP BY rt0.c2, rt1.c4, rt1.c3, v0.c2, rt1.c1, v0.c1, rt1.c0, v0.c0, rt0.c3, rt0.c1, rt0.c4, rt0.c0;
SELECT ALL rt0.c2, rt1.c4, rt1.c3, v0.c2, rt1.c1, v0.c1, rt1.c0, v0.c0, rt0.c3, rt0.c1, rt0.c4, rt0.c0 FROM rt1, rt0, v0 GROUP BY rt0.c2, rt1.c4, rt1.c3, v0.c2, rt1.c1, v0.c1, rt1.c0, v0.c0, rt0.c3, rt0.c1, rt0.c4, rt0.c0 HAVING CASE WHEN GROUP_CONCAT(MIN(TOTAL(MIN(rt1.c1)))) THEN v0.c2 END UNION ALL SELECT rt0.c2, rt1.c4, rt1.c3, v0.c2, rt1.c1, v0.c1, rt1.c0, v0.c0, rt0.c3, rt0.c1, rt0.c4, rt0.c0 FROM rt1, rt0, v0 GROUP BY rt0.c2, rt1.c4, rt1.c3, v0.c2, rt1.c1, v0.c1, rt1.c0, v0.c0, rt0.c3, rt0.c1, rt0.c4, rt0.c0 HAVING (NOT (CASE WHEN GROUP_CONCAT(MIN(TOTAL(MIN(rt1.c1)))) THEN v0.c2 END)) UNION ALL SELECT rt0.c2, rt1.c4, rt1.c3, v0.c2, rt1.c1, v0.c1, rt1.c0, v0.c0, rt0.c3, rt0.c1, rt0.c4, rt0.c0 FROM rt1, rt0, v0 GROUP BY rt0.c2, rt1.c4, rt1.c3, v0.c2, rt1.c1, v0.c1, rt1.c0, v0.c0, rt0.c3, rt0.c1, rt0.c4, rt0.c0 HAVING ((CASE WHEN GROUP_CONCAT(MIN(TOTAL(MIN(rt1.c1)))) THEN v0.c2 END) ISNULL);
SELECT ALL rt1.c3, rt0.c0, v0.c1, rt1.c1, v0.c0, rt0.c2, rt0.c3, rt0.c1, rt1.c4 FROM rt0 FULL OUTER JOIN v0 ON (((NOT (rt1.c2)))!=((~ (rt1.c0)))) CROSS JOIN rt1 ON UNLIKELY(CAST(rt1.c4 AS TEXT));
SELECT DISTINCT rt0.c0, v0.c1, rt0.c2 FROM v0, rt0;
SELECT DISTINCT rt0.c0, v0.c1, rt0.c2 FROM v0, rt0 WHERE (((((v0.c0) IS TRUE)) NOT NULL)) UNION SELECT DISTINCT rt0.c0, v0.c1, rt0.c2 FROM v0, rt0 WHERE ((NOT (((((v0.c0) IS TRUE)) NOT NULL)))) UNION SELECT DISTINCT rt0.c0, v0.c1, rt0.c2 FROM v0, rt0 WHERE (((((((v0.c0) IS TRUE)) NOT NULL)) ISNULL));
SELECT DISTINCT rt0.c0, v0.c1, rt0.c2 FROM v0, rt0;
SELECT rt1.c3, rt1.c4, rt1.c2, rt1.c0, rt1.c1 FROM rt1 GROUP BY rt1.c3, rt1.c4, rt1.c2, rt1.c0, rt1.c1;
SELECT ALL rt1.c3, rt1.c4, rt1.c2, rt1.c0, rt1.c1 FROM rt1 WHERE ((((CASE rt1.c2  WHEN rt1.c1 THEN 0.4574022921868003 WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c1 ELSE rt1.c3 END))>=((((((rt1.c0)AND(rt1.c4)))AND(rt1.c0)))))) GROUP BY rt1.c3, rt1.c4, rt1.c2, rt1.c0, rt1.c1 UNION SELECT rt1.c3, rt1.c4, rt1.c2, rt1.c0, rt1.c1 FROM rt1 WHERE ((NOT ((((CASE rt1.c2  WHEN rt1.c1 THEN 0.4574022921868003 WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c1 ELSE rt1.c3 END))>=((((((rt1.c0)AND(rt1.c4)))AND(rt1.c0)))))))) GROUP BY rt1.c3, rt1.c4, rt1.c2, rt1.c0, rt1.c1 UNION SELECT rt1.c3, rt1.c4, rt1.c2, rt1.c0, rt1.c1 FROM rt1 WHERE ((((((CASE rt1.c2  WHEN rt1.c1 THEN 0.4574022921868003 WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c1 ELSE rt1.c3 END))>=((((((rt1.c0)AND(rt1.c4)))AND(rt1.c0)))))) ISNULL)) GROUP BY rt1.c3, rt1.c4, rt1.c2, rt1.c0, rt1.c1;
SELECT rt1.c3, rt1.c4, rt1.c2, rt1.c0, rt1.c1 FROM rt1 GROUP BY rt1.c3, rt1.c4, rt1.c2, rt1.c0, rt1.c1;
SELECT ALL rt1.c4 FROM rt1 GROUP BY rt1.c4;
SELECT rt1.c4 FROM rt1 GROUP BY rt1.c4 HAVING TOTAL((x'' IN ())) UNION ALL SELECT rt1.c4 FROM rt1 GROUP BY rt1.c4 HAVING (NOT (TOTAL((x'' IN ())))) UNION ALL SELECT ALL rt1.c4 FROM rt1 GROUP BY rt1.c4 HAVING ((TOTAL((x'' IN ()))) ISNULL);
SELECT ALL rt1.c4 FROM rt1 GROUP BY rt1.c4;
SELECT rt1.c4 FROM rt1 GROUP BY rt1.c4 HAVING TOTAL((x'' IN ())) UNION ALL SELECT rt1.c4 FROM rt1 GROUP BY rt1.c4 HAVING (NOT (TOTAL((x'' IN ())))) UNION ALL SELECT ALL rt1.c4 FROM rt1 GROUP BY rt1.c4 HAVING ((TOTAL((x'' IN ()))) ISNULL);
SELECT ALL rt1.c4 FROM rt1 GROUP BY rt1.c4;
SELECT * FROM rt1;
SELECT ALL * FROM rt1 WHERE ((((('')OR(((rt1.c3)==(rt1.c2)))))OR((rt1.c2 IN ())))) UNION ALL SELECT ALL * FROM rt1 WHERE ((NOT ((((('')OR(((rt1.c3)=(rt1.c2)))))OR((rt1.c2 IN ())))))) UNION ALL SELECT ALL * FROM rt1 WHERE ((((((('')OR(((rt1.c3)==(rt1.c2)))))OR((rt1.c2 IN ())))) ISNULL));
SELECT * FROM rt1;
SELECT DISTINCT rt1.c0, rt1.c4, v0.c1, rt1.c2, rt1.c1, v0.c0, v0.c2 FROM rt1, v0;
SELECT DISTINCT rt1.c0, rt1.c4, v0.c1, rt1.c2, rt1.c1, v0.c0, v0.c2 FROM rt1, v0 WHERE (rt1.c3) UNION SELECT DISTINCT rt1.c0, rt1.c4, v0.c1, rt1.c2, rt1.c1, v0.c0, v0.c2 FROM rt1, v0 WHERE ((NOT (rt1.c3))) UNION SELECT DISTINCT rt1.c0, rt1.c4, v0.c1, rt1.c2, rt1.c1, v0.c0, v0.c2 FROM rt1, v0 WHERE (((rt1.c3) ISNULL));
SELECT DISTINCT rt1.c0, rt1.c4, v0.c1, rt1.c2, rt1.c1, v0.c0, v0.c2 FROM rt1, v0;
SELECT rt0.c4, rt0.c3, rt0.c1, rt1.c1, rt1.c4, rt0.c2, rt0.c0, rt1.c2 FROM rt0, rt1 GROUP BY rt0.c4, rt0.c3, rt0.c1, rt1.c1, rt1.c4, rt0.c2, rt0.c0, rt1.c2;
SELECT rt0.c4, rt0.c3, rt0.c1, rt1.c1, rt1.c4, rt0.c2, rt0.c0, rt1.c2 FROM rt0, rt1 WHERE (CAST(UNLIKELY(DISTINCT rt0.c4) AS INTEGER)) GROUP BY rt0.c4, rt0.c3, rt0.c1, rt1.c1, rt1.c4, rt0.c2, rt0.c0, rt1.c2 UNION SELECT ALL rt0.c4, rt0.c3, rt0.c1, rt1.c1, rt1.c4, rt0.c2, rt0.c0, rt1.c2 FROM rt0, rt1 WHERE ((NOT (CAST(UNLIKELY(DISTINCT rt0.c4) AS INTEGER)))) GROUP BY rt0.c4, rt0.c3, rt0.c1, rt1.c1, rt1.c4, rt0.c2, rt0.c0, rt1.c2 UNION SELECT rt0.c4, rt0.c3, rt0.c1, rt1.c1, rt1.c4, rt0.c2, rt0.c0, rt1.c2 FROM rt0, rt1 WHERE (((CAST(UNLIKELY(DISTINCT rt0.c4) AS INTEGER)) ISNULL)) GROUP BY rt0.c4, rt0.c3, rt0.c1, rt1.c1, rt1.c4, rt0.c2, rt0.c0, rt1.c2;
SELECT rt0.c4, rt0.c3, rt0.c1, rt1.c1, rt1.c4, rt0.c2, rt0.c0, rt1.c2 FROM rt0, rt1 GROUP BY rt0.c4, rt0.c3, rt0.c1, rt1.c1, rt1.c4, rt0.c2, rt0.c0, rt1.c2;
SELECT rt1.c2 FROM rt1 GROUP BY rt1.c2;
SELECT ALL rt1.c2 FROM rt1 GROUP BY rt1.c2 HAVING (TOTAL(rt1.c0) IN (MAX(MAX(TOTAL(COUNT(MAX(rt1.c2))))))) UNION ALL SELECT ALL rt1.c2 FROM rt1 GROUP BY rt1.c2 HAVING (NOT ((TOTAL(rt1.c0) IN (MAX(MAX(TOTAL(COUNT(MAX(rt1.c2))))))))) UNION ALL SELECT ALL rt1.c2 FROM rt1 GROUP BY rt1.c2 HAVING (((TOTAL(rt1.c0) IN (MAX(MAX(TOTAL(COUNT(MAX(rt1.c2)))))))) ISNULL);
SELECT * FROM rt0 INNER JOIN v0 ON CAST(CAST(rt0.c1 AS BLOB) AS REAL);
SELECT * FROM rt0 INNER JOIN v0 ON CAST(CAST(rt0.c1 AS BLOB) AS REAL) WHERE (((NULLIF(rt0.c2, v0.c0)) NOT BETWEEN (CAST(v0.c0 AS INTEGER)) AND (rt0.c1))) UNION ALL SELECT * FROM rt0 INNER JOIN v0 ON CAST(CAST(rt0.c1 AS BLOB) AS REAL) WHERE ((NOT (((NULLIF(rt0.c2, v0.c0)) NOT BETWEEN (CAST(v0.c0 AS INTEGER)) AND (rt0.c1))))) UNION ALL SELECT ALL * FROM rt0 INNER JOIN v0 ON CAST(CAST(rt0.c1 AS BLOB) AS REAL) WHERE (((((NULLIF(rt0.c2, v0.c0)) NOT BETWEEN (CAST(v0.c0 AS INTEGER)) AND (rt0.c1))) ISNULL));
SELECT * FROM rt0 INNER JOIN v0 ON CAST(CAST(rt0.c1 AS BLOB) AS REAL);
SELECT DISTINCT * FROM v0, rt0, rt1;
SELECT DISTINCT * FROM v0, rt0, rt1 WHERE (((v0.c0) NOT NULL)) UNION SELECT DISTINCT * FROM v0, rt0, rt1 WHERE ((NOT (((v0.c0) NOT NULL)))) UNION SELECT DISTINCT * FROM v0, rt0, rt1 WHERE (((((v0.c0) NOT NULL)) ISNULL));
SELECT DISTINCT * FROM v0, rt0, rt1;
SELECT rt0.c4, rt0.c0 FROM rt0, v0 GROUP BY rt0.c4, rt0.c0;
SELECT rt0.c4, rt0.c0 FROM rt0, v0 WHERE (0.8515997274135093) GROUP BY rt0.c4, rt0.c0 UNION SELECT ALL rt0.c4, rt0.c0 FROM rt0, v0 WHERE ((NOT (0.8515997274135093))) GROUP BY rt0.c4, rt0.c0 UNION SELECT rt0.c4, rt0.c0 FROM rt0, v0 WHERE (((0.8515997274135093) ISNULL)) GROUP BY rt0.c4, rt0.c0;
SELECT rt0.c4, rt0.c0 FROM rt0, v0 GROUP BY rt0.c4, rt0.c0;
SELECT ALL rt0.c4, rt1.c2, rt1.c3, rt0.c2, rt0.c1 FROM rt0, rt1 GROUP BY rt0.c4, rt1.c2, rt1.c3, rt0.c2, rt0.c1;
SELECT ALL rt0.c4, rt1.c2, rt1.c3, rt0.c2, rt0.c1 FROM rt0, rt1 GROUP BY rt0.c4, rt1.c2, rt1.c3, rt0.c2, rt0.c1 HAVING GROUP_CONCAT(rt0.c1) COLLATE RTRIM UNION ALL SELECT rt0.c4, rt1.c2, rt1.c3, rt0.c2, rt0.c1 FROM rt0, rt1 GROUP BY rt0.c4, rt1.c2, rt1.c3, rt0.c2, rt0.c1 HAVING (NOT (GROUP_CONCAT(rt0.c1) COLLATE RTRIM)) UNION ALL SELECT rt0.c4, rt1.c2, rt1.c3, rt0.c2, rt0.c1 FROM rt0, rt1 GROUP BY rt0.c4, rt1.c2, rt1.c3, rt0.c2, rt0.c1 HAVING ((GROUP_CONCAT(rt0.c1) COLLATE RTRIM) ISNULL);
SELECT ALL rt0.c4, rt1.c2, rt1.c3, rt0.c2, rt0.c1 FROM rt0, rt1 GROUP BY rt0.c4, rt1.c2, rt1.c3, rt0.c2, rt0.c1;
SELECT ALL rt0.c4, rt1.c2, rt1.c3, rt0.c2, rt0.c1 FROM rt0, rt1 GROUP BY rt0.c4, rt1.c2, rt1.c3, rt0.c2, rt0.c1 HAVING GROUP_CONCAT(rt0.c1) COLLATE RTRIM UNION ALL SELECT rt0.c4, rt1.c2, rt1.c3, rt0.c2, rt0.c1 FROM rt0, rt1 GROUP BY rt0.c4, rt1.c2, rt1.c3, rt0.c2, rt0.c1 HAVING (NOT (GROUP_CONCAT(rt0.c1) COLLATE RTRIM)) UNION ALL SELECT rt0.c4, rt1.c2, rt1.c3, rt0.c2, rt0.c1 FROM rt0, rt1 GROUP BY rt0.c4, rt1.c2, rt1.c3, rt0.c2, rt0.c1 HAVING ((GROUP_CONCAT(rt0.c1) COLLATE RTRIM) ISNULL);
SELECT ALL rt0.c4, rt1.c2, rt1.c3, rt0.c2, rt0.c1 FROM rt0, rt1 GROUP BY rt0.c4, rt1.c2, rt1.c3, rt0.c2, rt0.c1;
SELECT ALL * FROM v0;
SELECT * FROM v0 WHERE (((CASE v0.c0  WHEN v0.c0 THEN v0.c2 WHEN v0.c0 THEN v0.c0 WHEN v0.c2 THEN v0.c2 WHEN v0.c2 THEN v0.c2 WHEN 'C8' THEN v0.c2 ELSE NULL END) NOT BETWEEN (((((((((((((v0.c0)AND(x'')))AND(v0.c1)))OR(v0.c0)))OR(v0.c1)))AND(v0.c0)))OR(v0.c0))) AND ((((('')AND(v0.c0)))OR(v0.c2))))) UNION ALL SELECT ALL * FROM v0 WHERE ((NOT (((CASE v0.c0  WHEN v0.c0 THEN v0.c2 WHEN v0.c0 THEN v0.c0 WHEN v0.c2 THEN v0.c2 WHEN v0.c2 THEN v0.c2 WHEN 'C8' THEN v0.c2 ELSE NULL END) NOT BETWEEN (((((((((((((v0.c0)AND(x'')))AND(v0.c1)))OR(v0.c0)))OR(v0.c1)))AND(v0.c0)))OR(v0.c0))) AND ((((('')AND(v0.c0)))OR(v0.c2))))))) UNION ALL SELECT * FROM v0 WHERE (((((CASE v0.c0  WHEN v0.c0 THEN v0.c2 WHEN v0.c0 THEN v0.c0 WHEN v0.c2 THEN v0.c2 WHEN v0.c2 THEN v0.c2 WHEN 'C8' THEN v0.c2 ELSE NULL END) NOT BETWEEN (((((((((((((v0.c0)AND(x'')))AND(v0.c1)))OR(v0.c0)))OR(v0.c1)))AND(v0.c0)))OR(v0.c0))) AND ((((('')AND(v0.c0)))OR(v0.c2))))) ISNULL));
SELECT ALL * FROM v0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (x'') UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (x''))) UNION SELECT DISTINCT * FROM rt0 WHERE (((x'') ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c4, v0.c2, v0.c0, rt0.c2, rt0.c3, rt0.c0, v0.c1, rt0.c1 FROM v0, rt0 GROUP BY rt0.c4, v0.c2, v0.c0, rt0.c2, rt0.c3, rt0.c0, v0.c1, rt0.c1;
SELECT rt0.c4, v0.c2, v0.c0, rt0.c2, rt0.c3, rt0.c0, v0.c1, rt0.c1 FROM v0, rt0 WHERE (((rt0.c4 COLLATE BINARY) IS FALSE)) GROUP BY rt0.c4, v0.c2, v0.c0, rt0.c2, rt0.c3, rt0.c0, v0.c1, rt0.c1 UNION SELECT rt0.c4, v0.c2, v0.c0, rt0.c2, rt0.c3, rt0.c0, v0.c1, rt0.c1 FROM v0, rt0 WHERE ((NOT (((rt0.c4 COLLATE BINARY) IS FALSE)))) GROUP BY rt0.c4, v0.c2, v0.c0, rt0.c2, rt0.c3, rt0.c0, v0.c1, rt0.c1 UNION SELECT ALL rt0.c4, v0.c2, v0.c0, rt0.c2, rt0.c3, rt0.c0, v0.c1, rt0.c1 FROM v0, rt0 WHERE (((((rt0.c4 COLLATE BINARY) IS FALSE)) ISNULL)) GROUP BY rt0.c4, v0.c2, v0.c0, rt0.c2, rt0.c3, rt0.c0, v0.c1, rt0.c1;
SELECT rt0.c4, v0.c2, v0.c0, rt0.c2, rt0.c3, rt0.c0, v0.c1, rt0.c1 FROM v0, rt0 GROUP BY rt0.c4, v0.c2, v0.c0, rt0.c2, rt0.c3, rt0.c0, v0.c1, rt0.c1;
SELECT ALL rt0.c2, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c3;
SELECT rt0.c2, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c3 HAVING (((((rt0.c4 IN ()))AND((((SUM(COUNT(GROUP_CONCAT(rt0.c2))))) NOT BETWEEN ((rt0.c0)) AND ((rt0.c4))))))AND(AVG(rt0.c2))) UNION ALL SELECT ALL rt0.c2, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c3 HAVING (NOT ((((((rt0.c4 IN ()))AND((((SUM(COUNT(GROUP_CONCAT(rt0.c2))))) NOT BETWEEN ((rt0.c0)) AND ((rt0.c4))))))AND(AVG(rt0.c2))))) UNION ALL SELECT ALL rt0.c2, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c3 HAVING (((((((rt0.c4 IN ()))AND((((SUM(COUNT(GROUP_CONCAT(rt0.c2))))) NOT BETWEEN ((rt0.c0)) AND ((rt0.c4))))))AND(AVG(rt0.c2)))) ISNULL);
SELECT ALL rt0.c2, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c3;
SELECT rt0.c2, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c3 HAVING (((((rt0.c4 IN ()))AND((((SUM(COUNT(GROUP_CONCAT(rt0.c2))))) NOT BETWEEN ((rt0.c0)) AND ((rt0.c4))))))AND(AVG(rt0.c2))) UNION ALL SELECT ALL rt0.c2, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c3 HAVING (NOT ((((((rt0.c4 IN ()))AND((((SUM(COUNT(GROUP_CONCAT(rt0.c2))))) NOT BETWEEN ((rt0.c0)) AND ((rt0.c4))))))AND(AVG(rt0.c2))))) UNION ALL SELECT ALL rt0.c2, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c3 HAVING (((((((rt0.c4 IN ()))AND((((SUM(COUNT(GROUP_CONCAT(rt0.c2))))) NOT BETWEEN ((rt0.c0)) AND ((rt0.c4))))))AND(AVG(rt0.c2)))) ISNULL);
SELECT ALL rt0.c2, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c3;
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE ((rt0.c0 IN (rt0.c2, rt0.c4)) COLLATE BINARY) UNION ALL SELECT * FROM rt0 WHERE ((NOT ((rt0.c0 IN (rt0.c2, rt0.c4)) COLLATE BINARY))) UNION ALL SELECT * FROM rt0 WHERE ((((rt0.c0 IN (rt0.c2, rt0.c4)) COLLATE BINARY) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT rt0.c1, rt1.c1, v0.c2, rt0.c4 FROM rt0, v0, rt1;
SELECT DISTINCT rt0.c1, rt1.c1, v0.c2, rt0.c4 FROM rt0, v0, rt1 WHERE ((((((((((rt1.c0 IN ()))OR(rt1.c1 COLLATE BINARY)))AND(v0.c0 COLLATE BINARY)))OR(rt1.c3)))OR(v0.c0))) UNION SELECT DISTINCT rt0.c1, rt1.c1, v0.c2, rt0.c4 FROM rt0, v0, rt1 WHERE ((NOT ((((((((((rt1.c0 IN ()))OR(rt1.c1 COLLATE BINARY)))AND(v0.c0 COLLATE BINARY)))OR(rt1.c3)))OR(v0.c0))))) UNION SELECT DISTINCT rt0.c1, rt1.c1, v0.c2, rt0.c4 FROM rt0, v0, rt1 WHERE ((((((((((((rt1.c0 IN ()))OR(rt1.c1 COLLATE BINARY)))AND(v0.c0 COLLATE BINARY)))OR(rt1.c3)))OR(v0.c0))) ISNULL));
SELECT DISTINCT rt0.c1, rt1.c1, v0.c2, rt0.c4 FROM rt0, v0, rt1;
SELECT ALL rt0.c2, rt0.c1, rt0.c3, rt0.c0, rt1.c4, rt1.c0 FROM rt0, rt1 GROUP BY rt0.c2, rt0.c1, rt0.c3, rt0.c0, rt1.c4, rt1.c0;
SELECT rt0.c2, rt0.c1, rt0.c3, rt0.c0, rt1.c4, rt1.c0 FROM rt0, rt1 WHERE (json_valid(UNLIKELY(rt0.c2))) GROUP BY rt0.c2, rt0.c1, rt0.c3, rt0.c0, rt1.c4, rt1.c0 UNION SELECT rt0.c2, rt0.c1, rt0.c3, rt0.c0, rt1.c4, rt1.c0 FROM rt0, rt1 WHERE ((NOT (json_valid(UNLIKELY(rt0.c2))))) GROUP BY rt0.c2, rt0.c1, rt0.c3, rt0.c0, rt1.c4, rt1.c0 UNION SELECT ALL rt0.c2, rt0.c1, rt0.c3, rt0.c0, rt1.c4, rt1.c0 FROM rt0, rt1 WHERE (((json_valid(UNLIKELY(rt0.c2))) ISNULL)) GROUP BY rt0.c2, rt0.c1, rt0.c3, rt0.c0, rt1.c4, rt1.c0;
SELECT ALL rt0.c2, rt0.c1, rt0.c3, rt0.c0, rt1.c4, rt1.c0 FROM rt0, rt1 GROUP BY rt0.c2, rt0.c1, rt0.c3, rt0.c0, rt1.c4, rt1.c0;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING LOWER(MAX(rt0.c3)) UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT (LOWER(MAX(rt0.c3)))) UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING ((LOWER(MAX(rt0.c3))) ISNULL);
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING LOWER(MAX(rt0.c3)) UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT (LOWER(MAX(rt0.c3)))) UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING ((LOWER(MAX(rt0.c3))) ISNULL);
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt1.c1, rt0.c0, rt1.c2, rt0.c2, v0.c1, rt0.c4 FROM rt0, v0, rt1;
SELECT rt1.c1, rt0.c0, rt1.c2, rt0.c2, v0.c1, rt0.c4 FROM rt0, v0, rt1 WHERE ((((((((((((rt1.c3))>=((rt0.c2))))AND(((((((((v0.c1)AND(0Xffffffffd91d4280)))OR(NULL)))OR(rt0.c4)))OR(rt0.c4)))))OR(UNICODE(rt0.c4))))OR(NULL)))AND((rt0.c3 IN ())))) UNION ALL SELECT rt1.c1, rt0.c0, rt1.c2, rt0.c2, v0.c1, rt0.c4 FROM rt0, v0, rt1 WHERE ((NOT ((((((((((((rt1.c3))>=((rt0.c2))))AND(((((((((v0.c1)AND(0Xffffffffd91d4280)))OR(NULL)))OR(rt0.c4)))OR(rt0.c4)))))OR(UNICODE(rt0.c4))))OR(NULL)))AND((rt0.c3 IN ())))))) UNION ALL SELECT ALL rt1.c1, rt0.c0, rt1.c2, rt0.c2, v0.c1, rt0.c4 FROM rt0, v0, rt1 WHERE ((((((((((((((rt1.c3))>=((rt0.c2))))AND(((((((((v0.c1)AND(0xffffffffd91d4280)))OR(NULL)))OR(rt0.c4)))OR(rt0.c4)))))OR(UNICODE(rt0.c4))))OR(NULL)))AND((rt0.c3 IN ())))) ISNULL));
SELECT rt1.c1, rt0.c0, rt1.c2, rt0.c2, v0.c1, rt0.c4 FROM rt0, v0, rt1;
SELECT DISTINCT * FROM rt1, v0, rt0;
SELECT DISTINCT * FROM rt1, v0, rt0 WHERE (CAST(CAST(v0.c2 AS TEXT) AS INTEGER)) UNION SELECT DISTINCT * FROM rt1, v0, rt0 WHERE ((NOT (CAST(CAST(v0.c2 AS TEXT) AS INTEGER)))) UNION SELECT DISTINCT * FROM rt1, v0, rt0 WHERE (((CAST(CAST(v0.c2 AS TEXT) AS INTEGER)) ISNULL));
SELECT DISTINCT * FROM rt1, v0, rt0;
SELECT rt0.c3 FROM rt0 NATURAL JOIN rt1 GROUP BY rt0.c3;
SELECT rt0.c3 FROM rt0 NATURAL JOIN rt1 WHERE ((((rt1.c1 IN (rt0.c3))) ISNULL)) GROUP BY rt0.c3 UNION SELECT rt0.c3 FROM rt0 NATURAL JOIN rt1 WHERE ((NOT ((((rt1.c1 IN (rt0.c3))) ISNULL)))) GROUP BY rt0.c3 UNION SELECT rt0.c3 FROM rt0 NATURAL JOIN rt1 WHERE ((((((rt1.c1 IN (rt0.c3))) ISNULL)) ISNULL)) GROUP BY rt0.c3;
SELECT rt0.c3 FROM rt0 NATURAL JOIN rt1 GROUP BY rt0.c3;
SELECT v0.c0, v0.c2, rt0.c1 FROM v0, rt0 GROUP BY v0.c0, v0.c2, rt0.c1;
SELECT ALL v0.c0, v0.c2, rt0.c1 FROM v0, rt0 GROUP BY v0.c0, v0.c2, rt0.c1 HAVING GROUP_CONCAT((((COUNT(*))) BETWEEN ((MIN(rt0.c4))) AND ((v0.c2)))) UNION ALL SELECT ALL v0.c0, v0.c2, rt0.c1 FROM v0, rt0 GROUP BY v0.c0, v0.c2, rt0.c1 HAVING (NOT (GROUP_CONCAT((((COUNT(*))) BETWEEN ((MIN(rt0.c4))) AND ((v0.c2)))))) UNION ALL SELECT v0.c0, v0.c2, rt0.c1 FROM v0, rt0 GROUP BY v0.c0, v0.c2, rt0.c1 HAVING ((GROUP_CONCAT((((COUNT(*))) BETWEEN ((MIN(rt0.c4))) AND ((v0.c2))))) ISNULL);
SELECT ALL v0.c1, v0.c0 FROM v0;
SELECT v0.c1, v0.c0 FROM v0 WHERE (((((NULL) NOT BETWEEN (v0.c2) AND (v0.c0)))%((v0.c1 IN ())))) ORDER BY x'2293' DESC, CAST(((v0.c0)<=(v0.c1)) AS REAL);
SELECT ALL v0.c1, v0.c0 FROM v0 WHERE ((NOT (((((NULL) NOT BETWEEN (v0.c2) AND (v0.c0)))%((v0.c1 IN ())))))) ORDER BY x'2293' DESC, CAST(((v0.c0)<=(v0.c1)) AS REAL);
SELECT ALL v0.c1, v0.c0 FROM v0 NOT INDEXED WHERE (((((((NULL) NOT BETWEEN (v0.c2) AND (v0.c0)))%((v0.c1 IN ())))) ISNULL)) ORDER BY x'2293' DESC, CAST(((v0.c0)<=(v0.c1)) AS REAL);
SELECT ALL v0.c1, v0.c0 FROM v0;
SELECT DISTINCT rt1.c3 FROM rt1;
SELECT DISTINCT rt1.c3 FROM rt1 WHERE (rt1.c2) UNION SELECT DISTINCT rt1.c3 FROM rt1 WHERE ((NOT (rt1.c2))) UNION SELECT DISTINCT rt1.c3 FROM rt1 WHERE (((rt1.c2) ISNULL));
SELECT DISTINCT rt1.c3 FROM rt1;
SELECT rt1.c3, rt1.c0, rt1.c1, v0.c2, v0.c1, rt0.c4 FROM v0, rt0, rt1 GROUP BY rt1.c3, rt1.c0, rt1.c1, v0.c2, v0.c1, rt0.c4;
SELECT rt1.c3, rt1.c0, rt1.c1, v0.c2, v0.c1, rt0.c4 FROM v0, rt0, rt1 WHERE (((CAST(rt1.c4 AS NUMERIC))|(((((((((-954031356)OR(rt0.c3)))AND(v0.c2)))OR(rt1.c3)))OR(v0.c0))))) GROUP BY rt1.c3, rt1.c0, rt1.c1, v0.c2, v0.c1, rt0.c4 UNION SELECT rt1.c3, rt1.c0, rt1.c1, v0.c2, v0.c1, rt0.c4 FROM v0, rt0, rt1 WHERE ((NOT (((CAST(rt1.c4 AS NUMERIC))|(((((((((-954031356)OR(rt0.c3)))AND(v0.c2)))OR(rt1.c3)))OR(v0.c0))))))) GROUP BY rt1.c3, rt1.c0, rt1.c1, v0.c2, v0.c1, rt0.c4 UNION SELECT rt1.c3, rt1.c0, rt1.c1, v0.c2, v0.c1, rt0.c4 FROM v0, rt0, rt1 WHERE (((((CAST(rt1.c4 AS NUMERIC))|(((((((((-954031356)OR(rt0.c3)))AND(v0.c2)))OR(rt1.c3)))OR(v0.c0))))) ISNULL)) GROUP BY rt1.c3, rt1.c0, rt1.c1, v0.c2, v0.c1, rt0.c4;
SELECT rt1.c3, rt1.c0, rt1.c1, v0.c2, v0.c1, rt0.c4 FROM v0, rt0, rt1 GROUP BY rt1.c3, rt1.c0, rt1.c1, v0.c2, v0.c1, rt0.c4;
SELECT rt1.c3, rt1.c1, rt1.c2, rt0.c1 FROM rt0, rt1 INNER JOIN v0 ON rtreenode(rt1.c1, v0.c2) COLLATE RTRIM GROUP BY rt1.c3, rt1.c1, rt1.c2, rt0.c1;
SELECT ALL rt1.c3, rt1.c1, rt1.c2, rt0.c1 FROM rt0, rt1 INNER JOIN v0 ON rtreenode(rt1.c1, v0.c2) COLLATE RTRIM GROUP BY rt1.c3, rt1.c1, rt1.c2, rt0.c1 HAVING COUNT(COUNT(TOTAL(TOTAL(rt1.c2)))) UNION ALL SELECT rt1.c3, rt1.c1, rt1.c2, rt0.c1 FROM rt0, rt1 INNER JOIN v0 ON rtreenode(rt1.c1, v0.c2) COLLATE RTRIM GROUP BY rt1.c3, rt1.c1, rt1.c2, rt0.c1 HAVING (NOT (COUNT(COUNT(TOTAL(TOTAL(rt1.c2)))))) UNION ALL SELECT ALL rt1.c3, rt1.c1, rt1.c2, rt0.c1 FROM rt0, rt1 INNER JOIN v0 ON rtreenode(rt1.c1, v0.c2) COLLATE RTRIM GROUP BY rt1.c3, rt1.c1, rt1.c2, rt0.c1 HAVING ((COUNT(COUNT(TOTAL(TOTAL(rt1.c2))))) ISNULL);
SELECT * FROM rt1, rt0 NOT INDEXED, v0;
SELECT * FROM rt1, rt0, v0 WHERE (LOWER(DISTINCT ((((((((rt1.c0)AND(rt0.c2)))AND(rt0.c2)))OR(rt1.c2)))AND(rt0.c2)))) UNION ALL SELECT ALL * FROM rt1, rt0, v0 WHERE ((NOT (LOWER(DISTINCT ((((((((rt1.c0)AND(rt0.c2)))AND(rt0.c2)))OR(rt1.c2)))AND(rt0.c2)))))) UNION ALL SELECT * FROM rt1, rt0, v0 WHERE (((LOWER(DISTINCT ((((((((rt1.c0)AND(rt0.c2)))AND(rt0.c2)))OR(rt1.c2)))AND(rt0.c2)))) ISNULL));
SELECT * FROM rt1, rt0 NOT INDEXED, v0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((((((((rt0.c1)OR('ᝈrl놄u ')))OR(rt0.c0)))AND(CAST(NULL AS NUMERIC))))AND(rt0.c1))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((((((((rt0.c1)OR('ᝈrl놄u ')))OR(rt0.c0)))AND(CAST(NULL AS NUMERIC))))AND(rt0.c1))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((((((((rt0.c1)OR('ᝈrl놄u ')))OR(rt0.c0)))AND(CAST(NULL AS NUMERIC))))AND(rt0.c1))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (((v0.c0 COLLATE BINARY)/((NOT (v0.c2))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (((v0.c0 COLLATE BINARY)/((NOT (v0.c2))))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE (((((v0.c0 COLLATE BINARY)/((NOT (v0.c2))))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0, rt1.c4, rt0.c2, v0.c2, v0.c1, rt0.c0 FROM v0 CROSS JOIN rt0 ON (((rt1.c3)) BETWEEN ((CAST(rt0.c1 AS NUMERIC))) AND ((((v0.c1)*(rt0.c1))))) FULL OUTER JOIN rt1 ON (((((((rt1.c0))<>((v0.c1))))AND(((rt0.c2) NOT BETWEEN (v0.c0) AND (rt0.c2)))))AND(((rt1.c0)IS(rt1.c1)))) GROUP BY v0.c0, rt1.c4, rt0.c2, v0.c2, v0.c1, rt0.c0;
SELECT v0.c0, v0.c2, rt0.c0 FROM rt0 LEFT OUTER JOIN v0 ON ((((rt0.c1) NOT BETWEEN (rt0.c2) AND (v0.c1))) NOTNULL);
SELECT ALL v0.c0, v0.c2, rt0.c0 FROM rt0 LEFT OUTER JOIN v0 ON ((((rt0.c1) NOT BETWEEN (rt0.c2) AND (v0.c1))) NOTNULL) WHERE ((- (((((v0.c0)OR(rt0.c2)))OR(rt0.c3))))) UNION ALL SELECT v0.c0, v0.c2, rt0.c0 FROM rt0 LEFT OUTER JOIN v0 ON ((((rt0.c1) NOT BETWEEN (rt0.c2) AND (v0.c1))) NOTNULL) WHERE ((NOT ((- (((((v0.c0)OR(rt0.c2)))OR(rt0.c3))))))) UNION ALL SELECT v0.c0, v0.c2, rt0.c0 FROM rt0 LEFT OUTER JOIN v0 ON ((((rt0.c1) NOT BETWEEN (rt0.c2) AND (v0.c1))) NOTNULL) WHERE ((((- (((((v0.c0)OR(rt0.c2)))OR(rt0.c3))))) ISNULL));
SELECT v0.c0, v0.c2, rt0.c0 FROM rt0 LEFT OUTER JOIN v0 ON ((((rt0.c1) NOT BETWEEN (rt0.c2) AND (v0.c1))) NOTNULL);
SELECT DISTINCT rt1.c4 FROM rt1, rt0;
SELECT DISTINCT rt1.c4 FROM rt1, rt0 WHERE (((CASE rt0.c0  WHEN rt1.c1 THEN rt0.c0 ELSE rt1.c2 END) NOT BETWEEN (IFNULL(rt0.c2, rt1.c2)) AND ((('l[') NOTNULL)))) UNION SELECT DISTINCT rt1.c4 FROM rt1, rt0 WHERE ((NOT (((CASE rt0.c0  WHEN rt1.c1 THEN rt0.c0 ELSE rt1.c2 END) NOT BETWEEN (IFNULL(rt0.c2, rt1.c2)) AND ((('l[') NOTNULL)))))) UNION SELECT DISTINCT rt1.c4 FROM rt1, rt0 WHERE (((((CASE rt0.c0  WHEN rt1.c1 THEN rt0.c0 ELSE rt1.c2 END) NOT BETWEEN (IFNULL(rt0.c2, rt1.c2)) AND ((('l[') NOTNULL)))) ISNULL));
SELECT DISTINCT rt1.c4 FROM rt1, rt0;
SELECT v0.c0, rt0.c4, rt1.c2, v0.c2, rt1.c4 FROM v0, rt0, rt1 GROUP BY v0.c0, rt0.c4, rt1.c2, v0.c2, rt1.c4;
SELECT v0.c0, rt0.c4, rt1.c2, v0.c2, rt1.c4 FROM v0, rt0, rt1 WHERE (((CASE WHEN v0.c0 THEN v0.c2 WHEN rt1.c3 THEN 118600068 WHEN NULL THEN rt1.c0 ELSE rt1.c1 END)IS((((v0.c0))>=((rt1.c4)))))) GROUP BY v0.c0, rt0.c4, rt1.c2, v0.c2, rt1.c4 UNION SELECT ALL v0.c0, rt0.c4, rt1.c2, v0.c2, rt1.c4 FROM v0, rt0, rt1 WHERE ((NOT (((CASE WHEN v0.c0 THEN v0.c2 WHEN rt1.c3 THEN 118600068 WHEN NULL THEN rt1.c0 ELSE rt1.c1 END)IS((((v0.c0))>=((rt1.c4)))))))) GROUP BY v0.c0, rt0.c4, rt1.c2, v0.c2, rt1.c4 UNION SELECT ALL v0.c0, rt0.c4, rt1.c2, v0.c2, rt1.c4 FROM v0, rt0, rt1 WHERE (((((CASE WHEN v0.c0 THEN v0.c2 WHEN rt1.c3 THEN 118600068 WHEN NULL THEN rt1.c0 ELSE rt1.c1 END)IS((((v0.c0))>=((rt1.c4)))))) ISNULL)) GROUP BY v0.c0, rt0.c4, rt1.c2, v0.c2, rt1.c4;
SELECT v0.c0, rt0.c4, rt1.c2, v0.c2, rt1.c4 FROM v0, rt0, rt1 GROUP BY v0.c0, rt0.c4, rt1.c2, v0.c2, rt1.c4;
SELECT v0.c1, v0.c0, v0.c2 FROM v0 GROUP BY v0.c1, v0.c0, v0.c2;
SELECT ALL v0.c1, v0.c0, v0.c2 FROM v0 GROUP BY v0.c1, v0.c0, v0.c2 HAVING COUNT(*) UNION ALL SELECT v0.c1, v0.c0, v0.c2 FROM v0 GROUP BY v0.c1, v0.c0, v0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT v0.c1, v0.c0, v0.c2 FROM v0 GROUP BY v0.c1, v0.c0, v0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT v0.c1, v0.c0, v0.c2 FROM v0 GROUP BY v0.c1, v0.c0, v0.c2;
SELECT ALL v0.c1, v0.c0, v0.c2 FROM v0 GROUP BY v0.c1, v0.c0, v0.c2 HAVING COUNT(*) UNION ALL SELECT v0.c1, v0.c0, v0.c2 FROM v0 GROUP BY v0.c1, v0.c0, v0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT v0.c1, v0.c0, v0.c2 FROM v0 GROUP BY v0.c1, v0.c0, v0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT v0.c1, v0.c0, v0.c2 FROM v0 GROUP BY v0.c1, v0.c0, v0.c2;
SELECT * FROM rt0 RIGHT OUTER JOIN rt1 ON rt1.c0 CROSS JOIN v0 ON CASE x''  WHEN (~ (rt0.c2)) THEN rt0.c2 COLLATE RTRIM END;
SELECT * FROM rt0 RIGHT OUTER JOIN rt1 ON rt1.c0 CROSS JOIN v0 ON CASE x''  WHEN (~ (rt0.c2)) THEN rt0.c2 COLLATE RTRIM END WHERE ((((((v0.c2)IS NOT(rt0.c3))))=((((v0.c1)%(rt0.c3)))))) UNION ALL SELECT * FROM rt0 RIGHT OUTER JOIN rt1 ON rt1.c0 CROSS JOIN v0 ON CASE x''  WHEN (~ (rt0.c2)) THEN rt0.c2 COLLATE RTRIM END WHERE ((NOT ((((((v0.c2)IS NOT(rt0.c3))))=((((v0.c1)%(rt0.c3)))))))) UNION ALL SELECT ALL * FROM rt0 RIGHT OUTER JOIN rt1 ON rt1.c0 CROSS JOIN v0 ON CASE x''  WHEN (~ (rt0.c2)) THEN rt0.c2 COLLATE RTRIM END WHERE ((((((((v0.c2)IS NOT(rt0.c3))))==((((v0.c1)%(rt0.c3)))))) ISNULL));
SELECT * FROM rt0 RIGHT OUTER JOIN rt1 ON rt1.c0 CROSS JOIN v0 ON CASE x''  WHEN (~ (rt0.c2)) THEN rt0.c2 COLLATE RTRIM END;
SELECT DISTINCT rt1.c3, rt1.c1 FROM rt1;
SELECT DISTINCT rt1.c3, rt1.c1 FROM rt1 WHERE (rt1.c4) UNION SELECT DISTINCT rt1.c3, rt1.c1 FROM rt1 WHERE ((NOT (rt1.c4))) UNION SELECT DISTINCT rt1.c3, rt1.c1 FROM rt1 WHERE (((rt1.c4) ISNULL));
SELECT DISTINCT rt1.c3, rt1.c1 FROM rt1;
SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 WHERE (CAST(CAST(rt0.c2 AS BLOB) AS REAL)) GROUP BY rt0.c1, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (CAST(CAST(rt0.c2 AS BLOB) AS REAL)))) GROUP BY rt0.c1, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c0 FROM rt0 WHERE (((CAST(CAST(rt0.c2 AS BLOB) AS REAL)) ISNULL)) GROUP BY rt0.c1, rt0.c0;
SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT ALL rt1.c3, v0.c0, rt1.c1 FROM rt1, v0 GROUP BY rt1.c3, v0.c0, rt1.c1;
SELECT rt1.c3, v0.c0, rt1.c1 FROM rt1, v0 GROUP BY rt1.c3, v0.c0, rt1.c1 HAVING COUNT(*) UNION ALL SELECT rt1.c3, v0.c0, rt1.c1 FROM rt1, v0 GROUP BY rt1.c3, v0.c0, rt1.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt1.c3, v0.c0, rt1.c1 FROM rt1, v0 GROUP BY rt1.c3, v0.c0, rt1.c1 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt1.c3, v0.c0, rt1.c1 FROM rt1, v0 GROUP BY rt1.c3, v0.c0, rt1.c1;
SELECT rt1.c3, v0.c0, rt1.c1 FROM rt1, v0 GROUP BY rt1.c3, v0.c0, rt1.c1 HAVING COUNT(*) UNION ALL SELECT rt1.c3, v0.c0, rt1.c1 FROM rt1, v0 GROUP BY rt1.c3, v0.c0, rt1.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt1.c3, v0.c0, rt1.c1 FROM rt1, v0 GROUP BY rt1.c3, v0.c0, rt1.c1 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt1.c3, v0.c0, rt1.c1 FROM rt1, v0 GROUP BY rt1.c3, v0.c0, rt1.c1;
SELECT ALL MIN(NULL) FROM v0, rt0 NOT INDEXED, rt1 ORDER BY ((((rt0.c3) NOTNULL)) NOTNULL)  NULLS FIRST;
SELECT v0.c1, rt1.c2, v0.c2, rt0.c0, v0.c0, rt1.c1, rt1.c0, rt0.c4, rt1.c4, rt0.c1, rt0.c3, rt1.c3 FROM rt1, rt0, v0;
SELECT ALL v0.c1, rt1.c2, v0.c2, rt0.c0, v0.c0, rt1.c1, rt1.c0, rt0.c4, rt1.c4, rt0.c1, rt0.c3, rt1.c3 FROM rt1, rt0, v0 WHERE (TYPEOF(rt0.c0)) UNION ALL SELECT ALL v0.c1, rt1.c2, v0.c2, rt0.c0, v0.c0, rt1.c1, rt1.c0, rt0.c4, rt1.c4, rt0.c1, rt0.c3, rt1.c3 FROM rt1, rt0, v0 WHERE ((NOT (TYPEOF(rt0.c0)))) UNION ALL SELECT ALL v0.c1, rt1.c2, v0.c2, rt0.c0, v0.c0, rt1.c1, rt1.c0, rt0.c4, rt1.c4, rt0.c1, rt0.c3, rt1.c3 FROM rt1, rt0, v0 WHERE (((TYPEOF(rt0.c0)) ISNULL));
SELECT v0.c1, rt1.c2, v0.c2, rt0.c0, v0.c0, rt1.c1, rt1.c0, rt0.c4, rt1.c4, rt0.c1, rt0.c3, rt1.c3 FROM rt1, rt0, v0;
SELECT DISTINCT * FROM rt0, v0;
SELECT DISTINCT * FROM rt0, v0 WHERE (CAST((((v0.c1))<((v0.c2))) AS INTEGER)) UNION SELECT DISTINCT * FROM rt0, v0 WHERE ((NOT (CAST((((v0.c1))<((v0.c2))) AS INTEGER)))) UNION SELECT DISTINCT * FROM rt0, v0 WHERE (((CAST((((v0.c1))<((v0.c2))) AS INTEGER)) ISNULL));
SELECT DISTINCT * FROM rt0, v0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (v0.c1) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT (v0.c1))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE (((v0.c1) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c2, v0.c0 FROM v0 INNER JOIN rt0 ON '*L2%o1d' LEFT OUTER JOIN rt1 ON ((('LF')) BETWEEN ((((((((((v0.c2)AND(rt0.c1)))OR('61')))OR(rt0.c2)))AND(rt1.c3)))) AND ((((NULL)<<(rt0.c1))))) GROUP BY v0.c2, v0.c0;
SELECT v0.c2, v0.c0 FROM v0 INNER JOIN rt0 ON '*L2%o1d' LEFT OUTER JOIN rt1 ON ((('LF')) BETWEEN ((((((((((v0.c2)AND(rt0.c1)))OR('61')))OR(rt0.c2)))AND(rt1.c3)))) AND ((((NULL)<<(rt0.c1))))) GROUP BY v0.c2, v0.c0 HAVING CASE WHEN SUM(COUNT(TOTAL(TOTAL(rt0.c4)))) THEN GROUP_CONCAT(rt0.c2) ELSE COUNT(*) END UNION ALL SELECT ALL v0.c2, v0.c0 FROM v0 INNER JOIN rt0 ON '*L2%o1d' LEFT OUTER JOIN rt1 ON ((('LF')) BETWEEN ((((((((((v0.c2)AND(rt0.c1)))OR('61')))OR(rt0.c2)))AND(rt1.c3)))) AND ((((NULL)<<(rt0.c1))))) GROUP BY v0.c2, v0.c0 HAVING (NOT (CASE WHEN SUM(COUNT(TOTAL(TOTAL(rt0.c4)))) THEN GROUP_CONCAT(rt0.c2) ELSE COUNT(*) END)) UNION ALL SELECT v0.c2, v0.c0 FROM v0 INNER JOIN rt0 ON '*L2%o1d' LEFT OUTER JOIN rt1 ON ((('LF')) BETWEEN ((((((((((v0.c2)AND(rt0.c1)))OR('61')))OR(rt0.c2)))AND(rt1.c3)))) AND ((((NULL)<<(rt0.c1))))) GROUP BY v0.c2, v0.c0 HAVING ((CASE WHEN SUM(COUNT(TOTAL(TOTAL(rt0.c4)))) THEN GROUP_CONCAT(rt0.c2) ELSE COUNT(*) END) ISNULL);
SELECT ALL * FROM rt1;
SELECT ALL * FROM rt1 WHERE ((NOT ((+ (rt1.c1))))) UNION ALL SELECT ALL * FROM rt1 WHERE ((NOT ((NOT ((+ (rt1.c1))))))) UNION ALL SELECT ALL * FROM rt1 WHERE ((((NOT ((+ (rt1.c1))))) ISNULL));
SELECT ALL * FROM rt1;
SELECT DISTINCT * FROM v0, rt0 RIGHT OUTER JOIN rt1 ON CAST(rt0.c4 AS INTEGER) COLLATE NOCASE;
SELECT DISTINCT * FROM v0, rt0 RIGHT OUTER JOIN rt1 ON CAST(rt0.c4 AS INTEGER) COLLATE NOCASE WHERE (CASE WHEN '806712584' THEN (- (v0.c0)) WHEN ((((rt0.c3)OR(v0.c0)))AND(rt1.c3)) THEN CASE rt1.c2  WHEN rt1.c4 THEN rt0.c4 ELSE rt0.c3 END WHEN ((rt0.c4) IS TRUE) THEN ((((v0.c1)AND(rt1.c4)))OR(rt1.c4)) WHEN ((v0.c1)&(rt0.c1)) THEN (((rt1.c0)) NOT BETWEEN ((rt0.c1)) AND (('}wk''⿒'))) WHEN (((rt0.c1))<=((rt1.c3))) THEN CASE WHEN v0.c0 THEN rt1.c3 ELSE v0.c0 END END) UNION SELECT DISTINCT * FROM v0, rt0 RIGHT OUTER JOIN rt1 ON CAST(rt0.c4 AS INTEGER) COLLATE NOCASE WHERE ((NOT (CASE WHEN '806712584' THEN (- (v0.c0)) WHEN ((((rt0.c3)OR(v0.c0)))AND(rt1.c3)) THEN CASE rt1.c2  WHEN rt1.c4 THEN rt0.c4 ELSE rt0.c3 END WHEN ((rt0.c4) IS TRUE) THEN ((((v0.c1)AND(rt1.c4)))OR(rt1.c4)) WHEN ((v0.c1)&(rt0.c1)) THEN (((rt1.c0)) NOT BETWEEN ((rt0.c1)) AND (('}wk''⿒'))) WHEN (((rt0.c1))<=((rt1.c3))) THEN CASE WHEN v0.c0 THEN rt1.c3 ELSE v0.c0 END END))) UNION SELECT DISTINCT * FROM v0, rt0 RIGHT OUTER JOIN rt1 ON CAST(rt0.c4 AS INTEGER) COLLATE NOCASE WHERE (((CASE WHEN '806712584' THEN (- (v0.c0)) WHEN ((((rt0.c3)OR(v0.c0)))AND(rt1.c3)) THEN CASE rt1.c2  WHEN rt1.c4 THEN rt0.c4 ELSE rt0.c3 END WHEN ((rt0.c4) IS TRUE) THEN ((((v0.c1)AND(rt1.c4)))OR(rt1.c4)) WHEN ((v0.c1)&(rt0.c1)) THEN (((rt1.c0)) NOT BETWEEN ((rt0.c1)) AND (('}wk''⿒'))) WHEN (((rt0.c1))<=((rt1.c3))) THEN CASE WHEN v0.c0 THEN rt1.c3 ELSE v0.c0 END END) ISNULL));
SELECT DISTINCT * FROM v0, rt0 RIGHT OUTER JOIN rt1 ON CAST(rt0.c4 AS INTEGER) COLLATE NOCASE;
SELECT rt1.c0, v0.c1 FROM rt1 LEFT OUTER JOIN v0 ON ((~ (rt1.c4)) IN ()) GROUP BY rt1.c0, v0.c1;
SELECT ALL rt1.c0, v0.c1 FROM rt1 LEFT OUTER JOIN v0 ON ((~ (rt1.c4)) IN ()) WHERE (0.16969772634077374) GROUP BY rt1.c0, v0.c1 UNION SELECT ALL rt1.c0, v0.c1 FROM rt1 LEFT OUTER JOIN v0 ON ((~ (rt1.c4)) IN ()) WHERE ((NOT (0.16969772634077374))) GROUP BY rt1.c0, v0.c1 UNION SELECT rt1.c0, v0.c1 FROM rt1 LEFT OUTER JOIN v0 ON ((~ (rt1.c4)) IN ()) WHERE (((0.16969772634077374) ISNULL)) GROUP BY rt1.c0, v0.c1;
SELECT rt1.c0, v0.c1 FROM rt1 LEFT OUTER JOIN v0 ON ((~ (rt1.c4)) IN ()) GROUP BY rt1.c0, v0.c1;
SELECT ALL v0.c1 FROM v0 GROUP BY v0.c1;
SELECT ALL v0.c1 FROM v0 GROUP BY v0.c1 HAVING v0.c2 UNION ALL SELECT ALL v0.c1 FROM v0 GROUP BY v0.c1 HAVING (NOT (v0.c2)) UNION ALL SELECT v0.c1 FROM v0 GROUP BY v0.c1 HAVING ((v0.c2) ISNULL);
SELECT ALL v0.c1 FROM v0 GROUP BY v0.c1;
SELECT ALL v0.c1 FROM v0 GROUP BY v0.c1 HAVING v0.c2 UNION ALL SELECT ALL v0.c1 FROM v0 GROUP BY v0.c1 HAVING (NOT (v0.c2)) UNION ALL SELECT v0.c1 FROM v0 GROUP BY v0.c1 HAVING ((v0.c2) ISNULL);
SELECT ALL v0.c1 FROM v0 GROUP BY v0.c1;
SELECT ALL rt0.c1, rt0.c4, rt0.c3 FROM rt0;
SELECT ALL rt0.c1, rt0.c4, rt0.c3 FROM rt0 WHERE (((UNLIKELY(rt0.c4))>=(CAST(rt0.c0 AS REAL)))) UNION ALL SELECT rt0.c1, rt0.c4, rt0.c3 FROM rt0 WHERE ((NOT (((UNLIKELY(rt0.c4))>=(CAST(rt0.c0 AS REAL)))))) UNION ALL SELECT rt0.c1, rt0.c4, rt0.c3 FROM rt0 WHERE (((((UNLIKELY(rt0.c4))>=(CAST(rt0.c0 AS REAL)))) ISNULL));
SELECT ALL rt0.c1, rt0.c4, rt0.c3 FROM rt0;
SELECT DISTINCT * FROM v0 LEFT OUTER JOIN rt0 ON (((v0.c2)) BETWEEN ((TYPEOF(DISTINCT v0.c0))) AND (((+ (rt1.c3))))) CROSS JOIN rt1 ON ((((((((((((((((((((((((v0.c0)OR(v0.c0)))AND(rt0.c1)))AND(x'')))OR(rt0.c1)))AND(rt1.c2)))OR(rt1.c4)))OR((((x'')) BETWEEN ((rt1.c1)) AND ((rt1.c2))))))OR(((rt1.c2) NOT BETWEEN (v0.c1) AND (v0.c2)))))AND(((rt0.c0) NOT BETWEEN (rt0.c3) AND (v0.c0)))))AND(((rt1.c0)%(rt1.c2)))))AND(rt0.c3 COLLATE NOCASE)))AND((((rt1.c0))==((v0.c0)))));
SELECT DISTINCT * FROM v0 LEFT OUTER JOIN rt0 ON (((v0.c2)) BETWEEN ((TYPEOF(DISTINCT v0.c0))) AND (((+ (rt1.c3))))) CROSS JOIN rt1 ON ((((((((((((((((((((((((v0.c0)OR(v0.c0)))AND(rt0.c1)))AND(x'')))OR(rt0.c1)))AND(rt1.c2)))OR(rt1.c4)))OR((((x'')) BETWEEN ((rt1.c1)) AND ((rt1.c2))))))OR(((rt1.c2) NOT BETWEEN (v0.c1) AND (v0.c2)))))AND(((rt0.c0) NOT BETWEEN (rt0.c3) AND (v0.c0)))))AND(((rt1.c0)%(rt1.c2)))))AND(rt0.c3 COLLATE NOCASE)))AND((((rt1.c0))==((v0.c0))))) WHERE (((rt1.c4)+(((rt1.c4)-(x'2ed4'))))) UNION SELECT DISTINCT * FROM v0 LEFT OUTER JOIN rt0 ON (((v0.c2)) BETWEEN ((TYPEOF(DISTINCT v0.c0))) AND (((+ (rt1.c3))))) CROSS JOIN rt1 ON ((((((((((((((((((((((((v0.c0)OR(v0.c0)))AND(rt0.c1)))AND(x'')))OR(rt0.c1)))AND(rt1.c2)))OR(rt1.c4)))OR((((x'')) BETWEEN ((rt1.c1)) AND ((rt1.c2))))))OR(((rt1.c2) NOT BETWEEN (v0.c1) AND (v0.c2)))))AND(((rt0.c0) NOT BETWEEN (rt0.c3) AND (v0.c0)))))AND(((rt1.c0)%(rt1.c2)))))AND(rt0.c3 COLLATE NOCASE)))AND((((rt1.c0))==((v0.c0))))) WHERE ((NOT (((rt1.c4)+(((rt1.c4)-(x'2ed4'))))))) UNION SELECT DISTINCT * FROM v0 LEFT OUTER JOIN rt0 ON (((v0.c2)) BETWEEN ((TYPEOF(DISTINCT v0.c0))) AND (((+ (rt1.c3))))) CROSS JOIN rt1 ON ((((((((((((((((((((((((v0.c0)OR(v0.c0)))AND(rt0.c1)))AND(x'')))OR(rt0.c1)))AND(rt1.c2)))OR(rt1.c4)))OR((((x'')) BETWEEN ((rt1.c1)) AND ((rt1.c2))))))OR(((rt1.c2) NOT BETWEEN (v0.c1) AND (v0.c2)))))AND(((rt0.c0) NOT BETWEEN (rt0.c3) AND (v0.c0)))))AND(((rt1.c0)%(rt1.c2)))))AND(rt0.c3 COLLATE NOCASE)))AND((((rt1.c0))==((v0.c0))))) WHERE (((((rt1.c4)+(((rt1.c4)-(x'2ed4'))))) ISNULL));
SELECT DISTINCT * FROM v0 LEFT OUTER JOIN rt0 ON (((v0.c2)) BETWEEN ((TYPEOF(DISTINCT v0.c0))) AND (((+ (rt1.c3))))) CROSS JOIN rt1 ON ((((((((((((((((((((((((v0.c0)OR(v0.c0)))AND(rt0.c1)))AND(x'')))OR(rt0.c1)))AND(rt1.c2)))OR(rt1.c4)))OR((((x'')) BETWEEN ((rt1.c1)) AND ((rt1.c2))))))OR(((rt1.c2) NOT BETWEEN (v0.c1) AND (v0.c2)))))AND(((rt0.c0) NOT BETWEEN (rt0.c3) AND (v0.c0)))))AND(((rt1.c0)%(rt1.c2)))))AND(rt0.c3 COLLATE NOCASE)))AND((((rt1.c0))==((v0.c0)))));
SELECT ALL v0.c0, rt1.c3, rt1.c4, rt1.c2, rt1.c1, v0.c1 FROM v0, rt1 GROUP BY v0.c0, rt1.c3, rt1.c4, rt1.c2, rt1.c1, v0.c1;
SELECT v0.c0, rt1.c3, rt1.c4, rt1.c2, rt1.c1, v0.c1 FROM v0, rt1 WHERE (((UNLIKELY(DISTINCT v0.c1)) NOT BETWEEN ((((v0.c0)) BETWEEN ((rt1.c3)) AND ((rt1.c0)))) AND (CASE WHEN x'' THEN v0.c1 WHEN rt1.c1 THEN v0.c0 WHEN rt1.c0 THEN rt1.c2 ELSE rt1.c4 END))) GROUP BY v0.c0, rt1.c3, rt1.c4, rt1.c2, rt1.c1, v0.c1 UNION SELECT v0.c0, rt1.c3, rt1.c4, rt1.c2, rt1.c1, v0.c1 FROM v0, rt1 WHERE ((NOT (((UNLIKELY(DISTINCT v0.c1)) NOT BETWEEN ((((v0.c0)) BETWEEN ((rt1.c3)) AND ((rt1.c0)))) AND (CASE WHEN x'' THEN v0.c1 WHEN rt1.c1 THEN v0.c0 WHEN rt1.c0 THEN rt1.c2 ELSE rt1.c4 END))))) GROUP BY v0.c0, rt1.c3, rt1.c4, rt1.c2, rt1.c1, v0.c1 UNION SELECT ALL v0.c0, rt1.c3, rt1.c4, rt1.c2, rt1.c1, v0.c1 FROM v0, rt1 WHERE (((((UNLIKELY(DISTINCT v0.c1)) NOT BETWEEN ((((v0.c0)) BETWEEN ((rt1.c3)) AND ((rt1.c0)))) AND (CASE WHEN x'' THEN v0.c1 WHEN rt1.c1 THEN v0.c0 WHEN rt1.c0 THEN rt1.c2 ELSE rt1.c4 END))) ISNULL)) GROUP BY v0.c0, rt1.c3, rt1.c4, rt1.c2, rt1.c1, v0.c1;
SELECT ALL v0.c0, rt1.c3, rt1.c4, rt1.c2, rt1.c1, v0.c1 FROM v0, rt1 GROUP BY v0.c0, rt1.c3, rt1.c4, rt1.c2, rt1.c1, v0.c1;
SELECT ALL rt0.c2, rt1.c2, rt0.c3, rt1.c3, rt0.c1, rt0.c0, rt1.c4 FROM rt1, rt0 GROUP BY rt0.c2, rt1.c2, rt0.c3, rt1.c3, rt0.c1, rt0.c0, rt1.c4;
SELECT ALL rt0.c2, rt1.c2, rt0.c3, rt1.c3, rt0.c1, rt0.c0, rt1.c4 FROM rt1, rt0 GROUP BY rt0.c2, rt1.c2, rt0.c3, rt1.c3, rt0.c1, rt0.c0, rt1.c4 HAVING ((((rt0.c3)-(GROUP_CONCAT(MIN(AVG(rt1.c4)))))) NOT BETWEEN (((TOTAL('-913570206')) BETWEEN (COUNT(*)) AND (rt1.c4))) AND ((~ (GROUP_CONCAT(MAX(AVG(rt0.c4))))))) UNION ALL SELECT rt0.c2, rt1.c2, rt0.c3, rt1.c3, rt0.c1, rt0.c0, rt1.c4 FROM rt1, rt0 GROUP BY rt0.c2, rt1.c2, rt0.c3, rt1.c3, rt0.c1, rt0.c0, rt1.c4 HAVING (NOT (((((rt0.c3)-(GROUP_CONCAT(MIN(AVG(rt1.c4)))))) NOT BETWEEN (((TOTAL('-913570206')) BETWEEN (COUNT(*)) AND (rt1.c4))) AND ((~ (GROUP_CONCAT(MAX(AVG(rt0.c4))))))))) UNION ALL SELECT ALL rt0.c2, rt1.c2, rt0.c3, rt1.c3, rt0.c1, rt0.c0, rt1.c4 FROM rt1, rt0 GROUP BY rt0.c2, rt1.c2, rt0.c3, rt1.c3, rt0.c1, rt0.c0, rt1.c4 HAVING ((((((rt0.c3)-(GROUP_CONCAT(MIN(AVG(rt1.c4)))))) NOT BETWEEN (((TOTAL('-913570206')) BETWEEN (COUNT(*)) AND (rt1.c4))) AND ((~ (GROUP_CONCAT(MAX(AVG(rt0.c4)))))))) ISNULL);
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE ((rt0.c1 IN ())) UNION ALL SELECT * FROM rt0 WHERE ((NOT ((rt0.c1 IN ())))) UNION ALL SELECT ALL * FROM rt0 WHERE ((((rt0.c1 IN ())) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c4, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c4, rt0.c1 FROM rt0 WHERE (((rt0.c3)IS(((((rt0.c4)AND(rt0.c0)))AND(rt0.c3))))) UNION SELECT DISTINCT rt0.c2, rt0.c4, rt0.c1 FROM rt0 WHERE ((NOT (((rt0.c3)IS(((((rt0.c4)AND(rt0.c0)))AND(rt0.c3))))))) UNION SELECT DISTINCT rt0.c2, rt0.c4, rt0.c1 FROM rt0 WHERE (((((rt0.c3)IS(((((rt0.c4)AND(rt0.c0)))AND(rt0.c3))))) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c4, rt0.c1 FROM rt0;
SELECT ALL rt1.c0, rt1.c2 FROM rt1 GROUP BY rt1.c0, rt1.c2;
SELECT rt1.c0, rt1.c2 FROM rt1 WHERE (((((x'')AND(((rt1.c3)IS(rt1.c4)))))AND(((x'') BETWEEN (rt1.c4) AND ('''!	hUFᵉy%'))))) GROUP BY rt1.c0, rt1.c2 UNION SELECT rt1.c0, rt1.c2 FROM rt1 WHERE ((NOT (((((x'')AND(((rt1.c3)IS(rt1.c4)))))AND(((x'') BETWEEN (rt1.c4) AND ('''!	hUFᵉy%'))))))) GROUP BY rt1.c0, rt1.c2 UNION SELECT rt1.c0, rt1.c2 FROM rt1 WHERE (((((((x'')AND(((rt1.c3)IS(rt1.c4)))))AND(((x'') BETWEEN (rt1.c4) AND ('''!	hUFᵉy%'))))) ISNULL)) GROUP BY rt1.c0, rt1.c2;
SELECT ALL rt1.c0, rt1.c2 FROM rt1 GROUP BY rt1.c0, rt1.c2;
SELECT v0.c1, v0.c2 FROM v0 GROUP BY v0.c1, v0.c2;
SELECT v0.c1, v0.c2 FROM v0 GROUP BY v0.c1, v0.c2 HAVING ((((((((((((((((v0.c2)OR(GROUP_CONCAT(MIN(AVG(COUNT(*)))))))AND(MIN(MAX(v0.c2)))))AND(COUNT(*))))AND(MIN(GROUP_CONCAT(v0.c1)))))AND(CAST(COUNT(AVG(GROUP_CONCAT(MAX(GROUP_CONCAT(v0.c2))))) AS INTEGER))))AND(COUNT(COUNT(*)))))OR(COUNT(*))))AND(CAST(v0.c0 AS NUMERIC))) UNION ALL SELECT v0.c1, v0.c2 FROM v0 GROUP BY v0.c1, v0.c2 HAVING (NOT (((((((((((((((((v0.c2)OR(GROUP_CONCAT(MIN(AVG(COUNT(*)))))))AND(MIN(MAX(v0.c2)))))AND(COUNT(*))))AND(MIN(GROUP_CONCAT(v0.c1)))))AND(CAST(COUNT(AVG(GROUP_CONCAT(MAX(GROUP_CONCAT(v0.c2))))) AS INTEGER))))AND(COUNT(COUNT(*)))))OR(COUNT(*))))AND(CAST(v0.c0 AS NUMERIC))))) UNION ALL SELECT ALL v0.c1, v0.c2 FROM v0 GROUP BY v0.c1, v0.c2 HAVING ((((((((((((((((((v0.c2)OR(GROUP_CONCAT(MIN(AVG(COUNT(*)))))))AND(MIN(MAX(v0.c2)))))AND(COUNT(*))))AND(MIN(GROUP_CONCAT(v0.c1)))))AND(CAST(COUNT(AVG(GROUP_CONCAT(MAX(GROUP_CONCAT(v0.c2))))) AS INTEGER))))AND(COUNT(COUNT(*)))))OR(COUNT(*))))AND(CAST(v0.c0 AS NUMERIC)))) ISNULL);
SELECT * FROM rt0 RIGHT OUTER JOIN rt1 ON LIKELIHOOD(((rt0.c4)+(rt1.c0)), 0.5065365820674543);
SELECT * FROM rt0 RIGHT OUTER JOIN rt1 ON LIKELIHOOD(((rt0.c4)+(rt1.c0)), 0.5065365820674543) WHERE (NULL) UNION ALL SELECT * FROM rt0 RIGHT OUTER JOIN rt1 ON LIKELIHOOD(((rt0.c4)+(rt1.c0)), 0.5065365820674543) WHERE ((NOT (NULL))) UNION ALL SELECT ALL * FROM rt0 RIGHT OUTER JOIN rt1 ON LIKELIHOOD(((rt0.c4)+(rt1.c0)), 0.5065365820674543) WHERE (((NULL) ISNULL));
SELECT * FROM rt0 RIGHT OUTER JOIN rt1 ON LIKELIHOOD(((rt0.c4)+(rt1.c0)), 0.5065365820674543);
SELECT DISTINCT rt1.c4, rt0.c3, rt0.c2, rt0.c4, v0.c2, rt1.c1, rt1.c2 FROM rt0, rt1, v0;
SELECT DISTINCT rt1.c4, rt0.c3, rt0.c2, rt0.c4, v0.c2, rt1.c1, rt1.c2 FROM rt0, rt1, v0 WHERE (NULL COLLATE BINARY COLLATE RTRIM) UNION SELECT DISTINCT rt1.c4, rt0.c3, rt0.c2, rt0.c4, v0.c2, rt1.c1, rt1.c2 FROM rt0, rt1, v0 WHERE ((NOT (NULL COLLATE BINARY COLLATE RTRIM))) UNION SELECT DISTINCT rt1.c4, rt0.c3, rt0.c2, rt0.c4, v0.c2, rt1.c1, rt1.c2 FROM rt0, rt1, v0 WHERE (((NULL COLLATE BINARY COLLATE RTRIM) ISNULL));
SELECT DISTINCT rt1.c4, rt0.c3, rt0.c2, rt0.c4, v0.c2, rt1.c1, rt1.c2 FROM rt0, rt1, v0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE (((NULLIF(rt0.c0, rt0.c3)) NOT BETWEEN (((rt0.c3)=(rt0.c2))) AND (TRIM(rt0.c4, rt0.c2)))) GROUP BY rt0.c1, rt0.c2, rt0.c0 UNION SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (((NULLIF(rt0.c0, rt0.c3)) NOT BETWEEN (((rt0.c3)=(rt0.c2))) AND (TRIM(rt0.c4, rt0.c2)))))) GROUP BY rt0.c1, rt0.c2, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE (((((NULLIF(rt0.c0, rt0.c3)) NOT BETWEEN (((rt0.c3)=(rt0.c2))) AND (TRIM(rt0.c4, rt0.c2)))) ISNULL)) GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c3 FROM rt0 GROUP BY rt0.c3;
SELECT rt0.c3 FROM rt0 GROUP BY rt0.c3 HAVING AVG(rt0.c3 COLLATE BINARY) UNION ALL SELECT ALL rt0.c3 FROM rt0 GROUP BY rt0.c3 HAVING (NOT (AVG(rt0.c3 COLLATE BINARY))) UNION ALL SELECT rt0.c3 FROM rt0 GROUP BY rt0.c3 HAVING ((AVG(rt0.c3 COLLATE BINARY)) ISNULL);
SELECT rt0.c3 FROM rt0 GROUP BY rt0.c3;
SELECT rt0.c3 FROM rt0 GROUP BY rt0.c3 HAVING AVG(rt0.c3 COLLATE BINARY) UNION ALL SELECT ALL rt0.c3 FROM rt0 GROUP BY rt0.c3 HAVING (NOT (AVG(rt0.c3 COLLATE BINARY))) UNION ALL SELECT rt0.c3 FROM rt0 GROUP BY rt0.c3 HAVING ((AVG(rt0.c3 COLLATE BINARY)) ISNULL);
SELECT rt0.c3 FROM rt0 GROUP BY rt0.c3;
SELECT ALL rt0.c0, rt0.c2 FROM rt0;
SELECT rt0.c0, rt0.c2 FROM rt0 WHERE ((rt0.c2 COLLATE BINARY IN ())) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT ((rt0.c2 COLLATE BINARY IN ())))) UNION ALL SELECT rt0.c0, rt0.c2 FROM rt0 WHERE ((((rt0.c2 COLLATE BINARY IN ())) ISNULL));
SELECT ALL rt0.c0, rt0.c2 FROM rt0;
SELECT DISTINCT * FROM rt0, rt1, v0;
SELECT DISTINCT * FROM rt0, rt1, v0 WHERE (((rt0.c3 COLLATE NOCASE)<<((((rt0.c4))>=((v0.c0)))))) UNION SELECT DISTINCT * FROM rt0, rt1, v0 WHERE ((NOT (((rt0.c3 COLLATE NOCASE)<<((((rt0.c4))>=((v0.c0)))))))) UNION SELECT DISTINCT * FROM rt0, rt1, v0 WHERE (((((rt0.c3 COLLATE NOCASE)<<((((rt0.c4))>=((v0.c0)))))) ISNULL));
SELECT DISTINCT * FROM rt0, rt1, v0;
SELECT rt1.c1, rt1.c2, rt1.c0, rt1.c3 FROM rt1 GROUP BY rt1.c1, rt1.c2, rt1.c0, rt1.c3;
SELECT ALL rt1.c1, rt1.c2, rt1.c0, rt1.c3 FROM rt1 WHERE ((((((rt1.c3)OR(rt1.c2)))AND(rt1.c3)) IN ())) GROUP BY rt1.c1, rt1.c2, rt1.c0, rt1.c3 UNION SELECT rt1.c1, rt1.c2, rt1.c0, rt1.c3 FROM rt1 WHERE ((NOT ((((((rt1.c3)OR(rt1.c2)))AND(rt1.c3)) IN ())))) GROUP BY rt1.c1, rt1.c2, rt1.c0, rt1.c3 UNION SELECT ALL rt1.c1, rt1.c2, rt1.c0, rt1.c3 FROM rt1 WHERE ((((((((rt1.c3)OR(rt1.c2)))AND(rt1.c3)) IN ())) ISNULL)) GROUP BY rt1.c1, rt1.c2, rt1.c0, rt1.c3;
SELECT rt1.c1, rt1.c2, rt1.c0, rt1.c3 FROM rt1 GROUP BY rt1.c1, rt1.c2, rt1.c0, rt1.c3;
SELECT ALL v0.c2, v0.c0 FROM v0 GROUP BY v0.c2, v0.c0;
SELECT ALL v0.c2, v0.c0 FROM v0 GROUP BY v0.c2, v0.c0 HAVING LOWER(DISTINCT COUNT(v0.c1)) UNION ALL SELECT ALL v0.c2, v0.c0 FROM v0 GROUP BY v0.c2, v0.c0 HAVING (NOT (LOWER(DISTINCT COUNT(v0.c1)))) UNION ALL SELECT v0.c2, v0.c0 FROM v0 GROUP BY v0.c2, v0.c0 HAVING ((LOWER(DISTINCT COUNT(v0.c1))) ISNULL);
SELECT ALL v0.c2, v0.c0 FROM v0 GROUP BY v0.c2, v0.c0;
SELECT ALL v0.c2, v0.c0 FROM v0 GROUP BY v0.c2, v0.c0 HAVING LOWER(DISTINCT COUNT(v0.c1)) UNION ALL SELECT ALL v0.c2, v0.c0 FROM v0 GROUP BY v0.c2, v0.c0 HAVING (NOT (LOWER(DISTINCT COUNT(v0.c1)))) UNION ALL SELECT v0.c2, v0.c0 FROM v0 GROUP BY v0.c2, v0.c0 HAVING ((LOWER(DISTINCT COUNT(v0.c1))) ISNULL);
SELECT ALL v0.c2, v0.c0 FROM v0 GROUP BY v0.c2, v0.c0;
SELECT rt1.c3, rt0.c3, rt1.c0, rt1.c2, rt1.c4, rt1.c1, rt0.c0, rt0.c2, v0.c1, rt0.c4, rt0.c1, v0.c0 FROM rt1, v0, rt0;
SELECT ALL rt1.c3, rt0.c3, rt1.c0, rt1.c2, rt1.c4, rt1.c1, rt0.c0, rt0.c2, v0.c1, rt0.c4, rt0.c1, v0.c0 FROM rt1, v0, rt0 WHERE (CAST(((rt0.c3) NOT BETWEEN (501567096) AND (NULL)) AS NUMERIC)) UNION ALL SELECT ALL rt1.c3, rt0.c3, rt1.c0, rt1.c2, rt1.c4, rt1.c1, rt0.c0, rt0.c2, v0.c1, rt0.c4, rt0.c1, v0.c0 FROM rt1, v0, rt0 WHERE ((NOT (CAST(((rt0.c3) NOT BETWEEN (501567096) AND (NULL)) AS NUMERIC)))) UNION ALL SELECT ALL rt1.c3, rt0.c3, rt1.c0, rt1.c2, rt1.c4, rt1.c1, rt0.c0, rt0.c2, v0.c1, rt0.c4, rt0.c1, v0.c0 FROM rt1, v0, rt0 WHERE (((CAST(((rt0.c3) NOT BETWEEN (501567096) AND (NULL)) AS NUMERIC)) ISNULL));
SELECT rt1.c3, rt0.c3, rt1.c0, rt1.c2, rt1.c4, rt1.c1, rt0.c0, rt0.c2, v0.c1, rt0.c4, rt0.c1, v0.c0 FROM rt1, v0, rt0;
SELECT DISTINCT rt1.c1, rt1.c4, rt0.c1, rt1.c0, rt0.c2, rt0.c4, rt0.c0, v0.c2, v0.c1, rt0.c3, v0.c0, rt1.c3 FROM rt1, v0, rt0;
SELECT DISTINCT rt1.c1, rt1.c4, rt0.c1, rt1.c0, rt0.c2, rt0.c4, rt0.c0, v0.c2, v0.c1, rt0.c3, v0.c0, rt1.c3 FROM rt1, v0, rt0 WHERE ((((((+ (v0.c2)))AND(NULL)))OR(((((rt0.c2)OR(rt1.c1)))AND(rt0.c4))))) UNION SELECT DISTINCT rt1.c1, rt1.c4, rt0.c1, rt1.c0, rt0.c2, rt0.c4, rt0.c0, v0.c2, v0.c1, rt0.c3, v0.c0, rt1.c3 FROM rt1, v0, rt0 WHERE ((NOT ((((((+ (v0.c2)))AND(NULL)))OR(((((rt0.c2)OR(rt1.c1)))AND(rt0.c4))))))) UNION SELECT DISTINCT rt1.c1, rt1.c4, rt0.c1, rt1.c0, rt0.c2, rt0.c4, rt0.c0, v0.c2, v0.c1, rt0.c3, v0.c0, rt1.c3 FROM rt1, v0, rt0 WHERE ((((((((+ (v0.c2)))AND(NULL)))OR(((((rt0.c2)OR(rt1.c1)))AND(rt0.c4))))) ISNULL));
SELECT DISTINCT rt1.c1, rt1.c4, rt0.c1, rt1.c0, rt0.c2, rt0.c4, rt0.c0, v0.c2, v0.c1, rt0.c3, v0.c0, rt1.c3 FROM rt1, v0, rt0;
SELECT ALL rt0.c3, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c3, rt0.c1, rt0.c2;
SELECT ALL rt0.c3, rt0.c1, rt0.c2 FROM rt0 WHERE (((((((((CAST(rt0.c3 AS REAL))OR(((rt0.c2) IS FALSE))))AND(((((rt0.c4)AND(rt0.c4)))AND(rt0.c3)))))OR(CASE rt0.c4  WHEN '-1946937528' THEN rt0.c2 WHEN rt0.c4 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c0 END)))OR(SQLITE_COMPILEOPTION_GET(rt0.c4)))) GROUP BY rt0.c3, rt0.c1, rt0.c2 UNION SELECT ALL rt0.c3, rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (((((((((CAST(rt0.c3 AS REAL))OR(((rt0.c2) IS FALSE))))AND(((((rt0.c4)AND(rt0.c4)))AND(rt0.c3)))))OR(CASE rt0.c4  WHEN '-1946937528' THEN rt0.c2 WHEN rt0.c4 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c0 END)))OR(SQLITE_COMPILEOPTION_GET(rt0.c4)))))) GROUP BY rt0.c3, rt0.c1, rt0.c2 UNION SELECT ALL rt0.c3, rt0.c1, rt0.c2 FROM rt0 WHERE (((((((((((CAST(rt0.c3 AS REAL))OR(((rt0.c2) IS FALSE))))AND(((((rt0.c4)AND(rt0.c4)))AND(rt0.c3)))))OR(CASE rt0.c4  WHEN '-1946937528' THEN rt0.c2 WHEN rt0.c4 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c0 END)))OR(SQLITE_COMPILEOPTION_GET(rt0.c4)))) ISNULL)) GROUP BY rt0.c3, rt0.c1, rt0.c2;
SELECT ALL rt0.c3, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c3, rt0.c1, rt0.c2;
SELECT ALL rt1.c3, rt0.c2, rt1.c1, rt0.c1, rt0.c0, rt1.c0, v0.c1, v0.c0, v0.c2, rt1.c2 FROM v0, rt0, rt1 GROUP BY rt1.c3, rt0.c2, rt1.c1, rt0.c1, rt0.c0, rt1.c0, v0.c1, v0.c0, v0.c2, rt1.c2;
SELECT rt1.c3, rt0.c2, rt1.c1, rt0.c1, rt0.c0, rt1.c0, v0.c1, v0.c0, v0.c2, rt1.c2 FROM v0, rt0, rt1 GROUP BY rt1.c3, rt0.c2, rt1.c1, rt0.c1, rt0.c0, rt1.c0, v0.c1, v0.c0, v0.c2, rt1.c2 HAVING ((((rt0.c4 IN ())))<=((GROUP_CONCAT(SUM(MAX(SUM(MIN(GROUP_CONCAT(COUNT(*)))))))))) UNION ALL SELECT ALL rt1.c3, rt0.c2, rt1.c1, rt0.c1, rt0.c0, rt1.c0, v0.c1, v0.c0, v0.c2, rt1.c2 FROM v0, rt0, rt1 GROUP BY rt1.c3, rt0.c2, rt1.c1, rt0.c1, rt0.c0, rt1.c0, v0.c1, v0.c0, v0.c2, rt1.c2 HAVING (NOT (((((rt0.c4 IN ())))<=((GROUP_CONCAT(SUM(MAX(SUM(MIN(GROUP_CONCAT(COUNT(*)))))))))))) UNION ALL SELECT ALL rt1.c3, rt0.c2, rt1.c1, rt0.c1, rt0.c0, rt1.c0, v0.c1, v0.c0, v0.c2, rt1.c2 FROM v0, rt0, rt1 GROUP BY rt1.c3, rt0.c2, rt1.c1, rt0.c1, rt0.c0, rt1.c0, v0.c1, v0.c0, v0.c2, rt1.c2 HAVING ((((((rt0.c4 IN ())))<=((GROUP_CONCAT(SUM(MAX(SUM(MIN(GROUP_CONCAT(COUNT(*))))))))))) ISNULL);
SELECT ALL * FROM rt1, v0;
SELECT ALL * FROM rt1, v0 WHERE (((rt1.c2)/(rt1.c4)) COLLATE NOCASE) UNION ALL SELECT ALL * FROM rt1, v0 WHERE ((NOT (((rt1.c2)/(rt1.c4)) COLLATE NOCASE))) UNION ALL SELECT ALL * FROM rt1, v0 WHERE (((((rt1.c2)/(rt1.c4)) COLLATE NOCASE) ISNULL));
SELECT ALL * FROM rt1, v0;
SELECT DISTINCT v0.c2, v0.c1, v0.c0, rt0.c3, rt0.c4, rt0.c2, rt1.c1, rt1.c0 FROM rt0, v0, rt1;
SELECT DISTINCT v0.c2, v0.c1, v0.c0, rt0.c3, rt0.c4, rt0.c2, rt1.c1, rt1.c0 FROM rt0, v0, rt1 WHERE (((v0.c0 COLLATE NOCASE) BETWEEN (v0.c1) AND (rt0.c2 COLLATE NOCASE))) UNION SELECT DISTINCT v0.c2, v0.c1, v0.c0, rt0.c3, rt0.c4, rt0.c2, rt1.c1, rt1.c0 FROM rt0, v0, rt1 WHERE ((NOT (((v0.c0 COLLATE NOCASE) BETWEEN (v0.c1) AND (rt0.c2 COLLATE NOCASE))))) UNION SELECT DISTINCT v0.c2, v0.c1, v0.c0, rt0.c3, rt0.c4, rt0.c2, rt1.c1, rt1.c0 FROM rt0, v0, rt1 WHERE (((((v0.c0 COLLATE NOCASE) BETWEEN (v0.c1) AND (rt0.c2 COLLATE NOCASE))) ISNULL));
SELECT DISTINCT v0.c2, v0.c1, v0.c0, rt0.c3, rt0.c4, rt0.c2, rt1.c1, rt1.c0 FROM rt0, v0, rt1;
SELECT rt0.c2, rt1.c4, v0.c2, rt0.c1, rt1.c2, rt0.c4, v0.c1, rt1.c0, rt0.c0, rt1.c3, rt1.c1 FROM rt1, rt0, v0 GROUP BY rt0.c2, rt1.c4, v0.c2, rt0.c1, rt1.c2, rt0.c4, v0.c1, rt1.c0, rt0.c0, rt1.c3, rt1.c1;
SELECT rt0.c2, rt1.c4, v0.c2, rt0.c1, rt1.c2, rt0.c4, v0.c1, rt1.c0, rt0.c0, rt1.c3, rt1.c1 FROM rt1, rt0, v0 WHERE (((((((rt1.c1)AND(0.40475380278349304)))AND(rt0.c4))) IS FALSE)) GROUP BY rt0.c2, rt1.c4, v0.c2, rt0.c1, rt1.c2, rt0.c4, v0.c1, rt1.c0, rt0.c0, rt1.c3, rt1.c1 UNION SELECT ALL rt0.c2, rt1.c4, v0.c2, rt0.c1, rt1.c2, rt0.c4, v0.c1, rt1.c0, rt0.c0, rt1.c3, rt1.c1 FROM rt1, rt0, v0 WHERE ((NOT (((((((rt1.c1)AND(0.40475380278349304)))AND(rt0.c4))) IS FALSE)))) GROUP BY rt0.c2, rt1.c4, v0.c2, rt0.c1, rt1.c2, rt0.c4, v0.c1, rt1.c0, rt0.c0, rt1.c3, rt1.c1 UNION SELECT ALL rt0.c2, rt1.c4, v0.c2, rt0.c1, rt1.c2, rt0.c4, v0.c1, rt1.c0, rt0.c0, rt1.c3, rt1.c1 FROM rt1, rt0, v0 WHERE (((((((((rt1.c1)AND(0.40475380278349304)))AND(rt0.c4))) IS FALSE)) ISNULL)) GROUP BY rt0.c2, rt1.c4, v0.c2, rt0.c1, rt1.c2, rt0.c4, v0.c1, rt1.c0, rt0.c0, rt1.c3, rt1.c1;
SELECT rt0.c2, rt1.c4, v0.c2, rt0.c1, rt1.c2, rt0.c4, v0.c1, rt1.c0, rt0.c0, rt1.c3, rt1.c1 FROM rt1, rt0, v0 GROUP BY rt0.c2, rt1.c4, v0.c2, rt0.c1, rt1.c2, rt0.c4, v0.c1, rt1.c0, rt0.c0, rt1.c3, rt1.c1;
SELECT ALL v0.c2, rt1.c4, rt1.c3, rt0.c1, v0.c1, rt0.c0, rt1.c2, rt1.c1, rt1.c0, v0.c0, rt0.c4, rt0.c3, rt0.c2 FROM v0 CROSS JOIN rt1 ON ((((rt1.c0) BETWEEN (rt0.c0) AND (rt0.c3))) NOT NULL) INNER JOIN rt0 ON CASE rt1.c2  WHEN rt1.c3 THEN rt1.c2 ELSE rt1.c1 END COLLATE BINARY GROUP BY v0.c2, rt1.c4, rt1.c3, rt0.c1, v0.c1, rt0.c0, rt1.c2, rt1.c1, rt1.c0, v0.c0, rt0.c4, rt0.c3, rt0.c2;
SELECT ALL v0.c2, rt1.c4, rt1.c3, rt0.c1, v0.c1, rt0.c0, rt1.c2, rt1.c1, rt1.c0, v0.c0, rt0.c4, rt0.c3, rt0.c2 FROM v0 CROSS JOIN rt1 ON ((((rt1.c0) BETWEEN (rt0.c0) AND (rt0.c3))) NOT NULL) INNER JOIN rt0 ON CASE rt1.c2  WHEN rt1.c3 THEN rt1.c2 ELSE rt1.c1 END COLLATE BINARY GROUP BY v0.c2, rt1.c4, rt1.c3, rt0.c1, v0.c1, rt0.c0, rt1.c2, rt1.c1, rt1.c0, v0.c0, rt0.c4, rt0.c3, rt0.c2 HAVING SUM((NOT (rt1.c4))) UNION ALL SELECT ALL v0.c2, rt1.c4, rt1.c3, rt0.c1, v0.c1, rt0.c0, rt1.c2, rt1.c1, rt1.c0, v0.c0, rt0.c4, rt0.c3, rt0.c2 FROM v0 CROSS JOIN rt1 ON ((((rt1.c0) BETWEEN (rt0.c0) AND (rt0.c3))) NOT NULL) INNER JOIN rt0 ON CASE rt1.c2  WHEN rt1.c3 THEN rt1.c2 ELSE rt1.c1 END COLLATE BINARY GROUP BY v0.c2, rt1.c4, rt1.c3, rt0.c1, v0.c1, rt0.c0, rt1.c2, rt1.c1, rt1.c0, v0.c0, rt0.c4, rt0.c3, rt0.c2 HAVING (NOT (SUM((NOT (rt1.c4))))) UNION ALL SELECT ALL v0.c2, rt1.c4, rt1.c3, rt0.c1, v0.c1, rt0.c0, rt1.c2, rt1.c1, rt1.c0, v0.c0, rt0.c4, rt0.c3, rt0.c2 FROM v0 CROSS JOIN rt1 ON ((((rt1.c0) BETWEEN (rt0.c0) AND (rt0.c3))) NOT NULL) INNER JOIN rt0 ON CASE rt1.c2  WHEN rt1.c3 THEN rt1.c2 ELSE rt1.c1 END COLLATE BINARY GROUP BY v0.c2, rt1.c4, rt1.c3, rt0.c1, v0.c1, rt0.c0, rt1.c2, rt1.c1, rt1.c0, v0.c0, rt0.c4, rt0.c3, rt0.c2 HAVING ((SUM((NOT (rt1.c4)))) ISNULL);
SELECT ALL v0.c2, rt1.c4, rt1.c3, rt0.c1, v0.c1, rt0.c0, rt1.c2, rt1.c1, rt1.c0, v0.c0, rt0.c4, rt0.c3, rt0.c2 FROM v0 CROSS JOIN rt1 ON ((((rt1.c0) BETWEEN (rt0.c0) AND (rt0.c3))) NOT NULL) INNER JOIN rt0 ON CASE rt1.c2  WHEN rt1.c3 THEN rt1.c2 ELSE rt1.c1 END COLLATE BINARY GROUP BY v0.c2, rt1.c4, rt1.c3, rt0.c1, v0.c1, rt0.c0, rt1.c2, rt1.c1, rt1.c0, v0.c0, rt0.c4, rt0.c3, rt0.c2;
SELECT ALL v0.c2, rt1.c4, rt1.c3, rt0.c1, v0.c1, rt0.c0, rt1.c2, rt1.c1, rt1.c0, v0.c0, rt0.c4, rt0.c3, rt0.c2 FROM v0 CROSS JOIN rt1 ON ((((rt1.c0) BETWEEN (rt0.c0) AND (rt0.c3))) NOT NULL) INNER JOIN rt0 ON CASE rt1.c2  WHEN rt1.c3 THEN rt1.c2 ELSE rt1.c1 END COLLATE BINARY GROUP BY v0.c2, rt1.c4, rt1.c3, rt0.c1, v0.c1, rt0.c0, rt1.c2, rt1.c1, rt1.c0, v0.c0, rt0.c4, rt0.c3, rt0.c2 HAVING SUM((NOT (rt1.c4))) UNION ALL SELECT ALL v0.c2, rt1.c4, rt1.c3, rt0.c1, v0.c1, rt0.c0, rt1.c2, rt1.c1, rt1.c0, v0.c0, rt0.c4, rt0.c3, rt0.c2 FROM v0 CROSS JOIN rt1 ON ((((rt1.c0) BETWEEN (rt0.c0) AND (rt0.c3))) NOT NULL) INNER JOIN rt0 ON CASE rt1.c2  WHEN rt1.c3 THEN rt1.c2 ELSE rt1.c1 END COLLATE BINARY GROUP BY v0.c2, rt1.c4, rt1.c3, rt0.c1, v0.c1, rt0.c0, rt1.c2, rt1.c1, rt1.c0, v0.c0, rt0.c4, rt0.c3, rt0.c2 HAVING (NOT (SUM((NOT (rt1.c4))))) UNION ALL SELECT ALL v0.c2, rt1.c4, rt1.c3, rt0.c1, v0.c1, rt0.c0, rt1.c2, rt1.c1, rt1.c0, v0.c0, rt0.c4, rt0.c3, rt0.c2 FROM v0 CROSS JOIN rt1 ON ((((rt1.c0) BETWEEN (rt0.c0) AND (rt0.c3))) NOT NULL) INNER JOIN rt0 ON CASE rt1.c2  WHEN rt1.c3 THEN rt1.c2 ELSE rt1.c1 END COLLATE BINARY GROUP BY v0.c2, rt1.c4, rt1.c3, rt0.c1, v0.c1, rt0.c0, rt1.c2, rt1.c1, rt1.c0, v0.c0, rt0.c4, rt0.c3, rt0.c2 HAVING ((SUM((NOT (rt1.c4)))) ISNULL);
SELECT ALL v0.c2, rt1.c4, rt1.c3, rt0.c1, v0.c1, rt0.c0, rt1.c2, rt1.c1, rt1.c0, v0.c0, rt0.c4, rt0.c3, rt0.c2 FROM v0 CROSS JOIN rt1 ON ((((rt1.c0) BETWEEN (rt0.c0) AND (rt0.c3))) NOT NULL) INNER JOIN rt0 ON CASE rt1.c2  WHEN rt1.c3 THEN rt1.c2 ELSE rt1.c1 END COLLATE BINARY GROUP BY v0.c2, rt1.c4, rt1.c3, rt0.c1, v0.c1, rt0.c0, rt1.c2, rt1.c1, rt1.c0, v0.c0, rt0.c4, rt0.c3, rt0.c2;
SELECT ALL v0.c2, rt1.c2, v0.c0, rt1.c0, rt0.c0 FROM rt0, rt1, v0;
SELECT v0.c2, rt1.c2, v0.c0, rt1.c0, rt0.c0 FROM rt0, rt1, v0 WHERE ((~ ((v0.c2 IN ())))) UNION ALL SELECT ALL v0.c2, rt1.c2, v0.c0, rt1.c0, rt0.c0 FROM rt0, rt1, v0 WHERE ((NOT ((~ ((v0.c2 IN ())))))) UNION ALL SELECT v0.c2, rt1.c2, v0.c0, rt1.c0, rt0.c0 FROM rt0, rt1, v0 WHERE ((((~ ((v0.c2 IN ())))) ISNULL));
SELECT ALL v0.c2, rt1.c2, v0.c0, rt1.c0, rt0.c0 FROM rt0, rt1, v0;
SELECT DISTINCT rt1.c1, v0.c0, v0.c1, rt1.c3, rt1.c2, v0.c2 FROM rt1, v0;
SELECT DISTINCT rt1.c1, v0.c0, v0.c1, rt1.c3, rt1.c2, v0.c2 FROM rt1, v0 WHERE ((((0.942083848916586) NOT BETWEEN (rt1.c1) AND (v0.c1)) IN ())) UNION SELECT DISTINCT rt1.c1, v0.c0, v0.c1, rt1.c3, rt1.c2, v0.c2 FROM rt1, v0 WHERE ((NOT ((((0.942083848916586) NOT BETWEEN (rt1.c1) AND (v0.c1)) IN ())))) UNION SELECT DISTINCT rt1.c1, v0.c0, v0.c1, rt1.c3, rt1.c2, v0.c2 FROM rt1, v0 WHERE ((((((0.942083848916586) NOT BETWEEN (rt1.c1) AND (v0.c1)) IN ())) ISNULL));
SELECT DISTINCT rt1.c1, v0.c0, v0.c1, rt1.c3, rt1.c2, v0.c2 FROM rt1, v0;
SELECT ALL rt0.c0, rt0.c3 FROM v0, rt0 GROUP BY rt0.c0, rt0.c3;
SELECT ALL rt0.c0, rt0.c3 FROM v0, rt0 WHERE ((IFNULL(rt0.c1, rt0.c4) IN (((((((((rt0.c1)AND(rt0.c4)))OR(rt0.c1)))AND(0.05736844987810663)))OR(rt0.c2))))) GROUP BY rt0.c0, rt0.c3 UNION SELECT ALL rt0.c0, rt0.c3 FROM v0, rt0 WHERE ((NOT ((IFNULL(rt0.c1, rt0.c4) IN (((((((((rt0.c1)AND(rt0.c4)))OR(rt0.c1)))AND(0.05736844987810663)))OR(rt0.c2))))))) GROUP BY rt0.c0, rt0.c3 UNION SELECT ALL rt0.c0, rt0.c3 FROM v0, rt0 WHERE ((((IFNULL(rt0.c1, rt0.c4) IN (((((((((rt0.c1)AND(rt0.c4)))OR(rt0.c1)))AND(0.05736844987810663)))OR(rt0.c2))))) ISNULL)) GROUP BY rt0.c0, rt0.c3;
SELECT ALL rt0.c0, rt0.c3 FROM v0, rt0 GROUP BY rt0.c0, rt0.c3;
SELECT rt1.c1, v0.c2, rt1.c0, v0.c1, v0.c0 FROM rt1 NATURAL JOIN v0 GROUP BY rt1.c1, v0.c2, rt1.c0, v0.c1, v0.c0;
SELECT ALL rt1.c1, v0.c2, rt1.c0, v0.c1, v0.c0 FROM rt1 NATURAL JOIN v0 GROUP BY rt1.c1, v0.c2, rt1.c0, v0.c1, v0.c0 HAVING GROUP_CONCAT((((v0.c2)) NOT BETWEEN ((SUM(rt1.c0))) AND ((MIN(rt1.c1))))) UNION ALL SELECT ALL rt1.c1, v0.c2, rt1.c0, v0.c1, v0.c0 FROM rt1 NATURAL JOIN v0 GROUP BY rt1.c1, v0.c2, rt1.c0, v0.c1, v0.c0 HAVING (NOT (GROUP_CONCAT((((v0.c2)) NOT BETWEEN ((SUM(rt1.c0))) AND ((MIN(rt1.c1))))))) UNION ALL SELECT ALL rt1.c1, v0.c2, rt1.c0, v0.c1, v0.c0 FROM rt1 NATURAL JOIN v0 GROUP BY rt1.c1, v0.c2, rt1.c0, v0.c1, v0.c0 HAVING ((GROUP_CONCAT((((v0.c2)) NOT BETWEEN ((SUM(rt1.c0))) AND ((MIN(rt1.c1)))))) ISNULL);
SELECT rt0.c1, rt0.c2, rt0.c3, rt0.c0, rt0.c4 FROM rt0;
SELECT rt0.c1, rt0.c2, rt0.c3, rt0.c0, rt0.c4 FROM rt0 WHERE (CASE rt0.c3  WHEN rt0.c1 THEN '' END) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c3, rt0.c0, rt0.c4 FROM rt0 WHERE ((NOT (CASE rt0.c3  WHEN rt0.c1 THEN '' END))) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c3, rt0.c0, rt0.c4 FROM rt0 WHERE (((CASE rt0.c3  WHEN rt0.c1 THEN '' END) ISNULL));
SELECT rt0.c1, rt0.c2, rt0.c3, rt0.c0, rt0.c4 FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (CAST((rt0.c2 IN ()) AS NUMERIC)) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (CAST((rt0.c2 IN ()) AS NUMERIC)))) UNION SELECT DISTINCT * FROM rt0 WHERE (((CAST((rt0.c2 IN ()) AS NUMERIC)) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt1.c3, rt0.c0, rt1.c4, rt0.c3, rt0.c1, rt1.c1, rt1.c2, rt0.c2, rt1.c0, rt0.c4 FROM rt0 LEFT OUTER JOIN rt1 ON LIKELIHOOD((NOT (rt1.c0)), 0.35039257251609734) GROUP BY rt1.c3, rt0.c0, rt1.c4, rt0.c3, rt0.c1, rt1.c1, rt1.c2, rt0.c2, rt1.c0, rt0.c4;
SELECT ALL rt1.c3, rt0.c0, rt1.c4, rt0.c3, rt0.c1, rt1.c1, rt1.c2, rt0.c2, rt1.c0, rt0.c4 FROM rt0 LEFT OUTER JOIN rt1 ON LIKELIHOOD((NOT (rt1.c0)), 0.35039257251609734) WHERE ((('FQ') ISNULL)) GROUP BY rt1.c3, rt0.c0, rt1.c4, rt0.c3, rt0.c1, rt1.c1, rt1.c2, rt0.c2, rt1.c0, rt0.c4 UNION SELECT rt1.c3, rt0.c0, rt1.c4, rt0.c3, rt0.c1, rt1.c1, rt1.c2, rt0.c2, rt1.c0, rt0.c4 FROM rt0 LEFT OUTER JOIN rt1 ON LIKELIHOOD((NOT (rt1.c0)), 0.35039257251609734) WHERE ((NOT ((('FQ') ISNULL)))) GROUP BY rt1.c3, rt0.c0, rt1.c4, rt0.c3, rt0.c1, rt1.c1, rt1.c2, rt0.c2, rt1.c0, rt0.c4 UNION SELECT rt1.c3, rt0.c0, rt1.c4, rt0.c3, rt0.c1, rt1.c1, rt1.c2, rt0.c2, rt1.c0, rt0.c4 FROM rt0 LEFT OUTER JOIN rt1 ON LIKELIHOOD((NOT (rt1.c0)), 0.35039257251609734) WHERE ((((('FQ') ISNULL)) ISNULL)) GROUP BY rt1.c3, rt0.c0, rt1.c4, rt0.c3, rt0.c1, rt1.c1, rt1.c2, rt0.c2, rt1.c0, rt0.c4;
SELECT ALL rt1.c3, rt0.c0, rt1.c4, rt0.c3, rt0.c1, rt1.c1, rt1.c2, rt0.c2, rt1.c0, rt0.c4 FROM rt0 LEFT OUTER JOIN rt1 ON LIKELIHOOD((NOT (rt1.c0)), 0.35039257251609734) GROUP BY rt1.c3, rt0.c0, rt1.c4, rt0.c3, rt0.c1, rt1.c1, rt1.c2, rt0.c2, rt1.c0, rt0.c4;
SELECT ALL rt1.c3, rt1.c0 FROM rt1 GROUP BY rt1.c3, rt1.c0;
SELECT ALL rt1.c3, rt1.c0 FROM rt1 GROUP BY rt1.c3, rt1.c0 HAVING GROUP_CONCAT(((COUNT(*)) NOT BETWEEN (SUM(rt1.c2)) AND (rt1.c4))) UNION ALL SELECT ALL rt1.c3, rt1.c0 FROM rt1 GROUP BY rt1.c3, rt1.c0 HAVING (NOT (GROUP_CONCAT(((COUNT(*)) NOT BETWEEN (SUM(rt1.c2)) AND (rt1.c4))))) UNION ALL SELECT rt1.c3, rt1.c0 FROM rt1 GROUP BY rt1.c3, rt1.c0 HAVING ((GROUP_CONCAT(((COUNT(*)) NOT BETWEEN (SUM(rt1.c2)) AND (rt1.c4)))) ISNULL);
SELECT TOTAL((CAST(v0.c1 AS BLOB) IN ())) FROM rt0, v0 ORDER BY ((((((rt0.c3)AND(v0.c1)))OR(v0.c0))) NOT NULL) DESC  NULLS FIRST, NULL COLLATE BINARY;
SELECT ALL * FROM rt1, rt0 INNER JOIN v0 ON ((((((((((((((rt0.c2)AND(rt1.c0)))OR(rt0.c4)))OR(v0.c1)))OR(v0.c0)))OR(v0.c0)))AND(rt1.c0)))<((rt0.c0 IN (v0.c2))));
SELECT ALL * FROM rt1, rt0 INNER JOIN v0 ON ((((((((((((((rt0.c2)AND(rt1.c0)))OR(rt0.c4)))OR(v0.c1)))OR(v0.c0)))OR(v0.c0)))AND(rt1.c0)))<((rt0.c0 IN (v0.c2)))) WHERE ((((v0.c1, rt1.c4, rt0.c1)) NOT BETWEEN ((CAST(rt0.c0 AS NUMERIC), (rt1.c1 IN (rt0.c4)), CASE WHEN v0.c1 THEN rt1.c1 END)) AND (((((x''))<=((rt1.c2))), TRIM(rt0.c2), rt0.c3 COLLATE NOCASE)))) UNION ALL SELECT * FROM rt1, rt0 INNER JOIN v0 ON ((((((((((((((rt0.c2)AND(rt1.c0)))OR(rt0.c4)))OR(v0.c1)))OR(v0.c0)))OR(v0.c0)))AND(rt1.c0)))<((rt0.c0 IN (v0.c2)))) WHERE ((NOT ((((v0.c1, rt1.c4, rt0.c1)) NOT BETWEEN ((CAST(rt0.c0 AS NUMERIC), (rt1.c1 IN (rt0.c4)), CASE WHEN v0.c1 THEN rt1.c1 END)) AND (((((x''))<=((rt1.c2))), TRIM(rt0.c2), rt0.c3 COLLATE NOCASE)))))) UNION ALL SELECT ALL * FROM rt1, rt0 INNER JOIN v0 ON ((((((((((((((rt0.c2)AND(rt1.c0)))OR(rt0.c4)))OR(v0.c1)))OR(v0.c0)))OR(v0.c0)))AND(rt1.c0)))<((rt0.c0 IN (v0.c2)))) WHERE ((((((v0.c1, rt1.c4, rt0.c1)) NOT BETWEEN ((CAST(rt0.c0 AS NUMERIC), (rt1.c1 IN (rt0.c4)), CASE WHEN v0.c1 THEN rt1.c1 END)) AND (((((x''))<=((rt1.c2))), TRIM(rt0.c2), rt0.c3 COLLATE NOCASE)))) ISNULL));
SELECT ALL * FROM rt1, rt0 INNER JOIN v0 ON ((((((((((((((rt0.c2)AND(rt1.c0)))OR(rt0.c4)))OR(v0.c1)))OR(v0.c0)))OR(v0.c0)))AND(rt1.c0)))<((rt0.c0 IN (v0.c2))));
SELECT DISTINCT rt0.c1, rt0.c3, rt0.c2, rt0.c0, v0.c2, v0.c1, rt0.c4 FROM rt0, v0;
SELECT DISTINCT rt0.c1, rt0.c3, rt0.c2, rt0.c0, v0.c2, v0.c1, rt0.c4 FROM rt0, v0 WHERE ((((('0.6170624114939711')AND((((rt0.c2, rt0.c4, v0.c1))>((rt0.c0, v0.c1, rt0.c2))))))OR(CASE v0.c1  WHEN v0.c1 THEN v0.c2 ELSE rt0.c0 END))) UNION SELECT DISTINCT rt0.c1, rt0.c3, rt0.c2, rt0.c0, v0.c2, v0.c1, rt0.c4 FROM rt0, v0 WHERE ((NOT ((((('0.6170624114939711')AND((((rt0.c2, rt0.c4, v0.c1))>((rt0.c0, v0.c1, rt0.c2))))))OR(CASE v0.c1  WHEN v0.c1 THEN v0.c2 ELSE rt0.c0 END))))) UNION SELECT DISTINCT rt0.c1, rt0.c3, rt0.c2, rt0.c0, v0.c2, v0.c1, rt0.c4 FROM rt0, v0 WHERE ((((((('0.6170624114939711')AND((((rt0.c2, rt0.c4, v0.c1))>((rt0.c0, v0.c1, rt0.c2))))))OR(CASE v0.c1  WHEN v0.c1 THEN v0.c2 ELSE rt0.c0 END))) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c3, rt0.c2, rt0.c0, v0.c2, v0.c1, rt0.c4 FROM rt0, v0;
SELECT ALL v0.c0, v0.c1, v0.c2 FROM v0 GROUP BY v0.c0, v0.c1, v0.c2;
SELECT v0.c0, v0.c1, v0.c2 FROM v0 WHERE (NULL) GROUP BY v0.c0, v0.c1, v0.c2 UNION SELECT ALL v0.c0, v0.c1, v0.c2 FROM v0 WHERE ((NOT (NULL))) GROUP BY v0.c0, v0.c1, v0.c2 UNION SELECT v0.c0, v0.c1, v0.c2 FROM v0 WHERE (((NULL) ISNULL)) GROUP BY v0.c0, v0.c1, v0.c2;
SELECT ALL v0.c0, v0.c1, v0.c2 FROM v0 GROUP BY v0.c0, v0.c1, v0.c2;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING AVG(GROUP_CONCAT(GROUP_CONCAT(COUNT(MIN(rt0.c2))))) UNION ALL SELECT rt0.c1, rt0.c0 FROM rt0 NOT INDEXED GROUP BY rt0.c1, rt0.c0 HAVING (NOT (AVG(GROUP_CONCAT(GROUP_CONCAT(COUNT(MIN(rt0.c2))))))) UNION ALL SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING ((AVG(GROUP_CONCAT(GROUP_CONCAT(COUNT(MIN(rt0.c2)))))) ISNULL);
SELECT * FROM rt0, v0;
SELECT * FROM rt0, v0 WHERE ('0.6170624114939711') UNION ALL SELECT * FROM rt0, v0 WHERE ((NOT ('0.6170624114939711'))) UNION ALL SELECT ALL * FROM rt0, v0 NOT INDEXED WHERE ((('0.6170624114939711') ISNULL));
SELECT * FROM rt0, v0;
SELECT DISTINCT * FROM rt1;
SELECT DISTINCT * FROM rt1 WHERE (((load_extension(rt1.c4)) IS FALSE)) UNION SELECT DISTINCT * FROM rt1 WHERE ((NOT (((load_extension(rt1.c4)) IS FALSE)))) UNION SELECT DISTINCT * FROM rt1 WHERE (((((load_extension(rt1.c4)) IS FALSE)) ISNULL));
SELECT ALL rt0.c0, v0.c2, rt1.c1, rt0.c3, v0.c0, rt0.c4, rt1.c4 FROM rt1 FULL OUTER JOIN v0 ON json_array_length(((rt0.c3) NOT BETWEEN (rt1.c2) AND (v0.c1))) LEFT OUTER JOIN rt0 ON NULLIF((('y%*hr9')OR(v0.c1)), rt0.c0) GROUP BY rt0.c0, v0.c2, rt1.c1, rt0.c3, v0.c0, rt0.c4, rt1.c4;
SELECT rt1.c1, rt1.c4, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c4, rt1.c0;
SELECT ALL rt1.c1, rt1.c4, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c4, rt1.c0 HAVING MIN(SUM(TOTAL(rt1.c4))) UNION ALL SELECT rt1.c1, rt1.c4, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c4, rt1.c0 HAVING (NOT (MIN(SUM(TOTAL(rt1.c4))))) UNION ALL SELECT rt1.c1, rt1.c4, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c4, rt1.c0 HAVING ((MIN(SUM(TOTAL(rt1.c4)))) ISNULL);
SELECT * FROM v0;
SELECT * FROM v0 WHERE (NULL) UNION ALL SELECT ALL * FROM v0 WHERE ((NOT (NULL))) UNION ALL SELECT ALL * FROM v0 WHERE (((NULL) ISNULL));
SELECT * FROM v0;
SELECT DISTINCT rt1.c1, rt1.c0, rt1.c4 FROM rt1;
SELECT DISTINCT rt1.c1, rt1.c0, rt1.c4 FROM rt1 WHERE ((((rt1.c2, rt1.c0, rt1.c2)) BETWEEN (((((rt1.c3))>((rt1.c0))), ((rt1.c3) BETWEEN (rt1.c4) AND (x'')), (NOT ('')))) AND ((((rt1.c3) NOT NULL), ((rt1.c4) IS TRUE), rt1.c1)))) UNION SELECT DISTINCT rt1.c1, rt1.c0, rt1.c4 FROM rt1 WHERE ((NOT ((((rt1.c2, rt1.c0, rt1.c2)) BETWEEN (((((rt1.c3))>((rt1.c0))), ((rt1.c3) BETWEEN (rt1.c4) AND (x'')), (NOT ('')))) AND ((((rt1.c3) NOT NULL), ((rt1.c4) IS TRUE), rt1.c1)))))) UNION SELECT DISTINCT rt1.c1, rt1.c0, rt1.c4 FROM rt1 WHERE ((((((rt1.c2, rt1.c0, rt1.c2)) BETWEEN (((((rt1.c3))>((rt1.c0))), ((rt1.c3) BETWEEN (rt1.c4) AND (x'')), (NOT ('')))) AND ((((rt1.c3) NOT NULL), ((rt1.c4) IS TRUE), rt1.c1)))) ISNULL));
SELECT DISTINCT rt1.c1, rt1.c0, rt1.c4 FROM rt1;
SELECT rt1.c2, rt1.c3, rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c2, rt1.c3, rt1.c1, rt1.c0;
SELECT ALL rt1.c2, rt1.c3, rt1.c1, rt1.c0 FROM rt1 WHERE (rt1.c2) GROUP BY rt1.c2, rt1.c3, rt1.c1, rt1.c0 UNION SELECT ALL rt1.c2, rt1.c3, rt1.c1, rt1.c0 FROM rt1 WHERE ((NOT (rt1.c2))) GROUP BY rt1.c2, rt1.c3, rt1.c1, rt1.c0 UNION SELECT ALL rt1.c2, rt1.c3, rt1.c1, rt1.c0 FROM rt1 WHERE (((rt1.c2) ISNULL)) GROUP BY rt1.c2, rt1.c3, rt1.c1, rt1.c0;
SELECT rt1.c2, rt1.c3, rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c2, rt1.c3, rt1.c1, rt1.c0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL * FROM rt0, v0;
SELECT ALL * FROM rt0, v0 WHERE (CAST((rt0.c2 IN ()) AS BLOB)) UNION ALL SELECT * FROM rt0, v0 WHERE ((NOT (CAST((rt0.c2 IN ()) AS BLOB)))) UNION ALL SELECT ALL * FROM rt0, v0 WHERE (((CAST((rt0.c2 IN ()) AS BLOB)) ISNULL));
SELECT ALL * FROM rt0, v0;
SELECT DISTINCT rt1.c1, rt1.c4 FROM rt1;
SELECT DISTINCT rt1.c1, rt1.c4 FROM rt1 WHERE ((((((('[E(A')OR(rt1.c3)))OR(rt1.c2)))>=(LOWER(DISTINCT rt1.c4)))) UNION SELECT DISTINCT rt1.c1, rt1.c4 FROM rt1 WHERE ((NOT ((((((('[E(A')OR(rt1.c3)))OR(rt1.c2)))>=(LOWER(DISTINCT rt1.c4)))))) UNION SELECT DISTINCT rt1.c1, rt1.c4 FROM rt1 WHERE ((((((((('[E(A')OR(rt1.c3)))OR(rt1.c2)))>=(LOWER(DISTINCT rt1.c4)))) ISNULL));
SELECT DISTINCT rt1.c1, rt1.c4 FROM rt1;
SELECT ALL rt1.c1, rt1.c3 FROM rt1, v0, rt0 GROUP BY rt1.c1, rt1.c3;
SELECT ALL rt1.c1, rt1.c3 FROM rt1, v0, rt0 WHERE ((- ((('75媎6깐SF')GLOB(rt0.c2))))) GROUP BY rt1.c1, rt1.c3 UNION SELECT ALL rt1.c1, rt1.c3 FROM rt1, v0, rt0 WHERE ((NOT ((- ((('75媎6깐SF')GLOB(rt0.c2))))))) GROUP BY rt1.c1, rt1.c3 UNION SELECT ALL rt1.c1, rt1.c3 FROM rt1, v0, rt0 WHERE ((((- ((('75媎6깐SF')GLOB(rt0.c2))))) ISNULL)) GROUP BY rt1.c1, rt1.c3;
SELECT ALL rt1.c1, rt1.c3 FROM rt1, v0, rt0 GROUP BY rt1.c1, rt1.c3;
SELECT rt1.c0, rt1.c3, rt1.c1, rt1.c4 FROM rt1, v0 GROUP BY rt1.c0, rt1.c3, rt1.c1, rt1.c4;
SELECT rt1.c0, rt1.c3, rt1.c1, rt1.c4 FROM rt1, v0 GROUP BY rt1.c0, rt1.c3, rt1.c1, rt1.c4 HAVING 0.5919639717685562 UNION ALL SELECT rt1.c0, rt1.c3, rt1.c1, rt1.c4 FROM rt1, v0 GROUP BY rt1.c0, rt1.c3, rt1.c1, rt1.c4 HAVING (NOT (0.5919639717685562)) UNION ALL SELECT rt1.c0, rt1.c3, rt1.c1, rt1.c4 FROM rt1, v0 GROUP BY rt1.c0, rt1.c3, rt1.c1, rt1.c4 HAVING ((0.5919639717685562) ISNULL);
SELECT rt1.c0, rt1.c3, rt1.c1, rt1.c4 FROM rt1, v0 GROUP BY rt1.c0, rt1.c3, rt1.c1, rt1.c4;
SELECT rt1.c0, rt1.c3, rt1.c1, rt1.c4 FROM rt1, v0 GROUP BY rt1.c0, rt1.c3, rt1.c1, rt1.c4 HAVING 0.5919639717685562 UNION ALL SELECT rt1.c0, rt1.c3, rt1.c1, rt1.c4 FROM rt1, v0 GROUP BY rt1.c0, rt1.c3, rt1.c1, rt1.c4 HAVING (NOT (0.5919639717685562)) UNION ALL SELECT rt1.c0, rt1.c3, rt1.c1, rt1.c4 FROM rt1, v0 GROUP BY rt1.c0, rt1.c3, rt1.c1, rt1.c4 HAVING ((0.5919639717685562) ISNULL);
SELECT rt1.c0, rt1.c3, rt1.c1, rt1.c4 FROM rt1, v0 GROUP BY rt1.c0, rt1.c3, rt1.c1, rt1.c4;
SELECT TOTAL(CASE CAST(v0.c0 AS TEXT)  WHEN CAST(v0.c1 AS INTEGER) THEN ((v0.c1)<(v0.c1)) ELSE ((v0.c2) BETWEEN (v0.c0) AND (v0.c0)) END) FROM v0 ORDER BY GLOB(((v0.c1) NOT BETWEEN (NULL) AND (v0.c0)), (v0.c0 IN ())) DESC;
SELECT v0.c1, v0.c0, v0.c2 FROM v0;
SELECT ALL v0.c1, v0.c0, v0.c2 FROM v0 WHERE ((0.4421100962888431 IN (NULLIF(v0.c0, v0.c0)))) UNION ALL SELECT v0.c1, v0.c0, v0.c2 FROM v0 WHERE ((NOT ((0.4421100962888431 IN (NULLIF(v0.c0, v0.c0)))))) UNION ALL SELECT ALL v0.c1, v0.c0, v0.c2 FROM v0 WHERE ((((0.4421100962888431 IN (NULLIF(v0.c0, v0.c0)))) ISNULL));
SELECT v0.c1, v0.c0, v0.c2 FROM v0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE ((((((v0.c2, v0.c0, v0.c2))>((v0.c1, v0.c2, v0.c1))))+(v0.c0))) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT ((((((v0.c2, v0.c0, v0.c2))>((v0.c1, v0.c2, v0.c1))))+(v0.c0))))) UNION SELECT DISTINCT * FROM v0 WHERE ((((((((v0.c2, v0.c0, v0.c2))>((v0.c1, v0.c2, v0.c1))))+(v0.c0))) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT ALL rt1.c0, rt1.c3, rt1.c4, rt0.c3, rt1.c2, rt0.c4, rt0.c2, rt0.c1 FROM rt0, rt1 GROUP BY rt1.c0, rt1.c3, rt1.c4, rt0.c3, rt1.c2, rt0.c4, rt0.c2, rt0.c1;
SELECT rt1.c0, rt1.c3, rt1.c4, rt0.c3, rt1.c2, rt0.c4, rt0.c2, rt0.c1 FROM rt0, rt1 WHERE (((CASE rt1.c2  WHEN rt1.c1 THEN rt0.c2 ELSE rt0.c3 END)||(rt0.c3))) GROUP BY rt1.c0, rt1.c3, rt1.c4, rt0.c3, rt1.c2, rt0.c4, rt0.c2, rt0.c1 UNION SELECT ALL rt1.c0, rt1.c3, rt1.c4, rt0.c3, rt1.c2, rt0.c4, rt0.c2, rt0.c1 FROM rt0, rt1 WHERE ((NOT (((CASE rt1.c2  WHEN rt1.c1 THEN rt0.c2 ELSE rt0.c3 END)||(rt0.c3))))) GROUP BY rt1.c0, rt1.c3, rt1.c4, rt0.c3, rt1.c2, rt0.c4, rt0.c2, rt0.c1 UNION SELECT rt1.c0, rt1.c3, rt1.c4, rt0.c3, rt1.c2, rt0.c4, rt0.c2, rt0.c1 FROM rt0, rt1 WHERE (((((CASE rt1.c2  WHEN rt1.c1 THEN rt0.c2 ELSE rt0.c3 END)||(rt0.c3))) ISNULL)) GROUP BY rt1.c0, rt1.c3, rt1.c4, rt0.c3, rt1.c2, rt0.c4, rt0.c2, rt0.c1;
SELECT ALL rt1.c0, rt1.c3, rt1.c4, rt0.c3, rt1.c2, rt0.c4, rt0.c2, rt0.c1 FROM rt0, rt1 GROUP BY rt1.c0, rt1.c3, rt1.c4, rt0.c3, rt1.c2, rt0.c4, rt0.c2, rt0.c1;
SELECT ALL rt1.c1, rt1.c4, rt1.c3 FROM rt1 GROUP BY rt1.c1, rt1.c4, rt1.c3;
SELECT ALL rt1.c1, rt1.c4, rt1.c3 FROM rt1 GROUP BY rt1.c1, rt1.c4, rt1.c3 HAVING MAX(((SUM(rt1.c1))<=(TOTAL(rt1.c1)))) UNION ALL SELECT rt1.c1, rt1.c4, rt1.c3 FROM rt1 GROUP BY rt1.c1, rt1.c4, rt1.c3 HAVING (NOT (MAX(((SUM(rt1.c1))<=(TOTAL(rt1.c1)))))) UNION ALL SELECT ALL rt1.c1, rt1.c4, rt1.c3 FROM rt1 GROUP BY rt1.c1, rt1.c4, rt1.c3 HAVING ((MAX(((SUM(rt1.c1))<=(TOTAL(rt1.c1))))) ISNULL);
SELECT ALL MIN((((rt1.c0, rt1.c4, rt1.c1)) NOT BETWEEN ((156905986, (((rt1.c3))<((v0.c1))), DATE(rt1.c2, rt1.c1, v0.c1))) AND (((((v0.c1)) BETWEEN ((rt1.c3)) AND ((v0.c1))), rt1.c3, CAST(v0.c0 AS BLOB))))) FROM v0, rt1 ORDER BY v0.c1 ASC  NULLS FIRST;
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE (CAST(rt0.c1 AS BLOB) COLLATE NOCASE) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (CAST(rt0.c1 AS BLOB) COLLATE NOCASE))) UNION ALL SELECT * FROM rt0 WHERE (((CAST(rt0.c1 AS BLOB) COLLATE NOCASE) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT rt1.c3, rt0.c2, rt0.c4 FROM v0, rt0 NATURAL JOIN rt1;
SELECT DISTINCT rt1.c3, rt0.c2, rt0.c4 FROM v0, rt0 NATURAL JOIN rt1 WHERE (((rt0.c1) IS FALSE) COLLATE NOCASE) UNION SELECT DISTINCT rt1.c3, rt0.c2, rt0.c4 FROM v0, rt0 NATURAL JOIN rt1 WHERE ((NOT (((rt0.c1) IS FALSE) COLLATE NOCASE))) UNION SELECT DISTINCT rt1.c3, rt0.c2, rt0.c4 FROM v0 NOT INDEXED, rt0 NATURAL JOIN rt1 WHERE (((((rt0.c1) IS FALSE) COLLATE NOCASE) ISNULL));
SELECT DISTINCT rt1.c3, rt0.c2, rt0.c4 FROM v0, rt0 NATURAL JOIN rt1;
SELECT rt1.c1, rt1.c4, rt1.c2 FROM rt1 GROUP BY rt1.c1, rt1.c4, rt1.c2;
SELECT rt1.c1, rt1.c4, rt1.c2 FROM rt1 WHERE ((((('n~.ꁄEe᝱-')AND(COALESCE(DISTINCT rt1.c0, rt1.c0))))AND(rt1.c2 COLLATE NOCASE))) GROUP BY rt1.c1, rt1.c4, rt1.c2 UNION SELECT ALL rt1.c1, rt1.c4, rt1.c2 FROM rt1 WHERE ((NOT ((((('n~.ꁄEe᝱-')AND(COALESCE(DISTINCT rt1.c0, rt1.c0))))AND(rt1.c2 COLLATE NOCASE))))) GROUP BY rt1.c1, rt1.c4, rt1.c2 UNION SELECT ALL rt1.c1, rt1.c4, rt1.c2 FROM rt1 WHERE ((((((('n~.ꁄEe᝱-')AND(COALESCE(DISTINCT rt1.c0, rt1.c0))))AND(rt1.c2 COLLATE NOCASE))) ISNULL)) GROUP BY rt1.c1, rt1.c4, rt1.c2;
SELECT rt1.c1, rt1.c4, rt1.c2 FROM rt1 GROUP BY rt1.c1, rt1.c4, rt1.c2;
SELECT rt0.c2, rt0.c4, rt0.c1, rt1.c4, rt1.c2 FROM rt0, rt1 GROUP BY rt0.c2, rt0.c4, rt0.c1, rt1.c4, rt1.c2;
SELECT rt0.c2, rt0.c4, rt0.c1, rt1.c4, rt1.c2 FROM rt0, rt1 GROUP BY rt0.c2, rt0.c4, rt0.c1, rt1.c4, rt1.c2 HAVING GROUP_CONCAT(GROUP_CONCAT(rt1.c1)) UNION ALL SELECT rt0.c2, rt0.c4, rt0.c1, rt1.c4, rt1.c2 FROM rt0, rt1 GROUP BY rt0.c2, rt0.c4, rt0.c1, rt1.c4, rt1.c2 HAVING (NOT (GROUP_CONCAT(GROUP_CONCAT(rt1.c1)))) UNION ALL SELECT rt0.c2, rt0.c4, rt0.c1, rt1.c4, rt1.c2 FROM rt0, rt1 GROUP BY rt0.c2, rt0.c4, rt0.c1, rt1.c4, rt1.c2 HAVING ((GROUP_CONCAT(GROUP_CONCAT(rt1.c1))) ISNULL);
SELECT ALL rt0.c4, rt1.c2, rt1.c3, rt1.c1, rt0.c0, v0.c0, rt1.c4, rt0.c3, rt1.c0, v0.c2, rt0.c2 FROM v0, rt1, rt0;
SELECT rt0.c4, rt1.c2, rt1.c3, rt1.c1, rt0.c0, v0.c0, rt1.c4, rt0.c3, rt1.c0, v0.c2, rt0.c2 FROM v0, rt1, rt0 WHERE ((- (((((((((NULL)AND('281057896')))OR(rt1.c4)))OR(rt0.c1)))AND(rt0.c3))))) UNION ALL SELECT ALL rt0.c4, rt1.c2, rt1.c3, rt1.c1, rt0.c0, v0.c0, rt1.c4, rt0.c3, rt1.c0, v0.c2, rt0.c2 FROM v0, rt1, rt0 WHERE ((NOT ((- (((((((((NULL)AND('281057896')))OR(rt1.c4)))OR(rt0.c1)))AND(rt0.c3))))))) UNION ALL SELECT rt0.c4, rt1.c2, rt1.c3, rt1.c1, rt0.c0, v0.c0, rt1.c4, rt0.c3, rt1.c0, v0.c2, rt0.c2 FROM v0, rt1, rt0 WHERE ((((- (((((((((NULL)AND('281057896')))OR(rt1.c4)))OR(rt0.c1)))AND(rt0.c3))))) ISNULL));
SELECT ALL rt0.c4, rt1.c2, rt1.c3, rt1.c1, rt0.c0, v0.c0, rt1.c4, rt0.c3, rt1.c0, v0.c2, rt0.c2 FROM v0, rt1, rt0;
SELECT DISTINCT rt1.c3, rt0.c2, rt0.c1, v0.c0 FROM rt1 LEFT OUTER JOIN rt0 ON ((((v0.c1) IS FALSE)) IS FALSE) INNER JOIN v0 ON ((0.4191107736218054)>(TRIM(rt0.c4)));
SELECT rt0.c3, rt0.c4, rt0.c0, rt0.c2, v0.c2, v0.c1, rt0.c1 FROM rt0, v0 GROUP BY rt0.c3, rt0.c4, rt0.c0, rt0.c2, v0.c2, v0.c1, rt0.c1;
SELECT ALL rt0.c3, rt0.c4, rt0.c0, rt0.c2, v0.c2, v0.c1, rt0.c1 FROM rt0, v0 WHERE (NULL) GROUP BY rt0.c3, rt0.c4, rt0.c0, rt0.c2, v0.c2, v0.c1, rt0.c1 UNION SELECT rt0.c3, rt0.c4, rt0.c0, rt0.c2, v0.c2, v0.c1, rt0.c1 FROM rt0, v0 WHERE ((NOT (NULL))) GROUP BY rt0.c3, rt0.c4, rt0.c0, rt0.c2, v0.c2, v0.c1, rt0.c1 UNION SELECT ALL rt0.c3, rt0.c4, rt0.c0, rt0.c2, v0.c2, v0.c1, rt0.c1 FROM rt0, v0 WHERE (((NULL) ISNULL)) GROUP BY rt0.c3, rt0.c4, rt0.c0, rt0.c2, v0.c2, v0.c1, rt0.c1;
SELECT rt0.c3, rt0.c4, rt0.c0, rt0.c2, v0.c2, v0.c1, rt0.c1 FROM rt0, v0 GROUP BY rt0.c3, rt0.c4, rt0.c0, rt0.c2, v0.c2, v0.c1, rt0.c1;
SELECT rt0.c4, rt1.c0, rt0.c0, rt1.c1, rt0.c1 FROM rt0, rt1 GROUP BY rt0.c4, rt1.c0, rt0.c0, rt1.c1, rt0.c1;
SELECT rt0.c4, rt1.c0, rt0.c0, rt1.c1, rt0.c1 FROM rt0, rt1 GROUP BY rt0.c4, rt1.c0, rt0.c0, rt1.c1, rt0.c1 HAVING ((AVG(SUM(GROUP_CONCAT(rt1.c4))))LIKE(TOTAL(0x5109007e))) UNION ALL SELECT ALL rt0.c4, rt1.c0, rt0.c0, rt1.c1, rt0.c1 FROM rt0, rt1 GROUP BY rt0.c4, rt1.c0, rt0.c0, rt1.c1, rt0.c1 HAVING (NOT (((AVG(SUM(GROUP_CONCAT(rt1.c4))))LIKE(TOTAL(0x5109007e))))) UNION ALL SELECT rt0.c4, rt1.c0, rt0.c0, rt1.c1, rt0.c1 FROM rt0, rt1 GROUP BY rt0.c4, rt1.c0, rt0.c0, rt1.c1, rt0.c1 HAVING ((((AVG(SUM(GROUP_CONCAT(rt1.c4))))LIKE(TOTAL(0X5109007e)))) ISNULL);
SELECT rt1.c2, v0.c1, rt1.c0, rt1.c4, rt1.c1, rt0.c1, rt0.c0, v0.c2, rt0.c4 FROM rt0, rt1 NATURAL JOIN v0;
SELECT ALL rt1.c2, v0.c1, rt1.c0, rt1.c4, rt1.c1, rt0.c1, rt0.c0, v0.c2, rt0.c4 FROM rt0, rt1 NATURAL JOIN v0 WHERE ((+ ((- (rt1.c4))))) UNION ALL SELECT rt1.c2, v0.c1, rt1.c0, rt1.c4, rt1.c1, rt0.c1, rt0.c0, v0.c2, rt0.c4 FROM rt0, rt1 NATURAL JOIN v0 WHERE ((NOT ((+ ((- (rt1.c4))))))) UNION ALL SELECT rt1.c2, v0.c1, rt1.c0, rt1.c4, rt1.c1, rt0.c1, rt0.c0, v0.c2, rt0.c4 FROM rt0, rt1 NATURAL JOIN v0 WHERE ((((+ ((- (rt1.c4))))) ISNULL));
SELECT rt1.c2, v0.c1, rt1.c0, rt1.c4, rt1.c1, rt0.c1, rt0.c0, v0.c2, rt0.c4 FROM rt0, rt1 NATURAL JOIN v0;
SELECT DISTINCT * FROM rt1, rt0;
SELECT DISTINCT * FROM rt1, rt0 WHERE ((((((rt1.c1)OR(rt1.c2)))OR(rt0.c0)) IN ())) UNION SELECT DISTINCT * FROM rt1, rt0 WHERE ((NOT ((((((rt1.c1)OR(rt1.c2)))OR(rt0.c0)) IN ())))) UNION SELECT DISTINCT * FROM rt1, rt0 WHERE ((((((((rt1.c1)OR(rt1.c2)))OR(rt0.c0)) IN ())) ISNULL));
SELECT DISTINCT * FROM rt1, rt0;
SELECT ALL rt0.c2, rt0.c3, v0.c1 FROM rt0, v0, rt1 GROUP BY rt0.c2, rt0.c3, v0.c1;
SELECT ALL rt0.c2, rt0.c3, v0.c1 FROM rt0, v0, rt1 WHERE (rt1.c2 COLLATE BINARY) GROUP BY rt0.c2, rt0.c3, v0.c1 UNION SELECT ALL rt0.c2, rt0.c3, v0.c1 FROM rt0, v0, rt1 WHERE ((NOT (rt1.c2 COLLATE BINARY))) GROUP BY rt0.c2, rt0.c3, v0.c1 UNION SELECT rt0.c2, rt0.c3, v0.c1 FROM rt0, v0, rt1 WHERE (((rt1.c2 COLLATE BINARY) ISNULL)) GROUP BY rt0.c2, rt0.c3, v0.c1;
SELECT ALL rt0.c2, rt0.c3, v0.c1 FROM rt0, v0, rt1 GROUP BY rt0.c2, rt0.c3, v0.c1;
SELECT rt0.c0, v0.c0, rt0.c2, v0.c1, rt0.c4, v0.c2 FROM v0, rt0 GROUP BY rt0.c0, v0.c0, rt0.c2, v0.c1, rt0.c4, v0.c2;
SELECT ALL rt0.c0, v0.c0, rt0.c2, v0.c1, rt0.c4, v0.c2 FROM v0, rt0 GROUP BY rt0.c0, v0.c0, rt0.c2, v0.c1, rt0.c4, v0.c2 HAVING COALESCE(((((COUNT(*))OR(COUNT(*))))OR(AVG(MIN(rt0.c0)))), (rt0.c0 IN ()), GROUP_CONCAT(rt0.c0), (((GROUP_CONCAT(rt0.c2))) NOT BETWEEN ((COUNT(*))) AND ((COUNT(rt0.c2))))) UNION ALL SELECT rt0.c0, v0.c0, rt0.c2, v0.c1, rt0.c4, v0.c2 FROM v0, rt0 GROUP BY rt0.c0, v0.c0, rt0.c2, v0.c1, rt0.c4, v0.c2 HAVING (NOT (COALESCE(((((COUNT(*))OR(COUNT(*))))OR(AVG(MIN(rt0.c0)))), (rt0.c0 IN ()), GROUP_CONCAT(rt0.c0), (((GROUP_CONCAT(rt0.c2))) NOT BETWEEN ((COUNT(*))) AND ((COUNT(rt0.c2))))))) UNION ALL SELECT ALL rt0.c0, v0.c0, rt0.c2, v0.c1, rt0.c4, v0.c2 FROM v0, rt0 GROUP BY rt0.c0, v0.c0, rt0.c2, v0.c1, rt0.c4, v0.c2 HAVING ((COALESCE(((((COUNT(*))OR(COUNT(*))))OR(AVG(MIN(rt0.c0)))), (rt0.c0 IN ()), GROUP_CONCAT(rt0.c0), (((GROUP_CONCAT(rt0.c2))) NOT BETWEEN ((COUNT(*))) AND ((COUNT(rt0.c2)))))) ISNULL);
SELECT * FROM rt1, rt0, v0;
SELECT ALL * FROM rt1, rt0, v0 WHERE (((CASE WHEN rt1.c1 THEN rt1.c1 WHEN rt0.c4 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c4 END) NOTNULL)) UNION ALL SELECT ALL * FROM rt1, rt0, v0 WHERE ((NOT (((CASE WHEN rt1.c1 THEN rt1.c1 WHEN rt0.c4 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c4 END) NOTNULL)))) UNION ALL SELECT ALL * FROM rt1, rt0, v0 WHERE (((((CASE WHEN rt1.c1 THEN rt1.c1 WHEN rt0.c4 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c4 END) NOTNULL)) ISNULL));
SELECT * FROM rt1, rt0, v0;
SELECT DISTINCT rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c2 FROM rt0 WHERE ((((rt0.c3 IN ()))GLOB(LENGTH(rt0.c2)))) UNION SELECT DISTINCT rt0.c2 FROM rt0 WHERE ((NOT ((((rt0.c3 IN ()))GLOB(LENGTH(rt0.c2)))))) UNION SELECT DISTINCT rt0.c2 FROM rt0 WHERE ((((((rt0.c3 IN ()))GLOB(LENGTH(rt0.c2)))) ISNULL));
SELECT DISTINCT rt0.c2 FROM rt0;
SELECT ALL rt1.c2, rt1.c4, rt1.c3, rt0.c0, rt1.c1, v0.c0, rt0.c3, rt1.c0, rt0.c4 FROM rt1, v0 CROSS JOIN rt0 ON ((CAST(rt1.c0 AS BLOB)) NOT BETWEEN (((((((((((((rt0.c1)OR(rt1.c0)))OR(rt1.c0)))OR(v0.c0)))AND(rt1.c0)))OR(rt0.c4)))AND(rt1.c0))) AND ('')) GROUP BY rt1.c2, rt1.c4, rt1.c3, rt0.c0, rt1.c1, v0.c0, rt0.c3, rt1.c0, rt0.c4;
SELECT rt1.c2, rt1.c4, rt1.c3, rt0.c0, rt1.c1, v0.c0, rt0.c3, rt1.c0, rt0.c4 FROM rt1, v0 CROSS JOIN rt0 ON ((CAST(rt1.c0 AS BLOB)) NOT BETWEEN (((((((((((((rt0.c1)OR(rt1.c0)))OR(rt1.c0)))OR(v0.c0)))AND(rt1.c0)))OR(rt0.c4)))AND(rt1.c0))) AND ('')) WHERE ((((((((v0.c2)AND(rt0.c0)))OR(rt0.c4))))<((((v0.c0) NOT NULL))))) GROUP BY rt1.c2, rt1.c4, rt1.c3, rt0.c0, rt1.c1, v0.c0, rt0.c3, rt1.c0, rt0.c4 UNION SELECT rt1.c2, rt1.c4, rt1.c3, rt0.c0, rt1.c1, v0.c0, rt0.c3, rt1.c0, rt0.c4 FROM rt1, v0 CROSS JOIN rt0 ON ((CAST(rt1.c0 AS BLOB)) NOT BETWEEN (((((((((((((rt0.c1)OR(rt1.c0)))OR(rt1.c0)))OR(v0.c0)))AND(rt1.c0)))OR(rt0.c4)))AND(rt1.c0))) AND ('')) WHERE ((NOT ((((((((v0.c2)AND(rt0.c0)))OR(rt0.c4))))<((((v0.c0) NOT NULL))))))) GROUP BY rt1.c2, rt1.c4, rt1.c3, rt0.c0, rt1.c1, v0.c0, rt0.c3, rt1.c0, rt0.c4 UNION SELECT ALL rt1.c2, rt1.c4, rt1.c3, rt0.c0, rt1.c1, v0.c0, rt0.c3, rt1.c0, rt0.c4 FROM rt1, v0 CROSS JOIN rt0 ON ((CAST(rt1.c0 AS BLOB)) NOT BETWEEN (((((((((((((rt0.c1)OR(rt1.c0)))OR(rt1.c0)))OR(v0.c0)))AND(rt1.c0)))OR(rt0.c4)))AND(rt1.c0))) AND ('')) WHERE ((((((((((v0.c2)AND(rt0.c0)))OR(rt0.c4))))<((((v0.c0) NOT NULL))))) ISNULL)) GROUP BY rt1.c2, rt1.c4, rt1.c3, rt0.c0, rt1.c1, v0.c0, rt0.c3, rt1.c0, rt0.c4;
SELECT ALL rt1.c2, rt1.c4, rt1.c3, rt0.c0, rt1.c1, v0.c0, rt0.c3, rt1.c0, rt0.c4 FROM rt1, v0 CROSS JOIN rt0 ON ((CAST(rt1.c0 AS BLOB)) NOT BETWEEN (((((((((((((rt0.c1)OR(rt1.c0)))OR(rt1.c0)))OR(v0.c0)))AND(rt1.c0)))OR(rt0.c4)))AND(rt1.c0))) AND ('')) GROUP BY rt1.c2, rt1.c4, rt1.c3, rt0.c0, rt1.c1, v0.c0, rt0.c3, rt1.c0, rt0.c4;
SELECT ALL v0.c2, rt0.c2, v0.c1, rt0.c0, rt0.c1, rt0.c3 FROM v0, rt0 GROUP BY v0.c2, rt0.c2, v0.c1, rt0.c0, rt0.c1, rt0.c3;
SELECT v0.c2, rt0.c2, v0.c1, rt0.c0, rt0.c1, rt0.c3 FROM v0, rt0 GROUP BY v0.c2, rt0.c2, v0.c1, rt0.c0, rt0.c1, rt0.c3 HAVING CASE WHEN (rt0.c2 IN ()) THEN MIN(v0.c1) ELSE SUM(rt0.c4) END UNION ALL SELECT v0.c2, rt0.c2, v0.c1, rt0.c0, rt0.c1, rt0.c3 FROM v0, rt0 GROUP BY v0.c2, rt0.c2, v0.c1, rt0.c0, rt0.c1, rt0.c3 HAVING (NOT (CASE WHEN (rt0.c2 IN ()) THEN MIN(v0.c1) ELSE SUM(rt0.c4) END)) UNION ALL SELECT v0.c2, rt0.c2, v0.c1, rt0.c0, rt0.c1, rt0.c3 FROM v0, rt0 GROUP BY v0.c2, rt0.c2, v0.c1, rt0.c0, rt0.c1, rt0.c3 HAVING ((CASE WHEN (rt0.c2 IN ()) THEN MIN(v0.c1) ELSE SUM(rt0.c4) END) ISNULL);
SELECT ALL v0.c2, rt0.c2, v0.c1, rt0.c0, rt0.c1, rt0.c3 FROM v0, rt0 GROUP BY v0.c2, rt0.c2, v0.c1, rt0.c0, rt0.c1, rt0.c3;
SELECT v0.c2, rt0.c2, v0.c1, rt0.c0, rt0.c1, rt0.c3 FROM v0, rt0 GROUP BY v0.c2, rt0.c2, v0.c1, rt0.c0, rt0.c1, rt0.c3 HAVING CASE WHEN (rt0.c2 IN ()) THEN MIN(v0.c1) ELSE SUM(rt0.c4) END UNION ALL SELECT v0.c2, rt0.c2, v0.c1, rt0.c0, rt0.c1, rt0.c3 FROM v0, rt0 GROUP BY v0.c2, rt0.c2, v0.c1, rt0.c0, rt0.c1, rt0.c3 HAVING (NOT (CASE WHEN (rt0.c2 IN ()) THEN MIN(v0.c1) ELSE SUM(rt0.c4) END)) UNION ALL SELECT v0.c2, rt0.c2, v0.c1, rt0.c0, rt0.c1, rt0.c3 FROM v0, rt0 GROUP BY v0.c2, rt0.c2, v0.c1, rt0.c0, rt0.c1, rt0.c3 HAVING ((CASE WHEN (rt0.c2 IN ()) THEN MIN(v0.c1) ELSE SUM(rt0.c4) END) ISNULL);
SELECT ALL v0.c2, rt0.c2, v0.c1, rt0.c0, rt0.c1, rt0.c3 FROM v0, rt0 GROUP BY v0.c2, rt0.c2, v0.c1, rt0.c0, rt0.c1, rt0.c3;
SELECT ALL rt1.c4, rt1.c3, rt1.c2, rt1.c0 FROM rt1;
SELECT rt1.c4, rt1.c3, rt1.c2, rt1.c0 FROM rt1 WHERE (x'') UNION ALL SELECT ALL rt1.c4, rt1.c3, rt1.c2, rt1.c0 FROM rt1 WHERE ((NOT (x''))) UNION ALL SELECT ALL rt1.c4, rt1.c3, rt1.c2, rt1.c0 FROM rt1 WHERE (((x'') ISNULL));
SELECT ALL rt1.c4, rt1.c3, rt1.c2, rt1.c0 FROM rt1;
SELECT DISTINCT rt1.c1, rt1.c0, rt1.c2 FROM rt1;
SELECT DISTINCT rt1.c1, rt1.c0, rt1.c2 FROM rt1 WHERE (((rt1.c1)AND(rt1.c3)) COLLATE BINARY) UNION SELECT DISTINCT rt1.c1, rt1.c0, rt1.c2 FROM rt1 WHERE ((NOT (((rt1.c1)AND(rt1.c3)) COLLATE BINARY))) UNION SELECT DISTINCT rt1.c1, rt1.c0, rt1.c2 FROM rt1 NOT INDEXED WHERE (((((rt1.c1)AND(rt1.c3)) COLLATE BINARY) ISNULL));
SELECT DISTINCT rt1.c1, rt1.c0, rt1.c2 FROM rt1;
SELECT ALL rt1.c4, rt1.c0 FROM rt1 NOT INDEXED GROUP BY rt1.c4, rt1.c0;
SELECT rt1.c4, rt1.c0 FROM rt1 WHERE (((rt1.c3) IS FALSE) COLLATE BINARY) GROUP BY rt1.c4, rt1.c0 UNION SELECT rt1.c4, rt1.c0 FROM rt1 WHERE ((NOT (((rt1.c3) IS FALSE) COLLATE BINARY))) GROUP BY rt1.c4, rt1.c0 UNION SELECT ALL rt1.c4, rt1.c0 FROM rt1 WHERE (((((rt1.c3) IS FALSE) COLLATE BINARY) ISNULL)) GROUP BY rt1.c4, rt1.c0;
SELECT ALL rt1.c4, rt1.c0 FROM rt1 NOT INDEXED GROUP BY rt1.c4, rt1.c0;
SELECT ALL rt1.c3, rt1.c2, v0.c2, rt1.c1 FROM v0, rt1 GROUP BY rt1.c3, rt1.c2, v0.c2, rt1.c1;
SELECT ALL rt1.c3, rt1.c2, v0.c2, rt1.c1 FROM v0, rt1 GROUP BY rt1.c3, rt1.c2, v0.c2, rt1.c1 HAVING ((((v0.c1) NOT NULL)) NOTNULL) UNION ALL SELECT ALL rt1.c3, rt1.c2, v0.c2, rt1.c1 FROM v0, rt1 GROUP BY rt1.c3, rt1.c2, v0.c2, rt1.c1 HAVING (NOT (((((v0.c1) NOT NULL)) NOTNULL))) UNION ALL SELECT rt1.c3, rt1.c2, v0.c2, rt1.c1 FROM v0, rt1 GROUP BY rt1.c3, rt1.c2, v0.c2, rt1.c1 HAVING ((((((v0.c1) NOT NULL)) NOTNULL)) ISNULL);
SELECT ALL rt1.c3, rt1.c2, v0.c2, rt1.c1 FROM v0, rt1 GROUP BY rt1.c3, rt1.c2, v0.c2, rt1.c1;
SELECT ALL rt1.c3, rt1.c2, v0.c2, rt1.c1 FROM v0, rt1 GROUP BY rt1.c3, rt1.c2, v0.c2, rt1.c1 HAVING ((((v0.c1) NOT NULL)) NOTNULL) UNION ALL SELECT ALL rt1.c3, rt1.c2, v0.c2, rt1.c1 FROM v0, rt1 GROUP BY rt1.c3, rt1.c2, v0.c2, rt1.c1 HAVING (NOT (((((v0.c1) NOT NULL)) NOTNULL))) UNION ALL SELECT rt1.c3, rt1.c2, v0.c2, rt1.c1 FROM v0, rt1 GROUP BY rt1.c3, rt1.c2, v0.c2, rt1.c1 HAVING ((((((v0.c1) NOT NULL)) NOTNULL)) ISNULL);
SELECT ALL rt1.c3, rt1.c2, v0.c2, rt1.c1 FROM v0, rt1 GROUP BY rt1.c3, rt1.c2, v0.c2, rt1.c1;
SELECT v0.c0, rt1.c2, rt1.c1, rt1.c0, rt1.c4, rt0.c4 FROM v0, rt1, rt0;
SELECT ALL v0.c0, rt1.c2, rt1.c1, rt1.c0, rt1.c4, rt0.c4 FROM v0, rt1, rt0 WHERE (((v0.c0)LIKE(rt1.c3)) COLLATE NOCASE COLLATE NOCASE) UNION ALL SELECT v0.c0, rt1.c2, rt1.c1, rt1.c0, rt1.c4, rt0.c4 FROM v0, rt1, rt0 WHERE ((NOT (((v0.c0)LIKE(rt1.c3)) COLLATE NOCASE COLLATE NOCASE))) UNION ALL SELECT v0.c0, rt1.c2, rt1.c1, rt1.c0, rt1.c4, rt0.c4 FROM v0, rt1, rt0 WHERE (((((v0.c0)LIKE(rt1.c3)) COLLATE NOCASE COLLATE NOCASE) ISNULL));
SELECT v0.c0, rt1.c2, rt1.c1, rt1.c0, rt1.c4, rt0.c4 FROM v0, rt1, rt0;
SELECT DISTINCT rt0.c1, rt0.c2, rt0.c4, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c2, rt0.c4, rt0.c0 FROM rt0 WHERE (((((rt0.c4) NOT BETWEEN (0.03125198205855739) AND (rt0.c1))) NOT BETWEEN (((rt0.c3) BETWEEN (rt0.c2) AND (0Xffffffff94ed6eff))) AND (CASE rt0.c4  WHEN rt0.c1 THEN rt0.c0 ELSE '' END))) UNION SELECT DISTINCT rt0.c1, rt0.c2, rt0.c4, rt0.c0 FROM rt0 WHERE ((NOT (((((rt0.c4) NOT BETWEEN (0.03125198205855739) AND (rt0.c1))) NOT BETWEEN (((rt0.c3) BETWEEN (rt0.c2) AND (0Xffffffff94ed6eff))) AND (CASE rt0.c4  WHEN rt0.c1 THEN rt0.c0 ELSE '' END))))) UNION SELECT DISTINCT rt0.c1, rt0.c2, rt0.c4, rt0.c0 FROM rt0 WHERE (((((((rt0.c4) NOT BETWEEN (0.03125198205855739) AND (rt0.c1))) NOT BETWEEN (((rt0.c3) BETWEEN (rt0.c2) AND (0xffffffff94ed6eff))) AND (CASE rt0.c4  WHEN rt0.c1 THEN rt0.c0 ELSE '' END))) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c2, rt0.c4, rt0.c0 FROM rt0;
SELECT ALL rt0.c4, rt0.c3, rt1.c1, rt1.c2, rt1.c0, rt1.c4, rt0.c0, rt0.c1, rt0.c2, rt1.c3 FROM rt0, rt1 GROUP BY rt0.c4, rt0.c3, rt1.c1, rt1.c2, rt1.c0, rt1.c4, rt0.c0, rt0.c1, rt0.c2, rt1.c3;
SELECT rt0.c4, rt0.c3, rt1.c1, rt1.c2, rt1.c0, rt1.c4, rt0.c0, rt0.c1, rt0.c2, rt1.c3 FROM rt0, rt1 WHERE (((COALESCE(rt0.c2, rt0.c1, rt0.c1, NULL)) IS TRUE)) GROUP BY rt0.c4, rt0.c3, rt1.c1, rt1.c2, rt1.c0, rt1.c4, rt0.c0, rt0.c1, rt0.c2, rt1.c3 UNION SELECT rt0.c4, rt0.c3, rt1.c1, rt1.c2, rt1.c0, rt1.c4, rt0.c0, rt0.c1, rt0.c2, rt1.c3 FROM rt0, rt1 WHERE ((NOT (((COALESCE(rt0.c2, rt0.c1, rt0.c1, NULL)) IS TRUE)))) GROUP BY rt0.c4, rt0.c3, rt1.c1, rt1.c2, rt1.c0, rt1.c4, rt0.c0, rt0.c1, rt0.c2, rt1.c3 UNION SELECT ALL rt0.c4, rt0.c3, rt1.c1, rt1.c2, rt1.c0, rt1.c4, rt0.c0, rt0.c1, rt0.c2, rt1.c3 FROM rt0, rt1 WHERE (((((COALESCE(rt0.c2, rt0.c1, rt0.c1, NULL)) IS TRUE)) ISNULL)) GROUP BY rt0.c4, rt0.c3, rt1.c1, rt1.c2, rt1.c0, rt1.c4, rt0.c0, rt0.c1, rt0.c2, rt1.c3;
SELECT ALL rt0.c4, rt0.c3, rt1.c1, rt1.c2, rt1.c0, rt1.c4, rt0.c0, rt0.c1, rt0.c2, rt1.c3 FROM rt0, rt1 GROUP BY rt0.c4, rt0.c3, rt1.c1, rt1.c2, rt1.c0, rt1.c4, rt0.c0, rt0.c1, rt0.c2, rt1.c3;
SELECT rt1.c4, rt0.c1, rt0.c2, v0.c1, rt1.c2, v0.c0, rt0.c0, rt0.c4, rt1.c1 FROM rt0, v0, rt1 GROUP BY rt1.c4, rt0.c1, rt0.c2, v0.c1, rt1.c2, v0.c0, rt0.c0, rt0.c4, rt1.c1;
SELECT ALL rt1.c4, rt0.c1, rt0.c2, v0.c1, rt1.c2, v0.c0, rt0.c0, rt0.c4, rt1.c1 FROM rt0, v0, rt1 GROUP BY rt1.c4, rt0.c1, rt0.c2, v0.c1, rt1.c2, v0.c0, rt0.c0, rt0.c4, rt1.c1 HAVING ((((((((MIN(rt0.c1))AND(AVG(rt0.c0))))AND(rt0.c4)))OR(CAST(rt1.c2 AS BLOB))))AND(CAST(v0.c2 AS REAL))) UNION ALL SELECT ALL rt1.c4, rt0.c1, rt0.c2, v0.c1, rt1.c2, v0.c0, rt0.c0, rt0.c4, rt1.c1 FROM rt0, v0, rt1 GROUP BY rt1.c4, rt0.c1, rt0.c2, v0.c1, rt1.c2, v0.c0, rt0.c0, rt0.c4, rt1.c1 HAVING (NOT (((((((((MIN(rt0.c1))AND(AVG(rt0.c0))))AND(rt0.c4)))OR(CAST(rt1.c2 AS BLOB))))AND(CAST(v0.c2 AS REAL))))) UNION ALL SELECT ALL rt1.c4, rt0.c1, rt0.c2, v0.c1, rt1.c2, v0.c0, rt0.c0, rt0.c4, rt1.c1 FROM rt0, v0, rt1 GROUP BY rt1.c4, rt0.c1, rt0.c2, v0.c1, rt1.c2, v0.c0, rt0.c0, rt0.c4, rt1.c1 HAVING ((((((((((MIN(rt0.c1))AND(AVG(rt0.c0))))AND(rt0.c4)))OR(CAST(rt1.c2 AS BLOB))))AND(CAST(v0.c2 AS REAL)))) ISNULL);
SELECT rt1.c4, rt0.c1, rt0.c2, v0.c1, rt1.c2, v0.c0, rt0.c0, rt0.c4, rt1.c1 FROM rt0, v0, rt1 GROUP BY rt1.c4, rt0.c1, rt0.c2, v0.c1, rt1.c2, v0.c0, rt0.c0, rt0.c4, rt1.c1;
SELECT ALL rt1.c4, rt0.c1, rt0.c2, v0.c1, rt1.c2, v0.c0, rt0.c0, rt0.c4, rt1.c1 FROM rt0, v0, rt1 GROUP BY rt1.c4, rt0.c1, rt0.c2, v0.c1, rt1.c2, v0.c0, rt0.c0, rt0.c4, rt1.c1 HAVING ((((((((MIN(rt0.c1))AND(AVG(rt0.c0))))AND(rt0.c4)))OR(CAST(rt1.c2 AS BLOB))))AND(CAST(v0.c2 AS REAL))) UNION ALL SELECT ALL rt1.c4, rt0.c1, rt0.c2, v0.c1, rt1.c2, v0.c0, rt0.c0, rt0.c4, rt1.c1 FROM rt0, v0, rt1 GROUP BY rt1.c4, rt0.c1, rt0.c2, v0.c1, rt1.c2, v0.c0, rt0.c0, rt0.c4, rt1.c1 HAVING (NOT (((((((((MIN(rt0.c1))AND(AVG(rt0.c0))))AND(rt0.c4)))OR(CAST(rt1.c2 AS BLOB))))AND(CAST(v0.c2 AS REAL))))) UNION ALL SELECT ALL rt1.c4, rt0.c1, rt0.c2, v0.c1, rt1.c2, v0.c0, rt0.c0, rt0.c4, rt1.c1 FROM rt0, v0, rt1 GROUP BY rt1.c4, rt0.c1, rt0.c2, v0.c1, rt1.c2, v0.c0, rt0.c0, rt0.c4, rt1.c1 HAVING ((((((((((MIN(rt0.c1))AND(AVG(rt0.c0))))AND(rt0.c4)))OR(CAST(rt1.c2 AS BLOB))))AND(CAST(v0.c2 AS REAL)))) ISNULL);
SELECT rt1.c4, rt0.c1, rt0.c2, v0.c1, rt1.c2, v0.c0, rt0.c0, rt0.c4, rt1.c1 FROM rt0, v0, rt1 GROUP BY rt1.c4, rt0.c1, rt0.c2, v0.c1, rt1.c2, v0.c0, rt0.c0, rt0.c4, rt1.c1;
SELECT MIN(rt0.c3) FROM rt0, rt1, v0;
SELECT ALL * FROM rt0, v0;
SELECT ALL * FROM rt0, v0 WHERE ((((((rt0.c2))==((NULL)))) IS FALSE)) UNION ALL SELECT ALL * FROM rt0, v0 WHERE ((NOT ((((((rt0.c2))==((NULL)))) IS FALSE)))) UNION ALL SELECT ALL * FROM rt0, v0 WHERE ((((((((rt0.c2))=((NULL)))) IS FALSE)) ISNULL));
SELECT ALL * FROM rt0, v0;
SELECT DISTINCT rt0.c3 FROM rt0;
SELECT DISTINCT rt0.c3 FROM rt0 WHERE (((COALESCE(DISTINCT rt0.c3, rt0.c1, rt0.c2, rt0.c2))>=(rt0.c2 COLLATE BINARY))) UNION SELECT DISTINCT rt0.c3 FROM rt0 WHERE ((NOT (((COALESCE(DISTINCT rt0.c3, rt0.c1, rt0.c2, rt0.c2))>=(rt0.c2 COLLATE BINARY))))) UNION SELECT DISTINCT rt0.c3 FROM rt0 WHERE (((((COALESCE(DISTINCT rt0.c3, rt0.c1, rt0.c2, rt0.c2))>=(rt0.c2 COLLATE BINARY))) ISNULL));
SELECT DISTINCT rt0.c3 FROM rt0;
SELECT rt0.c3, rt0.c0, rt0.c1, rt0.c4 FROM rt0 GROUP BY rt0.c3, rt0.c0, rt0.c1, rt0.c4;
SELECT ALL rt0.c3, rt0.c0, rt0.c1, rt0.c4 FROM rt0 WHERE (((rt0.c1) ISNULL) COLLATE RTRIM) GROUP BY rt0.c3, rt0.c0, rt0.c1, rt0.c4 UNION SELECT ALL rt0.c3, rt0.c0, rt0.c1, rt0.c4 FROM rt0 WHERE ((NOT (((rt0.c1) ISNULL) COLLATE RTRIM))) GROUP BY rt0.c3, rt0.c0, rt0.c1, rt0.c4 UNION SELECT ALL rt0.c3, rt0.c0, rt0.c1, rt0.c4 FROM rt0 WHERE (((((rt0.c1) ISNULL) COLLATE RTRIM) ISNULL)) GROUP BY rt0.c3, rt0.c0, rt0.c1, rt0.c4;
SELECT rt0.c3, rt0.c0, rt0.c1, rt0.c4 FROM rt0 GROUP BY rt0.c3, rt0.c0, rt0.c1, rt0.c4;
SELECT rt1.c0, v0.c0 FROM rt1, rt0, v0 GROUP BY rt1.c0, v0.c0;
SELECT rt1.c0, v0.c0 FROM rt1, rt0, v0 GROUP BY rt1.c0, v0.c0 HAVING ((MIN(rt0.c1)) NOTNULL) UNION ALL SELECT ALL rt1.c0, v0.c0 FROM rt1, rt0, v0 GROUP BY rt1.c0, v0.c0 HAVING (NOT (((MIN(rt0.c1)) NOTNULL))) UNION ALL SELECT ALL rt1.c0, v0.c0 FROM rt1, rt0, v0 GROUP BY rt1.c0, v0.c0 HAVING ((((MIN(rt0.c1)) NOTNULL)) ISNULL);
SELECT rt1.c0, v0.c0 FROM rt1, rt0, v0 GROUP BY rt1.c0, v0.c0;
SELECT rt1.c0, v0.c0 FROM rt1, rt0, v0 GROUP BY rt1.c0, v0.c0 HAVING ((MIN(rt0.c1)) NOTNULL) UNION ALL SELECT ALL rt1.c0, v0.c0 FROM rt1, rt0, v0 GROUP BY rt1.c0, v0.c0 HAVING (NOT (((MIN(rt0.c1)) NOTNULL))) UNION ALL SELECT ALL rt1.c0, v0.c0 FROM rt1, rt0, v0 GROUP BY rt1.c0, v0.c0 HAVING ((((MIN(rt0.c1)) NOTNULL)) ISNULL);
SELECT rt1.c0, v0.c0 FROM rt1, rt0, v0 GROUP BY rt1.c0, v0.c0;
SELECT v0.c1, rt0.c2, v0.c2, rt1.c4, rt1.c3, rt1.c2, rt1.c0, rt0.c3, rt0.c1 FROM rt0, v0, rt1;
SELECT ALL v0.c1, rt0.c2, v0.c2, rt1.c4, rt1.c3, rt1.c2, rt1.c0, rt0.c3, rt0.c1 FROM rt0, v0, rt1 WHERE ((((rt0.c4) BETWEEN (rt0.c0) AND (rt0.c2)) IN ())) UNION ALL SELECT ALL v0.c1, rt0.c2, v0.c2, rt1.c4, rt1.c3, rt1.c2, rt1.c0, rt0.c3, rt0.c1 FROM rt0, v0, rt1 WHERE ((NOT ((((rt0.c4) BETWEEN (rt0.c0) AND (rt0.c2)) IN ())))) UNION ALL SELECT ALL v0.c1, rt0.c2, v0.c2, rt1.c4, rt1.c3, rt1.c2, rt1.c0, rt0.c3, rt0.c1 FROM rt0, v0, rt1 WHERE ((((((rt0.c4) BETWEEN (rt0.c0) AND (rt0.c2)) IN ())) ISNULL));
SELECT v0.c1, rt0.c2, v0.c2, rt1.c4, rt1.c3, rt1.c2, rt1.c0, rt0.c3, rt0.c1 FROM rt0, v0, rt1;
SELECT DISTINCT * FROM rt0, v0;
SELECT DISTINCT * FROM rt0, v0 WHERE (((rt0.c1) NOT BETWEEN ((+ (v0.c0))) AND (CASE WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c3 THEN 0.6027345903304111 WHEN v0.c0 THEN rt0.c2 END))) UNION SELECT DISTINCT * FROM rt0, v0 WHERE ((NOT (((rt0.c1) NOT BETWEEN ((+ (v0.c0))) AND (CASE WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c3 THEN 0.6027345903304111 WHEN v0.c0 THEN rt0.c2 END))))) UNION SELECT DISTINCT * FROM rt0, v0 WHERE (((((rt0.c1) NOT BETWEEN ((+ (v0.c0))) AND (CASE WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c3 THEN 0.6027345903304111 WHEN v0.c0 THEN rt0.c2 END))) ISNULL));
SELECT DISTINCT * FROM rt0, v0;
SELECT rt1.c2, v0.c0, rt1.c3, v0.c2, rt1.c1, v0.c1 FROM rt1 CROSS JOIN v0 ON v0.c2 GROUP BY rt1.c2, v0.c0, rt1.c3, v0.c2, rt1.c1, v0.c1;
SELECT rt1.c2, v0.c0, rt1.c3, v0.c2, rt1.c1, v0.c1 FROM rt1 CROSS JOIN v0 ON v0.c2 WHERE (CASE WHEN CASE WHEN v0.c1 THEN rt1.c2 END THEN CAST(v0.c2 AS INTEGER) WHEN ((x'')LIKE(v0.c2)) THEN (('qOr7ᚯumӣ') IS TRUE) WHEN CASE WHEN v0.c1 THEN v0.c1 ELSE v0.c2 END THEN TRIM(DISTINCT v0.c2) ELSE rt1.c2 END) GROUP BY rt1.c2, v0.c0, rt1.c3, v0.c2, rt1.c1, v0.c1 UNION SELECT ALL rt1.c2, v0.c0, rt1.c3, v0.c2, rt1.c1, v0.c1 FROM rt1 CROSS JOIN v0 ON v0.c2 WHERE ((NOT (CASE WHEN CASE WHEN v0.c1 THEN rt1.c2 END THEN CAST(v0.c2 AS INTEGER) WHEN ((x'')LIKE(v0.c2)) THEN (('qOr7ᚯumӣ') IS TRUE) WHEN CASE WHEN v0.c1 THEN v0.c1 ELSE v0.c2 END THEN TRIM(DISTINCT v0.c2) ELSE rt1.c2 END))) GROUP BY rt1.c2, v0.c0, rt1.c3, v0.c2, rt1.c1, v0.c1 UNION SELECT rt1.c2, v0.c0, rt1.c3, v0.c2, rt1.c1, v0.c1 FROM rt1 CROSS JOIN v0 ON v0.c2 WHERE (((CASE WHEN CASE WHEN v0.c1 THEN rt1.c2 END THEN CAST(v0.c2 AS INTEGER) WHEN ((x'')LIKE(v0.c2)) THEN (('qOr7ᚯumӣ') IS TRUE) WHEN CASE WHEN v0.c1 THEN v0.c1 ELSE v0.c2 END THEN TRIM(DISTINCT v0.c2) ELSE rt1.c2 END) ISNULL)) GROUP BY rt1.c2, v0.c0, rt1.c3, v0.c2, rt1.c1, v0.c1;
SELECT rt1.c2, v0.c0, rt1.c3, v0.c2, rt1.c1, v0.c1 FROM rt1 CROSS JOIN v0 ON v0.c2 GROUP BY rt1.c2, v0.c0, rt1.c3, v0.c2, rt1.c1, v0.c1;
SELECT ALL rt1.c2, rt1.c4, rt1.c3, rt1.c0 FROM rt1 GROUP BY rt1.c2, rt1.c4, rt1.c3, rt1.c0;
SELECT rt1.c2, rt1.c4, rt1.c3, rt1.c0 FROM rt1 GROUP BY rt1.c2, rt1.c4, rt1.c3, rt1.c0 HAVING TOTAL((~ (COUNT(*)))) UNION ALL SELECT ALL rt1.c2, rt1.c4, rt1.c3, rt1.c0 FROM rt1 GROUP BY rt1.c2, rt1.c4, rt1.c3, rt1.c0 HAVING (NOT (TOTAL((~ (COUNT(*)))))) UNION ALL SELECT ALL rt1.c2, rt1.c4, rt1.c3, rt1.c0 FROM rt1 GROUP BY rt1.c2, rt1.c4, rt1.c3, rt1.c0 HAVING ((TOTAL((~ (COUNT(*))))) ISNULL);
SELECT ALL v0.c0, v0.c1 FROM v0;
SELECT ALL v0.c0, v0.c1 FROM v0 WHERE (v0.c2) UNION ALL SELECT ALL v0.c0, v0.c1 FROM v0 WHERE ((NOT (v0.c2))) UNION ALL SELECT ALL v0.c0, v0.c1 FROM v0 WHERE (((v0.c2) ISNULL));
SELECT ALL v0.c0, v0.c1 FROM v0;
SELECT DISTINCT * FROM v0, rt1;
SELECT DISTINCT * FROM v0, rt1 WHERE (rt1.c2) UNION SELECT DISTINCT * FROM v0, rt1 WHERE ((NOT (rt1.c2))) UNION SELECT DISTINCT * FROM v0, rt1 WHERE (((rt1.c2) ISNULL));
SELECT DISTINCT * FROM v0, rt1;
SELECT ALL v0.c2, rt1.c0, rt1.c4, rt0.c2, rt0.c4, rt0.c1, rt0.c0, rt1.c1, rt0.c3, v0.c1, v0.c0, rt1.c3 FROM rt0 RIGHT OUTER JOIN rt1 ON ((NULL) NOT BETWEEN (CAST(v0.c2 AS BLOB)) AND (((-2.3711336E8) NOT BETWEEN (rt1.c0) AND (rt1.c1)))) INNER JOIN v0 ON ((((rt1.c4) BETWEEN (v0.c1) AND (v0.c1)))<(((rt0.c1) BETWEEN (rt1.c2) AND (rt1.c3)))) GROUP BY v0.c2, rt1.c0, rt1.c4, rt0.c2, rt0.c4, rt0.c1, rt0.c0, rt1.c1, rt0.c3, v0.c1, v0.c0, rt1.c3;
SELECT rt1.c1, rt0.c4 FROM rt1, rt0 NOT INDEXED GROUP BY rt1.c1, rt0.c4;
SELECT rt1.c1, rt0.c4 FROM rt1, rt0 GROUP BY rt1.c1, rt0.c4 HAVING GROUP_CONCAT(GROUP_CONCAT(rt0.c4)) UNION ALL SELECT ALL rt1.c1, rt0.c4 FROM rt1, rt0 GROUP BY rt1.c1, rt0.c4 HAVING (NOT (GROUP_CONCAT(GROUP_CONCAT(rt0.c4)))) UNION ALL SELECT rt1.c1, rt0.c4 FROM rt1, rt0 GROUP BY rt1.c1, rt0.c4 HAVING ((GROUP_CONCAT(GROUP_CONCAT(rt0.c4))) ISNULL);
SELECT rt0.c2, rt0.c3, rt0.c0, rt0.c1 FROM rt0;
SELECT ALL rt0.c2, rt0.c3, rt0.c0, rt0.c1 FROM rt0 WHERE (((((rt0.c3)>=(rt0.c0))) BETWEEN (-1.07155092E9) AND (('y' IN ())))) UNION ALL SELECT rt0.c2, rt0.c3, rt0.c0, rt0.c1 FROM rt0 NOT INDEXED WHERE ((NOT (((((rt0.c3)>=(rt0.c0))) BETWEEN (-1.07155092E9) AND (('y' IN ())))))) UNION ALL SELECT ALL rt0.c2, rt0.c3, rt0.c0, rt0.c1 FROM rt0 WHERE (((((((rt0.c3)>=(rt0.c0))) BETWEEN (-1.07155092E9) AND (('y' IN ())))) ISNULL));
SELECT rt0.c2, rt0.c3, rt0.c0, rt0.c1 FROM rt0;
SELECT DISTINCT * FROM rt0, v0;
SELECT DISTINCT * FROM rt0, v0 WHERE ((((rt0.c3, NULL, rt0.c1, rt0.c4, rt0.c0)) NOT BETWEEN (('0.48810744125393957', CASE WHEN rt0.c1 THEN 0.23643040585959862 WHEN rt0.c4 THEN rt0.c1 WHEN -1.182384912E9 THEN rt0.c4 ELSE rt0.c0 END, rt0.c0, v0.c0 COLLATE RTRIM, ((rt0.c2) BETWEEN (v0.c0) AND (x'')))) AND ((((v0.c2) NOT BETWEEN (v0.c0) AND (rt0.c3)), v0.c1 COLLATE BINARY, CASE WHEN v0.c1 THEN v0.c1 ELSE v0.c0 END, NULL, CAST(v0.c2 AS INTEGER))))) UNION SELECT DISTINCT * FROM rt0, v0 WHERE ((NOT ((((rt0.c3, NULL, rt0.c1, rt0.c4, rt0.c0)) NOT BETWEEN (('0.48810744125393957', CASE WHEN rt0.c1 THEN 0.23643040585959862 WHEN rt0.c4 THEN rt0.c1 WHEN -1.182384912E9 THEN rt0.c4 ELSE rt0.c0 END, rt0.c0, v0.c0 COLLATE RTRIM, ((rt0.c2) BETWEEN (v0.c0) AND (x'')))) AND ((((v0.c2) NOT BETWEEN (v0.c0) AND (rt0.c3)), v0.c1 COLLATE BINARY, CASE WHEN v0.c1 THEN v0.c1 ELSE v0.c0 END, NULL, CAST(v0.c2 AS INTEGER))))))) UNION SELECT DISTINCT * FROM rt0, v0 WHERE ((((((rt0.c3, NULL, rt0.c1, rt0.c4, rt0.c0)) NOT BETWEEN (('0.48810744125393957', CASE WHEN rt0.c1 THEN 0.23643040585959862 WHEN rt0.c4 THEN rt0.c1 WHEN -1.182384912E9 THEN rt0.c4 ELSE rt0.c0 END, rt0.c0, v0.c0 COLLATE RTRIM, ((rt0.c2) BETWEEN (v0.c0) AND (x'')))) AND ((((v0.c2) NOT BETWEEN (v0.c0) AND (rt0.c3)), v0.c1 COLLATE BINARY, CASE WHEN v0.c1 THEN v0.c1 ELSE v0.c0 END, NULL, CAST(v0.c2 AS INTEGER))))) ISNULL));
SELECT DISTINCT * FROM rt0, v0;
SELECT ALL rt1.c0, rt0.c4, rt1.c3 FROM rt1, rt0 GROUP BY rt1.c0, rt0.c4, rt1.c3;
SELECT rt1.c0, rt0.c4, rt1.c3 FROM rt1, rt0 WHERE (((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1))) BETWEEN (HEX(DISTINCT rt1.c3)) AND ((((rt1.c3))<=((rt1.c1)))))) GROUP BY rt1.c0, rt0.c4, rt1.c3 UNION SELECT ALL rt1.c0, rt0.c4, rt1.c3 FROM rt1, rt0 WHERE ((NOT (((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1))) BETWEEN (HEX(DISTINCT rt1.c3)) AND ((((rt1.c3))<=((rt1.c1)))))))) GROUP BY rt1.c0, rt0.c4, rt1.c3 UNION SELECT rt1.c0, rt0.c4, rt1.c3 FROM rt1, rt0 WHERE (((((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1))) BETWEEN (HEX(DISTINCT rt1.c3)) AND ((((rt1.c3))<=((rt1.c1)))))) ISNULL)) GROUP BY rt1.c0, rt0.c4, rt1.c3;
SELECT ALL rt1.c0, rt0.c4, rt1.c3 FROM rt1, rt0 GROUP BY rt1.c0, rt0.c4, rt1.c3;
SELECT ALL rt1.c2, rt0.c0, rt0.c1 FROM rt0, rt1 GROUP BY rt1.c2, rt0.c0, rt0.c1;
SELECT rt1.c2, rt0.c0, rt0.c1 FROM rt0, rt1 GROUP BY rt1.c2, rt0.c0, rt0.c1 HAVING ((SUM(rt1.c1)) BETWEEN ((+ (rt1.c3))) AND (MAX(MIN(AVG(rt1.c3))))) UNION ALL SELECT rt1.c2, rt0.c0, rt0.c1 FROM rt0, rt1 GROUP BY rt1.c2, rt0.c0, rt0.c1 HAVING (NOT (((SUM(rt1.c1)) BETWEEN ((+ (rt1.c3))) AND (MAX(MIN(AVG(rt1.c3))))))) UNION ALL SELECT ALL rt1.c2, rt0.c0, rt0.c1 FROM rt0, rt1 GROUP BY rt1.c2, rt0.c0, rt0.c1 HAVING ((((SUM(rt1.c1)) BETWEEN ((+ (rt1.c3))) AND (MAX(MIN(AVG(rt1.c3)))))) ISNULL);
SELECT rt0.c4, rt0.c1 FROM rt1, rt0;
SELECT rt0.c4, rt0.c1 FROM rt1, rt0 WHERE (((((((rt0.c2)AND(rt0.c4)))AND(rt1.c4)))>=(rt0.c1))) UNION ALL SELECT rt0.c4, rt0.c1 FROM rt1, rt0 WHERE ((NOT (((((((rt0.c2)AND(rt0.c4)))AND(rt1.c4)))>=(rt0.c1))))) UNION ALL SELECT rt0.c4, rt0.c1 FROM rt1, rt0 WHERE (((((((((rt0.c2)AND(rt0.c4)))AND(rt1.c4)))>=(rt0.c1))) ISNULL));
SELECT rt0.c4, rt0.c1 FROM rt1, rt0;
SELECT DISTINCT rt1.c2, rt1.c3, rt1.c0 FROM rt1;
SELECT DISTINCT rt1.c2, rt1.c3, rt1.c0 FROM rt1 WHERE (((((((((((rt1.c4)AND(rt1.c0)))OR(rt1.c4)))OR(rt1.c2)))OR(rt1.c3)))&(((x'eac8')<=(rt1.c0))))) UNION SELECT DISTINCT rt1.c2, rt1.c3, rt1.c0 FROM rt1 WHERE ((NOT (((((((((((rt1.c4)AND(rt1.c0)))OR(rt1.c4)))OR(rt1.c2)))OR(rt1.c3)))&(((x'eac8')<=(rt1.c0))))))) UNION SELECT DISTINCT rt1.c2, rt1.c3, rt1.c0 FROM rt1 WHERE (((((((((((((rt1.c4)AND(rt1.c0)))OR(rt1.c4)))OR(rt1.c2)))OR(rt1.c3)))&(((x'eac8')<=(rt1.c0))))) ISNULL));
SELECT DISTINCT rt1.c2, rt1.c3, rt1.c0 FROM rt1;
SELECT rt0.c0, rt1.c3, rt1.c4, rt1.c1, rt1.c0, v0.c1, rt0.c3 FROM v0, rt1, rt0 GROUP BY rt0.c0, rt1.c3, rt1.c4, rt1.c1, rt1.c0, v0.c1, rt0.c3;
SELECT rt0.c0, rt1.c3, rt1.c4, rt1.c1, rt1.c0, v0.c1, rt0.c3 FROM v0, rt1, rt0 WHERE (CASE WHEN (x'50b6' IN (v0.c2)) THEN HEX(DISTINCT rt0.c3) END) GROUP BY rt0.c0, rt1.c3, rt1.c4, rt1.c1, rt1.c0, v0.c1, rt0.c3 UNION SELECT rt0.c0, rt1.c3, rt1.c4, rt1.c1, rt1.c0, v0.c1, rt0.c3 FROM v0, rt1, rt0 WHERE ((NOT (CASE WHEN (x'50b6' IN (v0.c2)) THEN HEX(DISTINCT rt0.c3) END))) GROUP BY rt0.c0, rt1.c3, rt1.c4, rt1.c1, rt1.c0, v0.c1, rt0.c3 UNION SELECT ALL rt0.c0, rt1.c3, rt1.c4, rt1.c1, rt1.c0, v0.c1, rt0.c3 FROM v0, rt1, rt0 WHERE (((CASE WHEN (x'50b6' IN (v0.c2)) THEN HEX(DISTINCT rt0.c3) END) ISNULL)) GROUP BY rt0.c0, rt1.c3, rt1.c4, rt1.c1, rt1.c0, v0.c1, rt0.c3;
SELECT rt0.c0, rt1.c3, rt1.c4, rt1.c1, rt1.c0, v0.c1, rt0.c3 FROM v0, rt1, rt0 GROUP BY rt0.c0, rt1.c3, rt1.c4, rt1.c1, rt1.c0, v0.c1, rt0.c3;
SELECT rt1.c3, rt1.c0, v0.c0, v0.c1 FROM rt1, v0 GROUP BY rt1.c3, rt1.c0, v0.c0, v0.c1;
SELECT ALL rt1.c3, rt1.c0, v0.c0, v0.c1 FROM rt1, v0 GROUP BY rt1.c3, rt1.c0, v0.c0, v0.c1 HAVING ((COUNT(v0.c0))<>(0.8809590500280929)) UNION ALL SELECT rt1.c3, rt1.c0, v0.c0, v0.c1 FROM rt1, v0 GROUP BY rt1.c3, rt1.c0, v0.c0, v0.c1 HAVING (NOT (((COUNT(v0.c0))<>(0.8809590500280929)))) UNION ALL SELECT ALL rt1.c3, rt1.c0, v0.c0, v0.c1 FROM rt1, v0 GROUP BY rt1.c3, rt1.c0, v0.c0, v0.c1 HAVING ((((COUNT(v0.c0))!=(0.8809590500280929))) ISNULL);
SELECT rt1.c3, rt1.c0, v0.c0, v0.c1 FROM rt1, v0 GROUP BY rt1.c3, rt1.c0, v0.c0, v0.c1;
SELECT ALL rt1.c3, rt1.c0, v0.c0, v0.c1 FROM rt1, v0 GROUP BY rt1.c3, rt1.c0, v0.c0, v0.c1 HAVING ((COUNT(v0.c0))<>(0.8809590500280929)) UNION ALL SELECT rt1.c3, rt1.c0, v0.c0, v0.c1 FROM rt1, v0 GROUP BY rt1.c3, rt1.c0, v0.c0, v0.c1 HAVING (NOT (((COUNT(v0.c0))<>(0.8809590500280929)))) UNION ALL SELECT ALL rt1.c3, rt1.c0, v0.c0, v0.c1 FROM rt1, v0 GROUP BY rt1.c3, rt1.c0, v0.c0, v0.c1 HAVING ((((COUNT(v0.c0))!=(0.8809590500280929))) ISNULL);
SELECT rt1.c3, rt1.c0, v0.c0, v0.c1 FROM rt1, v0 GROUP BY rt1.c3, rt1.c0, v0.c0, v0.c1;
SELECT ALL rt1.c3, rt0.c2 FROM rt1, rt0, v0;
SELECT ALL rt1.c3, rt0.c2 FROM rt1, rt0, v0 WHERE ((((('x/P峭')&(v0.c1))) BETWEEN (((rt0.c1)IS(rt0.c1))) AND ((rt0.c3 IN (rt0.c1))))) UNION ALL SELECT ALL rt1.c3, rt0.c2 FROM rt1, rt0, v0 WHERE ((NOT ((((('x/P峭')&(v0.c1))) BETWEEN (((rt0.c1)IS(rt0.c1))) AND ((rt0.c3 IN (rt0.c1))))))) UNION ALL SELECT ALL rt1.c3, rt0.c2 FROM rt1, rt0, v0 WHERE ((((((('x/P峭')&(v0.c1))) BETWEEN (((rt0.c1)IS(rt0.c1))) AND ((rt0.c3 IN (rt0.c1))))) ISNULL));
SELECT ALL rt1.c3, rt0.c2 FROM rt1, rt0, v0;
SELECT DISTINCT * FROM rt0, v0;
SELECT DISTINCT * FROM rt0, v0 WHERE (((((v0.c1) NOTNULL))OR(((rt0.c0) NOT NULL)))) UNION SELECT DISTINCT * FROM rt0, v0 WHERE ((NOT (((((v0.c1) NOTNULL))OR(((rt0.c0) NOT NULL)))))) UNION SELECT DISTINCT * FROM rt0, v0 WHERE (((((((v0.c1) NOTNULL))OR(((rt0.c0) NOT NULL)))) ISNULL));
SELECT DISTINCT * FROM rt0, v0;
SELECT v0.c0 FROM v0, rt1 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0, rt1 WHERE (CASE (((rt1.c4, v0.c2, v0.c1)) BETWEEN ((v0.c1, rt1.c3, rt1.c1)) AND ((v0.c0, rt1.c3, rt1.c3)))  WHEN (- (v0.c2)) THEN ((rt1.c2)>=(v0.c1)) WHEN ((((rt1.c2)OR(v0.c0)))AND(rt1.c2)) THEN rt1.c2 COLLATE RTRIM WHEN (NOT (rt1.c0)) THEN ((v0.c0)*(rt1.c3)) ELSE (- (NULL)) END) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0, rt1 WHERE ((NOT (CASE (((rt1.c4, v0.c2, v0.c1)) BETWEEN ((v0.c1, rt1.c3, rt1.c1)) AND ((v0.c0, rt1.c3, rt1.c3)))  WHEN (- (v0.c2)) THEN ((rt1.c2)>=(v0.c1)) WHEN ((((rt1.c2)OR(v0.c0)))AND(rt1.c2)) THEN rt1.c2 COLLATE RTRIM WHEN (NOT (rt1.c0)) THEN ((v0.c0)*(rt1.c3)) ELSE (- (NULL)) END))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0, rt1 WHERE (((CASE (((rt1.c4, v0.c2, v0.c1)) BETWEEN ((v0.c1, rt1.c3, rt1.c1)) AND ((v0.c0, rt1.c3, rt1.c3)))  WHEN (- (v0.c2)) THEN ((rt1.c2)>=(v0.c1)) WHEN ((((rt1.c2)OR(v0.c0)))AND(rt1.c2)) THEN rt1.c2 COLLATE RTRIM WHEN (NOT (rt1.c0)) THEN ((v0.c0)*(rt1.c3)) ELSE (- (NULL)) END) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0, rt1 GROUP BY v0.c0;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((((((rt0.c2)IS(rt0.c1)))AND(((COUNT(*))IS(GROUP_CONCAT(MIN(rt0.c2)))))))AND(SUM(rt0.c1))) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT (((((((rt0.c2)IS(rt0.c1)))AND(((COUNT(*))IS(GROUP_CONCAT(MIN(rt0.c2)))))))AND(SUM(rt0.c1))))) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((((((((rt0.c2)IS(rt0.c1)))AND(((COUNT(*))IS(GROUP_CONCAT(MIN(rt0.c2)))))))AND(SUM(rt0.c1)))) ISNULL);
SELECT ALL rt0.c4, rt1.c4 FROM rt0, v0, rt1;
SELECT ALL rt0.c4, rt1.c4 FROM rt0, v0, rt1 WHERE ((((((x'ad52') BETWEEN (rt0.c4) AND ('-2030766769'))))>=(((+ (0.6001731521305995)))))) UNION ALL SELECT ALL rt0.c4, rt1.c4 FROM rt0, v0, rt1 WHERE ((NOT ((((((x'ad52') BETWEEN (rt0.c4) AND ('-2030766769'))))>=(((+ (0.6001731521305995)))))))) UNION ALL SELECT ALL rt0.c4, rt1.c4 FROM rt0, v0, rt1 NOT INDEXED WHERE ((((((((x'ad52') BETWEEN (rt0.c4) AND ('-2030766769'))))>=(((+ (0.6001731521305995)))))) ISNULL));
SELECT ALL rt0.c4, rt1.c4 FROM rt0, v0, rt1;
SELECT DISTINCT * FROM v0, rt0;
SELECT DISTINCT * FROM v0, rt0 WHERE ('-1946937528') UNION SELECT DISTINCT * FROM v0, rt0 WHERE ((NOT ('-1946937528'))) UNION SELECT DISTINCT * FROM v0, rt0 WHERE ((('-1946937528') ISNULL));
SELECT DISTINCT * FROM v0, rt0;
SELECT ALL rt1.c1, rt1.c0 FROM rt1, v0 GROUP BY rt1.c1, rt1.c0;
SELECT ALL rt1.c1, rt1.c0 FROM rt1, v0 WHERE ((((v0.c1) IS FALSE) IN ())) GROUP BY rt1.c1, rt1.c0 UNION SELECT ALL rt1.c1, rt1.c0 FROM rt1, v0 WHERE ((NOT ((((v0.c1) IS FALSE) IN ())))) GROUP BY rt1.c1, rt1.c0 UNION SELECT rt1.c1, rt1.c0 FROM rt1, v0 WHERE ((((((v0.c1) IS FALSE) IN ())) ISNULL)) GROUP BY rt1.c1, rt1.c0;
SELECT ALL rt1.c1, rt1.c0 FROM rt1, v0 GROUP BY rt1.c1, rt1.c0;
SELECT ALL rt1.c3, rt1.c4, rt1.c0 FROM rt1 GROUP BY rt1.c3, rt1.c4, rt1.c0;
SELECT rt1.c3, rt1.c4, rt1.c0 FROM rt1 GROUP BY rt1.c3, rt1.c4, rt1.c0 HAVING AVG(GROUP_CONCAT(MIN(COUNT(*)))) UNION ALL SELECT rt1.c3, rt1.c4, rt1.c0 FROM rt1 GROUP BY rt1.c3, rt1.c4, rt1.c0 HAVING (NOT (AVG(GROUP_CONCAT(MIN(COUNT(*)))))) UNION ALL SELECT rt1.c3, rt1.c4, rt1.c0 FROM rt1 GROUP BY rt1.c3, rt1.c4, rt1.c0 HAVING ((AVG(GROUP_CONCAT(MIN(COUNT(*))))) ISNULL);
SELECT ALL v0.c1, v0.c2, v0.c0 FROM v0;
SELECT v0.c1, v0.c2, v0.c0 FROM v0 WHERE (CAST(((((((((((((v0.c0)AND(v0.c2)))AND(v0.c0)))OR(v0.c2)))AND(v0.c2)))OR(v0.c1)))OR(v0.c1)) AS BLOB)) UNION ALL SELECT v0.c1, v0.c2, v0.c0 FROM v0 WHERE ((NOT (CAST(((((((((((((v0.c0)AND(v0.c2)))AND(v0.c0)))OR(v0.c2)))AND(v0.c2)))OR(v0.c1)))OR(v0.c1)) AS BLOB)))) UNION ALL SELECT ALL v0.c1, v0.c2, v0.c0 FROM v0 WHERE (((CAST(((((((((((((v0.c0)AND(v0.c2)))AND(v0.c0)))OR(v0.c2)))AND(v0.c2)))OR(v0.c1)))OR(v0.c1)) AS BLOB)) ISNULL));
SELECT ALL v0.c1, v0.c2, v0.c0 FROM v0;
SELECT DISTINCT * FROM rt0, rt1;
SELECT DISTINCT * FROM rt0, rt1 WHERE (((CASE rt0.c3  WHEN NULL THEN rt0.c2 WHEN rt1.c2 THEN rt1.c0 WHEN rt0.c2 THEN rt1.c1 END)GLOB(((rt1.c1) BETWEEN (rt0.c2) AND (rt0.c3))))) UNION SELECT DISTINCT * FROM rt0, rt1 WHERE ((NOT (((CASE rt0.c3  WHEN NULL THEN rt0.c2 WHEN rt1.c2 THEN rt1.c0 WHEN rt0.c2 THEN rt1.c1 END)GLOB(((rt1.c1) BETWEEN (rt0.c2) AND (rt0.c3))))))) UNION SELECT DISTINCT * FROM rt0, rt1 WHERE (((((CASE rt0.c3  WHEN NULL THEN rt0.c2 WHEN rt1.c2 THEN rt1.c0 WHEN rt0.c2 THEN rt1.c1 END)GLOB(((rt1.c1) BETWEEN (rt0.c2) AND (rt0.c3))))) ISNULL));
SELECT DISTINCT * FROM rt0, rt1;
SELECT rt0.c2, rt0.c0, rt1.c3, rt0.c4, rt0.c3, rt1.c2, v0.c1 FROM rt1, rt0, v0 GROUP BY rt0.c2, rt0.c0, rt1.c3, rt0.c4, rt0.c3, rt1.c2, v0.c1;
SELECT ALL rt0.c2, rt0.c0, rt1.c3, rt0.c4, rt0.c3, rt1.c2, v0.c1 FROM rt1, rt0, v0 WHERE ((NOT (CASE WHEN rt1.c0 THEN rt0.c1 WHEN x'4b3a' THEN rt1.c4 WHEN rt0.c0 THEN rt1.c1 END))) GROUP BY rt0.c2, rt0.c0, rt1.c3, rt0.c4, rt0.c3, rt1.c2, v0.c1 UNION SELECT rt0.c2, rt0.c0, rt1.c3, rt0.c4, rt0.c3, rt1.c2, v0.c1 FROM rt1, rt0, v0 WHERE ((NOT ((NOT (CASE WHEN rt1.c0 THEN rt0.c1 WHEN x'4b3a' THEN rt1.c4 WHEN rt0.c0 THEN rt1.c1 END))))) GROUP BY rt0.c2, rt0.c0, rt1.c3, rt0.c4, rt0.c3, rt1.c2, v0.c1 UNION SELECT ALL rt0.c2, rt0.c0, rt1.c3, rt0.c4, rt0.c3, rt1.c2, v0.c1 FROM rt1, rt0, v0 WHERE ((((NOT (CASE WHEN rt1.c0 THEN rt0.c1 WHEN x'4b3a' THEN rt1.c4 WHEN rt0.c0 THEN rt1.c1 END))) ISNULL)) GROUP BY rt0.c2, rt0.c0, rt1.c3, rt0.c4, rt0.c3, rt1.c2, v0.c1;
SELECT rt0.c2, rt0.c0, rt1.c3, rt0.c4, rt0.c3, rt1.c2, v0.c1 FROM rt1, rt0, v0 GROUP BY rt0.c2, rt0.c0, rt1.c3, rt0.c4, rt0.c3, rt1.c2, v0.c1;
SELECT ALL rt0.c4, rt0.c0, rt0.c1, rt0.c2, rt0.c3 FROM rt0 GROUP BY rt0.c4, rt0.c0, rt0.c1, rt0.c2, rt0.c3;
SELECT rt0.c4, rt0.c0, rt0.c1, rt0.c2, rt0.c3 FROM rt0 GROUP BY rt0.c4, rt0.c0, rt0.c1, rt0.c2, rt0.c3 HAVING (- (COUNT(MAX(rt0.c0)))) UNION ALL SELECT ALL rt0.c4, rt0.c0, rt0.c1, rt0.c2, rt0.c3 FROM rt0 GROUP BY rt0.c4, rt0.c0, rt0.c1, rt0.c2, rt0.c3 HAVING (NOT ((- (COUNT(MAX(rt0.c0)))))) UNION ALL SELECT ALL rt0.c4, rt0.c0, rt0.c1, rt0.c2, rt0.c3 FROM rt0 GROUP BY rt0.c4, rt0.c0, rt0.c1, rt0.c2, rt0.c3 HAVING (((- (COUNT(MAX(rt0.c0))))) ISNULL);
SELECT ALL rt0.c3, rt0.c4, rt0.c2 FROM rt0;
SELECT rt0.c3, rt0.c4, rt0.c2 FROM rt0 WHERE (CASE ((((((((rt0.c3)OR(rt0.c4)))OR(rt0.c3)))OR(rt0.c3)))AND(rt0.c2))  WHEN x'f364' THEN rt0.c2 ELSE rt0.c4 END) UNION ALL SELECT ALL rt0.c3, rt0.c4, rt0.c2 FROM rt0 WHERE ((NOT (CASE ((((((((rt0.c3)OR(rt0.c4)))OR(rt0.c3)))OR(rt0.c3)))AND(rt0.c2))  WHEN x'f364' THEN rt0.c2 ELSE rt0.c4 END))) UNION ALL SELECT ALL rt0.c3, rt0.c4, rt0.c2 FROM rt0 WHERE (((CASE ((((((((rt0.c3)OR(rt0.c4)))OR(rt0.c3)))OR(rt0.c3)))AND(rt0.c2))  WHEN x'f364' THEN rt0.c2 ELSE rt0.c4 END) ISNULL));
SELECT ALL rt0.c3, rt0.c4, rt0.c2 FROM rt0;
SELECT DISTINCT * FROM rt1, v0;
SELECT DISTINCT * FROM rt1, v0 WHERE (0.8532051061748896) UNION SELECT DISTINCT * FROM rt1, v0 WHERE ((NOT (0.8532051061748896))) UNION SELECT DISTINCT * FROM rt1, v0 WHERE (((0.8532051061748896) ISNULL));
SELECT DISTINCT * FROM rt1, v0;
SELECT rt0.c0, rt0.c3, rt0.c4, rt1.c4, v0.c1, rt0.c1, rt0.c2, v0.c2, rt1.c3 FROM v0, rt0, rt1 GROUP BY rt0.c0, rt0.c3, rt0.c4, rt1.c4, v0.c1, rt0.c1, rt0.c2, v0.c2, rt1.c3;
SELECT rt0.c0, rt0.c3, rt0.c4, rt1.c4, v0.c1, rt0.c1, rt0.c2, v0.c2, rt1.c3 FROM v0, rt0, rt1 WHERE (CAST(((rt1.c1) IS FALSE) AS BLOB)) GROUP BY rt0.c0, rt0.c3, rt0.c4, rt1.c4, v0.c1, rt0.c1, rt0.c2, v0.c2, rt1.c3 UNION SELECT rt0.c0, rt0.c3, rt0.c4, rt1.c4, v0.c1, rt0.c1, rt0.c2, v0.c2, rt1.c3 FROM v0, rt0, rt1 WHERE ((NOT (CAST(((rt1.c1) IS FALSE) AS BLOB)))) GROUP BY rt0.c0, rt0.c3, rt0.c4, rt1.c4, v0.c1, rt0.c1, rt0.c2, v0.c2, rt1.c3 UNION SELECT rt0.c0, rt0.c3, rt0.c4, rt1.c4, v0.c1, rt0.c1, rt0.c2, v0.c2, rt1.c3 FROM v0 NOT INDEXED, rt0, rt1 WHERE (((CAST(((rt1.c1) IS FALSE) AS BLOB)) ISNULL)) GROUP BY rt0.c0, rt0.c3, rt0.c4, rt1.c4, v0.c1, rt0.c1, rt0.c2, v0.c2, rt1.c3;
SELECT rt0.c0, rt0.c3, rt0.c4, rt1.c4, v0.c1, rt0.c1, rt0.c2, v0.c2, rt1.c3 FROM v0, rt0, rt1 GROUP BY rt0.c0, rt0.c3, rt0.c4, rt1.c4, v0.c1, rt0.c1, rt0.c2, v0.c2, rt1.c3;
SELECT ALL v0.c1 FROM v0 GROUP BY v0.c1;
SELECT ALL v0.c1 FROM v0 GROUP BY v0.c1 HAVING COUNT(v0.c2 COLLATE BINARY) UNION ALL SELECT ALL v0.c1 FROM v0 GROUP BY v0.c1 HAVING (NOT (COUNT(v0.c2 COLLATE BINARY))) UNION ALL SELECT v0.c1 FROM v0 GROUP BY v0.c1 HAVING ((COUNT(v0.c2 COLLATE BINARY)) ISNULL);
SELECT ALL v0.c1 FROM v0 GROUP BY v0.c1;
SELECT ALL v0.c1 FROM v0 GROUP BY v0.c1 HAVING COUNT(v0.c2 COLLATE BINARY) UNION ALL SELECT ALL v0.c1 FROM v0 GROUP BY v0.c1 HAVING (NOT (COUNT(v0.c2 COLLATE BINARY))) UNION ALL SELECT v0.c1 FROM v0 GROUP BY v0.c1 HAVING ((COUNT(v0.c2 COLLATE BINARY)) ISNULL);
SELECT ALL v0.c1 FROM v0 GROUP BY v0.c1;
SELECT ALL rt1.c0, v0.c1, rt1.c3, rt1.c1 FROM v0 NATURAL JOIN rt1;
SELECT ALL rt1.c0, v0.c1, rt1.c3, rt1.c1 FROM v0 NATURAL JOIN rt1 WHERE ((((rt1.c3)!=(v0.c1)) IN ())) UNION ALL SELECT rt1.c0, v0.c1, rt1.c3, rt1.c1 FROM v0 NATURAL JOIN rt1 WHERE ((NOT ((((rt1.c3)<>(v0.c1)) IN ())))) UNION ALL SELECT ALL rt1.c0, v0.c1, rt1.c3, rt1.c1 FROM v0 NATURAL JOIN rt1 WHERE ((((((rt1.c3)!=(v0.c1)) IN ())) ISNULL));
SELECT ALL rt1.c0, v0.c1, rt1.c3, rt1.c1 FROM v0 NATURAL JOIN rt1;
SELECT DISTINCT * FROM rt0, v0, rt1;
SELECT DISTINCT * FROM rt0, v0 NOT INDEXED, rt1 WHERE (((rt0.c3)OR(((((((((rt1.c0)OR(rt1.c3)))AND(rt1.c1)))OR(-850814285)))AND(v0.c1))))) UNION SELECT DISTINCT * FROM rt0, v0, rt1 WHERE ((NOT (((rt0.c3)OR(((((((((rt1.c0)OR(rt1.c3)))AND(rt1.c1)))OR(-850814285)))AND(v0.c1))))))) UNION SELECT DISTINCT * FROM rt0, v0, rt1 WHERE (((((rt0.c3)OR(((((((((rt1.c0)OR(rt1.c3)))AND(rt1.c1)))OR(-850814285)))AND(v0.c1))))) ISNULL));
SELECT DISTINCT * FROM rt0, v0, rt1;
SELECT rt1.c3, v0.c1, rt1.c4, rt1.c1, rt1.c0, v0.c0, v0.c2, rt1.c2 FROM rt1, v0 GROUP BY rt1.c3, v0.c1, rt1.c4, rt1.c1, rt1.c0, v0.c0, v0.c2, rt1.c2;
SELECT rt1.c3, v0.c1, rt1.c4, rt1.c1, rt1.c0, v0.c0, v0.c2, rt1.c2 FROM rt1, v0 WHERE (CAST('-538087519' AS INTEGER)) GROUP BY rt1.c3, v0.c1, rt1.c4, rt1.c1, rt1.c0, v0.c0, v0.c2, rt1.c2 UNION SELECT ALL rt1.c3, v0.c1, rt1.c4, rt1.c1, rt1.c0, v0.c0, v0.c2, rt1.c2 FROM rt1, v0 WHERE ((NOT (CAST('-538087519' AS INTEGER)))) GROUP BY rt1.c3, v0.c1, rt1.c4, rt1.c1, rt1.c0, v0.c0, v0.c2, rt1.c2 UNION SELECT rt1.c3, v0.c1, rt1.c4, rt1.c1, rt1.c0, v0.c0, v0.c2, rt1.c2 FROM rt1, v0 WHERE (((CAST('-538087519' AS INTEGER)) ISNULL)) GROUP BY rt1.c3, v0.c1, rt1.c4, rt1.c1, rt1.c0, v0.c0, v0.c2, rt1.c2;
SELECT rt1.c3, v0.c1, rt1.c4, rt1.c1, rt1.c0, v0.c0, v0.c2, rt1.c2 FROM rt1, v0 GROUP BY rt1.c3, v0.c1, rt1.c4, rt1.c1, rt1.c0, v0.c0, v0.c2, rt1.c2;
SELECT ALL rt0.c4, rt0.c1, v0.c2, rt1.c1 FROM rt0, rt1, v0 GROUP BY rt0.c4, rt0.c1, v0.c2, rt1.c1;
SELECT ALL rt0.c4, rt0.c1, v0.c2, rt1.c1 FROM rt0, rt1, v0 GROUP BY rt0.c4, rt0.c1, v0.c2, rt1.c1 HAVING AVG(MAX(TOTAL(rt1.c4))) UNION ALL SELECT ALL rt0.c4, rt0.c1, v0.c2, rt1.c1 FROM rt0, rt1, v0 GROUP BY rt0.c4, rt0.c1, v0.c2, rt1.c1 HAVING (NOT (AVG(MAX(TOTAL(rt1.c4))))) UNION ALL SELECT ALL rt0.c4, rt0.c1, v0.c2, rt1.c1 FROM rt0, rt1, v0 GROUP BY rt0.c4, rt0.c1, v0.c2, rt1.c1 HAVING ((AVG(MAX(TOTAL(rt1.c4)))) ISNULL);
SELECT * FROM rt0, v0 FULL OUTER JOIN rt1 ON (((v0.c2)) NOT BETWEEN ((rt1.c2 COLLATE RTRIM)) AND ((((rt1.c2)<<(rt1.c0)))));
SELECT * FROM rt0, v0 FULL OUTER JOIN rt1 ON (((v0.c2)) NOT BETWEEN ((rt1.c2 COLLATE RTRIM)) AND ((((rt1.c2)<<(rt1.c0))))) WHERE (-858372239) UNION ALL SELECT * FROM rt0, v0 FULL OUTER JOIN rt1 ON (((v0.c2)) NOT BETWEEN ((rt1.c2 COLLATE RTRIM)) AND ((((rt1.c2)<<(rt1.c0))))) WHERE ((NOT (-858372239))) UNION ALL SELECT ALL * FROM rt0, v0 FULL OUTER JOIN rt1 ON (((v0.c2)) NOT BETWEEN ((rt1.c2 COLLATE RTRIM)) AND ((((rt1.c2)<<(rt1.c0))))) WHERE (((-858372239) ISNULL));
SELECT * FROM rt0, v0 FULL OUTER JOIN rt1 ON (((v0.c2)) NOT BETWEEN ((rt1.c2 COLLATE RTRIM)) AND ((((rt1.c2)<<(rt1.c0)))));
SELECT DISTINCT rt1.c3, rt1.c2 FROM rt1;
SELECT DISTINCT rt1.c3, rt1.c2 FROM rt1 WHERE ('-768213039') UNION SELECT DISTINCT rt1.c3, rt1.c2 FROM rt1 WHERE ((NOT ('-768213039'))) UNION SELECT DISTINCT rt1.c3, rt1.c2 FROM rt1 WHERE ((('-768213039') ISNULL));
SELECT DISTINCT rt1.c3, rt1.c2 FROM rt1;
SELECT rt1.c3, rt0.c2, v0.c1, v0.c2, rt1.c4, rt1.c1, rt1.c0, rt0.c3, rt0.c0, rt1.c2, rt0.c1, rt0.c4, v0.c0 FROM rt1 RIGHT OUTER JOIN v0 ON (((~ (rt1.c2)))<=((rt0.c3 IN ()))) CROSS JOIN rt0 ON (((rt0.c1)) BETWEEN ((((rt1.c1)<=(rt0.c1)))) AND (((~ (rt1.c1))))) GROUP BY rt1.c3, rt0.c2, v0.c1, v0.c2, rt1.c4, rt1.c1, rt1.c0, rt0.c3, rt0.c0, rt1.c2, rt0.c1, rt0.c4, v0.c0;
SELECT rt1.c3, rt0.c2, v0.c1, v0.c2, rt1.c4, rt1.c1, rt1.c0, rt0.c3, rt0.c0, rt1.c2, rt0.c1, rt0.c4, v0.c0 FROM rt1 RIGHT OUTER JOIN v0 ON (((~ (rt1.c2)))<=((rt0.c3 IN ()))) CROSS JOIN rt0 ON (((rt0.c1)) BETWEEN ((((rt1.c1)<=(rt0.c1)))) AND (((~ (rt1.c1))))) WHERE (rt1.c1) GROUP BY rt1.c3, rt0.c2, v0.c1, v0.c2, rt1.c4, rt1.c1, rt1.c0, rt0.c3, rt0.c0, rt1.c2, rt0.c1, rt0.c4, v0.c0 UNION SELECT rt1.c3, rt0.c2, v0.c1, v0.c2, rt1.c4, rt1.c1, rt1.c0, rt0.c3, rt0.c0, rt1.c2, rt0.c1, rt0.c4, v0.c0 FROM rt1 RIGHT OUTER JOIN v0 ON (((~ (rt1.c2)))<=((rt0.c3 IN ()))) CROSS JOIN rt0 ON (((rt0.c1)) BETWEEN ((((rt1.c1)<=(rt0.c1)))) AND (((~ (rt1.c1))))) WHERE ((NOT (rt1.c1))) GROUP BY rt1.c3, rt0.c2, v0.c1, v0.c2, rt1.c4, rt1.c1, rt1.c0, rt0.c3, rt0.c0, rt1.c2, rt0.c1, rt0.c4, v0.c0 UNION SELECT ALL rt1.c3, rt0.c2, v0.c1, v0.c2, rt1.c4, rt1.c1, rt1.c0, rt0.c3, rt0.c0, rt1.c2, rt0.c1, rt0.c4, v0.c0 FROM rt1 RIGHT OUTER JOIN v0 ON (((~ (rt1.c2)))<=((rt0.c3 IN ()))) CROSS JOIN rt0 ON (((rt0.c1)) BETWEEN ((((rt1.c1)<=(rt0.c1)))) AND (((~ (rt1.c1))))) WHERE (((rt1.c1) ISNULL)) GROUP BY rt1.c3, rt0.c2, v0.c1, v0.c2, rt1.c4, rt1.c1, rt1.c0, rt0.c3, rt0.c0, rt1.c2, rt0.c1, rt0.c4, v0.c0;
SELECT rt1.c3, rt0.c2, v0.c1, v0.c2, rt1.c4, rt1.c1, rt1.c0, rt0.c3, rt0.c0, rt1.c2, rt0.c1, rt0.c4, v0.c0 FROM rt1 RIGHT OUTER JOIN v0 ON (((~ (rt1.c2)))<=((rt0.c3 IN ()))) CROSS JOIN rt0 ON (((rt0.c1)) BETWEEN ((((rt1.c1)<=(rt0.c1)))) AND (((~ (rt1.c1))))) GROUP BY rt1.c3, rt0.c2, v0.c1, v0.c2, rt1.c4, rt1.c1, rt1.c0, rt0.c3, rt0.c0, rt1.c2, rt0.c1, rt0.c4, v0.c0;
SELECT rt1.c1, rt1.c4, rt1.c2 FROM rt1 GROUP BY rt1.c1, rt1.c4, rt1.c2;
SELECT rt1.c1, rt1.c4, rt1.c2 FROM rt1 GROUP BY rt1.c1, rt1.c4, rt1.c2 HAVING GROUP_CONCAT(((GROUP_CONCAT(SUM(rt1.c4)))&(rt1.c1))) UNION ALL SELECT ALL rt1.c1, rt1.c4, rt1.c2 FROM rt1 GROUP BY rt1.c1, rt1.c4, rt1.c2 HAVING (NOT (GROUP_CONCAT(((GROUP_CONCAT(SUM(rt1.c4)))&(rt1.c1))))) UNION ALL SELECT ALL rt1.c1, rt1.c4, rt1.c2 FROM rt1 GROUP BY rt1.c1, rt1.c4, rt1.c2 HAVING ((GROUP_CONCAT(((GROUP_CONCAT(SUM(rt1.c4)))&(rt1.c1)))) ISNULL);
SELECT ALL TOTAL(((((rt1.c0) ISNULL)) NOT BETWEEN ((((rt1.c2, '-533811632', NULL))<>((0.39660295597203044, rt1.c1, rt1.c1)))) AND (rt1.c3 COLLATE BINARY))) FROM rt1;
SELECT ALL * FROM v0;
SELECT * FROM v0 WHERE ((((((((((v0.c2)OR(v0.c0)))OR(v0.c0)))OR(v0.c2)))AND(v0.c0)) IN ((NOT (v0.c0))))) UNION ALL SELECT * FROM v0 WHERE ((NOT ((((((((((v0.c2)OR(v0.c0)))OR(v0.c0)))OR(v0.c2)))AND(v0.c0)) IN ((NOT (v0.c0))))))) UNION ALL SELECT ALL * FROM v0 WHERE ((((((((((((v0.c2)OR(v0.c0)))OR(v0.c0)))OR(v0.c2)))AND(v0.c0)) IN ((NOT (v0.c0))))) ISNULL));
SELECT ALL * FROM v0;
SELECT DISTINCT v0.c2 FROM v0;
SELECT DISTINCT v0.c2 FROM v0 WHERE ((((((((v0.c1)OR(x'')))OR(v0.c1)), (((v0.c0, v0.c1, v0.c2))==((v0.c2, v0.c1, v0.c0))), ((v0.c1) NOT BETWEEN (v0.c1) AND (v0.c0))))<=((CASE WHEN v0.c2 THEN v0.c0 END, (- (v0.c2)), v0.c2)))) UNION SELECT DISTINCT v0.c2 FROM v0 WHERE ((NOT ((((((((v0.c1)OR(x'')))OR(v0.c1)), (((v0.c0, v0.c1, v0.c2))=((v0.c2, v0.c1, v0.c0))), ((v0.c1) NOT BETWEEN (v0.c1) AND (v0.c0))))<=((CASE WHEN v0.c2 THEN v0.c0 END, (- (v0.c2)), v0.c2)))))) UNION SELECT DISTINCT v0.c2 FROM v0 WHERE ((((((((((v0.c1)OR(x'')))OR(v0.c1)), (((v0.c0, v0.c1, v0.c2))==((v0.c2, v0.c1, v0.c0))), ((v0.c1) NOT BETWEEN (v0.c1) AND (v0.c0))))<=((CASE WHEN v0.c2 THEN v0.c0 END, (- (v0.c2)), v0.c2)))) ISNULL));
SELECT DISTINCT v0.c2 FROM v0;
SELECT rt1.c1, rt1.c0, rt1.c2, v0.c0, v0.c2, rt1.c4, v0.c1, rt0.c2, rt0.c3, rt0.c0, rt0.c1 FROM v0, rt1, rt0 GROUP BY rt1.c1, rt1.c0, rt1.c2, v0.c0, v0.c2, rt1.c4, v0.c1, rt0.c2, rt0.c3, rt0.c0, rt0.c1;
SELECT ALL rt1.c1, rt1.c0, rt1.c2, v0.c0, v0.c2, rt1.c4, v0.c1, rt0.c2, rt0.c3, rt0.c0, rt0.c1 FROM v0, rt1, rt0 WHERE (TRIM(DISTINCT (-1247626327 IN ()))) GROUP BY rt1.c1, rt1.c0, rt1.c2, v0.c0, v0.c2, rt1.c4, v0.c1, rt0.c2, rt0.c3, rt0.c0, rt0.c1 UNION SELECT ALL rt1.c1, rt1.c0, rt1.c2, v0.c0, v0.c2, rt1.c4, v0.c1, rt0.c2, rt0.c3, rt0.c0, rt0.c1 FROM v0, rt1, rt0 WHERE ((NOT (TRIM(DISTINCT (-1247626327 IN ()))))) GROUP BY rt1.c1, rt1.c0, rt1.c2, v0.c0, v0.c2, rt1.c4, v0.c1, rt0.c2, rt0.c3, rt0.c0, rt0.c1 UNION SELECT ALL rt1.c1, rt1.c0, rt1.c2, v0.c0, v0.c2, rt1.c4, v0.c1, rt0.c2, rt0.c3, rt0.c0, rt0.c1 FROM v0, rt1, rt0 WHERE (((TRIM(DISTINCT (-1247626327 IN ()))) ISNULL)) GROUP BY rt1.c1, rt1.c0, rt1.c2, v0.c0, v0.c2, rt1.c4, v0.c1, rt0.c2, rt0.c3, rt0.c0, rt0.c1;
SELECT rt1.c1, rt1.c0, rt1.c2, v0.c0, v0.c2, rt1.c4, v0.c1, rt0.c2, rt0.c3, rt0.c0, rt0.c1 FROM v0, rt1, rt0 GROUP BY rt1.c1, rt1.c0, rt1.c2, v0.c0, v0.c2, rt1.c4, v0.c1, rt0.c2, rt0.c3, rt0.c0, rt0.c1;
SELECT rt0.c2, v0.c0, rt0.c0, rt0.c4, v0.c1, rt0.c3, rt0.c1 FROM rt0, v0 GROUP BY rt0.c2, v0.c0, rt0.c0, rt0.c4, v0.c1, rt0.c3, rt0.c1;
SELECT rt0.c2, v0.c0, rt0.c0, rt0.c4, v0.c1, rt0.c3, rt0.c1 FROM rt0, v0 GROUP BY rt0.c2, v0.c0, rt0.c0, rt0.c4, v0.c1, rt0.c3, rt0.c1 HAVING GROUP_CONCAT(((((rt0.c1)OR(v0.c2)))OR(AVG(rt0.c3)))) UNION ALL SELECT ALL rt0.c2, v0.c0, rt0.c0, rt0.c4, v0.c1, rt0.c3, rt0.c1 FROM rt0, v0 GROUP BY rt0.c2, v0.c0, rt0.c0, rt0.c4, v0.c1, rt0.c3, rt0.c1 HAVING (NOT (GROUP_CONCAT(((((rt0.c1)OR(v0.c2)))OR(AVG(rt0.c3)))))) UNION ALL SELECT rt0.c2, v0.c0, rt0.c0, rt0.c4, v0.c1, rt0.c3, rt0.c1 FROM rt0, v0 GROUP BY rt0.c2, v0.c0, rt0.c0, rt0.c4, v0.c1, rt0.c3, rt0.c1 HAVING ((GROUP_CONCAT(((((rt0.c1)OR(v0.c2)))OR(AVG(rt0.c3))))) ISNULL);
SELECT * FROM rt1 INNER JOIN rt0 ON (- (((v0.c2)<>(rt1.c4)))) RIGHT OUTER JOIN v0 ON ((rt0.c2) IS TRUE);
SELECT DISTINCT v0.c2, v0.c0, rt0.c3, rt0.c4, rt1.c0, rt1.c4 FROM v0, rt1, rt0;
SELECT DISTINCT v0.c2, v0.c0, rt0.c3, rt0.c4, rt1.c0, rt1.c4 FROM v0, rt1, rt0 WHERE (CAST((~ (rt1.c2)) AS NUMERIC)) UNION SELECT DISTINCT v0.c2, v0.c0, rt0.c3, rt0.c4, rt1.c0, rt1.c4 FROM v0, rt1, rt0 WHERE ((NOT (CAST((~ (rt1.c2)) AS NUMERIC)))) UNION SELECT DISTINCT v0.c2, v0.c0, rt0.c3, rt0.c4, rt1.c0, rt1.c4 FROM v0, rt1, rt0 WHERE (((CAST((~ (rt1.c2)) AS NUMERIC)) ISNULL));
SELECT DISTINCT v0.c2, v0.c0, rt0.c3, rt0.c4, rt1.c0, rt1.c4 FROM v0, rt1, rt0;
SELECT v0.c2, rt0.c0 FROM rt1, rt0, v0 GROUP BY v0.c2, rt0.c0;
SELECT ALL v0.c2, rt0.c0 FROM rt1, rt0, v0 WHERE (CASE ((0.7165734651818981)<>(rt0.c4))  WHEN 0.48518131959443545 COLLATE NOCASE THEN (((rt1.c3, x'', rt1.c3)) BETWEEN ((rt0.c1, rt0.c1, v0.c2)) AND ((v0.c2, rt1.c4, rt0.c4))) WHEN ((((rt0.c1)OR(rt1.c4)))OR(rt1.c0)) THEN ((rt0.c1) NOT BETWEEN (rt1.c1) AND (0.5313731253501582)) WHEN ((rt1.c1)OR(rt0.c2)) THEN (((rt0.c1, v0.c0, rt0.c2)) BETWEEN ((rt0.c0, '', rt0.c1)) AND ((rt0.c1, rt0.c0, rt1.c0))) WHEN ((rt0.c1) NOTNULL) THEN (rt1.c4 IN (v0.c2, rt0.c3)) WHEN LIKE(0.8902411429574468, x'f768') THEN ((v0.c0)==(v0.c0)) END) GROUP BY v0.c2, rt0.c0 UNION SELECT ALL v0.c2, rt0.c0 FROM rt1, rt0, v0 WHERE ((NOT (CASE ((0.7165734651818981)<>(rt0.c4))  WHEN 0.48518131959443545 COLLATE NOCASE THEN (((rt1.c3, x'', rt1.c3)) BETWEEN ((rt0.c1, rt0.c1, v0.c2)) AND ((v0.c2, rt1.c4, rt0.c4))) WHEN ((((rt0.c1)OR(rt1.c4)))OR(rt1.c0)) THEN ((rt0.c1) NOT BETWEEN (rt1.c1) AND (0.5313731253501582)) WHEN ((rt1.c1)OR(rt0.c2)) THEN (((rt0.c1, v0.c0, rt0.c2)) BETWEEN ((rt0.c0, '', rt0.c1)) AND ((rt0.c1, rt0.c0, rt1.c0))) WHEN ((rt0.c1) NOTNULL) THEN (rt1.c4 IN (v0.c2, rt0.c3)) WHEN LIKE(0.8902411429574468, x'f768') THEN ((v0.c0)==(v0.c0)) END))) GROUP BY v0.c2, rt0.c0 UNION SELECT ALL v0.c2, rt0.c0 FROM rt1, rt0, v0 WHERE (((CASE ((0.7165734651818981)!=(rt0.c4))  WHEN 0.48518131959443545 COLLATE NOCASE THEN (((rt1.c3, x'', rt1.c3)) BETWEEN ((rt0.c1, rt0.c1, v0.c2)) AND ((v0.c2, rt1.c4, rt0.c4))) WHEN ((((rt0.c1)OR(rt1.c4)))OR(rt1.c0)) THEN ((rt0.c1) NOT BETWEEN (rt1.c1) AND (0.5313731253501582)) WHEN ((rt1.c1)OR(rt0.c2)) THEN (((rt0.c1, v0.c0, rt0.c2)) BETWEEN ((rt0.c0, '', rt0.c1)) AND ((rt0.c1, rt0.c0, rt1.c0))) WHEN ((rt0.c1) NOTNULL) THEN (rt1.c4 IN (v0.c2, rt0.c3)) WHEN LIKE(0.8902411429574468, x'f768') THEN ((v0.c0)==(v0.c0)) END) ISNULL)) GROUP BY v0.c2, rt0.c0;
SELECT v0.c2, rt0.c0 FROM rt1, rt0, v0 GROUP BY v0.c2, rt0.c0;
SELECT ALL rt1.c3, v0.c0, rt1.c0, rt1.c1, v0.c2, v0.c1, rt1.c2, rt1.c4 FROM rt1, v0 GROUP BY rt1.c3, v0.c0, rt1.c0, rt1.c1, v0.c2, v0.c1, rt1.c2, rt1.c4;
SELECT rt1.c3, v0.c0, rt1.c0, rt1.c1, v0.c2, v0.c1, rt1.c2, rt1.c4 FROM rt1, v0 GROUP BY rt1.c3, v0.c0, rt1.c0, rt1.c1, v0.c2, v0.c1, rt1.c2, rt1.c4 HAVING COUNT(*) UNION ALL SELECT rt1.c3, v0.c0, rt1.c0, rt1.c1, v0.c2, v0.c1, rt1.c2, rt1.c4 FROM rt1, v0 GROUP BY rt1.c3, v0.c0, rt1.c0, rt1.c1, v0.c2, v0.c1, rt1.c2, rt1.c4 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt1.c3, v0.c0, rt1.c0, rt1.c1, v0.c2, v0.c1, rt1.c2, rt1.c4 FROM rt1, v0 GROUP BY rt1.c3, v0.c0, rt1.c0, rt1.c1, v0.c2, v0.c1, rt1.c2, rt1.c4 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt1.c3, v0.c0, rt1.c0, rt1.c1, v0.c2, v0.c1, rt1.c2, rt1.c4 FROM rt1, v0 GROUP BY rt1.c3, v0.c0, rt1.c0, rt1.c1, v0.c2, v0.c1, rt1.c2, rt1.c4;
SELECT rt1.c3, v0.c0, rt1.c0, rt1.c1, v0.c2, v0.c1, rt1.c2, rt1.c4 FROM rt1, v0 GROUP BY rt1.c3, v0.c0, rt1.c0, rt1.c1, v0.c2, v0.c1, rt1.c2, rt1.c4 HAVING COUNT(*) UNION ALL SELECT rt1.c3, v0.c0, rt1.c0, rt1.c1, v0.c2, v0.c1, rt1.c2, rt1.c4 FROM rt1, v0 GROUP BY rt1.c3, v0.c0, rt1.c0, rt1.c1, v0.c2, v0.c1, rt1.c2, rt1.c4 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt1.c3, v0.c0, rt1.c0, rt1.c1, v0.c2, v0.c1, rt1.c2, rt1.c4 FROM rt1, v0 GROUP BY rt1.c3, v0.c0, rt1.c0, rt1.c1, v0.c2, v0.c1, rt1.c2, rt1.c4 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt1.c3, v0.c0, rt1.c0, rt1.c1, v0.c2, v0.c1, rt1.c2, rt1.c4 FROM rt1, v0 GROUP BY rt1.c3, v0.c0, rt1.c0, rt1.c1, v0.c2, v0.c1, rt1.c2, rt1.c4;
SELECT v0.c1, rt0.c2, v0.c2, rt0.c0, v0.c0, rt1.c3, rt0.c1, rt1.c2, rt1.c4, rt0.c4, rt1.c0, rt1.c1 FROM rt0, rt1, v0;
SELECT v0.c1, rt0.c2, v0.c2, rt0.c0, v0.c0, rt1.c3, rt0.c1, rt1.c2, rt1.c4, rt0.c4, rt1.c0, rt1.c1 FROM rt0, rt1, v0 WHERE ((- ((((rt1.c0, v0.c0, rt1.c4)) BETWEEN ((rt0.c0, v0.c0, rt1.c4)) AND ((rt1.c4, rt1.c0, rt1.c2)))))) UNION ALL SELECT ALL v0.c1, rt0.c2, v0.c2, rt0.c0, v0.c0, rt1.c3, rt0.c1, rt1.c2, rt1.c4, rt0.c4, rt1.c0, rt1.c1 FROM rt0, rt1, v0 WHERE ((NOT ((- ((((rt1.c0, v0.c0, rt1.c4)) BETWEEN ((rt0.c0, v0.c0, rt1.c4)) AND ((rt1.c4, rt1.c0, rt1.c2)))))))) UNION ALL SELECT ALL v0.c1, rt0.c2, v0.c2, rt0.c0, v0.c0, rt1.c3, rt0.c1, rt1.c2, rt1.c4, rt0.c4, rt1.c0, rt1.c1 FROM rt0, rt1, v0 WHERE ((((- ((((rt1.c0, v0.c0, rt1.c4)) BETWEEN ((rt0.c0, v0.c0, rt1.c4)) AND ((rt1.c4, rt1.c0, rt1.c2)))))) ISNULL));
SELECT v0.c1, rt0.c2, v0.c2, rt0.c0, v0.c0, rt1.c3, rt0.c1, rt1.c2, rt1.c4, rt0.c4, rt1.c0, rt1.c1 FROM rt0, rt1, v0;
SELECT DISTINCT * FROM v0 FULL OUTER JOIN rt1 ON CAST(((rt1.c0) NOTNULL) AS INTEGER) CROSS JOIN rt0 ON LIKELIHOOD(((rt1.c2) NOT NULL), 0.8878886711917031);
SELECT DISTINCT * FROM v0 FULL OUTER JOIN rt1 ON CAST(((rt1.c0) NOTNULL) AS INTEGER) CROSS JOIN rt0 ON LIKELIHOOD(((rt1.c2) NOT NULL), 0.8878886711917031) WHERE (CAST(((v0.c1)<(rt0.c2)) AS BLOB)) UNION SELECT DISTINCT * FROM v0 FULL OUTER JOIN rt1 ON CAST(((rt1.c0) NOTNULL) AS INTEGER) CROSS JOIN rt0 ON LIKELIHOOD(((rt1.c2) NOT NULL), 0.8878886711917031) WHERE ((NOT (CAST(((v0.c1)<(rt0.c2)) AS BLOB)))) UNION SELECT DISTINCT * FROM v0 FULL OUTER JOIN rt1 ON CAST(((rt1.c0) NOTNULL) AS INTEGER) CROSS JOIN rt0 ON LIKELIHOOD(((rt1.c2) NOT NULL), 0.8878886711917031) WHERE (((CAST(((v0.c1)<(rt0.c2)) AS BLOB)) ISNULL));
SELECT DISTINCT * FROM v0 FULL OUTER JOIN rt1 ON CAST(((rt1.c0) NOTNULL) AS INTEGER) CROSS JOIN rt0 ON LIKELIHOOD(((rt1.c2) NOT NULL), 0.8878886711917031);
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 WHERE ((((((rt0.c3)) BETWEEN ((rt0.c1)) AND ((rt0.c1)))) NOT NULL)) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM rt0 WHERE ((NOT ((((((rt0.c3)) BETWEEN ((rt0.c1)) AND ((rt0.c1)))) NOT NULL)))) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM rt0 WHERE ((((((((rt0.c3)) BETWEEN ((rt0.c1)) AND ((rt0.c1)))) NOT NULL)) ISNULL)) GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt1.c1, rt1.c4 FROM rt0, rt1 LEFT OUTER JOIN v0 ON SQLITE_COMPILEOPTION_USED(((rt1.c0) NOT BETWEEN (v0.c0) AND (rt1.c1))) GROUP BY rt1.c1, rt1.c4;
SELECT ALL rt1.c1, rt1.c4 FROM rt0, rt1 LEFT OUTER JOIN v0 ON SQLITE_COMPILEOPTION_USED(((rt1.c0) NOT BETWEEN (v0.c0) AND (rt1.c1))) GROUP BY rt1.c1, rt1.c4 HAVING TOTAL(((MIN(TOTAL(COUNT(TOTAL(rt0.c3))))) NOTNULL)) UNION ALL SELECT ALL rt1.c1, rt1.c4 FROM rt0, rt1 LEFT OUTER JOIN v0 ON SQLITE_COMPILEOPTION_USED(((rt1.c0) NOT BETWEEN (v0.c0) AND (rt1.c1))) GROUP BY rt1.c1, rt1.c4 HAVING (NOT (TOTAL(((MIN(TOTAL(COUNT(TOTAL(rt0.c3))))) NOTNULL)))) UNION ALL SELECT rt1.c1, rt1.c4 FROM rt0, rt1 LEFT OUTER JOIN v0 ON SQLITE_COMPILEOPTION_USED(((rt1.c0) NOT BETWEEN (v0.c0) AND (rt1.c1))) GROUP BY rt1.c1, rt1.c4 HAVING ((TOTAL(((MIN(TOTAL(COUNT(TOTAL(rt0.c3))))) NOTNULL))) ISNULL);
SELECT ALL rt1.c0, rt1.c3, rt1.c1, rt1.c4 FROM rt1;
SELECT ALL rt1.c0, rt1.c3, rt1.c1, rt1.c4 FROM rt1 WHERE (LIKELY(((rt1.c0)<(rt1.c3)))) UNION ALL SELECT ALL rt1.c0, rt1.c3, rt1.c1, rt1.c4 FROM rt1 WHERE ((NOT (LIKELY(((rt1.c0)<(rt1.c3)))))) UNION ALL SELECT ALL rt1.c0, rt1.c3, rt1.c1, rt1.c4 FROM rt1 WHERE (((LIKELY(((rt1.c0)<(rt1.c3)))) ISNULL));
SELECT ALL rt1.c0, rt1.c3, rt1.c1, rt1.c4 FROM rt1;
SELECT DISTINCT * FROM rt1, v0;
SELECT DISTINCT * FROM rt1, v0 WHERE ((((rt1.c3 IN ()))IS(CASE WHEN v0.c1 THEN v0.c1 ELSE v0.c1 END))) UNION SELECT DISTINCT * FROM rt1, v0 WHERE ((NOT ((((rt1.c3 IN ()))IS(CASE WHEN v0.c1 THEN v0.c1 ELSE v0.c1 END))))) UNION SELECT DISTINCT * FROM rt1, v0 WHERE ((((((rt1.c3 IN ()))IS(CASE WHEN v0.c1 THEN v0.c1 ELSE v0.c1 END))) ISNULL));
SELECT DISTINCT * FROM rt1, v0;
SELECT rt0.c1, rt1.c2, v0.c1, rt1.c4, rt1.c1 FROM rt1, v0, rt0 GROUP BY rt0.c1, rt1.c2, v0.c1, rt1.c4, rt1.c1;
SELECT rt0.c1, rt1.c2, v0.c1, rt1.c4, rt1.c1 FROM rt1, v0, rt0 WHERE (json_type((((x'', rt1.c1, rt0.c4)) BETWEEN ((rt0.c3, rt0.c1, rt1.c4)) AND ((v0.c2, rt1.c2, rt1.c3))))) GROUP BY rt0.c1, rt1.c2, v0.c1, rt1.c4, rt1.c1 UNION SELECT ALL rt0.c1, rt1.c2, v0.c1, rt1.c4, rt1.c1 FROM rt1, v0, rt0 WHERE ((NOT (json_type((((x'', rt1.c1, rt0.c4)) BETWEEN ((rt0.c3, rt0.c1, rt1.c4)) AND ((v0.c2, rt1.c2, rt1.c3))))))) GROUP BY rt0.c1, rt1.c2, v0.c1, rt1.c4, rt1.c1 UNION SELECT ALL rt0.c1, rt1.c2, v0.c1, rt1.c4, rt1.c1 FROM rt1, v0, rt0 WHERE (((json_type((((x'', rt1.c1, rt0.c4)) BETWEEN ((rt0.c3, rt0.c1, rt1.c4)) AND ((v0.c2, rt1.c2, rt1.c3))))) ISNULL)) GROUP BY rt0.c1, rt1.c2, v0.c1, rt1.c4, rt1.c1;
SELECT rt0.c1, rt1.c2, v0.c1, rt1.c4, rt1.c1 FROM rt1, v0, rt0 GROUP BY rt0.c1, rt1.c2, v0.c1, rt1.c4, rt1.c1;
SELECT rt1.c0, rt1.c1, v0.c2, v0.c0, v0.c1 FROM rt1, v0 GROUP BY rt1.c0, rt1.c1, v0.c2, v0.c0, v0.c1;
SELECT rt1.c0, rt1.c1, v0.c2, v0.c0, v0.c1 FROM rt1, v0 GROUP BY rt1.c0, rt1.c1, v0.c2, v0.c0, v0.c1 HAVING SUM(TOTAL(0.484513489632898)) UNION ALL SELECT rt1.c0, rt1.c1, v0.c2, v0.c0, v0.c1 FROM rt1, v0 GROUP BY rt1.c0, rt1.c1, v0.c2, v0.c0, v0.c1 HAVING (NOT (SUM(TOTAL(0.484513489632898)))) UNION ALL SELECT ALL rt1.c0, rt1.c1, v0.c2, v0.c0, v0.c1 FROM rt1, v0 GROUP BY rt1.c0, rt1.c1, v0.c2, v0.c0, v0.c1 HAVING ((SUM(TOTAL(0.484513489632898))) ISNULL);
SELECT ALL * FROM rt1;
SELECT ALL * FROM rt1 WHERE ((((NOT (rt1.c2))) IS FALSE)) UNION ALL SELECT ALL * FROM rt1 WHERE ((NOT ((((NOT (rt1.c2))) IS FALSE)))) UNION ALL SELECT * FROM rt1 WHERE ((((((NOT (rt1.c2))) IS FALSE)) ISNULL));
SELECT ALL * FROM rt1;
SELECT DISTINCT * FROM rt0, rt1, v0;
SELECT DISTINCT * FROM rt0, rt1, v0 WHERE ((- (rt1.c0 COLLATE BINARY))) UNION SELECT DISTINCT * FROM rt0, rt1, v0 WHERE ((NOT ((- (rt1.c0 COLLATE BINARY))))) UNION SELECT DISTINCT * FROM rt0, rt1, v0 WHERE ((((- (rt1.c0 COLLATE BINARY))) ISNULL));
SELECT DISTINCT * FROM rt0, rt1, v0;
SELECT ALL rt1.c2, rt1.c0 FROM rt1 GROUP BY rt1.c2, rt1.c0;
SELECT rt1.c2, rt1.c0 FROM rt1 WHERE (CASE ((((rt1.c1)AND(rt1.c0)))AND(rt1.c3))  WHEN (rt1.c2 IN ()) THEN ((rt1.c3) NOT NULL) WHEN rt1.c4 COLLATE BINARY THEN QUOTE(rt1.c0) WHEN 1948889351 COLLATE BINARY THEN ((((((((rt1.c2)OR(rt1.c2)))AND(rt1.c1)))AND(rt1.c1)))OR(rt1.c2)) ELSE ((((((((rt1.c0)AND(1.20370733E9)))AND(rt1.c4)))AND(rt1.c2)))OR(rt1.c1)) END) GROUP BY rt1.c2, rt1.c0 UNION SELECT ALL rt1.c2, rt1.c0 FROM rt1 WHERE ((NOT (CASE ((((rt1.c1)AND(rt1.c0)))AND(rt1.c3))  WHEN (rt1.c2 IN ()) THEN ((rt1.c3) NOT NULL) WHEN rt1.c4 COLLATE BINARY THEN QUOTE(rt1.c0) WHEN 1948889351 COLLATE BINARY THEN ((((((((rt1.c2)OR(rt1.c2)))AND(rt1.c1)))AND(rt1.c1)))OR(rt1.c2)) ELSE ((((((((rt1.c0)AND(1.20370733E9)))AND(rt1.c4)))AND(rt1.c2)))OR(rt1.c1)) END))) GROUP BY rt1.c2, rt1.c0 UNION SELECT rt1.c2, rt1.c0 FROM rt1 WHERE (((CASE ((((rt1.c1)AND(rt1.c0)))AND(rt1.c3))  WHEN (rt1.c2 IN ()) THEN ((rt1.c3) NOT NULL) WHEN rt1.c4 COLLATE BINARY THEN QUOTE(rt1.c0) WHEN 1948889351 COLLATE BINARY THEN ((((((((rt1.c2)OR(rt1.c2)))AND(rt1.c1)))AND(rt1.c1)))OR(rt1.c2)) ELSE ((((((((rt1.c0)AND(1.20370733E9)))AND(rt1.c4)))AND(rt1.c2)))OR(rt1.c1)) END) ISNULL)) GROUP BY rt1.c2, rt1.c0;
SELECT ALL rt1.c2, rt1.c0 FROM rt1 GROUP BY rt1.c2, rt1.c0;
SELECT ALL rt1.c0 FROM rt0, rt1 GROUP BY rt1.c0;
SELECT ALL rt1.c0 FROM rt0, rt1 NOT INDEXED GROUP BY rt1.c0 HAVING SUM(SUM(AVG(rt0.c3))) UNION ALL SELECT ALL rt1.c0 FROM rt0, rt1 GROUP BY rt1.c0 HAVING (NOT (SUM(SUM(AVG(rt0.c3))))) UNION ALL SELECT ALL rt1.c0 FROM rt0, rt1 GROUP BY rt1.c0 HAVING ((SUM(SUM(AVG(rt0.c3)))) ISNULL);
SELECT rt0.c0, rt1.c0, rt0.c2, rt1.c3, rt0.c3, rt1.c2, rt1.c1, rt1.c4 FROM rt1, rt0;
SELECT ALL rt0.c0, rt1.c0, rt0.c2, rt1.c3, rt0.c3, rt1.c2, rt1.c1, rt1.c4 FROM rt1, rt0 WHERE (CASE WHEN (((rt1.c2, rt0.c1, rt0.c2)) BETWEEN ((rt0.c1, x'1eb1', rt1.c2)) AND ((rt0.c0, '0.794771796956855', rt0.c3))) THEN MAX(rt1.c3, NULL) ELSE x'5304' END) UNION ALL SELECT rt0.c0, rt1.c0, rt0.c2, rt1.c3, rt0.c3, rt1.c2, rt1.c1, rt1.c4 FROM rt1, rt0 WHERE ((NOT (CASE WHEN (((rt1.c2, rt0.c1, rt0.c2)) BETWEEN ((rt0.c1, x'1eb1', rt1.c2)) AND ((rt0.c0, '0.794771796956855', rt0.c3))) THEN MAX(rt1.c3, NULL) ELSE x'5304' END))) UNION ALL SELECT rt0.c0, rt1.c0, rt0.c2, rt1.c3, rt0.c3, rt1.c2, rt1.c1, rt1.c4 FROM rt1, rt0 WHERE (((CASE WHEN (((rt1.c2, rt0.c1, rt0.c2)) BETWEEN ((rt0.c1, x'1eb1', rt1.c2)) AND ((rt0.c0, '0.794771796956855', rt0.c3))) THEN MAX(rt1.c3, NULL) ELSE x'5304' END) ISNULL));
SELECT rt0.c0, rt1.c0, rt0.c2, rt1.c3, rt0.c3, rt1.c2, rt1.c1, rt1.c4 FROM rt1, rt0;
SELECT DISTINCT rt0.c1 FROM rt0, v0;
SELECT DISTINCT rt0.c1 FROM rt0, v0 WHERE (CASE WHEN rt0.c3 COLLATE NOCASE THEN ((rt0.c4)>(rt0.c1)) WHEN ((v0.c1)IS(v0.c1)) THEN ((v0.c1)<(rt0.c2)) WHEN CASE WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c0 WHEN v0.c0 THEN v0.c1 END THEN (v0.c1 IN ()) WHEN ((rt0.c1)/(NULL)) THEN ((v0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1)) WHEN rt0.c1 THEN (((rt0.c0, v0.c0, rt0.c2))<((v0.c2, rt0.c3, rt0.c0))) ELSE v0.c2 END) UNION SELECT DISTINCT rt0.c1 FROM rt0, v0 WHERE ((NOT (CASE WHEN rt0.c3 COLLATE NOCASE THEN ((rt0.c4)>(rt0.c1)) WHEN ((v0.c1)IS(v0.c1)) THEN ((v0.c1)<(rt0.c2)) WHEN CASE WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c0 WHEN v0.c0 THEN v0.c1 END THEN (v0.c1 IN ()) WHEN ((rt0.c1)/(NULL)) THEN ((v0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1)) WHEN rt0.c1 THEN (((rt0.c0, v0.c0, rt0.c2))<((v0.c2, rt0.c3, rt0.c0))) ELSE v0.c2 END))) UNION SELECT DISTINCT rt0.c1 FROM rt0, v0 WHERE (((CASE WHEN rt0.c3 COLLATE NOCASE THEN ((rt0.c4)>(rt0.c1)) WHEN ((v0.c1)IS(v0.c1)) THEN ((v0.c1)<(rt0.c2)) WHEN CASE WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c0 WHEN v0.c0 THEN v0.c1 END THEN (v0.c1 IN ()) WHEN ((rt0.c1)/(NULL)) THEN ((v0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1)) WHEN rt0.c1 THEN (((rt0.c0, v0.c0, rt0.c2))<((v0.c2, rt0.c3, rt0.c0))) ELSE v0.c2 END) ISNULL));
SELECT DISTINCT rt0.c1 FROM rt0, v0;
SELECT ALL rt0.c4, rt0.c1, rt0.c2 FROM rt1 NATURAL JOIN rt0 GROUP BY rt0.c4, rt0.c1, rt0.c2;
SELECT ALL rt0.c4, rt0.c1, rt0.c2 FROM rt1 NATURAL JOIN rt0 WHERE (((((rt1.c0) NOT NULL))IS(((rt1.c4)*(NULL))))) GROUP BY rt0.c4, rt0.c1, rt0.c2 UNION SELECT ALL rt0.c4, rt0.c1, rt0.c2 FROM rt1 NATURAL JOIN rt0 WHERE ((NOT (((((rt1.c0) NOT NULL))IS(((rt1.c4)*(NULL))))))) GROUP BY rt0.c4, rt0.c1, rt0.c2 UNION SELECT ALL rt0.c4, rt0.c1, rt0.c2 FROM rt1 NATURAL JOIN rt0 WHERE (((((((rt1.c0) NOT NULL))IS(((rt1.c4)*(NULL))))) ISNULL)) GROUP BY rt0.c4, rt0.c1, rt0.c2;
SELECT ALL rt0.c4, rt0.c1, rt0.c2 FROM rt1 NATURAL JOIN rt0 GROUP BY rt0.c4, rt0.c1, rt0.c2;
SELECT ALL v0.c1, rt1.c0, v0.c2, rt0.c3, rt1.c3, rt1.c4 FROM rt1, v0, rt0 GROUP BY v0.c1, rt1.c0, v0.c2, rt0.c3, rt1.c3, rt1.c4;
SELECT v0.c1, rt1.c0, v0.c2, rt0.c3, rt1.c3, rt1.c4 FROM rt1, v0, rt0 GROUP BY v0.c1, rt1.c0, v0.c2, rt0.c3, rt1.c3, rt1.c4 HAVING rt0.c3 UNION ALL SELECT ALL v0.c1, rt1.c0, v0.c2, rt0.c3, rt1.c3, rt1.c4 FROM rt1, v0, rt0 GROUP BY v0.c1, rt1.c0, v0.c2, rt0.c3, rt1.c3, rt1.c4 HAVING (NOT (rt0.c3)) UNION ALL SELECT ALL v0.c1, rt1.c0, v0.c2, rt0.c3, rt1.c3, rt1.c4 FROM rt1, v0, rt0 GROUP BY v0.c1, rt1.c0, v0.c2, rt0.c3, rt1.c3, rt1.c4 HAVING ((rt0.c3) ISNULL);
SELECT ALL v0.c1, rt1.c0, v0.c2, rt0.c3, rt1.c3, rt1.c4 FROM rt1, v0, rt0 GROUP BY v0.c1, rt1.c0, v0.c2, rt0.c3, rt1.c3, rt1.c4;
SELECT v0.c1, rt1.c0, v0.c2, rt0.c3, rt1.c3, rt1.c4 FROM rt1, v0, rt0 GROUP BY v0.c1, rt1.c0, v0.c2, rt0.c3, rt1.c3, rt1.c4 HAVING rt0.c3 UNION ALL SELECT ALL v0.c1, rt1.c0, v0.c2, rt0.c3, rt1.c3, rt1.c4 FROM rt1, v0, rt0 GROUP BY v0.c1, rt1.c0, v0.c2, rt0.c3, rt1.c3, rt1.c4 HAVING (NOT (rt0.c3)) UNION ALL SELECT ALL v0.c1, rt1.c0, v0.c2, rt0.c3, rt1.c3, rt1.c4 FROM rt1, v0, rt0 GROUP BY v0.c1, rt1.c0, v0.c2, rt0.c3, rt1.c3, rt1.c4 HAVING ((rt0.c3) ISNULL);
SELECT ALL v0.c1, rt1.c0, v0.c2, rt0.c3, rt1.c3, rt1.c4 FROM rt1, v0, rt0 GROUP BY v0.c1, rt1.c0, v0.c2, rt0.c3, rt1.c3, rt1.c4;
SELECT v0.c2, rt1.c1, rt0.c4, rt1.c0, v0.c0, rt0.c0, rt1.c2, rt1.c3, rt0.c3 FROM rt1, rt0, v0;
SELECT ALL v0.c2, rt1.c1, rt0.c4, rt1.c0, v0.c0, rt0.c0, rt1.c2, rt1.c3, rt0.c3 FROM rt1, rt0, v0 WHERE ((((((((v0.c1, v0.c0, v0.c0))>=((rt1.c3, v0.c1, v0.c2))))AND(0.9026121893060303)))AND((~ (rt1.c2))))) UNION ALL SELECT v0.c2, rt1.c1, rt0.c4, rt1.c0, v0.c0, rt0.c0, rt1.c2, rt1.c3, rt0.c3 FROM rt1, rt0, v0 WHERE ((NOT ((((((((v0.c1, v0.c0, v0.c0))>=((rt1.c3, v0.c1, v0.c2))))AND(0.9026121893060303)))AND((~ (rt1.c2))))))) UNION ALL SELECT ALL v0.c2, rt1.c1, rt0.c4, rt1.c0, v0.c0, rt0.c0, rt1.c2, rt1.c3, rt0.c3 FROM rt1, rt0, v0 WHERE ((((((((((v0.c1, v0.c0, v0.c0))>=((rt1.c3, v0.c1, v0.c2))))AND(0.9026121893060303)))AND((~ (rt1.c2))))) ISNULL));
SELECT v0.c2, rt1.c1, rt0.c4, rt1.c0, v0.c0, rt0.c0, rt1.c2, rt1.c3, rt0.c3 FROM rt1, rt0, v0;
SELECT DISTINCT rt1.c3, v0.c1, v0.c0, rt1.c0, rt1.c4, rt1.c2 FROM rt1, v0;
SELECT DISTINCT rt1.c3, v0.c1, v0.c0, rt1.c0, rt1.c4, rt1.c2 FROM rt1, v0 WHERE (((((rt1.c4)OR(v0.c0)))AND(CASE WHEN rt1.c3 THEN 0.335443009652311 ELSE rt1.c2 END))) UNION SELECT DISTINCT rt1.c3, v0.c1, v0.c0, rt1.c0, rt1.c4, rt1.c2 FROM rt1, v0 WHERE ((NOT (((((rt1.c4)OR(v0.c0)))AND(CASE WHEN rt1.c3 THEN 0.335443009652311 ELSE rt1.c2 END))))) UNION SELECT DISTINCT rt1.c3, v0.c1, v0.c0, rt1.c0, rt1.c4, rt1.c2 FROM rt1, v0 WHERE (((((((rt1.c4)OR(v0.c0)))AND(CASE WHEN rt1.c3 THEN 0.335443009652311 ELSE rt1.c2 END))) ISNULL));
SELECT DISTINCT rt1.c3, v0.c1, v0.c0, rt1.c0, rt1.c4, rt1.c2 FROM rt1, v0;
SELECT ALL rt0.c4, rt1.c3, rt0.c1, rt1.c1, rt0.c2, rt1.c4 FROM rt1 CROSS JOIN rt0 ON ((((((((((rt1.c4)AND(x'')))OR(rt1.c2)))OR(rt0.c3)))OR(rt1.c1)))>>((((rt0.c1))<((rt1.c2))))) GROUP BY rt0.c4, rt1.c3, rt0.c1, rt1.c1, rt0.c2, rt1.c4;
SELECT ALL rt0.c4, rt1.c3, rt0.c1, rt1.c1, rt0.c2, rt1.c4 FROM rt1 CROSS JOIN rt0 ON ((((((((((rt1.c4)AND(x'')))OR(rt1.c2)))OR(rt0.c3)))OR(rt1.c1)))>>((((rt0.c1))<((rt1.c2))))) WHERE (((((rt0.c2)IS NOT(x'')))IS NOT(((rt0.c2) ISNULL)))) GROUP BY rt0.c4, rt1.c3, rt0.c1, rt1.c1, rt0.c2, rt1.c4 UNION SELECT rt0.c4, rt1.c3, rt0.c1, rt1.c1, rt0.c2, rt1.c4 FROM rt1 CROSS JOIN rt0 ON ((((((((((rt1.c4)AND(x'')))OR(rt1.c2)))OR(rt0.c3)))OR(rt1.c1)))>>((((rt0.c1))<((rt1.c2))))) WHERE ((NOT (((((rt0.c2)IS NOT(x'')))IS NOT(((rt0.c2) ISNULL)))))) GROUP BY rt0.c4, rt1.c3, rt0.c1, rt1.c1, rt0.c2, rt1.c4 UNION SELECT rt0.c4, rt1.c3, rt0.c1, rt1.c1, rt0.c2, rt1.c4 FROM rt1 CROSS JOIN rt0 ON ((((((((((rt1.c4)AND(x'')))OR(rt1.c2)))OR(rt0.c3)))OR(rt1.c1)))>>((((rt0.c1))<((rt1.c2))))) WHERE (((((((rt0.c2)IS NOT(x'')))IS NOT(((rt0.c2) ISNULL)))) ISNULL)) GROUP BY rt0.c4, rt1.c3, rt0.c1, rt1.c1, rt0.c2, rt1.c4;
SELECT ALL rt0.c4, rt1.c3, rt0.c1, rt1.c1, rt0.c2, rt1.c4 FROM rt1 CROSS JOIN rt0 ON ((((((((((rt1.c4)AND(x'')))OR(rt1.c2)))OR(rt0.c3)))OR(rt1.c1)))>>((((rt0.c1))<((rt1.c2))))) GROUP BY rt0.c4, rt1.c3, rt0.c1, rt1.c1, rt0.c2, rt1.c4;
SELECT ALL rt0.c4, rt0.c2, rt1.c4, rt0.c3, v0.c2, rt0.c1, rt0.c0, v0.c1, v0.c0, rt1.c2 FROM rt1 LEFT OUTER JOIN rt0 ON (((PRINTF(v0.c1), UPPER(v0.c2), json_insert(rt1.c2, rt0.c4, rt0.c4)))>=((((rt0.c4) NOT BETWEEN (v0.c1) AND ('')), LIKE(v0.c2, x'', '0'), (+ (''))))) RIGHT OUTER JOIN v0 ON rt1.c1 GROUP BY rt0.c4, rt0.c2, rt1.c4, rt0.c3, v0.c2, rt0.c1, rt0.c0, v0.c1, v0.c0, rt1.c2;
SELECT MIN(692930409 COLLATE NOCASE) FROM rt1, rt0;
SELECT v0.c0, v0.c1, v0.c2 FROM v0;
SELECT v0.c0, v0.c1, v0.c2 FROM v0 WHERE ((((((v0.c0))=((v0.c1)))) IS FALSE)) UNION ALL SELECT ALL v0.c0, v0.c1, v0.c2 FROM v0 WHERE ((NOT ((((((v0.c0))==((v0.c1)))) IS FALSE)))) UNION ALL SELECT ALL v0.c0, v0.c1, v0.c2 FROM v0 WHERE ((((((((v0.c0))=((v0.c1)))) IS FALSE)) ISNULL));
SELECT v0.c0, v0.c1, v0.c2 FROM v0;
SELECT DISTINCT * FROM rt1, rt0, v0;
SELECT DISTINCT * FROM rt1, rt0, v0 WHERE (rt1.c3) UNION SELECT DISTINCT * FROM rt1, rt0, v0 WHERE ((NOT (rt1.c3))) UNION SELECT DISTINCT * FROM rt1, rt0, v0 WHERE (((rt1.c3) ISNULL));
SELECT DISTINCT * FROM rt1, rt0, v0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0, rt0.c4, rt1.c0, rt1.c4, rt1.c1, rt0.c3, rt1.c2, rt1.c3 FROM rt0, rt1 GROUP BY rt0.c1, rt0.c2, rt0.c0, rt0.c4, rt1.c0, rt1.c4, rt1.c1, rt0.c3, rt1.c2, rt1.c3;
SELECT rt0.c1, rt0.c2, rt0.c0, rt0.c4, rt1.c0, rt1.c4, rt1.c1, rt0.c3, rt1.c2, rt1.c3 FROM rt0, rt1 WHERE (CAST(((rt0.c0) IS FALSE) AS INTEGER)) GROUP BY rt0.c1, rt0.c2, rt0.c0, rt0.c4, rt1.c0, rt1.c4, rt1.c1, rt0.c3, rt1.c2, rt1.c3 UNION SELECT ALL rt0.c1, rt0.c2, rt0.c0, rt0.c4, rt1.c0, rt1.c4, rt1.c1, rt0.c3, rt1.c2, rt1.c3 FROM rt0, rt1 WHERE ((NOT (CAST(((rt0.c0) IS FALSE) AS INTEGER)))) GROUP BY rt0.c1, rt0.c2, rt0.c0, rt0.c4, rt1.c0, rt1.c4, rt1.c1, rt0.c3, rt1.c2, rt1.c3 UNION SELECT ALL rt0.c1, rt0.c2, rt0.c0, rt0.c4, rt1.c0, rt1.c4, rt1.c1, rt0.c3, rt1.c2, rt1.c3 FROM rt0, rt1 WHERE (((CAST(((rt0.c0) IS FALSE) AS INTEGER)) ISNULL)) GROUP BY rt0.c1, rt0.c2, rt0.c0, rt0.c4, rt1.c0, rt1.c4, rt1.c1, rt0.c3, rt1.c2, rt1.c3;
SELECT ALL rt0.c1, rt0.c2, rt0.c0, rt0.c4, rt1.c0, rt1.c4, rt1.c1, rt0.c3, rt1.c2, rt1.c3 FROM rt0, rt1 GROUP BY rt0.c1, rt0.c2, rt0.c0, rt0.c4, rt1.c0, rt1.c4, rt1.c1, rt0.c3, rt1.c2, rt1.c3;
SELECT rt1.c1, rt1.c4 FROM rt1 GROUP BY rt1.c1, rt1.c4;
SELECT ALL rt1.c1, rt1.c4 FROM rt1 GROUP BY rt1.c1, rt1.c4 HAVING (((TOTAL(rt1.c4), AVG(MIN(rt1.c0)), AVG(rt1.c1))) NOT BETWEEN (((((rt1.c3, COUNT(*), SUM(COUNT(GROUP_CONCAT(COUNT(AVG(COUNT(TOTAL(AVG(MAX(MIN(COUNT(*)))))))))))))<((SUM(COUNT(*)), rt1.c4, GROUP_CONCAT(rt1.c0)))), rt1.c1, MAX(rt1.c4))) AND ((((((MAX(rt1.c2))OR(rt1.c4)))AND(rt1.c2)), ((rt1.c3) BETWEEN (TOTAL(COUNT(MAX(COUNT(*))))) AND (MIN(rt1.c2))), MIN(SUM(COUNT(*)))))) UNION ALL SELECT rt1.c1, rt1.c4 FROM rt1 GROUP BY rt1.c1, rt1.c4 HAVING (NOT ((((TOTAL(rt1.c4), AVG(MIN(rt1.c0)), AVG(rt1.c1))) NOT BETWEEN (((((rt1.c3, COUNT(*), SUM(COUNT(GROUP_CONCAT(COUNT(AVG(COUNT(TOTAL(AVG(MAX(MIN(COUNT(*)))))))))))))<((SUM(COUNT(*)), rt1.c4, GROUP_CONCAT(rt1.c0)))), rt1.c1, MAX(rt1.c4))) AND ((((((MAX(rt1.c2))OR(rt1.c4)))AND(rt1.c2)), ((rt1.c3) BETWEEN (TOTAL(COUNT(MAX(COUNT(*))))) AND (MIN(rt1.c2))), MIN(SUM(COUNT(*)))))))) UNION ALL SELECT ALL rt1.c1, rt1.c4 FROM rt1 GROUP BY rt1.c1, rt1.c4 HAVING (((((TOTAL(rt1.c4), AVG(MIN(rt1.c0)), AVG(rt1.c1))) NOT BETWEEN (((((rt1.c3, COUNT(*), SUM(COUNT(GROUP_CONCAT(COUNT(AVG(COUNT(TOTAL(AVG(MAX(MIN(COUNT(*)))))))))))))<((SUM(COUNT(*)), rt1.c4, GROUP_CONCAT(rt1.c0)))), rt1.c1, MAX(rt1.c4))) AND ((((((MAX(rt1.c2))OR(rt1.c4)))AND(rt1.c2)), ((rt1.c3) BETWEEN (TOTAL(COUNT(MAX(COUNT(*))))) AND (MIN(rt1.c2))), MIN(SUM(COUNT(*))))))) ISNULL);
SELECT ALL SUM(((NULL) NOT BETWEEN (rt1.c0 COLLATE NOCASE) AND ((+ (rt1.c4))))) FROM v0, rt0, rt1 ORDER BY 0.11825352487948482 ASC  NULLS LAST;
SELECT * FROM v0;
SELECT * FROM v0 WHERE (NULL) UNION ALL SELECT * FROM v0 WHERE ((NOT (NULL))) UNION ALL SELECT ALL * FROM v0 WHERE (((NULL) ISNULL));
SELECT * FROM v0;
SELECT DISTINCT v0.c2, v0.c1, rt1.c1 FROM v0 CROSS JOIN rt1 ON CAST((rt1.c1 IN ()) AS INTEGER);
SELECT DISTINCT v0.c2, v0.c1, rt1.c1 FROM v0 CROSS JOIN rt1 ON CAST((rt1.c1 IN ()) AS INTEGER) WHERE (rt1.c4) UNION SELECT DISTINCT v0.c2, v0.c1, rt1.c1 FROM v0 CROSS JOIN rt1 ON CAST((rt1.c1 IN ()) AS INTEGER) WHERE ((NOT (rt1.c4))) UNION SELECT DISTINCT v0.c2, v0.c1, rt1.c1 FROM v0 CROSS JOIN rt1 ON CAST((rt1.c1 IN ()) AS INTEGER) WHERE (((rt1.c4) ISNULL));
SELECT DISTINCT v0.c2, v0.c1, rt1.c1 FROM v0 CROSS JOIN rt1 ON CAST((rt1.c1 IN ()) AS INTEGER);
SELECT v0.c1, v0.c0, rt0.c0, rt0.c2, rt1.c4, rt1.c0, rt1.c1, rt1.c3, rt1.c2, rt0.c1 FROM rt1, v0, rt0 GROUP BY v0.c1, v0.c0, rt0.c0, rt0.c2, rt1.c4, rt1.c0, rt1.c1, rt1.c3, rt1.c2, rt0.c1;
SELECT v0.c1, v0.c0, rt0.c0, rt0.c2, rt1.c4, rt1.c0, rt1.c1, rt1.c3, rt1.c2, rt0.c1 FROM rt1, v0, rt0 WHERE (v0.c0) GROUP BY v0.c1, v0.c0, rt0.c0, rt0.c2, rt1.c4, rt1.c0, rt1.c1, rt1.c3, rt1.c2, rt0.c1 UNION SELECT v0.c1, v0.c0, rt0.c0, rt0.c2, rt1.c4, rt1.c0, rt1.c1, rt1.c3, rt1.c2, rt0.c1 FROM rt1, v0, rt0 WHERE ((NOT (v0.c0))) GROUP BY v0.c1, v0.c0, rt0.c0, rt0.c2, rt1.c4, rt1.c0, rt1.c1, rt1.c3, rt1.c2, rt0.c1 UNION SELECT v0.c1, v0.c0, rt0.c0, rt0.c2, rt1.c4, rt1.c0, rt1.c1, rt1.c3, rt1.c2, rt0.c1 FROM rt1, v0, rt0 WHERE (((v0.c0) ISNULL)) GROUP BY v0.c1, v0.c0, rt0.c0, rt0.c2, rt1.c4, rt1.c0, rt1.c1, rt1.c3, rt1.c2, rt0.c1;
SELECT v0.c1, v0.c0, rt0.c0, rt0.c2, rt1.c4, rt1.c0, rt1.c1, rt1.c3, rt1.c2, rt0.c1 FROM rt1, v0, rt0 GROUP BY v0.c1, v0.c0, rt0.c0, rt0.c2, rt1.c4, rt1.c0, rt1.c1, rt1.c3, rt1.c2, rt0.c1;
SELECT rt0.c0, rt0.c2, rt0.c1, v0.c1, v0.c2, v0.c0, rt0.c4, rt0.c3 FROM v0, rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1, v0.c1, v0.c2, v0.c0, rt0.c4, rt0.c3;
SELECT rt0.c0, rt0.c2, rt0.c1, v0.c1, v0.c2, v0.c0, rt0.c4, rt0.c3 FROM v0, rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1, v0.c1, v0.c2, v0.c0, rt0.c4, rt0.c3 HAVING GROUP_CONCAT((~ (rt0.c4))) UNION ALL SELECT rt0.c0, rt0.c2, rt0.c1, v0.c1, v0.c2, v0.c0, rt0.c4, rt0.c3 FROM v0, rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1, v0.c1, v0.c2, v0.c0, rt0.c4, rt0.c3 HAVING (NOT (GROUP_CONCAT((~ (rt0.c4))))) UNION ALL SELECT ALL rt0.c0, rt0.c2, rt0.c1, v0.c1, v0.c2, v0.c0, rt0.c4, rt0.c3 FROM v0, rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1, v0.c1, v0.c2, v0.c0, rt0.c4, rt0.c3 HAVING ((GROUP_CONCAT((~ (rt0.c4)))) ISNULL);
SELECT rt0.c0, rt0.c2, rt0.c1, v0.c1, v0.c2, v0.c0, rt0.c4, rt0.c3 FROM v0, rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1, v0.c1, v0.c2, v0.c0, rt0.c4, rt0.c3;
SELECT rt0.c0, rt0.c2, rt0.c1, v0.c1, v0.c2, v0.c0, rt0.c4, rt0.c3 FROM v0, rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1, v0.c1, v0.c2, v0.c0, rt0.c4, rt0.c3 HAVING GROUP_CONCAT((~ (rt0.c4))) UNION ALL SELECT rt0.c0, rt0.c2, rt0.c1, v0.c1, v0.c2, v0.c0, rt0.c4, rt0.c3 FROM v0, rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1, v0.c1, v0.c2, v0.c0, rt0.c4, rt0.c3 HAVING (NOT (GROUP_CONCAT((~ (rt0.c4))))) UNION ALL SELECT ALL rt0.c0, rt0.c2, rt0.c1, v0.c1, v0.c2, v0.c0, rt0.c4, rt0.c3 FROM v0, rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1, v0.c1, v0.c2, v0.c0, rt0.c4, rt0.c3 HAVING ((GROUP_CONCAT((~ (rt0.c4)))) ISNULL);
SELECT rt0.c0, rt0.c2, rt0.c1, v0.c1, v0.c2, v0.c0, rt0.c4, rt0.c3 FROM v0, rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1, v0.c1, v0.c2, v0.c0, rt0.c4, rt0.c3;
SELECT rt1.c0, rt1.c4, rt1.c1, rt1.c2, rt1.c3 FROM rt1;
SELECT rt1.c0, rt1.c4, rt1.c1, rt1.c2, rt1.c3 FROM rt1 WHERE (rt1.c2) UNION ALL SELECT ALL rt1.c0, rt1.c4, rt1.c1, rt1.c2, rt1.c3 FROM rt1 WHERE ((NOT (rt1.c2))) UNION ALL SELECT ALL rt1.c0, rt1.c4, rt1.c1, rt1.c2, rt1.c3 FROM rt1 WHERE (((rt1.c2) ISNULL));
SELECT rt1.c0, rt1.c4, rt1.c1, rt1.c2, rt1.c3 FROM rt1;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (((CASE v0.c0  WHEN 'Z8' THEN v0.c2 WHEN v0.c2 THEN v0.c1 WHEN v0.c1 THEN v0.c2 END)<=(v0.c1))) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (((CASE v0.c0  WHEN 'Z8' THEN v0.c2 WHEN v0.c2 THEN v0.c1 WHEN v0.c1 THEN v0.c2 END)<=(v0.c1))))) UNION SELECT DISTINCT * FROM v0 WHERE (((((CASE v0.c0  WHEN 'Z8' THEN v0.c2 WHEN v0.c2 THEN v0.c1 WHEN v0.c1 THEN v0.c2 END)<=(v0.c1))) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT ALL rt1.c2, rt1.c1, v0.c2 FROM v0 FULL OUTER JOIN rt0 ON ((HEX(rt0.c3))||(((rt0.c2) NOT BETWEEN (rt1.c3) AND (rt1.c3)))) FULL OUTER JOIN rt1 ON (CAST(rt0.c2 AS INTEGER) IN ()) GROUP BY rt1.c2, rt1.c1, v0.c2;
SELECT rt1.c0, v0.c0, rt1.c2, v0.c1, rt1.c3, rt1.c4, v0.c2 FROM v0 LEFT OUTER JOIN rt1 ON ((- (v0.c0)) IN ()) GROUP BY rt1.c0, v0.c0, rt1.c2, v0.c1, rt1.c3, rt1.c4, v0.c2;
SELECT rt1.c0, v0.c0, rt1.c2, v0.c1, rt1.c3, rt1.c4, v0.c2 FROM v0 LEFT OUTER JOIN rt1 ON ((- (v0.c0)) IN ()) GROUP BY rt1.c0, v0.c0, rt1.c2, v0.c1, rt1.c3, rt1.c4, v0.c2 HAVING GROUP_CONCAT(SUM(v0.c1)) UNION ALL SELECT ALL rt1.c0, v0.c0, rt1.c2, v0.c1, rt1.c3, rt1.c4, v0.c2 FROM v0 LEFT OUTER JOIN rt1 ON ((- (v0.c0)) IN ()) GROUP BY rt1.c0, v0.c0, rt1.c2, v0.c1, rt1.c3, rt1.c4, v0.c2 HAVING (NOT (GROUP_CONCAT(SUM(v0.c1)))) UNION ALL SELECT ALL rt1.c0, v0.c0, rt1.c2, v0.c1, rt1.c3, rt1.c4, v0.c2 FROM v0 LEFT OUTER JOIN rt1 ON ((- (v0.c0)) IN ()) GROUP BY rt1.c0, v0.c0, rt1.c2, v0.c1, rt1.c3, rt1.c4, v0.c2 HAVING ((GROUP_CONCAT(SUM(v0.c1))) ISNULL);
SELECT * FROM rt1, v0, rt0;
SELECT ALL * FROM rt1, v0, rt0 WHERE ((((((((((((rt0.c2, rt0.c4, rt1.c1))<=((v0.c0, rt1.c2, v0.c2))))OR((((rt0.c4))>=((rt0.c1))))))AND((- (rt1.c3)))))OR(((rt1.c3) NOT BETWEEN (rt0.c4) AND (rt0.c3)))))OR((((rt0.c4))<>((rt0.c4)))))) UNION ALL SELECT ALL * FROM rt1, v0, rt0 WHERE ((NOT ((((((((((((rt0.c2, rt0.c4, rt1.c1))<=((v0.c0, rt1.c2, v0.c2))))OR((((rt0.c4))>=((rt0.c1))))))AND((- (rt1.c3)))))OR(((rt1.c3) NOT BETWEEN (rt0.c4) AND (rt0.c3)))))OR((((rt0.c4))!=((rt0.c4)))))))) UNION ALL SELECT * FROM rt1, v0, rt0 WHERE ((((((((((((((rt0.c2, rt0.c4, rt1.c1))<=((v0.c0, rt1.c2, v0.c2))))OR((((rt0.c4))>=((rt0.c1))))))AND((- (rt1.c3)))))OR(((rt1.c3) NOT BETWEEN (rt0.c4) AND (rt0.c3)))))OR((((rt0.c4))<>((rt0.c4)))))) ISNULL));
SELECT * FROM rt1, v0, rt0;
SELECT DISTINCT * FROM rt1, rt0, v0;
SELECT DISTINCT * FROM rt1, rt0, v0 WHERE (LOWER(DISTINCT (((rt0.c3))<>((v0.c0))))) UNION SELECT DISTINCT * FROM rt1, rt0, v0 WHERE ((NOT (LOWER(DISTINCT (((rt0.c3))<>((v0.c0))))))) UNION SELECT DISTINCT * FROM rt1, rt0, v0 WHERE (((LOWER(DISTINCT (((rt0.c3))<>((v0.c0))))) ISNULL));
SELECT DISTINCT * FROM rt1, rt0, v0;
SELECT ALL rt0.c2, rt0.c3, rt0.c4, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c3, rt0.c4, rt0.c1;
SELECT rt0.c2, rt0.c3, rt0.c4, rt0.c1 FROM rt0 WHERE (rt0.c0) GROUP BY rt0.c2, rt0.c3, rt0.c4, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c3, rt0.c4, rt0.c1 FROM rt0 WHERE ((NOT (rt0.c0))) GROUP BY rt0.c2, rt0.c3, rt0.c4, rt0.c1 UNION SELECT rt0.c2, rt0.c3, rt0.c4, rt0.c1 FROM rt0 WHERE (((rt0.c0) ISNULL)) GROUP BY rt0.c2, rt0.c3, rt0.c4, rt0.c1;
SELECT ALL rt0.c2, rt0.c3, rt0.c4, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c3, rt0.c4, rt0.c1;
SELECT ALL rt1.c2, rt1.c0, v0.c0 FROM rt1 FULL OUTER JOIN v0 ON (+ (NULL)) GROUP BY rt1.c2, rt1.c0, v0.c0;
SELECT rt1.c2, rt1.c0, v0.c0 FROM rt1 FULL OUTER JOIN v0 ON (+ (NULL)) GROUP BY rt1.c2, rt1.c0, v0.c0 HAVING TOTAL(COUNT(*)) UNION ALL SELECT rt1.c2, rt1.c0, v0.c0 FROM rt1 FULL OUTER JOIN v0 ON (+ (NULL)) GROUP BY rt1.c2, rt1.c0, v0.c0 HAVING (NOT (TOTAL(COUNT(*)))) UNION ALL SELECT ALL rt1.c2, rt1.c0, v0.c0 FROM rt1 FULL OUTER JOIN v0 ON (+ (NULL)) GROUP BY rt1.c2, rt1.c0, v0.c0 HAVING ((TOTAL(COUNT(*))) ISNULL);
SELECT ALL * FROM rt1, v0;
SELECT * FROM rt1, v0 WHERE (rt1.c1) UNION ALL SELECT * FROM rt1 NOT INDEXED, v0 WHERE ((NOT (rt1.c1))) UNION ALL SELECT ALL * FROM rt1 NOT INDEXED, v0 WHERE (((rt1.c1) ISNULL));
SELECT ALL * FROM rt1, v0;
SELECT DISTINCT rt1.c4, rt1.c1, rt1.c0, rt1.c2 FROM rt1;
SELECT DISTINCT rt1.c4, rt1.c1, rt1.c0, rt1.c2 FROM rt1 WHERE ((((((rt1.c4))<((rt1.c1)))) NOTNULL)) UNION SELECT DISTINCT rt1.c4, rt1.c1, rt1.c0, rt1.c2 FROM rt1 WHERE ((NOT ((((((rt1.c4))<((rt1.c1)))) NOTNULL)))) UNION SELECT DISTINCT rt1.c4, rt1.c1, rt1.c0, rt1.c2 FROM rt1 WHERE ((((((((rt1.c4))<((rt1.c1)))) NOTNULL)) ISNULL));
SELECT DISTINCT rt1.c4, rt1.c1, rt1.c0, rt1.c2 FROM rt1;
SELECT ALL v0.c0, rt0.c0, rt0.c3, rt0.c2 FROM v0 INNER JOIN rt0 ON (((rt0.c4)) NOT BETWEEN (((- (rt0.c1)))) AND ((((v0.c0)%(rt0.c1))))) GROUP BY v0.c0, rt0.c0, rt0.c3, rt0.c2;
SELECT v0.c0, rt0.c0, rt0.c3, rt0.c2 FROM v0 INNER JOIN rt0 ON (((rt0.c4)) NOT BETWEEN (((- (rt0.c1)))) AND ((((v0.c0)%(rt0.c1))))) WHERE ((((- (v0.c1))) NOT NULL)) GROUP BY v0.c0, rt0.c0, rt0.c3, rt0.c2 UNION SELECT ALL v0.c0, rt0.c0, rt0.c3, rt0.c2 FROM v0 INNER JOIN rt0 ON (((rt0.c4)) NOT BETWEEN (((- (rt0.c1)))) AND ((((v0.c0)%(rt0.c1))))) WHERE ((NOT ((((- (v0.c1))) NOT NULL)))) GROUP BY v0.c0, rt0.c0, rt0.c3, rt0.c2 UNION SELECT ALL v0.c0, rt0.c0, rt0.c3, rt0.c2 FROM v0 INNER JOIN rt0 ON (((rt0.c4)) NOT BETWEEN (((- (rt0.c1)))) AND ((((v0.c0)%(rt0.c1))))) WHERE ((((((- (v0.c1))) NOT NULL)) ISNULL)) GROUP BY v0.c0, rt0.c0, rt0.c3, rt0.c2;
SELECT ALL v0.c0, rt0.c0, rt0.c3, rt0.c2 FROM v0 INNER JOIN rt0 ON (((rt0.c4)) NOT BETWEEN (((- (rt0.c1)))) AND ((((v0.c0)%(rt0.c1))))) GROUP BY v0.c0, rt0.c0, rt0.c3, rt0.c2;
SELECT ALL rt0.c2, rt0.c4, v0.c0, rt0.c3, rt0.c1, v0.c2, v0.c1 FROM rt0, v0 GROUP BY rt0.c2, rt0.c4, v0.c0, rt0.c3, rt0.c1, v0.c2, v0.c1;
SELECT ALL rt0.c2, rt0.c4, v0.c0, rt0.c3, rt0.c1, v0.c2, v0.c1 FROM rt0, v0 GROUP BY rt0.c2, rt0.c4, v0.c0, rt0.c3, rt0.c1, v0.c2, v0.c1 HAVING v0.c0 UNION ALL SELECT rt0.c2, rt0.c4, v0.c0, rt0.c3, rt0.c1, v0.c2, v0.c1 FROM rt0, v0 GROUP BY rt0.c2, rt0.c4, v0.c0, rt0.c3, rt0.c1, v0.c2, v0.c1 HAVING (NOT (v0.c0)) UNION ALL SELECT ALL rt0.c2, rt0.c4, v0.c0, rt0.c3, rt0.c1, v0.c2, v0.c1 FROM rt0, v0 GROUP BY rt0.c2, rt0.c4, v0.c0, rt0.c3, rt0.c1, v0.c2, v0.c1 HAVING ((v0.c0) ISNULL);
SELECT ALL rt0.c2, rt0.c4, v0.c0, rt0.c3, rt0.c1, v0.c2, v0.c1 FROM rt0, v0 GROUP BY rt0.c2, rt0.c4, v0.c0, rt0.c3, rt0.c1, v0.c2, v0.c1;
SELECT ALL rt0.c2, rt0.c4, v0.c0, rt0.c3, rt0.c1, v0.c2, v0.c1 FROM rt0, v0 GROUP BY rt0.c2, rt0.c4, v0.c0, rt0.c3, rt0.c1, v0.c2, v0.c1 HAVING v0.c0 UNION ALL SELECT rt0.c2, rt0.c4, v0.c0, rt0.c3, rt0.c1, v0.c2, v0.c1 FROM rt0, v0 GROUP BY rt0.c2, rt0.c4, v0.c0, rt0.c3, rt0.c1, v0.c2, v0.c1 HAVING (NOT (v0.c0)) UNION ALL SELECT ALL rt0.c2, rt0.c4, v0.c0, rt0.c3, rt0.c1, v0.c2, v0.c1 FROM rt0, v0 GROUP BY rt0.c2, rt0.c4, v0.c0, rt0.c3, rt0.c1, v0.c2, v0.c1 HAVING ((v0.c0) ISNULL);
SELECT ALL rt0.c2, rt0.c4, v0.c0, rt0.c3, rt0.c1, v0.c2, v0.c1 FROM rt0, v0 GROUP BY rt0.c2, rt0.c4, v0.c0, rt0.c3, rt0.c1, v0.c2, v0.c1;
SELECT * FROM v0;
SELECT ALL * FROM v0 WHERE (0.794771796956855) UNION ALL SELECT ALL * FROM v0 WHERE ((NOT (0.794771796956855))) UNION ALL SELECT * FROM v0 WHERE (((0.794771796956855) ISNULL));
SELECT * FROM v0;
SELECT DISTINCT rt0.c1, rt0.c2, rt0.c4, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c2, rt0.c4, rt0.c0 FROM rt0 WHERE (UNLIKELY(DISTINCT ((((((((rt0.c1)OR(rt0.c2)))OR(rt0.c4)))AND(rt0.c4)))AND(rt0.c2)))) UNION SELECT DISTINCT rt0.c1, rt0.c2, rt0.c4, rt0.c0 FROM rt0 WHERE ((NOT (UNLIKELY(DISTINCT ((((((((rt0.c1)OR(rt0.c2)))OR(rt0.c4)))AND(rt0.c4)))AND(rt0.c2)))))) UNION SELECT DISTINCT rt0.c1, rt0.c2, rt0.c4, rt0.c0 FROM rt0 WHERE (((UNLIKELY(DISTINCT ((((((((rt0.c1)OR(rt0.c2)))OR(rt0.c4)))AND(rt0.c4)))AND(rt0.c2)))) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c2, rt0.c4, rt0.c0 FROM rt0;
SELECT rt0.c1, rt1.c3, rt0.c2, rt1.c0 FROM rt1, rt0 LEFT OUTER JOIN v0 ON CASE WHEN CAST(v0.c0 AS INTEGER) THEN rt1.c1 COLLATE NOCASE END GROUP BY rt0.c1, rt1.c3, rt0.c2, rt1.c0;
SELECT rt0.c1, rt1.c3, rt0.c2, rt1.c0 FROM rt1, rt0 LEFT OUTER JOIN v0 ON CASE WHEN CAST(v0.c0 AS INTEGER) THEN rt1.c1 COLLATE NOCASE END WHERE (CASE ((rt1.c2) NOT BETWEEN (v0.c1) AND (rt1.c3))  WHEN rt1.c2 COLLATE NOCASE THEN ((rt0.c1)IS(0.2010307080914132)) END) GROUP BY rt0.c1, rt1.c3, rt0.c2, rt1.c0 UNION SELECT rt0.c1, rt1.c3, rt0.c2, rt1.c0 FROM rt1, rt0 LEFT OUTER JOIN v0 ON CASE WHEN CAST(v0.c0 AS INTEGER) THEN rt1.c1 COLLATE NOCASE END WHERE ((NOT (CASE ((rt1.c2) NOT BETWEEN (v0.c1) AND (rt1.c3))  WHEN rt1.c2 COLLATE NOCASE THEN ((rt0.c1)IS(0.2010307080914132)) END))) GROUP BY rt0.c1, rt1.c3, rt0.c2, rt1.c0 UNION SELECT ALL rt0.c1, rt1.c3, rt0.c2, rt1.c0 FROM rt1, rt0 LEFT OUTER JOIN v0 ON CASE WHEN CAST(v0.c0 AS INTEGER) THEN rt1.c1 COLLATE NOCASE END WHERE (((CASE ((rt1.c2) NOT BETWEEN (v0.c1) AND (rt1.c3))  WHEN rt1.c2 COLLATE NOCASE THEN ((rt0.c1)IS(0.2010307080914132)) END) ISNULL)) GROUP BY rt0.c1, rt1.c3, rt0.c2, rt1.c0;
SELECT rt0.c1, rt1.c3, rt0.c2, rt1.c0 FROM rt1, rt0 LEFT OUTER JOIN v0 ON CASE WHEN CAST(v0.c0 AS INTEGER) THEN rt1.c1 COLLATE NOCASE END GROUP BY rt0.c1, rt1.c3, rt0.c2, rt1.c0;
SELECT ALL rt1.c3, rt1.c2, rt1.c4, rt1.c0, rt1.c1 FROM rt1 GROUP BY rt1.c3, rt1.c2, rt1.c4, rt1.c0, rt1.c1;
SELECT ALL rt1.c3, rt1.c2, rt1.c4, rt1.c0, rt1.c1 FROM rt1 GROUP BY rt1.c3, rt1.c2, rt1.c4, rt1.c0, rt1.c1 HAVING COUNT(*) UNION ALL SELECT ALL rt1.c3, rt1.c2, rt1.c4, rt1.c0, rt1.c1 FROM rt1 GROUP BY rt1.c3, rt1.c2, rt1.c4, rt1.c0, rt1.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt1.c3, rt1.c2, rt1.c4, rt1.c0, rt1.c1 FROM rt1 GROUP BY rt1.c3, rt1.c2, rt1.c4, rt1.c0, rt1.c1 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt1.c3, rt1.c2, rt1.c4, rt1.c0, rt1.c1 FROM rt1 GROUP BY rt1.c3, rt1.c2, rt1.c4, rt1.c0, rt1.c1;
SELECT ALL rt1.c3, rt1.c2, rt1.c4, rt1.c0, rt1.c1 FROM rt1 GROUP BY rt1.c3, rt1.c2, rt1.c4, rt1.c0, rt1.c1 HAVING COUNT(*) UNION ALL SELECT ALL rt1.c3, rt1.c2, rt1.c4, rt1.c0, rt1.c1 FROM rt1 GROUP BY rt1.c3, rt1.c2, rt1.c4, rt1.c0, rt1.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt1.c3, rt1.c2, rt1.c4, rt1.c0, rt1.c1 FROM rt1 GROUP BY rt1.c3, rt1.c2, rt1.c4, rt1.c0, rt1.c1 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt1.c3, rt1.c2, rt1.c4, rt1.c0, rt1.c1 FROM rt1 GROUP BY rt1.c3, rt1.c2, rt1.c4, rt1.c0, rt1.c1;
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE (((((((rt0.c0)>=(rt0.c0)))AND((((rt0.c3, rt0.c4, rt0.c3)) NOT BETWEEN ((rt0.c0, rt0.c0, '')) AND ((rt0.c2, rt0.c0, rt0.c2))))))OR(((rt0.c3)&(rt0.c0))))) UNION ALL SELECT * FROM rt0 WHERE ((NOT (((((((rt0.c0)>=(rt0.c0)))AND((((rt0.c3, rt0.c4, rt0.c3)) NOT BETWEEN ((rt0.c0, rt0.c0, '')) AND ((rt0.c2, rt0.c0, rt0.c2))))))OR(((rt0.c3)&(rt0.c0))))))) UNION ALL SELECT ALL * FROM rt0 WHERE (((((((((rt0.c0)>=(rt0.c0)))AND((((rt0.c3, rt0.c4, rt0.c3)) NOT BETWEEN ((rt0.c0, rt0.c0, '')) AND ((rt0.c2, rt0.c0, rt0.c2))))))OR(((rt0.c3)&(rt0.c0))))) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT rt1.c4, rt1.c2, rt1.c3, rt1.c0 FROM rt1;
SELECT DISTINCT rt1.c4, rt1.c2, rt1.c3, rt1.c0 FROM rt1 WHERE (CAST(((((((((((((rt1.c0)AND(x'')))OR(rt1.c4)))AND(rt1.c4)))OR(rt1.c0)))AND(rt1.c0)))AND(rt1.c3)) AS BLOB)) UNION SELECT DISTINCT rt1.c4, rt1.c2, rt1.c3, rt1.c0 FROM rt1 WHERE ((NOT (CAST(((((((((((((rt1.c0)AND(x'')))OR(rt1.c4)))AND(rt1.c4)))OR(rt1.c0)))AND(rt1.c0)))AND(rt1.c3)) AS BLOB)))) UNION SELECT DISTINCT rt1.c4, rt1.c2, rt1.c3, rt1.c0 FROM rt1 WHERE (((CAST(((((((((((((rt1.c0)AND(x'')))OR(rt1.c4)))AND(rt1.c4)))OR(rt1.c0)))AND(rt1.c0)))AND(rt1.c3)) AS BLOB)) ISNULL));
SELECT DISTINCT rt1.c4, rt1.c2, rt1.c3, rt1.c0 FROM rt1;
SELECT ALL rt0.c4, rt0.c3, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c4, rt0.c3, rt0.c0, rt0.c2;
SELECT ALL rt0.c4, rt0.c3, rt0.c0, rt0.c2 FROM rt0 WHERE (x'') GROUP BY rt0.c4, rt0.c3, rt0.c0, rt0.c2 UNION SELECT rt0.c4, rt0.c3, rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (x''))) GROUP BY rt0.c4, rt0.c3, rt0.c0, rt0.c2 UNION SELECT rt0.c4, rt0.c3, rt0.c0, rt0.c2 FROM rt0 WHERE (((x'') ISNULL)) GROUP BY rt0.c4, rt0.c3, rt0.c0, rt0.c2;
SELECT ALL rt0.c4, rt0.c3, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c4, rt0.c3, rt0.c0, rt0.c2;
SELECT rt0.c0, rt1.c0 FROM rt1, rt0 GROUP BY rt0.c0, rt1.c0;
SELECT rt0.c0, rt1.c0 FROM rt1, rt0 GROUP BY rt0.c0, rt1.c0 HAVING TOTAL(GROUP_CONCAT(MAX(COUNT(*)))) UNION ALL SELECT ALL rt0.c0, rt1.c0 FROM rt1, rt0 GROUP BY rt0.c0, rt1.c0 HAVING (NOT (TOTAL(GROUP_CONCAT(MAX(COUNT(*)))))) UNION ALL SELECT rt0.c0, rt1.c0 FROM rt1, rt0 GROUP BY rt0.c0, rt1.c0 HAVING ((TOTAL(GROUP_CONCAT(MAX(COUNT(*))))) ISNULL);
SELECT * FROM rt1, v0, rt0;
SELECT ALL * FROM rt1, v0, rt0 WHERE ((((v0.c1 COLLATE NOCASE))>((((((((((((((rt1.c2)AND(v0.c2)))OR(rt0.c2)))AND(v0.c1)))AND(rt0.c3)))AND(rt0.c2)))AND(rt0.c2)))))) UNION ALL SELECT ALL * FROM rt1, v0, rt0 WHERE ((NOT ((((v0.c1 COLLATE NOCASE))>((((((((((((((rt1.c2)AND(v0.c2)))OR(rt0.c2)))AND(v0.c1)))AND(rt0.c3)))AND(rt0.c2)))AND(rt0.c2)))))))) UNION ALL SELECT ALL * FROM rt1, v0, rt0 WHERE ((((((v0.c1 COLLATE NOCASE))>((((((((((((((rt1.c2)AND(v0.c2)))OR(rt0.c2)))AND(v0.c1)))AND(rt0.c3)))AND(rt0.c2)))AND(rt0.c2)))))) ISNULL));
SELECT * FROM rt1, v0, rt0;
SELECT DISTINCT * FROM rt1;
SELECT DISTINCT * FROM rt1 WHERE (((CAST(rt1.c0 AS BLOB)) ISNULL)) UNION SELECT DISTINCT * FROM rt1 WHERE ((NOT (((CAST(rt1.c0 AS BLOB)) ISNULL)))) UNION SELECT DISTINCT * FROM rt1 WHERE (((((CAST(rt1.c0 AS BLOB)) ISNULL)) ISNULL));
SELECT DISTINCT * FROM rt1;
SELECT ALL rt1.c1, rt1.c3, rt1.c2 FROM rt1 GROUP BY rt1.c1, rt1.c3, rt1.c2;
SELECT rt1.c1, rt1.c3, rt1.c2 FROM rt1 WHERE ((((((rt1.c0)OR(rt1.c2)))AND(rt1.c2)) IN (NULL))) GROUP BY rt1.c1, rt1.c3, rt1.c2 UNION SELECT ALL rt1.c1, rt1.c3, rt1.c2 FROM rt1 WHERE ((NOT ((((((rt1.c0)OR(rt1.c2)))AND(rt1.c2)) IN (NULL))))) GROUP BY rt1.c1, rt1.c3, rt1.c2 UNION SELECT rt1.c1, rt1.c3, rt1.c2 FROM rt1 WHERE ((((((((rt1.c0)OR(rt1.c2)))AND(rt1.c2)) IN (NULL))) ISNULL)) GROUP BY rt1.c1, rt1.c3, rt1.c2;
SELECT ALL rt1.c1, rt1.c3, rt1.c2 FROM rt1 GROUP BY rt1.c1, rt1.c3, rt1.c2;
SELECT rt1.c1, rt1.c4, rt1.c3 FROM rt1 GROUP BY rt1.c1, rt1.c4, rt1.c3;
SELECT ALL rt1.c1, rt1.c4, rt1.c3 FROM rt1 GROUP BY rt1.c1, rt1.c4, rt1.c3 HAVING MIN((- (rt1.c3))) UNION ALL SELECT ALL rt1.c1, rt1.c4, rt1.c3 FROM rt1 GROUP BY rt1.c1, rt1.c4, rt1.c3 HAVING (NOT (MIN((- (rt1.c3))))) UNION ALL SELECT ALL rt1.c1, rt1.c4, rt1.c3 FROM rt1 GROUP BY rt1.c1, rt1.c4, rt1.c3 HAVING ((MIN((- (rt1.c3)))) ISNULL);
SELECT rt1.c1, rt1.c4, rt1.c3 FROM rt1 GROUP BY rt1.c1, rt1.c4, rt1.c3;
SELECT ALL rt1.c1, rt1.c4, rt1.c3 FROM rt1 GROUP BY rt1.c1, rt1.c4, rt1.c3 HAVING MIN((- (rt1.c3))) UNION ALL SELECT ALL rt1.c1, rt1.c4, rt1.c3 FROM rt1 GROUP BY rt1.c1, rt1.c4, rt1.c3 HAVING (NOT (MIN((- (rt1.c3))))) UNION ALL SELECT ALL rt1.c1, rt1.c4, rt1.c3 FROM rt1 GROUP BY rt1.c1, rt1.c4, rt1.c3 HAVING ((MIN((- (rt1.c3)))) ISNULL);
SELECT rt1.c1, rt1.c4, rt1.c3 FROM rt1 GROUP BY rt1.c1, rt1.c4, rt1.c3;
SELECT ALL * FROM rt1 NOT INDEXED, v0;
SELECT * FROM rt1, v0 WHERE (CASE WHEN ((rt1.c4) NOT BETWEEN (rt1.c0) AND (v0.c2)) THEN TRIM(DISTINCT v0.c0) END) UNION ALL SELECT ALL * FROM rt1, v0 WHERE ((NOT (CASE WHEN ((rt1.c4) NOT BETWEEN (rt1.c0) AND (v0.c2)) THEN TRIM(DISTINCT v0.c0) END))) UNION ALL SELECT ALL * FROM rt1, v0 WHERE (((CASE WHEN ((rt1.c4) NOT BETWEEN (rt1.c0) AND (v0.c2)) THEN TRIM(DISTINCT v0.c0) END) ISNULL));
SELECT ALL * FROM rt1 NOT INDEXED, v0;
SELECT DISTINCT v0.c2, v0.c1, v0.c0 FROM v0;
SELECT DISTINCT v0.c2, v0.c1, v0.c0 FROM v0 WHERE ((((((v0.c0)IS(v0.c1))))<((((v0.c1)GLOB(v0.c1)))))) UNION SELECT DISTINCT v0.c2, v0.c1, v0.c0 FROM v0 WHERE ((NOT ((((((v0.c0)IS(v0.c1))))<((((v0.c1)GLOB(v0.c1)))))))) UNION SELECT DISTINCT v0.c2, v0.c1, v0.c0 FROM v0 WHERE ((((((((v0.c0)IS(v0.c1))))<((((v0.c1)GLOB(v0.c1)))))) ISNULL));
SELECT DISTINCT v0.c2, v0.c1, v0.c0 FROM v0;
SELECT rt1.c3, rt1.c1, rt1.c2, v0.c0, rt1.c4, v0.c2, v0.c1, rt1.c0 FROM rt1 RIGHT OUTER JOIN v0 ON (+ (CASE WHEN rt1.c2 THEN rt1.c3 WHEN rt1.c0 THEN v0.c1 WHEN v0.c1 THEN rt1.c3 END)) GROUP BY rt1.c3, rt1.c1, rt1.c2, v0.c0, rt1.c4, v0.c2, v0.c1, rt1.c0;
SELECT rt1.c3, rt1.c1, rt1.c2, v0.c0, rt1.c4, v0.c2, v0.c1, rt1.c0 FROM rt1 RIGHT OUTER JOIN v0 ON (+ (CASE WHEN rt1.c2 THEN rt1.c3 WHEN rt1.c0 THEN v0.c1 WHEN v0.c1 THEN rt1.c3 END)) WHERE (((rt1.c4) NOT BETWEEN (((rt1.c0)+(x''))) AND (((((rt1.c2)AND(rt1.c0)))OR(rt1.c4))))) GROUP BY rt1.c3, rt1.c1, rt1.c2, v0.c0, rt1.c4, v0.c2, v0.c1, rt1.c0 UNION SELECT ALL rt1.c3, rt1.c1, rt1.c2, v0.c0, rt1.c4, v0.c2, v0.c1, rt1.c0 FROM rt1 RIGHT OUTER JOIN v0 ON (+ (CASE WHEN rt1.c2 THEN rt1.c3 WHEN rt1.c0 THEN v0.c1 WHEN v0.c1 THEN rt1.c3 END)) WHERE ((NOT (((rt1.c4) NOT BETWEEN (((rt1.c0)+(x''))) AND (((((rt1.c2)AND(rt1.c0)))OR(rt1.c4))))))) GROUP BY rt1.c3, rt1.c1, rt1.c2, v0.c0, rt1.c4, v0.c2, v0.c1, rt1.c0 UNION SELECT rt1.c3, rt1.c1, rt1.c2, v0.c0, rt1.c4, v0.c2, v0.c1, rt1.c0 FROM rt1 RIGHT OUTER JOIN v0 ON (+ (CASE WHEN rt1.c2 THEN rt1.c3 WHEN rt1.c0 THEN v0.c1 WHEN v0.c1 THEN rt1.c3 END)) WHERE (((((rt1.c4) NOT BETWEEN (((rt1.c0)+(x''))) AND (((((rt1.c2)AND(rt1.c0)))OR(rt1.c4))))) ISNULL)) GROUP BY rt1.c3, rt1.c1, rt1.c2, v0.c0, rt1.c4, v0.c2, v0.c1, rt1.c0;
SELECT rt1.c3, rt1.c1, rt1.c2, v0.c0, rt1.c4, v0.c2, v0.c1, rt1.c0 FROM rt1 RIGHT OUTER JOIN v0 ON (+ (CASE WHEN rt1.c2 THEN rt1.c3 WHEN rt1.c0 THEN v0.c1 WHEN v0.c1 THEN rt1.c3 END)) GROUP BY rt1.c3, rt1.c1, rt1.c2, v0.c0, rt1.c4, v0.c2, v0.c1, rt1.c0;
SELECT ALL rt1.c0, rt1.c4, rt1.c3 FROM rt1 GROUP BY rt1.c0, rt1.c4, rt1.c3;
SELECT rt1.c0, rt1.c4, rt1.c3 FROM rt1 GROUP BY rt1.c0, rt1.c4, rt1.c3 HAVING TOTAL(COUNT(MIN(rt1.c4))) UNION ALL SELECT ALL rt1.c0, rt1.c4, rt1.c3 FROM rt1 GROUP BY rt1.c0, rt1.c4, rt1.c3 HAVING (NOT (TOTAL(COUNT(MIN(rt1.c4))))) UNION ALL SELECT rt1.c0, rt1.c4, rt1.c3 FROM rt1 GROUP BY rt1.c0, rt1.c4, rt1.c3 HAVING ((TOTAL(COUNT(MIN(rt1.c4)))) ISNULL);
SELECT rt0.c2, rt0.c4, rt0.c0, rt1.c2 FROM rt1, rt0;
SELECT rt0.c2, rt0.c4, rt0.c0, rt1.c2 FROM rt1, rt0 WHERE ((CAST(rt0.c3 AS REAL) IN ())) UNION ALL SELECT rt0.c2, rt0.c4, rt0.c0, rt1.c2 FROM rt1, rt0 WHERE ((NOT ((CAST(rt0.c3 AS REAL) IN ())))) UNION ALL SELECT rt0.c2, rt0.c4, rt0.c0, rt1.c2 FROM rt1, rt0 WHERE ((((CAST(rt0.c3 AS REAL) IN ())) ISNULL));
SELECT rt0.c2, rt0.c4, rt0.c0, rt1.c2 FROM rt1, rt0;
SELECT DISTINCT v0.c0, rt0.c1, rt0.c3, rt0.c4, rt1.c1, v0.c1, rt1.c0 FROM v0, rt0, rt1;
SELECT DISTINCT v0.c0, rt0.c1, rt0.c3, rt0.c4, rt1.c1, v0.c1, rt1.c0 FROM v0, rt0, rt1 WHERE ((((((rt1.c4)) NOT BETWEEN ((rt1.c3)) AND ((rt1.c1)))) ISNULL)) UNION SELECT DISTINCT v0.c0, rt0.c1, rt0.c3, rt0.c4, rt1.c1, v0.c1, rt1.c0 FROM v0, rt0, rt1 WHERE ((NOT ((((((rt1.c4)) NOT BETWEEN ((rt1.c3)) AND ((rt1.c1)))) ISNULL)))) UNION SELECT DISTINCT v0.c0, rt0.c1, rt0.c3, rt0.c4, rt1.c1, v0.c1, rt1.c0 FROM v0, rt0, rt1 WHERE ((((((((rt1.c4)) NOT BETWEEN ((rt1.c3)) AND ((rt1.c1)))) ISNULL)) ISNULL));
SELECT DISTINCT v0.c0, rt0.c1, rt0.c3, rt0.c4, rt1.c1, v0.c1, rt1.c0 FROM v0, rt0, rt1;
SELECT rt1.c4, rt1.c3 FROM rt1 GROUP BY rt1.c4, rt1.c3;
SELECT rt1.c4, rt1.c3 FROM rt1 WHERE (CASE WHEN '-1201140850' THEN (NOT (rt1.c1)) END) GROUP BY rt1.c4, rt1.c3 UNION SELECT rt1.c4, rt1.c3 FROM rt1 WHERE ((NOT (CASE WHEN '-1201140850' THEN (NOT (rt1.c1)) END))) GROUP BY rt1.c4, rt1.c3 UNION SELECT ALL rt1.c4, rt1.c3 FROM rt1 WHERE (((CASE WHEN '-1201140850' THEN (NOT (rt1.c1)) END) ISNULL)) GROUP BY rt1.c4, rt1.c3;
SELECT rt1.c4, rt1.c3 FROM rt1 GROUP BY rt1.c4, rt1.c3;
SELECT rt0.c1, rt0.c4, rt0.c0 FROM v0, rt1, rt0 GROUP BY rt0.c1, rt0.c4, rt0.c0;
SELECT ALL rt0.c1, rt0.c4, rt0.c0 FROM v0, rt1, rt0 GROUP BY rt0.c1, rt0.c4, rt0.c0 HAVING ((SUM('[E(A'))AND(rt1.c2 COLLATE BINARY)) UNION ALL SELECT rt0.c1, rt0.c4, rt0.c0 FROM v0, rt1, rt0 GROUP BY rt0.c1, rt0.c4, rt0.c0 HAVING (NOT (((SUM('[E(A'))AND(rt1.c2 COLLATE BINARY)))) UNION ALL SELECT ALL rt0.c1, rt0.c4, rt0.c0 FROM v0, rt1, rt0 GROUP BY rt0.c1, rt0.c4, rt0.c0 HAVING ((((SUM('[E(A'))AND(rt1.c2 COLLATE BINARY))) ISNULL);
SELECT rt0.c1, rt0.c4, rt0.c0 FROM v0, rt1, rt0 GROUP BY rt0.c1, rt0.c4, rt0.c0;
SELECT ALL rt0.c1, rt0.c4, rt0.c0 FROM v0, rt1, rt0 GROUP BY rt0.c1, rt0.c4, rt0.c0 HAVING ((SUM('[E(A'))AND(rt1.c2 COLLATE BINARY)) UNION ALL SELECT rt0.c1, rt0.c4, rt0.c0 FROM v0, rt1, rt0 GROUP BY rt0.c1, rt0.c4, rt0.c0 HAVING (NOT (((SUM('[E(A'))AND(rt1.c2 COLLATE BINARY)))) UNION ALL SELECT ALL rt0.c1, rt0.c4, rt0.c0 FROM v0, rt1, rt0 GROUP BY rt0.c1, rt0.c4, rt0.c0 HAVING ((((SUM('[E(A'))AND(rt1.c2 COLLATE BINARY))) ISNULL);
SELECT rt0.c1, rt0.c4, rt0.c0 FROM v0, rt1, rt0 GROUP BY rt0.c1, rt0.c4, rt0.c0;
SELECT ALL rt1.c0, v0.c2, v0.c0, rt1.c2, rt1.c1, rt1.c3 FROM v0, rt1;
SELECT ALL rt1.c0, v0.c2, v0.c0, rt1.c2, rt1.c1, rt1.c3 FROM v0, rt1 WHERE ((- (rt1.c0))) UNION ALL SELECT rt1.c0, v0.c2, v0.c0, rt1.c2, rt1.c1, rt1.c3 FROM v0, rt1 WHERE ((NOT ((- (rt1.c0))))) UNION ALL SELECT ALL rt1.c0, v0.c2, v0.c0, rt1.c2, rt1.c1, rt1.c3 FROM v0, rt1 WHERE ((((- (rt1.c0))) ISNULL));
SELECT ALL rt1.c0, v0.c2, v0.c0, rt1.c2, rt1.c1, rt1.c3 FROM v0, rt1;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((LIKELIHOOD(DISTINCT rt0.c4, 0.74790478645772))%(((((rt0.c4)OR(rt0.c4)))OR(rt0.c1))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((LIKELIHOOD(DISTINCT rt0.c4, 0.74790478645772))%(((((rt0.c4)OR(rt0.c4)))OR(rt0.c1))))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((LIKELIHOOD(DISTINCT rt0.c4, 0.74790478645772))%(((((rt0.c4)OR(rt0.c4)))OR(rt0.c1))))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT v0.c1, v0.c0 FROM v0 GROUP BY v0.c1, v0.c0;
SELECT v0.c1, v0.c0 FROM v0 WHERE (CASE ((v0.c1)=(v0.c2))  WHEN ((v0.c1) ISNULL) THEN ((v0.c1)LIKE(v0.c0)) END) GROUP BY v0.c1, v0.c0 UNION SELECT v0.c1, v0.c0 FROM v0 WHERE ((NOT (CASE ((v0.c1)=(v0.c2))  WHEN ((v0.c1) ISNULL) THEN ((v0.c1)LIKE(v0.c0)) END))) GROUP BY v0.c1, v0.c0 UNION SELECT ALL v0.c1, v0.c0 FROM v0 WHERE (((CASE ((v0.c1)=(v0.c2))  WHEN ((v0.c1) ISNULL) THEN ((v0.c1)LIKE(v0.c0)) END) ISNULL)) GROUP BY v0.c1, v0.c0;
SELECT v0.c1, v0.c0 FROM v0 GROUP BY v0.c1, v0.c0;
SELECT rt1.c0, rt0.c3, rt1.c4, rt1.c1, rt0.c1, rt0.c2, rt0.c0, rt1.c2, rt0.c4, rt1.c3 FROM rt0, rt1 GROUP BY rt1.c0, rt0.c3, rt1.c4, rt1.c1, rt0.c1, rt0.c2, rt0.c0, rt1.c2, rt0.c4, rt1.c3;
SELECT ALL rt1.c0, rt0.c3, rt1.c4, rt1.c1, rt0.c1, rt0.c2, rt0.c0, rt1.c2, rt0.c4, rt1.c3 FROM rt0, rt1 GROUP BY rt1.c0, rt0.c3, rt1.c4, rt1.c1, rt0.c1, rt0.c2, rt0.c0, rt1.c2, rt0.c4, rt1.c3 HAVING AVG(COUNT(x'058d')) UNION ALL SELECT ALL rt1.c0, rt0.c3, rt1.c4, rt1.c1, rt0.c1, rt0.c2, rt0.c0, rt1.c2, rt0.c4, rt1.c3 FROM rt0, rt1 GROUP BY rt1.c0, rt0.c3, rt1.c4, rt1.c1, rt0.c1, rt0.c2, rt0.c0, rt1.c2, rt0.c4, rt1.c3 HAVING (NOT (AVG(COUNT(x'058d')))) UNION ALL SELECT rt1.c0, rt0.c3, rt1.c4, rt1.c1, rt0.c1, rt0.c2, rt0.c0, rt1.c2, rt0.c4, rt1.c3 FROM rt0, rt1 GROUP BY rt1.c0, rt0.c3, rt1.c4, rt1.c1, rt0.c1, rt0.c2, rt0.c0, rt1.c2, rt0.c4, rt1.c3 HAVING ((AVG(COUNT(x'058d'))) ISNULL);
SELECT rt0.c2 FROM rt1 INNER JOIN v0 ON CHANGES() FULL OUTER JOIN rt0 ON (((rt0.c2))<((((((v0.c1)AND(rt1.c0)))AND(rt1.c0)))));
SELECT ALL rt0.c2 FROM rt1 INNER JOIN v0 ON CHANGES() FULL OUTER JOIN rt0 ON (((rt0.c2))<((((((v0.c1)AND(rt1.c0)))AND(rt1.c0))))) WHERE ((((rt0.c0 COLLATE NOCASE))>=((0.6716585117956038)))) UNION ALL SELECT rt0.c2 FROM rt1 INNER JOIN v0 ON CHANGES() FULL OUTER JOIN rt0 ON (((rt0.c2))<((((((v0.c1)AND(rt1.c0)))AND(rt1.c0))))) WHERE ((NOT ((((rt0.c0 COLLATE NOCASE))>=((0.6716585117956038)))))) UNION ALL SELECT ALL rt0.c2 FROM rt1 INNER JOIN v0 ON CHANGES() FULL OUTER JOIN rt0 ON (((rt0.c2))<((((((v0.c1)AND(rt1.c0)))AND(rt1.c0))))) WHERE ((((((rt0.c0 COLLATE NOCASE))>=((0.6716585117956038)))) ISNULL));
SELECT rt0.c2 FROM rt1 INNER JOIN v0 ON CHANGES() FULL OUTER JOIN rt0 ON (((rt0.c2))<((((((v0.c1)AND(rt1.c0)))AND(rt1.c0)))));
SELECT DISTINCT v0.c2, rt1.c0 FROM v0, rt1;
SELECT DISTINCT v0.c2, rt1.c0 FROM v0, rt1 WHERE (((UPPER(DISTINCT v0.c2)) NOT BETWEEN (rt1.c0) AND (((rt1.c1) IS FALSE)))) UNION SELECT DISTINCT v0.c2, rt1.c0 FROM v0, rt1 WHERE ((NOT (((UPPER(DISTINCT v0.c2)) NOT BETWEEN (rt1.c0) AND (((rt1.c1) IS FALSE)))))) UNION SELECT DISTINCT v0.c2, rt1.c0 FROM v0, rt1 WHERE (((((UPPER(DISTINCT v0.c2)) NOT BETWEEN (rt1.c0) AND (((rt1.c1) IS FALSE)))) ISNULL));
SELECT DISTINCT v0.c2, rt1.c0 FROM v0, rt1;
SELECT ALL rt0.c1, rt1.c0, rt0.c3, rt0.c4, rt1.c2, v0.c0, rt1.c3, v0.c1 FROM rt0, v0, rt1 GROUP BY rt0.c1, rt1.c0, rt0.c3, rt0.c4, rt1.c2, v0.c0, rt1.c3, v0.c1;
SELECT rt0.c1, rt1.c0, rt0.c3, rt0.c4, rt1.c2, v0.c0, rt1.c3, v0.c1 FROM rt0, v0, rt1 WHERE (((((rt0.c4)%(rt1.c3))) NOT BETWEEN (rt0.c0) AND (((v0.c1)*(v0.c2))))) GROUP BY rt0.c1, rt1.c0, rt0.c3, rt0.c4, rt1.c2, v0.c0, rt1.c3, v0.c1 UNION SELECT ALL rt0.c1, rt1.c0, rt0.c3, rt0.c4, rt1.c2, v0.c0, rt1.c3, v0.c1 FROM rt0, v0, rt1 WHERE ((NOT (((((rt0.c4)%(rt1.c3))) NOT BETWEEN (rt0.c0) AND (((v0.c1)*(v0.c2))))))) GROUP BY rt0.c1, rt1.c0, rt0.c3, rt0.c4, rt1.c2, v0.c0, rt1.c3, v0.c1 UNION SELECT rt0.c1, rt1.c0, rt0.c3, rt0.c4, rt1.c2, v0.c0, rt1.c3, v0.c1 FROM rt0, v0, rt1 WHERE (((((((rt0.c4)%(rt1.c3))) NOT BETWEEN (rt0.c0) AND (((v0.c1)*(v0.c2))))) ISNULL)) GROUP BY rt0.c1, rt1.c0, rt0.c3, rt0.c4, rt1.c2, v0.c0, rt1.c3, v0.c1;
SELECT ALL rt0.c1, rt1.c0, rt0.c3, rt0.c4, rt1.c2, v0.c0, rt1.c3, v0.c1 FROM rt0, v0, rt1 GROUP BY rt0.c1, rt1.c0, rt0.c3, rt0.c4, rt1.c2, v0.c0, rt1.c3, v0.c1;
SELECT ALL v0.c1, rt1.c3, rt1.c1, rt1.c0, v0.c2 FROM rt1, v0 GROUP BY v0.c1, rt1.c3, rt1.c1, rt1.c0, v0.c2;
SELECT ALL v0.c1, rt1.c3, rt1.c1, rt1.c0, v0.c2 FROM rt1, v0 GROUP BY v0.c1, rt1.c3, rt1.c1, rt1.c0, v0.c2 HAVING GROUP_CONCAT(AVG(MAX(MIN(v0.c1)))) UNION ALL SELECT v0.c1, rt1.c3, rt1.c1, rt1.c0, v0.c2 FROM rt1, v0 GROUP BY v0.c1, rt1.c3, rt1.c1, rt1.c0, v0.c2 HAVING (NOT (GROUP_CONCAT(AVG(MAX(MIN(v0.c1)))))) UNION ALL SELECT v0.c1, rt1.c3, rt1.c1, rt1.c0, v0.c2 FROM rt1, v0 GROUP BY v0.c1, rt1.c3, rt1.c1, rt1.c0, v0.c2 HAVING ((GROUP_CONCAT(AVG(MAX(MIN(v0.c1))))) ISNULL);
SELECT rt0.c3, rt1.c1, rt1.c2, v0.c1, rt0.c0, rt1.c3, v0.c0, v0.c2, rt1.c4, rt0.c4 FROM rt1, rt0, v0;
SELECT rt0.c3, rt1.c1, rt1.c2, v0.c1, rt0.c0, rt1.c3, v0.c0, v0.c2, rt1.c4, rt0.c4 FROM rt1, rt0, v0 WHERE (((CAST(v0.c0 AS INTEGER))+(v0.c0 COLLATE NOCASE))) UNION ALL SELECT ALL rt0.c3, rt1.c1, rt1.c2, v0.c1, rt0.c0, rt1.c3, v0.c0, v0.c2, rt1.c4, rt0.c4 FROM rt1, rt0, v0 WHERE ((NOT (((CAST(v0.c0 AS INTEGER))+(v0.c0 COLLATE NOCASE))))) UNION ALL SELECT ALL rt0.c3, rt1.c1, rt1.c2, v0.c1, rt0.c0, rt1.c3, v0.c0, v0.c2, rt1.c4, rt0.c4 FROM rt1, rt0, v0 WHERE (((((CAST(v0.c0 AS INTEGER))+(v0.c0 COLLATE NOCASE))) ISNULL));
SELECT rt0.c3, rt1.c1, rt1.c2, v0.c1, rt0.c0, rt1.c3, v0.c0, v0.c2, rt1.c4, rt0.c4 FROM rt1, rt0, v0;
SELECT DISTINCT v0.c0, rt0.c2, rt0.c3, v0.c2, rt1.c0, rt1.c3 FROM rt1, v0, rt0;
SELECT DISTINCT v0.c0, rt0.c2, rt0.c3, v0.c2, rt1.c0, rt1.c3 FROM rt1, v0, rt0 WHERE (CASE WHEN rtreenode(rt0.c0, rt1.c2) THEN json_valid(rt1.c1) ELSE ((rt0.c1)*(v0.c0)) END) UNION SELECT DISTINCT v0.c0, rt0.c2, rt0.c3, v0.c2, rt1.c0, rt1.c3 FROM rt1 NOT INDEXED, v0, rt0 WHERE ((NOT (CASE WHEN rtreenode(rt0.c0, rt1.c2) THEN json_valid(rt1.c1) ELSE ((rt0.c1)*(v0.c0)) END))) UNION SELECT DISTINCT v0.c0, rt0.c2, rt0.c3, v0.c2, rt1.c0, rt1.c3 FROM rt1, v0, rt0 WHERE (((CASE WHEN rtreenode(rt0.c0, rt1.c2) THEN json_valid(rt1.c1) ELSE ((rt0.c1)*(v0.c0)) END) ISNULL));
SELECT DISTINCT v0.c0, rt0.c2, rt0.c3, v0.c2, rt1.c0, rt1.c3 FROM rt1, v0, rt0;
SELECT ALL rt0.c4, rt0.c1, rt0.c3, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c4, rt0.c1, rt0.c3, rt0.c0, rt0.c2;
SELECT rt0.c4, rt0.c1, rt0.c3, rt0.c0, rt0.c2 FROM rt0 WHERE ((((rt0.c3 IN ())) NOT BETWEEN (rt0.c2) AND ((NOT (rt0.c4))))) GROUP BY rt0.c4, rt0.c1, rt0.c3, rt0.c0, rt0.c2 UNION SELECT rt0.c4, rt0.c1, rt0.c3, rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT ((((rt0.c3 IN ())) NOT BETWEEN (rt0.c2) AND ((NOT (rt0.c4))))))) GROUP BY rt0.c4, rt0.c1, rt0.c3, rt0.c0, rt0.c2 UNION SELECT rt0.c4, rt0.c1, rt0.c3, rt0.c0, rt0.c2 FROM rt0 WHERE ((((((rt0.c3 IN ())) NOT BETWEEN (rt0.c2) AND ((NOT (rt0.c4))))) ISNULL)) GROUP BY rt0.c4, rt0.c1, rt0.c3, rt0.c0, rt0.c2;
SELECT ALL rt0.c4, rt0.c1, rt0.c3, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c4, rt0.c1, rt0.c3, rt0.c0, rt0.c2;
SELECT rt0.c1, rt0.c4 FROM rt0 GROUP BY rt0.c1, rt0.c4;
SELECT rt0.c1, rt0.c4 FROM rt0 GROUP BY rt0.c1, rt0.c4 HAVING LIKELIHOOD(AVG(COUNT(MIN(COUNT(*)))) COLLATE RTRIM, 0.6182654131446014) UNION ALL SELECT ALL rt0.c1, rt0.c4 FROM rt0 GROUP BY rt0.c1, rt0.c4 HAVING (NOT (LIKELIHOOD(AVG(COUNT(MIN(COUNT(*)))) COLLATE RTRIM, 0.6182654131446014))) UNION ALL SELECT ALL rt0.c1, rt0.c4 FROM rt0 GROUP BY rt0.c1, rt0.c4 HAVING ((LIKELIHOOD(AVG(COUNT(MIN(COUNT(*)))) COLLATE RTRIM, 0.6182654131446014)) ISNULL);
SELECT rt1.c0 FROM rt0 CROSS JOIN rt1 ON ((TYPEOF(DISTINCT rt1.c2)) NOTNULL);
SELECT ALL rt1.c0 FROM rt0 CROSS JOIN rt1 ON ((TYPEOF(DISTINCT rt1.c2)) NOTNULL) WHERE (((rt0.c0 IN (rt0.c0, rt0.c2)) IN ())) UNION ALL SELECT ALL rt1.c0 FROM rt0 CROSS JOIN rt1 ON ((TYPEOF(DISTINCT rt1.c2)) NOTNULL) WHERE ((NOT (((rt0.c0 IN (rt0.c0, rt0.c2)) IN ())))) UNION ALL SELECT ALL rt1.c0 FROM rt0 CROSS JOIN rt1 ON ((TYPEOF(DISTINCT rt1.c2)) NOTNULL) WHERE (((((rt0.c0 IN (rt0.c0, rt0.c2)) IN ())) ISNULL));
SELECT rt1.c0 FROM rt0 CROSS JOIN rt1 ON ((TYPEOF(DISTINCT rt1.c2)) NOTNULL);
SELECT DISTINCT rt1.c0, rt1.c2, rt1.c4, rt1.c3, rt1.c1 FROM rt1;
SELECT DISTINCT rt1.c0, rt1.c2, rt1.c4, rt1.c3, rt1.c1 FROM rt1 WHERE (((((CAST(rt1.c2 AS REAL))AND(((rt1.c2)=(rt1.c4)))))OR((+ (rt1.c4))))) UNION SELECT DISTINCT rt1.c0, rt1.c2, rt1.c4, rt1.c3, rt1.c1 FROM rt1 WHERE ((NOT (((((CAST(rt1.c2 AS REAL))AND(((rt1.c2)==(rt1.c4)))))OR((+ (rt1.c4))))))) UNION SELECT DISTINCT rt1.c0, rt1.c2, rt1.c4, rt1.c3, rt1.c1 FROM rt1 WHERE (((((((CAST(rt1.c2 AS REAL))AND(((rt1.c2)==(rt1.c4)))))OR((+ (rt1.c4))))) ISNULL));
SELECT DISTINCT rt1.c0, rt1.c2, rt1.c4, rt1.c3, rt1.c1 FROM rt1;
SELECT v0.c2, v0.c1 FROM v0, rt1 GROUP BY v0.c2, v0.c1;
SELECT v0.c2, v0.c1 FROM v0, rt1 WHERE ((((rt1.c2 COLLATE RTRIM, (((rt1.c2, rt1.c3, rt1.c0))!=((v0.c1, v0.c1, x''))), rtreenode(rt1.c3, rt1.c1)))>((((rt1.c3) BETWEEN ('') AND (rt1.c3)), CAST(rt1.c4 AS BLOB), v0.c2)))) GROUP BY v0.c2, v0.c1 UNION SELECT ALL v0.c2, v0.c1 FROM v0, rt1 WHERE ((NOT ((((rt1.c2 COLLATE RTRIM, (((rt1.c2, rt1.c3, rt1.c0))<>((v0.c1, v0.c1, x''))), rtreenode(rt1.c3, rt1.c1)))>((((rt1.c3) BETWEEN ('') AND (rt1.c3)), CAST(rt1.c4 AS BLOB), v0.c2)))))) GROUP BY v0.c2, v0.c1 UNION SELECT ALL v0.c2, v0.c1 FROM v0, rt1 WHERE ((((((rt1.c2 COLLATE RTRIM, (((rt1.c2, rt1.c3, rt1.c0))<>((v0.c1, v0.c1, x''))), rtreenode(rt1.c3, rt1.c1)))>((((rt1.c3) BETWEEN ('') AND (rt1.c3)), CAST(rt1.c4 AS BLOB), v0.c2)))) ISNULL)) GROUP BY v0.c2, v0.c1;
SELECT v0.c2, v0.c1 FROM v0, rt1 GROUP BY v0.c2, v0.c1;
SELECT v0.c0, rt1.c4, v0.c1, rt1.c1, rt0.c3, rt1.c0 FROM rt1, v0, rt0 GROUP BY v0.c0, rt1.c4, v0.c1, rt1.c1, rt0.c3, rt1.c0;
SELECT v0.c0, rt1.c4, v0.c1, rt1.c1, rt0.c3, rt1.c0 FROM rt1, v0, rt0 GROUP BY v0.c0, rt1.c4, v0.c1, rt1.c1, rt0.c3, rt1.c0 HAVING NULL UNION ALL SELECT v0.c0, rt1.c4, v0.c1, rt1.c1, rt0.c3, rt1.c0 FROM rt1, v0, rt0 GROUP BY v0.c0, rt1.c4, v0.c1, rt1.c1, rt0.c3, rt1.c0 HAVING (NOT (NULL)) UNION ALL SELECT v0.c0, rt1.c4, v0.c1, rt1.c1, rt0.c3, rt1.c0 FROM rt1, v0, rt0 GROUP BY v0.c0, rt1.c4, v0.c1, rt1.c1, rt0.c3, rt1.c0 HAVING ((NULL) ISNULL);
SELECT v0.c0, rt1.c4, v0.c1, rt1.c1, rt0.c3, rt1.c0 FROM rt1, v0, rt0 GROUP BY v0.c0, rt1.c4, v0.c1, rt1.c1, rt0.c3, rt1.c0;
SELECT v0.c0, rt1.c4, v0.c1, rt1.c1, rt0.c3, rt1.c0 FROM rt1, v0, rt0 GROUP BY v0.c0, rt1.c4, v0.c1, rt1.c1, rt0.c3, rt1.c0 HAVING NULL UNION ALL SELECT v0.c0, rt1.c4, v0.c1, rt1.c1, rt0.c3, rt1.c0 FROM rt1, v0, rt0 GROUP BY v0.c0, rt1.c4, v0.c1, rt1.c1, rt0.c3, rt1.c0 HAVING (NOT (NULL)) UNION ALL SELECT v0.c0, rt1.c4, v0.c1, rt1.c1, rt0.c3, rt1.c0 FROM rt1, v0, rt0 GROUP BY v0.c0, rt1.c4, v0.c1, rt1.c1, rt0.c3, rt1.c0 HAVING ((NULL) ISNULL);
SELECT v0.c0, rt1.c4, v0.c1, rt1.c1, rt0.c3, rt1.c0 FROM rt1, v0, rt0 GROUP BY v0.c0, rt1.c4, v0.c1, rt1.c1, rt0.c3, rt1.c0;
SELECT ALL rt1.c1 FROM rt1;
SELECT rt1.c1 FROM rt1 WHERE (TRIM(((((((((rt1.c0)OR(rt1.c3)))OR(rt1.c2)))AND(rt1.c2)))AND(rt1.c3)))) UNION ALL SELECT rt1.c1 FROM rt1 WHERE ((NOT (TRIM(((((((((rt1.c0)OR(rt1.c3)))OR(rt1.c2)))AND(rt1.c2)))AND(rt1.c3)))))) UNION ALL SELECT rt1.c1 FROM rt1 WHERE (((TRIM(((((((((rt1.c0)OR(rt1.c3)))OR(rt1.c2)))AND(rt1.c2)))AND(rt1.c3)))) ISNULL));
SELECT ALL rt1.c1 FROM rt1;
SELECT DISTINCT rt1.c3, rt0.c3, v0.c2, rt1.c2, v0.c1, rt1.c0, rt0.c2, rt0.c0, rt1.c1, v0.c0, rt0.c4, rt1.c4 FROM rt1, rt0, v0;
SELECT DISTINCT rt1.c3, rt0.c3, v0.c2, rt1.c2, v0.c1, rt1.c0, rt0.c2, rt0.c0, rt1.c1, v0.c0, rt0.c4, rt1.c4 FROM rt1 NOT INDEXED, rt0, v0 WHERE (CASE WHEN ((rt1.c0) IS FALSE) THEN 1.210170319E9 ELSE v0.c0 COLLATE RTRIM END) UNION SELECT DISTINCT rt1.c3, rt0.c3, v0.c2, rt1.c2, v0.c1, rt1.c0, rt0.c2, rt0.c0, rt1.c1, v0.c0, rt0.c4, rt1.c4 FROM rt1, rt0, v0 WHERE ((NOT (CASE WHEN ((rt1.c0) IS FALSE) THEN 1.210170319E9 ELSE v0.c0 COLLATE RTRIM END))) UNION SELECT DISTINCT rt1.c3, rt0.c3, v0.c2, rt1.c2, v0.c1, rt1.c0, rt0.c2, rt0.c0, rt1.c1, v0.c0, rt0.c4, rt1.c4 FROM rt1, rt0, v0 WHERE (((CASE WHEN ((rt1.c0) IS FALSE) THEN 1.210170319E9 ELSE v0.c0 COLLATE RTRIM END) ISNULL));
SELECT DISTINCT rt1.c3, rt0.c3, v0.c2, rt1.c2, v0.c1, rt1.c0, rt0.c2, rt0.c0, rt1.c1, v0.c0, rt0.c4, rt1.c4 FROM rt1, rt0, v0;
SELECT ALL rt0.c2, rt1.c3, rt1.c4, rt0.c1, rt1.c1, rt1.c2, rt1.c0, rt0.c3, rt0.c4 FROM rt0, rt1 GROUP BY rt0.c2, rt1.c3, rt1.c4, rt0.c1, rt1.c1, rt1.c2, rt1.c0, rt0.c3, rt0.c4;
SELECT rt0.c2, rt1.c3, rt1.c4, rt0.c1, rt1.c1, rt1.c2, rt1.c0, rt0.c3, rt0.c4 FROM rt0, rt1 WHERE (x'') GROUP BY rt0.c2, rt1.c3, rt1.c4, rt0.c1, rt1.c1, rt1.c2, rt1.c0, rt0.c3, rt0.c4 UNION SELECT rt0.c2, rt1.c3, rt1.c4, rt0.c1, rt1.c1, rt1.c2, rt1.c0, rt0.c3, rt0.c4 FROM rt0, rt1 WHERE ((NOT (x''))) GROUP BY rt0.c2, rt1.c3, rt1.c4, rt0.c1, rt1.c1, rt1.c2, rt1.c0, rt0.c3, rt0.c4 UNION SELECT rt0.c2, rt1.c3, rt1.c4, rt0.c1, rt1.c1, rt1.c2, rt1.c0, rt0.c3, rt0.c4 FROM rt0, rt1 WHERE (((x'') ISNULL)) GROUP BY rt0.c2, rt1.c3, rt1.c4, rt0.c1, rt1.c1, rt1.c2, rt1.c0, rt0.c3, rt0.c4;
SELECT ALL rt0.c2, rt1.c3, rt1.c4, rt0.c1, rt1.c1, rt1.c2, rt1.c0, rt0.c3, rt0.c4 FROM rt0, rt1 GROUP BY rt0.c2, rt1.c3, rt1.c4, rt0.c1, rt1.c1, rt1.c2, rt1.c0, rt0.c3, rt0.c4;
SELECT ALL v0.c2, v0.c1, rt1.c3, rt1.c2 FROM v0, rt1 GROUP BY v0.c2, v0.c1, rt1.c3, rt1.c2;
SELECT ALL v0.c2, v0.c1, rt1.c3, rt1.c2 FROM v0, rt1 GROUP BY v0.c2, v0.c1, rt1.c3, rt1.c2 HAVING ((((((rt1.c3)OR(MAX(v0.c0))))OR(v0.c0))) IS FALSE) UNION ALL SELECT ALL v0.c2, v0.c1, rt1.c3, rt1.c2 FROM v0, rt1 GROUP BY v0.c2, v0.c1, rt1.c3, rt1.c2 HAVING (NOT (((((((rt1.c3)OR(MAX(v0.c0))))OR(v0.c0))) IS FALSE))) UNION ALL SELECT v0.c2, v0.c1, rt1.c3, rt1.c2 FROM v0, rt1 GROUP BY v0.c2, v0.c1, rt1.c3, rt1.c2 HAVING ((((((((rt1.c3)OR(MAX(v0.c0))))OR(v0.c0))) IS FALSE)) ISNULL);
SELECT ALL v0.c2, v0.c1, rt1.c3, rt1.c2 FROM v0, rt1 GROUP BY v0.c2, v0.c1, rt1.c3, rt1.c2;
SELECT ALL v0.c2, v0.c1, rt1.c3, rt1.c2 FROM v0, rt1 GROUP BY v0.c2, v0.c1, rt1.c3, rt1.c2 HAVING ((((((rt1.c3)OR(MAX(v0.c0))))OR(v0.c0))) IS FALSE) UNION ALL SELECT ALL v0.c2, v0.c1, rt1.c3, rt1.c2 FROM v0, rt1 GROUP BY v0.c2, v0.c1, rt1.c3, rt1.c2 HAVING (NOT (((((((rt1.c3)OR(MAX(v0.c0))))OR(v0.c0))) IS FALSE))) UNION ALL SELECT v0.c2, v0.c1, rt1.c3, rt1.c2 FROM v0, rt1 GROUP BY v0.c2, v0.c1, rt1.c3, rt1.c2 HAVING ((((((((rt1.c3)OR(MAX(v0.c0))))OR(v0.c0))) IS FALSE)) ISNULL);
SELECT ALL v0.c2, v0.c1, rt1.c3, rt1.c2 FROM v0, rt1 GROUP BY v0.c2, v0.c1, rt1.c3, rt1.c2;
SELECT * FROM rt1, v0;
SELECT * FROM rt1, v0 WHERE (((((((((((rt1.c1)AND(rt1.c2)))OR(rt1.c4)))AND(rt1.c3)))OR(rt1.c4)))*(CASE WHEN rt1.c0 THEN rt1.c0 ELSE v0.c0 END))) UNION ALL SELECT * FROM rt1, v0 WHERE ((NOT (((((((((((rt1.c1)AND(rt1.c2)))OR(rt1.c4)))AND(rt1.c3)))OR(rt1.c4)))*(CASE WHEN rt1.c0 THEN rt1.c0 ELSE v0.c0 END))))) UNION ALL SELECT * FROM rt1, v0 WHERE (((((((((((((rt1.c1)AND(rt1.c2)))OR(rt1.c4)))AND(rt1.c3)))OR(rt1.c4)))*(CASE WHEN rt1.c0 THEN rt1.c0 ELSE v0.c0 END))) ISNULL));
SELECT * FROM rt1, v0;
SELECT DISTINCT rt0.c4, rt0.c1, rt0.c3, rt0.c2, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c4, rt0.c1, rt0.c3, rt0.c2, rt0.c0 FROM rt0 WHERE (((((rt0.c4) IS TRUE))LIKE(CAST(rt0.c2 AS TEXT)))) UNION SELECT DISTINCT rt0.c4, rt0.c1, rt0.c3, rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (((((rt0.c4) IS TRUE))LIKE(CAST(rt0.c2 AS TEXT)))))) UNION SELECT DISTINCT rt0.c4, rt0.c1, rt0.c3, rt0.c2, rt0.c0 FROM rt0 WHERE (((((((rt0.c4) IS TRUE))LIKE(CAST(rt0.c2 AS TEXT)))) ISNULL));
SELECT DISTINCT rt0.c4, rt0.c1, rt0.c3, rt0.c2, rt0.c0 FROM rt0;
SELECT rt0.c4, rt0.c0, rt1.c2, rt0.c1, v0.c0, rt1.c1 FROM rt1, v0, rt0 GROUP BY rt0.c4, rt0.c0, rt1.c2, rt0.c1, v0.c0, rt1.c1;
SELECT ALL rt0.c4, rt0.c0, rt1.c2, rt0.c1, v0.c0, rt1.c1 FROM rt1, v0, rt0 WHERE ((((0.2898553353456933, rt1.c0 COLLATE NOCASE, (rt0.c1 IN ())))<=((((rt1.c2)=(rt0.c0)), rt1.c3 COLLATE NOCASE, ((((rt0.c0)AND(rt0.c3)))AND(v0.c1)))))) GROUP BY rt0.c4, rt0.c0, rt1.c2, rt0.c1, v0.c0, rt1.c1 UNION SELECT rt0.c4, rt0.c0, rt1.c2, rt0.c1, v0.c0, rt1.c1 FROM rt1, v0, rt0 WHERE ((NOT ((((0.2898553353456933, rt1.c0 COLLATE NOCASE, (rt0.c1 IN ())))<=((((rt1.c2)==(rt0.c0)), rt1.c3 COLLATE NOCASE, ((((rt0.c0)AND(rt0.c3)))AND(v0.c1)))))))) GROUP BY rt0.c4, rt0.c0, rt1.c2, rt0.c1, v0.c0, rt1.c1 UNION SELECT ALL rt0.c4, rt0.c0, rt1.c2, rt0.c1, v0.c0, rt1.c1 FROM rt1, v0, rt0 WHERE ((((((0.2898553353456933, rt1.c0 COLLATE NOCASE, (rt0.c1 IN ())))<=((((rt1.c2)==(rt0.c0)), rt1.c3 COLLATE NOCASE, ((((rt0.c0)AND(rt0.c3)))AND(v0.c1)))))) ISNULL)) GROUP BY rt0.c4, rt0.c0, rt1.c2, rt0.c1, v0.c0, rt1.c1;
SELECT rt0.c4, rt0.c0, rt1.c2, rt0.c1, v0.c0, rt1.c1 FROM rt1, v0, rt0 GROUP BY rt0.c4, rt0.c0, rt1.c2, rt0.c1, v0.c0, rt1.c1;
SELECT rt1.c2 FROM rt1 GROUP BY rt1.c2;
SELECT ALL rt1.c2 FROM rt1 GROUP BY rt1.c2 HAVING json_extract(CASE WHEN rt1.c4 THEN rt1.c1 ELSE COUNT(TOTAL(COUNT(*))) END, MIN(rt1.c3)) UNION ALL SELECT rt1.c2 FROM rt1 GROUP BY rt1.c2 HAVING (NOT (json_extract(CASE WHEN rt1.c4 THEN rt1.c1 ELSE COUNT(TOTAL(COUNT(*))) END, MIN(rt1.c3)))) UNION ALL SELECT rt1.c2 FROM rt1 GROUP BY rt1.c2 HAVING ((json_extract(CASE WHEN rt1.c4 THEN rt1.c1 ELSE COUNT(TOTAL(COUNT(*))) END, MIN(rt1.c3))) ISNULL);
SELECT MAX(((rt0.c3)IS(rt1.c2 COLLATE NOCASE))) FROM v0, rt0, rt1 ORDER BY (- (v0.c2)) ASC, CAST(((((((((((((v0.c2)OR(rt0.c0)))OR(rt1.c1)))OR(rt0.c2)))AND(rt1.c4)))AND(rt1.c0)))AND(NULL)) AS NUMERIC)  NULLS FIRST;
SELECT ALL * FROM v0 INNER JOIN rt0 ON CAST(rt0.c4 AS TEXT) CROSS JOIN rt1 ON (((v0.c1 IN (v0.c0)))OR((v0.c0 IN ())));
SELECT * FROM v0 INNER JOIN rt0 ON CAST(rt0.c4 AS TEXT) CROSS JOIN rt1 ON (((v0.c1 IN (v0.c0)))OR((v0.c0 IN ()))) WHERE (((CAST(rt0.c3 AS TEXT))+((((rt0.c4, rt1.c3, v0.c2)) NOT BETWEEN ((rt1.c2, v0.c1, rt1.c4)) AND ((v0.c2, 0.37289608314708034, rt0.c3)))))) UNION ALL SELECT ALL * FROM v0 INNER JOIN rt0 ON CAST(rt0.c4 AS TEXT) CROSS JOIN rt1 ON (((v0.c1 IN (v0.c0)))OR((v0.c0 IN ()))) WHERE ((NOT (((CAST(rt0.c3 AS TEXT))+((((rt0.c4, rt1.c3, v0.c2)) NOT BETWEEN ((rt1.c2, v0.c1, rt1.c4)) AND ((v0.c2, 0.37289608314708034, rt0.c3)))))))) UNION ALL SELECT * FROM v0 INNER JOIN rt0 ON CAST(rt0.c4 AS TEXT) CROSS JOIN rt1 ON (((v0.c1 IN (v0.c0)))OR((v0.c0 IN ()))) WHERE (((((CAST(rt0.c3 AS TEXT))+((((rt0.c4, rt1.c3, v0.c2)) NOT BETWEEN ((rt1.c2, v0.c1, rt1.c4)) AND ((v0.c2, 0.37289608314708034, rt0.c3)))))) ISNULL));
SELECT ALL * FROM v0 INNER JOIN rt0 ON CAST(rt0.c4 AS TEXT) CROSS JOIN rt1 ON (((v0.c1 IN (v0.c0)))OR((v0.c0 IN ())));
SELECT DISTINCT * FROM rt0, rt1 INNER JOIN v0 ON ((((v0.c0)IS NOT(rt1.c4)))>((((rt0.c3, v0.c0, rt0.c4))==((rt1.c2, rt1.c4, rt0.c1)))));
SELECT DISTINCT * FROM rt0, rt1 INNER JOIN v0 ON ((((v0.c0)IS NOT(rt1.c4)))>((((rt0.c3, v0.c0, rt0.c4))=((rt1.c2, rt1.c4, rt0.c1))))) WHERE (CAST(((rt0.c4)/(rt0.c4)) AS NUMERIC)) UNION SELECT DISTINCT * FROM rt0, rt1 INNER JOIN v0 ON ((((v0.c0)IS NOT(rt1.c4)))>((((rt0.c3, v0.c0, rt0.c4))==((rt1.c2, rt1.c4, rt0.c1))))) WHERE ((NOT (CAST(((rt0.c4)/(rt0.c4)) AS NUMERIC)))) UNION SELECT DISTINCT * FROM rt0, rt1 INNER JOIN v0 ON ((((v0.c0)IS NOT(rt1.c4)))>((((rt0.c3, v0.c0, rt0.c4))=((rt1.c2, rt1.c4, rt0.c1))))) WHERE (((CAST(((rt0.c4)/(rt0.c4)) AS NUMERIC)) ISNULL));
SELECT DISTINCT * FROM rt0, rt1 INNER JOIN v0 ON ((((v0.c0)IS NOT(rt1.c4)))>((((rt0.c3, v0.c0, rt0.c4))==((rt1.c2, rt1.c4, rt0.c1)))));
SELECT ALL rt1.c3, rt1.c1, rt1.c4, v0.c2, v0.c1 FROM rt1 CROSS JOIN v0 ON (((0.9497741618981521)<<(v0.c2)) IN ()) GROUP BY rt1.c3, rt1.c1, rt1.c4, v0.c2, v0.c1;
SELECT rt1.c3, rt1.c1, rt1.c4, v0.c2, v0.c1 FROM rt1 CROSS JOIN v0 ON (((0.9497741618981521)<<(v0.c2)) IN ()) WHERE (((~ (722584291)) IN ())) GROUP BY rt1.c3, rt1.c1, rt1.c4, v0.c2, v0.c1 UNION SELECT rt1.c3, rt1.c1, rt1.c4, v0.c2, v0.c1 FROM rt1 CROSS JOIN v0 ON (((0.9497741618981521)<<(v0.c2)) IN ()) WHERE ((NOT (((~ (722584291)) IN ())))) GROUP BY rt1.c3, rt1.c1, rt1.c4, v0.c2, v0.c1 UNION SELECT rt1.c3, rt1.c1, rt1.c4, v0.c2, v0.c1 FROM rt1 CROSS JOIN v0 ON (((0.9497741618981521)<<(v0.c2)) IN ()) WHERE (((((~ (722584291)) IN ())) ISNULL)) GROUP BY rt1.c3, rt1.c1, rt1.c4, v0.c2, v0.c1;
SELECT ALL rt1.c3, rt1.c1, rt1.c4, v0.c2, v0.c1 FROM rt1 CROSS JOIN v0 ON (((0.9497741618981521)<<(v0.c2)) IN ()) GROUP BY rt1.c3, rt1.c1, rt1.c4, v0.c2, v0.c1;
SELECT ALL rt1.c3 FROM v0, rt1 GROUP BY rt1.c3;
SELECT ALL rt1.c3 FROM v0, rt1 GROUP BY rt1.c3 HAVING TOTAL(((AVG(v0.c0))OR(v0.c2))) UNION ALL SELECT ALL rt1.c3 FROM v0, rt1 GROUP BY rt1.c3 HAVING (NOT (TOTAL(((AVG(v0.c0))OR(v0.c2))))) UNION ALL SELECT ALL rt1.c3 FROM v0, rt1 GROUP BY rt1.c3 HAVING ((TOTAL(((AVG(v0.c0))OR(v0.c2)))) ISNULL);
SELECT ALL v0.c2, rt0.c1, rt0.c0, rt1.c4, rt1.c0, rt1.c2, rt1.c3, rt0.c4, rt0.c2, rt1.c1 FROM rt0, rt1, v0;
SELECT v0.c2, rt0.c1, rt0.c0, rt1.c4, rt1.c0, rt1.c2, rt1.c3, rt0.c4, rt0.c2, rt1.c1 FROM rt0, rt1, v0 WHERE (rt0.c4) UNION ALL SELECT v0.c2, rt0.c1, rt0.c0, rt1.c4, rt1.c0, rt1.c2, rt1.c3, rt0.c4, rt0.c2, rt1.c1 FROM rt0, rt1, v0 WHERE ((NOT (rt0.c4))) UNION ALL SELECT ALL v0.c2, rt0.c1, rt0.c0, rt1.c4, rt1.c0, rt1.c2, rt1.c3, rt0.c4, rt0.c2, rt1.c1 FROM rt0, rt1, v0 WHERE (((rt0.c4) ISNULL));
SELECT ALL v0.c2, rt0.c1, rt0.c0, rt1.c4, rt1.c0, rt1.c2, rt1.c3, rt0.c4, rt0.c2, rt1.c1 FROM rt0, rt1, v0;
SELECT DISTINCT * FROM rt1, v0, rt0;
SELECT DISTINCT * FROM rt1, v0, rt0 WHERE (CAST('-1946937528' AS TEXT)) UNION SELECT DISTINCT * FROM rt1, v0, rt0 WHERE ((NOT (CAST('-1946937528' AS TEXT)))) UNION SELECT DISTINCT * FROM rt1, v0, rt0 WHERE (((CAST('-1946937528' AS TEXT)) ISNULL));
SELECT DISTINCT * FROM rt1, v0, rt0;
SELECT ALL rt1.c4, rt1.c2, rt1.c1, rt1.c3 FROM rt1 GROUP BY rt1.c4, rt1.c2, rt1.c1, rt1.c3;
SELECT rt1.c4, rt1.c2, rt1.c1, rt1.c3 FROM rt1 WHERE (rt1.c1) GROUP BY rt1.c4, rt1.c2, rt1.c1, rt1.c3 UNION SELECT rt1.c4, rt1.c2, rt1.c1, rt1.c3 FROM rt1 WHERE ((NOT (rt1.c1))) GROUP BY rt1.c4, rt1.c2, rt1.c1, rt1.c3 UNION SELECT rt1.c4, rt1.c2, rt1.c1, rt1.c3 FROM rt1 WHERE (((rt1.c1) ISNULL)) GROUP BY rt1.c4, rt1.c2, rt1.c1, rt1.c3;
SELECT ALL rt1.c4, rt1.c2, rt1.c1, rt1.c3 FROM rt1 GROUP BY rt1.c4, rt1.c2, rt1.c1, rt1.c3;
SELECT v0.c2 FROM rt1, rt0, v0 GROUP BY v0.c2;
SELECT ALL v0.c2 FROM rt1, rt0, v0 GROUP BY v0.c2 HAVING -1.66705452E9 UNION ALL SELECT ALL v0.c2 FROM rt1, rt0, v0 GROUP BY v0.c2 HAVING (NOT (-1.66705452E9)) UNION ALL SELECT v0.c2 FROM rt1, rt0, v0 GROUP BY v0.c2 HAVING ((-1.66705452E9) ISNULL);
SELECT v0.c2 FROM rt1, rt0, v0 GROUP BY v0.c2;
SELECT ALL v0.c2 FROM rt1, rt0, v0 GROUP BY v0.c2 HAVING -1.66705452E9 UNION ALL SELECT ALL v0.c2 FROM rt1, rt0, v0 GROUP BY v0.c2 HAVING (NOT (-1.66705452E9)) UNION ALL SELECT v0.c2 FROM rt1, rt0, v0 GROUP BY v0.c2 HAVING ((-1.66705452E9) ISNULL);
SELECT v0.c2 FROM rt1, rt0, v0 GROUP BY v0.c2;
SELECT * FROM v0;
SELECT ALL * FROM v0 WHERE ((((+ (v0.c1)))>>((((v0.c0, v0.c2, v0.c1, v0.c2, v0.c2))!=((v0.c0, v0.c1, v0.c0, v0.c1, v0.c0)))))) UNION ALL SELECT ALL * FROM v0 WHERE ((NOT ((((+ (v0.c1)))>>((((v0.c0, v0.c2, v0.c1, v0.c2, v0.c2))<>((v0.c0, v0.c1, v0.c0, v0.c1, v0.c0)))))))) UNION ALL SELECT * FROM v0 WHERE ((((((+ (v0.c1)))>>((((v0.c0, v0.c2, v0.c1, v0.c2, v0.c2))<>((v0.c0, v0.c1, v0.c0, v0.c1, v0.c0)))))) ISNULL));
SELECT * FROM v0;
SELECT DISTINCT * FROM rt1;
SELECT DISTINCT * FROM rt1 WHERE (rt1.c4) UNION SELECT DISTINCT * FROM rt1 WHERE ((NOT (rt1.c4))) UNION SELECT DISTINCT * FROM rt1 WHERE (((rt1.c4) ISNULL));
SELECT DISTINCT * FROM rt1;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 WHERE (CAST(CASE rt0.c1  WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c4 END AS NUMERIC)) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0 WHERE ((NOT (CAST(CASE rt0.c1  WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c4 END AS NUMERIC)))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0 WHERE (((CAST(CASE rt0.c1  WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c4 END AS NUMERIC)) ISNULL)) GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt1.c2, rt1.c1, rt1.c0, rt1.c3, rt1.c4 FROM rt1 GROUP BY rt1.c2, rt1.c1, rt1.c0, rt1.c3, rt1.c4;
SELECT rt1.c2, rt1.c1, rt1.c0, rt1.c3, rt1.c4 FROM rt1 GROUP BY rt1.c2, rt1.c1, rt1.c0, rt1.c3, rt1.c4 HAVING CAST(ABS(NULL) AS NUMERIC) UNION ALL SELECT rt1.c2, rt1.c1, rt1.c0, rt1.c3, rt1.c4 FROM rt1 GROUP BY rt1.c2, rt1.c1, rt1.c0, rt1.c3, rt1.c4 HAVING (NOT (CAST(ABS(NULL) AS NUMERIC))) UNION ALL SELECT ALL rt1.c2, rt1.c1, rt1.c0, rt1.c3, rt1.c4 FROM rt1 GROUP BY rt1.c2, rt1.c1, rt1.c0, rt1.c3, rt1.c4 HAVING ((CAST(ABS(NULL) AS NUMERIC)) ISNULL);
SELECT ALL rt1.c2, rt1.c1, rt1.c0, rt1.c3, rt1.c4 FROM rt1 GROUP BY rt1.c2, rt1.c1, rt1.c0, rt1.c3, rt1.c4;
SELECT rt1.c2, rt1.c1, rt1.c0, rt1.c3, rt1.c4 FROM rt1 GROUP BY rt1.c2, rt1.c1, rt1.c0, rt1.c3, rt1.c4 HAVING CAST(ABS(NULL) AS NUMERIC) UNION ALL SELECT rt1.c2, rt1.c1, rt1.c0, rt1.c3, rt1.c4 FROM rt1 GROUP BY rt1.c2, rt1.c1, rt1.c0, rt1.c3, rt1.c4 HAVING (NOT (CAST(ABS(NULL) AS NUMERIC))) UNION ALL SELECT ALL rt1.c2, rt1.c1, rt1.c0, rt1.c3, rt1.c4 FROM rt1 GROUP BY rt1.c2, rt1.c1, rt1.c0, rt1.c3, rt1.c4 HAVING ((CAST(ABS(NULL) AS NUMERIC)) ISNULL);
SELECT ALL rt1.c2, rt1.c1, rt1.c0, rt1.c3, rt1.c4 FROM rt1 GROUP BY rt1.c2, rt1.c1, rt1.c0, rt1.c3, rt1.c4;
SELECT * FROM rt0 FULL OUTER JOIN rt1 ON json_array(ABS(rt0.c2), CASE rt1.c0  WHEN rt0.c2 THEN rt1.c2 WHEN rt1.c3 THEN x'' WHEN rt0.c2 THEN rt0.c1 ELSE rt1.c3 END);
SELECT * FROM rt0 FULL OUTER JOIN rt1 ON json_array(ABS(rt0.c2), CASE rt1.c0  WHEN rt0.c2 THEN rt1.c2 WHEN rt1.c3 THEN x'' WHEN rt0.c2 THEN rt0.c1 ELSE rt1.c3 END) WHERE (((rt1.c1)-(rt1.c3)) COLLATE RTRIM) UNION ALL SELECT * FROM rt0 FULL OUTER JOIN rt1 ON json_array(ABS(rt0.c2), CASE rt1.c0  WHEN rt0.c2 THEN rt1.c2 WHEN rt1.c3 THEN x'' WHEN rt0.c2 THEN rt0.c1 ELSE rt1.c3 END) WHERE ((NOT (((rt1.c1)-(rt1.c3)) COLLATE RTRIM))) UNION ALL SELECT * FROM rt0 FULL OUTER JOIN rt1 ON json_array(ABS(rt0.c2), CASE rt1.c0  WHEN rt0.c2 THEN rt1.c2 WHEN rt1.c3 THEN x'' WHEN rt0.c2 THEN rt0.c1 ELSE rt1.c3 END) WHERE (((((rt1.c1)-(rt1.c3)) COLLATE RTRIM) ISNULL));
SELECT * FROM rt0 FULL OUTER JOIN rt1 ON json_array(ABS(rt0.c2), CASE rt1.c0  WHEN rt0.c2 THEN rt1.c2 WHEN rt1.c3 THEN x'' WHEN rt0.c2 THEN rt0.c1 ELSE rt1.c3 END);
SELECT DISTINCT v0.c1, v0.c0 FROM v0;
SELECT DISTINCT v0.c1, v0.c0 FROM v0 WHERE (CASE ((v0.c1)|(v0.c2))  WHEN ((((v0.c1)OR(v0.c2)))OR(v0.c2)) THEN ((v0.c2) NOTNULL) WHEN ((v0.c0)==(v0.c1)) THEN (v0.c1 IN ()) WHEN ((v0.c1) IS FALSE) THEN ((v0.c2)-(v0.c2)) ELSE (((v0.c2))==((v0.c1))) END) UNION SELECT DISTINCT v0.c1, v0.c0 FROM v0 WHERE ((NOT (CASE ((v0.c1)|(v0.c2))  WHEN ((((v0.c1)OR(v0.c2)))OR(v0.c2)) THEN ((v0.c2) NOTNULL) WHEN ((v0.c0)=(v0.c1)) THEN (v0.c1 IN ()) WHEN ((v0.c1) IS FALSE) THEN ((v0.c2)-(v0.c2)) ELSE (((v0.c2))==((v0.c1))) END))) UNION SELECT DISTINCT v0.c1, v0.c0 FROM v0 WHERE (((CASE ((v0.c1)|(v0.c2))  WHEN ((((v0.c1)OR(v0.c2)))OR(v0.c2)) THEN ((v0.c2) NOTNULL) WHEN ((v0.c0)=(v0.c1)) THEN (v0.c1 IN ()) WHEN ((v0.c1) IS FALSE) THEN ((v0.c2)-(v0.c2)) ELSE (((v0.c2))==((v0.c1))) END) ISNULL));
SELECT DISTINCT v0.c1, v0.c0 FROM v0;
SELECT rt1.c0 FROM rt1, rt0 FULL OUTER JOIN v0 ON (- (0.9106003898264963)) COLLATE RTRIM GROUP BY rt1.c0;
SELECT rt1.c0 FROM rt1, rt0 FULL OUTER JOIN v0 ON (- (0.9106003898264963)) COLLATE RTRIM WHERE ((~ (((rt1.c1)LIKE(v0.c0))))) GROUP BY rt1.c0 UNION SELECT rt1.c0 FROM rt1, rt0 FULL OUTER JOIN v0 ON (- (0.9106003898264963)) COLLATE RTRIM WHERE ((NOT ((~ (((rt1.c1)LIKE(v0.c0))))))) GROUP BY rt1.c0 UNION SELECT rt1.c0 FROM rt1, rt0 FULL OUTER JOIN v0 ON (- (0.9106003898264963)) COLLATE RTRIM WHERE ((((~ (((rt1.c1)LIKE(v0.c0))))) ISNULL)) GROUP BY rt1.c0;
SELECT rt1.c0 FROM rt1, rt0 FULL OUTER JOIN v0 ON (- (0.9106003898264963)) COLLATE RTRIM GROUP BY rt1.c0;
SELECT rt0.c0, rt0.c2, rt1.c4, rt0.c3, rt1.c1, rt1.c2 FROM rt1 NATURAL JOIN rt0 GROUP BY rt0.c0, rt0.c2, rt1.c4, rt0.c3, rt1.c1, rt1.c2;
SELECT rt0.c0, rt0.c2, rt1.c4, rt0.c3, rt1.c1, rt1.c2 FROM rt1 NATURAL JOIN rt0 GROUP BY rt0.c0, rt0.c2, rt1.c4, rt0.c3, rt1.c1, rt1.c2 HAVING COUNT(COUNT(MAX(SUM(rt1.c1)))) UNION ALL SELECT rt0.c0, rt0.c2, rt1.c4, rt0.c3, rt1.c1, rt1.c2 FROM rt1 NATURAL JOIN rt0 GROUP BY rt0.c0, rt0.c2, rt1.c4, rt0.c3, rt1.c1, rt1.c2 HAVING (NOT (COUNT(COUNT(MAX(SUM(rt1.c1)))))) UNION ALL SELECT ALL rt0.c0, rt0.c2, rt1.c4, rt0.c3, rt1.c1, rt1.c2 FROM rt1 NATURAL JOIN rt0 GROUP BY rt0.c0, rt0.c2, rt1.c4, rt0.c3, rt1.c1, rt1.c2 HAVING ((COUNT(COUNT(MAX(SUM(rt1.c1))))) ISNULL);
SELECT TOTAL((((~ (rt0.c3)))&((rt1.c0 IN ())))) FROM rt1, v0, rt0 ORDER BY ((((rt1.c1) IS FALSE)) NOTNULL) DESC  NULLS LAST;
SELECT rt0.c2, rt0.c0, rt0.c1, rt0.c3, rt0.c4 FROM rt0;
SELECT rt0.c2, rt0.c0, rt0.c1, rt0.c3, rt0.c4 FROM rt0 WHERE (rt0.c2) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c1, rt0.c3, rt0.c4 FROM rt0 WHERE ((NOT (rt0.c2))) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c1, rt0.c3, rt0.c4 FROM rt0 WHERE (((rt0.c2) ISNULL));
SELECT rt0.c2, rt0.c0, rt0.c1, rt0.c3, rt0.c4 FROM rt0;
SELECT DISTINCT * FROM rt1, v0;
SELECT DISTINCT * FROM rt1, v0 WHERE (CAST(v0.c1 AS INTEGER)) UNION SELECT DISTINCT * FROM rt1, v0 WHERE ((NOT (CAST(v0.c1 AS INTEGER)))) UNION SELECT DISTINCT * FROM rt1, v0 WHERE (((CAST(v0.c1 AS INTEGER)) ISNULL));
SELECT DISTINCT * FROM rt1, v0;
SELECT ALL rt0.c4 FROM rt0, rt1 GROUP BY rt0.c4;
SELECT rt0.c4 FROM rt0, rt1 WHERE ((((((rt1.c2)>>(rt1.c1))))>((rt0.c4 COLLATE NOCASE)))) GROUP BY rt0.c4 UNION SELECT rt0.c4 FROM rt0, rt1 WHERE ((NOT ((((((rt1.c2)>>(rt1.c1))))>((rt0.c4 COLLATE NOCASE)))))) GROUP BY rt0.c4 UNION SELECT rt0.c4 FROM rt0, rt1 WHERE ((((((((rt1.c2)>>(rt1.c1))))>((rt0.c4 COLLATE NOCASE)))) ISNULL)) GROUP BY rt0.c4;
SELECT ALL rt0.c4 FROM rt0, rt1 GROUP BY rt0.c4;
SELECT rt1.c4, rt1.c0, rt1.c1, rt1.c2, rt1.c3 FROM rt1 GROUP BY rt1.c4, rt1.c0, rt1.c1, rt1.c2, rt1.c3;
SELECT rt1.c4, rt1.c0, rt1.c1, rt1.c2, rt1.c3 FROM rt1 GROUP BY rt1.c4, rt1.c0, rt1.c1, rt1.c2, rt1.c3 HAVING CASE IFNULL(DISTINCT MIN(MAX(GROUP_CONCAT(GROUP_CONCAT(COUNT(*))))), MIN(GROUP_CONCAT(AVG(rt1.c2))))  WHEN ((((rt1.c0)OR('LaK54t')))AND(MAX(COUNT(*)))) THEN COUNT(rt1.c4) WHEN MAX(rt1.c0) THEN COUNT(rt1.c4) WHEN ((COUNT(*)) BETWEEN (MAX(rt1.c4)) AND (MAX(AVG(AVG(GROUP_CONCAT(rt1.c4)))))) THEN ((rt1.c0)GLOB(rt1.c2)) END UNION ALL SELECT ALL rt1.c4, rt1.c0, rt1.c1, rt1.c2, rt1.c3 FROM rt1 GROUP BY rt1.c4, rt1.c0, rt1.c1, rt1.c2, rt1.c3 HAVING (NOT (CASE IFNULL(DISTINCT MIN(MAX(GROUP_CONCAT(GROUP_CONCAT(COUNT(*))))), MIN(GROUP_CONCAT(AVG(rt1.c2))))  WHEN ((((rt1.c0)OR('LaK54t')))AND(MAX(COUNT(*)))) THEN COUNT(rt1.c4) WHEN MAX(rt1.c0) THEN COUNT(rt1.c4) WHEN ((COUNT(*)) BETWEEN (MAX(rt1.c4)) AND (MAX(AVG(AVG(GROUP_CONCAT(rt1.c4)))))) THEN ((rt1.c0)GLOB(rt1.c2)) END)) UNION ALL SELECT rt1.c4, rt1.c0, rt1.c1, rt1.c2, rt1.c3 FROM rt1 GROUP BY rt1.c4, rt1.c0, rt1.c1, rt1.c2, rt1.c3 HAVING ((CASE IFNULL(DISTINCT MIN(MAX(GROUP_CONCAT(GROUP_CONCAT(COUNT(*))))), MIN(GROUP_CONCAT(AVG(rt1.c2))))  WHEN ((((rt1.c0)OR('LaK54t')))AND(MAX(COUNT(*)))) THEN COUNT(rt1.c4) WHEN MAX(rt1.c0) THEN COUNT(rt1.c4) WHEN ((COUNT(*)) BETWEEN (MAX(rt1.c4)) AND (MAX(AVG(AVG(GROUP_CONCAT(rt1.c4)))))) THEN ((rt1.c0)GLOB(rt1.c2)) END) ISNULL);
SELECT rt1.c3, rt1.c1, rt0.c0, rt0.c2, rt0.c4, rt0.c1, rt1.c0, rt1.c2, rt0.c3, rt1.c4, v0.c1, v0.c0, v0.c2 FROM rt0 RIGHT OUTER JOIN rt1 ON ((load_extension(rt0.c3))LIKE(CASE WHEN rt0.c0 THEN rt0.c4 ELSE rt0.c0 END)) FULL OUTER JOIN v0 ON SQLITE_COMPILEOPTION_USED(((rt0.c2) BETWEEN (rt0.c4) AND (rt0.c1)));
SELECT DISTINCT * FROM rt0, rt1, v0;
SELECT DISTINCT * FROM rt0, rt1, v0 WHERE (((((((((((rt0.c0) IS TRUE))OR(CAST(rt1.c1 AS BLOB))))OR(((rt0.c4) BETWEEN (v0.c1) AND (rt0.c3)))))OR(CASE v0.c2  WHEN rt1.c1 THEN rt1.c4 ELSE rt0.c3 END)))OR(((rt1.c0) IS FALSE)))) UNION SELECT DISTINCT * FROM rt0, rt1, v0 WHERE ((NOT (((((((((((rt0.c0) IS TRUE))OR(CAST(rt1.c1 AS BLOB))))OR(((rt0.c4) BETWEEN (v0.c1) AND (rt0.c3)))))OR(CASE v0.c2  WHEN rt1.c1 THEN rt1.c4 ELSE rt0.c3 END)))OR(((rt1.c0) IS FALSE)))))) UNION SELECT DISTINCT * FROM rt0, rt1, v0 WHERE (((((((((((((rt0.c0) IS TRUE))OR(CAST(rt1.c1 AS BLOB))))OR(((rt0.c4) BETWEEN (v0.c1) AND (rt0.c3)))))OR(CASE v0.c2  WHEN rt1.c1 THEN rt1.c4 ELSE rt0.c3 END)))OR(((rt1.c0) IS FALSE)))) ISNULL));
SELECT DISTINCT * FROM rt0, rt1, v0;
SELECT ALL rt0.c1, rt1.c0, rt1.c2, rt0.c0, rt0.c2, rt1.c4, rt1.c3, rt1.c1, rt0.c4, rt0.c3 FROM rt0, rt1 GROUP BY rt0.c1, rt1.c0, rt1.c2, rt0.c0, rt0.c2, rt1.c4, rt1.c3, rt1.c1, rt0.c4, rt0.c3;
SELECT rt0.c1, rt1.c0, rt1.c2, rt0.c0, rt0.c2, rt1.c4, rt1.c3, rt1.c1, rt0.c4, rt0.c3 FROM rt0, rt1 WHERE (CAST(x'' AS NUMERIC) COLLATE BINARY) GROUP BY rt0.c1, rt1.c0, rt1.c2, rt0.c0, rt0.c2, rt1.c4, rt1.c3, rt1.c1, rt0.c4, rt0.c3 UNION SELECT ALL rt0.c1, rt1.c0, rt1.c2, rt0.c0, rt0.c2, rt1.c4, rt1.c3, rt1.c1, rt0.c4, rt0.c3 FROM rt0, rt1 WHERE ((NOT (CAST(x'' AS NUMERIC) COLLATE BINARY))) GROUP BY rt0.c1, rt1.c0, rt1.c2, rt0.c0, rt0.c2, rt1.c4, rt1.c3, rt1.c1, rt0.c4, rt0.c3 UNION SELECT ALL rt0.c1, rt1.c0, rt1.c2, rt0.c0, rt0.c2, rt1.c4, rt1.c3, rt1.c1, rt0.c4, rt0.c3 FROM rt0, rt1 WHERE (((CAST(x'' AS NUMERIC) COLLATE BINARY) ISNULL)) GROUP BY rt0.c1, rt1.c0, rt1.c2, rt0.c0, rt0.c2, rt1.c4, rt1.c3, rt1.c1, rt0.c4, rt0.c3;
SELECT ALL rt0.c1, rt1.c0, rt1.c2, rt0.c0, rt0.c2, rt1.c4, rt1.c3, rt1.c1, rt0.c4, rt0.c3 FROM rt0, rt1 GROUP BY rt0.c1, rt1.c0, rt1.c2, rt0.c0, rt0.c2, rt1.c4, rt1.c3, rt1.c1, rt0.c4, rt0.c3;
SELECT ALL rt0.c3, v0.c2, v0.c1 FROM v0, rt0 GROUP BY rt0.c3, v0.c2, v0.c1;
SELECT ALL rt0.c3, v0.c2, v0.c1 FROM v0, rt0 GROUP BY rt0.c3, v0.c2, v0.c1 HAVING SUM(CAST(rt0.c2 AS TEXT)) UNION ALL SELECT rt0.c3, v0.c2, v0.c1 FROM v0, rt0 GROUP BY rt0.c3, v0.c2, v0.c1 HAVING (NOT (SUM(CAST(rt0.c2 AS TEXT)))) UNION ALL SELECT ALL rt0.c3, v0.c2, v0.c1 FROM v0, rt0 GROUP BY rt0.c3, v0.c2, v0.c1 HAVING ((SUM(CAST(rt0.c2 AS TEXT))) ISNULL);
SELECT ALL rt0.c3, v0.c2, v0.c1 FROM v0, rt0 GROUP BY rt0.c3, v0.c2, v0.c1;
SELECT ALL rt0.c3, v0.c2, v0.c1 FROM v0, rt0 GROUP BY rt0.c3, v0.c2, v0.c1 HAVING SUM(CAST(rt0.c2 AS TEXT)) UNION ALL SELECT rt0.c3, v0.c2, v0.c1 FROM v0, rt0 GROUP BY rt0.c3, v0.c2, v0.c1 HAVING (NOT (SUM(CAST(rt0.c2 AS TEXT)))) UNION ALL SELECT ALL rt0.c3, v0.c2, v0.c1 FROM v0, rt0 GROUP BY rt0.c3, v0.c2, v0.c1 HAVING ((SUM(CAST(rt0.c2 AS TEXT))) ISNULL);
SELECT ALL rt0.c3, v0.c2, v0.c1 FROM v0, rt0 GROUP BY rt0.c3, v0.c2, v0.c1;
SELECT * FROM rt1, rt0, v0;
SELECT ALL * FROM rt1, rt0, v0 WHERE (((((json_extract(rt0.c1, v0.c1, '-538087519', v0.c2))OR((~ (x'ec46')))))OR(CASE rt0.c1  WHEN rt0.c0 THEN rt0.c4 END))) UNION ALL SELECT ALL * FROM rt1, rt0, v0 WHERE ((NOT (((((json_extract(rt0.c1, v0.c1, '-538087519', v0.c2))OR((~ (x'ec46')))))OR(CASE rt0.c1  WHEN rt0.c0 THEN rt0.c4 END))))) UNION ALL SELECT * FROM rt1, rt0, v0 WHERE (((((((json_extract(rt0.c1, v0.c1, '-538087519', v0.c2))OR((~ (x'ec46')))))OR(CASE rt0.c1  WHEN rt0.c0 THEN rt0.c4 END))) ISNULL));
SELECT * FROM rt1, rt0, v0;
SELECT DISTINCT rt0.c4, rt1.c4 FROM rt1, rt0;
SELECT DISTINCT rt0.c4, rt1.c4 FROM rt1, rt0 WHERE (((((rt1.c3) BETWEEN (rt1.c4) AND (rt0.c0))) ISNULL)) UNION SELECT DISTINCT rt0.c4, rt1.c4 FROM rt1, rt0 WHERE ((NOT (((((rt1.c3) BETWEEN (rt1.c4) AND (rt0.c0))) ISNULL)))) UNION SELECT DISTINCT rt0.c4, rt1.c4 FROM rt1, rt0 WHERE (((((((rt1.c3) BETWEEN (rt1.c4) AND (rt0.c0))) ISNULL)) ISNULL));
SELECT DISTINCT rt0.c4, rt1.c4 FROM rt1, rt0;
SELECT v0.c1 FROM v0 GROUP BY v0.c1;
SELECT ALL v0.c1 FROM v0 WHERE ((((v0.c0 COLLATE RTRIM, v0.c0, CAST(v0.c1 AS TEXT), ((v0.c2) IS TRUE), CAST(NULL AS REAL)))<>((json_type(v0.c2), '1~>)*1VY*', ((v0.c2) NOT BETWEEN (v0.c1) AND (NULL)), ((v0.c2)%(v0.c2)), 0X5b111602)))) GROUP BY v0.c1 UNION SELECT v0.c1 FROM v0 WHERE ((NOT ((((v0.c0 COLLATE RTRIM, v0.c0, CAST(v0.c1 AS TEXT), ((v0.c2) IS TRUE), CAST(NULL AS REAL)))<>((json_type(v0.c2), '1~>)*1VY*', ((v0.c2) NOT BETWEEN (v0.c1) AND (NULL)), ((v0.c2)%(v0.c2)), 0x5b111602)))))) GROUP BY v0.c1 UNION SELECT v0.c1 FROM v0 WHERE ((((((v0.c0 COLLATE RTRIM, v0.c0, CAST(v0.c1 AS TEXT), ((v0.c2) IS TRUE), CAST(NULL AS REAL)))!=((json_type(v0.c2), '1~>)*1VY*', ((v0.c2) NOT BETWEEN (v0.c1) AND (NULL)), ((v0.c2)%(v0.c2)), 0x5b111602)))) ISNULL)) GROUP BY v0.c1;
SELECT v0.c1 FROM v0 GROUP BY v0.c1;
SELECT rt1.c1, rt0.c2, v0.c0, rt1.c4, rt0.c0, v0.c2, rt1.c0, rt0.c4, rt0.c3 FROM v0, rt1, rt0 GROUP BY rt1.c1, rt0.c2, v0.c0, rt1.c4, rt0.c0, v0.c2, rt1.c0, rt0.c4, rt0.c3;
SELECT ALL rt1.c1, rt0.c2, v0.c0, rt1.c4, rt0.c0, v0.c2, rt1.c0, rt0.c4, rt0.c3 FROM v0, rt1, rt0 GROUP BY rt1.c1, rt0.c2, v0.c0, rt1.c4, rt0.c0, v0.c2, rt1.c0, rt0.c4, rt0.c3 HAVING SUM(TOTAL(rt0.c1)) UNION ALL SELECT rt1.c1, rt0.c2, v0.c0, rt1.c4, rt0.c0, v0.c2, rt1.c0, rt0.c4, rt0.c3 FROM v0, rt1, rt0 GROUP BY rt1.c1, rt0.c2, v0.c0, rt1.c4, rt0.c0, v0.c2, rt1.c0, rt0.c4, rt0.c3 HAVING (NOT (SUM(TOTAL(rt0.c1)))) UNION ALL SELECT ALL rt1.c1, rt0.c2, v0.c0, rt1.c4, rt0.c0, v0.c2, rt1.c0, rt0.c4, rt0.c3 FROM v0, rt1, rt0 GROUP BY rt1.c1, rt0.c2, v0.c0, rt1.c4, rt0.c0, v0.c2, rt1.c0, rt0.c4, rt0.c3 HAVING ((SUM(TOTAL(rt0.c1))) ISNULL);
SELECT * FROM v0;
SELECT ALL * FROM v0 WHERE (((((((((((((v0.c2)OR(v0.c0)))OR(v0.c2)))AND(v0.c0)))OR(v0.c2)))AND(v0.c0)))AND('0.8580091863662729'))) UNION ALL SELECT * FROM v0 WHERE ((NOT (((((((((((((v0.c2)OR(v0.c0)))OR(v0.c2)))AND(v0.c0)))OR(v0.c2)))AND(v0.c0)))AND('0.8580091863662729'))))) UNION ALL SELECT * FROM v0 WHERE (((((((((((((((v0.c2)OR(v0.c0)))OR(v0.c2)))AND(v0.c0)))OR(v0.c2)))AND(v0.c0)))AND('0.8580091863662729'))) ISNULL));
SELECT * FROM v0;
SELECT DISTINCT rt1.c2, rt1.c1, rt1.c3, rt1.c0 FROM rt1;
SELECT DISTINCT rt1.c2, rt1.c1, rt1.c3, rt1.c0 FROM rt1 WHERE ((+ ((- (rt1.c0))))) UNION SELECT DISTINCT rt1.c2, rt1.c1, rt1.c3, rt1.c0 FROM rt1 WHERE ((NOT ((+ ((- (rt1.c0))))))) UNION SELECT DISTINCT rt1.c2, rt1.c1, rt1.c3, rt1.c0 FROM rt1 WHERE ((((+ ((- (rt1.c0))))) ISNULL));
SELECT DISTINCT rt1.c2, rt1.c1, rt1.c3, rt1.c0 FROM rt1;
SELECT ALL v0.c1, rt1.c4, rt1.c3, rt0.c3, rt0.c4, rt1.c0, v0.c0 FROM rt0, rt1, v0 GROUP BY v0.c1, rt1.c4, rt1.c3, rt0.c3, rt0.c4, rt1.c0, v0.c0;
SELECT v0.c1, rt1.c4, rt1.c3, rt0.c3, rt0.c4, rt1.c0, v0.c0 FROM rt0, rt1, v0 WHERE (' ,({gU9O') GROUP BY v0.c1, rt1.c4, rt1.c3, rt0.c3, rt0.c4, rt1.c0, v0.c0 UNION SELECT v0.c1, rt1.c4, rt1.c3, rt0.c3, rt0.c4, rt1.c0, v0.c0 FROM rt0, rt1, v0 WHERE ((NOT (' ,({gU9O'))) GROUP BY v0.c1, rt1.c4, rt1.c3, rt0.c3, rt0.c4, rt1.c0, v0.c0 UNION SELECT ALL v0.c1, rt1.c4, rt1.c3, rt0.c3, rt0.c4, rt1.c0, v0.c0 FROM rt0, rt1, v0 WHERE (((' ,({gU9O') ISNULL)) GROUP BY v0.c1, rt1.c4, rt1.c3, rt0.c3, rt0.c4, rt1.c0, v0.c0;
SELECT ALL v0.c1, rt1.c4, rt1.c3, rt0.c3, rt0.c4, rt1.c0, v0.c0 FROM rt0, rt1, v0 GROUP BY v0.c1, rt1.c4, rt1.c3, rt0.c3, rt0.c4, rt1.c0, v0.c0;
SELECT ALL rt1.c3, rt1.c2, rt1.c1, v0.c0, v0.c1 FROM rt1, v0 GROUP BY rt1.c3, rt1.c2, rt1.c1, v0.c0, v0.c1;
SELECT rt1.c3, rt1.c2, rt1.c1, v0.c0, v0.c1 FROM rt1, v0 GROUP BY rt1.c3, rt1.c2, rt1.c1, v0.c0, v0.c1 HAVING COUNT(*) UNION ALL SELECT ALL rt1.c3, rt1.c2, rt1.c1, v0.c0, v0.c1 FROM rt1, v0 GROUP BY rt1.c3, rt1.c2, rt1.c1, v0.c0, v0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt1.c3, rt1.c2, rt1.c1, v0.c0, v0.c1 FROM rt1, v0 GROUP BY rt1.c3, rt1.c2, rt1.c1, v0.c0, v0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt1.c3, rt1.c2, rt1.c1, v0.c0, v0.c1 FROM rt1, v0 GROUP BY rt1.c3, rt1.c2, rt1.c1, v0.c0, v0.c1;
SELECT rt1.c3, rt1.c2, rt1.c1, v0.c0, v0.c1 FROM rt1, v0 GROUP BY rt1.c3, rt1.c2, rt1.c1, v0.c0, v0.c1 HAVING COUNT(*) UNION ALL SELECT ALL rt1.c3, rt1.c2, rt1.c1, v0.c0, v0.c1 FROM rt1, v0 GROUP BY rt1.c3, rt1.c2, rt1.c1, v0.c0, v0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt1.c3, rt1.c2, rt1.c1, v0.c0, v0.c1 FROM rt1, v0 GROUP BY rt1.c3, rt1.c2, rt1.c1, v0.c0, v0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt1.c3, rt1.c2, rt1.c1, v0.c0, v0.c1 FROM rt1, v0 GROUP BY rt1.c3, rt1.c2, rt1.c1, v0.c0, v0.c1;
SELECT ALL * FROM v0, rt0;
SELECT ALL * FROM v0, rt0 WHERE (x'') UNION ALL SELECT ALL * FROM v0, rt0 WHERE ((NOT (x''))) UNION ALL SELECT ALL * FROM v0, rt0 WHERE (((x'') ISNULL));
SELECT ALL * FROM v0, rt0;
SELECT DISTINCT rt1.c3, rt1.c1, rt1.c2, rt1.c4, rt1.c0 FROM rt1;
SELECT DISTINCT rt1.c3, rt1.c1, rt1.c2, rt1.c4, rt1.c0 FROM rt1 WHERE ((((rt1.c4 IN (0.27385297453717916, rt1.c3))) BETWEEN ((~ (rt1.c2))) AND (rt1.c4 COLLATE NOCASE))) UNION SELECT DISTINCT rt1.c3, rt1.c1, rt1.c2, rt1.c4, rt1.c0 FROM rt1 WHERE ((NOT ((((rt1.c4 IN (0.27385297453717916, rt1.c3))) BETWEEN ((~ (rt1.c2))) AND (rt1.c4 COLLATE NOCASE))))) UNION SELECT DISTINCT rt1.c3, rt1.c1, rt1.c2, rt1.c4, rt1.c0 FROM rt1 WHERE ((((((rt1.c4 IN (0.27385297453717916, rt1.c3))) BETWEEN ((~ (rt1.c2))) AND (rt1.c4 COLLATE NOCASE))) ISNULL));
SELECT DISTINCT rt1.c3, rt1.c1, rt1.c2, rt1.c4, rt1.c0 FROM rt1;
SELECT rt0.c3, rt0.c1 FROM rt0 GROUP BY rt0.c3, rt0.c1;
SELECT ALL rt0.c3, rt0.c1 FROM rt0 WHERE ((((HEX(DISTINCT rt0.c4)))<=((CASE rt0.c2  WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c3 END)))) GROUP BY rt0.c3, rt0.c1 UNION SELECT ALL rt0.c3, rt0.c1 FROM rt0 WHERE ((NOT ((((HEX(DISTINCT rt0.c4)))<=((CASE rt0.c2  WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c3 END)))))) GROUP BY rt0.c3, rt0.c1 UNION SELECT ALL rt0.c3, rt0.c1 FROM rt0 WHERE ((((((HEX(DISTINCT rt0.c4)))<=((CASE rt0.c2  WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c3 END)))) ISNULL)) GROUP BY rt0.c3, rt0.c1;
SELECT rt0.c3, rt0.c1 FROM rt0 GROUP BY rt0.c3, rt0.c1;
SELECT rt0.c2 FROM rt0, v0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0, v0 GROUP BY rt0.c2 HAVING ((((v0.c1)||(rt0.c0))) NOTNULL) UNION ALL SELECT rt0.c2 FROM rt0, v0 GROUP BY rt0.c2 HAVING (NOT (((((v0.c1)||(rt0.c0))) NOTNULL))) UNION ALL SELECT ALL rt0.c2 FROM rt0, v0 GROUP BY rt0.c2 HAVING ((((((v0.c1)||(rt0.c0))) NOTNULL)) ISNULL);
SELECT rt0.c2 FROM rt0, v0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0, v0 GROUP BY rt0.c2 HAVING ((((v0.c1)||(rt0.c0))) NOTNULL) UNION ALL SELECT rt0.c2 FROM rt0, v0 GROUP BY rt0.c2 HAVING (NOT (((((v0.c1)||(rt0.c0))) NOTNULL))) UNION ALL SELECT ALL rt0.c2 FROM rt0, v0 GROUP BY rt0.c2 HAVING ((((((v0.c1)||(rt0.c0))) NOTNULL)) ISNULL);
SELECT rt0.c2 FROM rt0, v0 GROUP BY rt0.c2;
SELECT rt0.c3, rt0.c4, rt0.c2, v0.c1, rt0.c0, v0.c0, v0.c2, rt0.c1 FROM v0, rt0;
SELECT ALL rt0.c3, rt0.c4, rt0.c2, v0.c1, rt0.c0, v0.c0, v0.c2, rt0.c1 FROM v0, rt0 WHERE ((((v0.c0))<(((~ (v0.c1)))))) UNION ALL SELECT ALL rt0.c3, rt0.c4, rt0.c2, v0.c1, rt0.c0, v0.c0, v0.c2, rt0.c1 FROM v0, rt0 WHERE ((NOT ((((v0.c0))<(((~ (v0.c1)))))))) UNION ALL SELECT ALL rt0.c3, rt0.c4, rt0.c2, v0.c1, rt0.c0, v0.c0, v0.c2, rt0.c1 FROM v0, rt0 WHERE ((((((v0.c0))<(((~ (v0.c1)))))) ISNULL));
SELECT rt0.c3, rt0.c4, rt0.c2, v0.c1, rt0.c0, v0.c0, v0.c2, rt0.c1 FROM v0, rt0;
SELECT DISTINCT rt1.c2, v0.c2 FROM v0, rt1 CROSS JOIN rt0 ON (((((rt1.c1, rt0.c0, rt0.c1))>((v0.c2, rt1.c0, rt0.c1)))) IS TRUE);
SELECT DISTINCT rt1.c2, v0.c2 FROM v0, rt1 CROSS JOIN rt0 ON (((((rt1.c1, rt0.c0, rt0.c1))>((v0.c2, rt1.c0, rt0.c1)))) IS TRUE) WHERE (rt0.c4) UNION SELECT DISTINCT rt1.c2, v0.c2 FROM v0, rt1 CROSS JOIN rt0 ON (((((rt1.c1, rt0.c0, rt0.c1))>((v0.c2, rt1.c0, rt0.c1)))) IS TRUE) WHERE ((NOT (rt0.c4))) UNION SELECT DISTINCT rt1.c2, v0.c2 FROM v0, rt1 CROSS JOIN rt0 ON (((((rt1.c1, rt0.c0, rt0.c1))>((v0.c2, rt1.c0, rt0.c1)))) IS TRUE) WHERE (((rt0.c4) ISNULL));
SELECT DISTINCT rt1.c2, v0.c2 FROM v0, rt1 CROSS JOIN rt0 ON (((((rt1.c1, rt0.c0, rt0.c1))>((v0.c2, rt1.c0, rt0.c1)))) IS TRUE);
SELECT ALL rt1.c3 FROM rt0, rt1 GROUP BY rt1.c3;
SELECT rt1.c3 FROM rt0, rt1 WHERE (CAST((~ (NULL)) AS NUMERIC)) GROUP BY rt1.c3 UNION SELECT rt1.c3 FROM rt0, rt1 NOT INDEXED WHERE ((NOT (CAST((~ (NULL)) AS NUMERIC)))) GROUP BY rt1.c3 UNION SELECT ALL rt1.c3 FROM rt0, rt1 WHERE (((CAST((~ (NULL)) AS NUMERIC)) ISNULL)) GROUP BY rt1.c3;
SELECT ALL rt1.c3 FROM rt0, rt1 GROUP BY rt1.c3;
SELECT ALL v0.c0, v0.c2, rt0.c2, rt0.c3 FROM rt0, v0 GROUP BY v0.c0, v0.c2, rt0.c2, rt0.c3;
SELECT ALL v0.c0, v0.c2, rt0.c2, rt0.c3 FROM rt0, v0 GROUP BY v0.c0, v0.c2, rt0.c2, rt0.c3 HAVING CAST(((AVG(MIN(COUNT(rt0.c2)))) NOT NULL) AS INTEGER) UNION ALL SELECT v0.c0, v0.c2, rt0.c2, rt0.c3 FROM rt0, v0 GROUP BY v0.c0, v0.c2, rt0.c2, rt0.c3 HAVING (NOT (CAST(((AVG(MIN(COUNT(rt0.c2)))) NOT NULL) AS INTEGER))) UNION ALL SELECT v0.c0, v0.c2, rt0.c2, rt0.c3 FROM rt0, v0 GROUP BY v0.c0, v0.c2, rt0.c2, rt0.c3 HAVING ((CAST(((AVG(MIN(COUNT(rt0.c2)))) NOT NULL) AS INTEGER)) ISNULL);
SELECT ALL rt1.c3, rt1.c2, rt1.c0, rt0.c0, rt0.c2, v0.c2, rt0.c3, rt1.c1, rt1.c4, v0.c0, v0.c1, rt0.c4 FROM rt1, rt0, v0;
SELECT rt1.c3, rt1.c2, rt1.c0, rt0.c0, rt0.c2, v0.c2, rt0.c3, rt1.c1, rt1.c4, v0.c0, v0.c1, rt0.c4 FROM rt1, rt0, v0 WHERE (((((((((v0.c0 COLLATE RTRIM)AND(((NULL) NOT BETWEEN (rt1.c0) AND (rt0.c2)))))OR(NULL)))AND(((v0.c1)<=(rt1.c0)))))AND(((rt0.c0)<<(rt0.c2))))) UNION ALL SELECT ALL rt1.c3, rt1.c2, rt1.c0, rt0.c0, rt0.c2, v0.c2, rt0.c3, rt1.c1, rt1.c4, v0.c0, v0.c1, rt0.c4 FROM rt1, rt0, v0 WHERE ((NOT (((((((((v0.c0 COLLATE RTRIM)AND(((NULL) NOT BETWEEN (rt1.c0) AND (rt0.c2)))))OR(NULL)))AND(((v0.c1)<=(rt1.c0)))))AND(((rt0.c0)<<(rt0.c2))))))) UNION ALL SELECT ALL rt1.c3, rt1.c2, rt1.c0, rt0.c0, rt0.c2, v0.c2, rt0.c3, rt1.c1, rt1.c4, v0.c0, v0.c1, rt0.c4 FROM rt1, rt0, v0 WHERE (((((((((((v0.c0 COLLATE RTRIM)AND(((NULL) NOT BETWEEN (rt1.c0) AND (rt0.c2)))))OR(NULL)))AND(((v0.c1)<=(rt1.c0)))))AND(((rt0.c0)<<(rt0.c2))))) ISNULL));
SELECT ALL rt1.c3, rt1.c2, rt1.c0, rt0.c0, rt0.c2, v0.c2, rt0.c3, rt1.c1, rt1.c4, v0.c0, v0.c1, rt0.c4 FROM rt1, rt0, v0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((- (rt0.c0)) IN ())) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((- (rt0.c0)) IN ())))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((- (rt0.c0)) IN ())) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt1.c1 FROM rt1 GROUP BY rt1.c1;
SELECT rt1.c1 FROM rt1 WHERE (rt1.c4) GROUP BY rt1.c1 UNION SELECT rt1.c1 FROM rt1 WHERE ((NOT (rt1.c4))) GROUP BY rt1.c1 UNION SELECT rt1.c1 FROM rt1 WHERE (((rt1.c4) ISNULL)) GROUP BY rt1.c1;
SELECT ALL rt1.c1 FROM rt1 GROUP BY rt1.c1;
SELECT rt1.c4, rt1.c0, rt1.c1, rt0.c4, rt0.c3, rt1.c2 FROM rt1, rt0 GROUP BY rt1.c4, rt1.c0, rt1.c1, rt0.c4, rt0.c3, rt1.c2;
SELECT rt1.c4, rt1.c0, rt1.c1, rt0.c4, rt0.c3, rt1.c2 FROM rt1, rt0 GROUP BY rt1.c4, rt1.c0, rt1.c1, rt0.c4, rt0.c3, rt1.c2 HAVING ((COUNT(*))<=(SUM(MAX(MIN(AVG(MAX(MAX(SUM(MAX(rt0.c1)))))))))) UNION ALL SELECT ALL rt1.c4, rt1.c0, rt1.c1, rt0.c4, rt0.c3, rt1.c2 FROM rt1, rt0 GROUP BY rt1.c4, rt1.c0, rt1.c1, rt0.c4, rt0.c3, rt1.c2 HAVING (NOT (((COUNT(*))<=(SUM(MAX(MIN(AVG(MAX(MAX(SUM(MAX(rt0.c1)))))))))))) UNION ALL SELECT rt1.c4, rt1.c0, rt1.c1, rt0.c4, rt0.c3, rt1.c2 FROM rt1, rt0 GROUP BY rt1.c4, rt1.c0, rt1.c1, rt0.c4, rt0.c3, rt1.c2 HAVING ((((COUNT(*))<=(SUM(MAX(MIN(AVG(MAX(MAX(SUM(MAX(rt0.c1))))))))))) ISNULL);
SELECT ALL v0.c0, rt0.c0, rt0.c4, rt0.c3, rt0.c1, v0.c2, rt0.c2, v0.c1 FROM rt0, v0;
SELECT ALL v0.c0, rt0.c0, rt0.c4, rt0.c3, rt0.c1, v0.c2, rt0.c2, v0.c1 FROM rt0, v0 WHERE (NULL) UNION ALL SELECT v0.c0, rt0.c0, rt0.c4, rt0.c3, rt0.c1, v0.c2, rt0.c2, v0.c1 FROM rt0, v0 WHERE ((NOT (NULL))) UNION ALL SELECT v0.c0, rt0.c0, rt0.c4, rt0.c3, rt0.c1, v0.c2, rt0.c2, v0.c1 FROM rt0, v0 WHERE (((NULL) ISNULL));
SELECT ALL v0.c0, rt0.c0, rt0.c4, rt0.c3, rt0.c1, v0.c2, rt0.c2, v0.c1 FROM rt0, v0;
SELECT DISTINCT v0.c2, rt0.c3, rt0.c1, v0.c0, rt0.c2, rt0.c0, rt0.c4, v0.c1 FROM v0 FULL OUTER JOIN rt0 ON CAST(CASE rt0.c3  WHEN rt0.c3 THEN rt0.c3 ELSE v0.c2 END AS TEXT);
SELECT DISTINCT v0.c2, rt0.c3, rt0.c1, v0.c0, rt0.c2, rt0.c0, rt0.c4, v0.c1 FROM v0 FULL OUTER JOIN rt0 ON CAST(CASE rt0.c3  WHEN rt0.c3 THEN rt0.c3 ELSE v0.c2 END AS TEXT) WHERE ((((((NULL))>=((v0.c1))))!=((rt0.c4 IN ())))) UNION SELECT DISTINCT v0.c2, rt0.c3, rt0.c1, v0.c0, rt0.c2, rt0.c0, rt0.c4, v0.c1 FROM v0 FULL OUTER JOIN rt0 ON CAST(CASE rt0.c3  WHEN rt0.c3 THEN rt0.c3 ELSE v0.c2 END AS TEXT) WHERE ((NOT ((((((NULL))>=((v0.c1))))!=((rt0.c4 IN ())))))) UNION SELECT DISTINCT v0.c2, rt0.c3, rt0.c1, v0.c0, rt0.c2, rt0.c0, rt0.c4, v0.c1 FROM v0 FULL OUTER JOIN rt0 ON CAST(CASE rt0.c3  WHEN rt0.c3 THEN rt0.c3 ELSE v0.c2 END AS TEXT) WHERE ((((((((NULL))>=((v0.c1))))<>((rt0.c4 IN ())))) ISNULL));
SELECT DISTINCT v0.c2, rt0.c3, rt0.c1, v0.c0, rt0.c2, rt0.c0, rt0.c4, v0.c1 FROM v0 FULL OUTER JOIN rt0 ON CAST(CASE rt0.c3  WHEN rt0.c3 THEN rt0.c3 ELSE v0.c2 END AS TEXT);
SELECT rt0.c1 FROM rt1, rt0, v0 NOT INDEXED GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt1, rt0, v0 WHERE ((((((rt0.c1))!=((v0.c1)))) IS FALSE)) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt1, rt0, v0 WHERE ((NOT ((((((rt0.c1))!=((v0.c1)))) IS FALSE)))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt1, rt0, v0 WHERE ((((((((rt0.c1))<>((v0.c1)))) IS FALSE)) ISNULL)) GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt1, rt0, v0 NOT INDEXED GROUP BY rt0.c1;
SELECT ALL v0.c2, rt0.c4, v0.c0 FROM v0, rt0 GROUP BY v0.c2, rt0.c4, v0.c0;
SELECT ALL v0.c2, rt0.c4, v0.c0 FROM v0, rt0 GROUP BY v0.c2, rt0.c4, v0.c0 HAVING ((((SUM(v0.c0) COLLATE BINARY)AND(COUNT(COUNT(MAX(rt0.c3))))))AND((NOT (rt0.c2)))) UNION ALL SELECT ALL v0.c2, rt0.c4, v0.c0 FROM v0, rt0 GROUP BY v0.c2, rt0.c4, v0.c0 HAVING (NOT (((((SUM(v0.c0) COLLATE BINARY)AND(COUNT(COUNT(MAX(rt0.c3))))))AND((NOT (rt0.c2)))))) UNION ALL SELECT v0.c2, rt0.c4, v0.c0 FROM v0, rt0 GROUP BY v0.c2, rt0.c4, v0.c0 HAVING ((((((SUM(v0.c0) COLLATE BINARY)AND(COUNT(COUNT(MAX(rt0.c3))))))AND((NOT (rt0.c2))))) ISNULL);
SELECT * FROM v0;
SELECT * FROM v0 WHERE (((((v0.c2) ISNULL))>(TRIM(DISTINCT v0.c2)))) UNION ALL SELECT ALL * FROM v0 WHERE ((NOT (((((v0.c2) ISNULL))>(TRIM(DISTINCT v0.c2)))))) UNION ALL SELECT ALL * FROM v0 WHERE (((((((v0.c2) ISNULL))>(TRIM(DISTINCT v0.c2)))) ISNULL));
SELECT * FROM v0;
SELECT DISTINCT * FROM rt1;
SELECT DISTINCT * FROM rt1 WHERE (rt1.c0) UNION SELECT DISTINCT * FROM rt1 WHERE ((NOT (rt1.c0))) UNION SELECT DISTINCT * FROM rt1 WHERE (((rt1.c0) ISNULL));
SELECT DISTINCT * FROM rt1;
SELECT rt1.c2 FROM rt1 RIGHT OUTER JOIN v0 ON ((0.8201078077568412) BETWEEN (((rt1.c1)+(rt1.c1))) AND (((0.4026326405951135) IS TRUE))) GROUP BY rt1.c2;
SELECT ALL rt1.c2 FROM rt1 RIGHT OUTER JOIN v0 ON ((0.8201078077568412) BETWEEN (((rt1.c1)+(rt1.c1))) AND (((0.4026326405951135) IS TRUE))) WHERE (CASE WHEN (((v0.c2, rt1.c4, v0.c2)) NOT BETWEEN ((rt1.c2, rt1.c3, rt1.c2)) AND ((rt1.c3, v0.c0, v0.c0))) THEN CAST(0.4628130778869578 AS TEXT) WHEN (v0.c2 IN ()) THEN TRIM(rt1.c4, rt1.c3) WHEN ((rt1.c3)LIKE(rt1.c3)) THEN CAST(v0.c2 AS BLOB) WHEN v0.c0 THEN CASE WHEN v0.c2 THEN v0.c1 WHEN rt1.c3 THEN rt1.c0 WHEN rt1.c1 THEN rt1.c3 END WHEN (NOT (rt1.c4)) THEN ((((((((v0.c1)AND(rt1.c4)))AND(rt1.c2)))AND(v0.c2)))AND(v0.c1)) ELSE ((((rt1.c2)OR(rt1.c2)))AND(v0.c2)) END) GROUP BY rt1.c2 UNION SELECT ALL rt1.c2 FROM rt1 RIGHT OUTER JOIN v0 ON ((0.8201078077568412) BETWEEN (((rt1.c1)+(rt1.c1))) AND (((0.4026326405951135) IS TRUE))) WHERE ((NOT (CASE WHEN (((v0.c2, rt1.c4, v0.c2)) NOT BETWEEN ((rt1.c2, rt1.c3, rt1.c2)) AND ((rt1.c3, v0.c0, v0.c0))) THEN CAST(0.4628130778869578 AS TEXT) WHEN (v0.c2 IN ()) THEN TRIM(rt1.c4, rt1.c3) WHEN ((rt1.c3)LIKE(rt1.c3)) THEN CAST(v0.c2 AS BLOB) WHEN v0.c0 THEN CASE WHEN v0.c2 THEN v0.c1 WHEN rt1.c3 THEN rt1.c0 WHEN rt1.c1 THEN rt1.c3 END WHEN (NOT (rt1.c4)) THEN ((((((((v0.c1)AND(rt1.c4)))AND(rt1.c2)))AND(v0.c2)))AND(v0.c1)) ELSE ((((rt1.c2)OR(rt1.c2)))AND(v0.c2)) END))) GROUP BY rt1.c2 UNION SELECT rt1.c2 FROM rt1 RIGHT OUTER JOIN v0 ON ((0.8201078077568412) BETWEEN (((rt1.c1)+(rt1.c1))) AND (((0.4026326405951135) IS TRUE))) WHERE (((CASE WHEN (((v0.c2, rt1.c4, v0.c2)) NOT BETWEEN ((rt1.c2, rt1.c3, rt1.c2)) AND ((rt1.c3, v0.c0, v0.c0))) THEN CAST(0.4628130778869578 AS TEXT) WHEN (v0.c2 IN ()) THEN TRIM(rt1.c4, rt1.c3) WHEN ((rt1.c3)LIKE(rt1.c3)) THEN CAST(v0.c2 AS BLOB) WHEN v0.c0 THEN CASE WHEN v0.c2 THEN v0.c1 WHEN rt1.c3 THEN rt1.c0 WHEN rt1.c1 THEN rt1.c3 END WHEN (NOT (rt1.c4)) THEN ((((((((v0.c1)AND(rt1.c4)))AND(rt1.c2)))AND(v0.c2)))AND(v0.c1)) ELSE ((((rt1.c2)OR(rt1.c2)))AND(v0.c2)) END) ISNULL)) GROUP BY rt1.c2;
SELECT rt1.c2 FROM rt1 RIGHT OUTER JOIN v0 ON ((0.8201078077568412) BETWEEN (((rt1.c1)+(rt1.c1))) AND (((0.4026326405951135) IS TRUE))) GROUP BY rt1.c2;
SELECT ALL rt0.c3, rt1.c2 FROM rt0, rt1 GROUP BY rt0.c3, rt1.c2;
SELECT rt0.c3, rt1.c2 FROM rt0, rt1 GROUP BY rt0.c3, rt1.c2 HAVING MIN(((rt1.c2)>(rt1.c2))) UNION ALL SELECT ALL rt0.c3, rt1.c2 FROM rt0, rt1 GROUP BY rt0.c3, rt1.c2 HAVING (NOT (MIN(((rt1.c2)>(rt1.c2))))) UNION ALL SELECT rt0.c3, rt1.c2 FROM rt0, rt1 GROUP BY rt0.c3, rt1.c2 HAVING ((MIN(((rt1.c2)>(rt1.c2)))) ISNULL);
SELECT ALL rt0.c3, rt1.c2 FROM rt0, rt1 GROUP BY rt0.c3, rt1.c2;
SELECT rt0.c3, rt1.c2 FROM rt0, rt1 GROUP BY rt0.c3, rt1.c2 HAVING MIN(((rt1.c2)>(rt1.c2))) UNION ALL SELECT ALL rt0.c3, rt1.c2 FROM rt0, rt1 GROUP BY rt0.c3, rt1.c2 HAVING (NOT (MIN(((rt1.c2)>(rt1.c2))))) UNION ALL SELECT rt0.c3, rt1.c2 FROM rt0, rt1 GROUP BY rt0.c3, rt1.c2 HAVING ((MIN(((rt1.c2)>(rt1.c2)))) ISNULL);
SELECT ALL rt0.c3, rt1.c2 FROM rt0, rt1 GROUP BY rt0.c3, rt1.c2;
SELECT * FROM rt0, v0;
SELECT * FROM rt0, v0 WHERE (((v0.c1)*((+ (rt0.c3))))) UNION ALL SELECT ALL * FROM rt0, v0 WHERE ((NOT (((v0.c1)*((+ (rt0.c3))))))) UNION ALL SELECT * FROM rt0, v0 WHERE (((((v0.c1)*((+ (rt0.c3))))) ISNULL));
SELECT * FROM rt0, v0;
SELECT DISTINCT v0.c1 FROM v0, rt1;
SELECT DISTINCT v0.c1 FROM v0, rt1 WHERE (CASE WHEN '-1147655423' COLLATE BINARY THEN (((rt1.c1, rt1.c0, rt1.c1, v0.c0, rt1.c4)) BETWEEN ((rt1.c4, rt1.c2, '1395891708', v0.c2, rt1.c4)) AND ((rt1.c2, x'ba5c', v0.c2, rt1.c3, rt1.c4))) ELSE rt1.c2 END) UNION SELECT DISTINCT v0.c1 FROM v0, rt1 WHERE ((NOT (CASE WHEN '-1147655423' COLLATE BINARY THEN (((rt1.c1, rt1.c0, rt1.c1, v0.c0, rt1.c4)) BETWEEN ((rt1.c4, rt1.c2, '1395891708', v0.c2, rt1.c4)) AND ((rt1.c2, x'ba5c', v0.c2, rt1.c3, rt1.c4))) ELSE rt1.c2 END))) UNION SELECT DISTINCT v0.c1 FROM v0, rt1 WHERE (((CASE WHEN '-1147655423' COLLATE BINARY THEN (((rt1.c1, rt1.c0, rt1.c1, v0.c0, rt1.c4)) BETWEEN ((rt1.c4, rt1.c2, '1395891708', v0.c2, rt1.c4)) AND ((rt1.c2, x'ba5c', v0.c2, rt1.c3, rt1.c4))) ELSE rt1.c2 END) ISNULL));
SELECT DISTINCT v0.c1 FROM v0, rt1;
SELECT rt1.c4 FROM v0, rt1 GROUP BY rt1.c4;
SELECT ALL rt1.c4 FROM v0, rt1 WHERE (x'5230') GROUP BY rt1.c4 UNION SELECT rt1.c4 FROM v0, rt1 WHERE ((NOT (x'5230'))) GROUP BY rt1.c4 UNION SELECT rt1.c4 FROM v0, rt1 WHERE (((x'5230') ISNULL)) GROUP BY rt1.c4;
SELECT rt1.c4 FROM v0, rt1 GROUP BY rt1.c4;
SELECT ALL v0.c0 FROM rt1, v0 GROUP BY v0.c0;
SELECT v0.c0 FROM rt1, v0 GROUP BY v0.c0 HAVING (((GROUP_CONCAT(rt1.c0))) NOT BETWEEN ((COUNT(*))) AND ((GROUP_CONCAT(v0.c0)))) UNION ALL SELECT v0.c0 FROM rt1, v0 GROUP BY v0.c0 HAVING (NOT ((((GROUP_CONCAT(rt1.c0))) NOT BETWEEN ((COUNT(*))) AND ((GROUP_CONCAT(v0.c0)))))) UNION ALL SELECT ALL v0.c0 FROM rt1, v0 GROUP BY v0.c0 HAVING (((((GROUP_CONCAT(rt1.c0))) NOT BETWEEN ((COUNT(*))) AND ((GROUP_CONCAT(v0.c0))))) ISNULL);
SELECT ALL v0.c0 FROM rt1, v0 GROUP BY v0.c0;
SELECT v0.c0 FROM rt1, v0 GROUP BY v0.c0 HAVING (((GROUP_CONCAT(rt1.c0))) NOT BETWEEN ((COUNT(*))) AND ((GROUP_CONCAT(v0.c0)))) UNION ALL SELECT v0.c0 FROM rt1, v0 GROUP BY v0.c0 HAVING (NOT ((((GROUP_CONCAT(rt1.c0))) NOT BETWEEN ((COUNT(*))) AND ((GROUP_CONCAT(v0.c0)))))) UNION ALL SELECT ALL v0.c0 FROM rt1, v0 GROUP BY v0.c0 HAVING (((((GROUP_CONCAT(rt1.c0))) NOT BETWEEN ((COUNT(*))) AND ((GROUP_CONCAT(v0.c0))))) ISNULL);
SELECT ALL v0.c0 FROM rt1, v0 GROUP BY v0.c0;
SELECT ALL * FROM v0;
SELECT ALL * FROM v0 WHERE (CASE v0.c0  WHEN CAST(v0.c1 AS INTEGER) THEN ((v0.c1) ISNULL) WHEN ((v0.c0) IS TRUE) THEN CAST(NULL AS TEXT) WHEN ((v0.c1) NOTNULL) THEN ((((v0.c1)AND(v0.c1)))OR(v0.c2)) ELSE ((((v0.c1)OR(v0.c1)))OR(x'016e')) END) UNION ALL SELECT ALL * FROM v0 WHERE ((NOT (CASE v0.c0  WHEN CAST(v0.c1 AS INTEGER) THEN ((v0.c1) ISNULL) WHEN ((v0.c0) IS TRUE) THEN CAST(NULL AS TEXT) WHEN ((v0.c1) NOTNULL) THEN ((((v0.c1)AND(v0.c1)))OR(v0.c2)) ELSE ((((v0.c1)OR(v0.c1)))OR(x'016e')) END))) UNION ALL SELECT ALL * FROM v0 WHERE (((CASE v0.c0  WHEN CAST(v0.c1 AS INTEGER) THEN ((v0.c1) ISNULL) WHEN ((v0.c0) IS TRUE) THEN CAST(NULL AS TEXT) WHEN ((v0.c1) NOTNULL) THEN ((((v0.c1)AND(v0.c1)))OR(v0.c2)) ELSE ((((v0.c1)OR(v0.c1)))OR(x'016e')) END) ISNULL));
SELECT ALL * FROM v0;
SELECT DISTINCT * FROM rt1, rt0, v0;
SELECT DISTINCT * FROM rt1, rt0, v0 WHERE ((((((((rt1.c4))<=((v0.c0))))OR((v0.c1 IN ()))))AND(((rt1.c0)==('1249815563'))))) UNION SELECT DISTINCT * FROM rt1, rt0, v0 WHERE ((NOT ((((((((rt1.c4))<=((v0.c0))))OR((v0.c1 IN ()))))AND(((rt1.c0)==('1249815563'))))))) UNION SELECT DISTINCT * FROM rt1, rt0, v0 WHERE ((((((((((rt1.c4))<=((v0.c0))))OR((v0.c1 IN ()))))AND(((rt1.c0)==('1249815563'))))) ISNULL));
SELECT DISTINCT * FROM rt1, rt0, v0;
SELECT ALL rt0.c0, v0.c2, rt1.c2, rt1.c1, v0.c1, rt0.c3, v0.c0, rt1.c0, rt0.c1, rt1.c3, rt0.c2 FROM rt1, v0, rt0 GROUP BY rt0.c0, v0.c2, rt1.c2, rt1.c1, v0.c1, rt0.c3, v0.c0, rt1.c0, rt0.c1, rt1.c3, rt0.c2;
SELECT rt0.c0, v0.c2, rt1.c2, rt1.c1, v0.c1, rt0.c3, v0.c0, rt1.c0, rt0.c1, rt1.c3, rt0.c2 FROM rt1, v0, rt0 WHERE (CAST(CAST(rt0.c4 AS BLOB) AS TEXT)) GROUP BY rt0.c0, v0.c2, rt1.c2, rt1.c1, v0.c1, rt0.c3, v0.c0, rt1.c0, rt0.c1, rt1.c3, rt0.c2 UNION SELECT rt0.c0, v0.c2, rt1.c2, rt1.c1, v0.c1, rt0.c3, v0.c0, rt1.c0, rt0.c1, rt1.c3, rt0.c2 FROM rt1, v0, rt0 WHERE ((NOT (CAST(CAST(rt0.c4 AS BLOB) AS TEXT)))) GROUP BY rt0.c0, v0.c2, rt1.c2, rt1.c1, v0.c1, rt0.c3, v0.c0, rt1.c0, rt0.c1, rt1.c3, rt0.c2 UNION SELECT rt0.c0, v0.c2, rt1.c2, rt1.c1, v0.c1, rt0.c3, v0.c0, rt1.c0, rt0.c1, rt1.c3, rt0.c2 FROM rt1, v0, rt0 WHERE (((CAST(CAST(rt0.c4 AS BLOB) AS TEXT)) ISNULL)) GROUP BY rt0.c0, v0.c2, rt1.c2, rt1.c1, v0.c1, rt0.c3, v0.c0, rt1.c0, rt0.c1, rt1.c3, rt0.c2;
SELECT ALL rt0.c0, v0.c2, rt1.c2, rt1.c1, v0.c1, rt0.c3, v0.c0, rt1.c0, rt0.c1, rt1.c3, rt0.c2 FROM rt1, v0, rt0 GROUP BY rt0.c0, v0.c2, rt1.c2, rt1.c1, v0.c1, rt0.c3, v0.c0, rt1.c0, rt0.c1, rt1.c3, rt0.c2;
SELECT rt1.c0, rt0.c1, rt1.c1, rt1.c3, rt0.c4, v0.c2, v0.c0, rt0.c2 FROM v0, rt0, rt1 GROUP BY rt1.c0, rt0.c1, rt1.c1, rt1.c3, rt0.c4, v0.c2, v0.c0, rt0.c2;
SELECT rt1.c0, rt0.c1, rt1.c1, rt1.c3, rt0.c4, v0.c2, v0.c0, rt0.c2 FROM v0, rt0, rt1 GROUP BY rt1.c0, rt0.c1, rt1.c1, rt1.c3, rt0.c4, v0.c2, v0.c0, rt0.c2 HAVING MIN(MAX(MIN(MIN(rt0.c0)))) UNION ALL SELECT ALL rt1.c0, rt0.c1, rt1.c1, rt1.c3, rt0.c4, v0.c2, v0.c0, rt0.c2 FROM v0, rt0, rt1 GROUP BY rt1.c0, rt0.c1, rt1.c1, rt1.c3, rt0.c4, v0.c2, v0.c0, rt0.c2 HAVING (NOT (MIN(MAX(MIN(MIN(rt0.c0)))))) UNION ALL SELECT ALL rt1.c0, rt0.c1, rt1.c1, rt1.c3, rt0.c4, v0.c2, v0.c0, rt0.c2 FROM v0, rt0, rt1 GROUP BY rt1.c0, rt0.c1, rt1.c1, rt1.c3, rt0.c4, v0.c2, v0.c0, rt0.c2 HAVING ((MIN(MAX(MIN(MIN(rt0.c0))))) ISNULL);
SELECT ALL rt1.c1, rt1.c0, rt1.c2, rt1.c4, rt1.c3 FROM rt1;
SELECT ALL rt1.c1, rt1.c0, rt1.c2, rt1.c4, rt1.c3 FROM rt1 WHERE ((((rt1.c3 IN (rt1.c0, rt1.c2)))GLOB(((rt1.c0)<<(rt1.c2))))) UNION ALL SELECT rt1.c1, rt1.c0, rt1.c2, rt1.c4, rt1.c3 FROM rt1 WHERE ((NOT ((((rt1.c3 IN (rt1.c0, rt1.c2)))GLOB(((rt1.c0)<<(rt1.c2))))))) UNION ALL SELECT rt1.c1, rt1.c0, rt1.c2, rt1.c4, rt1.c3 FROM rt1 WHERE ((((((rt1.c3 IN (rt1.c0, rt1.c2)))GLOB(((rt1.c0)<<(rt1.c2))))) ISNULL));
SELECT ALL rt1.c1, rt1.c0, rt1.c2, rt1.c4, rt1.c3 FROM rt1;
SELECT DISTINCT v0.c2, rt0.c2, rt0.c0, rt0.c1, rt0.c4, v0.c1, rt0.c3 FROM v0, rt0;
SELECT DISTINCT v0.c2, rt0.c2, rt0.c0, rt0.c1, rt0.c4, v0.c1, rt0.c3 FROM v0, rt0 WHERE ((((NOT (rt0.c2)))IS NOT(CAST(0.054240166095998466 AS TEXT)))) UNION SELECT DISTINCT v0.c2, rt0.c2, rt0.c0, rt0.c1, rt0.c4, v0.c1, rt0.c3 FROM v0, rt0 WHERE ((NOT ((((NOT (rt0.c2)))IS NOT(CAST(0.054240166095998466 AS TEXT)))))) UNION SELECT DISTINCT v0.c2, rt0.c2, rt0.c0, rt0.c1, rt0.c4, v0.c1, rt0.c3 FROM v0, rt0 WHERE ((((((NOT (rt0.c2)))IS NOT(CAST(0.054240166095998466 AS TEXT)))) ISNULL));
SELECT DISTINCT v0.c2, rt0.c2, rt0.c0, rt0.c1, rt0.c4, v0.c1, rt0.c3 FROM v0, rt0;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 WHERE (LOWER(CASE rt0.c4  WHEN rt0.c1 THEN x'' WHEN rt0.c4 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c4 WHEN rt0.c1 THEN rt0.c4 WHEN x'' THEN rt0.c1 END)) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0 WHERE ((NOT (LOWER(CASE rt0.c4  WHEN rt0.c1 THEN x'' WHEN rt0.c4 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c4 WHEN rt0.c1 THEN rt0.c4 WHEN x'' THEN rt0.c1 END)))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0 WHERE (((LOWER(CASE rt0.c4  WHEN rt0.c1 THEN x'' WHEN rt0.c4 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c4 WHEN rt0.c1 THEN rt0.c4 WHEN x'' THEN rt0.c1 END)) ISNULL)) GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c4, v0.c0, rt0.c1, rt0.c3, rt0.c2 FROM v0, rt0 GROUP BY rt0.c4, v0.c0, rt0.c1, rt0.c3, rt0.c2;
SELECT ALL rt0.c4, v0.c0, rt0.c1, rt0.c3, rt0.c2 FROM v0, rt0 GROUP BY rt0.c4, v0.c0, rt0.c1, rt0.c3, rt0.c2 HAVING MAX(CAST(v0.c0 AS REAL)) UNION ALL SELECT ALL rt0.c4, v0.c0, rt0.c1, rt0.c3, rt0.c2 FROM v0, rt0 GROUP BY rt0.c4, v0.c0, rt0.c1, rt0.c3, rt0.c2 HAVING (NOT (MAX(CAST(v0.c0 AS REAL)))) UNION ALL SELECT rt0.c4, v0.c0, rt0.c1, rt0.c3, rt0.c2 FROM v0, rt0 GROUP BY rt0.c4, v0.c0, rt0.c1, rt0.c3, rt0.c2 HAVING ((MAX(CAST(v0.c0 AS REAL))) ISNULL);
SELECT ALL rt0.c4, v0.c0, rt0.c1, rt0.c3, rt0.c2 FROM v0, rt0 GROUP BY rt0.c4, v0.c0, rt0.c1, rt0.c3, rt0.c2;
SELECT ALL rt0.c4, v0.c0, rt0.c1, rt0.c3, rt0.c2 FROM v0, rt0 GROUP BY rt0.c4, v0.c0, rt0.c1, rt0.c3, rt0.c2 HAVING MAX(CAST(v0.c0 AS REAL)) UNION ALL SELECT ALL rt0.c4, v0.c0, rt0.c1, rt0.c3, rt0.c2 FROM v0, rt0 GROUP BY rt0.c4, v0.c0, rt0.c1, rt0.c3, rt0.c2 HAVING (NOT (MAX(CAST(v0.c0 AS REAL)))) UNION ALL SELECT rt0.c4, v0.c0, rt0.c1, rt0.c3, rt0.c2 FROM v0, rt0 GROUP BY rt0.c4, v0.c0, rt0.c1, rt0.c3, rt0.c2 HAVING ((MAX(CAST(v0.c0 AS REAL))) ISNULL);
SELECT ALL rt0.c4, v0.c0, rt0.c1, rt0.c3, rt0.c2 FROM v0, rt0 GROUP BY rt0.c4, v0.c0, rt0.c1, rt0.c3, rt0.c2;
SELECT ALL SUM(((v0.c0) NOTNULL) COLLATE RTRIM) FROM rt0, v0;
SELECT * FROM v0, rt0 LEFT OUTER JOIN rt1 ON (((((rt0.c1)*(rt1.c0))))>((1591213528)));
SELECT ALL * FROM v0, rt0 LEFT OUTER JOIN rt1 ON (((((rt0.c1)*(rt1.c0))))>((1591213528))) WHERE ((+ ((+ (rt1.c4))))) UNION ALL SELECT * FROM v0, rt0 LEFT OUTER JOIN rt1 ON (((((rt0.c1)*(rt1.c0))))>((1591213528))) WHERE ((NOT ((+ ((+ (rt1.c4))))))) UNION ALL SELECT * FROM v0, rt0 LEFT OUTER JOIN rt1 ON (((((rt0.c1)*(rt1.c0))))>((1591213528))) WHERE ((((+ ((+ (rt1.c4))))) ISNULL));
SELECT * FROM v0, rt0 LEFT OUTER JOIN rt1 ON (((((rt0.c1)*(rt1.c0))))>((1591213528)));
SELECT DISTINCT * FROM v0, rt0, rt1;
SELECT DISTINCT * FROM v0, rt0, rt1 WHERE (rt1.c4) UNION SELECT DISTINCT * FROM v0, rt0, rt1 WHERE ((NOT (rt1.c4))) UNION SELECT DISTINCT * FROM v0, rt0, rt1 WHERE (((rt1.c4) ISNULL));
SELECT DISTINCT * FROM v0, rt0, rt1;
SELECT ALL rt0.c2, rt0.c4, rt1.c0, rt1.c2, rt1.c1, rt0.c1, rt0.c0, rt0.c3, rt1.c4 FROM rt1 RIGHT OUTER JOIN rt0 ON CAST(NULLIF(rt1.c2, rt0.c1) AS BLOB) GROUP BY rt0.c2, rt0.c4, rt1.c0, rt1.c2, rt1.c1, rt0.c1, rt0.c0, rt0.c3, rt1.c4;
SELECT rt0.c2, rt0.c4, rt1.c0, rt1.c2, rt1.c1, rt0.c1, rt0.c0, rt0.c3, rt1.c4 FROM rt1 RIGHT OUTER JOIN rt0 ON CAST(NULLIF(rt1.c2, rt0.c1) AS BLOB) WHERE (((CAST(NULL AS NUMERIC))|((rt0.c3 IN ())))) GROUP BY rt0.c2, rt0.c4, rt1.c0, rt1.c2, rt1.c1, rt0.c1, rt0.c0, rt0.c3, rt1.c4 UNION SELECT rt0.c2, rt0.c4, rt1.c0, rt1.c2, rt1.c1, rt0.c1, rt0.c0, rt0.c3, rt1.c4 FROM rt1 RIGHT OUTER JOIN rt0 ON CAST(NULLIF(rt1.c2, rt0.c1) AS BLOB) WHERE ((NOT (((CAST(NULL AS NUMERIC))|((rt0.c3 IN ())))))) GROUP BY rt0.c2, rt0.c4, rt1.c0, rt1.c2, rt1.c1, rt0.c1, rt0.c0, rt0.c3, rt1.c4 UNION SELECT rt0.c2, rt0.c4, rt1.c0, rt1.c2, rt1.c1, rt0.c1, rt0.c0, rt0.c3, rt1.c4 FROM rt1 RIGHT OUTER JOIN rt0 ON CAST(NULLIF(rt1.c2, rt0.c1) AS BLOB) WHERE (((((CAST(NULL AS NUMERIC))|((rt0.c3 IN ())))) ISNULL)) GROUP BY rt0.c2, rt0.c4, rt1.c0, rt1.c2, rt1.c1, rt0.c1, rt0.c0, rt0.c3, rt1.c4;
SELECT ALL rt0.c2, rt0.c4, rt1.c0, rt1.c2, rt1.c1, rt0.c1, rt0.c0, rt0.c3, rt1.c4 FROM rt1 RIGHT OUTER JOIN rt0 ON CAST(NULLIF(rt1.c2, rt0.c1) AS BLOB) GROUP BY rt0.c2, rt0.c4, rt1.c0, rt1.c2, rt1.c1, rt0.c1, rt0.c0, rt0.c3, rt1.c4;
SELECT ALL rt1.c3 FROM rt1 GROUP BY rt1.c3;
SELECT rt1.c3 FROM rt1 GROUP BY rt1.c3 HAVING MIN(((rt1.c1)==(rt1.c4))) UNION ALL SELECT rt1.c3 FROM rt1 GROUP BY rt1.c3 HAVING (NOT (MIN(((rt1.c1)==(rt1.c4))))) UNION ALL SELECT ALL rt1.c3 FROM rt1 GROUP BY rt1.c3 HAVING ((MIN(((rt1.c1)=(rt1.c4)))) ISNULL);
SELECT ALL rt1.c3 FROM rt1 GROUP BY rt1.c3;
SELECT rt1.c3 FROM rt1 GROUP BY rt1.c3 HAVING MIN(((rt1.c1)==(rt1.c4))) UNION ALL SELECT rt1.c3 FROM rt1 GROUP BY rt1.c3 HAVING (NOT (MIN(((rt1.c1)==(rt1.c4))))) UNION ALL SELECT ALL rt1.c3 FROM rt1 GROUP BY rt1.c3 HAVING ((MIN(((rt1.c1)=(rt1.c4)))) ISNULL);
SELECT ALL rt1.c3 FROM rt1 GROUP BY rt1.c3;
SELECT SUM(((rt1.c1)IS NOT(((rt1.c0) NOTNULL)))) FROM rt1;
SELECT * FROM v0 NOT INDEXED;
SELECT ALL * FROM v0 WHERE (((((UPPER(v0.c1))OR(((v0.c0) NOT BETWEEN (v0.c2) AND ('p8~\r jF')))))AND((((x'', v0.c2, v0.c0, v0.c2, v0.c2))<>((v0.c2, v0.c0, v0.c2, v0.c1, v0.c2)))))) UNION ALL SELECT ALL * FROM v0 WHERE ((NOT (((((UPPER(v0.c1))OR(((v0.c0) NOT BETWEEN (v0.c2) AND ('p8~\r jF')))))AND((((x'', v0.c2, v0.c0, v0.c2, v0.c2))!=((v0.c2, v0.c0, v0.c2, v0.c1, v0.c2)))))))) UNION ALL SELECT * FROM v0 WHERE (((((((UPPER(v0.c1))OR(((v0.c0) NOT BETWEEN (v0.c2) AND ('p8~\r jF')))))AND((((x'', v0.c2, v0.c0, v0.c2, v0.c2))<>((v0.c2, v0.c0, v0.c2, v0.c1, v0.c2)))))) ISNULL));
SELECT * FROM v0 NOT INDEXED;
SELECT DISTINCT v0.c1, rt0.c0, rt0.c2, rt0.c1 FROM rt0 FULL OUTER JOIN v0 ON CAST(((-821676532)-(v0.c1)) AS INTEGER);
SELECT DISTINCT v0.c1, rt0.c0, rt0.c2, rt0.c1 FROM rt0 FULL OUTER JOIN v0 ON CAST(((-821676532)-(v0.c1)) AS INTEGER) WHERE (CASE LIKELY(DISTINCT rt0.c1)  WHEN x'' THEN ((v0.c1)||(rt0.c1)) WHEN CASE rt0.c4  WHEN v0.c0 THEN v0.c2 END THEN rt0.c3 WHEN CAST(rt0.c3 AS BLOB) THEN (((v0.c0))<=((NULL))) END) UNION SELECT DISTINCT v0.c1, rt0.c0, rt0.c2, rt0.c1 FROM rt0 FULL OUTER JOIN v0 ON CAST(((-821676532)-(v0.c1)) AS INTEGER) WHERE ((NOT (CASE LIKELY(DISTINCT rt0.c1)  WHEN x'' THEN ((v0.c1)||(rt0.c1)) WHEN CASE rt0.c4  WHEN v0.c0 THEN v0.c2 END THEN rt0.c3 WHEN CAST(rt0.c3 AS BLOB) THEN (((v0.c0))<=((NULL))) END))) UNION SELECT DISTINCT v0.c1, rt0.c0, rt0.c2, rt0.c1 FROM rt0 FULL OUTER JOIN v0 ON CAST(((-821676532)-(v0.c1)) AS INTEGER) WHERE (((CASE LIKELY(DISTINCT rt0.c1)  WHEN x'' THEN ((v0.c1)||(rt0.c1)) WHEN CASE rt0.c4  WHEN v0.c0 THEN v0.c2 END THEN rt0.c3 WHEN CAST(rt0.c3 AS BLOB) THEN (((v0.c0))<=((NULL))) END) ISNULL));
SELECT DISTINCT v0.c1, rt0.c0, rt0.c2, rt0.c1 FROM rt0 FULL OUTER JOIN v0 ON CAST(((-821676532)-(v0.c1)) AS INTEGER);
SELECT ALL rt0.c1, v0.c0 FROM rt1, v0, rt0 GROUP BY rt0.c1, v0.c0;
SELECT rt0.c1, v0.c0 FROM rt1, v0, rt0 WHERE ((~ (((((rt0.c1)AND(rt0.c4)))AND(rt1.c4))))) GROUP BY rt0.c1, v0.c0 UNION SELECT ALL rt0.c1, v0.c0 FROM rt1, v0, rt0 WHERE ((NOT ((~ (((((rt0.c1)AND(rt0.c4)))AND(rt1.c4))))))) GROUP BY rt0.c1, v0.c0 UNION SELECT rt0.c1, v0.c0 FROM rt1, v0, rt0 WHERE ((((~ (((((rt0.c1)AND(rt0.c4)))AND(rt1.c4))))) ISNULL)) GROUP BY rt0.c1, v0.c0;
SELECT ALL rt0.c1, v0.c0 FROM rt1, v0, rt0 GROUP BY rt0.c1, v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING TOTAL(GROUP_CONCAT(MIN(x''))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (TOTAL(GROUP_CONCAT(MIN(x''))))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((TOTAL(GROUP_CONCAT(MIN(x'')))) ISNULL);
SELECT ALL SUM(CAST(ABS(rt0.c0) AS TEXT)) FROM rt1, v0, rt0 ORDER BY CAST(((rt1.c0)*(rt1.c3)) AS REAL) ASC  NULLS FIRST;
SELECT rt0.c1, rt1.c2, rt0.c3, rt0.c0, v0.c0, rt1.c0, rt1.c3, v0.c1, rt1.c1, rt0.c2, rt1.c4, v0.c2 FROM v0, rt0, rt1;
SELECT rt0.c1, rt1.c2, rt0.c3, rt0.c0, v0.c0, rt1.c0, rt1.c3, v0.c1, rt1.c1, rt0.c2, rt1.c4, v0.c2 FROM v0, rt0, rt1 WHERE ((((v0.c1 IN ('862752211'))) NOT NULL)) UNION ALL SELECT rt0.c1, rt1.c2, rt0.c3, rt0.c0, v0.c0, rt1.c0, rt1.c3, v0.c1, rt1.c1, rt0.c2, rt1.c4, v0.c2 FROM v0, rt0, rt1 WHERE ((NOT ((((v0.c1 IN ('862752211'))) NOT NULL)))) UNION ALL SELECT rt0.c1, rt1.c2, rt0.c3, rt0.c0, v0.c0, rt1.c0, rt1.c3, v0.c1, rt1.c1, rt0.c2, rt1.c4, v0.c2 FROM v0, rt0, rt1 WHERE ((((((v0.c1 IN ('862752211'))) NOT NULL)) ISNULL));
SELECT rt0.c1, rt1.c2, rt0.c3, rt0.c0, v0.c0, rt1.c0, rt1.c3, v0.c1, rt1.c1, rt0.c2, rt1.c4, v0.c2 FROM v0, rt0, rt1;
SELECT DISTINCT * FROM v0, rt1;
SELECT DISTINCT * FROM v0, rt1 WHERE (((((0.26270600085519524))>((v0.c0))) IN ())) UNION SELECT DISTINCT * FROM v0, rt1 WHERE ((NOT (((((0.26270600085519524))>((v0.c0))) IN ())))) UNION SELECT DISTINCT * FROM v0, rt1 WHERE (((((((0.26270600085519524))>((v0.c0))) IN ())) ISNULL));
SELECT DISTINCT * FROM v0, rt1;
SELECT v0.c1, v0.c0, rt1.c1, rt1.c0, rt1.c4, rt1.c3 FROM rt1 INNER JOIN v0 ON TYPEOF(((v0.c0)<(v0.c1))) GROUP BY v0.c1, v0.c0, rt1.c1, rt1.c0, rt1.c4, rt1.c3;
SELECT ALL v0.c1, v0.c0, rt1.c1, rt1.c0, rt1.c4, rt1.c3 FROM rt1 INNER JOIN v0 ON TYPEOF(((v0.c0)<(v0.c1))) WHERE (((CASE WHEN v0.c0 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c0 ELSE rt1.c4 END)+(rt1.c1))) GROUP BY v0.c1, v0.c0, rt1.c1, rt1.c0, rt1.c4, rt1.c3 UNION SELECT v0.c1, v0.c0, rt1.c1, rt1.c0, rt1.c4, rt1.c3 FROM rt1 INNER JOIN v0 ON TYPEOF(((v0.c0)<(v0.c1))) WHERE ((NOT (((CASE WHEN v0.c0 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c0 ELSE rt1.c4 END)+(rt1.c1))))) GROUP BY v0.c1, v0.c0, rt1.c1, rt1.c0, rt1.c4, rt1.c3 UNION SELECT v0.c1, v0.c0, rt1.c1, rt1.c0, rt1.c4, rt1.c3 FROM rt1 INNER JOIN v0 ON TYPEOF(((v0.c0)<(v0.c1))) WHERE (((((CASE WHEN v0.c0 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c0 ELSE rt1.c4 END)+(rt1.c1))) ISNULL)) GROUP BY v0.c1, v0.c0, rt1.c1, rt1.c0, rt1.c4, rt1.c3;
SELECT v0.c1, v0.c0, rt1.c1, rt1.c0, rt1.c4, rt1.c3 FROM rt1 INNER JOIN v0 ON TYPEOF(((v0.c0)<(v0.c1))) GROUP BY v0.c1, v0.c0, rt1.c1, rt1.c0, rt1.c4, rt1.c3;
SELECT ALL v0.c0, rt0.c3, rt0.c0, rt0.c2, v0.c1, rt0.c1, v0.c2, rt0.c4 FROM v0 LEFT OUTER JOIN rt0 ON ((((rt0.c0)OR(v0.c0)))AND(NULL)) COLLATE BINARY GROUP BY v0.c0, rt0.c3, rt0.c0, rt0.c2, v0.c1, rt0.c1, v0.c2, rt0.c4;
SELECT v0.c0, rt0.c3, rt0.c0, rt0.c2, v0.c1, rt0.c1, v0.c2, rt0.c4 FROM v0 LEFT OUTER JOIN rt0 ON ((((rt0.c0)OR(v0.c0)))AND(NULL)) COLLATE BINARY GROUP BY v0.c0, rt0.c3, rt0.c0, rt0.c2, v0.c1, rt0.c1, v0.c2, rt0.c4 HAVING COUNT(*) UNION ALL SELECT v0.c0, rt0.c3, rt0.c0, rt0.c2, v0.c1, rt0.c1, v0.c2, rt0.c4 FROM v0 LEFT OUTER JOIN rt0 ON ((((rt0.c0)OR(v0.c0)))AND(NULL)) COLLATE BINARY GROUP BY v0.c0, rt0.c3, rt0.c0, rt0.c2, v0.c1, rt0.c1, v0.c2, rt0.c4 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL v0.c0, rt0.c3, rt0.c0, rt0.c2, v0.c1, rt0.c1, v0.c2, rt0.c4 FROM v0 LEFT OUTER JOIN rt0 ON ((((rt0.c0)OR(v0.c0)))AND(NULL)) COLLATE BINARY GROUP BY v0.c0, rt0.c3, rt0.c0, rt0.c2, v0.c1, rt0.c1, v0.c2, rt0.c4 HAVING ((COUNT(*)) ISNULL);
SELECT ALL v0.c0, rt0.c3, rt0.c0, rt0.c2, v0.c1, rt0.c1, v0.c2, rt0.c4 FROM v0 LEFT OUTER JOIN rt0 ON ((((rt0.c0)OR(v0.c0)))AND(NULL)) COLLATE BINARY GROUP BY v0.c0, rt0.c3, rt0.c0, rt0.c2, v0.c1, rt0.c1, v0.c2, rt0.c4;
SELECT v0.c0, rt0.c3, rt0.c0, rt0.c2, v0.c1, rt0.c1, v0.c2, rt0.c4 FROM v0 LEFT OUTER JOIN rt0 ON ((((rt0.c0)OR(v0.c0)))AND(NULL)) COLLATE BINARY GROUP BY v0.c0, rt0.c3, rt0.c0, rt0.c2, v0.c1, rt0.c1, v0.c2, rt0.c4 HAVING COUNT(*) UNION ALL SELECT v0.c0, rt0.c3, rt0.c0, rt0.c2, v0.c1, rt0.c1, v0.c2, rt0.c4 FROM v0 LEFT OUTER JOIN rt0 ON ((((rt0.c0)OR(v0.c0)))AND(NULL)) COLLATE BINARY GROUP BY v0.c0, rt0.c3, rt0.c0, rt0.c2, v0.c1, rt0.c1, v0.c2, rt0.c4 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL v0.c0, rt0.c3, rt0.c0, rt0.c2, v0.c1, rt0.c1, v0.c2, rt0.c4 FROM v0 LEFT OUTER JOIN rt0 ON ((((rt0.c0)OR(v0.c0)))AND(NULL)) COLLATE BINARY GROUP BY v0.c0, rt0.c3, rt0.c0, rt0.c2, v0.c1, rt0.c1, v0.c2, rt0.c4 HAVING ((COUNT(*)) ISNULL);
SELECT ALL v0.c0, rt0.c3, rt0.c0, rt0.c2, v0.c1, rt0.c1, v0.c2, rt0.c4 FROM v0 LEFT OUTER JOIN rt0 ON ((((rt0.c0)OR(v0.c0)))AND(NULL)) COLLATE BINARY GROUP BY v0.c0, rt0.c3, rt0.c0, rt0.c2, v0.c1, rt0.c1, v0.c2, rt0.c4;
SELECT ALL * FROM v0;
SELECT * FROM v0 WHERE ((((v0.c2) NOT NULL) IN ())) UNION ALL SELECT ALL * FROM v0 WHERE ((NOT ((((v0.c2) NOT NULL) IN ())))) UNION ALL SELECT * FROM v0 WHERE ((((((v0.c2) NOT NULL) IN ())) ISNULL));
SELECT ALL * FROM v0;
SELECT DISTINCT rt1.c4, rt0.c2, v0.c1, rt1.c1, rt0.c0, rt1.c3, rt0.c4, rt0.c1, rt1.c2 FROM rt1, rt0, v0;
SELECT DISTINCT rt1.c4, rt0.c2, v0.c1, rt1.c1, rt0.c0, rt1.c3, rt0.c4, rt0.c1, rt1.c2 FROM rt1, rt0, v0 WHERE (NULL) UNION SELECT DISTINCT rt1.c4, rt0.c2, v0.c1, rt1.c1, rt0.c0, rt1.c3, rt0.c4, rt0.c1, rt1.c2 FROM rt1, rt0, v0 WHERE ((NOT (NULL))) UNION SELECT DISTINCT rt1.c4, rt0.c2, v0.c1, rt1.c1, rt0.c0, rt1.c3, rt0.c4, rt0.c1, rt1.c2 FROM rt1, rt0, v0 WHERE (((NULL) ISNULL));
SELECT DISTINCT rt1.c4, rt0.c2, v0.c1, rt1.c1, rt0.c0, rt1.c3, rt0.c4, rt0.c1, rt1.c2 FROM rt1, rt0, v0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (INSTR(v0.c1, v0.c1) COLLATE NOCASE) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (INSTR(v0.c1, v0.c1) COLLATE NOCASE))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE (((INSTR(v0.c1, v0.c1) COLLATE NOCASE) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT rt1.c3, rt0.c2, rt0.c1, rt1.c4, rt0.c4, rt0.c3, rt1.c1, rt0.c0, rt1.c2 FROM v0, rt0, rt1 GROUP BY rt1.c3, rt0.c2, rt0.c1, rt1.c4, rt0.c4, rt0.c3, rt1.c1, rt0.c0, rt1.c2;
SELECT rt1.c3, rt0.c2, rt0.c1, rt1.c4, rt0.c4, rt0.c3, rt1.c1, rt0.c0, rt1.c2 FROM v0, rt0, rt1 GROUP BY rt1.c3, rt0.c2, rt0.c1, rt1.c4, rt0.c4, rt0.c3, rt1.c1, rt0.c0, rt1.c2 HAVING 1249815563 UNION ALL SELECT ALL rt1.c3, rt0.c2, rt0.c1, rt1.c4, rt0.c4, rt0.c3, rt1.c1, rt0.c0, rt1.c2 FROM v0, rt0, rt1 GROUP BY rt1.c3, rt0.c2, rt0.c1, rt1.c4, rt0.c4, rt0.c3, rt1.c1, rt0.c0, rt1.c2 HAVING (NOT (1249815563)) UNION ALL SELECT ALL rt1.c3, rt0.c2, rt0.c1, rt1.c4, rt0.c4, rt0.c3, rt1.c1, rt0.c0, rt1.c2 FROM v0, rt0, rt1 GROUP BY rt1.c3, rt0.c2, rt0.c1, rt1.c4, rt0.c4, rt0.c3, rt1.c1, rt0.c0, rt1.c2 HAVING ((1249815563) ISNULL);
SELECT rt1.c3, rt0.c2, rt0.c1, rt1.c4, rt0.c4, rt0.c3, rt1.c1, rt0.c0, rt1.c2 FROM v0, rt0, rt1 GROUP BY rt1.c3, rt0.c2, rt0.c1, rt1.c4, rt0.c4, rt0.c3, rt1.c1, rt0.c0, rt1.c2;
SELECT rt1.c3, rt0.c2, rt0.c1, rt1.c4, rt0.c4, rt0.c3, rt1.c1, rt0.c0, rt1.c2 FROM v0, rt0, rt1 GROUP BY rt1.c3, rt0.c2, rt0.c1, rt1.c4, rt0.c4, rt0.c3, rt1.c1, rt0.c0, rt1.c2 HAVING 1249815563 UNION ALL SELECT ALL rt1.c3, rt0.c2, rt0.c1, rt1.c4, rt0.c4, rt0.c3, rt1.c1, rt0.c0, rt1.c2 FROM v0, rt0, rt1 GROUP BY rt1.c3, rt0.c2, rt0.c1, rt1.c4, rt0.c4, rt0.c3, rt1.c1, rt0.c0, rt1.c2 HAVING (NOT (1249815563)) UNION ALL SELECT ALL rt1.c3, rt0.c2, rt0.c1, rt1.c4, rt0.c4, rt0.c3, rt1.c1, rt0.c0, rt1.c2 FROM v0, rt0, rt1 GROUP BY rt1.c3, rt0.c2, rt0.c1, rt1.c4, rt0.c4, rt0.c3, rt1.c1, rt0.c0, rt1.c2 HAVING ((1249815563) ISNULL);
SELECT rt1.c3, rt0.c2, rt0.c1, rt1.c4, rt0.c4, rt0.c3, rt1.c1, rt0.c0, rt1.c2 FROM v0, rt0, rt1 GROUP BY rt1.c3, rt0.c2, rt0.c1, rt1.c4, rt0.c4, rt0.c3, rt1.c1, rt0.c0, rt1.c2;
SELECT ALL * FROM v0;
SELECT * FROM v0 WHERE ((+ (v0.c1 COLLATE RTRIM))) UNION ALL SELECT ALL * FROM v0 WHERE ((NOT ((+ (v0.c1 COLLATE RTRIM))))) UNION ALL SELECT * FROM v0 WHERE ((((+ (v0.c1 COLLATE RTRIM))) ISNULL));
SELECT ALL * FROM v0;
SELECT DISTINCT rt0.c1, rt1.c2, rt1.c3, rt0.c4, v0.c1, rt0.c0, rt0.c3, v0.c2, rt1.c0, rt0.c2, v0.c0, rt1.c1 FROM rt0, rt1, v0;
SELECT DISTINCT rt0.c1, rt1.c2, rt1.c3, rt0.c4, v0.c1, rt0.c0, rt0.c3, v0.c2, rt1.c0, rt0.c2, v0.c0, rt1.c1 FROM rt0, rt1, v0 WHERE (v0.c1 COLLATE NOCASE) UNION SELECT DISTINCT rt0.c1, rt1.c2, rt1.c3, rt0.c4, v0.c1, rt0.c0, rt0.c3, v0.c2, rt1.c0, rt0.c2, v0.c0, rt1.c1 FROM rt0, rt1, v0 WHERE ((NOT (v0.c1 COLLATE NOCASE))) UNION SELECT DISTINCT rt0.c1, rt1.c2, rt1.c3, rt0.c4, v0.c1, rt0.c0, rt0.c3, v0.c2, rt1.c0, rt0.c2, v0.c0, rt1.c1 FROM rt0, rt1, v0 WHERE (((v0.c1 COLLATE NOCASE) ISNULL));
SELECT DISTINCT rt0.c1, rt1.c2, rt1.c3, rt0.c4, v0.c1, rt0.c0, rt0.c3, v0.c2, rt1.c0, rt0.c2, v0.c0, rt1.c1 FROM rt0, rt1, v0;
SELECT rt0.c0, rt1.c2, rt0.c2, rt1.c0, rt0.c1, rt1.c4, rt1.c3, rt0.c4, rt1.c1, rt0.c3 FROM rt0, rt1 GROUP BY rt0.c0, rt1.c2, rt0.c2, rt1.c0, rt0.c1, rt1.c4, rt1.c3, rt0.c4, rt1.c1, rt0.c3;
SELECT rt0.c0, rt1.c2, rt0.c2, rt1.c0, rt0.c1, rt1.c4, rt1.c3, rt0.c4, rt1.c1, rt0.c3 FROM rt0, rt1 WHERE (((CAST(rt0.c2 AS NUMERIC))&(rt1.c2))) GROUP BY rt0.c0, rt1.c2, rt0.c2, rt1.c0, rt0.c1, rt1.c4, rt1.c3, rt0.c4, rt1.c1, rt0.c3 UNION SELECT rt0.c0, rt1.c2, rt0.c2, rt1.c0, rt0.c1, rt1.c4, rt1.c3, rt0.c4, rt1.c1, rt0.c3 FROM rt0, rt1 WHERE ((NOT (((CAST(rt0.c2 AS NUMERIC))&(rt1.c2))))) GROUP BY rt0.c0, rt1.c2, rt0.c2, rt1.c0, rt0.c1, rt1.c4, rt1.c3, rt0.c4, rt1.c1, rt0.c3 UNION SELECT rt0.c0, rt1.c2, rt0.c2, rt1.c0, rt0.c1, rt1.c4, rt1.c3, rt0.c4, rt1.c1, rt0.c3 FROM rt0, rt1 WHERE (((((CAST(rt0.c2 AS NUMERIC))&(rt1.c2))) ISNULL)) GROUP BY rt0.c0, rt1.c2, rt0.c2, rt1.c0, rt0.c1, rt1.c4, rt1.c3, rt0.c4, rt1.c1, rt0.c3;
SELECT rt0.c0, rt1.c2, rt0.c2, rt1.c0, rt0.c1, rt1.c4, rt1.c3, rt0.c4, rt1.c1, rt0.c3 FROM rt0, rt1 GROUP BY rt0.c0, rt1.c2, rt0.c2, rt1.c0, rt0.c1, rt1.c4, rt1.c3, rt0.c4, rt1.c1, rt0.c3;
SELECT rt1.c1, rt1.c2, v0.c0, rt0.c4, rt1.c4, rt0.c2, rt0.c3 FROM v0, rt0 CROSS JOIN rt1 ON ((((rt0.c3)IS NOT(rt0.c3))) NOT BETWEEN (CAST(rt0.c1 AS NUMERIC)) AND (((('08⯉OU')) BETWEEN ((rt1.c2)) AND ((rt1.c0))))) GROUP BY rt1.c1, rt1.c2, v0.c0, rt0.c4, rt1.c4, rt0.c2, rt0.c3;
SELECT rt1.c1, rt1.c2, v0.c0, rt0.c4, rt1.c4, rt0.c2, rt0.c3 FROM v0, rt0 CROSS JOIN rt1 ON ((((rt0.c3)IS NOT(rt0.c3))) NOT BETWEEN (CAST(rt0.c1 AS NUMERIC)) AND (((('08⯉OU')) BETWEEN ((rt1.c2)) AND ((rt1.c0))))) GROUP BY rt1.c1, rt1.c2, v0.c0, rt0.c4, rt1.c4, rt0.c2, rt0.c3 HAVING ((SUM(AVG(rt0.c2))) BETWEEN (AVG(AVG(MIN(GROUP_CONCAT(v0.c2))))) AND (MIN(rt1.c1))) UNION ALL SELECT ALL rt1.c1, rt1.c2, v0.c0, rt0.c4, rt1.c4, rt0.c2, rt0.c3 FROM v0, rt0 CROSS JOIN rt1 ON ((((rt0.c3)IS NOT(rt0.c3))) NOT BETWEEN (CAST(rt0.c1 AS NUMERIC)) AND (((('08⯉OU')) BETWEEN ((rt1.c2)) AND ((rt1.c0))))) GROUP BY rt1.c1, rt1.c2, v0.c0, rt0.c4, rt1.c4, rt0.c2, rt0.c3 HAVING (NOT (((SUM(AVG(rt0.c2))) BETWEEN (AVG(AVG(MIN(GROUP_CONCAT(v0.c2))))) AND (MIN(rt1.c1))))) UNION ALL SELECT ALL rt1.c1, rt1.c2, v0.c0, rt0.c4, rt1.c4, rt0.c2, rt0.c3 FROM v0, rt0 CROSS JOIN rt1 ON ((((rt0.c3)IS NOT(rt0.c3))) NOT BETWEEN (CAST(rt0.c1 AS NUMERIC)) AND (((('08⯉OU')) BETWEEN ((rt1.c2)) AND ((rt1.c0))))) GROUP BY rt1.c1, rt1.c2, v0.c0, rt0.c4, rt1.c4, rt0.c2, rt0.c3 HAVING ((((SUM(AVG(rt0.c2))) BETWEEN (AVG(AVG(MIN(GROUP_CONCAT(v0.c2))))) AND (MIN(rt1.c1)))) ISNULL);
SELECT ALL rt1.c0, v0.c2, rt1.c2, v0.c1, rt1.c1 FROM v0, rt1;
SELECT rt1.c0, v0.c2, rt1.c2, v0.c1, rt1.c1 FROM v0, rt1 WHERE ((CAST(rt1.c1 AS NUMERIC) IN ())) UNION ALL SELECT ALL rt1.c0, v0.c2, rt1.c2, v0.c1, rt1.c1 FROM v0, rt1 WHERE ((NOT ((CAST(rt1.c1 AS NUMERIC) IN ())))) UNION ALL SELECT rt1.c0, v0.c2, rt1.c2, v0.c1, rt1.c1 FROM v0, rt1 WHERE ((((CAST(rt1.c1 AS NUMERIC) IN ())) ISNULL));
SELECT ALL rt1.c0, v0.c2, rt1.c2, v0.c1, rt1.c1 FROM v0, rt1;
SELECT DISTINCT rt1.c1, rt1.c0 FROM rt0, rt1, v0;
SELECT DISTINCT rt1.c1, rt1.c0 FROM rt0, rt1, v0 WHERE (CAST(LIKELIHOOD(v0.c2, 0.07199355927924711) AS TEXT)) UNION SELECT DISTINCT rt1.c1, rt1.c0 FROM rt0, rt1, v0 WHERE ((NOT (CAST(LIKELIHOOD(v0.c2, 0.07199355927924711) AS TEXT)))) UNION SELECT DISTINCT rt1.c1, rt1.c0 FROM rt0, rt1, v0 WHERE (((CAST(LIKELIHOOD(v0.c2, 0.07199355927924711) AS TEXT)) ISNULL));
SELECT DISTINCT rt1.c1, rt1.c0 FROM rt0, rt1, v0;
SELECT ALL v0.c2, v0.c0 FROM v0 GROUP BY v0.c2, v0.c0;
SELECT v0.c2, v0.c0 FROM v0 WHERE ((NOT ((((v0.c2)) NOT BETWEEN ((v0.c1)) AND ((v0.c1)))))) GROUP BY v0.c2, v0.c0 UNION SELECT v0.c2, v0.c0 FROM v0 WHERE ((NOT ((NOT ((((v0.c2)) NOT BETWEEN ((v0.c1)) AND ((v0.c1)))))))) GROUP BY v0.c2, v0.c0 UNION SELECT ALL v0.c2, v0.c0 FROM v0 WHERE ((((NOT ((((v0.c2)) NOT BETWEEN ((v0.c1)) AND ((v0.c1)))))) ISNULL)) GROUP BY v0.c2, v0.c0;
SELECT ALL v0.c2, v0.c0 FROM v0 GROUP BY v0.c2, v0.c0;
SELECT ALL rt1.c4, v0.c1, rt1.c0, v0.c2, rt1.c2, v0.c0, rt1.c3, rt1.c1 FROM rt1, v0 GROUP BY rt1.c4, v0.c1, rt1.c0, v0.c2, rt1.c2, v0.c0, rt1.c3, rt1.c1;
SELECT rt1.c4, v0.c1, rt1.c0, v0.c2, rt1.c2, v0.c0, rt1.c3, rt1.c1 FROM rt1, v0 GROUP BY rt1.c4, v0.c1, rt1.c0, v0.c2, rt1.c2, v0.c0, rt1.c3, rt1.c1 HAVING SUM(TOTAL(COUNT(*))) UNION ALL SELECT rt1.c4, v0.c1, rt1.c0, v0.c2, rt1.c2, v0.c0, rt1.c3, rt1.c1 FROM rt1, v0 GROUP BY rt1.c4, v0.c1, rt1.c0, v0.c2, rt1.c2, v0.c0, rt1.c3, rt1.c1 HAVING (NOT (SUM(TOTAL(COUNT(*))))) UNION ALL SELECT rt1.c4, v0.c1, rt1.c0, v0.c2, rt1.c2, v0.c0, rt1.c3, rt1.c1 FROM rt1, v0 GROUP BY rt1.c4, v0.c1, rt1.c0, v0.c2, rt1.c2, v0.c0, rt1.c3, rt1.c1 HAVING ((SUM(TOTAL(COUNT(*)))) ISNULL);
SELECT ALL rt0.c3, rt0.c0, rt0.c1, rt0.c4 FROM rt0;
SELECT ALL rt0.c3, rt0.c0, rt0.c1, rt0.c4 FROM rt0 WHERE (CAST(((rt0.c1) BETWEEN (rt0.c4) AND (rt0.c1)) AS INTEGER)) UNION ALL SELECT rt0.c3, rt0.c0, rt0.c1, rt0.c4 FROM rt0 WHERE ((NOT (CAST(((rt0.c1) BETWEEN (rt0.c4) AND (rt0.c1)) AS INTEGER)))) UNION ALL SELECT rt0.c3, rt0.c0, rt0.c1, rt0.c4 FROM rt0 WHERE (((CAST(((rt0.c1) BETWEEN (rt0.c4) AND (rt0.c1)) AS INTEGER)) ISNULL));
SELECT ALL rt0.c3, rt0.c0, rt0.c1, rt0.c4 FROM rt0;
SELECT DISTINCT * FROM v0, rt1, rt0;
SELECT DISTINCT * FROM v0, rt1, rt0 WHERE ((NOT (rt1.c1))) UNION SELECT DISTINCT * FROM v0, rt1, rt0 WHERE ((NOT ((NOT (rt1.c1))))) UNION SELECT DISTINCT * FROM v0, rt1, rt0 WHERE ((((NOT (rt1.c1))) ISNULL));
SELECT DISTINCT * FROM v0, rt1, rt0;
SELECT ALL rt0.c3, rt0.c2, rt1.c1, rt0.c0, rt1.c0, rt1.c4, rt0.c1, v0.c1, rt1.c3, v0.c0 FROM rt1 INNER JOIN v0 ON (+ (((rt1.c2) IS FALSE))) FULL OUTER JOIN rt0 ON LIKELY(v0.c2 COLLATE NOCASE) GROUP BY rt0.c3, rt0.c2, rt1.c1, rt0.c0, rt1.c0, rt1.c4, rt0.c1, v0.c1, rt1.c3, v0.c0;
SELECT rt0.c3, rt0.c2, rt1.c1, rt0.c0, rt1.c0, rt1.c4, rt0.c1, v0.c1, rt1.c3, v0.c0 FROM rt1 INNER JOIN v0 ON (+ (((rt1.c2) IS FALSE))) FULL OUTER JOIN rt0 ON LIKELY(v0.c2 COLLATE NOCASE) WHERE ((v0.c2 IN ())) GROUP BY rt0.c3, rt0.c2, rt1.c1, rt0.c0, rt1.c0, rt1.c4, rt0.c1, v0.c1, rt1.c3, v0.c0 UNION SELECT ALL rt0.c3, rt0.c2, rt1.c1, rt0.c0, rt1.c0, rt1.c4, rt0.c1, v0.c1, rt1.c3, v0.c0 FROM rt1 INNER JOIN v0 ON (+ (((rt1.c2) IS FALSE))) FULL OUTER JOIN rt0 ON LIKELY(v0.c2 COLLATE NOCASE) WHERE ((NOT ((v0.c2 IN ())))) GROUP BY rt0.c3, rt0.c2, rt1.c1, rt0.c0, rt1.c0, rt1.c4, rt0.c1, v0.c1, rt1.c3, v0.c0 UNION SELECT ALL rt0.c3, rt0.c2, rt1.c1, rt0.c0, rt1.c0, rt1.c4, rt0.c1, v0.c1, rt1.c3, v0.c0 FROM rt1 INNER JOIN v0 ON (+ (((rt1.c2) IS FALSE))) FULL OUTER JOIN rt0 ON LIKELY(v0.c2 COLLATE NOCASE) WHERE ((((v0.c2 IN ())) ISNULL)) GROUP BY rt0.c3, rt0.c2, rt1.c1, rt0.c0, rt1.c0, rt1.c4, rt0.c1, v0.c1, rt1.c3, v0.c0;
SELECT ALL rt0.c3, rt0.c2, rt1.c1, rt0.c0, rt1.c0, rt1.c4, rt0.c1, v0.c1, rt1.c3, v0.c0 FROM rt1 INNER JOIN v0 ON (+ (((rt1.c2) IS FALSE))) FULL OUTER JOIN rt0 ON LIKELY(v0.c2 COLLATE NOCASE) GROUP BY rt0.c3, rt0.c2, rt1.c1, rt0.c0, rt1.c0, rt1.c4, rt0.c1, v0.c1, rt1.c3, v0.c0;
SELECT rt1.c3, rt1.c0, v0.c1, rt1.c1 FROM rt1, v0 INNER JOIN rt0 ON RTRIM(v0.c2) GROUP BY rt1.c3, rt1.c0, v0.c1, rt1.c1;
SELECT ALL rt1.c3, rt1.c0, v0.c1, rt1.c1 FROM rt1, v0 INNER JOIN rt0 ON RTRIM(v0.c2) GROUP BY rt1.c3, rt1.c0, v0.c1, rt1.c1 HAVING AVG(rt0.c4) UNION ALL SELECT ALL rt1.c3, rt1.c0, v0.c1, rt1.c1 FROM rt1, v0 INNER JOIN rt0 ON RTRIM(v0.c2) GROUP BY rt1.c3, rt1.c0, v0.c1, rt1.c1 HAVING (NOT (AVG(rt0.c4))) UNION ALL SELECT rt1.c3, rt1.c0, v0.c1, rt1.c1 FROM rt1, v0 INNER JOIN rt0 ON RTRIM(v0.c2) GROUP BY rt1.c3, rt1.c0, v0.c1, rt1.c1 HAVING ((AVG(rt0.c4)) ISNULL);
SELECT rt1.c3, rt1.c0, v0.c1, rt1.c1 FROM rt1, v0 INNER JOIN rt0 ON RTRIM(v0.c2) GROUP BY rt1.c3, rt1.c0, v0.c1, rt1.c1;
SELECT ALL rt1.c3, rt1.c0, v0.c1, rt1.c1 FROM rt1, v0 INNER JOIN rt0 ON RTRIM(v0.c2) GROUP BY rt1.c3, rt1.c0, v0.c1, rt1.c1 HAVING AVG(rt0.c4) UNION ALL SELECT ALL rt1.c3, rt1.c0, v0.c1, rt1.c1 FROM rt1, v0 INNER JOIN rt0 ON RTRIM(v0.c2) GROUP BY rt1.c3, rt1.c0, v0.c1, rt1.c1 HAVING (NOT (AVG(rt0.c4))) UNION ALL SELECT rt1.c3, rt1.c0, v0.c1, rt1.c1 FROM rt1, v0 INNER JOIN rt0 ON RTRIM(v0.c2) GROUP BY rt1.c3, rt1.c0, v0.c1, rt1.c1 HAVING ((AVG(rt0.c4)) ISNULL);
SELECT rt1.c3, rt1.c0, v0.c1, rt1.c1 FROM rt1, v0 INNER JOIN rt0 ON RTRIM(v0.c2) GROUP BY rt1.c3, rt1.c0, v0.c1, rt1.c1;
SELECT ALL rt1.c3, rt1.c4, rt1.c0 FROM rt0 CROSS JOIN rt1 ON ((((((((((rt0.c0)AND(rt0.c0)))OR(rt0.c3)))OR(rt1.c3)))OR(v0.c1))) ISNULL) CROSS JOIN v0 ON ((((v0.c2)+(rt0.c0))) ISNULL);
SELECT rt1.c3, rt1.c4, rt1.c0 FROM rt0 CROSS JOIN rt1 ON ((((((((((rt0.c0)AND(rt0.c0)))OR(rt0.c3)))OR(rt1.c3)))OR(v0.c1))) ISNULL) CROSS JOIN v0 ON ((((v0.c2)+(rt0.c0))) ISNULL) WHERE (((CASE rt1.c1  WHEN v0.c2 THEN v0.c2 END) NOTNULL)) UNION ALL SELECT rt1.c3, rt1.c4, rt1.c0 FROM rt0 CROSS JOIN rt1 ON ((((((((((rt0.c0)AND(rt0.c0)))OR(rt0.c3)))OR(rt1.c3)))OR(v0.c1))) ISNULL) CROSS JOIN v0 ON ((((v0.c2)+(rt0.c0))) ISNULL) WHERE ((NOT (((CASE rt1.c1  WHEN v0.c2 THEN v0.c2 END) NOTNULL)))) UNION ALL SELECT ALL rt1.c3, rt1.c4, rt1.c0 FROM rt0 CROSS JOIN rt1 ON ((((((((((rt0.c0)AND(rt0.c0)))OR(rt0.c3)))OR(rt1.c3)))OR(v0.c1))) ISNULL) CROSS JOIN v0 ON ((((v0.c2)+(rt0.c0))) ISNULL) WHERE (((((CASE rt1.c1  WHEN v0.c2 THEN v0.c2 END) NOTNULL)) ISNULL));
SELECT ALL rt1.c3, rt1.c4, rt1.c0 FROM rt0 CROSS JOIN rt1 ON ((((((((((rt0.c0)AND(rt0.c0)))OR(rt0.c3)))OR(rt1.c3)))OR(v0.c1))) ISNULL) CROSS JOIN v0 ON ((((v0.c2)+(rt0.c0))) ISNULL);
SELECT DISTINCT rt1.c3, rt1.c2, rt0.c4, rt1.c0, rt0.c2, rt1.c1, rt0.c1, rt0.c0, rt0.c3, rt1.c4 FROM rt1, rt0;
SELECT DISTINCT rt1.c3, rt1.c2, rt0.c4, rt1.c0, rt0.c2, rt1.c1, rt0.c1, rt0.c0, rt0.c3, rt1.c4 FROM rt1, rt0 NOT INDEXED WHERE (NULL) UNION SELECT DISTINCT rt1.c3, rt1.c2, rt0.c4, rt1.c0, rt0.c2, rt1.c1, rt0.c1, rt0.c0, rt0.c3, rt1.c4 FROM rt1, rt0 WHERE ((NOT (NULL))) UNION SELECT DISTINCT rt1.c3, rt1.c2, rt0.c4, rt1.c0, rt0.c2, rt1.c1, rt0.c1, rt0.c0, rt0.c3, rt1.c4 FROM rt1, rt0 WHERE (((NULL) ISNULL));
SELECT DISTINCT rt1.c3, rt1.c2, rt0.c4, rt1.c0, rt0.c2, rt1.c1, rt0.c1, rt0.c0, rt0.c3, rt1.c4 FROM rt1, rt0;
SELECT ALL rt1.c3, rt1.c2, rt1.c0, rt1.c1, rt1.c4 FROM rt1 GROUP BY rt1.c3, rt1.c2, rt1.c0, rt1.c1, rt1.c4;
SELECT rt1.c3, rt1.c2, rt1.c0, rt1.c1, rt1.c4 FROM rt1 WHERE (LENGTH(UNLIKELY(rt1.c0))) GROUP BY rt1.c3, rt1.c2, rt1.c0, rt1.c1, rt1.c4 UNION SELECT ALL rt1.c3, rt1.c2, rt1.c0, rt1.c1, rt1.c4 FROM rt1 WHERE ((NOT (LENGTH(UNLIKELY(rt1.c0))))) GROUP BY rt1.c3, rt1.c2, rt1.c0, rt1.c1, rt1.c4 UNION SELECT rt1.c3, rt1.c2, rt1.c0, rt1.c1, rt1.c4 FROM rt1 WHERE (((LENGTH(UNLIKELY(rt1.c0))) ISNULL)) GROUP BY rt1.c3, rt1.c2, rt1.c0, rt1.c1, rt1.c4;
SELECT ALL rt1.c3, rt1.c2, rt1.c0, rt1.c1, rt1.c4 FROM rt1 GROUP BY rt1.c3, rt1.c2, rt1.c0, rt1.c1, rt1.c4;
SELECT v0.c0, rt0.c4, rt1.c4, rt0.c3 FROM rt1 FULL OUTER JOIN rt0 ON (((rt1.c1 IN ())) BETWEEN (((((((((((((v0.c2)OR(rt0.c3)))OR(v0.c2)))OR(v0.c2)))OR(v0.c1)))OR('')))OR(rt1.c3))) AND (((rt1.c4)!=(v0.c0)))) RIGHT OUTER JOIN v0 ON CASE WHEN ((rt1.c1)>=(rt1.c0)) THEN CASE rt1.c4  WHEN rt0.c2 THEN v0.c2 WHEN rt1.c2 THEN v0.c1 WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c2 END ELSE (+ (v0.c0)) END GROUP BY v0.c0, rt0.c4, rt1.c4, rt0.c3;
SELECT ALL rt0.c2, v0.c0, rt0.c1, rt0.c4, rt1.c3, v0.c1, rt0.c3, rt0.c0, rt1.c4, rt1.c2 FROM v0, rt0, rt1;
SELECT rt0.c2, v0.c0, rt0.c1, rt0.c4, rt1.c3, v0.c1, rt0.c3, rt0.c0, rt1.c4, rt1.c2 FROM v0, rt0, rt1 WHERE ((((v0.c0))<((rt1.c1))) COLLATE RTRIM) UNION ALL SELECT rt0.c2, v0.c0, rt0.c1, rt0.c4, rt1.c3, v0.c1, rt0.c3, rt0.c0, rt1.c4, rt1.c2 FROM v0, rt0, rt1 WHERE ((NOT ((((v0.c0))<((rt1.c1))) COLLATE RTRIM))) UNION ALL SELECT ALL rt0.c2, v0.c0, rt0.c1, rt0.c4, rt1.c3, v0.c1, rt0.c3, rt0.c0, rt1.c4, rt1.c2 FROM v0, rt0, rt1 WHERE ((((((v0.c0))<((rt1.c1))) COLLATE RTRIM) ISNULL));
SELECT ALL rt0.c2, v0.c0, rt0.c1, rt0.c4, rt1.c3, v0.c1, rt0.c3, rt0.c0, rt1.c4, rt1.c2 FROM v0, rt0, rt1;
SELECT DISTINCT v0.c2, v0.c1 FROM v0, rt0, rt1;
SELECT DISTINCT v0.c2, v0.c1 FROM v0, rt0, rt1 WHERE ((((((((((((rt1.c1))>=((v0.c1))))OR(CAST(rt1.c0 AS REAL))))OR(CAST(rt0.c4 AS BLOB))))AND(0.3865363155177609)))AND(((v0.c2)IS(rt0.c1))))) UNION SELECT DISTINCT v0.c2, v0.c1 FROM v0, rt0, rt1 WHERE ((NOT ((((((((((((rt1.c1))>=((v0.c1))))OR(CAST(rt1.c0 AS REAL))))OR(CAST(rt0.c4 AS BLOB))))AND(0.3865363155177609)))AND(((v0.c2)IS(rt0.c1))))))) UNION SELECT DISTINCT v0.c2, v0.c1 FROM v0, rt0, rt1 WHERE ((((((((((((((rt1.c1))>=((v0.c1))))OR(CAST(rt1.c0 AS REAL))))OR(CAST(rt0.c4 AS BLOB))))AND(0.3865363155177609)))AND(((v0.c2)IS(rt0.c1))))) ISNULL));
SELECT DISTINCT v0.c2, v0.c1 FROM v0, rt0, rt1;
SELECT rt0.c3, rt0.c4, rt0.c1, rt1.c3, rt0.c0, rt1.c0, rt0.c2, rt1.c1 FROM rt0 INNER JOIN rt1 ON 'y-' GROUP BY rt0.c3, rt0.c4, rt0.c1, rt1.c3, rt0.c0, rt1.c0, rt0.c2, rt1.c1;
SELECT ALL rt0.c3, rt0.c4, rt0.c1, rt1.c3, rt0.c0, rt1.c0, rt0.c2, rt1.c1 FROM rt0 INNER JOIN rt1 ON 'y-' WHERE (CASE WHEN ((rt1.c3) NOT BETWEEN (rt1.c4) AND (NULL)) THEN rt1.c3 COLLATE RTRIM ELSE LOWER(rt0.c4) END) GROUP BY rt0.c3, rt0.c4, rt0.c1, rt1.c3, rt0.c0, rt1.c0, rt0.c2, rt1.c1 UNION SELECT ALL rt0.c3, rt0.c4, rt0.c1, rt1.c3, rt0.c0, rt1.c0, rt0.c2, rt1.c1 FROM rt0 INNER JOIN rt1 ON 'y-' WHERE ((NOT (CASE WHEN ((rt1.c3) NOT BETWEEN (rt1.c4) AND (NULL)) THEN rt1.c3 COLLATE RTRIM ELSE LOWER(rt0.c4) END))) GROUP BY rt0.c3, rt0.c4, rt0.c1, rt1.c3, rt0.c0, rt1.c0, rt0.c2, rt1.c1 UNION SELECT rt0.c3, rt0.c4, rt0.c1, rt1.c3, rt0.c0, rt1.c0, rt0.c2, rt1.c1 FROM rt0 INNER JOIN rt1 ON 'y-' WHERE (((CASE WHEN ((rt1.c3) NOT BETWEEN (rt1.c4) AND (NULL)) THEN rt1.c3 COLLATE RTRIM ELSE LOWER(rt0.c4) END) ISNULL)) GROUP BY rt0.c3, rt0.c4, rt0.c1, rt1.c3, rt0.c0, rt1.c0, rt0.c2, rt1.c1;
SELECT rt0.c3, rt0.c4, rt0.c1, rt1.c3, rt0.c0, rt1.c0, rt0.c2, rt1.c1 FROM rt0 INNER JOIN rt1 ON 'y-' GROUP BY rt0.c3, rt0.c4, rt0.c1, rt1.c3, rt0.c0, rt1.c0, rt0.c2, rt1.c1;
SELECT rt0.c0, rt0.c1, rt0.c4 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c4;
SELECT ALL rt0.c0, rt0.c1, rt0.c4 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c4 HAVING COUNT(*) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c4 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c4 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c4 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c4 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c0, rt0.c1, rt0.c4 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c4;
SELECT ALL rt0.c0, rt0.c1, rt0.c4 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c4 HAVING COUNT(*) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c4 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c4 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c4 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c4 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c0, rt0.c1, rt0.c4 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c4;
SELECT ALL rt0.c3, rt1.c4, rt0.c2, rt1.c0, rt0.c4, rt0.c1, rt0.c0, rt1.c2, rt1.c1, rt1.c3 FROM rt0 NATURAL JOIN rt1;
SELECT rt0.c3, rt1.c4, rt0.c2, rt1.c0, rt0.c4, rt0.c1, rt0.c0, rt1.c2, rt1.c1, rt1.c3 FROM rt0 NATURAL JOIN rt1 WHERE ((('0.23643040585959862') IS TRUE)) UNION ALL SELECT rt0.c3, rt1.c4, rt0.c2, rt1.c0, rt0.c4, rt0.c1, rt0.c0, rt1.c2, rt1.c1, rt1.c3 FROM rt0 NATURAL JOIN rt1 WHERE ((NOT ((('0.23643040585959862') IS TRUE)))) UNION ALL SELECT rt0.c3, rt1.c4, rt0.c2, rt1.c0, rt0.c4, rt0.c1, rt0.c0, rt1.c2, rt1.c1, rt1.c3 FROM rt0 NATURAL JOIN rt1 WHERE ((((('0.23643040585959862') IS TRUE)) ISNULL));
SELECT ALL rt0.c3, rt1.c4, rt0.c2, rt1.c0, rt0.c4, rt0.c1, rt0.c0, rt1.c2, rt1.c1, rt1.c3 FROM rt0 NATURAL JOIN rt1;
SELECT DISTINCT * FROM rt1, v0;
SELECT DISTINCT * FROM rt1, v0 WHERE (CAST(CASE WHEN v0.c2 THEN rt1.c2 ELSE v0.c2 END AS BLOB)) UNION SELECT DISTINCT * FROM rt1, v0 WHERE ((NOT (CAST(CASE WHEN v0.c2 THEN rt1.c2 ELSE v0.c2 END AS BLOB)))) UNION SELECT DISTINCT * FROM rt1, v0 WHERE (((CAST(CASE WHEN v0.c2 THEN rt1.c2 ELSE v0.c2 END AS BLOB)) ISNULL));
SELECT DISTINCT * FROM rt1, v0;
SELECT ALL rt0.c0, v0.c2, rt0.c4, rt0.c1, v0.c1, rt0.c2, rt0.c3 FROM rt0, v0 GROUP BY rt0.c0, v0.c2, rt0.c4, rt0.c1, v0.c1, rt0.c2, rt0.c3;
SELECT rt0.c0, v0.c2, rt0.c4, rt0.c1, v0.c1, rt0.c2, rt0.c3 FROM rt0, v0 WHERE (((rt0.c4)|(rt0.c4)) COLLATE BINARY COLLATE NOCASE) GROUP BY rt0.c0, v0.c2, rt0.c4, rt0.c1, v0.c1, rt0.c2, rt0.c3 UNION SELECT ALL rt0.c0, v0.c2, rt0.c4, rt0.c1, v0.c1, rt0.c2, rt0.c3 FROM rt0, v0 WHERE ((NOT (((rt0.c4)|(rt0.c4)) COLLATE BINARY COLLATE NOCASE))) GROUP BY rt0.c0, v0.c2, rt0.c4, rt0.c1, v0.c1, rt0.c2, rt0.c3 UNION SELECT ALL rt0.c0, v0.c2, rt0.c4, rt0.c1, v0.c1, rt0.c2, rt0.c3 FROM rt0, v0 WHERE (((((rt0.c4)|(rt0.c4)) COLLATE BINARY COLLATE NOCASE) ISNULL)) GROUP BY rt0.c0, v0.c2, rt0.c4, rt0.c1, v0.c1, rt0.c2, rt0.c3;
SELECT ALL rt0.c0, v0.c2, rt0.c4, rt0.c1, v0.c1, rt0.c2, rt0.c3 FROM rt0, v0 GROUP BY rt0.c0, v0.c2, rt0.c4, rt0.c1, v0.c1, rt0.c2, rt0.c3;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING rt0.c1 UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING (NOT (rt0.c1)) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING ((rt0.c1) ISNULL);
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING rt0.c1 UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING (NOT (rt0.c1)) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING ((rt0.c1) ISNULL);
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt1.c0, rt1.c2, rt0.c2 FROM rt0, rt1;
SELECT rt1.c0, rt1.c2, rt0.c2 FROM rt0, rt1 WHERE (((((((((CAST(rt0.c1 AS REAL))OR(CASE WHEN rt0.c4 THEN rt1.c3 END)))OR(TRIM(rt1.c2))))AND(((rt0.c4)>>(rt1.c1)))))OR(((rt1.c0)LIKE(rt1.c1))))) UNION ALL SELECT rt1.c0, rt1.c2, rt0.c2 FROM rt0, rt1 WHERE ((NOT (((((((((CAST(rt0.c1 AS REAL))OR(CASE WHEN rt0.c4 THEN rt1.c3 END)))OR(TRIM(rt1.c2))))AND(((rt0.c4)>>(rt1.c1)))))OR(((rt1.c0)LIKE(rt1.c1))))))) UNION ALL SELECT ALL rt1.c0, rt1.c2, rt0.c2 FROM rt0, rt1 WHERE (((((((((((CAST(rt0.c1 AS REAL))OR(CASE WHEN rt0.c4 THEN rt1.c3 END)))OR(TRIM(rt1.c2))))AND(((rt0.c4)>>(rt1.c1)))))OR(((rt1.c0)LIKE(rt1.c1))))) ISNULL));
SELECT ALL rt1.c0, rt1.c2, rt0.c2 FROM rt0, rt1;
SELECT DISTINCT rt0.c2, rt1.c1, rt1.c4, rt1.c0, rt1.c3 FROM rt0, rt1;
SELECT DISTINCT rt0.c2, rt1.c1, rt1.c4, rt1.c0, rt1.c3 FROM rt0, rt1 WHERE (CASE (- (rt1.c4))  WHEN ((rt0.c3) NOT NULL) THEN rt1.c4 COLLATE RTRIM END) UNION SELECT DISTINCT rt0.c2, rt1.c1, rt1.c4, rt1.c0, rt1.c3 FROM rt0, rt1 WHERE ((NOT (CASE (- (rt1.c4))  WHEN ((rt0.c3) NOT NULL) THEN rt1.c4 COLLATE RTRIM END))) UNION SELECT DISTINCT rt0.c2, rt1.c1, rt1.c4, rt1.c0, rt1.c3 FROM rt0, rt1 WHERE (((CASE (- (rt1.c4))  WHEN ((rt0.c3) NOT NULL) THEN rt1.c4 COLLATE RTRIM END) ISNULL));
SELECT DISTINCT rt0.c2, rt1.c1, rt1.c4, rt1.c0, rt1.c3 FROM rt0, rt1;
SELECT ALL rt0.c1, rt1.c3, rt1.c1 FROM rt0 LEFT OUTER JOIN rt1 ON rt0.c3 GROUP BY rt0.c1, rt1.c3, rt1.c1;
SELECT rt0.c1, rt1.c3, rt1.c1 FROM rt0 LEFT OUTER JOIN rt1 ON rt0.c3 WHERE (CASE WHEN CAST(rt1.c0 AS BLOB) THEN ((rt1.c3)GLOB(rt0.c4)) ELSE (~ (rt1.c1)) END) GROUP BY rt0.c1, rt1.c3, rt1.c1 UNION SELECT rt0.c1, rt1.c3, rt1.c1 FROM rt0 LEFT OUTER JOIN rt1 ON rt0.c3 WHERE ((NOT (CASE WHEN CAST(rt1.c0 AS BLOB) THEN ((rt1.c3)GLOB(rt0.c4)) ELSE (~ (rt1.c1)) END))) GROUP BY rt0.c1, rt1.c3, rt1.c1 UNION SELECT rt0.c1, rt1.c3, rt1.c1 FROM rt0 LEFT OUTER JOIN rt1 ON rt0.c3 WHERE (((CASE WHEN CAST(rt1.c0 AS BLOB) THEN ((rt1.c3)GLOB(rt0.c4)) ELSE (~ (rt1.c1)) END) ISNULL)) GROUP BY rt0.c1, rt1.c3, rt1.c1;
SELECT ALL rt0.c1, rt1.c3, rt1.c1 FROM rt0 LEFT OUTER JOIN rt1 ON rt0.c3 GROUP BY rt0.c1, rt1.c3, rt1.c1;
SELECT rt0.c4, rt1.c2, rt0.c1, rt0.c0, rt0.c3, rt1.c0, rt1.c4, rt0.c2, rt1.c3, rt1.c1 FROM rt0, rt1 GROUP BY rt0.c4, rt1.c2, rt0.c1, rt0.c0, rt0.c3, rt1.c0, rt1.c4, rt0.c2, rt1.c3, rt1.c1;
SELECT ALL rt0.c4, rt1.c2, rt0.c1, rt0.c0, rt0.c3, rt1.c0, rt1.c4, rt0.c2, rt1.c3, rt1.c1 FROM rt0, rt1 GROUP BY rt0.c4, rt1.c2, rt0.c1, rt0.c0, rt0.c3, rt1.c0, rt1.c4, rt0.c2, rt1.c3, rt1.c1 HAVING ((((rt1.c1) NOT NULL)) NOT NULL) UNION ALL SELECT ALL rt0.c4, rt1.c2, rt0.c1, rt0.c0, rt0.c3, rt1.c0, rt1.c4, rt0.c2, rt1.c3, rt1.c1 FROM rt0, rt1 GROUP BY rt0.c4, rt1.c2, rt0.c1, rt0.c0, rt0.c3, rt1.c0, rt1.c4, rt0.c2, rt1.c3, rt1.c1 HAVING (NOT (((((rt1.c1) NOT NULL)) NOT NULL))) UNION ALL SELECT rt0.c4, rt1.c2, rt0.c1, rt0.c0, rt0.c3, rt1.c0, rt1.c4, rt0.c2, rt1.c3, rt1.c1 FROM rt0, rt1 GROUP BY rt0.c4, rt1.c2, rt0.c1, rt0.c0, rt0.c3, rt1.c0, rt1.c4, rt0.c2, rt1.c3, rt1.c1 HAVING ((((((rt1.c1) NOT NULL)) NOT NULL)) ISNULL);
SELECT rt0.c4, rt1.c2, rt0.c1, rt0.c0, rt0.c3, rt1.c0, rt1.c4, rt0.c2, rt1.c3, rt1.c1 FROM rt0, rt1 GROUP BY rt0.c4, rt1.c2, rt0.c1, rt0.c0, rt0.c3, rt1.c0, rt1.c4, rt0.c2, rt1.c3, rt1.c1;
SELECT ALL rt0.c4, rt1.c2, rt0.c1, rt0.c0, rt0.c3, rt1.c0, rt1.c4, rt0.c2, rt1.c3, rt1.c1 FROM rt0, rt1 GROUP BY rt0.c4, rt1.c2, rt0.c1, rt0.c0, rt0.c3, rt1.c0, rt1.c4, rt0.c2, rt1.c3, rt1.c1 HAVING ((((rt1.c1) NOT NULL)) NOT NULL) UNION ALL SELECT ALL rt0.c4, rt1.c2, rt0.c1, rt0.c0, rt0.c3, rt1.c0, rt1.c4, rt0.c2, rt1.c3, rt1.c1 FROM rt0, rt1 GROUP BY rt0.c4, rt1.c2, rt0.c1, rt0.c0, rt0.c3, rt1.c0, rt1.c4, rt0.c2, rt1.c3, rt1.c1 HAVING (NOT (((((rt1.c1) NOT NULL)) NOT NULL))) UNION ALL SELECT rt0.c4, rt1.c2, rt0.c1, rt0.c0, rt0.c3, rt1.c0, rt1.c4, rt0.c2, rt1.c3, rt1.c1 FROM rt0, rt1 GROUP BY rt0.c4, rt1.c2, rt0.c1, rt0.c0, rt0.c3, rt1.c0, rt1.c4, rt0.c2, rt1.c3, rt1.c1 HAVING ((((((rt1.c1) NOT NULL)) NOT NULL)) ISNULL);
SELECT rt0.c4, rt1.c2, rt0.c1, rt0.c0, rt0.c3, rt1.c0, rt1.c4, rt0.c2, rt1.c3, rt1.c1 FROM rt0, rt1 GROUP BY rt0.c4, rt1.c2, rt0.c1, rt0.c0, rt0.c3, rt1.c0, rt1.c4, rt0.c2, rt1.c3, rt1.c1;
SELECT ALL rt1.c0, rt1.c2, rt1.c4, rt1.c3 FROM rt1, v0;
SELECT ALL rt1.c0, rt1.c2, rt1.c4, rt1.c3 FROM rt1, v0 WHERE ((NOT (CASE v0.c1  WHEN v0.c2 THEN v0.c0 END))) UNION ALL SELECT ALL rt1.c0, rt1.c2, rt1.c4, rt1.c3 FROM rt1, v0 WHERE ((NOT ((NOT (CASE v0.c1  WHEN v0.c2 THEN v0.c0 END))))) UNION ALL SELECT ALL rt1.c0, rt1.c2, rt1.c4, rt1.c3 FROM rt1, v0 WHERE ((((NOT (CASE v0.c1  WHEN v0.c2 THEN v0.c0 END))) ISNULL));
SELECT ALL rt1.c0, rt1.c2, rt1.c4, rt1.c3 FROM rt1, v0;
SELECT DISTINCT rt1.c1, rt1.c0 FROM rt1;
SELECT DISTINCT rt1.c1, rt1.c0 FROM rt1 WHERE (((((((((rt1.c0)OR((rt1.c1 IN (x'f458')))))OR(((rt1.c3)&(rt1.c2)))))OR(((rt1.c1)*(rt1.c3)))))OR(((rt1.c2) NOTNULL)))) UNION SELECT DISTINCT rt1.c1, rt1.c0 FROM rt1 WHERE ((NOT (((((((((rt1.c0)OR((rt1.c1 IN (x'f458')))))OR(((rt1.c3)&(rt1.c2)))))OR(((rt1.c1)*(rt1.c3)))))OR(((rt1.c2) NOTNULL)))))) UNION SELECT DISTINCT rt1.c1, rt1.c0 FROM rt1 WHERE (((((((((((rt1.c0)OR((rt1.c1 IN (x'f458')))))OR(((rt1.c3)&(rt1.c2)))))OR(((rt1.c1)*(rt1.c3)))))OR(((rt1.c2) NOTNULL)))) ISNULL));
SELECT DISTINCT rt1.c1, rt1.c0 FROM rt1;
SELECT ALL v0.c0, rt1.c2, rt1.c3, rt1.c1, rt1.c4, v0.c2, rt0.c3, rt0.c4, rt0.c2 FROM rt1, rt0, v0 GROUP BY v0.c0, rt1.c2, rt1.c3, rt1.c1, rt1.c4, v0.c2, rt0.c3, rt0.c4, rt0.c2;
SELECT v0.c0, rt1.c2, rt1.c3, rt1.c1, rt1.c4, v0.c2, rt0.c3, rt0.c4, rt0.c2 FROM rt1, rt0, v0 WHERE ((((rt0.c0)) BETWEEN ((((rt1.c3)IS(rt0.c1)))) AND ((v0.c2)))) GROUP BY v0.c0, rt1.c2, rt1.c3, rt1.c1, rt1.c4, v0.c2, rt0.c3, rt0.c4, rt0.c2 UNION SELECT v0.c0, rt1.c2, rt1.c3, rt1.c1, rt1.c4, v0.c2, rt0.c3, rt0.c4, rt0.c2 FROM rt1, rt0, v0 WHERE ((NOT ((((rt0.c0)) BETWEEN ((((rt1.c3)IS(rt0.c1)))) AND ((v0.c2)))))) GROUP BY v0.c0, rt1.c2, rt1.c3, rt1.c1, rt1.c4, v0.c2, rt0.c3, rt0.c4, rt0.c2 UNION SELECT ALL v0.c0, rt1.c2, rt1.c3, rt1.c1, rt1.c4, v0.c2, rt0.c3, rt0.c4, rt0.c2 FROM rt1, rt0, v0 WHERE ((((((rt0.c0)) BETWEEN ((((rt1.c3)IS(rt0.c1)))) AND ((v0.c2)))) ISNULL)) GROUP BY v0.c0, rt1.c2, rt1.c3, rt1.c1, rt1.c4, v0.c2, rt0.c3, rt0.c4, rt0.c2;
SELECT ALL v0.c0, rt1.c2, rt1.c3, rt1.c1, rt1.c4, v0.c2, rt0.c3, rt0.c4, rt0.c2 FROM rt1, rt0, v0 GROUP BY v0.c0, rt1.c2, rt1.c3, rt1.c1, rt1.c4, v0.c2, rt0.c3, rt0.c4, rt0.c2;
SELECT v0.c1, rt1.c2, rt0.c1 FROM rt1, rt0 FULL OUTER JOIN v0 ON ((((((((((rt1.c4)AND(rt1.c4)))OR(rt0.c3)))OR(rt1.c3)))AND(rt0.c1)))+(((rt0.c0)-(v0.c1)))) GROUP BY v0.c1, rt1.c2, rt0.c1;
SELECT ALL v0.c1, rt1.c2, rt0.c1 FROM rt1, rt0 FULL OUTER JOIN v0 ON ((((((((((rt1.c4)AND(rt1.c4)))OR(rt0.c3)))OR(rt1.c3)))AND(rt0.c1)))+(((rt0.c0)-(v0.c1)))) GROUP BY v0.c1, rt1.c2, rt0.c1 HAVING ((CAST(TOTAL(rt0.c0) AS INTEGER))GLOB(MAX(rt0.c4))) UNION ALL SELECT v0.c1, rt1.c2, rt0.c1 FROM rt1, rt0 FULL OUTER JOIN v0 ON ((((((((((rt1.c4)AND(rt1.c4)))OR(rt0.c3)))OR(rt1.c3)))AND(rt0.c1)))+(((rt0.c0)-(v0.c1)))) GROUP BY v0.c1, rt1.c2, rt0.c1 HAVING (NOT (((CAST(TOTAL(rt0.c0) AS INTEGER))GLOB(MAX(rt0.c4))))) UNION ALL SELECT v0.c1, rt1.c2, rt0.c1 FROM rt1, rt0 FULL OUTER JOIN v0 ON ((((((((((rt1.c4)AND(rt1.c4)))OR(rt0.c3)))OR(rt1.c3)))AND(rt0.c1)))+(((rt0.c0)-(v0.c1)))) GROUP BY v0.c1, rt1.c2, rt0.c1 HAVING ((((CAST(TOTAL(rt0.c0) AS INTEGER))GLOB(MAX(rt0.c4)))) ISNULL);
SELECT v0.c1, rt1.c2, rt0.c1 FROM rt1, rt0 FULL OUTER JOIN v0 ON ((((((((((rt1.c4)AND(rt1.c4)))OR(rt0.c3)))OR(rt1.c3)))AND(rt0.c1)))+(((rt0.c0)-(v0.c1)))) GROUP BY v0.c1, rt1.c2, rt0.c1;
SELECT ALL v0.c1, rt1.c2, rt0.c1 FROM rt1, rt0 FULL OUTER JOIN v0 ON ((((((((((rt1.c4)AND(rt1.c4)))OR(rt0.c3)))OR(rt1.c3)))AND(rt0.c1)))+(((rt0.c0)-(v0.c1)))) GROUP BY v0.c1, rt1.c2, rt0.c1 HAVING ((CAST(TOTAL(rt0.c0) AS INTEGER))GLOB(MAX(rt0.c4))) UNION ALL SELECT v0.c1, rt1.c2, rt0.c1 FROM rt1, rt0 FULL OUTER JOIN v0 ON ((((((((((rt1.c4)AND(rt1.c4)))OR(rt0.c3)))OR(rt1.c3)))AND(rt0.c1)))+(((rt0.c0)-(v0.c1)))) GROUP BY v0.c1, rt1.c2, rt0.c1 HAVING (NOT (((CAST(TOTAL(rt0.c0) AS INTEGER))GLOB(MAX(rt0.c4))))) UNION ALL SELECT v0.c1, rt1.c2, rt0.c1 FROM rt1, rt0 FULL OUTER JOIN v0 ON ((((((((((rt1.c4)AND(rt1.c4)))OR(rt0.c3)))OR(rt1.c3)))AND(rt0.c1)))+(((rt0.c0)-(v0.c1)))) GROUP BY v0.c1, rt1.c2, rt0.c1 HAVING ((((CAST(TOTAL(rt0.c0) AS INTEGER))GLOB(MAX(rt0.c4)))) ISNULL);
SELECT v0.c1, rt1.c2, rt0.c1 FROM rt1, rt0 FULL OUTER JOIN v0 ON ((((((((((rt1.c4)AND(rt1.c4)))OR(rt0.c3)))OR(rt1.c3)))AND(rt0.c1)))+(((rt0.c0)-(v0.c1)))) GROUP BY v0.c1, rt1.c2, rt0.c1;
SELECT ALL * FROM v0;
SELECT * FROM v0 WHERE (((((CASE v0.c2  WHEN v0.c2 THEN v0.c2 END)AND((((v0.c0, v0.c0, v0.c1)) BETWEEN ((v0.c2, v0.c0, v0.c2)) AND ((v0.c2, v0.c0, ''))))))OR(v0.c0 COLLATE NOCASE))) UNION ALL SELECT * FROM v0 WHERE ((NOT (((((CASE v0.c2  WHEN v0.c2 THEN v0.c2 END)AND((((v0.c0, v0.c0, v0.c1)) BETWEEN ((v0.c2, v0.c0, v0.c2)) AND ((v0.c2, v0.c0, ''))))))OR(v0.c0 COLLATE NOCASE))))) UNION ALL SELECT * FROM v0 WHERE (((((((CASE v0.c2  WHEN v0.c2 THEN v0.c2 END)AND((((v0.c0, v0.c0, v0.c1)) BETWEEN ((v0.c2, v0.c0, v0.c2)) AND ((v0.c2, v0.c0, ''))))))OR(v0.c0 COLLATE NOCASE))) ISNULL));
SELECT ALL * FROM v0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (rt0.c3) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (rt0.c3))) UNION SELECT DISTINCT * FROM rt0 WHERE (((rt0.c3) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt1.c0 FROM rt1 GROUP BY rt1.c0;
SELECT ALL rt1.c0 FROM rt1 WHERE ((((-6.32799192E8)) BETWEEN (((rt1.c1 IN (rt1.c3, rt1.c2)))) AND ((((((((((rt1.c4)OR(rt1.c4)))OR(rt1.c4)))OR(rt1.c4)))AND(rt1.c0)))))) GROUP BY rt1.c0 UNION SELECT ALL rt1.c0 FROM rt1 WHERE ((NOT ((((-6.32799192E8)) BETWEEN (((rt1.c1 IN (rt1.c3, rt1.c2)))) AND ((((((((((rt1.c4)OR(rt1.c4)))OR(rt1.c4)))OR(rt1.c4)))AND(rt1.c0)))))))) GROUP BY rt1.c0 UNION SELECT rt1.c0 FROM rt1 WHERE ((((((-6.32799192E8)) BETWEEN (((rt1.c1 IN (rt1.c3, rt1.c2)))) AND ((((((((((rt1.c4)OR(rt1.c4)))OR(rt1.c4)))OR(rt1.c4)))AND(rt1.c0)))))) ISNULL)) GROUP BY rt1.c0;
SELECT ALL rt1.c0 FROM rt1 GROUP BY rt1.c0;
SELECT ALL v0.c1 FROM v0 GROUP BY v0.c1;
SELECT ALL v0.c1 FROM v0 GROUP BY v0.c1 HAVING ((CASE WHEN v0.c2 THEN v0.c1 END)==(COUNT(TOTAL(GROUP_CONCAT(COUNT(*)))))) UNION ALL SELECT ALL v0.c1 FROM v0 GROUP BY v0.c1 HAVING (NOT (((CASE WHEN v0.c2 THEN v0.c1 END)==(COUNT(TOTAL(GROUP_CONCAT(COUNT(*)))))))) UNION ALL SELECT v0.c1 FROM v0 GROUP BY v0.c1 HAVING ((((CASE WHEN v0.c2 THEN v0.c1 END)==(COUNT(TOTAL(GROUP_CONCAT(COUNT(*))))))) ISNULL);
SELECT * FROM v0;
SELECT * FROM v0 WHERE (CAST(v0.c1 AS REAL)) UNION ALL SELECT * FROM v0 WHERE ((NOT (CAST(v0.c1 AS REAL)))) UNION ALL SELECT * FROM v0 WHERE (((CAST(v0.c1 AS REAL)) ISNULL));
SELECT * FROM v0;
SELECT DISTINCT rt0.c3, rt1.c4, rt1.c0, rt1.c3, rt1.c2, rt0.c0, rt1.c1, rt0.c1, rt0.c4 FROM rt1, rt0;
SELECT DISTINCT rt0.c3, rt1.c4, rt1.c0, rt1.c3, rt1.c2, rt0.c0, rt1.c1, rt0.c1, rt0.c4 FROM rt1, rt0 WHERE (CASE ((rt1.c2)AND(rt0.c3))  WHEN ((rt1.c1)&(rt1.c3)) THEN rt0.c0 END) UNION SELECT DISTINCT rt0.c3, rt1.c4, rt1.c0, rt1.c3, rt1.c2, rt0.c0, rt1.c1, rt0.c1, rt0.c4 FROM rt1, rt0 WHERE ((NOT (CASE ((rt1.c2)AND(rt0.c3))  WHEN ((rt1.c1)&(rt1.c3)) THEN rt0.c0 END))) UNION SELECT DISTINCT rt0.c3, rt1.c4, rt1.c0, rt1.c3, rt1.c2, rt0.c0, rt1.c1, rt0.c1, rt0.c4 FROM rt1, rt0 WHERE (((CASE ((rt1.c2)AND(rt0.c3))  WHEN ((rt1.c1)&(rt1.c3)) THEN rt0.c0 END) ISNULL));
SELECT DISTINCT rt0.c3, rt1.c4, rt1.c0, rt1.c3, rt1.c2, rt0.c0, rt1.c1, rt0.c1, rt0.c4 FROM rt1, rt0;
SELECT v0.c2, rt0.c0 FROM rt1, rt0, v0 GROUP BY v0.c2, rt0.c0;
SELECT v0.c2, rt0.c0 FROM rt1, rt0, v0 WHERE ((((((- (v0.c1)))OR(((rt1.c4) ISNULL))))OR(rt1.c0 COLLATE NOCASE))) GROUP BY v0.c2, rt0.c0 UNION SELECT ALL v0.c2, rt0.c0 FROM rt1, rt0, v0 WHERE ((NOT ((((((- (v0.c1)))OR(((rt1.c4) ISNULL))))OR(rt1.c0 COLLATE NOCASE))))) GROUP BY v0.c2, rt0.c0 UNION SELECT ALL v0.c2, rt0.c0 FROM rt1, rt0, v0 WHERE ((((((((- (v0.c1)))OR(((rt1.c4) ISNULL))))OR(rt1.c0 COLLATE NOCASE))) ISNULL)) GROUP BY v0.c2, rt0.c0;
SELECT v0.c2, rt0.c0 FROM rt1, rt0, v0 GROUP BY v0.c2, rt0.c0;
SELECT ALL v0.c1, rt0.c4, rt0.c0, v0.c2, v0.c0, rt0.c3, rt0.c2, rt0.c1 FROM rt0, v0 GROUP BY v0.c1, rt0.c4, rt0.c0, v0.c2, v0.c0, rt0.c3, rt0.c2, rt0.c1;
SELECT v0.c1, rt0.c4, rt0.c0, v0.c2, v0.c0, rt0.c3, rt0.c2, rt0.c1 FROM rt0, v0 GROUP BY v0.c1, rt0.c4, rt0.c0, v0.c2, v0.c0, rt0.c3, rt0.c2, rt0.c1 HAVING TOTAL(SUM('LaK54t')) UNION ALL SELECT v0.c1, rt0.c4, rt0.c0, v0.c2, v0.c0, rt0.c3, rt0.c2, rt0.c1 FROM rt0, v0 GROUP BY v0.c1, rt0.c4, rt0.c0, v0.c2, v0.c0, rt0.c3, rt0.c2, rt0.c1 HAVING (NOT (TOTAL(SUM('LaK54t')))) UNION ALL SELECT ALL v0.c1, rt0.c4, rt0.c0, v0.c2, v0.c0, rt0.c3, rt0.c2, rt0.c1 FROM rt0, v0 GROUP BY v0.c1, rt0.c4, rt0.c0, v0.c2, v0.c0, rt0.c3, rt0.c2, rt0.c1 HAVING ((TOTAL(SUM('LaK54t'))) ISNULL);
SELECT SUM(NULLIF(DISTINCT (rt0.c2 IN ()), ((rt0.c2) NOT BETWEEN (v0.c2) AND (rt1.c4)))) FROM v0, rt1, rt0 ORDER BY ((((v0.c0)IS(rt1.c0))) NOT NULL) DESC  NULLS FIRST;
SELECT ALL * FROM v0 NOT INDEXED;
SELECT ALL * FROM v0 WHERE (((((((((((0x23d2ab9f)IS(v0.c2)))AND(IFNULL(DISTINCT v0.c0, v0.c2))))AND((((v0.c0)) BETWEEN (('-1873924142')) AND ((v0.c1))))))OR((v0.c0 IN (v0.c2)))))OR((- (v0.c2))))) UNION ALL SELECT ALL * FROM v0 WHERE ((NOT (((((((((((0X23d2ab9f)IS(v0.c2)))AND(IFNULL(DISTINCT v0.c0, v0.c2))))AND((((v0.c0)) BETWEEN (('-1873924142')) AND ((v0.c1))))))OR((v0.c0 IN (v0.c2)))))OR((- (v0.c2))))))) UNION ALL SELECT * FROM v0 WHERE (((((((((((((0X23d2ab9f)IS(v0.c2)))AND(IFNULL(DISTINCT v0.c0, v0.c2))))AND((((v0.c0)) BETWEEN (('-1873924142')) AND ((v0.c1))))))OR((v0.c0 IN (v0.c2)))))OR((- (v0.c2))))) ISNULL));
SELECT ALL * FROM v0 NOT INDEXED;
SELECT DISTINCT rt1.c4 FROM rt1;
SELECT DISTINCT rt1.c4 FROM rt1 WHERE (UPPER(DISTINCT ((((rt1.c4)AND(rt1.c0)))OR(rt1.c0)))) UNION SELECT DISTINCT rt1.c4 FROM rt1 WHERE ((NOT (UPPER(DISTINCT ((((rt1.c4)AND(rt1.c0)))OR(rt1.c0)))))) UNION SELECT DISTINCT rt1.c4 FROM rt1 WHERE (((UPPER(DISTINCT ((((rt1.c4)AND(rt1.c0)))OR(rt1.c0)))) ISNULL));
SELECT DISTINCT rt1.c4 FROM rt1;
SELECT rt1.c1, rt1.c3 FROM v0, rt1 GROUP BY rt1.c1, rt1.c3;
SELECT rt1.c1, rt1.c3 FROM v0, rt1 WHERE (1.722217948E9) GROUP BY rt1.c1, rt1.c3 UNION SELECT rt1.c1, rt1.c3 FROM v0, rt1 WHERE ((NOT (1.722217948E9))) GROUP BY rt1.c1, rt1.c3 UNION SELECT ALL rt1.c1, rt1.c3 FROM v0, rt1 WHERE (((1.722217948E9) ISNULL)) GROUP BY rt1.c1, rt1.c3;
SELECT rt1.c1, rt1.c3 FROM v0, rt1 GROUP BY rt1.c1, rt1.c3;
SELECT ALL rt1.c2 FROM rt1 RIGHT OUTER JOIN rt0 ON ((((rt0.c2)<>(rt0.c3))) BETWEEN (((rt1.c3)>>(rt0.c1))) AND (CAST(rt0.c4 AS NUMERIC))) GROUP BY rt1.c2;
SELECT ALL rt1.c2 FROM rt1 RIGHT OUTER JOIN rt0 ON ((((rt0.c2)!=(rt0.c3))) BETWEEN (((rt1.c3)>>(rt0.c1))) AND (CAST(rt0.c4 AS NUMERIC))) GROUP BY rt1.c2 HAVING (rt1.c4 IN ()) UNION ALL SELECT ALL rt1.c2 FROM rt1 RIGHT OUTER JOIN rt0 ON ((((rt0.c2)<>(rt0.c3))) BETWEEN (((rt1.c3)>>(rt0.c1))) AND (CAST(rt0.c4 AS NUMERIC))) GROUP BY rt1.c2 HAVING (NOT ((rt1.c4 IN ()))) UNION ALL SELECT ALL rt1.c2 FROM rt1 RIGHT OUTER JOIN rt0 ON ((((rt0.c2)<>(rt0.c3))) BETWEEN (((rt1.c3)>>(rt0.c1))) AND (CAST(rt0.c4 AS NUMERIC))) GROUP BY rt1.c2 HAVING (((rt1.c4 IN ())) ISNULL);
SELECT ALL rt1.c2 FROM rt1 RIGHT OUTER JOIN rt0 ON ((((rt0.c2)<>(rt0.c3))) BETWEEN (((rt1.c3)>>(rt0.c1))) AND (CAST(rt0.c4 AS NUMERIC))) GROUP BY rt1.c2;
SELECT ALL rt1.c2 FROM rt1 RIGHT OUTER JOIN rt0 ON ((((rt0.c2)!=(rt0.c3))) BETWEEN (((rt1.c3)>>(rt0.c1))) AND (CAST(rt0.c4 AS NUMERIC))) GROUP BY rt1.c2 HAVING (rt1.c4 IN ()) UNION ALL SELECT ALL rt1.c2 FROM rt1 RIGHT OUTER JOIN rt0 ON ((((rt0.c2)<>(rt0.c3))) BETWEEN (((rt1.c3)>>(rt0.c1))) AND (CAST(rt0.c4 AS NUMERIC))) GROUP BY rt1.c2 HAVING (NOT ((rt1.c4 IN ()))) UNION ALL SELECT ALL rt1.c2 FROM rt1 RIGHT OUTER JOIN rt0 ON ((((rt0.c2)<>(rt0.c3))) BETWEEN (((rt1.c3)>>(rt0.c1))) AND (CAST(rt0.c4 AS NUMERIC))) GROUP BY rt1.c2 HAVING (((rt1.c4 IN ())) ISNULL);
SELECT ALL rt1.c2 FROM rt1 RIGHT OUTER JOIN rt0 ON ((((rt0.c2)<>(rt0.c3))) BETWEEN (((rt1.c3)>>(rt0.c1))) AND (CAST(rt0.c4 AS NUMERIC))) GROUP BY rt1.c2;
SELECT ALL * FROM rt0 INNER JOIN rt1 ON 0.4916558665398967 RIGHT OUTER JOIN v0 ON ((CAST(rt1.c1 AS REAL))!=(CAST(rt0.c4 AS TEXT)));
SELECT * FROM rt0 NOT INDEXED INNER JOIN rt1 ON 0.4916558665398967 RIGHT OUTER JOIN v0 ON ((CAST(rt1.c1 AS REAL))!=(CAST(rt0.c4 AS TEXT))) WHERE ((((((v0.c0)) NOT BETWEEN ((v0.c1)) AND ((0.05703240980825419)))) NOTNULL)) UNION ALL SELECT ALL * FROM rt0 INNER JOIN rt1 ON 0.4916558665398967 RIGHT OUTER JOIN v0 ON ((CAST(rt1.c1 AS REAL))!=(CAST(rt0.c4 AS TEXT))) WHERE ((NOT ((((((v0.c0)) NOT BETWEEN ((v0.c1)) AND ((0.05703240980825419)))) NOTNULL)))) UNION ALL SELECT * FROM rt0 INNER JOIN rt1 ON 0.4916558665398967 RIGHT OUTER JOIN v0 ON ((CAST(rt1.c1 AS REAL))!=(CAST(rt0.c4 AS TEXT))) WHERE ((((((((v0.c0)) NOT BETWEEN ((v0.c1)) AND ((0.05703240980825419)))) NOTNULL)) ISNULL));
SELECT ALL * FROM rt0 INNER JOIN rt1 ON 0.4916558665398967 RIGHT OUTER JOIN v0 ON ((CAST(rt1.c1 AS REAL))!=(CAST(rt0.c4 AS TEXT)));
SELECT DISTINCT * FROM rt0, rt1, v0;
SELECT DISTINCT * FROM rt0, rt1, v0 WHERE ((((v0.c0) BETWEEN (rt1.c4) AND (rt0.c2)) IN ((v0.c1 IN ())))) UNION SELECT DISTINCT * FROM rt0, rt1, v0 WHERE ((NOT ((((v0.c0) BETWEEN (rt1.c4) AND (rt0.c2)) IN ((v0.c1 IN ())))))) UNION SELECT DISTINCT * FROM rt0, rt1, v0 WHERE ((((((v0.c0) BETWEEN (rt1.c4) AND (rt0.c2)) IN ((v0.c1 IN ())))) ISNULL));
SELECT DISTINCT * FROM rt0, rt1, v0;
SELECT rt1.c1, v0.c0, v0.c1 FROM v0, rt1, rt0 GROUP BY rt1.c1, v0.c0, v0.c1;
SELECT rt1.c1, v0.c0, v0.c1 FROM v0, rt1, rt0 WHERE (((CASE WHEN rt0.c2 THEN rt1.c0 END)IS NOT(CAST(rt1.c4 AS REAL)))) GROUP BY rt1.c1, v0.c0, v0.c1 UNION SELECT ALL rt1.c1, v0.c0, v0.c1 FROM v0, rt1, rt0 WHERE ((NOT (((CASE WHEN rt0.c2 THEN rt1.c0 END)IS NOT(CAST(rt1.c4 AS REAL)))))) GROUP BY rt1.c1, v0.c0, v0.c1 UNION SELECT rt1.c1, v0.c0, v0.c1 FROM v0, rt1, rt0 WHERE (((((CASE WHEN rt0.c2 THEN rt1.c0 END)IS NOT(CAST(rt1.c4 AS REAL)))) ISNULL)) GROUP BY rt1.c1, v0.c0, v0.c1;
SELECT rt1.c1, v0.c0, v0.c1 FROM v0, rt1, rt0 GROUP BY rt1.c1, v0.c0, v0.c1;
SELECT rt0.c3, rt0.c2, rt1.c4, rt1.c3, rt1.c0 FROM rt0, rt1 GROUP BY rt0.c3, rt0.c2, rt1.c4, rt1.c3, rt1.c0;
SELECT rt0.c3, rt0.c2, rt1.c4, rt1.c3, rt1.c0 FROM rt0, rt1 GROUP BY rt0.c3, rt0.c2, rt1.c4, rt1.c3, rt1.c0 HAVING MIN(TOTAL(rt1.c3)) COLLATE NOCASE UNION ALL SELECT rt0.c3, rt0.c2, rt1.c4, rt1.c3, rt1.c0 FROM rt0, rt1 GROUP BY rt0.c3, rt0.c2, rt1.c4, rt1.c3, rt1.c0 HAVING (NOT (MIN(TOTAL(rt1.c3)) COLLATE NOCASE)) UNION ALL SELECT rt0.c3, rt0.c2, rt1.c4, rt1.c3, rt1.c0 FROM rt0, rt1 GROUP BY rt0.c3, rt0.c2, rt1.c4, rt1.c3, rt1.c0 HAVING ((MIN(TOTAL(rt1.c3)) COLLATE NOCASE) ISNULL);
SELECT * FROM rt0, v0 CROSS JOIN rt1 ON ((((CAST(rt0.c1 AS REAL))OR(((((rt1.c2)AND(rt1.c1)))AND(rt1.c1)))))OR((((('Bwo')OR(x'bb44')))AND(rt1.c0))));
SELECT * FROM rt0, v0 CROSS JOIN rt1 ON ((((CAST(rt0.c1 AS REAL))OR(((((rt1.c2)AND(rt1.c1)))AND(rt1.c1)))))OR((((('Bwo')OR(x'bb44')))AND(rt1.c0)))) WHERE (rt1.c3) UNION ALL SELECT * FROM rt0, v0 CROSS JOIN rt1 ON ((((CAST(rt0.c1 AS REAL))OR(((((rt1.c2)AND(rt1.c1)))AND(rt1.c1)))))OR((((('Bwo')OR(x'bb44')))AND(rt1.c0)))) WHERE ((NOT (rt1.c3))) UNION ALL SELECT ALL * FROM rt0, v0 CROSS JOIN rt1 ON ((((CAST(rt0.c1 AS REAL))OR(((((rt1.c2)AND(rt1.c1)))AND(rt1.c1)))))OR((((('Bwo')OR(x'bb44')))AND(rt1.c0)))) WHERE (((rt1.c3) ISNULL));
SELECT * FROM rt0, v0 CROSS JOIN rt1 ON ((((CAST(rt0.c1 AS REAL))OR(((((rt1.c2)AND(rt1.c1)))AND(rt1.c1)))))OR((((('Bwo')OR(x'bb44')))AND(rt1.c0))));
SELECT DISTINCT rt0.c3, rt0.c2, rt0.c4, v0.c1, rt0.c0, rt1.c0, v0.c0, rt1.c3, rt1.c4, rt1.c2 FROM v0, rt0 FULL OUTER JOIN rt1 ON (((((rt1.c0, rt0.c4, rt1.c1))>((x'', rt1.c2, rt0.c3)))) IS FALSE);
SELECT DISTINCT rt0.c3, rt0.c2, rt0.c4, v0.c1, rt0.c0, rt1.c0, v0.c0, rt1.c3, rt1.c4, rt1.c2 FROM v0, rt0 FULL OUTER JOIN rt1 ON (((((rt1.c0, rt0.c4, rt1.c1))>((x'', rt1.c2, rt0.c3)))) IS FALSE) WHERE (CAST(rt0.c4 AS BLOB) COLLATE RTRIM COLLATE RTRIM) UNION SELECT DISTINCT rt0.c3, rt0.c2, rt0.c4, v0.c1, rt0.c0, rt1.c0, v0.c0, rt1.c3, rt1.c4, rt1.c2 FROM v0, rt0 FULL OUTER JOIN rt1 ON (((((rt1.c0, rt0.c4, rt1.c1))>((x'', rt1.c2, rt0.c3)))) IS FALSE) WHERE ((NOT (CAST(rt0.c4 AS BLOB) COLLATE RTRIM COLLATE RTRIM))) UNION SELECT DISTINCT rt0.c3, rt0.c2, rt0.c4, v0.c1, rt0.c0, rt1.c0, v0.c0, rt1.c3, rt1.c4, rt1.c2 FROM v0, rt0 FULL OUTER JOIN rt1 ON (((((rt1.c0, rt0.c4, rt1.c1))>((x'', rt1.c2, rt0.c3)))) IS FALSE) WHERE (((CAST(rt0.c4 AS BLOB) COLLATE RTRIM COLLATE RTRIM) ISNULL));
SELECT DISTINCT rt0.c3, rt0.c2, rt0.c4, v0.c1, rt0.c0, rt1.c0, v0.c0, rt1.c3, rt1.c4, rt1.c2 FROM v0, rt0 FULL OUTER JOIN rt1 ON (((((rt1.c0, rt0.c4, rt1.c1))>((x'', rt1.c2, rt0.c3)))) IS FALSE);
SELECT ALL rt0.c3, rt1.c1, rt0.c2, rt1.c2, v0.c0, v0.c2, rt1.c0, v0.c1, rt0.c0, rt1.c3, rt0.c4, rt1.c4, rt0.c1 FROM v0, rt1 NOT INDEXED, rt0 GROUP BY rt0.c3, rt1.c1, rt0.c2, rt1.c2, v0.c0, v0.c2, rt1.c0, v0.c1, rt0.c0, rt1.c3, rt0.c4, rt1.c4, rt0.c1;
SELECT ALL rt0.c3, rt1.c1, rt0.c2, rt1.c2, v0.c0, v0.c2, rt1.c0, v0.c1, rt0.c0, rt1.c3, rt0.c4, rt1.c4, rt0.c1 FROM v0, rt1, rt0 WHERE (((rt1.c1) NOT BETWEEN (v0.c0) AND (rt0.c1)) COLLATE NOCASE) GROUP BY rt0.c3, rt1.c1, rt0.c2, rt1.c2, v0.c0, v0.c2, rt1.c0, v0.c1, rt0.c0, rt1.c3, rt0.c4, rt1.c4, rt0.c1 UNION SELECT rt0.c3, rt1.c1, rt0.c2, rt1.c2, v0.c0, v0.c2, rt1.c0, v0.c1, rt0.c0, rt1.c3, rt0.c4, rt1.c4, rt0.c1 FROM v0, rt1, rt0 WHERE ((NOT (((rt1.c1) NOT BETWEEN (v0.c0) AND (rt0.c1)) COLLATE NOCASE))) GROUP BY rt0.c3, rt1.c1, rt0.c2, rt1.c2, v0.c0, v0.c2, rt1.c0, v0.c1, rt0.c0, rt1.c3, rt0.c4, rt1.c4, rt0.c1 UNION SELECT ALL rt0.c3, rt1.c1, rt0.c2, rt1.c2, v0.c0, v0.c2, rt1.c0, v0.c1, rt0.c0, rt1.c3, rt0.c4, rt1.c4, rt0.c1 FROM v0, rt1, rt0 WHERE (((((rt1.c1) NOT BETWEEN (v0.c0) AND (rt0.c1)) COLLATE NOCASE) ISNULL)) GROUP BY rt0.c3, rt1.c1, rt0.c2, rt1.c2, v0.c0, v0.c2, rt1.c0, v0.c1, rt0.c0, rt1.c3, rt0.c4, rt1.c4, rt0.c1;
SELECT ALL rt0.c3, rt1.c1, rt0.c2, rt1.c2, v0.c0, v0.c2, rt1.c0, v0.c1, rt0.c0, rt1.c3, rt0.c4, rt1.c4, rt0.c1 FROM v0, rt1 NOT INDEXED, rt0 GROUP BY rt0.c3, rt1.c1, rt0.c2, rt1.c2, v0.c0, v0.c2, rt1.c0, v0.c1, rt0.c0, rt1.c3, rt0.c4, rt1.c4, rt0.c1;
SELECT ALL rt0.c2, rt1.c1, rt1.c2, rt0.c1, v0.c1, rt0.c3, rt0.c4, rt0.c0, rt1.c4 FROM rt1, rt0 NATURAL JOIN v0 GROUP BY rt0.c2, rt1.c1, rt1.c2, rt0.c1, v0.c1, rt0.c3, rt0.c4, rt0.c0, rt1.c4;
SELECT rt0.c2, rt1.c1, rt1.c2, rt0.c1, v0.c1, rt0.c3, rt0.c4, rt0.c0, rt1.c4 FROM rt1, rt0 NATURAL JOIN v0 GROUP BY rt0.c2, rt1.c1, rt1.c2, rt0.c1, v0.c1, rt0.c3, rt0.c4, rt0.c0, rt1.c4 HAVING TRIM(CAST(AVG(COUNT(COUNT(rt0.c1))) AS REAL)) UNION ALL SELECT rt0.c2, rt1.c1, rt1.c2, rt0.c1, v0.c1, rt0.c3, rt0.c4, rt0.c0, rt1.c4 FROM rt1, rt0 NATURAL JOIN v0 GROUP BY rt0.c2, rt1.c1, rt1.c2, rt0.c1, v0.c1, rt0.c3, rt0.c4, rt0.c0, rt1.c4 HAVING (NOT (TRIM(CAST(AVG(COUNT(COUNT(rt0.c1))) AS REAL)))) UNION ALL SELECT ALL rt0.c2, rt1.c1, rt1.c2, rt0.c1, v0.c1, rt0.c3, rt0.c4, rt0.c0, rt1.c4 FROM rt1, rt0 NATURAL JOIN v0 GROUP BY rt0.c2, rt1.c1, rt1.c2, rt0.c1, v0.c1, rt0.c3, rt0.c4, rt0.c0, rt1.c4 HAVING ((TRIM(CAST(AVG(COUNT(COUNT(rt0.c1))) AS REAL))) ISNULL);
SELECT * FROM rt1, v0;
SELECT ALL * FROM rt1, v0 WHERE (NULL) UNION ALL SELECT * FROM rt1, v0 WHERE ((NOT (NULL))) UNION ALL SELECT * FROM rt1, v0 WHERE (((NULL) ISNULL));
SELECT * FROM rt1, v0;
SELECT DISTINCT rt0.c2, rt1.c3, rt0.c1, v0.c2, rt1.c4 FROM rt0, v0 NATURAL JOIN rt1;
SELECT DISTINCT rt0.c2, rt1.c3, rt0.c1, v0.c2, rt1.c4 FROM rt0, v0 NATURAL JOIN rt1 WHERE (CASE WHEN ((rt1.c1)+(rt1.c4)) THEN rtreenode('', rt1.c2) END) UNION SELECT DISTINCT rt0.c2, rt1.c3, rt0.c1, v0.c2, rt1.c4 FROM rt0, v0 NATURAL JOIN rt1 WHERE ((NOT (CASE WHEN ((rt1.c1)+(rt1.c4)) THEN rtreenode('', rt1.c2) END))) UNION SELECT DISTINCT rt0.c2, rt1.c3, rt0.c1, v0.c2, rt1.c4 FROM rt0, v0 NATURAL JOIN rt1 WHERE (((CASE WHEN ((rt1.c1)+(rt1.c4)) THEN rtreenode('', rt1.c2) END) ISNULL));
SELECT DISTINCT rt0.c2, rt1.c3, rt0.c1, v0.c2, rt1.c4 FROM rt0, v0 NATURAL JOIN rt1;
SELECT rt0.c4, rt0.c2, rt0.c3 FROM rt0 GROUP BY rt0.c4, rt0.c2, rt0.c3;
SELECT rt0.c4, rt0.c2, rt0.c3 FROM rt0 WHERE (((((((rt0.c0)AND(rt0.c3)))OR(x''))) NOT BETWEEN (((rt0.c3) BETWEEN (rt0.c3) AND (rt0.c0))) AND (((rt0.c0)!=(rt0.c0))))) GROUP BY rt0.c4, rt0.c2, rt0.c3 UNION SELECT rt0.c4, rt0.c2, rt0.c3 FROM rt0 WHERE ((NOT (((((((rt0.c0)AND(rt0.c3)))OR(x''))) NOT BETWEEN (((rt0.c3) BETWEEN (rt0.c3) AND (rt0.c0))) AND (((rt0.c0)<>(rt0.c0))))))) GROUP BY rt0.c4, rt0.c2, rt0.c3 UNION SELECT rt0.c4, rt0.c2, rt0.c3 FROM rt0 WHERE (((((((((rt0.c0)AND(rt0.c3)))OR(x''))) NOT BETWEEN (((rt0.c3) BETWEEN (rt0.c3) AND (rt0.c0))) AND (((rt0.c0)<>(rt0.c0))))) ISNULL)) GROUP BY rt0.c4, rt0.c2, rt0.c3;
SELECT rt0.c4, rt0.c2, rt0.c3 FROM rt0 GROUP BY rt0.c4, rt0.c2, rt0.c3;
SELECT v0.c1, v0.c2, rt0.c3 FROM rt1 RIGHT OUTER JOIN v0 ON (+ ((~ (0.26803679776287803)))) INNER JOIN rt0 ON ((((rt1.c1)>(rt0.c3))) ISNULL) GROUP BY v0.c1, v0.c2, rt0.c3;
SELECT ALL v0.c1, v0.c2, rt0.c3 FROM rt1 RIGHT OUTER JOIN v0 ON (+ ((~ (0.26803679776287803)))) INNER JOIN rt0 ON ((((rt1.c1)>(rt0.c3))) ISNULL) GROUP BY v0.c1, v0.c2, rt0.c3 HAVING (NOT (((MIN(rt1.c0))==(v0.c2)))) UNION ALL SELECT ALL v0.c1, v0.c2, rt0.c3 FROM rt1 RIGHT OUTER JOIN v0 ON (+ ((~ (0.26803679776287803)))) INNER JOIN rt0 ON ((((rt1.c1)>(rt0.c3))) ISNULL) GROUP BY v0.c1, v0.c2, rt0.c3 HAVING (NOT ((NOT (((MIN(rt1.c0))=(v0.c2)))))) UNION ALL SELECT ALL v0.c1, v0.c2, rt0.c3 FROM rt1 NOT INDEXED RIGHT OUTER JOIN v0 ON (+ ((~ (0.26803679776287803)))) INNER JOIN rt0 ON ((((rt1.c1)>(rt0.c3))) ISNULL) GROUP BY v0.c1, v0.c2, rt0.c3 HAVING (((NOT (((MIN(rt1.c0))==(v0.c2))))) ISNULL);
SELECT v0.c1, v0.c2, rt0.c3 FROM rt1 RIGHT OUTER JOIN v0 ON (+ ((~ (0.26803679776287803)))) INNER JOIN rt0 ON ((((rt1.c1)>(rt0.c3))) ISNULL) GROUP BY v0.c1, v0.c2, rt0.c3;
SELECT ALL v0.c1, v0.c2, rt0.c3 FROM rt1 RIGHT OUTER JOIN v0 ON (+ ((~ (0.26803679776287803)))) INNER JOIN rt0 ON ((((rt1.c1)>(rt0.c3))) ISNULL) GROUP BY v0.c1, v0.c2, rt0.c3 HAVING (NOT (((MIN(rt1.c0))==(v0.c2)))) UNION ALL SELECT ALL v0.c1, v0.c2, rt0.c3 FROM rt1 RIGHT OUTER JOIN v0 ON (+ ((~ (0.26803679776287803)))) INNER JOIN rt0 ON ((((rt1.c1)>(rt0.c3))) ISNULL) GROUP BY v0.c1, v0.c2, rt0.c3 HAVING (NOT ((NOT (((MIN(rt1.c0))=(v0.c2)))))) UNION ALL SELECT ALL v0.c1, v0.c2, rt0.c3 FROM rt1 NOT INDEXED RIGHT OUTER JOIN v0 ON (+ ((~ (0.26803679776287803)))) INNER JOIN rt0 ON ((((rt1.c1)>(rt0.c3))) ISNULL) GROUP BY v0.c1, v0.c2, rt0.c3 HAVING (((NOT (((MIN(rt1.c0))==(v0.c2))))) ISNULL);
SELECT v0.c1, v0.c2, rt0.c3 FROM rt1 RIGHT OUTER JOIN v0 ON (+ ((~ (0.26803679776287803)))) INNER JOIN rt0 ON ((((rt1.c1)>(rt0.c3))) ISNULL) GROUP BY v0.c1, v0.c2, rt0.c3;
SELECT ALL * FROM rt1 FULL OUTER JOIN v0 ON (NULL COLLATE BINARY IN (rt0.c0 COLLATE NOCASE)) FULL OUTER JOIN rt0 ON CAST('d' AS REAL);
SELECT DISTINCT rt1.c2, v0.c2, rt1.c4, rt1.c1, rt1.c0, v0.c0 FROM rt1, v0;
SELECT DISTINCT rt1.c2, v0.c2, rt1.c4, rt1.c1, rt1.c0, v0.c0 FROM rt1, v0 WHERE ((+ (ABS(DISTINCT v0.c0)))) UNION SELECT DISTINCT rt1.c2, v0.c2, rt1.c4, rt1.c1, rt1.c0, v0.c0 FROM rt1, v0 WHERE ((NOT ((+ (ABS(DISTINCT v0.c0)))))) UNION SELECT DISTINCT rt1.c2, v0.c2, rt1.c4, rt1.c1, rt1.c0, v0.c0 FROM rt1, v0 WHERE ((((+ (ABS(DISTINCT v0.c0)))) ISNULL));
SELECT DISTINCT rt1.c2, v0.c2, rt1.c4, rt1.c1, rt1.c0, v0.c0 FROM rt1, v0;
SELECT ALL rt0.c4, rt0.c0, v0.c0 FROM v0, rt0 GROUP BY rt0.c4, rt0.c0, v0.c0;
SELECT ALL rt0.c4, rt0.c0, v0.c0 FROM v0, rt0 WHERE ((((v0.c2 COLLATE NOCASE))<=((x'')))) GROUP BY rt0.c4, rt0.c0, v0.c0 UNION SELECT ALL rt0.c4, rt0.c0, v0.c0 FROM v0, rt0 WHERE ((NOT ((((v0.c2 COLLATE NOCASE))<=((x'')))))) GROUP BY rt0.c4, rt0.c0, v0.c0 UNION SELECT rt0.c4, rt0.c0, v0.c0 FROM v0, rt0 WHERE ((((((v0.c2 COLLATE NOCASE))<=((x'')))) ISNULL)) GROUP BY rt0.c4, rt0.c0, v0.c0;
SELECT ALL rt0.c4, rt0.c0, v0.c0 FROM v0, rt0 GROUP BY rt0.c4, rt0.c0, v0.c0;
SELECT ALL v0.c2, rt1.c1, rt1.c3, v0.c0, rt1.c2, v0.c1, rt1.c4 FROM v0, rt1 GROUP BY v0.c2, rt1.c1, rt1.c3, v0.c0, rt1.c2, v0.c1, rt1.c4;
SELECT ALL v0.c2, rt1.c1, rt1.c3, v0.c0, rt1.c2, v0.c1, rt1.c4 FROM v0, rt1 GROUP BY v0.c2, rt1.c1, rt1.c3, v0.c0, rt1.c2, v0.c1, rt1.c4 HAVING ((((((rt1.c3)IS(rt1.c3)))OR(AVG(MIN(COUNT(*))))))AND(MIN(v0.c0))) UNION ALL SELECT ALL v0.c2, rt1.c1, rt1.c3, v0.c0, rt1.c2, v0.c1, rt1.c4 FROM v0, rt1 GROUP BY v0.c2, rt1.c1, rt1.c3, v0.c0, rt1.c2, v0.c1, rt1.c4 HAVING (NOT (((((((rt1.c3)IS(rt1.c3)))OR(AVG(MIN(COUNT(*))))))AND(MIN(v0.c0))))) UNION ALL SELECT v0.c2, rt1.c1, rt1.c3, v0.c0, rt1.c2, v0.c1, rt1.c4 FROM v0, rt1 GROUP BY v0.c2, rt1.c1, rt1.c3, v0.c0, rt1.c2, v0.c1, rt1.c4 HAVING ((((((((rt1.c3)IS(rt1.c3)))OR(AVG(MIN(COUNT(*))))))AND(MIN(v0.c0)))) ISNULL);
SELECT ALL * FROM v0, rt0, rt1;
SELECT * FROM v0, rt0, rt1 WHERE (rt0.c0 COLLATE RTRIM) UNION ALL SELECT ALL * FROM v0, rt0, rt1 WHERE ((NOT (rt0.c0 COLLATE RTRIM))) UNION ALL SELECT * FROM v0, rt0, rt1 WHERE (((rt0.c0 COLLATE RTRIM) ISNULL));
SELECT ALL * FROM v0, rt0, rt1;
SELECT DISTINCT * FROM rt1, v0, rt0;
SELECT DISTINCT * FROM rt1, v0, rt0 WHERE (((rt0.c0 COLLATE RTRIM) NOT NULL)) UNION SELECT DISTINCT * FROM rt1, v0, rt0 WHERE ((NOT (((rt0.c0 COLLATE RTRIM) NOT NULL)))) UNION SELECT DISTINCT * FROM rt1, v0, rt0 WHERE (((((rt0.c0 COLLATE RTRIM) NOT NULL)) ISNULL));
SELECT DISTINCT * FROM rt1, v0, rt0;
SELECT rt0.c3, rt0.c1, rt0.c0, v0.c0, rt0.c2 FROM rt0, v0 GROUP BY rt0.c3, rt0.c1, rt0.c0, v0.c0, rt0.c2;
SELECT rt0.c3, rt0.c1, rt0.c0, v0.c0, rt0.c2 FROM rt0, v0 WHERE (CASE WHEN NULLIF(rt0.c0, rt0.c1) THEN ((rt0.c1) NOTNULL) ELSE NULL END) GROUP BY rt0.c3, rt0.c1, rt0.c0, v0.c0, rt0.c2 UNION SELECT rt0.c3, rt0.c1, rt0.c0, v0.c0, rt0.c2 FROM rt0, v0 WHERE ((NOT (CASE WHEN NULLIF(rt0.c0, rt0.c1) THEN ((rt0.c1) NOTNULL) ELSE NULL END))) GROUP BY rt0.c3, rt0.c1, rt0.c0, v0.c0, rt0.c2 UNION SELECT ALL rt0.c3, rt0.c1, rt0.c0, v0.c0, rt0.c2 FROM rt0, v0 WHERE (((CASE WHEN NULLIF(rt0.c0, rt0.c1) THEN ((rt0.c1) NOTNULL) ELSE NULL END) ISNULL)) GROUP BY rt0.c3, rt0.c1, rt0.c0, v0.c0, rt0.c2;
SELECT rt0.c3, rt0.c1, rt0.c0, v0.c0, rt0.c2 FROM rt0, v0 GROUP BY rt0.c3, rt0.c1, rt0.c0, v0.c0, rt0.c2;
SELECT ALL rt1.c2, rt0.c1, rt0.c2, rt1.c1, rt1.c4 FROM v0, rt0, rt1 GROUP BY rt1.c2, rt0.c1, rt0.c2, rt1.c1, rt1.c4;
SELECT ALL rt1.c2, rt0.c1, rt0.c2, rt1.c1, rt1.c4 FROM v0, rt0, rt1 GROUP BY rt1.c2, rt0.c1, rt0.c2, rt1.c1, rt1.c4 HAVING ((TOTAL(COUNT(rt1.c4)))>(x'')) UNION ALL SELECT rt1.c2, rt0.c1, rt0.c2, rt1.c1, rt1.c4 FROM v0, rt0, rt1 GROUP BY rt1.c2, rt0.c1, rt0.c2, rt1.c1, rt1.c4 HAVING (NOT (((TOTAL(COUNT(rt1.c4)))>(x'')))) UNION ALL SELECT ALL rt1.c2, rt0.c1, rt0.c2, rt1.c1, rt1.c4 FROM v0, rt0, rt1 GROUP BY rt1.c2, rt0.c1, rt0.c2, rt1.c1, rt1.c4 HAVING ((((TOTAL(COUNT(rt1.c4)))>(x''))) ISNULL);
SELECT ALL rt0.c0 FROM rt0;
SELECT rt0.c0 FROM rt0 WHERE (((CASE WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c4 WHEN rt0.c4 THEN rt0.c3 END)<=(LIKELY(DISTINCT rt0.c1)))) UNION ALL SELECT rt0.c0 FROM rt0 WHERE ((NOT (((CASE WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c4 WHEN rt0.c4 THEN rt0.c3 END)<=(LIKELY(DISTINCT rt0.c1)))))) UNION ALL SELECT ALL rt0.c0 FROM rt0 WHERE (((((CASE WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c4 WHEN rt0.c4 THEN rt0.c3 END)<=(LIKELY(DISTINCT rt0.c1)))) ISNULL));
SELECT ALL rt0.c0 FROM rt0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (CASE WHEN ((v0.c1) IS TRUE) THEN GLOB(v0.c2, NULL) WHEN ((((((((v0.c2)AND(v0.c2)))AND(v0.c0)))AND(v0.c2)))OR(v0.c1)) THEN NULL COLLATE RTRIM WHEN (v0.c0 IN (v0.c1)) THEN (+ (v0.c2)) ELSE x'47b0' END) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (CASE WHEN ((v0.c1) IS TRUE) THEN GLOB(v0.c2, NULL) WHEN ((((((((v0.c2)AND(v0.c2)))AND(v0.c0)))AND(v0.c2)))OR(v0.c1)) THEN NULL COLLATE RTRIM WHEN (v0.c0 IN (v0.c1)) THEN (+ (v0.c2)) ELSE x'47b0' END))) UNION SELECT DISTINCT * FROM v0 WHERE (((CASE WHEN ((v0.c1) IS TRUE) THEN GLOB(v0.c2, NULL) WHEN ((((((((v0.c2)AND(v0.c2)))AND(v0.c0)))AND(v0.c2)))OR(v0.c1)) THEN NULL COLLATE RTRIM WHEN (v0.c0 IN (v0.c1)) THEN (+ (v0.c2)) ELSE x'47b0' END) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT rt1.c3, v0.c1, rt1.c4, rt1.c0 FROM rt1, v0 GROUP BY rt1.c3, v0.c1, rt1.c4, rt1.c0;
SELECT ALL rt1.c3, v0.c1, rt1.c4, rt1.c0 FROM rt1, v0 WHERE ((CAST(v0.c2 AS NUMERIC) IN ())) GROUP BY rt1.c3, v0.c1, rt1.c4, rt1.c0 UNION SELECT ALL rt1.c3, v0.c1, rt1.c4, rt1.c0 FROM rt1, v0 WHERE ((NOT ((CAST(v0.c2 AS NUMERIC) IN ())))) GROUP BY rt1.c3, v0.c1, rt1.c4, rt1.c0 UNION SELECT rt1.c3, v0.c1, rt1.c4, rt1.c0 FROM rt1, v0 WHERE ((((CAST(v0.c2 AS NUMERIC) IN ())) ISNULL)) GROUP BY rt1.c3, v0.c1, rt1.c4, rt1.c0;
SELECT rt1.c3, v0.c1, rt1.c4, rt1.c0 FROM rt1, v0 GROUP BY rt1.c3, v0.c1, rt1.c4, rt1.c0;
SELECT rt1.c0, v0.c0, rt1.c2, v0.c1, rt1.c4, rt1.c1, rt1.c3 FROM v0 NATURAL JOIN rt1 GROUP BY rt1.c0, v0.c0, rt1.c2, v0.c1, rt1.c4, rt1.c1, rt1.c3;
SELECT rt1.c0, v0.c0, rt1.c2, v0.c1, rt1.c4, rt1.c1, rt1.c3 FROM v0 NATURAL JOIN rt1 GROUP BY rt1.c0, v0.c0, rt1.c2, v0.c1, rt1.c4, rt1.c1, rt1.c3 HAVING MAX(((MIN(COUNT(*)))>=(rt1.c4))) UNION ALL SELECT ALL rt1.c0, v0.c0, rt1.c2, v0.c1, rt1.c4, rt1.c1, rt1.c3 FROM v0 NATURAL JOIN rt1 GROUP BY rt1.c0, v0.c0, rt1.c2, v0.c1, rt1.c4, rt1.c1, rt1.c3 HAVING (NOT (MAX(((MIN(COUNT(*)))>=(rt1.c4))))) UNION ALL SELECT ALL rt1.c0, v0.c0, rt1.c2, v0.c1, rt1.c4, rt1.c1, rt1.c3 FROM v0 NATURAL JOIN rt1 GROUP BY rt1.c0, v0.c0, rt1.c2, v0.c1, rt1.c4, rt1.c1, rt1.c3 HAVING ((MAX(((MIN(COUNT(*)))>=(rt1.c4)))) ISNULL);
SELECT rt1.c0 FROM rt1;
SELECT rt1.c0 FROM rt1 WHERE (((((rt1.c0) BETWEEN (rt1.c2) AND (rt1.c3)))=(((rt1.c2) ISNULL)))) UNION ALL SELECT ALL rt1.c0 FROM rt1 WHERE ((NOT (((((rt1.c0) BETWEEN (rt1.c2) AND (rt1.c3)))==(((rt1.c2) ISNULL)))))) UNION ALL SELECT ALL rt1.c0 FROM rt1 WHERE (((((((rt1.c0) BETWEEN (rt1.c2) AND (rt1.c3)))==(((rt1.c2) ISNULL)))) ISNULL));
SELECT rt1.c0 FROM rt1;
SELECT DISTINCT v0.c0, v0.c2, v0.c1 FROM v0;
SELECT DISTINCT v0.c0, v0.c2, v0.c1 FROM v0 WHERE (NULL) UNION SELECT DISTINCT v0.c0, v0.c2, v0.c1 FROM v0 WHERE ((NOT (NULL))) UNION SELECT DISTINCT v0.c0, v0.c2, v0.c1 FROM v0 WHERE (((NULL) ISNULL));
SELECT DISTINCT v0.c0, v0.c2, v0.c1 FROM v0;
SELECT ALL rt1.c2, rt0.c0, rt1.c0, rt1.c4, rt1.c1, rt1.c3 FROM rt1, rt0 LEFT OUTER JOIN v0 ON CAST(((NULL)!=(rt1.c4)) AS TEXT) GROUP BY rt1.c2, rt0.c0, rt1.c0, rt1.c4, rt1.c1, rt1.c3;
SELECT rt1.c2, rt0.c0, rt1.c0, rt1.c4, rt1.c1, rt1.c3 FROM rt1, rt0 LEFT OUTER JOIN v0 ON CAST(((NULL)<>(rt1.c4)) AS TEXT) WHERE ((((rt0.c3) BETWEEN (v0.c2) AND (rt1.c3)) IN ())) GROUP BY rt1.c2, rt0.c0, rt1.c0, rt1.c4, rt1.c1, rt1.c3 UNION SELECT ALL rt1.c2, rt0.c0, rt1.c0, rt1.c4, rt1.c1, rt1.c3 FROM rt1, rt0 LEFT OUTER JOIN v0 ON CAST(((NULL)<>(rt1.c4)) AS TEXT) WHERE ((NOT ((((rt0.c3) BETWEEN (v0.c2) AND (rt1.c3)) IN ())))) GROUP BY rt1.c2, rt0.c0, rt1.c0, rt1.c4, rt1.c1, rt1.c3 UNION SELECT rt1.c2, rt0.c0, rt1.c0, rt1.c4, rt1.c1, rt1.c3 FROM rt1, rt0 LEFT OUTER JOIN v0 ON CAST(((NULL)<>(rt1.c4)) AS TEXT) WHERE ((((((rt0.c3) BETWEEN (v0.c2) AND (rt1.c3)) IN ())) ISNULL)) GROUP BY rt1.c2, rt0.c0, rt1.c0, rt1.c4, rt1.c1, rt1.c3;
SELECT ALL rt1.c2, rt0.c0, rt1.c0, rt1.c4, rt1.c1, rt1.c3 FROM rt1, rt0 LEFT OUTER JOIN v0 ON CAST(((NULL)!=(rt1.c4)) AS TEXT) GROUP BY rt1.c2, rt0.c0, rt1.c0, rt1.c4, rt1.c1, rt1.c3;
SELECT ALL v0.c2, v0.c1, v0.c0 FROM v0 GROUP BY v0.c2, v0.c1, v0.c0;
SELECT ALL v0.c2, v0.c1, v0.c0 FROM v0 GROUP BY v0.c2, v0.c1, v0.c0 HAVING (CAST(TOTAL(v0.c2) AS INTEGER) IN ()) UNION ALL SELECT v0.c2, v0.c1, v0.c0 FROM v0 GROUP BY v0.c2, v0.c1, v0.c0 HAVING (NOT ((CAST(TOTAL(v0.c2) AS INTEGER) IN ()))) UNION ALL SELECT v0.c2, v0.c1, v0.c0 FROM v0 GROUP BY v0.c2, v0.c1, v0.c0 HAVING (((CAST(TOTAL(v0.c2) AS INTEGER) IN ())) ISNULL);
SELECT ALL v0.c2, v0.c1, v0.c0 FROM v0 GROUP BY v0.c2, v0.c1, v0.c0;
SELECT ALL v0.c2, v0.c1, v0.c0 FROM v0 GROUP BY v0.c2, v0.c1, v0.c0 HAVING (CAST(TOTAL(v0.c2) AS INTEGER) IN ()) UNION ALL SELECT v0.c2, v0.c1, v0.c0 FROM v0 GROUP BY v0.c2, v0.c1, v0.c0 HAVING (NOT ((CAST(TOTAL(v0.c2) AS INTEGER) IN ()))) UNION ALL SELECT v0.c2, v0.c1, v0.c0 FROM v0 GROUP BY v0.c2, v0.c1, v0.c0 HAVING (((CAST(TOTAL(v0.c2) AS INTEGER) IN ())) ISNULL);
SELECT ALL v0.c2, v0.c1, v0.c0 FROM v0 GROUP BY v0.c2, v0.c1, v0.c0;
SELECT ALL TOTAL(((rt0.c3) NOT NULL)) FROM rt0;
SELECT rt0.c0 FROM rt0, v0;
SELECT ALL rt0.c0 FROM rt0, v0 WHERE (((((0.622474542980048)LIKE(rt0.c2))) NOTNULL)) UNION ALL SELECT ALL rt0.c0 FROM rt0, v0 WHERE ((NOT (((((0.622474542980048)LIKE(rt0.c2))) NOTNULL)))) UNION ALL SELECT ALL rt0.c0 FROM rt0, v0 WHERE (((((((0.622474542980048)LIKE(rt0.c2))) NOTNULL)) ISNULL));
SELECT rt0.c0 FROM rt0, v0;
SELECT DISTINCT * FROM v0, rt1, rt0;
SELECT DISTINCT * FROM v0, rt1, rt0 WHERE (((((((((rt1.c0)AND(rt0.c3)))AND(rt1.c4)))OR(((rt0.c1)/(7.22584291E8)))))AND(TRIM(DISTINCT rt1.c0, 0.3860881802308882)))) UNION SELECT DISTINCT * FROM v0, rt1, rt0 WHERE ((NOT (((((((((rt1.c0)AND(rt0.c3)))AND(rt1.c4)))OR(((rt0.c1)/(7.22584291E8)))))AND(TRIM(DISTINCT rt1.c0, 0.3860881802308882)))))) UNION SELECT DISTINCT * FROM v0, rt1, rt0 WHERE (((((((((((rt1.c0)AND(rt0.c3)))AND(rt1.c4)))OR(((rt0.c1)/(7.22584291E8)))))AND(TRIM(DISTINCT rt1.c0, 0.3860881802308882)))) ISNULL));
SELECT DISTINCT * FROM v0, rt1, rt0;
SELECT rt1.c2, rt1.c1, v0.c0 FROM rt1 NOT INDEXED, rt0, v0 GROUP BY rt1.c2, rt1.c1, v0.c0;
SELECT ALL rt1.c2, rt1.c1, v0.c0 FROM rt1, rt0, v0 WHERE (rt0.c1) GROUP BY rt1.c2, rt1.c1, v0.c0 UNION SELECT ALL rt1.c2, rt1.c1, v0.c0 FROM rt1, rt0, v0 WHERE ((NOT (rt0.c1))) GROUP BY rt1.c2, rt1.c1, v0.c0 UNION SELECT ALL rt1.c2, rt1.c1, v0.c0 FROM rt1, rt0, v0 WHERE (((rt0.c1) ISNULL)) GROUP BY rt1.c2, rt1.c1, v0.c0;
SELECT rt1.c2, rt1.c1, v0.c0 FROM rt1 NOT INDEXED, rt0, v0 GROUP BY rt1.c2, rt1.c1, v0.c0;
SELECT ALL rt0.c0, rt1.c3 FROM v0, rt0, rt1 GROUP BY rt0.c0, rt1.c3;
SELECT rt0.c0, rt1.c3 FROM v0, rt0, rt1 GROUP BY rt0.c0, rt1.c3 HAVING AVG(TOTAL(SUM(rt0.c3))) UNION ALL SELECT rt0.c0, rt1.c3 FROM v0, rt0, rt1 GROUP BY rt0.c0, rt1.c3 HAVING (NOT (AVG(TOTAL(SUM(rt0.c3))))) UNION ALL SELECT rt0.c0, rt1.c3 FROM v0, rt0, rt1 GROUP BY rt0.c0, rt1.c3 HAVING ((AVG(TOTAL(SUM(rt0.c3)))) ISNULL);
SELECT * FROM rt1, rt0, v0;
SELECT * FROM rt1, rt0, v0 WHERE (((v0.c0 COLLATE NOCASE) BETWEEN ((rt0.c3 IN ())) AND (((((((((((((rt0.c3)OR('1611256784')))AND(rt0.c1)))OR(rt1.c4)))AND(rt0.c1)))AND(rt0.c3)))AND(rt1.c4))))) UNION ALL SELECT * FROM rt1, rt0, v0 WHERE ((NOT (((v0.c0 COLLATE NOCASE) BETWEEN ((rt0.c3 IN ())) AND (((((((((((((rt0.c3)OR('1611256784')))AND(rt0.c1)))OR(rt1.c4)))AND(rt0.c1)))AND(rt0.c3)))AND(rt1.c4))))))) UNION ALL SELECT * FROM rt1, rt0, v0 WHERE (((((v0.c0 COLLATE NOCASE) BETWEEN ((rt0.c3 IN ())) AND (((((((((((((rt0.c3)OR('1611256784')))AND(rt0.c1)))OR(rt1.c4)))AND(rt0.c1)))AND(rt0.c3)))AND(rt1.c4))))) ISNULL));
SELECT * FROM rt1, rt0, v0;
SELECT DISTINCT * FROM rt1, v0, rt0;
SELECT DISTINCT * FROM rt1, v0, rt0 WHERE (((rt1.c4) BETWEEN ((('-772452990') BETWEEN (v0.c2) AND (v0.c1))) AND (((x'') NOTNULL)))) UNION SELECT DISTINCT * FROM rt1, v0, rt0 WHERE ((NOT (((rt1.c4) BETWEEN ((('-772452990') BETWEEN (v0.c2) AND (v0.c1))) AND (((x'') NOTNULL)))))) UNION SELECT DISTINCT * FROM rt1, v0, rt0 WHERE (((((rt1.c4) BETWEEN ((('-772452990') BETWEEN (v0.c2) AND (v0.c1))) AND (((x'') NOTNULL)))) ISNULL));
SELECT DISTINCT * FROM rt1, v0, rt0;
SELECT ALL rt0.c0, v0.c1, rt0.c1, rt0.c3, rt0.c2, v0.c0, rt0.c4, v0.c2 FROM v0 RIGHT OUTER JOIN rt0 ON (((rt0.c2 IN (v0.c0))) NOTNULL) GROUP BY rt0.c0, v0.c1, rt0.c1, rt0.c3, rt0.c2, v0.c0, rt0.c4, v0.c2;
SELECT ALL rt0.c0, v0.c1, rt0.c1, rt0.c3, rt0.c2, v0.c0, rt0.c4, v0.c2 FROM v0 RIGHT OUTER JOIN rt0 ON (((rt0.c2 IN (v0.c0))) NOTNULL) WHERE ((((((~ (rt0.c4)))AND(rt0.c4 COLLATE NOCASE)))OR(rt0.c3 COLLATE RTRIM))) GROUP BY rt0.c0, v0.c1, rt0.c1, rt0.c3, rt0.c2, v0.c0, rt0.c4, v0.c2 UNION SELECT rt0.c0, v0.c1, rt0.c1, rt0.c3, rt0.c2, v0.c0, rt0.c4, v0.c2 FROM v0 RIGHT OUTER JOIN rt0 ON (((rt0.c2 IN (v0.c0))) NOTNULL) WHERE ((NOT ((((((~ (rt0.c4)))AND(rt0.c4 COLLATE NOCASE)))OR(rt0.c3 COLLATE RTRIM))))) GROUP BY rt0.c0, v0.c1, rt0.c1, rt0.c3, rt0.c2, v0.c0, rt0.c4, v0.c2 UNION SELECT ALL rt0.c0, v0.c1, rt0.c1, rt0.c3, rt0.c2, v0.c0, rt0.c4, v0.c2 FROM v0 RIGHT OUTER JOIN rt0 ON (((rt0.c2 IN (v0.c0))) NOTNULL) WHERE ((((((((~ (rt0.c4)))AND(rt0.c4 COLLATE NOCASE)))OR(rt0.c3 COLLATE RTRIM))) ISNULL)) GROUP BY rt0.c0, v0.c1, rt0.c1, rt0.c3, rt0.c2, v0.c0, rt0.c4, v0.c2;
SELECT ALL rt0.c0, v0.c1, rt0.c1, rt0.c3, rt0.c2, v0.c0, rt0.c4, v0.c2 FROM v0 RIGHT OUTER JOIN rt0 ON (((rt0.c2 IN (v0.c0))) NOTNULL) GROUP BY rt0.c0, v0.c1, rt0.c1, rt0.c3, rt0.c2, v0.c0, rt0.c4, v0.c2;
SELECT v0.c1, rt1.c4, rt1.c0, rt0.c3, v0.c2, rt1.c3, rt0.c1, rt0.c2, rt1.c1, rt1.c2, rt0.c0 FROM rt0, v0, rt1 GROUP BY v0.c1, rt1.c4, rt1.c0, rt0.c3, v0.c2, rt1.c3, rt0.c1, rt0.c2, rt1.c1, rt1.c2, rt0.c0;
SELECT ALL v0.c1, rt1.c4, rt1.c0, rt0.c3, v0.c2, rt1.c3, rt0.c1, rt0.c2, rt1.c1, rt1.c2, rt0.c0 FROM rt0, v0, rt1 GROUP BY v0.c1, rt1.c4, rt1.c0, rt0.c3, v0.c2, rt1.c3, rt0.c1, rt0.c2, rt1.c1, rt1.c2, rt0.c0 HAVING ((((UNLIKELY(v0.c2))AND(HEX(DISTINCT TOTAL(rt0.c4)))))OR(((rt1.c2) IS FALSE))) UNION ALL SELECT v0.c1, rt1.c4, rt1.c0, rt0.c3, v0.c2, rt1.c3, rt0.c1, rt0.c2, rt1.c1, rt1.c2, rt0.c0 FROM rt0, v0, rt1 GROUP BY v0.c1, rt1.c4, rt1.c0, rt0.c3, v0.c2, rt1.c3, rt0.c1, rt0.c2, rt1.c1, rt1.c2, rt0.c0 HAVING (NOT (((((UNLIKELY(v0.c2))AND(HEX(DISTINCT TOTAL(rt0.c4)))))OR(((rt1.c2) IS FALSE))))) UNION ALL SELECT v0.c1, rt1.c4, rt1.c0, rt0.c3, v0.c2, rt1.c3, rt0.c1, rt0.c2, rt1.c1, rt1.c2, rt0.c0 FROM rt0, v0, rt1 GROUP BY v0.c1, rt1.c4, rt1.c0, rt0.c3, v0.c2, rt1.c3, rt0.c1, rt0.c2, rt1.c1, rt1.c2, rt0.c0 HAVING ((((((UNLIKELY(v0.c2))AND(HEX(DISTINCT TOTAL(rt0.c4)))))OR(((rt1.c2) IS FALSE)))) ISNULL);
SELECT v0.c1, rt1.c4, rt1.c0, rt0.c3, v0.c2, rt1.c3, rt0.c1, rt0.c2, rt1.c1, rt1.c2, rt0.c0 FROM rt0, v0, rt1 GROUP BY v0.c1, rt1.c4, rt1.c0, rt0.c3, v0.c2, rt1.c3, rt0.c1, rt0.c2, rt1.c1, rt1.c2, rt0.c0;
SELECT ALL v0.c1, rt1.c4, rt1.c0, rt0.c3, v0.c2, rt1.c3, rt0.c1, rt0.c2, rt1.c1, rt1.c2, rt0.c0 FROM rt0, v0, rt1 GROUP BY v0.c1, rt1.c4, rt1.c0, rt0.c3, v0.c2, rt1.c3, rt0.c1, rt0.c2, rt1.c1, rt1.c2, rt0.c0 HAVING ((((UNLIKELY(v0.c2))AND(HEX(DISTINCT TOTAL(rt0.c4)))))OR(((rt1.c2) IS FALSE))) UNION ALL SELECT v0.c1, rt1.c4, rt1.c0, rt0.c3, v0.c2, rt1.c3, rt0.c1, rt0.c2, rt1.c1, rt1.c2, rt0.c0 FROM rt0, v0, rt1 GROUP BY v0.c1, rt1.c4, rt1.c0, rt0.c3, v0.c2, rt1.c3, rt0.c1, rt0.c2, rt1.c1, rt1.c2, rt0.c0 HAVING (NOT (((((UNLIKELY(v0.c2))AND(HEX(DISTINCT TOTAL(rt0.c4)))))OR(((rt1.c2) IS FALSE))))) UNION ALL SELECT v0.c1, rt1.c4, rt1.c0, rt0.c3, v0.c2, rt1.c3, rt0.c1, rt0.c2, rt1.c1, rt1.c2, rt0.c0 FROM rt0, v0, rt1 GROUP BY v0.c1, rt1.c4, rt1.c0, rt0.c3, v0.c2, rt1.c3, rt0.c1, rt0.c2, rt1.c1, rt1.c2, rt0.c0 HAVING ((((((UNLIKELY(v0.c2))AND(HEX(DISTINCT TOTAL(rt0.c4)))))OR(((rt1.c2) IS FALSE)))) ISNULL);
SELECT v0.c1, rt1.c4, rt1.c0, rt0.c3, v0.c2, rt1.c3, rt0.c1, rt0.c2, rt1.c1, rt1.c2, rt0.c0 FROM rt0, v0, rt1 GROUP BY v0.c1, rt1.c4, rt1.c0, rt0.c3, v0.c2, rt1.c3, rt0.c1, rt0.c2, rt1.c1, rt1.c2, rt0.c0;
SELECT * FROM rt1 NOT INDEXED;
SELECT * FROM rt1 WHERE (((((rt1.c3)OR(rt1.c1 COLLATE RTRIM)))OR((((rt1.c4, rt1.c2, rt1.c2, rt1.c4, rt1.c3)) NOT BETWEEN ((rt1.c2, rt1.c1, rt1.c4, rt1.c2, rt1.c1)) AND ((rt1.c1, rt1.c4, rt1.c4, rt1.c0, rt1.c4)))))) UNION ALL SELECT ALL * FROM rt1 WHERE ((NOT (((((rt1.c3)OR(rt1.c1 COLLATE RTRIM)))OR((((rt1.c4, rt1.c2, rt1.c2, rt1.c4, rt1.c3)) NOT BETWEEN ((rt1.c2, rt1.c1, rt1.c4, rt1.c2, rt1.c1)) AND ((rt1.c1, rt1.c4, rt1.c4, rt1.c0, rt1.c4)))))))) UNION ALL SELECT ALL * FROM rt1 WHERE (((((((rt1.c3)OR(rt1.c1 COLLATE RTRIM)))OR((((rt1.c4, rt1.c2, rt1.c2, rt1.c4, rt1.c3)) NOT BETWEEN ((rt1.c2, rt1.c1, rt1.c4, rt1.c2, rt1.c1)) AND ((rt1.c1, rt1.c4, rt1.c4, rt1.c0, rt1.c4)))))) ISNULL));
SELECT * FROM rt1 NOT INDEXED;
SELECT DISTINCT * FROM rt0, v0, rt1;
SELECT DISTINCT * FROM rt0, v0, rt1 WHERE ((- (((rt1.c1)&(rt0.c4))))) UNION SELECT DISTINCT * FROM rt0, v0, rt1 WHERE ((NOT ((- (((rt1.c1)&(rt0.c4))))))) UNION SELECT DISTINCT * FROM rt0, v0, rt1 WHERE ((((- (((rt1.c1)&(rt0.c4))))) ISNULL));
SELECT DISTINCT * FROM rt0, v0, rt1;
SELECT ALL v0.c2, v0.c0, rt1.c3 FROM v0 RIGHT OUTER JOIN rt1 ON ((((x'fff23dad') BETWEEN (NULL) AND (NULL)))>=(((((rt0.c2)AND(v0.c2)))AND(-740725207)))) RIGHT OUTER JOIN rt0 ON CAST(0.43578228428207255 AS NUMERIC) GROUP BY v0.c2, v0.c0, rt1.c3;
SELECT rt1.c1, v0.c1, v0.c2, rt1.c2, rt0.c3, rt1.c0, rt0.c1, rt0.c4, rt1.c3 FROM rt1 INNER JOIN rt0 ON SQLITE_COMPILEOPTION_GET(((rt1.c1) NOT BETWEEN (rt0.c4) AND (v0.c1))) INNER JOIN v0 ON CASE WHEN 0.1962070445892682 THEN rt1.c0 ELSE rt0.c2 END COLLATE NOCASE COLLATE BINARY GROUP BY rt1.c1, v0.c1, v0.c2, rt1.c2, rt0.c3, rt1.c0, rt0.c1, rt0.c4, rt1.c3;
SELECT ALL rt1.c1, v0.c1, v0.c2, rt1.c2, rt0.c3, rt1.c0, rt0.c1, rt0.c4, rt1.c3 FROM rt1 INNER JOIN rt0 ON SQLITE_COMPILEOPTION_GET(((rt1.c1) NOT BETWEEN (rt0.c4) AND (v0.c1))) INNER JOIN v0 ON CASE WHEN 0.1962070445892682 THEN rt1.c0 ELSE rt0.c2 END COLLATE NOCASE COLLATE BINARY GROUP BY rt1.c1, v0.c1, v0.c2, rt1.c2, rt0.c3, rt1.c0, rt0.c1, rt0.c4, rt1.c3 HAVING MAX((- (rt0.c4))) UNION ALL SELECT rt1.c1, v0.c1, v0.c2, rt1.c2, rt0.c3, rt1.c0, rt0.c1, rt0.c4, rt1.c3 FROM rt1 INNER JOIN rt0 ON SQLITE_COMPILEOPTION_GET(((rt1.c1) NOT BETWEEN (rt0.c4) AND (v0.c1))) INNER JOIN v0 ON CASE WHEN 0.1962070445892682 THEN rt1.c0 ELSE rt0.c2 END COLLATE NOCASE COLLATE BINARY GROUP BY rt1.c1, v0.c1, v0.c2, rt1.c2, rt0.c3, rt1.c0, rt0.c1, rt0.c4, rt1.c3 HAVING (NOT (MAX((- (rt0.c4))))) UNION ALL SELECT ALL rt1.c1, v0.c1, v0.c2, rt1.c2, rt0.c3, rt1.c0, rt0.c1, rt0.c4, rt1.c3 FROM rt1 INNER JOIN rt0 ON SQLITE_COMPILEOPTION_GET(((rt1.c1) NOT BETWEEN (rt0.c4) AND (v0.c1))) INNER JOIN v0 ON CASE WHEN 0.1962070445892682 THEN rt1.c0 ELSE rt0.c2 END COLLATE NOCASE COLLATE BINARY GROUP BY rt1.c1, v0.c1, v0.c2, rt1.c2, rt0.c3, rt1.c0, rt0.c1, rt0.c4, rt1.c3 HAVING ((MAX((- (rt0.c4)))) ISNULL);
SELECT rt1.c1, v0.c1, v0.c2, rt1.c2, rt0.c3, rt1.c0, rt0.c1, rt0.c4, rt1.c3 FROM rt1 INNER JOIN rt0 ON SQLITE_COMPILEOPTION_GET(((rt1.c1) NOT BETWEEN (rt0.c4) AND (v0.c1))) INNER JOIN v0 ON CASE WHEN 0.1962070445892682 THEN rt1.c0 ELSE rt0.c2 END COLLATE NOCASE COLLATE BINARY GROUP BY rt1.c1, v0.c1, v0.c2, rt1.c2, rt0.c3, rt1.c0, rt0.c1, rt0.c4, rt1.c3;
SELECT ALL rt1.c1, v0.c1, v0.c2, rt1.c2, rt0.c3, rt1.c0, rt0.c1, rt0.c4, rt1.c3 FROM rt1 INNER JOIN rt0 ON SQLITE_COMPILEOPTION_GET(((rt1.c1) NOT BETWEEN (rt0.c4) AND (v0.c1))) INNER JOIN v0 ON CASE WHEN 0.1962070445892682 THEN rt1.c0 ELSE rt0.c2 END COLLATE NOCASE COLLATE BINARY GROUP BY rt1.c1, v0.c1, v0.c2, rt1.c2, rt0.c3, rt1.c0, rt0.c1, rt0.c4, rt1.c3 HAVING MAX((- (rt0.c4))) UNION ALL SELECT rt1.c1, v0.c1, v0.c2, rt1.c2, rt0.c3, rt1.c0, rt0.c1, rt0.c4, rt1.c3 FROM rt1 INNER JOIN rt0 ON SQLITE_COMPILEOPTION_GET(((rt1.c1) NOT BETWEEN (rt0.c4) AND (v0.c1))) INNER JOIN v0 ON CASE WHEN 0.1962070445892682 THEN rt1.c0 ELSE rt0.c2 END COLLATE NOCASE COLLATE BINARY GROUP BY rt1.c1, v0.c1, v0.c2, rt1.c2, rt0.c3, rt1.c0, rt0.c1, rt0.c4, rt1.c3 HAVING (NOT (MAX((- (rt0.c4))))) UNION ALL SELECT ALL rt1.c1, v0.c1, v0.c2, rt1.c2, rt0.c3, rt1.c0, rt0.c1, rt0.c4, rt1.c3 FROM rt1 INNER JOIN rt0 ON SQLITE_COMPILEOPTION_GET(((rt1.c1) NOT BETWEEN (rt0.c4) AND (v0.c1))) INNER JOIN v0 ON CASE WHEN 0.1962070445892682 THEN rt1.c0 ELSE rt0.c2 END COLLATE NOCASE COLLATE BINARY GROUP BY rt1.c1, v0.c1, v0.c2, rt1.c2, rt0.c3, rt1.c0, rt0.c1, rt0.c4, rt1.c3 HAVING ((MAX((- (rt0.c4)))) ISNULL);
SELECT rt1.c1, v0.c1, v0.c2, rt1.c2, rt0.c3, rt1.c0, rt0.c1, rt0.c4, rt1.c3 FROM rt1 INNER JOIN rt0 ON SQLITE_COMPILEOPTION_GET(((rt1.c1) NOT BETWEEN (rt0.c4) AND (v0.c1))) INNER JOIN v0 ON CASE WHEN 0.1962070445892682 THEN rt1.c0 ELSE rt0.c2 END COLLATE NOCASE COLLATE BINARY GROUP BY rt1.c1, v0.c1, v0.c2, rt1.c2, rt0.c3, rt1.c0, rt0.c1, rt0.c4, rt1.c3;
SELECT ALL rt0.c3, rt0.c0, rt0.c4 FROM rt0;
SELECT rt0.c3, rt0.c0, rt0.c4 FROM rt0 WHERE (((((QUOTE(rt0.c3))OR(CASE WHEN rt0.c1 THEN rt0.c4 END)))OR(rt0.c0 COLLATE RTRIM))) UNION ALL SELECT rt0.c3, rt0.c0, rt0.c4 FROM rt0 WHERE ((NOT (((((QUOTE(rt0.c3))OR(CASE WHEN rt0.c1 THEN rt0.c4 END)))OR(rt0.c0 COLLATE RTRIM))))) UNION ALL SELECT ALL rt0.c3, rt0.c0, rt0.c4 FROM rt0 WHERE (((((((QUOTE(rt0.c3))OR(CASE WHEN rt0.c1 THEN rt0.c4 END)))OR(rt0.c0 COLLATE RTRIM))) ISNULL));
SELECT ALL rt0.c3, rt0.c0, rt0.c4 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c1, v0.c0, v0.c1, rt0.c2, rt0.c4 FROM rt0, v0;
SELECT DISTINCT rt0.c0, rt0.c1, v0.c0, v0.c1, rt0.c2, rt0.c4 FROM rt0, v0 WHERE ((('' IN (rt0.c2)) IN ())) UNION SELECT DISTINCT rt0.c0, rt0.c1, v0.c0, v0.c1, rt0.c2, rt0.c4 FROM rt0, v0 WHERE ((NOT ((('' IN (rt0.c2)) IN ())))) UNION SELECT DISTINCT rt0.c0, rt0.c1, v0.c0, v0.c1, rt0.c2, rt0.c4 FROM rt0, v0 WHERE ((((('' IN (rt0.c2)) IN ())) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c1, v0.c0, v0.c1, rt0.c2, rt0.c4 FROM rt0, v0;
SELECT ALL rt0.c3, rt0.c4, v0.c1, v0.c2, rt0.c1 FROM v0, rt0 GROUP BY rt0.c3, rt0.c4, v0.c1, v0.c2, rt0.c1;
SELECT ALL rt0.c3, rt0.c4, v0.c1, v0.c2, rt0.c1 FROM v0, rt0 WHERE (((((rt0.c1)/(0.6736114835416729))) NOT NULL)) GROUP BY rt0.c3, rt0.c4, v0.c1, v0.c2, rt0.c1 UNION SELECT rt0.c3, rt0.c4, v0.c1, v0.c2, rt0.c1 FROM v0, rt0 WHERE ((NOT (((((rt0.c1)/(0.6736114835416729))) NOT NULL)))) GROUP BY rt0.c3, rt0.c4, v0.c1, v0.c2, rt0.c1 UNION SELECT ALL rt0.c3, rt0.c4, v0.c1, v0.c2, rt0.c1 FROM v0, rt0 WHERE (((((((rt0.c1)/(0.6736114835416729))) NOT NULL)) ISNULL)) GROUP BY rt0.c3, rt0.c4, v0.c1, v0.c2, rt0.c1;
SELECT ALL rt0.c3, rt0.c4, v0.c1, v0.c2, rt0.c1 FROM v0, rt0 GROUP BY rt0.c3, rt0.c4, v0.c1, v0.c2, rt0.c1;
SELECT rt1.c3, rt0.c2, rt1.c2, rt1.c0, v0.c0, rt0.c3, rt1.c1, rt0.c0, rt0.c1 FROM rt0, rt1, v0 GROUP BY rt1.c3, rt0.c2, rt1.c2, rt1.c0, v0.c0, rt0.c3, rt1.c1, rt0.c0, rt0.c1;
SELECT ALL rt1.c3, rt0.c2, rt1.c2, rt1.c0, v0.c0, rt0.c3, rt1.c1, rt0.c0, rt0.c1 FROM rt0, rt1, v0 GROUP BY rt1.c3, rt0.c2, rt1.c2, rt1.c0, v0.c0, rt0.c3, rt1.c1, rt0.c0, rt0.c1 HAVING ((('*WFV>t\3', rt0.c0, SUM(AVG(AVG(rt0.c3))))) NOT BETWEEN ((((COUNT(rt0.c1)) IS FALSE), GROUP_CONCAT(COUNT(*)), GROUP_CONCAT('-2067175357'))) AND ((CASE AVG(v0.c2)  WHEN v0.c0 THEN AVG(COUNT(rt1.c2)) WHEN rt0.c3 THEN AVG(GROUP_CONCAT(SUM(COUNT(AVG(AVG(MAX(TOTAL(MAX(COUNT(COUNT(*))))))))))) WHEN v0.c1 THEN v0.c1 WHEN rt0.c4 THEN v0.c1 WHEN rt1.c1 THEN rt1.c1 END, COUNT(rt1.c4), ((TOTAL(rt0.c1)) NOT BETWEEN (rt0.c2) AND (MAX(COUNT(*))))))) UNION ALL SELECT rt1.c3, rt0.c2, rt1.c2, rt1.c0, v0.c0, rt0.c3, rt1.c1, rt0.c0, rt0.c1 FROM rt0, rt1, v0 GROUP BY rt1.c3, rt0.c2, rt1.c2, rt1.c0, v0.c0, rt0.c3, rt1.c1, rt0.c0, rt0.c1 HAVING (NOT (((('*WFV>t\3', rt0.c0, SUM(AVG(AVG(rt0.c3))))) NOT BETWEEN ((((COUNT(rt0.c1)) IS FALSE), GROUP_CONCAT(COUNT(*)), GROUP_CONCAT('-2067175357'))) AND ((CASE AVG(v0.c2)  WHEN v0.c0 THEN AVG(COUNT(rt1.c2)) WHEN rt0.c3 THEN AVG(GROUP_CONCAT(SUM(COUNT(AVG(AVG(MAX(TOTAL(MAX(COUNT(COUNT(*))))))))))) WHEN v0.c1 THEN v0.c1 WHEN rt0.c4 THEN v0.c1 WHEN rt1.c1 THEN rt1.c1 END, COUNT(rt1.c4), ((TOTAL(rt0.c1)) NOT BETWEEN (rt0.c2) AND (MAX(COUNT(*))))))))) UNION ALL SELECT ALL rt1.c3, rt0.c2, rt1.c2, rt1.c0, v0.c0, rt0.c3, rt1.c1, rt0.c0, rt0.c1 FROM rt0, rt1, v0 GROUP BY rt1.c3, rt0.c2, rt1.c2, rt1.c0, v0.c0, rt0.c3, rt1.c1, rt0.c0, rt0.c1 HAVING ((((('*WFV>t\3', rt0.c0, SUM(AVG(AVG(rt0.c3))))) NOT BETWEEN ((((COUNT(rt0.c1)) IS FALSE), GROUP_CONCAT(COUNT(*)), GROUP_CONCAT('-2067175357'))) AND ((CASE AVG(v0.c2)  WHEN v0.c0 THEN AVG(COUNT(rt1.c2)) WHEN rt0.c3 THEN AVG(GROUP_CONCAT(SUM(COUNT(AVG(AVG(MAX(TOTAL(MAX(COUNT(COUNT(*))))))))))) WHEN v0.c1 THEN v0.c1 WHEN rt0.c4 THEN v0.c1 WHEN rt1.c1 THEN rt1.c1 END, COUNT(rt1.c4), ((TOTAL(rt0.c1)) NOT BETWEEN (rt0.c2) AND (MAX(COUNT(*)))))))) ISNULL);
SELECT ALL * FROM rt1, rt0;
SELECT ALL * FROM rt1, rt0 WHERE (CASE WHEN ((rt1.c1)/(rt0.c3)) THEN CASE rt0.c4  WHEN rt1.c1 THEN rt1.c0 ELSE rt0.c3 END WHEN ((((((((rt1.c1)OR(rt0.c2)))AND(0.9259266332926068)))OR(rt1.c1)))OR(rt0.c0)) THEN ('731139214' IN ()) WHEN (((rt0.c1)) BETWEEN ((rt1.c0)) AND ((rt0.c2))) THEN (rt0.c0 IN ()) END) UNION ALL SELECT ALL * FROM rt1, rt0 WHERE ((NOT (CASE WHEN ((rt1.c1)/(rt0.c3)) THEN CASE rt0.c4  WHEN rt1.c1 THEN rt1.c0 ELSE rt0.c3 END WHEN ((((((((rt1.c1)OR(rt0.c2)))AND(0.9259266332926068)))OR(rt1.c1)))OR(rt0.c0)) THEN ('731139214' IN ()) WHEN (((rt0.c1)) BETWEEN ((rt1.c0)) AND ((rt0.c2))) THEN (rt0.c0 IN ()) END))) UNION ALL SELECT ALL * FROM rt1, rt0 WHERE (((CASE WHEN ((rt1.c1)/(rt0.c3)) THEN CASE rt0.c4  WHEN rt1.c1 THEN rt1.c0 ELSE rt0.c3 END WHEN ((((((((rt1.c1)OR(rt0.c2)))AND(0.9259266332926068)))OR(rt1.c1)))OR(rt0.c0)) THEN ('731139214' IN ()) WHEN (((rt0.c1)) BETWEEN ((rt1.c0)) AND ((rt0.c2))) THEN (rt0.c0 IN ()) END) ISNULL));
SELECT ALL * FROM rt1, rt0;
SELECT DISTINCT rt0.c1, rt0.c4, v0.c2, v0.c1 FROM v0 LEFT OUTER JOIN rt0 ON ((((v0.c1)<=(NULL))) NOT NULL);
SELECT DISTINCT rt0.c1, rt0.c4, v0.c2, v0.c1 FROM v0 LEFT OUTER JOIN rt0 ON ((((v0.c1)<=(NULL))) NOT NULL) WHERE (CAST(CAST(rt0.c4 AS BLOB) AS NUMERIC)) UNION SELECT DISTINCT rt0.c1, rt0.c4, v0.c2, v0.c1 FROM v0 LEFT OUTER JOIN rt0 ON ((((v0.c1)<=(NULL))) NOT NULL) WHERE ((NOT (CAST(CAST(rt0.c4 AS BLOB) AS NUMERIC)))) UNION SELECT DISTINCT rt0.c1, rt0.c4, v0.c2, v0.c1 FROM v0 LEFT OUTER JOIN rt0 ON ((((v0.c1)<=(NULL))) NOT NULL) WHERE (((CAST(CAST(rt0.c4 AS BLOB) AS NUMERIC)) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c4, v0.c2, v0.c1 FROM v0 LEFT OUTER JOIN rt0 ON ((((v0.c1)<=(NULL))) NOT NULL);
SELECT ALL v0.c2, v0.c1, v0.c0 FROM v0 GROUP BY v0.c2, v0.c1, v0.c0;
SELECT v0.c2, v0.c1, v0.c0 FROM v0 WHERE ((((((v0.c2) ISNULL)))<>(((v0.c0 IN ()))))) GROUP BY v0.c2, v0.c1, v0.c0 UNION SELECT ALL v0.c2, v0.c1, v0.c0 FROM v0 WHERE ((NOT ((((((v0.c2) ISNULL)))<>(((v0.c0 IN ()))))))) GROUP BY v0.c2, v0.c1, v0.c0 UNION SELECT v0.c2, v0.c1, v0.c0 FROM v0 WHERE ((((((((v0.c2) ISNULL)))<>(((v0.c0 IN ()))))) ISNULL)) GROUP BY v0.c2, v0.c1, v0.c0;
SELECT ALL v0.c2, v0.c1, v0.c0 FROM v0 GROUP BY v0.c2, v0.c1, v0.c0;
SELECT rt0.c1, v0.c2, rt0.c2 FROM v0, rt0 GROUP BY rt0.c1, v0.c2, rt0.c2;
SELECT ALL rt0.c1, v0.c2, rt0.c2 FROM v0, rt0 GROUP BY rt0.c1, v0.c2, rt0.c2 HAVING TYPEOF(rt0.c1) UNION ALL SELECT rt0.c1, v0.c2, rt0.c2 FROM v0, rt0 GROUP BY rt0.c1, v0.c2, rt0.c2 HAVING (NOT (TYPEOF(rt0.c1))) UNION ALL SELECT rt0.c1, v0.c2, rt0.c2 FROM v0, rt0 GROUP BY rt0.c1, v0.c2, rt0.c2 HAVING ((TYPEOF(rt0.c1)) ISNULL);
SELECT rt0.c1, v0.c2, rt0.c2 FROM v0, rt0 GROUP BY rt0.c1, v0.c2, rt0.c2;
SELECT ALL rt0.c1, v0.c2, rt0.c2 FROM v0, rt0 GROUP BY rt0.c1, v0.c2, rt0.c2 HAVING TYPEOF(rt0.c1) UNION ALL SELECT rt0.c1, v0.c2, rt0.c2 FROM v0, rt0 GROUP BY rt0.c1, v0.c2, rt0.c2 HAVING (NOT (TYPEOF(rt0.c1))) UNION ALL SELECT rt0.c1, v0.c2, rt0.c2 FROM v0, rt0 GROUP BY rt0.c1, v0.c2, rt0.c2 HAVING ((TYPEOF(rt0.c1)) ISNULL);
SELECT rt0.c1, v0.c2, rt0.c2 FROM v0, rt0 GROUP BY rt0.c1, v0.c2, rt0.c2;
SELECT ALL rt1.c0, rt1.c1, rt1.c3 FROM rt1, v0;
SELECT ALL rt1.c0, rt1.c1, rt1.c3 FROM rt1, v0 WHERE (COALESCE(DISTINCT (rt1.c4 IN ()), (rt1.c2 IN ()))) UNION ALL SELECT rt1.c0, rt1.c1, rt1.c3 FROM rt1, v0 WHERE ((NOT (COALESCE(DISTINCT (rt1.c4 IN ()), (rt1.c2 IN ()))))) UNION ALL SELECT ALL rt1.c0, rt1.c1, rt1.c3 FROM rt1, v0 WHERE (((COALESCE(DISTINCT (rt1.c4 IN ()), (rt1.c2 IN ()))) ISNULL));
SELECT ALL rt1.c0, rt1.c1, rt1.c3 FROM rt1, v0;
SELECT DISTINCT * FROM rt1, v0;
SELECT DISTINCT * FROM rt1, v0 WHERE ((((((((v0.c0)) BETWEEN ((v0.c2)) AND ((v0.c0))))OR(rt1.c2 COLLATE NOCASE)))OR(rt1.c2 COLLATE BINARY))) UNION SELECT DISTINCT * FROM rt1, v0 WHERE ((NOT ((((((((v0.c0)) BETWEEN ((v0.c2)) AND ((v0.c0))))OR(rt1.c2 COLLATE NOCASE)))OR(rt1.c2 COLLATE BINARY))))) UNION SELECT DISTINCT * FROM rt1, v0 WHERE ((((((((((v0.c0)) BETWEEN ((v0.c2)) AND ((v0.c0))))OR(rt1.c2 COLLATE NOCASE)))OR(rt1.c2 COLLATE BINARY))) ISNULL));
SELECT DISTINCT * FROM rt1, v0;
SELECT v0.c0, v0.c2, v0.c1 FROM v0 GROUP BY v0.c0, v0.c2, v0.c1;
SELECT ALL v0.c0, v0.c2, v0.c1 FROM v0 WHERE (((((v0.c2) NOT BETWEEN (v0.c1) AND (v0.c2)))GLOB((((v0.c1, v0.c1, v0.c0)) BETWEEN ((v0.c2, v0.c0, v0.c1)) AND ((v0.c0, 0.8958254250996552, v0.c2)))))) GROUP BY v0.c0, v0.c2, v0.c1 UNION SELECT ALL v0.c0, v0.c2, v0.c1 FROM v0 WHERE ((NOT (((((v0.c2) NOT BETWEEN (v0.c1) AND (v0.c2)))GLOB((((v0.c1, v0.c1, v0.c0)) BETWEEN ((v0.c2, v0.c0, v0.c1)) AND ((v0.c0, 0.8958254250996552, v0.c2)))))))) GROUP BY v0.c0, v0.c2, v0.c1 UNION SELECT ALL v0.c0, v0.c2, v0.c1 FROM v0 WHERE (((((((v0.c2) NOT BETWEEN (v0.c1) AND (v0.c2)))GLOB((((v0.c1, v0.c1, v0.c0)) BETWEEN ((v0.c2, v0.c0, v0.c1)) AND ((v0.c0, 0.8958254250996552, v0.c2)))))) ISNULL)) GROUP BY v0.c0, v0.c2, v0.c1;
SELECT v0.c0, v0.c2, v0.c1 FROM v0 GROUP BY v0.c0, v0.c2, v0.c1;
SELECT rt0.c4, rt0.c0, rt0.c2, rt0.c3 FROM rt0 GROUP BY rt0.c4, rt0.c0, rt0.c2, rt0.c3;
SELECT rt0.c4, rt0.c0, rt0.c2, rt0.c3 FROM rt0 GROUP BY rt0.c4, rt0.c0, rt0.c2, rt0.c3 HAVING SUM(LOWER(DISTINCT rt0.c3)) UNION ALL SELECT ALL rt0.c4, rt0.c0, rt0.c2, rt0.c3 FROM rt0 GROUP BY rt0.c4, rt0.c0, rt0.c2, rt0.c3 HAVING (NOT (SUM(LOWER(DISTINCT rt0.c3)))) UNION ALL SELECT ALL rt0.c4, rt0.c0, rt0.c2, rt0.c3 FROM rt0 GROUP BY rt0.c4, rt0.c0, rt0.c2, rt0.c3 HAVING ((SUM(LOWER(DISTINCT rt0.c3))) ISNULL);
SELECT rt0.c4, rt0.c0, rt0.c2, rt0.c3 FROM rt0 GROUP BY rt0.c4, rt0.c0, rt0.c2, rt0.c3;
SELECT rt0.c4, rt0.c0, rt0.c2, rt0.c3 FROM rt0 GROUP BY rt0.c4, rt0.c0, rt0.c2, rt0.c3 HAVING SUM(LOWER(DISTINCT rt0.c3)) UNION ALL SELECT ALL rt0.c4, rt0.c0, rt0.c2, rt0.c3 FROM rt0 GROUP BY rt0.c4, rt0.c0, rt0.c2, rt0.c3 HAVING (NOT (SUM(LOWER(DISTINCT rt0.c3)))) UNION ALL SELECT ALL rt0.c4, rt0.c0, rt0.c2, rt0.c3 FROM rt0 GROUP BY rt0.c4, rt0.c0, rt0.c2, rt0.c3 HAVING ((SUM(LOWER(DISTINCT rt0.c3))) ISNULL);
SELECT rt0.c4, rt0.c0, rt0.c2, rt0.c3 FROM rt0 GROUP BY rt0.c4, rt0.c0, rt0.c2, rt0.c3;
SELECT ALL rt0.c0, rt0.c1, rt0.c4, rt0.c2, rt0.c3 FROM rt0;
SELECT rt0.c0, rt0.c1, rt0.c4, rt0.c2, rt0.c3 FROM rt0 WHERE (((((((((((rt0.c2)OR(rt0.c0)))OR(rt0.c1)))OR(rt0.c4)))AND(rt0.c2))) NOT BETWEEN (((rt0.c4)>>(rt0.c3))) AND (((((((((rt0.c4)OR('1203707330')))OR(NULL)))AND(rt0.c1)))OR(rt0.c4))))) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c4, rt0.c2, rt0.c3 FROM rt0 WHERE ((NOT (((((((((((rt0.c2)OR(rt0.c0)))OR(rt0.c1)))OR(rt0.c4)))AND(rt0.c2))) NOT BETWEEN (((rt0.c4)>>(rt0.c3))) AND (((((((((rt0.c4)OR('1203707330')))OR(NULL)))AND(rt0.c1)))OR(rt0.c4))))))) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c4, rt0.c2, rt0.c3 FROM rt0 WHERE (((((((((((((rt0.c2)OR(rt0.c0)))OR(rt0.c1)))OR(rt0.c4)))AND(rt0.c2))) NOT BETWEEN (((rt0.c4)>>(rt0.c3))) AND (((((((((rt0.c4)OR('1203707330')))OR(NULL)))AND(rt0.c1)))OR(rt0.c4))))) ISNULL));
SELECT ALL rt0.c0, rt0.c1, rt0.c4, rt0.c2, rt0.c3 FROM rt0;
SELECT DISTINCT * FROM rt0, rt1;
SELECT DISTINCT * FROM rt0, rt1 WHERE ((rt1.c2 IN ()) COLLATE RTRIM COLLATE BINARY) UNION SELECT DISTINCT * FROM rt0, rt1 WHERE ((NOT ((rt1.c2 IN ()) COLLATE RTRIM COLLATE BINARY))) UNION SELECT DISTINCT * FROM rt0, rt1 WHERE ((((rt1.c2 IN ()) COLLATE RTRIM COLLATE BINARY) ISNULL));
SELECT DISTINCT * FROM rt0, rt1;
SELECT v0.c2, rt0.c4, v0.c1, rt1.c2, rt1.c3, rt0.c2, v0.c0, rt0.c1, rt0.c3, rt1.c1, rt0.c0 FROM rt1, v0, rt0 GROUP BY v0.c2, rt0.c4, v0.c1, rt1.c2, rt1.c3, rt0.c2, v0.c0, rt0.c1, rt0.c3, rt1.c1, rt0.c0;
SELECT v0.c2, rt0.c4, v0.c1, rt1.c2, rt1.c3, rt0.c2, v0.c0, rt0.c1, rt0.c3, rt1.c1, rt0.c0 FROM rt1, v0, rt0 WHERE (CASE WHEN load_extension(rt1.c3) THEN (- (rt1.c4)) ELSE ((rt1.c2) BETWEEN (rt0.c4) AND (rt0.c3)) END) GROUP BY v0.c2, rt0.c4, v0.c1, rt1.c2, rt1.c3, rt0.c2, v0.c0, rt0.c1, rt0.c3, rt1.c1, rt0.c0 UNION SELECT ALL v0.c2, rt0.c4, v0.c1, rt1.c2, rt1.c3, rt0.c2, v0.c0, rt0.c1, rt0.c3, rt1.c1, rt0.c0 FROM rt1, v0, rt0 WHERE ((NOT (CASE WHEN load_extension(rt1.c3) THEN (- (rt1.c4)) ELSE ((rt1.c2) BETWEEN (rt0.c4) AND (rt0.c3)) END))) GROUP BY v0.c2, rt0.c4, v0.c1, rt1.c2, rt1.c3, rt0.c2, v0.c0, rt0.c1, rt0.c3, rt1.c1, rt0.c0 UNION SELECT v0.c2, rt0.c4, v0.c1, rt1.c2, rt1.c3, rt0.c2, v0.c0, rt0.c1, rt0.c3, rt1.c1, rt0.c0 FROM rt1, v0, rt0 WHERE (((CASE WHEN load_extension(rt1.c3) THEN (- (rt1.c4)) ELSE ((rt1.c2) BETWEEN (rt0.c4) AND (rt0.c3)) END) ISNULL)) GROUP BY v0.c2, rt0.c4, v0.c1, rt1.c2, rt1.c3, rt0.c2, v0.c0, rt0.c1, rt0.c3, rt1.c1, rt0.c0;
SELECT rt1.c2, rt1.c4, rt1.c0 FROM rt1 GROUP BY rt1.c2, rt1.c4, rt1.c0;
SELECT rt1.c2, rt1.c4, rt1.c0 FROM rt1 GROUP BY rt1.c2, rt1.c4, rt1.c0 HAVING (+ (COUNT(rt1.c4))) UNION ALL SELECT rt1.c2, rt1.c4, rt1.c0 FROM rt1 GROUP BY rt1.c2, rt1.c4, rt1.c0 HAVING (NOT ((+ (COUNT(rt1.c4))))) UNION ALL SELECT rt1.c2, rt1.c4, rt1.c0 FROM rt1 GROUP BY rt1.c2, rt1.c4, rt1.c0 HAVING (((+ (COUNT(rt1.c4)))) ISNULL);
SELECT rt1.c2, rt1.c4, rt1.c0 FROM rt1 GROUP BY rt1.c2, rt1.c4, rt1.c0;
SELECT rt1.c2, rt1.c4, rt1.c0 FROM rt1 GROUP BY rt1.c2, rt1.c4, rt1.c0 HAVING (+ (COUNT(rt1.c4))) UNION ALL SELECT rt1.c2, rt1.c4, rt1.c0 FROM rt1 GROUP BY rt1.c2, rt1.c4, rt1.c0 HAVING (NOT ((+ (COUNT(rt1.c4))))) UNION ALL SELECT rt1.c2, rt1.c4, rt1.c0 FROM rt1 GROUP BY rt1.c2, rt1.c4, rt1.c0 HAVING (((+ (COUNT(rt1.c4)))) ISNULL);
SELECT rt1.c2, rt1.c4, rt1.c0 FROM rt1 GROUP BY rt1.c2, rt1.c4, rt1.c0;
SELECT ALL rt1.c2, rt1.c1, v0.c0, v0.c2, v0.c1 FROM rt0, rt1 RIGHT OUTER JOIN v0 ON (0x336c8dd3 IN ());
SELECT rt1.c2, rt1.c1, v0.c0, v0.c2, v0.c1 FROM rt0, rt1 RIGHT OUTER JOIN v0 ON (0x336c8dd3 IN ()) WHERE (((CAST('' AS INTEGER)) IS TRUE)) UNION ALL SELECT rt1.c2, rt1.c1, v0.c0, v0.c2, v0.c1 FROM rt0, rt1 RIGHT OUTER JOIN v0 ON (0x336c8dd3 IN ()) WHERE ((NOT (((CAST('' AS INTEGER)) IS TRUE)))) UNION ALL SELECT ALL rt1.c2, rt1.c1, v0.c0, v0.c2, v0.c1 FROM rt0, rt1 RIGHT OUTER JOIN v0 ON (0X336c8dd3 IN ()) WHERE (((((CAST('' AS INTEGER)) IS TRUE)) ISNULL));
SELECT ALL rt1.c2, rt1.c1, v0.c0, v0.c2, v0.c1 FROM rt0, rt1 RIGHT OUTER JOIN v0 ON (0x336c8dd3 IN ());
SELECT DISTINCT * FROM rt1;
SELECT DISTINCT * FROM rt1 WHERE (((((rt1.c3)GLOB(rt1.c3))) NOT BETWEEN ((('126602913')||(rt1.c4))) AND (CASE rt1.c2  WHEN rt1.c0 THEN rt1.c0 ELSE rt1.c2 END))) UNION SELECT DISTINCT * FROM rt1 WHERE ((NOT (((((rt1.c3)GLOB(rt1.c3))) NOT BETWEEN ((('126602913')||(rt1.c4))) AND (CASE rt1.c2  WHEN rt1.c0 THEN rt1.c0 ELSE rt1.c2 END))))) UNION SELECT DISTINCT * FROM rt1 WHERE (((((((rt1.c3)GLOB(rt1.c3))) NOT BETWEEN ((('126602913')||(rt1.c4))) AND (CASE rt1.c2  WHEN rt1.c0 THEN rt1.c0 ELSE rt1.c2 END))) ISNULL));
SELECT DISTINCT * FROM rt1;
SELECT ALL rt1.c3, rt1.c0, rt1.c2 FROM rt1 GROUP BY rt1.c3, rt1.c0, rt1.c2;
SELECT ALL rt1.c3, rt1.c0, rt1.c2 FROM rt1 WHERE (((((CASE WHEN rt1.c1 THEN rt1.c3 WHEN rt1.c1 THEN rt1.c4 WHEN rt1.c0 THEN rt1.c1 END)OR(((rt1.c4) NOTNULL))))OR(((rt1.c4)+(rt1.c2))))) GROUP BY rt1.c3, rt1.c0, rt1.c2 UNION SELECT rt1.c3, rt1.c0, rt1.c2 FROM rt1 WHERE ((NOT (((((CASE WHEN rt1.c1 THEN rt1.c3 WHEN rt1.c1 THEN rt1.c4 WHEN rt1.c0 THEN rt1.c1 END)OR(((rt1.c4) NOTNULL))))OR(((rt1.c4)+(rt1.c2))))))) GROUP BY rt1.c3, rt1.c0, rt1.c2 UNION SELECT ALL rt1.c3, rt1.c0, rt1.c2 FROM rt1 WHERE (((((((CASE WHEN rt1.c1 THEN rt1.c3 WHEN rt1.c1 THEN rt1.c4 WHEN rt1.c0 THEN rt1.c1 END)OR(((rt1.c4) NOTNULL))))OR(((rt1.c4)+(rt1.c2))))) ISNULL)) GROUP BY rt1.c3, rt1.c0, rt1.c2;
SELECT ALL rt1.c3, rt1.c0, rt1.c2 FROM rt1 GROUP BY rt1.c3, rt1.c0, rt1.c2;
SELECT rt1.c0, v0.c1, rt1.c2, v0.c0 FROM rt1 RIGHT OUTER JOIN v0 ON (LIKELY(rt1.c1) IN ()) GROUP BY rt1.c0, v0.c1, rt1.c2, v0.c0;
SELECT rt1.c0, v0.c1, rt1.c2, v0.c0 FROM rt1 RIGHT OUTER JOIN v0 ON (LIKELY(rt1.c1) IN ()) GROUP BY rt1.c0, v0.c1, rt1.c2, v0.c0 HAVING SUM(COUNT(*)) UNION ALL SELECT rt1.c0, v0.c1, rt1.c2, v0.c0 FROM rt1 RIGHT OUTER JOIN v0 ON (LIKELY(rt1.c1) IN ()) GROUP BY rt1.c0, v0.c1, rt1.c2, v0.c0 HAVING (NOT (SUM(COUNT(*)))) UNION ALL SELECT ALL rt1.c0, v0.c1, rt1.c2, v0.c0 FROM rt1 RIGHT OUTER JOIN v0 ON (LIKELY(rt1.c1) IN ()) GROUP BY rt1.c0, v0.c1, rt1.c2, v0.c0 HAVING ((SUM(COUNT(*))) ISNULL);
SELECT MAX((((v0.c2)) BETWEEN ((0.9067020083050474)) AND ((v0.c2 COLLATE BINARY)))) FROM rt1, rt0, v0 ORDER BY CAST((((rt0.c0)) BETWEEN ((v0.c0)) AND ((rt0.c3))) AS TEXT) DESC  NULLS FIRST;
SELECT * FROM rt1, v0 LEFT OUTER JOIN rt0 ON CAST(rt0.c3 AS REAL);
SELECT * FROM rt1, v0 LEFT OUTER JOIN rt0 ON CAST(rt0.c3 AS REAL) WHERE (CASE WHEN ((v0.c0)|(rt0.c3)) THEN (~ (v0.c1)) END) UNION ALL SELECT * FROM rt1, v0 LEFT OUTER JOIN rt0 ON CAST(rt0.c3 AS REAL) WHERE ((NOT (CASE WHEN ((v0.c0)|(rt0.c3)) THEN (~ (v0.c1)) END))) UNION ALL SELECT ALL * FROM rt1, v0 LEFT OUTER JOIN rt0 ON CAST(rt0.c3 AS REAL) WHERE (((CASE WHEN ((v0.c0)|(rt0.c3)) THEN (~ (v0.c1)) END) ISNULL));
SELECT * FROM rt1, v0 LEFT OUTER JOIN rt0 ON CAST(rt0.c3 AS REAL);
SELECT DISTINCT * FROM rt0 CROSS JOIN rt1 ON CAST(CASE rt0.c3  WHEN rt0.c3 THEN rt1.c2 ELSE rt0.c0 END AS REAL);
SELECT DISTINCT * FROM rt0 CROSS JOIN rt1 ON CAST(CASE rt0.c3  WHEN rt0.c3 THEN rt1.c2 ELSE rt0.c0 END AS REAL) WHERE (((((rt0.c2) NOT NULL)) BETWEEN (((rt0.c1) NOT BETWEEN (rt0.c4) AND (rt0.c0))) AND (((rt0.c3)<=('994161441'))))) UNION SELECT DISTINCT * FROM rt0 CROSS JOIN rt1 ON CAST(CASE rt0.c3  WHEN rt0.c3 THEN rt1.c2 ELSE rt0.c0 END AS REAL) WHERE ((NOT (((((rt0.c2) NOT NULL)) BETWEEN (((rt0.c1) NOT BETWEEN (rt0.c4) AND (rt0.c0))) AND (((rt0.c3)<=('994161441'))))))) UNION SELECT DISTINCT * FROM rt0 CROSS JOIN rt1 ON CAST(CASE rt0.c3  WHEN rt0.c3 THEN rt1.c2 ELSE rt0.c0 END AS REAL) WHERE (((((((rt0.c2) NOT NULL)) BETWEEN (((rt0.c1) NOT BETWEEN (rt0.c4) AND (rt0.c0))) AND (((rt0.c3)<=('994161441'))))) ISNULL));
SELECT DISTINCT * FROM rt0 CROSS JOIN rt1 ON CAST(CASE rt0.c3  WHEN rt0.c3 THEN rt1.c2 ELSE rt0.c0 END AS REAL);
SELECT ALL v0.c0, v0.c2 FROM v0 GROUP BY v0.c0, v0.c2;
SELECT ALL v0.c0, v0.c2 FROM v0 WHERE ((v0.c0 IN (v0.c0 COLLATE NOCASE, ((v0.c0)AND(v0.c2))))) GROUP BY v0.c0, v0.c2 UNION SELECT v0.c0, v0.c2 FROM v0 WHERE ((NOT ((v0.c0 IN (v0.c0 COLLATE NOCASE, ((v0.c0)AND(v0.c2))))))) GROUP BY v0.c0, v0.c2 UNION SELECT ALL v0.c0, v0.c2 FROM v0 WHERE ((((v0.c0 IN (v0.c0 COLLATE NOCASE, ((v0.c0)AND(v0.c2))))) ISNULL)) GROUP BY v0.c0, v0.c2;
SELECT ALL v0.c0, v0.c2 FROM v0 GROUP BY v0.c0, v0.c2;
SELECT v0.c1, v0.c0 FROM v0 GROUP BY v0.c1, v0.c0;
SELECT ALL v0.c1, v0.c0 FROM v0 GROUP BY v0.c1, v0.c0 HAVING AVG(COUNT(COUNT(v0.c1))) UNION ALL SELECT v0.c1, v0.c0 FROM v0 GROUP BY v0.c1, v0.c0 HAVING (NOT (AVG(COUNT(COUNT(v0.c1))))) UNION ALL SELECT ALL v0.c1, v0.c0 FROM v0 GROUP BY v0.c1, v0.c0 HAVING ((AVG(COUNT(COUNT(v0.c1)))) ISNULL);
SELECT ALL * FROM rt1, v0 INNER JOIN rt0 ON '2145369257';
SELECT * FROM rt1, v0 INNER JOIN rt0 ON '2145369257' WHERE (rt0.c3) UNION ALL SELECT ALL * FROM rt1, v0 INNER JOIN rt0 ON '2145369257' WHERE ((NOT (rt0.c3))) UNION ALL SELECT * FROM rt1, v0 INNER JOIN rt0 ON '2145369257' WHERE (((rt0.c3) ISNULL));
SELECT ALL * FROM rt1, v0 INNER JOIN rt0 ON '2145369257';
SELECT DISTINCT rt0.c0, rt0.c1, rt1.c3, v0.c0, rt1.c0, rt0.c4, v0.c2, v0.c1 FROM rt1 CROSS JOIN rt0 ON (NOT ((rt1.c2 IN ()))) LEFT OUTER JOIN v0 ON (((rt0.c4)) BETWEEN ((((rt1.c2) NOT BETWEEN (rt1.c1) AND (v0.c2)))) AND ((((v0.c2) BETWEEN (rt0.c2) AND (rt1.c4)))));
SELECT DISTINCT rt0.c0, rt0.c1, rt1.c3, v0.c0, rt1.c0, rt0.c4, v0.c2, v0.c1 FROM rt1 CROSS JOIN rt0 ON (NOT ((rt1.c2 IN ()))) LEFT OUTER JOIN v0 ON (((rt0.c4)) BETWEEN ((((rt1.c2) NOT BETWEEN (rt1.c1) AND (v0.c2)))) AND ((((v0.c2) BETWEEN (rt0.c2) AND (rt1.c4))))) WHERE ((((rt1.c2) BETWEEN (rt1.c2) AND (0.7165734651818981)) IN (rt1.c4))) UNION SELECT DISTINCT rt0.c0, rt0.c1, rt1.c3, v0.c0, rt1.c0, rt0.c4, v0.c2, v0.c1 FROM rt1 CROSS JOIN rt0 ON (NOT ((rt1.c2 IN ()))) LEFT OUTER JOIN v0 ON (((rt0.c4)) BETWEEN ((((rt1.c2) NOT BETWEEN (rt1.c1) AND (v0.c2)))) AND ((((v0.c2) BETWEEN (rt0.c2) AND (rt1.c4))))) WHERE ((NOT ((((rt1.c2) BETWEEN (rt1.c2) AND (0.7165734651818981)) IN (rt1.c4))))) UNION SELECT DISTINCT rt0.c0, rt0.c1, rt1.c3, v0.c0, rt1.c0, rt0.c4, v0.c2, v0.c1 FROM rt1 CROSS JOIN rt0 ON (NOT ((rt1.c2 IN ()))) LEFT OUTER JOIN v0 ON (((rt0.c4)) BETWEEN ((((rt1.c2) NOT BETWEEN (rt1.c1) AND (v0.c2)))) AND ((((v0.c2) BETWEEN (rt0.c2) AND (rt1.c4))))) WHERE ((((((rt1.c2) BETWEEN (rt1.c2) AND (0.7165734651818981)) IN (rt1.c4))) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c1, rt1.c3, v0.c0, rt1.c0, rt0.c4, v0.c2, v0.c1 FROM rt1 CROSS JOIN rt0 ON (NOT ((rt1.c2 IN ()))) LEFT OUTER JOIN v0 ON (((rt0.c4)) BETWEEN ((((rt1.c2) NOT BETWEEN (rt1.c1) AND (v0.c2)))) AND ((((v0.c2) BETWEEN (rt0.c2) AND (rt1.c4)))));
SELECT v0.c0, rt0.c2, rt1.c4, rt0.c3, rt1.c0, v0.c1, rt1.c2, rt1.c3, rt0.c4, rt1.c1, rt0.c0, v0.c2, rt0.c1 FROM v0 LEFT OUTER JOIN rt0 ON (NOT (rt0.c0)) COLLATE NOCASE CROSS JOIN rt1 ON (NOT ((rt1.c4 IN ()))) GROUP BY v0.c0, rt0.c2, rt1.c4, rt0.c3, rt1.c0, v0.c1, rt1.c2, rt1.c3, rt0.c4, rt1.c1, rt0.c0, v0.c2, rt0.c1;
SELECT ALL v0.c0, rt0.c2, rt1.c4, rt0.c3, rt1.c0, v0.c1, rt1.c2, rt1.c3, rt0.c4, rt1.c1, rt0.c0, v0.c2, rt0.c1 FROM v0 LEFT OUTER JOIN rt0 ON (NOT (rt0.c0)) COLLATE NOCASE CROSS JOIN rt1 ON (NOT ((rt1.c4 IN ()))) WHERE (2.03560141E9) GROUP BY v0.c0, rt0.c2, rt1.c4, rt0.c3, rt1.c0, v0.c1, rt1.c2, rt1.c3, rt0.c4, rt1.c1, rt0.c0, v0.c2, rt0.c1 UNION SELECT v0.c0, rt0.c2, rt1.c4, rt0.c3, rt1.c0, v0.c1, rt1.c2, rt1.c3, rt0.c4, rt1.c1, rt0.c0, v0.c2, rt0.c1 FROM v0 LEFT OUTER JOIN rt0 ON (NOT (rt0.c0)) COLLATE NOCASE CROSS JOIN rt1 ON (NOT ((rt1.c4 IN ()))) WHERE ((NOT (2.03560141E9))) GROUP BY v0.c0, rt0.c2, rt1.c4, rt0.c3, rt1.c0, v0.c1, rt1.c2, rt1.c3, rt0.c4, rt1.c1, rt0.c0, v0.c2, rt0.c1 UNION SELECT v0.c0, rt0.c2, rt1.c4, rt0.c3, rt1.c0, v0.c1, rt1.c2, rt1.c3, rt0.c4, rt1.c1, rt0.c0, v0.c2, rt0.c1 FROM v0 LEFT OUTER JOIN rt0 ON (NOT (rt0.c0)) COLLATE NOCASE CROSS JOIN rt1 ON (NOT ((rt1.c4 IN ()))) WHERE (((2.03560141E9) ISNULL)) GROUP BY v0.c0, rt0.c2, rt1.c4, rt0.c3, rt1.c0, v0.c1, rt1.c2, rt1.c3, rt0.c4, rt1.c1, rt0.c0, v0.c2, rt0.c1;
SELECT v0.c0, rt0.c2, rt1.c4, rt0.c3, rt1.c0, v0.c1, rt1.c2, rt1.c3, rt0.c4, rt1.c1, rt0.c0, v0.c2, rt0.c1 FROM v0 LEFT OUTER JOIN rt0 ON (NOT (rt0.c0)) COLLATE NOCASE CROSS JOIN rt1 ON (NOT ((rt1.c4 IN ()))) GROUP BY v0.c0, rt0.c2, rt1.c4, rt0.c3, rt1.c0, v0.c1, rt1.c2, rt1.c3, rt0.c4, rt1.c1, rt0.c0, v0.c2, rt0.c1;
SELECT rt0.c3, rt0.c4, rt0.c0, rt0.c1, rt0.c2, v0.c2 FROM v0, rt0 GROUP BY rt0.c3, rt0.c4, rt0.c0, rt0.c1, rt0.c2, v0.c2;
SELECT rt0.c3, rt0.c4, rt0.c0, rt0.c1, rt0.c2, v0.c2 FROM v0, rt0 GROUP BY rt0.c3, rt0.c4, rt0.c0, rt0.c1, rt0.c2, v0.c2 HAVING TRIM(DISTINCT AVG(MAX('1465485230')), MIN(TOTAL(AVG(AVG(rt0.c3))))) UNION ALL SELECT ALL rt0.c3, rt0.c4, rt0.c0, rt0.c1, rt0.c2, v0.c2 FROM v0, rt0 GROUP BY rt0.c3, rt0.c4, rt0.c0, rt0.c1, rt0.c2, v0.c2 HAVING (NOT (TRIM(DISTINCT AVG(MAX('1465485230')), MIN(TOTAL(AVG(AVG(rt0.c3))))))) UNION ALL SELECT rt0.c3, rt0.c4, rt0.c0, rt0.c1, rt0.c2, v0.c2 FROM v0, rt0 GROUP BY rt0.c3, rt0.c4, rt0.c0, rt0.c1, rt0.c2, v0.c2 HAVING ((TRIM(DISTINCT AVG(MAX('1465485230')), MIN(TOTAL(AVG(AVG(rt0.c3)))))) ISNULL);
SELECT * FROM v0, rt1, rt0;
SELECT ALL * FROM v0, rt1, rt0 WHERE ((((+ (rt0.c3))) ISNULL)) UNION ALL SELECT * FROM v0, rt1, rt0 WHERE ((NOT ((((+ (rt0.c3))) ISNULL)))) UNION ALL SELECT ALL * FROM v0, rt1, rt0 WHERE ((((((+ (rt0.c3))) ISNULL)) ISNULL));
SELECT * FROM v0, rt1, rt0;
SELECT DISTINCT rt1.c1, rt1.c3, rt0.c2, rt1.c0, rt1.c4, rt0.c3, rt0.c1, rt0.c4, rt0.c0, rt1.c2 FROM rt1, rt0;
SELECT DISTINCT rt1.c1, rt1.c3, rt0.c2, rt1.c0, rt1.c4, rt0.c3, rt0.c1, rt0.c4, rt0.c0, rt1.c2 FROM rt1, rt0 WHERE (CAST((((rt0.c1, rt0.c1, rt0.c3))<((rt1.c2, rt1.c4, 4.333067868622642E-4))) AS INTEGER)) UNION SELECT DISTINCT rt1.c1, rt1.c3, rt0.c2, rt1.c0, rt1.c4, rt0.c3, rt0.c1, rt0.c4, rt0.c0, rt1.c2 FROM rt1, rt0 WHERE ((NOT (CAST((((rt0.c1, rt0.c1, rt0.c3))<((rt1.c2, rt1.c4, 4.333067868622642E-4))) AS INTEGER)))) UNION SELECT DISTINCT rt1.c1, rt1.c3, rt0.c2, rt1.c0, rt1.c4, rt0.c3, rt0.c1, rt0.c4, rt0.c0, rt1.c2 FROM rt1, rt0 WHERE (((CAST((((rt0.c1, rt0.c1, rt0.c3))<((rt1.c2, rt1.c4, 4.333067868622642E-4))) AS INTEGER)) ISNULL));
SELECT DISTINCT rt1.c1, rt1.c3, rt0.c2, rt1.c0, rt1.c4, rt0.c3, rt0.c1, rt0.c4, rt0.c0, rt1.c2 FROM rt1, rt0;
SELECT rt1.c2, rt1.c4 FROM rt1 GROUP BY rt1.c2, rt1.c4;
SELECT ALL rt1.c2, rt1.c4 FROM rt1 WHERE (((rt1.c2) IS TRUE)) GROUP BY rt1.c2, rt1.c4 UNION SELECT rt1.c2, rt1.c4 FROM rt1 WHERE ((NOT (((rt1.c2) IS TRUE)))) GROUP BY rt1.c2, rt1.c4 UNION SELECT ALL rt1.c2, rt1.c4 FROM rt1 WHERE (((((rt1.c2) IS TRUE)) ISNULL)) GROUP BY rt1.c2, rt1.c4;
SELECT rt1.c2, rt1.c4 FROM rt1 GROUP BY rt1.c2, rt1.c4;
SELECT rt1.c4, v0.c0 FROM rt1, rt0 FULL OUTER JOIN v0 ON (((- (v0.c2)))IS NOT((((rt0.c4, rt0.c4, rt1.c3))!=((rt0.c0, rt0.c3, rt0.c3))))) GROUP BY rt1.c4, v0.c0;
SELECT ALL rt1.c4, v0.c0 FROM rt1, rt0 FULL OUTER JOIN v0 ON (((- (v0.c2)))IS NOT((((rt0.c4, rt0.c4, rt1.c3))!=((rt0.c0, rt0.c3, rt0.c3))))) GROUP BY rt1.c4, v0.c0 HAVING (MAX(COUNT(v0.c1)) IN ()) UNION ALL SELECT ALL rt1.c4, v0.c0 FROM rt1, rt0 FULL OUTER JOIN v0 ON (((- (v0.c2)))IS NOT((((rt0.c4, rt0.c4, rt1.c3))<>((rt0.c0, rt0.c3, rt0.c3))))) GROUP BY rt1.c4, v0.c0 HAVING (NOT ((MAX(COUNT(v0.c1)) IN ()))) UNION ALL SELECT rt1.c4, v0.c0 FROM rt1, rt0 FULL OUTER JOIN v0 ON (((- (v0.c2)))IS NOT((((rt0.c4, rt0.c4, rt1.c3))!=((rt0.c0, rt0.c3, rt0.c3))))) GROUP BY rt1.c4, v0.c0 HAVING (((MAX(COUNT(v0.c1)) IN ())) ISNULL);
SELECT rt1.c4, v0.c0 FROM rt1, rt0 FULL OUTER JOIN v0 ON (((- (v0.c2)))IS NOT((((rt0.c4, rt0.c4, rt1.c3))!=((rt0.c0, rt0.c3, rt0.c3))))) GROUP BY rt1.c4, v0.c0;
SELECT ALL rt1.c4, v0.c0 FROM rt1, rt0 FULL OUTER JOIN v0 ON (((- (v0.c2)))IS NOT((((rt0.c4, rt0.c4, rt1.c3))!=((rt0.c0, rt0.c3, rt0.c3))))) GROUP BY rt1.c4, v0.c0 HAVING (MAX(COUNT(v0.c1)) IN ()) UNION ALL SELECT ALL rt1.c4, v0.c0 FROM rt1, rt0 FULL OUTER JOIN v0 ON (((- (v0.c2)))IS NOT((((rt0.c4, rt0.c4, rt1.c3))<>((rt0.c0, rt0.c3, rt0.c3))))) GROUP BY rt1.c4, v0.c0 HAVING (NOT ((MAX(COUNT(v0.c1)) IN ()))) UNION ALL SELECT rt1.c4, v0.c0 FROM rt1, rt0 FULL OUTER JOIN v0 ON (((- (v0.c2)))IS NOT((((rt0.c4, rt0.c4, rt1.c3))!=((rt0.c0, rt0.c3, rt0.c3))))) GROUP BY rt1.c4, v0.c0 HAVING (((MAX(COUNT(v0.c1)) IN ())) ISNULL);
SELECT rt1.c4, v0.c0 FROM rt1, rt0 FULL OUTER JOIN v0 ON (((- (v0.c2)))IS NOT((((rt0.c4, rt0.c4, rt1.c3))!=((rt0.c0, rt0.c3, rt0.c3))))) GROUP BY rt1.c4, v0.c0;
SELECT ALL v0.c0 FROM v0;
SELECT v0.c0 FROM v0 WHERE (((TYPEOF(DISTINCT v0.c2))&(((((v0.c1)OR(v0.c0)))OR(v0.c2))))) UNION ALL SELECT v0.c0 FROM v0 WHERE ((NOT (((TYPEOF(DISTINCT v0.c2))&(((((v0.c1)OR(v0.c0)))OR(v0.c2))))))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE (((((TYPEOF(DISTINCT v0.c2))&(((((v0.c1)OR(v0.c0)))OR(v0.c2))))) ISNULL));
SELECT ALL v0.c0 FROM v0;
SELECT DISTINCT * FROM v0 CROSS JOIN rt0 ON (((NOT (v0.c2))) NOT BETWEEN (v0.c1 COLLATE NOCASE) AND ((('124262063')<>(v0.c0)))) FULL OUTER JOIN rt1 ON ((((((((((((rt0.c2)OR(rt1.c2)))AND(rt1.c0)))OR(rt0.c2)))AND(rt0.c2)))OR(((((rt1.c2)OR(v0.c1)))OR(rt1.c2)))))AND(((rt0.c0)>=(x'6004'))));
SELECT DISTINCT * FROM v0 CROSS JOIN rt0 ON (((NOT (v0.c2))) NOT BETWEEN (v0.c1 COLLATE NOCASE) AND ((('124262063')<>(v0.c0)))) FULL OUTER JOIN rt1 ON ((((((((((((rt0.c2)OR(rt1.c2)))AND(rt1.c0)))OR(rt0.c2)))AND(rt0.c2)))OR(((((rt1.c2)OR(v0.c1)))OR(rt1.c2)))))AND(((rt0.c0)>=(x'6004')))) WHERE (((NULL)&(((rt1.c4) IS TRUE)))) UNION SELECT DISTINCT * FROM v0 CROSS JOIN rt0 ON (((NOT (v0.c2))) NOT BETWEEN (v0.c1 COLLATE NOCASE) AND ((('124262063')!=(v0.c0)))) FULL OUTER JOIN rt1 ON ((((((((((((rt0.c2)OR(rt1.c2)))AND(rt1.c0)))OR(rt0.c2)))AND(rt0.c2)))OR(((((rt1.c2)OR(v0.c1)))OR(rt1.c2)))))AND(((rt0.c0)>=(x'6004')))) WHERE ((NOT (((NULL)&(((rt1.c4) IS TRUE)))))) UNION SELECT DISTINCT * FROM v0 CROSS JOIN rt0 ON (((NOT (v0.c2))) NOT BETWEEN (v0.c1 COLLATE NOCASE) AND ((('124262063')!=(v0.c0)))) FULL OUTER JOIN rt1 ON ((((((((((((rt0.c2)OR(rt1.c2)))AND(rt1.c0)))OR(rt0.c2)))AND(rt0.c2)))OR(((((rt1.c2)OR(v0.c1)))OR(rt1.c2)))))AND(((rt0.c0)>=(x'6004')))) WHERE (((((NULL)&(((rt1.c4) IS TRUE)))) ISNULL));
SELECT DISTINCT * FROM v0 CROSS JOIN rt0 ON (((NOT (v0.c2))) NOT BETWEEN (v0.c1 COLLATE NOCASE) AND ((('124262063')<>(v0.c0)))) FULL OUTER JOIN rt1 ON ((((((((((((rt0.c2)OR(rt1.c2)))AND(rt1.c0)))OR(rt0.c2)))AND(rt0.c2)))OR(((((rt1.c2)OR(v0.c1)))OR(rt1.c2)))))AND(((rt0.c0)>=(x'6004'))));
SELECT rt1.c0, rt1.c4, rt1.c2, rt1.c3, rt1.c1 FROM rt1 GROUP BY rt1.c0, rt1.c4, rt1.c2, rt1.c3, rt1.c1;
SELECT ALL rt1.c0, rt1.c4, rt1.c2, rt1.c3, rt1.c1 FROM rt1 NOT INDEXED WHERE ((0.22779796331233126 IN ())) GROUP BY rt1.c0, rt1.c4, rt1.c2, rt1.c3, rt1.c1 UNION SELECT rt1.c0, rt1.c4, rt1.c2, rt1.c3, rt1.c1 FROM rt1 WHERE ((NOT ((0.22779796331233126 IN ())))) GROUP BY rt1.c0, rt1.c4, rt1.c2, rt1.c3, rt1.c1 UNION SELECT rt1.c0, rt1.c4, rt1.c2, rt1.c3, rt1.c1 FROM rt1 WHERE ((((0.22779796331233126 IN ())) ISNULL)) GROUP BY rt1.c0, rt1.c4, rt1.c2, rt1.c3, rt1.c1;
SELECT rt1.c0, rt1.c4, rt1.c2, rt1.c3, rt1.c1 FROM rt1 GROUP BY rt1.c0, rt1.c4, rt1.c2, rt1.c3, rt1.c1;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING TOTAL(AVG(GROUP_CONCAT(MAX(v0.c1)))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (TOTAL(AVG(GROUP_CONCAT(MAX(v0.c1)))))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((TOTAL(AVG(GROUP_CONCAT(MAX(v0.c1))))) ISNULL);
SELECT ALL * FROM v0;
SELECT ALL * FROM v0 WHERE ((((((v0.c2)) BETWEEN ((v0.c0)) AND ((v0.c2))))%(((((0.6682225816428479)AND(v0.c0)))OR(v0.c2))))) UNION ALL SELECT * FROM v0 WHERE ((NOT ((((((v0.c2)) BETWEEN ((v0.c0)) AND ((v0.c2))))%(((((0.6682225816428479)AND(v0.c0)))OR(v0.c2))))))) UNION ALL SELECT ALL * FROM v0 WHERE ((((((((v0.c2)) BETWEEN ((v0.c0)) AND ((v0.c2))))%(((((0.6682225816428479)AND(v0.c0)))OR(v0.c2))))) ISNULL));
SELECT ALL * FROM v0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (((((v0.c2) NOT NULL))|(((v0.c1)==(v0.c0))))) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (((((v0.c2) NOT NULL))|(((v0.c1)==(v0.c0))))))) UNION SELECT DISTINCT * FROM v0 WHERE (((((((v0.c2) NOT NULL))|(((v0.c1)==(v0.c0))))) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT v0.c2, v0.c0, rt0.c4, rt0.c0 FROM rt1, rt0 NATURAL JOIN v0 GROUP BY v0.c2, v0.c0, rt0.c4, rt0.c0;
SELECT ALL v0.c2, v0.c0, rt0.c4, rt0.c0 FROM rt1, rt0 NATURAL JOIN v0 WHERE ('1733306610') GROUP BY v0.c2, v0.c0, rt0.c4, rt0.c0 UNION SELECT v0.c2, v0.c0, rt0.c4, rt0.c0 FROM rt1, rt0 NATURAL JOIN v0 WHERE ((NOT ('1733306610'))) GROUP BY v0.c2, v0.c0, rt0.c4, rt0.c0 UNION SELECT v0.c2, v0.c0, rt0.c4, rt0.c0 FROM rt1, rt0 NATURAL JOIN v0 WHERE ((('1733306610') ISNULL)) GROUP BY v0.c2, v0.c0, rt0.c4, rt0.c0;
SELECT v0.c2, v0.c0, rt0.c4, rt0.c0 FROM rt1, rt0 NATURAL JOIN v0 GROUP BY v0.c2, v0.c0, rt0.c4, rt0.c0;
SELECT rt1.c3, rt1.c2, rt1.c4, rt0.c0, rt0.c2 FROM rt1, rt0 GROUP BY rt1.c3, rt1.c2, rt1.c4, rt0.c0, rt0.c2;
SELECT ALL rt1.c3, rt1.c2, rt1.c4, rt0.c0, rt0.c2 FROM rt1, rt0 GROUP BY rt1.c3, rt1.c2, rt1.c4, rt0.c0, rt0.c2 HAVING CASE WHEN ((rt1.c1)>(rt0.c0)) THEN (- (SUM(NULL))) WHEN MAX(rt1.c2) THEN AVG(SUM(COUNT(*))) WHEN SUM(rt1.c1) THEN SUM(SUM(COUNT(SUM(SUM(rt0.c1))))) END UNION ALL SELECT ALL rt1.c3, rt1.c2, rt1.c4, rt0.c0, rt0.c2 FROM rt1, rt0 GROUP BY rt1.c3, rt1.c2, rt1.c4, rt0.c0, rt0.c2 HAVING (NOT (CASE WHEN ((rt1.c1)>(rt0.c0)) THEN (- (SUM(NULL))) WHEN MAX(rt1.c2) THEN AVG(SUM(COUNT(*))) WHEN SUM(rt1.c1) THEN SUM(SUM(COUNT(SUM(SUM(rt0.c1))))) END)) UNION ALL SELECT ALL rt1.c3, rt1.c2, rt1.c4, rt0.c0, rt0.c2 FROM rt1, rt0 GROUP BY rt1.c3, rt1.c2, rt1.c4, rt0.c0, rt0.c2 HAVING ((CASE WHEN ((rt1.c1)>(rt0.c0)) THEN (- (SUM(NULL))) WHEN MAX(rt1.c2) THEN AVG(SUM(COUNT(*))) WHEN SUM(rt1.c1) THEN SUM(SUM(COUNT(SUM(SUM(rt0.c1))))) END) ISNULL);
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE ((+ (rt0.c3))) UNION ALL SELECT * FROM rt0 WHERE ((NOT ((+ (rt0.c3))))) UNION ALL SELECT * FROM rt0 WHERE ((((+ (rt0.c3))) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT * FROM v0, rt1;
SELECT DISTINCT * FROM v0, rt1 WHERE (((((CASE '-850814285'  WHEN rt1.c1 THEN '-954031356' WHEN rt1.c2 THEN v0.c1 WHEN v0.c2 THEN '2035601410' END)OR(((rt1.c1)>>(rt1.c4)))))AND(((v0.c0)<(rt1.c0))))) UNION SELECT DISTINCT * FROM v0, rt1 WHERE ((NOT (((((CASE '-850814285'  WHEN rt1.c1 THEN '-954031356' WHEN rt1.c2 THEN v0.c1 WHEN v0.c2 THEN '2035601410' END)OR(((rt1.c1)>>(rt1.c4)))))AND(((v0.c0)<(rt1.c0))))))) UNION SELECT DISTINCT * FROM v0, rt1 WHERE (((((((CASE '-850814285'  WHEN rt1.c1 THEN '-954031356' WHEN rt1.c2 THEN v0.c1 WHEN v0.c2 THEN '2035601410' END)OR(((rt1.c1)>>(rt1.c4)))))AND(((v0.c0)<(rt1.c0))))) ISNULL));
SELECT DISTINCT * FROM v0, rt1;
SELECT rt0.c3, rt0.c0, rt0.c1, rt0.c4, rt0.c2, rt1.c2, v0.c1, v0.c0, v0.c2 FROM rt0, v0 NATURAL JOIN rt1 GROUP BY rt0.c3, rt0.c0, rt0.c1, rt0.c4, rt0.c2, rt1.c2, v0.c1, v0.c0, v0.c2;
SELECT rt0.c3, rt0.c0, rt0.c1, rt0.c4, rt0.c2, rt1.c2, v0.c1, v0.c0, v0.c2 FROM rt0, v0 NATURAL JOIN rt1 WHERE (rt0.c0) GROUP BY rt0.c3, rt0.c0, rt0.c1, rt0.c4, rt0.c2, rt1.c2, v0.c1, v0.c0, v0.c2 UNION SELECT ALL rt0.c3, rt0.c0, rt0.c1, rt0.c4, rt0.c2, rt1.c2, v0.c1, v0.c0, v0.c2 FROM rt0, v0 NATURAL JOIN rt1 WHERE ((NOT (rt0.c0))) GROUP BY rt0.c3, rt0.c0, rt0.c1, rt0.c4, rt0.c2, rt1.c2, v0.c1, v0.c0, v0.c2 UNION SELECT ALL rt0.c3, rt0.c0, rt0.c1, rt0.c4, rt0.c2, rt1.c2, v0.c1, v0.c0, v0.c2 FROM rt0, v0 NATURAL JOIN rt1 WHERE (((rt0.c0) ISNULL)) GROUP BY rt0.c3, rt0.c0, rt0.c1, rt0.c4, rt0.c2, rt1.c2, v0.c1, v0.c0, v0.c2;
SELECT rt0.c3, rt0.c0, rt0.c1, rt0.c4, rt0.c2, rt1.c2, v0.c1, v0.c0, v0.c2 FROM rt0, v0 NATURAL JOIN rt1 GROUP BY rt0.c3, rt0.c0, rt0.c1, rt0.c4, rt0.c2, rt1.c2, v0.c1, v0.c0, v0.c2;
SELECT ALL v0.c2, v0.c1, v0.c0 FROM v0 GROUP BY v0.c2, v0.c1, v0.c0;
SELECT v0.c2, v0.c1, v0.c0 FROM v0 GROUP BY v0.c2, v0.c1, v0.c0 HAVING ((v0.c1)LIKE(AVG(GROUP_CONCAT(v0.c2)))) UNION ALL SELECT v0.c2, v0.c1, v0.c0 FROM v0 GROUP BY v0.c2, v0.c1, v0.c0 HAVING (NOT (((v0.c1)LIKE(AVG(GROUP_CONCAT(v0.c2)))))) UNION ALL SELECT ALL v0.c2, v0.c1, v0.c0 FROM v0 GROUP BY v0.c2, v0.c1, v0.c0 HAVING ((((v0.c1)LIKE(AVG(GROUP_CONCAT(v0.c2))))) ISNULL);
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE (CAST(CAST(rt0.c0 AS INTEGER) AS NUMERIC)) UNION ALL SELECT * FROM rt0 WHERE ((NOT (CAST(CAST(rt0.c0 AS INTEGER) AS NUMERIC)))) UNION ALL SELECT * FROM rt0 WHERE (((CAST(CAST(rt0.c0 AS INTEGER) AS NUMERIC)) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT rt0.c3, rt0.c1, rt1.c2, rt0.c4, rt1.c1, rt0.c0, rt1.c3, rt1.c4, rt1.c0 FROM rt0 RIGHT OUTER JOIN rt1 ON ((((((((rt0.c0)OR(rt1.c3)))AND(rt0.c2)))AND(rt1.c1)))OR(rt1.c4)) COLLATE NOCASE COLLATE NOCASE;
SELECT DISTINCT rt0.c3, rt0.c1, rt1.c2, rt0.c4, rt1.c1, rt0.c0, rt1.c3, rt1.c4, rt1.c0 FROM rt0 RIGHT OUTER JOIN rt1 ON ((((((((rt0.c0)OR(rt1.c3)))AND(rt0.c2)))AND(rt1.c1)))OR(rt1.c4)) COLLATE NOCASE COLLATE NOCASE WHERE (LTRIM(IFNULL(rt0.c3, rt0.c2), (+ (rt1.c2)))) UNION SELECT DISTINCT rt0.c3, rt0.c1, rt1.c2, rt0.c4, rt1.c1, rt0.c0, rt1.c3, rt1.c4, rt1.c0 FROM rt0 RIGHT OUTER JOIN rt1 ON ((((((((rt0.c0)OR(rt1.c3)))AND(rt0.c2)))AND(rt1.c1)))OR(rt1.c4)) COLLATE NOCASE COLLATE NOCASE WHERE ((NOT (LTRIM(IFNULL(rt0.c3, rt0.c2), (+ (rt1.c2)))))) UNION SELECT DISTINCT rt0.c3, rt0.c1, rt1.c2, rt0.c4, rt1.c1, rt0.c0, rt1.c3, rt1.c4, rt1.c0 FROM rt0 RIGHT OUTER JOIN rt1 ON ((((((((rt0.c0)OR(rt1.c3)))AND(rt0.c2)))AND(rt1.c1)))OR(rt1.c4)) COLLATE NOCASE COLLATE NOCASE WHERE (((LTRIM(IFNULL(rt0.c3, rt0.c2), (+ (rt1.c2)))) ISNULL));
SELECT DISTINCT rt0.c3, rt0.c1, rt1.c2, rt0.c4, rt1.c1, rt0.c0, rt1.c3, rt1.c4, rt1.c0 FROM rt0 RIGHT OUTER JOIN rt1 ON ((((((((rt0.c0)OR(rt1.c3)))AND(rt0.c2)))AND(rt1.c1)))OR(rt1.c4)) COLLATE NOCASE COLLATE NOCASE;
SELECT v0.c1, v0.c2 FROM rt0, v0 GROUP BY v0.c1, v0.c2;
SELECT ALL v0.c1, v0.c2 FROM rt0, v0 WHERE (LOWER(DISTINCT TRIM(rt0.c1, rt0.c3))) GROUP BY v0.c1, v0.c2 UNION SELECT v0.c1, v0.c2 FROM rt0, v0 WHERE ((NOT (LOWER(DISTINCT TRIM(rt0.c1, rt0.c3))))) GROUP BY v0.c1, v0.c2 UNION SELECT v0.c1, v0.c2 FROM rt0, v0 WHERE (((LOWER(DISTINCT TRIM(rt0.c1, rt0.c3))) ISNULL)) GROUP BY v0.c1, v0.c2;
SELECT v0.c1, v0.c2 FROM rt0, v0 GROUP BY v0.c1, v0.c2;
SELECT rt0.c3, rt0.c2 FROM rt0 GROUP BY rt0.c3, rt0.c2;
SELECT ALL rt0.c3, rt0.c2 FROM rt0 GROUP BY rt0.c3, rt0.c2 HAVING COUNT(*) UNION ALL SELECT rt0.c3, rt0.c2 FROM rt0 GROUP BY rt0.c3, rt0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c3, rt0.c2 FROM rt0 GROUP BY rt0.c3, rt0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c3, rt0.c2 FROM rt0 GROUP BY rt0.c3, rt0.c2;
SELECT ALL rt0.c3, rt0.c2 FROM rt0 GROUP BY rt0.c3, rt0.c2 HAVING COUNT(*) UNION ALL SELECT rt0.c3, rt0.c2 FROM rt0 GROUP BY rt0.c3, rt0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c3, rt0.c2 FROM rt0 GROUP BY rt0.c3, rt0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c3, rt0.c2 FROM rt0 GROUP BY rt0.c3, rt0.c2;
SELECT rt0.c4, rt0.c3, rt0.c2, rt0.c1, rt0.c0 FROM rt0;
SELECT ALL rt0.c4, rt0.c3, rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE (CAST((- (rt0.c1)) AS INTEGER)) UNION ALL SELECT rt0.c4, rt0.c3, rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (CAST((- (rt0.c1)) AS INTEGER)))) UNION ALL SELECT rt0.c4, rt0.c3, rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE (((CAST((- (rt0.c1)) AS INTEGER)) ISNULL));
SELECT rt0.c4, rt0.c3, rt0.c2, rt0.c1, rt0.c0 FROM rt0;
SELECT DISTINCT * FROM rt1, rt0, v0;
SELECT DISTINCT * FROM rt1, rt0, v0 WHERE (rt1.c4) UNION SELECT DISTINCT * FROM rt1, rt0, v0 WHERE ((NOT (rt1.c4))) UNION SELECT DISTINCT * FROM rt1, rt0, v0 WHERE (((rt1.c4) ISNULL));
SELECT DISTINCT * FROM rt1, rt0, v0;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (((rt0.c3)>>(rt0.c4))))) GROUP BY rt0.c1, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT ((NOT (((rt0.c3)>>(rt0.c4))))))) GROUP BY rt0.c1, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c2 FROM rt0 WHERE ((((NOT (((rt0.c3)>>(rt0.c4))))) ISNULL)) GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c2, rt0.c4, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c4, rt0.c1;
SELECT rt0.c2, rt0.c4, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c4, rt0.c1 HAVING (rt0.c2 IN ()) UNION ALL SELECT rt0.c2, rt0.c4, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c4, rt0.c1 HAVING (NOT ((rt0.c2 IN ()))) UNION ALL SELECT rt0.c2, rt0.c4, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c4, rt0.c1 HAVING (((rt0.c2 IN ())) ISNULL);
SELECT ALL rt0.c2, rt0.c4, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c4, rt0.c1;
SELECT rt0.c2, rt0.c4, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c4, rt0.c1 HAVING (rt0.c2 IN ()) UNION ALL SELECT rt0.c2, rt0.c4, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c4, rt0.c1 HAVING (NOT ((rt0.c2 IN ()))) UNION ALL SELECT rt0.c2, rt0.c4, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c4, rt0.c1 HAVING (((rt0.c2 IN ())) ISNULL);
SELECT ALL rt0.c2, rt0.c4, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c4, rt0.c1;
SELECT ALL * FROM rt0, rt1;
SELECT ALL * FROM rt0, rt1 WHERE ((NOT (rt0.c1 COLLATE RTRIM))) UNION ALL SELECT ALL * FROM rt0, rt1 WHERE ((NOT ((NOT (rt0.c1 COLLATE RTRIM))))) UNION ALL SELECT ALL * FROM rt0, rt1 WHERE ((((NOT (rt0.c1 COLLATE RTRIM))) ISNULL));
SELECT ALL * FROM rt0, rt1;
SELECT DISTINCT rt1.c2, rt1.c3 FROM rt1;
SELECT DISTINCT rt1.c2, rt1.c3 FROM rt1 WHERE (((((rt1.c3)OR(((rt1.c4) NOTNULL))))AND(CASE rt1.c0  WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c3 THEN rt1.c0 WHEN rt1.c4 THEN rt1.c3 ELSE x'7d723392' END))) UNION SELECT DISTINCT rt1.c2, rt1.c3 FROM rt1 WHERE ((NOT (((((rt1.c3)OR(((rt1.c4) NOTNULL))))AND(CASE rt1.c0  WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c3 THEN rt1.c0 WHEN rt1.c4 THEN rt1.c3 ELSE x'7d723392' END))))) UNION SELECT DISTINCT rt1.c2, rt1.c3 FROM rt1 WHERE (((((((rt1.c3)OR(((rt1.c4) NOTNULL))))AND(CASE rt1.c0  WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c3 THEN rt1.c0 WHEN rt1.c4 THEN rt1.c3 ELSE x'7d723392' END))) ISNULL));
SELECT DISTINCT rt1.c2, rt1.c3 FROM rt1;
SELECT ALL rt0.c3, rt0.c1, rt0.c4 FROM rt0 GROUP BY rt0.c3, rt0.c1, rt0.c4;
SELECT ALL rt0.c3, rt0.c1, rt0.c4 FROM rt0 WHERE (((((((rt0.c1) BETWEEN ('1948747991') AND (rt0.c3)))AND(CAST(rt0.c3 AS REAL))))OR(''))) GROUP BY rt0.c3, rt0.c1, rt0.c4 UNION SELECT ALL rt0.c3, rt0.c1, rt0.c4 FROM rt0 WHERE ((NOT (((((((rt0.c1) BETWEEN ('1948747991') AND (rt0.c3)))AND(CAST(rt0.c3 AS REAL))))OR(''))))) GROUP BY rt0.c3, rt0.c1, rt0.c4 UNION SELECT rt0.c3, rt0.c1, rt0.c4 FROM rt0 WHERE (((((((((rt0.c1) BETWEEN ('1948747991') AND (rt0.c3)))AND(CAST(rt0.c3 AS REAL))))OR(''))) ISNULL)) GROUP BY rt0.c3, rt0.c1, rt0.c4;
SELECT ALL rt0.c3, rt0.c1, rt0.c4 FROM rt0 GROUP BY rt0.c3, rt0.c1, rt0.c4;
SELECT v0.c0, v0.c1, rt1.c0, v0.c2, rt1.c4 FROM rt1, v0 GROUP BY v0.c0, v0.c1, rt1.c0, v0.c2, rt1.c4;
SELECT ALL v0.c0, v0.c1, rt1.c0, v0.c2, rt1.c4 FROM rt1, v0 GROUP BY v0.c0, v0.c1, rt1.c0, v0.c2, rt1.c4 HAVING MAX(rt1.c2) UNION ALL SELECT v0.c0, v0.c1, rt1.c0, v0.c2, rt1.c4 FROM rt1, v0 GROUP BY v0.c0, v0.c1, rt1.c0, v0.c2, rt1.c4 HAVING (NOT (MAX(rt1.c2))) UNION ALL SELECT ALL v0.c0, v0.c1, rt1.c0, v0.c2, rt1.c4 FROM rt1, v0 GROUP BY v0.c0, v0.c1, rt1.c0, v0.c2, rt1.c4 HAVING ((MAX(rt1.c2)) ISNULL);
SELECT v0.c0, v0.c1, rt1.c0, v0.c2, rt1.c4 FROM rt1, v0 GROUP BY v0.c0, v0.c1, rt1.c0, v0.c2, rt1.c4;
SELECT ALL v0.c0, v0.c1, rt1.c0, v0.c2, rt1.c4 FROM rt1, v0 GROUP BY v0.c0, v0.c1, rt1.c0, v0.c2, rt1.c4 HAVING MAX(rt1.c2) UNION ALL SELECT v0.c0, v0.c1, rt1.c0, v0.c2, rt1.c4 FROM rt1, v0 GROUP BY v0.c0, v0.c1, rt1.c0, v0.c2, rt1.c4 HAVING (NOT (MAX(rt1.c2))) UNION ALL SELECT ALL v0.c0, v0.c1, rt1.c0, v0.c2, rt1.c4 FROM rt1, v0 GROUP BY v0.c0, v0.c1, rt1.c0, v0.c2, rt1.c4 HAVING ((MAX(rt1.c2)) ISNULL);
SELECT v0.c0, v0.c1, rt1.c0, v0.c2, rt1.c4 FROM rt1, v0 GROUP BY v0.c0, v0.c1, rt1.c0, v0.c2, rt1.c4;
SELECT ALL rt1.c0, rt1.c4 FROM rt1;
SELECT ALL rt1.c0, rt1.c4 FROM rt1 WHERE (((((rt1.c0) BETWEEN ('?/') AND (rt1.c3))) IS TRUE)) UNION ALL SELECT ALL rt1.c0, rt1.c4 FROM rt1 WHERE ((NOT (((((rt1.c0) BETWEEN ('?/') AND (rt1.c3))) IS TRUE)))) UNION ALL SELECT rt1.c0, rt1.c4 FROM rt1 WHERE (((((((rt1.c0) BETWEEN ('?/') AND (rt1.c3))) IS TRUE)) ISNULL));
SELECT ALL rt1.c0, rt1.c4 FROM rt1;
SELECT DISTINCT * FROM rt1;
SELECT DISTINCT * FROM rt1 WHERE (ROUND(rt1.c4, CASE WHEN '' THEN rt1.c0 WHEN rt1.c4 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c3 ELSE rt1.c0 END)) UNION SELECT DISTINCT * FROM rt1 NOT INDEXED WHERE ((NOT (ROUND(rt1.c4, CASE WHEN '' THEN rt1.c0 WHEN rt1.c4 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c3 ELSE rt1.c0 END)))) UNION SELECT DISTINCT * FROM rt1 WHERE (((ROUND(rt1.c4, CASE WHEN '' THEN rt1.c0 WHEN rt1.c4 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c3 ELSE rt1.c0 END)) ISNULL));
SELECT DISTINCT * FROM rt1;
SELECT ALL rt0.c0, v0.c1 FROM rt0 INNER JOIN v0 ON LIKE(((rt0.c0)|(rt1.c2)), ((rt1.c2)/(rt0.c4)), 'Y') FULL OUTER JOIN rt1 ON (((rt1.c4))==((v0.c0 COLLATE BINARY))) GROUP BY rt0.c0, v0.c1;
SELECT rt0.c4, rt0.c1 FROM rt0 GROUP BY rt0.c4, rt0.c1;
SELECT ALL rt0.c4, rt0.c1 FROM rt0 GROUP BY rt0.c4, rt0.c1 HAVING MIN((GROUP_CONCAT(MIN(0.6601191706422621)) IN ())) UNION ALL SELECT ALL rt0.c4, rt0.c1 FROM rt0 GROUP BY rt0.c4, rt0.c1 HAVING (NOT (MIN((GROUP_CONCAT(MIN(0.6601191706422621)) IN ())))) UNION ALL SELECT rt0.c4, rt0.c1 FROM rt0 GROUP BY rt0.c4, rt0.c1 HAVING ((MIN((GROUP_CONCAT(MIN(0.6601191706422621)) IN ()))) ISNULL);
SELECT rt0.c4, rt0.c1 FROM rt0 GROUP BY rt0.c4, rt0.c1;
SELECT ALL rt0.c4, rt0.c1 FROM rt0 GROUP BY rt0.c4, rt0.c1 HAVING MIN((GROUP_CONCAT(MIN(0.6601191706422621)) IN ())) UNION ALL SELECT ALL rt0.c4, rt0.c1 FROM rt0 GROUP BY rt0.c4, rt0.c1 HAVING (NOT (MIN((GROUP_CONCAT(MIN(0.6601191706422621)) IN ())))) UNION ALL SELECT rt0.c4, rt0.c1 FROM rt0 GROUP BY rt0.c4, rt0.c1 HAVING ((MIN((GROUP_CONCAT(MIN(0.6601191706422621)) IN ()))) ISNULL);
SELECT rt0.c4, rt0.c1 FROM rt0 GROUP BY rt0.c4, rt0.c1;
SELECT ALL rt1.c2, rt1.c3, rt1.c0, rt1.c1, rt1.c4 FROM rt1;
SELECT rt1.c2, rt1.c3, rt1.c0, rt1.c1, rt1.c4 FROM rt1 WHERE (((CASE WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c3 THEN rt1.c4 WHEN rt1.c0 THEN rt1.c0 END)*((rt1.c1 IN ())))) UNION ALL SELECT rt1.c2, rt1.c3, rt1.c0, rt1.c1, rt1.c4 FROM rt1 WHERE ((NOT (((CASE WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c3 THEN rt1.c4 WHEN rt1.c0 THEN rt1.c0 END)*((rt1.c1 IN ())))))) UNION ALL SELECT rt1.c2, rt1.c3, rt1.c0, rt1.c1, rt1.c4 FROM rt1 WHERE (((((CASE WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c3 THEN rt1.c4 WHEN rt1.c0 THEN rt1.c0 END)*((rt1.c1 IN ())))) ISNULL));
SELECT ALL rt1.c2, rt1.c3, rt1.c0, rt1.c1, rt1.c4 FROM rt1;
SELECT DISTINCT * FROM rt0, v0;
SELECT DISTINCT * FROM rt0, v0 WHERE (((((v0.c0)GLOB(v0.c2))) BETWEEN (UNLIKELY(v0.c2)) AND (v0.c0))) UNION SELECT DISTINCT * FROM rt0, v0 WHERE ((NOT (((((v0.c0)GLOB(v0.c2))) BETWEEN (UNLIKELY(v0.c2)) AND (v0.c0))))) UNION SELECT DISTINCT * FROM rt0, v0 WHERE (((((((v0.c0)GLOB(v0.c2))) BETWEEN (UNLIKELY(v0.c2)) AND (v0.c0))) ISNULL));
SELECT DISTINCT * FROM rt0, v0;
SELECT ALL rt0.c0 FROM rt0, v0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0, v0 WHERE ((((((v0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0))))>=((v0.c0 IN ())))) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM rt0, v0 WHERE ((NOT ((((((v0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0))))>=((v0.c0 IN ())))))) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM rt0, v0 WHERE ((((((((v0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0))))>=((v0.c0 IN ())))) ISNULL)) GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0, v0 GROUP BY rt0.c0;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING CAST(COUNT(*) AS INTEGER) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT (CAST(COUNT(*) AS INTEGER))) UNION ALL SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((CAST(COUNT(*) AS INTEGER)) ISNULL);
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING CAST(COUNT(*) AS INTEGER) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT (CAST(COUNT(*) AS INTEGER))) UNION ALL SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((CAST(COUNT(*) AS INTEGER)) ISNULL);
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c3, rt0.c0 FROM rt0;
SELECT rt0.c3, rt0.c0 FROM rt0 WHERE (((((((rt0.c4)AND(rt0.c4)))OR(rt0.c1))) IS TRUE)) UNION ALL SELECT ALL rt0.c3, rt0.c0 FROM rt0 WHERE ((NOT (((((((rt0.c4)AND(rt0.c4)))OR(rt0.c1))) IS TRUE)))) UNION ALL SELECT ALL rt0.c3, rt0.c0 FROM rt0 WHERE (((((((((rt0.c4)AND(rt0.c4)))OR(rt0.c1))) IS TRUE)) ISNULL));
SELECT rt0.c3, rt0.c0 FROM rt0;
SELECT DISTINCT * FROM rt0 LEFT OUTER JOIN rt1 ON rt0.c4 FULL OUTER JOIN v0 ON CAST((NOT (v0.c2)) AS REAL);
SELECT DISTINCT * FROM rt0 LEFT OUTER JOIN rt1 ON rt0.c4 FULL OUTER JOIN v0 ON CAST((NOT (v0.c2)) AS REAL) WHERE (HEX(((NULL) NOT NULL))) UNION SELECT DISTINCT * FROM rt0 LEFT OUTER JOIN rt1 ON rt0.c4 FULL OUTER JOIN v0 ON CAST((NOT (v0.c2)) AS REAL) WHERE ((NOT (HEX(((NULL) NOT NULL))))) UNION SELECT DISTINCT * FROM rt0 LEFT OUTER JOIN rt1 ON rt0.c4 FULL OUTER JOIN v0 ON CAST((NOT (v0.c2)) AS REAL) WHERE (((HEX(((NULL) NOT NULL))) ISNULL));
SELECT DISTINCT * FROM rt0 LEFT OUTER JOIN rt1 ON rt0.c4 FULL OUTER JOIN v0 ON CAST((NOT (v0.c2)) AS REAL);
SELECT ALL rt1.c0, rt0.c2, rt1.c1, rt0.c0, v0.c1, rt0.c3, rt0.c4, rt1.c4, rt1.c3, v0.c0, rt0.c1 FROM v0, rt1 LEFT OUTER JOIN rt0 ON ((CAST(rt1.c0 AS REAL)) NOT BETWEEN (CASE WHEN v0.c2 THEN v0.c2 END) AND ('922971634')) GROUP BY rt1.c0, rt0.c2, rt1.c1, rt0.c0, v0.c1, rt0.c3, rt0.c4, rt1.c4, rt1.c3, v0.c0, rt0.c1;
SELECT rt1.c0, rt0.c2, rt1.c1, rt0.c0, v0.c1, rt0.c3, rt0.c4, rt1.c4, rt1.c3, v0.c0, rt0.c1 FROM v0, rt1 LEFT OUTER JOIN rt0 ON ((CAST(rt1.c0 AS REAL)) NOT BETWEEN (CASE WHEN v0.c2 THEN v0.c2 END) AND ('922971634')) WHERE (CAST(rt1.c3 AS REAL) COLLATE RTRIM) GROUP BY rt1.c0, rt0.c2, rt1.c1, rt0.c0, v0.c1, rt0.c3, rt0.c4, rt1.c4, rt1.c3, v0.c0, rt0.c1 UNION SELECT ALL rt1.c0, rt0.c2, rt1.c1, rt0.c0, v0.c1, rt0.c3, rt0.c4, rt1.c4, rt1.c3, v0.c0, rt0.c1 FROM v0, rt1 LEFT OUTER JOIN rt0 ON ((CAST(rt1.c0 AS REAL)) NOT BETWEEN (CASE WHEN v0.c2 THEN v0.c2 END) AND ('922971634')) WHERE ((NOT (CAST(rt1.c3 AS REAL) COLLATE RTRIM))) GROUP BY rt1.c0, rt0.c2, rt1.c1, rt0.c0, v0.c1, rt0.c3, rt0.c4, rt1.c4, rt1.c3, v0.c0, rt0.c1 UNION SELECT rt1.c0, rt0.c2, rt1.c1, rt0.c0, v0.c1, rt0.c3, rt0.c4, rt1.c4, rt1.c3, v0.c0, rt0.c1 FROM v0, rt1 LEFT OUTER JOIN rt0 ON ((CAST(rt1.c0 AS REAL)) NOT BETWEEN (CASE WHEN v0.c2 THEN v0.c2 END) AND ('922971634')) WHERE (((CAST(rt1.c3 AS REAL) COLLATE RTRIM) ISNULL)) GROUP BY rt1.c0, rt0.c2, rt1.c1, rt0.c0, v0.c1, rt0.c3, rt0.c4, rt1.c4, rt1.c3, v0.c0, rt0.c1;
SELECT ALL rt1.c0, rt0.c2, rt1.c1, rt0.c0, v0.c1, rt0.c3, rt0.c4, rt1.c4, rt1.c3, v0.c0, rt0.c1 FROM v0, rt1 LEFT OUTER JOIN rt0 ON ((CAST(rt1.c0 AS REAL)) NOT BETWEEN (CASE WHEN v0.c2 THEN v0.c2 END) AND ('922971634')) GROUP BY rt1.c0, rt0.c2, rt1.c1, rt0.c0, v0.c1, rt0.c3, rt0.c4, rt1.c4, rt1.c3, v0.c0, rt0.c1;
SELECT ALL v0.c2 FROM v0 GROUP BY v0.c2;
SELECT ALL v0.c2 FROM v0 GROUP BY v0.c2 HAVING (((MAX(v0.c0))) NOT BETWEEN ((COUNT(*))) AND (((TOTAL(TOTAL(v0.c1)) IN ())))) UNION ALL SELECT v0.c2 FROM v0 GROUP BY v0.c2 HAVING (NOT ((((MAX(v0.c0))) NOT BETWEEN ((COUNT(*))) AND (((TOTAL(TOTAL(v0.c1)) IN ())))))) UNION ALL SELECT v0.c2 FROM v0 GROUP BY v0.c2 HAVING (((((MAX(v0.c0))) NOT BETWEEN ((COUNT(*))) AND (((TOTAL(TOTAL(v0.c1)) IN ()))))) ISNULL);
SELECT ALL v0.c2 FROM v0 GROUP BY v0.c2;
SELECT ALL v0.c2 FROM v0 GROUP BY v0.c2 HAVING (((MAX(v0.c0))) NOT BETWEEN ((COUNT(*))) AND (((TOTAL(TOTAL(v0.c1)) IN ())))) UNION ALL SELECT v0.c2 FROM v0 GROUP BY v0.c2 HAVING (NOT ((((MAX(v0.c0))) NOT BETWEEN ((COUNT(*))) AND (((TOTAL(TOTAL(v0.c1)) IN ())))))) UNION ALL SELECT v0.c2 FROM v0 GROUP BY v0.c2 HAVING (((((MAX(v0.c0))) NOT BETWEEN ((COUNT(*))) AND (((TOTAL(TOTAL(v0.c1)) IN ()))))) ISNULL);
SELECT ALL v0.c2 FROM v0 GROUP BY v0.c2;
SELECT * FROM rt1;
SELECT ALL * FROM rt1 WHERE (CAST(CASE rt1.c2  WHEN rt1.c1 THEN rt1.c1 ELSE rt1.c1 END AS TEXT)) UNION ALL SELECT * FROM rt1 WHERE ((NOT (CAST(CASE rt1.c2  WHEN rt1.c1 THEN rt1.c1 ELSE rt1.c1 END AS TEXT)))) UNION ALL SELECT ALL * FROM rt1 WHERE (((CAST(CASE rt1.c2  WHEN rt1.c1 THEN rt1.c1 ELSE rt1.c1 END AS TEXT)) ISNULL));
SELECT * FROM rt1;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE ('174531458') UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT ('174531458'))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((('174531458') ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT rt0.c1, rt1.c2, rt1.c3, v0.c0, rt1.c4, rt0.c4, rt0.c0, rt1.c1, rt1.c0, v0.c1, v0.c2, rt0.c3, rt0.c2 FROM rt0 INNER JOIN v0 ON ((((((((rt1.c2 COLLATE RTRIM)OR(0.5628819665278747)))AND((+ (v0.c1)))))AND((rt1.c1 IN ()))))OR(((rt0.c3) BETWEEN (v0.c0) AND ('1203707330')))) FULL OUTER JOIN rt1 ON (NOT (rt1.c1)) COLLATE BINARY GROUP BY rt0.c1, rt1.c2, rt1.c3, v0.c0, rt1.c4, rt0.c4, rt0.c0, rt1.c1, rt1.c0, v0.c1, v0.c2, rt0.c3, rt0.c2;
SELECT rt0.c1, rt1.c2, rt1.c3, v0.c0, rt1.c4, rt0.c4, rt0.c0, rt1.c1, rt1.c0, v0.c1, v0.c2, rt0.c3, rt0.c2 FROM rt0 INNER JOIN v0 ON ((((((((rt1.c2 COLLATE RTRIM)OR(0.5628819665278747)))AND((+ (v0.c1)))))AND((rt1.c1 IN ()))))OR(((rt0.c3) BETWEEN (v0.c0) AND ('1203707330')))) FULL OUTER JOIN rt1 ON (NOT (rt1.c1)) COLLATE BINARY WHERE (((((rt0.c1) NOTNULL)) NOT BETWEEN (SQLITE_SOURCE_ID()) AND (CASE rt0.c1  WHEN rt1.c0 THEN rt0.c2 END))) GROUP BY rt0.c1, rt1.c2, rt1.c3, v0.c0, rt1.c4, rt0.c4, rt0.c0, rt1.c1, rt1.c0, v0.c1, v0.c2, rt0.c3, rt0.c2 UNION SELECT ALL rt0.c1, rt1.c2, rt1.c3, v0.c0, rt1.c4, rt0.c4, rt0.c0, rt1.c1, rt1.c0, v0.c1, v0.c2, rt0.c3, rt0.c2 FROM rt0 INNER JOIN v0 ON ((((((((rt1.c2 COLLATE RTRIM)OR(0.5628819665278747)))AND((+ (v0.c1)))))AND((rt1.c1 IN ()))))OR(((rt0.c3) BETWEEN (v0.c0) AND ('1203707330')))) FULL OUTER JOIN rt1 ON (NOT (rt1.c1)) COLLATE BINARY WHERE ((NOT (((((rt0.c1) NOTNULL)) NOT BETWEEN (SQLITE_SOURCE_ID()) AND (CASE rt0.c1  WHEN rt1.c0 THEN rt0.c2 END))))) GROUP BY rt0.c1, rt1.c2, rt1.c3, v0.c0, rt1.c4, rt0.c4, rt0.c0, rt1.c1, rt1.c0, v0.c1, v0.c2, rt0.c3, rt0.c2 UNION SELECT ALL rt0.c1, rt1.c2, rt1.c3, v0.c0, rt1.c4, rt0.c4, rt0.c0, rt1.c1, rt1.c0, v0.c1, v0.c2, rt0.c3, rt0.c2 FROM rt0 INNER JOIN v0 ON ((((((((rt1.c2 COLLATE RTRIM)OR(0.5628819665278747)))AND((+ (v0.c1)))))AND((rt1.c1 IN ()))))OR(((rt0.c3) BETWEEN (v0.c0) AND ('1203707330')))) FULL OUTER JOIN rt1 ON (NOT (rt1.c1)) COLLATE BINARY WHERE (((((((rt0.c1) NOTNULL)) NOT BETWEEN (SQLITE_SOURCE_ID()) AND (CASE rt0.c1  WHEN rt1.c0 THEN rt0.c2 END))) ISNULL)) GROUP BY rt0.c1, rt1.c2, rt1.c3, v0.c0, rt1.c4, rt0.c4, rt0.c0, rt1.c1, rt1.c0, v0.c1, v0.c2, rt0.c3, rt0.c2;
SELECT rt0.c1, rt1.c2, rt1.c3, v0.c0, rt1.c4, rt0.c4, rt0.c0, rt1.c1, rt1.c0, v0.c1, v0.c2, rt0.c3, rt0.c2 FROM rt0 INNER JOIN v0 ON ((((((((rt1.c2 COLLATE RTRIM)OR(0.5628819665278747)))AND((+ (v0.c1)))))AND((rt1.c1 IN ()))))OR(((rt0.c3) BETWEEN (v0.c0) AND ('1203707330')))) FULL OUTER JOIN rt1 ON (NOT (rt1.c1)) COLLATE BINARY GROUP BY rt0.c1, rt1.c2, rt1.c3, v0.c0, rt1.c4, rt0.c4, rt0.c0, rt1.c1, rt1.c0, v0.c1, v0.c2, rt0.c3, rt0.c2;
SELECT rt1.c3 FROM rt1 GROUP BY rt1.c3;
SELECT rt1.c3 FROM rt1 GROUP BY rt1.c3 HAVING AVG(MIN(rt1.c4)) UNION ALL SELECT rt1.c3 FROM rt1 GROUP BY rt1.c3 HAVING (NOT (AVG(MIN(rt1.c4)))) UNION ALL SELECT rt1.c3 FROM rt1 GROUP BY rt1.c3 HAVING ((AVG(MIN(rt1.c4))) ISNULL);
SELECT * FROM rt1;
SELECT ALL * FROM rt1 WHERE ((((rt1.c3 IN ())) NOT BETWEEN (CASE WHEN x'' THEN rt1.c3 END) AND (((rt1.c1) NOT BETWEEN (rt1.c1) AND (rt1.c1))))) UNION ALL SELECT * FROM rt1 WHERE ((NOT ((((rt1.c3 IN ())) NOT BETWEEN (CASE WHEN x'' THEN rt1.c3 END) AND (((rt1.c1) NOT BETWEEN (rt1.c1) AND (rt1.c1))))))) UNION ALL SELECT ALL * FROM rt1 WHERE ((((((rt1.c3 IN ())) NOT BETWEEN (CASE WHEN x'' THEN rt1.c3 END) AND (((rt1.c1) NOT BETWEEN (rt1.c1) AND (rt1.c1))))) ISNULL));
SELECT * FROM rt1;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((TRIM(DISTINCT rt0.c4, rt0.c3))|(((rt0.c0) NOT BETWEEN (rt0.c4) AND (rt0.c1))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((TRIM(DISTINCT rt0.c4, rt0.c3))|(((rt0.c0) NOT BETWEEN (rt0.c4) AND (rt0.c1))))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((TRIM(DISTINCT rt0.c4, rt0.c3))|(((rt0.c0) NOT BETWEEN (rt0.c4) AND (rt0.c1))))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c3, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c3, rt0.c2, rt0.c0;
SELECT rt0.c3, rt0.c2, rt0.c0 FROM rt0 WHERE (rt0.c1) GROUP BY rt0.c3, rt0.c2, rt0.c0 UNION SELECT ALL rt0.c3, rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (rt0.c1))) GROUP BY rt0.c3, rt0.c2, rt0.c0 UNION SELECT rt0.c3, rt0.c2, rt0.c0 FROM rt0 WHERE (((rt0.c1) ISNULL)) GROUP BY rt0.c3, rt0.c2, rt0.c0;
SELECT ALL rt0.c3, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c3, rt0.c2, rt0.c0;
SELECT rt0.c2, rt1.c0, rt0.c4, rt0.c3, rt0.c1, rt0.c0, rt1.c2 FROM rt0 FULL OUTER JOIN rt1 ON LTRIM(((rt0.c2) BETWEEN (rt1.c1) AND (rt1.c1))) GROUP BY rt0.c2, rt1.c0, rt0.c4, rt0.c3, rt0.c1, rt0.c0, rt1.c2;
SELECT rt0.c2, rt1.c0, rt0.c4, rt0.c3, rt0.c1, rt0.c0, rt1.c2 FROM rt0 FULL OUTER JOIN rt1 ON LTRIM(((rt0.c2) BETWEEN (rt1.c1) AND (rt1.c1))) GROUP BY rt0.c2, rt1.c0, rt0.c4, rt0.c3, rt0.c1, rt0.c0, rt1.c2 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c2, rt1.c0, rt0.c4, rt0.c3, rt0.c1, rt0.c0, rt1.c2 FROM rt0 FULL OUTER JOIN rt1 ON LTRIM(((rt0.c2) BETWEEN (rt1.c1) AND (rt1.c1))) GROUP BY rt0.c2, rt1.c0, rt0.c4, rt0.c3, rt0.c1, rt0.c0, rt1.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c2, rt1.c0, rt0.c4, rt0.c3, rt0.c1, rt0.c0, rt1.c2 FROM rt0 FULL OUTER JOIN rt1 ON LTRIM(((rt0.c2) BETWEEN (rt1.c1) AND (rt1.c1))) GROUP BY rt0.c2, rt1.c0, rt0.c4, rt0.c3, rt0.c1, rt0.c0, rt1.c2 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c2, rt1.c0, rt0.c4, rt0.c3, rt0.c1, rt0.c0, rt1.c2 FROM rt0 FULL OUTER JOIN rt1 ON LTRIM(((rt0.c2) BETWEEN (rt1.c1) AND (rt1.c1))) GROUP BY rt0.c2, rt1.c0, rt0.c4, rt0.c3, rt0.c1, rt0.c0, rt1.c2;
SELECT rt0.c2, rt1.c0, rt0.c4, rt0.c3, rt0.c1, rt0.c0, rt1.c2 FROM rt0 FULL OUTER JOIN rt1 ON LTRIM(((rt0.c2) BETWEEN (rt1.c1) AND (rt1.c1))) GROUP BY rt0.c2, rt1.c0, rt0.c4, rt0.c3, rt0.c1, rt0.c0, rt1.c2 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c2, rt1.c0, rt0.c4, rt0.c3, rt0.c1, rt0.c0, rt1.c2 FROM rt0 FULL OUTER JOIN rt1 ON LTRIM(((rt0.c2) BETWEEN (rt1.c1) AND (rt1.c1))) GROUP BY rt0.c2, rt1.c0, rt0.c4, rt0.c3, rt0.c1, rt0.c0, rt1.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c2, rt1.c0, rt0.c4, rt0.c3, rt0.c1, rt0.c0, rt1.c2 FROM rt0 FULL OUTER JOIN rt1 ON LTRIM(((rt0.c2) BETWEEN (rt1.c1) AND (rt1.c1))) GROUP BY rt0.c2, rt1.c0, rt0.c4, rt0.c3, rt0.c1, rt0.c0, rt1.c2 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c2, rt1.c0, rt0.c4, rt0.c3, rt0.c1, rt0.c0, rt1.c2 FROM rt0 FULL OUTER JOIN rt1 ON LTRIM(((rt0.c2) BETWEEN (rt1.c1) AND (rt1.c1))) GROUP BY rt0.c2, rt1.c0, rt0.c4, rt0.c3, rt0.c1, rt0.c0, rt1.c2;
SELECT ALL rt0.c0 FROM rt0;
SELECT ALL rt0.c0 FROM rt0 WHERE (((ROUND(rt0.c1, rt0.c0))<=(((rt0.c3)IS NOT(rt0.c0))))) UNION ALL SELECT rt0.c0 FROM rt0 WHERE ((NOT (((ROUND(rt0.c1, rt0.c0))<=(((rt0.c3)IS NOT(rt0.c0))))))) UNION ALL SELECT ALL rt0.c0 FROM rt0 WHERE (((((ROUND(rt0.c1, rt0.c0))<=(((rt0.c3)IS NOT(rt0.c0))))) ISNULL));
SELECT ALL rt0.c0 FROM rt0;
SELECT DISTINCT * FROM v0, rt1, rt0;
SELECT DISTINCT * FROM v0, rt1, rt0 WHERE (CAST(((((rt1.c1)OR(rt1.c3)))OR(rt1.c0)) AS INTEGER)) UNION SELECT DISTINCT * FROM v0, rt1, rt0 WHERE ((NOT (CAST(((((rt1.c1)OR(rt1.c3)))OR(rt1.c0)) AS INTEGER)))) UNION SELECT DISTINCT * FROM v0, rt1, rt0 WHERE (((CAST(((((rt1.c1)OR(rt1.c3)))OR(rt1.c0)) AS INTEGER)) ISNULL));
SELECT DISTINCT * FROM v0, rt1, rt0;
SELECT rt1.c0, rt0.c4 FROM rt0, v0 LEFT OUTER JOIN rt1 ON (- (((((rt1.c2)OR(v0.c0)))OR(v0.c2)))) GROUP BY rt1.c0, rt0.c4;
SELECT ALL rt1.c0, rt0.c4 FROM rt0, v0 LEFT OUTER JOIN rt1 ON (- (((((rt1.c2)OR(v0.c0)))OR(v0.c2)))) WHERE ((((NOT (v0.c2)))*(CAST(rt1.c2 AS NUMERIC)))) GROUP BY rt1.c0, rt0.c4 UNION SELECT rt1.c0, rt0.c4 FROM rt0, v0 LEFT OUTER JOIN rt1 ON (- (((((rt1.c2)OR(v0.c0)))OR(v0.c2)))) WHERE ((NOT ((((NOT (v0.c2)))*(CAST(rt1.c2 AS NUMERIC)))))) GROUP BY rt1.c0, rt0.c4 UNION SELECT rt1.c0, rt0.c4 FROM rt0, v0 LEFT OUTER JOIN rt1 ON (- (((((rt1.c2)OR(v0.c0)))OR(v0.c2)))) WHERE ((((((NOT (v0.c2)))*(CAST(rt1.c2 AS NUMERIC)))) ISNULL)) GROUP BY rt1.c0, rt0.c4;
SELECT rt1.c0, rt0.c4 FROM rt0, v0 LEFT OUTER JOIN rt1 ON (- (((((rt1.c2)OR(v0.c0)))OR(v0.c2)))) GROUP BY rt1.c0, rt0.c4;
SELECT rt1.c0, rt1.c1, rt1.c4, rt1.c2 FROM rt1 GROUP BY rt1.c0, rt1.c1, rt1.c4, rt1.c2;
SELECT ALL rt1.c0, rt1.c1, rt1.c4, rt1.c2 FROM rt1 GROUP BY rt1.c0, rt1.c1, rt1.c4, rt1.c2 HAVING load_extension(((COUNT(*))>=(COUNT(COUNT(COUNT(TOTAL(MIN(COUNT(*)))))))), TOTAL(rt1.c2)) UNION ALL SELECT ALL rt1.c0, rt1.c1, rt1.c4, rt1.c2 FROM rt1 GROUP BY rt1.c0, rt1.c1, rt1.c4, rt1.c2 HAVING (NOT (load_extension(((COUNT(*))>=(COUNT(COUNT(COUNT(TOTAL(MIN(COUNT(*)))))))), TOTAL(rt1.c2)))) UNION ALL SELECT rt1.c0, rt1.c1, rt1.c4, rt1.c2 FROM rt1 GROUP BY rt1.c0, rt1.c1, rt1.c4, rt1.c2 HAVING ((load_extension(((COUNT(*))>=(COUNT(COUNT(COUNT(TOTAL(MIN(COUNT(*)))))))), TOTAL(rt1.c2))) ISNULL);
SELECT rt0.c1, v0.c1 FROM v0, rt1, rt0;
SELECT rt0.c1, v0.c1 FROM v0, rt1, rt0 WHERE ('0.48810744125393957' COLLATE RTRIM) UNION ALL SELECT ALL rt0.c1, v0.c1 FROM v0, rt1, rt0 WHERE ((NOT ('0.48810744125393957' COLLATE RTRIM))) UNION ALL SELECT rt0.c1, v0.c1 FROM v0, rt1, rt0 WHERE ((('0.48810744125393957' COLLATE RTRIM) ISNULL));
SELECT rt0.c1, v0.c1 FROM v0, rt1, rt0;
SELECT DISTINCT * FROM rt1, v0, rt0;
SELECT DISTINCT * FROM rt1, v0, rt0 WHERE (rt0.c2) UNION SELECT DISTINCT * FROM rt1, v0, rt0 WHERE ((NOT (rt0.c2))) UNION SELECT DISTINCT * FROM rt1, v0, rt0 WHERE (((rt0.c2) ISNULL));
SELECT DISTINCT * FROM rt1, v0, rt0;
SELECT rt1.c1, rt1.c3, rt1.c0 FROM rt1 NOT INDEXED GROUP BY rt1.c1, rt1.c3, rt1.c0;
SELECT ALL rt1.c1, rt1.c3, rt1.c0 FROM rt1 WHERE ((- (CASE rt1.c0  WHEN x'40cb' THEN rt1.c2 WHEN rt1.c0 THEN rt1.c3 WHEN rt1.c3 THEN rt1.c2 ELSE rt1.c0 END))) GROUP BY rt1.c1, rt1.c3, rt1.c0 UNION SELECT ALL rt1.c1, rt1.c3, rt1.c0 FROM rt1 WHERE ((NOT ((- (CASE rt1.c0  WHEN x'40cb' THEN rt1.c2 WHEN rt1.c0 THEN rt1.c3 WHEN rt1.c3 THEN rt1.c2 ELSE rt1.c0 END))))) GROUP BY rt1.c1, rt1.c3, rt1.c0 UNION SELECT ALL rt1.c1, rt1.c3, rt1.c0 FROM rt1 WHERE ((((- (CASE rt1.c0  WHEN x'40cb' THEN rt1.c2 WHEN rt1.c0 THEN rt1.c3 WHEN rt1.c3 THEN rt1.c2 ELSE rt1.c0 END))) ISNULL)) GROUP BY rt1.c1, rt1.c3, rt1.c0;
SELECT rt1.c1, rt1.c3, rt1.c0 FROM rt1 NOT INDEXED GROUP BY rt1.c1, rt1.c3, rt1.c0;
SELECT ALL rt0.c4, v0.c2 FROM v0, rt1, rt0 GROUP BY rt0.c4, v0.c2;
SELECT rt0.c4, v0.c2 FROM v0, rt1, rt0 GROUP BY rt0.c4, v0.c2 HAVING ((GROUP_CONCAT(rt1.c2))!=(((((GROUP_CONCAT(AVG(rt1.c1)))AND(rt1.c1)))OR(SUM(rt1.c0))))) UNION ALL SELECT rt0.c4, v0.c2 FROM v0, rt1, rt0 GROUP BY rt0.c4, v0.c2 HAVING (NOT (((GROUP_CONCAT(rt1.c2))<>(((((GROUP_CONCAT(AVG(rt1.c1)))AND(rt1.c1)))OR(SUM(rt1.c0))))))) UNION ALL SELECT ALL rt0.c4, v0.c2 FROM v0, rt1, rt0 GROUP BY rt0.c4, v0.c2 HAVING ((((GROUP_CONCAT(rt1.c2))!=(((((GROUP_CONCAT(AVG(rt1.c1)))AND(rt1.c1)))OR(SUM(rt1.c0)))))) ISNULL);
SELECT v0.c0, v0.c2, rt1.c1, rt1.c2, rt0.c1 FROM rt1 RIGHT OUTER JOIN rt0 ON ((((v0.c2) NOT BETWEEN (rt1.c3) AND (rt1.c0)))GLOB(CAST(rt1.c4 AS NUMERIC))) FULL OUTER JOIN v0 ON ((((rt0.c1) NOT NULL))==(((rt1.c4) NOT NULL)));
SELECT DISTINCT rt0.c2, rt1.c0, rt0.c4, rt1.c4, rt1.c3, rt1.c2, rt0.c0, v0.c0, v0.c1 FROM rt1, rt0, v0;
SELECT DISTINCT rt0.c2, rt1.c0, rt0.c4, rt1.c4, rt1.c3, rt1.c2, rt0.c0, v0.c0, v0.c1 FROM rt1, rt0, v0 WHERE (((CAST(rt0.c1 AS TEXT)) ISNULL)) UNION SELECT DISTINCT rt0.c2, rt1.c0, rt0.c4, rt1.c4, rt1.c3, rt1.c2, rt0.c0, v0.c0, v0.c1 FROM rt1, rt0, v0 WHERE ((NOT (((CAST(rt0.c1 AS TEXT)) ISNULL)))) UNION SELECT DISTINCT rt0.c2, rt1.c0, rt0.c4, rt1.c4, rt1.c3, rt1.c2, rt0.c0, v0.c0, v0.c1 FROM rt1, rt0, v0 WHERE (((((CAST(rt0.c1 AS TEXT)) ISNULL)) ISNULL));
SELECT DISTINCT rt0.c2, rt1.c0, rt0.c4, rt1.c4, rt1.c3, rt1.c2, rt0.c0, v0.c0, v0.c1 FROM rt1, rt0, v0;
SELECT ALL v0.c2 FROM rt0, v0, rt1 GROUP BY v0.c2;
SELECT ALL v0.c2 FROM rt0, v0, rt1 WHERE (ABS(CASE WHEN v0.c2 THEN rt0.c0 END)) GROUP BY v0.c2 UNION SELECT ALL v0.c2 FROM rt0, v0, rt1 WHERE ((NOT (ABS(CASE WHEN v0.c2 THEN rt0.c0 END)))) GROUP BY v0.c2 UNION SELECT v0.c2 FROM rt0, v0, rt1 WHERE (((ABS(CASE WHEN v0.c2 THEN rt0.c0 END)) ISNULL)) GROUP BY v0.c2;
SELECT ALL v0.c2 FROM rt0, v0, rt1 GROUP BY v0.c2;
SELECT v0.c2, rt0.c4 FROM rt0, v0 GROUP BY v0.c2, rt0.c4;
SELECT ALL v0.c2, rt0.c4 FROM rt0, v0 GROUP BY v0.c2, rt0.c4 HAVING MIN(MIN(COUNT(COUNT(GROUP_CONCAT(AVG(AVG(AVG(COUNT(*))))))))) UNION ALL SELECT ALL v0.c2, rt0.c4 FROM rt0, v0 GROUP BY v0.c2, rt0.c4 HAVING (NOT (MIN(MIN(COUNT(COUNT(GROUP_CONCAT(AVG(AVG(AVG(COUNT(*))))))))))) UNION ALL SELECT v0.c2, rt0.c4 FROM rt0, v0 GROUP BY v0.c2, rt0.c4 HAVING ((MIN(MIN(COUNT(COUNT(GROUP_CONCAT(AVG(AVG(AVG(COUNT(*)))))))))) ISNULL);
SELECT ALL rt1.c4, rt1.c2, rt1.c3, rt1.c1, rt1.c0 FROM rt1;
SELECT rt1.c4, rt1.c2, rt1.c3, rt1.c1, rt1.c0 FROM rt1 WHERE (((rt1.c2 COLLATE RTRIM) NOT BETWEEN (CAST(rt1.c1 AS BLOB)) AND (((rt1.c1) ISNULL)))) UNION ALL SELECT rt1.c4, rt1.c2, rt1.c3, rt1.c1, rt1.c0 FROM rt1 WHERE ((NOT (((rt1.c2 COLLATE RTRIM) NOT BETWEEN (CAST(rt1.c1 AS BLOB)) AND (((rt1.c1) ISNULL)))))) UNION ALL SELECT rt1.c4, rt1.c2, rt1.c3, rt1.c1, rt1.c0 FROM rt1 WHERE (((((rt1.c2 COLLATE RTRIM) NOT BETWEEN (CAST(rt1.c1 AS BLOB)) AND (((rt1.c1) ISNULL)))) ISNULL));
SELECT ALL rt1.c4, rt1.c2, rt1.c3, rt1.c1, rt1.c0 FROM rt1;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (((v0.c2) IS TRUE)) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (((v0.c2) IS TRUE)))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((((v0.c2) IS TRUE)) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT v0.c1, rt1.c4, v0.c0, rt0.c1, rt0.c3 FROM rt1, v0 NOT INDEXED, rt0 GROUP BY v0.c1, rt1.c4, v0.c0, rt0.c1, rt0.c3;
SELECT v0.c1, rt1.c4, v0.c0, rt0.c1, rt0.c3 FROM rt1, v0, rt0 WHERE (((CASE WHEN rt0.c0 THEN rt1.c3 WHEN rt1.c4 THEN v0.c1 WHEN v0.c1 THEN v0.c1 END)>=(((((rt0.c4)AND(rt1.c0)))AND(rt0.c1))))) GROUP BY v0.c1, rt1.c4, v0.c0, rt0.c1, rt0.c3 UNION SELECT ALL v0.c1, rt1.c4, v0.c0, rt0.c1, rt0.c3 FROM rt1, v0, rt0 WHERE ((NOT (((CASE WHEN rt0.c0 THEN rt1.c3 WHEN rt1.c4 THEN v0.c1 WHEN v0.c1 THEN v0.c1 END)>=(((((rt0.c4)AND(rt1.c0)))AND(rt0.c1))))))) GROUP BY v0.c1, rt1.c4, v0.c0, rt0.c1, rt0.c3 UNION SELECT v0.c1, rt1.c4, v0.c0, rt0.c1, rt0.c3 FROM rt1, v0, rt0 WHERE (((((CASE WHEN rt0.c0 THEN rt1.c3 WHEN rt1.c4 THEN v0.c1 WHEN v0.c1 THEN v0.c1 END)>=(((((rt0.c4)AND(rt1.c0)))AND(rt0.c1))))) ISNULL)) GROUP BY v0.c1, rt1.c4, v0.c0, rt0.c1, rt0.c3;
SELECT v0.c1, rt1.c4, v0.c0, rt0.c1, rt0.c3 FROM rt1, v0 NOT INDEXED, rt0 GROUP BY v0.c1, rt1.c4, v0.c0, rt0.c1, rt0.c3;
SELECT rt0.c0, rt0.c4 FROM rt0 GROUP BY rt0.c0, rt0.c4;
SELECT rt0.c0, rt0.c4 FROM rt0 GROUP BY rt0.c0, rt0.c4 HAVING GROUP_CONCAT(MIN(rt0.c0)) UNION ALL SELECT rt0.c0, rt0.c4 FROM rt0 GROUP BY rt0.c0, rt0.c4 HAVING (NOT (GROUP_CONCAT(MIN(rt0.c0)))) UNION ALL SELECT ALL rt0.c0, rt0.c4 FROM rt0 GROUP BY rt0.c0, rt0.c4 HAVING ((GROUP_CONCAT(MIN(rt0.c0))) ISNULL);
SELECT * FROM rt1;
SELECT * FROM rt1 WHERE (4.81722261E8) UNION ALL SELECT * FROM rt1 WHERE ((NOT (4.81722261E8))) UNION ALL SELECT ALL * FROM rt1 WHERE (((4.81722261E8) ISNULL));
SELECT * FROM rt1;
SELECT DISTINCT v0.c0, rt0.c2, rt0.c4, rt0.c0 FROM rt0, v0;
SELECT DISTINCT v0.c0, rt0.c2, rt0.c4, rt0.c0 FROM rt0, v0 WHERE (((CAST('1591213528' AS BLOB))OR((- (rt0.c2))))) UNION SELECT DISTINCT v0.c0, rt0.c2, rt0.c4, rt0.c0 FROM rt0, v0 WHERE ((NOT (((CAST('1591213528' AS BLOB))OR((- (rt0.c2))))))) UNION SELECT DISTINCT v0.c0, rt0.c2, rt0.c4, rt0.c0 FROM rt0, v0 WHERE (((((CAST('1591213528' AS BLOB))OR((- (rt0.c2))))) ISNULL));
SELECT DISTINCT v0.c0, rt0.c2, rt0.c4, rt0.c0 FROM rt0, v0;
SELECT ALL rt1.c1, rt0.c3, rt0.c4, rt0.c0, rt1.c4, rt1.c2, rt0.c2, rt1.c3, rt1.c0, rt0.c1 FROM rt0, rt1 GROUP BY rt1.c1, rt0.c3, rt0.c4, rt0.c0, rt1.c4, rt1.c2, rt0.c2, rt1.c3, rt1.c0, rt0.c1;
SELECT ALL rt1.c1, rt0.c3, rt0.c4, rt0.c0, rt1.c4, rt1.c2, rt0.c2, rt1.c3, rt1.c0, rt0.c1 FROM rt0, rt1 WHERE (((((((((CASE rt1.c0  WHEN rt1.c0 THEN rt0.c0 END)AND(rt0.c0 COLLATE NOCASE)))OR(((((((((rt0.c2)OR(rt1.c3)))AND(rt1.c3)))OR(rt1.c0)))AND(rt0.c2)))))AND(0.5972540316266408)))AND(((rt1.c3) BETWEEN (rt1.c1) AND (rt1.c3))))) GROUP BY rt1.c1, rt0.c3, rt0.c4, rt0.c0, rt1.c4, rt1.c2, rt0.c2, rt1.c3, rt1.c0, rt0.c1 UNION SELECT rt1.c1, rt0.c3, rt0.c4, rt0.c0, rt1.c4, rt1.c2, rt0.c2, rt1.c3, rt1.c0, rt0.c1 FROM rt0, rt1 WHERE ((NOT (((((((((CASE rt1.c0  WHEN rt1.c0 THEN rt0.c0 END)AND(rt0.c0 COLLATE NOCASE)))OR(((((((((rt0.c2)OR(rt1.c3)))AND(rt1.c3)))OR(rt1.c0)))AND(rt0.c2)))))AND(0.5972540316266408)))AND(((rt1.c3) BETWEEN (rt1.c1) AND (rt1.c3))))))) GROUP BY rt1.c1, rt0.c3, rt0.c4, rt0.c0, rt1.c4, rt1.c2, rt0.c2, rt1.c3, rt1.c0, rt0.c1 UNION SELECT ALL rt1.c1, rt0.c3, rt0.c4, rt0.c0, rt1.c4, rt1.c2, rt0.c2, rt1.c3, rt1.c0, rt0.c1 FROM rt0, rt1 WHERE (((((((((((CASE rt1.c0  WHEN rt1.c0 THEN rt0.c0 END)AND(rt0.c0 COLLATE NOCASE)))OR(((((((((rt0.c2)OR(rt1.c3)))AND(rt1.c3)))OR(rt1.c0)))AND(rt0.c2)))))AND(0.5972540316266408)))AND(((rt1.c3) BETWEEN (rt1.c1) AND (rt1.c3))))) ISNULL)) GROUP BY rt1.c1, rt0.c3, rt0.c4, rt0.c0, rt1.c4, rt1.c2, rt0.c2, rt1.c3, rt1.c0, rt0.c1;
SELECT ALL rt1.c1, rt0.c3, rt0.c4, rt0.c0, rt1.c4, rt1.c2, rt0.c2, rt1.c3, rt1.c0, rt0.c1 FROM rt0, rt1 GROUP BY rt1.c1, rt0.c3, rt0.c4, rt0.c0, rt1.c4, rt1.c2, rt0.c2, rt1.c3, rt1.c0, rt0.c1;
SELECT ALL rt1.c4, rt0.c3, rt1.c3, rt1.c2, rt1.c1, rt0.c2, rt0.c1, rt0.c4, rt0.c0, rt1.c0 FROM rt1, rt0 GROUP BY rt1.c4, rt0.c3, rt1.c3, rt1.c2, rt1.c1, rt0.c2, rt0.c1, rt0.c4, rt0.c0, rt1.c0;
SELECT rt1.c4, rt0.c3, rt1.c3, rt1.c2, rt1.c1, rt0.c2, rt0.c1, rt0.c4, rt0.c0, rt1.c0 FROM rt1, rt0 GROUP BY rt1.c4, rt0.c3, rt1.c3, rt1.c2, rt1.c1, rt0.c2, rt0.c1, rt0.c4, rt0.c0, rt1.c0 HAVING 0Xffffffffa8cc5171 UNION ALL SELECT rt1.c4, rt0.c3, rt1.c3, rt1.c2, rt1.c1, rt0.c2, rt0.c1, rt0.c4, rt0.c0, rt1.c0 FROM rt1, rt0 GROUP BY rt1.c4, rt0.c3, rt1.c3, rt1.c2, rt1.c1, rt0.c2, rt0.c1, rt0.c4, rt0.c0, rt1.c0 HAVING (NOT (0Xffffffffa8cc5171)) UNION ALL SELECT rt1.c4, rt0.c3, rt1.c3, rt1.c2, rt1.c1, rt0.c2, rt0.c1, rt0.c4, rt0.c0, rt1.c0 FROM rt1, rt0 GROUP BY rt1.c4, rt0.c3, rt1.c3, rt1.c2, rt1.c1, rt0.c2, rt0.c1, rt0.c4, rt0.c0, rt1.c0 HAVING ((0xffffffffa8cc5171) ISNULL);
SELECT ALL rt1.c4, rt0.c3, rt1.c3, rt1.c2, rt1.c1, rt0.c2, rt0.c1, rt0.c4, rt0.c0, rt1.c0 FROM rt1, rt0 GROUP BY rt1.c4, rt0.c3, rt1.c3, rt1.c2, rt1.c1, rt0.c2, rt0.c1, rt0.c4, rt0.c0, rt1.c0;
SELECT rt1.c4, rt0.c3, rt1.c3, rt1.c2, rt1.c1, rt0.c2, rt0.c1, rt0.c4, rt0.c0, rt1.c0 FROM rt1, rt0 GROUP BY rt1.c4, rt0.c3, rt1.c3, rt1.c2, rt1.c1, rt0.c2, rt0.c1, rt0.c4, rt0.c0, rt1.c0 HAVING 0Xffffffffa8cc5171 UNION ALL SELECT rt1.c4, rt0.c3, rt1.c3, rt1.c2, rt1.c1, rt0.c2, rt0.c1, rt0.c4, rt0.c0, rt1.c0 FROM rt1, rt0 GROUP BY rt1.c4, rt0.c3, rt1.c3, rt1.c2, rt1.c1, rt0.c2, rt0.c1, rt0.c4, rt0.c0, rt1.c0 HAVING (NOT (0Xffffffffa8cc5171)) UNION ALL SELECT rt1.c4, rt0.c3, rt1.c3, rt1.c2, rt1.c1, rt0.c2, rt0.c1, rt0.c4, rt0.c0, rt1.c0 FROM rt1, rt0 GROUP BY rt1.c4, rt0.c3, rt1.c3, rt1.c2, rt1.c1, rt0.c2, rt0.c1, rt0.c4, rt0.c0, rt1.c0 HAVING ((0xffffffffa8cc5171) ISNULL);
SELECT ALL rt1.c4, rt0.c3, rt1.c3, rt1.c2, rt1.c1, rt0.c2, rt0.c1, rt0.c4, rt0.c0, rt1.c0 FROM rt1, rt0 GROUP BY rt1.c4, rt0.c3, rt1.c3, rt1.c2, rt1.c1, rt0.c2, rt0.c1, rt0.c4, rt0.c0, rt1.c0;
SELECT ALL v0.c2, rt1.c1, v0.c1 FROM rt1 NATURAL JOIN v0;
SELECT ALL v0.c2, rt1.c1, v0.c1 FROM rt1 NATURAL JOIN v0 WHERE (SQLITE_COMPILEOPTION_GET(((((((((rt1.c3)OR(v0.c0)))OR(rt1.c1)))OR(v0.c0)))AND(rt1.c0)))) UNION ALL SELECT v0.c2, rt1.c1, v0.c1 FROM rt1 NATURAL JOIN v0 WHERE ((NOT (SQLITE_COMPILEOPTION_GET(((((((((rt1.c3)OR(v0.c0)))OR(rt1.c1)))OR(v0.c0)))AND(rt1.c0)))))) UNION ALL SELECT v0.c2, rt1.c1, v0.c1 FROM rt1 NATURAL JOIN v0 WHERE (((SQLITE_COMPILEOPTION_GET(((((((((rt1.c3)OR(v0.c0)))OR(rt1.c1)))OR(v0.c0)))AND(rt1.c0)))) ISNULL));
SELECT ALL v0.c2, rt1.c1, v0.c1 FROM rt1 NATURAL JOIN v0;
SELECT DISTINCT rt1.c1, rt1.c2 FROM rt1;
SELECT DISTINCT rt1.c1, rt1.c2 FROM rt1 WHERE (((CAST(rt1.c3 AS INTEGER))|((((rt1.c3, rt1.c0, rt1.c3)) NOT BETWEEN ((rt1.c3, rt1.c0, rt1.c2)) AND ((rt1.c1, rt1.c4, rt1.c0)))))) UNION SELECT DISTINCT rt1.c1, rt1.c2 FROM rt1 WHERE ((NOT (((CAST(rt1.c3 AS INTEGER))|((((rt1.c3, rt1.c0, rt1.c3)) NOT BETWEEN ((rt1.c3, rt1.c0, rt1.c2)) AND ((rt1.c1, rt1.c4, rt1.c0)))))))) UNION SELECT DISTINCT rt1.c1, rt1.c2 FROM rt1 WHERE (((((CAST(rt1.c3 AS INTEGER))|((((rt1.c3, rt1.c0, rt1.c3)) NOT BETWEEN ((rt1.c3, rt1.c0, rt1.c2)) AND ((rt1.c1, rt1.c4, rt1.c0)))))) ISNULL));
SELECT DISTINCT rt1.c1, rt1.c2 FROM rt1;
SELECT rt0.c1, v0.c0, rt0.c4, rt0.c3, rt0.c0, rt1.c4, rt1.c2, rt1.c0, v0.c2, rt1.c3, rt1.c1, rt0.c2, v0.c1 FROM v0, rt1 NOT INDEXED, rt0 GROUP BY rt0.c1, v0.c0, rt0.c4, rt0.c3, rt0.c0, rt1.c4, rt1.c2, rt1.c0, v0.c2, rt1.c3, rt1.c1, rt0.c2, v0.c1;
SELECT ALL rt0.c1, v0.c0, rt0.c4, rt0.c3, rt0.c0, rt1.c4, rt1.c2, rt1.c0, v0.c2, rt1.c3, rt1.c1, rt0.c2, v0.c1 FROM v0, rt1, rt0 WHERE ((((~ (rt0.c4))) ISNULL)) GROUP BY rt0.c1, v0.c0, rt0.c4, rt0.c3, rt0.c0, rt1.c4, rt1.c2, rt1.c0, v0.c2, rt1.c3, rt1.c1, rt0.c2, v0.c1 UNION SELECT rt0.c1, v0.c0, rt0.c4, rt0.c3, rt0.c0, rt1.c4, rt1.c2, rt1.c0, v0.c2, rt1.c3, rt1.c1, rt0.c2, v0.c1 FROM v0, rt1, rt0 WHERE ((NOT ((((~ (rt0.c4))) ISNULL)))) GROUP BY rt0.c1, v0.c0, rt0.c4, rt0.c3, rt0.c0, rt1.c4, rt1.c2, rt1.c0, v0.c2, rt1.c3, rt1.c1, rt0.c2, v0.c1 UNION SELECT ALL rt0.c1, v0.c0, rt0.c4, rt0.c3, rt0.c0, rt1.c4, rt1.c2, rt1.c0, v0.c2, rt1.c3, rt1.c1, rt0.c2, v0.c1 FROM v0, rt1, rt0 WHERE ((((((~ (rt0.c4))) ISNULL)) ISNULL)) GROUP BY rt0.c1, v0.c0, rt0.c4, rt0.c3, rt0.c0, rt1.c4, rt1.c2, rt1.c0, v0.c2, rt1.c3, rt1.c1, rt0.c2, v0.c1;
SELECT rt0.c1, v0.c0, rt0.c4, rt0.c3, rt0.c0, rt1.c4, rt1.c2, rt1.c0, v0.c2, rt1.c3, rt1.c1, rt0.c2, v0.c1 FROM v0, rt1 NOT INDEXED, rt0 GROUP BY rt0.c1, v0.c0, rt0.c4, rt0.c3, rt0.c0, rt1.c4, rt1.c2, rt1.c0, v0.c2, rt1.c3, rt1.c1, rt0.c2, v0.c1;
SELECT rt0.c4, rt1.c1, rt0.c0, rt0.c2, v0.c0 FROM rt0, v0, rt1 GROUP BY rt0.c4, rt1.c1, rt0.c0, rt0.c2, v0.c0;
SELECT ALL rt0.c4, rt1.c1, rt0.c0, rt0.c2, v0.c0 FROM rt0, v0, rt1 GROUP BY rt0.c4, rt1.c1, rt0.c0, rt0.c2, v0.c0 HAVING CASE WHEN rt0.c2 THEN rt0.c3 END UNION ALL SELECT ALL rt0.c4, rt1.c1, rt0.c0, rt0.c2, v0.c0 FROM rt0, v0, rt1 GROUP BY rt0.c4, rt1.c1, rt0.c0, rt0.c2, v0.c0 HAVING (NOT (CASE WHEN rt0.c2 THEN rt0.c3 END)) UNION ALL SELECT ALL rt0.c4, rt1.c1, rt0.c0, rt0.c2, v0.c0 FROM rt0, v0, rt1 GROUP BY rt0.c4, rt1.c1, rt0.c0, rt0.c2, v0.c0 HAVING ((CASE WHEN rt0.c2 THEN rt0.c3 END) ISNULL);
SELECT rt0.c4, rt1.c1, rt0.c0, rt0.c2, v0.c0 FROM rt0, v0, rt1 GROUP BY rt0.c4, rt1.c1, rt0.c0, rt0.c2, v0.c0;
SELECT ALL rt0.c4, rt1.c1, rt0.c0, rt0.c2, v0.c0 FROM rt0, v0, rt1 GROUP BY rt0.c4, rt1.c1, rt0.c0, rt0.c2, v0.c0 HAVING CASE WHEN rt0.c2 THEN rt0.c3 END UNION ALL SELECT ALL rt0.c4, rt1.c1, rt0.c0, rt0.c2, v0.c0 FROM rt0, v0, rt1 GROUP BY rt0.c4, rt1.c1, rt0.c0, rt0.c2, v0.c0 HAVING (NOT (CASE WHEN rt0.c2 THEN rt0.c3 END)) UNION ALL SELECT ALL rt0.c4, rt1.c1, rt0.c0, rt0.c2, v0.c0 FROM rt0, v0, rt1 GROUP BY rt0.c4, rt1.c1, rt0.c0, rt0.c2, v0.c0 HAVING ((CASE WHEN rt0.c2 THEN rt0.c3 END) ISNULL);
SELECT rt0.c4, rt1.c1, rt0.c0, rt0.c2, v0.c0 FROM rt0, v0, rt1 GROUP BY rt0.c4, rt1.c1, rt0.c0, rt0.c2, v0.c0;
SELECT rt0.c1, v0.c0, rt0.c4, rt1.c4, v0.c1, rt0.c0, v0.c2, rt0.c2, rt1.c1, rt1.c0, rt0.c3, rt1.c3, rt1.c2 FROM rt0, rt1, v0;
SELECT rt0.c1, v0.c0, rt0.c4, rt1.c4, v0.c1, rt0.c0, v0.c2, rt0.c2, rt1.c1, rt1.c0, rt0.c3, rt1.c3, rt1.c2 FROM rt0, rt1, v0 WHERE (((((rt0.c3 IN (rt1.c3))))<>((((rt1.c0)-(rt0.c3)))))) UNION ALL SELECT rt0.c1, v0.c0, rt0.c4, rt1.c4, v0.c1, rt0.c0, v0.c2, rt0.c2, rt1.c1, rt1.c0, rt0.c3, rt1.c3, rt1.c2 FROM rt0, rt1, v0 WHERE ((NOT (((((rt0.c3 IN (rt1.c3))))<>((((rt1.c0)-(rt0.c3)))))))) UNION ALL SELECT rt0.c1, v0.c0, rt0.c4, rt1.c4, v0.c1, rt0.c0, v0.c2, rt0.c2, rt1.c1, rt1.c0, rt0.c3, rt1.c3, rt1.c2 FROM rt0, rt1, v0 WHERE (((((((rt0.c3 IN (rt1.c3))))<>((((rt1.c0)-(rt0.c3)))))) ISNULL));
SELECT rt0.c1, v0.c0, rt0.c4, rt1.c4, v0.c1, rt0.c0, v0.c2, rt0.c2, rt1.c1, rt1.c0, rt0.c3, rt1.c3, rt1.c2 FROM rt0, rt1, v0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (((CASE WHEN '664999175' THEN v0.c2 WHEN v0.c2 THEN v0.c2 WHEN v0.c0 THEN v0.c2 END) NOT BETWEEN (x'') AND (LTRIM(v0.c2)))) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (((CASE WHEN '664999175' THEN v0.c2 WHEN v0.c2 THEN v0.c2 WHEN v0.c0 THEN v0.c2 END) NOT BETWEEN (x'') AND (LTRIM(v0.c2)))))) UNION SELECT DISTINCT * FROM v0 WHERE (((((CASE WHEN '664999175' THEN v0.c2 WHEN v0.c2 THEN v0.c2 WHEN v0.c0 THEN v0.c2 END) NOT BETWEEN (x'') AND (LTRIM(v0.c2)))) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT rt1.c0, rt1.c4, rt1.c2, rt0.c2, rt0.c1, v0.c1, rt1.c3, rt0.c3, rt0.c0, rt0.c4, v0.c0 FROM rt0, v0, rt1 GROUP BY rt1.c0, rt1.c4, rt1.c2, rt0.c2, rt0.c1, v0.c1, rt1.c3, rt0.c3, rt0.c0, rt0.c4, v0.c0;
SELECT rt1.c0, rt1.c4, rt1.c2, rt0.c2, rt0.c1, v0.c1, rt1.c3, rt0.c3, rt0.c0, rt0.c4, v0.c0 FROM rt0, v0, rt1 WHERE (((HEX(rt0.c1))>(CAST(rt1.c3 AS BLOB)))) GROUP BY rt1.c0, rt1.c4, rt1.c2, rt0.c2, rt0.c1, v0.c1, rt1.c3, rt0.c3, rt0.c0, rt0.c4, v0.c0 UNION SELECT ALL rt1.c0, rt1.c4, rt1.c2, rt0.c2, rt0.c1, v0.c1, rt1.c3, rt0.c3, rt0.c0, rt0.c4, v0.c0 FROM rt0, v0, rt1 WHERE ((NOT (((HEX(rt0.c1))>(CAST(rt1.c3 AS BLOB)))))) GROUP BY rt1.c0, rt1.c4, rt1.c2, rt0.c2, rt0.c1, v0.c1, rt1.c3, rt0.c3, rt0.c0, rt0.c4, v0.c0 UNION SELECT ALL rt1.c0, rt1.c4, rt1.c2, rt0.c2, rt0.c1, v0.c1, rt1.c3, rt0.c3, rt0.c0, rt0.c4, v0.c0 FROM rt0, v0, rt1 WHERE (((((HEX(rt0.c1))>(CAST(rt1.c3 AS BLOB)))) ISNULL)) GROUP BY rt1.c0, rt1.c4, rt1.c2, rt0.c2, rt0.c1, v0.c1, rt1.c3, rt0.c3, rt0.c0, rt0.c4, v0.c0;
SELECT rt1.c0, rt1.c4, rt1.c2, rt0.c2, rt0.c1, v0.c1, rt1.c3, rt0.c3, rt0.c0, rt0.c4, v0.c0 FROM rt0, v0, rt1 GROUP BY rt1.c0, rt1.c4, rt1.c2, rt0.c2, rt0.c1, v0.c1, rt1.c3, rt0.c3, rt0.c0, rt0.c4, v0.c0;
SELECT rt0.c3, v0.c0, rt1.c0, rt0.c2, v0.c1, rt0.c4, rt1.c2, v0.c2, rt1.c1 FROM rt0, rt1, v0 GROUP BY rt0.c3, v0.c0, rt1.c0, rt0.c2, v0.c1, rt0.c4, rt1.c2, v0.c2, rt1.c1;
SELECT ALL rt0.c3, v0.c0, rt1.c0, rt0.c2, v0.c1, rt0.c4, rt1.c2, v0.c2, rt1.c1 FROM rt0, rt1 NOT INDEXED, v0 GROUP BY rt0.c3, v0.c0, rt1.c0, rt0.c2, v0.c1, rt0.c4, rt1.c2, v0.c2, rt1.c1 HAVING TOTAL(SUM(rt1.c3)) UNION ALL SELECT rt0.c3, v0.c0, rt1.c0, rt0.c2, v0.c1, rt0.c4, rt1.c2, v0.c2, rt1.c1 FROM rt0, rt1, v0 GROUP BY rt0.c3, v0.c0, rt1.c0, rt0.c2, v0.c1, rt0.c4, rt1.c2, v0.c2, rt1.c1 HAVING (NOT (TOTAL(SUM(rt1.c3)))) UNION ALL SELECT rt0.c3, v0.c0, rt1.c0, rt0.c2, v0.c1, rt0.c4, rt1.c2, v0.c2, rt1.c1 FROM rt0, rt1, v0 GROUP BY rt0.c3, v0.c0, rt1.c0, rt0.c2, v0.c1, rt0.c4, rt1.c2, v0.c2, rt1.c1 HAVING ((TOTAL(SUM(rt1.c3))) ISNULL);
SELECT rt0.c0, rt0.c1, rt0.c3 FROM rt0;
SELECT ALL rt0.c0, rt0.c1, rt0.c3 FROM rt0 WHERE ((rt0.c3 IN ())) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c3 FROM rt0 WHERE ((NOT ((rt0.c3 IN ())))) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c3 FROM rt0 WHERE ((((rt0.c3 IN ())) ISNULL));
SELECT rt0.c0, rt0.c1, rt0.c3 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c4, v0.c2, rt0.c3, rt0.c0 FROM rt0, v0;
SELECT DISTINCT rt0.c1, rt0.c4, v0.c2, rt0.c3, rt0.c0 FROM rt0, v0 WHERE (((((v0.c1)<=(v0.c1)))=(CAST(v0.c2 AS TEXT)))) UNION SELECT DISTINCT rt0.c1, rt0.c4, v0.c2, rt0.c3, rt0.c0 FROM rt0, v0 WHERE ((NOT (((((v0.c1)<=(v0.c1)))==(CAST(v0.c2 AS TEXT)))))) UNION SELECT DISTINCT rt0.c1, rt0.c4, v0.c2, rt0.c3, rt0.c0 FROM rt0, v0 WHERE (((((((v0.c1)<=(v0.c1)))==(CAST(v0.c2 AS TEXT)))) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c4, v0.c2, rt0.c3, rt0.c0 FROM rt0, v0;
SELECT v0.c0, v0.c2 FROM v0 GROUP BY v0.c0, v0.c2;
SELECT v0.c0, v0.c2 FROM v0 WHERE (((((v0.c1 COLLATE RTRIM)OR((v0.c0 IN ()))))AND(CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c1 END))) GROUP BY v0.c0, v0.c2 UNION SELECT ALL v0.c0, v0.c2 FROM v0 WHERE ((NOT (((((v0.c1 COLLATE RTRIM)OR((v0.c0 IN ()))))AND(CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c1 END))))) GROUP BY v0.c0, v0.c2 UNION SELECT ALL v0.c0, v0.c2 FROM v0 WHERE (((((((v0.c1 COLLATE RTRIM)OR((v0.c0 IN ()))))AND(CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c1 END))) ISNULL)) GROUP BY v0.c0, v0.c2;
SELECT v0.c0, v0.c2 FROM v0 GROUP BY v0.c0, v0.c2;
SELECT rt0.c0, rt0.c1, rt0.c3, v0.c1, rt1.c4, rt0.c2, rt1.c0, rt1.c2, rt0.c4, rt1.c1, rt1.c3, v0.c2, v0.c0 FROM v0, rt1, rt0 GROUP BY rt0.c0, rt0.c1, rt0.c3, v0.c1, rt1.c4, rt0.c2, rt1.c0, rt1.c2, rt0.c4, rt1.c1, rt1.c3, v0.c2, v0.c0;
SELECT rt0.c0, rt0.c1, rt0.c3, v0.c1, rt1.c4, rt0.c2, rt1.c0, rt1.c2, rt0.c4, rt1.c1, rt1.c3, v0.c2, v0.c0 FROM v0, rt1, rt0 GROUP BY rt0.c0, rt0.c1, rt0.c3, v0.c1, rt1.c4, rt0.c2, rt1.c0, rt1.c2, rt0.c4, rt1.c1, rt1.c3, v0.c2, v0.c0 HAVING QUOTE(CAST(v0.c0 AS INTEGER)) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c3, v0.c1, rt1.c4, rt0.c2, rt1.c0, rt1.c2, rt0.c4, rt1.c1, rt1.c3, v0.c2, v0.c0 FROM v0, rt1, rt0 GROUP BY rt0.c0, rt0.c1, rt0.c3, v0.c1, rt1.c4, rt0.c2, rt1.c0, rt1.c2, rt0.c4, rt1.c1, rt1.c3, v0.c2, v0.c0 HAVING (NOT (QUOTE(CAST(v0.c0 AS INTEGER)))) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c3, v0.c1, rt1.c4, rt0.c2, rt1.c0, rt1.c2, rt0.c4, rt1.c1, rt1.c3, v0.c2, v0.c0 FROM v0, rt1, rt0 GROUP BY rt0.c0, rt0.c1, rt0.c3, v0.c1, rt1.c4, rt0.c2, rt1.c0, rt1.c2, rt0.c4, rt1.c1, rt1.c3, v0.c2, v0.c0 HAVING ((QUOTE(CAST(v0.c0 AS INTEGER))) ISNULL);
SELECT rt0.c0, rt0.c1, rt0.c3, v0.c1, rt1.c4, rt0.c2, rt1.c0, rt1.c2, rt0.c4, rt1.c1, rt1.c3, v0.c2, v0.c0 FROM v0, rt1, rt0 GROUP BY rt0.c0, rt0.c1, rt0.c3, v0.c1, rt1.c4, rt0.c2, rt1.c0, rt1.c2, rt0.c4, rt1.c1, rt1.c3, v0.c2, v0.c0;
SELECT rt0.c0, rt0.c1, rt0.c3, v0.c1, rt1.c4, rt0.c2, rt1.c0, rt1.c2, rt0.c4, rt1.c1, rt1.c3, v0.c2, v0.c0 FROM v0, rt1, rt0 GROUP BY rt0.c0, rt0.c1, rt0.c3, v0.c1, rt1.c4, rt0.c2, rt1.c0, rt1.c2, rt0.c4, rt1.c1, rt1.c3, v0.c2, v0.c0 HAVING QUOTE(CAST(v0.c0 AS INTEGER)) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c3, v0.c1, rt1.c4, rt0.c2, rt1.c0, rt1.c2, rt0.c4, rt1.c1, rt1.c3, v0.c2, v0.c0 FROM v0, rt1, rt0 GROUP BY rt0.c0, rt0.c1, rt0.c3, v0.c1, rt1.c4, rt0.c2, rt1.c0, rt1.c2, rt0.c4, rt1.c1, rt1.c3, v0.c2, v0.c0 HAVING (NOT (QUOTE(CAST(v0.c0 AS INTEGER)))) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c3, v0.c1, rt1.c4, rt0.c2, rt1.c0, rt1.c2, rt0.c4, rt1.c1, rt1.c3, v0.c2, v0.c0 FROM v0, rt1, rt0 GROUP BY rt0.c0, rt0.c1, rt0.c3, v0.c1, rt1.c4, rt0.c2, rt1.c0, rt1.c2, rt0.c4, rt1.c1, rt1.c3, v0.c2, v0.c0 HAVING ((QUOTE(CAST(v0.c0 AS INTEGER))) ISNULL);
SELECT rt0.c0, rt0.c1, rt0.c3, v0.c1, rt1.c4, rt0.c2, rt1.c0, rt1.c2, rt0.c4, rt1.c1, rt1.c3, v0.c2, v0.c0 FROM v0, rt1, rt0 GROUP BY rt0.c0, rt0.c1, rt0.c3, v0.c1, rt1.c4, rt0.c2, rt1.c0, rt1.c2, rt0.c4, rt1.c1, rt1.c3, v0.c2, v0.c0;
SELECT ALL SUM(rt0.c1) FROM v0, rt0 ORDER BY ((TOTAL_CHANGES()) ISNULL) DESC  NULLS LAST;
SELECT ALL * FROM rt0 LEFT OUTER JOIN v0 ON (((((('1778263054')AND(rt0.c1)))OR(rt0.c3)))GLOB(CHAR(v0.c0)));
SELECT ALL * FROM rt0 LEFT OUTER JOIN v0 ON (((((('1778263054')AND(rt0.c1)))OR(rt0.c3)))GLOB(CHAR(v0.c0))) WHERE (CASE ((v0.c1)|(v0.c1))  WHEN (((rt0.c3, v0.c2, rt0.c2))>=((rt0.c4, rt0.c0, v0.c0))) THEN CASE v0.c2  WHEN rt0.c4 THEN x'' END WHEN IFNULL(DISTINCT v0.c1, v0.c1) THEN ((((v0.c0)AND(v0.c0)))AND(v0.c1)) WHEN ((rt0.c2) NOT BETWEEN (v0.c0) AND (rt0.c2)) THEN CASE WHEN rt0.c1 THEN rt0.c3 END END) UNION ALL SELECT * FROM rt0 LEFT OUTER JOIN v0 ON (((((('1778263054')AND(rt0.c1)))OR(rt0.c3)))GLOB(CHAR(v0.c0))) WHERE ((NOT (CASE ((v0.c1)|(v0.c1))  WHEN (((rt0.c3, v0.c2, rt0.c2))>=((rt0.c4, rt0.c0, v0.c0))) THEN CASE v0.c2  WHEN rt0.c4 THEN x'' END WHEN IFNULL(DISTINCT v0.c1, v0.c1) THEN ((((v0.c0)AND(v0.c0)))AND(v0.c1)) WHEN ((rt0.c2) NOT BETWEEN (v0.c0) AND (rt0.c2)) THEN CASE WHEN rt0.c1 THEN rt0.c3 END END))) UNION ALL SELECT ALL * FROM rt0 LEFT OUTER JOIN v0 ON (((((('1778263054')AND(rt0.c1)))OR(rt0.c3)))GLOB(CHAR(v0.c0))) WHERE (((CASE ((v0.c1)|(v0.c1))  WHEN (((rt0.c3, v0.c2, rt0.c2))>=((rt0.c4, rt0.c0, v0.c0))) THEN CASE v0.c2  WHEN rt0.c4 THEN x'' END WHEN IFNULL(DISTINCT v0.c1, v0.c1) THEN ((((v0.c0)AND(v0.c0)))AND(v0.c1)) WHEN ((rt0.c2) NOT BETWEEN (v0.c0) AND (rt0.c2)) THEN CASE WHEN rt0.c1 THEN rt0.c3 END END) ISNULL));
SELECT ALL * FROM rt0 LEFT OUTER JOIN v0 ON (((((('1778263054')AND(rt0.c1)))OR(rt0.c3)))GLOB(CHAR(v0.c0)));
SELECT DISTINCT rt0.c2, rt0.c3, v0.c1, v0.c2, v0.c0, rt0.c4, rt1.c2, rt0.c0 FROM v0, rt1, rt0;
SELECT DISTINCT rt0.c2, rt0.c3, v0.c1, v0.c2, v0.c0, rt0.c4, rt1.c2, rt0.c0 FROM v0, rt1, rt0 WHERE (CAST(((rt0.c2)AND(v0.c2)) AS TEXT)) UNION SELECT DISTINCT rt0.c2, rt0.c3, v0.c1, v0.c2, v0.c0, rt0.c4, rt1.c2, rt0.c0 FROM v0, rt1, rt0 WHERE ((NOT (CAST(((rt0.c2)AND(v0.c2)) AS TEXT)))) UNION SELECT DISTINCT rt0.c2, rt0.c3, v0.c1, v0.c2, v0.c0, rt0.c4, rt1.c2, rt0.c0 FROM v0, rt1, rt0 WHERE (((CAST(((rt0.c2)AND(v0.c2)) AS TEXT)) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c3, v0.c1, v0.c2, v0.c0, rt0.c4, rt1.c2, rt0.c0 FROM v0, rt1, rt0;
