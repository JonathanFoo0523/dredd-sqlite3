-- Time: 2024/06/09 04:23:50
-- Database: database16
-- Database version: 3.40.0
-- seed value: 2467078416
PRAGMA cache_size = 50000; -- 11ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA encoding = 'UTF-8'; -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree_i32(c0, c1, c2); -- 8ms;
CREATE TEMP TABLE IF NOT EXISTS t1 (c0 TEXT ); -- 1ms;
UPDATE OR FAIL rt0 SET c1='g)Z\r#J ]'; -- 1ms;
INSERT OR IGNORE INTO t1 VALUES ('-1855375425'); -- 0ms;
UPDATE OR REPLACE t1 SET c0='v,' WHERE t1.c0 COLLATE BINARY COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO t1(c0) VALUES (NULL); -- 1ms;
CREATE UNIQUE INDEX i53 ON t1(((CAST(c0 AS TEXT)) NOT BETWEEN (((c0)IS(c0))) AND (CASE WHEN c0 THEN c0 WHEN c0 THEN c0 WHEN c0 THEN c0 END)) DESC); -- 0ms;
INSERT OR ROLLBACK INTO rt0(c2, c1, c0) VALUES ('-1855375425', x'', x''), (NULL, x'', '-1855375425'), (NULL, -1.855375425E9, x'7c7a'); -- 1ms;
INSERT OR IGNORE INTO rt0(c1) VALUES (NULL); -- 0ms;
PRAGMA reverse_unordered_selects = true; -- 1ms;
END; -- 0ms;
INSERT OR IGNORE INTO t1(c0) VALUES (0.2477472139397927); -- 0ms;
REINDEX  rt0; -- 0ms;
PRAGMA main.automatic_index; -- 0ms;
INSERT OR ABORT INTO t1 VALUES ('%s'); -- 0ms;
INSERT OR IGNORE INTO rt0(c1, c0) VALUES ('-1855375425', NULL); -- 8ms;
COMMIT; -- 0ms;
COMMIT; -- 0ms;
REINDEX RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((((NULL)OR('')))AND('1328737329'))  WHEN NULL COLLATE BINARY THEN ((NULL)<(-1071466104)) ELSE (~ (x'')) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((0.19123684690078924) BETWEEN (x'') AND (NULL))  WHEN ((('', '-1844795600', 'bDꜰt5M]', NULL, x''))<=((NULL, NULL, 0.1815609909029342, NULL, 0.1815609909029342))) THEN 0.5357903359082453 ELSE 0.1815609909029342 COLLATE NOCASE END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1855375425 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=214316731'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt0', ' noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't1', '2'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-654322366 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(NULL AS BLOB))LIKE('t(')); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ ((0xffffffffdec9bd7e IN ()))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't1', ' sz=476279140 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((NULL) ISNULL))OR(ROUND(NULL, NULL))))AND((((('214316731')OR(x'')))AND(x'')))))AND(((((((((0.8512542775658992)AND('Ae\n煤H1	(?')))OR(1355436089)))AND('1057073449')))AND(x'')))))AND(DATETIME(0.2477472139397927, 0.0707949350344782, x'ca2c', x'', 0.5357903359082453))); -- 2ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '308671224 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL)) BETWEEN ((((x'') ISNULL))) AND (((-1844795600 IN (''))))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '0 sz=1835517785 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 sz=-820632710 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'')IS NOT('-688760022')) COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't1', ' sz=-954489691 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((NULL)AND(NULL)))OR(0.8805737523506434)))OR(x'')))OR(x'')))<<(0xffffffffbe87665b COLLATE BINARY)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=55624688'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't1', '0 -1489404225 sz=-557204098 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1057073449 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((-901787097)OR('AE\n煤H1	(?')))OR(x'')))AND(1057073449)))AND(0.2477472139397927)) IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't1', '-1377222550 sz=-1552090716'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '-1098422693 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.4340713769649627; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((-1071466104 COLLATE NOCASE)<=(CASE ''  WHEN x'' THEN 809781711 ELSE NULL END)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '-1782204239 sz=-1844795600'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN COALESCE(x'', 0Xffffffff9dec0bdd) THEN (('')=(0.9973520259136792)) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '55624688 sz=2092317771 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- ('379115476')) COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=1218348102 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CASE x''  WHEN '308671224' THEN x'' END IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((json_patch('-820632710', x'2224'))IS NOT(((('1601482401'))<=(('e_'))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '-603877929 sz=-820632710 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 sz=817243850 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-2095487415 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('<')%('><a9')) COLLATE NOCASE; -- 2ms;
DELETE FROM sqlite_stat1 WHERE CASE ((NULL)-(0.4508820230830394))  WHEN ('痺z9dd_F' IN ()) THEN (+ (1.601482401E9)) WHEN (~ (NULL)) THEN ((((0.5909015315985177)OR(0.9762050745292075)))OR(x'ed07')) WHEN (((NULL)) NOT BETWEEN ((x'')) AND (('1218348102'))) THEN (((x'f54404ac1a26')) NOT BETWEEN ((NULL)) AND ((0.9100482583656073))) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1173968494 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '-1994606844 sz=-1103022602 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=55624688'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '-1173968494 sz=-330303693 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '0 sz=2126870496'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't1', '481607375 sz=544745521 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((((('1328737329')AND(0.06454699370364203)))AND(NULL)) IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '0 -1354500356 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-603877929'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't1', ' sz=55624688 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '1861372402 -487166974 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '1014033853 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '379115476 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT ((- ('雸懾')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(x'' AS TEXT)) NOT NULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- ((('0.0707949350344782') NOT BETWEEN ('379115476') AND (x'9530')))); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (0.571672717483536 IN ()) COLLATE BINARY COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt0', ' sz=-1192009965 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '-1994606844 -1904170385 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=-1992712350 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=-442054317 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE SQLITE_SOURCE_ID(); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't1', ' sz=-1149644795 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE UPPER(DISTINCT (('413422998') ISNULL)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((json_extract('544745521', x'0e41')) BETWEEN (x'' COLLATE NOCASE) AND (((0.5357903359082453) BETWEEN (x'') AND (0xffffffffbe4f5673)))); -- 1ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '-1716104878'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=-1377222550 unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=-1354500356'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=-1716104878 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.18757991239643623) NOT NULL) COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) NOT BETWEEN (x'') AND ('-1149644795')))+((('t4oUHC')>>(x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=-442054317'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '2035598863 -1403744026 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't1', '0 0'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't1', ' sz=-49381446'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'' IN (x''))) IS FALSE); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt0', ' sz=-1552688619 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CASE 0.2166606233944426  WHEN '0.4508820230830394' THEN 0.02020494058102329 WHEN 0.02020494058102329 THEN '' WHEN 0.5956868432276384 THEN -1101900841 END IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '1861372402 482782646 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- ((('-1101900841') BETWEEN (x'') AND (x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=2085780278'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (('1728345298') ISNULL)  WHEN (('-314473543')>=(0.01005447893686695)) THEN (('')>(-6.54322366E8)) ELSE (+ (0.5418104755718764)) END; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE '([]'; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (((x'')/('v,')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=1778789375 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '373522865 sz=-1803026633 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULLIF(NULL, NULL)) NOT NULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((NULL)+('1387847002')))AND(((('-1101900841', 0.3737200159795432, '-103742514', 'Iv|', 'x', NULL, 0.09281183827968709)) BETWEEN ((NULL, 0xffffffffccb0f9e4, NULL, x'', NULL, '0.1815609909029342', x'')) AND ((NULL, NULL, 'Uz]&', x'e204', 'bDꜰt5M]', x'', x''))))))AND(SQLITE_COMPILEOPTION_USED(x'3491'))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1354500356 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '2 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1147349955 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-1377222550 sz=-756721222 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('527169012' IN ()) IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '1728345298'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 sz=-557204098 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '-1173968494 sz=394156752'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.571672717483536)OR(0.6699087021036975 COLLATE NOCASE)))OR((('gB') NOTNULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt0', '2 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(x'b40f' AS BLOB)) ISNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't1', '0 482782646 noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=-1955163864 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't1', '-1645474851 -1788112738 sz=762174870 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0Xffffffffd6f25b2a IN ())) NOT BETWEEN (CASE x'2fff'  WHEN NULL THEN 0xffffffff99b65152 END) AND ((((x'9809'))<((0.9100482583656073))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'f869')+(0.5420942818686311)) IN (CAST(x'fd8e' AS BLOB), (('-654322366')IS NOT(NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '4 noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (LIKELY(DISTINCT NULL) IN (CAST(NULL AS BLOB), (('722832750')/(0.2945996406660938)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt0', '822222364 476279140 sz=1014033853 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE CAST(((x'dc86599d') NOT BETWEEN ('') AND ('1778789375')) AS TEXT); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt0', '0 0 sz=440719181 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '474945659 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'c26fe9e1' COLLATE RTRIM) BETWEEN ((((('x7')AND(x'1214064e')))OR(x'58d0ad0d'))) AND (UNICODE('w['))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((+ (0.5909015315985177)))+((('-954489691') NOTNULL))); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (((((0.8408280393283235)AND(729421270)))OR(-3.14473543E8)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (CAST('308671224' AS INTEGER))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'')*(-1992712350))) NOT BETWEEN (0X1cc6adb6 COLLATE BINARY) AND (CAST(1.861372402E9 AS REAL))); -- 2ms;
DELETE FROM sqlite_stat1; -- 5ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1452439750 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((('JQ'))!=((0.5357903359082453))) AS INTEGER); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=269960389 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((json('><a9')) NOT NULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((load_extension('-433150407', NULL)) BETWEEN ((('') NOTNULL)) AND ((x'' IN ()))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt0', '0 sz=2126870496 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '402142277 sz=-1904170385 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((CASE NULL  WHEN x'e97d' THEN NULL ELSE 0.2477472139397927 END)OR((- ('0.571672717483536')))))AND((((('-654322366')AND(0.15296931113016143)))AND('?溗')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=-82995464'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=98851675 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((('-1040875651')AND(0.6340373356080534)))OR(((((x'')AND(394156752)))AND(NULL)))))OR(((NULL) NOT BETWEEN (NULL) AND (x'51e3')))))AND(((0x4f8d0c92) BETWEEN (x'') AND ('g)z\r#j ]')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '277706903 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE LIKELY(DISTINCT ((('FALSE'))<=((-1.098422693E9)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-442054317 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (NULL IN (1014033853)) THEN 0Xffffffffbe5253d7 COLLATE NOCASE WHEN ((NULL)IS('')) THEN CAST(NULL AS INTEGER) WHEN ((NULL) BETWEEN (NULL) AND (-1.192009965E9)) THEN (('5푮')GLOB(1.7976931348623157E308)) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't1', '538482790 sz=1147349955 noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '1057073449 sz=1286361009 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE json_extract(json_array_length(-1994606844, x''), ((0.37011181683085814)&(NULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't1', '-1552090716 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(NULL AS TEXT) COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt0', ' sz=1218348102 unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1829376969 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL COLLATE RTRIM COLLATE RTRIM COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.13797753037776472)) BETWEEN ((x'')) AND (((('-487166974') IS FALSE)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '1092573601 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-1782552311 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(NULL AS TEXT))<<((- ('630246486')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=-883966976 noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=809781711 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((')') BETWEEN (x'') AND (4.81607375E8)))AND((((x'd6ff741c'))<=((x''))))))AND((((('s읠_y')OR(2.035598863E9)))AND('')))))OR((+ (x'')))))OR((NULL IN (NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=2090065264 unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '1861372402 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((x'') IS TRUE))OR(NULL COLLATE BINARY)))AND(CAST('-1992712350' AS TEXT))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '1835517785'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '0 0'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=-1873652856 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1994606844 unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '1355436089 sz=-290826285'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt0', '1157165363 979349298 sz=888834825 noskipscan'); -- 4ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt0', '-1192009965 sz=1339605476 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'' IN ()))-(((NULL)==(0.5629610643446346)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('Q[Q5zHd,', '1679384917', 0.6522328055092049, 'w*봪g', x'7ac2')) BETWEEN ((((1854883582)<<(x'')), (((0X2590cc56, 1795432769, 0.774999794127563)) BETWEEN (('', 0.37011181683085814, '763085614')) AND ((x'615d', 0.9100482583656073, 'bN'))), 4.40719181E8, HEX(0.955791545467173), (((('-1904170385')AND(0.4127032901655857)))OR('-1084686533')))) AND ((((NULL) NOT BETWEEN (NULL) AND (0xffffffff8498069a)), CASE 0.5420942818686311  WHEN -1805941222 THEN 0X411f59a1 END, CAST(0.18757991239643623 AS BLOB), (~ ('')), json(NULL)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((COALESCE(x'', 0xffffffffa9777b3c)) ISNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '0 379115476 sz=-1635051623'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((TRIM('722832750', 0.8005932427315577)) IS FALSE); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(1.387847002E9 COLLATE BINARY AS BLOB); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((CASE WHEN '-615038039' THEN '-817893011' END)OR(NULL)))OR(0.955791545467173 COLLATE BINARY)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.4508820230830394)IS NOT(NULL)) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1803026633 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=-1409595194 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-969405428 0 sz=-271428284 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1782552311 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt0', ' sz=-797488346'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '-883966976 sz=1852177655'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt0', '2 sz=490557401 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN LIKELY(DISTINCT -1192009965) THEN CAST(0.9968004583828063 AS BLOB) ELSE x'966b' COLLATE BINARY END; -- 4ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't1', ' sz=1240412139 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((((((x'')OR(NULL)))AND(NULL)))AND('485261349')))AND(0x2d6ddd96)))OR(NULL)))AND(NULL))) ISNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '4 sz=-1110698848 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((- (NULL))) IS TRUE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1230092712 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2 sz=375226444 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=817243850 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-901787097 sz=925633958 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((- (x''))) NOT BETWEEN (((NULL) IS TRUE)) AND ((('') NOT BETWEEN (x'') AND (x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't1', '973002947 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((0X6ecaa86b) BETWEEN (0.5986874088851144) AND (NULL)))OR(('773443851' IN (NULL)))))AND(((('107372277')) NOT BETWEEN ((0.9336800527331384)) AND ((0.6830340579032624))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 2ms;
DELETE FROM sqlite_stat1 WHERE INSTR('^B	->k', CAST(NULL AS BLOB)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (x'' IN (0.2799752445763728))  WHEN ((('2123236918')) BETWEEN ((x'')) AND (('CD	#1'))) THEN ((1189098953) IS TRUE) WHEN ((('AK'))<>(('1477961329'))) THEN ((0.47499184444130127) IS FALSE) WHEN (x'' IN ('')) THEN CASE '1286361009'  WHEN '0.37011181683085814' THEN NULL ELSE '' END ELSE ((((NULL)OR(NULL)))OR(0xffffffffb814c4cb)) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '0'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((COALESCE(DISTINCT NULL, 'Bc', x'e8d0c61e', ''))IS NOT('-557204098' COLLATE RTRIM)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE COALESCE(DISTINCT NULL, 0.862319911551803)  WHEN 0.06885256501099413 THEN CAST(x'7349' AS TEXT) WHEN (('[<9e|^q')!=(x'')) THEN CAST(NULL AS INTEGER) WHEN (NOT ('0.6340373356080534')) THEN ('~h' IN ()) ELSE ((NULL)>=('2041859576')) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'29cd'))<(('-1587344285'))) IN (json(NULL), 0.0707949350344782 COLLATE NOCASE)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE CAST(x'' AS INTEGER)  WHEN (('([]') NOTNULL) THEN CASE WHEN '1355436089' THEN 0.5629610643446346 END WHEN ((((0.6259297476506144)OR(0.8575391012596251)))AND('')) THEN (((x''))<(('YN6''%w'))) WHEN ((((NULL)OR(x'')))OR(0.9345102435039666)) THEN ((0.8490979097081803) BETWEEN (-8.2995464E7) AND (-1.716104878E9)) ELSE CAST(NULL AS TEXT) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=-1701689523 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '214316731 2 sz=-542614504 unordered'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=110919901 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '527169012 -1192009965 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-723347931 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '-442054317 sz=-16178339'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '2 sz=148581973'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((CAST('1057073449' AS INTEGER), LIKELY(DISTINCT ''), (((0.2839680516942551, NULL, '1861372402'))<=((0.3441166086181494, '', '-1071466104')))))<(((((NULL)) BETWEEN ((NULL)) AND (('-557204098'))), ((NULL)<=('-414231907')), (('-612090067')||('788862536'))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((((('')OR(0.6259297476506144)))OR('m뜄 欶9J9')) AS BLOB); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2 817243850 sz=1207987221'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('[]')) NOT BETWEEN ((x'' COLLATE NOCASE)) AND ((LIKELY('-138583554')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'ef4a')&(NULL))) BETWEEN ((('') IS FALSE)) AND (CASE WHEN '' THEN 'G' END)); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't1', '481607375 sz=-1149644795'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(NULL AS BLOB)) BETWEEN (-1377222550) AND ((((0x5493143b)) BETWEEN ((0X7d7fc802)) AND ((x''))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (NULL)) COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '6 sz=-823457761 noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=-23111319 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-883966976'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt0', ' sz=-820632710 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1498793284 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('-728765350')) BETWEEN (((((x''))<=((x''))))) AND ((SQLITE_SOURCE_ID()))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=-1403744026 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 4ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=394156752 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE LAST_INSERT_ROWID(); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((NULL)*(0.5956868432276384)) AS NUMERIC); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=1828063020'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((('-1098422693')OR('-1788112738')))OR('dL\n%')))AND('1014033853')))OR(0xffffffffca1d4230))) BETWEEN (NULL COLLATE NOCASE) AND ('-557204098')); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((')D')IS NOT(0.3813554608508519)) COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt0', '0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0Xffffffffc5a8dc29)&(NULL)) COLLATE RTRIM COLLATE RTRIM; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't1', ' sz=2147187512 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '0 2090065264 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=-1192009965 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=98851675 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(highlight('', x'191b', 4.40719181E8, NULL) AS REAL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=440719181 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '-1552090716 -772704774 -18793458 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '174172901 0 sz=-1048682816 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE TOTAL_CHANGES(); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=112405144 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-320809874 noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2 0'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE MAX('809781711', '', 0xfffffffff3e7782f, 0x648eb760)  WHEN HEX(0.5288042267848503) THEN ((((x'')AND(x'df16')))AND('0.0707949350344782')) WHEN CASE NULL  WHEN x'9527' THEN NULL ELSE '1699649205' END THEN (((0.2694285000918447)) BETWEEN ((x'87df')) AND (('-1027494295'))) WHEN ((0.955791545467173)|(NULL)) THEN (('-1570314502') NOT NULL) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE QUOTE((((NULL)) NOT BETWEEN (('')) AND (('1328737329')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt0', '581352605 sz=-1569175375 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=527169012 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('0.13797753037776472')AND(0.15330985739051795)))OR('W 4*4d6鬎')) COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 3ms;
DELETE FROM sqlite_stat1; -- 4ms;
DELETE FROM sqlite_stat1 WHERE (((NULL)) NOT BETWEEN ((('0.8805737523506434' IN (0.679240198248614)))) AND ((((0xfffffffffdcaa535) BETWEEN (0.3737200159795432) AND (NULL))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 1815646447 sz=794582476 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt0', '1993291374'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt0', ' sz=-26622032 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=-951825363 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't1', '0 sz=474945659 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2 0'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '40930037 sz=1441075597 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '-1716104878 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (('| kp' COLLATE NOCASE)<=(TOTAL_CHANGES())); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=-1071466104 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '1557650137 sz=373522865'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-603877929'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '4 sz=-1101900841 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-228155894 unordered'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((NULL COLLATE RTRIM)=(0x538ea60f)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((ABS(NULL)) NOTNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1286361009 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '0 sz=-1085025808 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=-1716104878'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '373522865'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't1', ' sz=538482790 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (x'' COLLATE RTRIM)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '687733586 sz=-18604841 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '0 -1519331889 sz=-603877929 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=-533753136'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL) NOT BETWEEN ('') AND (x'')) COLLATE BINARY COLLATE RTRIM; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-2072380624 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ''; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL) BETWEEN (0.7503296461556098) AND ('')) IN (('0.19123684690078924' IN ()))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=440719181 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE COALESCE((('U|yeM#m')IS NOT('1218348102')), -1.645474851E9 COLLATE BINARY); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=1286361009'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '6'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((((0.7281157513110578)) BETWEEN ((4.7627914E8)) AND ((''))) AS INTEGER); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((TRIM(DISTINCT '|z^xK', 1923686940))<(NULLIF(0.9414159395469194, x'4cce'))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((- (NULL)), (NULL IN (NULL)), (~ (x''))))>((HEX(DISTINCT 0.22388115149334264), x'', ((('', 'JQ', '460588178'))<((NULL, '0.8512542775658992', -603877929)))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.579519638555126) IS TRUE) IN (((0.2809102012321877) NOT BETWEEN (0.7915714669590835) AND ('-487166974')), ((((((((8.09781711E8)AND('!sm|O')))AND(x'')))AND('')))AND(NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 sz=-1258789803 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2 1286361009 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '1407386401 -1115044402'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't1', ' sz=-1102096781 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=1794729750'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CAST(0Xffffffffa7397ebf AS NUMERIC) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '-487166974 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0xffffffffd6f25b2a IN ())) IS TRUE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(1.218348102E9 AS INTEGER) COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 0 unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(x'd311' AS INTEGER)) NOT BETWEEN (x'') AND ((('311246042') IS TRUE))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt0', '0 9223372036854775807 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '9223372036854775807 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt0', ' sz=1218352366'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1387847002 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(-1.99271235E9 AS BLOB))+(NULL)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '0 1681790914 sz=797357258'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt0', '1981313707 sz=1338822293 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1040875651 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((- ('1728345298'))) ISNULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ ('B㱋푮\n' COLLATE NOCASE)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=1286361009 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-1309363303 2 sz=-442355660 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-1038029192 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 sz=143522337 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt0', ' sz=-221424566'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=-1854660046 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'') BETWEEN ('0.9100482583656073') AND (0.6776004889058207)))IS(((0.16072904899077722) IS TRUE))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=-1645474851'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '-1656727207 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NULL IN ()) COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=879793887 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((- (0.2740939740991405)))<=(CASE 0.5629610643446346  WHEN 0.09191054267042476 THEN 'wB1I' ELSE '0.02020494058102329' END)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((json_array_length('Qf', '0.679240198248614'))OR(x'' COLLATE RTRIM)))OR(LOWER(DISTINCT '0.2799752445763728'))))AND(((0.46338212547329705) BETWEEN (0.37063594838635805) AND ('8E')))))AND(((((-1.122472297E9)OR(NULL)))AND(0x2d6ddd96)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (('-1852351537') NOT BETWEEN (0.35516646374145744) AND (0Xcb0905f))  WHEN (((x'', 0.19758860508858478, x'')) NOT BETWEEN ((NULL, '| KP', '159933150')) AND ((-408725119, '0.9100482583656073', x'f91e'))) THEN ((((3.79115476E8)AND('-1455580807')))AND(NULL)) WHEN (+ (NULL)) THEN ((0x3f4c6952)|('770557792')) WHEN x'b03f' COLLATE NOCASE THEN ((('now', x'', NULL)) BETWEEN (('O^<wI', NULL, 'W<\c')) AND (('-1904170385', '544745521', 0xffffffff9dec0bdd))) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '2092603850 sz=-1267001636 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (UNICODE('') IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE CAST('-138583554' AS NUMERIC)  WHEN ((NULL)/(0.2166606233944426)) THEN 0.22388115149334264 END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('-172080006', '0.22388115149334264', '-1873652856')) BETWEEN ((((NULL)<<(NULL)), CASE NULL  WHEN NULL THEN NULL ELSE x'' END, (NOT ('611758')))) AND ((('-1855375425' IN ()), ((x'd7ae')>('yWs')), (x'39d4' IN (0.2439753546879594))))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=-320809874 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-2143134760'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1135284224 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NULL IN (((('')) NOT BETWEEN ((0.7438234292398612)) AND ((0.36410072068003085))))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=440719181 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't1', '-1716104878 sz=-802984526 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ ((('0.4127032901655857') NOT BETWEEN (NULL) AND ('V')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1448554114'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't1', ' unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt0', ' sz=-450159834 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(0.32201783457581323 AS NUMERIC))/((- (NULL)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((NULL)AND(0.10715468498980418)))AND(x'')))&(((((NULL)AND(x'')))OR(0xffffffffd01218a3)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.9701409232140458; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '4 sz=-1957521418 unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1162963057 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((x'')LIKE('\n'))  WHEN ((NULL)IS(0.09944268591669059)) THEN CASE '0.09191054267042476'  WHEN 0.10552191191644678 THEN NULL END END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '-525914954 sz=-1704137801 unordered'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((NOT (0.4897656765099315)))*(((x'f5fa')IS(NULL)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (-8.2995464E7 IN ()) COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=6280303 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '1057073449 sz=387431313 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('5>NI^~*-R')GLOB(NULL))) BETWEEN ((NOT (0.36410072068003085))) AND (((0.3690804463644989) IS TRUE))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE json_array(CAST(-305732135 AS TEXT), ((x'') ISNULL)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '2 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt0', '-1552688619 sz=-1403744026 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE TRIM(((0.3441166086181494) NOTNULL)); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt0', ' sz=770557792 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't1', ' sz=-1185918383 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't1', '0 0 sz=1286361009'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt0', '0'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST('234632572' COLLATE NOCASE AS TEXT); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '-440744141 sz=1361810987 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'2994f894') IS TRUE))-(TIME('', NULL, '2092317771'))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 2 sz=1406976263 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=482233264'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((NULL)&(0.6392159510656018))))>((CASE WHEN 0.7404306370022258 THEN 0 END))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't1', '-1288867756 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL)>(((((0.29455594000188046)AND(0.31320170588828555)))AND(NULL)))); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN 1334643858 THEN x'' END) IS TRUE); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL) ISNULL) COLLATE BINARY COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=214316731'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('110613162' COLLATE RTRIM) ISNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '-82995464 1328737329 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2 0 sz=-1282184469'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(0.15312373958107706 AS TEXT))GLOB((((('')AND(NULL)))OR('-314473543')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE CASE 1.861372402E9 COLLATE BINARY  WHEN x'' THEN ((NULL) ISNULL) WHEN (((x'', NULL, '1950209705')) BETWEEN (('1786164615', '', 0.5390491308208084)) AND ((-1333391765, '', NULL))) THEN (- ('E]')) WHEN ('i<핂!' IN (0.10715468498980418)) THEN MAX('CD	#y', '-492457506') END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('-901787097')IS(rtreenode(NULL, '-614623185'))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.29455594000188046; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1489404225'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.0749501172445628; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((-1.03742514E8)OR('-487166974')))OR('2dd8B'))) NOT NULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=551677265'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('') ISNULL), CASE WHEN 'JP' THEN -1.03742514E8 ELSE '' END, ((((((((0.032673404921222615)OR(x'2d82')))AND(NULL)))OR('')))OR(NULL))))<=((CASE '1[.''MLn'  WHEN x'0ebd' THEN 'N[' ELSE 0Xffffffffdc018dd7 END, -1e500 COLLATE RTRIM, ((0.9762050745292075) IS FALSE)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1526792041 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('770557792')OR(x'')))OR('0')))<=(x'1c69' COLLATE NOCASE)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't1', '-265497377 212188043 sz=881760765 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('g)Z\r#J ]')LIKE(0X4ea11593)))IS NOT((('Lag\궶')LIKE(NULL)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.05583889793122576)!=(0.5323347930685938)))>('-1888647146' COLLATE NOCASE)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('-1833206247')!=('611447527')) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '4 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt0', ' sz=-138583554 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=770557792 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.7955468768054422)IS('cd	#1')))>=(((0.6953414617364462)GLOB(x'fd3c')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '716415716 0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt0', ' sz=-1173968494'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2 sz=-1415837309 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '0 sz=1387847002 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((CASE '0.6340373356080534'  WHEN NULL THEN '' WHEN x'd684' THEN x'' WHEN 0.20121696981509118 THEN NULL ELSE '379115476' END, 773105738, (((NULL))=(('O#(c.+8m')))))>=((NULL COLLATE RTRIM, (6.30246486E8 IN (x'573d')), '1584106809' COLLATE NOCASE))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '474945659 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '-1787744025 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE LIKELIHOOD(DISTINCT ((0X42d95626)%('6\r')), 0.9444375445795596); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt0', ' sz=-820576217'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((+ ('srZJ')))AND(((NULL) BETWEEN (x'') AND (1.014033853E9)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=28046563'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '214316731 2 sz=-1386080231 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((- ('sWpy2}<')) AS REAL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1334643858 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL) IS TRUE); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=971532624 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '474945659 -1489349067 sz=-1951018996 noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-330303693 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((NULL)) NOT BETWEEN (('474945659')) AND ((x'ce72'))))AND(TRIM(DISTINCT NULL, 0.026525960273586557))))OR(((0.9683134054234772) ISNULL))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CASE WHEN '1835517785' THEN '-2095487415' WHEN x'' THEN '164809102' WHEN '659715956' THEN x'' END IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (((-1999575121)IS NOT(x'1829')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((722832750 COLLATE RTRIM))>((json_type(NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 6ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 0 sz=332032017'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 -1879968591 sz=277706903 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=269960389 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=379115476'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.4509642865944252)<(0.7020707147120328)) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((x'') IS TRUE) AS TEXT); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('{''hgxxfV') BETWEEN (0xffffffffae09a588) AND (0.3006151140627562)) IN ()); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=-510603120 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((0.06254861425103442) NOT BETWEEN ('0.7281157513110578') AND (NULL)) AS NUMERIC); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE TYPEOF(DISTINCT (((('mf')OR(NULL)))OR(0.04395220803370392))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (+ (-1645474851))  WHEN ((0X68a524d6) NOT NULL) THEN CAST(0.9973520259136792 AS REAL) WHEN (((('{{')AND('-1185550697')))AND(x'')) THEN (- (0.9683134054234772)) WHEN (NOT (NULL)) THEN TYPEOF('') ELSE ((NULL)/(x'f7ae')) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)||(0Xffffffffc71ba4a5))) NOTNULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '	7眨4Wg'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-1275041516 sz=900276388 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '-1194987059 2035598863 sz=-1916745212 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN SQLITE_COMPILEOPTION_USED(NULL) THEN CAST('-51788966' AS TEXT) ELSE 'Id' COLLATE NOCASE END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.8242988344218379) ISNULL))>>(((((NULL)OR('402142277')))OR(-1966885155)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (((0.24897138989003564) NOT BETWEEN (0.24249051436041846) AND (2.69960389E8)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1112480155 noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't1', '-1019076750 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '1741462553 sz=-1344061067'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'') NOT BETWEEN (x'') AND (0.19123684690078924))) NOT NULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '2 2 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.47710932505520987) NOT NULL) COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2000925806 -136291270'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('晉') BETWEEN ('-353230463') AND (0.7404306370022258 COLLATE NOCASE)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((0.4446770874561924)AND('-1988515924')))AND('')))OR('8')))AND(0.008465153330769026)))||((('-1515242352')<<(NULL)))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=544745521 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((CASE WHEN '0.09191054267042476' THEN x'' WHEN '0.9701409232140458' THEN NULL WHEN 0.4223141917972386 THEN x'' ELSE 0xffffffffe2f66c02 END)AND(((0x4f32ec31) IS TRUE))))AND(CASE WHEN '-202147550' THEN '715616056' END)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL))==((x'3722'))) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt0', '-985625859 1008187163 sz=2049502180 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-2038534013 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '630246486'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=1878735352 unordered'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE 0.26708507128992354  WHEN 0.9973520259136792 THEN 'BC' END COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((((-1.040875651E9)OR(NULL)))AND(0.6800458387709085))  WHEN ((0.5837954041717724)OR(x'')) THEN 98851675 WHEN (~ (0Xfffffffffa4d87da)) THEN ((-123531422) NOT NULL) WHEN (((0.9526452528389916))!=((0.32366274645724746))) THEN (('1128091721') IS TRUE) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('440719181')AND(NULL)) IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((((x'df5c')) NOT BETWEEN ((NULL)) AND ((0.0065696041285943085))) AS NUMERIC); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL)<>(x'')) COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '0 sz=-1782204239 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((((0.12105534514777971) NOT NULL)) BETWEEN ((('-1173968494')||(0.613238623206027))) AND (((((0xfffffffff2412bf6)OR(0.10346766245082317)))OR(x'')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt0', ' sz=1893832195'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-57515944 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't1', ' sz=481607375 noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '-1903699583 sz=-860816924'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=-1173968494 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'', 'p', 1.861372402E9))>=((x'', NULL, 1973339990))) COLLATE NOCASE; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt0', ' sz=205769335 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE x'193e'; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (SQLITE_COMPILEOPTION_GET(''))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=1861372402 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt0', ' sz=-1359339351'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((x'' IN ()))AND(CASE -1.99271235E9  WHEN '-193467646' THEN 'qꩯ唅U}' ELSE NULL END)))OR(((NULL)=(0x4fa98799)))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL IN ())) NOT BETWEEN (((((NULL)AND(x'b92d')))OR('482782646'))) AND (((((0.48989878489321415)OR(NULL)))AND(0.3216410589146913)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((x'16d4')) NOT BETWEEN ((NULL)) AND (('-1741182075'))))IS NOT(((1421637901) ISNULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '1829376969 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=-1866088653 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL, NULL, NULL, -926491733, NULL, 0.1666403367384165, '-271753907')) NOT BETWEEN (((~ (0.4127032901655857)), SQLITE_COMPILEOPTION_GET(x'2432d048'), CASE WHEN '[<9e|^q' THEN NULL END, (NULL IN ()), (x'5beb' IN (0.1892136007088877)), ((0.5722611104660255) NOT BETWEEN (x'') AND (0.5863592718035446)), (~ (0.4268050032128746)))) AND ((((0.6956722707760252)OR('106705201')), (((402142277, '-433150407', '5VAX')) BETWEEN ((NULL, NULL, x'')) AND ((0Xffffffffd6f25b2a, NULL, 0.35866084855445723))), (('-964787123')-('')), ((x'')GLOB(NULL)), (('{}') NOT BETWEEN (NULL) AND (-1.782204239E9)), CASE WHEN '-860816924' THEN '2004481726' END, ((0.01449331873335269)!=('1861372402'))))); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=-433150407 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 -688760022'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((0.10552191191644678 COLLATE NOCASE)AND(CAST(x'' AS TEXT))))AND(NULL)))AND(('1075350067' IN ()))))OR('' COLLATE NOCASE)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((x'') BETWEEN ('0&ZWk') AND (x'f8887593')) THEN (- (NULL)) WHEN x'' COLLATE NOCASE THEN 0.5390491308208084 COLLATE RTRIM WHEN (NOT ('NNg?(Y')) THEN CAST(0.9828091357736172 AS NUMERIC) ELSE (((('2y')AND(0.5055547955449523)))OR(NULL)) END; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST('508030358' AS TEXT)) NOT NULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'')GLOB('630246486'))) NOT BETWEEN ((('-1272425997')>>(NULL))) AND ((((x'', 0X187b5126, NULL)) BETWEEN ((x'', '-1325319845', 0.1470144558248051)) AND ((x'1c8c', '1Dꙏ਀|g頦gQ', NULL))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('a?DfC''?Gp') NOT BETWEEN (0.5323347930685938) AND (0.38633268305855417)) IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('-1102470772' IN ()) IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (CAST(NULL AS NUMERIC))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt0', '0 sz=1902948446 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('-530120078') BETWEEN (x'') AND (NULL))) IS TRUE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=-688760022 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (0.5104743993466253 IN ()) COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN '' COLLATE RTRIM THEN (((x'')) BETWEEN (('538482790')) AND ((-1565122084))) ELSE (0.01005447893686695 IN ()) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.41385194041700146) BETWEEN (x'52bc') AND (-1535897969)))-((x'' IN (x'')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NOT (NULL))) NOTNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't1', '0 -1293780475 sz=1778789375 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((('-1888305186')) NOT BETWEEN ((NULL)) AND ((NULL))))AND((('S1\')IS('')))))AND(((x'070f')IS(0.8087828855931339)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '-1459091229 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=-74036555'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 sz=1218333850'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL)+(NULL)) COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'')!=(NULL)); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1080553730 noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt0', '2067274703 0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2092317771 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1289230859 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '1120543913 unordered'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1844795600'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't1', ' sz=2026961400 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '468749722 2 sz=-357971603'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=1644917425 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('2090065264') NOT BETWEEN ('-1348071898') AND ('795156191')) IN ()); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt0', ' sz=784648156 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '1147695460 sz=1118933766 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((0.9348101935852817) NOT NULL) AS NUMERIC); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('R')/(x'')), ((NULL) ISNULL), (('0.3006151140627562') IS TRUE)))>=(((0.8490979097081803 IN ()), (('-1955163864') IS TRUE), ((((0X7983a7c4)OR(0.506839191235085)))OR(x''))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=145975900 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((x'')AND(-3.30303693E8)))OR('vqs2<lwD')))AND(0.5001473097914996)))AND(NULL)))%(('' IN ()))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt0', '-1231961865 506272893 noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (~ ((((('476279140')OR('s|o')))OR(NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt0', '1497635844 sz=-1677466946'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '-314473543 -1102096781 sz=1680611253 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE UNLIKELY(DISTINCT ((0.5789248552748177) NOT NULL)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt0', ' sz=1689125348 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt0', ' sz=770557792 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((-1.040875651E9, x'8ec8', x'')) NOT BETWEEN ((((-1.071466104E9)+(-1497285347)), x'' COLLATE NOCASE, (x'' IN ()))) AND (((('-1374519989')>=(x'')), (('506262228') NOT BETWEEN (x'') AND (x'')), CASE WHEN 0.2126230586179495 THEN NULL WHEN NULL THEN 0.47886265395093564 WHEN 1153356648 THEN x'3ddc' ELSE -6.54322366E8 END))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-901787097 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt0', ' sz=1962216676 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((INSTR(x'', '}C')) NOTNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '822222364 sz=-1564792965 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt0', '0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=1890723355 noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN '-159404129' THEN -1.904170385E9 ELSE -1040875651 END) NOT BETWEEN (((0.06904276133979881) NOT NULL)) AND (COALESCE(-1.716104878E9, 1.286361009E9))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(TRIM(DISTINCT NULL) AS REAL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt0', ' sz=-370363503 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=134081930'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(NULL AS BLOB))|(((x'')%(NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=-1946822187 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '-1855375425 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN CASE x'd2740609'  WHEN NULL THEN 0.570633351629154 END THEN (x'' IN ()) WHEN CAST(NULL AS INTEGER) THEN json_patch('gB', '-1995262250') WHEN CASE WHEN 0.6830340579032624 THEN x'' ELSE '2^UB' END THEN CASE NULL  WHEN '[h' THEN 0x7be4234 WHEN x'' THEN 16052738 WHEN '0.2166606233944426' THEN 0.6034495229850548 END END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt0', ' sz=-1115346855 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2 1920295988'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.1149819616274621) BETWEEN ('!kxkF ~') AND (NULL)) COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=817243850 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt0', '2'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt0', ' sz=-80425345 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL) ISNULL) COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) BETWEEN (-363909245) AND (x'')))AND(CAST('| kp' AS TEXT))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((~ (0x164381b1))) IS TRUE); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-104137543 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't1', ' sz=-330403068'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't1', '1739014214 2 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE 0.13449345071298835  WHEN '-1514868636' THEN 0.7145495887469276 ELSE NULL END COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE UNLIKELY(DISTINCT -1775869961)  WHEN (NULL IN (0.3006151140627562)) THEN (('-1873652856')LIKE(0.7353867916914284)) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '0 2092317771 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't1', '0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'd3ba' COLLATE NOCASE)OR(CAST(NULL AS BLOB))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- ((((NULL, NULL, x'')) NOT BETWEEN (('-314473543', NULL, x'')) AND ((-5.57204098E8, -4.33150407E8, ''))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt0', ' sz=-1661827711'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (ABS(DISTINCT '-1149644795'))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt0', '2 0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-820632710 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-261977987 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL)) BETWEEN (((((-1.103022602E9)) NOT BETWEEN ((x'')) AND ((x''))))) AND (((((0.17453116336389374))==(('-1448329453')))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ''); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(NULL AS NUMERIC); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt0', ' unordered'); -- 0ms;
UPDATE OR IGNORE rt0 SET (c0, c2)=('nS', '許2u[M'); -- 9ms;
CREATE UNIQUE INDEX i81 ON t1(CHAR(CAST(c0 AS INTEGER), (c0 IN ()), c0 COLLATE RTRIM, ((c0) IS FALSE), (- ('-883966976')))); -- 0ms;
CREATE INDEX i86 ON t1(c0) WHERE ((CAST(c0 AS REAL)) IS FALSE); -- 0ms;
PRAGMA defer_foreign_keys = false; -- 0ms;
UPDATE OR IGNORE rt0 SET (c0, c1)=(x'', x'') WHERE '()'; -- 0ms;
END TRANSACTION; -- 0ms;
INSERT OR ABORT INTO rt0(c1, c0, c2) VALUES (NULL, NULL, 'i'); -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
COMMIT; -- 0ms;
PRAGMA main.wal_autocheckpoint = 9186035249429310113; -- 0ms;
REINDEX; -- 0ms;
VACUUM; -- 10ms;
PRAGMA temp.legacy_file_format = false; -- 0ms;
CREATE INDEX i32 ON t1(((-1308096484) NOT BETWEEN (c0) AND (0.840700190179102)) COLLATE RTRIM); -- 0ms;
COMMIT TRANSACTION; -- 0ms;
REINDEX; -- 0ms;
INSERT OR IGNORE INTO rt0(c1, c0, c2) VALUES ('/?', 0.29455594000188046, 'bᷕ雸\m'), (NULL, x'', x''), ('᪐g\n?q', '-1097500557', 0.5381978668127332); -- 1ms;
ANALYZE; -- 10ms;
REINDEX i53; -- 1ms;
REINDEX i32; -- 0ms;
REINDEX i32; -- 0ms;
REINDEX BINARY; -- 0ms;
INSERT OR FAIL INTO rt0(c1, c2, c0) VALUES ('-657987913', 'z\rH9쿑\%w''UG', '-361171159'), (NULL, x'', x''), (NULL, -8.83966976E8, '%S'); -- 1ms;
INSERT OR IGNORE INTO t1(c0) VALUES ('-1149644795'); -- 0ms;
SELECT rtreecheck('rt0'); -- 0ms;
DROP TABLE t1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
UPDATE rt0 SET c1='-1645474851'; -- 5ms;
REINDEX BINARY; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
VACUUM temp; -- 0ms;
UPDATE OR FAIL rt0 SET (c1, c0)=(x'', -1.7976931348623157E308) WHERE ((TRIM(DISTINCT rt0.c2, rt0.c1))!=(((rt0.c0)>=(rt0.c0)))); -- 0ms;
UPDATE rt0 SET (c2)=(NULL) WHERE ((- (rt0.c0)) IN ()); -- 0ms;
INSERT OR IGNORE INTO rt0(c0, c1) VALUES (x'', '-888730071'); -- 0ms;
ROLLBACK TRANSACTION; -- 4ms;
INSERT OR IGNORE INTO rt0(c1, c2, c0) VALUES (NULL, 1273899280, 0.35813881045915297); -- 0ms;
REINDEX RTRIM; -- 0ms;
SELECT rtreecheck('rt0'); -- 0ms;
INSERT OR IGNORE INTO rt0(c1, c2, c0) VALUES (x'7f4d', NULL, NULL); -- 16ms;
INSERT OR ABORT INTO rt0(c0, c1, c2) VALUES (NULL, '}C', x''); -- 0ms;
UPDATE OR IGNORE rt0 SET (c1, c1)=('-624325770', x'') WHERE CASE WHEN ((rt0.c0) BETWEEN (rt0.c1) AND (x'49f6')) THEN (rt0.c0 IN ()) ELSE rt0.c2 END; -- 0ms;
DELETE FROM rt0; -- 1ms;
END; -- 1ms;
PRAGMA threads = -2730477454160803576; -- 0ms;
INSERT OR ROLLBACK INTO rt0(c0, c1) VALUES ('!uY', 72374361); -- 0ms;
INSERT OR ROLLBACK INTO rt0 VALUES ('-1527248409', '', '-1192009965'); -- 0ms;
INSERT OR ABORT INTO rt0(c0) VALUES (0.008758857739277315), (0xffffffffade9406a), (0x4174aa36); -- 4ms;
CREATE TABLE t0 (c0 INTEGER CHECK ( c0) UNIQUE ); -- 0ms;
INSERT OR IGNORE INTO rt0(c0) VALUES ('-772704774'), (x'3828'), (NULL); -- 0ms;
ANALYZE; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
REINDEX  rt0; -- 1ms;
COMMIT TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT ALL * FROM rt0;
SELECT * FROM rt0 WHERE ((((rt0.c2)) NOT BETWEEN ((((rt0.c2) IS FALSE))) AND ((rt0.c2 COLLATE BINARY)))) UNION ALL SELECT * FROM rt0 WHERE ((NOT ((((rt0.c2)) NOT BETWEEN ((((rt0.c2) IS FALSE))) AND ((rt0.c2 COLLATE BINARY)))))) UNION ALL SELECT * FROM rt0 WHERE ((((((rt0.c2)) NOT BETWEEN ((((rt0.c2) IS FALSE))) AND ((rt0.c2 COLLATE BINARY)))) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT t0.c0, rt0.c1 FROM rt0 RIGHT OUTER JOIN t0 ON NULL;
SELECT DISTINCT t0.c0, rt0.c1 FROM rt0 NOT INDEXED RIGHT OUTER JOIN t0 ON NULL WHERE (rt0.c2) UNION SELECT DISTINCT t0.c0, rt0.c1 FROM rt0 RIGHT OUTER JOIN t0 ON NULL WHERE ((NOT (rt0.c2))) UNION SELECT DISTINCT t0.c0, rt0.c1 FROM rt0 RIGHT OUTER JOIN t0 ON NULL WHERE (((rt0.c2) ISNULL));
SELECT DISTINCT t0.c0, rt0.c1 FROM rt0 RIGHT OUTER JOIN t0 ON NULL;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 WHERE ((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0)) IN ())) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM rt0 WHERE ((NOT ((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0)) IN ())))) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM rt0 WHERE ((((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0)) IN ())) ISNULL)) GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0, rt0.c1 FROM rt0, t0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0, t0 GROUP BY rt0.c0, rt0.c1 HAVING AVG((rt0.c0 IN ())) UNION ALL SELECT rt0.c0, rt0.c1 FROM rt0, t0 GROUP BY rt0.c0, rt0.c1 HAVING (NOT (AVG((rt0.c0 IN ())))) UNION ALL SELECT rt0.c0, rt0.c1 FROM rt0, t0 GROUP BY rt0.c0, rt0.c1 HAVING ((AVG((rt0.c0 IN ()))) ISNULL);
SELECT ALL rt0.c0, rt0.c1 FROM rt0, t0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0, t0 GROUP BY rt0.c0, rt0.c1 HAVING AVG((rt0.c0 IN ())) UNION ALL SELECT rt0.c0, rt0.c1 FROM rt0, t0 GROUP BY rt0.c0, rt0.c1 HAVING (NOT (AVG((rt0.c0 IN ())))) UNION ALL SELECT rt0.c0, rt0.c1 FROM rt0, t0 GROUP BY rt0.c0, rt0.c1 HAVING ((AVG((rt0.c0 IN ()))) ISNULL);
SELECT ALL rt0.c0, rt0.c1 FROM rt0, t0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL t0.c0 FROM t0;
SELECT t0.c0 FROM t0 WHERE (((t0.c0 IN ()) IN ())) UNION ALL SELECT t0.c0 FROM t0 WHERE ((NOT (((t0.c0 IN ()) IN ())))) UNION ALL SELECT t0.c0 FROM t0 WHERE (((((t0.c0 IN ()) IN ())) ISNULL));
SELECT ALL t0.c0 FROM t0;
SELECT DISTINCT rt0.c0, rt0.c1, t0.c0 FROM rt0, t0;
SELECT DISTINCT rt0.c0, rt0.c1, t0.c0 FROM rt0, t0 WHERE (((((CASE rt0.c0  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c0 END)AND(((((rt0.c0)AND(rt0.c2)))AND(rt0.c0)))))OR(NULL))) UNION SELECT DISTINCT rt0.c0, rt0.c1, t0.c0 FROM rt0, t0 WHERE ((NOT (((((CASE rt0.c0  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c0 END)AND(((((rt0.c0)AND(rt0.c2)))AND(rt0.c0)))))OR(NULL))))) UNION SELECT DISTINCT rt0.c0, rt0.c1, t0.c0 FROM rt0, t0 WHERE (((((((CASE rt0.c0  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c0 END)AND(((((rt0.c0)AND(rt0.c2)))AND(rt0.c0)))))OR(NULL))) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c1, t0.c0 FROM rt0, t0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 WHERE (CASE ((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))OR(t0.c0)))AND(t0.c0))  WHEN (- (t0.c0)) THEN ((t0.c0)||(NULL)) ELSE (+ ('7?')) END) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT (CASE ((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))OR(t0.c0)))AND(t0.c0))  WHEN (- (t0.c0)) THEN ((t0.c0)||(NULL)) ELSE (+ ('7?')) END))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE (((CASE ((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))OR(t0.c0)))AND(t0.c0))  WHEN (- (t0.c0)) THEN ((t0.c0)||(NULL)) ELSE (+ ('7?')) END) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL rt0.c2 FROM t0, rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM t0, rt0 GROUP BY rt0.c2 HAVING CASE MAX(t0.c0)  WHEN GROUP_CONCAT(AVG(GROUP_CONCAT(rt0.c2))) THEN NULL END UNION ALL SELECT rt0.c2 FROM t0, rt0 GROUP BY rt0.c2 HAVING (NOT (CASE MAX(t0.c0)  WHEN GROUP_CONCAT(AVG(GROUP_CONCAT(rt0.c2))) THEN NULL END)) UNION ALL SELECT rt0.c2 FROM t0, rt0 GROUP BY rt0.c2 HAVING ((CASE MAX(t0.c0)  WHEN GROUP_CONCAT(AVG(GROUP_CONCAT(rt0.c2))) THEN NULL END) ISNULL);
SELECT rt0.c2, t0.c0 FROM rt0, t0;
SELECT ALL rt0.c2, t0.c0 FROM rt0, t0 WHERE (CAST(((rt0.c1)<(t0.c0)) AS TEXT)) UNION ALL SELECT rt0.c2, t0.c0 FROM rt0, t0 WHERE ((NOT (CAST(((rt0.c1)<(t0.c0)) AS TEXT)))) UNION ALL SELECT rt0.c2, t0.c0 FROM rt0, t0 WHERE (((CAST(((rt0.c1)<(t0.c0)) AS TEXT)) ISNULL));
SELECT rt0.c2, t0.c0 FROM rt0, t0;
SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE (NULLIF((((NULL)) BETWEEN ((rt0.c2)) AND ((rt0.c2))), (NOT (rt0.c0)))) UNION SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (NULLIF((((NULL)) BETWEEN ((rt0.c2)) AND ((rt0.c2))), (NOT (rt0.c0)))))) UNION SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE (((NULLIF((((NULL)) BETWEEN ((rt0.c2)) AND ((rt0.c2))), (NOT (rt0.c0)))) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1 FROM rt0;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 WHERE (((((((rt0.c2) IS FALSE))OR(((rt0.c2)%(rt0.c0)))))AND(((((((((rt0.c1)AND(0.6175506184996042)))AND(rt0.c0)))OR(rt0.c1)))OR(rt0.c2))))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0 WHERE ((NOT (((((((rt0.c2) IS FALSE))OR(((rt0.c2)%(rt0.c0)))))AND(((((((((rt0.c1)AND(0.6175506184996042)))AND(rt0.c0)))OR(rt0.c1)))OR(rt0.c2))))))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0 WHERE (((((((((rt0.c2) IS FALSE))OR(((rt0.c2)%(rt0.c0)))))AND(((((((((rt0.c1)AND(0.6175506184996042)))AND(rt0.c0)))OR(rt0.c1)))OR(rt0.c2))))) ISNULL)) GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c2, t0.c0 FROM rt0 LEFT OUTER JOIN t0 ON ((CAST(rt0.c0 AS NUMERIC)) BETWEEN (rt0.c2) AND (((t0.c0) BETWEEN (rt0.c2) AND (rt0.c1)))) GROUP BY rt0.c2, t0.c0;
SELECT ALL rt0.c2, t0.c0 FROM rt0 LEFT OUTER JOIN t0 ON ((CAST(rt0.c0 AS NUMERIC)) BETWEEN (rt0.c2) AND (((t0.c0) BETWEEN (rt0.c2) AND (rt0.c1)))) GROUP BY rt0.c2, t0.c0 HAVING AVG(MIN(rt0.c0)) UNION ALL SELECT ALL rt0.c2, t0.c0 FROM rt0 LEFT OUTER JOIN t0 ON ((CAST(rt0.c0 AS NUMERIC)) BETWEEN (rt0.c2) AND (((t0.c0) BETWEEN (rt0.c2) AND (rt0.c1)))) GROUP BY rt0.c2, t0.c0 HAVING (NOT (AVG(MIN(rt0.c0)))) UNION ALL SELECT rt0.c2, t0.c0 FROM rt0 LEFT OUTER JOIN t0 ON ((CAST(rt0.c0 AS NUMERIC)) BETWEEN (rt0.c2) AND (((t0.c0) BETWEEN (rt0.c2) AND (rt0.c1)))) GROUP BY rt0.c2, t0.c0 HAVING ((AVG(MIN(rt0.c0))) ISNULL);
SELECT rt0.c2, t0.c0, rt0.c0 FROM rt0, t0;
SELECT rt0.c2, t0.c0, rt0.c0 FROM rt0, t0 WHERE (rt0.c2) UNION ALL SELECT rt0.c2, t0.c0, rt0.c0 FROM rt0, t0 WHERE ((NOT (rt0.c2))) UNION ALL SELECT ALL rt0.c2, t0.c0, rt0.c0 FROM rt0, t0 WHERE (((rt0.c2) ISNULL));
SELECT rt0.c2, t0.c0, rt0.c0 FROM rt0, t0;
SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM t0, rt0;
SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM t0, rt0 WHERE ((((rt0.c0, rt0.c1, x'')) NOT BETWEEN ((CAST(rt0.c1 AS TEXT), ((((((((rt0.c0)OR(0.1340233789117371)))AND(0.45194071131186075)))AND(rt0.c2)))OR(rt0.c2)), rt0.c2)) AND ((((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c2)), rt0.c2, NULL)))) UNION SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM t0, rt0 WHERE ((NOT ((((rt0.c0, rt0.c1, x'')) NOT BETWEEN ((CAST(rt0.c1 AS TEXT), ((((((((rt0.c0)OR(0.1340233789117371)))AND(0.45194071131186075)))AND(rt0.c2)))OR(rt0.c2)), rt0.c2)) AND ((((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c2)), rt0.c2, NULL)))))) UNION SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM t0, rt0 WHERE ((((((rt0.c0, rt0.c1, x'')) NOT BETWEEN ((CAST(rt0.c1 AS TEXT), ((((((((rt0.c0)OR(0.1340233789117371)))AND(0.45194071131186075)))AND(rt0.c2)))OR(rt0.c2)), rt0.c2)) AND ((((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c2)), rt0.c2, NULL)))) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM t0, rt0;
SELECT rt0.c2, rt0.c0 FROM t0, rt0 GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM t0, rt0 WHERE ((((rt0.c2 IN (rt0.c0, rt0.c1))) IS TRUE)) GROUP BY rt0.c2, rt0.c0 UNION SELECT rt0.c2, rt0.c0 FROM t0, rt0 WHERE ((NOT ((((rt0.c2 IN (rt0.c0, rt0.c1))) IS TRUE)))) GROUP BY rt0.c2, rt0.c0 UNION SELECT rt0.c2, rt0.c0 FROM t0, rt0 WHERE ((((((rt0.c2 IN (rt0.c0, rt0.c1))) IS TRUE)) ISNULL)) GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM t0, rt0 GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c1, t0.c0, rt0.c2, rt0.c0 FROM t0, rt0 GROUP BY rt0.c1, t0.c0, rt0.c2, rt0.c0;
SELECT ALL rt0.c1, t0.c0, rt0.c2, rt0.c0 FROM t0, rt0 GROUP BY rt0.c1, t0.c0, rt0.c2, rt0.c0 HAVING ((((rt0.c1)IS NOT(rt0.c2))) BETWEEN ((('2067516593') NOT BETWEEN (rt0.c0) AND (rt0.c0))) AND (SUM(COUNT(rt0.c2)))) UNION ALL SELECT ALL rt0.c1, t0.c0, rt0.c2, rt0.c0 FROM t0, rt0 GROUP BY rt0.c1, t0.c0, rt0.c2, rt0.c0 HAVING (NOT (((((rt0.c1)IS NOT(rt0.c2))) BETWEEN ((('2067516593') NOT BETWEEN (rt0.c0) AND (rt0.c0))) AND (SUM(COUNT(rt0.c2)))))) UNION ALL SELECT ALL rt0.c1, t0.c0, rt0.c2, rt0.c0 FROM t0, rt0 GROUP BY rt0.c1, t0.c0, rt0.c2, rt0.c0 HAVING ((((((rt0.c1)IS NOT(rt0.c2))) BETWEEN ((('2067516593') NOT BETWEEN (rt0.c0) AND (rt0.c0))) AND (SUM(COUNT(rt0.c2))))) ISNULL);
SELECT * FROM t0;
SELECT * FROM t0 WHERE ((((~ (t0.c0))) IS TRUE)) UNION ALL SELECT ALL * FROM t0 WHERE ((NOT ((((~ (t0.c0))) IS TRUE)))) UNION ALL SELECT * FROM t0 WHERE ((((((~ (t0.c0))) IS TRUE)) ISNULL));
SELECT * FROM t0;
SELECT DISTINCT * FROM rt0 INNER JOIN t0 ON (((((((rt0.c1, t0.c0, t0.c0)) NOT BETWEEN ((NULL, t0.c0, t0.c0)) AND ((rt0.c1, rt0.c0, rt0.c0))))OR(CASE t0.c0  WHEN t0.c0 THEN rt0.c1 END)))OR((((rt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c0)))));
SELECT DISTINCT * FROM rt0 INNER JOIN t0 ON (((((((rt0.c1, t0.c0, t0.c0)) NOT BETWEEN ((NULL, t0.c0, t0.c0)) AND ((rt0.c1, rt0.c0, rt0.c0))))OR(CASE t0.c0  WHEN t0.c0 THEN rt0.c1 END)))OR((((rt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c0))))) WHERE (((((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c0))) ISNULL)) UNION SELECT DISTINCT * FROM rt0 INNER JOIN t0 ON (((((((rt0.c1, t0.c0, t0.c0)) NOT BETWEEN ((NULL, t0.c0, t0.c0)) AND ((rt0.c1, rt0.c0, rt0.c0))))OR(CASE t0.c0  WHEN t0.c0 THEN rt0.c1 END)))OR((((rt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c0))))) WHERE ((NOT (((((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c0))) ISNULL)))) UNION SELECT DISTINCT * FROM rt0 INNER JOIN t0 ON (((((((rt0.c1, t0.c0, t0.c0)) NOT BETWEEN ((NULL, t0.c0, t0.c0)) AND ((rt0.c1, rt0.c0, rt0.c0))))OR(CASE t0.c0  WHEN t0.c0 THEN rt0.c1 END)))OR((((rt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c0))))) WHERE (((((((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c0))) ISNULL)) ISNULL));
SELECT DISTINCT * FROM rt0 INNER JOIN t0 ON (((((((rt0.c1, t0.c0, t0.c0)) NOT BETWEEN ((NULL, t0.c0, t0.c0)) AND ((rt0.c1, rt0.c0, rt0.c0))))OR(CASE t0.c0  WHEN t0.c0 THEN rt0.c1 END)))OR((((rt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c0)))));
SELECT rt0.c1, t0.c0, rt0.c2, rt0.c0 FROM t0 NATURAL JOIN rt0 GROUP BY rt0.c1, t0.c0, rt0.c2, rt0.c0;
SELECT rt0.c1, t0.c0, rt0.c2, rt0.c0 FROM t0 NATURAL JOIN rt0 WHERE (((((t0.c0) IS FALSE)) ISNULL)) GROUP BY rt0.c1, t0.c0, rt0.c2, rt0.c0 UNION SELECT rt0.c1, t0.c0, rt0.c2, rt0.c0 FROM t0 NATURAL JOIN rt0 WHERE ((NOT (((((t0.c0) IS FALSE)) ISNULL)))) GROUP BY rt0.c1, t0.c0, rt0.c2, rt0.c0 UNION SELECT ALL rt0.c1, t0.c0, rt0.c2, rt0.c0 FROM t0 NATURAL JOIN rt0 WHERE (((((((t0.c0) IS FALSE)) ISNULL)) ISNULL)) GROUP BY rt0.c1, t0.c0, rt0.c2, rt0.c0;
SELECT rt0.c1, t0.c0, rt0.c2, rt0.c0 FROM t0 NATURAL JOIN rt0 GROUP BY rt0.c1, t0.c0, rt0.c2, rt0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING TOTAL((((t0.c0)) NOT BETWEEN ((GROUP_CONCAT(TOTAL(MIN(AVG(t0.c0)))))) AND ((t0.c0)))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (TOTAL((((t0.c0)) NOT BETWEEN ((GROUP_CONCAT(TOTAL(MIN(AVG(t0.c0)))))) AND ((t0.c0)))))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((TOTAL((((t0.c0)) NOT BETWEEN ((GROUP_CONCAT(TOTAL(MIN(AVG(t0.c0)))))) AND ((t0.c0))))) ISNULL);
SELECT ALL * FROM rt0;
SELECT * FROM rt0 WHERE (((((((rt0.c0)OR(rt0.c1)))AND(rt0.c0))) NOT BETWEEN ((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1)))) AND (((rt0.c2) NOT NULL)))) UNION ALL SELECT * FROM rt0 WHERE ((NOT (((((((rt0.c0)OR(rt0.c1)))AND(rt0.c0))) NOT BETWEEN ((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1)))) AND (((rt0.c2) NOT NULL)))))) UNION ALL SELECT * FROM rt0 WHERE (((((((((rt0.c0)OR(rt0.c1)))AND(rt0.c0))) NOT BETWEEN ((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1)))) AND (((rt0.c2) NOT NULL)))) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((((rt0.c2) IS TRUE))AND((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c2)))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((((rt0.c2) IS TRUE))AND((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c2)))))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((((rt0.c2) IS TRUE))AND((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c2)))))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 WHERE (MAX(t0.c0, '1601482401', t0.c0, t0.c0) COLLATE NOCASE) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT (MAX(t0.c0, '1601482401', t0.c0, t0.c0) COLLATE NOCASE))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE (((MAX(t0.c0, '1601482401', t0.c0, t0.c0) COLLATE NOCASE) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL rt0.c0 FROM t0, rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM t0, rt0 GROUP BY rt0.c0 HAVING ((COUNT('')) BETWEEN (((rt0.c0) BETWEEN (SUM(MIN(t0.c0))) AND (x''))) AND (COUNT(*) COLLATE NOCASE)) UNION ALL SELECT rt0.c0 FROM t0, rt0 GROUP BY rt0.c0 HAVING (NOT (((COUNT('')) BETWEEN (((rt0.c0) BETWEEN (SUM(MIN(t0.c0))) AND (x''))) AND (COUNT(*) COLLATE NOCASE)))) UNION ALL SELECT ALL rt0.c0 FROM t0, rt0 GROUP BY rt0.c0 HAVING ((((COUNT('')) BETWEEN (((rt0.c0) BETWEEN (SUM(MIN(t0.c0))) AND (x''))) AND (COUNT(*) COLLATE NOCASE))) ISNULL);
SELECT rt0.c1 FROM rt0;
SELECT ALL rt0.c1 FROM rt0 WHERE ((NOT (((rt0.c0)AND(rt0.c0))))) UNION ALL SELECT rt0.c1 FROM rt0 WHERE ((NOT ((NOT (((rt0.c0)AND(rt0.c0))))))) UNION ALL SELECT ALL rt0.c1 FROM rt0 WHERE ((((NOT (((rt0.c0)AND(rt0.c0))))) ISNULL));
SELECT rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c2, t0.c0, rt0.c1 FROM t0 CROSS JOIN rt0 ON (+ (rt0.c0)) COLLATE RTRIM;
SELECT DISTINCT rt0.c2, t0.c0, rt0.c1 FROM t0 CROSS JOIN rt0 ON (+ (rt0.c0)) COLLATE RTRIM WHERE (IFNULL(DISTINCT ((((((((rt0.c0)OR(rt0.c0)))OR(rt0.c2)))OR(rt0.c2)))AND(rt0.c2)), CAST(rt0.c2 AS REAL))) UNION SELECT DISTINCT rt0.c2, t0.c0, rt0.c1 FROM t0 CROSS JOIN rt0 ON (+ (rt0.c0)) COLLATE RTRIM WHERE ((NOT (IFNULL(DISTINCT ((((((((rt0.c0)OR(rt0.c0)))OR(rt0.c2)))OR(rt0.c2)))AND(rt0.c2)), CAST(rt0.c2 AS REAL))))) UNION SELECT DISTINCT rt0.c2, t0.c0, rt0.c1 FROM t0 CROSS JOIN rt0 ON (+ (rt0.c0)) COLLATE RTRIM WHERE (((IFNULL(DISTINCT ((((((((rt0.c0)OR(rt0.c0)))OR(rt0.c2)))OR(rt0.c2)))AND(rt0.c2)), CAST(rt0.c2 AS REAL))) ISNULL));
SELECT DISTINCT rt0.c2, t0.c0, rt0.c1 FROM t0 CROSS JOIN rt0 ON (+ (rt0.c0)) COLLATE RTRIM;
SELECT rt0.c1, rt0.c0 FROM t0, rt0 GROUP BY rt0.c1, rt0.c0;
SELECT rt0.c1, rt0.c0 FROM t0, rt0 WHERE (CAST((((('wTor')AND(rt0.c1)))AND(rt0.c2)) AS NUMERIC)) GROUP BY rt0.c1, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c0 FROM t0, rt0 WHERE ((NOT (CAST((((('wTor')AND(rt0.c1)))AND(rt0.c2)) AS NUMERIC)))) GROUP BY rt0.c1, rt0.c0 UNION SELECT rt0.c1, rt0.c0 FROM t0, rt0 WHERE (((CAST((((('wTor')AND(rt0.c1)))AND(rt0.c2)) AS NUMERIC)) ISNULL)) GROUP BY rt0.c1, rt0.c0;
SELECT rt0.c1, rt0.c0 FROM t0, rt0 GROUP BY rt0.c1, rt0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (- (CASE t0.c0  WHEN MAX(SUM(t0.c0)) THEN x'' WHEN t0.c0 THEN SUM(t0.c0) WHEN COUNT(AVG(COUNT(t0.c0))) THEN TOTAL(MAX(MAX(t0.c0))) ELSE TOTAL(AVG(t0.c0)) END)) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT ((- (CASE t0.c0  WHEN MAX(SUM(t0.c0)) THEN x'' WHEN t0.c0 THEN SUM(t0.c0) WHEN COUNT(AVG(COUNT(t0.c0))) THEN TOTAL(MAX(MAX(t0.c0))) ELSE TOTAL(AVG(t0.c0)) END)))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (((- (CASE t0.c0  WHEN MAX(SUM(t0.c0)) THEN x'' WHEN t0.c0 THEN SUM(t0.c0) WHEN COUNT(AVG(COUNT(t0.c0))) THEN TOTAL(MAX(MAX(t0.c0))) ELSE TOTAL(AVG(t0.c0)) END))) ISNULL);
SELECT t0.c0, rt0.c0 FROM rt0, t0;
SELECT ALL t0.c0, rt0.c0 FROM rt0, t0 WHERE (CAST(((rt0.c1)GLOB(rt0.c2)) AS INTEGER)) UNION ALL SELECT ALL t0.c0, rt0.c0 FROM rt0, t0 WHERE ((NOT (CAST(((rt0.c1)GLOB(rt0.c2)) AS INTEGER)))) UNION ALL SELECT t0.c0, rt0.c0 FROM rt0, t0 WHERE (((CAST(((rt0.c1)GLOB(rt0.c2)) AS INTEGER)) ISNULL));
SELECT t0.c0, rt0.c0 FROM rt0, t0;
SELECT DISTINCT t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0 WHERE (((((t0.c0)<(t0.c0))) BETWEEN (LOWER(t0.c0)) AND (((t0.c0) BETWEEN ('-840441342') AND (t0.c0))))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((NOT (((((t0.c0)<(t0.c0))) BETWEEN (LOWER(t0.c0)) AND (((t0.c0) BETWEEN ('-840441342') AND (t0.c0))))))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE (((((((t0.c0)<(t0.c0))) BETWEEN (LOWER(t0.c0)) AND (((t0.c0) BETWEEN ('-840441342') AND (t0.c0))))) ISNULL));
SELECT DISTINCT t0.c0 FROM t0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE (((NOT (t0.c0)) IN (((t0.c0) IS FALSE)))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT (((NOT (t0.c0)) IN (((t0.c0) IS FALSE)))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE (((((NOT (t0.c0)) IN (((t0.c0) IS FALSE)))) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING ((CAST(SUM(rt0.c1) AS BLOB))OR(COUNT(COUNT(rt0.c1)))) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING (NOT (((CAST(SUM(rt0.c1) AS BLOB))OR(COUNT(COUNT(rt0.c1)))))) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING ((((CAST(SUM(rt0.c1) AS BLOB))OR(COUNT(COUNT(rt0.c1))))) ISNULL);
SELECT ALL MIN(((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))>=(SQLITE_SOURCE_ID()))) FROM t0 ORDER BY ((CAST(t0.c0 AS BLOB)) NOT BETWEEN (0Xffffffffb89f6984) AND (((t0.c0)!=(t0.c0))))  NULLS LAST;
SELECT ALL * FROM rt0;
SELECT * FROM rt0 WHERE (NULL) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (NULL))) UNION ALL SELECT ALL * FROM rt0 WHERE (((NULL) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE (NULL) UNION SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (NULL))) UNION SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE (((NULL) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1 FROM rt0;
SELECT rt0.c0 FROM rt0, t0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0, t0 WHERE (((rt0.c0) NOTNULL)) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM rt0, t0 WHERE ((NOT (((rt0.c0) NOTNULL)))) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM rt0, t0 WHERE (((((rt0.c0) NOTNULL)) ISNULL)) GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0, t0 GROUP BY rt0.c0;
SELECT t0.c0, rt0.c2, rt0.c0 FROM t0, rt0 GROUP BY t0.c0, rt0.c2, rt0.c0;
SELECT ALL t0.c0, rt0.c2, rt0.c0 FROM t0, rt0 GROUP BY t0.c0, rt0.c2, rt0.c0 HAVING MAX(SUM(AVG(AVG(rt0.c1)))) UNION ALL SELECT ALL t0.c0, rt0.c2, rt0.c0 FROM t0, rt0 GROUP BY t0.c0, rt0.c2, rt0.c0 HAVING (NOT (MAX(SUM(AVG(AVG(rt0.c1)))))) UNION ALL SELECT t0.c0, rt0.c2, rt0.c0 FROM t0, rt0 GROUP BY t0.c0, rt0.c2, rt0.c0 HAVING ((MAX(SUM(AVG(AVG(rt0.c1))))) ISNULL);
SELECT t0.c0 FROM t0;
SELECT ALL t0.c0 FROM t0 WHERE (CASE WHEN t0.c0 COLLATE NOCASE THEN ((t0.c0)>=(t0.c0)) ELSE ((t0.c0) BETWEEN (x'') AND (t0.c0)) END) UNION ALL SELECT ALL t0.c0 FROM t0 WHERE ((NOT (CASE WHEN t0.c0 COLLATE NOCASE THEN ((t0.c0)>=(t0.c0)) ELSE ((t0.c0) BETWEEN (x'') AND (t0.c0)) END))) UNION ALL SELECT t0.c0 FROM t0 WHERE (((CASE WHEN t0.c0 COLLATE NOCASE THEN ((t0.c0)>=(t0.c0)) ELSE ((t0.c0) BETWEEN (x'') AND (t0.c0)) END) ISNULL));
SELECT t0.c0 FROM t0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (rtreenode(t0.c0, '2092317771') COLLATE NOCASE) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (rtreenode(t0.c0, '2092317771') COLLATE NOCASE))) UNION SELECT DISTINCT * FROM t0 WHERE (((rtreenode(t0.c0, '2092317771') COLLATE NOCASE) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE (((t0.c0 COLLATE BINARY)IS NOT(((((t0.c0)AND(t0.c0)))OR(t0.c0))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT (((t0.c0 COLLATE BINARY)IS NOT(((((t0.c0)AND(t0.c0)))OR(t0.c0))))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE (((((t0.c0 COLLATE BINARY)IS NOT(((((t0.c0)AND(t0.c0)))OR(t0.c0))))) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL rt0.c1, rt0.c0, rt0.c2, t0.c0 FROM t0, rt0 NOT INDEXED GROUP BY rt0.c1, rt0.c0, rt0.c2, t0.c0;
SELECT ALL rt0.c1, rt0.c0, rt0.c2, t0.c0 FROM t0, rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2, t0.c0 HAVING COUNT(MAX(t0.c0)) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c2, t0.c0 FROM t0, rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2, t0.c0 HAVING (NOT (COUNT(MAX(t0.c0)))) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c2, t0.c0 FROM t0, rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2, t0.c0 HAVING ((COUNT(MAX(t0.c0))) ISNULL);
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE (((CASE WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN NULL WHEN rt0.c0 THEN rt0.c1 WHEN 0.9294442061043683 THEN rt0.c0 END) NOT NULL)) UNION ALL SELECT * FROM rt0 WHERE ((NOT (((CASE WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN NULL WHEN rt0.c0 THEN rt0.c1 WHEN 0.9294442061043683 THEN rt0.c0 END) NOT NULL)))) UNION ALL SELECT ALL * FROM rt0 WHERE (((((CASE WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN NULL WHEN rt0.c0 THEN rt0.c1 WHEN 0.9294442061043683 THEN rt0.c0 END) NOT NULL)) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT * FROM t0, rt0;
SELECT DISTINCT * FROM t0, rt0 WHERE (CASE WHEN (rt0.c0 IN ('0.8575391012596251', t0.c0)) THEN ((-1.552688619E9)>>(rt0.c0)) END) UNION SELECT DISTINCT * FROM t0, rt0 WHERE ((NOT (CASE WHEN (rt0.c0 IN ('0.8575391012596251', t0.c0)) THEN ((-1.552688619E9)>>(rt0.c0)) END))) UNION SELECT DISTINCT * FROM t0, rt0 WHERE (((CASE WHEN (rt0.c0 IN ('0.8575391012596251', t0.c0)) THEN ((-1.552688619E9)>>(rt0.c0)) END) ISNULL));
SELECT DISTINCT * FROM t0, rt0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0, t0.c0 FROM t0 FULL OUTER JOIN rt0 ON CASE WHEN CASE WHEN rt0.c2 THEN '3]ꩯ' WHEN NULL THEN t0.c0 WHEN t0.c0 THEN rt0.c2 END THEN rt0.c0 WHEN (NOT (t0.c0)) THEN t0.c0 WHEN '' THEN CASE WHEN rt0.c2 THEN t0.c0 ELSE rt0.c0 END END GROUP BY rt0.c2, rt0.c1, rt0.c0, t0.c0;
SELECT rt0.c2, rt0.c1, rt0.c0, t0.c0 FROM t0 FULL OUTER JOIN rt0 ON CASE WHEN CASE WHEN rt0.c2 THEN '3]ꩯ' WHEN NULL THEN t0.c0 WHEN t0.c0 THEN rt0.c2 END THEN rt0.c0 WHEN (NOT (t0.c0)) THEN t0.c0 WHEN '' THEN CASE WHEN rt0.c2 THEN t0.c0 ELSE rt0.c0 END END WHERE ((~ (((rt0.c0) IS TRUE)))) GROUP BY rt0.c2, rt0.c1, rt0.c0, t0.c0 UNION SELECT rt0.c2, rt0.c1, rt0.c0, t0.c0 FROM t0 FULL OUTER JOIN rt0 ON CASE WHEN CASE WHEN rt0.c2 THEN '3]ꩯ' WHEN NULL THEN t0.c0 WHEN t0.c0 THEN rt0.c2 END THEN rt0.c0 WHEN (NOT (t0.c0)) THEN t0.c0 WHEN '' THEN CASE WHEN rt0.c2 THEN t0.c0 ELSE rt0.c0 END END WHERE ((NOT ((~ (((rt0.c0) IS TRUE)))))) GROUP BY rt0.c2, rt0.c1, rt0.c0, t0.c0 UNION SELECT ALL rt0.c2, rt0.c1, rt0.c0, t0.c0 FROM t0 FULL OUTER JOIN rt0 ON CASE WHEN CASE WHEN rt0.c2 THEN '3]ꩯ' WHEN NULL THEN t0.c0 WHEN t0.c0 THEN rt0.c2 END THEN rt0.c0 WHEN (NOT (t0.c0)) THEN t0.c0 WHEN '' THEN CASE WHEN rt0.c2 THEN t0.c0 ELSE rt0.c0 END END WHERE ((((~ (((rt0.c0) IS TRUE)))) ISNULL)) GROUP BY rt0.c2, rt0.c1, rt0.c0, t0.c0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0, t0.c0 FROM t0 FULL OUTER JOIN rt0 ON CASE WHEN CASE WHEN rt0.c2 THEN '3]ꩯ' WHEN NULL THEN t0.c0 WHEN t0.c0 THEN rt0.c2 END THEN rt0.c0 WHEN (NOT (t0.c0)) THEN t0.c0 WHEN '' THEN CASE WHEN rt0.c2 THEN t0.c0 ELSE rt0.c0 END END GROUP BY rt0.c2, rt0.c1, rt0.c0, t0.c0;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (+ (((rt0.c0)LIKE(rt0.c2)))) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT ((+ (((rt0.c0)LIKE(rt0.c2)))))) UNION ALL SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (((+ (((rt0.c0)LIKE(rt0.c2))))) ISNULL);
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (+ (((rt0.c0)LIKE(rt0.c2)))) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT ((+ (((rt0.c0)LIKE(rt0.c2)))))) UNION ALL SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (((+ (((rt0.c0)LIKE(rt0.c2))))) ISNULL);
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c0, rt0.c2 FROM rt0;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 WHERE (((CAST(rt0.c2 AS BLOB))=(((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1))))) UNION ALL SELECT rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (((CAST(rt0.c2 AS BLOB))=(((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1))))))) UNION ALL SELECT rt0.c0, rt0.c2 FROM rt0 WHERE (((((CAST(rt0.c2 AS BLOB))==(((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1))))) ISNULL));
SELECT rt0.c0, rt0.c2 FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((((((((rt0.c0)AND(rt0.c2)))OR(rt0.c0)), CAST(rt0.c1 AS REAL), ((rt0.c0) IS FALSE), (((rt0.c0, rt0.c1, rt0.c2, rt0.c2, 1560550400))>((rt0.c2, rt0.c1, rt0.c1, rt0.c0, rt0.c0))), (((rt0.c0))!=((rt0.c0)))))!=((CAST(rt0.c2 AS TEXT), ((rt0.c2)<(rt0.c0)), CAST(rt0.c1 AS TEXT), (NOT (rt0.c1)), (((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1))))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((((((((rt0.c0)AND(rt0.c2)))OR(rt0.c0)), CAST(rt0.c1 AS REAL), ((rt0.c0) IS FALSE), (((rt0.c0, rt0.c1, rt0.c2, rt0.c2, 1560550400))>((rt0.c2, rt0.c1, rt0.c1, rt0.c0, rt0.c0))), (((rt0.c0))!=((rt0.c0)))))!=((CAST(rt0.c2 AS TEXT), ((rt0.c2)<(rt0.c0)), CAST(rt0.c1 AS TEXT), (NOT (rt0.c1)), (((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1))))))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((((((((rt0.c0)AND(rt0.c2)))OR(rt0.c0)), CAST(rt0.c1 AS REAL), ((rt0.c0) IS FALSE), (((rt0.c0, rt0.c1, rt0.c2, rt0.c2, 1560550400))>((rt0.c2, rt0.c1, rt0.c1, rt0.c0, rt0.c0))), (((rt0.c0))!=((rt0.c0)))))<>((CAST(rt0.c2 AS TEXT), ((rt0.c2)<(rt0.c0)), CAST(rt0.c1 AS TEXT), (NOT (rt0.c1)), (((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1))))))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM t0, rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM t0, rt0 WHERE (CAST(CAST(x'8fab' AS INTEGER) AS NUMERIC)) GROUP BY rt0.c0, rt0.c1, rt0.c2 UNION SELECT rt0.c0, rt0.c1, rt0.c2 FROM t0, rt0 WHERE ((NOT (CAST(CAST(x'8fab' AS INTEGER) AS NUMERIC)))) GROUP BY rt0.c0, rt0.c1, rt0.c2 UNION SELECT rt0.c0, rt0.c1, rt0.c2 FROM t0, rt0 WHERE (((CAST(CAST(x'8fab' AS INTEGER) AS NUMERIC)) ISNULL)) GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM t0, rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, t0.c0, rt0.c1, rt0.c2 FROM rt0, t0 GROUP BY rt0.c0, t0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, t0.c0, rt0.c1, rt0.c2 FROM rt0, t0 GROUP BY rt0.c0, t0.c0, rt0.c1, rt0.c2 HAVING ((TOTAL(rt0.c1))IS(COUNT(*))) UNION ALL SELECT ALL rt0.c0, t0.c0, rt0.c1, rt0.c2 FROM rt0, t0 GROUP BY rt0.c0, t0.c0, rt0.c1, rt0.c2 HAVING (NOT (((TOTAL(rt0.c1))IS(COUNT(*))))) UNION ALL SELECT rt0.c0, t0.c0, rt0.c1, rt0.c2 FROM rt0, t0 GROUP BY rt0.c0, t0.c0, rt0.c1, rt0.c2 HAVING ((((TOTAL(rt0.c1))IS(COUNT(*)))) ISNULL);
SELECT ALL rt0.c0, t0.c0, rt0.c1, rt0.c2 FROM rt0, t0 GROUP BY rt0.c0, t0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, t0.c0, rt0.c1, rt0.c2 FROM rt0, t0 GROUP BY rt0.c0, t0.c0, rt0.c1, rt0.c2 HAVING ((TOTAL(rt0.c1))IS(COUNT(*))) UNION ALL SELECT ALL rt0.c0, t0.c0, rt0.c1, rt0.c2 FROM rt0, t0 GROUP BY rt0.c0, t0.c0, rt0.c1, rt0.c2 HAVING (NOT (((TOTAL(rt0.c1))IS(COUNT(*))))) UNION ALL SELECT rt0.c0, t0.c0, rt0.c1, rt0.c2 FROM rt0, t0 GROUP BY rt0.c0, t0.c0, rt0.c1, rt0.c2 HAVING ((((TOTAL(rt0.c1))IS(COUNT(*)))) ISNULL);
SELECT ALL rt0.c0, t0.c0, rt0.c1, rt0.c2 FROM rt0, t0 GROUP BY rt0.c0, t0.c0, rt0.c1, rt0.c2;
SELECT * FROM rt0 NATURAL JOIN t0;
SELECT * FROM rt0 NATURAL JOIN t0 WHERE (CASE ((((t0.c0)AND(t0.c0)))AND(rt0.c2))  WHEN ((rt0.c0)IS NOT(rt0.c1)) THEN ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1)) WHEN ((((((((rt0.c2)AND(t0.c0)))OR(rt0.c0)))OR(rt0.c2)))AND(rt0.c1)) THEN (t0.c0 IN ()) WHEN ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0)) THEN ((t0.c0)&(rt0.c2)) ELSE 957934553 END) UNION ALL SELECT * FROM rt0 NATURAL JOIN t0 WHERE ((NOT (CASE ((((t0.c0)AND(t0.c0)))AND(rt0.c2))  WHEN ((rt0.c0)IS NOT(rt0.c1)) THEN ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1)) WHEN ((((((((rt0.c2)AND(t0.c0)))OR(rt0.c0)))OR(rt0.c2)))AND(rt0.c1)) THEN (t0.c0 IN ()) WHEN ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0)) THEN ((t0.c0)&(rt0.c2)) ELSE 957934553 END))) UNION ALL SELECT * FROM rt0 NATURAL JOIN t0 WHERE (((CASE ((((t0.c0)AND(t0.c0)))AND(rt0.c2))  WHEN ((rt0.c0)IS NOT(rt0.c1)) THEN ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1)) WHEN ((((((((rt0.c2)AND(t0.c0)))OR(rt0.c0)))OR(rt0.c2)))AND(rt0.c1)) THEN (t0.c0 IN ()) WHEN ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0)) THEN ((t0.c0)&(rt0.c2)) ELSE 957934553 END) ISNULL));
SELECT * FROM rt0 NATURAL JOIN t0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((((rt0.c0)|(rt0.c2)))IS NOT((rt0.c0 IN ())))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((((rt0.c0)|(rt0.c2)))IS NOT((rt0.c0 IN ())))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((((rt0.c0)|(rt0.c2)))IS NOT((rt0.c0 IN ())))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c0, t0.c0, rt0.c1 FROM rt0, t0 GROUP BY rt0.c0, t0.c0, rt0.c1;
SELECT ALL rt0.c0, t0.c0, rt0.c1 FROM rt0, t0 WHERE (((((((((CASE 0.41680071885505443  WHEN rt0.c2 THEN rt0.c2 END)OR(CAST(t0.c0 AS INTEGER))))AND(((t0.c0) NOTNULL))))AND(((NULL) NOT BETWEEN (t0.c0) AND (rt0.c0)))))OR(((((rt0.c2)AND(rt0.c1)))AND(rt0.c0))))) GROUP BY rt0.c0, t0.c0, rt0.c1 UNION SELECT rt0.c0, t0.c0, rt0.c1 FROM rt0, t0 WHERE ((NOT (((((((((CASE 0.41680071885505443  WHEN rt0.c2 THEN rt0.c2 END)OR(CAST(t0.c0 AS INTEGER))))AND(((t0.c0) NOTNULL))))AND(((NULL) NOT BETWEEN (t0.c0) AND (rt0.c0)))))OR(((((rt0.c2)AND(rt0.c1)))AND(rt0.c0))))))) GROUP BY rt0.c0, t0.c0, rt0.c1 UNION SELECT rt0.c0, t0.c0, rt0.c1 FROM rt0, t0 NOT INDEXED WHERE (((((((((((CASE 0.41680071885505443  WHEN rt0.c2 THEN rt0.c2 END)OR(CAST(t0.c0 AS INTEGER))))AND(((t0.c0) NOTNULL))))AND(((NULL) NOT BETWEEN (t0.c0) AND (rt0.c0)))))OR(((((rt0.c2)AND(rt0.c1)))AND(rt0.c0))))) ISNULL)) GROUP BY rt0.c0, t0.c0, rt0.c1;
SELECT ALL rt0.c0, t0.c0, rt0.c1 FROM rt0, t0 GROUP BY rt0.c0, t0.c0, rt0.c1;
SELECT ALL t0.c0, rt0.c0, rt0.c1, rt0.c2 FROM t0, rt0 GROUP BY t0.c0, rt0.c0, rt0.c1, rt0.c2;
SELECT t0.c0, rt0.c0, rt0.c1, rt0.c2 FROM t0, rt0 GROUP BY t0.c0, rt0.c0, rt0.c1, rt0.c2 HAVING (NOT (COUNT(AVG(MAX(MAX(MAX(MIN(AVG(rt0.c2))))))))) COLLATE RTRIM UNION ALL SELECT ALL t0.c0, rt0.c0, rt0.c1, rt0.c2 FROM t0, rt0 GROUP BY t0.c0, rt0.c0, rt0.c1, rt0.c2 HAVING (NOT ((NOT (COUNT(AVG(MAX(MAX(MAX(MIN(AVG(rt0.c2))))))))) COLLATE RTRIM)) UNION ALL SELECT ALL t0.c0, rt0.c0, rt0.c1, rt0.c2 FROM t0, rt0 GROUP BY t0.c0, rt0.c0, rt0.c1, rt0.c2 HAVING (((NOT (COUNT(AVG(MAX(MAX(MAX(MIN(AVG(rt0.c2))))))))) COLLATE RTRIM) ISNULL);
SELECT t0.c0 FROM t0;
SELECT ALL t0.c0 FROM t0 WHERE (((t0.c0)*((NOT (t0.c0))))) UNION ALL SELECT ALL t0.c0 FROM t0 WHERE ((NOT (((t0.c0)*((NOT (t0.c0))))))) UNION ALL SELECT ALL t0.c0 FROM t0 WHERE (((((t0.c0)*((NOT (t0.c0))))) ISNULL));
SELECT t0.c0 FROM t0;
SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1 FROM t0, rt0;
SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1 FROM t0, rt0 WHERE ((+ (rt0.c0)) COLLATE RTRIM) UNION SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1 FROM t0, rt0 WHERE ((NOT ((+ (rt0.c0)) COLLATE RTRIM))) UNION SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1 FROM t0, rt0 WHERE ((((+ (rt0.c0)) COLLATE RTRIM) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1 FROM t0, rt0;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE (((((rt0.c0) ISNULL))>>(rt0.c1))) GROUP BY rt0.c0, rt0.c1, rt0.c2 UNION SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (((((rt0.c0) ISNULL))>>(rt0.c1))))) GROUP BY rt0.c0, rt0.c1, rt0.c2 UNION SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE (((((((rt0.c0) ISNULL))>>(rt0.c1))) ISNULL)) GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((MAX(AVG(t0.c0))) NOT BETWEEN ((((SUM(t0.c0))) NOT BETWEEN ((-1844795600)) AND ((TOTAL(t0.c0))))) AND (MIN(t0.c0))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (((MAX(AVG(t0.c0))) NOT BETWEEN ((((SUM(t0.c0))) NOT BETWEEN ((-1844795600)) AND ((TOTAL(t0.c0))))) AND (MIN(t0.c0))))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((((MAX(AVG(t0.c0))) NOT BETWEEN ((((SUM(t0.c0))) NOT BETWEEN ((-1844795600)) AND ((TOTAL(t0.c0))))) AND (MIN(t0.c0)))) ISNULL);
SELECT ALL * FROM t0;
SELECT * FROM t0 WHERE ((NOT (((((t0.c0)OR(t0.c0)))AND(t0.c0))))) UNION ALL SELECT ALL * FROM t0 WHERE ((NOT ((NOT (((((t0.c0)OR(t0.c0)))AND(t0.c0))))))) UNION ALL SELECT ALL * FROM t0 WHERE ((((NOT (((((t0.c0)OR(t0.c0)))AND(t0.c0))))) ISNULL));
SELECT ALL * FROM t0;
SELECT DISTINCT t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0 WHERE ((- (CAST(t0.c0 AS TEXT)))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((NOT ((- (CAST(t0.c0 AS TEXT)))))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((((- (CAST(t0.c0 AS TEXT)))) ISNULL));
SELECT DISTINCT t0.c0 FROM t0;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 WHERE ((((+ (rt0.c0)))<<(((rt0.c1)LIKE(rt0.c0))))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0 WHERE ((NOT ((((+ (rt0.c0)))<<(((rt0.c1)LIKE(rt0.c0))))))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0 WHERE ((((((+ (rt0.c0)))<<(((rt0.c1)LIKE(rt0.c0))))) ISNULL)) GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING GROUP_CONCAT(SUM(TOTAL(t0.c0))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (GROUP_CONCAT(SUM(TOTAL(t0.c0))))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((GROUP_CONCAT(SUM(TOTAL(t0.c0)))) ISNULL);
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE (CAST(rt0.c2 AS TEXT)) UNION ALL SELECT * FROM rt0 WHERE ((NOT (CAST(rt0.c2 AS TEXT)))) UNION ALL SELECT * FROM rt0 WHERE (((CAST(rt0.c2 AS TEXT)) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c0 FROM rt0 WHERE (((rt0.c0 COLLATE NOCASE) IS FALSE)) UNION SELECT DISTINCT rt0.c0 FROM rt0 WHERE ((NOT (((rt0.c0 COLLATE NOCASE) IS FALSE)))) UNION SELECT DISTINCT rt0.c0 FROM rt0 WHERE (((((rt0.c0 COLLATE NOCASE) IS FALSE)) ISNULL));
SELECT DISTINCT rt0.c0 FROM rt0;
SELECT rt0.c2, t0.c0, rt0.c0, rt0.c1 FROM t0, rt0 GROUP BY rt0.c2, t0.c0, rt0.c0, rt0.c1;
SELECT rt0.c2, t0.c0, rt0.c0, rt0.c1 FROM t0, rt0 WHERE (TYPEOF(DISTINCT (t0.c0 IN ()))) GROUP BY rt0.c2, t0.c0, rt0.c0, rt0.c1 UNION SELECT ALL rt0.c2, t0.c0, rt0.c0, rt0.c1 FROM t0, rt0 WHERE ((NOT (TYPEOF(DISTINCT (t0.c0 IN ()))))) GROUP BY rt0.c2, t0.c0, rt0.c0, rt0.c1 UNION SELECT rt0.c2, t0.c0, rt0.c0, rt0.c1 FROM t0, rt0 WHERE (((TYPEOF(DISTINCT (t0.c0 IN ()))) ISNULL)) GROUP BY rt0.c2, t0.c0, rt0.c0, rt0.c1;
SELECT rt0.c2, t0.c0, rt0.c0, rt0.c1 FROM t0, rt0 GROUP BY rt0.c2, t0.c0, rt0.c0, rt0.c1;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING GROUP_CONCAT((GROUP_CONCAT(t0.c0) IN ())) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (GROUP_CONCAT((GROUP_CONCAT(t0.c0) IN ())))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((GROUP_CONCAT((GROUP_CONCAT(t0.c0) IN ()))) ISNULL);
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING GROUP_CONCAT((GROUP_CONCAT(t0.c0) IN ())) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (GROUP_CONCAT((GROUP_CONCAT(t0.c0) IN ())))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((GROUP_CONCAT((GROUP_CONCAT(t0.c0) IN ()))) ISNULL);
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT TOTAL((~ (((rt0.c1) NOT BETWEEN (NULL) AND (rt0.c0))))) FROM rt0;
SELECT * FROM t0;
SELECT ALL * FROM t0 WHERE (((((t0.c0)>(t0.c0)))AND(NULLIF('Ok', t0.c0)))) UNION ALL SELECT * FROM t0 WHERE ((NOT (((((t0.c0)>(t0.c0)))AND(NULLIF('Ok', t0.c0)))))) UNION ALL SELECT * FROM t0 WHERE (((((((t0.c0)>(t0.c0)))AND(NULLIF('Ok', t0.c0)))) ISNULL));
SELECT * FROM t0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (t0.c0) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (t0.c0))) UNION SELECT DISTINCT * FROM t0 WHERE (((t0.c0) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 WHERE (((t0.c0)>(t0.c0)) COLLATE NOCASE) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT (((t0.c0)>(t0.c0)) COLLATE NOCASE))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE (((((t0.c0)>(t0.c0)) COLLATE NOCASE) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING MAX(((COUNT(GROUP_CONCAT(COUNT(rt0.c1)))) NOT BETWEEN (TOTAL(rt0.c1)) AND (COUNT(rt0.c1)))) UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT (MAX(((COUNT(GROUP_CONCAT(COUNT(rt0.c1)))) NOT BETWEEN (TOTAL(rt0.c1)) AND (COUNT(rt0.c1)))))) UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING ((MAX(((COUNT(GROUP_CONCAT(COUNT(rt0.c1)))) NOT BETWEEN (TOTAL(rt0.c1)) AND (COUNT(rt0.c1))))) ISNULL);
SELECT ALL * FROM t0;
SELECT ALL * FROM t0 WHERE (CAST(COALESCE(DISTINCT t0.c0, t0.c0) AS REAL)) UNION ALL SELECT ALL * FROM t0 WHERE ((NOT (CAST(COALESCE(DISTINCT t0.c0, t0.c0) AS REAL)))) UNION ALL SELECT ALL * FROM t0 WHERE (((CAST(COALESCE(DISTINCT t0.c0, t0.c0) AS REAL)) ISNULL));
SELECT ALL * FROM t0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((CAST(rt0.c1 AS TEXT) IN ())) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((CAST(rt0.c1 AS TEXT) IN ())))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((CAST(rt0.c1 AS TEXT) IN ())) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((((rt0.c1)) BETWEEN ((((rt0.c2) BETWEEN (0.0017303468235302377) AND (rt0.c1)))) AND ((((rt0.c2)/(rt0.c2)))))) GROUP BY rt0.c2, rt0.c1, rt0.c0 UNION SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT ((((rt0.c1)) BETWEEN ((((rt0.c2) BETWEEN (0.0017303468235302377) AND (rt0.c1)))) AND ((((rt0.c2)/(rt0.c2)))))))) GROUP BY rt0.c2, rt0.c1, rt0.c0 UNION SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((((((rt0.c1)) BETWEEN ((((rt0.c2) BETWEEN (0.0017303468235302377) AND (rt0.c1)))) AND ((((rt0.c2)/(rt0.c2)))))) ISNULL)) GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT ALL rt0.c2, t0.c0 FROM rt0 LEFT OUTER JOIN t0 ON ((rt0.c1)&(rt0.c1)) COLLATE NOCASE GROUP BY rt0.c2, t0.c0;
SELECT rt0.c2, t0.c0 FROM rt0 LEFT OUTER JOIN t0 ON ((rt0.c1)&(rt0.c1)) COLLATE NOCASE GROUP BY rt0.c2, t0.c0 HAVING ((SUM(MAX(rt0.c1)))GLOB(((((((((MAX(rt0.c2))OR(rt0.c1)))AND(GROUP_CONCAT(GROUP_CONCAT(COUNT(*))))))OR(SUM(AVG(t0.c0)))))OR(GROUP_CONCAT(SUM(TOTAL(AVG(COUNT(rt0.c1))))))))) UNION ALL SELECT ALL rt0.c2, t0.c0 FROM rt0 LEFT OUTER JOIN t0 ON ((rt0.c1)&(rt0.c1)) COLLATE NOCASE GROUP BY rt0.c2, t0.c0 HAVING (NOT (((SUM(MAX(rt0.c1)))GLOB(((((((((MAX(rt0.c2))OR(rt0.c1)))AND(GROUP_CONCAT(GROUP_CONCAT(COUNT(*))))))OR(SUM(AVG(t0.c0)))))OR(GROUP_CONCAT(SUM(TOTAL(AVG(COUNT(rt0.c1))))))))))) UNION ALL SELECT ALL rt0.c2, t0.c0 FROM rt0 LEFT OUTER JOIN t0 ON ((rt0.c1)&(rt0.c1)) COLLATE NOCASE GROUP BY rt0.c2, t0.c0 HAVING ((((SUM(MAX(rt0.c1)))GLOB(((((((((MAX(rt0.c2))OR(rt0.c1)))AND(GROUP_CONCAT(GROUP_CONCAT(COUNT(*))))))OR(SUM(AVG(t0.c0)))))OR(GROUP_CONCAT(SUM(TOTAL(AVG(COUNT(rt0.c1)))))))))) ISNULL);
SELECT ALL * FROM t0, rt0;
SELECT ALL * FROM t0, rt0 WHERE (((((rt0.c2))=((rt0.c1))) IN ())) UNION ALL SELECT * FROM t0, rt0 WHERE ((NOT (((((rt0.c2))=((rt0.c1))) IN ())))) UNION ALL SELECT * FROM t0, rt0 WHERE (((((((rt0.c2))=((rt0.c1))) IN ())) ISNULL));
SELECT ALL * FROM t0, rt0;
SELECT DISTINCT rt0.c0, rt0.c2, t0.c0 FROM rt0 NATURAL JOIN t0;
SELECT DISTINCT rt0.c0, rt0.c2, t0.c0 FROM rt0 NATURAL JOIN t0 WHERE (((((('0.20121696981509118') NOT NULL), x'', (~ (rt0.c2))))<=((rt0.c1 COLLATE RTRIM, t0.c0, ((((rt0.c2)OR(rt0.c0)))OR(t0.c0)))))) UNION SELECT DISTINCT rt0.c0, rt0.c2, t0.c0 FROM rt0 NOT INDEXED NATURAL JOIN t0 WHERE ((NOT (((((('0.20121696981509118') NOT NULL), x'', (~ (rt0.c2))))<=((rt0.c1 COLLATE RTRIM, t0.c0, ((((rt0.c2)OR(rt0.c0)))OR(t0.c0)))))))) UNION SELECT DISTINCT rt0.c0, rt0.c2, t0.c0 FROM rt0 NATURAL JOIN t0 WHERE (((((((('0.20121696981509118') NOT NULL), x'', (~ (rt0.c2))))<=((rt0.c1 COLLATE RTRIM, t0.c0, ((((rt0.c2)OR(rt0.c0)))OR(t0.c0)))))) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c2, t0.c0 FROM rt0 NATURAL JOIN t0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE ((((((t0.c0, t0.c0, t0.c0))<=((t0.c0, t0.c0, t0.c0)))) BETWEEN ('-1071466104' COLLATE RTRIM) AND (0.5390491308208084))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT ((((((t0.c0, t0.c0, t0.c0))<=((t0.c0, t0.c0, t0.c0)))) BETWEEN ('-1071466104' COLLATE RTRIM) AND (0.5390491308208084))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((((((((t0.c0, t0.c0, t0.c0))<=((t0.c0, t0.c0, t0.c0)))) BETWEEN ('-1071466104' COLLATE RTRIM) AND (0.5390491308208084))) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING MAX((NOT (GROUP_CONCAT(t0.c0)))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (MAX((NOT (GROUP_CONCAT(t0.c0)))))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((MAX((NOT (GROUP_CONCAT(t0.c0))))) ISNULL);
SELECT t0.c0, rt0.c2, rt0.c0, rt0.c1 FROM rt0 INNER JOIN t0 ON ((((((((t0.c0)OR(rt0.c0)))OR(rt0.c2)))OR(((rt0.c2) NOT BETWEEN (t0.c0) AND (t0.c0)))))AND(x''));
SELECT t0.c0, rt0.c2, rt0.c0, rt0.c1 FROM rt0 INNER JOIN t0 ON ((((((((t0.c0)OR(rt0.c0)))OR(rt0.c2)))OR(((rt0.c2) NOT BETWEEN (t0.c0) AND (t0.c0)))))AND(x'')) WHERE (CASE NULL  WHEN CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c0 END THEN t0.c0 COLLATE NOCASE END) UNION ALL SELECT t0.c0, rt0.c2, rt0.c0, rt0.c1 FROM rt0 INNER JOIN t0 ON ((((((((t0.c0)OR(rt0.c0)))OR(rt0.c2)))OR(((rt0.c2) NOT BETWEEN (t0.c0) AND (t0.c0)))))AND(x'')) WHERE ((NOT (CASE NULL  WHEN CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c0 END THEN t0.c0 COLLATE NOCASE END))) UNION ALL SELECT t0.c0, rt0.c2, rt0.c0, rt0.c1 FROM rt0 INNER JOIN t0 ON ((((((((t0.c0)OR(rt0.c0)))OR(rt0.c2)))OR(((rt0.c2) NOT BETWEEN (t0.c0) AND (t0.c0)))))AND(x'')) WHERE (((CASE NULL  WHEN CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c0 END THEN t0.c0 COLLATE NOCASE END) ISNULL));
SELECT t0.c0, rt0.c2, rt0.c0, rt0.c1 FROM rt0 INNER JOIN t0 ON ((((((((t0.c0)OR(rt0.c0)))OR(rt0.c2)))OR(((rt0.c2) NOT BETWEEN (t0.c0) AND (t0.c0)))))AND(x''));
SELECT DISTINCT rt0.c2 FROM rt0 CROSS JOIN t0 ON CASE (rt0.c0 IN ())  WHEN CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 END THEN (t0.c0 IN ()) ELSE (rt0.c1 IN (rt0.c2, rt0.c0)) END;
SELECT DISTINCT rt0.c2 FROM rt0 CROSS JOIN t0 ON CASE (rt0.c0 IN ())  WHEN CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 END THEN (t0.c0 IN ()) ELSE (rt0.c1 IN (rt0.c2, rt0.c0)) END WHERE (((((t0.c0)OR(((NULL)>(rt0.c2)))))OR(CAST(rt0.c0 AS REAL)))) UNION SELECT DISTINCT rt0.c2 FROM rt0 CROSS JOIN t0 ON CASE (rt0.c0 IN ())  WHEN CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 END THEN (t0.c0 IN ()) ELSE (rt0.c1 IN (rt0.c2, rt0.c0)) END WHERE ((NOT (((((t0.c0)OR(((NULL)>(rt0.c2)))))OR(CAST(rt0.c0 AS REAL)))))) UNION SELECT DISTINCT rt0.c2 FROM rt0 CROSS JOIN t0 ON CASE (rt0.c0 IN ())  WHEN CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 END THEN (t0.c0 IN ()) ELSE (rt0.c1 IN (rt0.c2, rt0.c0)) END WHERE (((((((t0.c0)OR(((NULL)>(rt0.c2)))))OR(CAST(rt0.c0 AS REAL)))) ISNULL));
SELECT DISTINCT rt0.c2 FROM rt0 CROSS JOIN t0 ON CASE (rt0.c0 IN ())  WHEN CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 END THEN (t0.c0 IN ()) ELSE (rt0.c1 IN (rt0.c2, rt0.c0)) END;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (CASE WHEN CAST(rt0.c1 AS TEXT) THEN ((rt0.c2)&(rt0.c1)) END) GROUP BY rt0.c1, rt0.c0, rt0.c2 UNION SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (CASE WHEN CAST(rt0.c1 AS TEXT) THEN ((rt0.c2)&(rt0.c1)) END))) GROUP BY rt0.c1, rt0.c0, rt0.c2 UNION SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (((CASE WHEN CAST(rt0.c1 AS TEXT) THEN ((rt0.c2)&(rt0.c1)) END) ISNULL)) GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c1 FROM rt0, t0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0, t0 GROUP BY rt0.c1 HAVING ((COUNT(*))|((((rt0.c0))!=((MIN(t0.c0)))))) UNION ALL SELECT ALL rt0.c1 FROM rt0, t0 GROUP BY rt0.c1 HAVING (NOT (((COUNT(*))|((((rt0.c0))<>((MIN(t0.c0)))))))) UNION ALL SELECT rt0.c1 FROM rt0, t0 GROUP BY rt0.c1 HAVING ((((COUNT(*))|((((rt0.c0))<>((MIN(t0.c0))))))) ISNULL);
SELECT ALL rt0.c1 FROM rt0, t0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0, t0 GROUP BY rt0.c1 HAVING ((COUNT(*))|((((rt0.c0))!=((MIN(t0.c0)))))) UNION ALL SELECT ALL rt0.c1 FROM rt0, t0 GROUP BY rt0.c1 HAVING (NOT (((COUNT(*))|((((rt0.c0))<>((MIN(t0.c0)))))))) UNION ALL SELECT rt0.c1 FROM rt0, t0 GROUP BY rt0.c1 HAVING ((((COUNT(*))|((((rt0.c0))<>((MIN(t0.c0))))))) ISNULL);
SELECT ALL rt0.c1 FROM rt0, t0 GROUP BY rt0.c1;
SELECT * FROM t0, rt0;
SELECT ALL * FROM t0, rt0 WHERE (((((rt0.c2)IS NOT(rt0.c0)))<<(CAST(rt0.c2 AS NUMERIC)))) UNION ALL SELECT ALL * FROM t0, rt0 WHERE ((NOT (((((rt0.c2)IS NOT(rt0.c0)))<<(CAST(rt0.c2 AS NUMERIC)))))) UNION ALL SELECT ALL * FROM t0, rt0 WHERE (((((((rt0.c2)IS NOT(rt0.c0)))<<(CAST(rt0.c2 AS NUMERIC)))) ISNULL));
SELECT * FROM t0, rt0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (((((t0.c0)GLOB(t0.c0)))IS(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (((((t0.c0)GLOB(t0.c0)))IS(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))))) UNION SELECT DISTINCT * FROM t0 WHERE (((((((t0.c0)GLOB(t0.c0)))IS(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT rt0.c1 FROM t0, rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM t0, rt0 WHERE (LOWER(((rt0.c2) IS FALSE))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM t0, rt0 WHERE ((NOT (LOWER(((rt0.c2) IS FALSE))))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM t0, rt0 WHERE (((LOWER(((rt0.c2) IS FALSE))) ISNULL)) GROUP BY rt0.c1;
SELECT rt0.c1 FROM t0, rt0 GROUP BY rt0.c1;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (COUNT(*) IN (SUM(t0.c0))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT ((COUNT(*) IN (SUM(t0.c0))))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (((COUNT(*) IN (SUM(t0.c0)))) ISNULL);
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (COUNT(*) IN (SUM(t0.c0))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT ((COUNT(*) IN (SUM(t0.c0))))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (((COUNT(*) IN (SUM(t0.c0)))) ISNULL);
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL * FROM rt0, t0;
SELECT ALL * FROM rt0, t0 WHERE (t0.c0) UNION ALL SELECT * FROM rt0, t0 WHERE ((NOT (t0.c0))) UNION ALL SELECT ALL * FROM rt0, t0 WHERE (((t0.c0) ISNULL));
SELECT ALL * FROM rt0, t0;
SELECT DISTINCT rt0.c0 FROM rt0, t0;
SELECT DISTINCT rt0.c0 FROM rt0, t0 WHERE (CAST(rt0.c1 AS INTEGER)) UNION SELECT DISTINCT rt0.c0 FROM rt0 NOT INDEXED, t0 WHERE ((NOT (CAST(rt0.c1 AS INTEGER)))) UNION SELECT DISTINCT rt0.c0 FROM rt0, t0 WHERE (((CAST(rt0.c1 AS INTEGER)) ISNULL));
SELECT DISTINCT rt0.c0 FROM rt0, t0;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 WHERE ((((rt0.c2, rt0.c0, rt0.c2)) NOT BETWEEN ((((rt0.c0) IS FALSE), CASE rt0.c2  WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END, (rt0.c1 IN ()))) AND ((((rt0.c0) NOT NULL), ((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2)), (rt0.c2 IN ()))))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0 WHERE ((NOT ((((rt0.c2, rt0.c0, rt0.c2)) NOT BETWEEN ((((rt0.c0) IS FALSE), CASE rt0.c2  WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END, (rt0.c1 IN ()))) AND ((((rt0.c0) NOT NULL), ((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2)), (rt0.c2 IN ()))))))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0 WHERE ((((((rt0.c2, rt0.c0, rt0.c2)) NOT BETWEEN ((((rt0.c0) IS FALSE), CASE rt0.c2  WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END, (rt0.c1 IN ()))) AND ((((rt0.c0) NOT NULL), ((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2)), (rt0.c2 IN ()))))) ISNULL)) GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c1, t0.c0, rt0.c2, rt0.c0 FROM rt0, t0 GROUP BY rt0.c1, t0.c0, rt0.c2, rt0.c0;
SELECT ALL rt0.c1, t0.c0, rt0.c2, rt0.c0 FROM rt0, t0 GROUP BY rt0.c1, t0.c0, rt0.c2, rt0.c0 HAVING COUNT(MIN(t0.c0)) UNION ALL SELECT ALL rt0.c1, t0.c0, rt0.c2, rt0.c0 FROM rt0, t0 GROUP BY rt0.c1, t0.c0, rt0.c2, rt0.c0 HAVING (NOT (COUNT(MIN(t0.c0)))) UNION ALL SELECT ALL rt0.c1, t0.c0, rt0.c2, rt0.c0 FROM rt0, t0 GROUP BY rt0.c1, t0.c0, rt0.c2, rt0.c0 HAVING ((COUNT(MIN(t0.c0))) ISNULL);
SELECT MIN(0xfffffffff37a922e) FROM rt0, t0 ORDER BY rt0.c2;
SELECT ALL t0.c0 FROM t0;
SELECT ALL t0.c0 FROM t0 WHERE ((+ (((((t0.c0)AND(t0.c0)))OR(t0.c0))))) UNION ALL SELECT t0.c0 FROM t0 WHERE ((NOT ((+ (((((t0.c0)AND(t0.c0)))OR(t0.c0))))))) UNION ALL SELECT t0.c0 FROM t0 WHERE ((((+ (((((t0.c0)AND(t0.c0)))OR(t0.c0))))) ISNULL));
SELECT ALL t0.c0 FROM t0;
SELECT DISTINCT rt0.c2, t0.c0, rt0.c1 FROM t0 RIGHT OUTER JOIN rt0 ON CASE WHEN ((rt0.c2)/(rt0.c1)) THEN ((rt0.c2) IS TRUE) WHEN CASE WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN t0.c0 WHEN rt0.c1 THEN t0.c0 END THEN NULLIF(rt0.c1, rt0.c2) WHEN ((rt0.c2)>(rt0.c1)) THEN ((rt0.c1)GLOB(rt0.c0)) ELSE t0.c0 END;
SELECT DISTINCT rt0.c2, t0.c0, rt0.c1 FROM t0 RIGHT OUTER JOIN rt0 ON CASE WHEN ((rt0.c2)/(rt0.c1)) THEN ((rt0.c2) IS TRUE) WHEN CASE WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN t0.c0 WHEN rt0.c1 THEN t0.c0 END THEN NULLIF(rt0.c1, rt0.c2) WHEN ((rt0.c2)>(rt0.c1)) THEN ((rt0.c1)GLOB(rt0.c0)) ELSE t0.c0 END WHERE (((rt0.c1)>(PRINTF(t0.c0, t0.c0, rt0.c2)))) UNION SELECT DISTINCT rt0.c2, t0.c0, rt0.c1 FROM t0 RIGHT OUTER JOIN rt0 ON CASE WHEN ((rt0.c2)/(rt0.c1)) THEN ((rt0.c2) IS TRUE) WHEN CASE WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN t0.c0 WHEN rt0.c1 THEN t0.c0 END THEN NULLIF(rt0.c1, rt0.c2) WHEN ((rt0.c2)>(rt0.c1)) THEN ((rt0.c1)GLOB(rt0.c0)) ELSE t0.c0 END WHERE ((NOT (((rt0.c1)>(PRINTF(t0.c0, t0.c0, rt0.c2)))))) UNION SELECT DISTINCT rt0.c2, t0.c0, rt0.c1 FROM t0 RIGHT OUTER JOIN rt0 ON CASE WHEN ((rt0.c2)/(rt0.c1)) THEN ((rt0.c2) IS TRUE) WHEN CASE WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN t0.c0 WHEN rt0.c1 THEN t0.c0 END THEN NULLIF(rt0.c1, rt0.c2) WHEN ((rt0.c2)>(rt0.c1)) THEN ((rt0.c1)GLOB(rt0.c0)) ELSE t0.c0 END WHERE (((((rt0.c1)>(PRINTF(t0.c0, t0.c0, rt0.c2)))) ISNULL));
SELECT DISTINCT rt0.c2, t0.c0, rt0.c1 FROM t0 RIGHT OUTER JOIN rt0 ON CASE WHEN ((rt0.c2)/(rt0.c1)) THEN ((rt0.c2) IS TRUE) WHEN CASE WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN t0.c0 WHEN rt0.c1 THEN t0.c0 END THEN NULLIF(rt0.c1, rt0.c2) WHEN ((rt0.c2)>(rt0.c1)) THEN ((rt0.c1)GLOB(rt0.c0)) ELSE t0.c0 END;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 WHERE ((((((t0.c0 IN (t0.c0, t0.c0)))AND(UNLIKELY(DISTINCT t0.c0))))AND((((NULL)) BETWEEN ((t0.c0)) AND ((t0.c0)))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT ((((((t0.c0 IN (t0.c0, t0.c0)))AND(UNLIKELY(DISTINCT t0.c0))))AND((((NULL)) BETWEEN ((t0.c0)) AND ((t0.c0)))))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((((((((t0.c0 IN (t0.c0, t0.c0)))AND(UNLIKELY(DISTINCT t0.c0))))AND((((NULL)) BETWEEN ((t0.c0)) AND ((t0.c0)))))) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING ((COUNT(*))AND((+ (COUNT(*))))) UNION ALL SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING (NOT (((COUNT(*))AND((+ (COUNT(*))))))) UNION ALL SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING ((((COUNT(*))AND((+ (COUNT(*)))))) ISNULL);
SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING ((COUNT(*))AND((+ (COUNT(*))))) UNION ALL SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING (NOT (((COUNT(*))AND((+ (COUNT(*))))))) UNION ALL SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING ((((COUNT(*))AND((+ (COUNT(*)))))) ISNULL);
SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT ALL t0.c0 FROM t0;
SELECT t0.c0 FROM t0 WHERE (0Xffffffffd196b702) UNION ALL SELECT t0.c0 FROM t0 WHERE ((NOT (0Xffffffffd196b702))) UNION ALL SELECT t0.c0 FROM t0 WHERE (((0Xffffffffd196b702) ISNULL));
SELECT ALL t0.c0 FROM t0;
SELECT DISTINCT rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c0 FROM rt0 WHERE (((((rt0.c2)GLOB('0.0749501172445628')))%(((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2))))) UNION SELECT DISTINCT rt0.c0 FROM rt0 WHERE ((NOT (((((rt0.c2)GLOB('0.0749501172445628')))%(((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2))))))) UNION SELECT DISTINCT rt0.c0 FROM rt0 WHERE (((((((rt0.c2)GLOB('0.0749501172445628')))%(((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2))))) ISNULL));
SELECT DISTINCT rt0.c0 FROM rt0;
SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 WHERE (-3.20809874E8) GROUP BY rt0.c1, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (-3.20809874E8))) GROUP BY rt0.c1, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c2 FROM rt0 WHERE (((-3.20809874E8) ISNULL)) GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT ALL t0.c0, rt0.c1, rt0.c2 FROM t0, rt0 GROUP BY t0.c0, rt0.c1, rt0.c2;
SELECT t0.c0, rt0.c1, rt0.c2 FROM t0, rt0 GROUP BY t0.c0, rt0.c1, rt0.c2 HAVING ((CAST(rt0.c2 AS BLOB)) ISNULL) UNION ALL SELECT t0.c0, rt0.c1, rt0.c2 FROM t0, rt0 GROUP BY t0.c0, rt0.c1, rt0.c2 HAVING (NOT (((CAST(rt0.c2 AS BLOB)) ISNULL))) UNION ALL SELECT t0.c0, rt0.c1, rt0.c2 FROM t0, rt0 GROUP BY t0.c0, rt0.c1, rt0.c2 HAVING ((((CAST(rt0.c2 AS BLOB)) ISNULL)) ISNULL);
SELECT ALL t0.c0, rt0.c1, rt0.c2 FROM t0, rt0 GROUP BY t0.c0, rt0.c1, rt0.c2;
SELECT t0.c0, rt0.c1, rt0.c2 FROM t0, rt0 GROUP BY t0.c0, rt0.c1, rt0.c2 HAVING ((CAST(rt0.c2 AS BLOB)) ISNULL) UNION ALL SELECT t0.c0, rt0.c1, rt0.c2 FROM t0, rt0 GROUP BY t0.c0, rt0.c1, rt0.c2 HAVING (NOT (((CAST(rt0.c2 AS BLOB)) ISNULL))) UNION ALL SELECT t0.c0, rt0.c1, rt0.c2 FROM t0, rt0 GROUP BY t0.c0, rt0.c1, rt0.c2 HAVING ((((CAST(rt0.c2 AS BLOB)) ISNULL)) ISNULL);
SELECT ALL t0.c0, rt0.c1, rt0.c2 FROM t0, rt0 GROUP BY t0.c0, rt0.c1, rt0.c2;
SELECT ALL MIN(t0.c0) FROM rt0, t0;
SELECT rt0.c1, t0.c0 FROM rt0, t0;
SELECT ALL rt0.c1, t0.c0 FROM rt0, t0 WHERE ((((t0.c0)GLOB(rt0.c2)) IN ())) UNION ALL SELECT rt0.c1, t0.c0 FROM rt0, t0 WHERE ((NOT ((((t0.c0)GLOB(rt0.c2)) IN ())))) UNION ALL SELECT ALL rt0.c1, t0.c0 FROM rt0, t0 WHERE ((((((t0.c0)GLOB(rt0.c2)) IN ())) ISNULL));
SELECT rt0.c1, t0.c0 FROM rt0, t0;
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2, t0.c0 FROM t0, rt0;
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2, t0.c0 FROM t0, rt0 WHERE ((((rt0.c2, rt0.c1, rt0.c0)) BETWEEN ((((((rt0.c0)AND(x'250a')))AND(rt0.c0)), DATE(rt0.c1, t0.c0, t0.c0, rt0.c0, t0.c0), ((x'') IS TRUE))) AND ((CAST(t0.c0 AS REAL), ((rt0.c2)IS(rt0.c0)), CASE rt0.c0  WHEN rt0.c0 THEN NULL WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN x'' END)))) UNION SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2, t0.c0 FROM t0, rt0 WHERE ((NOT ((((rt0.c2, rt0.c1, rt0.c0)) BETWEEN ((((((rt0.c0)AND(x'250a')))AND(rt0.c0)), DATE(rt0.c1, t0.c0, t0.c0, rt0.c0, t0.c0), ((x'') IS TRUE))) AND ((CAST(t0.c0 AS REAL), ((rt0.c2)IS(rt0.c0)), CASE rt0.c0  WHEN rt0.c0 THEN NULL WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN x'' END)))))) UNION SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2, t0.c0 FROM t0, rt0 WHERE ((((((rt0.c2, rt0.c1, rt0.c0)) BETWEEN ((((((rt0.c0)AND(x'250a')))AND(rt0.c0)), DATE(rt0.c1, t0.c0, t0.c0, rt0.c0, t0.c0), ((x'') IS TRUE))) AND ((CAST(t0.c0 AS REAL), ((rt0.c2)IS(rt0.c0)), CASE rt0.c0  WHEN rt0.c0 THEN NULL WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN x'' END)))) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2, t0.c0 FROM t0, rt0;
SELECT rt0.c2, t0.c0 FROM t0, rt0 GROUP BY rt0.c2, t0.c0;
SELECT rt0.c2, t0.c0 FROM t0, rt0 WHERE (((PRINTF(rt0.c2, rt0.c0, '0.5418104755718764')) BETWEEN (((t0.c0)==(rt0.c1))) AND (((rt0.c0)LIKE(0.6034830087155137))))) GROUP BY rt0.c2, t0.c0 UNION SELECT ALL rt0.c2, t0.c0 FROM t0, rt0 WHERE ((NOT (((PRINTF(rt0.c2, rt0.c0, '0.5418104755718764')) BETWEEN (((t0.c0)==(rt0.c1))) AND (((rt0.c0)LIKE(0.6034830087155137))))))) GROUP BY rt0.c2, t0.c0 UNION SELECT rt0.c2, t0.c0 FROM t0, rt0 WHERE (((((PRINTF(rt0.c2, rt0.c0, '0.5418104755718764')) BETWEEN (((t0.c0)=(rt0.c1))) AND (((rt0.c0)LIKE(0.6034830087155137))))) ISNULL)) GROUP BY rt0.c2, t0.c0;
SELECT rt0.c2, t0.c0 FROM t0, rt0 GROUP BY rt0.c2, t0.c0;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING CASE WHEN MIN(GROUP_CONCAT(TOTAL(COUNT(*)))) THEN MIN(TOTAL(rt0.c2)) END COLLATE RTRIM UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING (NOT (CASE WHEN MIN(GROUP_CONCAT(TOTAL(COUNT(*)))) THEN MIN(TOTAL(rt0.c2)) END COLLATE RTRIM)) UNION ALL SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING ((CASE WHEN MIN(GROUP_CONCAT(TOTAL(COUNT(*)))) THEN MIN(TOTAL(rt0.c2)) END COLLATE RTRIM) ISNULL);
SELECT rt0.c0 FROM rt0;
SELECT rt0.c0 FROM rt0 WHERE (((((((((CAST(rt0.c0 AS NUMERIC))OR(CAST(rt0.c2 AS TEXT))))AND(rt0.c1)))AND((rt0.c1 IN ()))))AND((x'' IN ())))) UNION ALL SELECT rt0.c0 FROM rt0 WHERE ((NOT (((((((((CAST(rt0.c0 AS NUMERIC))OR(CAST(rt0.c2 AS TEXT))))AND(rt0.c1)))AND((rt0.c1 IN ()))))AND((x'' IN ())))))) UNION ALL SELECT rt0.c0 FROM rt0 WHERE (((((((((((CAST(rt0.c0 AS NUMERIC))OR(CAST(rt0.c2 AS TEXT))))AND(rt0.c1)))AND((rt0.c1 IN ()))))AND((x'' IN ())))) ISNULL));
SELECT rt0.c0 FROM rt0;
SELECT DISTINCT * FROM rt0 NATURAL JOIN t0;
SELECT DISTINCT * FROM rt0 NATURAL JOIN t0 WHERE ((((t0.c0)+(rt0.c0)) IN ())) UNION SELECT DISTINCT * FROM rt0 NATURAL JOIN t0 WHERE ((NOT ((((t0.c0)+(rt0.c0)) IN ())))) UNION SELECT DISTINCT * FROM rt0 NATURAL JOIN t0 WHERE ((((((t0.c0)+(rt0.c0)) IN ())) ISNULL));
SELECT DISTINCT * FROM rt0 NATURAL JOIN t0;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((((((((((((((((((((rt0.c0))==((rt0.c2))))AND(((((((((rt0.c2)OR(rt0.c0)))AND(rt0.c0)))AND(rt0.c0)))OR('-1716104878')))))OR(((0.32634652130063646)IS NOT(rt0.c0)))))OR(((rt0.c1)<<(rt0.c0)))))OR((rt0.c0 IN ()))))OR(CHANGES())))AND(((rt0.c0) IS FALSE))))OR(((((((((((((rt0.c1)AND(rt0.c0)))OR(rt0.c2)))AND(rt0.c0)))OR(x'')))AND(rt0.c2)))OR(rt0.c1)))))OR((((rt0.c1))!=((rt0.c0)))))) GROUP BY rt0.c0, rt0.c1, rt0.c2 UNION SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT ((((((((((((((((((((rt0.c0))=((rt0.c2))))AND(((((((((rt0.c2)OR(rt0.c0)))AND(rt0.c0)))AND(rt0.c0)))OR('-1716104878')))))OR(((0.32634652130063646)IS NOT(rt0.c0)))))OR(((rt0.c1)<<(rt0.c0)))))OR((rt0.c0 IN ()))))OR(CHANGES())))AND(((rt0.c0) IS FALSE))))OR(((((((((((((rt0.c1)AND(rt0.c0)))OR(rt0.c2)))AND(rt0.c0)))OR(x'')))AND(rt0.c2)))OR(rt0.c1)))))OR((((rt0.c1))!=((rt0.c0)))))))) GROUP BY rt0.c0, rt0.c1, rt0.c2 UNION SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((((((((((((((((((((((rt0.c0))=((rt0.c2))))AND(((((((((rt0.c2)OR(rt0.c0)))AND(rt0.c0)))AND(rt0.c0)))OR('-1716104878')))))OR(((0.32634652130063646)IS NOT(rt0.c0)))))OR(((rt0.c1)<<(rt0.c0)))))OR((rt0.c0 IN ()))))OR(CHANGES())))AND(((rt0.c0) IS FALSE))))OR(((((((((((((rt0.c1)AND(rt0.c0)))OR(rt0.c2)))AND(rt0.c0)))OR(x'')))AND(rt0.c2)))OR(rt0.c1)))))OR((((rt0.c1))<>((rt0.c0)))))) ISNULL)) GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2, t0.c0, rt0.c0 FROM rt0, t0 GROUP BY rt0.c1, rt0.c2, t0.c0, rt0.c0;
SELECT rt0.c1, rt0.c2, t0.c0, rt0.c0 FROM rt0, t0 GROUP BY rt0.c1, rt0.c2, t0.c0, rt0.c0 HAVING SUM((+ (COUNT(*)))) UNION ALL SELECT ALL rt0.c1, rt0.c2, t0.c0, rt0.c0 FROM rt0, t0 GROUP BY rt0.c1, rt0.c2, t0.c0, rt0.c0 HAVING (NOT (SUM((+ (COUNT(*)))))) UNION ALL SELECT rt0.c1, rt0.c2, t0.c0, rt0.c0 FROM rt0, t0 GROUP BY rt0.c1, rt0.c2, t0.c0, rt0.c0 HAVING ((SUM((+ (COUNT(*))))) ISNULL);
SELECT ALL rt0.c0, rt0.c2, t0.c0 FROM t0, rt0;
SELECT rt0.c0, rt0.c2, t0.c0 FROM t0, rt0 WHERE (1899624015 COLLATE BINARY) UNION ALL SELECT rt0.c0, rt0.c2, t0.c0 FROM t0, rt0 WHERE ((NOT (1899624015 COLLATE BINARY))) UNION ALL SELECT ALL rt0.c0, rt0.c2, t0.c0 FROM t0, rt0 WHERE (((1899624015 COLLATE BINARY) ISNULL));
SELECT ALL rt0.c0, rt0.c2, t0.c0 FROM t0, rt0;
SELECT DISTINCT * FROM t0, rt0;
SELECT DISTINCT * FROM t0, rt0 WHERE ((NOT (ABS(rt0.c1)))) UNION SELECT DISTINCT * FROM t0, rt0 WHERE ((NOT ((NOT (ABS(rt0.c1)))))) UNION SELECT DISTINCT * FROM t0, rt0 WHERE ((((NOT (ABS(rt0.c1)))) ISNULL));
SELECT DISTINCT * FROM t0, rt0;
SELECT t0.c0, rt0.c2, rt0.c1, rt0.c0 FROM rt0, t0 GROUP BY t0.c0, rt0.c2, rt0.c1, rt0.c0;
SELECT ALL t0.c0, rt0.c2, rt0.c1, rt0.c0 FROM rt0, t0 WHERE ((~ (((t0.c0)>>('277706903'))))) GROUP BY t0.c0, rt0.c2, rt0.c1, rt0.c0 UNION SELECT t0.c0, rt0.c2, rt0.c1, rt0.c0 FROM rt0, t0 WHERE ((NOT ((~ (((t0.c0)>>('277706903'))))))) GROUP BY t0.c0, rt0.c2, rt0.c1, rt0.c0 UNION SELECT ALL t0.c0, rt0.c2, rt0.c1, rt0.c0 FROM rt0, t0 WHERE ((((~ (((t0.c0)>>('277706903'))))) ISNULL)) GROUP BY t0.c0, rt0.c2, rt0.c1, rt0.c0;
SELECT t0.c0, rt0.c2, rt0.c1, rt0.c0 FROM rt0, t0 GROUP BY t0.c0, rt0.c2, rt0.c1, rt0.c0;
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING TOTAL(rt0.c0) UNION ALL SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING (NOT (TOTAL(rt0.c0))) UNION ALL SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING ((TOTAL(rt0.c0)) ISNULL);
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING TOTAL(rt0.c0) UNION ALL SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING (NOT (TOTAL(rt0.c0))) UNION ALL SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING ((TOTAL(rt0.c0)) ISNULL);
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE (CASE x''  WHEN ROUND(rt0.c1, rt0.c2) THEN (((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((0x290e7cc8))) END) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (CASE x''  WHEN ROUND(rt0.c1, rt0.c2) THEN (((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((0X290e7cc8))) END))) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE (((CASE x''  WHEN ROUND(rt0.c1, rt0.c2) THEN (((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((0x290e7cc8))) END) ISNULL));
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0 WHERE (((((((rt0.c0)) BETWEEN ((x'')) AND ((rt0.c0)))))=((((rt0.c1)IS NOT(x'')))))) UNION SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (((((((rt0.c0)) BETWEEN ((x'')) AND ((rt0.c0)))))=((((rt0.c1)IS NOT(x'')))))))) UNION SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0 WHERE (((((((((rt0.c0)) BETWEEN ((x'')) AND ((rt0.c0)))))=((((rt0.c1)IS NOT(x'')))))) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE (((((TRIM(t0.c0))OR(DATETIME(t0.c0, 0xffffffffbe4135f6, t0.c0))))OR(((((((((t0.c0)AND(x'')))OR(t0.c0)))AND(t0.c0)))AND(t0.c0))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT (((((TRIM(t0.c0))OR(DATETIME(t0.c0, 0Xffffffffbe4135f6, t0.c0))))OR(((((((((t0.c0)AND(x'')))OR(t0.c0)))AND(t0.c0)))AND(t0.c0))))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE (((((((TRIM(t0.c0))OR(DATETIME(t0.c0, 0xffffffffbe4135f6, t0.c0))))OR(((((((((t0.c0)AND(x'')))OR(t0.c0)))AND(t0.c0)))AND(t0.c0))))) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING CASE GROUP_CONCAT(COUNT(SUM(SUM(rt0.c2))))  WHEN rt0.c1 THEN CAST(rt0.c2 AS INTEGER) WHEN COUNT(*) THEN COUNT(rt0.c0) WHEN (- (rt0.c1)) THEN CASE WHEN COUNT(*) THEN TOTAL(rt0.c2) ELSE rt0.c1 END ELSE GROUP_CONCAT(AVG(rt0.c2)) END UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING (NOT (CASE GROUP_CONCAT(COUNT(SUM(SUM(rt0.c2))))  WHEN rt0.c1 THEN CAST(rt0.c2 AS INTEGER) WHEN COUNT(*) THEN COUNT(rt0.c0) WHEN (- (rt0.c1)) THEN CASE WHEN COUNT(*) THEN TOTAL(rt0.c2) ELSE rt0.c1 END ELSE GROUP_CONCAT(AVG(rt0.c2)) END)) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING ((CASE GROUP_CONCAT(COUNT(SUM(SUM(rt0.c2))))  WHEN rt0.c1 THEN CAST(rt0.c2 AS INTEGER) WHEN COUNT(*) THEN COUNT(rt0.c0) WHEN (- (rt0.c1)) THEN CASE WHEN COUNT(*) THEN TOTAL(rt0.c2) ELSE rt0.c1 END ELSE GROUP_CONCAT(AVG(rt0.c2)) END) ISNULL);
SELECT t0.c0 FROM t0;
SELECT t0.c0 FROM t0 WHERE ((((t0.c0)) BETWEEN ((t0.c0 COLLATE NOCASE)) AND (((((t0.c0))>((t0.c0))))))) UNION ALL SELECT t0.c0 FROM t0 WHERE ((NOT ((((t0.c0)) BETWEEN ((t0.c0 COLLATE NOCASE)) AND (((((t0.c0))>((t0.c0))))))))) UNION ALL SELECT t0.c0 FROM t0 WHERE ((((((t0.c0)) BETWEEN ((t0.c0 COLLATE NOCASE)) AND (((((t0.c0))>((t0.c0))))))) ISNULL));
SELECT t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0 WHERE (((t0.c0) BETWEEN (((t0.c0)-(t0.c0))) AND (((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))AND(NULL)))AND(t0.c0))))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((NOT (((t0.c0) BETWEEN (((t0.c0)-(t0.c0))) AND (((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))AND(NULL)))AND(t0.c0))))))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE (((((t0.c0) BETWEEN (((t0.c0)-(t0.c0))) AND (((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))AND(NULL)))AND(t0.c0))))) ISNULL));
SELECT DISTINCT t0.c0 FROM t0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE (t0.c0) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT (t0.c0))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE (((t0.c0) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING CASE WHEN (((((((('t8w\**')AND('FpiJ')))OR(SUM(rt0.c0))))OR(MIN(rt0.c2))))OR(SUM(rt0.c0))) THEN rt0.c0 ELSE SUM(COUNT(*)) END UNION ALL SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING (NOT (CASE WHEN (((((((('t8w\**')AND('FpiJ')))OR(SUM(rt0.c0))))OR(MIN(rt0.c2))))OR(SUM(rt0.c0))) THEN rt0.c0 ELSE SUM(COUNT(*)) END)) UNION ALL SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING ((CASE WHEN (((((((('t8w\**')AND('FpiJ')))OR(SUM(rt0.c0))))OR(MIN(rt0.c2))))OR(SUM(rt0.c0))) THEN rt0.c0 ELSE SUM(COUNT(*)) END) ISNULL);
SELECT ALL * FROM t0, rt0;
SELECT ALL * FROM t0, rt0 WHERE ((((rt0.c1 IN (rt0.c2)))<<(x'be65'))) UNION ALL SELECT ALL * FROM t0 NOT INDEXED, rt0 WHERE ((NOT ((((rt0.c1 IN (rt0.c2)))<<(x'be65'))))) UNION ALL SELECT * FROM t0, rt0 WHERE ((((((rt0.c1 IN (rt0.c2)))<<(x'be65'))) ISNULL));
SELECT ALL * FROM t0, rt0;
SELECT DISTINCT t0.c0, rt0.c0 FROM t0, rt0;
SELECT DISTINCT t0.c0, rt0.c0 FROM t0, rt0 WHERE (UPPER(((t0.c0)%(rt0.c1)))) UNION SELECT DISTINCT t0.c0, rt0.c0 FROM t0, rt0 WHERE ((NOT (UPPER(((t0.c0)%(rt0.c1)))))) UNION SELECT DISTINCT t0.c0, rt0.c0 FROM t0, rt0 WHERE (((UPPER(((t0.c0)%(rt0.c1)))) ISNULL));
SELECT DISTINCT t0.c0, rt0.c0 FROM t0, rt0;
SELECT ALL t0.c0, rt0.c0 FROM t0 RIGHT OUTER JOIN rt0 ON ((((t0.c0) BETWEEN (rt0.c2) AND (rt0.c1))) BETWEEN (NULL) AND ((t0.c0 IN ()))) GROUP BY t0.c0, rt0.c0;
SELECT ALL t0.c0, rt0.c0 FROM t0 RIGHT OUTER JOIN rt0 ON ((((t0.c0) BETWEEN (rt0.c2) AND (rt0.c1))) BETWEEN (NULL) AND ((t0.c0 IN ()))) WHERE (((CASE rt0.c1  WHEN rt0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN rt0.c0 ELSE x'1f1a' END)/(CAST(t0.c0 AS TEXT)))) GROUP BY t0.c0, rt0.c0 UNION SELECT ALL t0.c0, rt0.c0 FROM t0 RIGHT OUTER JOIN rt0 ON ((((t0.c0) BETWEEN (rt0.c2) AND (rt0.c1))) BETWEEN (NULL) AND ((t0.c0 IN ()))) WHERE ((NOT (((CASE rt0.c1  WHEN rt0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN rt0.c0 ELSE x'1f1a' END)/(CAST(t0.c0 AS TEXT)))))) GROUP BY t0.c0, rt0.c0 UNION SELECT t0.c0, rt0.c0 FROM t0 RIGHT OUTER JOIN rt0 ON ((((t0.c0) BETWEEN (rt0.c2) AND (rt0.c1))) BETWEEN (NULL) AND ((t0.c0 IN ()))) WHERE (((((CASE rt0.c1  WHEN rt0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN rt0.c0 ELSE x'1f1a' END)/(CAST(t0.c0 AS TEXT)))) ISNULL)) GROUP BY t0.c0, rt0.c0;
SELECT ALL t0.c0, rt0.c0 FROM t0 RIGHT OUTER JOIN rt0 ON ((((t0.c0) BETWEEN (rt0.c2) AND (rt0.c1))) BETWEEN (NULL) AND ((t0.c0 IN ()))) GROUP BY t0.c0, rt0.c0;
SELECT rt0.c2, rt0.c1 FROM t0 INNER JOIN rt0 ON CASE WHEN ((t0.c0) NOT BETWEEN (x'') AND (t0.c0)) THEN CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c2 END END GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c2, rt0.c1 FROM t0 INNER JOIN rt0 ON CASE WHEN ((t0.c0) NOT BETWEEN (x'') AND (t0.c0)) THEN CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c2 END END GROUP BY rt0.c2, rt0.c1 HAVING TOTAL(AVG(GROUP_CONCAT(rt0.c2))) UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM t0 INNER JOIN rt0 ON CASE WHEN ((t0.c0) NOT BETWEEN (x'') AND (t0.c0)) THEN CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c2 END END GROUP BY rt0.c2, rt0.c1 HAVING (NOT (TOTAL(AVG(GROUP_CONCAT(rt0.c2))))) UNION ALL SELECT rt0.c2, rt0.c1 FROM t0 INNER JOIN rt0 ON CASE WHEN ((t0.c0) NOT BETWEEN (x'') AND (t0.c0)) THEN CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c2 END END GROUP BY rt0.c2, rt0.c1 HAVING ((TOTAL(AVG(GROUP_CONCAT(rt0.c2)))) ISNULL);
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE (CAST(LIKELIHOOD(rt0.c0, 0.5319486403553931) AS REAL)) UNION ALL SELECT * FROM rt0 WHERE ((NOT (CAST(LIKELIHOOD(rt0.c0, 0.5319486403553931) AS REAL)))) UNION ALL SELECT ALL * FROM rt0 WHERE (((CAST(LIKELIHOOD(rt0.c0, 0.5319486403553931) AS REAL)) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0 FROM rt0, t0;
SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0 FROM rt0, t0 WHERE (((((rt0.c1) NOT NULL))GLOB(((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c2))))) UNION SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0 FROM rt0, t0 WHERE ((NOT (((((rt0.c1) NOT NULL))GLOB(((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c2))))))) UNION SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0 FROM rt0, t0 WHERE (((((((rt0.c1) NOT NULL))GLOB(((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c2))))) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0 FROM rt0, t0;
SELECT rt0.c2, rt0.c0, t0.c0 FROM rt0 NOT INDEXED, t0 GROUP BY rt0.c2, rt0.c0, t0.c0;
SELECT rt0.c2, rt0.c0, t0.c0 FROM rt0, t0 WHERE ((rt0.c2 COLLATE NOCASE IN ())) GROUP BY rt0.c2, rt0.c0, t0.c0 UNION SELECT ALL rt0.c2, rt0.c0, t0.c0 FROM rt0, t0 WHERE ((NOT ((rt0.c2 COLLATE NOCASE IN ())))) GROUP BY rt0.c2, rt0.c0, t0.c0 UNION SELECT ALL rt0.c2, rt0.c0, t0.c0 FROM rt0, t0 WHERE ((((rt0.c2 COLLATE NOCASE IN ())) ISNULL)) GROUP BY rt0.c2, rt0.c0, t0.c0;
SELECT rt0.c2, rt0.c0, t0.c0 FROM rt0 NOT INDEXED, t0 GROUP BY rt0.c2, rt0.c0, t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING MAX(CAST(t0.c0 AS INTEGER)) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (MAX(CAST(t0.c0 AS INTEGER)))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((MAX(CAST(t0.c0 AS INTEGER))) ISNULL);
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING MAX(CAST(t0.c0 AS INTEGER)) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (MAX(CAST(t0.c0 AS INTEGER)))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((MAX(CAST(t0.c0 AS INTEGER))) ISNULL);
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT rt0.c2, t0.c0, rt0.c0, rt0.c1 FROM rt0, t0;
SELECT ALL rt0.c2, t0.c0, rt0.c0, rt0.c1 FROM rt0, t0 WHERE (((NULL)<=(((rt0.c1)<<(rt0.c2))))) UNION ALL SELECT ALL rt0.c2, t0.c0, rt0.c0, rt0.c1 FROM rt0, t0 WHERE ((NOT (((NULL)<=(((rt0.c1)<<(rt0.c2))))))) UNION ALL SELECT rt0.c2, t0.c0, rt0.c0, rt0.c1 FROM rt0, t0 WHERE (((((NULL)<=(((rt0.c1)<<(rt0.c2))))) ISNULL));
SELECT rt0.c2, t0.c0, rt0.c0, rt0.c1 FROM rt0, t0;
SELECT DISTINCT t0.c0, rt0.c1, rt0.c2 FROM rt0, t0;
SELECT DISTINCT t0.c0, rt0.c1, rt0.c2 FROM rt0, t0 WHERE (CAST(((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0)) AS TEXT)) UNION SELECT DISTINCT t0.c0, rt0.c1, rt0.c2 FROM rt0, t0 WHERE ((NOT (CAST(((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0)) AS TEXT)))) UNION SELECT DISTINCT t0.c0, rt0.c1, rt0.c2 FROM rt0, t0 WHERE (((CAST(((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0)) AS TEXT)) ISNULL));
SELECT DISTINCT t0.c0, rt0.c1, rt0.c2 FROM rt0, t0;
SELECT ALL rt0.c2, rt0.c1 FROM t0, rt0 GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c2, rt0.c1 FROM t0, rt0 WHERE (t0.c0) GROUP BY rt0.c2, rt0.c1 UNION SELECT rt0.c2, rt0.c1 FROM t0, rt0 WHERE ((NOT (t0.c0))) GROUP BY rt0.c2, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c1 FROM t0, rt0 WHERE (((t0.c0) ISNULL)) GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM t0, rt0 GROUP BY rt0.c2, rt0.c1;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING CAST((NOT (COUNT(t0.c0))) AS INTEGER) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (CAST((NOT (COUNT(t0.c0))) AS INTEGER))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((CAST((NOT (COUNT(t0.c0))) AS INTEGER)) ISNULL);
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING CAST((NOT (COUNT(t0.c0))) AS INTEGER) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (CAST((NOT (COUNT(t0.c0))) AS INTEGER))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((CAST((NOT (COUNT(t0.c0))) AS INTEGER)) ISNULL);
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT * FROM t0;
SELECT ALL * FROM t0 WHERE ((((t0.c0)GLOB(t0.c0)) IN (((t0.c0) ISNULL), 0.030556125075246188))) UNION ALL SELECT * FROM t0 WHERE ((NOT ((((t0.c0)GLOB(t0.c0)) IN (((t0.c0) ISNULL), 0.030556125075246188))))) UNION ALL SELECT * FROM t0 WHERE ((((((t0.c0)GLOB(t0.c0)) IN (((t0.c0) ISNULL), 0.030556125075246188))) ISNULL));
SELECT * FROM t0;
SELECT DISTINCT rt0.c2, t0.c0, rt0.c1, rt0.c0 FROM rt0 RIGHT OUTER JOIN t0 ON ((NOT (rt0.c1)) IN ());
SELECT DISTINCT rt0.c2, t0.c0, rt0.c1, rt0.c0 FROM rt0 RIGHT OUTER JOIN t0 ON ((NOT (rt0.c1)) IN ()) WHERE (UPPER((rt0.c2 IN ()))) UNION SELECT DISTINCT rt0.c2, t0.c0, rt0.c1, rt0.c0 FROM rt0 RIGHT OUTER JOIN t0 ON ((NOT (rt0.c1)) IN ()) WHERE ((NOT (UPPER((rt0.c2 IN ()))))) UNION SELECT DISTINCT rt0.c2, t0.c0, rt0.c1, rt0.c0 FROM rt0 RIGHT OUTER JOIN t0 ON ((NOT (rt0.c1)) IN ()) WHERE (((UPPER((rt0.c2 IN ()))) ISNULL));
SELECT DISTINCT rt0.c2, t0.c0, rt0.c1, rt0.c0 FROM rt0 RIGHT OUTER JOIN t0 ON ((NOT (rt0.c1)) IN ());
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE (((((CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)OR(((((t0.c0)OR(t0.c0)))AND(t0.c0)))))AND((- (t0.c0))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT (((((CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)OR(((((t0.c0)OR(t0.c0)))AND(t0.c0)))))AND((- (t0.c0))))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE (((((((CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)OR(((((t0.c0)OR(t0.c0)))AND(t0.c0)))))AND((- (t0.c0))))) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 NATURAL JOIN rt0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 NATURAL JOIN rt0 GROUP BY t0.c0 HAVING MIN((SUM(rt0.c0) IN ())) UNION ALL SELECT t0.c0 FROM t0 NATURAL JOIN rt0 GROUP BY t0.c0 HAVING (NOT (MIN((SUM(rt0.c0) IN ())))) UNION ALL SELECT t0.c0 FROM t0 NATURAL JOIN rt0 GROUP BY t0.c0 HAVING ((MIN((SUM(rt0.c0) IN ()))) ISNULL);
SELECT ALL t0.c0 FROM t0 NATURAL JOIN rt0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 NATURAL JOIN rt0 GROUP BY t0.c0 HAVING MIN((SUM(rt0.c0) IN ())) UNION ALL SELECT t0.c0 FROM t0 NATURAL JOIN rt0 GROUP BY t0.c0 HAVING (NOT (MIN((SUM(rt0.c0) IN ())))) UNION ALL SELECT t0.c0 FROM t0 NATURAL JOIN rt0 GROUP BY t0.c0 HAVING ((MIN((SUM(rt0.c0) IN ()))) ISNULL);
SELECT ALL t0.c0 FROM t0 NATURAL JOIN rt0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0;
SELECT t0.c0 FROM t0 WHERE ((((((t0.c0) IS TRUE)))==(((t0.c0 IN ()))))) UNION ALL SELECT ALL t0.c0 FROM t0 WHERE ((NOT ((((((t0.c0) IS TRUE)))==(((t0.c0 IN ()))))))) UNION ALL SELECT ALL t0.c0 FROM t0 WHERE ((((((((t0.c0) IS TRUE)))=(((t0.c0 IN ()))))) ISNULL));
SELECT ALL t0.c0 FROM t0;
SELECT DISTINCT * FROM t0 INNER JOIN rt0 ON CAST(((rt0.c2) NOTNULL) AS TEXT);
SELECT DISTINCT * FROM t0 INNER JOIN rt0 ON CAST(((rt0.c2) NOTNULL) AS TEXT) WHERE ((((((t0.c0 IN ()))AND((t0.c0 IN (rt0.c1)))))AND((((('')AND(rt0.c1)))OR(rt0.c0))))) UNION SELECT DISTINCT * FROM t0 INNER JOIN rt0 ON CAST(((rt0.c2) NOTNULL) AS TEXT) WHERE ((NOT ((((((t0.c0 IN ()))AND((t0.c0 IN (rt0.c1)))))AND((((('')AND(rt0.c1)))OR(rt0.c0))))))) UNION SELECT DISTINCT * FROM t0 INNER JOIN rt0 ON CAST(((rt0.c2) NOTNULL) AS TEXT) WHERE ((((((((t0.c0 IN ()))AND((t0.c0 IN (rt0.c1)))))AND((((('')AND(rt0.c1)))OR(rt0.c0))))) ISNULL));
SELECT DISTINCT * FROM t0 INNER JOIN rt0 ON CAST(((rt0.c2) NOTNULL) AS TEXT);
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM rt0 WHERE (((rt0.c1 COLLATE BINARY) NOTNULL)) GROUP BY rt0.c2, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (((rt0.c1 COLLATE BINARY) NOTNULL)))) GROUP BY rt0.c2, rt0.c0 UNION SELECT rt0.c2, rt0.c0 FROM rt0 WHERE (((((rt0.c1 COLLATE BINARY) NOTNULL)) ISNULL)) GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING COUNT(CASE WHEN rt0.c0 THEN rt0.c1 END) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING (NOT (COUNT(CASE WHEN rt0.c0 THEN rt0.c1 END))) UNION ALL SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING ((COUNT(CASE WHEN rt0.c0 THEN rt0.c1 END)) ISNULL);
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING COUNT(CASE WHEN rt0.c0 THEN rt0.c1 END) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING (NOT (COUNT(CASE WHEN rt0.c0 THEN rt0.c1 END))) UNION ALL SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING ((COUNT(CASE WHEN rt0.c0 THEN rt0.c1 END)) ISNULL);
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT * FROM t0;
SELECT ALL * FROM t0 WHERE (((t0.c0) NOT NULL) COLLATE NOCASE) UNION ALL SELECT ALL * FROM t0 WHERE ((NOT (((t0.c0) NOT NULL) COLLATE NOCASE))) UNION ALL SELECT * FROM t0 WHERE (((((t0.c0) NOT NULL) COLLATE NOCASE) ISNULL));
SELECT * FROM t0;
SELECT DISTINCT t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0 WHERE ((((UPPER(DISTINCT 0X7877c016)))>((t0.c0 COLLATE RTRIM)))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((NOT ((((UPPER(DISTINCT 0X7877c016)))>((t0.c0 COLLATE RTRIM)))))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((((((UPPER(DISTINCT 0X7877c016)))>((t0.c0 COLLATE RTRIM)))) ISNULL));
SELECT DISTINCT t0.c0 FROM t0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE (CAST(((t0.c0)OR(t0.c0)) AS REAL)) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT (CAST(((t0.c0)OR(t0.c0)) AS REAL)))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE (((CAST(((t0.c0)OR(t0.c0)) AS REAL)) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM t0 LEFT OUTER JOIN rt0 ON (((rt0.c0 COLLATE BINARY))>((CASE rt0.c2  WHEN rt0.c0 THEN rt0.c2 END))) GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM t0 LEFT OUTER JOIN rt0 ON (((rt0.c0 COLLATE BINARY))>((CASE rt0.c2  WHEN rt0.c0 THEN rt0.c2 END))) GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING MAX(GROUP_CONCAT(rt0.c0)) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM t0 LEFT OUTER JOIN rt0 ON (((rt0.c0 COLLATE BINARY))>((CASE rt0.c2  WHEN rt0.c0 THEN rt0.c2 END))) GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING (NOT (MAX(GROUP_CONCAT(rt0.c0)))) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c0 FROM t0 LEFT OUTER JOIN rt0 ON (((rt0.c0 COLLATE BINARY))>((CASE rt0.c2  WHEN rt0.c0 THEN rt0.c2 END))) GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING ((MAX(GROUP_CONCAT(rt0.c0))) ISNULL);
SELECT rt0.c1 FROM rt0;
SELECT rt0.c1 FROM rt0 WHERE (UNLIKELY(0.14218045239258392)) UNION ALL SELECT rt0.c1 FROM rt0 WHERE ((NOT (UNLIKELY(0.14218045239258392)))) UNION ALL SELECT ALL rt0.c1 FROM rt0 WHERE (((UNLIKELY(0.14218045239258392)) ISNULL));
SELECT rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c2 FROM rt0 CROSS JOIN t0 ON ((t0.c0)IS(CAST(rt0.c0 AS NUMERIC)));
SELECT DISTINCT rt0.c2 FROM rt0 CROSS JOIN t0 ON ((t0.c0)IS(CAST(rt0.c0 AS NUMERIC))) WHERE (CASE WHEN NULL THEN CAST(rt0.c1 AS NUMERIC) WHEN rt0.c1 COLLATE BINARY THEN SQLITE_COMPILEOPTION_USED(t0.c0) WHEN ((rt0.c0) NOT BETWEEN (rt0.c1) AND (0.7359722322664303)) THEN NULL ELSE ((rt0.c2)<=(rt0.c0)) END) UNION SELECT DISTINCT rt0.c2 FROM rt0 CROSS JOIN t0 ON ((t0.c0)IS(CAST(rt0.c0 AS NUMERIC))) WHERE ((NOT (CASE WHEN NULL THEN CAST(rt0.c1 AS NUMERIC) WHEN rt0.c1 COLLATE BINARY THEN SQLITE_COMPILEOPTION_USED(t0.c0) WHEN ((rt0.c0) NOT BETWEEN (rt0.c1) AND (0.7359722322664303)) THEN NULL ELSE ((rt0.c2)<=(rt0.c0)) END))) UNION SELECT DISTINCT rt0.c2 FROM rt0 CROSS JOIN t0 ON ((t0.c0)IS(CAST(rt0.c0 AS NUMERIC))) WHERE (((CASE WHEN NULL THEN CAST(rt0.c1 AS NUMERIC) WHEN rt0.c1 COLLATE BINARY THEN SQLITE_COMPILEOPTION_USED(t0.c0) WHEN ((rt0.c0) NOT BETWEEN (rt0.c1) AND (0.7359722322664303)) THEN NULL ELSE ((rt0.c2)<=(rt0.c0)) END) ISNULL));
SELECT DISTINCT rt0.c2 FROM rt0 CROSS JOIN t0 ON ((t0.c0)IS(CAST(rt0.c0 AS NUMERIC)));
SELECT t0.c0 FROM t0, rt0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0, rt0 WHERE (CASE ((rt0.c2) NOT BETWEEN (t0.c0) AND (rt0.c0))  WHEN rt0.c1 THEN '\n	&epH' ELSE 'ym3?-|矠' END) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0, rt0 WHERE ((NOT (CASE ((rt0.c2) NOT BETWEEN (t0.c0) AND (rt0.c0))  WHEN rt0.c1 THEN '\n	&epH' ELSE 'ym3?-|矠' END))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0, rt0 WHERE (((CASE ((rt0.c2) NOT BETWEEN (t0.c0) AND (rt0.c0))  WHEN rt0.c1 THEN '\n	&epH' ELSE 'ym3?-|矠' END) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0, rt0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING AVG(((SUM(SUM(GROUP_CONCAT(SUM(COUNT(t0.c0)))))) BETWEEN (COUNT(GROUP_CONCAT(AVG(t0.c0)))) AND (t0.c0))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (AVG(((SUM(SUM(GROUP_CONCAT(SUM(COUNT(t0.c0)))))) BETWEEN (COUNT(GROUP_CONCAT(AVG(t0.c0)))) AND (t0.c0))))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((AVG(((SUM(SUM(GROUP_CONCAT(SUM(COUNT(t0.c0)))))) BETWEEN (COUNT(GROUP_CONCAT(AVG(t0.c0)))) AND (t0.c0)))) ISNULL);
SELECT t0.c0 FROM t0;
SELECT ALL t0.c0 FROM t0 WHERE (((((t0.c0) BETWEEN (x'') AND (t0.c0)))%(((t0.c0)AND(0.19606828245941743))))) UNION ALL SELECT ALL t0.c0 FROM t0 WHERE ((NOT (((((t0.c0) BETWEEN (x'') AND (t0.c0)))%(((t0.c0)AND(0.19606828245941743))))))) UNION ALL SELECT t0.c0 FROM t0 WHERE (((((((t0.c0) BETWEEN (x'') AND (t0.c0)))%(((t0.c0)AND(0.19606828245941743))))) ISNULL));
SELECT t0.c0 FROM t0;
SELECT DISTINCT rt0.c0, t0.c0, rt0.c1, rt0.c2 FROM t0 NOT INDEXED, rt0;
SELECT DISTINCT rt0.c0, t0.c0, rt0.c1, rt0.c2 FROM t0, rt0 WHERE (rt0.c0) UNION SELECT DISTINCT rt0.c0, t0.c0, rt0.c1, rt0.c2 FROM t0, rt0 WHERE ((NOT (rt0.c0))) UNION SELECT DISTINCT rt0.c0, t0.c0, rt0.c1, rt0.c2 FROM t0, rt0 WHERE (((rt0.c0) ISNULL));
SELECT DISTINCT rt0.c0, t0.c0, rt0.c1, rt0.c2 FROM t0 NOT INDEXED, rt0;
SELECT ALL rt0.c2 FROM t0, rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM t0, rt0 WHERE (((((rt0.c1 COLLATE NOCASE)AND(((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c2)))))OR(((t0.c0)IS(rt0.c0))))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM t0, rt0 WHERE ((NOT (((((rt0.c1 COLLATE NOCASE)AND(((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c2)))))OR(((t0.c0)IS(rt0.c0))))))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM t0, rt0 WHERE (((((((rt0.c1 COLLATE NOCASE)AND(((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c2)))))OR(((t0.c0)IS(rt0.c0))))) ISNULL)) GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM t0, rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c1, rt0.c0, rt0.c2, t0.c0 FROM t0, rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2, t0.c0;
SELECT ALL rt0.c1, rt0.c0, rt0.c2, t0.c0 FROM t0, rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2, t0.c0 HAVING ((((AVG(TOTAL(rt0.c1)))OR(TOTAL(COUNT(rt0.c1)) COLLATE RTRIM)))AND(rt0.c1)) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c2, t0.c0 FROM t0, rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2, t0.c0 HAVING (NOT (((((AVG(TOTAL(rt0.c1)))OR(TOTAL(COUNT(rt0.c1)) COLLATE RTRIM)))AND(rt0.c1)))) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c2, t0.c0 FROM t0, rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2, t0.c0 HAVING ((((((AVG(TOTAL(rt0.c1)))OR(TOTAL(COUNT(rt0.c1)) COLLATE RTRIM)))AND(rt0.c1))) ISNULL);
SELECT * FROM t0;
SELECT ALL * FROM t0 WHERE (((((t0.c0)>=('1899002890'))) BETWEEN (0X1cb4becf) AND (t0.c0 COLLATE RTRIM))) UNION ALL SELECT ALL * FROM t0 WHERE ((NOT (((((t0.c0)>=('1899002890'))) BETWEEN (0X1cb4becf) AND (t0.c0 COLLATE RTRIM))))) UNION ALL SELECT * FROM t0 WHERE (((((((t0.c0)>=('1899002890'))) BETWEEN (0x1cb4becf) AND (t0.c0 COLLATE RTRIM))) ISNULL));
SELECT * FROM t0;
SELECT DISTINCT rt0.c1, t0.c0 FROM rt0 NATURAL JOIN t0;
SELECT DISTINCT rt0.c1, t0.c0 FROM rt0 NATURAL JOIN t0 WHERE ((((t0.c0, rt0.c0, x'7240')) BETWEEN (((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))), ((rt0.c0) BETWEEN (rt0.c0) AND (0.7886685444516474)), (((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((rt0.c2))))) AND (('6lj>i-ۏ', 0.820473897636168, (- (rt0.c2)))))) UNION SELECT DISTINCT rt0.c1, t0.c0 FROM rt0 NATURAL JOIN t0 WHERE ((NOT ((((t0.c0, rt0.c0, x'7240')) BETWEEN (((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))), ((rt0.c0) BETWEEN (rt0.c0) AND (0.7886685444516474)), (((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((rt0.c2))))) AND (('6lj>i-ۏ', 0.820473897636168, (- (rt0.c2)))))))) UNION SELECT DISTINCT rt0.c1, t0.c0 FROM rt0 NATURAL JOIN t0 WHERE ((((((t0.c0, rt0.c0, x'7240')) BETWEEN (((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))), ((rt0.c0) BETWEEN (rt0.c0) AND (0.7886685444516474)), (((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((rt0.c2))))) AND (('6lj>i-ۏ', 0.820473897636168, (- (rt0.c2)))))) ISNULL));
SELECT DISTINCT rt0.c1, t0.c0 FROM rt0 NATURAL JOIN t0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE (CAST((((0.25606137877170765))<((t0.c0))) AS INTEGER)) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT (CAST((((0.25606137877170765))<((t0.c0))) AS INTEGER)))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE (((CAST((((0.25606137877170765))<((t0.c0))) AS INTEGER)) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL rt0.c1, t0.c0, rt0.c0, rt0.c2 FROM t0, rt0 GROUP BY rt0.c1, t0.c0, rt0.c0, rt0.c2;
SELECT rt0.c1, t0.c0, rt0.c0, rt0.c2 FROM t0, rt0 GROUP BY rt0.c1, t0.c0, rt0.c0, rt0.c2 HAVING ((((SUM(GROUP_CONCAT(rt0.c1)))|(t0.c0)))==((~ (SUM(rt0.c2))))) UNION ALL SELECT rt0.c1, t0.c0, rt0.c0, rt0.c2 FROM t0, rt0 GROUP BY rt0.c1, t0.c0, rt0.c0, rt0.c2 HAVING (NOT (((((SUM(GROUP_CONCAT(rt0.c1)))|(t0.c0)))==((~ (SUM(rt0.c2))))))) UNION ALL SELECT rt0.c1, t0.c0, rt0.c0, rt0.c2 FROM t0, rt0 GROUP BY rt0.c1, t0.c0, rt0.c0, rt0.c2 HAVING ((((((SUM(GROUP_CONCAT(rt0.c1)))|(t0.c0)))==((~ (SUM(rt0.c2)))))) ISNULL);
SELECT ALL * FROM t0;
SELECT * FROM t0 WHERE ((((((t0.c0)) BETWEEN (('-381615588')) AND ((t0.c0))))/((('妡3') ISNULL)))) UNION ALL SELECT * FROM t0 WHERE ((NOT ((((((t0.c0)) BETWEEN (('-381615588')) AND ((t0.c0))))/((('妡3') ISNULL)))))) UNION ALL SELECT * FROM t0 WHERE ((((((((t0.c0)) BETWEEN (('-381615588')) AND ((t0.c0))))/((('妡3') ISNULL)))) ISNULL));
SELECT ALL * FROM t0;
SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((((- (rt0.c0))) BETWEEN (CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c2 END) AND (CAST(rt0.c0 AS INTEGER)))) UNION SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT ((((- (rt0.c0))) BETWEEN (CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c2 END) AND (CAST(rt0.c0 AS INTEGER)))))) UNION SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((((((- (rt0.c0))) BETWEEN (CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c2 END) AND (CAST(rt0.c0 AS INTEGER)))) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0 FROM rt0;
SELECT ALL rt0.c0, rt0.c1, t0.c0, rt0.c2 FROM rt0, t0 GROUP BY rt0.c0, rt0.c1, t0.c0, rt0.c2;
SELECT rt0.c0, rt0.c1, t0.c0, rt0.c2 FROM rt0, t0 WHERE (((CAST(rt0.c2 AS TEXT)) NOT BETWEEN (CAST(rt0.c1 AS BLOB)) AND (((t0.c0) BETWEEN (t0.c0) AND (rt0.c1))))) GROUP BY rt0.c0, rt0.c1, t0.c0, rt0.c2 UNION SELECT rt0.c0, rt0.c1, t0.c0, rt0.c2 FROM rt0, t0 WHERE ((NOT (((CAST(rt0.c2 AS TEXT)) NOT BETWEEN (CAST(rt0.c1 AS BLOB)) AND (((t0.c0) BETWEEN (t0.c0) AND (rt0.c1))))))) GROUP BY rt0.c0, rt0.c1, t0.c0, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c1, t0.c0, rt0.c2 FROM rt0, t0 WHERE (((((CAST(rt0.c2 AS TEXT)) NOT BETWEEN (CAST(rt0.c1 AS BLOB)) AND (((t0.c0) BETWEEN (t0.c0) AND (rt0.c1))))) ISNULL)) GROUP BY rt0.c0, rt0.c1, t0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c1, t0.c0, rt0.c2 FROM rt0, t0 GROUP BY rt0.c0, rt0.c1, t0.c0, rt0.c2;
SELECT ALL t0.c0, rt0.c1, rt0.c0, rt0.c2 FROM rt0 CROSS JOIN t0 ON (((rt0.c0 IN ())) NOT NULL) GROUP BY t0.c0, rt0.c1, rt0.c0, rt0.c2;
SELECT ALL t0.c0, rt0.c1, rt0.c0, rt0.c2 FROM rt0 CROSS JOIN t0 ON (((rt0.c0 IN ())) NOT NULL) GROUP BY t0.c0, rt0.c1, rt0.c0, rt0.c2 HAVING ((COUNT(rt0.c2))!=((COUNT(*) IN (TOTAL(MAX(t0.c0)))))) UNION ALL SELECT t0.c0, rt0.c1, rt0.c0, rt0.c2 FROM rt0 CROSS JOIN t0 ON (((rt0.c0 IN ())) NOT NULL) GROUP BY t0.c0, rt0.c1, rt0.c0, rt0.c2 HAVING (NOT (((COUNT(rt0.c2))<>((COUNT(*) IN (TOTAL(MAX(t0.c0)))))))) UNION ALL SELECT ALL t0.c0, rt0.c1, rt0.c0, rt0.c2 FROM rt0 CROSS JOIN t0 ON (((rt0.c0 IN ())) NOT NULL) GROUP BY t0.c0, rt0.c1, rt0.c0, rt0.c2 HAVING ((((COUNT(rt0.c2))<>((COUNT(*) IN (TOTAL(MAX(t0.c0))))))) ISNULL);
SELECT ALL * FROM rt0, t0;
SELECT ALL * FROM rt0, t0 WHERE (((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2))) IS FALSE)) UNION ALL SELECT * FROM rt0, t0 WHERE ((NOT (((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2))) IS FALSE)))) UNION ALL SELECT * FROM rt0, t0 WHERE (((((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2))) IS FALSE)) ISNULL));
SELECT ALL * FROM rt0, t0;
SELECT DISTINCT t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0 WHERE (((TRIM(0.8571508066832902)) NOTNULL)) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((NOT (((TRIM(0.8571508066832902)) NOTNULL)))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE (((((TRIM(0.8571508066832902)) NOTNULL)) ISNULL));
SELECT DISTINCT t0.c0 FROM t0;
SELECT ALL rt0.c1, rt0.c2 FROM t0, rt0 GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM t0, rt0 WHERE (t0.c0) GROUP BY rt0.c1, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c2 FROM t0, rt0 WHERE ((NOT (t0.c0))) GROUP BY rt0.c1, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c2 FROM t0, rt0 WHERE (((t0.c0) ISNULL)) GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM t0, rt0 GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1 FROM rt0, t0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0, t0 GROUP BY rt0.c1 HAVING CAST(CAST(t0.c0 AS REAL) AS BLOB) UNION ALL SELECT ALL rt0.c1 FROM rt0, t0 GROUP BY rt0.c1 HAVING (NOT (CAST(CAST(t0.c0 AS REAL) AS BLOB))) UNION ALL SELECT ALL rt0.c1 FROM rt0, t0 GROUP BY rt0.c1 HAVING ((CAST(CAST(t0.c0 AS REAL) AS BLOB)) ISNULL);
SELECT ALL rt0.c1 FROM rt0, t0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0, t0 GROUP BY rt0.c1 HAVING CAST(CAST(t0.c0 AS REAL) AS BLOB) UNION ALL SELECT ALL rt0.c1 FROM rt0, t0 GROUP BY rt0.c1 HAVING (NOT (CAST(CAST(t0.c0 AS REAL) AS BLOB))) UNION ALL SELECT ALL rt0.c1 FROM rt0, t0 GROUP BY rt0.c1 HAVING ((CAST(CAST(t0.c0 AS REAL) AS BLOB)) ISNULL);
SELECT ALL rt0.c1 FROM rt0, t0 GROUP BY rt0.c1;
SELECT ALL * FROM t0, rt0;
SELECT * FROM t0, rt0 WHERE (((HEX(DISTINCT rt0.c0))LIKE(((x'fb60')-(t0.c0))))) UNION ALL SELECT * FROM t0, rt0 WHERE ((NOT (((HEX(DISTINCT rt0.c0))LIKE(((x'fb60')-(t0.c0))))))) UNION ALL SELECT ALL * FROM t0, rt0 WHERE (((((HEX(DISTINCT rt0.c0))LIKE(((x'fb60')-(t0.c0))))) ISNULL));
SELECT ALL * FROM t0, rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((((rt0.c2)) BETWEEN (((((rt0.c1, rt0.c0, rt0.c2)) NOT BETWEEN ((rt0.c2, rt0.c0, rt0.c0)) AND ((rt0.c1, rt0.c1, rt0.c0))))) AND ((CAST(rt0.c1 AS BLOB))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((((rt0.c2)) BETWEEN (((((rt0.c1, rt0.c0, rt0.c2)) NOT BETWEEN ((rt0.c2, rt0.c0, rt0.c0)) AND ((rt0.c1, rt0.c1, rt0.c0))))) AND ((CAST(rt0.c1 AS BLOB))))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((((rt0.c2)) BETWEEN (((((rt0.c1, rt0.c0, rt0.c2)) NOT BETWEEN ((rt0.c2, rt0.c0, rt0.c0)) AND ((rt0.c1, rt0.c1, rt0.c0))))) AND ((CAST(rt0.c1 AS BLOB))))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c0, t0.c0 FROM t0, rt0 GROUP BY rt0.c0, t0.c0;
SELECT ALL rt0.c0, t0.c0 FROM t0, rt0 WHERE (0xaac4fdc) GROUP BY rt0.c0, t0.c0 UNION SELECT rt0.c0, t0.c0 FROM t0, rt0 WHERE ((NOT (0xaac4fdc))) GROUP BY rt0.c0, t0.c0 UNION SELECT rt0.c0, t0.c0 FROM t0, rt0 WHERE (((0xaac4fdc) ISNULL)) GROUP BY rt0.c0, t0.c0;
SELECT ALL rt0.c0, t0.c0 FROM t0, rt0 GROUP BY rt0.c0, t0.c0;
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING TOTAL(x'') UNION ALL SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING (NOT (TOTAL(x''))) UNION ALL SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING ((TOTAL(x'')) ISNULL);
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING TOTAL(x'') UNION ALL SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING (NOT (TOTAL(x''))) UNION ALL SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING ((TOTAL(x'')) ISNULL);
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT * FROM t0, rt0;
SELECT * FROM t0, rt0 WHERE ((- (rt0.c2)) COLLATE BINARY) UNION ALL SELECT ALL * FROM t0, rt0 WHERE ((NOT ((- (rt0.c2)) COLLATE BINARY))) UNION ALL SELECT * FROM t0, rt0 WHERE ((((- (rt0.c2)) COLLATE BINARY) ISNULL));
SELECT * FROM t0, rt0;
SELECT DISTINCT * FROM t0, rt0;
SELECT DISTINCT * FROM t0, rt0 WHERE (((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c2 END) NOT NULL)) UNION SELECT DISTINCT * FROM t0, rt0 WHERE ((NOT (((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c2 END) NOT NULL)))) UNION SELECT DISTINCT * FROM t0, rt0 WHERE (((((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c2 END) NOT NULL)) ISNULL));
SELECT DISTINCT * FROM t0, rt0;
SELECT ALL rt0.c0 FROM rt0, t0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0, t0 WHERE (CASE WHEN (rt0.c0 IN ()) THEN json_array_length(rt0.c0) ELSE TRIM(rt0.c0) END) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM rt0, t0 WHERE ((NOT (CASE WHEN (rt0.c0 IN ()) THEN json_array_length(rt0.c0) ELSE TRIM(rt0.c0) END))) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM rt0, t0 WHERE (((CASE WHEN (rt0.c0 IN ()) THEN json_array_length(rt0.c0) ELSE TRIM(rt0.c0) END) ISNULL)) GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0, t0 GROUP BY rt0.c0;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM t0, rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM t0, rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING AVG(COUNT(*)) COLLATE BINARY UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM t0, rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING (NOT (AVG(COUNT(*)) COLLATE BINARY)) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM t0, rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING ((AVG(COUNT(*)) COLLATE BINARY) ISNULL);
SELECT ALL rt0.c0 FROM rt0;
SELECT rt0.c0 FROM rt0 WHERE (rt0.c1 COLLATE NOCASE COLLATE BINARY COLLATE NOCASE) UNION ALL SELECT rt0.c0 FROM rt0 WHERE ((NOT (rt0.c1 COLLATE NOCASE COLLATE BINARY COLLATE NOCASE))) UNION ALL SELECT rt0.c0 FROM rt0 WHERE (((rt0.c1 COLLATE NOCASE COLLATE BINARY COLLATE NOCASE) ISNULL));
SELECT ALL rt0.c0 FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((((rt0.c1 IN ())) ISNULL)) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((((rt0.c1 IN ())) ISNULL)))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((((rt0.c1 IN ())) ISNULL)) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 WHERE (MIN(((rt0.c0) NOT NULL), rt0.c1 COLLATE BINARY)) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0 WHERE ((NOT (MIN(((rt0.c0) NOT NULL), rt0.c1 COLLATE BINARY)))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0 WHERE (((MIN(((rt0.c0) NOT NULL), rt0.c1 COLLATE BINARY)) ISNULL)) GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 NOT INDEXED GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING TOTAL(MAX(GROUP_CONCAT(rt0.c2))) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING (NOT (TOTAL(MAX(GROUP_CONCAT(rt0.c2))))) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING ((TOTAL(MAX(GROUP_CONCAT(rt0.c2)))) ISNULL);
SELECT ALL SUM(1652909916) FROM t0, rt0;
SELECT ALL rt0.c1, rt0.c0 FROM t0, rt0;
SELECT rt0.c1, rt0.c0 FROM t0, rt0 WHERE ((CASE WHEN 0.09944268591669059 THEN rt0.c0 END IN ())) UNION ALL SELECT ALL rt0.c1, rt0.c0 FROM t0, rt0 WHERE ((NOT ((CASE WHEN 0.09944268591669059 THEN rt0.c0 END IN ())))) UNION ALL SELECT ALL rt0.c1, rt0.c0 FROM t0, rt0 WHERE ((((CASE WHEN 0.09944268591669059 THEN rt0.c0 END IN ())) ISNULL));
SELECT ALL rt0.c1, rt0.c0 FROM t0, rt0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE ((((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((CASE t0.c0  WHEN t0.c0 THEN t0.c0 END, ((t0.c0)<(t0.c0)), ((t0.c0)>>(t0.c0)))) AND (((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))), (((t0.c0))>=((t0.c0))), t0.c0)))) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT ((((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((CASE t0.c0  WHEN t0.c0 THEN t0.c0 END, ((t0.c0)<(t0.c0)), ((t0.c0)>>(t0.c0)))) AND (((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))), (((t0.c0))>=((t0.c0))), t0.c0)))))) UNION SELECT DISTINCT * FROM t0 WHERE ((((((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((CASE t0.c0  WHEN t0.c0 THEN t0.c0 END, ((t0.c0)<(t0.c0)), ((t0.c0)>>(t0.c0)))) AND (((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))), (((t0.c0))>=((t0.c0))), t0.c0)))) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT rt0.c2, rt0.c1, rt0.c0, t0.c0 FROM rt0, t0 GROUP BY rt0.c2, rt0.c1, rt0.c0, t0.c0;
SELECT rt0.c2, rt0.c1, rt0.c0, t0.c0 FROM rt0, t0 WHERE (((rt0.c1) NOT BETWEEN (rt0.c2) AND ('-725681407')) COLLATE NOCASE) GROUP BY rt0.c2, rt0.c1, rt0.c0, t0.c0 UNION SELECT ALL rt0.c2, rt0.c1, rt0.c0, t0.c0 FROM rt0, t0 WHERE ((NOT (((rt0.c1) NOT BETWEEN (rt0.c2) AND ('-725681407')) COLLATE NOCASE))) GROUP BY rt0.c2, rt0.c1, rt0.c0, t0.c0 UNION SELECT ALL rt0.c2, rt0.c1, rt0.c0, t0.c0 FROM rt0, t0 WHERE (((((rt0.c1) NOT BETWEEN (rt0.c2) AND ('-725681407')) COLLATE NOCASE) ISNULL)) GROUP BY rt0.c2, rt0.c1, rt0.c0, t0.c0;
SELECT rt0.c2, rt0.c1, rt0.c0, t0.c0 FROM rt0, t0 GROUP BY rt0.c2, rt0.c1, rt0.c0, t0.c0;
SELECT ALL t0.c0 FROM rt0 CROSS JOIN t0 ON CAST(((rt0.c0)=(0.4647878033318549)) AS BLOB) GROUP BY t0.c0;
SELECT t0.c0 FROM rt0 CROSS JOIN t0 ON CAST(((rt0.c0)==(0.4647878033318549)) AS BLOB) GROUP BY t0.c0 HAVING MAX(GROUP_CONCAT(t0.c0)) UNION ALL SELECT ALL t0.c0 FROM rt0 CROSS JOIN t0 ON CAST(((rt0.c0)=(0.4647878033318549)) AS BLOB) GROUP BY t0.c0 HAVING (NOT (MAX(GROUP_CONCAT(t0.c0)))) UNION ALL SELECT ALL t0.c0 FROM rt0 CROSS JOIN t0 ON CAST(((rt0.c0)=(0.4647878033318549)) AS BLOB) GROUP BY t0.c0 HAVING ((MAX(GROUP_CONCAT(t0.c0))) ISNULL);
SELECT t0.c0 FROM t0;
SELECT t0.c0 FROM t0 NOT INDEXED WHERE (CAST(((t0.c0)AND(t0.c0)) AS NUMERIC)) UNION ALL SELECT t0.c0 FROM t0 WHERE ((NOT (CAST(((t0.c0)AND(t0.c0)) AS NUMERIC)))) UNION ALL SELECT ALL t0.c0 FROM t0 WHERE (((CAST(((t0.c0)AND(t0.c0)) AS NUMERIC)) ISNULL));
SELECT t0.c0 FROM t0;
SELECT DISTINCT * FROM rt0, t0;
SELECT DISTINCT * FROM rt0, t0 WHERE ((((((('')OR(0.09281183827968709)))AND(rt0.c2))) NOTNULL)) UNION SELECT DISTINCT * FROM rt0, t0 WHERE ((NOT ((((((('')OR(0.09281183827968709)))AND(rt0.c2))) NOTNULL)))) UNION SELECT DISTINCT * FROM rt0, t0 WHERE ((((((((('')OR(0.09281183827968709)))AND(rt0.c2))) NOTNULL)) ISNULL));
SELECT DISTINCT * FROM rt0, t0;
SELECT rt0.c0, rt0.c2, rt0.c1, t0.c0 FROM rt0, t0 GROUP BY rt0.c0, rt0.c2, rt0.c1, t0.c0;
SELECT rt0.c0, rt0.c2, rt0.c1, t0.c0 FROM rt0, t0 WHERE (CASE WHEN (t0.c0 IN (rt0.c0)) THEN ((((rt0.c0)OR(rt0.c1)))OR(rt0.c1)) END) GROUP BY rt0.c0, rt0.c2, rt0.c1, t0.c0 UNION SELECT rt0.c0, rt0.c2, rt0.c1, t0.c0 FROM rt0, t0 WHERE ((NOT (CASE WHEN (t0.c0 IN (rt0.c0)) THEN ((((rt0.c0)OR(rt0.c1)))OR(rt0.c1)) END))) GROUP BY rt0.c0, rt0.c2, rt0.c1, t0.c0 UNION SELECT rt0.c0, rt0.c2, rt0.c1, t0.c0 FROM rt0, t0 WHERE (((CASE WHEN (t0.c0 IN (rt0.c0)) THEN ((((rt0.c0)OR(rt0.c1)))OR(rt0.c1)) END) ISNULL)) GROUP BY rt0.c0, rt0.c2, rt0.c1, t0.c0;
SELECT rt0.c0, rt0.c2, rt0.c1, t0.c0 FROM rt0, t0 GROUP BY rt0.c0, rt0.c2, rt0.c1, t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING x'' UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (x'')) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((x'') ISNULL);
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING x'' UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (x'')) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((x'') ISNULL);
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0;
SELECT ALL t0.c0 FROM t0 WHERE (((TYPEOF(DISTINCT t0.c0)) NOT BETWEEN (t0.c0) AND ((((t0.c0))<>((t0.c0)))))) UNION ALL SELECT ALL t0.c0 FROM t0 WHERE ((NOT (((TYPEOF(DISTINCT t0.c0)) NOT BETWEEN (t0.c0) AND ((((t0.c0))<>((t0.c0)))))))) UNION ALL SELECT ALL t0.c0 FROM t0 WHERE (((((TYPEOF(DISTINCT t0.c0)) NOT BETWEEN (t0.c0) AND ((((t0.c0))<>((t0.c0)))))) ISNULL));
SELECT t0.c0 FROM t0;
SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE (((rt0.c0 IN ()) IN (NULL))) UNION SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (((rt0.c0 IN ()) IN (NULL))))) UNION SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE (((((rt0.c0 IN ()) IN (NULL))) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0;
SELECT ALL t0.c0, rt0.c2, rt0.c1, rt0.c0 FROM rt0, t0 GROUP BY t0.c0, rt0.c2, rt0.c1, rt0.c0;
SELECT ALL t0.c0, rt0.c2, rt0.c1, rt0.c0 FROM rt0, t0 WHERE (rt0.c0) GROUP BY t0.c0, rt0.c2, rt0.c1, rt0.c0 UNION SELECT t0.c0, rt0.c2, rt0.c1, rt0.c0 FROM rt0, t0 WHERE ((NOT (rt0.c0))) GROUP BY t0.c0, rt0.c2, rt0.c1, rt0.c0 UNION SELECT ALL t0.c0, rt0.c2, rt0.c1, rt0.c0 FROM rt0, t0 NOT INDEXED WHERE (((rt0.c0) ISNULL)) GROUP BY t0.c0, rt0.c2, rt0.c1, rt0.c0;
SELECT ALL t0.c0, rt0.c2, rt0.c1, rt0.c0 FROM rt0, t0 GROUP BY t0.c0, rt0.c2, rt0.c1, rt0.c0;
SELECT ALL t0.c0, rt0.c1, rt0.c0 FROM rt0, t0 GROUP BY t0.c0, rt0.c1, rt0.c0;
SELECT ALL t0.c0, rt0.c1, rt0.c0 FROM rt0, t0 GROUP BY t0.c0, rt0.c1, rt0.c0 HAVING AVG(GROUP_CONCAT(COUNT(0xffffffffa4aed7e0))) UNION ALL SELECT ALL t0.c0, rt0.c1, rt0.c0 FROM rt0, t0 GROUP BY t0.c0, rt0.c1, rt0.c0 HAVING (NOT (AVG(GROUP_CONCAT(COUNT(0xffffffffa4aed7e0))))) UNION ALL SELECT t0.c0, rt0.c1, rt0.c0 FROM rt0, t0 GROUP BY t0.c0, rt0.c1, rt0.c0 HAVING ((AVG(GROUP_CONCAT(COUNT(0xffffffffa4aed7e0)))) ISNULL);
SELECT ALL * FROM rt0, t0;
SELECT ALL * FROM rt0, t0 WHERE (SQLITE_VERSION()) UNION ALL SELECT ALL * FROM rt0, t0 WHERE ((NOT (SQLITE_VERSION()))) UNION ALL SELECT ALL * FROM rt0, t0 WHERE (((SQLITE_VERSION()) ISNULL));
SELECT ALL * FROM rt0, t0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (CASE CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END  WHEN CASE WHEN t0.c0 THEN t0.c0 WHEN x'01f0' THEN t0.c0 WHEN x'3eda' THEN t0.c0 END THEN (((t0.c0))<=((t0.c0))) ELSE (- (t0.c0)) END) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (CASE CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END  WHEN CASE WHEN t0.c0 THEN t0.c0 WHEN x'01f0' THEN t0.c0 WHEN x'3eda' THEN t0.c0 END THEN (((t0.c0))<=((t0.c0))) ELSE (- (t0.c0)) END))) UNION SELECT DISTINCT * FROM t0 WHERE (((CASE CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END  WHEN CASE WHEN t0.c0 THEN t0.c0 WHEN x'01f0' THEN t0.c0 WHEN x'3eda' THEN t0.c0 END THEN (((t0.c0))<=((t0.c0))) ELSE (- (t0.c0)) END) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT ALL t0.c0 FROM rt0, t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM rt0, t0 WHERE ((((~ (rt0.c1))) BETWEEN (((rt0.c2) IS TRUE)) AND (((((((((t0.c0)AND(rt0.c0)))AND(rt0.c0)))OR(rt0.c2)))OR(t0.c0))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM rt0, t0 WHERE ((NOT ((((~ (rt0.c1))) BETWEEN (((rt0.c2) IS TRUE)) AND (((((((((t0.c0)AND(rt0.c0)))AND(rt0.c0)))OR(rt0.c2)))OR(t0.c0))))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM rt0, t0 WHERE ((((((~ (rt0.c1))) BETWEEN (((rt0.c2) IS TRUE)) AND (((((((((t0.c0)AND(rt0.c0)))AND(rt0.c0)))OR(rt0.c2)))OR(t0.c0))))) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM rt0, t0 GROUP BY t0.c0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING TOTAL(CAST(MAX(GROUP_CONCAT(SUM(GROUP_CONCAT(rt0.c2)))) AS BLOB)) UNION ALL SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (NOT (TOTAL(CAST(MAX(GROUP_CONCAT(SUM(GROUP_CONCAT(rt0.c2)))) AS BLOB)))) UNION ALL SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING ((TOTAL(CAST(MAX(GROUP_CONCAT(SUM(GROUP_CONCAT(rt0.c2)))) AS BLOB))) ISNULL);
SELECT * FROM rt0, t0 NOT INDEXED;
SELECT ALL * FROM rt0, t0 WHERE ((~ ((((('-189680324')OR(t0.c0)))AND(rt0.c1))))) UNION ALL SELECT * FROM rt0, t0 WHERE ((NOT ((~ ((((('-189680324')OR(t0.c0)))AND(rt0.c1))))))) UNION ALL SELECT ALL * FROM rt0, t0 WHERE ((((~ ((((('-189680324')OR(t0.c0)))AND(rt0.c1))))) ISNULL));
SELECT * FROM rt0, t0 NOT INDEXED;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((((rt0.c0)AND(rt0.c0)))OR(rt0.c1)) COLLATE RTRIM) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((((rt0.c0)AND(rt0.c0)))OR(rt0.c1)) COLLATE RTRIM))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((((rt0.c0)AND(rt0.c0)))OR(rt0.c1)) COLLATE RTRIM) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE (x'') GROUP BY rt0.c2, rt0.c1, rt0.c0 UNION SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (x''))) GROUP BY rt0.c2, rt0.c1, rt0.c0 UNION SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE (((x'') ISNULL)) GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT ALL t0.c0, rt0.c0 FROM t0 CROSS JOIN rt0 ON rt0.c2 GROUP BY t0.c0, rt0.c0;
SELECT t0.c0, rt0.c0 FROM t0 CROSS JOIN rt0 ON rt0.c2 GROUP BY t0.c0, rt0.c0 HAVING GROUP_CONCAT(x'') UNION ALL SELECT t0.c0, rt0.c0 FROM t0 CROSS JOIN rt0 ON rt0.c2 GROUP BY t0.c0, rt0.c0 HAVING (NOT (GROUP_CONCAT(x''))) UNION ALL SELECT t0.c0, rt0.c0 FROM t0 CROSS JOIN rt0 ON rt0.c2 GROUP BY t0.c0, rt0.c0 HAVING ((GROUP_CONCAT(x'')) ISNULL);
SELECT ALL t0.c0, rt0.c0 FROM t0 CROSS JOIN rt0 ON rt0.c2 GROUP BY t0.c0, rt0.c0;
SELECT t0.c0, rt0.c0 FROM t0 CROSS JOIN rt0 ON rt0.c2 GROUP BY t0.c0, rt0.c0 HAVING GROUP_CONCAT(x'') UNION ALL SELECT t0.c0, rt0.c0 FROM t0 CROSS JOIN rt0 ON rt0.c2 GROUP BY t0.c0, rt0.c0 HAVING (NOT (GROUP_CONCAT(x''))) UNION ALL SELECT t0.c0, rt0.c0 FROM t0 CROSS JOIN rt0 ON rt0.c2 GROUP BY t0.c0, rt0.c0 HAVING ((GROUP_CONCAT(x'')) ISNULL);
SELECT ALL t0.c0, rt0.c0 FROM t0 CROSS JOIN rt0 ON rt0.c2 GROUP BY t0.c0, rt0.c0;
SELECT ALL * FROM rt0, t0;
SELECT ALL * FROM rt0, t0 WHERE (LIKELY(DISTINCT rt0.c1)) UNION ALL SELECT * FROM rt0, t0 WHERE ((NOT (LIKELY(DISTINCT rt0.c1)))) UNION ALL SELECT ALL * FROM rt0, t0 WHERE (((LIKELY(DISTINCT rt0.c1)) ISNULL));
SELECT ALL * FROM rt0, t0;
SELECT DISTINCT * FROM t0, rt0;
SELECT DISTINCT * FROM t0, rt0 WHERE ((((x'') NOT BETWEEN (rt0.c1) AND (t0.c0)) IN ())) UNION SELECT DISTINCT * FROM t0, rt0 WHERE ((NOT ((((x'') NOT BETWEEN (rt0.c1) AND (t0.c0)) IN ())))) UNION SELECT DISTINCT * FROM t0, rt0 WHERE ((((((x'') NOT BETWEEN (rt0.c1) AND (t0.c0)) IN ())) ISNULL));
SELECT DISTINCT * FROM t0, rt0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 WHERE ((((((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))))AND((((rt0.c2))=((rt0.c0))))))AND(CASE WHEN rt0.c1 THEN rt0.c2 END))) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM rt0 WHERE ((NOT ((((((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))))AND((((rt0.c2))==((rt0.c0))))))AND(CASE WHEN rt0.c1 THEN rt0.c2 END))))) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM rt0 WHERE ((((((((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))))AND((((rt0.c2))==((rt0.c0))))))AND(CASE WHEN rt0.c1 THEN rt0.c2 END))) ISNULL)) GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c2, t0.c0 FROM rt0 RIGHT OUTER JOIN t0 ON ((((((rt0.c0) NOT NULL))AND(CASE WHEN t0.c0 THEN rt0.c2 END)))OR(((((rt0.c0)AND(rt0.c2)))AND(rt0.c1)))) GROUP BY rt0.c2, t0.c0;
SELECT rt0.c2, t0.c0 FROM rt0 RIGHT OUTER JOIN t0 ON ((((((rt0.c0) NOT NULL))AND(CASE WHEN t0.c0 THEN rt0.c2 END)))OR(((((rt0.c0)AND(rt0.c2)))AND(rt0.c1)))) GROUP BY rt0.c2, t0.c0 HAVING (rt0.c0 IN ()) COLLATE BINARY UNION ALL SELECT ALL rt0.c2, t0.c0 FROM rt0 RIGHT OUTER JOIN t0 ON ((((((rt0.c0) NOT NULL))AND(CASE WHEN t0.c0 THEN rt0.c2 END)))OR(((((rt0.c0)AND(rt0.c2)))AND(rt0.c1)))) GROUP BY rt0.c2, t0.c0 HAVING (NOT ((rt0.c0 IN ()) COLLATE BINARY)) UNION ALL SELECT ALL rt0.c2, t0.c0 FROM rt0 RIGHT OUTER JOIN t0 ON ((((((rt0.c0) NOT NULL))AND(CASE WHEN t0.c0 THEN rt0.c2 END)))OR(((((rt0.c0)AND(rt0.c2)))AND(rt0.c1)))) GROUP BY rt0.c2, t0.c0 HAVING (((rt0.c0 IN ()) COLLATE BINARY) ISNULL);
SELECT ALL rt0.c2, t0.c0 FROM rt0 RIGHT OUTER JOIN t0 ON ((((((rt0.c0) NOT NULL))AND(CASE WHEN t0.c0 THEN rt0.c2 END)))OR(((((rt0.c0)AND(rt0.c2)))AND(rt0.c1)))) GROUP BY rt0.c2, t0.c0;
SELECT rt0.c2, t0.c0 FROM rt0 RIGHT OUTER JOIN t0 ON ((((((rt0.c0) NOT NULL))AND(CASE WHEN t0.c0 THEN rt0.c2 END)))OR(((((rt0.c0)AND(rt0.c2)))AND(rt0.c1)))) GROUP BY rt0.c2, t0.c0 HAVING (rt0.c0 IN ()) COLLATE BINARY UNION ALL SELECT ALL rt0.c2, t0.c0 FROM rt0 RIGHT OUTER JOIN t0 ON ((((((rt0.c0) NOT NULL))AND(CASE WHEN t0.c0 THEN rt0.c2 END)))OR(((((rt0.c0)AND(rt0.c2)))AND(rt0.c1)))) GROUP BY rt0.c2, t0.c0 HAVING (NOT ((rt0.c0 IN ()) COLLATE BINARY)) UNION ALL SELECT ALL rt0.c2, t0.c0 FROM rt0 RIGHT OUTER JOIN t0 ON ((((((rt0.c0) NOT NULL))AND(CASE WHEN t0.c0 THEN rt0.c2 END)))OR(((((rt0.c0)AND(rt0.c2)))AND(rt0.c1)))) GROUP BY rt0.c2, t0.c0 HAVING (((rt0.c0 IN ()) COLLATE BINARY) ISNULL);
SELECT ALL rt0.c2, t0.c0 FROM rt0 RIGHT OUTER JOIN t0 ON ((((((rt0.c0) NOT NULL))AND(CASE WHEN t0.c0 THEN rt0.c2 END)))OR(((((rt0.c0)AND(rt0.c2)))AND(rt0.c1)))) GROUP BY rt0.c2, t0.c0;
SELECT * FROM t0;
SELECT * FROM t0 WHERE ((((((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((NULL, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0))))LIKE(((t0.c0)IS NOT(t0.c0))))) UNION ALL SELECT ALL * FROM t0 WHERE ((NOT ((((((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((NULL, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0))))LIKE(((t0.c0)IS NOT(t0.c0))))))) UNION ALL SELECT * FROM t0 WHERE ((((((((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((NULL, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0))))LIKE(((t0.c0)IS NOT(t0.c0))))) ISNULL));
SELECT * FROM t0;
SELECT DISTINCT * FROM t0, rt0;
SELECT DISTINCT * FROM t0, rt0 WHERE (((rt0.c0 COLLATE NOCASE) NOT NULL)) UNION SELECT DISTINCT * FROM t0, rt0 WHERE ((NOT (((rt0.c0 COLLATE NOCASE) NOT NULL)))) UNION SELECT DISTINCT * FROM t0, rt0 WHERE (((((rt0.c0 COLLATE NOCASE) NOT NULL)) ISNULL));
SELECT DISTINCT * FROM t0, rt0;
SELECT ALL rt0.c1, t0.c0, rt0.c0 FROM rt0, t0 GROUP BY rt0.c1, t0.c0, rt0.c0;
SELECT ALL rt0.c1, t0.c0, rt0.c0 FROM rt0, t0 WHERE (LIKELIHOOD((((rt0.c2))<((rt0.c1))), 0.4387306107160449)) GROUP BY rt0.c1, t0.c0, rt0.c0 UNION SELECT rt0.c1, t0.c0, rt0.c0 FROM rt0, t0 WHERE ((NOT (LIKELIHOOD((((rt0.c2))<((rt0.c1))), 0.4387306107160449)))) GROUP BY rt0.c1, t0.c0, rt0.c0 UNION SELECT ALL rt0.c1, t0.c0, rt0.c0 FROM rt0, t0 WHERE (((LIKELIHOOD((((rt0.c2))<((rt0.c1))), 0.4387306107160449)) ISNULL)) GROUP BY rt0.c1, t0.c0, rt0.c0;
SELECT ALL rt0.c1, t0.c0, rt0.c0 FROM rt0, t0 GROUP BY rt0.c1, t0.c0, rt0.c0;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING COUNT(CASE WHEN rt0.c2 THEN AVG(rt0.c0) END) UNION ALL SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT (COUNT(CASE WHEN rt0.c2 THEN AVG(rt0.c0) END))) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((COUNT(CASE WHEN rt0.c2 THEN AVG(rt0.c0) END)) ISNULL);
SELECT * FROM t0 RIGHT OUTER JOIN rt0 ON LOWER(DISTINCT UPPER(t0.c0));
SELECT ALL * FROM t0 RIGHT OUTER JOIN rt0 ON LOWER(DISTINCT UPPER(t0.c0)) WHERE ((((NULL, ((('817243850'))<>((rt0.c1))), CASE WHEN rt0.c1 THEN rt0.c2 END, NULL, ((rt0.c2) NOTNULL)))<((rt0.c2 COLLATE RTRIM, rt0.c0, ((rt0.c0) ISNULL), ((rt0.c2) NOT BETWEEN (t0.c0) AND ('-1122472297')), t0.c0 COLLATE BINARY)))) UNION ALL SELECT * FROM t0 RIGHT OUTER JOIN rt0 ON LOWER(DISTINCT UPPER(t0.c0)) WHERE ((NOT ((((NULL, ((('817243850'))!=((rt0.c1))), CASE WHEN rt0.c1 THEN rt0.c2 END, NULL, ((rt0.c2) NOTNULL)))<((rt0.c2 COLLATE RTRIM, rt0.c0, ((rt0.c0) ISNULL), ((rt0.c2) NOT BETWEEN (t0.c0) AND ('-1122472297')), t0.c0 COLLATE BINARY)))))) UNION ALL SELECT * FROM t0 RIGHT OUTER JOIN rt0 ON LOWER(DISTINCT UPPER(t0.c0)) WHERE ((((((NULL, ((('817243850'))<>((rt0.c1))), CASE WHEN rt0.c1 THEN rt0.c2 END, NULL, ((rt0.c2) NOTNULL)))<((rt0.c2 COLLATE RTRIM, rt0.c0, ((rt0.c0) ISNULL), ((rt0.c2) NOT BETWEEN (t0.c0) AND ('-1122472297')), t0.c0 COLLATE BINARY)))) ISNULL));
SELECT * FROM t0 RIGHT OUTER JOIN rt0 ON LOWER(DISTINCT UPPER(t0.c0));
SELECT DISTINCT * FROM rt0, t0;
SELECT DISTINCT * FROM rt0, t0 WHERE ((((((rt0.c1, t0.c0, rt0.c0))==((t0.c0, rt0.c1, t0.c0)))) BETWEEN (((rt0.c1)*(rt0.c1))) AND (rt0.c0 COLLATE RTRIM))) UNION SELECT DISTINCT * FROM rt0, t0 WHERE ((NOT ((((((rt0.c1, t0.c0, rt0.c0))==((t0.c0, rt0.c1, t0.c0)))) BETWEEN (((rt0.c1)*(rt0.c1))) AND (rt0.c0 COLLATE RTRIM))))) UNION SELECT DISTINCT * FROM rt0, t0 WHERE ((((((((rt0.c1, t0.c0, rt0.c0))==((t0.c0, rt0.c1, t0.c0)))) BETWEEN (((rt0.c1)*(rt0.c1))) AND (rt0.c0 COLLATE RTRIM))) ISNULL));
SELECT DISTINCT * FROM rt0, t0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE (((((NULL)GLOB(t0.c0)))AND((((t0.c0))<=((t0.c0)))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT (((((NULL)GLOB(t0.c0)))AND((((t0.c0))<=((t0.c0)))))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE (((((((NULL)GLOB(t0.c0)))AND((((t0.c0))<=((t0.c0)))))) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING MAX(((AVG(MIN(rt0.c0))) BETWEEN (GROUP_CONCAT(NULL)) AND (SUM(MIN(rt0.c0))))) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING (NOT (MAX(((AVG(MIN(rt0.c0))) BETWEEN (GROUP_CONCAT(NULL)) AND (SUM(MIN(rt0.c0))))))) UNION ALL SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING ((MAX(((AVG(MIN(rt0.c0))) BETWEEN (GROUP_CONCAT(NULL)) AND (SUM(MIN(rt0.c0)))))) ISNULL);
SELECT * FROM rt0, t0;
SELECT * FROM rt0, t0 WHERE (CAST(rt0.c1 COLLATE NOCASE AS INTEGER)) UNION ALL SELECT * FROM rt0, t0 WHERE ((NOT (CAST(rt0.c1 COLLATE NOCASE AS INTEGER)))) UNION ALL SELECT * FROM rt0, t0 WHERE (((CAST(rt0.c1 COLLATE NOCASE AS INTEGER)) ISNULL));
SELECT * FROM rt0, t0;
SELECT DISTINCT * FROM t0, rt0;
SELECT DISTINCT * FROM t0, rt0 WHERE ((~ ((((t0.c0))<((t0.c0)))))) UNION SELECT DISTINCT * FROM t0, rt0 WHERE ((NOT ((~ ((((t0.c0))<((t0.c0)))))))) UNION SELECT DISTINCT * FROM t0, rt0 WHERE ((((~ ((((t0.c0))<((t0.c0)))))) ISNULL));
SELECT DISTINCT * FROM t0, rt0;
SELECT ALL rt0.c0 FROM t0, rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM t0, rt0 WHERE (((rt0.c2 IN ()) IN ())) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM t0, rt0 WHERE ((NOT (((rt0.c2 IN ()) IN ())))) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM t0, rt0 WHERE (((((rt0.c2 IN ()) IN ())) ISNULL)) GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM t0, rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c2, t0.c0, rt0.c1 FROM t0, rt0 GROUP BY rt0.c2, t0.c0, rt0.c1;
SELECT rt0.c2, t0.c0, rt0.c1 FROM t0, rt0 GROUP BY rt0.c2, t0.c0, rt0.c1 HAVING NULL UNION ALL SELECT rt0.c2, t0.c0, rt0.c1 FROM t0, rt0 GROUP BY rt0.c2, t0.c0, rt0.c1 HAVING (NOT (NULL)) UNION ALL SELECT ALL rt0.c2, t0.c0, rt0.c1 FROM t0, rt0 GROUP BY rt0.c2, t0.c0, rt0.c1 HAVING ((NULL) ISNULL);
SELECT ALL rt0.c2, t0.c0, rt0.c1 FROM t0, rt0 GROUP BY rt0.c2, t0.c0, rt0.c1;
SELECT rt0.c2, t0.c0, rt0.c1 FROM t0, rt0 GROUP BY rt0.c2, t0.c0, rt0.c1 HAVING NULL UNION ALL SELECT rt0.c2, t0.c0, rt0.c1 FROM t0, rt0 GROUP BY rt0.c2, t0.c0, rt0.c1 HAVING (NOT (NULL)) UNION ALL SELECT ALL rt0.c2, t0.c0, rt0.c1 FROM t0, rt0 GROUP BY rt0.c2, t0.c0, rt0.c1 HAVING ((NULL) ISNULL);
SELECT ALL rt0.c2, t0.c0, rt0.c1 FROM t0, rt0 GROUP BY rt0.c2, t0.c0, rt0.c1;
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE ((((rt0.c2 IN ())) IS TRUE)) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT ((((rt0.c2 IN ())) IS TRUE)))) UNION ALL SELECT * FROM rt0 WHERE ((((((rt0.c2 IN ())) IS TRUE)) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT rt0.c2 FROM t0, rt0;
SELECT DISTINCT rt0.c2 FROM t0, rt0 WHERE ((((rt0.c1)) BETWEEN ((CASE rt0.c2  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)) AND ((CAST(t0.c0 AS REAL))))) UNION SELECT DISTINCT rt0.c2 FROM t0, rt0 WHERE ((NOT ((((rt0.c1)) BETWEEN ((CASE rt0.c2  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)) AND ((CAST(t0.c0 AS REAL))))))) UNION SELECT DISTINCT rt0.c2 FROM t0, rt0 WHERE ((((((rt0.c1)) BETWEEN ((CASE rt0.c2  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)) AND ((CAST(t0.c0 AS REAL))))) ISNULL));
SELECT DISTINCT rt0.c2 FROM t0, rt0;
SELECT ALL t0.c0, rt0.c1 FROM rt0, t0 GROUP BY t0.c0, rt0.c1;
SELECT t0.c0, rt0.c1 FROM rt0, t0 WHERE (LIKE((((rt0.c1)) BETWEEN (('-1403744026')) AND ((t0.c0))), CAST(rt0.c1 AS BLOB), '-')) GROUP BY t0.c0, rt0.c1 UNION SELECT t0.c0, rt0.c1 FROM rt0, t0 WHERE ((NOT (LIKE((((rt0.c1)) BETWEEN (('-1403744026')) AND ((t0.c0))), CAST(rt0.c1 AS BLOB), '-')))) GROUP BY t0.c0, rt0.c1 UNION SELECT ALL t0.c0, rt0.c1 FROM rt0, t0 WHERE (((LIKE((((rt0.c1)) BETWEEN (('-1403744026')) AND ((t0.c0))), CAST(rt0.c1 AS BLOB), '-')) ISNULL)) GROUP BY t0.c0, rt0.c1;
SELECT ALL t0.c0, rt0.c1 FROM rt0, t0 GROUP BY t0.c0, rt0.c1;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING COUNT(MIN(rt0.c0)) UNION ALL SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (NOT (COUNT(MIN(rt0.c0)))) UNION ALL SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING ((COUNT(MIN(rt0.c0))) ISNULL);
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE (((rt0.c1) IS FALSE)) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (((rt0.c1) IS FALSE)))) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE (((((rt0.c1) IS FALSE)) ISNULL));
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE ((t0.c0 IN ()) COLLATE BINARY) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT ((t0.c0 IN ()) COLLATE BINARY))) UNION SELECT DISTINCT * FROM t0 WHERE ((((t0.c0 IN ()) COLLATE BINARY) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT ALL rt0.c1 FROM rt0, t0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0, t0 WHERE (((((((((((((rt0.c0)OR(rt0.c2)))AND(NULL)))OR(rt0.c2)))OR(rt0.c0)))AND(((rt0.c1)+(t0.c0)))))OR(((((rt0.c1)OR(rt0.c2)))OR(0X5ea1ddc0))))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0, t0 WHERE ((NOT (((((((((((((rt0.c0)OR(rt0.c2)))AND(NULL)))OR(rt0.c2)))OR(rt0.c0)))AND(((rt0.c1)+(t0.c0)))))OR(((((rt0.c1)OR(rt0.c2)))OR(0X5ea1ddc0))))))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0, t0 WHERE (((((((((((((((rt0.c0)OR(rt0.c2)))AND(NULL)))OR(rt0.c2)))OR(rt0.c0)))AND(((rt0.c1)+(t0.c0)))))OR(((((rt0.c1)OR(rt0.c2)))OR(0x5ea1ddc0))))) ISNULL)) GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0, t0 GROUP BY rt0.c1;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING ABS(((SUM(rt0.c0))&(rt0.c0))) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING (NOT (ABS(((SUM(rt0.c0))&(rt0.c0))))) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING ((ABS(((SUM(rt0.c0))&(rt0.c0)))) ISNULL);
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING ABS(((SUM(rt0.c0))&(rt0.c0))) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING (NOT (ABS(((SUM(rt0.c0))&(rt0.c0))))) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING ((ABS(((SUM(rt0.c0))&(rt0.c0)))) ISNULL);
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT ALL SUM(CAST(((((rt0.c1)AND(t0.c0)))OR(NULL)) AS INTEGER)) FROM t0, rt0 ORDER BY rt0.c1 DESC  NULLS LAST;
SELECT ALL * FROM rt0 LEFT OUTER JOIN t0 ON ((0.571672717483536)-(rt0.c2));
SELECT * FROM rt0 LEFT OUTER JOIN t0 ON ((0.571672717483536)-(rt0.c2)) WHERE ((~ (((rt0.c2)-(rt0.c0))))) UNION ALL SELECT ALL * FROM rt0 LEFT OUTER JOIN t0 ON ((0.571672717483536)-(rt0.c2)) WHERE ((NOT ((~ (((rt0.c2)-(rt0.c0))))))) UNION ALL SELECT ALL * FROM rt0 LEFT OUTER JOIN t0 ON ((0.571672717483536)-(rt0.c2)) WHERE ((((~ (((rt0.c2)-(rt0.c0))))) ISNULL));
SELECT ALL * FROM rt0 LEFT OUTER JOIN t0 ON ((0.571672717483536)-(rt0.c2));
SELECT DISTINCT rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c0 FROM rt0 WHERE (((rt0.c1)IS NOT(((rt0.c1)%(rt0.c0))))) UNION SELECT DISTINCT rt0.c0 FROM rt0 WHERE ((NOT (((rt0.c1)IS NOT(((rt0.c1)%(rt0.c0))))))) UNION SELECT DISTINCT rt0.c0 FROM rt0 WHERE (((((rt0.c1)IS NOT(((rt0.c1)%(rt0.c0))))) ISNULL));
SELECT DISTINCT rt0.c0 FROM rt0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 WHERE (CAST('VK' AS REAL)) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT (CAST('VK' AS REAL)))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE (((CAST('VK' AS REAL)) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL rt0.c0, rt0.c2 FROM t0 LEFT OUTER JOIN rt0 ON ((((((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c0)))AND(load_extension(rt0.c1))))AND(t0.c0 COLLATE RTRIM)) GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c2 FROM t0 LEFT OUTER JOIN rt0 ON ((((((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c0)))AND(load_extension(rt0.c1))))AND(t0.c0 COLLATE RTRIM)) GROUP BY rt0.c0, rt0.c2 HAVING CAST(COUNT(MIN(MIN(rt0.c2))) AS NUMERIC) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM t0 LEFT OUTER JOIN rt0 ON ((((((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c0)))AND(load_extension(rt0.c1))))AND(t0.c0 COLLATE RTRIM)) GROUP BY rt0.c0, rt0.c2 HAVING (NOT (CAST(COUNT(MIN(MIN(rt0.c2))) AS NUMERIC))) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM t0 LEFT OUTER JOIN rt0 ON ((((((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c0)))AND(load_extension(rt0.c1))))AND(t0.c0 COLLATE RTRIM)) GROUP BY rt0.c0, rt0.c2 HAVING ((CAST(COUNT(MIN(MIN(rt0.c2))) AS NUMERIC)) ISNULL);
SELECT ALL MIN(((((t0.c0) IS FALSE))>=(CAST(rt0.c0 AS BLOB)))) FROM t0, rt0 ORDER BY (((NULL))==(((NOT (rt0.c0)))))  NULLS LAST;
SELECT ALL * FROM t0 CROSS JOIN rt0 ON (((rt0.c1, (((t0.c0))!=((rt0.c1))), ((rt0.c2)>>(rt0.c1))))>((((rt0.c2)%(x'')), ((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1)), rt0.c0 COLLATE NOCASE)));
SELECT ALL * FROM t0 CROSS JOIN rt0 ON (((rt0.c1, (((t0.c0))!=((rt0.c1))), ((rt0.c2)>>(rt0.c1))))>((((rt0.c2)%(x'')), ((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1)), rt0.c0 COLLATE NOCASE))) WHERE (rt0.c2) UNION ALL SELECT ALL * FROM t0 CROSS JOIN rt0 ON (((rt0.c1, (((t0.c0))<>((rt0.c1))), ((rt0.c2)>>(rt0.c1))))>((((rt0.c2)%(x'')), ((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1)), rt0.c0 COLLATE NOCASE))) WHERE ((NOT (rt0.c2))) UNION ALL SELECT * FROM t0 CROSS JOIN rt0 ON (((rt0.c1, (((t0.c0))!=((rt0.c1))), ((rt0.c2)>>(rt0.c1))))>((((rt0.c2)%(x'')), ((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1)), rt0.c0 COLLATE NOCASE))) WHERE (((rt0.c2) ISNULL));
SELECT ALL * FROM t0 CROSS JOIN rt0 ON (((rt0.c1, (((t0.c0))!=((rt0.c1))), ((rt0.c2)>>(rt0.c1))))>((((rt0.c2)%(x'')), ((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1)), rt0.c0 COLLATE NOCASE)));
SELECT DISTINCT * FROM rt0, t0;
SELECT DISTINCT * FROM rt0, t0 WHERE (rt0.c0) UNION SELECT DISTINCT * FROM rt0, t0 WHERE ((NOT (rt0.c0))) UNION SELECT DISTINCT * FROM rt0, t0 WHERE (((rt0.c0) ISNULL));
SELECT DISTINCT * FROM rt0, t0;
SELECT rt0.c0, rt0.c2 FROM t0, rt0 GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c2 FROM t0, rt0 WHERE (LIKELIHOOD(DISTINCT (((t0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c2))), 0.7208044037596494)) GROUP BY rt0.c0, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c2 FROM t0, rt0 WHERE ((NOT (LIKELIHOOD(DISTINCT (((t0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c2))), 0.7208044037596494)))) GROUP BY rt0.c0, rt0.c2 UNION SELECT rt0.c0, rt0.c2 FROM t0, rt0 WHERE (((LIKELIHOOD(DISTINCT (((t0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c2))), 0.7208044037596494)) ISNULL)) GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c2 FROM t0, rt0 GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c2, rt0.c0, t0.c0 FROM t0, rt0 GROUP BY rt0.c2, rt0.c0, t0.c0;
SELECT ALL rt0.c2, rt0.c0, t0.c0 FROM t0, rt0 GROUP BY rt0.c2, rt0.c0, t0.c0 HAVING (+ (MIN(t0.c0))) UNION ALL SELECT ALL rt0.c2, rt0.c0, t0.c0 FROM t0, rt0 GROUP BY rt0.c2, rt0.c0, t0.c0 HAVING (NOT ((+ (MIN(t0.c0))))) UNION ALL SELECT rt0.c2, rt0.c0, t0.c0 FROM t0, rt0 GROUP BY rt0.c2, rt0.c0, t0.c0 HAVING (((+ (MIN(t0.c0)))) ISNULL);
SELECT rt0.c2, rt0.c0, t0.c0 FROM t0, rt0 GROUP BY rt0.c2, rt0.c0, t0.c0;
SELECT ALL rt0.c2, rt0.c0, t0.c0 FROM t0, rt0 GROUP BY rt0.c2, rt0.c0, t0.c0 HAVING (+ (MIN(t0.c0))) UNION ALL SELECT ALL rt0.c2, rt0.c0, t0.c0 FROM t0, rt0 GROUP BY rt0.c2, rt0.c0, t0.c0 HAVING (NOT ((+ (MIN(t0.c0))))) UNION ALL SELECT rt0.c2, rt0.c0, t0.c0 FROM t0, rt0 GROUP BY rt0.c2, rt0.c0, t0.c0 HAVING (((+ (MIN(t0.c0)))) ISNULL);
SELECT rt0.c2, rt0.c0, t0.c0 FROM t0, rt0 GROUP BY rt0.c2, rt0.c0, t0.c0;
SELECT ALL TOTAL(t0.c0) FROM rt0, t0 ORDER BY ((((rt0.c0)IS NOT(t0.c0)))+((+ (rt0.c0)))) ASC  NULLS FIRST;
SELECT ALL * FROM t0, rt0;
SELECT * FROM t0, rt0 WHERE (((CHANGES())&((+ (t0.c0))))) UNION ALL SELECT ALL * FROM t0, rt0 WHERE ((NOT (((CHANGES())&((+ (t0.c0))))))) UNION ALL SELECT * FROM t0 NOT INDEXED, rt0 WHERE (((((CHANGES())&((+ (t0.c0))))) ISNULL));
SELECT ALL * FROM t0, rt0;
SELECT DISTINCT t0.c0, rt0.c0, rt0.c2, rt0.c1 FROM t0, rt0;
SELECT DISTINCT t0.c0, rt0.c0, rt0.c2, rt0.c1 FROM t0, rt0 WHERE ((((((((('1218348102')AND(((t0.c0) IS TRUE))))AND(CAST(rt0.c1 AS NUMERIC))))AND(((((x'')AND(rt0.c2)))OR(rt0.c1)))))AND(CASE WHEN rt0.c0 THEN rt0.c2 END))) UNION SELECT DISTINCT t0.c0, rt0.c0, rt0.c2, rt0.c1 FROM t0, rt0 WHERE ((NOT ((((((((('1218348102')AND(((t0.c0) IS TRUE))))AND(CAST(rt0.c1 AS NUMERIC))))AND(((((x'')AND(rt0.c2)))OR(rt0.c1)))))AND(CASE WHEN rt0.c0 THEN rt0.c2 END))))) UNION SELECT DISTINCT t0.c0, rt0.c0, rt0.c2, rt0.c1 FROM t0, rt0 WHERE ((((((((((('1218348102')AND(((t0.c0) IS TRUE))))AND(CAST(rt0.c1 AS NUMERIC))))AND(((((x'')AND(rt0.c2)))OR(rt0.c1)))))AND(CASE WHEN rt0.c0 THEN rt0.c2 END))) ISNULL));
SELECT DISTINCT t0.c0, rt0.c0, rt0.c2, rt0.c1 FROM t0, rt0;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (((((- (rt0.c0))))<((((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c1)))))) GROUP BY rt0.c1, rt0.c0, rt0.c2 UNION SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (((((- (rt0.c0))))<((((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c1)))))))) GROUP BY rt0.c1, rt0.c0, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (((((((- (rt0.c0))))<((((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c1)))))) ISNULL)) GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT t0.c0, rt0.c2 FROM t0 LEFT OUTER JOIN rt0 ON UNLIKELY(rt0.c0) GROUP BY t0.c0, rt0.c2;
SELECT ALL t0.c0, rt0.c2 FROM t0 LEFT OUTER JOIN rt0 ON UNLIKELY(rt0.c0) GROUP BY t0.c0, rt0.c2 HAVING CASE WHEN COUNT(rt0.c0) THEN rt0.c2 ELSE NULL END UNION ALL SELECT ALL t0.c0, rt0.c2 FROM t0 LEFT OUTER JOIN rt0 ON UNLIKELY(rt0.c0) GROUP BY t0.c0, rt0.c2 HAVING (NOT (CASE WHEN COUNT(rt0.c0) THEN rt0.c2 ELSE NULL END)) UNION ALL SELECT t0.c0, rt0.c2 FROM t0 LEFT OUTER JOIN rt0 ON UNLIKELY(rt0.c0) GROUP BY t0.c0, rt0.c2 HAVING ((CASE WHEN COUNT(rt0.c0) THEN rt0.c2 ELSE NULL END) ISNULL);
SELECT t0.c0, rt0.c2 FROM t0 LEFT OUTER JOIN rt0 ON UNLIKELY(rt0.c0) GROUP BY t0.c0, rt0.c2;
SELECT ALL t0.c0, rt0.c2 FROM t0 LEFT OUTER JOIN rt0 ON UNLIKELY(rt0.c0) GROUP BY t0.c0, rt0.c2 HAVING CASE WHEN COUNT(rt0.c0) THEN rt0.c2 ELSE NULL END UNION ALL SELECT ALL t0.c0, rt0.c2 FROM t0 LEFT OUTER JOIN rt0 ON UNLIKELY(rt0.c0) GROUP BY t0.c0, rt0.c2 HAVING (NOT (CASE WHEN COUNT(rt0.c0) THEN rt0.c2 ELSE NULL END)) UNION ALL SELECT t0.c0, rt0.c2 FROM t0 LEFT OUTER JOIN rt0 ON UNLIKELY(rt0.c0) GROUP BY t0.c0, rt0.c2 HAVING ((CASE WHEN COUNT(rt0.c0) THEN rt0.c2 ELSE NULL END) ISNULL);
SELECT t0.c0, rt0.c2 FROM t0 LEFT OUTER JOIN rt0 ON UNLIKELY(rt0.c0) GROUP BY t0.c0, rt0.c2;
SELECT ALL * FROM t0 LEFT OUTER JOIN rt0 ON ((rt0.c2) IS TRUE) COLLATE NOCASE;
SELECT * FROM t0 LEFT OUTER JOIN rt0 ON ((rt0.c2) IS TRUE) COLLATE NOCASE WHERE (((((rt0.c0)-(rt0.c2)))||((rt0.c2 IN (rt0.c2))))) UNION ALL SELECT ALL * FROM t0 LEFT OUTER JOIN rt0 ON ((rt0.c2) IS TRUE) COLLATE NOCASE WHERE ((NOT (((((rt0.c0)-(rt0.c2)))||((rt0.c2 IN (rt0.c2))))))) UNION ALL SELECT * FROM t0 LEFT OUTER JOIN rt0 ON ((rt0.c2) IS TRUE) COLLATE NOCASE WHERE (((((((rt0.c0)-(rt0.c2)))||((rt0.c2 IN (rt0.c2))))) ISNULL));
SELECT ALL * FROM t0 LEFT OUTER JOIN rt0 ON ((rt0.c2) IS TRUE) COLLATE NOCASE;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE ('7,') UNION SELECT DISTINCT * FROM t0 WHERE ((NOT ('7,'))) UNION SELECT DISTINCT * FROM t0 WHERE ((('7,') ISNULL));
SELECT DISTINCT * FROM t0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 WHERE ((((((t0.c0)||(t0.c0))))<((((t0.c0) ISNULL))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT ((((((t0.c0)||(t0.c0))))<((((t0.c0) ISNULL))))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((((((((t0.c0)||(t0.c0))))<((((t0.c0) ISNULL))))) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT rt0.c0, t0.c0, rt0.c1, rt0.c2 FROM rt0 CROSS JOIN t0 ON CAST(rt0.c1 AS REAL) COLLATE NOCASE GROUP BY rt0.c0, t0.c0, rt0.c1, rt0.c2;
SELECT rt0.c0, t0.c0, rt0.c1, rt0.c2 FROM rt0 CROSS JOIN t0 ON CAST(rt0.c1 AS REAL) COLLATE NOCASE GROUP BY rt0.c0, t0.c0, rt0.c1, rt0.c2 HAVING COUNT(COUNT(SUM(TOTAL(SUM(rt0.c1))))) UNION ALL SELECT rt0.c0, t0.c0, rt0.c1, rt0.c2 FROM rt0 CROSS JOIN t0 ON CAST(rt0.c1 AS REAL) COLLATE NOCASE GROUP BY rt0.c0, t0.c0, rt0.c1, rt0.c2 HAVING (NOT (COUNT(COUNT(SUM(TOTAL(SUM(rt0.c1))))))) UNION ALL SELECT rt0.c0, t0.c0, rt0.c1, rt0.c2 FROM rt0 CROSS JOIN t0 ON CAST(rt0.c1 AS REAL) COLLATE NOCASE GROUP BY rt0.c0, t0.c0, rt0.c1, rt0.c2 HAVING ((COUNT(COUNT(SUM(TOTAL(SUM(rt0.c1)))))) ISNULL);
SELECT ALL TOTAL((((t0.c0 IN ())) IS TRUE)) FROM rt0, t0 ORDER BY -9.54489691E8 DESC;
SELECT * FROM rt0, t0;
SELECT ALL * FROM rt0, t0 WHERE ((x'' IN (rt0.c0))) UNION ALL SELECT * FROM rt0, t0 WHERE ((NOT ((x'' IN (rt0.c0))))) UNION ALL SELECT ALL * FROM rt0, t0 WHERE ((((x'' IN (rt0.c0))) ISNULL));
SELECT * FROM rt0, t0;
SELECT DISTINCT rt0.c1, t0.c0, rt0.c0 FROM t0, rt0;
SELECT DISTINCT rt0.c1, t0.c0, rt0.c0 FROM t0, rt0 WHERE ((((+ (t0.c0)))>(CAST(rt0.c2 AS INTEGER)))) UNION SELECT DISTINCT rt0.c1, t0.c0, rt0.c0 FROM t0, rt0 WHERE ((NOT ((((+ (t0.c0)))>(CAST(rt0.c2 AS INTEGER)))))) UNION SELECT DISTINCT rt0.c1, t0.c0, rt0.c0 FROM t0, rt0 WHERE ((((((+ (t0.c0)))>(CAST(rt0.c2 AS INTEGER)))) ISNULL));
SELECT DISTINCT rt0.c1, t0.c0, rt0.c0 FROM t0, rt0;
SELECT ALL rt0.c1, rt0.c2 FROM rt0, t0 GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM rt0, t0 WHERE ((+ ((rt0.c1 IN ())))) GROUP BY rt0.c1, rt0.c2 UNION SELECT rt0.c1, rt0.c2 FROM rt0 NOT INDEXED, t0 WHERE ((NOT ((+ ((rt0.c1 IN ())))))) GROUP BY rt0.c1, rt0.c2 UNION SELECT rt0.c1, rt0.c2 FROM rt0, t0 WHERE ((((+ ((rt0.c1 IN ())))) ISNULL)) GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM rt0, t0 GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING ((GROUP_CONCAT(COUNT(*))) NOTNULL) UNION ALL SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING (NOT (((GROUP_CONCAT(COUNT(*))) NOTNULL))) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING ((((GROUP_CONCAT(COUNT(*))) NOTNULL)) ISNULL);
SELECT ALL t0.c0 FROM t0;
SELECT t0.c0 FROM t0 WHERE (json_array_length(((t0.c0)+(t0.c0)))) UNION ALL SELECT t0.c0 FROM t0 WHERE ((NOT (json_array_length(((t0.c0)+(t0.c0)))))) UNION ALL SELECT t0.c0 FROM t0 WHERE (((json_array_length(((t0.c0)+(t0.c0)))) ISNULL));
SELECT ALL t0.c0 FROM t0;
SELECT DISTINCT * FROM t0, rt0;
SELECT DISTINCT * FROM t0, rt0 WHERE (CAST(((t0.c0)!=(t0.c0)) AS TEXT)) UNION SELECT DISTINCT * FROM t0, rt0 WHERE ((NOT (CAST(((t0.c0)<>(t0.c0)) AS TEXT)))) UNION SELECT DISTINCT * FROM t0, rt0 WHERE (((CAST(((t0.c0)<>(t0.c0)) AS TEXT)) ISNULL));
SELECT DISTINCT * FROM t0, rt0;
SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c2, rt0.c1 FROM rt0 WHERE (CAST(LOWER(rt0.c0) AS INTEGER)) GROUP BY rt0.c2, rt0.c1 UNION SELECT rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (CAST(LOWER(rt0.c0) AS INTEGER)))) GROUP BY rt0.c2, rt0.c1 UNION SELECT rt0.c2, rt0.c1 FROM rt0 WHERE (((CAST(LOWER(rt0.c0) AS INTEGER)) ISNULL)) GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING t0.c0 UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (t0.c0)) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((t0.c0) ISNULL);
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING t0.c0 UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (t0.c0)) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((t0.c0) ISNULL);
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0;
SELECT ALL t0.c0 FROM t0 WHERE (CASE ((t0.c0)GLOB(t0.c0))  WHEN ((t0.c0) ISNULL) THEN MIN(t0.c0, t0.c0) END) UNION ALL SELECT ALL t0.c0 FROM t0 WHERE ((NOT (CASE ((t0.c0)GLOB(t0.c0))  WHEN ((t0.c0) ISNULL) THEN MIN(t0.c0, t0.c0) END))) UNION ALL SELECT ALL t0.c0 FROM t0 WHERE (((CASE ((t0.c0)GLOB(t0.c0))  WHEN ((t0.c0) ISNULL) THEN MIN(t0.c0, t0.c0) END) ISNULL));
SELECT ALL t0.c0 FROM t0;
SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0, t0;
SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0, t0 WHERE (((((rt0.c2)GLOB(rt0.c0))) BETWEEN ((rt0.c0 IN ())) AND (0.9232153813874506))) UNION SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0, t0 WHERE ((NOT (((((rt0.c2)GLOB(rt0.c0))) BETWEEN ((rt0.c0 IN ())) AND (0.9232153813874506))))) UNION SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0, t0 WHERE (((((((rt0.c2)GLOB(rt0.c0))) BETWEEN ((rt0.c0 IN ())) AND (0.9232153813874506))) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0, t0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE ((CASE WHEN t0.c0 THEN x'' END IN (((t0.c0)<=(t0.c0))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT ((CASE WHEN t0.c0 THEN x'' END IN (((t0.c0)<=(t0.c0))))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((((CASE WHEN t0.c0 THEN x'' END IN (((t0.c0)<=(t0.c0))))) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING AVG(CAST(SUM(rt0.c0) AS REAL)) UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING (NOT (AVG(CAST(SUM(rt0.c0) AS REAL)))) UNION ALL SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING ((AVG(CAST(SUM(rt0.c0) AS REAL))) ISNULL);
SELECT ALL t0.c0 FROM t0;
SELECT ALL t0.c0 FROM t0 WHERE ((((((((t0.c0)OR(t0.c0)))AND(x'b11c')), -2037065244, (((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))), CAST(t0.c0 AS BLOB), t0.c0 COLLATE RTRIM))>((((('', '-87483', x'f4e3')) BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0))), CHANGES(), ((t0.c0)>=(0.5420942818686311)), ((t0.c0) NOT NULL), (((0.05522925783724664, t0.c0, t0.c0))>((t0.c0, t0.c0, t0.c0))))))) UNION ALL SELECT t0.c0 FROM t0 WHERE ((NOT ((((((((t0.c0)OR(t0.c0)))AND(x'b11c')), -2037065244, (((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))), CAST(t0.c0 AS BLOB), t0.c0 COLLATE RTRIM))>((((('', '-87483', x'f4e3')) BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0))), CHANGES(), ((t0.c0)>=(0.5420942818686311)), ((t0.c0) NOT NULL), (((0.05522925783724664, t0.c0, t0.c0))>((t0.c0, t0.c0, t0.c0))))))))) UNION ALL SELECT ALL t0.c0 FROM t0 WHERE ((((((((((t0.c0)OR(t0.c0)))AND(x'b11c')), -2037065244, (((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))), CAST(t0.c0 AS BLOB), t0.c0 COLLATE RTRIM))>((((('', '-87483', x'f4e3')) BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0))), CHANGES(), ((t0.c0)>=(0.5420942818686311)), ((t0.c0) NOT NULL), (((0.05522925783724664, t0.c0, t0.c0))>((t0.c0, t0.c0, t0.c0))))))) ISNULL));
SELECT ALL t0.c0 FROM t0;
SELECT DISTINCT rt0.c0, rt0.c2 FROM t0 CROSS JOIN rt0 ON NULL;
SELECT DISTINCT rt0.c0, rt0.c2 FROM t0 CROSS JOIN rt0 ON NULL WHERE (x'') UNION SELECT DISTINCT rt0.c0, rt0.c2 FROM t0 CROSS JOIN rt0 ON NULL WHERE ((NOT (x''))) UNION SELECT DISTINCT rt0.c0, rt0.c2 FROM t0 CROSS JOIN rt0 ON NULL WHERE (((x'') ISNULL));
SELECT DISTINCT rt0.c0, rt0.c2 FROM t0 CROSS JOIN rt0 ON NULL;
SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 WHERE (CAST(rt0.c2 AS TEXT)) GROUP BY rt0.c2, rt0.c0 UNION SELECT rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (CAST(rt0.c2 AS TEXT)))) GROUP BY rt0.c2, rt0.c0 UNION SELECT rt0.c2, rt0.c0 FROM rt0 WHERE (((CAST(rt0.c2 AS TEXT)) ISNULL)) GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c1, t0.c0 FROM rt0 RIGHT OUTER JOIN t0 ON (((rt0.c0) NOTNULL) IN (rt0.c1, rt0.c2 COLLATE RTRIM, (t0.c0 IN ()))) GROUP BY rt0.c2, rt0.c1, t0.c0;
SELECT ALL rt0.c2, rt0.c1, t0.c0 FROM rt0 RIGHT OUTER JOIN t0 ON (((rt0.c0) NOTNULL) IN (rt0.c1, rt0.c2 COLLATE RTRIM, (t0.c0 IN ()))) GROUP BY rt0.c2, rt0.c1, t0.c0 HAVING SUM(rt0.c1 COLLATE NOCASE) UNION ALL SELECT ALL rt0.c2, rt0.c1, t0.c0 FROM rt0 RIGHT OUTER JOIN t0 ON (((rt0.c0) NOTNULL) IN (rt0.c1, rt0.c2 COLLATE RTRIM, (t0.c0 IN ()))) GROUP BY rt0.c2, rt0.c1, t0.c0 HAVING (NOT (SUM(rt0.c1 COLLATE NOCASE))) UNION ALL SELECT rt0.c2, rt0.c1, t0.c0 FROM rt0 RIGHT OUTER JOIN t0 ON (((rt0.c0) NOTNULL) IN (rt0.c1, rt0.c2 COLLATE RTRIM, (t0.c0 IN ()))) GROUP BY rt0.c2, rt0.c1, t0.c0 HAVING ((SUM(rt0.c1 COLLATE NOCASE)) ISNULL);
SELECT ALL rt0.c2, rt0.c1, t0.c0 FROM rt0 RIGHT OUTER JOIN t0 ON (((rt0.c0) NOTNULL) IN (rt0.c1, rt0.c2 COLLATE RTRIM, (t0.c0 IN ()))) GROUP BY rt0.c2, rt0.c1, t0.c0;
SELECT ALL rt0.c2, rt0.c1, t0.c0 FROM rt0 RIGHT OUTER JOIN t0 ON (((rt0.c0) NOTNULL) IN (rt0.c1, rt0.c2 COLLATE RTRIM, (t0.c0 IN ()))) GROUP BY rt0.c2, rt0.c1, t0.c0 HAVING SUM(rt0.c1 COLLATE NOCASE) UNION ALL SELECT ALL rt0.c2, rt0.c1, t0.c0 FROM rt0 RIGHT OUTER JOIN t0 ON (((rt0.c0) NOTNULL) IN (rt0.c1, rt0.c2 COLLATE RTRIM, (t0.c0 IN ()))) GROUP BY rt0.c2, rt0.c1, t0.c0 HAVING (NOT (SUM(rt0.c1 COLLATE NOCASE))) UNION ALL SELECT rt0.c2, rt0.c1, t0.c0 FROM rt0 RIGHT OUTER JOIN t0 ON (((rt0.c0) NOTNULL) IN (rt0.c1, rt0.c2 COLLATE RTRIM, (t0.c0 IN ()))) GROUP BY rt0.c2, rt0.c1, t0.c0 HAVING ((SUM(rt0.c1 COLLATE NOCASE)) ISNULL);
SELECT ALL rt0.c2, rt0.c1, t0.c0 FROM rt0 RIGHT OUTER JOIN t0 ON (((rt0.c0) NOTNULL) IN (rt0.c1, rt0.c2 COLLATE RTRIM, (t0.c0 IN ()))) GROUP BY rt0.c2, rt0.c1, t0.c0;
SELECT * FROM t0, rt0;
SELECT * FROM t0, rt0 WHERE (((((rt0.c0) IS FALSE))IS NOT('} '))) UNION ALL SELECT ALL * FROM t0, rt0 WHERE ((NOT (((((rt0.c0) IS FALSE))IS NOT('} '))))) UNION ALL SELECT * FROM t0, rt0 WHERE (((((((rt0.c0) IS FALSE))IS NOT('} '))) ISNULL));
SELECT * FROM t0, rt0;
SELECT DISTINCT rt0.c2, rt0.c0 FROM t0, rt0;
SELECT DISTINCT rt0.c2, rt0.c0 FROM t0, rt0 WHERE ((((rt0.c2 IN (rt0.c0)))+(x''))) UNION SELECT DISTINCT rt0.c2, rt0.c0 FROM t0, rt0 WHERE ((NOT ((((rt0.c2 IN (rt0.c0)))+(x''))))) UNION SELECT DISTINCT rt0.c2, rt0.c0 FROM t0, rt0 WHERE ((((((rt0.c2 IN (rt0.c0)))+(x''))) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c0 FROM t0, rt0;
SELECT ALL t0.c0, rt0.c2, rt0.c0 FROM rt0, t0 GROUP BY t0.c0, rt0.c2, rt0.c0;
SELECT t0.c0, rt0.c2, rt0.c0 FROM rt0, t0 WHERE (TYPEOF(((t0.c0)IS(rt0.c0)))) GROUP BY t0.c0, rt0.c2, rt0.c0 UNION SELECT ALL t0.c0, rt0.c2, rt0.c0 FROM rt0, t0 WHERE ((NOT (TYPEOF(((t0.c0)IS(rt0.c0)))))) GROUP BY t0.c0, rt0.c2, rt0.c0 UNION SELECT t0.c0, rt0.c2, rt0.c0 FROM rt0, t0 WHERE (((TYPEOF(((t0.c0)IS(rt0.c0)))) ISNULL)) GROUP BY t0.c0, rt0.c2, rt0.c0;
SELECT ALL t0.c0, rt0.c2, rt0.c0 FROM rt0, t0 GROUP BY t0.c0, rt0.c2, rt0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING SUM((((t0.c0))>((COUNT(COUNT(t0.c0)))))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (SUM((((t0.c0))>((COUNT(COUNT(t0.c0)))))))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((SUM((((t0.c0))>((COUNT(COUNT(t0.c0))))))) ISNULL);
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((((((+ (rt0.c1)))AND((('')IS(rt0.c2)))))AND(((rt0.c0)-(NULL))))) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT ((((((+ (rt0.c1)))AND((('')IS(rt0.c2)))))AND(((rt0.c0)-(NULL))))))) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((((((((+ (rt0.c1)))AND((('')IS(rt0.c2)))))AND(((rt0.c0)-(NULL))))) ISNULL));
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (((t0.c0) IS TRUE)) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (((t0.c0) IS TRUE)))) UNION SELECT DISTINCT * FROM t0 WHERE (((((t0.c0) IS TRUE)) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT ALL t0.c0 FROM rt0, t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM rt0, t0 WHERE ((('郦ytS.') NOT BETWEEN (rt0.c2 COLLATE NOCASE) AND ('雸{௝'))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM rt0, t0 WHERE ((NOT ((('郦ytS.') NOT BETWEEN (rt0.c2 COLLATE NOCASE) AND ('雸{௝'))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM rt0, t0 WHERE ((((('郦ytS.') NOT BETWEEN (rt0.c2 COLLATE NOCASE) AND ('雸{௝'))) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM rt0, t0 GROUP BY t0.c0;
SELECT ALL rt0.c2 FROM rt0, t0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0, t0 GROUP BY rt0.c2 HAVING SUM(COUNT(TOTAL(COUNT(x'')))) UNION ALL SELECT rt0.c2 FROM rt0, t0 GROUP BY rt0.c2 HAVING (NOT (SUM(COUNT(TOTAL(COUNT(x'')))))) UNION ALL SELECT rt0.c2 FROM rt0, t0 GROUP BY rt0.c2 HAVING ((SUM(COUNT(TOTAL(COUNT(x''))))) ISNULL);
SELECT rt0.c2 FROM rt0;
SELECT ALL rt0.c2 FROM rt0 WHERE (((((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c1))), (~ (rt0.c2)), (NOT (rt0.c0))))<>(((((rt0.c2)) BETWEEN ((NULL)) AND ((rt0.c2))), CAST(rt0.c2 AS TEXT), (((rt0.c0, NULL, rt0.c0, rt0.c0, rt0.c1))<>((rt0.c1, rt0.c0, rt0.c0, rt0.c2, rt0.c2))))))) UNION ALL SELECT ALL rt0.c2 FROM rt0 WHERE ((NOT (((((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c1))), (~ (rt0.c2)), (NOT (rt0.c0))))!=(((((rt0.c2)) BETWEEN ((NULL)) AND ((rt0.c2))), CAST(rt0.c2 AS TEXT), (((rt0.c0, NULL, rt0.c0, rt0.c0, rt0.c1))!=((rt0.c1, rt0.c0, rt0.c0, rt0.c2, rt0.c2))))))))) UNION ALL SELECT ALL rt0.c2 FROM rt0 WHERE (((((((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c1))), (~ (rt0.c2)), (NOT (rt0.c0))))<>(((((rt0.c2)) BETWEEN ((NULL)) AND ((rt0.c2))), CAST(rt0.c2 AS TEXT), (((rt0.c0, NULL, rt0.c0, rt0.c0, rt0.c1))<>((rt0.c1, rt0.c0, rt0.c0, rt0.c2, rt0.c2))))))) ISNULL));
SELECT rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c1, t0.c0, rt0.c0, rt0.c2 FROM rt0, t0;
SELECT DISTINCT rt0.c1, t0.c0, rt0.c0, rt0.c2 FROM rt0, t0 WHERE (((rt0.c2 COLLATE BINARY)+((rt0.c2 IN ())))) UNION SELECT DISTINCT rt0.c1, t0.c0, rt0.c0, rt0.c2 FROM rt0, t0 WHERE ((NOT (((rt0.c2 COLLATE BINARY)+((rt0.c2 IN ())))))) UNION SELECT DISTINCT rt0.c1, t0.c0, rt0.c0, rt0.c2 FROM rt0, t0 WHERE (((((rt0.c2 COLLATE BINARY)+((rt0.c2 IN ())))) ISNULL));
SELECT DISTINCT rt0.c1, t0.c0, rt0.c0, rt0.c2 FROM rt0, t0;
SELECT ALL rt0.c0, rt0.c1 FROM rt0, t0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0, t0 WHERE ((((((rt0.c2, rt0.c0, rt0.c1)) BETWEEN ((rt0.c0, x'', x'')) AND ((NULL, rt0.c0, rt0.c2)))) ISNULL)) GROUP BY rt0.c0, rt0.c1 UNION SELECT rt0.c0, rt0.c1 FROM rt0, t0 WHERE ((NOT ((((((rt0.c2, rt0.c0, rt0.c1)) BETWEEN ((rt0.c0, x'', x'')) AND ((NULL, rt0.c0, rt0.c2)))) ISNULL)))) GROUP BY rt0.c0, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c1 FROM rt0, t0 WHERE ((((((((rt0.c2, rt0.c0, rt0.c1)) BETWEEN ((rt0.c0, x'', x'')) AND ((NULL, rt0.c0, rt0.c2)))) ISNULL)) ISNULL)) GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0, t0 GROUP BY rt0.c0, rt0.c1;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING COUNT(*) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING COUNT(*) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT * FROM rt0, t0;
SELECT ALL * FROM rt0, t0 WHERE ((+ (((rt0.c1)GLOB(t0.c0))))) UNION ALL SELECT ALL * FROM rt0, t0 WHERE ((NOT ((+ (((rt0.c1)GLOB(t0.c0))))))) UNION ALL SELECT ALL * FROM rt0, t0 WHERE ((((+ (((rt0.c1)GLOB(t0.c0))))) ISNULL));
SELECT * FROM rt0, t0;
SELECT DISTINCT * FROM t0, rt0;
SELECT DISTINCT * FROM t0, rt0 WHERE (((t0.c0 COLLATE BINARY)<<(t0.c0))) UNION SELECT DISTINCT * FROM t0, rt0 WHERE ((NOT (((t0.c0 COLLATE BINARY)<<(t0.c0))))) UNION SELECT DISTINCT * FROM t0, rt0 WHERE (((((t0.c0 COLLATE BINARY)<<(t0.c0))) ISNULL));
SELECT DISTINCT * FROM t0, rt0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE (((+ (t0.c0)) IN (t0.c0))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT (((+ (t0.c0)) IN (t0.c0))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE (((((+ (t0.c0)) IN (t0.c0))) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING COUNT(AVG(GROUP_CONCAT(NULL))) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING (NOT (COUNT(AVG(GROUP_CONCAT(NULL))))) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING ((COUNT(AVG(GROUP_CONCAT(NULL)))) ISNULL);
SELECT ALL rt0.c2 FROM rt0, t0;
SELECT rt0.c2 FROM rt0, t0 WHERE (((CASE t0.c0  WHEN rt0.c0 THEN rt0.c2 END) IS TRUE)) UNION ALL SELECT ALL rt0.c2 FROM rt0, t0 WHERE ((NOT (((CASE t0.c0  WHEN rt0.c0 THEN rt0.c2 END) IS TRUE)))) UNION ALL SELECT rt0.c2 FROM rt0, t0 WHERE (((((CASE t0.c0  WHEN rt0.c0 THEN rt0.c2 END) IS TRUE)) ISNULL));
SELECT ALL rt0.c2 FROM rt0, t0;
SELECT DISTINCT * FROM t0, rt0;
SELECT DISTINCT * FROM t0, rt0 WHERE (NULLIF(TRIM(rt0.c2, rt0.c1), rt0.c0)) UNION SELECT DISTINCT * FROM t0, rt0 WHERE ((NOT (NULLIF(TRIM(rt0.c2, rt0.c1), rt0.c0)))) UNION SELECT DISTINCT * FROM t0, rt0 WHERE (((NULLIF(TRIM(rt0.c2, rt0.c1), rt0.c0)) ISNULL));
SELECT DISTINCT * FROM t0, rt0;
SELECT rt0.c1, t0.c0, rt0.c2, rt0.c0 FROM t0, rt0 GROUP BY rt0.c1, t0.c0, rt0.c2, rt0.c0;
SELECT rt0.c1, t0.c0, rt0.c2, rt0.c0 FROM t0, rt0 WHERE ((CAST(rt0.c1 AS INTEGER) IN ())) GROUP BY rt0.c1, t0.c0, rt0.c2, rt0.c0 UNION SELECT ALL rt0.c1, t0.c0, rt0.c2, rt0.c0 FROM t0, rt0 WHERE ((NOT ((CAST(rt0.c1 AS INTEGER) IN ())))) GROUP BY rt0.c1, t0.c0, rt0.c2, rt0.c0 UNION SELECT rt0.c1, t0.c0, rt0.c2, rt0.c0 FROM t0, rt0 WHERE ((((CAST(rt0.c1 AS INTEGER) IN ())) ISNULL)) GROUP BY rt0.c1, t0.c0, rt0.c2, rt0.c0;
SELECT rt0.c1, t0.c0, rt0.c2, rt0.c0 FROM t0, rt0 GROUP BY rt0.c1, t0.c0, rt0.c2, rt0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING AVG(MAX(COUNT(TOTAL(t0.c0)))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (AVG(MAX(COUNT(TOTAL(t0.c0)))))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((AVG(MAX(COUNT(TOTAL(t0.c0))))) ISNULL);
SELECT ALL rt0.c2 FROM rt0, t0;
SELECT rt0.c2 FROM rt0, t0 WHERE (((((((((((((((rt0.c0)LIKE('AJ')))OR(CASE rt0.c0  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c2 END)))AND(rt0.c2 COLLATE NOCASE)))AND(CASE WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 END)))OR(CASE WHEN t0.c0 THEN rt0.c0 WHEN rt0.c1 THEN t0.c0 WHEN rt0.c0 THEN rt0.c2 ELSE x'3251' END)))AND(((rt0.c0)-(t0.c0)))))OR((t0.c0 IN ())))) UNION ALL SELECT ALL rt0.c2 FROM rt0, t0 WHERE ((NOT (((((((((((((((rt0.c0)LIKE('AJ')))OR(CASE rt0.c0  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c2 END)))AND(rt0.c2 COLLATE NOCASE)))AND(CASE WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 END)))OR(CASE WHEN t0.c0 THEN rt0.c0 WHEN rt0.c1 THEN t0.c0 WHEN rt0.c0 THEN rt0.c2 ELSE x'3251' END)))AND(((rt0.c0)-(t0.c0)))))OR((t0.c0 IN ())))))) UNION ALL SELECT ALL rt0.c2 FROM rt0, t0 WHERE (((((((((((((((((rt0.c0)LIKE('AJ')))OR(CASE rt0.c0  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c2 END)))AND(rt0.c2 COLLATE NOCASE)))AND(CASE WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 END)))OR(CASE WHEN t0.c0 THEN rt0.c0 WHEN rt0.c1 THEN t0.c0 WHEN rt0.c0 THEN rt0.c2 ELSE x'3251' END)))AND(((rt0.c0)-(t0.c0)))))OR((t0.c0 IN ())))) ISNULL));
SELECT ALL rt0.c2 FROM rt0, t0;
SELECT DISTINCT rt0.c0 FROM t0, rt0;
SELECT DISTINCT rt0.c0 FROM t0, rt0 WHERE (t0.c0) UNION SELECT DISTINCT rt0.c0 FROM t0, rt0 WHERE ((NOT (t0.c0))) UNION SELECT DISTINCT rt0.c0 FROM t0, rt0 WHERE (((t0.c0) ISNULL));
SELECT DISTINCT rt0.c0 FROM t0, rt0;
SELECT ALL rt0.c2 FROM rt0, t0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0, t0 WHERE (CAST(NULL AS REAL) COLLATE RTRIM) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0, t0 WHERE ((NOT (CAST(NULL AS REAL) COLLATE RTRIM))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0, t0 WHERE (((CAST(NULL AS REAL) COLLATE RTRIM) ISNULL)) GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0, t0 GROUP BY rt0.c2;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING COUNT(*) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING COUNT(*) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT ALL * FROM t0;
SELECT ALL * FROM t0 WHERE ((- ((((t0.c0))=((t0.c0)))))) UNION ALL SELECT ALL * FROM t0 WHERE ((NOT ((- ((((t0.c0))==((t0.c0)))))))) UNION ALL SELECT ALL * FROM t0 WHERE ((((- ((((t0.c0))==((t0.c0)))))) ISNULL));
SELECT ALL * FROM t0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE ((NOT (((t0.c0) NOT NULL)))) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT ((NOT (((t0.c0) NOT NULL)))))) UNION SELECT DISTINCT * FROM t0 WHERE ((((NOT (((t0.c0) NOT NULL)))) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE (CAST(t0.c0 AS TEXT) COLLATE RTRIM) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT (CAST(t0.c0 AS TEXT) COLLATE RTRIM))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE (((CAST(t0.c0 AS TEXT) COLLATE RTRIM) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING SUM(GROUP_CONCAT(t0.c0)) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (SUM(GROUP_CONCAT(t0.c0)))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((SUM(GROUP_CONCAT(t0.c0))) ISNULL);
SELECT rt0.c0, rt0.c1 FROM rt0;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 WHERE (rt0.c2) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (rt0.c2))) UNION ALL SELECT rt0.c0, rt0.c1 FROM rt0 WHERE (((rt0.c2) ISNULL));
SELECT rt0.c0, rt0.c1 FROM rt0;
SELECT DISTINCT t0.c0, rt0.c1, rt0.c0 FROM rt0, t0;
SELECT DISTINCT t0.c0, rt0.c1, rt0.c0 FROM rt0, t0 WHERE (((rt0.c0)|(rt0.c0)) COLLATE BINARY) UNION SELECT DISTINCT t0.c0, rt0.c1, rt0.c0 FROM rt0, t0 WHERE ((NOT (((rt0.c0)|(rt0.c0)) COLLATE BINARY))) UNION SELECT DISTINCT t0.c0, rt0.c1, rt0.c0 FROM rt0, t0 WHERE (((((rt0.c0)|(rt0.c0)) COLLATE BINARY) ISNULL));
SELECT DISTINCT t0.c0, rt0.c1, rt0.c0 FROM rt0, t0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 WHERE (((((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c2))) IS FALSE)) GROUP BY rt0.c1, rt0.c0 UNION SELECT rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (((((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c2))) IS FALSE)))) GROUP BY rt0.c1, rt0.c0 UNION SELECT rt0.c1, rt0.c0 FROM rt0 NOT INDEXED WHERE (((((((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c2))) IS FALSE)) ISNULL)) GROUP BY rt0.c1, rt0.c0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING AVG(CASE rt0.c2  WHEN GROUP_CONCAT(GROUP_CONCAT(rt0.c2)) THEN AVG(GROUP_CONCAT(NULL)) WHEN AVG(GROUP_CONCAT(GROUP_CONCAT(rt0.c1))) THEN rt0.c2 WHEN GROUP_CONCAT(rt0.c2) THEN MAX(rt0.c1) END) UNION ALL SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (NOT (AVG(CASE rt0.c2  WHEN GROUP_CONCAT(GROUP_CONCAT(rt0.c2)) THEN AVG(GROUP_CONCAT(NULL)) WHEN AVG(GROUP_CONCAT(GROUP_CONCAT(rt0.c1))) THEN rt0.c2 WHEN GROUP_CONCAT(rt0.c2) THEN MAX(rt0.c1) END))) UNION ALL SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING ((AVG(CASE rt0.c2  WHEN GROUP_CONCAT(GROUP_CONCAT(rt0.c2)) THEN AVG(GROUP_CONCAT(NULL)) WHEN AVG(GROUP_CONCAT(GROUP_CONCAT(rt0.c1))) THEN rt0.c2 WHEN GROUP_CONCAT(rt0.c2) THEN MAX(rt0.c1) END)) ISNULL);
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((rt0.c2 IN (NULL))) UNION ALL SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT ((rt0.c2 IN (NULL))))) UNION ALL SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((((rt0.c2 IN (NULL))) ISNULL));
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (CASE CHANGES()  WHEN ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) THEN (((t0.c0))==((t0.c0))) ELSE t0.c0 COLLATE BINARY END) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (CASE CHANGES()  WHEN ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) THEN (((t0.c0))=((t0.c0))) ELSE t0.c0 COLLATE BINARY END))) UNION SELECT DISTINCT * FROM t0 WHERE (((CASE CHANGES()  WHEN ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) THEN (((t0.c0))=((t0.c0))) ELSE t0.c0 COLLATE BINARY END) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 WHERE (0x56739655) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0 WHERE ((NOT (0X56739655))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0 WHERE (((0x56739655) ISNULL)) GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING MIN(-1.873652856E9) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (MIN(-1.873652856E9))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((MIN(-1.873652856E9)) ISNULL);
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING MIN(-1.873652856E9) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (MIN(-1.873652856E9))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((MIN(-1.873652856E9)) ISNULL);
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL * FROM t0, rt0;
SELECT ALL * FROM t0, rt0 WHERE (CASE (((t0.c0, rt0.c0, t0.c0))!=((rt0.c2, rt0.c0, t0.c0)))  WHEN ((((((((rt0.c2)AND(rt0.c2)))AND(rt0.c1)))OR(rt0.c1)))AND(rt0.c0)) THEN ((t0.c0)*(t0.c0)) END) UNION ALL SELECT * FROM t0, rt0 WHERE ((NOT (CASE (((t0.c0, rt0.c0, t0.c0))<>((rt0.c2, rt0.c0, t0.c0)))  WHEN ((((((((rt0.c2)AND(rt0.c2)))AND(rt0.c1)))OR(rt0.c1)))AND(rt0.c0)) THEN ((t0.c0)*(t0.c0)) END))) UNION ALL SELECT * FROM t0, rt0 WHERE (((CASE (((t0.c0, rt0.c0, t0.c0))<>((rt0.c2, rt0.c0, t0.c0)))  WHEN ((((((((rt0.c2)AND(rt0.c2)))AND(rt0.c1)))OR(rt0.c1)))AND(rt0.c0)) THEN ((t0.c0)*(t0.c0)) END) ISNULL));
SELECT ALL * FROM t0, rt0;
SELECT DISTINCT rt0.c1 FROM rt0, t0;
SELECT DISTINCT rt0.c1 FROM rt0, t0 WHERE (rt0.c2 COLLATE RTRIM) UNION SELECT DISTINCT rt0.c1 FROM rt0, t0 WHERE ((NOT (rt0.c2 COLLATE RTRIM))) UNION SELECT DISTINCT rt0.c1 FROM rt0, t0 WHERE (((rt0.c2 COLLATE RTRIM) ISNULL));
SELECT DISTINCT rt0.c1 FROM rt0, t0;
SELECT rt0.c1, t0.c0, rt0.c2 FROM t0, rt0 GROUP BY rt0.c1, t0.c0, rt0.c2;
SELECT ALL rt0.c1, t0.c0, rt0.c2 FROM t0, rt0 WHERE (((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c0))) NOT BETWEEN ((- (rt0.c0))) AND (')'))) GROUP BY rt0.c1, t0.c0, rt0.c2 UNION SELECT rt0.c1, t0.c0, rt0.c2 FROM t0, rt0 WHERE ((NOT (((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c0))) NOT BETWEEN ((- (rt0.c0))) AND (')'))))) GROUP BY rt0.c1, t0.c0, rt0.c2 UNION SELECT rt0.c1, t0.c0, rt0.c2 FROM t0, rt0 WHERE (((((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c0))) NOT BETWEEN ((- (rt0.c0))) AND (')'))) ISNULL)) GROUP BY rt0.c1, t0.c0, rt0.c2;
SELECT rt0.c1, t0.c0, rt0.c2 FROM t0, rt0 GROUP BY rt0.c1, t0.c0, rt0.c2;
SELECT ALL rt0.c1 FROM rt0 RIGHT OUTER JOIN t0 ON '}?*' GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 RIGHT OUTER JOIN t0 ON '}?*' GROUP BY rt0.c1 HAVING GROUP_CONCAT(AVG(rt0.c2)) UNION ALL SELECT rt0.c1 FROM rt0 RIGHT OUTER JOIN t0 ON '}?*' GROUP BY rt0.c1 HAVING (NOT (GROUP_CONCAT(AVG(rt0.c2)))) UNION ALL SELECT ALL rt0.c1 FROM rt0 RIGHT OUTER JOIN t0 ON '}?*' GROUP BY rt0.c1 HAVING ((GROUP_CONCAT(AVG(rt0.c2))) ISNULL);
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE (((((NOT (rt0.c1))))!=((CAST(rt0.c0 AS BLOB))))) UNION ALL SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (((((NOT (rt0.c1))))!=((CAST(rt0.c0 AS BLOB))))))) UNION ALL SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE (((((((NOT (rt0.c1))))!=((CAST(rt0.c0 AS BLOB))))) ISNULL));
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0;
SELECT DISTINCT * FROM t0 CROSS JOIN rt0 ON ((CAST(rt0.c1 AS BLOB))<=(CASE WHEN rt0.c2 THEN t0.c0 ELSE t0.c0 END));
SELECT DISTINCT * FROM t0 CROSS JOIN rt0 ON ((CAST(rt0.c1 AS BLOB))<=(CASE WHEN rt0.c2 THEN t0.c0 ELSE t0.c0 END)) WHERE (((rt0.c1) NOT BETWEEN ((rt0.c2 IN (rt0.c1, rt0.c2))) AND (2126870496))) UNION SELECT DISTINCT * FROM t0 CROSS JOIN rt0 ON ((CAST(rt0.c1 AS BLOB))<=(CASE WHEN rt0.c2 THEN t0.c0 ELSE t0.c0 END)) WHERE ((NOT (((rt0.c1) NOT BETWEEN ((rt0.c2 IN (rt0.c1, rt0.c2))) AND (2126870496))))) UNION SELECT DISTINCT * FROM t0 CROSS JOIN rt0 ON ((CAST(rt0.c1 AS BLOB))<=(CASE WHEN rt0.c2 THEN t0.c0 ELSE t0.c0 END)) WHERE (((((rt0.c1) NOT BETWEEN ((rt0.c2 IN (rt0.c1, rt0.c2))) AND (2126870496))) ISNULL));
SELECT DISTINCT * FROM t0 CROSS JOIN rt0 ON ((CAST(rt0.c1 AS BLOB))<=(CASE WHEN rt0.c2 THEN t0.c0 ELSE t0.c0 END));
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((((((rt0.c0))=((rt0.c1))))<<(LOWER(0.5690924079628082)))) GROUP BY rt0.c1, rt0.c0, rt0.c2 UNION SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT ((((((rt0.c0))==((rt0.c1))))<<(LOWER(0.5690924079628082)))))) GROUP BY rt0.c1, rt0.c0, rt0.c2 UNION SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((((((((rt0.c0))==((rt0.c1))))<<(LOWER(0.5690924079628082)))) ISNULL)) GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT t0.c0, rt0.c0, rt0.c2, rt0.c1 FROM rt0, t0 GROUP BY t0.c0, rt0.c0, rt0.c2, rt0.c1;
SELECT ALL t0.c0, rt0.c0, rt0.c2, rt0.c1 FROM rt0, t0 GROUP BY t0.c0, rt0.c0, rt0.c2, rt0.c1 HAVING AVG(COUNT(t0.c0)) UNION ALL SELECT t0.c0, rt0.c0, rt0.c2, rt0.c1 FROM rt0, t0 GROUP BY t0.c0, rt0.c0, rt0.c2, rt0.c1 HAVING (NOT (AVG(COUNT(t0.c0)))) UNION ALL SELECT t0.c0, rt0.c0, rt0.c2, rt0.c1 FROM rt0, t0 GROUP BY t0.c0, rt0.c0, rt0.c2, rt0.c1 HAVING ((AVG(COUNT(t0.c0))) ISNULL);
SELECT ALL t0.c0 FROM t0, rt0;
SELECT ALL t0.c0 FROM t0, rt0 WHERE (((((rt0.c1)&(t0.c0))) IS TRUE)) UNION ALL SELECT t0.c0 FROM t0, rt0 WHERE ((NOT (((((rt0.c1)&(t0.c0))) IS TRUE)))) UNION ALL SELECT ALL t0.c0 FROM t0, rt0 WHERE (((((((rt0.c1)&(t0.c0))) IS TRUE)) ISNULL));
SELECT ALL t0.c0 FROM t0, rt0;
SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ('2') UNION SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT ('2'))) UNION SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((('2') ISNULL));
SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0;
SELECT rt0.c1 FROM rt0, t0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0, t0 WHERE (((t0.c0)>=(NULL)) COLLATE RTRIM) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0, t0 WHERE ((NOT (((t0.c0)>=(NULL)) COLLATE RTRIM))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0, t0 WHERE (((((t0.c0)>=(NULL)) COLLATE RTRIM) ISNULL)) GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0, t0 GROUP BY rt0.c1;
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING MAX(COUNT(GROUP_CONCAT(rt0.c1))) UNION ALL SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING (NOT (MAX(COUNT(GROUP_CONCAT(rt0.c1))))) UNION ALL SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING ((MAX(COUNT(GROUP_CONCAT(rt0.c1)))) ISNULL);
SELECT * FROM rt0, t0;
SELECT ALL * FROM rt0, t0 WHERE (rt0.c2) UNION ALL SELECT * FROM rt0, t0 WHERE ((NOT (rt0.c2))) UNION ALL SELECT * FROM rt0, t0 WHERE (((rt0.c2) ISNULL));
SELECT * FROM rt0, t0;
SELECT DISTINCT * FROM rt0, t0;
SELECT DISTINCT * FROM rt0, t0 WHERE (1770048255) UNION SELECT DISTINCT * FROM rt0, t0 WHERE ((NOT (1770048255))) UNION SELECT DISTINCT * FROM rt0, t0 WHERE (((1770048255) ISNULL));
SELECT DISTINCT * FROM rt0, t0;
SELECT ALL rt0.c0, rt0.c1 FROM rt0, t0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0, t0 WHERE (rt0.c2) GROUP BY rt0.c0, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c1 FROM rt0, t0 WHERE ((NOT (rt0.c2))) GROUP BY rt0.c0, rt0.c1 UNION SELECT rt0.c0, rt0.c1 FROM rt0, t0 WHERE (((rt0.c2) ISNULL)) GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0, t0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0 FROM t0 NOT INDEXED NATURAL JOIN rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM t0 NATURAL JOIN rt0 GROUP BY rt0.c0 HAVING MIN(TOTAL(GROUP_CONCAT(GROUP_CONCAT(GROUP_CONCAT(AVG(MAX(GROUP_CONCAT(NULL)))))))) UNION ALL SELECT rt0.c0 FROM t0 NATURAL JOIN rt0 GROUP BY rt0.c0 HAVING (NOT (MIN(TOTAL(GROUP_CONCAT(GROUP_CONCAT(GROUP_CONCAT(AVG(MAX(GROUP_CONCAT(NULL)))))))))) UNION ALL SELECT rt0.c0 FROM t0 NATURAL JOIN rt0 GROUP BY rt0.c0 HAVING ((MIN(TOTAL(GROUP_CONCAT(GROUP_CONCAT(GROUP_CONCAT(AVG(MAX(GROUP_CONCAT(NULL))))))))) ISNULL);
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT ((rt0.c2 IN ())))) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT ((NOT ((rt0.c2 IN ())))))) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((((NOT ((rt0.c2 IN ())))) ISNULL));
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0;
SELECT DISTINCT * FROM rt0, t0;
SELECT DISTINCT * FROM rt0, t0 WHERE (CASE WHEN '1926015403' THEN (t0.c0 IN ()) END) UNION SELECT DISTINCT * FROM rt0, t0 WHERE ((NOT (CASE WHEN '1926015403' THEN (t0.c0 IN ()) END))) UNION SELECT DISTINCT * FROM rt0, t0 WHERE (((CASE WHEN '1926015403' THEN (t0.c0 IN ()) END) ISNULL));
SELECT DISTINCT * FROM rt0, t0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE ('IS긼1((}i') GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT ('IS긼1((}i'))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((('IS긼1((}i') ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0, rt0.c1, rt0.c0 FROM t0, rt0 GROUP BY t0.c0, rt0.c1, rt0.c0;
SELECT t0.c0, rt0.c1, rt0.c0 FROM t0, rt0 GROUP BY t0.c0, rt0.c1, rt0.c0 HAVING TOTAL(CAST(rt0.c1 AS BLOB)) UNION ALL SELECT ALL t0.c0, rt0.c1, rt0.c0 FROM t0, rt0 GROUP BY t0.c0, rt0.c1, rt0.c0 HAVING (NOT (TOTAL(CAST(rt0.c1 AS BLOB)))) UNION ALL SELECT t0.c0, rt0.c1, rt0.c0 FROM t0, rt0 GROUP BY t0.c0, rt0.c1, rt0.c0 HAVING ((TOTAL(CAST(rt0.c1 AS BLOB))) ISNULL);
SELECT t0.c0, rt0.c1, rt0.c0 FROM t0, rt0 GROUP BY t0.c0, rt0.c1, rt0.c0;
SELECT t0.c0, rt0.c1, rt0.c0 FROM t0, rt0 GROUP BY t0.c0, rt0.c1, rt0.c0 HAVING TOTAL(CAST(rt0.c1 AS BLOB)) UNION ALL SELECT ALL t0.c0, rt0.c1, rt0.c0 FROM t0, rt0 GROUP BY t0.c0, rt0.c1, rt0.c0 HAVING (NOT (TOTAL(CAST(rt0.c1 AS BLOB)))) UNION ALL SELECT t0.c0, rt0.c1, rt0.c0 FROM t0, rt0 GROUP BY t0.c0, rt0.c1, rt0.c0 HAVING ((TOTAL(CAST(rt0.c1 AS BLOB))) ISNULL);
SELECT t0.c0, rt0.c1, rt0.c0 FROM t0, rt0 GROUP BY t0.c0, rt0.c1, rt0.c0;
SELECT rt0.c1, rt0.c0 FROM rt0;
SELECT rt0.c1, rt0.c0 FROM rt0 WHERE ((~ (rt0.c1))) UNION ALL SELECT rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT ((~ (rt0.c1))))) UNION ALL SELECT ALL rt0.c1, rt0.c0 FROM rt0 WHERE ((((~ (rt0.c1))) ISNULL));
SELECT rt0.c1, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c0 FROM rt0, t0;
SELECT DISTINCT rt0.c0 FROM rt0, t0 WHERE (((((t0.c0)!=(rt0.c2))) BETWEEN (((rt0.c0)*(rt0.c0))) AND (rt0.c2 COLLATE RTRIM))) UNION SELECT DISTINCT rt0.c0 FROM rt0, t0 WHERE ((NOT (((((t0.c0)!=(rt0.c2))) BETWEEN (((rt0.c0)*(rt0.c0))) AND (rt0.c2 COLLATE RTRIM))))) UNION SELECT DISTINCT rt0.c0 FROM rt0, t0 WHERE (((((((t0.c0)<>(rt0.c2))) BETWEEN (((rt0.c0)*(rt0.c0))) AND (rt0.c2 COLLATE RTRIM))) ISNULL));
SELECT DISTINCT rt0.c0 FROM rt0, t0;
SELECT rt0.c2, t0.c0, rt0.c0, rt0.c1 FROM t0, rt0 GROUP BY rt0.c2, t0.c0, rt0.c0, rt0.c1;
SELECT rt0.c2, t0.c0, rt0.c0, rt0.c1 FROM t0, rt0 WHERE ((+ (((((((((((((0.22388115149334264)OR(t0.c0)))AND(rt0.c2)))AND(t0.c0)))OR(rt0.c2)))OR(rt0.c1)))OR(rt0.c0))))) GROUP BY rt0.c2, t0.c0, rt0.c0, rt0.c1 UNION SELECT rt0.c2, t0.c0, rt0.c0, rt0.c1 FROM t0, rt0 WHERE ((NOT ((+ (((((((((((((0.22388115149334264)OR(t0.c0)))AND(rt0.c2)))AND(t0.c0)))OR(rt0.c2)))OR(rt0.c1)))OR(rt0.c0))))))) GROUP BY rt0.c2, t0.c0, rt0.c0, rt0.c1 UNION SELECT ALL rt0.c2, t0.c0, rt0.c0, rt0.c1 FROM t0, rt0 WHERE ((((+ (((((((((((((0.22388115149334264)OR(t0.c0)))AND(rt0.c2)))AND(t0.c0)))OR(rt0.c2)))OR(rt0.c1)))OR(rt0.c0))))) ISNULL)) GROUP BY rt0.c2, t0.c0, rt0.c0, rt0.c1;
SELECT rt0.c2, t0.c0, rt0.c0, rt0.c1 FROM t0, rt0 GROUP BY rt0.c2, t0.c0, rt0.c0, rt0.c1;
SELECT ALL rt0.c2 FROM rt0, t0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0, t0 GROUP BY rt0.c2 HAVING TOTAL(((SUM(COUNT(COUNT(rt0.c1))))GLOB(SUM(rt0.c0)))) UNION ALL SELECT rt0.c2 FROM rt0, t0 GROUP BY rt0.c2 HAVING (NOT (TOTAL(((SUM(COUNT(COUNT(rt0.c1))))GLOB(SUM(rt0.c0)))))) UNION ALL SELECT ALL rt0.c2 FROM rt0, t0 GROUP BY rt0.c2 HAVING ((TOTAL(((SUM(COUNT(COUNT(rt0.c1))))GLOB(SUM(rt0.c0))))) ISNULL);
SELECT ALL t0.c0 FROM t0;
SELECT ALL t0.c0 FROM t0 WHERE (((((CASE WHEN t0.c0 THEN x'9a983930' WHEN NULL THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)AND((((t0.c0, t0.c0, t0.c0))=((t0.c0, t0.c0, t0.c0))))))AND(((1600112599)LIKE(t0.c0))))) UNION ALL SELECT t0.c0 FROM t0 WHERE ((NOT (((((CASE WHEN t0.c0 THEN x'9a983930' WHEN NULL THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)AND((((t0.c0, t0.c0, t0.c0))==((t0.c0, t0.c0, t0.c0))))))AND(((1600112599)LIKE(t0.c0))))))) UNION ALL SELECT ALL t0.c0 FROM t0 WHERE (((((((CASE WHEN t0.c0 THEN x'9a983930' WHEN NULL THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)AND((((t0.c0, t0.c0, t0.c0))=((t0.c0, t0.c0, t0.c0))))))AND(((1600112599)LIKE(t0.c0))))) ISNULL));
SELECT ALL t0.c0 FROM t0;
SELECT DISTINCT rt0.c2, rt0.c1, t0.c0 FROM t0, rt0;
SELECT DISTINCT rt0.c2, rt0.c1, t0.c0 FROM t0, rt0 WHERE (x'03a6') UNION SELECT DISTINCT rt0.c2, rt0.c1, t0.c0 FROM t0, rt0 WHERE ((NOT (x'03a6'))) UNION SELECT DISTINCT rt0.c2, rt0.c1, t0.c0 FROM t0, rt0 WHERE (((x'03a6') ISNULL));
SELECT DISTINCT rt0.c2, rt0.c1, t0.c0 FROM t0, rt0;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE (((TRIM(DISTINCT rt0.c2))AND(((rt0.c2)||(rt0.c1))))) GROUP BY rt0.c0, rt0.c1, rt0.c2 UNION SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 NOT INDEXED WHERE ((NOT (((TRIM(DISTINCT rt0.c2))AND(((rt0.c2)||(rt0.c1))))))) GROUP BY rt0.c0, rt0.c1, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE (((((TRIM(DISTINCT rt0.c2))AND(((rt0.c2)||(rt0.c1))))) ISNULL)) GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c0, rt0.c2, t0.c0 FROM t0, rt0 GROUP BY rt0.c0, rt0.c2, t0.c0;
SELECT ALL rt0.c0, rt0.c2, t0.c0 FROM t0, rt0 GROUP BY rt0.c0, rt0.c2, t0.c0 HAVING SUM(MIN(COUNT('-1844795600'))) UNION ALL SELECT ALL rt0.c0, rt0.c2, t0.c0 FROM t0, rt0 GROUP BY rt0.c0, rt0.c2, t0.c0 HAVING (NOT (SUM(MIN(COUNT('-1844795600'))))) UNION ALL SELECT ALL rt0.c0, rt0.c2, t0.c0 FROM t0, rt0 GROUP BY rt0.c0, rt0.c2, t0.c0 HAVING ((SUM(MIN(COUNT('-1844795600')))) ISNULL);
SELECT rt0.c1 FROM rt0, t0;
SELECT rt0.c1 FROM rt0, t0 WHERE (((((((((((((((t0.c0) NOT NULL))OR((t0.c0 IN ()))))OR(ABS(rt0.c2))))OR(CAST(rt0.c2 AS REAL))))AND(((rt0.c0)&(rt0.c1)))))AND(((rt0.c2)GLOB(rt0.c2)))))OR(CAST(rt0.c2 AS INTEGER)))) UNION ALL SELECT rt0.c1 FROM rt0, t0 WHERE ((NOT (((((((((((((((t0.c0) NOT NULL))OR((t0.c0 IN ()))))OR(ABS(rt0.c2))))OR(CAST(rt0.c2 AS REAL))))AND(((rt0.c0)&(rt0.c1)))))AND(((rt0.c2)GLOB(rt0.c2)))))OR(CAST(rt0.c2 AS INTEGER)))))) UNION ALL SELECT ALL rt0.c1 FROM rt0, t0 WHERE (((((((((((((((((t0.c0) NOT NULL))OR((t0.c0 IN ()))))OR(ABS(rt0.c2))))OR(CAST(rt0.c2 AS REAL))))AND(((rt0.c0)&(rt0.c1)))))AND(((rt0.c2)GLOB(rt0.c2)))))OR(CAST(rt0.c2 AS INTEGER)))) ISNULL));
SELECT rt0.c1 FROM rt0, t0;
SELECT DISTINCT rt0.c2 FROM rt0, t0;
SELECT DISTINCT rt0.c2 FROM rt0, t0 WHERE (((json_array(rt0.c1, '-1641522413')) NOT BETWEEN (((rt0.c1) NOT NULL)) AND (rt0.c2 COLLATE BINARY))) UNION SELECT DISTINCT rt0.c2 FROM rt0, t0 WHERE ((NOT (((json_array(rt0.c1, '-1641522413')) NOT BETWEEN (((rt0.c1) NOT NULL)) AND (rt0.c2 COLLATE BINARY))))) UNION SELECT DISTINCT rt0.c2 FROM rt0, t0 WHERE (((((json_array(rt0.c1, '-1641522413')) NOT BETWEEN (((rt0.c1) NOT NULL)) AND (rt0.c2 COLLATE BINARY))) ISNULL));
SELECT DISTINCT rt0.c2 FROM rt0, t0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 WHERE (((((((t0.c0)>>('')))OR('')))AND(NULLIF(t0.c0, t0.c0)))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT (((((((t0.c0)>>('')))OR('')))AND(NULLIF(t0.c0, t0.c0)))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE (((((((((t0.c0)>>('')))OR('')))AND(NULLIF(t0.c0, t0.c0)))) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 RIGHT OUTER JOIN t0 ON (+ (' 1')) GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 RIGHT OUTER JOIN t0 ON (+ (' 1')) GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING (+ (((rt0.c0) NOT BETWEEN (rt0.c1) AND (x'')))) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 RIGHT OUTER JOIN t0 ON (+ (' 1')) GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING (NOT ((+ (((rt0.c0) NOT BETWEEN (rt0.c1) AND (x'')))))) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 RIGHT OUTER JOIN t0 ON (+ (' 1')) GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING (((+ (((rt0.c0) NOT BETWEEN (rt0.c1) AND (x''))))) ISNULL);
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 RIGHT OUTER JOIN t0 ON (+ (' 1')) GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 RIGHT OUTER JOIN t0 ON (+ (' 1')) GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING (+ (((rt0.c0) NOT BETWEEN (rt0.c1) AND (x'')))) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 RIGHT OUTER JOIN t0 ON (+ (' 1')) GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING (NOT ((+ (((rt0.c0) NOT BETWEEN (rt0.c1) AND (x'')))))) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 RIGHT OUTER JOIN t0 ON (+ (' 1')) GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING (((+ (((rt0.c0) NOT BETWEEN (rt0.c1) AND (x''))))) ISNULL);
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 RIGHT OUTER JOIN t0 ON (+ (' 1')) GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT * FROM t0;
SELECT ALL * FROM t0 WHERE (((((t0.c0)+(t0.c0)))%(CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END))) UNION ALL SELECT ALL * FROM t0 WHERE ((NOT (((((t0.c0)+(t0.c0)))%(CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END))))) UNION ALL SELECT * FROM t0 WHERE (((((((t0.c0)+(t0.c0)))%(CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END))) ISNULL));
SELECT * FROM t0;
SELECT DISTINCT * FROM t0, rt0;
SELECT DISTINCT * FROM t0, rt0 WHERE (CAST(CASE WHEN rt0.c0 THEN x'' ELSE rt0.c2 END AS NUMERIC)) UNION SELECT DISTINCT * FROM t0, rt0 WHERE ((NOT (CAST(CASE WHEN rt0.c0 THEN x'' ELSE rt0.c2 END AS NUMERIC)))) UNION SELECT DISTINCT * FROM t0, rt0 WHERE (((CAST(CASE WHEN rt0.c0 THEN x'' ELSE rt0.c2 END AS NUMERIC)) ISNULL));
SELECT DISTINCT * FROM t0, rt0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM rt0 WHERE (((JULIANDAY(rt0.c0, rt0.c2, rt0.c1, rt0.c2, rt0.c2))<(((rt0.c2) IS FALSE)))) GROUP BY rt0.c2, rt0.c0 UNION SELECT rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (((JULIANDAY(rt0.c0, rt0.c2, rt0.c1, rt0.c2, rt0.c2))<(((rt0.c2) IS FALSE)))))) GROUP BY rt0.c2, rt0.c0 UNION SELECT rt0.c2, rt0.c0 FROM rt0 WHERE (((((JULIANDAY(rt0.c0, rt0.c2, rt0.c1, rt0.c2, rt0.c2))<(((rt0.c2) IS FALSE)))) ISNULL)) GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT t0.c0 FROM t0, rt0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0, rt0 GROUP BY t0.c0 HAVING COUNT(TOTAL(rt0.c1)) UNION ALL SELECT ALL t0.c0 FROM t0, rt0 GROUP BY t0.c0 HAVING (NOT (COUNT(TOTAL(rt0.c1)))) UNION ALL SELECT t0.c0 FROM t0, rt0 GROUP BY t0.c0 HAVING ((COUNT(TOTAL(rt0.c1))) ISNULL);
SELECT t0.c0 FROM t0;
SELECT ALL t0.c0 FROM t0 WHERE (((t0.c0 IN ()) IN ())) UNION ALL SELECT ALL t0.c0 FROM t0 WHERE ((NOT (((t0.c0 IN ()) IN ())))) UNION ALL SELECT t0.c0 FROM t0 WHERE (((((t0.c0 IN ()) IN ())) ISNULL));
SELECT t0.c0 FROM t0;
SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM rt0, t0;
SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM rt0, t0 WHERE (CAST(((rt0.c1)>(rt0.c2)) AS TEXT)) UNION SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM rt0, t0 WHERE ((NOT (CAST(((rt0.c1)>(rt0.c2)) AS TEXT)))) UNION SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM rt0, t0 WHERE (((CAST(((rt0.c1)>(rt0.c2)) AS TEXT)) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM rt0, t0;
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 WHERE (UPPER(CAST(rt0.c1 AS REAL))) GROUP BY rt0.c0, rt0.c1 UNION SELECT rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (UPPER(CAST(rt0.c1 AS REAL))))) GROUP BY rt0.c0, rt0.c1 UNION SELECT rt0.c0, rt0.c1 FROM rt0 WHERE (((UPPER(CAST(rt0.c1 AS REAL))) ISNULL)) GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, t0.c0 FROM t0 INNER JOIN rt0 ON (((t0.c0)=(rt0.c2)) IN ()) GROUP BY rt0.c0, t0.c0;
SELECT ALL rt0.c0, t0.c0 FROM t0 INNER JOIN rt0 ON (((t0.c0)=(rt0.c2)) IN ()) GROUP BY rt0.c0, t0.c0 HAVING ((COUNT(*))IS(COUNT(TOTAL(rt0.c1)))) UNION ALL SELECT rt0.c0, t0.c0 FROM t0 INNER JOIN rt0 ON (((t0.c0)=(rt0.c2)) IN ()) GROUP BY rt0.c0, t0.c0 HAVING (NOT (((COUNT(*))IS(COUNT(TOTAL(rt0.c1)))))) UNION ALL SELECT ALL rt0.c0, t0.c0 FROM t0 INNER JOIN rt0 ON (((t0.c0)==(rt0.c2)) IN ()) GROUP BY rt0.c0, t0.c0 HAVING ((((COUNT(*))IS(COUNT(TOTAL(rt0.c1))))) ISNULL);
SELECT ALL rt0.c2, rt0.c0 FROM rt0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 WHERE (((((CAST(rt0.c1 AS NUMERIC))OR(((rt0.c0)*(rt0.c2)))))OR((rt0.c1 IN ())))) UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (((((CAST(rt0.c1 AS NUMERIC))OR(((rt0.c0)*(rt0.c2)))))OR((rt0.c1 IN ())))))) UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM rt0 WHERE (((((((CAST(rt0.c1 AS NUMERIC))OR(((rt0.c0)*(rt0.c2)))))OR((rt0.c1 IN ())))) ISNULL));
SELECT ALL rt0.c2, rt0.c0 FROM rt0;
SELECT DISTINCT t0.c0 FROM rt0 NATURAL JOIN t0;
SELECT DISTINCT t0.c0 FROM rt0 NATURAL JOIN t0 WHERE (CAST((rt0.c1 IN ()) AS NUMERIC)) UNION SELECT DISTINCT t0.c0 FROM rt0 NATURAL JOIN t0 WHERE ((NOT (CAST((rt0.c1 IN ()) AS NUMERIC)))) UNION SELECT DISTINCT t0.c0 FROM rt0 NATURAL JOIN t0 WHERE (((CAST((rt0.c1 IN ()) AS NUMERIC)) ISNULL));
SELECT DISTINCT t0.c0 FROM rt0 NATURAL JOIN t0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 WHERE ((((NOT (t0.c0)))AND(SQLITE_COMPILEOPTION_USED(t0.c0)))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT ((((NOT (t0.c0)))AND(SQLITE_COMPILEOPTION_USED(t0.c0)))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((((((NOT (t0.c0)))AND(SQLITE_COMPILEOPTION_USED(t0.c0)))) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (~ (TOTAL(rt0.c0))) UNION ALL SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (NOT ((~ (TOTAL(rt0.c0))))) UNION ALL SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (((~ (TOTAL(rt0.c0)))) ISNULL);
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (~ (TOTAL(rt0.c0))) UNION ALL SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (NOT ((~ (TOTAL(rt0.c0))))) UNION ALL SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (((~ (TOTAL(rt0.c0)))) ISNULL);
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE (((rt0.c1) IS TRUE)) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (((rt0.c1) IS TRUE)))) UNION ALL SELECT * FROM rt0 WHERE (((((rt0.c1) IS TRUE)) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0 NOT INDEXED WHERE (((UNLIKELY(DISTINCT t0.c0)) IS FALSE)) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((NOT (((UNLIKELY(DISTINCT t0.c0)) IS FALSE)))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE (((((UNLIKELY(DISTINCT t0.c0)) IS FALSE)) ISNULL));
SELECT DISTINCT t0.c0 FROM t0;
SELECT t0.c0, rt0.c1 FROM rt0, t0 GROUP BY t0.c0, rt0.c1;
SELECT ALL t0.c0, rt0.c1 FROM rt0, t0 NOT INDEXED WHERE (NULL COLLATE NOCASE) GROUP BY t0.c0, rt0.c1 UNION SELECT t0.c0, rt0.c1 FROM rt0, t0 WHERE ((NOT (NULL COLLATE NOCASE))) GROUP BY t0.c0, rt0.c1 UNION SELECT t0.c0, rt0.c1 FROM rt0, t0 WHERE (((NULL COLLATE NOCASE) ISNULL)) GROUP BY t0.c0, rt0.c1;
SELECT t0.c0, rt0.c1 FROM rt0, t0 GROUP BY t0.c0, rt0.c1;
SELECT ALL t0.c0, rt0.c1, rt0.c2, rt0.c0 FROM t0, rt0 GROUP BY t0.c0, rt0.c1, rt0.c2, rt0.c0;
SELECT t0.c0, rt0.c1, rt0.c2, rt0.c0 FROM t0, rt0 GROUP BY t0.c0, rt0.c1, rt0.c2, rt0.c0 HAVING COUNT(CAST(rt0.c0 AS REAL)) UNION ALL SELECT ALL t0.c0, rt0.c1, rt0.c2, rt0.c0 FROM t0, rt0 GROUP BY t0.c0, rt0.c1, rt0.c2, rt0.c0 HAVING (NOT (COUNT(CAST(rt0.c0 AS REAL)))) UNION ALL SELECT ALL t0.c0, rt0.c1, rt0.c2, rt0.c0 FROM t0, rt0 GROUP BY t0.c0, rt0.c1, rt0.c2, rt0.c0 HAVING ((COUNT(CAST(rt0.c0 AS REAL))) ISNULL);
SELECT ALL t0.c0, rt0.c1, rt0.c2, rt0.c0 FROM t0, rt0 GROUP BY t0.c0, rt0.c1, rt0.c2, rt0.c0;
SELECT t0.c0, rt0.c1, rt0.c2, rt0.c0 FROM t0, rt0 GROUP BY t0.c0, rt0.c1, rt0.c2, rt0.c0 HAVING COUNT(CAST(rt0.c0 AS REAL)) UNION ALL SELECT ALL t0.c0, rt0.c1, rt0.c2, rt0.c0 FROM t0, rt0 GROUP BY t0.c0, rt0.c1, rt0.c2, rt0.c0 HAVING (NOT (COUNT(CAST(rt0.c0 AS REAL)))) UNION ALL SELECT ALL t0.c0, rt0.c1, rt0.c2, rt0.c0 FROM t0, rt0 GROUP BY t0.c0, rt0.c1, rt0.c2, rt0.c0 HAVING ((COUNT(CAST(rt0.c0 AS REAL))) ISNULL);
SELECT ALL t0.c0, rt0.c1, rt0.c2, rt0.c0 FROM t0, rt0 GROUP BY t0.c0, rt0.c1, rt0.c2, rt0.c0;
SELECT t0.c0, rt0.c0, rt0.c1, rt0.c2 FROM rt0, t0;
SELECT t0.c0, rt0.c0, rt0.c1, rt0.c2 FROM rt0, t0 WHERE ((((((rt0.c0)OR(rt0.c2)))OR(rt0.c2)) IN (CASE rt0.c1  WHEN t0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END, ((rt0.c1) ISNULL)))) UNION ALL SELECT t0.c0, rt0.c0, rt0.c1, rt0.c2 FROM rt0, t0 NOT INDEXED WHERE ((NOT ((((((rt0.c0)OR(rt0.c2)))OR(rt0.c2)) IN (CASE rt0.c1  WHEN t0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END, ((rt0.c1) ISNULL)))))) UNION ALL SELECT t0.c0, rt0.c0, rt0.c1, rt0.c2 FROM rt0, t0 WHERE ((((((((rt0.c0)OR(rt0.c2)))OR(rt0.c2)) IN (CASE rt0.c1  WHEN t0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END, ((rt0.c1) ISNULL)))) ISNULL));
SELECT t0.c0, rt0.c0, rt0.c1, rt0.c2 FROM rt0, t0;
SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE (rt0.c0) UNION SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (rt0.c0))) UNION SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE (((rt0.c0) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0 FROM rt0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE (CAST(((((0.5305523131922714)OR(t0.c0)))OR(t0.c0)) AS REAL)) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT (CAST(((((0.5305523131922714)OR(t0.c0)))OR(t0.c0)) AS REAL)))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE (((CAST(((((0.5305523131922714)OR(t0.c0)))OR(t0.c0)) AS REAL)) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM t0, rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM t0, rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING SUM(TOTAL(t0.c0)) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c2 FROM t0, rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING (NOT (SUM(TOTAL(t0.c0)))) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c2 FROM t0, rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING ((SUM(TOTAL(t0.c0))) ISNULL);
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE (x'') UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (x''))) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE (((x'') ISNULL));
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c2, t0.c0, rt0.c1 FROM rt0, t0;
SELECT DISTINCT rt0.c0, rt0.c2, t0.c0, rt0.c1 FROM rt0, t0 WHERE (((NULL) NOT BETWEEN (t0.c0) AND (CAST(rt0.c2 AS INTEGER)))) UNION SELECT DISTINCT rt0.c0, rt0.c2, t0.c0, rt0.c1 FROM rt0, t0 WHERE ((NOT (((NULL) NOT BETWEEN (t0.c0) AND (CAST(rt0.c2 AS INTEGER)))))) UNION SELECT DISTINCT rt0.c0, rt0.c2, t0.c0, rt0.c1 FROM rt0, t0 WHERE (((((NULL) NOT BETWEEN (t0.c0) AND (CAST(rt0.c2 AS INTEGER)))) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c2, t0.c0, rt0.c1 FROM rt0, t0;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE (CAST(rt0.c0 COLLATE BINARY AS BLOB)) GROUP BY rt0.c0, rt0.c2, rt0.c1 UNION SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (CAST(rt0.c0 COLLATE BINARY AS BLOB)))) GROUP BY rt0.c0, rt0.c2, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE (((CAST(rt0.c0 COLLATE BINARY AS BLOB)) ISNULL)) GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT ALL t0.c0, rt0.c1 FROM rt0, t0 GROUP BY t0.c0, rt0.c1;
SELECT t0.c0, rt0.c1 FROM rt0, t0 GROUP BY t0.c0, rt0.c1 HAVING json_object(((rt0.c2) IS FALSE), AVG(MAX(t0.c0))) UNION ALL SELECT ALL t0.c0, rt0.c1 FROM rt0, t0 GROUP BY t0.c0, rt0.c1 HAVING (NOT (json_object(((rt0.c2) IS FALSE), AVG(MAX(t0.c0))))) UNION ALL SELECT t0.c0, rt0.c1 FROM rt0, t0 GROUP BY t0.c0, rt0.c1 HAVING ((json_object(((rt0.c2) IS FALSE), AVG(MAX(t0.c0)))) ISNULL);
SELECT rt0.c0, rt0.c1 FROM rt0;
SELECT rt0.c0, rt0.c1 FROM rt0 WHERE (rt0.c2) UNION ALL SELECT rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (rt0.c2))) UNION ALL SELECT rt0.c0, rt0.c1 FROM rt0 WHERE (((rt0.c2) ISNULL));
SELECT rt0.c0, rt0.c1 FROM rt0;
SELECT DISTINCT t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0 WHERE (CAST(t0.c0 AS TEXT) COLLATE RTRIM) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((NOT (CAST(t0.c0 AS TEXT) COLLATE RTRIM))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE (((CAST(t0.c0 AS TEXT) COLLATE RTRIM) ISNULL));
SELECT DISTINCT t0.c0 FROM t0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 WHERE (t0.c0) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT (t0.c0))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE (((t0.c0) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL rt0.c2, rt0.c1, t0.c0, rt0.c0 FROM rt0, t0 GROUP BY rt0.c2, rt0.c1, t0.c0, rt0.c0;
SELECT rt0.c2, rt0.c1, t0.c0, rt0.c0 FROM rt0, t0 GROUP BY rt0.c2, rt0.c1, t0.c0, rt0.c0 HAVING MIN((~ (rt0.c2))) UNION ALL SELECT rt0.c2, rt0.c1, t0.c0, rt0.c0 FROM rt0, t0 GROUP BY rt0.c2, rt0.c1, t0.c0, rt0.c0 HAVING (NOT (MIN((~ (rt0.c2))))) UNION ALL SELECT rt0.c2, rt0.c1, t0.c0, rt0.c0 FROM rt0, t0 GROUP BY rt0.c2, rt0.c1, t0.c0, rt0.c0 HAVING ((MIN((~ (rt0.c2)))) ISNULL);
SELECT ALL rt0.c2, rt0.c1, t0.c0, rt0.c0 FROM rt0, t0 GROUP BY rt0.c2, rt0.c1, t0.c0, rt0.c0;
SELECT rt0.c2, rt0.c1, t0.c0, rt0.c0 FROM rt0, t0 GROUP BY rt0.c2, rt0.c1, t0.c0, rt0.c0 HAVING MIN((~ (rt0.c2))) UNION ALL SELECT rt0.c2, rt0.c1, t0.c0, rt0.c0 FROM rt0, t0 GROUP BY rt0.c2, rt0.c1, t0.c0, rt0.c0 HAVING (NOT (MIN((~ (rt0.c2))))) UNION ALL SELECT rt0.c2, rt0.c1, t0.c0, rt0.c0 FROM rt0, t0 GROUP BY rt0.c2, rt0.c1, t0.c0, rt0.c0 HAVING ((MIN((~ (rt0.c2)))) ISNULL);
SELECT ALL rt0.c2, rt0.c1, t0.c0, rt0.c0 FROM rt0, t0 GROUP BY rt0.c2, rt0.c1, t0.c0, rt0.c0;
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE ((((rt0.c1) NOTNULL) IN (((rt0.c0) NOT NULL)))) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT ((((rt0.c1) NOTNULL) IN (((rt0.c0) NOT NULL)))))) UNION ALL SELECT * FROM rt0 WHERE ((((((rt0.c1) NOTNULL) IN (((rt0.c0) NOT NULL)))) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT * FROM t0, rt0;
SELECT DISTINCT * FROM t0, rt0 WHERE (LIKELY(DISTINCT '-820632710')) UNION SELECT DISTINCT * FROM t0, rt0 WHERE ((NOT (LIKELY(DISTINCT '-820632710')))) UNION SELECT DISTINCT * FROM t0, rt0 WHERE (((LIKELY(DISTINCT '-820632710')) ISNULL));
SELECT DISTINCT * FROM t0, rt0;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 WHERE (CASE CAST(rt0.c2 AS INTEGER)  WHEN CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c0 END THEN (- (rt0.c1)) END) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0 WHERE ((NOT (CASE CAST(rt0.c2 AS INTEGER)  WHEN CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c0 END THEN (- (rt0.c1)) END))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0 WHERE (((CASE CAST(rt0.c2 AS INTEGER)  WHEN CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c0 END THEN (- (rt0.c1)) END) ISNULL)) GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING rt0.c1 UNION ALL SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING (NOT (rt0.c1)) UNION ALL SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING ((rt0.c1) ISNULL);
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING rt0.c1 UNION ALL SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING (NOT (rt0.c1)) UNION ALL SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING ((rt0.c1) ISNULL);
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT t0.c0, rt0.c0 FROM rt0, t0;
SELECT t0.c0, rt0.c0 FROM rt0, t0 WHERE (((((('-433150407')AND(t0.c0)))AND(rt0.c2)) IN (rt0.c2))) UNION ALL SELECT t0.c0, rt0.c0 FROM rt0, t0 WHERE ((NOT (((((('-433150407')AND(t0.c0)))AND(rt0.c2)) IN (rt0.c2))))) UNION ALL SELECT ALL t0.c0, rt0.c0 FROM rt0, t0 WHERE (((((((('-433150407')AND(t0.c0)))AND(rt0.c2)) IN (rt0.c2))) ISNULL));
SELECT t0.c0, rt0.c0 FROM rt0, t0;
SELECT DISTINCT * FROM t0, rt0;
SELECT DISTINCT * FROM t0, rt0 WHERE (UNLIKELY((- (rt0.c0)))) UNION SELECT DISTINCT * FROM t0, rt0 WHERE ((NOT (UNLIKELY((- (rt0.c0)))))) UNION SELECT DISTINCT * FROM t0, rt0 WHERE (((UNLIKELY((- (rt0.c0)))) ISNULL));
SELECT DISTINCT * FROM t0, rt0;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE (json_array_length(((((rt0.c0)OR(rt0.c0)))OR(rt0.c1)))) GROUP BY rt0.c0, rt0.c2, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (json_array_length(((((rt0.c0)OR(rt0.c0)))OR(rt0.c1)))))) GROUP BY rt0.c0, rt0.c2, rt0.c1 UNION SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE (((json_array_length(((((rt0.c0)OR(rt0.c0)))OR(rt0.c1)))) ISNULL)) GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT ALL TOTAL((((rt0.c0 IN ()))LIKE(rt0.c0))) FROM t0, rt0 ORDER BY (((0.624503863244973)) NOT BETWEEN ((rt0.c0 COLLATE NOCASE)) AND ((((((rt0.c2)OR(t0.c0)))AND(rt0.c0))))) ASC;
SELECT rt0.c2, rt0.c0 FROM rt0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 WHERE (((((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0)))>=(((rt0.c1) NOTNULL)))) UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (((((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0)))>=(((rt0.c1) NOTNULL)))))) UNION ALL SELECT rt0.c2, rt0.c0 FROM rt0 WHERE (((((((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0)))>=(((rt0.c1) NOTNULL)))) ISNULL));
SELECT rt0.c2, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1 FROM rt0, t0;
SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1 FROM rt0, t0 WHERE ((((rt0.c0)) BETWEEN ((CASE rt0.c0  WHEN t0.c0 THEN t0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 END)) AND ((((rt0.c1)>>(rt0.c2)))))) UNION SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1 FROM rt0, t0 WHERE ((NOT ((((rt0.c0)) BETWEEN ((CASE rt0.c0  WHEN t0.c0 THEN t0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 END)) AND ((((rt0.c1)>>(rt0.c2)))))))) UNION SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1 FROM rt0, t0 WHERE ((((((rt0.c0)) BETWEEN ((CASE rt0.c0  WHEN t0.c0 THEN t0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 END)) AND ((((rt0.c1)>>(rt0.c2)))))) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1 FROM rt0, t0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 WHERE (CASE WHEN rt0.c1 COLLATE BINARY THEN rt0.c0 END) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM rt0 WHERE ((NOT (CASE WHEN rt0.c1 COLLATE BINARY THEN rt0.c0 END))) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM rt0 WHERE (((CASE WHEN rt0.c1 COLLATE BINARY THEN rt0.c0 END) ISNULL)) GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT t0.c0, rt0.c1 FROM rt0 NOT INDEXED, t0 GROUP BY t0.c0, rt0.c1;
SELECT t0.c0, rt0.c1 FROM rt0, t0 GROUP BY t0.c0, rt0.c1 HAVING ((MIN(rt0.c1)) NOT BETWEEN (-1645474851) AND (((MAX(COUNT(MAX(COUNT(rt0.c0)))))&(rt0.c2)))) UNION ALL SELECT ALL t0.c0, rt0.c1 FROM rt0, t0 GROUP BY t0.c0, rt0.c1 HAVING (NOT (((MIN(rt0.c1)) NOT BETWEEN (-1645474851) AND (((MAX(COUNT(MAX(COUNT(rt0.c0)))))&(rt0.c2)))))) UNION ALL SELECT ALL t0.c0, rt0.c1 FROM rt0, t0 GROUP BY t0.c0, rt0.c1 HAVING ((((MIN(rt0.c1)) NOT BETWEEN (-1645474851) AND (((MAX(COUNT(MAX(COUNT(rt0.c0)))))&(rt0.c2))))) ISNULL);
SELECT t0.c0 FROM t0;
SELECT t0.c0 FROM t0 WHERE ((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((MIN(t0.c0, t0.c0, t0.c0, 0.19096753011226086))))) UNION ALL SELECT ALL t0.c0 FROM t0 WHERE ((NOT ((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((MIN(t0.c0, t0.c0, t0.c0, 0.19096753011226086))))))) UNION ALL SELECT ALL t0.c0 FROM t0 WHERE ((((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((MIN(t0.c0, t0.c0, t0.c0, 0.19096753011226086))))) ISNULL));
SELECT t0.c0 FROM t0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (json_valid(CAST(t0.c0 AS BLOB))) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (json_valid(CAST(t0.c0 AS BLOB))))) UNION SELECT DISTINCT * FROM t0 WHERE (((json_valid(CAST(t0.c0 AS BLOB))) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT rt0.c0 FROM rt0, t0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0, t0 WHERE (((rt0.c2)%(1092351705))) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM rt0, t0 WHERE ((NOT (((rt0.c2)%(1092351705))))) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM rt0, t0 WHERE (((((rt0.c2)%(1092351705))) ISNULL)) GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0, t0 GROUP BY rt0.c0;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING GROUP_CONCAT(TOTAL(COUNT(*)) COLLATE RTRIM) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT (GROUP_CONCAT(TOTAL(COUNT(*)) COLLATE RTRIM))) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((GROUP_CONCAT(TOTAL(COUNT(*)) COLLATE RTRIM)) ISNULL);
SELECT ALL MAX((~ (t0.c0)) COLLATE RTRIM) FROM t0 ORDER BY ((JULIANDAY(t0.c0, t0.c0, t0.c0))IS NOT(x'd76a')) DESC;
SELECT rt0.c1, rt0.c2 FROM rt0;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 WHERE (((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c2 ELSE '廝	' END)-((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1)))))) UNION ALL SELECT ALL rt0.c1, rt0.c2 FROM rt0 NOT INDEXED WHERE ((NOT (((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c2 ELSE '廝	' END)-((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1)))))))) UNION ALL SELECT rt0.c1, rt0.c2 FROM rt0 WHERE (((((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c2 ELSE '廝	' END)-((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1)))))) ISNULL));
SELECT rt0.c1, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c0 FROM rt0 WHERE (((((NULL) BETWEEN (rt0.c1) AND (rt0.c2))) NOT BETWEEN ((NOT (rt0.c1))) AND (((rt0.c1)>=(rt0.c2))))) UNION SELECT DISTINCT rt0.c0 FROM rt0 WHERE ((NOT (((((NULL) BETWEEN (rt0.c1) AND (rt0.c2))) NOT BETWEEN ((NOT (rt0.c1))) AND (((rt0.c1)>=(rt0.c2))))))) UNION SELECT DISTINCT rt0.c0 FROM rt0 WHERE (((((((NULL) BETWEEN (rt0.c1) AND (rt0.c2))) NOT BETWEEN ((NOT (rt0.c1))) AND (((rt0.c1)>=(rt0.c2))))) ISNULL));
SELECT DISTINCT rt0.c0 FROM rt0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 WHERE (CASE WHEN (rt0.c1 IN ()) THEN rt0.c2 COLLATE RTRIM END) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM rt0 WHERE ((NOT (CASE WHEN (rt0.c1 IN ()) THEN rt0.c2 COLLATE RTRIM END))) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM rt0 WHERE (((CASE WHEN (rt0.c1 IN ()) THEN rt0.c2 COLLATE RTRIM END) ISNULL)) GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c1, t0.c0 FROM t0, rt0 GROUP BY rt0.c1, t0.c0;
SELECT ALL rt0.c1, t0.c0 FROM t0, rt0 GROUP BY rt0.c1, t0.c0 HAVING MIN(rt0.c2) UNION ALL SELECT rt0.c1, t0.c0 FROM t0, rt0 GROUP BY rt0.c1, t0.c0 HAVING (NOT (MIN(rt0.c2))) UNION ALL SELECT ALL rt0.c1, t0.c0 FROM t0, rt0 GROUP BY rt0.c1, t0.c0 HAVING ((MIN(rt0.c2)) ISNULL);
SELECT rt0.c1, t0.c0 FROM t0, rt0 GROUP BY rt0.c1, t0.c0;
SELECT ALL rt0.c1, t0.c0 FROM t0, rt0 GROUP BY rt0.c1, t0.c0 HAVING MIN(rt0.c2) UNION ALL SELECT rt0.c1, t0.c0 FROM t0, rt0 GROUP BY rt0.c1, t0.c0 HAVING (NOT (MIN(rt0.c2))) UNION ALL SELECT ALL rt0.c1, t0.c0 FROM t0, rt0 GROUP BY rt0.c1, t0.c0 HAVING ((MIN(rt0.c2)) ISNULL);
SELECT rt0.c1, t0.c0 FROM t0, rt0 GROUP BY rt0.c1, t0.c0;
SELECT ALL TOTAL(((((rt0.c2) NOTNULL)) NOT NULL)) FROM t0, rt0 ORDER BY (((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c0))))>>(highlight(rt0.c1, rt0.c2, rt0.c2, 't('))) ASC  NULLS FIRST;
SELECT * FROM t0;
SELECT * FROM t0 WHERE (load_extension(COALESCE(t0.c0, t0.c0))) UNION ALL SELECT ALL * FROM t0 WHERE ((NOT (load_extension(COALESCE(t0.c0, t0.c0))))) UNION ALL SELECT ALL * FROM t0 WHERE (((load_extension(COALESCE(t0.c0, t0.c0))) ISNULL));
SELECT * FROM t0;
SELECT DISTINCT t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0 WHERE (((t0.c0) ISNULL) COLLATE BINARY) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((NOT (((t0.c0) ISNULL) COLLATE BINARY))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE (((((t0.c0) ISNULL) COLLATE BINARY) ISNULL));
SELECT DISTINCT t0.c0 FROM t0;
SELECT ALL rt0.c1 FROM t0 LEFT OUTER JOIN rt0 ON ((((CASE WHEN rt0.c0 THEN rt0.c2 WHEN x'ac4e' THEN t0.c0 WHEN rt0.c2 THEN rt0.c1 END)AND((+ (x'bdea')))))AND((rt0.c1 IN ()))) GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM t0 LEFT OUTER JOIN rt0 ON ((((CASE WHEN rt0.c0 THEN rt0.c2 WHEN x'ac4e' THEN t0.c0 WHEN rt0.c2 THEN rt0.c1 END)AND((+ (x'bdea')))))AND((rt0.c1 IN ()))) WHERE (((((t0.c0)IS(rt0.c2)))*(LIKELY(t0.c0)))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM t0 LEFT OUTER JOIN rt0 ON ((((CASE WHEN rt0.c0 THEN rt0.c2 WHEN x'ac4e' THEN t0.c0 WHEN rt0.c2 THEN rt0.c1 END)AND((+ (x'bdea')))))AND((rt0.c1 IN ()))) WHERE ((NOT (((((t0.c0)IS(rt0.c2)))*(LIKELY(t0.c0)))))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM t0 LEFT OUTER JOIN rt0 ON ((((CASE WHEN rt0.c0 THEN rt0.c2 WHEN x'ac4e' THEN t0.c0 WHEN rt0.c2 THEN rt0.c1 END)AND((+ (x'bdea')))))AND((rt0.c1 IN ()))) WHERE (((((((t0.c0)IS(rt0.c2)))*(LIKELY(t0.c0)))) ISNULL)) GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM t0 LEFT OUTER JOIN rt0 ON ((((CASE WHEN rt0.c0 THEN rt0.c2 WHEN x'ac4e' THEN t0.c0 WHEN rt0.c2 THEN rt0.c1 END)AND((+ (x'bdea')))))AND((rt0.c1 IN ()))) GROUP BY rt0.c1;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING 0.029364297606974232 UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (0.029364297606974232)) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((0.029364297606974232) ISNULL);
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING 0.029364297606974232 UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (0.029364297606974232)) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((0.029364297606974232) ISNULL);
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE (((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2)))=((rt0.c0 IN (rt0.c1, rt0.c2))))) UNION ALL SELECT * FROM rt0 WHERE ((NOT (((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2)))==((rt0.c0 IN (rt0.c1, rt0.c2))))))) UNION ALL SELECT ALL * FROM rt0 WHERE (((((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2)))=((rt0.c0 IN (rt0.c1, rt0.c2))))) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT * FROM rt0 NATURAL JOIN t0;
SELECT DISTINCT * FROM rt0 NATURAL JOIN t0 WHERE (rt0.c1) UNION SELECT DISTINCT * FROM rt0 NATURAL JOIN t0 WHERE ((NOT (rt0.c1))) UNION SELECT DISTINCT * FROM rt0 NATURAL JOIN t0 WHERE (((rt0.c1) ISNULL));
SELECT DISTINCT * FROM rt0 NATURAL JOIN t0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE (((CAST('?a' AS INTEGER)) NOT BETWEEN (((t0.c0) IS FALSE)) AND ((((t0.c0))==((t0.c0)))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT (((CAST('?a' AS INTEGER)) NOT BETWEEN (((t0.c0) IS FALSE)) AND ((((t0.c0))=((t0.c0)))))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE (((((CAST('?a' AS INTEGER)) NOT BETWEEN (((t0.c0) IS FALSE)) AND ((((t0.c0))=((t0.c0)))))) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING GROUP_CONCAT(((t0.c0)&(MAX('\8')))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (GROUP_CONCAT(((t0.c0)&(MAX('\8')))))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((GROUP_CONCAT(((t0.c0)&(MAX('\8'))))) ISNULL);
SELECT ALL MAX(CASE CAST(rt0.c1 AS TEXT)  WHEN CAST(NULL AS BLOB) THEN ((rt0.c0)-(rt0.c1)) ELSE (0.5218211395718299 IN ()) END) FROM rt0, t0 ORDER BY (((rt0.c0 COLLATE BINARY))<=(((~ (rt0.c0))))) DESC, ((((((t0.c0)<=(rt0.c0)))AND('-778119675')))OR(CAST(t0.c0 AS REAL)))  NULLS LAST;
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE (CAST(CAST(rt0.c0 AS REAL) AS REAL)) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (CAST(CAST(rt0.c0 AS REAL) AS REAL)))) UNION ALL SELECT * FROM rt0 WHERE (((CAST(CAST(rt0.c0 AS REAL) AS REAL)) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((((((rt0.c0) IS TRUE)))<=((CAST(rt0.c0 AS NUMERIC))))) UNION SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT ((((((rt0.c0) IS TRUE)))<=((CAST(rt0.c0 AS NUMERIC))))))) UNION SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((((((((rt0.c0) IS TRUE)))<=((CAST(rt0.c0 AS NUMERIC))))) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0;
SELECT rt0.c1, rt0.c2, t0.c0 FROM t0 INNER JOIN rt0 ON CAST(((rt0.c1)&(NULL)) AS TEXT) GROUP BY rt0.c1, rt0.c2, t0.c0;
SELECT rt0.c1, rt0.c2, t0.c0 FROM t0 INNER JOIN rt0 ON CAST(((rt0.c1)&(NULL)) AS TEXT) WHERE ((~ (((((rt0.c0)AND(0xffffffffe73a16b4)))AND(t0.c0))))) GROUP BY rt0.c1, rt0.c2, t0.c0 UNION SELECT rt0.c1, rt0.c2, t0.c0 FROM t0 INNER JOIN rt0 ON CAST(((rt0.c1)&(NULL)) AS TEXT) WHERE ((NOT ((~ (((((rt0.c0)AND(0xffffffffe73a16b4)))AND(t0.c0))))))) GROUP BY rt0.c1, rt0.c2, t0.c0 UNION SELECT ALL rt0.c1, rt0.c2, t0.c0 FROM t0 INNER JOIN rt0 ON CAST(((rt0.c1)&(NULL)) AS TEXT) WHERE ((((~ (((((rt0.c0)AND(0xffffffffe73a16b4)))AND(t0.c0))))) ISNULL)) GROUP BY rt0.c1, rt0.c2, t0.c0;
SELECT rt0.c1, rt0.c2, t0.c0 FROM t0 INNER JOIN rt0 ON CAST(((rt0.c1)&(NULL)) AS TEXT) GROUP BY rt0.c1, rt0.c2, t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((MIN(COUNT(*))) ISNULL) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (((MIN(COUNT(*))) ISNULL))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((((MIN(COUNT(*))) ISNULL)) ISNULL);
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE (NULLIF(DISTINCT (~ (rt0.c2)), ((rt0.c2)>(rt0.c1)))) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (NULLIF(DISTINCT (~ (rt0.c2)), ((rt0.c2)>(rt0.c1)))))) UNION ALL SELECT * FROM rt0 WHERE (((NULLIF(DISTINCT (~ (rt0.c2)), ((rt0.c2)>(rt0.c1)))) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT * FROM t0, rt0;
SELECT DISTINCT * FROM t0, rt0 WHERE ((+ ((~ (NULL))))) UNION SELECT DISTINCT * FROM t0, rt0 WHERE ((NOT ((+ ((~ (NULL))))))) UNION SELECT DISTINCT * FROM t0, rt0 WHERE ((((+ ((~ (NULL))))) ISNULL));
SELECT DISTINCT * FROM t0, rt0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 WHERE (((CAST(t0.c0 AS REAL))||(t0.c0))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT (((CAST(t0.c0 AS REAL))||(t0.c0))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE (((((CAST(t0.c0 AS REAL))||(t0.c0))) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING MAX(TOTAL(COUNT(GROUP_CONCAT(rt0.c0)))) UNION ALL SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING (NOT (MAX(TOTAL(COUNT(GROUP_CONCAT(rt0.c0)))))) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING ((MAX(TOTAL(COUNT(GROUP_CONCAT(rt0.c0))))) ISNULL);
SELECT ALL rt0.c2 FROM t0, rt0;
SELECT rt0.c2 FROM t0, rt0 WHERE (((rt0.c0 COLLATE RTRIM) BETWEEN (CAST('' AS INTEGER)) AND (CASE WHEN '{}' THEN rt0.c1 ELSE rt0.c2 END))) UNION ALL SELECT rt0.c2 FROM t0, rt0 WHERE ((NOT (((rt0.c0 COLLATE RTRIM) BETWEEN (CAST('' AS INTEGER)) AND (CASE WHEN '{}' THEN rt0.c1 ELSE rt0.c2 END))))) UNION ALL SELECT ALL rt0.c2 FROM t0, rt0 WHERE (((((rt0.c0 COLLATE RTRIM) BETWEEN (CAST('' AS INTEGER)) AND (CASE WHEN '{}' THEN rt0.c1 ELSE rt0.c2 END))) ISNULL));
SELECT ALL rt0.c2 FROM t0, rt0;
SELECT DISTINCT * FROM t0, rt0;
SELECT DISTINCT * FROM t0, rt0 WHERE ((((rt0.c1 IN ())) BETWEEN (((((rt0.c0)AND(rt0.c2)))OR(t0.c0))) AND (((t0.c0)<=(t0.c0))))) UNION SELECT DISTINCT * FROM t0, rt0 WHERE ((NOT ((((rt0.c1 IN ())) BETWEEN (((((rt0.c0)AND(rt0.c2)))OR(t0.c0))) AND (((t0.c0)<=(t0.c0))))))) UNION SELECT DISTINCT * FROM t0, rt0 WHERE ((((((rt0.c1 IN ())) BETWEEN (((((rt0.c0)AND(rt0.c2)))OR(t0.c0))) AND (((t0.c0)<=(t0.c0))))) ISNULL));
SELECT DISTINCT * FROM t0, rt0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0, t0.c0 FROM rt0 NATURAL JOIN t0 GROUP BY rt0.c1, rt0.c2, rt0.c0, t0.c0;
SELECT rt0.c1, rt0.c2, rt0.c0, t0.c0 FROM rt0 NATURAL JOIN t0 WHERE ((+ (t0.c0)) COLLATE NOCASE) GROUP BY rt0.c1, rt0.c2, rt0.c0, t0.c0 UNION SELECT ALL rt0.c1, rt0.c2, rt0.c0, t0.c0 FROM rt0 NATURAL JOIN t0 WHERE ((NOT ((+ (t0.c0)) COLLATE NOCASE))) GROUP BY rt0.c1, rt0.c2, rt0.c0, t0.c0 UNION SELECT rt0.c1, rt0.c2, rt0.c0, t0.c0 FROM rt0 NATURAL JOIN t0 WHERE ((((+ (t0.c0)) COLLATE NOCASE) ISNULL)) GROUP BY rt0.c1, rt0.c2, rt0.c0, t0.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0, t0.c0 FROM rt0 NATURAL JOIN t0 GROUP BY rt0.c1, rt0.c2, rt0.c0, t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (((COUNT(*))) NOT BETWEEN ((((((((((MAX(COUNT(t0.c0)))AND(TOTAL(SUM(AVG(t0.c0))))))OR(t0.c0)))OR(GROUP_CONCAT(SUM(SUM(SUM(t0.c0)))))))AND(-1012440874)))) AND ((COUNT(*)))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT ((((COUNT(*))) NOT BETWEEN ((((((((((MAX(COUNT(t0.c0)))AND(TOTAL(SUM(AVG(t0.c0))))))OR(t0.c0)))OR(GROUP_CONCAT(SUM(SUM(SUM(t0.c0)))))))AND(-1012440874)))) AND ((COUNT(*)))))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (((((COUNT(*))) NOT BETWEEN ((((((((((MAX(COUNT(t0.c0)))AND(TOTAL(SUM(AVG(t0.c0))))))OR(t0.c0)))OR(GROUP_CONCAT(SUM(SUM(SUM(t0.c0)))))))AND(-1012440874)))) AND ((COUNT(*))))) ISNULL);
SELECT t0.c0 FROM t0, rt0;
SELECT t0.c0 FROM t0, rt0 WHERE ((((2.77706903E8)>=(rt0.c1)) IN (LOWER(rt0.c1)))) UNION ALL SELECT t0.c0 FROM t0, rt0 WHERE ((NOT ((((2.77706903E8)>=(rt0.c1)) IN (LOWER(rt0.c1)))))) UNION ALL SELECT t0.c0 FROM t0, rt0 WHERE ((((((2.77706903E8)>=(rt0.c1)) IN (LOWER(rt0.c1)))) ISNULL));
SELECT t0.c0 FROM t0, rt0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (CAST(UNLIKELY(DISTINCT 0.013807942409826301) AS TEXT)) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (CAST(UNLIKELY(DISTINCT 0.013807942409826301) AS TEXT)))) UNION SELECT DISTINCT * FROM t0 WHERE (((CAST(UNLIKELY(DISTINCT 0.013807942409826301) AS TEXT)) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE (((CAST(t0.c0 AS BLOB))/(CASE t0.c0  WHEN t0.c0 THEN t0.c0 END))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT (((CAST(t0.c0 AS BLOB))/(CASE t0.c0  WHEN t0.c0 THEN t0.c0 END))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE (((((CAST(t0.c0 AS BLOB))/(CASE t0.c0  WHEN t0.c0 THEN t0.c0 END))) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING COUNT(*) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING COUNT(*) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0;
SELECT rt0.c1, rt0.c0 FROM rt0 WHERE ((~ (rt0.c1)) COLLATE NOCASE) UNION ALL SELECT ALL rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT ((~ (rt0.c1)) COLLATE NOCASE))) UNION ALL SELECT rt0.c1, rt0.c0 FROM rt0 WHERE ((((~ (rt0.c1)) COLLATE NOCASE) ISNULL));
SELECT ALL rt0.c1, rt0.c0 FROM rt0;
SELECT DISTINCT * FROM t0, rt0;
SELECT DISTINCT * FROM t0, rt0 WHERE (CAST(((t0.c0) BETWEEN (rt0.c2) AND (rt0.c1)) AS BLOB)) UNION SELECT DISTINCT * FROM t0, rt0 WHERE ((NOT (CAST(((t0.c0) BETWEEN (rt0.c2) AND (rt0.c1)) AS BLOB)))) UNION SELECT DISTINCT * FROM t0, rt0 WHERE (((CAST(((t0.c0) BETWEEN (rt0.c2) AND (rt0.c1)) AS BLOB)) ISNULL));
SELECT DISTINCT * FROM t0, rt0;
SELECT t0.c0, rt0.c0 FROM t0, rt0 GROUP BY t0.c0, rt0.c0;
SELECT ALL t0.c0, rt0.c0 FROM t0, rt0 WHERE (((((((((rt0.c0)AND(rt0.c1)))AND(t0.c0)))OR('&u⤌''G	晛k ')))OR(rt0.c2)) COLLATE BINARY) GROUP BY t0.c0, rt0.c0 UNION SELECT ALL t0.c0, rt0.c0 FROM t0, rt0 WHERE ((NOT (((((((((rt0.c0)AND(rt0.c1)))AND(t0.c0)))OR('&u⤌''G	晛k ')))OR(rt0.c2)) COLLATE BINARY))) GROUP BY t0.c0, rt0.c0 UNION SELECT ALL t0.c0, rt0.c0 FROM t0, rt0 WHERE (((((((((((rt0.c0)AND(rt0.c1)))AND(t0.c0)))OR('&u⤌''G	晛k ')))OR(rt0.c2)) COLLATE BINARY) ISNULL)) GROUP BY t0.c0, rt0.c0;
SELECT t0.c0, rt0.c0 FROM t0, rt0 GROUP BY t0.c0, rt0.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM t0, rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM t0 NOT INDEXED, rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING ((((((((((SUM(GROUP_CONCAT(MIN(MIN(SUM(rt0.c1))))))+(rt0.c0)))OR(TOTAL(rt0.c1))))AND(MAX(rt0.c0))))AND(MIN(SUM(t0.c0)))))OR(TOTAL(rt0.c1))) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c0 FROM t0, rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING (NOT (((((((((((SUM(GROUP_CONCAT(MIN(MIN(SUM(rt0.c1))))))+(rt0.c0)))OR(TOTAL(rt0.c1))))AND(MAX(rt0.c0))))AND(MIN(SUM(t0.c0)))))OR(TOTAL(rt0.c1))))) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM t0, rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING ((((((((((((SUM(GROUP_CONCAT(MIN(MIN(SUM(rt0.c1))))))+(rt0.c0)))OR(TOTAL(rt0.c1))))AND(MAX(rt0.c0))))AND(MIN(SUM(t0.c0)))))OR(TOTAL(rt0.c1)))) ISNULL);
SELECT ALL rt0.c0, rt0.c1 FROM rt0;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 WHERE (((((rt0.c0)AND((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c0))))))OR(CASE rt0.c1  WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 END))) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (((((rt0.c0)AND((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c0))))))OR(CASE rt0.c1  WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 END))))) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM rt0 NOT INDEXED WHERE (((((((rt0.c0)AND((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c0))))))OR(CASE rt0.c1  WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 END))) ISNULL));
SELECT ALL rt0.c0, rt0.c1 FROM rt0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE ((((((t0.c0))>((t0.c0)))) IS FALSE)) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT ((((((t0.c0))>((t0.c0)))) IS FALSE)))) UNION SELECT DISTINCT * FROM t0 WHERE ((((((((t0.c0))>((t0.c0)))) IS FALSE)) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((((((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1))))IS NOT(((((rt0.c2)AND(rt0.c0)))AND(rt0.c1))))) GROUP BY rt0.c0, rt0.c2, rt0.c1 UNION SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT ((((((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1))))IS NOT(((((rt0.c2)AND(rt0.c0)))AND(rt0.c1))))))) GROUP BY rt0.c0, rt0.c2, rt0.c1 UNION SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((((((((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1))))IS NOT(((((rt0.c2)AND(rt0.c0)))AND(rt0.c1))))) ISNULL)) GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c2, rt0.c1 FROM rt0, t0 GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM rt0, t0 GROUP BY rt0.c2, rt0.c1 HAVING MAX(GROUP_CONCAT(rt0.c2)) UNION ALL SELECT rt0.c2, rt0.c1 FROM rt0, t0 GROUP BY rt0.c2, rt0.c1 HAVING (NOT (MAX(GROUP_CONCAT(rt0.c2)))) UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM rt0, t0 GROUP BY rt0.c2, rt0.c1 HAVING ((MAX(GROUP_CONCAT(rt0.c2))) ISNULL);
SELECT * FROM t0;
SELECT * FROM t0 WHERE ((((t0.c0)) BETWEEN (((t0.c0 IN ()))) AND ((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))))) UNION ALL SELECT * FROM t0 WHERE ((NOT ((((t0.c0)) BETWEEN (((t0.c0 IN ()))) AND ((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))))))) UNION ALL SELECT ALL * FROM t0 WHERE ((((((t0.c0)) BETWEEN (((t0.c0 IN ()))) AND ((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))))) ISNULL));
SELECT * FROM t0;
SELECT DISTINCT t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0 WHERE (t0.c0) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((NOT (t0.c0))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE (((t0.c0) ISNULL));
SELECT DISTINCT t0.c0 FROM t0;
SELECT ALL rt0.c2, rt0.c1, t0.c0, rt0.c0 FROM t0, rt0 GROUP BY rt0.c2, rt0.c1, t0.c0, rt0.c0;
SELECT rt0.c2, rt0.c1, t0.c0, rt0.c0 FROM t0, rt0 WHERE ('><a9') GROUP BY rt0.c2, rt0.c1, t0.c0, rt0.c0 UNION SELECT rt0.c2, rt0.c1, t0.c0, rt0.c0 FROM t0, rt0 WHERE ((NOT ('><a9'))) GROUP BY rt0.c2, rt0.c1, t0.c0, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c1, t0.c0, rt0.c0 FROM t0, rt0 WHERE ((('><a9') ISNULL)) GROUP BY rt0.c2, rt0.c1, t0.c0, rt0.c0;
SELECT ALL rt0.c2, rt0.c1, t0.c0, rt0.c0 FROM t0, rt0 GROUP BY rt0.c2, rt0.c1, t0.c0, rt0.c0;
SELECT rt0.c1 FROM rt0 INNER JOIN t0 ON ((((((rt0.c1) NOT NULL))OR(CASE WHEN rt0.c0 THEN rt0.c2 END)))AND(((rt0.c1) NOTNULL))) GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 INNER JOIN t0 ON ((((((rt0.c1) NOT NULL))OR(CASE WHEN rt0.c0 THEN rt0.c2 END)))AND(((rt0.c1) NOTNULL))) GROUP BY rt0.c1 HAVING GROUP_CONCAT(rt0.c0) COLLATE NOCASE UNION ALL SELECT ALL rt0.c1 FROM rt0 INNER JOIN t0 ON ((((((rt0.c1) NOT NULL))OR(CASE WHEN rt0.c0 THEN rt0.c2 END)))AND(((rt0.c1) NOTNULL))) GROUP BY rt0.c1 HAVING (NOT (GROUP_CONCAT(rt0.c0) COLLATE NOCASE)) UNION ALL SELECT ALL rt0.c1 FROM rt0 INNER JOIN t0 ON ((((((rt0.c1) NOT NULL))OR(CASE WHEN rt0.c0 THEN rt0.c2 END)))AND(((rt0.c1) NOTNULL))) GROUP BY rt0.c1 HAVING ((GROUP_CONCAT(rt0.c0) COLLATE NOCASE) ISNULL);
SELECT rt0.c1 FROM rt0 INNER JOIN t0 ON ((((((rt0.c1) NOT NULL))OR(CASE WHEN rt0.c0 THEN rt0.c2 END)))AND(((rt0.c1) NOTNULL))) GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 INNER JOIN t0 ON ((((((rt0.c1) NOT NULL))OR(CASE WHEN rt0.c0 THEN rt0.c2 END)))AND(((rt0.c1) NOTNULL))) GROUP BY rt0.c1 HAVING GROUP_CONCAT(rt0.c0) COLLATE NOCASE UNION ALL SELECT ALL rt0.c1 FROM rt0 INNER JOIN t0 ON ((((((rt0.c1) NOT NULL))OR(CASE WHEN rt0.c0 THEN rt0.c2 END)))AND(((rt0.c1) NOTNULL))) GROUP BY rt0.c1 HAVING (NOT (GROUP_CONCAT(rt0.c0) COLLATE NOCASE)) UNION ALL SELECT ALL rt0.c1 FROM rt0 INNER JOIN t0 ON ((((((rt0.c1) NOT NULL))OR(CASE WHEN rt0.c0 THEN rt0.c2 END)))AND(((rt0.c1) NOTNULL))) GROUP BY rt0.c1 HAVING ((GROUP_CONCAT(rt0.c0) COLLATE NOCASE) ISNULL);
SELECT rt0.c1 FROM rt0 INNER JOIN t0 ON ((((((rt0.c1) NOT NULL))OR(CASE WHEN rt0.c0 THEN rt0.c2 END)))AND(((rt0.c1) NOTNULL))) GROUP BY rt0.c1;
SELECT * FROM t0;
SELECT ALL * FROM t0 WHERE (((t0.c0 COLLATE RTRIM)AND(((t0.c0) BETWEEN (t0.c0) AND (t0.c0))))) UNION ALL SELECT ALL * FROM t0 WHERE ((NOT (((t0.c0 COLLATE RTRIM)AND(((t0.c0) BETWEEN (t0.c0) AND (t0.c0))))))) UNION ALL SELECT ALL * FROM t0 WHERE (((((t0.c0 COLLATE RTRIM)AND(((t0.c0) BETWEEN (t0.c0) AND (t0.c0))))) ISNULL));
SELECT * FROM t0;
SELECT DISTINCT * FROM rt0, t0;
SELECT DISTINCT * FROM rt0, t0 WHERE (rt0.c0) UNION SELECT DISTINCT * FROM rt0, t0 WHERE ((NOT (rt0.c0))) UNION SELECT DISTINCT * FROM rt0, t0 WHERE (((rt0.c0) ISNULL));
SELECT DISTINCT * FROM rt0, t0;
SELECT rt0.c0, t0.c0, rt0.c1, rt0.c2 FROM t0, rt0 GROUP BY rt0.c0, t0.c0, rt0.c1, rt0.c2;
SELECT rt0.c0, t0.c0, rt0.c1, rt0.c2 FROM t0, rt0 WHERE (((((rt0.c0))!=((rt0.c0))) IN ())) GROUP BY rt0.c0, t0.c0, rt0.c1, rt0.c2 UNION SELECT ALL rt0.c0, t0.c0, rt0.c1, rt0.c2 FROM t0, rt0 WHERE ((NOT (((((rt0.c0))<>((rt0.c0))) IN ())))) GROUP BY rt0.c0, t0.c0, rt0.c1, rt0.c2 UNION SELECT ALL rt0.c0, t0.c0, rt0.c1, rt0.c2 FROM t0, rt0 WHERE (((((((rt0.c0))<>((rt0.c0))) IN ())) ISNULL)) GROUP BY rt0.c0, t0.c0, rt0.c1, rt0.c2;
SELECT rt0.c0, t0.c0, rt0.c1, rt0.c2 FROM t0, rt0 GROUP BY rt0.c0, t0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c1, t0.c0 FROM t0, rt0 GROUP BY rt0.c1, t0.c0;
SELECT ALL rt0.c1, t0.c0 FROM t0, rt0 GROUP BY rt0.c1, t0.c0 HAVING AVG(GROUP_CONCAT(rt0.c0)) UNION ALL SELECT rt0.c1, t0.c0 FROM t0, rt0 GROUP BY rt0.c1, t0.c0 HAVING (NOT (AVG(GROUP_CONCAT(rt0.c0)))) UNION ALL SELECT ALL rt0.c1, t0.c0 FROM t0, rt0 GROUP BY rt0.c1, t0.c0 HAVING ((AVG(GROUP_CONCAT(rt0.c0))) ISNULL);
SELECT rt0.c2, rt0.c1 FROM rt0;
SELECT rt0.c2, rt0.c1 FROM rt0 WHERE (((((- (rt0.c0))))<=((CASE WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c2 END)))) UNION ALL SELECT rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (((((- (rt0.c0))))<=((CASE WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c2 END)))))) UNION ALL SELECT rt0.c2, rt0.c1 FROM rt0 WHERE (((((((- (rt0.c0))))<=((CASE WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c2 END)))) ISNULL));
SELECT rt0.c2, rt0.c1 FROM rt0;
SELECT DISTINCT * FROM rt0 NATURAL JOIN t0;
SELECT DISTINCT * FROM rt0 NATURAL JOIN t0 WHERE (((((((((((((((((rt0.c1)AND(rt0.c2)))OR(t0.c0)))OR(((rt0.c2) BETWEEN (rt0.c0) AND ('VQS2<LWD')))))OR(json_array_length(rt0.c2))))OR((+ (rt0.c1)))))OR(((t0.c0) NOT BETWEEN (t0.c0) AND (rt0.c1)))))AND(((rt0.c1) IS TRUE))))OR(HEX(rt0.c0)))) UNION SELECT DISTINCT * FROM rt0 NATURAL JOIN t0 WHERE ((NOT (((((((((((((((((rt0.c1)AND(rt0.c2)))OR(t0.c0)))OR(((rt0.c2) BETWEEN (rt0.c0) AND ('VQS2<LWD')))))OR(json_array_length(rt0.c2))))OR((+ (rt0.c1)))))OR(((t0.c0) NOT BETWEEN (t0.c0) AND (rt0.c1)))))AND(((rt0.c1) IS TRUE))))OR(HEX(rt0.c0)))))) UNION SELECT DISTINCT * FROM rt0 NATURAL JOIN t0 WHERE (((((((((((((((((((rt0.c1)AND(rt0.c2)))OR(t0.c0)))OR(((rt0.c2) BETWEEN (rt0.c0) AND ('VQS2<LWD')))))OR(json_array_length(rt0.c2))))OR((+ (rt0.c1)))))OR(((t0.c0) NOT BETWEEN (t0.c0) AND (rt0.c1)))))AND(((rt0.c1) IS TRUE))))OR(HEX(rt0.c0)))) ISNULL));
SELECT DISTINCT * FROM rt0 NATURAL JOIN t0;
SELECT ALL t0.c0 FROM rt0, t0 GROUP BY t0.c0;
SELECT t0.c0 FROM rt0, t0 WHERE (((t0.c0) BETWEEN ((+ (rt0.c1))) AND (0Xffffffffedc43a25 COLLATE RTRIM))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM rt0, t0 WHERE ((NOT (((t0.c0) BETWEEN ((+ (rt0.c1))) AND (0Xffffffffedc43a25 COLLATE RTRIM))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM rt0, t0 WHERE (((((t0.c0) BETWEEN ((+ (rt0.c1))) AND (0xffffffffedc43a25 COLLATE RTRIM))) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM rt0, t0 GROUP BY t0.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING (((rt0.c0)>(rt0.c1)) IN ()) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING (NOT ((((rt0.c0)>(rt0.c1)) IN ()))) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING (((((rt0.c0)>(rt0.c1)) IN ())) ISNULL);
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING (((rt0.c0)>(rt0.c1)) IN ()) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING (NOT ((((rt0.c0)>(rt0.c1)) IN ()))) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING (((((rt0.c0)>(rt0.c1)) IN ())) ISNULL);
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT ALL * FROM t0, rt0;
SELECT * FROM t0, rt0 WHERE ('') UNION ALL SELECT * FROM t0, rt0 WHERE ((NOT (''))) UNION ALL SELECT ALL * FROM t0, rt0 WHERE ((('') ISNULL));
SELECT ALL * FROM t0, rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((rtreenode(rt0.c2, rt0.c2)) NOT NULL)) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((rtreenode(rt0.c2, rt0.c2)) NOT NULL)))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((rtreenode(rt0.c2, rt0.c2)) NOT NULL)) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT t0.c0, rt0.c2, rt0.c1, rt0.c0 FROM rt0, t0 GROUP BY t0.c0, rt0.c2, rt0.c1, rt0.c0;
SELECT t0.c0, rt0.c2, rt0.c1, rt0.c0 FROM rt0, t0 WHERE (CAST(('᭽7-fG	7*i' IN ()) AS INTEGER)) GROUP BY t0.c0, rt0.c2, rt0.c1, rt0.c0 UNION SELECT ALL t0.c0, rt0.c2, rt0.c1, rt0.c0 FROM rt0, t0 WHERE ((NOT (CAST(('᭽7-fG	7*i' IN ()) AS INTEGER)))) GROUP BY t0.c0, rt0.c2, rt0.c1, rt0.c0 UNION SELECT ALL t0.c0, rt0.c2, rt0.c1, rt0.c0 FROM rt0, t0 WHERE (((CAST(('᭽7-fG	7*i' IN ()) AS INTEGER)) ISNULL)) GROUP BY t0.c0, rt0.c2, rt0.c1, rt0.c0;
SELECT t0.c0, rt0.c2, rt0.c1, rt0.c0 FROM rt0, t0 GROUP BY t0.c0, rt0.c2, rt0.c1, rt0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING TOTAL(((COUNT(MAX(t0.c0)))LIKE(SUM(GROUP_CONCAT(AVG(COUNT(t0.c0))))))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (TOTAL(((COUNT(MAX(t0.c0)))LIKE(SUM(GROUP_CONCAT(AVG(COUNT(t0.c0))))))))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((TOTAL(((COUNT(MAX(t0.c0)))LIKE(SUM(GROUP_CONCAT(AVG(COUNT(t0.c0)))))))) ISNULL);
SELECT * FROM t0;
SELECT * FROM t0 WHERE (t0.c0) UNION ALL SELECT ALL * FROM t0 WHERE ((NOT (t0.c0))) UNION ALL SELECT * FROM t0 WHERE (((t0.c0) ISNULL));
SELECT * FROM t0;
SELECT DISTINCT rt0.c2, t0.c0, rt0.c1, rt0.c0 FROM rt0, t0;
SELECT DISTINCT rt0.c2, t0.c0, rt0.c1, rt0.c0 FROM rt0, t0 WHERE (((CAST(rt0.c0 AS REAL))AND((- (rt0.c0))))) UNION SELECT DISTINCT rt0.c2, t0.c0, rt0.c1, rt0.c0 FROM rt0, t0 WHERE ((NOT (((CAST(rt0.c0 AS REAL))AND((- (rt0.c0))))))) UNION SELECT DISTINCT rt0.c2, t0.c0, rt0.c1, rt0.c0 FROM rt0, t0 WHERE (((((CAST(rt0.c0 AS REAL))AND((- (rt0.c0))))) ISNULL));
SELECT DISTINCT rt0.c2, t0.c0, rt0.c1, rt0.c0 FROM rt0, t0;
SELECT rt0.c1 FROM t0, rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM t0, rt0 WHERE ((NOT (((t0.c0)-(rt0.c1))))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM t0, rt0 WHERE ((NOT ((NOT (((t0.c0)-(rt0.c1))))))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM t0, rt0 WHERE ((((NOT (((t0.c0)-(rt0.c1))))) ISNULL)) GROUP BY rt0.c1;
SELECT rt0.c1 FROM t0, rt0 GROUP BY rt0.c1;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((((t0.c0) ISNULL))<(NULLIF(TOTAL(t0.c0), t0.c0))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (((((t0.c0) ISNULL))<(NULLIF(TOTAL(t0.c0), t0.c0))))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((((((t0.c0) ISNULL))<(NULLIF(TOTAL(t0.c0), t0.c0)))) ISNULL);
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((((t0.c0) ISNULL))<(NULLIF(TOTAL(t0.c0), t0.c0))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (((((t0.c0) ISNULL))<(NULLIF(TOTAL(t0.c0), t0.c0))))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((((((t0.c0) ISNULL))<(NULLIF(TOTAL(t0.c0), t0.c0)))) ISNULL);
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL * FROM t0;
SELECT ALL * FROM t0 WHERE (CAST(CASE t0.c0  WHEN '{}' THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END AS TEXT)) UNION ALL SELECT ALL * FROM t0 WHERE ((NOT (CAST(CASE t0.c0  WHEN '{}' THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END AS TEXT)))) UNION ALL SELECT ALL * FROM t0 WHERE (((CAST(CASE t0.c0  WHEN '{}' THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END AS TEXT)) ISNULL));
SELECT ALL * FROM t0;
SELECT DISTINCT * FROM t0 FULL OUTER JOIN rt0 ON CAST(((((rt0.c1)OR(rt0.c1)))OR(rt0.c0)) AS TEXT);
SELECT DISTINCT * FROM t0 FULL OUTER JOIN rt0 ON CAST(((((rt0.c1)OR(rt0.c1)))OR(rt0.c0)) AS TEXT) WHERE (CASE ''  WHEN ((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c1)) THEN ((t0.c0) IS TRUE) ELSE (rt0.c1 IN ('0.9762050745292075', rt0.c2)) END) UNION SELECT DISTINCT * FROM t0 FULL OUTER JOIN rt0 ON CAST(((((rt0.c1)OR(rt0.c1)))OR(rt0.c0)) AS TEXT) WHERE ((NOT (CASE ''  WHEN ((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c1)) THEN ((t0.c0) IS TRUE) ELSE (rt0.c1 IN ('0.9762050745292075', rt0.c2)) END))) UNION SELECT DISTINCT * FROM t0 FULL OUTER JOIN rt0 ON CAST(((((rt0.c1)OR(rt0.c1)))OR(rt0.c0)) AS TEXT) WHERE (((CASE ''  WHEN ((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c1)) THEN ((t0.c0) IS TRUE) ELSE (rt0.c1 IN ('0.9762050745292075', rt0.c2)) END) ISNULL));
SELECT DISTINCT * FROM t0 FULL OUTER JOIN rt0 ON CAST(((((rt0.c1)OR(rt0.c1)))OR(rt0.c0)) AS TEXT);
SELECT rt0.c0, rt0.c2 FROM rt0, t0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM rt0, t0 WHERE (((NOT (rt0.c2)) IN (rt0.c2 COLLATE BINARY))) GROUP BY rt0.c0, rt0.c2 UNION SELECT rt0.c0, rt0.c2 FROM rt0, t0 WHERE ((NOT (((NOT (rt0.c2)) IN (rt0.c2 COLLATE BINARY))))) GROUP BY rt0.c0, rt0.c2 UNION SELECT rt0.c0, rt0.c2 FROM rt0, t0 WHERE (((((NOT (rt0.c2)) IN (rt0.c2 COLLATE BINARY))) ISNULL)) GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c2 FROM rt0, t0 GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c1 FROM rt0, t0 GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c1 FROM rt0, t0 GROUP BY rt0.c0, rt0.c1 HAVING TOTAL((((MAX(rt0.c2)))>=((rt0.c2)))) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM rt0, t0 GROUP BY rt0.c0, rt0.c1 HAVING (NOT (TOTAL((((MAX(rt0.c2)))>=((rt0.c2)))))) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM rt0, t0 GROUP BY rt0.c0, rt0.c1 HAVING ((TOTAL((((MAX(rt0.c2)))>=((rt0.c2))))) ISNULL);
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0, t0;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0, t0 WHERE (rt0.c1) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0, t0 WHERE ((NOT (rt0.c1))) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0, t0 WHERE (((rt0.c1) ISNULL));
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0, t0;
SELECT DISTINCT t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0 WHERE (((~ (t0.c0)) IN ())) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((NOT (((~ (t0.c0)) IN ())))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE (((((~ (t0.c0)) IN ())) ISNULL));
SELECT DISTINCT t0.c0 FROM t0;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE (((((((0xffffffffe7e96076)AND(rt0.c0)))AND(rt0.c1)))%(NULL))) GROUP BY rt0.c2, rt0.c0, rt0.c1 UNION SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (((((((0xffffffffe7e96076)AND(rt0.c0)))AND(rt0.c1)))%(NULL))))) GROUP BY rt0.c2, rt0.c0, rt0.c1 UNION SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE (((((((((0Xffffffffe7e96076)AND(rt0.c0)))AND(rt0.c1)))%(NULL))) ISNULL)) GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT rt0.c0, t0.c0 FROM rt0 INNER JOIN t0 ON ((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c1 END)!=(NULL COLLATE BINARY)) GROUP BY rt0.c0, t0.c0;
SELECT ALL rt0.c0, t0.c0 FROM rt0 INNER JOIN t0 ON ((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c1 END)<>(NULL COLLATE BINARY)) GROUP BY rt0.c0, t0.c0 HAVING ((MIN(AVG(t0.c0)))&(MAX(COUNT(*)))) UNION ALL SELECT ALL rt0.c0, t0.c0 FROM rt0 INNER JOIN t0 ON ((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c1 END)!=(NULL COLLATE BINARY)) GROUP BY rt0.c0, t0.c0 HAVING (NOT (((MIN(AVG(t0.c0)))&(MAX(COUNT(*)))))) UNION ALL SELECT ALL rt0.c0, t0.c0 FROM rt0 INNER JOIN t0 ON ((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c1 END)!=(NULL COLLATE BINARY)) GROUP BY rt0.c0, t0.c0 HAVING ((((MIN(AVG(t0.c0)))&(MAX(COUNT(*))))) ISNULL);
SELECT rt0.c1, t0.c0 FROM rt0, t0;
SELECT ALL rt0.c1, t0.c0 FROM rt0, t0 WHERE (rt0.c0) UNION ALL SELECT rt0.c1, t0.c0 FROM rt0, t0 WHERE ((NOT (rt0.c0))) UNION ALL SELECT rt0.c1, t0.c0 FROM rt0, t0 WHERE (((rt0.c0) ISNULL));
SELECT rt0.c1, t0.c0 FROM rt0, t0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (json_quote('-1071879876')) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (json_quote('-1071879876')))) UNION SELECT DISTINCT * FROM rt0 WHERE (((json_quote('-1071879876')) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 WHERE ((+ (TRIM(DISTINCT t0.c0, '')))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT ((+ (TRIM(DISTINCT t0.c0, '')))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((((+ (TRIM(DISTINCT t0.c0, '')))) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING TOTAL(SUM(t0.c0)) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (TOTAL(SUM(t0.c0)))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((TOTAL(SUM(t0.c0))) ISNULL);
SELECT * FROM t0 NATURAL JOIN rt0;
SELECT ALL * FROM t0 NATURAL JOIN rt0 WHERE (((((rt0.c0) NOT BETWEEN (rt0.c0) AND (''))) BETWEEN (((t0.c0)|(rt0.c1))) AND (rt0.c0 COLLATE NOCASE))) UNION ALL SELECT * FROM t0 NATURAL JOIN rt0 WHERE ((NOT (((((rt0.c0) NOT BETWEEN (rt0.c0) AND (''))) BETWEEN (((t0.c0)|(rt0.c1))) AND (rt0.c0 COLLATE NOCASE))))) UNION ALL SELECT ALL * FROM t0 NATURAL JOIN rt0 WHERE (((((((rt0.c0) NOT BETWEEN (rt0.c0) AND (''))) BETWEEN (((t0.c0)|(rt0.c1))) AND (rt0.c0 COLLATE NOCASE))) ISNULL));
SELECT * FROM t0 NATURAL JOIN rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (rt0.c2) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (rt0.c2))) UNION SELECT DISTINCT * FROM rt0 WHERE (((rt0.c2) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT t0.c0, rt0.c1 FROM t0, rt0 GROUP BY t0.c0, rt0.c1;
SELECT ALL t0.c0, rt0.c1 FROM t0, rt0 WHERE ((NOT (((rt0.c0) ISNULL)))) GROUP BY t0.c0, rt0.c1 UNION SELECT ALL t0.c0, rt0.c1 FROM t0, rt0 WHERE ((NOT ((NOT (((rt0.c0) ISNULL)))))) GROUP BY t0.c0, rt0.c1 UNION SELECT t0.c0, rt0.c1 FROM t0, rt0 WHERE ((((NOT (((rt0.c0) ISNULL)))) ISNULL)) GROUP BY t0.c0, rt0.c1;
SELECT t0.c0, rt0.c1 FROM t0, rt0 GROUP BY t0.c0, rt0.c1;
SELECT ALL rt0.c1, rt0.c2 FROM rt0, t0 GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c1, rt0.c2 FROM rt0, t0 GROUP BY rt0.c1, rt0.c2 HAVING ((MAX(GROUP_CONCAT(COUNT(COUNT(TOTAL(rt0.c2)))))) ISNULL) UNION ALL SELECT rt0.c1, rt0.c2 FROM rt0, t0 GROUP BY rt0.c1, rt0.c2 HAVING (NOT (((MAX(GROUP_CONCAT(COUNT(COUNT(TOTAL(rt0.c2)))))) ISNULL))) UNION ALL SELECT rt0.c1, rt0.c2 FROM rt0, t0 GROUP BY rt0.c1, rt0.c2 HAVING ((((MAX(GROUP_CONCAT(COUNT(COUNT(TOTAL(rt0.c2)))))) ISNULL)) ISNULL);
SELECT ALL rt0.c1, t0.c0, rt0.c0 FROM rt0, t0;
SELECT rt0.c1, t0.c0, rt0.c0 FROM rt0, t0 WHERE (rt0.c1) UNION ALL SELECT ALL rt0.c1, t0.c0, rt0.c0 FROM rt0, t0 WHERE ((NOT (rt0.c1))) UNION ALL SELECT ALL rt0.c1, t0.c0, rt0.c0 FROM rt0, t0 WHERE (((rt0.c1) ISNULL));
SELECT ALL rt0.c1, t0.c0, rt0.c0 FROM rt0, t0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE ((((NULLIF(DISTINCT t0.c0, t0.c0)))!=((t0.c0 COLLATE NOCASE)))) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT ((((NULLIF(DISTINCT t0.c0, t0.c0)))!=((t0.c0 COLLATE NOCASE)))))) UNION SELECT DISTINCT * FROM t0 WHERE ((((((NULLIF(DISTINCT t0.c0, t0.c0)))<>((t0.c0 COLLATE NOCASE)))) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 WHERE (((((((((((rt0.c0)<<(rt0.c1)))OR(rt0.c1 COLLATE NOCASE)))AND(((rt0.c0) NOT BETWEEN (rt0.c1) AND (0.7339981387470157)))))AND(rt0.c0 COLLATE NOCASE)))AND(((((rt0.c2)OR(rt0.c0)))AND(rt0.c1))))) GROUP BY rt0.c0, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (((((((((((rt0.c0)<<(rt0.c1)))OR(rt0.c1 COLLATE NOCASE)))AND(((rt0.c0) NOT BETWEEN (rt0.c1) AND (0.7339981387470157)))))AND(rt0.c0 COLLATE NOCASE)))AND(((((rt0.c2)OR(rt0.c0)))AND(rt0.c1))))))) GROUP BY rt0.c0, rt0.c2 UNION SELECT rt0.c0, rt0.c2 FROM rt0 WHERE (((((((((((((rt0.c0)<<(rt0.c1)))OR(rt0.c1 COLLATE NOCASE)))AND(((rt0.c0) NOT BETWEEN (rt0.c1) AND (0.7339981387470157)))))AND(rt0.c0 COLLATE NOCASE)))AND(((((rt0.c2)OR(rt0.c0)))AND(rt0.c1))))) ISNULL)) GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (((AVG(rt0.c2)) NOT BETWEEN (GROUP_CONCAT(TOTAL(MAX(SUM(AVG(COUNT(*))))))) AND (rt0.c2)) IN (((TOTAL(MIN(rt0.c2)))||(rt0.c2)), ((rt0.c2) IS TRUE))) UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT ((((AVG(rt0.c2)) NOT BETWEEN (GROUP_CONCAT(TOTAL(MAX(SUM(AVG(COUNT(*))))))) AND (rt0.c2)) IN (((TOTAL(MIN(rt0.c2)))||(rt0.c2)), ((rt0.c2) IS TRUE))))) UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (((((AVG(rt0.c2)) NOT BETWEEN (GROUP_CONCAT(TOTAL(MAX(SUM(AVG(COUNT(*))))))) AND (rt0.c2)) IN (((TOTAL(MIN(rt0.c2)))||(rt0.c2)), ((rt0.c2) IS TRUE)))) ISNULL);
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0, t0;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0, t0 WHERE (((((((((((((((((rt0.c1)OR(rt0.c0)))AND(rt0.c1)))OR(rt0.c1)))AND(rt0.c0)))AND(((rt0.c1)LIKE(rt0.c0)))))OR(((rt0.c2) BETWEEN (t0.c0) AND (x'')))))OR((t0.c0 IN ()))))OR(CASE WHEN t0.c0 THEN rt0.c0 ELSE t0.c0 END))) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0, t0 WHERE ((NOT (((((((((((((((((rt0.c1)OR(rt0.c0)))AND(rt0.c1)))OR(rt0.c1)))AND(rt0.c0)))AND(((rt0.c1)LIKE(rt0.c0)))))OR(((rt0.c2) BETWEEN (t0.c0) AND (x'')))))OR((t0.c0 IN ()))))OR(CASE WHEN t0.c0 THEN rt0.c0 ELSE t0.c0 END))))) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0, t0 WHERE (((((((((((((((((((rt0.c1)OR(rt0.c0)))AND(rt0.c1)))OR(rt0.c1)))AND(rt0.c0)))AND(((rt0.c1)LIKE(rt0.c0)))))OR(((rt0.c2) BETWEEN (t0.c0) AND (x'')))))OR((t0.c0 IN ()))))OR(CASE WHEN t0.c0 THEN rt0.c0 ELSE t0.c0 END))) ISNULL));
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0, t0;
SELECT DISTINCT * FROM rt0 CROSS JOIN t0 ON ((((rt0.c1)/(rt0.c1))) BETWEEN ((~ (rt0.c2))) AND ((NOT (t0.c0))));
SELECT DISTINCT * FROM rt0 CROSS JOIN t0 ON ((((rt0.c1)/(rt0.c1))) BETWEEN ((~ (rt0.c2))) AND ((NOT (t0.c0)))) WHERE (((((rt0.c2) IS FALSE))LIKE((~ (rt0.c1))))) UNION SELECT DISTINCT * FROM rt0 CROSS JOIN t0 ON ((((rt0.c1)/(rt0.c1))) BETWEEN ((~ (rt0.c2))) AND ((NOT (t0.c0)))) WHERE ((NOT (((((rt0.c2) IS FALSE))LIKE((~ (rt0.c1))))))) UNION SELECT DISTINCT * FROM rt0 CROSS JOIN t0 ON ((((rt0.c1)/(rt0.c1))) BETWEEN ((~ (rt0.c2))) AND ((NOT (t0.c0)))) WHERE (((((((rt0.c2) IS FALSE))LIKE((~ (rt0.c1))))) ISNULL));
SELECT DISTINCT * FROM rt0 CROSS JOIN t0 ON ((((rt0.c1)/(rt0.c1))) BETWEEN ((~ (rt0.c2))) AND ((NOT (t0.c0))));
SELECT ALL rt0.c2, rt0.c1 FROM t0, rt0 GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c2, rt0.c1 FROM t0, rt0 WHERE (((((((((rt0.c1)AND(((((((((rt0.c0)AND(rt0.c1)))AND(rt0.c0)))OR(0.9714341026078621)))AND(rt0.c0)))))AND('-795429469')))OR(rt0.c1)))AND(((0.07228304282951481) NOT BETWEEN (rt0.c2) AND (rt0.c0))))) GROUP BY rt0.c2, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c1 FROM t0, rt0 WHERE ((NOT (((((((((rt0.c1)AND(((((((((rt0.c0)AND(rt0.c1)))AND(rt0.c0)))OR(0.9714341026078621)))AND(rt0.c0)))))AND('-795429469')))OR(rt0.c1)))AND(((0.07228304282951481) NOT BETWEEN (rt0.c2) AND (rt0.c0))))))) GROUP BY rt0.c2, rt0.c1 UNION SELECT rt0.c2, rt0.c1 FROM t0, rt0 WHERE (((((((((((rt0.c1)AND(((((((((rt0.c0)AND(rt0.c1)))AND(rt0.c0)))OR(0.9714341026078621)))AND(rt0.c0)))))AND('-795429469')))OR(rt0.c1)))AND(((0.07228304282951481) NOT BETWEEN (rt0.c2) AND (rt0.c0))))) ISNULL)) GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM t0, rt0 GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING MAX(TYPEOF(DISTINCT SUM(rt0.c1))) UNION ALL SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING (NOT (MAX(TYPEOF(DISTINCT SUM(rt0.c1))))) UNION ALL SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING ((MAX(TYPEOF(DISTINCT SUM(rt0.c1)))) ISNULL);
SELECT ALL t0.c0 FROM t0;
SELECT ALL t0.c0 FROM t0 WHERE (t0.c0) UNION ALL SELECT t0.c0 FROM t0 WHERE ((NOT (t0.c0))) UNION ALL SELECT t0.c0 FROM t0 WHERE (((t0.c0) ISNULL));
SELECT ALL t0.c0 FROM t0;
SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0 INNER JOIN t0 ON (((rt0.c0) BETWEEN (rt0.c0) AND (x'2243')) IN ((- (rt0.c2))));
SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0 INNER JOIN t0 ON (((rt0.c0) BETWEEN (rt0.c0) AND (x'2243')) IN ((- (rt0.c2)))) WHERE ((+ (((t0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0))))) UNION SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0 INNER JOIN t0 ON (((rt0.c0) BETWEEN (rt0.c0) AND (x'2243')) IN ((- (rt0.c2)))) WHERE ((NOT ((+ (((t0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0))))))) UNION SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0 INNER JOIN t0 ON (((rt0.c0) BETWEEN (rt0.c0) AND (x'2243')) IN ((- (rt0.c2)))) WHERE ((((+ (((t0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0))))) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0 INNER JOIN t0 ON (((rt0.c0) BETWEEN (rt0.c0) AND (x'2243')) IN ((- (rt0.c2))));
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 WHERE ((((((t0.c0))<=((t0.c0))))*(((t0.c0) BETWEEN (t0.c0) AND (t0.c0))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT ((((((t0.c0))<=((t0.c0))))*(((t0.c0) BETWEEN (t0.c0) AND (t0.c0))))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((((((((t0.c0))<=((t0.c0))))*(((t0.c0) BETWEEN (t0.c0) AND (t0.c0))))) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING (rt0.c2 IN ()) COLLATE NOCASE UNION ALL SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING (NOT ((rt0.c2 IN ()) COLLATE NOCASE)) UNION ALL SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING (((rt0.c2 IN ()) COLLATE NOCASE) ISNULL);
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING (rt0.c2 IN ()) COLLATE NOCASE UNION ALL SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING (NOT ((rt0.c2 IN ()) COLLATE NOCASE)) UNION ALL SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING (((rt0.c2 IN ()) COLLATE NOCASE) ISNULL);
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT MIN(rt0.c0) FROM rt0, t0 ORDER BY (((rt0.c2 IN ())) ISNULL), HEX(DISTINCT t0.c0) COLLATE RTRIM;
SELECT rt0.c0, t0.c0 FROM rt0, t0;
SELECT rt0.c0, t0.c0 FROM rt0, t0 WHERE (((((((((((rt0.c1)AND(rt0.c0)))AND(rt0.c1)))AND(rt0.c1)))AND(rt0.c1))) BETWEEN (((((rt0.c0)OR(NULL)))AND(rt0.c2))) AND (((0.01730095469813564) NOT BETWEEN (t0.c0) AND (rt0.c2))))) UNION ALL SELECT rt0.c0, t0.c0 FROM rt0, t0 WHERE ((NOT (((((((((((rt0.c1)AND(rt0.c0)))AND(rt0.c1)))AND(rt0.c1)))AND(rt0.c1))) BETWEEN (((((rt0.c0)OR(NULL)))AND(rt0.c2))) AND (((0.01730095469813564) NOT BETWEEN (t0.c0) AND (rt0.c2))))))) UNION ALL SELECT rt0.c0, t0.c0 FROM rt0, t0 WHERE (((((((((((((rt0.c1)AND(rt0.c0)))AND(rt0.c1)))AND(rt0.c1)))AND(rt0.c1))) BETWEEN (((((rt0.c0)OR(NULL)))AND(rt0.c2))) AND (((0.01730095469813564) NOT BETWEEN (t0.c0) AND (rt0.c2))))) ISNULL));
SELECT rt0.c0, t0.c0 FROM rt0, t0;
SELECT DISTINCT t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0 WHERE ('-1071466104') UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((NOT ('-1071466104'))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((('-1071466104') ISNULL));
SELECT DISTINCT t0.c0 FROM t0;
SELECT rt0.c2 FROM t0 NATURAL JOIN rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM t0 NATURAL JOIN rt0 WHERE ('1334643858') GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM t0 NATURAL JOIN rt0 WHERE ((NOT ('1334643858'))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM t0 NATURAL JOIN rt0 WHERE ((('1334643858') ISNULL)) GROUP BY rt0.c2;
SELECT rt0.c2 FROM t0 NATURAL JOIN rt0 GROUP BY rt0.c2;
SELECT rt0.c1, rt0.c0 FROM t0, rt0 GROUP BY rt0.c1, rt0.c0;
SELECT rt0.c1, rt0.c0 FROM t0, rt0 GROUP BY rt0.c1, rt0.c0 HAVING x'433e' UNION ALL SELECT ALL rt0.c1, rt0.c0 FROM t0, rt0 GROUP BY rt0.c1, rt0.c0 HAVING (NOT (x'433e')) UNION ALL SELECT ALL rt0.c1, rt0.c0 FROM t0, rt0 GROUP BY rt0.c1, rt0.c0 HAVING ((x'433e') ISNULL);
SELECT rt0.c1, rt0.c0 FROM t0, rt0 GROUP BY rt0.c1, rt0.c0;
SELECT rt0.c1, rt0.c0 FROM t0, rt0 GROUP BY rt0.c1, rt0.c0 HAVING x'433e' UNION ALL SELECT ALL rt0.c1, rt0.c0 FROM t0, rt0 GROUP BY rt0.c1, rt0.c0 HAVING (NOT (x'433e')) UNION ALL SELECT ALL rt0.c1, rt0.c0 FROM t0, rt0 GROUP BY rt0.c1, rt0.c0 HAVING ((x'433e') ISNULL);
SELECT rt0.c1, rt0.c0 FROM t0, rt0 GROUP BY rt0.c1, rt0.c0;
SELECT rt0.c1, rt0.c0 FROM rt0;
SELECT rt0.c1, rt0.c0 FROM rt0 WHERE ((((0.7087434760805842 IN ())) NOT NULL)) UNION ALL SELECT ALL rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT ((((0.7087434760805842 IN ())) NOT NULL)))) UNION ALL SELECT rt0.c1, rt0.c0 FROM rt0 WHERE ((((((0.7087434760805842 IN ())) NOT NULL)) ISNULL));
SELECT rt0.c1, rt0.c0 FROM rt0;
SELECT DISTINCT t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0 WHERE (ABS(DISTINCT TYPEOF('-1377222550'))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((NOT (ABS(DISTINCT TYPEOF('-1377222550'))))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE (((ABS(DISTINCT TYPEOF('-1377222550'))) ISNULL));
SELECT DISTINCT t0.c0 FROM t0;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 WHERE (((((((((rt0.c0)AND(TYPEOF(rt0.c1))))AND(((((rt0.c2)OR(rt0.c0)))OR(rt0.c2)))))OR((((rt0.c0, rt0.c1, rt0.c0)) NOT BETWEEN ((rt0.c0, rt0.c2, rt0.c2)) AND ((rt0.c0, rt0.c0, rt0.c0))))))OR(((rt0.c0) BETWEEN (rt0.c0) AND (x''))))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0 WHERE ((NOT (((((((((rt0.c0)AND(TYPEOF(rt0.c1))))AND(((((rt0.c2)OR(rt0.c0)))OR(rt0.c2)))))OR((((rt0.c0, rt0.c1, rt0.c0)) NOT BETWEEN ((rt0.c0, rt0.c2, rt0.c2)) AND ((rt0.c0, rt0.c0, rt0.c0))))))OR(((rt0.c0) BETWEEN (rt0.c0) AND (x''))))))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0 WHERE (((((((((((rt0.c0)AND(TYPEOF(rt0.c1))))AND(((((rt0.c2)OR(rt0.c0)))OR(rt0.c2)))))OR((((rt0.c0, rt0.c1, rt0.c0)) NOT BETWEEN ((rt0.c0, rt0.c2, rt0.c2)) AND ((rt0.c0, rt0.c0, rt0.c0))))))OR(((rt0.c0) BETWEEN (rt0.c0) AND (x''))))) ISNULL)) GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL t0.c0, rt0.c0 FROM rt0, t0 GROUP BY t0.c0, rt0.c0;
SELECT ALL t0.c0, rt0.c0 FROM rt0, t0 GROUP BY t0.c0, rt0.c0 HAVING SUM(MIN(rt0.c1)) UNION ALL SELECT ALL t0.c0, rt0.c0 FROM rt0, t0 GROUP BY t0.c0, rt0.c0 HAVING (NOT (SUM(MIN(rt0.c1)))) UNION ALL SELECT ALL t0.c0, rt0.c0 FROM rt0, t0 NOT INDEXED GROUP BY t0.c0, rt0.c0 HAVING ((SUM(MIN(rt0.c1))) ISNULL);
SELECT MAX(CASE WHEN CASE t0.c0  WHEN rt0.c0 THEN t0.c0 END THEN ((t0.c0)>(rt0.c0)) END) FROM rt0, t0 ORDER BY (((rt0.c1)/(rt0.c1)) IN ()) DESC;
SELECT * FROM rt0, t0;
SELECT * FROM rt0, t0 WHERE (((+ (t0.c0)) IN ())) UNION ALL SELECT * FROM rt0, t0 WHERE ((NOT (((+ (t0.c0)) IN ())))) UNION ALL SELECT * FROM rt0, t0 WHERE (((((+ (t0.c0)) IN ())) ISNULL));
SELECT * FROM rt0, t0;
SELECT DISTINCT rt0.c1, t0.c0, rt0.c2 FROM rt0 INNER JOIN t0 ON load_extension((((rt0.c2))<=((rt0.c2))), CHAR(rt0.c0, rt0.c0, rt0.c0));
SELECT ALL t0.c0, rt0.c0 FROM t0 RIGHT OUTER JOIN rt0 ON ((((((rt0.c1)OR(rt0.c0)))OR(rt0.c1)))LIKE(((rt0.c0)/(rt0.c0)))) GROUP BY t0.c0, rt0.c0;
SELECT ALL t0.c0, rt0.c0 FROM t0 RIGHT OUTER JOIN rt0 ON ((((((rt0.c1)OR(rt0.c0)))OR(rt0.c1)))LIKE(((rt0.c0)/(rt0.c0)))) WHERE (((LOWER(DISTINCT rt0.c1)) NOT BETWEEN (CAST(rt0.c2 AS REAL)) AND (NULL))) GROUP BY t0.c0, rt0.c0 UNION SELECT t0.c0, rt0.c0 FROM t0 RIGHT OUTER JOIN rt0 ON ((((((rt0.c1)OR(rt0.c0)))OR(rt0.c1)))LIKE(((rt0.c0)/(rt0.c0)))) WHERE ((NOT (((LOWER(DISTINCT rt0.c1)) NOT BETWEEN (CAST(rt0.c2 AS REAL)) AND (NULL))))) GROUP BY t0.c0, rt0.c0 UNION SELECT t0.c0, rt0.c0 FROM t0 RIGHT OUTER JOIN rt0 ON ((((((rt0.c1)OR(rt0.c0)))OR(rt0.c1)))LIKE(((rt0.c0)/(rt0.c0)))) WHERE (((((LOWER(DISTINCT rt0.c1)) NOT BETWEEN (CAST(rt0.c2 AS REAL)) AND (NULL))) ISNULL)) GROUP BY t0.c0, rt0.c0;
SELECT ALL t0.c0, rt0.c0 FROM t0 RIGHT OUTER JOIN rt0 ON ((((((rt0.c1)OR(rt0.c0)))OR(rt0.c1)))LIKE(((rt0.c0)/(rt0.c0)))) GROUP BY t0.c0, rt0.c0;
SELECT rt0.c1, t0.c0, rt0.c0, rt0.c2 FROM t0, rt0 GROUP BY rt0.c1, t0.c0, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, t0.c0, rt0.c0, rt0.c2 FROM t0 NOT INDEXED, rt0 GROUP BY rt0.c1, t0.c0, rt0.c0, rt0.c2 HAVING GROUP_CONCAT(MIN(MAX(rt0.c1))) UNION ALL SELECT ALL rt0.c1, t0.c0, rt0.c0, rt0.c2 FROM t0, rt0 GROUP BY rt0.c1, t0.c0, rt0.c0, rt0.c2 HAVING (NOT (GROUP_CONCAT(MIN(MAX(rt0.c1))))) UNION ALL SELECT ALL rt0.c1, t0.c0, rt0.c0, rt0.c2 FROM t0, rt0 GROUP BY rt0.c1, t0.c0, rt0.c0, rt0.c2 HAVING ((GROUP_CONCAT(MIN(MAX(rt0.c1)))) ISNULL);
SELECT t0.c0 FROM t0;
SELECT ALL t0.c0 FROM t0 WHERE (((((t0.c0)*(t0.c0)))*(NULL COLLATE BINARY))) UNION ALL SELECT ALL t0.c0 FROM t0 WHERE ((NOT (((((t0.c0)*(t0.c0)))*(NULL COLLATE BINARY))))) UNION ALL SELECT t0.c0 FROM t0 WHERE (((((((t0.c0)*(t0.c0)))*(NULL COLLATE BINARY))) ISNULL));
SELECT t0.c0 FROM t0;
SELECT DISTINCT rt0.c2 FROM t0 FULL OUTER JOIN rt0 ON (~ (UNICODE(rt0.c2)));
SELECT DISTINCT rt0.c2 FROM t0 FULL OUTER JOIN rt0 ON (~ (UNICODE(rt0.c2))) WHERE (rt0.c2) UNION SELECT DISTINCT rt0.c2 FROM t0 FULL OUTER JOIN rt0 ON (~ (UNICODE(rt0.c2))) WHERE ((NOT (rt0.c2))) UNION SELECT DISTINCT rt0.c2 FROM t0 FULL OUTER JOIN rt0 ON (~ (UNICODE(rt0.c2))) WHERE (((rt0.c2) ISNULL));
SELECT DISTINCT rt0.c2 FROM t0 FULL OUTER JOIN rt0 ON (~ (UNICODE(rt0.c2)));
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 WHERE (rt0.c1) GROUP BY rt0.c2, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c0 FROM rt0 NOT INDEXED WHERE ((NOT (rt0.c1))) GROUP BY rt0.c2, rt0.c0 UNION SELECT rt0.c2, rt0.c0 FROM rt0 WHERE (((rt0.c1) ISNULL)) GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c0 FROM rt0, t0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0, t0 GROUP BY rt0.c0 HAVING SUM(((rt0.c1) NOT BETWEEN (COUNT(*)) AND (AVG(rt0.c0)))) UNION ALL SELECT rt0.c0 FROM rt0, t0 GROUP BY rt0.c0 HAVING (NOT (SUM(((rt0.c1) NOT BETWEEN (COUNT(*)) AND (AVG(rt0.c0)))))) UNION ALL SELECT ALL rt0.c0 FROM rt0, t0 GROUP BY rt0.c0 HAVING ((SUM(((rt0.c1) NOT BETWEEN (COUNT(*)) AND (AVG(rt0.c0))))) ISNULL);
SELECT rt0.c2, rt0.c1 FROM t0, rt0;
SELECT rt0.c2, rt0.c1 FROM t0, rt0 WHERE ((~ ((rt0.c0 IN (t0.c0, rt0.c2))))) UNION ALL SELECT rt0.c2, rt0.c1 FROM t0, rt0 WHERE ((NOT ((~ ((rt0.c0 IN (t0.c0, rt0.c2))))))) UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM t0, rt0 WHERE ((((~ ((rt0.c0 IN (t0.c0, rt0.c2))))) ISNULL));
SELECT rt0.c2, rt0.c1 FROM t0, rt0;
SELECT DISTINCT t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0 WHERE ((((NULL))<>((CAST(t0.c0 AS INTEGER))))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((NOT ((((NULL))<>((CAST(t0.c0 AS INTEGER))))))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((((((NULL))!=((CAST(t0.c0 AS INTEGER))))) ISNULL));
SELECT DISTINCT t0.c0 FROM t0;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 WHERE (((rt0.c0) NOTNULL)) GROUP BY rt0.c1, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (((rt0.c0) NOTNULL)))) GROUP BY rt0.c1, rt0.c2 UNION SELECT rt0.c1, rt0.c2 FROM rt0 WHERE (((((rt0.c0) NOTNULL)) ISNULL)) GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0, t0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0, t0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING GROUP_CONCAT((((rt0.c1))>=((GROUP_CONCAT(rt0.c0))))) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0, t0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING (NOT (GROUP_CONCAT((((rt0.c1))>=((GROUP_CONCAT(rt0.c0))))))) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0, t0 NOT INDEXED GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING ((GROUP_CONCAT((((rt0.c1))>=((GROUP_CONCAT(rt0.c0)))))) ISNULL);
SELECT rt0.c0, rt0.c1 FROM rt0;
SELECT rt0.c0, rt0.c1 FROM rt0 WHERE (rt0.c1) UNION ALL SELECT rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (rt0.c1))) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM rt0 WHERE (((rt0.c1) ISNULL));
SELECT rt0.c0, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (LIKELY((~ (rt0.c1)))) UNION SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (LIKELY((~ (rt0.c1)))))) UNION SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (((LIKELY((~ (rt0.c1)))) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 WHERE (CASE WHEN ((t0.c0) IS TRUE) THEN ((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))OR(t0.c0)))OR(t0.c0)) END) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT (CASE WHEN ((t0.c0) IS TRUE) THEN ((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))OR(t0.c0)))OR(t0.c0)) END))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE (((CASE WHEN ((t0.c0) IS TRUE) THEN ((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))OR(t0.c0)))OR(t0.c0)) END) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING t0.c0 UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (t0.c0)) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((t0.c0) ISNULL);
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING t0.c0 UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (t0.c0)) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((t0.c0) ISNULL);
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE ((((rt0.c1))>=((rt0.c0 COLLATE BINARY)))) UNION ALL SELECT * FROM rt0 WHERE ((NOT ((((rt0.c1))>=((rt0.c0 COLLATE BINARY)))))) UNION ALL SELECT * FROM rt0 WHERE ((((((rt0.c1))>=((rt0.c0 COLLATE BINARY)))) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT * FROM t0 FULL OUTER JOIN rt0 ON 0.8829293618820563;
SELECT DISTINCT * FROM t0 FULL OUTER JOIN rt0 ON 0.8829293618820563 WHERE ((~ (((((rt0.c0)OR(rt0.c2)))AND(rt0.c1))))) UNION SELECT DISTINCT * FROM t0 FULL OUTER JOIN rt0 ON 0.8829293618820563 WHERE ((NOT ((~ (((((rt0.c0)OR(rt0.c2)))AND(rt0.c1))))))) UNION SELECT DISTINCT * FROM t0 FULL OUTER JOIN rt0 ON 0.8829293618820563 WHERE ((((~ (((((rt0.c0)OR(rt0.c2)))AND(rt0.c1))))) ISNULL));
SELECT DISTINCT * FROM t0 FULL OUTER JOIN rt0 ON 0.8829293618820563;
SELECT t0.c0, rt0.c1, rt0.c0, rt0.c2 FROM rt0, t0 GROUP BY t0.c0, rt0.c1, rt0.c0, rt0.c2;
SELECT ALL t0.c0, rt0.c1, rt0.c0, rt0.c2 FROM rt0, t0 WHERE ((~ (rt0.c2))) GROUP BY t0.c0, rt0.c1, rt0.c0, rt0.c2 UNION SELECT t0.c0, rt0.c1, rt0.c0, rt0.c2 FROM rt0, t0 WHERE ((NOT ((~ (rt0.c2))))) GROUP BY t0.c0, rt0.c1, rt0.c0, rt0.c2 UNION SELECT t0.c0, rt0.c1, rt0.c0, rt0.c2 FROM rt0, t0 WHERE ((((~ (rt0.c2))) ISNULL)) GROUP BY t0.c0, rt0.c1, rt0.c0, rt0.c2;
SELECT t0.c0, rt0.c1, rt0.c0, rt0.c2 FROM rt0, t0 GROUP BY t0.c0, rt0.c1, rt0.c0, rt0.c2;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING MAX((t0.c0 IN ())) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (MAX((t0.c0 IN ())))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((MAX((t0.c0 IN ()))) ISNULL);
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING MAX((t0.c0 IN ())) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (MAX((t0.c0 IN ())))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((MAX((t0.c0 IN ()))) ISNULL);
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL SUM(((((t0.c0)-(t0.c0))) IS TRUE)) FROM t0 ORDER BY ((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))IS((t0.c0 IN (t0.c0, '[7')))) DESC  NULLS LAST;
SELECT * FROM t0;
SELECT * FROM t0 WHERE ((- (ABS(DISTINCT t0.c0)))) UNION ALL SELECT * FROM t0 WHERE ((NOT ((- (ABS(DISTINCT t0.c0)))))) UNION ALL SELECT * FROM t0 WHERE ((((- (ABS(DISTINCT t0.c0)))) ISNULL));
SELECT * FROM t0;
SELECT DISTINCT t0.c0 FROM t0 FULL OUTER JOIN rt0 ON ((rt0.c1 IN (rt0.c1, t0.c0)) IN ());
SELECT DISTINCT t0.c0 FROM t0 FULL OUTER JOIN rt0 ON ((rt0.c1 IN (rt0.c1, t0.c0)) IN ()) WHERE ((((((t0.c0) NOT NULL)))=((((t0.c0) BETWEEN (NULL) AND ('e+1C')))))) UNION SELECT DISTINCT t0.c0 FROM t0 FULL OUTER JOIN rt0 ON ((rt0.c1 IN (rt0.c1, t0.c0)) IN ()) WHERE ((NOT ((((((t0.c0) NOT NULL)))==((((t0.c0) BETWEEN (NULL) AND ('e+1C')))))))) UNION SELECT DISTINCT t0.c0 FROM t0 FULL OUTER JOIN rt0 ON ((rt0.c1 IN (rt0.c1, t0.c0)) IN ()) WHERE ((((((((t0.c0) NOT NULL)))==((((t0.c0) BETWEEN (NULL) AND ('e+1C')))))) ISNULL));
SELECT DISTINCT t0.c0 FROM t0 FULL OUTER JOIN rt0 ON ((rt0.c1 IN (rt0.c1, t0.c0)) IN ());
SELECT t0.c0 FROM t0, rt0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0, rt0 WHERE (((((rt0.c0)<<(rt0.c2)))LIKE(LOWER(DISTINCT t0.c0)))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0, rt0 WHERE ((NOT (((((rt0.c0)<<(rt0.c2)))LIKE(LOWER(DISTINCT t0.c0)))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0, rt0 WHERE (((((((rt0.c0)<<(rt0.c2)))LIKE(LOWER(DISTINCT t0.c0)))) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0, rt0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING MAX(SUM(MAX(t0.c0))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (MAX(SUM(MAX(t0.c0))))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((MAX(SUM(MAX(t0.c0)))) ISNULL);
SELECT rt0.c1, rt0.c0 FROM rt0;
SELECT rt0.c1, rt0.c0 FROM rt0 WHERE ((((- (rt0.c1))) ISNULL)) UNION ALL SELECT ALL rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT ((((- (rt0.c1))) ISNULL)))) UNION ALL SELECT ALL rt0.c1, rt0.c0 FROM rt0 WHERE ((((((- (rt0.c1))) ISNULL)) ISNULL));
SELECT rt0.c1, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0 WHERE (rt0.c1) UNION SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (rt0.c1))) UNION SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0 WHERE (((rt0.c1) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0;
SELECT ALL rt0.c0 FROM rt0, t0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0, t0 WHERE (((((rt0.c0)&(0Xffffffffe10894dd)))+((('')-(rt0.c2))))) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM rt0, t0 WHERE ((NOT (((((rt0.c0)&(0xffffffffe10894dd)))+((('')-(rt0.c2))))))) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM rt0, t0 WHERE (((((((rt0.c0)&(0Xffffffffe10894dd)))+((('')-(rt0.c2))))) ISNULL)) GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0, t0 GROUP BY rt0.c0;
SELECT rt0.c1 FROM rt0, t0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0, t0 GROUP BY rt0.c1 HAVING GROUP_CONCAT(GROUP_CONCAT(rt0.c1)) UNION ALL SELECT rt0.c1 FROM rt0, t0 GROUP BY rt0.c1 HAVING (NOT (GROUP_CONCAT(GROUP_CONCAT(rt0.c1)))) UNION ALL SELECT ALL rt0.c1 FROM rt0, t0 GROUP BY rt0.c1 HAVING ((GROUP_CONCAT(GROUP_CONCAT(rt0.c1))) ISNULL);
SELECT ALL * FROM rt0, t0;
SELECT ALL * FROM rt0, t0 WHERE ((rt0.c1 COLLATE BINARY IN ())) UNION ALL SELECT ALL * FROM rt0, t0 WHERE ((NOT ((rt0.c1 COLLATE BINARY IN ())))) UNION ALL SELECT * FROM rt0, t0 WHERE ((((rt0.c1 COLLATE BINARY IN ())) ISNULL));
SELECT ALL * FROM rt0, t0;
SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((+ (rt0.c1))) UNION SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT ((+ (rt0.c1))))) UNION SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((((+ (rt0.c1))) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM rt0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE (((t0.c0 COLLATE NOCASE) NOT BETWEEN (x'a483' COLLATE BINARY) AND (((t0.c0) IS TRUE)))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT (((t0.c0 COLLATE NOCASE) NOT BETWEEN (x'a483' COLLATE BINARY) AND (((t0.c0) IS TRUE)))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE (((((t0.c0 COLLATE NOCASE) NOT BETWEEN (x'a483' COLLATE BINARY) AND (((t0.c0) IS TRUE)))) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0, rt0.c1, rt0.c0, rt0.c2 FROM rt0, t0 GROUP BY t0.c0, rt0.c1, rt0.c0, rt0.c2;
SELECT ALL t0.c0, rt0.c1, rt0.c0, rt0.c2 FROM rt0, t0 GROUP BY t0.c0, rt0.c1, rt0.c0, rt0.c2 HAVING MAX(((rt0.c0)|(rt0.c1))) UNION ALL SELECT ALL t0.c0, rt0.c1, rt0.c0, rt0.c2 FROM rt0, t0 GROUP BY t0.c0, rt0.c1, rt0.c0, rt0.c2 HAVING (NOT (MAX(((rt0.c0)|(rt0.c1))))) UNION ALL SELECT t0.c0, rt0.c1, rt0.c0, rt0.c2 FROM rt0, t0 GROUP BY t0.c0, rt0.c1, rt0.c0, rt0.c2 HAVING ((MAX(((rt0.c0)|(rt0.c1)))) ISNULL);
SELECT ALL t0.c0, rt0.c1, rt0.c0, rt0.c2 FROM rt0, t0 GROUP BY t0.c0, rt0.c1, rt0.c0, rt0.c2;
SELECT ALL t0.c0, rt0.c1, rt0.c0, rt0.c2 FROM rt0, t0 GROUP BY t0.c0, rt0.c1, rt0.c0, rt0.c2 HAVING MAX(((rt0.c0)|(rt0.c1))) UNION ALL SELECT ALL t0.c0, rt0.c1, rt0.c0, rt0.c2 FROM rt0, t0 GROUP BY t0.c0, rt0.c1, rt0.c0, rt0.c2 HAVING (NOT (MAX(((rt0.c0)|(rt0.c1))))) UNION ALL SELECT t0.c0, rt0.c1, rt0.c0, rt0.c2 FROM rt0, t0 GROUP BY t0.c0, rt0.c1, rt0.c0, rt0.c2 HAVING ((MAX(((rt0.c0)|(rt0.c1)))) ISNULL);
SELECT ALL t0.c0, rt0.c1, rt0.c0, rt0.c2 FROM rt0, t0 GROUP BY t0.c0, rt0.c1, rt0.c0, rt0.c2;
SELECT ALL * FROM rt0, t0;
SELECT ALL * FROM rt0, t0 WHERE (CASE WHEN (rt0.c0 IN ()) THEN ABS(DISTINCT rt0.c0) WHEN ((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2)) THEN (rt0.c2 IN (t0.c0)) WHEN NULLIF(rt0.c2, rt0.c2) THEN rt0.c2 END) UNION ALL SELECT ALL * FROM rt0, t0 WHERE ((NOT (CASE WHEN (rt0.c0 IN ()) THEN ABS(DISTINCT rt0.c0) WHEN ((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2)) THEN (rt0.c2 IN (t0.c0)) WHEN NULLIF(rt0.c2, rt0.c2) THEN rt0.c2 END))) UNION ALL SELECT ALL * FROM rt0, t0 WHERE (((CASE WHEN (rt0.c0 IN ()) THEN ABS(DISTINCT rt0.c0) WHEN ((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2)) THEN (rt0.c2 IN (t0.c0)) WHEN NULLIF(rt0.c2, rt0.c2) THEN rt0.c2 END) ISNULL));
SELECT ALL * FROM rt0, t0;
SELECT DISTINCT rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c0 FROM rt0 WHERE (((CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c1 END) BETWEEN (((rt0.c0) ISNULL)) AND (0X1815027d))) UNION SELECT DISTINCT rt0.c0 FROM rt0 WHERE ((NOT (((CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c1 END) BETWEEN (((rt0.c0) ISNULL)) AND (0x1815027d))))) UNION SELECT DISTINCT rt0.c0 FROM rt0 WHERE (((((CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c1 END) BETWEEN (((rt0.c0) ISNULL)) AND (0x1815027d))) ISNULL));
SELECT DISTINCT rt0.c0 FROM rt0;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM t0, rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM t0, rt0 WHERE ((((NULLIF(rt0.c0, rt0.c2), ((t0.c0)==(rt0.c2)), (- (rt0.c1)), CASE WHEN rt0.c0 THEN rt0.c0 END, ((t0.c0)>(rt0.c2))))<(((~ (t0.c0)), t0.c0, ((rt0.c0) NOT BETWEEN (rt0.c1) AND (t0.c0)), ((NULL) ISNULL), rt0.c1 COLLATE RTRIM)))) GROUP BY rt0.c1, rt0.c0, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM t0, rt0 WHERE ((NOT ((((NULLIF(rt0.c0, rt0.c2), ((t0.c0)==(rt0.c2)), (- (rt0.c1)), CASE WHEN rt0.c0 THEN rt0.c0 END, ((t0.c0)>(rt0.c2))))<(((~ (t0.c0)), t0.c0, ((rt0.c0) NOT BETWEEN (rt0.c1) AND (t0.c0)), ((NULL) ISNULL), rt0.c1 COLLATE RTRIM)))))) GROUP BY rt0.c1, rt0.c0, rt0.c2 UNION SELECT rt0.c1, rt0.c0, rt0.c2 FROM t0, rt0 WHERE ((((((NULLIF(rt0.c0, rt0.c2), ((t0.c0)=(rt0.c2)), (- (rt0.c1)), CASE WHEN rt0.c0 THEN rt0.c0 END, ((t0.c0)>(rt0.c2))))<(((~ (t0.c0)), t0.c0, ((rt0.c0) NOT BETWEEN (rt0.c1) AND (t0.c0)), ((NULL) ISNULL), rt0.c1 COLLATE RTRIM)))) ISNULL)) GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM t0, rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING TOTAL(CASE WHEN rt0.c2 THEN MIN(rt0.c1) END) UNION ALL SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING (NOT (TOTAL(CASE WHEN rt0.c2 THEN MIN(rt0.c1) END))) UNION ALL SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING ((TOTAL(CASE WHEN rt0.c2 THEN MIN(rt0.c1) END)) ISNULL);
SELECT ALL * FROM rt0;
SELECT * FROM rt0 WHERE (((((rt0.c0)*(rt0.c1))) NOT BETWEEN (NULLIF(rt0.c1, rt0.c1)) AND (((((rt0.c0)OR(rt0.c0)))OR(rt0.c0))))) UNION ALL SELECT * FROM rt0 WHERE ((NOT (((((rt0.c0)*(rt0.c1))) NOT BETWEEN (NULLIF(rt0.c1, rt0.c1)) AND (((((rt0.c0)OR(rt0.c0)))OR(rt0.c0))))))) UNION ALL SELECT ALL * FROM rt0 WHERE (((((((rt0.c0)*(rt0.c1))) NOT BETWEEN (NULLIF(rt0.c1, rt0.c1)) AND (((((rt0.c0)OR(rt0.c0)))OR(rt0.c0))))) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (((TRIM(t0.c0)) BETWEEN (((((t0.c0)AND(t0.c0)))OR(t0.c0))) AND ((t0.c0 IN (t0.c0))))) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (((TRIM(t0.c0)) BETWEEN (((((t0.c0)AND(t0.c0)))OR(t0.c0))) AND ((t0.c0 IN (t0.c0))))))) UNION SELECT DISTINCT * FROM t0 WHERE (((((TRIM(t0.c0)) BETWEEN (((((t0.c0)AND(t0.c0)))OR(t0.c0))) AND ((t0.c0 IN (t0.c0))))) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 WHERE (CAST(((rt0.c0)/(rt0.c0)) AS BLOB)) GROUP BY rt0.c0, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (CAST(((rt0.c0)/(rt0.c0)) AS BLOB)))) GROUP BY rt0.c0, rt0.c1 UNION SELECT rt0.c0, rt0.c1 FROM rt0 WHERE (((CAST(((rt0.c0)/(rt0.c0)) AS BLOB)) ISNULL)) GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c1, t0.c0 FROM t0, rt0 GROUP BY rt0.c2, rt0.c1, t0.c0;
SELECT rt0.c2, rt0.c1, t0.c0 FROM t0, rt0 GROUP BY rt0.c2, rt0.c1, t0.c0 HAVING ((MAX(t0.c0)) BETWEEN (((MIN(rt0.c0))<(rt0.c1))) AND (TOTAL(AVG('z6k흍	1')))) UNION ALL SELECT ALL rt0.c2, rt0.c1, t0.c0 FROM t0, rt0 GROUP BY rt0.c2, rt0.c1, t0.c0 HAVING (NOT (((MAX(t0.c0)) BETWEEN (((MIN(rt0.c0))<(rt0.c1))) AND (TOTAL(AVG('z6k흍	1')))))) UNION ALL SELECT ALL rt0.c2, rt0.c1, t0.c0 FROM t0, rt0 GROUP BY rt0.c2, rt0.c1, t0.c0 HAVING ((((MAX(t0.c0)) BETWEEN (((MIN(rt0.c0))<(rt0.c1))) AND (TOTAL(AVG('z6k흍	1'))))) ISNULL);
SELECT t0.c0 FROM t0;
SELECT t0.c0 FROM t0 WHERE ((((t0.c0)-(t0.c0)) IN (((t0.c0)>=(0.34715005547115996))))) UNION ALL SELECT t0.c0 FROM t0 WHERE ((NOT ((((t0.c0)-(t0.c0)) IN (((t0.c0)>=(0.34715005547115996))))))) UNION ALL SELECT ALL t0.c0 FROM t0 WHERE ((((((t0.c0)-(t0.c0)) IN (((t0.c0)>=(0.34715005547115996))))) ISNULL));
SELECT t0.c0 FROM t0;
SELECT DISTINCT * FROM t0 FULL OUTER JOIN rt0 ON (((t0.c0 IN ()))||(NULL));
SELECT DISTINCT * FROM t0 FULL OUTER JOIN rt0 ON (((t0.c0 IN ()))||(NULL)) WHERE ((((t0.c0)IS NOT(rt0.c1)) IN ())) UNION SELECT DISTINCT * FROM t0 FULL OUTER JOIN rt0 ON (((t0.c0 IN ()))||(NULL)) WHERE ((NOT ((((t0.c0)IS NOT(rt0.c1)) IN ())))) UNION SELECT DISTINCT * FROM t0 FULL OUTER JOIN rt0 ON (((t0.c0 IN ()))||(NULL)) WHERE ((((((t0.c0)IS NOT(rt0.c1)) IN ())) ISNULL));
SELECT DISTINCT * FROM t0 FULL OUTER JOIN rt0 ON (((t0.c0 IN ()))||(NULL));
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((('') NOT NULL)) GROUP BY rt0.c2, rt0.c1, rt0.c0 UNION SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT ((('') NOT NULL)))) GROUP BY rt0.c2, rt0.c1, rt0.c0 UNION SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((((('') NOT NULL)) ISNULL)) GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT ALL t0.c0, rt0.c1 FROM rt0 NATURAL JOIN t0 GROUP BY t0.c0, rt0.c1;
SELECT t0.c0, rt0.c1 FROM rt0 NATURAL JOIN t0 GROUP BY t0.c0, rt0.c1 HAVING (~ (SUM(TOTAL(t0.c0)))) UNION ALL SELECT t0.c0, rt0.c1 FROM rt0 NATURAL JOIN t0 GROUP BY t0.c0, rt0.c1 HAVING (NOT ((~ (SUM(TOTAL(t0.c0)))))) UNION ALL SELECT ALL t0.c0, rt0.c1 FROM rt0 NATURAL JOIN t0 GROUP BY t0.c0, rt0.c1 HAVING (((~ (SUM(TOTAL(t0.c0))))) ISNULL);
SELECT ALL rt0.c1, rt0.c2 FROM rt0 INNER JOIN t0 ON CASE WHEN ((((t0.c0)AND(rt0.c2)))OR(rt0.c1)) THEN CASE WHEN rt0.c1 THEN rt0.c0 ELSE t0.c0 END ELSE (x'' IN (rt0.c2, rt0.c1)) END;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 INNER JOIN t0 ON CASE WHEN ((((t0.c0)AND(rt0.c2)))OR(rt0.c1)) THEN CASE WHEN rt0.c1 THEN rt0.c0 ELSE t0.c0 END ELSE (x'' IN (rt0.c2, rt0.c1)) END WHERE (((((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((NULL)))))<(((~ (t0.c0)))))) UNION ALL SELECT rt0.c1, rt0.c2 FROM rt0 INNER JOIN t0 ON CASE WHEN ((((t0.c0)AND(rt0.c2)))OR(rt0.c1)) THEN CASE WHEN rt0.c1 THEN rt0.c0 ELSE t0.c0 END ELSE (x'' IN (rt0.c2, rt0.c1)) END WHERE ((NOT (((((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((NULL)))))<(((~ (t0.c0)))))))) UNION ALL SELECT rt0.c1, rt0.c2 FROM rt0 INNER JOIN t0 ON CASE WHEN ((((t0.c0)AND(rt0.c2)))OR(rt0.c1)) THEN CASE WHEN rt0.c1 THEN rt0.c0 ELSE t0.c0 END ELSE (x'' IN (rt0.c2, rt0.c1)) END WHERE (((((((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((NULL)))))<(((~ (t0.c0)))))) ISNULL));
SELECT ALL rt0.c1, rt0.c2 FROM rt0 INNER JOIN t0 ON CASE WHEN ((((t0.c0)AND(rt0.c2)))OR(rt0.c1)) THEN CASE WHEN rt0.c1 THEN rt0.c0 ELSE t0.c0 END ELSE (x'' IN (rt0.c2, rt0.c1)) END;
SELECT DISTINCT * FROM rt0, t0;
SELECT DISTINCT * FROM rt0, t0 WHERE (((((t0.c0)<>(t0.c0)))<<(((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2))))) UNION SELECT DISTINCT * FROM rt0, t0 WHERE ((NOT (((((t0.c0)<>(t0.c0)))<<(((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2))))))) UNION SELECT DISTINCT * FROM rt0, t0 WHERE (((((((t0.c0)<>(t0.c0)))<<(((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2))))) ISNULL));
SELECT DISTINCT * FROM rt0, t0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE (((((t0.c0) NOTNULL)) BETWEEN (t0.c0) AND (((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))OR(t0.c0)))OR(t0.c0))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT (((((t0.c0) NOTNULL)) BETWEEN (t0.c0) AND (((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))OR(t0.c0)))OR(t0.c0))))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE (((((((t0.c0) NOTNULL)) BETWEEN (t0.c0) AND (((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))OR(t0.c0)))OR(t0.c0))))) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0, t0 NOT INDEXED GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0, t0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING GROUP_CONCAT((rt0.c2 IN (rt0.c2))) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0, t0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING (NOT (GROUP_CONCAT((rt0.c2 IN (rt0.c2))))) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0, t0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING ((GROUP_CONCAT((rt0.c2 IN (rt0.c2)))) ISNULL);
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0, t0 NOT INDEXED GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0, t0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING GROUP_CONCAT((rt0.c2 IN (rt0.c2))) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0, t0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING (NOT (GROUP_CONCAT((rt0.c2 IN (rt0.c2))))) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0, t0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING ((GROUP_CONCAT((rt0.c2 IN (rt0.c2)))) ISNULL);
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0, t0 NOT INDEXED GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((((- (rt0.c1))) NOT BETWEEN (((('1379257934', 0.8904858426343709, '1057073449'))!=((rt0.c2, rt0.c2, rt0.c0)))) AND (((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2))))) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT ((((- (rt0.c1))) NOT BETWEEN (((('1379257934', 0.8904858426343709, '1057073449'))<>((rt0.c2, rt0.c2, rt0.c0)))) AND (((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2))))))) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((((((- (rt0.c1))) NOT BETWEEN (((('1379257934', 0.8904858426343709, '1057073449'))<>((rt0.c2, rt0.c2, rt0.c0)))) AND (((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2))))) ISNULL));
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((((x'' IN ())) NOT NULL)) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((((x'' IN ())) NOT NULL)))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((((x'' IN ())) NOT NULL)) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c0, rt0.c2, t0.c0 FROM t0, rt0 GROUP BY rt0.c0, rt0.c2, t0.c0;
SELECT rt0.c0, rt0.c2, t0.c0 FROM t0, rt0 WHERE ((((((rt0.c1))<=((rt0.c2)))) IS FALSE)) GROUP BY rt0.c0, rt0.c2, t0.c0 UNION SELECT ALL rt0.c0, rt0.c2, t0.c0 FROM t0, rt0 WHERE ((NOT ((((((rt0.c1))<=((rt0.c2)))) IS FALSE)))) GROUP BY rt0.c0, rt0.c2, t0.c0 UNION SELECT rt0.c0, rt0.c2, t0.c0 FROM t0, rt0 WHERE ((((((((rt0.c1))<=((rt0.c2)))) IS FALSE)) ISNULL)) GROUP BY rt0.c0, rt0.c2, t0.c0;
SELECT rt0.c0, rt0.c2, t0.c0 FROM t0, rt0 GROUP BY rt0.c0, rt0.c2, t0.c0;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (((COUNT(*))) NOT BETWEEN ((0xffffffff8b5d876c)) AND ((((((rt0.c1)OR(TOTAL(rt0.c0))))OR(TOTAL(rt0.c0)))))) UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT ((((COUNT(*))) NOT BETWEEN ((0xffffffff8b5d876c)) AND ((((((rt0.c1)OR(TOTAL(rt0.c0))))OR(TOTAL(rt0.c0)))))))) UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (((((COUNT(*))) NOT BETWEEN ((0xffffffff8b5d876c)) AND ((((((rt0.c1)OR(TOTAL(rt0.c0))))OR(TOTAL(rt0.c0))))))) ISNULL);
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (((COUNT(*))) NOT BETWEEN ((0xffffffff8b5d876c)) AND ((((((rt0.c1)OR(TOTAL(rt0.c0))))OR(TOTAL(rt0.c0)))))) UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT ((((COUNT(*))) NOT BETWEEN ((0xffffffff8b5d876c)) AND ((((((rt0.c1)OR(TOTAL(rt0.c0))))OR(TOTAL(rt0.c0)))))))) UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (((((COUNT(*))) NOT BETWEEN ((0xffffffff8b5d876c)) AND ((((((rt0.c1)OR(TOTAL(rt0.c0))))OR(TOTAL(rt0.c0))))))) ISNULL);
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT * FROM rt0 NATURAL JOIN t0;
SELECT * FROM rt0 NATURAL JOIN t0 WHERE (CASE WHEN ((rt0.c0)-(rt0.c2)) THEN ((rt0.c2)AND(-1103022602)) ELSE TYPEOF(DISTINCT rt0.c1) END) UNION ALL SELECT * FROM rt0 NATURAL JOIN t0 WHERE ((NOT (CASE WHEN ((rt0.c0)-(rt0.c2)) THEN ((rt0.c2)AND(-1103022602)) ELSE TYPEOF(DISTINCT rt0.c1) END))) UNION ALL SELECT * FROM rt0 NATURAL JOIN t0 WHERE (((CASE WHEN ((rt0.c0)-(rt0.c2)) THEN ((rt0.c2)AND(-1103022602)) ELSE TYPEOF(DISTINCT rt0.c1) END) ISNULL));
SELECT * FROM rt0 NATURAL JOIN t0;
SELECT DISTINCT * FROM t0, rt0;
SELECT DISTINCT * FROM t0, rt0 WHERE (CASE CAST(rt0.c2 AS INTEGER)  WHEN (((rt0.c1, rt0.c0, rt0.c2))<((rt0.c2, t0.c0, rt0.c1))) THEN (((rt0.c0))>=((rt0.c1))) END) UNION SELECT DISTINCT * FROM t0, rt0 WHERE ((NOT (CASE CAST(rt0.c2 AS INTEGER)  WHEN (((rt0.c1, rt0.c0, rt0.c2))<((rt0.c2, t0.c0, rt0.c1))) THEN (((rt0.c0))>=((rt0.c1))) END))) UNION SELECT DISTINCT * FROM t0, rt0 WHERE (((CASE CAST(rt0.c2 AS INTEGER)  WHEN (((rt0.c1, rt0.c0, rt0.c2))<((rt0.c2, t0.c0, rt0.c1))) THEN (((rt0.c0))>=((rt0.c1))) END) ISNULL));
SELECT DISTINCT * FROM t0, rt0;
SELECT rt0.c0, rt0.c2 FROM t0, rt0 GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c2 FROM t0 NOT INDEXED, rt0 WHERE ((((((-734763683 IN ()))AND(NULL)))AND(rt0.c0))) GROUP BY rt0.c0, rt0.c2 UNION SELECT rt0.c0, rt0.c2 FROM t0, rt0 WHERE ((NOT ((((((-734763683 IN ()))AND(NULL)))AND(rt0.c0))))) GROUP BY rt0.c0, rt0.c2 UNION SELECT rt0.c0, rt0.c2 FROM t0, rt0 WHERE ((((((((-734763683 IN ()))AND(NULL)))AND(rt0.c0))) ISNULL)) GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c2 FROM t0, rt0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0 FROM t0, rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM t0, rt0 GROUP BY rt0.c0 HAVING MAX(GROUP_CONCAT(COUNT(*))) UNION ALL SELECT ALL rt0.c0 FROM t0, rt0 GROUP BY rt0.c0 HAVING (NOT (MAX(GROUP_CONCAT(COUNT(*))))) UNION ALL SELECT rt0.c0 FROM t0, rt0 GROUP BY rt0.c0 HAVING ((MAX(GROUP_CONCAT(COUNT(*)))) ISNULL);
SELECT ALL SUM(-1.994606844E9) FROM t0 ORDER BY (((0.6741930584937953)) NOT BETWEEN ((HEX(DISTINCT ''))) AND ((t0.c0)));
SELECT * FROM t0, rt0;
SELECT ALL * FROM t0, rt0 WHERE (CAST((rt0.c0 IN ()) AS INTEGER)) UNION ALL SELECT ALL * FROM t0, rt0 WHERE ((NOT (CAST((rt0.c0 IN ()) AS INTEGER)))) UNION ALL SELECT ALL * FROM t0, rt0 WHERE (((CAST((rt0.c0 IN ()) AS INTEGER)) ISNULL));
SELECT * FROM t0, rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((((((((((rt0.c2)LIKE(rt0.c1)))AND(CASE rt0.c2  WHEN rt0.c0 THEN rt0.c1 WHEN 0xffffffffc5bd010a THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 END)))OR(((rt0.c1)<(rt0.c1)))))OR(((rt0.c0) BETWEEN ('-122725052') AND (rt0.c2)))))AND(MIN(rt0.c1, rt0.c1, rt0.c1, rt0.c1)))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((((((((((rt0.c2)LIKE(rt0.c1)))AND(CASE rt0.c2  WHEN rt0.c0 THEN rt0.c1 WHEN 0xffffffffc5bd010a THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 END)))OR(((rt0.c1)<(rt0.c1)))))OR(((rt0.c0) BETWEEN ('-122725052') AND (rt0.c2)))))AND(MIN(rt0.c1, rt0.c1, rt0.c1, rt0.c1)))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((((((((((rt0.c2)LIKE(rt0.c1)))AND(CASE rt0.c2  WHEN rt0.c0 THEN rt0.c1 WHEN 0xffffffffc5bd010a THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 END)))OR(((rt0.c1)<(rt0.c1)))))OR(((rt0.c0) BETWEEN ('-122725052') AND (rt0.c2)))))AND(MIN(rt0.c1, rt0.c1, rt0.c1, rt0.c1)))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c1, t0.c0 FROM t0 CROSS JOIN rt0 ON (- (t0.c0)) COLLATE NOCASE GROUP BY rt0.c1, t0.c0;
SELECT rt0.c1, t0.c0 FROM t0 CROSS JOIN rt0 ON (- (t0.c0)) COLLATE NOCASE WHERE (((((PRINTF(rt0.c2))AND(((t0.c0)IS NOT(rt0.c1)))))OR(((t0.c0)<(t0.c0))))) GROUP BY rt0.c1, t0.c0 UNION SELECT ALL rt0.c1, t0.c0 FROM t0 CROSS JOIN rt0 ON (- (t0.c0)) COLLATE NOCASE WHERE ((NOT (((((PRINTF(rt0.c2))AND(((t0.c0)IS NOT(rt0.c1)))))OR(((t0.c0)<(t0.c0))))))) GROUP BY rt0.c1, t0.c0 UNION SELECT ALL rt0.c1, t0.c0 FROM t0 CROSS JOIN rt0 ON (- (t0.c0)) COLLATE NOCASE WHERE (((((((PRINTF(rt0.c2))AND(((t0.c0)IS NOT(rt0.c1)))))OR(((t0.c0)<(t0.c0))))) ISNULL)) GROUP BY rt0.c1, t0.c0;
SELECT ALL rt0.c1, t0.c0 FROM t0 CROSS JOIN rt0 ON (- (t0.c0)) COLLATE NOCASE GROUP BY rt0.c1, t0.c0;
SELECT rt0.c2, rt0.c1 FROM t0, rt0 GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c2, rt0.c1 FROM t0, rt0 GROUP BY rt0.c2, rt0.c1 HAVING MIN(COUNT(*)) UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM t0, rt0 GROUP BY rt0.c2, rt0.c1 HAVING (NOT (MIN(COUNT(*)))) UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM t0, rt0 GROUP BY rt0.c2, rt0.c1 HAVING ((MIN(COUNT(*))) ISNULL);
SELECT * FROM t0;
SELECT ALL * FROM t0 WHERE ((((NOT (t0.c0))) NOT NULL)) UNION ALL SELECT * FROM t0 WHERE ((NOT ((((NOT (t0.c0))) NOT NULL)))) UNION ALL SELECT ALL * FROM t0 WHERE ((((((NOT (t0.c0))) NOT NULL)) ISNULL));
SELECT * FROM t0;
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (NULL) UNION SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (NULL))) UNION SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (((NULL) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0;
SELECT rt0.c2, t0.c0 FROM t0 INNER JOIN rt0 ON ((CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c0 END) NOT BETWEEN (((rt0.c0) IS TRUE)) AND (CASE rt0.c1  WHEN t0.c0 THEN NULL WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 END)) GROUP BY rt0.c2, t0.c0;
SELECT ALL rt0.c2, t0.c0 FROM t0 INNER JOIN rt0 ON ((CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c0 END) NOT BETWEEN (((rt0.c0) IS TRUE)) AND (CASE rt0.c1  WHEN t0.c0 THEN NULL WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 END)) WHERE (rt0.c2) GROUP BY rt0.c2, t0.c0 UNION SELECT ALL rt0.c2, t0.c0 FROM t0 INNER JOIN rt0 ON ((CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c0 END) NOT BETWEEN (((rt0.c0) IS TRUE)) AND (CASE rt0.c1  WHEN t0.c0 THEN NULL WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 END)) WHERE ((NOT (rt0.c2))) GROUP BY rt0.c2, t0.c0 UNION SELECT rt0.c2, t0.c0 FROM t0 INNER JOIN rt0 ON ((CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c0 END) NOT BETWEEN (((rt0.c0) IS TRUE)) AND (CASE rt0.c1  WHEN t0.c0 THEN NULL WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 END)) WHERE (((rt0.c2) ISNULL)) GROUP BY rt0.c2, t0.c0;
SELECT rt0.c2, t0.c0 FROM t0 INNER JOIN rt0 ON ((CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c0 END) NOT BETWEEN (((rt0.c0) IS TRUE)) AND (CASE rt0.c1  WHEN t0.c0 THEN NULL WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 END)) GROUP BY rt0.c2, t0.c0;
SELECT ALL rt0.c0, t0.c0 FROM t0, rt0 GROUP BY rt0.c0, t0.c0;
SELECT rt0.c0, t0.c0 FROM t0, rt0 GROUP BY rt0.c0, t0.c0 HAVING COUNT(TOTAL(TOTAL(rt0.c0))) UNION ALL SELECT rt0.c0, t0.c0 FROM t0, rt0 GROUP BY rt0.c0, t0.c0 HAVING (NOT (COUNT(TOTAL(TOTAL(rt0.c0))))) UNION ALL SELECT ALL rt0.c0, t0.c0 FROM t0, rt0 GROUP BY rt0.c0, t0.c0 HAVING ((COUNT(TOTAL(TOTAL(rt0.c0)))) ISNULL);
SELECT ALL t0.c0, rt0.c0, rt0.c1, rt0.c2 FROM t0, rt0;
SELECT t0.c0, rt0.c0, rt0.c1, rt0.c2 FROM t0, rt0 WHERE (CAST(rt0.c0 COLLATE RTRIM AS INTEGER)) UNION ALL SELECT ALL t0.c0, rt0.c0, rt0.c1, rt0.c2 FROM t0, rt0 WHERE ((NOT (CAST(rt0.c0 COLLATE RTRIM AS INTEGER)))) UNION ALL SELECT t0.c0, rt0.c0, rt0.c1, rt0.c2 FROM t0, rt0 WHERE (((CAST(rt0.c0 COLLATE RTRIM AS INTEGER)) ISNULL));
SELECT ALL t0.c0, rt0.c0, rt0.c1, rt0.c2 FROM t0, rt0;
SELECT DISTINCT t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0 WHERE (((((IFNULL(t0.c0, t0.c0))OR(((x'5647') BETWEEN (NULL) AND (t0.c0)))))OR(((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))AND(t0.c0))))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((NOT (((((IFNULL(t0.c0, t0.c0))OR(((x'5647') BETWEEN (NULL) AND (t0.c0)))))OR(((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))AND(t0.c0))))))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE (((((((IFNULL(t0.c0, t0.c0))OR(((x'5647') BETWEEN (NULL) AND (t0.c0)))))OR(((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))AND(t0.c0))))) ISNULL));
SELECT DISTINCT t0.c0 FROM t0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE (((((t0.c0)<>(t0.c0)))>=(NULL))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT (((((t0.c0)<>(t0.c0)))>=(NULL))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE (((((((t0.c0)!=(t0.c0)))>=(NULL))) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT rt0.c2 FROM t0, rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM t0, rt0 GROUP BY rt0.c2 HAVING SUM(t0.c0) UNION ALL SELECT ALL rt0.c2 FROM t0, rt0 GROUP BY rt0.c2 HAVING (NOT (SUM(t0.c0))) UNION ALL SELECT rt0.c2 FROM t0, rt0 GROUP BY rt0.c2 HAVING ((SUM(t0.c0)) ISNULL);
SELECT rt0.c2 FROM t0, rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM t0, rt0 GROUP BY rt0.c2 HAVING SUM(t0.c0) UNION ALL SELECT ALL rt0.c2 FROM t0, rt0 GROUP BY rt0.c2 HAVING (NOT (SUM(t0.c0))) UNION ALL SELECT rt0.c2 FROM t0, rt0 GROUP BY rt0.c2 HAVING ((SUM(t0.c0)) ISNULL);
SELECT rt0.c2 FROM t0, rt0 GROUP BY rt0.c2;
SELECT rt0.c0, rt0.c2 FROM rt0;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 WHERE (((rt0.c1) IS FALSE)) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (((rt0.c1) IS FALSE)))) UNION ALL SELECT rt0.c0, rt0.c2 FROM rt0 WHERE (((((rt0.c1) IS FALSE)) ISNULL));
SELECT rt0.c0, rt0.c2 FROM rt0;
SELECT DISTINCT * FROM t0, rt0;
SELECT DISTINCT * FROM t0, rt0 WHERE ((((((rt0.c0, 0.9400415873256143, rt0.c1))<=(('447144945', 1218348102, rt0.c2))))==((- (t0.c0))))) UNION SELECT DISTINCT * FROM t0, rt0 WHERE ((NOT ((((((rt0.c0, 0.9400415873256143, rt0.c1))<=(('447144945', 1218348102, rt0.c2))))=((- (t0.c0))))))) UNION SELECT DISTINCT * FROM t0, rt0 WHERE ((((((((rt0.c0, 0.9400415873256143, rt0.c1))<=(('447144945', 1218348102, rt0.c2))))=((- (t0.c0))))) ISNULL));
SELECT DISTINCT * FROM t0, rt0;
SELECT t0.c0, rt0.c2 FROM rt0, t0 GROUP BY t0.c0, rt0.c2;
SELECT t0.c0, rt0.c2 FROM rt0, t0 WHERE (CASE ((0.7291997446569178)*(rt0.c0))  WHEN (((NULL))<=((t0.c0))) THEN ((rt0.c2) IS TRUE) WHEN (rt0.c1 IN (t0.c0, rt0.c0)) THEN (((rt0.c1, t0.c0, rt0.c1)) BETWEEN ((rt0.c2, NULL, t0.c0)) AND ((rt0.c1, rt0.c2, rt0.c2))) WHEN (((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))) THEN CASE WHEN rt0.c1 THEN rt0.c0 END END) GROUP BY t0.c0, rt0.c2 UNION SELECT t0.c0, rt0.c2 FROM rt0, t0 WHERE ((NOT (CASE ((0.7291997446569178)*(rt0.c0))  WHEN (((NULL))<=((t0.c0))) THEN ((rt0.c2) IS TRUE) WHEN (rt0.c1 IN (t0.c0, rt0.c0)) THEN (((rt0.c1, t0.c0, rt0.c1)) BETWEEN ((rt0.c2, NULL, t0.c0)) AND ((rt0.c1, rt0.c2, rt0.c2))) WHEN (((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))) THEN CASE WHEN rt0.c1 THEN rt0.c0 END END))) GROUP BY t0.c0, rt0.c2 UNION SELECT ALL t0.c0, rt0.c2 FROM rt0, t0 WHERE (((CASE ((0.7291997446569178)*(rt0.c0))  WHEN (((NULL))<=((t0.c0))) THEN ((rt0.c2) IS TRUE) WHEN (rt0.c1 IN (t0.c0, rt0.c0)) THEN (((rt0.c1, t0.c0, rt0.c1)) BETWEEN ((rt0.c2, NULL, t0.c0)) AND ((rt0.c1, rt0.c2, rt0.c2))) WHEN (((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))) THEN CASE WHEN rt0.c1 THEN rt0.c0 END END) ISNULL)) GROUP BY t0.c0, rt0.c2;
SELECT t0.c0, rt0.c2 FROM rt0, t0 GROUP BY t0.c0, rt0.c2;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (~ ((MIN(t0.c0) IN ()))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT ((~ ((MIN(t0.c0) IN ()))))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (((~ ((MIN(t0.c0) IN ())))) ISNULL);
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (~ ((MIN(t0.c0) IN ()))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT ((~ ((MIN(t0.c0) IN ()))))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (((~ ((MIN(t0.c0) IN ())))) ISNULL);
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE (((('꘹cfᨏO' IN ()))OR(rt0.c2))) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (((('꘹cfᨏO' IN ()))OR(rt0.c2))))) UNION ALL SELECT * FROM rt0 WHERE (((((('꘹cfᨏO' IN ()))OR(rt0.c2))) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (UPPER(((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1)))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (UPPER(((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1)))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((UPPER(((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1)))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM t0 INNER JOIN rt0 ON ((((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c0)))))<((((rt0.c0) BETWEEN (t0.c0) AND (rt0.c2))))) GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM t0 INNER JOIN rt0 ON ((((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c0)))))<((((rt0.c0) BETWEEN (t0.c0) AND (rt0.c2))))) WHERE (((((t0.c0) IS TRUE)) BETWEEN (CAST(t0.c0 AS BLOB)) AND (rt0.c0 COLLATE NOCASE))) GROUP BY rt0.c0, rt0.c1, rt0.c2 UNION SELECT rt0.c0, rt0.c1, rt0.c2 FROM t0 INNER JOIN rt0 ON ((((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c0)))))<((((rt0.c0) BETWEEN (t0.c0) AND (rt0.c2))))) WHERE ((NOT (((((t0.c0) IS TRUE)) BETWEEN (CAST(t0.c0 AS BLOB)) AND (rt0.c0 COLLATE NOCASE))))) GROUP BY rt0.c0, rt0.c1, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM t0 INNER JOIN rt0 ON ((((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c0)))))<((((rt0.c0) BETWEEN (t0.c0) AND (rt0.c2))))) WHERE (((((((t0.c0) IS TRUE)) BETWEEN (CAST(t0.c0 AS BLOB)) AND (rt0.c0 COLLATE NOCASE))) ISNULL)) GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM t0 INNER JOIN rt0 ON ((((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c0)))))<((((rt0.c0) BETWEEN (t0.c0) AND (rt0.c2))))) GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c2, rt0.c0, t0.c0 FROM rt0 FULL OUTER JOIN t0 ON ((t0.c0 COLLATE BINARY) NOT BETWEEN (CAST(t0.c0 AS NUMERIC)) AND ((((rt0.c1)) BETWEEN ((0.5281647029160523)) AND ((rt0.c2))))) GROUP BY rt0.c2, rt0.c0, t0.c0;
SELECT ALL rt0.c2, rt0.c0, t0.c0 FROM rt0 FULL OUTER JOIN t0 ON ((t0.c0 COLLATE BINARY) NOT BETWEEN (CAST(t0.c0 AS NUMERIC)) AND ((((rt0.c1)) BETWEEN ((0.5281647029160523)) AND ((rt0.c2))))) GROUP BY rt0.c2, rt0.c0, t0.c0 HAVING COUNT('32033137') UNION ALL SELECT rt0.c2, rt0.c0, t0.c0 FROM rt0 FULL OUTER JOIN t0 ON ((t0.c0 COLLATE BINARY) NOT BETWEEN (CAST(t0.c0 AS NUMERIC)) AND ((((rt0.c1)) BETWEEN ((0.5281647029160523)) AND ((rt0.c2))))) GROUP BY rt0.c2, rt0.c0, t0.c0 HAVING (NOT (COUNT('32033137'))) UNION ALL SELECT rt0.c2, rt0.c0, t0.c0 FROM rt0 FULL OUTER JOIN t0 ON ((t0.c0 COLLATE BINARY) NOT BETWEEN (CAST(t0.c0 AS NUMERIC)) AND ((((rt0.c1)) BETWEEN ((0.5281647029160523)) AND ((rt0.c2))))) GROUP BY rt0.c2, rt0.c0, t0.c0 HAVING ((COUNT('32033137')) ISNULL);
SELECT rt0.c2, rt0.c0, t0.c0 FROM rt0 FULL OUTER JOIN t0 ON ((t0.c0 COLLATE BINARY) NOT BETWEEN (CAST(t0.c0 AS NUMERIC)) AND ((((rt0.c1)) BETWEEN ((0.5281647029160523)) AND ((rt0.c2))))) GROUP BY rt0.c2, rt0.c0, t0.c0;
SELECT ALL rt0.c2, rt0.c0, t0.c0 FROM rt0 FULL OUTER JOIN t0 ON ((t0.c0 COLLATE BINARY) NOT BETWEEN (CAST(t0.c0 AS NUMERIC)) AND ((((rt0.c1)) BETWEEN ((0.5281647029160523)) AND ((rt0.c2))))) GROUP BY rt0.c2, rt0.c0, t0.c0 HAVING COUNT('32033137') UNION ALL SELECT rt0.c2, rt0.c0, t0.c0 FROM rt0 FULL OUTER JOIN t0 ON ((t0.c0 COLLATE BINARY) NOT BETWEEN (CAST(t0.c0 AS NUMERIC)) AND ((((rt0.c1)) BETWEEN ((0.5281647029160523)) AND ((rt0.c2))))) GROUP BY rt0.c2, rt0.c0, t0.c0 HAVING (NOT (COUNT('32033137'))) UNION ALL SELECT rt0.c2, rt0.c0, t0.c0 FROM rt0 FULL OUTER JOIN t0 ON ((t0.c0 COLLATE BINARY) NOT BETWEEN (CAST(t0.c0 AS NUMERIC)) AND ((((rt0.c1)) BETWEEN ((0.5281647029160523)) AND ((rt0.c2))))) GROUP BY rt0.c2, rt0.c0, t0.c0 HAVING ((COUNT('32033137')) ISNULL);
SELECT rt0.c2, rt0.c0, t0.c0 FROM rt0 FULL OUTER JOIN t0 ON ((t0.c0 COLLATE BINARY) NOT BETWEEN (CAST(t0.c0 AS NUMERIC)) AND ((((rt0.c1)) BETWEEN ((0.5281647029160523)) AND ((rt0.c2))))) GROUP BY rt0.c2, rt0.c0, t0.c0;
SELECT t0.c0 FROM t0;
SELECT ALL t0.c0 FROM t0 WHERE ((((((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))))AND(CASE WHEN t0.c0 THEN t0.c0 END)))OR(0.0449043311563162))) UNION ALL SELECT t0.c0 FROM t0 WHERE ((NOT ((((((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))))AND(CASE WHEN t0.c0 THEN t0.c0 END)))OR(0.0449043311563162))))) UNION ALL SELECT ALL t0.c0 FROM t0 WHERE ((((((((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))))AND(CASE WHEN t0.c0 THEN t0.c0 END)))OR(0.0449043311563162))) ISNULL));
SELECT t0.c0 FROM t0;
SELECT DISTINCT rt0.c1 FROM rt0 LEFT OUTER JOIN t0 ON CASE WHEN ((t0.c0) BETWEEN (rt0.c2) AND (rt0.c0)) THEN (((t0.c0))>=((rt0.c1))) END;
SELECT DISTINCT rt0.c1 FROM rt0 LEFT OUTER JOIN t0 ON CASE WHEN ((t0.c0) BETWEEN (rt0.c2) AND (rt0.c0)) THEN (((t0.c0))>=((rt0.c1))) END WHERE ((- (((t0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2))))) UNION SELECT DISTINCT rt0.c1 FROM rt0 LEFT OUTER JOIN t0 ON CASE WHEN ((t0.c0) BETWEEN (rt0.c2) AND (rt0.c0)) THEN (((t0.c0))>=((rt0.c1))) END WHERE ((NOT ((- (((t0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2))))))) UNION SELECT DISTINCT rt0.c1 FROM rt0 LEFT OUTER JOIN t0 ON CASE WHEN ((t0.c0) BETWEEN (rt0.c2) AND (rt0.c0)) THEN (((t0.c0))>=((rt0.c1))) END WHERE ((((- (((t0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2))))) ISNULL));
SELECT DISTINCT rt0.c1 FROM rt0 LEFT OUTER JOIN t0 ON CASE WHEN ((t0.c0) BETWEEN (rt0.c2) AND (rt0.c0)) THEN (((t0.c0))>=((rt0.c1))) END;
SELECT rt0.c1, t0.c0, rt0.c2, rt0.c0 FROM t0, rt0 GROUP BY rt0.c1, t0.c0, rt0.c2, rt0.c0;
SELECT ALL rt0.c1, t0.c0, rt0.c2, rt0.c0 FROM t0, rt0 WHERE (rt0.c1) GROUP BY rt0.c1, t0.c0, rt0.c2, rt0.c0 UNION SELECT ALL rt0.c1, t0.c0, rt0.c2, rt0.c0 FROM t0, rt0 WHERE ((NOT (rt0.c1))) GROUP BY rt0.c1, t0.c0, rt0.c2, rt0.c0 UNION SELECT ALL rt0.c1, t0.c0, rt0.c2, rt0.c0 FROM t0, rt0 WHERE (((rt0.c1) ISNULL)) GROUP BY rt0.c1, t0.c0, rt0.c2, rt0.c0;
SELECT rt0.c1, t0.c0, rt0.c2, rt0.c0 FROM t0, rt0 GROUP BY rt0.c1, t0.c0, rt0.c2, rt0.c0;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING ((MIN(x'')) NOT BETWEEN (((rt0.c1)-(MAX(rt0.c0)))) AND (TOTAL(rt0.c2))) UNION ALL SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING (NOT (((MIN(x'')) NOT BETWEEN (((rt0.c1)-(MAX(rt0.c0)))) AND (TOTAL(rt0.c2))))) UNION ALL SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING ((((MIN(x'')) NOT BETWEEN (((rt0.c1)-(MAX(rt0.c0)))) AND (TOTAL(rt0.c2)))) ISNULL);
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING ((MIN(x'')) NOT BETWEEN (((rt0.c1)-(MAX(rt0.c0)))) AND (TOTAL(rt0.c2))) UNION ALL SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING (NOT (((MIN(x'')) NOT BETWEEN (((rt0.c1)-(MAX(rt0.c0)))) AND (TOTAL(rt0.c2))))) UNION ALL SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING ((((MIN(x'')) NOT BETWEEN (((rt0.c1)-(MAX(rt0.c0)))) AND (TOTAL(rt0.c2)))) ISNULL);
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE (rt0.c1) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (rt0.c1))) UNION ALL SELECT ALL * FROM rt0 WHERE (((rt0.c1) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT * FROM rt0 NOT INDEXED, t0;
SELECT DISTINCT * FROM rt0, t0 WHERE ((((rt0.c0, rt0.c0, rt0.c1)) BETWEEN ((((NULL)<(rt0.c0)), (rt0.c1 IN ()), (rt0.c2 IN ()))) AND (((- (rt0.c2)), CAST(rt0.c1 AS TEXT), (((t0.c0)) NOT BETWEEN ((rt0.c1)) AND ((t0.c0))))))) UNION SELECT DISTINCT * FROM rt0, t0 WHERE ((NOT ((((rt0.c0, rt0.c0, rt0.c1)) BETWEEN ((((NULL)<(rt0.c0)), (rt0.c1 IN ()), (rt0.c2 IN ()))) AND (((- (rt0.c2)), CAST(rt0.c1 AS TEXT), (((t0.c0)) NOT BETWEEN ((rt0.c1)) AND ((t0.c0))))))))) UNION SELECT DISTINCT * FROM rt0, t0 WHERE ((((((rt0.c0, rt0.c0, rt0.c1)) BETWEEN ((((NULL)<(rt0.c0)), (rt0.c1 IN ()), (rt0.c2 IN ()))) AND (((- (rt0.c2)), CAST(rt0.c1 AS TEXT), (((t0.c0)) NOT BETWEEN ((rt0.c1)) AND ((t0.c0))))))) ISNULL));
SELECT DISTINCT * FROM rt0 NOT INDEXED, t0;
SELECT ALL rt0.c1 FROM t0, rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM t0, rt0 WHERE (((((((x'') BETWEEN (rt0.c1) AND (rt0.c2)))AND(CAST(t0.c0 AS INTEGER))))AND((NOT (rt0.c2))))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM t0, rt0 WHERE ((NOT (((((((x'') BETWEEN (rt0.c1) AND (rt0.c2)))AND(CAST(t0.c0 AS INTEGER))))AND((NOT (rt0.c2))))))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM t0, rt0 WHERE (((((((((x'') BETWEEN (rt0.c1) AND (rt0.c2)))AND(CAST(t0.c0 AS INTEGER))))AND((NOT (rt0.c2))))) ISNULL)) GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM t0, rt0 GROUP BY rt0.c1;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (((AVG(0.9262057991196465) IN ()))=(TOTAL(rt0.c2))) UNION ALL SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT ((((AVG(0.9262057991196465) IN ()))=(TOTAL(rt0.c2))))) UNION ALL SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (((((AVG(0.9262057991196465) IN ()))=(TOTAL(rt0.c2)))) ISNULL);
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (((AVG(0.9262057991196465) IN ()))=(TOTAL(rt0.c2))) UNION ALL SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT ((((AVG(0.9262057991196465) IN ()))=(TOTAL(rt0.c2))))) UNION ALL SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (((((AVG(0.9262057991196465) IN ()))=(TOTAL(rt0.c2)))) ISNULL);
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((((rt0.c1 IN ())) NOT NULL)) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT ((((rt0.c1 IN ())) NOT NULL)))) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((((((rt0.c1 IN ())) NOT NULL)) ISNULL));
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE ((((t0.c0)) BETWEEN (('흍릦' COLLATE RTRIM)) AND ((UNLIKELY(t0.c0))))) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT ((((t0.c0)) BETWEEN (('흍릦' COLLATE RTRIM)) AND ((UNLIKELY(t0.c0))))))) UNION SELECT DISTINCT * FROM t0 WHERE ((((((t0.c0)) BETWEEN (('흍릦' COLLATE RTRIM)) AND ((UNLIKELY(t0.c0))))) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT rt0.c0, t0.c0, rt0.c1 FROM t0, rt0 GROUP BY rt0.c0, t0.c0, rt0.c1;
SELECT ALL rt0.c0, t0.c0, rt0.c1 FROM t0, rt0 WHERE (TIME((- (t0.c0)), ((((((((0.5466582083581447)AND(t0.c0)))AND(rt0.c0)))OR(rt0.c2)))AND(t0.c0)), CASE rt0.c1  WHEN rt0.c0 THEN -1.489404225E9 WHEN rt0.c0 THEN rt0.c1 WHEN t0.c0 THEN rt0.c0 ELSE rt0.c0 END, (+ (rt0.c2)), ((((((((rt0.c1)AND(0.9740895411020308)))OR(rt0.c2)))AND(t0.c0)))OR('qf')), ((rt0.c2)<>(rt0.c1)), ((((t0.c0)OR(rt0.c0)))OR(rt0.c1)))) GROUP BY rt0.c0, t0.c0, rt0.c1 UNION SELECT rt0.c0, t0.c0, rt0.c1 FROM t0, rt0 WHERE ((NOT (TIME((- (t0.c0)), ((((((((0.5466582083581447)AND(t0.c0)))AND(rt0.c0)))OR(rt0.c2)))AND(t0.c0)), CASE rt0.c1  WHEN rt0.c0 THEN -1.489404225E9 WHEN rt0.c0 THEN rt0.c1 WHEN t0.c0 THEN rt0.c0 ELSE rt0.c0 END, (+ (rt0.c2)), ((((((((rt0.c1)AND(0.9740895411020308)))OR(rt0.c2)))AND(t0.c0)))OR('qf')), ((rt0.c2)!=(rt0.c1)), ((((t0.c0)OR(rt0.c0)))OR(rt0.c1)))))) GROUP BY rt0.c0, t0.c0, rt0.c1 UNION SELECT rt0.c0, t0.c0, rt0.c1 FROM t0, rt0 WHERE (((TIME((- (t0.c0)), ((((((((0.5466582083581447)AND(t0.c0)))AND(rt0.c0)))OR(rt0.c2)))AND(t0.c0)), CASE rt0.c1  WHEN rt0.c0 THEN -1.489404225E9 WHEN rt0.c0 THEN rt0.c1 WHEN t0.c0 THEN rt0.c0 ELSE rt0.c0 END, (+ (rt0.c2)), ((((((((rt0.c1)AND(0.9740895411020308)))OR(rt0.c2)))AND(t0.c0)))OR('qf')), ((rt0.c2)!=(rt0.c1)), ((((t0.c0)OR(rt0.c0)))OR(rt0.c1)))) ISNULL)) GROUP BY rt0.c0, t0.c0, rt0.c1;
SELECT rt0.c0, t0.c0, rt0.c1 FROM t0, rt0 GROUP BY rt0.c0, t0.c0, rt0.c1;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING (((MAX(rt0.c0), rt0.c1, MAX(TOTAL(rt0.c2)))) BETWEEN (((rt0.c0 IN (rt0.c2)), (((TOTAL(COUNT('125056111')))) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))), ((((x'')OR(COUNT(rt0.c2))))AND(rt0.c1)))) AND ((CAST(rt0.c0 AS REAL), COUNT(AVG(rt0.c1)), TOTAL(MIN(rt0.c2))))) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING (NOT ((((MAX(rt0.c0), rt0.c1, MAX(TOTAL(rt0.c2)))) BETWEEN (((rt0.c0 IN (rt0.c2)), (((TOTAL(COUNT('125056111')))) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))), ((((x'')OR(COUNT(rt0.c2))))AND(rt0.c1)))) AND ((CAST(rt0.c0 AS REAL), COUNT(AVG(rt0.c1)), TOTAL(MIN(rt0.c2))))))) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING (((((MAX(rt0.c0), rt0.c1, MAX(TOTAL(rt0.c2)))) BETWEEN (((rt0.c0 IN (rt0.c2)), (((TOTAL(COUNT('125056111')))) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))), ((((x'')OR(COUNT(rt0.c2))))AND(rt0.c1)))) AND ((CAST(rt0.c0 AS REAL), COUNT(AVG(rt0.c1)), TOTAL(MIN(rt0.c2)))))) ISNULL);
SELECT * FROM rt0, t0;
SELECT * FROM rt0, t0 WHERE (((((((rt0.c0)-(rt0.c2)))AND(CASE t0.c0  WHEN x'' THEN rt0.c2 ELSE rt0.c0 END)))OR('9'))) UNION ALL SELECT ALL * FROM rt0, t0 WHERE ((NOT (((((((rt0.c0)-(rt0.c2)))AND(CASE t0.c0  WHEN x'' THEN rt0.c2 ELSE rt0.c0 END)))OR('9'))))) UNION ALL SELECT ALL * FROM rt0, t0 WHERE (((((((((rt0.c0)-(rt0.c2)))AND(CASE t0.c0  WHEN x'' THEN rt0.c2 ELSE rt0.c0 END)))OR('9'))) ISNULL));
SELECT * FROM rt0, t0;
SELECT DISTINCT t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0 WHERE ('*Wdn)>9') UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((NOT ('*Wdn)>9'))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((('*Wdn)>9') ISNULL));
SELECT DISTINCT t0.c0 FROM t0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT rt0.c1, rt0.c0 FROM rt0 WHERE (CAST(rt0.c0 AS TEXT)) GROUP BY rt0.c1, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (CAST(rt0.c0 AS TEXT)))) GROUP BY rt0.c1, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c0 FROM rt0 WHERE (((CAST(rt0.c0 AS TEXT)) ISNULL)) GROUP BY rt0.c1, rt0.c0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING GROUP_CONCAT(t0.c0) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (GROUP_CONCAT(t0.c0))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((GROUP_CONCAT(t0.c0)) ISNULL);
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING GROUP_CONCAT(t0.c0) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (GROUP_CONCAT(t0.c0))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((GROUP_CONCAT(t0.c0)) ISNULL);
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE (((((((((((((((rt0.c1)*(rt0.c2)))AND(CASE WHEN rt0.c2 THEN NULL END)))AND(((((((((rt0.c2)OR(rt0.c2)))OR(rt0.c2)))OR(rt0.c1)))AND(rt0.c0)))))OR(ABS(DISTINCT rt0.c1))))AND(rt0.c0 COLLATE NOCASE)))OR(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2)))))OR((rt0.c2 IN (rt0.c1))))) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (((((((((((((((rt0.c1)*(rt0.c2)))AND(CASE WHEN rt0.c2 THEN NULL END)))AND(((((((((rt0.c2)OR(rt0.c2)))OR(rt0.c2)))OR(rt0.c1)))AND(rt0.c0)))))OR(ABS(DISTINCT rt0.c1))))AND(rt0.c0 COLLATE NOCASE)))OR(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2)))))OR((rt0.c2 IN (rt0.c1))))))) UNION ALL SELECT * FROM rt0 WHERE (((((((((((((((((rt0.c1)*(rt0.c2)))AND(CASE WHEN rt0.c2 THEN NULL END)))AND(((((((((rt0.c2)OR(rt0.c2)))OR(rt0.c2)))OR(rt0.c1)))AND(rt0.c0)))))OR(ABS(DISTINCT rt0.c1))))AND(rt0.c0 COLLATE NOCASE)))OR(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2)))))OR((rt0.c2 IN (rt0.c1))))) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT rt0.c1, t0.c0, rt0.c2, rt0.c0 FROM rt0, t0;
SELECT DISTINCT rt0.c1, t0.c0, rt0.c2, rt0.c0 FROM rt0, t0 WHERE (CHAR(rt0.c1) COLLATE BINARY) UNION SELECT DISTINCT rt0.c1, t0.c0, rt0.c2, rt0.c0 FROM rt0, t0 WHERE ((NOT (CHAR(rt0.c1) COLLATE BINARY))) UNION SELECT DISTINCT rt0.c1, t0.c0, rt0.c2, rt0.c0 FROM rt0, t0 WHERE (((CHAR(rt0.c1) COLLATE BINARY) ISNULL));
SELECT DISTINCT rt0.c1, t0.c0, rt0.c2, rt0.c0 FROM rt0, t0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 WHERE (((((((t0.c0)AND(t0.c0)))AND(t0.c0))) BETWEEN (((t0.c0)>>(t0.c0))) AND (((t0.c0) NOTNULL)))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT (((((((t0.c0)AND(t0.c0)))AND(t0.c0))) BETWEEN (((t0.c0)>>(t0.c0))) AND (((t0.c0) NOTNULL)))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE (((((((((t0.c0)AND(t0.c0)))AND(t0.c0))) BETWEEN (((t0.c0)>>(t0.c0))) AND (((t0.c0) NOTNULL)))) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL rt0.c1, t0.c0 FROM rt0 RIGHT OUTER JOIN t0 ON CASE WHEN json_patch(rt0.c0, 0.916825182590223) THEN CAST(rt0.c2 AS TEXT) WHEN ((t0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)) THEN (rt0.c0 IN ()) WHEN UNLIKELY(DISTINCT rt0.c0) THEN LIKELIHOOD(DISTINCT rt0.c1, 0.0759939393965623) WHEN ((((t0.c0)AND(t0.c0)))OR(rt0.c1)) THEN ((x'')=(t0.c0)) WHEN ((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1)) THEN (rt0.c0 IN (t0.c0, rt0.c2)) END GROUP BY rt0.c1, t0.c0;
SELECT ALL rt0.c1, t0.c0 FROM rt0 RIGHT OUTER JOIN t0 ON CASE WHEN json_patch(rt0.c0, 0.916825182590223) THEN CAST(rt0.c2 AS TEXT) WHEN ((t0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)) THEN (rt0.c0 IN ()) WHEN UNLIKELY(DISTINCT rt0.c0) THEN LIKELIHOOD(DISTINCT rt0.c1, 0.0759939393965623) WHEN ((((t0.c0)AND(t0.c0)))OR(rt0.c1)) THEN ((x'')==(t0.c0)) WHEN ((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1)) THEN (rt0.c0 IN (t0.c0, rt0.c2)) END GROUP BY rt0.c1, t0.c0 HAVING MIN(rt0.c1 COLLATE RTRIM) UNION ALL SELECT rt0.c1, t0.c0 FROM rt0 RIGHT OUTER JOIN t0 ON CASE WHEN json_patch(rt0.c0, 0.916825182590223) THEN CAST(rt0.c2 AS TEXT) WHEN ((t0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)) THEN (rt0.c0 IN ()) WHEN UNLIKELY(DISTINCT rt0.c0) THEN LIKELIHOOD(DISTINCT rt0.c1, 0.0759939393965623) WHEN ((((t0.c0)AND(t0.c0)))OR(rt0.c1)) THEN ((x'')=(t0.c0)) WHEN ((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1)) THEN (rt0.c0 IN (t0.c0, rt0.c2)) END GROUP BY rt0.c1, t0.c0 HAVING (NOT (MIN(rt0.c1 COLLATE RTRIM))) UNION ALL SELECT ALL rt0.c1, t0.c0 FROM rt0 RIGHT OUTER JOIN t0 ON CASE WHEN json_patch(rt0.c0, 0.916825182590223) THEN CAST(rt0.c2 AS TEXT) WHEN ((t0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)) THEN (rt0.c0 IN ()) WHEN UNLIKELY(DISTINCT rt0.c0) THEN LIKELIHOOD(DISTINCT rt0.c1, 0.0759939393965623) WHEN ((((t0.c0)AND(t0.c0)))OR(rt0.c1)) THEN ((x'')==(t0.c0)) WHEN ((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1)) THEN (rt0.c0 IN (t0.c0, rt0.c2)) END GROUP BY rt0.c1, t0.c0 HAVING ((MIN(rt0.c1 COLLATE RTRIM)) ISNULL);
SELECT ALL rt0.c1, t0.c0 FROM rt0 RIGHT OUTER JOIN t0 ON CASE WHEN json_patch(rt0.c0, 0.916825182590223) THEN CAST(rt0.c2 AS TEXT) WHEN ((t0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)) THEN (rt0.c0 IN ()) WHEN UNLIKELY(DISTINCT rt0.c0) THEN LIKELIHOOD(DISTINCT rt0.c1, 0.0759939393965623) WHEN ((((t0.c0)AND(t0.c0)))OR(rt0.c1)) THEN ((x'')=(t0.c0)) WHEN ((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1)) THEN (rt0.c0 IN (t0.c0, rt0.c2)) END GROUP BY rt0.c1, t0.c0;
SELECT ALL rt0.c1, t0.c0 FROM rt0 RIGHT OUTER JOIN t0 ON CASE WHEN json_patch(rt0.c0, 0.916825182590223) THEN CAST(rt0.c2 AS TEXT) WHEN ((t0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)) THEN (rt0.c0 IN ()) WHEN UNLIKELY(DISTINCT rt0.c0) THEN LIKELIHOOD(DISTINCT rt0.c1, 0.0759939393965623) WHEN ((((t0.c0)AND(t0.c0)))OR(rt0.c1)) THEN ((x'')==(t0.c0)) WHEN ((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1)) THEN (rt0.c0 IN (t0.c0, rt0.c2)) END GROUP BY rt0.c1, t0.c0 HAVING MIN(rt0.c1 COLLATE RTRIM) UNION ALL SELECT rt0.c1, t0.c0 FROM rt0 RIGHT OUTER JOIN t0 ON CASE WHEN json_patch(rt0.c0, 0.916825182590223) THEN CAST(rt0.c2 AS TEXT) WHEN ((t0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)) THEN (rt0.c0 IN ()) WHEN UNLIKELY(DISTINCT rt0.c0) THEN LIKELIHOOD(DISTINCT rt0.c1, 0.0759939393965623) WHEN ((((t0.c0)AND(t0.c0)))OR(rt0.c1)) THEN ((x'')=(t0.c0)) WHEN ((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1)) THEN (rt0.c0 IN (t0.c0, rt0.c2)) END GROUP BY rt0.c1, t0.c0 HAVING (NOT (MIN(rt0.c1 COLLATE RTRIM))) UNION ALL SELECT ALL rt0.c1, t0.c0 FROM rt0 RIGHT OUTER JOIN t0 ON CASE WHEN json_patch(rt0.c0, 0.916825182590223) THEN CAST(rt0.c2 AS TEXT) WHEN ((t0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)) THEN (rt0.c0 IN ()) WHEN UNLIKELY(DISTINCT rt0.c0) THEN LIKELIHOOD(DISTINCT rt0.c1, 0.0759939393965623) WHEN ((((t0.c0)AND(t0.c0)))OR(rt0.c1)) THEN ((x'')==(t0.c0)) WHEN ((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1)) THEN (rt0.c0 IN (t0.c0, rt0.c2)) END GROUP BY rt0.c1, t0.c0 HAVING ((MIN(rt0.c1 COLLATE RTRIM)) ISNULL);
SELECT ALL rt0.c1, t0.c0 FROM rt0 RIGHT OUTER JOIN t0 ON CASE WHEN json_patch(rt0.c0, 0.916825182590223) THEN CAST(rt0.c2 AS TEXT) WHEN ((t0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)) THEN (rt0.c0 IN ()) WHEN UNLIKELY(DISTINCT rt0.c0) THEN LIKELIHOOD(DISTINCT rt0.c1, 0.0759939393965623) WHEN ((((t0.c0)AND(t0.c0)))OR(rt0.c1)) THEN ((x'')=(t0.c0)) WHEN ((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1)) THEN (rt0.c0 IN (t0.c0, rt0.c2)) END GROUP BY rt0.c1, t0.c0;
SELECT ALL MAX(((((rt0.c2)/(rt0.c0))) BETWEEN (rt0.c2) AND (((rt0.c0) BETWEEN (t0.c0) AND (rt0.c0))))) FROM rt0, t0 ORDER BY ((((rt0.c2)+(rt0.c2)))<=(((rt0.c1) BETWEEN (rt0.c1) AND ('-719479140')))) DESC  NULLS FIRST, ((((t0.c0) NOT NULL)) NOT BETWEEN (((rt0.c1) NOT NULL)) AND (((t0.c0) NOT BETWEEN (rt0.c0) AND (t0.c0)))) ASC;
SELECT ALL * FROM t0;
SELECT * FROM t0 WHERE ((((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0)) BETWEEN (((((t0.c0)) BETWEEN ((x'')) AND ((t0.c0))), (((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((-8.2995464E7))), (((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0))), CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END, t0.c0)) AND ((((t0.c0) NOT BETWEEN ('*kP') AND (t0.c0)), (NOT (NULL)), (+ ('')), ((((t0.c0)AND(t0.c0)))OR(t0.c0)), ((t0.c0) IS TRUE))))) UNION ALL SELECT ALL * FROM t0 WHERE ((NOT ((((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0)) BETWEEN (((((t0.c0)) BETWEEN ((x'')) AND ((t0.c0))), (((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((-8.2995464E7))), (((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0))), CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END, t0.c0)) AND ((((t0.c0) NOT BETWEEN ('*kP') AND (t0.c0)), (NOT (NULL)), (+ ('')), ((((t0.c0)AND(t0.c0)))OR(t0.c0)), ((t0.c0) IS TRUE))))))) UNION ALL SELECT ALL * FROM t0 WHERE ((((((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0)) BETWEEN (((((t0.c0)) BETWEEN ((x'')) AND ((t0.c0))), (((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((-8.2995464E7))), (((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0))), CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END, t0.c0)) AND ((((t0.c0) NOT BETWEEN ('*kP') AND (t0.c0)), (NOT (NULL)), (+ ('')), ((((t0.c0)AND(t0.c0)))OR(t0.c0)), ((t0.c0) IS TRUE))))) ISNULL));
SELECT ALL * FROM t0;
SELECT DISTINCT rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c0 FROM rt0 WHERE (((rt0.c0)GLOB(rt0.c1)) COLLATE RTRIM) UNION SELECT DISTINCT rt0.c0 FROM rt0 WHERE ((NOT (((rt0.c0)GLOB(rt0.c1)) COLLATE RTRIM))) UNION SELECT DISTINCT rt0.c0 FROM rt0 WHERE (((((rt0.c0)GLOB(rt0.c1)) COLLATE RTRIM) ISNULL));
SELECT DISTINCT rt0.c0 FROM rt0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE (t0.c0) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT (t0.c0))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE (((t0.c0) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0, rt0.c2, rt0.c0, rt0.c1 FROM rt0 LEFT OUTER JOIN t0 ON (((t0.c0)) NOT BETWEEN ((((((rt0.c0)AND(rt0.c1)))OR(rt0.c0)))) AND (('eCc'))) GROUP BY t0.c0, rt0.c2, rt0.c0, rt0.c1;
SELECT ALL t0.c0, rt0.c2, rt0.c0, rt0.c1 FROM rt0 LEFT OUTER JOIN t0 ON (((t0.c0)) NOT BETWEEN ((((((rt0.c0)AND(rt0.c1)))OR(rt0.c0)))) AND (('eCc'))) GROUP BY t0.c0, rt0.c2, rt0.c0, rt0.c1 HAVING NULL UNION ALL SELECT t0.c0, rt0.c2, rt0.c0, rt0.c1 FROM rt0 LEFT OUTER JOIN t0 ON (((t0.c0)) NOT BETWEEN ((((((rt0.c0)AND(rt0.c1)))OR(rt0.c0)))) AND (('eCc'))) GROUP BY t0.c0, rt0.c2, rt0.c0, rt0.c1 HAVING (NOT (NULL)) UNION ALL SELECT t0.c0, rt0.c2, rt0.c0, rt0.c1 FROM rt0 LEFT OUTER JOIN t0 ON (((t0.c0)) NOT BETWEEN ((((((rt0.c0)AND(rt0.c1)))OR(rt0.c0)))) AND (('eCc'))) GROUP BY t0.c0, rt0.c2, rt0.c0, rt0.c1 HAVING ((NULL) ISNULL);
SELECT ALL t0.c0, rt0.c2, rt0.c0, rt0.c1 FROM rt0 LEFT OUTER JOIN t0 ON (((t0.c0)) NOT BETWEEN ((((((rt0.c0)AND(rt0.c1)))OR(rt0.c0)))) AND (('eCc'))) GROUP BY t0.c0, rt0.c2, rt0.c0, rt0.c1;
SELECT ALL t0.c0, rt0.c2, rt0.c0, rt0.c1 FROM rt0 LEFT OUTER JOIN t0 ON (((t0.c0)) NOT BETWEEN ((((((rt0.c0)AND(rt0.c1)))OR(rt0.c0)))) AND (('eCc'))) GROUP BY t0.c0, rt0.c2, rt0.c0, rt0.c1 HAVING NULL UNION ALL SELECT t0.c0, rt0.c2, rt0.c0, rt0.c1 FROM rt0 LEFT OUTER JOIN t0 ON (((t0.c0)) NOT BETWEEN ((((((rt0.c0)AND(rt0.c1)))OR(rt0.c0)))) AND (('eCc'))) GROUP BY t0.c0, rt0.c2, rt0.c0, rt0.c1 HAVING (NOT (NULL)) UNION ALL SELECT t0.c0, rt0.c2, rt0.c0, rt0.c1 FROM rt0 LEFT OUTER JOIN t0 ON (((t0.c0)) NOT BETWEEN ((((((rt0.c0)AND(rt0.c1)))OR(rt0.c0)))) AND (('eCc'))) GROUP BY t0.c0, rt0.c2, rt0.c0, rt0.c1 HAVING ((NULL) ISNULL);
SELECT ALL t0.c0, rt0.c2, rt0.c0, rt0.c1 FROM rt0 LEFT OUTER JOIN t0 ON (((t0.c0)) NOT BETWEEN ((((((rt0.c0)AND(rt0.c1)))OR(rt0.c0)))) AND (('eCc'))) GROUP BY t0.c0, rt0.c2, rt0.c0, rt0.c1;
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE (((((0.9121032070208953) NOT BETWEEN (rt0.c1) AND (rt0.c2))) NOT BETWEEN (((rt0.c2)<=(rt0.c2))) AND (((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2))))) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (((((0.9121032070208953) NOT BETWEEN (rt0.c1) AND (rt0.c2))) NOT BETWEEN (((rt0.c2)<=(rt0.c2))) AND (((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2))))))) UNION ALL SELECT * FROM rt0 WHERE (((((((0.9121032070208953) NOT BETWEEN (rt0.c1) AND (rt0.c2))) NOT BETWEEN (((rt0.c2)<=(rt0.c2))) AND (((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2))))) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT * FROM rt0, t0;
SELECT DISTINCT * FROM rt0, t0 WHERE ((((((((((NOT (t0.c0)))OR(LIKELY(rt0.c2))))OR(rt0.c2)))AND(((rt0.c0)>>(rt0.c0)))))AND((('0.9414159395469194')LIKE(x''))))) UNION SELECT DISTINCT * FROM rt0, t0 WHERE ((NOT ((((((((((NOT (t0.c0)))OR(LIKELY(rt0.c2))))OR(rt0.c2)))AND(((rt0.c0)>>(rt0.c0)))))AND((('0.9414159395469194')LIKE(x''))))))) UNION SELECT DISTINCT * FROM rt0, t0 WHERE ((((((((((((NOT (t0.c0)))OR(LIKELY(rt0.c2))))OR(rt0.c2)))AND(((rt0.c0)>>(rt0.c0)))))AND((('0.9414159395469194')LIKE(x''))))) ISNULL));
SELECT DISTINCT * FROM rt0, t0;
SELECT rt0.c1, rt0.c0 FROM t0, rt0 GROUP BY rt0.c1, rt0.c0;
SELECT rt0.c1, rt0.c0 FROM t0, rt0 WHERE ((NOT (UNLIKELY(DISTINCT rt0.c1)))) GROUP BY rt0.c1, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c0 FROM t0, rt0 WHERE ((NOT ((NOT (UNLIKELY(DISTINCT rt0.c1)))))) GROUP BY rt0.c1, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c0 FROM t0, rt0 WHERE ((((NOT (UNLIKELY(DISTINCT rt0.c1)))) ISNULL)) GROUP BY rt0.c1, rt0.c0;
SELECT rt0.c1, rt0.c0 FROM t0, rt0 GROUP BY rt0.c1, rt0.c0;
SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING MAX(TOTAL(COUNT(*))) UNION ALL SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING (NOT (MAX(TOTAL(COUNT(*))))) UNION ALL SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING ((MAX(TOTAL(COUNT(*)))) ISNULL);
SELECT ALL * FROM rt0;
SELECT * FROM rt0 WHERE (x'7bff') UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (x'7bff'))) UNION ALL SELECT * FROM rt0 WHERE (((x'7bff') ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c0 FROM rt0 WHERE (CASE WHEN ((rt0.c2)>>(rt0.c2)) THEN CASE WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c1 END WHEN rt0.c1 THEN rt0.c1 WHEN ((rt0.c1)GLOB(NULL)) THEN ((rt0.c1)IS NOT(-1e500)) ELSE TRIM(rt0.c2) END) UNION SELECT DISTINCT rt0.c0 FROM rt0 WHERE ((NOT (CASE WHEN ((rt0.c2)>>(rt0.c2)) THEN CASE WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c1 END WHEN rt0.c1 THEN rt0.c1 WHEN ((rt0.c1)GLOB(NULL)) THEN ((rt0.c1)IS NOT(-1e500)) ELSE TRIM(rt0.c2) END))) UNION SELECT DISTINCT rt0.c0 FROM rt0 WHERE (((CASE WHEN ((rt0.c2)>>(rt0.c2)) THEN CASE WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c1 END WHEN rt0.c1 THEN rt0.c1 WHEN ((rt0.c1)GLOB(NULL)) THEN ((rt0.c1)IS NOT(-1e500)) ELSE TRIM(rt0.c2) END) ISNULL));
SELECT DISTINCT rt0.c0 FROM rt0;
SELECT t0.c0, rt0.c1 FROM rt0, t0 GROUP BY t0.c0, rt0.c1;
SELECT ALL t0.c0, rt0.c1 FROM rt0, t0 WHERE (((((rt0.c2) BETWEEN (rt0.c2) AND (t0.c0)))%(((rt0.c1)||(rt0.c1))))) GROUP BY t0.c0, rt0.c1 UNION SELECT t0.c0, rt0.c1 FROM rt0, t0 WHERE ((NOT (((((rt0.c2) BETWEEN (rt0.c2) AND (t0.c0)))%(((rt0.c1)||(rt0.c1))))))) GROUP BY t0.c0, rt0.c1 UNION SELECT ALL t0.c0, rt0.c1 FROM rt0, t0 WHERE (((((((rt0.c2) BETWEEN (rt0.c2) AND (t0.c0)))%(((rt0.c1)||(rt0.c1))))) ISNULL)) GROUP BY t0.c0, rt0.c1;
SELECT t0.c0, rt0.c1 FROM rt0, t0 GROUP BY t0.c0, rt0.c1;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING COUNT(*) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING COUNT(*) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL * FROM rt0, t0;
SELECT * FROM rt0, t0 WHERE (((((((((((rt0.c0) NOTNULL))AND(((rt0.c2)==(rt0.c1)))))OR(t0.c0)))OR(((rt0.c2)|(rt0.c1)))))OR((rt0.c0 IN ())))) UNION ALL SELECT ALL * FROM rt0, t0 WHERE ((NOT (((((((((((rt0.c0) NOTNULL))AND(((rt0.c2)==(rt0.c1)))))OR(t0.c0)))OR(((rt0.c2)|(rt0.c1)))))OR((rt0.c0 IN ())))))) UNION ALL SELECT * FROM rt0, t0 WHERE (((((((((((((rt0.c0) NOTNULL))AND(((rt0.c2)==(rt0.c1)))))OR(t0.c0)))OR(((rt0.c2)|(rt0.c1)))))OR((rt0.c0 IN ())))) ISNULL));
SELECT ALL * FROM rt0, t0;
SELECT DISTINCT rt0.c0, rt0.c2, t0.c0, rt0.c1 FROM t0, rt0;
SELECT DISTINCT rt0.c0, rt0.c2, t0.c0, rt0.c1 FROM t0, rt0 WHERE ((((t0.c0 IN ()))>=(((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1))))) UNION SELECT DISTINCT rt0.c0, rt0.c2, t0.c0, rt0.c1 FROM t0, rt0 WHERE ((NOT ((((t0.c0 IN ()))>=(((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1))))))) UNION SELECT DISTINCT rt0.c0, rt0.c2, t0.c0, rt0.c1 FROM t0, rt0 WHERE ((((((t0.c0 IN ()))>=(((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1))))) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c2, t0.c0, rt0.c1 FROM t0, rt0;
SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 WHERE (LOWER(((rt0.c2) NOTNULL))) GROUP BY rt0.c1, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (LOWER(((rt0.c2) NOTNULL))))) GROUP BY rt0.c1, rt0.c0 UNION SELECT rt0.c1, rt0.c0 FROM rt0 WHERE (((LOWER(((rt0.c2) NOTNULL))) ISNULL)) GROUP BY rt0.c1, rt0.c0;
SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING GROUP_CONCAT(((COUNT(t0.c0)) NOT BETWEEN (t0.c0) AND (t0.c0))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (GROUP_CONCAT(((COUNT(t0.c0)) NOT BETWEEN (t0.c0) AND (t0.c0))))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((GROUP_CONCAT(((COUNT(t0.c0)) NOT BETWEEN (t0.c0) AND (t0.c0)))) ISNULL);
SELECT TOTAL(rt0.c2) FROM t0, rt0;
SELECT * FROM rt0 FULL OUTER JOIN t0 ON (((rt0.c1)) BETWEEN ((0.6154469739839906)) AND ((t0.c0))) COLLATE RTRIM;
SELECT * FROM rt0 FULL OUTER JOIN t0 ON (((rt0.c1)) BETWEEN ((0.6154469739839906)) AND ((t0.c0))) COLLATE RTRIM WHERE (((((((rt0.c2)AND(rt0.c0)))AND(rt0.c0)))<<(t0.c0))) UNION ALL SELECT ALL * FROM rt0 FULL OUTER JOIN t0 ON (((rt0.c1)) BETWEEN ((0.6154469739839906)) AND ((t0.c0))) COLLATE RTRIM WHERE ((NOT (((((((rt0.c2)AND(rt0.c0)))AND(rt0.c0)))<<(t0.c0))))) UNION ALL SELECT ALL * FROM rt0 FULL OUTER JOIN t0 ON (((rt0.c1)) BETWEEN ((0.6154469739839906)) AND ((t0.c0))) COLLATE RTRIM WHERE (((((((((rt0.c2)AND(rt0.c0)))AND(rt0.c0)))<<(t0.c0))) ISNULL));
SELECT * FROM rt0 FULL OUTER JOIN t0 ON (((rt0.c1)) BETWEEN ((0.6154469739839906)) AND ((t0.c0))) COLLATE RTRIM;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((((CASE WHEN x'0797' THEN NULL END)OR((- (rt0.c2)))))OR(((rt0.c1)IS(rt0.c0))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((((CASE WHEN x'0797' THEN NULL END)OR((- (rt0.c2)))))OR(((rt0.c1)IS(rt0.c0))))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((((CASE WHEN x'0797' THEN NULL END)OR((- (rt0.c2)))))OR(((rt0.c1)IS(rt0.c0))))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((rt0.c0 IN ((rt0.c1 IN ('L.'))))) GROUP BY rt0.c2, rt0.c1, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT ((rt0.c0 IN ((rt0.c1 IN ('L.'))))))) GROUP BY rt0.c2, rt0.c1, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((((rt0.c0 IN ((rt0.c1 IN ('L.'))))) ISNULL)) GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
