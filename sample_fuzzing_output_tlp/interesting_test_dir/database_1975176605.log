-- Time: 2024/06/09 16:54:13
-- Database: database5
-- Database version: 3.40.0
-- seed value: 1975176605
PRAGMA cache_size = 50000; -- 10ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA case_sensitive_like=ON; -- 0ms;
PRAGMA encoding = 'UTF-16'; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts4(c0 UNINDEXED, c1 UNINDEXED, compress=likely, uncompress=likely); -- 1ms;
CREATE VIRTUAL TABLE vt1 USING fts4(c0); -- 1ms;
INSERT OR IGNORE INTO vt0 VALUES (NULL, '-1516361644'); -- 1ms;
INSERT OR IGNORE INTO vt1(c0) VALUES (x''), (NULL), (0.21696135502405867); -- 1ms;
PRAGMA temp.short_column_names; -- 0ms;
PRAGMA temp.legacy_file_format; -- 0ms;
UPDATE OR IGNORE vt1 SET c0='-1299326560' WHERE (+ (CASE WHEN vt1.c0 THEN 0.39198889462167197 END)); -- 1ms;
UPDATE OR IGNORE vt1 SET c0=NULL WHERE (((vt1.c0 IN ())) NOT BETWEEN (CAST(vt1.c0 AS TEXT)) AND (((vt1.c0) IS TRUE))); -- 0ms;
REINDEX NOCASE; -- 1ms;
INSERT INTO vt1(vt1, rank) VALUES('crisismerge', 665574711); -- 6ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 13); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 2081948885); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 13); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '49118'); -- 0ms;
INSERT INTO vt1(vt1) VALUES('integrity-check'); -- 0ms;
INSERT OR FAIL INTO vt1 VALUES ('-318998551'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=-252248554 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '0 sz=556099735 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((((('i')AND(0.4811921901591931)))OR(NULL)))OR(0.6102397502497221)))AND(0.6979957480176251)))AND(LIKELY(NULL))))OR(((NULL) BETWEEN (NULL) AND ('-318998551')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' sz=395312579'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1299326560 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-799419832 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=395312579 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 sz=-252248554 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.404201247395907 IN ()))+(NULL COLLATE RTRIM)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=-799419832 unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((x'', 0.8190916236103379, '_)}AGJKF6'))>((NULL, x'', NULL))) COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-946570867'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE IFNULL(((NULL) BETWEEN (NULL) AND (NULL)), CAST(0.36153867503553017 AS INTEGER)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.38716737176690597) NOT BETWEEN (')-䜺I') AND (x''))) ISNULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE IFNULL(((((((((x'')OR(NULL)))AND('k}D\_')))AND('487161889')))AND(x'')), '1710854074' COLLATE BINARY); -- 0ms;
DELETE FROM sqlite_stat1 WHERE LIKELY(DISTINCT (NULL IN ())); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-379409755 0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', ' sz=-1363885058 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-392324437 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(0.14133903191766628 AS INTEGER))|((NOT ('0.6102397502497221')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL COLLATE RTRIM) NOT BETWEEN (CASE 0.046751219616839146  WHEN '-392324437' THEN x'' WHEN NULL THEN '-252248554' WHEN x'' THEN 0.8252231489700534 END) AND (('-129600101' IN ()))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=730103822'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-1363885058 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('160406715' COLLATE RTRIM) IS FALSE); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((x'')!=(0.7272232256077354)) AS BLOB); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1077445787'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1516361644 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0Xffffffff83ad2e8f) ISNULL))OR(((x'f973df9c') IS TRUE))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', '1811586984 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((((1141786426, NULL, '1811586984'))==(('', x'bc18', x'8588'))) AS TEXT); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST('d!PG' AS BLOB))GLOB((((0Xffffffff917c6aa8)) NOT BETWEEN ((x'')) AND ((x'b373'))))); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST('C' AS TEXT)) ISNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', ' sz=487161889'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ''; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('-379409755', 395312579, '')) NOT BETWEEN ((x'', NULL, NULL)) AND ((NULL, NULL, 0Xffffffff968fbc65))), CAST('2086150057' AS NUMERIC), 0.5442716865999735))>=((LOWER(x''), ((0.7404363253976425) IS FALSE), ((1.60406715E8) NOT NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '0 sz=-129600101 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.8665152423706426, 'q\ri', 0.7722795201775413)) NOT BETWEEN ((x'' COLLATE BINARY, ((NULL) IS TRUE), (('-252248554') BETWEEN (0.3143932005362743) AND (x'')))) AND (((((4.87161889E8))>=((NULL))), -7.99419832E8 COLLATE NOCASE, ((NULL) ISNULL)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('2111693042') BETWEEN (0.404201247395907) AND ('8M?☶O')) COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' sz=-2000083598 unordered'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE CAST('YmuD*Uu	' COLLATE RTRIM AS INTEGER); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', '0 0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=1512376920'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', '2 sz=1727087632 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL)) NOT BETWEEN ((((0.693597239120425) NOT BETWEEN (-129600101) AND ('ht&5O')))) AND (((+ ('1811586984'))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=-272832865 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((((NULL)AND(NULL)))AND(NULL)) AS INTEGER); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', ' sz=51430591 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', '1373731987 0 2 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NOT (0.9446395618219394)))>>(x'22e2' COLLATE RTRIM)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', ' sz=326726650 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('0.39198889462167197')=('t辺8gB^M')) COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('0.8665152423706426')IS(1e500))) NOT BETWEEN (((NULL)!=(0.6296050593917047))) AND (((((x'')AND(0.8561296498472811)))AND(x'bc3e')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=1383831925 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 2ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '2 962722047 sz=-791379121'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=440821638 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1727087632'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((PRINTF(0.2752979995455306, '-2135886416', '1373731987'))OR(0.966618110068544 COLLATE BINARY)))AND(CASE 'ὗU#%9'  WHEN x'' THEN 0.04636047636536922 END)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((('1811586984')) BETWEEN ((0.04995807415597886)) AND ((x''))) THEN (((0.6007288477897662)) NOT BETWEEN ((0.32761450306687445)) AND ((0.3877108121964976))) WHEN CASE x'f7cb'  WHEN x'' THEN -633440079 END THEN 0.8252231489700534 WHEN NULL COLLATE BINARY THEN HEX('-2000083598') ELSE (('')OR(x'')) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (0.8645747795078302)) COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.7505239277816197)OR(x'')))OR(0.04636047636536922)) COLLATE NOCASE; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '0 sz=-129600101 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '0 sz=730103822 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '0 sz=-948657877'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-606981236 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '0 noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=-1757897139'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((NULL)) BETWEEN ((0.20571807618600924)) AND ((-3.79409755E8)))) NOT BETWEEN (CAST(1.710854074E9 AS REAL)) AND (' z{' COLLATE NOCASE)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '4'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN NULL THEN x'' END)IS((((((((((((('C')OR(0.797357015143743)))OR(x'df0a')))OR('-9223372036854775808')))OR(x'')))OR('-1')))AND('-946570867')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=-392324437 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-844421578'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE '-1493555941'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=-2037963688 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=-318998551 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=1077445787 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL, 530768560, x'')) BETWEEN ((((0.372333948385969)|('-2027070309')), '' COLLATE NOCASE, CAST('ὗu#%9' AS TEXT))) AND (((('326726650')IS NOT(-8.44421578E8)), ((0.021508578444717097)>=(NULL)), ((((((((x'')AND(x'')))OR(0.793940632445528)))OR(NULL)))AND(x''))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=1811586984'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '0 -373082741 sz=590102309'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' sz=1529090959'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=-1012214576 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)=(NULL))) BETWEEN (((x'')>(-1161307186))) AND ((('') IS TRUE))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((0X546996a9, 1583603186, 0.6296050593917047, '', NULL)) NOT BETWEEN ((0.404201247395907, x'', 1.373731987E9, 0.9650165231162001, '-1531580670')) AND ((1041657174, '<x7a!)', 0.3617822548449118, NULL, 0.06381376117960602)))) IS TRUE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)OR(x'')))AND(2111693042)) COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '2 0 sz=-379409755 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 sz=2111693042 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '-129600101 -844800061 sz=-252248554 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '1418219308 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', '2 0 sz=2102713019 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '0 962722047 sz=-1012214576 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '4 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('-1012214576')>>(NULL)))IS(((NULL) BETWEEN (0.2842129482301573) AND ('556099735')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=-30411137 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=1743282264 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', '2 sz=-701160311 noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', ' sz=-479334021 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '0'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CASE 0.20571807618600924  WHEN NULL THEN x'' ELSE '-948657877' END AS NUMERIC); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-1608341017 sz=-2135886416 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=1383831925 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ''); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=-606981236 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=1345807687'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'') NOT NULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '0 2 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' sz=-1161307186'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE 0.5731007267449577  WHEN '-1265080388' THEN x'3f68' ELSE 'vr' END)>=(((0X2d10a095) BETWEEN ('now') AND (NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' sz=-1207976878 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '423914305 sz=-1207976878'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 sz=1926721789 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=-1895326019 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '1416205993 1614078915 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' sz=1588859662 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (x'')) COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ ('1056191779')) COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' sz=366606768'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.14133903191766628)/(''))) NOT BETWEEN ((((((((('3~*T')OR('I%')))OR(0.7608844186194623)))OR('51430591')))AND(x''))) AND (((0.3143932005362743) BETWEEN (NULL) AND (1512376920)))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=-27282935 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'' COLLATE RTRIM) IS TRUE); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((((x'', x'', 0x546996a9)) NOT BETWEEN ((0.9446395618219394, x'ee4b0986', 0.5442716865999735)) AND ((x'', 0.9757786899486174, '|0M㴖d')))) BETWEEN ((((NULL, NULL, 0.9446395618219394)) BETWEEN ((x'', NULL, '-318347799')) AND (('6^', 's', 'A>I|#x-聆')))) AND (((((1740038772)OR(x'')))AND(-606981236)))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=1299463827 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', '1014487679 sz=1199423259 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=1022401365 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (LIKELIHOOD('', 0.022204222243127347) IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '2 1795903834 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((CASE NULL  WHEN 1557470660 THEN 0.017121209674855753 ELSE 1.51237692E9 END)OR(0.7988657162163184)))AND(CAST(NULL AS BLOB))))OR(LIKE(x'7cbf0887', 0xffffffffd5de94f7, '킈'))))AND((((x'', x'', x'')) BETWEEN ((x'2920', -1196610756, x'f0ec')) AND ((NULL, 1029681206, 0.3877108121964976))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.8618473653568988) ISNULL)) NOT NULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((NULL)AND('_)}AGJKF6')) THEN ((0Xffffffffd980238f) NOT NULL) END; -- 1ms;
DELETE FROM sqlite_stat1 WHERE CASE 'f^\C'  WHEN (('c') IS TRUE) THEN ((-2135886416)IS NOT('1041657174')) WHEN ((0.07010556402105528)-('')) THEN CHAR(0.32761450306687445) WHEN ((0xffffffffe8436f48) IS TRUE) THEN (('-291422954')GLOB(0.715661188992798)) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-446187541 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((SQLITE_SOURCE_ID()) BETWEEN (COALESCE(DISTINCT 0.07010556402105528, 0.797357015143743)) AND (NULL COLLATE BINARY)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1976543221 noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (IFNULL(NULL, 0.9536249134630518) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' sz=496402794'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '-1012214576 2 sz=455301207 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'') NOT BETWEEN (x'') AND (NULL)) COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '0 1391631686 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL, 0.6433637104970101, x'c576')) NOT BETWEEN ((x'14f8', (- (NULL)), (x'b995' IN ()))) AND ((((('', '꺧9', NULL)) NOT BETWEEN ((NULL, '', 0X5b24138f)) AND ((NULL, '24L䮗Gxze ', -1037948956))), (((0.15303132319259394, 'i%', '1029681206')) NOT BETWEEN ((NULL, 0.7464557842635837, 0.38716737176690597)) AND ((0.12131084205081577, '줊b)B}\n뱥', NULL))), (NOT (x''))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', ' sz=1752454242 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' sz=-252248554 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NOT (''))) BETWEEN ((NOT ('1707713969'))) AND (((0.634897911709616) ISNULL))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '0 -121495110 sz=1989987165 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(0xffffffffabd2a628 AS NUMERIC); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '2 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE x'a2e1'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((+ (NULL)), (0Xffffffffd76ff068 IN (x'')), ('-1012214576' IN ())))>=((CASE '1512376920'  WHEN 78712241 THEN x'b93a' END, CAST('-886469945' AS NUMERIC), ((x'9018') NOT BETWEEN ('%)t') AND (x''))))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '-1679136454 sz=-1794689836 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '511435720 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((((x'')AND(x'')))AND('4'))  WHEN ((NULL)<=(x'')) THEN 160406715 COLLATE NOCASE WHEN CASE WHEN NULL THEN x'' END THEN ((0.17902347714065725) BETWEEN ('-1207976878') AND ('664135875')) WHEN ((-189943403) IS TRUE) THEN CASE WHEN 'y^K\n)' THEN x'' ELSE '-510541603' END ELSE (('6^') NOT BETWEEN (5.3076856E8) AND ('-12011958')) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=-1277556762 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1493555941 unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((((NULL)OR(NULL)))AND(NULL)) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' sz=-1854117208 noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=160406715 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-302182726 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', ' sz=1029681206 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(0.44257044526155054 AS NUMERIC)) BETWEEN (CAST(NULL AS REAL)) AND ((('~쓕w')/(0.22817710425492177)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.4128670003251117 COLLATE NOCASE)AND(CAST(0.17030570871581818 AS INTEGER))))AND(((((((((0.666706198698984)OR('0.4811921901591931')))OR('2086150057')))AND(NULL)))OR(x'249f')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((0.35847090750563904)AND(NULL)))OR(703776164)) IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE LTRIM((((0.98756823721977)) BETWEEN (('-946570867')) AND ((-1528039995)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN NULL THEN x'' END COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'') ISNULL))>>((NULL IN ()))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=435883688 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '0 0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', '-1574463215 sz=-1636571819 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((CASE WHEN 0.757943368931643 THEN x'' WHEN x'' THEN NULL WHEN NULL THEN NULL ELSE 0.5274647443525264 END))<=((NULL COLLATE NOCASE))); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', '2 sz=207907547 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE TRIM(DISTINCT ((0.7505239277816197) BETWEEN (0.16939857715929185) AND (''))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((+ (x'12c60c7c')))OR(ABS('i'))))OR((('鲻ꫥ')==(0.6979957480176251)))))AND(((('0.3143932005362743'))<=(('줊b)B}\n뱥'))))))AND(CAST(NULL AS INTEGER))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('-1648300206')AND('')))OR(x'')) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=113447685 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=623817927'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULLIF(x'', x'4a0c')) BETWEEN (0Xffffffffa59e2854 COLLATE NOCASE) AND (((1.056191779E9) NOT BETWEEN (x'') AND ('575546745')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((((x'c604')OR(x'')))OR(0.473105733629653)))AND(((NULL) ISNULL))))AND(x'' COLLATE BINARY)))OR((NOT (x'')))))OR(NULL COLLATE BINARY)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CASE NULL  WHEN x'' THEN 0.8821125930203122 WHEN NULL THEN x'716b' WHEN 0.3106984318278875 THEN 0.5718195215672782 WHEN 0.8645747795078302 THEN NULL WHEN x'a30bfc8b' THEN 'J+' END AS REAL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=160406715 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1418219308 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '0 sz=1432817337 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '0 sz=-318998551'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=-101412939'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((NULL)>>('1299463827'))))=((CAST(0.8655348034138026 AS INTEGER)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-30411137 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', ' sz=-1012214576'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' sz=1067185198 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 5ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- ((('')<<(NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '265177530 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=-225214698 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=-373082741 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 sz=2016688966'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-1635008640 sz=1383831925 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((- ('-446187541')))>=(((NULL) ISNULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', '1248646292 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '-1609207279 sz=-1453993848 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=1404399993 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL)) NOT BETWEEN ((((x'') NOT BETWEEN (x'') AND (0.012785461657995323)))) AND ((COALESCE('_勵뼛f땺\r', x'')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL)) BETWEEN ((((-2.135886416E9) BETWEEN (NULL) AND (-1736086336)))) AND ((CAST(0xffffffffd103307d AS NUMERIC)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('157119710') NOT BETWEEN ('-277512485') AND (0.8025437748484584))) NOTNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=1680263578 noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '1377890392 -426612734'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE '0.8618473653568988'; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'')>=((0.2666000185356334 IN ()))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=-1608341017'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('424806238')) NOT BETWEEN ((LIKELIHOOD(DISTINCT 'cg', 2.2269893387716344E-5))) AND ((CAST(0.5282372567996532 AS BLOB)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((x'')AND(((NULL)>=(x'b724')))))OR(((((0.241577935886218)AND(NULL)))AND(x'')))))OR(json_object('1240384623', '0.017121209674855753', '킈5<', 1.752454242E9))))AND((((x'', 0.1717301257000312, x'')) BETWEEN ((NULL, x'0ae4', NULL)) AND (('', '0.0', '1041657174'))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE load_extension((((0.6288708313994648))>(('0.6102397502497221'))), NULLIF(x'35c0', '-G4-?}')); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1942472567 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', '-1460936257 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '0 sz=1299463827 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '0 0 0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '0 sz=1334531233'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=1077445787 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '0 sz=708140154 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=-1516361644 noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' sz=2127793390 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '1022401365 sz=2102713019'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(1811586984 AS BLOB))>>(CAST(NULL AS BLOB))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=1899416832'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((NOT (0.20800562921712684)) AS TEXT); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-252248554 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '1418219308 1022401365 2 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.7159058767130946))<((''))) COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (('vr') ISNULL) THEN (((('-1381306271')OR('㤐5')))AND(x'970b')) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '990080869 0'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '-1037948956'; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (NULL COLLATE RTRIM)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(270232179 COLLATE RTRIM AS TEXT); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '0 sz=1391631686 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=-405775221'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-329026717 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '0 -1037948956 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((json(0.857257919279575)) NOT BETWEEN ((-2.037963688E9 IN (NULL))) AND (((']U%2mD')>>(NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=746766565'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'' COLLATE NOCASE) BETWEEN ((('1199423259') NOT BETWEEN ('') AND (1.60406715E8))) AND ((('-381298866')>(NULL)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((x'97a9') BETWEEN ('-446187541') AND (567200018)) AS INTEGER); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '2 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '1058954652 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=-358231286'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CASE '?<'  WHEN '4' THEN NULL WHEN 0.6182003434721541 THEN 'j೉' WHEN 0.0050092497392378865 THEN '-831202268' ELSE NULL END IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=-27282935'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'' COLLATE BINARY) NOT BETWEEN (NULL) AND (((0.8961823003626974) NOTNULL))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ''); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)<<(0.008807941878191339))) NOT BETWEEN (((((((((NULL)OR(x'320b')))OR(x'5250')))AND(NULL)))OR(0.004918604520484204))) AND (('0.8821125930203122' IN ()))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 sz=-903067741 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('-1915691568')) BETWEEN ((0.3736066227132203 COLLATE BINARY)) AND (((((NULL))<=((x'')))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '323050369 sz=1237409473 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (((x'15c0')*(959713858)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((UNICODE(x'')) NOT BETWEEN (CAST(NULL AS INTEGER)) AND (((0.05180003588313287)<(NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=1584735689 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.1462567745634864) IS FALSE))LIKE((- (0.2752979995455306)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '854507734 sz=-385525915 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '1614078915 sz=962722047 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', '2 sz=1586374769 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=1727087632'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('' COLLATE BINARY) IS TRUE); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('-1278550996', NULL, '')) NOT BETWEEN (('', 0x8de453b, 0.6598917230488873)) AND (('', NULL, x''))))/(((-1130913221) NOTNULL))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((TRIM('2111693042', -1823042696)) ISNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '1529090959'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '-479334021 0 sz=-1103284229 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', ' sz=1373731987 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ ((((x'7cca')) NOT BETWEEN ((-2.72832865E8)) AND (('0.7272232256077354'))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' sz=1697241403 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', '0 sz=1039638436 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '1538199694'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' sz=11763985'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ ((('175860421')>>(x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((((((((x'd6b8')AND('-425330640')))AND(x'')))OR((NOT (0.6827782924515643)))))AND((((('')OR('~[|z_2')))AND(x'8840')))))OR((((x'')) BETWEEN ((x'0c23')) AND ((NULL))))))AND(UNLIKELY(DISTINCT NULL))))OR(x'')))OR(CAST(0.7586492915649803 AS TEXT))); -- 4ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1200579119 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((NULL)IS(0.5840950004024283)), ((('342764827')) NOT BETWEEN ((NULL)) AND ((-609417281))), CAST(0xffffffffb610e6ab AS BLOB)))<=(('R早', x'', ((0.9077415694829984) NOT BETWEEN ('1752454242') AND ('-1207976878'))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN 0X426c9904 THEN '0.1717301257000312' WHEN 0.7988657162163184 THEN -2.91422954E8 WHEN 0.8943754578749827 THEN NULL ELSE NULL END) NOT BETWEEN (((0.44482749366843277)LIKE(x''))) AND (NULL)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((CAST('Zx*4' AS BLOB))OR(TRIM(DISTINCT NULL, 0.6102397502497221))))AND(CASE x'0e59'  WHEN NULL THEN 0x6f4261ea WHEN NULL THEN 'A>I|#x-聆' WHEN '' THEN x'a0c9' END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '0 sz=-322906805 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('')IS NOT(0.3752480761992617)))IS NOT((0.33360386401497544 IN ()))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ ('1720064980' COLLATE RTRIM)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '0 sz=-674889076 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', '-1787913263 2 -571374846 sz=1713287823'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '1077445787'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=-701160311'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((0.6263178487044998)!=(4.55301207E8))  WHEN ((NULL)LIKE(455534391)) THEN CAST(x'' AS TEXT) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'e562') IS TRUE) IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'8952') BETWEEN (x'') AND (''))) IS TRUE); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.980471381654489 COLLATE BINARY))<((((x'')AND(''))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1414423606'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((((x''))<((x''))))||(((0.3540396456228808)%(0.8002729006960471)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '843827363'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=-1042143074 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((SQLITE_SOURCE_ID())AND(CAST(-937659796 AS INTEGER))))AND(CAST('s' AS INTEGER))))AND(('-1324431015' IN ()))))OR(TRIM(-606981236))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '524663109 sz=2100061505 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CAST(NULL AS TEXT) IN ((('') NOT BETWEEN (NULL) AND (NULL)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(x'950f' AS REAL)) ISNULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE 0Xfffffffff846759b  WHEN '' THEN 1.7976931348623157E308 WHEN 1.041657174E9 THEN -7.99419832E8 WHEN '1752454242' THEN 0.944685587509837 END)<=((0.7186847173624192 IN ()))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(x'' AS TEXT))GLOB('y' COLLATE BINARY)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=2059166039'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((-1997167715) ISNULL) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '1139037427 -1453993848 298548569 sz=727977342 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', '-272832865 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((((NULL, 0.2943025276260508, x'', x'', '% f0'))<=((0.17474289494879747, NULL, x'5572', '', x'6b70'))))OR((-2085802353 IN ()))))OR(0.3485491589580595)))AND((((x'413a'))>((0.018387802527090713))))))AND(((NULL)LIKE('-701160311')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '1022401365 -9223372036854775808 sz=1710285299'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE TIME(((((NULL)OR(x'')))AND(-1324323360)), json_patch(NULL, NULL), ((((0.30986816527189287)OR('-2005617753')))OR('-1500457545')), (('') NOTNULL), (('y,FRBB<') NOT BETWEEN (NULL) AND (NULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '-1861338337'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '0 1557470660'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('-479334021' IN ())) NOT BETWEEN ((+ (''))) AND (0.2900899283402031 COLLATE NOCASE)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN '((' THEN 0X3c77da7f ELSE 0.5752794451580431 END)<>((((x''))<=((x'bb96'))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('%䐑P>') NOT BETWEEN (5.3076856E8) AND (0.599936935471563)))OR((((NULL, x'', -2000083598))==((NULL, '', ''))))))OR(((0.4927053524778201)OR(0.6383127159936655)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', '1353394394 sz=1453039411 noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((((x'9069')-(''))) NOT NULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '90103999 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL)) BETWEEN ((((x'')IS NOT(x'876e')))) AND (((((('-706833161')AND(x'')))AND(1.51237692E9))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '-776426481 0 sz=1557470660 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1688974765 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1994703127 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'1cc5' COLLATE BINARY) NOT BETWEEN (((-1.712370793E9) BETWEEN ('-2048711547') AND (0.5442716865999735))) AND ((- ('⯯+')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL)) NOT BETWEEN ((0.42734479817145654)) AND (('4'))) COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE NULL  WHEN '' THEN 0.21448928594120242 END) BETWEEN (((((NULL)AND('')))OR(0x2d8637b7))) AND (LIKELIHOOD(DISTINCT NULL, 0.31183546615063695))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '1710854074 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((LIKELIHOOD(DISTINCT -1363885058, 0.6561321988319772))/(CASE WHEN NULL THEN NULL END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '1271477526 sz=156247012 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=1372537295'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(('' IN (0.9888928512148437, 0xffffffffb9487a1b)) AS INTEGER); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '0'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((+ (0.1635938721253034)) IN (x'', ((((((((0.2012441566795975)OR('-27282935')))AND(x'')))AND(0.30231905334808573)))OR(x'')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CAST(NULL AS BLOB) IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((0.3026865876735845)IS(0.7171131926667982)))AND(((((0.623323764363119)AND(0.7648980205033226)))OR('yN')))))OR((+ (x'a23c')))))AND(x'e61a')))OR(((x'5536')OR('n ')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=1727087632'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1619197562'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '117087336 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((0xffffffffabe04b9b) NOT NULL))OR(((NULL)!=(NULL)))))OR((((NULL)) NOT BETWEEN ((NULL)) AND ((NULL))))))AND(1717891610)))OR(CASE WHEN 0.2341848983372531 THEN x'' ELSE NULL END)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.43041065440512505; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((x'a9e3')GLOB('599469426')) AS TEXT); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', '0 431586153 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '0'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((0.3106984318278875 IN (NULL)))AND(CASE 0X1803c87e  WHEN 0.0 THEN 0.35353317068117684 END)))AND(COALESCE(DISTINCT x'3ea8', ''))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL IN (NULL)))-((NULL IN ()))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' sz=988912103'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((+ (x'')) AS INTEGER); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', '-606981236 sz=-1299326560'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'')<<(-6.45913713E8))) NOT BETWEEN (((x'f9d7')<(''))) AND ((((('1014487679')OR(NULL)))OR(-1719682897)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', '1855758772 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '2 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=876402935 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=321276625'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=-633440079 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '-954476309 0 sz=1727087632 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((1727087632)) BETWEEN ((((0.3106984318278875) NOT BETWEEN (x'') AND (-606981236)))) AND ((((((0.5837042915062884)AND(0.5286317790043925)))AND(NULL))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((x''))<=((NULL))))AND(((((0.12125251304605178)OR(1014487679)))OR(0.6722598847288003)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('-1428172451' IN ()))OR('1' COLLATE BINARY)))OR((('-1603172128') IS TRUE))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1012214576 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 sz=642554132'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (- (((((((((x'')OR('1072339547')))OR('')))OR('160406715')))AND('')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' sz=1826654663 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0xffffffff8acdb606) NOT BETWEEN (0.3250949847000455) AND (NULL)))||(((((x'')OR(0.591818045734168)))OR('-1712370793')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=922216986 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' sz=546252953 unordered'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((((+ (x'')))OR(((('1853262177'))<((0.9500951861773408))))))AND(CAST(NULL AS BLOB))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-252248554'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', ' sz=-2135886416 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '-750075841 sz=-786936891 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', '-123601972'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1237924467'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((2.111693042E9)<>(x'')) THEN CAST(0.07148182453340146 AS REAL) WHEN (~ (NULL)) THEN json_array_length(NULL) WHEN (+ ('6')) THEN ((NULL) NOT BETWEEN (x'') AND (NULL)) END; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) NOT NULL))&(((x'29a1') NOTNULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (QUOTE('') IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '2043944666 sz=-1711010598'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '1976543221 sz=-1768965019 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE HEX(x'5195') COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (616288489 IN ('-1e500'))  WHEN (('-2000083598') IS FALSE) THEN ((5.56099735E8) ISNULL) ELSE CASE 0.5021158237152759  WHEN '0.98756823721977' THEN 368245217 ELSE '~쓕w' END END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '4 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=-446187541 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE load_extension(NULL COLLATE BINARY, CASE WHEN 'p ' THEN '-0.0' END); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '0 -1299326560'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE CASE CAST(NULL AS INTEGER)  WHEN (('1373731987') IS TRUE) THEN PRINTF(0.5109179508324451, 'jjg0s-?', '\r ') ELSE ((0.25029240071565306) NOT BETWEEN ('0.8943754578749827') AND (x'')) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=-138824448 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', '-779769985 0'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE ''  WHEN '8M?☶O' THEN '-1933201601' WHEN '1391631686' THEN 0.7203755363649544 WHEN '_勵뼛N땺\r' THEN 0.562149398300913 ELSE x'' END)IS(((((NULL)OR(x'')))OR(0xffffffff87e7c63a)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'' COLLATE BINARY) NOT BETWEEN (UPPER(DISTINCT 0.9446395618219394)) AND (0xffffffff95fa45fc)); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'')) NOT BETWEEN ((NULL)) AND ((((x'139a') IS TRUE)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=1844787360 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' sz=-1286442794'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('jD?~oWPK')AND(NULL)))AND(x'')) COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=869191080 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0X76e9a64f COLLATE BINARY))<((x''))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=1461103615 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((0.9826797370264438))>=((-1265080388)))) ISNULL); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '-309397410 2 sz=-1255143527 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((UNICODE(0.8349348115026067))-(CAST('' AS NUMERIC))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.8252231489700534)) NOT BETWEEN ((((0.5496457717817654)==('0.021508578444717097')))) AND ((((0.22383886522865437)==('Q'))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('1215050003' COLLATE RTRIM, (('') NOT BETWEEN (NULL) AND (NULL)), ((x'')OR('-1493555941'))))<((((x'')&(x'')), ((0.23430382148446516)<(x'')), CAST('1121974852' AS TEXT)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((- (NULL)))AND(((x'7500') NOT NULL))))AND(((0.38716737176690597)*(x'1bbc')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=-483460065 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-379409755 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', ' sz=0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' sz=1050409413 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1442431528 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1037948956 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('')>(x'')))%(((((((((((((NULL)AND(0.07017242619834452)))OR(x'')))AND(x'')))AND('-1453993848')))AND(0.4749415590069075)))OR('')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=-1895326019 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '2 0 sz=-647585831'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN CAST(x'dfdf' AS TEXT) THEN ((NULL) NOTNULL) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE '158569651'  WHEN 2086150057 THEN NULL ELSE '-1037948956' END) IS FALSE); -- 4ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=1281297953 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=-479334021'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1605744249'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.033573385566669) NOT BETWEEN (x'dd8ed3fd') AND (0.5536002864947536))) NOT BETWEEN ((('N') IS FALSE)) AND (((((-1325666351)OR(NULL)))OR(x'')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) NOT NULL)) ISNULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) NOT NULL))LIKE(CASE WHEN 0.4259213938495383 THEN 0x65f98fba ELSE -1.854117208E9 END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '-1435404886 0 sz=-499756243 noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1568054979 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=1185993721 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=-199365642 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2 sz=1993215882 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('t辺8gB^M')) BETWEEN ((CASE NULL  WHEN '1843944697' THEN ',NnlX}7!w' ELSE x'9e1c' END)) AND ((CAST('' AS BLOB)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((RTRIM(NULL))AND(UNLIKELY(x''))))OR((1233044776 IN (x'')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE LENGTH(0.7451389087171767)  WHEN ((-1265080388)IS('393674094')) THEN NULL COLLATE RTRIM WHEN (('rj')||('')) THEN CASE WHEN NULL THEN '-1207976878' WHEN 'KI' THEN -1.516361644E9 WHEN 0.023204143898410523 THEN 'd.}曗Rd9' ELSE 'u躝t' END WHEN (((0.6459373503204454))>((x''))) THEN CAST(NULL AS BLOB) WHEN 0.8593672044124808 THEN ((NULL)<(0x2685789d)) WHEN (NOT (x'')) THEN (NOT (x'35f6')) ELSE '-272832865' END; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (0.9406448264043429)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('1919809122')LIKE(NULL)) COLLATE RTRIM COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=9223372036854775807 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '2 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=934458466'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'c3e5', NULL, 0.5985276359923296)) BETWEEN ((1350119502, '', 0.849427359231829)) AND ((NULL, NULL, NULL))) COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('1926721789') NOTNULL))AND((+ (x'')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1842403024 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((1373091472 IN (0.2785617267877257))) IS FALSE); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((UNLIKELY(DISTINCT NULL)) NOT NULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ ('J+')); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '2 sz=-807736517 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULLIF((NULL IN ()), (x'' IN (NULL, '-1516361644'))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '2 2102978160 sz=1477646174 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', '1009790217 sz=575206680 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-1905444388 sz=1159637881 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' sz=1752454242 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', '1621416082 sz=-479334021 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=1434602655 unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((0.5282372567996532)OR(NULL)))AND('<LF+')) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', '0 0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN JULIANDAY(x'', x'', -1.29932656E9, 'j.', NULL) THEN ((x'') NOTNULL) WHEN CASE WHEN x'ca17' THEN NULL WHEN '' THEN 0.1717301257000312 WHEN 'Ky/~a/쏾g' THEN x'' ELSE '鲻ꫥ' END THEN ((((0x613d830)OR(0Xffffffffdf5830c2)))OR(0X44e6f123)) WHEN (((x'7898')) BETWEEN ((NULL)) AND (('|0M㴖d'))) THEN UPPER(0.6089177485489008) ELSE ((NULL) NOT BETWEEN ('211632085') AND ('sGWc&')) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '0 -146394921 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('-810100037' IN ()), 0.7802824095548199 COLLATE RTRIM, CASE ''  WHEN x'' THEN '1795138427' END))>(((0.11176870393711769 IN ()), ('-1634622365' IN ()), ((-2.037963688E9)-('-844421578'))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1309964189'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=1745167847 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL, 'd.}曗Rd9', x'de5c', '-479334021', 0.8861821363228782)) BETWEEN ((('443602714' IN (x'')), 0.027631114036260174, CAST(x'e56c' AS REAL), LENGTH('0.2752979995455306'), (((x'')) BETWEEN (('-1574731547')) AND ((NULL))))) AND ((((x'') ISNULL), (('k') IS FALSE), (0.6334429240895115 IN ()), CAST(0Xffffffff8169ae28 AS REAL), (('!荏') NOT NULL)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '-2090816475 sz=730103822 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((0.6293847090937117) BETWEEN (0.06841871047936476) AND ('962722047')) AS NUMERIC); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=-566959541 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=1567548719 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '1800969893 0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=1459736526 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.44742029724044485)) BETWEEN ((CASE ''  WHEN NULL THEN 'fe~-0' WHEN 1976543221 THEN x'' WHEN NULL THEN 0.7470401096569731 ELSE x'8c53' END)) AND ((CASE WHEN 'd+0-*<' THEN 1583603186 WHEN x'df0e' THEN x'' WHEN '' THEN 487161889 END))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=2129579143 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', ' sz=1345807687 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', '0 sz=-606981236'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', '0 sz=-1033273115'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', '-1097949354 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1512376920'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '0 -30411137 sz=242296697 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (CAST(0.5346625922386783 AS TEXT))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '-706833161'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL)GLOB(0x93f0ea5)) COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT ('1376229614')) COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', '0 sz=1727087632'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', '0 0 sz=1282883050 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT ('-282808665')) COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' sz=-1914851971 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', '663430069 sz=1751613450 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE TRIM(DISTINCT TRIM(DISTINCT 0.48144215812881963, '0.8645747795078302')); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE ('340806598' IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '395312579 sz=-129600101 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '-1616581883 -1709080132 0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ('2098898207' IN ()) THEN ((((x'5b11')OR(NULL)))OR(NULL)) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=487161889'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE HEX(CAST(NULL AS NUMERIC)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '0 -398233784 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((json_remove(NULL, x'f978')) BETWEEN (('-560717602' IN ())) AND ((0.5241248016496449 IN ()))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', ' sz=-754079383 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', ' sz=705159176 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', ' sz=187324768 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE (('R早') BETWEEN (NULL) AND (NULL)) COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1854117208 noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'') NOTNULL) IN (('' IN ()))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((x'' IN ()) AS REAL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=1199423259 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 0 sz=-606981236 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((LIKELIHOOD('''+\n⥈_ch_(', 0.06794997195875441))>>(NULL COLLATE NOCASE)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE LOWER(((((((((NULL)AND(x'')))AND('-0.0')))OR(0.2614891467476096)))OR('1022401365'))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.7478587304466627)GLOB(((NULL) IS FALSE))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2 sz=-876172094 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=1802429273 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE '1844575475'; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'a051' IN ()) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST('1?{k7' AS BLOB))-((NULL IN ()))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '2 0 sz=1558258981 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=55210170 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('*fIq') IS FALSE))>>(CASE NULL  WHEN NULL THEN '' END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 590102309'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '-2135886416 sz=-1851637821 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=1527499055 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', '1418219308 858317917 sz=83981180 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=1345807687 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((IFNULL('-291422954', 0X51e17c93))%(((((0.9830285458842289)AND(0.951250952243075)))OR(1854589612)))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' sz=1415708926 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' sz=-642948371'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '-1608341017 sz=-1712370793 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' unordered'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((((1.752454242E9) BETWEEN (NULL) AND (x''))) NOT BETWEEN (((((x'a6a6')AND(-4.79334021E8)))OR(0.9308565578203523))) AND ((NOT (NULL)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.18324205883034073 COLLATE BINARY) NOT BETWEEN ((3.66606768E8 IN ())) AND (CAST('' AS BLOB))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '1614078915 sz=992952085'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=-1493555941 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2 0 sz=347331887 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', ' sz=-1746265444 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE '213832586' COLLATE RTRIM  WHEN ((x'') ISNULL) THEN CASE WHEN '0.715661188992798' THEN x'' END WHEN (~ (0x57451ac8)) THEN CAST(NULL AS BLOB) WHEN ((((0x527b9975)OR('-1276121676')))AND(0.07013576158570922)) THEN LTRIM(0.6893724715906924) END; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 2111693042 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', '2 0 -1730754294 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST('1467433802' AS NUMERIC); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', ' sz=-799419832 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (((NULL) NOT BETWEEN ('-318347799') AND (1.199423259E9)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((NULL) BETWEEN (NULL) AND ('e灏祣')), CASE WHEN x'6521' THEN 2120734678 ELSE 0.6752388861635547 END, '&앧C', (((((((('?df')OR(0.5683237763362771)))OR(NULL)))AND('_勵뼛f땺\r')))OR('F')), (('0.6288708313994648')IS NOT(0xffffffffa76a9f1c))))<((CAST(NULL AS INTEGER), CAST(0.048858518497077674 AS REAL), (4.96402794E8 IN ()), ((x'') IS TRUE), CAST(5.1430591E7 AS INTEGER)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE NULL  WHEN 0xffffffffd78fd828 THEN '1926721789' END)<((((x'', NULL, '494327670'))=((NULL, '0.021508578444717097', x''))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=867224064'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', ' sz=989244074'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', '-2006572365 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '2 sz=1022401365'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=-1720842193'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-28685638 1008846938 sz=-1524946912 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '-1768965019 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=1373179980 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (NULLIF('FDG/1<氝', 7.30103822E8))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '0 sz=1714698802'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE UPPER(('3穜[4K?/P' IN (NULL))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((x'')AND(5.3076856E8)))AND(NULL)))%(CASE WHEN 0Xffffffffb5953d59 THEN NULL WHEN 0.5957384492976684 THEN '-1037948956' WHEN -7.91379121E8 THEN 0.04108761845108866 ELSE x'' END)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN NULLIF(732759977, '-1595882573') THEN (('-376760375')/(0.28573027972015397)) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '2102713019 sz=-1292585709 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=-1419332187 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=-1712370793 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((NULL)OR('5SV\r7')))OR('*<VX,')))/(CAST(x'' AS NUMERIC))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '1022401365 -238408629 sz=395312579 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '0 -844421578 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(x'' AS BLOB)) NOTNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=-129600101 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x'e696'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-589696757 sz=634079586 noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((-2.82808665E8) IS TRUE))AND((('') IS TRUE))))OR(((NULL)>>('0.8961823003626974')))))AND((x'' IN (NULL)))))OR('-701160311')); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', '863166673 -1060315090 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((-1847438959 IN ()))>>(((((x'')OR(1.416205993E9)))OR('2102713019')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((-1122023126)%(x'0fae')) AS INTEGER); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE UNICODE(((x'')-(NULL))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL)) BETWEEN ((CAST(',j+1E7z' AS REAL))) AND ((((x'4b1545e9')>(-318998551))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((1022401365 IN ()) AS NUMERIC); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=917149789'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (((x'')) NOT BETWEEN ((NULL)) AND ((0.9757786899486174)))  WHEN (NOT (0Xffffffffac7cc395)) THEN CASE WHEN x'e66e' THEN 0.5807373061734579 END WHEN ((4.87161889E8) NOTNULL) THEN ((('')) NOT BETWEEN (('-2037963688')) AND ((''))) WHEN (1 IN ()) THEN (('-1730754294') IS FALSE) ELSE ABS(DISTINCT NULL) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((x'a1ac' IN ()))OR(CAST('o*' AS NUMERIC))))AND(0.7662662309354782 COLLATE RTRIM)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '477957679 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((1.727087632E9 IN (x''))) BETWEEN (x'013d' COLLATE RTRIM) AND (((0.757943368931643)<=(NULL)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'3641')<=(0.9593028874669148)) COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '850796329 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('h8U' IN ())) BETWEEN (CASE WHEN '' THEN x'' WHEN x'8e61' THEN -3.73082741E8 WHEN '1383831925' THEN '-129600101' ELSE 0.6827782924515643 END) AND (CASE WHEN x'' THEN NULL END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=-601660098 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((''))!=((x'')))) IS FALSE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', '0 0 sz=-2037963688 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) ISNULL)) IS TRUE); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CASE WHEN NULL THEN 0.021508578444717097 END IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '-59172815 sz=1412816087 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((-531621906))<(('~긗~'))))AND((+ (-1.53158067E9)))))OR((NOT (x'')))); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((NOT ('1731118878'))) NOTNULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (((-392324437)<<(NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '-1516361644 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-1384706952'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1960526068 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0xfffffffff88ee483 COLLATE NOCASE) IS TRUE); -- 0ms;
DELETE FROM sqlite_stat1; -- 2ms;
DELETE FROM sqlite_stat1 WHERE CAST(((('1002590950', '-1797536644', 0.3150880182461462))>=((NULL, 0X310c4bf, ']NGG35'))) AS TEXT); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
INSERT INTO vt1(vt1) VALUES('rebuild'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 1ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
COMMIT; -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
INSERT OR IGNORE INTO vt1(c0) VALUES (1811586984); -- 0ms;
UPDATE OR IGNORE vt1 SET c0=NULL WHERE (((vt1.c0)<(vt1.c0)) IN ()); -- 0ms;
PRAGMA shrink_memory; -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (0Xffffffffecfc77e9); -- 1ms;
UPDATE OR REPLACE vt1 SET c0=1.51237692E9, c0=0.5459560205387628; -- 11ms;
INSERT OR IGNORE INTO vt0(c1) VALUES (0.4937831150795352); -- 0ms;
UPDATE OR IGNORE vt1 SET c0=NULL; -- 1ms;
END; -- 0ms;
REINDEX; -- 1ms;
INSERT OR IGNORE INTO vt1 VALUES (0.8252231489700534); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=874041220 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' sz=589366371'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE HEX(((('861434298', NULL, '')) NOT BETWEEN (('[G5kU*', '0.5840950004024283', 0.4245931894279439)) AND ((-3.79409755E8, 0.03692764292042894, '/cj ')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((0.4687566229269693)OR('S/')))AND('677814473')))||(MIN(NULL, x''))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', ' sz=474498124 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '-2085802353 sz=-599984507'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.046751219616839146 COLLATE BINARY)>(((NULL)<=(x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0Xffffffffc77669b1) NOT BETWEEN (-1.854117208E9) AND (1812044398))) NOT BETWEEN (NULL) AND (x'a6a0' COLLATE NOCASE)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) NOT BETWEEN ('-1702585020') AND (NULL)))||(CAST(NULL AS BLOB))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=1199423259 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((0.20800562921712684, x'', -1915579148)) NOT BETWEEN ((NULL, x'', x'7bea')) AND (('-2037963688', NULL, 'u4鋽Z#7'))))OR(HEX(0.38260233254820186))))OR(((0.8954815661070223) IS FALSE))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (COALESCE(x'', '1414736356') IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE GLOB((NOT (x'a119')), ('1557470660' IN ())); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST('O-K' AS INTEGER)) IS FALSE); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((+ ('t')), LOWER(DISTINCT 0.3889935174069151), ((((((((NULL)OR(NULL)))AND(x'')))AND(NULL)))AND('Z2'))))<>((x'' COLLATE NOCASE, '>-,~ᰗjQ' COLLATE RTRIM, ((-2.037963688E9)%(x''))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=-1363885058 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-345036376 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=-1570584534 noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'') NOT NULL))<=(NULL COLLATE RTRIM)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', '1883144965 sz=2110295427'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '-415256838 -645913713 sz=-1783081420 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((NULL IN (x'')) AS TEXT); -- 0ms;
DELETE FROM sqlite_stat1 WHERE TRIM(DISTINCT ((((((((x'')OR(0.11505391515336694)))AND(x'')))AND(x'987c')))OR(NULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '1037208479 994952606 unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '0 sz=294411359'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (NULL)) COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL IN (NULL))) NOT BETWEEN (((((0.2265992133979251)AND('-1854117208')))OR(''))) AND ((('') IS TRUE))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=600706845'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CAST(0.3382856981962461 AS INTEGER) AS BLOB); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((CASE 0xfffffffffdbb74a0  WHEN '-0.0' THEN 0.1522394769561073 ELSE 1580302124 END) IS FALSE); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((('0.32761450306687445')<>(x'248d0e52')) AS TEXT); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' sz=-1424450865 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' sz=1365503011 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=-27282935 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(0.5718195215672782 AS TEXT)) NOT NULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=2086150057'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-27282935'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((0.31182880099007515)AND(0.7424309535822742)))AND('-1579804560')))OR(')-䜺I')))OR(x'bbfd')))IS('6' COLLATE BINARY)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (((NULL)>=('fY^䖵잯')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' sz=741063312 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=-948657877 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((0.7586492915649803))>((NULL)))) NOT BETWEEN ('-1545602310' COLLATE RTRIM) AND ((+ (x'b444')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', '0 sz=1752454242 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ ((((x'')) BETWEEN ((NULL)) AND ((0.45170107127519465))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE TRIM(LIKE('-1712370793', 0.8149271144314172)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((-1531580670 IN ()))&(COALESCE(DISTINCT 9.62722047E8, x''))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULLIF('', 'QZ韫>')) ISNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((NULL, '-844800061', x''))>((0.38476684615652845, NULL, ''))))LIKE(CASE ''  WHEN x'' THEN x'' WHEN x'1e90aff1' THEN x'' WHEN 'FALSE' THEN x'' END)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE COALESCE(DISTINCT '', ((0.7586492915649803) BETWEEN ('e~8,b1\n.') AND (NULL))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(NULL COLLATE BINARY AS INTEGER); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (CASE NULL  WHEN 0Xffffffffc794798d THEN NULL WHEN '-2085802353' THEN -1.196610756E9 WHEN x'4908' THEN x'' ELSE NULL END)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', ' sz=447282351 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', '2 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((+ (NULL)))>(TRIM(NULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=-479334021 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (((0.01105297310432174))<=(('1418219308'))) THEN ((9223372036854775807)LIKE('163a8')) WHEN ('-1650407108' IN ()) THEN ((('')) BETWEEN (('v죥Zo党c')) AND (('423914305'))) WHEN ((NULL)LIKE(0.3150253579652855)) THEN x'5f0b' COLLATE NOCASE ELSE (('1775020945')LIKE('1029681206')) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '-1285529693 2 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', ' sz=1512376920 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 4ms;
DELETE FROM sqlite_stat1 WHERE ((((0.6479687077691972)%('2?')))|(NULL COLLATE NOCASE)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0xffffffff9e542f5d)) NOT BETWEEN (((NOT (x'')))) AND (((NOT (x''))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NULL COLLATE BINARY IN (((x'5608') NOT NULL))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE 366606768  WHEN ((NULL)>>(NULL)) THEN LIKE(x'e7fe', NULL) WHEN (0.2296982386463603 IN ('1299463827', -1579198893)) THEN CAST('()v3\r' AS TEXT) WHEN ((('	'))==((x'429f55eb'))) THEN (('')-('kS')) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=1025592670 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(TYPEOF(x'6799') AS TEXT); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', ' sz=-1299326560'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '1299463827 1416205993 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-137145711 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=2094050433'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=-252248554'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(-4.46187541E8 AS INTEGER); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((~ (-1.037948956E9)) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((CASE ''  WHEN NULL THEN x'c066' ELSE 0.41437210425721627 END, ((x'a78b') BETWEEN (0x6eace35f) AND (0.6551607420473168)), ((x'a5b2')>('-1363885058'))))<(((('-2046736759') NOTNULL), ((x'')>=(NULL)), ''))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=-1895326019 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '1391631686 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (x'' COLLATE RTRIM)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', '-1991686650 sz=-1350509386'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=322554434'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=329878751 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=-351714608 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', ' sz=-926515729 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1712370793 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((- (x'')) AS BLOB); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=1345807687 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE COALESCE(CAST('1825588837' AS REAL), LIKELIHOOD(x'', 0.38507805826638686)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', '0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((0.47781329676382)) NOT BETWEEN ((NULL)) AND ((-1.037948956E9)))) IS TRUE); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- ((NULL IN ()))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT ((NULL IN (x'', x'')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.1046808757129507; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1373731987 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', '0 -1012214576 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=2133764868 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.9781192149117408)|(CASE x''  WHEN 'TRUE' THEN NULL END)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((- (NULL)))OR(CAST(NULL AS NUMERIC))))OR(((((((((1547113465)AND(0.4523224888145476)))OR(0.7249149197409599)))OR('')))AND('-365145379')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=423914305 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((NULL)|(NULL)))OR((0.16907950182047127 IN ()))))OR((((NULL))<(('#?'))))))AND(((0.3752480761992617)!=('ANXSs恘wO')))))OR(CASE ']|txxao'  WHEN 0.004918604520484204 THEN -1617205977 WHEN '-415150632' THEN 0.241577935886218 WHEN 0X3e192067 THEN NULL END)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN 0Xffffffff98d6c90a THEN -663782689 END)>=(((NULL)>=('-1399628043')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', '0 2082049596 sz=2086150057'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ''; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '-1600601980'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (((NULL)==(1.55747066E9)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((NULL IN (NULL, 'i\Bv')))AND(((0.757943368931643)>=(NULL)))))OR(((((0.1959950648121609)AND(0.5445309216213086)))OR(0.8631075961358278)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=1633534942 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', '889887190 sz=-1895326019'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '0 -1081723729 sz=-701160311 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '4 sz=-1207976878 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((+ (0.2247312173049747))) ISNULL); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((((((((('-799419832')OR(x'')))AND('879418436')))AND(NULL)))AND(NULL)) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '-633440079 sz=-209533451'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((NULL)*(-2.000083598E9)))AND(((((((((((((NULL)AND('\n&J%''')))OR(x'')))AND(0X5cd51dc4)))AND('1299463827')))OR('1751616073')))AND(0.4348235261604215)))))AND((((NULL, NULL, '\]', -8.44421578E8, NULL)) BETWEEN (('8Vp7&', 208215878, NULL, x'', NULL)) AND ((0.4386856912585556, x'', 0xffffffff8c753424, 'yOZ4[3x7o', '-1275613806'))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=1265407933 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=1583603186 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN x'' THEN ((0.4324350562470055) BETWEEN (0.058482769757596254) AND ('JP4)m)s')) WHEN (('111475294') ISNULL) THEN (0xffffffffe2de6cf4 IN (1476791289)) WHEN (((']NGG35'))>=((0.8617528501910674))) THEN CAST(0.1195229090309059 AS REAL) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', '1743282264 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', '1388319405 4 sz=-1808137136'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((NULL) NOT BETWEEN (NULL) AND ('-1077517823'))  WHEN (((NULL))>=((-272832865))) THEN x'' END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', '2 0 sz=-1224480885 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((0.8820790664251931) ISNULL) AS BLOB); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((LIKELIHOOD(x'', 0.38957605115823))!=(CAST('Kq暓 #櫘\_' AS INTEGER))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(ABS(0Xffffffff999c4d64) AS TEXT); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((-104531340)) BETWEEN ((-3.18998551E8 COLLATE NOCASE)) AND ((COALESCE(x'', x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' sz=-272832865'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=-220702369 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1764259789 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', ' sz=1442713901 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN -1.516361644E9 THEN '-1299326560' WHEN x'' THEN '-1035498754' WHEN 0.8458788813356828 THEN x'' END) IS FALSE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=-129600101 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'')) BETWEEN (((('0.0050092497392378865')<<(x'45b3422f')))) AND (((NOT ('1056191779'))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((LIKE('', 'K'))>=((+ ('1199405937')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1546045378 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-847441751 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' unordered'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((((0.7151944402292026)*(0.7490664288730856))))<((((x'')>(0.7988657162163184))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 sz=727217564 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', '0 sz=1717565480 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '0 sz=-1754207273'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE CAST(NULL AS NUMERIC)  WHEN CAST(NULL AS INTEGER) THEN -7.01160311E8 COLLATE NOCASE ELSE (((((((((((('')AND(0.025721542313331125)))OR(-1.730754294E9)))OR(x'')))OR(x'ca9b316a')))AND('-1305392499')))AND(NULL)) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1345807687'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'' IN ()))+(((NULL)-(-2.72832865E8)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '0 0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((CAST(0xcd270e8 AS TEXT))OR(json_quote('^P'))))AND(NULL COLLATE NOCASE)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-102810015 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', ' sz=145438631'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (((('1352T1706T-2241704485851468825T1376T1749:-4900891931758952715TV4')OR(0.12755168269076267)))AND('1614078915')) THEN '' ELSE ((0.40099915969128663) BETWEEN ('-1668395534') AND ('1095827308')) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=1574269321 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-2091480468 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', '228574826 1418219308 0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '-791379121 sz=-2007596215 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1245677905 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((((-235667238))<>((x''))) AS NUMERIC); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', '0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ ((((('-799419832')AND(827724647)))AND('-2037963688')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=1512376920 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ABS(DISTINCT ((x'4681') NOTNULL)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' sz=2086150057 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN x'c68a' THEN '' WHEN x'22e4' THEN '-1e500' WHEN x'' THEN NULL END)OR((('T>t.歁y矩n')||(NULL)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('Ꟶ6.C')-(0Xffffffffd0d4834f)) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', '-2135896531 -946570867 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('') ISNULL)) BETWEEN ((+ (NULL))) AND (((0X571ad4f5)+('vr')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((-4.79334021E8)*(1084903579)))AND(CASE WHEN '-1493555941' THEN '' END)))OR(NULL)))OR(json_array_length(x'', x''))))OR(LIKELY('VKt'))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-2037963688 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CAST(x'' AS INTEGER) AS NUMERIC); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-645913713 0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=1866465591 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=-27282935'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=423914305 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', '-1712370793 0 sz=-720338128 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((+ (x'')))+(NULL COLLATE NOCASE)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '0 -271064132 sz=293106574 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((x'e57a384a' IN (x'4217')) AS NUMERIC); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) BETWEEN (x'') AND ('lYVRd')))IS NOT(((0.31321351984491563)GLOB('>W\n''I/l')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((UNLIKELY(''))OR(CASE 0X232c3f25  WHEN '0' THEN NULL WHEN '-748375322' THEN NULL WHEN 0x3c77da7f THEN 1743282264 ELSE x'' END)))AND((~ (0Xffffffffbcf5c1b9)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=496402794 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (LIKELY(DISTINCT '') IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=395312579 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1744226657'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', ' sz=1 noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((NULL, 0.5666168942326943, '')) NOT BETWEEN ((((x'7260') ISNULL), ((((NULL)OR(NULL)))OR(NULL)), ((2130793624)<=(0.760170638264607)))) AND (((~ (NULL)), ((-799419832) NOT BETWEEN (x'39cc') AND ('8?\rncvB')), (- ('-1973671562'))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', '2 -1489334633 sz=992485435 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 sz=1911767416 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', '0 342401570 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE MAX(CASE '160406715'  WHEN x'' THEN 2.102713019E9 ELSE x'' END, ((0.11849020975502489)-(x'')), ((NULL)*(x'14f9')), (+ (-4.79334021E8)), x'', 0.37217680694586874); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 sz=730103822 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'') NOT BETWEEN ((((x'', '-354661631', x'')) BETWEEN ((0.3940171783991807, 0.42258725950302645, 0.046933557740778786)) AND ((NULL, 0.5048801467943298, x'')))) AND ((((x'', 0.98756823721977, NULL))=((x'', NULL, x''))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '-1018639979 -43590423 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST('-1207976878' AS TEXT)) IS FALSE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '4 sz=1029681206 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((('1704583418')OR(x'')))OR('1391631686')))OR('-1864324793')))OR('FDG/1<氝')) COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((0Xffffffff8af4d9fd)AND(NULL)))AND('H]'))) BETWEEN ((5.3076856E8 IN ())) AND (((NULL) BETWEEN (0xffffffffa5a98c12) AND (x'')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0X3461a828; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=-1673510561 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.6542841809138059)OR(CASE '-1196610756'  WHEN 'gU' THEN x'' WHEN '269569253' THEN x'ccd3' WHEN NULL THEN 'q⎏' WHEN 0.20800562921712684 THEN 0.2524596842050335 WHEN NULL THEN NULL END)))OR(((NULL) NOT BETWEEN (NULL) AND (1762774496)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '0 560194925 sz=-1060708770 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 sz=-1712370793 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', '0 0 sz=-2037963688 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE '0.7988657162163184'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '2128544299 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-282808665 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE TRIM(NULL, '') COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', ' sz=-706833161 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' sz=-1981343558 unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=487161889'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT ((NOT (774380593)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE '''>*䍌X~Q'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=2117947070'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0X4a8d9c06 IN ('1926721789'))) NOT BETWEEN (((x'6261')>=(x''))) AND (CAST(0xffffffff88c92572 AS NUMERIC))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.8402474846406084 COLLATE BINARY)LIKE(CASE WHEN x'' THEN x'' WHEN 0.43663310116785226 THEN 0.5489661747290523 WHEN NULL THEN NULL ELSE '-1131829736' END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=676783559 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (INSTR('556099735', NULL) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', '2'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '632787681 sz=-1265080388 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((NULL)<('-948657877')), ('>a' IN ()), ((NULL) BETWEEN (NULL) AND (0.35978323049181693))))<((LAST_INSERT_ROWID(), CASE WHEN '' THEN 0.1261792211935454 WHEN 0x8672c05 THEN '1588859662' WHEN x'' THEN 'f,B}' END, x'0e54' COLLATE RTRIM))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=-1455752438 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((+ (NULL)))AND(COALESCE(0.867063351934759, x'', NULL, NULL))))OR(CAST(NULL AS TEXT))); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=581868987'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE MAX((- (NULL)), (('-1730754294') BETWEEN (x'') AND (x'')), UPPER(DISTINCT 0.8361175157218953), (NULL IN (0Xffffffff86872458))); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', '-426245882 0 sz=1713008321 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x'add2'; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) NOT BETWEEN (x'') AND ('1141786426')))>>('1557470660' COLLATE NOCASE)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE LOWER(CAST(NULL AS INTEGER)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' sz=-1076615704 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('<WRᗡh'))=((x'')))) IS TRUE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '-1516361644 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (x'388b' IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (CAST(0.20800562921712684 AS REAL))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((NULL) ISNULL))AND(((0.7356727730391598) NOT NULL))))OR(LENGTH('MJB'))))OR(((0X6316ea2d) BETWEEN (x'') AND ('-876742846')))))AND((('k}d\_')%(x'')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('395312579') IS TRUE)) IS FALSE); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NOT ('-2085802353'))) ISNULL); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', ' sz=1954261454 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '4 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', ' sz=1614078915 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-799419832 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', '-1428041135 2'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '0 0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'')<<(x''))) BETWEEN (((((0X383a5df6)AND(NULL)))OR(x'7aabcd97'))) AND (x'')); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=-345484440 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '0'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '1383831925 sz=928109916 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=1938027770 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-392324437 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('')-('fzy/')))|((NOT ('594091919')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0Xffffffff872d5c9b; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 -1991887774 sz=-483906812 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((x'')||(0Xffffffffcf5d6b24)))OR(0.9406374704646245 COLLATE BINARY)))OR(x'8e07')); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=570025480 noskipscan'); -- 3ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' sz=-924866263 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'') IS TRUE)) NOT BETWEEN ((0Xffffffff805578b3 IN (0.7121634211512651, '#p'))) AND (((NULL) NOT BETWEEN (x'') AND (x'')))); -- 3ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('-291422954' IN (0.14989262030198536)))AND(((((x'3790')AND(0.07702894201396704)))OR(0xffffffff857a7121)))))OR(((0.2666000185356334)/(0.5145413290432556)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'' COLLATE NOCASE)OR(CASE WHEN NULL THEN NULL END)))AND((('') NOT BETWEEN (x'fc12') AND (x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-249567282 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (((0.6924427942164033) ISNULL))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((UPPER('1926721789')) IS FALSE); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((((CAST(x'' AS INTEGER))AND((('-467206341')<('-k-x\n')))))AND(((x'05eb')<<(0.8633508055953855)))))AND((('2086150057')+(NULL)))))AND((('jD?~oWPK') NOT BETWEEN (0.652072717606738) AND ('')))))AND((~ ('㎌')))))OR('729916454')); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '2 sz=-282808665 unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1039972281 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '910385397 0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1104949017 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '2 0 sz=1022401365 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((NULL)) NOT BETWEEN (('-1453993848')) AND ((NULL))))OR((+ (0.45722759629310716)))))OR((((1.752454242E9))>((0Xffffffffa75923ae))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('1234180947' IN ()) IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST('' AS REAL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'' IN ()) IN ((((((((('-706833161')AND(0.7722795201775413)))OR(x'')))AND('')))AND('1')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1608341017 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1673435833 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (LENGTH('-129600101') IN (((x'') ISNULL), CASE WHEN 0.5154866310624211 THEN x'e735' END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '1022401365 sz=1512376920 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' sz=1743282264 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', '-1690652090 sz=-867457750 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '4'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL)) NOT BETWEEN (((0.6937345087165963 IN ()))) AND (((('') IS FALSE)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((0.9077415694829984) IS FALSE) AS NUMERIC); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=-1265080388 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL COLLATE BINARY)<=((('') BETWEEN (0.9536249134630518) AND (NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '0 sz=-787016196'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CAST(-1523396082 AS INTEGER) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((((('2011230740')AND('1976543221')))AND('B')) AS REAL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-844800061 sz=-1453993848 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE UNLIKELY((('&i/P/[C<') NOT BETWEEN (0.9343222157783985) AND (943981444))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=-822062364 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' sz=-484908864 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', ' sz=-114086674 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.4089361617806989 IN ()))-(LENGTH('c\'))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', '-1704098914 sz=-1453993848 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT ((((4.96402794E8))==(('0.0050092497392378865'))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', '0'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) NOT BETWEEN (0.5818497718201916) AND ('')))-(CASE '-55904412'  WHEN '-1093621027' THEN NULL WHEN 0.35031998009055787 THEN x'912f' WHEN NULL THEN NULL ELSE x'' END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '225206878 sz=-1652526457 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.3388478487580001)!=('-606981236')))==((((('-30411137')OR(0.38716737176690597)))AND(x'3524')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=194457345 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' sz=-537591460 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.7533957692090931) NOT NULL))+((('0.004918604520484204')AND(x'9ebb')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1416872681 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT ((((((((('0.6979957480176251')AND(734361313)))AND(0.5719990700359635)))AND(0xcf91873)))OR(NULL)))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=1547072625 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '0 sz=1752454242 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '2 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (((NULL) BETWEEN (NULL) AND ('163a8')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' sz=1516476294'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((LIKELIHOOD(0xffffffffcdab2636, 0.43048491932736577))LIKE((('')%(NULL)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((CASE x''  WHEN '-2085802353' THEN 0.8782153735011312 ELSE 'YE\*5:1472:E1' END)OR(((x'')+(0.07277910358897177)))))AND(((x'a617') NOTNULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.6433637104970101; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=492579141'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=20541989'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-184264989 1639337208 sz=79860854'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', '842177187 sz=-606981236 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '2'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE TYPEOF(DISTINCT (((x''))>=((NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' sz=968580029 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('-797182379')LIKE('')))=(0Xfffffffffe2ff67f COLLATE BINARY)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL)) BETWEEN (((NOT (NULL)))) AND (('T' COLLATE RTRIM))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', ' sz=-1299534753 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '-1493555941 sz=1515629464 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ ((((NULL))!=((0Xc3c48f7))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' sz=1391631686 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1107927317 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((- ('0.7586492915649803')))OR(CAST(0.372333948385969 AS BLOB))))AND(CAST(1.056191779E9 AS INTEGER))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.8700088134113689)|(NULL)) IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.8962241466959198; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=-536735376 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN x'' THEN x'7ab4e940' WHEN 'cg' THEN '0.757943368931643' WHEN 0Xffffffffaeb4c3fe THEN x'' END)+(highlight(NULL, x'', '2111693042', '4!&]	0謆!'))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '0 -392324437 sz=1245881571 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '-40255805 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((x'')) BETWEEN ((x'')) AND ((x''))))-(((x'')>=('Y#')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('1141786426') NOT BETWEEN (NULL) AND (-1161307186)) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1373731987 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', ' sz=-282808665 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '-51641616 0 sz=168995419 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(0.7501125488923428 AS TEXT); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('1208990235') NOT BETWEEN (1192842740) AND (0.8190916236103379)) COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' sz=-1265080388 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '2 sz=1411952334'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-180922711'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) NOT NULL)) NOT BETWEEN (SQLITE_VERSION()) AND (((((((((x'4928')OR(0.0902283938409616)))OR('968773552')))AND(-7.01160311E8)))OR(NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' sz=-1305787647 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', '0 sz=510188412 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=-706833161 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.815082802137804 COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '-706833161 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE TYPEOF(DISTINCT (0.028547187164844723 IN ())); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1350103328 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', '0'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (((0.23169877597566613)<(NULL)))); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CASE WHEN 0.18615099239985278 THEN '' ELSE x'bb3e' END AS BLOB); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- ((('9223372036854775807')<=(-8.44800061E8)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '340269215 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL)&('319479427')) COLLATE RTRIM COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1764845324 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', '2 sz=1926721789 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=1041657174 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=-561158146 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CASE WHEN NULL THEN '' WHEN '1029681206' THEN 0.1717301257000312 WHEN '-1485421797' THEN x'' ELSE NULL END IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '-706833161'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '0 sz=530768560'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(x'' AS NUMERIC))*(((x'')<('15.')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1884290270 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('439715985') NOTNULL)) NOT BETWEEN ((NOT (''))) AND (((((-1.196610756E9)OR(0xffffffffadfbb9f1)))AND(0.6711472378320115)))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-673946288 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CASE WHEN 0.8465725227521554 THEN '/Nmb-' ELSE 'ID%j^U{' END IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((PRINTF('1976543221'))!=((('!(YzY.v6⟤') IS TRUE))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-9223372036854775808'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '1374266216 sz=-233408038 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((((0.475971284803708))<=((x''))) AS NUMERIC); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' sz=-1037948956'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1696078385 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULLIF(JULIANDAY(NULL, NULL, x''), CAST(x'' AS BLOB)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (((0.46405225514880954)*('G笜_U?侮T')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1299463827 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(1.740038772E9 AS INTEGER))*((x'' IN ()))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', '-1616104589 sz=-252248554'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ''); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((((0Xffffffffd9d6559a)-('-851147247')))<(CAST('EfWzIccx' AS REAL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', ' sz=1035663345 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE 0.09186263783141724  WHEN '-373082741' THEN x'' WHEN '-1895326019' THEN -1.757897139E9 WHEN 0.40626632642700244 THEN 0.7557677189905211 WHEN '' THEN x'' WHEN ',nnlx}7!w' THEN 0.27377092012451565 ELSE '3{*<' END)<=((('747122150') BETWEEN (x'') AND ('-2114361089')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL)) BETWEEN ((('-787903575' IN ()))) AND ((((x'58bc') NOT BETWEEN (530768560) AND ('\ro'))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' sz=855505396 unordered'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((-1529518944)LIKE(CASE WHEN '-799419832' THEN NULL END)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', '0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=-1854117208 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN JULIANDAY(0.47803212990549304, 'Qu,G', 1.752454242E9, NULL, '94002716') THEN ((NULL) IS TRUE) ELSE CASE NULL  WHEN x'' THEN x'948b' WHEN 0.8267259870022615 THEN x'' WHEN '-363386404' THEN NULL ELSE NULL END END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-7368141'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.3681964502258743)==(1.926721789E9))) NOT BETWEEN ((- (x''))) AND ((('') BETWEEN (0X5cf94689) AND (NULL)))); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((NULL COLLATE RTRIM)>=((((('2122843358')AND(NULL)))AND(0X610511c8)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN x'' THEN 1795903834 ELSE '919629643' END) IS FALSE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=-1207976878 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '-2098037311 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' sz=692611439 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((x''))<>((x'1761')))) IS TRUE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=864251559 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((x'')&(NULL)))OR(CAST('' AS NUMERIC))))OR((x'' IN (NULL, 0.22533036461138267)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=522398667'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '2 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (((x'')&(-1144291872)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=730103822 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ ((- (NULL)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '0 0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL)) BETWEEN ((TYPEOF(0Xffffffff890963ce))) AND (((('-1453993848')AND(0.535993078671653))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=496402794 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'f3c5')==(0.6551112852974376))) IS FALSE); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((7651861, 0.12686509359963993, NULL))<=(('', '-2085802353', x'dcd4'))))IS(CASE '-1838815418'  WHEN 0.9702857030079571 THEN x'bea5' END)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', ' sz=-1098234019 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '1569023450 sz=465847442 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' sz=746640457 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((HEX(DISTINCT 0.9992243046977959))OR(((0.12603523892000623)<<(NULL)))))AND(NULLIF(DISTINCT 0.5428721651769381, x'c08c'))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-1035514805 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '1614078915 0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'')!=(x''))) BETWEEN ((('1381800210') BETWEEN ('0.8252231489700534') AND (-1421973351))) AND (((0.4685273984025988) BETWEEN (NULL) AND (x'')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '-1331737344 sz=-1432621662 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '0 0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1815290972'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '0 sz=1148204610'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1344886754'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=328706072'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((NULL, '', x'')) BETWEEN ((NULL, 0.6358408631096969, NULL)) AND ((NULL, 0.648166590680222, NULL)))) ISNULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((~ ('-2070224304')) IN ((~ (0.46618234875894415)), (((''))<>((x''))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', ' sz=1217405739 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=2103518639'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.7117430294533297; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '-272832865 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '0'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- ((((('')OR(NULL)))AND(x'0c23371e')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=-1779545114'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('-1103000796')OR(0.9928031177485283)))OR('-1324407585')))|(((0Xffffffffd059d248)+('-1757897139')))); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1895326019 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=858595066 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.5363087848476086; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', ' sz=-1299326560 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=55864072 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=757465683 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=-948657877'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE LIKELY(DISTINCT ((0X73ae72a5) NOT BETWEEN ('8M?☶O') AND (NULL))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'' COLLATE BINARY) IS TRUE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 sz=-1880285610 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((CASE WHEN x'cc5e' THEN 174483889 WHEN 0.40952852287565955 THEN 0.21696135502405867 WHEN x'' THEN 0x1 END)AND(((((((((x'')AND(0Xffffffff98d6c90a)))OR(x'')))OR(0.3752480761992617)))AND(NULL)))))OR(((0.8783251996160636)!=(NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '-1645649890 2 sz=2120729209 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '-1446572376 -1487555268'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=-232079744 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '-1363400468 sz=998968689 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' sz=3366685'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=-1708552146 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (('-1942834892') NOT NULL)  WHEN (((NULL, '931680123', 487161889))<>(('-948657877', 0.35847090750563904, NULL))) THEN (+ (x'')) WHEN ('︖)Zu' IN ()) THEN (NOT (-7.91379121E8)) WHEN ((((1.299463827E9)OR(0.15303132319259394)))AND(NULL)) THEN CASE WHEN '-1753901605' THEN NULL END END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'') NOTNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '881501666 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=2111693042 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE json_object((((0x477dbf1b)) NOT BETWEEN ((NULL)) AND ((x''))), NULL COLLATE RTRIM); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '1202073618 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '0 0 1897177031 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE load_extension(((((((((NULL)OR(x'')))OR(x'cc65')))AND('0Y')))AND(NULL)), (('0.05180003588313287')+('淟s\'))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((1.727087632E9) IS FALSE))OR((('')<=(0.6581621480107716)))))AND((~ (0.421927464998628)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((x'')OR('206187150')))AND(NULL))) BETWEEN ((('') NOTNULL)) AND (((x'')AND(x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1998251859'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-1860327974 sz=-1290656124 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '0 sz=-1635545973 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-1399153107 0 sz=183777038 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'ce66') BETWEEN ('sgwc&') AND (NULL)))IS(((0.7644147086829896) BETWEEN (1013037730) AND (0.21754855697167363)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=786848472'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' sz=2017761591'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=-601841078 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1247854482 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '2 -1768965019 noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '1976543221 0 sz=-47197847 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' sz=-235031567 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=-220293213 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('-2027070309') NOT BETWEEN (0X564408aa) AND (0Xffffffffd938dfe1))) IS FALSE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NOT (NULL))) BETWEEN (((0.38407781446286426) NOT BETWEEN (0.07067035168403324) AND (''))) AND (((((NULL)AND('[')))OR(x'46e9')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.3736066227132203) NOT NULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULLIF((0.5512696556504599 IN (NULL)), 0Xfffffffffcfe9b47 COLLATE NOCASE); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=-881970456'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=810939035 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '0 275141845 sz=1266768336 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'' COLLATE RTRIM) IS TRUE); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '-1180539866 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (CAST(0.18600226525456942 AS TEXT))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', ' sz=-166305229 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (('C&')<=(NULL))  WHEN ((('u줖xK'))<(('KP\nHNm_'))) THEN 'i' COLLATE NOCASE ELSE (NOT (NULL)) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=-1060455973 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT ((NOT (x'')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ ((+ ('-1265080388')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((('-1e500')AND(0.38519057529997136)))AND(0.5961849652011345))))>(((('-1207976878')IS('H鲻'))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', '-318347799 sz=-651182642 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ''); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (+ (CAST(0.9402852173858652 AS BLOB))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '2 sz=-645913713 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', ' sz=1095610890 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)+(NULL)))-((NULL IN ()))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((NULL)OR(0.7608844186194623)))OR(0x7c581fa9)))AND(((x'') NOT BETWEEN (NULL) AND (438008577)))))OR(NULL)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 2111693042 sz=1014487679 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(0.47443883358899386 AS TEXT))IS(((0.34710846525605665) NOT NULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'' COLLATE BINARY))>=((((('-1802713985', NULL, '-()')) BETWEEN (('-887249944', '-1706917928', x'')) AND ((NULL, NULL, NULL)))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '1088381747 0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1299463827 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-113227294'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', '2 -1571746143 sz=-282808665'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=-464479012 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 sz=-1854117208 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('o?')) NOT BETWEEN (((+ ('2^9_S຀jK')))) AND ((''))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=1792329566 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', ' sz=1944800774'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST('\<AST类*' AS NUMERIC)) NOT NULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2086150057 -291422954'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', '535781622'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT ((('') NOTNULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1003361165 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '0 sz=-379409755'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((LOWER(x''))OR((((('{ !RQ[짋L')OR(x'')))AND(0X78b77760)))))OR(('0.5282372567996532' IN ('MSw-r2', 0.6549713269271247)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('|Q^lwPt)' COLLATE RTRIM))>((UNICODE('')))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' sz=140784272'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '0 0 sz=-982446547'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ ((('-318998551')<>('TatTD**')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1405454718 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '패\銢C>'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '1 sz=374773497 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((((CAST('' AS TEXT))OR(((((1)AND(NULL)))AND(NULL)))))AND(((('iQ)~\n\r,)u')) NOT BETWEEN ((0.86181032821805)) AND ((x''))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=-479334021 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE json_extract(((x'') IS TRUE), 0.15520659839233508 COLLATE BINARY); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE json_patch((((0.25469480810095724)) NOT BETWEEN ((x'b59c')) AND (('-706833161'))), ((x'66d6') IS TRUE)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', '0 0 sz=-252248554 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((NULL) IS FALSE) AS INTEGER); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (CASE WHEN 0Xffffffff80b0f5b0 THEN 0.634897911709616 ELSE x'c44f' END)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE -1175008146  WHEN 0.5838980066625356 THEN NULL END)%(CAST('ws?[]yﺤ<' AS TEXT))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE LOWER(DISTINCT (((('6~O')AND(x'')))AND(NULL))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) NOTNULL)) NOT NULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (((0xffffffffd059d248)) NOT BETWEEN ((NULL)) AND ((x'4a4a')))  WHEN ((NULL)/(0.8035367448247693)) THEN ((NULL)OR('')) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('[g5ku*' IN ())) IS FALSE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=491954365 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=1871580315'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-30411137 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '0 0 sz=-30411137'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1508490452 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '2 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '496402794 sz=1838421457 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=752633318 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '-1207976878 2111583283 sz=637017787'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1196610756 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', ' sz=973656079 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('9Z')) NOT BETWEEN ((((('R	E'))>(('#%f('))))) AND ((NULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', ' sz=-1183818219 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE GLOB(((x'') BETWEEN ('0.857257919279575') AND (NULL)), '' COLLATE BINARY); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', '1213141890 sz=-603187008 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', ' sz=-1455429637 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('F')OR(((((0x30e7dc6c)AND(0.7586492915649803)))AND(x'')))))OR(CAST(0.696247516087697 AS NUMERIC))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', '9223372036854775807 2 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ ('%뀑' COLLATE NOCASE)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=999927514 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((0.48355534296725367)AND(((NULL)&(x'')))))AND(((0X6acba3cd)||(x'')))))OR(('' IN ()))))OR(CAST(0.9176074409999626 AS INTEGER))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('' IN ()) IN (((1710854074) BETWEEN (0.10872594860956475) AND (0Xffffffffcda55fc3)), ((x'b3de') BETWEEN (x'd6e1') AND (0.7550729459347962)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=-998014757 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1661168145 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '925021129 sz=519112356'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '0 sz=-1765919637'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((+ (0.7722795201775413)))>(TOTAL_CHANGES())); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '1556707118 0 sz=2086150057'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', ' sz=-291422954 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '-1349971033 2'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('483069766'))<=((x'833c719a'))) COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' sz=1197813527'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-373082741 -1127508415 sz=-1309846926'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', '1209527416 sz=1626494138 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE MIN(((('r恆NaNꍮtUQ''', '-1037948956', x'')) NOT BETWEEN ((NULL, x'', x'')) AND (('', 0.2016374924369867, -291422954))), ((((0.17030570871581818)OR(NULL)))AND('-1515287107'))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((+ (NULL)) IN ((('<,')GLOB('0.06381376117960602')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE -479334021; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (x'9c22' COLLATE RTRIM)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN x'' THEN 0Xffffffffc794798d WHEN NULL THEN x'9318ae0c' WHEN 0X42b06101 THEN '-1039240001' END)/(TYPEOF(NULL))); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '119698362'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (0.71063643733828 COLLATE RTRIM)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '-537719309 sz=281920094 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', ' sz=237754170 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((- (x'')) IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(NULL AS TEXT))GLOB((('1418219308')>>('-282808665')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=-706833161'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=-633440079 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=1383831925 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(0.5560254008850649 AS TEXT))%((x'09b0' IN (x'3176')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '1141786426 487161889 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', '2 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('') BETWEEN (NULL) AND (x'')))>((-1299326560 IN (0.021508578444717097)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '220467721 sz=-1012214576 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=-821588909 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((((888654679, 0.21696135502405867, -1299326560))<((0x4413d43, 0.499706475752988, x'f160'))) AS NUMERIC); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((NULL)OR(',U0*al')))OR('-272832865'))) BETWEEN (((((((((x'0898')OR(1752454242)))OR(0.3044439643230735)))AND(0.35846817122068775)))OR(0.3963954294484293))) AND ((((('')OR('4')))OR(0.8725464297307634)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '4 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('-1746990670') NOT BETWEEN (x'9069') AND ('-1364190947'))) IS TRUE); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((((('-1363885058')) BETWEEN ((NULL)) AND ((x'')))) BETWEEN ((+ (NULL))) AND ((~ (NULL)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((0.2515316780750986, NULL, 0.19791585579045645))<>((NULL, x'', 'Jh'))))<<('1926721789')); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('-844421578')OR('')))AND(CAST(x'3ac0' AS REAL))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR ABORT INTO vt1 VALUES (0.21342521485407306), (-554027476), (NULL), (NULL), (-2.027070309E9); -- 0ms;
REINDEX; -- 0ms;
REINDEX; -- 0ms;
UPDATE OR ABORT vt0 SET c0=0.7590080805548785, c1=0.5731007267449577, c1=NULL; -- 0ms;
INSERT INTO vt1(vt1) VALUES('rebuild'); -- 1ms;
CREATE VIRTUAL TABLE vt2 USING fts5(c0, , columnsize=1); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
CREATE TEMP TABLE t0 (c0 INT , c1 REAL NOT NULL ON CONFLICT ROLLBACK UNIQUE , c2 TEXT  CHECK ( (((c0)) NOT BETWEEN ((((NULL) BETWEEN (c1) AND (NULL)))) AND ((((c0)!=(c1))))))); -- 0ms;
UPDATE OR IGNORE t0 SET c2=0.2181968453940646; -- 0ms;
UPDATE vt1 SET (c0)=(NULL); -- 0ms;
INSERT OR ROLLBACK INTO t0(c2, c0) VALUES (NULL, 0.6965162973978585); -- 0ms;
INSERT OR REPLACE INTO vt1(c0) VALUES (0x4b4c1f10); -- 1ms;
INSERT INTO vt2(vt2) VALUES('rebuild'); -- 1ms;
PRAGMA shrink_memory; -- 0ms;
INSERT INTO vt2(vt2) VALUES('optimize'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO vt2 VALUES (x''), (-6.06981236E8), ('556099735'); -- 1ms;
REINDEX BINARY; -- 0ms;
INSERT OR REPLACE INTO vt1(c0) VALUES ('IKSdl*s'); -- 0ms;
INSERT INTO vt2(vt2, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
UPDATE OR IGNORE vt0 SET (c0)=(x'') WHERE CAST(vt0.c1 COLLATE RTRIM AS REAL); -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT OR FAIL INTO t0(c2, c1, c0) VALUES (x'cad1', NULL, x'f242'); -- 1ms;
INSERT OR ABORT INTO vt1(c0) VALUES ('1496058249'), ('72392232'), ('<LF+'), (-392557013), (x'df93'); -- 0ms;
PRAGMA wal_autocheckpoint; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
REINDEX RTRIM; -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES ('MtyGY?tM	', 0.795635693274708); -- 0ms;
INSERT OR IGNORE INTO t0(c2) VALUES (1348340313); -- 0ms;
PRAGMA defer_foreign_keys; -- 1ms;
INSERT OR IGNORE INTO vt1 VALUES (0.12131084205081577), (NULL), (0X6a8c003); -- 0ms;
UPDATE OR IGNORE vt0 SET (c0)=(-1.453993848E9); -- 1ms;
DROP TABLE t0; -- 1ms;
INSERT INTO vt1(vt1, rank) VALUES('automerge', 5); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 436852173); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('crisismerge', 293343473); -- 0ms;
INSERT INTO vt1(vt1) VALUES('rebuild'); -- 1ms;
PRAGMA shrink_memory; -- 0ms;
ANALYZE vt0; -- 0ms;
UPDATE vt0 SET (c0)=(0.36337574683051066) WHERE vt0.c0; -- 1ms;
INSERT OR IGNORE INTO vt0(c1) VALUES (-446187541), (NULL), (0.8840441226263317); -- 0ms;
PRAGMA defer_foreign_keys; -- 0ms;
ANALYZE; -- 0ms;
PRAGMA application_id; -- 0ms;
INSERT INTO vt2(vt2, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
ANALYZE; -- 0ms;
INSERT OR ROLLBACK INTO vt2 VALUES (-1768965019); -- 0ms;
REINDEX; -- 0ms;
UPDATE vt0 SET c1='' WHERE CASE CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN NULL WHEN vt0.c0 THEN vt0.c1 END  WHEN CHANGES() THEN ((vt0.c0)OR(vt0.c1)) END; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO vt1 VALUES (0.18578942273283372), (NULL), (NULL); -- 1ms;
ANALYZE temp; -- 0ms;
REINDEX; -- 0ms;
INSERT INTO vt2(vt2) VALUES('integrity-check'); -- 0ms;
INSERT OR IGNORE INTO vt1 VALUES (NULL); -- 1ms;
INSERT OR IGNORE INTO vt2(c0) VALUES ('	s'), (NULL), (NULL); -- 0ms;
UPDATE OR IGNORE vt0 SET (c1, c0)=('', '0.797357015143743'); -- 1ms;
UPDATE vt1 SET c0=x'', c0='2102713019', c0=-699054461; -- 1ms;
INSERT OR IGNORE INTO vt0(c1) VALUES (x''), (x''), ('D/'); -- 1ms;
INSERT INTO vt0(vt0) VALUES('automerge=5'); -- 0ms;
INSERT OR IGNORE INTO vt1 VALUES (x'0a2b'); -- 1ms;
INSERT OR IGNORE INTO vt2(c0) VALUES ('-544244881'), (511754542), ('-606981236'), (0.5894343790927773), (NULL), (NULL), ('0.05180003588313287'); -- 0ms;
INSERT OR IGNORE INTO vt1 VALUES (NULL); -- 0ms;
ANALYZE vt2; -- 3ms;
UPDATE OR IGNORE vt2 SET c0=0.797357015143743, c0=0xfffffffff94f205a WHERE CASE WHEN ((x'') NOT BETWEEN (vt2.c0) AND (vt2.c0)) THEN CAST(vt2.c0 AS INTEGER) ELSE ((vt2.c0)!=(vt2.c0)) END; -- 0ms;
CREATE VIRTUAL TABLE rt12 USING rtree_i32(c0, c1, c2); -- 1ms;
UPDATE OR FAIL vt1 SET (c0, c0)=(NULL, 0.5081378383701873) WHERE (+ (vt1.c0)); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
PRAGMA shrink_memory; -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR ABORT INTO vt1(c0) VALUES ('1-500000QP7e湧ﳓ'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 11); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('pgsz', '30779'); -- 0ms;
INSERT INTO vt1(vt1) VALUES('integrity-check'); -- 1ms;
INSERT OR ABORT INTO rt12 VALUES (0X6f3a2d67, NULL, 0x3fa6306b); -- 0ms;
UPDATE OR IGNORE vt0 SET c1=NULL; -- 0ms;
INSERT INTO vt1(vt1) VALUES('rebuild'); -- 0ms;
COMMIT; -- 0ms;
INSERT OR IGNORE INTO rt12(c1, c2) VALUES (0.7722795201775413, ''); -- 0ms;
INSERT INTO vt1(vt1) VALUES('rebuild'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('pgsz', '59571'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('pgsz', '15004'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('usermerge', 10); -- 0ms;
INSERT INTO vt2(vt2) VALUES('rebuild'); -- 1ms;
END; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT * FROM rt12 CROSS JOIN vt1 ON rt12.c2;
SELECT * FROM rt12 CROSS JOIN vt1 ON rt12.c2 WHERE (4.87161889E8) UNION ALL SELECT * FROM rt12 CROSS JOIN vt1 ON rt12.c2 WHERE ((NOT (4.87161889E8))) UNION ALL SELECT * FROM rt12 CROSS JOIN vt1 ON rt12.c2 WHERE (((4.87161889E8) ISNULL));
SELECT * FROM rt12 CROSS JOIN vt1 ON rt12.c2;
SELECT DISTINCT rt12.c1 FROM vt1, rt12;
SELECT DISTINCT rt12.c1 FROM vt1, rt12 WHERE (((((+ (vt1.c0))))<((rt12.c1 COLLATE RTRIM)))) UNION SELECT DISTINCT rt12.c1 FROM vt1, rt12 WHERE ((NOT (((((+ (vt1.c0))))<((rt12.c1 COLLATE RTRIM)))))) UNION SELECT DISTINCT rt12.c1 FROM vt1, rt12 WHERE (((((((+ (vt1.c0))))<((rt12.c1 COLLATE RTRIM)))) ISNULL));
SELECT DISTINCT rt12.c1 FROM vt1, rt12;
SELECT rt12.c2, rt12.c1, vt1.c0 FROM rt12, vt1 GROUP BY rt12.c2, rt12.c1, vt1.c0;
SELECT rt12.c2, rt12.c1, vt1.c0 FROM rt12, vt1 WHERE ((((CASE WHEN rt12.c0 THEN rt12.c0 WHEN vt1.c0 THEN rt12.c1 WHEN rt12.c2 THEN rt12.c2 ELSE rt12.c0 END))>(((- (rt12.c1)))))) GROUP BY rt12.c2, rt12.c1, vt1.c0 UNION SELECT rt12.c2, rt12.c1, vt1.c0 FROM rt12, vt1 WHERE ((NOT ((((CASE WHEN rt12.c0 THEN rt12.c0 WHEN vt1.c0 THEN rt12.c1 WHEN rt12.c2 THEN rt12.c2 ELSE rt12.c0 END))>(((- (rt12.c1)))))))) GROUP BY rt12.c2, rt12.c1, vt1.c0 UNION SELECT rt12.c2, rt12.c1, vt1.c0 FROM rt12, vt1 WHERE ((((((CASE WHEN rt12.c0 THEN rt12.c0 WHEN vt1.c0 THEN rt12.c1 WHEN rt12.c2 THEN rt12.c2 ELSE rt12.c0 END))>(((- (rt12.c1)))))) ISNULL)) GROUP BY rt12.c2, rt12.c1, vt1.c0;
SELECT rt12.c2, rt12.c1, vt1.c0 FROM rt12, vt1 GROUP BY rt12.c2, rt12.c1, vt1.c0;
SELECT vt0.c0, vt1.c0, vt2.c0, vt0.c1 FROM vt0 RIGHT OUTER JOIN vt2 ON ((vt1.c0 COLLATE BINARY)>(NULL)) RIGHT OUTER JOIN vt1 ON UNLIKELY(CAST(vt2.c0 AS REAL)) GROUP BY vt0.c0, vt1.c0, vt2.c0, vt0.c1;
SELECT * FROM rt12;
SELECT ALL * FROM rt12 WHERE (CAST(((((rt12.c1)OR(rt12.c2)))AND(rt12.c0)) AS TEXT)) UNION ALL SELECT * FROM rt12 WHERE ((NOT (CAST(((((rt12.c1)OR(rt12.c2)))AND(rt12.c0)) AS TEXT)))) UNION ALL SELECT ALL * FROM rt12 WHERE (((CAST(((((rt12.c1)OR(rt12.c2)))AND(rt12.c0)) AS TEXT)) ISNULL));
SELECT * FROM rt12;
SELECT DISTINCT * FROM vt0 FULL OUTER JOIN vt1 ON ABS(x'');
SELECT DISTINCT * FROM vt0 FULL OUTER JOIN vt1 ON ABS(x'') WHERE ((NOT (((vt1.c0)||(vt1.c0))))) UNION SELECT DISTINCT * FROM vt0 FULL OUTER JOIN vt1 ON ABS(x'') WHERE ((NOT ((NOT (((vt1.c0)||(vt1.c0))))))) UNION SELECT DISTINCT * FROM vt0 FULL OUTER JOIN vt1 ON ABS(x'') WHERE ((((NOT (((vt1.c0)||(vt1.c0))))) ISNULL));
SELECT DISTINCT * FROM vt0 FULL OUTER JOIN vt1 ON ABS(x'');
SELECT ALL vt0.c0, rt12.c2 FROM rt12, vt0, vt1 GROUP BY vt0.c0, rt12.c2;
SELECT vt0.c0, rt12.c2 FROM rt12, vt0, vt1 WHERE ((((DATE(rt12.c0, vt1.c0, rt12.c1), 'aEwc︕%^', ((rt12.c1)||(vt1.c0))))>=((CASE vt0.c0  WHEN vt1.c0 THEN rt12.c1 END, ((vt0.c1)>>('r6>')), ((vt1.c0)LIKE(rt12.c1)))))) GROUP BY vt0.c0, rt12.c2 UNION SELECT ALL vt0.c0, rt12.c2 FROM rt12, vt0, vt1 WHERE ((NOT ((((DATE(rt12.c0, vt1.c0, rt12.c1), 'aEwc︕%^', ((rt12.c1)||(vt1.c0))))>=((CASE vt0.c0  WHEN vt1.c0 THEN rt12.c1 END, ((vt0.c1)>>('r6>')), ((vt1.c0)LIKE(rt12.c1)))))))) GROUP BY vt0.c0, rt12.c2 UNION SELECT vt0.c0, rt12.c2 FROM rt12, vt0, vt1 WHERE ((((((DATE(rt12.c0, vt1.c0, rt12.c1), 'aEwc︕%^', ((rt12.c1)||(vt1.c0))))>=((CASE vt0.c0  WHEN vt1.c0 THEN rt12.c1 END, ((vt0.c1)>>('r6>')), ((vt1.c0)LIKE(rt12.c1)))))) ISNULL)) GROUP BY vt0.c0, rt12.c2;
SELECT ALL vt0.c0, rt12.c2 FROM rt12, vt0, vt1 GROUP BY vt0.c0, rt12.c2;
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING COUNT(*) UNION ALL SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING COUNT(*) UNION ALL SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT rt12.c1, rt12.c0 FROM vt1 FULL OUTER JOIN rt12 ON ((((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))AND(rt12.c1)))OR(vt1.c0)))GLOB(((vt1.c0) BETWEEN (vt1.c0) AND (rt12.c0))));
SELECT ALL rt12.c1, rt12.c0 FROM vt1 FULL OUTER JOIN rt12 ON ((((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))AND(rt12.c1)))OR(vt1.c0)))GLOB(((vt1.c0) BETWEEN (vt1.c0) AND (rt12.c0)))) WHERE (((rt12.c2)>>(rt12.c1)) COLLATE NOCASE) UNION ALL SELECT rt12.c1, rt12.c0 FROM vt1 FULL OUTER JOIN rt12 ON ((((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))AND(rt12.c1)))OR(vt1.c0)))GLOB(((vt1.c0) BETWEEN (vt1.c0) AND (rt12.c0)))) WHERE ((NOT (((rt12.c2)>>(rt12.c1)) COLLATE NOCASE))) UNION ALL SELECT rt12.c1, rt12.c0 FROM vt1 FULL OUTER JOIN rt12 ON ((((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))AND(rt12.c1)))OR(vt1.c0)))GLOB(((vt1.c0) BETWEEN (vt1.c0) AND (rt12.c0)))) WHERE (((((rt12.c2)>>(rt12.c1)) COLLATE NOCASE) ISNULL));
SELECT rt12.c1, rt12.c0 FROM vt1 FULL OUTER JOIN rt12 ON ((((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))AND(rt12.c1)))OR(vt1.c0)))GLOB(((vt1.c0) BETWEEN (vt1.c0) AND (rt12.c0))));
SELECT DISTINCT * FROM rt12, vt0;
SELECT DISTINCT * FROM rt12, vt0 WHERE (((rt12.c0)+(((((vt0.c0)OR(rt12.c1)))OR(vt0.c0))))) UNION SELECT DISTINCT * FROM rt12, vt0 WHERE ((NOT (((rt12.c0)+(((((vt0.c0)OR(rt12.c1)))OR(vt0.c0))))))) UNION SELECT DISTINCT * FROM rt12, vt0 WHERE (((((rt12.c0)+(((((vt0.c0)OR(rt12.c1)))OR(vt0.c0))))) ISNULL));
SELECT DISTINCT * FROM rt12, vt0;
SELECT ALL vt0.c1 FROM vt0, vt1, vt2, rt12 GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt0, vt1, vt2 NOT INDEXED, rt12 WHERE (CASE vt0.c0  WHEN rt12.c2 THEN rt12.c2 ELSE vt1.c0 END COLLATE RTRIM) GROUP BY vt0.c1 UNION SELECT ALL vt0.c1 FROM vt0, vt1, vt2, rt12 WHERE ((NOT (CASE vt0.c0  WHEN rt12.c2 THEN rt12.c2 ELSE vt1.c0 END COLLATE RTRIM))) GROUP BY vt0.c1 UNION SELECT vt0.c1 FROM vt0, vt1, vt2, rt12 WHERE (((CASE vt0.c0  WHEN rt12.c2 THEN rt12.c2 ELSE vt1.c0 END COLLATE RTRIM) ISNULL)) GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt0, vt1, vt2, rt12 GROUP BY vt0.c1;
SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING COUNT(COUNT(*)) UNION ALL SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING (NOT (COUNT(COUNT(*)))) UNION ALL SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING ((COUNT(COUNT(*))) ISNULL);
SELECT ALL rt12.c0, vt1.c0, rt12.c1, rt12.c2 FROM rt12, vt2, vt1;
SELECT ALL rt12.c0, vt1.c0, rt12.c1, rt12.c2 FROM rt12, vt2, vt1 WHERE (UNLIKELY(((rt12.c0) IS FALSE))) UNION ALL SELECT ALL rt12.c0, vt1.c0, rt12.c1, rt12.c2 FROM rt12, vt2, vt1 WHERE ((NOT (UNLIKELY(((rt12.c0) IS FALSE))))) UNION ALL SELECT rt12.c0, vt1.c0, rt12.c1, rt12.c2 FROM rt12, vt2, vt1 WHERE (((UNLIKELY(((rt12.c0) IS FALSE))) ISNULL));
SELECT ALL rt12.c0, vt1.c0, rt12.c1, rt12.c2 FROM rt12, vt2, vt1;
SELECT DISTINCT * FROM vt2, rt12, vt1 CROSS JOIN vt0 ON ((vt0.c0)|(rt12.c2)) COLLATE NOCASE;
SELECT DISTINCT * FROM vt2, rt12, vt1 CROSS JOIN vt0 ON ((vt0.c0)|(rt12.c2)) COLLATE NOCASE WHERE (((0.20793100514546825)*(((rt12.c0) NOT NULL)))) UNION SELECT DISTINCT * FROM vt2, rt12, vt1 CROSS JOIN vt0 ON ((vt0.c0)|(rt12.c2)) COLLATE NOCASE WHERE ((NOT (((0.20793100514546825)*(((rt12.c0) NOT NULL)))))) UNION SELECT DISTINCT * FROM vt2, rt12, vt1 CROSS JOIN vt0 ON ((vt0.c0)|(rt12.c2)) COLLATE NOCASE WHERE (((((0.20793100514546825)*(((rt12.c0) NOT NULL)))) ISNULL));
SELECT DISTINCT * FROM vt2, rt12, vt1 CROSS JOIN vt0 ON ((vt0.c0)|(rt12.c2)) COLLATE NOCASE;
SELECT vt0.c1 FROM vt2, vt0 GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt2, vt0 WHERE ((((- (vt2.c0)))<<(((('鲻ꫥ'))!=(('2111693042')))))) GROUP BY vt0.c1 UNION SELECT ALL vt0.c1 FROM vt2, vt0 WHERE ((NOT ((((- (vt2.c0)))<<(((('鲻ꫥ'))!=(('2111693042')))))))) GROUP BY vt0.c1 UNION SELECT vt0.c1 FROM vt2, vt0 WHERE ((((((- (vt2.c0)))<<(((('鲻ꫥ'))<>(('2111693042')))))) ISNULL)) GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt2, vt0 GROUP BY vt0.c1;
SELECT ALL rt12.c0, vt0.c0, rt12.c2, vt2.c0 FROM vt0, rt12, vt1, vt2 GROUP BY rt12.c0, vt0.c0, rt12.c2, vt2.c0;
SELECT ALL rt12.c0, vt0.c0, rt12.c2, vt2.c0 FROM vt0, rt12, vt1, vt2 GROUP BY rt12.c0, vt0.c0, rt12.c2, vt2.c0 HAVING LIKELIHOOD(DISTINCT GROUP_CONCAT(rt12.c1), 0.8967954053487648) UNION ALL SELECT rt12.c0, vt0.c0, rt12.c2, vt2.c0 FROM vt0, rt12, vt1, vt2 GROUP BY rt12.c0, vt0.c0, rt12.c2, vt2.c0 HAVING (NOT (LIKELIHOOD(DISTINCT GROUP_CONCAT(rt12.c1), 0.8967954053487648))) UNION ALL SELECT ALL rt12.c0, vt0.c0, rt12.c2, vt2.c0 FROM vt0, rt12, vt1, vt2 GROUP BY rt12.c0, vt0.c0, rt12.c2, vt2.c0 HAVING ((LIKELIHOOD(DISTINCT GROUP_CONCAT(rt12.c1), 0.8967954053487648)) ISNULL);
SELECT ALL rt12.c0, vt0.c0, rt12.c2, vt2.c0 FROM vt0, rt12, vt1, vt2 GROUP BY rt12.c0, vt0.c0, rt12.c2, vt2.c0;
SELECT ALL rt12.c0, vt0.c0, rt12.c2, vt2.c0 FROM vt0, rt12, vt1, vt2 GROUP BY rt12.c0, vt0.c0, rt12.c2, vt2.c0 HAVING LIKELIHOOD(DISTINCT GROUP_CONCAT(rt12.c1), 0.8967954053487648) UNION ALL SELECT rt12.c0, vt0.c0, rt12.c2, vt2.c0 FROM vt0, rt12, vt1, vt2 GROUP BY rt12.c0, vt0.c0, rt12.c2, vt2.c0 HAVING (NOT (LIKELIHOOD(DISTINCT GROUP_CONCAT(rt12.c1), 0.8967954053487648))) UNION ALL SELECT ALL rt12.c0, vt0.c0, rt12.c2, vt2.c0 FROM vt0, rt12, vt1, vt2 GROUP BY rt12.c0, vt0.c0, rt12.c2, vt2.c0 HAVING ((LIKELIHOOD(DISTINCT GROUP_CONCAT(rt12.c1), 0.8967954053487648)) ISNULL);
SELECT ALL rt12.c0, vt0.c0, rt12.c2, vt2.c0 FROM vt0, rt12, vt1, vt2 GROUP BY rt12.c0, vt0.c0, rt12.c2, vt2.c0;
SELECT ALL rt12.c2 FROM vt2, vt1, rt12;
SELECT rt12.c2 FROM vt2, vt1, rt12 WHERE (CAST((NOT (vt1.c0)) AS BLOB)) UNION ALL SELECT ALL rt12.c2 FROM vt2, vt1, rt12 WHERE ((NOT (CAST((NOT (vt1.c0)) AS BLOB)))) UNION ALL SELECT ALL rt12.c2 FROM vt2, vt1, rt12 WHERE (((CAST((NOT (vt1.c0)) AS BLOB)) ISNULL));
SELECT ALL rt12.c2 FROM vt2, vt1, rt12;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((LOWER(DISTINCT vt0.c1)) NOTNULL)) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((LOWER(DISTINCT vt0.c1)) NOTNULL)))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((LOWER(DISTINCT vt0.c1)) NOTNULL)) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE (((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))AND('1418219308')))OR(vt1.c0)) COLLATE RTRIM) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT (((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))AND('1418219308')))OR(vt1.c0)) COLLATE RTRIM))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE (((((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))AND('1418219308')))OR(vt1.c0)) COLLATE RTRIM) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1, vt2, vt0, rt12 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1, vt2, vt0, rt12 GROUP BY vt1.c0 HAVING MAX((((MIN(AVG(COUNT(COUNT(*)))), vt0.c1, x'')) BETWEEN ((AVG(vt0.c1), AVG(vt2.c0), TOTAL(vt0.c1))) AND ((SUM(rt12.c2), COUNT(MIN(rt12.c0)), COUNT(*))))) UNION ALL SELECT vt1.c0 FROM vt1, vt2, vt0, rt12 GROUP BY vt1.c0 HAVING (NOT (MAX((((MIN(AVG(COUNT(COUNT(*)))), vt0.c1, x'')) BETWEEN ((AVG(vt0.c1), AVG(vt2.c0), TOTAL(vt0.c1))) AND ((SUM(rt12.c2), COUNT(MIN(rt12.c0)), COUNT(*))))))) UNION ALL SELECT ALL vt1.c0 FROM vt1, vt2, vt0, rt12 GROUP BY vt1.c0 HAVING ((MAX((((MIN(AVG(COUNT(COUNT(*)))), vt0.c1, x'')) BETWEEN ((AVG(vt0.c1), AVG(vt2.c0), TOTAL(vt0.c1))) AND ((SUM(rt12.c2), COUNT(MIN(rt12.c0)), COUNT(*)))))) ISNULL);
SELECT rt12.c1, vt0.c0, vt1.c0, rt12.c0, vt0.c1, vt2.c0, rt12.c2 FROM rt12, vt2, vt0, vt1;
SELECT ALL rt12.c1, vt0.c0, vt1.c0, rt12.c0, vt0.c1, vt2.c0, rt12.c2 FROM rt12, vt2, vt0, vt1 WHERE (((rt12.c2 COLLATE BINARY) NOTNULL)) UNION ALL SELECT ALL rt12.c1, vt0.c0, vt1.c0, rt12.c0, vt0.c1, vt2.c0, rt12.c2 FROM rt12, vt2, vt0, vt1 WHERE ((NOT (((rt12.c2 COLLATE BINARY) NOTNULL)))) UNION ALL SELECT ALL rt12.c1, vt0.c0, vt1.c0, rt12.c0, vt0.c1, vt2.c0, rt12.c2 FROM rt12, vt2, vt0, vt1 WHERE (((((rt12.c2 COLLATE BINARY) NOTNULL)) ISNULL));
SELECT rt12.c1, vt0.c0, vt1.c0, rt12.c0, vt0.c1, vt2.c0, rt12.c2 FROM rt12, vt2, vt0, vt1;
SELECT DISTINCT * FROM vt0 RIGHT OUTER JOIN rt12 ON x'';
SELECT DISTINCT * FROM vt0 RIGHT OUTER JOIN rt12 ON x'' WHERE ((((((vt0.c1))==((rt12.c0)))) NOT BETWEEN ('-276402705') AND ((- (vt0.c1))))) UNION SELECT DISTINCT * FROM vt0 RIGHT OUTER JOIN rt12 ON x'' WHERE ((NOT ((((((vt0.c1))==((rt12.c0)))) NOT BETWEEN ('-276402705') AND ((- (vt0.c1))))))) UNION SELECT DISTINCT * FROM vt0 RIGHT OUTER JOIN rt12 ON x'' WHERE ((((((((vt0.c1))=((rt12.c0)))) NOT BETWEEN ('-276402705') AND ((- (vt0.c1))))) ISNULL));
SELECT DISTINCT * FROM vt0 RIGHT OUTER JOIN rt12 ON x'';
SELECT vt0.c0 FROM rt12, vt1, vt0, vt2 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM rt12, vt1, vt0, vt2 WHERE ((((((((vt1.c0, vt1.c0, vt2.c0)) BETWEEN ((rt12.c1, vt2.c0, vt0.c1)) AND ((vt0.c0, vt1.c0, rt12.c0))))AND(((vt0.c1)<(NULL)))))OR(LIKELIHOOD(DISTINCT vt1.c0, 0.9511655428467333)))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM rt12, vt1, vt0, vt2 WHERE ((NOT ((((((((vt1.c0, vt1.c0, vt2.c0)) BETWEEN ((rt12.c1, vt2.c0, vt0.c1)) AND ((vt0.c0, vt1.c0, rt12.c0))))AND(((vt0.c1)<(NULL)))))OR(LIKELIHOOD(DISTINCT vt1.c0, 0.9511655428467333)))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM rt12, vt1, vt0, vt2 WHERE ((((((((((vt1.c0, vt1.c0, vt2.c0)) BETWEEN ((rt12.c1, vt2.c0, vt0.c1)) AND ((vt0.c0, vt1.c0, rt12.c0))))AND(((vt0.c1)<(NULL)))))OR(LIKELIHOOD(DISTINCT vt1.c0, 0.9511655428467333)))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM rt12, vt1, vt0, vt2 GROUP BY vt0.c0;
SELECT ALL vt2.c0, vt1.c0, vt0.c0 FROM vt0, vt2, vt1 GROUP BY vt2.c0, vt1.c0, vt0.c0;
SELECT vt2.c0, vt1.c0, vt0.c0 FROM vt0, vt2, vt1 GROUP BY vt2.c0, vt1.c0, vt0.c0 HAVING (x'' IN ()) UNION ALL SELECT vt2.c0, vt1.c0, vt0.c0 FROM vt0, vt2, vt1 GROUP BY vt2.c0, vt1.c0, vt0.c0 HAVING (NOT ((x'' IN ()))) UNION ALL SELECT ALL vt2.c0, vt1.c0, vt0.c0 FROM vt0, vt2, vt1 GROUP BY vt2.c0, vt1.c0, vt0.c0 HAVING (((x'' IN ())) ISNULL);
SELECT ALL vt2.c0, vt1.c0, vt0.c0 FROM vt0, vt2, vt1 GROUP BY vt2.c0, vt1.c0, vt0.c0;
SELECT vt2.c0, vt1.c0, vt0.c0 FROM vt0, vt2, vt1 GROUP BY vt2.c0, vt1.c0, vt0.c0 HAVING (x'' IN ()) UNION ALL SELECT vt2.c0, vt1.c0, vt0.c0 FROM vt0, vt2, vt1 GROUP BY vt2.c0, vt1.c0, vt0.c0 HAVING (NOT ((x'' IN ()))) UNION ALL SELECT ALL vt2.c0, vt1.c0, vt0.c0 FROM vt0, vt2, vt1 GROUP BY vt2.c0, vt1.c0, vt0.c0 HAVING (((x'' IN ())) ISNULL);
SELECT ALL vt2.c0, vt1.c0, vt0.c0 FROM vt0, vt2, vt1 GROUP BY vt2.c0, vt1.c0, vt0.c0;
SELECT ALL rt12.c0, vt0.c1, rt12.c1 FROM rt12, vt0;
SELECT rt12.c0, vt0.c1, rt12.c1 FROM rt12, vt0 WHERE (((((((rt12.c0)>=(vt0.c0)))OR(rt12.c1 COLLATE NOCASE)))OR(((vt0.c1) NOT BETWEEN (rt12.c2) AND (rt12.c1))))) UNION ALL SELECT ALL rt12.c0, vt0.c1, rt12.c1 FROM rt12, vt0 WHERE ((NOT (((((((rt12.c0)>=(vt0.c0)))OR(rt12.c1 COLLATE NOCASE)))OR(((vt0.c1) NOT BETWEEN (rt12.c2) AND (rt12.c1))))))) UNION ALL SELECT ALL rt12.c0, vt0.c1, rt12.c1 FROM rt12, vt0 WHERE (((((((((rt12.c0)>=(vt0.c0)))OR(rt12.c1 COLLATE NOCASE)))OR(((vt0.c1) NOT BETWEEN (rt12.c2) AND (rt12.c1))))) ISNULL));
SELECT ALL rt12.c0, vt0.c1, rt12.c1 FROM rt12, vt0;
SELECT DISTINCT vt0.c1, rt12.c0, rt12.c1, vt0.c0, vt2.c0 FROM vt2, rt12, vt1 CROSS JOIN vt0 ON ((('<ycRnX' IN ()))OR(rt12.c0));
SELECT DISTINCT vt0.c1, rt12.c0, rt12.c1, vt0.c0, vt2.c0 FROM vt2, rt12, vt1 CROSS JOIN vt0 ON ((('<ycRnX' IN ()))OR(rt12.c0)) WHERE (((CAST(vt0.c0 AS BLOB)) IS TRUE)) UNION SELECT DISTINCT vt0.c1, rt12.c0, rt12.c1, vt0.c0, vt2.c0 FROM vt2, rt12, vt1 CROSS JOIN vt0 ON ((('<ycRnX' IN ()))OR(rt12.c0)) WHERE ((NOT (((CAST(vt0.c0 AS BLOB)) IS TRUE)))) UNION SELECT DISTINCT vt0.c1, rt12.c0, rt12.c1, vt0.c0, vt2.c0 FROM vt2, rt12, vt1 CROSS JOIN vt0 ON ((('<ycRnX' IN ()))OR(rt12.c0)) WHERE (((((CAST(vt0.c0 AS BLOB)) IS TRUE)) ISNULL));
SELECT DISTINCT vt0.c1, rt12.c0, rt12.c1, vt0.c0, vt2.c0 FROM vt2, rt12, vt1 CROSS JOIN vt0 ON ((('<ycRnX' IN ()))OR(rt12.c0));
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0 WHERE ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c1))))<=((((vt0.c0) NOT NULL))))) GROUP BY vt0.c1, vt0.c0 UNION SELECT ALL vt0.c1, vt0.c0 FROM vt0 WHERE ((NOT ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c1))))<=((((vt0.c0) NOT NULL))))))) GROUP BY vt0.c1, vt0.c0 UNION SELECT ALL vt0.c1, vt0.c0 FROM vt0 WHERE ((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c1))))<=((((vt0.c0) NOT NULL))))) ISNULL)) GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING QUOTE((NOT (vt2.c0))) UNION ALL SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING (NOT (QUOTE((NOT (vt2.c0))))) UNION ALL SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING ((QUOTE((NOT (vt2.c0)))) ISNULL);
SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING QUOTE((NOT (vt2.c0))) UNION ALL SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING (NOT (QUOTE((NOT (vt2.c0))))) UNION ALL SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING ((QUOTE((NOT (vt2.c0)))) ISNULL);
SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT vt0.c0, vt2.c0, rt12.c2, vt0.c1 FROM vt0, vt2, vt1, rt12;
SELECT ALL vt0.c0, vt2.c0, rt12.c2, vt0.c1 FROM vt0, vt2, vt1, rt12 WHERE (((CAST(vt0.c1 AS BLOB))/(((vt0.c1) BETWEEN (vt1.c0) AND (vt2.c0))))) UNION ALL SELECT ALL vt0.c0, vt2.c0, rt12.c2, vt0.c1 FROM vt0, vt2, vt1, rt12 WHERE ((NOT (((CAST(vt0.c1 AS BLOB))/(((vt0.c1) BETWEEN (vt1.c0) AND (vt2.c0))))))) UNION ALL SELECT vt0.c0, vt2.c0, rt12.c2, vt0.c1 FROM vt0, vt2, vt1, rt12 WHERE (((((CAST(vt0.c1 AS BLOB))/(((vt0.c1) BETWEEN (vt1.c0) AND (vt2.c0))))) ISNULL));
SELECT vt0.c0, vt2.c0, rt12.c2, vt0.c1 FROM vt0, vt2, vt1, rt12;
SELECT DISTINCT rt12.c1, vt0.c0, vt2.c0 FROM vt1, rt12 FULL OUTER JOIN vt0 ON ((((vt0.c1)<<(vt0.c1))) ISNULL) LEFT OUTER JOIN vt2 ON load_extension((~ (rt12.c2)));
SELECT ALL rt12.c2, vt0.c1, vt0.c0, rt12.c0, vt1.c0 FROM vt1, vt0, rt12 GROUP BY rt12.c2, vt0.c1, vt0.c0, rt12.c0, vt1.c0;
SELECT rt12.c2, vt0.c1, vt0.c0, rt12.c0, vt1.c0 FROM vt1, vt0, rt12 WHERE (((((rt12.c0) IS TRUE))LIKE((- ('XsWB䮗g'))))) GROUP BY rt12.c2, vt0.c1, vt0.c0, rt12.c0, vt1.c0 UNION SELECT ALL rt12.c2, vt0.c1, vt0.c0, rt12.c0, vt1.c0 FROM vt1, vt0, rt12 WHERE ((NOT (((((rt12.c0) IS TRUE))LIKE((- ('XsWB䮗g'))))))) GROUP BY rt12.c2, vt0.c1, vt0.c0, rt12.c0, vt1.c0 UNION SELECT rt12.c2, vt0.c1, vt0.c0, rt12.c0, vt1.c0 FROM vt1, vt0, rt12 WHERE (((((((rt12.c0) IS TRUE))LIKE((- ('XsWB䮗g'))))) ISNULL)) GROUP BY rt12.c2, vt0.c1, vt0.c0, rt12.c0, vt1.c0;
SELECT ALL rt12.c2, vt0.c1, vt0.c0, rt12.c0, vt1.c0 FROM vt1, vt0, rt12 GROUP BY rt12.c2, vt0.c1, vt0.c0, rt12.c0, vt1.c0;
SELECT rt12.c0 FROM rt12 GROUP BY rt12.c0;
SELECT rt12.c0 FROM rt12 GROUP BY rt12.c0 HAVING GROUP_CONCAT(MAX(rt12.c0)) UNION ALL SELECT rt12.c0 FROM rt12 GROUP BY rt12.c0 HAVING (NOT (GROUP_CONCAT(MAX(rt12.c0)))) UNION ALL SELECT ALL rt12.c0 FROM rt12 GROUP BY rt12.c0 HAVING ((GROUP_CONCAT(MAX(rt12.c0))) ISNULL);
SELECT ALL * FROM vt2, vt1;
SELECT * FROM vt2, vt1 WHERE (CASE TRIM(DISTINCT vt2.c0, vt1.c0)  WHEN x'd32f' THEN ((vt1.c0)AND(vt2.c0)) END) UNION ALL SELECT ALL * FROM vt2, vt1 WHERE ((NOT (CASE TRIM(DISTINCT vt2.c0, vt1.c0)  WHEN x'd32f' THEN ((vt1.c0)AND(vt2.c0)) END))) UNION ALL SELECT ALL * FROM vt2, vt1 WHERE (((CASE TRIM(DISTINCT vt2.c0, vt1.c0)  WHEN x'd32f' THEN ((vt1.c0)AND(vt2.c0)) END) ISNULL));
SELECT ALL * FROM vt2, vt1;
SELECT DISTINCT vt2.c0, rt12.c2, vt0.c1, vt0.c0, rt12.c1 FROM rt12, vt0 INNER JOIN vt2 ON CAST(CAST(vt0.c1 AS NUMERIC) AS INTEGER);
SELECT DISTINCT vt2.c0, rt12.c2, vt0.c1, vt0.c0, rt12.c1 FROM rt12, vt0 INNER JOIN vt2 ON CAST(CAST(vt0.c1 AS NUMERIC) AS INTEGER) WHERE ((~ (CASE rt12.c1  WHEN rt12.c2 THEN vt0.c1 END))) UNION SELECT DISTINCT vt2.c0, rt12.c2, vt0.c1, vt0.c0, rt12.c1 FROM rt12, vt0 INNER JOIN vt2 ON CAST(CAST(vt0.c1 AS NUMERIC) AS INTEGER) WHERE ((NOT ((~ (CASE rt12.c1  WHEN rt12.c2 THEN vt0.c1 END))))) UNION SELECT DISTINCT vt2.c0, rt12.c2, vt0.c1, vt0.c0, rt12.c1 FROM rt12, vt0 INNER JOIN vt2 ON CAST(CAST(vt0.c1 AS NUMERIC) AS INTEGER) WHERE ((((~ (CASE rt12.c1  WHEN rt12.c2 THEN vt0.c1 END))) ISNULL));
SELECT DISTINCT vt2.c0, rt12.c2, vt0.c1, vt0.c0, rt12.c1 FROM rt12, vt0 INNER JOIN vt2 ON CAST(CAST(vt0.c1 AS NUMERIC) AS INTEGER);
SELECT ALL vt0.c1 FROM vt1, rt12, vt0, vt2 GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt1, rt12, vt0, vt2 WHERE ((((vt0.c1) ISNULL) IN ())) GROUP BY vt0.c1 UNION SELECT vt0.c1 FROM vt1, rt12, vt0, vt2 WHERE ((NOT ((((vt0.c1) ISNULL) IN ())))) GROUP BY vt0.c1 UNION SELECT vt0.c1 FROM vt1, rt12, vt0, vt2 WHERE ((((((vt0.c1) ISNULL) IN ())) ISNULL)) GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt1, rt12, vt0, vt2 GROUP BY vt0.c1;
SELECT ALL rt12.c0, rt12.c1, vt2.c0, rt12.c2 FROM vt2 RIGHT OUTER JOIN rt12 ON (TRIM(vt2.c0) IN ()) GROUP BY rt12.c0, rt12.c1, vt2.c0, rt12.c2;
SELECT ALL rt12.c0, rt12.c1, vt2.c0, rt12.c2 FROM vt2 RIGHT OUTER JOIN rt12 ON (TRIM(vt2.c0) IN ()) GROUP BY rt12.c0, rt12.c1, vt2.c0, rt12.c2 HAVING TOTAL(ABS(rt12.c2)) UNION ALL SELECT ALL rt12.c0, rt12.c1, vt2.c0, rt12.c2 FROM vt2 RIGHT OUTER JOIN rt12 ON (TRIM(vt2.c0) IN ()) GROUP BY rt12.c0, rt12.c1, vt2.c0, rt12.c2 HAVING (NOT (TOTAL(ABS(rt12.c2)))) UNION ALL SELECT rt12.c0, rt12.c1, vt2.c0, rt12.c2 FROM vt2 RIGHT OUTER JOIN rt12 ON (TRIM(vt2.c0) IN ()) GROUP BY rt12.c0, rt12.c1, vt2.c0, rt12.c2 HAVING ((TOTAL(ABS(rt12.c2))) ISNULL);
SELECT ALL rt12.c0, rt12.c1, vt2.c0, rt12.c2 FROM vt2 RIGHT OUTER JOIN rt12 ON (TRIM(vt2.c0) IN ()) GROUP BY rt12.c0, rt12.c1, vt2.c0, rt12.c2;
SELECT ALL rt12.c0, rt12.c1, vt2.c0, rt12.c2 FROM vt2 RIGHT OUTER JOIN rt12 ON (TRIM(vt2.c0) IN ()) GROUP BY rt12.c0, rt12.c1, vt2.c0, rt12.c2 HAVING TOTAL(ABS(rt12.c2)) UNION ALL SELECT ALL rt12.c0, rt12.c1, vt2.c0, rt12.c2 FROM vt2 RIGHT OUTER JOIN rt12 ON (TRIM(vt2.c0) IN ()) GROUP BY rt12.c0, rt12.c1, vt2.c0, rt12.c2 HAVING (NOT (TOTAL(ABS(rt12.c2)))) UNION ALL SELECT rt12.c0, rt12.c1, vt2.c0, rt12.c2 FROM vt2 RIGHT OUTER JOIN rt12 ON (TRIM(vt2.c0) IN ()) GROUP BY rt12.c0, rt12.c1, vt2.c0, rt12.c2 HAVING ((TOTAL(ABS(rt12.c2))) ISNULL);
SELECT ALL rt12.c0, rt12.c1, vt2.c0, rt12.c2 FROM vt2 RIGHT OUTER JOIN rt12 ON (TRIM(vt2.c0) IN ()) GROUP BY rt12.c0, rt12.c1, vt2.c0, rt12.c2;
SELECT ALL vt1.c0, vt2.c0 FROM vt2, vt1;
SELECT ALL vt1.c0, vt2.c0 FROM vt2, vt1 WHERE ((((vt1.c0)) NOT BETWEEN ((NULL)) AND ((x'')))) UNION ALL SELECT ALL vt1.c0, vt2.c0 FROM vt2, vt1 WHERE ((NOT ((((vt1.c0)) NOT BETWEEN ((NULL)) AND ((x'')))))) UNION ALL SELECT ALL vt1.c0, vt2.c0 FROM vt2, vt1 WHERE ((((((vt1.c0)) NOT BETWEEN ((NULL)) AND ((x'')))) ISNULL));
SELECT ALL vt1.c0, vt2.c0 FROM vt2, vt1;
SELECT DISTINCT * FROM vt1 RIGHT OUTER JOIN vt2 ON ((('l7Y#giBVQ' IN (rt12.c0, 'd!PG'))) NOT NULL) INNER JOIN rt12 ON (~ (0Xffffffffdf581874));
SELECT ALL rt12.c0, rt12.c1, vt1.c0, rt12.c2 FROM rt12 INNER JOIN vt1 ON ((((((((HEX(rt12.c2))AND(((((rt12.c2)AND(rt12.c1)))OR('ky/~a/쏾g')))))OR('1748132683' COLLATE NOCASE)))OR(((rt12.c1)IS NOT(rt12.c2)))))OR(((rt12.c0)&(rt12.c1)))) GROUP BY rt12.c0, rt12.c1, vt1.c0, rt12.c2;
SELECT ALL rt12.c0, rt12.c1, vt1.c0, rt12.c2 FROM rt12 INNER JOIN vt1 ON ((((((((HEX(rt12.c2))AND(((((rt12.c2)AND(rt12.c1)))OR('ky/~a/쏾g')))))OR('1748132683' COLLATE NOCASE)))OR(((rt12.c1)IS NOT(rt12.c2)))))OR(((rt12.c0)&(rt12.c1)))) WHERE (((LIKELY(rt12.c1))AND(((rt12.c0)||('	3'))))) GROUP BY rt12.c0, rt12.c1, vt1.c0, rt12.c2 UNION SELECT ALL rt12.c0, rt12.c1, vt1.c0, rt12.c2 FROM rt12 INNER JOIN vt1 ON ((((((((HEX(rt12.c2))AND(((((rt12.c2)AND(rt12.c1)))OR('ky/~a/쏾g')))))OR('1748132683' COLLATE NOCASE)))OR(((rt12.c1)IS NOT(rt12.c2)))))OR(((rt12.c0)&(rt12.c1)))) WHERE ((NOT (((LIKELY(rt12.c1))AND(((rt12.c0)||('	3'))))))) GROUP BY rt12.c0, rt12.c1, vt1.c0, rt12.c2 UNION SELECT ALL rt12.c0, rt12.c1, vt1.c0, rt12.c2 FROM rt12 INNER JOIN vt1 ON ((((((((HEX(rt12.c2))AND(((((rt12.c2)AND(rt12.c1)))OR('ky/~a/쏾g')))))OR('1748132683' COLLATE NOCASE)))OR(((rt12.c1)IS NOT(rt12.c2)))))OR(((rt12.c0)&(rt12.c1)))) WHERE (((((LIKELY(rt12.c1))AND(((rt12.c0)||('	3'))))) ISNULL)) GROUP BY rt12.c0, rt12.c1, vt1.c0, rt12.c2;
SELECT ALL rt12.c0, rt12.c1, vt1.c0, rt12.c2 FROM rt12 INNER JOIN vt1 ON ((((((((HEX(rt12.c2))AND(((((rt12.c2)AND(rt12.c1)))OR('ky/~a/쏾g')))))OR('1748132683' COLLATE NOCASE)))OR(((rt12.c1)IS NOT(rt12.c2)))))OR(((rt12.c0)&(rt12.c1)))) GROUP BY rt12.c0, rt12.c1, vt1.c0, rt12.c2;
SELECT vt1.c0, rt12.c2, vt0.c1, rt12.c1 FROM vt1, vt0 RIGHT OUTER JOIN vt2 ON (~ (((-6.45913713E8) BETWEEN (rt12.c0) AND (rt12.c1)))) INNER JOIN rt12 ON CASE ((vt0.c1) BETWEEN (vt1.c0) AND (vt2.c0))  WHEN (NOT (vt1.c0)) THEN 'a63옞tq' ELSE CASE WHEN vt0.c1 THEN rt12.c1 WHEN rt12.c0 THEN x'abe4' WHEN rt12.c0 THEN vt1.c0 ELSE vt2.c0 END END GROUP BY vt1.c0, rt12.c2, vt0.c1, rt12.c1;
SELECT vt2.c0 FROM vt2;
SELECT vt2.c0 FROM vt2 WHERE (((COALESCE(vt2.c0, vt2.c0)) NOT BETWEEN ((vt2.c0 IN ())) AND (((((vt2.c0)AND(vt2.c0)))OR(vt2.c0))))) UNION ALL SELECT ALL vt2.c0 FROM vt2 WHERE ((NOT (((COALESCE(vt2.c0, vt2.c0)) NOT BETWEEN ((vt2.c0 IN ())) AND (((((vt2.c0)AND(vt2.c0)))OR(vt2.c0))))))) UNION ALL SELECT ALL vt2.c0 FROM vt2 WHERE (((((COALESCE(vt2.c0, vt2.c0)) NOT BETWEEN ((vt2.c0 IN ())) AND (((((vt2.c0)AND(vt2.c0)))OR(vt2.c0))))) ISNULL));
SELECT vt2.c0 FROM vt2;
SELECT DISTINCT * FROM rt12, vt0, vt1;
SELECT DISTINCT * FROM rt12, vt0, vt1 WHERE (TRIM((vt0.c1 IN ()))) UNION SELECT DISTINCT * FROM rt12, vt0, vt1 WHERE ((NOT (TRIM((vt0.c1 IN ()))))) UNION SELECT DISTINCT * FROM rt12, vt0, vt1 WHERE (((TRIM((vt0.c1 IN ()))) ISNULL));
SELECT DISTINCT * FROM rt12, vt0, vt1;
SELECT ALL rt12.c2, vt0.c1, rt12.c1 FROM vt1 CROSS JOIN vt0 ON ((((vt1.c0)IS(vt1.c0))) BETWEEN (((rt12.c0) NOTNULL)) AND (((vt0.c0)>(rt12.c1)))) INNER JOIN rt12 ON ((('279510254')) BETWEEN ((((0.372333948385969) IS TRUE))) AND ((IFNULL(DISTINCT NULL, rt12.c2)))) RIGHT OUTER JOIN vt2 ON (((rt12.c2))>((rt12.c1))) COLLATE BINARY COLLATE NOCASE GROUP BY rt12.c2, vt0.c1, rt12.c1;
SELECT ALL vt1.c0 FROM rt12, vt0 FULL OUTER JOIN vt2 ON (~ (((vt1.c0) BETWEEN (vt0.c1) AND (rt12.c2)))) CROSS JOIN vt1 ON (((rt12.c2)) NOT BETWEEN ((((((vt0.c0)OR(NULL)))OR('1295851351')))) AND ((rt12.c2 COLLATE NOCASE))) GROUP BY vt1.c0;
SELECT ALL SUM((~ (((((vt1.c0)OR(vt2.c0)))OR(vt2.c0))))) FROM vt1, vt2, vt0;
SELECT * FROM vt2 FULL OUTER JOIN rt12 ON QUOTE(((vt2.c0) NOT NULL));
SELECT * FROM vt2 FULL OUTER JOIN rt12 ON QUOTE(((vt2.c0) NOT NULL)) WHERE ((0.4811921901591931 IN ('-767794815', ((rt12.c0)OR(rt12.c2))))) UNION ALL SELECT ALL * FROM vt2 FULL OUTER JOIN rt12 ON QUOTE(((vt2.c0) NOT NULL)) WHERE ((NOT ((0.4811921901591931 IN ('-767794815', ((rt12.c0)OR(rt12.c2))))))) UNION ALL SELECT ALL * FROM vt2 FULL OUTER JOIN rt12 ON QUOTE(((vt2.c0) NOT NULL)) WHERE ((((0.4811921901591931 IN ('-767794815', ((rt12.c0)OR(rt12.c2))))) ISNULL));
SELECT * FROM vt2 FULL OUTER JOIN rt12 ON QUOTE(((vt2.c0) NOT NULL));
SELECT DISTINCT * FROM vt1 INNER JOIN rt12 ON ((((((rt12.c0)%(rt12.c2)))OR((rt12.c1 IN (rt12.c2)))))AND((vt1.c0 IN ())));
SELECT DISTINCT * FROM vt1 INNER JOIN rt12 ON ((((((rt12.c0)%(rt12.c2)))OR((rt12.c1 IN (rt12.c2)))))AND((vt1.c0 IN ()))) WHERE (NULLIF(DISTINCT TRIM(vt1.c0), ((rt12.c0)-(vt1.c0)))) UNION SELECT DISTINCT * FROM vt1 INNER JOIN rt12 ON ((((((rt12.c0)%(rt12.c2)))OR((rt12.c1 IN (rt12.c2)))))AND((vt1.c0 IN ()))) WHERE ((NOT (NULLIF(DISTINCT TRIM(vt1.c0), ((rt12.c0)-(vt1.c0)))))) UNION SELECT DISTINCT * FROM vt1 INNER JOIN rt12 ON ((((((rt12.c0)%(rt12.c2)))OR((rt12.c1 IN (rt12.c2)))))AND((vt1.c0 IN ()))) WHERE (((NULLIF(DISTINCT TRIM(vt1.c0), ((rt12.c0)-(vt1.c0)))) ISNULL));
SELECT DISTINCT * FROM vt1 INNER JOIN rt12 ON ((((((rt12.c0)%(rt12.c2)))OR((rt12.c1 IN (rt12.c2)))))AND((vt1.c0 IN ())));
SELECT ALL vt2.c0, vt0.c0, rt12.c2, rt12.c1, rt12.c0, vt0.c1 FROM vt2, vt0, rt12 GROUP BY vt2.c0, vt0.c0, rt12.c2, rt12.c1, rt12.c0, vt0.c1;
SELECT vt2.c0, vt0.c0, rt12.c2, rt12.c1, rt12.c0, vt0.c1 FROM vt2, vt0, rt12 WHERE (IFNULL(DISTINCT CAST(vt2.c0 AS REAL), (vt0.c0 IN (rt12.c1)))) GROUP BY vt2.c0, vt0.c0, rt12.c2, rt12.c1, rt12.c0, vt0.c1 UNION SELECT ALL vt2.c0, vt0.c0, rt12.c2, rt12.c1, rt12.c0, vt0.c1 FROM vt2, vt0, rt12 WHERE ((NOT (IFNULL(DISTINCT CAST(vt2.c0 AS REAL), (vt0.c0 IN (rt12.c1)))))) GROUP BY vt2.c0, vt0.c0, rt12.c2, rt12.c1, rt12.c0, vt0.c1 UNION SELECT vt2.c0, vt0.c0, rt12.c2, rt12.c1, rt12.c0, vt0.c1 FROM vt2, vt0, rt12 WHERE (((IFNULL(DISTINCT CAST(vt2.c0 AS REAL), (vt0.c0 IN (rt12.c1)))) ISNULL)) GROUP BY vt2.c0, vt0.c0, rt12.c2, rt12.c1, rt12.c0, vt0.c1;
SELECT ALL vt2.c0, vt0.c0, rt12.c2, rt12.c1, rt12.c0, vt0.c1 FROM vt2, vt0, rt12 GROUP BY vt2.c0, vt0.c0, rt12.c2, rt12.c1, rt12.c0, vt0.c1;
SELECT ALL vt1.c0, vt0.c1, rt12.c2, rt12.c1, vt0.c0, vt2.c0 FROM vt1 LEFT OUTER JOIN vt2 ON (((rt12.c2, vt2.c0, vt1.c0)) NOT BETWEEN (((((vt1.c0, rt12.c0, rt12.c0, vt0.c1, rt12.c1))<=((vt0.c1, vt0.c0, vt0.c1, vt0.c1, rt12.c0))), ((vt2.c0) BETWEEN (rt12.c2) AND (x'')), ((rt12.c1) NOT BETWEEN (vt2.c0) AND (vt0.c0)))) AND ((CAST(vt2.c0 AS BLOB), ((vt1.c0)>(vt0.c0)), (vt1.c0 IN ())))) RIGHT OUTER JOIN rt12 ON ((-1.363885058E9)IS(CAST(rt12.c0 AS INTEGER))) INNER JOIN vt0 ON ((NULLIF(DISTINCT rt12.c0, rt12.c0))<>((((vt2.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c1))))) GROUP BY vt1.c0, vt0.c1, rt12.c2, rt12.c1, vt0.c0, vt2.c0;
SELECT ALL * FROM vt0;
SELECT * FROM vt0 WHERE (CAST(((vt0.c1)&('')) AS NUMERIC)) UNION ALL SELECT * FROM vt0 WHERE ((NOT (CAST(((vt0.c1)&('')) AS NUMERIC)))) UNION ALL SELECT ALL * FROM vt0 WHERE (((CAST(((vt0.c1)&('')) AS NUMERIC)) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT * FROM rt12, vt0, vt2;
SELECT DISTINCT * FROM rt12, vt0, vt2 WHERE (vt2.c0 COLLATE NOCASE) UNION SELECT DISTINCT * FROM rt12, vt0, vt2 WHERE ((NOT (vt2.c0 COLLATE NOCASE))) UNION SELECT DISTINCT * FROM rt12, vt0, vt2 WHERE (((vt2.c0 COLLATE NOCASE) ISNULL));
SELECT DISTINCT * FROM rt12, vt0, vt2;
SELECT rt12.c0 FROM rt12, vt2 GROUP BY rt12.c0;
SELECT rt12.c0 FROM rt12, vt2 WHERE (rt12.c1) GROUP BY rt12.c0 UNION SELECT rt12.c0 FROM rt12, vt2 WHERE ((NOT (rt12.c1))) GROUP BY rt12.c0 UNION SELECT ALL rt12.c0 FROM rt12, vt2 WHERE (((rt12.c1) ISNULL)) GROUP BY rt12.c0;
SELECT rt12.c0 FROM rt12, vt2 GROUP BY rt12.c0;
SELECT vt2.c0, rt12.c0, rt12.c2, rt12.c1 FROM vt2, rt12 GROUP BY vt2.c0, rt12.c0, rt12.c2, rt12.c1;
SELECT ALL vt2.c0, rt12.c0, rt12.c2, rt12.c1 FROM vt2, rt12 GROUP BY vt2.c0, rt12.c0, rt12.c2, rt12.c1 HAVING ((((TOTAL(vt2.c0))AND(vt2.c0)))AND(SUM(AVG(vt2.c0)) COLLATE BINARY)) UNION ALL SELECT ALL vt2.c0, rt12.c0, rt12.c2, rt12.c1 FROM vt2, rt12 GROUP BY vt2.c0, rt12.c0, rt12.c2, rt12.c1 HAVING (NOT (((((TOTAL(vt2.c0))AND(vt2.c0)))AND(SUM(AVG(vt2.c0)) COLLATE BINARY)))) UNION ALL SELECT vt2.c0, rt12.c0, rt12.c2, rt12.c1 FROM vt2, rt12 GROUP BY vt2.c0, rt12.c0, rt12.c2, rt12.c1 HAVING ((((((TOTAL(vt2.c0))AND(vt2.c0)))AND(SUM(AVG(vt2.c0)) COLLATE BINARY))) ISNULL);
SELECT * FROM vt2, rt12;
SELECT ALL * FROM vt2, rt12 WHERE (((CAST(rt12.c0 AS BLOB)) NOT BETWEEN ((((rt12.c0)) NOT BETWEEN ((rt12.c0)) AND ((rt12.c1)))) AND (rt12.c0 COLLATE BINARY))) UNION ALL SELECT ALL * FROM vt2, rt12 WHERE ((NOT (((CAST(rt12.c0 AS BLOB)) NOT BETWEEN ((((rt12.c0)) NOT BETWEEN ((rt12.c0)) AND ((rt12.c1)))) AND (rt12.c0 COLLATE BINARY))))) UNION ALL SELECT * FROM vt2, rt12 WHERE (((((CAST(rt12.c0 AS BLOB)) NOT BETWEEN ((((rt12.c0)) NOT BETWEEN ((rt12.c0)) AND ((rt12.c1)))) AND (rt12.c0 COLLATE BINARY))) ISNULL));
SELECT * FROM vt2, rt12;
SELECT DISTINCT vt2.c0 FROM vt1, vt2;
SELECT DISTINCT vt2.c0 FROM vt1, vt2 WHERE (((((((vt1.c0) NOT NULL))AND(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END)))OR(CAST(vt1.c0 AS INTEGER)))) UNION SELECT DISTINCT vt2.c0 FROM vt1, vt2 WHERE ((NOT (((((((vt1.c0) NOT NULL))AND(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END)))OR(CAST(vt1.c0 AS INTEGER)))))) UNION SELECT DISTINCT vt2.c0 FROM vt1, vt2 WHERE (((((((((vt1.c0) NOT NULL))AND(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END)))OR(CAST(vt1.c0 AS INTEGER)))) ISNULL));
SELECT DISTINCT vt2.c0 FROM vt1, vt2;
SELECT rt12.c1, rt12.c2 FROM rt12, vt1 GROUP BY rt12.c1, rt12.c2;
SELECT ALL rt12.c1, rt12.c2 FROM rt12, vt1 WHERE ((((NOT (rt12.c0)))>>(ABS(rt12.c0)))) GROUP BY rt12.c1, rt12.c2 UNION SELECT rt12.c1, rt12.c2 FROM rt12, vt1 WHERE ((NOT ((((NOT (rt12.c0)))>>(ABS(rt12.c0)))))) GROUP BY rt12.c1, rt12.c2 UNION SELECT ALL rt12.c1, rt12.c2 FROM rt12, vt1 WHERE ((((((NOT (rt12.c0)))>>(ABS(rt12.c0)))) ISNULL)) GROUP BY rt12.c1, rt12.c2;
SELECT rt12.c1, rt12.c2 FROM rt12, vt1 GROUP BY rt12.c1, rt12.c2;
SELECT vt2.c0, rt12.c0, rt12.c2, vt0.c0 FROM vt2, vt1, vt0, rt12 GROUP BY vt2.c0, rt12.c0, rt12.c2, vt0.c0;
SELECT vt2.c0, rt12.c0, rt12.c2, vt0.c0 FROM vt2, vt1, vt0, rt12 GROUP BY vt2.c0, rt12.c0, rt12.c2, vt0.c0 HAVING TOTAL(SUM(rt12.c0)) UNION ALL SELECT ALL vt2.c0, rt12.c0, rt12.c2, vt0.c0 FROM vt2, vt1, vt0, rt12 GROUP BY vt2.c0, rt12.c0, rt12.c2, vt0.c0 HAVING (NOT (TOTAL(SUM(rt12.c0)))) UNION ALL SELECT ALL vt2.c0, rt12.c0, rt12.c2, vt0.c0 FROM vt2, vt1, vt0, rt12 GROUP BY vt2.c0, rt12.c0, rt12.c2, vt0.c0 HAVING ((TOTAL(SUM(rt12.c0))) ISNULL);
SELECT vt0.c1, vt1.c0 FROM vt1, vt0;
SELECT ALL vt0.c1, vt1.c0 FROM vt1, vt0 WHERE (vt0.c1) UNION ALL SELECT ALL vt0.c1, vt1.c0 FROM vt1, vt0 WHERE ((NOT (vt0.c1))) UNION ALL SELECT ALL vt0.c1, vt1.c0 FROM vt1, vt0 WHERE (((vt0.c1) ISNULL));
SELECT vt0.c1, vt1.c0 FROM vt1, vt0;
SELECT DISTINCT * FROM rt12;
SELECT DISTINCT * FROM rt12 NOT INDEXED WHERE (CAST(0Xffffffffd4841e07 AS BLOB)) UNION SELECT DISTINCT * FROM rt12 WHERE ((NOT (CAST(0xffffffffd4841e07 AS BLOB)))) UNION SELECT DISTINCT * FROM rt12 WHERE (((CAST(0xffffffffd4841e07 AS BLOB)) ISNULL));
SELECT DISTINCT * FROM rt12;
SELECT ALL vt2.c0, vt1.c0 FROM vt2, vt1 GROUP BY vt2.c0, vt1.c0;
SELECT ALL vt2.c0, vt1.c0 FROM vt2, vt1 WHERE (((((LIKELIHOOD(DISTINCT vt2.c0, 0.3257407181238796))OR(HEX(DISTINCT vt2.c0))))OR(CASE vt2.c0  WHEN vt2.c0 THEN vt2.c0 ELSE vt2.c0 END))) GROUP BY vt2.c0, vt1.c0 UNION SELECT ALL vt2.c0, vt1.c0 FROM vt2, vt1 NOT INDEXED WHERE ((NOT (((((LIKELIHOOD(DISTINCT vt2.c0, 0.3257407181238796))OR(HEX(DISTINCT vt2.c0))))OR(CASE vt2.c0  WHEN vt2.c0 THEN vt2.c0 ELSE vt2.c0 END))))) GROUP BY vt2.c0, vt1.c0 UNION SELECT ALL vt2.c0, vt1.c0 FROM vt2, vt1 WHERE (((((((LIKELIHOOD(DISTINCT vt2.c0, 0.3257407181238796))OR(HEX(DISTINCT vt2.c0))))OR(CASE vt2.c0  WHEN vt2.c0 THEN vt2.c0 ELSE vt2.c0 END))) ISNULL)) GROUP BY vt2.c0, vt1.c0;
SELECT ALL vt2.c0, vt1.c0 FROM vt2, vt1 GROUP BY vt2.c0, vt1.c0;
SELECT ALL vt1.c0 FROM vt1 FULL OUTER JOIN vt0 ON CAST((NOT (vt0.c0)) AS TEXT) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 FULL OUTER JOIN vt0 ON CAST((NOT (vt0.c0)) AS TEXT) GROUP BY vt1.c0 HAVING TRIM(DISTINCT CASE vt0.c0  WHEN vt0.c0 THEN GROUP_CONCAT(TOTAL(vt0.c0)) ELSE vt0.c0 END, (NOT (vt0.c0))) UNION ALL SELECT ALL vt1.c0 FROM vt1 FULL OUTER JOIN vt0 ON CAST((NOT (vt0.c0)) AS TEXT) GROUP BY vt1.c0 HAVING (NOT (TRIM(DISTINCT CASE vt0.c0  WHEN vt0.c0 THEN GROUP_CONCAT(TOTAL(vt0.c0)) ELSE vt0.c0 END, (NOT (vt0.c0))))) UNION ALL SELECT vt1.c0 FROM vt1 FULL OUTER JOIN vt0 ON CAST((NOT (vt0.c0)) AS TEXT) GROUP BY vt1.c0 HAVING ((TRIM(DISTINCT CASE vt0.c0  WHEN vt0.c0 THEN GROUP_CONCAT(TOTAL(vt0.c0)) ELSE vt0.c0 END, (NOT (vt0.c0)))) ISNULL);
SELECT MAX(CAST(((vt2.c0)<<(rt12.c0)) AS INTEGER)) FROM rt12, vt0, vt2;
SELECT ALL * FROM vt1;
SELECT * FROM vt1 WHERE (CAST((~ (vt1.c0)) AS REAL)) UNION ALL SELECT ALL * FROM vt1 WHERE ((NOT (CAST((~ (vt1.c0)) AS REAL)))) UNION ALL SELECT * FROM vt1 WHERE (((CAST((~ (vt1.c0)) AS REAL)) ISNULL));
SELECT ALL * FROM vt1;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE ('W员') UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT ('W员'))) UNION SELECT DISTINCT * FROM vt1 WHERE ((('W员') ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT ALL vt0.c0, rt12.c1, vt2.c0, vt0.c1, rt12.c0, rt12.c2, vt1.c0 FROM vt0, rt12, vt2, vt1 GROUP BY vt0.c0, rt12.c1, vt2.c0, vt0.c1, rt12.c0, rt12.c2, vt1.c0;
SELECT vt0.c0, rt12.c1, vt2.c0, vt0.c1, rt12.c0, rt12.c2, vt1.c0 FROM vt0, rt12, vt2, vt1 WHERE (CAST(vt1.c0 COLLATE NOCASE AS NUMERIC)) GROUP BY vt0.c0, rt12.c1, vt2.c0, vt0.c1, rt12.c0, rt12.c2, vt1.c0 UNION SELECT ALL vt0.c0, rt12.c1, vt2.c0, vt0.c1, rt12.c0, rt12.c2, vt1.c0 FROM vt0, rt12, vt2, vt1 WHERE ((NOT (CAST(vt1.c0 COLLATE NOCASE AS NUMERIC)))) GROUP BY vt0.c0, rt12.c1, vt2.c0, vt0.c1, rt12.c0, rt12.c2, vt1.c0 UNION SELECT vt0.c0, rt12.c1, vt2.c0, vt0.c1, rt12.c0, rt12.c2, vt1.c0 FROM vt0, rt12, vt2, vt1 WHERE (((CAST(vt1.c0 COLLATE NOCASE AS NUMERIC)) ISNULL)) GROUP BY vt0.c0, rt12.c1, vt2.c0, vt0.c1, rt12.c0, rt12.c2, vt1.c0;
SELECT ALL vt0.c0, rt12.c1, vt2.c0, vt0.c1, rt12.c0, rt12.c2, vt1.c0 FROM vt0, rt12, vt2, vt1 GROUP BY vt0.c0, rt12.c1, vt2.c0, vt0.c1, rt12.c0, rt12.c2, vt1.c0;
SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING COUNT(*) UNION ALL SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING COUNT(*) UNION ALL SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT ALL * FROM vt2, vt0, rt12, vt1;
SELECT ALL * FROM vt2, vt0, rt12, vt1 WHERE (IFNULL(((rt12.c2)==(rt12.c2)), json_insert(NULL, vt0.c1, vt1.c0))) UNION ALL SELECT * FROM vt2, vt0, rt12, vt1 WHERE ((NOT (IFNULL(((rt12.c2)==(rt12.c2)), json_insert(NULL, vt0.c1, vt1.c0))))) UNION ALL SELECT ALL * FROM vt2, vt0, rt12, vt1 WHERE (((IFNULL(((rt12.c2)=(rt12.c2)), json_insert(NULL, vt0.c1, vt1.c0))) ISNULL));
SELECT ALL * FROM vt2, vt0, rt12, vt1;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE (CAST(vt1.c0 COLLATE RTRIM AS TEXT)) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT (CAST(vt1.c0 COLLATE RTRIM AS TEXT)))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((CAST(vt1.c0 COLLATE RTRIM AS TEXT)) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (NULL) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (NULL))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((NULL) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt1.c0 FROM rt12, vt1, vt2, vt0 GROUP BY vt1.c0;
SELECT vt1.c0 FROM rt12, vt1, vt2, vt0 GROUP BY vt1.c0 HAVING ((((((((SUM(MAX(GROUP_CONCAT(vt0.c0))))AND(((rt12.c1) BETWEEN (TOTAL(rt12.c2)) AND (vt0.c1)))))AND(SUM(rt12.c2))))OR(GROUP_CONCAT(x''))))AND(SUM(GROUP_CONCAT(vt1.c0)))) UNION ALL SELECT vt1.c0 FROM rt12, vt1, vt2, vt0 GROUP BY vt1.c0 HAVING (NOT (((((((((SUM(MAX(GROUP_CONCAT(vt0.c0))))AND(((rt12.c1) BETWEEN (TOTAL(rt12.c2)) AND (vt0.c1)))))AND(SUM(rt12.c2))))OR(GROUP_CONCAT(x''))))AND(SUM(GROUP_CONCAT(vt1.c0)))))) UNION ALL SELECT ALL vt1.c0 FROM rt12, vt1, vt2, vt0 GROUP BY vt1.c0 HAVING ((((((((((SUM(MAX(GROUP_CONCAT(vt0.c0))))AND(((rt12.c1) BETWEEN (TOTAL(rt12.c2)) AND (vt0.c1)))))AND(SUM(rt12.c2))))OR(GROUP_CONCAT(x''))))AND(SUM(GROUP_CONCAT(vt1.c0))))) ISNULL);
SELECT vt0.c1 FROM vt0;
SELECT ALL vt0.c1 FROM vt0 WHERE (((CAST(vt0.c1 AS NUMERIC)) IS FALSE)) UNION ALL SELECT vt0.c1 FROM vt0 WHERE ((NOT (((CAST(vt0.c1 AS NUMERIC)) IS FALSE)))) UNION ALL SELECT ALL vt0.c1 FROM vt0 WHERE (((((CAST(vt0.c1 AS NUMERIC)) IS FALSE)) ISNULL));
SELECT vt0.c1 FROM vt0;
SELECT DISTINCT rt12.c2, rt12.c1, vt2.c0 FROM vt1, vt2, rt12;
SELECT DISTINCT rt12.c2, rt12.c1, vt2.c0 FROM vt1, vt2, rt12 WHERE ((('[') BETWEEN (HEX(rt12.c1)) AND (CAST(vt2.c0 AS REAL)))) UNION SELECT DISTINCT rt12.c2, rt12.c1, vt2.c0 FROM vt1, vt2, rt12 WHERE ((NOT ((('[') BETWEEN (HEX(rt12.c1)) AND (CAST(vt2.c0 AS REAL)))))) UNION SELECT DISTINCT rt12.c2, rt12.c1, vt2.c0 FROM vt1 NOT INDEXED, vt2, rt12 WHERE ((((('[') BETWEEN (HEX(rt12.c1)) AND (CAST(vt2.c0 AS REAL)))) ISNULL));
SELECT DISTINCT rt12.c2, rt12.c1, vt2.c0 FROM vt1, vt2, rt12;
SELECT vt1.c0, vt2.c0 FROM vt1, vt2 GROUP BY vt1.c0, vt2.c0;
SELECT ALL vt1.c0, vt2.c0 FROM vt1, vt2 WHERE ((((~ (vt1.c0))) NOT BETWEEN (vt1.c0) AND (((vt1.c0)>=(vt1.c0))))) GROUP BY vt1.c0, vt2.c0 UNION SELECT ALL vt1.c0, vt2.c0 FROM vt1, vt2 WHERE ((NOT ((((~ (vt1.c0))) NOT BETWEEN (vt1.c0) AND (((vt1.c0)>=(vt1.c0))))))) GROUP BY vt1.c0, vt2.c0 UNION SELECT ALL vt1.c0, vt2.c0 FROM vt1, vt2 WHERE ((((((~ (vt1.c0))) NOT BETWEEN (vt1.c0) AND (((vt1.c0)>=(vt1.c0))))) ISNULL)) GROUP BY vt1.c0, vt2.c0;
SELECT vt1.c0, vt2.c0 FROM vt1, vt2 GROUP BY vt1.c0, vt2.c0;
SELECT rt12.c0, rt12.c2 FROM vt1, rt12 GROUP BY rt12.c0, rt12.c2;
SELECT rt12.c0, rt12.c2 FROM vt1, rt12 GROUP BY rt12.c0, rt12.c2 HAVING TOTAL(((((rt12.c0)AND(GROUP_CONCAT(GROUP_CONCAT(rt12.c0)))))OR(rt12.c0))) UNION ALL SELECT ALL rt12.c0, rt12.c2 FROM vt1, rt12 GROUP BY rt12.c0, rt12.c2 HAVING (NOT (TOTAL(((((rt12.c0)AND(GROUP_CONCAT(GROUP_CONCAT(rt12.c0)))))OR(rt12.c0))))) UNION ALL SELECT rt12.c0, rt12.c2 FROM vt1 NOT INDEXED, rt12 GROUP BY rt12.c0, rt12.c2 HAVING ((TOTAL(((((rt12.c0)AND(GROUP_CONCAT(GROUP_CONCAT(rt12.c0)))))OR(rt12.c0)))) ISNULL);
SELECT ALL rt12.c0 FROM rt12;
SELECT rt12.c0 FROM rt12 WHERE (((((rt12.c0) BETWEEN (rt12.c1) AND (rt12.c0)))|(json_extract(rt12.c2, rt12.c1, rt12.c2, NULL)))) UNION ALL SELECT ALL rt12.c0 FROM rt12 WHERE ((NOT (((((rt12.c0) BETWEEN (rt12.c1) AND (rt12.c0)))|(json_extract(rt12.c2, rt12.c1, rt12.c2, NULL)))))) UNION ALL SELECT rt12.c0 FROM rt12 WHERE (((((((rt12.c0) BETWEEN (rt12.c1) AND (rt12.c0)))|(json_extract(rt12.c2, rt12.c1, rt12.c2, NULL)))) ISNULL));
SELECT DISTINCT * FROM rt12, vt0;
SELECT DISTINCT * FROM rt12, vt0 WHERE (((((vt0.c1 COLLATE BINARY)AND((((rt12.c2)) NOT BETWEEN ((rt12.c2)) AND ((rt12.c1))))))OR(((rt12.c0) NOT BETWEEN (rt12.c0) AND (vt0.c0))))) UNION SELECT DISTINCT * FROM rt12, vt0 WHERE ((NOT (((((vt0.c1 COLLATE BINARY)AND((((rt12.c2)) NOT BETWEEN ((rt12.c2)) AND ((rt12.c1))))))OR(((rt12.c0) NOT BETWEEN (rt12.c0) AND (vt0.c0))))))) UNION SELECT DISTINCT * FROM rt12, vt0 WHERE (((((((vt0.c1 COLLATE BINARY)AND((((rt12.c2)) NOT BETWEEN ((rt12.c2)) AND ((rt12.c1))))))OR(((rt12.c0) NOT BETWEEN (rt12.c0) AND (vt0.c0))))) ISNULL));
SELECT DISTINCT * FROM rt12, vt0;
SELECT ALL vt2.c0, vt0.c0, vt0.c1 FROM vt0, vt2 GROUP BY vt2.c0, vt0.c0, vt0.c1;
SELECT ALL vt2.c0, vt0.c0, vt0.c1 FROM vt0, vt2 WHERE (((vt0.c1) ISNULL)) GROUP BY vt2.c0, vt0.c0, vt0.c1 UNION SELECT ALL vt2.c0, vt0.c0, vt0.c1 FROM vt0, vt2 WHERE ((NOT (((vt0.c1) ISNULL)))) GROUP BY vt2.c0, vt0.c0, vt0.c1 UNION SELECT ALL vt2.c0, vt0.c0, vt0.c1 FROM vt0, vt2 WHERE (((((vt0.c1) ISNULL)) ISNULL)) GROUP BY vt2.c0, vt0.c0, vt0.c1;
SELECT ALL vt2.c0, vt0.c0, vt0.c1 FROM vt0, vt2 GROUP BY vt2.c0, vt0.c0, vt0.c1;
SELECT rt12.c0, rt12.c2 FROM vt2, rt12, vt1 GROUP BY rt12.c0, rt12.c2;
SELECT rt12.c0, rt12.c2 FROM vt2, rt12, vt1 GROUP BY rt12.c0, rt12.c2 HAVING ((CASE rt12.c2  WHEN MAX(COUNT(MIN(SUM(rt12.c0)))) THEN COUNT(COUNT(*)) WHEN vt1.c0 THEN TOTAL(MIN(COUNT(*))) WHEN vt2.c0 THEN vt1.c0 ELSE COUNT(MAX(COUNT(*))) END)IS(MIN(NULL))) UNION ALL SELECT ALL rt12.c0, rt12.c2 FROM vt2, rt12, vt1 GROUP BY rt12.c0, rt12.c2 HAVING (NOT (((CASE rt12.c2  WHEN MAX(COUNT(MIN(SUM(rt12.c0)))) THEN COUNT(COUNT(*)) WHEN vt1.c0 THEN TOTAL(MIN(COUNT(*))) WHEN vt2.c0 THEN vt1.c0 ELSE COUNT(MAX(COUNT(*))) END)IS(MIN(NULL))))) UNION ALL SELECT ALL rt12.c0, rt12.c2 FROM vt2, rt12, vt1 GROUP BY rt12.c0, rt12.c2 HAVING ((((CASE rt12.c2  WHEN MAX(COUNT(MIN(SUM(rt12.c0)))) THEN COUNT(COUNT(*)) WHEN vt1.c0 THEN TOTAL(MIN(COUNT(*))) WHEN vt2.c0 THEN vt1.c0 ELSE COUNT(MAX(COUNT(*))) END)IS(MIN(NULL)))) ISNULL);
SELECT ALL vt1.c0 FROM vt1;
SELECT ALL vt1.c0 FROM vt1 WHERE (((CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END) BETWEEN (((('0.6827782924515643')) BETWEEN ((0.4154420540982471)) AND ((vt1.c0)))) AND (TRIM(DISTINCT vt1.c0, vt1.c0)))) UNION ALL SELECT vt1.c0 FROM vt1 WHERE ((NOT (((CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END) BETWEEN (((('0.6827782924515643')) BETWEEN ((0.4154420540982471)) AND ((vt1.c0)))) AND (TRIM(DISTINCT vt1.c0, vt1.c0)))))) UNION ALL SELECT vt1.c0 FROM vt1 WHERE (((((CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END) BETWEEN (((('0.6827782924515643')) BETWEEN ((0.4154420540982471)) AND ((vt1.c0)))) AND (TRIM(DISTINCT vt1.c0, vt1.c0)))) ISNULL));
SELECT ALL vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((((vt1.c0) ISNULL)) IS TRUE)) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT (((((vt1.c0) ISNULL)) IS TRUE)))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((((((vt1.c0) ISNULL)) IS TRUE)) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE (CASE (- (vt1.c0))  WHEN (vt1.c0 IN ()) THEN vt1.c0 END) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (CASE (- (vt1.c0))  WHEN (vt1.c0 IN ()) THEN vt1.c0 END))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE (((CASE (- (vt1.c0))  WHEN (vt1.c0 IN ()) THEN vt1.c0 END) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt0.c1, vt0.c0, vt2.c0, vt1.c0, rt12.c1, rt12.c0 FROM vt2, vt0, rt12 NATURAL JOIN vt1 GROUP BY vt0.c1, vt0.c0, vt2.c0, vt1.c0, rt12.c1, rt12.c0;
SELECT vt0.c1, vt0.c0, vt2.c0, vt1.c0, rt12.c1, rt12.c0 FROM vt2, vt0, rt12 NATURAL JOIN vt1 GROUP BY vt0.c1, vt0.c0, vt2.c0, vt1.c0, rt12.c1, rt12.c0 HAVING GROUP_CONCAT(((GROUP_CONCAT(TOTAL(vt2.c0)))LIKE(SUM(TOTAL('0.06381376117960602'))))) UNION ALL SELECT ALL vt0.c1, vt0.c0, vt2.c0, vt1.c0, rt12.c1, rt12.c0 FROM vt2 NOT INDEXED, vt0, rt12 NATURAL JOIN vt1 GROUP BY vt0.c1, vt0.c0, vt2.c0, vt1.c0, rt12.c1, rt12.c0 HAVING (NOT (GROUP_CONCAT(((GROUP_CONCAT(TOTAL(vt2.c0)))LIKE(SUM(TOTAL('0.06381376117960602'))))))) UNION ALL SELECT ALL vt0.c1, vt0.c0, vt2.c0, vt1.c0, rt12.c1, rt12.c0 FROM vt2, vt0, rt12 NATURAL JOIN vt1 GROUP BY vt0.c1, vt0.c0, vt2.c0, vt1.c0, rt12.c1, rt12.c0 HAVING ((GROUP_CONCAT(((GROUP_CONCAT(TOTAL(vt2.c0)))LIKE(SUM(TOTAL('0.06381376117960602')))))) ISNULL);
SELECT vt1.c0 FROM vt1;
SELECT vt1.c0 FROM vt1 WHERE ((vt1.c0 IN ())) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT ((vt1.c0 IN ())))) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE ((((vt1.c0 IN ())) ISNULL));
SELECT vt1.c0 FROM vt1;
SELECT DISTINCT * FROM vt2, vt1, vt0, rt12;
SELECT DISTINCT * FROM vt2, vt1, vt0, rt12 WHERE ((((rt12.c0) IS TRUE) IN ())) UNION SELECT DISTINCT * FROM vt2, vt1, vt0, rt12 WHERE ((NOT ((((rt12.c0) IS TRUE) IN ())))) UNION SELECT DISTINCT * FROM vt2, vt1, vt0, rt12 WHERE ((((((rt12.c0) IS TRUE) IN ())) ISNULL));
SELECT DISTINCT * FROM vt2, vt1, vt0, rt12;
SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT ALL vt2.c0 FROM vt2 WHERE ((+ (CASE WHEN vt2.c0 THEN vt2.c0 ELSE vt2.c0 END))) GROUP BY vt2.c0 UNION SELECT vt2.c0 FROM vt2 WHERE ((NOT ((+ (CASE WHEN vt2.c0 THEN vt2.c0 ELSE vt2.c0 END))))) GROUP BY vt2.c0 UNION SELECT ALL vt2.c0 FROM vt2 WHERE ((((+ (CASE WHEN vt2.c0 THEN vt2.c0 ELSE vt2.c0 END))) ISNULL)) GROUP BY vt2.c0;
SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT ALL rt12.c0, rt12.c1, vt0.c1, vt2.c0, vt1.c0, vt0.c0 FROM vt1, vt0, rt12 NOT INDEXED, vt2 GROUP BY rt12.c0, rt12.c1, vt0.c1, vt2.c0, vt1.c0, vt0.c0;
SELECT ALL rt12.c0, rt12.c1, vt0.c1, vt2.c0, vt1.c0, vt0.c0 FROM vt1, vt0, rt12, vt2 GROUP BY rt12.c0, rt12.c1, vt0.c1, vt2.c0, vt1.c0, vt0.c0 HAVING ((CASE rt12.c0  WHEN MIN(COUNT(*)) THEN vt0.c0 END) IS TRUE) UNION ALL SELECT rt12.c0, rt12.c1, vt0.c1, vt2.c0, vt1.c0, vt0.c0 FROM vt1, vt0, rt12, vt2 GROUP BY rt12.c0, rt12.c1, vt0.c1, vt2.c0, vt1.c0, vt0.c0 HAVING (NOT (((CASE rt12.c0  WHEN MIN(COUNT(*)) THEN vt0.c0 END) IS TRUE))) UNION ALL SELECT rt12.c0, rt12.c1, vt0.c1, vt2.c0, vt1.c0, vt0.c0 FROM vt1, vt0, rt12, vt2 GROUP BY rt12.c0, rt12.c1, vt0.c1, vt2.c0, vt1.c0, vt0.c0 HAVING ((((CASE rt12.c0  WHEN MIN(COUNT(*)) THEN vt0.c0 END) IS TRUE)) ISNULL);
SELECT * FROM vt2, vt0, vt1, rt12;
SELECT ALL * FROM vt2, vt0, vt1, rt12 WHERE ((~ ((+ (vt0.c0))))) UNION ALL SELECT * FROM vt2, vt0, vt1, rt12 WHERE ((NOT ((~ ((+ (vt0.c0))))))) UNION ALL SELECT * FROM vt2, vt0, vt1, rt12 WHERE ((((~ ((+ (vt0.c0))))) ISNULL));
SELECT * FROM vt2, vt0, vt1, rt12;
SELECT DISTINCT * FROM vt0, vt1;
SELECT DISTINCT * FROM vt0, vt1 WHERE (((((((vt0.c0)<(vt0.c1)))AND(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)))AND(vt0.c0 COLLATE BINARY))) UNION SELECT DISTINCT * FROM vt0, vt1 WHERE ((NOT (((((((vt0.c0)<(vt0.c1)))AND(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)))AND(vt0.c0 COLLATE BINARY))))) UNION SELECT DISTINCT * FROM vt0, vt1 WHERE (((((((((vt0.c0)<(vt0.c1)))AND(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)))AND(vt0.c0 COLLATE BINARY))) ISNULL));
SELECT DISTINCT * FROM vt0, vt1;
SELECT rt12.c1 FROM rt12, vt0 GROUP BY rt12.c1;
SELECT ALL rt12.c1 FROM rt12, vt0 WHERE (((vt0.c1)>>(((vt0.c1) NOT BETWEEN (vt0.c0) AND (rt12.c1))))) GROUP BY rt12.c1 UNION SELECT ALL rt12.c1 FROM rt12, vt0 WHERE ((NOT (((vt0.c1)>>(((vt0.c1) NOT BETWEEN (vt0.c0) AND (rt12.c1))))))) GROUP BY rt12.c1 UNION SELECT rt12.c1 FROM rt12 NOT INDEXED, vt0 WHERE (((((vt0.c1)>>(((vt0.c1) NOT BETWEEN (vt0.c0) AND (rt12.c1))))) ISNULL)) GROUP BY rt12.c1;
SELECT rt12.c1 FROM rt12, vt0 GROUP BY rt12.c1;
SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING ((TOTAL(vt2.c0))AND(((((vt2.c0)AND(COUNT(TOTAL(vt2.c0)))))AND(NULL)))) UNION ALL SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING (NOT (((TOTAL(vt2.c0))AND(((((vt2.c0)AND(COUNT(TOTAL(vt2.c0)))))AND(NULL)))))) UNION ALL SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING ((((TOTAL(vt2.c0))AND(((((vt2.c0)AND(COUNT(TOTAL(vt2.c0)))))AND(NULL))))) ISNULL);
SELECT ALL * FROM vt2 RIGHT OUTER JOIN vt1 ON ((((vt1.c0)-(NULL))) BETWEEN (((0.37829332271363525)||(vt2.c0))) AND (0Xffffffffff6aca37 COLLATE BINARY));
SELECT ALL * FROM vt2 RIGHT OUTER JOIN vt1 ON ((((vt1.c0)-(NULL))) BETWEEN (((0.37829332271363525)||(vt2.c0))) AND (0Xffffffffff6aca37 COLLATE BINARY)) WHERE (((((((((((((((((0.8165490855558897)OR(x'')))OR(vt2.c0)))AND(vt2.c0)))AND(vt1.c0)))OR(CASE WHEN vt2.c0 THEN -318998551 ELSE vt1.c0 END)))AND(LIKELIHOOD(DISTINCT vt1.c0, 0.5595407304676053))))AND(((vt1.c0)>>(vt1.c0)))))OR(CAST(vt2.c0 AS REAL)))) UNION ALL SELECT ALL * FROM vt2 RIGHT OUTER JOIN vt1 ON ((((vt1.c0)-(NULL))) BETWEEN (((0.37829332271363525)||(vt2.c0))) AND (0Xffffffffff6aca37 COLLATE BINARY)) WHERE ((NOT (((((((((((((((((0.8165490855558897)OR(x'')))OR(vt2.c0)))AND(vt2.c0)))AND(vt1.c0)))OR(CASE WHEN vt2.c0 THEN -318998551 ELSE vt1.c0 END)))AND(LIKELIHOOD(DISTINCT vt1.c0, 0.5595407304676053))))AND(((vt1.c0)>>(vt1.c0)))))OR(CAST(vt2.c0 AS REAL)))))) UNION ALL SELECT * FROM vt2 RIGHT OUTER JOIN vt1 ON ((((vt1.c0)-(NULL))) BETWEEN (((0.37829332271363525)||(vt2.c0))) AND (0xffffffffff6aca37 COLLATE BINARY)) WHERE (((((((((((((((((((0.8165490855558897)OR(x'')))OR(vt2.c0)))AND(vt2.c0)))AND(vt1.c0)))OR(CASE WHEN vt2.c0 THEN -318998551 ELSE vt1.c0 END)))AND(LIKELIHOOD(DISTINCT vt1.c0, 0.5595407304676053))))AND(((vt1.c0)>>(vt1.c0)))))OR(CAST(vt2.c0 AS REAL)))) ISNULL));
SELECT ALL * FROM vt2 RIGHT OUTER JOIN vt1 ON ((((vt1.c0)-(NULL))) BETWEEN (((0.37829332271363525)||(vt2.c0))) AND (0Xffffffffff6aca37 COLLATE BINARY));
SELECT DISTINCT * FROM vt2, vt0;
SELECT DISTINCT * FROM vt2, vt0 WHERE (CASE WHEN UNLIKELY(vt0.c1) THEN vt0.c0 ELSE vt2.c0 END) UNION SELECT DISTINCT * FROM vt2, vt0 WHERE ((NOT (CASE WHEN UNLIKELY(vt0.c1) THEN vt0.c0 ELSE vt2.c0 END))) UNION SELECT DISTINCT * FROM vt2, vt0 WHERE (((CASE WHEN UNLIKELY(vt0.c1) THEN vt0.c0 ELSE vt2.c0 END) ISNULL));
SELECT DISTINCT * FROM vt2, vt0;
SELECT vt0.c0, vt0.c1, vt1.c0 FROM vt1, vt0, vt2 GROUP BY vt0.c0, vt0.c1, vt1.c0;
SELECT vt0.c0, vt0.c1, vt1.c0 FROM vt1, vt0, vt2 WHERE (INSTR((NOT (vt1.c0)), vt2.c0)) GROUP BY vt0.c0, vt0.c1, vt1.c0 UNION SELECT ALL vt0.c0, vt0.c1, vt1.c0 FROM vt1, vt0, vt2 WHERE ((NOT (INSTR((NOT (vt1.c0)), vt2.c0)))) GROUP BY vt0.c0, vt0.c1, vt1.c0 UNION SELECT vt0.c0, vt0.c1, vt1.c0 FROM vt1, vt0, vt2 WHERE (((INSTR((NOT (vt1.c0)), vt2.c0)) ISNULL)) GROUP BY vt0.c0, vt0.c1, vt1.c0;
SELECT vt0.c0, vt0.c1, vt1.c0 FROM vt1, vt0, vt2 GROUP BY vt0.c0, vt0.c1, vt1.c0;
SELECT ALL vt2.c0 FROM vt1, vt2 NOT INDEXED GROUP BY vt2.c0;
SELECT ALL vt2.c0 FROM vt1, vt2 GROUP BY vt2.c0 HAVING SUM(TOTAL(vt2.c0)) UNION ALL SELECT vt2.c0 FROM vt1, vt2 GROUP BY vt2.c0 HAVING (NOT (SUM(TOTAL(vt2.c0)))) UNION ALL SELECT ALL vt2.c0 FROM vt1, vt2 GROUP BY vt2.c0 HAVING ((SUM(TOTAL(vt2.c0))) ISNULL);
SELECT ALL * FROM vt2, vt1;
SELECT * FROM vt2, vt1 WHERE (CASE '' COLLATE RTRIM  WHEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt2.c0)) THEN (((('-373082741')AND(vt1.c0)))OR(vt1.c0)) ELSE vt2.c0 END) UNION ALL SELECT ALL * FROM vt2, vt1 WHERE ((NOT (CASE '' COLLATE RTRIM  WHEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt2.c0)) THEN (((('-373082741')AND(vt1.c0)))OR(vt1.c0)) ELSE vt2.c0 END))) UNION ALL SELECT ALL * FROM vt2, vt1 WHERE (((CASE '' COLLATE RTRIM  WHEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt2.c0)) THEN (((('-373082741')AND(vt1.c0)))OR(vt1.c0)) ELSE vt2.c0 END) ISNULL));
SELECT ALL * FROM vt2, vt1;
SELECT DISTINCT vt0.c0, vt0.c1, vt1.c0 FROM vt0, vt1;
SELECT DISTINCT vt0.c0, vt0.c1, vt1.c0 FROM vt0, vt1 WHERE (0.22884111167131294) UNION SELECT DISTINCT vt0.c0, vt0.c1, vt1.c0 FROM vt0, vt1 WHERE ((NOT (0.22884111167131294))) UNION SELECT DISTINCT vt0.c0, vt0.c1, vt1.c0 FROM vt0, vt1 WHERE (((0.22884111167131294) ISNULL));
SELECT DISTINCT vt0.c0, vt0.c1, vt1.c0 FROM vt0, vt1;
SELECT rt12.c1, rt12.c2 FROM rt12, vt2, vt1 GROUP BY rt12.c1, rt12.c2;
SELECT rt12.c1, rt12.c2 FROM rt12, vt2, vt1 WHERE (CASE WHEN 'o*9+z2；' THEN (((vt1.c0))!=((vt1.c0))) WHEN (((rt12.c0)) NOT BETWEEN ((rt12.c0)) AND ((vt1.c0))) THEN LIKELY(DISTINCT rt12.c0) WHEN (('1338927575') IS FALSE) THEN (((-205640709)) BETWEEN ((vt2.c0)) AND ((rt12.c0))) ELSE (NOT (vt1.c0)) END) GROUP BY rt12.c1, rt12.c2 UNION SELECT rt12.c1, rt12.c2 FROM rt12, vt2, vt1 WHERE ((NOT (CASE WHEN 'o*9+z2；' THEN (((vt1.c0))!=((vt1.c0))) WHEN (((rt12.c0)) NOT BETWEEN ((rt12.c0)) AND ((vt1.c0))) THEN LIKELY(DISTINCT rt12.c0) WHEN (('1338927575') IS FALSE) THEN (((-205640709)) BETWEEN ((vt2.c0)) AND ((rt12.c0))) ELSE (NOT (vt1.c0)) END))) GROUP BY rt12.c1, rt12.c2 UNION SELECT ALL rt12.c1, rt12.c2 FROM rt12, vt2, vt1 WHERE (((CASE WHEN 'o*9+z2；' THEN (((vt1.c0))!=((vt1.c0))) WHEN (((rt12.c0)) NOT BETWEEN ((rt12.c0)) AND ((vt1.c0))) THEN LIKELY(DISTINCT rt12.c0) WHEN (('1338927575') IS FALSE) THEN (((-205640709)) BETWEEN ((vt2.c0)) AND ((rt12.c0))) ELSE (NOT (vt1.c0)) END) ISNULL)) GROUP BY rt12.c1, rt12.c2;
SELECT rt12.c1, rt12.c2 FROM rt12, vt2, vt1 GROUP BY rt12.c1, rt12.c2;
SELECT vt0.c1, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c1, vt1.c0;
SELECT ALL vt0.c1, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c1, vt1.c0 HAVING AVG(((MAX(MAX(COUNT(vt1.c0)))) IS FALSE)) UNION ALL SELECT ALL vt0.c1, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c1, vt1.c0 HAVING (NOT (AVG(((MAX(MAX(COUNT(vt1.c0)))) IS FALSE)))) UNION ALL SELECT vt0.c1, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c1, vt1.c0 HAVING ((AVG(((MAX(MAX(COUNT(vt1.c0)))) IS FALSE))) ISNULL);
SELECT * FROM vt2, vt1;
SELECT ALL * FROM vt2, vt1 WHERE (((vt1.c0) IS FALSE) COLLATE RTRIM) UNION ALL SELECT * FROM vt2 NOT INDEXED, vt1 WHERE ((NOT (((vt1.c0) IS FALSE) COLLATE RTRIM))) UNION ALL SELECT ALL * FROM vt2, vt1 WHERE (((((vt1.c0) IS FALSE) COLLATE RTRIM) ISNULL));
SELECT * FROM vt2, vt1;
SELECT DISTINCT vt0.c0, rt12.c0 FROM vt1, vt0, rt12;
SELECT DISTINCT vt0.c0, rt12.c0 FROM vt1, vt0, rt12 WHERE ((~ (CAST(vt0.c1 AS NUMERIC)))) UNION SELECT DISTINCT vt0.c0, rt12.c0 FROM vt1, vt0, rt12 WHERE ((NOT ((~ (CAST(vt0.c1 AS NUMERIC)))))) UNION SELECT DISTINCT vt0.c0, rt12.c0 FROM vt1, vt0, rt12 WHERE ((((~ (CAST(vt0.c1 AS NUMERIC)))) ISNULL));
SELECT DISTINCT vt0.c0, rt12.c0 FROM vt1, vt0, rt12;
SELECT ALL vt1.c0, vt0.c0 FROM vt0, vt2 FULL OUTER JOIN vt1 ON (((((((((rt12.c0 IN ()))OR(((vt1.c0) NOT BETWEEN (rt12.c1) AND (vt0.c0)))))OR(CASE vt0.c0  WHEN vt2.c0 THEN rt12.c2 WHEN '' THEN vt2.c0 WHEN vt1.c0 THEN rt12.c0 END)))AND(((NULL) IS FALSE))))AND(((rt12.c2) BETWEEN (vt0.c1) AND (vt2.c0)))) FULL OUTER JOIN rt12 ON CAST(((vt0.c0) BETWEEN (x'') AND (rt12.c0)) AS BLOB) GROUP BY vt1.c0, vt0.c0;
SELECT vt0.c0, rt12.c1, vt1.c0, vt0.c1 FROM vt1, vt0, rt12 GROUP BY vt0.c0, rt12.c1, vt1.c0, vt0.c1;
SELECT vt0.c0, rt12.c1, vt1.c0, vt0.c1 FROM vt1, vt0, rt12 GROUP BY vt0.c0, rt12.c1, vt1.c0, vt0.c1 HAVING TOTAL(vt1.c0) UNION ALL SELECT vt0.c0, rt12.c1, vt1.c0, vt0.c1 FROM vt1, vt0, rt12 GROUP BY vt0.c0, rt12.c1, vt1.c0, vt0.c1 HAVING (NOT (TOTAL(vt1.c0))) UNION ALL SELECT vt0.c0, rt12.c1, vt1.c0, vt0.c1 FROM vt1, vt0, rt12 GROUP BY vt0.c0, rt12.c1, vt1.c0, vt0.c1 HAVING ((TOTAL(vt1.c0)) ISNULL);
SELECT vt0.c0, rt12.c1, vt1.c0, vt0.c1 FROM vt1, vt0, rt12 GROUP BY vt0.c0, rt12.c1, vt1.c0, vt0.c1;
SELECT vt0.c0, rt12.c1, vt1.c0, vt0.c1 FROM vt1, vt0, rt12 GROUP BY vt0.c0, rt12.c1, vt1.c0, vt0.c1 HAVING TOTAL(vt1.c0) UNION ALL SELECT vt0.c0, rt12.c1, vt1.c0, vt0.c1 FROM vt1, vt0, rt12 GROUP BY vt0.c0, rt12.c1, vt1.c0, vt0.c1 HAVING (NOT (TOTAL(vt1.c0))) UNION ALL SELECT vt0.c0, rt12.c1, vt1.c0, vt0.c1 FROM vt1, vt0, rt12 GROUP BY vt0.c0, rt12.c1, vt1.c0, vt0.c1 HAVING ((TOTAL(vt1.c0)) ISNULL);
SELECT vt0.c0, rt12.c1, vt1.c0, vt0.c1 FROM vt1, vt0, rt12 GROUP BY vt0.c0, rt12.c1, vt1.c0, vt0.c1;
SELECT ALL vt2.c0 FROM vt2;
SELECT vt2.c0 FROM vt2 WHERE (x'') UNION ALL SELECT vt2.c0 FROM vt2 WHERE ((NOT (x''))) UNION ALL SELECT ALL vt2.c0 FROM vt2 WHERE (((x'') ISNULL));
SELECT ALL vt2.c0 FROM vt2;
SELECT DISTINCT * FROM vt2, vt1 RIGHT OUTER JOIN rt12 ON (((vt1.c0 IN ()))&((rt12.c0 IN ())));
SELECT DISTINCT * FROM vt2, vt1 RIGHT OUTER JOIN rt12 ON (((vt1.c0 IN ()))&((rt12.c0 IN ()))) WHERE (vt1.c0) UNION SELECT DISTINCT * FROM vt2, vt1 RIGHT OUTER JOIN rt12 ON (((vt1.c0 IN ()))&((rt12.c0 IN ()))) WHERE ((NOT (vt1.c0))) UNION SELECT DISTINCT * FROM vt2, vt1 RIGHT OUTER JOIN rt12 ON (((vt1.c0 IN ()))&((rt12.c0 IN ()))) WHERE (((vt1.c0) ISNULL));
SELECT DISTINCT * FROM vt2, vt1 RIGHT OUTER JOIN rt12 ON (((vt1.c0 IN ()))&((rt12.c0 IN ())));
SELECT ALL vt1.c0, vt2.c0 FROM vt2, vt1 GROUP BY vt1.c0, vt2.c0;
SELECT vt1.c0, vt2.c0 FROM vt2, vt1 WHERE (((((vt2.c0)=(vt2.c0)))==(vt2.c0 COLLATE BINARY))) GROUP BY vt1.c0, vt2.c0 UNION SELECT ALL vt1.c0, vt2.c0 FROM vt2, vt1 WHERE ((NOT (((((vt2.c0)==(vt2.c0)))=(vt2.c0 COLLATE BINARY))))) GROUP BY vt1.c0, vt2.c0 UNION SELECT vt1.c0, vt2.c0 FROM vt2, vt1 WHERE (((((((vt2.c0)==(vt2.c0)))=(vt2.c0 COLLATE BINARY))) ISNULL)) GROUP BY vt1.c0, vt2.c0;
SELECT ALL vt1.c0, vt2.c0 FROM vt2, vt1 GROUP BY vt1.c0, vt2.c0;
SELECT rt12.c1, rt12.c0, rt12.c2 FROM rt12 GROUP BY rt12.c1, rt12.c0, rt12.c2;
SELECT ALL rt12.c1, rt12.c0, rt12.c2 FROM rt12 GROUP BY rt12.c1, rt12.c0, rt12.c2 HAVING ((rt12.c0 COLLATE RTRIM)>=(GROUP_CONCAT(COUNT(COUNT(*))))) UNION ALL SELECT rt12.c1, rt12.c0, rt12.c2 FROM rt12 GROUP BY rt12.c1, rt12.c0, rt12.c2 HAVING (NOT (((rt12.c0 COLLATE RTRIM)>=(GROUP_CONCAT(COUNT(COUNT(*))))))) UNION ALL SELECT ALL rt12.c1, rt12.c0, rt12.c2 FROM rt12 GROUP BY rt12.c1, rt12.c0, rt12.c2 HAVING ((((rt12.c0 COLLATE RTRIM)>=(GROUP_CONCAT(COUNT(COUNT(*)))))) ISNULL);
SELECT ALL * FROM vt0, rt12, vt1;
SELECT * FROM vt0, rt12, vt1 WHERE (((((vt0.c0 IN ())))=((rt12.c2 COLLATE RTRIM)))) UNION ALL SELECT * FROM vt0, rt12, vt1 WHERE ((NOT (((((vt0.c0 IN ())))==((rt12.c2 COLLATE RTRIM)))))) UNION ALL SELECT ALL * FROM vt0, rt12, vt1 WHERE (((((((vt0.c0 IN ())))==((rt12.c2 COLLATE RTRIM)))) ISNULL));
SELECT ALL * FROM vt0, rt12, vt1;
SELECT DISTINCT * FROM vt1, rt12;
SELECT DISTINCT * FROM vt1, rt12 WHERE (((vt1.c0 COLLATE NOCASE)&(((rt12.c2)+(rt12.c2))))) UNION SELECT DISTINCT * FROM vt1, rt12 WHERE ((NOT (((vt1.c0 COLLATE NOCASE)&(((rt12.c2)+(rt12.c2))))))) UNION SELECT DISTINCT * FROM vt1, rt12 WHERE (((((vt1.c0 COLLATE NOCASE)&(((rt12.c2)+(rt12.c2))))) ISNULL));
SELECT DISTINCT * FROM vt1, rt12;
SELECT ALL rt12.c1, rt12.c2, vt0.c1, rt12.c0 FROM vt0, vt2, vt1, rt12 GROUP BY rt12.c1, rt12.c2, vt0.c1, rt12.c0;
SELECT ALL rt12.c1, rt12.c2, vt0.c1, rt12.c0 FROM vt0, vt2, vt1, rt12 WHERE (vt2.c0) GROUP BY rt12.c1, rt12.c2, vt0.c1, rt12.c0 UNION SELECT rt12.c1, rt12.c2, vt0.c1, rt12.c0 FROM vt0, vt2, vt1, rt12 WHERE ((NOT (vt2.c0))) GROUP BY rt12.c1, rt12.c2, vt0.c1, rt12.c0 UNION SELECT rt12.c1, rt12.c2, vt0.c1, rt12.c0 FROM vt0, vt2, vt1, rt12 WHERE (((vt2.c0) ISNULL)) GROUP BY rt12.c1, rt12.c2, vt0.c1, rt12.c0;
SELECT ALL rt12.c1, rt12.c2, vt0.c1, rt12.c0 FROM vt0, vt2, vt1, rt12 GROUP BY rt12.c1, rt12.c2, vt0.c1, rt12.c0;
SELECT ALL rt12.c0 FROM rt12 GROUP BY rt12.c0;
SELECT ALL rt12.c0 FROM rt12 GROUP BY rt12.c0 HAVING AVG(MAX(rt12.c2)) UNION ALL SELECT ALL rt12.c0 FROM rt12 GROUP BY rt12.c0 HAVING (NOT (AVG(MAX(rt12.c2)))) UNION ALL SELECT ALL rt12.c0 FROM rt12 GROUP BY rt12.c0 HAVING ((AVG(MAX(rt12.c2))) ISNULL);
SELECT SUM(CAST((('') NOTNULL) AS NUMERIC)) FROM vt1, vt2, vt0, rt12;
SELECT ALL rt12.c1 FROM rt12, vt2;
SELECT rt12.c1 FROM rt12, vt2 WHERE (CASE WHEN (rt12.c2 IN (rt12.c0)) THEN (+ (rt12.c1)) END) ORDER BY (('1416205993') IS FALSE) COLLATE RTRIM;
SELECT rt12.c1 FROM rt12, vt2 WHERE ((NOT (CASE WHEN (rt12.c2 IN (rt12.c0)) THEN (+ (rt12.c1)) END))) ORDER BY (('1416205993') IS FALSE) COLLATE RTRIM;
SELECT ALL rt12.c1 FROM rt12, vt2 WHERE (((CASE WHEN (rt12.c2 IN (rt12.c0)) THEN (+ (rt12.c1)) END) ISNULL)) ORDER BY (('1416205993') IS FALSE) COLLATE RTRIM;
SELECT ALL rt12.c1 FROM rt12, vt2;
SELECT DISTINCT rt12.c2, vt2.c0 FROM vt0, vt1, vt2, rt12;
SELECT DISTINCT rt12.c2, vt2.c0 FROM vt0, vt1, vt2, rt12 WHERE ((((vt0.c1)) NOT BETWEEN ((((0.4206987260448106) NOT BETWEEN (rt12.c0) AND (rt12.c1)))) AND ((((vt2.c0) NOT BETWEEN (rt12.c2) AND (rt12.c0)))))) UNION SELECT DISTINCT rt12.c2, vt2.c0 FROM vt0, vt1, vt2, rt12 WHERE ((NOT ((((vt0.c1)) NOT BETWEEN ((((0.4206987260448106) NOT BETWEEN (rt12.c0) AND (rt12.c1)))) AND ((((vt2.c0) NOT BETWEEN (rt12.c2) AND (rt12.c0)))))))) UNION SELECT DISTINCT rt12.c2, vt2.c0 FROM vt0, vt1, vt2, rt12 WHERE ((((((vt0.c1)) NOT BETWEEN ((((0.4206987260448106) NOT BETWEEN (rt12.c0) AND (rt12.c1)))) AND ((((vt2.c0) NOT BETWEEN (rt12.c2) AND (rt12.c0)))))) ISNULL));
SELECT DISTINCT rt12.c2, vt2.c0 FROM vt0, vt1, vt2, rt12;
SELECT ALL vt2.c0 FROM vt2, rt12 GROUP BY vt2.c0;
SELECT ALL vt2.c0 FROM vt2, rt12 WHERE (CASE WHEN '1416205993' COLLATE BINARY THEN (((vt2.c0, vt2.c0, rt12.c1))<=((rt12.c1, vt2.c0, rt12.c1))) ELSE (~ (rt12.c1)) END) GROUP BY vt2.c0 UNION SELECT ALL vt2.c0 FROM vt2, rt12 WHERE ((NOT (CASE WHEN '1416205993' COLLATE BINARY THEN (((vt2.c0, vt2.c0, rt12.c1))<=((rt12.c1, vt2.c0, rt12.c1))) ELSE (~ (rt12.c1)) END))) GROUP BY vt2.c0 UNION SELECT ALL vt2.c0 FROM vt2, rt12 WHERE (((CASE WHEN '1416205993' COLLATE BINARY THEN (((vt2.c0, vt2.c0, rt12.c1))<=((rt12.c1, vt2.c0, rt12.c1))) ELSE (~ (rt12.c1)) END) ISNULL)) GROUP BY vt2.c0;
SELECT ALL vt2.c0 FROM vt2, rt12 GROUP BY vt2.c0;
SELECT rt12.c2, vt0.c1, rt12.c0, vt2.c0, vt1.c0 FROM vt1, vt0, rt12, vt2 GROUP BY rt12.c2, vt0.c1, rt12.c0, vt2.c0, vt1.c0;
SELECT rt12.c2, vt0.c1, rt12.c0, vt2.c0, vt1.c0 FROM vt1, vt0, rt12, vt2 GROUP BY rt12.c2, vt0.c1, rt12.c0, vt2.c0, vt1.c0 HAVING GROUP_CONCAT(MIN(MAX(vt0.c1))) UNION ALL SELECT ALL rt12.c2, vt0.c1, rt12.c0, vt2.c0, vt1.c0 FROM vt1, vt0, rt12, vt2 GROUP BY rt12.c2, vt0.c1, rt12.c0, vt2.c0, vt1.c0 HAVING (NOT (GROUP_CONCAT(MIN(MAX(vt0.c1))))) UNION ALL SELECT rt12.c2, vt0.c1, rt12.c0, vt2.c0, vt1.c0 FROM vt1, vt0, rt12, vt2 GROUP BY rt12.c2, vt0.c1, rt12.c0, vt2.c0, vt1.c0 HAVING ((GROUP_CONCAT(MIN(MAX(vt0.c1)))) ISNULL);
SELECT * FROM vt1 CROSS JOIN rt12 ON ((((rt12.c2)%(rt12.c0)))IS NOT(((rt12.c2)=(rt12.c0))));
SELECT * FROM vt1 CROSS JOIN rt12 ON ((((rt12.c2)%(rt12.c0)))IS NOT(((rt12.c2)=(rt12.c0)))) WHERE ((((((((((((((vt1.c0 IN (rt12.c2)))OR((((0xffffffffd2b2f5a3)) BETWEEN ((rt12.c1)) AND ((rt12.c1))))))AND(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END)))OR(((rt12.c1) NOTNULL))))AND(vt1.c0 COLLATE BINARY)))OR(((((((((rt12.c1)AND(rt12.c0)))AND(0.8190916236103379)))AND(vt1.c0)))OR(rt12.c0)))))AND((((rt12.c0)) NOT BETWEEN ((rt12.c0)) AND ((vt1.c0)))))) UNION ALL SELECT ALL * FROM vt1 CROSS JOIN rt12 ON ((((rt12.c2)%(rt12.c0)))IS NOT(((rt12.c2)==(rt12.c0)))) WHERE ((NOT ((((((((((((((vt1.c0 IN (rt12.c2)))OR((((0Xffffffffd2b2f5a3)) BETWEEN ((rt12.c1)) AND ((rt12.c1))))))AND(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END)))OR(((rt12.c1) NOTNULL))))AND(vt1.c0 COLLATE BINARY)))OR(((((((((rt12.c1)AND(rt12.c0)))AND(0.8190916236103379)))AND(vt1.c0)))OR(rt12.c0)))))AND((((rt12.c0)) NOT BETWEEN ((rt12.c0)) AND ((vt1.c0)))))))) UNION ALL SELECT * FROM vt1 CROSS JOIN rt12 ON ((((rt12.c2)%(rt12.c0)))IS NOT(((rt12.c2)=(rt12.c0)))) WHERE ((((((((((((((((vt1.c0 IN (rt12.c2)))OR((((0xffffffffd2b2f5a3)) BETWEEN ((rt12.c1)) AND ((rt12.c1))))))AND(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END)))OR(((rt12.c1) NOTNULL))))AND(vt1.c0 COLLATE BINARY)))OR(((((((((rt12.c1)AND(rt12.c0)))AND(0.8190916236103379)))AND(vt1.c0)))OR(rt12.c0)))))AND((((rt12.c0)) NOT BETWEEN ((rt12.c0)) AND ((vt1.c0)))))) ISNULL));
SELECT * FROM vt1 CROSS JOIN rt12 ON ((((rt12.c2)%(rt12.c0)))IS NOT(((rt12.c2)=(rt12.c0))));
SELECT DISTINCT vt2.c0 FROM vt2;
SELECT DISTINCT vt2.c0 FROM vt2 WHERE (((vt2.c0)%(((vt2.c0)&(vt2.c0))))) UNION SELECT DISTINCT vt2.c0 FROM vt2 WHERE ((NOT (((vt2.c0)%(((vt2.c0)&(vt2.c0))))))) UNION SELECT DISTINCT vt2.c0 FROM vt2 WHERE (((((vt2.c0)%(((vt2.c0)&(vt2.c0))))) ISNULL));
SELECT DISTINCT vt2.c0 FROM vt2;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE (((((QUOTE(vt1.c0))AND(vt1.c0 COLLATE BINARY)))OR(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE -219838018 END))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT (((((QUOTE(vt1.c0))AND(vt1.c0 COLLATE BINARY)))OR(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE -219838018 END))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE (((((((QUOTE(vt1.c0))AND(vt1.c0 COLLATE BINARY)))OR(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE -219838018 END))) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING COUNT(MIN(COUNT(*))) UNION ALL SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING (NOT (COUNT(MIN(COUNT(*))))) UNION ALL SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING ((COUNT(MIN(COUNT(*)))) ISNULL);
SELECT MAX((~ ((('''+\n⥈_ch_(')%(vt0.c0))))) FROM vt2, vt0, vt1 ORDER BY ((CAST(vt2.c0 AS NUMERIC))||(((vt1.c0) IS FALSE)));
SELECT ALL * FROM vt1;
SELECT ALL * FROM vt1 WHERE (((LIKELIHOOD(vt1.c0, 0.1749301166931101))GLOB(((vt1.c0) IS TRUE)))) UNION ALL SELECT * FROM vt1 WHERE ((NOT (((LIKELIHOOD(vt1.c0, 0.1749301166931101))GLOB(((vt1.c0) IS TRUE)))))) UNION ALL SELECT ALL * FROM vt1 WHERE (((((LIKELIHOOD(vt1.c0, 0.1749301166931101))GLOB(((vt1.c0) IS TRUE)))) ISNULL));
SELECT ALL * FROM vt1;
SELECT DISTINCT * FROM vt1, vt0;
SELECT DISTINCT * FROM vt1, vt0 WHERE ('if1(GG)烽') UNION SELECT DISTINCT * FROM vt1, vt0 WHERE ((NOT ('if1(GG)烽'))) UNION SELECT DISTINCT * FROM vt1, vt0 WHERE ((('if1(GG)烽') ISNULL));
SELECT DISTINCT * FROM vt1, vt0;
SELECT ALL rt12.c2, vt2.c0, vt1.c0, rt12.c0 FROM vt2 LEFT OUTER JOIN rt12 ON (~ (vt1.c0)) COLLATE NOCASE CROSS JOIN vt1 ON rt12.c0 GROUP BY rt12.c2, vt2.c0, vt1.c0, rt12.c0;
SELECT ALL rt12.c2, vt2.c0, vt1.c0, rt12.c0 FROM vt2 LEFT OUTER JOIN rt12 ON (~ (vt1.c0)) COLLATE NOCASE CROSS JOIN vt1 ON rt12.c0 WHERE (((+ (rt12.c0)) IN ((~ (vt1.c0))))) GROUP BY rt12.c2, vt2.c0, vt1.c0, rt12.c0 UNION SELECT rt12.c2, vt2.c0, vt1.c0, rt12.c0 FROM vt2 LEFT OUTER JOIN rt12 ON (~ (vt1.c0)) COLLATE NOCASE CROSS JOIN vt1 ON rt12.c0 WHERE ((NOT (((+ (rt12.c0)) IN ((~ (vt1.c0))))))) GROUP BY rt12.c2, vt2.c0, vt1.c0, rt12.c0 UNION SELECT rt12.c2, vt2.c0, vt1.c0, rt12.c0 FROM vt2 LEFT OUTER JOIN rt12 ON (~ (vt1.c0)) COLLATE NOCASE CROSS JOIN vt1 ON rt12.c0 WHERE (((((+ (rt12.c0)) IN ((~ (vt1.c0))))) ISNULL)) GROUP BY rt12.c2, vt2.c0, vt1.c0, rt12.c0;
SELECT ALL rt12.c2, vt2.c0, vt1.c0, rt12.c0 FROM vt2 LEFT OUTER JOIN rt12 ON (~ (vt1.c0)) COLLATE NOCASE CROSS JOIN vt1 ON rt12.c0 GROUP BY rt12.c2, vt2.c0, vt1.c0, rt12.c0;
SELECT ALL vt0.c1, vt2.c0 FROM vt0, vt2 GROUP BY vt0.c1, vt2.c0;
SELECT vt0.c1, vt2.c0 FROM vt0, vt2 GROUP BY vt0.c1, vt2.c0 HAVING ((((vt0.c0) BETWEEN (COUNT(vt2.c0)) AND (vt2.c0))) NOT BETWEEN (AVG(vt0.c1)) AND (SUM(COUNT(vt0.c0)))) UNION ALL SELECT ALL vt0.c1, vt2.c0 FROM vt0, vt2 GROUP BY vt0.c1, vt2.c0 HAVING (NOT (((((vt0.c0) BETWEEN (COUNT(vt2.c0)) AND (vt2.c0))) NOT BETWEEN (AVG(vt0.c1)) AND (SUM(COUNT(vt0.c0)))))) UNION ALL SELECT ALL vt0.c1, vt2.c0 FROM vt0, vt2 GROUP BY vt0.c1, vt2.c0 HAVING ((((((vt0.c0) BETWEEN (COUNT(vt2.c0)) AND (vt2.c0))) NOT BETWEEN (AVG(vt0.c1)) AND (SUM(COUNT(vt0.c0))))) ISNULL);
SELECT SUM(LOWER(CAST(NULL AS TEXT))) FROM vt1, vt0, vt2 ORDER BY ((vt0.c0 COLLATE NOCASE) BETWEEN ('gM') AND (CAST(vt0.c0 AS INTEGER))) ASC  NULLS LAST;
SELECT * FROM vt0;
SELECT * FROM vt0 WHERE (((vt0.c0 COLLATE BINARY)*((((vt0.c0))=((vt0.c1)))))) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (((vt0.c0 COLLATE BINARY)*((((vt0.c0))==((vt0.c1)))))))) UNION ALL SELECT * FROM vt0 WHERE (((((vt0.c0 COLLATE BINARY)*((((vt0.c0))=((vt0.c1)))))) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT rt12.c1, vt2.c0, rt12.c2 FROM vt2, rt12;
SELECT DISTINCT rt12.c1, vt2.c0, rt12.c2 FROM vt2, rt12 WHERE (CASE WHEN CAST(rt12.c0 AS NUMERIC) THEN CASE rt12.c2  WHEN vt2.c0 THEN vt2.c0 ELSE vt2.c0 END WHEN ((rt12.c1)*(rt12.c2)) THEN ((vt2.c0)/(rt12.c0)) WHEN UPPER(vt2.c0) THEN ABS(rt12.c2) ELSE LIKELIHOOD(DISTINCT rt12.c2, 0.5051793026587562) END) UNION SELECT DISTINCT rt12.c1, vt2.c0, rt12.c2 FROM vt2, rt12 WHERE ((NOT (CASE WHEN CAST(rt12.c0 AS NUMERIC) THEN CASE rt12.c2  WHEN vt2.c0 THEN vt2.c0 ELSE vt2.c0 END WHEN ((rt12.c1)*(rt12.c2)) THEN ((vt2.c0)/(rt12.c0)) WHEN UPPER(vt2.c0) THEN ABS(rt12.c2) ELSE LIKELIHOOD(DISTINCT rt12.c2, 0.5051793026587562) END))) UNION SELECT DISTINCT rt12.c1, vt2.c0, rt12.c2 FROM vt2, rt12 WHERE (((CASE WHEN CAST(rt12.c0 AS NUMERIC) THEN CASE rt12.c2  WHEN vt2.c0 THEN vt2.c0 ELSE vt2.c0 END WHEN ((rt12.c1)*(rt12.c2)) THEN ((vt2.c0)/(rt12.c0)) WHEN UPPER(vt2.c0) THEN ABS(rt12.c2) ELSE LIKELIHOOD(DISTINCT rt12.c2, 0.5051793026587562) END) ISNULL));
SELECT DISTINCT rt12.c1, vt2.c0, rt12.c2 FROM vt2, rt12;
SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT vt2.c0 FROM vt2 WHERE (((CAST(vt2.c0 AS REAL)) BETWEEN (((vt2.c0)AND(vt2.c0))) AND ((((vt2.c0)) BETWEEN ((vt2.c0)) AND ((vt2.c0)))))) GROUP BY vt2.c0 UNION SELECT vt2.c0 FROM vt2 WHERE ((NOT (((CAST(vt2.c0 AS REAL)) BETWEEN (((vt2.c0)AND(vt2.c0))) AND ((((vt2.c0)) BETWEEN ((vt2.c0)) AND ((vt2.c0)))))))) GROUP BY vt2.c0 UNION SELECT vt2.c0 FROM vt2 WHERE (((((CAST(vt2.c0 AS REAL)) BETWEEN (((vt2.c0)AND(vt2.c0))) AND ((((vt2.c0)) BETWEEN ((vt2.c0)) AND ((vt2.c0)))))) ISNULL)) GROUP BY vt2.c0;
SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT rt12.c0, rt12.c1 FROM vt2, rt12, vt1, vt0 GROUP BY rt12.c0, rt12.c1;
SELECT ALL rt12.c0, rt12.c1 FROM vt2, rt12, vt1, vt0 GROUP BY rt12.c0, rt12.c1 HAVING ((0X1b235857)<>(((COUNT(*))>=(rt12.c1)))) UNION ALL SELECT ALL rt12.c0, rt12.c1 FROM vt2, rt12, vt1, vt0 GROUP BY rt12.c0, rt12.c1 HAVING (NOT (((0X1b235857)!=(((COUNT(*))>=(rt12.c1)))))) UNION ALL SELECT ALL rt12.c0, rt12.c1 FROM vt2, rt12, vt1, vt0 GROUP BY rt12.c0, rt12.c1 HAVING ((((0x1b235857)<>(((COUNT(*))>=(rt12.c1))))) ISNULL);
SELECT rt12.c0, rt12.c1 FROM vt2, rt12, vt1, vt0 GROUP BY rt12.c0, rt12.c1;
SELECT ALL rt12.c0, rt12.c1 FROM vt2, rt12, vt1, vt0 GROUP BY rt12.c0, rt12.c1 HAVING ((0X1b235857)<>(((COUNT(*))>=(rt12.c1)))) UNION ALL SELECT ALL rt12.c0, rt12.c1 FROM vt2, rt12, vt1, vt0 GROUP BY rt12.c0, rt12.c1 HAVING (NOT (((0X1b235857)!=(((COUNT(*))>=(rt12.c1)))))) UNION ALL SELECT ALL rt12.c0, rt12.c1 FROM vt2, rt12, vt1, vt0 GROUP BY rt12.c0, rt12.c1 HAVING ((((0x1b235857)<>(((COUNT(*))>=(rt12.c1))))) ISNULL);
SELECT rt12.c0, rt12.c1 FROM vt2, rt12, vt1, vt0 GROUP BY rt12.c0, rt12.c1;
SELECT ALL rt12.c0, rt12.c1, rt12.c2, vt2.c0 FROM vt1, vt2, rt12;
SELECT ALL rt12.c0, rt12.c1, rt12.c2, vt2.c0 FROM vt1, vt2, rt12 WHERE (CAST(NULL AS TEXT)) UNION ALL SELECT ALL rt12.c0, rt12.c1, rt12.c2, vt2.c0 FROM vt1, vt2, rt12 WHERE ((NOT (CAST(NULL AS TEXT)))) UNION ALL SELECT ALL rt12.c0, rt12.c1, rt12.c2, vt2.c0 FROM vt1, vt2, rt12 WHERE (((CAST(NULL AS TEXT)) ISNULL));
SELECT ALL rt12.c0, rt12.c1, rt12.c2, vt2.c0 FROM vt1, vt2, rt12;
SELECT DISTINCT vt1.c0, rt12.c1, vt2.c0 FROM vt2, vt1, rt12;
SELECT DISTINCT vt1.c0, rt12.c1, vt2.c0 FROM vt2, vt1, rt12 WHERE (((((rt12.c2)OR(-1768965019)))OR(rt12.c2)) COLLATE NOCASE) UNION SELECT DISTINCT vt1.c0, rt12.c1, vt2.c0 FROM vt2, vt1, rt12 WHERE ((NOT (((((rt12.c2)OR(-1768965019)))OR(rt12.c2)) COLLATE NOCASE))) UNION SELECT DISTINCT vt1.c0, rt12.c1, vt2.c0 FROM vt2, vt1, rt12 WHERE (((((((rt12.c2)OR(-1768965019)))OR(rt12.c2)) COLLATE NOCASE) ISNULL));
SELECT DISTINCT vt1.c0, rt12.c1, vt2.c0 FROM vt2, vt1, rt12;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE (CASE (((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))  WHEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END THEN vt1.c0 COLLATE BINARY ELSE (vt1.c0 IN (vt1.c0)) END) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 NOT INDEXED WHERE ((NOT (CASE (((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))  WHEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END THEN vt1.c0 COLLATE BINARY ELSE (vt1.c0 IN (vt1.c0)) END))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE (((CASE (((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))  WHEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END THEN vt1.c0 COLLATE BINARY ELSE (vt1.c0 IN (vt1.c0)) END) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt2.c0, vt0.c0, vt0.c1, rt12.c1, vt1.c0, rt12.c0, rt12.c2 FROM rt12 CROSS JOIN vt0 ON CHAR(((((rt12.c1)OR(vt1.c0)))AND(rt12.c0))) RIGHT OUTER JOIN vt1 ON ((((vt0.c0) BETWEEN (vt1.c0) AND (rt12.c1))) BETWEEN (vt1.c0) AND (rt12.c2)) FULL OUTER JOIN vt2 ON ((((rt12.c1) NOTNULL))<=(CHAR(rt12.c2, vt0.c0, rt12.c2))) GROUP BY vt2.c0, vt0.c0, vt0.c1, rt12.c1, vt1.c0, rt12.c0, rt12.c2;
SELECT MIN(((rt12.c2)*(1e500)) COLLATE BINARY) FROM rt12 ORDER BY (- ((((rt12.c1)) NOT BETWEEN ((rt12.c2)) AND ((rt12.c2))))) DESC;
SELECT ALL * FROM vt2;
SELECT * FROM vt2 WHERE (CAST(vt2.c0 COLLATE BINARY AS NUMERIC)) UNION ALL SELECT * FROM vt2 WHERE ((NOT (CAST(vt2.c0 COLLATE BINARY AS NUMERIC)))) UNION ALL SELECT ALL * FROM vt2 WHERE (((CAST(vt2.c0 COLLATE BINARY AS NUMERIC)) ISNULL));
SELECT ALL * FROM vt2;
SELECT DISTINCT rt12.c2 FROM vt1, rt12;
SELECT DISTINCT rt12.c2 FROM vt1, rt12 WHERE (((((CAST(rt12.c0 AS NUMERIC))OR(((rt12.c1) ISNULL))))OR(((rt12.c1) IS TRUE)))) UNION SELECT DISTINCT rt12.c2 FROM vt1, rt12 WHERE ((NOT (((((CAST(rt12.c0 AS NUMERIC))OR(((rt12.c1) ISNULL))))OR(((rt12.c1) IS TRUE)))))) UNION SELECT DISTINCT rt12.c2 FROM vt1, rt12 WHERE (((((((CAST(rt12.c0 AS NUMERIC))OR(((rt12.c1) ISNULL))))OR(((rt12.c1) IS TRUE)))) ISNULL));
SELECT DISTINCT rt12.c2 FROM vt1, rt12;
SELECT ALL vt0.c1, rt12.c0 FROM rt12 LEFT OUTER JOIN vt0 ON vt0.c1 LEFT OUTER JOIN vt2 ON CASE WHEN ((vt1.c0) NOT BETWEEN (rt12.c1) AND (rt12.c2)) THEN ((((NULL)AND(rt12.c0)))AND(rt12.c2)) WHEN ((((vt1.c0)OR(rt12.c2)))AND(vt1.c0)) THEN (vt0.c1 IN ()) WHEN CAST(NULL AS BLOB) THEN '366606768' END RIGHT OUTER JOIN vt1 ON CAST(((((rt12.c1)AND(vt2.c0)))AND(rt12.c1)) AS REAL) GROUP BY vt0.c1, rt12.c0;
SELECT ALL rt12.c2 FROM vt2, rt12 GROUP BY rt12.c2;
SELECT ALL rt12.c2 FROM vt2, rt12 GROUP BY rt12.c2 HAVING MIN(SUM(COUNT(GROUP_CONCAT(SUM(MAX(rt12.c2)))))) UNION ALL SELECT ALL rt12.c2 FROM vt2, rt12 GROUP BY rt12.c2 HAVING (NOT (MIN(SUM(COUNT(GROUP_CONCAT(SUM(MAX(rt12.c2)))))))) UNION ALL SELECT ALL rt12.c2 FROM vt2, rt12 GROUP BY rt12.c2 HAVING ((MIN(SUM(COUNT(GROUP_CONCAT(SUM(MAX(rt12.c2))))))) ISNULL);
SELECT ALL MAX(((CAST(vt0.c0 AS BLOB)) NOT BETWEEN (((vt1.c0) IS FALSE)) AND ((+ (vt0.c0))))) FROM vt1, rt12, vt0, vt2 ORDER BY ((vt0.c1) BETWEEN (vt2.c0) AND (rt12.c0)) COLLATE BINARY  NULLS LAST, CASE ((vt0.c0)+(vt1.c0))  WHEN ((((rt12.c1)OR(vt0.c0)))AND(rt12.c1)) THEN ((vt1.c0) IS TRUE) END ASC;
SELECT ALL rt12.c0, rt12.c1, vt1.c0, vt0.c1, rt12.c2, vt2.c0, vt0.c0 FROM vt2, vt0, rt12, vt1;
SELECT rt12.c0, rt12.c1, vt1.c0, vt0.c1, rt12.c2, vt2.c0, vt0.c0 FROM vt2, vt0, rt12, vt1 WHERE ((((((vt1.c0))>=((vt0.c0))))IS NOT(SQLITE_SOURCE_ID()))) UNION ALL SELECT ALL rt12.c0, rt12.c1, vt1.c0, vt0.c1, rt12.c2, vt2.c0, vt0.c0 FROM vt2, vt0, rt12, vt1 WHERE ((NOT ((((((vt1.c0))>=((vt0.c0))))IS NOT(SQLITE_SOURCE_ID()))))) UNION ALL SELECT ALL rt12.c0, rt12.c1, vt1.c0, vt0.c1, rt12.c2, vt2.c0, vt0.c0 FROM vt2, vt0, rt12, vt1 WHERE ((((((((vt1.c0))>=((vt0.c0))))IS NOT(SQLITE_SOURCE_ID()))) ISNULL));
SELECT ALL rt12.c0, rt12.c1, vt1.c0, vt0.c1, rt12.c2, vt2.c0, vt0.c0 FROM vt2, vt0, rt12, vt1;
SELECT DISTINCT * FROM vt2, vt1;
SELECT DISTINCT * FROM vt2, vt1 WHERE (((vt1.c0) NOTNULL) COLLATE NOCASE) UNION SELECT DISTINCT * FROM vt2, vt1 WHERE ((NOT (((vt1.c0) NOTNULL) COLLATE NOCASE))) UNION SELECT DISTINCT * FROM vt2, vt1 WHERE (((((vt1.c0) NOTNULL) COLLATE NOCASE) ISNULL));
SELECT DISTINCT * FROM vt2, vt1;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE (((CAST(vt1.c0 AS BLOB))LIKE(((vt1.c0) NOT NULL)))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT (((CAST(vt1.c0 AS BLOB))LIKE(((vt1.c0) NOT NULL)))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE (((((CAST(vt1.c0 AS BLOB))LIKE(((vt1.c0) NOT NULL)))) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT rt12.c0, vt2.c0, rt12.c2, vt1.c0 FROM vt1, vt2, rt12 GROUP BY rt12.c0, vt2.c0, rt12.c2, vt1.c0;
SELECT rt12.c0, vt2.c0, rt12.c2, vt1.c0 FROM vt1, vt2, rt12 GROUP BY rt12.c0, vt2.c0, rt12.c2, vt1.c0 HAVING TOTAL(SUM(COUNT(rt12.c0))) UNION ALL SELECT ALL rt12.c0, vt2.c0, rt12.c2, vt1.c0 FROM vt1, vt2, rt12 GROUP BY rt12.c0, vt2.c0, rt12.c2, vt1.c0 HAVING (NOT (TOTAL(SUM(COUNT(rt12.c0))))) UNION ALL SELECT rt12.c0, vt2.c0, rt12.c2, vt1.c0 FROM vt1, vt2, rt12 GROUP BY rt12.c0, vt2.c0, rt12.c2, vt1.c0 HAVING ((TOTAL(SUM(COUNT(rt12.c0)))) ISNULL);
SELECT vt1.c0 FROM vt1, vt2;
SELECT ALL vt1.c0 FROM vt1, vt2 WHERE ((~ (((vt2.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))) UNION ALL SELECT ALL vt1.c0 FROM vt1, vt2 WHERE ((NOT ((~ (((vt2.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))))) UNION ALL SELECT vt1.c0 FROM vt1, vt2 WHERE ((((~ (((vt2.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))) ISNULL));
SELECT vt1.c0 FROM vt1, vt2;
SELECT DISTINCT * FROM vt1, vt2, vt0;
SELECT DISTINCT * FROM vt1, vt2, vt0 WHERE (((vt0.c1 COLLATE NOCASE) IS FALSE)) UNION SELECT DISTINCT * FROM vt1, vt2, vt0 WHERE ((NOT (((vt0.c1 COLLATE NOCASE) IS FALSE)))) UNION SELECT DISTINCT * FROM vt1, vt2, vt0 WHERE (((((vt0.c1 COLLATE NOCASE) IS FALSE)) ISNULL));
SELECT DISTINCT * FROM vt1, vt2, vt0;
SELECT ALL vt0.c1, vt1.c0 FROM vt1, vt2, vt0 GROUP BY vt0.c1, vt1.c0;
SELECT vt0.c1, vt1.c0 FROM vt1, vt2, vt0 WHERE (((((vt0.c1)>=(vt2.c0)))>(((vt1.c0)LIKE(vt0.c1))))) GROUP BY vt0.c1, vt1.c0 UNION SELECT ALL vt0.c1, vt1.c0 FROM vt1, vt2, vt0 WHERE ((NOT (((((vt0.c1)>=(vt2.c0)))>(((vt1.c0)LIKE(vt0.c1))))))) GROUP BY vt0.c1, vt1.c0 UNION SELECT vt0.c1, vt1.c0 FROM vt1, vt2, vt0 WHERE (((((((vt0.c1)>=(vt2.c0)))>(((vt1.c0)LIKE(vt0.c1))))) ISNULL)) GROUP BY vt0.c1, vt1.c0;
SELECT ALL vt0.c1, vt1.c0 FROM vt1, vt2, vt0 GROUP BY vt0.c1, vt1.c0;
SELECT ALL rt12.c0 FROM vt0, rt12 GROUP BY rt12.c0;
SELECT ALL rt12.c0 FROM vt0, rt12 GROUP BY rt12.c0 HAVING TOTAL(COUNT(rt12.c1)) UNION ALL SELECT ALL rt12.c0 FROM vt0, rt12 GROUP BY rt12.c0 HAVING (NOT (TOTAL(COUNT(rt12.c1)))) UNION ALL SELECT rt12.c0 FROM vt0, rt12 GROUP BY rt12.c0 HAVING ((TOTAL(COUNT(rt12.c1))) ISNULL);
SELECT * FROM vt1, vt2, rt12;
SELECT * FROM vt1, vt2, rt12 WHERE (0.8665152423706426) UNION ALL SELECT * FROM vt1, vt2, rt12 WHERE ((NOT (0.8665152423706426))) UNION ALL SELECT * FROM vt1, vt2, rt12 WHERE (((0.8665152423706426) ISNULL));
SELECT * FROM vt1, vt2, rt12;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)) COLLATE BINARY) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT (((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)) COLLATE BINARY))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)) COLLATE BINARY) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT ALL vt1.c0, rt12.c1 FROM rt12 FULL OUTER JOIN vt2 ON (((+ (rt12.c2)))/(rt12.c1 COLLATE RTRIM)) FULL OUTER JOIN vt1 ON (NOT (UPPER(vt1.c0))) GROUP BY vt1.c0, rt12.c1;
SELECT ALL vt1.c0, rt12.c1 FROM rt12 FULL OUTER JOIN vt2 ON (((+ (rt12.c2)))/(rt12.c1 COLLATE RTRIM)) FULL OUTER JOIN vt1 ON (NOT (UPPER(vt1.c0))) WHERE (((((vt1.c0) IS TRUE)) NOT BETWEEN (((((((((rt12.c0)OR(vt1.c0)))OR(vt2.c0)))OR(vt2.c0)))OR(rt12.c2))) AND (rt12.c2))) GROUP BY vt1.c0, rt12.c1 UNION SELECT ALL vt1.c0, rt12.c1 FROM rt12 FULL OUTER JOIN vt2 ON (((+ (rt12.c2)))/(rt12.c1 COLLATE RTRIM)) FULL OUTER JOIN vt1 ON (NOT (UPPER(vt1.c0))) WHERE ((NOT (((((vt1.c0) IS TRUE)) NOT BETWEEN (((((((((rt12.c0)OR(vt1.c0)))OR(vt2.c0)))OR(vt2.c0)))OR(rt12.c2))) AND (rt12.c2))))) GROUP BY vt1.c0, rt12.c1 UNION SELECT vt1.c0, rt12.c1 FROM rt12 FULL OUTER JOIN vt2 ON (((+ (rt12.c2)))/(rt12.c1 COLLATE RTRIM)) FULL OUTER JOIN vt1 ON (NOT (UPPER(vt1.c0))) WHERE (((((((vt1.c0) IS TRUE)) NOT BETWEEN (((((((((rt12.c0)OR(vt1.c0)))OR(vt2.c0)))OR(vt2.c0)))OR(rt12.c2))) AND (rt12.c2))) ISNULL)) GROUP BY vt1.c0, rt12.c1;
SELECT ALL vt1.c0, rt12.c1 FROM rt12 FULL OUTER JOIN vt2 ON (((+ (rt12.c2)))/(rt12.c1 COLLATE RTRIM)) FULL OUTER JOIN vt1 ON (NOT (UPPER(vt1.c0))) GROUP BY vt1.c0, rt12.c1;
SELECT ALL rt12.c1, rt12.c0, rt12.c2 FROM rt12 GROUP BY rt12.c1, rt12.c0, rt12.c2;
SELECT ALL rt12.c1, rt12.c0, rt12.c2 FROM rt12 GROUP BY rt12.c1, rt12.c0, rt12.c2 HAVING MAX(SUM(rt12.c1)) UNION ALL SELECT ALL rt12.c1, rt12.c0, rt12.c2 FROM rt12 GROUP BY rt12.c1, rt12.c0, rt12.c2 HAVING (NOT (MAX(SUM(rt12.c1)))) UNION ALL SELECT rt12.c1, rt12.c0, rt12.c2 FROM rt12 GROUP BY rt12.c1, rt12.c0, rt12.c2 HAVING ((MAX(SUM(rt12.c1))) ISNULL);
SELECT * FROM rt12 RIGHT OUTER JOIN vt0 ON (((rt12.c1, vt0.c1, rt12.c0)) BETWEEN (((- (rt12.c1)), NULL, CASE WHEN vt0.c0 THEN rt12.c1 END)) AND (((- (rt12.c1)), TRIM(rt12.c2), ((vt0.c1) NOT BETWEEN (rt12.c1) AND (rt12.c0)))));
SELECT * FROM rt12 RIGHT OUTER JOIN vt0 ON (((rt12.c1, vt0.c1, rt12.c0)) BETWEEN (((- (rt12.c1)), NULL, CASE WHEN vt0.c0 THEN rt12.c1 END)) AND (((- (rt12.c1)), TRIM(rt12.c2), ((vt0.c1) NOT BETWEEN (rt12.c1) AND (rt12.c0))))) WHERE ((((rt12.c0 IN ()))LIKE(rt12.c2))) UNION ALL SELECT * FROM rt12 RIGHT OUTER JOIN vt0 ON (((rt12.c1, vt0.c1, rt12.c0)) BETWEEN (((- (rt12.c1)), NULL, CASE WHEN vt0.c0 THEN rt12.c1 END)) AND (((- (rt12.c1)), TRIM(rt12.c2), ((vt0.c1) NOT BETWEEN (rt12.c1) AND (rt12.c0))))) WHERE ((NOT ((((rt12.c0 IN ()))LIKE(rt12.c2))))) UNION ALL SELECT ALL * FROM rt12 RIGHT OUTER JOIN vt0 ON (((rt12.c1, vt0.c1, rt12.c0)) BETWEEN (((- (rt12.c1)), NULL, CASE WHEN vt0.c0 THEN rt12.c1 END)) AND (((- (rt12.c1)), TRIM(rt12.c2), ((vt0.c1) NOT BETWEEN (rt12.c1) AND (rt12.c0))))) WHERE ((((((rt12.c0 IN ()))LIKE(rt12.c2))) ISNULL));
SELECT * FROM rt12 RIGHT OUTER JOIN vt0 ON (((rt12.c1, vt0.c1, rt12.c0)) BETWEEN (((- (rt12.c1)), NULL, CASE WHEN vt0.c0 THEN rt12.c1 END)) AND (((- (rt12.c1)), TRIM(rt12.c2), ((vt0.c1) NOT BETWEEN (rt12.c1) AND (rt12.c0)))));
SELECT DISTINCT * FROM vt2, vt1 RIGHT OUTER JOIN rt12 ON ((CASE WHEN rt12.c1 THEN rt12.c1 ELSE NULL END)>>(((rt12.c0) ISNULL)));
SELECT DISTINCT * FROM vt2, vt1 RIGHT OUTER JOIN rt12 ON ((CASE WHEN rt12.c1 THEN rt12.c1 ELSE NULL END)>>(((rt12.c0) ISNULL))) WHERE ((('0.8655348034138026') NOT NULL)) UNION SELECT DISTINCT * FROM vt2, vt1 RIGHT OUTER JOIN rt12 ON ((CASE WHEN rt12.c1 THEN rt12.c1 ELSE NULL END)>>(((rt12.c0) ISNULL))) WHERE ((NOT ((('0.8655348034138026') NOT NULL)))) UNION SELECT DISTINCT * FROM vt2, vt1 RIGHT OUTER JOIN rt12 ON ((CASE WHEN rt12.c1 THEN rt12.c1 ELSE NULL END)>>(((rt12.c0) ISNULL))) WHERE ((((('0.8655348034138026') NOT NULL)) ISNULL));
SELECT DISTINCT * FROM vt2, vt1 RIGHT OUTER JOIN rt12 ON ((CASE WHEN rt12.c1 THEN rt12.c1 ELSE NULL END)>>(((rt12.c0) ISNULL)));
SELECT rt12.c1, rt12.c2, vt1.c0 FROM rt12 NATURAL JOIN vt1 GROUP BY rt12.c1, rt12.c2, vt1.c0;
SELECT ALL rt12.c1, rt12.c2, vt1.c0 FROM rt12 NATURAL JOIN vt1 WHERE (((rt12.c0 COLLATE NOCASE)=(((x'') NOT BETWEEN (rt12.c2) AND (rt12.c1))))) GROUP BY rt12.c1, rt12.c2, vt1.c0 UNION SELECT rt12.c1, rt12.c2, vt1.c0 FROM rt12 NATURAL JOIN vt1 WHERE ((NOT (((rt12.c0 COLLATE NOCASE)==(((x'') NOT BETWEEN (rt12.c2) AND (rt12.c1))))))) GROUP BY rt12.c1, rt12.c2, vt1.c0 UNION SELECT ALL rt12.c1, rt12.c2, vt1.c0 FROM rt12 NATURAL JOIN vt1 WHERE (((((rt12.c0 COLLATE NOCASE)==(((x'') NOT BETWEEN (rt12.c2) AND (rt12.c1))))) ISNULL)) GROUP BY rt12.c1, rt12.c2, vt1.c0;
SELECT rt12.c1, rt12.c2, vt1.c0 FROM rt12 NATURAL JOIN vt1 GROUP BY rt12.c1, rt12.c2, vt1.c0;
SELECT rt12.c0 FROM rt12, vt2, vt1 GROUP BY rt12.c0;
SELECT ALL rt12.c0 FROM rt12, vt2, vt1 GROUP BY rt12.c0 HAVING ((SUM(rt12.c2)) IS TRUE) UNION ALL SELECT rt12.c0 FROM rt12, vt2, vt1 GROUP BY rt12.c0 HAVING (NOT (((SUM(rt12.c2)) IS TRUE))) UNION ALL SELECT ALL rt12.c0 FROM rt12, vt2, vt1 GROUP BY rt12.c0 HAVING ((((SUM(rt12.c2)) IS TRUE)) ISNULL);
SELECT rt12.c0 FROM rt12, vt2, vt1 GROUP BY rt12.c0;
SELECT ALL rt12.c0 FROM rt12, vt2, vt1 GROUP BY rt12.c0 HAVING ((SUM(rt12.c2)) IS TRUE) UNION ALL SELECT rt12.c0 FROM rt12, vt2, vt1 GROUP BY rt12.c0 HAVING (NOT (((SUM(rt12.c2)) IS TRUE))) UNION ALL SELECT ALL rt12.c0 FROM rt12, vt2, vt1 GROUP BY rt12.c0 HAVING ((((SUM(rt12.c2)) IS TRUE)) ISNULL);
SELECT rt12.c0 FROM rt12, vt2, vt1 GROUP BY rt12.c0;
SELECT ALL MAX((CASE WHEN vt1.c0 THEN rt12.c0 END IN ())) FROM vt0, vt1, rt12;
SELECT ALL * FROM vt1, vt0;
SELECT * FROM vt1, vt0 WHERE (CASE (+ (vt0.c0))  WHEN CAST(vt0.c0 AS NUMERIC) THEN ((vt0.c0) NOTNULL) WHEN ((vt0.c1) BETWEEN (vt1.c0) AND (vt0.c0)) THEN vt0.c0 WHEN CAST(vt1.c0 AS REAL) THEN LOWER(vt0.c1) ELSE ((vt1.c0)>(vt0.c1)) END) UNION ALL SELECT * FROM vt1, vt0 WHERE ((NOT (CASE (+ (vt0.c0))  WHEN CAST(vt0.c0 AS NUMERIC) THEN ((vt0.c0) NOTNULL) WHEN ((vt0.c1) BETWEEN (vt1.c0) AND (vt0.c0)) THEN vt0.c0 WHEN CAST(vt1.c0 AS REAL) THEN LOWER(vt0.c1) ELSE ((vt1.c0)>(vt0.c1)) END))) UNION ALL SELECT * FROM vt1, vt0 WHERE (((CASE (+ (vt0.c0))  WHEN CAST(vt0.c0 AS NUMERIC) THEN ((vt0.c0) NOTNULL) WHEN ((vt0.c1) BETWEEN (vt1.c0) AND (vt0.c0)) THEN vt0.c0 WHEN CAST(vt1.c0 AS REAL) THEN LOWER(vt0.c1) ELSE ((vt1.c0)>(vt0.c1)) END) ISNULL));
SELECT ALL * FROM vt1, vt0;
SELECT DISTINCT vt0.c1, vt0.c0, vt2.c0, vt1.c0 FROM vt0 LEFT OUTER JOIN vt2 ON CAST(vt1.c0 AS INTEGER) LEFT OUTER JOIN vt1 ON json(((vt1.c0)LIKE(vt1.c0)));
SELECT ALL vt0.c1, vt2.c0, vt0.c0 FROM vt2 RIGHT OUTER JOIN vt0 ON ((((((vt0.c0)OR(vt2.c0)))OR(vt0.c0)))<>(((vt0.c0)/(x'')))) GROUP BY vt0.c1, vt2.c0, vt0.c0;
SELECT ALL vt0.c1, vt2.c0, vt0.c0 FROM vt2 RIGHT OUTER JOIN vt0 ON ((((((vt0.c0)OR(vt2.c0)))OR(vt0.c0)))!=(((vt0.c0)/(x'')))) WHERE ('1345807687') GROUP BY vt0.c1, vt2.c0, vt0.c0 UNION SELECT vt0.c1, vt2.c0, vt0.c0 FROM vt2 RIGHT OUTER JOIN vt0 ON ((((((vt0.c0)OR(vt2.c0)))OR(vt0.c0)))<>(((vt0.c0)/(x'')))) WHERE ((NOT ('1345807687'))) GROUP BY vt0.c1, vt2.c0, vt0.c0 UNION SELECT ALL vt0.c1, vt2.c0, vt0.c0 FROM vt2 RIGHT OUTER JOIN vt0 ON ((((((vt0.c0)OR(vt2.c0)))OR(vt0.c0)))!=(((vt0.c0)/(x'')))) WHERE ((('1345807687') ISNULL)) GROUP BY vt0.c1, vt2.c0, vt0.c0;
SELECT ALL vt0.c1, vt2.c0, vt0.c0 FROM vt2 RIGHT OUTER JOIN vt0 ON ((((((vt0.c0)OR(vt2.c0)))OR(vt0.c0)))<>(((vt0.c0)/(x'')))) GROUP BY vt0.c1, vt2.c0, vt0.c0;
SELECT ALL rt12.c1, vt2.c0, rt12.c0 FROM rt12, vt2 GROUP BY rt12.c1, vt2.c0, rt12.c0;
SELECT rt12.c1, vt2.c0, rt12.c0 FROM rt12, vt2 GROUP BY rt12.c1, vt2.c0, rt12.c0 HAVING MAX(((vt2.c0)&(GROUP_CONCAT(SUM(vt2.c0))))) UNION ALL SELECT rt12.c1, vt2.c0, rt12.c0 FROM rt12, vt2 GROUP BY rt12.c1, vt2.c0, rt12.c0 HAVING (NOT (MAX(((vt2.c0)&(GROUP_CONCAT(SUM(vt2.c0))))))) UNION ALL SELECT rt12.c1, vt2.c0, rt12.c0 FROM rt12, vt2 GROUP BY rt12.c1, vt2.c0, rt12.c0 HAVING ((MAX(((vt2.c0)&(GROUP_CONCAT(SUM(vt2.c0)))))) ISNULL);
SELECT ALL * FROM vt2, vt1, rt12, vt0;
SELECT ALL * FROM vt2, vt1, rt12, vt0 WHERE (((((CAST(rt12.c2 AS INTEGER))OR(CAST(vt2.c0 AS REAL))))OR(CAST(vt0.c0 AS NUMERIC)))) UNION ALL SELECT ALL * FROM vt2, vt1, rt12, vt0 WHERE ((NOT (((((CAST(rt12.c2 AS INTEGER))OR(CAST(vt2.c0 AS REAL))))OR(CAST(vt0.c0 AS NUMERIC)))))) UNION ALL SELECT ALL * FROM vt2, vt1, rt12, vt0 WHERE (((((((CAST(rt12.c2 AS INTEGER))OR(CAST(vt2.c0 AS REAL))))OR(CAST(vt0.c0 AS NUMERIC)))) ISNULL));
SELECT ALL * FROM vt2, vt1, rt12, vt0;
SELECT DISTINCT rt12.c0 FROM vt1, rt12;
SELECT DISTINCT rt12.c0 FROM vt1, rt12 WHERE (((((rt12.c2) BETWEEN (rt12.c0) AND (vt1.c0)))<((NOT (rt12.c0))))) UNION SELECT DISTINCT rt12.c0 FROM vt1, rt12 WHERE ((NOT (((((rt12.c2) BETWEEN (rt12.c0) AND (vt1.c0)))<((NOT (rt12.c0))))))) UNION SELECT DISTINCT rt12.c0 FROM vt1, rt12 WHERE (((((((rt12.c2) BETWEEN (rt12.c0) AND (vt1.c0)))<((NOT (rt12.c0))))) ISNULL));
SELECT DISTINCT rt12.c0 FROM vt1, rt12;
SELECT ALL rt12.c2, rt12.c0 FROM rt12 GROUP BY rt12.c2, rt12.c0;
SELECT ALL rt12.c2, rt12.c0 FROM rt12 WHERE ((((((rt12.c0)OR(rt12.c2)))AND(rt12.c0)) IN ())) GROUP BY rt12.c2, rt12.c0 UNION SELECT ALL rt12.c2, rt12.c0 FROM rt12 WHERE ((NOT ((((((rt12.c0)OR(rt12.c2)))AND(rt12.c0)) IN ())))) GROUP BY rt12.c2, rt12.c0 UNION SELECT ALL rt12.c2, rt12.c0 FROM rt12 WHERE ((((((((rt12.c0)OR(rt12.c2)))AND(rt12.c0)) IN ())) ISNULL)) GROUP BY rt12.c2, rt12.c0;
SELECT ALL rt12.c2, rt12.c0 FROM rt12 GROUP BY rt12.c2, rt12.c0;
SELECT vt1.c0 FROM rt12, vt1, vt0 GROUP BY vt1.c0;
SELECT vt1.c0 FROM rt12, vt1, vt0 GROUP BY vt1.c0 HAVING (((- (SUM(COUNT(vt0.c1)))))&((~ (TOTAL(SUM(AVG(TOTAL(rt12.c1)))))))) UNION ALL SELECT ALL vt1.c0 FROM rt12, vt1, vt0 GROUP BY vt1.c0 HAVING (NOT ((((- (SUM(COUNT(vt0.c1)))))&((~ (TOTAL(SUM(AVG(TOTAL(rt12.c1)))))))))) UNION ALL SELECT vt1.c0 FROM rt12, vt1, vt0 GROUP BY vt1.c0 HAVING (((((- (SUM(COUNT(vt0.c1)))))&((~ (TOTAL(SUM(AVG(TOTAL(rt12.c1))))))))) ISNULL);
SELECT ALL rt12.c1 FROM rt12 INNER JOIN vt1 ON ((((((((((rt12.c0) BETWEEN (rt12.c2) AND (vt1.c0)))AND('q' COLLATE BINARY)))OR(((rt12.c1)IS(rt12.c1)))))AND(NULL)))OR(((((rt12.c0)OR(rt12.c0)))OR(rt12.c0))));
SELECT rt12.c1 FROM rt12 INNER JOIN vt1 ON ((((((((((rt12.c0) BETWEEN (rt12.c2) AND (vt1.c0)))AND('q' COLLATE BINARY)))OR(((rt12.c1)IS(rt12.c1)))))AND(NULL)))OR(((((rt12.c0)OR(rt12.c0)))OR(rt12.c0)))) WHERE ((((vt1.c0) BETWEEN (vt1.c0) AND (rt12.c2)) IN ((~ (rt12.c1)), rt12.c0 COLLATE RTRIM))) UNION ALL SELECT rt12.c1 FROM rt12 INNER JOIN vt1 ON ((((((((((rt12.c0) BETWEEN (rt12.c2) AND (vt1.c0)))AND('q' COLLATE BINARY)))OR(((rt12.c1)IS(rt12.c1)))))AND(NULL)))OR(((((rt12.c0)OR(rt12.c0)))OR(rt12.c0)))) WHERE ((NOT ((((vt1.c0) BETWEEN (vt1.c0) AND (rt12.c2)) IN ((~ (rt12.c1)), rt12.c0 COLLATE RTRIM))))) UNION ALL SELECT rt12.c1 FROM rt12 INNER JOIN vt1 ON ((((((((((rt12.c0) BETWEEN (rt12.c2) AND (vt1.c0)))AND('q' COLLATE BINARY)))OR(((rt12.c1)IS(rt12.c1)))))AND(NULL)))OR(((((rt12.c0)OR(rt12.c0)))OR(rt12.c0)))) WHERE ((((((vt1.c0) BETWEEN (vt1.c0) AND (rt12.c2)) IN ((~ (rt12.c1)), rt12.c0 COLLATE RTRIM))) ISNULL));
SELECT ALL rt12.c1 FROM rt12 INNER JOIN vt1 ON ((((((((((rt12.c0) BETWEEN (rt12.c2) AND (vt1.c0)))AND('q' COLLATE BINARY)))OR(((rt12.c1)IS(rt12.c1)))))AND(NULL)))OR(((((rt12.c0)OR(rt12.c0)))OR(rt12.c0))));
SELECT DISTINCT rt12.c1 FROM rt12;
SELECT DISTINCT rt12.c1 FROM rt12 WHERE (((((((((((rt12.c1)AND(rt12.c2)))AND(rt12.c2)))OR(rt12.c1)))OR(rt12.c2)))<(((rt12.c2)GLOB(rt12.c0))))) UNION SELECT DISTINCT rt12.c1 FROM rt12 WHERE ((NOT (((((((((((rt12.c1)AND(rt12.c2)))AND(rt12.c2)))OR(rt12.c1)))OR(rt12.c2)))<(((rt12.c2)GLOB(rt12.c0))))))) UNION SELECT DISTINCT rt12.c1 FROM rt12 WHERE (((((((((((((rt12.c1)AND(rt12.c2)))AND(rt12.c2)))OR(rt12.c1)))OR(rt12.c2)))<(((rt12.c2)GLOB(rt12.c0))))) ISNULL));
SELECT DISTINCT rt12.c1 FROM rt12;
SELECT ALL vt2.c0, vt0.c0, vt0.c1 FROM vt0, vt2 GROUP BY vt2.c0, vt0.c0, vt0.c1;
SELECT vt2.c0, vt0.c0, vt0.c1 FROM vt0, vt2 WHERE (((((vt0.c1, vt0.c0, vt2.c0))>((vt0.c0, vt0.c0, vt2.c0))) IN ())) GROUP BY vt2.c0, vt0.c0, vt0.c1 UNION SELECT ALL vt2.c0, vt0.c0, vt0.c1 FROM vt0, vt2 WHERE ((NOT (((((vt0.c1, vt0.c0, vt2.c0))>((vt0.c0, vt0.c0, vt2.c0))) IN ())))) GROUP BY vt2.c0, vt0.c0, vt0.c1 UNION SELECT vt2.c0, vt0.c0, vt0.c1 FROM vt0, vt2 WHERE (((((((vt0.c1, vt0.c0, vt2.c0))>((vt0.c0, vt0.c0, vt2.c0))) IN ())) ISNULL)) GROUP BY vt2.c0, vt0.c0, vt0.c1;
SELECT ALL vt2.c0, vt0.c0, vt0.c1 FROM vt0, vt2 GROUP BY vt2.c0, vt0.c0, vt0.c1;
SELECT ALL vt2.c0, rt12.c2, rt12.c0 FROM rt12, vt1 LEFT OUTER JOIN vt0 ON ((((vt1.c0) NOT NULL))>(vt2.c0 COLLATE RTRIM)) INNER JOIN vt2 ON (((NULL, 0xfffffffff14199fa, vt1.c0)) NOT BETWEEN ((((rt12.c1)>>(vt0.c1)), ((vt1.c0) NOT BETWEEN (vt0.c0) AND (rt12.c0)), CAST(rt12.c1 AS TEXT))) AND (((~ (rt12.c0)), CASE vt0.c1  WHEN rt12.c0 THEN rt12.c2 WHEN vt0.c0 THEN rt12.c1 WHEN vt2.c0 THEN rt12.c0 END, ((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))) GROUP BY vt2.c0, rt12.c2, rt12.c0;
SELECT ALL * FROM vt1, vt0, vt2 NOT INDEXED;
SELECT * FROM vt1, vt0, vt2 WHERE ((+ (((vt1.c0)IS(NULL))))) UNION ALL SELECT ALL * FROM vt1, vt0, vt2 WHERE ((NOT ((+ (((vt1.c0)IS(NULL))))))) UNION ALL SELECT ALL * FROM vt1, vt0, vt2 WHERE ((((+ (((vt1.c0)IS(NULL))))) ISNULL));
SELECT ALL * FROM vt1, vt0, vt2 NOT INDEXED;
SELECT DISTINCT * FROM vt0, rt12;
SELECT DISTINCT * FROM vt0, rt12 WHERE (((rt12.c2)<=(((((rt12.c0)OR(vt0.c0)))OR(rt12.c2))))) UNION SELECT DISTINCT * FROM vt0, rt12 WHERE ((NOT (((rt12.c2)<=(((((rt12.c0)OR(vt0.c0)))OR(rt12.c2))))))) UNION SELECT DISTINCT * FROM vt0, rt12 WHERE (((((rt12.c2)<=(((((rt12.c0)OR(vt0.c0)))OR(rt12.c2))))) ISNULL));
SELECT DISTINCT * FROM vt0, rt12;
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0 WHERE (CAST(((vt0.c0)-(vt0.c0)) AS BLOB)) GROUP BY vt0.c1, vt0.c0 UNION SELECT ALL vt0.c1, vt0.c0 FROM vt0 WHERE ((NOT (CAST(((vt0.c0)-(vt0.c0)) AS BLOB)))) GROUP BY vt0.c1, vt0.c0 UNION SELECT ALL vt0.c1, vt0.c0 FROM vt0 WHERE (((CAST(((vt0.c0)-(vt0.c0)) AS BLOB)) ISNULL)) GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT rt12.c0, rt12.c1, vt0.c0, vt1.c0, vt0.c1, rt12.c2 FROM rt12 RIGHT OUTER JOIN vt0 ON CAST(CASE WHEN vt0.c1 THEN rt12.c1 END AS REAL) CROSS JOIN vt1 ON (CASE WHEN rt12.c0 THEN vt1.c0 ELSE rt12.c2 END IN ()) GROUP BY rt12.c0, rt12.c1, vt0.c0, vt1.c0, vt0.c1, rt12.c2;
SELECT ALL rt12.c0, rt12.c1, vt0.c0, vt1.c0, vt0.c1, rt12.c2 FROM rt12 RIGHT OUTER JOIN vt0 ON CAST(CASE WHEN vt0.c1 THEN rt12.c1 END AS REAL) CROSS JOIN vt1 ON (CASE WHEN rt12.c0 THEN vt1.c0 ELSE rt12.c2 END IN ()) GROUP BY rt12.c0, rt12.c1, vt0.c0, vt1.c0, vt0.c1, rt12.c2 HAVING GROUP_CONCAT(((((rt12.c2)OR(rt12.c0)))OR(MAX(SUM(rt12.c0))))) UNION ALL SELECT rt12.c0, rt12.c1, vt0.c0, vt1.c0, vt0.c1, rt12.c2 FROM rt12 RIGHT OUTER JOIN vt0 ON CAST(CASE WHEN vt0.c1 THEN rt12.c1 END AS REAL) CROSS JOIN vt1 ON (CASE WHEN rt12.c0 THEN vt1.c0 ELSE rt12.c2 END IN ()) GROUP BY rt12.c0, rt12.c1, vt0.c0, vt1.c0, vt0.c1, rt12.c2 HAVING (NOT (GROUP_CONCAT(((((rt12.c2)OR(rt12.c0)))OR(MAX(SUM(rt12.c0))))))) UNION ALL SELECT ALL rt12.c0, rt12.c1, vt0.c0, vt1.c0, vt0.c1, rt12.c2 FROM rt12 RIGHT OUTER JOIN vt0 ON CAST(CASE WHEN vt0.c1 THEN rt12.c1 END AS REAL) CROSS JOIN vt1 ON (CASE WHEN rt12.c0 THEN vt1.c0 ELSE rt12.c2 END IN ()) GROUP BY rt12.c0, rt12.c1, vt0.c0, vt1.c0, vt0.c1, rt12.c2 HAVING ((GROUP_CONCAT(((((rt12.c2)OR(rt12.c0)))OR(MAX(SUM(rt12.c0)))))) ISNULL);
SELECT ALL rt12.c1, vt0.c1, vt2.c0, rt12.c0 FROM vt2, vt0, rt12;
SELECT rt12.c1, vt0.c1, vt2.c0, rt12.c0 FROM vt2, vt0, rt12 WHERE ((vt2.c0 IN (rt12.c1)) COLLATE BINARY) UNION ALL SELECT rt12.c1, vt0.c1, vt2.c0, rt12.c0 FROM vt2, vt0, rt12 WHERE ((NOT ((vt2.c0 IN (rt12.c1)) COLLATE BINARY))) UNION ALL SELECT rt12.c1, vt0.c1, vt2.c0, rt12.c0 FROM vt2, vt0, rt12 WHERE ((((vt2.c0 IN (rt12.c1)) COLLATE BINARY) ISNULL));
SELECT ALL rt12.c1, vt0.c1, vt2.c0, rt12.c0 FROM vt2, vt0, rt12;
SELECT DISTINCT vt1.c0, vt2.c0 FROM vt2, vt1;
SELECT DISTINCT vt1.c0, vt2.c0 FROM vt2, vt1 WHERE ((- (((vt2.c0)AND(vt1.c0))))) UNION SELECT DISTINCT vt1.c0, vt2.c0 FROM vt2, vt1 WHERE ((NOT ((- (((vt2.c0)AND(vt1.c0))))))) UNION SELECT DISTINCT vt1.c0, vt2.c0 FROM vt2, vt1 WHERE ((((- (((vt2.c0)AND(vt1.c0))))) ISNULL));
SELECT DISTINCT vt1.c0, vt2.c0 FROM vt2, vt1;
SELECT ALL vt0.c0, vt1.c0 FROM vt0, rt12, vt1 GROUP BY vt0.c0, vt1.c0;
SELECT ALL vt0.c0, vt1.c0 FROM vt0, rt12, vt1 WHERE (((((rt12.c0) NOT NULL))<<(TRIM(DISTINCT rt12.c0, rt12.c0)))) GROUP BY vt0.c0, vt1.c0 UNION SELECT ALL vt0.c0, vt1.c0 FROM vt0, rt12, vt1 WHERE ((NOT (((((rt12.c0) NOT NULL))<<(TRIM(DISTINCT rt12.c0, rt12.c0)))))) GROUP BY vt0.c0, vt1.c0 UNION SELECT ALL vt0.c0, vt1.c0 FROM vt0, rt12, vt1 WHERE (((((((rt12.c0) NOT NULL))<<(TRIM(DISTINCT rt12.c0, rt12.c0)))) ISNULL)) GROUP BY vt0.c0, vt1.c0;
SELECT ALL vt0.c0, vt1.c0 FROM vt0, rt12, vt1 GROUP BY vt0.c0, vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING NULL UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (NULL)) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((NULL) ISNULL);
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING NULL UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (NULL)) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((NULL) ISNULL);
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT * FROM vt2 FULL OUTER JOIN vt0 ON json_valid(rt12.c2) LEFT OUTER JOIN vt1 ON ((CASE WHEN vt0.c1 THEN '-91879628' ELSE vt1.c0 END) NOTNULL) CROSS JOIN rt12 ON CASE ((vt0.c1) NOT NULL)  WHEN (rt12.c1 IN ()) THEN (- (vt0.c1)) END;
SELECT DISTINCT vt2.c0 FROM vt2;
SELECT DISTINCT vt2.c0 FROM vt2 WHERE (CAST(CASE vt2.c0  WHEN vt2.c0 THEN vt2.c0 END AS INTEGER)) UNION SELECT DISTINCT vt2.c0 FROM vt2 WHERE ((NOT (CAST(CASE vt2.c0  WHEN vt2.c0 THEN vt2.c0 END AS INTEGER)))) UNION SELECT DISTINCT vt2.c0 FROM vt2 WHERE (((CAST(CASE vt2.c0  WHEN vt2.c0 THEN vt2.c0 END AS INTEGER)) ISNULL));
SELECT DISTINCT vt2.c0 FROM vt2;
SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT vt2.c0 FROM vt2 WHERE (((NULL)|(0.11613670453964742))) GROUP BY vt2.c0 UNION SELECT ALL vt2.c0 FROM vt2 WHERE ((NOT (((NULL)|(0.11613670453964742))))) GROUP BY vt2.c0 UNION SELECT ALL vt2.c0 FROM vt2 WHERE (((((NULL)|(0.11613670453964742))) ISNULL)) GROUP BY vt2.c0;
SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT ALL rt12.c2, rt12.c0 FROM rt12 GROUP BY rt12.c2, rt12.c0;
SELECT ALL rt12.c2, rt12.c0 FROM rt12 GROUP BY rt12.c2, rt12.c0 HAVING CAST(COUNT(*) AS INTEGER) UNION ALL SELECT rt12.c2, rt12.c0 FROM rt12 GROUP BY rt12.c2, rt12.c0 HAVING (NOT (CAST(COUNT(*) AS INTEGER))) UNION ALL SELECT ALL rt12.c2, rt12.c0 FROM rt12 GROUP BY rt12.c2, rt12.c0 HAVING ((CAST(COUNT(*) AS INTEGER)) ISNULL);
SELECT ALL rt12.c2, rt12.c0 FROM rt12 GROUP BY rt12.c2, rt12.c0;
SELECT ALL rt12.c2, rt12.c0 FROM rt12 GROUP BY rt12.c2, rt12.c0 HAVING CAST(COUNT(*) AS INTEGER) UNION ALL SELECT rt12.c2, rt12.c0 FROM rt12 GROUP BY rt12.c2, rt12.c0 HAVING (NOT (CAST(COUNT(*) AS INTEGER))) UNION ALL SELECT ALL rt12.c2, rt12.c0 FROM rt12 GROUP BY rt12.c2, rt12.c0 HAVING ((CAST(COUNT(*) AS INTEGER)) ISNULL);
SELECT ALL rt12.c2, rt12.c0 FROM rt12 GROUP BY rt12.c2, rt12.c0;
SELECT ALL rt12.c2, rt12.c0 FROM rt12;
SELECT rt12.c2, rt12.c0 FROM rt12 WHERE (((rt12.c1 COLLATE NOCASE)>(((((rt12.c0)OR(x'')))AND(rt12.c2))))) UNION ALL SELECT ALL rt12.c2, rt12.c0 FROM rt12 WHERE ((NOT (((rt12.c1 COLLATE NOCASE)>(((((rt12.c0)OR(x'')))AND(rt12.c2))))))) UNION ALL SELECT ALL rt12.c2, rt12.c0 FROM rt12 WHERE (((((rt12.c1 COLLATE NOCASE)>(((((rt12.c0)OR(x'')))AND(rt12.c2))))) ISNULL));
SELECT ALL rt12.c2, rt12.c0 FROM rt12;
SELECT DISTINCT * FROM vt1, vt0;
SELECT DISTINCT * FROM vt1, vt0 WHERE (json_array_length(((vt0.c0) IS FALSE))) UNION SELECT DISTINCT * FROM vt1, vt0 WHERE ((NOT (json_array_length(((vt0.c0) IS FALSE))))) UNION SELECT DISTINCT * FROM vt1, vt0 WHERE (((json_array_length(((vt0.c0) IS FALSE))) ISNULL));
SELECT DISTINCT * FROM vt1, vt0;
SELECT vt0.c0, vt2.c0, rt12.c1, vt0.c1, rt12.c0, rt12.c2 FROM vt2, rt12, vt0 GROUP BY vt0.c0, vt2.c0, rt12.c1, vt0.c1, rt12.c0, rt12.c2;
SELECT vt0.c0, vt2.c0, rt12.c1, vt0.c1, rt12.c0, rt12.c2 FROM vt2, rt12, vt0 WHERE (((((vt0.c0) IS FALSE))GLOB(rt12.c2))) GROUP BY vt0.c0, vt2.c0, rt12.c1, vt0.c1, rt12.c0, rt12.c2 UNION SELECT ALL vt0.c0, vt2.c0, rt12.c1, vt0.c1, rt12.c0, rt12.c2 FROM vt2, rt12, vt0 WHERE ((NOT (((((vt0.c0) IS FALSE))GLOB(rt12.c2))))) GROUP BY vt0.c0, vt2.c0, rt12.c1, vt0.c1, rt12.c0, rt12.c2 UNION SELECT ALL vt0.c0, vt2.c0, rt12.c1, vt0.c1, rt12.c0, rt12.c2 FROM vt2, rt12, vt0 WHERE (((((((vt0.c0) IS FALSE))GLOB(rt12.c2))) ISNULL)) GROUP BY vt0.c0, vt2.c0, rt12.c1, vt0.c1, rt12.c0, rt12.c2;
SELECT vt0.c0, vt2.c0, rt12.c1, vt0.c1, rt12.c0, rt12.c2 FROM vt2, rt12, vt0 GROUP BY vt0.c0, vt2.c0, rt12.c1, vt0.c1, rt12.c0, rt12.c2;
SELECT ALL vt0.c1, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c1, vt1.c0;
SELECT vt0.c1, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c1, vt1.c0 HAVING CASE WHEN COUNT(vt1.c0) THEN MAX(vt0.c0) WHEN SUM(MAX(SUM(COUNT(*)))) THEN ((TOTAL(vt0.c1))>>(vt1.c0)) WHEN MAX(COUNT(*), GROUP_CONCAT(TOTAL(COUNT(*))), vt0.c0, MAX(vt1.c0)) THEN ((COUNT(*))!=(vt0.c0)) END UNION ALL SELECT vt0.c1, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c1, vt1.c0 HAVING (NOT (CASE WHEN COUNT(vt1.c0) THEN MAX(vt0.c0) WHEN SUM(MAX(SUM(COUNT(*)))) THEN ((TOTAL(vt0.c1))>>(vt1.c0)) WHEN MAX(COUNT(*), GROUP_CONCAT(TOTAL(COUNT(*))), vt0.c0, MAX(vt1.c0)) THEN ((COUNT(*))!=(vt0.c0)) END)) UNION ALL SELECT vt0.c1, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c1, vt1.c0 HAVING ((CASE WHEN COUNT(vt1.c0) THEN MAX(vt0.c0) WHEN SUM(MAX(SUM(COUNT(*)))) THEN ((TOTAL(vt0.c1))>>(vt1.c0)) WHEN MAX(COUNT(*), GROUP_CONCAT(TOTAL(COUNT(*))), vt0.c0, MAX(vt1.c0)) THEN ((COUNT(*))<>(vt0.c0)) END) ISNULL);
SELECT TOTAL(CASE WHEN ((vt2.c0)<<(vt2.c0)) THEN vt2.c0 COLLATE RTRIM ELSE vt2.c0 END) FROM vt2;
SELECT ALL * FROM vt1, vt0, vt2, rt12;
SELECT * FROM vt1, vt0, vt2, rt12 WHERE (vt2.c0) UNION ALL SELECT ALL * FROM vt1, vt0, vt2 NOT INDEXED, rt12 WHERE ((NOT (vt2.c0))) UNION ALL SELECT * FROM vt1, vt0, vt2, rt12 WHERE (((vt2.c0) ISNULL));
SELECT ALL * FROM vt1, vt0, vt2, rt12;
SELECT DISTINCT rt12.c2, rt12.c0 FROM rt12, vt2;
SELECT DISTINCT rt12.c2, rt12.c0 FROM rt12, vt2 WHERE (CASE WHEN NULL THEN (('')&(rt12.c0)) END) UNION SELECT DISTINCT rt12.c2, rt12.c0 FROM rt12, vt2 WHERE ((NOT (CASE WHEN NULL THEN (('')&(rt12.c0)) END))) UNION SELECT DISTINCT rt12.c2, rt12.c0 FROM rt12, vt2 WHERE (((CASE WHEN NULL THEN (('')&(rt12.c0)) END) ISNULL));
SELECT DISTINCT rt12.c2, rt12.c0 FROM rt12, vt2;
SELECT ALL vt2.c0, vt0.c0 FROM vt0 CROSS JOIN rt12 ON (NOT (((((rt12.c2)OR(rt12.c2)))AND(vt2.c0)))) FULL OUTER JOIN vt1 ON ((((((vt2.c0)AND(vt2.c0)))OR('0.8961823003626974')))||(0.31301929098302983)) CROSS JOIN vt2 ON ((rt12.c0) BETWEEN (rt12.c0) AND ((vt1.c0 IN ()))) GROUP BY vt2.c0, vt0.c0;
SELECT rt12.c2, rt12.c0, vt0.c1, vt0.c0, rt12.c1, vt2.c0 FROM vt0 RIGHT OUTER JOIN vt2 ON HEX(DISTINCT vt0.c1 COLLATE BINARY) FULL OUTER JOIN rt12 ON CASE ((rt12.c2) NOT BETWEEN (rt12.c1) AND (vt0.c1))  WHEN ((((vt2.c0)OR(rt12.c1)))AND(rt12.c0)) THEN ((vt0.c0)-(rt12.c2)) END GROUP BY rt12.c2, rt12.c0, vt0.c1, vt0.c0, rt12.c1, vt2.c0;
SELECT rt12.c2, rt12.c0, vt0.c1, vt0.c0, rt12.c1, vt2.c0 FROM vt0 RIGHT OUTER JOIN vt2 ON HEX(DISTINCT vt0.c1 COLLATE BINARY) FULL OUTER JOIN rt12 ON CASE ((rt12.c2) NOT BETWEEN (rt12.c1) AND (vt0.c1))  WHEN ((((vt2.c0)OR(rt12.c1)))AND(rt12.c0)) THEN ((vt0.c0)-(rt12.c2)) END GROUP BY rt12.c2, rt12.c0, vt0.c1, vt0.c0, rt12.c1, vt2.c0 HAVING GROUP_CONCAT(((((vt0.c1)OR(MIN(AVG(rt12.c1)))))AND(vt2.c0))) UNION ALL SELECT rt12.c2, rt12.c0, vt0.c1, vt0.c0, rt12.c1, vt2.c0 FROM vt0 RIGHT OUTER JOIN vt2 ON HEX(DISTINCT vt0.c1 COLLATE BINARY) FULL OUTER JOIN rt12 ON CASE ((rt12.c2) NOT BETWEEN (rt12.c1) AND (vt0.c1))  WHEN ((((vt2.c0)OR(rt12.c1)))AND(rt12.c0)) THEN ((vt0.c0)-(rt12.c2)) END GROUP BY rt12.c2, rt12.c0, vt0.c1, vt0.c0, rt12.c1, vt2.c0 HAVING (NOT (GROUP_CONCAT(((((vt0.c1)OR(MIN(AVG(rt12.c1)))))AND(vt2.c0))))) UNION ALL SELECT rt12.c2, rt12.c0, vt0.c1, vt0.c0, rt12.c1, vt2.c0 FROM vt0 RIGHT OUTER JOIN vt2 ON HEX(DISTINCT vt0.c1 COLLATE BINARY) FULL OUTER JOIN rt12 ON CASE ((rt12.c2) NOT BETWEEN (rt12.c1) AND (vt0.c1))  WHEN ((((vt2.c0)OR(rt12.c1)))AND(rt12.c0)) THEN ((vt0.c0)-(rt12.c2)) END GROUP BY rt12.c2, rt12.c0, vt0.c1, vt0.c0, rt12.c1, vt2.c0 HAVING ((GROUP_CONCAT(((((vt0.c1)OR(MIN(AVG(rt12.c1)))))AND(vt2.c0)))) ISNULL);
SELECT vt1.c0, vt0.c1 FROM vt0, vt1;
SELECT ALL vt1.c0, vt0.c1 FROM vt0, vt1 WHERE (CAST(vt0.c0 AS INTEGER) COLLATE RTRIM) UNION ALL SELECT ALL vt1.c0, vt0.c1 FROM vt0, vt1 WHERE ((NOT (CAST(vt0.c0 AS INTEGER) COLLATE RTRIM))) UNION ALL SELECT vt1.c0, vt0.c1 FROM vt0, vt1 WHERE (((CAST(vt0.c0 AS INTEGER) COLLATE RTRIM) ISNULL));
SELECT vt1.c0, vt0.c1 FROM vt0, vt1;
SELECT DISTINCT rt12.c0, vt0.c1, rt12.c1, vt2.c0, vt0.c0, vt1.c0 FROM vt2, vt0, rt12, vt1;
SELECT DISTINCT rt12.c0, vt0.c1, rt12.c1, vt2.c0, vt0.c0, vt1.c0 FROM vt2, vt0, rt12, vt1 WHERE (LIKELY(((((0.857257919279575)AND(vt0.c1)))OR(vt1.c0)))) UNION SELECT DISTINCT rt12.c0, vt0.c1, rt12.c1, vt2.c0, vt0.c0, vt1.c0 FROM vt2, vt0, rt12 NOT INDEXED, vt1 WHERE ((NOT (LIKELY(((((0.857257919279575)AND(vt0.c1)))OR(vt1.c0)))))) UNION SELECT DISTINCT rt12.c0, vt0.c1, rt12.c1, vt2.c0, vt0.c0, vt1.c0 FROM vt2, vt0, rt12, vt1 WHERE (((LIKELY(((((0.857257919279575)AND(vt0.c1)))OR(vt1.c0)))) ISNULL));
SELECT DISTINCT rt12.c0, vt0.c1, rt12.c1, vt2.c0, vt0.c0, vt1.c0 FROM vt2, vt0, rt12, vt1;
SELECT ALL rt12.c0, rt12.c2, rt12.c1, vt2.c0, vt0.c0, vt1.c0, vt0.c1 FROM rt12 FULL OUTER JOIN vt0 ON (NULL IN ()) COLLATE BINARY CROSS JOIN vt2 ON ((((((rt12.c0)OR(vt1.c0)))OR(rt12.c2)))*(CAST(rt12.c0 AS TEXT))) RIGHT OUTER JOIN vt1 ON TRIM(DISTINCT ((((((((vt2.c0)AND(vt0.c0)))AND(rt12.c0)))OR(vt0.c1)))AND(vt0.c0))) GROUP BY rt12.c0, rt12.c2, rt12.c1, vt2.c0, vt0.c0, vt1.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0, vt2 GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c0, vt0.c1 FROM vt0, vt2 GROUP BY vt0.c0, vt0.c1 HAVING TOTAL(AVG(AVG(COUNT(*)))) UNION ALL SELECT vt0.c0, vt0.c1 FROM vt0, vt2 GROUP BY vt0.c0, vt0.c1 HAVING (NOT (TOTAL(AVG(AVG(COUNT(*)))))) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt0, vt2 GROUP BY vt0.c0, vt0.c1 HAVING ((TOTAL(AVG(AVG(COUNT(*))))) ISNULL);
SELECT * FROM vt0, rt12, vt1;
SELECT ALL * FROM vt0, rt12, vt1 WHERE (((((rt12.c0) BETWEEN (vt1.c0) AND (rt12.c2))) BETWEEN ((+ (vt1.c0))) AND (TYPEOF(rt12.c2)))) UNION ALL SELECT * FROM vt0, rt12, vt1 WHERE ((NOT (((((rt12.c0) BETWEEN (vt1.c0) AND (rt12.c2))) BETWEEN ((+ (vt1.c0))) AND (TYPEOF(rt12.c2)))))) UNION ALL SELECT * FROM vt0 NOT INDEXED, rt12, vt1 WHERE (((((((rt12.c0) BETWEEN (vt1.c0) AND (rt12.c2))) BETWEEN ((+ (vt1.c0))) AND (TYPEOF(rt12.c2)))) ISNULL));
SELECT * FROM vt0, rt12, vt1;
SELECT DISTINCT * FROM rt12;
SELECT DISTINCT * FROM rt12 WHERE (((((((rt12.c2)AND(rt12.c1)))OR(rt12.c0)))IS(rt12.c1 COLLATE BINARY))) UNION SELECT DISTINCT * FROM rt12 WHERE ((NOT (((((((rt12.c2)AND(rt12.c1)))OR(rt12.c0)))IS(rt12.c1 COLLATE BINARY))))) UNION SELECT DISTINCT * FROM rt12 WHERE (((((((((rt12.c2)AND(rt12.c1)))OR(rt12.c0)))IS(rt12.c1 COLLATE BINARY))) ISNULL));
SELECT DISTINCT * FROM rt12;
SELECT vt1.c0, vt2.c0 FROM vt2 LEFT OUTER JOIN vt1 ON CASE WHEN (- (vt2.c0)) THEN (+ (vt2.c0)) ELSE (- (vt2.c0)) END GROUP BY vt1.c0, vt2.c0;
SELECT vt1.c0, vt2.c0 FROM vt2 LEFT OUTER JOIN vt1 ON CASE WHEN (- (vt2.c0)) THEN (+ (vt2.c0)) ELSE (- (vt2.c0)) END WHERE (((((vt1.c0 IN ())))=((((vt2.c0) NOTNULL))))) GROUP BY vt1.c0, vt2.c0 UNION SELECT vt1.c0, vt2.c0 FROM vt2 LEFT OUTER JOIN vt1 ON CASE WHEN (- (vt2.c0)) THEN (+ (vt2.c0)) ELSE (- (vt2.c0)) END WHERE ((NOT (((((vt1.c0 IN ())))=((((vt2.c0) NOTNULL))))))) GROUP BY vt1.c0, vt2.c0 UNION SELECT vt1.c0, vt2.c0 FROM vt2 LEFT OUTER JOIN vt1 ON CASE WHEN (- (vt2.c0)) THEN (+ (vt2.c0)) ELSE (- (vt2.c0)) END WHERE (((((((vt1.c0 IN ())))==((((vt2.c0) NOTNULL))))) ISNULL)) GROUP BY vt1.c0, vt2.c0;
SELECT vt1.c0, vt2.c0 FROM vt2 LEFT OUTER JOIN vt1 ON CASE WHEN (- (vt2.c0)) THEN (+ (vt2.c0)) ELSE (- (vt2.c0)) END GROUP BY vt1.c0, vt2.c0;
SELECT ALL vt1.c0, vt2.c0, vt0.c0 FROM rt12, vt0, vt1, vt2 GROUP BY vt1.c0, vt2.c0, vt0.c0;
SELECT vt1.c0, vt2.c0, vt0.c0 FROM rt12, vt0, vt1, vt2 GROUP BY vt1.c0, vt2.c0, vt0.c0 HAVING ((((SUM(SUM(rt12.c2)))AND(TOTAL(MIN(SUM(vt0.c0))))))OR(COUNT(rt12.c2))) UNION ALL SELECT vt1.c0, vt2.c0, vt0.c0 FROM rt12, vt0, vt1, vt2 GROUP BY vt1.c0, vt2.c0, vt0.c0 HAVING (NOT (((((SUM(SUM(rt12.c2)))AND(TOTAL(MIN(SUM(vt0.c0))))))OR(COUNT(rt12.c2))))) UNION ALL SELECT vt1.c0, vt2.c0, vt0.c0 FROM rt12, vt0, vt1, vt2 GROUP BY vt1.c0, vt2.c0, vt0.c0 HAVING ((((((SUM(SUM(rt12.c2)))AND(TOTAL(MIN(SUM(vt0.c0))))))OR(COUNT(rt12.c2)))) ISNULL);
SELECT ALL * FROM vt2, vt1, vt0;
SELECT * FROM vt2, vt1, vt0 WHERE (CAST((((vt2.c0, vt1.c0, vt0.c1)) NOT BETWEEN ((vt1.c0, vt0.c1, x'b327')) AND ((vt0.c0, vt0.c0, vt2.c0))) AS REAL)) UNION ALL SELECT * FROM vt2, vt1, vt0 WHERE ((NOT (CAST((((vt2.c0, vt1.c0, vt0.c1)) NOT BETWEEN ((vt1.c0, vt0.c1, x'b327')) AND ((vt0.c0, vt0.c0, vt2.c0))) AS REAL)))) UNION ALL SELECT * FROM vt2, vt1, vt0 WHERE (((CAST((((vt2.c0, vt1.c0, vt0.c1)) NOT BETWEEN ((vt1.c0, vt0.c1, x'b327')) AND ((vt0.c0, vt0.c0, vt2.c0))) AS REAL)) ISNULL));
SELECT ALL * FROM vt2, vt1, vt0;
SELECT DISTINCT vt2.c0 FROM vt2;
SELECT DISTINCT vt2.c0 FROM vt2 WHERE (CAST(NULLIF(vt2.c0, vt2.c0) AS BLOB)) UNION SELECT DISTINCT vt2.c0 FROM vt2 WHERE ((NOT (CAST(NULLIF(vt2.c0, vt2.c0) AS BLOB)))) UNION SELECT DISTINCT vt2.c0 FROM vt2 WHERE (((CAST(NULLIF(vt2.c0, vt2.c0) AS BLOB)) ISNULL));
SELECT DISTINCT vt2.c0 FROM vt2;
SELECT ALL vt0.c0, rt12.c2, rt12.c0, vt1.c0, rt12.c1 FROM vt1, rt12, vt2, vt0 GROUP BY vt0.c0, rt12.c2, rt12.c0, vt1.c0, rt12.c1;
SELECT ALL vt0.c0, rt12.c2, rt12.c0, vt1.c0, rt12.c1 FROM vt1, rt12, vt2, vt0 WHERE ((((x'1694')) BETWEEN ((((vt0.c1) IS TRUE))) AND ((LIKELIHOOD(vt1.c0, 0.48512367289040326))))) GROUP BY vt0.c0, rt12.c2, rt12.c0, vt1.c0, rt12.c1 UNION SELECT ALL vt0.c0, rt12.c2, rt12.c0, vt1.c0, rt12.c1 FROM vt1, rt12, vt2, vt0 WHERE ((NOT ((((x'1694')) BETWEEN ((((vt0.c1) IS TRUE))) AND ((LIKELIHOOD(vt1.c0, 0.48512367289040326))))))) GROUP BY vt0.c0, rt12.c2, rt12.c0, vt1.c0, rt12.c1 UNION SELECT ALL vt0.c0, rt12.c2, rt12.c0, vt1.c0, rt12.c1 FROM vt1, rt12, vt2, vt0 WHERE ((((((x'1694')) BETWEEN ((((vt0.c1) IS TRUE))) AND ((LIKELIHOOD(vt1.c0, 0.48512367289040326))))) ISNULL)) GROUP BY vt0.c0, rt12.c2, rt12.c0, vt1.c0, rt12.c1;
SELECT ALL vt0.c0, rt12.c2, rt12.c0, vt1.c0, rt12.c1 FROM vt1, rt12, vt2, vt0 GROUP BY vt0.c0, rt12.c2, rt12.c0, vt1.c0, rt12.c1;
SELECT ALL vt0.c0, vt0.c1, vt1.c0 FROM vt2, vt0, vt1 GROUP BY vt0.c0, vt0.c1, vt1.c0;
SELECT vt0.c0, vt0.c1, vt1.c0 FROM vt2, vt0, vt1 GROUP BY vt0.c0, vt0.c1, vt1.c0 HAVING SUM(COUNT(*)) UNION ALL SELECT vt0.c0, vt0.c1, vt1.c0 FROM vt2, vt0, vt1 GROUP BY vt0.c0, vt0.c1, vt1.c0 HAVING (NOT (SUM(COUNT(*)))) UNION ALL SELECT ALL vt0.c0, vt0.c1, vt1.c0 FROM vt2, vt0, vt1 GROUP BY vt0.c0, vt0.c1, vt1.c0 HAVING ((SUM(COUNT(*))) ISNULL);
SELECT ALL * FROM vt1, rt12;
SELECT ALL * FROM vt1, rt12 WHERE (((vt1.c0) BETWEEN (IFNULL(DISTINCT rt12.c1, rt12.c1)) AND (((vt1.c0)=(rt12.c2))))) UNION ALL SELECT * FROM vt1, rt12 WHERE ((NOT (((vt1.c0) BETWEEN (IFNULL(DISTINCT rt12.c1, rt12.c1)) AND (((vt1.c0)=(rt12.c2))))))) UNION ALL SELECT * FROM vt1, rt12 WHERE (((((vt1.c0) BETWEEN (IFNULL(DISTINCT rt12.c1, rt12.c1)) AND (((vt1.c0)==(rt12.c2))))) ISNULL));
SELECT ALL * FROM vt1, rt12;
SELECT DISTINCT * FROM vt0, vt2 CROSS JOIN vt1 ON (((vt1.c0 IN (vt0.c1)))>>(CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt2.c0 WHEN vt2.c0 THEN vt2.c0 WHEN vt0.c0 THEN vt1.c0 END));
SELECT DISTINCT * FROM vt0, vt2 CROSS JOIN vt1 ON (((vt1.c0 IN (vt0.c1)))>>(CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt2.c0 WHEN vt2.c0 THEN vt2.c0 WHEN vt0.c0 THEN vt1.c0 END)) WHERE ((NOT (vt0.c0)) COLLATE RTRIM) UNION SELECT DISTINCT * FROM vt0, vt2 CROSS JOIN vt1 ON (((vt1.c0 IN (vt0.c1)))>>(CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt2.c0 WHEN vt2.c0 THEN vt2.c0 WHEN vt0.c0 THEN vt1.c0 END)) WHERE ((NOT ((NOT (vt0.c0)) COLLATE RTRIM))) UNION SELECT DISTINCT * FROM vt0, vt2 CROSS JOIN vt1 ON (((vt1.c0 IN (vt0.c1)))>>(CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt2.c0 WHEN vt2.c0 THEN vt2.c0 WHEN vt0.c0 THEN vt1.c0 END)) WHERE ((((NOT (vt0.c0)) COLLATE RTRIM) ISNULL));
SELECT DISTINCT * FROM vt0, vt2 CROSS JOIN vt1 ON (((vt1.c0 IN (vt0.c1)))>>(CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt2.c0 WHEN vt2.c0 THEN vt2.c0 WHEN vt0.c0 THEN vt1.c0 END));
SELECT ALL rt12.c2, rt12.c1 FROM rt12 GROUP BY rt12.c2, rt12.c1;
SELECT rt12.c2, rt12.c1 FROM rt12 WHERE ((((~ (rt12.c1)))!=((((rt12.c0)) BETWEEN ((rt12.c0)) AND ((rt12.c0)))))) GROUP BY rt12.c2, rt12.c1 UNION SELECT rt12.c2, rt12.c1 FROM rt12 WHERE ((NOT ((((~ (rt12.c1)))<>((((rt12.c0)) BETWEEN ((rt12.c0)) AND ((rt12.c0)))))))) GROUP BY rt12.c2, rt12.c1 UNION SELECT ALL rt12.c2, rt12.c1 FROM rt12 WHERE ((((((~ (rt12.c1)))<>((((rt12.c0)) BETWEEN ((rt12.c0)) AND ((rt12.c0)))))) ISNULL)) GROUP BY rt12.c2, rt12.c1;
SELECT ALL rt12.c2, rt12.c1 FROM rt12 GROUP BY rt12.c2, rt12.c1;
SELECT ALL rt12.c2, rt12.c0 FROM rt12 RIGHT OUTER JOIN vt2 ON CAST(0.4563094290192995 COLLATE RTRIM AS BLOB) GROUP BY rt12.c2, rt12.c0;
SELECT rt12.c2, rt12.c0 FROM rt12 RIGHT OUTER JOIN vt2 ON CAST(0.4563094290192995 COLLATE RTRIM AS BLOB) GROUP BY rt12.c2, rt12.c0 HAVING COUNT(*) UNION ALL SELECT ALL rt12.c2, rt12.c0 FROM rt12 NOT INDEXED RIGHT OUTER JOIN vt2 ON CAST(0.4563094290192995 COLLATE RTRIM AS BLOB) GROUP BY rt12.c2, rt12.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt12.c2, rt12.c0 FROM rt12 RIGHT OUTER JOIN vt2 ON CAST(0.4563094290192995 COLLATE RTRIM AS BLOB) GROUP BY rt12.c2, rt12.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt12.c2, rt12.c0 FROM rt12 RIGHT OUTER JOIN vt2 ON CAST(0.4563094290192995 COLLATE RTRIM AS BLOB) GROUP BY rt12.c2, rt12.c0;
SELECT rt12.c2, rt12.c0 FROM rt12 RIGHT OUTER JOIN vt2 ON CAST(0.4563094290192995 COLLATE RTRIM AS BLOB) GROUP BY rt12.c2, rt12.c0 HAVING COUNT(*) UNION ALL SELECT ALL rt12.c2, rt12.c0 FROM rt12 NOT INDEXED RIGHT OUTER JOIN vt2 ON CAST(0.4563094290192995 COLLATE RTRIM AS BLOB) GROUP BY rt12.c2, rt12.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt12.c2, rt12.c0 FROM rt12 RIGHT OUTER JOIN vt2 ON CAST(0.4563094290192995 COLLATE RTRIM AS BLOB) GROUP BY rt12.c2, rt12.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt12.c2, rt12.c0 FROM rt12 RIGHT OUTER JOIN vt2 ON CAST(0.4563094290192995 COLLATE RTRIM AS BLOB) GROUP BY rt12.c2, rt12.c0;
SELECT ALL * FROM rt12 LEFT OUTER JOIN vt2 ON (((((rt12.c1) BETWEEN (rt12.c1) AND (rt12.c1))))<((((rt12.c0)=(rt12.c1))))) CROSS JOIN vt1 ON (((rt12.c2 COLLATE RTRIM, (((rt12.c1)) BETWEEN (('2036224013')) AND ((vt2.c0))), CASE vt1.c0  WHEN vt1.c0 THEN rt12.c1 END))>=((CASE WHEN vt1.c0 THEN rt12.c2 WHEN rt12.c1 THEN vt2.c0 WHEN rt12.c1 THEN rt12.c2 END, COALESCE(vt2.c0, vt2.c0, 0.3718445047021828, rt12.c0), CASE rt12.c0  WHEN vt1.c0 THEN vt1.c0 ELSE rt12.c0 END)));
SELECT ALL * FROM rt12 LEFT OUTER JOIN vt2 ON (((((rt12.c1) BETWEEN (rt12.c1) AND (rt12.c1))))<((((rt12.c0)==(rt12.c1))))) CROSS JOIN vt1 ON (((rt12.c2 COLLATE RTRIM, (((rt12.c1)) BETWEEN (('2036224013')) AND ((vt2.c0))), CASE vt1.c0  WHEN vt1.c0 THEN rt12.c1 END))>=((CASE WHEN vt1.c0 THEN rt12.c2 WHEN rt12.c1 THEN vt2.c0 WHEN rt12.c1 THEN rt12.c2 END, COALESCE(vt2.c0, vt2.c0, 0.3718445047021828, rt12.c0), CASE rt12.c0  WHEN vt1.c0 THEN vt1.c0 ELSE rt12.c0 END))) WHERE ((((rt12.c0)) NOT BETWEEN ((rt12.c0 COLLATE RTRIM)) AND (((~ (vt2.c0)))))) UNION ALL SELECT * FROM rt12 LEFT OUTER JOIN vt2 ON (((((rt12.c1) BETWEEN (rt12.c1) AND (rt12.c1))))<((((rt12.c0)==(rt12.c1))))) CROSS JOIN vt1 ON (((rt12.c2 COLLATE RTRIM, (((rt12.c1)) BETWEEN (('2036224013')) AND ((vt2.c0))), CASE vt1.c0  WHEN vt1.c0 THEN rt12.c1 END))>=((CASE WHEN vt1.c0 THEN rt12.c2 WHEN rt12.c1 THEN vt2.c0 WHEN rt12.c1 THEN rt12.c2 END, COALESCE(vt2.c0, vt2.c0, 0.3718445047021828, rt12.c0), CASE rt12.c0  WHEN vt1.c0 THEN vt1.c0 ELSE rt12.c0 END))) WHERE ((NOT ((((rt12.c0)) NOT BETWEEN ((rt12.c0 COLLATE RTRIM)) AND (((~ (vt2.c0)))))))) UNION ALL SELECT * FROM rt12 LEFT OUTER JOIN vt2 ON (((((rt12.c1) BETWEEN (rt12.c1) AND (rt12.c1))))<((((rt12.c0)=(rt12.c1))))) CROSS JOIN vt1 ON (((rt12.c2 COLLATE RTRIM, (((rt12.c1)) BETWEEN (('2036224013')) AND ((vt2.c0))), CASE vt1.c0  WHEN vt1.c0 THEN rt12.c1 END))>=((CASE WHEN vt1.c0 THEN rt12.c2 WHEN rt12.c1 THEN vt2.c0 WHEN rt12.c1 THEN rt12.c2 END, COALESCE(vt2.c0, vt2.c0, 0.3718445047021828, rt12.c0), CASE rt12.c0  WHEN vt1.c0 THEN vt1.c0 ELSE rt12.c0 END))) WHERE ((((((rt12.c0)) NOT BETWEEN ((rt12.c0 COLLATE RTRIM)) AND (((~ (vt2.c0)))))) ISNULL));
SELECT ALL * FROM rt12 LEFT OUTER JOIN vt2 ON (((((rt12.c1) BETWEEN (rt12.c1) AND (rt12.c1))))<((((rt12.c0)=(rt12.c1))))) CROSS JOIN vt1 ON (((rt12.c2 COLLATE RTRIM, (((rt12.c1)) BETWEEN (('2036224013')) AND ((vt2.c0))), CASE vt1.c0  WHEN vt1.c0 THEN rt12.c1 END))>=((CASE WHEN vt1.c0 THEN rt12.c2 WHEN rt12.c1 THEN vt2.c0 WHEN rt12.c1 THEN rt12.c2 END, COALESCE(vt2.c0, vt2.c0, 0.3718445047021828, rt12.c0), CASE rt12.c0  WHEN vt1.c0 THEN vt1.c0 ELSE rt12.c0 END)));
SELECT DISTINCT vt1.c0, rt12.c2, rt12.c1, rt12.c0 FROM rt12 LEFT OUTER JOIN vt1 ON rt12.c1;
SELECT DISTINCT vt1.c0, rt12.c2, rt12.c1, rt12.c0 FROM rt12 LEFT OUTER JOIN vt1 ON rt12.c1 WHERE ('1373731987') UNION SELECT DISTINCT vt1.c0, rt12.c2, rt12.c1, rt12.c0 FROM rt12 LEFT OUTER JOIN vt1 ON rt12.c1 WHERE ((NOT ('1373731987'))) UNION SELECT DISTINCT vt1.c0, rt12.c2, rt12.c1, rt12.c0 FROM rt12 LEFT OUTER JOIN vt1 ON rt12.c1 WHERE ((('1373731987') ISNULL));
SELECT DISTINCT vt1.c0, rt12.c2, rt12.c1, rt12.c0 FROM rt12 LEFT OUTER JOIN vt1 ON rt12.c1;
SELECT vt2.c0, rt12.c0, vt0.c0, rt12.c1, vt0.c1 FROM vt1, vt2, vt0, rt12 GROUP BY vt2.c0, rt12.c0, vt0.c0, rt12.c1, vt0.c1;
SELECT vt2.c0, rt12.c0, vt0.c0, rt12.c1, vt0.c1 FROM vt1, vt2, vt0, rt12 WHERE ('now') GROUP BY vt2.c0, rt12.c0, vt0.c0, rt12.c1, vt0.c1 UNION SELECT ALL vt2.c0, rt12.c0, vt0.c0, rt12.c1, vt0.c1 FROM vt1, vt2, vt0, rt12 WHERE ((NOT ('now'))) GROUP BY vt2.c0, rt12.c0, vt0.c0, rt12.c1, vt0.c1 UNION SELECT ALL vt2.c0, rt12.c0, vt0.c0, rt12.c1, vt0.c1 FROM vt1 NOT INDEXED, vt2, vt0, rt12 WHERE ((('now') ISNULL)) GROUP BY vt2.c0, rt12.c0, vt0.c0, rt12.c1, vt0.c1;
SELECT vt2.c0, rt12.c0, vt0.c0, rt12.c1, vt0.c1 FROM vt1, vt2, vt0, rt12 GROUP BY vt2.c0, rt12.c0, vt0.c0, rt12.c1, vt0.c1;
SELECT ALL rt12.c0, rt12.c2, vt0.c0, rt12.c1, vt0.c1 FROM vt0, rt12 GROUP BY rt12.c0, rt12.c2, vt0.c0, rt12.c1, vt0.c1;
SELECT rt12.c0, rt12.c2, vt0.c0, rt12.c1, vt0.c1 FROM vt0, rt12 GROUP BY rt12.c0, rt12.c2, vt0.c0, rt12.c1, vt0.c1 HAVING MAX(MIN(MAX(GROUP_CONCAT(COUNT(*))))) UNION ALL SELECT ALL rt12.c0, rt12.c2, vt0.c0, rt12.c1, vt0.c1 FROM vt0, rt12 GROUP BY rt12.c0, rt12.c2, vt0.c0, rt12.c1, vt0.c1 HAVING (NOT (MAX(MIN(MAX(GROUP_CONCAT(COUNT(*))))))) UNION ALL SELECT ALL rt12.c0, rt12.c2, vt0.c0, rt12.c1, vt0.c1 FROM vt0, rt12 GROUP BY rt12.c0, rt12.c2, vt0.c0, rt12.c1, vt0.c1 HAVING ((MAX(MIN(MAX(GROUP_CONCAT(COUNT(*)))))) ISNULL);
SELECT * FROM vt1, vt0;
SELECT * FROM vt1, vt0 WHERE ('-791379121') UNION ALL SELECT ALL * FROM vt1, vt0 WHERE ((NOT ('-791379121'))) UNION ALL SELECT * FROM vt1, vt0 WHERE ((('-791379121') ISNULL));
SELECT * FROM vt1, vt0;
SELECT DISTINCT * FROM vt0, rt12;
SELECT DISTINCT * FROM vt0, rt12 WHERE (CASE WHEN CAST(vt0.c0 AS REAL) THEN CAST(vt0.c1 AS NUMERIC) END) UNION SELECT DISTINCT * FROM vt0, rt12 WHERE ((NOT (CASE WHEN CAST(vt0.c0 AS REAL) THEN CAST(vt0.c1 AS NUMERIC) END))) UNION SELECT DISTINCT * FROM vt0, rt12 WHERE (((CASE WHEN CAST(vt0.c0 AS REAL) THEN CAST(vt0.c1 AS NUMERIC) END) ISNULL));
SELECT DISTINCT * FROM vt0, rt12;
SELECT vt2.c0 FROM vt2, vt0 GROUP BY vt2.c0;
SELECT vt2.c0 FROM vt2, vt0 WHERE ((((- (vt0.c0)))<=(vt2.c0))) GROUP BY vt2.c0 UNION SELECT vt2.c0 FROM vt2, vt0 WHERE ((NOT ((((- (vt0.c0)))<=(vt2.c0))))) GROUP BY vt2.c0 UNION SELECT ALL vt2.c0 FROM vt2, vt0 WHERE ((((((- (vt0.c0)))<=(vt2.c0))) ISNULL)) GROUP BY vt2.c0;
SELECT vt2.c0 FROM vt2, vt0 GROUP BY vt2.c0;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING COUNT(x'') UNION ALL SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING (NOT (COUNT(x''))) UNION ALL SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING ((COUNT(x'')) ISNULL);
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING COUNT(x'') UNION ALL SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING (NOT (COUNT(x''))) UNION ALL SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING ((COUNT(x'')) ISNULL);
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0;
SELECT vt0.c1 FROM vt0 WHERE ((((vt0.c1) IS TRUE) IN ())) UNION ALL SELECT vt0.c1 FROM vt0 WHERE ((NOT ((((vt0.c1) IS TRUE) IN ())))) UNION ALL SELECT vt0.c1 FROM vt0 WHERE ((((((vt0.c1) IS TRUE) IN ())) ISNULL));
SELECT vt0.c1 FROM vt0;
SELECT DISTINCT * FROM vt2, vt1;
SELECT DISTINCT * FROM vt2, vt1 WHERE ((vt2.c0 COLLATE BINARY IN ())) UNION SELECT DISTINCT * FROM vt2, vt1 WHERE ((NOT ((vt2.c0 COLLATE BINARY IN ())))) UNION SELECT DISTINCT * FROM vt2, vt1 WHERE ((((vt2.c0 COLLATE BINARY IN ())) ISNULL));
SELECT DISTINCT * FROM vt2, vt1;
SELECT vt0.c0 FROM vt2, vt1, vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt2, vt1, vt0 WHERE ((NOT (TYPEOF(vt0.c1)))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt2, vt1, vt0 WHERE ((NOT ((NOT (TYPEOF(vt0.c1)))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt2, vt1, vt0 WHERE ((((NOT (TYPEOF(vt0.c1)))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt2, vt1, vt0 GROUP BY vt0.c0;
SELECT ALL vt1.c0 FROM vt1 NATURAL JOIN vt2 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 NATURAL JOIN vt2 GROUP BY vt1.c0 HAVING GROUP_CONCAT(x'') UNION ALL SELECT vt1.c0 FROM vt1 NATURAL JOIN vt2 GROUP BY vt1.c0 HAVING (NOT (GROUP_CONCAT(x''))) UNION ALL SELECT ALL vt1.c0 FROM vt1 NATURAL JOIN vt2 GROUP BY vt1.c0 HAVING ((GROUP_CONCAT(x'')) ISNULL);
SELECT ALL vt1.c0 FROM vt1 NATURAL JOIN vt2 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 NATURAL JOIN vt2 GROUP BY vt1.c0 HAVING GROUP_CONCAT(x'') UNION ALL SELECT vt1.c0 FROM vt1 NATURAL JOIN vt2 GROUP BY vt1.c0 HAVING (NOT (GROUP_CONCAT(x''))) UNION ALL SELECT ALL vt1.c0 FROM vt1 NATURAL JOIN vt2 GROUP BY vt1.c0 HAVING ((GROUP_CONCAT(x'')) ISNULL);
SELECT ALL vt1.c0 FROM vt1 NATURAL JOIN vt2 GROUP BY vt1.c0;
SELECT ALL vt1.c0, vt2.c0, rt12.c0 FROM rt12, vt2, vt1;
SELECT vt1.c0, vt2.c0, rt12.c0 FROM rt12, vt2, vt1 WHERE (CASE WHEN rt12.c0 THEN vt2.c0 ELSE ((vt2.c0)/(rt12.c2)) END) UNION ALL SELECT vt1.c0, vt2.c0, rt12.c0 FROM rt12, vt2, vt1 WHERE ((NOT (CASE WHEN rt12.c0 THEN vt2.c0 ELSE ((vt2.c0)/(rt12.c2)) END))) UNION ALL SELECT ALL vt1.c0, vt2.c0, rt12.c0 FROM rt12, vt2, vt1 WHERE (((CASE WHEN rt12.c0 THEN vt2.c0 ELSE ((vt2.c0)/(rt12.c2)) END) ISNULL));
SELECT ALL vt1.c0, vt2.c0, rt12.c0 FROM rt12, vt2, vt1;
SELECT DISTINCT * FROM vt2 RIGHT OUTER JOIN rt12 ON rt12.c0;
SELECT DISTINCT * FROM vt2 RIGHT OUTER JOIN rt12 ON rt12.c0 WHERE (rt12.c1) UNION SELECT DISTINCT * FROM vt2 RIGHT OUTER JOIN rt12 ON rt12.c0 WHERE ((NOT (rt12.c1))) UNION SELECT DISTINCT * FROM vt2 RIGHT OUTER JOIN rt12 ON rt12.c0 WHERE (((rt12.c1) ISNULL));
SELECT DISTINCT * FROM vt2 RIGHT OUTER JOIN rt12 ON rt12.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE (((vt1.c0)IS(vt1.c0)) COLLATE NOCASE) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT (((vt1.c0)IS(vt1.c0)) COLLATE NOCASE))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE (((((vt1.c0)IS(vt1.c0)) COLLATE NOCASE) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL rt12.c0, rt12.c2 FROM vt2, rt12, vt0 GROUP BY rt12.c0, rt12.c2;
SELECT ALL rt12.c0, rt12.c2 FROM vt2, rt12, vt0 GROUP BY rt12.c0, rt12.c2 HAVING ((((CAST(rt12.c2 AS REAL))OR(GROUP_CONCAT(rt12.c1))))OR(AVG(rt12.c1) COLLATE RTRIM)) UNION ALL SELECT rt12.c0, rt12.c2 FROM vt2, rt12, vt0 GROUP BY rt12.c0, rt12.c2 HAVING (NOT (((((CAST(rt12.c2 AS REAL))OR(GROUP_CONCAT(rt12.c1))))OR(AVG(rt12.c1) COLLATE RTRIM)))) UNION ALL SELECT ALL rt12.c0, rt12.c2 FROM vt2, rt12, vt0 GROUP BY rt12.c0, rt12.c2 HAVING ((((((CAST(rt12.c2 AS REAL))OR(GROUP_CONCAT(rt12.c1))))OR(AVG(rt12.c1) COLLATE RTRIM))) ISNULL);
SELECT ALL rt12.c0, rt12.c2 FROM vt2, rt12, vt0 GROUP BY rt12.c0, rt12.c2;
SELECT ALL rt12.c0, rt12.c2 FROM vt2, rt12, vt0 GROUP BY rt12.c0, rt12.c2 HAVING ((((CAST(rt12.c2 AS REAL))OR(GROUP_CONCAT(rt12.c1))))OR(AVG(rt12.c1) COLLATE RTRIM)) UNION ALL SELECT rt12.c0, rt12.c2 FROM vt2, rt12, vt0 GROUP BY rt12.c0, rt12.c2 HAVING (NOT (((((CAST(rt12.c2 AS REAL))OR(GROUP_CONCAT(rt12.c1))))OR(AVG(rt12.c1) COLLATE RTRIM)))) UNION ALL SELECT ALL rt12.c0, rt12.c2 FROM vt2, rt12, vt0 GROUP BY rt12.c0, rt12.c2 HAVING ((((((CAST(rt12.c2 AS REAL))OR(GROUP_CONCAT(rt12.c1))))OR(AVG(rt12.c1) COLLATE RTRIM))) ISNULL);
SELECT ALL rt12.c0, rt12.c2 FROM vt2, rt12, vt0 GROUP BY rt12.c0, rt12.c2;
SELECT ALL * FROM rt12, vt2, vt1;
SELECT * FROM rt12, vt2, vt1 WHERE (((x'') NOT BETWEEN (((rt12.c0)>(rt12.c1))) AND (NULL))) UNION ALL SELECT * FROM rt12, vt2, vt1 WHERE ((NOT (((x'') NOT BETWEEN (((rt12.c0)>(rt12.c1))) AND (NULL))))) UNION ALL SELECT ALL * FROM rt12, vt2, vt1 WHERE (((((x'') NOT BETWEEN (((rt12.c0)>(rt12.c1))) AND (NULL))) ISNULL));
SELECT ALL * FROM rt12, vt2, vt1;
SELECT DISTINCT rt12.c2, rt12.c1, vt2.c0, vt0.c0, rt12.c0, vt0.c1, vt1.c0 FROM rt12, vt2, vt1, vt0;
SELECT DISTINCT rt12.c2, rt12.c1, vt2.c0, vt0.c0, rt12.c0, vt0.c1, vt1.c0 FROM rt12, vt2, vt1, vt0 WHERE (((COALESCE(x'023c', rt12.c2))==(((vt0.c1) NOT NULL)))) UNION SELECT DISTINCT rt12.c2, rt12.c1, vt2.c0, vt0.c0, rt12.c0, vt0.c1, vt1.c0 FROM rt12, vt2, vt1, vt0 WHERE ((NOT (((COALESCE(x'023c', rt12.c2))=(((vt0.c1) NOT NULL)))))) UNION SELECT DISTINCT rt12.c2, rt12.c1, vt2.c0, vt0.c0, rt12.c0, vt0.c1, vt1.c0 FROM rt12, vt2, vt1, vt0 WHERE (((((COALESCE(x'023c', rt12.c2))==(((vt0.c1) NOT NULL)))) ISNULL));
SELECT DISTINCT rt12.c2, rt12.c1, vt2.c0, vt0.c0, rt12.c0, vt0.c1, vt1.c0 FROM rt12, vt2, vt1, vt0;
SELECT vt1.c0, rt12.c2 FROM vt2, rt12, vt1 GROUP BY vt1.c0, rt12.c2;
SELECT ALL vt1.c0, rt12.c2 FROM vt2, rt12, vt1 WHERE (((((rt12.c1)/(vt1.c0))) ISNULL)) GROUP BY vt1.c0, rt12.c2 UNION SELECT vt1.c0, rt12.c2 FROM vt2, rt12, vt1 WHERE ((NOT (((((rt12.c1)/(vt1.c0))) ISNULL)))) GROUP BY vt1.c0, rt12.c2 UNION SELECT ALL vt1.c0, rt12.c2 FROM vt2, rt12, vt1 WHERE (((((((rt12.c1)/(vt1.c0))) ISNULL)) ISNULL)) GROUP BY vt1.c0, rt12.c2;
SELECT vt1.c0, rt12.c2 FROM vt2, rt12, vt1 GROUP BY vt1.c0, rt12.c2;
SELECT ALL vt0.c0, rt12.c0, vt0.c1, vt2.c0, rt12.c2 FROM vt2, rt12, vt0, vt1 GROUP BY vt0.c0, rt12.c0, vt0.c1, vt2.c0, rt12.c2;
SELECT ALL vt0.c0, rt12.c0, vt0.c1, vt2.c0, rt12.c2 FROM vt2, rt12, vt0, vt1 GROUP BY vt0.c0, rt12.c0, vt0.c1, vt2.c0, rt12.c2 HAVING COUNT(*) UNION ALL SELECT vt0.c0, rt12.c0, vt0.c1, vt2.c0, rt12.c2 FROM vt2, rt12, vt0, vt1 GROUP BY vt0.c0, rt12.c0, vt0.c1, vt2.c0, rt12.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt0.c0, rt12.c0, vt0.c1, vt2.c0, rt12.c2 FROM vt2, rt12, vt0, vt1 GROUP BY vt0.c0, rt12.c0, vt0.c1, vt2.c0, rt12.c2 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt0.c0, rt12.c0, vt0.c1, vt2.c0, rt12.c2 FROM vt2, rt12, vt0, vt1 GROUP BY vt0.c0, rt12.c0, vt0.c1, vt2.c0, rt12.c2;
SELECT ALL vt0.c0, rt12.c0, vt0.c1, vt2.c0, rt12.c2 FROM vt2, rt12, vt0, vt1 GROUP BY vt0.c0, rt12.c0, vt0.c1, vt2.c0, rt12.c2 HAVING COUNT(*) UNION ALL SELECT vt0.c0, rt12.c0, vt0.c1, vt2.c0, rt12.c2 FROM vt2, rt12, vt0, vt1 GROUP BY vt0.c0, rt12.c0, vt0.c1, vt2.c0, rt12.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt0.c0, rt12.c0, vt0.c1, vt2.c0, rt12.c2 FROM vt2, rt12, vt0, vt1 GROUP BY vt0.c0, rt12.c0, vt0.c1, vt2.c0, rt12.c2 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt0.c0, rt12.c0, vt0.c1, vt2.c0, rt12.c2 FROM vt2, rt12, vt0, vt1 GROUP BY vt0.c0, rt12.c0, vt0.c1, vt2.c0, rt12.c2;
SELECT ALL vt0.c0, rt12.c1, rt12.c0, vt0.c1, rt12.c2 FROM vt0, rt12, vt1;
SELECT vt0.c0, rt12.c1, rt12.c0, vt0.c1, rt12.c2 FROM vt0, rt12, vt1 WHERE ((- (((((vt1.c0)OR(vt1.c0)))AND(0.9595736747883472))))) UNION ALL SELECT ALL vt0.c0, rt12.c1, rt12.c0, vt0.c1, rt12.c2 FROM vt0, rt12, vt1 WHERE ((NOT ((- (((((vt1.c0)OR(vt1.c0)))AND(0.9595736747883472))))))) UNION ALL SELECT vt0.c0, rt12.c1, rt12.c0, vt0.c1, rt12.c2 FROM vt0, rt12, vt1 WHERE ((((- (((((vt1.c0)OR(vt1.c0)))AND(0.9595736747883472))))) ISNULL));
SELECT ALL vt0.c0, rt12.c1, rt12.c0, vt0.c1, rt12.c2 FROM vt0, rt12, vt1;
SELECT DISTINCT vt0.c1 FROM vt2, vt0, rt12, vt1;
SELECT DISTINCT vt0.c1 FROM vt2, vt0, rt12, vt1 WHERE (((0.9887426923235021)LIKE(SQLITE_COMPILEOPTION_GET(vt0.c1)))) UNION SELECT DISTINCT vt0.c1 FROM vt2, vt0, rt12, vt1 WHERE ((NOT (((0.9887426923235021)LIKE(SQLITE_COMPILEOPTION_GET(vt0.c1)))))) UNION SELECT DISTINCT vt0.c1 FROM vt2, vt0, rt12, vt1 WHERE (((((0.9887426923235021)LIKE(SQLITE_COMPILEOPTION_GET(vt0.c1)))) ISNULL));
SELECT DISTINCT vt0.c1 FROM vt2, vt0, rt12, vt1;
SELECT ALL vt1.c0, vt2.c0, vt0.c0, vt0.c1 FROM vt1 INNER JOIN vt2 ON (((vt2.c0, vt0.c1, vt0.c1, vt1.c0, vt0.c0)) NOT BETWEEN ((((vt2.c0) BETWEEN (vt0.c1) AND (vt1.c0)), CAST(vt1.c0 AS REAL), CASE vt0.c0  WHEN x'89fc' THEN vt0.c0 WHEN NULL THEN vt1.c0 WHEN vt0.c0 THEN 0.37533703154355447 END, (~ (vt2.c0)), (((vt0.c1)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))) AND ((((vt1.c0)GLOB(0)), ((((((((vt0.c0)AND(vt0.c0)))OR(vt1.c0)))OR(vt2.c0)))OR(vt1.c0)), ((vt2.c0)/(vt1.c0)), vt0.c1, ((vt1.c0)-('}9IId큐'))))) INNER JOIN vt0 ON (HEX(DISTINCT vt0.c1) IN (((NULL)||(vt0.c0)), vt1.c0 COLLATE BINARY)) GROUP BY vt1.c0, vt2.c0, vt0.c0, vt0.c1;
SELECT vt1.c0, vt2.c0, vt0.c0, vt0.c1 FROM vt1 INNER JOIN vt2 ON (((vt2.c0, vt0.c1, vt0.c1, vt1.c0, vt0.c0)) NOT BETWEEN ((((vt2.c0) BETWEEN (vt0.c1) AND (vt1.c0)), CAST(vt1.c0 AS REAL), CASE vt0.c0  WHEN x'89fc' THEN vt0.c0 WHEN NULL THEN vt1.c0 WHEN vt0.c0 THEN 0.37533703154355447 END, (~ (vt2.c0)), (((vt0.c1)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))) AND ((((vt1.c0)GLOB(0)), ((((((((vt0.c0)AND(vt0.c0)))OR(vt1.c0)))OR(vt2.c0)))OR(vt1.c0)), ((vt2.c0)/(vt1.c0)), vt0.c1, ((vt1.c0)-('}9IId큐'))))) INNER JOIN vt0 ON (HEX(DISTINCT vt0.c1) IN (((NULL)||(vt0.c0)), vt1.c0 COLLATE BINARY)) WHERE ((((((vt0.c1)AND(vt2.c0)))OR(vt1.c0)) IN (((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0))))) GROUP BY vt1.c0, vt2.c0, vt0.c0, vt0.c1 UNION SELECT vt1.c0, vt2.c0, vt0.c0, vt0.c1 FROM vt1 INNER JOIN vt2 ON (((vt2.c0, vt0.c1, vt0.c1, vt1.c0, vt0.c0)) NOT BETWEEN ((((vt2.c0) BETWEEN (vt0.c1) AND (vt1.c0)), CAST(vt1.c0 AS REAL), CASE vt0.c0  WHEN x'89fc' THEN vt0.c0 WHEN NULL THEN vt1.c0 WHEN vt0.c0 THEN 0.37533703154355447 END, (~ (vt2.c0)), (((vt0.c1)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))) AND ((((vt1.c0)GLOB(0)), ((((((((vt0.c0)AND(vt0.c0)))OR(vt1.c0)))OR(vt2.c0)))OR(vt1.c0)), ((vt2.c0)/(vt1.c0)), vt0.c1, ((vt1.c0)-('}9IId큐'))))) INNER JOIN vt0 ON (HEX(DISTINCT vt0.c1) IN (((NULL)||(vt0.c0)), vt1.c0 COLLATE BINARY)) WHERE ((NOT ((((((vt0.c1)AND(vt2.c0)))OR(vt1.c0)) IN (((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0))))))) GROUP BY vt1.c0, vt2.c0, vt0.c0, vt0.c1 UNION SELECT vt1.c0, vt2.c0, vt0.c0, vt0.c1 FROM vt1 INNER JOIN vt2 ON (((vt2.c0, vt0.c1, vt0.c1, vt1.c0, vt0.c0)) NOT BETWEEN ((((vt2.c0) BETWEEN (vt0.c1) AND (vt1.c0)), CAST(vt1.c0 AS REAL), CASE vt0.c0  WHEN x'89fc' THEN vt0.c0 WHEN NULL THEN vt1.c0 WHEN vt0.c0 THEN 0.37533703154355447 END, (~ (vt2.c0)), (((vt0.c1)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))) AND ((((vt1.c0)GLOB(0)), ((((((((vt0.c0)AND(vt0.c0)))OR(vt1.c0)))OR(vt2.c0)))OR(vt1.c0)), ((vt2.c0)/(vt1.c0)), vt0.c1, ((vt1.c0)-('}9IId큐'))))) INNER JOIN vt0 ON (HEX(DISTINCT vt0.c1) IN (((NULL)||(vt0.c0)), vt1.c0 COLLATE BINARY)) WHERE ((((((((vt0.c1)AND(vt2.c0)))OR(vt1.c0)) IN (((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0))))) ISNULL)) GROUP BY vt1.c0, vt2.c0, vt0.c0, vt0.c1;
SELECT ALL vt1.c0, vt2.c0, vt0.c0, vt0.c1 FROM vt1 INNER JOIN vt2 ON (((vt2.c0, vt0.c1, vt0.c1, vt1.c0, vt0.c0)) NOT BETWEEN ((((vt2.c0) BETWEEN (vt0.c1) AND (vt1.c0)), CAST(vt1.c0 AS REAL), CASE vt0.c0  WHEN x'89fc' THEN vt0.c0 WHEN NULL THEN vt1.c0 WHEN vt0.c0 THEN 0.37533703154355447 END, (~ (vt2.c0)), (((vt0.c1)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))) AND ((((vt1.c0)GLOB(0)), ((((((((vt0.c0)AND(vt0.c0)))OR(vt1.c0)))OR(vt2.c0)))OR(vt1.c0)), ((vt2.c0)/(vt1.c0)), vt0.c1, ((vt1.c0)-('}9IId큐'))))) INNER JOIN vt0 ON (HEX(DISTINCT vt0.c1) IN (((NULL)||(vt0.c0)), vt1.c0 COLLATE BINARY)) GROUP BY vt1.c0, vt2.c0, vt0.c0, vt0.c1;
SELECT rt12.c2 FROM vt2, rt12, vt1 GROUP BY rt12.c2;
SELECT ALL rt12.c2 FROM vt2, rt12, vt1 GROUP BY rt12.c2 HAVING (((- (TOTAL(MIN('1710854074'))))) NOT BETWEEN (MIN(vt2.c0)) AND (NULL)) UNION ALL SELECT ALL rt12.c2 FROM vt2, rt12, vt1 GROUP BY rt12.c2 HAVING (NOT ((((- (TOTAL(MIN('1710854074'))))) NOT BETWEEN (MIN(vt2.c0)) AND (NULL)))) UNION ALL SELECT rt12.c2 FROM vt2, rt12, vt1 GROUP BY rt12.c2 HAVING (((((- (TOTAL(MIN('1710854074'))))) NOT BETWEEN (MIN(vt2.c0)) AND (NULL))) ISNULL);
SELECT * FROM vt0, vt1;
SELECT * FROM vt0, vt1 WHERE ((CASE vt1.c0  WHEN vt0.c1 THEN vt1.c0 ELSE vt1.c0 END IN ())) UNION ALL SELECT ALL * FROM vt0, vt1 WHERE ((NOT ((CASE vt1.c0  WHEN vt0.c1 THEN vt1.c0 ELSE vt1.c0 END IN ())))) UNION ALL SELECT ALL * FROM vt0, vt1 WHERE ((((CASE vt1.c0  WHEN vt0.c1 THEN vt1.c0 ELSE vt1.c0 END IN ())) ISNULL));
SELECT * FROM vt0, vt1;
SELECT DISTINCT * FROM vt0 INNER JOIN vt2 ON vt0.c1 COLLATE BINARY;
SELECT DISTINCT * FROM vt0 INNER JOIN vt2 ON vt0.c1 COLLATE BINARY WHERE (CAST(((vt0.c0)>(vt0.c1)) AS NUMERIC)) UNION SELECT DISTINCT * FROM vt0 INNER JOIN vt2 ON vt0.c1 COLLATE BINARY WHERE ((NOT (CAST(((vt0.c0)>(vt0.c1)) AS NUMERIC)))) UNION SELECT DISTINCT * FROM vt0 INNER JOIN vt2 ON vt0.c1 COLLATE BINARY WHERE (((CAST(((vt0.c0)>(vt0.c1)) AS NUMERIC)) ISNULL));
SELECT DISTINCT * FROM vt0 INNER JOIN vt2 ON vt0.c1 COLLATE BINARY;
SELECT ALL vt2.c0, vt0.c1, vt1.c0, vt0.c0, rt12.c1 FROM vt0 CROSS JOIN vt1 ON ((CAST(rt12.c0 AS BLOB))-(vt0.c1)) FULL OUTER JOIN rt12 ON (- (rt12.c1)) COLLATE RTRIM RIGHT OUTER JOIN vt2 ON CAST(UNLIKELY(vt1.c0) AS INTEGER) GROUP BY vt2.c0, vt0.c1, vt1.c0, vt0.c0, rt12.c1;
SELECT ALL vt1.c0, rt12.c0, rt12.c1, vt2.c0, rt12.c2 FROM rt12, vt2, vt1 GROUP BY vt1.c0, rt12.c0, rt12.c1, vt2.c0, rt12.c2;
SELECT ALL vt1.c0, rt12.c0, rt12.c1, vt2.c0, rt12.c2 FROM rt12, vt2, vt1 GROUP BY vt1.c0, rt12.c0, rt12.c1, vt2.c0, rt12.c2 HAVING MAX(rt12.c0) UNION ALL SELECT vt1.c0, rt12.c0, rt12.c1, vt2.c0, rt12.c2 FROM rt12, vt2, vt1 GROUP BY vt1.c0, rt12.c0, rt12.c1, vt2.c0, rt12.c2 HAVING (NOT (MAX(rt12.c0))) UNION ALL SELECT ALL vt1.c0, rt12.c0, rt12.c1, vt2.c0, rt12.c2 FROM rt12, vt2, vt1 GROUP BY vt1.c0, rt12.c0, rt12.c1, vt2.c0, rt12.c2 HAVING ((MAX(rt12.c0)) ISNULL);
SELECT ALL vt1.c0, rt12.c0, rt12.c1, vt2.c0, rt12.c2 FROM rt12, vt2, vt1 GROUP BY vt1.c0, rt12.c0, rt12.c1, vt2.c0, rt12.c2;
SELECT ALL vt1.c0, rt12.c0, rt12.c1, vt2.c0, rt12.c2 FROM rt12, vt2, vt1 GROUP BY vt1.c0, rt12.c0, rt12.c1, vt2.c0, rt12.c2 HAVING MAX(rt12.c0) UNION ALL SELECT vt1.c0, rt12.c0, rt12.c1, vt2.c0, rt12.c2 FROM rt12, vt2, vt1 GROUP BY vt1.c0, rt12.c0, rt12.c1, vt2.c0, rt12.c2 HAVING (NOT (MAX(rt12.c0))) UNION ALL SELECT ALL vt1.c0, rt12.c0, rt12.c1, vt2.c0, rt12.c2 FROM rt12, vt2, vt1 GROUP BY vt1.c0, rt12.c0, rt12.c1, vt2.c0, rt12.c2 HAVING ((MAX(rt12.c0)) ISNULL);
SELECT ALL vt1.c0, rt12.c0, rt12.c1, vt2.c0, rt12.c2 FROM rt12, vt2, vt1 GROUP BY vt1.c0, rt12.c0, rt12.c1, vt2.c0, rt12.c2;
SELECT rt12.c0, vt2.c0, rt12.c1, rt12.c2 FROM vt1, vt2, rt12;
SELECT ALL rt12.c0, vt2.c0, rt12.c1, rt12.c2 FROM vt1, vt2, rt12 WHERE (CAST(0.29674604766937196 AS INTEGER)) UNION ALL SELECT rt12.c0, vt2.c0, rt12.c1, rt12.c2 FROM vt1, vt2, rt12 WHERE ((NOT (CAST(0.29674604766937196 AS INTEGER)))) UNION ALL SELECT ALL rt12.c0, vt2.c0, rt12.c1, rt12.c2 FROM vt1, vt2, rt12 WHERE (((CAST(0.29674604766937196 AS INTEGER)) ISNULL));
SELECT rt12.c0, vt2.c0, rt12.c1, rt12.c2 FROM vt1, vt2, rt12;
SELECT DISTINCT * FROM vt1, vt2;
SELECT DISTINCT * FROM vt1, vt2 WHERE (0.6598917230488873) UNION SELECT DISTINCT * FROM vt1, vt2 WHERE ((NOT (0.6598917230488873))) UNION SELECT DISTINCT * FROM vt1, vt2 WHERE (((0.6598917230488873) ISNULL));
SELECT DISTINCT * FROM vt1, vt2;
SELECT rt12.c1 FROM vt2, rt12 FULL OUTER JOIN vt1 ON (- (vt2.c0)) COLLATE BINARY COLLATE BINARY GROUP BY rt12.c1;
SELECT rt12.c1 FROM vt2, rt12 FULL OUTER JOIN vt1 ON (- (vt2.c0)) COLLATE BINARY COLLATE BINARY WHERE (CASE WHEN CASE WHEN rt12.c1 THEN x'' ELSE NULL END THEN rt12.c1 ELSE ((vt2.c0) NOT BETWEEN (NULL) AND (rt12.c0)) END) GROUP BY rt12.c1 UNION SELECT rt12.c1 FROM vt2, rt12 FULL OUTER JOIN vt1 ON (- (vt2.c0)) COLLATE BINARY COLLATE BINARY WHERE ((NOT (CASE WHEN CASE WHEN rt12.c1 THEN x'' ELSE NULL END THEN rt12.c1 ELSE ((vt2.c0) NOT BETWEEN (NULL) AND (rt12.c0)) END))) GROUP BY rt12.c1 UNION SELECT rt12.c1 FROM vt2, rt12 FULL OUTER JOIN vt1 ON (- (vt2.c0)) COLLATE BINARY COLLATE BINARY WHERE (((CASE WHEN CASE WHEN rt12.c1 THEN x'' ELSE NULL END THEN rt12.c1 ELSE ((vt2.c0) NOT BETWEEN (NULL) AND (rt12.c0)) END) ISNULL)) GROUP BY rt12.c1;
SELECT rt12.c1 FROM vt2, rt12 FULL OUTER JOIN vt1 ON (- (vt2.c0)) COLLATE BINARY COLLATE BINARY GROUP BY rt12.c1;
SELECT rt12.c2, vt2.c0, rt12.c1 FROM vt2 CROSS JOIN rt12 ON rt12.c1 CROSS JOIN vt1 ON rt12.c2 GROUP BY rt12.c2, vt2.c0, rt12.c1;
SELECT ALL rt12.c2, vt2.c0, rt12.c1 FROM vt2 CROSS JOIN rt12 ON rt12.c1 CROSS JOIN vt1 ON rt12.c2 GROUP BY rt12.c2, vt2.c0, rt12.c1 HAVING ((TOTAL(SUM(vt2.c0)))>>(CASE WHEN AVG(MAX(rt12.c2)) THEN MAX(rt12.c0) ELSE rt12.c0 END)) UNION ALL SELECT ALL rt12.c2, vt2.c0, rt12.c1 FROM vt2 CROSS JOIN rt12 ON rt12.c1 CROSS JOIN vt1 ON rt12.c2 GROUP BY rt12.c2, vt2.c0, rt12.c1 HAVING (NOT (((TOTAL(SUM(vt2.c0)))>>(CASE WHEN AVG(MAX(rt12.c2)) THEN MAX(rt12.c0) ELSE rt12.c0 END)))) UNION ALL SELECT rt12.c2, vt2.c0, rt12.c1 FROM vt2 CROSS JOIN rt12 ON rt12.c1 CROSS JOIN vt1 ON rt12.c2 GROUP BY rt12.c2, vt2.c0, rt12.c1 HAVING ((((TOTAL(SUM(vt2.c0)))>>(CASE WHEN AVG(MAX(rt12.c2)) THEN MAX(rt12.c0) ELSE rt12.c0 END))) ISNULL);
SELECT ALL rt12.c2 FROM rt12 RIGHT OUTER JOIN vt2 ON NULL;
SELECT ALL rt12.c2 FROM rt12 RIGHT OUTER JOIN vt2 ON NULL WHERE (((((rt12.c1) ISNULL))!=(rt12.c0 COLLATE NOCASE))) UNION ALL SELECT ALL rt12.c2 FROM rt12 RIGHT OUTER JOIN vt2 ON NULL WHERE ((NOT (((((rt12.c1) ISNULL))<>(rt12.c0 COLLATE NOCASE))))) UNION ALL SELECT rt12.c2 FROM rt12 RIGHT OUTER JOIN vt2 ON NULL WHERE (((((((rt12.c1) ISNULL))!=(rt12.c0 COLLATE NOCASE))) ISNULL));
SELECT ALL rt12.c2 FROM rt12 RIGHT OUTER JOIN vt2 ON NULL;
SELECT DISTINCT * FROM vt0, vt1;
SELECT DISTINCT * FROM vt0, vt1 WHERE (-1671307914) UNION SELECT DISTINCT * FROM vt0, vt1 WHERE ((NOT (-1671307914))) UNION SELECT DISTINCT * FROM vt0 NOT INDEXED, vt1 WHERE (((-1671307914) ISNULL));
SELECT DISTINCT * FROM vt0, vt1;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE (((LIKELIHOOD(vt1.c0, 0.45323945043751557))<((vt1.c0 IN ())))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (((LIKELIHOOD(vt1.c0, 0.45323945043751557))<((vt1.c0 IN ())))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE (((((LIKELIHOOD(vt1.c0, 0.45323945043751557))<((vt1.c0 IN ())))) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0, vt0.c0, rt12.c2 FROM rt12, vt1, vt0, vt2 GROUP BY vt1.c0, vt0.c0, rt12.c2;
SELECT vt1.c0, vt0.c0, rt12.c2 FROM rt12, vt1, vt0, vt2 GROUP BY vt1.c0, vt0.c0, rt12.c2 HAVING TOTAL(GROUP_CONCAT(COUNT(vt2.c0))) UNION ALL SELECT ALL vt1.c0, vt0.c0, rt12.c2 FROM rt12, vt1, vt0, vt2 GROUP BY vt1.c0, vt0.c0, rt12.c2 HAVING (NOT (TOTAL(GROUP_CONCAT(COUNT(vt2.c0))))) UNION ALL SELECT vt1.c0, vt0.c0, rt12.c2 FROM rt12, vt1, vt0, vt2 GROUP BY vt1.c0, vt0.c0, rt12.c2 HAVING ((TOTAL(GROUP_CONCAT(COUNT(vt2.c0)))) ISNULL);
SELECT * FROM rt12;
SELECT ALL * FROM rt12 WHERE ((~ ('1391631686' COLLATE RTRIM))) UNION ALL SELECT * FROM rt12 WHERE ((NOT ((~ ('1391631686' COLLATE RTRIM))))) UNION ALL SELECT ALL * FROM rt12 WHERE ((((~ ('1391631686' COLLATE RTRIM))) ISNULL));
SELECT * FROM rt12;
SELECT DISTINCT * FROM rt12, vt2 FULL OUTER JOIN vt1 ON vt2.c0;
SELECT DISTINCT * FROM rt12, vt2 FULL OUTER JOIN vt1 ON vt2.c0 WHERE ((((((((((((rt12.c1, rt12.c2, rt12.c1)) BETWEEN ((vt1.c0, rt12.c1, rt12.c2)) AND ((NULL, vt2.c0, rt12.c2))))OR(((rt12.c1)/(rt12.c2)))))OR(CAST(vt2.c0 AS REAL))))OR(((vt1.c0) IS FALSE))))OR((((vt2.c0))<((rt12.c0)))))) UNION SELECT DISTINCT * FROM rt12, vt2 FULL OUTER JOIN vt1 ON vt2.c0 WHERE ((NOT ((((((((((((rt12.c1, rt12.c2, rt12.c1)) BETWEEN ((vt1.c0, rt12.c1, rt12.c2)) AND ((NULL, vt2.c0, rt12.c2))))OR(((rt12.c1)/(rt12.c2)))))OR(CAST(vt2.c0 AS REAL))))OR(((vt1.c0) IS FALSE))))OR((((vt2.c0))<((rt12.c0)))))))) UNION SELECT DISTINCT * FROM rt12, vt2 FULL OUTER JOIN vt1 ON vt2.c0 WHERE ((((((((((((((rt12.c1, rt12.c2, rt12.c1)) BETWEEN ((vt1.c0, rt12.c1, rt12.c2)) AND ((NULL, vt2.c0, rt12.c2))))OR(((rt12.c1)/(rt12.c2)))))OR(CAST(vt2.c0 AS REAL))))OR(((vt1.c0) IS FALSE))))OR((((vt2.c0))<((rt12.c0)))))) ISNULL));
SELECT DISTINCT * FROM rt12, vt2 FULL OUTER JOIN vt1 ON vt2.c0;
SELECT ALL rt12.c2, vt0.c1, rt12.c0, vt2.c0, vt0.c0 FROM vt0, rt12 NATURAL JOIN vt2 GROUP BY rt12.c2, vt0.c1, rt12.c0, vt2.c0, vt0.c0;
SELECT rt12.c2, vt0.c1, rt12.c0, vt2.c0, vt0.c0 FROM vt0, rt12 NATURAL JOIN vt2 WHERE (CASE WHEN (vt0.c1 IN ()) THEN (((vt0.c1)) NOT BETWEEN ((rt12.c1)) AND ((rt12.c0))) WHEN (rt12.c0 IN ()) THEN (((rt12.c2)) BETWEEN ((vt0.c0)) AND ((vt0.c1))) WHEN ((((((((((((x'')AND(vt0.c1)))AND(rt12.c2)))OR(0.6979957480176251)))OR(rt12.c0)))OR('1053956897')))AND(vt0.c0)) THEN vt0.c1 ELSE (+ (vt0.c0)) END) GROUP BY rt12.c2, vt0.c1, rt12.c0, vt2.c0, vt0.c0 UNION SELECT rt12.c2, vt0.c1, rt12.c0, vt2.c0, vt0.c0 FROM vt0, rt12 NATURAL JOIN vt2 WHERE ((NOT (CASE WHEN (vt0.c1 IN ()) THEN (((vt0.c1)) NOT BETWEEN ((rt12.c1)) AND ((rt12.c0))) WHEN (rt12.c0 IN ()) THEN (((rt12.c2)) BETWEEN ((vt0.c0)) AND ((vt0.c1))) WHEN ((((((((((((x'')AND(vt0.c1)))AND(rt12.c2)))OR(0.6979957480176251)))OR(rt12.c0)))OR('1053956897')))AND(vt0.c0)) THEN vt0.c1 ELSE (+ (vt0.c0)) END))) GROUP BY rt12.c2, vt0.c1, rt12.c0, vt2.c0, vt0.c0 UNION SELECT ALL rt12.c2, vt0.c1, rt12.c0, vt2.c0, vt0.c0 FROM vt0, rt12 NATURAL JOIN vt2 WHERE (((CASE WHEN (vt0.c1 IN ()) THEN (((vt0.c1)) NOT BETWEEN ((rt12.c1)) AND ((rt12.c0))) WHEN (rt12.c0 IN ()) THEN (((rt12.c2)) BETWEEN ((vt0.c0)) AND ((vt0.c1))) WHEN ((((((((((((x'')AND(vt0.c1)))AND(rt12.c2)))OR(0.6979957480176251)))OR(rt12.c0)))OR('1053956897')))AND(vt0.c0)) THEN vt0.c1 ELSE (+ (vt0.c0)) END) ISNULL)) GROUP BY rt12.c2, vt0.c1, rt12.c0, vt2.c0, vt0.c0;
SELECT ALL rt12.c2, vt0.c1, rt12.c0, vt2.c0, vt0.c0 FROM vt0, rt12 NATURAL JOIN vt2 GROUP BY rt12.c2, vt0.c1, rt12.c0, vt2.c0, vt0.c0;
SELECT rt12.c2, rt12.c1 FROM vt0, vt1, rt12 GROUP BY rt12.c2, rt12.c1;
SELECT ALL rt12.c2, rt12.c1 FROM vt0, vt1, rt12 GROUP BY rt12.c2, rt12.c1 HAVING NULL UNION ALL SELECT rt12.c2, rt12.c1 FROM vt0, vt1, rt12 GROUP BY rt12.c2, rt12.c1 HAVING (NOT (NULL)) UNION ALL SELECT rt12.c2, rt12.c1 FROM vt0, vt1, rt12 GROUP BY rt12.c2, rt12.c1 HAVING ((NULL) ISNULL);
SELECT rt12.c2, rt12.c1 FROM vt0, vt1, rt12 GROUP BY rt12.c2, rt12.c1;
SELECT ALL rt12.c2, rt12.c1 FROM vt0, vt1, rt12 GROUP BY rt12.c2, rt12.c1 HAVING NULL UNION ALL SELECT rt12.c2, rt12.c1 FROM vt0, vt1, rt12 GROUP BY rt12.c2, rt12.c1 HAVING (NOT (NULL)) UNION ALL SELECT rt12.c2, rt12.c1 FROM vt0, vt1, rt12 GROUP BY rt12.c2, rt12.c1 HAVING ((NULL) ISNULL);
SELECT rt12.c2, rt12.c1 FROM vt0, vt1, rt12 GROUP BY rt12.c2, rt12.c1;
SELECT ALL * FROM rt12;
SELECT * FROM rt12 WHERE ((CASE rt12.c1  WHEN rt12.c0 THEN rt12.c0 ELSE rt12.c0 END IN ())) UNION ALL SELECT ALL * FROM rt12 WHERE ((NOT ((CASE rt12.c1  WHEN rt12.c0 THEN rt12.c0 ELSE rt12.c0 END IN ())))) UNION ALL SELECT ALL * FROM rt12 WHERE ((((CASE rt12.c1  WHEN rt12.c0 THEN rt12.c0 ELSE rt12.c0 END IN ())) ISNULL));
SELECT ALL * FROM rt12;
SELECT DISTINCT * FROM rt12, vt2, vt1 FULL OUTER JOIN vt0 ON ((CAST(rt12.c2 AS INTEGER)) BETWEEN (x'') AND (((((rt12.c2)OR(vt1.c0)))AND(vt2.c0))));
SELECT DISTINCT * FROM rt12, vt2, vt1 FULL OUTER JOIN vt0 ON ((CAST(rt12.c2 AS INTEGER)) BETWEEN (x'') AND (((((rt12.c2)OR(vt1.c0)))AND(vt2.c0)))) WHERE (((CAST(rt12.c1 AS NUMERIC)) BETWEEN (CAST(vt2.c0 AS NUMERIC)) AND (((((rt12.c1)AND(vt0.c0)))OR(vt1.c0))))) UNION SELECT DISTINCT * FROM rt12, vt2, vt1 FULL OUTER JOIN vt0 ON ((CAST(rt12.c2 AS INTEGER)) BETWEEN (x'') AND (((((rt12.c2)OR(vt1.c0)))AND(vt2.c0)))) WHERE ((NOT (((CAST(rt12.c1 AS NUMERIC)) BETWEEN (CAST(vt2.c0 AS NUMERIC)) AND (((((rt12.c1)AND(vt0.c0)))OR(vt1.c0))))))) UNION SELECT DISTINCT * FROM rt12, vt2, vt1 FULL OUTER JOIN vt0 ON ((CAST(rt12.c2 AS INTEGER)) BETWEEN (x'') AND (((((rt12.c2)OR(vt1.c0)))AND(vt2.c0)))) WHERE (((((CAST(rt12.c1 AS NUMERIC)) BETWEEN (CAST(vt2.c0 AS NUMERIC)) AND (((((rt12.c1)AND(vt0.c0)))OR(vt1.c0))))) ISNULL));
SELECT DISTINCT * FROM rt12, vt2, vt1 FULL OUTER JOIN vt0 ON ((CAST(rt12.c2 AS INTEGER)) BETWEEN (x'') AND (((((rt12.c2)OR(vt1.c0)))AND(vt2.c0))));
SELECT ALL vt0.c0, rt12.c0, rt12.c1, rt12.c2 FROM vt1, vt2, vt0 LEFT OUTER JOIN rt12 ON CAST(((rt12.c2) BETWEEN (rt12.c1) AND (rt12.c2)) AS REAL) GROUP BY vt0.c0, rt12.c0, rt12.c1, rt12.c2;
SELECT ALL vt0.c0, rt12.c0, rt12.c1, rt12.c2 FROM vt1, vt2, vt0 NOT INDEXED LEFT OUTER JOIN rt12 ON CAST(((rt12.c2) BETWEEN (rt12.c1) AND (rt12.c2)) AS REAL) WHERE (CASE rt12.c2 COLLATE RTRIM  WHEN '-30411137' COLLATE RTRIM THEN rt12.c0 COLLATE RTRIM WHEN CASE WHEN vt0.c1 THEN vt0.c1 WHEN rt12.c2 THEN vt0.c1 WHEN rt12.c1 THEN vt0.c1 WHEN rt12.c0 THEN rt12.c0 WHEN vt1.c0 THEN rt12.c1 ELSE rt12.c2 END THEN ((rt12.c2) NOT BETWEEN (vt0.c1) AND (vt2.c0)) WHEN ((vt2.c0) NOT BETWEEN (rt12.c0) AND (rt12.c0)) THEN 0X3961f8ff ELSE (((rt12.c2))>=((vt2.c0))) END) GROUP BY vt0.c0, rt12.c0, rt12.c1, rt12.c2 UNION SELECT vt0.c0, rt12.c0, rt12.c1, rt12.c2 FROM vt1, vt2, vt0 LEFT OUTER JOIN rt12 ON CAST(((rt12.c2) BETWEEN (rt12.c1) AND (rt12.c2)) AS REAL) WHERE ((NOT (CASE rt12.c2 COLLATE RTRIM  WHEN '-30411137' COLLATE RTRIM THEN rt12.c0 COLLATE RTRIM WHEN CASE WHEN vt0.c1 THEN vt0.c1 WHEN rt12.c2 THEN vt0.c1 WHEN rt12.c1 THEN vt0.c1 WHEN rt12.c0 THEN rt12.c0 WHEN vt1.c0 THEN rt12.c1 ELSE rt12.c2 END THEN ((rt12.c2) NOT BETWEEN (vt0.c1) AND (vt2.c0)) WHEN ((vt2.c0) NOT BETWEEN (rt12.c0) AND (rt12.c0)) THEN 0x3961f8ff ELSE (((rt12.c2))>=((vt2.c0))) END))) GROUP BY vt0.c0, rt12.c0, rt12.c1, rt12.c2 UNION SELECT ALL vt0.c0, rt12.c0, rt12.c1, rt12.c2 FROM vt1, vt2, vt0 LEFT OUTER JOIN rt12 ON CAST(((rt12.c2) BETWEEN (rt12.c1) AND (rt12.c2)) AS REAL) WHERE (((CASE rt12.c2 COLLATE RTRIM  WHEN '-30411137' COLLATE RTRIM THEN rt12.c0 COLLATE RTRIM WHEN CASE WHEN vt0.c1 THEN vt0.c1 WHEN rt12.c2 THEN vt0.c1 WHEN rt12.c1 THEN vt0.c1 WHEN rt12.c0 THEN rt12.c0 WHEN vt1.c0 THEN rt12.c1 ELSE rt12.c2 END THEN ((rt12.c2) NOT BETWEEN (vt0.c1) AND (vt2.c0)) WHEN ((vt2.c0) NOT BETWEEN (rt12.c0) AND (rt12.c0)) THEN 0x3961f8ff ELSE (((rt12.c2))>=((vt2.c0))) END) ISNULL)) GROUP BY vt0.c0, rt12.c0, rt12.c1, rt12.c2;
SELECT ALL vt0.c0, rt12.c0, rt12.c1, rt12.c2 FROM vt1, vt2, vt0 LEFT OUTER JOIN rt12 ON CAST(((rt12.c2) BETWEEN (rt12.c1) AND (rt12.c2)) AS REAL) GROUP BY vt0.c0, rt12.c0, rt12.c1, rt12.c2;
SELECT rt12.c1, vt0.c1, rt12.c2 FROM rt12, vt2 NATURAL JOIN vt0 GROUP BY rt12.c1, vt0.c1, rt12.c2;
SELECT rt12.c1, vt0.c1, rt12.c2 FROM rt12, vt2 NATURAL JOIN vt0 GROUP BY rt12.c1, vt0.c1, rt12.c2 HAVING GROUP_CONCAT(COUNT('0.666706198698984')) UNION ALL SELECT rt12.c1, vt0.c1, rt12.c2 FROM rt12, vt2 NATURAL JOIN vt0 GROUP BY rt12.c1, vt0.c1, rt12.c2 HAVING (NOT (GROUP_CONCAT(COUNT('0.666706198698984')))) UNION ALL SELECT rt12.c1, vt0.c1, rt12.c2 FROM rt12, vt2 NATURAL JOIN vt0 GROUP BY rt12.c1, vt0.c1, rt12.c2 HAVING ((GROUP_CONCAT(COUNT('0.666706198698984'))) ISNULL);
SELECT MIN((((~ (rt12.c1))) BETWEEN (COALESCE(rt12.c2, x'0e89')) AND (((rt12.c2) IS FALSE)))) FROM rt12;
SELECT rt12.c0 FROM rt12, vt2;
SELECT rt12.c0 FROM rt12, vt2 WHERE (IFNULL(DISTINCT x'a19d', (((rt12.c0)) BETWEEN ((vt2.c0)) AND ((rt12.c1))))) UNION ALL SELECT rt12.c0 FROM rt12, vt2 WHERE ((NOT (IFNULL(DISTINCT x'a19d', (((rt12.c0)) BETWEEN ((vt2.c0)) AND ((rt12.c1))))))) UNION ALL SELECT rt12.c0 FROM rt12 NOT INDEXED, vt2 WHERE (((IFNULL(DISTINCT x'a19d', (((rt12.c0)) BETWEEN ((vt2.c0)) AND ((rt12.c1))))) ISNULL));
SELECT rt12.c0 FROM rt12, vt2;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (((vt1.c0)*((('-706833161') NOT BETWEEN (vt1.c0) AND ('-830925142'))))) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (((vt1.c0)*((('-706833161') NOT BETWEEN (vt1.c0) AND ('-830925142'))))))) UNION SELECT DISTINCT * FROM vt1 WHERE (((((vt1.c0)*((('-706833161') NOT BETWEEN (vt1.c0) AND ('-830925142'))))) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT ALL vt0.c1, vt0.c0 FROM vt2, vt0 GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt2, vt0 WHERE ((((((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0)))) NOT BETWEEN ((- (vt0.c0))) AND (((-681044241)/(vt2.c0))))) GROUP BY vt0.c1, vt0.c0 UNION SELECT ALL vt0.c1, vt0.c0 FROM vt2, vt0 WHERE ((NOT ((((((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0)))) NOT BETWEEN ((- (vt0.c0))) AND (((-681044241)/(vt2.c0))))))) GROUP BY vt0.c1, vt0.c0 UNION SELECT ALL vt0.c1, vt0.c0 FROM vt2, vt0 NOT INDEXED WHERE ((((((((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0)))) NOT BETWEEN ((- (vt0.c0))) AND (((-681044241)/(vt2.c0))))) ISNULL)) GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM vt2, vt0 GROUP BY vt0.c1, vt0.c0;
SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING ((((((((MIN(GROUP_CONCAT(SUM(MAX(GROUP_CONCAT(MAX(TOTAL(vt2.c0))))))))OR(COUNT(*))))OR(CASE WHEN MAX(vt2.c0) THEN vt2.c0 WHEN vt2.c0 THEN vt2.c0 WHEN vt2.c0 THEN AVG(AVG(SUM(vt2.c0))) END)))AND(((vt2.c0) NOT BETWEEN (TOTAL(vt2.c0)) AND (MIN(COUNT(*)))))))OR(SUM(COUNT(vt2.c0)))) UNION ALL SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING (NOT (((((((((MIN(GROUP_CONCAT(SUM(MAX(GROUP_CONCAT(MAX(TOTAL(vt2.c0))))))))OR(COUNT(*))))OR(CASE WHEN MAX(vt2.c0) THEN vt2.c0 WHEN vt2.c0 THEN vt2.c0 WHEN vt2.c0 THEN AVG(AVG(SUM(vt2.c0))) END)))AND(((vt2.c0) NOT BETWEEN (TOTAL(vt2.c0)) AND (MIN(COUNT(*)))))))OR(SUM(COUNT(vt2.c0)))))) UNION ALL SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING ((((((((((MIN(GROUP_CONCAT(SUM(MAX(GROUP_CONCAT(MAX(TOTAL(vt2.c0))))))))OR(COUNT(*))))OR(CASE WHEN MAX(vt2.c0) THEN vt2.c0 WHEN vt2.c0 THEN vt2.c0 WHEN vt2.c0 THEN AVG(AVG(SUM(vt2.c0))) END)))AND(((vt2.c0) NOT BETWEEN (TOTAL(vt2.c0)) AND (MIN(COUNT(*)))))))OR(SUM(COUNT(vt2.c0))))) ISNULL);
SELECT ALL * FROM rt12;
SELECT * FROM rt12 WHERE ((NOT (TYPEOF(rt12.c2)))) UNION ALL SELECT * FROM rt12 WHERE ((NOT ((NOT (TYPEOF(rt12.c2)))))) UNION ALL SELECT * FROM rt12 WHERE ((((NOT (TYPEOF(rt12.c2)))) ISNULL));
SELECT ALL * FROM rt12;
SELECT DISTINCT * FROM vt1, vt0, rt12;
SELECT DISTINCT * FROM vt1, vt0, rt12 WHERE ((x'' COLLATE RTRIM IN ())) UNION SELECT DISTINCT * FROM vt1, vt0, rt12 WHERE ((NOT ((x'' COLLATE RTRIM IN ())))) UNION SELECT DISTINCT * FROM vt1, vt0, rt12 WHERE ((((x'' COLLATE RTRIM IN ())) ISNULL));
SELECT DISTINCT * FROM vt1, vt0, rt12;
SELECT ALL rt12.c0, vt0.c1, vt1.c0, vt0.c0, rt12.c2, rt12.c1, vt2.c0 FROM vt2, rt12, vt1, vt0 GROUP BY rt12.c0, vt0.c1, vt1.c0, vt0.c0, rt12.c2, rt12.c1, vt2.c0;
SELECT rt12.c0, vt0.c1, vt1.c0, vt0.c0, rt12.c2, rt12.c1, vt2.c0 FROM vt2, rt12, vt1, vt0 WHERE (CAST(((vt2.c0) BETWEEN (1.295851351E9) AND (rt12.c0)) AS REAL)) GROUP BY rt12.c0, vt0.c1, vt1.c0, vt0.c0, rt12.c2, rt12.c1, vt2.c0 UNION SELECT rt12.c0, vt0.c1, vt1.c0, vt0.c0, rt12.c2, rt12.c1, vt2.c0 FROM vt2, rt12, vt1, vt0 WHERE ((NOT (CAST(((vt2.c0) BETWEEN (1.295851351E9) AND (rt12.c0)) AS REAL)))) GROUP BY rt12.c0, vt0.c1, vt1.c0, vt0.c0, rt12.c2, rt12.c1, vt2.c0 UNION SELECT ALL rt12.c0, vt0.c1, vt1.c0, vt0.c0, rt12.c2, rt12.c1, vt2.c0 FROM vt2, rt12, vt1, vt0 WHERE (((CAST(((vt2.c0) BETWEEN (1.295851351E9) AND (rt12.c0)) AS REAL)) ISNULL)) GROUP BY rt12.c0, vt0.c1, vt1.c0, vt0.c0, rt12.c2, rt12.c1, vt2.c0;
SELECT ALL rt12.c0, vt0.c1, vt1.c0, vt0.c0, rt12.c2, rt12.c1, vt2.c0 FROM vt2, rt12, vt1, vt0 GROUP BY rt12.c0, vt0.c1, vt1.c0, vt0.c0, rt12.c2, rt12.c1, vt2.c0;
SELECT vt0.c0 FROM vt0, vt1 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0, vt1 GROUP BY vt0.c0 HAVING COUNT(MAX(vt1.c0)) UNION ALL SELECT vt0.c0 FROM vt0, vt1 GROUP BY vt0.c0 HAVING (NOT (COUNT(MAX(vt1.c0)))) UNION ALL SELECT ALL vt0.c0 FROM vt0, vt1 GROUP BY vt0.c0 HAVING ((COUNT(MAX(vt1.c0))) ISNULL);
SELECT * FROM vt1 INNER JOIN rt12 ON (((vt1.c0) NOT BETWEEN (vt0.c1) AND (rt12.c1)) IN ()) CROSS JOIN vt2 ON (+ (((((rt12.c0)AND(rt12.c0)))OR(rt12.c1)))) RIGHT OUTER JOIN vt0 ON ((vt0.c0)AND(((vt1.c0)|(rt12.c0))));
SELECT * FROM vt1 INNER JOIN rt12 ON (((vt1.c0) NOT BETWEEN (vt0.c1) AND (rt12.c1)) IN ()) CROSS JOIN vt2 ON (+ (((((rt12.c0)AND(rt12.c0)))OR(rt12.c1)))) RIGHT OUTER JOIN vt0 ON ((vt0.c0)AND(((vt1.c0)|(rt12.c0)))) WHERE (rt12.c0) UNION ALL SELECT ALL * FROM vt1 INNER JOIN rt12 ON (((vt1.c0) NOT BETWEEN (vt0.c1) AND (rt12.c1)) IN ()) CROSS JOIN vt2 ON (+ (((((rt12.c0)AND(rt12.c0)))OR(rt12.c1)))) RIGHT OUTER JOIN vt0 ON ((vt0.c0)AND(((vt1.c0)|(rt12.c0)))) WHERE ((NOT (rt12.c0))) UNION ALL SELECT ALL * FROM vt1 INNER JOIN rt12 ON (((vt1.c0) NOT BETWEEN (vt0.c1) AND (rt12.c1)) IN ()) CROSS JOIN vt2 ON (+ (((((rt12.c0)AND(rt12.c0)))OR(rt12.c1)))) RIGHT OUTER JOIN vt0 ON ((vt0.c0)AND(((vt1.c0)|(rt12.c0)))) WHERE (((rt12.c0) ISNULL));
SELECT * FROM vt1 INNER JOIN rt12 ON (((vt1.c0) NOT BETWEEN (vt0.c1) AND (rt12.c1)) IN ()) CROSS JOIN vt2 ON (+ (((((rt12.c0)AND(rt12.c0)))OR(rt12.c1)))) RIGHT OUTER JOIN vt0 ON ((vt0.c0)AND(((vt1.c0)|(rt12.c0))));
SELECT DISTINCT * FROM rt12, vt2;
SELECT DISTINCT * FROM rt12, vt2 WHERE ('') UNION SELECT DISTINCT * FROM rt12, vt2 WHERE ((NOT (''))) UNION SELECT DISTINCT * FROM rt12, vt2 WHERE ((('') ISNULL));
SELECT DISTINCT * FROM rt12, vt2;
SELECT ALL vt2.c0, vt1.c0 FROM vt1, vt2 GROUP BY vt2.c0, vt1.c0;
SELECT ALL vt2.c0, vt1.c0 FROM vt1, vt2 WHERE ((((vt2.c0 IN ()))/((vt1.c0 IN (vt1.c0, vt2.c0))))) GROUP BY vt2.c0, vt1.c0 UNION SELECT vt2.c0, vt1.c0 FROM vt1, vt2 WHERE ((NOT ((((vt2.c0 IN ()))/((vt1.c0 IN (vt1.c0, vt2.c0))))))) GROUP BY vt2.c0, vt1.c0 UNION SELECT vt2.c0, vt1.c0 FROM vt1, vt2 WHERE ((((((vt2.c0 IN ()))/((vt1.c0 IN (vt1.c0, vt2.c0))))) ISNULL)) GROUP BY vt2.c0, vt1.c0;
SELECT ALL vt2.c0, vt1.c0 FROM vt1, vt2 GROUP BY vt2.c0, vt1.c0;
SELECT rt12.c1, vt1.c0, vt0.c1, vt0.c0, rt12.c0, vt2.c0, rt12.c2 FROM vt0, vt2, rt12, vt1 GROUP BY rt12.c1, vt1.c0, vt0.c1, vt0.c0, rt12.c0, vt2.c0, rt12.c2;
SELECT ALL rt12.c1, vt1.c0, vt0.c1, vt0.c0, rt12.c0, vt2.c0, rt12.c2 FROM vt0, vt2, rt12, vt1 GROUP BY rt12.c1, vt1.c0, vt0.c1, vt0.c0, rt12.c0, vt2.c0, rt12.c2 HAVING MAX(MAX(vt1.c0)) UNION ALL SELECT rt12.c1, vt1.c0, vt0.c1, vt0.c0, rt12.c0, vt2.c0, rt12.c2 FROM vt0, vt2, rt12, vt1 GROUP BY rt12.c1, vt1.c0, vt0.c1, vt0.c0, rt12.c0, vt2.c0, rt12.c2 HAVING (NOT (MAX(MAX(vt1.c0)))) UNION ALL SELECT rt12.c1, vt1.c0, vt0.c1, vt0.c0, rt12.c0, vt2.c0, rt12.c2 FROM vt0, vt2, rt12, vt1 GROUP BY rt12.c1, vt1.c0, vt0.c1, vt0.c0, rt12.c0, vt2.c0, rt12.c2 HAVING ((MAX(MAX(vt1.c0))) ISNULL);
SELECT ALL * FROM vt2;
SELECT ALL * FROM vt2 WHERE (0.498553370723522) UNION ALL SELECT * FROM vt2 WHERE ((NOT (0.498553370723522))) UNION ALL SELECT ALL * FROM vt2 WHERE (((0.498553370723522) ISNULL));
SELECT ALL * FROM vt2;
SELECT DISTINCT vt0.c1, rt12.c0, vt0.c0 FROM vt0, rt12;
SELECT DISTINCT vt0.c1, rt12.c0, vt0.c0 FROM vt0, rt12 WHERE (((((vt0.c1)IS('8M?☶O'))) NOTNULL)) UNION SELECT DISTINCT vt0.c1, rt12.c0, vt0.c0 FROM vt0, rt12 WHERE ((NOT (((((vt0.c1)IS('8M?☶O'))) NOTNULL)))) UNION SELECT DISTINCT vt0.c1, rt12.c0, vt0.c0 FROM vt0, rt12 WHERE (((((((vt0.c1)IS('8M?☶O'))) NOTNULL)) ISNULL));
SELECT DISTINCT vt0.c1, rt12.c0, vt0.c0 FROM vt0, rt12;
SELECT rt12.c0 FROM rt12, vt1 GROUP BY rt12.c0;
SELECT rt12.c0 FROM rt12, vt1 WHERE (((((rt12.c1)/(rt12.c0))) IS TRUE)) GROUP BY rt12.c0 UNION SELECT ALL rt12.c0 FROM rt12, vt1 WHERE ((NOT (((((rt12.c1)/(rt12.c0))) IS TRUE)))) GROUP BY rt12.c0 UNION SELECT rt12.c0 FROM rt12, vt1 WHERE (((((((rt12.c1)/(rt12.c0))) IS TRUE)) ISNULL)) GROUP BY rt12.c0;
SELECT rt12.c0 FROM rt12, vt1 GROUP BY rt12.c0;
SELECT rt12.c1, vt0.c1, rt12.c0 FROM rt12, vt0 GROUP BY rt12.c1, vt0.c1, rt12.c0;
SELECT rt12.c1, vt0.c1, rt12.c0 FROM rt12, vt0 GROUP BY rt12.c1, vt0.c1, rt12.c0 HAVING COUNT(*) UNION ALL SELECT rt12.c1, vt0.c1, rt12.c0 FROM rt12, vt0 GROUP BY rt12.c1, vt0.c1, rt12.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt12.c1, vt0.c1, rt12.c0 FROM rt12, vt0 GROUP BY rt12.c1, vt0.c1, rt12.c0 HAVING ((COUNT(*)) ISNULL);
SELECT rt12.c1, vt0.c1, rt12.c0 FROM rt12, vt0 GROUP BY rt12.c1, vt0.c1, rt12.c0;
SELECT rt12.c1, vt0.c1, rt12.c0 FROM rt12, vt0 GROUP BY rt12.c1, vt0.c1, rt12.c0 HAVING COUNT(*) UNION ALL SELECT rt12.c1, vt0.c1, rt12.c0 FROM rt12, vt0 GROUP BY rt12.c1, vt0.c1, rt12.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt12.c1, vt0.c1, rt12.c0 FROM rt12, vt0 GROUP BY rt12.c1, vt0.c1, rt12.c0 HAVING ((COUNT(*)) ISNULL);
SELECT rt12.c1, vt0.c1, rt12.c0 FROM rt12, vt0 GROUP BY rt12.c1, vt0.c1, rt12.c0;
SELECT ALL vt0.c1, vt1.c0, vt2.c0, rt12.c0, vt0.c0, rt12.c1 FROM vt2 FULL OUTER JOIN vt1 ON 1.056191779E9 RIGHT OUTER JOIN rt12 ON CAST(((((((((vt1.c0)AND(rt12.c2)))AND(vt0.c0)))OR(vt2.c0)))AND(rt12.c2)) AS TEXT) RIGHT OUTER JOIN vt0 ON ((((((rt12.c2)OR(vt1.c0)))AND('?lJ')))AND((~ (vt2.c0))));
SELECT DISTINCT vt0.c1, rt12.c0, rt12.c2, vt0.c0, vt1.c0 FROM vt1 LEFT OUTER JOIN vt2 ON ((CAST(vt0.c1 AS INTEGER))||((+ (rt12.c2)))) LEFT OUTER JOIN rt12 ON rt12.c0 LEFT OUTER JOIN vt0 ON (((((~ (x'')))AND((((vt1.c0))<=((vt0.c1))))))AND(((vt2.c0)=(vt1.c0))));
SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT ALL vt2.c0 FROM vt2 WHERE (CAST(vt2.c0 AS TEXT)) GROUP BY vt2.c0 UNION SELECT vt2.c0 FROM vt2 WHERE ((NOT (CAST(vt2.c0 AS TEXT)))) GROUP BY vt2.c0 UNION SELECT ALL vt2.c0 FROM vt2 WHERE (((CAST(vt2.c0 AS TEXT)) ISNULL)) GROUP BY vt2.c0;
SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING (((((MAX(SUM(vt0.c0)), vt0.c0, vt0.c1)) BETWEEN ((vt0.c0, vt0.c1, COUNT(*))) AND ((vt0.c0, COUNT(vt0.c1), COUNT(MAX(MAX(vt0.c0)))))))<=(vt0.c0)) UNION ALL SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING (NOT ((((((MAX(SUM(vt0.c0)), vt0.c0, vt0.c1)) BETWEEN ((vt0.c0, vt0.c1, COUNT(*))) AND ((vt0.c0, COUNT(vt0.c1), COUNT(MAX(MAX(vt0.c0)))))))<=(vt0.c0)))) UNION ALL SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING (((((((MAX(SUM(vt0.c0)), vt0.c0, vt0.c1)) BETWEEN ((vt0.c0, vt0.c1, COUNT(*))) AND ((vt0.c0, COUNT(vt0.c1), COUNT(MAX(MAX(vt0.c0)))))))<=(vt0.c0))) ISNULL);
SELECT ALL * FROM vt2 CROSS JOIN rt12 ON (vt0.c0 IN ()) COLLATE BINARY LEFT OUTER JOIN vt1 ON 1.029681206E9 FULL OUTER JOIN vt0 ON ((NULL)IS NOT(rt12.c2)) COLLATE NOCASE;
SELECT * FROM vt2 CROSS JOIN rt12 ON (vt0.c0 IN ()) COLLATE BINARY LEFT OUTER JOIN vt1 ON 1.029681206E9 FULL OUTER JOIN vt0 ON ((NULL)IS NOT(rt12.c2)) COLLATE NOCASE WHERE ((NOT (((vt1.c0)IS NOT(vt0.c0))))) UNION ALL SELECT * FROM vt2 CROSS JOIN rt12 ON (vt0.c0 IN ()) COLLATE BINARY LEFT OUTER JOIN vt1 ON 1.029681206E9 FULL OUTER JOIN vt0 ON ((NULL)IS NOT(rt12.c2)) COLLATE NOCASE WHERE ((NOT ((NOT (((vt1.c0)IS NOT(vt0.c0))))))) UNION ALL SELECT * FROM vt2 CROSS JOIN rt12 ON (vt0.c0 IN ()) COLLATE BINARY LEFT OUTER JOIN vt1 ON 1.029681206E9 FULL OUTER JOIN vt0 ON ((NULL)IS NOT(rt12.c2)) COLLATE NOCASE WHERE ((((NOT (((vt1.c0)IS NOT(vt0.c0))))) ISNULL));
SELECT ALL * FROM vt2 CROSS JOIN rt12 ON (vt0.c0 IN ()) COLLATE BINARY LEFT OUTER JOIN vt1 ON 1.029681206E9 FULL OUTER JOIN vt0 ON ((NULL)IS NOT(rt12.c2)) COLLATE NOCASE;
SELECT DISTINCT * FROM vt1, vt0, vt2 INNER JOIN rt12 ON CAST((NOT (vt0.c0)) AS REAL);
SELECT DISTINCT * FROM vt1, vt0, vt2 INNER JOIN rt12 ON CAST((NOT (vt0.c0)) AS REAL) WHERE ((((((vt0.c0, 'E灏祣', vt0.c1)) NOT BETWEEN ((vt1.c0, vt2.c0, rt12.c2)) AND (('962722047', rt12.c1, vt0.c1)))) NOT BETWEEN (0.3274310031536797) AND ((NOT (rt12.c1))))) UNION SELECT DISTINCT * FROM vt1, vt0, vt2 INNER JOIN rt12 ON CAST((NOT (vt0.c0)) AS REAL) WHERE ((NOT ((((((vt0.c0, 'E灏祣', vt0.c1)) NOT BETWEEN ((vt1.c0, vt2.c0, rt12.c2)) AND (('962722047', rt12.c1, vt0.c1)))) NOT BETWEEN (0.3274310031536797) AND ((NOT (rt12.c1))))))) UNION SELECT DISTINCT * FROM vt1, vt0, vt2 INNER JOIN rt12 ON CAST((NOT (vt0.c0)) AS REAL) WHERE ((((((((vt0.c0, 'E灏祣', vt0.c1)) NOT BETWEEN ((vt1.c0, vt2.c0, rt12.c2)) AND (('962722047', rt12.c1, vt0.c1)))) NOT BETWEEN (0.3274310031536797) AND ((NOT (rt12.c1))))) ISNULL));
SELECT DISTINCT * FROM vt1, vt0, vt2 INNER JOIN rt12 ON CAST((NOT (vt0.c0)) AS REAL);
SELECT ALL vt1.c0, vt0.c1, rt12.c2, vt2.c0, vt0.c0, rt12.c1 FROM vt2, rt12, vt1, vt0 GROUP BY vt1.c0, vt0.c1, rt12.c2, vt2.c0, vt0.c0, rt12.c1;
SELECT vt1.c0, vt0.c1, rt12.c2, vt2.c0, vt0.c0, rt12.c1 FROM vt2, rt12, vt1, vt0 WHERE (CASE WHEN (- (vt0.c1)) THEN (vt0.c1 IN ()) END) GROUP BY vt1.c0, vt0.c1, rt12.c2, vt2.c0, vt0.c0, rt12.c1 UNION SELECT vt1.c0, vt0.c1, rt12.c2, vt2.c0, vt0.c0, rt12.c1 FROM vt2, rt12, vt1, vt0 WHERE ((NOT (CASE WHEN (- (vt0.c1)) THEN (vt0.c1 IN ()) END))) GROUP BY vt1.c0, vt0.c1, rt12.c2, vt2.c0, vt0.c0, rt12.c1 UNION SELECT vt1.c0, vt0.c1, rt12.c2, vt2.c0, vt0.c0, rt12.c1 FROM vt2, rt12, vt1, vt0 WHERE (((CASE WHEN (- (vt0.c1)) THEN (vt0.c1 IN ()) END) ISNULL)) GROUP BY vt1.c0, vt0.c1, rt12.c2, vt2.c0, vt0.c0, rt12.c1;
SELECT ALL vt1.c0, vt0.c1, rt12.c2, vt2.c0, vt0.c0, rt12.c1 FROM vt2, rt12, vt1, vt0 GROUP BY vt1.c0, vt0.c1, rt12.c2, vt2.c0, vt0.c0, rt12.c1;
SELECT vt0.c1, rt12.c1, rt12.c0, vt0.c0, rt12.c2 FROM rt12 RIGHT OUTER JOIN vt0 ON vt0.c1 LEFT OUTER JOIN vt2 ON (+ (((((((((vt0.c1)AND(rt12.c2)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c1)))) GROUP BY vt0.c1, rt12.c1, rt12.c0, vt0.c0, rt12.c2;
SELECT ALL vt0.c1, rt12.c1, rt12.c0, vt0.c0, rt12.c2 FROM rt12 RIGHT OUTER JOIN vt0 ON vt0.c1 LEFT OUTER JOIN vt2 ON (+ (((((((((vt0.c1)AND(rt12.c2)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c1)))) GROUP BY vt0.c1, rt12.c1, rt12.c0, vt0.c0, rt12.c2 HAVING (((AVG(vt2.c0)))>((MIN(COUNT(*))))) UNION ALL SELECT vt0.c1, rt12.c1, rt12.c0, vt0.c0, rt12.c2 FROM rt12 RIGHT OUTER JOIN vt0 ON vt0.c1 LEFT OUTER JOIN vt2 ON (+ (((((((((vt0.c1)AND(rt12.c2)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c1)))) GROUP BY vt0.c1, rt12.c1, rt12.c0, vt0.c0, rt12.c2 HAVING (NOT ((((AVG(vt2.c0)))>((MIN(COUNT(*))))))) UNION ALL SELECT ALL vt0.c1, rt12.c1, rt12.c0, vt0.c0, rt12.c2 FROM rt12 RIGHT OUTER JOIN vt0 ON vt0.c1 LEFT OUTER JOIN vt2 ON (+ (((((((((vt0.c1)AND(rt12.c2)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c1)))) GROUP BY vt0.c1, rt12.c1, rt12.c0, vt0.c0, rt12.c2 HAVING (((((AVG(vt2.c0)))>((MIN(COUNT(*)))))) ISNULL);
SELECT ALL vt1.c0, rt12.c2, rt12.c1, vt0.c0 FROM vt1, rt12, vt0;
SELECT ALL vt1.c0, rt12.c2, rt12.c1, vt0.c0 FROM vt1, rt12, vt0 WHERE ((((((vt1.c0))>=((vt0.c1))))|(((NULL) NOT BETWEEN (rt12.c2) AND (rt12.c0))))) UNION ALL SELECT ALL vt1.c0, rt12.c2, rt12.c1, vt0.c0 FROM vt1, rt12, vt0 WHERE ((NOT ((((((vt1.c0))>=((vt0.c1))))|(((NULL) NOT BETWEEN (rt12.c2) AND (rt12.c0))))))) UNION ALL SELECT vt1.c0, rt12.c2, rt12.c1, vt0.c0 FROM vt1, rt12, vt0 WHERE ((((((((vt1.c0))>=((vt0.c1))))|(((NULL) NOT BETWEEN (rt12.c2) AND (rt12.c0))))) ISNULL));
SELECT ALL vt1.c0, rt12.c2, rt12.c1, vt0.c0 FROM vt1, rt12, vt0;
SELECT DISTINCT vt2.c0, rt12.c0 FROM vt1, vt0, rt12, vt2;
SELECT DISTINCT vt2.c0, rt12.c0 FROM vt1, vt0, rt12, vt2 WHERE (((JULIANDAY(rt12.c2, vt2.c0, vt0.c1, rt12.c0, rt12.c2))+(CAST(rt12.c2 AS BLOB)))) UNION SELECT DISTINCT vt2.c0, rt12.c0 FROM vt1, vt0, rt12, vt2 WHERE ((NOT (((JULIANDAY(rt12.c2, vt2.c0, vt0.c1, rt12.c0, rt12.c2))+(CAST(rt12.c2 AS BLOB)))))) UNION SELECT DISTINCT vt2.c0, rt12.c0 FROM vt1, vt0, rt12, vt2 WHERE (((((JULIANDAY(rt12.c2, vt2.c0, vt0.c1, rt12.c0, rt12.c2))+(CAST(rt12.c2 AS BLOB)))) ISNULL));
SELECT DISTINCT vt2.c0, rt12.c0 FROM vt1, vt0, rt12, vt2;
SELECT vt2.c0, vt0.c1 FROM vt1, vt0, vt2 GROUP BY vt2.c0, vt0.c1;
SELECT ALL vt2.c0, vt0.c1 FROM vt1, vt0, vt2 WHERE (((((vt0.c1)OR(vt0.c1)))AND(vt2.c0)) COLLATE NOCASE) GROUP BY vt2.c0, vt0.c1 UNION SELECT vt2.c0, vt0.c1 FROM vt1, vt0, vt2 WHERE ((NOT (((((vt0.c1)OR(vt0.c1)))AND(vt2.c0)) COLLATE NOCASE))) GROUP BY vt2.c0, vt0.c1 UNION SELECT ALL vt2.c0, vt0.c1 FROM vt1, vt0, vt2 WHERE (((((((vt0.c1)OR(vt0.c1)))AND(vt2.c0)) COLLATE NOCASE) ISNULL)) GROUP BY vt2.c0, vt0.c1;
SELECT vt2.c0, vt0.c1 FROM vt1, vt0, vt2 GROUP BY vt2.c0, vt0.c1;
SELECT vt1.c0, vt2.c0 FROM vt1, vt2 GROUP BY vt1.c0, vt2.c0;
SELECT ALL vt1.c0, vt2.c0 FROM vt1, vt2 GROUP BY vt1.c0, vt2.c0 HAVING (((((vt1.c0, MAX(vt2.c0), COUNT('-215691497'))) NOT BETWEEN ((vt2.c0, COUNT(vt1.c0), COUNT(*))) AND ((MAX(vt1.c0), vt1.c0, vt2.c0))))>(TOTAL(GROUP_CONCAT(TOTAL(COUNT(*)))))) UNION ALL SELECT vt1.c0, vt2.c0 FROM vt1, vt2 GROUP BY vt1.c0, vt2.c0 HAVING (NOT ((((((vt1.c0, MAX(vt2.c0), COUNT('-215691497'))) NOT BETWEEN ((vt2.c0, COUNT(vt1.c0), COUNT(*))) AND ((MAX(vt1.c0), vt1.c0, vt2.c0))))>(TOTAL(GROUP_CONCAT(TOTAL(COUNT(*)))))))) UNION ALL SELECT vt1.c0, vt2.c0 FROM vt1, vt2 GROUP BY vt1.c0, vt2.c0 HAVING (((((((vt1.c0, MAX(vt2.c0), COUNT('-215691497'))) NOT BETWEEN ((vt2.c0, COUNT(vt1.c0), COUNT(*))) AND ((MAX(vt1.c0), vt1.c0, vt2.c0))))>(TOTAL(GROUP_CONCAT(TOTAL(COUNT(*))))))) ISNULL);
SELECT ALL MIN((((vt0.c0) NOT BETWEEN (rt12.c0) AND (rt12.c1)) IN ((('꺧9') IS FALSE)))) FROM vt1, vt2, vt0, rt12 ORDER BY TRIM(CAST(vt0.c0 AS TEXT)) DESC  NULLS FIRST;
SELECT ALL vt0.c1 FROM vt2, vt0;
SELECT vt0.c1 FROM vt2, vt0 WHERE ((((vt0.c0 IN ())) BETWEEN (((((vt0.c1)OR(vt0.c1)))AND(vt0.c1))) AND (((((vt0.c1)OR(vt0.c1)))OR(vt0.c1))))) UNION ALL SELECT ALL vt0.c1 FROM vt2, vt0 WHERE ((NOT ((((vt0.c0 IN ())) BETWEEN (((((vt0.c1)OR(vt0.c1)))AND(vt0.c1))) AND (((((vt0.c1)OR(vt0.c1)))OR(vt0.c1))))))) UNION ALL SELECT vt0.c1 FROM vt2, vt0 WHERE ((((((vt0.c0 IN ())) BETWEEN (((((vt0.c1)OR(vt0.c1)))AND(vt0.c1))) AND (((((vt0.c1)OR(vt0.c1)))OR(vt0.c1))))) ISNULL));
SELECT ALL vt0.c1 FROM vt2, vt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (CASE WHEN ((vt0.c0) IS TRUE) THEN DATETIME(vt0.c1, vt0.c1, vt0.c0) ELSE ((vt0.c1)OR(vt0.c0)) END) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (CASE WHEN ((vt0.c0) IS TRUE) THEN DATETIME(vt0.c1, vt0.c1, vt0.c0) ELSE ((vt0.c1)OR(vt0.c0)) END))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((CASE WHEN ((vt0.c0) IS TRUE) THEN DATETIME(vt0.c1, vt0.c1, vt0.c0) ELSE ((vt0.c1)OR(vt0.c0)) END) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT vt0.c1, vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt0.c1, vt1.c0, vt0.c0;
SELECT vt0.c1, vt1.c0, vt0.c0 FROM vt0, vt1 WHERE ((((vt0.c1)) NOT BETWEEN ((((vt0.c0)+(vt0.c0)))) AND ((CAST(NULL AS INTEGER))))) GROUP BY vt0.c1, vt1.c0, vt0.c0 UNION SELECT vt0.c1, vt1.c0, vt0.c0 FROM vt0, vt1 WHERE ((NOT ((((vt0.c1)) NOT BETWEEN ((((vt0.c0)+(vt0.c0)))) AND ((CAST(NULL AS INTEGER))))))) GROUP BY vt0.c1, vt1.c0, vt0.c0 UNION SELECT vt0.c1, vt1.c0, vt0.c0 FROM vt0, vt1 WHERE ((((((vt0.c1)) NOT BETWEEN ((((vt0.c0)+(vt0.c0)))) AND ((CAST(NULL AS INTEGER))))) ISNULL)) GROUP BY vt0.c1, vt1.c0, vt0.c0;
SELECT vt0.c1, vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt0.c1, vt1.c0, vt0.c0;
SELECT vt0.c1, rt12.c0, vt1.c0, rt12.c2 FROM vt1 RIGHT OUTER JOIN rt12 ON ((LIKE(vt0.c0, rt12.c0, '-'))<=(CASE WHEN vt1.c0 THEN vt1.c0 ELSE rt12.c0 END)) CROSS JOIN vt0 ON CAST((~ (rt12.c1)) AS INTEGER) GROUP BY vt0.c1, rt12.c0, vt1.c0, rt12.c2;
SELECT TOTAL(((((((vt1.c0)>(vt1.c0)))AND(COALESCE(NULL, vt1.c0))))AND(CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))) FROM vt1 ORDER BY '[պO&rfp\n#' COLLATE RTRIM DESC;
SELECT * FROM rt12;
SELECT * FROM rt12 WHERE (((rt12.c0)=(rt12.c2)) COLLATE NOCASE COLLATE BINARY) UNION ALL SELECT ALL * FROM rt12 WHERE ((NOT (((rt12.c0)==(rt12.c2)) COLLATE NOCASE COLLATE BINARY))) UNION ALL SELECT * FROM rt12 WHERE (((((rt12.c0)=(rt12.c2)) COLLATE NOCASE COLLATE BINARY) ISNULL));
SELECT * FROM rt12;
SELECT DISTINCT rt12.c0, rt12.c2, rt12.c1, vt2.c0 FROM vt2 CROSS JOIN rt12 ON (((((((((- (rt12.c2)))AND((rt12.c1 IN (rt12.c1)))))OR(((rt12.c0)<<(rt12.c1)))))OR(((rt12.c0) ISNULL))))AND('2Z+,|'));
SELECT DISTINCT rt12.c0, rt12.c2, rt12.c1, vt2.c0 FROM vt2 CROSS JOIN rt12 ON (((((((((- (rt12.c2)))AND((rt12.c1 IN (rt12.c1)))))OR(((rt12.c0)<<(rt12.c1)))))OR(((rt12.c0) ISNULL))))AND('2Z+,|')) WHERE (CAST(vt2.c0 COLLATE BINARY AS NUMERIC)) UNION SELECT DISTINCT rt12.c0, rt12.c2, rt12.c1, vt2.c0 FROM vt2 CROSS JOIN rt12 ON (((((((((- (rt12.c2)))AND((rt12.c1 IN (rt12.c1)))))OR(((rt12.c0)<<(rt12.c1)))))OR(((rt12.c0) ISNULL))))AND('2Z+,|')) WHERE ((NOT (CAST(vt2.c0 COLLATE BINARY AS NUMERIC)))) UNION SELECT DISTINCT rt12.c0, rt12.c2, rt12.c1, vt2.c0 FROM vt2 CROSS JOIN rt12 ON (((((((((- (rt12.c2)))AND((rt12.c1 IN (rt12.c1)))))OR(((rt12.c0)<<(rt12.c1)))))OR(((rt12.c0) ISNULL))))AND('2Z+,|')) WHERE (((CAST(vt2.c0 COLLATE BINARY AS NUMERIC)) ISNULL));
SELECT DISTINCT rt12.c0, rt12.c2, rt12.c1, vt2.c0 FROM vt2 CROSS JOIN rt12 ON (((((((((- (rt12.c2)))AND((rt12.c1 IN (rt12.c1)))))OR(((rt12.c0)<<(rt12.c1)))))OR(((rt12.c0) ISNULL))))AND('2Z+,|'));
SELECT rt12.c0, vt1.c0, rt12.c2, vt2.c0 FROM rt12, vt2, vt1 GROUP BY rt12.c0, vt1.c0, rt12.c2, vt2.c0;
SELECT ALL rt12.c0, vt1.c0, rt12.c2, vt2.c0 FROM rt12, vt2, vt1 WHERE ((((rt12.c2))<=((((vt1.c0)%(0x14430b08)))))) GROUP BY rt12.c0, vt1.c0, rt12.c2, vt2.c0 UNION SELECT rt12.c0, vt1.c0, rt12.c2, vt2.c0 FROM rt12, vt2, vt1 WHERE ((NOT ((((rt12.c2))<=((((vt1.c0)%(0x14430b08)))))))) GROUP BY rt12.c0, vt1.c0, rt12.c2, vt2.c0 UNION SELECT ALL rt12.c0, vt1.c0, rt12.c2, vt2.c0 FROM rt12, vt2, vt1 WHERE ((((((rt12.c2))<=((((vt1.c0)%(0X14430b08)))))) ISNULL)) GROUP BY rt12.c0, vt1.c0, rt12.c2, vt2.c0;
SELECT rt12.c0, vt1.c0, rt12.c2, vt2.c0 FROM rt12, vt2, vt1 GROUP BY rt12.c0, vt1.c0, rt12.c2, vt2.c0;
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING TOTAL(GROUP_CONCAT(vt0.c1)) UNION ALL SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING (NOT (TOTAL(GROUP_CONCAT(vt0.c1)))) UNION ALL SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING ((TOTAL(GROUP_CONCAT(vt0.c1))) ISNULL);
SELECT vt2.c0, vt0.c1, rt12.c1, vt1.c0, rt12.c2, rt12.c0, vt0.c0 FROM vt0 FULL OUTER JOIN vt1 ON SQLITE_VERSION() FULL OUTER JOIN rt12 ON ((CAST(rt12.c1 AS BLOB)) IS TRUE) CROSS JOIN vt2 ON ((((vt0.c1, vt0.c1, rt12.c2)) BETWEEN ((rt12.c1, vt1.c0, vt0.c1)) AND ((vt2.c0, 0.6074535371533815, vt1.c0))) IN ());
SELECT ALL vt2.c0, vt0.c1, rt12.c1, vt1.c0, rt12.c2, rt12.c0, vt0.c0 FROM vt0 FULL OUTER JOIN vt1 ON SQLITE_VERSION() FULL OUTER JOIN rt12 ON ((CAST(rt12.c1 AS BLOB)) IS TRUE) CROSS JOIN vt2 ON ((((vt0.c1, vt0.c1, rt12.c2)) BETWEEN ((rt12.c1, vt1.c0, vt0.c1)) AND ((vt2.c0, 0.6074535371533815, vt1.c0))) IN ()) WHERE (json(((((((((((((vt0.c1)AND(vt2.c0)))OR(rt12.c0)))AND(vt2.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))) UNION ALL SELECT ALL vt2.c0, vt0.c1, rt12.c1, vt1.c0, rt12.c2, rt12.c0, vt0.c0 FROM vt0 FULL OUTER JOIN vt1 ON SQLITE_VERSION() FULL OUTER JOIN rt12 ON ((CAST(rt12.c1 AS BLOB)) IS TRUE) CROSS JOIN vt2 ON ((((vt0.c1, vt0.c1, rt12.c2)) BETWEEN ((rt12.c1, vt1.c0, vt0.c1)) AND ((vt2.c0, 0.6074535371533815, vt1.c0))) IN ()) WHERE ((NOT (json(((((((((((((vt0.c1)AND(vt2.c0)))OR(rt12.c0)))AND(vt2.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))))) UNION ALL SELECT ALL vt2.c0, vt0.c1, rt12.c1, vt1.c0, rt12.c2, rt12.c0, vt0.c0 FROM vt0 FULL OUTER JOIN vt1 ON SQLITE_VERSION() FULL OUTER JOIN rt12 ON ((CAST(rt12.c1 AS BLOB)) IS TRUE) CROSS JOIN vt2 ON ((((vt0.c1, vt0.c1, rt12.c2)) BETWEEN ((rt12.c1, vt1.c0, vt0.c1)) AND ((vt2.c0, 0.6074535371533815, vt1.c0))) IN ()) WHERE (((json(((((((((((((vt0.c1)AND(vt2.c0)))OR(rt12.c0)))AND(vt2.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))) ISNULL));
SELECT vt2.c0, vt0.c1, rt12.c1, vt1.c0, rt12.c2, rt12.c0, vt0.c0 FROM vt0 FULL OUTER JOIN vt1 ON SQLITE_VERSION() FULL OUTER JOIN rt12 ON ((CAST(rt12.c1 AS BLOB)) IS TRUE) CROSS JOIN vt2 ON ((((vt0.c1, vt0.c1, rt12.c2)) BETWEEN ((rt12.c1, vt1.c0, vt0.c1)) AND ((vt2.c0, 0.6074535371533815, vt1.c0))) IN ());
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((+ (((vt1.c0) IS TRUE)))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT ((+ (((vt1.c0) IS TRUE)))))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((((+ (((vt1.c0) IS TRUE)))) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT ALL vt2.c0 FROM vt2 WHERE ((((CASE WHEN vt2.c0 THEN vt2.c0 END))<((CAST(vt2.c0 AS NUMERIC))))) GROUP BY vt2.c0 UNION SELECT vt2.c0 FROM vt2 WHERE ((NOT ((((CASE WHEN vt2.c0 THEN vt2.c0 END))<((CAST(vt2.c0 AS NUMERIC))))))) GROUP BY vt2.c0 UNION SELECT ALL vt2.c0 FROM vt2 WHERE ((((((CASE WHEN vt2.c0 THEN vt2.c0 END))<((CAST(vt2.c0 AS NUMERIC))))) ISNULL)) GROUP BY vt2.c0;
SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT ALL vt1.c0, vt0.c1, vt0.c0 FROM vt1 NATURAL JOIN vt0 GROUP BY vt1.c0, vt0.c1, vt0.c0;
SELECT ALL vt1.c0, vt0.c1, vt0.c0 FROM vt1 NATURAL JOIN vt0 GROUP BY vt1.c0, vt0.c1, vt0.c0 HAVING COUNT(*) UNION ALL SELECT vt1.c0, vt0.c1, vt0.c0 FROM vt1 NATURAL JOIN vt0 GROUP BY vt1.c0, vt0.c1, vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt1.c0, vt0.c1, vt0.c0 FROM vt1 NATURAL JOIN vt0 GROUP BY vt1.c0, vt0.c1, vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt1.c0, vt0.c1, vt0.c0 FROM vt1 NATURAL JOIN vt0 GROUP BY vt1.c0, vt0.c1, vt0.c0;
SELECT ALL vt1.c0, vt0.c1, vt0.c0 FROM vt1 NATURAL JOIN vt0 GROUP BY vt1.c0, vt0.c1, vt0.c0 HAVING COUNT(*) UNION ALL SELECT vt1.c0, vt0.c1, vt0.c0 FROM vt1 NATURAL JOIN vt0 GROUP BY vt1.c0, vt0.c1, vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt1.c0, vt0.c1, vt0.c0 FROM vt1 NATURAL JOIN vt0 GROUP BY vt1.c0, vt0.c1, vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt1.c0, vt0.c1, vt0.c0 FROM vt1 NATURAL JOIN vt0 GROUP BY vt1.c0, vt0.c1, vt0.c0;
SELECT * FROM vt2 FULL OUTER JOIN rt12 ON (rt12.c0 COLLATE RTRIM IN ());
SELECT ALL * FROM vt2 FULL OUTER JOIN rt12 ON (rt12.c0 COLLATE RTRIM IN ()) WHERE ((((((((((((vt2.c0)OR(rt12.c0)))OR(rt12.c2)))AND(rt12.c1)))AND(rt12.c2)), (+ (rt12.c0)), TRIM(vt2.c0, rt12.c1)))<=(((((rt12.c1)) NOT BETWEEN ((rt12.c1)) AND ((rt12.c1))), rt12.c0 COLLATE NOCASE, NULL)))) UNION ALL SELECT ALL * FROM vt2 FULL OUTER JOIN rt12 ON (rt12.c0 COLLATE RTRIM IN ()) WHERE ((NOT ((((((((((((vt2.c0)OR(rt12.c0)))OR(rt12.c2)))AND(rt12.c1)))AND(rt12.c2)), (+ (rt12.c0)), TRIM(vt2.c0, rt12.c1)))<=(((((rt12.c1)) NOT BETWEEN ((rt12.c1)) AND ((rt12.c1))), rt12.c0 COLLATE NOCASE, NULL)))))) UNION ALL SELECT ALL * FROM vt2 FULL OUTER JOIN rt12 ON (rt12.c0 COLLATE RTRIM IN ()) WHERE ((((((((((((((vt2.c0)OR(rt12.c0)))OR(rt12.c2)))AND(rt12.c1)))AND(rt12.c2)), (+ (rt12.c0)), TRIM(vt2.c0, rt12.c1)))<=(((((rt12.c1)) NOT BETWEEN ((rt12.c1)) AND ((rt12.c1))), rt12.c0 COLLATE NOCASE, NULL)))) ISNULL));
SELECT * FROM vt2 FULL OUTER JOIN rt12 ON (rt12.c0 COLLATE RTRIM IN ());
SELECT DISTINCT * FROM vt1, vt2, vt0;
SELECT DISTINCT * FROM vt1, vt2, vt0 WHERE (((vt1.c0)<(vt1.c0)) COLLATE RTRIM) UNION SELECT DISTINCT * FROM vt1, vt2, vt0 WHERE ((NOT (((vt1.c0)<(vt1.c0)) COLLATE RTRIM))) UNION SELECT DISTINCT * FROM vt1, vt2, vt0 WHERE (((((vt1.c0)<(vt1.c0)) COLLATE RTRIM) ISNULL));
SELECT DISTINCT * FROM vt1, vt2, vt0;
SELECT rt12.c1, rt12.c2, vt2.c0 FROM rt12, vt0, vt2 GROUP BY rt12.c1, rt12.c2, vt2.c0;
SELECT rt12.c1, rt12.c2, vt2.c0 FROM rt12, vt0, vt2 WHERE (((+ (vt0.c1)) IN ())) GROUP BY rt12.c1, rt12.c2, vt2.c0 UNION SELECT rt12.c1, rt12.c2, vt2.c0 FROM rt12, vt0, vt2 WHERE ((NOT (((+ (vt0.c1)) IN ())))) GROUP BY rt12.c1, rt12.c2, vt2.c0 UNION SELECT ALL rt12.c1, rt12.c2, vt2.c0 FROM rt12, vt0, vt2 WHERE (((((+ (vt0.c1)) IN ())) ISNULL)) GROUP BY rt12.c1, rt12.c2, vt2.c0;
SELECT rt12.c1, rt12.c2, vt2.c0 FROM rt12, vt0, vt2 GROUP BY rt12.c1, rt12.c2, vt2.c0;
SELECT vt0.c1, vt2.c0, rt12.c0, vt0.c0, vt1.c0, rt12.c2, rt12.c1 FROM vt2, vt0, vt1 INNER JOIN rt12 ON ((((vt0.c1)!=(vt1.c0))) BETWEEN (vt2.c0 COLLATE BINARY) AND (vt0.c0 COLLATE BINARY)) GROUP BY vt0.c1, vt2.c0, rt12.c0, vt0.c0, vt1.c0, rt12.c2, rt12.c1;
SELECT vt0.c1, vt2.c0, rt12.c0, vt0.c0, vt1.c0, rt12.c2, rt12.c1 FROM vt2, vt0, vt1 INNER JOIN rt12 ON ((((vt0.c1)!=(vt1.c0))) BETWEEN (vt2.c0 COLLATE BINARY) AND (vt0.c0 COLLATE BINARY)) GROUP BY vt0.c1, vt2.c0, rt12.c0, vt0.c0, vt1.c0, rt12.c2, rt12.c1 HAVING CASE AVG(vt0.c1)  WHEN ((MAX(rt12.c2))LIKE(vt0.c0)) THEN CASE WHEN COUNT(*) THEN rt12.c2 WHEN TOTAL(MAX(GROUP_CONCAT(GROUP_CONCAT(SUM(vt1.c0))))) THEN GROUP_CONCAT(vt0.c1) WHEN vt2.c0 THEN rt12.c0 END ELSE SUM(COUNT(*)) END UNION ALL SELECT vt0.c1, vt2.c0, rt12.c0, vt0.c0, vt1.c0, rt12.c2, rt12.c1 FROM vt2, vt0, vt1 INNER JOIN rt12 ON ((((vt0.c1)!=(vt1.c0))) BETWEEN (vt2.c0 COLLATE BINARY) AND (vt0.c0 COLLATE BINARY)) GROUP BY vt0.c1, vt2.c0, rt12.c0, vt0.c0, vt1.c0, rt12.c2, rt12.c1 HAVING (NOT (CASE AVG(vt0.c1)  WHEN ((MAX(rt12.c2))LIKE(vt0.c0)) THEN CASE WHEN COUNT(*) THEN rt12.c2 WHEN TOTAL(MAX(GROUP_CONCAT(GROUP_CONCAT(SUM(vt1.c0))))) THEN GROUP_CONCAT(vt0.c1) WHEN vt2.c0 THEN rt12.c0 END ELSE SUM(COUNT(*)) END)) UNION ALL SELECT ALL vt0.c1, vt2.c0, rt12.c0, vt0.c0, vt1.c0, rt12.c2, rt12.c1 FROM vt2, vt0, vt1 INNER JOIN rt12 ON ((((vt0.c1)<>(vt1.c0))) BETWEEN (vt2.c0 COLLATE BINARY) AND (vt0.c0 COLLATE BINARY)) GROUP BY vt0.c1, vt2.c0, rt12.c0, vt0.c0, vt1.c0, rt12.c2, rt12.c1 HAVING ((CASE AVG(vt0.c1)  WHEN ((MAX(rt12.c2))LIKE(vt0.c0)) THEN CASE WHEN COUNT(*) THEN rt12.c2 WHEN TOTAL(MAX(GROUP_CONCAT(GROUP_CONCAT(SUM(vt1.c0))))) THEN GROUP_CONCAT(vt0.c1) WHEN vt2.c0 THEN rt12.c0 END ELSE SUM(COUNT(*)) END) ISNULL);
SELECT ALL * FROM vt0;
SELECT * FROM vt0 WHERE (CASE CAST(vt0.c1 AS NUMERIC)  WHEN (((vt0.c1, vt0.c1, vt0.c0, vt0.c0, vt0.c1))>((vt0.c0, vt0.c0, vt0.c1, vt0.c0, vt0.c1))) THEN CASE WHEN vt0.c1 THEN vt0.c0 END WHEN (vt0.c1 IN ()) THEN '-1823618676' WHEN (('')LIKE(vt0.c1)) THEN CAST(vt0.c0 AS INTEGER) END) UNION ALL SELECT * FROM vt0 WHERE ((NOT (CASE CAST(vt0.c1 AS NUMERIC)  WHEN (((vt0.c1, vt0.c1, vt0.c0, vt0.c0, vt0.c1))>((vt0.c0, vt0.c0, vt0.c1, vt0.c0, vt0.c1))) THEN CASE WHEN vt0.c1 THEN vt0.c0 END WHEN (vt0.c1 IN ()) THEN '-1823618676' WHEN (('')LIKE(vt0.c1)) THEN CAST(vt0.c0 AS INTEGER) END))) UNION ALL SELECT * FROM vt0 WHERE (((CASE CAST(vt0.c1 AS NUMERIC)  WHEN (((vt0.c1, vt0.c1, vt0.c0, vt0.c0, vt0.c1))>((vt0.c0, vt0.c0, vt0.c1, vt0.c0, vt0.c1))) THEN CASE WHEN vt0.c1 THEN vt0.c0 END WHEN (vt0.c1 IN ()) THEN '-1823618676' WHEN (('')LIKE(vt0.c1)) THEN CAST(vt0.c0 AS INTEGER) END) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT vt2.c0 FROM vt2;
SELECT DISTINCT vt2.c0 FROM vt2 WHERE (vt2.c0) UNION SELECT DISTINCT vt2.c0 FROM vt2 WHERE ((NOT (vt2.c0))) UNION SELECT DISTINCT vt2.c0 FROM vt2 WHERE (((vt2.c0) ISNULL));
SELECT DISTINCT vt2.c0 FROM vt2;
SELECT vt2.c0 FROM vt1, rt12, vt2 GROUP BY vt2.c0;
SELECT vt2.c0 FROM vt1, rt12, vt2 WHERE (COALESCE((((rt12.c2)) BETWEEN ((rt12.c2)) AND ((vt2.c0))), (((x'b3c1')) NOT BETWEEN ((vt2.c0)) AND ((rt12.c2))))) GROUP BY vt2.c0 UNION SELECT vt2.c0 FROM vt1, rt12, vt2 WHERE ((NOT (COALESCE((((rt12.c2)) BETWEEN ((rt12.c2)) AND ((vt2.c0))), (((x'b3c1')) NOT BETWEEN ((vt2.c0)) AND ((rt12.c2))))))) GROUP BY vt2.c0 UNION SELECT ALL vt2.c0 FROM vt1, rt12, vt2 WHERE (((COALESCE((((rt12.c2)) BETWEEN ((rt12.c2)) AND ((vt2.c0))), (((x'b3c1')) NOT BETWEEN ((vt2.c0)) AND ((rt12.c2))))) ISNULL)) GROUP BY vt2.c0;
SELECT vt2.c0 FROM vt1, rt12, vt2 GROUP BY vt2.c0;
SELECT vt2.c0, rt12.c2, vt1.c0, vt0.c1, rt12.c0, vt0.c0 FROM vt2, vt1, vt0, rt12 GROUP BY vt2.c0, rt12.c2, vt1.c0, vt0.c1, rt12.c0, vt0.c0;
SELECT ALL vt2.c0, rt12.c2, vt1.c0, vt0.c1, rt12.c0, vt0.c0 FROM vt2, vt1, vt0, rt12 GROUP BY vt2.c0, rt12.c2, vt1.c0, vt0.c1, rt12.c0, vt0.c0 HAVING SUM(AVG(MIN(TOTAL(rt12.c0)))) UNION ALL SELECT vt2.c0, rt12.c2, vt1.c0, vt0.c1, rt12.c0, vt0.c0 FROM vt2, vt1, vt0, rt12 GROUP BY vt2.c0, rt12.c2, vt1.c0, vt0.c1, rt12.c0, vt0.c0 HAVING (NOT (SUM(AVG(MIN(TOTAL(rt12.c0)))))) UNION ALL SELECT vt2.c0, rt12.c2, vt1.c0, vt0.c1, rt12.c0, vt0.c0 FROM vt2, vt1, vt0, rt12 GROUP BY vt2.c0, rt12.c2, vt1.c0, vt0.c1, rt12.c0, vt0.c0 HAVING ((SUM(AVG(MIN(TOTAL(rt12.c0))))) ISNULL);
SELECT * FROM rt12, vt1, vt2;
SELECT ALL * FROM rt12, vt1, vt2 WHERE (('2087641516' IN ())) UNION ALL SELECT * FROM rt12, vt1, vt2 WHERE ((NOT (('2087641516' IN ())))) UNION ALL SELECT ALL * FROM rt12, vt1, vt2 WHERE (((('2087641516' IN ())) ISNULL));
SELECT * FROM rt12, vt1, vt2;
SELECT DISTINCT * FROM vt1 NATURAL JOIN vt2;
SELECT DISTINCT * FROM vt1 NATURAL JOIN vt2 WHERE (((CASE vt2.c0  WHEN vt1.c0 THEN vt2.c0 WHEN x'' THEN vt1.c0 WHEN vt1.c0 THEN vt2.c0 END) NOTNULL)) UNION SELECT DISTINCT * FROM vt1 NATURAL JOIN vt2 WHERE ((NOT (((CASE vt2.c0  WHEN vt1.c0 THEN vt2.c0 WHEN x'' THEN vt1.c0 WHEN vt1.c0 THEN vt2.c0 END) NOTNULL)))) UNION SELECT DISTINCT * FROM vt1 NATURAL JOIN vt2 WHERE (((((CASE vt2.c0  WHEN vt1.c0 THEN vt2.c0 WHEN x'' THEN vt1.c0 WHEN vt1.c0 THEN vt2.c0 END) NOTNULL)) ISNULL));
SELECT DISTINCT * FROM vt1 NATURAL JOIN vt2;
SELECT ALL rt12.c0, vt1.c0, rt12.c2, rt12.c1 FROM vt1, rt12 GROUP BY rt12.c0, vt1.c0, rt12.c2, rt12.c1;
SELECT ALL rt12.c0, vt1.c0, rt12.c2, rt12.c1 FROM vt1, rt12 WHERE (CAST(((((((((rt12.c2)AND(vt1.c0)))OR(rt12.c2)))AND(rt12.c2)))AND(rt12.c2)) AS REAL)) GROUP BY rt12.c0, vt1.c0, rt12.c2, rt12.c1 UNION SELECT ALL rt12.c0, vt1.c0, rt12.c2, rt12.c1 FROM vt1, rt12 WHERE ((NOT (CAST(((((((((rt12.c2)AND(vt1.c0)))OR(rt12.c2)))AND(rt12.c2)))AND(rt12.c2)) AS REAL)))) GROUP BY rt12.c0, vt1.c0, rt12.c2, rt12.c1 UNION SELECT ALL rt12.c0, vt1.c0, rt12.c2, rt12.c1 FROM vt1, rt12 WHERE (((CAST(((((((((rt12.c2)AND(vt1.c0)))OR(rt12.c2)))AND(rt12.c2)))AND(rt12.c2)) AS REAL)) ISNULL)) GROUP BY rt12.c0, vt1.c0, rt12.c2, rt12.c1;
SELECT ALL rt12.c0, vt1.c0, rt12.c2, rt12.c1 FROM vt1, rt12 GROUP BY rt12.c0, vt1.c0, rt12.c2, rt12.c1;
SELECT rt12.c1, vt0.c1, rt12.c2, vt0.c0 FROM rt12, vt1, vt0 GROUP BY rt12.c1, vt0.c1, rt12.c2, vt0.c0;
SELECT ALL rt12.c1, vt0.c1, rt12.c2, vt0.c0 FROM rt12, vt1, vt0 GROUP BY rt12.c1, vt0.c1, rt12.c2, vt0.c0 HAVING AVG(SUM('')) UNION ALL SELECT rt12.c1, vt0.c1, rt12.c2, vt0.c0 FROM rt12, vt1, vt0 GROUP BY rt12.c1, vt0.c1, rt12.c2, vt0.c0 HAVING (NOT (AVG(SUM('')))) UNION ALL SELECT rt12.c1, vt0.c1, rt12.c2, vt0.c0 FROM rt12, vt1, vt0 GROUP BY rt12.c1, vt0.c1, rt12.c2, vt0.c0 HAVING ((AVG(SUM(''))) ISNULL);
SELECT ALL * FROM rt12, vt1;
SELECT * FROM rt12, vt1 WHERE (((((((rt12.c1) NOT NULL))OR(CAST(rt12.c0 AS REAL))))OR((- (rt12.c2))))) UNION ALL SELECT ALL * FROM rt12, vt1 WHERE ((NOT (((((((rt12.c1) NOT NULL))OR(CAST(rt12.c0 AS REAL))))OR((- (rt12.c2))))))) UNION ALL SELECT ALL * FROM rt12, vt1 WHERE (((((((((rt12.c1) NOT NULL))OR(CAST(rt12.c0 AS REAL))))OR((- (rt12.c2))))) ISNULL));
SELECT ALL * FROM rt12, vt1;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN ())) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN ())))) UNION SELECT DISTINCT * FROM vt0 WHERE ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN ())) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL rt12.c0, rt12.c1 FROM rt12 GROUP BY rt12.c0, rt12.c1;
SELECT ALL rt12.c0, rt12.c1 FROM rt12 WHERE (NULL) GROUP BY rt12.c0, rt12.c1 UNION SELECT ALL rt12.c0, rt12.c1 FROM rt12 WHERE ((NOT (NULL))) GROUP BY rt12.c0, rt12.c1 UNION SELECT rt12.c0, rt12.c1 FROM rt12 WHERE (((NULL) ISNULL)) GROUP BY rt12.c0, rt12.c1;
SELECT ALL rt12.c0, rt12.c1 FROM rt12 GROUP BY rt12.c0, rt12.c1;
SELECT rt12.c1 FROM vt1, vt0 INNER JOIN rt12 ON ((ABS(vt0.c1))>>(CASE vt0.c1  WHEN vt2.c0 THEN rt12.c1 ELSE rt12.c1 END)) FULL OUTER JOIN vt2 ON ((NULL)>=(((rt12.c0)/(vt0.c0)))) GROUP BY rt12.c1;
SELECT ALL * FROM vt2, vt1 INNER JOIN rt12 ON (((((vt1.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt2.c0))))>=(CASE WHEN rt12.c1 THEN vt1.c0 END)) CROSS JOIN vt0 ON ((((rt12.c1)+(vt0.c1)))IS(CAST(vt0.c0 AS TEXT)));
SELECT ALL * FROM vt2, vt1 INNER JOIN rt12 ON (((((vt1.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt2.c0))))>=(CASE WHEN rt12.c1 THEN vt1.c0 END)) CROSS JOIN vt0 ON ((((rt12.c1)+(vt0.c1)))IS(CAST(vt0.c0 AS TEXT))) WHERE ((vt0.c1 IN (((vt0.c0)<(rt12.c1))))) UNION ALL SELECT ALL * FROM vt2, vt1 INNER JOIN rt12 ON (((((vt1.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt2.c0))))>=(CASE WHEN rt12.c1 THEN vt1.c0 END)) CROSS JOIN vt0 ON ((((rt12.c1)+(vt0.c1)))IS(CAST(vt0.c0 AS TEXT))) WHERE ((NOT ((vt0.c1 IN (((vt0.c0)<(rt12.c1))))))) UNION ALL SELECT ALL * FROM vt2, vt1 INNER JOIN rt12 ON (((((vt1.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt2.c0))))>=(CASE WHEN rt12.c1 THEN vt1.c0 END)) CROSS JOIN vt0 ON ((((rt12.c1)+(vt0.c1)))IS(CAST(vt0.c0 AS TEXT))) WHERE ((((vt0.c1 IN (((vt0.c0)<(rt12.c1))))) ISNULL));
SELECT ALL * FROM vt2, vt1 INNER JOIN rt12 ON (((((vt1.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt2.c0))))>=(CASE WHEN rt12.c1 THEN vt1.c0 END)) CROSS JOIN vt0 ON ((((rt12.c1)+(vt0.c1)))IS(CAST(vt0.c0 AS TEXT)));
SELECT DISTINCT * FROM vt2;
SELECT DISTINCT * FROM vt2 WHERE (((((vt2.c0)OR(vt2.c0))) NOT BETWEEN (vt2.c0 COLLATE RTRIM) AND (CASE vt2.c0  WHEN vt2.c0 THEN vt2.c0 WHEN vt2.c0 THEN vt2.c0 WHEN vt2.c0 THEN vt2.c0 ELSE NULL END))) UNION SELECT DISTINCT * FROM vt2 WHERE ((NOT (((((vt2.c0)OR(vt2.c0))) NOT BETWEEN (vt2.c0 COLLATE RTRIM) AND (CASE vt2.c0  WHEN vt2.c0 THEN vt2.c0 WHEN vt2.c0 THEN vt2.c0 WHEN vt2.c0 THEN vt2.c0 ELSE NULL END))))) UNION SELECT DISTINCT * FROM vt2 WHERE (((((((vt2.c0)OR(vt2.c0))) NOT BETWEEN (vt2.c0 COLLATE RTRIM) AND (CASE vt2.c0  WHEN vt2.c0 THEN vt2.c0 WHEN vt2.c0 THEN vt2.c0 WHEN vt2.c0 THEN vt2.c0 ELSE NULL END))) ISNULL));
SELECT DISTINCT * FROM vt2;
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 WHERE (vt0.c1) GROUP BY vt0.c1, vt0.c0 UNION SELECT vt0.c1, vt0.c0 FROM vt0 WHERE ((NOT (vt0.c1))) GROUP BY vt0.c1, vt0.c0 UNION SELECT ALL vt0.c1, vt0.c0 FROM vt0 WHERE (((vt0.c1) ISNULL)) GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING (((vt0.c1 IN ()))=(TOTAL(vt0.c0))) UNION ALL SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING (NOT ((((vt0.c1 IN ()))=(TOTAL(vt0.c0))))) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING (((((vt0.c1 IN ()))=(TOTAL(vt0.c0)))) ISNULL);
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING (((vt0.c1 IN ()))=(TOTAL(vt0.c0))) UNION ALL SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING (NOT ((((vt0.c1 IN ()))=(TOTAL(vt0.c0))))) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING (((((vt0.c1 IN ()))=(TOTAL(vt0.c0)))) ISNULL);
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT * FROM vt2;
SELECT ALL * FROM vt2 WHERE (((CASE vt2.c0  WHEN vt2.c0 THEN vt2.c0 ELSE vt2.c0 END) NOT BETWEEN ((NOT (vt2.c0))) AND ((vt2.c0 IN (x''))))) UNION ALL SELECT ALL * FROM vt2 WHERE ((NOT (((CASE vt2.c0  WHEN vt2.c0 THEN vt2.c0 ELSE vt2.c0 END) NOT BETWEEN ((NOT (vt2.c0))) AND ((vt2.c0 IN (x''))))))) UNION ALL SELECT * FROM vt2 WHERE (((((CASE vt2.c0  WHEN vt2.c0 THEN vt2.c0 ELSE vt2.c0 END) NOT BETWEEN ((NOT (vt2.c0))) AND ((vt2.c0 IN (x''))))) ISNULL));
SELECT * FROM vt2;
SELECT DISTINCT vt2.c0, vt0.c0, vt1.c0, vt0.c1 FROM vt0, vt1, vt2;
SELECT DISTINCT vt2.c0, vt0.c0, vt1.c0, vt0.c1 FROM vt0, vt1, vt2 WHERE (CASE WHEN ((vt2.c0) BETWEEN (vt1.c0) AND (vt0.c1)) THEN ((vt0.c0)-(vt1.c0)) ELSE ((vt0.c0)OR(vt0.c0)) END) UNION SELECT DISTINCT vt2.c0, vt0.c0, vt1.c0, vt0.c1 FROM vt0, vt1, vt2 WHERE ((NOT (CASE WHEN ((vt2.c0) BETWEEN (vt1.c0) AND (vt0.c1)) THEN ((vt0.c0)-(vt1.c0)) ELSE ((vt0.c0)OR(vt0.c0)) END))) UNION SELECT DISTINCT vt2.c0, vt0.c0, vt1.c0, vt0.c1 FROM vt0, vt1, vt2 WHERE (((CASE WHEN ((vt2.c0) BETWEEN (vt1.c0) AND (vt0.c1)) THEN ((vt0.c0)-(vt1.c0)) ELSE ((vt0.c0)OR(vt0.c0)) END) ISNULL));
SELECT DISTINCT vt2.c0, vt0.c0, vt1.c0, vt0.c1 FROM vt0, vt1, vt2;
SELECT ALL vt0.c1, vt1.c0, vt2.c0, vt0.c0 FROM vt2, vt0, vt1 GROUP BY vt0.c1, vt1.c0, vt2.c0, vt0.c0;
SELECT ALL vt0.c1, vt1.c0, vt2.c0, vt0.c0 FROM vt2, vt0, vt1 WHERE (CASE WHEN ((vt1.c0) NOTNULL) THEN ((vt0.c0)&(vt2.c0)) END) GROUP BY vt0.c1, vt1.c0, vt2.c0, vt0.c0 UNION SELECT ALL vt0.c1, vt1.c0, vt2.c0, vt0.c0 FROM vt2, vt0, vt1 WHERE ((NOT (CASE WHEN ((vt1.c0) NOTNULL) THEN ((vt0.c0)&(vt2.c0)) END))) GROUP BY vt0.c1, vt1.c0, vt2.c0, vt0.c0 UNION SELECT vt0.c1, vt1.c0, vt2.c0, vt0.c0 FROM vt2, vt0, vt1 WHERE (((CASE WHEN ((vt1.c0) NOTNULL) THEN ((vt0.c0)&(vt2.c0)) END) ISNULL)) GROUP BY vt0.c1, vt1.c0, vt2.c0, vt0.c0;
SELECT ALL vt0.c1, vt1.c0, vt2.c0, vt0.c0 FROM vt2, vt0, vt1 GROUP BY vt0.c1, vt1.c0, vt2.c0, vt0.c0;
SELECT vt0.c0 FROM vt0, rt12, vt2 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0, rt12, vt2 GROUP BY vt0.c0 HAVING SUM(MIN(vt0.c1)) UNION ALL SELECT vt0.c0 FROM vt0, rt12, vt2 GROUP BY vt0.c0 HAVING (NOT (SUM(MIN(vt0.c1)))) UNION ALL SELECT ALL vt0.c0 FROM vt0, rt12, vt2 GROUP BY vt0.c0 HAVING ((SUM(MIN(vt0.c1))) ISNULL);
SELECT * FROM vt2, vt1;
SELECT * FROM vt2, vt1 WHERE (LOWER(DISTINCT (((vt2.c0))>((vt1.c0))))) UNION ALL SELECT ALL * FROM vt2, vt1 WHERE ((NOT (LOWER(DISTINCT (((vt2.c0))>((vt1.c0))))))) UNION ALL SELECT ALL * FROM vt2, vt1 WHERE (((LOWER(DISTINCT (((vt2.c0))>((vt1.c0))))) ISNULL));
SELECT * FROM vt2, vt1;
SELECT DISTINCT rt12.c0 FROM rt12;
SELECT DISTINCT rt12.c0 FROM rt12 WHERE ((- (rt12.c2 COLLATE RTRIM))) UNION SELECT DISTINCT rt12.c0 FROM rt12 WHERE ((NOT ((- (rt12.c2 COLLATE RTRIM))))) UNION SELECT DISTINCT rt12.c0 FROM rt12 WHERE ((((- (rt12.c2 COLLATE RTRIM))) ISNULL));
SELECT DISTINCT rt12.c0 FROM rt12;
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt0 WHERE (((0.8253429617267216 COLLATE NOCASE) NOT BETWEEN (vt0.c0) AND (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1))))) GROUP BY vt0.c1 UNION SELECT vt0.c1 FROM vt0 WHERE ((NOT (((0.8253429617267216 COLLATE NOCASE) NOT BETWEEN (vt0.c0) AND (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1))))))) GROUP BY vt0.c1 UNION SELECT ALL vt0.c1 FROM vt0 WHERE (((((0.8253429617267216 COLLATE NOCASE) NOT BETWEEN (vt0.c0) AND (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1))))) ISNULL)) GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT vt2.c0, vt0.c0, vt0.c1 FROM vt1, vt0, vt2, rt12 GROUP BY vt2.c0, vt0.c0, vt0.c1;
SELECT ALL vt2.c0, vt0.c0, vt0.c1 FROM vt1, vt0, vt2, rt12 GROUP BY vt2.c0, vt0.c0, vt0.c1 HAVING GROUP_CONCAT(CHANGES()) UNION ALL SELECT ALL vt2.c0, vt0.c0, vt0.c1 FROM vt1, vt0, vt2, rt12 GROUP BY vt2.c0, vt0.c0, vt0.c1 HAVING (NOT (GROUP_CONCAT(CHANGES()))) UNION ALL SELECT ALL vt2.c0, vt0.c0, vt0.c1 FROM vt1, vt0, vt2, rt12 GROUP BY vt2.c0, vt0.c0, vt0.c1 HAVING ((GROUP_CONCAT(CHANGES())) ISNULL);
SELECT vt2.c0, vt0.c0, vt0.c1 FROM vt1, vt0, vt2, rt12 GROUP BY vt2.c0, vt0.c0, vt0.c1;
SELECT ALL vt2.c0, vt0.c0, vt0.c1 FROM vt1, vt0, vt2, rt12 GROUP BY vt2.c0, vt0.c0, vt0.c1 HAVING GROUP_CONCAT(CHANGES()) UNION ALL SELECT ALL vt2.c0, vt0.c0, vt0.c1 FROM vt1, vt0, vt2, rt12 GROUP BY vt2.c0, vt0.c0, vt0.c1 HAVING (NOT (GROUP_CONCAT(CHANGES()))) UNION ALL SELECT ALL vt2.c0, vt0.c0, vt0.c1 FROM vt1, vt0, vt2, rt12 GROUP BY vt2.c0, vt0.c0, vt0.c1 HAVING ((GROUP_CONCAT(CHANGES())) ISNULL);
SELECT vt2.c0, vt0.c0, vt0.c1 FROM vt1, vt0, vt2, rt12 GROUP BY vt2.c0, vt0.c0, vt0.c1;
SELECT vt0.c0 FROM rt12, vt0;
SELECT vt0.c0 FROM rt12, vt0 WHERE ((((((rt12.c2, vt0.c1, rt12.c0))=((rt12.c1, rt12.c2, vt0.c0))))GLOB(CASE WHEN NULL THEN rt12.c1 END))) UNION ALL SELECT vt0.c0 FROM rt12, vt0 WHERE ((NOT ((((((rt12.c2, vt0.c1, rt12.c0))==((rt12.c1, rt12.c2, vt0.c0))))GLOB(CASE WHEN NULL THEN rt12.c1 END))))) UNION ALL SELECT vt0.c0 FROM rt12, vt0 WHERE ((((((((rt12.c2, vt0.c1, rt12.c0))=((rt12.c1, rt12.c2, vt0.c0))))GLOB(CASE WHEN NULL THEN rt12.c1 END))) ISNULL));
SELECT vt0.c0 FROM rt12, vt0;
SELECT DISTINCT vt1.c0, rt12.c0, rt12.c1, vt2.c0, rt12.c2 FROM vt2, rt12, vt1;
SELECT DISTINCT vt1.c0, rt12.c0, rt12.c1, vt2.c0, rt12.c2 FROM vt2, rt12, vt1 WHERE (((rt12.c1)/(vt1.c0)) COLLATE RTRIM) UNION SELECT DISTINCT vt1.c0, rt12.c0, rt12.c1, vt2.c0, rt12.c2 FROM vt2, rt12, vt1 WHERE ((NOT (((rt12.c1)/(vt1.c0)) COLLATE RTRIM))) UNION SELECT DISTINCT vt1.c0, rt12.c0, rt12.c1, vt2.c0, rt12.c2 FROM vt2, rt12, vt1 WHERE (((((rt12.c1)/(vt1.c0)) COLLATE RTRIM) ISNULL));
SELECT DISTINCT vt1.c0, rt12.c0, rt12.c1, vt2.c0, rt12.c2 FROM vt2, rt12, vt1;
SELECT ALL vt0.c0, vt2.c0, vt0.c1, rt12.c0 FROM rt12, vt0 INNER JOIN vt2 ON CAST((~ (rt12.c0)) AS NUMERIC) LEFT OUTER JOIN vt1 ON (((vt0.c1)) BETWEEN ((load_extension(vt2.c0, vt0.c1))) AND ((((vt0.c0) IS FALSE)))) GROUP BY vt0.c0, vt2.c0, vt0.c1, rt12.c0;
SELECT ALL vt0.c0, rt12.c1, vt0.c1, vt1.c0 FROM vt0, vt2, rt12, vt1 GROUP BY vt0.c0, rt12.c1, vt0.c1, vt1.c0;
SELECT vt0.c0, rt12.c1, vt0.c1, vt1.c0 FROM vt0, vt2, rt12, vt1 GROUP BY vt0.c0, rt12.c1, vt0.c1, vt1.c0 HAVING COUNT(((rt12.c0)|(rt12.c1))) UNION ALL SELECT ALL vt0.c0, rt12.c1, vt0.c1, vt1.c0 FROM vt0, vt2, rt12, vt1 GROUP BY vt0.c0, rt12.c1, vt0.c1, vt1.c0 HAVING (NOT (COUNT(((rt12.c0)|(rt12.c1))))) UNION ALL SELECT vt0.c0, rt12.c1, vt0.c1, vt1.c0 FROM vt0, vt2, rt12, vt1 GROUP BY vt0.c0, rt12.c1, vt0.c1, vt1.c0 HAVING ((COUNT(((rt12.c0)|(rt12.c1)))) ISNULL);
SELECT ALL vt0.c0, rt12.c1, vt0.c1, vt1.c0 FROM vt0, vt2, rt12, vt1 GROUP BY vt0.c0, rt12.c1, vt0.c1, vt1.c0;
SELECT vt0.c0, rt12.c1, vt0.c1, vt1.c0 FROM vt0, vt2, rt12, vt1 GROUP BY vt0.c0, rt12.c1, vt0.c1, vt1.c0 HAVING COUNT(((rt12.c0)|(rt12.c1))) UNION ALL SELECT ALL vt0.c0, rt12.c1, vt0.c1, vt1.c0 FROM vt0, vt2, rt12, vt1 GROUP BY vt0.c0, rt12.c1, vt0.c1, vt1.c0 HAVING (NOT (COUNT(((rt12.c0)|(rt12.c1))))) UNION ALL SELECT vt0.c0, rt12.c1, vt0.c1, vt1.c0 FROM vt0, vt2, rt12, vt1 GROUP BY vt0.c0, rt12.c1, vt0.c1, vt1.c0 HAVING ((COUNT(((rt12.c0)|(rt12.c1)))) ISNULL);
SELECT ALL vt0.c0, rt12.c1, vt0.c1, vt1.c0 FROM vt0, vt2, rt12, vt1 GROUP BY vt0.c0, rt12.c1, vt0.c1, vt1.c0;
SELECT ALL rt12.c2, vt1.c0, rt12.c1 FROM vt0, vt1, rt12;
SELECT rt12.c2, vt1.c0, rt12.c1 FROM vt0, vt1, rt12 WHERE (CASE CASE vt1.c0  WHEN '1347178758' THEN vt0.c1 END  WHEN (((vt0.c0)) NOT BETWEEN ((rt12.c2)) AND ((vt0.c1))) THEN (~ (rt12.c1)) END) UNION ALL SELECT rt12.c2, vt1.c0, rt12.c1 FROM vt0, vt1, rt12 WHERE ((NOT (CASE CASE vt1.c0  WHEN '1347178758' THEN vt0.c1 END  WHEN (((vt0.c0)) NOT BETWEEN ((rt12.c2)) AND ((vt0.c1))) THEN (~ (rt12.c1)) END))) UNION ALL SELECT rt12.c2, vt1.c0, rt12.c1 FROM vt0, vt1, rt12 WHERE (((CASE CASE vt1.c0  WHEN '1347178758' THEN vt0.c1 END  WHEN (((vt0.c0)) NOT BETWEEN ((rt12.c2)) AND ((vt0.c1))) THEN (~ (rt12.c1)) END) ISNULL));
SELECT ALL rt12.c2, vt1.c0, rt12.c1 FROM vt0, vt1, rt12;
SELECT DISTINCT vt1.c0 FROM vt0, vt1, vt2;
SELECT DISTINCT vt1.c0 FROM vt0, vt1, vt2 WHERE ((((((vt0.c1)AND(vt0.c0))))>=((vt2.c0)))) UNION SELECT DISTINCT vt1.c0 FROM vt0, vt1, vt2 WHERE ((NOT ((((((vt0.c1)AND(vt0.c0))))>=((vt2.c0)))))) UNION SELECT DISTINCT vt1.c0 FROM vt0, vt1, vt2 WHERE ((((((((vt0.c1)AND(vt0.c0))))>=((vt2.c0)))) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt0, vt1, vt2;
SELECT rt12.c2, vt0.c0, rt12.c1, vt1.c0, rt12.c0 FROM rt12, vt1, vt0, vt2 GROUP BY rt12.c2, vt0.c0, rt12.c1, vt1.c0, rt12.c0;
SELECT ALL rt12.c2, vt0.c0, rt12.c1, vt1.c0, rt12.c0 FROM rt12, vt1, vt0, vt2 WHERE (0.372333948385969) GROUP BY rt12.c2, vt0.c0, rt12.c1, vt1.c0, rt12.c0 UNION SELECT rt12.c2, vt0.c0, rt12.c1, vt1.c0, rt12.c0 FROM rt12, vt1, vt0, vt2 WHERE ((NOT (0.372333948385969))) GROUP BY rt12.c2, vt0.c0, rt12.c1, vt1.c0, rt12.c0 UNION SELECT rt12.c2, vt0.c0, rt12.c1, vt1.c0, rt12.c0 FROM rt12, vt1, vt0, vt2 WHERE (((0.372333948385969) ISNULL)) GROUP BY rt12.c2, vt0.c0, rt12.c1, vt1.c0, rt12.c0;
SELECT rt12.c2, vt0.c0, rt12.c1, vt1.c0, rt12.c0 FROM rt12, vt1, vt0, vt2 GROUP BY rt12.c2, vt0.c0, rt12.c1, vt1.c0, rt12.c0;
SELECT ALL vt0.c1, rt12.c2, rt12.c0, rt12.c1 FROM vt0, rt12, vt1 GROUP BY vt0.c1, rt12.c2, rt12.c0, rt12.c1;
SELECT vt0.c1, rt12.c2, rt12.c0, rt12.c1 FROM vt0, rt12, vt1 GROUP BY vt0.c1, rt12.c2, rt12.c0, rt12.c1 HAVING ((CAST(x'' AS BLOB)) NOT BETWEEN (((vt1.c0) NOT BETWEEN (rt12.c0) AND (MAX(COUNT(GROUP_CONCAT(COUNT(*))))))) AND (COUNT(*))) UNION ALL SELECT vt0.c1, rt12.c2, rt12.c0, rt12.c1 FROM vt0, rt12, vt1 GROUP BY vt0.c1, rt12.c2, rt12.c0, rt12.c1 HAVING (NOT (((CAST(x'' AS BLOB)) NOT BETWEEN (((vt1.c0) NOT BETWEEN (rt12.c0) AND (MAX(COUNT(GROUP_CONCAT(COUNT(*))))))) AND (COUNT(*))))) UNION ALL SELECT vt0.c1, rt12.c2, rt12.c0, rt12.c1 FROM vt0, rt12, vt1 GROUP BY vt0.c1, rt12.c2, rt12.c0, rt12.c1 HAVING ((((CAST(x'' AS BLOB)) NOT BETWEEN (((vt1.c0) NOT BETWEEN (rt12.c0) AND (MAX(COUNT(GROUP_CONCAT(COUNT(*))))))) AND (COUNT(*)))) ISNULL);
SELECT * FROM vt1;
SELECT ALL * FROM vt1 WHERE (((((vt1.c0) NOT NULL)) BETWEEN (NULLIF(vt1.c0, vt1.c0)) AND (TRIM(vt1.c0)))) UNION ALL SELECT * FROM vt1 WHERE ((NOT (((((vt1.c0) NOT NULL)) BETWEEN (NULLIF(vt1.c0, vt1.c0)) AND (TRIM(vt1.c0)))))) UNION ALL SELECT * FROM vt1 WHERE (((((((vt1.c0) NOT NULL)) BETWEEN (NULLIF(vt1.c0, vt1.c0)) AND (TRIM(vt1.c0)))) ISNULL));
SELECT * FROM vt1;
SELECT DISTINCT vt1.c0, vt0.c0, rt12.c0, rt12.c1, vt2.c0 FROM vt1, vt0, rt12 LEFT OUTER JOIN vt2 ON vt1.c0;
SELECT DISTINCT vt1.c0, vt0.c0, rt12.c0, rt12.c1, vt2.c0 FROM vt1, vt0, rt12 LEFT OUTER JOIN vt2 ON vt1.c0 WHERE ((('2041796160') NOTNULL)) UNION SELECT DISTINCT vt1.c0, vt0.c0, rt12.c0, rt12.c1, vt2.c0 FROM vt1, vt0, rt12 LEFT OUTER JOIN vt2 ON vt1.c0 WHERE ((NOT ((('2041796160') NOTNULL)))) UNION SELECT DISTINCT vt1.c0, vt0.c0, rt12.c0, rt12.c1, vt2.c0 FROM vt1, vt0, rt12 LEFT OUTER JOIN vt2 ON vt1.c0 WHERE ((((('2041796160') NOTNULL)) ISNULL));
SELECT DISTINCT vt1.c0, vt0.c0, rt12.c0, rt12.c1, vt2.c0 FROM vt1, vt0, rt12 LEFT OUTER JOIN vt2 ON vt1.c0;
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0 WHERE (NULL) GROUP BY vt0.c1 UNION SELECT vt0.c1 FROM vt0 WHERE ((NOT (NULL))) GROUP BY vt0.c1 UNION SELECT ALL vt0.c1 FROM vt0 WHERE (((NULL) ISNULL)) GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT ALL rt12.c2, vt0.c0 FROM vt0, rt12 GROUP BY rt12.c2, vt0.c0;
SELECT ALL rt12.c2, vt0.c0 FROM vt0, rt12 GROUP BY rt12.c2, vt0.c0 HAVING GROUP_CONCAT((+ (rt12.c0))) UNION ALL SELECT rt12.c2, vt0.c0 FROM vt0, rt12 GROUP BY rt12.c2, vt0.c0 HAVING (NOT (GROUP_CONCAT((+ (rt12.c0))))) UNION ALL SELECT rt12.c2, vt0.c0 FROM vt0, rt12 NOT INDEXED GROUP BY rt12.c2, vt0.c0 HAVING ((GROUP_CONCAT((+ (rt12.c0)))) ISNULL);
SELECT ALL rt12.c2, vt0.c0 FROM vt0, rt12 GROUP BY rt12.c2, vt0.c0;
SELECT ALL rt12.c2, vt0.c0 FROM vt0, rt12 GROUP BY rt12.c2, vt0.c0 HAVING GROUP_CONCAT((+ (rt12.c0))) UNION ALL SELECT rt12.c2, vt0.c0 FROM vt0, rt12 GROUP BY rt12.c2, vt0.c0 HAVING (NOT (GROUP_CONCAT((+ (rt12.c0))))) UNION ALL SELECT rt12.c2, vt0.c0 FROM vt0, rt12 NOT INDEXED GROUP BY rt12.c2, vt0.c0 HAVING ((GROUP_CONCAT((+ (rt12.c0)))) ISNULL);
SELECT ALL rt12.c2, vt0.c0 FROM vt0, rt12 GROUP BY rt12.c2, vt0.c0;
SELECT ALL * FROM vt1 NATURAL JOIN vt2;
SELECT ALL * FROM vt1 NATURAL JOIN vt2 WHERE (((((((vt1.c0))!=((vt2.c0)))))<>(((vt1.c0 IN ()))))) UNION ALL SELECT * FROM vt1 NATURAL JOIN vt2 WHERE ((NOT (((((((vt1.c0))<>((vt2.c0)))))!=(((vt1.c0 IN ()))))))) UNION ALL SELECT * FROM vt1 NATURAL JOIN vt2 WHERE (((((((((vt1.c0))<>((vt2.c0)))))<>(((vt1.c0 IN ()))))) ISNULL));
SELECT ALL * FROM vt1 NATURAL JOIN vt2;
SELECT DISTINCT * FROM vt2;
SELECT DISTINCT * FROM vt2 WHERE (((((CASE vt2.c0  WHEN vt2.c0 THEN vt2.c0 END)OR(((vt2.c0)GLOB(x'8fac')))))AND(vt2.c0))) UNION SELECT DISTINCT * FROM vt2 WHERE ((NOT (((((CASE vt2.c0  WHEN vt2.c0 THEN vt2.c0 END)OR(((vt2.c0)GLOB(x'8fac')))))AND(vt2.c0))))) UNION SELECT DISTINCT * FROM vt2 WHERE (((((((CASE vt2.c0  WHEN vt2.c0 THEN vt2.c0 END)OR(((vt2.c0)GLOB(x'8fac')))))AND(vt2.c0))) ISNULL));
SELECT DISTINCT * FROM vt2;
SELECT rt12.c1 FROM vt0, rt12, vt1 GROUP BY rt12.c1;
SELECT rt12.c1 FROM vt0, rt12, vt1 WHERE (vt1.c0) GROUP BY rt12.c1 UNION SELECT ALL rt12.c1 FROM vt0, rt12, vt1 WHERE ((NOT (vt1.c0))) GROUP BY rt12.c1 UNION SELECT ALL rt12.c1 FROM vt0, rt12, vt1 WHERE (((vt1.c0) ISNULL)) GROUP BY rt12.c1;
SELECT rt12.c1 FROM vt0, rt12, vt1 GROUP BY rt12.c1;
SELECT ALL vt0.c0, vt0.c1, vt1.c0, rt12.c2 FROM rt12, vt2, vt1, vt0 GROUP BY vt0.c0, vt0.c1, vt1.c0, rt12.c2;
SELECT ALL vt0.c0, vt0.c1, vt1.c0, rt12.c2 FROM rt12, vt2, vt1, vt0 GROUP BY vt0.c0, vt0.c1, vt1.c0, rt12.c2 HAVING NULL UNION ALL SELECT vt0.c0, vt0.c1, vt1.c0, rt12.c2 FROM rt12, vt2, vt1, vt0 GROUP BY vt0.c0, vt0.c1, vt1.c0, rt12.c2 HAVING (NOT (NULL)) UNION ALL SELECT vt0.c0, vt0.c1, vt1.c0, rt12.c2 FROM rt12, vt2, vt1, vt0 GROUP BY vt0.c0, vt0.c1, vt1.c0, rt12.c2 HAVING ((NULL) ISNULL);
SELECT ALL vt0.c0, vt0.c1, vt1.c0, rt12.c2 FROM rt12, vt2, vt1, vt0 GROUP BY vt0.c0, vt0.c1, vt1.c0, rt12.c2;
SELECT ALL vt0.c0, vt0.c1, vt1.c0, rt12.c2 FROM rt12, vt2, vt1, vt0 GROUP BY vt0.c0, vt0.c1, vt1.c0, rt12.c2 HAVING NULL UNION ALL SELECT vt0.c0, vt0.c1, vt1.c0, rt12.c2 FROM rt12, vt2, vt1, vt0 GROUP BY vt0.c0, vt0.c1, vt1.c0, rt12.c2 HAVING (NOT (NULL)) UNION ALL SELECT vt0.c0, vt0.c1, vt1.c0, rt12.c2 FROM rt12, vt2, vt1, vt0 GROUP BY vt0.c0, vt0.c1, vt1.c0, rt12.c2 HAVING ((NULL) ISNULL);
SELECT ALL vt0.c0, vt0.c1, vt1.c0, rt12.c2 FROM rt12, vt2, vt1, vt0 GROUP BY vt0.c0, vt0.c1, vt1.c0, rt12.c2;
SELECT * FROM vt0 RIGHT OUTER JOIN vt2 ON UPPER(vt2.c0) CROSS JOIN rt12 ON CASE CASE WHEN rt12.c0 THEN vt0.c1 ELSE rt12.c2 END  WHEN CAST(rt12.c0 AS BLOB) THEN ((rt12.c0)IS NOT(vt0.c1)) END;
SELECT ALL * FROM vt0 RIGHT OUTER JOIN vt2 ON UPPER(vt2.c0) CROSS JOIN rt12 ON CASE CASE WHEN rt12.c0 THEN vt0.c1 ELSE rt12.c2 END  WHEN CAST(rt12.c0 AS BLOB) THEN ((rt12.c0)IS NOT(vt0.c1)) END WHERE (json_remove(((rt12.c2)!=(vt2.c0)), ((rt12.c1) BETWEEN (vt0.c0) AND (vt0.c0)))) UNION ALL SELECT ALL * FROM vt0 RIGHT OUTER JOIN vt2 ON UPPER(vt2.c0) CROSS JOIN rt12 ON CASE CASE WHEN rt12.c0 THEN vt0.c1 ELSE rt12.c2 END  WHEN CAST(rt12.c0 AS BLOB) THEN ((rt12.c0)IS NOT(vt0.c1)) END WHERE ((NOT (json_remove(((rt12.c2)<>(vt2.c0)), ((rt12.c1) BETWEEN (vt0.c0) AND (vt0.c0)))))) UNION ALL SELECT * FROM vt0 RIGHT OUTER JOIN vt2 ON UPPER(vt2.c0) CROSS JOIN rt12 ON CASE CASE WHEN rt12.c0 THEN vt0.c1 ELSE rt12.c2 END  WHEN CAST(rt12.c0 AS BLOB) THEN ((rt12.c0)IS NOT(vt0.c1)) END WHERE (((json_remove(((rt12.c2)!=(vt2.c0)), ((rt12.c1) BETWEEN (vt0.c0) AND (vt0.c0)))) ISNULL));
SELECT DISTINCT vt2.c0 FROM vt2;
SELECT DISTINCT vt2.c0 FROM vt2 WHERE (CASE WHEN ((vt2.c0)IS(vt2.c0)) THEN ((vt2.c0)<(-2.000083598E9)) ELSE ((0.4229945570138506)=(vt2.c0)) END) UNION SELECT DISTINCT vt2.c0 FROM vt2 WHERE ((NOT (CASE WHEN ((vt2.c0)IS(vt2.c0)) THEN ((vt2.c0)<(-2.000083598E9)) ELSE ((0.4229945570138506)=(vt2.c0)) END))) UNION SELECT DISTINCT vt2.c0 FROM vt2 WHERE (((CASE WHEN ((vt2.c0)IS(vt2.c0)) THEN ((vt2.c0)<(-2.000083598E9)) ELSE ((0.4229945570138506)=(vt2.c0)) END) ISNULL));
SELECT DISTINCT vt2.c0 FROM vt2;
SELECT ALL vt1.c0, rt12.c0, rt12.c1, rt12.c2 FROM vt1, rt12 GROUP BY vt1.c0, rt12.c0, rt12.c1, rt12.c2;
SELECT ALL vt1.c0, rt12.c0, rt12.c1, rt12.c2 FROM vt1, rt12 WHERE ((- (rt12.c0)) COLLATE BINARY) GROUP BY vt1.c0, rt12.c0, rt12.c1, rt12.c2 UNION SELECT vt1.c0, rt12.c0, rt12.c1, rt12.c2 FROM vt1, rt12 WHERE ((NOT ((- (rt12.c0)) COLLATE BINARY))) GROUP BY vt1.c0, rt12.c0, rt12.c1, rt12.c2 UNION SELECT ALL vt1.c0, rt12.c0, rt12.c1, rt12.c2 FROM vt1, rt12 WHERE ((((- (rt12.c0)) COLLATE BINARY) ISNULL)) GROUP BY vt1.c0, rt12.c0, rt12.c1, rt12.c2;
SELECT ALL vt1.c0, rt12.c0, rt12.c1, rt12.c2 FROM vt1, rt12 GROUP BY vt1.c0, rt12.c0, rt12.c1, rt12.c2;
SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING AVG(x'8595') UNION ALL SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING (NOT (AVG(x'8595'))) UNION ALL SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING ((AVG(x'8595')) ISNULL);
SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING AVG(x'8595') UNION ALL SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING (NOT (AVG(x'8595'))) UNION ALL SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING ((AVG(x'8595')) ISNULL);
SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT * FROM vt1;
SELECT * FROM vt1 WHERE (vt1.c0) UNION ALL SELECT ALL * FROM vt1 WHERE ((NOT (vt1.c0))) UNION ALL SELECT * FROM vt1 WHERE (((vt1.c0) ISNULL));
SELECT * FROM vt1;
SELECT DISTINCT rt12.c0 FROM rt12;
SELECT DISTINCT rt12.c0 FROM rt12 WHERE (NULL) UNION SELECT DISTINCT rt12.c0 FROM rt12 WHERE ((NOT (NULL))) UNION SELECT DISTINCT rt12.c0 FROM rt12 WHERE (((NULL) ISNULL));
SELECT DISTINCT rt12.c0 FROM rt12;
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0 WHERE (MIN((((vt0.c1))<((vt0.c0))), ((((vt0.c1)AND(vt0.c1)))OR(vt0.c0)))) GROUP BY vt0.c1, vt0.c0 UNION SELECT ALL vt0.c1, vt0.c0 FROM vt0 WHERE ((NOT (MIN((((vt0.c1))<((vt0.c0))), ((((vt0.c1)AND(vt0.c1)))OR(vt0.c0)))))) GROUP BY vt0.c1, vt0.c0 UNION SELECT vt0.c1, vt0.c0 FROM vt0 WHERE (((MIN((((vt0.c1))<((vt0.c0))), ((((vt0.c1)AND(vt0.c1)))OR(vt0.c0)))) ISNULL)) GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT rt12.c0, rt12.c1, rt12.c2 FROM rt12 GROUP BY rt12.c0, rt12.c1, rt12.c2;
SELECT ALL rt12.c0, rt12.c1, rt12.c2 FROM rt12 GROUP BY rt12.c0, rt12.c1, rt12.c2 HAVING AVG(COUNT(*)) UNION ALL SELECT rt12.c0, rt12.c1, rt12.c2 FROM rt12 GROUP BY rt12.c0, rt12.c1, rt12.c2 HAVING (NOT (AVG(COUNT(*)))) UNION ALL SELECT rt12.c0, rt12.c1, rt12.c2 FROM rt12 NOT INDEXED GROUP BY rt12.c0, rt12.c1, rt12.c2 HAVING ((AVG(COUNT(*))) ISNULL);
SELECT ALL rt12.c0, rt12.c1 FROM vt1, rt12, vt2 LEFT OUTER JOIN vt0 ON CASE rt12.c1 COLLATE BINARY  WHEN CAST('days' AS BLOB) THEN (((rt12.c0))<((rt12.c1))) END;
SELECT ALL rt12.c0, rt12.c1 FROM vt1, rt12, vt2 LEFT OUTER JOIN vt0 ON CASE rt12.c1 COLLATE BINARY  WHEN CAST('days' AS BLOB) THEN (((rt12.c0))<((rt12.c1))) END WHERE (((((((((((vt0.c0)OR(vt0.c1)))AND(vt2.c0)))OR(2120036628)))OR(rt12.c0))) NOT BETWEEN ((vt1.c0 IN ())) AND (((rt12.c2)LIKE(vt2.c0))))) UNION ALL SELECT rt12.c0, rt12.c1 FROM vt1, rt12, vt2 LEFT OUTER JOIN vt0 ON CASE rt12.c1 COLLATE BINARY  WHEN CAST('days' AS BLOB) THEN (((rt12.c0))<((rt12.c1))) END WHERE ((NOT (((((((((((vt0.c0)OR(vt0.c1)))AND(vt2.c0)))OR(2120036628)))OR(rt12.c0))) NOT BETWEEN ((vt1.c0 IN ())) AND (((rt12.c2)LIKE(vt2.c0))))))) UNION ALL SELECT rt12.c0, rt12.c1 FROM vt1, rt12, vt2 LEFT OUTER JOIN vt0 ON CASE rt12.c1 COLLATE BINARY  WHEN CAST('days' AS BLOB) THEN (((rt12.c0))<((rt12.c1))) END WHERE (((((((((((((vt0.c0)OR(vt0.c1)))AND(vt2.c0)))OR(2120036628)))OR(rt12.c0))) NOT BETWEEN ((vt1.c0 IN ())) AND (((rt12.c2)LIKE(vt2.c0))))) ISNULL));
SELECT ALL rt12.c0, rt12.c1 FROM vt1, rt12, vt2 LEFT OUTER JOIN vt0 ON CASE rt12.c1 COLLATE BINARY  WHEN CAST('days' AS BLOB) THEN (((rt12.c0))<((rt12.c1))) END;
SELECT DISTINCT rt12.c2, vt0.c1, vt0.c0 FROM vt2, vt0, rt12;
SELECT DISTINCT rt12.c2, vt0.c1, vt0.c0 FROM vt2, vt0, rt12 WHERE ((((vt0.c1)) NOT BETWEEN ((((vt0.c1) NOT NULL))) AND (((- (rt12.c1)))))) UNION SELECT DISTINCT rt12.c2, vt0.c1, vt0.c0 FROM vt2, vt0, rt12 WHERE ((NOT ((((vt0.c1)) NOT BETWEEN ((((vt0.c1) NOT NULL))) AND (((- (rt12.c1)))))))) UNION SELECT DISTINCT rt12.c2, vt0.c1, vt0.c0 FROM vt2, vt0, rt12 WHERE ((((((vt0.c1)) NOT BETWEEN ((((vt0.c1) NOT NULL))) AND (((- (rt12.c1)))))) ISNULL));
SELECT DISTINCT rt12.c2, vt0.c1, vt0.c0 FROM vt2, vt0, rt12;
SELECT ALL vt2.c0, rt12.c2, rt12.c1 FROM vt2, rt12, vt1 GROUP BY vt2.c0, rt12.c2, rt12.c1;
SELECT vt2.c0, rt12.c2, rt12.c1 FROM vt2, rt12, vt1 WHERE (rt12.c0) GROUP BY vt2.c0, rt12.c2, rt12.c1 UNION SELECT ALL vt2.c0, rt12.c2, rt12.c1 FROM vt2, rt12, vt1 WHERE ((NOT (rt12.c0))) GROUP BY vt2.c0, rt12.c2, rt12.c1 UNION SELECT vt2.c0, rt12.c2, rt12.c1 FROM vt2, rt12, vt1 WHERE (((rt12.c0) ISNULL)) GROUP BY vt2.c0, rt12.c2, rt12.c1;
SELECT ALL vt2.c0, rt12.c2, rt12.c1 FROM vt2, rt12, vt1 GROUP BY vt2.c0, rt12.c2, rt12.c1;
SELECT ALL rt12.c1, rt12.c0 FROM rt12 GROUP BY rt12.c1, rt12.c0;
SELECT ALL rt12.c1, rt12.c0 FROM rt12 GROUP BY rt12.c1, rt12.c0 HAVING SUM((rt12.c0 IN (MAX(TOTAL(rt12.c0)), MIN(GROUP_CONCAT(AVG(COUNT(rt12.c1))))))) UNION ALL SELECT rt12.c1, rt12.c0 FROM rt12 GROUP BY rt12.c1, rt12.c0 HAVING (NOT (SUM((rt12.c0 IN (MAX(TOTAL(rt12.c0)), MIN(GROUP_CONCAT(AVG(COUNT(rt12.c1))))))))) UNION ALL SELECT ALL rt12.c1, rt12.c0 FROM rt12 GROUP BY rt12.c1, rt12.c0 HAVING ((SUM((rt12.c0 IN (MAX(TOTAL(rt12.c0)), MIN(GROUP_CONCAT(AVG(COUNT(rt12.c1)))))))) ISNULL);
SELECT ALL vt0.c0, vt0.c1 FROM vt0;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 WHERE ((((NULLIF(vt0.c0, vt0.c0)))<>((((vt0.c0)/(0.14129296969100447)))))) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt0 WHERE ((NOT ((((NULLIF(vt0.c0, vt0.c0)))!=((((vt0.c0)/(0.14129296969100447)))))))) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt0 WHERE ((((((NULLIF(vt0.c0, vt0.c0)))<>((((vt0.c0)/(0.14129296969100447)))))) ISNULL));
SELECT ALL vt0.c0, vt0.c1 FROM vt0;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (CAST((((('-1491387378')AND(vt1.c0)))AND(vt1.c0)) AS NUMERIC)) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (CAST((((('-1491387378')AND(vt1.c0)))AND(vt1.c0)) AS NUMERIC)))) UNION SELECT DISTINCT * FROM vt1 WHERE (((CAST((((('-1491387378')AND(vt1.c0)))AND(vt1.c0)) AS NUMERIC)) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT ALL vt2.c0, vt1.c0 FROM vt2 CROSS JOIN vt1 ON ((vt1.c0) BETWEEN (CAST(vt1.c0 AS INTEGER)) AND ('>-,~ᰗjq')) GROUP BY vt2.c0, vt1.c0;
SELECT ALL vt2.c0, vt1.c0 FROM vt2 CROSS JOIN vt1 ON ((vt1.c0) BETWEEN (CAST(vt1.c0 AS INTEGER)) AND ('>-,~ᰗjq')) WHERE ('㺓+') GROUP BY vt2.c0, vt1.c0 UNION SELECT vt2.c0, vt1.c0 FROM vt2 CROSS JOIN vt1 ON ((vt1.c0) BETWEEN (CAST(vt1.c0 AS INTEGER)) AND ('>-,~ᰗjq')) WHERE ((NOT ('㺓+'))) GROUP BY vt2.c0, vt1.c0 UNION SELECT ALL vt2.c0, vt1.c0 FROM vt2 CROSS JOIN vt1 ON ((vt1.c0) BETWEEN (CAST(vt1.c0 AS INTEGER)) AND ('>-,~ᰗjq')) WHERE ((('㺓+') ISNULL)) GROUP BY vt2.c0, vt1.c0;
SELECT ALL vt2.c0, vt1.c0 FROM vt2 CROSS JOIN vt1 ON ((vt1.c0) BETWEEN (CAST(vt1.c0 AS INTEGER)) AND ('>-,~ᰗjq')) GROUP BY vt2.c0, vt1.c0;
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING SUM(COUNT(*)) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING (NOT (SUM(COUNT(*)))) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING ((SUM(COUNT(*))) ISNULL);
SELECT ALL * FROM vt0;
SELECT * FROM vt0 WHERE (((vt0.c0 COLLATE NOCASE) IS FALSE)) UNION ALL SELECT * FROM vt0 WHERE ((NOT (((vt0.c0 COLLATE NOCASE) IS FALSE)))) UNION ALL SELECT * FROM vt0 WHERE (((((vt0.c0 COLLATE NOCASE) IS FALSE)) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT * FROM rt12 NATURAL JOIN vt1;
SELECT DISTINCT * FROM rt12 NATURAL JOIN vt1 WHERE (((('T*c㵶D<')&(vt1.c0)) IN ())) UNION SELECT DISTINCT * FROM rt12 NATURAL JOIN vt1 WHERE ((NOT (((('T*c㵶D<')&(vt1.c0)) IN ())))) UNION SELECT DISTINCT * FROM rt12 NATURAL JOIN vt1 WHERE (((((('T*c㵶D<')&(vt1.c0)) IN ())) ISNULL));
SELECT DISTINCT * FROM rt12 NATURAL JOIN vt1;
SELECT ALL rt12.c0, rt12.c2 FROM rt12 GROUP BY rt12.c0, rt12.c2;
SELECT rt12.c0, rt12.c2 FROM rt12 WHERE ((((rt12.c2)>=(rt12.c1)) IN ((rt12.c0 IN ())))) GROUP BY rt12.c0, rt12.c2 UNION SELECT ALL rt12.c0, rt12.c2 FROM rt12 WHERE ((NOT ((((rt12.c2)>=(rt12.c1)) IN ((rt12.c0 IN ())))))) GROUP BY rt12.c0, rt12.c2 UNION SELECT rt12.c0, rt12.c2 FROM rt12 WHERE ((((((rt12.c2)>=(rt12.c1)) IN ((rt12.c0 IN ())))) ISNULL)) GROUP BY rt12.c0, rt12.c2;
SELECT ALL rt12.c0, rt12.c2 FROM rt12 GROUP BY rt12.c0, rt12.c2;
SELECT vt1.c0, vt0.c1, rt12.c2, rt12.c1 FROM vt1, vt0, rt12 GROUP BY vt1.c0, vt0.c1, rt12.c2, rt12.c1;
SELECT ALL vt1.c0, vt0.c1, rt12.c2, rt12.c1 FROM vt1, vt0, rt12 GROUP BY vt1.c0, vt0.c1, rt12.c2, rt12.c1 HAVING COUNT(*) UNION ALL SELECT ALL vt1.c0, vt0.c1, rt12.c2, rt12.c1 FROM vt1 NOT INDEXED, vt0, rt12 GROUP BY vt1.c0, vt0.c1, rt12.c2, rt12.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt1.c0, vt0.c1, rt12.c2, rt12.c1 FROM vt1, vt0, rt12 GROUP BY vt1.c0, vt0.c1, rt12.c2, rt12.c1 HAVING ((COUNT(*)) ISNULL);
SELECT vt1.c0, vt0.c1, rt12.c2, rt12.c1 FROM vt1, vt0, rt12 GROUP BY vt1.c0, vt0.c1, rt12.c2, rt12.c1;
SELECT ALL vt1.c0, vt0.c1, rt12.c2, rt12.c1 FROM vt1, vt0, rt12 GROUP BY vt1.c0, vt0.c1, rt12.c2, rt12.c1 HAVING COUNT(*) UNION ALL SELECT ALL vt1.c0, vt0.c1, rt12.c2, rt12.c1 FROM vt1 NOT INDEXED, vt0, rt12 GROUP BY vt1.c0, vt0.c1, rt12.c2, rt12.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt1.c0, vt0.c1, rt12.c2, rt12.c1 FROM vt1, vt0, rt12 GROUP BY vt1.c0, vt0.c1, rt12.c2, rt12.c1 HAVING ((COUNT(*)) ISNULL);
SELECT vt1.c0, vt0.c1, rt12.c2, rt12.c1 FROM vt1, vt0, rt12 GROUP BY vt1.c0, vt0.c1, rt12.c2, rt12.c1;
SELECT TOTAL((((((rt12.c2, vt0.c1, vt1.c0))==((vt0.c1, vt0.c0, rt12.c2)))) NOT BETWEEN (74160074) AND (LTRIM(vt0.c1, vt0.c1)))) FROM vt1, rt12, vt0;
SELECT * FROM vt1, rt12 LEFT OUTER JOIN vt0 ON -6.45913713E8 RIGHT OUTER JOIN vt2 ON CASE WHEN CAST(vt2.c0 AS TEXT) THEN rt12.c0 COLLATE BINARY ELSE ((rt12.c2)&(vt0.c1)) END;
SELECT ALL * FROM vt1, rt12 LEFT OUTER JOIN vt0 ON -6.45913713E8 RIGHT OUTER JOIN vt2 ON CASE WHEN CAST(vt2.c0 AS TEXT) THEN rt12.c0 COLLATE BINARY ELSE ((rt12.c2)&(vt0.c1)) END WHERE ((('427996900') NOT BETWEEN ((((vt2.c0, rt12.c0, vt0.c0))!=((rt12.c1, vt1.c0, rt12.c0)))) AND (((1.418219308E9) BETWEEN (vt1.c0) AND (vt0.c1))))) UNION ALL SELECT * FROM vt1, rt12 LEFT OUTER JOIN vt0 ON -6.45913713E8 RIGHT OUTER JOIN vt2 ON CASE WHEN CAST(vt2.c0 AS TEXT) THEN rt12.c0 COLLATE BINARY ELSE ((rt12.c2)&(vt0.c1)) END WHERE ((NOT ((('427996900') NOT BETWEEN ((((vt2.c0, rt12.c0, vt0.c0))<>((rt12.c1, vt1.c0, rt12.c0)))) AND (((1.418219308E9) BETWEEN (vt1.c0) AND (vt0.c1))))))) UNION ALL SELECT ALL * FROM vt1, rt12 LEFT OUTER JOIN vt0 ON -6.45913713E8 RIGHT OUTER JOIN vt2 ON CASE WHEN CAST(vt2.c0 AS TEXT) THEN rt12.c0 COLLATE BINARY ELSE ((rt12.c2)&(vt0.c1)) END WHERE ((((('427996900') NOT BETWEEN ((((vt2.c0, rt12.c0, vt0.c0))!=((rt12.c1, vt1.c0, rt12.c0)))) AND (((1.418219308E9) BETWEEN (vt1.c0) AND (vt0.c1))))) ISNULL));
SELECT * FROM vt1, rt12 LEFT OUTER JOIN vt0 ON -6.45913713E8 RIGHT OUTER JOIN vt2 ON CASE WHEN CAST(vt2.c0 AS TEXT) THEN rt12.c0 COLLATE BINARY ELSE ((rt12.c2)&(vt0.c1)) END;
SELECT DISTINCT * FROM vt1, rt12;
SELECT DISTINCT * FROM vt1, rt12 WHERE (0Xffffffffd9bc374e) UNION SELECT DISTINCT * FROM vt1, rt12 WHERE ((NOT (0Xffffffffd9bc374e))) UNION SELECT DISTINCT * FROM vt1, rt12 WHERE (((0Xffffffffd9bc374e) ISNULL));
SELECT DISTINCT * FROM vt1, rt12;
SELECT ALL vt0.c0, vt2.c0 FROM vt0 NATURAL JOIN vt2 GROUP BY vt0.c0, vt2.c0;
SELECT ALL vt0.c0, vt2.c0 FROM vt0 NATURAL JOIN vt2 WHERE (LIKELY(DISTINCT ((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)))) GROUP BY vt0.c0, vt2.c0 UNION SELECT vt0.c0, vt2.c0 FROM vt0 NATURAL JOIN vt2 WHERE ((NOT (LIKELY(DISTINCT ((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)))))) GROUP BY vt0.c0, vt2.c0 UNION SELECT vt0.c0, vt2.c0 FROM vt0 NATURAL JOIN vt2 WHERE (((LIKELY(DISTINCT ((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)))) ISNULL)) GROUP BY vt0.c0, vt2.c0;
SELECT ALL vt0.c0, vt2.c0 FROM vt0 NATURAL JOIN vt2 GROUP BY vt0.c0, vt2.c0;
SELECT ALL rt12.c1, rt12.c0, rt12.c2 FROM rt12 GROUP BY rt12.c1, rt12.c0, rt12.c2;
SELECT rt12.c1, rt12.c0, rt12.c2 FROM rt12 GROUP BY rt12.c1, rt12.c0, rt12.c2 HAVING MIN(((((rt12.c2)OR(COUNT(*))))OR(rt12.c2))) UNION ALL SELECT ALL rt12.c1, rt12.c0, rt12.c2 FROM rt12 GROUP BY rt12.c1, rt12.c0, rt12.c2 HAVING (NOT (MIN(((((rt12.c2)OR(COUNT(*))))OR(rt12.c2))))) UNION ALL SELECT rt12.c1, rt12.c0, rt12.c2 FROM rt12 GROUP BY rt12.c1, rt12.c0, rt12.c2 HAVING ((MIN(((((rt12.c2)OR(COUNT(*))))OR(rt12.c2)))) ISNULL);
SELECT ALL vt1.c0 FROM vt2, vt1;
SELECT vt1.c0 FROM vt2, vt1 WHERE (COALESCE(DISTINCT ((NULL) BETWEEN (vt2.c0) AND (vt1.c0)), UPPER(vt2.c0))) UNION ALL SELECT ALL vt1.c0 FROM vt2, vt1 WHERE ((NOT (COALESCE(DISTINCT ((NULL) BETWEEN (vt2.c0) AND (vt1.c0)), UPPER(vt2.c0))))) UNION ALL SELECT ALL vt1.c0 FROM vt2, vt1 WHERE (((COALESCE(DISTINCT ((NULL) BETWEEN (vt2.c0) AND (vt1.c0)), UPPER(vt2.c0))) ISNULL));
SELECT ALL vt1.c0 FROM vt2, vt1;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((vt1.c0 IN ()) IN ())) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT (((vt1.c0 IN ()) IN ())))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((((vt1.c0 IN ()) IN ())) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT ALL vt1.c0, vt2.c0, rt12.c2 FROM vt0, vt2, rt12 NOT INDEXED, vt1 GROUP BY vt1.c0, vt2.c0, rt12.c2;
SELECT ALL vt1.c0, vt2.c0, rt12.c2 FROM vt0, vt2, rt12, vt1 WHERE (CAST((vt0.c0 IN ()) AS NUMERIC)) GROUP BY vt1.c0, vt2.c0, rt12.c2 UNION SELECT ALL vt1.c0, vt2.c0, rt12.c2 FROM vt0, vt2, rt12, vt1 WHERE ((NOT (CAST((vt0.c0 IN ()) AS NUMERIC)))) GROUP BY vt1.c0, vt2.c0, rt12.c2 UNION SELECT vt1.c0, vt2.c0, rt12.c2 FROM vt0, vt2, rt12, vt1 WHERE (((CAST((vt0.c0 IN ()) AS NUMERIC)) ISNULL)) GROUP BY vt1.c0, vt2.c0, rt12.c2;
SELECT ALL vt1.c0, vt2.c0, rt12.c2 FROM vt0, vt2, rt12 NOT INDEXED, vt1 GROUP BY vt1.c0, vt2.c0, rt12.c2;
SELECT ALL rt12.c2, vt2.c0, vt1.c0, rt12.c1, vt0.c1, vt0.c0, rt12.c0 FROM vt1, vt0 RIGHT OUTER JOIN rt12 ON ((((((((((-6.06981236E8)/(rt12.c0)))AND(((vt1.c0) BETWEEN (vt0.c1) AND ('')))))AND(((((vt1.c0)OR(rt12.c2)))AND(NULL)))))AND(((vt0.c0) NOT NULL))))OR(((rt12.c2)|(NULL)))) FULL OUTER JOIN vt2 ON vt2.c0 GROUP BY rt12.c2, vt2.c0, vt1.c0, rt12.c1, vt0.c1, vt0.c0, rt12.c0;
SELECT rt12.c2, vt2.c0, vt1.c0, rt12.c1, vt0.c1, vt0.c0, rt12.c0 FROM vt1, vt0 RIGHT OUTER JOIN rt12 ON ((((((((((-6.06981236E8)/(rt12.c0)))AND(((vt1.c0) BETWEEN (vt0.c1) AND ('')))))AND(((((vt1.c0)OR(rt12.c2)))AND(NULL)))))AND(((vt0.c0) NOT NULL))))OR(((rt12.c2)|(NULL)))) FULL OUTER JOIN vt2 ON vt2.c0 GROUP BY rt12.c2, vt2.c0, vt1.c0, rt12.c1, vt0.c1, vt0.c0, rt12.c0 HAVING LIKELY(COALESCE(vt0.c0, TOTAL(COUNT(COUNT(rt12.c0))), SUM(rt12.c2), COUNT(*))) UNION ALL SELECT rt12.c2, vt2.c0, vt1.c0, rt12.c1, vt0.c1, vt0.c0, rt12.c0 FROM vt1, vt0 RIGHT OUTER JOIN rt12 ON ((((((((((-6.06981236E8)/(rt12.c0)))AND(((vt1.c0) BETWEEN (vt0.c1) AND ('')))))AND(((((vt1.c0)OR(rt12.c2)))AND(NULL)))))AND(((vt0.c0) NOT NULL))))OR(((rt12.c2)|(NULL)))) FULL OUTER JOIN vt2 ON vt2.c0 GROUP BY rt12.c2, vt2.c0, vt1.c0, rt12.c1, vt0.c1, vt0.c0, rt12.c0 HAVING (NOT (LIKELY(COALESCE(vt0.c0, TOTAL(COUNT(COUNT(rt12.c0))), SUM(rt12.c2), COUNT(*))))) UNION ALL SELECT ALL rt12.c2, vt2.c0, vt1.c0, rt12.c1, vt0.c1, vt0.c0, rt12.c0 FROM vt1, vt0 RIGHT OUTER JOIN rt12 ON ((((((((((-6.06981236E8)/(rt12.c0)))AND(((vt1.c0) BETWEEN (vt0.c1) AND ('')))))AND(((((vt1.c0)OR(rt12.c2)))AND(NULL)))))AND(((vt0.c0) NOT NULL))))OR(((rt12.c2)|(NULL)))) FULL OUTER JOIN vt2 ON vt2.c0 GROUP BY rt12.c2, vt2.c0, vt1.c0, rt12.c1, vt0.c1, vt0.c0, rt12.c0 HAVING ((LIKELY(COALESCE(vt0.c0, TOTAL(COUNT(COUNT(rt12.c0))), SUM(rt12.c2), COUNT(*)))) ISNULL);
SELECT ALL SUM((LIKELIHOOD(rt12.c1, 0.11579439167043926) IN ())) FROM vt0, rt12, vt2 ORDER BY CASE ((rt12.c1) NOT BETWEEN (rt12.c1) AND (rt12.c0))  WHEN (vt0.c1 IN ()) THEN ((vt2.c0) NOTNULL) END ASC;
SELECT ALL vt0.c1, vt1.c0, rt12.c0, rt12.c1, rt12.c2 FROM vt0, vt1, rt12, vt2;
SELECT ALL vt0.c1, vt1.c0, rt12.c0, rt12.c1, rt12.c2 FROM vt0, vt1, rt12, vt2 WHERE (((-27282935)OR(rt12.c0 COLLATE NOCASE))) UNION ALL SELECT ALL vt0.c1, vt1.c0, rt12.c0, rt12.c1, rt12.c2 FROM vt0, vt1, rt12, vt2 WHERE ((NOT (((-27282935)OR(rt12.c0 COLLATE NOCASE))))) UNION ALL SELECT vt0.c1, vt1.c0, rt12.c0, rt12.c1, rt12.c2 FROM vt0, vt1, rt12, vt2 WHERE (((((-27282935)OR(rt12.c0 COLLATE NOCASE))) ISNULL));
SELECT ALL vt0.c1, vt1.c0, rt12.c0, rt12.c1, rt12.c2 FROM vt0, vt1, rt12, vt2;
SELECT DISTINCT * FROM vt0, vt2;
SELECT DISTINCT * FROM vt0, vt2 WHERE (((((((vt0.c0))>=((vt0.c1)))))>((((vt0.c0)<>(vt2.c0)))))) UNION SELECT DISTINCT * FROM vt0, vt2 WHERE ((NOT (((((((vt0.c0))>=((vt0.c1)))))>((((vt0.c0)<>(vt2.c0)))))))) UNION SELECT DISTINCT * FROM vt0, vt2 WHERE (((((((((vt0.c0))>=((vt0.c1)))))>((((vt0.c0)!=(vt2.c0)))))) ISNULL));
SELECT DISTINCT * FROM vt0, vt2;
SELECT ALL rt12.c0, rt12.c2 FROM rt12 GROUP BY rt12.c0, rt12.c2;
SELECT rt12.c0, rt12.c2 FROM rt12 WHERE (CASE (rt12.c0 IN (rt12.c2))  WHEN (NOT (rt12.c1)) THEN rt12.c0 ELSE ((((((((rt12.c1)OR(rt12.c0)))AND(rt12.c1)))AND(rt12.c2)))AND(rt12.c0)) END) GROUP BY rt12.c0, rt12.c2 UNION SELECT rt12.c0, rt12.c2 FROM rt12 WHERE ((NOT (CASE (rt12.c0 IN (rt12.c2))  WHEN (NOT (rt12.c1)) THEN rt12.c0 ELSE ((((((((rt12.c1)OR(rt12.c0)))AND(rt12.c1)))AND(rt12.c2)))AND(rt12.c0)) END))) GROUP BY rt12.c0, rt12.c2 UNION SELECT ALL rt12.c0, rt12.c2 FROM rt12 WHERE (((CASE (rt12.c0 IN (rt12.c2))  WHEN (NOT (rt12.c1)) THEN rt12.c0 ELSE ((((((((rt12.c1)OR(rt12.c0)))AND(rt12.c1)))AND(rt12.c2)))AND(rt12.c0)) END) ISNULL)) GROUP BY rt12.c0, rt12.c2;
SELECT ALL rt12.c0, rt12.c2 FROM rt12 GROUP BY rt12.c0, rt12.c2;
SELECT ALL vt2.c0 FROM vt2, vt1, rt12, vt0 GROUP BY vt2.c0;
SELECT ALL vt2.c0 FROM vt2, vt1, rt12, vt0 GROUP BY vt2.c0 HAVING (((AVG(MAX('-1265080388')), MIN(rt12.c0), vt2.c0)) NOT BETWEEN ((rt12.c2 COLLATE BINARY, (MAX(rt12.c1) IN ()), (MAX(AVG(vt1.c0)) IN ()))) AND ((TOTAL(AVG(vt2.c0)), (+ (vt2.c0)), AVG(MIN(SUM(GROUP_CONCAT(rt12.c1))))))) UNION ALL SELECT vt2.c0 FROM vt2, vt1, rt12, vt0 GROUP BY vt2.c0 HAVING (NOT ((((AVG(MAX('-1265080388')), MIN(rt12.c0), vt2.c0)) NOT BETWEEN ((rt12.c2 COLLATE BINARY, (MAX(rt12.c1) IN ()), (MAX(AVG(vt1.c0)) IN ()))) AND ((TOTAL(AVG(vt2.c0)), (+ (vt2.c0)), AVG(MIN(SUM(GROUP_CONCAT(rt12.c1))))))))) UNION ALL SELECT ALL vt2.c0 FROM vt2, vt1, rt12, vt0 GROUP BY vt2.c0 HAVING (((((AVG(MAX('-1265080388')), MIN(rt12.c0), vt2.c0)) NOT BETWEEN ((rt12.c2 COLLATE BINARY, (MAX(rt12.c1) IN ()), (MAX(AVG(vt1.c0)) IN ()))) AND ((TOTAL(AVG(vt2.c0)), (+ (vt2.c0)), AVG(MIN(SUM(GROUP_CONCAT(rt12.c1)))))))) ISNULL);
SELECT * FROM rt12 FULL OUTER JOIN vt0 ON ((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c1)))AND(vt0.c0)))||(((rt12.c0) IS FALSE)));
SELECT * FROM rt12 FULL OUTER JOIN vt0 ON ((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c1)))AND(vt0.c0)))||(((rt12.c0) IS FALSE))) WHERE (UNLIKELY(DISTINCT rt12.c0)) UNION ALL SELECT * FROM rt12 FULL OUTER JOIN vt0 ON ((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c1)))AND(vt0.c0)))||(((rt12.c0) IS FALSE))) WHERE ((NOT (UNLIKELY(DISTINCT rt12.c0)))) UNION ALL SELECT * FROM rt12 FULL OUTER JOIN vt0 ON ((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c1)))AND(vt0.c0)))||(((rt12.c0) IS FALSE))) WHERE (((UNLIKELY(DISTINCT rt12.c0)) ISNULL));
SELECT * FROM rt12 FULL OUTER JOIN vt0 ON ((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c1)))AND(vt0.c0)))||(((rt12.c0) IS FALSE)));
SELECT DISTINCT * FROM rt12, vt0, vt1;
SELECT DISTINCT * FROM rt12, vt0, vt1 WHERE (LOWER(((((rt12.c0)OR(rt12.c2)))AND(vt1.c0)))) UNION SELECT DISTINCT * FROM rt12, vt0, vt1 WHERE ((NOT (LOWER(((((rt12.c0)OR(rt12.c2)))AND(vt1.c0)))))) UNION SELECT DISTINCT * FROM rt12, vt0, vt1 WHERE (((LOWER(((((rt12.c0)OR(rt12.c2)))AND(vt1.c0)))) ISNULL));
SELECT DISTINCT * FROM rt12, vt0, vt1;
SELECT ALL rt12.c2 FROM vt2, rt12, vt0 GROUP BY rt12.c2;
SELECT rt12.c2 FROM vt2, rt12, vt0 WHERE ((((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((rt12.c2))))OR(((rt12.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))AND(((rt12.c0)<(vt2.c0))))) GROUP BY rt12.c2 UNION SELECT ALL rt12.c2 FROM vt2, rt12, vt0 WHERE ((NOT ((((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((rt12.c2))))OR(((rt12.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))AND(((rt12.c0)<(vt2.c0))))))) GROUP BY rt12.c2 UNION SELECT rt12.c2 FROM vt2, rt12, vt0 WHERE ((((((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((rt12.c2))))OR(((rt12.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))AND(((rt12.c0)<(vt2.c0))))) ISNULL)) GROUP BY rt12.c2;
SELECT ALL rt12.c2 FROM vt2, rt12, vt0 GROUP BY rt12.c2;
SELECT vt1.c0, rt12.c1 FROM vt1, rt12 GROUP BY vt1.c0, rt12.c1;
SELECT vt1.c0, rt12.c1 FROM vt1, rt12 GROUP BY vt1.c0, rt12.c1 HAVING (COUNT(*) IN ()) UNION ALL SELECT vt1.c0, rt12.c1 FROM vt1, rt12 GROUP BY vt1.c0, rt12.c1 HAVING (NOT ((COUNT(*) IN ()))) UNION ALL SELECT vt1.c0, rt12.c1 FROM vt1, rt12 GROUP BY vt1.c0, rt12.c1 HAVING (((COUNT(*) IN ())) ISNULL);
SELECT vt1.c0, rt12.c1 FROM vt1, rt12 GROUP BY vt1.c0, rt12.c1;
SELECT vt1.c0, rt12.c1 FROM vt1, rt12 GROUP BY vt1.c0, rt12.c1 HAVING (COUNT(*) IN ()) UNION ALL SELECT vt1.c0, rt12.c1 FROM vt1, rt12 GROUP BY vt1.c0, rt12.c1 HAVING (NOT ((COUNT(*) IN ()))) UNION ALL SELECT vt1.c0, rt12.c1 FROM vt1, rt12 GROUP BY vt1.c0, rt12.c1 HAVING (((COUNT(*) IN ())) ISNULL);
SELECT vt1.c0, rt12.c1 FROM vt1, rt12 GROUP BY vt1.c0, rt12.c1;
SELECT * FROM vt2, vt1, vt0;
SELECT * FROM vt2, vt1, vt0 WHERE (((ABS(vt0.c0))OR(((vt0.c1) ISNULL)))) UNION ALL SELECT * FROM vt2, vt1, vt0 WHERE ((NOT (((ABS(vt0.c0))OR(((vt0.c1) ISNULL)))))) UNION ALL SELECT * FROM vt2, vt1, vt0 WHERE (((((ABS(vt0.c0))OR(((vt0.c1) ISNULL)))) ISNULL));
SELECT * FROM vt2, vt1, vt0;
SELECT DISTINCT * FROM vt2, vt1;
SELECT DISTINCT * FROM vt2, vt1 WHERE ((((vt2.c0, vt1.c0, vt1.c0)) NOT BETWEEN (((~ (vt2.c0)), (NOT (vt1.c0)), 0.9536249134630518)) AND ((vt2.c0 COLLATE BINARY, ((vt2.c0) ISNULL), vt2.c0 COLLATE BINARY)))) UNION SELECT DISTINCT * FROM vt2, vt1 WHERE ((NOT ((((vt2.c0, vt1.c0, vt1.c0)) NOT BETWEEN (((~ (vt2.c0)), (NOT (vt1.c0)), 0.9536249134630518)) AND ((vt2.c0 COLLATE BINARY, ((vt2.c0) ISNULL), vt2.c0 COLLATE BINARY)))))) UNION SELECT DISTINCT * FROM vt2, vt1 WHERE ((((((vt2.c0, vt1.c0, vt1.c0)) NOT BETWEEN (((~ (vt2.c0)), (NOT (vt1.c0)), 0.9536249134630518)) AND ((vt2.c0 COLLATE BINARY, ((vt2.c0) ISNULL), vt2.c0 COLLATE BINARY)))) ISNULL));
SELECT DISTINCT * FROM vt2, vt1;
SELECT rt12.c2, rt12.c1, rt12.c0 FROM rt12 GROUP BY rt12.c2, rt12.c1, rt12.c0;
SELECT rt12.c2, rt12.c1, rt12.c0 FROM rt12 WHERE (CASE CASE rt12.c1  WHEN rt12.c0 THEN rt12.c0 WHEN rt12.c2 THEN rt12.c2 WHEN rt12.c2 THEN rt12.c0 ELSE rt12.c0 END  WHEN ((rt12.c1) NOT BETWEEN (rt12.c2) AND (rt12.c0)) THEN 0.49824215423496165 ELSE rt12.c0 END) GROUP BY rt12.c2, rt12.c1, rt12.c0 UNION SELECT ALL rt12.c2, rt12.c1, rt12.c0 FROM rt12 WHERE ((NOT (CASE CASE rt12.c1  WHEN rt12.c0 THEN rt12.c0 WHEN rt12.c2 THEN rt12.c2 WHEN rt12.c2 THEN rt12.c0 ELSE rt12.c0 END  WHEN ((rt12.c1) NOT BETWEEN (rt12.c2) AND (rt12.c0)) THEN 0.49824215423496165 ELSE rt12.c0 END))) GROUP BY rt12.c2, rt12.c1, rt12.c0 UNION SELECT rt12.c2, rt12.c1, rt12.c0 FROM rt12 WHERE (((CASE CASE rt12.c1  WHEN rt12.c0 THEN rt12.c0 WHEN rt12.c2 THEN rt12.c2 WHEN rt12.c2 THEN rt12.c0 ELSE rt12.c0 END  WHEN ((rt12.c1) NOT BETWEEN (rt12.c2) AND (rt12.c0)) THEN 0.49824215423496165 ELSE rt12.c0 END) ISNULL)) GROUP BY rt12.c2, rt12.c1, rt12.c0;
SELECT rt12.c2, rt12.c1, rt12.c0 FROM rt12 GROUP BY rt12.c2, rt12.c1, rt12.c0;
SELECT vt2.c0 FROM vt0, vt1, vt2 GROUP BY vt2.c0;
SELECT ALL vt2.c0 FROM vt0, vt1, vt2 GROUP BY vt2.c0 HAVING ((vt0.c1 COLLATE NOCASE) IS TRUE) UNION ALL SELECT vt2.c0 FROM vt0, vt1, vt2 GROUP BY vt2.c0 HAVING (NOT (((vt0.c1 COLLATE NOCASE) IS TRUE))) UNION ALL SELECT ALL vt2.c0 FROM vt0, vt1, vt2 GROUP BY vt2.c0 HAVING ((((vt0.c1 COLLATE NOCASE) IS TRUE)) ISNULL);
SELECT vt2.c0 FROM vt0, vt1, vt2 GROUP BY vt2.c0;
SELECT ALL vt2.c0 FROM vt0, vt1, vt2 GROUP BY vt2.c0 HAVING ((vt0.c1 COLLATE NOCASE) IS TRUE) UNION ALL SELECT vt2.c0 FROM vt0, vt1, vt2 GROUP BY vt2.c0 HAVING (NOT (((vt0.c1 COLLATE NOCASE) IS TRUE))) UNION ALL SELECT ALL vt2.c0 FROM vt0, vt1, vt2 GROUP BY vt2.c0 HAVING ((((vt0.c1 COLLATE NOCASE) IS TRUE)) ISNULL);
SELECT vt2.c0 FROM vt0, vt1, vt2 GROUP BY vt2.c0;
SELECT ALL vt1.c0, rt12.c1 FROM vt1, rt12;
SELECT vt1.c0, rt12.c1 FROM vt1, rt12 WHERE ((((- (rt12.c2)))<=(((vt1.c0)OR(rt12.c0))))) UNION ALL SELECT ALL vt1.c0, rt12.c1 FROM vt1, rt12 WHERE ((NOT ((((- (rt12.c2)))<=(((vt1.c0)OR(rt12.c0))))))) UNION ALL SELECT vt1.c0, rt12.c1 FROM vt1, rt12 WHERE ((((((- (rt12.c2)))<=(((vt1.c0)OR(rt12.c0))))) ISNULL));
SELECT ALL vt1.c0, rt12.c1 FROM vt1, rt12;
SELECT DISTINCT * FROM rt12 LEFT OUTER JOIN vt0 ON ((((rt12.c2)<<(vt1.c0))) NOT BETWEEN (CASE WHEN vt1.c0 THEN rt12.c1 ELSE vt1.c0 END) AND (NULLIF(DISTINCT vt0.c0, vt0.c0))) LEFT OUTER JOIN vt1 ON ((((rt12.c2) NOT BETWEEN (x'') AND ('0.04636047636536922')))<(((vt0.c1)IS NOT(rt12.c0))));
SELECT ALL rt12.c0 FROM rt12 GROUP BY rt12.c0;
SELECT rt12.c0 FROM rt12 WHERE (((rt12.c1 IN ()) IN ())) GROUP BY rt12.c0 UNION SELECT rt12.c0 FROM rt12 WHERE ((NOT (((rt12.c1 IN ()) IN ())))) GROUP BY rt12.c0 UNION SELECT ALL rt12.c0 FROM rt12 WHERE (((((rt12.c1 IN ()) IN ())) ISNULL)) GROUP BY rt12.c0;
SELECT ALL rt12.c0 FROM rt12 GROUP BY rt12.c0;
SELECT ALL vt0.c1, vt1.c0, vt2.c0, vt0.c0, rt12.c2 FROM rt12 LEFT OUTER JOIN vt1 ON ((vt0.c1)-(vt0.c1)) COLLATE BINARY COLLATE NOCASE CROSS JOIN vt0 ON DATETIME(((vt0.c0)>=(vt1.c0)), (vt1.c0 IN ()), ((vt0.c0)-(vt1.c0)), ((rt12.c1)<(vt2.c0)), ((NULL) BETWEEN (vt2.c0) AND (vt0.c0))) INNER JOIN vt2 ON (CASE vt1.c0  WHEN vt1.c0 THEN NULL END IN (vt0.c1)) GROUP BY vt0.c1, vt1.c0, vt2.c0, vt0.c0, rt12.c2;
SELECT ALL TOTAL((((((((((((((~ (vt2.c0)))OR(((2106291778)>=(vt2.c0)))))AND(((((vt2.c0)OR(vt2.c0)))AND('qn〰8O-r')))))AND(((vt2.c0)>(vt2.c0)))))AND(TRIM(vt2.c0))))AND(vt2.c0)))OR((vt2.c0 IN ())))) FROM vt2;
SELECT ALL * FROM vt0, vt2;
SELECT ALL * FROM vt0, vt2 WHERE (CASE WHEN ((vt2.c0)=(vt2.c0)) THEN vt0.c0 WHEN ((vt0.c0)<(vt2.c0)) THEN CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END WHEN ((vt2.c0)||(vt0.c1)) THEN CASE vt2.c0  WHEN vt0.c1 THEN vt2.c0 END END) UNION ALL SELECT * FROM vt0, vt2 WHERE ((NOT (CASE WHEN ((vt2.c0)==(vt2.c0)) THEN vt0.c0 WHEN ((vt0.c0)<(vt2.c0)) THEN CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END WHEN ((vt2.c0)||(vt0.c1)) THEN CASE vt2.c0  WHEN vt0.c1 THEN vt2.c0 END END))) UNION ALL SELECT * FROM vt0, vt2 WHERE (((CASE WHEN ((vt2.c0)==(vt2.c0)) THEN vt0.c0 WHEN ((vt0.c0)<(vt2.c0)) THEN CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END WHEN ((vt2.c0)||(vt0.c1)) THEN CASE vt2.c0  WHEN vt0.c1 THEN vt2.c0 END END) ISNULL));
SELECT ALL * FROM vt0, vt2;
SELECT DISTINCT rt12.c0, rt12.c1, vt2.c0 FROM vt1, vt2, rt12;
SELECT DISTINCT rt12.c0, rt12.c1, vt2.c0 FROM vt1, vt2, rt12 WHERE (((((rt12.c0)==(rt12.c2)))AND(x''))) UNION SELECT DISTINCT rt12.c0, rt12.c1, vt2.c0 FROM vt1, vt2, rt12 WHERE ((NOT (((((rt12.c0)==(rt12.c2)))AND(x''))))) UNION SELECT DISTINCT rt12.c0, rt12.c1, vt2.c0 FROM vt1, vt2, rt12 WHERE (((((((rt12.c0)==(rt12.c2)))AND(x''))) ISNULL));
SELECT DISTINCT rt12.c0, rt12.c1, vt2.c0 FROM vt1, vt2, rt12;
SELECT ALL vt1.c0, vt2.c0, rt12.c0, rt12.c1, rt12.c2 FROM rt12, vt1 RIGHT OUTER JOIN vt2 ON ((((rt12.c2)|(rt12.c2))) NOT BETWEEN (((vt2.c0)AND(rt12.c2))) AND (CASE WHEN rt12.c0 THEN rt12.c1 ELSE vt1.c0 END)) GROUP BY vt1.c0, vt2.c0, rt12.c0, rt12.c1, rt12.c2;
SELECT vt1.c0, vt2.c0, rt12.c0, rt12.c1, rt12.c2 FROM rt12, vt1 RIGHT OUTER JOIN vt2 ON ((((rt12.c2)|(rt12.c2))) NOT BETWEEN (((vt2.c0)AND(rt12.c2))) AND (CASE WHEN rt12.c0 THEN rt12.c1 ELSE vt1.c0 END)) WHERE (ABS(0.715661188992798)) GROUP BY vt1.c0, vt2.c0, rt12.c0, rt12.c1, rt12.c2 UNION SELECT ALL vt1.c0, vt2.c0, rt12.c0, rt12.c1, rt12.c2 FROM rt12, vt1 RIGHT OUTER JOIN vt2 ON ((((rt12.c2)|(rt12.c2))) NOT BETWEEN (((vt2.c0)AND(rt12.c2))) AND (CASE WHEN rt12.c0 THEN rt12.c1 ELSE vt1.c0 END)) WHERE ((NOT (ABS(0.715661188992798)))) GROUP BY vt1.c0, vt2.c0, rt12.c0, rt12.c1, rt12.c2 UNION SELECT vt1.c0, vt2.c0, rt12.c0, rt12.c1, rt12.c2 FROM rt12, vt1 RIGHT OUTER JOIN vt2 ON ((((rt12.c2)|(rt12.c2))) NOT BETWEEN (((vt2.c0)AND(rt12.c2))) AND (CASE WHEN rt12.c0 THEN rt12.c1 ELSE vt1.c0 END)) WHERE (((ABS(0.715661188992798)) ISNULL)) GROUP BY vt1.c0, vt2.c0, rt12.c0, rt12.c1, rt12.c2;
SELECT ALL vt1.c0, vt2.c0, rt12.c0, rt12.c1, rt12.c2 FROM rt12, vt1 RIGHT OUTER JOIN vt2 ON ((((rt12.c2)|(rt12.c2))) NOT BETWEEN (((vt2.c0)AND(rt12.c2))) AND (CASE WHEN rt12.c0 THEN rt12.c1 ELSE vt1.c0 END)) GROUP BY vt1.c0, vt2.c0, rt12.c0, rt12.c1, rt12.c2;
SELECT ALL vt1.c0, vt0.c0, vt0.c1, vt2.c0 FROM vt0, vt1 NATURAL JOIN vt2 GROUP BY vt1.c0, vt0.c0, vt0.c1, vt2.c0;
SELECT ALL vt1.c0, vt0.c0, vt0.c1, vt2.c0 FROM vt0, vt1 NATURAL JOIN vt2 GROUP BY vt1.c0, vt0.c0, vt0.c1, vt2.c0 HAVING MIN(MAX(SUM(AVG(MIN(vt1.c0))))) UNION ALL SELECT vt1.c0, vt0.c0, vt0.c1, vt2.c0 FROM vt0, vt1 NATURAL JOIN vt2 GROUP BY vt1.c0, vt0.c0, vt0.c1, vt2.c0 HAVING (NOT (MIN(MAX(SUM(AVG(MIN(vt1.c0))))))) UNION ALL SELECT vt1.c0, vt0.c0, vt0.c1, vt2.c0 FROM vt0, vt1 NATURAL JOIN vt2 GROUP BY vt1.c0, vt0.c0, vt0.c1, vt2.c0 HAVING ((MIN(MAX(SUM(AVG(MIN(vt1.c0)))))) ISNULL);
SELECT MIN((((vt2.c0)) NOT BETWEEN ((0.6907943331573277)) AND ((((vt2.c0)+(x'b8f0')))))) FROM vt2;
SELECT * FROM vt1, rt12, vt2;
SELECT * FROM vt1, rt12, vt2 WHERE (TRIM(vt1.c0, rt12.c2) COLLATE NOCASE) UNION ALL SELECT ALL * FROM vt1, rt12, vt2 WHERE ((NOT (TRIM(vt1.c0, rt12.c2) COLLATE NOCASE))) UNION ALL SELECT ALL * FROM vt1, rt12, vt2 WHERE (((TRIM(vt1.c0, rt12.c2) COLLATE NOCASE) ISNULL));
SELECT * FROM vt1, rt12, vt2;
SELECT DISTINCT * FROM rt12 FULL OUTER JOIN vt0 ON CAST((vt0.c1 IN ()) AS INTEGER) LEFT OUTER JOIN vt1 ON (((NOT (vt1.c0))) NOT NULL) LEFT OUTER JOIN vt2 ON ((((vt2.c0) BETWEEN (vt0.c1) AND (vt0.c1)))>>(CAST(vt2.c0 AS INTEGER)));
SELECT DISTINCT * FROM rt12 FULL OUTER JOIN vt0 ON CAST((vt0.c1 IN ()) AS INTEGER) LEFT OUTER JOIN vt1 ON (((NOT (vt1.c0))) NOT NULL) LEFT OUTER JOIN vt2 ON ((((vt2.c0) BETWEEN (vt0.c1) AND (vt0.c1)))>>(CAST(vt2.c0 AS INTEGER))) WHERE (((rt12.c1 COLLATE RTRIM) NOTNULL)) UNION SELECT DISTINCT * FROM rt12 FULL OUTER JOIN vt0 ON CAST((vt0.c1 IN ()) AS INTEGER) LEFT OUTER JOIN vt1 ON (((NOT (vt1.c0))) NOT NULL) LEFT OUTER JOIN vt2 ON ((((vt2.c0) BETWEEN (vt0.c1) AND (vt0.c1)))>>(CAST(vt2.c0 AS INTEGER))) WHERE ((NOT (((rt12.c1 COLLATE RTRIM) NOTNULL)))) UNION SELECT DISTINCT * FROM rt12 FULL OUTER JOIN vt0 ON CAST((vt0.c1 IN ()) AS INTEGER) LEFT OUTER JOIN vt1 ON (((NOT (vt1.c0))) NOT NULL) LEFT OUTER JOIN vt2 ON ((((vt2.c0) BETWEEN (vt0.c1) AND (vt0.c1)))>>(CAST(vt2.c0 AS INTEGER))) WHERE (((((rt12.c1 COLLATE RTRIM) NOTNULL)) ISNULL));
SELECT DISTINCT * FROM rt12 FULL OUTER JOIN vt0 ON CAST((vt0.c1 IN ()) AS INTEGER) LEFT OUTER JOIN vt1 ON (((NOT (vt1.c0))) NOT NULL) LEFT OUTER JOIN vt2 ON ((((vt2.c0) BETWEEN (vt0.c1) AND (vt0.c1)))>>(CAST(vt2.c0 AS INTEGER)));
SELECT rt12.c2, rt12.c1, vt1.c0, rt12.c0 FROM vt1, rt12, vt2 GROUP BY rt12.c2, rt12.c1, vt1.c0, rt12.c0;
SELECT ALL rt12.c2, rt12.c1, vt1.c0, rt12.c0 FROM vt1, rt12, vt2 WHERE (CASE (rt12.c0 IN ())  WHEN ((((vt2.c0)OR(rt12.c2)))AND(rt12.c1)) THEN json_array_length('rO') END) GROUP BY rt12.c2, rt12.c1, vt1.c0, rt12.c0 UNION SELECT ALL rt12.c2, rt12.c1, vt1.c0, rt12.c0 FROM vt1, rt12, vt2 WHERE ((NOT (CASE (rt12.c0 IN ())  WHEN ((((vt2.c0)OR(rt12.c2)))AND(rt12.c1)) THEN json_array_length('rO') END))) GROUP BY rt12.c2, rt12.c1, vt1.c0, rt12.c0 UNION SELECT rt12.c2, rt12.c1, vt1.c0, rt12.c0 FROM vt1, rt12, vt2 WHERE (((CASE (rt12.c0 IN ())  WHEN ((((vt2.c0)OR(rt12.c2)))AND(rt12.c1)) THEN json_array_length('rO') END) ISNULL)) GROUP BY rt12.c2, rt12.c1, vt1.c0, rt12.c0;
SELECT ALL rt12.c0, rt12.c2, rt12.c1 FROM rt12 GROUP BY rt12.c0, rt12.c2, rt12.c1;
SELECT rt12.c0, rt12.c2, rt12.c1 FROM rt12 GROUP BY rt12.c0, rt12.c2, rt12.c1 HAVING ((((GROUP_CONCAT(TOTAL(COUNT(*)))) BETWEEN (rt12.c2) AND (rt12.c2))) NOT BETWEEN ('0.3106984318278875') AND (rt12.c1 COLLATE RTRIM)) UNION ALL SELECT rt12.c0, rt12.c2, rt12.c1 FROM rt12 GROUP BY rt12.c0, rt12.c2, rt12.c1 HAVING (NOT (((((GROUP_CONCAT(TOTAL(COUNT(*)))) BETWEEN (rt12.c2) AND (rt12.c2))) NOT BETWEEN ('0.3106984318278875') AND (rt12.c1 COLLATE RTRIM)))) UNION ALL SELECT ALL rt12.c0, rt12.c2, rt12.c1 FROM rt12 GROUP BY rt12.c0, rt12.c2, rt12.c1 HAVING ((((((GROUP_CONCAT(TOTAL(COUNT(*)))) BETWEEN (rt12.c2) AND (rt12.c2))) NOT BETWEEN ('0.3106984318278875') AND (rt12.c1 COLLATE RTRIM))) ISNULL);
SELECT rt12.c2, rt12.c0 FROM rt12;
SELECT rt12.c2, rt12.c0 FROM rt12 WHERE (rt12.c0) UNION ALL SELECT rt12.c2, rt12.c0 FROM rt12 WHERE ((NOT (rt12.c0))) UNION ALL SELECT ALL rt12.c2, rt12.c0 FROM rt12 WHERE (((rt12.c0) ISNULL));
SELECT rt12.c2, rt12.c0 FROM rt12;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (CAST((NOT (vt0.c0)) AS TEXT)) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (CAST((NOT (vt0.c0)) AS TEXT)))) UNION SELECT DISTINCT * FROM vt0 WHERE (((CAST((NOT (vt0.c0)) AS TEXT)) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL vt1.c0, vt2.c0 FROM vt2 LEFT OUTER JOIN vt1 ON CAST(NULL AS NUMERIC) COLLATE BINARY GROUP BY vt1.c0, vt2.c0;
SELECT ALL vt1.c0, vt2.c0 FROM vt2 LEFT OUTER JOIN vt1 ON CAST(NULL AS NUMERIC) COLLATE BINARY WHERE ((NOT ((vt2.c0 IN ())))) GROUP BY vt1.c0, vt2.c0 UNION SELECT vt1.c0, vt2.c0 FROM vt2 LEFT OUTER JOIN vt1 ON CAST(NULL AS NUMERIC) COLLATE BINARY WHERE ((NOT ((NOT ((vt2.c0 IN ())))))) GROUP BY vt1.c0, vt2.c0 UNION SELECT vt1.c0, vt2.c0 FROM vt2 LEFT OUTER JOIN vt1 ON CAST(NULL AS NUMERIC) COLLATE BINARY WHERE ((((NOT ((vt2.c0 IN ())))) ISNULL)) GROUP BY vt1.c0, vt2.c0;
SELECT ALL vt1.c0, vt2.c0 FROM vt2 LEFT OUTER JOIN vt1 ON CAST(NULL AS NUMERIC) COLLATE BINARY GROUP BY vt1.c0, vt2.c0;
SELECT ALL vt1.c0, vt0.c1, vt2.c0, rt12.c1, vt0.c0, rt12.c2, rt12.c0 FROM vt0, vt1, rt12, vt2 GROUP BY vt1.c0, vt0.c1, vt2.c0, rt12.c1, vt0.c0, rt12.c2, rt12.c0;
SELECT vt1.c0, vt0.c1, vt2.c0, rt12.c1, vt0.c0, rt12.c2, rt12.c0 FROM vt0 NOT INDEXED, vt1, rt12, vt2 GROUP BY vt1.c0, vt0.c1, vt2.c0, rt12.c1, vt0.c0, rt12.c2, rt12.c0 HAVING TOTAL(GROUP_CONCAT(AVG(COUNT(*)))) UNION ALL SELECT ALL vt1.c0, vt0.c1, vt2.c0, rt12.c1, vt0.c0, rt12.c2, rt12.c0 FROM vt0, vt1, rt12, vt2 GROUP BY vt1.c0, vt0.c1, vt2.c0, rt12.c1, vt0.c0, rt12.c2, rt12.c0 HAVING (NOT (TOTAL(GROUP_CONCAT(AVG(COUNT(*)))))) UNION ALL SELECT ALL vt1.c0, vt0.c1, vt2.c0, rt12.c1, vt0.c0, rt12.c2, rt12.c0 FROM vt0, vt1, rt12, vt2 GROUP BY vt1.c0, vt0.c1, vt2.c0, rt12.c1, vt0.c0, rt12.c2, rt12.c0 HAVING ((TOTAL(GROUP_CONCAT(AVG(COUNT(*))))) ISNULL);
SELECT ALL MAX(rt12.c2) FROM rt12 ORDER BY ((((rt12.c0) BETWEEN (rt12.c2) AND (0.12802069990248088)))<<((rt12.c1 IN (rt12.c2, rt12.c1))));
SELECT vt1.c0, vt2.c0, vt0.c0, rt12.c1 FROM vt1, vt0 RIGHT OUTER JOIN rt12 ON ((vt0.c0) IS TRUE) LEFT OUTER JOIN vt2 ON MIN(vt2.c0, vt0.c0, vt1.c0, vt1.c0) COLLATE BINARY;
SELECT ALL vt1.c0, vt2.c0, vt0.c0, rt12.c1 FROM vt1, vt0 RIGHT OUTER JOIN rt12 ON ((vt0.c0) IS TRUE) LEFT OUTER JOIN vt2 ON MIN(vt2.c0, vt0.c0, vt1.c0, vt1.c0) COLLATE BINARY WHERE (CAST(vt0.c0 AS TEXT)) UNION ALL SELECT vt1.c0, vt2.c0, vt0.c0, rt12.c1 FROM vt1, vt0 RIGHT OUTER JOIN rt12 ON ((vt0.c0) IS TRUE) LEFT OUTER JOIN vt2 ON MIN(vt2.c0, vt0.c0, vt1.c0, vt1.c0) COLLATE BINARY WHERE ((NOT (CAST(vt0.c0 AS TEXT)))) UNION ALL SELECT vt1.c0, vt2.c0, vt0.c0, rt12.c1 FROM vt1, vt0 RIGHT OUTER JOIN rt12 ON ((vt0.c0) IS TRUE) LEFT OUTER JOIN vt2 ON MIN(vt2.c0, vt0.c0, vt1.c0, vt1.c0) COLLATE BINARY WHERE (((CAST(vt0.c0 AS TEXT)) ISNULL));
SELECT vt1.c0, vt2.c0, vt0.c0, rt12.c1 FROM vt1, vt0 RIGHT OUTER JOIN rt12 ON ((vt0.c0) IS TRUE) LEFT OUTER JOIN vt2 ON MIN(vt2.c0, vt0.c0, vt1.c0, vt1.c0) COLLATE BINARY;
SELECT DISTINCT * FROM vt2, vt1, vt0, rt12;
SELECT DISTINCT * FROM vt2, vt1, vt0, rt12 WHERE (((UNLIKELY(DISTINCT 0.32761450306687445))>>(CASE rt12.c2  WHEN vt1.c0 THEN rt12.c1 WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt2.c0 ELSE rt12.c0 END))) UNION SELECT DISTINCT * FROM vt2, vt1, vt0, rt12 WHERE ((NOT (((UNLIKELY(DISTINCT 0.32761450306687445))>>(CASE rt12.c2  WHEN vt1.c0 THEN rt12.c1 WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt2.c0 ELSE rt12.c0 END))))) UNION SELECT DISTINCT * FROM vt2, vt1, vt0, rt12 WHERE (((((UNLIKELY(DISTINCT 0.32761450306687445))>>(CASE rt12.c2  WHEN vt1.c0 THEN rt12.c1 WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt2.c0 ELSE rt12.c0 END))) ISNULL));
SELECT DISTINCT * FROM vt2, vt1, vt0, rt12;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (CAST(CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 END AS BLOB)) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (CAST(CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 END AS BLOB)))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((CAST(CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 END AS BLOB)) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0, vt1.c0 FROM vt0 LEFT OUTER JOIN vt1 ON CAST(LOWER(vt0.c0) AS BLOB) GROUP BY vt0.c0, vt1.c0;
SELECT ALL vt0.c0, vt1.c0 FROM vt0 LEFT OUTER JOIN vt1 ON CAST(LOWER(vt0.c0) AS BLOB) GROUP BY vt0.c0, vt1.c0 HAVING (((((MAX(MAX(TOTAL(SUM(COUNT(*))))))AND(MIN(MIN(SUM(vt1.c0))))))AND(MIN(MAX(vt0.c0)))) IN (MAX(GROUP_CONCAT(vt1.c0)))) UNION ALL SELECT ALL vt0.c0, vt1.c0 FROM vt0 LEFT OUTER JOIN vt1 ON CAST(LOWER(vt0.c0) AS BLOB) GROUP BY vt0.c0, vt1.c0 HAVING (NOT ((((((MAX(MAX(TOTAL(SUM(COUNT(*))))))AND(MIN(MIN(SUM(vt1.c0))))))AND(MIN(MAX(vt0.c0)))) IN (MAX(GROUP_CONCAT(vt1.c0)))))) UNION ALL SELECT vt0.c0, vt1.c0 FROM vt0 LEFT OUTER JOIN vt1 ON CAST(LOWER(vt0.c0) AS BLOB) GROUP BY vt0.c0, vt1.c0 HAVING (((((((MAX(MAX(TOTAL(SUM(COUNT(*))))))AND(MIN(MIN(SUM(vt1.c0))))))AND(MIN(MAX(vt0.c0)))) IN (MAX(GROUP_CONCAT(vt1.c0))))) ISNULL);
SELECT vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE (json_patch(CASE WHEN vt0.c1 THEN vt0.c1 END, CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END)) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT (json_patch(CASE WHEN vt0.c1 THEN vt0.c1 END, CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END)))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE (((json_patch(CASE WHEN vt0.c1 THEN vt0.c1 END, CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END)) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT * FROM rt12 CROSS JOIN vt1 ON json_remove(((0Xffffffff895ace3f) NOTNULL), ((vt1.c0)GLOB(rt12.c2)), (~ (rt12.c0)), ABS(rt12.c0));
SELECT rt12.c0, vt0.c1 FROM vt0, rt12, vt1 GROUP BY rt12.c0, vt0.c1;
SELECT ALL rt12.c0, vt0.c1 FROM vt0, rt12, vt1 WHERE (0.8593116714878442) GROUP BY rt12.c0, vt0.c1 UNION SELECT rt12.c0, vt0.c1 FROM vt0, rt12, vt1 WHERE ((NOT (0.8593116714878442))) GROUP BY rt12.c0, vt0.c1 UNION SELECT ALL rt12.c0, vt0.c1 FROM vt0, rt12, vt1 WHERE (((0.8593116714878442) ISNULL)) GROUP BY rt12.c0, vt0.c1;
SELECT rt12.c0, vt0.c1 FROM vt0, rt12, vt1 GROUP BY rt12.c0, vt0.c1;
SELECT vt0.c0, vt1.c0, rt12.c2 FROM vt0, vt1, rt12, vt2 GROUP BY vt0.c0, vt1.c0, rt12.c2;
SELECT vt0.c0, vt1.c0, rt12.c2 FROM vt0, vt1, rt12, vt2 GROUP BY vt0.c0, vt1.c0, rt12.c2 HAVING vt2.c0 UNION ALL SELECT ALL vt0.c0, vt1.c0, rt12.c2 FROM vt0, vt1, rt12, vt2 GROUP BY vt0.c0, vt1.c0, rt12.c2 HAVING (NOT (vt2.c0)) UNION ALL SELECT ALL vt0.c0, vt1.c0, rt12.c2 FROM vt0, vt1, rt12, vt2 GROUP BY vt0.c0, vt1.c0, rt12.c2 HAVING ((vt2.c0) ISNULL);
SELECT vt0.c0, vt1.c0, rt12.c2 FROM vt0, vt1, rt12, vt2 GROUP BY vt0.c0, vt1.c0, rt12.c2;
SELECT vt0.c0, vt1.c0, rt12.c2 FROM vt0, vt1, rt12, vt2 GROUP BY vt0.c0, vt1.c0, rt12.c2 HAVING vt2.c0 UNION ALL SELECT ALL vt0.c0, vt1.c0, rt12.c2 FROM vt0, vt1, rt12, vt2 GROUP BY vt0.c0, vt1.c0, rt12.c2 HAVING (NOT (vt2.c0)) UNION ALL SELECT ALL vt0.c0, vt1.c0, rt12.c2 FROM vt0, vt1, rt12, vt2 GROUP BY vt0.c0, vt1.c0, rt12.c2 HAVING ((vt2.c0) ISNULL);
SELECT vt0.c0, vt1.c0, rt12.c2 FROM vt0, vt1, rt12, vt2 GROUP BY vt0.c0, vt1.c0, rt12.c2;
SELECT rt12.c2 FROM rt12;
SELECT rt12.c2 FROM rt12 WHERE ((((rt12.c2 IN ())) NOTNULL)) UNION ALL SELECT rt12.c2 FROM rt12 WHERE ((NOT ((((rt12.c2 IN ())) NOTNULL)))) UNION ALL SELECT rt12.c2 FROM rt12 WHERE ((((((rt12.c2 IN ())) NOTNULL)) ISNULL));
SELECT rt12.c2 FROM rt12;
SELECT DISTINCT vt0.c0, rt12.c1, vt0.c1, rt12.c2, rt12.c0 FROM vt0 LEFT OUTER JOIN rt12 ON CASE WHEN ((rt12.c0) BETWEEN (rt12.c1) AND (NULL)) THEN (+ (rt12.c1)) WHEN (((vt0.c1))>(('-1516361644'))) THEN ((0.16939857715929185)>(vt0.c1)) WHEN CAST(0X3b624f96 AS INTEGER) THEN NULL ELSE DATE(vt0.c1, rt12.c1, vt0.c0, rt12.c2, 'j#귲\r') END;
SELECT DISTINCT vt0.c0, rt12.c1, vt0.c1, rt12.c2, rt12.c0 FROM vt0 LEFT OUTER JOIN rt12 ON CASE WHEN ((rt12.c0) BETWEEN (rt12.c1) AND (NULL)) THEN (+ (rt12.c1)) WHEN (((vt0.c1))>(('-1516361644'))) THEN ((0.16939857715929185)>(vt0.c1)) WHEN CAST(0X3b624f96 AS INTEGER) THEN NULL ELSE DATE(vt0.c1, rt12.c1, vt0.c0, rt12.c2, 'j#귲\r') END WHERE (x'' COLLATE RTRIM) UNION SELECT DISTINCT vt0.c0, rt12.c1, vt0.c1, rt12.c2, rt12.c0 FROM vt0 LEFT OUTER JOIN rt12 ON CASE WHEN ((rt12.c0) BETWEEN (rt12.c1) AND (NULL)) THEN (+ (rt12.c1)) WHEN (((vt0.c1))>(('-1516361644'))) THEN ((0.16939857715929185)>(vt0.c1)) WHEN CAST(0x3b624f96 AS INTEGER) THEN NULL ELSE DATE(vt0.c1, rt12.c1, vt0.c0, rt12.c2, 'j#귲\r') END WHERE ((NOT (x'' COLLATE RTRIM))) UNION SELECT DISTINCT vt0.c0, rt12.c1, vt0.c1, rt12.c2, rt12.c0 FROM vt0 LEFT OUTER JOIN rt12 ON CASE WHEN ((rt12.c0) BETWEEN (rt12.c1) AND (NULL)) THEN (+ (rt12.c1)) WHEN (((vt0.c1))>(('-1516361644'))) THEN ((0.16939857715929185)>(vt0.c1)) WHEN CAST(0X3b624f96 AS INTEGER) THEN NULL ELSE DATE(vt0.c1, rt12.c1, vt0.c0, rt12.c2, 'j#귲\r') END WHERE (((x'' COLLATE RTRIM) ISNULL));
SELECT DISTINCT vt0.c0, rt12.c1, vt0.c1, rt12.c2, rt12.c0 FROM vt0 LEFT OUTER JOIN rt12 ON CASE WHEN ((rt12.c0) BETWEEN (rt12.c1) AND (NULL)) THEN (+ (rt12.c1)) WHEN (((vt0.c1))>(('-1516361644'))) THEN ((0.16939857715929185)>(vt0.c1)) WHEN CAST(0X3b624f96 AS INTEGER) THEN NULL ELSE DATE(vt0.c1, rt12.c1, vt0.c0, rt12.c2, 'j#귲\r') END;
SELECT vt0.c1, rt12.c0, rt12.c2, vt2.c0, rt12.c1 FROM vt1, vt0, vt2, rt12 GROUP BY vt0.c1, rt12.c0, rt12.c2, vt2.c0, rt12.c1;
SELECT vt0.c1, rt12.c0, rt12.c2, vt2.c0, rt12.c1 FROM vt1, vt0, vt2, rt12 WHERE (NULL) GROUP BY vt0.c1, rt12.c0, rt12.c2, vt2.c0, rt12.c1 UNION SELECT ALL vt0.c1, rt12.c0, rt12.c2, vt2.c0, rt12.c1 FROM vt1, vt0, vt2, rt12 WHERE ((NOT (NULL))) GROUP BY vt0.c1, rt12.c0, rt12.c2, vt2.c0, rt12.c1 UNION SELECT vt0.c1, rt12.c0, rt12.c2, vt2.c0, rt12.c1 FROM vt1, vt0, vt2, rt12 WHERE (((NULL) ISNULL)) GROUP BY vt0.c1, rt12.c0, rt12.c2, vt2.c0, rt12.c1;
SELECT vt0.c1, rt12.c0, rt12.c2, vt2.c0, rt12.c1 FROM vt1, vt0, vt2, rt12 GROUP BY vt0.c1, rt12.c0, rt12.c2, vt2.c0, rt12.c1;
SELECT ALL rt12.c2, rt12.c1, vt2.c0 FROM rt12, vt1, vt2 GROUP BY rt12.c2, rt12.c1, vt2.c0;
SELECT rt12.c2, rt12.c1, vt2.c0 FROM rt12, vt1, vt2 GROUP BY rt12.c2, rt12.c1, vt2.c0 HAVING ((CAST(rt12.c2 AS INTEGER))>>(vt1.c0 COLLATE RTRIM)) UNION ALL SELECT rt12.c2, rt12.c1, vt2.c0 FROM rt12, vt1, vt2 GROUP BY rt12.c2, rt12.c1, vt2.c0 HAVING (NOT (((CAST(rt12.c2 AS INTEGER))>>(vt1.c0 COLLATE RTRIM)))) UNION ALL SELECT rt12.c2, rt12.c1, vt2.c0 FROM rt12, vt1, vt2 GROUP BY rt12.c2, rt12.c1, vt2.c0 HAVING ((((CAST(rt12.c2 AS INTEGER))>>(vt1.c0 COLLATE RTRIM))) ISNULL);
SELECT ALL rt12.c2, rt12.c1, vt2.c0 FROM rt12, vt1, vt2 GROUP BY rt12.c2, rt12.c1, vt2.c0;
SELECT rt12.c2, rt12.c1, vt2.c0 FROM rt12, vt1, vt2 GROUP BY rt12.c2, rt12.c1, vt2.c0 HAVING ((CAST(rt12.c2 AS INTEGER))>>(vt1.c0 COLLATE RTRIM)) UNION ALL SELECT rt12.c2, rt12.c1, vt2.c0 FROM rt12, vt1, vt2 GROUP BY rt12.c2, rt12.c1, vt2.c0 HAVING (NOT (((CAST(rt12.c2 AS INTEGER))>>(vt1.c0 COLLATE RTRIM)))) UNION ALL SELECT rt12.c2, rt12.c1, vt2.c0 FROM rt12, vt1, vt2 GROUP BY rt12.c2, rt12.c1, vt2.c0 HAVING ((((CAST(rt12.c2 AS INTEGER))>>(vt1.c0 COLLATE RTRIM))) ISNULL);
SELECT ALL rt12.c2, rt12.c1, vt2.c0 FROM rt12, vt1, vt2 GROUP BY rt12.c2, rt12.c1, vt2.c0;
SELECT * FROM vt0, rt12;
SELECT ALL * FROM vt0, rt12 WHERE (((vt0.c0 COLLATE BINARY) NOTNULL)) UNION ALL SELECT * FROM vt0 NOT INDEXED, rt12 WHERE ((NOT (((vt0.c0 COLLATE BINARY) NOTNULL)))) UNION ALL SELECT * FROM vt0, rt12 NOT INDEXED WHERE (((((vt0.c0 COLLATE BINARY) NOTNULL)) ISNULL));
SELECT * FROM vt0, rt12;
SELECT DISTINCT vt0.c1, rt12.c1, vt1.c0, rt12.c0, vt2.c0, vt0.c0 FROM rt12, vt2, vt1, vt0;
SELECT DISTINCT vt0.c1, rt12.c1, vt1.c0, rt12.c0, vt2.c0, vt0.c0 FROM rt12, vt2, vt1, vt0 WHERE (LENGTH((rt12.c0 IN ()))) UNION SELECT DISTINCT vt0.c1, rt12.c1, vt1.c0, rt12.c0, vt2.c0, vt0.c0 FROM rt12, vt2, vt1, vt0 WHERE ((NOT (LENGTH((rt12.c0 IN ()))))) UNION SELECT DISTINCT vt0.c1, rt12.c1, vt1.c0, rt12.c0, vt2.c0, vt0.c0 FROM rt12, vt2, vt1, vt0 WHERE (((LENGTH((rt12.c0 IN ()))) ISNULL));
SELECT DISTINCT vt0.c1, rt12.c1, vt1.c0, rt12.c0, vt2.c0, vt0.c0 FROM rt12, vt2, vt1, vt0;
SELECT ALL rt12.c1, rt12.c2, vt1.c0 FROM rt12 FULL OUTER JOIN vt1 ON ((CASE vt1.c0  WHEN rt12.c0 THEN x'f9f2' ELSE rt12.c1 END) NOTNULL) GROUP BY rt12.c1, rt12.c2, vt1.c0;
SELECT ALL rt12.c1, rt12.c2, vt1.c0 FROM rt12 FULL OUTER JOIN vt1 ON ((CASE vt1.c0  WHEN rt12.c0 THEN x'f9f2' ELSE rt12.c1 END) NOTNULL) WHERE ('-692340639') GROUP BY rt12.c1, rt12.c2, vt1.c0 UNION SELECT ALL rt12.c1, rt12.c2, vt1.c0 FROM rt12 FULL OUTER JOIN vt1 ON ((CASE vt1.c0  WHEN rt12.c0 THEN x'f9f2' ELSE rt12.c1 END) NOTNULL) WHERE ((NOT ('-692340639'))) GROUP BY rt12.c1, rt12.c2, vt1.c0 UNION SELECT rt12.c1, rt12.c2, vt1.c0 FROM rt12 FULL OUTER JOIN vt1 ON ((CASE vt1.c0  WHEN rt12.c0 THEN x'f9f2' ELSE rt12.c1 END) NOTNULL) WHERE ((('-692340639') ISNULL)) GROUP BY rt12.c1, rt12.c2, vt1.c0;
SELECT ALL rt12.c1, rt12.c2, vt1.c0 FROM rt12 FULL OUTER JOIN vt1 ON ((CASE vt1.c0  WHEN rt12.c0 THEN x'f9f2' ELSE rt12.c1 END) NOTNULL) GROUP BY rt12.c1, rt12.c2, vt1.c0;
SELECT rt12.c0, rt12.c2 FROM vt0, vt2 RIGHT OUTER JOIN rt12 ON ((((vt2.c0) BETWEEN ('-599025637') AND (rt12.c2))) IS FALSE) GROUP BY rt12.c0, rt12.c2;
SELECT ALL rt12.c0, rt12.c2 FROM vt0, vt2 RIGHT OUTER JOIN rt12 ON ((((vt2.c0) BETWEEN ('-599025637') AND (rt12.c2))) IS FALSE) GROUP BY rt12.c0, rt12.c2 HAVING ((TOTAL(AVG(GROUP_CONCAT(vt2.c0)))) BETWEEN (((AVG(GROUP_CONCAT(rt12.c2))) IS FALSE)) AND (TOTAL(vt0.c1))) UNION ALL SELECT rt12.c0, rt12.c2 FROM vt0, vt2 RIGHT OUTER JOIN rt12 ON ((((vt2.c0) BETWEEN ('-599025637') AND (rt12.c2))) IS FALSE) GROUP BY rt12.c0, rt12.c2 HAVING (NOT (((TOTAL(AVG(GROUP_CONCAT(vt2.c0)))) BETWEEN (((AVG(GROUP_CONCAT(rt12.c2))) IS FALSE)) AND (TOTAL(vt0.c1))))) UNION ALL SELECT rt12.c0, rt12.c2 FROM vt0, vt2 RIGHT OUTER JOIN rt12 ON ((((vt2.c0) BETWEEN ('-599025637') AND (rt12.c2))) IS FALSE) GROUP BY rt12.c0, rt12.c2 HAVING ((((TOTAL(AVG(GROUP_CONCAT(vt2.c0)))) BETWEEN (((AVG(GROUP_CONCAT(rt12.c2))) IS FALSE)) AND (TOTAL(vt0.c1)))) ISNULL);
SELECT * FROM vt2 FULL OUTER JOIN rt12 ON (((rt12.c2)) BETWEEN (((((rt12.c2)) NOT BETWEEN ((vt2.c0)) AND ((rt12.c2))))) AND ((((('D\n04', rt12.c1, rt12.c2))=((rt12.c2, rt12.c2, rt12.c1))))));
SELECT * FROM vt2 FULL OUTER JOIN rt12 ON (((rt12.c2)) BETWEEN (((((rt12.c2)) NOT BETWEEN ((vt2.c0)) AND ((rt12.c2))))) AND ((((('D\n04', rt12.c1, rt12.c2))=((rt12.c2, rt12.c2, rt12.c1)))))) WHERE (CAST((((rt12.c0, vt2.c0, rt12.c2)) BETWEEN ((rt12.c0, rt12.c2, vt2.c0)) AND ((rt12.c0, rt12.c1, vt2.c0))) AS NUMERIC)) UNION ALL SELECT * FROM vt2 FULL OUTER JOIN rt12 ON (((rt12.c2)) BETWEEN (((((rt12.c2)) NOT BETWEEN ((vt2.c0)) AND ((rt12.c2))))) AND ((((('D\n04', rt12.c1, rt12.c2))==((rt12.c2, rt12.c2, rt12.c1)))))) WHERE ((NOT (CAST((((rt12.c0, vt2.c0, rt12.c2)) BETWEEN ((rt12.c0, rt12.c2, vt2.c0)) AND ((rt12.c0, rt12.c1, vt2.c0))) AS NUMERIC)))) UNION ALL SELECT * FROM vt2 FULL OUTER JOIN rt12 ON (((rt12.c2)) BETWEEN (((((rt12.c2)) NOT BETWEEN ((vt2.c0)) AND ((rt12.c2))))) AND ((((('D\n04', rt12.c1, rt12.c2))=((rt12.c2, rt12.c2, rt12.c1)))))) WHERE (((CAST((((rt12.c0, vt2.c0, rt12.c2)) BETWEEN ((rt12.c0, rt12.c2, vt2.c0)) AND ((rt12.c0, rt12.c1, vt2.c0))) AS NUMERIC)) ISNULL));
SELECT * FROM vt2 FULL OUTER JOIN rt12 ON (((rt12.c2)) BETWEEN (((((rt12.c2)) NOT BETWEEN ((vt2.c0)) AND ((rt12.c2))))) AND ((((('D\n04', rt12.c1, rt12.c2))=((rt12.c2, rt12.c2, rt12.c1))))));
SELECT DISTINCT vt2.c0 FROM vt2, rt12;
SELECT DISTINCT vt2.c0 FROM vt2, rt12 WHERE (((((CAST(NULL AS NUMERIC))OR((~ (rt12.c0)))))AND((~ (rt12.c2))))) UNION SELECT DISTINCT vt2.c0 FROM vt2, rt12 WHERE ((NOT (((((CAST(NULL AS NUMERIC))OR((~ (rt12.c0)))))AND((~ (rt12.c2))))))) UNION SELECT DISTINCT vt2.c0 FROM vt2, rt12 WHERE (((((((CAST(NULL AS NUMERIC))OR((~ (rt12.c0)))))AND((~ (rt12.c2))))) ISNULL));
SELECT DISTINCT vt2.c0 FROM vt2, rt12;
SELECT vt0.c1, vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c1, vt0.c0, vt1.c0;
SELECT ALL vt0.c1, vt0.c0, vt1.c0 FROM vt0, vt1 WHERE ((((vt1.c0 IN ())) BETWEEN (TRIM(vt1.c0, vt1.c0)) AND ((vt0.c1 IN (vt0.c0))))) GROUP BY vt0.c1, vt0.c0, vt1.c0 UNION SELECT ALL vt0.c1, vt0.c0, vt1.c0 FROM vt0, vt1 WHERE ((NOT ((((vt1.c0 IN ())) BETWEEN (TRIM(vt1.c0, vt1.c0)) AND ((vt0.c1 IN (vt0.c0))))))) GROUP BY vt0.c1, vt0.c0, vt1.c0 UNION SELECT ALL vt0.c1, vt0.c0, vt1.c0 FROM vt0, vt1 WHERE ((((((vt1.c0 IN ())) BETWEEN (TRIM(vt1.c0, vt1.c0)) AND ((vt0.c1 IN (vt0.c0))))) ISNULL)) GROUP BY vt0.c1, vt0.c0, vt1.c0;
SELECT vt0.c1, vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c1, vt0.c0, vt1.c0;
SELECT vt1.c0, vt0.c0 FROM rt12, vt0, vt1, vt2 GROUP BY vt1.c0, vt0.c0;
SELECT vt1.c0, vt0.c0 FROM rt12, vt0, vt1, vt2 GROUP BY vt1.c0, vt0.c0 HAVING SUM(((vt0.c0)>=(MIN(MAX(MAX(rt12.c1)))))) UNION ALL SELECT ALL vt1.c0, vt0.c0 FROM rt12, vt0, vt1, vt2 GROUP BY vt1.c0, vt0.c0 HAVING (NOT (SUM(((vt0.c0)>=(MIN(MAX(MAX(rt12.c1)))))))) UNION ALL SELECT ALL vt1.c0, vt0.c0 FROM rt12, vt0, vt1, vt2 GROUP BY vt1.c0, vt0.c0 HAVING ((SUM(((vt0.c0)>=(MIN(MAX(MAX(rt12.c1))))))) ISNULL);
SELECT vt0.c1, vt0.c0 FROM vt2, vt1, rt12 RIGHT OUTER JOIN vt0 ON ((vt0.c0) IS TRUE);
SELECT ALL vt0.c1, vt0.c0 FROM vt2, vt1, rt12 RIGHT OUTER JOIN vt0 ON ((vt0.c0) IS TRUE) WHERE ('/汫') UNION ALL SELECT vt0.c1, vt0.c0 FROM vt2, vt1, rt12 RIGHT OUTER JOIN vt0 ON ((vt0.c0) IS TRUE) WHERE ((NOT ('/汫'))) UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM vt2, vt1, rt12 RIGHT OUTER JOIN vt0 ON ((vt0.c0) IS TRUE) WHERE ((('/汫') ISNULL));
SELECT vt0.c1, vt0.c0 FROM vt2, vt1, rt12 RIGHT OUTER JOIN vt0 ON ((vt0.c0) IS TRUE);
SELECT DISTINCT vt1.c0 FROM vt2, vt0 LEFT OUTER JOIN vt1 ON ((((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)))||((vt1.c0 IN ()))) CROSS JOIN rt12 ON ((((((((rt12.c0)OR(HEX(rt12.c2))))AND(LIKELIHOOD(vt2.c0, 0.6727822701293196))))OR(((rt12.c1)||('1391631686')))))OR((NOT (vt0.c0))));
SELECT DISTINCT vt1.c0 FROM vt2, vt0 LEFT OUTER JOIN vt1 ON ((((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)))||((vt1.c0 IN ()))) CROSS JOIN rt12 ON ((((((((rt12.c0)OR(HEX(rt12.c2))))AND(LIKELIHOOD(vt2.c0, 0.6727822701293196))))OR(((rt12.c1)||('1391631686')))))OR((NOT (vt0.c0)))) WHERE (0.07372068285345956) UNION SELECT DISTINCT vt1.c0 FROM vt2, vt0 LEFT OUTER JOIN vt1 ON ((((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)))||((vt1.c0 IN ()))) CROSS JOIN rt12 ON ((((((((rt12.c0)OR(HEX(rt12.c2))))AND(LIKELIHOOD(vt2.c0, 0.6727822701293196))))OR(((rt12.c1)||('1391631686')))))OR((NOT (vt0.c0)))) WHERE ((NOT (0.07372068285345956))) UNION SELECT DISTINCT vt1.c0 FROM vt2, vt0 LEFT OUTER JOIN vt1 ON ((((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)))||((vt1.c0 IN ()))) CROSS JOIN rt12 ON ((((((((rt12.c0)OR(HEX(rt12.c2))))AND(LIKELIHOOD(vt2.c0, 0.6727822701293196))))OR(((rt12.c1)||('1391631686')))))OR((NOT (vt0.c0)))) WHERE (((0.07372068285345956) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt2, vt0 LEFT OUTER JOIN vt1 ON ((((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)))||((vt1.c0 IN ()))) CROSS JOIN rt12 ON ((((((((rt12.c0)OR(HEX(rt12.c2))))AND(LIKELIHOOD(vt2.c0, 0.6727822701293196))))OR(((rt12.c1)||('1391631686')))))OR((NOT (vt0.c0))));
SELECT vt0.c1, vt1.c0, rt12.c2, rt12.c1, vt0.c0, vt2.c0 FROM vt1, vt2, rt12, vt0 GROUP BY vt0.c1, vt1.c0, rt12.c2, rt12.c1, vt0.c0, vt2.c0;
SELECT vt0.c1, vt1.c0, rt12.c2, rt12.c1, vt0.c0, vt2.c0 FROM vt1, vt2, rt12, vt0 WHERE (((((rt12.c1) ISNULL)) NOTNULL)) GROUP BY vt0.c1, vt1.c0, rt12.c2, rt12.c1, vt0.c0, vt2.c0 UNION SELECT ALL vt0.c1, vt1.c0, rt12.c2, rt12.c1, vt0.c0, vt2.c0 FROM vt1, vt2, rt12, vt0 WHERE ((NOT (((((rt12.c1) ISNULL)) NOTNULL)))) GROUP BY vt0.c1, vt1.c0, rt12.c2, rt12.c1, vt0.c0, vt2.c0 UNION SELECT vt0.c1, vt1.c0, rt12.c2, rt12.c1, vt0.c0, vt2.c0 FROM vt1, vt2, rt12, vt0 WHERE (((((((rt12.c1) ISNULL)) NOTNULL)) ISNULL)) GROUP BY vt0.c1, vt1.c0, rt12.c2, rt12.c1, vt0.c0, vt2.c0;
SELECT vt0.c1, vt1.c0, rt12.c2, rt12.c1, vt0.c0, vt2.c0 FROM vt1, vt2, rt12, vt0 GROUP BY vt0.c1, vt1.c0, rt12.c2, rt12.c1, vt0.c0, vt2.c0;
SELECT rt12.c0, rt12.c1, rt12.c2 FROM rt12 GROUP BY rt12.c0, rt12.c1, rt12.c2;
SELECT rt12.c0, rt12.c1, rt12.c2 FROM rt12 GROUP BY rt12.c0, rt12.c1, rt12.c2 HAVING SUM(MAX(rt12.c0)) UNION ALL SELECT rt12.c0, rt12.c1, rt12.c2 FROM rt12 GROUP BY rt12.c0, rt12.c1, rt12.c2 HAVING (NOT (SUM(MAX(rt12.c0)))) UNION ALL SELECT rt12.c0, rt12.c1, rt12.c2 FROM rt12 GROUP BY rt12.c0, rt12.c1, rt12.c2 HAVING ((SUM(MAX(rt12.c0))) ISNULL);
SELECT * FROM rt12, vt1, vt0, vt2;
SELECT * FROM rt12, vt1, vt0, vt2 WHERE (((- (rt12.c0)) IN ((((x'', rt12.c1, 0.6263178487044998)) NOT BETWEEN ((vt1.c0, rt12.c1, rt12.c0)) AND ((vt0.c1, rt12.c0, rt12.c1)))))) UNION ALL SELECT ALL * FROM rt12, vt1, vt0, vt2 WHERE ((NOT (((- (rt12.c0)) IN ((((x'', rt12.c1, 0.6263178487044998)) NOT BETWEEN ((vt1.c0, rt12.c1, rt12.c0)) AND ((vt0.c1, rt12.c0, rt12.c1)))))))) UNION ALL SELECT * FROM rt12, vt1, vt0, vt2 WHERE (((((- (rt12.c0)) IN ((((x'', rt12.c1, 0.6263178487044998)) NOT BETWEEN ((vt1.c0, rt12.c1, rt12.c0)) AND ((vt0.c1, rt12.c0, rt12.c1)))))) ISNULL));
SELECT * FROM rt12, vt1, vt0, vt2;
SELECT DISTINCT * FROM vt2;
SELECT DISTINCT * FROM vt2 WHERE ((((((((((((vt2.c0)OR(vt2.c0)))AND(vt2.c0)))OR(vt2.c0)))OR(vt2.c0))))<((((vt2.c0)<=(vt2.c0)))))) UNION SELECT DISTINCT * FROM vt2 WHERE ((NOT ((((((((((((vt2.c0)OR(vt2.c0)))AND(vt2.c0)))OR(vt2.c0)))OR(vt2.c0))))<((((vt2.c0)<=(vt2.c0)))))))) UNION SELECT DISTINCT * FROM vt2 WHERE ((((((((((((((vt2.c0)OR(vt2.c0)))AND(vt2.c0)))OR(vt2.c0)))OR(vt2.c0))))<((((vt2.c0)<=(vt2.c0)))))) ISNULL));
SELECT DISTINCT * FROM vt2;
SELECT ALL rt12.c0, rt12.c2, rt12.c1 FROM rt12 GROUP BY rt12.c0, rt12.c2, rt12.c1;
SELECT rt12.c0, rt12.c2, rt12.c1 FROM rt12 WHERE (rt12.c1) GROUP BY rt12.c0, rt12.c2, rt12.c1 UNION SELECT rt12.c0, rt12.c2, rt12.c1 FROM rt12 WHERE ((NOT (rt12.c1))) GROUP BY rt12.c0, rt12.c2, rt12.c1 UNION SELECT ALL rt12.c0, rt12.c2, rt12.c1 FROM rt12 WHERE (((rt12.c1) ISNULL)) GROUP BY rt12.c0, rt12.c2, rt12.c1;
SELECT ALL rt12.c0, rt12.c2, rt12.c1 FROM rt12 GROUP BY rt12.c0, rt12.c2, rt12.c1;
SELECT ALL vt2.c0, vt1.c0, rt12.c1 FROM rt12, vt2, vt1 GROUP BY vt2.c0, vt1.c0, rt12.c1;
SELECT ALL vt2.c0, vt1.c0, rt12.c1 FROM rt12, vt2, vt1 GROUP BY vt2.c0, vt1.c0, rt12.c1 HAVING (COUNT(rt12.c1) IN ()) COLLATE BINARY UNION ALL SELECT ALL vt2.c0, vt1.c0, rt12.c1 FROM rt12, vt2, vt1 GROUP BY vt2.c0, vt1.c0, rt12.c1 HAVING (NOT ((COUNT(rt12.c1) IN ()) COLLATE BINARY)) UNION ALL SELECT vt2.c0, vt1.c0, rt12.c1 FROM rt12, vt2, vt1 GROUP BY vt2.c0, vt1.c0, rt12.c1 HAVING (((COUNT(rt12.c1) IN ()) COLLATE BINARY) ISNULL);
SELECT ALL vt2.c0, vt1.c0, rt12.c1 FROM rt12, vt2, vt1 GROUP BY vt2.c0, vt1.c0, rt12.c1;
SELECT ALL vt2.c0, vt1.c0, rt12.c1 FROM rt12, vt2, vt1 GROUP BY vt2.c0, vt1.c0, rt12.c1 HAVING (COUNT(rt12.c1) IN ()) COLLATE BINARY UNION ALL SELECT ALL vt2.c0, vt1.c0, rt12.c1 FROM rt12, vt2, vt1 GROUP BY vt2.c0, vt1.c0, rt12.c1 HAVING (NOT ((COUNT(rt12.c1) IN ()) COLLATE BINARY)) UNION ALL SELECT vt2.c0, vt1.c0, rt12.c1 FROM rt12, vt2, vt1 GROUP BY vt2.c0, vt1.c0, rt12.c1 HAVING (((COUNT(rt12.c1) IN ()) COLLATE BINARY) ISNULL);
SELECT ALL vt2.c0, vt1.c0, rt12.c1 FROM rt12, vt2, vt1 GROUP BY vt2.c0, vt1.c0, rt12.c1;
SELECT vt2.c0 FROM vt0, vt2;
SELECT vt2.c0 FROM vt0, vt2 WHERE (SQLITE_VERSION()) UNION ALL SELECT vt2.c0 FROM vt0, vt2 WHERE ((NOT (SQLITE_VERSION()))) UNION ALL SELECT ALL vt2.c0 FROM vt0, vt2 WHERE (((SQLITE_VERSION()) ISNULL));
SELECT vt2.c0 FROM vt0, vt2;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE (vt1.c0) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT (vt1.c0))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((vt1.c0) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT rt12.c1, vt2.c0, vt1.c0, rt12.c0, rt12.c2, vt0.c0, vt0.c1 FROM vt2, vt1, rt12, vt0 GROUP BY rt12.c1, vt2.c0, vt1.c0, rt12.c0, rt12.c2, vt0.c0, vt0.c1;
SELECT ALL rt12.c1, vt2.c0, vt1.c0, rt12.c0, rt12.c2, vt0.c0, vt0.c1 FROM vt2, vt1, rt12, vt0 WHERE (CAST(((vt0.c1)+(vt1.c0)) AS BLOB)) GROUP BY rt12.c1, vt2.c0, vt1.c0, rt12.c0, rt12.c2, vt0.c0, vt0.c1 UNION SELECT rt12.c1, vt2.c0, vt1.c0, rt12.c0, rt12.c2, vt0.c0, vt0.c1 FROM vt2, vt1, rt12, vt0 WHERE ((NOT (CAST(((vt0.c1)+(vt1.c0)) AS BLOB)))) GROUP BY rt12.c1, vt2.c0, vt1.c0, rt12.c0, rt12.c2, vt0.c0, vt0.c1 UNION SELECT ALL rt12.c1, vt2.c0, vt1.c0, rt12.c0, rt12.c2, vt0.c0, vt0.c1 FROM vt2, vt1, rt12, vt0 WHERE (((CAST(((vt0.c1)+(vt1.c0)) AS BLOB)) ISNULL)) GROUP BY rt12.c1, vt2.c0, vt1.c0, rt12.c0, rt12.c2, vt0.c0, vt0.c1;
SELECT rt12.c1, vt2.c0, vt1.c0, rt12.c0, rt12.c2, vt0.c0, vt0.c1 FROM vt2, vt1, rt12, vt0 GROUP BY rt12.c1, vt2.c0, vt1.c0, rt12.c0, rt12.c2, vt0.c0, vt0.c1;
SELECT vt0.c1 FROM vt0, vt1 GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt0, vt1 GROUP BY vt0.c1 HAVING MIN((+ (AVG(vt0.c0)))) UNION ALL SELECT vt0.c1 FROM vt0, vt1 GROUP BY vt0.c1 HAVING (NOT (MIN((+ (AVG(vt0.c0)))))) UNION ALL SELECT vt0.c1 FROM vt0, vt1 GROUP BY vt0.c1 HAVING ((MIN((+ (AVG(vt0.c0))))) ISNULL);
SELECT * FROM vt0, rt12;
SELECT ALL * FROM vt0, rt12 WHERE (vt0.c0) UNION ALL SELECT * FROM vt0, rt12 WHERE ((NOT (vt0.c0))) UNION ALL SELECT * FROM vt0, rt12 WHERE (((vt0.c0) ISNULL));
SELECT * FROM vt0, rt12;
SELECT DISTINCT vt2.c0, vt1.c0 FROM vt1, vt2, vt0;
SELECT DISTINCT vt2.c0, vt1.c0 FROM vt1, vt2, vt0 WHERE ('-633440079') UNION SELECT DISTINCT vt2.c0, vt1.c0 FROM vt1, vt2, vt0 WHERE ((NOT ('-633440079'))) UNION SELECT DISTINCT vt2.c0, vt1.c0 FROM vt1, vt2, vt0 WHERE ((('-633440079') ISNULL));
SELECT DISTINCT vt2.c0, vt1.c0 FROM vt1, vt2, vt0;
SELECT vt0.c0, vt0.c1, vt2.c0 FROM vt0, vt2 GROUP BY vt0.c0, vt0.c1, vt2.c0;
SELECT vt0.c0, vt0.c1, vt2.c0 FROM vt0, vt2 WHERE ((((vt2.c0 IN ()))-(((vt0.c0) ISNULL)))) GROUP BY vt0.c0, vt0.c1, vt2.c0 UNION SELECT vt0.c0, vt0.c1, vt2.c0 FROM vt0, vt2 WHERE ((NOT ((((vt2.c0 IN ()))-(((vt0.c0) ISNULL)))))) GROUP BY vt0.c0, vt0.c1, vt2.c0 UNION SELECT vt0.c0, vt0.c1, vt2.c0 FROM vt0, vt2 WHERE ((((((vt2.c0 IN ()))-(((vt0.c0) ISNULL)))) ISNULL)) GROUP BY vt0.c0, vt0.c1, vt2.c0;
SELECT vt0.c0, vt0.c1, vt2.c0 FROM vt0, vt2 GROUP BY vt0.c0, vt0.c1, vt2.c0;
SELECT vt1.c0, rt12.c1 FROM vt2, rt12, vt1 GROUP BY vt1.c0, rt12.c1;
SELECT vt1.c0, rt12.c1 FROM vt2, rt12, vt1 GROUP BY vt1.c0, rt12.c1 HAVING AVG(CAST(GROUP_CONCAT(rt12.c2) AS NUMERIC)) UNION ALL SELECT vt1.c0, rt12.c1 FROM vt2, rt12, vt1 GROUP BY vt1.c0, rt12.c1 HAVING (NOT (AVG(CAST(GROUP_CONCAT(rt12.c2) AS NUMERIC)))) UNION ALL SELECT ALL vt1.c0, rt12.c1 FROM vt2, rt12, vt1 GROUP BY vt1.c0, rt12.c1 HAVING ((AVG(CAST(GROUP_CONCAT(rt12.c2) AS NUMERIC))) ISNULL);
SELECT ALL * FROM vt0, vt2, vt1;
SELECT * FROM vt0, vt2, vt1 WHERE (LIKELIHOOD((('k2') BETWEEN (vt2.c0) AND (vt0.c1)), 0.22644088412006647)) UNION ALL SELECT ALL * FROM vt0, vt2, vt1 WHERE ((NOT (LIKELIHOOD((('k2') BETWEEN (vt2.c0) AND (vt0.c1)), 0.22644088412006647)))) UNION ALL SELECT ALL * FROM vt0, vt2, vt1 WHERE (((LIKELIHOOD((('k2') BETWEEN (vt2.c0) AND (vt0.c1)), 0.22644088412006647)) ISNULL));
SELECT ALL * FROM vt0, vt2, vt1;
SELECT DISTINCT * FROM rt12, vt0, vt1;
SELECT DISTINCT * FROM rt12, vt0, vt1 WHERE (CAST((vt1.c0 IN ()) AS INTEGER)) UNION SELECT DISTINCT * FROM rt12, vt0, vt1 WHERE ((NOT (CAST((vt1.c0 IN ()) AS INTEGER)))) UNION SELECT DISTINCT * FROM rt12, vt0, vt1 WHERE (((CAST((vt1.c0 IN ()) AS INTEGER)) ISNULL));
SELECT DISTINCT * FROM rt12, vt0, vt1;
SELECT ALL rt12.c0, vt0.c1, rt12.c1, vt2.c0 FROM rt12, vt2, vt0 GROUP BY rt12.c0, vt0.c1, rt12.c1, vt2.c0;
SELECT rt12.c0, vt0.c1, rt12.c1, vt2.c0 FROM rt12, vt2, vt0 WHERE (vt0.c0) GROUP BY rt12.c0, vt0.c1, rt12.c1, vt2.c0 UNION SELECT ALL rt12.c0, vt0.c1, rt12.c1, vt2.c0 FROM rt12, vt2, vt0 WHERE ((NOT (vt0.c0))) GROUP BY rt12.c0, vt0.c1, rt12.c1, vt2.c0 UNION SELECT ALL rt12.c0, vt0.c1, rt12.c1, vt2.c0 FROM rt12, vt2, vt0 WHERE (((vt0.c0) ISNULL)) GROUP BY rt12.c0, vt0.c1, rt12.c1, vt2.c0;
SELECT ALL rt12.c0, vt0.c1, rt12.c1, vt2.c0 FROM rt12, vt2, vt0 GROUP BY rt12.c0, vt0.c1, rt12.c1, vt2.c0;
SELECT vt2.c0, vt0.c1, vt0.c0, rt12.c1, rt12.c2 FROM rt12, vt2, vt0, vt1 GROUP BY vt2.c0, vt0.c1, vt0.c0, rt12.c1, rt12.c2;
SELECT vt2.c0, vt0.c1, vt0.c0, rt12.c1, rt12.c2 FROM rt12, vt2, vt0, vt1 GROUP BY vt2.c0, vt0.c1, vt0.c0, rt12.c1, rt12.c2 HAVING COUNT(vt2.c0) COLLATE RTRIM UNION ALL SELECT vt2.c0, vt0.c1, vt0.c0, rt12.c1, rt12.c2 FROM rt12, vt2, vt0, vt1 GROUP BY vt2.c0, vt0.c1, vt0.c0, rt12.c1, rt12.c2 HAVING (NOT (COUNT(vt2.c0) COLLATE RTRIM)) UNION ALL SELECT vt2.c0, vt0.c1, vt0.c0, rt12.c1, rt12.c2 FROM rt12, vt2 NOT INDEXED, vt0, vt1 GROUP BY vt2.c0, vt0.c1, vt0.c0, rt12.c1, rt12.c2 HAVING ((COUNT(vt2.c0) COLLATE RTRIM) ISNULL);
SELECT vt2.c0, vt0.c1, vt0.c0, rt12.c1, rt12.c2 FROM rt12, vt2, vt0, vt1 GROUP BY vt2.c0, vt0.c1, vt0.c0, rt12.c1, rt12.c2;
SELECT vt2.c0, vt0.c1, vt0.c0, rt12.c1, rt12.c2 FROM rt12, vt2, vt0, vt1 GROUP BY vt2.c0, vt0.c1, vt0.c0, rt12.c1, rt12.c2 HAVING COUNT(vt2.c0) COLLATE RTRIM UNION ALL SELECT vt2.c0, vt0.c1, vt0.c0, rt12.c1, rt12.c2 FROM rt12, vt2, vt0, vt1 GROUP BY vt2.c0, vt0.c1, vt0.c0, rt12.c1, rt12.c2 HAVING (NOT (COUNT(vt2.c0) COLLATE RTRIM)) UNION ALL SELECT vt2.c0, vt0.c1, vt0.c0, rt12.c1, rt12.c2 FROM rt12, vt2 NOT INDEXED, vt0, vt1 GROUP BY vt2.c0, vt0.c1, vt0.c0, rt12.c1, rt12.c2 HAVING ((COUNT(vt2.c0) COLLATE RTRIM) ISNULL);
SELECT vt2.c0, vt0.c1, vt0.c0, rt12.c1, rt12.c2 FROM rt12, vt2, vt0, vt1 GROUP BY vt2.c0, vt0.c1, vt0.c0, rt12.c1, rt12.c2;
SELECT * FROM rt12 INNER JOIN vt1 ON ((((((((0.16540691119039852)AND(CAST(vt1.c0 AS NUMERIC))))OR(((((((((((((vt1.c0)OR(rt12.c0)))AND(']u?,ꄫV')))AND(vt1.c0)))OR(vt1.c0)))OR(rt12.c2)))OR(vt1.c0)))))OR(rt12.c2)))OR(vt1.c0));
SELECT ALL * FROM rt12 INNER JOIN vt1 ON ((((((((0.16540691119039852)AND(CAST(vt1.c0 AS NUMERIC))))OR(((((((((((((vt1.c0)OR(rt12.c0)))AND(']u?,ꄫV')))AND(vt1.c0)))OR(vt1.c0)))OR(rt12.c2)))OR(vt1.c0)))))OR(rt12.c2)))OR(vt1.c0)) WHERE (json_patch(rt12.c1, (1.056191779E9 IN ()))) UNION ALL SELECT * FROM rt12 INNER JOIN vt1 ON ((((((((0.16540691119039852)AND(CAST(vt1.c0 AS NUMERIC))))OR(((((((((((((vt1.c0)OR(rt12.c0)))AND(']u?,ꄫV')))AND(vt1.c0)))OR(vt1.c0)))OR(rt12.c2)))OR(vt1.c0)))))OR(rt12.c2)))OR(vt1.c0)) WHERE ((NOT (json_patch(rt12.c1, (1.056191779E9 IN ()))))) UNION ALL SELECT * FROM rt12 INNER JOIN vt1 ON ((((((((0.16540691119039852)AND(CAST(vt1.c0 AS NUMERIC))))OR(((((((((((((vt1.c0)OR(rt12.c0)))AND(']u?,ꄫV')))AND(vt1.c0)))OR(vt1.c0)))OR(rt12.c2)))OR(vt1.c0)))))OR(rt12.c2)))OR(vt1.c0)) WHERE (((json_patch(rt12.c1, (1.056191779E9 IN ()))) ISNULL));
SELECT * FROM rt12 INNER JOIN vt1 ON ((((((((0.16540691119039852)AND(CAST(vt1.c0 AS NUMERIC))))OR(((((((((((((vt1.c0)OR(rt12.c0)))AND(']u?,ꄫV')))AND(vt1.c0)))OR(vt1.c0)))OR(rt12.c2)))OR(vt1.c0)))))OR(rt12.c2)))OR(vt1.c0));
SELECT DISTINCT * FROM rt12, vt0, vt1, vt2;
SELECT DISTINCT * FROM rt12, vt0, vt1, vt2 WHERE (CAST(((vt2.c0)<<(rt12.c2)) AS TEXT)) UNION SELECT DISTINCT * FROM rt12, vt0, vt1, vt2 WHERE ((NOT (CAST(((vt2.c0)<<(rt12.c2)) AS TEXT)))) UNION SELECT DISTINCT * FROM rt12, vt0, vt1, vt2 WHERE (((CAST(((vt2.c0)<<(rt12.c2)) AS TEXT)) ISNULL));
SELECT DISTINCT * FROM rt12, vt0, vt1, vt2;
SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT vt2.c0 FROM vt2 WHERE ((('') BETWEEN (vt2.c0) AND (((((vt2.c0)OR(NULL)))AND(vt2.c0))))) GROUP BY vt2.c0 UNION SELECT ALL vt2.c0 FROM vt2 WHERE ((NOT ((('') BETWEEN (vt2.c0) AND (((((vt2.c0)OR(NULL)))AND(vt2.c0))))))) GROUP BY vt2.c0 UNION SELECT vt2.c0 FROM vt2 WHERE ((((('') BETWEEN (vt2.c0) AND (((((vt2.c0)OR(NULL)))AND(vt2.c0))))) ISNULL)) GROUP BY vt2.c0;
SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt0.c1, vt1.c0 FROM vt2, vt1, rt12, vt0;
SELECT vt0.c1, vt1.c0 FROM vt2, vt1, rt12, vt0 WHERE ((((((NULL)AND(vt0.c0)))AND(vt0.c1)) IN ())) UNION ALL SELECT ALL vt0.c1, vt1.c0 FROM vt2, vt1, rt12, vt0 WHERE ((NOT ((((((NULL)AND(vt0.c0)))AND(vt0.c1)) IN ())))) UNION ALL SELECT vt0.c1, vt1.c0 FROM vt2, vt1, rt12, vt0 WHERE ((((((((NULL)AND(vt0.c0)))AND(vt0.c1)) IN ())) ISNULL));
SELECT ALL vt0.c1, vt1.c0 FROM vt2, vt1, rt12, vt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (x'79ff') UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (x'79ff'))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((x'79ff') ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT vt2.c0 FROM vt2, vt0, vt1 GROUP BY vt2.c0;
SELECT ALL vt2.c0 FROM vt2, vt0, vt1 WHERE (TRIM(DISTINCT vt2.c0, ((vt0.c1)||(vt1.c0)))) GROUP BY vt2.c0 UNION SELECT vt2.c0 FROM vt2, vt0, vt1 WHERE ((NOT (TRIM(DISTINCT vt2.c0, ((vt0.c1)||(vt1.c0)))))) GROUP BY vt2.c0 UNION SELECT ALL vt2.c0 FROM vt2, vt0, vt1 WHERE (((TRIM(DISTINCT vt2.c0, ((vt0.c1)||(vt1.c0)))) ISNULL)) GROUP BY vt2.c0;
SELECT vt2.c0 FROM vt2, vt0, vt1 GROUP BY vt2.c0;
SELECT rt12.c2, rt12.c0, vt0.c1 FROM vt1 LEFT OUTER JOIN rt12 ON IFNULL(DISTINCT ((rt12.c1)>>(vt1.c0)), (vt0.c0 IN (rt12.c2))) CROSS JOIN vt2 ON (((+ (rt12.c2))) NOT NULL) FULL OUTER JOIN vt0 ON (CAST(rt12.c1 AS REAL) IN ()) GROUP BY rt12.c2, rt12.c0, vt0.c1;
SELECT ALL rt12.c0, vt0.c0, vt0.c1, vt2.c0 FROM vt2, rt12, vt1, vt0;
SELECT ALL rt12.c0, vt0.c0, vt0.c1, vt2.c0 FROM vt2, rt12, vt1, vt0 WHERE (LAST_INSERT_ROWID() COLLATE BINARY) UNION ALL SELECT rt12.c0, vt0.c0, vt0.c1, vt2.c0 FROM vt2, rt12, vt1, vt0 WHERE ((NOT (LAST_INSERT_ROWID() COLLATE BINARY))) UNION ALL SELECT ALL rt12.c0, vt0.c0, vt0.c1, vt2.c0 FROM vt2, rt12, vt1, vt0 WHERE (((LAST_INSERT_ROWID() COLLATE BINARY) ISNULL));
SELECT ALL rt12.c0, vt0.c0, vt0.c1, vt2.c0 FROM vt2, rt12, vt1, vt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((((0.4618266114496775, json_extract(vt0.c1, vt0.c1), CAST(vt0.c0 AS NUMERIC), CAST(vt0.c0 AS NUMERIC), (vt0.c0 IN ())))<>(((vt0.c0 IN ()), ((((vt0.c1)AND(vt0.c0)))AND(vt0.c0)), vt0.c1 COLLATE NOCASE, (- (x'aaa1')), ((vt0.c0)||(vt0.c1)))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT ((((0.4618266114496775, json_extract(vt0.c1, vt0.c1), CAST(vt0.c0 AS NUMERIC), CAST(vt0.c0 AS NUMERIC), (vt0.c0 IN ())))!=(((vt0.c0 IN ()), ((((vt0.c1)AND(vt0.c0)))AND(vt0.c0)), vt0.c1 COLLATE NOCASE, (- (x'aaa1')), ((vt0.c0)||(vt0.c1)))))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((((((0.4618266114496775, json_extract(vt0.c1, vt0.c1), CAST(vt0.c0 AS NUMERIC), CAST(vt0.c0 AS NUMERIC), (vt0.c0 IN ())))<>(((vt0.c0 IN ()), ((((vt0.c1)AND(vt0.c0)))AND(vt0.c0)), vt0.c1 COLLATE NOCASE, (- (x'aaa1')), ((vt0.c0)||(vt0.c1)))))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE (vt1.c0) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT (vt1.c0))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE (((vt1.c0) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt0.c0, rt12.c2, rt12.c0, rt12.c1, vt2.c0 FROM vt2 INNER JOIN rt12 ON '#7U' FULL OUTER JOIN vt0 ON -3.18347799E8 GROUP BY vt0.c0, rt12.c2, rt12.c0, rt12.c1, vt2.c0;
SELECT vt0.c0, rt12.c2, rt12.c0, rt12.c1, vt2.c0 FROM vt2 INNER JOIN rt12 ON '#7U' FULL OUTER JOIN vt0 ON -3.18347799E8 GROUP BY vt0.c0, rt12.c2, rt12.c0, rt12.c1, vt2.c0 HAVING ((rt12.c2)>=(COUNT(0.47299641782903457))) UNION ALL SELECT vt0.c0, rt12.c2, rt12.c0, rt12.c1, vt2.c0 FROM vt2 INNER JOIN rt12 ON '#7U' FULL OUTER JOIN vt0 ON -3.18347799E8 GROUP BY vt0.c0, rt12.c2, rt12.c0, rt12.c1, vt2.c0 HAVING (NOT (((rt12.c2)>=(COUNT(0.47299641782903457))))) UNION ALL SELECT ALL vt0.c0, rt12.c2, rt12.c0, rt12.c1, vt2.c0 FROM vt2 INNER JOIN rt12 ON '#7U' FULL OUTER JOIN vt0 ON -3.18347799E8 GROUP BY vt0.c0, rt12.c2, rt12.c0, rt12.c1, vt2.c0 HAVING ((((rt12.c2)>=(COUNT(0.47299641782903457)))) ISNULL);
SELECT ALL vt0.c0, rt12.c2, rt12.c0, rt12.c1, vt2.c0 FROM vt2 INNER JOIN rt12 ON '#7U' FULL OUTER JOIN vt0 ON -3.18347799E8 GROUP BY vt0.c0, rt12.c2, rt12.c0, rt12.c1, vt2.c0;
SELECT vt0.c0, rt12.c2, rt12.c0, rt12.c1, vt2.c0 FROM vt2 INNER JOIN rt12 ON '#7U' FULL OUTER JOIN vt0 ON -3.18347799E8 GROUP BY vt0.c0, rt12.c2, rt12.c0, rt12.c1, vt2.c0 HAVING ((rt12.c2)>=(COUNT(0.47299641782903457))) UNION ALL SELECT vt0.c0, rt12.c2, rt12.c0, rt12.c1, vt2.c0 FROM vt2 INNER JOIN rt12 ON '#7U' FULL OUTER JOIN vt0 ON -3.18347799E8 GROUP BY vt0.c0, rt12.c2, rt12.c0, rt12.c1, vt2.c0 HAVING (NOT (((rt12.c2)>=(COUNT(0.47299641782903457))))) UNION ALL SELECT ALL vt0.c0, rt12.c2, rt12.c0, rt12.c1, vt2.c0 FROM vt2 INNER JOIN rt12 ON '#7U' FULL OUTER JOIN vt0 ON -3.18347799E8 GROUP BY vt0.c0, rt12.c2, rt12.c0, rt12.c1, vt2.c0 HAVING ((((rt12.c2)>=(COUNT(0.47299641782903457)))) ISNULL);
SELECT ALL vt0.c0, rt12.c2, rt12.c0, rt12.c1, vt2.c0 FROM vt2 INNER JOIN rt12 ON '#7U' FULL OUTER JOIN vt0 ON -3.18347799E8 GROUP BY vt0.c0, rt12.c2, rt12.c0, rt12.c1, vt2.c0;
SELECT ALL vt1.c0, rt12.c2, rt12.c1, rt12.c0 FROM rt12, vt1;
SELECT ALL vt1.c0, rt12.c2, rt12.c1, rt12.c0 FROM rt12, vt1 WHERE (CAST(rt12.c0 COLLATE NOCASE AS NUMERIC)) UNION ALL SELECT ALL vt1.c0, rt12.c2, rt12.c1, rt12.c0 FROM rt12, vt1 WHERE ((NOT (CAST(rt12.c0 COLLATE NOCASE AS NUMERIC)))) UNION ALL SELECT vt1.c0, rt12.c2, rt12.c1, rt12.c0 FROM rt12, vt1 WHERE (((CAST(rt12.c0 COLLATE NOCASE AS NUMERIC)) ISNULL));
SELECT ALL vt1.c0, rt12.c2, rt12.c1, rt12.c0 FROM rt12, vt1;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (-7.01160311E8) AND (vt0.c0))) IS TRUE)) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((((vt0.c0) NOT BETWEEN (-7.01160311E8) AND (vt0.c0))) IS TRUE)))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((((vt0.c0) NOT BETWEEN (-7.01160311E8) AND (vt0.c0))) IS TRUE)) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL rt12.c0, vt1.c0, rt12.c2 FROM rt12, vt1 GROUP BY rt12.c0, vt1.c0, rt12.c2;
SELECT rt12.c0, vt1.c0, rt12.c2 FROM rt12, vt1 WHERE ((((rt12.c0) IS FALSE) IN (((vt1.c0) NOT BETWEEN (0.6968188379816224) AND (vt1.c0)), CAST(vt1.c0 AS BLOB)))) GROUP BY rt12.c0, vt1.c0, rt12.c2 UNION SELECT ALL rt12.c0, vt1.c0, rt12.c2 FROM rt12 NOT INDEXED, vt1 WHERE ((NOT ((((rt12.c0) IS FALSE) IN (((vt1.c0) NOT BETWEEN (0.6968188379816224) AND (vt1.c0)), CAST(vt1.c0 AS BLOB)))))) GROUP BY rt12.c0, vt1.c0, rt12.c2 UNION SELECT rt12.c0, vt1.c0, rt12.c2 FROM rt12, vt1 WHERE ((((((rt12.c0) IS FALSE) IN (((vt1.c0) NOT BETWEEN (0.6968188379816224) AND (vt1.c0)), CAST(vt1.c0 AS BLOB)))) ISNULL)) GROUP BY rt12.c0, vt1.c0, rt12.c2;
SELECT ALL rt12.c0, vt1.c0, rt12.c2 FROM rt12, vt1 GROUP BY rt12.c0, vt1.c0, rt12.c2;
SELECT ALL rt12.c0, rt12.c1 FROM rt12, vt2 LEFT OUTER JOIN vt1 ON rt12.c1 LEFT OUTER JOIN vt0 ON 0xffffffffab7a3f08 GROUP BY rt12.c0, rt12.c1;
SELECT ALL rt12.c0, rt12.c1 FROM rt12, vt2 LEFT OUTER JOIN vt1 ON rt12.c1 LEFT OUTER JOIN vt0 ON 0xffffffffab7a3f08 GROUP BY rt12.c0, rt12.c1 HAVING (((COUNT(*)))>=((MAX(vt0.c1)))) UNION ALL SELECT rt12.c0, rt12.c1 FROM rt12, vt2 LEFT OUTER JOIN vt1 ON rt12.c1 LEFT OUTER JOIN vt0 ON 0xffffffffab7a3f08 GROUP BY rt12.c0, rt12.c1 HAVING (NOT ((((COUNT(*)))>=((MAX(vt0.c1)))))) UNION ALL SELECT rt12.c0, rt12.c1 FROM rt12, vt2 LEFT OUTER JOIN vt1 ON rt12.c1 LEFT OUTER JOIN vt0 ON 0Xffffffffab7a3f08 GROUP BY rt12.c0, rt12.c1 HAVING (((((COUNT(*)))>=((MAX(vt0.c1))))) ISNULL);
SELECT ALL rt12.c0, rt12.c1 FROM rt12, vt2 LEFT OUTER JOIN vt1 ON rt12.c1 LEFT OUTER JOIN vt0 ON 0xffffffffab7a3f08 GROUP BY rt12.c0, rt12.c1;
SELECT ALL rt12.c0, rt12.c1 FROM rt12, vt2 LEFT OUTER JOIN vt1 ON rt12.c1 LEFT OUTER JOIN vt0 ON 0xffffffffab7a3f08 GROUP BY rt12.c0, rt12.c1 HAVING (((COUNT(*)))>=((MAX(vt0.c1)))) UNION ALL SELECT rt12.c0, rt12.c1 FROM rt12, vt2 LEFT OUTER JOIN vt1 ON rt12.c1 LEFT OUTER JOIN vt0 ON 0xffffffffab7a3f08 GROUP BY rt12.c0, rt12.c1 HAVING (NOT ((((COUNT(*)))>=((MAX(vt0.c1)))))) UNION ALL SELECT rt12.c0, rt12.c1 FROM rt12, vt2 LEFT OUTER JOIN vt1 ON rt12.c1 LEFT OUTER JOIN vt0 ON 0Xffffffffab7a3f08 GROUP BY rt12.c0, rt12.c1 HAVING (((((COUNT(*)))>=((MAX(vt0.c1))))) ISNULL);
SELECT ALL rt12.c0, rt12.c1 FROM rt12, vt2 LEFT OUTER JOIN vt1 ON rt12.c1 LEFT OUTER JOIN vt0 ON 0xffffffffab7a3f08 GROUP BY rt12.c0, rt12.c1;
SELECT ALL vt1.c0 FROM vt1;
SELECT ALL vt1.c0 FROM vt1 WHERE (((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END) IS TRUE)) UNION ALL SELECT vt1.c0 FROM vt1 WHERE ((NOT (((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END) IS TRUE)))) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE (((((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END) IS TRUE)) ISNULL));
SELECT ALL vt1.c0 FROM vt1;
SELECT DISTINCT * FROM vt1, rt12, vt2;
SELECT DISTINCT * FROM vt1, rt12, vt2 WHERE ((+ (json_extract(rt12.c2, vt2.c0, rt12.c0, rt12.c2)))) UNION SELECT DISTINCT * FROM vt1, rt12, vt2 WHERE ((NOT ((+ (json_extract(rt12.c2, vt2.c0, rt12.c0, rt12.c2)))))) UNION SELECT DISTINCT * FROM vt1, rt12, vt2 WHERE ((((+ (json_extract(rt12.c2, vt2.c0, rt12.c0, rt12.c2)))) ISNULL));
SELECT ALL rt12.c1, vt0.c0, vt2.c0 FROM vt2, vt0, rt12, vt1 GROUP BY rt12.c1, vt0.c0, vt2.c0;
SELECT rt12.c1, vt0.c0, vt2.c0 FROM vt2, vt0, rt12, vt1 WHERE (((rt12.c1)IS NOT(CASE vt2.c0  WHEN vt1.c0 THEN rt12.c2 END))) GROUP BY rt12.c1, vt0.c0, vt2.c0 UNION SELECT rt12.c1, vt0.c0, vt2.c0 FROM vt2, vt0, rt12, vt1 WHERE ((NOT (((rt12.c1)IS NOT(CASE vt2.c0  WHEN vt1.c0 THEN rt12.c2 END))))) GROUP BY rt12.c1, vt0.c0, vt2.c0 UNION SELECT rt12.c1, vt0.c0, vt2.c0 FROM vt2, vt0, rt12, vt1 WHERE (((((rt12.c1)IS NOT(CASE vt2.c0  WHEN vt1.c0 THEN rt12.c2 END))) ISNULL)) GROUP BY rt12.c1, vt0.c0, vt2.c0;
SELECT ALL rt12.c1, vt0.c0, vt2.c0 FROM vt2, vt0, rt12, vt1 GROUP BY rt12.c1, vt0.c0, vt2.c0;
SELECT ALL rt12.c0, rt12.c1 FROM vt2, rt12 GROUP BY rt12.c0, rt12.c1;
SELECT ALL rt12.c0, rt12.c1 FROM vt2, rt12 GROUP BY rt12.c0, rt12.c1 HAVING CASE COUNT(*)  WHEN SUM(COUNT(*)) THEN 'Crw[1廎V\n' ELSE (((('({)D')OR(rt12.c2)))OR(MIN(AVG(MIN(COUNT(*)))))) END UNION ALL SELECT rt12.c0, rt12.c1 FROM vt2, rt12 GROUP BY rt12.c0, rt12.c1 HAVING (NOT (CASE COUNT(*)  WHEN SUM(COUNT(*)) THEN 'Crw[1廎V\n' ELSE (((('({)D')OR(rt12.c2)))OR(MIN(AVG(MIN(COUNT(*)))))) END)) UNION ALL SELECT rt12.c0, rt12.c1 FROM vt2, rt12 GROUP BY rt12.c0, rt12.c1 HAVING ((CASE COUNT(*)  WHEN SUM(COUNT(*)) THEN 'Crw[1廎V\n' ELSE (((('({)D')OR(rt12.c2)))OR(MIN(AVG(MIN(COUNT(*)))))) END) ISNULL);
SELECT ALL vt2.c0, vt0.c0 FROM vt0, vt2, vt1;
SELECT ALL vt2.c0, vt0.c0 FROM vt0, vt2, vt1 WHERE (((((vt1.c0)>=(vt2.c0)))AND(((vt0.c0) BETWEEN (vt2.c0) AND (vt1.c0))))) UNION ALL SELECT ALL vt2.c0, vt0.c0 FROM vt0, vt2, vt1 WHERE ((NOT (((((vt1.c0)>=(vt2.c0)))AND(((vt0.c0) BETWEEN (vt2.c0) AND (vt1.c0))))))) UNION ALL SELECT ALL vt2.c0, vt0.c0 FROM vt0, vt2, vt1 WHERE (((((((vt1.c0)>=(vt2.c0)))AND(((vt0.c0) BETWEEN (vt2.c0) AND (vt1.c0))))) ISNULL));
SELECT ALL vt2.c0, vt0.c0 FROM vt0, vt2, vt1;
SELECT DISTINCT vt2.c0 FROM vt2;
SELECT DISTINCT vt2.c0 FROM vt2 WHERE (((((vt2.c0)!=(vt2.c0)))-(((vt2.c0)||(vt2.c0))))) UNION SELECT DISTINCT vt2.c0 FROM vt2 WHERE ((NOT (((((vt2.c0)<>(vt2.c0)))-(((vt2.c0)||(vt2.c0))))))) UNION SELECT DISTINCT vt2.c0 FROM vt2 WHERE (((((((vt2.c0)!=(vt2.c0)))-(((vt2.c0)||(vt2.c0))))) ISNULL));
SELECT DISTINCT vt2.c0 FROM vt2;
SELECT vt2.c0 FROM vt0, vt1, vt2, rt12 GROUP BY vt2.c0;
SELECT vt2.c0 FROM vt0, vt1, vt2, rt12 WHERE ((NOT ((((vt2.c0))<((vt0.c1)))))) GROUP BY vt2.c0 UNION SELECT vt2.c0 FROM vt0, vt1, vt2, rt12 WHERE ((NOT ((NOT ((((vt2.c0))<((vt0.c1)))))))) GROUP BY vt2.c0 UNION SELECT ALL vt2.c0 FROM vt0, vt1, vt2, rt12 WHERE ((((NOT ((((vt2.c0))<((vt0.c1)))))) ISNULL)) GROUP BY vt2.c0;
SELECT vt2.c0 FROM vt0, vt1, vt2, rt12 GROUP BY vt2.c0;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING ((((((((COUNT(*))AND(CAST(vt0.c1 AS BLOB))))OR(TOTAL(vt0.c1))))OR(vt0.c1 COLLATE RTRIM)))OR(vt0.c0)) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING (NOT (((((((((COUNT(*))AND(CAST(vt0.c1 AS BLOB))))OR(TOTAL(vt0.c1))))OR(vt0.c1 COLLATE RTRIM)))OR(vt0.c0)))) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING ((((((((((COUNT(*))AND(CAST(vt0.c1 AS BLOB))))OR(TOTAL(vt0.c1))))OR(vt0.c1 COLLATE RTRIM)))OR(vt0.c0))) ISNULL);
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING ((((((((COUNT(*))AND(CAST(vt0.c1 AS BLOB))))OR(TOTAL(vt0.c1))))OR(vt0.c1 COLLATE RTRIM)))OR(vt0.c0)) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING (NOT (((((((((COUNT(*))AND(CAST(vt0.c1 AS BLOB))))OR(TOTAL(vt0.c1))))OR(vt0.c1 COLLATE RTRIM)))OR(vt0.c0)))) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING ((((((((((COUNT(*))AND(CAST(vt0.c1 AS BLOB))))OR(TOTAL(vt0.c1))))OR(vt0.c1 COLLATE RTRIM)))OR(vt0.c0))) ISNULL);
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL rt12.c1 FROM vt2, vt1 INNER JOIN rt12 ON ((((vt2.c0)GLOB(rt12.c2))) IS TRUE);
SELECT ALL rt12.c1 FROM vt2, vt1 INNER JOIN rt12 ON ((((vt2.c0)GLOB(rt12.c2))) IS TRUE) WHERE (((LIKELIHOOD(DISTINCT rt12.c2, 0.48257547125428846)) BETWEEN (CAST(rt12.c2 AS NUMERIC)) AND (rt12.c0))) ORDER BY rt12.c0  NULLS LAST;
SELECT ALL rt12.c1 FROM vt2, vt1 INNER JOIN rt12 ON ((((vt2.c0)GLOB(rt12.c2))) IS TRUE) WHERE ((NOT (((LIKELIHOOD(DISTINCT rt12.c2, 0.48257547125428846)) BETWEEN (CAST(rt12.c2 AS NUMERIC)) AND (rt12.c0))))) ORDER BY rt12.c0  NULLS LAST;
SELECT ALL rt12.c1 FROM vt2, vt1 INNER JOIN rt12 ON ((((vt2.c0)GLOB(rt12.c2))) IS TRUE) WHERE (((((LIKELIHOOD(DISTINCT rt12.c2, 0.48257547125428846)) BETWEEN (CAST(rt12.c2 AS NUMERIC)) AND (rt12.c0))) ISNULL)) ORDER BY rt12.c0  NULLS LAST;
SELECT ALL rt12.c1 FROM vt2, vt1 INNER JOIN rt12 ON ((((vt2.c0)GLOB(rt12.c2))) IS TRUE);
SELECT DISTINCT vt0.c1, rt12.c0 FROM vt0, vt1 LEFT OUTER JOIN rt12 ON (((vt0.c1 IN (vt0.c0))) NOT BETWEEN (0.9546638413541888) AND ((vt0.c0 IN ()))) LEFT OUTER JOIN vt2 ON ((((((rt12.c0)OR(rt12.c1)))AND(vt2.c0)))IS NOT(vt0.c0 COLLATE BINARY));
SELECT DISTINCT vt0.c1, rt12.c0 FROM vt0, vt1 LEFT OUTER JOIN rt12 ON (((vt0.c1 IN (vt0.c0))) NOT BETWEEN (0.9546638413541888) AND ((vt0.c0 IN ()))) LEFT OUTER JOIN vt2 ON ((((((rt12.c0)OR(rt12.c1)))AND(vt2.c0)))IS NOT(vt0.c0 COLLATE BINARY)) WHERE (((((rt12.c0)<(vt0.c0)))&(CAST(vt0.c1 AS BLOB)))) UNION SELECT DISTINCT vt0.c1, rt12.c0 FROM vt0, vt1 LEFT OUTER JOIN rt12 ON (((vt0.c1 IN (vt0.c0))) NOT BETWEEN (0.9546638413541888) AND ((vt0.c0 IN ()))) LEFT OUTER JOIN vt2 ON ((((((rt12.c0)OR(rt12.c1)))AND(vt2.c0)))IS NOT(vt0.c0 COLLATE BINARY)) WHERE ((NOT (((((rt12.c0)<(vt0.c0)))&(CAST(vt0.c1 AS BLOB)))))) UNION SELECT DISTINCT vt0.c1, rt12.c0 FROM vt0, vt1 LEFT OUTER JOIN rt12 ON (((vt0.c1 IN (vt0.c0))) NOT BETWEEN (0.9546638413541888) AND ((vt0.c0 IN ()))) LEFT OUTER JOIN vt2 ON ((((((rt12.c0)OR(rt12.c1)))AND(vt2.c0)))IS NOT(vt0.c0 COLLATE BINARY)) WHERE (((((((rt12.c0)<(vt0.c0)))&(CAST(vt0.c1 AS BLOB)))) ISNULL));
SELECT DISTINCT vt0.c1, rt12.c0 FROM vt0, vt1 LEFT OUTER JOIN rt12 ON (((vt0.c1 IN (vt0.c0))) NOT BETWEEN (0.9546638413541888) AND ((vt0.c0 IN ()))) LEFT OUTER JOIN vt2 ON ((((((rt12.c0)OR(rt12.c1)))AND(vt2.c0)))IS NOT(vt0.c0 COLLATE BINARY));
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE (0.8618473653568988) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (0.8618473653568988))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE (((0.8618473653568988) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT rt12.c1, vt0.c1 FROM vt0, rt12, vt1, vt2 GROUP BY rt12.c1, vt0.c1;
SELECT rt12.c1, vt0.c1 FROM vt0, rt12, vt1, vt2 GROUP BY rt12.c1, vt0.c1 HAVING COUNT(MIN(vt0.c1)) UNION ALL SELECT ALL rt12.c1, vt0.c1 FROM vt0, rt12, vt1, vt2 GROUP BY rt12.c1, vt0.c1 HAVING (NOT (COUNT(MIN(vt0.c1)))) UNION ALL SELECT rt12.c1, vt0.c1 FROM vt0, rt12, vt1, vt2 GROUP BY rt12.c1, vt0.c1 HAVING ((COUNT(MIN(vt0.c1))) ISNULL);
SELECT ALL vt1.c0, rt12.c2, vt2.c0, rt12.c0 FROM vt1 CROSS JOIN rt12 ON TYPEOF(DISTINCT ((vt1.c0)<(rt12.c2))) INNER JOIN vt2 ON ((((((((UNLIKELY(DISTINCT vt2.c0))OR(rt12.c1)))AND(COALESCE(rt12.c1, 0x65f98fba, vt1.c0, rt12.c2))))AND(CAST(rt12.c1 AS TEXT))))AND(((((vt1.c0)AND(vt2.c0)))AND(vt2.c0))));
SELECT ALL vt1.c0, rt12.c2, vt2.c0, rt12.c0 FROM vt1 CROSS JOIN rt12 ON TYPEOF(DISTINCT ((vt1.c0)<(rt12.c2))) INNER JOIN vt2 ON ((((((((UNLIKELY(DISTINCT vt2.c0))OR(rt12.c1)))AND(COALESCE(rt12.c1, 0X65f98fba, vt1.c0, rt12.c2))))AND(CAST(rt12.c1 AS TEXT))))AND(((((vt1.c0)AND(vt2.c0)))AND(vt2.c0)))) WHERE ((((((rt12.c1)) BETWEEN ((rt12.c1)) AND ((rt12.c2)))) NOTNULL)) UNION ALL SELECT vt1.c0, rt12.c2, vt2.c0, rt12.c0 FROM vt1 CROSS JOIN rt12 ON TYPEOF(DISTINCT ((vt1.c0)<(rt12.c2))) INNER JOIN vt2 ON ((((((((UNLIKELY(DISTINCT vt2.c0))OR(rt12.c1)))AND(COALESCE(rt12.c1, 0x65f98fba, vt1.c0, rt12.c2))))AND(CAST(rt12.c1 AS TEXT))))AND(((((vt1.c0)AND(vt2.c0)))AND(vt2.c0)))) WHERE ((NOT ((((((rt12.c1)) BETWEEN ((rt12.c1)) AND ((rt12.c2)))) NOTNULL)))) UNION ALL SELECT vt1.c0, rt12.c2, vt2.c0, rt12.c0 FROM vt1 CROSS JOIN rt12 ON TYPEOF(DISTINCT ((vt1.c0)<(rt12.c2))) INNER JOIN vt2 ON ((((((((UNLIKELY(DISTINCT vt2.c0))OR(rt12.c1)))AND(COALESCE(rt12.c1, 0X65f98fba, vt1.c0, rt12.c2))))AND(CAST(rt12.c1 AS TEXT))))AND(((((vt1.c0)AND(vt2.c0)))AND(vt2.c0)))) WHERE ((((((((rt12.c1)) BETWEEN ((rt12.c1)) AND ((rt12.c2)))) NOTNULL)) ISNULL));
SELECT ALL vt1.c0, rt12.c2, vt2.c0, rt12.c0 FROM vt1 CROSS JOIN rt12 ON TYPEOF(DISTINCT ((vt1.c0)<(rt12.c2))) INNER JOIN vt2 ON ((((((((UNLIKELY(DISTINCT vt2.c0))OR(rt12.c1)))AND(COALESCE(rt12.c1, 0x65f98fba, vt1.c0, rt12.c2))))AND(CAST(rt12.c1 AS TEXT))))AND(((((vt1.c0)AND(vt2.c0)))AND(vt2.c0))));
SELECT DISTINCT * FROM vt2, vt0 LEFT OUTER JOIN vt1 ON LIKE(((rt12.c2) NOT BETWEEN (vt0.c0) AND (rt12.c0)), CASE rt12.c1  WHEN rt12.c2 THEN vt0.c1 ELSE vt1.c0 END, 'V') CROSS JOIN rt12 ON LIKELIHOOD(DISTINCT ((rt12.c2)>(vt0.c1)), 0.7629956481558653);
SELECT vt1.c0, vt0.c0, vt2.c0, vt0.c1 FROM vt0, vt1, vt2 GROUP BY vt1.c0, vt0.c0, vt2.c0, vt0.c1;
SELECT vt1.c0, vt0.c0, vt2.c0, vt0.c1 FROM vt0, vt1, vt2 WHERE (vt2.c0) GROUP BY vt1.c0, vt0.c0, vt2.c0, vt0.c1 UNION SELECT ALL vt1.c0, vt0.c0, vt2.c0, vt0.c1 FROM vt0, vt1, vt2 WHERE ((NOT (vt2.c0))) GROUP BY vt1.c0, vt0.c0, vt2.c0, vt0.c1 UNION SELECT ALL vt1.c0, vt0.c0, vt2.c0, vt0.c1 FROM vt0, vt1, vt2 WHERE (((vt2.c0) ISNULL)) GROUP BY vt1.c0, vt0.c0, vt2.c0, vt0.c1;
SELECT vt1.c0, vt0.c0, vt2.c0, vt0.c1 FROM vt0, vt1, vt2 GROUP BY vt1.c0, vt0.c0, vt2.c0, vt0.c1;
SELECT rt12.c2, rt12.c0 FROM rt12 GROUP BY rt12.c2, rt12.c0;
SELECT rt12.c2, rt12.c0 FROM rt12 GROUP BY rt12.c2, rt12.c0 HAVING MAX(COUNT(rt12.c2)) UNION ALL SELECT rt12.c2, rt12.c0 FROM rt12 GROUP BY rt12.c2, rt12.c0 HAVING (NOT (MAX(COUNT(rt12.c2)))) UNION ALL SELECT rt12.c2, rt12.c0 FROM rt12 GROUP BY rt12.c2, rt12.c0 HAVING ((MAX(COUNT(rt12.c2))) ISNULL);
SELECT vt0.c1, rt12.c1 FROM vt2, vt1, vt0, rt12;
SELECT vt0.c1, rt12.c1 FROM vt2, vt1, vt0, rt12 WHERE (rt12.c2) UNION ALL SELECT vt0.c1, rt12.c1 FROM vt2, vt1, vt0, rt12 WHERE ((NOT (rt12.c2))) UNION ALL SELECT ALL vt0.c1, rt12.c1 FROM vt2, vt1, vt0, rt12 WHERE (((rt12.c2) ISNULL));
SELECT vt0.c1, rt12.c1 FROM vt2, vt1, vt0, rt12;
SELECT DISTINCT * FROM vt1 RIGHT OUTER JOIN vt0 ON CAST(((rt12.c2) BETWEEN (rt12.c0) AND (rt12.c1)) AS TEXT) CROSS JOIN rt12 ON (((((((((vt0.c1)AND(vt1.c0)))OR(x'0ac981a8')))AND(vt0.c1)))AND(vt0.c0)) IN ()) LEFT OUTER JOIN vt2 ON (((rt12.c1) NOT NULL) IN ((vt1.c0 IN ())));
SELECT DISTINCT * FROM vt1 RIGHT OUTER JOIN vt0 ON CAST(((rt12.c2) BETWEEN (rt12.c0) AND (rt12.c1)) AS TEXT) CROSS JOIN rt12 ON (((((((((vt0.c1)AND(vt1.c0)))OR(x'0ac981a8')))AND(vt0.c1)))AND(vt0.c0)) IN ()) LEFT OUTER JOIN vt2 ON (((rt12.c1) NOT NULL) IN ((vt1.c0 IN ()))) WHERE (CASE WHEN 'ap' THEN (rt12.c2 IN (vt0.c1)) END) UNION SELECT DISTINCT * FROM vt1 RIGHT OUTER JOIN vt0 ON CAST(((rt12.c2) BETWEEN (rt12.c0) AND (rt12.c1)) AS TEXT) CROSS JOIN rt12 ON (((((((((vt0.c1)AND(vt1.c0)))OR(x'0ac981a8')))AND(vt0.c1)))AND(vt0.c0)) IN ()) LEFT OUTER JOIN vt2 ON (((rt12.c1) NOT NULL) IN ((vt1.c0 IN ()))) WHERE ((NOT (CASE WHEN 'ap' THEN (rt12.c2 IN (vt0.c1)) END))) UNION SELECT DISTINCT * FROM vt1 RIGHT OUTER JOIN vt0 ON CAST(((rt12.c2) BETWEEN (rt12.c0) AND (rt12.c1)) AS TEXT) CROSS JOIN rt12 ON (((((((((vt0.c1)AND(vt1.c0)))OR(x'0ac981a8')))AND(vt0.c1)))AND(vt0.c0)) IN ()) LEFT OUTER JOIN vt2 ON (((rt12.c1) NOT NULL) IN ((vt1.c0 IN ()))) WHERE (((CASE WHEN 'ap' THEN (rt12.c2 IN (vt0.c1)) END) ISNULL));
SELECT DISTINCT * FROM vt1 RIGHT OUTER JOIN vt0 ON CAST(((rt12.c2) BETWEEN (rt12.c0) AND (rt12.c1)) AS TEXT) CROSS JOIN rt12 ON (((((((((vt0.c1)AND(vt1.c0)))OR(x'0ac981a8')))AND(vt0.c1)))AND(vt0.c0)) IN ()) LEFT OUTER JOIN vt2 ON (((rt12.c1) NOT NULL) IN ((vt1.c0 IN ())));
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE (((CAST(vt1.c0 AS BLOB)) IS TRUE)) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (((CAST(vt1.c0 AS BLOB)) IS TRUE)))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE (((((CAST(vt1.c0 AS BLOB)) IS TRUE)) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT rt12.c1 FROM vt2, rt12, vt0, vt1 GROUP BY rt12.c1;
SELECT ALL rt12.c1 FROM vt2, rt12, vt0, vt1 GROUP BY rt12.c1 HAVING AVG(((MIN(MIN(COUNT(vt0.c0)))) NOT BETWEEN (AVG(TOTAL(vt1.c0))) AND (COUNT(-1.895326019E9)))) UNION ALL SELECT ALL rt12.c1 FROM vt2, rt12, vt0, vt1 GROUP BY rt12.c1 HAVING (NOT (AVG(((MIN(MIN(COUNT(vt0.c0)))) NOT BETWEEN (AVG(TOTAL(vt1.c0))) AND (COUNT(-1.895326019E9)))))) UNION ALL SELECT rt12.c1 FROM vt2, rt12, vt0, vt1 GROUP BY rt12.c1 HAVING ((AVG(((MIN(MIN(COUNT(vt0.c0)))) NOT BETWEEN (AVG(TOTAL(vt1.c0))) AND (COUNT(-1.895326019E9))))) ISNULL);
SELECT SUM(CASE ((rt12.c0)>>(vt0.c1))  WHEN ((rt12.c0) ISNULL) THEN CASE vt0.c1  WHEN vt0.c1 THEN rt12.c0 END WHEN ((rt12.c2) BETWEEN (vt0.c1) AND (rt12.c0)) THEN CAST(vt0.c0 AS INTEGER) WHEN ((vt0.c1)AND(']Q.IZUUbf')) THEN NULLIF(rt12.c2, rt12.c2) WHEN (NOT (vt0.c0)) THEN (((vt0.c1))=((vt0.c0))) WHEN ((((rt12.c2)AND(vt0.c0)))AND(vt0.c0)) THEN ((rt12.c2) NOT BETWEEN (vt0.c1) AND (vt0.c0)) ELSE ((((vt0.c0)AND(vt0.c1)))AND(rt12.c0)) END) FROM rt12, vt0 ORDER BY CASE (((x'')) BETWEEN ((vt0.c0)) AND ((vt0.c0)))  WHEN (vt0.c1 IN ()) THEN CASE WHEN rt12.c0 THEN rt12.c0 END END  NULLS FIRST, ((rt12.c0) BETWEEN (vt0.c1) AND (vt0.c0)) COLLATE NOCASE COLLATE NOCASE DESC, 'n7hM' COLLATE NOCASE;
SELECT vt1.c0 FROM vt0 RIGHT OUTER JOIN vt1 ON ((((vt1.c0) NOT BETWEEN (vt0.c1) AND (rt12.c2))) NOT BETWEEN (CASE vt0.c1  WHEN NULL THEN rt12.c2 END) AND (vt2.c0 COLLATE BINARY)) INNER JOIN rt12 ON CASE WHEN LOWER(vt0.c0) THEN json_valid(vt2.c0) ELSE vt1.c0 COLLATE RTRIM END LEFT OUTER JOIN vt2 ON CASE rt12.c0  WHEN vt0.c1 THEN vt1.c0 END COLLATE BINARY;
SELECT DISTINCT * FROM vt2, vt1;
SELECT DISTINCT * FROM vt2, vt1 WHERE (CAST(CAST(x'' AS REAL) AS NUMERIC)) UNION SELECT DISTINCT * FROM vt2, vt1 WHERE ((NOT (CAST(CAST(x'' AS REAL) AS NUMERIC)))) UNION SELECT DISTINCT * FROM vt2, vt1 WHERE (((CAST(CAST(x'' AS REAL) AS NUMERIC)) ISNULL));
SELECT DISTINCT * FROM vt2, vt1;
SELECT vt2.c0, vt0.c0 FROM vt1, vt2, vt0 GROUP BY vt2.c0, vt0.c0;
SELECT ALL vt2.c0, vt0.c0 FROM vt1, vt2, vt0 NOT INDEXED WHERE (x'') GROUP BY vt2.c0, vt0.c0 UNION SELECT vt2.c0, vt0.c0 FROM vt1, vt2, vt0 WHERE ((NOT (x''))) GROUP BY vt2.c0, vt0.c0 UNION SELECT vt2.c0, vt0.c0 FROM vt1, vt2, vt0 WHERE (((x'') ISNULL)) GROUP BY vt2.c0, vt0.c0;
SELECT vt2.c0, vt0.c0 FROM vt1, vt2, vt0 GROUP BY vt2.c0, vt0.c0;
SELECT vt0.c0, vt2.c0, vt0.c1 FROM vt0, vt2 GROUP BY vt0.c0, vt2.c0, vt0.c1;
SELECT ALL vt0.c0, vt2.c0, vt0.c1 FROM vt0, vt2 GROUP BY vt0.c0, vt2.c0, vt0.c1 HAVING MAX(COUNT(x'')) UNION ALL SELECT vt0.c0, vt2.c0, vt0.c1 FROM vt0, vt2 GROUP BY vt0.c0, vt2.c0, vt0.c1 HAVING (NOT (MAX(COUNT(x'')))) UNION ALL SELECT ALL vt0.c0, vt2.c0, vt0.c1 FROM vt0, vt2 GROUP BY vt0.c0, vt2.c0, vt0.c1 HAVING ((MAX(COUNT(x''))) ISNULL);
SELECT ALL * FROM vt1;
SELECT ALL * FROM vt1 WHERE ((- (((vt1.c0)AND(vt1.c0))))) UNION ALL SELECT * FROM vt1 WHERE ((NOT ((- (((vt1.c0)AND(vt1.c0))))))) UNION ALL SELECT ALL * FROM vt1 WHERE ((((- (((vt1.c0)AND(vt1.c0))))) ISNULL));
SELECT ALL * FROM vt1;
SELECT DISTINCT * FROM rt12 NATURAL JOIN vt2;
SELECT DISTINCT * FROM rt12 NATURAL JOIN vt2 WHERE (CASE WHEN NULL THEN ((0.003985926921030725)|(rt12.c2)) WHEN CASE WHEN vt2.c0 THEN rt12.c2 WHEN rt12.c2 THEN rt12.c1 WHEN rt12.c0 THEN rt12.c1 END THEN (rt12.c1 IN (rt12.c2)) WHEN ((rt12.c0) IS TRUE) THEN json_type(rt12.c1) END) UNION SELECT DISTINCT * FROM rt12 NATURAL JOIN vt2 WHERE ((NOT (CASE WHEN NULL THEN ((0.003985926921030725)|(rt12.c2)) WHEN CASE WHEN vt2.c0 THEN rt12.c2 WHEN rt12.c2 THEN rt12.c1 WHEN rt12.c0 THEN rt12.c1 END THEN (rt12.c1 IN (rt12.c2)) WHEN ((rt12.c0) IS TRUE) THEN json_type(rt12.c1) END))) UNION SELECT DISTINCT * FROM rt12 NATURAL JOIN vt2 WHERE (((CASE WHEN NULL THEN ((0.003985926921030725)|(rt12.c2)) WHEN CASE WHEN vt2.c0 THEN rt12.c2 WHEN rt12.c2 THEN rt12.c1 WHEN rt12.c0 THEN rt12.c1 END THEN (rt12.c1 IN (rt12.c2)) WHEN ((rt12.c0) IS TRUE) THEN json_type(rt12.c1) END) ISNULL));
SELECT DISTINCT * FROM rt12 NATURAL JOIN vt2;
SELECT vt1.c0, rt12.c0, rt12.c1 FROM vt1, rt12 GROUP BY vt1.c0, rt12.c0, rt12.c1;
SELECT vt1.c0, rt12.c0, rt12.c1 FROM vt1, rt12 WHERE (LIKELY(DISTINCT vt1.c0)) GROUP BY vt1.c0, rt12.c0, rt12.c1 UNION SELECT ALL vt1.c0, rt12.c0, rt12.c1 FROM vt1, rt12 WHERE ((NOT (LIKELY(DISTINCT vt1.c0)))) GROUP BY vt1.c0, rt12.c0, rt12.c1 UNION SELECT vt1.c0, rt12.c0, rt12.c1 FROM vt1, rt12 WHERE (((LIKELY(DISTINCT vt1.c0)) ISNULL)) GROUP BY vt1.c0, rt12.c0, rt12.c1;
SELECT vt1.c0, rt12.c0, rt12.c1 FROM vt1, rt12 GROUP BY vt1.c0, rt12.c0, rt12.c1;
SELECT rt12.c2, rt12.c0, vt0.c1, vt0.c0 FROM vt1 RIGHT OUTER JOIN vt0 ON (((rt12.c1)) NOT BETWEEN ((vt0.c0)) AND ((rt12.c0))) COLLATE NOCASE COLLATE NOCASE CROSS JOIN rt12 ON vt1.c0 GROUP BY rt12.c2, rt12.c0, vt0.c1, vt0.c0;
SELECT ALL * FROM vt1 NOT INDEXED, vt0;
SELECT * FROM vt1, vt0 WHERE ((((((((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0))))OR(vt0.c0)))OR((- (vt0.c0))))) UNION ALL SELECT * FROM vt1, vt0 WHERE ((NOT ((((((((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0))))OR(vt0.c0)))OR((- (vt0.c0))))))) UNION ALL SELECT ALL * FROM vt1, vt0 WHERE ((((((((((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0))))OR(vt0.c0)))OR((- (vt0.c0))))) ISNULL));
SELECT ALL * FROM vt1 NOT INDEXED, vt0;
SELECT DISTINCT * FROM vt0, vt2;
SELECT DISTINCT * FROM vt0, vt2 WHERE (((~ (vt0.c0)) IN ())) UNION SELECT DISTINCT * FROM vt0, vt2 WHERE ((NOT (((~ (vt0.c0)) IN ())))) UNION SELECT DISTINCT * FROM vt0, vt2 WHERE (((((~ (vt0.c0)) IN ())) ISNULL));
SELECT DISTINCT * FROM vt0, vt2;
SELECT rt12.c0, rt12.c2 FROM vt1, rt12 GROUP BY rt12.c0, rt12.c2;
SELECT rt12.c0, rt12.c2 FROM vt1, rt12 WHERE (((TOTAL_CHANGES())<=(CASE WHEN rt12.c0 THEN vt1.c0 WHEN rt12.c0 THEN rt12.c1 WHEN rt12.c2 THEN rt12.c1 END))) GROUP BY rt12.c0, rt12.c2 UNION SELECT rt12.c0, rt12.c2 FROM vt1, rt12 WHERE ((NOT (((TOTAL_CHANGES())<=(CASE WHEN rt12.c0 THEN vt1.c0 WHEN rt12.c0 THEN rt12.c1 WHEN rt12.c2 THEN rt12.c1 END))))) GROUP BY rt12.c0, rt12.c2 UNION SELECT rt12.c0, rt12.c2 FROM vt1, rt12 WHERE (((((TOTAL_CHANGES())<=(CASE WHEN rt12.c0 THEN vt1.c0 WHEN rt12.c0 THEN rt12.c1 WHEN rt12.c2 THEN rt12.c1 END))) ISNULL)) GROUP BY rt12.c0, rt12.c2;
SELECT rt12.c0, rt12.c2 FROM vt1, rt12 GROUP BY rt12.c0, rt12.c2;
SELECT ALL vt0.c1, rt12.c0, vt2.c0, vt0.c0 FROM vt0, rt12, vt2 GROUP BY vt0.c1, rt12.c0, vt2.c0, vt0.c0;
SELECT vt0.c1, rt12.c0, vt2.c0, vt0.c0 FROM vt0, rt12, vt2 GROUP BY vt0.c1, rt12.c0, vt2.c0, vt0.c0 HAVING (((rt12.c1)GLOB(0.35847090750563904)) IN ()) UNION ALL SELECT vt0.c1, rt12.c0, vt2.c0, vt0.c0 FROM vt0, rt12, vt2 GROUP BY vt0.c1, rt12.c0, vt2.c0, vt0.c0 HAVING (NOT ((((rt12.c1)GLOB(0.35847090750563904)) IN ()))) UNION ALL SELECT ALL vt0.c1, rt12.c0, vt2.c0, vt0.c0 FROM vt0, rt12, vt2 GROUP BY vt0.c1, rt12.c0, vt2.c0, vt0.c0 HAVING (((((rt12.c1)GLOB(0.35847090750563904)) IN ())) ISNULL);
SELECT ALL vt0.c1, rt12.c0, vt2.c0, vt0.c0 FROM vt0, rt12, vt2 GROUP BY vt0.c1, rt12.c0, vt2.c0, vt0.c0;
SELECT vt0.c1, rt12.c0, vt2.c0, vt0.c0 FROM vt0, rt12, vt2 GROUP BY vt0.c1, rt12.c0, vt2.c0, vt0.c0 HAVING (((rt12.c1)GLOB(0.35847090750563904)) IN ()) UNION ALL SELECT vt0.c1, rt12.c0, vt2.c0, vt0.c0 FROM vt0, rt12, vt2 GROUP BY vt0.c1, rt12.c0, vt2.c0, vt0.c0 HAVING (NOT ((((rt12.c1)GLOB(0.35847090750563904)) IN ()))) UNION ALL SELECT ALL vt0.c1, rt12.c0, vt2.c0, vt0.c0 FROM vt0, rt12, vt2 GROUP BY vt0.c1, rt12.c0, vt2.c0, vt0.c0 HAVING (((((rt12.c1)GLOB(0.35847090750563904)) IN ())) ISNULL);
SELECT ALL vt0.c1, rt12.c0, vt2.c0, vt0.c0 FROM vt0, rt12, vt2 GROUP BY vt0.c1, rt12.c0, vt2.c0, vt0.c0;
SELECT ALL vt0.c0 FROM vt2, vt1, rt12, vt0;
SELECT vt0.c0 FROM vt2, vt1, rt12, vt0 WHERE (((((((vt0.c0)AND(vt1.c0)))OR(rt12.c0)))||(rt12.c1))) UNION ALL SELECT vt0.c0 FROM vt2, vt1, rt12, vt0 WHERE ((NOT (((((((vt0.c0)AND(vt1.c0)))OR(rt12.c0)))||(rt12.c1))))) UNION ALL SELECT vt0.c0 FROM vt2, vt1, rt12, vt0 WHERE (((((((((vt0.c0)AND(vt1.c0)))OR(rt12.c0)))||(rt12.c1))) ISNULL));
SELECT ALL vt0.c0 FROM vt2, vt1, rt12, vt0;
SELECT DISTINCT * FROM vt0, vt2;
SELECT DISTINCT * FROM vt0, vt2 WHERE ('943916073') UNION SELECT DISTINCT * FROM vt0, vt2 WHERE ((NOT ('943916073'))) UNION SELECT DISTINCT * FROM vt0, vt2 WHERE ((('943916073') ISNULL));
SELECT DISTINCT * FROM vt0, vt2;
SELECT ALL vt0.c1, rt12.c1, vt1.c0, vt2.c0 FROM vt0, vt1, vt2, rt12 GROUP BY vt0.c1, rt12.c1, vt1.c0, vt2.c0;
SELECT ALL vt0.c1, rt12.c1, vt1.c0, vt2.c0 FROM vt0, vt1, vt2, rt12 WHERE (CASE ((vt0.c0)GLOB(vt1.c0))  WHEN ((((((((rt12.c1)OR(vt0.c1)))AND(rt12.c2)))AND(rt12.c0)))AND(vt0.c1)) THEN -1.29932656E9 ELSE vt0.c1 COLLATE NOCASE END) GROUP BY vt0.c1, rt12.c1, vt1.c0, vt2.c0 UNION SELECT ALL vt0.c1, rt12.c1, vt1.c0, vt2.c0 FROM vt0, vt1, vt2, rt12 WHERE ((NOT (CASE ((vt0.c0)GLOB(vt1.c0))  WHEN ((((((((rt12.c1)OR(vt0.c1)))AND(rt12.c2)))AND(rt12.c0)))AND(vt0.c1)) THEN -1.29932656E9 ELSE vt0.c1 COLLATE NOCASE END))) GROUP BY vt0.c1, rt12.c1, vt1.c0, vt2.c0 UNION SELECT ALL vt0.c1, rt12.c1, vt1.c0, vt2.c0 FROM vt0, vt1, vt2, rt12 WHERE (((CASE ((vt0.c0)GLOB(vt1.c0))  WHEN ((((((((rt12.c1)OR(vt0.c1)))AND(rt12.c2)))AND(rt12.c0)))AND(vt0.c1)) THEN -1.29932656E9 ELSE vt0.c1 COLLATE NOCASE END) ISNULL)) GROUP BY vt0.c1, rt12.c1, vt1.c0, vt2.c0;
SELECT ALL vt0.c1, rt12.c1, vt1.c0, vt2.c0 FROM vt0, vt1, vt2, rt12 GROUP BY vt0.c1, rt12.c1, vt1.c0, vt2.c0;
SELECT ALL vt1.c0 FROM vt1, vt2 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1, vt2 GROUP BY vt1.c0 HAVING ((vt1.c0) BETWEEN ((((MAX(MIN(AVG(vt2.c0)))))<>((vt2.c0)))) AND (LOWER(MAX(AVG(vt1.c0))))) UNION ALL SELECT ALL vt1.c0 FROM vt1, vt2 GROUP BY vt1.c0 HAVING (NOT (((vt1.c0) BETWEEN ((((MAX(MIN(AVG(vt2.c0)))))<>((vt2.c0)))) AND (LOWER(MAX(AVG(vt1.c0))))))) UNION ALL SELECT vt1.c0 FROM vt1, vt2 GROUP BY vt1.c0 HAVING ((((vt1.c0) BETWEEN ((((MAX(MIN(AVG(vt2.c0)))))!=((vt2.c0)))) AND (LOWER(MAX(AVG(vt1.c0)))))) ISNULL);
SELECT ALL * FROM vt0;
SELECT * FROM vt0 WHERE (CASE (vt0.c0 IN ())  WHEN ((vt0.c0)>>(x'525e9951')) THEN vt0.c1 WHEN CAST(vt0.c0 AS REAL) THEN CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 END WHEN CASE WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END THEN ((((vt0.c1)AND(vt0.c0)))OR(vt0.c1)) END) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (CASE (vt0.c0 IN ())  WHEN ((vt0.c0)>>(x'525e9951')) THEN vt0.c1 WHEN CAST(vt0.c0 AS REAL) THEN CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 END WHEN CASE WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END THEN ((((vt0.c1)AND(vt0.c0)))OR(vt0.c1)) END))) UNION ALL SELECT ALL * FROM vt0 WHERE (((CASE (vt0.c0 IN ())  WHEN ((vt0.c0)>>(x'525e9951')) THEN vt0.c1 WHEN CAST(vt0.c0 AS REAL) THEN CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 END WHEN CASE WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END THEN ((((vt0.c1)AND(vt0.c0)))OR(vt0.c1)) END) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 NATURAL JOIN rt12;
SELECT DISTINCT vt0.c0 FROM vt0 NATURAL JOIN rt12 WHERE ((~ (((vt0.c1) ISNULL)))) UNION SELECT DISTINCT vt0.c0 FROM vt0 NATURAL JOIN rt12 WHERE ((NOT ((~ (((vt0.c1) ISNULL)))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 NATURAL JOIN rt12 WHERE ((((~ (((vt0.c1) ISNULL)))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0 NATURAL JOIN rt12;
SELECT rt12.c2 FROM vt0, rt12, vt1, vt2 GROUP BY rt12.c2;
SELECT ALL rt12.c2 FROM vt0, rt12, vt1, vt2 WHERE ((((vt0.c1, 1.391631686E9, rt12.c0)) NOT BETWEEN ((CAST(vt0.c1 AS INTEGER), ((vt2.c0)=(vt1.c0)), ((rt12.c1) NOT BETWEEN (rt12.c0) AND (vt0.c0)))) AND ((x'', CAST(rt12.c0 AS NUMERIC), (((rt12.c1))>((rt12.c0))))))) GROUP BY rt12.c2 UNION SELECT ALL rt12.c2 FROM vt0, rt12, vt1, vt2 WHERE ((NOT ((((vt0.c1, 1.391631686E9, rt12.c0)) NOT BETWEEN ((CAST(vt0.c1 AS INTEGER), ((vt2.c0)==(vt1.c0)), ((rt12.c1) NOT BETWEEN (rt12.c0) AND (vt0.c0)))) AND ((x'', CAST(rt12.c0 AS NUMERIC), (((rt12.c1))>((rt12.c0))))))))) GROUP BY rt12.c2 UNION SELECT rt12.c2 FROM vt0, rt12, vt1, vt2 WHERE ((((((vt0.c1, 1.391631686E9, rt12.c0)) NOT BETWEEN ((CAST(vt0.c1 AS INTEGER), ((vt2.c0)==(vt1.c0)), ((rt12.c1) NOT BETWEEN (rt12.c0) AND (vt0.c0)))) AND ((x'', CAST(rt12.c0 AS NUMERIC), (((rt12.c1))>((rt12.c0))))))) ISNULL)) GROUP BY rt12.c2;
SELECT rt12.c2 FROM vt0, rt12, vt1, vt2 GROUP BY rt12.c2;
SELECT vt2.c0, rt12.c2, rt12.c0, vt0.c1 FROM rt12, vt2, vt0 GROUP BY vt2.c0, rt12.c2, rt12.c0, vt0.c1;
SELECT ALL vt2.c0, rt12.c2, rt12.c0, vt0.c1 FROM rt12, vt2, vt0 GROUP BY vt2.c0, rt12.c2, rt12.c0, vt0.c1 HAVING COUNT(*) UNION ALL SELECT vt2.c0, rt12.c2, rt12.c0, vt0.c1 FROM rt12, vt2, vt0 GROUP BY vt2.c0, rt12.c2, rt12.c0, vt0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt2.c0, rt12.c2, rt12.c0, vt0.c1 FROM rt12, vt2, vt0 GROUP BY vt2.c0, rt12.c2, rt12.c0, vt0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT vt2.c0, rt12.c2, rt12.c0, vt0.c1 FROM rt12, vt2, vt0 GROUP BY vt2.c0, rt12.c2, rt12.c0, vt0.c1;
SELECT ALL vt2.c0, rt12.c2, rt12.c0, vt0.c1 FROM rt12, vt2, vt0 GROUP BY vt2.c0, rt12.c2, rt12.c0, vt0.c1 HAVING COUNT(*) UNION ALL SELECT vt2.c0, rt12.c2, rt12.c0, vt0.c1 FROM rt12, vt2, vt0 GROUP BY vt2.c0, rt12.c2, rt12.c0, vt0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt2.c0, rt12.c2, rt12.c0, vt0.c1 FROM rt12, vt2, vt0 GROUP BY vt2.c0, rt12.c2, rt12.c0, vt0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT vt2.c0, rt12.c2, rt12.c0, vt0.c1 FROM rt12, vt2, vt0 GROUP BY vt2.c0, rt12.c2, rt12.c0, vt0.c1;
SELECT ALL vt0.c0 FROM vt1, vt2, vt0;
SELECT ALL vt0.c0 FROM vt1, vt2, vt0 WHERE ((vt0.c0 IN ())) UNION ALL SELECT ALL vt0.c0 FROM vt1, vt2, vt0 WHERE ((NOT ((vt0.c0 IN ())))) UNION ALL SELECT ALL vt0.c0 FROM vt1, vt2, vt0 WHERE ((((vt0.c0 IN ())) ISNULL));
SELECT ALL vt0.c0 FROM vt1, vt2, vt0;
SELECT DISTINCT * FROM vt0, vt2;
SELECT DISTINCT * FROM vt0, vt2 WHERE (((UNLIKELY(vt2.c0)) IS FALSE)) UNION SELECT DISTINCT * FROM vt0, vt2 WHERE ((NOT (((UNLIKELY(vt2.c0)) IS FALSE)))) UNION SELECT DISTINCT * FROM vt0, vt2 WHERE (((((UNLIKELY(vt2.c0)) IS FALSE)) ISNULL));
SELECT DISTINCT * FROM vt0, vt2;
SELECT ALL rt12.c1, vt2.c0, rt12.c0, vt0.c0, vt1.c0, vt0.c1, rt12.c2 FROM rt12, vt2, vt1, vt0 GROUP BY rt12.c1, vt2.c0, rt12.c0, vt0.c0, vt1.c0, vt0.c1, rt12.c2;
SELECT ALL rt12.c1, vt2.c0, rt12.c0, vt0.c0, vt1.c0, vt0.c1, rt12.c2 FROM rt12, vt2, vt1, vt0 WHERE ((((vt1.c0) NOTNULL) IN ())) GROUP BY rt12.c1, vt2.c0, rt12.c0, vt0.c0, vt1.c0, vt0.c1, rt12.c2 UNION SELECT ALL rt12.c1, vt2.c0, rt12.c0, vt0.c0, vt1.c0, vt0.c1, rt12.c2 FROM rt12, vt2, vt1, vt0 WHERE ((NOT ((((vt1.c0) NOTNULL) IN ())))) GROUP BY rt12.c1, vt2.c0, rt12.c0, vt0.c0, vt1.c0, vt0.c1, rt12.c2 UNION SELECT rt12.c1, vt2.c0, rt12.c0, vt0.c0, vt1.c0, vt0.c1, rt12.c2 FROM rt12, vt2, vt1, vt0 WHERE ((((((vt1.c0) NOTNULL) IN ())) ISNULL)) GROUP BY rt12.c1, vt2.c0, rt12.c0, vt0.c0, vt1.c0, vt0.c1, rt12.c2;
SELECT ALL rt12.c1, vt2.c0, rt12.c0, vt0.c0, vt1.c0, vt0.c1, rt12.c2 FROM rt12, vt2, vt1, vt0 GROUP BY rt12.c1, vt2.c0, rt12.c0, vt0.c0, vt1.c0, vt0.c1, rt12.c2;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING 0.8557447794996259 UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (0.8557447794996259)) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((0.8557447794996259) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING 0.8557447794996259 UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (0.8557447794996259)) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((0.8557447794996259) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT * FROM vt2;
SELECT * FROM vt2 WHERE (((((((((-1207976878 COLLATE BINARY)AND(vt2.c0)))OR(0.4670178534559293)))OR(CASE WHEN vt2.c0 THEN vt2.c0 WHEN vt2.c0 THEN vt2.c0 WHEN vt2.c0 THEN vt2.c0 END)))AND(CAST(vt2.c0 AS REAL)))) UNION ALL SELECT ALL * FROM vt2 WHERE ((NOT (((((((((-1207976878 COLLATE BINARY)AND(vt2.c0)))OR(0.4670178534559293)))OR(CASE WHEN vt2.c0 THEN vt2.c0 WHEN vt2.c0 THEN vt2.c0 WHEN vt2.c0 THEN vt2.c0 END)))AND(CAST(vt2.c0 AS REAL)))))) UNION ALL SELECT * FROM vt2 WHERE (((((((((((-1207976878 COLLATE BINARY)AND(vt2.c0)))OR(0.4670178534559293)))OR(CASE WHEN vt2.c0 THEN vt2.c0 WHEN vt2.c0 THEN vt2.c0 WHEN vt2.c0 THEN vt2.c0 END)))AND(CAST(vt2.c0 AS REAL)))) ISNULL));
SELECT * FROM vt2;
SELECT DISTINCT vt2.c0, vt1.c0 FROM vt0 INNER JOIN vt2 ON vt1.c0 INNER JOIN vt1 ON (('521645572')OR(((vt0.c0)+(vt0.c1))));
SELECT DISTINCT vt2.c0, vt1.c0 FROM vt0 INNER JOIN vt2 ON vt1.c0 INNER JOIN vt1 ON (('521645572')OR(((vt0.c0)+(vt0.c1)))) WHERE (LENGTH(CAST(vt2.c0 AS REAL))) UNION SELECT DISTINCT vt2.c0, vt1.c0 FROM vt0 INNER JOIN vt2 ON vt1.c0 INNER JOIN vt1 ON (('521645572')OR(((vt0.c0)+(vt0.c1)))) WHERE ((NOT (LENGTH(CAST(vt2.c0 AS REAL))))) UNION SELECT DISTINCT vt2.c0, vt1.c0 FROM vt0 INNER JOIN vt2 ON vt1.c0 INNER JOIN vt1 ON (('521645572')OR(((vt0.c0)+(vt0.c1)))) WHERE (((LENGTH(CAST(vt2.c0 AS REAL))) ISNULL));
SELECT DISTINCT vt2.c0, vt1.c0 FROM vt0 INNER JOIN vt2 ON vt1.c0 INNER JOIN vt1 ON (('521645572')OR(((vt0.c0)+(vt0.c1))));
SELECT rt12.c2, rt12.c1, vt1.c0, vt0.c1, rt12.c0 FROM vt0, vt2, vt1, rt12 GROUP BY rt12.c2, rt12.c1, vt1.c0, vt0.c1, rt12.c0;
SELECT ALL rt12.c2, rt12.c1, vt1.c0, vt0.c1, rt12.c0 FROM vt0, vt2, vt1, rt12 WHERE (((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))>((+ (rt12.c0))))) GROUP BY rt12.c2, rt12.c1, vt1.c0, vt0.c1, rt12.c0 UNION SELECT rt12.c2, rt12.c1, vt1.c0, vt0.c1, rt12.c0 FROM vt0, vt2, vt1, rt12 WHERE ((NOT (((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))>((+ (rt12.c0))))))) GROUP BY rt12.c2, rt12.c1, vt1.c0, vt0.c1, rt12.c0 UNION SELECT rt12.c2, rt12.c1, vt1.c0, vt0.c1, rt12.c0 FROM vt0, vt2, vt1, rt12 WHERE (((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))>((+ (rt12.c0))))) ISNULL)) GROUP BY rt12.c2, rt12.c1, vt1.c0, vt0.c1, rt12.c0;
SELECT rt12.c2, rt12.c1, vt1.c0, vt0.c1, rt12.c0 FROM vt0, vt2, vt1, rt12 GROUP BY rt12.c2, rt12.c1, vt1.c0, vt0.c1, rt12.c0;
SELECT ALL vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0;
SELECT ALL vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0 HAVING vt1.c0 UNION ALL SELECT vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0 HAVING (NOT (vt1.c0)) UNION ALL SELECT ALL vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0 HAVING ((vt1.c0) ISNULL);
SELECT ALL vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0;
SELECT ALL vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0 HAVING vt1.c0 UNION ALL SELECT vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0 HAVING (NOT (vt1.c0)) UNION ALL SELECT ALL vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0 HAVING ((vt1.c0) ISNULL);
SELECT ALL vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0;
SELECT rt12.c1, vt2.c0 FROM vt0 RIGHT OUTER JOIN vt2 ON ((((((vt2.c0) ISNULL))OR(CAST(vt1.c0 AS BLOB))))AND(vt0.c1)) LEFT OUTER JOIN vt1 ON ('' IN (rt12.c1)) INNER JOIN rt12 ON CASE (vt0.c1 IN ())  WHEN CAST(NULL AS NUMERIC) THEN (((rt12.c0, rt12.c1, vt0.c0)) BETWEEN ((rt12.c2, '-564012559', vt1.c0)) AND ((rt12.c2, rt12.c1, vt2.c0))) WHEN (((NULL))>=((rt12.c0))) THEN ((vt0.c1)*(vt0.c1)) WHEN '-539733504' THEN NULL ELSE ((vt0.c0)>=(vt1.c0)) END;
SELECT DISTINCT * FROM rt12;
SELECT DISTINCT * FROM rt12 WHERE ((1583603186 COLLATE NOCASE IN ())) UNION SELECT DISTINCT * FROM rt12 WHERE ((NOT ((1583603186 COLLATE NOCASE IN ())))) UNION SELECT DISTINCT * FROM rt12 WHERE ((((1583603186 COLLATE NOCASE IN ())) ISNULL));
SELECT DISTINCT * FROM rt12;
SELECT ALL rt12.c0, rt12.c2 FROM rt12, vt0 GROUP BY rt12.c0, rt12.c2;
SELECT ALL rt12.c0, rt12.c2 FROM rt12, vt0 WHERE (((((vt0.c0)GLOB(vt0.c0))) BETWEEN ((~ (rt12.c1))) AND ('2.wY~uV'))) GROUP BY rt12.c0, rt12.c2 UNION SELECT ALL rt12.c0, rt12.c2 FROM rt12, vt0 WHERE ((NOT (((((vt0.c0)GLOB(vt0.c0))) BETWEEN ((~ (rt12.c1))) AND ('2.wY~uV'))))) GROUP BY rt12.c0, rt12.c2 UNION SELECT ALL rt12.c0, rt12.c2 FROM rt12, vt0 WHERE (((((((vt0.c0)GLOB(vt0.c0))) BETWEEN ((~ (rt12.c1))) AND ('2.wY~uV'))) ISNULL)) GROUP BY rt12.c0, rt12.c2;
SELECT ALL rt12.c0, rt12.c2 FROM rt12, vt0 GROUP BY rt12.c0, rt12.c2;
SELECT vt0.c1, vt0.c0, rt12.c1, rt12.c0 FROM vt0, rt12 GROUP BY vt0.c1, vt0.c0, rt12.c1, rt12.c0;
SELECT ALL vt0.c1, vt0.c0, rt12.c1, rt12.c0 FROM vt0, rt12 GROUP BY vt0.c1, vt0.c0, rt12.c1, rt12.c0 HAVING LIKE(((COUNT(TOTAL(vt0.c1))) BETWEEN (vt0.c1) AND (SUM(rt12.c0))), COUNT(*), '0') UNION ALL SELECT vt0.c1, vt0.c0, rt12.c1, rt12.c0 FROM vt0, rt12 GROUP BY vt0.c1, vt0.c0, rt12.c1, rt12.c0 HAVING (NOT (LIKE(((COUNT(TOTAL(vt0.c1))) BETWEEN (vt0.c1) AND (SUM(rt12.c0))), COUNT(*), '0'))) UNION ALL SELECT ALL vt0.c1, vt0.c0, rt12.c1, rt12.c0 FROM vt0, rt12 GROUP BY vt0.c1, vt0.c0, rt12.c1, rt12.c0 HAVING ((LIKE(((COUNT(TOTAL(vt0.c1))) BETWEEN (vt0.c1) AND (SUM(rt12.c0))), COUNT(*), '0')) ISNULL);
SELECT * FROM vt0;
SELECT ALL * FROM vt0 WHERE ((((((((((((((((vt0.c1)AND(vt0.c0)))AND(vt0.c1)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND('570722622')), x'', ((((x'a91a9754')AND(vt0.c0)))OR(vt0.c1))))!=((CAST(vt0.c1 AS BLOB), '蕩\n.Y,hJ3Q', ((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)))))) UNION ALL SELECT * FROM vt0 WHERE ((NOT ((((((((((((((((vt0.c1)AND(vt0.c0)))AND(vt0.c1)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND('570722622')), x'', ((((x'a91a9754')AND(vt0.c0)))OR(vt0.c1))))!=((CAST(vt0.c1 AS BLOB), '蕩\n.Y,hJ3Q', ((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)))))))) UNION ALL SELECT * FROM vt0 WHERE ((((((((((((((((((vt0.c1)AND(vt0.c0)))AND(vt0.c1)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND('570722622')), x'', ((((x'a91a9754')AND(vt0.c0)))OR(vt0.c1))))!=((CAST(vt0.c1 AS BLOB), '蕩\n.Y,hJ3Q', ((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)))))) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT vt0.c1, vt0.c0 FROM vt1, vt0, vt2 CROSS JOIN rt12 ON (('82652006') IS TRUE);
SELECT DISTINCT vt0.c1, vt0.c0 FROM vt1, vt0, vt2 CROSS JOIN rt12 ON (('82652006') IS TRUE) WHERE (CAST((~ (vt0.c1)) AS TEXT)) UNION SELECT DISTINCT vt0.c1, vt0.c0 FROM vt1, vt0, vt2 CROSS JOIN rt12 ON (('82652006') IS TRUE) WHERE ((NOT (CAST((~ (vt0.c1)) AS TEXT)))) UNION SELECT DISTINCT vt0.c1, vt0.c0 FROM vt1, vt0, vt2 CROSS JOIN rt12 ON (('82652006') IS TRUE) WHERE (((CAST((~ (vt0.c1)) AS TEXT)) ISNULL));
SELECT DISTINCT vt0.c1, vt0.c0 FROM vt1, vt0, vt2 CROSS JOIN rt12 ON (('82652006') IS TRUE);
SELECT ALL vt1.c0, vt0.c1, rt12.c2, rt12.c1, rt12.c0 FROM vt0, vt1, rt12 GROUP BY vt1.c0, vt0.c1, rt12.c2, rt12.c1, rt12.c0;
SELECT ALL vt1.c0, vt0.c1, rt12.c2, rt12.c1, rt12.c0 FROM vt0, vt1, rt12 WHERE ((CASE WHEN vt1.c0 THEN rt12.c2 WHEN rt12.c2 THEN rt12.c1 WHEN rt12.c0 THEN 0.013754366486940062 ELSE rt12.c1 END IN ())) GROUP BY vt1.c0, vt0.c1, rt12.c2, rt12.c1, rt12.c0 UNION SELECT ALL vt1.c0, vt0.c1, rt12.c2, rt12.c1, rt12.c0 FROM vt0, vt1, rt12 WHERE ((NOT ((CASE WHEN vt1.c0 THEN rt12.c2 WHEN rt12.c2 THEN rt12.c1 WHEN rt12.c0 THEN 0.013754366486940062 ELSE rt12.c1 END IN ())))) GROUP BY vt1.c0, vt0.c1, rt12.c2, rt12.c1, rt12.c0 UNION SELECT ALL vt1.c0, vt0.c1, rt12.c2, rt12.c1, rt12.c0 FROM vt0, vt1, rt12 WHERE ((((CASE WHEN vt1.c0 THEN rt12.c2 WHEN rt12.c2 THEN rt12.c1 WHEN rt12.c0 THEN 0.013754366486940062 ELSE rt12.c1 END IN ())) ISNULL)) GROUP BY vt1.c0, vt0.c1, rt12.c2, rt12.c1, rt12.c0;
SELECT ALL vt1.c0, vt0.c1, rt12.c2, rt12.c1, rt12.c0 FROM vt0, vt1, rt12 GROUP BY vt1.c0, vt0.c1, rt12.c2, rt12.c1, rt12.c0;
SELECT rt12.c0, rt12.c1 FROM rt12 GROUP BY rt12.c0, rt12.c1;
SELECT ALL rt12.c0, rt12.c1 FROM rt12 GROUP BY rt12.c0, rt12.c1 HAVING MAX(rt12.c1) UNION ALL SELECT rt12.c0, rt12.c1 FROM rt12 GROUP BY rt12.c0, rt12.c1 HAVING (NOT (MAX(rt12.c1))) UNION ALL SELECT rt12.c0, rt12.c1 FROM rt12 GROUP BY rt12.c0, rt12.c1 HAVING ((MAX(rt12.c1)) ISNULL);
SELECT rt12.c0, rt12.c1 FROM rt12 GROUP BY rt12.c0, rt12.c1;
SELECT ALL rt12.c0, rt12.c1 FROM rt12 GROUP BY rt12.c0, rt12.c1 HAVING MAX(rt12.c1) UNION ALL SELECT rt12.c0, rt12.c1 FROM rt12 GROUP BY rt12.c0, rt12.c1 HAVING (NOT (MAX(rt12.c1))) UNION ALL SELECT rt12.c0, rt12.c1 FROM rt12 GROUP BY rt12.c0, rt12.c1 HAVING ((MAX(rt12.c1)) ISNULL);
SELECT rt12.c0, rt12.c1 FROM rt12 GROUP BY rt12.c0, rt12.c1;
SELECT ALL * FROM vt1, vt2;
SELECT ALL * FROM vt1, vt2 WHERE (UPPER(CASE vt1.c0  WHEN vt2.c0 THEN vt1.c0 END)) UNION ALL SELECT ALL * FROM vt1, vt2 WHERE ((NOT (UPPER(CASE vt1.c0  WHEN vt2.c0 THEN vt1.c0 END)))) UNION ALL SELECT ALL * FROM vt1, vt2 WHERE (((UPPER(CASE vt1.c0  WHEN vt2.c0 THEN vt1.c0 END)) ISNULL));
SELECT ALL * FROM vt1, vt2;
SELECT DISTINCT vt0.c1, vt0.c0, vt2.c0 FROM vt1, vt0, vt2;
SELECT DISTINCT vt0.c1, vt0.c0, vt2.c0 FROM vt1, vt0, vt2 WHERE ((((+ (vt0.c1))) NOT BETWEEN ((+ (vt1.c0))) AND ((+ (vt1.c0))))) UNION SELECT DISTINCT vt0.c1, vt0.c0, vt2.c0 FROM vt1, vt0, vt2 WHERE ((NOT ((((+ (vt0.c1))) NOT BETWEEN ((+ (vt1.c0))) AND ((+ (vt1.c0))))))) UNION SELECT DISTINCT vt0.c1, vt0.c0, vt2.c0 FROM vt1, vt0, vt2 WHERE ((((((+ (vt0.c1))) NOT BETWEEN ((+ (vt1.c0))) AND ((+ (vt1.c0))))) ISNULL));
SELECT DISTINCT vt0.c1, vt0.c0, vt2.c0 FROM vt1, vt0, vt2;
SELECT vt2.c0, rt12.c2 FROM rt12, vt2 GROUP BY vt2.c0, rt12.c2;
SELECT vt2.c0, rt12.c2 FROM rt12 NOT INDEXED, vt2 WHERE ((rt12.c1 IN ()) COLLATE RTRIM) GROUP BY vt2.c0, rt12.c2 UNION SELECT ALL vt2.c0, rt12.c2 FROM rt12, vt2 WHERE ((NOT ((rt12.c1 IN ()) COLLATE RTRIM))) GROUP BY vt2.c0, rt12.c2 UNION SELECT vt2.c0, rt12.c2 FROM rt12, vt2 WHERE ((((rt12.c1 IN ()) COLLATE RTRIM) ISNULL)) GROUP BY vt2.c0, rt12.c2;
SELECT vt2.c0, rt12.c2 FROM rt12, vt2 GROUP BY vt2.c0, rt12.c2;
SELECT vt0.c1, rt12.c0 FROM vt2, vt1, rt12 INNER JOIN vt0 ON LIKELIHOOD(((((((((rt12.c0)AND(rt12.c0)))OR(rt12.c1)))OR(rt12.c2)))AND(vt0.c0)), 0.1694171102086932) GROUP BY vt0.c1, rt12.c0;
SELECT ALL vt0.c1, rt12.c0 FROM vt2, vt1, rt12 INNER JOIN vt0 ON LIKELIHOOD(((((((((rt12.c0)AND(rt12.c0)))OR(rt12.c1)))OR(rt12.c2)))AND(vt0.c0)), 0.1694171102086932) GROUP BY vt0.c1, rt12.c0 HAVING ((((TOTAL(COUNT(MAX(SUM(MAX(MAX(vt0.c1))))))) IS TRUE))/(TOTAL(rt12.c1))) UNION ALL SELECT ALL vt0.c1, rt12.c0 FROM vt2, vt1, rt12 INNER JOIN vt0 ON LIKELIHOOD(((((((((rt12.c0)AND(rt12.c0)))OR(rt12.c1)))OR(rt12.c2)))AND(vt0.c0)), 0.1694171102086932) GROUP BY vt0.c1, rt12.c0 HAVING (NOT (((((TOTAL(COUNT(MAX(SUM(MAX(MAX(vt0.c1))))))) IS TRUE))/(TOTAL(rt12.c1))))) UNION ALL SELECT vt0.c1, rt12.c0 FROM vt2, vt1, rt12 INNER JOIN vt0 ON LIKELIHOOD(((((((((rt12.c0)AND(rt12.c0)))OR(rt12.c1)))OR(rt12.c2)))AND(vt0.c0)), 0.1694171102086932) GROUP BY vt0.c1, rt12.c0 HAVING ((((((TOTAL(COUNT(MAX(SUM(MAX(MAX(vt0.c1))))))) IS TRUE))/(TOTAL(rt12.c1)))) ISNULL);
SELECT * FROM vt2, vt0 RIGHT OUTER JOIN vt1 ON ((((((vt2.c0)OR(rt12.c2)))AND(x''))) BETWEEN (((rt12.c2) NOT NULL)) AND (CASE WHEN rt12.c0 THEN vt0.c1 END)) FULL OUTER JOIN rt12 ON ((ABS(rt12.c1)) IS TRUE);
SELECT DISTINCT vt1.c0, vt2.c0 FROM vt2, vt1;
SELECT DISTINCT vt1.c0, vt2.c0 FROM vt2, vt1 WHERE (((vt1.c0)>>(((x'') NOT NULL)))) UNION SELECT DISTINCT vt1.c0, vt2.c0 FROM vt2, vt1 WHERE ((NOT (((vt1.c0)>>(((x'') NOT NULL)))))) UNION SELECT DISTINCT vt1.c0, vt2.c0 FROM vt2, vt1 WHERE (((((vt1.c0)>>(((x'') NOT NULL)))) ISNULL));
SELECT DISTINCT vt1.c0, vt2.c0 FROM vt2, vt1;
SELECT ALL rt12.c0 FROM vt0, rt12, vt2, vt1 GROUP BY rt12.c0;
SELECT rt12.c0 FROM vt0, rt12, vt2, vt1 WHERE (HEX(CAST(vt1.c0 AS NUMERIC))) GROUP BY rt12.c0 UNION SELECT rt12.c0 FROM vt0, rt12, vt2, vt1 WHERE ((NOT (HEX(CAST(vt1.c0 AS NUMERIC))))) GROUP BY rt12.c0 UNION SELECT ALL rt12.c0 FROM vt0, rt12, vt2, vt1 WHERE (((HEX(CAST(vt1.c0 AS NUMERIC))) ISNULL)) GROUP BY rt12.c0;
SELECT ALL rt12.c0 FROM vt0, rt12, vt2, vt1 GROUP BY rt12.c0;
SELECT rt12.c0, rt12.c2 FROM vt2, rt12, vt0 GROUP BY rt12.c0, rt12.c2;
SELECT rt12.c0, rt12.c2 FROM vt2, rt12, vt0 GROUP BY rt12.c0, rt12.c2 HAVING SUM(GROUP_CONCAT(COUNT(*))) UNION ALL SELECT ALL rt12.c0, rt12.c2 FROM vt2, rt12, vt0 GROUP BY rt12.c0, rt12.c2 HAVING (NOT (SUM(GROUP_CONCAT(COUNT(*))))) UNION ALL SELECT ALL rt12.c0, rt12.c2 FROM vt2, rt12, vt0 GROUP BY rt12.c0, rt12.c2 HAVING ((SUM(GROUP_CONCAT(COUNT(*)))) ISNULL);
SELECT * FROM vt0;
SELECT ALL * FROM vt0 WHERE (366606768) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (366606768))) UNION ALL SELECT ALL * FROM vt0 NOT INDEXED WHERE (((366606768) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT vt1.c0, vt0.c0, vt0.c1 FROM vt0, vt1;
SELECT DISTINCT vt1.c0, vt0.c0, vt0.c1 FROM vt0, vt1 WHERE (IFNULL(vt1.c0 COLLATE BINARY, LIKELY(vt1.c0))) UNION SELECT DISTINCT vt1.c0, vt0.c0, vt0.c1 FROM vt0, vt1 WHERE ((NOT (IFNULL(vt1.c0 COLLATE BINARY, LIKELY(vt1.c0))))) UNION SELECT DISTINCT vt1.c0, vt0.c0, vt0.c1 FROM vt0, vt1 WHERE (((IFNULL(vt1.c0 COLLATE BINARY, LIKELY(vt1.c0))) ISNULL));
SELECT DISTINCT vt1.c0, vt0.c0, vt0.c1 FROM vt0, vt1;
SELECT ALL vt2.c0, rt12.c1, rt12.c2 FROM vt2, rt12, vt1 GROUP BY vt2.c0, rt12.c1, rt12.c2;
SELECT ALL vt2.c0, rt12.c1, rt12.c2 FROM vt2, rt12, vt1 WHERE ((((vt1.c0)) NOT BETWEEN ((vt2.c0)) AND ((TOTAL_CHANGES())))) GROUP BY vt2.c0, rt12.c1, rt12.c2 UNION SELECT ALL vt2.c0, rt12.c1, rt12.c2 FROM vt2, rt12, vt1 WHERE ((NOT ((((vt1.c0)) NOT BETWEEN ((vt2.c0)) AND ((TOTAL_CHANGES())))))) GROUP BY vt2.c0, rt12.c1, rt12.c2 UNION SELECT vt2.c0, rt12.c1, rt12.c2 FROM vt2, rt12, vt1 WHERE ((((((vt1.c0)) NOT BETWEEN ((vt2.c0)) AND ((TOTAL_CHANGES())))) ISNULL)) GROUP BY vt2.c0, rt12.c1, rt12.c2;
SELECT ALL vt2.c0, rt12.c1, rt12.c2 FROM vt2, rt12, vt1 GROUP BY vt2.c0, rt12.c1, rt12.c2;
SELECT vt0.c0, vt0.c1, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt0.c1, vt1.c0;
SELECT ALL vt0.c0, vt0.c1, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt0.c1, vt1.c0 HAVING AVG((vt0.c0 IN (vt0.c1))) UNION ALL SELECT ALL vt0.c0, vt0.c1, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt0.c1, vt1.c0 HAVING (NOT (AVG((vt0.c0 IN (vt0.c1))))) UNION ALL SELECT ALL vt0.c0, vt0.c1, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt0.c1, vt1.c0 HAVING ((AVG((vt0.c0 IN (vt0.c1)))) ISNULL);
SELECT vt0.c0, vt0.c1, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt0.c1, vt1.c0;
SELECT ALL vt0.c0, vt0.c1, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt0.c1, vt1.c0 HAVING AVG((vt0.c0 IN (vt0.c1))) UNION ALL SELECT ALL vt0.c0, vt0.c1, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt0.c1, vt1.c0 HAVING (NOT (AVG((vt0.c0 IN (vt0.c1))))) UNION ALL SELECT ALL vt0.c0, vt0.c1, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt0.c1, vt1.c0 HAVING ((AVG((vt0.c0 IN (vt0.c1)))) ISNULL);
SELECT vt0.c0, vt0.c1, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt0.c1, vt1.c0;
SELECT * FROM rt12, vt2;
SELECT ALL * FROM rt12, vt2 WHERE (((DATE(0.7336849667941058, rt12.c0, rt12.c0)) NOT NULL)) UNION ALL SELECT * FROM rt12, vt2 WHERE ((NOT (((DATE(0.7336849667941058, rt12.c0, rt12.c0)) NOT NULL)))) UNION ALL SELECT * FROM rt12, vt2 WHERE (((((DATE(0.7336849667941058, rt12.c0, rt12.c0)) NOT NULL)) ISNULL));
SELECT * FROM rt12, vt2;
SELECT DISTINCT vt0.c1 FROM vt1, vt2 INNER JOIN vt0 ON vt0.c0;
SELECT DISTINCT vt0.c1 FROM vt1, vt2 INNER JOIN vt0 ON vt0.c0 WHERE (CASE LOWER(DISTINCT 'Mk髯')  WHEN ((vt1.c0)<(vt0.c1)) THEN x'' WHEN CAST(NULL AS TEXT) THEN vt0.c0 COLLATE BINARY WHEN (vt0.c0 IN (vt0.c1)) THEN vt0.c0 ELSE vt0.c1 END) UNION SELECT DISTINCT vt0.c1 FROM vt1, vt2 INNER JOIN vt0 ON vt0.c0 WHERE ((NOT (CASE LOWER(DISTINCT 'Mk髯')  WHEN ((vt1.c0)<(vt0.c1)) THEN x'' WHEN CAST(NULL AS TEXT) THEN vt0.c0 COLLATE BINARY WHEN (vt0.c0 IN (vt0.c1)) THEN vt0.c0 ELSE vt0.c1 END))) UNION SELECT DISTINCT vt0.c1 FROM vt1, vt2 INNER JOIN vt0 ON vt0.c0 WHERE (((CASE LOWER(DISTINCT 'Mk髯')  WHEN ((vt1.c0)<(vt0.c1)) THEN x'' WHEN CAST(NULL AS TEXT) THEN vt0.c0 COLLATE BINARY WHEN (vt0.c0 IN (vt0.c1)) THEN vt0.c0 ELSE vt0.c1 END) ISNULL));
SELECT DISTINCT vt0.c1 FROM vt1, vt2 INNER JOIN vt0 ON vt0.c0;
SELECT ALL rt12.c2, rt12.c1, rt12.c0 FROM rt12, vt2, vt1 GROUP BY rt12.c2, rt12.c1, rt12.c0;
SELECT rt12.c2, rt12.c1, rt12.c0 FROM rt12, vt2, vt1 WHERE (((vt2.c0 COLLATE RTRIM) BETWEEN (CASE vt2.c0  WHEN rt12.c1 THEN 0.6296050593917047 WHEN rt12.c2 THEN rt12.c2 WHEN 0X2a094a18 THEN vt2.c0 END) AND (vt1.c0 COLLATE BINARY))) GROUP BY rt12.c2, rt12.c1, rt12.c0 UNION SELECT ALL rt12.c2, rt12.c1, rt12.c0 FROM rt12, vt2, vt1 WHERE ((NOT (((vt2.c0 COLLATE RTRIM) BETWEEN (CASE vt2.c0  WHEN rt12.c1 THEN 0.6296050593917047 WHEN rt12.c2 THEN rt12.c2 WHEN 0x2a094a18 THEN vt2.c0 END) AND (vt1.c0 COLLATE BINARY))))) GROUP BY rt12.c2, rt12.c1, rt12.c0 UNION SELECT rt12.c2, rt12.c1, rt12.c0 FROM rt12, vt2, vt1 WHERE (((((vt2.c0 COLLATE RTRIM) BETWEEN (CASE vt2.c0  WHEN rt12.c1 THEN 0.6296050593917047 WHEN rt12.c2 THEN rt12.c2 WHEN 0x2a094a18 THEN vt2.c0 END) AND (vt1.c0 COLLATE BINARY))) ISNULL)) GROUP BY rt12.c2, rt12.c1, rt12.c0;
SELECT ALL rt12.c2, rt12.c1, rt12.c0 FROM rt12, vt2, vt1 GROUP BY rt12.c2, rt12.c1, rt12.c0;
SELECT ALL rt12.c1, vt0.c1, vt2.c0, vt0.c0 FROM vt2, rt12, vt0, vt1 GROUP BY rt12.c1, vt0.c1, vt2.c0, vt0.c0;
SELECT rt12.c1, vt0.c1, vt2.c0, vt0.c0 FROM vt2, rt12, vt0, vt1 GROUP BY rt12.c1, vt0.c1, vt2.c0, vt0.c0 HAVING (+ (MAX(vt0.c1))) UNION ALL SELECT ALL rt12.c1, vt0.c1, vt2.c0, vt0.c0 FROM vt2, rt12, vt0, vt1 GROUP BY rt12.c1, vt0.c1, vt2.c0, vt0.c0 HAVING (NOT ((+ (MAX(vt0.c1))))) UNION ALL SELECT ALL rt12.c1, vt0.c1, vt2.c0, vt0.c0 FROM vt2, rt12, vt0, vt1 GROUP BY rt12.c1, vt0.c1, vt2.c0, vt0.c0 HAVING (((+ (MAX(vt0.c1)))) ISNULL);
SELECT ALL rt12.c1, vt0.c1, vt2.c0, vt0.c0 FROM vt2, rt12, vt0, vt1 GROUP BY rt12.c1, vt0.c1, vt2.c0, vt0.c0;
SELECT rt12.c1, vt0.c1, vt2.c0, vt0.c0 FROM vt2, rt12, vt0, vt1 GROUP BY rt12.c1, vt0.c1, vt2.c0, vt0.c0 HAVING (+ (MAX(vt0.c1))) UNION ALL SELECT ALL rt12.c1, vt0.c1, vt2.c0, vt0.c0 FROM vt2, rt12, vt0, vt1 GROUP BY rt12.c1, vt0.c1, vt2.c0, vt0.c0 HAVING (NOT ((+ (MAX(vt0.c1))))) UNION ALL SELECT ALL rt12.c1, vt0.c1, vt2.c0, vt0.c0 FROM vt2, rt12, vt0, vt1 GROUP BY rt12.c1, vt0.c1, vt2.c0, vt0.c0 HAVING (((+ (MAX(vt0.c1)))) ISNULL);
SELECT ALL rt12.c1, vt0.c1, vt2.c0, vt0.c0 FROM vt2, rt12, vt0, vt1 GROUP BY rt12.c1, vt0.c1, vt2.c0, vt0.c0;
SELECT * FROM vt2 LEFT OUTER JOIN rt12 ON ((load_extension(vt2.c0))%(rt12.c1)) LEFT OUTER JOIN vt0 ON ((rt12.c2)>>('')) FULL OUTER JOIN vt1 ON ((((vt0.c0)IS NOT(vt0.c1))) NOT BETWEEN (((vt0.c1) NOTNULL)) AND ((~ (rt12.c0))));
SELECT DISTINCT * FROM vt0, vt2, vt1, rt12;
SELECT DISTINCT * FROM vt0, vt2, vt1, rt12 WHERE (((vt2.c0 IN ()) IN ())) UNION SELECT DISTINCT * FROM vt0, vt2, vt1, rt12 WHERE ((NOT (((vt2.c0 IN ()) IN ())))) UNION SELECT DISTINCT * FROM vt0, vt2, vt1, rt12 WHERE (((((vt2.c0 IN ()) IN ())) ISNULL));
SELECT DISTINCT * FROM vt0, vt2, vt1, rt12;
SELECT ALL vt2.c0, rt12.c1 FROM rt12 FULL OUTER JOIN vt2 ON rt12.c2 INNER JOIN vt0 ON CASE DATE('oc', vt0.c1, rt12.c1)  WHEN ((((vt2.c0)OR(rt12.c2)))AND(rt12.c1)) THEN (vt0.c0 IN ()) WHEN ((0.28844116767461525) NOT NULL) THEN ((vt2.c0)>>(rt12.c2)) WHEN CASE WHEN vt0.c1 THEN vt0.c0 ELSE rt12.c1 END THEN ((0.39565923591093977) BETWEEN (vt0.c1) AND (rt12.c2)) WHEN HEX(rt12.c1) THEN (vt2.c0 IN ()) WHEN ((rt12.c2)/(NULL)) THEN ((vt2.c0)==(rt12.c2)) WHEN (('4Wn⎏{y}y') IS FALSE) THEN rt12.c2 WHEN rt12.c0 THEN vt0.c0 COLLATE NOCASE END GROUP BY vt2.c0, rt12.c1;
SELECT ALL vt2.c0, rt12.c1 FROM rt12 FULL OUTER JOIN vt2 ON rt12.c2 INNER JOIN vt0 ON CASE DATE('oc', vt0.c1, rt12.c1)  WHEN ((((vt2.c0)OR(rt12.c2)))AND(rt12.c1)) THEN (vt0.c0 IN ()) WHEN ((0.28844116767461525) NOT NULL) THEN ((vt2.c0)>>(rt12.c2)) WHEN CASE WHEN vt0.c1 THEN vt0.c0 ELSE rt12.c1 END THEN ((0.39565923591093977) BETWEEN (vt0.c1) AND (rt12.c2)) WHEN HEX(rt12.c1) THEN (vt2.c0 IN ()) WHEN ((rt12.c2)/(NULL)) THEN ((vt2.c0)=(rt12.c2)) WHEN (('4Wn⎏{y}y') IS FALSE) THEN rt12.c2 WHEN rt12.c0 THEN vt0.c0 COLLATE NOCASE END WHERE (((CAST(rt12.c0 AS BLOB))<>(rt12.c0 COLLATE BINARY))) GROUP BY vt2.c0, rt12.c1 UNION SELECT vt2.c0, rt12.c1 FROM rt12 FULL OUTER JOIN vt2 ON rt12.c2 INNER JOIN vt0 ON CASE DATE('oc', vt0.c1, rt12.c1)  WHEN ((((vt2.c0)OR(rt12.c2)))AND(rt12.c1)) THEN (vt0.c0 IN ()) WHEN ((0.28844116767461525) NOT NULL) THEN ((vt2.c0)>>(rt12.c2)) WHEN CASE WHEN vt0.c1 THEN vt0.c0 ELSE rt12.c1 END THEN ((0.39565923591093977) BETWEEN (vt0.c1) AND (rt12.c2)) WHEN HEX(rt12.c1) THEN (vt2.c0 IN ()) WHEN ((rt12.c2)/(NULL)) THEN ((vt2.c0)==(rt12.c2)) WHEN (('4Wn⎏{y}y') IS FALSE) THEN rt12.c2 WHEN rt12.c0 THEN vt0.c0 COLLATE NOCASE END WHERE ((NOT (((CAST(rt12.c0 AS BLOB))!=(rt12.c0 COLLATE BINARY))))) GROUP BY vt2.c0, rt12.c1 UNION SELECT vt2.c0, rt12.c1 FROM rt12 FULL OUTER JOIN vt2 ON rt12.c2 INNER JOIN vt0 ON CASE DATE('oc', vt0.c1, rt12.c1)  WHEN ((((vt2.c0)OR(rt12.c2)))AND(rt12.c1)) THEN (vt0.c0 IN ()) WHEN ((0.28844116767461525) NOT NULL) THEN ((vt2.c0)>>(rt12.c2)) WHEN CASE WHEN vt0.c1 THEN vt0.c0 ELSE rt12.c1 END THEN ((0.39565923591093977) BETWEEN (vt0.c1) AND (rt12.c2)) WHEN HEX(rt12.c1) THEN (vt2.c0 IN ()) WHEN ((rt12.c2)/(NULL)) THEN ((vt2.c0)=(rt12.c2)) WHEN (('4Wn⎏{y}y') IS FALSE) THEN rt12.c2 WHEN rt12.c0 THEN vt0.c0 COLLATE NOCASE END WHERE (((((CAST(rt12.c0 AS BLOB))!=(rt12.c0 COLLATE BINARY))) ISNULL)) GROUP BY vt2.c0, rt12.c1;
SELECT ALL vt2.c0, rt12.c1 FROM rt12 FULL OUTER JOIN vt2 ON rt12.c2 INNER JOIN vt0 ON CASE DATE('oc', vt0.c1, rt12.c1)  WHEN ((((vt2.c0)OR(rt12.c2)))AND(rt12.c1)) THEN (vt0.c0 IN ()) WHEN ((0.28844116767461525) NOT NULL) THEN ((vt2.c0)>>(rt12.c2)) WHEN CASE WHEN vt0.c1 THEN vt0.c0 ELSE rt12.c1 END THEN ((0.39565923591093977) BETWEEN (vt0.c1) AND (rt12.c2)) WHEN HEX(rt12.c1) THEN (vt2.c0 IN ()) WHEN ((rt12.c2)/(NULL)) THEN ((vt2.c0)==(rt12.c2)) WHEN (('4Wn⎏{y}y') IS FALSE) THEN rt12.c2 WHEN rt12.c0 THEN vt0.c0 COLLATE NOCASE END GROUP BY vt2.c0, rt12.c1;
SELECT rt12.c2, vt0.c0, rt12.c1 FROM vt1, vt0, rt12 GROUP BY rt12.c2, vt0.c0, rt12.c1;
SELECT ALL rt12.c2, vt0.c0, rt12.c1 FROM vt1, vt0, rt12 GROUP BY rt12.c2, vt0.c0, rt12.c1 HAVING MIN(MIN(rt12.c0)) UNION ALL SELECT rt12.c2, vt0.c0, rt12.c1 FROM vt1, vt0, rt12 GROUP BY rt12.c2, vt0.c0, rt12.c1 HAVING (NOT (MIN(MIN(rt12.c0)))) UNION ALL SELECT rt12.c2, vt0.c0, rt12.c1 FROM vt1, vt0, rt12 GROUP BY rt12.c2, vt0.c0, rt12.c1 HAVING ((MIN(MIN(rt12.c0))) ISNULL);
SELECT ALL vt1.c0, rt12.c2, rt12.c1, rt12.c0, vt0.c0, vt0.c1 FROM rt12, vt2, vt0, vt1;
SELECT ALL vt1.c0, rt12.c2, rt12.c1, rt12.c0, vt0.c0, vt0.c1 FROM rt12, vt2, vt0, vt1 WHERE (((0Xffffffff80d73e06)+(vt2.c0))) UNION ALL SELECT ALL vt1.c0, rt12.c2, rt12.c1, rt12.c0, vt0.c0, vt0.c1 FROM rt12, vt2, vt0, vt1 WHERE ((NOT (((0xffffffff80d73e06)+(vt2.c0))))) UNION ALL SELECT ALL vt1.c0, rt12.c2, rt12.c1, rt12.c0, vt0.c0, vt0.c1 FROM rt12, vt2, vt0, vt1 WHERE (((((0xffffffff80d73e06)+(vt2.c0))) ISNULL));
SELECT ALL vt1.c0, rt12.c2, rt12.c1, rt12.c0, vt0.c0, vt0.c1 FROM rt12, vt2, vt0, vt1;
SELECT DISTINCT * FROM vt2;
SELECT DISTINCT * FROM vt2 WHERE (((vt2.c0 COLLATE RTRIM)%(((vt2.c0)>(vt2.c0))))) UNION SELECT DISTINCT * FROM vt2 WHERE ((NOT (((vt2.c0 COLLATE RTRIM)%(((vt2.c0)>(vt2.c0))))))) UNION SELECT DISTINCT * FROM vt2 WHERE (((((vt2.c0 COLLATE RTRIM)%(((vt2.c0)>(vt2.c0))))) ISNULL));
SELECT DISTINCT * FROM vt2;
SELECT rt12.c0, vt2.c0, rt12.c1, rt12.c2 FROM vt2, rt12 GROUP BY rt12.c0, vt2.c0, rt12.c1, rt12.c2;
SELECT rt12.c0, vt2.c0, rt12.c1, rt12.c2 FROM vt2, rt12 WHERE (TRIM(DISTINCT ((rt12.c0)/(x'')))) GROUP BY rt12.c0, vt2.c0, rt12.c1, rt12.c2 UNION SELECT rt12.c0, vt2.c0, rt12.c1, rt12.c2 FROM vt2, rt12 WHERE ((NOT (TRIM(DISTINCT ((rt12.c0)/(x'')))))) GROUP BY rt12.c0, vt2.c0, rt12.c1, rt12.c2 UNION SELECT ALL rt12.c0, vt2.c0, rt12.c1, rt12.c2 FROM vt2, rt12 WHERE (((TRIM(DISTINCT ((rt12.c0)/(x'')))) ISNULL)) GROUP BY rt12.c0, vt2.c0, rt12.c1, rt12.c2;
SELECT rt12.c0, vt2.c0, rt12.c1, rt12.c2 FROM vt2, rt12 GROUP BY rt12.c0, vt2.c0, rt12.c1, rt12.c2;
SELECT ALL rt12.c1, vt1.c0, rt12.c0, rt12.c2 FROM vt1, rt12 GROUP BY rt12.c1, vt1.c0, rt12.c0, rt12.c2;
SELECT ALL rt12.c1, vt1.c0, rt12.c0, rt12.c2 FROM vt1, rt12 GROUP BY rt12.c1, vt1.c0, rt12.c0, rt12.c2 HAVING (MIN(COUNT(*)) IN (MAX(COUNT(*)))) UNION ALL SELECT rt12.c1, vt1.c0, rt12.c0, rt12.c2 FROM vt1, rt12 GROUP BY rt12.c1, vt1.c0, rt12.c0, rt12.c2 HAVING (NOT ((MIN(COUNT(*)) IN (MAX(COUNT(*)))))) UNION ALL SELECT ALL rt12.c1, vt1.c0, rt12.c0, rt12.c2 FROM vt1, rt12 GROUP BY rt12.c1, vt1.c0, rt12.c0, rt12.c2 HAVING (((MIN(COUNT(*)) IN (MAX(COUNT(*))))) ISNULL);
SELECT MIN((- (((((((((((((vt0.c1)AND(rt12.c1)))OR(rt12.c0)))AND(vt1.c0)))OR(vt2.c0)))AND(rt12.c1)))OR(rt12.c2))))) FROM rt12, vt1, vt0, vt2 ORDER BY 0.7744167994655721 DESC, (((((((vt1.c0)) NOT BETWEEN ((vt2.c0)) AND ((rt12.c0))))AND((vt2.c0 IN ()))))OR(((vt0.c0) BETWEEN (vt0.c1) AND (vt1.c0))))  NULLS FIRST;
SELECT ALL * FROM vt2;
SELECT * FROM vt2 WHERE (load_extension(((vt2.c0)*(vt2.c0)))) UNION ALL SELECT * FROM vt2 WHERE ((NOT (load_extension(((vt2.c0)*(vt2.c0)))))) UNION ALL SELECT * FROM vt2 WHERE (((load_extension(((vt2.c0)*(vt2.c0)))) ISNULL));
SELECT DISTINCT * FROM vt0, vt2;
SELECT DISTINCT * FROM vt0, vt2 WHERE (CASE WHEN CASE NULL  WHEN vt0.c0 THEN vt0.c1 END THEN (vt2.c0 IN ()) ELSE NULL END) UNION SELECT DISTINCT * FROM vt0, vt2 WHERE ((NOT (CASE WHEN CASE NULL  WHEN vt0.c0 THEN vt0.c1 END THEN (vt2.c0 IN ()) ELSE NULL END))) UNION SELECT DISTINCT * FROM vt0, vt2 WHERE (((CASE WHEN CASE NULL  WHEN vt0.c0 THEN vt0.c1 END THEN (vt2.c0 IN ()) ELSE NULL END) ISNULL));
SELECT DISTINCT * FROM vt0, vt2;
SELECT vt1.c0, vt2.c0 FROM vt1, vt2 GROUP BY vt1.c0, vt2.c0;
SELECT ALL vt1.c0, vt2.c0 FROM vt1, vt2 WHERE (TRIM(((vt1.c0) BETWEEN (vt2.c0) AND (vt1.c0)))) GROUP BY vt1.c0, vt2.c0 UNION SELECT ALL vt1.c0, vt2.c0 FROM vt1, vt2 WHERE ((NOT (TRIM(((vt1.c0) BETWEEN (vt2.c0) AND (vt1.c0)))))) GROUP BY vt1.c0, vt2.c0 UNION SELECT vt1.c0, vt2.c0 FROM vt1, vt2 WHERE (((TRIM(((vt1.c0) BETWEEN (vt2.c0) AND (vt1.c0)))) ISNULL)) GROUP BY vt1.c0, vt2.c0;
SELECT vt1.c0, vt2.c0 FROM vt1, vt2 GROUP BY vt1.c0, vt2.c0;
SELECT ALL rt12.c2, rt12.c1, vt1.c0, vt0.c0 FROM rt12, vt0, vt1 GROUP BY rt12.c2, rt12.c1, vt1.c0, vt0.c0;
SELECT rt12.c2, rt12.c1, vt1.c0, vt0.c0 FROM rt12, vt0, vt1 GROUP BY rt12.c2, rt12.c1, vt1.c0, vt0.c0 HAVING COUNT(COUNT(GROUP_CONCAT(rt12.c1))) UNION ALL SELECT ALL rt12.c2, rt12.c1, vt1.c0, vt0.c0 FROM rt12, vt0, vt1 GROUP BY rt12.c2, rt12.c1, vt1.c0, vt0.c0 HAVING (NOT (COUNT(COUNT(GROUP_CONCAT(rt12.c1))))) UNION ALL SELECT ALL rt12.c2, rt12.c1, vt1.c0, vt0.c0 FROM rt12, vt0, vt1 GROUP BY rt12.c2, rt12.c1, vt1.c0, vt0.c0 HAVING ((COUNT(COUNT(GROUP_CONCAT(rt12.c1)))) ISNULL);
SELECT * FROM vt1, vt0;
SELECT ALL * FROM vt1, vt0 WHERE (NULL) UNION ALL SELECT * FROM vt1, vt0 WHERE ((NOT (NULL))) UNION ALL SELECT * FROM vt1, vt0 WHERE (((NULL) ISNULL));
SELECT * FROM vt1, vt0;
SELECT DISTINCT * FROM rt12, vt1 INNER JOIN vt2 ON 4.96402794E8;
SELECT DISTINCT * FROM rt12, vt1 INNER JOIN vt2 ON 4.96402794E8 WHERE (ABS(((((vt1.c0)OR(0.8292092206610328)))OR(vt2.c0)))) UNION SELECT DISTINCT * FROM rt12, vt1 INNER JOIN vt2 ON 4.96402794E8 WHERE ((NOT (ABS(((((vt1.c0)OR(0.8292092206610328)))OR(vt2.c0)))))) UNION SELECT DISTINCT * FROM rt12, vt1 INNER JOIN vt2 ON 4.96402794E8 WHERE (((ABS(((((vt1.c0)OR(0.8292092206610328)))OR(vt2.c0)))) ISNULL));
SELECT DISTINCT * FROM rt12, vt1 INNER JOIN vt2 ON 4.96402794E8;
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c0, vt0.c1 FROM vt0 WHERE (CASE WHEN json_array_length(vt0.c1, '%wZG!') THEN LIKELY(vt0.c1) WHEN ((((vt0.c0)OR(vt0.c0)))OR(vt0.c1)) THEN (vt0.c1 IN ()) WHEN (((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c0))) THEN CAST(vt0.c0 AS INTEGER) ELSE (NOT (vt0.c0)) END) GROUP BY vt0.c0, vt0.c1 UNION SELECT ALL vt0.c0, vt0.c1 FROM vt0 WHERE ((NOT (CASE WHEN json_array_length(vt0.c1, '%wZG!') THEN LIKELY(vt0.c1) WHEN ((((vt0.c0)OR(vt0.c0)))OR(vt0.c1)) THEN (vt0.c1 IN ()) WHEN (((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c0))) THEN CAST(vt0.c0 AS INTEGER) ELSE (NOT (vt0.c0)) END))) GROUP BY vt0.c0, vt0.c1 UNION SELECT ALL vt0.c0, vt0.c1 FROM vt0 NOT INDEXED WHERE (((CASE WHEN json_array_length(vt0.c1, '%wZG!') THEN LIKELY(vt0.c1) WHEN ((((vt0.c0)OR(vt0.c0)))OR(vt0.c1)) THEN (vt0.c1 IN ()) WHEN (((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c0))) THEN CAST(vt0.c0 AS INTEGER) ELSE (NOT (vt0.c0)) END) ISNULL)) GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL rt12.c2, rt12.c0 FROM rt12 GROUP BY rt12.c2, rt12.c0;
SELECT ALL rt12.c2, rt12.c0 FROM rt12 GROUP BY rt12.c2, rt12.c0 HAVING (CASE WHEN COUNT(COUNT(MIN(rt12.c1))) THEN SUM(SUM(rt12.c0)) WHEN rt12.c2 THEN rt12.c2 WHEN rt12.c0 THEN rt12.c1 ELSE rt12.c1 END IN ()) UNION ALL SELECT ALL rt12.c2, rt12.c0 FROM rt12 GROUP BY rt12.c2, rt12.c0 HAVING (NOT ((CASE WHEN COUNT(COUNT(MIN(rt12.c1))) THEN SUM(SUM(rt12.c0)) WHEN rt12.c2 THEN rt12.c2 WHEN rt12.c0 THEN rt12.c1 ELSE rt12.c1 END IN ()))) UNION ALL SELECT rt12.c2, rt12.c0 FROM rt12 GROUP BY rt12.c2, rt12.c0 HAVING (((CASE WHEN COUNT(COUNT(MIN(rt12.c1))) THEN SUM(SUM(rt12.c0)) WHEN rt12.c2 THEN rt12.c2 WHEN rt12.c0 THEN rt12.c1 ELSE rt12.c1 END IN ())) ISNULL);
SELECT ALL rt12.c2, rt12.c0 FROM rt12 GROUP BY rt12.c2, rt12.c0;
SELECT ALL rt12.c2, rt12.c0 FROM rt12 GROUP BY rt12.c2, rt12.c0 HAVING (CASE WHEN COUNT(COUNT(MIN(rt12.c1))) THEN SUM(SUM(rt12.c0)) WHEN rt12.c2 THEN rt12.c2 WHEN rt12.c0 THEN rt12.c1 ELSE rt12.c1 END IN ()) UNION ALL SELECT ALL rt12.c2, rt12.c0 FROM rt12 GROUP BY rt12.c2, rt12.c0 HAVING (NOT ((CASE WHEN COUNT(COUNT(MIN(rt12.c1))) THEN SUM(SUM(rt12.c0)) WHEN rt12.c2 THEN rt12.c2 WHEN rt12.c0 THEN rt12.c1 ELSE rt12.c1 END IN ()))) UNION ALL SELECT rt12.c2, rt12.c0 FROM rt12 GROUP BY rt12.c2, rt12.c0 HAVING (((CASE WHEN COUNT(COUNT(MIN(rt12.c1))) THEN SUM(SUM(rt12.c0)) WHEN rt12.c2 THEN rt12.c2 WHEN rt12.c0 THEN rt12.c1 ELSE rt12.c1 END IN ())) ISNULL);
SELECT ALL rt12.c2, rt12.c0 FROM rt12 GROUP BY rt12.c2, rt12.c0;
SELECT ALL * FROM vt0;
SELECT * FROM vt0 WHERE (((vt0.c0) IS FALSE) COLLATE RTRIM) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (((vt0.c0) IS FALSE) COLLATE RTRIM))) UNION ALL SELECT * FROM vt0 WHERE (((((vt0.c0) IS FALSE) COLLATE RTRIM) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT * FROM rt12;
SELECT DISTINCT * FROM rt12 WHERE (((((((rt12.c1)&(rt12.c1)))AND(CAST(0.7075353522444322 AS NUMERIC))))AND(((rt12.c2) IS FALSE)))) UNION SELECT DISTINCT * FROM rt12 WHERE ((NOT (((((((rt12.c1)&(rt12.c1)))AND(CAST(0.7075353522444322 AS NUMERIC))))AND(((rt12.c2) IS FALSE)))))) UNION SELECT DISTINCT * FROM rt12 WHERE (((((((((rt12.c1)&(rt12.c1)))AND(CAST(0.7075353522444322 AS NUMERIC))))AND(((rt12.c2) IS FALSE)))) ISNULL));
SELECT DISTINCT * FROM rt12;
SELECT vt2.c0, rt12.c2 FROM rt12, vt0, vt1, vt2 GROUP BY vt2.c0, rt12.c2;
SELECT ALL vt2.c0, rt12.c2 FROM rt12, vt0, vt1, vt2 WHERE (SQLITE_SOURCE_ID() COLLATE RTRIM) GROUP BY vt2.c0, rt12.c2 UNION SELECT ALL vt2.c0, rt12.c2 FROM rt12, vt0, vt1, vt2 WHERE ((NOT (SQLITE_SOURCE_ID() COLLATE RTRIM))) GROUP BY vt2.c0, rt12.c2 UNION SELECT vt2.c0, rt12.c2 FROM rt12, vt0, vt1, vt2 WHERE (((SQLITE_SOURCE_ID() COLLATE RTRIM) ISNULL)) GROUP BY vt2.c0, rt12.c2;
SELECT vt2.c0, rt12.c2 FROM rt12, vt0, vt1, vt2 GROUP BY vt2.c0, rt12.c2;
SELECT ALL vt0.c1, vt2.c0 FROM vt0, rt12 NATURAL JOIN vt2 GROUP BY vt0.c1, vt2.c0;
SELECT vt0.c1, vt2.c0 FROM vt0, rt12 NATURAL JOIN vt2 GROUP BY vt0.c1, vt2.c0 HAVING COUNT(COALESCE(DISTINCT MIN(AVG(MIN(SUM(MIN(rt12.c2))))), vt0.c1, vt0.c0, SUM(vt0.c1))) UNION ALL SELECT vt0.c1, vt2.c0 FROM vt0, rt12 NATURAL JOIN vt2 GROUP BY vt0.c1, vt2.c0 HAVING (NOT (COUNT(COALESCE(DISTINCT MIN(AVG(MIN(SUM(MIN(rt12.c2))))), vt0.c1, vt0.c0, SUM(vt0.c1))))) UNION ALL SELECT vt0.c1, vt2.c0 FROM vt0, rt12 NATURAL JOIN vt2 GROUP BY vt0.c1, vt2.c0 HAVING ((COUNT(COALESCE(DISTINCT MIN(AVG(MIN(SUM(MIN(rt12.c2))))), vt0.c1, vt0.c0, SUM(vt0.c1)))) ISNULL);
SELECT * FROM vt0;
SELECT * FROM vt0 WHERE (((vt0.c1) BETWEEN (((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(''))) AND ((((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1)))))) UNION ALL SELECT * FROM vt0 WHERE ((NOT (((vt0.c1) BETWEEN (((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(''))) AND ((((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1)))))))) UNION ALL SELECT * FROM vt0 WHERE (((((vt0.c1) BETWEEN (((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(''))) AND ((((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1)))))) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT vt0.c1 FROM vt0;
SELECT DISTINCT vt0.c1 FROM vt0 WHERE (CASE WHEN CASE WHEN vt0.c1 THEN vt0.c1 END THEN (((vt0.c1)) NOT BETWEEN ((NULL)) AND ((vt0.c1))) ELSE ((vt0.c1) NOT NULL) END) UNION SELECT DISTINCT vt0.c1 FROM vt0 WHERE ((NOT (CASE WHEN CASE WHEN vt0.c1 THEN vt0.c1 END THEN (((vt0.c1)) NOT BETWEEN ((NULL)) AND ((vt0.c1))) ELSE ((vt0.c1) NOT NULL) END))) UNION SELECT DISTINCT vt0.c1 FROM vt0 WHERE (((CASE WHEN CASE WHEN vt0.c1 THEN vt0.c1 END THEN (((vt0.c1)) NOT BETWEEN ((NULL)) AND ((vt0.c1))) ELSE ((vt0.c1) NOT NULL) END) ISNULL));
SELECT DISTINCT vt0.c1 FROM vt0;
SELECT ALL vt1.c0, vt2.c0, vt0.c0 FROM vt1, vt0 RIGHT OUTER JOIN vt2 ON '' GROUP BY vt1.c0, vt2.c0, vt0.c0;
SELECT vt1.c0, vt2.c0, vt0.c0 FROM vt1, vt0 RIGHT OUTER JOIN vt2 ON '' WHERE (SQLITE_COMPILEOPTION_GET(vt0.c0)) GROUP BY vt1.c0, vt2.c0, vt0.c0 UNION SELECT ALL vt1.c0, vt2.c0, vt0.c0 FROM vt1, vt0 RIGHT OUTER JOIN vt2 ON '' WHERE ((NOT (SQLITE_COMPILEOPTION_GET(vt0.c0)))) GROUP BY vt1.c0, vt2.c0, vt0.c0 UNION SELECT ALL vt1.c0, vt2.c0, vt0.c0 FROM vt1, vt0 RIGHT OUTER JOIN vt2 ON '' WHERE (((SQLITE_COMPILEOPTION_GET(vt0.c0)) ISNULL)) GROUP BY vt1.c0, vt2.c0, vt0.c0;
SELECT ALL vt1.c0, vt2.c0, vt0.c0 FROM vt1, vt0 RIGHT OUTER JOIN vt2 ON '' GROUP BY vt1.c0, vt2.c0, vt0.c0;
SELECT vt2.c0, rt12.c0, vt0.c1 FROM vt2, vt0, rt12, vt1 GROUP BY vt2.c0, rt12.c0, vt0.c1;
SELECT ALL vt2.c0, rt12.c0, vt0.c1 FROM vt2, vt0, rt12, vt1 GROUP BY vt2.c0, rt12.c0, vt0.c1 HAVING (TOTAL(TOTAL(vt1.c0)) IN ()) UNION ALL SELECT ALL vt2.c0, rt12.c0, vt0.c1 FROM vt2, vt0, rt12, vt1 GROUP BY vt2.c0, rt12.c0, vt0.c1 HAVING (NOT ((TOTAL(TOTAL(vt1.c0)) IN ()))) UNION ALL SELECT ALL vt2.c0, rt12.c0, vt0.c1 FROM vt2, vt0, rt12, vt1 GROUP BY vt2.c0, rt12.c0, vt0.c1 HAVING (((TOTAL(TOTAL(vt1.c0)) IN ())) ISNULL);
SELECT vt2.c0, rt12.c0, vt0.c1 FROM vt2, vt0, rt12, vt1 GROUP BY vt2.c0, rt12.c0, vt0.c1;
SELECT ALL vt2.c0, rt12.c0, vt0.c1 FROM vt2, vt0, rt12, vt1 GROUP BY vt2.c0, rt12.c0, vt0.c1 HAVING (TOTAL(TOTAL(vt1.c0)) IN ()) UNION ALL SELECT ALL vt2.c0, rt12.c0, vt0.c1 FROM vt2, vt0, rt12, vt1 GROUP BY vt2.c0, rt12.c0, vt0.c1 HAVING (NOT ((TOTAL(TOTAL(vt1.c0)) IN ()))) UNION ALL SELECT ALL vt2.c0, rt12.c0, vt0.c1 FROM vt2, vt0, rt12, vt1 GROUP BY vt2.c0, rt12.c0, vt0.c1 HAVING (((TOTAL(TOTAL(vt1.c0)) IN ())) ISNULL);
SELECT vt2.c0, rt12.c0, vt0.c1 FROM vt2, vt0, rt12, vt1 GROUP BY vt2.c0, rt12.c0, vt0.c1;
SELECT TOTAL(CASE vt1.c0 COLLATE NOCASE  WHEN ((vt1.c0) NOT NULL) THEN (vt1.c0 IN ()) END) FROM vt2, rt12, vt1 ORDER BY (((((rt12.c0) NOT NULL)))!=((0.8744454545641179))) DESC, (((((((rt12.c0)OR(vt2.c0)))AND('TGU')), ((vt2.c0) BETWEEN (rt12.c1) AND (rt12.c0)), (NOT (rt12.c0))))>=((vt1.c0, ((((vt2.c0)OR(rt12.c2)))OR(rt12.c0)), (((rt12.c0)) NOT BETWEEN ((rt12.c2)) AND ((rt12.c0)))))), ((CASE WHEN rt12.c0 THEN rt12.c2 END) NOTNULL) ASC  NULLS LAST;
SELECT ALL * FROM vt1, vt0;
SELECT * FROM vt1, vt0 WHERE ((NOT (((((((((vt0.c1)AND(0.914586963764747)))AND(vt0.c1)))OR(vt0.c1)))AND(vt0.c1))))) UNION ALL SELECT * FROM vt1, vt0 WHERE ((NOT ((NOT (((((((((vt0.c1)AND(0.914586963764747)))AND(vt0.c1)))OR(vt0.c1)))AND(vt0.c1))))))) UNION ALL SELECT * FROM vt1, vt0 WHERE ((((NOT (((((((((vt0.c1)AND(0.914586963764747)))AND(vt0.c1)))OR(vt0.c1)))AND(vt0.c1))))) ISNULL));
SELECT ALL * FROM vt1, vt0;
SELECT DISTINCT * FROM rt12 CROSS JOIN vt2 ON ((((rt12.c2)AND((~ (0.20800562921712684)))))AND((rt12.c2 IN ())));
SELECT DISTINCT * FROM rt12 CROSS JOIN vt2 ON ((((rt12.c2)AND((~ (0.20800562921712684)))))AND((rt12.c2 IN ()))) WHERE (((vt2.c0 COLLATE NOCASE) IS FALSE)) UNION SELECT DISTINCT * FROM rt12 CROSS JOIN vt2 ON ((((rt12.c2)AND((~ (0.20800562921712684)))))AND((rt12.c2 IN ()))) WHERE ((NOT (((vt2.c0 COLLATE NOCASE) IS FALSE)))) UNION SELECT DISTINCT * FROM rt12 CROSS JOIN vt2 ON ((((rt12.c2)AND((~ (0.20800562921712684)))))AND((rt12.c2 IN ()))) WHERE (((((vt2.c0 COLLATE NOCASE) IS FALSE)) ISNULL));
SELECT DISTINCT * FROM rt12 CROSS JOIN vt2 ON ((((rt12.c2)AND((~ (0.20800562921712684)))))AND((rt12.c2 IN ())));
SELECT ALL vt0.c0, rt12.c0 FROM rt12, vt0 GROUP BY vt0.c0, rt12.c0;
SELECT vt0.c0, rt12.c0 FROM rt12, vt0 WHERE (((((('' IN ()))OR('_o^' COLLATE RTRIM)))AND((((1.710854074E9, rt12.c2, NULL))<((rt12.c2, vt0.c1, vt0.c1)))))) GROUP BY vt0.c0, rt12.c0 UNION SELECT vt0.c0, rt12.c0 FROM rt12, vt0 WHERE ((NOT (((((('' IN ()))OR('_o^' COLLATE RTRIM)))AND((((1.710854074E9, rt12.c2, NULL))<((rt12.c2, vt0.c1, vt0.c1)))))))) GROUP BY vt0.c0, rt12.c0 UNION SELECT vt0.c0, rt12.c0 FROM rt12, vt0 WHERE (((((((('' IN ()))OR('_o^' COLLATE RTRIM)))AND((((1.710854074E9, rt12.c2, NULL))<((rt12.c2, vt0.c1, vt0.c1)))))) ISNULL)) GROUP BY vt0.c0, rt12.c0;
SELECT ALL vt0.c0, rt12.c0 FROM rt12, vt0 GROUP BY vt0.c0, rt12.c0;
SELECT ALL rt12.c2, rt12.c0 FROM rt12 GROUP BY rt12.c2, rt12.c0;
SELECT rt12.c2, rt12.c0 FROM rt12 GROUP BY rt12.c2, rt12.c0 HAVING LTRIM((rt12.c0 IN ())) UNION ALL SELECT ALL rt12.c2, rt12.c0 FROM rt12 GROUP BY rt12.c2, rt12.c0 HAVING (NOT (LTRIM((rt12.c0 IN ())))) UNION ALL SELECT ALL rt12.c2, rt12.c0 FROM rt12 GROUP BY rt12.c2, rt12.c0 HAVING ((LTRIM((rt12.c0 IN ()))) ISNULL);
SELECT ALL rt12.c2, rt12.c0 FROM rt12 GROUP BY rt12.c2, rt12.c0;
SELECT rt12.c2, rt12.c0 FROM rt12 GROUP BY rt12.c2, rt12.c0 HAVING LTRIM((rt12.c0 IN ())) UNION ALL SELECT ALL rt12.c2, rt12.c0 FROM rt12 GROUP BY rt12.c2, rt12.c0 HAVING (NOT (LTRIM((rt12.c0 IN ())))) UNION ALL SELECT ALL rt12.c2, rt12.c0 FROM rt12 GROUP BY rt12.c2, rt12.c0 HAVING ((LTRIM((rt12.c0 IN ()))) ISNULL);
SELECT ALL rt12.c2, rt12.c0 FROM rt12 GROUP BY rt12.c2, rt12.c0;
SELECT MAX(((CASE vt1.c0  WHEN vt2.c0 THEN rt12.c2 WHEN vt2.c0 THEN vt1.c0 WHEN rt12.c1 THEN rt12.c0 END)/(((vt2.c0)&(rt12.c1))))) FROM vt2, rt12, vt1;
SELECT ALL * FROM rt12 CROSS JOIN vt1 ON CAST(CASE WHEN vt2.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt2.c0 THEN rt12.c0 END AS BLOB) INNER JOIN vt0 ON rt12.c0 FULL OUTER JOIN vt2 ON TRIM(DISTINCT CAST(vt1.c0 AS NUMERIC), vt0.c1);
SELECT DISTINCT rt12.c1, rt12.c2, vt1.c0 FROM rt12 NATURAL JOIN vt1;
SELECT DISTINCT rt12.c1, rt12.c2, vt1.c0 FROM rt12 NATURAL JOIN vt1 WHERE ((((- (rt12.c1))) NOT BETWEEN (CASE WHEN rt12.c2 THEN vt1.c0 ELSE rt12.c2 END) AND ((NOT (vt1.c0))))) UNION SELECT DISTINCT rt12.c1, rt12.c2, vt1.c0 FROM rt12 NATURAL JOIN vt1 WHERE ((NOT ((((- (rt12.c1))) NOT BETWEEN (CASE WHEN rt12.c2 THEN vt1.c0 ELSE rt12.c2 END) AND ((NOT (vt1.c0))))))) UNION SELECT DISTINCT rt12.c1, rt12.c2, vt1.c0 FROM rt12 NATURAL JOIN vt1 WHERE ((((((- (rt12.c1))) NOT BETWEEN (CASE WHEN rt12.c2 THEN vt1.c0 ELSE rt12.c2 END) AND ((NOT (vt1.c0))))) ISNULL));
SELECT DISTINCT rt12.c1, rt12.c2, vt1.c0 FROM rt12 NATURAL JOIN vt1;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE (((vt1.c0 COLLATE BINARY) NOTNULL)) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (((vt1.c0 COLLATE BINARY) NOTNULL)))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE (((((vt1.c0 COLLATE BINARY) NOTNULL)) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt0.c1 FROM vt0, vt1 INNER JOIN vt2 ON CASE ((vt2.c0)=(NULL))  WHEN (vt1.c0 IN ()) THEN ((((vt1.c0)OR(vt2.c0)))AND(x'ab2a')) ELSE vt1.c0 END GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt0, vt1 INNER JOIN vt2 ON CASE ((vt2.c0)==(NULL))  WHEN (vt1.c0 IN ()) THEN ((((vt1.c0)OR(vt2.c0)))AND(x'ab2a')) ELSE vt1.c0 END GROUP BY vt0.c1 HAVING COUNT(*) UNION ALL SELECT vt0.c1 FROM vt0, vt1 INNER JOIN vt2 ON CASE ((vt2.c0)==(NULL))  WHEN (vt1.c0 IN ()) THEN ((((vt1.c0)OR(vt2.c0)))AND(x'ab2a')) ELSE vt1.c0 END GROUP BY vt0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt0.c1 FROM vt0, vt1 INNER JOIN vt2 ON CASE ((vt2.c0)=(NULL))  WHEN (vt1.c0 IN ()) THEN ((((vt1.c0)OR(vt2.c0)))AND(x'ab2a')) ELSE vt1.c0 END GROUP BY vt0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt0.c1 FROM vt0, vt1 INNER JOIN vt2 ON CASE ((vt2.c0)=(NULL))  WHEN (vt1.c0 IN ()) THEN ((((vt1.c0)OR(vt2.c0)))AND(x'ab2a')) ELSE vt1.c0 END GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt0, vt1 INNER JOIN vt2 ON CASE ((vt2.c0)==(NULL))  WHEN (vt1.c0 IN ()) THEN ((((vt1.c0)OR(vt2.c0)))AND(x'ab2a')) ELSE vt1.c0 END GROUP BY vt0.c1 HAVING COUNT(*) UNION ALL SELECT vt0.c1 FROM vt0, vt1 INNER JOIN vt2 ON CASE ((vt2.c0)==(NULL))  WHEN (vt1.c0 IN ()) THEN ((((vt1.c0)OR(vt2.c0)))AND(x'ab2a')) ELSE vt1.c0 END GROUP BY vt0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt0.c1 FROM vt0, vt1 INNER JOIN vt2 ON CASE ((vt2.c0)=(NULL))  WHEN (vt1.c0 IN ()) THEN ((((vt1.c0)OR(vt2.c0)))AND(x'ab2a')) ELSE vt1.c0 END GROUP BY vt0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt0.c1 FROM vt0, vt1 INNER JOIN vt2 ON CASE ((vt2.c0)=(NULL))  WHEN (vt1.c0 IN ()) THEN ((((vt1.c0)OR(vt2.c0)))AND(x'ab2a')) ELSE vt1.c0 END GROUP BY vt0.c1;
SELECT vt2.c0 FROM vt2;
SELECT vt2.c0 FROM vt2 WHERE ('quIP''knl') UNION ALL SELECT ALL vt2.c0 FROM vt2 WHERE ((NOT ('quIP''knl'))) UNION ALL SELECT ALL vt2.c0 FROM vt2 WHERE ((('quIP''knl') ISNULL));
SELECT vt2.c0 FROM vt2;
SELECT DISTINCT vt1.c0 FROM vt2, vt1;
SELECT DISTINCT vt1.c0 FROM vt2, vt1 WHERE ((+ (((((((((vt2.c0)AND(vt2.c0)))OR(vt2.c0)))OR(vt2.c0)))AND(vt2.c0))))) UNION SELECT DISTINCT vt1.c0 FROM vt2, vt1 WHERE ((NOT ((+ (((((((((vt2.c0)AND(vt2.c0)))OR(vt2.c0)))OR(vt2.c0)))AND(vt2.c0))))))) UNION SELECT DISTINCT vt1.c0 FROM vt2, vt1 WHERE ((((+ (((((((((vt2.c0)AND(vt2.c0)))OR(vt2.c0)))OR(vt2.c0)))AND(vt2.c0))))) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt2, vt1;
SELECT rt12.c2, rt12.c1, vt1.c0, vt0.c1, vt0.c0 FROM rt12, vt0, vt1, vt2 GROUP BY rt12.c2, rt12.c1, vt1.c0, vt0.c1, vt0.c0;
SELECT ALL rt12.c2, rt12.c1, vt1.c0, vt0.c1, vt0.c0 FROM rt12, vt0, vt1, vt2 WHERE ((CASE rt12.c0  WHEN vt0.c1 THEN vt0.c1 END IN ())) GROUP BY rt12.c2, rt12.c1, vt1.c0, vt0.c1, vt0.c0 UNION SELECT ALL rt12.c2, rt12.c1, vt1.c0, vt0.c1, vt0.c0 FROM rt12, vt0, vt1, vt2 WHERE ((NOT ((CASE rt12.c0  WHEN vt0.c1 THEN vt0.c1 END IN ())))) GROUP BY rt12.c2, rt12.c1, vt1.c0, vt0.c1, vt0.c0 UNION SELECT rt12.c2, rt12.c1, vt1.c0, vt0.c1, vt0.c0 FROM rt12, vt0, vt1, vt2 WHERE ((((CASE rt12.c0  WHEN vt0.c1 THEN vt0.c1 END IN ())) ISNULL)) GROUP BY rt12.c2, rt12.c1, vt1.c0, vt0.c1, vt0.c0;
SELECT rt12.c2, rt12.c1, vt1.c0, vt0.c1, vt0.c0 FROM rt12, vt0, vt1, vt2 GROUP BY rt12.c2, rt12.c1, vt1.c0, vt0.c1, vt0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING AVG(CASE TOTAL(GROUP_CONCAT(vt0.c1))  WHEN MAX(SUM(vt0.c0)) THEN vt0.c0 END) UNION ALL SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING (NOT (AVG(CASE TOTAL(GROUP_CONCAT(vt0.c1))  WHEN MAX(SUM(vt0.c0)) THEN vt0.c0 END))) UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING ((AVG(CASE TOTAL(GROUP_CONCAT(vt0.c1))  WHEN MAX(SUM(vt0.c0)) THEN vt0.c0 END)) ISNULL);
SELECT MAX(CAST(vt0.c1 AS REAL)) FROM vt1, vt0, vt2, rt12;
SELECT ALL * FROM vt1, vt2, rt12;
SELECT * FROM vt1, vt2, rt12 WHERE (((((rt12.c0)AND(NULL))) IS TRUE)) UNION ALL SELECT ALL * FROM vt1, vt2, rt12 WHERE ((NOT (((((rt12.c0)AND(NULL))) IS TRUE)))) UNION ALL SELECT ALL * FROM vt1, vt2, rt12 WHERE (((((((rt12.c0)AND(NULL))) IS TRUE)) ISNULL));
SELECT ALL * FROM vt1, vt2, rt12;
SELECT DISTINCT * FROM vt0, rt12, vt2, vt1;
SELECT DISTINCT * FROM vt0, rt12, vt2, vt1 WHERE (CAST(json_array(vt0.c1, vt1.c0) AS BLOB)) UNION SELECT DISTINCT * FROM vt0, rt12, vt2, vt1 WHERE ((NOT (CAST(json_array(vt0.c1, vt1.c0) AS BLOB)))) UNION SELECT DISTINCT * FROM vt0, rt12, vt2, vt1 WHERE (((CAST(json_array(vt0.c1, vt1.c0) AS BLOB)) ISNULL));
SELECT ALL rt12.c2, rt12.c1, vt0.c1, rt12.c0, vt0.c0 FROM vt0 FULL OUTER JOIN rt12 ON ((((((((((((vt0.c0 COLLATE BINARY)OR(((rt12.c2) NOT BETWEEN (vt0.c0) AND (rt12.c1)))))OR(((vt0.c0) BETWEEN (0.45249285608699297) AND (vt0.c0)))))OR(CAST(rt12.c1 AS BLOB))))OR(CASE rt12.c0  WHEN rt12.c1 THEN rt12.c2 WHEN rt12.c0 THEN rt12.c2 WHEN rt12.c2 THEN vt0.c1 END)))OR(CAST(rt12.c0 AS INTEGER))))OR((NOT (rt12.c2)))) GROUP BY rt12.c2, rt12.c1, vt0.c1, rt12.c0, vt0.c0;
SELECT rt12.c2, rt12.c1, vt0.c1, rt12.c0, vt0.c0 FROM vt0 FULL OUTER JOIN rt12 ON ((((((((((((vt0.c0 COLLATE BINARY)OR(((rt12.c2) NOT BETWEEN (vt0.c0) AND (rt12.c1)))))OR(((vt0.c0) BETWEEN (0.45249285608699297) AND (vt0.c0)))))OR(CAST(rt12.c1 AS BLOB))))OR(CASE rt12.c0  WHEN rt12.c1 THEN rt12.c2 WHEN rt12.c0 THEN rt12.c2 WHEN rt12.c2 THEN vt0.c1 END)))OR(CAST(rt12.c0 AS INTEGER))))OR((NOT (rt12.c2)))) WHERE ('') GROUP BY rt12.c2, rt12.c1, vt0.c1, rt12.c0, vt0.c0 UNION SELECT ALL rt12.c2, rt12.c1, vt0.c1, rt12.c0, vt0.c0 FROM vt0 FULL OUTER JOIN rt12 ON ((((((((((((vt0.c0 COLLATE BINARY)OR(((rt12.c2) NOT BETWEEN (vt0.c0) AND (rt12.c1)))))OR(((vt0.c0) BETWEEN (0.45249285608699297) AND (vt0.c0)))))OR(CAST(rt12.c1 AS BLOB))))OR(CASE rt12.c0  WHEN rt12.c1 THEN rt12.c2 WHEN rt12.c0 THEN rt12.c2 WHEN rt12.c2 THEN vt0.c1 END)))OR(CAST(rt12.c0 AS INTEGER))))OR((NOT (rt12.c2)))) WHERE ((NOT (''))) GROUP BY rt12.c2, rt12.c1, vt0.c1, rt12.c0, vt0.c0 UNION SELECT rt12.c2, rt12.c1, vt0.c1, rt12.c0, vt0.c0 FROM vt0 FULL OUTER JOIN rt12 ON ((((((((((((vt0.c0 COLLATE BINARY)OR(((rt12.c2) NOT BETWEEN (vt0.c0) AND (rt12.c1)))))OR(((vt0.c0) BETWEEN (0.45249285608699297) AND (vt0.c0)))))OR(CAST(rt12.c1 AS BLOB))))OR(CASE rt12.c0  WHEN rt12.c1 THEN rt12.c2 WHEN rt12.c0 THEN rt12.c2 WHEN rt12.c2 THEN vt0.c1 END)))OR(CAST(rt12.c0 AS INTEGER))))OR((NOT (rt12.c2)))) WHERE ((('') ISNULL)) GROUP BY rt12.c2, rt12.c1, vt0.c1, rt12.c0, vt0.c0;
SELECT ALL rt12.c2, rt12.c1, vt0.c1, rt12.c0, vt0.c0 FROM vt0 FULL OUTER JOIN rt12 ON ((((((((((((vt0.c0 COLLATE BINARY)OR(((rt12.c2) NOT BETWEEN (vt0.c0) AND (rt12.c1)))))OR(((vt0.c0) BETWEEN (0.45249285608699297) AND (vt0.c0)))))OR(CAST(rt12.c1 AS BLOB))))OR(CASE rt12.c0  WHEN rt12.c1 THEN rt12.c2 WHEN rt12.c0 THEN rt12.c2 WHEN rt12.c2 THEN vt0.c1 END)))OR(CAST(rt12.c0 AS INTEGER))))OR((NOT (rt12.c2)))) GROUP BY rt12.c2, rt12.c1, vt0.c1, rt12.c0, vt0.c0;
SELECT vt2.c0, rt12.c2, rt12.c1 FROM rt12 INNER JOIN vt0 ON ((json_insert(vt0.c0, rt12.c0, vt0.c1))*(CAST(vt0.c1 AS TEXT))) FULL OUTER JOIN vt1 ON ((((json_object(vt0.c0, vt1.c0))OR(CASE WHEN rt12.c0 THEN vt0.c1 END)))AND((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((rt12.c2))))) INNER JOIN vt2 ON (CAST(vt2.c0 AS TEXT) IN ()) GROUP BY vt2.c0, rt12.c2, rt12.c1;
SELECT ALL vt2.c0, rt12.c2, rt12.c1 FROM rt12 INNER JOIN vt0 ON ((json_insert(vt0.c0, rt12.c0, vt0.c1))*(CAST(vt0.c1 AS TEXT))) FULL OUTER JOIN vt1 ON ((((json_object(vt0.c0, vt1.c0))OR(CASE WHEN rt12.c0 THEN vt0.c1 END)))AND((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((rt12.c2))))) INNER JOIN vt2 ON (CAST(vt2.c0 AS TEXT) IN ()) GROUP BY vt2.c0, rt12.c2, rt12.c1 HAVING GROUP_CONCAT(MIN(COUNT(*)) COLLATE BINARY) UNION ALL SELECT vt2.c0, rt12.c2, rt12.c1 FROM rt12 INNER JOIN vt0 ON ((json_insert(vt0.c0, rt12.c0, vt0.c1))*(CAST(vt0.c1 AS TEXT))) FULL OUTER JOIN vt1 ON ((((json_object(vt0.c0, vt1.c0))OR(CASE WHEN rt12.c0 THEN vt0.c1 END)))AND((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((rt12.c2))))) INNER JOIN vt2 ON (CAST(vt2.c0 AS TEXT) IN ()) GROUP BY vt2.c0, rt12.c2, rt12.c1 HAVING (NOT (GROUP_CONCAT(MIN(COUNT(*)) COLLATE BINARY))) UNION ALL SELECT vt2.c0, rt12.c2, rt12.c1 FROM rt12 INNER JOIN vt0 ON ((json_insert(vt0.c0, rt12.c0, vt0.c1))*(CAST(vt0.c1 AS TEXT))) FULL OUTER JOIN vt1 ON ((((json_object(vt0.c0, vt1.c0))OR(CASE WHEN rt12.c0 THEN vt0.c1 END)))AND((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((rt12.c2))))) INNER JOIN vt2 ON (CAST(vt2.c0 AS TEXT) IN ()) GROUP BY vt2.c0, rt12.c2, rt12.c1 HAVING ((GROUP_CONCAT(MIN(COUNT(*)) COLLATE BINARY)) ISNULL);
SELECT * FROM vt2, vt0 LEFT OUTER JOIN rt12 ON vt2.c0;
SELECT ALL * FROM vt2, vt0 LEFT OUTER JOIN rt12 ON vt2.c0 WHERE (((rt12.c1) ISNULL) COLLATE BINARY) UNION ALL SELECT ALL * FROM vt2, vt0 LEFT OUTER JOIN rt12 ON vt2.c0 WHERE ((NOT (((rt12.c1) ISNULL) COLLATE BINARY))) UNION ALL SELECT * FROM vt2, vt0 LEFT OUTER JOIN rt12 ON vt2.c0 WHERE (((((rt12.c1) ISNULL) COLLATE BINARY) ISNULL));
SELECT * FROM vt2, vt0 LEFT OUTER JOIN rt12 ON vt2.c0;
SELECT DISTINCT * FROM rt12;
SELECT DISTINCT * FROM rt12 WHERE ((+ (rt12.c2))) UNION SELECT DISTINCT * FROM rt12 WHERE ((NOT ((+ (rt12.c2))))) UNION SELECT DISTINCT * FROM rt12 WHERE ((((+ (rt12.c2))) ISNULL));
SELECT DISTINCT * FROM rt12;
SELECT ALL vt0.c1, vt2.c0, rt12.c0, rt12.c2, rt12.c1 FROM rt12, vt2, vt0 GROUP BY vt0.c1, vt2.c0, rt12.c0, rt12.c2, rt12.c1;
SELECT vt0.c1, vt2.c0, rt12.c0, rt12.c2, rt12.c1 FROM rt12, vt2, vt0 NOT INDEXED WHERE (CAST(0.5282372567996532 AS INTEGER)) GROUP BY vt0.c1, vt2.c0, rt12.c0, rt12.c2, rt12.c1 UNION SELECT ALL vt0.c1, vt2.c0, rt12.c0, rt12.c2, rt12.c1 FROM rt12, vt2, vt0 WHERE ((NOT (CAST(0.5282372567996532 AS INTEGER)))) GROUP BY vt0.c1, vt2.c0, rt12.c0, rt12.c2, rt12.c1 UNION SELECT vt0.c1, vt2.c0, rt12.c0, rt12.c2, rt12.c1 FROM rt12, vt2, vt0 WHERE (((CAST(0.5282372567996532 AS INTEGER)) ISNULL)) GROUP BY vt0.c1, vt2.c0, rt12.c0, rt12.c2, rt12.c1;
SELECT ALL vt0.c1, vt2.c0, rt12.c0, rt12.c2, rt12.c1 FROM rt12, vt2, vt0 GROUP BY vt0.c1, vt2.c0, rt12.c0, rt12.c2, rt12.c1;
SELECT ALL vt1.c0, rt12.c0, rt12.c1, vt0.c0 FROM vt0, rt12, vt1, vt2 GROUP BY vt1.c0, rt12.c0, rt12.c1, vt0.c0;
SELECT vt1.c0, rt12.c0, rt12.c1, vt0.c0 FROM vt0, rt12, vt1, vt2 GROUP BY vt1.c0, rt12.c0, rt12.c1, vt0.c0 HAVING NULL UNION ALL SELECT vt1.c0, rt12.c0, rt12.c1, vt0.c0 FROM vt0, rt12, vt1, vt2 GROUP BY vt1.c0, rt12.c0, rt12.c1, vt0.c0 HAVING (NOT (NULL)) UNION ALL SELECT ALL vt1.c0, rt12.c0, rt12.c1, vt0.c0 FROM vt0, rt12, vt1, vt2 GROUP BY vt1.c0, rt12.c0, rt12.c1, vt0.c0 HAVING ((NULL) ISNULL);
SELECT ALL vt1.c0, rt12.c0, rt12.c1, vt0.c0 FROM vt0, rt12, vt1, vt2 GROUP BY vt1.c0, rt12.c0, rt12.c1, vt0.c0;
SELECT vt1.c0, rt12.c0, rt12.c1, vt0.c0 FROM vt0, rt12, vt1, vt2 GROUP BY vt1.c0, rt12.c0, rt12.c1, vt0.c0 HAVING NULL UNION ALL SELECT vt1.c0, rt12.c0, rt12.c1, vt0.c0 FROM vt0, rt12, vt1, vt2 GROUP BY vt1.c0, rt12.c0, rt12.c1, vt0.c0 HAVING (NOT (NULL)) UNION ALL SELECT ALL vt1.c0, rt12.c0, rt12.c1, vt0.c0 FROM vt0, rt12, vt1, vt2 GROUP BY vt1.c0, rt12.c0, rt12.c1, vt0.c0 HAVING ((NULL) ISNULL);
SELECT ALL vt1.c0, rt12.c0, rt12.c1, vt0.c0 FROM vt0, rt12, vt1, vt2 GROUP BY vt1.c0, rt12.c0, rt12.c1, vt0.c0;
SELECT * FROM vt0, vt1, vt2 NOT INDEXED;
SELECT ALL * FROM vt0, vt1, vt2 WHERE (((x'')<=(ROUND(vt1.c0, vt2.c0)))) UNION ALL SELECT * FROM vt0, vt1, vt2 WHERE ((NOT (((x'')<=(ROUND(vt1.c0, vt2.c0)))))) UNION ALL SELECT ALL * FROM vt0, vt1, vt2 WHERE (((((x'')<=(ROUND(vt1.c0, vt2.c0)))) ISNULL));
SELECT * FROM vt0, vt1, vt2 NOT INDEXED;
SELECT DISTINCT * FROM vt1, vt2;
SELECT DISTINCT * FROM vt1, vt2 WHERE (vt1.c0) UNION SELECT DISTINCT * FROM vt1, vt2 WHERE ((NOT (vt1.c0))) UNION SELECT DISTINCT * FROM vt1, vt2 WHERE (((vt1.c0) ISNULL));
SELECT DISTINCT * FROM vt1, vt2;
SELECT ALL rt12.c1, vt0.c0, rt12.c0, vt1.c0, vt2.c0, rt12.c2, vt0.c1 FROM vt2, vt0, vt1, rt12 GROUP BY rt12.c1, vt0.c0, rt12.c0, vt1.c0, vt2.c0, rt12.c2, vt0.c1;
SELECT rt12.c1, vt0.c0, rt12.c0, vt1.c0, vt2.c0, rt12.c2, vt0.c1 FROM vt2, vt0, vt1, rt12 WHERE ((((rt12.c2 IN ()))&(((rt12.c2)==(vt0.c1))))) GROUP BY rt12.c1, vt0.c0, rt12.c0, vt1.c0, vt2.c0, rt12.c2, vt0.c1 UNION SELECT rt12.c1, vt0.c0, rt12.c0, vt1.c0, vt2.c0, rt12.c2, vt0.c1 FROM vt2, vt0, vt1, rt12 WHERE ((NOT ((((rt12.c2 IN ()))&(((rt12.c2)=(vt0.c1))))))) GROUP BY rt12.c1, vt0.c0, rt12.c0, vt1.c0, vt2.c0, rt12.c2, vt0.c1 UNION SELECT rt12.c1, vt0.c0, rt12.c0, vt1.c0, vt2.c0, rt12.c2, vt0.c1 FROM vt2, vt0, vt1, rt12 WHERE ((((((rt12.c2 IN ()))&(((rt12.c2)==(vt0.c1))))) ISNULL)) GROUP BY rt12.c1, vt0.c0, rt12.c0, vt1.c0, vt2.c0, rt12.c2, vt0.c1;
SELECT ALL rt12.c1, vt0.c0, rt12.c0, vt1.c0, vt2.c0, rt12.c2, vt0.c1 FROM vt2, vt0, vt1, rt12 GROUP BY rt12.c1, vt0.c0, rt12.c0, vt1.c0, vt2.c0, rt12.c2, vt0.c1;
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING SUM(TOTAL(GROUP_CONCAT(TOTAL(GROUP_CONCAT(vt0.c0))))) UNION ALL SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING (NOT (SUM(TOTAL(GROUP_CONCAT(TOTAL(GROUP_CONCAT(vt0.c0))))))) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING ((SUM(TOTAL(GROUP_CONCAT(TOTAL(GROUP_CONCAT(vt0.c0)))))) ISNULL);
SELECT vt2.c0 FROM vt2;
SELECT ALL vt2.c0 FROM vt2 WHERE (vt2.c0) UNION ALL SELECT ALL vt2.c0 FROM vt2 WHERE ((NOT (vt2.c0))) UNION ALL SELECT ALL vt2.c0 FROM vt2 WHERE (((vt2.c0) ISNULL));
SELECT vt2.c0 FROM vt2;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE (CASE vt1.c0  WHEN '1583603186' THEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) END) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT (CASE vt1.c0  WHEN '1583603186' THEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) END))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((CASE vt1.c0  WHEN '1583603186' THEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) END) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT ALL rt12.c1, rt12.c0, rt12.c2 FROM rt12 GROUP BY rt12.c1, rt12.c0, rt12.c2;
SELECT ALL rt12.c1, rt12.c0, rt12.c2 FROM rt12 WHERE ((((((rt12.c1)AND('-1299326560')))OR(rt12.c1)) IN ())) GROUP BY rt12.c1, rt12.c0, rt12.c2 UNION SELECT ALL rt12.c1, rt12.c0, rt12.c2 FROM rt12 WHERE ((NOT ((((((rt12.c1)AND('-1299326560')))OR(rt12.c1)) IN ())))) GROUP BY rt12.c1, rt12.c0, rt12.c2 UNION SELECT rt12.c1, rt12.c0, rt12.c2 FROM rt12 WHERE ((((((((rt12.c1)AND('-1299326560')))OR(rt12.c1)) IN ())) ISNULL)) GROUP BY rt12.c1, rt12.c0, rt12.c2;
SELECT ALL rt12.c1, rt12.c0, rt12.c2 FROM rt12 GROUP BY rt12.c1, rt12.c0, rt12.c2;
SELECT rt12.c2, vt0.c0, vt1.c0 FROM vt2, vt1, vt0 FULL OUTER JOIN rt12 ON ((((vt0.c1)>(rt12.c0))) IS FALSE) GROUP BY rt12.c2, vt0.c0, vt1.c0;
SELECT rt12.c2, vt0.c0, vt1.c0 FROM vt2, vt1, vt0 FULL OUTER JOIN rt12 ON ((((vt0.c1)>(rt12.c0))) IS FALSE) GROUP BY rt12.c2, vt0.c0, vt1.c0 HAVING ((GROUP_CONCAT(rt12.c0))<>(TOTAL(SUM(TOTAL(vt2.c0))))) UNION ALL SELECT ALL rt12.c2, vt0.c0, vt1.c0 FROM vt2, vt1, vt0 FULL OUTER JOIN rt12 ON ((((vt0.c1)>(rt12.c0))) IS FALSE) GROUP BY rt12.c2, vt0.c0, vt1.c0 HAVING (NOT (((GROUP_CONCAT(rt12.c0))<>(TOTAL(SUM(TOTAL(vt2.c0))))))) UNION ALL SELECT rt12.c2, vt0.c0, vt1.c0 FROM vt2, vt1, vt0 FULL OUTER JOIN rt12 ON ((((vt0.c1)>(rt12.c0))) IS FALSE) GROUP BY rt12.c2, vt0.c0, vt1.c0 HAVING ((((GROUP_CONCAT(rt12.c0))!=(TOTAL(SUM(TOTAL(vt2.c0)))))) ISNULL);
SELECT MIN(((((((rt12.c1)IS(rt12.c1)))AND(((rt12.c0) NOT BETWEEN (vt1.c0) AND (rt12.c1)))))OR(rt12.c2))) FROM vt0, vt1, rt12;
SELECT ALL * FROM vt0 CROSS JOIN vt1 ON (- (((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c0))));
SELECT ALL * FROM vt0 CROSS JOIN vt1 ON (- (((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c0)))) WHERE ((((('-n') NOTNULL)) BETWEEN (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) AND (vt0.c0 COLLATE BINARY))) UNION ALL SELECT * FROM vt0 CROSS JOIN vt1 ON (- (((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c0)))) WHERE ((NOT ((((('-n') NOTNULL)) BETWEEN (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) AND (vt0.c0 COLLATE BINARY))))) UNION ALL SELECT * FROM vt0 CROSS JOIN vt1 ON (- (((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c0)))) WHERE ((((((('-n') NOTNULL)) BETWEEN (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) AND (vt0.c0 COLLATE BINARY))) ISNULL));
SELECT ALL * FROM vt0 CROSS JOIN vt1 ON (- (((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c0))));
SELECT DISTINCT * FROM vt2;
SELECT DISTINCT * FROM vt2 WHERE (COALESCE(CASE vt2.c0  WHEN vt2.c0 THEN vt2.c0 WHEN vt2.c0 THEN vt2.c0 WHEN vt2.c0 THEN vt2.c0 END, '+NZCG')) UNION SELECT DISTINCT * FROM vt2 WHERE ((NOT (COALESCE(CASE vt2.c0  WHEN vt2.c0 THEN vt2.c0 WHEN vt2.c0 THEN vt2.c0 WHEN vt2.c0 THEN vt2.c0 END, '+NZCG')))) UNION SELECT DISTINCT * FROM vt2 WHERE (((COALESCE(CASE vt2.c0  WHEN vt2.c0 THEN vt2.c0 WHEN vt2.c0 THEN vt2.c0 WHEN vt2.c0 THEN vt2.c0 END, '+NZCG')) ISNULL));
SELECT DISTINCT * FROM vt2;
SELECT vt2.c0, vt0.c1 FROM vt1 CROSS JOIN vt0 ON vt1.c0 LEFT OUTER JOIN vt2 ON 0.5629180587395469 GROUP BY vt2.c0, vt0.c1;
SELECT ALL vt2.c0, vt0.c1 FROM vt1 CROSS JOIN vt0 ON vt1.c0 LEFT OUTER JOIN vt2 ON 0.5629180587395469 WHERE (NULLIF(x'', vt2.c0) COLLATE BINARY) GROUP BY vt2.c0, vt0.c1 UNION SELECT ALL vt2.c0, vt0.c1 FROM vt1 CROSS JOIN vt0 ON vt1.c0 LEFT OUTER JOIN vt2 ON 0.5629180587395469 WHERE ((NOT (NULLIF(x'', vt2.c0) COLLATE BINARY))) GROUP BY vt2.c0, vt0.c1 UNION SELECT vt2.c0, vt0.c1 FROM vt1 CROSS JOIN vt0 ON vt1.c0 LEFT OUTER JOIN vt2 ON 0.5629180587395469 WHERE (((NULLIF(x'', vt2.c0) COLLATE BINARY) ISNULL)) GROUP BY vt2.c0, vt0.c1;
SELECT vt2.c0, vt0.c1 FROM vt1 CROSS JOIN vt0 ON vt1.c0 LEFT OUTER JOIN vt2 ON 0.5629180587395469 GROUP BY vt2.c0, vt0.c1;
SELECT vt2.c0 FROM vt0, vt2, rt12 LEFT OUTER JOIN vt1 ON CASE ((rt12.c1)&(vt0.c1))  WHEN ((vt0.c1) BETWEEN (vt2.c0) AND (vt2.c0)) THEN ((rt12.c1)||(vt1.c0)) ELSE ((vt2.c0)GLOB(vt2.c0)) END GROUP BY vt2.c0;
SELECT vt2.c0 FROM vt0, vt2, rt12 LEFT OUTER JOIN vt1 ON CASE ((rt12.c1)&(vt0.c1))  WHEN ((vt0.c1) BETWEEN (vt2.c0) AND (vt2.c0)) THEN ((rt12.c1)||(vt1.c0)) ELSE ((vt2.c0)GLOB(vt2.c0)) END GROUP BY vt2.c0 HAVING GROUP_CONCAT(SUM(GROUP_CONCAT(COUNT(vt0.c0)))) UNION ALL SELECT ALL vt2.c0 FROM vt0, vt2, rt12 LEFT OUTER JOIN vt1 ON CASE ((rt12.c1)&(vt0.c1))  WHEN ((vt0.c1) BETWEEN (vt2.c0) AND (vt2.c0)) THEN ((rt12.c1)||(vt1.c0)) ELSE ((vt2.c0)GLOB(vt2.c0)) END GROUP BY vt2.c0 HAVING (NOT (GROUP_CONCAT(SUM(GROUP_CONCAT(COUNT(vt0.c0)))))) UNION ALL SELECT vt2.c0 FROM vt0, vt2, rt12 LEFT OUTER JOIN vt1 ON CASE ((rt12.c1)&(vt0.c1))  WHEN ((vt0.c1) BETWEEN (vt2.c0) AND (vt2.c0)) THEN ((rt12.c1)||(vt1.c0)) ELSE ((vt2.c0)GLOB(vt2.c0)) END GROUP BY vt2.c0 HAVING ((GROUP_CONCAT(SUM(GROUP_CONCAT(COUNT(vt0.c0))))) ISNULL);
SELECT ALL vt2.c0, vt0.c1, vt1.c0, vt0.c0 FROM vt2, vt1, vt0;
SELECT ALL vt2.c0, vt0.c1, vt1.c0, vt0.c0 FROM vt2, vt1, vt0 WHERE ((((((vt0.c1)<>(vt2.c0))))>((((vt2.c0)IS(vt0.c1)))))) ORDER BY (((+ (vt0.c1)))>=((vt1.c0 IN (vt0.c1))));
SELECT vt2.c0, vt0.c1, vt1.c0, vt0.c0 FROM vt2, vt1, vt0 WHERE ((NOT ((((((vt0.c1)!=(vt2.c0))))>((((vt2.c0)IS(vt0.c1)))))))) ORDER BY (((+ (vt0.c1)))>=((vt1.c0 IN (vt0.c1))));
SELECT ALL vt2.c0, vt0.c1, vt1.c0, vt0.c0 FROM vt2, vt1, vt0 WHERE ((((((((vt0.c1)<>(vt2.c0))))>((((vt2.c0)IS(vt0.c1)))))) ISNULL)) ORDER BY (((+ (vt0.c1)))>=((vt1.c0 IN (vt0.c1))));
SELECT ALL vt2.c0, vt0.c1, vt1.c0, vt0.c0 FROM vt2, vt1, vt0;
SELECT DISTINCT vt0.c1, vt2.c0, vt1.c0 FROM vt2 INNER JOIN rt12 ON (+ (vt1.c0)) COLLATE BINARY CROSS JOIN vt0 ON ((rt12.c0) BETWEEN (rt12.c1) AND (rt12.c1)) COLLATE RTRIM CROSS JOIN vt1 ON CAST(((((vt0.c1)AND(vt0.c0)))AND(vt0.c0)) AS INTEGER);
SELECT DISTINCT vt0.c1, vt2.c0, vt1.c0 FROM vt2 INNER JOIN rt12 ON (+ (vt1.c0)) COLLATE BINARY CROSS JOIN vt0 ON ((rt12.c0) BETWEEN (rt12.c1) AND (rt12.c1)) COLLATE RTRIM CROSS JOIN vt1 ON CAST(((((vt0.c1)AND(vt0.c0)))AND(vt0.c0)) AS INTEGER) WHERE (vt0.c0) UNION SELECT DISTINCT vt0.c1, vt2.c0, vt1.c0 FROM vt2 INNER JOIN rt12 ON (+ (vt1.c0)) COLLATE BINARY CROSS JOIN vt0 ON ((rt12.c0) BETWEEN (rt12.c1) AND (rt12.c1)) COLLATE RTRIM CROSS JOIN vt1 ON CAST(((((vt0.c1)AND(vt0.c0)))AND(vt0.c0)) AS INTEGER) WHERE ((NOT (vt0.c0))) UNION SELECT DISTINCT vt0.c1, vt2.c0, vt1.c0 FROM vt2 INNER JOIN rt12 ON (+ (vt1.c0)) COLLATE BINARY CROSS JOIN vt0 ON ((rt12.c0) BETWEEN (rt12.c1) AND (rt12.c1)) COLLATE RTRIM CROSS JOIN vt1 ON CAST(((((vt0.c1)AND(vt0.c0)))AND(vt0.c0)) AS INTEGER) WHERE (((vt0.c0) ISNULL));
SELECT DISTINCT vt0.c1, vt2.c0, vt1.c0 FROM vt2 INNER JOIN rt12 ON (+ (vt1.c0)) COLLATE BINARY CROSS JOIN vt0 ON ((rt12.c0) BETWEEN (rt12.c1) AND (rt12.c1)) COLLATE RTRIM CROSS JOIN vt1 ON CAST(((((vt0.c1)AND(vt0.c0)))AND(vt0.c0)) AS INTEGER);
SELECT ALL rt12.c1, vt2.c0 FROM vt1 LEFT OUTER JOIN rt12 ON (((vt2.c0, vt1.c0, rt12.c0))<=((rt12.c1, rt12.c2, rt12.c1))) COLLATE RTRIM COLLATE NOCASE RIGHT OUTER JOIN vt2 ON ((rt12.c0)+(vt1.c0)) COLLATE RTRIM GROUP BY rt12.c1, vt2.c0;
SELECT ALL vt1.c0, vt0.c1, vt0.c0 FROM vt1, vt0, vt2 GROUP BY vt1.c0, vt0.c1, vt0.c0;
SELECT ALL vt1.c0, vt0.c1, vt0.c0 FROM vt1, vt0, vt2 GROUP BY vt1.c0, vt0.c1, vt0.c0 HAVING MIN(AVG(MAX(COUNT(COUNT(COUNT(TOTAL(GROUP_CONCAT(vt0.c1)))))))) UNION ALL SELECT ALL vt1.c0, vt0.c1, vt0.c0 FROM vt1, vt0, vt2 GROUP BY vt1.c0, vt0.c1, vt0.c0 HAVING (NOT (MIN(AVG(MAX(COUNT(COUNT(COUNT(TOTAL(GROUP_CONCAT(vt0.c1)))))))))) UNION ALL SELECT vt1.c0, vt0.c1, vt0.c0 FROM vt1, vt0, vt2 GROUP BY vt1.c0, vt0.c1, vt0.c0 HAVING ((MIN(AVG(MAX(COUNT(COUNT(COUNT(TOTAL(GROUP_CONCAT(vt0.c1))))))))) ISNULL);
SELECT vt0.c0, rt12.c2, vt0.c1, vt2.c0 FROM vt2 RIGHT OUTER JOIN rt12 ON ((((CAST(vt0.c1 AS NUMERIC))OR(CAST(vt0.c0 AS NUMERIC))))AND(((((((((vt2.c0)OR(rt12.c2)))OR(rt12.c0)))OR(vt0.c0)))AND(vt2.c0)))) INNER JOIN vt0 ON ((((CAST(rt12.c0 AS NUMERIC))OR(((rt12.c1) NOT BETWEEN ('X)Da%Kb-]') AND (rt12.c0)))))OR(rt12.c0));
SELECT DISTINCT * FROM rt12, vt1, vt2, vt0;
SELECT DISTINCT * FROM rt12, vt1, vt2, vt0 WHERE ((((- (vt2.c0)))%(((rt12.c0)+(vt0.c1))))) UNION SELECT DISTINCT * FROM rt12, vt1, vt2, vt0 WHERE ((NOT ((((- (vt2.c0)))%(((rt12.c0)+(vt0.c1))))))) UNION SELECT DISTINCT * FROM rt12, vt1, vt2, vt0 WHERE ((((((- (vt2.c0)))%(((rt12.c0)+(vt0.c1))))) ISNULL));
SELECT DISTINCT * FROM rt12, vt1, vt2, vt0;
SELECT ALL vt2.c0, rt12.c1, rt12.c0, vt0.c0, rt12.c2 FROM vt1, vt0 LEFT OUTER JOIN rt12 ON ((CASE WHEN vt0.c0 THEN rt12.c2 END) IS FALSE) FULL OUTER JOIN vt2 ON 0.8279702783839803 GROUP BY vt2.c0, rt12.c1, rt12.c0, vt0.c0, rt12.c2;
SELECT vt2.c0, rt12.c1, rt12.c0, vt0.c0, rt12.c2 FROM vt1, vt0 LEFT OUTER JOIN rt12 ON ((CASE WHEN vt0.c0 THEN rt12.c2 END) IS FALSE) FULL OUTER JOIN vt2 ON 0.8279702783839803 WHERE (((vt0.c0)>=(vt2.c0)) COLLATE NOCASE) GROUP BY vt2.c0, rt12.c1, rt12.c0, vt0.c0, rt12.c2 UNION SELECT ALL vt2.c0, rt12.c1, rt12.c0, vt0.c0, rt12.c2 FROM vt1, vt0 LEFT OUTER JOIN rt12 ON ((CASE WHEN vt0.c0 THEN rt12.c2 END) IS FALSE) FULL OUTER JOIN vt2 ON 0.8279702783839803 WHERE ((NOT (((vt0.c0)>=(vt2.c0)) COLLATE NOCASE))) GROUP BY vt2.c0, rt12.c1, rt12.c0, vt0.c0, rt12.c2 UNION SELECT ALL vt2.c0, rt12.c1, rt12.c0, vt0.c0, rt12.c2 FROM vt1, vt0 LEFT OUTER JOIN rt12 ON ((CASE WHEN vt0.c0 THEN rt12.c2 END) IS FALSE) FULL OUTER JOIN vt2 ON 0.8279702783839803 WHERE (((((vt0.c0)>=(vt2.c0)) COLLATE NOCASE) ISNULL)) GROUP BY vt2.c0, rt12.c1, rt12.c0, vt0.c0, rt12.c2;
SELECT ALL vt2.c0, rt12.c1, rt12.c0, vt0.c0, rt12.c2 FROM vt1, vt0 LEFT OUTER JOIN rt12 ON ((CASE WHEN vt0.c0 THEN rt12.c2 END) IS FALSE) FULL OUTER JOIN vt2 ON 0.8279702783839803 GROUP BY vt2.c0, rt12.c1, rt12.c0, vt0.c0, rt12.c2;
SELECT ALL vt1.c0 FROM vt2, rt12, vt0, vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt2, rt12, vt0, vt1 GROUP BY vt1.c0 HAVING ((rt12.c2)|(rt12.c1)) COLLATE RTRIM UNION ALL SELECT ALL vt1.c0 FROM vt2, rt12, vt0, vt1 GROUP BY vt1.c0 HAVING (NOT (((rt12.c2)|(rt12.c1)) COLLATE RTRIM)) UNION ALL SELECT vt1.c0 FROM vt2, rt12, vt0, vt1 GROUP BY vt1.c0 HAVING ((((rt12.c2)|(rt12.c1)) COLLATE RTRIM) ISNULL);
SELECT ALL vt1.c0 FROM vt2, rt12, vt0, vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt2, rt12, vt0, vt1 GROUP BY vt1.c0 HAVING ((rt12.c2)|(rt12.c1)) COLLATE RTRIM UNION ALL SELECT ALL vt1.c0 FROM vt2, rt12, vt0, vt1 GROUP BY vt1.c0 HAVING (NOT (((rt12.c2)|(rt12.c1)) COLLATE RTRIM)) UNION ALL SELECT vt1.c0 FROM vt2, rt12, vt0, vt1 GROUP BY vt1.c0 HAVING ((((rt12.c2)|(rt12.c1)) COLLATE RTRIM) ISNULL);
SELECT ALL vt1.c0 FROM vt2, rt12, vt0, vt1 GROUP BY vt1.c0;
SELECT ALL rt12.c0, vt2.c0, vt0.c0, rt12.c1, rt12.c2, vt0.c1 FROM vt2, vt1 LEFT OUTER JOIN vt0 ON IFNULL((NOT (vt0.c0)), (NOT (rt12.c1))) INNER JOIN rt12 ON ((((vt0.c0)OR(vt2.c0)))AND(vt2.c0)) COLLATE RTRIM;
SELECT DISTINCT rt12.c2, rt12.c0 FROM rt12;
SELECT DISTINCT rt12.c2, rt12.c0 FROM rt12 WHERE (CASE ((rt12.c2)OR(rt12.c2))  WHEN CAST(x'' AS INTEGER) THEN ((rt12.c2)LIKE(rt12.c2)) END) UNION SELECT DISTINCT rt12.c2, rt12.c0 FROM rt12 WHERE ((NOT (CASE ((rt12.c2)OR(rt12.c2))  WHEN CAST(x'' AS INTEGER) THEN ((rt12.c2)LIKE(rt12.c2)) END))) UNION SELECT DISTINCT rt12.c2, rt12.c0 FROM rt12 WHERE (((CASE ((rt12.c2)OR(rt12.c2))  WHEN CAST(x'' AS INTEGER) THEN ((rt12.c2)LIKE(rt12.c2)) END) ISNULL));
SELECT DISTINCT rt12.c2, rt12.c0 FROM rt12;
SELECT ALL rt12.c2, rt12.c0, rt12.c1 FROM rt12 GROUP BY rt12.c2, rt12.c0, rt12.c1;
SELECT ALL rt12.c2, rt12.c0, rt12.c1 FROM rt12 WHERE (NULL) GROUP BY rt12.c2, rt12.c0, rt12.c1 UNION SELECT rt12.c2, rt12.c0, rt12.c1 FROM rt12 WHERE ((NOT (NULL))) GROUP BY rt12.c2, rt12.c0, rt12.c1 UNION SELECT ALL rt12.c2, rt12.c0, rt12.c1 FROM rt12 WHERE (((NULL) ISNULL)) GROUP BY rt12.c2, rt12.c0, rt12.c1;
SELECT ALL rt12.c2, rt12.c0, rt12.c1 FROM rt12 GROUP BY rt12.c2, rt12.c0, rt12.c1;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING COUNT((((vt0.c0))<((vt0.c1)))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT((((vt0.c0))<((vt0.c1)))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT((((vt0.c0))<((vt0.c1))))) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING COUNT((((vt0.c0))<((vt0.c1)))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT((((vt0.c0))<((vt0.c1)))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT((((vt0.c0))<((vt0.c1))))) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0, vt1.c0, vt2.c0, vt0.c1, rt12.c0 FROM vt1, vt2, rt12, vt0;
SELECT ALL vt0.c0, vt1.c0, vt2.c0, vt0.c1, rt12.c0 FROM vt1, vt2, rt12, vt0 WHERE (vt0.c0) UNION ALL SELECT vt0.c0, vt1.c0, vt2.c0, vt0.c1, rt12.c0 FROM vt1, vt2, rt12, vt0 WHERE ((NOT (vt0.c0))) UNION ALL SELECT vt0.c0, vt1.c0, vt2.c0, vt0.c1, rt12.c0 FROM vt1, vt2, rt12, vt0 WHERE (((vt0.c0) ISNULL));
SELECT vt0.c0, vt1.c0, vt2.c0, vt0.c1, rt12.c0 FROM vt1, vt2, rt12, vt0;
SELECT DISTINCT vt0.c1, vt0.c0, vt2.c0, rt12.c1 FROM vt0 RIGHT OUTER JOIN vt2 ON (((((rt12.c0))=((vt0.c0))))-(vt2.c0 COLLATE RTRIM)) INNER JOIN rt12 ON rt12.c1;
SELECT ALL rt12.c1, vt0.c0, vt1.c0, vt0.c1, rt12.c2 FROM rt12, vt1, vt0 RIGHT OUTER JOIN vt2 ON ((rt12.c1 IN ()) IN ()) GROUP BY rt12.c1, vt0.c0, vt1.c0, vt0.c1, rt12.c2;
SELECT rt12.c1, vt0.c0, vt1.c0, vt0.c1, rt12.c2 FROM rt12, vt1, vt0 RIGHT OUTER JOIN vt2 ON ((rt12.c1 IN ()) IN ()) WHERE (((CASE WHEN 0.9448910268281527 THEN rt12.c1 WHEN vt0.c1 THEN rt12.c2 WHEN vt0.c0 THEN vt0.c0 END)AND(((((rt12.c2)AND(rt12.c1)))AND(rt12.c1))))) GROUP BY rt12.c1, vt0.c0, vt1.c0, vt0.c1, rt12.c2 UNION SELECT rt12.c1, vt0.c0, vt1.c0, vt0.c1, rt12.c2 FROM rt12, vt1, vt0 RIGHT OUTER JOIN vt2 ON ((rt12.c1 IN ()) IN ()) WHERE ((NOT (((CASE WHEN 0.9448910268281527 THEN rt12.c1 WHEN vt0.c1 THEN rt12.c2 WHEN vt0.c0 THEN vt0.c0 END)AND(((((rt12.c2)AND(rt12.c1)))AND(rt12.c1))))))) GROUP BY rt12.c1, vt0.c0, vt1.c0, vt0.c1, rt12.c2 UNION SELECT rt12.c1, vt0.c0, vt1.c0, vt0.c1, rt12.c2 FROM rt12, vt1, vt0 RIGHT OUTER JOIN vt2 ON ((rt12.c1 IN ()) IN ()) WHERE (((((CASE WHEN 0.9448910268281527 THEN rt12.c1 WHEN vt0.c1 THEN rt12.c2 WHEN vt0.c0 THEN vt0.c0 END)AND(((((rt12.c2)AND(rt12.c1)))AND(rt12.c1))))) ISNULL)) GROUP BY rt12.c1, vt0.c0, vt1.c0, vt0.c1, rt12.c2;
SELECT ALL rt12.c1, vt0.c0, vt1.c0, vt0.c1, rt12.c2 FROM rt12, vt1, vt0 RIGHT OUTER JOIN vt2 ON ((rt12.c1 IN ()) IN ()) GROUP BY rt12.c1, vt0.c0, vt1.c0, vt0.c1, rt12.c2;
SELECT vt0.c0, vt1.c0, rt12.c2, vt2.c0 FROM rt12, vt0 RIGHT OUTER JOIN vt1 ON (((((rt12.c1, vt1.c0, vt0.c1))>=((rt12.c2, rt12.c2, rt12.c2)))) NOTNULL) LEFT OUTER JOIN vt2 ON (- (((x'') BETWEEN (vt2.c0) AND (rt12.c2)))) GROUP BY vt0.c0, vt1.c0, rt12.c2, vt2.c0;
SELECT vt0.c0, vt1.c0, rt12.c2, vt2.c0 FROM rt12, vt0 RIGHT OUTER JOIN vt1 ON (((((rt12.c1, vt1.c0, vt0.c1))>=((rt12.c2, rt12.c2, rt12.c2)))) NOTNULL) LEFT OUTER JOIN vt2 ON (- (((x'') BETWEEN (vt2.c0) AND (rt12.c2)))) GROUP BY vt0.c0, vt1.c0, rt12.c2, vt2.c0 HAVING TOTAL(AVG(vt2.c0)) UNION ALL SELECT ALL vt0.c0, vt1.c0, rt12.c2, vt2.c0 FROM rt12, vt0 RIGHT OUTER JOIN vt1 ON (((((rt12.c1, vt1.c0, vt0.c1))>=((rt12.c2, rt12.c2, rt12.c2)))) NOTNULL) LEFT OUTER JOIN vt2 ON (- (((x'') BETWEEN (vt2.c0) AND (rt12.c2)))) GROUP BY vt0.c0, vt1.c0, rt12.c2, vt2.c0 HAVING (NOT (TOTAL(AVG(vt2.c0)))) UNION ALL SELECT vt0.c0, vt1.c0, rt12.c2, vt2.c0 FROM rt12, vt0 RIGHT OUTER JOIN vt1 ON (((((rt12.c1, vt1.c0, vt0.c1))>=((rt12.c2, rt12.c2, rt12.c2)))) NOTNULL) LEFT OUTER JOIN vt2 ON (- (((x'') BETWEEN (vt2.c0) AND (rt12.c2)))) GROUP BY vt0.c0, vt1.c0, rt12.c2, vt2.c0 HAVING ((TOTAL(AVG(vt2.c0))) ISNULL);
SELECT rt12.c2, vt2.c0, rt12.c0 FROM rt12 RIGHT OUTER JOIN vt2 ON ((((((((((rt12.c2) BETWEEN ('-1734351901') AND (vt2.c0)))OR(((vt2.c0)<=(vt2.c0)))))AND(((rt12.c2) BETWEEN (rt12.c0) AND (rt12.c2)))))AND(x'' COLLATE NOCASE)))AND(((rt12.c2)<<(rt12.c0))));
SELECT ALL rt12.c2, vt2.c0, rt12.c0 FROM rt12 RIGHT OUTER JOIN vt2 ON ((((((((((rt12.c2) BETWEEN ('-1734351901') AND (vt2.c0)))OR(((vt2.c0)<=(vt2.c0)))))AND(((rt12.c2) BETWEEN (rt12.c0) AND (rt12.c2)))))AND(x'' COLLATE NOCASE)))AND(((rt12.c2)<<(rt12.c0)))) WHERE ((CASE vt2.c0  WHEN rt12.c2 THEN rt12.c2 ELSE vt2.c0 END IN ())) UNION ALL SELECT ALL rt12.c2, vt2.c0, rt12.c0 FROM rt12 RIGHT OUTER JOIN vt2 ON ((((((((((rt12.c2) BETWEEN ('-1734351901') AND (vt2.c0)))OR(((vt2.c0)<=(vt2.c0)))))AND(((rt12.c2) BETWEEN (rt12.c0) AND (rt12.c2)))))AND(x'' COLLATE NOCASE)))AND(((rt12.c2)<<(rt12.c0)))) WHERE ((NOT ((CASE vt2.c0  WHEN rt12.c2 THEN rt12.c2 ELSE vt2.c0 END IN ())))) UNION ALL SELECT rt12.c2, vt2.c0, rt12.c0 FROM rt12 RIGHT OUTER JOIN vt2 ON ((((((((((rt12.c2) BETWEEN ('-1734351901') AND (vt2.c0)))OR(((vt2.c0)<=(vt2.c0)))))AND(((rt12.c2) BETWEEN (rt12.c0) AND (rt12.c2)))))AND(x'' COLLATE NOCASE)))AND(((rt12.c2)<<(rt12.c0)))) WHERE ((((CASE vt2.c0  WHEN rt12.c2 THEN rt12.c2 ELSE vt2.c0 END IN ())) ISNULL));
SELECT rt12.c2, vt2.c0, rt12.c0 FROM rt12 RIGHT OUTER JOIN vt2 ON ((((((((((rt12.c2) BETWEEN ('-1734351901') AND (vt2.c0)))OR(((vt2.c0)<=(vt2.c0)))))AND(((rt12.c2) BETWEEN (rt12.c0) AND (rt12.c2)))))AND(x'' COLLATE NOCASE)))AND(((rt12.c2)<<(rt12.c0))));
SELECT DISTINCT * FROM rt12, vt1, vt2, vt0;
SELECT DISTINCT * FROM rt12, vt1, vt2, vt0 WHERE (SQLITE_VERSION()) UNION SELECT DISTINCT * FROM rt12, vt1, vt2, vt0 WHERE ((NOT (SQLITE_VERSION()))) UNION SELECT DISTINCT * FROM rt12, vt1, vt2, vt0 WHERE (((SQLITE_VERSION()) ISNULL));
SELECT DISTINCT * FROM rt12, vt1, vt2, vt0;
SELECT rt12.c0 FROM rt12 GROUP BY rt12.c0;
SELECT ALL rt12.c0 FROM rt12 WHERE (rt12.c0) GROUP BY rt12.c0 UNION SELECT rt12.c0 FROM rt12 WHERE ((NOT (rt12.c0))) GROUP BY rt12.c0 UNION SELECT rt12.c0 FROM rt12 WHERE (((rt12.c0) ISNULL)) GROUP BY rt12.c0;
SELECT rt12.c0 FROM rt12 GROUP BY rt12.c0;
SELECT ALL rt12.c1, vt0.c1 FROM rt12, vt1, vt0 GROUP BY rt12.c1, vt0.c1;
SELECT ALL rt12.c1, vt0.c1 FROM rt12, vt1, vt0 GROUP BY rt12.c1, vt0.c1 HAVING ((((vt0.c0) IS FALSE)) BETWEEN (TOTAL(MAX(rt12.c2))) AND (SUM(SUM(MAX(SUM(MIN(TOTAL(vt0.c1)))))))) UNION ALL SELECT ALL rt12.c1, vt0.c1 FROM rt12, vt1, vt0 GROUP BY rt12.c1, vt0.c1 HAVING (NOT (((((vt0.c0) IS FALSE)) BETWEEN (TOTAL(MAX(rt12.c2))) AND (SUM(SUM(MAX(SUM(MIN(TOTAL(vt0.c1)))))))))) UNION ALL SELECT rt12.c1, vt0.c1 FROM rt12, vt1, vt0 GROUP BY rt12.c1, vt0.c1 HAVING ((((((vt0.c0) IS FALSE)) BETWEEN (TOTAL(MAX(rt12.c2))) AND (SUM(SUM(MAX(SUM(MIN(TOTAL(vt0.c1))))))))) ISNULL);
SELECT * FROM vt0, vt1, vt2;
SELECT ALL * FROM vt0, vt1, vt2 WHERE (CASE NULL  WHEN vt0.c1 COLLATE RTRIM THEN ((vt2.c0)<(vt0.c0)) WHEN vt0.c1 THEN vt2.c0 WHEN (- (vt1.c0)) THEN CASE vt2.c0  WHEN vt1.c0 THEN vt0.c1 END WHEN ((((vt1.c0)AND(x'6758')))OR(vt0.c1)) THEN (vt1.c0 IN (vt0.c1)) WHEN (vt1.c0 IN ()) THEN ((((vt1.c0)OR(vt1.c0)))AND(vt2.c0)) ELSE (+ (vt0.c0)) END) UNION ALL SELECT * FROM vt0, vt1, vt2 WHERE ((NOT (CASE NULL  WHEN vt0.c1 COLLATE RTRIM THEN ((vt2.c0)<(vt0.c0)) WHEN vt0.c1 THEN vt2.c0 WHEN (- (vt1.c0)) THEN CASE vt2.c0  WHEN vt1.c0 THEN vt0.c1 END WHEN ((((vt1.c0)AND(x'6758')))OR(vt0.c1)) THEN (vt1.c0 IN (vt0.c1)) WHEN (vt1.c0 IN ()) THEN ((((vt1.c0)OR(vt1.c0)))AND(vt2.c0)) ELSE (+ (vt0.c0)) END))) UNION ALL SELECT * FROM vt0, vt1, vt2 WHERE (((CASE NULL  WHEN vt0.c1 COLLATE RTRIM THEN ((vt2.c0)<(vt0.c0)) WHEN vt0.c1 THEN vt2.c0 WHEN (- (vt1.c0)) THEN CASE vt2.c0  WHEN vt1.c0 THEN vt0.c1 END WHEN ((((vt1.c0)AND(x'6758')))OR(vt0.c1)) THEN (vt1.c0 IN (vt0.c1)) WHEN (vt1.c0 IN ()) THEN ((((vt1.c0)OR(vt1.c0)))AND(vt2.c0)) ELSE (+ (vt0.c0)) END) ISNULL));
SELECT * FROM vt0, vt1, vt2;
SELECT DISTINCT vt0.c1 FROM vt0;
SELECT DISTINCT vt0.c1 FROM vt0 WHERE (((vt0.c0) NOT BETWEEN (((vt0.c1)-(vt0.c0))) AND (((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1))))) UNION SELECT DISTINCT vt0.c1 FROM vt0 WHERE ((NOT (((vt0.c0) NOT BETWEEN (((vt0.c1)-(vt0.c0))) AND (((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1))))))) UNION SELECT DISTINCT vt0.c1 FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (((vt0.c1)-(vt0.c0))) AND (((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1))))) ISNULL));
SELECT DISTINCT vt0.c1 FROM vt0;
SELECT vt0.c1, vt0.c0 FROM vt0, vt1, rt12 GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0, vt1, rt12 WHERE ((((((vt0.c0)OR(rt12.c1)))AND(rt12.c2)) IN ())) GROUP BY vt0.c1, vt0.c0 UNION SELECT ALL vt0.c1, vt0.c0 FROM vt0, vt1, rt12 WHERE ((NOT ((((((vt0.c0)OR(rt12.c1)))AND(rt12.c2)) IN ())))) GROUP BY vt0.c1, vt0.c0 UNION SELECT vt0.c1, vt0.c0 FROM vt0, vt1, rt12 WHERE ((((((((vt0.c0)OR(rt12.c1)))AND(rt12.c2)) IN ())) ISNULL)) GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0, vt1, rt12 GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt2.c0, vt1.c0, vt0.c0, vt0.c1 FROM vt2, vt1, vt0 GROUP BY vt2.c0, vt1.c0, vt0.c0, vt0.c1;
SELECT ALL vt2.c0, vt1.c0, vt0.c0, vt0.c1 FROM vt2, vt1, vt0 GROUP BY vt2.c0, vt1.c0, vt0.c0, vt0.c1 HAVING GROUP_CONCAT(-183835116) UNION ALL SELECT ALL vt2.c0, vt1.c0, vt0.c0, vt0.c1 FROM vt2, vt1, vt0 GROUP BY vt2.c0, vt1.c0, vt0.c0, vt0.c1 HAVING (NOT (GROUP_CONCAT(-183835116))) UNION ALL SELECT vt2.c0, vt1.c0, vt0.c0, vt0.c1 FROM vt2, vt1, vt0 GROUP BY vt2.c0, vt1.c0, vt0.c0, vt0.c1 HAVING ((GROUP_CONCAT(-183835116)) ISNULL);
SELECT ALL vt2.c0, vt1.c0, vt0.c0, vt0.c1 FROM vt2, vt1, vt0 GROUP BY vt2.c0, vt1.c0, vt0.c0, vt0.c1;
SELECT ALL vt2.c0, vt1.c0, vt0.c0, vt0.c1 FROM vt2, vt1, vt0 GROUP BY vt2.c0, vt1.c0, vt0.c0, vt0.c1 HAVING GROUP_CONCAT(-183835116) UNION ALL SELECT ALL vt2.c0, vt1.c0, vt0.c0, vt0.c1 FROM vt2, vt1, vt0 GROUP BY vt2.c0, vt1.c0, vt0.c0, vt0.c1 HAVING (NOT (GROUP_CONCAT(-183835116))) UNION ALL SELECT vt2.c0, vt1.c0, vt0.c0, vt0.c1 FROM vt2, vt1, vt0 GROUP BY vt2.c0, vt1.c0, vt0.c0, vt0.c1 HAVING ((GROUP_CONCAT(-183835116)) ISNULL);
SELECT ALL vt2.c0, vt1.c0, vt0.c0, vt0.c1 FROM vt2, vt1, vt0 GROUP BY vt2.c0, vt1.c0, vt0.c0, vt0.c1;
SELECT ALL * FROM vt0, rt12, vt1, vt2;
SELECT * FROM vt0, rt12, vt1, vt2 WHERE (((((((vt0.c0)OR(vt2.c0)))AND(rt12.c2)))||((((rt12.c0))<>((vt0.c0)))))) UNION ALL SELECT * FROM vt0, rt12, vt1, vt2 WHERE ((NOT (((((((vt0.c0)OR(vt2.c0)))AND(rt12.c2)))||((((rt12.c0))<>((vt0.c0)))))))) UNION ALL SELECT * FROM vt0, rt12, vt1, vt2 WHERE (((((((((vt0.c0)OR(vt2.c0)))AND(rt12.c2)))||((((rt12.c0))<>((vt0.c0)))))) ISNULL));
SELECT ALL * FROM vt0, rt12, vt1, vt2;
SELECT DISTINCT * FROM vt1, rt12, vt0, vt2;
SELECT DISTINCT * FROM vt1, rt12, vt0, vt2 WHERE (((CAST(vt1.c0 AS TEXT))=((+ (vt0.c0))))) UNION SELECT DISTINCT * FROM vt1, rt12, vt0, vt2 WHERE ((NOT (((CAST(vt1.c0 AS TEXT))=((+ (vt0.c0))))))) UNION SELECT DISTINCT * FROM vt1, rt12, vt0, vt2 WHERE (((((CAST(vt1.c0 AS TEXT))==((+ (vt0.c0))))) ISNULL));
SELECT DISTINCT * FROM vt1, rt12, vt0, vt2;
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0 WHERE (0X707bc9d) GROUP BY vt0.c1 UNION SELECT vt0.c1 FROM vt0 WHERE ((NOT (0X707bc9d))) GROUP BY vt0.c1 UNION SELECT vt0.c1 FROM vt0 WHERE (((0x707bc9d) ISNULL)) GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING (((vt2.c0))=((((vt2.c0) NOT BETWEEN (vt2.c0) AND (vt2.c0))))) UNION ALL SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING (NOT ((((vt2.c0))==((((vt2.c0) NOT BETWEEN (vt2.c0) AND (vt2.c0))))))) UNION ALL SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING (((((vt2.c0))==((((vt2.c0) NOT BETWEEN (vt2.c0) AND (vt2.c0)))))) ISNULL);
SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING (((vt2.c0))=((((vt2.c0) NOT BETWEEN (vt2.c0) AND (vt2.c0))))) UNION ALL SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING (NOT ((((vt2.c0))==((((vt2.c0) NOT BETWEEN (vt2.c0) AND (vt2.c0))))))) UNION ALL SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING (((((vt2.c0))==((((vt2.c0) NOT BETWEEN (vt2.c0) AND (vt2.c0)))))) ISNULL);
SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT ALL vt1.c0, vt0.c1, rt12.c0, vt2.c0, vt0.c0, rt12.c1 FROM vt2 CROSS JOIN vt1 ON CAST(((vt1.c0) NOT BETWEEN (rt12.c0) AND (vt0.c1)) AS TEXT) LEFT OUTER JOIN rt12 ON CASE WHEN (((vt2.c0))==((rt12.c0))) THEN ((rt12.c0) BETWEEN (vt2.c0) AND (vt0.c0)) WHEN (vt0.c1 IN (vt0.c0, rt12.c0)) THEN 0.5041267941826518 WHEN ((((rt12.c0)AND(vt2.c0)))AND(vt0.c0)) THEN CAST(vt0.c0 AS REAL) WHEN (((vt0.c0, rt12.c1, vt2.c0))<((vt2.c0, vt0.c1, 0.49662839166506456))) THEN load_extension(vt0.c0, rt12.c2) WHEN LENGTH(vt1.c0) THEN json_remove(vt1.c0, x'054f', vt0.c0, vt0.c1) ELSE ((0.5442716865999735)>(NULL)) END LEFT OUTER JOIN vt0 ON LIKELY(0.952656359943474);
SELECT DISTINCT * FROM rt12;
SELECT DISTINCT * FROM rt12 WHERE (rt12.c0) UNION SELECT DISTINCT * FROM rt12 WHERE ((NOT (rt12.c0))) UNION SELECT DISTINCT * FROM rt12 WHERE (((rt12.c0) ISNULL));
SELECT DISTINCT * FROM rt12;
SELECT rt12.c1, rt12.c2, vt2.c0, rt12.c0 FROM rt12, vt1 INNER JOIN vt2 ON vt1.c0 COLLATE BINARY GROUP BY rt12.c1, rt12.c2, vt2.c0, rt12.c0;
SELECT ALL rt12.c1, rt12.c2, vt2.c0, rt12.c0 FROM rt12, vt1 INNER JOIN vt2 ON vt1.c0 COLLATE BINARY WHERE (rt12.c2) GROUP BY rt12.c1, rt12.c2, vt2.c0, rt12.c0 UNION SELECT ALL rt12.c1, rt12.c2, vt2.c0, rt12.c0 FROM rt12, vt1 INNER JOIN vt2 ON vt1.c0 COLLATE BINARY WHERE ((NOT (rt12.c2))) GROUP BY rt12.c1, rt12.c2, vt2.c0, rt12.c0 UNION SELECT rt12.c1, rt12.c2, vt2.c0, rt12.c0 FROM rt12, vt1 INNER JOIN vt2 ON vt1.c0 COLLATE BINARY WHERE (((rt12.c2) ISNULL)) GROUP BY rt12.c1, rt12.c2, vt2.c0, rt12.c0;
SELECT rt12.c1, rt12.c2, vt2.c0, rt12.c0 FROM rt12, vt1 INNER JOIN vt2 ON vt1.c0 COLLATE BINARY GROUP BY rt12.c1, rt12.c2, vt2.c0, rt12.c0;
SELECT vt2.c0 FROM vt0, vt2, rt12 GROUP BY vt2.c0;
SELECT vt2.c0 FROM vt0, vt2, rt12 GROUP BY vt2.c0 HAVING (((MIN(vt2.c0) IN (NULL))) ISNULL) UNION ALL SELECT ALL vt2.c0 FROM vt0, vt2, rt12 GROUP BY vt2.c0 HAVING (NOT ((((MIN(vt2.c0) IN (NULL))) ISNULL))) UNION ALL SELECT ALL vt2.c0 FROM vt0, vt2, rt12 GROUP BY vt2.c0 HAVING (((((MIN(vt2.c0) IN (NULL))) ISNULL)) ISNULL);
SELECT vt2.c0 FROM vt0, vt2, rt12 GROUP BY vt2.c0;
SELECT vt2.c0 FROM vt0, vt2, rt12 GROUP BY vt2.c0 HAVING (((MIN(vt2.c0) IN (NULL))) ISNULL) UNION ALL SELECT ALL vt2.c0 FROM vt0, vt2, rt12 GROUP BY vt2.c0 HAVING (NOT ((((MIN(vt2.c0) IN (NULL))) ISNULL))) UNION ALL SELECT ALL vt2.c0 FROM vt0, vt2, rt12 GROUP BY vt2.c0 HAVING (((((MIN(vt2.c0) IN (NULL))) ISNULL)) ISNULL);
SELECT vt2.c0 FROM vt0, vt2, rt12 GROUP BY vt2.c0;
SELECT ALL * FROM vt2, rt12, vt0, vt1;
SELECT * FROM vt2, rt12, vt0, vt1 WHERE (((TRIM(vt1.c0, rt12.c0))<(rt12.c2))) UNION ALL SELECT * FROM vt2, rt12, vt0, vt1 WHERE ((NOT (((TRIM(vt1.c0, rt12.c0))<(rt12.c2))))) UNION ALL SELECT ALL * FROM vt2, rt12, vt0, vt1 WHERE (((((TRIM(vt1.c0, rt12.c0))<(rt12.c2))) ISNULL));
SELECT ALL * FROM vt2, rt12, vt0, vt1;
SELECT DISTINCT vt2.c0 FROM vt2;
SELECT DISTINCT vt2.c0 FROM vt2 WHERE (((CASE WHEN vt2.c0 THEN vt2.c0 ELSE vt2.c0 END) NOT BETWEEN ((vt2.c0 IN ())) AND (0xffffffffecfc77e9))) UNION SELECT DISTINCT vt2.c0 FROM vt2 WHERE ((NOT (((CASE WHEN vt2.c0 THEN vt2.c0 ELSE vt2.c0 END) NOT BETWEEN ((vt2.c0 IN ())) AND (0Xffffffffecfc77e9))))) UNION SELECT DISTINCT vt2.c0 FROM vt2 NOT INDEXED WHERE (((((CASE WHEN vt2.c0 THEN vt2.c0 ELSE vt2.c0 END) NOT BETWEEN ((vt2.c0 IN ())) AND (0xffffffffecfc77e9))) ISNULL));
SELECT DISTINCT vt2.c0 FROM vt2;
SELECT ALL vt1.c0 FROM vt2, vt1, vt0 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt2, vt1, vt0 WHERE (HEX(DISTINCT COALESCE(DISTINCT NULL, NULL, vt0.c1, vt0.c1))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt2, vt1, vt0 WHERE ((NOT (HEX(DISTINCT COALESCE(DISTINCT NULL, NULL, vt0.c1, vt0.c1))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt2, vt1, vt0 WHERE (((HEX(DISTINCT COALESCE(DISTINCT NULL, NULL, vt0.c1, vt0.c1))) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt2, vt1, vt0 GROUP BY vt1.c0;
SELECT vt0.c1 FROM vt2, rt12, vt0 GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt2, rt12, vt0 GROUP BY vt0.c1 HAVING CASE WHEN MAX(vt0.c1) THEN GROUP_CONCAT(x'') COLLATE NOCASE END UNION ALL SELECT vt0.c1 FROM vt2, rt12, vt0 GROUP BY vt0.c1 HAVING (NOT (CASE WHEN MAX(vt0.c1) THEN GROUP_CONCAT(x'') COLLATE NOCASE END)) UNION ALL SELECT vt0.c1 FROM vt2, rt12, vt0 GROUP BY vt0.c1 HAVING ((CASE WHEN MAX(vt0.c1) THEN GROUP_CONCAT(x'') COLLATE NOCASE END) ISNULL);
SELECT vt0.c1 FROM vt2, rt12, vt0 GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt2, rt12, vt0 GROUP BY vt0.c1 HAVING CASE WHEN MAX(vt0.c1) THEN GROUP_CONCAT(x'') COLLATE NOCASE END UNION ALL SELECT vt0.c1 FROM vt2, rt12, vt0 GROUP BY vt0.c1 HAVING (NOT (CASE WHEN MAX(vt0.c1) THEN GROUP_CONCAT(x'') COLLATE NOCASE END)) UNION ALL SELECT vt0.c1 FROM vt2, rt12, vt0 GROUP BY vt0.c1 HAVING ((CASE WHEN MAX(vt0.c1) THEN GROUP_CONCAT(x'') COLLATE NOCASE END) ISNULL);
SELECT vt0.c1 FROM vt2, rt12, vt0 GROUP BY vt0.c1;
SELECT ALL * FROM rt12 CROSS JOIN vt0 ON UPPER(INSTR(rt12.c0, rt12.c2));
SELECT ALL * FROM rt12 CROSS JOIN vt0 ON UPPER(INSTR(rt12.c0, rt12.c2)) WHERE (vt0.c1) UNION ALL SELECT * FROM rt12 CROSS JOIN vt0 ON UPPER(INSTR(rt12.c0, rt12.c2)) WHERE ((NOT (vt0.c1))) UNION ALL SELECT * FROM rt12 CROSS JOIN vt0 ON UPPER(INSTR(rt12.c0, rt12.c2)) WHERE (((vt0.c1) ISNULL));
SELECT ALL * FROM rt12 CROSS JOIN vt0 ON UPPER(INSTR(rt12.c0, rt12.c2));
SELECT DISTINCT rt12.c1, rt12.c2, rt12.c0 FROM rt12;
SELECT DISTINCT rt12.c1, rt12.c2, rt12.c0 FROM rt12 WHERE ((((CAST(rt12.c0 AS BLOB), ((rt12.c2) NOT BETWEEN (rt12.c1) AND (rt12.c1)), ((rt12.c2) ISNULL)))>((((rt12.c2)%(rt12.c0)), (rt12.c0 IN (rt12.c1, rt12.c0)), ((rt12.c0)IS(rt12.c2)))))) UNION SELECT DISTINCT rt12.c1, rt12.c2, rt12.c0 FROM rt12 WHERE ((NOT ((((CAST(rt12.c0 AS BLOB), ((rt12.c2) NOT BETWEEN (rt12.c1) AND (rt12.c1)), ((rt12.c2) ISNULL)))>((((rt12.c2)%(rt12.c0)), (rt12.c0 IN (rt12.c1, rt12.c0)), ((rt12.c0)IS(rt12.c2)))))))) UNION SELECT DISTINCT rt12.c1, rt12.c2, rt12.c0 FROM rt12 WHERE ((((((CAST(rt12.c0 AS BLOB), ((rt12.c2) NOT BETWEEN (rt12.c1) AND (rt12.c1)), ((rt12.c2) ISNULL)))>((((rt12.c2)%(rt12.c0)), (rt12.c0 IN (rt12.c1, rt12.c0)), ((rt12.c0)IS(rt12.c2)))))) ISNULL));
SELECT DISTINCT rt12.c1, rt12.c2, rt12.c0 FROM rt12;
SELECT rt12.c1, rt12.c0, rt12.c2, vt2.c0 FROM vt2, rt12 GROUP BY rt12.c1, rt12.c0, rt12.c2, vt2.c0;
SELECT rt12.c1, rt12.c0, rt12.c2, vt2.c0 FROM vt2, rt12 WHERE (((CAST(rt12.c0 AS BLOB)) NOTNULL)) GROUP BY rt12.c1, rt12.c0, rt12.c2, vt2.c0 UNION SELECT ALL rt12.c1, rt12.c0, rt12.c2, vt2.c0 FROM vt2, rt12 WHERE ((NOT (((CAST(rt12.c0 AS BLOB)) NOTNULL)))) GROUP BY rt12.c1, rt12.c0, rt12.c2, vt2.c0 UNION SELECT ALL rt12.c1, rt12.c0, rt12.c2, vt2.c0 FROM vt2, rt12 WHERE (((((CAST(rt12.c0 AS BLOB)) NOTNULL)) ISNULL)) GROUP BY rt12.c1, rt12.c0, rt12.c2, vt2.c0;
SELECT rt12.c1, rt12.c0, rt12.c2, vt2.c0 FROM vt2, rt12 GROUP BY rt12.c1, rt12.c0, rt12.c2, vt2.c0;
SELECT vt1.c0 FROM vt2, vt1 CROSS JOIN vt0 ON '-765125214' GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt2, vt1 CROSS JOIN vt0 ON '-765125214' GROUP BY vt1.c0 HAVING (+ (vt0.c1)) UNION ALL SELECT ALL vt1.c0 FROM vt2, vt1 CROSS JOIN vt0 ON '-765125214' GROUP BY vt1.c0 HAVING (NOT ((+ (vt0.c1)))) UNION ALL SELECT ALL vt1.c0 FROM vt2, vt1 CROSS JOIN vt0 ON '-765125214' GROUP BY vt1.c0 HAVING (((+ (vt0.c1))) ISNULL);
SELECT vt1.c0 FROM vt2, vt1 CROSS JOIN vt0 ON '-765125214' GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt2, vt1 CROSS JOIN vt0 ON '-765125214' GROUP BY vt1.c0 HAVING (+ (vt0.c1)) UNION ALL SELECT ALL vt1.c0 FROM vt2, vt1 CROSS JOIN vt0 ON '-765125214' GROUP BY vt1.c0 HAVING (NOT ((+ (vt0.c1)))) UNION ALL SELECT ALL vt1.c0 FROM vt2, vt1 CROSS JOIN vt0 ON '-765125214' GROUP BY vt1.c0 HAVING (((+ (vt0.c1))) ISNULL);
SELECT vt1.c0 FROM vt2, vt1 CROSS JOIN vt0 ON '-765125214' GROUP BY vt1.c0;
