-- Time: 2024/06/11 08:43:36
-- Database: database51
-- Database version: 3.40.0
-- seed value: 3032861451
PRAGMA cache_size = 50000; -- 0ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree_i32(c0, c1, c2); -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
UPDATE OR IGNORE rt0 SET (c1)=(NULL); -- 0ms;
UPDATE OR IGNORE rt0 SET (c0)=(0.5645623709063184) WHERE rt0.c2; -- 0ms;
UPDATE OR IGNORE rt0 SET (c1, c2)=(NULL, 0x1dfe6aaf); -- 0ms;
PRAGMA wal_checkpoint(PASSIVE); -- 0ms;
PRAGMA foreign_keys = false; -- 0ms;
PRAGMA main.shrink_memory; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
COMMIT; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO rt0(c2) VALUES (x'f060'); -- 0ms;
ANALYZE; -- 1ms;
UPDATE OR IGNORE rt0 SET (c0, c1, c2)=(x'1bc9', NULL, x'6c04'); -- 0ms;
ANALYZE; -- 0ms;
UPDATE OR FAIL rt0 SET c0=x''; -- 0ms;
PRAGMA short_column_names; -- 0ms;
INSERT OR ROLLBACK INTO rt0(c1, c2, c0) VALUES ('1299236030', 0.6337390316889698, x'37d017fa'); -- 0ms;
INSERT OR IGNORE INTO rt0(c2, c0) VALUES (1.29923603E9, 0.22993163854731757); -- 0ms;
UPDATE OR IGNORE rt0 SET c1=x'', c1=0xad717f4, c2=-1645058364, c1=NULL WHERE ((((((rt0.c1)IS(rt0.c1)))OR(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0)))))OR((((('T')OR(rt0.c0)))AND(rt0.c1)))); -- 1ms;
PRAGMA secure_delete = false; -- 0ms;
UPDATE rt0 SET (c2)=(x'a76d') WHERE ((((rt0.c1))<((rt0.c1))) IN ((rt0.c0 IN ()), ((rt0.c0)LIKE(rt0.c0)))); -- 1ms;
PRAGMA main.cache_spill; -- 0ms;
UPDATE OR ROLLBACK rt0 SET (c0)=(NULL); -- 0ms;
REINDEX; -- 0ms;
PRAGMA optimize; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
ANALYZE; -- 1ms;
UPDATE OR REPLACE rt0 SET c1=NULL, c2=NULL; -- 0ms;
PRAGMA cache_spill = false; -- 0ms;
UPDATE rt0 SET c2=x'' WHERE IFNULL(DISTINCT rt0.c2, rt0.c0) COLLATE RTRIM; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
ANALYZE rt0; -- 0ms;
PRAGMA main.short_column_names; -- 0ms;
PRAGMA main.automatic_index = true; -- 0ms;
SELECT rtreecheck('rt0'); -- 0ms;
UPDATE OR IGNORE rt0 SET (c2, c2)=(x'', 1.29923603E9) WHERE ((((rt0.c1 IN (rt0.c2)), rt0.c0, ((rt0.c0)/(rt0.c2))))>((((((rt0.c2)OR(rt0.c1)))OR(rt0.c2)), ABS(DISTINCT rt0.c0), HEX(rt0.c0)))); -- 0ms;
PRAGMA main.mmap_size = -5901581774088076567; -- 0ms;
END TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 sz=990281437'); -- 1ms;
REINDEX; -- 0ms;
INSERT OR ROLLBACK INTO rt0(c2, c1) VALUES ('-1354153350', NULL); -- 1ms;
INSERT OR IGNORE INTO rt0(c0, c1, c2) VALUES (0.6337390316889698, NULL, x''); -- 0ms;
PRAGMA optimize; -- 0ms;
INSERT OR ROLLBACK INTO rt0(c2, c1) VALUES ('-2136469394', '1365964443'), ('', 1788517494), (NULL, 0.30916905212061774); -- 0ms;
INSERT OR IGNORE INTO rt0(c2, c0) VALUES ('FALSE', x''); -- 0ms;
UPDATE rt0 SET (c2)=('xQ'); -- 0ms;
PRAGMA journal_size_limit; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA temp.checkpoint_fullfsync; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
PRAGMA temp.secure_delete; -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
UPDATE rt0 SET (c1, c1)=(1.29923603E9, x'') WHERE (RTRIM(rt0.c0) IN (((((rt0.c0)OR(rt0.c1)))AND(rt0.c1)))); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR ROLLBACK INTO rt0(c1) VALUES (NULL); -- 0ms;
PRAGMA main.recursive_triggers; -- 0ms;
ANALYZE; -- 0ms;
PRAGMA temp.journal_size_limit; -- 0ms;
REINDEX  rt0; -- 0ms;
ANALYZE rt0; -- 0ms;
INSERT OR ABORT INTO rt0(c0, c2) VALUES ('1788517494', x''), ('', x'b10e'), (0.291227436089491, '1në†½'); -- 2ms;
INSERT OR ROLLBACK INTO rt0(c0) VALUES (0.362615678893596), ('1067685539'), (x''); -- 0ms;
INSERT OR ABORT INTO rt0(c0) VALUES ('-1156936117'); -- 0ms;
UPDATE OR FAIL rt0 SET c0=-715370166 WHERE ((((((rt0.c1)AND(NULL)))OR(UNLIKELY(DISTINCT rt0.c0))))OR(rt0.c2)); -- 0ms;
UPDATE rt0 SET c0=x''; -- 1ms;
UPDATE OR IGNORE rt0 SET (c1)=(1670156376) WHERE ((SQLITE_COMPILEOPTION_GET(rt0.c2)) NOT BETWEEN (rt0.c1) AND ((rt0.c2 IN ()))); -- 0ms;
END TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT ALL rt0.c1, rt0.c0 FROM rt0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 WHERE (CASE WHEN (rt0.c1 IN ()) THEN rt0.c1 ELSE (rt0.c1 IN (rt0.c2, rt0.c2)) END) UNION ALL SELECT rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (CASE WHEN (rt0.c1 IN ()) THEN rt0.c1 ELSE (rt0.c1 IN (rt0.c2, rt0.c2)) END))) UNION ALL SELECT ALL rt0.c1, rt0.c0 FROM rt0 WHERE (((CASE WHEN (rt0.c1 IN ()) THEN rt0.c1 ELSE (rt0.c1 IN (rt0.c2, rt0.c2)) END) ISNULL));
SELECT ALL rt0.c1, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c2 FROM rt0 WHERE (((((rt0.c2) BETWEEN (rt0.c1) AND (x'')))+((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c2)))))) UNION SELECT DISTINCT rt0.c2 FROM rt0 WHERE ((NOT (((((rt0.c2) BETWEEN (rt0.c1) AND (x'')))+((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c2)))))))) UNION SELECT DISTINCT rt0.c2 FROM rt0 WHERE (((((((rt0.c2) BETWEEN (rt0.c1) AND (x'')))+((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c2)))))) ISNULL));
SELECT DISTINCT rt0.c2 FROM rt0;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE (UNLIKELY(DISTINCT LIKELIHOOD(rt0.c2, 0.8729900907798382))) GROUP BY rt0.c2, rt0.c0, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (UNLIKELY(DISTINCT LIKELIHOOD(rt0.c2, 0.8729900907798382))))) GROUP BY rt0.c2, rt0.c0, rt0.c1 UNION SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE (((UNLIKELY(DISTINCT LIKELIHOOD(rt0.c2, 0.8729900907798382))) ISNULL)) GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING ((((((((MAX(TOTAL(rt0.c2)))OR(((MAX(rt0.c2)) BETWEEN (MIN(MAX(rt0.c0))) AND (rt0.c1)))))OR(COUNT(*))))OR(((NULL) BETWEEN (rt0.c1) AND (COUNT(MIN(rt0.c2)))))))OR((~ (rt0.c1)))) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING (NOT (((((((((MAX(TOTAL(rt0.c2)))OR(((MAX(rt0.c2)) BETWEEN (MIN(MAX(rt0.c0))) AND (rt0.c1)))))OR(COUNT(*))))OR(((NULL) BETWEEN (rt0.c1) AND (COUNT(MIN(rt0.c2)))))))OR((~ (rt0.c1)))))) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING ((((((((((MAX(TOTAL(rt0.c2)))OR(((MAX(rt0.c2)) BETWEEN (MIN(MAX(rt0.c0))) AND (rt0.c1)))))OR(COUNT(*))))OR(((NULL) BETWEEN (rt0.c1) AND (COUNT(MIN(rt0.c2)))))))OR((~ (rt0.c1))))) ISNULL);
SELECT MAX(CAST(rt0.c1 AS INTEGER)) FROM rt0;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE (((((((((rt0.c0)AND(rt0.c0)))AND(rt0.c1)))OR(((rt0.c0) NOT NULL))))AND(((rt0.c2)/(rt0.c0))))) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (((((((((rt0.c0)AND(rt0.c0)))AND(rt0.c1)))OR(((rt0.c0) NOT NULL))))AND(((rt0.c2)/(rt0.c0))))))) UNION ALL SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE (((((((((((rt0.c0)AND(rt0.c0)))AND(rt0.c1)))OR(((rt0.c0) NOT NULL))))AND(((rt0.c2)/(rt0.c0))))) ISNULL));
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((IFNULL(rt0.c1, rt0.c2))||(((rt0.c1)AND(rt0.c0))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((IFNULL(rt0.c1, rt0.c2))||(((rt0.c1)AND(rt0.c0))))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((IFNULL(rt0.c1, rt0.c2))||(((rt0.c1)AND(rt0.c0))))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE (((CASE WHEN rt0.c0 THEN rt0.c0 END) NOTNULL)) GROUP BY rt0.c1, rt0.c2, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (((CASE WHEN rt0.c0 THEN rt0.c0 END) NOTNULL)))) GROUP BY rt0.c1, rt0.c2, rt0.c0 UNION SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE (((((CASE WHEN rt0.c0 THEN rt0.c0 END) NOTNULL)) ISNULL)) GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING MAX(COUNT(*)) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING (NOT (MAX(COUNT(*)))) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING ((MAX(COUNT(*))) ISNULL);
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE ((((rt0.c1 IN (rt0.c0, rt0.c1)))*((((rt0.c0))>((rt0.c0)))))) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT ((((rt0.c1 IN (rt0.c0, rt0.c1)))*((((rt0.c0))>((rt0.c0)))))))) UNION ALL SELECT * FROM rt0 WHERE ((((((rt0.c1 IN (rt0.c0, rt0.c1)))*((((rt0.c0))>((rt0.c0)))))) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0 WHERE (x'') UNION SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (x''))) UNION SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0 WHERE (((x'') ISNULL));
SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 WHERE (rt0.c2) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0 WHERE ((NOT (rt0.c2))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0 WHERE (((rt0.c2) ISNULL)) GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING AVG(COUNT(*)) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING (NOT (AVG(COUNT(*)))) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING ((AVG(COUNT(*))) ISNULL);
SELECT ALL SUM(((((rt0.c1)GLOB(rt0.c0))) ISNULL)) FROM rt0;
SELECT ALL rt0.c2 FROM rt0;
SELECT rt0.c2 FROM rt0 NOT INDEXED WHERE ((((rt0.c1 IN ())) NOTNULL)) UNION ALL SELECT rt0.c2 FROM rt0 WHERE ((NOT ((((rt0.c1 IN ())) NOTNULL)))) UNION ALL SELECT ALL rt0.c2 FROM rt0 WHERE ((((((rt0.c1 IN ())) NOTNULL)) ISNULL));
SELECT ALL rt0.c2 FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (0xffffffffa2f1eca0) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (0xffffffffa2f1eca0))) UNION SELECT DISTINCT * FROM rt0 WHERE (((0Xffffffffa2f1eca0) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 WHERE (json_patch(((rt0.c2) IS FALSE), rt0.c0)) GROUP BY rt0.c0, rt0.c1 UNION SELECT rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (json_patch(((rt0.c2) IS FALSE), rt0.c0)))) GROUP BY rt0.c0, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c1 FROM rt0 WHERE (((json_patch(((rt0.c2) IS FALSE), rt0.c0)) ISNULL)) GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING ((((((((COUNT(MAX(0.42547685432603144)))OR(((MAX(rt0.c0))/(NULL)))))OR((((MIN(rt0.c0))) BETWEEN ((TOTAL(rt0.c1))) AND ((rt0.c1))))))AND(MAX(GROUP_CONCAT(COUNT(*))))))OR(GROUP_CONCAT(rt0.c1) COLLATE RTRIM)) UNION ALL SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING (NOT (((((((((COUNT(MAX(0.42547685432603144)))OR(((MAX(rt0.c0))/(NULL)))))OR((((MIN(rt0.c0))) BETWEEN ((TOTAL(rt0.c1))) AND ((rt0.c1))))))AND(MAX(GROUP_CONCAT(COUNT(*))))))OR(GROUP_CONCAT(rt0.c1) COLLATE RTRIM)))) UNION ALL SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING ((((((((((COUNT(MAX(0.42547685432603144)))OR(((MAX(rt0.c0))/(NULL)))))OR((((MIN(rt0.c0))) BETWEEN ((TOTAL(rt0.c1))) AND ((rt0.c1))))))AND(MAX(GROUP_CONCAT(COUNT(*))))))OR(GROUP_CONCAT(rt0.c1) COLLATE RTRIM))) ISNULL);
SELECT ALL rt0.c2 FROM rt0;
SELECT ALL rt0.c2 FROM rt0 WHERE (SQLITE_COMPILEOPTION_USED(x'8689')) UNION ALL SELECT rt0.c2 FROM rt0 WHERE ((NOT (SQLITE_COMPILEOPTION_USED(x'8689')))) UNION ALL SELECT ALL rt0.c2 FROM rt0 WHERE (((SQLITE_COMPILEOPTION_USED(x'8689')) ISNULL));
SELECT ALL rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE (((CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c1 END)LIKE(((rt0.c0) IS TRUE)))) UNION SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (((CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c1 END)LIKE(((rt0.c0) IS TRUE)))))) UNION SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE (((((CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c1 END)LIKE(((rt0.c0) IS TRUE)))) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0 FROM rt0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 WHERE (((CAST(rt0.c2 AS INTEGER)) BETWEEN (((rt0.c2)AND(rt0.c0))) AND (CASE WHEN rt0.c1 THEN rt0.c2 END))) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM rt0 WHERE ((NOT (((CAST(rt0.c2 AS INTEGER)) BETWEEN (((rt0.c2)AND(rt0.c0))) AND (CASE WHEN rt0.c1 THEN rt0.c2 END))))) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM rt0 WHERE (((((CAST(rt0.c2 AS INTEGER)) BETWEEN (((rt0.c2)AND(rt0.c0))) AND (CASE WHEN rt0.c1 THEN rt0.c2 END))) ISNULL)) GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (((+ (COUNT(*))))==(SUM(MIN(NULL)))) UNION ALL SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (NOT ((((+ (COUNT(*))))==(SUM(MIN(NULL)))))) UNION ALL SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (((((+ (COUNT(*))))==(SUM(MIN(NULL))))) ISNULL);
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE (((((rt0.c2) NOT NULL))*(((rt0.c0) IS FALSE)))) UNION ALL SELECT * FROM rt0 WHERE ((NOT (((((rt0.c2) NOT NULL))*(((rt0.c0) IS FALSE)))))) UNION ALL SELECT ALL * FROM rt0 WHERE (((((((rt0.c2) NOT NULL))*(((rt0.c0) IS FALSE)))) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c0 FROM rt0 WHERE (CAST((~ (rt0.c1)) AS NUMERIC)) UNION SELECT DISTINCT rt0.c0 FROM rt0 WHERE ((NOT (CAST((~ (rt0.c1)) AS NUMERIC)))) UNION SELECT DISTINCT rt0.c0 FROM rt0 WHERE (((CAST((~ (rt0.c1)) AS NUMERIC)) ISNULL));
SELECT DISTINCT rt0.c0 FROM rt0;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 WHERE ((((rt0.c0)) NOT BETWEEN ((((rt0.c0)<=(rt0.c1)))) AND ((CASE WHEN rt0.c0 THEN NULL END)))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0 WHERE ((NOT ((((rt0.c0)) NOT BETWEEN ((((rt0.c0)<=(rt0.c1)))) AND ((CASE WHEN rt0.c0 THEN NULL END)))))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0 WHERE ((((((rt0.c0)) NOT BETWEEN ((((rt0.c0)<=(rt0.c1)))) AND ((CASE WHEN rt0.c0 THEN NULL END)))) ISNULL)) GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING MIN(MAX(rt0.c0)) UNION ALL SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (NOT (MIN(MAX(rt0.c0)))) UNION ALL SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING ((MIN(MAX(rt0.c0))) ISNULL);
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE ((((((rt0.c0 IN ()))OR(((rt0.c0)IS(rt0.c2)))))OR(((rt0.c0) ISNULL)))) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT ((((((rt0.c0 IN ()))OR(((rt0.c0)IS(rt0.c2)))))OR(((rt0.c0) ISNULL)))))) UNION ALL SELECT * FROM rt0 WHERE ((((((((rt0.c0 IN ()))OR(((rt0.c0)IS(rt0.c2)))))OR(((rt0.c0) ISNULL)))) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c2 FROM rt0 WHERE ((((rt0.c1)) BETWEEN (((((rt0.c1))!=((rt0.c2))))) AND ((rt0.c0)))) UNION SELECT DISTINCT rt0.c2 FROM rt0 WHERE ((NOT ((((rt0.c1)) BETWEEN (((((rt0.c1))<>((rt0.c2))))) AND ((rt0.c0)))))) UNION SELECT DISTINCT rt0.c2 FROM rt0 WHERE ((((((rt0.c1)) BETWEEN (((((rt0.c1))!=((rt0.c2))))) AND ((rt0.c0)))) ISNULL));
SELECT DISTINCT rt0.c2 FROM rt0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE (((((rt0.c2) NOT NULL)) NOTNULL)) GROUP BY rt0.c1, rt0.c2, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (((((rt0.c2) NOT NULL)) NOTNULL)))) GROUP BY rt0.c1, rt0.c2, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE (((((((rt0.c2) NOT NULL)) NOTNULL)) ISNULL)) GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING ((rt0.c0 IN (AVG(MIN(NULL)))) IN ()) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING (NOT (((rt0.c0 IN (AVG(MIN(NULL)))) IN ()))) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING ((((rt0.c0 IN (AVG(MIN(NULL)))) IN ())) ISNULL);
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING ((rt0.c0 IN (AVG(MIN(NULL)))) IN ()) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING (NOT (((rt0.c0 IN (AVG(MIN(NULL)))) IN ()))) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING ((((rt0.c0 IN (AVG(MIN(NULL)))) IN ())) ISNULL);
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE (((((rt0.c1)!=(rt0.c1))) NOT BETWEEN (0X953ea60) AND (rt0.c2))) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (((((rt0.c1)!=(rt0.c1))) NOT BETWEEN (0x953ea60) AND (rt0.c2))))) UNION ALL SELECT ALL * FROM rt0 WHERE (((((((rt0.c1)<>(rt0.c1))) NOT BETWEEN (0X953ea60) AND (rt0.c2))) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((- (((((((((rt0.c0)OR(rt0.c1)))AND(rt0.c2)))AND(rt0.c2)))AND(rt0.c0))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((- (((((((((rt0.c0)OR(rt0.c1)))AND(rt0.c2)))AND(rt0.c2)))AND(rt0.c0))))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((- (((((((((rt0.c0)OR(rt0.c1)))AND(rt0.c2)))AND(rt0.c2)))AND(rt0.c0))))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 WHERE (CASE ((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c1))  WHEN rt0.c0 THEN (((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c1))) WHEN ((rt0.c1)<<(rt0.c2)) THEN (((rt0.c0, rt0.c2, rt0.c2))>=((rt0.c2, rt0.c1, rt0.c1))) WHEN (rt0.c0 IN ()) THEN ((rt0.c0)%(rt0.c1)) END) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0 WHERE ((NOT (CASE ((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c1))  WHEN rt0.c0 THEN (((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c1))) WHEN ((rt0.c1)<<(rt0.c2)) THEN (((rt0.c0, rt0.c2, rt0.c2))>=((rt0.c2, rt0.c1, rt0.c1))) WHEN (rt0.c0 IN ()) THEN ((rt0.c0)%(rt0.c1)) END))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0 WHERE (((CASE ((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c1))  WHEN rt0.c0 THEN (((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c1))) WHEN ((rt0.c1)<<(rt0.c2)) THEN (((rt0.c0, rt0.c2, rt0.c2))>=((rt0.c2, rt0.c1, rt0.c1))) WHEN (rt0.c0 IN ()) THEN ((rt0.c0)%(rt0.c1)) END) ISNULL)) GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING COUNT(rt0.c2) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING (NOT (COUNT(rt0.c2))) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING ((COUNT(rt0.c2)) ISNULL);
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING COUNT(rt0.c2) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING (NOT (COUNT(rt0.c2))) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING ((COUNT(rt0.c2)) ISNULL);
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((+ (rt0.c2)) COLLATE RTRIM) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT ((+ (rt0.c2)) COLLATE RTRIM))) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((((+ (rt0.c2)) COLLATE RTRIM) ISNULL));
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE (((rt0.c1) IS TRUE) COLLATE RTRIM) UNION SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (((rt0.c1) IS TRUE) COLLATE RTRIM))) UNION SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE (((((rt0.c1) IS TRUE) COLLATE RTRIM) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0;
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 WHERE ((((+ (rt0.c2))) BETWEEN (((((rt0.c2)OR(rt0.c1)))AND(rt0.c0))) AND (((rt0.c0)LIKE(rt0.c0))))) GROUP BY rt0.c0, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT ((((+ (rt0.c2))) BETWEEN (((((rt0.c2)OR(rt0.c1)))AND(rt0.c0))) AND (((rt0.c0)LIKE(rt0.c0))))))) GROUP BY rt0.c0, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c2 FROM rt0 WHERE ((((((+ (rt0.c2))) BETWEEN (((((rt0.c2)OR(rt0.c1)))AND(rt0.c0))) AND (((rt0.c0)LIKE(rt0.c0))))) ISNULL)) GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING ((AVG(rt0.c2)) NOTNULL) UNION ALL SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING (NOT (((AVG(rt0.c2)) NOTNULL))) UNION ALL SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING ((((AVG(rt0.c2)) NOTNULL)) ISNULL);
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING ((AVG(rt0.c2)) NOTNULL) UNION ALL SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING (NOT (((AVG(rt0.c2)) NOTNULL))) UNION ALL SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING ((((AVG(rt0.c2)) NOTNULL)) ISNULL);
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((((((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2)))) NOT BETWEEN (((rt0.c2)>=(rt0.c1))) AND (CAST(rt0.c1 AS BLOB)))) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT ((((((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2)))) NOT BETWEEN (((rt0.c2)>=(rt0.c1))) AND (CAST(rt0.c1 AS BLOB)))))) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((((((((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2)))) NOT BETWEEN (((rt0.c2)>=(rt0.c1))) AND (CAST(rt0.c1 AS BLOB)))) ISNULL));
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((((((rt0.c1)OR(rt0.c0)))AND(rt0.c2)))%((((rt0.c0))>((rt0.c1)))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((((((rt0.c1)OR(rt0.c0)))AND(rt0.c2)))%((((rt0.c0))>((rt0.c1)))))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((((((rt0.c1)OR(rt0.c0)))AND(rt0.c2)))%((((rt0.c0))>((rt0.c1)))))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE (ABS(DISTINCT rt0.c2) COLLATE NOCASE) GROUP BY rt0.c0, rt0.c2, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (ABS(DISTINCT rt0.c2) COLLATE NOCASE))) GROUP BY rt0.c0, rt0.c2, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE (((ABS(DISTINCT rt0.c2) COLLATE NOCASE) ISNULL)) GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING SUM(NULL) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING (NOT (SUM(NULL))) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING ((SUM(NULL)) ISNULL);
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING SUM(NULL) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING (NOT (SUM(NULL))) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING ((SUM(NULL)) ISNULL);
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT MIN(((((rt0.c1)!=(NULL)))=(((rt0.c0)+(rt0.c2))))) FROM rt0 ORDER BY CAST(CAST(rt0.c0 AS BLOB) AS NUMERIC);
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE ((+ (CASE WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c0 END))) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT ((+ (CASE WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c0 END))))) UNION ALL SELECT * FROM rt0 WHERE ((((+ (CASE WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c0 END))) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((((((rt0.c2)&(x'a292')))AND(((rt0.c1) NOT NULL))))AND((((rt0.c0, rt0.c2, rt0.c0)) BETWEEN ((rt0.c0, rt0.c2, rt0.c0)) AND ((rt0.c0, rt0.c1, 990281437)))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((((((rt0.c2)&(x'a292')))AND(((rt0.c1) NOT NULL))))AND((((rt0.c0, rt0.c2, rt0.c0)) BETWEEN ((rt0.c0, rt0.c2, rt0.c0)) AND ((rt0.c0, rt0.c1, 990281437)))))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((((((rt0.c2)&(x'a292')))AND(((rt0.c1) NOT NULL))))AND((((rt0.c0, rt0.c2, rt0.c0)) BETWEEN ((rt0.c0, rt0.c2, rt0.c0)) AND ((rt0.c0, rt0.c1, 990281437)))))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE (json_patch(rt0.c0, 0.9363329769650908) COLLATE RTRIM) GROUP BY rt0.c1, rt0.c2, rt0.c0 UNION SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (json_patch(rt0.c0, 0.9363329769650908) COLLATE RTRIM))) GROUP BY rt0.c1, rt0.c2, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE (((json_patch(rt0.c0, 0.9363329769650908) COLLATE RTRIM) ISNULL)) GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING ((((COUNT(*) COLLATE NOCASE)OR(MIN(MAX(rt0.c1)))))OR(((((rt0.c0)AND(GROUP_CONCAT(GROUP_CONCAT(SUM(MAX(AVG(MIN(MAX(rt0.c0))))))))))OR(rt0.c2)))) UNION ALL SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING (NOT (((((COUNT(*) COLLATE NOCASE)OR(MIN(MAX(rt0.c1)))))OR(((((rt0.c0)AND(GROUP_CONCAT(GROUP_CONCAT(SUM(MAX(AVG(MIN(MAX(rt0.c0))))))))))OR(rt0.c2)))))) UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING ((((((COUNT(*) COLLATE NOCASE)OR(MIN(MAX(rt0.c1)))))OR(((((rt0.c0)AND(GROUP_CONCAT(GROUP_CONCAT(SUM(MAX(AVG(MIN(MAX(rt0.c0))))))))))OR(rt0.c2))))) ISNULL);
SELECT rt0.c2 FROM rt0;
SELECT rt0.c2 FROM rt0 WHERE ('') UNION ALL SELECT ALL rt0.c2 FROM rt0 WHERE ((NOT (''))) UNION ALL SELECT ALL rt0.c2 FROM rt0 WHERE ((('') ISNULL));
SELECT rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c2 FROM rt0 WHERE (CASE ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c2))  WHEN CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN x'' WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c0 END THEN (rt0.c0 IN (rt0.c0)) END) UNION SELECT DISTINCT rt0.c2 FROM rt0 WHERE ((NOT (CASE ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c2))  WHEN CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN x'' WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c0 END THEN (rt0.c0 IN (rt0.c0)) END))) UNION SELECT DISTINCT rt0.c2 FROM rt0 WHERE (((CASE ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c2))  WHEN CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN x'' WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c0 END THEN (rt0.c0 IN (rt0.c0)) END) ISNULL));
SELECT DISTINCT rt0.c2 FROM rt0;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 WHERE (((rt0.c2 COLLATE RTRIM) ISNULL)) GROUP BY rt0.c0, rt0.c1 UNION SELECT rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (((rt0.c2 COLLATE RTRIM) ISNULL)))) GROUP BY rt0.c0, rt0.c1 UNION SELECT rt0.c0, rt0.c1 FROM rt0 WHERE (((((rt0.c2 COLLATE RTRIM) ISNULL)) ISNULL)) GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c0 FROM rt0;
SELECT rt0.c0 FROM rt0 WHERE (rt0.c2 COLLATE NOCASE COLLATE NOCASE COLLATE BINARY) UNION ALL SELECT rt0.c0 FROM rt0 WHERE ((NOT (rt0.c2 COLLATE NOCASE COLLATE NOCASE COLLATE BINARY))) UNION ALL SELECT rt0.c0 FROM rt0 WHERE (((rt0.c2 COLLATE NOCASE COLLATE NOCASE COLLATE BINARY) ISNULL));
SELECT ALL rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0 NOT INDEXED;
SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0 WHERE (LIKELIHOOD(((rt0.c1)GLOB(rt0.c1)), 0.9104790774658538)) UNION SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (LIKELIHOOD(((rt0.c1)GLOB(rt0.c1)), 0.9104790774658538)))) UNION SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0 WHERE (((LIKELIHOOD(((rt0.c1)GLOB(rt0.c1)), 0.9104790774658538)) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0 NOT INDEXED;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 WHERE (TRIM(DISTINCT '-328795306', ((((0.4901762693320181)AND(rt0.c2)))OR(rt0.c0)))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0 WHERE ((NOT (TRIM(DISTINCT '-328795306', ((((0.4901762693320181)AND(rt0.c2)))OR(rt0.c0)))))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0 WHERE (((TRIM(DISTINCT '-328795306', ((((0.4901762693320181)AND(rt0.c2)))OR(rt0.c0)))) ISNULL)) GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING AVG(TOTAL(SUM(rt0.c1))) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING (NOT (AVG(TOTAL(SUM(rt0.c1))))) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING ((AVG(TOTAL(SUM(rt0.c1)))) ISNULL);
SELECT TOTAL(CAST(LOWER(rt0.c2) AS NUMERIC)) FROM rt0 ORDER BY ((((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1)))>>((((rt0.c1)) BETWEEN ((1.56494432E8)) AND ((rt0.c1)))));
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE (((CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 END)==(rt0.c0 COLLATE BINARY))) UNION ALL SELECT * FROM rt0 WHERE ((NOT (((CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 END)=(rt0.c0 COLLATE BINARY))))) UNION ALL SELECT ALL * FROM rt0 WHERE (((((CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 END)=(rt0.c0 COLLATE BINARY))) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((rt0.c1 COLLATE BINARY IN ((NOT (rt0.c1))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((rt0.c1 COLLATE BINARY IN ((NOT (rt0.c1))))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((rt0.c1 COLLATE BINARY IN ((NOT (rt0.c1))))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((((~ (rt0.c2)))||(((rt0.c0)<(rt0.c1))))) GROUP BY rt0.c2, rt0.c1, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT ((((~ (rt0.c2)))||(((rt0.c0)<(rt0.c1))))))) GROUP BY rt0.c2, rt0.c1, rt0.c0 UNION SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((((((~ (rt0.c2)))||(((rt0.c0)<(rt0.c1))))) ISNULL)) GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (- (((MIN(COUNT(rt0.c1)))IS NOT(MAX(rt0.c2))))) UNION ALL SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT ((- (((MIN(COUNT(rt0.c1)))IS NOT(MAX(rt0.c2))))))) UNION ALL SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (((- (((MIN(COUNT(rt0.c1)))IS NOT(MAX(rt0.c2)))))) ISNULL);
SELECT rt0.c2, rt0.c0 FROM rt0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (rt0.c1)) COLLATE BINARY) UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT ((NOT (rt0.c1)) COLLATE BINARY))) UNION ALL SELECT rt0.c2, rt0.c0 FROM rt0 WHERE ((((NOT (rt0.c1)) COLLATE BINARY) ISNULL));
SELECT rt0.c2, rt0.c0 FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((((((rt0.c2))!=((rt0.c1))))*(((rt0.c2) NOT NULL)))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((((((rt0.c2))<>((rt0.c1))))*(((rt0.c2) NOT NULL)))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((((((rt0.c2))!=((rt0.c1))))*(((rt0.c2) NOT NULL)))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 WHERE (((((~ (rt0.c1)), 0.9363329769650908, ((rt0.c1)!=(rt0.c0))))<=(((+ (rt0.c1)), (((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c1))), ((rt0.c2)*(rt0.c0)))))) GROUP BY rt0.c0, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (((((~ (rt0.c1)), 0.9363329769650908, ((rt0.c1)<>(rt0.c0))))<=(((+ (rt0.c1)), (((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c1))), ((rt0.c2)*(rt0.c0)))))))) GROUP BY rt0.c0, rt0.c1 UNION SELECT rt0.c0, rt0.c1 FROM rt0 WHERE (((((((~ (rt0.c1)), 0.9363329769650908, ((rt0.c1)!=(rt0.c0))))<=(((+ (rt0.c1)), (((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c1))), ((rt0.c2)*(rt0.c0)))))) ISNULL)) GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING (((MIN(rt0.c0))) BETWEEN ((((MIN(MIN(COUNT(*))))>>(rt0.c1)))) AND ((MIN(MIN(MAX(MIN(rt0.c2))))))) UNION ALL SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING (NOT ((((MIN(rt0.c0))) BETWEEN ((((MIN(MIN(COUNT(*))))>>(rt0.c1)))) AND ((MIN(MIN(MAX(MIN(rt0.c2))))))))) UNION ALL SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING (((((MIN(rt0.c0))) BETWEEN ((((MIN(MIN(COUNT(*))))>>(rt0.c1)))) AND ((MIN(MIN(MAX(MIN(rt0.c2)))))))) ISNULL);
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE ((((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c0)))) NOT NULL)) UNION ALL SELECT * FROM rt0 WHERE ((NOT ((((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c0)))) NOT NULL)))) UNION ALL SELECT * FROM rt0 WHERE ((((((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c0)))) NOT NULL)) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((rt0.c2)*(rt0.c2)) COLLATE BINARY) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((rt0.c2)*(rt0.c2)) COLLATE BINARY))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((rt0.c2)*(rt0.c2)) COLLATE BINARY) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 WHERE (CASE (rt0.c1 IN (rt0.c0))  WHEN ((rt0.c2)IS(rt0.c1)) THEN rt0.c1 COLLATE RTRIM WHEN ((((rt0.c2)OR(rt0.c0)))OR(rt0.c1)) THEN x'' WHEN rt0.c1 COLLATE RTRIM THEN ((rt0.c2)/('gå­‘?kqh\rc')) ELSE CAST(rt0.c1 AS NUMERIC) END) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM rt0 WHERE ((NOT (CASE (rt0.c1 IN (rt0.c0))  WHEN ((rt0.c2)IS(rt0.c1)) THEN rt0.c1 COLLATE RTRIM WHEN ((((rt0.c2)OR(rt0.c0)))OR(rt0.c1)) THEN x'' WHEN rt0.c1 COLLATE RTRIM THEN ((rt0.c2)/('gå­‘?kqh\rc')) ELSE CAST(rt0.c1 AS NUMERIC) END))) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM rt0 WHERE (((CASE (rt0.c1 IN (rt0.c0))  WHEN ((rt0.c2)IS(rt0.c1)) THEN rt0.c1 COLLATE RTRIM WHEN ((((rt0.c2)OR(rt0.c0)))OR(rt0.c1)) THEN x'' WHEN rt0.c1 COLLATE RTRIM THEN ((rt0.c2)/('gå­‘?kqh\rc')) ELSE CAST(rt0.c1 AS NUMERIC) END) ISNULL)) GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING CASE WHEN COUNT(*) THEN COUNT(COUNT('')) COLLATE BINARY ELSE NULL END UNION ALL SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING (NOT (CASE WHEN COUNT(*) THEN COUNT(COUNT('')) COLLATE BINARY ELSE NULL END)) UNION ALL SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING ((CASE WHEN COUNT(*) THEN COUNT(COUNT('')) COLLATE BINARY ELSE NULL END) ISNULL);
SELECT ALL rt0.c1, rt0.c0 FROM rt0;
SELECT rt0.c1, rt0.c0 FROM rt0 WHERE ((- (rt0.c0)) COLLATE BINARY) UNION ALL SELECT ALL rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT ((- (rt0.c0)) COLLATE BINARY))) UNION ALL SELECT ALL rt0.c1, rt0.c0 FROM rt0 WHERE ((((- (rt0.c0)) COLLATE BINARY) ISNULL));
SELECT ALL rt0.c1, rt0.c0 FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (NULL) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (NULL))) UNION SELECT DISTINCT * FROM rt0 WHERE (((NULL) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 WHERE ((+ ((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((1905841816)))))) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM rt0 WHERE ((NOT ((+ ((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((1905841816)))))))) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM rt0 WHERE ((((+ ((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((1905841816)))))) ISNULL)) GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING CAST(CASE WHEN rt0.c1 THEN rt0.c2 END AS TEXT) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING (NOT (CAST(CASE WHEN rt0.c1 THEN rt0.c2 END AS TEXT))) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING ((CAST(CASE WHEN rt0.c1 THEN rt0.c2 END AS TEXT)) ISNULL);
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING CAST(CASE WHEN rt0.c1 THEN rt0.c2 END AS TEXT) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING (NOT (CAST(CASE WHEN rt0.c1 THEN rt0.c2 END AS TEXT))) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING ((CAST(CASE WHEN rt0.c1 THEN rt0.c2 END AS TEXT)) ISNULL);
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c2 FROM rt0;
SELECT rt0.c2 FROM rt0 WHERE (NULL) ORDER BY ((((rt0.c1, rt0.c0, rt0.c0))>((rt0.c2, rt0.c0, rt0.c2))) IN (rt0.c2))  NULLS FIRST;
SELECT ALL rt0.c2 FROM rt0 WHERE ((NOT (NULL))) ORDER BY ((((rt0.c1, rt0.c0, rt0.c0))>((rt0.c2, rt0.c0, rt0.c2))) IN (rt0.c2))  NULLS FIRST;
SELECT ALL rt0.c2 FROM rt0 WHERE (((NULL) ISNULL)) ORDER BY ((((rt0.c1, rt0.c0, rt0.c0))>((rt0.c2, rt0.c0, rt0.c2))) IN (rt0.c2))  NULLS FIRST;
SELECT ALL rt0.c2 FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (rt0.c2) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (rt0.c2))) UNION SELECT DISTINCT * FROM rt0 WHERE (((rt0.c2) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 WHERE ((((((((0.7708259021250309)AND(rt0.c2)))AND(rt0.c1))))<((rt0.c0)))) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM rt0 WHERE ((NOT ((((((((0.7708259021250309)AND(rt0.c2)))AND(rt0.c1))))<((rt0.c0)))))) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM rt0 WHERE ((((((((((0.7708259021250309)AND(rt0.c2)))AND(rt0.c1))))<((rt0.c0)))) ISNULL)) GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING MAX(MIN(MAX(rt0.c2))) UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING (NOT (MAX(MIN(MAX(rt0.c2))))) UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING ((MAX(MIN(MAX(rt0.c2)))) ISNULL);
SELECT rt0.c0, rt0.c2 FROM rt0;
SELECT rt0.c0, rt0.c2 FROM rt0 WHERE ((((NOT (rt0.c1)))/(((rt0.c0)/(rt0.c1))))) UNION ALL SELECT rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT ((((NOT (rt0.c1)))/(((rt0.c0)/(rt0.c1))))))) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt0 WHERE ((((((NOT (rt0.c1)))/(((rt0.c0)/(rt0.c1))))) ISNULL));
SELECT rt0.c0, rt0.c2 FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (MIN((NOT (rt0.c0)), ((rt0.c1)%(rt0.c0)), NULL, ((rt0.c2)|(rt0.c2)))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (MIN((NOT (rt0.c0)), ((rt0.c1)%(rt0.c0)), NULL, ((rt0.c2)|(rt0.c2)))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((MIN((NOT (rt0.c0)), ((rt0.c1)%(rt0.c0)), NULL, ((rt0.c2)|(rt0.c2)))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 WHERE (CAST(UNLIKELY(rt0.c2) AS NUMERIC)) GROUP BY rt0.c0, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (CAST(UNLIKELY(rt0.c2) AS NUMERIC)))) GROUP BY rt0.c0, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c1 FROM rt0 WHERE (((CAST(UNLIKELY(rt0.c2) AS NUMERIC)) ISNULL)) GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING ((CAST(rt0.c1 AS REAL)) BETWEEN (GROUP_CONCAT(COUNT(rt0.c0))) AND (CAST(GROUP_CONCAT(COUNT(AVG(rt0.c0))) AS BLOB))) UNION ALL SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING (NOT (((CAST(rt0.c1 AS REAL)) BETWEEN (GROUP_CONCAT(COUNT(rt0.c0))) AND (CAST(GROUP_CONCAT(COUNT(AVG(rt0.c0))) AS BLOB))))) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING ((((CAST(rt0.c1 AS REAL)) BETWEEN (GROUP_CONCAT(COUNT(rt0.c0))) AND (CAST(GROUP_CONCAT(COUNT(AVG(rt0.c0))) AS BLOB)))) ISNULL);
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE ((~ ((((0.960427941675171)) BETWEEN ((rt0.c2)) AND ((rt0.c2)))))) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT ((~ ((((0.960427941675171)) BETWEEN ((rt0.c2)) AND ((rt0.c2)))))))) UNION ALL SELECT ALL * FROM rt0 WHERE ((((~ ((((0.960427941675171)) BETWEEN ((rt0.c2)) AND ((rt0.c2)))))) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c0 FROM rt0 WHERE (NULL) UNION SELECT DISTINCT rt0.c0 FROM rt0 WHERE ((NOT (NULL))) UNION SELECT DISTINCT rt0.c0 FROM rt0 WHERE (((NULL) ISNULL));
SELECT DISTINCT rt0.c0 FROM rt0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 WHERE (((((((((((rt0.c0)OR(rt0.c0)))OR(rt0.c2)))AND(rt0.c1)))AND(rt0.c1))) NOT BETWEEN (rt0.c2) AND (CAST(rt0.c1 AS TEXT)))) GROUP BY rt0.c2, rt0.c0 UNION SELECT rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (((((((((((rt0.c0)OR(rt0.c0)))OR(rt0.c2)))AND(rt0.c1)))AND(rt0.c1))) NOT BETWEEN (rt0.c2) AND (CAST(rt0.c1 AS TEXT)))))) GROUP BY rt0.c2, rt0.c0 UNION SELECT rt0.c2, rt0.c0 FROM rt0 WHERE (((((((((((((rt0.c0)OR(rt0.c0)))OR(rt0.c2)))AND(rt0.c1)))AND(rt0.c1))) NOT BETWEEN (rt0.c2) AND (CAST(rt0.c1 AS TEXT)))) ISNULL)) GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (SUM(rt0.c0) IN (COUNT(NULL))) UNION ALL SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT ((SUM(rt0.c0) IN (COUNT(NULL))))) UNION ALL SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (((SUM(rt0.c0) IN (COUNT(NULL)))) ISNULL);
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (SUM(rt0.c0) IN (COUNT(NULL))) UNION ALL SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT ((SUM(rt0.c0) IN (COUNT(NULL))))) UNION ALL SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (((SUM(rt0.c0) IN (COUNT(NULL)))) ISNULL);
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2, rt0.c0 FROM rt0;
SELECT rt0.c2, rt0.c0 FROM rt0 WHERE (CAST(rt0.c0 AS NUMERIC) COLLATE BINARY) UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (CAST(rt0.c0 AS NUMERIC) COLLATE BINARY))) UNION ALL SELECT rt0.c2, rt0.c0 FROM rt0 WHERE (((CAST(rt0.c0 AS NUMERIC) COLLATE BINARY) ISNULL));
SELECT rt0.c2, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0 WHERE ((+ (CAST(rt0.c1 AS BLOB)))) UNION SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT ((+ (CAST(rt0.c1 AS BLOB)))))) UNION SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0 WHERE ((((+ (CAST(rt0.c1 AS BLOB)))) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((((rt0.c2 IN ())) NOT BETWEEN ((+ (rt0.c0))) AND (CASE WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN '1në†½' WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c2 END))) GROUP BY rt0.c2, rt0.c1, rt0.c0 UNION SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT ((((rt0.c2 IN ())) NOT BETWEEN ((+ (rt0.c0))) AND (CASE WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN '1në†½' WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c2 END))))) GROUP BY rt0.c2, rt0.c1, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((((((rt0.c2 IN ())) NOT BETWEEN ((+ (rt0.c0))) AND (CASE WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN '1në†½' WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c2 END))) ISNULL)) GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING ((((TOTAL(GROUP_CONCAT(rt0.c2)))OR(CAST(AVG(rt0.c2) AS BLOB))))AND(AVG(rt0.c1))) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING (NOT (((((TOTAL(GROUP_CONCAT(rt0.c2)))OR(CAST(AVG(rt0.c2) AS BLOB))))AND(AVG(rt0.c1))))) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING ((((((TOTAL(GROUP_CONCAT(rt0.c2)))OR(CAST(AVG(rt0.c2) AS BLOB))))AND(AVG(rt0.c1)))) ISNULL);
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE ((((((rt0.c1)OR(rt0.c1)))AND('PZ')) IN ())) UNION ALL SELECT * FROM rt0 WHERE ((NOT ((((((rt0.c1)OR(rt0.c1)))AND('PZ')) IN ())))) UNION ALL SELECT * FROM rt0 WHERE ((((((((rt0.c1)OR(rt0.c1)))AND('PZ')) IN ())) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0 WHERE ((((((rt0.c1)&(rt0.c1))))=((TYPEOF(DISTINCT rt0.c2))))) UNION SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT ((((((rt0.c1)&(rt0.c1))))==((TYPEOF(DISTINCT rt0.c2))))))) UNION SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0 WHERE ((((((((rt0.c1)&(rt0.c1))))==((TYPEOF(DISTINCT rt0.c2))))) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 WHERE (NULL) GROUP BY rt0.c1, rt0.c0 UNION SELECT rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (NULL))) GROUP BY rt0.c1, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c0 FROM rt0 WHERE (((NULL) ISNULL)) GROUP BY rt0.c1, rt0.c0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING CASE ((((MAX(rt0.c2))AND(GROUP_CONCAT(MAX(rt0.c0)))))OR(MAX(TOTAL(rt0.c0))))  WHEN (+ (COUNT(*))) THEN ((rt0.c1)GLOB(AVG(COUNT(rt0.c1)))) WHEN SUM(SUM(AVG(rt0.c2))) THEN 0X1a9ed6f1 WHEN '' THEN SUM(AVG(MIN(rt0.c2))) ELSE MIN(rt0.c0) END UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING (NOT (CASE ((((MAX(rt0.c2))AND(GROUP_CONCAT(MAX(rt0.c0)))))OR(MAX(TOTAL(rt0.c0))))  WHEN (+ (COUNT(*))) THEN ((rt0.c1)GLOB(AVG(COUNT(rt0.c1)))) WHEN SUM(SUM(AVG(rt0.c2))) THEN 0X1a9ed6f1 WHEN '' THEN SUM(AVG(MIN(rt0.c2))) ELSE MIN(rt0.c0) END)) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING ((CASE ((((MAX(rt0.c2))AND(GROUP_CONCAT(MAX(rt0.c0)))))OR(MAX(TOTAL(rt0.c0))))  WHEN (+ (COUNT(*))) THEN ((rt0.c1)GLOB(AVG(COUNT(rt0.c1)))) WHEN SUM(SUM(AVG(rt0.c2))) THEN 0X1a9ed6f1 WHEN '' THEN SUM(AVG(MIN(rt0.c2))) ELSE MIN(rt0.c0) END) ISNULL);
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE (((TRIM(rt0.c1, rt0.c2)) NOT BETWEEN (((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c1))) AND (rt0.c1 COLLATE RTRIM))) UNION ALL SELECT * FROM rt0 WHERE ((NOT (((TRIM(rt0.c1, rt0.c2)) NOT BETWEEN (((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c1))) AND (rt0.c1 COLLATE RTRIM))))) UNION ALL SELECT ALL * FROM rt0 WHERE (((((TRIM(rt0.c1, rt0.c2)) NOT BETWEEN (((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c1))) AND (rt0.c1 COLLATE RTRIM))) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((CAST(rt0.c2 AS TEXT)) NOT NULL)) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((CAST(rt0.c2 AS TEXT)) NOT NULL)))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((CAST(rt0.c2 AS TEXT)) NOT NULL)) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c1, rt0.c2 FROM rt0 WHERE (rt0.c1) GROUP BY rt0.c1, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (rt0.c1))) GROUP BY rt0.c1, rt0.c2 UNION SELECT rt0.c1, rt0.c2 FROM rt0 WHERE (((rt0.c1) ISNULL)) GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING json_remove(((COUNT(*))||(rt0.c1)), ((((COUNT(*))OR(COUNT(*))))OR(rt0.c0))) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING (NOT (json_remove(((COUNT(*))||(rt0.c1)), ((((COUNT(*))OR(COUNT(*))))OR(rt0.c0))))) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING ((json_remove(((COUNT(*))||(rt0.c1)), ((((COUNT(*))OR(COUNT(*))))OR(rt0.c0)))) ISNULL);
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE (((((rt0.c0)|(rt0.c1)))+(NULL))) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (((((rt0.c0)|(rt0.c1)))+(NULL))))) UNION ALL SELECT ALL * FROM rt0 WHERE (((((((rt0.c0)|(rt0.c1)))+(NULL))) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 NOT INDEXED WHERE (CASE ((rt0.c0) ISNULL)  WHEN ((((rt0.c2)AND(rt0.c2)))AND('764769946')) THEN ((rt0.c1) IS TRUE) WHEN ((((rt0.c1)OR(rt0.c2)))OR(rt0.c1)) THEN x'' WHEN ((rt0.c2) NOT NULL) THEN UPPER(DISTINCT rt0.c2) WHEN (('DVr!1Y[') IS TRUE) THEN ((0.02262094612618082) NOT BETWEEN (rt0.c2) AND (rt0.c2)) WHEN ((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c0)) THEN rt0.c1 COLLATE NOCASE ELSE ((rt0.c2)IS(rt0.c0)) END) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (CASE ((rt0.c0) ISNULL)  WHEN ((((rt0.c2)AND(rt0.c2)))AND('764769946')) THEN ((rt0.c1) IS TRUE) WHEN ((((rt0.c1)OR(rt0.c2)))OR(rt0.c1)) THEN x'' WHEN ((rt0.c2) NOT NULL) THEN UPPER(DISTINCT rt0.c2) WHEN (('DVr!1Y[') IS TRUE) THEN ((0.02262094612618082) NOT BETWEEN (rt0.c2) AND (rt0.c2)) WHEN ((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c0)) THEN rt0.c1 COLLATE NOCASE ELSE ((rt0.c2)IS(rt0.c0)) END))) UNION SELECT DISTINCT * FROM rt0 WHERE (((CASE ((rt0.c0) ISNULL)  WHEN ((((rt0.c2)AND(rt0.c2)))AND('764769946')) THEN ((rt0.c1) IS TRUE) WHEN ((((rt0.c1)OR(rt0.c2)))OR(rt0.c1)) THEN x'' WHEN ((rt0.c2) NOT NULL) THEN UPPER(DISTINCT rt0.c2) WHEN (('DVr!1Y[') IS TRUE) THEN ((0.02262094612618082) NOT BETWEEN (rt0.c2) AND (rt0.c2)) WHEN ((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c0)) THEN rt0.c1 COLLATE NOCASE ELSE ((rt0.c2)IS(rt0.c0)) END) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 WHERE (((((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1))) BETWEEN (((rt0.c2) NOT NULL)) AND (0.6494813280726544))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0 WHERE ((NOT (((((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1))) BETWEEN (((rt0.c2) NOT NULL)) AND (0.6494813280726544))))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0 WHERE (((((((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1))) BETWEEN (((rt0.c2) NOT NULL)) AND (0.6494813280726544))) ISNULL)) GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING GROUP_CONCAT(((AVG(rt0.c1)) IS FALSE)) UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT (GROUP_CONCAT(((AVG(rt0.c1)) IS FALSE)))) UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING ((GROUP_CONCAT(((AVG(rt0.c1)) IS FALSE))) ISNULL);
SELECT rt0.c0, rt0.c2 FROM rt0;
SELECT rt0.c0, rt0.c2 FROM rt0 WHERE ((- (rt0.c0)) COLLATE BINARY) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT ((- (rt0.c0)) COLLATE BINARY))) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt0 WHERE ((((- (rt0.c0)) COLLATE BINARY) ISNULL));
SELECT rt0.c0, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0 WHERE (CAST(((rt0.c1) NOTNULL) AS INTEGER)) UNION SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (CAST(((rt0.c1) NOTNULL) AS INTEGER)))) UNION SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0 WHERE (((CAST(((rt0.c1) NOTNULL) AS INTEGER)) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((((rt0.c2, rt0.c2, 1.889490976E9)) NOT BETWEEN ((((rt0.c2) IS FALSE), NULL, (rt0.c1 IN ()))) AND ((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2)), rt0.c2 COLLATE BINARY, ((((rt0.c0)AND(rt0.c2)))AND(rt0.c0)))))) GROUP BY rt0.c0, rt0.c2, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT ((((rt0.c2, rt0.c2, 1.889490976E9)) NOT BETWEEN ((((rt0.c2) IS FALSE), NULL, (rt0.c1 IN ()))) AND ((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2)), rt0.c2 COLLATE BINARY, ((((rt0.c0)AND(rt0.c2)))AND(rt0.c0)))))))) GROUP BY rt0.c0, rt0.c2, rt0.c1 UNION SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((((((rt0.c2, rt0.c2, 1.889490976E9)) NOT BETWEEN ((((rt0.c2) IS FALSE), NULL, (rt0.c1 IN ()))) AND ((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2)), rt0.c2 COLLATE BINARY, ((((rt0.c0)AND(rt0.c2)))AND(rt0.c0)))))) ISNULL)) GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING ((rt0.c2)<>(((MIN(rt0.c0))>=(0.9726668385088854)))) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING (NOT (((rt0.c2)<>(((MIN(rt0.c0))>=(0.9726668385088854)))))) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING ((((rt0.c2)<>(((MIN(rt0.c0))>=(0.9726668385088854))))) ISNULL);
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING ((rt0.c2)<>(((MIN(rt0.c0))>=(0.9726668385088854)))) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING (NOT (((rt0.c2)<>(((MIN(rt0.c0))>=(0.9726668385088854)))))) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING ((((rt0.c2)<>(((MIN(rt0.c0))>=(0.9726668385088854))))) ISNULL);
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE (((x'cecf') NOT BETWEEN (((rt0.c2)>>(rt0.c2))) AND (((((rt0.c2)AND(rt0.c1)))OR(rt0.c0))))) UNION ALL SELECT ALL * FROM rt0 NOT INDEXED WHERE ((NOT (((x'cecf') NOT BETWEEN (((rt0.c2)>>(rt0.c2))) AND (((((rt0.c2)AND(rt0.c1)))OR(rt0.c0))))))) UNION ALL SELECT * FROM rt0 WHERE (((((x'cecf') NOT BETWEEN (((rt0.c2)>>(rt0.c2))) AND (((((rt0.c2)AND(rt0.c1)))OR(rt0.c0))))) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0 WHERE (x'7d93') UNION SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (x'7d93'))) UNION SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0 WHERE (((x'7d93') ISNULL));
SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 WHERE ((- (((rt0.c1)>>(rt0.c2))))) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM rt0 WHERE ((NOT ((- (((rt0.c1)>>(rt0.c2))))))) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM rt0 WHERE ((((- (((rt0.c1)>>(rt0.c2))))) ISNULL)) GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING MAX(((rt0.c0)IS(0.11071998741538513))) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT (MAX(((rt0.c0)IS(0.11071998741538513))))) UNION ALL SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((MAX(((rt0.c0)IS(0.11071998741538513)))) ISNULL);
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING MAX(((rt0.c0)IS(0.11071998741538513))) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT (MAX(((rt0.c0)IS(0.11071998741538513))))) UNION ALL SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((MAX(((rt0.c0)IS(0.11071998741538513)))) ISNULL);
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (((CAST(rt0.c2 AS BLOB)) BETWEEN ((((rt0.c0, rt0.c1, rt0.c1))=((rt0.c1, rt0.c1, rt0.c1)))) AND ((rt0.c0 IN ())))) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (((CAST(rt0.c2 AS BLOB)) BETWEEN ((((rt0.c0, rt0.c1, rt0.c1))==((rt0.c1, rt0.c1, rt0.c1)))) AND ((rt0.c0 IN ())))))) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (((((CAST(rt0.c2 AS BLOB)) BETWEEN ((((rt0.c0, rt0.c1, rt0.c1))=((rt0.c1, rt0.c1, rt0.c1)))) AND ((rt0.c0 IN ())))) ISNULL));
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c0 FROM rt0 WHERE (CASE WHEN (+ (rt0.c1)) THEN ((((rt0.c0)AND(rt0.c2)))OR(rt0.c2)) WHEN ((x'7a3c') NOT BETWEEN (rt0.c2) AND (',G')) THEN ((rt0.c2)&(rt0.c2)) WHEN ((rt0.c1)AND(rt0.c0)) THEN CAST(rt0.c1 AS REAL) ELSE CAST(rt0.c0 AS NUMERIC) END) UNION SELECT DISTINCT rt0.c0 FROM rt0 WHERE ((NOT (CASE WHEN (+ (rt0.c1)) THEN ((((rt0.c0)AND(rt0.c2)))OR(rt0.c2)) WHEN ((x'7a3c') NOT BETWEEN (rt0.c2) AND (',G')) THEN ((rt0.c2)&(rt0.c2)) WHEN ((rt0.c1)AND(rt0.c0)) THEN CAST(rt0.c1 AS REAL) ELSE CAST(rt0.c0 AS NUMERIC) END))) UNION SELECT DISTINCT rt0.c0 FROM rt0 WHERE (((CASE WHEN (+ (rt0.c1)) THEN ((((rt0.c0)AND(rt0.c2)))OR(rt0.c2)) WHEN ((x'7a3c') NOT BETWEEN (rt0.c2) AND (',G')) THEN ((rt0.c2)&(rt0.c2)) WHEN ((rt0.c1)AND(rt0.c0)) THEN CAST(rt0.c1 AS REAL) ELSE CAST(rt0.c0 AS NUMERIC) END) ISNULL));
SELECT DISTINCT rt0.c0 FROM rt0;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((rt0.c2 IN ()) COLLATE RTRIM) GROUP BY rt0.c1, rt0.c0, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT ((rt0.c2 IN ()) COLLATE RTRIM))) GROUP BY rt0.c1, rt0.c0, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((((rt0.c2 IN ()) COLLATE RTRIM) ISNULL)) GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING ((COUNT(COUNT(rt0.c2)))GLOB(((MAX(rt0.c1))>=(rt0.c0)))) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING (NOT (((COUNT(COUNT(rt0.c2)))GLOB(((MAX(rt0.c1))>=(rt0.c0)))))) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING ((((COUNT(COUNT(rt0.c2)))GLOB(((MAX(rt0.c1))>=(rt0.c0))))) ISNULL);
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (CAST(((rt0.c0)*(rt0.c1)) AS TEXT)) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (CAST(((rt0.c0)*(rt0.c1)) AS TEXT)))) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (((CAST(((rt0.c0)*(rt0.c1)) AS TEXT)) ISNULL));
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (((((rt0.c2)GLOB(rt0.c0)))||(rt0.c2 COLLATE NOCASE))) UNION SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (((((rt0.c2)GLOB(rt0.c0)))||(rt0.c2 COLLATE NOCASE))))) UNION SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (((((((rt0.c2)GLOB(rt0.c0)))||(rt0.c2 COLLATE NOCASE))) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 WHERE (CAST(((((rt0.c1)AND(rt0.c2)))AND(rt0.c1)) AS REAL)) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0 WHERE ((NOT (CAST(((((rt0.c1)AND(rt0.c2)))AND(rt0.c1)) AS REAL)))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0 WHERE (((CAST(((((rt0.c1)AND(rt0.c2)))AND(rt0.c1)) AS REAL)) ISNULL)) GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING CAST(rt0.c0 COLLATE BINARY AS REAL) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING (NOT (CAST(rt0.c0 COLLATE BINARY AS REAL))) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING ((CAST(rt0.c0 COLLATE BINARY AS REAL)) ISNULL);
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING CAST(rt0.c0 COLLATE BINARY AS REAL) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING (NOT (CAST(rt0.c0 COLLATE BINARY AS REAL))) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING ((CAST(rt0.c0 COLLATE BINARY AS REAL)) ISNULL);
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE (CAST(CAST(rt0.c2 AS REAL) AS NUMERIC)) UNION ALL SELECT * FROM rt0 WHERE ((NOT (CAST(CAST(rt0.c2 AS REAL) AS NUMERIC)))) UNION ALL SELECT * FROM rt0 WHERE (((CAST(CAST(rt0.c2 AS REAL) AS NUMERIC)) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c1 FROM rt0 WHERE ((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((((rt0.c0)<=(rt0.c2)))))) UNION SELECT DISTINCT rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT ((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((((rt0.c0)<=(rt0.c2)))))))) UNION SELECT DISTINCT rt0.c0, rt0.c1 FROM rt0 WHERE ((((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((((rt0.c0)<=(rt0.c2)))))) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c1 FROM rt0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM rt0 WHERE (rt0.c1) GROUP BY rt0.c2, rt0.c0 UNION SELECT rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (rt0.c1))) GROUP BY rt0.c2, rt0.c0 UNION SELECT rt0.c2, rt0.c0 FROM rt0 WHERE (((rt0.c1) ISNULL)) GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING CASE TOTAL(AVG(COUNT(rt0.c2)))  WHEN COUNT(rt0.c0) THEN GROUP_CONCAT(rt0.c0) ELSE COUNT(SUM(-1325202320)) END UNION ALL SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT (CASE TOTAL(AVG(COUNT(rt0.c2)))  WHEN COUNT(rt0.c0) THEN GROUP_CONCAT(rt0.c0) ELSE COUNT(SUM(-1325202320)) END)) UNION ALL SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((CASE TOTAL(AVG(COUNT(rt0.c2)))  WHEN COUNT(rt0.c0) THEN GROUP_CONCAT(rt0.c0) ELSE COUNT(SUM(-1325202320)) END) ISNULL);
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE (((((rt0.c1)*(rt0.c1))) NOT BETWEEN (UPPER(rt0.c0)) AND (((rt0.c2)>=(rt0.c2))))) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (((((rt0.c1)*(rt0.c1))) NOT BETWEEN (UPPER(rt0.c0)) AND (((rt0.c2)>=(rt0.c2))))))) UNION ALL SELECT ALL * FROM rt0 WHERE (((((((rt0.c1)*(rt0.c1))) NOT BETWEEN (UPPER(rt0.c0)) AND (((rt0.c2)>=(rt0.c2))))) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c2 FROM rt0 WHERE (((CAST(rt0.c2 AS TEXT))<>(((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c0))))) UNION SELECT DISTINCT rt0.c2 FROM rt0 WHERE ((NOT (((CAST(rt0.c2 AS TEXT))!=(((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c0))))))) UNION SELECT DISTINCT rt0.c2 FROM rt0 WHERE (((((CAST(rt0.c2 AS TEXT))!=(((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c0))))) ISNULL));
SELECT DISTINCT rt0.c2 FROM rt0;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((((- (rt0.c2)))>=(rt0.c0))) GROUP BY rt0.c2, rt0.c1, rt0.c0 UNION SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT ((((- (rt0.c2)))>=(rt0.c0))))) GROUP BY rt0.c2, rt0.c1, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((((((- (rt0.c2)))>=(rt0.c0))) ISNULL)) GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 NOT INDEXED GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING COUNT(*) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 NOT INDEXED GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING COUNT(*) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 NOT INDEXED GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE (CAST(((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2)) AS TEXT)) UNION ALL SELECT * FROM rt0 WHERE ((NOT (CAST(((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2)) AS TEXT)))) UNION ALL SELECT ALL * FROM rt0 WHERE (((CAST(((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2)) AS TEXT)) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c1 FROM rt0 WHERE ((+ (rt0.c0 COLLATE NOCASE))) UNION SELECT DISTINCT rt0.c1 FROM rt0 WHERE ((NOT ((+ (rt0.c0 COLLATE NOCASE))))) UNION SELECT DISTINCT rt0.c1 FROM rt0 WHERE ((((+ (rt0.c0 COLLATE NOCASE))) ISNULL));
SELECT DISTINCT rt0.c1 FROM rt0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((1889490976 IN ())) GROUP BY rt0.c1, rt0.c2, rt0.c0 UNION SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT ((1889490976 IN ())))) GROUP BY rt0.c1, rt0.c2, rt0.c0 UNION SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((((1889490976 IN ())) ISNULL)) GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING AVG((- (TOTAL(GROUP_CONCAT(COUNT(*)))))) UNION ALL SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (NOT (AVG((- (TOTAL(GROUP_CONCAT(COUNT(*)))))))) UNION ALL SELECT rt0.c0 FROM rt0 NOT INDEXED GROUP BY rt0.c0 HAVING ((AVG((- (TOTAL(GROUP_CONCAT(COUNT(*))))))) ISNULL);
SELECT rt0.c1 FROM rt0;
SELECT ALL rt0.c1 FROM rt0 WHERE (((((((((((((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0)))OR(((((x'')OR(rt0.c1)))AND(rt0.c2)))))OR(CASE rt0.c0  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c0 END)))OR((rt0.c2 IN ()))))AND(x'd0e0')))OR((rt0.c0 IN (rt0.c0)))))OR(((((rt0.c0)AND(rt0.c2)))OR(rt0.c0))))) UNION ALL SELECT ALL rt0.c1 FROM rt0 WHERE ((NOT (((((((((((((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0)))OR(((((x'')OR(rt0.c1)))AND(rt0.c2)))))OR(CASE rt0.c0  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c0 END)))OR((rt0.c2 IN ()))))AND(x'd0e0')))OR((rt0.c0 IN (rt0.c0)))))OR(((((rt0.c0)AND(rt0.c2)))OR(rt0.c0))))))) UNION ALL SELECT ALL rt0.c1 FROM rt0 WHERE (((((((((((((((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0)))OR(((((x'')OR(rt0.c1)))AND(rt0.c2)))))OR(CASE rt0.c0  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c0 END)))OR((rt0.c2 IN ()))))AND(x'd0e0')))OR((rt0.c0 IN (rt0.c0)))))OR(((((rt0.c0)AND(rt0.c2)))OR(rt0.c0))))) ISNULL));
SELECT rt0.c1 FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c2)) COLLATE BINARY) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c2)) COLLATE BINARY))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c2)) COLLATE BINARY) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 WHERE (((+ (rt0.c0)) IN ())) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0 WHERE ((NOT (((+ (rt0.c0)) IN ())))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0 WHERE (((((+ (rt0.c0)) IN ())) ISNULL)) GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING (((rt0.c0 IN ()))GLOB((+ (2105403827)))) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING (NOT ((((rt0.c0 IN ()))GLOB((+ (2105403827)))))) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING (((((rt0.c0 IN ()))GLOB((+ (2105403827))))) ISNULL);
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING (((rt0.c0 IN ()))GLOB((+ (2105403827)))) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING (NOT ((((rt0.c0 IN ()))GLOB((+ (2105403827)))))) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING (((((rt0.c0 IN ()))GLOB((+ (2105403827))))) ISNULL);
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL * FROM rt0;
SELECT * FROM rt0 WHERE (CASE ((rt0.c1) NOT BETWEEN (x'') AND (rt0.c0))  WHEN CASE 0xffffffffe92948da  WHEN rt0.c0 THEN rt0.c0 END THEN NULL END) UNION ALL SELECT * FROM rt0 WHERE ((NOT (CASE ((rt0.c1) NOT BETWEEN (x'') AND (rt0.c0))  WHEN CASE 0Xffffffffe92948da  WHEN rt0.c0 THEN rt0.c0 END THEN NULL END))) UNION ALL SELECT * FROM rt0 WHERE (((CASE ((rt0.c1) NOT BETWEEN (x'') AND (rt0.c0))  WHEN CASE 0xffffffffe92948da  WHEN rt0.c0 THEN rt0.c0 END THEN NULL END) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (x'') UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (x''))) UNION SELECT DISTINCT * FROM rt0 WHERE (((x'') ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c2 FROM rt0 WHERE (((rt0.c2)+(((rt0.c2)<(rt0.c0))))) GROUP BY rt0.c0, rt0.c2 UNION SELECT rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (((rt0.c2)+(((rt0.c2)<(rt0.c0))))))) GROUP BY rt0.c0, rt0.c2 UNION SELECT rt0.c0, rt0.c2 FROM rt0 WHERE (((((rt0.c2)+(((rt0.c2)<(rt0.c0))))) ISNULL)) GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (((AVG(TOTAL(rt0.c0))))==((-1561203552))) UNION ALL SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (NOT ((((AVG(TOTAL(rt0.c0))))=((-1561203552))))) UNION ALL SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (((((AVG(TOTAL(rt0.c0))))==((-1561203552)))) ISNULL);
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE (((((rt0.c2 COLLATE BINARY)AND(((rt0.c0)-(rt0.c1)))))AND((rt0.c1 IN ())))) UNION ALL SELECT * FROM rt0 WHERE ((NOT (((((rt0.c2 COLLATE BINARY)AND(((rt0.c0)-(rt0.c1)))))AND((rt0.c1 IN ())))))) UNION ALL SELECT ALL * FROM rt0 WHERE (((((((rt0.c2 COLLATE BINARY)AND(((rt0.c0)-(rt0.c1)))))AND((rt0.c1 IN ())))) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((('-1976829744' IN ())) IS TRUE)) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((('-1976829744' IN ())) IS TRUE)))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((('-1976829744' IN ())) IS TRUE)) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c1 FROM rt0 WHERE (((((NULL) NOT BETWEEN (rt0.c0) AND (rt0.c1)))=((rt0.c0 IN ())))) GROUP BY rt0.c0, rt0.c1 UNION SELECT rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (((((NULL) NOT BETWEEN (rt0.c0) AND (rt0.c1)))==((rt0.c0 IN ())))))) GROUP BY rt0.c0, rt0.c1 UNION SELECT rt0.c0, rt0.c1 FROM rt0 WHERE (((((((NULL) NOT BETWEEN (rt0.c0) AND (rt0.c1)))=((rt0.c0 IN ())))) ISNULL)) GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING UPPER(DISTINCT TOTAL(SUM(rt0.c1))) UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT (UPPER(DISTINCT TOTAL(SUM(rt0.c1))))) UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING ((UPPER(DISTINCT TOTAL(SUM(rt0.c1)))) ISNULL);
SELECT ALL rt0.c2 FROM rt0;
SELECT ALL rt0.c2 FROM rt0 WHERE (((CASE rt0.c0  WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END)||((((rt0.c1))<((rt0.c0)))))) UNION ALL SELECT rt0.c2 FROM rt0 WHERE ((NOT (((CASE rt0.c0  WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END)||((((rt0.c1))<((rt0.c0)))))))) UNION ALL SELECT rt0.c2 FROM rt0 WHERE (((((CASE rt0.c0  WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END)||((((rt0.c1))<((rt0.c0)))))) ISNULL));
SELECT ALL rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0 WHERE (((((CAST(rt0.c2 AS BLOB))OR(((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1)))))AND(((((rt0.c1)AND(rt0.c2)))OR(rt0.c2))))) UNION SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (((((CAST(rt0.c2 AS BLOB))OR(((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1)))))AND(((((rt0.c1)AND(rt0.c2)))OR(rt0.c2))))))) UNION SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0 WHERE (((((((CAST(rt0.c2 AS BLOB))OR(((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1)))))AND(((((rt0.c1)AND(rt0.c2)))OR(rt0.c2))))) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0;
SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 WHERE (((CASE WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END) NOTNULL)) GROUP BY rt0.c1, rt0.c0 UNION SELECT rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (((CASE WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END) NOTNULL)))) GROUP BY rt0.c1, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c0 FROM rt0 WHERE (((((CASE WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END) NOTNULL)) ISNULL)) GROUP BY rt0.c1, rt0.c0;
SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING COUNT(COUNT(GROUP_CONCAT(GROUP_CONCAT(rt0.c0)))) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING (NOT (COUNT(COUNT(GROUP_CONCAT(GROUP_CONCAT(rt0.c0)))))) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING ((COUNT(COUNT(GROUP_CONCAT(GROUP_CONCAT(rt0.c0))))) ISNULL);
SELECT ALL rt0.c1, rt0.c2 FROM rt0;
SELECT rt0.c1, rt0.c2 FROM rt0 WHERE (((((((rt0.c1)OR(rt0.c1)))OR(rt0.c2))) NOT BETWEEN (rt0.c0 COLLATE RTRIM) AND (((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c2))))) UNION ALL SELECT rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (((((((rt0.c1)OR(rt0.c1)))OR(rt0.c2))) NOT BETWEEN (rt0.c0 COLLATE RTRIM) AND (((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c2))))))) UNION ALL SELECT rt0.c1, rt0.c2 FROM rt0 WHERE (((((((((rt0.c1)OR(rt0.c1)))OR(rt0.c2))) NOT BETWEEN (rt0.c0 COLLATE RTRIM) AND (((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c2))))) ISNULL));
SELECT ALL rt0.c1, rt0.c2 FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((((((rt0.c0)OR(rt0.c2)))OR(rt0.c0)))>=((+ (rt0.c0))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((((((rt0.c0)OR(rt0.c2)))OR(rt0.c0)))>=((+ (rt0.c0))))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((((((rt0.c0)OR(rt0.c2)))OR(rt0.c0)))>=((+ (rt0.c0))))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE (((((((((((((rt0.c1)OR(rt0.c2)))AND(rt0.c0)))OR(((((rt0.c1)AND(rt0.c0)))AND(rt0.c2)))))OR(((rt0.c1)+(rt0.c0)))))OR(((((((((rt0.c2)OR(rt0.c2)))AND(0.7906755204464289)))OR(rt0.c0)))OR(rt0.c0)))))OR(((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0))))) GROUP BY rt0.c0, rt0.c1, rt0.c2 UNION SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (((((((((((((rt0.c1)OR(rt0.c2)))AND(rt0.c0)))OR(((((rt0.c1)AND(rt0.c0)))AND(rt0.c2)))))OR(((rt0.c1)+(rt0.c0)))))OR(((((((((rt0.c2)OR(rt0.c2)))AND(0.7906755204464289)))OR(rt0.c0)))OR(rt0.c0)))))OR(((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0))))))) GROUP BY rt0.c0, rt0.c1, rt0.c2 UNION SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE (((((((((((((((rt0.c1)OR(rt0.c2)))AND(rt0.c0)))OR(((((rt0.c1)AND(rt0.c0)))AND(rt0.c2)))))OR(((rt0.c1)+(rt0.c0)))))OR(((((((((rt0.c2)OR(rt0.c2)))AND(0.7906755204464289)))OR(rt0.c0)))OR(rt0.c0)))))OR(((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0))))) ISNULL)) GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING COUNT(*) UNION ALL SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING COUNT(*) UNION ALL SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT ALL * FROM rt0;
SELECT * FROM rt0 WHERE (((((rt0.c1) NOT BETWEEN (0x78040bc5) AND (rt0.c1))) NOT BETWEEN (LTRIM(rt0.c2)) AND ((rt0.c1 IN ())))) UNION ALL SELECT * FROM rt0 WHERE ((NOT (((((rt0.c1) NOT BETWEEN (0X78040bc5) AND (rt0.c1))) NOT BETWEEN (LTRIM(rt0.c2)) AND ((rt0.c1 IN ())))))) UNION ALL SELECT * FROM rt0 WHERE (((((((rt0.c1) NOT BETWEEN (0x78040bc5) AND (rt0.c1))) NOT BETWEEN (LTRIM(rt0.c2)) AND ((rt0.c1 IN ())))) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0 WHERE (CASE WHEN (~ (rt0.c0)) THEN 0.36378084162180035 ELSE rt0.c2 END) UNION SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (CASE WHEN (~ (rt0.c0)) THEN 0.36378084162180035 ELSE rt0.c2 END))) UNION SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0 WHERE (((CASE WHEN (~ (rt0.c0)) THEN 0.36378084162180035 ELSE rt0.c2 END) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((((rt0.c2, rt0.c1, rt0.c0)) BETWEEN ((((rt0.c1) NOTNULL), ((rt0.c1)<<(rt0.c1)), JULIANDAY(rt0.c0, rt0.c0, rt0.c2))) AND (((((rt0.c1))>(('-1156936117'))), ((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c0)), rt0.c1 COLLATE RTRIM)))) GROUP BY rt0.c2, rt0.c1, rt0.c0 UNION SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT ((((rt0.c2, rt0.c1, rt0.c0)) BETWEEN ((((rt0.c1) NOTNULL), ((rt0.c1)<<(rt0.c1)), JULIANDAY(rt0.c0, rt0.c0, rt0.c2))) AND (((((rt0.c1))>(('-1156936117'))), ((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c0)), rt0.c1 COLLATE RTRIM)))))) GROUP BY rt0.c2, rt0.c1, rt0.c0 UNION SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((((((rt0.c2, rt0.c1, rt0.c0)) BETWEEN ((((rt0.c1) NOTNULL), ((rt0.c1)<<(rt0.c1)), JULIANDAY(rt0.c0, rt0.c0, rt0.c2))) AND (((((rt0.c1))>(('-1156936117'))), ((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c0)), rt0.c1 COLLATE RTRIM)))) ISNULL)) GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((((((((SUM(COUNT(rt0.c1)))OR(TOTAL(COUNT(*)))))OR(MAX(rt0.c0))))AND(GROUP_CONCAT(rt0.c0))))AND(0.7758669709511946)) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT (((((((((SUM(COUNT(rt0.c1)))OR(TOTAL(COUNT(*)))))OR(MAX(rt0.c0))))AND(GROUP_CONCAT(rt0.c0))))AND(0.7758669709511946)))) UNION ALL SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((((((((((SUM(COUNT(rt0.c1)))OR(TOTAL(COUNT(*)))))OR(MAX(rt0.c0))))AND(GROUP_CONCAT(rt0.c0))))AND(0.7758669709511946))) ISNULL);
SELECT SUM(((((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1)))%(rt0.c2))) FROM rt0 ORDER BY rt0.c2  NULLS FIRST;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE (((((((((((((rt0.c2)AND(NULL)))OR(rt0.c1)))AND((((x'')) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0))))))AND(LOWER(rt0.c2))))AND(((rt0.c1) NOT NULL))))AND(CAST(rt0.c0 AS INTEGER)))) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (((((((((((((rt0.c2)AND(NULL)))OR(rt0.c1)))AND((((x'')) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0))))))AND(LOWER(rt0.c2))))AND(((rt0.c1) NOT NULL))))AND(CAST(rt0.c0 AS INTEGER)))))) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE (((((((((((((((rt0.c2)AND(NULL)))OR(rt0.c1)))AND((((x'')) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0))))))AND(LOWER(rt0.c2))))AND(((rt0.c1) NOT NULL))))AND(CAST(rt0.c0 AS INTEGER)))) ISNULL));
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((((rt0.c2 COLLATE RTRIM))<=((rt0.c2)))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((((rt0.c2 COLLATE RTRIM))<=((rt0.c2)))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((((rt0.c2 COLLATE RTRIM))<=((rt0.c2)))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 WHERE (((((rt0.c2)%(rt0.c0)))>=((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c2)))))) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM rt0 WHERE ((NOT (((((rt0.c2)%(rt0.c0)))>=((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c2)))))))) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM rt0 WHERE (((((((rt0.c2)%(rt0.c0)))>=((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c2)))))) ISNULL)) GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING TOTAL((NOT (rt0.c0))) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT (TOTAL((NOT (rt0.c0))))) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((TOTAL((NOT (rt0.c0)))) ISNULL);
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING TOTAL((NOT (rt0.c0))) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT (TOTAL((NOT (rt0.c0))))) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((TOTAL((NOT (rt0.c0)))) ISNULL);
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL * FROM rt0;
SELECT * FROM rt0 WHERE (((((0.9322901390418958)&(rt0.c0))) IS TRUE)) UNION ALL SELECT * FROM rt0 WHERE ((NOT (((((0.9322901390418958)&(rt0.c0))) IS TRUE)))) UNION ALL SELECT ALL * FROM rt0 WHERE (((((((0.9322901390418958)&(rt0.c0))) IS TRUE)) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((((('1670156376')AND(0.24033805192253244)))AND(CAST(rt0.c1 AS NUMERIC)))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((((('1670156376')AND(0.24033805192253244)))AND(CAST(rt0.c1 AS NUMERIC)))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((((('1670156376')AND(0.24033805192253244)))AND(CAST(rt0.c1 AS NUMERIC)))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 WHERE (json_type(((rt0.c1)LIKE(rt0.c2)))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0 WHERE ((NOT (json_type(((rt0.c1)LIKE(rt0.c2)))))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0 WHERE (((json_type(((rt0.c1)LIKE(rt0.c2)))) ISNULL)) GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING ((((rt0.c1)<<(GROUP_CONCAT(rt0.c1)))) IS TRUE) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING (NOT (((((rt0.c1)<<(GROUP_CONCAT(rt0.c1)))) IS TRUE))) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING ((((((rt0.c1)<<(GROUP_CONCAT(rt0.c1)))) IS TRUE)) ISNULL);
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING ((((rt0.c1)<<(GROUP_CONCAT(rt0.c1)))) IS TRUE) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING (NOT (((((rt0.c1)<<(GROUP_CONCAT(rt0.c1)))) IS TRUE))) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING ((((((rt0.c1)<<(GROUP_CONCAT(rt0.c1)))) IS TRUE)) ISNULL);
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT ALL rt0.c0, rt0.c1 FROM rt0;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (CASE rt0.c2  WHEN rt0.c2 THEN rt0.c2 WHEN '-1701713357' THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 END))) UNION ALL SELECT rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT ((NOT (CASE rt0.c2  WHEN rt0.c2 THEN rt0.c2 WHEN '-1701713357' THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 END))))) UNION ALL SELECT rt0.c0, rt0.c1 FROM rt0 WHERE ((((NOT (CASE rt0.c2  WHEN rt0.c2 THEN rt0.c2 WHEN '-1701713357' THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 END))) ISNULL));
SELECT ALL rt0.c0, rt0.c1 FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((((((rt0.c0 IN ()))AND(rt0.c1 COLLATE BINARY)))OR(rt0.c2 COLLATE NOCASE))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((((((rt0.c0 IN ()))AND(rt0.c1 COLLATE BINARY)))OR(rt0.c2 COLLATE NOCASE))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((((((rt0.c0 IN ()))AND(rt0.c1 COLLATE BINARY)))OR(rt0.c2 COLLATE NOCASE))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 WHERE ((('-715370166') BETWEEN (((((rt0.c0)OR(rt0.c2)))OR(rt0.c1))) AND ((x'5136' IN ())))) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM rt0 WHERE ((NOT ((('-715370166') BETWEEN (((((rt0.c0)OR(rt0.c2)))OR(rt0.c1))) AND ((x'5136' IN ())))))) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM rt0 WHERE ((((('-715370166') BETWEEN (((((rt0.c0)OR(rt0.c2)))OR(rt0.c1))) AND ((x'5136' IN ())))) ISNULL)) GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING SUM(((COUNT(*))+(rt0.c1))) UNION ALL SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING (NOT (SUM(((COUNT(*))+(rt0.c1))))) UNION ALL SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING ((SUM(((COUNT(*))+(rt0.c1)))) ISNULL);
SELECT rt0.c2 FROM rt0;
SELECT ALL rt0.c2 FROM rt0 WHERE ((((rt0.c0, rt0.c2, rt0.c1)) NOT BETWEEN ((((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c1)), CAST(rt0.c1 AS REAL), ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c0)))) AND ((((rt0.c1)%(rt0.c1)), rt0.c0 COLLATE NOCASE, rt0.c2 COLLATE NOCASE)))) UNION ALL SELECT ALL rt0.c2 FROM rt0 WHERE ((NOT ((((rt0.c0, rt0.c2, rt0.c1)) NOT BETWEEN ((((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c1)), CAST(rt0.c1 AS REAL), ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c0)))) AND ((((rt0.c1)%(rt0.c1)), rt0.c0 COLLATE NOCASE, rt0.c2 COLLATE NOCASE)))))) UNION ALL SELECT ALL rt0.c2 FROM rt0 WHERE ((((((rt0.c0, rt0.c2, rt0.c1)) NOT BETWEEN ((((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c1)), CAST(rt0.c1 AS REAL), ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c0)))) AND ((((rt0.c1)%(rt0.c1)), rt0.c0 COLLATE NOCASE, rt0.c2 COLLATE NOCASE)))) ISNULL));
SELECT rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0 WHERE (((CAST(rt0.c0 AS BLOB)) BETWEEN (((((((((rt0.c0)OR('-715370166')))OR(rt0.c1)))AND(rt0.c0)))AND(rt0.c2))) AND (((rt0.c0)OR(rt0.c0))))) UNION SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (((CAST(rt0.c0 AS BLOB)) BETWEEN (((((((((rt0.c0)OR('-715370166')))OR(rt0.c1)))AND(rt0.c0)))AND(rt0.c2))) AND (((rt0.c0)OR(rt0.c0))))))) UNION SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0 WHERE (((((CAST(rt0.c0 AS BLOB)) BETWEEN (((((((((rt0.c0)OR('-715370166')))OR(rt0.c1)))AND(rt0.c0)))AND(rt0.c2))) AND (((rt0.c0)OR(rt0.c0))))) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE (CASE STRFTIME(rt0.c1, rt0.c0, NULL, rt0.c2, rt0.c1)  WHEN ((rt0.c0)IS NOT(rt0.c1)) THEN ((rt0.c0) IS TRUE) WHEN CAST(rt0.c2 AS INTEGER) THEN ((rt0.c0) NOT NULL) WHEN rt0.c2 THEN CAST(rt0.c0 AS INTEGER) ELSE ((((rt0.c2)AND(NULL)))OR(rt0.c2)) END) GROUP BY rt0.c0, rt0.c2, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (CASE STRFTIME(rt0.c1, rt0.c0, NULL, rt0.c2, rt0.c1)  WHEN ((rt0.c0)IS NOT(rt0.c1)) THEN ((rt0.c0) IS TRUE) WHEN CAST(rt0.c2 AS INTEGER) THEN ((rt0.c0) NOT NULL) WHEN rt0.c2 THEN CAST(rt0.c0 AS INTEGER) ELSE ((((rt0.c2)AND(NULL)))OR(rt0.c2)) END))) GROUP BY rt0.c0, rt0.c2, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE (((CASE STRFTIME(rt0.c1, rt0.c0, NULL, rt0.c2, rt0.c1)  WHEN ((rt0.c0)IS NOT(rt0.c1)) THEN ((rt0.c0) IS TRUE) WHEN CAST(rt0.c2 AS INTEGER) THEN ((rt0.c0) NOT NULL) WHEN rt0.c2 THEN CAST(rt0.c0 AS INTEGER) ELSE ((((rt0.c2)AND(NULL)))OR(rt0.c2)) END) ISNULL)) GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING MAX(COUNT(*)) UNION ALL SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING (NOT (MAX(COUNT(*)))) UNION ALL SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING ((MAX(COUNT(*))) ISNULL);
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE (((((rt0.c0)AND(rt0.c0))) IS FALSE)) UNION ALL SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (((((rt0.c0)AND(rt0.c0))) IS FALSE)))) UNION ALL SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE (((((((rt0.c0)AND(rt0.c0))) IS FALSE)) ISNULL));
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (CAST(TRIM(DISTINCT rt0.c0, rt0.c1) AS BLOB)) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (CAST(TRIM(DISTINCT rt0.c0, rt0.c1) AS BLOB)))) UNION SELECT DISTINCT * FROM rt0 WHERE (((CAST(TRIM(DISTINCT rt0.c0, rt0.c1) AS BLOB)) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 WHERE (rt0.c2) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0 WHERE ((NOT (rt0.c2))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0 WHERE (((rt0.c2) ISNULL)) GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING (((MAX(rt0.c2), rt0.c1, rt0.c0)) BETWEEN ((x'', AVG(COUNT(*)), ((rt0.c1) BETWEEN (AVG(MIN(rt0.c0))) AND (rt0.c1)))) AND ((MAX(rt0.c2), SUM(MIN(rt0.c2)), TOTAL(rt0.c0)))) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING (NOT ((((MAX(rt0.c2), rt0.c1, rt0.c0)) BETWEEN ((x'', AVG(COUNT(*)), ((rt0.c1) BETWEEN (AVG(MIN(rt0.c0))) AND (rt0.c1)))) AND ((MAX(rt0.c2), SUM(MIN(rt0.c2)), TOTAL(rt0.c0)))))) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING (((((MAX(rt0.c2), rt0.c1, rt0.c0)) BETWEEN ((x'', AVG(COUNT(*)), ((rt0.c1) BETWEEN (AVG(MIN(rt0.c0))) AND (rt0.c1)))) AND ((MAX(rt0.c2), SUM(MIN(rt0.c2)), TOTAL(rt0.c0))))) ISNULL);
SELECT rt0.c0 FROM rt0;
SELECT ALL rt0.c0 FROM rt0 NOT INDEXED WHERE (((rt0.c2 COLLATE RTRIM) BETWEEN ((NOT (rt0.c2))) AND (rt0.c0))) UNION ALL SELECT rt0.c0 FROM rt0 WHERE ((NOT (((rt0.c2 COLLATE RTRIM) BETWEEN ((NOT (rt0.c2))) AND (rt0.c0))))) UNION ALL SELECT rt0.c0 FROM rt0 WHERE (((((rt0.c2 COLLATE RTRIM) BETWEEN ((NOT (rt0.c2))) AND (rt0.c0))) ISNULL));
SELECT rt0.c0 FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (rt0.c2) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (rt0.c2))) UNION SELECT DISTINCT * FROM rt0 WHERE (((rt0.c2) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 WHERE ((((rt0.c1, rt0.c0, rt0.c0)) NOT BETWEEN ((((rt0.c2) ISNULL), CAST(rt0.c1 AS REAL), (- (rt0.c0)))) AND ((((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c1)), (rt0.c2 IN ()), CASE WHEN 0x4cdabb35 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 WHEN '-715370166' THEN rt0.c0 ELSE rt0.c2 END)))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0 WHERE ((NOT ((((rt0.c1, rt0.c0, rt0.c0)) NOT BETWEEN ((((rt0.c2) ISNULL), CAST(rt0.c1 AS REAL), (- (rt0.c0)))) AND ((((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c1)), (rt0.c2 IN ()), CASE WHEN 0X4cdabb35 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 WHEN '-715370166' THEN rt0.c0 ELSE rt0.c2 END)))))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0 WHERE ((((((rt0.c1, rt0.c0, rt0.c0)) NOT BETWEEN ((((rt0.c2) ISNULL), CAST(rt0.c1 AS REAL), (- (rt0.c0)))) AND ((((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c1)), (rt0.c2 IN ()), CASE WHEN 0X4cdabb35 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 WHEN '-715370166' THEN rt0.c0 ELSE rt0.c2 END)))) ISNULL)) GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING AVG(TOTAL(TOTAL(0.7274148085927133))) UNION ALL SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING (NOT (AVG(TOTAL(TOTAL(0.7274148085927133))))) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING ((AVG(TOTAL(TOTAL(0.7274148085927133)))) ISNULL);
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE (((CASE WHEN rt0.c0 THEN 'yQ{}' ELSE rt0.c2 END) NOT NULL)) UNION ALL SELECT * FROM rt0 WHERE ((NOT (((CASE WHEN rt0.c0 THEN 'yQ{}' ELSE rt0.c2 END) NOT NULL)))) UNION ALL SELECT ALL * FROM rt0 WHERE (((((CASE WHEN rt0.c0 THEN 'yQ{}' ELSE rt0.c2 END) NOT NULL)) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c0 FROM rt0 WHERE (CASE WHEN CAST(rt0.c0 AS NUMERIC) THEN ((rt0.c1)<('1299236030')) WHEN x'018c' COLLATE NOCASE THEN -1701713357 WHEN ((rt0.c0) IS FALSE) THEN (NOT (rt0.c0)) ELSE json_patch(rt0.c1, rt0.c2) END) UNION SELECT DISTINCT rt0.c0 FROM rt0 WHERE ((NOT (CASE WHEN CAST(rt0.c0 AS NUMERIC) THEN ((rt0.c1)<('1299236030')) WHEN x'018c' COLLATE NOCASE THEN -1701713357 WHEN ((rt0.c0) IS FALSE) THEN (NOT (rt0.c0)) ELSE json_patch(rt0.c1, rt0.c2) END))) UNION SELECT DISTINCT rt0.c0 FROM rt0 WHERE (((CASE WHEN CAST(rt0.c0 AS NUMERIC) THEN ((rt0.c1)<('1299236030')) WHEN x'018c' COLLATE NOCASE THEN -1701713357 WHEN ((rt0.c0) IS FALSE) THEN (NOT (rt0.c0)) ELSE json_patch(rt0.c1, rt0.c2) END) ISNULL));
SELECT DISTINCT rt0.c0 FROM rt0;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 WHERE (CAST(0.5948807013760691 COLLATE RTRIM AS TEXT)) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0 WHERE ((NOT (CAST(0.5948807013760691 COLLATE RTRIM AS TEXT)))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0 WHERE (((CAST(0.5948807013760691 COLLATE RTRIM AS TEXT)) ISNULL)) GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING MAX(AVG(rt0.c0)) UNION ALL SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT (MAX(AVG(rt0.c0)))) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((MAX(AVG(rt0.c0))) ISNULL);
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 NOT INDEXED WHERE ((((('')&(rt0.c2))) BETWEEN (((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0))) AND (((((rt0.c2)OR(rt0.c1)))AND(rt0.c0))))) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT ((((('')&(rt0.c2))) BETWEEN (((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0))) AND (((((rt0.c2)OR(rt0.c1)))AND(rt0.c0))))))) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((((((('')&(rt0.c2))) BETWEEN (((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0))) AND (((((rt0.c2)OR(rt0.c1)))AND(rt0.c0))))) ISNULL));
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE (CAST(((((((((rt0.c0)AND(rt0.c0)))AND(rt0.c1)))AND(rt0.c0)))AND(rt0.c2)) AS BLOB)) UNION SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (CAST(((((((((rt0.c0)AND(rt0.c0)))AND(rt0.c1)))AND(rt0.c0)))AND(rt0.c2)) AS BLOB)))) UNION SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE (((CAST(((((((((rt0.c0)AND(rt0.c0)))AND(rt0.c1)))AND(rt0.c0)))AND(rt0.c2)) AS BLOB)) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM rt0;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((~ (((rt0.c0)-(rt0.c2))))) GROUP BY rt0.c1, rt0.c0, rt0.c2 UNION SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 NOT INDEXED WHERE ((NOT ((~ (((rt0.c0)-(rt0.c2))))))) GROUP BY rt0.c1, rt0.c0, rt0.c2 UNION SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((((~ (((rt0.c0)-(rt0.c2))))) ISNULL)) GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING CASE AVG(rt0.c1)  WHEN COUNT(*) THEN COUNT(COUNT(NULL)) ELSE UNLIKELY(DISTINCT rt0.c0) END UNION ALL SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (NOT (CASE AVG(rt0.c1)  WHEN COUNT(*) THEN COUNT(COUNT(NULL)) ELSE UNLIKELY(DISTINCT rt0.c0) END)) UNION ALL SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING ((CASE AVG(rt0.c1)  WHEN COUNT(*) THEN COUNT(COUNT(NULL)) ELSE UNLIKELY(DISTINCT rt0.c0) END) ISNULL);
SELECT TOTAL(CAST(((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c1)) AS BLOB)) FROM rt0;
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE ((+ (rt0.c0)) COLLATE RTRIM) UNION ALL SELECT * FROM rt0 WHERE ((NOT ((+ (rt0.c0)) COLLATE RTRIM))) UNION ALL SELECT ALL * FROM rt0 WHERE ((((+ (rt0.c0)) COLLATE RTRIM) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c1 FROM rt0 WHERE (((LIKELY(rt0.c1))-(((((((((rt0.c0)OR(rt0.c1)))AND(rt0.c2)))AND(rt0.c0)))OR(rt0.c1))))) UNION SELECT DISTINCT rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (((LIKELY(rt0.c1))-(((((((((rt0.c0)OR(rt0.c1)))AND(rt0.c2)))AND(rt0.c0)))OR(rt0.c1))))))) UNION SELECT DISTINCT rt0.c0, rt0.c1 FROM rt0 WHERE (((((LIKELY(rt0.c1))-(((((((((rt0.c0)OR(rt0.c1)))AND(rt0.c2)))AND(rt0.c0)))OR(rt0.c1))))) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c1 FROM rt0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 WHERE (((LIKELIHOOD(rt0.c0, 0.24869126640989303)) NOT NULL)) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM rt0 WHERE ((NOT (((LIKELIHOOD(rt0.c0, 0.24869126640989303)) NOT NULL)))) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM rt0 WHERE (((((LIKELIHOOD(rt0.c0, 0.24869126640989303)) NOT NULL)) ISNULL)) GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING (CASE rt0.c2  WHEN TOTAL(rt0.c0) THEN rt0.c0 ELSE SUM(rt0.c0) END IN ()) UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING (NOT ((CASE rt0.c2  WHEN TOTAL(rt0.c0) THEN rt0.c0 ELSE SUM(rt0.c0) END IN ()))) UNION ALL SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING (((CASE rt0.c2  WHEN TOTAL(rt0.c0) THEN rt0.c0 ELSE SUM(rt0.c0) END IN ())) ISNULL);
SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING (CASE rt0.c2  WHEN TOTAL(rt0.c0) THEN rt0.c0 ELSE SUM(rt0.c0) END IN ()) UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING (NOT ((CASE rt0.c2  WHEN TOTAL(rt0.c0) THEN rt0.c0 ELSE SUM(rt0.c0) END IN ()))) UNION ALL SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING (((CASE rt0.c2  WHEN TOTAL(rt0.c0) THEN rt0.c0 ELSE SUM(rt0.c0) END IN ())) ISNULL);
SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE (UNLIKELY(rt0.c0) COLLATE BINARY) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (UNLIKELY(rt0.c0) COLLATE BINARY))) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE (((UNLIKELY(rt0.c0) COLLATE BINARY) ISNULL));
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((rt0.c0 COLLATE BINARY) ISNULL)) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((rt0.c0 COLLATE BINARY) ISNULL)))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((rt0.c0 COLLATE BINARY) ISNULL)) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 WHERE (((((((((((0.6145052749370362)AND(rt0.c0)))AND(rt0.c1)))OR(rt0.c0)))OR(rt0.c2))) IS TRUE)) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0 WHERE ((NOT (((((((((((0.6145052749370362)AND(rt0.c0)))AND(rt0.c1)))OR(rt0.c0)))OR(rt0.c2))) IS TRUE)))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0 WHERE (((((((((((((0.6145052749370362)AND(rt0.c0)))AND(rt0.c1)))OR(rt0.c0)))OR(rt0.c2))) IS TRUE)) ISNULL)) GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING MIN(TOTAL(AVG(MAX(AVG(rt0.c2))))) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING (NOT (MIN(TOTAL(AVG(MAX(AVG(rt0.c2))))))) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING ((MIN(TOTAL(AVG(MAX(AVG(rt0.c2)))))) ISNULL);
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE ((rt0.c0 COLLATE RTRIM IN ())) UNION ALL SELECT * FROM rt0 WHERE ((NOT ((rt0.c0 COLLATE RTRIM IN ())))) UNION ALL SELECT ALL * FROM rt0 WHERE ((((rt0.c0 COLLATE RTRIM IN ())) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (rt0.c1) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (rt0.c1))) UNION SELECT DISTINCT * FROM rt0 WHERE (((rt0.c1) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM rt0 WHERE (rt0.c1) GROUP BY rt0.c2, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (rt0.c1))) GROUP BY rt0.c2, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c0 FROM rt0 WHERE (((rt0.c1) ISNULL)) GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING (+ (CASE COUNT(*)  WHEN rt0.c1 THEN AVG(AVG(TOTAL(rt0.c1))) ELSE AVG(COUNT(rt0.c2)) END)) UNION ALL SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING (NOT ((+ (CASE COUNT(*)  WHEN rt0.c1 THEN AVG(AVG(TOTAL(rt0.c1))) ELSE AVG(COUNT(rt0.c2)) END)))) UNION ALL SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING (((+ (CASE COUNT(*)  WHEN rt0.c1 THEN AVG(AVG(TOTAL(rt0.c1))) ELSE AVG(COUNT(rt0.c2)) END))) ISNULL);
SELECT MAX((CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c2 END IN ((rt0.c0 IN ())))) FROM rt0;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((((+ (0Xffffffffa859e429))) NOT BETWEEN (rt0.c1 COLLATE NOCASE) AND (((rt0.c1)*(rt0.c0))))) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT ((((+ (0xffffffffa859e429))) NOT BETWEEN (rt0.c1 COLLATE NOCASE) AND (((rt0.c1)*(rt0.c0))))))) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((((((+ (0xffffffffa859e429))) NOT BETWEEN (rt0.c1 COLLATE NOCASE) AND (((rt0.c1)*(rt0.c0))))) ISNULL));
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c1 FROM rt0 WHERE (CAST(((rt0.c0)*(rt0.c0)) AS TEXT)) UNION SELECT DISTINCT rt0.c1 FROM rt0 WHERE ((NOT (CAST(((rt0.c0)*(rt0.c0)) AS TEXT)))) UNION SELECT DISTINCT rt0.c1 FROM rt0 WHERE (((CAST(((rt0.c0)*(rt0.c0)) AS TEXT)) ISNULL));
SELECT DISTINCT rt0.c1 FROM rt0;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((((- (rt0.c0))) IS TRUE)) GROUP BY rt0.c0, rt0.c2, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT ((((- (rt0.c0))) IS TRUE)))) GROUP BY rt0.c0, rt0.c2, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((((((- (rt0.c0))) IS TRUE)) ISNULL)) GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING TOTAL(SUM(rt0.c0)) UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING (NOT (TOTAL(SUM(rt0.c0)))) UNION ALL SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING ((TOTAL(SUM(rt0.c0))) ISNULL);
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE (load_extension(((((rt0.c1)OR(rt0.c1)))OR(rt0.c2)))) UNION ALL SELECT * FROM rt0 WHERE ((NOT (load_extension(((((rt0.c1)OR(rt0.c1)))OR(rt0.c2)))))) UNION ALL SELECT ALL * FROM rt0 WHERE (((load_extension(((((rt0.c1)OR(rt0.c1)))OR(rt0.c2)))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((CASE rt0.c2  WHEN rt0.c0 THEN rt0.c1 END) NOT BETWEEN (((((((((x'df52')OR(rt0.c0)))AND(NULL)))AND(rt0.c0)))AND(NULL))) AND (TYPEOF(rt0.c2)))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((CASE rt0.c2  WHEN rt0.c0 THEN rt0.c1 END) NOT BETWEEN (((((((((x'df52')OR(rt0.c0)))AND(NULL)))AND(rt0.c0)))AND(NULL))) AND (TYPEOF(rt0.c2)))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((CASE rt0.c2  WHEN rt0.c0 THEN rt0.c1 END) NOT BETWEEN (((((((((x'df52')OR(rt0.c0)))AND(NULL)))AND(rt0.c0)))AND(NULL))) AND (TYPEOF(rt0.c2)))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c2, rt0.c1 FROM rt0 WHERE (((rt0.c1 COLLATE NOCASE) BETWEEN (CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN x'77e6' ELSE rt0.c1 END) AND (((rt0.c2)GLOB(rt0.c1))))) GROUP BY rt0.c2, rt0.c1 UNION SELECT rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (((rt0.c1 COLLATE NOCASE) BETWEEN (CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN x'77e6' ELSE rt0.c1 END) AND (((rt0.c2)GLOB(rt0.c1))))))) GROUP BY rt0.c2, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c1 FROM rt0 WHERE (((((rt0.c1 COLLATE NOCASE) BETWEEN (CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN x'77e6' ELSE rt0.c1 END) AND (((rt0.c2)GLOB(rt0.c1))))) ISNULL)) GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING (TRIM(rt0.c0) IN ()) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING (NOT ((TRIM(rt0.c0) IN ()))) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING (((TRIM(rt0.c0) IN ())) ISNULL);
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING (TRIM(rt0.c0) IN ()) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING (NOT ((TRIM(rt0.c0) IN ()))) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING (((TRIM(rt0.c0) IN ())) ISNULL);
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE (0.630479720049638) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (0.630479720049638))) UNION ALL SELECT * FROM rt0 WHERE (((0.630479720049638) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (CASE WHEN LOWER(rt0.c1) THEN ((rt0.c0) IS TRUE) ELSE (rt0.c1 IN ()) END) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (CASE WHEN LOWER(rt0.c1) THEN ((rt0.c0) IS TRUE) ELSE (rt0.c1 IN ()) END))) UNION SELECT DISTINCT * FROM rt0 WHERE (((CASE WHEN LOWER(rt0.c1) THEN ((rt0.c0) IS TRUE) ELSE (rt0.c1 IN ()) END) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 WHERE (CAST(((rt0.c0) ISNULL) AS TEXT)) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0 WHERE ((NOT (CAST(((rt0.c0) ISNULL) AS TEXT)))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0 WHERE (((CAST(((rt0.c0) ISNULL) AS TEXT)) ISNULL)) GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING AVG(CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c1 END) UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT (AVG(CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c1 END))) UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING ((AVG(CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c1 END)) ISNULL);
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING AVG(CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c1 END) UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT (AVG(CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c1 END))) UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING ((AVG(CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c1 END)) ISNULL);
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE ((- ((- (rt0.c0))))) UNION ALL SELECT * FROM rt0 WHERE ((NOT ((- ((- (rt0.c0))))))) UNION ALL SELECT * FROM rt0 WHERE ((((- ((- (rt0.c0))))) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE (LTRIM(rt0.c0 COLLATE NOCASE)) UNION SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (LTRIM(rt0.c0 COLLATE NOCASE)))) UNION SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE (((LTRIM(rt0.c0 COLLATE NOCASE)) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0 FROM rt0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 WHERE (IFNULL(DISTINCT rt0.c0, '	_3	r')) GROUP BY rt0.c2, rt0.c0 UNION SELECT rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (IFNULL(DISTINCT rt0.c0, '	_3	r')))) GROUP BY rt0.c2, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c0 FROM rt0 WHERE (((IFNULL(DISTINCT rt0.c0, '	_3	r')) ISNULL)) GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING AVG(CAST(AVG(rt0.c2) AS NUMERIC)) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING (NOT (AVG(CAST(AVG(rt0.c2) AS NUMERIC)))) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING ((AVG(CAST(AVG(rt0.c2) AS NUMERIC))) ISNULL);
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (CASE ((NULL) ISNULL)  WHEN ((rt0.c2)-(rt0.c2)) THEN CAST(1e500 AS NUMERIC) WHEN NULL THEN ((NULL)/(rt0.c1)) WHEN ((rt0.c0)||(rt0.c0)) THEN ((rt0.c2)>=(rt0.c1)) END) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (CASE ((NULL) ISNULL)  WHEN ((rt0.c2)-(rt0.c2)) THEN CAST(1e500 AS NUMERIC) WHEN NULL THEN ((NULL)/(rt0.c1)) WHEN ((rt0.c0)||(rt0.c0)) THEN ((rt0.c2)>=(rt0.c1)) END))) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (((CASE ((NULL) ISNULL)  WHEN ((rt0.c2)-(rt0.c2)) THEN CAST(1e500 AS NUMERIC) WHEN NULL THEN ((NULL)/(rt0.c1)) WHEN ((rt0.c0)||(rt0.c0)) THEN ((rt0.c2)>=(rt0.c1)) END) ISNULL));
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c2 FROM rt0 WHERE (rt0.c2) UNION SELECT DISTINCT rt0.c2 FROM rt0 WHERE ((NOT (rt0.c2))) UNION SELECT DISTINCT rt0.c2 FROM rt0 WHERE (((rt0.c2) ISNULL));
SELECT DISTINCT rt0.c2 FROM rt0;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 WHERE ((((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1)) IN ())) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0 WHERE ((NOT ((((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1)) IN ())))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0 WHERE ((((((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1)) IN ())) ISNULL)) GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING ((((SUM(COUNT(COUNT(MIN(COUNT(MAX(GROUP_CONCAT(MAX(rt0.c1)))))))))AND(COUNT(*))))OR(COUNT(*))) UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT (((((SUM(COUNT(COUNT(MIN(COUNT(MAX(GROUP_CONCAT(MAX(rt0.c1)))))))))AND(COUNT(*))))OR(COUNT(*))))) UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING ((((((SUM(COUNT(COUNT(MIN(COUNT(MAX(GROUP_CONCAT(MAX(rt0.c1)))))))))AND(COUNT(*))))OR(COUNT(*)))) ISNULL);
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE (((rt0.c2) IS FALSE)) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (((rt0.c2) IS FALSE)))) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE (((((rt0.c2) IS FALSE)) ISNULL));
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((((('-811601972')-(rt0.c0))) BETWEEN (CAST(rt0.c0 AS NUMERIC)) AND (rt0.c0))) UNION SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT ((((('-811601972')-(rt0.c0))) BETWEEN (CAST(rt0.c0 AS NUMERIC)) AND (rt0.c0))))) UNION SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((((((('-811601972')-(rt0.c0))) BETWEEN (CAST(rt0.c0 AS NUMERIC)) AND (rt0.c0))) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM rt0;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 WHERE (((CAST(rt0.c0 AS NUMERIC)) BETWEEN (((x'')AND(rt0.c0))) AND (CAST(rt0.c1 AS BLOB)))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0 WHERE ((NOT (((CAST(rt0.c0 AS NUMERIC)) BETWEEN (((x'')AND(rt0.c0))) AND (CAST(rt0.c1 AS BLOB)))))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0 WHERE (((((CAST(rt0.c0 AS NUMERIC)) BETWEEN (((x'')AND(rt0.c0))) AND (CAST(rt0.c1 AS BLOB)))) ISNULL)) GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING MIN(MIN(rt0.c1)) UNION ALL SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING (NOT (MIN(MIN(rt0.c1)))) UNION ALL SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING ((MIN(MIN(rt0.c1))) ISNULL);
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE ((((((((rt0.c0)OR(x'd65f')))OR(rt0.c2))))>=((((rt0.c0)>=(rt0.c0)))))) UNION ALL SELECT * FROM rt0 WHERE ((NOT ((((((((rt0.c0)OR(x'd65f')))OR(rt0.c2))))>=((((rt0.c0)>=(rt0.c0)))))))) UNION ALL SELECT ALL * FROM rt0 WHERE ((((((((((rt0.c0)OR(x'd65f')))OR(rt0.c2))))>=((((rt0.c0)>=(rt0.c0)))))) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0 WHERE ((+ (((rt0.c1)<<(rt0.c0))))) UNION SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT ((+ (((rt0.c1)<<(rt0.c0))))))) UNION SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0 WHERE ((((+ (((rt0.c1)<<(rt0.c0))))) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c2, rt0.c1 FROM rt0 WHERE (((((rt0.c0) IS TRUE))/((rt0.c1 IN ())))) GROUP BY rt0.c2, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (((((rt0.c0) IS TRUE))/((rt0.c1 IN ())))))) GROUP BY rt0.c2, rt0.c1 UNION SELECT rt0.c2, rt0.c1 FROM rt0 WHERE (((((((rt0.c0) IS TRUE))/((rt0.c1 IN ())))) ISNULL)) GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING (COUNT(rt0.c0) IN (((GROUP_CONCAT(rt0.c0))=(AVG(COUNT(TOTAL(rt0.c0))))))) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING (NOT ((COUNT(rt0.c0) IN (((GROUP_CONCAT(rt0.c0))=(AVG(COUNT(TOTAL(rt0.c0))))))))) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING (((COUNT(rt0.c0) IN (((GROUP_CONCAT(rt0.c0))==(AVG(COUNT(TOTAL(rt0.c0)))))))) ISNULL);
SELECT ALL rt0.c1, rt0.c0 FROM rt0;
SELECT rt0.c1, rt0.c0 FROM rt0 WHERE (('FX' IN (''))) UNION ALL SELECT rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (('FX' IN (''))))) UNION ALL SELECT rt0.c1, rt0.c0 FROM rt0 WHERE (((('FX' IN (''))) ISNULL));
SELECT ALL rt0.c1, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (SQLITE_COMPILEOPTION_GET(((rt0.c0) IS TRUE))) UNION SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (SQLITE_COMPILEOPTION_GET(((rt0.c0) IS TRUE))))) UNION SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (((SQLITE_COMPILEOPTION_GET(((rt0.c0) IS TRUE))) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c1 FROM rt0 WHERE ((((rt0.c2)) BETWEEN ((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2)))) AND (((- (rt0.c0)))))) GROUP BY rt0.c0, rt0.c1 UNION SELECT rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT ((((rt0.c2)) BETWEEN ((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2)))) AND (((- (rt0.c0)))))))) GROUP BY rt0.c0, rt0.c1 UNION SELECT rt0.c0, rt0.c1 FROM rt0 NOT INDEXED WHERE ((((((rt0.c2)) BETWEEN ((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2)))) AND (((- (rt0.c0)))))) ISNULL)) GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING LOWER(DISTINCT (- (COUNT(*)))) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING (NOT (LOWER(DISTINCT (- (COUNT(*)))))) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING ((LOWER(DISTINCT (- (COUNT(*))))) ISNULL);
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING LOWER(DISTINCT (- (COUNT(*)))) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING (NOT (LOWER(DISTINCT (- (COUNT(*)))))) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING ((LOWER(DISTINCT (- (COUNT(*))))) ISNULL);
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c1 FROM rt0;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 WHERE (json_type(((0.37202521973854064)<=(rt0.c2)))) UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (json_type(((0.37202521973854064)<=(rt0.c2)))))) UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM rt0 WHERE (((json_type(((0.37202521973854064)<=(rt0.c2)))) ISNULL));
SELECT rt0.c2, rt0.c1 FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((((rt0.c1)) NOT BETWEEN ((-9223372036854775808 COLLATE RTRIM)) AND (((NOT (NULL)))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((((rt0.c1)) NOT BETWEEN ((-9223372036854775808 COLLATE RTRIM)) AND (((NOT (NULL)))))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((((rt0.c1)) NOT BETWEEN ((-9223372036854775808 COLLATE RTRIM)) AND (((NOT (NULL)))))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 WHERE ((((+ (rt0.c0))) NOT BETWEEN (((rt0.c1) NOT BETWEEN (rt0.c0) AND (x''))) AND (rt0.c1 COLLATE NOCASE))) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM rt0 WHERE ((NOT ((((+ (rt0.c0))) NOT BETWEEN (((rt0.c1) NOT BETWEEN (rt0.c0) AND (x''))) AND (rt0.c1 COLLATE NOCASE))))) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM rt0 WHERE ((((((+ (rt0.c0))) NOT BETWEEN (((rt0.c1) NOT BETWEEN (rt0.c0) AND (x''))) AND (rt0.c1 COLLATE NOCASE))) ISNULL)) GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING rt0.c2 UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING (NOT (rt0.c2)) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING ((rt0.c2) ISNULL);
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING rt0.c2 UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING (NOT (rt0.c2)) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING ((rt0.c2) ISNULL);
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c1, rt0.c0 FROM rt0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 WHERE (((((0xffffffff8637d4bc)OR(rt0.c1 COLLATE NOCASE)))AND(((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1))))) UNION ALL SELECT rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (((((0Xffffffff8637d4bc)OR(rt0.c1 COLLATE NOCASE)))AND(((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1))))))) UNION ALL SELECT ALL rt0.c1, rt0.c0 FROM rt0 WHERE (((((((0Xffffffff8637d4bc)OR(rt0.c1 COLLATE NOCASE)))AND(((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1))))) ISNULL));
SELECT rt0.c1, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0 WHERE (((rt0.c2)<=(rt0.c2))) UNION SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (((rt0.c2)<=(rt0.c2))))) UNION SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0 WHERE (((((rt0.c2)<=(rt0.c2))) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 WHERE ((~ (((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c2))))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0 WHERE ((NOT ((~ (((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c2))))))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0 WHERE ((((~ (((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c2))))) ISNULL)) GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING MIN((((GROUP_CONCAT(COUNT(AVG(rt0.c0))))) BETWEEN ((COUNT(rt0.c0))) AND ((MAX(TOTAL(TOTAL(rt0.c2))))))) UNION ALL SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING (NOT (MIN((((GROUP_CONCAT(COUNT(AVG(rt0.c0))))) BETWEEN ((COUNT(rt0.c0))) AND ((MAX(TOTAL(TOTAL(rt0.c2))))))))) UNION ALL SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING ((MIN((((GROUP_CONCAT(COUNT(AVG(rt0.c0))))) BETWEEN ((COUNT(rt0.c0))) AND ((MAX(TOTAL(TOTAL(rt0.c2)))))))) ISNULL);
SELECT ALL MAX(((((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0))) NOT BETWEEN (((((((((rt0.c0)OR(rt0.c0)))AND(rt0.c2)))AND('1289403189')))AND(rt0.c2))) AND (((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c0))))) FROM rt0;
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE (((((TRIM(rt0.c0, rt0.c2))OR(((((rt0.c1)AND(rt0.c2)))AND(rt0.c0)))))AND(CAST(rt0.c1 AS TEXT)))) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (((((TRIM(rt0.c0, rt0.c2))OR(((((rt0.c1)AND(rt0.c2)))AND(rt0.c0)))))AND(CAST(rt0.c1 AS TEXT)))))) UNION ALL SELECT ALL * FROM rt0 WHERE (((((((TRIM(rt0.c0, rt0.c2))OR(((((rt0.c1)AND(rt0.c2)))AND(rt0.c0)))))AND(CAST(rt0.c1 AS TEXT)))) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE (((rt0.c1) NOT BETWEEN (CASE WHEN NULL THEN rt0.c1 END) AND (((((((((rt0.c1)AND(rt0.c2)))AND(rt0.c2)))AND(rt0.c0)))OR(rt0.c0))))) UNION SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (((rt0.c1) NOT BETWEEN (CASE WHEN NULL THEN rt0.c1 END) AND (((((((((rt0.c1)AND(rt0.c2)))AND(rt0.c2)))AND(rt0.c0)))OR(rt0.c0))))))) UNION SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE (((((rt0.c1) NOT BETWEEN (CASE WHEN NULL THEN rt0.c1 END) AND (((((((((rt0.c1)AND(rt0.c2)))AND(rt0.c2)))AND(rt0.c0)))OR(rt0.c0))))) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0 FROM rt0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM rt0 WHERE (((((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1)))/(NULL))) GROUP BY rt0.c2, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (((((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1)))/(NULL))))) GROUP BY rt0.c2, rt0.c0 UNION SELECT rt0.c2, rt0.c0 FROM rt0 WHERE (((((((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1)))/(NULL))) ISNULL)) GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING ((COUNT(*))<>(AVG(rt0.c2))) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING (NOT (((COUNT(*))<>(AVG(rt0.c2))))) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING ((((COUNT(*))<>(AVG(rt0.c2)))) ISNULL);
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING ((COUNT(*))<>(AVG(rt0.c2))) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING (NOT (((COUNT(*))<>(AVG(rt0.c2))))) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING ((((COUNT(*))<>(AVG(rt0.c2)))) ISNULL);
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE (((((rt0.c2) NOT BETWEEN (0.5412884153450973) AND (rt0.c0)))|(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c1))))) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (((((rt0.c2) NOT BETWEEN (0.5412884153450973) AND (rt0.c0)))|(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c1))))))) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE (((((((rt0.c2) NOT BETWEEN (0.5412884153450973) AND (rt0.c0)))|(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c1))))) ISNULL));
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((((((((rt0.c0)AND(rt0.c2)))AND(rt0.c1)))OR((('') IS FALSE))))OR(((((NULL)OR(rt0.c1)))AND(rt0.c0))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((((((((rt0.c0)AND(rt0.c2)))AND(rt0.c1)))OR((('') IS FALSE))))OR(((((NULL)OR(rt0.c1)))AND(rt0.c0))))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((((((((rt0.c0)AND(rt0.c2)))AND(rt0.c1)))OR((('') IS FALSE))))OR(((((NULL)OR(rt0.c1)))AND(rt0.c0))))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((((((NULL, rt0.c2, rt0.c2, rt0.c0, rt0.c1))<=((rt0.c1, rt0.c2, rt0.c1, rt0.c2, x''))))!=(rt0.c0 COLLATE NOCASE))) GROUP BY rt0.c2, rt0.c1, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT ((((((NULL, rt0.c2, rt0.c2, rt0.c0, rt0.c1))<=((rt0.c1, rt0.c2, rt0.c1, rt0.c2, x''))))<>(rt0.c0 COLLATE NOCASE))))) GROUP BY rt0.c2, rt0.c1, rt0.c0 UNION SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((((((((NULL, rt0.c2, rt0.c2, rt0.c0, rt0.c1))<=((rt0.c1, rt0.c2, rt0.c1, rt0.c2, x''))))<>(rt0.c0 COLLATE NOCASE))) ISNULL)) GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 NOT INDEXED GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 NOT INDEXED GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT TOTAL(((UNICODE(''))==(1652349240))) FROM rt0 ORDER BY (- ('1157137745'))  NULLS LAST;
SELECT ALL * FROM rt0;
SELECT * FROM rt0 WHERE (rt0.c2) UNION ALL SELECT * FROM rt0 WHERE ((NOT (rt0.c2))) UNION ALL SELECT ALL * FROM rt0 WHERE (((rt0.c2) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (CAST(CASE WHEN rt0.c1 THEN rt0.c1 END AS TEXT)) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (CAST(CASE WHEN rt0.c1 THEN rt0.c1 END AS TEXT)))) UNION SELECT DISTINCT * FROM rt0 WHERE (((CAST(CASE WHEN rt0.c1 THEN rt0.c1 END AS TEXT)) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((((('')AND((((rt0.c1))!=((rt0.c1))))))OR(((rt0.c0)+(rt0.c1))))) GROUP BY rt0.c1, rt0.c2, rt0.c0 UNION SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT ((((('')AND((((rt0.c1))!=((rt0.c1))))))OR(((rt0.c0)+(rt0.c1))))))) GROUP BY rt0.c1, rt0.c2, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((((((('')AND((((rt0.c1))<>((rt0.c1))))))OR(((rt0.c0)+(rt0.c1))))) ISNULL)) GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING (((((rt0.c1)AND(TOTAL(COUNT(*)))))AND(rt0.c1)) IN (GROUP_CONCAT(MAX(rt0.c0)), NULL)) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING (NOT ((((((rt0.c1)AND(TOTAL(COUNT(*)))))AND(rt0.c1)) IN (GROUP_CONCAT(MAX(rt0.c0)), NULL)))) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING (((((((rt0.c1)AND(TOTAL(COUNT(*)))))AND(rt0.c1)) IN (GROUP_CONCAT(MAX(rt0.c0)), NULL))) ISNULL);
SELECT ALL TOTAL(UNLIKELY(DISTINCT NULL) COLLATE RTRIM) FROM rt0;
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE (((rt0.c0 COLLATE NOCASE) NOT BETWEEN ((((rt0.c0, rt0.c2, rt0.c0))=((rt0.c2, rt0.c0, rt0.c2)))) AND ((((rt0.c2, rt0.c1, rt0.c2)) NOT BETWEEN ((rt0.c2, rt0.c1, rt0.c1)) AND ((rt0.c0, x'761a', rt0.c2)))))) UNION ALL SELECT * FROM rt0 WHERE ((NOT (((rt0.c0 COLLATE NOCASE) NOT BETWEEN ((((rt0.c0, rt0.c2, rt0.c0))==((rt0.c2, rt0.c0, rt0.c2)))) AND ((((rt0.c2, rt0.c1, rt0.c2)) NOT BETWEEN ((rt0.c2, rt0.c1, rt0.c1)) AND ((rt0.c0, x'761a', rt0.c2)))))))) UNION ALL SELECT ALL * FROM rt0 WHERE (((((rt0.c0 COLLATE NOCASE) NOT BETWEEN ((((rt0.c0, rt0.c2, rt0.c0))=((rt0.c2, rt0.c0, rt0.c2)))) AND ((((rt0.c2, rt0.c1, rt0.c2)) NOT BETWEEN ((rt0.c2, rt0.c1, rt0.c1)) AND ((rt0.c0, x'761a', rt0.c2)))))) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0 WHERE (COALESCE((((rt0.c2, rt0.c0, rt0.c1)) BETWEEN ((rt0.c0, rt0.c0, rt0.c1)) AND ((0.18151145347986408, rt0.c0, rt0.c1))), ((rt0.c0)<(0.24634614511063435)), rt0.c1 COLLATE NOCASE, ((rt0.c0)&(rt0.c2)))) UNION SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (COALESCE((((rt0.c2, rt0.c0, rt0.c1)) BETWEEN ((rt0.c0, rt0.c0, rt0.c1)) AND ((0.18151145347986408, rt0.c0, rt0.c1))), ((rt0.c0)<(0.24634614511063435)), rt0.c1 COLLATE NOCASE, ((rt0.c0)&(rt0.c2)))))) UNION SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0 WHERE (((COALESCE((((rt0.c2, rt0.c0, rt0.c1)) BETWEEN ((rt0.c0, rt0.c0, rt0.c1)) AND ((0.18151145347986408, rt0.c0, rt0.c1))), ((rt0.c0)<(0.24634614511063435)), rt0.c1 COLLATE NOCASE, ((rt0.c0)&(rt0.c2)))) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 END)%(((rt0.c0) ISNULL)))) GROUP BY rt0.c1, rt0.c0, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 END)%(((rt0.c0) ISNULL)))))) GROUP BY rt0.c1, rt0.c0, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (((((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 END)%(((rt0.c0) ISNULL)))) ISNULL)) GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING (MIN(SUM(GROUP_CONCAT(x''))) IN (rt0.c0)) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING (NOT ((MIN(SUM(GROUP_CONCAT(x''))) IN (rt0.c0)))) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING (((MIN(SUM(GROUP_CONCAT(x''))) IN (rt0.c0))) ISNULL);
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE (CAST(((((((((rt0.c1)OR('\ni')))AND(rt0.c0)))OR(rt0.c2)))AND(rt0.c0)) AS NUMERIC)) UNION ALL SELECT * FROM rt0 WHERE ((NOT (CAST(((((((((rt0.c1)OR('\ni')))AND(rt0.c0)))OR(rt0.c2)))AND(rt0.c0)) AS NUMERIC)))) UNION ALL SELECT * FROM rt0 WHERE (((CAST(((((((((rt0.c1)OR('\ni')))AND(rt0.c0)))OR(rt0.c2)))AND(rt0.c0)) AS NUMERIC)) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c1 FROM rt0 WHERE ((+ (SQLITE_COMPILEOPTION_USED(rt0.c2)))) UNION SELECT DISTINCT rt0.c1 FROM rt0 WHERE ((NOT ((+ (SQLITE_COMPILEOPTION_USED(rt0.c2)))))) UNION SELECT DISTINCT rt0.c1 FROM rt0 WHERE ((((+ (SQLITE_COMPILEOPTION_USED(rt0.c2)))) ISNULL));
SELECT DISTINCT rt0.c1 FROM rt0;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 WHERE (((rt0.c1)LIKE(rt0.c0)) COLLATE RTRIM) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0 WHERE ((NOT (((rt0.c1)LIKE(rt0.c0)) COLLATE RTRIM))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0 WHERE (((((rt0.c1)LIKE(rt0.c0)) COLLATE RTRIM) ISNULL)) GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (('146709713')||(((SUM(rt0.c1))+(GROUP_CONCAT(rt0.c0))))) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT ((('146709713')||(((SUM(rt0.c1))+(GROUP_CONCAT(rt0.c0))))))) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (((('146709713')||(((SUM(rt0.c1))+(GROUP_CONCAT(rt0.c0)))))) ISNULL);
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (('146709713')||(((SUM(rt0.c1))+(GROUP_CONCAT(rt0.c0))))) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT ((('146709713')||(((SUM(rt0.c1))+(GROUP_CONCAT(rt0.c0))))))) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (((('146709713')||(((SUM(rt0.c1))+(GROUP_CONCAT(rt0.c0)))))) ISNULL);
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((+ (((rt0.c0) NOTNULL)))) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT ((+ (((rt0.c0) NOTNULL)))))) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((((+ (((rt0.c0) NOTNULL)))) ISNULL));
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE (-8.1877943E7 COLLATE RTRIM) UNION SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (-8.1877943E7 COLLATE RTRIM))) UNION SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE (((-8.1877943E7 COLLATE RTRIM) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1 FROM rt0;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (rt0.c0))) GROUP BY rt0.c1, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT ((NOT (rt0.c0))))) GROUP BY rt0.c1, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c2 FROM rt0 WHERE ((((NOT (rt0.c0))) ISNULL)) GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING COUNT(AVG(rt0.c0)) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING (NOT (COUNT(AVG(rt0.c0)))) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING ((COUNT(AVG(rt0.c0))) ISNULL);
SELECT ALL rt0.c0 FROM rt0;
SELECT rt0.c0 FROM rt0 WHERE ((NOT (rt0.c2)) COLLATE RTRIM) UNION ALL SELECT ALL rt0.c0 FROM rt0 WHERE ((NOT ((NOT (rt0.c2)) COLLATE RTRIM))) UNION ALL SELECT ALL rt0.c0 FROM rt0 WHERE ((((NOT (rt0.c2)) COLLATE RTRIM) ISNULL));
SELECT ALL rt0.c0 FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (HEX('1198732255' COLLATE NOCASE)) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (HEX('1198732255' COLLATE NOCASE)))) UNION SELECT DISTINCT * FROM rt0 WHERE (((HEX('1198732255' COLLATE NOCASE)) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 WHERE (((((rt0.c1 IN ())))<=((((((rt0.c2)AND(rt0.c2)))AND(rt0.c2)))))) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM rt0 WHERE ((NOT (((((rt0.c1 IN ())))<=((((((rt0.c2)AND(rt0.c2)))AND(rt0.c2)))))))) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM rt0 WHERE (((((((rt0.c1 IN ())))<=((((((rt0.c2)AND(rt0.c2)))AND(rt0.c2)))))) ISNULL)) GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING json_array_length(GROUP_CONCAT(SUM(rt0.c1))) UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT (json_array_length(GROUP_CONCAT(SUM(rt0.c1))))) UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING ((json_array_length(GROUP_CONCAT(SUM(rt0.c1)))) ISNULL);
SELECT ALL SUM((((rt0.c2 IN ()))<(rt0.c1))) FROM rt0;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE (((((((rt0.c1)%(rt0.c0)))AND(((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c1)))))OR(rt0.c2 COLLATE BINARY))) UNION ALL SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (((((((rt0.c1)%(rt0.c0)))AND(((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c1)))))OR(rt0.c2 COLLATE BINARY))))) UNION ALL SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE (((((((((rt0.c1)%(rt0.c0)))AND(((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c1)))))OR(rt0.c2 COLLATE BINARY))) ISNULL));
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((((rt0.c1)) BETWEEN ((((rt0.c2) NOTNULL))) AND ((((((rt0.c2)OR(rt0.c2)))OR('1357785378')))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((((rt0.c1)) BETWEEN ((((rt0.c2) NOTNULL))) AND ((((((rt0.c2)OR(rt0.c2)))OR('1357785378')))))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((((rt0.c1)) BETWEEN ((((rt0.c2) NOTNULL))) AND ((((((rt0.c2)OR(rt0.c2)))OR('1357785378')))))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 WHERE (LOWER((- (0.6088992124122811)))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0 WHERE ((NOT (LOWER((- (0.6088992124122811)))))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0 WHERE (((LOWER((- (0.6088992124122811)))) ISNULL)) GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING rt0.c1 UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING (NOT (rt0.c1)) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING ((rt0.c1) ISNULL);
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING rt0.c1 UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING (NOT (rt0.c1)) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING ((rt0.c1) ISNULL);
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c2 FROM rt0;
SELECT rt0.c2 FROM rt0 WHERE (((((rt0.c2)<<(rt0.c2)))OR(COALESCE(DISTINCT rt0.c2, rt0.c0, rt0.c0, rt0.c1)))) UNION ALL SELECT ALL rt0.c2 FROM rt0 WHERE ((NOT (((((rt0.c2)<<(rt0.c2)))OR(COALESCE(DISTINCT rt0.c2, rt0.c0, rt0.c0, rt0.c1)))))) UNION ALL SELECT rt0.c2 FROM rt0 WHERE (((((((rt0.c2)<<(rt0.c2)))OR(COALESCE(DISTINCT rt0.c2, rt0.c0, rt0.c0, rt0.c1)))) ISNULL));
SELECT rt0.c2 FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((x'')>(((rt0.c2)&(rt0.c2))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((x'')>(((rt0.c2)&(rt0.c2))))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((x'')>(((rt0.c2)&(rt0.c2))))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 WHERE (x'c3f7') GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0 WHERE ((NOT (x'c3f7'))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0 WHERE (((x'c3f7') ISNULL)) GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING CAST(CASE MIN(rt0.c0)  WHEN 'F1' THEN GROUP_CONCAT(SUM(1.56494432E8)) ELSE rt0.c1 END AS BLOB) UNION ALL SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING (NOT (CAST(CASE MIN(rt0.c0)  WHEN 'F1' THEN GROUP_CONCAT(SUM(1.56494432E8)) ELSE rt0.c1 END AS BLOB))) UNION ALL SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING ((CAST(CASE MIN(rt0.c0)  WHEN 'F1' THEN GROUP_CONCAT(SUM(1.56494432E8)) ELSE rt0.c1 END AS BLOB)) ISNULL);
SELECT ALL * FROM rt0;
SELECT * FROM rt0 WHERE ((((TRIM(rt0.c1)))>((LIKELIHOOD(rt0.c2, 0.3237002963569692))))) UNION ALL SELECT * FROM rt0 WHERE ((NOT ((((TRIM(rt0.c1)))>((LIKELIHOOD(rt0.c2, 0.3237002963569692))))))) UNION ALL SELECT * FROM rt0 WHERE ((((((TRIM(rt0.c1)))>((LIKELIHOOD(rt0.c2, 0.3237002963569692))))) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0 WHERE (CASE CASE WHEN rt0.c0 THEN rt0.c2 END  WHEN ((0xffffffffbb0a8e4b) NOT NULL) THEN rt0.c0 END) UNION SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (CASE CASE WHEN rt0.c0 THEN rt0.c2 END  WHEN ((0Xffffffffbb0a8e4b) NOT NULL) THEN rt0.c0 END))) UNION SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0 WHERE (((CASE CASE WHEN rt0.c0 THEN rt0.c2 END  WHEN ((0xffffffffbb0a8e4b) NOT NULL) THEN rt0.c0 END) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 WHERE (((((((rt0.c2)AND(rt0.c1)))OR(rt0.c1)))&(CAST(rt0.c0 AS NUMERIC)))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0 WHERE ((NOT (((((((rt0.c2)AND(rt0.c1)))OR(rt0.c1)))&(CAST(rt0.c0 AS NUMERIC)))))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0 WHERE (((((((((rt0.c2)AND(rt0.c1)))OR(rt0.c1)))&(CAST(rt0.c0 AS NUMERIC)))) ISNULL)) GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING ((MAX(x''))/(CAST(SUM(rt0.c2) AS TEXT))) UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT (((MAX(x''))/(CAST(SUM(rt0.c2) AS TEXT))))) UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING ((((MAX(x''))/(CAST(SUM(rt0.c2) AS TEXT)))) ISNULL);
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING ((MAX(x''))/(CAST(SUM(rt0.c2) AS TEXT))) UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT (((MAX(x''))/(CAST(SUM(rt0.c2) AS TEXT))))) UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING ((((MAX(x''))/(CAST(SUM(rt0.c2) AS TEXT)))) ISNULL);
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE (x'' COLLATE RTRIM) ORDER BY (('0.7758669709511946')!=((rt0.c0 IN (NULL, rt0.c0))));
SELECT * FROM rt0 WHERE ((NOT (x'' COLLATE RTRIM))) ORDER BY (('0.7758669709511946')<>((rt0.c0 IN (NULL, rt0.c0))));
SELECT * FROM rt0 WHERE (((x'' COLLATE RTRIM) ISNULL)) ORDER BY (('0.7758669709511946')!=((rt0.c0 IN (NULL, rt0.c0))));
SELECT * FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((((rt0.c0)) NOT BETWEEN (((+ (rt0.c2)))) AND (((rt0.c0 IN ()))))) UNION SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT ((((rt0.c0)) NOT BETWEEN (((+ (rt0.c2)))) AND (((rt0.c0 IN ()))))))) UNION SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((((((rt0.c0)) NOT BETWEEN (((+ (rt0.c2)))) AND (((rt0.c0 IN ()))))) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0;
SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 WHERE (((TRIM(rt0.c2)) NOT BETWEEN (json_remove(rt0.c2, 0.027615599665524515)) AND (CASE WHEN rt0.c1 THEN rt0.c0 END))) GROUP BY rt0.c1, rt0.c2 UNION SELECT rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (((TRIM(rt0.c2)) NOT BETWEEN (json_remove(rt0.c2, 0.027615599665524515)) AND (CASE WHEN rt0.c1 THEN rt0.c0 END))))) GROUP BY rt0.c1, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c2 FROM rt0 WHERE (((((TRIM(rt0.c2)) NOT BETWEEN (json_remove(rt0.c2, 0.027615599665524515)) AND (CASE WHEN rt0.c1 THEN rt0.c0 END))) ISNULL)) GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING GROUP_CONCAT(MIN(rt0.c1)) UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING (NOT (GROUP_CONCAT(MIN(rt0.c1)))) UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING ((GROUP_CONCAT(MIN(rt0.c1))) ISNULL);
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE (rt0.c1) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (rt0.c1))) UNION ALL SELECT ALL * FROM rt0 WHERE (((rt0.c1) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE (((((rt0.c2)OR(rt0.c1)))OR((rt0.c1 IN ())))) UNION SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (((((rt0.c2)OR(rt0.c1)))OR((rt0.c1 IN ())))))) UNION SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE (((((((rt0.c2)OR(rt0.c1)))OR((rt0.c1 IN ())))) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1 FROM rt0;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c1, rt0.c2 FROM rt0 WHERE (((NULL COLLATE BINARY)>>((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2)))))) GROUP BY rt0.c1, rt0.c2 UNION SELECT rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (((NULL COLLATE BINARY)>>((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2)))))))) GROUP BY rt0.c1, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c2 FROM rt0 WHERE (((((NULL COLLATE BINARY)>>((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2)))))) ISNULL)) GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING COUNT(COUNT(*)) UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT (COUNT(COUNT(*)))) UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING ((COUNT(COUNT(*))) ISNULL);
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE (CAST(((((rt0.c0)AND(rt0.c1)))AND(rt0.c2)) AS BLOB)) UNION ALL SELECT * FROM rt0 WHERE ((NOT (CAST(((((rt0.c0)AND(rt0.c1)))AND(rt0.c2)) AS BLOB)))) UNION ALL SELECT ALL * FROM rt0 WHERE (((CAST(((((rt0.c0)AND(rt0.c1)))AND(rt0.c2)) AS BLOB)) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((((rt0.c2)OR(rt0.c1)) IN (((((rt0.c2)OR(rt0.c1)))OR(rt0.c0))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((((rt0.c2)OR(rt0.c1)) IN (((((rt0.c2)OR(rt0.c1)))OR(rt0.c0))))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((((rt0.c2)OR(rt0.c1)) IN (((((rt0.c2)OR(rt0.c1)))OR(rt0.c0))))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((((rt0.c2 IN ())) BETWEEN (((rt0.c2) IS TRUE)) AND (0.5557446195283384))) GROUP BY rt0.c1, rt0.c0, rt0.c2 UNION SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT ((((rt0.c2 IN ())) BETWEEN (((rt0.c2) IS TRUE)) AND (0.5557446195283384))))) GROUP BY rt0.c1, rt0.c0, rt0.c2 UNION SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((((((rt0.c2 IN ())) BETWEEN (((rt0.c2) IS TRUE)) AND (0.5557446195283384))) ISNULL)) GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING (- (((((((((((((MIN(GROUP_CONCAT(TOTAL(MIN(rt0.c1)))))OR(rt0.c0)))AND(COUNT(*))))AND(COUNT(*))))OR(MIN(rt0.c1))))OR(COUNT(COUNT(x'')))))AND(SUM(rt0.c1))))) UNION ALL SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING (NOT ((- (((((((((((((MIN(GROUP_CONCAT(TOTAL(MIN(rt0.c1)))))OR(rt0.c0)))AND(COUNT(*))))AND(COUNT(*))))OR(MIN(rt0.c1))))OR(COUNT(COUNT(x'')))))AND(SUM(rt0.c1))))))) UNION ALL SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING (((- (((((((((((((MIN(GROUP_CONCAT(TOTAL(MIN(rt0.c1)))))OR(rt0.c0)))AND(COUNT(*))))AND(COUNT(*))))OR(MIN(rt0.c1))))OR(COUNT(COUNT(x'')))))AND(SUM(rt0.c1)))))) ISNULL);
SELECT ALL * FROM rt0;
SELECT * FROM rt0 WHERE (((((((rt0.c1)OR(2105403827)))OR(rt0.c0))) NOTNULL)) UNION ALL SELECT * FROM rt0 WHERE ((NOT (((((((rt0.c1)OR(2105403827)))OR(rt0.c0))) NOTNULL)))) UNION ALL SELECT * FROM rt0 WHERE (((((((((rt0.c1)OR(2105403827)))OR(rt0.c0))) NOTNULL)) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (CASE CASE WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c2 END  WHEN (rt0.c1 IN ()) THEN (((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))) ELSE rt0.c0 COLLATE NOCASE END) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (CASE CASE WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c2 END  WHEN (rt0.c1 IN ()) THEN (((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))) ELSE rt0.c0 COLLATE NOCASE END))) UNION SELECT DISTINCT * FROM rt0 WHERE (((CASE CASE WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c2 END  WHEN (rt0.c1 IN ()) THEN (((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))) ELSE rt0.c0 COLLATE NOCASE END) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 WHERE (CAST(rt0.c2 AS TEXT) COLLATE NOCASE) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM rt0 WHERE ((NOT (CAST(rt0.c2 AS TEXT) COLLATE NOCASE))) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM rt0 WHERE (((CAST(rt0.c2 AS TEXT) COLLATE NOCASE) ISNULL)) GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING CAST(GROUP_CONCAT(MAX(COUNT(*))) AS INTEGER) UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT (CAST(GROUP_CONCAT(MAX(COUNT(*))) AS INTEGER))) UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING ((CAST(GROUP_CONCAT(MAX(COUNT(*))) AS INTEGER)) ISNULL);
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((((rt0.c0 IN ())) IS FALSE)) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT ((((rt0.c0 IN ())) IS FALSE)))) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((((((rt0.c0 IN ())) IS FALSE)) ISNULL));
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c1 FROM rt0 WHERE ('152553557') UNION SELECT DISTINCT rt0.c1 FROM rt0 WHERE ((NOT ('152553557'))) UNION SELECT DISTINCT rt0.c1 FROM rt0 WHERE ((('152553557') ISNULL));
SELECT DISTINCT rt0.c1 FROM rt0;
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 WHERE (((NULL) NOT BETWEEN (CAST(rt0.c2 AS TEXT)) AND (1371014282 COLLATE BINARY))) GROUP BY rt0.c0, rt0.c1 UNION SELECT rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (((NULL) NOT BETWEEN (CAST(rt0.c2 AS TEXT)) AND (1371014282 COLLATE BINARY))))) GROUP BY rt0.c0, rt0.c1 UNION SELECT rt0.c0, rt0.c1 FROM rt0 WHERE (((((NULL) NOT BETWEEN (CAST(rt0.c2 AS TEXT)) AND (1371014282 COLLATE BINARY))) ISNULL)) GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING COUNT(STRFTIME(rt0.c1, rt0.c1, rt0.c0)) UNION ALL SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING (NOT (COUNT(STRFTIME(rt0.c1, rt0.c1, rt0.c0)))) UNION ALL SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING ((COUNT(STRFTIME(rt0.c1, rt0.c1, rt0.c0))) ISNULL);
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING COUNT(STRFTIME(rt0.c1, rt0.c1, rt0.c0)) UNION ALL SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING (NOT (COUNT(STRFTIME(rt0.c1, rt0.c1, rt0.c0)))) UNION ALL SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING ((COUNT(STRFTIME(rt0.c1, rt0.c1, rt0.c0))) ISNULL);
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE ((((((rt0.c0)||(rt0.c0))))<>((rtreenode(rt0.c1, rt0.c2))))) UNION ALL SELECT * FROM rt0 WHERE ((NOT ((((((rt0.c0)||(rt0.c0))))<>((rtreenode(rt0.c1, rt0.c2))))))) UNION ALL SELECT ALL * FROM rt0 WHERE ((((((((rt0.c0)||(rt0.c0))))<>((rtreenode(rt0.c1, rt0.c2))))) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((((rt0.c0)GLOB(rt0.c2)) IN (NULL))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((((rt0.c0)GLOB(rt0.c2)) IN (NULL))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((((rt0.c0)GLOB(rt0.c2)) IN (NULL))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((LIKELIHOOD(DISTINCT rt0.c2, 0.6837502732173198) IN ())) GROUP BY rt0.c2, rt0.c0, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT ((LIKELIHOOD(DISTINCT rt0.c2, 0.6837502732173198) IN ())))) GROUP BY rt0.c2, rt0.c0, rt0.c1 UNION SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((((LIKELIHOOD(DISTINCT rt0.c2, 0.6837502732173198) IN ())) ISNULL)) GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING (((COUNT(*), (+ (0x5c70e514)), TIME(GROUP_CONCAT(rt0.c2), SUM(rt0.c1), '316333266', 0.6768823543643674, COUNT(rt0.c0))))!=(((MAX(rt0.c2) IN ()), ((rt0.c1) IS FALSE), TOTAL(TOTAL(rt0.c0))))) UNION ALL SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING (NOT ((((COUNT(*), (+ (0X5c70e514)), TIME(GROUP_CONCAT(rt0.c2), SUM(rt0.c1), '316333266', 0.6768823543643674, COUNT(rt0.c0))))<>(((MAX(rt0.c2) IN ()), ((rt0.c1) IS FALSE), TOTAL(TOTAL(rt0.c0))))))) UNION ALL SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING (((((COUNT(*), (+ (0x5c70e514)), TIME(GROUP_CONCAT(rt0.c2), SUM(rt0.c1), '316333266', 0.6768823543643674, COUNT(rt0.c0))))<>(((MAX(rt0.c2) IN ()), ((rt0.c1) IS FALSE), TOTAL(TOTAL(rt0.c0)))))) ISNULL);
SELECT ALL MIN((((rt0.c1 IN ()))<((((rt0.c1, rt0.c2, rt0.c0)) BETWEEN ((rt0.c0, rt0.c2, '118310204')) AND ((rt0.c0, rt0.c1, rt0.c1)))))) FROM rt0 ORDER BY rt0.c0 ASC  NULLS FIRST;
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE (rt0.c2) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (rt0.c2))) UNION ALL SELECT * FROM rt0 NOT INDEXED WHERE (((rt0.c2) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (CASE rt0.c1  WHEN NULL THEN LENGTH(rt0.c0) END) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (CASE rt0.c1  WHEN NULL THEN LENGTH(rt0.c0) END))) UNION SELECT DISTINCT * FROM rt0 WHERE (((CASE rt0.c1  WHEN NULL THEN LENGTH(rt0.c0) END) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 WHERE (((json_insert(rt0.c2, rt0.c0, rt0.c2)) BETWEEN (rt0.c1) AND (rt0.c1 COLLATE NOCASE))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0 WHERE ((NOT (((json_insert(rt0.c2, rt0.c0, rt0.c2)) BETWEEN (rt0.c1) AND (rt0.c1 COLLATE NOCASE))))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0 WHERE (((((json_insert(rt0.c2, rt0.c0, rt0.c2)) BETWEEN (rt0.c1) AND (rt0.c1 COLLATE NOCASE))) ISNULL)) GROUP BY rt0.c1;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING AVG(SUM(TOTAL(MIN(rt0.c1)))) UNION ALL SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING (NOT (AVG(SUM(TOTAL(MIN(rt0.c1)))))) UNION ALL SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING ((AVG(SUM(TOTAL(MIN(rt0.c1))))) ISNULL);
SELECT rt0.c0 FROM rt0;
SELECT ALL rt0.c0 FROM rt0 WHERE ((((+ (rt0.c2))) IS TRUE)) UNION ALL SELECT ALL rt0.c0 FROM rt0 WHERE ((NOT ((((+ (rt0.c2))) IS TRUE)))) UNION ALL SELECT ALL rt0.c0 FROM rt0 WHERE ((((((+ (rt0.c2))) IS TRUE)) ISNULL));
SELECT rt0.c0 FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((DATE(rt0.c1, 'p-', rt0.c0)) NOT BETWEEN (CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c0 END) AND (rt0.c0))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((DATE(rt0.c1, 'p-', rt0.c0)) NOT BETWEEN (CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c0 END) AND (rt0.c0))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((DATE(rt0.c1, 'p-', rt0.c0)) NOT BETWEEN (CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c0 END) AND (rt0.c0))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c1, rt0.c2 FROM rt0 WHERE (((x'') NOT NULL)) GROUP BY rt0.c1, rt0.c2 UNION SELECT rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (((x'') NOT NULL)))) GROUP BY rt0.c1, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c2 FROM rt0 WHERE (((((x'') NOT NULL)) ISNULL)) GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING TYPEOF(DISTINCT -1.62961649E9) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING (NOT (TYPEOF(DISTINCT -1.62961649E9))) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING ((TYPEOF(DISTINCT -1.62961649E9)) ISNULL);
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING TYPEOF(DISTINCT -1.62961649E9) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING (NOT (TYPEOF(DISTINCT -1.62961649E9))) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING ((TYPEOF(DISTINCT -1.62961649E9)) ISNULL);
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE (((((((((CAST('-156639869' AS BLOB))OR(CAST(rt0.c0 AS INTEGER))))OR(((rt0.c1)IS NOT(rt0.c2)))))AND(CASE WHEN rt0.c2 THEN rt0.c0 END)))AND(((rt0.c1)+(rt0.c0))))) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (((((((((CAST('-156639869' AS BLOB))OR(CAST(rt0.c0 AS INTEGER))))OR(((rt0.c1)IS NOT(rt0.c2)))))AND(CASE WHEN rt0.c2 THEN rt0.c0 END)))AND(((rt0.c1)+(rt0.c0))))))) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE (((((((((((CAST('-156639869' AS BLOB))OR(CAST(rt0.c0 AS INTEGER))))OR(((rt0.c1)IS NOT(rt0.c2)))))AND(CASE WHEN rt0.c2 THEN rt0.c0 END)))AND(((rt0.c1)+(rt0.c0))))) ISNULL));
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((((rt0.c2)>=(rt0.c1))) BETWEEN ('2017955447' COLLATE BINARY) AND ((((rt0.c2, rt0.c1, rt0.c2))<((rt0.c1, rt0.c2, rt0.c0)))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((((rt0.c2)>=(rt0.c1))) BETWEEN ('2017955447' COLLATE BINARY) AND ((((rt0.c2, rt0.c1, rt0.c2))<((rt0.c1, rt0.c2, rt0.c0)))))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((((rt0.c2)>=(rt0.c1))) BETWEEN ('2017955447' COLLATE BINARY) AND ((((rt0.c2, rt0.c1, rt0.c2))<((rt0.c1, rt0.c2, rt0.c0)))))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c1, rt0.c2 FROM rt0 WHERE (LTRIM(((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1)), (rt0.c1 IN ()))) GROUP BY rt0.c1, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (LTRIM(((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1)), (rt0.c1 IN ()))))) GROUP BY rt0.c1, rt0.c2 UNION SELECT rt0.c1, rt0.c2 FROM rt0 WHERE (((LTRIM(((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1)), (rt0.c1 IN ()))) ISNULL)) GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING 0.24634614511063435 UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT (0.24634614511063435)) UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING ((0.24634614511063435) ISNULL);
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING 0.24634614511063435 UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT (0.24634614511063435)) UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING ((0.24634614511063435) ISNULL);
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE (CAST(rt0.c1 COLLATE BINARY AS NUMERIC)) UNION ALL SELECT * FROM rt0 WHERE ((NOT (CAST(rt0.c1 COLLATE BINARY AS NUMERIC)))) UNION ALL SELECT * FROM rt0 WHERE (((CAST(rt0.c1 COLLATE BINARY AS NUMERIC)) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((NOT (((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c2))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((NOT (((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c2))))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((NOT (((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c2))))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM rt0 WHERE (((((rt0.c0) ISNULL))>=((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c0)))))) GROUP BY rt0.c2, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (((((rt0.c0) ISNULL))>=((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c0)))))))) GROUP BY rt0.c2, rt0.c0 UNION SELECT rt0.c2, rt0.c0 FROM rt0 WHERE (((((((rt0.c0) ISNULL))>=((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c0)))))) ISNULL)) GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING ((((COUNT(rt0.c2))AND(MIN(rt0.c2))))AND(GROUP_CONCAT(TOTAL(MIN(SUM(COUNT(*))))))) UNION ALL SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (NOT (((((COUNT(rt0.c2))AND(MIN(rt0.c2))))AND(GROUP_CONCAT(TOTAL(MIN(SUM(COUNT(*))))))))) UNION ALL SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING ((((((COUNT(rt0.c2))AND(MIN(rt0.c2))))AND(GROUP_CONCAT(TOTAL(MIN(SUM(COUNT(*)))))))) ISNULL);
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE (x'd06a') UNION ALL SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (x'd06a'))) UNION ALL SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE (((x'd06a') ISNULL));
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c0 FROM rt0 WHERE ((- (CASE rt0.c2  WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 ELSE x'' END))) UNION SELECT DISTINCT rt0.c0 FROM rt0 WHERE ((NOT ((- (CASE rt0.c2  WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 ELSE x'' END))))) UNION SELECT DISTINCT rt0.c0 FROM rt0 WHERE ((((- (CASE rt0.c2  WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 ELSE x'' END))) ISNULL));
SELECT DISTINCT rt0.c0 FROM rt0;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE (rt0.c2) GROUP BY rt0.c2, rt0.c0, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (rt0.c2))) GROUP BY rt0.c2, rt0.c0, rt0.c1 UNION SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE (((rt0.c2) ISNULL)) GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING AVG(((rt0.c1)&(NULL))) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING (NOT (AVG(((rt0.c1)&(NULL))))) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING ((AVG(((rt0.c1)&(NULL)))) ISNULL);
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING AVG(((rt0.c1)&(NULL))) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING (NOT (AVG(((rt0.c1)&(NULL))))) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING ((AVG(((rt0.c1)&(NULL)))) ISNULL);
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c2 FROM rt0;
SELECT rt0.c0, rt0.c2 FROM rt0 WHERE ((((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2)) IN ())) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT ((((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2)) IN ())))) UNION ALL SELECT rt0.c0, rt0.c2 FROM rt0 WHERE ((((((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2)) IN ())) ISNULL));
SELECT rt0.c0, rt0.c2 FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (rt0.c1) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (rt0.c1))) UNION SELECT DISTINCT * FROM rt0 WHERE (((rt0.c1) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 WHERE (((((rt0.c2)OR(x'72db')))AND(rt0.c0)) COLLATE NOCASE) GROUP BY rt0.c1, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (((((rt0.c2)OR(x'72db')))AND(rt0.c0)) COLLATE NOCASE))) GROUP BY rt0.c1, rt0.c0 UNION SELECT rt0.c1, rt0.c0 FROM rt0 WHERE (((((((rt0.c2)OR(x'72db')))AND(rt0.c0)) COLLATE NOCASE) ISNULL)) GROUP BY rt0.c1, rt0.c0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING ((((MIN(rt0.c0))OR(AVG(GROUP_CONCAT(rt0.c1)))))AND(GROUP_CONCAT(MAX(rt0.c2)))) UNION ALL SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (NOT (((((MIN(rt0.c0))OR(AVG(GROUP_CONCAT(rt0.c1)))))AND(GROUP_CONCAT(MAX(rt0.c2)))))) UNION ALL SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING ((((((MIN(rt0.c0))OR(AVG(GROUP_CONCAT(rt0.c1)))))AND(GROUP_CONCAT(MAX(rt0.c2))))) ISNULL);
SELECT ALL TOTAL(((((rt0.c1) NOT NULL)) NOT BETWEEN (x'') AND (((((((((rt0.c0)OR(rt0.c0)))AND(rt0.c1)))AND(rt0.c0)))OR(rt0.c0))))) FROM rt0 ORDER BY (('-1150122640') NOT BETWEEN (CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 END) AND (((rt0.c0)IS(rt0.c2))))  NULLS FIRST, (rt0.c1 COLLATE NOCASE IN (CAST(rt0.c2 AS NUMERIC))) ASC, ((rt0.c0) IS FALSE);
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE (CAST(rt0.c2 COLLATE NOCASE AS REAL)) UNION ALL SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (CAST(rt0.c2 COLLATE NOCASE AS REAL)))) UNION ALL SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE (((CAST(rt0.c2 COLLATE NOCASE AS REAL)) ISNULL));
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE (((((rt0.c1)AND(((((((((rt0.c1)AND(rt0.c2)))AND(rt0.c2)))AND(rt0.c2)))AND(rt0.c0)))))AND((((rt0.c0))>((x'')))))) UNION SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (((((rt0.c1)AND(((((((((rt0.c1)AND(rt0.c2)))AND(rt0.c2)))AND(rt0.c2)))AND(rt0.c0)))))AND((((rt0.c0))>((x'')))))))) UNION SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE (((((((rt0.c1)AND(((((((((rt0.c1)AND(rt0.c2)))AND(rt0.c2)))AND(rt0.c2)))AND(rt0.c0)))))AND((((rt0.c0))>((x'')))))) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0 FROM rt0;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (((((rt0.c0)*(rt0.c0)))AND(rt0.c1))) GROUP BY rt0.c1, rt0.c0, rt0.c2 UNION SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (((((rt0.c0)*(rt0.c0)))AND(rt0.c1))))) GROUP BY rt0.c1, rt0.c0, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (((((((rt0.c0)*(rt0.c0)))AND(rt0.c1))) ISNULL)) GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING MAX(SUM(rt0.c0)) COLLATE BINARY UNION ALL SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING (NOT (MAX(SUM(rt0.c0)) COLLATE BINARY)) UNION ALL SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING ((MAX(SUM(rt0.c0)) COLLATE BINARY) ISNULL);
SELECT ALL rt0.c0, rt0.c2 FROM rt0;
SELECT rt0.c0, rt0.c2 FROM rt0 WHERE ((((((rt0.c0))<>((rt0.c1))))||(json_array_length(rt0.c1, NULL)))) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT ((((((rt0.c0))<>((rt0.c1))))||(json_array_length(rt0.c1, NULL)))))) UNION ALL SELECT rt0.c0, rt0.c2 FROM rt0 WHERE ((((((((rt0.c0))!=((rt0.c1))))||(json_array_length(rt0.c1, NULL)))) ISNULL));
SELECT ALL rt0.c0, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c1 FROM rt0 WHERE (((((rt0.c2) NOT BETWEEN ('-8592797') AND (rt0.c0)))<=(((((((((rt0.c0)AND(rt0.c1)))OR(-248802749)))OR(rt0.c0)))AND(rt0.c2))))) UNION SELECT DISTINCT rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (((((rt0.c2) NOT BETWEEN ('-8592797') AND (rt0.c0)))<=(((((((((rt0.c0)AND(rt0.c1)))OR(-248802749)))OR(rt0.c0)))AND(rt0.c2))))))) UNION SELECT DISTINCT rt0.c0, rt0.c1 FROM rt0 WHERE (((((((rt0.c2) NOT BETWEEN ('-8592797') AND (rt0.c0)))<=(((((((((rt0.c0)AND(rt0.c1)))OR(-248802749)))OR(rt0.c0)))AND(rt0.c2))))) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c1 FROM rt0;
SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 WHERE (((((((((rt0.c1 COLLATE RTRIM)AND(((((rt0.c1)OR(rt0.c2)))AND(rt0.c2)))))OR((NOT (rt0.c0)))))AND((rt0.c1 IN ()))))AND(IFNULL(rt0.c2, 0.2181872081220424)))) GROUP BY rt0.c2, rt0.c0 UNION SELECT rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (((((((((rt0.c1 COLLATE RTRIM)AND(((((rt0.c1)OR(rt0.c2)))AND(rt0.c2)))))OR((NOT (rt0.c0)))))AND((rt0.c1 IN ()))))AND(IFNULL(rt0.c2, 0.2181872081220424)))))) GROUP BY rt0.c2, rt0.c0 UNION SELECT rt0.c2, rt0.c0 FROM rt0 WHERE (((((((((((rt0.c1 COLLATE RTRIM)AND(((((rt0.c1)OR(rt0.c2)))AND(rt0.c2)))))OR((NOT (rt0.c0)))))AND((rt0.c1 IN ()))))AND(IFNULL(rt0.c2, 0.2181872081220424)))) ISNULL)) GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING COUNT((TOTAL(rt0.c0) IN ())) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING (NOT (COUNT((TOTAL(rt0.c0) IN ())))) UNION ALL SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 NOT INDEXED GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING ((COUNT((TOTAL(rt0.c0) IN ()))) ISNULL);
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING COUNT((TOTAL(rt0.c0) IN ())) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING (NOT (COUNT((TOTAL(rt0.c0) IN ())))) UNION ALL SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 NOT INDEXED GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING ((COUNT((TOTAL(rt0.c0) IN ()))) ISNULL);
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE ((((rt0.c1)%(x'')) IN ())) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT ((((rt0.c1)%(x'')) IN ())))) UNION ALL SELECT * FROM rt0 WHERE ((((((rt0.c1)%(x'')) IN ())) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (ABS(DISTINCT rt0.c0 COLLATE NOCASE)) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (ABS(DISTINCT rt0.c0 COLLATE NOCASE)))) UNION SELECT DISTINCT * FROM rt0 WHERE (((ABS(DISTINCT rt0.c0 COLLATE NOCASE)) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 WHERE ((((rt0.c0 IN (rt0.c1))) NOT NULL)) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM rt0 WHERE ((NOT ((((rt0.c0 IN (rt0.c1))) NOT NULL)))) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM rt0 WHERE ((((((rt0.c0 IN (rt0.c1))) NOT NULL)) ISNULL)) GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING MAX(MIN(SUM(COUNT(MIN(rt0.c1))))) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT (MAX(MIN(SUM(COUNT(MIN(rt0.c1))))))) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((MAX(MIN(SUM(COUNT(MIN(rt0.c1)))))) ISNULL);
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((((('^?4') NOT NULL)) NOT BETWEEN (((rt0.c1)LIKE(0.9476071935847308))) AND ((+ (rt0.c1))))) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT ((((('^?4') NOT NULL)) NOT BETWEEN (((rt0.c1)LIKE(0.9476071935847308))) AND ((+ (rt0.c1))))))) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((((((('^?4') NOT NULL)) NOT BETWEEN (((rt0.c1)LIKE(0.9476071935847308))) AND ((+ (rt0.c1))))) ISNULL));
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0 WHERE (rt0.c1) UNION SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (rt0.c1))) UNION SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0 WHERE (((rt0.c1) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((((rt0.c0, rt0.c2, rt0.c1)) NOT BETWEEN ((rt0.c2 COLLATE NOCASE, CAST(rt0.c2 AS BLOB), ('' IN ()))) AND ((CAST('1198732255' AS TEXT), ((551714941) NOT NULL), '-626027665')))) GROUP BY rt0.c2, rt0.c1, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT ((((rt0.c0, rt0.c2, rt0.c1)) NOT BETWEEN ((rt0.c2 COLLATE NOCASE, CAST(rt0.c2 AS BLOB), ('' IN ()))) AND ((CAST('1198732255' AS TEXT), ((551714941) NOT NULL), '-626027665')))))) GROUP BY rt0.c2, rt0.c1, rt0.c0 UNION SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((((((rt0.c0, rt0.c2, rt0.c1)) NOT BETWEEN ((rt0.c2 COLLATE NOCASE, CAST(rt0.c2 AS BLOB), ('' IN ()))) AND ((CAST('1198732255' AS TEXT), ((551714941) NOT NULL), '-626027665')))) ISNULL)) GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 NOT INDEXED GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING (((AVG(SUM(rt0.c0)))) BETWEEN ((TOTAL(rt0.c2))) AND ((TOTAL(rt0.c1)))) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING (NOT ((((AVG(SUM(rt0.c0)))) BETWEEN ((TOTAL(rt0.c2))) AND ((TOTAL(rt0.c1)))))) UNION ALL SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING (((((AVG(SUM(rt0.c0)))) BETWEEN ((TOTAL(rt0.c2))) AND ((TOTAL(rt0.c1))))) ISNULL);
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE (CAST(((rt0.c0)+(rt0.c2)) AS NUMERIC)) UNION ALL SELECT * FROM rt0 WHERE ((NOT (CAST(((rt0.c0)+(rt0.c2)) AS NUMERIC)))) UNION ALL SELECT ALL * FROM rt0 WHERE (((CAST(((rt0.c0)+(rt0.c2)) AS NUMERIC)) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE (rt0.c2) UNION SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (rt0.c2))) UNION SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE (((rt0.c2) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM rt0;
SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 WHERE ((((rt0.c2 IN (rt0.c1))) BETWEEN (CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c0 END) AND ((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c1)))))) GROUP BY rt0.c2, rt0.c0 UNION SELECT rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT ((((rt0.c2 IN (rt0.c1))) BETWEEN (CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c0 END) AND ((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c1)))))))) GROUP BY rt0.c2, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c0 FROM rt0 WHERE ((((((rt0.c2 IN (rt0.c1))) BETWEEN (CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c0 END) AND ((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c1)))))) ISNULL)) GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c1 FROM rt0;
SELECT ALL rt0.c1 FROM rt0 WHERE ((NOT (rt0.c0 COLLATE BINARY))) UNION ALL SELECT ALL rt0.c1 FROM rt0 WHERE ((NOT ((NOT (rt0.c0 COLLATE BINARY))))) UNION ALL SELECT ALL rt0.c1 FROM rt0 WHERE ((((NOT (rt0.c0 COLLATE BINARY))) ISNULL));
SELECT rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0 WHERE ((((rt0.c0) ISNULL) IN ())) UNION SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT ((((rt0.c0) ISNULL) IN ())))) UNION SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0 WHERE ((((((rt0.c0) ISNULL) IN ())) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c2, rt0.c1 FROM rt0 WHERE (rt0.c2) GROUP BY rt0.c2, rt0.c1 UNION SELECT rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (rt0.c2))) GROUP BY rt0.c2, rt0.c1 UNION SELECT rt0.c2, rt0.c1 FROM rt0 WHERE (((rt0.c2) ISNULL)) GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING (+ (AVG(rt0.c1))) UNION ALL SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING (NOT ((+ (AVG(rt0.c1))))) UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING (((+ (AVG(rt0.c1)))) ISNULL);
SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING (+ (AVG(rt0.c1))) UNION ALL SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING (NOT ((+ (AVG(rt0.c1))))) UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING (((+ (AVG(rt0.c1)))) ISNULL);
SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c0 FROM rt0;
SELECT rt0.c0 FROM rt0 WHERE (CASE CAST(rt0.c1 AS BLOB)  WHEN CASE WHEN rt0.c0 THEN rt0.c2 END THEN ((rt0.c0) NOT NULL) ELSE NULL END) UNION ALL SELECT rt0.c0 FROM rt0 WHERE ((NOT (CASE CAST(rt0.c1 AS BLOB)  WHEN CASE WHEN rt0.c0 THEN rt0.c2 END THEN ((rt0.c0) NOT NULL) ELSE NULL END))) UNION ALL SELECT ALL rt0.c0 FROM rt0 WHERE (((CASE CAST(rt0.c1 AS BLOB)  WHEN CASE WHEN rt0.c0 THEN rt0.c2 END THEN ((rt0.c0) NOT NULL) ELSE NULL END) ISNULL));
SELECT rt0.c0 FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (CAST((((rt0.c1))=((rt0.c1))) AS BLOB)) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (CAST((((rt0.c1))==((rt0.c1))) AS BLOB)))) UNION SELECT DISTINCT * FROM rt0 WHERE (((CAST((((rt0.c1))==((rt0.c1))) AS BLOB)) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c1 FROM rt0 WHERE (RTRIM(((x'') NOT BETWEEN (rt0.c1) AND (rt0.c2)))) GROUP BY rt0.c0, rt0.c1 UNION SELECT rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (RTRIM(((x'') NOT BETWEEN (rt0.c1) AND (rt0.c2)))))) GROUP BY rt0.c0, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c1 FROM rt0 WHERE (((RTRIM(((x'') NOT BETWEEN (rt0.c1) AND (rt0.c2)))) ISNULL)) GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING ((COUNT(*))-(rt0.c1)) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING (NOT (((COUNT(*))-(rt0.c1)))) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING ((((COUNT(*))-(rt0.c1))) ISNULL);
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING ((COUNT(*))-(rt0.c1)) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING (NOT (((COUNT(*))-(rt0.c1)))) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING ((((COUNT(*))-(rt0.c1))) ISNULL);
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE (CASE rt0.c1 COLLATE NOCASE  WHEN (x'' IN ()) THEN CASE WHEN NULL THEN rt0.c0 END END) UNION ALL SELECT * FROM rt0 WHERE ((NOT (CASE rt0.c1 COLLATE NOCASE  WHEN (x'' IN ()) THEN CASE WHEN NULL THEN rt0.c0 END END))) UNION ALL SELECT * FROM rt0 WHERE (((CASE rt0.c1 COLLATE NOCASE  WHEN (x'' IN ()) THEN CASE WHEN NULL THEN rt0.c0 END END) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2))) NOTNULL)) UNION SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2))) NOTNULL)))) UNION SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (((((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2))) NOTNULL)) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 WHERE ((((CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 END))<=((((rt0.c1) IS FALSE))))) GROUP BY rt0.c2, rt0.c0 UNION SELECT rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT ((((CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 END))<=((((rt0.c1) IS FALSE))))))) GROUP BY rt0.c2, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c0 FROM rt0 NOT INDEXED WHERE ((((((CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 END))<=((((rt0.c1) IS FALSE))))) ISNULL)) GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0, rt0.c1 FROM rt0;
SELECT rt0.c0, rt0.c1 FROM rt0 WHERE (((((((((x'383c')AND(LTRIM(rt0.c1))))OR(CASE ''  WHEN rt0.c2 THEN rt0.c2 END)))AND(rt0.c0)))OR((rt0.c1 IN ())))) UNION ALL SELECT rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (((((((((x'383c')AND(LTRIM(rt0.c1))))OR(CASE ''  WHEN rt0.c2 THEN rt0.c2 END)))AND(rt0.c0)))OR((rt0.c1 IN ())))))) UNION ALL SELECT rt0.c0, rt0.c1 FROM rt0 WHERE (((((((((((x'383c')AND(LTRIM(rt0.c1))))OR(CASE ''  WHEN rt0.c2 THEN rt0.c2 END)))AND(rt0.c0)))OR((rt0.c1 IN ())))) ISNULL));
SELECT ALL rt0.c0, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c1 FROM rt0 WHERE (LIKELIHOOD(DISTINCT rt0.c2, 0.06980077436758958)) UNION SELECT DISTINCT rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (LIKELIHOOD(DISTINCT rt0.c2, 0.06980077436758958)))) UNION SELECT DISTINCT rt0.c0, rt0.c1 FROM rt0 WHERE (((LIKELIHOOD(DISTINCT rt0.c2, 0.06980077436758958)) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c1 FROM rt0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((((((((rt0.c0, rt0.c0, rt0.c0))==((rt0.c2, NULL, NULL))))OR(CAST(rt0.c1 AS REAL))))OR(((rt0.c0)AND(rt0.c0))))) GROUP BY rt0.c1, rt0.c2, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT ((((((((rt0.c0, rt0.c0, rt0.c0))==((rt0.c2, NULL, NULL))))OR(CAST(rt0.c1 AS REAL))))OR(((rt0.c0)AND(rt0.c0))))))) GROUP BY rt0.c1, rt0.c2, rt0.c0 UNION SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((((((((((rt0.c0, rt0.c0, rt0.c0))==((rt0.c2, NULL, NULL))))OR(CAST(rt0.c1 AS REAL))))OR(((rt0.c0)AND(rt0.c0))))) ISNULL)) GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING (rt0.c1 IN ()) UNION ALL SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING (NOT ((rt0.c1 IN ()))) UNION ALL SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING (((rt0.c1 IN ())) ISNULL);
SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING (rt0.c1 IN ()) UNION ALL SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING (NOT ((rt0.c1 IN ()))) UNION ALL SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING (((rt0.c1 IN ())) ISNULL);
SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE (((((rt0.c1)/(rt0.c1))) NOT NULL)) UNION ALL SELECT * FROM rt0 WHERE ((NOT (((((rt0.c1)/(rt0.c1))) NOT NULL)))) UNION ALL SELECT ALL * FROM rt0 WHERE (((((((rt0.c1)/(rt0.c1))) NOT NULL)) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c1 FROM rt0 WHERE (CAST(((((((((rt0.c1)OR(rt0.c2)))OR(rt0.c1)))AND(rt0.c0)))OR(rt0.c1)) AS BLOB)) UNION SELECT DISTINCT rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (CAST(((((((((rt0.c1)OR(rt0.c2)))OR(rt0.c1)))AND(rt0.c0)))OR(rt0.c1)) AS BLOB)))) UNION SELECT DISTINCT rt0.c0, rt0.c1 FROM rt0 WHERE (((CAST(((((((((rt0.c1)OR(rt0.c2)))OR(rt0.c1)))AND(rt0.c0)))OR(rt0.c1)) AS BLOB)) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c1 FROM rt0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 WHERE (CASE CAST(rt0.c0 AS INTEGER)  WHEN CAST(rt0.c1 AS NUMERIC) THEN ((rt0.c2)<<(rt0.c1)) WHEN load_extension(rt0.c0, rt0.c1) THEN ((rt0.c1) NOT NULL) WHEN ((0.9049257562157469)<>(rt0.c0)) THEN (+ (rt0.c2)) END) GROUP BY rt0.c2, rt0.c0 UNION SELECT rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (CASE CAST(rt0.c0 AS INTEGER)  WHEN CAST(rt0.c1 AS NUMERIC) THEN ((rt0.c2)<<(rt0.c1)) WHEN load_extension(rt0.c0, rt0.c1) THEN ((rt0.c1) NOT NULL) WHEN ((0.9049257562157469)!=(rt0.c0)) THEN (+ (rt0.c2)) END))) GROUP BY rt0.c2, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c0 FROM rt0 WHERE (((CASE CAST(rt0.c0 AS INTEGER)  WHEN CAST(rt0.c1 AS NUMERIC) THEN ((rt0.c2)<<(rt0.c1)) WHEN load_extension(rt0.c0, rt0.c1) THEN ((rt0.c1) NOT NULL) WHEN ((0.9049257562157469)<>(rt0.c0)) THEN (+ (rt0.c2)) END) ISNULL)) GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING GROUP_CONCAT(((AVG(rt0.c0)) BETWEEN (MAX(COUNT(MAX(SUM(rt0.c0))))) AND (rt0.c2))) UNION ALL SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING (NOT (GROUP_CONCAT(((AVG(rt0.c0)) BETWEEN (MAX(COUNT(MAX(SUM(rt0.c0))))) AND (rt0.c2))))) UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING ((GROUP_CONCAT(((AVG(rt0.c0)) BETWEEN (MAX(COUNT(MAX(SUM(rt0.c0))))) AND (rt0.c2)))) ISNULL);
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE ((((CAST(rt0.c2 AS NUMERIC)))>=(((- (rt0.c0)))))) UNION ALL SELECT * FROM rt0 WHERE ((NOT ((((CAST(rt0.c2 AS NUMERIC)))>=(((- (rt0.c0)))))))) UNION ALL SELECT ALL * FROM rt0 WHERE ((((((CAST(rt0.c2 AS NUMERIC)))>=(((- (rt0.c0)))))) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (CASE ((rt0.c1)>=(rt0.c2))  WHEN rt0.c1 THEN CAST(rt0.c1 AS BLOB) WHEN ((rt0.c0)<<(rt0.c1)) THEN (+ (rt0.c1)) WHEN CASE WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c1 END THEN (((rt0.c2))>((rt0.c1))) ELSE highlight(0X62b55944, rt0.c2, rt0.c0, rt0.c2) END) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (CASE ((rt0.c1)>=(rt0.c2))  WHEN rt0.c1 THEN CAST(rt0.c1 AS BLOB) WHEN ((rt0.c0)<<(rt0.c1)) THEN (+ (rt0.c1)) WHEN CASE WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c1 END THEN (((rt0.c2))>((rt0.c1))) ELSE highlight(0x62b55944, rt0.c2, rt0.c0, rt0.c2) END))) UNION SELECT DISTINCT * FROM rt0 WHERE (((CASE ((rt0.c1)>=(rt0.c2))  WHEN rt0.c1 THEN CAST(rt0.c1 AS BLOB) WHEN ((rt0.c0)<<(rt0.c1)) THEN (+ (rt0.c1)) WHEN CASE WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c1 END THEN (((rt0.c2))>((rt0.c1))) ELSE highlight(0x62b55944, rt0.c2, rt0.c0, rt0.c2) END) ISNULL));
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 WHERE (((rt0.c1 COLLATE BINARY)*(((rt0.c0)GLOB(rt0.c1))))) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM rt0 WHERE ((NOT (((rt0.c1 COLLATE BINARY)*(((rt0.c0)GLOB(rt0.c1))))))) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM rt0 WHERE (((((rt0.c1 COLLATE BINARY)*(((rt0.c0)GLOB(rt0.c1))))) ISNULL)) GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING MAX(GROUP_CONCAT(rt0.c1)) UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING (NOT (MAX(GROUP_CONCAT(rt0.c1)))) UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING ((MAX(GROUP_CONCAT(rt0.c1))) ISNULL);
SELECT ALL SUM(((CAST(rt0.c1 AS INTEGER)) IS TRUE)) FROM rt0;
SELECT ALL * FROM rt0;
SELECT * FROM rt0 WHERE ('-533911034') UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT ('-533911034'))) UNION ALL SELECT * FROM rt0 WHERE ((('-533911034') ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0 WHERE (((((CASE rt0.c0  WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c2 END)AND((((rt0.c2))<=((rt0.c1))))))AND(((((rt0.c2)OR(rt0.c2)))OR(rt0.c1))))) UNION SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (((((CASE rt0.c0  WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c2 END)AND((((rt0.c2))<=((rt0.c1))))))AND(((((rt0.c2)OR(rt0.c2)))OR(rt0.c1))))))) UNION SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0 WHERE (((((((CASE rt0.c0  WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c2 END)AND((((rt0.c2))<=((rt0.c1))))))AND(((((rt0.c2)OR(rt0.c2)))OR(rt0.c1))))) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE (2100608827) GROUP BY rt0.c0, rt0.c2, rt0.c1 UNION SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (2100608827))) GROUP BY rt0.c0, rt0.c2, rt0.c1 UNION SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE (((2100608827) ISNULL)) GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING CASE WHEN TOTAL(COUNT(rt0.c0)) THEN rt0.c0 END UNION ALL SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING (NOT (CASE WHEN TOTAL(COUNT(rt0.c0)) THEN rt0.c0 END)) UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING ((CASE WHEN TOTAL(COUNT(rt0.c0)) THEN rt0.c0 END) ISNULL);
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE (((0.3032092660296952)<<((rt0.c0 IN ())))) UNION ALL SELECT * FROM rt0 WHERE ((NOT (((0.3032092660296952)<<((rt0.c0 IN ())))))) UNION ALL SELECT * FROM rt0 WHERE (((((0.3032092660296952)<<((rt0.c0 IN ())))) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (rt0.c0) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (rt0.c0))) UNION SELECT DISTINCT * FROM rt0 WHERE (((rt0.c0) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 WHERE (CAST(x'' AS REAL)) GROUP BY rt0.c1, rt0.c0 UNION SELECT rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (CAST(x'' AS REAL)))) GROUP BY rt0.c1, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c0 FROM rt0 WHERE (((CAST(x'' AS REAL)) ISNULL)) GROUP BY rt0.c1, rt0.c0;
SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING AVG(MIN(COUNT(COUNT(COUNT(rt0.c1))))) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING (NOT (AVG(MIN(COUNT(COUNT(COUNT(rt0.c1))))))) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING ((AVG(MIN(COUNT(COUNT(COUNT(rt0.c1)))))) ISNULL);
SELECT rt0.c2 FROM rt0;
SELECT ALL rt0.c2 FROM rt0 WHERE (((((((((']d>2m')OR(CASE WHEN rt0.c2 THEN rt0.c2 END)))OR(((rt0.c1)AND(rt0.c2)))))AND(CASE rt0.c2  WHEN rt0.c1 THEN rt0.c2 END)))AND(CAST(rt0.c0 AS TEXT)))) UNION ALL SELECT rt0.c2 FROM rt0 WHERE ((NOT (((((((((']d>2m')OR(CASE WHEN rt0.c2 THEN rt0.c2 END)))OR(((rt0.c1)AND(rt0.c2)))))AND(CASE rt0.c2  WHEN rt0.c1 THEN rt0.c2 END)))AND(CAST(rt0.c0 AS TEXT)))))) UNION ALL SELECT ALL rt0.c2 FROM rt0 WHERE (((((((((((']d>2m')OR(CASE WHEN rt0.c2 THEN rt0.c2 END)))OR(((rt0.c1)AND(rt0.c2)))))AND(CASE rt0.c2  WHEN rt0.c1 THEN rt0.c2 END)))AND(CAST(rt0.c0 AS TEXT)))) ISNULL));
SELECT rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0 NOT INDEXED;
SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0 WHERE ((((rt0.c2 IN ())) NOT NULL)) UNION SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT ((((rt0.c2 IN ())) NOT NULL)))) UNION SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0 WHERE ((((((rt0.c2 IN ())) NOT NULL)) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0 NOT INDEXED;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM rt0 WHERE (CAST(rt0.c1 COLLATE NOCASE AS BLOB)) GROUP BY rt0.c2, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (CAST(rt0.c1 COLLATE NOCASE AS BLOB)))) GROUP BY rt0.c2, rt0.c0 UNION SELECT rt0.c2, rt0.c0 FROM rt0 WHERE (((CAST(rt0.c1 COLLATE NOCASE AS BLOB)) ISNULL)) GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING MAX(GROUP_CONCAT(rt0.c0)) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING (NOT (MAX(GROUP_CONCAT(rt0.c0)))) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING ((MAX(GROUP_CONCAT(rt0.c0))) ISNULL);
SELECT ALL * FROM rt0;
SELECT * FROM rt0 WHERE (IFNULL(((rt0.c1) IS FALSE), (((rt0.c2, rt0.c0, rt0.c1)) NOT BETWEEN ((rt0.c0, rt0.c2, rt0.c1)) AND ((rt0.c0, 0.6088992124122811, rt0.c0))))) UNION ALL SELECT * FROM rt0 WHERE ((NOT (IFNULL(((rt0.c1) IS FALSE), (((rt0.c2, rt0.c0, rt0.c1)) NOT BETWEEN ((rt0.c0, rt0.c2, rt0.c1)) AND ((rt0.c0, 0.6088992124122811, rt0.c0))))))) UNION ALL SELECT ALL * FROM rt0 WHERE (((IFNULL(((rt0.c1) IS FALSE), (((rt0.c2, rt0.c0, rt0.c1)) NOT BETWEEN ((rt0.c0, rt0.c2, rt0.c1)) AND ((rt0.c0, 0.6088992124122811, rt0.c0))))) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((CAST(rt0.c2 AS INTEGER))&((((rt0.c0, rt0.c1, rt0.c2)) BETWEEN ((rt0.c2, rt0.c1, rt0.c1)) AND ((rt0.c0, rt0.c0, rt0.c1)))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((CAST(rt0.c2 AS INTEGER))&((((rt0.c0, rt0.c1, rt0.c2)) BETWEEN ((rt0.c2, rt0.c1, rt0.c1)) AND ((rt0.c0, rt0.c0, rt0.c1)))))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((CAST(rt0.c2 AS INTEGER))&((((rt0.c0, rt0.c1, rt0.c2)) BETWEEN ((rt0.c2, rt0.c1, rt0.c1)) AND ((rt0.c0, rt0.c0, rt0.c1)))))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE (((rt0.c0)%(rt0.c2)) COLLATE NOCASE) GROUP BY rt0.c0, rt0.c2, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (((rt0.c0)%(rt0.c2)) COLLATE NOCASE))) GROUP BY rt0.c0, rt0.c2, rt0.c1 UNION SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE (((((rt0.c0)%(rt0.c2)) COLLATE NOCASE) ISNULL)) GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (+ (CAST(rt0.c0 AS TEXT))) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT ((+ (CAST(rt0.c0 AS TEXT))))) UNION ALL SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (((+ (CAST(rt0.c0 AS TEXT)))) ISNULL);
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (+ (CAST(rt0.c0 AS TEXT))) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT ((+ (CAST(rt0.c0 AS TEXT))))) UNION ALL SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (((+ (CAST(rt0.c0 AS TEXT)))) ISNULL);
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (rt0.c2))) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT ((NOT (rt0.c2))))) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((((NOT (rt0.c2))) ISNULL));
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE (((TRIM(DISTINCT rt0.c0, rt0.c0))=(((rt0.c1) IS TRUE)))) UNION SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (((TRIM(DISTINCT rt0.c0, rt0.c0))=(((rt0.c1) IS TRUE)))))) UNION SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE (((((TRIM(DISTINCT rt0.c0, rt0.c0))==(((rt0.c1) IS TRUE)))) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM rt0;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 WHERE (rt0.c2) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0 WHERE ((NOT (rt0.c2))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0 WHERE (((rt0.c2) ISNULL)) GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING (((COUNT(rt0.c0))) NOT BETWEEN ((((COUNT(rt0.c1)) ISNULL))) AND ((TOTAL(MIN(COUNT(*)))))) UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING (NOT ((((COUNT(rt0.c0))) NOT BETWEEN ((((COUNT(rt0.c1)) ISNULL))) AND ((TOTAL(MIN(COUNT(*)))))))) UNION ALL SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING (((((COUNT(rt0.c0))) NOT BETWEEN ((((COUNT(rt0.c1)) ISNULL))) AND ((TOTAL(MIN(COUNT(*))))))) ISNULL);
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE (NULL) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (NULL))) UNION ALL SELECT ALL * FROM rt0 WHERE (((NULL) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c0 FROM rt0 WHERE ((((NOT (rt0.c0))) NOTNULL)) UNION SELECT DISTINCT rt0.c0 FROM rt0 WHERE ((NOT ((((NOT (rt0.c0))) NOTNULL)))) UNION SELECT DISTINCT rt0.c0 FROM rt0 WHERE ((((((NOT (rt0.c0))) NOTNULL)) ISNULL));
SELECT DISTINCT rt0.c0 FROM rt0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 WHERE (((rt0.c2 COLLATE NOCASE) NOT BETWEEN ((NOT (rt0.c1))) AND (rt0.c0 COLLATE NOCASE))) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM rt0 WHERE ((NOT (((rt0.c2 COLLATE NOCASE) NOT BETWEEN ((NOT (rt0.c1))) AND (rt0.c0 COLLATE NOCASE))))) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM rt0 WHERE (((((rt0.c2 COLLATE NOCASE) NOT BETWEEN ((NOT (rt0.c1))) AND (rt0.c0 COLLATE NOCASE))) ISNULL)) GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE (CASE WHEN rt0.c0 THEN (((rt0.c0))!=((rt0.c2))) ELSE -9223372036854775808 END) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (CASE WHEN rt0.c0 THEN (((rt0.c0))<>((rt0.c2))) ELSE -9223372036854775808 END))) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE (((CASE WHEN rt0.c0 THEN (((rt0.c0))!=((rt0.c2))) ELSE -9223372036854775808 END) ISNULL));
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0 WHERE (((('-194628524' IN (rt0.c0, rt0.c1)))<<(CAST(rt0.c2 AS BLOB)))) UNION SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (((('-194628524' IN (rt0.c0, rt0.c1)))<<(CAST(rt0.c2 AS BLOB)))))) UNION SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0 WHERE (((((('-194628524' IN (rt0.c0, rt0.c1)))<<(CAST(rt0.c2 AS BLOB)))) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 WHERE (((((((1245601793)OR(rt0.c2)))AND(rt0.c0))) NOT BETWEEN ((rt0.c0 IN (rt0.c2))) AND (rt0.c0 COLLATE NOCASE))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0 WHERE ((NOT (((((((1245601793)OR(rt0.c2)))AND(rt0.c0))) NOT BETWEEN ((rt0.c0 IN (rt0.c2))) AND (rt0.c0 COLLATE NOCASE))))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0 WHERE (((((((((1245601793)OR(rt0.c2)))AND(rt0.c0))) NOT BETWEEN ((rt0.c0 IN (rt0.c2))) AND (rt0.c0 COLLATE NOCASE))) ISNULL)) GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING INSTR(((MIN(MIN(rt0.c1))) BETWEEN (COUNT(rt0.c1)) AND (NULL)), MIN(rt0.c2)) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING (NOT (INSTR(((MIN(MIN(rt0.c1))) BETWEEN (COUNT(rt0.c1)) AND (NULL)), MIN(rt0.c2)))) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING ((INSTR(((MIN(MIN(rt0.c1))) BETWEEN (COUNT(rt0.c1)) AND (NULL)), MIN(rt0.c2))) ISNULL);
SELECT ALL * FROM rt0;
SELECT * FROM rt0 WHERE (((((rt0.c0) ISNULL))GLOB((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c0)))))) UNION ALL SELECT * FROM rt0 WHERE ((NOT (((((rt0.c0) ISNULL))GLOB((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c0)))))))) UNION ALL SELECT * FROM rt0 WHERE (((((((rt0.c0) ISNULL))GLOB((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c0)))))) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((((rt0.c1)&(rt0.c0)) IN ())) UNION SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT ((((rt0.c1)&(rt0.c0)) IN ())))) UNION SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((((((rt0.c1)&(rt0.c0)) IN ())) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM rt0 WHERE (((CASE rt0.c0  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c1 END) ISNULL)) GROUP BY rt0.c2, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (((CASE rt0.c0  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c1 END) ISNULL)))) GROUP BY rt0.c2, rt0.c0 UNION SELECT rt0.c2, rt0.c0 FROM rt0 WHERE (((((CASE rt0.c0  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c1 END) ISNULL)) ISNULL)) GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING GROUP_CONCAT(CASE WHEN GROUP_CONCAT(rt0.c0) THEN MAX(MIN(TOTAL(SUM(TOTAL(SUM(AVG(MAX(rt0.c0)))))))) WHEN rt0.c2 THEN TOTAL(COUNT(*)) WHEN rt0.c1 THEN COUNT(rt0.c1) END) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING (NOT (GROUP_CONCAT(CASE WHEN GROUP_CONCAT(rt0.c0) THEN MAX(MIN(TOTAL(SUM(TOTAL(SUM(AVG(MAX(rt0.c0)))))))) WHEN rt0.c2 THEN TOTAL(COUNT(*)) WHEN rt0.c1 THEN COUNT(rt0.c1) END))) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING ((GROUP_CONCAT(CASE WHEN GROUP_CONCAT(rt0.c0) THEN MAX(MIN(TOTAL(SUM(TOTAL(SUM(AVG(MAX(rt0.c0)))))))) WHEN rt0.c2 THEN TOTAL(COUNT(*)) WHEN rt0.c1 THEN COUNT(rt0.c1) END)) ISNULL);
SELECT rt0.c0, rt0.c1 FROM rt0;
SELECT rt0.c0, rt0.c1 FROM rt0 WHERE (((((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c0)))OR((rt0.c0 IN ())))) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (((((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c0)))OR((rt0.c0 IN ())))))) UNION ALL SELECT rt0.c0, rt0.c1 FROM rt0 WHERE (((((((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c0)))OR((rt0.c0 IN ())))) ISNULL));
SELECT rt0.c0, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0 WHERE ((((rt0.c2)) NOT BETWEEN (((((rt0.c0, rt0.c2, rt0.c2))=((rt0.c0, 0X16d3018f, rt0.c1))))) AND ((((rt0.c2)<<(rt0.c0)))))) UNION SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT ((((rt0.c2)) NOT BETWEEN (((((rt0.c0, rt0.c2, rt0.c2))==((rt0.c0, 0x16d3018f, rt0.c1))))) AND ((((rt0.c2)<<(rt0.c0)))))))) UNION SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0 WHERE ((((((rt0.c2)) NOT BETWEEN (((((rt0.c0, rt0.c2, rt0.c2))=((rt0.c0, 0X16d3018f, rt0.c1))))) AND ((((rt0.c2)<<(rt0.c0)))))) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 WHERE ((NOT (UPPER(rt0.c0)))) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM rt0 WHERE ((NOT ((NOT (UPPER(rt0.c0)))))) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM rt0 WHERE ((((NOT (UPPER(rt0.c0)))) ISNULL)) GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING MAX(((rt0.c0) NOTNULL)) UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT (MAX(((rt0.c0) NOTNULL)))) UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING ((MAX(((rt0.c0) NOTNULL))) ISNULL);
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING MAX(((rt0.c0) NOTNULL)) UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT (MAX(((rt0.c0) NOTNULL)))) UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING ((MAX(((rt0.c0) NOTNULL))) ISNULL);
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE (CASE ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c1))  WHEN ((rt0.c2) IS TRUE) THEN CAST(rt0.c2 AS BLOB) END) UNION ALL SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (CASE ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c1))  WHEN ((rt0.c2) IS TRUE) THEN CAST(rt0.c2 AS BLOB) END))) UNION ALL SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE (((CASE ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c1))  WHEN ((rt0.c2) IS TRUE) THEN CAST(rt0.c2 AS BLOB) END) ISNULL));
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((NOT (CASE WHEN rt0.c2 THEN rt0.c2 END))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((NOT (CASE WHEN rt0.c2 THEN rt0.c2 END))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((NOT (CASE WHEN rt0.c2 THEN rt0.c2 END))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 NOT INDEXED WHERE (((((((rt0.c1)AND(rt0.c1)))OR(rt0.c0)))<((rt0.c0 IN ())))) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM rt0 WHERE ((NOT (((((((rt0.c1)AND(rt0.c1)))OR(rt0.c0)))<((rt0.c0 IN ())))))) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM rt0 WHERE (((((((((rt0.c1)AND(rt0.c1)))OR(rt0.c0)))<((rt0.c0 IN ())))) ISNULL)) GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING UNLIKELY(MIN(COUNT(COUNT(*)))) UNION ALL SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT (UNLIKELY(MIN(COUNT(COUNT(*)))))) UNION ALL SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((UNLIKELY(MIN(COUNT(COUNT(*))))) ISNULL);
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE (NULL) UNION ALL SELECT * FROM rt0 WHERE ((NOT (NULL))) UNION ALL SELECT * FROM rt0 WHERE (((NULL) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (rt0.c0) UNION SELECT DISTINCT * FROM rt0 NOT INDEXED WHERE ((NOT (rt0.c0))) UNION SELECT DISTINCT * FROM rt0 WHERE (((rt0.c0) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 NOT INDEXED WHERE (((((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c1))) ISNULL)) GROUP BY rt0.c2, rt0.c0 UNION SELECT rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (((((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c1))) ISNULL)))) GROUP BY rt0.c2, rt0.c0 UNION SELECT rt0.c2, rt0.c0 FROM rt0 WHERE (((((((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c1))) ISNULL)) ISNULL)) GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING CASE (~ (COUNT(SUM(rt0.c1))))  WHEN ((COUNT(*))|(rt0.c2)) THEN AVG(rt0.c0) COLLATE NOCASE END UNION ALL SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING (NOT (CASE (~ (COUNT(SUM(rt0.c1))))  WHEN ((COUNT(*))|(rt0.c2)) THEN AVG(rt0.c0) COLLATE NOCASE END)) UNION ALL SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING ((CASE (~ (COUNT(SUM(rt0.c1))))  WHEN ((COUNT(*))|(rt0.c2)) THEN AVG(rt0.c0) COLLATE NOCASE END) ISNULL);
SELECT ALL * FROM rt0;
SELECT * FROM rt0 WHERE ((((((rt0.c1)AND(rt0.c0)))AND(rt0.c1)) IN (0.9845470845978582, (NOT (rt0.c2))))) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT ((((((rt0.c1)AND(rt0.c0)))AND(rt0.c1)) IN (0.9845470845978582, (NOT (rt0.c2))))))) UNION ALL SELECT * FROM rt0 WHERE ((((((((rt0.c1)AND(rt0.c0)))AND(rt0.c1)) IN (0.9845470845978582, (NOT (rt0.c2))))) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0 NOT INDEXED;
SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0 WHERE (((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 WHEN '4]' THEN rt0.c2 END)<(rt0.c0 COLLATE RTRIM))) UNION SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 WHEN '4]' THEN rt0.c2 END)<(rt0.c0 COLLATE RTRIM))))) UNION SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0 WHERE (((((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 WHEN '4]' THEN rt0.c2 END)<(rt0.c0 COLLATE RTRIM))) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0 NOT INDEXED;
SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 WHERE (((rt0.c1) NOT BETWEEN (((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c0))) AND (json_extract(rt0.c1, rt0.c0, rt0.c0, NULL)))) GROUP BY rt0.c1, rt0.c0 UNION SELECT rt0.c1, rt0.c0 FROM rt0 NOT INDEXED WHERE ((NOT (((rt0.c1) NOT BETWEEN (((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c0))) AND (json_extract(rt0.c1, rt0.c0, rt0.c0, NULL)))))) GROUP BY rt0.c1, rt0.c0 UNION SELECT rt0.c1, rt0.c0 FROM rt0 WHERE (((((rt0.c1) NOT BETWEEN (((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c0))) AND (json_extract(rt0.c1, rt0.c0, rt0.c0, NULL)))) ISNULL)) GROUP BY rt0.c1, rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING TOTAL(SUM(COUNT(COUNT(*)))) UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING (NOT (TOTAL(SUM(COUNT(COUNT(*)))))) UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING ((TOTAL(SUM(COUNT(COUNT(*))))) ISNULL);
SELECT MAX(((rt0.c1)||(CASE rt0.c1  WHEN rt0.c2 THEN 1275680218 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c0 END))) FROM rt0 ORDER BY ((((((rt0.c2)AND(rt0.c2)))AND(rt0.c0)))IS NOT(LIKELIHOOD(rt0.c0, 0.8027175111045056)))  NULLS FIRST;
SELECT rt0.c1 FROM rt0;
SELECT rt0.c1 FROM rt0 WHERE (CASE ((rt0.c0)-(rt0.c1))  WHEN ((((rt0.c2)OR(rt0.c1)))OR(rt0.c0)) THEN (((rt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c1))) ELSE (-1437251660 IN ()) END) UNION ALL SELECT rt0.c1 FROM rt0 WHERE ((NOT (CASE ((rt0.c0)-(rt0.c1))  WHEN ((((rt0.c2)OR(rt0.c1)))OR(rt0.c0)) THEN (((rt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c1))) ELSE (-1437251660 IN ()) END))) UNION ALL SELECT ALL rt0.c1 FROM rt0 WHERE (((CASE ((rt0.c0)-(rt0.c1))  WHEN ((((rt0.c2)OR(rt0.c1)))OR(rt0.c0)) THEN (((rt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c1))) ELSE (-1437251660 IN ()) END) ISNULL));
SELECT rt0.c1 FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((((rt0.c2 IN ()))*(((rt0.c1) BETWEEN ('1687177092') AND (rt0.c1))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((((rt0.c2 IN ()))*(((rt0.c1) BETWEEN ('1687177092') AND (rt0.c1))))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((((rt0.c2 IN ()))*(((rt0.c1) BETWEEN ('1687177092') AND (rt0.c1))))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 WHERE (rt0.c2) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM rt0 WHERE ((NOT (rt0.c2))) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM rt0 WHERE (((rt0.c2) ISNULL)) GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING 0.29586423403659345 UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT (0.29586423403659345)) UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING ((0.29586423403659345) ISNULL);
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING 0.29586423403659345 UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT (0.29586423403659345)) UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING ((0.29586423403659345) ISNULL);
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE (CAST((+ (rt0.c0)) AS NUMERIC)) UNION ALL SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (CAST((+ (rt0.c0)) AS NUMERIC)))) UNION ALL SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE (((CAST((+ (rt0.c0)) AS NUMERIC)) ISNULL));
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c0 FROM rt0 WHERE (rt0.c2) UNION SELECT DISTINCT rt0.c0 FROM rt0 WHERE ((NOT (rt0.c2))) UNION SELECT DISTINCT rt0.c0 FROM rt0 WHERE (((rt0.c2) ISNULL));
SELECT DISTINCT rt0.c0 FROM rt0;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 WHERE (x'4043') GROUP BY rt0.c0, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (x'4043'))) GROUP BY rt0.c0, rt0.c2 UNION SELECT rt0.c0, rt0.c2 FROM rt0 WHERE (((x'4043') ISNULL)) GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING MAX(rt0.c0 COLLATE RTRIM) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING (NOT (MAX(rt0.c0 COLLATE RTRIM))) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING ((MAX(rt0.c0 COLLATE RTRIM)) ISNULL);
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING MAX(rt0.c0 COLLATE RTRIM) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING (NOT (MAX(rt0.c0 COLLATE RTRIM))) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING ((MAX(rt0.c0 COLLATE RTRIM)) ISNULL);
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT ALL rt0.c0 FROM rt0;
SELECT ALL rt0.c0 FROM rt0 WHERE (((rt0.c0 COLLATE NOCASE)=(rt0.c0 COLLATE NOCASE))) UNION ALL SELECT ALL rt0.c0 FROM rt0 WHERE ((NOT (((rt0.c0 COLLATE NOCASE)==(rt0.c0 COLLATE NOCASE))))) UNION ALL SELECT ALL rt0.c0 FROM rt0 WHERE (((((rt0.c0 COLLATE NOCASE)=(rt0.c0 COLLATE NOCASE))) ISNULL));
SELECT ALL rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c2 FROM rt0 WHERE (((((rt0.c2) IS FALSE)) BETWEEN (rt0.c0) AND (((((rt0.c2)OR(rt0.c2)))OR(rt0.c2))))) UNION SELECT DISTINCT rt0.c2 FROM rt0 WHERE ((NOT (((((rt0.c2) IS FALSE)) BETWEEN (rt0.c0) AND (((((rt0.c2)OR(rt0.c2)))OR(rt0.c2))))))) UNION SELECT DISTINCT rt0.c2 FROM rt0 WHERE (((((((rt0.c2) IS FALSE)) BETWEEN (rt0.c0) AND (((((rt0.c2)OR(rt0.c2)))OR(rt0.c2))))) ISNULL));
SELECT DISTINCT rt0.c2 FROM rt0;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 WHERE ((((NOT (rt0.c2))) NOT NULL)) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0 WHERE ((NOT ((((NOT (rt0.c2))) NOT NULL)))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0 WHERE ((((((NOT (rt0.c2))) NOT NULL)) ISNULL)) GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING MIN(((rt0.c2) ISNULL)) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING (NOT (MIN(((rt0.c2) ISNULL)))) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING ((MIN(((rt0.c2) ISNULL))) ISNULL);
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING MIN(((rt0.c2) ISNULL)) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING (NOT (MIN(((rt0.c2) ISNULL)))) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING ((MIN(((rt0.c2) ISNULL))) ISNULL);
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT TOTAL(CAST(((rt0.c1) ISNULL) AS NUMERIC)) FROM rt0 ORDER BY CAST(CAST(rt0.c1 AS NUMERIC) AS BLOB) ASC  NULLS LAST, ((rt0.c2 IN ()) IN ())  NULLS LAST;
SELECT rt0.c1 FROM rt0;
SELECT rt0.c1 FROM rt0 WHERE (0.6295196173128041) UNION ALL SELECT ALL rt0.c1 FROM rt0 WHERE ((NOT (0.6295196173128041))) UNION ALL SELECT rt0.c1 FROM rt0 WHERE (((0.6295196173128041) ISNULL));
SELECT rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE (rt0.c1) UNION SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (rt0.c1))) UNION SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE (((rt0.c1) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE (((((rt0.c0)>>(rt0.c0))) IS TRUE)) GROUP BY rt0.c2, rt0.c1, rt0.c0 UNION SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (((((rt0.c0)>>(rt0.c0))) IS TRUE)))) GROUP BY rt0.c2, rt0.c1, rt0.c0 UNION SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE (((((((rt0.c0)>>(rt0.c0))) IS TRUE)) ISNULL)) GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING 'iM7F*Z' UNION ALL SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING (NOT ('iM7F*Z')) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING (('iM7F*Z') ISNULL);
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING 'iM7F*Z' UNION ALL SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING (NOT ('iM7F*Z')) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING (('iM7F*Z') ISNULL);
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL TOTAL(rt0.c1) FROM rt0;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (((rt0.c2)GLOB(NULL)) COLLATE BINARY) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (((rt0.c2)GLOB(NULL)) COLLATE BINARY))) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (((((rt0.c2)GLOB(NULL)) COLLATE BINARY) ISNULL));
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE (((NULL) BETWEEN (((rt0.c0)=(rt0.c1))) AND (((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c0))))) UNION SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (((NULL) BETWEEN (((rt0.c0)=(rt0.c1))) AND (((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c0))))))) UNION SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE (((((NULL) BETWEEN (((rt0.c0)==(rt0.c1))) AND (((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c0))))) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0 FROM rt0;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 WHERE ((CASE WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c1 END IN (rt0.c2, CASE WHEN rt0.c0 THEN rt0.c0 END))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0 WHERE ((NOT ((CASE WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c1 END IN (rt0.c2, CASE WHEN rt0.c0 THEN rt0.c0 END))))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0 WHERE ((((CASE WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c1 END IN (rt0.c2, CASE WHEN rt0.c0 THEN rt0.c0 END))) ISNULL)) GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING TOTAL(x'bf61c10b') UNION ALL SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING (NOT (TOTAL(x'bf61c10b'))) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING ((TOTAL(x'bf61c10b')) ISNULL);
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING TOTAL(x'bf61c10b') UNION ALL SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING (NOT (TOTAL(x'bf61c10b'))) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING ((TOTAL(x'bf61c10b')) ISNULL);
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE (CASE WHEN CAST(rt0.c1 AS NUMERIC) THEN NULL ELSE ((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c0)) END) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (CASE WHEN CAST(rt0.c1 AS NUMERIC) THEN NULL ELSE ((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c0)) END))) UNION ALL SELECT * FROM rt0 WHERE (((CASE WHEN CAST(rt0.c1 AS NUMERIC) THEN NULL ELSE ((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c0)) END) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE (((((CASE WHEN x'' THEN rt0.c0 END)AND(((rt0.c1)=(rt0.c2)))))OR(((rt0.c0)AND(rt0.c0))))) UNION SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (((((CASE WHEN x'' THEN rt0.c0 END)AND(((rt0.c1)=(rt0.c2)))))OR(((rt0.c0)AND(rt0.c0))))))) UNION SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE (((((((CASE WHEN x'' THEN rt0.c0 END)AND(((rt0.c1)==(rt0.c2)))))OR(((rt0.c0)AND(rt0.c0))))) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM rt0;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c2 FROM rt0 WHERE ((- ((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0)))))) GROUP BY rt0.c0, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT ((- ((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0)))))))) GROUP BY rt0.c0, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c2 FROM rt0 WHERE ((((- ((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0)))))) ISNULL)) GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING UNICODE(CASE WHEN GROUP_CONCAT(MAX(MAX(rt0.c1))) THEN MAX(0Xffffffffe73c05ae) END) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING (NOT (UNICODE(CASE WHEN GROUP_CONCAT(MAX(MAX(rt0.c1))) THEN MAX(0Xffffffffe73c05ae) END))) UNION ALL SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING ((UNICODE(CASE WHEN GROUP_CONCAT(MAX(MAX(rt0.c1))) THEN MAX(0xffffffffe73c05ae) END)) ISNULL);
SELECT ALL * FROM rt0;
SELECT * FROM rt0 NOT INDEXED WHERE ((- (((rt0.c0) IS TRUE)))) UNION ALL SELECT * FROM rt0 WHERE ((NOT ((- (((rt0.c0) IS TRUE)))))) UNION ALL SELECT * FROM rt0 WHERE ((((- (((rt0.c0) IS TRUE)))) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c0 FROM rt0 WHERE (rt0.c0) UNION SELECT DISTINCT rt0.c0 FROM rt0 WHERE ((NOT (rt0.c0))) UNION SELECT DISTINCT rt0.c0 FROM rt0 WHERE (((rt0.c0) ISNULL));
SELECT DISTINCT rt0.c0 FROM rt0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM rt0 WHERE (((((CAST(rt0.c2 AS TEXT))AND(rt0.c0)))OR(DATE(rt0.c2, rt0.c0, rt0.c0)))) GROUP BY rt0.c2, rt0.c0 UNION SELECT rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (((((CAST(rt0.c2 AS TEXT))AND(rt0.c0)))OR(DATE(rt0.c2, rt0.c0, rt0.c0)))))) GROUP BY rt0.c2, rt0.c0 UNION SELECT rt0.c2, rt0.c0 FROM rt0 WHERE (((((((CAST(rt0.c2 AS TEXT))AND(rt0.c0)))OR(DATE(rt0.c2, rt0.c0, rt0.c0)))) ISNULL)) GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING CASE WHEN (rt0.c0 IN (SUM(AVG(rt0.c2)))) THEN MIN(SUM(rt0.c1)) WHEN 0.19039524842484057 THEN ((rt0.c1)AND(COUNT(COUNT(*)))) WHEN MIN(TOTAL(AVG(rt0.c0))) COLLATE BINARY THEN MAX(SUM(rt0.c0)) ELSE ((MAX(COUNT(*))) NOT NULL) END UNION ALL SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING (NOT (CASE WHEN (rt0.c0 IN (SUM(AVG(rt0.c2)))) THEN MIN(SUM(rt0.c1)) WHEN 0.19039524842484057 THEN ((rt0.c1)AND(COUNT(COUNT(*)))) WHEN MIN(TOTAL(AVG(rt0.c0))) COLLATE BINARY THEN MAX(SUM(rt0.c0)) ELSE ((MAX(COUNT(*))) NOT NULL) END)) UNION ALL SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING ((CASE WHEN (rt0.c0 IN (SUM(AVG(rt0.c2)))) THEN MIN(SUM(rt0.c1)) WHEN 0.19039524842484057 THEN ((rt0.c1)AND(COUNT(COUNT(*)))) WHEN MIN(TOTAL(AVG(rt0.c0))) COLLATE BINARY THEN MAX(SUM(rt0.c0)) ELSE ((MAX(COUNT(*))) NOT NULL) END) ISNULL);
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE ((+ (((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c0))))) UNION ALL SELECT * FROM rt0 WHERE ((NOT ((+ (((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c0))))))) UNION ALL SELECT ALL * FROM rt0 WHERE ((((+ (((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c0))))) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c2 FROM rt0 WHERE ((((1196533387 IN ()))>>((('-1278768765') BETWEEN (rt0.c2) AND (rt0.c0))))) UNION SELECT DISTINCT rt0.c2 FROM rt0 WHERE ((NOT ((((1196533387 IN ()))>>((('-1278768765') BETWEEN (rt0.c2) AND (rt0.c0))))))) UNION SELECT DISTINCT rt0.c2 FROM rt0 WHERE ((((((1196533387 IN ()))>>((('-1278768765') BETWEEN (rt0.c2) AND (rt0.c0))))) ISNULL));
SELECT DISTINCT rt0.c2 FROM rt0;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (rt0.c1 COLLATE RTRIM) GROUP BY rt0.c1, rt0.c0, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (rt0.c1 COLLATE RTRIM))) GROUP BY rt0.c1, rt0.c0, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (((rt0.c1 COLLATE RTRIM) ISNULL)) GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING AVG((((MIN(MAX(COUNT(*))))) NOT BETWEEN (('-1186310552')) AND (('ï¿¿SsJ')))) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT (AVG((((MIN(MAX(COUNT(*))))) NOT BETWEEN (('-1186310552')) AND (('ï¿¿SsJ')))))) UNION ALL SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((AVG((((MIN(MAX(COUNT(*))))) NOT BETWEEN (('-1186310552')) AND (('ï¿¿SsJ'))))) ISNULL);
SELECT ALL * FROM rt0;
SELECT * FROM rt0 WHERE (((((((((((((rt0.c0)OR(x'0d1a')))AND(TRIM(DISTINCT rt0.c0))))AND('-1812268910')))AND(x'')))OR(((rt0.c1)LIKE(rt0.c1)))))OR(((rt0.c2)-(rt0.c2))))) UNION ALL SELECT * FROM rt0 WHERE ((NOT (((((((((((((rt0.c0)OR(x'0d1a')))AND(TRIM(DISTINCT rt0.c0))))AND('-1812268910')))AND(x'')))OR(((rt0.c1)LIKE(rt0.c1)))))OR(((rt0.c2)-(rt0.c2))))))) UNION ALL SELECT * FROM rt0 WHERE (((((((((((((((rt0.c0)OR(x'0d1a')))AND(TRIM(DISTINCT rt0.c0))))AND('-1812268910')))AND(x'')))OR(((rt0.c1)LIKE(rt0.c1)))))OR(((rt0.c2)-(rt0.c2))))) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((NULL)LIKE(((rt0.c2)>(rt0.c0))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((NULL)LIKE(((rt0.c2)>(rt0.c0))))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((NULL)LIKE(((rt0.c2)>(rt0.c0))))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 WHERE ((('-383749141')+(CAST(rt0.c2 AS REAL)))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0 WHERE ((NOT ((('-383749141')+(CAST(rt0.c2 AS REAL)))))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0 WHERE ((((('-383749141')+(CAST(rt0.c2 AS REAL)))) ISNULL)) GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING (- (((AVG(rt0.c1)) NOT NULL))) UNION ALL SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING (NOT ((- (((AVG(rt0.c1)) NOT NULL))))) UNION ALL SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING (((- (((AVG(rt0.c1)) NOT NULL)))) ISNULL);
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING (- (((AVG(rt0.c1)) NOT NULL))) UNION ALL SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING (NOT ((- (((AVG(rt0.c1)) NOT NULL))))) UNION ALL SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING (((- (((AVG(rt0.c1)) NOT NULL)))) ISNULL);
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT ALL * FROM rt0;
SELECT * FROM rt0 WHERE (x'21642b8f') UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (x'21642b8f'))) UNION ALL SELECT ALL * FROM rt0 WHERE (((x'21642b8f') ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((((203510711 IN ())) BETWEEN (JULIANDAY(rt0.c0, rt0.c2, x'')) AND (((rt0.c2) BETWEEN (-1084121264) AND (rt0.c2))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((((203510711 IN ())) BETWEEN (JULIANDAY(rt0.c0, rt0.c2, x'')) AND (((rt0.c2) BETWEEN (-1084121264) AND (rt0.c2))))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((((203510711 IN ())) BETWEEN (JULIANDAY(rt0.c0, rt0.c2, x'')) AND (((rt0.c2) BETWEEN (-1084121264) AND (rt0.c2))))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE (rt0.c2) GROUP BY rt0.c1, rt0.c2, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (rt0.c2))) GROUP BY rt0.c1, rt0.c2, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE (((rt0.c2) ISNULL)) GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING TOTAL(rt0.c0) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING (NOT (TOTAL(rt0.c0))) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING ((TOTAL(rt0.c0)) ISNULL);
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING TOTAL(rt0.c0) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING (NOT (TOTAL(rt0.c0))) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING ((TOTAL(rt0.c0)) ISNULL);
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL * FROM rt0;
SELECT * FROM rt0 WHERE (CAST(rt0.c0 AS REAL)) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (CAST(rt0.c0 AS REAL)))) UNION ALL SELECT ALL * FROM rt0 WHERE (((CAST(rt0.c0 AS REAL)) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c1 FROM rt0 WHERE (((rt0.c0 COLLATE NOCASE) NOT BETWEEN ('') AND ((- (rt0.c1))))) UNION SELECT DISTINCT rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (((rt0.c0 COLLATE NOCASE) NOT BETWEEN ('') AND ((- (rt0.c1))))))) UNION SELECT DISTINCT rt0.c0, rt0.c1 FROM rt0 WHERE (((((rt0.c0 COLLATE NOCASE) NOT BETWEEN ('') AND ((- (rt0.c1))))) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c1 FROM rt0;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((rt0.c2 IN ()) COLLATE RTRIM) GROUP BY rt0.c1, rt0.c0, rt0.c2 UNION SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT ((rt0.c2 IN ()) COLLATE RTRIM))) GROUP BY rt0.c1, rt0.c0, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((((rt0.c2 IN ()) COLLATE RTRIM) ISNULL)) GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING (AVG(MAX(SUM(rt0.c1))) IN ()) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING (NOT ((AVG(MAX(SUM(rt0.c1))) IN ()))) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING (((AVG(MAX(SUM(rt0.c1))) IN ())) ISNULL);
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING (AVG(MAX(SUM(rt0.c1))) IN ()) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING (NOT ((AVG(MAX(SUM(rt0.c1))) IN ()))) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING (((AVG(MAX(SUM(rt0.c1))) IN ())) ISNULL);
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c1 FROM rt0;
SELECT ALL rt0.c1 FROM rt0 WHERE (rt0.c2) UNION ALL SELECT rt0.c1 FROM rt0 WHERE ((NOT (rt0.c2))) UNION ALL SELECT rt0.c1 FROM rt0 WHERE (((rt0.c2) ISNULL));
SELECT rt0.c1 FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((((rt0.c2)GLOB(rt0.c0))) NOT BETWEEN ((+ (rt0.c2))) AND (((rt0.c2)IS(rt0.c2))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((((rt0.c2)GLOB(rt0.c0))) NOT BETWEEN ((+ (rt0.c2))) AND (((rt0.c2)IS(rt0.c2))))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((((rt0.c2)GLOB(rt0.c0))) NOT BETWEEN ((+ (rt0.c2))) AND (((rt0.c2)IS(rt0.c2))))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (LIKELY(CAST(rt0.c0 AS TEXT))) GROUP BY rt0.c1, rt0.c0, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (LIKELY(CAST(rt0.c0 AS TEXT))))) GROUP BY rt0.c1, rt0.c0, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (((LIKELY(CAST(rt0.c0 AS TEXT))) ISNULL)) GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING MIN(((TOTAL(AVG(AVG(rt0.c0)))) NOT NULL)) UNION ALL SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING (NOT (MIN(((TOTAL(AVG(AVG(rt0.c0)))) NOT NULL)))) UNION ALL SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING ((MIN(((TOTAL(AVG(AVG(rt0.c0)))) NOT NULL))) ISNULL);
SELECT ALL * FROM rt0;
SELECT * FROM rt0 WHERE (x'') UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (x''))) UNION ALL SELECT * FROM rt0 WHERE (((x'') ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE (((((rt0.c1)<=(rt0.c0))) NOTNULL)) UNION SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (((((rt0.c1)<=(rt0.c0))) NOTNULL)))) UNION SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE (((((((rt0.c1)<=(rt0.c0))) NOTNULL)) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM rt0;
SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c1, rt0.c2 FROM rt0 WHERE (((CAST(rt0.c0 AS BLOB)) NOT BETWEEN ((NOT (rt0.c2))) AND (NULL))) GROUP BY rt0.c1, rt0.c2 UNION SELECT rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (((CAST(rt0.c0 AS BLOB)) NOT BETWEEN ((NOT (rt0.c2))) AND (NULL))))) GROUP BY rt0.c1, rt0.c2 UNION SELECT rt0.c1, rt0.c2 FROM rt0 WHERE (((((CAST(rt0.c0 AS BLOB)) NOT BETWEEN ((NOT (rt0.c2))) AND (NULL))) ISNULL)) GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING LOWER(DISTINCT TOTAL(rt0.c1)) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 NOT INDEXED GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING (NOT (LOWER(DISTINCT TOTAL(rt0.c1)))) UNION ALL SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING ((LOWER(DISTINCT TOTAL(rt0.c1))) ISNULL);
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING LOWER(DISTINCT TOTAL(rt0.c1)) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 NOT INDEXED GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING (NOT (LOWER(DISTINCT TOTAL(rt0.c1)))) UNION ALL SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING ((LOWER(DISTINCT TOTAL(rt0.c1))) ISNULL);
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT rt0.c1, rt0.c2 FROM rt0;
SELECT rt0.c1, rt0.c2 FROM rt0 WHERE (CASE WHEN ((rt0.c1) NOT BETWEEN (0.09492073348299379) AND (rt0.c1)) THEN rt0.c2 COLLATE RTRIM ELSE JULIANDAY('0.18151145347986408', rt0.c2, rt0.c0) END) UNION ALL SELECT rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (CASE WHEN ((rt0.c1) NOT BETWEEN (0.09492073348299379) AND (rt0.c1)) THEN rt0.c2 COLLATE RTRIM ELSE JULIANDAY('0.18151145347986408', rt0.c2, rt0.c0) END))) UNION ALL SELECT rt0.c1, rt0.c2 FROM rt0 WHERE (((CASE WHEN ((rt0.c1) NOT BETWEEN (0.09492073348299379) AND (rt0.c1)) THEN rt0.c2 COLLATE RTRIM ELSE JULIANDAY('0.18151145347986408', rt0.c2, rt0.c0) END) ISNULL));
SELECT rt0.c1, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c1 FROM rt0 WHERE (x'ff47') UNION SELECT DISTINCT rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (x'ff47'))) UNION SELECT DISTINCT rt0.c0, rt0.c1 FROM rt0 WHERE (((x'ff47') ISNULL));
SELECT DISTINCT rt0.c0, rt0.c1 FROM rt0;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (LOWER(rt0.c1)))) GROUP BY rt0.c0, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT ((NOT (LOWER(rt0.c1)))))) GROUP BY rt0.c0, rt0.c2 UNION SELECT rt0.c0, rt0.c2 FROM rt0 WHERE ((((NOT (LOWER(rt0.c1)))) ISNULL)) GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING IFNULL(SUM(GROUP_CONCAT(rt0.c0)), (GROUP_CONCAT(TOTAL(COUNT(*))) IN ())) UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING (NOT (IFNULL(SUM(GROUP_CONCAT(rt0.c0)), (GROUP_CONCAT(TOTAL(COUNT(*))) IN ())))) UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING ((IFNULL(SUM(GROUP_CONCAT(rt0.c0)), (GROUP_CONCAT(TOTAL(COUNT(*))) IN ()))) ISNULL);
SELECT rt0.c0 FROM rt0;
SELECT ALL rt0.c0 FROM rt0 WHERE ((((rt0.c0 IN (rt0.c1))) IS TRUE)) UNION ALL SELECT ALL rt0.c0 FROM rt0 WHERE ((NOT ((((rt0.c0 IN (rt0.c1))) IS TRUE)))) UNION ALL SELECT ALL rt0.c0 FROM rt0 WHERE ((((((rt0.c0 IN (rt0.c1))) IS TRUE)) ISNULL));
SELECT rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE (json_array_length(TRIM(DISTINCT rt0.c1, rt0.c0), (rt0.c2 IN (rt0.c0)))) UNION SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (json_array_length(TRIM(DISTINCT rt0.c1, rt0.c0), (rt0.c2 IN (rt0.c0)))))) UNION SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE (((json_array_length(TRIM(DISTINCT rt0.c1, rt0.c0), (rt0.c2 IN (rt0.c0)))) ISNULL));
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE (json_quote(CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END)) GROUP BY rt0.c1, rt0.c2, rt0.c0 UNION SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (json_quote(CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END)))) GROUP BY rt0.c1, rt0.c2, rt0.c0 UNION SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE (((json_quote(CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END)) ISNULL)) GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING rt0.c0 UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING (NOT (rt0.c0)) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING ((rt0.c0) ISNULL);
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING rt0.c0 UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING (NOT (rt0.c0)) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING ((rt0.c0) ISNULL);
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE ('è¢›sgE') UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT ('è¢›sgE'))) UNION ALL SELECT ALL * FROM rt0 WHERE ((('è¢›sgE') ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (rt0.c1) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (rt0.c1))) UNION SELECT DISTINCT * FROM rt0 WHERE (((rt0.c1) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE (CAST(((((((((rt0.c0)AND(rt0.c1)))OR(rt0.c1)))OR(rt0.c0)))AND(rt0.c2)) AS BLOB)) GROUP BY rt0.c0, rt0.c1, rt0.c2 UNION SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (CAST(((((((((rt0.c0)AND(rt0.c1)))OR(rt0.c1)))OR(rt0.c0)))AND(rt0.c2)) AS BLOB)))) GROUP BY rt0.c0, rt0.c1, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE (((CAST(((((((((rt0.c0)AND(rt0.c1)))OR(rt0.c1)))OR(rt0.c0)))AND(rt0.c2)) AS BLOB)) ISNULL)) GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING AVG(COUNT(*)) UNION ALL SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING (NOT (AVG(COUNT(*)))) UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING ((AVG(COUNT(*))) ISNULL);
SELECT SUM(CAST(x'c73c' AS REAL)) FROM rt0;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((((((rt0.c2))<=((rt0.c1)))) NOT BETWEEN (((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2))) AND (((((rt0.c1)AND(rt0.c1)))OR(0xffffffffd4c00106))))) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT ((((((rt0.c2))<=((rt0.c1)))) NOT BETWEEN (((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2))) AND (((((rt0.c1)AND(rt0.c1)))OR(0Xffffffffd4c00106))))))) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((((((((rt0.c2))<=((rt0.c1)))) NOT BETWEEN (((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2))) AND (((((rt0.c1)AND(rt0.c1)))OR(0xffffffffd4c00106))))) ISNULL));
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0 WHERE (((((((((rt0.c2)OR(rt0.c0)))OR(rt0.c2)))AND((rt0.c0 IN ()))))OR(CASE rt0.c1  WHEN rt0.c1 THEN 0.7884915132938832 END))) UNION SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (((((((((rt0.c2)OR(rt0.c0)))OR(rt0.c2)))AND((rt0.c0 IN ()))))OR(CASE rt0.c1  WHEN rt0.c1 THEN 0.7884915132938832 END))))) UNION SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0 WHERE (((((((((((rt0.c2)OR(rt0.c0)))OR(rt0.c2)))AND((rt0.c0 IN ()))))OR(CASE rt0.c1  WHEN rt0.c1 THEN 0.7884915132938832 END))) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 WHERE (CAST(CAST(rt0.c2 AS REAL) AS NUMERIC)) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM rt0 WHERE ((NOT (CAST(CAST(rt0.c2 AS REAL) AS NUMERIC)))) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM rt0 WHERE (((CAST(CAST(rt0.c2 AS REAL) AS NUMERIC)) ISNULL)) GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING AVG(AVG(AVG(rt0.c2))) UNION ALL SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING (NOT (AVG(AVG(AVG(rt0.c2))))) UNION ALL SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING ((AVG(AVG(AVG(rt0.c2)))) ISNULL);
SELECT rt0.c0, rt0.c2 FROM rt0;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (((rt0.c2)!=(rt0.c1))))) UNION ALL SELECT rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT ((NOT (((rt0.c2)<>(rt0.c1))))))) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt0 WHERE ((((NOT (((rt0.c2)<>(rt0.c1))))) ISNULL));
SELECT rt0.c0, rt0.c2 FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((((0.23615994344535118, rt0.c1, rt0.c1)) BETWEEN ((((rt0.c0)<<(rt0.c2)), IFNULL(DISTINCT rt0.c2, rt0.c0), (('1462936768')!=(rt0.c1)))) AND ((((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0)), ((rt0.c1)*(rt0.c0)), ((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2)))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((((0.23615994344535118, rt0.c1, rt0.c1)) BETWEEN ((((rt0.c0)<<(rt0.c2)), IFNULL(DISTINCT rt0.c2, rt0.c0), (('1462936768')!=(rt0.c1)))) AND ((((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0)), ((rt0.c1)*(rt0.c0)), ((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2)))))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((((0.23615994344535118, rt0.c1, rt0.c1)) BETWEEN ((((rt0.c0)<<(rt0.c2)), IFNULL(DISTINCT rt0.c2, rt0.c0), (('1462936768')!=(rt0.c1)))) AND ((((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0)), ((rt0.c1)*(rt0.c0)), ((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2)))))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 WHERE (((((ABS(DISTINCT rt0.c0))AND((((rt0.c1))=((rt0.c0))))))OR(((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0))))) GROUP BY rt0.c2, rt0.c1 UNION SELECT rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (((((ABS(DISTINCT rt0.c0))AND((((rt0.c1))==((rt0.c0))))))OR(((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0))))))) GROUP BY rt0.c2, rt0.c1 UNION SELECT rt0.c2, rt0.c1 FROM rt0 WHERE (((((((ABS(DISTINCT rt0.c0))AND((((rt0.c1))=((rt0.c0))))))OR(((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0))))) ISNULL)) GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (((MAX(0.13881629813335994))) NOT BETWEEN ((COUNT(*))) AND ((SUM('621408319')))) COLLATE NOCASE UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT ((((MAX(0.13881629813335994))) NOT BETWEEN ((COUNT(*))) AND ((SUM('621408319')))) COLLATE NOCASE)) UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (((((MAX(0.13881629813335994))) NOT BETWEEN ((COUNT(*))) AND ((SUM('621408319')))) COLLATE NOCASE) ISNULL);
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (((MAX(0.13881629813335994))) NOT BETWEEN ((COUNT(*))) AND ((SUM('621408319')))) COLLATE NOCASE UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT ((((MAX(0.13881629813335994))) NOT BETWEEN ((COUNT(*))) AND ((SUM('621408319')))) COLLATE NOCASE)) UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (((((MAX(0.13881629813335994))) NOT BETWEEN ((COUNT(*))) AND ((SUM('621408319')))) COLLATE NOCASE) ISNULL);
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL * FROM rt0;
SELECT * FROM rt0 WHERE (((rt0.c2) BETWEEN (rt0.c0) AND (((rt0.c1)<<(rt0.c2))))) UNION ALL SELECT * FROM rt0 WHERE ((NOT (((rt0.c2) BETWEEN (rt0.c0) AND (((rt0.c1)<<(rt0.c2))))))) UNION ALL SELECT ALL * FROM rt0 WHERE (((((rt0.c2) BETWEEN (rt0.c0) AND (((rt0.c1)<<(rt0.c2))))) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((((rt0.c0)&(rt0.c2))) NOT BETWEEN (CASE WHEN rt0.c0 THEN NULL ELSE rt0.c0 END) AND ((rt0.c2 IN ())))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((((rt0.c0)&(rt0.c2))) NOT BETWEEN (CASE WHEN rt0.c0 THEN NULL ELSE rt0.c0 END) AND ((rt0.c2 IN ())))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((((rt0.c0)&(rt0.c2))) NOT BETWEEN (CASE WHEN rt0.c0 THEN NULL ELSE rt0.c0 END) AND ((rt0.c2 IN ())))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 WHERE (0.9262933421124822) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM rt0 WHERE ((NOT (0.9262933421124822))) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM rt0 WHERE (((0.9262933421124822) ISNULL)) GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING MIN((((rt0.c0)) NOT BETWEEN ((COUNT(*))) AND ((MAX(rt0.c1))))) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING (NOT (MIN((((rt0.c0)) NOT BETWEEN ((COUNT(*))) AND ((MAX(rt0.c1))))))) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING ((MIN((((rt0.c0)) NOT BETWEEN ((COUNT(*))) AND ((MAX(rt0.c1)))))) ISNULL);
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE (rt0.c1) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (rt0.c1))) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE (((rt0.c1) ISNULL));
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE (567839061) UNION SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (567839061))) UNION SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE (((567839061) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0 FROM rt0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 WHERE (HEX(DISTINCT CAST(rt0.c1 AS TEXT))) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM rt0 WHERE ((NOT (HEX(DISTINCT CAST(rt0.c1 AS TEXT))))) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM rt0 WHERE (((HEX(DISTINCT CAST(rt0.c1 AS TEXT))) ISNULL)) GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING (rt0.c2 IN (rt0.c2, rt0.c2)) COLLATE RTRIM UNION ALL SELECT rt0.c2, rt0.c0 FROM rt0 NOT INDEXED GROUP BY rt0.c2, rt0.c0 HAVING (NOT ((rt0.c2 IN (rt0.c2, rt0.c2)) COLLATE RTRIM)) UNION ALL SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING (((rt0.c2 IN (rt0.c2, rt0.c2)) COLLATE RTRIM) ISNULL);
SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING (rt0.c2 IN (rt0.c2, rt0.c2)) COLLATE RTRIM UNION ALL SELECT rt0.c2, rt0.c0 FROM rt0 NOT INDEXED GROUP BY rt0.c2, rt0.c0 HAVING (NOT ((rt0.c2 IN (rt0.c2, rt0.c2)) COLLATE RTRIM)) UNION ALL SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING (((rt0.c2 IN (rt0.c2, rt0.c2)) COLLATE RTRIM) ISNULL);
SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((- (rt0.c1)) COLLATE RTRIM) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT ((- (rt0.c1)) COLLATE RTRIM))) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((((- (rt0.c1)) COLLATE RTRIM) ISNULL));
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((((rt0.c2 IN ()))==((((NULL)) NOT BETWEEN ((NULL)) AND ((rt0.c1)))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((((rt0.c2 IN ()))==((((NULL)) NOT BETWEEN ((NULL)) AND ((rt0.c1)))))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((((rt0.c2 IN ()))=((((NULL)) NOT BETWEEN ((NULL)) AND ((rt0.c1)))))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (((((((rt0.c1)AND(rt0.c0)))AND(rt0.c1)))/(LOWER(rt0.c1)))) GROUP BY rt0.c1, rt0.c0, rt0.c2 UNION SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (((((((rt0.c1)AND(rt0.c0)))AND(rt0.c1)))/(LOWER(rt0.c1)))))) GROUP BY rt0.c1, rt0.c0, rt0.c2 UNION SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (((((((((rt0.c1)AND(rt0.c0)))AND(rt0.c1)))/(LOWER(rt0.c1)))) ISNULL)) GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING CAST(MIN(rt0.c2) AS REAL) UNION ALL SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING (NOT (CAST(MIN(rt0.c2) AS REAL))) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING ((CAST(MIN(rt0.c2) AS REAL)) ISNULL);
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING CAST(MIN(rt0.c2) AS REAL) UNION ALL SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING (NOT (CAST(MIN(rt0.c2) AS REAL))) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING ((CAST(MIN(rt0.c2) AS REAL)) ISNULL);
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL * FROM rt0;
SELECT * FROM rt0 WHERE ((((rt0.c1, rt0.c1, rt0.c1)) BETWEEN ((((rt0.c0)IS(rt0.c1)), rt0.c1, ((((rt0.c0)OR(rt0.c1)))OR(rt0.c2)))) AND (((- ('')), 0.2529181305572541, CAST(rt0.c2 AS INTEGER))))) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT ((((rt0.c1, rt0.c1, rt0.c1)) BETWEEN ((((rt0.c0)IS(rt0.c1)), rt0.c1, ((((rt0.c0)OR(rt0.c1)))OR(rt0.c2)))) AND (((- ('')), 0.2529181305572541, CAST(rt0.c2 AS INTEGER))))))) UNION ALL SELECT * FROM rt0 WHERE ((((((rt0.c1, rt0.c1, rt0.c1)) BETWEEN ((((rt0.c0)IS(rt0.c1)), rt0.c1, ((((rt0.c0)OR(rt0.c1)))OR(rt0.c2)))) AND (((- ('')), 0.2529181305572541, CAST(rt0.c2 AS INTEGER))))) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE (rtreenode(rt0.c2 COLLATE RTRIM, ((((rt0.c1)OR(0.07245872468604075)))AND(rt0.c2)))) UNION SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (rtreenode(rt0.c2 COLLATE RTRIM, ((((rt0.c1)OR(0.07245872468604075)))AND(rt0.c2)))))) UNION SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE (((rtreenode(rt0.c2 COLLATE RTRIM, ((((rt0.c1)OR(0.07245872468604075)))AND(rt0.c2)))) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1 FROM rt0;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE (rt0.c1) GROUP BY rt0.c2, rt0.c0, rt0.c1 UNION SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (rt0.c1))) GROUP BY rt0.c2, rt0.c0, rt0.c1 UNION SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE (((rt0.c1) ISNULL)) GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING MIN(CAST(TOTAL(SUM(COUNT(*))) AS INTEGER)) UNION ALL SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING (NOT (MIN(CAST(TOTAL(SUM(COUNT(*))) AS INTEGER)))) UNION ALL SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING ((MIN(CAST(TOTAL(SUM(COUNT(*))) AS INTEGER))) ISNULL);
SELECT ALL rt0.c1, rt0.c0 FROM rt0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 WHERE ((((rt0.c0 IN (rt0.c1)))IS((rt0.c2 IN (rt0.c0))))) UNION ALL SELECT rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT ((((rt0.c0 IN (rt0.c1)))IS((rt0.c2 IN (rt0.c0))))))) UNION ALL SELECT ALL rt0.c1, rt0.c0 FROM rt0 WHERE ((((((rt0.c0 IN (rt0.c1)))IS((rt0.c2 IN (rt0.c0))))) ISNULL));
SELECT ALL rt0.c1, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0 WHERE ((((rt0.c2 IN ()))LIKE(((rt0.c2) IS FALSE)))) UNION SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT ((((rt0.c2 IN ()))LIKE(((rt0.c2) IS FALSE)))))) UNION SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0 WHERE ((((((rt0.c2 IN ()))LIKE(((rt0.c2) IS FALSE)))) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((((rt0.c1)) NOT BETWEEN ((NULLIF(rt0.c1, rt0.c2))) AND ((((rt0.c2)<=(rt0.c2)))))) GROUP BY rt0.c0, rt0.c1, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT ((((rt0.c1)) NOT BETWEEN ((NULLIF(rt0.c1, rt0.c2))) AND ((((rt0.c2)<=(rt0.c2)))))))) GROUP BY rt0.c0, rt0.c1, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((((((rt0.c1)) NOT BETWEEN ((NULLIF(rt0.c1, rt0.c2))) AND ((((rt0.c2)<=(rt0.c2)))))) ISNULL)) GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE ((((('')) BETWEEN ((rt0.c1)) AND ((rt0.c0))) IN ())) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT ((((('')) BETWEEN ((rt0.c1)) AND ((rt0.c0))) IN ())))) UNION ALL SELECT ALL * FROM rt0 WHERE ((((((('')) BETWEEN ((rt0.c1)) AND ((rt0.c0))) IN ())) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE (CAST(TYPEOF(DISTINCT rt0.c2) AS INTEGER)) UNION SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (CAST(TYPEOF(DISTINCT rt0.c2) AS INTEGER)))) UNION SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE (((CAST(TYPEOF(DISTINCT rt0.c2) AS INTEGER)) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM rt0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 WHERE ((((((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))))|(((rt0.c2)-(rt0.c2))))) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM rt0 WHERE ((NOT ((((((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))))|(((rt0.c2)-(rt0.c2))))))) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM rt0 WHERE ((((((((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))))|(((rt0.c2)-(rt0.c2))))) ISNULL)) GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING NULL UNION ALL SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING (NOT (NULL)) UNION ALL SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING ((NULL) ISNULL);
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING NULL UNION ALL SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING (NOT (NULL)) UNION ALL SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING ((NULL) ISNULL);
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT ALL * FROM rt0;
SELECT * FROM rt0 WHERE (0xffffffff89b649a4) UNION ALL SELECT * FROM rt0 WHERE ((NOT (0Xffffffff89b649a4))) UNION ALL SELECT ALL * FROM rt0 WHERE (((0xffffffff89b649a4) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c1 FROM rt0 WHERE ((- (((rt0.c0)LIKE(rt0.c0))))) UNION SELECT DISTINCT rt0.c1 FROM rt0 WHERE ((NOT ((- (((rt0.c0)LIKE(rt0.c0))))))) UNION SELECT DISTINCT rt0.c1 FROM rt0 WHERE ((((- (((rt0.c0)LIKE(rt0.c0))))) ISNULL));
SELECT DISTINCT rt0.c1 FROM rt0;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c2, rt0.c1 FROM rt0 WHERE (((((((rt0.c1)OR(rt0.c0)))AND(rt0.c2))) NOT BETWEEN (NULL COLLATE BINARY) AND ((NOT (rt0.c0))))) GROUP BY rt0.c2, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (((((((rt0.c1)OR(rt0.c0)))AND(rt0.c2))) NOT BETWEEN (NULL COLLATE BINARY) AND ((NOT (rt0.c0))))))) GROUP BY rt0.c2, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c1 FROM rt0 WHERE (((((((((rt0.c1)OR(rt0.c0)))AND(rt0.c2))) NOT BETWEEN (NULL COLLATE BINARY) AND ((NOT (rt0.c0))))) ISNULL)) GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING MIN(PRINTF(rt0.c0)) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING (NOT (MIN(PRINTF(rt0.c0)))) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING ((MIN(PRINTF(rt0.c0))) ISNULL);
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING MIN(PRINTF(rt0.c0)) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING (NOT (MIN(PRINTF(rt0.c0)))) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING ((MIN(PRINTF(rt0.c0))) ISNULL);
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL TOTAL((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))) COLLATE RTRIM) FROM rt0;
SELECT ALL rt0.c0, rt0.c1 FROM rt0;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 WHERE (((((rt0.c2)=(rt0.c2))) ISNULL)) UNION ALL SELECT rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (((((rt0.c2)=(rt0.c2))) ISNULL)))) UNION ALL SELECT rt0.c0, rt0.c1 FROM rt0 WHERE (((((((rt0.c2)=(rt0.c2))) ISNULL)) ISNULL));
SELECT ALL rt0.c0, rt0.c1 FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((((((((((rt0.c0) IS FALSE))OR(TRIM(DISTINCT rt0.c2, NULL))))AND(CAST(rt0.c2 AS TEXT))))AND((((rt0.c2, rt0.c1, rt0.c1))=((rt0.c2, NULL, 0x5732a4c0))))))OR(((rt0.c0)IS(rt0.c2))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((((((((((rt0.c0) IS FALSE))OR(TRIM(DISTINCT rt0.c2, NULL))))AND(CAST(rt0.c2 AS TEXT))))AND((((rt0.c2, rt0.c1, rt0.c1))=((rt0.c2, NULL, 0X5732a4c0))))))OR(((rt0.c0)IS(rt0.c2))))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((((((((((rt0.c0) IS FALSE))OR(TRIM(DISTINCT rt0.c2, NULL))))AND(CAST(rt0.c2 AS TEXT))))AND((((rt0.c2, rt0.c1, rt0.c1))==((rt0.c2, NULL, 0x5732a4c0))))))OR(((rt0.c0)IS(rt0.c2))))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 WHERE ((((rt0.c2)>=(rt0.c0)) IN ())) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0 WHERE ((NOT ((((rt0.c2)>=(rt0.c0)) IN ())))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0 WHERE ((((((rt0.c2)>=(rt0.c0)) IN ())) ISNULL)) GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING AVG((((COUNT(rt0.c1), AVG(rt0.c0), COUNT(rt0.c2))) NOT BETWEEN ((rt0.c1, rt0.c1, rt0.c2)) AND ((AVG(COUNT(*)), AVG(rt0.c2), COUNT(rt0.c2))))) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING (NOT (AVG((((COUNT(rt0.c1), AVG(rt0.c0), COUNT(rt0.c2))) NOT BETWEEN ((rt0.c1, rt0.c1, rt0.c2)) AND ((AVG(COUNT(*)), AVG(rt0.c2), COUNT(rt0.c2))))))) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING ((AVG((((COUNT(rt0.c1), AVG(rt0.c0), COUNT(rt0.c2))) NOT BETWEEN ((rt0.c1, rt0.c1, rt0.c2)) AND ((AVG(COUNT(*)), AVG(rt0.c2), COUNT(rt0.c2)))))) ISNULL);
SELECT rt0.c2, rt0.c1 FROM rt0;
SELECT rt0.c2, rt0.c1 FROM rt0 WHERE ((((NOT (rt0.c2)))>(((rt0.c1) NOT NULL)))) UNION ALL SELECT rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT ((((NOT (rt0.c2)))>(((rt0.c1) NOT NULL)))))) UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM rt0 WHERE ((((((NOT (rt0.c2)))>(((rt0.c1) NOT NULL)))) ISNULL));
SELECT rt0.c2, rt0.c1 FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((NOT ((('2057812792') IS TRUE)))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((NOT ((('2057812792') IS TRUE)))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((NOT ((('2057812792') IS TRUE)))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((((~ (rt0.c2))) IS FALSE)) GROUP BY rt0.c0, rt0.c2, rt0.c1 UNION SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT ((((~ (rt0.c2))) IS FALSE)))) GROUP BY rt0.c0, rt0.c2, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((((((~ (rt0.c2))) IS FALSE)) ISNULL)) GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING MAX(TOTAL(GROUP_CONCAT(COUNT(*)))) UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING (NOT (MAX(TOTAL(GROUP_CONCAT(COUNT(*)))))) UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING ((MAX(TOTAL(GROUP_CONCAT(COUNT(*))))) ISNULL);
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE (NULL) UNION ALL SELECT * FROM rt0 WHERE ((NOT (NULL))) UNION ALL SELECT ALL * FROM rt0 WHERE (((NULL) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0 WHERE ((((']e', ((((((((0Xffffffffe8258e99)OR(rt0.c1)))AND(rt0.c0)))OR(rt0.c2)))AND(rt0.c2)), (rt0.c1 IN (rt0.c0))))>((CAST(rt0.c1 AS TEXT), ABS(DISTINCT rt0.c2), (((rt0.c0, rt0.c0, rt0.c0))<>((rt0.c0, rt0.c1, rt0.c2))))))) UNION SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT ((((']e', ((((((((0xffffffffe8258e99)OR(rt0.c1)))AND(rt0.c0)))OR(rt0.c2)))AND(rt0.c2)), (rt0.c1 IN (rt0.c0))))>((CAST(rt0.c1 AS TEXT), ABS(DISTINCT rt0.c2), (((rt0.c0, rt0.c0, rt0.c0))!=((rt0.c0, rt0.c1, rt0.c2))))))))) UNION SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0 WHERE ((((((']e', ((((((((0xffffffffe8258e99)OR(rt0.c1)))AND(rt0.c0)))OR(rt0.c2)))AND(rt0.c2)), (rt0.c1 IN (rt0.c0))))>((CAST(rt0.c1 AS TEXT), ABS(DISTINCT rt0.c2), (((rt0.c0, rt0.c0, rt0.c0))<>((rt0.c0, rt0.c1, rt0.c2))))))) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0;
SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM rt0 WHERE (0.152501402446653) GROUP BY rt0.c2, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (0.152501402446653))) GROUP BY rt0.c2, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c0 FROM rt0 WHERE (((0.152501402446653) ISNULL)) GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING CASE WHEN GROUP_CONCAT('1905841816') THEN COUNT(rt0.c2) END UNION ALL SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING (NOT (CASE WHEN GROUP_CONCAT('1905841816') THEN COUNT(rt0.c2) END)) UNION ALL SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING ((CASE WHEN GROUP_CONCAT('1905841816') THEN COUNT(rt0.c2) END) ISNULL);
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING CASE WHEN GROUP_CONCAT('1905841816') THEN COUNT(rt0.c2) END UNION ALL SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING (NOT (CASE WHEN GROUP_CONCAT('1905841816') THEN COUNT(rt0.c2) END)) UNION ALL SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING ((CASE WHEN GROUP_CONCAT('1905841816') THEN COUNT(rt0.c2) END) ISNULL);
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c2 FROM rt0;
SELECT rt0.c0, rt0.c2 FROM rt0 WHERE (rt0.c2) UNION ALL SELECT rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (rt0.c2))) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt0 WHERE (((rt0.c2) ISNULL));
SELECT rt0.c0, rt0.c2 FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((((((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0)))AND(IFNULL(rt0.c0, rt0.c2))))OR(rt0.c0))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((((((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0)))AND(IFNULL(rt0.c0, rt0.c2))))OR(rt0.c0))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((((((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0)))AND(IFNULL(rt0.c0, rt0.c2))))OR(rt0.c0))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c0))))) GROUP BY rt0.c0, rt0.c1 UNION SELECT rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT ((NOT (((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c0))))))) GROUP BY rt0.c0, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c1 FROM rt0 WHERE ((((NOT (((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c0))))) ISNULL)) GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING highlight(((COUNT(*)) IS TRUE), rt0.c1, CAST(COUNT(*) AS INTEGER), MIN(rt0.c0)) UNION ALL SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING (NOT (highlight(((COUNT(*)) IS TRUE), rt0.c1, CAST(COUNT(*) AS INTEGER), MIN(rt0.c0)))) UNION ALL SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING ((highlight(((COUNT(*)) IS TRUE), rt0.c1, CAST(COUNT(*) AS INTEGER), MIN(rt0.c0))) ISNULL);
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE (((((((rt0.c1)AND(rt0.c2)))AND(rt0.c0))) IS FALSE)) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (((((((rt0.c1)AND(rt0.c2)))AND(rt0.c0))) IS FALSE)))) UNION ALL SELECT ALL * FROM rt0 WHERE (((((((((rt0.c1)AND(rt0.c2)))AND(rt0.c0))) IS FALSE)) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((('' IN ()) IN (((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((('' IN ()) IN (((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0))))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((('' IN ()) IN (((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0))))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM rt0 WHERE (CAST(rt0.c0 COLLATE RTRIM AS TEXT)) GROUP BY rt0.c2, rt0.c0 UNION SELECT rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (CAST(rt0.c0 COLLATE RTRIM AS TEXT)))) GROUP BY rt0.c2, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c0 FROM rt0 WHERE (((CAST(rt0.c0 COLLATE RTRIM AS TEXT)) ISNULL)) GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING HEX(CAST(rt0.c2 AS REAL)) UNION ALL SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING (NOT (HEX(CAST(rt0.c2 AS REAL)))) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING ((HEX(CAST(rt0.c2 AS REAL))) ISNULL);
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING HEX(CAST(rt0.c2 AS REAL)) UNION ALL SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING (NOT (HEX(CAST(rt0.c2 AS REAL)))) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING ((HEX(CAST(rt0.c2 AS REAL))) ISNULL);
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT MAX(ABS(rt0.c1) COLLATE RTRIM) FROM rt0 ORDER BY ((((((rt0.c0)OR(rt0.c1)))AND(rt0.c2)))||((rt0.c0 IN (rt0.c2)))) ASC  NULLS FIRST;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((- ((NOT (rt0.c1))))) UNION ALL SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT ((- ((NOT (rt0.c1))))))) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((((- ((NOT (rt0.c1))))) ISNULL));
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((((rt0.c2, rt0.c2, rt0.c0)) BETWEEN (((rt0.c1 IN ()), rt0.c2, 0Xffffffffaa5547b4)) AND ((rt0.c2 COLLATE RTRIM, '0.152501402446653', CASE WHEN rt0.c0 THEN rt0.c2 END)))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((((rt0.c2, rt0.c2, rt0.c0)) BETWEEN (((rt0.c1 IN ()), rt0.c2, 0Xffffffffaa5547b4)) AND ((rt0.c2 COLLATE RTRIM, '0.152501402446653', CASE WHEN rt0.c0 THEN rt0.c2 END)))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((((rt0.c2, rt0.c2, rt0.c0)) BETWEEN (((rt0.c1 IN ()), rt0.c2, 0xffffffffaa5547b4)) AND ((rt0.c2 COLLATE RTRIM, '0.152501402446653', CASE WHEN rt0.c0 THEN rt0.c2 END)))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((rt0.c0 IN ())) GROUP BY rt0.c2, rt0.c1, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT ((rt0.c0 IN ())))) GROUP BY rt0.c2, rt0.c1, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((((rt0.c0 IN ())) ISNULL)) GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING SUM(0.7708739861334681) UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT (SUM(0.7708739861334681))) UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING ((SUM(0.7708739861334681)) ISNULL);
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING SUM(0.7708739861334681) UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT (SUM(0.7708739861334681))) UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING ((SUM(0.7708739861334681)) ISNULL);
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE (((CASE rt0.c1  WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c0 END)OR(((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2))))) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (((CASE rt0.c1  WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c0 END)OR(((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2))))))) UNION ALL SELECT ALL * FROM rt0 WHERE (((((CASE rt0.c1  WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c0 END)OR(((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2))))) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0 WHERE (((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1)) COLLATE RTRIM) UNION SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1)) COLLATE RTRIM))) UNION SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0 WHERE (((((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1)) COLLATE RTRIM) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT rt0.c1, rt0.c0 FROM rt0 WHERE (TRIM(((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c0)), (~ (rt0.c2)))) GROUP BY rt0.c1, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (TRIM(((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c0)), (~ (rt0.c2)))))) GROUP BY rt0.c1, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c0 FROM rt0 WHERE (((TRIM(((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c0)), (~ (rt0.c2)))) ISNULL)) GROUP BY rt0.c1, rt0.c0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING (((((COUNT(rt0.c0))OR(rt0.c1)))OR(rt0.c1)) IN ()) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING (NOT ((((((COUNT(rt0.c0))OR(rt0.c1)))OR(rt0.c1)) IN ()))) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING (((((((COUNT(rt0.c0))OR(rt0.c1)))OR(rt0.c1)) IN ())) ISNULL);
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING (((((COUNT(rt0.c0))OR(rt0.c1)))OR(rt0.c1)) IN ()) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING (NOT ((((((COUNT(rt0.c0))OR(rt0.c1)))OR(rt0.c1)) IN ()))) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING (((((((COUNT(rt0.c0))OR(rt0.c1)))OR(rt0.c1)) IN ())) ISNULL);
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c1 FROM rt0;
SELECT rt0.c0, rt0.c1 FROM rt0 WHERE ((((rt0.c1))>((rt0.c2))) COLLATE BINARY) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT ((((rt0.c1))>((rt0.c2))) COLLATE BINARY))) UNION ALL SELECT rt0.c0, rt0.c1 FROM rt0 WHERE ((((((rt0.c1))>((rt0.c2))) COLLATE BINARY) ISNULL));
SELECT ALL rt0.c0, rt0.c1 FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((((((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0))))AND((NOT (rt0.c1)))))OR(((0.13955960847784643)IS(rt0.c0))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((((((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0))))AND((NOT (rt0.c1)))))OR(((0.13955960847784643)IS(rt0.c0))))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((((((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0))))AND((NOT (rt0.c1)))))OR(((0.13955960847784643)IS(rt0.c0))))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 WHERE (((CASE NULL  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c2 END) IS FALSE)) GROUP BY rt0.c0, rt0.c1 UNION SELECT rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (((CASE NULL  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c2 END) IS FALSE)))) GROUP BY rt0.c0, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c1 FROM rt0 WHERE (((((CASE NULL  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c2 END) IS FALSE)) ISNULL)) GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING COUNT(*) COLLATE BINARY UNION ALL SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING (NOT (COUNT(*) COLLATE BINARY)) UNION ALL SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING ((COUNT(*) COLLATE BINARY) ISNULL);
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING COUNT(*) COLLATE BINARY UNION ALL SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING (NOT (COUNT(*) COLLATE BINARY)) UNION ALL SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING ((COUNT(*) COLLATE BINARY) ISNULL);
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT ALL SUM(((((rt0.c2)*(rt0.c1))) NOT BETWEEN ((~ (rt0.c0))) AND (rt0.c1))) FROM rt0;
SELECT rt0.c2, rt0.c1 FROM rt0;
SELECT rt0.c2, rt0.c1 FROM rt0 WHERE ((CAST(rt0.c1 AS REAL) IN ())) UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT ((CAST(rt0.c1 AS REAL) IN ())))) UNION ALL SELECT rt0.c2, rt0.c1 FROM rt0 WHERE ((((CAST(rt0.c1 AS REAL) IN ())) ISNULL));
SELECT rt0.c2, rt0.c1 FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (NULL) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (NULL))) UNION SELECT DISTINCT * FROM rt0 WHERE (((NULL) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 WHERE (((CAST(rt0.c1 AS INTEGER)) IS FALSE)) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM rt0 WHERE ((NOT (((CAST(rt0.c1 AS INTEGER)) IS FALSE)))) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM rt0 WHERE (((((CAST(rt0.c1 AS INTEGER)) IS FALSE)) ISNULL)) GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 NOT INDEXED GROUP BY rt0.c0 HAVING MIN((((MIN(COUNT(*)))) BETWEEN ((SUM(SUM(SUM(MIN('-1987327304')))))) AND ((rt0.c0)))) UNION ALL SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (NOT (MIN((((MIN(COUNT(*)))) BETWEEN ((SUM(SUM(SUM(MIN('-1987327304')))))) AND ((rt0.c0)))))) UNION ALL SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING ((MIN((((MIN(COUNT(*)))) BETWEEN ((SUM(SUM(SUM(MIN('-1987327304')))))) AND ((rt0.c0))))) ISNULL);
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE ((((('_Ú–^') BETWEEN (rt0.c2) AND (rt0.c2)))==(CAST(rt0.c1 AS REAL)))) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT ((((('_Ú–^') BETWEEN (rt0.c2) AND (rt0.c2)))=(CAST(rt0.c1 AS REAL)))))) UNION ALL SELECT * FROM rt0 WHERE ((((((('_Ú–^') BETWEEN (rt0.c2) AND (rt0.c2)))==(CAST(rt0.c1 AS REAL)))) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((CAST(rt0.c2 AS BLOB)) BETWEEN (rt0.c1) AND (rt0.c1))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((CAST(rt0.c2 AS BLOB)) BETWEEN (rt0.c1) AND (rt0.c1))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((CAST(rt0.c2 AS BLOB)) BETWEEN (rt0.c1) AND (rt0.c1))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE (((((CASE WHEN rt0.c0 THEN rt0.c2 END)OR(((rt0.c2)|(rt0.c1)))))OR(rt0.c2))) GROUP BY rt0.c2, rt0.c1, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (((((CASE WHEN rt0.c0 THEN rt0.c2 END)OR(((rt0.c2)|(rt0.c1)))))OR(rt0.c2))))) GROUP BY rt0.c2, rt0.c1, rt0.c0 UNION SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE (((((((CASE WHEN rt0.c0 THEN rt0.c2 END)OR(((rt0.c2)|(rt0.c1)))))OR(rt0.c2))) ISNULL)) GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING CAST(SUM(SUM(COUNT(*))) AS INTEGER) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT (CAST(SUM(SUM(COUNT(*))) AS INTEGER))) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((CAST(SUM(SUM(COUNT(*))) AS INTEGER)) ISNULL);
SELECT rt0.c2, rt0.c1 FROM rt0;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 WHERE (rt0.c2) UNION ALL SELECT rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (rt0.c2))) UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM rt0 WHERE (((rt0.c2) ISNULL));
SELECT rt0.c2, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0 WHERE (TRIM(DISTINCT (((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c2))))) UNION SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (TRIM(DISTINCT (((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c2))))))) UNION SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0 WHERE (((TRIM(DISTINCT (((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c2))))) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 WHERE (rt0.c2) GROUP BY rt0.c1, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (rt0.c2))) GROUP BY rt0.c1, rt0.c0 UNION SELECT rt0.c1, rt0.c0 FROM rt0 WHERE (((rt0.c2) ISNULL)) GROUP BY rt0.c1, rt0.c0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING MIN(MIN(AVG(SUM(AVG(1371014282))))) UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING (NOT (MIN(MIN(AVG(SUM(AVG(1371014282))))))) UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING ((MIN(MIN(AVG(SUM(AVG(1371014282)))))) ISNULL);
SELECT rt0.c0, rt0.c2 FROM rt0;
SELECT rt0.c0, rt0.c2 FROM rt0 WHERE (CASE ((rt0.c0)=(rt0.c0))  WHEN rt0.c0 COLLATE BINARY THEN ((rt0.c0) ISNULL) ELSE (- (rt0.c0)) END) UNION ALL SELECT rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (CASE ((rt0.c0)=(rt0.c0))  WHEN rt0.c0 COLLATE BINARY THEN ((rt0.c0) ISNULL) ELSE (- (rt0.c0)) END))) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt0 WHERE (((CASE ((rt0.c0)==(rt0.c0))  WHEN rt0.c0 COLLATE BINARY THEN ((rt0.c0) ISNULL) ELSE (- (rt0.c0)) END) ISNULL));
SELECT rt0.c0, rt0.c2 FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((((((rt0.c1)AND(rt0.c0)))OR(rt0.c1))) NOT BETWEEN (((rt0.c1) ISNULL)) AND (((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((((((rt0.c1)AND(rt0.c0)))OR(rt0.c1))) NOT BETWEEN (((rt0.c1) ISNULL)) AND (((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2))))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((((((rt0.c1)AND(rt0.c0)))OR(rt0.c1))) NOT BETWEEN (((rt0.c1) ISNULL)) AND (((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2))))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 WHERE (((CASE rt0.c1  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END)>>(rt0.c2 COLLATE NOCASE))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0 WHERE ((NOT (((CASE rt0.c1  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END)>>(rt0.c2 COLLATE NOCASE))))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0 WHERE (((((CASE rt0.c1  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END)>>(rt0.c2 COLLATE NOCASE))) ISNULL)) GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT rt0.c0, rt0.c1 FROM rt0;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 WHERE (((((((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c2)))AND(CASE NULL  WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END)))OR(((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0))))) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (((((((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c2)))AND(CASE NULL  WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END)))OR(((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0))))))) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM rt0 WHERE (((((((((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c2)))AND(CASE NULL  WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END)))OR(((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0))))) ISNULL));
SELECT rt0.c0, rt0.c1 FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (CASE WHEN ((rt0.c1)<>(rt0.c1)) THEN CAST(rt0.c0 AS INTEGER) WHEN CAST(rt0.c0 AS REAL) THEN CAST(rt0.c1 AS REAL) WHEN ((rt0.c0) IS TRUE) THEN ((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c1)) ELSE -1.984914083E9 END) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (CASE WHEN ((rt0.c1)<>(rt0.c1)) THEN CAST(rt0.c0 AS INTEGER) WHEN CAST(rt0.c0 AS REAL) THEN CAST(rt0.c1 AS REAL) WHEN ((rt0.c0) IS TRUE) THEN ((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c1)) ELSE -1.984914083E9 END))) UNION SELECT DISTINCT * FROM rt0 WHERE (((CASE WHEN ((rt0.c1)!=(rt0.c1)) THEN CAST(rt0.c0 AS INTEGER) WHEN CAST(rt0.c0 AS REAL) THEN CAST(rt0.c1 AS REAL) WHEN ((rt0.c0) IS TRUE) THEN ((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c1)) ELSE -1.984914083E9 END) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 WHERE (0.010728337885114514) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM rt0 WHERE ((NOT (0.010728337885114514))) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM rt0 WHERE (((0.010728337885114514) ISNULL)) GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((COUNT(MIN(rt0.c0))))) UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT ((((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((COUNT(MIN(rt0.c0))))))) UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (((((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((COUNT(MIN(rt0.c0)))))) ISNULL);
SELECT rt0.c1 FROM rt0;
SELECT rt0.c1 FROM rt0 WHERE ((((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c0)) IN ())) UNION ALL SELECT rt0.c1 FROM rt0 WHERE ((NOT ((((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c0)) IN ())))) UNION ALL SELECT rt0.c1 FROM rt0 WHERE ((((((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c0)) IN ())) ISNULL));
SELECT rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((((rt0.c1, rt0.c2, rt0.c0)) NOT BETWEEN ((CASE WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c2 END, rt0.c0 COLLATE RTRIM, ((rt0.c2) IS TRUE))) AND (('1K', ((rt0.c1)=(rt0.c2)), (((((((('118310204')AND(rt0.c2)))AND('-1859132407')))AND(rt0.c2)))OR('lB')))))) UNION SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT ((((rt0.c1, rt0.c2, rt0.c0)) NOT BETWEEN ((CASE WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c2 END, rt0.c0 COLLATE RTRIM, ((rt0.c2) IS TRUE))) AND (('1K', ((rt0.c1)=(rt0.c2)), (((((((('118310204')AND(rt0.c2)))AND('-1859132407')))AND(rt0.c2)))OR('lB')))))))) UNION SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((((((rt0.c1, rt0.c2, rt0.c0)) NOT BETWEEN ((CASE WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c2 END, rt0.c0 COLLATE RTRIM, ((rt0.c2) IS TRUE))) AND (('1K', ((rt0.c1)=(rt0.c2)), (((((((('118310204')AND(rt0.c2)))AND('-1859132407')))AND(rt0.c2)))OR('lB')))))) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0;
SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT rt0.c1, rt0.c0 FROM rt0 WHERE (CASE WHEN ((rt0.c1)IS(rt0.c2)) THEN LOWER(DISTINCT '-626027665') WHEN ((rt0.c2)>=(rt0.c2)) THEN (((rt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c0))) WHEN '-938204297' THEN ((rt0.c0)GLOB(rt0.c1)) ELSE CAST(rt0.c2 AS NUMERIC) END) GROUP BY rt0.c1, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (CASE WHEN ((rt0.c1)IS(rt0.c2)) THEN LOWER(DISTINCT '-626027665') WHEN ((rt0.c2)>=(rt0.c2)) THEN (((rt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c0))) WHEN '-938204297' THEN ((rt0.c0)GLOB(rt0.c1)) ELSE CAST(rt0.c2 AS NUMERIC) END))) GROUP BY rt0.c1, rt0.c0 UNION SELECT rt0.c1, rt0.c0 FROM rt0 WHERE (((CASE WHEN ((rt0.c1)IS(rt0.c2)) THEN LOWER(DISTINCT '-626027665') WHEN ((rt0.c2)>=(rt0.c2)) THEN (((rt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c0))) WHEN '-938204297' THEN ((rt0.c0)GLOB(rt0.c1)) ELSE CAST(rt0.c2 AS NUMERIC) END) ISNULL)) GROUP BY rt0.c1, rt0.c0;
SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
