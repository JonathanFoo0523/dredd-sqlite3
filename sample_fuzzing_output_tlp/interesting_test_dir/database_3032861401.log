-- Time: 2024/06/11 08:43:35
-- Database: database1
-- Database version: 3.40.0
-- seed value: 3032861401
PRAGMA cache_size = 50000; -- 12ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts4(c0 UNINDEXED, c1 UNINDEXED, c2); -- 2ms;
CREATE TABLE IF NOT EXISTS t1 (c0 REAL ); -- 0ms;
ANALYZE; -- 0ms;
REINDEX NOCASE; -- 0ms;
UPDATE OR IGNORE vt0 SET (c1)=('-1829891338') WHERE (((vt0.c1)) NOT BETWEEN ((vt0.c2 COLLATE BINARY)) AND ((CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c2 THEN vt0.c1 END))); -- 0ms;
CREATE VIRTUAL TABLE vt1 USING fts4(c0); -- 1ms;
END TRANSACTION; -- 1ms;
PRAGMA application_id; -- 0ms;
ALTER TABLE t1 RENAME COLUMN c0 TO c51; -- 2ms;
REINDEX; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree(c0, c1, c2, c3, c4); -- 1ms;
INSERT INTO vt1(vt1) VALUES('integrity-check'); -- 0ms;
UPDATE OR IGNORE t1 SET c51=NULL; -- 0ms;
UPDATE OR IGNORE t1 SET c51=x'', c51=NULL, c51=NULL WHERE ((((((0.8678559419798283)AND(t1.c51)))OR(t1.c51)))||(((t1.c51) NOT BETWEEN (t1.c51) AND (t1.c51)))); -- 0ms;
ANALYZE; -- 1ms;
BEGIN  TRANSACTION; -- 0ms;
UPDATE vt0 SET c2=x'' WHERE (((vt0.c2, vt0.c2, vt0.c1))<=((vt0.c0, vt0.c2, x''))) COLLATE BINARY COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO rt0(c4, c2) VALUES ('-1829891338', x''), ('-1911962287', x''), ('0.8678559419798283', '-1829891338'); -- 1ms;
PRAGMA temp.checkpoint_fullfsync = true; -- 0ms;
REINDEX NOCASE; -- 0ms;
UPDATE OR IGNORE t1 SET (c51)=(0.8678559419798283); -- 0ms;
ALTER TABLE t1 RENAME COLUMN c51 TO c16; -- 2ms;
UPDATE OR ROLLBACK rt0 SET c1=x'' WHERE ((CAST(0.8678559419798283 AS BLOB)) NOTNULL); -- 0ms;
ANALYZE; -- 0ms;
ANALYZE main; -- 1ms;
UPDATE OR ABORT t1 SET (c16)=(x'') WHERE CAST((NOT (x'd27c')) AS TEXT); -- 0ms;
PRAGMA legacy_file_format = true; -- 0ms;
DELETE FROM rt0; -- 0ms;
INSERT OR IGNORE INTO vt0(c2) VALUES (''); -- 1ms;
INSERT OR ROLLBACK INTO t1(c16) VALUES ('-1342893882'); -- 0ms;
ALTER TABLE t1 ADD COLUMN c49 INT; -- 0ms;
UPDATE OR IGNORE vt1 SET c0=0.43228273211305; -- 0ms;
PRAGMA temp.locking_mode; -- 0ms;
PRAGMA temp.cell_size_check = false; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1308461042); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('pgsz', '26067'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('merge', -144195748);\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 5); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('crisismerge', 312056006); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('crisismerge', 1684628464); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 22836375); -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=1812195806,13');\n; -- 0ms;
ALTER TABLE t1 RENAME COLUMN c49 TO c81; -- 2ms;
UPDATE OR IGNORE vt0 SET (c0)=('-1911962287'); -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (0.14986687668049437); -- 0ms;
UPDATE t1 SET (c16)=('947287526') WHERE ((((t1.c16) NOT BETWEEN (t1.c16) AND (t1.c16)))<(t1.c81 COLLATE NOCASE)); -- 0ms;
PRAGMA reverse_unordered_selects = true; -- 0ms;
PRAGMA temp.wal_autocheckpoint = -526489513739974011; -- 0ms;
PRAGMA main.checkpoint_fullfsync = true; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', 112033777);\n; -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1110145709); -- 0ms;
INSERT INTO vt1(vt1) VALUES('integrity-check'); -- 0ms;
REINDEX; -- 0ms;
INSERT OR ROLLBACK INTO vt1 VALUES (NULL); -- 1ms;
PRAGMA foreign_keys; -- 0ms;
PRAGMA defer_foreign_keys = false; -- 0ms;
DROP TABLE rt0; -- 0ms;
UPDATE OR IGNORE vt1 SET c0=NULL WHERE CASE ((vt1.c0)GLOB(vt1.c0))  WHEN IFNULL(0.34807018636253206, vt1.c0) THEN ((vt1.c0)%(vt1.c0)) END; -- 0ms;
INSERT INTO vt1(vt1) VALUES('optimize'); -- 0ms;
ANALYZE sqlite_master; -- 0ms;
REINDEX; -- 0ms;
UPDATE OR IGNORE vt1 SET c0=0.6994701116212366, c0='!I\r', c0=-1.44195748E8 WHERE ((((NULL)>(NULL)))<=((vt1.c0 IN (vt1.c0)))); -- 0ms;
PRAGMA integrity_check; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
UPDATE t1 SET (c81)=('%sN1') WHERE ((((((t1.c81) IS FALSE))AND((((t1.c81)) BETWEEN ((t1.c81)) AND ((t1.c81))))))OR((t1.c16 IN (t1.c16)))); -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES ('72000963', 72000963, NULL), ('iV', NULL, x'56c7'), (LOWER(x'101b89c5'), '//', 'p{'); -- 0ms;
INSERT INTO vt1(vt1) VALUES('integrity-check'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA short_column_names = true; -- 0ms;
UPDATE OR IGNORE rt0 SET (c4, c2, c0)=('0.43228273211305', '', '-1308251101'); -- 0ms;
PRAGMA foreign_keys = false; -- 0ms;
INSERT OR IGNORE INTO t1(c51) VALUES (0.5185994252111319), ('!I\r'), (NULL); -- 0ms;
PRAGMA incremental_vacuum(-1733038205); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR ROLLBACK INTO t1(c51) VALUES ('-989913667'); -- 1ms;
PRAGMA reverse_unordered_selects = true; -- 0ms;
ANALYZE; -- 0ms;
INSERT OR IGNORE INTO vt0(c0, c1) VALUES (NULL, x''); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 1ms;
REINDEX; -- 0ms;
REINDEX BINARY; -- 0ms;
UPDATE vt1 SET (c0)=(x'') WHERE DATE(((vt1.c0)>=(vt1.c0)), 'iV', (NOT (x''))); -- 1ms;
PRAGMA integrity_check; -- 1ms;
UPDATE OR IGNORE vt0 SET (c1, c0)=(0Xffffffffaff510c6, '0.6994701116212366'); -- 0ms;
END; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('pgsz', '3156'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', 529074822);\n; -- 0ms;
INSERT INTO vt1(vt1) VALUES('integrity-check'); -- 0ms;
UPDATE vt0 SET c0=x'186c'; -- 0ms;
UPDATE t1 SET c51=0.5370850206597126, c51=x'b309', c51=NULL WHERE LOWER(((t1.c51) IS TRUE)); -- 0ms;
INSERT OR ABORT INTO vt1(c0) VALUES (x'a5e6'), (NULL), ('JF'), (x''), (x'eb90'); -- 1ms;
UPDATE OR IGNORE vt1 SET (c0)=('') WHERE (((vt1.c0 IN ())) BETWEEN (((((vt1.c0)AND(vt1.c0)))AND(vt1.c0))) AND (((0.7400227944766408) IS TRUE))); -- 1ms;
VACUUM; -- 2ms;
UPDATE vt1 SET c0='1128819705', c0=x'' WHERE ((CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END) NOTNULL); -- 0ms;
UPDATE OR IGNORE vt1 SET c0='' WHERE (((NULL) NOT BETWEEN (vt1.c0) AND (vt1.c0)) IN ()); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR FAIL INTO vt1 VALUES ('ⴞ'); -- 0ms;
END; -- 0ms;
COMMIT; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE (CAST(rt0.c0 AS INTEGER)) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (CAST(rt0.c0 AS INTEGER)))) UNION ALL SELECT ALL * FROM rt0 WHERE (((CAST(rt0.c0 AS INTEGER)) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (CAST(CASE WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c3 END AS TEXT)) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (CAST(CASE WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c3 END AS TEXT)))) UNION SELECT DISTINCT * FROM rt0 WHERE (((CAST(CASE WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c3 END AS TEXT)) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT t1.c51 FROM vt1 INNER JOIN t1 ON t1.c51 GROUP BY t1.c51;
SELECT ALL t1.c51 FROM vt1 INNER JOIN t1 ON t1.c51 WHERE ((((vt1.c0)) BETWEEN ((CASE x''  WHEN t1.c51 THEN NULL ELSE vt1.c0 END)) AND ((((vt1.c0)AND(vt1.c0)))))) GROUP BY t1.c51 UNION SELECT t1.c51 FROM vt1 INNER JOIN t1 ON t1.c51 WHERE ((NOT ((((vt1.c0)) BETWEEN ((CASE x''  WHEN t1.c51 THEN NULL ELSE vt1.c0 END)) AND ((((vt1.c0)AND(vt1.c0)))))))) GROUP BY t1.c51 UNION SELECT t1.c51 FROM vt1 INNER JOIN t1 ON t1.c51 WHERE ((((((vt1.c0)) BETWEEN ((CASE x''  WHEN t1.c51 THEN NULL ELSE vt1.c0 END)) AND ((((vt1.c0)AND(vt1.c0)))))) ISNULL)) GROUP BY t1.c51;
SELECT t1.c51 FROM vt1 INNER JOIN t1 ON t1.c51 GROUP BY t1.c51;
SELECT vt1.c0, vt0.c1, vt0.c2 FROM vt1 LEFT OUTER JOIN vt0 ON CAST(((vt0.c2)+(vt1.c0)) AS INTEGER) GROUP BY vt1.c0, vt0.c1, vt0.c2;
SELECT vt1.c0, vt0.c1, vt0.c2 FROM vt1 LEFT OUTER JOIN vt0 ON CAST(((vt0.c2)+(vt1.c0)) AS INTEGER) GROUP BY vt1.c0, vt0.c1, vt0.c2 HAVING vt0.c1 UNION ALL SELECT ALL vt1.c0, vt0.c1, vt0.c2 FROM vt1 LEFT OUTER JOIN vt0 ON CAST(((vt0.c2)+(vt1.c0)) AS INTEGER) GROUP BY vt1.c0, vt0.c1, vt0.c2 HAVING (NOT (vt0.c1)) UNION ALL SELECT vt1.c0, vt0.c1, vt0.c2 FROM vt1 LEFT OUTER JOIN vt0 ON CAST(((vt0.c2)+(vt1.c0)) AS INTEGER) GROUP BY vt1.c0, vt0.c1, vt0.c2 HAVING ((vt0.c1) ISNULL);
SELECT vt1.c0, vt0.c1, vt0.c2 FROM vt1 LEFT OUTER JOIN vt0 ON CAST(((vt0.c2)+(vt1.c0)) AS INTEGER) GROUP BY vt1.c0, vt0.c1, vt0.c2;
SELECT vt1.c0, vt0.c1, vt0.c2 FROM vt1 LEFT OUTER JOIN vt0 ON CAST(((vt0.c2)+(vt1.c0)) AS INTEGER) GROUP BY vt1.c0, vt0.c1, vt0.c2 HAVING vt0.c1 UNION ALL SELECT ALL vt1.c0, vt0.c1, vt0.c2 FROM vt1 LEFT OUTER JOIN vt0 ON CAST(((vt0.c2)+(vt1.c0)) AS INTEGER) GROUP BY vt1.c0, vt0.c1, vt0.c2 HAVING (NOT (vt0.c1)) UNION ALL SELECT vt1.c0, vt0.c1, vt0.c2 FROM vt1 LEFT OUTER JOIN vt0 ON CAST(((vt0.c2)+(vt1.c0)) AS INTEGER) GROUP BY vt1.c0, vt0.c1, vt0.c2 HAVING ((vt0.c1) ISNULL);
SELECT vt1.c0, vt0.c1, vt0.c2 FROM vt1 LEFT OUTER JOIN vt0 ON CAST(((vt0.c2)+(vt1.c0)) AS INTEGER) GROUP BY vt1.c0, vt0.c1, vt0.c2;
SELECT ALL t1.c51 FROM t1;
SELECT t1.c51 FROM t1 WHERE (t1.c51) UNION ALL SELECT t1.c51 FROM t1 WHERE ((NOT (t1.c51))) UNION ALL SELECT t1.c51 FROM t1 WHERE (((t1.c51) ISNULL));
SELECT ALL t1.c51 FROM t1;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((((((((vt0.c1 COLLATE RTRIM)AND(NULL)))OR(vt0.c0)))OR(((vt0.c2)>=(0.14578722229280716)))))OR(vt0.c2 COLLATE BINARY))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((((((((vt0.c1 COLLATE RTRIM)AND(NULL)))OR(vt0.c0)))OR(((vt0.c2)>=(0.14578722229280716)))))OR(vt0.c2 COLLATE BINARY))))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((((((((vt0.c1 COLLATE RTRIM)AND(NULL)))OR(vt0.c0)))OR(((vt0.c2)>=(0.14578722229280716)))))OR(vt0.c2 COLLATE BINARY))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT rt0.c2, rt0.c3, rt0.c1, t1.c51 FROM rt0, t1 GROUP BY rt0.c2, rt0.c3, rt0.c1, t1.c51;
SELECT rt0.c2, rt0.c3, rt0.c1, t1.c51 FROM rt0, t1 WHERE (((((rt0.c1)==(rt0.c1))) NOT NULL)) GROUP BY rt0.c2, rt0.c3, rt0.c1, t1.c51 UNION SELECT rt0.c2, rt0.c3, rt0.c1, t1.c51 FROM rt0, t1 WHERE ((NOT (((((rt0.c1)==(rt0.c1))) NOT NULL)))) GROUP BY rt0.c2, rt0.c3, rt0.c1, t1.c51 UNION SELECT rt0.c2, rt0.c3, rt0.c1, t1.c51 FROM rt0, t1 WHERE (((((((rt0.c1)=(rt0.c1))) NOT NULL)) ISNULL)) GROUP BY rt0.c2, rt0.c3, rt0.c1, t1.c51;
SELECT rt0.c2, rt0.c3, rt0.c1, t1.c51 FROM rt0, t1 GROUP BY rt0.c2, rt0.c3, rt0.c1, t1.c51;
SELECT vt0.c0, vt0.c1, t1.c51, vt1.c0, vt0.c2 FROM vt1, t1, vt0 GROUP BY vt0.c0, vt0.c1, t1.c51, vt1.c0, vt0.c2;
SELECT vt0.c0, vt0.c1, t1.c51, vt1.c0, vt0.c2 FROM vt1, t1, vt0 GROUP BY vt0.c0, vt0.c1, t1.c51, vt1.c0, vt0.c2 HAVING ((((TOTAL(TOTAL(COUNT(GROUP_CONCAT(vt1.c0)))))OR(GROUP_CONCAT(GROUP_CONCAT(GROUP_CONCAT(AVG(MIN(COUNT(MIN(MAX('ṳA	?y')))))))))))OR(COUNT('r녭'))) UNION ALL SELECT vt0.c0, vt0.c1, t1.c51, vt1.c0, vt0.c2 FROM vt1, t1, vt0 GROUP BY vt0.c0, vt0.c1, t1.c51, vt1.c0, vt0.c2 HAVING (NOT (((((TOTAL(TOTAL(COUNT(GROUP_CONCAT(vt1.c0)))))OR(GROUP_CONCAT(GROUP_CONCAT(GROUP_CONCAT(AVG(MIN(COUNT(MIN(MAX('ṳA	?y')))))))))))OR(COUNT('r녭'))))) UNION ALL SELECT vt0.c0, vt0.c1, t1.c51, vt1.c0, vt0.c2 FROM vt1, t1, vt0 GROUP BY vt0.c0, vt0.c1, t1.c51, vt1.c0, vt0.c2 HAVING ((((((TOTAL(TOTAL(COUNT(GROUP_CONCAT(vt1.c0)))))OR(GROUP_CONCAT(GROUP_CONCAT(GROUP_CONCAT(AVG(MIN(COUNT(MIN(MAX('ṳA	?y')))))))))))OR(COUNT('r녭')))) ISNULL);
SELECT ALL rt0.c1, rt0.c3, rt0.c0 FROM rt0;
SELECT ALL rt0.c1, rt0.c3, rt0.c0 FROM rt0 WHERE (((LIKELIHOOD(rt0.c0, 4.3625188740203935E-4)) NOTNULL)) UNION ALL SELECT ALL rt0.c1, rt0.c3, rt0.c0 FROM rt0 WHERE ((NOT (((LIKELIHOOD(rt0.c0, 4.3625188740203935E-4)) NOTNULL)))) UNION ALL SELECT ALL rt0.c1, rt0.c3, rt0.c0 FROM rt0 WHERE (((((LIKELIHOOD(rt0.c0, 4.3625188740203935E-4)) NOTNULL)) ISNULL));
SELECT ALL rt0.c1, rt0.c3, rt0.c0 FROM rt0;
SELECT DISTINCT t1.c51, rt0.c2, rt0.c3 FROM t1, rt0, vt1;
SELECT DISTINCT t1.c51, rt0.c2, rt0.c3 FROM t1, rt0, vt1 WHERE (CAST('*໽-e䦸' AS REAL)) UNION SELECT DISTINCT t1.c51, rt0.c2, rt0.c3 FROM t1, rt0, vt1 WHERE ((NOT (CAST('*໽-e䦸' AS REAL)))) UNION SELECT DISTINCT t1.c51, rt0.c2, rt0.c3 FROM t1, rt0, vt1 WHERE (((CAST('*໽-e䦸' AS REAL)) ISNULL));
SELECT DISTINCT t1.c51, rt0.c2, rt0.c3 FROM t1, rt0, vt1;
SELECT ALL vt0.c1, vt0.c0, t1.c51, vt1.c0, rt0.c0, rt0.c1, rt0.c4 FROM t1, vt1 CROSS JOIN vt0 ON ((rt0.c1 COLLATE NOCASE)OR(HEX(rt0.c2))) LEFT OUTER JOIN rt0 ON 0X5ec4e9fe COLLATE BINARY GROUP BY vt0.c1, vt0.c0, t1.c51, vt1.c0, rt0.c0, rt0.c1, rt0.c4;
SELECT vt0.c1, vt0.c0, t1.c51, vt1.c0, rt0.c0, rt0.c1, rt0.c4 FROM t1, vt1 CROSS JOIN vt0 ON ((rt0.c1 COLLATE NOCASE)OR(HEX(rt0.c2))) LEFT OUTER JOIN rt0 ON 0X5ec4e9fe COLLATE BINARY WHERE ((~ (CASE WHEN rt0.c1 THEN vt0.c2 ELSE rt0.c1 END))) GROUP BY vt0.c1, vt0.c0, t1.c51, vt1.c0, rt0.c0, rt0.c1, rt0.c4 UNION SELECT ALL vt0.c1, vt0.c0, t1.c51, vt1.c0, rt0.c0, rt0.c1, rt0.c4 FROM t1, vt1 CROSS JOIN vt0 ON ((rt0.c1 COLLATE NOCASE)OR(HEX(rt0.c2))) LEFT OUTER JOIN rt0 ON 0x5ec4e9fe COLLATE BINARY WHERE ((NOT ((~ (CASE WHEN rt0.c1 THEN vt0.c2 ELSE rt0.c1 END))))) GROUP BY vt0.c1, vt0.c0, t1.c51, vt1.c0, rt0.c0, rt0.c1, rt0.c4 UNION SELECT vt0.c1, vt0.c0, t1.c51, vt1.c0, rt0.c0, rt0.c1, rt0.c4 FROM t1, vt1 CROSS JOIN vt0 ON ((rt0.c1 COLLATE NOCASE)OR(HEX(rt0.c2))) LEFT OUTER JOIN rt0 ON 0x5ec4e9fe COLLATE BINARY WHERE ((((~ (CASE WHEN rt0.c1 THEN vt0.c2 ELSE rt0.c1 END))) ISNULL)) GROUP BY vt0.c1, vt0.c0, t1.c51, vt1.c0, rt0.c0, rt0.c1, rt0.c4;
SELECT ALL vt0.c1, vt0.c0, t1.c51, vt1.c0, rt0.c0, rt0.c1, rt0.c4 FROM t1, vt1 CROSS JOIN vt0 ON ((rt0.c1 COLLATE NOCASE)OR(HEX(rt0.c2))) LEFT OUTER JOIN rt0 ON 0X5ec4e9fe COLLATE BINARY GROUP BY vt0.c1, vt0.c0, t1.c51, vt1.c0, rt0.c0, rt0.c1, rt0.c4;
SELECT ALL t1.c51 FROM vt0, vt1, t1 GROUP BY t1.c51;
SELECT t1.c51 FROM vt0, vt1, t1 GROUP BY t1.c51 HAVING vt1.c0 UNION ALL SELECT ALL t1.c51 FROM vt0, vt1, t1 GROUP BY t1.c51 HAVING (NOT (vt1.c0)) UNION ALL SELECT t1.c51 FROM vt0, vt1, t1 GROUP BY t1.c51 HAVING ((vt1.c0) ISNULL);
SELECT ALL t1.c51 FROM vt0, vt1, t1 GROUP BY t1.c51;
SELECT t1.c51 FROM vt0, vt1, t1 GROUP BY t1.c51 HAVING vt1.c0 UNION ALL SELECT ALL t1.c51 FROM vt0, vt1, t1 GROUP BY t1.c51 HAVING (NOT (vt1.c0)) UNION ALL SELECT t1.c51 FROM vt0, vt1, t1 GROUP BY t1.c51 HAVING ((vt1.c0) ISNULL);
SELECT ALL t1.c51 FROM vt0, vt1, t1 GROUP BY t1.c51;
SELECT * FROM vt0 CROSS JOIN vt1 ON ((((-1208863631) NOT NULL)) BETWEEN ((('') IS TRUE)) AND (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c1))));
SELECT ALL * FROM vt0 CROSS JOIN vt1 ON ((((-1208863631) NOT NULL)) BETWEEN ((('') IS TRUE)) AND (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c1)))) WHERE (CAST(((vt1.c0)&(vt0.c1)) AS REAL)) UNION ALL SELECT ALL * FROM vt0 CROSS JOIN vt1 ON ((((-1208863631) NOT NULL)) BETWEEN ((('') IS TRUE)) AND (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c1)))) WHERE ((NOT (CAST(((vt1.c0)&(vt0.c1)) AS REAL)))) UNION ALL SELECT * FROM vt0 CROSS JOIN vt1 ON ((((-1208863631) NOT NULL)) BETWEEN ((('') IS TRUE)) AND (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c1)))) WHERE (((CAST(((vt1.c0)&(vt0.c1)) AS REAL)) ISNULL));
SELECT * FROM vt0 CROSS JOIN vt1 ON ((((-1208863631) NOT NULL)) BETWEEN ((('') IS TRUE)) AND (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c1))));
SELECT DISTINCT rt0.c3, vt1.c0, rt0.c1, rt0.c4 FROM vt1, rt0;
SELECT DISTINCT rt0.c3, vt1.c0, rt0.c1, rt0.c4 FROM vt1, rt0 WHERE ((- (((vt1.c0)<(vt1.c0))))) UNION SELECT DISTINCT rt0.c3, vt1.c0, rt0.c1, rt0.c4 FROM vt1, rt0 WHERE ((NOT ((- (((vt1.c0)<(vt1.c0))))))) UNION SELECT DISTINCT rt0.c3, vt1.c0, rt0.c1, rt0.c4 FROM vt1, rt0 WHERE ((((- (((vt1.c0)<(vt1.c0))))) ISNULL));
SELECT DISTINCT rt0.c3, vt1.c0, rt0.c1, rt0.c4 FROM vt1, rt0;
SELECT ALL rt0.c4, vt0.c2, rt0.c3, rt0.c0, vt0.c0, t1.c51, vt1.c0, rt0.c1, vt0.c1, rt0.c2 FROM rt0 LEFT OUTER JOIN vt1 ON ((((rt0.c0)<=(vt1.c0))) NOT BETWEEN (vt0.c2 COLLATE BINARY) AND (((rt0.c1)==(vt0.c0)))) FULL OUTER JOIN t1 ON CAST(rt0.c4 AS NUMERIC) CROSS JOIN vt0 ON ((~ (vt0.c1)) IN ()) GROUP BY rt0.c4, vt0.c2, rt0.c3, rt0.c0, vt0.c0, t1.c51, vt1.c0, rt0.c1, vt0.c1, rt0.c2;
SELECT ALL rt0.c4, vt0.c2, rt0.c3, rt0.c0, vt0.c0, t1.c51, vt1.c0, rt0.c1, vt0.c1, rt0.c2 FROM rt0 LEFT OUTER JOIN vt1 ON ((((rt0.c0)<=(vt1.c0))) NOT BETWEEN (vt0.c2 COLLATE BINARY) AND (((rt0.c1)=(vt0.c0)))) FULL OUTER JOIN t1 ON CAST(rt0.c4 AS NUMERIC) CROSS JOIN vt0 ON ((~ (vt0.c1)) IN ()) WHERE ((((((vt1.c0)) BETWEEN ((vt0.c0)) AND ((t1.c51)))) NOT NULL)) GROUP BY rt0.c4, vt0.c2, rt0.c3, rt0.c0, vt0.c0, t1.c51, vt1.c0, rt0.c1, vt0.c1, rt0.c2 UNION SELECT ALL rt0.c4, vt0.c2, rt0.c3, rt0.c0, vt0.c0, t1.c51, vt1.c0, rt0.c1, vt0.c1, rt0.c2 FROM rt0 LEFT OUTER JOIN vt1 ON ((((rt0.c0)<=(vt1.c0))) NOT BETWEEN (vt0.c2 COLLATE BINARY) AND (((rt0.c1)==(vt0.c0)))) FULL OUTER JOIN t1 ON CAST(rt0.c4 AS NUMERIC) CROSS JOIN vt0 ON ((~ (vt0.c1)) IN ()) WHERE ((NOT ((((((vt1.c0)) BETWEEN ((vt0.c0)) AND ((t1.c51)))) NOT NULL)))) GROUP BY rt0.c4, vt0.c2, rt0.c3, rt0.c0, vt0.c0, t1.c51, vt1.c0, rt0.c1, vt0.c1, rt0.c2 UNION SELECT rt0.c4, vt0.c2, rt0.c3, rt0.c0, vt0.c0, t1.c51, vt1.c0, rt0.c1, vt0.c1, rt0.c2 FROM rt0 LEFT OUTER JOIN vt1 ON ((((rt0.c0)<=(vt1.c0))) NOT BETWEEN (vt0.c2 COLLATE BINARY) AND (((rt0.c1)==(vt0.c0)))) FULL OUTER JOIN t1 ON CAST(rt0.c4 AS NUMERIC) CROSS JOIN vt0 ON ((~ (vt0.c1)) IN ()) WHERE ((((((((vt1.c0)) BETWEEN ((vt0.c0)) AND ((t1.c51)))) NOT NULL)) ISNULL)) GROUP BY rt0.c4, vt0.c2, rt0.c3, rt0.c0, vt0.c0, t1.c51, vt1.c0, rt0.c1, vt0.c1, rt0.c2;
SELECT ALL rt0.c4, vt0.c2, rt0.c3, rt0.c0, vt0.c0, t1.c51, vt1.c0, rt0.c1, vt0.c1, rt0.c2 FROM rt0 LEFT OUTER JOIN vt1 ON ((((rt0.c0)<=(vt1.c0))) NOT BETWEEN (vt0.c2 COLLATE BINARY) AND (((rt0.c1)==(vt0.c0)))) FULL OUTER JOIN t1 ON CAST(rt0.c4 AS NUMERIC) CROSS JOIN vt0 ON ((~ (vt0.c1)) IN ()) GROUP BY rt0.c4, vt0.c2, rt0.c3, rt0.c0, vt0.c0, t1.c51, vt1.c0, rt0.c1, vt0.c1, rt0.c2;
SELECT rt0.c1, rt0.c2, rt0.c3, vt1.c0 FROM rt0 CROSS JOIN vt1 ON ((((rt0.c4)) NOT BETWEEN ((vt1.c0)) AND ((rt0.c3))) IN ()) GROUP BY rt0.c1, rt0.c2, rt0.c3, vt1.c0;
SELECT rt0.c1, rt0.c2, rt0.c3, vt1.c0 FROM rt0 CROSS JOIN vt1 ON ((((rt0.c4)) NOT BETWEEN ((vt1.c0)) AND ((rt0.c3))) IN ()) GROUP BY rt0.c1, rt0.c2, rt0.c3, vt1.c0 HAVING COUNT((~ (COUNT(rt0.c3)))) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c3, vt1.c0 FROM rt0 CROSS JOIN vt1 ON ((((rt0.c4)) NOT BETWEEN ((vt1.c0)) AND ((rt0.c3))) IN ()) GROUP BY rt0.c1, rt0.c2, rt0.c3, vt1.c0 HAVING (NOT (COUNT((~ (COUNT(rt0.c3)))))) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c3, vt1.c0 FROM rt0 CROSS JOIN vt1 ON ((((rt0.c4)) NOT BETWEEN ((vt1.c0)) AND ((rt0.c3))) IN ()) GROUP BY rt0.c1, rt0.c2, rt0.c3, vt1.c0 HAVING ((COUNT((~ (COUNT(rt0.c3))))) ISNULL);
SELECT ALL rt0.c2, vt1.c0, rt0.c3, rt0.c1, rt0.c0 FROM vt1 RIGHT OUTER JOIN rt0 ON CASE ((rt0.c4)+(rt0.c0))  WHEN ((NULL)LIKE(rt0.c0)) THEN (((NULL)) BETWEEN ((rt0.c2)) AND ((rt0.c4))) WHEN x'' THEN (NOT (rt0.c2)) WHEN CASE WHEN vt1.c0 THEN -1.342893882E9 ELSE vt1.c0 END THEN CASE vt1.c0  WHEN rt0.c2 THEN rt0.c3 END END INNER JOIN t1 ON CAST(((rt0.c2)>(rt0.c1)) AS REAL);
SELECT rt0.c2, vt1.c0, rt0.c3, rt0.c1, rt0.c0 FROM vt1 RIGHT OUTER JOIN rt0 ON CASE ((rt0.c4)+(rt0.c0))  WHEN ((NULL)LIKE(rt0.c0)) THEN (((NULL)) BETWEEN ((rt0.c2)) AND ((rt0.c4))) WHEN x'' THEN (NOT (rt0.c2)) WHEN CASE WHEN vt1.c0 THEN -1.342893882E9 ELSE vt1.c0 END THEN CASE vt1.c0  WHEN rt0.c2 THEN rt0.c3 END END INNER JOIN t1 ON CAST(((rt0.c2)>(rt0.c1)) AS REAL) WHERE ((((('')AND((((rt0.c0, vt1.c0, t1.c51))>=(('P{', rt0.c2, t1.c51))))))AND(CASE rt0.c2  WHEN vt1.c0 THEN rt0.c3 ELSE rt0.c2 END))) UNION ALL SELECT ALL rt0.c2, vt1.c0, rt0.c3, rt0.c1, rt0.c0 FROM vt1 RIGHT OUTER JOIN rt0 ON CASE ((rt0.c4)+(rt0.c0))  WHEN ((NULL)LIKE(rt0.c0)) THEN (((NULL)) BETWEEN ((rt0.c2)) AND ((rt0.c4))) WHEN x'' THEN (NOT (rt0.c2)) WHEN CASE WHEN vt1.c0 THEN -1.342893882E9 ELSE vt1.c0 END THEN CASE vt1.c0  WHEN rt0.c2 THEN rt0.c3 END END INNER JOIN t1 ON CAST(((rt0.c2)>(rt0.c1)) AS REAL) WHERE ((NOT ((((('')AND((((rt0.c0, vt1.c0, t1.c51))>=(('P{', rt0.c2, t1.c51))))))AND(CASE rt0.c2  WHEN vt1.c0 THEN rt0.c3 ELSE rt0.c2 END))))) UNION ALL SELECT ALL rt0.c2, vt1.c0, rt0.c3, rt0.c1, rt0.c0 FROM vt1 RIGHT OUTER JOIN rt0 ON CASE ((rt0.c4)+(rt0.c0))  WHEN ((NULL)LIKE(rt0.c0)) THEN (((NULL)) BETWEEN ((rt0.c2)) AND ((rt0.c4))) WHEN x'' THEN (NOT (rt0.c2)) WHEN CASE WHEN vt1.c0 THEN -1.342893882E9 ELSE vt1.c0 END THEN CASE vt1.c0  WHEN rt0.c2 THEN rt0.c3 END END INNER JOIN t1 ON CAST(((rt0.c2)>(rt0.c1)) AS REAL) WHERE ((((((('')AND((((rt0.c0, vt1.c0, t1.c51))>=(('P{', rt0.c2, t1.c51))))))AND(CASE rt0.c2  WHEN vt1.c0 THEN rt0.c3 ELSE rt0.c2 END))) ISNULL));
SELECT ALL rt0.c2, vt1.c0, rt0.c3, rt0.c1, rt0.c0 FROM vt1 RIGHT OUTER JOIN rt0 ON CASE ((rt0.c4)+(rt0.c0))  WHEN ((NULL)LIKE(rt0.c0)) THEN (((NULL)) BETWEEN ((rt0.c2)) AND ((rt0.c4))) WHEN x'' THEN (NOT (rt0.c2)) WHEN CASE WHEN vt1.c0 THEN -1.342893882E9 ELSE vt1.c0 END THEN CASE vt1.c0  WHEN rt0.c2 THEN rt0.c3 END END INNER JOIN t1 ON CAST(((rt0.c2)>(rt0.c1)) AS REAL);
SELECT DISTINCT * FROM vt0, rt0, t1, vt1;
SELECT DISTINCT * FROM vt0, rt0, t1, vt1 WHERE (((CASE rt0.c3  WHEN rt0.c3 THEN rt0.c2 ELSE x'bf75c436' END)*(RTRIM(rt0.c4)))) UNION SELECT DISTINCT * FROM vt0, rt0, t1, vt1 WHERE ((NOT (((CASE rt0.c3  WHEN rt0.c3 THEN rt0.c2 ELSE x'bf75c436' END)*(RTRIM(rt0.c4)))))) UNION SELECT DISTINCT * FROM vt0, rt0, t1, vt1 WHERE (((((CASE rt0.c3  WHEN rt0.c3 THEN rt0.c2 ELSE x'bf75c436' END)*(RTRIM(rt0.c4)))) ISNULL));
SELECT DISTINCT * FROM vt0, rt0, t1, vt1;
SELECT vt0.c0, vt0.c1, vt0.c2 FROM vt0 GROUP BY vt0.c0, vt0.c1, vt0.c2;
SELECT vt0.c0, vt0.c1, vt0.c2 FROM vt0 WHERE (vt0.c0) GROUP BY vt0.c0, vt0.c1, vt0.c2 UNION SELECT ALL vt0.c0, vt0.c1, vt0.c2 FROM vt0 WHERE ((NOT (vt0.c0))) GROUP BY vt0.c0, vt0.c1, vt0.c2 UNION SELECT vt0.c0, vt0.c1, vt0.c2 FROM vt0 WHERE (((vt0.c0) ISNULL)) GROUP BY vt0.c0, vt0.c1, vt0.c2;
SELECT vt0.c0, vt0.c1, vt0.c2 FROM vt0 GROUP BY vt0.c0, vt0.c1, vt0.c2;
SELECT vt0.c1, t1.c51, vt0.c2, rt0.c2 FROM vt0, t1, rt0 GROUP BY vt0.c1, t1.c51, vt0.c2, rt0.c2;
SELECT ALL vt0.c1, t1.c51, vt0.c2, rt0.c2 FROM vt0, t1, rt0 GROUP BY vt0.c1, t1.c51, vt0.c2, rt0.c2 HAVING AVG(COUNT('0.41212066938014735')) UNION ALL SELECT vt0.c1, t1.c51, vt0.c2, rt0.c2 FROM vt0 NOT INDEXED, t1, rt0 GROUP BY vt0.c1, t1.c51, vt0.c2, rt0.c2 HAVING (NOT (AVG(COUNT('0.41212066938014735')))) UNION ALL SELECT ALL vt0.c1, t1.c51, vt0.c2, rt0.c2 FROM vt0, t1, rt0 GROUP BY vt0.c1, t1.c51, vt0.c2, rt0.c2 HAVING ((AVG(COUNT('0.41212066938014735'))) ISNULL);
SELECT ALL * FROM rt0, t1;
SELECT ALL * FROM rt0, t1 WHERE (CASE (((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c3)))  WHEN (((t1.c51))=((rt0.c4))) THEN CASE t1.c51  WHEN rt0.c1 THEN NULL WHEN x'' THEN t1.c51 WHEN rt0.c4 THEN rt0.c4 ELSE t1.c51 END ELSE x'' END) UNION ALL SELECT * FROM rt0, t1 WHERE ((NOT (CASE (((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c3)))  WHEN (((t1.c51))==((rt0.c4))) THEN CASE t1.c51  WHEN rt0.c1 THEN NULL WHEN x'' THEN t1.c51 WHEN rt0.c4 THEN rt0.c4 ELSE t1.c51 END ELSE x'' END))) UNION ALL SELECT * FROM rt0, t1 WHERE (((CASE (((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c3)))  WHEN (((t1.c51))=((rt0.c4))) THEN CASE t1.c51  WHEN rt0.c1 THEN NULL WHEN x'' THEN t1.c51 WHEN rt0.c4 THEN rt0.c4 ELSE t1.c51 END ELSE x'' END) ISNULL));
SELECT ALL * FROM rt0, t1;
SELECT DISTINCT rt0.c4, vt0.c1, rt0.c1, rt0.c0, t1.c51, rt0.c3, rt0.c2, vt0.c0, vt0.c2 FROM t1, vt0, rt0;
SELECT DISTINCT rt0.c4, vt0.c1, rt0.c1, rt0.c0, t1.c51, rt0.c3, rt0.c2, vt0.c0, vt0.c2 FROM t1, vt0, rt0 WHERE (((CAST(t1.c51 AS BLOB)) BETWEEN ((- (vt0.c0))) AND ((rt0.c1 IN (vt0.c1))))) UNION SELECT DISTINCT rt0.c4, vt0.c1, rt0.c1, rt0.c0, t1.c51, rt0.c3, rt0.c2, vt0.c0, vt0.c2 FROM t1, vt0, rt0 WHERE ((NOT (((CAST(t1.c51 AS BLOB)) BETWEEN ((- (vt0.c0))) AND ((rt0.c1 IN (vt0.c1))))))) UNION SELECT DISTINCT rt0.c4, vt0.c1, rt0.c1, rt0.c0, t1.c51, rt0.c3, rt0.c2, vt0.c0, vt0.c2 FROM t1, vt0, rt0 WHERE (((((CAST(t1.c51 AS BLOB)) BETWEEN ((- (vt0.c0))) AND ((rt0.c1 IN (vt0.c1))))) ISNULL));
SELECT DISTINCT rt0.c4, vt0.c1, rt0.c1, rt0.c0, t1.c51, rt0.c3, rt0.c2, vt0.c0, vt0.c2 FROM t1, vt0, rt0;
SELECT ALL t1.c51 FROM vt1 FULL OUTER JOIN t1 ON (+ ((((t1.c51))>((t1.c51))))) GROUP BY t1.c51;
SELECT t1.c51 FROM vt1 FULL OUTER JOIN t1 ON (+ ((((t1.c51))>((t1.c51))))) WHERE (((((t1.c51)OR(CAST(t1.c51 AS INTEGER))))OR(vt1.c0))) GROUP BY t1.c51 UNION SELECT t1.c51 FROM vt1 FULL OUTER JOIN t1 ON (+ ((((t1.c51))>((t1.c51))))) WHERE ((NOT (((((t1.c51)OR(CAST(t1.c51 AS INTEGER))))OR(vt1.c0))))) GROUP BY t1.c51 UNION SELECT ALL t1.c51 FROM vt1 FULL OUTER JOIN t1 ON (+ ((((t1.c51))>((t1.c51))))) WHERE (((((((t1.c51)OR(CAST(t1.c51 AS INTEGER))))OR(vt1.c0))) ISNULL)) GROUP BY t1.c51;
SELECT ALL t1.c51 FROM vt1 FULL OUTER JOIN t1 ON (+ ((((t1.c51))>((t1.c51))))) GROUP BY t1.c51;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING UNLIKELY(DISTINCT MIN(MIN(''))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (UNLIKELY(DISTINCT MIN(MIN(''))))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((UNLIKELY(DISTINCT MIN(MIN('')))) ISNULL);
SELECT rt0.c2, rt0.c1, vt1.c0, vt0.c2, vt0.c0, rt0.c0 FROM rt0, vt1, vt0;
SELECT rt0.c2, rt0.c1, vt1.c0, vt0.c2, vt0.c0, rt0.c0 FROM rt0, vt1, vt0 WHERE ((((('iV')+('0.41212066938014735')))LIKE(vt0.c1))) UNION ALL SELECT rt0.c2, rt0.c1, vt1.c0, vt0.c2, vt0.c0, rt0.c0 FROM rt0, vt1, vt0 WHERE ((NOT ((((('iV')+('0.41212066938014735')))LIKE(vt0.c1))))) UNION ALL SELECT ALL rt0.c2, rt0.c1, vt1.c0, vt0.c2, vt0.c0, rt0.c0 FROM rt0, vt1, vt0 WHERE ((((((('iV')+('0.41212066938014735')))LIKE(vt0.c1))) ISNULL));
SELECT rt0.c2, rt0.c1, vt1.c0, vt0.c2, vt0.c0, rt0.c0 FROM rt0, vt1, vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE ((((vt0.c1)) NOT BETWEEN ((((((((((vt0.c0)AND(vt0.c2)))AND('EuUL|')))OR(vt0.c2)))AND(vt0.c0)))) AND (((NOT (vt0.c2)))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT ((((vt0.c1)) NOT BETWEEN ((((((((((vt0.c0)AND(vt0.c2)))AND('EuUL|')))OR(vt0.c2)))AND(vt0.c0)))) AND (((NOT (vt0.c2)))))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((((((vt0.c1)) NOT BETWEEN ((((((((((vt0.c0)AND(vt0.c2)))AND('EuUL|')))OR(vt0.c2)))AND(vt0.c0)))) AND (((NOT (vt0.c2)))))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT vt0.c1, vt0.c2, vt0.c0, rt0.c4 FROM rt0 INNER JOIN vt0 ON (vt0.c1 IN ((vt0.c0 IN ()))) GROUP BY vt0.c1, vt0.c2, vt0.c0, rt0.c4;
SELECT vt0.c1, vt0.c2, vt0.c0, rt0.c4 FROM rt0 INNER JOIN vt0 ON (vt0.c1 IN ((vt0.c0 IN ()))) WHERE ((~ (CASE vt0.c1  WHEN vt0.c1 THEN rt0.c4 ELSE rt0.c2 END))) GROUP BY vt0.c1, vt0.c2, vt0.c0, rt0.c4 UNION SELECT vt0.c1, vt0.c2, vt0.c0, rt0.c4 FROM rt0 INNER JOIN vt0 ON (vt0.c1 IN ((vt0.c0 IN ()))) WHERE ((NOT ((~ (CASE vt0.c1  WHEN vt0.c1 THEN rt0.c4 ELSE rt0.c2 END))))) GROUP BY vt0.c1, vt0.c2, vt0.c0, rt0.c4 UNION SELECT ALL vt0.c1, vt0.c2, vt0.c0, rt0.c4 FROM rt0 INNER JOIN vt0 ON (vt0.c1 IN ((vt0.c0 IN ()))) WHERE ((((~ (CASE vt0.c1  WHEN vt0.c1 THEN rt0.c4 ELSE rt0.c2 END))) ISNULL)) GROUP BY vt0.c1, vt0.c2, vt0.c0, rt0.c4;
SELECT vt0.c1, vt0.c2, vt0.c0, rt0.c4 FROM rt0 INNER JOIN vt0 ON (vt0.c1 IN ((vt0.c0 IN ()))) GROUP BY vt0.c1, vt0.c2, vt0.c0, rt0.c4;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING TOTAL(MIN(vt0.c2)) UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING (NOT (TOTAL(MIN(vt0.c2)))) UNION ALL SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING ((TOTAL(MIN(vt0.c2))) ISNULL);
SELECT vt0.c0, vt0.c2, vt1.c0 FROM t1, vt0, rt0, vt1;
SELECT vt0.c0, vt0.c2, vt1.c0 FROM t1, vt0, rt0, vt1 WHERE (((((t1.c51) IS TRUE)) ISNULL)) UNION ALL SELECT vt0.c0, vt0.c2, vt1.c0 FROM t1, vt0, rt0, vt1 WHERE ((NOT (((((t1.c51) IS TRUE)) ISNULL)))) UNION ALL SELECT ALL vt0.c0, vt0.c2, vt1.c0 FROM t1, vt0, rt0, vt1 WHERE (((((((t1.c51) IS TRUE)) ISNULL)) ISNULL));
SELECT vt0.c0, vt0.c2, vt1.c0 FROM t1, vt0, rt0, vt1;
SELECT DISTINCT * FROM vt1, vt0;
SELECT DISTINCT * FROM vt1, vt0 WHERE ((((vt0.c2, vt0.c2, vt0.c2)) BETWEEN ((CASE WHEN vt0.c0 THEN vt0.c1 END, CAST(vt0.c0 AS TEXT), vt0.c2)) AND ((((((vt0.c0)OR(vt0.c1)))AND(vt0.c1)), CASE vt1.c0  WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c0 END, ((vt0.c1)|(vt1.c0)))))) UNION SELECT DISTINCT * FROM vt1 NOT INDEXED, vt0 WHERE ((NOT ((((vt0.c2, vt0.c2, vt0.c2)) BETWEEN ((CASE WHEN vt0.c0 THEN vt0.c1 END, CAST(vt0.c0 AS TEXT), vt0.c2)) AND ((((((vt0.c0)OR(vt0.c1)))AND(vt0.c1)), CASE vt1.c0  WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c0 END, ((vt0.c1)|(vt1.c0)))))))) UNION SELECT DISTINCT * FROM vt1, vt0 WHERE ((((((vt0.c2, vt0.c2, vt0.c2)) BETWEEN ((CASE WHEN vt0.c0 THEN vt0.c1 END, CAST(vt0.c0 AS TEXT), vt0.c2)) AND ((((((vt0.c0)OR(vt0.c1)))AND(vt0.c1)), CASE vt1.c0  WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c0 END, ((vt0.c1)|(vt1.c0)))))) ISNULL));
SELECT DISTINCT * FROM vt1, vt0;
SELECT ALL rt0.c1, rt0.c4, rt0.c3, vt1.c0, vt0.c2, rt0.c2, t1.c51, rt0.c0, vt0.c1, vt0.c0 FROM t1, vt0, rt0, vt1 GROUP BY rt0.c1, rt0.c4, rt0.c3, vt1.c0, vt0.c2, rt0.c2, t1.c51, rt0.c0, vt0.c1, vt0.c0;
SELECT rt0.c1, rt0.c4, rt0.c3, vt1.c0, vt0.c2, rt0.c2, t1.c51, rt0.c0, vt0.c1, vt0.c0 FROM t1, vt0, rt0, vt1 WHERE ((- (CAST(0.4377783731787337 AS TEXT)))) GROUP BY rt0.c1, rt0.c4, rt0.c3, vt1.c0, vt0.c2, rt0.c2, t1.c51, rt0.c0, vt0.c1, vt0.c0 UNION SELECT rt0.c1, rt0.c4, rt0.c3, vt1.c0, vt0.c2, rt0.c2, t1.c51, rt0.c0, vt0.c1, vt0.c0 FROM t1, vt0, rt0, vt1 WHERE ((NOT ((- (CAST(0.4377783731787337 AS TEXT)))))) GROUP BY rt0.c1, rt0.c4, rt0.c3, vt1.c0, vt0.c2, rt0.c2, t1.c51, rt0.c0, vt0.c1, vt0.c0 UNION SELECT ALL rt0.c1, rt0.c4, rt0.c3, vt1.c0, vt0.c2, rt0.c2, t1.c51, rt0.c0, vt0.c1, vt0.c0 FROM t1, vt0, rt0, vt1 WHERE ((((- (CAST(0.4377783731787337 AS TEXT)))) ISNULL)) GROUP BY rt0.c1, rt0.c4, rt0.c3, vt1.c0, vt0.c2, rt0.c2, t1.c51, rt0.c0, vt0.c1, vt0.c0;
SELECT ALL rt0.c1, rt0.c4, rt0.c3, vt1.c0, vt0.c2, rt0.c2, t1.c51, rt0.c0, vt0.c1, vt0.c0 FROM t1, vt0, rt0, vt1 GROUP BY rt0.c1, rt0.c4, rt0.c3, vt1.c0, vt0.c2, rt0.c2, t1.c51, rt0.c0, vt0.c1, vt0.c0;
SELECT ALL vt1.c0, rt0.c0, rt0.c3, rt0.c2, rt0.c4, rt0.c1 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c0, rt0.c3, rt0.c2, rt0.c4, rt0.c1;
SELECT vt1.c0, rt0.c0, rt0.c3, rt0.c2, rt0.c4, rt0.c1 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c0, rt0.c3, rt0.c2, rt0.c4, rt0.c1 HAVING AVG(COUNT(*)) UNION ALL SELECT vt1.c0, rt0.c0, rt0.c3, rt0.c2, rt0.c4, rt0.c1 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c0, rt0.c3, rt0.c2, rt0.c4, rt0.c1 HAVING (NOT (AVG(COUNT(*)))) UNION ALL SELECT vt1.c0, rt0.c0, rt0.c3, rt0.c2, rt0.c4, rt0.c1 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c0, rt0.c3, rt0.c2, rt0.c4, rt0.c1 HAVING ((AVG(COUNT(*))) ISNULL);
SELECT ALL vt1.c0 FROM vt1;
SELECT ALL vt1.c0 FROM vt1 WHERE ((((vt1.c0 IN ())) BETWEEN ((+ (vt1.c0))) AND (((vt1.c0)AND(vt1.c0))))) UNION ALL SELECT vt1.c0 FROM vt1 WHERE ((NOT ((((vt1.c0 IN ())) BETWEEN ((+ (vt1.c0))) AND (((vt1.c0)AND(vt1.c0))))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE ((((((vt1.c0 IN ())) BETWEEN ((+ (vt1.c0))) AND (((vt1.c0)AND(vt1.c0))))) ISNULL));
SELECT ALL vt1.c0 FROM vt1;
SELECT DISTINCT rt0.c3, rt0.c2, vt0.c0, vt0.c2 FROM rt0, vt0, vt1, t1;
SELECT DISTINCT rt0.c3, rt0.c2, vt0.c0, vt0.c2 FROM rt0, vt0, vt1, t1 WHERE (CASE WHEN ((x'') BETWEEN (vt0.c1) AND (rt0.c4)) THEN ((rt0.c2)*(vt0.c0)) END) UNION SELECT DISTINCT rt0.c3, rt0.c2, vt0.c0, vt0.c2 FROM rt0, vt0, vt1, t1 WHERE ((NOT (CASE WHEN ((x'') BETWEEN (vt0.c1) AND (rt0.c4)) THEN ((rt0.c2)*(vt0.c0)) END))) UNION SELECT DISTINCT rt0.c3, rt0.c2, vt0.c0, vt0.c2 FROM rt0, vt0, vt1, t1 WHERE (((CASE WHEN ((x'') BETWEEN (vt0.c1) AND (rt0.c4)) THEN ((rt0.c2)*(vt0.c0)) END) ISNULL));
SELECT DISTINCT rt0.c3, rt0.c2, vt0.c0, vt0.c2 FROM rt0, vt0, vt1, t1;
SELECT rt0.c4, rt0.c0, rt0.c3, t1.c51, rt0.c1 FROM t1, rt0 GROUP BY rt0.c4, rt0.c0, rt0.c3, t1.c51, rt0.c1;
SELECT rt0.c4, rt0.c0, rt0.c3, t1.c51, rt0.c1 FROM t1, rt0 WHERE (((((CAST(rt0.c1 AS NUMERIC))AND(CASE WHEN rt0.c4 THEN rt0.c1 END)))AND(((t1.c51)-(NULL))))) GROUP BY rt0.c4, rt0.c0, rt0.c3, t1.c51, rt0.c1 UNION SELECT rt0.c4, rt0.c0, rt0.c3, t1.c51, rt0.c1 FROM t1, rt0 WHERE ((NOT (((((CAST(rt0.c1 AS NUMERIC))AND(CASE WHEN rt0.c4 THEN rt0.c1 END)))AND(((t1.c51)-(NULL))))))) GROUP BY rt0.c4, rt0.c0, rt0.c3, t1.c51, rt0.c1 UNION SELECT ALL rt0.c4, rt0.c0, rt0.c3, t1.c51, rt0.c1 FROM t1, rt0 WHERE (((((((CAST(rt0.c1 AS NUMERIC))AND(CASE WHEN rt0.c4 THEN rt0.c1 END)))AND(((t1.c51)-(NULL))))) ISNULL)) GROUP BY rt0.c4, rt0.c0, rt0.c3, t1.c51, rt0.c1;
SELECT rt0.c4, rt0.c0, rt0.c3, t1.c51, rt0.c1 FROM t1, rt0 GROUP BY rt0.c4, rt0.c0, rt0.c3, t1.c51, rt0.c1;
SELECT vt1.c0, rt0.c2, rt0.c0, rt0.c4, vt0.c0, vt0.c1 FROM vt0, rt0, t1, vt1 GROUP BY vt1.c0, rt0.c2, rt0.c0, rt0.c4, vt0.c0, vt0.c1;
SELECT vt1.c0, rt0.c2, rt0.c0, rt0.c4, vt0.c0, vt0.c1 FROM vt0, rt0, t1, vt1 GROUP BY vt1.c0, rt0.c2, rt0.c0, rt0.c4, vt0.c0, vt0.c1 HAVING COUNT(*) UNION ALL SELECT ALL vt1.c0, rt0.c2, rt0.c0, rt0.c4, vt0.c0, vt0.c1 FROM vt0, rt0, t1, vt1 GROUP BY vt1.c0, rt0.c2, rt0.c0, rt0.c4, vt0.c0, vt0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt1.c0, rt0.c2, rt0.c0, rt0.c4, vt0.c0, vt0.c1 FROM vt0, rt0, t1, vt1 GROUP BY vt1.c0, rt0.c2, rt0.c0, rt0.c4, vt0.c0, vt0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT vt1.c0, rt0.c2, rt0.c0, rt0.c4, vt0.c0, vt0.c1 FROM vt0, rt0, t1, vt1 GROUP BY vt1.c0, rt0.c2, rt0.c0, rt0.c4, vt0.c0, vt0.c1;
SELECT vt1.c0, rt0.c2, rt0.c0, rt0.c4, vt0.c0, vt0.c1 FROM vt0, rt0, t1, vt1 GROUP BY vt1.c0, rt0.c2, rt0.c0, rt0.c4, vt0.c0, vt0.c1 HAVING COUNT(*) UNION ALL SELECT ALL vt1.c0, rt0.c2, rt0.c0, rt0.c4, vt0.c0, vt0.c1 FROM vt0, rt0, t1, vt1 GROUP BY vt1.c0, rt0.c2, rt0.c0, rt0.c4, vt0.c0, vt0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt1.c0, rt0.c2, rt0.c0, rt0.c4, vt0.c0, vt0.c1 FROM vt0, rt0, t1, vt1 GROUP BY vt1.c0, rt0.c2, rt0.c0, rt0.c4, vt0.c0, vt0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT vt1.c0, rt0.c2, rt0.c0, rt0.c4, vt0.c0, vt0.c1 FROM vt0, rt0, t1, vt1 GROUP BY vt1.c0, rt0.c2, rt0.c0, rt0.c4, vt0.c0, vt0.c1;
SELECT * FROM t1, vt1, vt0;
SELECT * FROM t1, vt1, vt0 WHERE (((t1.c51) IS TRUE) COLLATE RTRIM) UNION ALL SELECT * FROM t1, vt1, vt0 WHERE ((NOT (((t1.c51) IS TRUE) COLLATE RTRIM))) UNION ALL SELECT ALL * FROM t1, vt1, vt0 WHERE (((((t1.c51) IS TRUE) COLLATE RTRIM) ISNULL));
SELECT * FROM t1, vt1, vt0;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((((vt1.c0) NOTNULL)) NOT NULL)) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT (((((vt1.c0) NOTNULL)) NOT NULL)))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((((((vt1.c0) NOTNULL)) NOT NULL)) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT ALL vt0.c1, vt1.c0 FROM vt0, t1, vt1 GROUP BY vt0.c1, vt1.c0;
SELECT vt0.c1, vt1.c0 FROM vt0, t1, vt1 WHERE ((((((((t1.c51))=((0.6200063836912456))))OR(((((vt0.c0)OR(vt0.c0)))AND(vt1.c0)))))AND(((vt0.c1) NOT BETWEEN (t1.c51) AND (vt0.c2))))) GROUP BY vt0.c1, vt1.c0 UNION SELECT vt0.c1, vt1.c0 FROM vt0, t1, vt1 WHERE ((NOT ((((((((t1.c51))=((0.6200063836912456))))OR(((((vt0.c0)OR(vt0.c0)))AND(vt1.c0)))))AND(((vt0.c1) NOT BETWEEN (t1.c51) AND (vt0.c2))))))) GROUP BY vt0.c1, vt1.c0 UNION SELECT ALL vt0.c1, vt1.c0 FROM vt0, t1, vt1 WHERE ((((((((((t1.c51))=((0.6200063836912456))))OR(((((vt0.c0)OR(vt0.c0)))AND(vt1.c0)))))AND(((vt0.c1) NOT BETWEEN (t1.c51) AND (vt0.c2))))) ISNULL)) GROUP BY vt0.c1, vt1.c0;
SELECT ALL vt0.c1, vt1.c0 FROM vt0, t1, vt1 GROUP BY vt0.c1, vt1.c0;
SELECT ALL rt0.c2, vt0.c1, rt0.c1, vt0.c0, rt0.c3, vt1.c0 FROM t1, rt0, vt1, vt0 GROUP BY rt0.c2, vt0.c1, rt0.c1, vt0.c0, rt0.c3, vt1.c0;
SELECT rt0.c2, vt0.c1, rt0.c1, vt0.c0, rt0.c3, vt1.c0 FROM t1, rt0, vt1, vt0 GROUP BY rt0.c2, vt0.c1, rt0.c1, vt0.c0, rt0.c3, vt1.c0 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c2, vt0.c1, rt0.c1, vt0.c0, rt0.c3, vt1.c0 FROM t1, rt0, vt1, vt0 GROUP BY rt0.c2, vt0.c1, rt0.c1, vt0.c0, rt0.c3, vt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c2, vt0.c1, rt0.c1, vt0.c0, rt0.c3, vt1.c0 FROM t1, rt0, vt1, vt0 GROUP BY rt0.c2, vt0.c1, rt0.c1, vt0.c0, rt0.c3, vt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c2, vt0.c1, rt0.c1, vt0.c0, rt0.c3, vt1.c0 FROM t1, rt0, vt1, vt0 GROUP BY rt0.c2, vt0.c1, rt0.c1, vt0.c0, rt0.c3, vt1.c0;
SELECT rt0.c2, vt0.c1, rt0.c1, vt0.c0, rt0.c3, vt1.c0 FROM t1, rt0, vt1, vt0 GROUP BY rt0.c2, vt0.c1, rt0.c1, vt0.c0, rt0.c3, vt1.c0 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c2, vt0.c1, rt0.c1, vt0.c0, rt0.c3, vt1.c0 FROM t1, rt0, vt1, vt0 GROUP BY rt0.c2, vt0.c1, rt0.c1, vt0.c0, rt0.c3, vt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c2, vt0.c1, rt0.c1, vt0.c0, rt0.c3, vt1.c0 FROM t1, rt0, vt1, vt0 GROUP BY rt0.c2, vt0.c1, rt0.c1, vt0.c0, rt0.c3, vt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c2, vt0.c1, rt0.c1, vt0.c0, rt0.c3, vt1.c0 FROM t1, rt0, vt1, vt0 GROUP BY rt0.c2, vt0.c1, rt0.c1, vt0.c0, rt0.c3, vt1.c0;
SELECT ALL * FROM vt0;
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)>(vt0.c2))) NOT NULL)) UNION ALL SELECT * FROM vt0 WHERE ((NOT (((((vt0.c0)>(vt0.c2))) NOT NULL)))) UNION ALL SELECT ALL * FROM vt0 WHERE (((((((vt0.c0)>(vt0.c2))) NOT NULL)) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT * FROM rt0, vt0 LEFT OUTER JOIN t1 ON ((((rt0.c3) IS TRUE))>=(0.19154999480556945));
SELECT DISTINCT * FROM rt0, vt0 LEFT OUTER JOIN t1 ON ((((rt0.c3) IS TRUE))>=(0.19154999480556945)) WHERE ((((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))))&(rt0.c0 COLLATE NOCASE))) UNION SELECT DISTINCT * FROM rt0, vt0 LEFT OUTER JOIN t1 ON ((((rt0.c3) IS TRUE))>=(0.19154999480556945)) WHERE ((NOT ((((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))))&(rt0.c0 COLLATE NOCASE))))) UNION SELECT DISTINCT * FROM rt0, vt0 LEFT OUTER JOIN t1 ON ((((rt0.c3) IS TRUE))>=(0.19154999480556945)) WHERE ((((((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))))&(rt0.c0 COLLATE NOCASE))) ISNULL));
SELECT DISTINCT * FROM rt0, vt0 LEFT OUTER JOIN t1 ON ((((rt0.c3) IS TRUE))>=(0.19154999480556945));
SELECT ALL vt0.c0, vt0.c2 FROM vt0 GROUP BY vt0.c0, vt0.c2;
SELECT ALL vt0.c0, vt0.c2 FROM vt0 WHERE ((((vt0.c0)+(vt0.c0)) IN ((vt0.c0 IN (vt0.c0))))) GROUP BY vt0.c0, vt0.c2 UNION SELECT ALL vt0.c0, vt0.c2 FROM vt0 WHERE ((NOT ((((vt0.c0)+(vt0.c0)) IN ((vt0.c0 IN (vt0.c0))))))) GROUP BY vt0.c0, vt0.c2 UNION SELECT ALL vt0.c0, vt0.c2 FROM vt0 WHERE ((((((vt0.c0)+(vt0.c0)) IN ((vt0.c0 IN (vt0.c0))))) ISNULL)) GROUP BY vt0.c0, vt0.c2;
SELECT ALL vt0.c0, vt0.c2 FROM vt0 GROUP BY vt0.c0, vt0.c2;
SELECT t1.c51 FROM vt0, rt0, vt1, t1 GROUP BY t1.c51;
SELECT ALL t1.c51 FROM vt0, rt0, vt1, t1 GROUP BY t1.c51 HAVING ((COUNT(vt1.c0))GLOB((~ (TOTAL(vt0.c0))))) UNION ALL SELECT t1.c51 FROM vt0, rt0, vt1, t1 GROUP BY t1.c51 HAVING (NOT (((COUNT(vt1.c0))GLOB((~ (TOTAL(vt0.c0))))))) UNION ALL SELECT ALL t1.c51 FROM vt0, rt0, vt1, t1 GROUP BY t1.c51 HAVING ((((COUNT(vt1.c0))GLOB((~ (TOTAL(vt0.c0)))))) ISNULL);
SELECT t1.c51 FROM vt0, rt0, vt1, t1 GROUP BY t1.c51;
SELECT ALL t1.c51 FROM vt0, rt0, vt1, t1 GROUP BY t1.c51 HAVING ((COUNT(vt1.c0))GLOB((~ (TOTAL(vt0.c0))))) UNION ALL SELECT t1.c51 FROM vt0, rt0, vt1, t1 GROUP BY t1.c51 HAVING (NOT (((COUNT(vt1.c0))GLOB((~ (TOTAL(vt0.c0))))))) UNION ALL SELECT ALL t1.c51 FROM vt0, rt0, vt1, t1 GROUP BY t1.c51 HAVING ((((COUNT(vt1.c0))GLOB((~ (TOTAL(vt0.c0)))))) ISNULL);
SELECT t1.c51 FROM vt0, rt0, vt1, t1 GROUP BY t1.c51;
SELECT ALL rt0.c2, rt0.c3, rt0.c1, rt0.c4, rt0.c0 FROM rt0;
SELECT ALL rt0.c2, rt0.c3, rt0.c1, rt0.c4, rt0.c0 FROM rt0 WHERE ((('-1342893882')>=(rt0.c0)) COLLATE NOCASE) UNION ALL SELECT ALL rt0.c2, rt0.c3, rt0.c1, rt0.c4, rt0.c0 FROM rt0 WHERE ((NOT ((('-1342893882')>=(rt0.c0)) COLLATE NOCASE))) UNION ALL SELECT ALL rt0.c2, rt0.c3, rt0.c1, rt0.c4, rt0.c0 FROM rt0 WHERE ((((('-1342893882')>=(rt0.c0)) COLLATE NOCASE) ISNULL));
SELECT ALL rt0.c2, rt0.c3, rt0.c1, rt0.c4, rt0.c0 FROM rt0;
SELECT DISTINCT vt0.c0, vt0.c2, rt0.c1, rt0.c3, vt1.c0 FROM rt0 CROSS JOIN vt1 ON '1812195806' INNER JOIN vt0 ON (((((((((vt0.c1 IN ()))OR(CASE rt0.c4  WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c1 THEN vt1.c0 WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c4 END)))OR(t1.c51)))AND(((rt0.c0) BETWEEN (vt1.c0) AND (t1.c51)))))AND(load_extension(vt0.c2, vt1.c0))) LEFT OUTER JOIN t1 ON (CAST(rt0.c2 AS NUMERIC) IN ());
SELECT DISTINCT vt0.c0, vt0.c2, rt0.c1, rt0.c3, vt1.c0 FROM rt0 CROSS JOIN vt1 ON '1812195806' INNER JOIN vt0 ON (((((((((vt0.c1 IN ()))OR(CASE rt0.c4  WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c1 THEN vt1.c0 WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c4 END)))OR(t1.c51)))AND(((rt0.c0) BETWEEN (vt1.c0) AND (t1.c51)))))AND(load_extension(vt0.c2, vt1.c0))) LEFT OUTER JOIN t1 ON (CAST(rt0.c2 AS NUMERIC) IN ()) WHERE (LENGTH((~ (rt0.c3)))) UNION SELECT DISTINCT vt0.c0, vt0.c2, rt0.c1, rt0.c3, vt1.c0 FROM rt0 CROSS JOIN vt1 ON '1812195806' INNER JOIN vt0 ON (((((((((vt0.c1 IN ()))OR(CASE rt0.c4  WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c1 THEN vt1.c0 WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c4 END)))OR(t1.c51)))AND(((rt0.c0) BETWEEN (vt1.c0) AND (t1.c51)))))AND(load_extension(vt0.c2, vt1.c0))) LEFT OUTER JOIN t1 ON (CAST(rt0.c2 AS NUMERIC) IN ()) WHERE ((NOT (LENGTH((~ (rt0.c3)))))) UNION SELECT DISTINCT vt0.c0, vt0.c2, rt0.c1, rt0.c3, vt1.c0 FROM rt0 CROSS JOIN vt1 ON '1812195806' INNER JOIN vt0 ON (((((((((vt0.c1 IN ()))OR(CASE rt0.c4  WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c1 THEN vt1.c0 WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c4 END)))OR(t1.c51)))AND(((rt0.c0) BETWEEN (vt1.c0) AND (t1.c51)))))AND(load_extension(vt0.c2, vt1.c0))) LEFT OUTER JOIN t1 ON (CAST(rt0.c2 AS NUMERIC) IN ()) WHERE (((LENGTH((~ (rt0.c3)))) ISNULL));
SELECT DISTINCT vt0.c0, vt0.c2, rt0.c1, rt0.c3, vt1.c0 FROM rt0 CROSS JOIN vt1 ON '1812195806' INNER JOIN vt0 ON (((((((((vt0.c1 IN ()))OR(CASE rt0.c4  WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c1 THEN vt1.c0 WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c4 END)))OR(t1.c51)))AND(((rt0.c0) BETWEEN (vt1.c0) AND (t1.c51)))))AND(load_extension(vt0.c2, vt1.c0))) LEFT OUTER JOIN t1 ON (CAST(rt0.c2 AS NUMERIC) IN ());
SELECT ALL vt1.c0, rt0.c0, rt0.c4 FROM t1, rt0, vt1 GROUP BY vt1.c0, rt0.c0, rt0.c4;
SELECT ALL vt1.c0, rt0.c0, rt0.c4 FROM t1, rt0, vt1 WHERE (rt0.c0) GROUP BY vt1.c0, rt0.c0, rt0.c4 UNION SELECT ALL vt1.c0, rt0.c0, rt0.c4 FROM t1, rt0, vt1 WHERE ((NOT (rt0.c0))) GROUP BY vt1.c0, rt0.c0, rt0.c4 UNION SELECT ALL vt1.c0, rt0.c0, rt0.c4 FROM t1, rt0, vt1 WHERE (((rt0.c0) ISNULL)) GROUP BY vt1.c0, rt0.c0, rt0.c4;
SELECT ALL vt1.c0, rt0.c0, rt0.c4 FROM t1, rt0, vt1 GROUP BY vt1.c0, rt0.c0, rt0.c4;
SELECT ALL rt0.c1, vt0.c2, vt0.c0, rt0.c2, vt0.c1, vt1.c0, rt0.c3, rt0.c0 FROM vt1, vt0, rt0 GROUP BY rt0.c1, vt0.c2, vt0.c0, rt0.c2, vt0.c1, vt1.c0, rt0.c3, rt0.c0;
SELECT ALL rt0.c1, vt0.c2, vt0.c0, rt0.c2, vt0.c1, vt1.c0, rt0.c3, rt0.c0 FROM vt1, vt0, rt0 GROUP BY rt0.c1, vt0.c2, vt0.c0, rt0.c2, vt0.c1, vt1.c0, rt0.c3, rt0.c0 HAVING ((x'a0ee')+(COUNT(*))) UNION ALL SELECT ALL rt0.c1, vt0.c2, vt0.c0, rt0.c2, vt0.c1, vt1.c0, rt0.c3, rt0.c0 FROM vt1, vt0, rt0 GROUP BY rt0.c1, vt0.c2, vt0.c0, rt0.c2, vt0.c1, vt1.c0, rt0.c3, rt0.c0 HAVING (NOT (((x'a0ee')+(COUNT(*))))) UNION ALL SELECT rt0.c1, vt0.c2, vt0.c0, rt0.c2, vt0.c1, vt1.c0, rt0.c3, rt0.c0 FROM vt1 NOT INDEXED, vt0, rt0 GROUP BY rt0.c1, vt0.c2, vt0.c0, rt0.c2, vt0.c1, vt1.c0, rt0.c3, rt0.c0 HAVING ((((x'a0ee')+(COUNT(*)))) ISNULL);
SELECT ALL rt0.c1, vt0.c2, vt0.c0, rt0.c2, vt0.c1, vt1.c0, rt0.c3, rt0.c0 FROM vt1, vt0, rt0 GROUP BY rt0.c1, vt0.c2, vt0.c0, rt0.c2, vt0.c1, vt1.c0, rt0.c3, rt0.c0;
SELECT ALL rt0.c1, vt0.c2, vt0.c0, rt0.c2, vt0.c1, vt1.c0, rt0.c3, rt0.c0 FROM vt1, vt0, rt0 GROUP BY rt0.c1, vt0.c2, vt0.c0, rt0.c2, vt0.c1, vt1.c0, rt0.c3, rt0.c0 HAVING ((x'a0ee')+(COUNT(*))) UNION ALL SELECT ALL rt0.c1, vt0.c2, vt0.c0, rt0.c2, vt0.c1, vt1.c0, rt0.c3, rt0.c0 FROM vt1, vt0, rt0 GROUP BY rt0.c1, vt0.c2, vt0.c0, rt0.c2, vt0.c1, vt1.c0, rt0.c3, rt0.c0 HAVING (NOT (((x'a0ee')+(COUNT(*))))) UNION ALL SELECT rt0.c1, vt0.c2, vt0.c0, rt0.c2, vt0.c1, vt1.c0, rt0.c3, rt0.c0 FROM vt1 NOT INDEXED, vt0, rt0 GROUP BY rt0.c1, vt0.c2, vt0.c0, rt0.c2, vt0.c1, vt1.c0, rt0.c3, rt0.c0 HAVING ((((x'a0ee')+(COUNT(*)))) ISNULL);
SELECT ALL rt0.c1, vt0.c2, vt0.c0, rt0.c2, vt0.c1, vt1.c0, rt0.c3, rt0.c0 FROM vt1, vt0, rt0 GROUP BY rt0.c1, vt0.c2, vt0.c0, rt0.c2, vt0.c1, vt1.c0, rt0.c3, rt0.c0;
SELECT rt0.c4, rt0.c0, rt0.c1, t1.c51, rt0.c3, rt0.c2, vt0.c2, vt0.c1 FROM t1 NOT INDEXED, rt0 NATURAL JOIN vt0;
SELECT rt0.c4, rt0.c0, rt0.c1, t1.c51, rt0.c3, rt0.c2, vt0.c2, vt0.c1 FROM t1, rt0 NATURAL JOIN vt0 WHERE (((vt0.c0 COLLATE NOCASE) IS TRUE)) UNION ALL SELECT rt0.c4, rt0.c0, rt0.c1, t1.c51, rt0.c3, rt0.c2, vt0.c2, vt0.c1 FROM t1, rt0 NATURAL JOIN vt0 WHERE ((NOT (((vt0.c0 COLLATE NOCASE) IS TRUE)))) UNION ALL SELECT ALL rt0.c4, rt0.c0, rt0.c1, t1.c51, rt0.c3, rt0.c2, vt0.c2, vt0.c1 FROM t1, rt0 NATURAL JOIN vt0 WHERE (((((vt0.c0 COLLATE NOCASE) IS TRUE)) ISNULL));
SELECT rt0.c4, rt0.c0, rt0.c1, t1.c51, rt0.c3, rt0.c2, vt0.c2, vt0.c1 FROM t1 NOT INDEXED, rt0 NATURAL JOIN vt0;
SELECT DISTINCT vt0.c0, vt0.c2 FROM vt0, vt1;
SELECT DISTINCT vt0.c0, vt0.c2 FROM vt0, vt1 WHERE ((((vt0.c1 IN ()))&(-1308251101))) UNION SELECT DISTINCT vt0.c0, vt0.c2 FROM vt0, vt1 WHERE ((NOT ((((vt0.c1 IN ()))&(-1308251101))))) UNION SELECT DISTINCT vt0.c0, vt0.c2 FROM vt0, vt1 WHERE ((((((vt0.c1 IN ()))&(-1308251101))) ISNULL));
SELECT DISTINCT vt0.c0, vt0.c2 FROM vt0, vt1;
SELECT rt0.c4 FROM t1, rt0 NATURAL JOIN vt1 GROUP BY rt0.c4;
SELECT rt0.c4 FROM t1, rt0 NATURAL JOIN vt1 WHERE (0.8678559419798283) GROUP BY rt0.c4 UNION SELECT rt0.c4 FROM t1, rt0 NATURAL JOIN vt1 WHERE ((NOT (0.8678559419798283))) GROUP BY rt0.c4 UNION SELECT ALL rt0.c4 FROM t1, rt0 NATURAL JOIN vt1 WHERE (((0.8678559419798283) ISNULL)) GROUP BY rt0.c4;
SELECT rt0.c4 FROM t1, rt0 NATURAL JOIN vt1 GROUP BY rt0.c4;
SELECT t1.c51 FROM t1 GROUP BY t1.c51;
SELECT t1.c51 FROM t1 GROUP BY t1.c51 HAVING GROUP_CONCAT(COUNT(t1.c51)) UNION ALL SELECT t1.c51 FROM t1 GROUP BY t1.c51 HAVING (NOT (GROUP_CONCAT(COUNT(t1.c51)))) UNION ALL SELECT t1.c51 FROM t1 GROUP BY t1.c51 HAVING ((GROUP_CONCAT(COUNT(t1.c51))) ISNULL);
SELECT ALL vt0.c1 FROM vt0;
SELECT ALL vt0.c1 FROM vt0 WHERE (((x'')||((((vt0.c1)) NOT BETWEEN ((vt0.c2)) AND ((vt0.c0)))))) UNION ALL SELECT vt0.c1 FROM vt0 WHERE ((NOT (((x'')||((((vt0.c1)) NOT BETWEEN ((vt0.c2)) AND ((vt0.c0)))))))) UNION ALL SELECT ALL vt0.c1 FROM vt0 WHERE (((((x'')||((((vt0.c1)) NOT BETWEEN ((vt0.c2)) AND ((vt0.c0)))))) ISNULL));
SELECT ALL vt0.c1 FROM vt0;
SELECT DISTINCT rt0.c2, t1.c51, rt0.c0, vt0.c0, vt0.c1, rt0.c3, vt0.c2, rt0.c1 FROM t1, vt0, rt0;
SELECT DISTINCT rt0.c2, t1.c51, rt0.c0, vt0.c0, vt0.c1, rt0.c3, vt0.c2, rt0.c1 FROM t1, vt0, rt0 WHERE (CAST(LTRIM(rt0.c3) AS REAL)) UNION SELECT DISTINCT rt0.c2, t1.c51, rt0.c0, vt0.c0, vt0.c1, rt0.c3, vt0.c2, rt0.c1 FROM t1, vt0, rt0 WHERE ((NOT (CAST(LTRIM(rt0.c3) AS REAL)))) UNION SELECT DISTINCT rt0.c2, t1.c51, rt0.c0, vt0.c0, vt0.c1, rt0.c3, vt0.c2, rt0.c1 FROM t1, vt0, rt0 WHERE (((CAST(LTRIM(rt0.c3) AS REAL)) ISNULL));
SELECT DISTINCT rt0.c2, t1.c51, rt0.c0, vt0.c0, vt0.c1, rt0.c3, vt0.c2, rt0.c1 FROM t1, vt0, rt0;
SELECT vt0.c0, rt0.c1, rt0.c0, rt0.c3, vt0.c1, vt1.c0, t1.c51, rt0.c4, vt0.c2 FROM t1, vt0, rt0, vt1 GROUP BY vt0.c0, rt0.c1, rt0.c0, rt0.c3, vt0.c1, vt1.c0, t1.c51, rt0.c4, vt0.c2;
SELECT ALL vt0.c0, rt0.c1, rt0.c0, rt0.c3, vt0.c1, vt1.c0, t1.c51, rt0.c4, vt0.c2 FROM t1, vt0, rt0, vt1 WHERE ((((vt0.c1, 0.9355683187186967, vt0.c1)) NOT BETWEEN ((CAST(vt1.c0 AS BLOB), (((rt0.c4)) BETWEEN ((rt0.c0)) AND ((rt0.c0))), ROUND(vt0.c0, vt0.c2))) AND ((((t1.c51) NOT BETWEEN (vt1.c0) AND (vt0.c0)), ((rt0.c0)>>('1590448159')), ((((rt0.c0)OR(rt0.c2)))OR(rt0.c2)))))) GROUP BY vt0.c0, rt0.c1, rt0.c0, rt0.c3, vt0.c1, vt1.c0, t1.c51, rt0.c4, vt0.c2 UNION SELECT vt0.c0, rt0.c1, rt0.c0, rt0.c3, vt0.c1, vt1.c0, t1.c51, rt0.c4, vt0.c2 FROM t1, vt0 NOT INDEXED, rt0, vt1 WHERE ((NOT ((((vt0.c1, 0.9355683187186967, vt0.c1)) NOT BETWEEN ((CAST(vt1.c0 AS BLOB), (((rt0.c4)) BETWEEN ((rt0.c0)) AND ((rt0.c0))), ROUND(vt0.c0, vt0.c2))) AND ((((t1.c51) NOT BETWEEN (vt1.c0) AND (vt0.c0)), ((rt0.c0)>>('1590448159')), ((((rt0.c0)OR(rt0.c2)))OR(rt0.c2)))))))) GROUP BY vt0.c0, rt0.c1, rt0.c0, rt0.c3, vt0.c1, vt1.c0, t1.c51, rt0.c4, vt0.c2 UNION SELECT vt0.c0, rt0.c1, rt0.c0, rt0.c3, vt0.c1, vt1.c0, t1.c51, rt0.c4, vt0.c2 FROM t1, vt0, rt0, vt1 WHERE ((((((vt0.c1, 0.9355683187186967, vt0.c1)) NOT BETWEEN ((CAST(vt1.c0 AS BLOB), (((rt0.c4)) BETWEEN ((rt0.c0)) AND ((rt0.c0))), ROUND(vt0.c0, vt0.c2))) AND ((((t1.c51) NOT BETWEEN (vt1.c0) AND (vt0.c0)), ((rt0.c0)>>('1590448159')), ((((rt0.c0)OR(rt0.c2)))OR(rt0.c2)))))) ISNULL)) GROUP BY vt0.c0, rt0.c1, rt0.c0, rt0.c3, vt0.c1, vt1.c0, t1.c51, rt0.c4, vt0.c2;
SELECT vt0.c0, rt0.c1, rt0.c0, rt0.c3, vt0.c1, vt1.c0, t1.c51, rt0.c4, vt0.c2 FROM t1, vt0, rt0, vt1 GROUP BY vt0.c0, rt0.c1, rt0.c0, rt0.c3, vt0.c1, vt1.c0, t1.c51, rt0.c4, vt0.c2;
SELECT rt0.c0, vt0.c2, vt0.c1, rt0.c2 FROM vt1, vt0, rt0, t1 GROUP BY rt0.c0, vt0.c2, vt0.c1, rt0.c2;
SELECT rt0.c0, vt0.c2, vt0.c1, rt0.c2 FROM vt1, vt0, rt0, t1 GROUP BY rt0.c0, vt0.c2, vt0.c1, rt0.c2 HAVING ((CAST(COUNT(*) AS TEXT))IS NOT(((MIN(MAX(vt0.c1))) NOT BETWEEN (TOTAL(MIN(TOTAL(TOTAL(rt0.c0))))) AND (TOTAL(NULL))))) UNION ALL SELECT ALL rt0.c0, vt0.c2, vt0.c1, rt0.c2 FROM vt1, vt0, rt0, t1 GROUP BY rt0.c0, vt0.c2, vt0.c1, rt0.c2 HAVING (NOT (((CAST(COUNT(*) AS TEXT))IS NOT(((MIN(MAX(vt0.c1))) NOT BETWEEN (TOTAL(MIN(TOTAL(TOTAL(rt0.c0))))) AND (TOTAL(NULL))))))) UNION ALL SELECT ALL rt0.c0, vt0.c2, vt0.c1, rt0.c2 FROM vt1, vt0, rt0, t1 GROUP BY rt0.c0, vt0.c2, vt0.c1, rt0.c2 HAVING ((((CAST(COUNT(*) AS TEXT))IS NOT(((MIN(MAX(vt0.c1))) NOT BETWEEN (TOTAL(MIN(TOTAL(TOTAL(rt0.c0))))) AND (TOTAL(NULL)))))) ISNULL);
SELECT ALL vt0.c2, vt0.c0 FROM vt0;
SELECT ALL vt0.c2, vt0.c0 FROM vt0 WHERE ((+ (((vt0.c1)<(vt0.c1))))) UNION ALL SELECT ALL vt0.c2, vt0.c0 FROM vt0 WHERE ((NOT ((+ (((vt0.c1)<(vt0.c1))))))) UNION ALL SELECT vt0.c2, vt0.c0 FROM vt0 WHERE ((((+ (((vt0.c1)<(vt0.c1))))) ISNULL));
SELECT ALL vt0.c2, vt0.c0 FROM vt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((rt0.c1 COLLATE BINARY)*(((rt0.c1) IS TRUE)))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((rt0.c1 COLLATE BINARY)*(((rt0.c1) IS TRUE)))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((rt0.c1 COLLATE BINARY)*(((rt0.c1) IS TRUE)))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c3, vt0.c1, rt0.c0, vt0.c0, vt0.c2, rt0.c2 FROM vt0, vt1, t1, rt0 GROUP BY rt0.c3, vt0.c1, rt0.c0, vt0.c0, vt0.c2, rt0.c2;
SELECT rt0.c3, vt0.c1, rt0.c0, vt0.c0, vt0.c2, rt0.c2 FROM vt0, vt1, t1, rt0 WHERE (CASE ((rt0.c1)>=(t1.c51))  WHEN (+ (vt1.c0)) THEN ((vt0.c1)/(x'')) ELSE rt0.c1 END) GROUP BY rt0.c3, vt0.c1, rt0.c0, vt0.c0, vt0.c2, rt0.c2 UNION SELECT ALL rt0.c3, vt0.c1, rt0.c0, vt0.c0, vt0.c2, rt0.c2 FROM vt0, vt1, t1, rt0 WHERE ((NOT (CASE ((rt0.c1)>=(t1.c51))  WHEN (+ (vt1.c0)) THEN ((vt0.c1)/(x'')) ELSE rt0.c1 END))) GROUP BY rt0.c3, vt0.c1, rt0.c0, vt0.c0, vt0.c2, rt0.c2 UNION SELECT rt0.c3, vt0.c1, rt0.c0, vt0.c0, vt0.c2, rt0.c2 FROM vt0, vt1, t1, rt0 WHERE (((CASE ((rt0.c1)>=(t1.c51))  WHEN (+ (vt1.c0)) THEN ((vt0.c1)/(x'')) ELSE rt0.c1 END) ISNULL)) GROUP BY rt0.c3, vt0.c1, rt0.c0, vt0.c0, vt0.c2, rt0.c2;
SELECT ALL rt0.c3, vt0.c1, rt0.c0, vt0.c0, vt0.c2, rt0.c2 FROM vt0, vt1, t1, rt0 GROUP BY rt0.c3, vt0.c1, rt0.c0, vt0.c0, vt0.c2, rt0.c2;
SELECT t1.c51 FROM t1 GROUP BY t1.c51;
SELECT ALL t1.c51 FROM t1 GROUP BY t1.c51 HAVING MAX((((t1.c51, TOTAL(COUNT(*)), t1.c51))>((t1.c51, SUM(t1.c51), t1.c51)))) UNION ALL SELECT t1.c51 FROM t1 GROUP BY t1.c51 HAVING (NOT (MAX((((t1.c51, TOTAL(COUNT(*)), t1.c51))>((t1.c51, SUM(t1.c51), t1.c51)))))) UNION ALL SELECT ALL t1.c51 FROM t1 GROUP BY t1.c51 HAVING ((MAX((((t1.c51, TOTAL(COUNT(*)), t1.c51))>((t1.c51, SUM(t1.c51), t1.c51))))) ISNULL);
SELECT * FROM rt0 CROSS JOIN vt0 ON (CAST(vt0.c0 AS NUMERIC) IN ()) RIGHT OUTER JOIN vt1 ON CASE WHEN '552859601' THEN (((vt0.c2)) BETWEEN ((vt1.c0)) AND ((rt0.c0))) END;
SELECT * FROM rt0 CROSS JOIN vt0 ON (CAST(vt0.c0 AS NUMERIC) IN ()) RIGHT OUTER JOIN vt1 ON CASE WHEN '552859601' THEN (((vt0.c2)) BETWEEN ((vt1.c0)) AND ((rt0.c0))) END WHERE (CASE WHEN ((vt1.c0)AND(vt1.c0)) THEN ((vt1.c0)IS(rt0.c4)) END) UNION ALL SELECT * FROM rt0 CROSS JOIN vt0 ON (CAST(vt0.c0 AS NUMERIC) IN ()) RIGHT OUTER JOIN vt1 ON CASE WHEN '552859601' THEN (((vt0.c2)) BETWEEN ((vt1.c0)) AND ((rt0.c0))) END WHERE ((NOT (CASE WHEN ((vt1.c0)AND(vt1.c0)) THEN ((vt1.c0)IS(rt0.c4)) END))) UNION ALL SELECT * FROM rt0 CROSS JOIN vt0 ON (CAST(vt0.c0 AS NUMERIC) IN ()) RIGHT OUTER JOIN vt1 ON CASE WHEN '552859601' THEN (((vt0.c2)) BETWEEN ((vt1.c0)) AND ((rt0.c0))) END WHERE (((CASE WHEN ((vt1.c0)AND(vt1.c0)) THEN ((vt1.c0)IS(rt0.c4)) END) ISNULL));
SELECT * FROM rt0 CROSS JOIN vt0 ON (CAST(vt0.c0 AS NUMERIC) IN ()) RIGHT OUTER JOIN vt1 ON CASE WHEN '552859601' THEN (((vt0.c2)) BETWEEN ((vt1.c0)) AND ((rt0.c0))) END;
SELECT DISTINCT t1.c51, vt1.c0, rt0.c4, vt0.c2, rt0.c1 FROM vt0, vt1, t1, rt0;
SELECT DISTINCT t1.c51, vt1.c0, rt0.c4, vt0.c2, rt0.c1 FROM vt0, vt1, t1, rt0 WHERE (((((vt1.c0)AND(((rt0.c0)OR(t1.c51)))))OR('-1151109340' COLLATE NOCASE))) UNION SELECT DISTINCT t1.c51, vt1.c0, rt0.c4, vt0.c2, rt0.c1 FROM vt0, vt1, t1, rt0 WHERE ((NOT (((((vt1.c0)AND(((rt0.c0)OR(t1.c51)))))OR('-1151109340' COLLATE NOCASE))))) UNION SELECT DISTINCT t1.c51, vt1.c0, rt0.c4, vt0.c2, rt0.c1 FROM vt0, vt1, t1, rt0 WHERE (((((((vt1.c0)AND(((rt0.c0)OR(t1.c51)))))OR('-1151109340' COLLATE NOCASE))) ISNULL));
SELECT DISTINCT t1.c51, vt1.c0, rt0.c4, vt0.c2, rt0.c1 FROM vt0, vt1, t1, rt0;
SELECT rt0.c2, rt0.c4 FROM rt0, vt0 GROUP BY rt0.c2, rt0.c4;
SELECT ALL rt0.c2, rt0.c4 FROM rt0, vt0 WHERE (((((rt0.c1)AND(((vt0.c2) NOT NULL))))OR(CASE WHEN vt0.c1 THEN vt0.c1 ELSE rt0.c0 END))) GROUP BY rt0.c2, rt0.c4 UNION SELECT rt0.c2, rt0.c4 FROM rt0, vt0 WHERE ((NOT (((((rt0.c1)AND(((vt0.c2) NOT NULL))))OR(CASE WHEN vt0.c1 THEN vt0.c1 ELSE rt0.c0 END))))) GROUP BY rt0.c2, rt0.c4 UNION SELECT rt0.c2, rt0.c4 FROM rt0, vt0 WHERE (((((((rt0.c1)AND(((vt0.c2) NOT NULL))))OR(CASE WHEN vt0.c1 THEN vt0.c1 ELSE rt0.c0 END))) ISNULL)) GROUP BY rt0.c2, rt0.c4;
SELECT rt0.c2, rt0.c4 FROM rt0, vt0 GROUP BY rt0.c2, rt0.c4;
SELECT ALL rt0.c3, rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c3, rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c3, rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c3, rt0.c2, rt0.c0, rt0.c1 HAVING (CASE WHEN COUNT(rt0.c3) THEN AVG(AVG(rt0.c0)) ELSE rt0.c4 END IN ()) UNION ALL SELECT ALL rt0.c3, rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c3, rt0.c2, rt0.c0, rt0.c1 HAVING (NOT ((CASE WHEN COUNT(rt0.c3) THEN AVG(AVG(rt0.c0)) ELSE rt0.c4 END IN ()))) UNION ALL SELECT rt0.c3, rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c3, rt0.c2, rt0.c0, rt0.c1 HAVING (((CASE WHEN COUNT(rt0.c3) THEN AVG(AVG(rt0.c0)) ELSE rt0.c4 END IN ())) ISNULL);
SELECT ALL rt0.c3, rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c3, rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c3, rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c3, rt0.c2, rt0.c0, rt0.c1 HAVING (CASE WHEN COUNT(rt0.c3) THEN AVG(AVG(rt0.c0)) ELSE rt0.c4 END IN ()) UNION ALL SELECT ALL rt0.c3, rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c3, rt0.c2, rt0.c0, rt0.c1 HAVING (NOT ((CASE WHEN COUNT(rt0.c3) THEN AVG(AVG(rt0.c0)) ELSE rt0.c4 END IN ()))) UNION ALL SELECT rt0.c3, rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c3, rt0.c2, rt0.c0, rt0.c1 HAVING (((CASE WHEN COUNT(rt0.c3) THEN AVG(AVG(rt0.c0)) ELSE rt0.c4 END IN ())) ISNULL);
SELECT ALL rt0.c3, rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c3, rt0.c2, rt0.c0, rt0.c1;
SELECT ALL vt0.c0, rt0.c0, rt0.c4, t1.c51, rt0.c3, vt1.c0, rt0.c2 FROM vt1, t1, vt0, rt0;
SELECT vt0.c0, rt0.c0, rt0.c4, t1.c51, rt0.c3, vt1.c0, rt0.c2 FROM vt1, t1, vt0, rt0 WHERE (((((vt1.c0) IS TRUE)) NOT BETWEEN (rt0.c3) AND (x'2409'))) UNION ALL SELECT vt0.c0, rt0.c0, rt0.c4, t1.c51, rt0.c3, vt1.c0, rt0.c2 FROM vt1, t1, vt0, rt0 WHERE ((NOT (((((vt1.c0) IS TRUE)) NOT BETWEEN (rt0.c3) AND (x'2409'))))) UNION ALL SELECT vt0.c0, rt0.c0, rt0.c4, t1.c51, rt0.c3, vt1.c0, rt0.c2 FROM vt1, t1, vt0, rt0 WHERE (((((((vt1.c0) IS TRUE)) NOT BETWEEN (rt0.c3) AND (x'2409'))) ISNULL));
SELECT ALL vt0.c0, rt0.c0, rt0.c4, t1.c51, rt0.c3, vt1.c0, rt0.c2 FROM vt1, t1, vt0, rt0;
SELECT DISTINCT * FROM vt1, rt0, vt0, t1;
SELECT DISTINCT * FROM vt1, rt0, vt0, t1 WHERE (0.11782459749603724) UNION SELECT DISTINCT * FROM vt1, rt0, vt0, t1 WHERE ((NOT (0.11782459749603724))) UNION SELECT DISTINCT * FROM vt1, rt0, vt0, t1 WHERE (((0.11782459749603724) ISNULL));
SELECT DISTINCT * FROM vt1, rt0, vt0, t1;
SELECT vt0.c0, vt0.c1, vt0.c2, rt0.c0, rt0.c1 FROM vt1, vt0, rt0, t1 GROUP BY vt0.c0, vt0.c1, vt0.c2, rt0.c0, rt0.c1;
SELECT ALL vt0.c0, vt0.c1, vt0.c2, rt0.c0, rt0.c1 FROM vt1, vt0, rt0, t1 WHERE (((vt1.c0) NOTNULL)) GROUP BY vt0.c0, vt0.c1, vt0.c2, rt0.c0, rt0.c1 UNION SELECT vt0.c0, vt0.c1, vt0.c2, rt0.c0, rt0.c1 FROM vt1, vt0, rt0, t1 WHERE ((NOT (((vt1.c0) NOTNULL)))) GROUP BY vt0.c0, vt0.c1, vt0.c2, rt0.c0, rt0.c1 UNION SELECT vt0.c0, vt0.c1, vt0.c2, rt0.c0, rt0.c1 FROM vt1, vt0, rt0, t1 WHERE (((((vt1.c0) NOTNULL)) ISNULL)) GROUP BY vt0.c0, vt0.c1, vt0.c2, rt0.c0, rt0.c1;
SELECT vt0.c0, vt0.c1, vt0.c2, rt0.c0, rt0.c1 FROM vt1, vt0, rt0, t1 GROUP BY vt0.c0, vt0.c1, vt0.c2, rt0.c0, rt0.c1;
SELECT rt0.c0 FROM vt0, vt1, t1, rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM vt0, vt1, t1, rt0 GROUP BY rt0.c0 HAVING TOTAL(AVG(SUM(MAX(TOTAL(GROUP_CONCAT('1590448159')))))) UNION ALL SELECT rt0.c0 FROM vt0, vt1, t1, rt0 GROUP BY rt0.c0 HAVING (NOT (TOTAL(AVG(SUM(MAX(TOTAL(GROUP_CONCAT('1590448159')))))))) UNION ALL SELECT rt0.c0 FROM vt0, vt1, t1, rt0 GROUP BY rt0.c0 HAVING ((TOTAL(AVG(SUM(MAX(TOTAL(GROUP_CONCAT('1590448159'))))))) ISNULL);
SELECT rt0.c3 FROM rt0, t1;
SELECT rt0.c3 FROM rt0, t1 WHERE (((rt0.c4 COLLATE NOCASE)LIKE(QUOTE(rt0.c1)))) UNION ALL SELECT ALL rt0.c3 FROM rt0, t1 WHERE ((NOT (((rt0.c4 COLLATE NOCASE)LIKE(QUOTE(rt0.c1)))))) UNION ALL SELECT rt0.c3 FROM rt0, t1 WHERE (((((rt0.c4 COLLATE NOCASE)LIKE(QUOTE(rt0.c1)))) ISNULL));
SELECT rt0.c3 FROM rt0, t1;
SELECT DISTINCT vt0.c2, t1.c51, rt0.c4, rt0.c2, vt0.c1, rt0.c1, rt0.c0, vt0.c0, rt0.c3, vt1.c0 FROM vt0, t1, rt0, vt1;
SELECT DISTINCT vt0.c2, t1.c51, rt0.c4, rt0.c2, vt0.c1, rt0.c1, rt0.c0, vt0.c0, rt0.c3, vt1.c0 FROM vt0, t1, rt0, vt1 WHERE (rt0.c4) UNION SELECT DISTINCT vt0.c2, t1.c51, rt0.c4, rt0.c2, vt0.c1, rt0.c1, rt0.c0, vt0.c0, rt0.c3, vt1.c0 FROM vt0, t1, rt0, vt1 WHERE ((NOT (rt0.c4))) UNION SELECT DISTINCT vt0.c2, t1.c51, rt0.c4, rt0.c2, vt0.c1, rt0.c1, rt0.c0, vt0.c0, rt0.c3, vt1.c0 FROM vt0, t1, rt0 NOT INDEXED, vt1 WHERE (((rt0.c4) ISNULL));
SELECT DISTINCT vt0.c2, t1.c51, rt0.c4, rt0.c2, vt0.c1, rt0.c1, rt0.c0, vt0.c0, rt0.c3, vt1.c0 FROM vt0, t1, rt0, vt1;
SELECT vt0.c1, rt0.c4, rt0.c2 FROM t1, vt0, vt1, rt0 GROUP BY vt0.c1, rt0.c4, rt0.c2;
SELECT vt0.c1, rt0.c4, rt0.c2 FROM t1, vt0, vt1, rt0 WHERE ((((CASE WHEN NULL THEN rt0.c0 WHEN vt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN vt0.c1 ELSE rt0.c1 END))<((((((x'73e6')OR(0xffffffff92ee12f6)))AND(x'')))))) GROUP BY vt0.c1, rt0.c4, rt0.c2 UNION SELECT vt0.c1, rt0.c4, rt0.c2 FROM t1, vt0, vt1, rt0 WHERE ((NOT ((((CASE WHEN NULL THEN rt0.c0 WHEN vt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN vt0.c1 ELSE rt0.c1 END))<((((((x'73e6')OR(0Xffffffff92ee12f6)))AND(x'')))))))) GROUP BY vt0.c1, rt0.c4, rt0.c2 UNION SELECT vt0.c1, rt0.c4, rt0.c2 FROM t1, vt0, vt1, rt0 WHERE ((((((CASE WHEN NULL THEN rt0.c0 WHEN vt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN vt0.c1 ELSE rt0.c1 END))<((((((x'73e6')OR(0xffffffff92ee12f6)))AND(x'')))))) ISNULL)) GROUP BY vt0.c1, rt0.c4, rt0.c2;
SELECT vt0.c1, rt0.c4, rt0.c2 FROM t1, vt0, vt1, rt0 GROUP BY vt0.c1, rt0.c4, rt0.c2;
SELECT ALL t1.c51 FROM t1 GROUP BY t1.c51;
SELECT ALL t1.c51 FROM t1 GROUP BY t1.c51 HAVING (~ ((((t1.c51))==((t1.c51))))) UNION ALL SELECT ALL t1.c51 FROM t1 GROUP BY t1.c51 HAVING (NOT ((~ ((((t1.c51))==((t1.c51))))))) UNION ALL SELECT ALL t1.c51 FROM t1 GROUP BY t1.c51 HAVING (((~ ((((t1.c51))==((t1.c51)))))) ISNULL);
SELECT ALL t1.c51 FROM t1 GROUP BY t1.c51;
SELECT ALL t1.c51 FROM t1 GROUP BY t1.c51 HAVING (~ ((((t1.c51))==((t1.c51))))) UNION ALL SELECT ALL t1.c51 FROM t1 GROUP BY t1.c51 HAVING (NOT ((~ ((((t1.c51))==((t1.c51))))))) UNION ALL SELECT ALL t1.c51 FROM t1 GROUP BY t1.c51 HAVING (((~ ((((t1.c51))==((t1.c51)))))) ISNULL);
SELECT ALL t1.c51 FROM t1 GROUP BY t1.c51;
SELECT t1.c51 FROM vt1 INNER JOIN t1 ON ((((((((t1.c51)AND(vt1.c0)))OR(t1.c51)))OR(t1.c51 COLLATE BINARY)))AND(((t1.c51) IS FALSE)));
SELECT t1.c51 FROM vt1 INNER JOIN t1 ON ((((((((t1.c51)AND(vt1.c0)))OR(t1.c51)))OR(t1.c51 COLLATE BINARY)))AND(((t1.c51) IS FALSE))) WHERE ((((vt1.c0, x'', t1.c51)) NOT BETWEEN ((((t1.c51)>=(vt1.c0)), UNLIKELY(DISTINCT t1.c51), CAST(t1.c51 AS INTEGER))) AND ((((t1.c51)!=(t1.c51)), CASE WHEN t1.c51 THEN t1.c51 WHEN t1.c51 THEN t1.c51 WHEN vt1.c0 THEN t1.c51 ELSE NULL END, ((vt1.c0) BETWEEN (t1.c51) AND (vt1.c0)))))) UNION ALL SELECT t1.c51 FROM vt1 INNER JOIN t1 ON ((((((((t1.c51)AND(vt1.c0)))OR(t1.c51)))OR(t1.c51 COLLATE BINARY)))AND(((t1.c51) IS FALSE))) WHERE ((NOT ((((vt1.c0, x'', t1.c51)) NOT BETWEEN ((((t1.c51)>=(vt1.c0)), UNLIKELY(DISTINCT t1.c51), CAST(t1.c51 AS INTEGER))) AND ((((t1.c51)!=(t1.c51)), CASE WHEN t1.c51 THEN t1.c51 WHEN t1.c51 THEN t1.c51 WHEN vt1.c0 THEN t1.c51 ELSE NULL END, ((vt1.c0) BETWEEN (t1.c51) AND (vt1.c0)))))))) UNION ALL SELECT ALL t1.c51 FROM vt1 INNER JOIN t1 ON ((((((((t1.c51)AND(vt1.c0)))OR(t1.c51)))OR(t1.c51 COLLATE BINARY)))AND(((t1.c51) IS FALSE))) WHERE ((((((vt1.c0, x'', t1.c51)) NOT BETWEEN ((((t1.c51)>=(vt1.c0)), UNLIKELY(DISTINCT t1.c51), CAST(t1.c51 AS INTEGER))) AND ((((t1.c51)!=(t1.c51)), CASE WHEN t1.c51 THEN t1.c51 WHEN t1.c51 THEN t1.c51 WHEN vt1.c0 THEN t1.c51 ELSE NULL END, ((vt1.c0) BETWEEN (t1.c51) AND (vt1.c0)))))) ISNULL));
SELECT t1.c51 FROM vt1 INNER JOIN t1 ON ((((((((t1.c51)AND(vt1.c0)))OR(t1.c51)))OR(t1.c51 COLLATE BINARY)))AND(((t1.c51) IS FALSE)));
SELECT DISTINCT * FROM vt0, vt1;
SELECT DISTINCT * FROM vt0, vt1 WHERE (CASE (((vt0.c2))<((vt0.c2)))  WHEN ((vt1.c0) IS FALSE) THEN TRIM(DISTINCT vt0.c1, vt1.c0) ELSE (~ (vt0.c1)) END) UNION SELECT DISTINCT * FROM vt0, vt1 WHERE ((NOT (CASE (((vt0.c2))<((vt0.c2)))  WHEN ((vt1.c0) IS FALSE) THEN TRIM(DISTINCT vt0.c1, vt1.c0) ELSE (~ (vt0.c1)) END))) UNION SELECT DISTINCT * FROM vt0, vt1 WHERE (((CASE (((vt0.c2))<((vt0.c2)))  WHEN ((vt1.c0) IS FALSE) THEN TRIM(DISTINCT vt0.c1, vt1.c0) ELSE (~ (vt0.c1)) END) ISNULL));
SELECT DISTINCT * FROM vt0, vt1;
SELECT ALL t1.c51, vt1.c0, rt0.c3, rt0.c1 FROM rt0, vt1, vt0, t1 GROUP BY t1.c51, vt1.c0, rt0.c3, rt0.c1;
SELECT ALL t1.c51, vt1.c0, rt0.c3, rt0.c1 FROM rt0, vt1, vt0, t1 WHERE ((((MAX(x'e1a3', rt0.c4), ((((((((-1.06611857E8)AND(t1.c51)))AND(t1.c51)))OR(rt0.c0)))OR(vt1.c0)), (((vt0.c1)) BETWEEN ((rt0.c0)) AND ((vt1.c0)))))>=((rt0.c4 COLLATE NOCASE, CASE WHEN vt1.c0 THEN rt0.c2 WHEN rt0.c4 THEN vt0.c0 WHEN NULL THEN vt0.c1 END, (((rt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c1))))))) GROUP BY t1.c51, vt1.c0, rt0.c3, rt0.c1 UNION SELECT ALL t1.c51, vt1.c0, rt0.c3, rt0.c1 FROM rt0, vt1, vt0, t1 WHERE ((NOT ((((MAX(x'e1a3', rt0.c4), ((((((((-1.06611857E8)AND(t1.c51)))AND(t1.c51)))OR(rt0.c0)))OR(vt1.c0)), (((vt0.c1)) BETWEEN ((rt0.c0)) AND ((vt1.c0)))))>=((rt0.c4 COLLATE NOCASE, CASE WHEN vt1.c0 THEN rt0.c2 WHEN rt0.c4 THEN vt0.c0 WHEN NULL THEN vt0.c1 END, (((rt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c1))))))))) GROUP BY t1.c51, vt1.c0, rt0.c3, rt0.c1 UNION SELECT t1.c51, vt1.c0, rt0.c3, rt0.c1 FROM rt0, vt1, vt0, t1 WHERE ((((((MAX(x'e1a3', rt0.c4), ((((((((-1.06611857E8)AND(t1.c51)))AND(t1.c51)))OR(rt0.c0)))OR(vt1.c0)), (((vt0.c1)) BETWEEN ((rt0.c0)) AND ((vt1.c0)))))>=((rt0.c4 COLLATE NOCASE, CASE WHEN vt1.c0 THEN rt0.c2 WHEN rt0.c4 THEN vt0.c0 WHEN NULL THEN vt0.c1 END, (((rt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c1))))))) ISNULL)) GROUP BY t1.c51, vt1.c0, rt0.c3, rt0.c1;
SELECT ALL t1.c51, vt1.c0, rt0.c3, rt0.c1 FROM rt0, vt1, vt0, t1 GROUP BY t1.c51, vt1.c0, rt0.c3, rt0.c1;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING AVG(COUNT(vt1.c0)) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (AVG(COUNT(vt1.c0)))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((AVG(COUNT(vt1.c0))) ISNULL);
SELECT ALL t1.c51, vt0.c1, vt0.c0, vt0.c2 FROM vt0, t1;
SELECT t1.c51, vt0.c1, vt0.c0, vt0.c2 FROM vt0, t1 WHERE (CASE ABS(DISTINCT x'')  WHEN ((vt0.c2) BETWEEN (vt0.c1) AND (t1.c51)) THEN UNLIKELY(DISTINCT vt0.c0) ELSE 0.9237333449392597 END) UNION ALL SELECT t1.c51, vt0.c1, vt0.c0, vt0.c2 FROM vt0, t1 WHERE ((NOT (CASE ABS(DISTINCT x'')  WHEN ((vt0.c2) BETWEEN (vt0.c1) AND (t1.c51)) THEN UNLIKELY(DISTINCT vt0.c0) ELSE 0.9237333449392597 END))) UNION ALL SELECT ALL t1.c51, vt0.c1, vt0.c0, vt0.c2 FROM vt0, t1 WHERE (((CASE ABS(DISTINCT x'')  WHEN ((vt0.c2) BETWEEN (vt0.c1) AND (t1.c51)) THEN UNLIKELY(DISTINCT vt0.c0) ELSE 0.9237333449392597 END) ISNULL));
SELECT ALL t1.c51, vt0.c1, vt0.c0, vt0.c2 FROM vt0, t1;
SELECT DISTINCT * FROM vt0, t1, vt1, rt0;
SELECT DISTINCT * FROM vt0, t1, vt1, rt0 WHERE (NULLIF(DISTINCT vt0.c2, 'Scc')) UNION SELECT DISTINCT * FROM vt0, t1, vt1, rt0 WHERE ((NOT (NULLIF(DISTINCT vt0.c2, 'Scc')))) UNION SELECT DISTINCT * FROM vt0, t1, vt1, rt0 WHERE (((NULLIF(DISTINCT vt0.c2, 'Scc')) ISNULL));
SELECT DISTINCT * FROM vt0, t1, vt1, rt0;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt0 WHERE ((('1812195806') BETWEEN (((vt0.c0) BETWEEN (0.3662323245241613) AND (vt0.c0))) AND (((vt0.c0)*(vt0.c0))))) GROUP BY vt0.c1 UNION SELECT ALL vt0.c1 FROM vt0 WHERE ((NOT ((('1812195806') BETWEEN (((vt0.c0) BETWEEN (0.3662323245241613) AND (vt0.c0))) AND (((vt0.c0)*(vt0.c0))))))) GROUP BY vt0.c1 UNION SELECT ALL vt0.c1 FROM vt0 WHERE ((((('1812195806') BETWEEN (((vt0.c0) BETWEEN (0.3662323245241613) AND (vt0.c0))) AND (((vt0.c0)*(vt0.c0))))) ISNULL)) GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT rt0.c1, vt0.c0, t1.c51, vt0.c1, vt0.c2, vt1.c0, rt0.c3, rt0.c4, rt0.c0, rt0.c2 FROM vt0, rt0, vt1, t1 GROUP BY rt0.c1, vt0.c0, t1.c51, vt0.c1, vt0.c2, vt1.c0, rt0.c3, rt0.c4, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, vt0.c0, t1.c51, vt0.c1, vt0.c2, vt1.c0, rt0.c3, rt0.c4, rt0.c0, rt0.c2 FROM vt0, rt0, vt1, t1 GROUP BY rt0.c1, vt0.c0, t1.c51, vt0.c1, vt0.c2, vt1.c0, rt0.c3, rt0.c4, rt0.c0, rt0.c2 HAVING ((COUNT(vt0.c2)) NOT NULL) UNION ALL SELECT ALL rt0.c1, vt0.c0, t1.c51, vt0.c1, vt0.c2, vt1.c0, rt0.c3, rt0.c4, rt0.c0, rt0.c2 FROM vt0, rt0, vt1, t1 GROUP BY rt0.c1, vt0.c0, t1.c51, vt0.c1, vt0.c2, vt1.c0, rt0.c3, rt0.c4, rt0.c0, rt0.c2 HAVING (NOT (((COUNT(vt0.c2)) NOT NULL))) UNION ALL SELECT ALL rt0.c1, vt0.c0, t1.c51, vt0.c1, vt0.c2, vt1.c0, rt0.c3, rt0.c4, rt0.c0, rt0.c2 FROM vt0, rt0, vt1, t1 NOT INDEXED GROUP BY rt0.c1, vt0.c0, t1.c51, vt0.c1, vt0.c2, vt1.c0, rt0.c3, rt0.c4, rt0.c0, rt0.c2 HAVING ((((COUNT(vt0.c2)) NOT NULL)) ISNULL);
SELECT rt0.c1, vt0.c0, t1.c51, vt0.c1, vt0.c2, vt1.c0, rt0.c3, rt0.c4, rt0.c0, rt0.c2 FROM vt0, rt0, vt1, t1 GROUP BY rt0.c1, vt0.c0, t1.c51, vt0.c1, vt0.c2, vt1.c0, rt0.c3, rt0.c4, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, vt0.c0, t1.c51, vt0.c1, vt0.c2, vt1.c0, rt0.c3, rt0.c4, rt0.c0, rt0.c2 FROM vt0, rt0, vt1, t1 GROUP BY rt0.c1, vt0.c0, t1.c51, vt0.c1, vt0.c2, vt1.c0, rt0.c3, rt0.c4, rt0.c0, rt0.c2 HAVING ((COUNT(vt0.c2)) NOT NULL) UNION ALL SELECT ALL rt0.c1, vt0.c0, t1.c51, vt0.c1, vt0.c2, vt1.c0, rt0.c3, rt0.c4, rt0.c0, rt0.c2 FROM vt0, rt0, vt1, t1 GROUP BY rt0.c1, vt0.c0, t1.c51, vt0.c1, vt0.c2, vt1.c0, rt0.c3, rt0.c4, rt0.c0, rt0.c2 HAVING (NOT (((COUNT(vt0.c2)) NOT NULL))) UNION ALL SELECT ALL rt0.c1, vt0.c0, t1.c51, vt0.c1, vt0.c2, vt1.c0, rt0.c3, rt0.c4, rt0.c0, rt0.c2 FROM vt0, rt0, vt1, t1 NOT INDEXED GROUP BY rt0.c1, vt0.c0, t1.c51, vt0.c1, vt0.c2, vt1.c0, rt0.c3, rt0.c4, rt0.c0, rt0.c2 HAVING ((((COUNT(vt0.c2)) NOT NULL)) ISNULL);
SELECT rt0.c1, vt0.c0, t1.c51, vt0.c1, vt0.c2, vt1.c0, rt0.c3, rt0.c4, rt0.c0, rt0.c2 FROM vt0, rt0, vt1, t1 GROUP BY rt0.c1, vt0.c0, t1.c51, vt0.c1, vt0.c2, vt1.c0, rt0.c3, rt0.c4, rt0.c0, rt0.c2;
SELECT ALL rt0.c3, vt1.c0, rt0.c0, rt0.c2, rt0.c4, rt0.c1 FROM rt0, vt1;
SELECT ALL rt0.c3, vt1.c0, rt0.c0, rt0.c2, rt0.c4, rt0.c1 FROM rt0, vt1 WHERE (CAST(CAST(rt0.c2 AS REAL) AS INTEGER)) UNION ALL SELECT ALL rt0.c3, vt1.c0, rt0.c0, rt0.c2, rt0.c4, rt0.c1 FROM rt0, vt1 WHERE ((NOT (CAST(CAST(rt0.c2 AS REAL) AS INTEGER)))) UNION ALL SELECT rt0.c3, vt1.c0, rt0.c0, rt0.c2, rt0.c4, rt0.c1 FROM rt0, vt1 WHERE (((CAST(CAST(rt0.c2 AS REAL) AS INTEGER)) ISNULL));
SELECT ALL rt0.c3, vt1.c0, rt0.c0, rt0.c2, rt0.c4, rt0.c1 FROM rt0, vt1;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (CASE ((NULL)==(vt0.c2))  WHEN ((vt0.c1) ISNULL) THEN ((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1)) ELSE ((((((((vt0.c2)AND(vt0.c1)))AND(vt0.c2)))AND(vt0.c0)))AND(vt0.c2)) END) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (CASE ((NULL)==(vt0.c2))  WHEN ((vt0.c1) ISNULL) THEN ((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1)) ELSE ((((((((vt0.c2)AND(vt0.c1)))AND(vt0.c2)))AND(vt0.c0)))AND(vt0.c2)) END))) UNION SELECT DISTINCT * FROM vt0 WHERE (((CASE ((NULL)==(vt0.c2))  WHEN ((vt0.c1) ISNULL) THEN ((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1)) ELSE ((((((((vt0.c2)AND(vt0.c1)))AND(vt0.c2)))AND(vt0.c0)))AND(vt0.c2)) END) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL rt0.c3, vt1.c0, rt0.c0 FROM rt0, t1, vt1, vt0 GROUP BY rt0.c3, vt1.c0, rt0.c0;
SELECT ALL rt0.c3, vt1.c0, rt0.c0 FROM rt0, t1, vt1, vt0 WHERE ((((vt0.c2 IN ()))LIKE((('5\n') IS TRUE)))) GROUP BY rt0.c3, vt1.c0, rt0.c0 UNION SELECT ALL rt0.c3, vt1.c0, rt0.c0 FROM rt0, t1, vt1, vt0 WHERE ((NOT ((((vt0.c2 IN ()))LIKE((('5\n') IS TRUE)))))) GROUP BY rt0.c3, vt1.c0, rt0.c0 UNION SELECT ALL rt0.c3, vt1.c0, rt0.c0 FROM rt0, t1, vt1, vt0 WHERE ((((((vt0.c2 IN ()))LIKE((('5\n') IS TRUE)))) ISNULL)) GROUP BY rt0.c3, vt1.c0, rt0.c0;
SELECT ALL rt0.c3, vt1.c0, rt0.c0 FROM rt0, t1, vt1, vt0 GROUP BY rt0.c3, vt1.c0, rt0.c0;
SELECT vt0.c1, rt0.c1, vt0.c2, vt0.c0 FROM vt0, rt0, vt1, t1 GROUP BY vt0.c1, rt0.c1, vt0.c2, vt0.c0;
SELECT ALL vt0.c1, rt0.c1, vt0.c2, vt0.c0 FROM vt0, rt0, vt1, t1 GROUP BY vt0.c1, rt0.c1, vt0.c2, vt0.c0 HAVING MIN(((((((((MIN(MAX(rt0.c3)))AND(TOTAL(TOTAL(vt1.c0)))))AND(t1.c51)))AND(rt0.c2)))AND(vt0.c2))) UNION ALL SELECT vt0.c1, rt0.c1, vt0.c2, vt0.c0 FROM vt0, rt0, vt1, t1 GROUP BY vt0.c1, rt0.c1, vt0.c2, vt0.c0 HAVING (NOT (MIN(((((((((MIN(MAX(rt0.c3)))AND(TOTAL(TOTAL(vt1.c0)))))AND(t1.c51)))AND(rt0.c2)))AND(vt0.c2))))) UNION ALL SELECT ALL vt0.c1, rt0.c1, vt0.c2, vt0.c0 FROM vt0, rt0, vt1, t1 GROUP BY vt0.c1, rt0.c1, vt0.c2, vt0.c0 HAVING ((MIN(((((((((MIN(MAX(rt0.c3)))AND(TOTAL(TOTAL(vt1.c0)))))AND(t1.c51)))AND(rt0.c2)))AND(vt0.c2)))) ISNULL);
SELECT rt0.c2, rt0.c3, rt0.c1, vt0.c1, rt0.c0, vt1.c0, vt0.c2, t1.c51, rt0.c4 FROM vt0, vt1, rt0, t1;
SELECT rt0.c2, rt0.c3, rt0.c1, vt0.c1, rt0.c0, vt1.c0, vt0.c2, t1.c51, rt0.c4 FROM vt0, vt1, rt0, t1 WHERE (t1.c51) UNION ALL SELECT rt0.c2, rt0.c3, rt0.c1, vt0.c1, rt0.c0, vt1.c0, vt0.c2, t1.c51, rt0.c4 FROM vt0, vt1, rt0, t1 WHERE ((NOT (t1.c51))) UNION ALL SELECT rt0.c2, rt0.c3, rt0.c1, vt0.c1, rt0.c0, vt1.c0, vt0.c2, t1.c51, rt0.c4 FROM vt0, vt1, rt0, t1 WHERE (((t1.c51) ISNULL));
SELECT rt0.c2, rt0.c3, rt0.c1, vt0.c1, rt0.c0, vt1.c0, vt0.c2, t1.c51, rt0.c4 FROM vt0, vt1, rt0, t1;
SELECT DISTINCT vt0.c1, vt0.c2 FROM vt0, rt0;
SELECT DISTINCT vt0.c1, vt0.c2 FROM vt0, rt0 WHERE (((0.3267376493276001)<=(rt0.c4)) COLLATE BINARY) UNION SELECT DISTINCT vt0.c1, vt0.c2 FROM vt0, rt0 WHERE ((NOT (((0.3267376493276001)<=(rt0.c4)) COLLATE BINARY))) UNION SELECT DISTINCT vt0.c1, vt0.c2 FROM vt0, rt0 WHERE (((((0.3267376493276001)<=(rt0.c4)) COLLATE BINARY) ISNULL));
SELECT DISTINCT vt0.c1, vt0.c2 FROM vt0, rt0;
SELECT vt0.c1, vt1.c0, vt0.c2, t1.c51 FROM vt1, t1, vt0 GROUP BY vt0.c1, vt1.c0, vt0.c2, t1.c51;
SELECT vt0.c1, vt1.c0, vt0.c2, t1.c51 FROM vt1, t1, vt0 WHERE (CASE WHEN vt0.c1 THEN ((((vt1.c0)AND(vt0.c2)))OR(x'')) WHEN t1.c51 COLLATE RTRIM THEN vt0.c1 WHEN (vt0.c2 IN (t1.c51)) THEN LOWER(DISTINCT vt0.c2) END) GROUP BY vt0.c1, vt1.c0, vt0.c2, t1.c51 UNION SELECT ALL vt0.c1, vt1.c0, vt0.c2, t1.c51 FROM vt1, t1, vt0 WHERE ((NOT (CASE WHEN vt0.c1 THEN ((((vt1.c0)AND(vt0.c2)))OR(x'')) WHEN t1.c51 COLLATE RTRIM THEN vt0.c1 WHEN (vt0.c2 IN (t1.c51)) THEN LOWER(DISTINCT vt0.c2) END))) GROUP BY vt0.c1, vt1.c0, vt0.c2, t1.c51 UNION SELECT ALL vt0.c1, vt1.c0, vt0.c2, t1.c51 FROM vt1, t1, vt0 WHERE (((CASE WHEN vt0.c1 THEN ((((vt1.c0)AND(vt0.c2)))OR(x'')) WHEN t1.c51 COLLATE RTRIM THEN vt0.c1 WHEN (vt0.c2 IN (t1.c51)) THEN LOWER(DISTINCT vt0.c2) END) ISNULL)) GROUP BY vt0.c1, vt1.c0, vt0.c2, t1.c51;
SELECT vt0.c1, vt1.c0, vt0.c2, t1.c51 FROM vt1, t1, vt0 GROUP BY vt0.c1, vt1.c0, vt0.c2, t1.c51;
SELECT ALL rt0.c4, rt0.c2 FROM rt0, vt0 CROSS JOIN t1 ON (~ (rt0.c2 COLLATE BINARY)) LEFT OUTER JOIN vt1 ON rt0.c0 GROUP BY rt0.c4, rt0.c2;
SELECT rt0.c4, rt0.c2 FROM rt0, vt0 CROSS JOIN t1 ON (~ (rt0.c2 COLLATE BINARY)) LEFT OUTER JOIN vt1 ON rt0.c0 GROUP BY rt0.c4, rt0.c2 HAVING CAST(COUNT(*) AS BLOB) COLLATE RTRIM UNION ALL SELECT rt0.c4, rt0.c2 FROM rt0, vt0 CROSS JOIN t1 ON (~ (rt0.c2 COLLATE BINARY)) LEFT OUTER JOIN vt1 ON rt0.c0 GROUP BY rt0.c4, rt0.c2 HAVING (NOT (CAST(COUNT(*) AS BLOB) COLLATE RTRIM)) UNION ALL SELECT ALL rt0.c4, rt0.c2 FROM rt0, vt0 CROSS JOIN t1 ON (~ (rt0.c2 COLLATE BINARY)) LEFT OUTER JOIN vt1 ON rt0.c0 GROUP BY rt0.c4, rt0.c2 HAVING ((CAST(COUNT(*) AS BLOB) COLLATE RTRIM) ISNULL);
SELECT ALL rt0.c4, rt0.c2 FROM rt0, vt0 CROSS JOIN t1 ON (~ (rt0.c2 COLLATE BINARY)) LEFT OUTER JOIN vt1 ON rt0.c0 GROUP BY rt0.c4, rt0.c2;
SELECT rt0.c4, rt0.c2 FROM rt0, vt0 CROSS JOIN t1 ON (~ (rt0.c2 COLLATE BINARY)) LEFT OUTER JOIN vt1 ON rt0.c0 GROUP BY rt0.c4, rt0.c2 HAVING CAST(COUNT(*) AS BLOB) COLLATE RTRIM UNION ALL SELECT rt0.c4, rt0.c2 FROM rt0, vt0 CROSS JOIN t1 ON (~ (rt0.c2 COLLATE BINARY)) LEFT OUTER JOIN vt1 ON rt0.c0 GROUP BY rt0.c4, rt0.c2 HAVING (NOT (CAST(COUNT(*) AS BLOB) COLLATE RTRIM)) UNION ALL SELECT ALL rt0.c4, rt0.c2 FROM rt0, vt0 CROSS JOIN t1 ON (~ (rt0.c2 COLLATE BINARY)) LEFT OUTER JOIN vt1 ON rt0.c0 GROUP BY rt0.c4, rt0.c2 HAVING ((CAST(COUNT(*) AS BLOB) COLLATE RTRIM) ISNULL);
SELECT ALL rt0.c4, rt0.c2 FROM rt0, vt0 CROSS JOIN t1 ON (~ (rt0.c2 COLLATE BINARY)) LEFT OUTER JOIN vt1 ON rt0.c0 GROUP BY rt0.c4, rt0.c2;
SELECT t1.c51, vt1.c0 FROM t1 FULL OUTER JOIN vt1 ON CAST((t1.c51 IN ()) AS INTEGER);
SELECT ALL t1.c51, vt1.c0 FROM t1 FULL OUTER JOIN vt1 ON CAST((t1.c51 IN ()) AS INTEGER) WHERE ((NOT (0.8543885112797411))) UNION ALL SELECT t1.c51, vt1.c0 FROM t1 FULL OUTER JOIN vt1 ON CAST((t1.c51 IN ()) AS INTEGER) WHERE ((NOT ((NOT (0.8543885112797411))))) UNION ALL SELECT t1.c51, vt1.c0 FROM t1 FULL OUTER JOIN vt1 ON CAST((t1.c51 IN ()) AS INTEGER) WHERE ((((NOT (0.8543885112797411))) ISNULL));
SELECT t1.c51, vt1.c0 FROM t1 FULL OUTER JOIN vt1 ON CAST((t1.c51 IN ()) AS INTEGER);
SELECT DISTINCT t1.c51 FROM t1 LEFT OUTER JOIN vt1 ON (((t1.c51) IS FALSE) IN (((t1.c51) IS TRUE)));
SELECT DISTINCT t1.c51 FROM t1 LEFT OUTER JOIN vt1 ON (((t1.c51) IS FALSE) IN (((t1.c51) IS TRUE))) WHERE ((((t1.c51 IN (vt1.c0)))-(CAST(t1.c51 AS REAL)))) UNION SELECT DISTINCT t1.c51 FROM t1 LEFT OUTER JOIN vt1 ON (((t1.c51) IS FALSE) IN (((t1.c51) IS TRUE))) WHERE ((NOT ((((t1.c51 IN (vt1.c0)))-(CAST(t1.c51 AS REAL)))))) UNION SELECT DISTINCT t1.c51 FROM t1 LEFT OUTER JOIN vt1 ON (((t1.c51) IS FALSE) IN (((t1.c51) IS TRUE))) WHERE ((((((t1.c51 IN (vt1.c0)))-(CAST(t1.c51 AS REAL)))) ISNULL));
SELECT DISTINCT t1.c51 FROM t1 LEFT OUTER JOIN vt1 ON (((t1.c51) IS FALSE) IN (((t1.c51) IS TRUE)));
SELECT t1.c51 FROM t1, vt1 GROUP BY t1.c51;
SELECT ALL t1.c51 FROM t1, vt1 WHERE ((CASE 0.9129602979295993  WHEN vt1.c0 THEN -1793383141 WHEN t1.c51 THEN t1.c51 WHEN t1.c51 THEN vt1.c0 ELSE vt1.c0 END IN ())) GROUP BY t1.c51 UNION SELECT ALL t1.c51 FROM t1, vt1 WHERE ((NOT ((CASE 0.9129602979295993  WHEN vt1.c0 THEN -1793383141 WHEN t1.c51 THEN t1.c51 WHEN t1.c51 THEN vt1.c0 ELSE vt1.c0 END IN ())))) GROUP BY t1.c51 UNION SELECT ALL t1.c51 FROM t1, vt1 WHERE ((((CASE 0.9129602979295993  WHEN vt1.c0 THEN -1793383141 WHEN t1.c51 THEN t1.c51 WHEN t1.c51 THEN vt1.c0 ELSE vt1.c0 END IN ())) ISNULL)) GROUP BY t1.c51;
SELECT t1.c51 FROM t1, vt1 GROUP BY t1.c51;
SELECT ALL vt0.c2 FROM vt1, vt0, t1 GROUP BY vt0.c2;
SELECT ALL vt0.c2 FROM vt1, vt0, t1 GROUP BY vt0.c2 HAVING GROUP_CONCAT(COALESCE('', SUM(vt0.c2))) UNION ALL SELECT vt0.c2 FROM vt1, vt0, t1 GROUP BY vt0.c2 HAVING (NOT (GROUP_CONCAT(COALESCE('', SUM(vt0.c2))))) UNION ALL SELECT ALL vt0.c2 FROM vt1, vt0, t1 GROUP BY vt0.c2 HAVING ((GROUP_CONCAT(COALESCE('', SUM(vt0.c2)))) ISNULL);
SELECT ALL SUM(SQLITE_COMPILEOPTION_GET(t1.c51 COLLATE NOCASE)) FROM rt0, t1;
SELECT vt0.c1 FROM rt0, t1, vt0;
SELECT vt0.c1 FROM rt0, t1, vt0 WHERE (SQLITE_COMPILEOPTION_GET(CASE rt0.c4  WHEN rt0.c0 THEN rt0.c3 END)) UNION ALL SELECT ALL vt0.c1 FROM rt0, t1, vt0 WHERE ((NOT (SQLITE_COMPILEOPTION_GET(CASE rt0.c4  WHEN rt0.c0 THEN rt0.c3 END)))) UNION ALL SELECT ALL vt0.c1 FROM rt0, t1, vt0 WHERE (((SQLITE_COMPILEOPTION_GET(CASE rt0.c4  WHEN rt0.c0 THEN rt0.c3 END)) ISNULL));
SELECT vt0.c1 FROM rt0, t1, vt0;
SELECT DISTINCT * FROM t1 CROSS JOIN vt1 ON (((t1.c51)OR(vt1.c0)) IN ());
SELECT DISTINCT * FROM t1 CROSS JOIN vt1 ON (((t1.c51)OR(vt1.c0)) IN ()) WHERE (CASE WHEN CAST(t1.c51 AS BLOB) THEN '-8542899' END) UNION SELECT DISTINCT * FROM t1 CROSS JOIN vt1 ON (((t1.c51)OR(vt1.c0)) IN ()) WHERE ((NOT (CASE WHEN CAST(t1.c51 AS BLOB) THEN '-8542899' END))) UNION SELECT DISTINCT * FROM t1 CROSS JOIN vt1 ON (((t1.c51)OR(vt1.c0)) IN ()) WHERE (((CASE WHEN CAST(t1.c51 AS BLOB) THEN '-8542899' END) ISNULL));
SELECT DISTINCT * FROM t1 CROSS JOIN vt1 ON (((t1.c51)OR(vt1.c0)) IN ());
SELECT rt0.c3, rt0.c0, rt0.c1, rt0.c2, vt0.c2, vt0.c1, rt0.c4, vt1.c0 FROM rt0 FULL OUTER JOIN vt0 ON ((((rt0.c1) NOT NULL))OR('p{')) RIGHT OUTER JOIN vt1 ON ((((((vt0.c2)OR(1642255040)))OR(rt0.c4))) NOT BETWEEN (((vt1.c0) ISNULL)) AND (CAST(rt0.c0 AS INTEGER))) GROUP BY rt0.c3, rt0.c0, rt0.c1, rt0.c2, vt0.c2, vt0.c1, rt0.c4, vt1.c0;
SELECT rt0.c3, rt0.c0, rt0.c1, rt0.c2, vt0.c2, vt0.c1, rt0.c4, vt1.c0 FROM rt0 FULL OUTER JOIN vt0 ON ((((rt0.c1) NOT NULL))OR('p{')) RIGHT OUTER JOIN vt1 ON ((((((vt0.c2)OR(1642255040)))OR(rt0.c4))) NOT BETWEEN (((vt1.c0) ISNULL)) AND (CAST(rt0.c0 AS INTEGER))) WHERE (CASE ((rt0.c3)>>(rt0.c3))  WHEN ((vt1.c0)IS NOT(rt0.c2)) THEN vt0.c0 END) GROUP BY rt0.c3, rt0.c0, rt0.c1, rt0.c2, vt0.c2, vt0.c1, rt0.c4, vt1.c0 UNION SELECT rt0.c3, rt0.c0, rt0.c1, rt0.c2, vt0.c2, vt0.c1, rt0.c4, vt1.c0 FROM rt0 FULL OUTER JOIN vt0 ON ((((rt0.c1) NOT NULL))OR('p{')) RIGHT OUTER JOIN vt1 ON ((((((vt0.c2)OR(1642255040)))OR(rt0.c4))) NOT BETWEEN (((vt1.c0) ISNULL)) AND (CAST(rt0.c0 AS INTEGER))) WHERE ((NOT (CASE ((rt0.c3)>>(rt0.c3))  WHEN ((vt1.c0)IS NOT(rt0.c2)) THEN vt0.c0 END))) GROUP BY rt0.c3, rt0.c0, rt0.c1, rt0.c2, vt0.c2, vt0.c1, rt0.c4, vt1.c0 UNION SELECT ALL rt0.c3, rt0.c0, rt0.c1, rt0.c2, vt0.c2, vt0.c1, rt0.c4, vt1.c0 FROM rt0 FULL OUTER JOIN vt0 ON ((((rt0.c1) NOT NULL))OR('p{')) RIGHT OUTER JOIN vt1 ON ((((((vt0.c2)OR(1642255040)))OR(rt0.c4))) NOT BETWEEN (((vt1.c0) ISNULL)) AND (CAST(rt0.c0 AS INTEGER))) WHERE (((CASE ((rt0.c3)>>(rt0.c3))  WHEN ((vt1.c0)IS NOT(rt0.c2)) THEN vt0.c0 END) ISNULL)) GROUP BY rt0.c3, rt0.c0, rt0.c1, rt0.c2, vt0.c2, vt0.c1, rt0.c4, vt1.c0;
SELECT rt0.c3, rt0.c0, rt0.c1, rt0.c2, vt0.c2, vt0.c1, rt0.c4, vt1.c0 FROM rt0 FULL OUTER JOIN vt0 ON ((((rt0.c1) NOT NULL))OR('p{')) RIGHT OUTER JOIN vt1 ON ((((((vt0.c2)OR(1642255040)))OR(rt0.c4))) NOT BETWEEN (((vt1.c0) ISNULL)) AND (CAST(rt0.c0 AS INTEGER))) GROUP BY rt0.c3, rt0.c0, rt0.c1, rt0.c2, vt0.c2, vt0.c1, rt0.c4, vt1.c0;
SELECT t1.c51 FROM t1 GROUP BY t1.c51;
SELECT ALL t1.c51 FROM t1 GROUP BY t1.c51 HAVING MAX(COUNT(MIN(t1.c51))) UNION ALL SELECT ALL t1.c51 FROM t1 GROUP BY t1.c51 HAVING (NOT (MAX(COUNT(MIN(t1.c51))))) UNION ALL SELECT t1.c51 FROM t1 GROUP BY t1.c51 HAVING ((MAX(COUNT(MIN(t1.c51)))) ISNULL);
SELECT * FROM vt0, t1;
SELECT * FROM vt0, t1 WHERE (((CAST(vt0.c1 AS INTEGER)) NOT BETWEEN (((vt0.c2)||(vt0.c1))) AND (((vt0.c2) NOTNULL)))) UNION ALL SELECT ALL * FROM vt0, t1 WHERE ((NOT (((CAST(vt0.c1 AS INTEGER)) NOT BETWEEN (((vt0.c2)||(vt0.c1))) AND (((vt0.c2) NOTNULL)))))) UNION ALL SELECT * FROM vt0, t1 WHERE (((((CAST(vt0.c1 AS INTEGER)) NOT BETWEEN (((vt0.c2)||(vt0.c1))) AND (((vt0.c2) NOTNULL)))) ISNULL));
SELECT * FROM vt0, t1;
SELECT DISTINCT * FROM rt0, vt0 INNER JOIN vt1 ON QUOTE(CAST(rt0.c2 AS REAL));
SELECT DISTINCT * FROM rt0, vt0 INNER JOIN vt1 ON QUOTE(CAST(rt0.c2 AS REAL)) WHERE ((((((rt0.c3))!=((rt0.c3)))) ISNULL)) UNION SELECT DISTINCT * FROM rt0, vt0 INNER JOIN vt1 ON QUOTE(CAST(rt0.c2 AS REAL)) WHERE ((NOT ((((((rt0.c3))!=((rt0.c3)))) ISNULL)))) UNION SELECT DISTINCT * FROM rt0, vt0 INNER JOIN vt1 ON QUOTE(CAST(rt0.c2 AS REAL)) WHERE ((((((((rt0.c3))<>((rt0.c3)))) ISNULL)) ISNULL));
SELECT DISTINCT * FROM rt0, vt0 INNER JOIN vt1 ON QUOTE(CAST(rt0.c2 AS REAL));
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE ('-273370771') GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT ('-273370771'))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((('-273370771') ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL t1.c51 FROM t1 LEFT OUTER JOIN vt1 ON CASE ((NULL) BETWEEN (-441141864) AND (t1.c51))  WHEN CASE t1.c51  WHEN vt1.c0 THEN t1.c51 WHEN NULL THEN vt1.c0 WHEN t1.c51 THEN t1.c51 ELSE t1.c51 END THEN ((((t1.c51)AND(t1.c51)))OR(t1.c51)) ELSE vt1.c0 COLLATE NOCASE END GROUP BY t1.c51;
SELECT ALL t1.c51 FROM t1 LEFT OUTER JOIN vt1 ON CASE ((NULL) BETWEEN (-441141864) AND (t1.c51))  WHEN CASE t1.c51  WHEN vt1.c0 THEN t1.c51 WHEN NULL THEN vt1.c0 WHEN t1.c51 THEN t1.c51 ELSE t1.c51 END THEN ((((t1.c51)AND(t1.c51)))OR(t1.c51)) ELSE vt1.c0 COLLATE NOCASE END GROUP BY t1.c51 HAVING MAX(COUNT(MIN(MIN(vt1.c0)))) UNION ALL SELECT ALL t1.c51 FROM t1 LEFT OUTER JOIN vt1 ON CASE ((NULL) BETWEEN (-441141864) AND (t1.c51))  WHEN CASE t1.c51  WHEN vt1.c0 THEN t1.c51 WHEN NULL THEN vt1.c0 WHEN t1.c51 THEN t1.c51 ELSE t1.c51 END THEN ((((t1.c51)AND(t1.c51)))OR(t1.c51)) ELSE vt1.c0 COLLATE NOCASE END GROUP BY t1.c51 HAVING (NOT (MAX(COUNT(MIN(MIN(vt1.c0)))))) UNION ALL SELECT ALL t1.c51 FROM t1 LEFT OUTER JOIN vt1 ON CASE ((NULL) BETWEEN (-441141864) AND (t1.c51))  WHEN CASE t1.c51  WHEN vt1.c0 THEN t1.c51 WHEN NULL THEN vt1.c0 WHEN t1.c51 THEN t1.c51 ELSE t1.c51 END THEN ((((t1.c51)AND(t1.c51)))OR(t1.c51)) ELSE vt1.c0 COLLATE NOCASE END GROUP BY t1.c51 HAVING ((MAX(COUNT(MIN(MIN(vt1.c0))))) ISNULL);
SELECT ALL vt0.c0, vt0.c2, vt0.c1 FROM vt0;
SELECT ALL vt0.c0, vt0.c2, vt0.c1 FROM vt0 WHERE ((NOT (((((vt0.c0)OR(vt0.c0)))AND(vt0.c1))))) UNION ALL SELECT ALL vt0.c0, vt0.c2, vt0.c1 FROM vt0 WHERE ((NOT ((NOT (((((vt0.c0)OR(vt0.c0)))AND(vt0.c1))))))) UNION ALL SELECT ALL vt0.c0, vt0.c2, vt0.c1 FROM vt0 WHERE ((((NOT (((((vt0.c0)OR(vt0.c0)))AND(vt0.c1))))) ISNULL));
SELECT ALL vt0.c0, vt0.c2, vt0.c1 FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((((((vt0.c1) IS FALSE))OR(((vt0.c1) BETWEEN ('CU') AND (vt0.c0)))))OR(''))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((((((vt0.c1) IS FALSE))OR(((vt0.c1) BETWEEN ('CU') AND (vt0.c0)))))OR(''))))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((((((vt0.c1) IS FALSE))OR(((vt0.c1) BETWEEN ('CU') AND (vt0.c0)))))OR(''))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT rt0.c1, rt0.c4, rt0.c0, rt0.c3 FROM rt0 RIGHT OUTER JOIN t1 ON ((CASE WHEN vt1.c0 THEN rt0.c1 ELSE rt0.c2 END) IS TRUE) CROSS JOIN vt1 ON ((CASE rt0.c1  WHEN vt1.c0 THEN rt0.c0 WHEN rt0.c3 THEN vt1.c0 WHEN vt1.c0 THEN t1.c51 WHEN vt1.c0 THEN vt1.c0 WHEN rt0.c4 THEN rt0.c1 ELSE rt0.c4 END)*(((rt0.c3)<=(rt0.c1)))) GROUP BY rt0.c1, rt0.c4, rt0.c0, rt0.c3;
SELECT vt1.c0, t1.c51, rt0.c3, rt0.c0, rt0.c4, rt0.c1, rt0.c2 FROM vt1, rt0, t1 GROUP BY vt1.c0, t1.c51, rt0.c3, rt0.c0, rt0.c4, rt0.c1, rt0.c2;
SELECT vt1.c0, t1.c51, rt0.c3, rt0.c0, rt0.c4, rt0.c1, rt0.c2 FROM vt1, rt0, t1 GROUP BY vt1.c0, t1.c51, rt0.c3, rt0.c0, rt0.c4, rt0.c1, rt0.c2 HAVING MAX(CAST(MAX(rt0.c3) AS REAL)) UNION ALL SELECT ALL vt1.c0, t1.c51, rt0.c3, rt0.c0, rt0.c4, rt0.c1, rt0.c2 FROM vt1, rt0, t1 GROUP BY vt1.c0, t1.c51, rt0.c3, rt0.c0, rt0.c4, rt0.c1, rt0.c2 HAVING (NOT (MAX(CAST(MAX(rt0.c3) AS REAL)))) UNION ALL SELECT ALL vt1.c0, t1.c51, rt0.c3, rt0.c0, rt0.c4, rt0.c1, rt0.c2 FROM vt1, rt0, t1 GROUP BY vt1.c0, t1.c51, rt0.c3, rt0.c0, rt0.c4, rt0.c1, rt0.c2 HAVING ((MAX(CAST(MAX(rt0.c3) AS REAL))) ISNULL);
SELECT ALL MAX(((((vt0.c1))==((vt0.c2))) IN (COALESCE(vt0.c0, vt0.c0)))) FROM vt1, vt0;
SELECT * FROM t1 CROSS JOIN rt0 ON NULL INNER JOIN vt0 ON ((x'')==((((0.9237333449392597))<(('p')))));
SELECT * FROM t1 CROSS JOIN rt0 ON NULL INNER JOIN vt0 ON ((x'')=((((0.9237333449392597))<(('p'))))) WHERE ((rt0.c3 COLLATE RTRIM IN ())) UNION ALL SELECT * FROM t1 CROSS JOIN rt0 ON NULL INNER JOIN vt0 ON ((x'')==((((0.9237333449392597))<(('p'))))) WHERE ((NOT ((rt0.c3 COLLATE RTRIM IN ())))) UNION ALL SELECT * FROM t1 CROSS JOIN rt0 ON NULL INNER JOIN vt0 ON ((x'')=((((0.9237333449392597))<(('p'))))) WHERE ((((rt0.c3 COLLATE RTRIM IN ())) ISNULL));
SELECT * FROM t1 CROSS JOIN rt0 ON NULL INNER JOIN vt0 ON ((x'')==((((0.9237333449392597))<(('p')))));
SELECT DISTINCT rt0.c0, vt0.c0, vt0.c2, rt0.c1, t1.c51, vt1.c0, rt0.c4, vt0.c1 FROM vt0, rt0, t1, vt1;
SELECT DISTINCT rt0.c0, vt0.c0, vt0.c2, rt0.c1, t1.c51, vt1.c0, rt0.c4, vt0.c1 FROM vt0, rt0, t1, vt1 WHERE ((((rt0.c1 IN ())) NOTNULL)) UNION SELECT DISTINCT rt0.c0, vt0.c0, vt0.c2, rt0.c1, t1.c51, vt1.c0, rt0.c4, vt0.c1 FROM vt0, rt0, t1, vt1 WHERE ((NOT ((((rt0.c1 IN ())) NOTNULL)))) UNION SELECT DISTINCT rt0.c0, vt0.c0, vt0.c2, rt0.c1, t1.c51, vt1.c0, rt0.c4, vt0.c1 FROM vt0, rt0, t1, vt1 WHERE ((((((rt0.c1 IN ())) NOTNULL)) ISNULL));
SELECT DISTINCT rt0.c0, vt0.c0, vt0.c2, rt0.c1, t1.c51, vt1.c0, rt0.c4, vt0.c1 FROM vt0, rt0, t1, vt1;
SELECT ALL vt0.c1, t1.c51, rt0.c2, rt0.c4, rt0.c3, vt1.c0 FROM t1, rt0, vt0 NOT INDEXED, vt1 GROUP BY vt0.c1, t1.c51, rt0.c2, rt0.c4, rt0.c3, vt1.c0;
SELECT ALL vt0.c1, t1.c51, rt0.c2, rt0.c4, rt0.c3, vt1.c0 FROM t1, rt0, vt0, vt1 WHERE (CAST(t1.c51 COLLATE RTRIM AS INTEGER)) GROUP BY vt0.c1, t1.c51, rt0.c2, rt0.c4, rt0.c3, vt1.c0 UNION SELECT vt0.c1, t1.c51, rt0.c2, rt0.c4, rt0.c3, vt1.c0 FROM t1, rt0, vt0 NOT INDEXED, vt1 WHERE ((NOT (CAST(t1.c51 COLLATE RTRIM AS INTEGER)))) GROUP BY vt0.c1, t1.c51, rt0.c2, rt0.c4, rt0.c3, vt1.c0 UNION SELECT ALL vt0.c1, t1.c51, rt0.c2, rt0.c4, rt0.c3, vt1.c0 FROM t1, rt0, vt0, vt1 WHERE (((CAST(t1.c51 COLLATE RTRIM AS INTEGER)) ISNULL)) GROUP BY vt0.c1, t1.c51, rt0.c2, rt0.c4, rt0.c3, vt1.c0;
SELECT ALL vt0.c1, t1.c51, rt0.c2, rt0.c4, rt0.c3, vt1.c0 FROM t1, rt0, vt0 NOT INDEXED, vt1 GROUP BY vt0.c1, t1.c51, rt0.c2, rt0.c4, rt0.c3, vt1.c0;
SELECT ALL t1.c51 FROM t1 GROUP BY t1.c51;
SELECT ALL t1.c51 FROM t1 GROUP BY t1.c51 HAVING TOTAL(AVG(t1.c51)) UNION ALL SELECT ALL t1.c51 FROM t1 GROUP BY t1.c51 HAVING (NOT (TOTAL(AVG(t1.c51)))) UNION ALL SELECT ALL t1.c51 FROM t1 GROUP BY t1.c51 HAVING ((TOTAL(AVG(t1.c51))) ISNULL);
SELECT SUM(((CAST(vt0.c0 AS BLOB))==(((vt0.c0)AND(vt0.c2))))) FROM vt1, vt0 ORDER BY (((((((vt1.c0, vt0.c1, vt0.c2))<>((vt1.c0, vt1.c0, '-30334011'))))AND(vt0.c0)))AND(((vt1.c0)<=(vt1.c0))));
SELECT vt1.c0 FROM t1 CROSS JOIN vt1 ON 0xffffffffd9d689fc;
SELECT ALL vt1.c0 FROM t1 CROSS JOIN vt1 ON 0Xffffffffd9d689fc WHERE (((((t1.c51) IS FALSE))>>(((t1.c51) NOTNULL)))) UNION ALL SELECT ALL vt1.c0 FROM t1 CROSS JOIN vt1 ON 0Xffffffffd9d689fc WHERE ((NOT (((((t1.c51) IS FALSE))>>(((t1.c51) NOTNULL)))))) UNION ALL SELECT vt1.c0 FROM t1 NOT INDEXED CROSS JOIN vt1 ON 0Xffffffffd9d689fc WHERE (((((((t1.c51) IS FALSE))>>(((t1.c51) NOTNULL)))) ISNULL));
SELECT vt1.c0 FROM t1 CROSS JOIN vt1 ON 0xffffffffd9d689fc;
SELECT DISTINCT rt0.c4, rt0.c0, rt0.c3, rt0.c1, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c4, rt0.c0, rt0.c3, rt0.c1, rt0.c2 FROM rt0 WHERE (((CASE WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c4 END) BETWEEN (((rt0.c0) IS FALSE)) AND (rt0.c1))) UNION SELECT DISTINCT rt0.c4, rt0.c0, rt0.c3, rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (((CASE WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c4 END) BETWEEN (((rt0.c0) IS FALSE)) AND (rt0.c1))))) UNION SELECT DISTINCT rt0.c4, rt0.c0, rt0.c3, rt0.c1, rt0.c2 FROM rt0 WHERE (((((CASE WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c4 END) BETWEEN (((rt0.c0) IS FALSE)) AND (rt0.c1))) ISNULL));
SELECT DISTINCT rt0.c4, rt0.c0, rt0.c3, rt0.c1, rt0.c2 FROM rt0;
SELECT rt0.c1, rt0.c0, rt0.c3 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c3;
SELECT rt0.c1, rt0.c0, rt0.c3 FROM rt0 WHERE (CAST(rt0.c0 COLLATE RTRIM AS BLOB)) GROUP BY rt0.c1, rt0.c0, rt0.c3 UNION SELECT ALL rt0.c1, rt0.c0, rt0.c3 FROM rt0 WHERE ((NOT (CAST(rt0.c0 COLLATE RTRIM AS BLOB)))) GROUP BY rt0.c1, rt0.c0, rt0.c3 UNION SELECT ALL rt0.c1, rt0.c0, rt0.c3 FROM rt0 WHERE (((CAST(rt0.c0 COLLATE RTRIM AS BLOB)) ISNULL)) GROUP BY rt0.c1, rt0.c0, rt0.c3;
SELECT rt0.c1, rt0.c0, rt0.c3 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c3;
SELECT rt0.c0, rt0.c1, rt0.c4, vt0.c1, rt0.c2 FROM vt0, vt1 FULL OUTER JOIN rt0 ON ((((((rt0.c4) NOT BETWEEN (vt1.c0) AND (vt0.c1)))AND(CAST(vt1.c0 AS INTEGER))))AND(CASE rt0.c1  WHEN rt0.c3 THEN vt0.c1 END)) GROUP BY rt0.c0, rt0.c1, rt0.c4, vt0.c1, rt0.c2;
SELECT rt0.c0, rt0.c1, rt0.c4, vt0.c1, rt0.c2 FROM vt0, vt1 FULL OUTER JOIN rt0 ON ((((((rt0.c4) NOT BETWEEN (vt1.c0) AND (vt0.c1)))AND(CAST(vt1.c0 AS INTEGER))))AND(CASE rt0.c1  WHEN rt0.c3 THEN vt0.c1 END)) GROUP BY rt0.c0, rt0.c1, rt0.c4, vt0.c1, rt0.c2 HAVING TOTAL(AVG(COUNT(*))) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c4, vt0.c1, rt0.c2 FROM vt0, vt1 FULL OUTER JOIN rt0 ON ((((((rt0.c4) NOT BETWEEN (vt1.c0) AND (vt0.c1)))AND(CAST(vt1.c0 AS INTEGER))))AND(CASE rt0.c1  WHEN rt0.c3 THEN vt0.c1 END)) GROUP BY rt0.c0, rt0.c1, rt0.c4, vt0.c1, rt0.c2 HAVING (NOT (TOTAL(AVG(COUNT(*))))) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c4, vt0.c1, rt0.c2 FROM vt0, vt1 FULL OUTER JOIN rt0 ON ((((((rt0.c4) NOT BETWEEN (vt1.c0) AND (vt0.c1)))AND(CAST(vt1.c0 AS INTEGER))))AND(CASE rt0.c1  WHEN rt0.c3 THEN vt0.c1 END)) GROUP BY rt0.c0, rt0.c1, rt0.c4, vt0.c1, rt0.c2 HAVING ((TOTAL(AVG(COUNT(*)))) ISNULL);
SELECT rt0.c1, rt0.c4, rt0.c0, rt0.c3 FROM rt0;
SELECT rt0.c1, rt0.c4, rt0.c0, rt0.c3 FROM rt0 WHERE (CAST(rt0.c3 AS BLOB)) UNION ALL SELECT ALL rt0.c1, rt0.c4, rt0.c0, rt0.c3 FROM rt0 WHERE ((NOT (CAST(rt0.c3 AS BLOB)))) UNION ALL SELECT rt0.c1, rt0.c4, rt0.c0, rt0.c3 FROM rt0 WHERE (((CAST(rt0.c3 AS BLOB)) ISNULL));
SELECT rt0.c1, rt0.c4, rt0.c0, rt0.c3 FROM rt0;
SELECT DISTINCT vt0.c0, vt1.c0 FROM vt0, vt1;
SELECT DISTINCT vt0.c0, vt1.c0 FROM vt0, vt1 WHERE ((((NOT (vt0.c1)))*(vt1.c0))) UNION SELECT DISTINCT vt0.c0, vt1.c0 FROM vt0, vt1 WHERE ((NOT ((((NOT (vt0.c1)))*(vt1.c0))))) UNION SELECT DISTINCT vt0.c0, vt1.c0 FROM vt0, vt1 WHERE ((((((NOT (vt0.c1)))*(vt1.c0))) ISNULL));
SELECT DISTINCT vt0.c0, vt1.c0 FROM vt0, vt1;
SELECT ALL rt0.c1, rt0.c0, rt0.c3, rt0.c2, rt0.c4 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c3, rt0.c2, rt0.c4;
SELECT rt0.c1, rt0.c0, rt0.c3, rt0.c2, rt0.c4 FROM rt0 WHERE ((NULL IN ())) GROUP BY rt0.c1, rt0.c0, rt0.c3, rt0.c2, rt0.c4 UNION SELECT ALL rt0.c1, rt0.c0, rt0.c3, rt0.c2, rt0.c4 FROM rt0 WHERE ((NOT ((NULL IN ())))) GROUP BY rt0.c1, rt0.c0, rt0.c3, rt0.c2, rt0.c4 UNION SELECT ALL rt0.c1, rt0.c0, rt0.c3, rt0.c2, rt0.c4 FROM rt0 WHERE ((((NULL IN ())) ISNULL)) GROUP BY rt0.c1, rt0.c0, rt0.c3, rt0.c2, rt0.c4;
SELECT ALL rt0.c1, rt0.c0, rt0.c3, rt0.c2, rt0.c4 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c3, rt0.c2, rt0.c4;
SELECT rt0.c1, rt0.c4, vt0.c2, t1.c51 FROM vt0, vt1, rt0, t1 GROUP BY rt0.c1, rt0.c4, vt0.c2, t1.c51;
SELECT ALL rt0.c1, rt0.c4, vt0.c2, t1.c51 FROM vt0, vt1, rt0, t1 GROUP BY rt0.c1, rt0.c4, vt0.c2, t1.c51 HAVING MAX((COUNT(GROUP_CONCAT(MAX(GROUP_CONCAT(COUNT(*))))) IN ())) UNION ALL SELECT rt0.c1, rt0.c4, vt0.c2, t1.c51 FROM vt0, vt1, rt0, t1 GROUP BY rt0.c1, rt0.c4, vt0.c2, t1.c51 HAVING (NOT (MAX((COUNT(GROUP_CONCAT(MAX(GROUP_CONCAT(COUNT(*))))) IN ())))) UNION ALL SELECT rt0.c1, rt0.c4, vt0.c2, t1.c51 FROM vt0, vt1, rt0, t1 GROUP BY rt0.c1, rt0.c4, vt0.c2, t1.c51 HAVING ((MAX((COUNT(GROUP_CONCAT(MAX(GROUP_CONCAT(COUNT(*))))) IN ()))) ISNULL);
SELECT rt0.c1, rt0.c4, vt0.c2, t1.c51 FROM vt0, vt1, rt0, t1 GROUP BY rt0.c1, rt0.c4, vt0.c2, t1.c51;
SELECT ALL rt0.c1, rt0.c4, vt0.c2, t1.c51 FROM vt0, vt1, rt0, t1 GROUP BY rt0.c1, rt0.c4, vt0.c2, t1.c51 HAVING MAX((COUNT(GROUP_CONCAT(MAX(GROUP_CONCAT(COUNT(*))))) IN ())) UNION ALL SELECT rt0.c1, rt0.c4, vt0.c2, t1.c51 FROM vt0, vt1, rt0, t1 GROUP BY rt0.c1, rt0.c4, vt0.c2, t1.c51 HAVING (NOT (MAX((COUNT(GROUP_CONCAT(MAX(GROUP_CONCAT(COUNT(*))))) IN ())))) UNION ALL SELECT rt0.c1, rt0.c4, vt0.c2, t1.c51 FROM vt0, vt1, rt0, t1 GROUP BY rt0.c1, rt0.c4, vt0.c2, t1.c51 HAVING ((MAX((COUNT(GROUP_CONCAT(MAX(GROUP_CONCAT(COUNT(*))))) IN ()))) ISNULL);
SELECT rt0.c1, rt0.c4, vt0.c2, t1.c51 FROM vt0, vt1, rt0, t1 GROUP BY rt0.c1, rt0.c4, vt0.c2, t1.c51;
SELECT vt1.c0 FROM vt1;
SELECT vt1.c0 FROM vt1 WHERE (((((((vt1.c0)AND(x'')))AND(NULL))) NOT BETWEEN ((vt1.c0 IN ())) AND (json_type(vt1.c0)))) UNION ALL SELECT vt1.c0 FROM vt1 WHERE ((NOT (((((((vt1.c0)AND(x'')))AND(NULL))) NOT BETWEEN ((vt1.c0 IN ())) AND (json_type(vt1.c0)))))) UNION ALL SELECT vt1.c0 FROM vt1 WHERE (((((((((vt1.c0)AND(x'')))AND(NULL))) NOT BETWEEN ((vt1.c0 IN ())) AND (json_type(vt1.c0)))) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c3 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c3 FROM rt0 NOT INDEXED WHERE ('458566628') UNION SELECT DISTINCT rt0.c0, rt0.c3 FROM rt0 WHERE ((NOT ('458566628'))) UNION SELECT DISTINCT rt0.c0, rt0.c3 FROM rt0 WHERE ((('458566628') ISNULL));
SELECT DISTINCT rt0.c0, rt0.c3 FROM rt0;
SELECT t1.c51, vt0.c1 FROM vt0, t1 FULL OUTER JOIN vt1 ON vt0.c2 GROUP BY t1.c51, vt0.c1;
SELECT ALL t1.c51, vt0.c1 FROM vt0, t1 FULL OUTER JOIN vt1 ON vt0.c2 WHERE (((((vt0.c0)AND(x'')))%((((vt0.c1))<((vt0.c2)))))) GROUP BY t1.c51, vt0.c1 UNION SELECT t1.c51, vt0.c1 FROM vt0, t1 FULL OUTER JOIN vt1 ON vt0.c2 WHERE ((NOT (((((vt0.c0)AND(x'')))%((((vt0.c1))<((vt0.c2)))))))) GROUP BY t1.c51, vt0.c1 UNION SELECT ALL t1.c51, vt0.c1 FROM vt0 NOT INDEXED, t1 FULL OUTER JOIN vt1 ON vt0.c2 WHERE (((((((vt0.c0)AND(x'')))%((((vt0.c1))<((vt0.c2)))))) ISNULL)) GROUP BY t1.c51, vt0.c1;
SELECT t1.c51, vt0.c1 FROM vt0, t1 FULL OUTER JOIN vt1 ON vt0.c2 GROUP BY t1.c51, vt0.c1;
SELECT rt0.c3 FROM rt0 GROUP BY rt0.c3;
SELECT rt0.c3 FROM rt0 GROUP BY rt0.c3 HAVING ((rt0.c4)||(AVG(rt0.c2))) COLLATE NOCASE UNION ALL SELECT ALL rt0.c3 FROM rt0 GROUP BY rt0.c3 HAVING (NOT (((rt0.c4)||(AVG(rt0.c2))) COLLATE NOCASE)) UNION ALL SELECT ALL rt0.c3 FROM rt0 GROUP BY rt0.c3 HAVING ((((rt0.c4)||(AVG(rt0.c2))) COLLATE NOCASE) ISNULL);
SELECT rt0.c3 FROM rt0 GROUP BY rt0.c3;
SELECT rt0.c3 FROM rt0 GROUP BY rt0.c3 HAVING ((rt0.c4)||(AVG(rt0.c2))) COLLATE NOCASE UNION ALL SELECT ALL rt0.c3 FROM rt0 GROUP BY rt0.c3 HAVING (NOT (((rt0.c4)||(AVG(rt0.c2))) COLLATE NOCASE)) UNION ALL SELECT ALL rt0.c3 FROM rt0 GROUP BY rt0.c3 HAVING ((((rt0.c4)||(AVG(rt0.c2))) COLLATE NOCASE) ISNULL);
SELECT rt0.c3 FROM rt0 GROUP BY rt0.c3;
SELECT ALL vt0.c2, vt0.c1 FROM vt0;
SELECT vt0.c2, vt0.c1 FROM vt0 WHERE (CASE WHEN ((vt0.c2)<<(vt0.c1)) THEN TYPEOF(0.6713628015775887) ELSE CASE WHEN vt0.c0 THEN vt0.c2 END END) UNION ALL SELECT ALL vt0.c2, vt0.c1 FROM vt0 WHERE ((NOT (CASE WHEN ((vt0.c2)<<(vt0.c1)) THEN TYPEOF(0.6713628015775887) ELSE CASE WHEN vt0.c0 THEN vt0.c2 END END))) UNION ALL SELECT vt0.c2, vt0.c1 FROM vt0 WHERE (((CASE WHEN ((vt0.c2)<<(vt0.c1)) THEN TYPEOF(0.6713628015775887) ELSE CASE WHEN vt0.c0 THEN vt0.c2 END END) ISNULL));
SELECT ALL vt0.c2, vt0.c1 FROM vt0;
SELECT DISTINCT * FROM vt1, rt0;
SELECT DISTINCT * FROM vt1, rt0 WHERE (json_extract(rt0.c2, (((rt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((rt0.c3))))) UNION SELECT DISTINCT * FROM vt1, rt0 WHERE ((NOT (json_extract(rt0.c2, (((rt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((rt0.c3))))))) UNION SELECT DISTINCT * FROM vt1, rt0 WHERE (((json_extract(rt0.c2, (((rt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((rt0.c3))))) ISNULL));
SELECT DISTINCT * FROM vt1, rt0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE (CASE ((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))AND(x'e493fbd5'))  WHEN (vt1.c0 IN ()) THEN ((vt1.c0) ISNULL) ELSE vt1.c0 COLLATE NOCASE END) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (CASE ((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))AND(x'e493fbd5'))  WHEN (vt1.c0 IN ()) THEN ((vt1.c0) ISNULL) ELSE vt1.c0 COLLATE NOCASE END))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE (((CASE ((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))AND(x'e493fbd5'))  WHEN (vt1.c0 IN ()) THEN ((vt1.c0) ISNULL) ELSE vt1.c0 COLLATE NOCASE END) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt0.c2, vt1.c0, t1.c51, rt0.c4, rt0.c1, rt0.c0 FROM vt0, t1, vt1, rt0 GROUP BY vt0.c2, vt1.c0, t1.c51, rt0.c4, rt0.c1, rt0.c0;
SELECT vt0.c2, vt1.c0, t1.c51, rt0.c4, rt0.c1, rt0.c0 FROM vt0, t1, vt1, rt0 GROUP BY vt0.c2, vt1.c0, t1.c51, rt0.c4, rt0.c1, rt0.c0 HAVING AVG(((((((((MAX(vt0.c0))AND(GROUP_CONCAT(COUNT(COUNT(*))))))AND(TOTAL(rt0.c1))))AND(AVG(vt0.c2))))AND(rt0.c3))) UNION ALL SELECT ALL vt0.c2, vt1.c0, t1.c51, rt0.c4, rt0.c1, rt0.c0 FROM vt0, t1, vt1, rt0 GROUP BY vt0.c2, vt1.c0, t1.c51, rt0.c4, rt0.c1, rt0.c0 HAVING (NOT (AVG(((((((((MAX(vt0.c0))AND(GROUP_CONCAT(COUNT(COUNT(*))))))AND(TOTAL(rt0.c1))))AND(AVG(vt0.c2))))AND(rt0.c3))))) UNION ALL SELECT vt0.c2, vt1.c0, t1.c51, rt0.c4, rt0.c1, rt0.c0 FROM vt0, t1, vt1, rt0 GROUP BY vt0.c2, vt1.c0, t1.c51, rt0.c4, rt0.c1, rt0.c0 HAVING ((AVG(((((((((MAX(vt0.c0))AND(GROUP_CONCAT(COUNT(COUNT(*))))))AND(TOTAL(rt0.c1))))AND(AVG(vt0.c2))))AND(rt0.c3)))) ISNULL);
SELECT * FROM rt0 RIGHT OUTER JOIN vt0 ON ((((rt0.c1)!=(vt0.c2)))>((((rt0.c3))>=((vt0.c0)))));
SELECT * FROM rt0 RIGHT OUTER JOIN vt0 ON ((((rt0.c1)<>(vt0.c2)))>((((rt0.c3))>=((vt0.c0))))) WHERE (CAST(CAST(vt0.c0 AS NUMERIC) AS TEXT)) UNION ALL SELECT ALL * FROM rt0 RIGHT OUTER JOIN vt0 ON ((((rt0.c1)!=(vt0.c2)))>((((rt0.c3))>=((vt0.c0))))) WHERE ((NOT (CAST(CAST(vt0.c0 AS NUMERIC) AS TEXT)))) UNION ALL SELECT * FROM rt0 RIGHT OUTER JOIN vt0 ON ((((rt0.c1)!=(vt0.c2)))>((((rt0.c3))>=((vt0.c0))))) WHERE (((CAST(CAST(vt0.c0 AS NUMERIC) AS TEXT)) ISNULL));
SELECT * FROM rt0 RIGHT OUTER JOIN vt0 ON ((((rt0.c1)!=(vt0.c2)))>((((rt0.c3))>=((vt0.c0)))));
SELECT DISTINCT rt0.c3 FROM rt0, vt1;
SELECT DISTINCT rt0.c3 FROM rt0, vt1 WHERE ((((rt0.c2 IN ())) BETWEEN (CASE WHEN rt0.c3 THEN x'' WHEN '-157322823' THEN '0.0' WHEN NULL THEN vt1.c0 ELSE rt0.c1 END) AND (((vt1.c0)>=(rt0.c2))))) UNION SELECT DISTINCT rt0.c3 FROM rt0, vt1 WHERE ((NOT ((((rt0.c2 IN ())) BETWEEN (CASE WHEN rt0.c3 THEN x'' WHEN '-157322823' THEN '0.0' WHEN NULL THEN vt1.c0 ELSE rt0.c1 END) AND (((vt1.c0)>=(rt0.c2))))))) UNION SELECT DISTINCT rt0.c3 FROM rt0, vt1 WHERE ((((((rt0.c2 IN ())) BETWEEN (CASE WHEN rt0.c3 THEN x'' WHEN '-157322823' THEN '0.0' WHEN NULL THEN vt1.c0 ELSE rt0.c1 END) AND (((vt1.c0)>=(rt0.c2))))) ISNULL));
SELECT DISTINCT rt0.c3 FROM rt0, vt1;
SELECT vt0.c1, rt0.c1, rt0.c0, t1.c51, vt0.c0, vt0.c2, rt0.c4, rt0.c2, vt1.c0, rt0.c3 FROM t1, rt0, vt1, vt0 GROUP BY vt0.c1, rt0.c1, rt0.c0, t1.c51, vt0.c0, vt0.c2, rt0.c4, rt0.c2, vt1.c0, rt0.c3;
SELECT ALL vt0.c1, rt0.c1, rt0.c0, t1.c51, vt0.c0, vt0.c2, rt0.c4, rt0.c2, vt1.c0, rt0.c3 FROM t1, rt0 NOT INDEXED, vt1, vt0 WHERE ((NOT (rt0.c3))) GROUP BY vt0.c1, rt0.c1, rt0.c0, t1.c51, vt0.c0, vt0.c2, rt0.c4, rt0.c2, vt1.c0, rt0.c3 UNION SELECT ALL vt0.c1, rt0.c1, rt0.c0, t1.c51, vt0.c0, vt0.c2, rt0.c4, rt0.c2, vt1.c0, rt0.c3 FROM t1, rt0, vt1, vt0 WHERE ((NOT ((NOT (rt0.c3))))) GROUP BY vt0.c1, rt0.c1, rt0.c0, t1.c51, vt0.c0, vt0.c2, rt0.c4, rt0.c2, vt1.c0, rt0.c3 UNION SELECT vt0.c1, rt0.c1, rt0.c0, t1.c51, vt0.c0, vt0.c2, rt0.c4, rt0.c2, vt1.c0, rt0.c3 FROM t1, rt0, vt1, vt0 WHERE ((((NOT (rt0.c3))) ISNULL)) GROUP BY vt0.c1, rt0.c1, rt0.c0, t1.c51, vt0.c0, vt0.c2, rt0.c4, rt0.c2, vt1.c0, rt0.c3;
SELECT vt0.c1, rt0.c1, rt0.c0, t1.c51, vt0.c0, vt0.c2, rt0.c4, rt0.c2, vt1.c0, rt0.c3 FROM t1, rt0, vt1, vt0 GROUP BY vt0.c1, rt0.c1, rt0.c0, t1.c51, vt0.c0, vt0.c2, rt0.c4, rt0.c2, vt1.c0, rt0.c3;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING COUNT(*) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING COUNT(*) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL t1.c51 FROM t1;
SELECT ALL t1.c51 FROM t1 WHERE (CASE WHEN CAST(t1.c51 AS INTEGER) THEN (t1.c51 IN ()) END) UNION ALL SELECT t1.c51 FROM t1 WHERE ((NOT (CASE WHEN CAST(t1.c51 AS INTEGER) THEN (t1.c51 IN ()) END))) UNION ALL SELECT ALL t1.c51 FROM t1 WHERE (((CASE WHEN CAST(t1.c51 AS INTEGER) THEN (t1.c51 IN ()) END) ISNULL));
SELECT ALL t1.c51 FROM t1;
SELECT DISTINCT * FROM rt0, vt0;
SELECT DISTINCT * FROM rt0, vt0 WHERE ((('') BETWEEN (x'66ca' COLLATE RTRIM) AND (RTRIM(rt0.c1)))) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE ((NOT ((('') BETWEEN (x'66ca' COLLATE RTRIM) AND (RTRIM(rt0.c1)))))) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE ((((('') BETWEEN (x'66ca' COLLATE RTRIM) AND (RTRIM(rt0.c1)))) ISNULL));
SELECT DISTINCT * FROM rt0, vt0;
SELECT t1.c51 FROM t1 GROUP BY t1.c51;
SELECT ALL t1.c51 FROM t1 WHERE (CASE ((t1.c51) NOT NULL)  WHEN (((t1.c51)) NOT BETWEEN ((t1.c51)) AND (('0.14986687668049437'))) THEN (NOT (0.05753580703531502)) END) GROUP BY t1.c51 UNION SELECT t1.c51 FROM t1 WHERE ((NOT (CASE ((t1.c51) NOT NULL)  WHEN (((t1.c51)) NOT BETWEEN ((t1.c51)) AND (('0.14986687668049437'))) THEN (NOT (0.05753580703531502)) END))) GROUP BY t1.c51 UNION SELECT t1.c51 FROM t1 WHERE (((CASE ((t1.c51) NOT NULL)  WHEN (((t1.c51)) NOT BETWEEN ((t1.c51)) AND (('0.14986687668049437'))) THEN (NOT (0.05753580703531502)) END) ISNULL)) GROUP BY t1.c51;
SELECT t1.c51 FROM t1 GROUP BY t1.c51;
SELECT ALL vt1.c0, vt0.c2 FROM vt1, vt0, t1 GROUP BY vt1.c0, vt0.c2;
SELECT vt1.c0, vt0.c2 FROM vt1, vt0, t1 GROUP BY vt1.c0, vt0.c2 HAVING SUM(SUM(COUNT(*))) UNION ALL SELECT ALL vt1.c0, vt0.c2 FROM vt1, vt0, t1 GROUP BY vt1.c0, vt0.c2 HAVING (NOT (SUM(SUM(COUNT(*))))) UNION ALL SELECT ALL vt1.c0, vt0.c2 FROM vt1, vt0, t1 GROUP BY vt1.c0, vt0.c2 HAVING ((SUM(SUM(COUNT(*)))) ISNULL);
SELECT ALL SUM(UPPER(rt0.c1 COLLATE NOCASE)) FROM vt0, rt0 ORDER BY COALESCE(((0x4374c5dd) BETWEEN (rt0.c1) AND (vt0.c2)), (((vt0.c0)) BETWEEN ((NULL)) AND ((vt0.c1))), ((rt0.c4)+(vt0.c0)), vt0.c0 COLLATE BINARY)  NULLS FIRST;
SELECT ALL * FROM t1, vt0 LEFT OUTER JOIN rt0 ON ((CASE WHEN '-,A*lM%' THEN vt0.c2 END)LIKE(((0.8468167188850003) BETWEEN (vt0.c0) AND (t1.c51)))) RIGHT OUTER JOIN vt1 ON (((rt0.c3) NOT BETWEEN (0.8678559419798283) AND (rt0.c3)) IN ());
SELECT ALL * FROM t1, vt0 LEFT OUTER JOIN rt0 ON ((CASE WHEN '-,A*lM%' THEN vt0.c2 END)LIKE(((0.8468167188850003) BETWEEN (vt0.c0) AND (t1.c51)))) RIGHT OUTER JOIN vt1 ON (((rt0.c3) NOT BETWEEN (0.8678559419798283) AND (rt0.c3)) IN ()) WHERE ((- ((NOT (vt0.c1))))) UNION ALL SELECT * FROM t1, vt0 LEFT OUTER JOIN rt0 ON ((CASE WHEN '-,A*lM%' THEN vt0.c2 END)LIKE(((0.8468167188850003) BETWEEN (vt0.c0) AND (t1.c51)))) RIGHT OUTER JOIN vt1 ON (((rt0.c3) NOT BETWEEN (0.8678559419798283) AND (rt0.c3)) IN ()) WHERE ((NOT ((- ((NOT (vt0.c1))))))) UNION ALL SELECT * FROM t1, vt0 LEFT OUTER JOIN rt0 ON ((CASE WHEN '-,A*lM%' THEN vt0.c2 END)LIKE(((0.8468167188850003) BETWEEN (vt0.c0) AND (t1.c51)))) RIGHT OUTER JOIN vt1 ON (((rt0.c3) NOT BETWEEN (0.8678559419798283) AND (rt0.c3)) IN ()) WHERE ((((- ((NOT (vt0.c1))))) ISNULL));
SELECT ALL * FROM t1, vt0 LEFT OUTER JOIN rt0 ON ((CASE WHEN '-,A*lM%' THEN vt0.c2 END)LIKE(((0.8468167188850003) BETWEEN (vt0.c0) AND (t1.c51)))) RIGHT OUTER JOIN vt1 ON (((rt0.c3) NOT BETWEEN (0.8678559419798283) AND (rt0.c3)) IN ());
SELECT DISTINCT * FROM vt0, t1;
SELECT DISTINCT * FROM vt0, t1 WHERE ((((vt0.c0 IN ()))>(((0Xffffffffacb070d2)/(t1.c51))))) UNION SELECT DISTINCT * FROM vt0, t1 WHERE ((NOT ((((vt0.c0 IN ()))>(((0Xffffffffacb070d2)/(t1.c51))))))) UNION SELECT DISTINCT * FROM vt0, t1 WHERE ((((((vt0.c0 IN ()))>(((0Xffffffffacb070d2)/(t1.c51))))) ISNULL));
SELECT DISTINCT * FROM vt0, t1;
SELECT rt0.c1 FROM t1, vt1, rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM t1, vt1, rt0 WHERE (rt0.c4) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM t1, vt1, rt0 WHERE ((NOT (rt0.c4))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM t1, vt1, rt0 WHERE (((rt0.c4) ISNULL)) GROUP BY rt0.c1;
SELECT rt0.c1 FROM t1, vt1, rt0 GROUP BY rt0.c1;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING MIN((((COUNT(vt0.c2)))>((vt0.c2)))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (MIN((((COUNT(vt0.c2)))>((vt0.c2)))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((MIN((((COUNT(vt0.c2)))>((vt0.c2))))) ISNULL);
SELECT ALL rt0.c1, rt0.c0, rt0.c3, rt0.c4 FROM rt0;
SELECT rt0.c1, rt0.c0, rt0.c3, rt0.c4 FROM rt0 WHERE (rt0.c4) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c3, rt0.c4 FROM rt0 WHERE ((NOT (rt0.c4))) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c3, rt0.c4 FROM rt0 WHERE (((rt0.c4) ISNULL));
SELECT ALL rt0.c1, rt0.c0, rt0.c3, rt0.c4 FROM rt0;
SELECT DISTINCT vt0.c2 FROM vt0, t1 LEFT OUTER JOIN rt0 ON ((vt1.c0)<<((('|')>(vt1.c0)))) CROSS JOIN vt1 ON ((t1.c51)IS NOT(NULL));
SELECT rt0.c0, vt0.c2, vt0.c0, t1.c51 FROM vt1, t1, rt0, vt0 GROUP BY rt0.c0, vt0.c2, vt0.c0, t1.c51;
SELECT ALL rt0.c0, vt0.c2, vt0.c0, t1.c51 FROM vt1, t1, rt0, vt0 WHERE ((((((vt0.c2, vt0.c2, rt0.c0))<>((rt0.c1, rt0.c0, vt0.c0))))>(((rt0.c0) NOT NULL)))) GROUP BY rt0.c0, vt0.c2, vt0.c0, t1.c51 UNION SELECT ALL rt0.c0, vt0.c2, vt0.c0, t1.c51 FROM vt1, t1, rt0, vt0 WHERE ((NOT ((((((vt0.c2, vt0.c2, rt0.c0))!=((rt0.c1, rt0.c0, vt0.c0))))>(((rt0.c0) NOT NULL)))))) GROUP BY rt0.c0, vt0.c2, vt0.c0, t1.c51 UNION SELECT ALL rt0.c0, vt0.c2, vt0.c0, t1.c51 FROM vt1, t1, rt0, vt0 WHERE ((((((((vt0.c2, vt0.c2, rt0.c0))<>((rt0.c1, rt0.c0, vt0.c0))))>(((rt0.c0) NOT NULL)))) ISNULL)) GROUP BY rt0.c0, vt0.c2, vt0.c0, t1.c51;
SELECT rt0.c0, vt0.c2, vt0.c0, t1.c51 FROM vt1, t1, rt0, vt0 GROUP BY rt0.c0, vt0.c2, vt0.c0, t1.c51;
SELECT ALL rt0.c3, vt0.c1, rt0.c1, vt1.c0, vt0.c0, t1.c51, vt0.c2, rt0.c0, rt0.c2 FROM t1, vt1, rt0, vt0 GROUP BY rt0.c3, vt0.c1, rt0.c1, vt1.c0, vt0.c0, t1.c51, vt0.c2, rt0.c0, rt0.c2;
SELECT rt0.c3, vt0.c1, rt0.c1, vt1.c0, vt0.c0, t1.c51, vt0.c2, rt0.c0, rt0.c2 FROM t1, vt1, rt0, vt0 GROUP BY rt0.c3, vt0.c1, rt0.c1, vt1.c0, vt0.c0, t1.c51, vt0.c2, rt0.c0, rt0.c2 HAVING COUNT(*) UNION ALL SELECT rt0.c3, vt0.c1, rt0.c1, vt1.c0, vt0.c0, t1.c51, vt0.c2, rt0.c0, rt0.c2 FROM t1, vt1, rt0, vt0 GROUP BY rt0.c3, vt0.c1, rt0.c1, vt1.c0, vt0.c0, t1.c51, vt0.c2, rt0.c0, rt0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c3, vt0.c1, rt0.c1, vt1.c0, vt0.c0, t1.c51, vt0.c2, rt0.c0, rt0.c2 FROM t1, vt1, rt0, vt0 GROUP BY rt0.c3, vt0.c1, rt0.c1, vt1.c0, vt0.c0, t1.c51, vt0.c2, rt0.c0, rt0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c3, vt0.c1, rt0.c1, vt1.c0, vt0.c0, t1.c51, vt0.c2, rt0.c0, rt0.c2 FROM t1, vt1, rt0, vt0 GROUP BY rt0.c3, vt0.c1, rt0.c1, vt1.c0, vt0.c0, t1.c51, vt0.c2, rt0.c0, rt0.c2;
SELECT rt0.c3, vt0.c1, rt0.c1, vt1.c0, vt0.c0, t1.c51, vt0.c2, rt0.c0, rt0.c2 FROM t1, vt1, rt0, vt0 GROUP BY rt0.c3, vt0.c1, rt0.c1, vt1.c0, vt0.c0, t1.c51, vt0.c2, rt0.c0, rt0.c2 HAVING COUNT(*) UNION ALL SELECT rt0.c3, vt0.c1, rt0.c1, vt1.c0, vt0.c0, t1.c51, vt0.c2, rt0.c0, rt0.c2 FROM t1, vt1, rt0, vt0 GROUP BY rt0.c3, vt0.c1, rt0.c1, vt1.c0, vt0.c0, t1.c51, vt0.c2, rt0.c0, rt0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c3, vt0.c1, rt0.c1, vt1.c0, vt0.c0, t1.c51, vt0.c2, rt0.c0, rt0.c2 FROM t1, vt1, rt0, vt0 GROUP BY rt0.c3, vt0.c1, rt0.c1, vt1.c0, vt0.c0, t1.c51, vt0.c2, rt0.c0, rt0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c3, vt0.c1, rt0.c1, vt1.c0, vt0.c0, t1.c51, vt0.c2, rt0.c0, rt0.c2 FROM t1, vt1, rt0, vt0 GROUP BY rt0.c3, vt0.c1, rt0.c1, vt1.c0, vt0.c0, t1.c51, vt0.c2, rt0.c0, rt0.c2;
SELECT MAX((rt0.c2 IN ('-490595179')) COLLATE NOCASE) FROM rt0, vt1, t1 ORDER BY ((CAST(rt0.c0 AS BLOB))<>(CAST(vt1.c0 AS INTEGER)))  NULLS FIRST;
SELECT * FROM vt1 FULL OUTER JOIN rt0 ON (((rt0.c4 IN ())) BETWEEN (CASE rt0.c1  WHEN 0.8077416842736049 THEN rt0.c4 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c3 THEN vt0.c2 WHEN rt0.c3 THEN rt0.c4 END) AND (0.5797335477955332)) INNER JOIN vt0 ON ((((rt0.c1)||(vt1.c0)))+(((NULL) BETWEEN ('657017686') AND (rt0.c0))));
SELECT DISTINCT vt1.c0, vt0.c1, vt0.c0, vt0.c2, t1.c51 FROM t1, vt0 RIGHT OUTER JOIN vt1 ON t1.c51;
SELECT DISTINCT vt1.c0, vt0.c1, vt0.c0, vt0.c2, t1.c51 FROM t1, vt0 RIGHT OUTER JOIN vt1 ON t1.c51 WHERE (CASE DATE(vt0.c0, vt1.c0, t1.c51)  WHEN CASE vt0.c0  WHEN x'' THEN t1.c51 END THEN ((vt0.c0)||(vt1.c0)) ELSE (vt0.c1 IN ()) END) UNION SELECT DISTINCT vt1.c0, vt0.c1, vt0.c0, vt0.c2, t1.c51 FROM t1, vt0 RIGHT OUTER JOIN vt1 ON t1.c51 WHERE ((NOT (CASE DATE(vt0.c0, vt1.c0, t1.c51)  WHEN CASE vt0.c0  WHEN x'' THEN t1.c51 END THEN ((vt0.c0)||(vt1.c0)) ELSE (vt0.c1 IN ()) END))) UNION SELECT DISTINCT vt1.c0, vt0.c1, vt0.c0, vt0.c2, t1.c51 FROM t1, vt0 RIGHT OUTER JOIN vt1 ON t1.c51 WHERE (((CASE DATE(vt0.c0, vt1.c0, t1.c51)  WHEN CASE vt0.c0  WHEN x'' THEN t1.c51 END THEN ((vt0.c0)||(vt1.c0)) ELSE (vt0.c1 IN ()) END) ISNULL));
SELECT DISTINCT vt1.c0, vt0.c1, vt0.c0, vt0.c2, t1.c51 FROM t1, vt0 RIGHT OUTER JOIN vt1 ON t1.c51;
SELECT ALL rt0.c4, rt0.c2, vt1.c0, rt0.c1, rt0.c0 FROM rt0, vt1 GROUP BY rt0.c4, rt0.c2, vt1.c0, rt0.c1, rt0.c0;
SELECT rt0.c4, rt0.c2, vt1.c0, rt0.c1, rt0.c0 FROM rt0, vt1 WHERE (CASE rt0.c3  WHEN (+ (rt0.c0)) THEN ((((x'9178')AND(rt0.c4)))OR(rt0.c1)) END) GROUP BY rt0.c4, rt0.c2, vt1.c0, rt0.c1, rt0.c0 UNION SELECT ALL rt0.c4, rt0.c2, vt1.c0, rt0.c1, rt0.c0 FROM rt0, vt1 WHERE ((NOT (CASE rt0.c3  WHEN (+ (rt0.c0)) THEN ((((x'9178')AND(rt0.c4)))OR(rt0.c1)) END))) GROUP BY rt0.c4, rt0.c2, vt1.c0, rt0.c1, rt0.c0 UNION SELECT rt0.c4, rt0.c2, vt1.c0, rt0.c1, rt0.c0 FROM rt0, vt1 WHERE (((CASE rt0.c3  WHEN (+ (rt0.c0)) THEN ((((x'9178')AND(rt0.c4)))OR(rt0.c1)) END) ISNULL)) GROUP BY rt0.c4, rt0.c2, vt1.c0, rt0.c1, rt0.c0;
SELECT ALL rt0.c4, rt0.c2, vt1.c0, rt0.c1, rt0.c0 FROM rt0, vt1 GROUP BY rt0.c4, rt0.c2, vt1.c0, rt0.c1, rt0.c0;
SELECT vt0.c1, rt0.c1, rt0.c0, vt0.c2, t1.c51, rt0.c2, rt0.c3, vt0.c0, rt0.c4 FROM vt0, rt0, t1 GROUP BY vt0.c1, rt0.c1, rt0.c0, vt0.c2, t1.c51, rt0.c2, rt0.c3, vt0.c0, rt0.c4;
SELECT ALL vt0.c1, rt0.c1, rt0.c0, vt0.c2, t1.c51, rt0.c2, rt0.c3, vt0.c0, rt0.c4 FROM vt0, rt0, t1 GROUP BY vt0.c1, rt0.c1, rt0.c0, vt0.c2, t1.c51, rt0.c2, rt0.c3, vt0.c0, rt0.c4 HAVING COUNT(AVG(rt0.c1)) UNION ALL SELECT vt0.c1, rt0.c1, rt0.c0, vt0.c2, t1.c51, rt0.c2, rt0.c3, vt0.c0, rt0.c4 FROM vt0, rt0, t1 GROUP BY vt0.c1, rt0.c1, rt0.c0, vt0.c2, t1.c51, rt0.c2, rt0.c3, vt0.c0, rt0.c4 HAVING (NOT (COUNT(AVG(rt0.c1)))) UNION ALL SELECT vt0.c1, rt0.c1, rt0.c0, vt0.c2, t1.c51, rt0.c2, rt0.c3, vt0.c0, rt0.c4 FROM vt0, rt0, t1 GROUP BY vt0.c1, rt0.c1, rt0.c0, vt0.c2, t1.c51, rt0.c2, rt0.c3, vt0.c0, rt0.c4 HAVING ((COUNT(AVG(rt0.c1))) ISNULL);
SELECT * FROM vt1, t1, vt0 LEFT OUTER JOIN rt0 ON COALESCE(CASE WHEN rt0.c0 THEN rt0.c1 ELSE t1.c51 END, rt0.c2 COLLATE NOCASE);
SELECT ALL * FROM vt1, t1, vt0 LEFT OUTER JOIN rt0 ON COALESCE(CASE WHEN rt0.c0 THEN rt0.c1 ELSE t1.c51 END, rt0.c2 COLLATE NOCASE) WHERE (((((rt0.c4)<(vt0.c0))) NOT BETWEEN (CASE WHEN vt0.c0 THEN vt0.c0 END) AND (CAST(rt0.c2 AS NUMERIC)))) UNION ALL SELECT * FROM vt1, t1, vt0 LEFT OUTER JOIN rt0 ON COALESCE(CASE WHEN rt0.c0 THEN rt0.c1 ELSE t1.c51 END, rt0.c2 COLLATE NOCASE) WHERE ((NOT (((((rt0.c4)<(vt0.c0))) NOT BETWEEN (CASE WHEN vt0.c0 THEN vt0.c0 END) AND (CAST(rt0.c2 AS NUMERIC)))))) UNION ALL SELECT * FROM vt1, t1, vt0 LEFT OUTER JOIN rt0 ON COALESCE(CASE WHEN rt0.c0 THEN rt0.c1 ELSE t1.c51 END, rt0.c2 COLLATE NOCASE) WHERE (((((((rt0.c4)<(vt0.c0))) NOT BETWEEN (CASE WHEN vt0.c0 THEN vt0.c0 END) AND (CAST(rt0.c2 AS NUMERIC)))) ISNULL));
SELECT * FROM vt1, t1, vt0 LEFT OUTER JOIN rt0 ON COALESCE(CASE WHEN rt0.c0 THEN rt0.c1 ELSE t1.c51 END, rt0.c2 COLLATE NOCASE);
SELECT DISTINCT t1.c51 FROM t1;
SELECT DISTINCT t1.c51 FROM t1 WHERE (CAST(x'' AS TEXT)) UNION SELECT DISTINCT t1.c51 FROM t1 WHERE ((NOT (CAST(x'' AS TEXT)))) UNION SELECT DISTINCT t1.c51 FROM t1 WHERE (((CAST(x'' AS TEXT)) ISNULL));
SELECT DISTINCT t1.c51 FROM t1;
SELECT ALL rt0.c3 FROM rt0 GROUP BY rt0.c3;
SELECT ALL rt0.c3 FROM rt0 WHERE (CAST((((x'ca5d', rt0.c1, rt0.c4))<=((rt0.c4, rt0.c3, x''))) AS BLOB)) GROUP BY rt0.c3 UNION SELECT ALL rt0.c3 FROM rt0 WHERE ((NOT (CAST((((x'ca5d', rt0.c1, rt0.c4))<=((rt0.c4, rt0.c3, x''))) AS BLOB)))) GROUP BY rt0.c3 UNION SELECT rt0.c3 FROM rt0 WHERE (((CAST((((x'ca5d', rt0.c1, rt0.c4))<=((rt0.c4, rt0.c3, x''))) AS BLOB)) ISNULL)) GROUP BY rt0.c3;
SELECT ALL rt0.c3 FROM rt0 GROUP BY rt0.c3;
SELECT ALL vt0.c2, vt0.c1, rt0.c0, vt0.c0, rt0.c2, rt0.c1, vt1.c0, rt0.c4, t1.c51 FROM vt1, vt0, t1 NATURAL JOIN rt0 GROUP BY vt0.c2, vt0.c1, rt0.c0, vt0.c0, rt0.c2, rt0.c1, vt1.c0, rt0.c4, t1.c51;
SELECT ALL vt0.c2, vt0.c1, rt0.c0, vt0.c0, rt0.c2, rt0.c1, vt1.c0, rt0.c4, t1.c51 FROM vt1, vt0, t1 NATURAL JOIN rt0 GROUP BY vt0.c2, vt0.c1, rt0.c0, vt0.c0, rt0.c2, rt0.c1, vt1.c0, rt0.c4, t1.c51 HAVING ((((((((COUNT(COUNT(*)))OR((((MAX(t1.c51), rt0.c4, rt0.c0, vt0.c2, COUNT(*))) BETWEEN ((rt0.c0, vt0.c0, MIN(COUNT(rt0.c1)), AVG(AVG(MIN(TOTAL(AVG(MAX(vt1.c0)))))), TOTAL(MIN(COUNT(*))))) AND ((vt1.c0, vt1.c0, GROUP_CONCAT(COUNT(t1.c51)), COUNT(*), TOTAL(AVG(AVG(MIN(TOTAL(t1.c51)))))))))))OR(GROUP_CONCAT(COUNT(MIN(rt0.c3))))))AND(rt0.c3 COLLATE BINARY)))OR(TOTAL(rt0.c4))) UNION ALL SELECT vt0.c2, vt0.c1, rt0.c0, vt0.c0, rt0.c2, rt0.c1, vt1.c0, rt0.c4, t1.c51 FROM vt1, vt0, t1 NATURAL JOIN rt0 GROUP BY vt0.c2, vt0.c1, rt0.c0, vt0.c0, rt0.c2, rt0.c1, vt1.c0, rt0.c4, t1.c51 HAVING (NOT (((((((((COUNT(COUNT(*)))OR((((MAX(t1.c51), rt0.c4, rt0.c0, vt0.c2, COUNT(*))) BETWEEN ((rt0.c0, vt0.c0, MIN(COUNT(rt0.c1)), AVG(AVG(MIN(TOTAL(AVG(MAX(vt1.c0)))))), TOTAL(MIN(COUNT(*))))) AND ((vt1.c0, vt1.c0, GROUP_CONCAT(COUNT(t1.c51)), COUNT(*), TOTAL(AVG(AVG(MIN(TOTAL(t1.c51)))))))))))OR(GROUP_CONCAT(COUNT(MIN(rt0.c3))))))AND(rt0.c3 COLLATE BINARY)))OR(TOTAL(rt0.c4))))) UNION ALL SELECT vt0.c2, vt0.c1, rt0.c0, vt0.c0, rt0.c2, rt0.c1, vt1.c0, rt0.c4, t1.c51 FROM vt1, vt0, t1 NATURAL JOIN rt0 GROUP BY vt0.c2, vt0.c1, rt0.c0, vt0.c0, rt0.c2, rt0.c1, vt1.c0, rt0.c4, t1.c51 HAVING ((((((((((COUNT(COUNT(*)))OR((((MAX(t1.c51), rt0.c4, rt0.c0, vt0.c2, COUNT(*))) BETWEEN ((rt0.c0, vt0.c0, MIN(COUNT(rt0.c1)), AVG(AVG(MIN(TOTAL(AVG(MAX(vt1.c0)))))), TOTAL(MIN(COUNT(*))))) AND ((vt1.c0, vt1.c0, GROUP_CONCAT(COUNT(t1.c51)), COUNT(*), TOTAL(AVG(AVG(MIN(TOTAL(t1.c51)))))))))))OR(GROUP_CONCAT(COUNT(MIN(rt0.c3))))))AND(rt0.c3 COLLATE BINARY)))OR(TOTAL(rt0.c4)))) ISNULL);
SELECT * FROM t1, vt0 FULL OUTER JOIN rt0 ON ((((vt1.c0)|(vt0.c1))) NOT BETWEEN (((rt0.c2) IS FALSE)) AND (((((vt0.c2)OR(vt0.c1)))OR(rt0.c1)))) RIGHT OUTER JOIN vt1 ON ((((rt0.c0)/(vt0.c1)))||(((vt0.c2) IS TRUE)));
SELECT DISTINCT rt0.c3, vt0.c2, rt0.c0, rt0.c2, rt0.c1, vt0.c0 FROM rt0, vt0, t1;
SELECT DISTINCT rt0.c3, vt0.c2, rt0.c0, rt0.c2, rt0.c1, vt0.c0 FROM rt0, vt0, t1 WHERE (((json_object(t1.c51, '7b')) BETWEEN ((NOT (rt0.c4))) AND ((NOT (rt0.c2))))) UNION SELECT DISTINCT rt0.c3, vt0.c2, rt0.c0, rt0.c2, rt0.c1, vt0.c0 FROM rt0, vt0, t1 WHERE ((NOT (((json_object(t1.c51, '7b')) BETWEEN ((NOT (rt0.c4))) AND ((NOT (rt0.c2))))))) UNION SELECT DISTINCT rt0.c3, vt0.c2, rt0.c0, rt0.c2, rt0.c1, vt0.c0 FROM rt0, vt0, t1 WHERE (((((json_object(t1.c51, '7b')) BETWEEN ((NOT (rt0.c4))) AND ((NOT (rt0.c2))))) ISNULL));
SELECT DISTINCT rt0.c3, vt0.c2, rt0.c0, rt0.c2, rt0.c1, vt0.c0 FROM rt0, vt0, t1;
SELECT ALL t1.c51 FROM t1 GROUP BY t1.c51;
SELECT t1.c51 FROM t1 WHERE (((((((((((t1.c51)*(t1.c51)))AND(1692474606)))OR((((t1.c51, t1.c51, t1.c51))<((t1.c51, t1.c51, t1.c51))))))OR(((t1.c51)<>(t1.c51)))))AND(((t1.c51) ISNULL)))) GROUP BY t1.c51 UNION SELECT ALL t1.c51 FROM t1 WHERE ((NOT (((((((((((t1.c51)*(t1.c51)))AND(1692474606)))OR((((t1.c51, t1.c51, t1.c51))<((t1.c51, t1.c51, t1.c51))))))OR(((t1.c51)<>(t1.c51)))))AND(((t1.c51) ISNULL)))))) GROUP BY t1.c51 UNION SELECT t1.c51 FROM t1 WHERE (((((((((((((t1.c51)*(t1.c51)))AND(1692474606)))OR((((t1.c51, t1.c51, t1.c51))<((t1.c51, t1.c51, t1.c51))))))OR(((t1.c51)!=(t1.c51)))))AND(((t1.c51) ISNULL)))) ISNULL)) GROUP BY t1.c51;
SELECT ALL t1.c51 FROM t1 GROUP BY t1.c51;
SELECT rt0.c4, rt0.c1, t1.c51 FROM rt0 RIGHT OUTER JOIN t1 ON CAST(NULL AS TEXT) GROUP BY rt0.c4, rt0.c1, t1.c51;
SELECT ALL rt0.c4, rt0.c1, t1.c51 FROM rt0 RIGHT OUTER JOIN t1 ON CAST(NULL AS TEXT) GROUP BY rt0.c4, rt0.c1, t1.c51 HAVING MIN('') UNION ALL SELECT rt0.c4, rt0.c1, t1.c51 FROM rt0 RIGHT OUTER JOIN t1 ON CAST(NULL AS TEXT) GROUP BY rt0.c4, rt0.c1, t1.c51 HAVING (NOT (MIN(''))) UNION ALL SELECT rt0.c4, rt0.c1, t1.c51 FROM rt0 RIGHT OUTER JOIN t1 ON CAST(NULL AS TEXT) GROUP BY rt0.c4, rt0.c1, t1.c51 HAVING ((MIN('')) ISNULL);
SELECT rt0.c4, rt0.c1, t1.c51 FROM rt0 RIGHT OUTER JOIN t1 ON CAST(NULL AS TEXT) GROUP BY rt0.c4, rt0.c1, t1.c51;
SELECT ALL rt0.c4, rt0.c1, t1.c51 FROM rt0 RIGHT OUTER JOIN t1 ON CAST(NULL AS TEXT) GROUP BY rt0.c4, rt0.c1, t1.c51 HAVING MIN('') UNION ALL SELECT rt0.c4, rt0.c1, t1.c51 FROM rt0 RIGHT OUTER JOIN t1 ON CAST(NULL AS TEXT) GROUP BY rt0.c4, rt0.c1, t1.c51 HAVING (NOT (MIN(''))) UNION ALL SELECT rt0.c4, rt0.c1, t1.c51 FROM rt0 RIGHT OUTER JOIN t1 ON CAST(NULL AS TEXT) GROUP BY rt0.c4, rt0.c1, t1.c51 HAVING ((MIN('')) ISNULL);
SELECT rt0.c4, rt0.c1, t1.c51 FROM rt0 RIGHT OUTER JOIN t1 ON CAST(NULL AS TEXT) GROUP BY rt0.c4, rt0.c1, t1.c51;
SELECT ALL rt0.c1, t1.c51, rt0.c2, vt0.c2, rt0.c4, vt0.c1, vt0.c0, vt1.c0 FROM rt0 NOT INDEXED, vt1, vt0, t1;
SELECT rt0.c1, t1.c51, rt0.c2, vt0.c2, rt0.c4, vt0.c1, vt0.c0, vt1.c0 FROM rt0, vt1, vt0, t1 WHERE (((vt0.c0)%(vt0.c0)) COLLATE RTRIM) UNION ALL SELECT rt0.c1, t1.c51, rt0.c2, vt0.c2, rt0.c4, vt0.c1, vt0.c0, vt1.c0 FROM rt0, vt1, vt0 NOT INDEXED, t1 WHERE ((NOT (((vt0.c0)%(vt0.c0)) COLLATE RTRIM))) UNION ALL SELECT rt0.c1, t1.c51, rt0.c2, vt0.c2, rt0.c4, vt0.c1, vt0.c0, vt1.c0 FROM rt0, vt1, vt0, t1 WHERE (((((vt0.c0)%(vt0.c0)) COLLATE RTRIM) ISNULL));
SELECT ALL rt0.c1, t1.c51, rt0.c2, vt0.c2, rt0.c4, vt0.c1, vt0.c0, vt1.c0 FROM rt0 NOT INDEXED, vt1, vt0, t1;
SELECT DISTINCT * FROM t1, rt0, vt0, vt1;
SELECT DISTINCT * FROM t1, rt0, vt0, vt1 WHERE ((((UPPER(rt0.c0)))<>((DATETIME(vt1.c0, x'', vt1.c0))))) UNION SELECT DISTINCT * FROM t1, rt0, vt0, vt1 WHERE ((NOT ((((UPPER(rt0.c0)))!=((DATETIME(vt1.c0, x'', vt1.c0))))))) UNION SELECT DISTINCT * FROM t1, rt0, vt0, vt1 WHERE ((((((UPPER(rt0.c0)))!=((DATETIME(vt1.c0, x'', vt1.c0))))) ISNULL));
SELECT DISTINCT * FROM t1, rt0, vt0, vt1;
SELECT vt0.c1, rt0.c2, vt0.c0, rt0.c1, vt0.c2, rt0.c4, t1.c51, rt0.c0, rt0.c3 FROM vt0 CROSS JOIN t1 ON json_array_length(vt0.c1) CROSS JOIN rt0 ON ((((vt0.c0)AND(vt0.c2))) BETWEEN (((rt0.c0) ISNULL)) AND (rt0.c2)) GROUP BY vt0.c1, rt0.c2, vt0.c0, rt0.c1, vt0.c2, rt0.c4, t1.c51, rt0.c0, rt0.c3;
SELECT ALL vt0.c1, rt0.c2, vt0.c0, rt0.c1, vt0.c2, rt0.c4, t1.c51, rt0.c0, rt0.c3 FROM vt0 CROSS JOIN t1 ON json_array_length(vt0.c1) CROSS JOIN rt0 ON ((((vt0.c0)AND(vt0.c2))) BETWEEN (((rt0.c0) ISNULL)) AND (rt0.c2)) WHERE ((((vt0.c1, rt0.c0, rt0.c1)) BETWEEN ((((((t1.c51)AND(vt0.c0)))AND(rt0.c1)), CASE WHEN rt0.c2 THEN '' END, rt0.c0 COLLATE RTRIM)) AND ((CASE WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c2 END, ((rt0.c0)>>(rt0.c3)), load_extension(rt0.c4))))) GROUP BY vt0.c1, rt0.c2, vt0.c0, rt0.c1, vt0.c2, rt0.c4, t1.c51, rt0.c0, rt0.c3 UNION SELECT vt0.c1, rt0.c2, vt0.c0, rt0.c1, vt0.c2, rt0.c4, t1.c51, rt0.c0, rt0.c3 FROM vt0 CROSS JOIN t1 ON json_array_length(vt0.c1) CROSS JOIN rt0 ON ((((vt0.c0)AND(vt0.c2))) BETWEEN (((rt0.c0) ISNULL)) AND (rt0.c2)) WHERE ((NOT ((((vt0.c1, rt0.c0, rt0.c1)) BETWEEN ((((((t1.c51)AND(vt0.c0)))AND(rt0.c1)), CASE WHEN rt0.c2 THEN '' END, rt0.c0 COLLATE RTRIM)) AND ((CASE WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c2 END, ((rt0.c0)>>(rt0.c3)), load_extension(rt0.c4))))))) GROUP BY vt0.c1, rt0.c2, vt0.c0, rt0.c1, vt0.c2, rt0.c4, t1.c51, rt0.c0, rt0.c3 UNION SELECT vt0.c1, rt0.c2, vt0.c0, rt0.c1, vt0.c2, rt0.c4, t1.c51, rt0.c0, rt0.c3 FROM vt0 CROSS JOIN t1 ON json_array_length(vt0.c1) CROSS JOIN rt0 ON ((((vt0.c0)AND(vt0.c2))) BETWEEN (((rt0.c0) ISNULL)) AND (rt0.c2)) WHERE ((((((vt0.c1, rt0.c0, rt0.c1)) BETWEEN ((((((t1.c51)AND(vt0.c0)))AND(rt0.c1)), CASE WHEN rt0.c2 THEN '' END, rt0.c0 COLLATE RTRIM)) AND ((CASE WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c2 END, ((rt0.c0)>>(rt0.c3)), load_extension(rt0.c4))))) ISNULL)) GROUP BY vt0.c1, rt0.c2, vt0.c0, rt0.c1, vt0.c2, rt0.c4, t1.c51, rt0.c0, rt0.c3;
SELECT vt0.c1, rt0.c2, vt0.c0, rt0.c1, vt0.c2, rt0.c4, t1.c51, rt0.c0, rt0.c3 FROM vt0 CROSS JOIN t1 ON json_array_length(vt0.c1) CROSS JOIN rt0 ON ((((vt0.c0)AND(vt0.c2))) BETWEEN (((rt0.c0) ISNULL)) AND (rt0.c2)) GROUP BY vt0.c1, rt0.c2, vt0.c0, rt0.c1, vt0.c2, rt0.c4, t1.c51, rt0.c0, rt0.c3;
SELECT vt1.c0, rt0.c3, rt0.c4, rt0.c2, rt0.c0 FROM rt0, vt1 GROUP BY vt1.c0, rt0.c3, rt0.c4, rt0.c2, rt0.c0;
SELECT ALL vt1.c0, rt0.c3, rt0.c4, rt0.c2, rt0.c0 FROM rt0, vt1 GROUP BY vt1.c0, rt0.c3, rt0.c4, rt0.c2, rt0.c0 HAVING COUNT(IFNULL(DISTINCT rt0.c1, rt0.c2)) UNION ALL SELECT vt1.c0, rt0.c3, rt0.c4, rt0.c2, rt0.c0 FROM rt0, vt1 GROUP BY vt1.c0, rt0.c3, rt0.c4, rt0.c2, rt0.c0 HAVING (NOT (COUNT(IFNULL(DISTINCT rt0.c1, rt0.c2)))) UNION ALL SELECT vt1.c0, rt0.c3, rt0.c4, rt0.c2, rt0.c0 FROM rt0, vt1 GROUP BY vt1.c0, rt0.c3, rt0.c4, rt0.c2, rt0.c0 HAVING ((COUNT(IFNULL(DISTINCT rt0.c1, rt0.c2))) ISNULL);
SELECT vt1.c0, rt0.c3, rt0.c4, rt0.c2, rt0.c0 FROM rt0, vt1 GROUP BY vt1.c0, rt0.c3, rt0.c4, rt0.c2, rt0.c0;
SELECT ALL vt1.c0, rt0.c3, rt0.c4, rt0.c2, rt0.c0 FROM rt0, vt1 GROUP BY vt1.c0, rt0.c3, rt0.c4, rt0.c2, rt0.c0 HAVING COUNT(IFNULL(DISTINCT rt0.c1, rt0.c2)) UNION ALL SELECT vt1.c0, rt0.c3, rt0.c4, rt0.c2, rt0.c0 FROM rt0, vt1 GROUP BY vt1.c0, rt0.c3, rt0.c4, rt0.c2, rt0.c0 HAVING (NOT (COUNT(IFNULL(DISTINCT rt0.c1, rt0.c2)))) UNION ALL SELECT vt1.c0, rt0.c3, rt0.c4, rt0.c2, rt0.c0 FROM rt0, vt1 GROUP BY vt1.c0, rt0.c3, rt0.c4, rt0.c2, rt0.c0 HAVING ((COUNT(IFNULL(DISTINCT rt0.c1, rt0.c2))) ISNULL);
SELECT vt1.c0, rt0.c3, rt0.c4, rt0.c2, rt0.c0 FROM rt0, vt1 GROUP BY vt1.c0, rt0.c3, rt0.c4, rt0.c2, rt0.c0;
SELECT ALL * FROM rt0, vt1, vt0;
SELECT * FROM rt0, vt1, vt0 WHERE (((((rt0.c3) IS FALSE))<=((((vt0.c2))>((vt0.c1)))))) UNION ALL SELECT ALL * FROM rt0, vt1, vt0 WHERE ((NOT (((((rt0.c3) IS FALSE))<=((((vt0.c2))>((vt0.c1)))))))) UNION ALL SELECT ALL * FROM rt0, vt1, vt0 WHERE (((((((rt0.c3) IS FALSE))<=((((vt0.c2))>((vt0.c1)))))) ISNULL));
SELECT ALL * FROM rt0, vt1, vt0;
SELECT DISTINCT * FROM t1 CROSS JOIN vt0 ON x'de7464b5533a';
SELECT DISTINCT * FROM t1 CROSS JOIN vt0 ON x'de7464b5533a' WHERE (((((((vt0.c1)AND(vt0.c1)))OR(t1.c51))) NOT BETWEEN (TYPEOF(DISTINCT vt0.c1)) AND (((((t1.c51)AND(vt0.c1)))AND(t1.c51))))) UNION SELECT DISTINCT * FROM t1 CROSS JOIN vt0 ON x'de7464b5533a' WHERE ((NOT (((((((vt0.c1)AND(vt0.c1)))OR(t1.c51))) NOT BETWEEN (TYPEOF(DISTINCT vt0.c1)) AND (((((t1.c51)AND(vt0.c1)))AND(t1.c51))))))) UNION SELECT DISTINCT * FROM t1 CROSS JOIN vt0 ON x'de7464b5533a' WHERE (((((((((vt0.c1)AND(vt0.c1)))OR(t1.c51))) NOT BETWEEN (TYPEOF(DISTINCT vt0.c1)) AND (((((t1.c51)AND(vt0.c1)))AND(t1.c51))))) ISNULL));
SELECT DISTINCT * FROM t1 CROSS JOIN vt0 ON x'de7464b5533a';
SELECT vt0.c0, t1.c51, rt0.c3, vt1.c0, rt0.c0 FROM t1, vt1, rt0, vt0 GROUP BY vt0.c0, t1.c51, rt0.c3, vt1.c0, rt0.c0;
SELECT ALL vt0.c0, t1.c51, rt0.c3, vt1.c0, rt0.c0 FROM t1, vt1, rt0, vt0 WHERE (((((rt0.c3) NOT BETWEEN (vt0.c2) AND (rt0.c1))) IS FALSE)) GROUP BY vt0.c0, t1.c51, rt0.c3, vt1.c0, rt0.c0 UNION SELECT vt0.c0, t1.c51, rt0.c3, vt1.c0, rt0.c0 FROM t1, vt1, rt0, vt0 WHERE ((NOT (((((rt0.c3) NOT BETWEEN (vt0.c2) AND (rt0.c1))) IS FALSE)))) GROUP BY vt0.c0, t1.c51, rt0.c3, vt1.c0, rt0.c0 UNION SELECT vt0.c0, t1.c51, rt0.c3, vt1.c0, rt0.c0 FROM t1, vt1, rt0, vt0 WHERE (((((((rt0.c3) NOT BETWEEN (vt0.c2) AND (rt0.c1))) IS FALSE)) ISNULL)) GROUP BY vt0.c0, t1.c51, rt0.c3, vt1.c0, rt0.c0;
SELECT vt0.c0, t1.c51, rt0.c3, vt1.c0, rt0.c0 FROM t1, vt1, rt0, vt0 GROUP BY vt0.c0, t1.c51, rt0.c3, vt1.c0, rt0.c0;
SELECT ALL rt0.c3, vt0.c1, rt0.c1, rt0.c4, vt0.c0, vt0.c2 FROM vt0, rt0 GROUP BY rt0.c3, vt0.c1, rt0.c1, rt0.c4, vt0.c0, vt0.c2;
SELECT rt0.c3, vt0.c1, rt0.c1, rt0.c4, vt0.c0, vt0.c2 FROM vt0, rt0 GROUP BY rt0.c3, vt0.c1, rt0.c1, rt0.c4, vt0.c0, vt0.c2 HAVING (COUNT(*) IN ()) UNION ALL SELECT rt0.c3, vt0.c1, rt0.c1, rt0.c4, vt0.c0, vt0.c2 FROM vt0, rt0 GROUP BY rt0.c3, vt0.c1, rt0.c1, rt0.c4, vt0.c0, vt0.c2 HAVING (NOT ((COUNT(*) IN ()))) UNION ALL SELECT ALL rt0.c3, vt0.c1, rt0.c1, rt0.c4, vt0.c0, vt0.c2 FROM vt0, rt0 GROUP BY rt0.c3, vt0.c1, rt0.c1, rt0.c4, vt0.c0, vt0.c2 HAVING (((COUNT(*) IN ())) ISNULL);
SELECT ALL rt0.c3, vt0.c1, rt0.c1, rt0.c4, vt0.c0, vt0.c2 FROM vt0, rt0 GROUP BY rt0.c3, vt0.c1, rt0.c1, rt0.c4, vt0.c0, vt0.c2;
SELECT rt0.c3, vt0.c1, rt0.c1, rt0.c4, vt0.c0, vt0.c2 FROM vt0, rt0 GROUP BY rt0.c3, vt0.c1, rt0.c1, rt0.c4, vt0.c0, vt0.c2 HAVING (COUNT(*) IN ()) UNION ALL SELECT rt0.c3, vt0.c1, rt0.c1, rt0.c4, vt0.c0, vt0.c2 FROM vt0, rt0 GROUP BY rt0.c3, vt0.c1, rt0.c1, rt0.c4, vt0.c0, vt0.c2 HAVING (NOT ((COUNT(*) IN ()))) UNION ALL SELECT ALL rt0.c3, vt0.c1, rt0.c1, rt0.c4, vt0.c0, vt0.c2 FROM vt0, rt0 GROUP BY rt0.c3, vt0.c1, rt0.c1, rt0.c4, vt0.c0, vt0.c2 HAVING (((COUNT(*) IN ())) ISNULL);
SELECT ALL rt0.c3, vt0.c1, rt0.c1, rt0.c4, vt0.c0, vt0.c2 FROM vt0, rt0 GROUP BY rt0.c3, vt0.c1, rt0.c1, rt0.c4, vt0.c0, vt0.c2;
SELECT ALL vt0.c2 FROM vt0;
SELECT vt0.c2 FROM vt0 WHERE ((NOT (((vt0.c2) BETWEEN (vt0.c2) AND (0.23513057663103243))))) UNION ALL SELECT ALL vt0.c2 FROM vt0 WHERE ((NOT ((NOT (((vt0.c2) BETWEEN (vt0.c2) AND (0.23513057663103243))))))) UNION ALL SELECT ALL vt0.c2 FROM vt0 WHERE ((((NOT (((vt0.c2) BETWEEN (vt0.c2) AND (0.23513057663103243))))) ISNULL));
SELECT ALL vt0.c2 FROM vt0;
SELECT DISTINCT * FROM rt0, vt1, vt0, t1;
SELECT DISTINCT * FROM rt0, vt1, vt0, t1 WHERE (((((((((-1.208863631E9)AND(CASE vt0.c1  WHEN rt0.c0 THEN x'1549' END)))OR((vt0.c2 IN ()))))AND((NOT (vt1.c0)))))OR(((vt0.c2) NOTNULL)))) UNION SELECT DISTINCT * FROM rt0, vt1, vt0, t1 WHERE ((NOT (((((((((-1.208863631E9)AND(CASE vt0.c1  WHEN rt0.c0 THEN x'1549' END)))OR((vt0.c2 IN ()))))AND((NOT (vt1.c0)))))OR(((vt0.c2) NOTNULL)))))) UNION SELECT DISTINCT * FROM rt0, vt1, vt0, t1 WHERE (((((((((((-1.208863631E9)AND(CASE vt0.c1  WHEN rt0.c0 THEN x'1549' END)))OR((vt0.c2 IN ()))))AND((NOT (vt1.c0)))))OR(((vt0.c2) NOTNULL)))) ISNULL));
SELECT DISTINCT * FROM rt0, vt1, vt0, t1;
SELECT vt0.c0, vt0.c2 FROM vt0 GROUP BY vt0.c0, vt0.c2;
SELECT ALL vt0.c0, vt0.c2 FROM vt0 WHERE (0.270397844045535) GROUP BY vt0.c0, vt0.c2 UNION SELECT vt0.c0, vt0.c2 FROM vt0 WHERE ((NOT (0.270397844045535))) GROUP BY vt0.c0, vt0.c2 UNION SELECT vt0.c0, vt0.c2 FROM vt0 WHERE (((0.270397844045535) ISNULL)) GROUP BY vt0.c0, vt0.c2;
SELECT vt0.c0, vt0.c2 FROM vt0 GROUP BY vt0.c0, vt0.c2;
SELECT rt0.c1, rt0.c3, rt0.c2 FROM rt0 RIGHT OUTER JOIN t1 ON rt0.c1 GROUP BY rt0.c1, rt0.c3, rt0.c2;
SELECT ALL rt0.c1, rt0.c3, rt0.c2 FROM rt0 RIGHT OUTER JOIN t1 ON rt0.c1 GROUP BY rt0.c1, rt0.c3, rt0.c2 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c1, rt0.c3, rt0.c2 FROM rt0 RIGHT OUTER JOIN t1 ON rt0.c1 GROUP BY rt0.c1, rt0.c3, rt0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c1, rt0.c3, rt0.c2 FROM rt0 RIGHT OUTER JOIN t1 ON rt0.c1 GROUP BY rt0.c1, rt0.c3, rt0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c1, rt0.c3, rt0.c2 FROM rt0 RIGHT OUTER JOIN t1 ON rt0.c1 GROUP BY rt0.c1, rt0.c3, rt0.c2;
SELECT ALL rt0.c1, rt0.c3, rt0.c2 FROM rt0 RIGHT OUTER JOIN t1 ON rt0.c1 GROUP BY rt0.c1, rt0.c3, rt0.c2 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c1, rt0.c3, rt0.c2 FROM rt0 RIGHT OUTER JOIN t1 ON rt0.c1 GROUP BY rt0.c1, rt0.c3, rt0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c1, rt0.c3, rt0.c2 FROM rt0 RIGHT OUTER JOIN t1 ON rt0.c1 GROUP BY rt0.c1, rt0.c3, rt0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c1, rt0.c3, rt0.c2 FROM rt0 RIGHT OUTER JOIN t1 ON rt0.c1 GROUP BY rt0.c1, rt0.c3, rt0.c2;
SELECT * FROM vt1 INNER JOIN vt0 ON ((NULL) BETWEEN (((vt1.c0) NOT BETWEEN (vt1.c0) AND (t1.c51))) AND (((rt0.c2) BETWEEN (vt0.c1) AND (rt0.c1)))) FULL OUTER JOIN t1 ON ((HEX(vt0.c0)) IS TRUE) RIGHT OUTER JOIN rt0 ON CAST(CAST(x'7b49' AS NUMERIC) AS NUMERIC);
SELECT DISTINCT rt0.c2, rt0.c4, rt0.c3, t1.c51, rt0.c1, rt0.c0 FROM t1 NATURAL JOIN rt0;
SELECT DISTINCT rt0.c2, rt0.c4, rt0.c3, t1.c51, rt0.c1, rt0.c0 FROM t1 NATURAL JOIN rt0 WHERE (LOWER(DISTINCT '112033777')) UNION SELECT DISTINCT rt0.c2, rt0.c4, rt0.c3, t1.c51, rt0.c1, rt0.c0 FROM t1 NATURAL JOIN rt0 WHERE ((NOT (LOWER(DISTINCT '112033777')))) UNION SELECT DISTINCT rt0.c2, rt0.c4, rt0.c3, t1.c51, rt0.c1, rt0.c0 FROM t1 NATURAL JOIN rt0 WHERE (((LOWER(DISTINCT '112033777')) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c4, rt0.c3, t1.c51, rt0.c1, rt0.c0 FROM t1 NATURAL JOIN rt0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE (CASE CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END  WHEN MAX(vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0) THEN ((vt1.c0) NOTNULL) ELSE (((vt1.c0))<>((vt1.c0))) END) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT (CASE CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END  WHEN MAX(vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0) THEN ((vt1.c0) NOTNULL) ELSE (((vt1.c0))<>((vt1.c0))) END))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE (((CASE CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END  WHEN MAX(vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0) THEN ((vt1.c0) NOTNULL) ELSE (((vt1.c0))<>((vt1.c0))) END) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0, rt0.c4, rt0.c0 FROM rt0, t1, vt1 RIGHT OUTER JOIN vt0 ON 'OBEb' GROUP BY vt1.c0, rt0.c4, rt0.c0;
SELECT vt1.c0, rt0.c4, rt0.c0 FROM rt0, t1, vt1 RIGHT OUTER JOIN vt0 ON 'OBEb' GROUP BY vt1.c0, rt0.c4, rt0.c0 HAVING (TOTAL(t1.c51) IN ()) UNION ALL SELECT ALL vt1.c0, rt0.c4, rt0.c0 FROM rt0, t1 NOT INDEXED, vt1 RIGHT OUTER JOIN vt0 ON 'OBEb' GROUP BY vt1.c0, rt0.c4, rt0.c0 HAVING (NOT ((TOTAL(t1.c51) IN ()))) UNION ALL SELECT vt1.c0, rt0.c4, rt0.c0 FROM rt0, t1, vt1 RIGHT OUTER JOIN vt0 ON 'OBEb' GROUP BY vt1.c0, rt0.c4, rt0.c0 HAVING (((TOTAL(t1.c51) IN ())) ISNULL);
SELECT vt1.c0, rt0.c4, rt0.c0 FROM rt0, t1, vt1 RIGHT OUTER JOIN vt0 ON 'OBEb' GROUP BY vt1.c0, rt0.c4, rt0.c0;
SELECT vt1.c0, rt0.c4, rt0.c0 FROM rt0, t1, vt1 RIGHT OUTER JOIN vt0 ON 'OBEb' GROUP BY vt1.c0, rt0.c4, rt0.c0 HAVING (TOTAL(t1.c51) IN ()) UNION ALL SELECT ALL vt1.c0, rt0.c4, rt0.c0 FROM rt0, t1 NOT INDEXED, vt1 RIGHT OUTER JOIN vt0 ON 'OBEb' GROUP BY vt1.c0, rt0.c4, rt0.c0 HAVING (NOT ((TOTAL(t1.c51) IN ()))) UNION ALL SELECT vt1.c0, rt0.c4, rt0.c0 FROM rt0, t1, vt1 RIGHT OUTER JOIN vt0 ON 'OBEb' GROUP BY vt1.c0, rt0.c4, rt0.c0 HAVING (((TOTAL(t1.c51) IN ())) ISNULL);
SELECT vt1.c0, rt0.c4, rt0.c0 FROM rt0, t1, vt1 RIGHT OUTER JOIN vt0 ON 'OBEb' GROUP BY vt1.c0, rt0.c4, rt0.c0;
SELECT rt0.c2, rt0.c4, rt0.c1, vt1.c0, rt0.c0, vt0.c1, rt0.c3, vt0.c0 FROM vt1, vt0, rt0;
SELECT rt0.c2, rt0.c4, rt0.c1, vt1.c0, rt0.c0, vt0.c1, rt0.c3, vt0.c0 FROM vt1, vt0, rt0 WHERE ((((rt0.c2, vt0.c0, vt0.c1)) NOT BETWEEN (((- (-818656032)), NULL, vt0.c1)) AND ((vt0.c2 COLLATE NOCASE, CAST(vt0.c0 AS BLOB), x'6135')))) UNION ALL SELECT rt0.c2, rt0.c4, rt0.c1, vt1.c0, rt0.c0, vt0.c1, rt0.c3, vt0.c0 FROM vt1, vt0, rt0 WHERE ((NOT ((((rt0.c2, vt0.c0, vt0.c1)) NOT BETWEEN (((- (-818656032)), NULL, vt0.c1)) AND ((vt0.c2 COLLATE NOCASE, CAST(vt0.c0 AS BLOB), x'6135')))))) UNION ALL SELECT ALL rt0.c2, rt0.c4, rt0.c1, vt1.c0, rt0.c0, vt0.c1, rt0.c3, vt0.c0 FROM vt1, vt0, rt0 WHERE ((((((rt0.c2, vt0.c0, vt0.c1)) NOT BETWEEN (((- (-818656032)), NULL, vt0.c1)) AND ((vt0.c2 COLLATE NOCASE, CAST(vt0.c0 AS BLOB), x'6135')))) ISNULL));
SELECT rt0.c2, rt0.c4, rt0.c1, vt1.c0, rt0.c0, vt0.c1, rt0.c3, vt0.c0 FROM vt1, vt0, rt0;
SELECT DISTINCT vt0.c1 FROM vt0, vt1;
SELECT DISTINCT vt0.c1 FROM vt0, vt1 WHERE ('<FA~cF7.0') UNION SELECT DISTINCT vt0.c1 FROM vt0, vt1 WHERE ((NOT ('<FA~cF7.0'))) UNION SELECT DISTINCT vt0.c1 FROM vt0, vt1 WHERE ((('<FA~cF7.0') ISNULL));
SELECT DISTINCT vt0.c1 FROM vt0, vt1;
SELECT ALL t1.c51 FROM t1 GROUP BY t1.c51;
SELECT t1.c51 FROM t1 WHERE (t1.c51) GROUP BY t1.c51 UNION SELECT ALL t1.c51 FROM t1 WHERE ((NOT (t1.c51))) GROUP BY t1.c51 UNION SELECT ALL t1.c51 FROM t1 WHERE (((t1.c51) ISNULL)) GROUP BY t1.c51;
SELECT ALL t1.c51 FROM t1 GROUP BY t1.c51;
SELECT ALL vt1.c0 FROM vt1, vt0, t1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1, vt0, t1 GROUP BY vt1.c0 HAVING (COUNT(*) IN ()) UNION ALL SELECT vt1.c0 FROM vt1, vt0, t1 GROUP BY vt1.c0 HAVING (NOT ((COUNT(*) IN ()))) UNION ALL SELECT ALL vt1.c0 FROM vt1, vt0, t1 GROUP BY vt1.c0 HAVING (((COUNT(*) IN ())) ISNULL);
SELECT ALL vt1.c0 FROM vt1, vt0, t1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1, vt0, t1 GROUP BY vt1.c0 HAVING (COUNT(*) IN ()) UNION ALL SELECT vt1.c0 FROM vt1, vt0, t1 GROUP BY vt1.c0 HAVING (NOT ((COUNT(*) IN ()))) UNION ALL SELECT ALL vt1.c0 FROM vt1, vt0, t1 GROUP BY vt1.c0 HAVING (((COUNT(*) IN ())) ISNULL);
SELECT ALL vt1.c0 FROM vt1, vt0, t1 GROUP BY vt1.c0;
SELECT * FROM rt0, vt0 NOT INDEXED, vt1 CROSS JOIN t1 ON ((('-1308251101')<>(vt0.c0)) IN ());
SELECT * FROM rt0, vt0, vt1 CROSS JOIN t1 ON ((('-1308251101')!=(vt0.c0)) IN ()) WHERE (CAST(((vt0.c1)>>(rt0.c2)) AS BLOB)) UNION ALL SELECT ALL * FROM rt0, vt0, vt1 CROSS JOIN t1 ON ((('-1308251101')<>(vt0.c0)) IN ()) WHERE ((NOT (CAST(((vt0.c1)>>(rt0.c2)) AS BLOB)))) UNION ALL SELECT * FROM rt0, vt0, vt1 CROSS JOIN t1 ON ((('-1308251101')<>(vt0.c0)) IN ()) WHERE (((CAST(((vt0.c1)>>(rt0.c2)) AS BLOB)) ISNULL));
SELECT * FROM rt0, vt0 NOT INDEXED, vt1 CROSS JOIN t1 ON ((('-1308251101')<>(vt0.c0)) IN ());
SELECT DISTINCT rt0.c0 FROM rt0, vt0, t1;
SELECT DISTINCT rt0.c0 FROM rt0, vt0, t1 WHERE (((((rt0.c4) NOTNULL))>=(0.8187695673844454))) UNION SELECT DISTINCT rt0.c0 FROM rt0, vt0, t1 WHERE ((NOT (((((rt0.c4) NOTNULL))>=(0.8187695673844454))))) UNION SELECT DISTINCT rt0.c0 FROM rt0, vt0, t1 WHERE (((((((rt0.c4) NOTNULL))>=(0.8187695673844454))) ISNULL));
SELECT DISTINCT rt0.c0 FROM rt0, vt0, t1;
SELECT ALL rt0.c3, rt0.c0, vt0.c0, rt0.c4, rt0.c2, vt0.c1 FROM vt0, rt0 GROUP BY rt0.c3, rt0.c0, vt0.c0, rt0.c4, rt0.c2, vt0.c1;
SELECT rt0.c3, rt0.c0, vt0.c0, rt0.c4, rt0.c2, vt0.c1 FROM vt0, rt0 WHERE (CASE WHEN CASE 0.17797156560833427  WHEN rt0.c2 THEN rt0.c2 ELSE 0X112ebb16 END THEN (rt0.c2 IN ()) END) GROUP BY rt0.c3, rt0.c0, vt0.c0, rt0.c4, rt0.c2, vt0.c1 UNION SELECT ALL rt0.c3, rt0.c0, vt0.c0, rt0.c4, rt0.c2, vt0.c1 FROM vt0, rt0 WHERE ((NOT (CASE WHEN CASE 0.17797156560833427  WHEN rt0.c2 THEN rt0.c2 ELSE 0X112ebb16 END THEN (rt0.c2 IN ()) END))) GROUP BY rt0.c3, rt0.c0, vt0.c0, rt0.c4, rt0.c2, vt0.c1 UNION SELECT rt0.c3, rt0.c0, vt0.c0, rt0.c4, rt0.c2, vt0.c1 FROM vt0, rt0 WHERE (((CASE WHEN CASE 0.17797156560833427  WHEN rt0.c2 THEN rt0.c2 ELSE 0x112ebb16 END THEN (rt0.c2 IN ()) END) ISNULL)) GROUP BY rt0.c3, rt0.c0, vt0.c0, rt0.c4, rt0.c2, vt0.c1;
SELECT ALL rt0.c3, rt0.c0, vt0.c0, rt0.c4, rt0.c2, vt0.c1 FROM vt0, rt0 GROUP BY rt0.c3, rt0.c0, vt0.c0, rt0.c4, rt0.c2, vt0.c1;
SELECT rt0.c2, rt0.c0, vt0.c1 FROM rt0, vt0 GROUP BY rt0.c2, rt0.c0, vt0.c1;
SELECT ALL rt0.c2, rt0.c0, vt0.c1 FROM rt0, vt0 GROUP BY rt0.c2, rt0.c0, vt0.c1 HAVING ((AVG(rt0.c3))IS((((rt0.c1, rt0.c4, vt0.c0)) NOT BETWEEN ((NULL, 0.86950037355117, rt0.c2)) AND ((vt0.c2, MAX(0.7323282115544089), vt0.c2))))) UNION ALL SELECT ALL rt0.c2, rt0.c0, vt0.c1 FROM rt0, vt0 GROUP BY rt0.c2, rt0.c0, vt0.c1 HAVING (NOT (((AVG(rt0.c3))IS((((rt0.c1, rt0.c4, vt0.c0)) NOT BETWEEN ((NULL, 0.86950037355117, rt0.c2)) AND ((vt0.c2, MAX(0.7323282115544089), vt0.c2))))))) UNION ALL SELECT ALL rt0.c2, rt0.c0, vt0.c1 FROM rt0, vt0 GROUP BY rt0.c2, rt0.c0, vt0.c1 HAVING ((((AVG(rt0.c3))IS((((rt0.c1, rt0.c4, vt0.c0)) NOT BETWEEN ((NULL, 0.86950037355117, rt0.c2)) AND ((vt0.c2, MAX(0.7323282115544089), vt0.c2)))))) ISNULL);
SELECT rt0.c2, rt0.c0, vt0.c1 FROM rt0, vt0 GROUP BY rt0.c2, rt0.c0, vt0.c1;
SELECT ALL rt0.c2, rt0.c0, vt0.c1 FROM rt0, vt0 GROUP BY rt0.c2, rt0.c0, vt0.c1 HAVING ((AVG(rt0.c3))IS((((rt0.c1, rt0.c4, vt0.c0)) NOT BETWEEN ((NULL, 0.86950037355117, rt0.c2)) AND ((vt0.c2, MAX(0.7323282115544089), vt0.c2))))) UNION ALL SELECT ALL rt0.c2, rt0.c0, vt0.c1 FROM rt0, vt0 GROUP BY rt0.c2, rt0.c0, vt0.c1 HAVING (NOT (((AVG(rt0.c3))IS((((rt0.c1, rt0.c4, vt0.c0)) NOT BETWEEN ((NULL, 0.86950037355117, rt0.c2)) AND ((vt0.c2, MAX(0.7323282115544089), vt0.c2))))))) UNION ALL SELECT ALL rt0.c2, rt0.c0, vt0.c1 FROM rt0, vt0 GROUP BY rt0.c2, rt0.c0, vt0.c1 HAVING ((((AVG(rt0.c3))IS((((rt0.c1, rt0.c4, vt0.c0)) NOT BETWEEN ((NULL, 0.86950037355117, rt0.c2)) AND ((vt0.c2, MAX(0.7323282115544089), vt0.c2)))))) ISNULL);
SELECT rt0.c2, rt0.c0, vt0.c1 FROM rt0, vt0 GROUP BY rt0.c2, rt0.c0, vt0.c1;
SELECT ALL t1.c51 FROM t1, vt0;
SELECT ALL t1.c51 FROM t1, vt0 WHERE (((0.32867635800150674)>(vt0.c0)) COLLATE NOCASE) UNION ALL SELECT ALL t1.c51 FROM t1, vt0 WHERE ((NOT (((0.32867635800150674)>(vt0.c0)) COLLATE NOCASE))) UNION ALL SELECT t1.c51 FROM t1, vt0 WHERE (((((0.32867635800150674)>(vt0.c0)) COLLATE NOCASE) ISNULL));
SELECT ALL t1.c51 FROM t1, vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (-1911962287 COLLATE RTRIM) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (-1911962287 COLLATE RTRIM))) UNION SELECT DISTINCT * FROM vt0 WHERE (((-1911962287 COLLATE RTRIM) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT t1.c51 FROM t1, vt0, rt0 GROUP BY t1.c51;
SELECT t1.c51 FROM t1, vt0, rt0 WHERE (x'') GROUP BY t1.c51 UNION SELECT ALL t1.c51 FROM t1, vt0, rt0 WHERE ((NOT (x''))) GROUP BY t1.c51 UNION SELECT ALL t1.c51 FROM t1, vt0, rt0 WHERE (((x'') ISNULL)) GROUP BY t1.c51;
SELECT t1.c51 FROM t1, vt0, rt0 GROUP BY t1.c51;
SELECT rt0.c1, t1.c51, vt0.c1, rt0.c3, rt0.c0 FROM t1 NOT INDEXED, vt0, rt0 GROUP BY rt0.c1, t1.c51, vt0.c1, rt0.c3, rt0.c0;
SELECT ALL rt0.c1, t1.c51, vt0.c1, rt0.c3, rt0.c0 FROM t1, vt0, rt0 GROUP BY rt0.c1, t1.c51, vt0.c1, rt0.c3, rt0.c0 HAVING '-377785403' UNION ALL SELECT rt0.c1, t1.c51, vt0.c1, rt0.c3, rt0.c0 FROM t1, vt0, rt0 GROUP BY rt0.c1, t1.c51, vt0.c1, rt0.c3, rt0.c0 HAVING (NOT ('-377785403')) UNION ALL SELECT rt0.c1, t1.c51, vt0.c1, rt0.c3, rt0.c0 FROM t1, vt0, rt0 GROUP BY rt0.c1, t1.c51, vt0.c1, rt0.c3, rt0.c0 HAVING (('-377785403') ISNULL);
SELECT rt0.c1, t1.c51, vt0.c1, rt0.c3, rt0.c0 FROM t1 NOT INDEXED, vt0, rt0 GROUP BY rt0.c1, t1.c51, vt0.c1, rt0.c3, rt0.c0;
SELECT ALL rt0.c1, t1.c51, vt0.c1, rt0.c3, rt0.c0 FROM t1, vt0, rt0 GROUP BY rt0.c1, t1.c51, vt0.c1, rt0.c3, rt0.c0 HAVING '-377785403' UNION ALL SELECT rt0.c1, t1.c51, vt0.c1, rt0.c3, rt0.c0 FROM t1, vt0, rt0 GROUP BY rt0.c1, t1.c51, vt0.c1, rt0.c3, rt0.c0 HAVING (NOT ('-377785403')) UNION ALL SELECT rt0.c1, t1.c51, vt0.c1, rt0.c3, rt0.c0 FROM t1, vt0, rt0 GROUP BY rt0.c1, t1.c51, vt0.c1, rt0.c3, rt0.c0 HAVING (('-377785403') ISNULL);
SELECT rt0.c1, t1.c51, vt0.c1, rt0.c3, rt0.c0 FROM t1 NOT INDEXED, vt0, rt0 GROUP BY rt0.c1, t1.c51, vt0.c1, rt0.c3, rt0.c0;
SELECT * FROM rt0, vt0;
SELECT ALL * FROM rt0, vt0 WHERE ('') UNION ALL SELECT * FROM rt0, vt0 WHERE ((NOT (''))) UNION ALL SELECT ALL * FROM rt0, vt0 WHERE ((('') ISNULL));
SELECT * FROM rt0, vt0;
SELECT DISTINCT vt0.c0, vt0.c1, vt0.c2 FROM vt0;
SELECT DISTINCT vt0.c0, vt0.c1, vt0.c2 FROM vt0 WHERE (((((vt0.c2) NOT BETWEEN (vt0.c2) AND (vt0.c2))) NOT BETWEEN (vt0.c0) AND (vt0.c2 COLLATE BINARY))) UNION SELECT DISTINCT vt0.c0, vt0.c1, vt0.c2 FROM vt0 WHERE ((NOT (((((vt0.c2) NOT BETWEEN (vt0.c2) AND (vt0.c2))) NOT BETWEEN (vt0.c0) AND (vt0.c2 COLLATE BINARY))))) UNION SELECT DISTINCT vt0.c0, vt0.c1, vt0.c2 FROM vt0 WHERE (((((((vt0.c2) NOT BETWEEN (vt0.c2) AND (vt0.c2))) NOT BETWEEN (vt0.c0) AND (vt0.c2 COLLATE BINARY))) ISNULL));
SELECT DISTINCT vt0.c0, vt0.c1, vt0.c2 FROM vt0;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt0 WHERE (LAST_INSERT_ROWID()) GROUP BY vt0.c1 UNION SELECT vt0.c1 FROM vt0 WHERE ((NOT (LAST_INSERT_ROWID()))) GROUP BY vt0.c1 UNION SELECT ALL vt0.c1 FROM vt0 WHERE (((LAST_INSERT_ROWID()) ISNULL)) GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT rt0.c3, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c3, rt0.c2, rt0.c0;
SELECT rt0.c3, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c3, rt0.c2, rt0.c0 HAVING (AVG(1.128819705E9) IN ()) UNION ALL SELECT ALL rt0.c3, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c3, rt0.c2, rt0.c0 HAVING (NOT ((AVG(1.128819705E9) IN ()))) UNION ALL SELECT ALL rt0.c3, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c3, rt0.c2, rt0.c0 HAVING (((AVG(1.128819705E9) IN ())) ISNULL);
SELECT rt0.c3, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c3, rt0.c2, rt0.c0;
SELECT rt0.c3, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c3, rt0.c2, rt0.c0 HAVING (AVG(1.128819705E9) IN ()) UNION ALL SELECT ALL rt0.c3, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c3, rt0.c2, rt0.c0 HAVING (NOT ((AVG(1.128819705E9) IN ()))) UNION ALL SELECT ALL rt0.c3, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c3, rt0.c2, rt0.c0 HAVING (((AVG(1.128819705E9) IN ())) ISNULL);
SELECT rt0.c3, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c3, rt0.c2, rt0.c0;
SELECT * FROM vt1 RIGHT OUTER JOIN vt0 ON (((vt0.c0 IN ())) NOT NULL) RIGHT OUTER JOIN rt0 ON CAST(CASE WHEN vt0.c1 THEN vt0.c2 END AS REAL) LEFT OUTER JOIN t1 ON (~ (((((vt0.c0)AND(rt0.c3)))AND(rt0.c3))));
SELECT * FROM vt1 RIGHT OUTER JOIN vt0 ON (((vt0.c0 IN ())) NOT NULL) RIGHT OUTER JOIN rt0 ON CAST(CASE WHEN vt0.c1 THEN vt0.c2 END AS REAL) LEFT OUTER JOIN t1 ON (~ (((((vt0.c0)AND(rt0.c3)))AND(rt0.c3)))) WHERE (CASE ((((rt0.c2)OR(rt0.c3)))AND(vt0.c0))  WHEN ((vt0.c2) NOTNULL) THEN ((vt0.c2)GLOB(vt0.c2)) ELSE ((rt0.c4) BETWEEN (rt0.c3) AND (vt0.c1)) END) UNION ALL SELECT ALL * FROM vt1 RIGHT OUTER JOIN vt0 ON (((vt0.c0 IN ())) NOT NULL) RIGHT OUTER JOIN rt0 ON CAST(CASE WHEN vt0.c1 THEN vt0.c2 END AS REAL) LEFT OUTER JOIN t1 ON (~ (((((vt0.c0)AND(rt0.c3)))AND(rt0.c3)))) WHERE ((NOT (CASE ((((rt0.c2)OR(rt0.c3)))AND(vt0.c0))  WHEN ((vt0.c2) NOTNULL) THEN ((vt0.c2)GLOB(vt0.c2)) ELSE ((rt0.c4) BETWEEN (rt0.c3) AND (vt0.c1)) END))) UNION ALL SELECT ALL * FROM vt1 RIGHT OUTER JOIN vt0 ON (((vt0.c0 IN ())) NOT NULL) RIGHT OUTER JOIN rt0 ON CAST(CASE WHEN vt0.c1 THEN vt0.c2 END AS REAL) LEFT OUTER JOIN t1 ON (~ (((((vt0.c0)AND(rt0.c3)))AND(rt0.c3)))) WHERE (((CASE ((((rt0.c2)OR(rt0.c3)))AND(vt0.c0))  WHEN ((vt0.c2) NOTNULL) THEN ((vt0.c2)GLOB(vt0.c2)) ELSE ((rt0.c4) BETWEEN (rt0.c3) AND (vt0.c1)) END) ISNULL));
SELECT * FROM vt1 RIGHT OUTER JOIN vt0 ON (((vt0.c0 IN ())) NOT NULL) RIGHT OUTER JOIN rt0 ON CAST(CASE WHEN vt0.c1 THEN vt0.c2 END AS REAL) LEFT OUTER JOIN t1 ON (~ (((((vt0.c0)AND(rt0.c3)))AND(rt0.c3))));
SELECT DISTINCT * FROM vt1, t1, vt0 INNER JOIN rt0 ON (((vt0.c0))<((vt0.c0))) COLLATE BINARY;
SELECT DISTINCT * FROM vt1, t1, vt0 INNER JOIN rt0 ON (((vt0.c0))<((vt0.c0))) COLLATE BINARY WHERE ((~ (((NULL) ISNULL)))) UNION SELECT DISTINCT * FROM vt1, t1, vt0 INNER JOIN rt0 ON (((vt0.c0))<((vt0.c0))) COLLATE BINARY WHERE ((NOT ((~ (((NULL) ISNULL)))))) UNION SELECT DISTINCT * FROM vt1, t1, vt0 INNER JOIN rt0 ON (((vt0.c0))<((vt0.c0))) COLLATE BINARY WHERE ((((~ (((NULL) ISNULL)))) ISNULL));
SELECT DISTINCT * FROM vt1, t1, vt0 INNER JOIN rt0 ON (((vt0.c0))<((vt0.c0))) COLLATE BINARY;
SELECT ALL t1.c51, rt0.c4, vt0.c0 FROM rt0, vt1, vt0, t1 GROUP BY t1.c51, rt0.c4, vt0.c0;
SELECT ALL t1.c51, rt0.c4, vt0.c0 FROM rt0, vt1, vt0, t1 WHERE (((CASE WHEN t1.c51 THEN rt0.c4 ELSE vt1.c0 END) BETWEEN (((rt0.c0) IS TRUE)) AND (CASE vt0.c2  WHEN rt0.c3 THEN rt0.c3 WHEN t1.c51 THEN rt0.c0 WHEN vt0.c0 THEN rt0.c2 ELSE rt0.c1 END))) GROUP BY t1.c51, rt0.c4, vt0.c0 UNION SELECT ALL t1.c51, rt0.c4, vt0.c0 FROM rt0, vt1, vt0, t1 WHERE ((NOT (((CASE WHEN t1.c51 THEN rt0.c4 ELSE vt1.c0 END) BETWEEN (((rt0.c0) IS TRUE)) AND (CASE vt0.c2  WHEN rt0.c3 THEN rt0.c3 WHEN t1.c51 THEN rt0.c0 WHEN vt0.c0 THEN rt0.c2 ELSE rt0.c1 END))))) GROUP BY t1.c51, rt0.c4, vt0.c0 UNION SELECT t1.c51, rt0.c4, vt0.c0 FROM rt0, vt1, vt0, t1 WHERE (((((CASE WHEN t1.c51 THEN rt0.c4 ELSE vt1.c0 END) BETWEEN (((rt0.c0) IS TRUE)) AND (CASE vt0.c2  WHEN rt0.c3 THEN rt0.c3 WHEN t1.c51 THEN rt0.c0 WHEN vt0.c0 THEN rt0.c2 ELSE rt0.c1 END))) ISNULL)) GROUP BY t1.c51, rt0.c4, vt0.c0;
SELECT ALL t1.c51, rt0.c4, vt0.c0 FROM rt0, vt1, vt0, t1 GROUP BY t1.c51, rt0.c4, vt0.c0;
SELECT ALL vt0.c1, vt1.c0, vt0.c0, t1.c51 FROM t1, rt0, vt1, vt0 GROUP BY vt0.c1, vt1.c0, vt0.c0, t1.c51;
SELECT ALL vt0.c1, vt1.c0, vt0.c0, t1.c51 FROM t1, rt0, vt1, vt0 GROUP BY vt0.c1, vt1.c0, vt0.c0, t1.c51 HAVING AVG(SUM(vt0.c2)) UNION ALL SELECT vt0.c1, vt1.c0, vt0.c0, t1.c51 FROM t1, rt0, vt1, vt0 GROUP BY vt0.c1, vt1.c0, vt0.c0, t1.c51 HAVING (NOT (AVG(SUM(vt0.c2)))) UNION ALL SELECT ALL vt0.c1, vt1.c0, vt0.c0, t1.c51 FROM t1, rt0, vt1, vt0 GROUP BY vt0.c1, vt1.c0, vt0.c0, t1.c51 HAVING ((AVG(SUM(vt0.c2))) ISNULL);
SELECT vt1.c0 FROM vt1, t1;
SELECT vt1.c0 FROM vt1, t1 WHERE (t1.c51) UNION ALL SELECT ALL vt1.c0 FROM vt1 NOT INDEXED, t1 WHERE ((NOT (t1.c51))) UNION ALL SELECT vt1.c0 FROM vt1, t1 WHERE (((t1.c51) ISNULL));
SELECT vt1.c0 FROM vt1, t1;
SELECT DISTINCT rt0.c1, vt0.c1, vt0.c2, rt0.c2, t1.c51 FROM rt0, t1, vt1, vt0;
SELECT DISTINCT rt0.c1, vt0.c1, vt0.c2, rt0.c2, t1.c51 FROM rt0 NOT INDEXED, t1, vt1, vt0 WHERE (((((rt0.c0)*(0.13872431198356783))) NOT NULL)) UNION SELECT DISTINCT rt0.c1, vt0.c1, vt0.c2, rt0.c2, t1.c51 FROM rt0, t1, vt1, vt0 WHERE ((NOT (((((rt0.c0)*(0.13872431198356783))) NOT NULL)))) UNION SELECT DISTINCT rt0.c1, vt0.c1, vt0.c2, rt0.c2, t1.c51 FROM rt0, t1, vt1, vt0 WHERE (((((((rt0.c0)*(0.13872431198356783))) NOT NULL)) ISNULL));
SELECT DISTINCT rt0.c1, vt0.c1, vt0.c2, rt0.c2, t1.c51 FROM rt0, t1, vt1, vt0;
SELECT ALL t1.c51, rt0.c3, rt0.c2, rt0.c4, vt0.c1, vt0.c2, rt0.c0, vt0.c0 FROM vt0, vt1, rt0, t1 GROUP BY t1.c51, rt0.c3, rt0.c2, rt0.c4, vt0.c1, vt0.c2, rt0.c0, vt0.c0;
SELECT ALL t1.c51, rt0.c3, rt0.c2, rt0.c4, vt0.c1, vt0.c2, rt0.c0, vt0.c0 FROM vt0, vt1, rt0, t1 WHERE (NULL COLLATE BINARY) GROUP BY t1.c51, rt0.c3, rt0.c2, rt0.c4, vt0.c1, vt0.c2, rt0.c0, vt0.c0 UNION SELECT ALL t1.c51, rt0.c3, rt0.c2, rt0.c4, vt0.c1, vt0.c2, rt0.c0, vt0.c0 FROM vt0, vt1, rt0, t1 WHERE ((NOT (NULL COLLATE BINARY))) GROUP BY t1.c51, rt0.c3, rt0.c2, rt0.c4, vt0.c1, vt0.c2, rt0.c0, vt0.c0 UNION SELECT ALL t1.c51, rt0.c3, rt0.c2, rt0.c4, vt0.c1, vt0.c2, rt0.c0, vt0.c0 FROM vt0, vt1, rt0, t1 WHERE (((NULL COLLATE BINARY) ISNULL)) GROUP BY t1.c51, rt0.c3, rt0.c2, rt0.c4, vt0.c1, vt0.c2, rt0.c0, vt0.c0;
SELECT ALL t1.c51, rt0.c3, rt0.c2, rt0.c4, vt0.c1, vt0.c2, rt0.c0, vt0.c0 FROM vt0, vt1, rt0, t1 GROUP BY t1.c51, rt0.c3, rt0.c2, rt0.c4, vt0.c1, vt0.c2, rt0.c0, vt0.c0;
SELECT ALL rt0.c1, rt0.c3, vt0.c0, rt0.c0, rt0.c4, t1.c51, vt0.c2, rt0.c2, vt1.c0 FROM vt0, vt1 INNER JOIN rt0 ON CAST(((((rt0.c4)AND(rt0.c3)))OR(rt0.c2)) AS INTEGER) FULL OUTER JOIN t1 ON vt1.c0 GROUP BY rt0.c1, rt0.c3, vt0.c0, rt0.c0, rt0.c4, t1.c51, vt0.c2, rt0.c2, vt1.c0;
SELECT ALL rt0.c1, rt0.c3, vt0.c0, rt0.c0, rt0.c4, t1.c51, vt0.c2, rt0.c2, vt1.c0 FROM vt0, vt1 INNER JOIN rt0 ON CAST(((((rt0.c4)AND(rt0.c3)))OR(rt0.c2)) AS INTEGER) FULL OUTER JOIN t1 ON vt1.c0 GROUP BY rt0.c1, rt0.c3, vt0.c0, rt0.c0, rt0.c4, t1.c51, vt0.c2, rt0.c2, vt1.c0 HAVING (- (MIN(vt1.c0))) UNION ALL SELECT rt0.c1, rt0.c3, vt0.c0, rt0.c0, rt0.c4, t1.c51, vt0.c2, rt0.c2, vt1.c0 FROM vt0, vt1 INNER JOIN rt0 ON CAST(((((rt0.c4)AND(rt0.c3)))OR(rt0.c2)) AS INTEGER) FULL OUTER JOIN t1 ON vt1.c0 GROUP BY rt0.c1, rt0.c3, vt0.c0, rt0.c0, rt0.c4, t1.c51, vt0.c2, rt0.c2, vt1.c0 HAVING (NOT ((- (MIN(vt1.c0))))) UNION ALL SELECT ALL rt0.c1, rt0.c3, vt0.c0, rt0.c0, rt0.c4, t1.c51, vt0.c2, rt0.c2, vt1.c0 FROM vt0, vt1 INNER JOIN rt0 ON CAST(((((rt0.c4)AND(rt0.c3)))OR(rt0.c2)) AS INTEGER) FULL OUTER JOIN t1 ON vt1.c0 GROUP BY rt0.c1, rt0.c3, vt0.c0, rt0.c0, rt0.c4, t1.c51, vt0.c2, rt0.c2, vt1.c0 HAVING (((- (MIN(vt1.c0)))) ISNULL);
SELECT ALL rt0.c1, rt0.c3, vt0.c0, rt0.c0, rt0.c4, t1.c51, vt0.c2, rt0.c2, vt1.c0 FROM vt0, vt1 INNER JOIN rt0 ON CAST(((((rt0.c4)AND(rt0.c3)))OR(rt0.c2)) AS INTEGER) FULL OUTER JOIN t1 ON vt1.c0 GROUP BY rt0.c1, rt0.c3, vt0.c0, rt0.c0, rt0.c4, t1.c51, vt0.c2, rt0.c2, vt1.c0;
SELECT ALL rt0.c1, rt0.c3, vt0.c0, rt0.c0, rt0.c4, t1.c51, vt0.c2, rt0.c2, vt1.c0 FROM vt0, vt1 INNER JOIN rt0 ON CAST(((((rt0.c4)AND(rt0.c3)))OR(rt0.c2)) AS INTEGER) FULL OUTER JOIN t1 ON vt1.c0 GROUP BY rt0.c1, rt0.c3, vt0.c0, rt0.c0, rt0.c4, t1.c51, vt0.c2, rt0.c2, vt1.c0 HAVING (- (MIN(vt1.c0))) UNION ALL SELECT rt0.c1, rt0.c3, vt0.c0, rt0.c0, rt0.c4, t1.c51, vt0.c2, rt0.c2, vt1.c0 FROM vt0, vt1 INNER JOIN rt0 ON CAST(((((rt0.c4)AND(rt0.c3)))OR(rt0.c2)) AS INTEGER) FULL OUTER JOIN t1 ON vt1.c0 GROUP BY rt0.c1, rt0.c3, vt0.c0, rt0.c0, rt0.c4, t1.c51, vt0.c2, rt0.c2, vt1.c0 HAVING (NOT ((- (MIN(vt1.c0))))) UNION ALL SELECT ALL rt0.c1, rt0.c3, vt0.c0, rt0.c0, rt0.c4, t1.c51, vt0.c2, rt0.c2, vt1.c0 FROM vt0, vt1 INNER JOIN rt0 ON CAST(((((rt0.c4)AND(rt0.c3)))OR(rt0.c2)) AS INTEGER) FULL OUTER JOIN t1 ON vt1.c0 GROUP BY rt0.c1, rt0.c3, vt0.c0, rt0.c0, rt0.c4, t1.c51, vt0.c2, rt0.c2, vt1.c0 HAVING (((- (MIN(vt1.c0)))) ISNULL);
SELECT ALL rt0.c1, rt0.c3, vt0.c0, rt0.c0, rt0.c4, t1.c51, vt0.c2, rt0.c2, vt1.c0 FROM vt0, vt1 INNER JOIN rt0 ON CAST(((((rt0.c4)AND(rt0.c3)))OR(rt0.c2)) AS INTEGER) FULL OUTER JOIN t1 ON vt1.c0 GROUP BY rt0.c1, rt0.c3, vt0.c0, rt0.c0, rt0.c4, t1.c51, vt0.c2, rt0.c2, vt1.c0;
SELECT ALL * FROM vt1, vt0, t1;
SELECT ALL * FROM vt1, vt0, t1 WHERE ((((0.7176733555370058))>((((vt1.c0)IS NOT(t1.c51)))))) UNION ALL SELECT * FROM vt1 NOT INDEXED, vt0, t1 WHERE ((NOT ((((0.7176733555370058))>((((vt1.c0)IS NOT(t1.c51)))))))) UNION ALL SELECT * FROM vt1, vt0, t1 WHERE ((((((0.7176733555370058))>((((vt1.c0)IS NOT(t1.c51)))))) ISNULL));
SELECT ALL * FROM vt1, vt0, t1;
SELECT DISTINCT * FROM vt0 FULL OUTER JOIN rt0 ON ((((rt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c2)))%((rt0.c0 IN ()))) CROSS JOIN t1 ON ((((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c4)))%(vt1.c0)) LEFT OUTER JOIN vt1 ON ((TYPEOF(DISTINCT x''))||((((vt0.c2)) BETWEEN ((vt0.c0)) AND ((rt0.c1)))));
SELECT vt0.c2, vt0.c1, vt1.c0, vt0.c0, t1.c51 FROM t1, vt1, vt0 GROUP BY vt0.c2, vt0.c1, vt1.c0, vt0.c0, t1.c51;
SELECT vt0.c2, vt0.c1, vt1.c0, vt0.c0, t1.c51 FROM t1, vt1, vt0 WHERE ((((vt0.c2)) BETWEEN ((vt0.c1)) AND ((x'')))) GROUP BY vt0.c2, vt0.c1, vt1.c0, vt0.c0, t1.c51 UNION SELECT ALL vt0.c2, vt0.c1, vt1.c0, vt0.c0, t1.c51 FROM t1, vt1, vt0 WHERE ((NOT ((((vt0.c2)) BETWEEN ((vt0.c1)) AND ((x'')))))) GROUP BY vt0.c2, vt0.c1, vt1.c0, vt0.c0, t1.c51 UNION SELECT ALL vt0.c2, vt0.c1, vt1.c0, vt0.c0, t1.c51 FROM t1, vt1, vt0 WHERE ((((((vt0.c2)) BETWEEN ((vt0.c1)) AND ((x'')))) ISNULL)) GROUP BY vt0.c2, vt0.c1, vt1.c0, vt0.c0, t1.c51;
SELECT vt0.c2, vt0.c1, vt1.c0, vt0.c0, t1.c51 FROM t1, vt1, vt0 GROUP BY vt0.c2, vt0.c1, vt1.c0, vt0.c0, t1.c51;
SELECT ALL vt0.c1, vt0.c2, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c2, vt0.c0;
SELECT vt0.c1, vt0.c2, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c2, vt0.c0 HAVING COUNT(*) UNION ALL SELECT vt0.c1, vt0.c2, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c2, vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt0.c1, vt0.c2, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c2, vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt0.c1, vt0.c2, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c2, vt0.c0;
SELECT vt0.c1, vt0.c2, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c2, vt0.c0 HAVING COUNT(*) UNION ALL SELECT vt0.c1, vt0.c2, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c2, vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt0.c1, vt0.c2, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c2, vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt0.c1, vt0.c2, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c2, vt0.c0;
SELECT * FROM t1, rt0, vt1 LEFT OUTER JOIN vt0 ON x'';
SELECT ALL * FROM t1, rt0, vt1 LEFT OUTER JOIN vt0 ON x'' WHERE ((((((((((rt0.c4)OR(rt0.c2)))OR(t1.c51)))OR(vt0.c0)))OR(t1.c51)) IN ())) UNION ALL SELECT ALL * FROM t1, rt0, vt1 LEFT OUTER JOIN vt0 ON x'' WHERE ((NOT ((((((((((rt0.c4)OR(rt0.c2)))OR(t1.c51)))OR(vt0.c0)))OR(t1.c51)) IN ())))) UNION ALL SELECT ALL * FROM t1, rt0, vt1 LEFT OUTER JOIN vt0 ON x'' WHERE ((((((((((((rt0.c4)OR(rt0.c2)))OR(t1.c51)))OR(vt0.c0)))OR(t1.c51)) IN ())) ISNULL));
SELECT * FROM t1, rt0, vt1 LEFT OUTER JOIN vt0 ON x'';
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (LIKELIHOOD(vt0.c0 COLLATE BINARY, 0.2511092244681845)) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (LIKELIHOOD(vt0.c0 COLLATE BINARY, 0.2511092244681845)))) UNION SELECT DISTINCT * FROM vt0 WHERE (((LIKELIHOOD(vt0.c0 COLLATE BINARY, 0.2511092244681845)) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL vt0.c2 FROM vt0 GROUP BY vt0.c2;
SELECT vt0.c2 FROM vt0 WHERE (CAST(((vt0.c2)%(vt0.c0)) AS REAL)) GROUP BY vt0.c2 UNION SELECT vt0.c2 FROM vt0 WHERE ((NOT (CAST(((vt0.c2)%(vt0.c0)) AS REAL)))) GROUP BY vt0.c2 UNION SELECT vt0.c2 FROM vt0 WHERE (((CAST(((vt0.c2)%(vt0.c0)) AS REAL)) ISNULL)) GROUP BY vt0.c2;
SELECT ALL vt0.c2 FROM vt0 GROUP BY vt0.c2;
SELECT ALL vt0.c0, vt0.c2 FROM vt0 FULL OUTER JOIN vt1 ON ((((((vt0.c0)AND(vt0.c1)))AND(vt0.c0)))>>(((vt1.c0)-(vt0.c2)))) GROUP BY vt0.c0, vt0.c2;
SELECT ALL vt0.c0, vt0.c2 FROM vt0 FULL OUTER JOIN vt1 ON ((((((vt0.c0)AND(vt0.c1)))AND(vt0.c0)))>>(((vt1.c0)-(vt0.c2)))) GROUP BY vt0.c0, vt0.c2 HAVING ((COUNT(NULL))||((((vt0.c1))>=((MAX(vt0.c2)))))) UNION ALL SELECT ALL vt0.c0, vt0.c2 FROM vt0 FULL OUTER JOIN vt1 ON ((((((vt0.c0)AND(vt0.c1)))AND(vt0.c0)))>>(((vt1.c0)-(vt0.c2)))) GROUP BY vt0.c0, vt0.c2 HAVING (NOT (((COUNT(NULL))||((((vt0.c1))>=((MAX(vt0.c2)))))))) UNION ALL SELECT ALL vt0.c0, vt0.c2 FROM vt0 FULL OUTER JOIN vt1 ON ((((((vt0.c0)AND(vt0.c1)))AND(vt0.c0)))>>(((vt1.c0)-(vt0.c2)))) GROUP BY vt0.c0, vt0.c2 HAVING ((((COUNT(NULL))||((((vt0.c1))>=((MAX(vt0.c2))))))) ISNULL);
SELECT ALL vt0.c0, vt0.c2 FROM vt0 FULL OUTER JOIN vt1 ON ((((((vt0.c0)AND(vt0.c1)))AND(vt0.c0)))>>(((vt1.c0)-(vt0.c2)))) GROUP BY vt0.c0, vt0.c2;
SELECT ALL vt0.c0, vt0.c2 FROM vt0 FULL OUTER JOIN vt1 ON ((((((vt0.c0)AND(vt0.c1)))AND(vt0.c0)))>>(((vt1.c0)-(vt0.c2)))) GROUP BY vt0.c0, vt0.c2 HAVING ((COUNT(NULL))||((((vt0.c1))>=((MAX(vt0.c2)))))) UNION ALL SELECT ALL vt0.c0, vt0.c2 FROM vt0 FULL OUTER JOIN vt1 ON ((((((vt0.c0)AND(vt0.c1)))AND(vt0.c0)))>>(((vt1.c0)-(vt0.c2)))) GROUP BY vt0.c0, vt0.c2 HAVING (NOT (((COUNT(NULL))||((((vt0.c1))>=((MAX(vt0.c2)))))))) UNION ALL SELECT ALL vt0.c0, vt0.c2 FROM vt0 FULL OUTER JOIN vt1 ON ((((((vt0.c0)AND(vt0.c1)))AND(vt0.c0)))>>(((vt1.c0)-(vt0.c2)))) GROUP BY vt0.c0, vt0.c2 HAVING ((((COUNT(NULL))||((((vt0.c1))>=((MAX(vt0.c2))))))) ISNULL);
SELECT ALL vt0.c0, vt0.c2 FROM vt0 FULL OUTER JOIN vt1 ON ((((((vt0.c0)AND(vt0.c1)))AND(vt0.c0)))>>(((vt1.c0)-(vt0.c2)))) GROUP BY vt0.c0, vt0.c2;
SELECT t1.c51 FROM t1, vt1;
SELECT ALL t1.c51 FROM t1, vt1 WHERE (((CASE t1.c51  WHEN vt1.c0 THEN vt1.c0 ELSE t1.c51 END) ISNULL)) UNION ALL SELECT ALL t1.c51 FROM t1, vt1 WHERE ((NOT (((CASE t1.c51  WHEN vt1.c0 THEN vt1.c0 ELSE t1.c51 END) ISNULL)))) UNION ALL SELECT ALL t1.c51 FROM t1 NOT INDEXED, vt1 WHERE (((((CASE t1.c51  WHEN vt1.c0 THEN vt1.c0 ELSE t1.c51 END) ISNULL)) ISNULL));
SELECT t1.c51 FROM t1, vt1;
SELECT DISTINCT vt0.c0 FROM rt0, vt0, t1, vt1;
SELECT DISTINCT vt0.c0 FROM rt0, vt0, t1, vt1 WHERE (CAST(rt0.c4 COLLATE BINARY AS INTEGER)) UNION SELECT DISTINCT vt0.c0 FROM rt0, vt0, t1, vt1 WHERE ((NOT (CAST(rt0.c4 COLLATE BINARY AS INTEGER)))) UNION SELECT DISTINCT vt0.c0 FROM rt0, vt0, t1, vt1 WHERE (((CAST(rt0.c4 COLLATE BINARY AS INTEGER)) ISNULL));
SELECT DISTINCT vt0.c0 FROM rt0, vt0, t1, vt1;
SELECT vt0.c0, vt0.c2 FROM vt0 GROUP BY vt0.c0, vt0.c2;
SELECT vt0.c0, vt0.c2 FROM vt0 WHERE ((((vt0.c2 COLLATE RTRIM, (((vt0.c2)) NOT BETWEEN ((vt0.c2)) AND ((vt0.c0))), ((vt0.c0) ISNULL)))!=((((vt0.c1)*(vt0.c1)), ('\rF' IN (vt0.c1)), CAST(vt0.c1 AS NUMERIC))))) GROUP BY vt0.c0, vt0.c2 UNION SELECT vt0.c0, vt0.c2 FROM vt0 WHERE ((NOT ((((vt0.c2 COLLATE RTRIM, (((vt0.c2)) NOT BETWEEN ((vt0.c2)) AND ((vt0.c0))), ((vt0.c0) ISNULL)))<>((((vt0.c1)*(vt0.c1)), ('\rF' IN (vt0.c1)), CAST(vt0.c1 AS NUMERIC))))))) GROUP BY vt0.c0, vt0.c2 UNION SELECT vt0.c0, vt0.c2 FROM vt0 WHERE ((((((vt0.c2 COLLATE RTRIM, (((vt0.c2)) NOT BETWEEN ((vt0.c2)) AND ((vt0.c0))), ((vt0.c0) ISNULL)))<>((((vt0.c1)*(vt0.c1)), ('\rF' IN (vt0.c1)), CAST(vt0.c1 AS NUMERIC))))) ISNULL)) GROUP BY vt0.c0, vt0.c2;
SELECT vt0.c0, vt0.c2 FROM vt0 GROUP BY vt0.c0, vt0.c2;
SELECT ALL vt0.c2 FROM vt0 INNER JOIN vt1 ON ((rt0.c3 COLLATE NOCASE)>>(NULL)) RIGHT OUTER JOIN t1 ON CASE ((vt1.c0)LIKE(vt0.c2))  WHEN '-649088088' THEN (((vt0.c0))>=((rt0.c2))) END RIGHT OUTER JOIN rt0 ON rt0.c0 GROUP BY vt0.c2;
SELECT * FROM rt0, t1, vt1;
SELECT * FROM rt0, t1, vt1 WHERE (rt0.c2) UNION ALL SELECT ALL * FROM rt0, t1, vt1 WHERE ((NOT (rt0.c2))) UNION ALL SELECT ALL * FROM rt0, t1, vt1 WHERE (((rt0.c2) ISNULL));
SELECT * FROM rt0, t1, vt1;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (CASE vt0.c1  WHEN vt0.c0 THEN vt0.c2 END COLLATE RTRIM) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (CASE vt0.c1  WHEN vt0.c0 THEN vt0.c2 END COLLATE RTRIM))) UNION SELECT DISTINCT * FROM vt0 WHERE (((CASE vt0.c1  WHEN vt0.c0 THEN vt0.c2 END COLLATE RTRIM) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL rt0.c3, rt0.c0, t1.c51, vt0.c0, vt0.c1, rt0.c2, rt0.c1, rt0.c4 FROM vt1, t1, rt0, vt0 GROUP BY rt0.c3, rt0.c0, t1.c51, vt0.c0, vt0.c1, rt0.c2, rt0.c1, rt0.c4;
SELECT ALL rt0.c3, rt0.c0, t1.c51, vt0.c0, vt0.c1, rt0.c2, rt0.c1, rt0.c4 FROM vt1, t1, rt0, vt0 WHERE (CAST((NOT (vt0.c1)) AS NUMERIC)) GROUP BY rt0.c3, rt0.c0, t1.c51, vt0.c0, vt0.c1, rt0.c2, rt0.c1, rt0.c4 UNION SELECT ALL rt0.c3, rt0.c0, t1.c51, vt0.c0, vt0.c1, rt0.c2, rt0.c1, rt0.c4 FROM vt1, t1, rt0, vt0 WHERE ((NOT (CAST((NOT (vt0.c1)) AS NUMERIC)))) GROUP BY rt0.c3, rt0.c0, t1.c51, vt0.c0, vt0.c1, rt0.c2, rt0.c1, rt0.c4 UNION SELECT rt0.c3, rt0.c0, t1.c51, vt0.c0, vt0.c1, rt0.c2, rt0.c1, rt0.c4 FROM vt1, t1, rt0, vt0 WHERE (((CAST((NOT (vt0.c1)) AS NUMERIC)) ISNULL)) GROUP BY rt0.c3, rt0.c0, t1.c51, vt0.c0, vt0.c1, rt0.c2, rt0.c1, rt0.c4;
SELECT ALL rt0.c3, rt0.c0, t1.c51, vt0.c0, vt0.c1, rt0.c2, rt0.c1, rt0.c4 FROM vt1, t1, rt0, vt0 GROUP BY rt0.c3, rt0.c0, t1.c51, vt0.c0, vt0.c1, rt0.c2, rt0.c1, rt0.c4;
SELECT t1.c51 FROM t1 GROUP BY t1.c51;
SELECT t1.c51 FROM t1 GROUP BY t1.c51 HAVING LIKELIHOOD(COUNT(AVG(t1.c51)), 0.4768346528137536) UNION ALL SELECT ALL t1.c51 FROM t1 GROUP BY t1.c51 HAVING (NOT (LIKELIHOOD(COUNT(AVG(t1.c51)), 0.4768346528137536))) UNION ALL SELECT t1.c51 FROM t1 GROUP BY t1.c51 HAVING ((LIKELIHOOD(COUNT(AVG(t1.c51)), 0.4768346528137536)) ISNULL);
SELECT ALL rt0.c3, rt0.c0, rt0.c1, rt0.c2, vt0.c0, t1.c51, vt0.c2, vt0.c1, vt1.c0 FROM vt1, vt0, t1, rt0;
SELECT rt0.c3, rt0.c0, rt0.c1, rt0.c2, vt0.c0, t1.c51, vt0.c2, vt0.c1, vt1.c0 FROM vt1, vt0, t1, rt0 WHERE (rt0.c1) UNION ALL SELECT rt0.c3, rt0.c0, rt0.c1, rt0.c2, vt0.c0, t1.c51, vt0.c2, vt0.c1, vt1.c0 FROM vt1, vt0, t1, rt0 WHERE ((NOT (rt0.c1))) UNION ALL SELECT rt0.c3, rt0.c0, rt0.c1, rt0.c2, vt0.c0, t1.c51, vt0.c2, vt0.c1, vt1.c0 FROM vt1, vt0, t1, rt0 WHERE (((rt0.c1) ISNULL));
SELECT ALL rt0.c3, rt0.c0, rt0.c1, rt0.c2, vt0.c0, t1.c51, vt0.c2, vt0.c1, vt1.c0 FROM vt1, vt0, t1, rt0;
SELECT DISTINCT * FROM t1, rt0, vt1 INNER JOIN vt0 ON ((((((rt0.c2) BETWEEN (t1.c51) AND (rt0.c1)))AND(((rt0.c4) NOTNULL))))AND(((vt0.c0) BETWEEN (vt0.c2) AND (vt0.c1))));
SELECT DISTINCT * FROM t1, rt0, vt1 INNER JOIN vt0 ON ((((((rt0.c2) BETWEEN (t1.c51) AND (rt0.c1)))AND(((rt0.c4) NOTNULL))))AND(((vt0.c0) BETWEEN (vt0.c2) AND (vt0.c1)))) WHERE (CASE vt0.c2  WHEN '-1545516907' THEN rt0.c1 WHEN rt0.c2 THEN rt0.c4 WHEN vt0.c2 THEN vt0.c2 ELSE vt1.c0 END COLLATE BINARY) UNION SELECT DISTINCT * FROM t1, rt0, vt1 INNER JOIN vt0 ON ((((((rt0.c2) BETWEEN (t1.c51) AND (rt0.c1)))AND(((rt0.c4) NOTNULL))))AND(((vt0.c0) BETWEEN (vt0.c2) AND (vt0.c1)))) WHERE ((NOT (CASE vt0.c2  WHEN '-1545516907' THEN rt0.c1 WHEN rt0.c2 THEN rt0.c4 WHEN vt0.c2 THEN vt0.c2 ELSE vt1.c0 END COLLATE BINARY))) UNION SELECT DISTINCT * FROM t1, rt0, vt1 INNER JOIN vt0 ON ((((((rt0.c2) BETWEEN (t1.c51) AND (rt0.c1)))AND(((rt0.c4) NOTNULL))))AND(((vt0.c0) BETWEEN (vt0.c2) AND (vt0.c1)))) WHERE (((CASE vt0.c2  WHEN '-1545516907' THEN rt0.c1 WHEN rt0.c2 THEN rt0.c4 WHEN vt0.c2 THEN vt0.c2 ELSE vt1.c0 END COLLATE BINARY) ISNULL));
SELECT DISTINCT * FROM t1, rt0, vt1 INNER JOIN vt0 ON ((((((rt0.c2) BETWEEN (t1.c51) AND (rt0.c1)))AND(((rt0.c4) NOTNULL))))AND(((vt0.c0) BETWEEN (vt0.c2) AND (vt0.c1))));
SELECT vt0.c0, rt0.c3, rt0.c0 FROM vt0, vt1 INNER JOIN rt0 ON ((rt0.c4 COLLATE BINARY)>>(((x'')-(vt0.c0)))) CROSS JOIN t1 ON (CASE vt0.c2  WHEN vt1.c0 THEN vt0.c0 WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c4 THEN vt0.c2 ELSE rt0.c4 END IN (((vt0.c0) IS TRUE), ((t1.c51)<<(vt0.c0)))) GROUP BY vt0.c0, rt0.c3, rt0.c0;
SELECT vt0.c0, rt0.c3, rt0.c0 FROM vt0, vt1 INNER JOIN rt0 ON ((rt0.c4 COLLATE BINARY)>>(((x'')-(vt0.c0)))) CROSS JOIN t1 ON (CASE vt0.c2  WHEN vt1.c0 THEN vt0.c0 WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c4 THEN vt0.c2 ELSE rt0.c4 END IN (((vt0.c0) IS TRUE), ((t1.c51)<<(vt0.c0)))) WHERE ((('364149508')GLOB((vt0.c2 IN (vt0.c1))))) GROUP BY vt0.c0, rt0.c3, rt0.c0 UNION SELECT vt0.c0, rt0.c3, rt0.c0 FROM vt0, vt1 INNER JOIN rt0 ON ((rt0.c4 COLLATE BINARY)>>(((x'')-(vt0.c0)))) CROSS JOIN t1 ON (CASE vt0.c2  WHEN vt1.c0 THEN vt0.c0 WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c4 THEN vt0.c2 ELSE rt0.c4 END IN (((vt0.c0) IS TRUE), ((t1.c51)<<(vt0.c0)))) WHERE ((NOT ((('364149508')GLOB((vt0.c2 IN (vt0.c1))))))) GROUP BY vt0.c0, rt0.c3, rt0.c0 UNION SELECT vt0.c0, rt0.c3, rt0.c0 FROM vt0, vt1 INNER JOIN rt0 ON ((rt0.c4 COLLATE BINARY)>>(((x'')-(vt0.c0)))) CROSS JOIN t1 ON (CASE vt0.c2  WHEN vt1.c0 THEN vt0.c0 WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c4 THEN vt0.c2 ELSE rt0.c4 END IN (((vt0.c0) IS TRUE), ((t1.c51)<<(vt0.c0)))) WHERE ((((('364149508')GLOB((vt0.c2 IN (vt0.c1))))) ISNULL)) GROUP BY vt0.c0, rt0.c3, rt0.c0;
SELECT vt0.c0, rt0.c3, rt0.c0 FROM vt0, vt1 INNER JOIN rt0 ON ((rt0.c4 COLLATE BINARY)>>(((x'')-(vt0.c0)))) CROSS JOIN t1 ON (CASE vt0.c2  WHEN vt1.c0 THEN vt0.c0 WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c4 THEN vt0.c2 ELSE rt0.c4 END IN (((vt0.c0) IS TRUE), ((t1.c51)<<(vt0.c0)))) GROUP BY vt0.c0, rt0.c3, rt0.c0;
SELECT rt0.c4, rt0.c2, vt0.c1, rt0.c0, t1.c51, vt0.c0 FROM vt0, rt0, t1 GROUP BY rt0.c4, rt0.c2, vt0.c1, rt0.c0, t1.c51, vt0.c0;
SELECT rt0.c4, rt0.c2, vt0.c1, rt0.c0, t1.c51, vt0.c0 FROM vt0, rt0, t1 GROUP BY rt0.c4, rt0.c2, vt0.c1, rt0.c0, t1.c51, vt0.c0 HAVING AVG(MIN(SUM(t1.c51))) UNION ALL SELECT rt0.c4, rt0.c2, vt0.c1, rt0.c0, t1.c51, vt0.c0 FROM vt0, rt0, t1 GROUP BY rt0.c4, rt0.c2, vt0.c1, rt0.c0, t1.c51, vt0.c0 HAVING (NOT (AVG(MIN(SUM(t1.c51))))) UNION ALL SELECT ALL rt0.c4, rt0.c2, vt0.c1, rt0.c0, t1.c51, vt0.c0 FROM vt0, rt0, t1 GROUP BY rt0.c4, rt0.c2, vt0.c1, rt0.c0, t1.c51, vt0.c0 HAVING ((AVG(MIN(SUM(t1.c51)))) ISNULL);
SELECT rt0.c1, rt0.c3, rt0.c2, vt0.c2, t1.c51 FROM t1 INNER JOIN rt0 ON (- ((- (t1.c51)))) RIGHT OUTER JOIN vt1 ON DATETIME((+ (vt0.c2)), (((0Xffffffffc91b15d3))<>((rt0.c4))), ((vt1.c0) BETWEEN (rt0.c1) AND (vt0.c2))) FULL OUTER JOIN vt0 ON ((rt0.c0) NOT BETWEEN (LOWER(DISTINCT rt0.c0)) AND ((- (rt0.c0))));
SELECT DISTINCT * FROM rt0, t1, vt0;
SELECT DISTINCT * FROM rt0, t1, vt0 WHERE ((((vt0.c2 IN (rt0.c4))) IS FALSE)) UNION SELECT DISTINCT * FROM rt0, t1, vt0 WHERE ((NOT ((((vt0.c2 IN (rt0.c4))) IS FALSE)))) UNION SELECT DISTINCT * FROM rt0, t1, vt0 WHERE ((((((vt0.c2 IN (rt0.c4))) IS FALSE)) ISNULL));
SELECT DISTINCT * FROM rt0, t1, vt0;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 WHERE (CAST(((((rt0.c2)OR(rt0.c0)))AND(NULL)) AS INTEGER)) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0 WHERE ((NOT (CAST(((((rt0.c2)OR(rt0.c0)))AND(NULL)) AS INTEGER)))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0 WHERE (((CAST(((((rt0.c2)OR(rt0.c0)))AND(NULL)) AS INTEGER)) ISNULL)) GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT vt0.c1, vt1.c0 FROM vt1, vt0, rt0 GROUP BY vt0.c1, vt1.c0;
SELECT vt0.c1, vt1.c0 FROM vt1, vt0, rt0 GROUP BY vt0.c1, vt1.c0 HAVING ((((((((((((CASE SUM(SUM(vt1.c0))  WHEN COUNT(*) THEN vt0.c1 END)AND(((SUM(SUM(SUM(MIN(vt1.c0))))) NOTNULL))))OR(SUM(rt0.c3))))AND(MIN(TOTAL(GROUP_CONCAT(COUNT(*)))))))AND(((rt0.c4)>(MAX(rt0.c3))))))OR(AVG(GROUP_CONCAT(NULL)))))AND((+ (rt0.c2)))) UNION ALL SELECT ALL vt0.c1, vt1.c0 FROM vt1, vt0, rt0 GROUP BY vt0.c1, vt1.c0 HAVING (NOT (((((((((((((CASE SUM(SUM(vt1.c0))  WHEN COUNT(*) THEN vt0.c1 END)AND(((SUM(SUM(SUM(MIN(vt1.c0))))) NOTNULL))))OR(SUM(rt0.c3))))AND(MIN(TOTAL(GROUP_CONCAT(COUNT(*)))))))AND(((rt0.c4)>(MAX(rt0.c3))))))OR(AVG(GROUP_CONCAT(NULL)))))AND((+ (rt0.c2)))))) UNION ALL SELECT ALL vt0.c1, vt1.c0 FROM vt1, vt0, rt0 GROUP BY vt0.c1, vt1.c0 HAVING ((((((((((((((CASE SUM(SUM(vt1.c0))  WHEN COUNT(*) THEN vt0.c1 END)AND(((SUM(SUM(SUM(MIN(vt1.c0))))) NOTNULL))))OR(SUM(rt0.c3))))AND(MIN(TOTAL(GROUP_CONCAT(COUNT(*)))))))AND(((rt0.c4)>(MAX(rt0.c3))))))OR(AVG(GROUP_CONCAT(NULL)))))AND((+ (rt0.c2))))) ISNULL);
SELECT ALL t1.c51 FROM t1;
SELECT t1.c51 FROM t1 WHERE ((t1.c51 IN ())) UNION ALL SELECT ALL t1.c51 FROM t1 WHERE ((NOT ((t1.c51 IN ())))) UNION ALL SELECT t1.c51 FROM t1 WHERE ((((t1.c51 IN ())) ISNULL));
SELECT ALL t1.c51 FROM t1;
SELECT DISTINCT * FROM vt1, t1, rt0;
SELECT DISTINCT * FROM vt1, t1, rt0 WHERE ((((((rt0.c1, rt0.c1, '148017977'))>=((rt0.c3, t1.c51, t1.c51)))) IS TRUE)) UNION SELECT DISTINCT * FROM vt1, t1, rt0 WHERE ((NOT ((((((rt0.c1, rt0.c1, '148017977'))>=((rt0.c3, t1.c51, t1.c51)))) IS TRUE)))) UNION SELECT DISTINCT * FROM vt1, t1, rt0 WHERE ((((((((rt0.c1, rt0.c1, '148017977'))>=((rt0.c3, t1.c51, t1.c51)))) IS TRUE)) ISNULL));
SELECT DISTINCT * FROM vt1, t1, rt0;
SELECT ALL rt0.c4, rt0.c1, vt0.c0, t1.c51, vt0.c1, rt0.c3, rt0.c0, rt0.c2 FROM vt0, t1, rt0 GROUP BY rt0.c4, rt0.c1, vt0.c0, t1.c51, vt0.c1, rt0.c3, rt0.c0, rt0.c2;
SELECT ALL rt0.c4, rt0.c1, vt0.c0, t1.c51, vt0.c1, rt0.c3, rt0.c0, rt0.c2 FROM vt0, t1, rt0 WHERE ((('X<' COLLATE NOCASE) ISNULL)) GROUP BY rt0.c4, rt0.c1, vt0.c0, t1.c51, vt0.c1, rt0.c3, rt0.c0, rt0.c2 UNION SELECT ALL rt0.c4, rt0.c1, vt0.c0, t1.c51, vt0.c1, rt0.c3, rt0.c0, rt0.c2 FROM vt0, t1, rt0 WHERE ((NOT ((('X<' COLLATE NOCASE) ISNULL)))) GROUP BY rt0.c4, rt0.c1, vt0.c0, t1.c51, vt0.c1, rt0.c3, rt0.c0, rt0.c2 UNION SELECT rt0.c4, rt0.c1, vt0.c0, t1.c51, vt0.c1, rt0.c3, rt0.c0, rt0.c2 FROM vt0 NOT INDEXED, t1, rt0 WHERE ((((('X<' COLLATE NOCASE) ISNULL)) ISNULL)) GROUP BY rt0.c4, rt0.c1, vt0.c0, t1.c51, vt0.c1, rt0.c3, rt0.c0, rt0.c2;
SELECT ALL rt0.c4, rt0.c1, vt0.c0, t1.c51, vt0.c1, rt0.c3, rt0.c0, rt0.c2 FROM vt0, t1, rt0 GROUP BY rt0.c4, rt0.c1, vt0.c0, t1.c51, vt0.c1, rt0.c3, rt0.c0, rt0.c2;
SELECT ALL vt0.c2 FROM vt0 GROUP BY vt0.c2;
SELECT vt0.c2 FROM vt0 GROUP BY vt0.c2 HAVING ((((AVG(COUNT(vt0.c0))) IS FALSE)) IS FALSE) UNION ALL SELECT ALL vt0.c2 FROM vt0 GROUP BY vt0.c2 HAVING (NOT (((((AVG(COUNT(vt0.c0))) IS FALSE)) IS FALSE))) UNION ALL SELECT vt0.c2 FROM vt0 GROUP BY vt0.c2 HAVING ((((((AVG(COUNT(vt0.c0))) IS FALSE)) IS FALSE)) ISNULL);
SELECT rt0.c3, rt0.c4, rt0.c1, rt0.c2, vt0.c1, rt0.c0, t1.c51 FROM vt0, t1 RIGHT OUTER JOIN rt0 ON TYPEOF(DISTINCT ((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c0)));
SELECT rt0.c3, rt0.c4, rt0.c1, rt0.c2, vt0.c1, rt0.c0, t1.c51 FROM vt0, t1 RIGHT OUTER JOIN rt0 ON TYPEOF(DISTINCT ((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c0))) WHERE ((((((((rt0.c0)) BETWEEN ((vt0.c0)) AND ((rt0.c3))))OR((((rt0.c0))==((rt0.c0))))))OR(json_array_length(vt0.c1, vt0.c2)))) UNION ALL SELECT rt0.c3, rt0.c4, rt0.c1, rt0.c2, vt0.c1, rt0.c0, t1.c51 FROM vt0, t1 RIGHT OUTER JOIN rt0 ON TYPEOF(DISTINCT ((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c0))) WHERE ((NOT ((((((((rt0.c0)) BETWEEN ((vt0.c0)) AND ((rt0.c3))))OR((((rt0.c0))=((rt0.c0))))))OR(json_array_length(vt0.c1, vt0.c2)))))) UNION ALL SELECT rt0.c3, rt0.c4, rt0.c1, rt0.c2, vt0.c1, rt0.c0, t1.c51 FROM vt0, t1 RIGHT OUTER JOIN rt0 ON TYPEOF(DISTINCT ((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c0))) WHERE ((((((((((rt0.c0)) BETWEEN ((vt0.c0)) AND ((rt0.c3))))OR((((rt0.c0))=((rt0.c0))))))OR(json_array_length(vt0.c1, vt0.c2)))) ISNULL));
SELECT rt0.c3, rt0.c4, rt0.c1, rt0.c2, vt0.c1, rt0.c0, t1.c51 FROM vt0, t1 RIGHT OUTER JOIN rt0 ON TYPEOF(DISTINCT ((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c0)));
SELECT DISTINCT * FROM vt1, rt0;
SELECT DISTINCT * FROM vt1, rt0 WHERE ((~ ((((rt0.c3)) BETWEEN ((rt0.c4)) AND ((rt0.c1)))))) UNION SELECT DISTINCT * FROM vt1, rt0 WHERE ((NOT ((~ ((((rt0.c3)) BETWEEN ((rt0.c4)) AND ((rt0.c1)))))))) UNION SELECT DISTINCT * FROM vt1, rt0 WHERE ((((~ ((((rt0.c3)) BETWEEN ((rt0.c4)) AND ((rt0.c1)))))) ISNULL));
SELECT DISTINCT * FROM vt1, rt0;
SELECT rt0.c4 FROM vt0, rt0, t1 GROUP BY rt0.c4;
SELECT rt0.c4 FROM vt0, rt0, t1 WHERE (((vt0.c2) NOT BETWEEN ((t1.c51 IN ())) AND (((rt0.c2)IS NOT(rt0.c4))))) GROUP BY rt0.c4 UNION SELECT ALL rt0.c4 FROM vt0, rt0, t1 WHERE ((NOT (((vt0.c2) NOT BETWEEN ((t1.c51 IN ())) AND (((rt0.c2)IS NOT(rt0.c4))))))) GROUP BY rt0.c4 UNION SELECT rt0.c4 FROM vt0, rt0, t1 WHERE (((((vt0.c2) NOT BETWEEN ((t1.c51 IN ())) AND (((rt0.c2)IS NOT(rt0.c4))))) ISNULL)) GROUP BY rt0.c4;
SELECT rt0.c4 FROM vt0, rt0, t1 GROUP BY rt0.c4;
SELECT vt0.c0, vt0.c2, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c2, vt0.c1;
SELECT ALL vt0.c0, vt0.c2, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c2, vt0.c1 HAVING x'' UNION ALL SELECT vt0.c0, vt0.c2, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c2, vt0.c1 HAVING (NOT (x'')) UNION ALL SELECT ALL vt0.c0, vt0.c2, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c2, vt0.c1 HAVING ((x'') ISNULL);
SELECT vt0.c0, vt0.c2, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c2, vt0.c1;
SELECT ALL vt0.c0, vt0.c2, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c2, vt0.c1 HAVING x'' UNION ALL SELECT vt0.c0, vt0.c2, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c2, vt0.c1 HAVING (NOT (x'')) UNION ALL SELECT ALL vt0.c0, vt0.c2, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c2, vt0.c1 HAVING ((x'') ISNULL);
SELECT vt0.c0, vt0.c2, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c2, vt0.c1;
SELECT * FROM t1;
SELECT * FROM t1 WHERE (CASE WHEN ((x'')LIKE(t1.c51)) THEN ((t1.c51) BETWEEN (t1.c51) AND (t1.c51)) END) UNION ALL SELECT * FROM t1 WHERE ((NOT (CASE WHEN ((x'')LIKE(t1.c51)) THEN ((t1.c51) BETWEEN (t1.c51) AND (t1.c51)) END))) UNION ALL SELECT ALL * FROM t1 WHERE (((CASE WHEN ((x'')LIKE(t1.c51)) THEN ((t1.c51) BETWEEN (t1.c51) AND (t1.c51)) END) ISNULL));
SELECT * FROM t1;
SELECT DISTINCT * FROM vt0, vt1;
SELECT DISTINCT * FROM vt0, vt1 WHERE ((((5.52859601E8)&(-1490582492)) IN (CAST(vt0.c0 AS TEXT)))) UNION SELECT DISTINCT * FROM vt0, vt1 WHERE ((NOT ((((5.52859601E8)&(-1490582492)) IN (CAST(vt0.c0 AS TEXT)))))) UNION SELECT DISTINCT * FROM vt0, vt1 WHERE ((((((5.52859601E8)&(-1490582492)) IN (CAST(vt0.c0 AS TEXT)))) ISNULL));
SELECT DISTINCT * FROM vt0, vt1;
SELECT vt0.c0 FROM vt0, vt1 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0, vt1 WHERE (NULL) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0, vt1 WHERE ((NOT (NULL))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0, vt1 WHERE (((NULL) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0, vt1 GROUP BY vt0.c0;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING COUNT(((rt0.c3) BETWEEN (COUNT(*)) AND (TOTAL(AVG(rt0.c2))))) UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT (COUNT(((rt0.c3) BETWEEN (COUNT(*)) AND (TOTAL(AVG(rt0.c2))))))) UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING ((COUNT(((rt0.c3) BETWEEN (COUNT(*)) AND (TOTAL(AVG(rt0.c2)))))) ISNULL);
SELECT ALL * FROM vt0, vt1;
SELECT * FROM vt0, vt1 WHERE ((((((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0))))=((vt0.c1 COLLATE RTRIM)))) UNION ALL SELECT ALL * FROM vt0, vt1 WHERE ((NOT ((((((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0))))=((vt0.c1 COLLATE RTRIM)))))) UNION ALL SELECT * FROM vt0, vt1 WHERE ((((((((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0))))==((vt0.c1 COLLATE RTRIM)))) ISNULL));
SELECT ALL * FROM vt0, vt1;
SELECT DISTINCT rt0.c3, rt0.c0 FROM vt0, rt0;
SELECT DISTINCT rt0.c3, rt0.c0 FROM vt0, rt0 WHERE ((((rt0.c4 IN ())) IS TRUE)) UNION SELECT DISTINCT rt0.c3, rt0.c0 FROM vt0, rt0 WHERE ((NOT ((((rt0.c4 IN ())) IS TRUE)))) UNION SELECT DISTINCT rt0.c3, rt0.c0 FROM vt0, rt0 WHERE ((((((rt0.c4 IN ())) IS TRUE)) ISNULL));
SELECT DISTINCT rt0.c3, rt0.c0 FROM vt0, rt0;
SELECT rt0.c3, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c3, rt0.c1, rt0.c2;
SELECT rt0.c3, rt0.c1, rt0.c2 FROM rt0 WHERE (((((((((((rt0.c1)||(-1.829891338E9)))AND(((rt0.c0)|(x'a18e')))))AND((((rt0.c0, rt0.c4, rt0.c2))==((rt0.c1, rt0.c4, x''))))))AND((rt0.c3 IN (rt0.c4)))))AND((rt0.c4 IN ())))) GROUP BY rt0.c3, rt0.c1, rt0.c2 UNION SELECT rt0.c3, rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (((((((((((rt0.c1)||(-1.829891338E9)))AND(((rt0.c0)|(x'a18e')))))AND((((rt0.c0, rt0.c4, rt0.c2))==((rt0.c1, rt0.c4, x''))))))AND((rt0.c3 IN (rt0.c4)))))AND((rt0.c4 IN ())))))) GROUP BY rt0.c3, rt0.c1, rt0.c2 UNION SELECT rt0.c3, rt0.c1, rt0.c2 FROM rt0 WHERE (((((((((((((rt0.c1)||(-1.829891338E9)))AND(((rt0.c0)|(x'a18e')))))AND((((rt0.c0, rt0.c4, rt0.c2))=((rt0.c1, rt0.c4, x''))))))AND((rt0.c3 IN (rt0.c4)))))AND((rt0.c4 IN ())))) ISNULL)) GROUP BY rt0.c3, rt0.c1, rt0.c2;
SELECT rt0.c3, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c3, rt0.c1, rt0.c2;
SELECT rt0.c0, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c0, vt0.c0;
SELECT rt0.c0, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c0, vt0.c0 HAVING vt0.c2 UNION ALL SELECT rt0.c0, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c0, vt0.c0 HAVING (NOT (vt0.c2)) UNION ALL SELECT ALL rt0.c0, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c0, vt0.c0 HAVING ((vt0.c2) ISNULL);
SELECT rt0.c0, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c0, vt0.c0;
SELECT rt0.c0, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c0, vt0.c0 HAVING vt0.c2 UNION ALL SELECT rt0.c0, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c0, vt0.c0 HAVING (NOT (vt0.c2)) UNION ALL SELECT ALL rt0.c0, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c0, vt0.c0 HAVING ((vt0.c2) ISNULL);
SELECT rt0.c0, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c0, vt0.c0;
SELECT * FROM t1, vt1, rt0, vt0;
SELECT ALL * FROM t1, vt1, rt0 NOT INDEXED, vt0 WHERE ((((- (vt0.c1)))%(((rt0.c3)GLOB(vt0.c2))))) UNION ALL SELECT * FROM t1, vt1, rt0, vt0 WHERE ((NOT ((((- (vt0.c1)))%(((rt0.c3)GLOB(vt0.c2))))))) UNION ALL SELECT ALL * FROM t1, vt1, rt0, vt0 WHERE ((((((- (vt0.c1)))%(((rt0.c3)GLOB(vt0.c2))))) ISNULL));
SELECT * FROM t1, vt1, rt0, vt0;
SELECT DISTINCT rt0.c1, t1.c51, vt0.c0 FROM vt0, vt1 CROSS JOIN t1 ON (((rt0.c4 IN ())) BETWEEN (((rt0.c4) BETWEEN (vt1.c0) AND (rt0.c0))) AND ('')) INNER JOIN rt0 ON IFNULL((((t1.c51))<=((rt0.c2))), (~ (rt0.c1)));
SELECT DISTINCT rt0.c1, t1.c51, vt0.c0 FROM vt0, vt1 CROSS JOIN t1 ON (((rt0.c4 IN ())) BETWEEN (((rt0.c4) BETWEEN (vt1.c0) AND (rt0.c0))) AND ('')) INNER JOIN rt0 ON IFNULL((((t1.c51))<=((rt0.c2))), (~ (rt0.c1))) WHERE (((rt0.c4) NOT BETWEEN (rt0.c0) AND (NULL)) COLLATE RTRIM) UNION SELECT DISTINCT rt0.c1, t1.c51, vt0.c0 FROM vt0, vt1 CROSS JOIN t1 ON (((rt0.c4 IN ())) BETWEEN (((rt0.c4) BETWEEN (vt1.c0) AND (rt0.c0))) AND ('')) INNER JOIN rt0 ON IFNULL((((t1.c51))<=((rt0.c2))), (~ (rt0.c1))) WHERE ((NOT (((rt0.c4) NOT BETWEEN (rt0.c0) AND (NULL)) COLLATE RTRIM))) UNION SELECT DISTINCT rt0.c1, t1.c51, vt0.c0 FROM vt0, vt1 CROSS JOIN t1 ON (((rt0.c4 IN ())) BETWEEN (((rt0.c4) BETWEEN (vt1.c0) AND (rt0.c0))) AND ('')) INNER JOIN rt0 ON IFNULL((((t1.c51))<=((rt0.c2))), (~ (rt0.c1))) WHERE (((((rt0.c4) NOT BETWEEN (rt0.c0) AND (NULL)) COLLATE RTRIM) ISNULL));
SELECT DISTINCT rt0.c1, t1.c51, vt0.c0 FROM vt0, vt1 CROSS JOIN t1 ON (((rt0.c4 IN ())) BETWEEN (((rt0.c4) BETWEEN (vt1.c0) AND (rt0.c0))) AND ('')) INNER JOIN rt0 ON IFNULL((((t1.c51))<=((rt0.c2))), (~ (rt0.c1)));
SELECT t1.c51, rt0.c1 FROM rt0, t1 GROUP BY t1.c51, rt0.c1;
SELECT t1.c51, rt0.c1 FROM rt0, t1 WHERE ((NOT (x'855c' COLLATE BINARY))) GROUP BY t1.c51, rt0.c1 UNION SELECT ALL t1.c51, rt0.c1 FROM rt0, t1 WHERE ((NOT ((NOT (x'855c' COLLATE BINARY))))) GROUP BY t1.c51, rt0.c1 UNION SELECT ALL t1.c51, rt0.c1 FROM rt0, t1 WHERE ((((NOT (x'855c' COLLATE BINARY))) ISNULL)) GROUP BY t1.c51, rt0.c1;
SELECT t1.c51, rt0.c1 FROM rt0, t1 GROUP BY t1.c51, rt0.c1;
SELECT rt0.c2, rt0.c0, t1.c51, vt1.c0, rt0.c4, rt0.c1, rt0.c3 FROM t1, vt1 CROSS JOIN rt0 ON t1.c51 GROUP BY rt0.c2, rt0.c0, t1.c51, vt1.c0, rt0.c4, rt0.c1, rt0.c3;
SELECT rt0.c2, rt0.c0, t1.c51, vt1.c0, rt0.c4, rt0.c1, rt0.c3 FROM t1, vt1 CROSS JOIN rt0 ON t1.c51 GROUP BY rt0.c2, rt0.c0, t1.c51, vt1.c0, rt0.c4, rt0.c1, rt0.c3 HAVING (((SUM(rt0.c3)) BETWEEN (rt0.c2) AND (AVG(COUNT(*)))) IN ()) UNION ALL SELECT rt0.c2, rt0.c0, t1.c51, vt1.c0, rt0.c4, rt0.c1, rt0.c3 FROM t1, vt1 CROSS JOIN rt0 ON t1.c51 GROUP BY rt0.c2, rt0.c0, t1.c51, vt1.c0, rt0.c4, rt0.c1, rt0.c3 HAVING (NOT ((((SUM(rt0.c3)) BETWEEN (rt0.c2) AND (AVG(COUNT(*)))) IN ()))) UNION ALL SELECT ALL rt0.c2, rt0.c0, t1.c51, vt1.c0, rt0.c4, rt0.c1, rt0.c3 FROM t1, vt1 CROSS JOIN rt0 ON t1.c51 GROUP BY rt0.c2, rt0.c0, t1.c51, vt1.c0, rt0.c4, rt0.c1, rt0.c3 HAVING (((((SUM(rt0.c3)) BETWEEN (rt0.c2) AND (AVG(COUNT(*)))) IN ())) ISNULL);
SELECT rt0.c2, rt0.c0, t1.c51, vt1.c0, rt0.c4, rt0.c1, rt0.c3 FROM t1, vt1 CROSS JOIN rt0 ON t1.c51 GROUP BY rt0.c2, rt0.c0, t1.c51, vt1.c0, rt0.c4, rt0.c1, rt0.c3;
SELECT rt0.c2, rt0.c0, t1.c51, vt1.c0, rt0.c4, rt0.c1, rt0.c3 FROM t1, vt1 CROSS JOIN rt0 ON t1.c51 GROUP BY rt0.c2, rt0.c0, t1.c51, vt1.c0, rt0.c4, rt0.c1, rt0.c3 HAVING (((SUM(rt0.c3)) BETWEEN (rt0.c2) AND (AVG(COUNT(*)))) IN ()) UNION ALL SELECT rt0.c2, rt0.c0, t1.c51, vt1.c0, rt0.c4, rt0.c1, rt0.c3 FROM t1, vt1 CROSS JOIN rt0 ON t1.c51 GROUP BY rt0.c2, rt0.c0, t1.c51, vt1.c0, rt0.c4, rt0.c1, rt0.c3 HAVING (NOT ((((SUM(rt0.c3)) BETWEEN (rt0.c2) AND (AVG(COUNT(*)))) IN ()))) UNION ALL SELECT ALL rt0.c2, rt0.c0, t1.c51, vt1.c0, rt0.c4, rt0.c1, rt0.c3 FROM t1, vt1 CROSS JOIN rt0 ON t1.c51 GROUP BY rt0.c2, rt0.c0, t1.c51, vt1.c0, rt0.c4, rt0.c1, rt0.c3 HAVING (((((SUM(rt0.c3)) BETWEEN (rt0.c2) AND (AVG(COUNT(*)))) IN ())) ISNULL);
SELECT rt0.c2, rt0.c0, t1.c51, vt1.c0, rt0.c4, rt0.c1, rt0.c3 FROM t1, vt1 CROSS JOIN rt0 ON t1.c51 GROUP BY rt0.c2, rt0.c0, t1.c51, vt1.c0, rt0.c4, rt0.c1, rt0.c3;
SELECT ALL rt0.c2, rt0.c3, rt0.c1, rt0.c0 FROM rt0, t1, vt1;
SELECT ALL rt0.c2, rt0.c3, rt0.c1, rt0.c0 FROM rt0, t1, vt1 WHERE ((((''))<((rt0.c0 COLLATE NOCASE)))) UNION ALL SELECT ALL rt0.c2, rt0.c3, rt0.c1, rt0.c0 FROM rt0, t1, vt1 WHERE ((NOT ((((''))<((rt0.c0 COLLATE NOCASE)))))) UNION ALL SELECT ALL rt0.c2, rt0.c3, rt0.c1, rt0.c0 FROM rt0, t1, vt1 WHERE ((((((''))<((rt0.c0 COLLATE NOCASE)))) ISNULL));
SELECT ALL rt0.c2, rt0.c3, rt0.c1, rt0.c0 FROM rt0, t1, vt1;
SELECT DISTINCT vt1.c0 FROM vt1, vt0;
SELECT DISTINCT vt1.c0 FROM vt1, vt0 WHERE ((~ ((+ (vt1.c0))))) UNION SELECT DISTINCT vt1.c0 FROM vt1, vt0 WHERE ((NOT ((~ ((+ (vt1.c0))))))) UNION SELECT DISTINCT vt1.c0 FROM vt1, vt0 WHERE ((((~ ((+ (vt1.c0))))) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1, vt0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE (((((vt1.c0)<>(x''))) NOT BETWEEN (((((vt1.c0)AND(vt1.c0)))OR(vt1.c0))) AND (((vt1.c0)%(vt1.c0))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT (((((vt1.c0)<>(x''))) NOT BETWEEN (((((vt1.c0)AND(vt1.c0)))OR(vt1.c0))) AND (((vt1.c0)%(vt1.c0))))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 NOT INDEXED WHERE (((((((vt1.c0)<>(x''))) NOT BETWEEN (((((vt1.c0)AND(vt1.c0)))OR(vt1.c0))) AND (((vt1.c0)%(vt1.c0))))) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt0.c2, t1.c51, vt0.c0, vt0.c1 FROM vt0, t1 NOT INDEXED, vt1 GROUP BY vt0.c2, t1.c51, vt0.c0, vt0.c1;
SELECT ALL vt0.c2, t1.c51, vt0.c0, vt0.c1 FROM vt0, t1, vt1 GROUP BY vt0.c2, t1.c51, vt0.c0, vt0.c1 HAVING COUNT(*) UNION ALL SELECT ALL vt0.c2, t1.c51, vt0.c0, vt0.c1 FROM vt0, t1, vt1 GROUP BY vt0.c2, t1.c51, vt0.c0, vt0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt0.c2, t1.c51, vt0.c0, vt0.c1 FROM vt0, t1, vt1 GROUP BY vt0.c2, t1.c51, vt0.c0, vt0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt0.c2, t1.c51, vt0.c0, vt0.c1 FROM vt0, t1 NOT INDEXED, vt1 GROUP BY vt0.c2, t1.c51, vt0.c0, vt0.c1;
SELECT ALL vt0.c2, t1.c51, vt0.c0, vt0.c1 FROM vt0, t1, vt1 GROUP BY vt0.c2, t1.c51, vt0.c0, vt0.c1 HAVING COUNT(*) UNION ALL SELECT ALL vt0.c2, t1.c51, vt0.c0, vt0.c1 FROM vt0, t1, vt1 GROUP BY vt0.c2, t1.c51, vt0.c0, vt0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt0.c2, t1.c51, vt0.c0, vt0.c1 FROM vt0, t1, vt1 GROUP BY vt0.c2, t1.c51, vt0.c0, vt0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt0.c2, t1.c51, vt0.c0, vt0.c1 FROM vt0, t1 NOT INDEXED, vt1 GROUP BY vt0.c2, t1.c51, vt0.c0, vt0.c1;
SELECT vt0.c2, rt0.c2, vt0.c1, vt0.c0 FROM vt1, rt0 NATURAL JOIN vt0;
SELECT vt0.c2, rt0.c2, vt0.c1, vt0.c0 FROM vt1, rt0 NATURAL JOIN vt0 WHERE (CAST((((vt0.c0)) BETWEEN ((rt0.c0)) AND ((NULL))) AS BLOB)) UNION ALL SELECT vt0.c2, rt0.c2, vt0.c1, vt0.c0 FROM vt1, rt0 NATURAL JOIN vt0 WHERE ((NOT (CAST((((vt0.c0)) BETWEEN ((rt0.c0)) AND ((NULL))) AS BLOB)))) UNION ALL SELECT vt0.c2, rt0.c2, vt0.c1, vt0.c0 FROM vt1, rt0 NATURAL JOIN vt0 WHERE (((CAST((((vt0.c0)) BETWEEN ((rt0.c0)) AND ((NULL))) AS BLOB)) ISNULL));
SELECT vt0.c2, rt0.c2, vt0.c1, vt0.c0 FROM vt1, rt0 NATURAL JOIN vt0;
SELECT DISTINCT vt0.c0, rt0.c2, vt1.c0, rt0.c0, rt0.c1 FROM t1, vt1, vt0, rt0;
SELECT DISTINCT vt0.c0, rt0.c2, vt1.c0, rt0.c0, rt0.c1 FROM t1, vt1, vt0, rt0 WHERE (((((((((((vt1.c0) NOT BETWEEN (vt1.c0) AND (rt0.c1)))OR(IFNULL(vt1.c0, rt0.c2))))AND(t1.c51)))AND(((NULL) BETWEEN (t1.c51) AND (t1.c51)))))AND(((vt0.c2)>=(t1.c51))))) UNION SELECT DISTINCT vt0.c0, rt0.c2, vt1.c0, rt0.c0, rt0.c1 FROM t1, vt1, vt0, rt0 WHERE ((NOT (((((((((((vt1.c0) NOT BETWEEN (vt1.c0) AND (rt0.c1)))OR(IFNULL(vt1.c0, rt0.c2))))AND(t1.c51)))AND(((NULL) BETWEEN (t1.c51) AND (t1.c51)))))AND(((vt0.c2)>=(t1.c51))))))) UNION SELECT DISTINCT vt0.c0, rt0.c2, vt1.c0, rt0.c0, rt0.c1 FROM t1, vt1, vt0, rt0 WHERE (((((((((((((vt1.c0) NOT BETWEEN (vt1.c0) AND (rt0.c1)))OR(IFNULL(vt1.c0, rt0.c2))))AND(t1.c51)))AND(((NULL) BETWEEN (t1.c51) AND (t1.c51)))))AND(((vt0.c2)>=(t1.c51))))) ISNULL));
SELECT DISTINCT vt0.c0, rt0.c2, vt1.c0, rt0.c0, rt0.c1 FROM t1, vt1, vt0, rt0;
SELECT rt0.c0 FROM vt1 CROSS JOIN rt0 ON ((((rt0.c2) NOT BETWEEN (vt1.c0) AND (rt0.c1)))GLOB(((rt0.c3) NOTNULL))) GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM vt1 CROSS JOIN rt0 ON ((((rt0.c2) NOT BETWEEN (vt1.c0) AND (rt0.c1)))GLOB(((rt0.c3) NOTNULL))) WHERE ((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0)) IN ())) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM vt1 CROSS JOIN rt0 ON ((((rt0.c2) NOT BETWEEN (vt1.c0) AND (rt0.c1)))GLOB(((rt0.c3) NOTNULL))) WHERE ((NOT ((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0)) IN ())))) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM vt1 CROSS JOIN rt0 ON ((((rt0.c2) NOT BETWEEN (vt1.c0) AND (rt0.c1)))GLOB(((rt0.c3) NOTNULL))) WHERE ((((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0)) IN ())) ISNULL)) GROUP BY rt0.c0;
SELECT rt0.c0 FROM vt1 CROSS JOIN rt0 ON ((((rt0.c2) NOT BETWEEN (vt1.c0) AND (rt0.c1)))GLOB(((rt0.c3) NOTNULL))) GROUP BY rt0.c0;
SELECT rt0.c2, rt0.c3, t1.c51, rt0.c0, vt0.c0, rt0.c1 FROM vt1, rt0, t1, vt0 GROUP BY rt0.c2, rt0.c3, t1.c51, rt0.c0, vt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c3, t1.c51, rt0.c0, vt0.c0, rt0.c1 FROM vt1, rt0, t1, vt0 GROUP BY rt0.c2, rt0.c3, t1.c51, rt0.c0, vt0.c0, rt0.c1 HAVING SUM(GROUP_CONCAT(rt0.c1)) UNION ALL SELECT rt0.c2, rt0.c3, t1.c51, rt0.c0, vt0.c0, rt0.c1 FROM vt1, rt0, t1, vt0 GROUP BY rt0.c2, rt0.c3, t1.c51, rt0.c0, vt0.c0, rt0.c1 HAVING (NOT (SUM(GROUP_CONCAT(rt0.c1)))) UNION ALL SELECT ALL rt0.c2, rt0.c3, t1.c51, rt0.c0, vt0.c0, rt0.c1 FROM vt1, rt0, t1, vt0 GROUP BY rt0.c2, rt0.c3, t1.c51, rt0.c0, vt0.c0, rt0.c1 HAVING ((SUM(GROUP_CONCAT(rt0.c1))) ISNULL);
SELECT * FROM t1 INNER JOIN vt1 ON ((((((((vt1.c0)AND(t1.c51)))OR(vt0.c0)))OR(((vt1.c0)!=(vt0.c2)))))AND((vt1.c0 IN ()))) CROSS JOIN vt0 ON ((CASE WHEN vt1.c0 THEN vt0.c2 END)IS NOT(((vt0.c0)>>(vt0.c2))));
SELECT * FROM t1 INNER JOIN vt1 ON ((((((((vt1.c0)AND(t1.c51)))OR(vt0.c0)))OR(((vt1.c0)<>(vt0.c2)))))AND((vt1.c0 IN ()))) CROSS JOIN vt0 ON ((CASE WHEN vt1.c0 THEN vt0.c2 END)IS NOT(((vt0.c0)>>(vt0.c2)))) WHERE (((vt0.c2)+(t1.c51)) COLLATE NOCASE) UNION ALL SELECT * FROM t1 INNER JOIN vt1 ON ((((((((vt1.c0)AND(t1.c51)))OR(vt0.c0)))OR(((vt1.c0)<>(vt0.c2)))))AND((vt1.c0 IN ()))) CROSS JOIN vt0 ON ((CASE WHEN vt1.c0 THEN vt0.c2 END)IS NOT(((vt0.c0)>>(vt0.c2)))) WHERE ((NOT (((vt0.c2)+(t1.c51)) COLLATE NOCASE))) UNION ALL SELECT * FROM t1 INNER JOIN vt1 ON ((((((((vt1.c0)AND(t1.c51)))OR(vt0.c0)))OR(((vt1.c0)<>(vt0.c2)))))AND((vt1.c0 IN ()))) CROSS JOIN vt0 ON ((CASE WHEN vt1.c0 THEN vt0.c2 END)IS NOT(((vt0.c0)>>(vt0.c2)))) WHERE (((((vt0.c2)+(t1.c51)) COLLATE NOCASE) ISNULL));
SELECT * FROM t1 INNER JOIN vt1 ON ((((((((vt1.c0)AND(t1.c51)))OR(vt0.c0)))OR(((vt1.c0)!=(vt0.c2)))))AND((vt1.c0 IN ()))) CROSS JOIN vt0 ON ((CASE WHEN vt1.c0 THEN vt0.c2 END)IS NOT(((vt0.c0)>>(vt0.c2))));
SELECT DISTINCT vt0.c2, vt0.c0, vt0.c1, vt1.c0 FROM vt1 NATURAL JOIN vt0;
SELECT DISTINCT vt0.c2, vt0.c0, vt0.c1, vt1.c0 FROM vt1 NATURAL JOIN vt0 WHERE (CASE WHEN (~ (vt1.c0)) THEN (((vt0.c0))<>((vt1.c0))) ELSE (((vt1.c0, '1961434113', -225953113)) NOT BETWEEN ((vt0.c1, vt1.c0, '쳡W쁄g0L椞4F')) AND ((vt0.c0, vt0.c0, vt0.c0))) END) UNION SELECT DISTINCT vt0.c2, vt0.c0, vt0.c1, vt1.c0 FROM vt1 NATURAL JOIN vt0 WHERE ((NOT (CASE WHEN (~ (vt1.c0)) THEN (((vt0.c0))!=((vt1.c0))) ELSE (((vt1.c0, '1961434113', -225953113)) NOT BETWEEN ((vt0.c1, vt1.c0, '쳡W쁄g0L椞4F')) AND ((vt0.c0, vt0.c0, vt0.c0))) END))) UNION SELECT DISTINCT vt0.c2, vt0.c0, vt0.c1, vt1.c0 FROM vt1 NATURAL JOIN vt0 WHERE (((CASE WHEN (~ (vt1.c0)) THEN (((vt0.c0))<>((vt1.c0))) ELSE (((vt1.c0, '1961434113', -225953113)) NOT BETWEEN ((vt0.c1, vt1.c0, '쳡W쁄g0L椞4F')) AND ((vt0.c0, vt0.c0, vt0.c0))) END) ISNULL));
SELECT DISTINCT vt0.c2, vt0.c0, vt0.c1, vt1.c0 FROM vt1 NATURAL JOIN vt0;
SELECT ALL t1.c51, rt0.c2, rt0.c1, vt0.c2, vt0.c1 FROM rt0, vt0, t1 GROUP BY t1.c51, rt0.c2, rt0.c1, vt0.c2, vt0.c1;
SELECT ALL t1.c51, rt0.c2, rt0.c1, vt0.c2, vt0.c1 FROM rt0, vt0, t1 WHERE (json_valid(CASE vt0.c1  WHEN t1.c51 THEN rt0.c1 ELSE t1.c51 END)) GROUP BY t1.c51, rt0.c2, rt0.c1, vt0.c2, vt0.c1 UNION SELECT ALL t1.c51, rt0.c2, rt0.c1, vt0.c2, vt0.c1 FROM rt0, vt0, t1 WHERE ((NOT (json_valid(CASE vt0.c1  WHEN t1.c51 THEN rt0.c1 ELSE t1.c51 END)))) GROUP BY t1.c51, rt0.c2, rt0.c1, vt0.c2, vt0.c1 UNION SELECT ALL t1.c51, rt0.c2, rt0.c1, vt0.c2, vt0.c1 FROM rt0, vt0, t1 WHERE (((json_valid(CASE vt0.c1  WHEN t1.c51 THEN rt0.c1 ELSE t1.c51 END)) ISNULL)) GROUP BY t1.c51, rt0.c2, rt0.c1, vt0.c2, vt0.c1;
SELECT ALL t1.c51, rt0.c2, rt0.c1, vt0.c2, vt0.c1 FROM rt0, vt0, t1 GROUP BY t1.c51, rt0.c2, rt0.c1, vt0.c2, vt0.c1;
SELECT ALL rt0.c1, t1.c51, vt1.c0, rt0.c0, rt0.c2, rt0.c3, rt0.c4, vt0.c1, vt0.c0 FROM vt0, rt0, vt1, t1 GROUP BY rt0.c1, t1.c51, vt1.c0, rt0.c0, rt0.c2, rt0.c3, rt0.c4, vt0.c1, vt0.c0;
SELECT ALL rt0.c1, t1.c51, vt1.c0, rt0.c0, rt0.c2, rt0.c3, rt0.c4, vt0.c1, vt0.c0 FROM vt0, rt0, vt1, t1 GROUP BY rt0.c1, t1.c51, vt1.c0, rt0.c0, rt0.c2, rt0.c3, rt0.c4, vt0.c1, vt0.c0 HAVING COUNT((- (COUNT(rt0.c4)))) UNION ALL SELECT ALL rt0.c1, t1.c51, vt1.c0, rt0.c0, rt0.c2, rt0.c3, rt0.c4, vt0.c1, vt0.c0 FROM vt0, rt0, vt1, t1 GROUP BY rt0.c1, t1.c51, vt1.c0, rt0.c0, rt0.c2, rt0.c3, rt0.c4, vt0.c1, vt0.c0 HAVING (NOT (COUNT((- (COUNT(rt0.c4)))))) UNION ALL SELECT rt0.c1, t1.c51, vt1.c0, rt0.c0, rt0.c2, rt0.c3, rt0.c4, vt0.c1, vt0.c0 FROM vt0, rt0, vt1, t1 GROUP BY rt0.c1, t1.c51, vt1.c0, rt0.c0, rt0.c2, rt0.c3, rt0.c4, vt0.c1, vt0.c0 HAVING ((COUNT((- (COUNT(rt0.c4))))) ISNULL);
SELECT ALL rt0.c2, vt0.c1, rt0.c3, vt0.c0 FROM vt0, t1, rt0;
SELECT ALL rt0.c2, vt0.c1, rt0.c3, vt0.c0 FROM vt0, t1, rt0 WHERE ((((((- (vt0.c0)))OR((rt0.c3 IN (vt0.c2)))))AND(((rt0.c2)>(0.115873358787696))))) UNION ALL SELECT ALL rt0.c2, vt0.c1, rt0.c3, vt0.c0 FROM vt0, t1, rt0 WHERE ((NOT ((((((- (vt0.c0)))OR((rt0.c3 IN (vt0.c2)))))AND(((rt0.c2)>(0.115873358787696))))))) UNION ALL SELECT ALL rt0.c2, vt0.c1, rt0.c3, vt0.c0 FROM vt0, t1 NOT INDEXED, rt0 WHERE ((((((((- (vt0.c0)))OR((rt0.c3 IN (vt0.c2)))))AND(((rt0.c2)>(0.115873358787696))))) ISNULL));
SELECT ALL rt0.c2, vt0.c1, rt0.c3, vt0.c0 FROM vt0, t1, rt0;
SELECT DISTINCT * FROM vt0 INNER JOIN rt0 ON CASE WHEN CHAR(rt0.c0, vt0.c0, vt0.c0, rt0.c0, vt1.c0) THEN ((rt0.c3)AND(vt0.c1)) END CROSS JOIN vt1 ON vt0.c0;
SELECT DISTINCT * FROM vt0 INNER JOIN rt0 ON CASE WHEN CHAR(rt0.c0, vt0.c0, vt0.c0, rt0.c0, vt1.c0) THEN ((rt0.c3)AND(vt0.c1)) END CROSS JOIN vt1 ON vt0.c0 WHERE (CAST((NOT (vt0.c0)) AS INTEGER)) UNION SELECT DISTINCT * FROM vt0 INNER JOIN rt0 ON CASE WHEN CHAR(rt0.c0, vt0.c0, vt0.c0, rt0.c0, vt1.c0) THEN ((rt0.c3)AND(vt0.c1)) END CROSS JOIN vt1 ON vt0.c0 WHERE ((NOT (CAST((NOT (vt0.c0)) AS INTEGER)))) UNION SELECT DISTINCT * FROM vt0 INNER JOIN rt0 ON CASE WHEN CHAR(rt0.c0, vt0.c0, vt0.c0, rt0.c0, vt1.c0) THEN ((rt0.c3)AND(vt0.c1)) END CROSS JOIN vt1 ON vt0.c0 WHERE (((CAST((NOT (vt0.c0)) AS INTEGER)) ISNULL));
SELECT DISTINCT * FROM vt0 INNER JOIN rt0 ON CASE WHEN CHAR(rt0.c0, vt0.c0, vt0.c0, rt0.c0, vt1.c0) THEN ((rt0.c3)AND(vt0.c1)) END CROSS JOIN vt1 ON vt0.c0;
SELECT vt1.c0, t1.c51 FROM vt1, t1 GROUP BY vt1.c0, t1.c51;
SELECT vt1.c0, t1.c51 FROM vt1, t1 WHERE ((((((t1.c51)) NOT BETWEEN ((vt1.c0)) AND ((t1.c51))))<=(((('')) NOT BETWEEN ((vt1.c0)) AND ((t1.c51)))))) GROUP BY vt1.c0, t1.c51 UNION SELECT vt1.c0, t1.c51 FROM vt1, t1 WHERE ((NOT ((((((t1.c51)) NOT BETWEEN ((vt1.c0)) AND ((t1.c51))))<=(((('')) NOT BETWEEN ((vt1.c0)) AND ((t1.c51)))))))) GROUP BY vt1.c0, t1.c51 UNION SELECT ALL vt1.c0, t1.c51 FROM vt1, t1 WHERE ((((((((t1.c51)) NOT BETWEEN ((vt1.c0)) AND ((t1.c51))))<=(((('')) NOT BETWEEN ((vt1.c0)) AND ((t1.c51)))))) ISNULL)) GROUP BY vt1.c0, t1.c51;
SELECT vt1.c0, t1.c51 FROM vt1, t1 GROUP BY vt1.c0, t1.c51;
SELECT ALL rt0.c4, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c4, rt0.c0, rt0.c1;
SELECT ALL rt0.c4, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c4, rt0.c0, rt0.c1 HAVING GROUP_CONCAT(((rt0.c3) BETWEEN (NULL) AND (SUM(TOTAL(rt0.c0))))) UNION ALL SELECT ALL rt0.c4, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c4, rt0.c0, rt0.c1 HAVING (NOT (GROUP_CONCAT(((rt0.c3) BETWEEN (NULL) AND (SUM(TOTAL(rt0.c0))))))) UNION ALL SELECT rt0.c4, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c4, rt0.c0, rt0.c1 HAVING ((GROUP_CONCAT(((rt0.c3) BETWEEN (NULL) AND (SUM(TOTAL(rt0.c0)))))) ISNULL);
SELECT ALL vt0.c0 FROM t1, vt0;
SELECT ALL vt0.c0 FROM t1, vt0 WHERE ((((vt0.c1)||(t1.c51)) IN ())) UNION ALL SELECT ALL vt0.c0 FROM t1, vt0 WHERE ((NOT ((((vt0.c1)||(t1.c51)) IN ())))) UNION ALL SELECT vt0.c0 FROM t1, vt0 WHERE ((((((vt0.c1)||(t1.c51)) IN ())) ISNULL));
SELECT ALL vt0.c0 FROM t1, vt0;
SELECT DISTINCT vt0.c2 FROM vt0;
SELECT DISTINCT vt0.c2 FROM vt0 WHERE (CASE WHEN LTRIM(vt0.c2) THEN (((vt0.c2)) NOT BETWEEN ((vt0.c2)) AND ((vt0.c2))) ELSE ((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)) END) UNION SELECT DISTINCT vt0.c2 FROM vt0 WHERE ((NOT (CASE WHEN LTRIM(vt0.c2) THEN (((vt0.c2)) NOT BETWEEN ((vt0.c2)) AND ((vt0.c2))) ELSE ((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)) END))) UNION SELECT DISTINCT vt0.c2 FROM vt0 WHERE (((CASE WHEN LTRIM(vt0.c2) THEN (((vt0.c2)) NOT BETWEEN ((vt0.c2)) AND ((vt0.c2))) ELSE ((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)) END) ISNULL));
SELECT DISTINCT vt0.c2 FROM vt0;
SELECT vt0.c2 FROM vt0 GROUP BY vt0.c2;
SELECT ALL vt0.c2 FROM vt0 NOT INDEXED WHERE ((~ (vt0.c2))) GROUP BY vt0.c2 UNION SELECT vt0.c2 FROM vt0 WHERE ((NOT ((~ (vt0.c2))))) GROUP BY vt0.c2 UNION SELECT vt0.c2 FROM vt0 WHERE ((((~ (vt0.c2))) ISNULL)) GROUP BY vt0.c2;
SELECT vt0.c2 FROM vt0 GROUP BY vt0.c2;
SELECT rt0.c0, vt0.c2 FROM vt0, vt1, t1, rt0 GROUP BY rt0.c0, vt0.c2;
SELECT rt0.c0, vt0.c2 FROM vt0, vt1, t1, rt0 GROUP BY rt0.c0, vt0.c2 HAVING MAX(CAST(rt0.c0 AS BLOB)) UNION ALL SELECT rt0.c0, vt0.c2 FROM vt0, vt1, t1, rt0 GROUP BY rt0.c0, vt0.c2 HAVING (NOT (MAX(CAST(rt0.c0 AS BLOB)))) UNION ALL SELECT rt0.c0, vt0.c2 FROM vt0, vt1, t1, rt0 GROUP BY rt0.c0, vt0.c2 HAVING ((MAX(CAST(rt0.c0 AS BLOB))) ISNULL);
SELECT rt0.c0, vt0.c2 FROM vt0, vt1, t1, rt0 GROUP BY rt0.c0, vt0.c2;
SELECT rt0.c0, vt0.c2 FROM vt0, vt1, t1, rt0 GROUP BY rt0.c0, vt0.c2 HAVING MAX(CAST(rt0.c0 AS BLOB)) UNION ALL SELECT rt0.c0, vt0.c2 FROM vt0, vt1, t1, rt0 GROUP BY rt0.c0, vt0.c2 HAVING (NOT (MAX(CAST(rt0.c0 AS BLOB)))) UNION ALL SELECT rt0.c0, vt0.c2 FROM vt0, vt1, t1, rt0 GROUP BY rt0.c0, vt0.c2 HAVING ((MAX(CAST(rt0.c0 AS BLOB))) ISNULL);
SELECT rt0.c0, vt0.c2 FROM vt0, vt1, t1, rt0 GROUP BY rt0.c0, vt0.c2;
SELECT ALL rt0.c1, vt1.c0, rt0.c2, rt0.c3, rt0.c0, rt0.c4 FROM vt1, rt0;
SELECT rt0.c1, vt1.c0, rt0.c2, rt0.c3, rt0.c0, rt0.c4 FROM vt1, rt0 WHERE (((vt1.c0)IS NOT(rt0.c2)) COLLATE RTRIM) UNION ALL SELECT rt0.c1, vt1.c0, rt0.c2, rt0.c3, rt0.c0, rt0.c4 FROM vt1, rt0 WHERE ((NOT (((vt1.c0)IS NOT(rt0.c2)) COLLATE RTRIM))) UNION ALL SELECT rt0.c1, vt1.c0, rt0.c2, rt0.c3, rt0.c0, rt0.c4 FROM vt1, rt0 WHERE (((((vt1.c0)IS NOT(rt0.c2)) COLLATE RTRIM) ISNULL));
SELECT ALL rt0.c1, vt1.c0, rt0.c2, rt0.c3, rt0.c0, rt0.c4 FROM vt1, rt0;
SELECT DISTINCT * FROM vt1 FULL OUTER JOIN rt0 ON (((((vt1.c0 IN ()))OR((rt0.c4 IN (rt0.c0, t1.c51)))))AND(((vt1.c0) NOT BETWEEN (rt0.c2) AND (vt1.c0)))) FULL OUTER JOIN t1 ON (((t1.c51))>((x'f311')));
SELECT ALL rt0.c2, rt0.c0, rt0.c1, vt0.c0, vt0.c1, rt0.c3, rt0.c4 FROM rt0 INNER JOIN vt0 ON ((CAST(rt0.c1 AS BLOB))<=((((rt0.c3, rt0.c4, rt0.c3)) BETWEEN ((rt0.c1, vt0.c2, rt0.c2)) AND ((rt0.c2, vt0.c2, vt0.c1))))) LEFT OUTER JOIN vt1 ON (((0xffffffff826fec04)) NOT BETWEEN ((LIKELY('-891292438'))) AND ((TOTAL_CHANGES()))) GROUP BY rt0.c2, rt0.c0, rt0.c1, vt0.c0, vt0.c1, rt0.c3, rt0.c4;
SELECT ALL rt0.c2, rt0.c0, rt0.c1, vt0.c0, vt0.c1, rt0.c3, rt0.c4 FROM rt0 INNER JOIN vt0 ON ((CAST(rt0.c1 AS BLOB))<=((((rt0.c3, rt0.c4, rt0.c3)) BETWEEN ((rt0.c1, vt0.c2, rt0.c2)) AND ((rt0.c2, vt0.c2, vt0.c1))))) LEFT OUTER JOIN vt1 ON (((0xffffffff826fec04)) NOT BETWEEN ((LIKELY('-891292438'))) AND ((TOTAL_CHANGES()))) WHERE (((((((((((((((rt0.c4)LIKE('-812418438')))OR(((((vt0.c0)AND(vt0.c2)))AND(rt0.c2)))))AND(((vt0.c2)IS(rt0.c4)))))AND((((vt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c4))))))OR(((x'') ISNULL))))AND(0.21038641845238915)))OR(((vt0.c2)>(vt0.c2))))) GROUP BY rt0.c2, rt0.c0, rt0.c1, vt0.c0, vt0.c1, rt0.c3, rt0.c4 UNION SELECT ALL rt0.c2, rt0.c0, rt0.c1, vt0.c0, vt0.c1, rt0.c3, rt0.c4 FROM rt0 INNER JOIN vt0 ON ((CAST(rt0.c1 AS BLOB))<=((((rt0.c3, rt0.c4, rt0.c3)) BETWEEN ((rt0.c1, vt0.c2, rt0.c2)) AND ((rt0.c2, vt0.c2, vt0.c1))))) LEFT OUTER JOIN vt1 ON (((0xffffffff826fec04)) NOT BETWEEN ((LIKELY('-891292438'))) AND ((TOTAL_CHANGES()))) WHERE ((NOT (((((((((((((((rt0.c4)LIKE('-812418438')))OR(((((vt0.c0)AND(vt0.c2)))AND(rt0.c2)))))AND(((vt0.c2)IS(rt0.c4)))))AND((((vt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c4))))))OR(((x'') ISNULL))))AND(0.21038641845238915)))OR(((vt0.c2)>(vt0.c2))))))) GROUP BY rt0.c2, rt0.c0, rt0.c1, vt0.c0, vt0.c1, rt0.c3, rt0.c4 UNION SELECT rt0.c2, rt0.c0, rt0.c1, vt0.c0, vt0.c1, rt0.c3, rt0.c4 FROM rt0 INNER JOIN vt0 ON ((CAST(rt0.c1 AS BLOB))<=((((rt0.c3, rt0.c4, rt0.c3)) BETWEEN ((rt0.c1, vt0.c2, rt0.c2)) AND ((rt0.c2, vt0.c2, vt0.c1))))) LEFT OUTER JOIN vt1 ON (((0Xffffffff826fec04)) NOT BETWEEN ((LIKELY('-891292438'))) AND ((TOTAL_CHANGES()))) WHERE (((((((((((((((((rt0.c4)LIKE('-812418438')))OR(((((vt0.c0)AND(vt0.c2)))AND(rt0.c2)))))AND(((vt0.c2)IS(rt0.c4)))))AND((((vt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c4))))))OR(((x'') ISNULL))))AND(0.21038641845238915)))OR(((vt0.c2)>(vt0.c2))))) ISNULL)) GROUP BY rt0.c2, rt0.c0, rt0.c1, vt0.c0, vt0.c1, rt0.c3, rt0.c4;
SELECT ALL rt0.c2, rt0.c0, rt0.c1, vt0.c0, vt0.c1, rt0.c3, rt0.c4 FROM rt0 INNER JOIN vt0 ON ((CAST(rt0.c1 AS BLOB))<=((((rt0.c3, rt0.c4, rt0.c3)) BETWEEN ((rt0.c1, vt0.c2, rt0.c2)) AND ((rt0.c2, vt0.c2, vt0.c1))))) LEFT OUTER JOIN vt1 ON (((0xffffffff826fec04)) NOT BETWEEN ((LIKELY('-891292438'))) AND ((TOTAL_CHANGES()))) GROUP BY rt0.c2, rt0.c0, rt0.c1, vt0.c0, vt0.c1, rt0.c3, rt0.c4;
SELECT ALL vt0.c0, vt1.c0 FROM t1 INNER JOIN vt0 ON ((((((((((vt0.c1)||(t1.c51)))AND(vt0.c2)))AND(NULL)))OR(((vt0.c1) BETWEEN (vt0.c2) AND (vt0.c2)))))AND(NULL)) FULL OUTER JOIN vt1 ON (- (CASE WHEN t1.c51 THEN vt1.c0 END)) GROUP BY vt0.c0, vt1.c0;
SELECT vt0.c0, vt1.c0 FROM t1 INNER JOIN vt0 ON ((((((((((vt0.c1)||(t1.c51)))AND(vt0.c2)))AND(NULL)))OR(((vt0.c1) BETWEEN (vt0.c2) AND (vt0.c2)))))AND(NULL)) FULL OUTER JOIN vt1 ON (- (CASE WHEN t1.c51 THEN vt1.c0 END)) GROUP BY vt0.c0, vt1.c0 HAVING MIN(((t1.c51)OR(vt0.c1))) UNION ALL SELECT vt0.c0, vt1.c0 FROM t1 INNER JOIN vt0 ON ((((((((((vt0.c1)||(t1.c51)))AND(vt0.c2)))AND(NULL)))OR(((vt0.c1) BETWEEN (vt0.c2) AND (vt0.c2)))))AND(NULL)) FULL OUTER JOIN vt1 ON (- (CASE WHEN t1.c51 THEN vt1.c0 END)) GROUP BY vt0.c0, vt1.c0 HAVING (NOT (MIN(((t1.c51)OR(vt0.c1))))) UNION ALL SELECT vt0.c0, vt1.c0 FROM t1 INNER JOIN vt0 ON ((((((((((vt0.c1)||(t1.c51)))AND(vt0.c2)))AND(NULL)))OR(((vt0.c1) BETWEEN (vt0.c2) AND (vt0.c2)))))AND(NULL)) FULL OUTER JOIN vt1 ON (- (CASE WHEN t1.c51 THEN vt1.c0 END)) GROUP BY vt0.c0, vt1.c0 HAVING ((MIN(((t1.c51)OR(vt0.c1)))) ISNULL);
SELECT ALL vt0.c0, vt1.c0 FROM t1 INNER JOIN vt0 ON ((((((((((vt0.c1)||(t1.c51)))AND(vt0.c2)))AND(NULL)))OR(((vt0.c1) BETWEEN (vt0.c2) AND (vt0.c2)))))AND(NULL)) FULL OUTER JOIN vt1 ON (- (CASE WHEN t1.c51 THEN vt1.c0 END)) GROUP BY vt0.c0, vt1.c0;
SELECT vt0.c0, vt1.c0 FROM t1 INNER JOIN vt0 ON ((((((((((vt0.c1)||(t1.c51)))AND(vt0.c2)))AND(NULL)))OR(((vt0.c1) BETWEEN (vt0.c2) AND (vt0.c2)))))AND(NULL)) FULL OUTER JOIN vt1 ON (- (CASE WHEN t1.c51 THEN vt1.c0 END)) GROUP BY vt0.c0, vt1.c0 HAVING MIN(((t1.c51)OR(vt0.c1))) UNION ALL SELECT vt0.c0, vt1.c0 FROM t1 INNER JOIN vt0 ON ((((((((((vt0.c1)||(t1.c51)))AND(vt0.c2)))AND(NULL)))OR(((vt0.c1) BETWEEN (vt0.c2) AND (vt0.c2)))))AND(NULL)) FULL OUTER JOIN vt1 ON (- (CASE WHEN t1.c51 THEN vt1.c0 END)) GROUP BY vt0.c0, vt1.c0 HAVING (NOT (MIN(((t1.c51)OR(vt0.c1))))) UNION ALL SELECT vt0.c0, vt1.c0 FROM t1 INNER JOIN vt0 ON ((((((((((vt0.c1)||(t1.c51)))AND(vt0.c2)))AND(NULL)))OR(((vt0.c1) BETWEEN (vt0.c2) AND (vt0.c2)))))AND(NULL)) FULL OUTER JOIN vt1 ON (- (CASE WHEN t1.c51 THEN vt1.c0 END)) GROUP BY vt0.c0, vt1.c0 HAVING ((MIN(((t1.c51)OR(vt0.c1)))) ISNULL);
SELECT ALL vt0.c0, vt1.c0 FROM t1 INNER JOIN vt0 ON ((((((((((vt0.c1)||(t1.c51)))AND(vt0.c2)))AND(NULL)))OR(((vt0.c1) BETWEEN (vt0.c2) AND (vt0.c2)))))AND(NULL)) FULL OUTER JOIN vt1 ON (- (CASE WHEN t1.c51 THEN vt1.c0 END)) GROUP BY vt0.c0, vt1.c0;
SELECT * FROM vt1, rt0 FULL OUTER JOIN t1 ON UNLIKELY(CAST(rt0.c3 AS BLOB)) FULL OUTER JOIN vt0 ON TYPEOF(DISTINCT (NOT (vt0.c0)));
SELECT * FROM vt1, rt0 FULL OUTER JOIN t1 ON UNLIKELY(CAST(rt0.c3 AS BLOB)) FULL OUTER JOIN vt0 ON TYPEOF(DISTINCT (NOT (vt0.c0))) WHERE (((((rt0.c3) IS TRUE)) NOT BETWEEN (json_extract(vt1.c0, rt0.c2, vt1.c0, rt0.c4)) AND (UNLIKELY(DISTINCT 0.21038641845238915)))) UNION ALL SELECT ALL * FROM vt1, rt0 FULL OUTER JOIN t1 ON UNLIKELY(CAST(rt0.c3 AS BLOB)) FULL OUTER JOIN vt0 ON TYPEOF(DISTINCT (NOT (vt0.c0))) WHERE ((NOT (((((rt0.c3) IS TRUE)) NOT BETWEEN (json_extract(vt1.c0, rt0.c2, vt1.c0, rt0.c4)) AND (UNLIKELY(DISTINCT 0.21038641845238915)))))) UNION ALL SELECT ALL * FROM vt1, rt0 FULL OUTER JOIN t1 ON UNLIKELY(CAST(rt0.c3 AS BLOB)) FULL OUTER JOIN vt0 ON TYPEOF(DISTINCT (NOT (vt0.c0))) WHERE (((((((rt0.c3) IS TRUE)) NOT BETWEEN (json_extract(vt1.c0, rt0.c2, vt1.c0, rt0.c4)) AND (UNLIKELY(DISTINCT 0.21038641845238915)))) ISNULL));
SELECT * FROM vt1, rt0 FULL OUTER JOIN t1 ON UNLIKELY(CAST(rt0.c3 AS BLOB)) FULL OUTER JOIN vt0 ON TYPEOF(DISTINCT (NOT (vt0.c0)));
SELECT DISTINCT rt0.c3, rt0.c4, vt0.c1, rt0.c0, vt0.c2, t1.c51, rt0.c1 FROM rt0, vt0, t1;
SELECT DISTINCT rt0.c3, rt0.c4, vt0.c1, rt0.c0, vt0.c2, t1.c51, rt0.c1 FROM rt0, vt0, t1 WHERE (0X5cd65999) UNION SELECT DISTINCT rt0.c3, rt0.c4, vt0.c1, rt0.c0, vt0.c2, t1.c51, rt0.c1 FROM rt0, vt0, t1 WHERE ((NOT (0x5cd65999))) UNION SELECT DISTINCT rt0.c3, rt0.c4, vt0.c1, rt0.c0, vt0.c2, t1.c51, rt0.c1 FROM rt0, vt0, t1 WHERE (((0x5cd65999) ISNULL));
SELECT DISTINCT rt0.c3, rt0.c4, vt0.c1, rt0.c0, vt0.c2, t1.c51, rt0.c1 FROM rt0, vt0, t1;
SELECT ALL t1.c51 FROM t1 GROUP BY t1.c51;
SELECT t1.c51 FROM t1 WHERE (CASE WHEN t1.c51 THEN ((t1.c51)>=(t1.c51)) ELSE (t1.c51 IN ()) END) GROUP BY t1.c51 UNION SELECT ALL t1.c51 FROM t1 WHERE ((NOT (CASE WHEN t1.c51 THEN ((t1.c51)>=(t1.c51)) ELSE (t1.c51 IN ()) END))) GROUP BY t1.c51 UNION SELECT ALL t1.c51 FROM t1 WHERE (((CASE WHEN t1.c51 THEN ((t1.c51)>=(t1.c51)) ELSE (t1.c51 IN ()) END) ISNULL)) GROUP BY t1.c51;
SELECT ALL t1.c51 FROM t1 GROUP BY t1.c51;
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING (((GROUP_CONCAT(AVG(SUM(rt0.c3)))))<=((GROUP_CONCAT(SUM(rt0.c4))))) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING (NOT ((((GROUP_CONCAT(AVG(SUM(rt0.c3)))))<=((GROUP_CONCAT(SUM(rt0.c4))))))) UNION ALL SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING (((((GROUP_CONCAT(AVG(SUM(rt0.c3)))))<=((GROUP_CONCAT(SUM(rt0.c4)))))) ISNULL);
SELECT ALL vt0.c1, vt0.c0, vt0.c2, t1.c51 FROM t1, vt0;
SELECT vt0.c1, vt0.c0, vt0.c2, t1.c51 FROM t1, vt0 WHERE ((((((vt0.c1)AND(vt0.c1)))AND(NULL)) IN ((((t1.c51)) BETWEEN (('aڝ')) AND ((t1.c51)))))) UNION ALL SELECT ALL vt0.c1, vt0.c0, vt0.c2, t1.c51 FROM t1, vt0 WHERE ((NOT ((((((vt0.c1)AND(vt0.c1)))AND(NULL)) IN ((((t1.c51)) BETWEEN (('aڝ')) AND ((t1.c51)))))))) UNION ALL SELECT ALL vt0.c1, vt0.c0, vt0.c2, t1.c51 FROM t1, vt0 WHERE ((((((((vt0.c1)AND(vt0.c1)))AND(NULL)) IN ((((t1.c51)) BETWEEN (('aڝ')) AND ((t1.c51)))))) ISNULL));
SELECT ALL vt0.c1, vt0.c0, vt0.c2, t1.c51 FROM t1, vt0;
SELECT DISTINCT vt0.c2, rt0.c4, rt0.c3 FROM vt1, rt0 INNER JOIN vt0 ON (CAST(vt0.c2 AS BLOB) IN ()) FULL OUTER JOIN t1 ON ((((0.8087815791397168) NOT NULL))LIKE(((vt1.c0) BETWEEN (rt0.c2) AND (t1.c51))));
SELECT DISTINCT vt0.c2, rt0.c4, rt0.c3 FROM vt1, rt0 INNER JOIN vt0 ON (CAST(vt0.c2 AS BLOB) IN ()) FULL OUTER JOIN t1 ON ((((0.8087815791397168) NOT NULL))LIKE(((vt1.c0) BETWEEN (rt0.c2) AND (t1.c51)))) WHERE ((NULL IN ())) UNION SELECT DISTINCT vt0.c2, rt0.c4, rt0.c3 FROM vt1, rt0 INNER JOIN vt0 ON (CAST(vt0.c2 AS BLOB) IN ()) FULL OUTER JOIN t1 ON ((((0.8087815791397168) NOT NULL))LIKE(((vt1.c0) BETWEEN (rt0.c2) AND (t1.c51)))) WHERE ((NOT ((NULL IN ())))) UNION SELECT DISTINCT vt0.c2, rt0.c4, rt0.c3 FROM vt1, rt0 INNER JOIN vt0 ON (CAST(vt0.c2 AS BLOB) IN ()) FULL OUTER JOIN t1 ON ((((0.8087815791397168) NOT NULL))LIKE(((vt1.c0) BETWEEN (rt0.c2) AND (t1.c51)))) WHERE ((((NULL IN ())) ISNULL));
SELECT DISTINCT vt0.c2, rt0.c4, rt0.c3 FROM vt1, rt0 INNER JOIN vt0 ON (CAST(vt0.c2 AS BLOB) IN ()) FULL OUTER JOIN t1 ON ((((0.8087815791397168) NOT NULL))LIKE(((vt1.c0) BETWEEN (rt0.c2) AND (t1.c51))));
SELECT vt0.c1, vt1.c0, vt0.c2, vt0.c0 FROM vt1 FULL OUTER JOIN vt0 ON CASE WHEN ((vt0.c0)<=(vt0.c0)) THEN vt0.c1 COLLATE NOCASE WHEN CAST(vt0.c1 AS NUMERIC) THEN (vt0.c2 IN ()) WHEN ((x'1e32')LIKE(vt0.c0)) THEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) END GROUP BY vt0.c1, vt1.c0, vt0.c2, vt0.c0;
SELECT ALL vt0.c1, vt1.c0, vt0.c2, vt0.c0 FROM vt1 FULL OUTER JOIN vt0 ON CASE WHEN ((vt0.c0)<=(vt0.c0)) THEN vt0.c1 COLLATE NOCASE WHEN CAST(vt0.c1 AS NUMERIC) THEN (vt0.c2 IN ()) WHEN ((x'1e32')LIKE(vt0.c0)) THEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) END WHERE (((((x'5b68')OR(vt0.c1 COLLATE RTRIM)))AND(((vt1.c0)|(vt0.c2))))) GROUP BY vt0.c1, vt1.c0, vt0.c2, vt0.c0 UNION SELECT vt0.c1, vt1.c0, vt0.c2, vt0.c0 FROM vt1 FULL OUTER JOIN vt0 ON CASE WHEN ((vt0.c0)<=(vt0.c0)) THEN vt0.c1 COLLATE NOCASE WHEN CAST(vt0.c1 AS NUMERIC) THEN (vt0.c2 IN ()) WHEN ((x'1e32')LIKE(vt0.c0)) THEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) END WHERE ((NOT (((((x'5b68')OR(vt0.c1 COLLATE RTRIM)))AND(((vt1.c0)|(vt0.c2))))))) GROUP BY vt0.c1, vt1.c0, vt0.c2, vt0.c0 UNION SELECT vt0.c1, vt1.c0, vt0.c2, vt0.c0 FROM vt1 FULL OUTER JOIN vt0 ON CASE WHEN ((vt0.c0)<=(vt0.c0)) THEN vt0.c1 COLLATE NOCASE WHEN CAST(vt0.c1 AS NUMERIC) THEN (vt0.c2 IN ()) WHEN ((x'1e32')LIKE(vt0.c0)) THEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) END WHERE (((((((x'5b68')OR(vt0.c1 COLLATE RTRIM)))AND(((vt1.c0)|(vt0.c2))))) ISNULL)) GROUP BY vt0.c1, vt1.c0, vt0.c2, vt0.c0;
SELECT vt0.c1, vt1.c0, vt0.c2, vt0.c0 FROM vt1 FULL OUTER JOIN vt0 ON CASE WHEN ((vt0.c0)<=(vt0.c0)) THEN vt0.c1 COLLATE NOCASE WHEN CAST(vt0.c1 AS NUMERIC) THEN (vt0.c2 IN ()) WHEN ((x'1e32')LIKE(vt0.c0)) THEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) END GROUP BY vt0.c1, vt1.c0, vt0.c2, vt0.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((COUNT(TOTAL(GROUP_CONCAT(AVG(vt1.c0)))))||(((COUNT(vt1.c0))LIKE(vt1.c0)))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (((COUNT(TOTAL(GROUP_CONCAT(AVG(vt1.c0)))))||(((COUNT(vt1.c0))LIKE(vt1.c0)))))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((((COUNT(TOTAL(GROUP_CONCAT(AVG(vt1.c0)))))||(((COUNT(vt1.c0))LIKE(vt1.c0))))) ISNULL);
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE (CAST(((rt0.c0)&(rt0.c3)) AS NUMERIC)) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (CAST(((rt0.c0)&(rt0.c3)) AS NUMERIC)))) UNION ALL SELECT ALL * FROM rt0 WHERE (((CAST(((rt0.c0)&(rt0.c3)) AS NUMERIC)) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT * FROM vt1 INNER JOIN vt0 ON (vt0.c1 COLLATE RTRIM IN ());
SELECT DISTINCT * FROM vt1 INNER JOIN vt0 ON (vt0.c1 COLLATE RTRIM IN ()) WHERE (((((NOT (vt0.c2))))<=((CASE WHEN vt0.c1 THEN vt0.c0 ELSE vt1.c0 END)))) UNION SELECT DISTINCT * FROM vt1 INNER JOIN vt0 ON (vt0.c1 COLLATE RTRIM IN ()) WHERE ((NOT (((((NOT (vt0.c2))))<=((CASE WHEN vt0.c1 THEN vt0.c0 ELSE vt1.c0 END)))))) UNION SELECT DISTINCT * FROM vt1 INNER JOIN vt0 ON (vt0.c1 COLLATE RTRIM IN ()) WHERE (((((((NOT (vt0.c2))))<=((CASE WHEN vt0.c1 THEN vt0.c0 ELSE vt1.c0 END)))) ISNULL));
SELECT DISTINCT * FROM vt1 INNER JOIN vt0 ON (vt0.c1 COLLATE RTRIM IN ());
SELECT vt0.c2 FROM vt0 GROUP BY vt0.c2;
SELECT ALL vt0.c2 FROM vt0 WHERE (((vt0.c0 COLLATE RTRIM)|(x'' COLLATE RTRIM))) GROUP BY vt0.c2 UNION SELECT vt0.c2 FROM vt0 WHERE ((NOT (((vt0.c0 COLLATE RTRIM)|(x'' COLLATE RTRIM))))) GROUP BY vt0.c2 UNION SELECT ALL vt0.c2 FROM vt0 WHERE (((((vt0.c0 COLLATE RTRIM)|(x'' COLLATE RTRIM))) ISNULL)) GROUP BY vt0.c2;
SELECT vt0.c2 FROM vt0 GROUP BY vt0.c2;
SELECT ALL vt0.c0 FROM vt0, rt0, vt1, t1 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, rt0, vt1, t1 GROUP BY vt0.c0 HAVING (((CAST(GROUP_CONCAT(vt0.c0) AS BLOB), AVG(GROUP_CONCAT(SUM(AVG(AVG(GROUP_CONCAT(TOTAL(COUNT(SUM(COUNT(*)))))))))), SUM(vt0.c2)))==((CASE WHEN SUM(SUM(MAX(MIN(AVG(t1.c51))))) THEN SUM(TOTAL(rt0.c2)) END, COUNT(*), MIN(MIN(MIN(t1.c51)))))) UNION ALL SELECT vt0.c0 FROM vt0, rt0, vt1, t1 GROUP BY vt0.c0 HAVING (NOT ((((CAST(GROUP_CONCAT(vt0.c0) AS BLOB), AVG(GROUP_CONCAT(SUM(AVG(AVG(GROUP_CONCAT(TOTAL(COUNT(SUM(COUNT(*)))))))))), SUM(vt0.c2)))=((CASE WHEN SUM(SUM(MAX(MIN(AVG(t1.c51))))) THEN SUM(TOTAL(rt0.c2)) END, COUNT(*), MIN(MIN(MIN(t1.c51)))))))) UNION ALL SELECT vt0.c0 FROM vt0, rt0, vt1, t1 GROUP BY vt0.c0 HAVING (((((CAST(GROUP_CONCAT(vt0.c0) AS BLOB), AVG(GROUP_CONCAT(SUM(AVG(AVG(GROUP_CONCAT(TOTAL(COUNT(SUM(COUNT(*)))))))))), SUM(vt0.c2)))==((CASE WHEN SUM(SUM(MAX(MIN(AVG(t1.c51))))) THEN SUM(TOTAL(rt0.c2)) END, COUNT(*), MIN(MIN(MIN(t1.c51))))))) ISNULL);
SELECT * FROM rt0 LEFT OUTER JOIN vt0 ON (((rt0.c2) BETWEEN (vt0.c0) AND (rt0.c2)) IN ());
SELECT ALL * FROM rt0 LEFT OUTER JOIN vt0 ON (((rt0.c2) BETWEEN (vt0.c0) AND (rt0.c2)) IN ()) WHERE (((rt0.c1)GLOB(rt0.c0)) COLLATE BINARY) UNION ALL SELECT ALL * FROM rt0 LEFT OUTER JOIN vt0 ON (((rt0.c2) BETWEEN (vt0.c0) AND (rt0.c2)) IN ()) WHERE ((NOT (((rt0.c1)GLOB(rt0.c0)) COLLATE BINARY))) UNION ALL SELECT * FROM rt0 LEFT OUTER JOIN vt0 ON (((rt0.c2) BETWEEN (vt0.c0) AND (rt0.c2)) IN ()) WHERE (((((rt0.c1)GLOB(rt0.c0)) COLLATE BINARY) ISNULL));
SELECT * FROM rt0 LEFT OUTER JOIN vt0 ON (((rt0.c2) BETWEEN (vt0.c0) AND (rt0.c2)) IN ());
SELECT DISTINCT vt0.c1, t1.c51, vt0.c0, vt1.c0 FROM vt1, vt0, t1;
SELECT DISTINCT vt0.c1, t1.c51, vt0.c0, vt1.c0 FROM vt1, vt0, t1 WHERE ((NOT (TRIM(DISTINCT vt0.c0)))) UNION SELECT DISTINCT vt0.c1, t1.c51, vt0.c0, vt1.c0 FROM vt1, vt0, t1 WHERE ((NOT ((NOT (TRIM(DISTINCT vt0.c0)))))) UNION SELECT DISTINCT vt0.c1, t1.c51, vt0.c0, vt1.c0 FROM vt1, vt0, t1 WHERE ((((NOT (TRIM(DISTINCT vt0.c0)))) ISNULL));
SELECT DISTINCT vt0.c1, t1.c51, vt0.c0, vt1.c0 FROM vt1, vt0, t1;
SELECT ALL rt0.c3 FROM vt1, vt0, t1, rt0 GROUP BY rt0.c3;
SELECT ALL rt0.c3 FROM vt1, vt0, t1, rt0 WHERE (((rt0.c0)<>(vt0.c2 COLLATE BINARY))) GROUP BY rt0.c3 UNION SELECT rt0.c3 FROM vt1, vt0, t1, rt0 WHERE ((NOT (((rt0.c0)!=(vt0.c2 COLLATE BINARY))))) GROUP BY rt0.c3 UNION SELECT ALL rt0.c3 FROM vt1, vt0, t1, rt0 WHERE (((((rt0.c0)!=(vt0.c2 COLLATE BINARY))) ISNULL)) GROUP BY rt0.c3;
SELECT ALL rt0.c3 FROM vt1, vt0, t1, rt0 GROUP BY rt0.c3;
SELECT ALL vt0.c0, vt0.c2 FROM vt0 GROUP BY vt0.c0, vt0.c2;
SELECT vt0.c0, vt0.c2 FROM vt0 GROUP BY vt0.c0, vt0.c2 HAVING ((GROUP_CONCAT(vt0.c1)) BETWEEN (TOTAL(TOTAL(vt0.c0))) AND (((((-1638413087)AND(AVG(vt0.c1))))AND(MIN(vt0.c0))))) UNION ALL SELECT vt0.c0, vt0.c2 FROM vt0 GROUP BY vt0.c0, vt0.c2 HAVING (NOT (((GROUP_CONCAT(vt0.c1)) BETWEEN (TOTAL(TOTAL(vt0.c0))) AND (((((-1638413087)AND(AVG(vt0.c1))))AND(MIN(vt0.c0))))))) UNION ALL SELECT vt0.c0, vt0.c2 FROM vt0 GROUP BY vt0.c0, vt0.c2 HAVING ((((GROUP_CONCAT(vt0.c1)) BETWEEN (TOTAL(TOTAL(vt0.c0))) AND (((((-1638413087)AND(AVG(vt0.c1))))AND(MIN(vt0.c0)))))) ISNULL);
SELECT SUM('	Ms') FROM vt0, vt1, t1, rt0 ORDER BY CAST((- (0.23658667161184044)) AS BLOB)  NULLS LAST, ((('TB?U]U' COLLATE RTRIM))!=((230823838)))  NULLS LAST;
SELECT rt0.c0, rt0.c1, rt0.c3, rt0.c2, t1.c51 FROM t1, vt1, rt0, vt0 NOT INDEXED;
SELECT rt0.c0, rt0.c1, rt0.c3, rt0.c2, t1.c51 FROM t1, vt1, rt0, vt0 WHERE ((- (CAST(rt0.c3 AS REAL)))) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c3, rt0.c2, t1.c51 FROM t1, vt1, rt0, vt0 WHERE ((NOT ((- (CAST(rt0.c3 AS REAL)))))) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c3, rt0.c2, t1.c51 FROM t1, vt1, rt0, vt0 WHERE ((((- (CAST(rt0.c3 AS REAL)))) ISNULL));
SELECT rt0.c0, rt0.c1, rt0.c3, rt0.c2, t1.c51 FROM t1, vt1, rt0, vt0 NOT INDEXED;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0))) NOT BETWEEN (((x'dfcd') NOT BETWEEN ('-437825738') AND (vt1.c0))) AND (vt1.c0 COLLATE BINARY))) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0))) NOT BETWEEN (((x'dfcd') NOT BETWEEN ('-437825738') AND (vt1.c0))) AND (vt1.c0 COLLATE BINARY))))) UNION SELECT DISTINCT * FROM vt1 WHERE (((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0))) NOT BETWEEN (((x'dfcd') NOT BETWEEN ('-437825738') AND (vt1.c0))) AND (vt1.c0 COLLATE BINARY))) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT vt0.c2, rt0.c3, rt0.c0, t1.c51, rt0.c1, rt0.c2 FROM rt0, t1 FULL OUTER JOIN vt0 ON CAST(((vt0.c1) NOT BETWEEN ('l') AND (rt0.c0)) AS BLOB) GROUP BY vt0.c2, rt0.c3, rt0.c0, t1.c51, rt0.c1, rt0.c2;
SELECT ALL vt0.c2, rt0.c3, rt0.c0, t1.c51, rt0.c1, rt0.c2 FROM rt0, t1 FULL OUTER JOIN vt0 ON CAST(((vt0.c1) NOT BETWEEN ('l') AND (rt0.c0)) AS BLOB) WHERE ((((rt0.c3 IN ()))IS(((((rt0.c1)OR(rt0.c0)))AND(vt0.c1))))) GROUP BY vt0.c2, rt0.c3, rt0.c0, t1.c51, rt0.c1, rt0.c2 UNION SELECT ALL vt0.c2, rt0.c3, rt0.c0, t1.c51, rt0.c1, rt0.c2 FROM rt0, t1 FULL OUTER JOIN vt0 ON CAST(((vt0.c1) NOT BETWEEN ('l') AND (rt0.c0)) AS BLOB) WHERE ((NOT ((((rt0.c3 IN ()))IS(((((rt0.c1)OR(rt0.c0)))AND(vt0.c1))))))) GROUP BY vt0.c2, rt0.c3, rt0.c0, t1.c51, rt0.c1, rt0.c2 UNION SELECT ALL vt0.c2, rt0.c3, rt0.c0, t1.c51, rt0.c1, rt0.c2 FROM rt0, t1 FULL OUTER JOIN vt0 ON CAST(((vt0.c1) NOT BETWEEN ('l') AND (rt0.c0)) AS BLOB) WHERE ((((((rt0.c3 IN ()))IS(((((rt0.c1)OR(rt0.c0)))AND(vt0.c1))))) ISNULL)) GROUP BY vt0.c2, rt0.c3, rt0.c0, t1.c51, rt0.c1, rt0.c2;
SELECT vt0.c2, rt0.c3, rt0.c0, t1.c51, rt0.c1, rt0.c2 FROM rt0, t1 FULL OUTER JOIN vt0 ON CAST(((vt0.c1) NOT BETWEEN ('l') AND (rt0.c0)) AS BLOB) GROUP BY vt0.c2, rt0.c3, rt0.c0, t1.c51, rt0.c1, rt0.c2;
SELECT ALL t1.c51 FROM t1 GROUP BY t1.c51;
SELECT ALL t1.c51 FROM t1 GROUP BY t1.c51 HAVING NULL UNION ALL SELECT ALL t1.c51 FROM t1 GROUP BY t1.c51 HAVING (NOT (NULL)) UNION ALL SELECT ALL t1.c51 FROM t1 GROUP BY t1.c51 HAVING ((NULL) ISNULL);
SELECT ALL t1.c51 FROM t1 GROUP BY t1.c51;
SELECT ALL t1.c51 FROM t1 GROUP BY t1.c51 HAVING NULL UNION ALL SELECT ALL t1.c51 FROM t1 GROUP BY t1.c51 HAVING (NOT (NULL)) UNION ALL SELECT ALL t1.c51 FROM t1 GROUP BY t1.c51 HAVING ((NULL) ISNULL);
SELECT ALL t1.c51 FROM t1 GROUP BY t1.c51;
SELECT ALL vt0.c1, vt0.c0 FROM vt0;
SELECT vt0.c1, vt0.c0 FROM vt0 WHERE (CAST((((vt0.c2)) BETWEEN ((vt0.c1)) AND ((vt0.c1))) AS NUMERIC)) UNION ALL SELECT vt0.c1, vt0.c0 FROM vt0 WHERE ((NOT (CAST((((vt0.c2)) BETWEEN ((vt0.c1)) AND ((vt0.c1))) AS NUMERIC)))) UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM vt0 WHERE (((CAST((((vt0.c2)) BETWEEN ((vt0.c1)) AND ((vt0.c1))) AS NUMERIC)) ISNULL));
SELECT ALL vt0.c1, vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c2, rt0.c0, vt1.c0, rt0.c1, rt0.c2, vt0.c0, vt0.c1 FROM t1 RIGHT OUTER JOIN rt0 ON CAST(vt0.c1 AS NUMERIC) COLLATE NOCASE LEFT OUTER JOIN vt1 ON ((rt0.c4 IN (rt0.c3)) IN (((rt0.c4) NOT NULL))) CROSS JOIN vt0 ON ((((NOT (vt0.c1))))<=((vt1.c0)));
SELECT ALL vt0.c2 FROM vt0 NOT INDEXED GROUP BY vt0.c2;
SELECT vt0.c2 FROM vt0 WHERE (((vt0.c2 COLLATE BINARY)*(((((vt0.c1)AND(vt0.c2)))AND(vt0.c2))))) GROUP BY vt0.c2 UNION SELECT vt0.c2 FROM vt0 WHERE ((NOT (((vt0.c2 COLLATE BINARY)*(((((vt0.c1)AND(vt0.c2)))AND(vt0.c2))))))) GROUP BY vt0.c2 UNION SELECT ALL vt0.c2 FROM vt0 WHERE (((((vt0.c2 COLLATE BINARY)*(((((vt0.c1)AND(vt0.c2)))AND(vt0.c2))))) ISNULL)) GROUP BY vt0.c2;
SELECT ALL vt0.c2 FROM vt0 NOT INDEXED GROUP BY vt0.c2;
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING MAX(((rt0.c1)%(rt0.c1))) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING (NOT (MAX(((rt0.c1)%(rt0.c1))))) UNION ALL SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING ((MAX(((rt0.c1)%(rt0.c1)))) ISNULL);
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING MAX(((rt0.c1)%(rt0.c1))) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING (NOT (MAX(((rt0.c1)%(rt0.c1))))) UNION ALL SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING ((MAX(((rt0.c1)%(rt0.c1)))) ISNULL);
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT vt1.c0, t1.c51 FROM vt1, t1;
SELECT vt1.c0, t1.c51 FROM vt1, t1 WHERE (LIKELIHOOD(((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)), 0.12305244640052904)) UNION ALL SELECT vt1.c0, t1.c51 FROM vt1, t1 WHERE ((NOT (LIKELIHOOD(((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)), 0.12305244640052904)))) UNION ALL SELECT ALL vt1.c0, t1.c51 FROM vt1, t1 WHERE (((LIKELIHOOD(((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)), 0.12305244640052904)) ISNULL));
SELECT vt1.c0, t1.c51 FROM vt1, t1;
SELECT DISTINCT vt0.c2, vt0.c1, vt0.c0 FROM t1, vt1, vt0, rt0;
SELECT DISTINCT vt0.c2, vt0.c1, vt0.c0 FROM t1, vt1, vt0, rt0 NOT INDEXED WHERE (LIKELY(NULLIF(DISTINCT vt0.c2, vt1.c0))) UNION SELECT DISTINCT vt0.c2, vt0.c1, vt0.c0 FROM t1, vt1, vt0, rt0 WHERE ((NOT (LIKELY(NULLIF(DISTINCT vt0.c2, vt1.c0))))) UNION SELECT DISTINCT vt0.c2, vt0.c1, vt0.c0 FROM t1, vt1, vt0, rt0 WHERE (((LIKELY(NULLIF(DISTINCT vt0.c2, vt1.c0))) ISNULL));
SELECT DISTINCT vt0.c2, vt0.c1, vt0.c0 FROM t1, vt1, vt0, rt0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE (((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))GLOB(json_array_length(vt1.c0)))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))GLOB(json_array_length(vt1.c0)))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE (((((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))GLOB(json_array_length(vt1.c0)))) ISNULL)) GROUP BY vt1.c0;
SELECT rt0.c1 FROM vt1, rt0 NATURAL JOIN t1 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM vt1, rt0 NATURAL JOIN t1 GROUP BY rt0.c1 HAVING rt0.c3 UNION ALL SELECT rt0.c1 FROM vt1, rt0 NATURAL JOIN t1 GROUP BY rt0.c1 HAVING (NOT (rt0.c3)) UNION ALL SELECT ALL rt0.c1 FROM vt1, rt0 NATURAL JOIN t1 GROUP BY rt0.c1 HAVING ((rt0.c3) ISNULL);
SELECT rt0.c1 FROM vt1, rt0 NATURAL JOIN t1 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM vt1, rt0 NATURAL JOIN t1 GROUP BY rt0.c1 HAVING rt0.c3 UNION ALL SELECT rt0.c1 FROM vt1, rt0 NATURAL JOIN t1 GROUP BY rt0.c1 HAVING (NOT (rt0.c3)) UNION ALL SELECT ALL rt0.c1 FROM vt1, rt0 NATURAL JOIN t1 GROUP BY rt0.c1 HAVING ((rt0.c3) ISNULL);
SELECT rt0.c1 FROM vt1, rt0 NATURAL JOIN t1 GROUP BY rt0.c1;
SELECT t1.c51 FROM t1;
SELECT t1.c51 FROM t1 WHERE ((((~ (t1.c51)))GLOB(t1.c51 COLLATE BINARY))) UNION ALL SELECT t1.c51 FROM t1 WHERE ((NOT ((((~ (t1.c51)))GLOB(t1.c51 COLLATE BINARY))))) UNION ALL SELECT ALL t1.c51 FROM t1 WHERE ((((((~ (t1.c51)))GLOB(t1.c51 COLLATE BINARY))) ISNULL));
SELECT t1.c51 FROM t1;
SELECT DISTINCT rt0.c1 FROM t1, vt1 LEFT OUTER JOIN rt0 ON CAST(CAST(t1.c51 AS NUMERIC) AS TEXT);
SELECT DISTINCT rt0.c1 FROM t1, vt1 LEFT OUTER JOIN rt0 ON CAST(CAST(t1.c51 AS NUMERIC) AS TEXT) WHERE ((+ ((('536832462')/(rt0.c1))))) UNION SELECT DISTINCT rt0.c1 FROM t1, vt1 LEFT OUTER JOIN rt0 ON CAST(CAST(t1.c51 AS NUMERIC) AS TEXT) WHERE ((NOT ((+ ((('536832462')/(rt0.c1))))))) UNION SELECT DISTINCT rt0.c1 FROM t1, vt1 LEFT OUTER JOIN rt0 ON CAST(CAST(t1.c51 AS NUMERIC) AS TEXT) WHERE ((((+ ((('536832462')/(rt0.c1))))) ISNULL));
SELECT DISTINCT rt0.c1 FROM t1, vt1 LEFT OUTER JOIN rt0 ON CAST(CAST(t1.c51 AS NUMERIC) AS TEXT);
SELECT ALL t1.c51 FROM t1, rt0, vt1 GROUP BY t1.c51;
SELECT t1.c51 FROM t1, rt0, vt1 WHERE ((NOT (CASE rt0.c1  WHEN rt0.c3 THEN t1.c51 ELSE t1.c51 END))) GROUP BY t1.c51 UNION SELECT t1.c51 FROM t1, rt0, vt1 WHERE ((NOT ((NOT (CASE rt0.c1  WHEN rt0.c3 THEN t1.c51 ELSE t1.c51 END))))) GROUP BY t1.c51 UNION SELECT ALL t1.c51 FROM t1, rt0, vt1 WHERE ((((NOT (CASE rt0.c1  WHEN rt0.c3 THEN t1.c51 ELSE t1.c51 END))) ISNULL)) GROUP BY t1.c51;
SELECT ALL t1.c51 FROM t1, rt0, vt1 GROUP BY t1.c51;
SELECT vt0.c2, vt0.c0 FROM vt0 GROUP BY vt0.c2, vt0.c0;
SELECT ALL vt0.c2, vt0.c0 FROM vt0 GROUP BY vt0.c2, vt0.c0 HAVING ((CAST(vt0.c1 AS NUMERIC)) NOT BETWEEN ('F76') AND (TOTAL(AVG(MIN('-612658282'))))) UNION ALL SELECT vt0.c2, vt0.c0 FROM vt0 GROUP BY vt0.c2, vt0.c0 HAVING (NOT (((CAST(vt0.c1 AS NUMERIC)) NOT BETWEEN ('F76') AND (TOTAL(AVG(MIN('-612658282'))))))) UNION ALL SELECT vt0.c2, vt0.c0 FROM vt0 GROUP BY vt0.c2, vt0.c0 HAVING ((((CAST(vt0.c1 AS NUMERIC)) NOT BETWEEN ('F76') AND (TOTAL(AVG(MIN('-612658282')))))) ISNULL);
SELECT * FROM t1, vt1 RIGHT OUTER JOIN vt0 ON rt0.c0 RIGHT OUTER JOIN rt0 ON (json_type(vt0.c1) IN ());
SELECT DISTINCT rt0.c0, t1.c51, rt0.c1, vt0.c0, rt0.c2, vt1.c0 FROM rt0 LEFT OUTER JOIN vt0 ON 0.0347220955604568 LEFT OUTER JOIN vt1 ON ((CAST(t1.c51 AS NUMERIC))%((((rt0.c3)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c4))))) INNER JOIN t1 ON CASE WHEN (((rt0.c1))!=((vt0.c0))) THEN ((rt0.c0)<<(vt0.c0)) END;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE (0.5326911362131187) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (0.5326911362131187))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE (((0.5326911362131187) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL rt0.c0, rt0.c4, rt0.c3 FROM rt0, t1 GROUP BY rt0.c0, rt0.c4, rt0.c3;
SELECT rt0.c0, rt0.c4, rt0.c3 FROM rt0, t1 GROUP BY rt0.c0, rt0.c4, rt0.c3 HAVING MAX(GROUP_CONCAT(rt0.c3)) UNION ALL SELECT ALL rt0.c0, rt0.c4, rt0.c3 FROM rt0, t1 GROUP BY rt0.c0, rt0.c4, rt0.c3 HAVING (NOT (MAX(GROUP_CONCAT(rt0.c3)))) UNION ALL SELECT ALL rt0.c0, rt0.c4, rt0.c3 FROM rt0, t1 GROUP BY rt0.c0, rt0.c4, rt0.c3 HAVING ((MAX(GROUP_CONCAT(rt0.c3))) ISNULL);
SELECT * FROM t1, rt0, vt0;
SELECT ALL * FROM t1, rt0, vt0 WHERE (CASE rt0.c0  WHEN vt0.c0 THEN CASE 1.7976931348623157E308  WHEN vt0.c1 THEN rt0.c4 END WHEN vt0.c1 COLLATE NOCASE THEN DATE(rt0.c2, rt0.c4, vt0.c0) WHEN '-1165303162' THEN (- (rt0.c3)) WHEN ((rt0.c0) NOT NULL) THEN vt0.c0 WHEN ((rt0.c4)GLOB(vt0.c2)) THEN vt0.c0 END) UNION ALL SELECT ALL * FROM t1, rt0, vt0 WHERE ((NOT (CASE rt0.c0  WHEN vt0.c0 THEN CASE 1.7976931348623157E308  WHEN vt0.c1 THEN rt0.c4 END WHEN vt0.c1 COLLATE NOCASE THEN DATE(rt0.c2, rt0.c4, vt0.c0) WHEN '-1165303162' THEN (- (rt0.c3)) WHEN ((rt0.c0) NOT NULL) THEN vt0.c0 WHEN ((rt0.c4)GLOB(vt0.c2)) THEN vt0.c0 END))) UNION ALL SELECT ALL * FROM t1, rt0, vt0 WHERE (((CASE rt0.c0  WHEN vt0.c0 THEN CASE 1.7976931348623157E308  WHEN vt0.c1 THEN rt0.c4 END WHEN vt0.c1 COLLATE NOCASE THEN DATE(rt0.c2, rt0.c4, vt0.c0) WHEN '-1165303162' THEN (- (rt0.c3)) WHEN ((rt0.c0) NOT NULL) THEN vt0.c0 WHEN ((rt0.c4)GLOB(vt0.c2)) THEN vt0.c0 END) ISNULL));
SELECT * FROM t1, rt0, vt0;
SELECT DISTINCT rt0.c4, rt0.c0, rt0.c3, t1.c51 FROM rt0 CROSS JOIN vt0 ON CASE rt0.c2  WHEN t1.c51 THEN rt0.c2 ELSE t1.c51 END COLLATE RTRIM CROSS JOIN vt1 ON CASE WHEN CAST(rt0.c2 AS NUMERIC) THEN ((vt0.c0)%(0.4596302820780209)) WHEN (((vt1.c0, vt0.c1, vt1.c0)) BETWEEN ((rt0.c4, vt0.c0, rt0.c0)) AND ((rt0.c1, t1.c51, vt1.c0))) THEN rt0.c1 COLLATE BINARY WHEN '-437825738' THEN CAST(vt0.c2 AS REAL) END CROSS JOIN t1 ON NULLIF((((rt0.c4))<((rt0.c0))), (((vt0.c2))>((rt0.c4))));
SELECT DISTINCT rt0.c4, rt0.c0, rt0.c3, t1.c51 FROM rt0 CROSS JOIN vt0 ON CASE rt0.c2  WHEN t1.c51 THEN rt0.c2 ELSE t1.c51 END COLLATE RTRIM CROSS JOIN vt1 ON CASE WHEN CAST(rt0.c2 AS NUMERIC) THEN ((vt0.c0)%(0.4596302820780209)) WHEN (((vt1.c0, vt0.c1, vt1.c0)) BETWEEN ((rt0.c4, vt0.c0, rt0.c0)) AND ((rt0.c1, t1.c51, vt1.c0))) THEN rt0.c1 COLLATE BINARY WHEN '-437825738' THEN CAST(vt0.c2 AS REAL) END CROSS JOIN t1 ON NULLIF((((rt0.c4))<((rt0.c0))), (((vt0.c2))>((rt0.c4)))) WHERE (UPPER(((t1.c51)GLOB(vt0.c0)))) UNION SELECT DISTINCT rt0.c4, rt0.c0, rt0.c3, t1.c51 FROM rt0 CROSS JOIN vt0 ON CASE rt0.c2  WHEN t1.c51 THEN rt0.c2 ELSE t1.c51 END COLLATE RTRIM CROSS JOIN vt1 ON CASE WHEN CAST(rt0.c2 AS NUMERIC) THEN ((vt0.c0)%(0.4596302820780209)) WHEN (((vt1.c0, vt0.c1, vt1.c0)) BETWEEN ((rt0.c4, vt0.c0, rt0.c0)) AND ((rt0.c1, t1.c51, vt1.c0))) THEN rt0.c1 COLLATE BINARY WHEN '-437825738' THEN CAST(vt0.c2 AS REAL) END CROSS JOIN t1 ON NULLIF((((rt0.c4))<((rt0.c0))), (((vt0.c2))>((rt0.c4)))) WHERE ((NOT (UPPER(((t1.c51)GLOB(vt0.c0)))))) UNION SELECT DISTINCT rt0.c4, rt0.c0, rt0.c3, t1.c51 FROM rt0 CROSS JOIN vt0 ON CASE rt0.c2  WHEN t1.c51 THEN rt0.c2 ELSE t1.c51 END COLLATE RTRIM CROSS JOIN vt1 ON CASE WHEN CAST(rt0.c2 AS NUMERIC) THEN ((vt0.c0)%(0.4596302820780209)) WHEN (((vt1.c0, vt0.c1, vt1.c0)) BETWEEN ((rt0.c4, vt0.c0, rt0.c0)) AND ((rt0.c1, t1.c51, vt1.c0))) THEN rt0.c1 COLLATE BINARY WHEN '-437825738' THEN CAST(vt0.c2 AS REAL) END CROSS JOIN t1 ON NULLIF((((rt0.c4))<((rt0.c0))), (((vt0.c2))>((rt0.c4)))) WHERE (((UPPER(((t1.c51)GLOB(vt0.c0)))) ISNULL));
SELECT DISTINCT rt0.c4, rt0.c0, rt0.c3, t1.c51 FROM rt0 CROSS JOIN vt0 ON CASE rt0.c2  WHEN t1.c51 THEN rt0.c2 ELSE t1.c51 END COLLATE RTRIM CROSS JOIN vt1 ON CASE WHEN CAST(rt0.c2 AS NUMERIC) THEN ((vt0.c0)%(0.4596302820780209)) WHEN (((vt1.c0, vt0.c1, vt1.c0)) BETWEEN ((rt0.c4, vt0.c0, rt0.c0)) AND ((rt0.c1, t1.c51, vt1.c0))) THEN rt0.c1 COLLATE BINARY WHEN '-437825738' THEN CAST(vt0.c2 AS REAL) END CROSS JOIN t1 ON NULLIF((((rt0.c4))<((rt0.c0))), (((vt0.c2))>((rt0.c4))));
SELECT ALL vt0.c0 FROM vt0, t1 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0, t1 WHERE (CASE t1.c51  WHEN CASE WHEN vt0.c2 THEN x'' END THEN (t1.c51 IN ()) ELSE vt0.c0 COLLATE NOCASE END) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0, t1 WHERE ((NOT (CASE t1.c51  WHEN CASE WHEN vt0.c2 THEN x'' END THEN (t1.c51 IN ()) ELSE vt0.c0 COLLATE NOCASE END))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0, t1 WHERE (((CASE t1.c51  WHEN CASE WHEN vt0.c2 THEN x'' END THEN (t1.c51 IN ()) ELSE vt0.c0 COLLATE NOCASE END) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, t1 GROUP BY vt0.c0;
SELECT ALL vt0.c2, vt1.c0, vt0.c1, vt0.c0 FROM vt0 NATURAL JOIN vt1 GROUP BY vt0.c2, vt1.c0, vt0.c1, vt0.c0;
SELECT vt0.c2, vt1.c0, vt0.c1, vt0.c0 FROM vt0 NATURAL JOIN vt1 GROUP BY vt0.c2, vt1.c0, vt0.c1, vt0.c0 HAVING AVG(COUNT(*)) UNION ALL SELECT vt0.c2, vt1.c0, vt0.c1, vt0.c0 FROM vt0 NATURAL JOIN vt1 GROUP BY vt0.c2, vt1.c0, vt0.c1, vt0.c0 HAVING (NOT (AVG(COUNT(*)))) UNION ALL SELECT ALL vt0.c2, vt1.c0, vt0.c1, vt0.c0 FROM vt0 NATURAL JOIN vt1 GROUP BY vt0.c2, vt1.c0, vt0.c1, vt0.c0 HAVING ((AVG(COUNT(*))) ISNULL);
SELECT SUM(CASE CAST(vt1.c0 AS REAL)  WHEN ((rt0.c0)GLOB(rt0.c1)) THEN ((x'a11a') IS TRUE) WHEN CASE t1.c51  WHEN vt1.c0 THEN rt0.c1 END THEN ((t1.c51) BETWEEN ('') AND (rt0.c0)) WHEN t1.c51 COLLATE NOCASE THEN ((((((((rt0.c2)OR(t1.c51)))OR(vt1.c0)))OR(rt0.c3)))AND(rt0.c3)) END) FROM rt0, vt1, t1 ORDER BY ((((rt0.c2))>((t1.c51))) IN (CAST(rt0.c2 AS BLOB)))  NULLS LAST;
SELECT rt0.c3, rt0.c4, rt0.c0, rt0.c2 FROM t1, vt1, rt0;
SELECT ALL rt0.c3, rt0.c4, rt0.c0, rt0.c2 FROM t1, vt1, rt0 WHERE ((((((rt0.c3)) NOT BETWEEN ((rt0.c4)) AND (('aڝ')))) NOTNULL)) UNION ALL SELECT ALL rt0.c3, rt0.c4, rt0.c0, rt0.c2 FROM t1, vt1, rt0 WHERE ((NOT ((((((rt0.c3)) NOT BETWEEN ((rt0.c4)) AND (('aڝ')))) NOTNULL)))) UNION ALL SELECT ALL rt0.c3, rt0.c4, rt0.c0, rt0.c2 FROM t1, vt1, rt0 WHERE ((((((((rt0.c3)) NOT BETWEEN ((rt0.c4)) AND (('aڝ')))) NOTNULL)) ISNULL));
SELECT rt0.c3, rt0.c4, rt0.c0, rt0.c2 FROM t1, vt1, rt0;
SELECT DISTINCT * FROM vt1, rt0, t1, vt0;
SELECT DISTINCT * FROM vt1, rt0, t1, vt0 WHERE (CASE CASE vt0.c2  WHEN vt0.c1 THEN rt0.c3 END  WHEN (+ (vt0.c0)) THEN ((rt0.c0)GLOB(rt0.c1)) ELSE (NOT (vt1.c0)) END) UNION SELECT DISTINCT * FROM vt1, rt0, t1, vt0 WHERE ((NOT (CASE CASE vt0.c2  WHEN vt0.c1 THEN rt0.c3 END  WHEN (+ (vt0.c0)) THEN ((rt0.c0)GLOB(rt0.c1)) ELSE (NOT (vt1.c0)) END))) UNION SELECT DISTINCT * FROM vt1, rt0, t1, vt0 WHERE (((CASE CASE vt0.c2  WHEN vt0.c1 THEN rt0.c3 END  WHEN (+ (vt0.c0)) THEN ((rt0.c0)GLOB(rt0.c1)) ELSE (NOT (vt1.c0)) END) ISNULL));
SELECT DISTINCT * FROM vt1, rt0, t1, vt0;
SELECT ALL rt0.c2, rt0.c3, vt0.c1, t1.c51, rt0.c4, vt0.c2, vt0.c0, rt0.c0, vt1.c0, rt0.c1 FROM t1, rt0, vt1, vt0 GROUP BY rt0.c2, rt0.c3, vt0.c1, t1.c51, rt0.c4, vt0.c2, vt0.c0, rt0.c0, vt1.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c3, vt0.c1, t1.c51, rt0.c4, vt0.c2, vt0.c0, rt0.c0, vt1.c0, rt0.c1 FROM t1, rt0, vt1, vt0 WHERE (CAST(((((rt0.c1)OR(rt0.c1)))OR(vt0.c2)) AS BLOB)) GROUP BY rt0.c2, rt0.c3, vt0.c1, t1.c51, rt0.c4, vt0.c2, vt0.c0, rt0.c0, vt1.c0, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c3, vt0.c1, t1.c51, rt0.c4, vt0.c2, vt0.c0, rt0.c0, vt1.c0, rt0.c1 FROM t1, rt0, vt1, vt0 WHERE ((NOT (CAST(((((rt0.c1)OR(rt0.c1)))OR(vt0.c2)) AS BLOB)))) GROUP BY rt0.c2, rt0.c3, vt0.c1, t1.c51, rt0.c4, vt0.c2, vt0.c0, rt0.c0, vt1.c0, rt0.c1 UNION SELECT rt0.c2, rt0.c3, vt0.c1, t1.c51, rt0.c4, vt0.c2, vt0.c0, rt0.c0, vt1.c0, rt0.c1 FROM t1, rt0, vt1, vt0 WHERE (((CAST(((((rt0.c1)OR(rt0.c1)))OR(vt0.c2)) AS BLOB)) ISNULL)) GROUP BY rt0.c2, rt0.c3, vt0.c1, t1.c51, rt0.c4, vt0.c2, vt0.c0, rt0.c0, vt1.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c3, vt0.c1, t1.c51, rt0.c4, vt0.c2, vt0.c0, rt0.c0, vt1.c0, rt0.c1 FROM t1, rt0, vt1, vt0 GROUP BY rt0.c2, rt0.c3, vt0.c1, t1.c51, rt0.c4, vt0.c2, vt0.c0, rt0.c0, vt1.c0, rt0.c1;
SELECT rt0.c3, rt0.c0, t1.c51 FROM rt0, vt1, t1 GROUP BY rt0.c3, rt0.c0, t1.c51;
SELECT ALL rt0.c3, rt0.c0, t1.c51 FROM rt0, vt1, t1 GROUP BY rt0.c3, rt0.c0, t1.c51 HAVING COUNT(COUNT(MAX(rt0.c3))) UNION ALL SELECT rt0.c3, rt0.c0, t1.c51 FROM rt0, vt1, t1 GROUP BY rt0.c3, rt0.c0, t1.c51 HAVING (NOT (COUNT(COUNT(MAX(rt0.c3))))) UNION ALL SELECT ALL rt0.c3, rt0.c0, t1.c51 FROM rt0, vt1, t1 GROUP BY rt0.c3, rt0.c0, t1.c51 HAVING ((COUNT(COUNT(MAX(rt0.c3)))) ISNULL);
SELECT ALL * FROM vt1, vt0;
SELECT ALL * FROM vt1, vt0 WHERE ((((vt1.c0)) BETWEEN ((vt0.c1)) AND (((((vt0.c1))==((vt0.c2))))))) UNION ALL SELECT ALL * FROM vt1, vt0 WHERE ((NOT ((((vt1.c0)) BETWEEN ((vt0.c1)) AND (((((vt0.c1))=((vt0.c2))))))))) UNION ALL SELECT * FROM vt1, vt0 WHERE ((((((vt1.c0)) BETWEEN ((vt0.c1)) AND (((((vt0.c1))=((vt0.c2))))))) ISNULL));
SELECT ALL * FROM vt1, vt0;
SELECT DISTINCT rt0.c3, rt0.c4, t1.c51, rt0.c2, vt0.c1, vt0.c2 FROM vt1, rt0, vt0, t1;
SELECT DISTINCT rt0.c3, rt0.c4, t1.c51, rt0.c2, vt0.c1, vt0.c2 FROM vt1, rt0, vt0, t1 WHERE ((((((vt1.c0))>((rt0.c0))))+(((rt0.c4) BETWEEN (rt0.c3) AND (vt1.c0))))) UNION SELECT DISTINCT rt0.c3, rt0.c4, t1.c51, rt0.c2, vt0.c1, vt0.c2 FROM vt1, rt0, vt0, t1 WHERE ((NOT ((((((vt1.c0))>((rt0.c0))))+(((rt0.c4) BETWEEN (rt0.c3) AND (vt1.c0))))))) UNION SELECT DISTINCT rt0.c3, rt0.c4, t1.c51, rt0.c2, vt0.c1, vt0.c2 FROM vt1, rt0, vt0, t1 WHERE ((((((((vt1.c0))>((rt0.c0))))+(((rt0.c4) BETWEEN (rt0.c3) AND (vt1.c0))))) ISNULL));
SELECT DISTINCT rt0.c3, rt0.c4, t1.c51, rt0.c2, vt0.c1, vt0.c2 FROM vt1, rt0, vt0, t1;
SELECT ALL t1.c51 FROM t1 GROUP BY t1.c51;
SELECT ALL t1.c51 FROM t1 WHERE ('1455638968') GROUP BY t1.c51 UNION SELECT t1.c51 FROM t1 WHERE ((NOT ('1455638968'))) GROUP BY t1.c51 UNION SELECT t1.c51 FROM t1 WHERE ((('1455638968') ISNULL)) GROUP BY t1.c51;
SELECT ALL t1.c51 FROM t1 GROUP BY t1.c51;
SELECT rt0.c2, rt0.c3, rt0.c1, vt0.c0 FROM t1, vt1, vt0, rt0 GROUP BY rt0.c2, rt0.c3, rt0.c1, vt0.c0;
SELECT rt0.c2, rt0.c3, rt0.c1, vt0.c0 FROM t1, vt1, vt0, rt0 GROUP BY rt0.c2, rt0.c3, rt0.c1, vt0.c0 HAVING AVG(GROUP_CONCAT(rt0.c1)) UNION ALL SELECT ALL rt0.c2, rt0.c3, rt0.c1, vt0.c0 FROM t1, vt1, vt0, rt0 GROUP BY rt0.c2, rt0.c3, rt0.c1, vt0.c0 HAVING (NOT (AVG(GROUP_CONCAT(rt0.c1)))) UNION ALL SELECT rt0.c2, rt0.c3, rt0.c1, vt0.c0 FROM t1, vt1, vt0, rt0 GROUP BY rt0.c2, rt0.c3, rt0.c1, vt0.c0 HAVING ((AVG(GROUP_CONCAT(rt0.c1))) ISNULL);
SELECT MIN((+ (CASE vt1.c0  WHEN t1.c51 THEN vt1.c0 WHEN t1.c51 THEN t1.c51 WHEN t1.c51 THEN t1.c51 WHEN t1.c51 THEN t1.c51 WHEN NULL THEN t1.c51 ELSE t1.c51 END))) FROM t1, vt1 ORDER BY CASE WHEN LIKELY(t1.c51) THEN ((')Nl''D\nvp')>=(t1.c51)) END ASC  NULLS LAST;
SELECT ALL vt1.c0 FROM vt1;
SELECT vt1.c0 FROM vt1 WHERE (CASE CAST(vt1.c0 AS INTEGER)  WHEN (~ (vt1.c0)) THEN SQLITE_COMPILEOPTION_USED(vt1.c0) ELSE ((vt1.c0)IS(NULL)) END) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (CASE CAST(vt1.c0 AS INTEGER)  WHEN (~ (vt1.c0)) THEN SQLITE_COMPILEOPTION_USED(vt1.c0) ELSE ((vt1.c0)IS(NULL)) END))) UNION ALL SELECT vt1.c0 FROM vt1 WHERE (((CASE CAST(vt1.c0 AS INTEGER)  WHEN (~ (vt1.c0)) THEN SQLITE_COMPILEOPTION_USED(vt1.c0) ELSE ((vt1.c0)IS(NULL)) END) ISNULL));
SELECT ALL vt1.c0 FROM vt1;
SELECT DISTINCT * FROM t1;
SELECT DISTINCT * FROM t1 WHERE (((((x'92d7')IS NOT(t1.c51)))>=(t1.c51 COLLATE BINARY))) UNION SELECT DISTINCT * FROM t1 WHERE ((NOT (((((x'92d7')IS NOT(t1.c51)))>=(t1.c51 COLLATE BINARY))))) UNION SELECT DISTINCT * FROM t1 WHERE (((((((x'92d7')IS NOT(t1.c51)))>=(t1.c51 COLLATE BINARY))) ISNULL));
SELECT DISTINCT * FROM t1;
SELECT t1.c51 FROM t1 GROUP BY t1.c51;
SELECT t1.c51 FROM t1 WHERE ((((((('1859107678')<<(t1.c51)))AND(((t1.c51) NOT BETWEEN (NULL) AND (t1.c51)))))OR(t1.c51))) GROUP BY t1.c51 UNION SELECT t1.c51 FROM t1 WHERE ((NOT ((((((('1859107678')<<(t1.c51)))AND(((t1.c51) NOT BETWEEN (NULL) AND (t1.c51)))))OR(t1.c51))))) GROUP BY t1.c51 UNION SELECT t1.c51 FROM t1 WHERE ((((((((('1859107678')<<(t1.c51)))AND(((t1.c51) NOT BETWEEN (NULL) AND (t1.c51)))))OR(t1.c51))) ISNULL)) GROUP BY t1.c51;
SELECT t1.c51 FROM t1 GROUP BY t1.c51;
SELECT ALL vt1.c0, t1.c51 FROM vt1, vt0, t1 GROUP BY vt1.c0, t1.c51;
SELECT vt1.c0, t1.c51 FROM vt1, vt0, t1 GROUP BY vt1.c0, t1.c51 HAVING ((MAX(COUNT(*)))|(AVG(vt1.c0))) UNION ALL SELECT vt1.c0, t1.c51 FROM vt1, vt0, t1 GROUP BY vt1.c0, t1.c51 HAVING (NOT (((MAX(COUNT(*)))|(AVG(vt1.c0))))) UNION ALL SELECT ALL vt1.c0, t1.c51 FROM vt1, vt0, t1 GROUP BY vt1.c0, t1.c51 HAVING ((((MAX(COUNT(*)))|(AVG(vt1.c0)))) ISNULL);
SELECT ALL * FROM vt0, t1, rt0, vt1;
SELECT * FROM vt0, t1, rt0, vt1 WHERE (((((NULL)IS NOT(rt0.c0)))-(((vt0.c2)>>(t1.c51))))) UNION ALL SELECT * FROM vt0, t1, rt0, vt1 WHERE ((NOT (((((NULL)IS NOT(rt0.c0)))-(((vt0.c2)>>(t1.c51))))))) UNION ALL SELECT * FROM vt0, t1, rt0, vt1 WHERE (((((((NULL)IS NOT(rt0.c0)))-(((vt0.c2)>>(t1.c51))))) ISNULL));
SELECT ALL * FROM vt0, t1, rt0, vt1;
SELECT DISTINCT rt0.c4, rt0.c3, vt0.c2, rt0.c0, vt1.c0, vt0.c1 FROM vt1, rt0, vt0, t1 NOT INDEXED;
SELECT DISTINCT rt0.c4, rt0.c3, vt0.c2, rt0.c0, vt1.c0, vt0.c1 FROM vt1, rt0, vt0, t1 WHERE ((rt0.c3 IN ())) UNION SELECT DISTINCT rt0.c4, rt0.c3, vt0.c2, rt0.c0, vt1.c0, vt0.c1 FROM vt1, rt0, vt0, t1 WHERE ((NOT ((rt0.c3 IN ())))) UNION SELECT DISTINCT rt0.c4, rt0.c3, vt0.c2, rt0.c0, vt1.c0, vt0.c1 FROM vt1, rt0, vt0, t1 WHERE ((((rt0.c3 IN ())) ISNULL));
SELECT DISTINCT rt0.c4, rt0.c3, vt0.c2, rt0.c0, vt1.c0, vt0.c1 FROM vt1, rt0, vt0, t1 NOT INDEXED;
SELECT ALL rt0.c3 FROM t1 INNER JOIN vt0 ON ((((((rt0.c0)OR(rt0.c0)))AND(rt0.c0)))||(CASE vt0.c1  WHEN vt0.c2 THEN 0.06202360463173451 ELSE rt0.c1 END)) INNER JOIN rt0 ON ((((vt0.c2)<<(rt0.c1))) IS FALSE) GROUP BY rt0.c3;
SELECT ALL rt0.c3 FROM t1 NOT INDEXED INNER JOIN vt0 ON ((((((rt0.c0)OR(rt0.c0)))AND(rt0.c0)))||(CASE vt0.c1  WHEN vt0.c2 THEN 0.06202360463173451 ELSE rt0.c1 END)) INNER JOIN rt0 ON ((((vt0.c2)<<(rt0.c1))) IS FALSE) WHERE ((((rt0.c4 IN ())) NOTNULL)) GROUP BY rt0.c3 UNION SELECT ALL rt0.c3 FROM t1 INNER JOIN vt0 ON ((((((rt0.c0)OR(rt0.c0)))AND(rt0.c0)))||(CASE vt0.c1  WHEN vt0.c2 THEN 0.06202360463173451 ELSE rt0.c1 END)) INNER JOIN rt0 ON ((((vt0.c2)<<(rt0.c1))) IS FALSE) WHERE ((NOT ((((rt0.c4 IN ())) NOTNULL)))) GROUP BY rt0.c3 UNION SELECT ALL rt0.c3 FROM t1 INNER JOIN vt0 ON ((((((rt0.c0)OR(rt0.c0)))AND(rt0.c0)))||(CASE vt0.c1  WHEN vt0.c2 THEN 0.06202360463173451 ELSE rt0.c1 END)) INNER JOIN rt0 ON ((((vt0.c2)<<(rt0.c1))) IS FALSE) WHERE ((((((rt0.c4 IN ())) NOTNULL)) ISNULL)) GROUP BY rt0.c3;
SELECT ALL rt0.c3 FROM t1 INNER JOIN vt0 ON ((((((rt0.c0)OR(rt0.c0)))AND(rt0.c0)))||(CASE vt0.c1  WHEN vt0.c2 THEN 0.06202360463173451 ELSE rt0.c1 END)) INNER JOIN rt0 ON ((((vt0.c2)<<(rt0.c1))) IS FALSE) GROUP BY rt0.c3;
SELECT ALL vt1.c0, vt0.c1 FROM vt0, vt1 CROSS JOIN t1 ON (((((((t1.c51)OR(vt1.c0)))OR(vt0.c2))))<>((0Xfffffffff69f71b9))) GROUP BY vt1.c0, vt0.c1;
SELECT ALL vt1.c0, vt0.c1 FROM vt0, vt1 CROSS JOIN t1 ON (((((((t1.c51)OR(vt1.c0)))OR(vt0.c2))))!=((0xfffffffff69f71b9))) GROUP BY vt1.c0, vt0.c1 HAVING ((((t1.c51)IS NOT(vt0.c0)))-(GROUP_CONCAT(SUM(vt0.c2)))) UNION ALL SELECT ALL vt1.c0, vt0.c1 FROM vt0, vt1 CROSS JOIN t1 ON (((((((t1.c51)OR(vt1.c0)))OR(vt0.c2))))!=((0Xfffffffff69f71b9))) GROUP BY vt1.c0, vt0.c1 HAVING (NOT (((((t1.c51)IS NOT(vt0.c0)))-(GROUP_CONCAT(SUM(vt0.c2)))))) UNION ALL SELECT vt1.c0, vt0.c1 FROM vt0, vt1 CROSS JOIN t1 ON (((((((t1.c51)OR(vt1.c0)))OR(vt0.c2))))<>((0xfffffffff69f71b9))) GROUP BY vt1.c0, vt0.c1 HAVING ((((((t1.c51)IS NOT(vt0.c0)))-(GROUP_CONCAT(SUM(vt0.c2))))) ISNULL);
SELECT ALL MAX((NOT ((((vt0.c1))<=((vt0.c0)))))) FROM vt1, rt0, vt0 ORDER BY CAST(vt1.c0 AS REAL) DESC;
SELECT rt0.c2, rt0.c4, vt0.c0, t1.c51, vt0.c2, rt0.c3, rt0.c0, vt1.c0, vt0.c1, rt0.c1 FROM vt0, vt1 FULL OUTER JOIN t1 ON ((((vt1.c0)<<(vt0.c0))) ISNULL) FULL OUTER JOIN rt0 ON (((~ (rt0.c4)))+(CASE WHEN rt0.c2 THEN vt0.c2 END));
SELECT rt0.c2, rt0.c4, vt0.c0, t1.c51, vt0.c2, rt0.c3, rt0.c0, vt1.c0, vt0.c1, rt0.c1 FROM vt0, vt1 FULL OUTER JOIN t1 ON ((((vt1.c0)<<(vt0.c0))) ISNULL) FULL OUTER JOIN rt0 ON (((~ (rt0.c4)))+(CASE WHEN rt0.c2 THEN vt0.c2 END)) WHERE (((((rt0.c0)<(rt0.c1)))<<(((vt0.c2)<(vt0.c1))))) UNION ALL SELECT ALL rt0.c2, rt0.c4, vt0.c0, t1.c51, vt0.c2, rt0.c3, rt0.c0, vt1.c0, vt0.c1, rt0.c1 FROM vt0, vt1 FULL OUTER JOIN t1 ON ((((vt1.c0)<<(vt0.c0))) ISNULL) FULL OUTER JOIN rt0 ON (((~ (rt0.c4)))+(CASE WHEN rt0.c2 THEN vt0.c2 END)) WHERE ((NOT (((((rt0.c0)<(rt0.c1)))<<(((vt0.c2)<(vt0.c1))))))) UNION ALL SELECT ALL rt0.c2, rt0.c4, vt0.c0, t1.c51, vt0.c2, rt0.c3, rt0.c0, vt1.c0, vt0.c1, rt0.c1 FROM vt0, vt1 FULL OUTER JOIN t1 ON ((((vt1.c0)<<(vt0.c0))) ISNULL) FULL OUTER JOIN rt0 ON (((~ (rt0.c4)))+(CASE WHEN rt0.c2 THEN vt0.c2 END)) WHERE (((((((rt0.c0)<(rt0.c1)))<<(((vt0.c2)<(vt0.c1))))) ISNULL));
SELECT rt0.c2, rt0.c4, vt0.c0, t1.c51, vt0.c2, rt0.c3, rt0.c0, vt1.c0, vt0.c1, rt0.c1 FROM vt0, vt1 FULL OUTER JOIN t1 ON ((((vt1.c0)<<(vt0.c0))) ISNULL) FULL OUTER JOIN rt0 ON (((~ (rt0.c4)))+(CASE WHEN rt0.c2 THEN vt0.c2 END));
SELECT DISTINCT t1.c51 FROM t1;
SELECT DISTINCT t1.c51 FROM t1 WHERE (CASE (NOT (t1.c51))  WHEN CASE WHEN t1.c51 THEN t1.c51 END THEN ((((t1.c51)AND(t1.c51)))OR(NULL)) ELSE CASE WHEN t1.c51 THEN t1.c51 END END) UNION SELECT DISTINCT t1.c51 FROM t1 WHERE ((NOT (CASE (NOT (t1.c51))  WHEN CASE WHEN t1.c51 THEN t1.c51 END THEN ((((t1.c51)AND(t1.c51)))OR(NULL)) ELSE CASE WHEN t1.c51 THEN t1.c51 END END))) UNION SELECT DISTINCT t1.c51 FROM t1 NOT INDEXED WHERE (((CASE (NOT (t1.c51))  WHEN CASE WHEN t1.c51 THEN t1.c51 END THEN ((((t1.c51)AND(t1.c51)))OR(NULL)) ELSE CASE WHEN t1.c51 THEN t1.c51 END END) ISNULL));
SELECT DISTINCT t1.c51 FROM t1;
SELECT ALL vt1.c0, rt0.c2, vt0.c0, vt0.c2, rt0.c4 FROM vt0, vt1, t1, rt0 GROUP BY vt1.c0, rt0.c2, vt0.c0, vt0.c2, rt0.c4;
SELECT vt1.c0, rt0.c2, vt0.c0, vt0.c2, rt0.c4 FROM vt0, vt1, t1, rt0 WHERE (((rt0.c3) IS FALSE)) GROUP BY vt1.c0, rt0.c2, vt0.c0, vt0.c2, rt0.c4 UNION SELECT ALL vt1.c0, rt0.c2, vt0.c0, vt0.c2, rt0.c4 FROM vt0, vt1, t1, rt0 WHERE ((NOT (((rt0.c3) IS FALSE)))) GROUP BY vt1.c0, rt0.c2, vt0.c0, vt0.c2, rt0.c4 UNION SELECT vt1.c0, rt0.c2, vt0.c0, vt0.c2, rt0.c4 FROM vt0, vt1, t1, rt0 WHERE (((((rt0.c3) IS FALSE)) ISNULL)) GROUP BY vt1.c0, rt0.c2, vt0.c0, vt0.c2, rt0.c4;
SELECT ALL vt1.c0, rt0.c2, vt0.c0, vt0.c2, rt0.c4 FROM vt0, vt1, t1, rt0 GROUP BY vt1.c0, rt0.c2, vt0.c0, vt0.c2, rt0.c4;
SELECT vt1.c0, rt0.c1, rt0.c3, rt0.c2, rt0.c4 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c1, rt0.c3, rt0.c2, rt0.c4;
SELECT ALL vt1.c0, rt0.c1, rt0.c3, rt0.c2, rt0.c4 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c1, rt0.c3, rt0.c2, rt0.c4 HAVING ((((((AVG(rt0.c4))AND(COUNT(rt0.c0))))OR(vt1.c0)))|(COUNT(TOTAL(rt0.c4)))) UNION ALL SELECT ALL vt1.c0, rt0.c1, rt0.c3, rt0.c2, rt0.c4 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c1, rt0.c3, rt0.c2, rt0.c4 HAVING (NOT (((((((AVG(rt0.c4))AND(COUNT(rt0.c0))))OR(vt1.c0)))|(COUNT(TOTAL(rt0.c4)))))) UNION ALL SELECT ALL vt1.c0, rt0.c1, rt0.c3, rt0.c2, rt0.c4 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c1, rt0.c3, rt0.c2, rt0.c4 HAVING ((((((((AVG(rt0.c4))AND(COUNT(rt0.c0))))OR(vt1.c0)))|(COUNT(TOTAL(rt0.c4))))) ISNULL);
SELECT vt1.c0, vt0.c2 FROM vt1, t1 FULL OUTER JOIN vt0 ON 'JF';
SELECT ALL vt1.c0, vt0.c2 FROM vt1, t1 FULL OUTER JOIN vt0 ON 'JF' WHERE (((vt1.c0) IS TRUE)) UNION ALL SELECT vt1.c0, vt0.c2 FROM vt1, t1 FULL OUTER JOIN vt0 ON 'JF' WHERE ((NOT (((vt1.c0) IS TRUE)))) UNION ALL SELECT ALL vt1.c0, vt0.c2 FROM vt1, t1 FULL OUTER JOIN vt0 ON 'JF' WHERE (((((vt1.c0) IS TRUE)) ISNULL));
SELECT vt1.c0, vt0.c2 FROM vt1, t1 FULL OUTER JOIN vt0 ON 'JF';
SELECT DISTINCT * FROM t1, rt0 INNER JOIN vt0 ON (((((rt0.c3)OR(vt1.c0)))OR(t1.c51)) IN (rt0.c0 COLLATE RTRIM)) CROSS JOIN vt1 ON rt0.c4;
SELECT DISTINCT * FROM t1, rt0 INNER JOIN vt0 ON (((((rt0.c3)OR(vt1.c0)))OR(t1.c51)) IN (rt0.c0 COLLATE RTRIM)) CROSS JOIN vt1 ON rt0.c4 WHERE ((~ ((('XBxO/+\rm') IS FALSE)))) UNION SELECT DISTINCT * FROM t1, rt0 INNER JOIN vt0 ON (((((rt0.c3)OR(vt1.c0)))OR(t1.c51)) IN (rt0.c0 COLLATE RTRIM)) CROSS JOIN vt1 ON rt0.c4 WHERE ((NOT ((~ ((('XBxO/+\rm') IS FALSE)))))) UNION SELECT DISTINCT * FROM t1, rt0 INNER JOIN vt0 ON (((((rt0.c3)OR(vt1.c0)))OR(t1.c51)) IN (rt0.c0 COLLATE RTRIM)) CROSS JOIN vt1 ON rt0.c4 WHERE ((((~ ((('XBxO/+\rm') IS FALSE)))) ISNULL));
SELECT DISTINCT * FROM t1, rt0 INNER JOIN vt0 ON (((((rt0.c3)OR(vt1.c0)))OR(t1.c51)) IN (rt0.c0 COLLATE RTRIM)) CROSS JOIN vt1 ON rt0.c4;
SELECT ALL vt0.c2, vt0.c0, rt0.c3 FROM vt0, vt1 LEFT OUTER JOIN t1 ON (((NOT (vt1.c0)))*(rt0.c2)) FULL OUTER JOIN rt0 ON vt0.c1 GROUP BY vt0.c2, vt0.c0, rt0.c3;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING CASE ((vt1.c0) IS FALSE)  WHEN (vt1.c0 IN ()) THEN MAX(vt1.c0) ELSE ((vt1.c0) ISNULL) END UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (CASE ((vt1.c0) IS FALSE)  WHEN (vt1.c0 IN ()) THEN MAX(vt1.c0) ELSE ((vt1.c0) ISNULL) END)) UNION ALL SELECT vt1.c0 FROM vt1 NOT INDEXED GROUP BY vt1.c0 HAVING ((CASE ((vt1.c0) IS FALSE)  WHEN (vt1.c0 IN ()) THEN MAX(vt1.c0) ELSE ((vt1.c0) ISNULL) END) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING CASE ((vt1.c0) IS FALSE)  WHEN (vt1.c0 IN ()) THEN MAX(vt1.c0) ELSE ((vt1.c0) ISNULL) END UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (CASE ((vt1.c0) IS FALSE)  WHEN (vt1.c0 IN ()) THEN MAX(vt1.c0) ELSE ((vt1.c0) ISNULL) END)) UNION ALL SELECT vt1.c0 FROM vt1 NOT INDEXED GROUP BY vt1.c0 HAVING ((CASE ((vt1.c0) IS FALSE)  WHEN (vt1.c0 IN ()) THEN MAX(vt1.c0) ELSE ((vt1.c0) ISNULL) END) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt0.c1, rt0.c3 FROM vt0, rt0, vt1;
SELECT vt0.c1, rt0.c3 FROM vt0, rt0, vt1 WHERE (CASE (((rt0.c3)) BETWEEN ((rt0.c0)) AND ((vt1.c0)))  WHEN (((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND (('-8542899'))) THEN CASE rt0.c2  WHEN rt0.c2 THEN 0.5423911769040718 END WHEN rt0.c4 THEN ((vt1.c0) NOTNULL) WHEN (NOT (rt0.c0)) THEN ((rt0.c2) NOT BETWEEN (rt0.c0) AND (vt0.c0)) ELSE (((vt0.c2)) BETWEEN ((vt1.c0)) AND ((rt0.c3))) END) UNION ALL SELECT vt0.c1, rt0.c3 FROM vt0, rt0, vt1 WHERE ((NOT (CASE (((rt0.c3)) BETWEEN ((rt0.c0)) AND ((vt1.c0)))  WHEN (((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND (('-8542899'))) THEN CASE rt0.c2  WHEN rt0.c2 THEN 0.5423911769040718 END WHEN rt0.c4 THEN ((vt1.c0) NOTNULL) WHEN (NOT (rt0.c0)) THEN ((rt0.c2) NOT BETWEEN (rt0.c0) AND (vt0.c0)) ELSE (((vt0.c2)) BETWEEN ((vt1.c0)) AND ((rt0.c3))) END))) UNION ALL SELECT vt0.c1, rt0.c3 FROM vt0, rt0, vt1 WHERE (((CASE (((rt0.c3)) BETWEEN ((rt0.c0)) AND ((vt1.c0)))  WHEN (((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND (('-8542899'))) THEN CASE rt0.c2  WHEN rt0.c2 THEN 0.5423911769040718 END WHEN rt0.c4 THEN ((vt1.c0) NOTNULL) WHEN (NOT (rt0.c0)) THEN ((rt0.c2) NOT BETWEEN (rt0.c0) AND (vt0.c0)) ELSE (((vt0.c2)) BETWEEN ((vt1.c0)) AND ((rt0.c3))) END) ISNULL));
SELECT vt0.c1, rt0.c3 FROM vt0, rt0, vt1;
SELECT DISTINCT rt0.c3, rt0.c4, rt0.c1, vt0.c2 FROM vt0, t1 CROSS JOIN vt1 ON ((CAST(vt0.c2 AS REAL)) ISNULL) RIGHT OUTER JOIN rt0 ON UPPER(DISTINCT ((vt1.c0)GLOB(rt0.c0)));
SELECT DISTINCT rt0.c3, rt0.c4, rt0.c1, vt0.c2 FROM vt0, t1 CROSS JOIN vt1 ON ((CAST(vt0.c2 AS REAL)) ISNULL) RIGHT OUTER JOIN rt0 ON UPPER(DISTINCT ((vt1.c0)GLOB(rt0.c0))) WHERE (x'') UNION SELECT DISTINCT rt0.c3, rt0.c4, rt0.c1, vt0.c2 FROM vt0, t1 CROSS JOIN vt1 ON ((CAST(vt0.c2 AS REAL)) ISNULL) RIGHT OUTER JOIN rt0 ON UPPER(DISTINCT ((vt1.c0)GLOB(rt0.c0))) WHERE ((NOT (x''))) UNION SELECT DISTINCT rt0.c3, rt0.c4, rt0.c1, vt0.c2 FROM vt0, t1 CROSS JOIN vt1 ON ((CAST(vt0.c2 AS REAL)) ISNULL) RIGHT OUTER JOIN rt0 ON UPPER(DISTINCT ((vt1.c0)GLOB(rt0.c0))) WHERE (((x'') ISNULL));
SELECT DISTINCT rt0.c3, rt0.c4, rt0.c1, vt0.c2 FROM vt0, t1 CROSS JOIN vt1 ON ((CAST(vt0.c2 AS REAL)) ISNULL) RIGHT OUTER JOIN rt0 ON UPPER(DISTINCT ((vt1.c0)GLOB(rt0.c0)));
SELECT t1.c51, rt0.c2, rt0.c4, rt0.c1, rt0.c3 FROM rt0, t1, vt1 GROUP BY t1.c51, rt0.c2, rt0.c4, rt0.c1, rt0.c3;
SELECT ALL t1.c51, rt0.c2, rt0.c4, rt0.c1, rt0.c3 FROM rt0 NOT INDEXED, t1, vt1 WHERE (CAST(((vt1.c0) IS TRUE) AS INTEGER)) GROUP BY t1.c51, rt0.c2, rt0.c4, rt0.c1, rt0.c3 UNION SELECT ALL t1.c51, rt0.c2, rt0.c4, rt0.c1, rt0.c3 FROM rt0, t1, vt1 WHERE ((NOT (CAST(((vt1.c0) IS TRUE) AS INTEGER)))) GROUP BY t1.c51, rt0.c2, rt0.c4, rt0.c1, rt0.c3 UNION SELECT ALL t1.c51, rt0.c2, rt0.c4, rt0.c1, rt0.c3 FROM rt0, t1, vt1 WHERE (((CAST(((vt1.c0) IS TRUE) AS INTEGER)) ISNULL)) GROUP BY t1.c51, rt0.c2, rt0.c4, rt0.c1, rt0.c3;
SELECT t1.c51, rt0.c2, rt0.c4, rt0.c1, rt0.c3 FROM rt0, t1, vt1 GROUP BY t1.c51, rt0.c2, rt0.c4, rt0.c1, rt0.c3;
SELECT ALL t1.c51 FROM t1 GROUP BY t1.c51;
SELECT t1.c51 FROM t1 GROUP BY t1.c51 HAVING TYPEOF(DISTINCT MIN(TOTAL(t1.c51))) UNION ALL SELECT ALL t1.c51 FROM t1 GROUP BY t1.c51 HAVING (NOT (TYPEOF(DISTINCT MIN(TOTAL(t1.c51))))) UNION ALL SELECT t1.c51 FROM t1 GROUP BY t1.c51 HAVING ((TYPEOF(DISTINCT MIN(TOTAL(t1.c51)))) ISNULL);
SELECT * FROM t1, rt0, vt1;
SELECT ALL * FROM t1, rt0, vt1 WHERE (rt0.c4) UNION ALL SELECT ALL * FROM t1, rt0, vt1 WHERE ((NOT (rt0.c4))) UNION ALL SELECT * FROM t1, rt0, vt1 WHERE (((rt0.c4) ISNULL));
SELECT * FROM t1, rt0, vt1;
SELECT DISTINCT * FROM t1, rt0 CROSS JOIN vt1 ON NULL;
SELECT DISTINCT * FROM t1, rt0 CROSS JOIN vt1 ON NULL WHERE (CASE WHEN CASE WHEN rt0.c3 THEN rt0.c1 END THEN NULL COLLATE BINARY ELSE CASE rt0.c1  WHEN x'' THEN vt1.c0 END END) UNION SELECT DISTINCT * FROM t1, rt0 CROSS JOIN vt1 ON NULL WHERE ((NOT (CASE WHEN CASE WHEN rt0.c3 THEN rt0.c1 END THEN NULL COLLATE BINARY ELSE CASE rt0.c1  WHEN x'' THEN vt1.c0 END END))) UNION SELECT DISTINCT * FROM t1, rt0 CROSS JOIN vt1 ON NULL WHERE (((CASE WHEN CASE WHEN rt0.c3 THEN rt0.c1 END THEN NULL COLLATE BINARY ELSE CASE rt0.c1  WHEN x'' THEN vt1.c0 END END) ISNULL));
SELECT DISTINCT * FROM t1, rt0 CROSS JOIN vt1 ON NULL;
SELECT ALL vt0.c2, rt0.c2, rt0.c3, rt0.c0, rt0.c1 FROM t1, rt0, vt1, vt0 GROUP BY vt0.c2, rt0.c2, rt0.c3, rt0.c0, rt0.c1;
SELECT ALL vt0.c2, rt0.c2, rt0.c3, rt0.c0, rt0.c1 FROM t1, rt0, vt1, vt0 WHERE ((((CAST(rt0.c0 AS BLOB)))<=(((t1.c51 IN (rt0.c4)))))) GROUP BY vt0.c2, rt0.c2, rt0.c3, rt0.c0, rt0.c1 UNION SELECT ALL vt0.c2, rt0.c2, rt0.c3, rt0.c0, rt0.c1 FROM t1, rt0, vt1, vt0 WHERE ((NOT ((((CAST(rt0.c0 AS BLOB)))<=(((t1.c51 IN (rt0.c4)))))))) GROUP BY vt0.c2, rt0.c2, rt0.c3, rt0.c0, rt0.c1 UNION SELECT ALL vt0.c2, rt0.c2, rt0.c3, rt0.c0, rt0.c1 FROM t1, rt0, vt1, vt0 WHERE ((((((CAST(rt0.c0 AS BLOB)))<=(((t1.c51 IN (rt0.c4)))))) ISNULL)) GROUP BY vt0.c2, rt0.c2, rt0.c3, rt0.c0, rt0.c1;
SELECT ALL vt0.c2, rt0.c2, rt0.c3, rt0.c0, rt0.c1 FROM t1, rt0, vt1, vt0 GROUP BY vt0.c2, rt0.c2, rt0.c3, rt0.c0, rt0.c1;
SELECT ALL vt0.c0, vt0.c2 FROM t1, rt0, vt1, vt0 GROUP BY vt0.c0, vt0.c2;
SELECT vt0.c0, vt0.c2 FROM t1, rt0, vt1, vt0 GROUP BY vt0.c0, vt0.c2 HAVING SUM(((rt0.c0)>=(vt0.c2))) UNION ALL SELECT ALL vt0.c0, vt0.c2 FROM t1, rt0, vt1, vt0 GROUP BY vt0.c0, vt0.c2 HAVING (NOT (SUM(((rt0.c0)>=(vt0.c2))))) UNION ALL SELECT vt0.c0, vt0.c2 FROM t1, rt0, vt1, vt0 GROUP BY vt0.c0, vt0.c2 HAVING ((SUM(((rt0.c0)>=(vt0.c2)))) ISNULL);
SELECT ALL vt0.c0, vt0.c2 FROM t1, rt0, vt1, vt0 GROUP BY vt0.c0, vt0.c2;
SELECT vt0.c0, vt0.c2 FROM t1, rt0, vt1, vt0 GROUP BY vt0.c0, vt0.c2 HAVING SUM(((rt0.c0)>=(vt0.c2))) UNION ALL SELECT ALL vt0.c0, vt0.c2 FROM t1, rt0, vt1, vt0 GROUP BY vt0.c0, vt0.c2 HAVING (NOT (SUM(((rt0.c0)>=(vt0.c2))))) UNION ALL SELECT vt0.c0, vt0.c2 FROM t1, rt0, vt1, vt0 GROUP BY vt0.c0, vt0.c2 HAVING ((SUM(((rt0.c0)>=(vt0.c2)))) ISNULL);
SELECT ALL vt0.c0, vt0.c2 FROM t1, rt0, vt1, vt0 GROUP BY vt0.c0, vt0.c2;
SELECT rt0.c2, t1.c51, rt0.c0 FROM vt1, t1, rt0 NOT INDEXED;
SELECT rt0.c2, t1.c51, rt0.c0 FROM vt1, t1, rt0 WHERE (((t1.c51)IS(rt0.c1)) COLLATE BINARY) UNION ALL SELECT rt0.c2, t1.c51, rt0.c0 FROM vt1, t1, rt0 WHERE ((NOT (((t1.c51)IS(rt0.c1)) COLLATE BINARY))) UNION ALL SELECT rt0.c2, t1.c51, rt0.c0 FROM vt1, t1, rt0 WHERE (((((t1.c51)IS(rt0.c1)) COLLATE BINARY) ISNULL));
SELECT rt0.c2, t1.c51, rt0.c0 FROM vt1, t1, rt0 NOT INDEXED;
SELECT DISTINCT * FROM rt0, t1, vt1, vt0;
SELECT DISTINCT * FROM rt0, t1, vt1, vt0 WHERE (CASE ((t1.c51)IS(rt0.c0))  WHEN ((rt0.c4)<=(vt0.c0)) THEN ((rt0.c4) NOT BETWEEN (vt1.c0) AND (rt0.c3)) END) UNION SELECT DISTINCT * FROM rt0, t1, vt1, vt0 WHERE ((NOT (CASE ((t1.c51)IS(rt0.c0))  WHEN ((rt0.c4)<=(vt0.c0)) THEN ((rt0.c4) NOT BETWEEN (vt1.c0) AND (rt0.c3)) END))) UNION SELECT DISTINCT * FROM rt0, t1, vt1, vt0 WHERE (((CASE ((t1.c51)IS(rt0.c0))  WHEN ((rt0.c4)<=(vt0.c0)) THEN ((rt0.c4) NOT BETWEEN (vt1.c0) AND (rt0.c3)) END) ISNULL));
SELECT DISTINCT * FROM rt0, t1, vt1, vt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (((vt0.c2)-(LIKELIHOOD(vt0.c0, 0.013490113910931023)))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (((vt0.c2)-(LIKELIHOOD(vt0.c0, 0.013490113910931023)))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((((vt0.c2)-(LIKELIHOOD(vt0.c0, 0.013490113910931023)))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c1, vt0.c0, rt0.c1, rt0.c0 FROM vt0, rt0, t1 GROUP BY vt0.c1, vt0.c0, rt0.c1, rt0.c0;
SELECT vt0.c1, vt0.c0, rt0.c1, rt0.c0 FROM vt0, rt0, t1 GROUP BY vt0.c1, vt0.c0, rt0.c1, rt0.c0 HAVING ((COUNT(COUNT(*)))OR(CASE WHEN TOTAL(rt0.c0) THEN vt0.c0 END)) UNION ALL SELECT vt0.c1, vt0.c0, rt0.c1, rt0.c0 FROM vt0, rt0, t1 GROUP BY vt0.c1, vt0.c0, rt0.c1, rt0.c0 HAVING (NOT (((COUNT(COUNT(*)))OR(CASE WHEN TOTAL(rt0.c0) THEN vt0.c0 END)))) UNION ALL SELECT vt0.c1, vt0.c0, rt0.c1, rt0.c0 FROM vt0, rt0, t1 GROUP BY vt0.c1, vt0.c0, rt0.c1, rt0.c0 HAVING ((((COUNT(COUNT(*)))OR(CASE WHEN TOTAL(rt0.c0) THEN vt0.c0 END))) ISNULL);
SELECT ALL * FROM rt0, vt0, t1;
SELECT ALL * FROM rt0, vt0, t1 WHERE ((((((((('1237368304')OR(((rt0.c0) IS TRUE))))OR(((vt0.c0) ISNULL))))AND(((vt0.c1)+(x'91d5')))))OR(((rt0.c0) BETWEEN (rt0.c3) AND (vt0.c1))))) UNION ALL SELECT ALL * FROM rt0, vt0, t1 WHERE ((NOT ((((((((('1237368304')OR(((rt0.c0) IS TRUE))))OR(((vt0.c0) ISNULL))))AND(((vt0.c1)+(x'91d5')))))OR(((rt0.c0) BETWEEN (rt0.c3) AND (vt0.c1))))))) UNION ALL SELECT * FROM rt0, vt0, t1 WHERE ((((((((((('1237368304')OR(((rt0.c0) IS TRUE))))OR(((vt0.c0) ISNULL))))AND(((vt0.c1)+(x'91d5')))))OR(((rt0.c0) BETWEEN (rt0.c3) AND (vt0.c1))))) ISNULL));
SELECT ALL * FROM rt0, vt0, t1;
SELECT DISTINCT * FROM vt0, vt1, t1;
SELECT DISTINCT * FROM vt0, vt1, t1 WHERE (((((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))-(CASE WHEN vt0.c1 THEN t1.c51 END))) UNION SELECT DISTINCT * FROM vt0, vt1, t1 WHERE ((NOT (((((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))-(CASE WHEN vt0.c1 THEN t1.c51 END))))) UNION SELECT DISTINCT * FROM vt0, vt1, t1 WHERE (((((((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))-(CASE WHEN vt0.c1 THEN t1.c51 END))) ISNULL));
SELECT DISTINCT * FROM vt0, vt1, t1;
SELECT ALL rt0.c0, vt0.c1, rt0.c2, t1.c51, vt1.c0, rt0.c1, rt0.c3, rt0.c4 FROM vt0, vt1, rt0, t1 GROUP BY rt0.c0, vt0.c1, rt0.c2, t1.c51, vt1.c0, rt0.c1, rt0.c3, rt0.c4;
SELECT rt0.c0, vt0.c1, rt0.c2, t1.c51, vt1.c0, rt0.c1, rt0.c3, rt0.c4 FROM vt0, vt1, rt0, t1 WHERE (((((vt0.c0)<(rt0.c0)))GLOB((NOT (vt0.c1))))) GROUP BY rt0.c0, vt0.c1, rt0.c2, t1.c51, vt1.c0, rt0.c1, rt0.c3, rt0.c4 UNION SELECT ALL rt0.c0, vt0.c1, rt0.c2, t1.c51, vt1.c0, rt0.c1, rt0.c3, rt0.c4 FROM vt0, vt1, rt0, t1 WHERE ((NOT (((((vt0.c0)<(rt0.c0)))GLOB((NOT (vt0.c1))))))) GROUP BY rt0.c0, vt0.c1, rt0.c2, t1.c51, vt1.c0, rt0.c1, rt0.c3, rt0.c4 UNION SELECT ALL rt0.c0, vt0.c1, rt0.c2, t1.c51, vt1.c0, rt0.c1, rt0.c3, rt0.c4 FROM vt0, vt1, rt0, t1 WHERE (((((((vt0.c0)<(rt0.c0)))GLOB((NOT (vt0.c1))))) ISNULL)) GROUP BY rt0.c0, vt0.c1, rt0.c2, t1.c51, vt1.c0, rt0.c1, rt0.c3, rt0.c4;
SELECT ALL rt0.c0, vt0.c1, rt0.c2, t1.c51, vt1.c0, rt0.c1, rt0.c3, rt0.c4 FROM vt0, vt1, rt0, t1 GROUP BY rt0.c0, vt0.c1, rt0.c2, t1.c51, vt1.c0, rt0.c1, rt0.c3, rt0.c4;
SELECT rt0.c2, rt0.c0, rt0.c3 FROM t1 CROSS JOIN vt1 ON CASE (((rt0.c0, rt0.c3, rt0.c0)) BETWEEN ((t1.c51, 0.5742362094818326, t1.c51)) AND ((rt0.c3, rt0.c1, NULL)))  WHEN ((t1.c51)IS(vt1.c0)) THEN rt0.c2 WHEN CAST(rt0.c0 AS NUMERIC) THEN (rt0.c4 IN (t1.c51, rt0.c1)) WHEN ((((rt0.c1)OR(1.455638968E9)))OR(rt0.c2)) THEN '2俉' ELSE (~ (rt0.c4)) END RIGHT OUTER JOIN rt0 ON IFNULL((t1.c51 IN ()), ((NULL)-(rt0.c2))) GROUP BY rt0.c2, rt0.c0, rt0.c3;
SELECT ALL vt0.c1 FROM vt0;
SELECT vt0.c1 FROM vt0 WHERE (CASE WHEN (vt0.c0 IN ()) THEN CAST(vt0.c2 AS BLOB) ELSE ((vt0.c0) ISNULL) END) UNION ALL SELECT vt0.c1 FROM vt0 WHERE ((NOT (CASE WHEN (vt0.c0 IN ()) THEN CAST(vt0.c2 AS BLOB) ELSE ((vt0.c0) ISNULL) END))) UNION ALL SELECT ALL vt0.c1 FROM vt0 WHERE (((CASE WHEN (vt0.c0 IN ()) THEN CAST(vt0.c2 AS BLOB) ELSE ((vt0.c0) ISNULL) END) ISNULL));
SELECT ALL vt0.c1 FROM vt0;
SELECT DISTINCT * FROM rt0, t1, vt0;
SELECT DISTINCT * FROM rt0, t1, vt0 WHERE (0.43625759553420496) UNION SELECT DISTINCT * FROM rt0, t1, vt0 WHERE ((NOT (0.43625759553420496))) UNION SELECT DISTINCT * FROM rt0, t1, vt0 WHERE (((0.43625759553420496) ISNULL));
SELECT DISTINCT * FROM rt0, t1, vt0;
SELECT ALL vt1.c0, rt0.c0 FROM t1, rt0, vt0, vt1 GROUP BY vt1.c0, rt0.c0;
SELECT vt1.c0, rt0.c0 FROM t1, rt0, vt0, vt1 WHERE ((((((rt0.c2) BETWEEN (vt0.c2) AND (rt0.c3))))!=(((((rt0.c0, t1.c51, rt0.c4)) BETWEEN ((rt0.c1, vt0.c0, rt0.c0)) AND ((NULL, vt0.c0, rt0.c4))))))) GROUP BY vt1.c0, rt0.c0 UNION SELECT vt1.c0, rt0.c0 FROM t1, rt0, vt0, vt1 WHERE ((NOT ((((((rt0.c2) BETWEEN (vt0.c2) AND (rt0.c3))))<>(((((rt0.c0, t1.c51, rt0.c4)) BETWEEN ((rt0.c1, vt0.c0, rt0.c0)) AND ((NULL, vt0.c0, rt0.c4))))))))) GROUP BY vt1.c0, rt0.c0 UNION SELECT vt1.c0, rt0.c0 FROM t1, rt0, vt0, vt1 WHERE ((((((((rt0.c2) BETWEEN (vt0.c2) AND (rt0.c3))))<>(((((rt0.c0, t1.c51, rt0.c4)) BETWEEN ((rt0.c1, vt0.c0, rt0.c0)) AND ((NULL, vt0.c0, rt0.c4))))))) ISNULL)) GROUP BY vt1.c0, rt0.c0;
SELECT ALL vt1.c0, rt0.c0 FROM t1, rt0, vt0, vt1 GROUP BY vt1.c0, rt0.c0;
SELECT vt0.c2, rt0.c1, t1.c51, rt0.c4, rt0.c0 FROM vt1, rt0, t1, vt0 GROUP BY vt0.c2, rt0.c1, t1.c51, rt0.c4, rt0.c0;
SELECT vt0.c2, rt0.c1, t1.c51, rt0.c4, rt0.c0 FROM vt1, rt0, t1, vt0 GROUP BY vt0.c2, rt0.c1, t1.c51, rt0.c4, rt0.c0 HAVING AVG(GROUP_CONCAT(COUNT(GROUP_CONCAT(MAX(rt0.c1))))) UNION ALL SELECT ALL vt0.c2, rt0.c1, t1.c51, rt0.c4, rt0.c0 FROM vt1, rt0, t1, vt0 GROUP BY vt0.c2, rt0.c1, t1.c51, rt0.c4, rt0.c0 HAVING (NOT (AVG(GROUP_CONCAT(COUNT(GROUP_CONCAT(MAX(rt0.c1))))))) UNION ALL SELECT ALL vt0.c2, rt0.c1, t1.c51, rt0.c4, rt0.c0 FROM vt1, rt0, t1, vt0 GROUP BY vt0.c2, rt0.c1, t1.c51, rt0.c4, rt0.c0 HAVING ((AVG(GROUP_CONCAT(COUNT(GROUP_CONCAT(MAX(rt0.c1)))))) ISNULL);
SELECT * FROM t1, vt1;
SELECT ALL * FROM t1, vt1 WHERE (((((((((CASE WHEN vt1.c0 THEN t1.c51 WHEN '-579838859' THEN 'dW' WHEN t1.c51 THEN vt1.c0 ELSE t1.c51 END)OR(((((((((t1.c51)OR(vt1.c0)))AND(t1.c51)))OR(t1.c51)))OR(vt1.c0)))))OR(((vt1.c0)OR(t1.c51)))))OR((t1.c51 IN ()))))AND(((t1.c51)LIKE(t1.c51))))) UNION ALL SELECT * FROM t1, vt1 WHERE ((NOT (((((((((CASE WHEN vt1.c0 THEN t1.c51 WHEN '-579838859' THEN 'dW' WHEN t1.c51 THEN vt1.c0 ELSE t1.c51 END)OR(((((((((t1.c51)OR(vt1.c0)))AND(t1.c51)))OR(t1.c51)))OR(vt1.c0)))))OR(((vt1.c0)OR(t1.c51)))))OR((t1.c51 IN ()))))AND(((t1.c51)LIKE(t1.c51))))))) UNION ALL SELECT * FROM t1, vt1 WHERE (((((((((((CASE WHEN vt1.c0 THEN t1.c51 WHEN '-579838859' THEN 'dW' WHEN t1.c51 THEN vt1.c0 ELSE t1.c51 END)OR(((((((((t1.c51)OR(vt1.c0)))AND(t1.c51)))OR(t1.c51)))OR(vt1.c0)))))OR(((vt1.c0)OR(t1.c51)))))OR((t1.c51 IN ()))))AND(((t1.c51)LIKE(t1.c51))))) ISNULL));
SELECT * FROM t1, vt1;
SELECT DISTINCT vt0.c2, vt0.c1 FROM vt0;
SELECT DISTINCT vt0.c2, vt0.c1 FROM vt0 WHERE (((((((vt0.c1)OR(vt0.c2)))AND(vt0.c0))) IS TRUE)) UNION SELECT DISTINCT vt0.c2, vt0.c1 FROM vt0 WHERE ((NOT (((((((vt0.c1)OR(vt0.c2)))AND(vt0.c0))) IS TRUE)))) UNION SELECT DISTINCT vt0.c2, vt0.c1 FROM vt0 WHERE (((((((((vt0.c1)OR(vt0.c2)))AND(vt0.c0))) IS TRUE)) ISNULL));
SELECT DISTINCT vt0.c2, vt0.c1 FROM vt0;
SELECT ALL vt0.c1, vt0.c2 FROM vt0 GROUP BY vt0.c1, vt0.c2;
SELECT ALL vt0.c1, vt0.c2 FROM vt0 WHERE (vt0.c1) GROUP BY vt0.c1, vt0.c2 UNION SELECT ALL vt0.c1, vt0.c2 FROM vt0 WHERE ((NOT (vt0.c1))) GROUP BY vt0.c1, vt0.c2 UNION SELECT vt0.c1, vt0.c2 FROM vt0 WHERE (((vt0.c1) ISNULL)) GROUP BY vt0.c1, vt0.c2;
SELECT ALL vt0.c1, vt0.c2 FROM vt0 GROUP BY vt0.c1, vt0.c2;
SELECT ALL t1.c51, vt0.c1, vt0.c2 FROM t1, vt0, vt1 GROUP BY t1.c51, vt0.c1, vt0.c2;
SELECT ALL t1.c51, vt0.c1, vt0.c2 FROM t1, vt0, vt1 GROUP BY t1.c51, vt0.c1, vt0.c2 HAVING ((CASE vt1.c0  WHEN AVG(vt1.c0) THEN TOTAL(MAX(vt0.c2)) ELSE MIN(vt0.c2) END) BETWEEN (TOTAL(MIN(t1.c51))) AND ((SUM(vt1.c0) IN ()))) UNION ALL SELECT t1.c51, vt0.c1, vt0.c2 FROM t1, vt0, vt1 GROUP BY t1.c51, vt0.c1, vt0.c2 HAVING (NOT (((CASE vt1.c0  WHEN AVG(vt1.c0) THEN TOTAL(MAX(vt0.c2)) ELSE MIN(vt0.c2) END) BETWEEN (TOTAL(MIN(t1.c51))) AND ((SUM(vt1.c0) IN ()))))) UNION ALL SELECT t1.c51, vt0.c1, vt0.c2 FROM t1, vt0, vt1 GROUP BY t1.c51, vt0.c1, vt0.c2 HAVING ((((CASE vt1.c0  WHEN AVG(vt1.c0) THEN TOTAL(MAX(vt0.c2)) ELSE MIN(vt0.c2) END) BETWEEN (TOTAL(MIN(t1.c51))) AND ((SUM(vt1.c0) IN ())))) ISNULL);
SELECT vt0.c0, rt0.c0, rt0.c4, rt0.c3, rt0.c2, vt1.c0, vt0.c2, vt0.c1, rt0.c1 FROM vt0, rt0, vt1;
SELECT ALL vt0.c0, rt0.c0, rt0.c4, rt0.c3, rt0.c2, vt1.c0, vt0.c2, vt0.c1, rt0.c1 FROM vt0, rt0, vt1 WHERE (((rt0.c3) IS TRUE) COLLATE RTRIM) UNION ALL SELECT vt0.c0, rt0.c0, rt0.c4, rt0.c3, rt0.c2, vt1.c0, vt0.c2, vt0.c1, rt0.c1 FROM vt0, rt0, vt1 WHERE ((NOT (((rt0.c3) IS TRUE) COLLATE RTRIM))) UNION ALL SELECT ALL vt0.c0, rt0.c0, rt0.c4, rt0.c3, rt0.c2, vt1.c0, vt0.c2, vt0.c1, rt0.c1 FROM vt0, rt0, vt1 WHERE (((((rt0.c3) IS TRUE) COLLATE RTRIM) ISNULL));
SELECT vt0.c0, rt0.c0, rt0.c4, rt0.c3, rt0.c2, vt1.c0, vt0.c2, vt0.c1, rt0.c1 FROM vt0, rt0, vt1;
SELECT DISTINCT * FROM rt0, vt1, vt0, t1;
SELECT DISTINCT * FROM rt0, vt1, vt0, t1 WHERE ((((((- (0.3472170311640489)))OR(LOWER(DISTINCT vt1.c0))))AND(((rt0.c1)*(rt0.c4))))) UNION SELECT DISTINCT * FROM rt0, vt1, vt0, t1 WHERE ((NOT ((((((- (0.3472170311640489)))OR(LOWER(DISTINCT vt1.c0))))AND(((rt0.c1)*(rt0.c4))))))) UNION SELECT DISTINCT * FROM rt0, vt1, vt0, t1 WHERE ((((((((- (0.3472170311640489)))OR(LOWER(DISTINCT vt1.c0))))AND(((rt0.c1)*(rt0.c4))))) ISNULL));
SELECT DISTINCT * FROM rt0, vt1, vt0, t1;
SELECT ALL vt0.c1, vt0.c2 FROM vt0 GROUP BY vt0.c1, vt0.c2;
SELECT vt0.c1, vt0.c2 FROM vt0 WHERE (((vt0.c0 COLLATE RTRIM)/(vt0.c1))) GROUP BY vt0.c1, vt0.c2 UNION SELECT vt0.c1, vt0.c2 FROM vt0 WHERE ((NOT (((vt0.c0 COLLATE RTRIM)/(vt0.c1))))) GROUP BY vt0.c1, vt0.c2 UNION SELECT vt0.c1, vt0.c2 FROM vt0 WHERE (((((vt0.c0 COLLATE RTRIM)/(vt0.c1))) ISNULL)) GROUP BY vt0.c1, vt0.c2;
SELECT ALL vt0.c1, vt0.c2 FROM vt0 GROUP BY vt0.c1, vt0.c2;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING '-1911962287' UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT ('-1911962287')) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (('-1911962287') ISNULL);
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING '-1911962287' UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT ('-1911962287')) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (('-1911962287') ISNULL);
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL * FROM vt0 FULL OUTER JOIN vt1 ON vt0.c1;
SELECT * FROM vt0 FULL OUTER JOIN vt1 ON vt0.c1 WHERE (CAST(CASE vt0.c2  WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c1 THEN vt0.c2 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c2 WHEN vt1.c0 THEN vt0.c2 ELSE vt0.c0 END AS NUMERIC)) UNION ALL SELECT ALL * FROM vt0 FULL OUTER JOIN vt1 ON vt0.c1 WHERE ((NOT (CAST(CASE vt0.c2  WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c1 THEN vt0.c2 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c2 WHEN vt1.c0 THEN vt0.c2 ELSE vt0.c0 END AS NUMERIC)))) UNION ALL SELECT ALL * FROM vt0 FULL OUTER JOIN vt1 ON vt0.c1 WHERE (((CAST(CASE vt0.c2  WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c1 THEN vt0.c2 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c2 WHEN vt1.c0 THEN vt0.c2 ELSE vt0.c0 END AS NUMERIC)) ISNULL));
SELECT ALL * FROM vt0 FULL OUTER JOIN vt1 ON vt0.c1;
SELECT DISTINCT * FROM t1, rt0;
SELECT DISTINCT * FROM t1, rt0 WHERE ((((rt0.c2)) BETWEEN ((((t1.c51)=(rt0.c3)))) AND ((CASE WHEN rt0.c0 THEN '-2096734632' ELSE t1.c51 END)))) UNION SELECT DISTINCT * FROM t1, rt0 WHERE ((NOT ((((rt0.c2)) BETWEEN ((((t1.c51)==(rt0.c3)))) AND ((CASE WHEN rt0.c0 THEN '-2096734632' ELSE t1.c51 END)))))) UNION SELECT DISTINCT * FROM t1, rt0 WHERE ((((((rt0.c2)) BETWEEN ((((t1.c51)=(rt0.c3)))) AND ((CASE WHEN rt0.c0 THEN '-2096734632' ELSE t1.c51 END)))) ISNULL));
SELECT DISTINCT * FROM t1, rt0;
SELECT ALL vt1.c0, rt0.c0, t1.c51, rt0.c2, rt0.c1 FROM vt1, t1, rt0 GROUP BY vt1.c0, rt0.c0, t1.c51, rt0.c2, rt0.c1;
SELECT vt1.c0, rt0.c0, t1.c51, rt0.c2, rt0.c1 FROM vt1, t1 NOT INDEXED, rt0 WHERE (((0.5691034290462829)>=(((vt1.c0) ISNULL)))) GROUP BY vt1.c0, rt0.c0, t1.c51, rt0.c2, rt0.c1 UNION SELECT vt1.c0, rt0.c0, t1.c51, rt0.c2, rt0.c1 FROM vt1, t1, rt0 WHERE ((NOT (((0.5691034290462829)>=(((vt1.c0) ISNULL)))))) GROUP BY vt1.c0, rt0.c0, t1.c51, rt0.c2, rt0.c1 UNION SELECT vt1.c0, rt0.c0, t1.c51, rt0.c2, rt0.c1 FROM vt1, t1, rt0 WHERE (((((0.5691034290462829)>=(((vt1.c0) ISNULL)))) ISNULL)) GROUP BY vt1.c0, rt0.c0, t1.c51, rt0.c2, rt0.c1;
SELECT ALL vt1.c0, rt0.c0, t1.c51, rt0.c2, rt0.c1 FROM vt1, t1, rt0 GROUP BY vt1.c0, rt0.c0, t1.c51, rt0.c2, rt0.c1;
SELECT ALL vt0.c2, vt0.c0, rt0.c3, rt0.c1, t1.c51 FROM t1, rt0, vt0 GROUP BY vt0.c2, vt0.c0, rt0.c3, rt0.c1, t1.c51;
SELECT vt0.c2, vt0.c0, rt0.c3, rt0.c1, t1.c51 FROM t1, rt0, vt0 GROUP BY vt0.c2, vt0.c0, rt0.c3, rt0.c1, t1.c51 HAVING MIN(TOTAL('-609684898')) UNION ALL SELECT vt0.c2, vt0.c0, rt0.c3, rt0.c1, t1.c51 FROM t1, rt0, vt0 GROUP BY vt0.c2, vt0.c0, rt0.c3, rt0.c1, t1.c51 HAVING (NOT (MIN(TOTAL('-609684898')))) UNION ALL SELECT vt0.c2, vt0.c0, rt0.c3, rt0.c1, t1.c51 FROM t1, rt0, vt0 GROUP BY vt0.c2, vt0.c0, rt0.c3, rt0.c1, t1.c51 HAVING ((MIN(TOTAL('-609684898'))) ISNULL);
SELECT ALL t1.c51 FROM t1;
SELECT ALL t1.c51 FROM t1 WHERE (t1.c51) UNION ALL SELECT t1.c51 FROM t1 WHERE ((NOT (t1.c51))) UNION ALL SELECT t1.c51 FROM t1 WHERE (((t1.c51) ISNULL));
SELECT ALL t1.c51 FROM t1;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((((((((((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c4)))OR(((((rt0.c3)AND(0x7860b2dd)))AND(rt0.c2)))))OR(TIME(rt0.c1, rt0.c3, '1512066273'))))OR(CAST(rt0.c0 AS NUMERIC))))OR((rt0.c4 IN ())))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((((((((((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c4)))OR(((((rt0.c3)AND(0x7860b2dd)))AND(rt0.c2)))))OR(TIME(rt0.c1, rt0.c3, '1512066273'))))OR(CAST(rt0.c0 AS NUMERIC))))OR((rt0.c4 IN ())))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((((((((((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c4)))OR(((((rt0.c3)AND(0X7860b2dd)))AND(rt0.c2)))))OR(TIME(rt0.c1, rt0.c3, '1512066273'))))OR(CAST(rt0.c0 AS NUMERIC))))OR((rt0.c4 IN ())))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL vt1.c0 FROM vt1 CROSS JOIN t1 ON ((TRIM(vt1.c0))%(((((((((vt1.c0)OR(0.27294281839162415)))AND('_')))AND(vt1.c0)))AND(t1.c51)))) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 CROSS JOIN t1 ON ((TRIM(vt1.c0))%(((((((((vt1.c0)OR(0.27294281839162415)))AND('_')))AND(vt1.c0)))AND(t1.c51)))) WHERE (CASE ((t1.c51) NOT BETWEEN (0xffffffffc4ff1dbd) AND (vt1.c0))  WHEN (~ (vt1.c0)) THEN CASE WHEN t1.c51 THEN t1.c51 ELSE vt1.c0 END END) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 CROSS JOIN t1 ON ((TRIM(vt1.c0))%(((((((((vt1.c0)OR(0.27294281839162415)))AND('_')))AND(vt1.c0)))AND(t1.c51)))) WHERE ((NOT (CASE ((t1.c51) NOT BETWEEN (0Xffffffffc4ff1dbd) AND (vt1.c0))  WHEN (~ (vt1.c0)) THEN CASE WHEN t1.c51 THEN t1.c51 ELSE vt1.c0 END END))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 CROSS JOIN t1 ON ((TRIM(vt1.c0))%(((((((((vt1.c0)OR(0.27294281839162415)))AND('_')))AND(vt1.c0)))AND(t1.c51)))) WHERE (((CASE ((t1.c51) NOT BETWEEN (0Xffffffffc4ff1dbd) AND (vt1.c0))  WHEN (~ (vt1.c0)) THEN CASE WHEN t1.c51 THEN t1.c51 ELSE vt1.c0 END END) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 CROSS JOIN t1 ON ((TRIM(vt1.c0))%(((((((((vt1.c0)OR(0.27294281839162415)))AND('_')))AND(vt1.c0)))AND(t1.c51)))) GROUP BY vt1.c0;
SELECT vt0.c1, rt0.c2, vt0.c0, t1.c51, rt0.c3, rt0.c0, rt0.c4 FROM vt0, vt1 FULL OUTER JOIN rt0 ON (((((((((((t1.c51, rt0.c1, vt0.c0, vt0.c1, vt1.c0))>=((rt0.c3, rt0.c0, t1.c51, t1.c51, rt0.c0))))AND(((rt0.c3) NOT BETWEEN (rt0.c4) AND (0.9214306127864641)))))AND(UNICODE(rt0.c0))))OR((t1.c51 IN ()))))AND(rt0.c1 COLLATE NOCASE)) RIGHT OUTER JOIN t1 ON '-1911962287' GROUP BY vt0.c1, rt0.c2, vt0.c0, t1.c51, rt0.c3, rt0.c0, rt0.c4;
SELECT ALL rt0.c3 FROM t1, vt0, vt1, rt0;
SELECT rt0.c3 FROM t1, vt0, vt1, rt0 WHERE (((rt0.c0) IS FALSE) COLLATE BINARY) UNION ALL SELECT rt0.c3 FROM t1, vt0, vt1, rt0 WHERE ((NOT (((rt0.c0) IS FALSE) COLLATE BINARY))) UNION ALL SELECT rt0.c3 FROM t1, vt0, vt1, rt0 WHERE (((((rt0.c0) IS FALSE) COLLATE BINARY) ISNULL));
SELECT ALL rt0.c3 FROM t1, vt0, vt1, rt0;
SELECT DISTINCT rt0.c4, rt0.c3, rt0.c0, rt0.c1, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c4, rt0.c3, rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((CASE rt0.c3  WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c2 THEN x'' WHEN rt0.c2 THEN rt0.c1 END IN ())) UNION SELECT DISTINCT rt0.c4, rt0.c3, rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT ((CASE rt0.c3  WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c2 THEN x'' WHEN rt0.c2 THEN rt0.c1 END IN ())))) UNION SELECT DISTINCT rt0.c4, rt0.c3, rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((((CASE rt0.c3  WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c2 THEN x'' WHEN rt0.c2 THEN rt0.c1 END IN ())) ISNULL));
SELECT DISTINCT rt0.c4, rt0.c3, rt0.c0, rt0.c1, rt0.c2 FROM rt0;
SELECT vt0.c0, rt0.c2, rt0.c4, t1.c51, vt1.c0, rt0.c1, rt0.c0, vt0.c1, vt0.c2 FROM rt0, vt0, vt1, t1 GROUP BY vt0.c0, rt0.c2, rt0.c4, t1.c51, vt1.c0, rt0.c1, rt0.c0, vt0.c1, vt0.c2;
SELECT ALL vt0.c0, rt0.c2, rt0.c4, t1.c51, vt1.c0, rt0.c1, rt0.c0, vt0.c1, vt0.c2 FROM rt0, vt0, vt1, t1 WHERE ('<FA~cF7.0') GROUP BY vt0.c0, rt0.c2, rt0.c4, t1.c51, vt1.c0, rt0.c1, rt0.c0, vt0.c1, vt0.c2 UNION SELECT ALL vt0.c0, rt0.c2, rt0.c4, t1.c51, vt1.c0, rt0.c1, rt0.c0, vt0.c1, vt0.c2 FROM rt0, vt0, vt1, t1 WHERE ((NOT ('<FA~cF7.0'))) GROUP BY vt0.c0, rt0.c2, rt0.c4, t1.c51, vt1.c0, rt0.c1, rt0.c0, vt0.c1, vt0.c2 UNION SELECT vt0.c0, rt0.c2, rt0.c4, t1.c51, vt1.c0, rt0.c1, rt0.c0, vt0.c1, vt0.c2 FROM rt0, vt0, vt1, t1 WHERE ((('<FA~cF7.0') ISNULL)) GROUP BY vt0.c0, rt0.c2, rt0.c4, t1.c51, vt1.c0, rt0.c1, rt0.c0, vt0.c1, vt0.c2;
SELECT vt0.c0, rt0.c2, rt0.c4, t1.c51, vt1.c0, rt0.c1, rt0.c0, vt0.c1, vt0.c2 FROM rt0, vt0, vt1, t1 GROUP BY vt0.c0, rt0.c2, rt0.c4, t1.c51, vt1.c0, rt0.c1, rt0.c0, vt0.c1, vt0.c2;
SELECT vt0.c0 FROM t1, vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM t1, vt0 GROUP BY vt0.c0 HAVING TOTAL(SUM(vt0.c1)) UNION ALL SELECT vt0.c0 FROM t1, vt0 GROUP BY vt0.c0 HAVING (NOT (TOTAL(SUM(vt0.c1)))) UNION ALL SELECT ALL vt0.c0 FROM t1, vt0 GROUP BY vt0.c0 HAVING ((TOTAL(SUM(vt0.c1))) ISNULL);
SELECT SUM(((rt0.c0 COLLATE NOCASE)<=(CASE WHEN t1.c51 THEN rt0.c4 WHEN t1.c51 THEN rt0.c0 WHEN rt0.c4 THEN t1.c51 ELSE vt1.c0 END))) FROM rt0, t1, vt1 ORDER BY vt1.c0  NULLS FIRST;
SELECT ALL * FROM t1 INNER JOIN rt0 ON ((((rt0.c3)OR(t1.c51 COLLATE BINARY)))AND(CASE t1.c51  WHEN rt0.c3 THEN rt0.c1 WHEN t1.c51 THEN 'Uj' WHEN 0Xffffffff8e09c551 THEN rt0.c3 ELSE rt0.c0 END));
SELECT ALL * FROM t1 INNER JOIN rt0 ON ((((rt0.c3)OR(t1.c51 COLLATE BINARY)))AND(CASE t1.c51  WHEN rt0.c3 THEN rt0.c1 WHEN t1.c51 THEN 'Uj' WHEN 0Xffffffff8e09c551 THEN rt0.c3 ELSE rt0.c0 END)) WHERE (CASE WHEN rt0.c3 THEN ((((((((((((x'')OR(t1.c51)))OR(rt0.c0)))AND(t1.c51)))AND(rt0.c0)))OR(rt0.c1)))OR(rt0.c4)) ELSE ((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c4)) END) UNION ALL SELECT ALL * FROM t1 INNER JOIN rt0 ON ((((rt0.c3)OR(t1.c51 COLLATE BINARY)))AND(CASE t1.c51  WHEN rt0.c3 THEN rt0.c1 WHEN t1.c51 THEN 'Uj' WHEN 0Xffffffff8e09c551 THEN rt0.c3 ELSE rt0.c0 END)) WHERE ((NOT (CASE WHEN rt0.c3 THEN ((((((((((((x'')OR(t1.c51)))OR(rt0.c0)))AND(t1.c51)))AND(rt0.c0)))OR(rt0.c1)))OR(rt0.c4)) ELSE ((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c4)) END))) UNION ALL SELECT * FROM t1 INNER JOIN rt0 ON ((((rt0.c3)OR(t1.c51 COLLATE BINARY)))AND(CASE t1.c51  WHEN rt0.c3 THEN rt0.c1 WHEN t1.c51 THEN 'Uj' WHEN 0Xffffffff8e09c551 THEN rt0.c3 ELSE rt0.c0 END)) WHERE (((CASE WHEN rt0.c3 THEN ((((((((((((x'')OR(t1.c51)))OR(rt0.c0)))AND(t1.c51)))AND(rt0.c0)))OR(rt0.c1)))OR(rt0.c4)) ELSE ((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c4)) END) ISNULL));
SELECT ALL * FROM t1 INNER JOIN rt0 ON ((((rt0.c3)OR(t1.c51 COLLATE BINARY)))AND(CASE t1.c51  WHEN rt0.c3 THEN rt0.c1 WHEN t1.c51 THEN 'Uj' WHEN 0Xffffffff8e09c551 THEN rt0.c3 ELSE rt0.c0 END));
SELECT DISTINCT * FROM t1, vt1;
SELECT DISTINCT * FROM t1, vt1 WHERE (CASE vt1.c0  WHEN vt1.c0 THEN t1.c51 END COLLATE BINARY) UNION SELECT DISTINCT * FROM t1, vt1 WHERE ((NOT (CASE vt1.c0  WHEN vt1.c0 THEN t1.c51 END COLLATE BINARY))) UNION SELECT DISTINCT * FROM t1, vt1 WHERE (((CASE vt1.c0  WHEN vt1.c0 THEN t1.c51 END COLLATE BINARY) ISNULL));
SELECT DISTINCT * FROM t1, vt1;
SELECT ALL vt0.c0, rt0.c0 FROM vt1, rt0, vt0 GROUP BY vt0.c0, rt0.c0;
SELECT vt0.c0, rt0.c0 FROM vt1, rt0, vt0 WHERE ((NOT (((rt0.c4)>>(vt0.c2))))) GROUP BY vt0.c0, rt0.c0 UNION SELECT vt0.c0, rt0.c0 FROM vt1, rt0, vt0 WHERE ((NOT ((NOT (((rt0.c4)>>(vt0.c2))))))) GROUP BY vt0.c0, rt0.c0 UNION SELECT vt0.c0, rt0.c0 FROM vt1, rt0, vt0 WHERE ((((NOT (((rt0.c4)>>(vt0.c2))))) ISNULL)) GROUP BY vt0.c0, rt0.c0;
SELECT ALL vt0.c0, rt0.c0 FROM vt1, rt0, vt0 GROUP BY vt0.c0, rt0.c0;
SELECT ALL vt0.c2, vt0.c0 FROM vt0, vt1, t1 GROUP BY vt0.c2, vt0.c0;
SELECT ALL vt0.c2, vt0.c0 FROM vt0, vt1, t1 GROUP BY vt0.c2, vt0.c0 HAVING CAST(GROUP_CONCAT(MIN(GROUP_CONCAT(SUM(TOTAL(vt0.c0))))) AS TEXT) UNION ALL SELECT ALL vt0.c2, vt0.c0 FROM vt0, vt1, t1 GROUP BY vt0.c2, vt0.c0 HAVING (NOT (CAST(GROUP_CONCAT(MIN(GROUP_CONCAT(SUM(TOTAL(vt0.c0))))) AS TEXT))) UNION ALL SELECT ALL vt0.c2, vt0.c0 FROM vt0, vt1, t1 GROUP BY vt0.c2, vt0.c0 HAVING ((CAST(GROUP_CONCAT(MIN(GROUP_CONCAT(SUM(TOTAL(vt0.c0))))) AS TEXT)) ISNULL);
SELECT ALL vt0.c2 FROM t1 NATURAL JOIN vt0;
SELECT vt0.c2 FROM t1 NATURAL JOIN vt0 WHERE ((('T')LIKE(vt0.c1 COLLATE NOCASE))) UNION ALL SELECT vt0.c2 FROM t1 NATURAL JOIN vt0 WHERE ((NOT ((('T')LIKE(vt0.c1 COLLATE NOCASE))))) UNION ALL SELECT vt0.c2 FROM t1 NATURAL JOIN vt0 WHERE ((((('T')LIKE(vt0.c1 COLLATE NOCASE))) ISNULL));
SELECT ALL vt0.c2 FROM t1 NATURAL JOIN vt0;
SELECT DISTINCT * FROM vt0, vt1;
SELECT DISTINCT * FROM vt0, vt1 WHERE ((+ (((vt0.c2)>(vt0.c2))))) UNION SELECT DISTINCT * FROM vt0, vt1 WHERE ((NOT ((+ (((vt0.c2)>(vt0.c2))))))) UNION SELECT DISTINCT * FROM vt0, vt1 WHERE ((((+ (((vt0.c2)>(vt0.c2))))) ISNULL));
SELECT DISTINCT * FROM vt0, vt1;
SELECT ALL vt0.c2 FROM vt0, t1 GROUP BY vt0.c2;
SELECT vt0.c2 FROM vt0, t1 WHERE ('') GROUP BY vt0.c2 UNION SELECT vt0.c2 FROM vt0, t1 WHERE ((NOT (''))) GROUP BY vt0.c2 UNION SELECT ALL vt0.c2 FROM vt0, t1 WHERE ((('') ISNULL)) GROUP BY vt0.c2;
SELECT ALL vt0.c2 FROM vt0, t1 GROUP BY vt0.c2;
SELECT rt0.c3, vt0.c0, rt0.c4, rt0.c0 FROM rt0 FULL OUTER JOIN vt0 ON (((rt0.c1, (vt0.c0 IN ()), ((rt0.c4)==(rt0.c2))))!=((((('^|t_T]mR'))==((vt0.c0))), (NOT (rt0.c4)), rt0.c2 COLLATE BINARY))) GROUP BY rt0.c3, vt0.c0, rt0.c4, rt0.c0;
SELECT rt0.c3, vt0.c0, rt0.c4, rt0.c0 FROM rt0 FULL OUTER JOIN vt0 ON (((rt0.c1, (vt0.c0 IN ()), ((rt0.c4)==(rt0.c2))))<>((((('^|t_T]mR'))==((vt0.c0))), (NOT (rt0.c4)), rt0.c2 COLLATE BINARY))) GROUP BY rt0.c3, vt0.c0, rt0.c4, rt0.c0 HAVING ((GROUP_CONCAT(COUNT(*))) NOT BETWEEN (COUNT(MIN(rt0.c0))) AND ('')) UNION ALL SELECT ALL rt0.c3, vt0.c0, rt0.c4, rt0.c0 FROM rt0 FULL OUTER JOIN vt0 ON (((rt0.c1, (vt0.c0 IN ()), ((rt0.c4)==(rt0.c2))))<>((((('^|t_T]mR'))==((vt0.c0))), (NOT (rt0.c4)), rt0.c2 COLLATE BINARY))) GROUP BY rt0.c3, vt0.c0, rt0.c4, rt0.c0 HAVING (NOT (((GROUP_CONCAT(COUNT(*))) NOT BETWEEN (COUNT(MIN(rt0.c0))) AND ('')))) UNION ALL SELECT rt0.c3, vt0.c0, rt0.c4, rt0.c0 FROM rt0 NOT INDEXED FULL OUTER JOIN vt0 ON (((rt0.c1, (vt0.c0 IN ()), ((rt0.c4)==(rt0.c2))))!=((((('^|t_T]mR'))==((vt0.c0))), (NOT (rt0.c4)), rt0.c2 COLLATE BINARY))) GROUP BY rt0.c3, vt0.c0, rt0.c4, rt0.c0 HAVING ((((GROUP_CONCAT(COUNT(*))) NOT BETWEEN (COUNT(MIN(rt0.c0))) AND (''))) ISNULL);
SELECT ALL * FROM vt0 RIGHT OUTER JOIN vt1 ON RTRIM(CAST(rt0.c0 AS INTEGER)) FULL OUTER JOIN t1 ON CASE NULLIF(rt0.c0, rt0.c1)  WHEN rt0.c3 THEN rt0.c1 ELSE (((t1.c51, NULL, rt0.c2))<=((rt0.c2, rt0.c1, rt0.c0))) END INNER JOIN rt0 ON ((((((vt0.c2)AND(t1.c51)))OR(rt0.c3)))LIKE(CASE vt0.c1  WHEN rt0.c3 THEN rt0.c2 END));
SELECT DISTINCT vt0.c1, vt0.c2 FROM vt0, vt1;
SELECT DISTINCT vt0.c1, vt0.c2 FROM vt0, vt1 WHERE ((0.07826834030406138 IN ())) UNION SELECT DISTINCT vt0.c1, vt0.c2 FROM vt0, vt1 WHERE ((NOT ((0.07826834030406138 IN ())))) UNION SELECT DISTINCT vt0.c1, vt0.c2 FROM vt0, vt1 WHERE ((((0.07826834030406138 IN ())) ISNULL));
SELECT DISTINCT vt0.c1, vt0.c2 FROM vt0, vt1;
SELECT ALL t1.c51, rt0.c2, rt0.c3 FROM rt0, t1, vt0 GROUP BY t1.c51, rt0.c2, rt0.c3;
SELECT t1.c51, rt0.c2, rt0.c3 FROM rt0, t1, vt0 WHERE ((~ ((- (0x0))))) GROUP BY t1.c51, rt0.c2, rt0.c3 UNION SELECT t1.c51, rt0.c2, rt0.c3 FROM rt0, t1, vt0 WHERE ((NOT ((~ ((- (0X0))))))) GROUP BY t1.c51, rt0.c2, rt0.c3 UNION SELECT t1.c51, rt0.c2, rt0.c3 FROM rt0, t1, vt0 WHERE ((((~ ((- (0X0))))) ISNULL)) GROUP BY t1.c51, rt0.c2, rt0.c3;
SELECT ALL t1.c51, rt0.c2, rt0.c3 FROM rt0, t1, vt0 GROUP BY t1.c51, rt0.c2, rt0.c3;
SELECT rt0.c2, rt0.c0, rt0.c4, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c4, rt0.c3;
SELECT ALL rt0.c2, rt0.c0, rt0.c4, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c4, rt0.c3 HAVING (- (AVG(COUNT(*)))) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c4, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c4, rt0.c3 HAVING (NOT ((- (AVG(COUNT(*)))))) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c4, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c4, rt0.c3 HAVING (((- (AVG(COUNT(*))))) ISNULL);
SELECT MAX((954619146 COLLATE RTRIM IN ())) FROM vt1 ORDER BY (((~ (vt1.c0))) NOTNULL)  NULLS LAST, ((((((((((vt1.c0) NOT NULL))AND(((vt1.c0)<<(vt1.c0)))))OR((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, x'')) AND ((vt1.c0, vt1.c0, vt1.c0))))))OR(IFNULL(DISTINCT vt1.c0, vt1.c0))))AND(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)) DESC;
SELECT rt0.c1, rt0.c0, rt0.c4, rt0.c3, rt0.c2 FROM rt0;
SELECT rt0.c1, rt0.c0, rt0.c4, rt0.c3, rt0.c2 FROM rt0 WHERE ('' COLLATE BINARY) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c4, rt0.c3, rt0.c2 FROM rt0 WHERE ((NOT ('' COLLATE BINARY))) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c4, rt0.c3, rt0.c2 FROM rt0 WHERE ((('' COLLATE BINARY) ISNULL));
SELECT rt0.c1, rt0.c0, rt0.c4, rt0.c3, rt0.c2 FROM rt0;
SELECT DISTINCT vt0.c1 FROM vt0;
SELECT DISTINCT vt0.c1 FROM vt0 WHERE (((CASE vt0.c1  WHEN vt0.c1 THEN NULL END)IS NOT(((vt0.c0) NOTNULL)))) UNION SELECT DISTINCT vt0.c1 FROM vt0 WHERE ((NOT (((CASE vt0.c1  WHEN vt0.c1 THEN NULL END)IS NOT(((vt0.c0) NOTNULL)))))) UNION SELECT DISTINCT vt0.c1 FROM vt0 WHERE (((((CASE vt0.c1  WHEN vt0.c1 THEN NULL END)IS NOT(((vt0.c0) NOTNULL)))) ISNULL));
SELECT DISTINCT vt0.c1 FROM vt0;
SELECT rt0.c1, rt0.c0, rt0.c4 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c4;
SELECT ALL rt0.c1, rt0.c0, rt0.c4 FROM rt0 WHERE (((rt0.c2)IS NOT(((rt0.c3)|(0.0))))) GROUP BY rt0.c1, rt0.c0, rt0.c4 UNION SELECT ALL rt0.c1, rt0.c0, rt0.c4 FROM rt0 WHERE ((NOT (((rt0.c2)IS NOT(((rt0.c3)|(0.0))))))) GROUP BY rt0.c1, rt0.c0, rt0.c4 UNION SELECT rt0.c1, rt0.c0, rt0.c4 FROM rt0 WHERE (((((rt0.c2)IS NOT(((rt0.c3)|(0.0))))) ISNULL)) GROUP BY rt0.c1, rt0.c0, rt0.c4;
SELECT rt0.c1, rt0.c0, rt0.c4 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c4;
SELECT rt0.c0, vt0.c2, rt0.c4, rt0.c3, vt0.c1, rt0.c2, vt0.c0, rt0.c1 FROM vt0, rt0 GROUP BY rt0.c0, vt0.c2, rt0.c4, rt0.c3, vt0.c1, rt0.c2, vt0.c0, rt0.c1;
SELECT ALL rt0.c0, vt0.c2, rt0.c4, rt0.c3, vt0.c1, rt0.c2, vt0.c0, rt0.c1 FROM vt0, rt0 GROUP BY rt0.c0, vt0.c2, rt0.c4, rt0.c3, vt0.c1, rt0.c2, vt0.c0, rt0.c1 HAVING COUNT(*) COLLATE NOCASE UNION ALL SELECT rt0.c0, vt0.c2, rt0.c4, rt0.c3, vt0.c1, rt0.c2, vt0.c0, rt0.c1 FROM vt0, rt0 GROUP BY rt0.c0, vt0.c2, rt0.c4, rt0.c3, vt0.c1, rt0.c2, vt0.c0, rt0.c1 HAVING (NOT (COUNT(*) COLLATE NOCASE)) UNION ALL SELECT rt0.c0, vt0.c2, rt0.c4, rt0.c3, vt0.c1, rt0.c2, vt0.c0, rt0.c1 FROM vt0, rt0 GROUP BY rt0.c0, vt0.c2, rt0.c4, rt0.c3, vt0.c1, rt0.c2, vt0.c0, rt0.c1 HAVING ((COUNT(*) COLLATE NOCASE) ISNULL);
SELECT rt0.c0, vt0.c2, rt0.c4, rt0.c3, vt0.c1, rt0.c2, vt0.c0, rt0.c1 FROM vt0, rt0 GROUP BY rt0.c0, vt0.c2, rt0.c4, rt0.c3, vt0.c1, rt0.c2, vt0.c0, rt0.c1;
SELECT ALL rt0.c0, vt0.c2, rt0.c4, rt0.c3, vt0.c1, rt0.c2, vt0.c0, rt0.c1 FROM vt0, rt0 GROUP BY rt0.c0, vt0.c2, rt0.c4, rt0.c3, vt0.c1, rt0.c2, vt0.c0, rt0.c1 HAVING COUNT(*) COLLATE NOCASE UNION ALL SELECT rt0.c0, vt0.c2, rt0.c4, rt0.c3, vt0.c1, rt0.c2, vt0.c0, rt0.c1 FROM vt0, rt0 GROUP BY rt0.c0, vt0.c2, rt0.c4, rt0.c3, vt0.c1, rt0.c2, vt0.c0, rt0.c1 HAVING (NOT (COUNT(*) COLLATE NOCASE)) UNION ALL SELECT rt0.c0, vt0.c2, rt0.c4, rt0.c3, vt0.c1, rt0.c2, vt0.c0, rt0.c1 FROM vt0, rt0 GROUP BY rt0.c0, vt0.c2, rt0.c4, rt0.c3, vt0.c1, rt0.c2, vt0.c0, rt0.c1 HAVING ((COUNT(*) COLLATE NOCASE) ISNULL);
SELECT rt0.c0, vt0.c2, rt0.c4, rt0.c3, vt0.c1, rt0.c2, vt0.c0, rt0.c1 FROM vt0, rt0 GROUP BY rt0.c0, vt0.c2, rt0.c4, rt0.c3, vt0.c1, rt0.c2, vt0.c0, rt0.c1;
SELECT ALL * FROM vt0, rt0, t1, vt1;
SELECT * FROM vt0, rt0, t1, vt1 WHERE (vt1.c0) UNION ALL SELECT * FROM vt0, rt0, t1, vt1 WHERE ((NOT (vt1.c0))) UNION ALL SELECT ALL * FROM vt0, rt0, t1, vt1 WHERE (((vt1.c0) ISNULL));
SELECT ALL * FROM vt0, rt0, t1, vt1;
SELECT DISTINCT vt0.c0, t1.c51, vt1.c0, rt0.c4, vt0.c2, rt0.c2, rt0.c0, rt0.c1, rt0.c3, vt0.c1 FROM t1 CROSS JOIN vt0 ON (((rt0.c2)) BETWEEN (((rt0.c0 IN ()))) AND ((((rt0.c3) IS FALSE)))) CROSS JOIN rt0 ON ((rt0.c0) BETWEEN ('SL') AND (t1.c51)) COLLATE NOCASE LEFT OUTER JOIN vt1 ON NULL;
SELECT DISTINCT vt0.c0, t1.c51, vt1.c0, rt0.c4, vt0.c2, rt0.c2, rt0.c0, rt0.c1, rt0.c3, vt0.c1 FROM t1 CROSS JOIN vt0 ON (((rt0.c2)) BETWEEN (((rt0.c0 IN ()))) AND ((((rt0.c3) IS FALSE)))) CROSS JOIN rt0 ON ((rt0.c0) BETWEEN ('SL') AND (t1.c51)) COLLATE NOCASE LEFT OUTER JOIN vt1 ON NULL WHERE (((((((((((((rt0.c3)AND(vt0.c0)))OR(t1.c51)))AND(rt0.c3)))AND(0xffffffff89f43754)))OR('1819055673')))AND(((rt0.c4) IS FALSE)))) UNION SELECT DISTINCT vt0.c0, t1.c51, vt1.c0, rt0.c4, vt0.c2, rt0.c2, rt0.c0, rt0.c1, rt0.c3, vt0.c1 FROM t1 CROSS JOIN vt0 ON (((rt0.c2)) BETWEEN (((rt0.c0 IN ()))) AND ((((rt0.c3) IS FALSE)))) CROSS JOIN rt0 ON ((rt0.c0) BETWEEN ('SL') AND (t1.c51)) COLLATE NOCASE LEFT OUTER JOIN vt1 ON NULL WHERE ((NOT (((((((((((((rt0.c3)AND(vt0.c0)))OR(t1.c51)))AND(rt0.c3)))AND(0Xffffffff89f43754)))OR('1819055673')))AND(((rt0.c4) IS FALSE)))))) UNION SELECT DISTINCT vt0.c0, t1.c51, vt1.c0, rt0.c4, vt0.c2, rt0.c2, rt0.c0, rt0.c1, rt0.c3, vt0.c1 FROM t1 CROSS JOIN vt0 ON (((rt0.c2)) BETWEEN (((rt0.c0 IN ()))) AND ((((rt0.c3) IS FALSE)))) CROSS JOIN rt0 ON ((rt0.c0) BETWEEN ('SL') AND (t1.c51)) COLLATE NOCASE LEFT OUTER JOIN vt1 ON NULL WHERE (((((((((((((((rt0.c3)AND(vt0.c0)))OR(t1.c51)))AND(rt0.c3)))AND(0xffffffff89f43754)))OR('1819055673')))AND(((rt0.c4) IS FALSE)))) ISNULL));
SELECT DISTINCT vt0.c0, t1.c51, vt1.c0, rt0.c4, vt0.c2, rt0.c2, rt0.c0, rt0.c1, rt0.c3, vt0.c1 FROM t1 CROSS JOIN vt0 ON (((rt0.c2)) BETWEEN (((rt0.c0 IN ()))) AND ((((rt0.c3) IS FALSE)))) CROSS JOIN rt0 ON ((rt0.c0) BETWEEN ('SL') AND (t1.c51)) COLLATE NOCASE LEFT OUTER JOIN vt1 ON NULL;
SELECT ALL t1.c51 FROM t1 GROUP BY t1.c51;
SELECT t1.c51 FROM t1 WHERE (((t1.c51) NOT BETWEEN (((t1.c51)>>(t1.c51))) AND (LIKELY(t1.c51)))) GROUP BY t1.c51 UNION SELECT t1.c51 FROM t1 WHERE ((NOT (((t1.c51) NOT BETWEEN (((t1.c51)>>(t1.c51))) AND (LIKELY(t1.c51)))))) GROUP BY t1.c51 UNION SELECT ALL t1.c51 FROM t1 WHERE (((((t1.c51) NOT BETWEEN (((t1.c51)>>(t1.c51))) AND (LIKELY(t1.c51)))) ISNULL)) GROUP BY t1.c51;
SELECT ALL t1.c51 FROM t1 GROUP BY t1.c51;
SELECT ALL vt0.c0, vt0.c1, vt0.c2, t1.c51 FROM t1, vt0 GROUP BY vt0.c0, vt0.c1, vt0.c2, t1.c51;
SELECT vt0.c0, vt0.c1, vt0.c2, t1.c51 FROM t1, vt0 GROUP BY vt0.c0, vt0.c1, vt0.c2, t1.c51 HAVING (CAST(COUNT(MIN(TOTAL(t1.c51))) AS TEXT) IN ()) UNION ALL SELECT vt0.c0, vt0.c1, vt0.c2, t1.c51 FROM t1, vt0 NOT INDEXED GROUP BY vt0.c0, vt0.c1, vt0.c2, t1.c51 HAVING (NOT ((CAST(COUNT(MIN(TOTAL(t1.c51))) AS TEXT) IN ()))) UNION ALL SELECT ALL vt0.c0, vt0.c1, vt0.c2, t1.c51 FROM t1, vt0 GROUP BY vt0.c0, vt0.c1, vt0.c2, t1.c51 HAVING (((CAST(COUNT(MIN(TOTAL(t1.c51))) AS TEXT) IN ())) ISNULL);
SELECT ALL vt0.c0, vt0.c1, vt0.c2, t1.c51 FROM t1, vt0 GROUP BY vt0.c0, vt0.c1, vt0.c2, t1.c51;
SELECT vt0.c0, vt0.c1, vt0.c2, t1.c51 FROM t1, vt0 GROUP BY vt0.c0, vt0.c1, vt0.c2, t1.c51 HAVING (CAST(COUNT(MIN(TOTAL(t1.c51))) AS TEXT) IN ()) UNION ALL SELECT vt0.c0, vt0.c1, vt0.c2, t1.c51 FROM t1, vt0 NOT INDEXED GROUP BY vt0.c0, vt0.c1, vt0.c2, t1.c51 HAVING (NOT ((CAST(COUNT(MIN(TOTAL(t1.c51))) AS TEXT) IN ()))) UNION ALL SELECT ALL vt0.c0, vt0.c1, vt0.c2, t1.c51 FROM t1, vt0 GROUP BY vt0.c0, vt0.c1, vt0.c2, t1.c51 HAVING (((CAST(COUNT(MIN(TOTAL(t1.c51))) AS TEXT) IN ())) ISNULL);
SELECT ALL vt0.c0, vt0.c1, vt0.c2, t1.c51 FROM t1, vt0 GROUP BY vt0.c0, vt0.c1, vt0.c2, t1.c51;
SELECT ALL * FROM rt0;
SELECT * FROM rt0 WHERE ((((NOT (rt0.c2)))>>(x''))) UNION ALL SELECT * FROM rt0 WHERE ((NOT ((((NOT (rt0.c2)))>>(x''))))) UNION ALL SELECT * FROM rt0 WHERE ((((((NOT (rt0.c2)))>>(x''))) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT vt0.c0, t1.c51 FROM t1, vt0;
SELECT DISTINCT vt0.c0, t1.c51 FROM t1, vt0 WHERE (((((((vt0.c0))>=((vt0.c1))), CAST(t1.c51 AS REAL), vt0.c1 COLLATE BINARY))==((CASE WHEN vt0.c2 THEN vt0.c2 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c2 THEN vt0.c0 WHEN '' THEN vt0.c0 WHEN vt0.c2 THEN vt0.c2 END, vt0.c0, -1343227430)))) UNION SELECT DISTINCT vt0.c0, t1.c51 FROM t1, vt0 WHERE ((NOT (((((((vt0.c0))>=((vt0.c1))), CAST(t1.c51 AS REAL), vt0.c1 COLLATE BINARY))==((CASE WHEN vt0.c2 THEN vt0.c2 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c2 THEN vt0.c0 WHEN '' THEN vt0.c0 WHEN vt0.c2 THEN vt0.c2 END, vt0.c0, -1343227430)))))) UNION SELECT DISTINCT vt0.c0, t1.c51 FROM t1, vt0 WHERE (((((((((vt0.c0))>=((vt0.c1))), CAST(t1.c51 AS REAL), vt0.c1 COLLATE BINARY))==((CASE WHEN vt0.c2 THEN vt0.c2 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c2 THEN vt0.c0 WHEN '' THEN vt0.c0 WHEN vt0.c2 THEN vt0.c2 END, vt0.c0, -1343227430)))) ISNULL));
SELECT DISTINCT vt0.c0, t1.c51 FROM t1, vt0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE ((NULL IN ())) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT ((NULL IN ())))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((((NULL IN ())) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL t1.c51, vt1.c0 FROM vt1, t1 GROUP BY t1.c51, vt1.c0;
SELECT ALL t1.c51, vt1.c0 FROM vt1, t1 GROUP BY t1.c51, vt1.c0 HAVING TOTAL(UPPER(t1.c51)) UNION ALL SELECT t1.c51, vt1.c0 FROM vt1, t1 GROUP BY t1.c51, vt1.c0 HAVING (NOT (TOTAL(UPPER(t1.c51)))) UNION ALL SELECT t1.c51, vt1.c0 FROM vt1, t1 GROUP BY t1.c51, vt1.c0 HAVING ((TOTAL(UPPER(t1.c51))) ISNULL);
SELECT ALL t1.c51, vt1.c0 FROM vt1, t1 GROUP BY t1.c51, vt1.c0;
SELECT ALL t1.c51, vt1.c0 FROM vt1, t1 GROUP BY t1.c51, vt1.c0 HAVING TOTAL(UPPER(t1.c51)) UNION ALL SELECT t1.c51, vt1.c0 FROM vt1, t1 GROUP BY t1.c51, vt1.c0 HAVING (NOT (TOTAL(UPPER(t1.c51)))) UNION ALL SELECT t1.c51, vt1.c0 FROM vt1, t1 GROUP BY t1.c51, vt1.c0 HAVING ((TOTAL(UPPER(t1.c51))) ISNULL);
SELECT ALL t1.c51, vt1.c0 FROM vt1, t1 GROUP BY t1.c51, vt1.c0;
SELECT ALL rt0.c3, rt0.c1, rt0.c0, t1.c51 FROM vt1 NOT INDEXED, rt0 NATURAL JOIN t1;
SELECT rt0.c3, rt0.c1, rt0.c0, t1.c51 FROM vt1, rt0 NATURAL JOIN t1 WHERE ('148017977') UNION ALL SELECT ALL rt0.c3, rt0.c1, rt0.c0, t1.c51 FROM vt1, rt0 NATURAL JOIN t1 WHERE ((NOT ('148017977'))) UNION ALL SELECT ALL rt0.c3, rt0.c1, rt0.c0, t1.c51 FROM vt1, rt0 NATURAL JOIN t1 WHERE ((('148017977') ISNULL));
SELECT ALL rt0.c3, rt0.c1, rt0.c0, t1.c51 FROM vt1 NOT INDEXED, rt0 NATURAL JOIN t1;
SELECT DISTINCT rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c0 FROM rt0 WHERE ((((rt0.c1)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c3))) COLLATE RTRIM) UNION SELECT DISTINCT rt0.c0 FROM rt0 WHERE ((NOT ((((rt0.c1)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c3))) COLLATE RTRIM))) UNION SELECT DISTINCT rt0.c0 FROM rt0 WHERE ((((((rt0.c1)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c3))) COLLATE RTRIM) ISNULL));
SELECT DISTINCT rt0.c0 FROM rt0;
SELECT ALL rt0.c1, rt0.c4, rt0.c2, vt0.c2 FROM rt0, vt1, t1 RIGHT OUTER JOIN vt0 ON DATE(COALESCE(rt0.c4, rt0.c1), vt0.c0, ((t1.c51) NOTNULL)) GROUP BY rt0.c1, rt0.c4, rt0.c2, vt0.c2;
SELECT ALL rt0.c1, rt0.c4, rt0.c2, vt0.c2 FROM rt0, vt1, t1 RIGHT OUTER JOIN vt0 ON DATE(COALESCE(rt0.c4, rt0.c1), vt0.c0, ((t1.c51) NOTNULL)) WHERE (((((NULL)OR(((rt0.c4)/(vt1.c0)))))OR(((0.9355683187186967)<<('t|2fk2q/'))))) GROUP BY rt0.c1, rt0.c4, rt0.c2, vt0.c2 UNION SELECT rt0.c1, rt0.c4, rt0.c2, vt0.c2 FROM rt0, vt1, t1 RIGHT OUTER JOIN vt0 ON DATE(COALESCE(rt0.c4, rt0.c1), vt0.c0, ((t1.c51) NOTNULL)) WHERE ((NOT (((((NULL)OR(((rt0.c4)/(vt1.c0)))))OR(((0.9355683187186967)<<('t|2fk2q/'))))))) GROUP BY rt0.c1, rt0.c4, rt0.c2, vt0.c2 UNION SELECT ALL rt0.c1, rt0.c4, rt0.c2, vt0.c2 FROM rt0, vt1, t1 RIGHT OUTER JOIN vt0 ON DATE(COALESCE(rt0.c4, rt0.c1), vt0.c0, ((t1.c51) NOTNULL)) WHERE (((((((NULL)OR(((rt0.c4)/(vt1.c0)))))OR(((0.9355683187186967)<<('t|2fk2q/'))))) ISNULL)) GROUP BY rt0.c1, rt0.c4, rt0.c2, vt0.c2;
SELECT ALL rt0.c1, rt0.c4, rt0.c2, vt0.c2 FROM rt0, vt1, t1 RIGHT OUTER JOIN vt0 ON DATE(COALESCE(rt0.c4, rt0.c1), vt0.c0, ((t1.c51) NOTNULL)) GROUP BY rt0.c1, rt0.c4, rt0.c2, vt0.c2;
SELECT rt0.c2 FROM vt0, vt1, rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM vt0, vt1, rt0 GROUP BY rt0.c2 HAVING 0.3064453819486299 UNION ALL SELECT rt0.c2 FROM vt0, vt1, rt0 GROUP BY rt0.c2 HAVING (NOT (0.3064453819486299)) UNION ALL SELECT ALL rt0.c2 FROM vt0, vt1, rt0 GROUP BY rt0.c2 HAVING ((0.3064453819486299) ISNULL);
SELECT rt0.c2 FROM vt0, vt1, rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM vt0, vt1, rt0 GROUP BY rt0.c2 HAVING 0.3064453819486299 UNION ALL SELECT rt0.c2 FROM vt0, vt1, rt0 GROUP BY rt0.c2 HAVING (NOT (0.3064453819486299)) UNION ALL SELECT ALL rt0.c2 FROM vt0, vt1, rt0 GROUP BY rt0.c2 HAVING ((0.3064453819486299) ISNULL);
SELECT rt0.c2 FROM vt0, vt1, rt0 GROUP BY rt0.c2;
SELECT * FROM vt0;
SELECT ALL * FROM vt0 WHERE (LIKELY(DISTINCT vt0.c0)) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (LIKELY(DISTINCT vt0.c0)))) UNION ALL SELECT ALL * FROM vt0 WHERE (((LIKELY(DISTINCT vt0.c0)) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT * FROM rt0, vt1 RIGHT OUTER JOIN vt0 ON ((LIKELY(DISTINCT rt0.c2))%(((rt0.c0) BETWEEN (vt0.c1) AND (rt0.c0)))) INNER JOIN t1 ON -5.02891676E8 COLLATE NOCASE;
SELECT DISTINCT * FROM rt0, vt1 RIGHT OUTER JOIN vt0 ON ((LIKELY(DISTINCT rt0.c2))%(((rt0.c0) BETWEEN (vt0.c1) AND (rt0.c0)))) INNER JOIN t1 ON -5.02891676E8 COLLATE NOCASE WHERE (TRIM(vt0.c1, rt0.c0 COLLATE BINARY)) UNION SELECT DISTINCT * FROM rt0, vt1 RIGHT OUTER JOIN vt0 ON ((LIKELY(DISTINCT rt0.c2))%(((rt0.c0) BETWEEN (vt0.c1) AND (rt0.c0)))) INNER JOIN t1 ON -5.02891676E8 COLLATE NOCASE WHERE ((NOT (TRIM(vt0.c1, rt0.c0 COLLATE BINARY)))) UNION SELECT DISTINCT * FROM rt0, vt1 RIGHT OUTER JOIN vt0 ON ((LIKELY(DISTINCT rt0.c2))%(((rt0.c0) BETWEEN (vt0.c1) AND (rt0.c0)))) INNER JOIN t1 ON -5.02891676E8 COLLATE NOCASE WHERE (((TRIM(vt0.c1, rt0.c0 COLLATE BINARY)) ISNULL));
SELECT DISTINCT * FROM rt0, vt1 RIGHT OUTER JOIN vt0 ON ((LIKELY(DISTINCT rt0.c2))%(((rt0.c0) BETWEEN (vt0.c1) AND (rt0.c0)))) INNER JOIN t1 ON -5.02891676E8 COLLATE NOCASE;
SELECT ALL rt0.c2, vt0.c2, rt0.c3, vt0.c1, vt0.c0, rt0.c0, rt0.c4, rt0.c1, t1.c51 FROM t1, vt0 FULL OUTER JOIN rt0 ON (+ (rt0.c1)) GROUP BY rt0.c2, vt0.c2, rt0.c3, vt0.c1, vt0.c0, rt0.c0, rt0.c4, rt0.c1, t1.c51;
SELECT rt0.c2, vt0.c2, rt0.c3, vt0.c1, vt0.c0, rt0.c0, rt0.c4, rt0.c1, t1.c51 FROM t1, vt0 FULL OUTER JOIN rt0 ON (+ (rt0.c1)) WHERE ((((vt0.c2 IN ())) NOTNULL)) GROUP BY rt0.c2, vt0.c2, rt0.c3, vt0.c1, vt0.c0, rt0.c0, rt0.c4, rt0.c1, t1.c51 UNION SELECT rt0.c2, vt0.c2, rt0.c3, vt0.c1, vt0.c0, rt0.c0, rt0.c4, rt0.c1, t1.c51 FROM t1, vt0 FULL OUTER JOIN rt0 ON (+ (rt0.c1)) WHERE ((NOT ((((vt0.c2 IN ())) NOTNULL)))) GROUP BY rt0.c2, vt0.c2, rt0.c3, vt0.c1, vt0.c0, rt0.c0, rt0.c4, rt0.c1, t1.c51 UNION SELECT ALL rt0.c2, vt0.c2, rt0.c3, vt0.c1, vt0.c0, rt0.c0, rt0.c4, rt0.c1, t1.c51 FROM t1, vt0 FULL OUTER JOIN rt0 ON (+ (rt0.c1)) WHERE ((((((vt0.c2 IN ())) NOTNULL)) ISNULL)) GROUP BY rt0.c2, vt0.c2, rt0.c3, vt0.c1, vt0.c0, rt0.c0, rt0.c4, rt0.c1, t1.c51;
SELECT ALL rt0.c2, vt0.c2, rt0.c3, vt0.c1, vt0.c0, rt0.c0, rt0.c4, rt0.c1, t1.c51 FROM t1, vt0 FULL OUTER JOIN rt0 ON (+ (rt0.c1)) GROUP BY rt0.c2, vt0.c2, rt0.c3, vt0.c1, vt0.c0, rt0.c0, rt0.c4, rt0.c1, t1.c51;
SELECT ALL vt0.c2, vt0.c0 FROM vt0 GROUP BY vt0.c2, vt0.c0;
SELECT ALL vt0.c2, vt0.c0 FROM vt0 GROUP BY vt0.c2, vt0.c0 HAVING AVG(((AVG(vt0.c2)) NOT BETWEEN (SUM(COUNT(vt0.c1))) AND (vt0.c2))) UNION ALL SELECT vt0.c2, vt0.c0 FROM vt0 GROUP BY vt0.c2, vt0.c0 HAVING (NOT (AVG(((AVG(vt0.c2)) NOT BETWEEN (SUM(COUNT(vt0.c1))) AND (vt0.c2))))) UNION ALL SELECT vt0.c2, vt0.c0 FROM vt0 GROUP BY vt0.c2, vt0.c0 HAVING ((AVG(((AVG(vt0.c2)) NOT BETWEEN (SUM(COUNT(vt0.c1))) AND (vt0.c2)))) ISNULL);
SELECT ALL * FROM rt0;
SELECT * FROM rt0 WHERE (CASE rt0.c3 COLLATE NOCASE  WHEN ((rt0.c4) IS FALSE) THEN (((rt0.c0)) BETWEEN ((rt0.c0)) AND ((NULL))) WHEN (((rt0.c2)) NOT BETWEEN ((NULL)) AND ((rt0.c2))) THEN ((rt0.c1)||(rt0.c2)) WHEN ((((((((rt0.c1)AND(rt0.c0)))AND(rt0.c0)))AND(rt0.c3)))OR(rt0.c0)) THEN (('0.14578722229280716')+(rt0.c4)) END) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (CASE rt0.c3 COLLATE NOCASE  WHEN ((rt0.c4) IS FALSE) THEN (((rt0.c0)) BETWEEN ((rt0.c0)) AND ((NULL))) WHEN (((rt0.c2)) NOT BETWEEN ((NULL)) AND ((rt0.c2))) THEN ((rt0.c1)||(rt0.c2)) WHEN ((((((((rt0.c1)AND(rt0.c0)))AND(rt0.c0)))AND(rt0.c3)))OR(rt0.c0)) THEN (('0.14578722229280716')+(rt0.c4)) END))) UNION ALL SELECT ALL * FROM rt0 WHERE (((CASE rt0.c3 COLLATE NOCASE  WHEN ((rt0.c4) IS FALSE) THEN (((rt0.c0)) BETWEEN ((rt0.c0)) AND ((NULL))) WHEN (((rt0.c2)) NOT BETWEEN ((NULL)) AND ((rt0.c2))) THEN ((rt0.c1)||(rt0.c2)) WHEN ((((((((rt0.c1)AND(rt0.c0)))AND(rt0.c0)))AND(rt0.c3)))OR(rt0.c0)) THEN (('0.14578722229280716')+(rt0.c4)) END) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT vt0.c2, rt0.c0, vt0.c0, rt0.c2, rt0.c4, rt0.c1, rt0.c3, vt1.c0 FROM vt1, rt0, vt0;
SELECT DISTINCT vt0.c2, rt0.c0, vt0.c0, rt0.c2, rt0.c4, rt0.c1, rt0.c3, vt1.c0 FROM vt1, rt0, vt0 WHERE (((((vt1.c0) NOTNULL))||(((rt0.c2)<<(rt0.c3))))) UNION SELECT DISTINCT vt0.c2, rt0.c0, vt0.c0, rt0.c2, rt0.c4, rt0.c1, rt0.c3, vt1.c0 FROM vt1, rt0, vt0 WHERE ((NOT (((((vt1.c0) NOTNULL))||(((rt0.c2)<<(rt0.c3))))))) UNION SELECT DISTINCT vt0.c2, rt0.c0, vt0.c0, rt0.c2, rt0.c4, rt0.c1, rt0.c3, vt1.c0 FROM vt1, rt0, vt0 WHERE (((((((vt1.c0) NOTNULL))||(((rt0.c2)<<(rt0.c3))))) ISNULL));
SELECT DISTINCT vt0.c2, rt0.c0, vt0.c0, rt0.c2, rt0.c4, rt0.c1, rt0.c3, vt1.c0 FROM vt1, rt0, vt0;
SELECT rt0.c1, t1.c51, vt1.c0, rt0.c2, rt0.c3, rt0.c0, rt0.c4 FROM rt0, vt1 FULL OUTER JOIN t1 ON (((rt0.c3 COLLATE RTRIM))<((CASE WHEN t1.c51 THEN rt0.c3 ELSE rt0.c1 END))) GROUP BY rt0.c1, t1.c51, vt1.c0, rt0.c2, rt0.c3, rt0.c0, rt0.c4;
SELECT ALL rt0.c1, t1.c51, vt1.c0, rt0.c2, rt0.c3, rt0.c0, rt0.c4 FROM rt0, vt1 FULL OUTER JOIN t1 ON (((rt0.c3 COLLATE RTRIM))<((CASE WHEN t1.c51 THEN rt0.c3 ELSE rt0.c1 END))) WHERE (((rt0.c4) ISNULL) COLLATE BINARY) GROUP BY rt0.c1, t1.c51, vt1.c0, rt0.c2, rt0.c3, rt0.c0, rt0.c4 UNION SELECT rt0.c1, t1.c51, vt1.c0, rt0.c2, rt0.c3, rt0.c0, rt0.c4 FROM rt0, vt1 FULL OUTER JOIN t1 ON (((rt0.c3 COLLATE RTRIM))<((CASE WHEN t1.c51 THEN rt0.c3 ELSE rt0.c1 END))) WHERE ((NOT (((rt0.c4) ISNULL) COLLATE BINARY))) GROUP BY rt0.c1, t1.c51, vt1.c0, rt0.c2, rt0.c3, rt0.c0, rt0.c4 UNION SELECT ALL rt0.c1, t1.c51, vt1.c0, rt0.c2, rt0.c3, rt0.c0, rt0.c4 FROM rt0, vt1 FULL OUTER JOIN t1 ON (((rt0.c3 COLLATE RTRIM))<((CASE WHEN t1.c51 THEN rt0.c3 ELSE rt0.c1 END))) WHERE (((((rt0.c4) ISNULL) COLLATE BINARY) ISNULL)) GROUP BY rt0.c1, t1.c51, vt1.c0, rt0.c2, rt0.c3, rt0.c0, rt0.c4;
SELECT rt0.c1, t1.c51, vt1.c0, rt0.c2, rt0.c3, rt0.c0, rt0.c4 FROM rt0, vt1 FULL OUTER JOIN t1 ON (((rt0.c3 COLLATE RTRIM))<((CASE WHEN t1.c51 THEN rt0.c3 ELSE rt0.c1 END))) GROUP BY rt0.c1, t1.c51, vt1.c0, rt0.c2, rt0.c3, rt0.c0, rt0.c4;
SELECT vt0.c1, vt0.c0, vt1.c0 FROM vt1, vt0, t1 GROUP BY vt0.c1, vt0.c0, vt1.c0;
SELECT ALL vt0.c1, vt0.c0, vt1.c0 FROM vt1, vt0, t1 GROUP BY vt0.c1, vt0.c0, vt1.c0 HAVING (NOT ((+ (vt0.c1)))) UNION ALL SELECT vt0.c1, vt0.c0, vt1.c0 FROM vt1, vt0, t1 GROUP BY vt0.c1, vt0.c0, vt1.c0 HAVING (NOT ((NOT ((+ (vt0.c1)))))) UNION ALL SELECT vt0.c1, vt0.c0, vt1.c0 FROM vt1, vt0, t1 GROUP BY vt0.c1, vt0.c0, vt1.c0 HAVING (((NOT ((+ (vt0.c1))))) ISNULL);
SELECT vt0.c1, vt0.c0, vt1.c0 FROM vt1, vt0, t1 GROUP BY vt0.c1, vt0.c0, vt1.c0;
SELECT ALL vt0.c1, vt0.c0, vt1.c0 FROM vt1, vt0, t1 GROUP BY vt0.c1, vt0.c0, vt1.c0 HAVING (NOT ((+ (vt0.c1)))) UNION ALL SELECT vt0.c1, vt0.c0, vt1.c0 FROM vt1, vt0, t1 GROUP BY vt0.c1, vt0.c0, vt1.c0 HAVING (NOT ((NOT ((+ (vt0.c1)))))) UNION ALL SELECT vt0.c1, vt0.c0, vt1.c0 FROM vt1, vt0, t1 GROUP BY vt0.c1, vt0.c0, vt1.c0 HAVING (((NOT ((+ (vt0.c1))))) ISNULL);
SELECT vt0.c1, vt0.c0, vt1.c0 FROM vt1, vt0, t1 GROUP BY vt0.c1, vt0.c0, vt1.c0;
SELECT rt0.c3, rt0.c0, rt0.c4, t1.c51 FROM vt1, t1, rt0;
SELECT rt0.c3, rt0.c0, rt0.c4, t1.c51 FROM vt1, t1, rt0 WHERE (((((((rt0.c4) BETWEEN (rt0.c4) AND (NULL)))OR(((rt0.c3) IS TRUE))))AND(''))) UNION ALL SELECT rt0.c3, rt0.c0, rt0.c4, t1.c51 FROM vt1, t1, rt0 WHERE ((NOT (((((((rt0.c4) BETWEEN (rt0.c4) AND (NULL)))OR(((rt0.c3) IS TRUE))))AND(''))))) UNION ALL SELECT rt0.c3, rt0.c0, rt0.c4, t1.c51 FROM vt1, t1, rt0 NOT INDEXED WHERE (((((((((rt0.c4) BETWEEN (rt0.c4) AND (NULL)))OR(((rt0.c3) IS TRUE))))AND(''))) ISNULL));
SELECT rt0.c3, rt0.c0, rt0.c4, t1.c51 FROM vt1, t1, rt0;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)) COLLATE NOCASE) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT (((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)) COLLATE NOCASE))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)) COLLATE NOCASE) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT rt0.c3, rt0.c0, vt0.c2, rt0.c4, vt1.c0, rt0.c1 FROM rt0 RIGHT OUTER JOIN vt1 ON vt1.c0 INNER JOIN vt0 ON ((((rt0.c1)OR(NULL)))<>((vt0.c2 IN ()))) GROUP BY rt0.c3, rt0.c0, vt0.c2, rt0.c4, vt1.c0, rt0.c1;
SELECT ALL rt0.c3, rt0.c0, vt0.c2, rt0.c4, vt1.c0, rt0.c1 FROM rt0 RIGHT OUTER JOIN vt1 ON vt1.c0 INNER JOIN vt0 ON ((((rt0.c1)OR(NULL)))!=((vt0.c2 IN ()))) WHERE ((((CAST(rt0.c1 AS INTEGER)))<((CAST(rt0.c4 AS REAL))))) GROUP BY rt0.c3, rt0.c0, vt0.c2, rt0.c4, vt1.c0, rt0.c1 UNION SELECT ALL rt0.c3, rt0.c0, vt0.c2, rt0.c4, vt1.c0, rt0.c1 FROM rt0 RIGHT OUTER JOIN vt1 ON vt1.c0 INNER JOIN vt0 ON ((((rt0.c1)OR(NULL)))<>((vt0.c2 IN ()))) WHERE ((NOT ((((CAST(rt0.c1 AS INTEGER)))<((CAST(rt0.c4 AS REAL))))))) GROUP BY rt0.c3, rt0.c0, vt0.c2, rt0.c4, vt1.c0, rt0.c1 UNION SELECT ALL rt0.c3, rt0.c0, vt0.c2, rt0.c4, vt1.c0, rt0.c1 FROM rt0 RIGHT OUTER JOIN vt1 ON vt1.c0 INNER JOIN vt0 ON ((((rt0.c1)OR(NULL)))!=((vt0.c2 IN ()))) WHERE ((((((CAST(rt0.c1 AS INTEGER)))<((CAST(rt0.c4 AS REAL))))) ISNULL)) GROUP BY rt0.c3, rt0.c0, vt0.c2, rt0.c4, vt1.c0, rt0.c1;
SELECT rt0.c3, rt0.c0, vt0.c2, rt0.c4, vt1.c0, rt0.c1 FROM rt0 RIGHT OUTER JOIN vt1 ON vt1.c0 INNER JOIN vt0 ON ((((rt0.c1)OR(NULL)))<>((vt0.c2 IN ()))) GROUP BY rt0.c3, rt0.c0, vt0.c2, rt0.c4, vt1.c0, rt0.c1;
SELECT ALL t1.c51, rt0.c4 FROM rt0, t1 GROUP BY t1.c51, rt0.c4;
SELECT ALL t1.c51, rt0.c4 FROM rt0, t1 GROUP BY t1.c51, rt0.c4 HAVING SUM(rt0.c4) UNION ALL SELECT t1.c51, rt0.c4 FROM rt0, t1 GROUP BY t1.c51, rt0.c4 HAVING (NOT (SUM(rt0.c4))) UNION ALL SELECT ALL t1.c51, rt0.c4 FROM rt0, t1 GROUP BY t1.c51, rt0.c4 HAVING ((SUM(rt0.c4)) ISNULL);
SELECT ALL t1.c51, rt0.c4 FROM rt0, t1 GROUP BY t1.c51, rt0.c4;
SELECT ALL t1.c51, rt0.c4 FROM rt0, t1 GROUP BY t1.c51, rt0.c4 HAVING SUM(rt0.c4) UNION ALL SELECT t1.c51, rt0.c4 FROM rt0, t1 GROUP BY t1.c51, rt0.c4 HAVING (NOT (SUM(rt0.c4))) UNION ALL SELECT ALL t1.c51, rt0.c4 FROM rt0, t1 GROUP BY t1.c51, rt0.c4 HAVING ((SUM(rt0.c4)) ISNULL);
SELECT ALL t1.c51, rt0.c4 FROM rt0, t1 GROUP BY t1.c51, rt0.c4;
SELECT * FROM vt0, rt0, vt1 NOT INDEXED, t1;
SELECT * FROM vt0, rt0, vt1, t1 WHERE (vt0.c0) UNION ALL SELECT ALL * FROM vt0, rt0, vt1, t1 WHERE ((NOT (vt0.c0))) UNION ALL SELECT ALL * FROM vt0, rt0, vt1, t1 WHERE (((vt0.c0) ISNULL));
SELECT * FROM vt0, rt0, vt1 NOT INDEXED, t1;
SELECT DISTINCT t1.c51, vt0.c1, rt0.c0, rt0.c4, rt0.c3, vt0.c2, rt0.c1 FROM vt1, rt0, vt0, t1;
SELECT DISTINCT t1.c51, vt0.c1, rt0.c0, rt0.c4, rt0.c3, vt0.c2, rt0.c1 FROM vt1, rt0, vt0, t1 WHERE (((rt0.c3 COLLATE BINARY) NOTNULL)) UNION SELECT DISTINCT t1.c51, vt0.c1, rt0.c0, rt0.c4, rt0.c3, vt0.c2, rt0.c1 FROM vt1, rt0, vt0, t1 WHERE ((NOT (((rt0.c3 COLLATE BINARY) NOTNULL)))) UNION SELECT DISTINCT t1.c51, vt0.c1, rt0.c0, rt0.c4, rt0.c3, vt0.c2, rt0.c1 FROM vt1, rt0, vt0, t1 WHERE (((((rt0.c3 COLLATE BINARY) NOTNULL)) ISNULL));
SELECT DISTINCT t1.c51, vt0.c1, rt0.c0, rt0.c4, rt0.c3, vt0.c2, rt0.c1 FROM vt1, rt0, vt0, t1;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE (((((((((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))OR(((NULL)>=(vt1.c0)))))OR(((vt1.c0) BETWEEN (vt1.c0) AND ('-1640403517')))))OR(x'69eb')))OR(((vt1.c0) IS TRUE)))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT (((((((((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))OR(((NULL)>=(vt1.c0)))))OR(((vt1.c0) BETWEEN (vt1.c0) AND ('-1640403517')))))OR(x'69eb')))OR(((vt1.c0) IS TRUE)))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE (((((((((((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))OR(((NULL)>=(vt1.c0)))))OR(((vt1.c0) BETWEEN (vt1.c0) AND ('-1640403517')))))OR(x'69eb')))OR(((vt1.c0) IS TRUE)))) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL rt0.c4, rt0.c1 FROM rt0 GROUP BY rt0.c4, rt0.c1;
SELECT ALL rt0.c4, rt0.c1 FROM rt0 GROUP BY rt0.c4, rt0.c1 HAVING MIN(rt0.c0) UNION ALL SELECT rt0.c4, rt0.c1 FROM rt0 GROUP BY rt0.c4, rt0.c1 HAVING (NOT (MIN(rt0.c0))) UNION ALL SELECT ALL rt0.c4, rt0.c1 FROM rt0 GROUP BY rt0.c4, rt0.c1 HAVING ((MIN(rt0.c0)) ISNULL);
SELECT ALL rt0.c4, rt0.c1 FROM rt0 GROUP BY rt0.c4, rt0.c1;
SELECT ALL rt0.c4, rt0.c1 FROM rt0 GROUP BY rt0.c4, rt0.c1 HAVING MIN(rt0.c0) UNION ALL SELECT rt0.c4, rt0.c1 FROM rt0 GROUP BY rt0.c4, rt0.c1 HAVING (NOT (MIN(rt0.c0))) UNION ALL SELECT ALL rt0.c4, rt0.c1 FROM rt0 GROUP BY rt0.c4, rt0.c1 HAVING ((MIN(rt0.c0)) ISNULL);
SELECT ALL rt0.c4, rt0.c1 FROM rt0 GROUP BY rt0.c4, rt0.c1;
SELECT ALL rt0.c3, t1.c51, vt0.c2, vt1.c0, rt0.c0, vt0.c1 FROM vt0, t1, rt0, vt1;
SELECT rt0.c3, t1.c51, vt0.c2, vt1.c0, rt0.c0, vt0.c1 FROM vt0, t1, rt0, vt1 WHERE (x'') UNION ALL SELECT ALL rt0.c3, t1.c51, vt0.c2, vt1.c0, rt0.c0, vt0.c1 FROM vt0, t1, rt0, vt1 WHERE ((NOT (x''))) UNION ALL SELECT ALL rt0.c3, t1.c51, vt0.c2, vt1.c0, rt0.c0, vt0.c1 FROM vt0, t1, rt0, vt1 WHERE (((x'') ISNULL));
SELECT ALL rt0.c3, t1.c51, vt0.c2, vt1.c0, rt0.c0, vt0.c1 FROM vt0, t1, rt0, vt1;
SELECT DISTINCT * FROM vt0 LEFT OUTER JOIN rt0 ON '354071431';
SELECT DISTINCT * FROM vt0 LEFT OUTER JOIN rt0 ON '354071431' WHERE ((((rt0.c0)) NOT BETWEEN ((((vt0.c2) ISNULL))) AND (((((vt0.c2)) NOT BETWEEN ((vt0.c2)) AND ((vt0.c2))))))) UNION SELECT DISTINCT * FROM vt0 LEFT OUTER JOIN rt0 ON '354071431' WHERE ((NOT ((((rt0.c0)) NOT BETWEEN ((((vt0.c2) ISNULL))) AND (((((vt0.c2)) NOT BETWEEN ((vt0.c2)) AND ((vt0.c2))))))))) UNION SELECT DISTINCT * FROM vt0 LEFT OUTER JOIN rt0 ON '354071431' WHERE ((((((rt0.c0)) NOT BETWEEN ((((vt0.c2) ISNULL))) AND (((((vt0.c2)) NOT BETWEEN ((vt0.c2)) AND ((vt0.c2))))))) ISNULL));
SELECT DISTINCT * FROM vt0 LEFT OUTER JOIN rt0 ON '354071431';
SELECT ALL t1.c51 FROM rt0, t1 GROUP BY t1.c51;
SELECT t1.c51 FROM rt0, t1 WHERE ((((rt0.c4)) NOT BETWEEN ((rt0.c1 COLLATE NOCASE)) AND ((((rt0.c4)AND('961329576')))))) GROUP BY t1.c51 UNION SELECT t1.c51 FROM rt0, t1 WHERE ((NOT ((((rt0.c4)) NOT BETWEEN ((rt0.c1 COLLATE NOCASE)) AND ((((rt0.c4)AND('961329576')))))))) GROUP BY t1.c51 UNION SELECT ALL t1.c51 FROM rt0, t1 WHERE ((((((rt0.c4)) NOT BETWEEN ((rt0.c1 COLLATE NOCASE)) AND ((((rt0.c4)AND('961329576')))))) ISNULL)) GROUP BY t1.c51;
SELECT ALL t1.c51 FROM rt0, t1 GROUP BY t1.c51;
SELECT ALL rt0.c1, rt0.c2, rt0.c4 FROM rt0, t1, vt0 NATURAL JOIN vt1 GROUP BY rt0.c1, rt0.c2, rt0.c4;
SELECT ALL rt0.c1, rt0.c2, rt0.c4 FROM rt0, t1, vt0 NATURAL JOIN vt1 GROUP BY rt0.c1, rt0.c2, rt0.c4 HAVING SUM(CAST(rt0.c3 AS REAL)) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c4 FROM rt0, t1, vt0 NATURAL JOIN vt1 GROUP BY rt0.c1, rt0.c2, rt0.c4 HAVING (NOT (SUM(CAST(rt0.c3 AS REAL)))) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c4 FROM rt0, t1, vt0 NATURAL JOIN vt1 GROUP BY rt0.c1, rt0.c2, rt0.c4 HAVING ((SUM(CAST(rt0.c3 AS REAL))) ISNULL);
SELECT ALL rt0.c1, rt0.c2, rt0.c4 FROM rt0, t1, vt0 NATURAL JOIN vt1 GROUP BY rt0.c1, rt0.c2, rt0.c4;
SELECT ALL rt0.c1, rt0.c2, rt0.c4 FROM rt0, t1, vt0 NATURAL JOIN vt1 GROUP BY rt0.c1, rt0.c2, rt0.c4 HAVING SUM(CAST(rt0.c3 AS REAL)) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c4 FROM rt0, t1, vt0 NATURAL JOIN vt1 GROUP BY rt0.c1, rt0.c2, rt0.c4 HAVING (NOT (SUM(CAST(rt0.c3 AS REAL)))) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c4 FROM rt0, t1, vt0 NATURAL JOIN vt1 GROUP BY rt0.c1, rt0.c2, rt0.c4 HAVING ((SUM(CAST(rt0.c3 AS REAL))) ISNULL);
SELECT ALL rt0.c1, rt0.c2, rt0.c4 FROM rt0, t1, vt0 NATURAL JOIN vt1 GROUP BY rt0.c1, rt0.c2, rt0.c4;
SELECT * FROM vt1;
SELECT * FROM vt1 WHERE ((((vt1.c0)+(vt1.c0)) IN ())) UNION ALL SELECT * FROM vt1 WHERE ((NOT ((((vt1.c0)+(vt1.c0)) IN ())))) UNION ALL SELECT ALL * FROM vt1 WHERE ((((((vt1.c0)+(vt1.c0)) IN ())) ISNULL));
SELECT * FROM vt1;
SELECT DISTINCT * FROM vt1, rt0;
SELECT DISTINCT * FROM vt1, rt0 WHERE (CASE WHEN SQLITE_SOURCE_ID() THEN x'' END) UNION SELECT DISTINCT * FROM vt1, rt0 WHERE ((NOT (CASE WHEN SQLITE_SOURCE_ID() THEN x'' END))) UNION SELECT DISTINCT * FROM vt1, rt0 WHERE (((CASE WHEN SQLITE_SOURCE_ID() THEN x'' END) ISNULL));
SELECT DISTINCT * FROM vt1, rt0;
SELECT ALL vt0.c0, rt0.c3 FROM vt0, rt0 GROUP BY vt0.c0, rt0.c3;
SELECT ALL vt0.c0, rt0.c3 FROM vt0, rt0 WHERE (vt0.c2) GROUP BY vt0.c0, rt0.c3 UNION SELECT vt0.c0, rt0.c3 FROM vt0, rt0 WHERE ((NOT (vt0.c2))) GROUP BY vt0.c0, rt0.c3 UNION SELECT ALL vt0.c0, rt0.c3 FROM vt0, rt0 WHERE (((vt0.c2) ISNULL)) GROUP BY vt0.c0, rt0.c3;
SELECT ALL vt0.c0, rt0.c3 FROM vt0, rt0 GROUP BY vt0.c0, rt0.c3;
SELECT ALL vt1.c0, vt0.c0 FROM t1 LEFT OUTER JOIN vt1 ON (((vt0.c1)) BETWEEN ((vt0.c0)) AND (((+ (4.58566628E8))))) CROSS JOIN vt0 ON json_insert(vt0.c2, vt0.c2 COLLATE BINARY, ((vt0.c1)>(t1.c51)), ABS(DISTINCT t1.c51), RTRIM(vt0.c2), ((vt1.c0)>(vt1.c0)), ((x'') NOT BETWEEN (vt0.c1) AND (vt0.c1)), '', (~ (vt0.c1))) GROUP BY vt1.c0, vt0.c0;
SELECT ALL vt1.c0, vt0.c0 FROM vt1, vt0 NATURAL JOIN t1;
SELECT vt1.c0, vt0.c0 FROM vt1, vt0 NATURAL JOIN t1 WHERE (((((vt1.c0)>=(vt0.c0)))&(CAST(vt0.c1 AS REAL)))) UNION ALL SELECT vt1.c0, vt0.c0 FROM vt1, vt0 NATURAL JOIN t1 WHERE ((NOT (((((vt1.c0)>=(vt0.c0)))&(CAST(vt0.c1 AS REAL)))))) UNION ALL SELECT ALL vt1.c0, vt0.c0 FROM vt1, vt0 NATURAL JOIN t1 WHERE (((((((vt1.c0)>=(vt0.c0)))&(CAST(vt0.c1 AS REAL)))) ISNULL));
SELECT ALL vt1.c0, vt0.c0 FROM vt1, vt0 NATURAL JOIN t1;
SELECT DISTINCT * FROM vt1, rt0, t1, vt0 NOT INDEXED;
SELECT DISTINCT * FROM vt1, rt0, t1, vt0 WHERE (((rt0.c1)!=(((rt0.c3) BETWEEN ('e樻^簍') AND (vt0.c2))))) UNION SELECT DISTINCT * FROM vt1, rt0, t1, vt0 WHERE ((NOT (((rt0.c1)!=(((rt0.c3) BETWEEN ('e樻^簍') AND (vt0.c2))))))) UNION SELECT DISTINCT * FROM vt1, rt0, t1, vt0 WHERE (((((rt0.c1)!=(((rt0.c3) BETWEEN ('e樻^簍') AND (vt0.c2))))) ISNULL));
SELECT DISTINCT * FROM vt1, rt0, t1, vt0 NOT INDEXED;
SELECT ALL t1.c51 FROM t1 GROUP BY t1.c51;
SELECT t1.c51 FROM t1 WHERE ((+ (((t1.c51)<=(t1.c51))))) GROUP BY t1.c51 UNION SELECT t1.c51 FROM t1 WHERE ((NOT ((+ (((t1.c51)<=(t1.c51))))))) GROUP BY t1.c51 UNION SELECT t1.c51 FROM t1 WHERE ((((+ (((t1.c51)<=(t1.c51))))) ISNULL)) GROUP BY t1.c51;
SELECT ALL t1.c51 FROM t1 GROUP BY t1.c51;
SELECT rt0.c4, vt1.c0, vt0.c0, t1.c51, vt0.c1, rt0.c3 FROM t1, vt0, vt1, rt0 GROUP BY rt0.c4, vt1.c0, vt0.c0, t1.c51, vt0.c1, rt0.c3;
SELECT ALL rt0.c4, vt1.c0, vt0.c0, t1.c51, vt0.c1, rt0.c3 FROM t1, vt0, vt1, rt0 GROUP BY rt0.c4, vt1.c0, vt0.c0, t1.c51, vt0.c1, rt0.c3 HAVING GROUP_CONCAT(TOTAL(COUNT(rt0.c2))) UNION ALL SELECT ALL rt0.c4, vt1.c0, vt0.c0, t1.c51, vt0.c1, rt0.c3 FROM t1, vt0, vt1, rt0 GROUP BY rt0.c4, vt1.c0, vt0.c0, t1.c51, vt0.c1, rt0.c3 HAVING (NOT (GROUP_CONCAT(TOTAL(COUNT(rt0.c2))))) UNION ALL SELECT rt0.c4, vt1.c0, vt0.c0, t1.c51, vt0.c1, rt0.c3 FROM t1, vt0, vt1, rt0 NOT INDEXED GROUP BY rt0.c4, vt1.c0, vt0.c0, t1.c51, vt0.c1, rt0.c3 HAVING ((GROUP_CONCAT(TOTAL(COUNT(rt0.c2)))) ISNULL);
SELECT * FROM rt0 NOT INDEXED, t1, vt0;
SELECT ALL * FROM rt0, t1, vt0 WHERE (((+ (rt0.c4)) IN ())) UNION ALL SELECT ALL * FROM rt0, t1, vt0 WHERE ((NOT (((+ (rt0.c4)) IN ())))) UNION ALL SELECT ALL * FROM rt0, t1, vt0 WHERE (((((+ (rt0.c4)) IN ())) ISNULL));
SELECT * FROM rt0 NOT INDEXED, t1, vt0;
SELECT DISTINCT vt1.c0, rt0.c0, rt0.c4 FROM vt1, rt0;
SELECT DISTINCT vt1.c0, rt0.c0, rt0.c4 FROM vt1, rt0 WHERE (((0.47022404647876515)LIKE(CASE WHEN rt0.c4 THEN rt0.c3 ELSE rt0.c0 END))) UNION SELECT DISTINCT vt1.c0, rt0.c0, rt0.c4 FROM vt1, rt0 WHERE ((NOT (((0.47022404647876515)LIKE(CASE WHEN rt0.c4 THEN rt0.c3 ELSE rt0.c0 END))))) UNION SELECT DISTINCT vt1.c0, rt0.c0, rt0.c4 FROM vt1, rt0 WHERE (((((0.47022404647876515)LIKE(CASE WHEN rt0.c4 THEN rt0.c3 ELSE rt0.c0 END))) ISNULL));
SELECT DISTINCT vt1.c0, rt0.c0, rt0.c4 FROM vt1, rt0;
SELECT vt0.c2, rt0.c0, vt0.c1 FROM vt0, rt0 LEFT OUTER JOIN vt1 ON CAST(rt0.c1 COLLATE BINARY AS TEXT) GROUP BY vt0.c2, rt0.c0, vt0.c1;
SELECT vt0.c2, rt0.c0, vt0.c1 FROM vt0, rt0 LEFT OUTER JOIN vt1 ON CAST(rt0.c1 COLLATE BINARY AS TEXT) WHERE (CAST(((rt0.c3) IS TRUE) AS TEXT)) GROUP BY vt0.c2, rt0.c0, vt0.c1 UNION SELECT vt0.c2, rt0.c0, vt0.c1 FROM vt0, rt0 LEFT OUTER JOIN vt1 ON CAST(rt0.c1 COLLATE BINARY AS TEXT) WHERE ((NOT (CAST(((rt0.c3) IS TRUE) AS TEXT)))) GROUP BY vt0.c2, rt0.c0, vt0.c1 UNION SELECT vt0.c2, rt0.c0, vt0.c1 FROM vt0, rt0 LEFT OUTER JOIN vt1 ON CAST(rt0.c1 COLLATE BINARY AS TEXT) WHERE (((CAST(((rt0.c3) IS TRUE) AS TEXT)) ISNULL)) GROUP BY vt0.c2, rt0.c0, vt0.c1;
SELECT vt0.c2, rt0.c0, vt0.c1 FROM vt0, rt0 LEFT OUTER JOIN vt1 ON CAST(rt0.c1 COLLATE BINARY AS TEXT) GROUP BY vt0.c2, rt0.c0, vt0.c1;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL TOTAL(((CAST(vt0.c0 AS INTEGER)) NOTNULL)) FROM vt0 ORDER BY vt0.c0  NULLS FIRST;
SELECT ALL rt0.c2, rt0.c3 FROM rt0;
SELECT rt0.c2, rt0.c3 FROM rt0 WHERE (NULLIF(DISTINCT ((rt0.c1)<=(0.957185095071776)), (rt0.c2 IN ()))) UNION ALL SELECT rt0.c2, rt0.c3 FROM rt0 WHERE ((NOT (NULLIF(DISTINCT ((rt0.c1)<=(0.957185095071776)), (rt0.c2 IN ()))))) UNION ALL SELECT rt0.c2, rt0.c3 FROM rt0 WHERE (((NULLIF(DISTINCT ((rt0.c1)<=(0.957185095071776)), (rt0.c2 IN ()))) ISNULL));
SELECT ALL rt0.c2, rt0.c3 FROM rt0;
SELECT DISTINCT * FROM t1, vt0, rt0, vt1;
SELECT DISTINCT * FROM t1, vt0, rt0, vt1 WHERE (((LIKELY(rt0.c3)) NOT BETWEEN (vt0.c0 COLLATE BINARY) AND ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((rt0.c2)))))) UNION SELECT DISTINCT * FROM t1, vt0, rt0, vt1 WHERE ((NOT (((LIKELY(rt0.c3)) NOT BETWEEN (vt0.c0 COLLATE BINARY) AND ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((rt0.c2)))))))) UNION SELECT DISTINCT * FROM t1, vt0, rt0, vt1 WHERE (((((LIKELY(rt0.c3)) NOT BETWEEN (vt0.c0 COLLATE BINARY) AND ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((rt0.c2)))))) ISNULL));
SELECT DISTINCT * FROM t1, vt0, rt0, vt1;
SELECT rt0.c3, t1.c51, rt0.c4, rt0.c2, rt0.c0 FROM t1 NATURAL JOIN rt0 GROUP BY rt0.c3, t1.c51, rt0.c4, rt0.c2, rt0.c0;
SELECT ALL rt0.c3, t1.c51, rt0.c4, rt0.c2, rt0.c0 FROM t1 NATURAL JOIN rt0 WHERE (((CAST(t1.c51 AS INTEGER)) NOTNULL)) GROUP BY rt0.c3, t1.c51, rt0.c4, rt0.c2, rt0.c0 UNION SELECT rt0.c3, t1.c51, rt0.c4, rt0.c2, rt0.c0 FROM t1 NATURAL JOIN rt0 WHERE ((NOT (((CAST(t1.c51 AS INTEGER)) NOTNULL)))) GROUP BY rt0.c3, t1.c51, rt0.c4, rt0.c2, rt0.c0 UNION SELECT rt0.c3, t1.c51, rt0.c4, rt0.c2, rt0.c0 FROM t1 NATURAL JOIN rt0 WHERE (((((CAST(t1.c51 AS INTEGER)) NOTNULL)) ISNULL)) GROUP BY rt0.c3, t1.c51, rt0.c4, rt0.c2, rt0.c0;
SELECT rt0.c3, t1.c51, rt0.c4, rt0.c2, rt0.c0 FROM t1 NATURAL JOIN rt0 GROUP BY rt0.c3, t1.c51, rt0.c4, rt0.c2, rt0.c0;
SELECT vt0.c2 FROM vt0, t1 GROUP BY vt0.c2;
SELECT ALL vt0.c2 FROM vt0, t1 GROUP BY vt0.c2 HAVING vt0.c2 UNION ALL SELECT ALL vt0.c2 FROM vt0, t1 GROUP BY vt0.c2 HAVING (NOT (vt0.c2)) UNION ALL SELECT vt0.c2 FROM vt0, t1 GROUP BY vt0.c2 HAVING ((vt0.c2) ISNULL);
SELECT vt0.c2 FROM vt0, t1 GROUP BY vt0.c2;
SELECT ALL vt0.c2 FROM vt0, t1 GROUP BY vt0.c2 HAVING vt0.c2 UNION ALL SELECT ALL vt0.c2 FROM vt0, t1 GROUP BY vt0.c2 HAVING (NOT (vt0.c2)) UNION ALL SELECT vt0.c2 FROM vt0, t1 GROUP BY vt0.c2 HAVING ((vt0.c2) ISNULL);
SELECT vt0.c2 FROM vt0, t1 GROUP BY vt0.c2;
SELECT ALL * FROM t1;
SELECT ALL * FROM t1 WHERE (((((t1.c51)LIKE(t1.c51)))>=(((t1.c51)OR('-1545516907'))))) UNION ALL SELECT ALL * FROM t1 WHERE ((NOT (((((t1.c51)LIKE(t1.c51)))>=(((t1.c51)OR('-1545516907'))))))) UNION ALL SELECT ALL * FROM t1 WHERE (((((((t1.c51)LIKE(t1.c51)))>=(((t1.c51)OR('-1545516907'))))) ISNULL));
SELECT ALL * FROM t1;
SELECT DISTINCT * FROM t1;
SELECT DISTINCT * FROM t1 WHERE (-1611794560) UNION SELECT DISTINCT * FROM t1 WHERE ((NOT (-1611794560))) UNION SELECT DISTINCT * FROM t1 WHERE (((-1611794560) ISNULL));
SELECT DISTINCT * FROM t1;
SELECT ALL vt0.c0, vt0.c2, vt0.c1, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt0.c2, vt0.c1, vt1.c0;
SELECT vt0.c0, vt0.c2, vt0.c1, vt1.c0 FROM vt0, vt1 WHERE (HEX(DISTINCT vt1.c0)) GROUP BY vt0.c0, vt0.c2, vt0.c1, vt1.c0 UNION SELECT ALL vt0.c0, vt0.c2, vt0.c1, vt1.c0 FROM vt0, vt1 WHERE ((NOT (HEX(DISTINCT vt1.c0)))) GROUP BY vt0.c0, vt0.c2, vt0.c1, vt1.c0 UNION SELECT ALL vt0.c0, vt0.c2, vt0.c1, vt1.c0 FROM vt0, vt1 WHERE (((HEX(DISTINCT vt1.c0)) ISNULL)) GROUP BY vt0.c0, vt0.c2, vt0.c1, vt1.c0;
SELECT ALL vt0.c0, vt0.c2, vt0.c1, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt0.c2, vt0.c1, vt1.c0;
SELECT vt0.c1, t1.c51, vt0.c2, vt1.c0, rt0.c0, rt0.c3, vt0.c0, rt0.c4, rt0.c1 FROM vt1, rt0, t1, vt0 GROUP BY vt0.c1, t1.c51, vt0.c2, vt1.c0, rt0.c0, rt0.c3, vt0.c0, rt0.c4, rt0.c1;
SELECT vt0.c1, t1.c51, vt0.c2, vt1.c0, rt0.c0, rt0.c3, vt0.c0, rt0.c4, rt0.c1 FROM vt1, rt0, t1, vt0 GROUP BY vt0.c1, t1.c51, vt0.c2, vt1.c0, rt0.c0, rt0.c3, vt0.c0, rt0.c4, rt0.c1 HAVING ((LTRIM(rt0.c2, rt0.c2))+(((GROUP_CONCAT(MAX('K䛠OP45'))) ISNULL))) UNION ALL SELECT vt0.c1, t1.c51, vt0.c2, vt1.c0, rt0.c0, rt0.c3, vt0.c0, rt0.c4, rt0.c1 FROM vt1, rt0, t1, vt0 GROUP BY vt0.c1, t1.c51, vt0.c2, vt1.c0, rt0.c0, rt0.c3, vt0.c0, rt0.c4, rt0.c1 HAVING (NOT (((LTRIM(rt0.c2, rt0.c2))+(((GROUP_CONCAT(MAX('K䛠OP45'))) ISNULL))))) UNION ALL SELECT ALL vt0.c1, t1.c51, vt0.c2, vt1.c0, rt0.c0, rt0.c3, vt0.c0, rt0.c4, rt0.c1 FROM vt1, rt0, t1, vt0 GROUP BY vt0.c1, t1.c51, vt0.c2, vt1.c0, rt0.c0, rt0.c3, vt0.c0, rt0.c4, rt0.c1 HAVING ((((LTRIM(rt0.c2, rt0.c2))+(((GROUP_CONCAT(MAX('K䛠OP45'))) ISNULL)))) ISNULL);
SELECT * FROM rt0 INNER JOIN vt0 ON (vt1.c0 COLLATE NOCASE IN ()) RIGHT OUTER JOIN vt1 ON CASE WHEN ((rt0.c1) ISNULL) THEN ((rt0.c4) BETWEEN (rt0.c1) AND (vt0.c0)) ELSE x'' COLLATE RTRIM END;
SELECT ALL * FROM rt0 INNER JOIN vt0 ON (vt1.c0 COLLATE NOCASE IN ()) RIGHT OUTER JOIN vt1 ON CASE WHEN ((rt0.c1) ISNULL) THEN ((rt0.c4) BETWEEN (rt0.c1) AND (vt0.c0)) ELSE x'' COLLATE RTRIM END WHERE (((((rt0.c1) ISNULL)) NOTNULL)) UNION ALL SELECT * FROM rt0 INNER JOIN vt0 ON (vt1.c0 COLLATE NOCASE IN ()) RIGHT OUTER JOIN vt1 ON CASE WHEN ((rt0.c1) ISNULL) THEN ((rt0.c4) BETWEEN (rt0.c1) AND (vt0.c0)) ELSE x'' COLLATE RTRIM END WHERE ((NOT (((((rt0.c1) ISNULL)) NOTNULL)))) UNION ALL SELECT * FROM rt0 INNER JOIN vt0 ON (vt1.c0 COLLATE NOCASE IN ()) RIGHT OUTER JOIN vt1 ON CASE WHEN ((rt0.c1) ISNULL) THEN ((rt0.c4) BETWEEN (rt0.c1) AND (vt0.c0)) ELSE x'' COLLATE RTRIM END WHERE (((((((rt0.c1) ISNULL)) NOTNULL)) ISNULL));
SELECT * FROM rt0 INNER JOIN vt0 ON (vt1.c0 COLLATE NOCASE IN ()) RIGHT OUTER JOIN vt1 ON CASE WHEN ((rt0.c1) ISNULL) THEN ((rt0.c4) BETWEEN (rt0.c1) AND (vt0.c0)) ELSE x'' COLLATE RTRIM END;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE (CASE ((((vt1.c0)AND(vt1.c0)))OR(vt1.c0))  WHEN vt1.c0 THEN 'F!%g>K' END) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT (CASE ((((vt1.c0)AND(vt1.c0)))OR(vt1.c0))  WHEN vt1.c0 THEN 'F!%g>K' END))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((CASE ((((vt1.c0)AND(vt1.c0)))OR(vt1.c0))  WHEN vt1.c0 THEN 'F!%g>K' END) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE (TYPEOF(DISTINCT (((vt1.c0))>((vt1.c0))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (TYPEOF(DISTINCT (((vt1.c0))>((vt1.c0))))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE (((TYPEOF(DISTINCT (((vt1.c0))>((vt1.c0))))) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt0.c1, rt0.c3, rt0.c4, t1.c51, rt0.c0, vt0.c0, vt1.c0, vt0.c2, rt0.c1 FROM vt0, t1 RIGHT OUTER JOIN vt1 ON x'' RIGHT OUTER JOIN rt0 ON (('Ax妙\')>=(((t1.c51) ISNULL))) GROUP BY vt0.c1, rt0.c3, rt0.c4, t1.c51, rt0.c0, vt0.c0, vt1.c0, vt0.c2, rt0.c1;
SELECT vt0.c1, rt0.c3, rt0.c4, t1.c51, rt0.c0, vt0.c0, vt1.c0, vt0.c2, rt0.c1 FROM vt0, t1 RIGHT OUTER JOIN vt1 ON x'' RIGHT OUTER JOIN rt0 ON (('Ax妙\')>=(((t1.c51) ISNULL))) GROUP BY vt0.c1, rt0.c3, rt0.c4, t1.c51, rt0.c0, vt0.c0, vt1.c0, vt0.c2, rt0.c1 HAVING GROUP_CONCAT(rt0.c2) UNION ALL SELECT vt0.c1, rt0.c3, rt0.c4, t1.c51, rt0.c0, vt0.c0, vt1.c0, vt0.c2, rt0.c1 FROM vt0, t1 RIGHT OUTER JOIN vt1 ON x'' RIGHT OUTER JOIN rt0 ON (('Ax妙\')>=(((t1.c51) ISNULL))) GROUP BY vt0.c1, rt0.c3, rt0.c4, t1.c51, rt0.c0, vt0.c0, vt1.c0, vt0.c2, rt0.c1 HAVING (NOT (GROUP_CONCAT(rt0.c2))) UNION ALL SELECT ALL vt0.c1, rt0.c3, rt0.c4, t1.c51, rt0.c0, vt0.c0, vt1.c0, vt0.c2, rt0.c1 FROM vt0, t1 RIGHT OUTER JOIN vt1 ON x'' RIGHT OUTER JOIN rt0 ON (('Ax妙\')>=(((t1.c51) ISNULL))) GROUP BY vt0.c1, rt0.c3, rt0.c4, t1.c51, rt0.c0, vt0.c0, vt1.c0, vt0.c2, rt0.c1 HAVING ((GROUP_CONCAT(rt0.c2)) ISNULL);
SELECT vt0.c1, rt0.c3, rt0.c4, t1.c51, rt0.c0, vt0.c0, vt1.c0, vt0.c2, rt0.c1 FROM vt0, t1 RIGHT OUTER JOIN vt1 ON x'' RIGHT OUTER JOIN rt0 ON (('Ax妙\')>=(((t1.c51) ISNULL))) GROUP BY vt0.c1, rt0.c3, rt0.c4, t1.c51, rt0.c0, vt0.c0, vt1.c0, vt0.c2, rt0.c1;
SELECT vt0.c1, rt0.c3, rt0.c4, t1.c51, rt0.c0, vt0.c0, vt1.c0, vt0.c2, rt0.c1 FROM vt0, t1 RIGHT OUTER JOIN vt1 ON x'' RIGHT OUTER JOIN rt0 ON (('Ax妙\')>=(((t1.c51) ISNULL))) GROUP BY vt0.c1, rt0.c3, rt0.c4, t1.c51, rt0.c0, vt0.c0, vt1.c0, vt0.c2, rt0.c1 HAVING GROUP_CONCAT(rt0.c2) UNION ALL SELECT vt0.c1, rt0.c3, rt0.c4, t1.c51, rt0.c0, vt0.c0, vt1.c0, vt0.c2, rt0.c1 FROM vt0, t1 RIGHT OUTER JOIN vt1 ON x'' RIGHT OUTER JOIN rt0 ON (('Ax妙\')>=(((t1.c51) ISNULL))) GROUP BY vt0.c1, rt0.c3, rt0.c4, t1.c51, rt0.c0, vt0.c0, vt1.c0, vt0.c2, rt0.c1 HAVING (NOT (GROUP_CONCAT(rt0.c2))) UNION ALL SELECT ALL vt0.c1, rt0.c3, rt0.c4, t1.c51, rt0.c0, vt0.c0, vt1.c0, vt0.c2, rt0.c1 FROM vt0, t1 RIGHT OUTER JOIN vt1 ON x'' RIGHT OUTER JOIN rt0 ON (('Ax妙\')>=(((t1.c51) ISNULL))) GROUP BY vt0.c1, rt0.c3, rt0.c4, t1.c51, rt0.c0, vt0.c0, vt1.c0, vt0.c2, rt0.c1 HAVING ((GROUP_CONCAT(rt0.c2)) ISNULL);
SELECT vt0.c1, rt0.c3, rt0.c4, t1.c51, rt0.c0, vt0.c0, vt1.c0, vt0.c2, rt0.c1 FROM vt0, t1 RIGHT OUTER JOIN vt1 ON x'' RIGHT OUTER JOIN rt0 ON (('Ax妙\')>=(((t1.c51) ISNULL))) GROUP BY vt0.c1, rt0.c3, rt0.c4, t1.c51, rt0.c0, vt0.c0, vt1.c0, vt0.c2, rt0.c1;
SELECT * FROM vt0, vt1, rt0, t1;
SELECT ALL * FROM vt0 NOT INDEXED, vt1, rt0, t1 WHERE ((((NOT (rt0.c3))) BETWEEN (CAST(rt0.c2 AS NUMERIC)) AND ('[N'))) UNION ALL SELECT ALL * FROM vt0, vt1, rt0, t1 WHERE ((NOT ((((NOT (rt0.c3))) BETWEEN (CAST(rt0.c2 AS NUMERIC)) AND ('[N'))))) UNION ALL SELECT * FROM vt0, vt1, rt0, t1 WHERE ((((((NOT (rt0.c3))) BETWEEN (CAST(rt0.c2 AS NUMERIC)) AND ('[N'))) ISNULL));
SELECT * FROM vt0, vt1, rt0, t1;
SELECT DISTINCT vt0.c0, rt0.c4, vt0.c2, rt0.c0, vt1.c0 FROM rt0, vt1, vt0, t1;
SELECT DISTINCT vt0.c0, rt0.c4, vt0.c2, rt0.c0, vt1.c0 FROM rt0, vt1, vt0, t1 WHERE (TRIM(x'', ((rt0.c0) IS TRUE))) UNION SELECT DISTINCT vt0.c0, rt0.c4, vt0.c2, rt0.c0, vt1.c0 FROM rt0, vt1, vt0, t1 WHERE ((NOT (TRIM(x'', ((rt0.c0) IS TRUE))))) UNION SELECT DISTINCT vt0.c0, rt0.c4, vt0.c2, rt0.c0, vt1.c0 FROM rt0, vt1, vt0, t1 WHERE (((TRIM(x'', ((rt0.c0) IS TRUE))) ISNULL));
SELECT DISTINCT vt0.c0, rt0.c4, vt0.c2, rt0.c0, vt1.c0 FROM rt0, vt1, vt0, t1;
SELECT ALL t1.c51, rt0.c1, vt0.c0, vt0.c1, rt0.c0, vt1.c0, vt0.c2, rt0.c4 FROM vt0, t1, rt0, vt1 GROUP BY t1.c51, rt0.c1, vt0.c0, vt0.c1, rt0.c0, vt1.c0, vt0.c2, rt0.c4;
SELECT t1.c51, rt0.c1, vt0.c0, vt0.c1, rt0.c0, vt1.c0, vt0.c2, rt0.c4 FROM vt0, t1, rt0, vt1 WHERE (CAST(((vt0.c2)=(vt1.c0)) AS NUMERIC)) GROUP BY t1.c51, rt0.c1, vt0.c0, vt0.c1, rt0.c0, vt1.c0, vt0.c2, rt0.c4 UNION SELECT t1.c51, rt0.c1, vt0.c0, vt0.c1, rt0.c0, vt1.c0, vt0.c2, rt0.c4 FROM vt0, t1, rt0, vt1 WHERE ((NOT (CAST(((vt0.c2)=(vt1.c0)) AS NUMERIC)))) GROUP BY t1.c51, rt0.c1, vt0.c0, vt0.c1, rt0.c0, vt1.c0, vt0.c2, rt0.c4 UNION SELECT ALL t1.c51, rt0.c1, vt0.c0, vt0.c1, rt0.c0, vt1.c0, vt0.c2, rt0.c4 FROM vt0, t1, rt0, vt1 WHERE (((CAST(((vt0.c2)=(vt1.c0)) AS NUMERIC)) ISNULL)) GROUP BY t1.c51, rt0.c1, vt0.c0, vt0.c1, rt0.c0, vt1.c0, vt0.c2, rt0.c4;
SELECT ALL t1.c51, rt0.c1, vt0.c0, vt0.c1, rt0.c0, vt1.c0, vt0.c2, rt0.c4 FROM vt0, t1, rt0, vt1 GROUP BY t1.c51, rt0.c1, vt0.c0, vt0.c1, rt0.c0, vt1.c0, vt0.c2, rt0.c4;
SELECT t1.c51 FROM t1 GROUP BY t1.c51;
SELECT t1.c51 FROM t1 GROUP BY t1.c51 HAVING HEX(COUNT(*)) UNION ALL SELECT ALL t1.c51 FROM t1 GROUP BY t1.c51 HAVING (NOT (HEX(COUNT(*)))) UNION ALL SELECT ALL t1.c51 FROM t1 GROUP BY t1.c51 HAVING ((HEX(COUNT(*))) ISNULL);
SELECT t1.c51 FROM t1 GROUP BY t1.c51;
SELECT t1.c51 FROM t1 GROUP BY t1.c51 HAVING HEX(COUNT(*)) UNION ALL SELECT ALL t1.c51 FROM t1 GROUP BY t1.c51 HAVING (NOT (HEX(COUNT(*)))) UNION ALL SELECT ALL t1.c51 FROM t1 GROUP BY t1.c51 HAVING ((HEX(COUNT(*))) ISNULL);
SELECT t1.c51 FROM t1 GROUP BY t1.c51;
SELECT ALL rt0.c4, rt0.c2, rt0.c1 FROM t1 INNER JOIN rt0 ON ((TRIM(rt0.c2)) IS FALSE);
SELECT ALL rt0.c4, rt0.c2, rt0.c1 FROM t1 INNER JOIN rt0 ON ((TRIM(rt0.c2)) IS FALSE) WHERE ((((((rt0.c1))>((rt0.c3))))*((NOT (rt0.c3))))) UNION ALL SELECT ALL rt0.c4, rt0.c2, rt0.c1 FROM t1 INNER JOIN rt0 ON ((TRIM(rt0.c2)) IS FALSE) WHERE ((NOT ((((((rt0.c1))>((rt0.c3))))*((NOT (rt0.c3))))))) UNION ALL SELECT ALL rt0.c4, rt0.c2, rt0.c1 FROM t1 INNER JOIN rt0 ON ((TRIM(rt0.c2)) IS FALSE) WHERE ((((((((rt0.c1))>((rt0.c3))))*((NOT (rt0.c3))))) ISNULL));
SELECT ALL rt0.c4, rt0.c2, rt0.c1 FROM t1 INNER JOIN rt0 ON ((TRIM(rt0.c2)) IS FALSE);
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (CASE 'a<<&	''ᐻ5'  WHEN COALESCE(vt0.c1, vt0.c0) THEN ((x'')|(vt0.c1)) WHEN vt0.c0 THEN ((vt0.c2)>=(vt0.c1)) WHEN (vt0.c2 IN ()) THEN vt0.c2 COLLATE BINARY ELSE CAST(vt0.c2 AS INTEGER) END) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (CASE 'a<<&	''ᐻ5'  WHEN COALESCE(vt0.c1, vt0.c0) THEN ((x'')|(vt0.c1)) WHEN vt0.c0 THEN ((vt0.c2)>=(vt0.c1)) WHEN (vt0.c2 IN ()) THEN vt0.c2 COLLATE BINARY ELSE CAST(vt0.c2 AS INTEGER) END))) UNION SELECT DISTINCT * FROM vt0 WHERE (((CASE 'a<<&	''ᐻ5'  WHEN COALESCE(vt0.c1, vt0.c0) THEN ((x'')|(vt0.c1)) WHEN vt0.c0 THEN ((vt0.c2)>=(vt0.c1)) WHEN (vt0.c2 IN ()) THEN vt0.c2 COLLATE BINARY ELSE CAST(vt0.c2 AS INTEGER) END) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT vt0.c1, vt0.c0, vt0.c2 FROM vt0 GROUP BY vt0.c1, vt0.c0, vt0.c2;
SELECT ALL vt0.c1, vt0.c0, vt0.c2 FROM vt0 WHERE (((vt0.c0)AND(x'23db')) COLLATE RTRIM) GROUP BY vt0.c1, vt0.c0, vt0.c2 UNION SELECT vt0.c1, vt0.c0, vt0.c2 FROM vt0 WHERE ((NOT (((vt0.c0)AND(x'23db')) COLLATE RTRIM))) GROUP BY vt0.c1, vt0.c0, vt0.c2 UNION SELECT vt0.c1, vt0.c0, vt0.c2 FROM vt0 WHERE (((((vt0.c0)AND(x'23db')) COLLATE RTRIM) ISNULL)) GROUP BY vt0.c1, vt0.c0, vt0.c2;
SELECT vt0.c1, vt0.c0, vt0.c2 FROM vt0 GROUP BY vt0.c1, vt0.c0, vt0.c2;
SELECT ALL vt1.c0, t1.c51 FROM t1 FULL OUTER JOIN vt1 ON t1.c51 GROUP BY vt1.c0, t1.c51;
SELECT vt1.c0, t1.c51 FROM t1 FULL OUTER JOIN vt1 ON t1.c51 GROUP BY vt1.c0, t1.c51 HAVING MAX(MIN(vt1.c0) COLLATE RTRIM) UNION ALL SELECT vt1.c0, t1.c51 FROM t1 FULL OUTER JOIN vt1 ON t1.c51 GROUP BY vt1.c0, t1.c51 HAVING (NOT (MAX(MIN(vt1.c0) COLLATE RTRIM))) UNION ALL SELECT vt1.c0, t1.c51 FROM t1 FULL OUTER JOIN vt1 ON t1.c51 GROUP BY vt1.c0, t1.c51 HAVING ((MAX(MIN(vt1.c0) COLLATE RTRIM)) ISNULL);
SELECT ALL vt0.c2, vt0.c0, rt0.c4, vt1.c0, vt0.c1, rt0.c0, rt0.c1, rt0.c2 FROM vt1, rt0, vt0;
SELECT ALL vt0.c2, vt0.c0, rt0.c4, vt1.c0, vt0.c1, rt0.c0, rt0.c1, rt0.c2 FROM vt1, rt0, vt0 WHERE ((((vt0.c1 IN ()))/((vt0.c0 IN (rt0.c2))))) UNION ALL SELECT vt0.c2, vt0.c0, rt0.c4, vt1.c0, vt0.c1, rt0.c0, rt0.c1, rt0.c2 FROM vt1, rt0, vt0 WHERE ((NOT ((((vt0.c1 IN ()))/((vt0.c0 IN (rt0.c2))))))) UNION ALL SELECT vt0.c2, vt0.c0, rt0.c4, vt1.c0, vt0.c1, rt0.c0, rt0.c1, rt0.c2 FROM vt1, rt0, vt0 WHERE ((((((vt0.c1 IN ()))/((vt0.c0 IN (rt0.c2))))) ISNULL));
SELECT ALL vt0.c2, vt0.c0, rt0.c4, vt1.c0, vt0.c1, rt0.c0, rt0.c1, rt0.c2 FROM vt1, rt0, vt0;
SELECT DISTINCT t1.c51 FROM t1, vt1, vt0;
SELECT DISTINCT t1.c51 FROM t1, vt1, vt0 WHERE (CASE ((vt1.c0)==(t1.c51))  WHEN CAST(vt0.c1 AS TEXT) THEN ((((vt0.c1)OR(0.23524141049161051)))AND(vt0.c0)) END) UNION SELECT DISTINCT t1.c51 FROM t1, vt1, vt0 WHERE ((NOT (CASE ((vt1.c0)=(t1.c51))  WHEN CAST(vt0.c1 AS TEXT) THEN ((((vt0.c1)OR(0.23524141049161051)))AND(vt0.c0)) END))) UNION SELECT DISTINCT t1.c51 FROM t1, vt1, vt0 WHERE (((CASE ((vt1.c0)==(t1.c51))  WHEN CAST(vt0.c1 AS TEXT) THEN ((((vt0.c1)OR(0.23524141049161051)))AND(vt0.c0)) END) ISNULL));
SELECT DISTINCT t1.c51 FROM t1, vt1, vt0;
SELECT rt0.c4, rt0.c3, vt0.c2, rt0.c1 FROM rt0, vt1, vt0, t1 GROUP BY rt0.c4, rt0.c3, vt0.c2, rt0.c1;
SELECT rt0.c4, rt0.c3, vt0.c2, rt0.c1 FROM rt0, vt1, vt0, t1 WHERE (((((rt0.c1)LIKE(rt0.c4)))LIKE(((rt0.c4)LIKE(vt0.c2))))) GROUP BY rt0.c4, rt0.c3, vt0.c2, rt0.c1 UNION SELECT ALL rt0.c4, rt0.c3, vt0.c2, rt0.c1 FROM rt0, vt1, vt0, t1 WHERE ((NOT (((((rt0.c1)LIKE(rt0.c4)))LIKE(((rt0.c4)LIKE(vt0.c2))))))) GROUP BY rt0.c4, rt0.c3, vt0.c2, rt0.c1 UNION SELECT rt0.c4, rt0.c3, vt0.c2, rt0.c1 FROM rt0, vt1, vt0, t1 WHERE (((((((rt0.c1)LIKE(rt0.c4)))LIKE(((rt0.c4)LIKE(vt0.c2))))) ISNULL)) GROUP BY rt0.c4, rt0.c3, vt0.c2, rt0.c1;
SELECT rt0.c4, rt0.c3, vt0.c2, rt0.c1 FROM rt0, vt1, vt0, t1 GROUP BY rt0.c4, rt0.c3, vt0.c2, rt0.c1;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (+ (GROUP_CONCAT(TOTAL(AVG(COUNT(*)))))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT ((+ (GROUP_CONCAT(TOTAL(AVG(COUNT(*)))))))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (((+ (GROUP_CONCAT(TOTAL(AVG(COUNT(*))))))) ISNULL);
SELECT ALL vt0.c1, t1.c51, rt0.c1, rt0.c2, rt0.c4, vt0.c0, vt1.c0 FROM rt0, vt1, vt0, t1;
SELECT vt0.c1, t1.c51, rt0.c1, rt0.c2, rt0.c4, vt0.c0, vt1.c0 FROM rt0, vt1, vt0, t1 WHERE ((+ (CAST(rt0.c0 AS NUMERIC)))) UNION ALL SELECT ALL vt0.c1, t1.c51, rt0.c1, rt0.c2, rt0.c4, vt0.c0, vt1.c0 FROM rt0, vt1, vt0, t1 WHERE ((NOT ((+ (CAST(rt0.c0 AS NUMERIC)))))) UNION ALL SELECT vt0.c1, t1.c51, rt0.c1, rt0.c2, rt0.c4, vt0.c0, vt1.c0 FROM rt0, vt1, vt0, t1 WHERE ((((+ (CAST(rt0.c0 AS NUMERIC)))) ISNULL));
SELECT ALL vt0.c1, t1.c51, rt0.c1, rt0.c2, rt0.c4, vt0.c0, vt1.c0 FROM rt0, vt1, vt0, t1;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE ((((vt0.c2 COLLATE RTRIM))<((UNLIKELY(vt0.c0))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT ((((vt0.c2 COLLATE RTRIM))<((UNLIKELY(vt0.c0))))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((((((vt0.c2 COLLATE RTRIM))<((UNLIKELY(vt0.c0))))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL vt0.c2, rt0.c0, t1.c51, vt0.c0, rt0.c2, vt0.c1, vt1.c0, rt0.c1 FROM vt0, rt0, vt1, t1 GROUP BY vt0.c2, rt0.c0, t1.c51, vt0.c0, rt0.c2, vt0.c1, vt1.c0, rt0.c1;
SELECT vt0.c2, rt0.c0, t1.c51, vt0.c0, rt0.c2, vt0.c1, vt1.c0, rt0.c1 FROM vt0, rt0, vt1, t1 WHERE (((CAST(t1.c51 AS INTEGER))AND(((t1.c51)*(vt0.c2))))) GROUP BY vt0.c2, rt0.c0, t1.c51, vt0.c0, rt0.c2, vt0.c1, vt1.c0, rt0.c1 UNION SELECT ALL vt0.c2, rt0.c0, t1.c51, vt0.c0, rt0.c2, vt0.c1, vt1.c0, rt0.c1 FROM vt0, rt0, vt1, t1 WHERE ((NOT (((CAST(t1.c51 AS INTEGER))AND(((t1.c51)*(vt0.c2))))))) GROUP BY vt0.c2, rt0.c0, t1.c51, vt0.c0, rt0.c2, vt0.c1, vt1.c0, rt0.c1 UNION SELECT vt0.c2, rt0.c0, t1.c51, vt0.c0, rt0.c2, vt0.c1, vt1.c0, rt0.c1 FROM vt0, rt0, vt1, t1 WHERE (((((CAST(t1.c51 AS INTEGER))AND(((t1.c51)*(vt0.c2))))) ISNULL)) GROUP BY vt0.c2, rt0.c0, t1.c51, vt0.c0, rt0.c2, vt0.c1, vt1.c0, rt0.c1;
SELECT ALL vt0.c2, rt0.c0, t1.c51, vt0.c0, rt0.c2, vt0.c1, vt1.c0, rt0.c1 FROM vt0, rt0, vt1, t1 GROUP BY vt0.c2, rt0.c0, t1.c51, vt0.c0, rt0.c2, vt0.c1, vt1.c0, rt0.c1;
SELECT ALL vt0.c0, vt0.c2, rt0.c4 FROM rt0 INNER JOIN t1 ON '쁄1t0j' RIGHT OUTER JOIN vt1 ON ((((((((((t1.c51)OR(vt0.c0)))OR(vt0.c0)))AND(rt0.c0)))OR(vt0.c2))) NOT BETWEEN (((rt0.c4)*(rt0.c1))) AND (rt0.c0 COLLATE RTRIM)) INNER JOIN vt0 ON (- ((+ (rt0.c4)))) GROUP BY vt0.c0, vt0.c2, rt0.c4;
SELECT ALL * FROM t1 RIGHT OUTER JOIN vt0 ON ((vt0.c0 COLLATE RTRIM) BETWEEN (NULL) AND (((vt0.c1) NOTNULL)));
SELECT * FROM t1 RIGHT OUTER JOIN vt0 ON ((vt0.c0 COLLATE RTRIM) BETWEEN (NULL) AND (((vt0.c1) NOTNULL))) WHERE (CASE WHEN ((vt0.c1)GLOB(t1.c51)) THEN UNICODE(vt0.c0) ELSE ((((((((vt0.c1)AND(vt0.c0)))AND(vt0.c1)))OR(t1.c51)))OR(vt0.c2)) END) UNION ALL SELECT * FROM t1 RIGHT OUTER JOIN vt0 ON ((vt0.c0 COLLATE RTRIM) BETWEEN (NULL) AND (((vt0.c1) NOTNULL))) WHERE ((NOT (CASE WHEN ((vt0.c1)GLOB(t1.c51)) THEN UNICODE(vt0.c0) ELSE ((((((((vt0.c1)AND(vt0.c0)))AND(vt0.c1)))OR(t1.c51)))OR(vt0.c2)) END))) UNION ALL SELECT ALL * FROM t1 RIGHT OUTER JOIN vt0 ON ((vt0.c0 COLLATE RTRIM) BETWEEN (NULL) AND (((vt0.c1) NOTNULL))) WHERE (((CASE WHEN ((vt0.c1)GLOB(t1.c51)) THEN UNICODE(vt0.c0) ELSE ((((((((vt0.c1)AND(vt0.c0)))AND(vt0.c1)))OR(t1.c51)))OR(vt0.c2)) END) ISNULL));
SELECT ALL * FROM t1 RIGHT OUTER JOIN vt0 ON ((vt0.c0 COLLATE RTRIM) BETWEEN (NULL) AND (((vt0.c1) NOTNULL)));
SELECT DISTINCT * FROM rt0, t1, vt0;
SELECT DISTINCT * FROM rt0, t1, vt0 WHERE (((rt0.c3 COLLATE BINARY) NOT BETWEEN (vt0.c0 COLLATE BINARY) AND (CAST(rt0.c4 AS REAL)))) UNION SELECT DISTINCT * FROM rt0, t1, vt0 WHERE ((NOT (((rt0.c3 COLLATE BINARY) NOT BETWEEN (vt0.c0 COLLATE BINARY) AND (CAST(rt0.c4 AS REAL)))))) UNION SELECT DISTINCT * FROM rt0, t1, vt0 WHERE (((((rt0.c3 COLLATE BINARY) NOT BETWEEN (vt0.c0 COLLATE BINARY) AND (CAST(rt0.c4 AS REAL)))) ISNULL));
SELECT DISTINCT * FROM rt0, t1, vt0;
SELECT ALL vt1.c0, rt0.c0, rt0.c2, vt0.c0, vt0.c1, vt0.c2 FROM rt0, vt1, vt0 NOT INDEXED, t1 GROUP BY vt1.c0, rt0.c0, rt0.c2, vt0.c0, vt0.c1, vt0.c2;
SELECT vt1.c0, rt0.c0, rt0.c2, vt0.c0, vt0.c1, vt0.c2 FROM rt0, vt1, vt0, t1 WHERE ((((((rt0.c1)) BETWEEN ((vt0.c0)) AND ((rt0.c0))))%(rt0.c2 COLLATE NOCASE))) GROUP BY vt1.c0, rt0.c0, rt0.c2, vt0.c0, vt0.c1, vt0.c2 UNION SELECT vt1.c0, rt0.c0, rt0.c2, vt0.c0, vt0.c1, vt0.c2 FROM rt0, vt1, vt0, t1 WHERE ((NOT ((((((rt0.c1)) BETWEEN ((vt0.c0)) AND ((rt0.c0))))%(rt0.c2 COLLATE NOCASE))))) GROUP BY vt1.c0, rt0.c0, rt0.c2, vt0.c0, vt0.c1, vt0.c2 UNION SELECT vt1.c0, rt0.c0, rt0.c2, vt0.c0, vt0.c1, vt0.c2 FROM rt0, vt1, vt0, t1 WHERE ((((((((rt0.c1)) BETWEEN ((vt0.c0)) AND ((rt0.c0))))%(rt0.c2 COLLATE NOCASE))) ISNULL)) GROUP BY vt1.c0, rt0.c0, rt0.c2, vt0.c0, vt0.c1, vt0.c2;
SELECT ALL vt1.c0, rt0.c0, rt0.c2, vt0.c0, vt0.c1, vt0.c2 FROM rt0, vt1, vt0 NOT INDEXED, t1 GROUP BY vt1.c0, rt0.c0, rt0.c2, vt0.c0, vt0.c1, vt0.c2;
SELECT vt1.c0, t1.c51, vt0.c1, vt0.c2, vt0.c0 FROM vt1, vt0, t1 GROUP BY vt1.c0, t1.c51, vt0.c1, vt0.c2, vt0.c0;
SELECT ALL vt1.c0, t1.c51, vt0.c1, vt0.c2, vt0.c0 FROM vt1, vt0, t1 GROUP BY vt1.c0, t1.c51, vt0.c1, vt0.c2, vt0.c0 HAVING MAX(COUNT(*)) UNION ALL SELECT ALL vt1.c0, t1.c51, vt0.c1, vt0.c2, vt0.c0 FROM vt1, vt0, t1 GROUP BY vt1.c0, t1.c51, vt0.c1, vt0.c2, vt0.c0 HAVING (NOT (MAX(COUNT(*)))) UNION ALL SELECT ALL vt1.c0, t1.c51, vt0.c1, vt0.c2, vt0.c0 FROM vt1, vt0, t1 GROUP BY vt1.c0, t1.c51, vt0.c1, vt0.c2, vt0.c0 HAVING ((MAX(COUNT(*))) ISNULL);
SELECT * FROM vt0, t1;
SELECT ALL * FROM vt0, t1 WHERE ((((((vt0.c2, vt0.c2, vt0.c0))>((vt0.c0, t1.c51, vt0.c0)))) IS TRUE)) UNION ALL SELECT * FROM vt0, t1 WHERE ((NOT ((((((vt0.c2, vt0.c2, vt0.c0))>((vt0.c0, t1.c51, vt0.c0)))) IS TRUE)))) UNION ALL SELECT ALL * FROM vt0, t1 WHERE ((((((((vt0.c2, vt0.c2, vt0.c0))>((vt0.c0, t1.c51, vt0.c0)))) IS TRUE)) ISNULL));
SELECT * FROM vt0, t1;
SELECT DISTINCT * FROM vt0, t1, vt1, rt0;
SELECT DISTINCT * FROM vt0, t1, vt1, rt0 WHERE ((((CASE vt0.c1  WHEN rt0.c4 THEN vt0.c1 WHEN rt0.c1 THEN vt1.c0 WHEN vt0.c2 THEN rt0.c0 WHEN vt1.c0 THEN vt0.c1 WHEN rt0.c0 THEN vt1.c0 END))<>(((rt0.c2 IN ()))))) UNION SELECT DISTINCT * FROM vt0, t1, vt1, rt0 WHERE ((NOT ((((CASE vt0.c1  WHEN rt0.c4 THEN vt0.c1 WHEN rt0.c1 THEN vt1.c0 WHEN vt0.c2 THEN rt0.c0 WHEN vt1.c0 THEN vt0.c1 WHEN rt0.c0 THEN vt1.c0 END))!=(((rt0.c2 IN ()))))))) UNION SELECT DISTINCT * FROM vt0, t1, vt1, rt0 WHERE ((((((CASE vt0.c1  WHEN rt0.c4 THEN vt0.c1 WHEN rt0.c1 THEN vt1.c0 WHEN vt0.c2 THEN rt0.c0 WHEN vt1.c0 THEN vt0.c1 WHEN rt0.c0 THEN vt1.c0 END))<>(((rt0.c2 IN ()))))) ISNULL));
SELECT DISTINCT * FROM vt0, t1, vt1, rt0;
SELECT ALL vt0.c2 FROM rt0, vt0 LEFT OUTER JOIN t1 ON ((((vt0.c2) BETWEEN (NULL) AND (vt0.c2))) ISNULL) GROUP BY vt0.c2;
SELECT ALL vt0.c2 FROM rt0, vt0 LEFT OUTER JOIN t1 ON ((((vt0.c2) BETWEEN (NULL) AND (vt0.c2))) ISNULL) WHERE (((RTRIM(rt0.c1))IS((t1.c51 IN ())))) GROUP BY vt0.c2 UNION SELECT ALL vt0.c2 FROM rt0, vt0 LEFT OUTER JOIN t1 ON ((((vt0.c2) BETWEEN (NULL) AND (vt0.c2))) ISNULL) WHERE ((NOT (((RTRIM(rt0.c1))IS((t1.c51 IN ())))))) GROUP BY vt0.c2 UNION SELECT ALL vt0.c2 FROM rt0, vt0 LEFT OUTER JOIN t1 ON ((((vt0.c2) BETWEEN (NULL) AND (vt0.c2))) ISNULL) WHERE (((((RTRIM(rt0.c1))IS((t1.c51 IN ())))) ISNULL)) GROUP BY vt0.c2;
SELECT ALL vt0.c2 FROM rt0, vt0 LEFT OUTER JOIN t1 ON ((((vt0.c2) BETWEEN (NULL) AND (vt0.c2))) ISNULL) GROUP BY vt0.c2;
SELECT rt0.c2, vt0.c1, vt1.c0, rt0.c4, t1.c51, rt0.c3, rt0.c0, vt0.c0 FROM vt1, vt0 RIGHT OUTER JOIN rt0 ON ((RTRIM(rt0.c3))==(CAST(rt0.c0 AS NUMERIC))) CROSS JOIN t1 ON (((rt0.c0)) NOT BETWEEN (((+ (rt0.c4)))) AND (((((rt0.c3))<((vt0.c1)))))) GROUP BY rt0.c2, vt0.c1, vt1.c0, rt0.c4, t1.c51, rt0.c3, rt0.c0, vt0.c0;
SELECT rt0.c2, vt0.c1, vt1.c0, rt0.c4, t1.c51, rt0.c3, rt0.c0, vt0.c0 FROM vt1, vt0 RIGHT OUTER JOIN rt0 ON ((RTRIM(rt0.c3))=(CAST(rt0.c0 AS NUMERIC))) CROSS JOIN t1 ON (((rt0.c0)) NOT BETWEEN (((+ (rt0.c4)))) AND (((((rt0.c3))<((vt0.c1)))))) GROUP BY rt0.c2, vt0.c1, vt1.c0, rt0.c4, t1.c51, rt0.c3, rt0.c0, vt0.c0 HAVING AVG(SUM(MAX(rt0.c1))) UNION ALL SELECT rt0.c2, vt0.c1, vt1.c0, rt0.c4, t1.c51, rt0.c3, rt0.c0, vt0.c0 FROM vt1, vt0 RIGHT OUTER JOIN rt0 ON ((RTRIM(rt0.c3))==(CAST(rt0.c0 AS NUMERIC))) CROSS JOIN t1 ON (((rt0.c0)) NOT BETWEEN (((+ (rt0.c4)))) AND (((((rt0.c3))<((vt0.c1)))))) GROUP BY rt0.c2, vt0.c1, vt1.c0, rt0.c4, t1.c51, rt0.c3, rt0.c0, vt0.c0 HAVING (NOT (AVG(SUM(MAX(rt0.c1))))) UNION ALL SELECT ALL rt0.c2, vt0.c1, vt1.c0, rt0.c4, t1.c51, rt0.c3, rt0.c0, vt0.c0 FROM vt1, vt0 RIGHT OUTER JOIN rt0 ON ((RTRIM(rt0.c3))==(CAST(rt0.c0 AS NUMERIC))) CROSS JOIN t1 ON (((rt0.c0)) NOT BETWEEN (((+ (rt0.c4)))) AND (((((rt0.c3))<((vt0.c1)))))) GROUP BY rt0.c2, vt0.c1, vt1.c0, rt0.c4, t1.c51, rt0.c3, rt0.c0, vt0.c0 HAVING ((AVG(SUM(MAX(rt0.c1)))) ISNULL);
SELECT ALL vt1.c0 FROM vt1;
SELECT ALL vt1.c0 FROM vt1 WHERE ((x'' IN (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))) UNION ALL SELECT ALL vt1.c0 FROM vt1 NOT INDEXED WHERE ((NOT ((x'' IN (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))))) UNION ALL SELECT vt1.c0 FROM vt1 WHERE ((((x'' IN (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))) ISNULL));
SELECT ALL vt1.c0 FROM vt1;
SELECT DISTINCT * FROM t1;
SELECT DISTINCT * FROM t1 WHERE (IFNULL(DISTINCT ((((t1.c51)OR(NULL)))AND(t1.c51)), ((t1.c51) NOT BETWEEN (t1.c51) AND (t1.c51)))) UNION SELECT DISTINCT * FROM t1 WHERE ((NOT (IFNULL(DISTINCT ((((t1.c51)OR(NULL)))AND(t1.c51)), ((t1.c51) NOT BETWEEN (t1.c51) AND (t1.c51)))))) UNION SELECT DISTINCT * FROM t1 WHERE (((IFNULL(DISTINCT ((((t1.c51)OR(NULL)))AND(t1.c51)), ((t1.c51) NOT BETWEEN (t1.c51) AND (t1.c51)))) ISNULL));
SELECT DISTINCT * FROM t1;
SELECT t1.c51 FROM vt1, vt0 RIGHT OUTER JOIN t1 ON (rtreenode(vt0.c2, vt0.c2) IN ()) GROUP BY t1.c51;
SELECT t1.c51 FROM vt1, vt0 RIGHT OUTER JOIN t1 ON (rtreenode(vt0.c2, vt0.c2) IN ()) WHERE (CASE ((((t1.c51)AND(vt0.c2)))AND(t1.c51))  WHEN ((vt0.c1) IS FALSE) THEN ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c2)) ELSE CAST(vt0.c0 AS TEXT) END) GROUP BY t1.c51 UNION SELECT ALL t1.c51 FROM vt1, vt0 RIGHT OUTER JOIN t1 ON (rtreenode(vt0.c2, vt0.c2) IN ()) WHERE ((NOT (CASE ((((t1.c51)AND(vt0.c2)))AND(t1.c51))  WHEN ((vt0.c1) IS FALSE) THEN ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c2)) ELSE CAST(vt0.c0 AS TEXT) END))) GROUP BY t1.c51 UNION SELECT ALL t1.c51 FROM vt1, vt0 RIGHT OUTER JOIN t1 ON (rtreenode(vt0.c2, vt0.c2) IN ()) WHERE (((CASE ((((t1.c51)AND(vt0.c2)))AND(t1.c51))  WHEN ((vt0.c1) IS FALSE) THEN ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c2)) ELSE CAST(vt0.c0 AS TEXT) END) ISNULL)) GROUP BY t1.c51;
SELECT t1.c51 FROM vt1, vt0 RIGHT OUTER JOIN t1 ON (rtreenode(vt0.c2, vt0.c2) IN ()) GROUP BY t1.c51;
SELECT t1.c51 FROM t1 GROUP BY t1.c51;
SELECT ALL t1.c51 FROM t1 GROUP BY t1.c51 HAVING CAST(MAX(AVG(COUNT(*))) AS TEXT) UNION ALL SELECT t1.c51 FROM t1 GROUP BY t1.c51 HAVING (NOT (CAST(MAX(AVG(COUNT(*))) AS TEXT))) UNION ALL SELECT t1.c51 FROM t1 GROUP BY t1.c51 HAVING ((CAST(MAX(AVG(COUNT(*))) AS TEXT)) ISNULL);
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE ((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c2 END IN ())) UNION ALL SELECT * FROM rt0 WHERE ((NOT ((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c2 END IN ())))) UNION ALL SELECT ALL * FROM rt0 WHERE ((((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c2 END IN ())) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT * FROM rt0, t1;
SELECT DISTINCT * FROM rt0, t1 WHERE (TYPEOF(((rt0.c1)IS NOT(rt0.c2)))) UNION SELECT DISTINCT * FROM rt0, t1 WHERE ((NOT (TYPEOF(((rt0.c1)IS NOT(rt0.c2)))))) UNION SELECT DISTINCT * FROM rt0, t1 WHERE (((TYPEOF(((rt0.c1)IS NOT(rt0.c2)))) ISNULL));
SELECT DISTINCT * FROM rt0, t1;
SELECT ALL vt1.c0 FROM vt0 FULL OUTER JOIN vt1 ON ((((((((((vt1.c0)AND(rt0.c3)))AND(vt0.c1)))AND(vt0.c0)))AND(vt0.c1))) NOTNULL) RIGHT OUTER JOIN t1 ON ((INSTR(vt0.c1, rt0.c1))<<((- (vt1.c0)))) LEFT OUTER JOIN rt0 ON ((0.6646387497640113)<>((NOT (vt0.c2)))) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 FULL OUTER JOIN vt0 ON (((((((((vt1.c0 IN ()))OR((t1.c51 IN ()))))OR(((t1.c51) NOT BETWEEN (t1.c51) AND (vt1.c0)))))OR(x'9e15')))OR(CAST(vt0.c0 AS BLOB))) CROSS JOIN t1 ON ((((((vt0.c1)<>(vt0.c1)))OR(MAX(x'', vt1.c0))))OR(x'')) GROUP BY vt1.c0;
SELECT ALL * FROM vt0, rt0 INNER JOIN vt1 ON ((((vt0.c2)AND(rt0.c3)))LIKE((((NULL, vt0.c0, rt0.c3))!=((x'', vt0.c2, NULL)))));
SELECT * FROM vt0, rt0 INNER JOIN vt1 ON ((((vt0.c2)AND(rt0.c3)))LIKE((((NULL, vt0.c0, rt0.c3))!=((x'', vt0.c2, NULL))))) WHERE (CAST((rt0.c3 IN (vt1.c0)) AS TEXT)) UNION ALL SELECT * FROM vt0, rt0 INNER JOIN vt1 ON ((((vt0.c2)AND(rt0.c3)))LIKE((((NULL, vt0.c0, rt0.c3))<>((x'', vt0.c2, NULL))))) WHERE ((NOT (CAST((rt0.c3 IN (vt1.c0)) AS TEXT)))) UNION ALL SELECT * FROM vt0, rt0 INNER JOIN vt1 ON ((((vt0.c2)AND(rt0.c3)))LIKE((((NULL, vt0.c0, rt0.c3))!=((x'', vt0.c2, NULL))))) WHERE (((CAST((rt0.c3 IN (vt1.c0)) AS TEXT)) ISNULL));
SELECT ALL * FROM vt0, rt0 INNER JOIN vt1 ON ((((vt0.c2)AND(rt0.c3)))LIKE((((NULL, vt0.c0, rt0.c3))!=((x'', vt0.c2, NULL)))));
SELECT DISTINCT rt0.c2, vt0.c1, rt0.c0, rt0.c3, vt1.c0, t1.c51, vt0.c0 FROM rt0, vt1, t1 NOT INDEXED, vt0;
SELECT DISTINCT rt0.c2, vt0.c1, rt0.c0, rt0.c3, vt1.c0, t1.c51, vt0.c0 FROM rt0, vt1, t1, vt0 WHERE ((NOT (((rt0.c1)-(rt0.c0))))) UNION SELECT DISTINCT rt0.c2, vt0.c1, rt0.c0, rt0.c3, vt1.c0, t1.c51, vt0.c0 FROM rt0, vt1, t1, vt0 WHERE ((NOT ((NOT (((rt0.c1)-(rt0.c0))))))) UNION SELECT DISTINCT rt0.c2, vt0.c1, rt0.c0, rt0.c3, vt1.c0, t1.c51, vt0.c0 FROM rt0, vt1, t1, vt0 WHERE ((((NOT (((rt0.c1)-(rt0.c0))))) ISNULL));
SELECT DISTINCT rt0.c2, vt0.c1, rt0.c0, rt0.c3, vt1.c0, t1.c51, vt0.c0 FROM rt0, vt1, t1 NOT INDEXED, vt0;
SELECT ALL t1.c51 FROM t1 GROUP BY t1.c51;
SELECT ALL t1.c51 FROM t1 WHERE (CASE WHEN ((((t1.c51)OR(t1.c51)))AND(t1.c51)) THEN ((('1590448159', t1.c51, t1.c51)) BETWEEN ((t1.c51, t1.c51, t1.c51)) AND ((t1.c51, t1.c51, t1.c51))) END) GROUP BY t1.c51 UNION SELECT t1.c51 FROM t1 WHERE ((NOT (CASE WHEN ((((t1.c51)OR(t1.c51)))AND(t1.c51)) THEN ((('1590448159', t1.c51, t1.c51)) BETWEEN ((t1.c51, t1.c51, t1.c51)) AND ((t1.c51, t1.c51, t1.c51))) END))) GROUP BY t1.c51 UNION SELECT t1.c51 FROM t1 WHERE (((CASE WHEN ((((t1.c51)OR(t1.c51)))AND(t1.c51)) THEN ((('1590448159', t1.c51, t1.c51)) BETWEEN ((t1.c51, t1.c51, t1.c51)) AND ((t1.c51, t1.c51, t1.c51))) END) ISNULL)) GROUP BY t1.c51;
SELECT ALL t1.c51 FROM t1 GROUP BY t1.c51;
SELECT vt0.c1, rt0.c2, rt0.c3, vt1.c0, vt0.c0, t1.c51, rt0.c4, vt0.c2, rt0.c0 FROM rt0, vt0, vt1, t1 GROUP BY vt0.c1, rt0.c2, rt0.c3, vt1.c0, vt0.c0, t1.c51, rt0.c4, vt0.c2, rt0.c0;
SELECT ALL vt0.c1, rt0.c2, rt0.c3, vt1.c0, vt0.c0, t1.c51, rt0.c4, vt0.c2, rt0.c0 FROM rt0, vt0, vt1, t1 GROUP BY vt0.c1, rt0.c2, rt0.c3, vt1.c0, vt0.c0, t1.c51, rt0.c4, vt0.c2, rt0.c0 HAVING ((-557965709)AND(((rt0.c3) NOT BETWEEN (COUNT(MIN(rt0.c1))) AND (rt0.c2)))) UNION ALL SELECT vt0.c1, rt0.c2, rt0.c3, vt1.c0, vt0.c0, t1.c51, rt0.c4, vt0.c2, rt0.c0 FROM rt0, vt0, vt1, t1 GROUP BY vt0.c1, rt0.c2, rt0.c3, vt1.c0, vt0.c0, t1.c51, rt0.c4, vt0.c2, rt0.c0 HAVING (NOT (((-557965709)AND(((rt0.c3) NOT BETWEEN (COUNT(MIN(rt0.c1))) AND (rt0.c2)))))) UNION ALL SELECT vt0.c1, rt0.c2, rt0.c3, vt1.c0, vt0.c0, t1.c51, rt0.c4, vt0.c2, rt0.c0 FROM rt0, vt0, vt1, t1 GROUP BY vt0.c1, rt0.c2, rt0.c3, vt1.c0, vt0.c0, t1.c51, rt0.c4, vt0.c2, rt0.c0 HAVING ((((-557965709)AND(((rt0.c3) NOT BETWEEN (COUNT(MIN(rt0.c1))) AND (rt0.c2))))) ISNULL);
SELECT vt0.c1 FROM vt1, vt0, rt0;
SELECT vt0.c1 FROM vt1, vt0, rt0 WHERE ((json_extract(vt0.c2, vt0.c1) IN ())) UNION ALL SELECT vt0.c1 FROM vt1, vt0, rt0 WHERE ((NOT ((json_extract(vt0.c2, vt0.c1) IN ())))) UNION ALL SELECT vt0.c1 FROM vt1, vt0, rt0 NOT INDEXED WHERE ((((json_extract(vt0.c2, vt0.c1) IN ())) ISNULL));
SELECT vt0.c1 FROM vt1, vt0, rt0;
SELECT DISTINCT * FROM vt1, vt0;
SELECT DISTINCT * FROM vt1, vt0 WHERE (CAST(((vt0.c2) BETWEEN (vt0.c1) AND (vt0.c2)) AS TEXT)) UNION SELECT DISTINCT * FROM vt1, vt0 WHERE ((NOT (CAST(((vt0.c2) BETWEEN (vt0.c1) AND (vt0.c2)) AS TEXT)))) UNION SELECT DISTINCT * FROM vt1, vt0 WHERE (((CAST(((vt0.c2) BETWEEN (vt0.c1) AND (vt0.c2)) AS TEXT)) ISNULL));
SELECT DISTINCT * FROM vt1, vt0;
SELECT vt1.c0 FROM vt0, vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt0, vt1 WHERE (load_extension(vt0.c2, vt0.c2) COLLATE RTRIM) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt0, vt1 WHERE ((NOT (load_extension(vt0.c2, vt0.c2) COLLATE RTRIM))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt0, vt1 WHERE (((load_extension(vt0.c2, vt0.c2) COLLATE RTRIM) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (((vt1.c0)) BETWEEN ((COUNT(*))) AND ((SUM(COUNT(vt1.c0))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT ((((vt1.c0)) BETWEEN ((COUNT(*))) AND ((SUM(COUNT(vt1.c0))))))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (((((vt1.c0)) BETWEEN ((COUNT(*))) AND ((SUM(COUNT(vt1.c0)))))) ISNULL);
SELECT * FROM vt0;
SELECT * FROM vt0 WHERE (((((vt0.c0 COLLATE NOCASE)AND((0.09616659769130209 IN (vt0.c2, vt0.c2)))))AND(((vt0.c2) IS FALSE)))) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (((((vt0.c0 COLLATE NOCASE)AND((0.09616659769130209 IN (vt0.c2, vt0.c2)))))AND(((vt0.c2) IS FALSE)))))) UNION ALL SELECT ALL * FROM vt0 WHERE (((((((vt0.c0 COLLATE NOCASE)AND((0.09616659769130209 IN (vt0.c2, vt0.c2)))))AND(((vt0.c2) IS FALSE)))) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT vt0.c0, vt0.c1, vt0.c2 FROM vt0;
SELECT DISTINCT vt0.c0, vt0.c1, vt0.c2 FROM vt0 WHERE ((((vt0.c1, vt0.c1, 'COL O[S')) BETWEEN ((((((((((vt0.c0)AND(vt0.c2)))OR(vt0.c0)))OR(vt0.c2)))AND(vt0.c2)), (((vt0.c0)) NOT BETWEEN ((vt0.c2)) AND ((vt0.c2))), vt0.c1)) AND (((vt0.c2 IN ()), ((((vt0.c0)OR(vt0.c0)))OR(vt0.c2)), CASE WHEN vt0.c1 THEN vt0.c2 END)))) UNION SELECT DISTINCT vt0.c0, vt0.c1, vt0.c2 FROM vt0 WHERE ((NOT ((((vt0.c1, vt0.c1, 'COL O[S')) BETWEEN ((((((((((vt0.c0)AND(vt0.c2)))OR(vt0.c0)))OR(vt0.c2)))AND(vt0.c2)), (((vt0.c0)) NOT BETWEEN ((vt0.c2)) AND ((vt0.c2))), vt0.c1)) AND (((vt0.c2 IN ()), ((((vt0.c0)OR(vt0.c0)))OR(vt0.c2)), CASE WHEN vt0.c1 THEN vt0.c2 END)))))) UNION SELECT DISTINCT vt0.c0, vt0.c1, vt0.c2 FROM vt0 WHERE ((((((vt0.c1, vt0.c1, 'COL O[S')) BETWEEN ((((((((((vt0.c0)AND(vt0.c2)))OR(vt0.c0)))OR(vt0.c2)))AND(vt0.c2)), (((vt0.c0)) NOT BETWEEN ((vt0.c2)) AND ((vt0.c2))), vt0.c1)) AND (((vt0.c2 IN ()), ((((vt0.c0)OR(vt0.c0)))OR(vt0.c2)), CASE WHEN vt0.c1 THEN vt0.c2 END)))) ISNULL));
SELECT DISTINCT vt0.c0, vt0.c1, vt0.c2 FROM vt0;
SELECT rt0.c1 FROM rt0 INNER JOIN t1 ON (NOT (((rt0.c3) BETWEEN (rt0.c3) AND (rt0.c3)))) GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 INNER JOIN t1 ON (NOT (((rt0.c3) BETWEEN (rt0.c3) AND (rt0.c3)))) WHERE (CASE WHEN ((rt0.c1)<=(t1.c51)) THEN CAST(rt0.c4 AS BLOB) ELSE CAST(rt0.c3 AS NUMERIC) END) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0 INNER JOIN t1 ON (NOT (((rt0.c3) BETWEEN (rt0.c3) AND (rt0.c3)))) WHERE ((NOT (CASE WHEN ((rt0.c1)<=(t1.c51)) THEN CAST(rt0.c4 AS BLOB) ELSE CAST(rt0.c3 AS NUMERIC) END))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0 INNER JOIN t1 ON (NOT (((rt0.c3) BETWEEN (rt0.c3) AND (rt0.c3)))) WHERE (((CASE WHEN ((rt0.c1)<=(t1.c51)) THEN CAST(rt0.c4 AS BLOB) ELSE CAST(rt0.c3 AS NUMERIC) END) ISNULL)) GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 INNER JOIN t1 ON (NOT (((rt0.c3) BETWEEN (rt0.c3) AND (rt0.c3)))) GROUP BY rt0.c1;
SELECT ALL rt0.c0, rt0.c2, rt0.c3 FROM rt0, vt1, vt0, t1 GROUP BY rt0.c0, rt0.c2, rt0.c3;
SELECT rt0.c0, rt0.c2, rt0.c3 FROM rt0, vt1, vt0, t1 GROUP BY rt0.c0, rt0.c2, rt0.c3 HAVING RTRIM(SUM(rt0.c0)) UNION ALL SELECT ALL rt0.c0, rt0.c2, rt0.c3 FROM rt0, vt1, vt0, t1 GROUP BY rt0.c0, rt0.c2, rt0.c3 HAVING (NOT (RTRIM(SUM(rt0.c0)))) UNION ALL SELECT ALL rt0.c0, rt0.c2, rt0.c3 FROM rt0, vt1, vt0, t1 GROUP BY rt0.c0, rt0.c2, rt0.c3 HAVING ((RTRIM(SUM(rt0.c0))) ISNULL);
SELECT ALL rt0.c0, rt0.c2, rt0.c3 FROM rt0, vt1, vt0, t1 GROUP BY rt0.c0, rt0.c2, rt0.c3;
SELECT rt0.c0, rt0.c2, rt0.c3 FROM rt0, vt1, vt0, t1 GROUP BY rt0.c0, rt0.c2, rt0.c3 HAVING RTRIM(SUM(rt0.c0)) UNION ALL SELECT ALL rt0.c0, rt0.c2, rt0.c3 FROM rt0, vt1, vt0, t1 GROUP BY rt0.c0, rt0.c2, rt0.c3 HAVING (NOT (RTRIM(SUM(rt0.c0)))) UNION ALL SELECT ALL rt0.c0, rt0.c2, rt0.c3 FROM rt0, vt1, vt0, t1 GROUP BY rt0.c0, rt0.c2, rt0.c3 HAVING ((RTRIM(SUM(rt0.c0))) ISNULL);
SELECT ALL rt0.c0, rt0.c2, rt0.c3 FROM rt0, vt1, vt0, t1 GROUP BY rt0.c0, rt0.c2, rt0.c3;
SELECT rt0.c0, vt0.c0, vt0.c1, vt0.c2, rt0.c4, rt0.c1, rt0.c2 FROM rt0, vt1, vt0;
SELECT ALL rt0.c0, vt0.c0, vt0.c1, vt0.c2, rt0.c4, rt0.c1, rt0.c2 FROM rt0, vt1, vt0 WHERE (((RTRIM(vt0.c1)) BETWEEN ((~ (vt1.c0))) AND (CASE WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c4 THEN rt0.c1 ELSE vt0.c1 END))) UNION ALL SELECT rt0.c0, vt0.c0, vt0.c1, vt0.c2, rt0.c4, rt0.c1, rt0.c2 FROM rt0, vt1, vt0 WHERE ((NOT (((RTRIM(vt0.c1)) BETWEEN ((~ (vt1.c0))) AND (CASE WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c4 THEN rt0.c1 ELSE vt0.c1 END))))) UNION ALL SELECT ALL rt0.c0, vt0.c0, vt0.c1, vt0.c2, rt0.c4, rt0.c1, rt0.c2 FROM rt0, vt1, vt0 WHERE (((((RTRIM(vt0.c1)) BETWEEN ((~ (vt1.c0))) AND (CASE WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c4 THEN rt0.c1 ELSE vt0.c1 END))) ISNULL));
SELECT rt0.c0, vt0.c0, vt0.c1, vt0.c2, rt0.c4, rt0.c1, rt0.c2 FROM rt0, vt1, vt0;
SELECT DISTINCT * FROM t1, vt1, vt0;
SELECT DISTINCT * FROM t1, vt1, vt0 WHERE (((((vt0.c0)&(vt0.c0))) BETWEEN (((vt0.c1) BETWEEN ('582442507') AND (vt0.c1))) AND ('1904788309' COLLATE NOCASE))) UNION SELECT DISTINCT * FROM t1, vt1, vt0 WHERE ((NOT (((((vt0.c0)&(vt0.c0))) BETWEEN (((vt0.c1) BETWEEN ('582442507') AND (vt0.c1))) AND ('1904788309' COLLATE NOCASE))))) UNION SELECT DISTINCT * FROM t1, vt1, vt0 WHERE (((((((vt0.c0)&(vt0.c0))) BETWEEN (((vt0.c1) BETWEEN ('582442507') AND (vt0.c1))) AND ('1904788309' COLLATE NOCASE))) ISNULL));
SELECT DISTINCT * FROM t1, vt1, vt0;
SELECT vt1.c0, vt0.c1, vt0.c0, rt0.c0, rt0.c3, rt0.c2 FROM t1, rt0 INNER JOIN vt0 ON TYPEOF(((vt0.c2) NOT BETWEEN (0.8584838842225158) AND (rt0.c2))) RIGHT OUTER JOIN vt1 ON (vt0.c2 IN (rt0.c4, vt0.c1)) COLLATE RTRIM GROUP BY vt1.c0, vt0.c1, vt0.c0, rt0.c0, rt0.c3, rt0.c2;
SELECT ALL vt1.c0, vt0.c1, vt0.c0, rt0.c0, rt0.c3, rt0.c2 FROM t1, rt0 INNER JOIN vt0 ON TYPEOF(((vt0.c2) NOT BETWEEN (0.8584838842225158) AND (rt0.c2))) RIGHT OUTER JOIN vt1 ON (vt0.c2 IN (rt0.c4, vt0.c1)) COLLATE RTRIM WHERE ((-1.829891338E9 IN ())) GROUP BY vt1.c0, vt0.c1, vt0.c0, rt0.c0, rt0.c3, rt0.c2 UNION SELECT ALL vt1.c0, vt0.c1, vt0.c0, rt0.c0, rt0.c3, rt0.c2 FROM t1, rt0 INNER JOIN vt0 ON TYPEOF(((vt0.c2) NOT BETWEEN (0.8584838842225158) AND (rt0.c2))) RIGHT OUTER JOIN vt1 ON (vt0.c2 IN (rt0.c4, vt0.c1)) COLLATE RTRIM WHERE ((NOT ((-1.829891338E9 IN ())))) GROUP BY vt1.c0, vt0.c1, vt0.c0, rt0.c0, rt0.c3, rt0.c2 UNION SELECT ALL vt1.c0, vt0.c1, vt0.c0, rt0.c0, rt0.c3, rt0.c2 FROM t1, rt0 INNER JOIN vt0 ON TYPEOF(((vt0.c2) NOT BETWEEN (0.8584838842225158) AND (rt0.c2))) RIGHT OUTER JOIN vt1 ON (vt0.c2 IN (rt0.c4, vt0.c1)) COLLATE RTRIM WHERE ((((-1.829891338E9 IN ())) ISNULL)) GROUP BY vt1.c0, vt0.c1, vt0.c0, rt0.c0, rt0.c3, rt0.c2;
SELECT vt1.c0, vt0.c1, vt0.c0, rt0.c0, rt0.c3, rt0.c2 FROM t1, rt0 INNER JOIN vt0 ON TYPEOF(((vt0.c2) NOT BETWEEN (0.8584838842225158) AND (rt0.c2))) RIGHT OUTER JOIN vt1 ON (vt0.c2 IN (rt0.c4, vt0.c1)) COLLATE RTRIM GROUP BY vt1.c0, vt0.c1, vt0.c0, rt0.c0, rt0.c3, rt0.c2;
SELECT ALL t1.c51 FROM t1 GROUP BY t1.c51;
SELECT ALL t1.c51 FROM t1 GROUP BY t1.c51 HAVING ((COUNT(*))<>(((t1.c51) IS TRUE))) UNION ALL SELECT t1.c51 FROM t1 GROUP BY t1.c51 HAVING (NOT (((COUNT(*))<>(((t1.c51) IS TRUE))))) UNION ALL SELECT t1.c51 FROM t1 GROUP BY t1.c51 HAVING ((((COUNT(*))<>(((t1.c51) IS TRUE)))) ISNULL);
SELECT ALL t1.c51 FROM t1 GROUP BY t1.c51;
SELECT ALL t1.c51 FROM t1 GROUP BY t1.c51 HAVING ((COUNT(*))<>(((t1.c51) IS TRUE))) UNION ALL SELECT t1.c51 FROM t1 GROUP BY t1.c51 HAVING (NOT (((COUNT(*))<>(((t1.c51) IS TRUE))))) UNION ALL SELECT t1.c51 FROM t1 GROUP BY t1.c51 HAVING ((((COUNT(*))<>(((t1.c51) IS TRUE)))) ISNULL);
SELECT ALL t1.c51 FROM t1 GROUP BY t1.c51;
SELECT vt0.c2 FROM vt0;
SELECT vt0.c2 FROM vt0 WHERE (vt0.c2) UNION ALL SELECT ALL vt0.c2 FROM vt0 WHERE ((NOT (vt0.c2))) UNION ALL SELECT ALL vt0.c2 FROM vt0 WHERE (((vt0.c2) ISNULL));
SELECT vt0.c2 FROM vt0;
SELECT DISTINCT * FROM vt0, vt1, rt0;
SELECT DISTINCT * FROM vt0, vt1, rt0 WHERE (-1246042631) UNION SELECT DISTINCT * FROM vt0, vt1, rt0 WHERE ((NOT (-1246042631))) UNION SELECT DISTINCT * FROM vt0, vt1, rt0 WHERE (((-1246042631) ISNULL));
SELECT DISTINCT * FROM vt0, vt1, rt0;
SELECT vt0.c0, rt0.c4, rt0.c3 FROM vt0, rt0, t1 GROUP BY vt0.c0, rt0.c4, rt0.c3;
SELECT vt0.c0, rt0.c4, rt0.c3 FROM vt0, rt0, t1 WHERE ((((- (vt0.c1))) ISNULL)) GROUP BY vt0.c0, rt0.c4, rt0.c3 UNION SELECT vt0.c0, rt0.c4, rt0.c3 FROM vt0, rt0, t1 WHERE ((NOT ((((- (vt0.c1))) ISNULL)))) GROUP BY vt0.c0, rt0.c4, rt0.c3 UNION SELECT ALL vt0.c0, rt0.c4, rt0.c3 FROM vt0, rt0, t1 WHERE ((((((- (vt0.c1))) ISNULL)) ISNULL)) GROUP BY vt0.c0, rt0.c4, rt0.c3;
SELECT vt0.c0, rt0.c4, rt0.c3 FROM vt0, rt0, t1 GROUP BY vt0.c0, rt0.c4, rt0.c3;
SELECT ALL vt0.c1, vt0.c0 FROM vt1, vt0 GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt1, vt0 GROUP BY vt0.c1, vt0.c0 HAVING MAX(AVG(vt1.c0)) UNION ALL SELECT vt0.c1, vt0.c0 FROM vt1, vt0 GROUP BY vt0.c1, vt0.c0 HAVING (NOT (MAX(AVG(vt1.c0)))) UNION ALL SELECT vt0.c1, vt0.c0 FROM vt1, vt0 GROUP BY vt0.c1, vt0.c0 HAVING ((MAX(AVG(vt1.c0))) ISNULL);
SELECT ALL TOTAL(((((0.17732704656886222)LIKE(rt0.c2))) NOTNULL)) FROM rt0, vt1, t1;
SELECT * FROM vt0, vt1 LEFT OUTER JOIN rt0 ON ((((((((((((rt0.c2)AND(rt0.c0)))OR(vt0.c1)))OR(vt0.c0)))OR(vt1.c0)))AND(DATE(rt0.c0, rt0.c2, vt0.c2, rt0.c3, vt0.c2))))AND(NULL)) INNER JOIN t1 ON (((+ (x'')))<<(vt0.c1 COLLATE NOCASE));
SELECT * FROM vt0, vt1 LEFT OUTER JOIN rt0 ON ((((((((((((rt0.c2)AND(rt0.c0)))OR(vt0.c1)))OR(vt0.c0)))OR(vt1.c0)))AND(DATE(rt0.c0, rt0.c2, vt0.c2, rt0.c3, vt0.c2))))AND(NULL)) INNER JOIN t1 ON (((+ (x'')))<<(vt0.c1 COLLATE NOCASE)) WHERE (NULL) UNION ALL SELECT * FROM vt0, vt1 LEFT OUTER JOIN rt0 ON ((((((((((((rt0.c2)AND(rt0.c0)))OR(vt0.c1)))OR(vt0.c0)))OR(vt1.c0)))AND(DATE(rt0.c0, rt0.c2, vt0.c2, rt0.c3, vt0.c2))))AND(NULL)) INNER JOIN t1 ON (((+ (x'')))<<(vt0.c1 COLLATE NOCASE)) WHERE ((NOT (NULL))) UNION ALL SELECT * FROM vt0, vt1 LEFT OUTER JOIN rt0 ON ((((((((((((rt0.c2)AND(rt0.c0)))OR(vt0.c1)))OR(vt0.c0)))OR(vt1.c0)))AND(DATE(rt0.c0, rt0.c2, vt0.c2, rt0.c3, vt0.c2))))AND(NULL)) INNER JOIN t1 ON (((+ (x'')))<<(vt0.c1 COLLATE NOCASE)) WHERE (((NULL) ISNULL));
SELECT * FROM vt0, vt1 LEFT OUTER JOIN rt0 ON ((((((((((((rt0.c2)AND(rt0.c0)))OR(vt0.c1)))OR(vt0.c0)))OR(vt1.c0)))AND(DATE(rt0.c0, rt0.c2, vt0.c2, rt0.c3, vt0.c2))))AND(NULL)) INNER JOIN t1 ON (((+ (x'')))<<(vt0.c1 COLLATE NOCASE));
SELECT DISTINCT * FROM vt0, vt1, rt0;
SELECT DISTINCT * FROM vt0, vt1, rt0 WHERE ((((rt0.c4 IN (vt0.c2))) BETWEEN ((((rt0.c3))>=((vt0.c2)))) AND (LIKELIHOOD(rt0.c3, 0.008348165530028595)))) UNION SELECT DISTINCT * FROM vt0, vt1, rt0 WHERE ((NOT ((((rt0.c4 IN (vt0.c2))) BETWEEN ((((rt0.c3))>=((vt0.c2)))) AND (LIKELIHOOD(rt0.c3, 0.008348165530028595)))))) UNION SELECT DISTINCT * FROM vt0, vt1, rt0 WHERE ((((((rt0.c4 IN (vt0.c2))) BETWEEN ((((rt0.c3))>=((vt0.c2)))) AND (LIKELIHOOD(rt0.c3, 0.008348165530028595)))) ISNULL));
SELECT DISTINCT * FROM vt0, vt1, rt0;
SELECT ALL t1.c51, rt0.c2, vt1.c0 FROM t1, vt1, rt0 GROUP BY t1.c51, rt0.c2, vt1.c0;
SELECT t1.c51, rt0.c2, vt1.c0 FROM t1, vt1, rt0 WHERE (x'' COLLATE BINARY COLLATE RTRIM) GROUP BY t1.c51, rt0.c2, vt1.c0 UNION SELECT t1.c51, rt0.c2, vt1.c0 FROM t1, vt1, rt0 WHERE ((NOT (x'' COLLATE BINARY COLLATE RTRIM))) GROUP BY t1.c51, rt0.c2, vt1.c0 UNION SELECT ALL t1.c51, rt0.c2, vt1.c0 FROM t1, vt1, rt0 WHERE (((x'' COLLATE BINARY COLLATE RTRIM) ISNULL)) GROUP BY t1.c51, rt0.c2, vt1.c0;
SELECT ALL t1.c51, rt0.c2, vt1.c0 FROM t1, vt1, rt0 GROUP BY t1.c51, rt0.c2, vt1.c0;
SELECT ALL vt0.c0 FROM vt0, t1, rt0, vt1 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, t1 NOT INDEXED, rt0, vt1 GROUP BY vt0.c0 HAVING TOTAL(GROUP_CONCAT(AVG(COUNT(*)))) UNION ALL SELECT ALL vt0.c0 FROM vt0, t1, rt0, vt1 GROUP BY vt0.c0 HAVING (NOT (TOTAL(GROUP_CONCAT(AVG(COUNT(*)))))) UNION ALL SELECT ALL vt0.c0 FROM vt0, t1, rt0, vt1 GROUP BY vt0.c0 HAVING ((TOTAL(GROUP_CONCAT(AVG(COUNT(*))))) ISNULL);
SELECT ALL rt0.c3, rt0.c0, t1.c51, rt0.c1, rt0.c2 FROM rt0 LEFT OUTER JOIN vt0 ON CAST(ABS(DISTINCT rt0.c2) AS BLOB) LEFT OUTER JOIN vt1 ON json_array(((vt0.c1)|(vt0.c1)), CASE rt0.c4  WHEN t1.c51 THEN rt0.c4 END) FULL OUTER JOIN t1 ON ((LIKE(rt0.c3, t1.c51))IS NOT(((vt1.c0) NOT NULL)));
SELECT DISTINCT vt0.c0, t1.c51 FROM vt1, vt0, rt0, t1;
SELECT DISTINCT vt0.c0, t1.c51 FROM vt1, vt0, rt0, t1 WHERE ((- (((x'') NOT BETWEEN (vt1.c0) AND (rt0.c0))))) UNION SELECT DISTINCT vt0.c0, t1.c51 FROM vt1, vt0, rt0, t1 WHERE ((NOT ((- (((x'') NOT BETWEEN (vt1.c0) AND (rt0.c0))))))) UNION SELECT DISTINCT vt0.c0, t1.c51 FROM vt1, vt0, rt0, t1 WHERE ((((- (((x'') NOT BETWEEN (vt1.c0) AND (rt0.c0))))) ISNULL));
SELECT DISTINCT vt0.c0, t1.c51 FROM vt1, vt0, rt0, t1;
SELECT ALL rt0.c3, rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c3, rt0.c2, rt0.c0, rt0.c1;
SELECT rt0.c3, rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE (NULL) GROUP BY rt0.c3, rt0.c2, rt0.c0, rt0.c1 UNION SELECT ALL rt0.c3, rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (NULL))) GROUP BY rt0.c3, rt0.c2, rt0.c0, rt0.c1 UNION SELECT rt0.c3, rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE (((NULL) ISNULL)) GROUP BY rt0.c3, rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c3, rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c3, rt0.c2, rt0.c0, rt0.c1;
SELECT rt0.c2, t1.c51, rt0.c1, rt0.c3, vt1.c0 FROM t1, rt0, vt1, vt0 GROUP BY rt0.c2, t1.c51, rt0.c1, rt0.c3, vt1.c0;
SELECT rt0.c2, t1.c51, rt0.c1, rt0.c3, vt1.c0 FROM t1, rt0, vt1, vt0 GROUP BY rt0.c2, t1.c51, rt0.c1, rt0.c3, vt1.c0 HAVING CASE WHEN MAX(TOTAL(TOTAL(rt0.c0))) THEN COUNT(*) ELSE MAX(MAX(GROUP_CONCAT(SUM(COUNT(*))))) END COLLATE BINARY UNION ALL SELECT ALL rt0.c2, t1.c51, rt0.c1, rt0.c3, vt1.c0 FROM t1, rt0, vt1, vt0 GROUP BY rt0.c2, t1.c51, rt0.c1, rt0.c3, vt1.c0 HAVING (NOT (CASE WHEN MAX(TOTAL(TOTAL(rt0.c0))) THEN COUNT(*) ELSE MAX(MAX(GROUP_CONCAT(SUM(COUNT(*))))) END COLLATE BINARY)) UNION ALL SELECT ALL rt0.c2, t1.c51, rt0.c1, rt0.c3, vt1.c0 FROM t1, rt0, vt1, vt0 GROUP BY rt0.c2, t1.c51, rt0.c1, rt0.c3, vt1.c0 HAVING ((CASE WHEN MAX(TOTAL(TOTAL(rt0.c0))) THEN COUNT(*) ELSE MAX(MAX(GROUP_CONCAT(SUM(COUNT(*))))) END COLLATE BINARY) ISNULL);
SELECT rt0.c3, vt0.c1, vt0.c0, rt0.c0 FROM t1, vt1, vt0, rt0;
SELECT rt0.c3, vt0.c1, vt0.c0, rt0.c0 FROM t1, vt1, vt0, rt0 WHERE (vt1.c0) UNION ALL SELECT ALL rt0.c3, vt0.c1, vt0.c0, rt0.c0 FROM t1, vt1, vt0, rt0 WHERE ((NOT (vt1.c0))) UNION ALL SELECT rt0.c3, vt0.c1, vt0.c0, rt0.c0 FROM t1, vt1, vt0, rt0 WHERE (((vt1.c0) ISNULL));
SELECT rt0.c3, vt0.c1, vt0.c0, rt0.c0 FROM t1, vt1, vt0, rt0;
SELECT DISTINCT t1.c51, rt0.c1, rt0.c4, rt0.c3, rt0.c0 FROM rt0, t1;
SELECT DISTINCT t1.c51, rt0.c1, rt0.c4, rt0.c3, rt0.c0 FROM rt0, t1 WHERE (CASE WHEN rt0.c1 THEN CAST(rt0.c2 AS REAL) ELSE CAST(rt0.c2 AS TEXT) END) UNION SELECT DISTINCT t1.c51, rt0.c1, rt0.c4, rt0.c3, rt0.c0 FROM rt0, t1 WHERE ((NOT (CASE WHEN rt0.c1 THEN CAST(rt0.c2 AS REAL) ELSE CAST(rt0.c2 AS TEXT) END))) UNION SELECT DISTINCT t1.c51, rt0.c1, rt0.c4, rt0.c3, rt0.c0 FROM rt0, t1 WHERE (((CASE WHEN rt0.c1 THEN CAST(rt0.c2 AS REAL) ELSE CAST(rt0.c2 AS TEXT) END) ISNULL));
SELECT DISTINCT t1.c51, rt0.c1, rt0.c4, rt0.c3, rt0.c0 FROM rt0, t1;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE (LIKELIHOOD(DISTINCT LAST_INSERT_ROWID(), 0.9106194995706974)) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (LIKELIHOOD(DISTINCT LAST_INSERT_ROWID(), 0.9106194995706974)))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE (((LIKELIHOOD(DISTINCT LAST_INSERT_ROWID(), 0.9106194995706974)) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt0.c1, vt0.c2, vt0.c0 FROM vt1, vt0 GROUP BY vt0.c1, vt0.c2, vt0.c0;
SELECT vt0.c1, vt0.c2, vt0.c0 FROM vt1, vt0 GROUP BY vt0.c1, vt0.c2, vt0.c0 HAVING ((AVG(vt0.c1))>(CASE WHEN vt1.c0 THEN MAX(vt0.c0) WHEN MAX(vt0.c1) THEN 'CU' WHEN SUM(COUNT(*)) THEN vt0.c1 WHEN TOTAL(vt0.c2) THEN COUNT(*) WHEN MIN(SUM(GROUP_CONCAT(COUNT(vt0.c0)))) THEN TOTAL(COUNT(*)) ELSE vt1.c0 END)) UNION ALL SELECT vt0.c1, vt0.c2, vt0.c0 FROM vt1, vt0 GROUP BY vt0.c1, vt0.c2, vt0.c0 HAVING (NOT (((AVG(vt0.c1))>(CASE WHEN vt1.c0 THEN MAX(vt0.c0) WHEN MAX(vt0.c1) THEN 'CU' WHEN SUM(COUNT(*)) THEN vt0.c1 WHEN TOTAL(vt0.c2) THEN COUNT(*) WHEN MIN(SUM(GROUP_CONCAT(COUNT(vt0.c0)))) THEN TOTAL(COUNT(*)) ELSE vt1.c0 END)))) UNION ALL SELECT ALL vt0.c1, vt0.c2, vt0.c0 FROM vt1, vt0 GROUP BY vt0.c1, vt0.c2, vt0.c0 HAVING ((((AVG(vt0.c1))>(CASE WHEN vt1.c0 THEN MAX(vt0.c0) WHEN MAX(vt0.c1) THEN 'CU' WHEN SUM(COUNT(*)) THEN vt0.c1 WHEN TOTAL(vt0.c2) THEN COUNT(*) WHEN MIN(SUM(GROUP_CONCAT(COUNT(vt0.c0)))) THEN TOTAL(COUNT(*)) ELSE vt1.c0 END))) ISNULL);
SELECT ALL * FROM vt0;
SELECT * FROM vt0 WHERE (CAST(CAST(vt0.c0 AS NUMERIC) AS BLOB)) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (CAST(CAST(vt0.c0 AS NUMERIC) AS BLOB)))) UNION ALL SELECT ALL * FROM vt0 WHERE (((CAST(CAST(vt0.c0 AS NUMERIC) AS BLOB)) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((- (((NULL) NOT NULL)))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT ((- (((NULL) NOT NULL)))))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((((- (((NULL) NOT NULL)))) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT vt0.c1, vt0.c0, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c1, vt0.c0, vt1.c0;
SELECT vt0.c1, vt0.c0, vt1.c0 FROM vt1, vt0 WHERE (json_quote((vt0.c2 IN ()))) GROUP BY vt0.c1, vt0.c0, vt1.c0 UNION SELECT ALL vt0.c1, vt0.c0, vt1.c0 FROM vt1, vt0 WHERE ((NOT (json_quote((vt0.c2 IN ()))))) GROUP BY vt0.c1, vt0.c0, vt1.c0 UNION SELECT ALL vt0.c1, vt0.c0, vt1.c0 FROM vt1, vt0 WHERE (((json_quote((vt0.c2 IN ()))) ISNULL)) GROUP BY vt0.c1, vt0.c0, vt1.c0;
SELECT vt0.c1, vt0.c0, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c1, vt0.c0, vt1.c0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING COUNT((rt0.c1 IN ())) UNION ALL SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (NOT (COUNT((rt0.c1 IN ())))) UNION ALL SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING ((COUNT((rt0.c1 IN ()))) ISNULL);
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING COUNT((rt0.c1 IN ())) UNION ALL SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (NOT (COUNT((rt0.c1 IN ())))) UNION ALL SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING ((COUNT((rt0.c1 IN ()))) ISNULL);
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL * FROM vt1 NATURAL JOIN rt0;
SELECT ALL * FROM vt1 NATURAL JOIN rt0 WHERE ((~ (((((((((((((rt0.c4)AND(rt0.c1)))OR(rt0.c4)))OR(vt1.c0)))OR(rt0.c1)))AND(rt0.c2)))AND(rt0.c3))))) UNION ALL SELECT * FROM vt1 NATURAL JOIN rt0 WHERE ((NOT ((~ (((((((((((((rt0.c4)AND(rt0.c1)))OR(rt0.c4)))OR(vt1.c0)))OR(rt0.c1)))AND(rt0.c2)))AND(rt0.c3))))))) UNION ALL SELECT * FROM vt1 NATURAL JOIN rt0 WHERE ((((~ (((((((((((((rt0.c4)AND(rt0.c1)))OR(rt0.c4)))OR(vt1.c0)))OR(rt0.c1)))AND(rt0.c2)))AND(rt0.c3))))) ISNULL));
SELECT ALL * FROM vt1 NATURAL JOIN rt0;
SELECT DISTINCT * FROM t1, vt0;
SELECT DISTINCT * FROM t1, vt0 WHERE (((((vt0.c0)%(0.3954481007399895))) NOTNULL)) UNION SELECT DISTINCT * FROM t1, vt0 WHERE ((NOT (((((vt0.c0)%(0.3954481007399895))) NOTNULL)))) UNION SELECT DISTINCT * FROM t1, vt0 WHERE (((((((vt0.c0)%(0.3954481007399895))) NOTNULL)) ISNULL));
SELECT DISTINCT * FROM t1, vt0;
SELECT rt0.c0, rt0.c4, rt0.c1, rt0.c2, vt0.c2 FROM rt0, vt0 GROUP BY rt0.c0, rt0.c4, rt0.c1, rt0.c2, vt0.c2;
SELECT ALL rt0.c0, rt0.c4, rt0.c1, rt0.c2, vt0.c2 FROM rt0, vt0 WHERE (((rt0.c3)+((NOT (rt0.c3))))) GROUP BY rt0.c0, rt0.c4, rt0.c1, rt0.c2, vt0.c2 UNION SELECT rt0.c0, rt0.c4, rt0.c1, rt0.c2, vt0.c2 FROM rt0 NOT INDEXED, vt0 WHERE ((NOT (((rt0.c3)+((NOT (rt0.c3))))))) GROUP BY rt0.c0, rt0.c4, rt0.c1, rt0.c2, vt0.c2 UNION SELECT rt0.c0, rt0.c4, rt0.c1, rt0.c2, vt0.c2 FROM rt0 NOT INDEXED, vt0 WHERE (((((rt0.c3)+((NOT (rt0.c3))))) ISNULL)) GROUP BY rt0.c0, rt0.c4, rt0.c1, rt0.c2, vt0.c2;
SELECT rt0.c0, rt0.c4, rt0.c1, rt0.c2, vt0.c2 FROM rt0, vt0 GROUP BY rt0.c0, rt0.c4, rt0.c1, rt0.c2, vt0.c2;
SELECT t1.c51, vt1.c0 FROM vt1, t1 GROUP BY t1.c51, vt1.c0;
SELECT ALL t1.c51, vt1.c0 FROM vt1, t1 GROUP BY t1.c51, vt1.c0 HAVING MIN(CAST(SUM(vt1.c0) AS BLOB)) UNION ALL SELECT t1.c51, vt1.c0 FROM vt1, t1 GROUP BY t1.c51, vt1.c0 HAVING (NOT (MIN(CAST(SUM(vt1.c0) AS BLOB)))) UNION ALL SELECT t1.c51, vt1.c0 FROM vt1, t1 GROUP BY t1.c51, vt1.c0 HAVING ((MIN(CAST(SUM(vt1.c0) AS BLOB))) ISNULL);
SELECT MIN((((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c2))))|(((rt0.c4)>=(rt0.c0))))) FROM rt0, vt1 ORDER BY CAST('' AS NUMERIC) DESC;
SELECT vt1.c0, t1.c51 FROM vt1, t1;
SELECT ALL vt1.c0, t1.c51 FROM vt1, t1 WHERE (((((t1.c51)/(t1.c51))) NOT NULL)) UNION ALL SELECT ALL vt1.c0, t1.c51 FROM vt1, t1 WHERE ((NOT (((((t1.c51)/(t1.c51))) NOT NULL)))) UNION ALL SELECT vt1.c0, t1.c51 FROM vt1, t1 WHERE (((((((t1.c51)/(t1.c51))) NOT NULL)) ISNULL));
SELECT vt1.c0, t1.c51 FROM vt1, t1;
SELECT DISTINCT rt0.c0, rt0.c1 FROM t1, rt0, vt1;
SELECT DISTINCT rt0.c0, rt0.c1 FROM t1, rt0, vt1 WHERE (COALESCE(rt0.c1, (NOT (rt0.c4)))) UNION SELECT DISTINCT rt0.c0, rt0.c1 FROM t1, rt0, vt1 WHERE ((NOT (COALESCE(rt0.c1, (NOT (rt0.c4)))))) UNION SELECT DISTINCT rt0.c0, rt0.c1 FROM t1, rt0, vt1 WHERE (((COALESCE(rt0.c1, (NOT (rt0.c4)))) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c1 FROM t1, rt0, vt1;
SELECT ALL rt0.c0, vt1.c0, rt0.c4, t1.c51 FROM rt0, t1, vt1 GROUP BY rt0.c0, vt1.c0, rt0.c4, t1.c51;
SELECT ALL rt0.c0, vt1.c0, rt0.c4, t1.c51 FROM rt0, t1, vt1 WHERE (((rt0.c2 COLLATE RTRIM)GLOB(((rt0.c3) NOTNULL)))) GROUP BY rt0.c0, vt1.c0, rt0.c4, t1.c51 UNION SELECT rt0.c0, vt1.c0, rt0.c4, t1.c51 FROM rt0, t1, vt1 WHERE ((NOT (((rt0.c2 COLLATE RTRIM)GLOB(((rt0.c3) NOTNULL)))))) GROUP BY rt0.c0, vt1.c0, rt0.c4, t1.c51 UNION SELECT rt0.c0, vt1.c0, rt0.c4, t1.c51 FROM rt0, t1 NOT INDEXED, vt1 WHERE (((((rt0.c2 COLLATE RTRIM)GLOB(((rt0.c3) NOTNULL)))) ISNULL)) GROUP BY rt0.c0, vt1.c0, rt0.c4, t1.c51;
SELECT ALL rt0.c0, vt1.c0, rt0.c4, t1.c51 FROM rt0, t1, vt1 GROUP BY rt0.c0, vt1.c0, rt0.c4, t1.c51;
SELECT vt0.c2, rt0.c3 FROM vt0, t1, vt1, rt0 GROUP BY vt0.c2, rt0.c3;
SELECT vt0.c2, rt0.c3 FROM vt0, t1, vt1, rt0 GROUP BY vt0.c2, rt0.c3 HAVING ((AVG(AVG(t1.c51))) NOT BETWEEN (SUM(GROUP_CONCAT(AVG(COUNT(MIN(vt0.c2)))))) AND (SUM(COUNT(rt0.c3)))) UNION ALL SELECT vt0.c2, rt0.c3 FROM vt0, t1, vt1, rt0 GROUP BY vt0.c2, rt0.c3 HAVING (NOT (((AVG(AVG(t1.c51))) NOT BETWEEN (SUM(GROUP_CONCAT(AVG(COUNT(MIN(vt0.c2)))))) AND (SUM(COUNT(rt0.c3)))))) UNION ALL SELECT ALL vt0.c2, rt0.c3 FROM vt0, t1, vt1, rt0 GROUP BY vt0.c2, rt0.c3 HAVING ((((AVG(AVG(t1.c51))) NOT BETWEEN (SUM(GROUP_CONCAT(AVG(COUNT(MIN(vt0.c2)))))) AND (SUM(COUNT(rt0.c3))))) ISNULL);
SELECT vt0.c1, rt0.c0, rt0.c2, vt0.c2, vt0.c0, vt1.c0, rt0.c4, t1.c51, rt0.c3, rt0.c1 FROM t1, rt0, vt0, vt1;
SELECT vt0.c1, rt0.c0, rt0.c2, vt0.c2, vt0.c0, vt1.c0, rt0.c4, t1.c51, rt0.c3, rt0.c1 FROM t1, rt0, vt0, vt1 WHERE (((CASE WHEN rt0.c1 THEN vt0.c1 END)%(((t1.c51)!=(vt0.c2))))) UNION ALL SELECT vt0.c1, rt0.c0, rt0.c2, vt0.c2, vt0.c0, vt1.c0, rt0.c4, t1.c51, rt0.c3, rt0.c1 FROM t1, rt0, vt0, vt1 WHERE ((NOT (((CASE WHEN rt0.c1 THEN vt0.c1 END)%(((t1.c51)<>(vt0.c2))))))) UNION ALL SELECT vt0.c1, rt0.c0, rt0.c2, vt0.c2, vt0.c0, vt1.c0, rt0.c4, t1.c51, rt0.c3, rt0.c1 FROM t1, rt0, vt0, vt1 WHERE (((((CASE WHEN rt0.c1 THEN vt0.c1 END)%(((t1.c51)<>(vt0.c2))))) ISNULL));
SELECT vt0.c1, rt0.c0, rt0.c2, vt0.c2, vt0.c0, vt1.c0, rt0.c4, t1.c51, rt0.c3, rt0.c1 FROM t1, rt0, vt0, vt1;
SELECT DISTINCT rt0.c3, vt0.c2 FROM vt1, rt0, vt0;
SELECT DISTINCT rt0.c3, vt0.c2 FROM vt1, rt0, vt0 WHERE ((rt0.c2 IN ()) COLLATE NOCASE) UNION SELECT DISTINCT rt0.c3, vt0.c2 FROM vt1, rt0, vt0 WHERE ((NOT ((rt0.c2 IN ()) COLLATE NOCASE))) UNION SELECT DISTINCT rt0.c3, vt0.c2 FROM vt1, rt0, vt0 WHERE ((((rt0.c2 IN ()) COLLATE NOCASE) ISNULL));
SELECT DISTINCT rt0.c3, vt0.c2 FROM vt1, rt0, vt0;
SELECT t1.c51, vt0.c1, rt0.c0, rt0.c4 FROM rt0, t1 NATURAL JOIN vt0 GROUP BY t1.c51, vt0.c1, rt0.c0, rt0.c4;
SELECT t1.c51, vt0.c1, rt0.c0, rt0.c4 FROM rt0, t1 NATURAL JOIN vt0 WHERE ((((CASE WHEN t1.c51 THEN rt0.c4 ELSE rt0.c3 END, ((rt0.c1)-(vt0.c2)), highlight(rt0.c4, vt0.c1, rt0.c1, rt0.c3)))>(((+ (rt0.c4)), rt0.c1 COLLATE RTRIM, (((rt0.c1)) BETWEEN ((vt0.c1)) AND ((rt0.c2))))))) GROUP BY t1.c51, vt0.c1, rt0.c0, rt0.c4 UNION SELECT ALL t1.c51, vt0.c1, rt0.c0, rt0.c4 FROM rt0, t1 NATURAL JOIN vt0 WHERE ((NOT ((((CASE WHEN t1.c51 THEN rt0.c4 ELSE rt0.c3 END, ((rt0.c1)-(vt0.c2)), highlight(rt0.c4, vt0.c1, rt0.c1, rt0.c3)))>(((+ (rt0.c4)), rt0.c1 COLLATE RTRIM, (((rt0.c1)) BETWEEN ((vt0.c1)) AND ((rt0.c2))))))))) GROUP BY t1.c51, vt0.c1, rt0.c0, rt0.c4 UNION SELECT ALL t1.c51, vt0.c1, rt0.c0, rt0.c4 FROM rt0, t1 NATURAL JOIN vt0 WHERE ((((((CASE WHEN t1.c51 THEN rt0.c4 ELSE rt0.c3 END, ((rt0.c1)-(vt0.c2)), highlight(rt0.c4, vt0.c1, rt0.c1, rt0.c3)))>(((+ (rt0.c4)), rt0.c1 COLLATE RTRIM, (((rt0.c1)) BETWEEN ((vt0.c1)) AND ((rt0.c2))))))) ISNULL)) GROUP BY t1.c51, vt0.c1, rt0.c0, rt0.c4;
SELECT t1.c51, vt0.c1, rt0.c0, rt0.c4 FROM rt0, t1 NATURAL JOIN vt0 GROUP BY t1.c51, vt0.c1, rt0.c0, rt0.c4;
SELECT ALL rt0.c2, rt0.c1, vt0.c0, rt0.c4, rt0.c3, vt0.c2 FROM vt0, rt0, vt1 GROUP BY rt0.c2, rt0.c1, vt0.c0, rt0.c4, rt0.c3, vt0.c2;
SELECT rt0.c2, rt0.c1, vt0.c0, rt0.c4, rt0.c3, vt0.c2 FROM vt0, rt0, vt1 GROUP BY rt0.c2, rt0.c1, vt0.c0, rt0.c4, rt0.c3, vt0.c2 HAVING COUNT(((AVG(TOTAL(vt1.c0))) NOT NULL)) UNION ALL SELECT rt0.c2, rt0.c1, vt0.c0, rt0.c4, rt0.c3, vt0.c2 FROM vt0, rt0, vt1 GROUP BY rt0.c2, rt0.c1, vt0.c0, rt0.c4, rt0.c3, vt0.c2 HAVING (NOT (COUNT(((AVG(TOTAL(vt1.c0))) NOT NULL)))) UNION ALL SELECT rt0.c2, rt0.c1, vt0.c0, rt0.c4, rt0.c3, vt0.c2 FROM vt0, rt0, vt1 GROUP BY rt0.c2, rt0.c1, vt0.c0, rt0.c4, rt0.c3, vt0.c2 HAVING ((COUNT(((AVG(TOTAL(vt1.c0))) NOT NULL))) ISNULL);
SELECT * FROM rt0, t1, vt0;
SELECT * FROM rt0, t1, vt0 WHERE (CASE WHEN ((rt0.c1) ISNULL) THEN CAST(rt0.c3 AS TEXT) END) UNION ALL SELECT * FROM rt0, t1, vt0 WHERE ((NOT (CASE WHEN ((rt0.c1) ISNULL) THEN CAST(rt0.c3 AS TEXT) END))) UNION ALL SELECT * FROM rt0, t1, vt0 WHERE (((CASE WHEN ((rt0.c1) ISNULL) THEN CAST(rt0.c3 AS TEXT) END) ISNULL));
SELECT * FROM rt0, t1, vt0;
SELECT DISTINCT * FROM t1, rt0, vt0;
SELECT DISTINCT * FROM t1, rt0, vt0 WHERE (((((rt0.c3) IS TRUE)) NOT BETWEEN ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c2)))) AND (CASE rt0.c3  WHEN NULL THEN rt0.c3 ELSE '''n' END))) UNION SELECT DISTINCT * FROM t1, rt0, vt0 WHERE ((NOT (((((rt0.c3) IS TRUE)) NOT BETWEEN ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c2)))) AND (CASE rt0.c3  WHEN NULL THEN rt0.c3 ELSE '''n' END))))) UNION SELECT DISTINCT * FROM t1, rt0, vt0 WHERE (((((((rt0.c3) IS TRUE)) NOT BETWEEN ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c2)))) AND (CASE rt0.c3  WHEN NULL THEN rt0.c3 ELSE '''n' END))) ISNULL));
SELECT DISTINCT * FROM t1, rt0, vt0;
SELECT ALL rt0.c1, vt0.c2, vt0.c0, rt0.c0, vt1.c0, rt0.c4 FROM vt0 LEFT OUTER JOIN vt1 ON rt0.c1 COLLATE RTRIM RIGHT OUTER JOIN rt0 ON rt0.c2 GROUP BY rt0.c1, vt0.c2, vt0.c0, rt0.c0, vt1.c0, rt0.c4;
SELECT ALL rt0.c0, rt0.c1, rt0.c4, rt0.c3 FROM rt0, t1 GROUP BY rt0.c0, rt0.c1, rt0.c4, rt0.c3;
SELECT rt0.c0, rt0.c1, rt0.c4, rt0.c3 FROM rt0, t1 GROUP BY rt0.c0, rt0.c1, rt0.c4, rt0.c3 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c4, rt0.c3 FROM rt0, t1 GROUP BY rt0.c0, rt0.c1, rt0.c4, rt0.c3 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c4, rt0.c3 FROM rt0, t1 GROUP BY rt0.c0, rt0.c1, rt0.c4, rt0.c3 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c0, rt0.c1, rt0.c4, rt0.c3 FROM rt0, t1 GROUP BY rt0.c0, rt0.c1, rt0.c4, rt0.c3;
SELECT rt0.c0, rt0.c1, rt0.c4, rt0.c3 FROM rt0, t1 GROUP BY rt0.c0, rt0.c1, rt0.c4, rt0.c3 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c4, rt0.c3 FROM rt0, t1 GROUP BY rt0.c0, rt0.c1, rt0.c4, rt0.c3 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c4, rt0.c3 FROM rt0, t1 GROUP BY rt0.c0, rt0.c1, rt0.c4, rt0.c3 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c0, rt0.c1, rt0.c4, rt0.c3 FROM rt0, t1 GROUP BY rt0.c0, rt0.c1, rt0.c4, rt0.c3;
SELECT ALL vt1.c0 FROM vt1;
SELECT vt1.c0 FROM vt1 WHERE (CAST((((vt1.c0))>((vt1.c0))) AS NUMERIC)) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (CAST((((vt1.c0))>((vt1.c0))) AS NUMERIC)))) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE (((CAST((((vt1.c0))>((vt1.c0))) AS NUMERIC)) ISNULL));
SELECT ALL vt1.c0 FROM vt1;
SELECT DISTINCT vt0.c0, rt0.c4, t1.c51, rt0.c0, rt0.c2, vt0.c1, rt0.c1 FROM rt0, t1, vt0;
SELECT DISTINCT vt0.c0, rt0.c4, t1.c51, rt0.c0, rt0.c2, vt0.c1, rt0.c1 FROM rt0, t1, vt0 WHERE (CASE WHEN rt0.c0 COLLATE NOCASE THEN CAST(rt0.c3 AS REAL) WHEN rt0.c2 THEN CASE WHEN rt0.c3 THEN t1.c51 END WHEN vt0.c1 THEN ((((((((rt0.c3)OR(rt0.c0)))AND('')))OR(rt0.c0)))AND(rt0.c4)) END) UNION SELECT DISTINCT vt0.c0, rt0.c4, t1.c51, rt0.c0, rt0.c2, vt0.c1, rt0.c1 FROM rt0, t1, vt0 WHERE ((NOT (CASE WHEN rt0.c0 COLLATE NOCASE THEN CAST(rt0.c3 AS REAL) WHEN rt0.c2 THEN CASE WHEN rt0.c3 THEN t1.c51 END WHEN vt0.c1 THEN ((((((((rt0.c3)OR(rt0.c0)))AND('')))OR(rt0.c0)))AND(rt0.c4)) END))) UNION SELECT DISTINCT vt0.c0, rt0.c4, t1.c51, rt0.c0, rt0.c2, vt0.c1, rt0.c1 FROM rt0, t1, vt0 WHERE (((CASE WHEN rt0.c0 COLLATE NOCASE THEN CAST(rt0.c3 AS REAL) WHEN rt0.c2 THEN CASE WHEN rt0.c3 THEN t1.c51 END WHEN vt0.c1 THEN ((((((((rt0.c3)OR(rt0.c0)))AND('')))OR(rt0.c0)))AND(rt0.c4)) END) ISNULL));
SELECT DISTINCT vt0.c0, rt0.c4, t1.c51, rt0.c0, rt0.c2, vt0.c1, rt0.c1 FROM rt0, t1, vt0;
SELECT ALL vt1.c0, rt0.c2, t1.c51, rt0.c3, rt0.c0, rt0.c4, rt0.c1 FROM rt0, vt1, t1 GROUP BY vt1.c0, rt0.c2, t1.c51, rt0.c3, rt0.c0, rt0.c4, rt0.c1;
SELECT vt1.c0, rt0.c2, t1.c51, rt0.c3, rt0.c0, rt0.c4, rt0.c1 FROM rt0, vt1, t1 WHERE (((highlight(rt0.c1, t1.c51, rt0.c0, rt0.c1)) NOT NULL)) GROUP BY vt1.c0, rt0.c2, t1.c51, rt0.c3, rt0.c0, rt0.c4, rt0.c1 UNION SELECT vt1.c0, rt0.c2, t1.c51, rt0.c3, rt0.c0, rt0.c4, rt0.c1 FROM rt0, vt1, t1 WHERE ((NOT (((highlight(rt0.c1, t1.c51, rt0.c0, rt0.c1)) NOT NULL)))) GROUP BY vt1.c0, rt0.c2, t1.c51, rt0.c3, rt0.c0, rt0.c4, rt0.c1 UNION SELECT vt1.c0, rt0.c2, t1.c51, rt0.c3, rt0.c0, rt0.c4, rt0.c1 FROM rt0, vt1, t1 WHERE (((((highlight(rt0.c1, t1.c51, rt0.c0, rt0.c1)) NOT NULL)) ISNULL)) GROUP BY vt1.c0, rt0.c2, t1.c51, rt0.c3, rt0.c0, rt0.c4, rt0.c1;
SELECT ALL vt1.c0, rt0.c2, t1.c51, rt0.c3, rt0.c0, rt0.c4, rt0.c1 FROM rt0, vt1, t1 GROUP BY vt1.c0, rt0.c2, t1.c51, rt0.c3, rt0.c0, rt0.c4, rt0.c1;
SELECT vt0.c1, vt0.c2, t1.c51 FROM t1 RIGHT OUTER JOIN vt0 ON ((CAST(NULL AS INTEGER))LIKE(((vt0.c0) NOT BETWEEN (t1.c51) AND (vt0.c2)))) GROUP BY vt0.c1, vt0.c2, t1.c51;
SELECT ALL vt0.c1, vt0.c2, t1.c51 FROM t1 RIGHT OUTER JOIN vt0 ON ((CAST(NULL AS INTEGER))LIKE(((vt0.c0) NOT BETWEEN (t1.c51) AND (vt0.c2)))) GROUP BY vt0.c1, vt0.c2, t1.c51 HAVING COUNT(*) UNION ALL SELECT vt0.c1, vt0.c2, t1.c51 FROM t1 RIGHT OUTER JOIN vt0 ON ((CAST(NULL AS INTEGER))LIKE(((vt0.c0) NOT BETWEEN (t1.c51) AND (vt0.c2)))) GROUP BY vt0.c1, vt0.c2, t1.c51 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt0.c1, vt0.c2, t1.c51 FROM t1 RIGHT OUTER JOIN vt0 ON ((CAST(NULL AS INTEGER))LIKE(((vt0.c0) NOT BETWEEN (t1.c51) AND (vt0.c2)))) GROUP BY vt0.c1, vt0.c2, t1.c51 HAVING ((COUNT(*)) ISNULL);
SELECT vt0.c1, vt0.c2, t1.c51 FROM t1 RIGHT OUTER JOIN vt0 ON ((CAST(NULL AS INTEGER))LIKE(((vt0.c0) NOT BETWEEN (t1.c51) AND (vt0.c2)))) GROUP BY vt0.c1, vt0.c2, t1.c51;
SELECT ALL vt0.c1, vt0.c2, t1.c51 FROM t1 RIGHT OUTER JOIN vt0 ON ((CAST(NULL AS INTEGER))LIKE(((vt0.c0) NOT BETWEEN (t1.c51) AND (vt0.c2)))) GROUP BY vt0.c1, vt0.c2, t1.c51 HAVING COUNT(*) UNION ALL SELECT vt0.c1, vt0.c2, t1.c51 FROM t1 RIGHT OUTER JOIN vt0 ON ((CAST(NULL AS INTEGER))LIKE(((vt0.c0) NOT BETWEEN (t1.c51) AND (vt0.c2)))) GROUP BY vt0.c1, vt0.c2, t1.c51 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt0.c1, vt0.c2, t1.c51 FROM t1 RIGHT OUTER JOIN vt0 ON ((CAST(NULL AS INTEGER))LIKE(((vt0.c0) NOT BETWEEN (t1.c51) AND (vt0.c2)))) GROUP BY vt0.c1, vt0.c2, t1.c51 HAVING ((COUNT(*)) ISNULL);
SELECT vt0.c1, vt0.c2, t1.c51 FROM t1 RIGHT OUTER JOIN vt0 ON ((CAST(NULL AS INTEGER))LIKE(((vt0.c0) NOT BETWEEN (t1.c51) AND (vt0.c2)))) GROUP BY vt0.c1, vt0.c2, t1.c51;
SELECT ALL MAX(CASE CAST(rt0.c2 AS REAL)  WHEN ((rt0.c4)+(rt0.c0)) THEN ((rt0.c2) IS TRUE) WHEN rt0.c0 COLLATE NOCASE THEN UNICODE(rt0.c3) WHEN ((rt0.c1) BETWEEN (rt0.c4) AND (rt0.c3)) THEN rt0.c4 ELSE (((rt0.c2, rt0.c2, rt0.c3))=((rt0.c0, rt0.c0, rt0.c0))) END) FROM rt0 ORDER BY ((((((((LOWER(DISTINCT rt0.c0))AND(CAST(rt0.c1 AS REAL))))OR((+ (rt0.c4)))))OR(CASE WHEN rt0.c0 THEN rt0.c4 ELSE rt0.c2 END)))OR(((rt0.c1)-(rt0.c0)))) DESC;
SELECT rt0.c2, rt0.c4, rt0.c3, vt0.c2, t1.c51 FROM t1, vt0, rt0;
SELECT ALL rt0.c2, rt0.c4, rt0.c3, vt0.c2, t1.c51 FROM t1, vt0, rt0 WHERE (((((rt0.c3)||(rt0.c1)))<(((vt0.c2)>(rt0.c4))))) UNION ALL SELECT rt0.c2, rt0.c4, rt0.c3, vt0.c2, t1.c51 FROM t1, vt0, rt0 WHERE ((NOT (((((rt0.c3)||(rt0.c1)))<(((vt0.c2)>(rt0.c4))))))) UNION ALL SELECT rt0.c2, rt0.c4, rt0.c3, vt0.c2, t1.c51 FROM t1, vt0, rt0 WHERE (((((((rt0.c3)||(rt0.c1)))<(((vt0.c2)>(rt0.c4))))) ISNULL));
SELECT rt0.c2, rt0.c4, rt0.c3, vt0.c2, t1.c51 FROM t1, vt0, rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((((rt0.c3)!=(rt0.c1)) IN ((- (NULL)), CAST(x'' AS REAL)))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((((rt0.c3)!=(rt0.c1)) IN ((- (NULL)), CAST(x'' AS REAL)))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((((rt0.c3)<>(rt0.c1)) IN ((- (NULL)), CAST(x'' AS REAL)))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL t1.c51, rt0.c1, vt0.c0, rt0.c3, vt0.c1 FROM t1 LEFT OUTER JOIN rt0 ON (((((vt0.c2 IN ()))OR((t1.c51 IN ()))))OR((+ (rt0.c1)))) CROSS JOIN vt0 ON ((vt0.c1) BETWEEN (CASE rt0.c2  WHEN rt0.c3 THEN vt0.c0 END) AND (((((rt0.c1)OR(vt0.c2)))OR(vt0.c1)))) GROUP BY t1.c51, rt0.c1, vt0.c0, rt0.c3, vt0.c1;
SELECT ALL t1.c51, rt0.c1, vt0.c0, rt0.c3, vt0.c1 FROM t1 LEFT OUTER JOIN rt0 ON (((((vt0.c2 IN ()))OR((t1.c51 IN ()))))OR((+ (rt0.c1)))) CROSS JOIN vt0 ON ((vt0.c1) BETWEEN (CASE rt0.c2  WHEN rt0.c3 THEN vt0.c0 END) AND (((((rt0.c1)OR(vt0.c2)))OR(vt0.c1)))) WHERE (CAST(((((((((rt0.c0)AND(rt0.c4)))AND(NULL)))OR(t1.c51)))OR(t1.c51)) AS TEXT)) GROUP BY t1.c51, rt0.c1, vt0.c0, rt0.c3, vt0.c1 UNION SELECT ALL t1.c51, rt0.c1, vt0.c0, rt0.c3, vt0.c1 FROM t1 LEFT OUTER JOIN rt0 ON (((((vt0.c2 IN ()))OR((t1.c51 IN ()))))OR((+ (rt0.c1)))) CROSS JOIN vt0 ON ((vt0.c1) BETWEEN (CASE rt0.c2  WHEN rt0.c3 THEN vt0.c0 END) AND (((((rt0.c1)OR(vt0.c2)))OR(vt0.c1)))) WHERE ((NOT (CAST(((((((((rt0.c0)AND(rt0.c4)))AND(NULL)))OR(t1.c51)))OR(t1.c51)) AS TEXT)))) GROUP BY t1.c51, rt0.c1, vt0.c0, rt0.c3, vt0.c1 UNION SELECT t1.c51, rt0.c1, vt0.c0, rt0.c3, vt0.c1 FROM t1 LEFT OUTER JOIN rt0 ON (((((vt0.c2 IN ()))OR((t1.c51 IN ()))))OR((+ (rt0.c1)))) CROSS JOIN vt0 ON ((vt0.c1) BETWEEN (CASE rt0.c2  WHEN rt0.c3 THEN vt0.c0 END) AND (((((rt0.c1)OR(vt0.c2)))OR(vt0.c1)))) WHERE (((CAST(((((((((rt0.c0)AND(rt0.c4)))AND(NULL)))OR(t1.c51)))OR(t1.c51)) AS TEXT)) ISNULL)) GROUP BY t1.c51, rt0.c1, vt0.c0, rt0.c3, vt0.c1;
SELECT ALL t1.c51, rt0.c1, vt0.c0, rt0.c3, vt0.c1 FROM t1 LEFT OUTER JOIN rt0 ON (((((vt0.c2 IN ()))OR((t1.c51 IN ()))))OR((+ (rt0.c1)))) CROSS JOIN vt0 ON ((vt0.c1) BETWEEN (CASE rt0.c2  WHEN rt0.c3 THEN vt0.c0 END) AND (((((rt0.c1)OR(vt0.c2)))OR(vt0.c1)))) GROUP BY t1.c51, rt0.c1, vt0.c0, rt0.c3, vt0.c1;
SELECT ALL t1.c51 FROM t1 GROUP BY t1.c51;
SELECT t1.c51 FROM t1 GROUP BY t1.c51 HAVING TOTAL(((COUNT(TOTAL(t1.c51)))==(t1.c51))) UNION ALL SELECT t1.c51 FROM t1 GROUP BY t1.c51 HAVING (NOT (TOTAL(((COUNT(TOTAL(t1.c51)))==(t1.c51))))) UNION ALL SELECT t1.c51 FROM t1 GROUP BY t1.c51 HAVING ((TOTAL(((COUNT(TOTAL(t1.c51)))=(t1.c51)))) ISNULL);
SELECT * FROM vt1;
SELECT ALL * FROM vt1 WHERE ((((CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))!=((((x'')==(vt1.c0)))))) UNION ALL SELECT * FROM vt1 WHERE ((NOT ((((CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))<>((((x'')=(vt1.c0)))))))) UNION ALL SELECT ALL * FROM vt1 WHERE ((((((CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))!=((((x'')==(vt1.c0)))))) ISNULL));
SELECT * FROM vt1;
SELECT DISTINCT rt0.c3, rt0.c2, t1.c51, vt0.c2, vt0.c0, vt0.c1, vt1.c0, rt0.c4 FROM vt1, t1, vt0, rt0;
SELECT DISTINCT rt0.c3, rt0.c2, t1.c51, vt0.c2, vt0.c0, vt0.c1, vt1.c0, rt0.c4 FROM vt1, t1, vt0, rt0 WHERE (CAST(((vt1.c0)<<(rt0.c0)) AS BLOB)) UNION SELECT DISTINCT rt0.c3, rt0.c2, t1.c51, vt0.c2, vt0.c0, vt0.c1, vt1.c0, rt0.c4 FROM vt1, t1, vt0, rt0 WHERE ((NOT (CAST(((vt1.c0)<<(rt0.c0)) AS BLOB)))) UNION SELECT DISTINCT rt0.c3, rt0.c2, t1.c51, vt0.c2, vt0.c0, vt0.c1, vt1.c0, rt0.c4 FROM vt1, t1, vt0, rt0 WHERE (((CAST(((vt1.c0)<<(rt0.c0)) AS BLOB)) ISNULL));
SELECT DISTINCT rt0.c3, rt0.c2, t1.c51, vt0.c2, vt0.c0, vt0.c1, vt1.c0, rt0.c4 FROM vt1, t1, vt0, rt0;
SELECT ALL vt0.c0, vt0.c1, vt0.c2, rt0.c0 FROM vt1, vt0, t1 NATURAL JOIN rt0 GROUP BY vt0.c0, vt0.c1, vt0.c2, rt0.c0;
SELECT ALL vt0.c0, vt0.c1, vt0.c2, rt0.c0 FROM vt1, vt0, t1 NATURAL JOIN rt0 WHERE (CAST(((t1.c51) ISNULL) AS INTEGER)) GROUP BY vt0.c0, vt0.c1, vt0.c2, rt0.c0 UNION SELECT ALL vt0.c0, vt0.c1, vt0.c2, rt0.c0 FROM vt1, vt0, t1 NATURAL JOIN rt0 WHERE ((NOT (CAST(((t1.c51) ISNULL) AS INTEGER)))) GROUP BY vt0.c0, vt0.c1, vt0.c2, rt0.c0 UNION SELECT ALL vt0.c0, vt0.c1, vt0.c2, rt0.c0 FROM vt1, vt0, t1 NATURAL JOIN rt0 WHERE (((CAST(((t1.c51) ISNULL) AS INTEGER)) ISNULL)) GROUP BY vt0.c0, vt0.c1, vt0.c2, rt0.c0;
SELECT ALL vt0.c0, vt0.c1, vt0.c2, rt0.c0 FROM vt1, vt0, t1 NATURAL JOIN rt0 GROUP BY vt0.c0, vt0.c1, vt0.c2, rt0.c0;
SELECT rt0.c4, rt0.c0, rt0.c3, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c4, rt0.c0, rt0.c3, rt0.c2, rt0.c1;
SELECT ALL rt0.c4, rt0.c0, rt0.c3, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c4, rt0.c0, rt0.c3, rt0.c2, rt0.c1 HAVING ((CAST(rt0.c4 AS TEXT)) NOT BETWEEN (((((rt0.c4)AND(rt0.c2)))AND(COUNT(rt0.c3)))) AND (((GROUP_CONCAT(COUNT(*))) IS FALSE))) UNION ALL SELECT ALL rt0.c4, rt0.c0, rt0.c3, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c4, rt0.c0, rt0.c3, rt0.c2, rt0.c1 HAVING (NOT (((CAST(rt0.c4 AS TEXT)) NOT BETWEEN (((((rt0.c4)AND(rt0.c2)))AND(COUNT(rt0.c3)))) AND (((GROUP_CONCAT(COUNT(*))) IS FALSE))))) UNION ALL SELECT rt0.c4, rt0.c0, rt0.c3, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c4, rt0.c0, rt0.c3, rt0.c2, rt0.c1 HAVING ((((CAST(rt0.c4 AS TEXT)) NOT BETWEEN (((((rt0.c4)AND(rt0.c2)))AND(COUNT(rt0.c3)))) AND (((GROUP_CONCAT(COUNT(*))) IS FALSE)))) ISNULL);
SELECT MAX(((((vt0.c2)LIKE(vt0.c0))) BETWEEN (vt1.c0 COLLATE NOCASE) AND ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c2)))))) FROM t1, vt1, vt0;
SELECT ALL vt1.c0 FROM vt1;
SELECT vt1.c0 FROM vt1 WHERE ((((((vt1.c0, vt1.c0, x''))>=((0.05893868026761495, vt1.c0, vt1.c0))))>=(CASE WHEN vt1.c0 THEN vt1.c0 END))) UNION ALL SELECT vt1.c0 FROM vt1 WHERE ((NOT ((((((vt1.c0, vt1.c0, x''))>=((0.05893868026761495, vt1.c0, vt1.c0))))>=(CASE WHEN vt1.c0 THEN vt1.c0 END))))) UNION ALL SELECT vt1.c0 FROM vt1 WHERE ((((((((vt1.c0, vt1.c0, x''))>=((0.05893868026761495, vt1.c0, vt1.c0))))>=(CASE WHEN vt1.c0 THEN vt1.c0 END))) ISNULL));
SELECT ALL vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0, rt0.c0, rt0.c2, rt0.c4, rt0.c3, rt0.c1 FROM vt1, rt0;
SELECT DISTINCT vt1.c0, rt0.c0, rt0.c2, rt0.c4, rt0.c3, rt0.c1 FROM vt1, rt0 WHERE (((((vt1.c0)IS(rt0.c2)))/(((((rt0.c2)OR('')))OR(rt0.c0))))) UNION SELECT DISTINCT vt1.c0, rt0.c0, rt0.c2, rt0.c4, rt0.c3, rt0.c1 FROM vt1, rt0 WHERE ((NOT (((((vt1.c0)IS(rt0.c2)))/(((((rt0.c2)OR('')))OR(rt0.c0))))))) UNION SELECT DISTINCT vt1.c0, rt0.c0, rt0.c2, rt0.c4, rt0.c3, rt0.c1 FROM vt1, rt0 WHERE (((((((vt1.c0)IS(rt0.c2)))/(((((rt0.c2)OR('')))OR(rt0.c0))))) ISNULL));
SELECT DISTINCT vt1.c0, rt0.c0, rt0.c2, rt0.c4, rt0.c3, rt0.c1 FROM vt1, rt0;
SELECT t1.c51 FROM t1 GROUP BY t1.c51;
SELECT ALL t1.c51 FROM t1 WHERE (COALESCE(DISTINCT ((((t1.c51)OR(t1.c51)))OR(t1.c51)), CASE t1.c51  WHEN t1.c51 THEN '/S名뤂' ELSE t1.c51 END)) GROUP BY t1.c51 UNION SELECT t1.c51 FROM t1 WHERE ((NOT (COALESCE(DISTINCT ((((t1.c51)OR(t1.c51)))OR(t1.c51)), CASE t1.c51  WHEN t1.c51 THEN '/S名뤂' ELSE t1.c51 END)))) GROUP BY t1.c51 UNION SELECT ALL t1.c51 FROM t1 WHERE (((COALESCE(DISTINCT ((((t1.c51)OR(t1.c51)))OR(t1.c51)), CASE t1.c51  WHEN t1.c51 THEN '/S名뤂' ELSE t1.c51 END)) ISNULL)) GROUP BY t1.c51;
SELECT t1.c51 FROM t1 GROUP BY t1.c51;
SELECT ALL t1.c51, rt0.c2 FROM t1, vt1, rt0 GROUP BY t1.c51, rt0.c2;
SELECT t1.c51, rt0.c2 FROM t1, vt1, rt0 GROUP BY t1.c51, rt0.c2 HAVING MAX((- (rt0.c0))) UNION ALL SELECT ALL t1.c51, rt0.c2 FROM t1, vt1, rt0 GROUP BY t1.c51, rt0.c2 HAVING (NOT (MAX((- (rt0.c0))))) UNION ALL SELECT ALL t1.c51, rt0.c2 FROM t1, vt1, rt0 GROUP BY t1.c51, rt0.c2 HAVING ((MAX((- (rt0.c0)))) ISNULL);
SELECT ALL t1.c51, rt0.c2 FROM t1, vt1, rt0 GROUP BY t1.c51, rt0.c2;
SELECT t1.c51, rt0.c2 FROM t1, vt1, rt0 GROUP BY t1.c51, rt0.c2 HAVING MAX((- (rt0.c0))) UNION ALL SELECT ALL t1.c51, rt0.c2 FROM t1, vt1, rt0 GROUP BY t1.c51, rt0.c2 HAVING (NOT (MAX((- (rt0.c0))))) UNION ALL SELECT ALL t1.c51, rt0.c2 FROM t1, vt1, rt0 GROUP BY t1.c51, rt0.c2 HAVING ((MAX((- (rt0.c0)))) ISNULL);
SELECT ALL t1.c51, rt0.c2 FROM t1, vt1, rt0 GROUP BY t1.c51, rt0.c2;
SELECT rt0.c3, vt1.c0, rt0.c0, rt0.c4, rt0.c1, t1.c51, vt0.c0 FROM vt1, t1, vt0, rt0;
SELECT ALL rt0.c3, vt1.c0, rt0.c0, rt0.c4, rt0.c1, t1.c51, vt0.c0 FROM vt1, t1, vt0, rt0 WHERE ((((- (vt0.c1))) ISNULL)) UNION ALL SELECT ALL rt0.c3, vt1.c0, rt0.c0, rt0.c4, rt0.c1, t1.c51, vt0.c0 FROM vt1, t1, vt0, rt0 WHERE ((NOT ((((- (vt0.c1))) ISNULL)))) UNION ALL SELECT ALL rt0.c3, vt1.c0, rt0.c0, rt0.c4, rt0.c1, t1.c51, vt0.c0 FROM vt1, t1, vt0, rt0 WHERE ((((((- (vt0.c1))) ISNULL)) ISNULL));
SELECT rt0.c3, vt1.c0, rt0.c0, rt0.c4, rt0.c1, t1.c51, vt0.c0 FROM vt1, t1, vt0, rt0;
SELECT DISTINCT * FROM vt1, t1, vt0, rt0;
SELECT DISTINCT * FROM vt1, t1, vt0, rt0 WHERE (((((rt0.c3)<=(NULL)))>(((vt1.c0) NOT BETWEEN (vt0.c1) AND (t1.c51))))) UNION SELECT DISTINCT * FROM vt1, t1, vt0, rt0 WHERE ((NOT (((((rt0.c3)<=(NULL)))>(((vt1.c0) NOT BETWEEN (vt0.c1) AND (t1.c51))))))) UNION SELECT DISTINCT * FROM vt1, t1, vt0, rt0 WHERE (((((((rt0.c3)<=(NULL)))>(((vt1.c0) NOT BETWEEN (vt0.c1) AND (t1.c51))))) ISNULL));
SELECT DISTINCT * FROM vt1, t1, vt0, rt0;
SELECT ALL t1.c51 FROM vt1, rt0, t1, vt0 GROUP BY t1.c51;
SELECT ALL t1.c51 FROM vt1, rt0, t1, vt0 WHERE (((LOWER(DISTINCT rt0.c3)) NOT BETWEEN (((((rt0.c1)AND(rt0.c2)))AND(t1.c51))) AND (HEX(vt0.c1)))) GROUP BY t1.c51 UNION SELECT ALL t1.c51 FROM vt1, rt0, t1, vt0 WHERE ((NOT (((LOWER(DISTINCT rt0.c3)) NOT BETWEEN (((((rt0.c1)AND(rt0.c2)))AND(t1.c51))) AND (HEX(vt0.c1)))))) GROUP BY t1.c51 UNION SELECT ALL t1.c51 FROM vt1, rt0, t1, vt0 WHERE (((((LOWER(DISTINCT rt0.c3)) NOT BETWEEN (((((rt0.c1)AND(rt0.c2)))AND(t1.c51))) AND (HEX(vt0.c1)))) ISNULL)) GROUP BY t1.c51;
SELECT ALL t1.c51 FROM vt1, rt0, t1, vt0 GROUP BY t1.c51;
SELECT rt0.c2, rt0.c0, vt0.c2, rt0.c4, vt1.c0 FROM vt0 FULL OUTER JOIN vt1 ON (NOT (((rt0.c0)%(rt0.c1)))) INNER JOIN rt0 ON TRIM((rt0.c4 IN ())) GROUP BY rt0.c2, rt0.c0, vt0.c2, rt0.c4, vt1.c0;
SELECT ALL rt0.c4, vt0.c2, vt0.c1 FROM vt1, t1, vt0, rt0;
SELECT ALL rt0.c4, vt0.c2, vt0.c1 FROM vt1, t1, vt0, rt0 WHERE (vt0.c0 COLLATE RTRIM) UNION ALL SELECT rt0.c4, vt0.c2, vt0.c1 FROM vt1, t1, vt0, rt0 WHERE ((NOT (vt0.c0 COLLATE RTRIM))) UNION ALL SELECT rt0.c4, vt0.c2, vt0.c1 FROM vt1, t1, vt0, rt0 WHERE (((vt0.c0 COLLATE RTRIM) ISNULL));
SELECT ALL rt0.c4, vt0.c2, vt0.c1 FROM vt1, t1, vt0, rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((((LIKELY(DISTINCT rt0.c4), CASE rt0.c0  WHEN rt0.c3 THEN rt0.c4 END, rt0.c2, ((((rt0.c4)OR(rt0.c0)))OR(rt0.c1)), x''))==((CAST(rt0.c3 AS BLOB), ((((rt0.c4)OR(rt0.c1)))AND(rt0.c0)), ((((((((((((rt0.c3)AND(rt0.c2)))AND(rt0.c1)))OR(rt0.c0)))OR(rt0.c2)))AND(rt0.c4)))OR(rt0.c4)), ((rt0.c3)/(rt0.c3)), ((rt0.c3) BETWEEN (rt0.c4) AND (rt0.c2)))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((((LIKELY(DISTINCT rt0.c4), CASE rt0.c0  WHEN rt0.c3 THEN rt0.c4 END, rt0.c2, ((((rt0.c4)OR(rt0.c0)))OR(rt0.c1)), x''))=((CAST(rt0.c3 AS BLOB), ((((rt0.c4)OR(rt0.c1)))AND(rt0.c0)), ((((((((((((rt0.c3)AND(rt0.c2)))AND(rt0.c1)))OR(rt0.c0)))OR(rt0.c2)))AND(rt0.c4)))OR(rt0.c4)), ((rt0.c3)/(rt0.c3)), ((rt0.c3) BETWEEN (rt0.c4) AND (rt0.c2)))))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((((LIKELY(DISTINCT rt0.c4), CASE rt0.c0  WHEN rt0.c3 THEN rt0.c4 END, rt0.c2, ((((rt0.c4)OR(rt0.c0)))OR(rt0.c1)), x''))==((CAST(rt0.c3 AS BLOB), ((((rt0.c4)OR(rt0.c1)))AND(rt0.c0)), ((((((((((((rt0.c3)AND(rt0.c2)))AND(rt0.c1)))OR(rt0.c0)))OR(rt0.c2)))AND(rt0.c4)))OR(rt0.c4)), ((rt0.c3)/(rt0.c3)), ((rt0.c3) BETWEEN (rt0.c4) AND (rt0.c2)))))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c2, rt0.c4, vt0.c1, vt0.c0, rt0.c0, t1.c51, vt0.c2 FROM t1, rt0, vt0 GROUP BY rt0.c2, rt0.c4, vt0.c1, vt0.c0, rt0.c0, t1.c51, vt0.c2;
SELECT rt0.c2, rt0.c4, vt0.c1, vt0.c0, rt0.c0, t1.c51, vt0.c2 FROM t1, rt0, vt0 WHERE ('') GROUP BY rt0.c2, rt0.c4, vt0.c1, vt0.c0, rt0.c0, t1.c51, vt0.c2 UNION SELECT ALL rt0.c2, rt0.c4, vt0.c1, vt0.c0, rt0.c0, t1.c51, vt0.c2 FROM t1, rt0, vt0 WHERE ((NOT (''))) GROUP BY rt0.c2, rt0.c4, vt0.c1, vt0.c0, rt0.c0, t1.c51, vt0.c2 UNION SELECT rt0.c2, rt0.c4, vt0.c1, vt0.c0, rt0.c0, t1.c51, vt0.c2 FROM t1, rt0, vt0 WHERE ((('') ISNULL)) GROUP BY rt0.c2, rt0.c4, vt0.c1, vt0.c0, rt0.c0, t1.c51, vt0.c2;
SELECT rt0.c2, rt0.c4, vt0.c1, vt0.c0, rt0.c0, t1.c51, vt0.c2 FROM t1, rt0, vt0 GROUP BY rt0.c2, rt0.c4, vt0.c1, vt0.c0, rt0.c0, t1.c51, vt0.c2;
SELECT t1.c51 FROM t1 GROUP BY t1.c51;
SELECT t1.c51 FROM t1 GROUP BY t1.c51 HAVING SUM(AVG(NULL)) UNION ALL SELECT t1.c51 FROM t1 GROUP BY t1.c51 HAVING (NOT (SUM(AVG(NULL)))) UNION ALL SELECT t1.c51 FROM t1 GROUP BY t1.c51 HAVING ((SUM(AVG(NULL))) ISNULL);
SELECT ALL * FROM vt1;
SELECT ALL * FROM vt1 WHERE (CAST(((((vt1.c0)AND(vt1.c0)))OR(0.23658667161184044)) AS NUMERIC)) UNION ALL SELECT ALL * FROM vt1 WHERE ((NOT (CAST(((((vt1.c0)AND(vt1.c0)))OR(0.23658667161184044)) AS NUMERIC)))) UNION ALL SELECT * FROM vt1 WHERE (((CAST(((((vt1.c0)AND(vt1.c0)))OR(0.23658667161184044)) AS NUMERIC)) ISNULL));
SELECT ALL * FROM vt1;
SELECT DISTINCT rt0.c4, vt0.c0 FROM t1, vt0, rt0, vt1;
SELECT DISTINCT rt0.c4, vt0.c0 FROM t1, vt0, rt0, vt1 WHERE ((((t1.c51))<=((CASE rt0.c2  WHEN rt0.c3 THEN rt0.c2 END)))) UNION SELECT DISTINCT rt0.c4, vt0.c0 FROM t1, vt0, rt0, vt1 WHERE ((NOT ((((t1.c51))<=((CASE rt0.c2  WHEN rt0.c3 THEN rt0.c2 END)))))) UNION SELECT DISTINCT rt0.c4, vt0.c0 FROM t1, vt0, rt0, vt1 WHERE ((((((t1.c51))<=((CASE rt0.c2  WHEN rt0.c3 THEN rt0.c2 END)))) ISNULL));
SELECT DISTINCT rt0.c4, vt0.c0 FROM t1, vt0, rt0, vt1;
SELECT ALL rt0.c0, t1.c51, vt0.c1, rt0.c1, vt1.c0 FROM rt0 LEFT OUTER JOIN vt0 ON (('790792449') BETWEEN (((vt0.c1)LIKE(0Xffffffffc4330ff7))) AND (CASE WHEN vt1.c0 THEN vt0.c2 END)) CROSS JOIN t1 ON (~ (((((vt0.c1)OR(vt0.c1)))OR(vt1.c0)))) INNER JOIN vt1 ON ((0.672896383754478) BETWEEN (CAST(vt0.c2 AS REAL)) AND (((vt1.c0)<=(rt0.c2)))) GROUP BY rt0.c0, t1.c51, vt0.c1, rt0.c1, vt1.c0;
SELECT ALL vt0.c1 FROM rt0, vt0, t1 GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM rt0, vt0, t1 GROUP BY vt0.c1 HAVING (((((rt0.c2 IN (rt0.c0, NULL)))OR(MIN(vt0.c1))))OR(CASE rt0.c0  WHEN x'' THEN rt0.c0 WHEN AVG(COUNT(*)) THEN rt0.c3 WHEN MIN(rt0.c2) THEN vt0.c2 END)) UNION ALL SELECT vt0.c1 FROM rt0, vt0, t1 GROUP BY vt0.c1 HAVING (NOT ((((((rt0.c2 IN (rt0.c0, NULL)))OR(MIN(vt0.c1))))OR(CASE rt0.c0  WHEN x'' THEN rt0.c0 WHEN AVG(COUNT(*)) THEN rt0.c3 WHEN MIN(rt0.c2) THEN vt0.c2 END)))) UNION ALL SELECT vt0.c1 FROM rt0, vt0, t1 GROUP BY vt0.c1 HAVING (((((((rt0.c2 IN (rt0.c0, NULL)))OR(MIN(vt0.c1))))OR(CASE rt0.c0  WHEN x'' THEN rt0.c0 WHEN AVG(COUNT(*)) THEN rt0.c3 WHEN MIN(rt0.c2) THEN vt0.c2 END))) ISNULL);
SELECT ALL t1.c51 FROM t1;
SELECT ALL t1.c51 FROM t1 WHERE (CASE WHEN ((t1.c51)IS NOT(t1.c51)) THEN ((t1.c51)>(t1.c51)) WHEN SQLITE_SOURCE_ID() THEN CAST(t1.c51 AS REAL) WHEN json_quote(t1.c51) THEN '723604835' END) ORDER BY CAST(CAST(t1.c51 AS REAL) AS TEXT), 6.98061171E8 DESC, ((- (t1.c51)) IN (((t1.c51) IS TRUE), ((((((((t1.c51)AND(t1.c51)))OR(t1.c51)))AND(t1.c51)))AND(t1.c51)))) ASC  NULLS LAST;
SELECT ALL t1.c51 FROM t1 WHERE ((NOT (CASE WHEN ((t1.c51)IS NOT(t1.c51)) THEN ((t1.c51)>(t1.c51)) WHEN SQLITE_SOURCE_ID() THEN CAST(t1.c51 AS REAL) WHEN json_quote(t1.c51) THEN '723604835' END))) ORDER BY CAST(CAST(t1.c51 AS REAL) AS TEXT), 6.98061171E8 DESC, ((- (t1.c51)) IN (((t1.c51) IS TRUE), ((((((((t1.c51)AND(t1.c51)))OR(t1.c51)))AND(t1.c51)))AND(t1.c51)))) ASC  NULLS LAST;
SELECT t1.c51 FROM t1 WHERE (((CASE WHEN ((t1.c51)IS NOT(t1.c51)) THEN ((t1.c51)>(t1.c51)) WHEN SQLITE_SOURCE_ID() THEN CAST(t1.c51 AS REAL) WHEN json_quote(t1.c51) THEN '723604835' END) ISNULL)) ORDER BY CAST(CAST(t1.c51 AS REAL) AS TEXT), 6.98061171E8 DESC, ((- (t1.c51)) IN (((t1.c51) IS TRUE), ((((((((t1.c51)AND(t1.c51)))OR(t1.c51)))AND(t1.c51)))AND(t1.c51)))) ASC  NULLS LAST;
SELECT ALL t1.c51 FROM t1;
SELECT DISTINCT vt0.c0, rt0.c2, rt0.c0 FROM rt0, vt0;
SELECT DISTINCT vt0.c0, rt0.c2, rt0.c0 FROM rt0, vt0 WHERE (((('cG靟nn~') NOTNULL) IN ())) UNION SELECT DISTINCT vt0.c0, rt0.c2, rt0.c0 FROM rt0, vt0 WHERE ((NOT (((('cG靟nn~') NOTNULL) IN ())))) UNION SELECT DISTINCT vt0.c0, rt0.c2, rt0.c0 FROM rt0, vt0 WHERE (((((('cG靟nn~') NOTNULL) IN ())) ISNULL));
SELECT DISTINCT vt0.c0, rt0.c2, rt0.c0 FROM rt0, vt0;
SELECT ALL vt1.c0, rt0.c4 FROM t1, rt0, vt1 GROUP BY vt1.c0, rt0.c4;
SELECT vt1.c0, rt0.c4 FROM t1, rt0, vt1 WHERE ((~ (((x'') ISNULL)))) GROUP BY vt1.c0, rt0.c4 UNION SELECT vt1.c0, rt0.c4 FROM t1, rt0, vt1 WHERE ((NOT ((~ (((x'') ISNULL)))))) GROUP BY vt1.c0, rt0.c4 UNION SELECT ALL vt1.c0, rt0.c4 FROM t1, rt0, vt1 WHERE ((((~ (((x'') ISNULL)))) ISNULL)) GROUP BY vt1.c0, rt0.c4;
SELECT ALL vt1.c0, rt0.c4 FROM t1, rt0, vt1 GROUP BY vt1.c0, rt0.c4;
SELECT vt0.c2 FROM t1, vt0, rt0 GROUP BY vt0.c2;
SELECT ALL vt0.c2 FROM t1, vt0, rt0 GROUP BY vt0.c2 HAVING GROUP_CONCAT(CAST(MIN(vt0.c0) AS TEXT)) UNION ALL SELECT ALL vt0.c2 FROM t1, vt0, rt0 GROUP BY vt0.c2 HAVING (NOT (GROUP_CONCAT(CAST(MIN(vt0.c0) AS TEXT)))) UNION ALL SELECT ALL vt0.c2 FROM t1, vt0, rt0 GROUP BY vt0.c2 HAVING ((GROUP_CONCAT(CAST(MIN(vt0.c0) AS TEXT))) ISNULL);
SELECT * FROM rt0, t1, vt0 INNER JOIN vt1 ON (((vt0.c2)) BETWEEN ((CASE WHEN rt0.c1 THEN rt0.c3 END)) AND ((((vt0.c1)<<(vt1.c0)))));
SELECT * FROM rt0, t1, vt0 INNER JOIN vt1 ON (((vt0.c2)) BETWEEN ((CASE WHEN rt0.c1 THEN rt0.c3 END)) AND ((((vt0.c1)<<(vt1.c0))))) WHERE (CASE WHEN CASE NULL  WHEN rt0.c4 THEN rt0.c2 ELSE vt0.c0 END THEN ((((vt1.c0)AND(vt1.c0)))OR(rt0.c1)) END) UNION ALL SELECT * FROM rt0, t1, vt0 INNER JOIN vt1 ON (((vt0.c2)) BETWEEN ((CASE WHEN rt0.c1 THEN rt0.c3 END)) AND ((((vt0.c1)<<(vt1.c0))))) WHERE ((NOT (CASE WHEN CASE NULL  WHEN rt0.c4 THEN rt0.c2 ELSE vt0.c0 END THEN ((((vt1.c0)AND(vt1.c0)))OR(rt0.c1)) END))) UNION ALL SELECT ALL * FROM rt0, t1, vt0 INNER JOIN vt1 ON (((vt0.c2)) BETWEEN ((CASE WHEN rt0.c1 THEN rt0.c3 END)) AND ((((vt0.c1)<<(vt1.c0))))) WHERE (((CASE WHEN CASE NULL  WHEN rt0.c4 THEN rt0.c2 ELSE vt0.c0 END THEN ((((vt1.c0)AND(vt1.c0)))OR(rt0.c1)) END) ISNULL));
SELECT * FROM rt0, t1, vt0 INNER JOIN vt1 ON (((vt0.c2)) BETWEEN ((CASE WHEN rt0.c1 THEN rt0.c3 END)) AND ((((vt0.c1)<<(vt1.c0)))));
SELECT DISTINCT * FROM vt0, vt1, rt0, t1;
SELECT DISTINCT * FROM vt0, vt1, rt0, t1 WHERE (CAST(0.8949554637117715 AS TEXT)) UNION SELECT DISTINCT * FROM vt0, vt1, rt0, t1 WHERE ((NOT (CAST(0.8949554637117715 AS TEXT)))) UNION SELECT DISTINCT * FROM vt0, vt1, rt0, t1 WHERE (((CAST(0.8949554637117715 AS TEXT)) ISNULL));
SELECT DISTINCT * FROM vt0, vt1, rt0, t1;
SELECT rt0.c3 FROM vt1 LEFT OUTER JOIN rt0 ON CASE ((rt0.c0) ISNULL)  WHEN ((((rt0.c4)OR(rt0.c2)))AND(rt0.c3)) THEN (((rt0.c3, rt0.c2, rt0.c1)) BETWEEN ((rt0.c3, rt0.c2, rt0.c3)) AND ((0xffffffffa658a01d, rt0.c0, rt0.c4))) END GROUP BY rt0.c3;
SELECT ALL rt0.c3 FROM vt1 LEFT OUTER JOIN rt0 ON CASE ((rt0.c0) ISNULL)  WHEN ((((rt0.c4)OR(rt0.c2)))AND(rt0.c3)) THEN (((rt0.c3, rt0.c2, rt0.c1)) BETWEEN ((rt0.c3, rt0.c2, rt0.c3)) AND ((0xffffffffa658a01d, rt0.c0, rt0.c4))) END WHERE (0.6798661868568255) GROUP BY rt0.c3 UNION SELECT rt0.c3 FROM vt1 LEFT OUTER JOIN rt0 ON CASE ((rt0.c0) ISNULL)  WHEN ((((rt0.c4)OR(rt0.c2)))AND(rt0.c3)) THEN (((rt0.c3, rt0.c2, rt0.c1)) BETWEEN ((rt0.c3, rt0.c2, rt0.c3)) AND ((0Xffffffffa658a01d, rt0.c0, rt0.c4))) END WHERE ((NOT (0.6798661868568255))) GROUP BY rt0.c3 UNION SELECT ALL rt0.c3 FROM vt1 LEFT OUTER JOIN rt0 ON CASE ((rt0.c0) ISNULL)  WHEN ((((rt0.c4)OR(rt0.c2)))AND(rt0.c3)) THEN (((rt0.c3, rt0.c2, rt0.c1)) BETWEEN ((rt0.c3, rt0.c2, rt0.c3)) AND ((0xffffffffa658a01d, rt0.c0, rt0.c4))) END WHERE (((0.6798661868568255) ISNULL)) GROUP BY rt0.c3;
SELECT rt0.c3 FROM vt1 LEFT OUTER JOIN rt0 ON CASE ((rt0.c0) ISNULL)  WHEN ((((rt0.c4)OR(rt0.c2)))AND(rt0.c3)) THEN (((rt0.c3, rt0.c2, rt0.c1)) BETWEEN ((rt0.c3, rt0.c2, rt0.c3)) AND ((0xffffffffa658a01d, rt0.c0, rt0.c4))) END GROUP BY rt0.c3;
SELECT ALL vt0.c2 FROM t1, vt0 GROUP BY vt0.c2;
SELECT ALL vt0.c2 FROM t1, vt0 GROUP BY vt0.c2 HAVING AVG(COUNT(SUM(MIN(vt0.c1)))) UNION ALL SELECT ALL vt0.c2 FROM t1, vt0 GROUP BY vt0.c2 HAVING (NOT (AVG(COUNT(SUM(MIN(vt0.c1)))))) UNION ALL SELECT ALL vt0.c2 FROM t1, vt0 GROUP BY vt0.c2 HAVING ((AVG(COUNT(SUM(MIN(vt0.c1))))) ISNULL);
SELECT vt0.c2, vt0.c1, vt0.c0 FROM vt0, vt1;
SELECT vt0.c2, vt0.c1, vt0.c0 FROM vt0 NOT INDEXED, vt1 WHERE ((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)) IN ())) UNION ALL SELECT vt0.c2, vt0.c1, vt0.c0 FROM vt0, vt1 WHERE ((NOT ((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)) IN ())))) UNION ALL SELECT vt0.c2, vt0.c1, vt0.c0 FROM vt0, vt1 WHERE ((((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)) IN ())) ISNULL));
SELECT vt0.c2, vt0.c1, vt0.c0 FROM vt0, vt1;
SELECT DISTINCT * FROM t1;
SELECT DISTINCT * FROM t1 WHERE (CAST(t1.c51 AS TEXT) COLLATE NOCASE) UNION SELECT DISTINCT * FROM t1 WHERE ((NOT (CAST(t1.c51 AS TEXT) COLLATE NOCASE))) UNION SELECT DISTINCT * FROM t1 WHERE (((CAST(t1.c51 AS TEXT) COLLATE NOCASE) ISNULL));
SELECT DISTINCT * FROM t1;
SELECT ALL vt0.c0, vt0.c2, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c2, vt0.c1;
SELECT vt0.c0, vt0.c2, vt0.c1 FROM vt0 WHERE (CAST(((vt0.c0)LIKE(vt0.c2)) AS REAL)) GROUP BY vt0.c0, vt0.c2, vt0.c1 UNION SELECT ALL vt0.c0, vt0.c2, vt0.c1 FROM vt0 WHERE ((NOT (CAST(((vt0.c0)LIKE(vt0.c2)) AS REAL)))) GROUP BY vt0.c0, vt0.c2, vt0.c1 UNION SELECT ALL vt0.c0, vt0.c2, vt0.c1 FROM vt0 WHERE (((CAST(((vt0.c0)LIKE(vt0.c2)) AS REAL)) ISNULL)) GROUP BY vt0.c0, vt0.c2, vt0.c1;
SELECT ALL vt0.c0, vt0.c2, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c2, vt0.c1;
SELECT ALL rt0.c1, rt0.c3, rt0.c4 FROM vt1, rt0, t1 GROUP BY rt0.c1, rt0.c3, rt0.c4;
SELECT ALL rt0.c1, rt0.c3, rt0.c4 FROM vt1, rt0, t1 GROUP BY rt0.c1, rt0.c3, rt0.c4 HAVING ((((rt0.c4)-(rt0.c3))) ISNULL) UNION ALL SELECT rt0.c1, rt0.c3, rt0.c4 FROM vt1, rt0, t1 GROUP BY rt0.c1, rt0.c3, rt0.c4 HAVING (NOT (((((rt0.c4)-(rt0.c3))) ISNULL))) UNION ALL SELECT ALL rt0.c1, rt0.c3, rt0.c4 FROM vt1, rt0, t1 GROUP BY rt0.c1, rt0.c3, rt0.c4 HAVING ((((((rt0.c4)-(rt0.c3))) ISNULL)) ISNULL);
SELECT ALL rt0.c1, rt0.c3, rt0.c4 FROM vt1, rt0, t1 GROUP BY rt0.c1, rt0.c3, rt0.c4;
SELECT ALL rt0.c1, rt0.c3, rt0.c4 FROM vt1, rt0, t1 GROUP BY rt0.c1, rt0.c3, rt0.c4 HAVING ((((rt0.c4)-(rt0.c3))) ISNULL) UNION ALL SELECT rt0.c1, rt0.c3, rt0.c4 FROM vt1, rt0, t1 GROUP BY rt0.c1, rt0.c3, rt0.c4 HAVING (NOT (((((rt0.c4)-(rt0.c3))) ISNULL))) UNION ALL SELECT ALL rt0.c1, rt0.c3, rt0.c4 FROM vt1, rt0, t1 GROUP BY rt0.c1, rt0.c3, rt0.c4 HAVING ((((((rt0.c4)-(rt0.c3))) ISNULL)) ISNULL);
SELECT ALL rt0.c1, rt0.c3, rt0.c4 FROM vt1, rt0, t1 GROUP BY rt0.c1, rt0.c3, rt0.c4;
SELECT * FROM vt0;
SELECT * FROM vt0 WHERE (MAX(vt0.c0, ((((vt0.c0)AND(vt0.c2)))OR(vt0.c0)))) UNION ALL SELECT * FROM vt0 WHERE ((NOT (MAX(vt0.c0, ((((vt0.c0)AND(vt0.c2)))OR(vt0.c0)))))) UNION ALL SELECT * FROM vt0 WHERE (((MAX(vt0.c0, ((((vt0.c0)AND(vt0.c2)))OR(vt0.c0)))) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT vt0.c2, rt0.c3, t1.c51, vt1.c0, rt0.c0, vt0.c0, rt0.c2, rt0.c1, vt0.c1 FROM rt0, vt1, t1 INNER JOIN vt0 ON CASE WHEN rt0.c2 THEN (((vt1.c0))<=((0.8639039388975822))) END;
SELECT DISTINCT vt0.c2, rt0.c3, t1.c51, vt1.c0, rt0.c0, vt0.c0, rt0.c2, rt0.c1, vt0.c1 FROM rt0, vt1, t1 INNER JOIN vt0 ON CASE WHEN rt0.c2 THEN (((vt1.c0))<=((0.8639039388975822))) END WHERE (vt0.c1) UNION SELECT DISTINCT vt0.c2, rt0.c3, t1.c51, vt1.c0, rt0.c0, vt0.c0, rt0.c2, rt0.c1, vt0.c1 FROM rt0, vt1, t1 INNER JOIN vt0 ON CASE WHEN rt0.c2 THEN (((vt1.c0))<=((0.8639039388975822))) END WHERE ((NOT (vt0.c1))) UNION SELECT DISTINCT vt0.c2, rt0.c3, t1.c51, vt1.c0, rt0.c0, vt0.c0, rt0.c2, rt0.c1, vt0.c1 FROM rt0, vt1, t1 INNER JOIN vt0 ON CASE WHEN rt0.c2 THEN (((vt1.c0))<=((0.8639039388975822))) END WHERE (((vt0.c1) ISNULL));
SELECT DISTINCT vt0.c2, rt0.c3, t1.c51, vt1.c0, rt0.c0, vt0.c0, rt0.c2, rt0.c1, vt0.c1 FROM rt0, vt1, t1 INNER JOIN vt0 ON CASE WHEN rt0.c2 THEN (((vt1.c0))<=((0.8639039388975822))) END;
SELECT ALL rt0.c2, vt0.c2 FROM vt0, vt1, t1, rt0 GROUP BY rt0.c2, vt0.c2;
SELECT ALL rt0.c2, vt0.c2 FROM vt0, vt1, t1, rt0 WHERE ((((rt0.c1 IN ()))IS((((t1.c51, vt0.c2, rt0.c1)) NOT BETWEEN ((vt0.c1, rt0.c4, rt0.c0)) AND ((vt0.c0, rt0.c3, vt0.c1)))))) GROUP BY rt0.c2, vt0.c2 UNION SELECT ALL rt0.c2, vt0.c2 FROM vt0, vt1, t1, rt0 WHERE ((NOT ((((rt0.c1 IN ()))IS((((t1.c51, vt0.c2, rt0.c1)) NOT BETWEEN ((vt0.c1, rt0.c4, rt0.c0)) AND ((vt0.c0, rt0.c3, vt0.c1)))))))) GROUP BY rt0.c2, vt0.c2 UNION SELECT ALL rt0.c2, vt0.c2 FROM vt0, vt1, t1, rt0 WHERE ((((((rt0.c1 IN ()))IS((((t1.c51, vt0.c2, rt0.c1)) NOT BETWEEN ((vt0.c1, rt0.c4, rt0.c0)) AND ((vt0.c0, rt0.c3, vt0.c1)))))) ISNULL)) GROUP BY rt0.c2, vt0.c2;
SELECT ALL rt0.c2, vt0.c2 FROM vt0, vt1, t1, rt0 GROUP BY rt0.c2, vt0.c2;
SELECT ALL rt0.c3 FROM t1, vt1 INNER JOIN rt0 ON (~ (CAST(t1.c51 AS REAL))) GROUP BY rt0.c3;
SELECT rt0.c3 FROM t1, vt1 INNER JOIN rt0 ON (~ (CAST(t1.c51 AS REAL))) GROUP BY rt0.c3 HAVING CAST((((t1.c51)) BETWEEN ((COUNT(*))) AND ((MAX(rt0.c2)))) AS TEXT) UNION ALL SELECT ALL rt0.c3 FROM t1, vt1 INNER JOIN rt0 ON (~ (CAST(t1.c51 AS REAL))) GROUP BY rt0.c3 HAVING (NOT (CAST((((t1.c51)) BETWEEN ((COUNT(*))) AND ((MAX(rt0.c2)))) AS TEXT))) UNION ALL SELECT rt0.c3 FROM t1, vt1 INNER JOIN rt0 ON (~ (CAST(t1.c51 AS REAL))) GROUP BY rt0.c3 HAVING ((CAST((((t1.c51)) BETWEEN ((COUNT(*))) AND ((MAX(rt0.c2)))) AS TEXT)) ISNULL);
SELECT ALL rt0.c3 FROM t1, vt1 INNER JOIN rt0 ON (~ (CAST(t1.c51 AS REAL))) GROUP BY rt0.c3;
SELECT rt0.c3 FROM t1, vt1 INNER JOIN rt0 ON (~ (CAST(t1.c51 AS REAL))) GROUP BY rt0.c3 HAVING CAST((((t1.c51)) BETWEEN ((COUNT(*))) AND ((MAX(rt0.c2)))) AS TEXT) UNION ALL SELECT ALL rt0.c3 FROM t1, vt1 INNER JOIN rt0 ON (~ (CAST(t1.c51 AS REAL))) GROUP BY rt0.c3 HAVING (NOT (CAST((((t1.c51)) BETWEEN ((COUNT(*))) AND ((MAX(rt0.c2)))) AS TEXT))) UNION ALL SELECT rt0.c3 FROM t1, vt1 INNER JOIN rt0 ON (~ (CAST(t1.c51 AS REAL))) GROUP BY rt0.c3 HAVING ((CAST((((t1.c51)) BETWEEN ((COUNT(*))) AND ((MAX(rt0.c2)))) AS TEXT)) ISNULL);
SELECT ALL rt0.c3 FROM t1, vt1 INNER JOIN rt0 ON (~ (CAST(t1.c51 AS REAL))) GROUP BY rt0.c3;
SELECT ALL * FROM vt0;
SELECT * FROM vt0 WHERE (((((((vt0.c0)OR(vt0.c0)))AND(vt0.c2))) BETWEEN (((((vt0.c2)AND('p')))OR(vt0.c1))) AND (((vt0.c1)%(vt0.c0))))) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (((((((vt0.c0)OR(vt0.c0)))AND(vt0.c2))) BETWEEN (((((vt0.c2)AND('p')))OR(vt0.c1))) AND (((vt0.c1)%(vt0.c0))))))) UNION ALL SELECT ALL * FROM vt0 WHERE (((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c2))) BETWEEN (((((vt0.c2)AND('p')))OR(vt0.c1))) AND (((vt0.c1)%(vt0.c0))))) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT * FROM vt1, t1, vt0, rt0;
SELECT DISTINCT * FROM vt1, t1, vt0, rt0 WHERE ((((t1.c51)) BETWEEN (((NOT (rt0.c4)))) AND (((NOT (vt0.c2)))))) UNION SELECT DISTINCT * FROM vt1, t1, vt0, rt0 WHERE ((NOT ((((t1.c51)) BETWEEN (((NOT (rt0.c4)))) AND (((NOT (vt0.c2)))))))) UNION SELECT DISTINCT * FROM vt1, t1, vt0, rt0 WHERE ((((((t1.c51)) BETWEEN (((NOT (rt0.c4)))) AND (((NOT (vt0.c2)))))) ISNULL));
SELECT DISTINCT * FROM vt1, t1, vt0, rt0;
SELECT vt1.c0, t1.c51 FROM t1, vt1 GROUP BY vt1.c0, t1.c51;
SELECT ALL vt1.c0, t1.c51 FROM t1, vt1 WHERE (((vt1.c0 COLLATE NOCASE)<('-1463739759' COLLATE NOCASE))) GROUP BY vt1.c0, t1.c51 UNION SELECT ALL vt1.c0, t1.c51 FROM t1, vt1 WHERE ((NOT (((vt1.c0 COLLATE NOCASE)<('-1463739759' COLLATE NOCASE))))) GROUP BY vt1.c0, t1.c51 UNION SELECT vt1.c0, t1.c51 FROM t1, vt1 WHERE (((((vt1.c0 COLLATE NOCASE)<('-1463739759' COLLATE NOCASE))) ISNULL)) GROUP BY vt1.c0, t1.c51;
SELECT vt1.c0, t1.c51 FROM t1, vt1 GROUP BY vt1.c0, t1.c51;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING LIKELIHOOD((+ (MIN(GROUP_CONCAT(vt0.c2)))), 0.7530060595549694) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (LIKELIHOOD((+ (MIN(GROUP_CONCAT(vt0.c2)))), 0.7530060595549694))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((LIKELIHOOD((+ (MIN(GROUP_CONCAT(vt0.c2)))), 0.7530060595549694)) ISNULL);
SELECT ALL vt0.c1, vt0.c2, rt0.c1, rt0.c4 FROM vt0, rt0;
SELECT vt0.c1, vt0.c2, rt0.c1, rt0.c4 FROM vt0, rt0 WHERE ((~ (CAST(rt0.c2 AS INTEGER)))) UNION ALL SELECT vt0.c1, vt0.c2, rt0.c1, rt0.c4 FROM vt0, rt0 WHERE ((NOT ((~ (CAST(rt0.c2 AS INTEGER)))))) UNION ALL SELECT vt0.c1, vt0.c2, rt0.c1, rt0.c4 FROM vt0, rt0 WHERE ((((~ (CAST(rt0.c2 AS INTEGER)))) ISNULL));
SELECT ALL vt0.c1, vt0.c2, rt0.c1, rt0.c4 FROM vt0, rt0;
SELECT DISTINCT * FROM vt0, rt0, t1, vt1;
SELECT DISTINCT * FROM vt0, rt0, t1, vt1 WHERE ((((((rt0.c2, vt1.c0, rt0.c4)) NOT BETWEEN ((rt0.c3, rt0.c3, vt0.c0)) AND ((t1.c51, vt1.c0, rt0.c1)))) NOTNULL)) UNION SELECT DISTINCT * FROM vt0, rt0, t1, vt1 WHERE ((NOT ((((((rt0.c2, vt1.c0, rt0.c4)) NOT BETWEEN ((rt0.c3, rt0.c3, vt0.c0)) AND ((t1.c51, vt1.c0, rt0.c1)))) NOTNULL)))) UNION SELECT DISTINCT * FROM vt0, rt0, t1, vt1 WHERE ((((((((rt0.c2, vt1.c0, rt0.c4)) NOT BETWEEN ((rt0.c3, rt0.c3, vt0.c0)) AND ((t1.c51, vt1.c0, rt0.c1)))) NOTNULL)) ISNULL));
SELECT DISTINCT * FROM vt0, rt0, t1, vt1;
SELECT rt0.c1, rt0.c2, rt0.c0, rt0.c3, rt0.c4, vt1.c0 FROM vt1, t1, rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0, rt0.c3, rt0.c4, vt1.c0;
SELECT rt0.c1, rt0.c2, rt0.c0, rt0.c3, rt0.c4, vt1.c0 FROM vt1, t1, rt0 WHERE (((DATE(NULL, rt0.c0, rt0.c3))-(t1.c51))) GROUP BY rt0.c1, rt0.c2, rt0.c0, rt0.c3, rt0.c4, vt1.c0 UNION SELECT rt0.c1, rt0.c2, rt0.c0, rt0.c3, rt0.c4, vt1.c0 FROM vt1, t1, rt0 WHERE ((NOT (((DATE(NULL, rt0.c0, rt0.c3))-(t1.c51))))) GROUP BY rt0.c1, rt0.c2, rt0.c0, rt0.c3, rt0.c4, vt1.c0 UNION SELECT ALL rt0.c1, rt0.c2, rt0.c0, rt0.c3, rt0.c4, vt1.c0 FROM vt1, t1, rt0 WHERE (((((DATE(NULL, rt0.c0, rt0.c3))-(t1.c51))) ISNULL)) GROUP BY rt0.c1, rt0.c2, rt0.c0, rt0.c3, rt0.c4, vt1.c0;
SELECT rt0.c1, rt0.c2, rt0.c0, rt0.c3, rt0.c4, vt1.c0 FROM vt1, t1, rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0, rt0.c3, rt0.c4, vt1.c0;
SELECT rt0.c2, rt0.c3, vt0.c1, vt0.c2, rt0.c0, rt0.c4, rt0.c1 FROM vt0 LEFT OUTER JOIN rt0 ON (((CASE WHEN rt0.c2 THEN vt0.c1 ELSE rt0.c3 END, rt0.c1, ((vt0.c1)*(rt0.c1))))==((x'', TYPEOF(rt0.c4), CAST(vt0.c0 AS REAL)))) GROUP BY rt0.c2, rt0.c3, vt0.c1, vt0.c2, rt0.c0, rt0.c4, rt0.c1;
SELECT ALL rt0.c2, rt0.c3, vt0.c1, vt0.c2, rt0.c0, rt0.c4, rt0.c1 FROM vt0 LEFT OUTER JOIN rt0 ON (((CASE WHEN rt0.c2 THEN vt0.c1 ELSE rt0.c3 END, rt0.c1, ((vt0.c1)*(rt0.c1))))==((x'', TYPEOF(rt0.c4), CAST(vt0.c0 AS REAL)))) GROUP BY rt0.c2, rt0.c3, vt0.c1, vt0.c2, rt0.c0, rt0.c4, rt0.c1 HAVING SUM(COUNT(*)) UNION ALL SELECT rt0.c2, rt0.c3, vt0.c1, vt0.c2, rt0.c0, rt0.c4, rt0.c1 FROM vt0 LEFT OUTER JOIN rt0 ON (((CASE WHEN rt0.c2 THEN vt0.c1 ELSE rt0.c3 END, rt0.c1, ((vt0.c1)*(rt0.c1))))==((x'', TYPEOF(rt0.c4), CAST(vt0.c0 AS REAL)))) GROUP BY rt0.c2, rt0.c3, vt0.c1, vt0.c2, rt0.c0, rt0.c4, rt0.c1 HAVING (NOT (SUM(COUNT(*)))) UNION ALL SELECT rt0.c2, rt0.c3, vt0.c1, vt0.c2, rt0.c0, rt0.c4, rt0.c1 FROM vt0 LEFT OUTER JOIN rt0 ON (((CASE WHEN rt0.c2 THEN vt0.c1 ELSE rt0.c3 END, rt0.c1, ((vt0.c1)*(rt0.c1))))=((x'', TYPEOF(rt0.c4), CAST(vt0.c0 AS REAL)))) GROUP BY rt0.c2, rt0.c3, vt0.c1, vt0.c2, rt0.c0, rt0.c4, rt0.c1 HAVING ((SUM(COUNT(*))) ISNULL);
SELECT rt0.c4, vt0.c1, rt0.c3, vt0.c2, vt0.c0, rt0.c1 FROM t1 CROSS JOIN rt0 ON CAST(((t1.c51)/(rt0.c0)) AS BLOB) FULL OUTER JOIN vt0 ON ((((((rt0.c4) NOTNULL))AND(CAST(rt0.c4 AS INTEGER))))OR(CAST(vt0.c1 AS TEXT)));
SELECT rt0.c4, vt0.c1, rt0.c3, vt0.c2, vt0.c0, rt0.c1 FROM t1 CROSS JOIN rt0 ON CAST(((t1.c51)/(rt0.c0)) AS BLOB) FULL OUTER JOIN vt0 ON ((((((rt0.c4) NOTNULL))AND(CAST(rt0.c4 AS INTEGER))))OR(CAST(vt0.c1 AS TEXT))) WHERE (((x'') IS TRUE)) UNION ALL SELECT rt0.c4, vt0.c1, rt0.c3, vt0.c2, vt0.c0, rt0.c1 FROM t1 CROSS JOIN rt0 ON CAST(((t1.c51)/(rt0.c0)) AS BLOB) FULL OUTER JOIN vt0 ON ((((((rt0.c4) NOTNULL))AND(CAST(rt0.c4 AS INTEGER))))OR(CAST(vt0.c1 AS TEXT))) WHERE ((NOT (((x'') IS TRUE)))) UNION ALL SELECT ALL rt0.c4, vt0.c1, rt0.c3, vt0.c2, vt0.c0, rt0.c1 FROM t1 CROSS JOIN rt0 ON CAST(((t1.c51)/(rt0.c0)) AS BLOB) FULL OUTER JOIN vt0 ON ((((((rt0.c4) NOTNULL))AND(CAST(rt0.c4 AS INTEGER))))OR(CAST(vt0.c1 AS TEXT))) WHERE (((((x'') IS TRUE)) ISNULL));
SELECT rt0.c4, vt0.c1, rt0.c3, vt0.c2, vt0.c0, rt0.c1 FROM t1 CROSS JOIN rt0 ON CAST(((t1.c51)/(rt0.c0)) AS BLOB) FULL OUTER JOIN vt0 ON ((((((rt0.c4) NOTNULL))AND(CAST(rt0.c4 AS INTEGER))))OR(CAST(vt0.c1 AS TEXT)));
SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0, vt1;
SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0, vt1 WHERE ('-649088088') UNION SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0, vt1 WHERE ((NOT ('-649088088'))) UNION SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0, vt1 WHERE ((('-649088088') ISNULL));
SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0, vt1;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE (vt1.c0) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT (vt1.c0))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE (((vt1.c0) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt0.c0, rt0.c2, vt0.c2, vt0.c1, rt0.c1, rt0.c0, rt0.c3, rt0.c4 FROM rt0, vt0 GROUP BY vt0.c0, rt0.c2, vt0.c2, vt0.c1, rt0.c1, rt0.c0, rt0.c3, rt0.c4;
SELECT vt0.c0, rt0.c2, vt0.c2, vt0.c1, rt0.c1, rt0.c0, rt0.c3, rt0.c4 FROM rt0, vt0 GROUP BY vt0.c0, rt0.c2, vt0.c2, vt0.c1, rt0.c1, rt0.c0, rt0.c3, rt0.c4 HAVING TOTAL(COUNT(*)) UNION ALL SELECT ALL vt0.c0, rt0.c2, vt0.c2, vt0.c1, rt0.c1, rt0.c0, rt0.c3, rt0.c4 FROM rt0, vt0 GROUP BY vt0.c0, rt0.c2, vt0.c2, vt0.c1, rt0.c1, rt0.c0, rt0.c3, rt0.c4 HAVING (NOT (TOTAL(COUNT(*)))) UNION ALL SELECT ALL vt0.c0, rt0.c2, vt0.c2, vt0.c1, rt0.c1, rt0.c0, rt0.c3, rt0.c4 FROM rt0, vt0 GROUP BY vt0.c0, rt0.c2, vt0.c2, vt0.c1, rt0.c1, rt0.c0, rt0.c3, rt0.c4 HAVING ((TOTAL(COUNT(*))) ISNULL);
SELECT ALL rt0.c3, vt0.c2, vt1.c0, vt0.c0, vt0.c1, t1.c51 FROM t1 FULL OUTER JOIN vt0 ON ((CASE vt0.c1  WHEN '-142246948' THEN t1.c51 ELSE vt0.c0 END) IS FALSE) LEFT OUTER JOIN rt0 ON ((ABS(rt0.c1)) BETWEEN (CASE rt0.c1  WHEN rt0.c1 THEN '''Y\rX' END) AND ((((vt1.c0)) NOT BETWEEN ((x'9f39')) AND ((t1.c51))))) LEFT OUTER JOIN vt1 ON CAST(vt0.c1 AS INTEGER);
SELECT DISTINCT * FROM rt0, t1, vt0;
SELECT DISTINCT * FROM rt0, t1, vt0 WHERE (CAST(((rt0.c2)=(t1.c51)) AS INTEGER)) UNION SELECT DISTINCT * FROM rt0, t1, vt0 WHERE ((NOT (CAST(((rt0.c2)==(t1.c51)) AS INTEGER)))) UNION SELECT DISTINCT * FROM rt0, t1, vt0 WHERE (((CAST(((rt0.c2)=(t1.c51)) AS INTEGER)) ISNULL));
SELECT DISTINCT * FROM rt0, t1, vt0;
SELECT ALL rt0.c4, rt0.c3, vt0.c2, rt0.c0, vt0.c1, vt0.c0, rt0.c1 FROM rt0, vt0 GROUP BY rt0.c4, rt0.c3, vt0.c2, rt0.c0, vt0.c1, vt0.c0, rt0.c1;
SELECT ALL rt0.c4, rt0.c3, vt0.c2, rt0.c0, vt0.c1, vt0.c0, rt0.c1 FROM rt0, vt0 WHERE (NULL) GROUP BY rt0.c4, rt0.c3, vt0.c2, rt0.c0, vt0.c1, vt0.c0, rt0.c1 UNION SELECT rt0.c4, rt0.c3, vt0.c2, rt0.c0, vt0.c1, vt0.c0, rt0.c1 FROM rt0, vt0 WHERE ((NOT (NULL))) GROUP BY rt0.c4, rt0.c3, vt0.c2, rt0.c0, vt0.c1, vt0.c0, rt0.c1 UNION SELECT rt0.c4, rt0.c3, vt0.c2, rt0.c0, vt0.c1, vt0.c0, rt0.c1 FROM rt0, vt0 WHERE (((NULL) ISNULL)) GROUP BY rt0.c4, rt0.c3, vt0.c2, rt0.c0, vt0.c1, vt0.c0, rt0.c1;
SELECT ALL rt0.c4, rt0.c3, vt0.c2, rt0.c0, vt0.c1, vt0.c0, rt0.c1 FROM rt0, vt0 GROUP BY rt0.c4, rt0.c3, vt0.c2, rt0.c0, vt0.c1, vt0.c0, rt0.c1;
SELECT ALL rt0.c4, vt0.c0, rt0.c2, rt0.c1, vt0.c2 FROM rt0, t1, vt0 GROUP BY rt0.c4, vt0.c0, rt0.c2, rt0.c1, vt0.c2;
SELECT rt0.c4, vt0.c0, rt0.c2, rt0.c1, vt0.c2 FROM rt0, t1, vt0 GROUP BY rt0.c4, vt0.c0, rt0.c2, rt0.c1, vt0.c2 HAVING GROUP_CONCAT(TOTAL(TOTAL(COUNT('^CU')))) UNION ALL SELECT ALL rt0.c4, vt0.c0, rt0.c2, rt0.c1, vt0.c2 FROM rt0, t1, vt0 GROUP BY rt0.c4, vt0.c0, rt0.c2, rt0.c1, vt0.c2 HAVING (NOT (GROUP_CONCAT(TOTAL(TOTAL(COUNT('^CU')))))) UNION ALL SELECT rt0.c4, vt0.c0, rt0.c2, rt0.c1, vt0.c2 FROM rt0, t1, vt0 GROUP BY rt0.c4, vt0.c0, rt0.c2, rt0.c1, vt0.c2 HAVING ((GROUP_CONCAT(TOTAL(TOTAL(COUNT('^CU'))))) ISNULL);
SELECT rt0.c1, vt0.c2, vt0.c0, rt0.c2 FROM t1 NOT INDEXED, vt1, rt0, vt0;
SELECT ALL rt0.c1, vt0.c2, vt0.c0, rt0.c2 FROM t1, vt1, rt0, vt0 WHERE (((((t1.c51) IS TRUE)) NOTNULL)) UNION ALL SELECT ALL rt0.c1, vt0.c2, vt0.c0, rt0.c2 FROM t1, vt1, rt0, vt0 WHERE ((NOT (((((t1.c51) IS TRUE)) NOTNULL)))) UNION ALL SELECT ALL rt0.c1, vt0.c2, vt0.c0, rt0.c2 FROM t1, vt1, rt0, vt0 WHERE (((((((t1.c51) IS TRUE)) NOTNULL)) ISNULL));
SELECT rt0.c1, vt0.c2, vt0.c0, rt0.c2 FROM t1 NOT INDEXED, vt1, rt0, vt0;
SELECT DISTINCT * FROM rt0, vt1, vt0, t1;
SELECT DISTINCT * FROM rt0, vt1, vt0, t1 WHERE (NULL) UNION SELECT DISTINCT * FROM rt0, vt1, vt0, t1 WHERE ((NOT (NULL))) UNION SELECT DISTINCT * FROM rt0, vt1, vt0, t1 WHERE (((NULL) ISNULL));
SELECT DISTINCT * FROM rt0, vt1, vt0, t1;
SELECT vt1.c0 FROM t1 LEFT OUTER JOIN vt1 ON TYPEOF(IFNULL(DISTINCT vt1.c0, t1.c51)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM t1 LEFT OUTER JOIN vt1 ON TYPEOF(IFNULL(DISTINCT vt1.c0, t1.c51)) WHERE (CAST(((((vt1.c0)OR(vt1.c0)))AND(NULL)) AS INTEGER)) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM t1 LEFT OUTER JOIN vt1 ON TYPEOF(IFNULL(DISTINCT vt1.c0, t1.c51)) WHERE ((NOT (CAST(((((vt1.c0)OR(vt1.c0)))AND(NULL)) AS INTEGER)))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM t1 LEFT OUTER JOIN vt1 ON TYPEOF(IFNULL(DISTINCT vt1.c0, t1.c51)) WHERE (((CAST(((((vt1.c0)OR(vt1.c0)))AND(NULL)) AS INTEGER)) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM t1 LEFT OUTER JOIN vt1 ON TYPEOF(IFNULL(DISTINCT vt1.c0, t1.c51)) GROUP BY vt1.c0;
SELECT t1.c51, vt0.c1, vt0.c2, vt0.c0, vt1.c0 FROM vt1, t1, vt0 GROUP BY t1.c51, vt0.c1, vt0.c2, vt0.c0, vt1.c0;
SELECT ALL t1.c51, vt0.c1, vt0.c2, vt0.c0, vt1.c0 FROM vt1, t1, vt0 GROUP BY t1.c51, vt0.c1, vt0.c2, vt0.c0, vt1.c0 HAVING COUNT(*) UNION ALL SELECT t1.c51, vt0.c1, vt0.c2, vt0.c0, vt1.c0 FROM vt1, t1, vt0 GROUP BY t1.c51, vt0.c1, vt0.c2, vt0.c0, vt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL t1.c51, vt0.c1, vt0.c2, vt0.c0, vt1.c0 FROM vt1, t1, vt0 GROUP BY t1.c51, vt0.c1, vt0.c2, vt0.c0, vt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT t1.c51, vt0.c1, vt0.c2, vt0.c0, vt1.c0 FROM vt1, t1, vt0 GROUP BY t1.c51, vt0.c1, vt0.c2, vt0.c0, vt1.c0;
SELECT ALL t1.c51, vt0.c1, vt0.c2, vt0.c0, vt1.c0 FROM vt1, t1, vt0 GROUP BY t1.c51, vt0.c1, vt0.c2, vt0.c0, vt1.c0 HAVING COUNT(*) UNION ALL SELECT t1.c51, vt0.c1, vt0.c2, vt0.c0, vt1.c0 FROM vt1, t1, vt0 GROUP BY t1.c51, vt0.c1, vt0.c2, vt0.c0, vt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL t1.c51, vt0.c1, vt0.c2, vt0.c0, vt1.c0 FROM vt1, t1, vt0 GROUP BY t1.c51, vt0.c1, vt0.c2, vt0.c0, vt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT t1.c51, vt0.c1, vt0.c2, vt0.c0, vt1.c0 FROM vt1, t1, vt0 GROUP BY t1.c51, vt0.c1, vt0.c2, vt0.c0, vt1.c0;
SELECT ALL * FROM t1, vt0, rt0, vt1;
SELECT * FROM t1, vt0, rt0, vt1 WHERE (CASE ((rt0.c3)&(vt0.c1))  WHEN ((vt0.c2)&(t1.c51)) THEN CASE WHEN '' THEN rt0.c0 END WHEN (+ (x'')) THEN ((vt0.c2) NOT BETWEEN (rt0.c2) AND (t1.c51)) WHEN ((((((((vt0.c2)AND(rt0.c4)))OR(vt0.c0)))AND(vt0.c0)))OR(rt0.c3)) THEN (- (vt0.c1)) END) UNION ALL SELECT * FROM t1, vt0, rt0, vt1 WHERE ((NOT (CASE ((rt0.c3)&(vt0.c1))  WHEN ((vt0.c2)&(t1.c51)) THEN CASE WHEN '' THEN rt0.c0 END WHEN (+ (x'')) THEN ((vt0.c2) NOT BETWEEN (rt0.c2) AND (t1.c51)) WHEN ((((((((vt0.c2)AND(rt0.c4)))OR(vt0.c0)))AND(vt0.c0)))OR(rt0.c3)) THEN (- (vt0.c1)) END))) UNION ALL SELECT * FROM t1, vt0, rt0, vt1 WHERE (((CASE ((rt0.c3)&(vt0.c1))  WHEN ((vt0.c2)&(t1.c51)) THEN CASE WHEN '' THEN rt0.c0 END WHEN (+ (x'')) THEN ((vt0.c2) NOT BETWEEN (rt0.c2) AND (t1.c51)) WHEN ((((((((vt0.c2)AND(rt0.c4)))OR(vt0.c0)))AND(vt0.c0)))OR(rt0.c3)) THEN (- (vt0.c1)) END) ISNULL));
SELECT ALL * FROM t1, vt0, rt0, vt1;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (NULL) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (NULL))) UNION SELECT DISTINCT * FROM rt0 WHERE (((NULL) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL vt1.c0 FROM t1, vt1, vt0 GROUP BY vt1.c0;
SELECT vt1.c0 FROM t1, vt1, vt0 WHERE ((~ ((((vt0.c0))<((vt0.c0)))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM t1, vt1, vt0 WHERE ((NOT ((~ ((((vt0.c0))<((vt0.c0)))))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM t1, vt1, vt0 WHERE ((((~ ((((vt0.c0))<((vt0.c0)))))) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM t1, vt1, vt0 GROUP BY vt1.c0;
SELECT rt0.c4, rt0.c2, vt0.c0, vt0.c2, rt0.c0, rt0.c1, vt1.c0 FROM vt1, vt0, rt0 GROUP BY rt0.c4, rt0.c2, vt0.c0, vt0.c2, rt0.c0, rt0.c1, vt1.c0;
SELECT ALL rt0.c4, rt0.c2, vt0.c0, vt0.c2, rt0.c0, rt0.c1, vt1.c0 FROM vt1, vt0, rt0 GROUP BY rt0.c4, rt0.c2, vt0.c0, vt0.c2, rt0.c0, rt0.c1, vt1.c0 HAVING SUM(MAX(MAX(MIN(vt0.c2)))) UNION ALL SELECT ALL rt0.c4, rt0.c2, vt0.c0, vt0.c2, rt0.c0, rt0.c1, vt1.c0 FROM vt1, vt0, rt0 GROUP BY rt0.c4, rt0.c2, vt0.c0, vt0.c2, rt0.c0, rt0.c1, vt1.c0 HAVING (NOT (SUM(MAX(MAX(MIN(vt0.c2)))))) UNION ALL SELECT rt0.c4, rt0.c2, vt0.c0, vt0.c2, rt0.c0, rt0.c1, vt1.c0 FROM vt1, vt0, rt0 GROUP BY rt0.c4, rt0.c2, vt0.c0, vt0.c2, rt0.c0, rt0.c1, vt1.c0 HAVING ((SUM(MAX(MAX(MIN(vt0.c2))))) ISNULL);
SELECT ALL vt0.c1, vt0.c0, rt0.c3, vt0.c2, t1.c51, rt0.c2, rt0.c1, rt0.c4 FROM rt0, vt0, t1;
SELECT ALL vt0.c1, vt0.c0, rt0.c3, vt0.c2, t1.c51, rt0.c2, rt0.c1, rt0.c4 FROM rt0, vt0, t1 WHERE (CAST(rt0.c1 COLLATE NOCASE AS BLOB)) UNION ALL SELECT vt0.c1, vt0.c0, rt0.c3, vt0.c2, t1.c51, rt0.c2, rt0.c1, rt0.c4 FROM rt0, vt0, t1 WHERE ((NOT (CAST(rt0.c1 COLLATE NOCASE AS BLOB)))) UNION ALL SELECT vt0.c1, vt0.c0, rt0.c3, vt0.c2, t1.c51, rt0.c2, rt0.c1, rt0.c4 FROM rt0, vt0, t1 WHERE (((CAST(rt0.c1 COLLATE NOCASE AS BLOB)) ISNULL));
SELECT ALL vt0.c1, vt0.c0, rt0.c3, vt0.c2, t1.c51, rt0.c2, rt0.c1, rt0.c4 FROM rt0, vt0, t1;
SELECT DISTINCT vt0.c2, vt0.c1, vt0.c0, t1.c51, vt1.c0 FROM vt1, vt0, t1;
SELECT DISTINCT vt0.c2, vt0.c1, vt0.c0, t1.c51, vt1.c0 FROM vt1, vt0, t1 WHERE (((CAST(t1.c51 AS TEXT)) BETWEEN (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c2 THEN vt0.c2 ELSE vt1.c0 END) AND (((vt1.c0) IS TRUE)))) UNION SELECT DISTINCT vt0.c2, vt0.c1, vt0.c0, t1.c51, vt1.c0 FROM vt1, vt0, t1 WHERE ((NOT (((CAST(t1.c51 AS TEXT)) BETWEEN (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c2 THEN vt0.c2 ELSE vt1.c0 END) AND (((vt1.c0) IS TRUE)))))) UNION SELECT DISTINCT vt0.c2, vt0.c1, vt0.c0, t1.c51, vt1.c0 FROM vt1, vt0, t1 WHERE (((((CAST(t1.c51 AS TEXT)) BETWEEN (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c2 THEN vt0.c2 ELSE vt1.c0 END) AND (((vt1.c0) IS TRUE)))) ISNULL));
SELECT DISTINCT vt0.c2, vt0.c1, vt0.c0, t1.c51, vt1.c0 FROM vt1, vt0, t1;
SELECT ALL rt0.c2 FROM vt1, rt0, t1 GROUP BY rt0.c2;
SELECT rt0.c2 FROM vt1, rt0, t1 WHERE (((json_array(vt1.c0, t1.c51, NULL, rt0.c0)) NOTNULL)) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM vt1, rt0, t1 WHERE ((NOT (((json_array(vt1.c0, t1.c51, NULL, rt0.c0)) NOTNULL)))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM vt1, rt0, t1 WHERE (((((json_array(vt1.c0, t1.c51, NULL, rt0.c0)) NOTNULL)) ISNULL)) GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM vt1, rt0, t1 GROUP BY rt0.c2;
SELECT ALL rt0.c1, t1.c51, vt1.c0, rt0.c4, rt0.c3 FROM t1, vt1, rt0 GROUP BY rt0.c1, t1.c51, vt1.c0, rt0.c4, rt0.c3;
SELECT rt0.c1, t1.c51, vt1.c0, rt0.c4, rt0.c3 FROM t1, vt1, rt0 GROUP BY rt0.c1, t1.c51, vt1.c0, rt0.c4, rt0.c3 HAVING AVG(AVG(rt0.c2)) UNION ALL SELECT ALL rt0.c1, t1.c51, vt1.c0, rt0.c4, rt0.c3 FROM t1, vt1, rt0 GROUP BY rt0.c1, t1.c51, vt1.c0, rt0.c4, rt0.c3 HAVING (NOT (AVG(AVG(rt0.c2)))) UNION ALL SELECT ALL rt0.c1, t1.c51, vt1.c0, rt0.c4, rt0.c3 FROM t1, vt1, rt0 GROUP BY rt0.c1, t1.c51, vt1.c0, rt0.c4, rt0.c3 HAVING ((AVG(AVG(rt0.c2))) ISNULL);
SELECT ALL SUM(CAST(CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END AS NUMERIC)) FROM vt1, vt0 ORDER BY (((((((((((vt0.c2)AND(vt0.c2)))OR(vt0.c0)))AND(vt1.c0)))AND(vt0.c0))))<((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c2)))))  NULLS LAST;
SELECT ALL vt1.c0 FROM vt1;
SELECT ALL vt1.c0 FROM vt1 WHERE (((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((0.7294533219130587))) IN (DATE(0.9252666929072715, vt1.c0, vt1.c0)))) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((0.7294533219130587))) IN (DATE(0.9252666929072715, vt1.c0, vt1.c0)))))) UNION ALL SELECT vt1.c0 FROM vt1 WHERE (((((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((0.7294533219130587))) IN (DATE(0.9252666929072715, vt1.c0, vt1.c0)))) ISNULL));
SELECT ALL vt1.c0 FROM vt1;
