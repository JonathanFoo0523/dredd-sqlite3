-- Time: 2024/06/09 15:31:32
-- Database: database64
-- Database version: 3.40.0
-- seed value: 2482977364
PRAGMA cache_size = 50000; -- 1ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA encoding = 'UTF-8'; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts4(c0, order=DESC, prefix=555); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
ANALYZE sqlite_master; -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
ANALYZE sqlite_master; -- 0ms;
PRAGMA default_cache_size = 776642404; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR IGNORE vt0 SET c0='\6?琵jI945', c0=0.22975646982930598; -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 10ms;
END TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
END; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=-211677733,10');\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 734818972); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 3); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
UPDATE OR IGNORE vt0 SET c0=0.22199271392929443 WHERE ((vt0.c0 COLLATE BINARY) NOT NULL); -- 0ms;
ANALYZE; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 14); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
UPDATE OR IGNORE vt0 SET (c0, c0)=('m?&>L', 0.14272272945020215); -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '41702'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 12); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1621727232); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '43288'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 1ms;
INSERT OR FAIL INTO vt0(c0) VALUES (NULL); -- 0ms;
ANALYZE sqlite_master; -- 4ms;
ANALYZE sqlite_master; -- 1ms;
INSERT INTO vt0(vt0) VALUES('merge=2053259375,12');\n; -- 0ms;
END TRANSACTION; -- 0ms;
REINDEX NOCASE; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', 114441670);\n; -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
PRAGMA legacy_file_format = true; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA checkpoint_fullfsync; -- 0ms;
UPDATE OR IGNORE vt0 SET c0=NULL, c0=0.05904010481216626; -- 1ms;
REINDEX; -- 1ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (0.6555880074456968); -- 1ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 1ms;
INSERT OR REPLACE INTO vt0 VALUES ('Q{'); -- 0ms;
PRAGMA shrink_memory; -- 1ms;
UPDATE OR IGNORE vt0 SET c0=x'f923', c0=x'8539', c0=x'028c' WHERE UPPER((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((0.9434671177589226)))); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=838056941,3');\n; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 2); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
END TRANSACTION; -- 0ms;
UPDATE OR IGNORE vt0 SET (c0)=('\6?琵jI945'); -- 1ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 473915448); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', 1078123536);\n; -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
UPDATE vt0 SET (c0)=(x'55c1'); -- 0ms;
UPDATE vt0 SET (c0)=(0.7773976968776757) WHERE ((((((((((('444560437')) BETWEEN ((vt0.c0)) AND ((vt0.c0))))AND((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))))OR((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))))OR(CAST(vt0.c0 AS REAL))))AND(TYPEOF(DISTINCT vt0.c0))); -- 1ms;
REINDEX; -- 0ms;
DELETE FROM vt0 WHERE CAST(-1375572460 AS INTEGER); -- 0ms;
UPDATE OR IGNORE vt0 SET (c0)=(0.5841256083160209); -- 0ms;
CREATE TEMPORARY VIEW  IF NOT EXISTS v0(c0) AS SELECT DISTINCT (CAST(vt0.c0 AS BLOB) IN ()) FROM vt0; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
ANALYZE; -- 1ms;
END; -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 1ms;
COMMIT; -- 0ms;
COMMIT; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT * FROM vt0, v0;
SELECT * FROM vt0, v0 WHERE (IFNULL(((('-35931852', vt0.c0, v0.c0)) NOT BETWEEN ((v0.c0, vt0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0))), ((v0.c0)<<(NULL)))) UNION ALL SELECT * FROM vt0, v0 WHERE ((NOT (IFNULL(((('-35931852', vt0.c0, v0.c0)) NOT BETWEEN ((v0.c0, vt0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0))), ((v0.c0)<<(NULL)))))) UNION ALL SELECT ALL * FROM vt0, v0 WHERE (((IFNULL(((('-35931852', vt0.c0, v0.c0)) NOT BETWEEN ((v0.c0, vt0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0))), ((v0.c0)<<(NULL)))) ISNULL));
SELECT * FROM vt0, v0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (0.5841256083160209) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (0.5841256083160209))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((0.5841256083160209) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT ALL vt0.c0 FROM v0, vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM v0, vt0 WHERE (((x'')<>(((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))OR(vt0.c0)))AND(vt0.c0))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM v0, vt0 WHERE ((NOT (((x'')!=(((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))OR(vt0.c0)))AND(vt0.c0))))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM v0, vt0 WHERE (((((x'')!=(((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))OR(vt0.c0)))AND(vt0.c0))))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM v0, vt0 GROUP BY vt0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING CAST(((((v0.c0)AND(GROUP_CONCAT(AVG(TOTAL(v0.c0))))))AND(x'')) AS NUMERIC) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (CAST(((((v0.c0)AND(GROUP_CONCAT(AVG(TOTAL(v0.c0))))))AND(x'')) AS NUMERIC))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((CAST(((((v0.c0)AND(GROUP_CONCAT(AVG(TOTAL(v0.c0))))))AND(x'')) AS NUMERIC)) ISNULL);
SELECT * FROM v0;
SELECT * FROM v0 WHERE (((((v0.c0)&(NULL)))+(((((2.053259375E9)OR(v0.c0)))OR(v0.c0))))) UNION ALL SELECT ALL * FROM v0 WHERE ((NOT (((((v0.c0)&(NULL)))+(((((2.053259375E9)OR(v0.c0)))OR(v0.c0))))))) UNION ALL SELECT ALL * FROM v0 WHERE (((((((v0.c0)&(NULL)))+(((((2.053259375E9)OR(v0.c0)))OR(v0.c0))))) ISNULL));
SELECT * FROM v0;
SELECT DISTINCT vt0.c0, v0.c0 FROM v0, vt0;
SELECT DISTINCT vt0.c0, v0.c0 FROM v0, vt0 WHERE ((+ ((v0.c0 IN (v0.c0))))) UNION SELECT DISTINCT vt0.c0, v0.c0 FROM v0, vt0 WHERE ((NOT ((+ ((v0.c0 IN (v0.c0))))))) UNION SELECT DISTINCT vt0.c0, v0.c0 FROM v0, vt0 WHERE ((((+ ((v0.c0 IN (v0.c0))))) ISNULL));
SELECT DISTINCT vt0.c0, v0.c0 FROM v0, vt0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE ((((((v0.c0, v0.c0, v0.c0)) BETWEEN ((0.574017538912351, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0)))) BETWEEN (v0.c0) AND (v0.c0 COLLATE BINARY))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT ((((((v0.c0, v0.c0, v0.c0)) BETWEEN ((0.574017538912351, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0)))) BETWEEN (v0.c0) AND (v0.c0 COLLATE BINARY))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((((((((v0.c0, v0.c0, v0.c0)) BETWEEN ((0.574017538912351, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0)))) BETWEEN (v0.c0) AND (v0.c0 COLLATE BINARY))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING GROUP_CONCAT(((((TOTAL(SUM(v0.c0)))AND(COUNT(*))))OR(MAX(SUM(GROUP_CONCAT(GROUP_CONCAT(v0.c0))))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (GROUP_CONCAT(((((TOTAL(SUM(v0.c0)))AND(COUNT(*))))OR(MAX(SUM(GROUP_CONCAT(GROUP_CONCAT(v0.c0))))))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((GROUP_CONCAT(((((TOTAL(SUM(v0.c0)))AND(COUNT(*))))OR(MAX(SUM(GROUP_CONCAT(GROUP_CONCAT(v0.c0)))))))) ISNULL);
SELECT ALL * FROM vt0, v0;
SELECT ALL * FROM vt0, v0 WHERE ((CAST(v0.c0 AS INTEGER) IN ())) UNION ALL SELECT ALL * FROM vt0, v0 WHERE ((NOT ((CAST(v0.c0 AS INTEGER) IN ())))) UNION ALL SELECT ALL * FROM vt0, v0 WHERE ((((CAST(v0.c0 AS INTEGER) IN ())) ISNULL));
SELECT ALL * FROM vt0, v0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE ('-1232872716') UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT ('-1232872716'))) UNION SELECT DISTINCT * FROM vt0 WHERE ((('-1232872716') ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (((((CAST(vt0.c0 AS REAL))AND((~ (vt0.c0)))))OR((((vt0.c0, vt0.c0, vt0.c0))=((0.6054043129433473, vt0.c0, vt0.c0)))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (((((CAST(vt0.c0 AS REAL))AND((~ (vt0.c0)))))OR((((vt0.c0, vt0.c0, vt0.c0))==((0.6054043129433473, vt0.c0, vt0.c0)))))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((((((CAST(vt0.c0 AS REAL))AND((~ (vt0.c0)))))OR((((vt0.c0, vt0.c0, vt0.c0))==((0.6054043129433473, vt0.c0, vt0.c0)))))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING GROUP_CONCAT(MIN(SUM(AVG(vt0.c0)))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (GROUP_CONCAT(MIN(SUM(AVG(vt0.c0)))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((GROUP_CONCAT(MIN(SUM(AVG(vt0.c0))))) ISNULL);
SELECT ALL SUM((NOT (((x'')!=(vt0.c0))))) FROM vt0;
SELECT * FROM vt0;
SELECT * FROM vt0 WHERE ((~ ((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))))) UNION ALL SELECT * FROM vt0 WHERE ((NOT ((~ ((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))))))) UNION ALL SELECT * FROM vt0 WHERE ((((~ ((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))))) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT * FROM vt0, v0;
SELECT DISTINCT * FROM vt0, v0 WHERE (((vt0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0)) COLLATE RTRIM) UNION SELECT DISTINCT * FROM vt0, v0 WHERE ((NOT (((vt0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0)) COLLATE RTRIM))) UNION SELECT DISTINCT * FROM vt0, v0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0)) COLLATE RTRIM) ISNULL));
SELECT DISTINCT * FROM vt0, v0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE ((((v0.c0)) BETWEEN ((CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END)) AND ((((v0.c0)>=(v0.c0)))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 NOT INDEXED WHERE ((NOT ((((v0.c0)) BETWEEN ((CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END)) AND ((((v0.c0)>=(v0.c0)))))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((((((v0.c0)) BETWEEN ((CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END)) AND ((((v0.c0)>=(v0.c0)))))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING v0.c0 UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (v0.c0)) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((v0.c0) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING v0.c0 UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (v0.c0)) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((v0.c0) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL * FROM v0, vt0;
SELECT * FROM v0, vt0 WHERE ((- (vt0.c0))) UNION ALL SELECT ALL * FROM v0, vt0 WHERE ((NOT ((- (vt0.c0))))) UNION ALL SELECT ALL * FROM v0, vt0 WHERE ((((- (vt0.c0))) ISNULL));
SELECT ALL * FROM v0, vt0;
SELECT DISTINCT v0.c0 FROM v0, vt0;
SELECT DISTINCT v0.c0 FROM v0, vt0 WHERE (((v0.c0 COLLATE BINARY)%(((v0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0))))) UNION SELECT DISTINCT v0.c0 FROM v0, vt0 WHERE ((NOT (((v0.c0 COLLATE BINARY)%(((v0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0))))))) UNION SELECT DISTINCT v0.c0 FROM v0, vt0 WHERE (((((v0.c0 COLLATE BINARY)%(((v0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0))))) ISNULL));
SELECT DISTINCT v0.c0 FROM v0, vt0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (((((v0.c0) IS TRUE)) IS FALSE)) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (((((v0.c0) IS TRUE)) IS FALSE)))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((((((v0.c0) IS TRUE)) IS FALSE)) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0;
SELECT v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0 HAVING (NOT (MIN(v0.c0))) UNION ALL SELECT v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0 HAVING (NOT ((NOT (MIN(v0.c0))))) UNION ALL SELECT v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0 HAVING (((NOT (MIN(v0.c0)))) ISNULL);
SELECT ALL v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0;
SELECT v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0 HAVING (NOT (MIN(v0.c0))) UNION ALL SELECT v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0 HAVING (NOT ((NOT (MIN(v0.c0))))) UNION ALL SELECT v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0 HAVING (((NOT (MIN(v0.c0)))) ISNULL);
SELECT ALL v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0;
SELECT vt0.c0 FROM vt0, v0;
SELECT vt0.c0 FROM vt0, v0 WHERE ((- ((v0.c0 IN ())))) UNION ALL SELECT ALL vt0.c0 FROM vt0, v0 WHERE ((NOT ((- ((v0.c0 IN ())))))) UNION ALL SELECT vt0.c0 FROM vt0, v0 WHERE ((((- ((v0.c0 IN ())))) ISNULL));
SELECT vt0.c0 FROM vt0, v0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (((0.7464403721194184) BETWEEN ((((v0.c0))==((v0.c0)))) AND (((v0.c0) ISNULL)))) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (((0.7464403721194184) BETWEEN ((((v0.c0))==((v0.c0)))) AND (((v0.c0) ISNULL)))))) UNION SELECT DISTINCT * FROM v0 WHERE (((((0.7464403721194184) BETWEEN ((((v0.c0))=((v0.c0)))) AND (((v0.c0) ISNULL)))) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT ALL vt0.c0 FROM v0, vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM v0, vt0 WHERE ((((((((vt0.c0))>=((v0.c0))))AND(CAST(v0.c0 AS BLOB))))OR(CAST(vt0.c0 AS TEXT)))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM v0, vt0 WHERE ((NOT ((((((((vt0.c0))>=((v0.c0))))AND(CAST(v0.c0 AS BLOB))))OR(CAST(vt0.c0 AS TEXT)))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM v0, vt0 WHERE ((((((((((vt0.c0))>=((v0.c0))))AND(CAST(v0.c0 AS BLOB))))OR(CAST(vt0.c0 AS TEXT)))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM v0, vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (~ (COUNT(MIN(MAX(COUNT(vt0.c0)))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT ((~ (COUNT(MIN(MAX(COUNT(vt0.c0)))))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((~ (COUNT(MIN(MAX(COUNT(vt0.c0))))))) ISNULL);
SELECT ALL * FROM v0, vt0;
SELECT ALL * FROM v0, vt0 WHERE (((v0.c0 COLLATE BINARY)*(((vt0.c0)+(vt0.c0))))) UNION ALL SELECT * FROM v0, vt0 WHERE ((NOT (((v0.c0 COLLATE BINARY)*(((vt0.c0)+(vt0.c0))))))) UNION ALL SELECT * FROM v0, vt0 WHERE (((((v0.c0 COLLATE BINARY)*(((vt0.c0)+(vt0.c0))))) ISNULL));
SELECT ALL * FROM v0, vt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) ISNULL)) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) ISNULL)))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) ISNULL)) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (v0.c0) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT (v0.c0))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((v0.c0) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0;
SELECT ALL v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0 HAVING ((AVG(vt0.c0))LIKE(COUNT(MAX(MAX(v0.c0))))) UNION ALL SELECT ALL v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0 HAVING (NOT (((AVG(vt0.c0))LIKE(COUNT(MAX(MAX(v0.c0))))))) UNION ALL SELECT ALL v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0 HAVING ((((AVG(vt0.c0))LIKE(COUNT(MAX(MAX(v0.c0)))))) ISNULL);
SELECT ALL vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE ((((((vt0.c0 IN (vt0.c0, vt0.c0)))OR((vt0.c0 IN ()))))OR(vt0.c0 COLLATE RTRIM))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT ((((((vt0.c0 IN (vt0.c0, vt0.c0)))OR((vt0.c0 IN ()))))OR(vt0.c0 COLLATE RTRIM))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((((((((vt0.c0 IN (vt0.c0, vt0.c0)))OR((vt0.c0 IN ()))))OR(vt0.c0 COLLATE RTRIM))) ISNULL));
SELECT ALL vt0.c0 FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((((((((CAST(vt0.c0 AS INTEGER))OR(NULL COLLATE BINARY)))OR(vt0.c0 COLLATE BINARY)))AND(CASE WHEN vt0.c0 THEN 7.76642404E8 END)))OR(CASE WHEN 0.5214204007866438 THEN vt0.c0 END))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((((((((CAST(vt0.c0 AS INTEGER))OR(NULL COLLATE BINARY)))OR(vt0.c0 COLLATE BINARY)))AND(CASE WHEN vt0.c0 THEN 7.76642404E8 END)))OR(CASE WHEN 0.5214204007866438 THEN vt0.c0 END))))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((((((((CAST(vt0.c0 AS INTEGER))OR(NULL COLLATE BINARY)))OR(vt0.c0 COLLATE BINARY)))AND(CASE WHEN vt0.c0 THEN 7.76642404E8 END)))OR(CASE WHEN 0.5214204007866438 THEN vt0.c0 END))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT v0.c0 FROM vt0, v0 GROUP BY v0.c0;
SELECT v0.c0 FROM vt0, v0 WHERE (CAST(((v0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)) AS TEXT)) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM vt0, v0 WHERE ((NOT (CAST(((v0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)) AS TEXT)))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM vt0, v0 WHERE (((CAST(((v0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)) AS TEXT)) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM vt0, v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((MIN(v0.c0))LIKE(MIN(MAX(COUNT(*))))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (((MIN(v0.c0))LIKE(MIN(MAX(COUNT(*))))))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((((MIN(v0.c0))LIKE(MIN(MAX(COUNT(*)))))) ISNULL);
SELECT ALL * FROM vt0 FULL OUTER JOIN v0 ON (+ (((v0.c0) BETWEEN (v0.c0) AND (v0.c0))));
SELECT * FROM vt0 FULL OUTER JOIN v0 ON (+ (((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))) WHERE (TYPEOF(CAST(vt0.c0 AS TEXT))) UNION ALL SELECT * FROM vt0 FULL OUTER JOIN v0 ON (+ (((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))) WHERE ((NOT (TYPEOF(CAST(vt0.c0 AS TEXT))))) UNION ALL SELECT * FROM vt0 FULL OUTER JOIN v0 ON (+ (((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))) WHERE (((TYPEOF(CAST(vt0.c0 AS TEXT))) ISNULL));
SELECT ALL * FROM vt0 FULL OUTER JOIN v0 ON (+ (((v0.c0) BETWEEN (v0.c0) AND (v0.c0))));
SELECT DISTINCT * FROM vt0, v0;
SELECT DISTINCT * FROM vt0, v0 WHERE (HEX(((NULL)>>(v0.c0)))) UNION SELECT DISTINCT * FROM vt0, v0 WHERE ((NOT (HEX(((NULL)>>(v0.c0)))))) UNION SELECT DISTINCT * FROM vt0, v0 WHERE (((HEX(((NULL)>>(v0.c0)))) ISNULL));
SELECT DISTINCT * FROM vt0, v0;
SELECT v0.c0 FROM vt0, v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM vt0, v0 WHERE (((((vt0.c0) NOT NULL)) BETWEEN (('Uf' IN ())) AND (CASE NULL  WHEN v0.c0 THEN v0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN 0.05904010481216626 THEN vt0.c0 ELSE vt0.c0 END))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM vt0, v0 WHERE ((NOT (((((vt0.c0) NOT NULL)) BETWEEN (('Uf' IN ())) AND (CASE NULL  WHEN v0.c0 THEN v0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN 0.05904010481216626 THEN vt0.c0 ELSE vt0.c0 END))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM vt0, v0 WHERE (((((((vt0.c0) NOT NULL)) BETWEEN (('Uf' IN ())) AND (CASE NULL  WHEN v0.c0 THEN v0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN 0.05904010481216626 THEN vt0.c0 ELSE vt0.c0 END))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM vt0, v0 GROUP BY v0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((MAX(vt0.c0)) IS TRUE) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (((MAX(vt0.c0)) IS TRUE))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((MAX(vt0.c0)) IS TRUE)) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((MAX(vt0.c0)) IS TRUE) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (((MAX(vt0.c0)) IS TRUE))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((MAX(vt0.c0)) IS TRUE)) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT * FROM vt0;
SELECT ALL * FROM vt0 WHERE (CASE 0.7267500532856266  WHEN x'' THEN '|z' END) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (CASE 0.7267500532856266  WHEN x'' THEN '|z' END))) UNION ALL SELECT ALL * FROM vt0 WHERE (((CASE 0.7267500532856266  WHEN x'' THEN '|z' END) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((('-827487070')) BETWEEN (((~ ('114441670')))) AND ((vt0.c0)))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((('-827487070')) BETWEEN (((~ ('114441670')))) AND ((vt0.c0)))))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((('-827487070')) BETWEEN (((~ ('114441670')))) AND ((vt0.c0)))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT v0.c0 FROM v0, vt0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0, vt0 WHERE ('#9\rR\m') GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0, vt0 WHERE ((NOT ('#9\rR\m'))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0, vt0 WHERE ((('#9\rR\m') ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0, vt0 GROUP BY v0.c0;
SELECT v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0;
SELECT v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0 HAVING (NOT ((vt0.c0 IN ()))) UNION ALL SELECT ALL v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0 HAVING (NOT ((NOT ((vt0.c0 IN ()))))) UNION ALL SELECT ALL v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0 HAVING (((NOT ((vt0.c0 IN ())))) ISNULL);
SELECT v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0;
SELECT v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0 HAVING (NOT ((vt0.c0 IN ()))) UNION ALL SELECT ALL v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0 HAVING (NOT ((NOT ((vt0.c0 IN ()))))) UNION ALL SELECT ALL v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0 HAVING (((NOT ((vt0.c0 IN ())))) ISNULL);
SELECT v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0;
SELECT ALL v0.c0 FROM v0 CROSS JOIN vt0 ON vt0.c0;
SELECT v0.c0 FROM v0 CROSS JOIN vt0 ON vt0.c0 WHERE (((((vt0.c0) BETWEEN (v0.c0) AND (vt0.c0))) NOT BETWEEN (v0.c0) AND ('jjk.㪫'))) UNION ALL SELECT ALL v0.c0 FROM v0 CROSS JOIN vt0 ON vt0.c0 WHERE ((NOT (((((vt0.c0) BETWEEN (v0.c0) AND (vt0.c0))) NOT BETWEEN (v0.c0) AND ('jjk.㪫'))))) UNION ALL SELECT v0.c0 FROM v0 CROSS JOIN vt0 ON vt0.c0 WHERE (((((((vt0.c0) BETWEEN (v0.c0) AND (vt0.c0))) NOT BETWEEN (v0.c0) AND ('jjk.㪫'))) ISNULL));
SELECT ALL v0.c0 FROM v0 CROSS JOIN vt0 ON vt0.c0;
SELECT DISTINCT * FROM v0 RIGHT OUTER JOIN vt0 ON (((((((vt0.c0, v0.c0, vt0.c0))<((vt0.c0, v0.c0, vt0.c0))))AND(((v0.c0) IS TRUE))))OR(x''));
SELECT DISTINCT * FROM v0 RIGHT OUTER JOIN vt0 ON (((((((vt0.c0, v0.c0, vt0.c0))<((vt0.c0, v0.c0, vt0.c0))))AND(((v0.c0) IS TRUE))))OR(x'')) WHERE ('838056941' COLLATE BINARY) UNION SELECT DISTINCT * FROM v0 RIGHT OUTER JOIN vt0 ON (((((((vt0.c0, v0.c0, vt0.c0))<((vt0.c0, v0.c0, vt0.c0))))AND(((v0.c0) IS TRUE))))OR(x'')) WHERE ((NOT ('838056941' COLLATE BINARY))) UNION SELECT DISTINCT * FROM v0 RIGHT OUTER JOIN vt0 ON (((((((vt0.c0, v0.c0, vt0.c0))<((vt0.c0, v0.c0, vt0.c0))))AND(((v0.c0) IS TRUE))))OR(x'')) WHERE ((('838056941' COLLATE BINARY) ISNULL));
SELECT DISTINCT * FROM v0 RIGHT OUTER JOIN vt0 ON (((((((vt0.c0, v0.c0, vt0.c0))<((vt0.c0, v0.c0, vt0.c0))))AND(((v0.c0) IS TRUE))))OR(x''));
SELECT vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0;
SELECT ALL vt0.c0, v0.c0 FROM v0, vt0 WHERE (((((((((((0.439855273135194)OR(vt0.c0)))AND(vt0.c0)))OR(v0.c0)))OR(vt0.c0))) ISNULL)) GROUP BY vt0.c0, v0.c0 UNION SELECT ALL vt0.c0, v0.c0 FROM v0, vt0 WHERE ((NOT (((((((((((0.439855273135194)OR(vt0.c0)))AND(vt0.c0)))OR(v0.c0)))OR(vt0.c0))) ISNULL)))) GROUP BY vt0.c0, v0.c0 UNION SELECT ALL vt0.c0, v0.c0 FROM v0, vt0 WHERE (((((((((((((0.439855273135194)OR(vt0.c0)))AND(vt0.c0)))OR(v0.c0)))OR(vt0.c0))) ISNULL)) ISNULL)) GROUP BY vt0.c0, v0.c0;
SELECT vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING TOTAL(vt0.c0 COLLATE NOCASE) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (TOTAL(vt0.c0 COLLATE NOCASE))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((TOTAL(vt0.c0 COLLATE NOCASE)) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING TOTAL(vt0.c0 COLLATE NOCASE) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (TOTAL(vt0.c0 COLLATE NOCASE))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((TOTAL(vt0.c0 COLLATE NOCASE)) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT * FROM v0, vt0;
SELECT * FROM v0, vt0 WHERE ('-1375572460') UNION ALL SELECT * FROM v0, vt0 WHERE ((NOT ('-1375572460'))) UNION ALL SELECT ALL * FROM v0, vt0 WHERE ((('-1375572460') ISNULL));
SELECT * FROM v0, vt0;
SELECT DISTINCT v0.c0 FROM v0, vt0;
SELECT DISTINCT v0.c0 FROM v0, vt0 WHERE ((((((v0.c0, vt0.c0, vt0.c0))<=((vt0.c0, v0.c0, v0.c0))))<<(CAST(vt0.c0 AS INTEGER)))) UNION SELECT DISTINCT v0.c0 FROM v0, vt0 WHERE ((NOT ((((((v0.c0, vt0.c0, vt0.c0))<=((vt0.c0, v0.c0, v0.c0))))<<(CAST(vt0.c0 AS INTEGER)))))) UNION SELECT DISTINCT v0.c0 FROM v0, vt0 NOT INDEXED WHERE ((((((((v0.c0, vt0.c0, vt0.c0))<=((vt0.c0, v0.c0, v0.c0))))<<(CAST(vt0.c0 AS INTEGER)))) ISNULL));
SELECT DISTINCT v0.c0 FROM v0, vt0;
SELECT vt0.c0 FROM v0, vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM v0, vt0 WHERE (CASE WHEN vt0.c0 THEN (((v0.c0)) NOT BETWEEN ((vt0.c0)) AND ((v0.c0))) WHEN ((vt0.c0)<(vt0.c0)) THEN (((vt0.c0, vt0.c0, v0.c0))<=((v0.c0, vt0.c0, v0.c0))) WHEN ((v0.c0) NOTNULL) THEN HEX(DISTINCT v0.c0) ELSE v0.c0 END) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM v0, vt0 WHERE ((NOT (CASE WHEN vt0.c0 THEN (((v0.c0)) NOT BETWEEN ((vt0.c0)) AND ((v0.c0))) WHEN ((vt0.c0)<(vt0.c0)) THEN (((vt0.c0, vt0.c0, v0.c0))<=((v0.c0, vt0.c0, v0.c0))) WHEN ((v0.c0) NOTNULL) THEN HEX(DISTINCT v0.c0) ELSE v0.c0 END))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM v0, vt0 WHERE (((CASE WHEN vt0.c0 THEN (((v0.c0)) NOT BETWEEN ((vt0.c0)) AND ((v0.c0))) WHEN ((vt0.c0)<(vt0.c0)) THEN (((vt0.c0, vt0.c0, v0.c0))<=((v0.c0, vt0.c0, v0.c0))) WHEN ((v0.c0) NOTNULL) THEN HEX(DISTINCT v0.c0) ELSE v0.c0 END) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM v0, vt0 GROUP BY vt0.c0;
SELECT vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0;
SELECT vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0 HAVING SUM(((((((((MAX(v0.c0))AND(COUNT(*))))OR(AVG(COUNT(v0.c0)))))AND('-211677733')))AND(v0.c0))) UNION ALL SELECT vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0 HAVING (NOT (SUM(((((((((MAX(v0.c0))AND(COUNT(*))))OR(AVG(COUNT(v0.c0)))))AND('-211677733')))AND(v0.c0))))) UNION ALL SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0 HAVING ((SUM(((((((((MAX(v0.c0))AND(COUNT(*))))OR(AVG(COUNT(v0.c0)))))AND('-211677733')))AND(v0.c0)))) ISNULL);
SELECT v0.c0 FROM v0;
SELECT ALL v0.c0 FROM v0 WHERE (COALESCE((- (v0.c0)), ((v0.c0) IS FALSE))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE ((NOT (COALESCE((- (v0.c0)), ((v0.c0) IS FALSE))))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE (((COALESCE((- (v0.c0)), ((v0.c0) IS FALSE))) ISNULL));
SELECT v0.c0 FROM v0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (((v0.c0) NOT NULL) COLLATE NOCASE) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (((v0.c0) NOT NULL) COLLATE NOCASE))) UNION SELECT DISTINCT * FROM v0 WHERE (((((v0.c0) NOT NULL) COLLATE NOCASE) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (CAST(v0.c0 AS INTEGER) COLLATE NOCASE) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT (CAST(v0.c0 AS INTEGER) COLLATE NOCASE))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE (((CAST(v0.c0 AS INTEGER) COLLATE NOCASE) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0;
SELECT vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0 HAVING CAST(((AVG(vt0.c0))==(vt0.c0)) AS BLOB) UNION ALL SELECT vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0 HAVING (NOT (CAST(((AVG(vt0.c0))=(vt0.c0)) AS BLOB))) UNION ALL SELECT vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0 HAVING ((CAST(((AVG(vt0.c0))=(vt0.c0)) AS BLOB)) ISNULL);
SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0;
SELECT vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0 HAVING CAST(((AVG(vt0.c0))==(vt0.c0)) AS BLOB) UNION ALL SELECT vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0 HAVING (NOT (CAST(((AVG(vt0.c0))=(vt0.c0)) AS BLOB))) UNION ALL SELECT vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0 HAVING ((CAST(((AVG(vt0.c0))=(vt0.c0)) AS BLOB)) ISNULL);
SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0;
SELECT ALL * FROM v0;
SELECT * FROM v0 WHERE (CASE WHEN v0.c0 THEN v0.c0 COLLATE NOCASE END) UNION ALL SELECT * FROM v0 WHERE ((NOT (CASE WHEN v0.c0 THEN v0.c0 COLLATE NOCASE END))) UNION ALL SELECT ALL * FROM v0 WHERE (((CASE WHEN v0.c0 THEN v0.c0 COLLATE NOCASE END) ISNULL));
SELECT ALL * FROM v0;
SELECT DISTINCT vt0.c0, v0.c0 FROM v0, vt0;
SELECT DISTINCT vt0.c0, v0.c0 FROM v0, vt0 WHERE (((json_remove(v0.c0, v0.c0))-(((vt0.c0)<>(vt0.c0))))) UNION SELECT DISTINCT vt0.c0, v0.c0 FROM v0, vt0 WHERE ((NOT (((json_remove(v0.c0, v0.c0))-(((vt0.c0)!=(vt0.c0))))))) UNION SELECT DISTINCT vt0.c0, v0.c0 FROM v0, vt0 WHERE (((((json_remove(v0.c0, v0.c0))-(((vt0.c0)!=(vt0.c0))))) ISNULL));
SELECT DISTINCT vt0.c0, v0.c0 FROM v0, vt0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (((MIN('s%iKF', v0.c0)) IS TRUE)) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (((MIN('s%iKF', v0.c0)) IS TRUE)))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((((MIN('s%iKF', v0.c0)) IS TRUE)) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING GROUP_CONCAT(TOTAL(v0.c0)) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (GROUP_CONCAT(TOTAL(v0.c0)))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((GROUP_CONCAT(TOTAL(v0.c0))) ISNULL);
SELECT ALL * FROM vt0;
SELECT ALL * FROM vt0 WHERE ((((LIKELY(DISTINCT vt0.c0)))>=((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))) UNION ALL SELECT * FROM vt0 WHERE ((NOT ((((LIKELY(DISTINCT vt0.c0)))>=((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))))) UNION ALL SELECT ALL * FROM vt0 WHERE ((((((LIKELY(DISTINCT vt0.c0)))>=((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT v0.c0, vt0.c0 FROM v0 RIGHT OUTER JOIN vt0 ON (~ (ABS(vt0.c0)));
SELECT DISTINCT v0.c0, vt0.c0 FROM v0 RIGHT OUTER JOIN vt0 ON (~ (ABS(vt0.c0))) WHERE (((vt0.c0)&(vt0.c0))) UNION SELECT DISTINCT v0.c0, vt0.c0 FROM v0 RIGHT OUTER JOIN vt0 ON (~ (ABS(vt0.c0))) WHERE ((NOT (((vt0.c0)&(vt0.c0))))) UNION SELECT DISTINCT v0.c0, vt0.c0 FROM v0 RIGHT OUTER JOIN vt0 ON (~ (ABS(vt0.c0))) WHERE (((((vt0.c0)&(vt0.c0))) ISNULL));
SELECT DISTINCT v0.c0, vt0.c0 FROM v0 RIGHT OUTER JOIN vt0 ON (~ (ABS(vt0.c0)));
SELECT ALL v0.c0, vt0.c0 FROM vt0 LEFT OUTER JOIN v0 ON (((v0.c0, v0.c0, 'now'))<((vt0.c0, 0Xfffffffff92b76be, v0.c0))) COLLATE RTRIM GROUP BY v0.c0, vt0.c0;
SELECT ALL v0.c0, vt0.c0 FROM vt0 LEFT OUTER JOIN v0 ON (((v0.c0, v0.c0, 'now'))<((vt0.c0, 0Xfffffffff92b76be, v0.c0))) COLLATE RTRIM WHERE (v0.c0) GROUP BY v0.c0, vt0.c0 UNION SELECT v0.c0, vt0.c0 FROM vt0 NOT INDEXED LEFT OUTER JOIN v0 ON (((v0.c0, v0.c0, 'now'))<((vt0.c0, 0xfffffffff92b76be, v0.c0))) COLLATE RTRIM WHERE ((NOT (v0.c0))) GROUP BY v0.c0, vt0.c0 UNION SELECT ALL v0.c0, vt0.c0 FROM vt0 LEFT OUTER JOIN v0 ON (((v0.c0, v0.c0, 'now'))<((vt0.c0, 0xfffffffff92b76be, v0.c0))) COLLATE RTRIM WHERE (((v0.c0) ISNULL)) GROUP BY v0.c0, vt0.c0;
SELECT ALL v0.c0, vt0.c0 FROM vt0 LEFT OUTER JOIN v0 ON (((v0.c0, v0.c0, 'now'))<((vt0.c0, 0Xfffffffff92b76be, v0.c0))) COLLATE RTRIM GROUP BY v0.c0, vt0.c0;
SELECT ALL vt0.c0 FROM v0, vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM v0, vt0 GROUP BY vt0.c0 HAVING ((v0.c0 COLLATE NOCASE)AND(COUNT(*))) UNION ALL SELECT vt0.c0 FROM v0, vt0 GROUP BY vt0.c0 HAVING (NOT (((v0.c0 COLLATE NOCASE)AND(COUNT(*))))) UNION ALL SELECT ALL vt0.c0 FROM v0, vt0 GROUP BY vt0.c0 HAVING ((((v0.c0 COLLATE NOCASE)AND(COUNT(*)))) ISNULL);
SELECT ALL vt0.c0 FROM v0, vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM v0, vt0 GROUP BY vt0.c0 HAVING ((v0.c0 COLLATE NOCASE)AND(COUNT(*))) UNION ALL SELECT vt0.c0 FROM v0, vt0 GROUP BY vt0.c0 HAVING (NOT (((v0.c0 COLLATE NOCASE)AND(COUNT(*))))) UNION ALL SELECT ALL vt0.c0 FROM v0, vt0 GROUP BY vt0.c0 HAVING ((((v0.c0 COLLATE NOCASE)AND(COUNT(*)))) ISNULL);
SELECT ALL vt0.c0 FROM v0, vt0 GROUP BY vt0.c0;
SELECT * FROM vt0, v0;
SELECT * FROM vt0, v0 WHERE (((((NULL) NOTNULL))=(highlight(v0.c0, v0.c0, '659365466', v0.c0)))) UNION ALL SELECT ALL * FROM vt0, v0 WHERE ((NOT (((((NULL) NOTNULL))==(highlight(v0.c0, v0.c0, '659365466', v0.c0)))))) UNION ALL SELECT * FROM vt0, v0 NOT INDEXED WHERE (((((((NULL) NOTNULL))=(highlight(v0.c0, v0.c0, '659365466', v0.c0)))) ISNULL));
SELECT * FROM vt0, v0;
SELECT DISTINCT v0.c0 FROM v0 CROSS JOIN vt0 ON 0.39391210809531374;
SELECT DISTINCT v0.c0 FROM v0 CROSS JOIN vt0 ON 0.39391210809531374 WHERE (((((NULL)GLOB(vt0.c0)))<((((vt0.c0, v0.c0, vt0.c0))<((vt0.c0, v0.c0, NULL)))))) UNION SELECT DISTINCT v0.c0 FROM v0 CROSS JOIN vt0 ON 0.39391210809531374 WHERE ((NOT (((((NULL)GLOB(vt0.c0)))<((((vt0.c0, v0.c0, vt0.c0))<((vt0.c0, v0.c0, NULL)))))))) UNION SELECT DISTINCT v0.c0 FROM v0 CROSS JOIN vt0 ON 0.39391210809531374 WHERE (((((((NULL)GLOB(vt0.c0)))<((((vt0.c0, v0.c0, vt0.c0))<((vt0.c0, v0.c0, NULL)))))) ISNULL));
SELECT DISTINCT v0.c0 FROM v0 CROSS JOIN vt0 ON 0.39391210809531374;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (((json_remove(vt0.c0, x'f5f4', vt0.c0, vt0.c0))<<(json_patch('-1718170637', vt0.c0)))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (((json_remove(vt0.c0, x'f5f4', vt0.c0, vt0.c0))<<(json_patch('-1718170637', vt0.c0)))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((((json_remove(vt0.c0, x'f5f4', vt0.c0, vt0.c0))<<(json_patch('-1718170637', vt0.c0)))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, v0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, v0 GROUP BY vt0.c0 HAVING x'' UNION ALL SELECT vt0.c0 FROM vt0, v0 GROUP BY vt0.c0 HAVING (NOT (x'')) UNION ALL SELECT ALL vt0.c0 FROM vt0, v0 GROUP BY vt0.c0 HAVING ((x'') ISNULL);
SELECT ALL vt0.c0 FROM vt0, v0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, v0 GROUP BY vt0.c0 HAVING x'' UNION ALL SELECT vt0.c0 FROM vt0, v0 GROUP BY vt0.c0 HAVING (NOT (x'')) UNION ALL SELECT ALL vt0.c0 FROM vt0, v0 GROUP BY vt0.c0 HAVING ((x'') ISNULL);
SELECT ALL vt0.c0 FROM vt0, v0 GROUP BY vt0.c0;
SELECT ALL * FROM vt0 LEFT OUTER JOIN v0 ON ((v0.c0 COLLATE NOCASE)>=(((v0.c0)-(v0.c0))));
SELECT ALL * FROM vt0 LEFT OUTER JOIN v0 ON ((v0.c0 COLLATE NOCASE)>=(((v0.c0)-(v0.c0)))) WHERE (((vt0.c0)<=(HEX(DISTINCT vt0.c0)))) UNION ALL SELECT ALL * FROM vt0 LEFT OUTER JOIN v0 ON ((v0.c0 COLLATE NOCASE)>=(((v0.c0)-(v0.c0)))) WHERE ((NOT (((vt0.c0)<=(HEX(DISTINCT vt0.c0)))))) UNION ALL SELECT ALL * FROM vt0 LEFT OUTER JOIN v0 ON ((v0.c0 COLLATE NOCASE)>=(((v0.c0)-(v0.c0)))) WHERE (((((vt0.c0)<=(HEX(DISTINCT vt0.c0)))) ISNULL));
SELECT ALL * FROM vt0 LEFT OUTER JOIN v0 ON ((v0.c0 COLLATE NOCASE)>=(((v0.c0)-(v0.c0))));
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((vt0.c0) IS TRUE) COLLATE BINARY) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((vt0.c0) IS TRUE) COLLATE BINARY))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((vt0.c0) IS TRUE) COLLATE BINARY) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (CASE WHEN ((v0.c0) NOT NULL) THEN CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END ELSE CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END END) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (CASE WHEN ((v0.c0) NOT NULL) THEN CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END ELSE CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END END))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((CASE WHEN ((v0.c0) NOT NULL) THEN CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END ELSE CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END END) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT vt0.c0 FROM v0, vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM v0, vt0 GROUP BY vt0.c0 HAVING MIN(COUNT(*)) UNION ALL SELECT ALL vt0.c0 FROM v0, vt0 GROUP BY vt0.c0 HAVING (NOT (MIN(COUNT(*)))) UNION ALL SELECT vt0.c0 FROM v0, vt0 GROUP BY vt0.c0 HAVING ((MIN(COUNT(*))) ISNULL);
SELECT * FROM v0;
SELECT ALL * FROM v0 WHERE (CAST(v0.c0 COLLATE NOCASE AS NUMERIC)) UNION ALL SELECT * FROM v0 WHERE ((NOT (CAST(v0.c0 COLLATE NOCASE AS NUMERIC)))) UNION ALL SELECT ALL * FROM v0 WHERE (((CAST(v0.c0 COLLATE NOCASE AS NUMERIC)) ISNULL));
SELECT * FROM v0;
SELECT DISTINCT vt0.c0 FROM v0, vt0;
SELECT DISTINCT vt0.c0 FROM v0, vt0 WHERE ((UPPER(v0.c0) IN (CASE ''  WHEN v0.c0 THEN v0.c0 ELSE vt0.c0 END))) UNION SELECT DISTINCT vt0.c0 FROM v0, vt0 WHERE ((NOT ((UPPER(v0.c0) IN (CASE ''  WHEN v0.c0 THEN v0.c0 ELSE vt0.c0 END))))) UNION SELECT DISTINCT vt0.c0 FROM v0, vt0 WHERE ((((UPPER(v0.c0) IN (CASE ''  WHEN v0.c0 THEN v0.c0 ELSE vt0.c0 END))) ISNULL));
SELECT DISTINCT vt0.c0 FROM v0, vt0;
SELECT ALL v0.c0 FROM vt0, v0 GROUP BY v0.c0;
SELECT v0.c0 FROM vt0, v0 WHERE (((vt0.c0)&('?''K')) COLLATE NOCASE) GROUP BY v0.c0 UNION SELECT v0.c0 FROM vt0, v0 WHERE ((NOT (((vt0.c0)&('?''K')) COLLATE NOCASE))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM vt0, v0 WHERE (((((vt0.c0)&('?''K')) COLLATE NOCASE) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM vt0, v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING MIN(v0.c0) COLLATE NOCASE UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (MIN(v0.c0) COLLATE NOCASE)) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((MIN(v0.c0) COLLATE NOCASE) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING MIN(v0.c0) COLLATE NOCASE UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (MIN(v0.c0) COLLATE NOCASE)) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((MIN(v0.c0) COLLATE NOCASE) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM vt0, v0;
SELECT ALL v0.c0 FROM vt0, v0 WHERE (((UNLIKELY(DISTINCT v0.c0)) BETWEEN (v0.c0) AND ((((vt0.c0))>((vt0.c0)))))) UNION ALL SELECT ALL v0.c0 FROM vt0, v0 WHERE ((NOT (((UNLIKELY(DISTINCT v0.c0)) BETWEEN (v0.c0) AND ((((vt0.c0))>((vt0.c0)))))))) UNION ALL SELECT v0.c0 FROM vt0, v0 WHERE (((((UNLIKELY(DISTINCT v0.c0)) BETWEEN (v0.c0) AND ((((vt0.c0))>((vt0.c0)))))) ISNULL));
SELECT ALL v0.c0 FROM vt0, v0;
SELECT DISTINCT * FROM vt0 RIGHT OUTER JOIN v0 ON (+ (vt0.c0)) COLLATE RTRIM;
SELECT DISTINCT * FROM vt0 RIGHT OUTER JOIN v0 ON (+ (vt0.c0)) COLLATE RTRIM WHERE (CAST(CAST(v0.c0 AS REAL) AS BLOB)) UNION SELECT DISTINCT * FROM vt0 RIGHT OUTER JOIN v0 ON (+ (vt0.c0)) COLLATE RTRIM WHERE ((NOT (CAST(CAST(v0.c0 AS REAL) AS BLOB)))) UNION SELECT DISTINCT * FROM vt0 NOT INDEXED RIGHT OUTER JOIN v0 ON (+ (vt0.c0)) COLLATE RTRIM WHERE (((CAST(CAST(v0.c0 AS REAL) AS BLOB)) ISNULL));
SELECT DISTINCT * FROM vt0 RIGHT OUTER JOIN v0 ON (+ (vt0.c0)) COLLATE RTRIM;
SELECT ALL v0.c0 FROM vt0, v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM vt0, v0 WHERE ((~ (vt0.c0))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM vt0, v0 WHERE ((NOT ((~ (vt0.c0))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM vt0, v0 WHERE ((((~ (vt0.c0))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM vt0, v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING TOTAL(AVG(v0.c0)) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (TOTAL(AVG(v0.c0)))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((TOTAL(AVG(v0.c0))) ISNULL);
SELECT ALL * FROM vt0, v0;
SELECT * FROM vt0, v0 WHERE (CASE WHEN (((v0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN CASE v0.c0  WHEN vt0.c0 THEN v0.c0 END END) UNION ALL SELECT ALL * FROM vt0, v0 WHERE ((NOT (CASE WHEN (((v0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN CASE v0.c0  WHEN vt0.c0 THEN v0.c0 END END))) UNION ALL SELECT ALL * FROM vt0, v0 WHERE (((CASE WHEN (((v0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN CASE v0.c0  WHEN vt0.c0 THEN v0.c0 END END) ISNULL));
SELECT ALL * FROM vt0, v0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) BETWEEN ((0.7267500532856266 IN (vt0.c0))) AND (vt0.c0))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) BETWEEN ((0.7267500532856266 IN (vt0.c0))) AND (vt0.c0))))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) BETWEEN ((0.7267500532856266 IN (vt0.c0))) AND (vt0.c0))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (vt0.c0) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (vt0.c0))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((vt0.c0) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((((v0.c0 COLLATE BINARY)OR(CASE WHEN v0.c0 THEN v0.c0 ELSE AVG(v0.c0) END)))OR((((v0.c0, v0.c0, TOTAL(COUNT(*)))) NOT BETWEEN ((MIN(SUM(v0.c0)), TOTAL(SUM(AVG(AVG(v0.c0)))), SUM(COUNT(*)))) AND ((v0.c0, v0.c0, MAX(v0.c0)))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (((((v0.c0 COLLATE BINARY)OR(CASE WHEN v0.c0 THEN v0.c0 ELSE AVG(v0.c0) END)))OR((((v0.c0, v0.c0, TOTAL(COUNT(*)))) NOT BETWEEN ((MIN(SUM(v0.c0)), TOTAL(SUM(AVG(AVG(v0.c0)))), SUM(COUNT(*)))) AND ((v0.c0, v0.c0, MAX(v0.c0)))))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((((((v0.c0 COLLATE BINARY)OR(CASE WHEN v0.c0 THEN v0.c0 ELSE AVG(v0.c0) END)))OR((((v0.c0, v0.c0, TOTAL(COUNT(*)))) NOT BETWEEN ((MIN(SUM(v0.c0)), TOTAL(SUM(AVG(AVG(v0.c0)))), SUM(COUNT(*)))) AND ((v0.c0, v0.c0, MAX(v0.c0))))))) ISNULL);
SELECT * FROM v0;
SELECT * FROM v0 WHERE (rtreenode(v0.c0, v0.c0) COLLATE BINARY) UNION ALL SELECT * FROM v0 WHERE ((NOT (rtreenode(v0.c0, v0.c0) COLLATE BINARY))) UNION ALL SELECT * FROM v0 WHERE (((rtreenode(v0.c0, v0.c0) COLLATE BINARY) ISNULL));
SELECT * FROM v0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((vt0.c0)AND(vt0.c0)) COLLATE RTRIM) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (((vt0.c0)AND(vt0.c0)) COLLATE RTRIM))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((((vt0.c0)AND(vt0.c0)) COLLATE RTRIM) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (((((((((((v0.c0)OR(v0.c0)))AND(x'')))OR(v0.c0)))OR(v0.c0)))-(CASE WHEN v0.c0 THEN 114441670 END))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT (((((((((((v0.c0)OR(v0.c0)))AND(x'')))OR(v0.c0)))OR(v0.c0)))-(CASE WHEN v0.c0 THEN 114441670 END))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((((((((((((v0.c0)OR(v0.c0)))AND(x'')))OR(v0.c0)))OR(v0.c0)))-(CASE WHEN v0.c0 THEN 114441670 END))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING COUNT(AVG(v0.c0)) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (COUNT(AVG(v0.c0)))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((COUNT(AVG(v0.c0))) ISNULL);
SELECT ALL vt0.c0, v0.c0 FROM vt0 LEFT OUTER JOIN v0 ON 0x4b690c82;
SELECT vt0.c0, v0.c0 FROM vt0 LEFT OUTER JOIN v0 ON 0X4b690c82 WHERE (UPPER(DISTINCT CASE WHEN 2.053259375E9 THEN vt0.c0 ELSE v0.c0 END)) UNION ALL SELECT vt0.c0, v0.c0 FROM vt0 LEFT OUTER JOIN v0 ON 0X4b690c82 WHERE ((NOT (UPPER(DISTINCT CASE WHEN 2.053259375E9 THEN vt0.c0 ELSE v0.c0 END)))) UNION ALL SELECT ALL vt0.c0, v0.c0 FROM vt0 LEFT OUTER JOIN v0 ON 0x4b690c82 WHERE (((UPPER(DISTINCT CASE WHEN 2.053259375E9 THEN vt0.c0 ELSE v0.c0 END)) ISNULL));
SELECT ALL vt0.c0, v0.c0 FROM vt0 LEFT OUTER JOIN v0 ON 0x4b690c82;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (IFNULL(((0.22975646982930598) NOT BETWEEN (v0.c0) AND (v0.c0)), (((v0.c0))>((v0.c0))))) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (IFNULL(((0.22975646982930598) NOT BETWEEN (v0.c0) AND (v0.c0)), (((v0.c0))>((v0.c0))))))) UNION SELECT DISTINCT * FROM v0 WHERE (((IFNULL(((0.22975646982930598) NOT BETWEEN (v0.c0) AND (v0.c0)), (((v0.c0))>((v0.c0))))) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (CAST(((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))AND(v0.c0)))OR(v0.c0)) AS TEXT)) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (CAST(((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))AND(v0.c0)))OR(v0.c0)) AS TEXT)))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((CAST(((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))AND(v0.c0)))OR(v0.c0)) AS TEXT)) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((x''))>((NULL))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT ((((x''))>((NULL))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((((x''))>((NULL)))) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((x''))>((NULL))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT ((((x''))>((NULL))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((((x''))>((NULL)))) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT * FROM v0;
SELECT ALL * FROM v0 WHERE (((((((((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))OR((((NULL)) BETWEEN ((v0.c0)) AND ((v0.c0))))))AND(((v0.c0)<(v0.c0)))))AND(((v0.c0)>(v0.c0)))))OR(x''))) UNION ALL SELECT * FROM v0 WHERE ((NOT (((((((((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))OR((((NULL)) BETWEEN ((v0.c0)) AND ((v0.c0))))))AND(((v0.c0)<(v0.c0)))))AND(((v0.c0)>(v0.c0)))))OR(x''))))) UNION ALL SELECT ALL * FROM v0 WHERE (((((((((((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))OR((((NULL)) BETWEEN ((v0.c0)) AND ((v0.c0))))))AND(((v0.c0)<(v0.c0)))))AND(((v0.c0)>(v0.c0)))))OR(x''))) ISNULL));
SELECT * FROM v0;
SELECT DISTINCT v0.c0 FROM vt0, v0;
SELECT DISTINCT v0.c0 FROM vt0, v0 WHERE (SQLITE_SOURCE_ID()) UNION SELECT DISTINCT v0.c0 FROM vt0, v0 WHERE ((NOT (SQLITE_SOURCE_ID()))) UNION SELECT DISTINCT v0.c0 FROM vt0, v0 WHERE (((SQLITE_SOURCE_ID()) ISNULL));
SELECT DISTINCT v0.c0 FROM vt0, v0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (x'') GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (x''))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((x'') ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING COUNT(*) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING COUNT(*) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE ((((~ (vt0.c0)))IS NOT(((vt0.c0)LIKE(vt0.c0))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT ((((~ (vt0.c0)))IS NOT(((vt0.c0)LIKE(vt0.c0))))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((((((~ (vt0.c0)))IS NOT(((vt0.c0)LIKE(vt0.c0))))) ISNULL));
SELECT ALL vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0, v0.c0 FROM v0, vt0;
SELECT DISTINCT vt0.c0, v0.c0 FROM v0, vt0 WHERE ('P4t' COLLATE RTRIM) UNION SELECT DISTINCT vt0.c0, v0.c0 FROM v0, vt0 WHERE ((NOT ('P4t' COLLATE RTRIM))) UNION SELECT DISTINCT vt0.c0, v0.c0 FROM v0, vt0 WHERE ((('P4t' COLLATE RTRIM) ISNULL));
SELECT DISTINCT vt0.c0, v0.c0 FROM v0, vt0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (0.5895761060438368) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (0.5895761060438368))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((0.5895761060438368) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((NOT (vt0.c0)))AND((NOT (vt0.c0)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT ((((NOT (vt0.c0)))AND((NOT (vt0.c0)))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((((NOT (vt0.c0)))AND((NOT (vt0.c0))))) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((NOT (vt0.c0)))AND((NOT (vt0.c0)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT ((((NOT (vt0.c0)))AND((NOT (vt0.c0)))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((((NOT (vt0.c0)))AND((NOT (vt0.c0))))) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL v0.c0 FROM vt0, v0;
SELECT v0.c0 FROM vt0, v0 WHERE (UNLIKELY(((vt0.c0) NOT NULL))) UNION ALL SELECT ALL v0.c0 FROM vt0, v0 WHERE ((NOT (UNLIKELY(((vt0.c0) NOT NULL))))) UNION ALL SELECT v0.c0 FROM vt0, v0 WHERE (((UNLIKELY(((vt0.c0) NOT NULL))) ISNULL));
SELECT ALL v0.c0 FROM vt0, v0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (v0.c0) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (v0.c0))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((v0.c0) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT ALL vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0;
SELECT ALL vt0.c0, v0.c0 FROM v0, vt0 WHERE (((((v0.c0) NOTNULL))>>(((v0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0))))) GROUP BY vt0.c0, v0.c0 UNION SELECT vt0.c0, v0.c0 FROM v0, vt0 WHERE ((NOT (((((v0.c0) NOTNULL))>>(((v0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0))))))) GROUP BY vt0.c0, v0.c0 UNION SELECT vt0.c0, v0.c0 FROM v0, vt0 WHERE (((((((v0.c0) NOTNULL))>>(((v0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0))))) ISNULL)) GROUP BY vt0.c0, v0.c0;
SELECT ALL vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING MAX(SUM(SUM(SUM(vt0.c0)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (MAX(SUM(SUM(SUM(vt0.c0)))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((MAX(SUM(SUM(SUM(vt0.c0))))) ISNULL);
SELECT ALL v0.c0 FROM v0;
SELECT v0.c0 FROM v0 WHERE ((((((v0.c0) IS FALSE)))<((CASE WHEN v0.c0 THEN v0.c0 END)))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE ((NOT ((((((v0.c0) IS FALSE)))<((CASE WHEN v0.c0 THEN v0.c0 END)))))) UNION ALL SELECT v0.c0 FROM v0 WHERE ((((((((v0.c0) IS FALSE)))<((CASE WHEN v0.c0 THEN v0.c0 END)))) ISNULL));
SELECT ALL v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (CAST(highlight(x'986e', v0.c0, v0.c0, v0.c0) AS INTEGER)) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (CAST(highlight(x'986e', v0.c0, v0.c0, v0.c0) AS INTEGER)))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((CAST(highlight(x'986e', v0.c0, v0.c0, v0.c0) AS INTEGER)) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (((((v0.c0)AND(v0.c0)))OR(v0.c0)) COLLATE NOCASE) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (((((v0.c0)AND(v0.c0)))OR(v0.c0)) COLLATE NOCASE))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((((((v0.c0)AND(v0.c0)))OR(v0.c0)) COLLATE NOCASE) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING COUNT(TOTAL(TOTAL(GROUP_CONCAT(MAX(NULL))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(TOTAL(TOTAL(GROUP_CONCAT(MAX(NULL))))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT(TOTAL(TOTAL(GROUP_CONCAT(MAX(NULL)))))) ISNULL);
SELECT v0.c0, vt0.c0 FROM v0, vt0;
SELECT ALL v0.c0, vt0.c0 FROM v0, vt0 WHERE (v0.c0 COLLATE BINARY COLLATE NOCASE COLLATE NOCASE) UNION ALL SELECT ALL v0.c0, vt0.c0 FROM v0, vt0 WHERE ((NOT (v0.c0 COLLATE BINARY COLLATE NOCASE COLLATE NOCASE))) UNION ALL SELECT v0.c0, vt0.c0 FROM v0, vt0 WHERE (((v0.c0 COLLATE BINARY COLLATE NOCASE COLLATE NOCASE) ISNULL));
SELECT v0.c0, vt0.c0 FROM v0, vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (vt0.c0) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (vt0.c0))) UNION SELECT DISTINCT * FROM vt0 WHERE (((vt0.c0) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0;
SELECT vt0.c0, v0.c0 FROM vt0, v0 WHERE (((((vt0.c0)) BETWEEN ((v0.c0)) AND (('u죹!䷗죹	)S'))) IN ((((vt0.c0))>((vt0.c0))), vt0.c0 COLLATE RTRIM))) GROUP BY vt0.c0, v0.c0 UNION SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 WHERE ((NOT (((((vt0.c0)) BETWEEN ((v0.c0)) AND (('u죹!䷗죹	)S'))) IN ((((vt0.c0))>((vt0.c0))), vt0.c0 COLLATE RTRIM))))) GROUP BY vt0.c0, v0.c0 UNION SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 WHERE (((((((vt0.c0)) BETWEEN ((v0.c0)) AND (('u죹!䷗죹	)S'))) IN ((((vt0.c0))>((vt0.c0))), vt0.c0 COLLATE RTRIM))) ISNULL)) GROUP BY vt0.c0, v0.c0;
SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0;
SELECT vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0;
SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0 HAVING TOTAL(CAST(v0.c0 AS BLOB)) UNION ALL SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0 HAVING (NOT (TOTAL(CAST(v0.c0 AS BLOB)))) UNION ALL SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0 HAVING ((TOTAL(CAST(v0.c0 AS BLOB))) ISNULL);
SELECT vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0;
SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0 HAVING TOTAL(CAST(v0.c0 AS BLOB)) UNION ALL SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0 HAVING (NOT (TOTAL(CAST(v0.c0 AS BLOB)))) UNION ALL SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0 HAVING ((TOTAL(CAST(v0.c0 AS BLOB))) ISNULL);
SELECT vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0;
SELECT ALL vt0.c0, v0.c0 FROM vt0, v0;
SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 WHERE (CAST(((v0.c0)<<(v0.c0)) AS REAL)) UNION ALL SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 WHERE ((NOT (CAST(((v0.c0)<<(v0.c0)) AS REAL)))) UNION ALL SELECT vt0.c0, v0.c0 FROM vt0, v0 WHERE (((CAST(((v0.c0)<<(v0.c0)) AS REAL)) ISNULL));
SELECT ALL vt0.c0, v0.c0 FROM vt0, v0;
SELECT DISTINCT v0.c0, vt0.c0 FROM vt0 FULL OUTER JOIN v0 ON CAST(json_patch(vt0.c0, v0.c0) AS TEXT);
SELECT DISTINCT v0.c0, vt0.c0 FROM vt0 FULL OUTER JOIN v0 ON CAST(json_patch(vt0.c0, v0.c0) AS TEXT) WHERE ((((v0.c0, vt0.c0, vt0.c0, vt0.c0, v0.c0)) BETWEEN (((v0.c0 IN (v0.c0)), CAST(vt0.c0 AS TEXT), LAST_INSERT_ROWID(), ((vt0.c0) IS TRUE), ((0.02693153573459839) ISNULL))) AND ((((vt0.c0)-(vt0.c0)), (('357218526') NOT BETWEEN (v0.c0) AND (v0.c0)), ((v0.c0) IS FALSE), -1.238413865E9, ((v0.c0) BETWEEN (2053259375) AND (vt0.c0)))))) UNION SELECT DISTINCT v0.c0, vt0.c0 FROM vt0 FULL OUTER JOIN v0 ON CAST(json_patch(vt0.c0, v0.c0) AS TEXT) WHERE ((NOT ((((v0.c0, vt0.c0, vt0.c0, vt0.c0, v0.c0)) BETWEEN (((v0.c0 IN (v0.c0)), CAST(vt0.c0 AS TEXT), LAST_INSERT_ROWID(), ((vt0.c0) IS TRUE), ((0.02693153573459839) ISNULL))) AND ((((vt0.c0)-(vt0.c0)), (('357218526') NOT BETWEEN (v0.c0) AND (v0.c0)), ((v0.c0) IS FALSE), -1.238413865E9, ((v0.c0) BETWEEN (2053259375) AND (vt0.c0)))))))) UNION SELECT DISTINCT v0.c0, vt0.c0 FROM vt0 FULL OUTER JOIN v0 ON CAST(json_patch(vt0.c0, v0.c0) AS TEXT) WHERE ((((((v0.c0, vt0.c0, vt0.c0, vt0.c0, v0.c0)) BETWEEN (((v0.c0 IN (v0.c0)), CAST(vt0.c0 AS TEXT), LAST_INSERT_ROWID(), ((vt0.c0) IS TRUE), ((0.02693153573459839) ISNULL))) AND ((((vt0.c0)-(vt0.c0)), (('357218526') NOT BETWEEN (v0.c0) AND (v0.c0)), ((v0.c0) IS FALSE), -1.238413865E9, ((v0.c0) BETWEEN (2053259375) AND (vt0.c0)))))) ISNULL));
SELECT DISTINCT v0.c0, vt0.c0 FROM vt0 FULL OUTER JOIN v0 ON CAST(json_patch(vt0.c0, v0.c0) AS TEXT);
SELECT vt0.c0, v0.c0 FROM vt0 FULL OUTER JOIN v0 ON (((5.01368118E8)) BETWEEN ((v0.c0)) AND ((vt0.c0))) COLLATE NOCASE GROUP BY vt0.c0, v0.c0;
SELECT vt0.c0, v0.c0 FROM vt0 FULL OUTER JOIN v0 ON (((5.01368118E8)) BETWEEN ((v0.c0)) AND ((vt0.c0))) COLLATE NOCASE WHERE (((CASE WHEN v0.c0 THEN v0.c0 END)OR(((v0.c0)IS NOT(v0.c0))))) GROUP BY vt0.c0, v0.c0 UNION SELECT vt0.c0, v0.c0 FROM vt0 FULL OUTER JOIN v0 ON (((5.01368118E8)) BETWEEN ((v0.c0)) AND ((vt0.c0))) COLLATE NOCASE WHERE ((NOT (((CASE WHEN v0.c0 THEN v0.c0 END)OR(((v0.c0)IS NOT(v0.c0))))))) GROUP BY vt0.c0, v0.c0 UNION SELECT vt0.c0, v0.c0 FROM vt0 FULL OUTER JOIN v0 ON (((5.01368118E8)) BETWEEN ((v0.c0)) AND ((vt0.c0))) COLLATE NOCASE WHERE (((((CASE WHEN v0.c0 THEN v0.c0 END)OR(((v0.c0)IS NOT(v0.c0))))) ISNULL)) GROUP BY vt0.c0, v0.c0;
SELECT vt0.c0, v0.c0 FROM vt0 FULL OUTER JOIN v0 ON (((5.01368118E8)) BETWEEN ((v0.c0)) AND ((vt0.c0))) COLLATE NOCASE GROUP BY vt0.c0, v0.c0;
SELECT v0.c0 FROM vt0, v0 GROUP BY v0.c0;
SELECT v0.c0 FROM vt0, v0 GROUP BY v0.c0 HAVING (((((x'')) NOT BETWEEN ((vt0.c0)) AND ((MIN(MAX(vt0.c0))))))IS(AVG(vt0.c0))) UNION ALL SELECT ALL v0.c0 FROM vt0, v0 GROUP BY v0.c0 HAVING (NOT ((((((x'')) NOT BETWEEN ((vt0.c0)) AND ((MIN(MAX(vt0.c0))))))IS(AVG(vt0.c0))))) UNION ALL SELECT v0.c0 FROM vt0, v0 GROUP BY v0.c0 HAVING (((((((x'')) NOT BETWEEN ((vt0.c0)) AND ((MIN(MAX(vt0.c0))))))IS(AVG(vt0.c0)))) ISNULL);
SELECT ALL MIN(x'') FROM v0;
SELECT ALL vt0.c0 FROM vt0, v0;
SELECT vt0.c0 FROM vt0, v0 WHERE (vt0.c0) UNION ALL SELECT vt0.c0 FROM vt0, v0 WHERE ((NOT (vt0.c0))) UNION ALL SELECT ALL vt0.c0 FROM vt0, v0 WHERE (((vt0.c0) ISNULL));
SELECT ALL vt0.c0 FROM vt0, v0;
SELECT DISTINCT * FROM v0, vt0;
SELECT DISTINCT * FROM v0, vt0 WHERE (((((vt0.c0)IS NOT(vt0.c0)))>(((vt0.c0)*(v0.c0))))) UNION SELECT DISTINCT * FROM v0, vt0 WHERE ((NOT (((((vt0.c0)IS NOT(vt0.c0)))>(((vt0.c0)*(v0.c0))))))) UNION SELECT DISTINCT * FROM v0, vt0 WHERE (((((((vt0.c0)IS NOT(vt0.c0)))>(((vt0.c0)*(v0.c0))))) ISNULL));
SELECT DISTINCT * FROM v0, vt0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (TRIM(DISTINCT ((v0.c0)LIKE(v0.c0)))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT (TRIM(DISTINCT ((v0.c0)LIKE(v0.c0)))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE (((TRIM(DISTINCT ((v0.c0)LIKE(v0.c0)))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING TOTAL(COUNT(*)) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (TOTAL(COUNT(*)))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((TOTAL(COUNT(*))) ISNULL);
SELECT ALL vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE (((NULL)>>((+ (0.45870274376525566))))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT (((NULL)>>((+ (0.45870274376525566))))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE (((((NULL)>>((+ (0.45870274376525566))))) ISNULL));
SELECT ALL vt0.c0 FROM vt0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (IFNULL(DISTINCT ((v0.c0) IS TRUE), CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END)) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (IFNULL(DISTINCT ((v0.c0) IS TRUE), CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END)))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((IFNULL(DISTINCT ((v0.c0) IS TRUE), CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END)) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT v0.c0 FROM vt0, v0 GROUP BY v0.c0;
SELECT v0.c0 FROM vt0, v0 WHERE ((+ (CASE vt0.c0  WHEN vt0.c0 THEN v0.c0 ELSE v0.c0 END))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM vt0, v0 WHERE ((NOT ((+ (CASE vt0.c0  WHEN vt0.c0 THEN v0.c0 ELSE v0.c0 END))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM vt0, v0 WHERE ((((+ (CASE vt0.c0  WHEN vt0.c0 THEN v0.c0 ELSE v0.c0 END))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM vt0, v0 GROUP BY v0.c0;
SELECT vt0.c0 FROM vt0 FULL OUTER JOIN v0 ON ((x'bbb7')|(((v0.c0)LIKE(vt0.c0)))) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 FULL OUTER JOIN v0 ON ((x'bbb7')|(((v0.c0)LIKE(vt0.c0)))) GROUP BY vt0.c0 HAVING TOTAL(COUNT(MAX(vt0.c0))) UNION ALL SELECT ALL vt0.c0 FROM vt0 FULL OUTER JOIN v0 ON ((x'bbb7')|(((v0.c0)LIKE(vt0.c0)))) GROUP BY vt0.c0 HAVING (NOT (TOTAL(COUNT(MAX(vt0.c0))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 FULL OUTER JOIN v0 ON ((x'bbb7')|(((v0.c0)LIKE(vt0.c0)))) GROUP BY vt0.c0 HAVING ((TOTAL(COUNT(MAX(vt0.c0)))) ISNULL);
SELECT ALL v0.c0 FROM v0;
SELECT v0.c0 FROM v0 WHERE ((((v0.c0, v0.c0, v0.c0, v0.c0, v0.c0))>=((v0.c0, v0.c0, v0.c0, v0.c0, v0.c0))) COLLATE BINARY) UNION ALL SELECT v0.c0 FROM v0 WHERE ((NOT ((((v0.c0, v0.c0, v0.c0, v0.c0, v0.c0))>=((v0.c0, v0.c0, v0.c0, v0.c0, v0.c0))) COLLATE BINARY))) UNION ALL SELECT v0.c0 FROM v0 WHERE ((((((v0.c0, v0.c0, v0.c0, v0.c0, v0.c0))>=((v0.c0, v0.c0, v0.c0, v0.c0, v0.c0))) COLLATE BINARY) ISNULL));
SELECT ALL v0.c0 FROM v0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE ((~ (0xffffffffc13c4c68))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT ((~ (0Xffffffffc13c4c68))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((((~ (0Xffffffffc13c4c68))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE ((((NOT (v0.c0))) IS TRUE)) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT ((((NOT (v0.c0))) IS TRUE)))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((((((NOT (v0.c0))) IS TRUE)) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0, vt0.c0 FROM v0 RIGHT OUTER JOIN vt0 ON (((v0.c0)+(vt0.c0)) IN (((v0.c0)|(vt0.c0)))) GROUP BY v0.c0, vt0.c0;
SELECT v0.c0, vt0.c0 FROM v0 RIGHT OUTER JOIN vt0 ON (((v0.c0)+(vt0.c0)) IN (((v0.c0)|(vt0.c0)))) GROUP BY v0.c0, vt0.c0 HAVING TOTAL(SUM(GROUP_CONCAT(AVG(v0.c0)))) UNION ALL SELECT ALL v0.c0, vt0.c0 FROM v0 RIGHT OUTER JOIN vt0 ON (((v0.c0)+(vt0.c0)) IN (((v0.c0)|(vt0.c0)))) GROUP BY v0.c0, vt0.c0 HAVING (NOT (TOTAL(SUM(GROUP_CONCAT(AVG(v0.c0)))))) UNION ALL SELECT v0.c0, vt0.c0 FROM v0 RIGHT OUTER JOIN vt0 ON (((v0.c0)+(vt0.c0)) IN (((v0.c0)|(vt0.c0)))) GROUP BY v0.c0, vt0.c0 HAVING ((TOTAL(SUM(GROUP_CONCAT(AVG(v0.c0))))) ISNULL);
SELECT * FROM v0 FULL OUTER JOIN vt0 ON ((((((((((v0.c0)AND(vt0.c0)))OR(v0.c0)))AND(vt0.c0)))OR(v0.c0)))IS((vt0.c0 IN (vt0.c0))));
SELECT ALL * FROM v0 FULL OUTER JOIN vt0 ON ((((((((((v0.c0)AND(vt0.c0)))OR(v0.c0)))AND(vt0.c0)))OR(v0.c0)))IS((vt0.c0 IN (vt0.c0)))) WHERE (RTRIM(vt0.c0) COLLATE NOCASE) UNION ALL SELECT * FROM v0 FULL OUTER JOIN vt0 ON ((((((((((v0.c0)AND(vt0.c0)))OR(v0.c0)))AND(vt0.c0)))OR(v0.c0)))IS((vt0.c0 IN (vt0.c0)))) WHERE ((NOT (RTRIM(vt0.c0) COLLATE NOCASE))) UNION ALL SELECT ALL * FROM v0 FULL OUTER JOIN vt0 ON ((((((((((v0.c0)AND(vt0.c0)))OR(v0.c0)))AND(vt0.c0)))OR(v0.c0)))IS((vt0.c0 IN (vt0.c0)))) WHERE (((RTRIM(vt0.c0) COLLATE NOCASE) ISNULL));
SELECT * FROM v0 FULL OUTER JOIN vt0 ON ((((((((((v0.c0)AND(vt0.c0)))OR(v0.c0)))AND(vt0.c0)))OR(v0.c0)))IS((vt0.c0 IN (vt0.c0))));
SELECT DISTINCT * FROM vt0, v0;
SELECT DISTINCT * FROM vt0, v0 WHERE ((json_array('-505772620', vt0.c0) IN ((((v0.c0, vt0.c0, vt0.c0, v0.c0, vt0.c0)) NOT BETWEEN (('c,h', x'', v0.c0, v0.c0, vt0.c0)) AND ((NULL, 0.851061257194352, '-505772620', '-507982762', v0.c0)))))) UNION SELECT DISTINCT * FROM vt0, v0 WHERE ((NOT ((json_array('-505772620', vt0.c0) IN ((((v0.c0, vt0.c0, vt0.c0, v0.c0, vt0.c0)) NOT BETWEEN (('c,h', x'', v0.c0, v0.c0, vt0.c0)) AND ((NULL, 0.851061257194352, '-505772620', '-507982762', v0.c0)))))))) UNION SELECT DISTINCT * FROM vt0, v0 WHERE ((((json_array('-505772620', vt0.c0) IN ((((v0.c0, vt0.c0, vt0.c0, v0.c0, vt0.c0)) NOT BETWEEN (('c,h', x'', v0.c0, v0.c0, vt0.c0)) AND ((NULL, 0.851061257194352, '-505772620', '-507982762', v0.c0)))))) ISNULL));
SELECT DISTINCT * FROM vt0, v0;
SELECT ALL vt0.c0 FROM vt0 CROSS JOIN v0 ON (((vt0.c0)) NOT BETWEEN ((CASE WHEN v0.c0 THEN v0.c0 END)) AND ((vt0.c0 COLLATE BINARY))) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 CROSS JOIN v0 ON (((vt0.c0)) NOT BETWEEN ((CASE WHEN v0.c0 THEN v0.c0 END)) AND ((vt0.c0 COLLATE BINARY))) WHERE ((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN (((v0.c0 IN ()), v0.c0, ((((vt0.c0)AND(vt0.c0)))OR(v0.c0)))) AND ((v0.c0, CASE v0.c0  WHEN vt0.c0 THEN v0.c0 ELSE vt0.c0 END, (vt0.c0 IN ()))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 CROSS JOIN v0 ON (((vt0.c0)) NOT BETWEEN ((CASE WHEN v0.c0 THEN v0.c0 END)) AND ((vt0.c0 COLLATE BINARY))) WHERE ((NOT ((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN (((v0.c0 IN ()), v0.c0, ((((vt0.c0)AND(vt0.c0)))OR(v0.c0)))) AND ((v0.c0, CASE v0.c0  WHEN vt0.c0 THEN v0.c0 ELSE vt0.c0 END, (vt0.c0 IN ()))))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 CROSS JOIN v0 ON (((vt0.c0)) NOT BETWEEN ((CASE WHEN v0.c0 THEN v0.c0 END)) AND ((vt0.c0 COLLATE BINARY))) WHERE ((((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN (((v0.c0 IN ()), v0.c0, ((((vt0.c0)AND(vt0.c0)))OR(v0.c0)))) AND ((v0.c0, CASE v0.c0  WHEN vt0.c0 THEN v0.c0 ELSE vt0.c0 END, (vt0.c0 IN ()))))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 CROSS JOIN v0 ON (((vt0.c0)) NOT BETWEEN ((CASE WHEN v0.c0 THEN v0.c0 END)) AND ((vt0.c0 COLLATE BINARY))) GROUP BY vt0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((((MIN(TOTAL(v0.c0)))AND((MIN(v0.c0) IN (v0.c0)))))OR(CAST(v0.c0 AS INTEGER))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (((((MIN(TOTAL(v0.c0)))AND((MIN(v0.c0) IN (v0.c0)))))OR(CAST(v0.c0 AS INTEGER))))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((((((MIN(TOTAL(v0.c0)))AND((MIN(v0.c0) IN (v0.c0)))))OR(CAST(v0.c0 AS INTEGER)))) ISNULL);
SELECT v0.c0 FROM vt0, v0;
SELECT ALL v0.c0 FROM vt0, v0 WHERE (((((vt0.c0)||(v0.c0)))IS(((((v0.c0)AND(v0.c0)))OR(vt0.c0))))) UNION ALL SELECT ALL v0.c0 FROM vt0, v0 WHERE ((NOT (((((vt0.c0)||(v0.c0)))IS(((((v0.c0)AND(v0.c0)))OR(vt0.c0))))))) UNION ALL SELECT ALL v0.c0 FROM vt0, v0 WHERE (((((((vt0.c0)||(v0.c0)))IS(((((v0.c0)AND(v0.c0)))OR(vt0.c0))))) ISNULL));
SELECT v0.c0 FROM vt0, v0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (vt0.c0) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (vt0.c0))) UNION SELECT DISTINCT * FROM vt0 WHERE (((vt0.c0) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL v0.c0 FROM v0, vt0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0, vt0 WHERE ((LIKELIHOOD(v0.c0, 0.9519827510431953) IN ())) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0, vt0 WHERE ((NOT ((LIKELIHOOD(v0.c0, 0.9519827510431953) IN ())))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0, vt0 WHERE ((((LIKELIHOOD(v0.c0, 0.9519827510431953) IN ())) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0, vt0 GROUP BY v0.c0;
SELECT ALL vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0;
SELECT vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0 HAVING GROUP_CONCAT(MIN(v0.c0)) UNION ALL SELECT vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0 HAVING (NOT (GROUP_CONCAT(MIN(v0.c0)))) UNION ALL SELECT ALL vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0 HAVING ((GROUP_CONCAT(MIN(v0.c0))) ISNULL);
SELECT * FROM vt0;
SELECT ALL * FROM vt0 WHERE (vt0.c0) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (vt0.c0))) UNION ALL SELECT ALL * FROM vt0 WHERE (((vt0.c0) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT * FROM vt0 LEFT OUTER JOIN v0 ON ((((((((((v0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(v0.c0)))/(((v0.c0) IS TRUE)));
SELECT DISTINCT * FROM vt0 LEFT OUTER JOIN v0 ON ((((((((((v0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(v0.c0)))/(((v0.c0) IS TRUE))) WHERE ((((CASE WHEN vt0.c0 THEN v0.c0 WHEN vt0.c0 THEN v0.c0 WHEN vt0.c0 THEN v0.c0 ELSE vt0.c0 END))>((CASE WHEN vt0.c0 THEN vt0.c0 END)))) UNION SELECT DISTINCT * FROM vt0 LEFT OUTER JOIN v0 ON ((((((((((v0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(v0.c0)))/(((v0.c0) IS TRUE))) WHERE ((NOT ((((CASE WHEN vt0.c0 THEN v0.c0 WHEN vt0.c0 THEN v0.c0 WHEN vt0.c0 THEN v0.c0 ELSE vt0.c0 END))>((CASE WHEN vt0.c0 THEN vt0.c0 END)))))) UNION SELECT DISTINCT * FROM vt0 LEFT OUTER JOIN v0 ON ((((((((((v0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(v0.c0)))/(((v0.c0) IS TRUE))) WHERE ((((((CASE WHEN vt0.c0 THEN v0.c0 WHEN vt0.c0 THEN v0.c0 WHEN vt0.c0 THEN v0.c0 ELSE vt0.c0 END))>((CASE WHEN vt0.c0 THEN vt0.c0 END)))) ISNULL));
SELECT DISTINCT * FROM vt0 LEFT OUTER JOIN v0 ON ((((((((((v0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(v0.c0)))/(((v0.c0) IS TRUE)));
SELECT ALL vt0.c0, v0.c0 FROM v0 RIGHT OUTER JOIN vt0 ON (((((vt0.c0) IS FALSE), '852238032', CAST(vt0.c0 AS REAL)))>((v0.c0 COLLATE BINARY, ((v0.c0)==(vt0.c0)), ((vt0.c0) ISNULL)))) GROUP BY vt0.c0, v0.c0;
SELECT vt0.c0, v0.c0 FROM v0 RIGHT OUTER JOIN vt0 ON (((((vt0.c0) IS FALSE), '852238032', CAST(vt0.c0 AS REAL)))>((v0.c0 COLLATE BINARY, ((v0.c0)=(vt0.c0)), ((vt0.c0) ISNULL)))) WHERE (HEX(vt0.c0)) GROUP BY vt0.c0, v0.c0 UNION SELECT vt0.c0, v0.c0 FROM v0 RIGHT OUTER JOIN vt0 ON (((((vt0.c0) IS FALSE), '852238032', CAST(vt0.c0 AS REAL)))>((v0.c0 COLLATE BINARY, ((v0.c0)==(vt0.c0)), ((vt0.c0) ISNULL)))) WHERE ((NOT (HEX(vt0.c0)))) GROUP BY vt0.c0, v0.c0 UNION SELECT vt0.c0, v0.c0 FROM v0 RIGHT OUTER JOIN vt0 ON (((((vt0.c0) IS FALSE), '852238032', CAST(vt0.c0 AS REAL)))>((v0.c0 COLLATE BINARY, ((v0.c0)==(vt0.c0)), ((vt0.c0) ISNULL)))) WHERE (((HEX(vt0.c0)) ISNULL)) GROUP BY vt0.c0, v0.c0;
SELECT ALL vt0.c0, v0.c0 FROM v0 RIGHT OUTER JOIN vt0 ON (((((vt0.c0) IS FALSE), '852238032', CAST(vt0.c0 AS REAL)))>((v0.c0 COLLATE BINARY, ((v0.c0)==(vt0.c0)), ((vt0.c0) ISNULL)))) GROUP BY vt0.c0, v0.c0;
SELECT ALL v0.c0 FROM vt0, v0 GROUP BY v0.c0;
SELECT v0.c0 FROM vt0, v0 GROUP BY v0.c0 HAVING vt0.c0 UNION ALL SELECT v0.c0 FROM vt0, v0 GROUP BY v0.c0 HAVING (NOT (vt0.c0)) UNION ALL SELECT ALL v0.c0 FROM vt0, v0 GROUP BY v0.c0 HAVING ((vt0.c0) ISNULL);
SELECT ALL v0.c0 FROM vt0, v0 GROUP BY v0.c0;
SELECT v0.c0 FROM vt0, v0 GROUP BY v0.c0 HAVING vt0.c0 UNION ALL SELECT v0.c0 FROM vt0, v0 GROUP BY v0.c0 HAVING (NOT (vt0.c0)) UNION ALL SELECT ALL v0.c0 FROM vt0, v0 GROUP BY v0.c0 HAVING ((vt0.c0) ISNULL);
SELECT ALL v0.c0 FROM vt0, v0 GROUP BY v0.c0;
SELECT ALL vt0.c0 FROM vt0, v0;
SELECT vt0.c0 FROM vt0, v0 WHERE ((((((((vt0.c0)AND(vt0.c0)))AND(v0.c0))))<>((((vt0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0)))))) UNION ALL SELECT ALL vt0.c0 FROM vt0, v0 WHERE ((NOT ((((((((vt0.c0)AND(vt0.c0)))AND(v0.c0))))<>((((vt0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0)))))))) UNION ALL SELECT ALL vt0.c0 FROM vt0, v0 WHERE ((((((((((vt0.c0)AND(vt0.c0)))AND(v0.c0))))<>((((vt0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0)))))) ISNULL));
SELECT ALL vt0.c0 FROM vt0, v0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (((((((((((v0.c0)OR(x'')))OR(v0.c0)))AND(v0.c0)))OR(v0.c0))) ISNULL)) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (((((((((((v0.c0)OR(x'')))OR(v0.c0)))AND(v0.c0)))OR(v0.c0))) ISNULL)))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((((((((((((v0.c0)OR(x'')))OR(v0.c0)))AND(v0.c0)))OR(v0.c0))) ISNULL)) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT ALL vt0.c0 FROM vt0 INNER JOIN v0 ON ((((v0.c0) IS FALSE))IS NOT((((vt0.c0))<>((vt0.c0))))) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 INNER JOIN v0 ON ((((v0.c0) IS FALSE))IS NOT((((vt0.c0))!=((vt0.c0))))) WHERE (v0.c0) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 INNER JOIN v0 ON ((((v0.c0) IS FALSE))IS NOT((((vt0.c0))<>((vt0.c0))))) WHERE ((NOT (v0.c0))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 INNER JOIN v0 ON ((((v0.c0) IS FALSE))IS NOT((((vt0.c0))<>((vt0.c0))))) WHERE (((v0.c0) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 INNER JOIN v0 ON ((((v0.c0) IS FALSE))IS NOT((((vt0.c0))<>((vt0.c0))))) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING MAX(MIN(SUM(COUNT(vt0.c0)))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (MAX(MIN(SUM(COUNT(vt0.c0)))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((MAX(MIN(SUM(COUNT(vt0.c0))))) ISNULL);
SELECT vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE ((('-505772620')||(vt0.c0)) COLLATE NOCASE) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT ((('-505772620')||(vt0.c0)) COLLATE NOCASE))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((((('-505772620')||(vt0.c0)) COLLATE NOCASE) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((~ (((NULL) BETWEEN (vt0.c0) AND (vt0.c0))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT ((~ (((NULL) BETWEEN (vt0.c0) AND (vt0.c0))))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((((~ (((NULL) BETWEEN (vt0.c0) AND (vt0.c0))))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT ALL v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0;
SELECT v0.c0, vt0.c0 FROM v0, vt0 WHERE (((((vt0.c0)|(vt0.c0)))/(UNLIKELY(v0.c0)))) GROUP BY v0.c0, vt0.c0 UNION SELECT ALL v0.c0, vt0.c0 FROM v0, vt0 WHERE ((NOT (((((vt0.c0)|(vt0.c0)))/(UNLIKELY(v0.c0)))))) GROUP BY v0.c0, vt0.c0 UNION SELECT ALL v0.c0, vt0.c0 FROM v0, vt0 WHERE (((((((vt0.c0)|(vt0.c0)))/(UNLIKELY(v0.c0)))) ISNULL)) GROUP BY v0.c0, vt0.c0;
SELECT ALL v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((- (vt0.c0)))IS NOT(COUNT(*))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT ((((- (vt0.c0)))IS NOT(COUNT(*))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((((- (vt0.c0)))IS NOT(COUNT(*)))) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((- (vt0.c0)))IS NOT(COUNT(*))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT ((((- (vt0.c0)))IS NOT(COUNT(*))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((((- (vt0.c0)))IS NOT(COUNT(*)))) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT * FROM vt0;
SELECT * FROM vt0 WHERE (CAST(((vt0.c0) IS FALSE) AS REAL)) UNION ALL SELECT * FROM vt0 WHERE ((NOT (CAST(((vt0.c0) IS FALSE) AS REAL)))) UNION ALL SELECT * FROM vt0 WHERE (((CAST(((vt0.c0) IS FALSE) AS REAL)) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (0.6452902241795391) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (0.6452902241795391))) UNION SELECT DISTINCT * FROM vt0 WHERE (((0.6452902241795391) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0;
SELECT vt0.c0, v0.c0 FROM vt0, v0 WHERE (IFNULL('53159400', ((v0.c0) IS FALSE))) GROUP BY vt0.c0, v0.c0 UNION SELECT vt0.c0, v0.c0 FROM vt0, v0 WHERE ((NOT (IFNULL('53159400', ((v0.c0) IS FALSE))))) GROUP BY vt0.c0, v0.c0 UNION SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 WHERE (((IFNULL('53159400', ((v0.c0) IS FALSE))) ISNULL)) GROUP BY vt0.c0, v0.c0;
SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0;
SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0;
SELECT vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0 HAVING ((HEX(DISTINCT AVG(COUNT(*)))) BETWEEN (COUNT(TOTAL(GROUP_CONCAT(TOTAL(v0.c0))))) AND (((((vt0.c0)OR(GROUP_CONCAT(vt0.c0))))AND(vt0.c0)))) UNION ALL SELECT vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0 HAVING (NOT (((HEX(DISTINCT AVG(COUNT(*)))) BETWEEN (COUNT(TOTAL(GROUP_CONCAT(TOTAL(v0.c0))))) AND (((((vt0.c0)OR(GROUP_CONCAT(vt0.c0))))AND(vt0.c0)))))) UNION ALL SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0 HAVING ((((HEX(DISTINCT AVG(COUNT(*)))) BETWEEN (COUNT(TOTAL(GROUP_CONCAT(TOTAL(v0.c0))))) AND (((((vt0.c0)OR(GROUP_CONCAT(vt0.c0))))AND(vt0.c0))))) ISNULL);
SELECT ALL MAX(CAST(((v0.c0)/(v0.c0)) AS REAL)) FROM vt0, v0;
SELECT ALL * FROM vt0;
SELECT * FROM vt0 WHERE (0.964040551604348) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (0.964040551604348))) UNION ALL SELECT ALL * FROM vt0 WHERE (((0.964040551604348) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((((((((DATETIME(vt0.c0, x'b5ba', vt0.c0, vt0.c0, vt0.c0))AND(CASE WHEN vt0.c0 THEN vt0.c0 END)))AND(((vt0.c0)|(vt0.c0)))))AND(((vt0.c0)*(vt0.c0)))))OR(0.3752713342807301))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((((((((DATETIME(vt0.c0, x'b5ba', vt0.c0, vt0.c0, vt0.c0))AND(CASE WHEN vt0.c0 THEN vt0.c0 END)))AND(((vt0.c0)|(vt0.c0)))))AND(((vt0.c0)*(vt0.c0)))))OR(0.3752713342807301))))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((((((((DATETIME(vt0.c0, x'b5ba', vt0.c0, vt0.c0, vt0.c0))AND(CASE WHEN vt0.c0 THEN vt0.c0 END)))AND(((vt0.c0)|(vt0.c0)))))AND(((vt0.c0)*(vt0.c0)))))OR(0.3752713342807301))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL vt0.c0 FROM v0, vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM v0, vt0 WHERE (((CAST(vt0.c0 AS BLOB)) NOT BETWEEN ((v0.c0 IN ('-1375572460'))) AND (CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE vt0.c0 END))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM v0, vt0 WHERE ((NOT (((CAST(vt0.c0 AS BLOB)) NOT BETWEEN ((v0.c0 IN ('-1375572460'))) AND (CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE vt0.c0 END))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM v0, vt0 WHERE (((((CAST(vt0.c0 AS BLOB)) NOT BETWEEN ((v0.c0 IN ('-1375572460'))) AND (CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE vt0.c0 END))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM v0, vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING MIN((AVG(x'') IN ())) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (MIN((AVG(x'') IN ())))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((MIN((AVG(x'') IN ()))) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING MIN((AVG(x'') IN ())) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (MIN((AVG(x'') IN ())))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((MIN((AVG(x'') IN ()))) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL v0.c0, vt0.c0 FROM vt0, v0;
SELECT v0.c0, vt0.c0 FROM vt0, v0 WHERE (IFNULL(LOWER(v0.c0), ((v0.c0) NOTNULL))) UNION ALL SELECT ALL v0.c0, vt0.c0 FROM vt0, v0 WHERE ((NOT (IFNULL(LOWER(v0.c0), ((v0.c0) NOTNULL))))) UNION ALL SELECT ALL v0.c0, vt0.c0 FROM vt0, v0 WHERE (((IFNULL(LOWER(v0.c0), ((v0.c0) NOTNULL))) ISNULL));
SELECT ALL v0.c0, vt0.c0 FROM vt0, v0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (CAST(CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN '760207015' END AS NUMERIC)) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (CAST(CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN '760207015' END AS NUMERIC)))) UNION SELECT DISTINCT * FROM v0 WHERE (((CAST(CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN '760207015' END AS NUMERIC)) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (((vt0.c0) NOT BETWEEN ('0.964040551604348') AND (vt0.c0)) COLLATE BINARY) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (((vt0.c0) NOT BETWEEN ('0.964040551604348') AND (vt0.c0)) COLLATE BINARY))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN ('0.964040551604348') AND (vt0.c0)) COLLATE BINARY) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 NOT INDEXED GROUP BY vt0.c0 HAVING ((CASE NULL  WHEN GROUP_CONCAT(MAX(GROUP_CONCAT(vt0.c0))) THEN vt0.c0 END)%(MAX(MIN(vt0.c0)) COLLATE NOCASE)) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (((CASE NULL  WHEN GROUP_CONCAT(MAX(GROUP_CONCAT(vt0.c0))) THEN vt0.c0 END)%(MAX(MIN(vt0.c0)) COLLATE NOCASE)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((CASE NULL  WHEN GROUP_CONCAT(MAX(GROUP_CONCAT(vt0.c0))) THEN vt0.c0 END)%(MAX(MIN(vt0.c0)) COLLATE NOCASE))) ISNULL);
SELECT * FROM v0, vt0;
SELECT ALL * FROM v0, vt0 WHERE (((NULL) ISNULL)) UNION ALL SELECT * FROM v0, vt0 WHERE ((NOT (((NULL) ISNULL)))) UNION ALL SELECT ALL * FROM v0, vt0 WHERE (((((NULL) ISNULL)) ISNULL));
SELECT * FROM v0, vt0;
SELECT DISTINCT v0.c0, vt0.c0 FROM v0, vt0;
SELECT DISTINCT v0.c0, vt0.c0 FROM v0, vt0 WHERE ((+ (CASE v0.c0  WHEN v0.c0 THEN vt0.c0 ELSE vt0.c0 END))) UNION SELECT DISTINCT v0.c0, vt0.c0 FROM v0, vt0 WHERE ((NOT ((+ (CASE v0.c0  WHEN v0.c0 THEN vt0.c0 ELSE vt0.c0 END))))) UNION SELECT DISTINCT v0.c0, vt0.c0 FROM v0, vt0 WHERE ((((+ (CASE v0.c0  WHEN v0.c0 THEN vt0.c0 ELSE vt0.c0 END))) ISNULL));
SELECT DISTINCT v0.c0, vt0.c0 FROM v0, vt0;
SELECT ALL v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0;
SELECT v0.c0, vt0.c0 FROM v0, vt0 WHERE (((((NULL) NOT BETWEEN (v0.c0) AND (x'')))/(v0.c0 COLLATE BINARY))) GROUP BY v0.c0, vt0.c0 UNION SELECT ALL v0.c0, vt0.c0 FROM v0, vt0 WHERE ((NOT (((((NULL) NOT BETWEEN (v0.c0) AND (x'')))/(v0.c0 COLLATE BINARY))))) GROUP BY v0.c0, vt0.c0 UNION SELECT ALL v0.c0, vt0.c0 FROM v0, vt0 WHERE (((((((NULL) NOT BETWEEN (v0.c0) AND (x'')))/(v0.c0 COLLATE BINARY))) ISNULL)) GROUP BY v0.c0, vt0.c0;
SELECT ALL v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((x'') BETWEEN (SUM(vt0.c0)) AND (1974525993))) NOTNULL) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (((((x'') BETWEEN (SUM(vt0.c0)) AND (1974525993))) NOTNULL))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((((x'') BETWEEN (SUM(vt0.c0)) AND (1974525993))) NOTNULL)) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((x'') BETWEEN (SUM(vt0.c0)) AND (1974525993))) NOTNULL) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (((((x'') BETWEEN (SUM(vt0.c0)) AND (1974525993))) NOTNULL))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((((x'') BETWEEN (SUM(vt0.c0)) AND (1974525993))) NOTNULL)) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 INNER JOIN v0 ON ((((CAST(vt0.c0 AS NUMERIC))AND(v0.c0)))AND(UNICODE(vt0.c0)));
SELECT ALL vt0.c0 FROM vt0 INNER JOIN v0 ON ((((CAST(vt0.c0 AS NUMERIC))AND(v0.c0)))AND(UNICODE(vt0.c0))) WHERE (CAST(vt0.c0 AS INTEGER) COLLATE BINARY) UNION ALL SELECT ALL vt0.c0 FROM vt0 INNER JOIN v0 ON ((((CAST(vt0.c0 AS NUMERIC))AND(v0.c0)))AND(UNICODE(vt0.c0))) WHERE ((NOT (CAST(vt0.c0 AS INTEGER) COLLATE BINARY))) UNION ALL SELECT vt0.c0 FROM vt0 INNER JOIN v0 ON ((((CAST(vt0.c0 AS NUMERIC))AND(v0.c0)))AND(UNICODE(vt0.c0))) WHERE (((CAST(vt0.c0 AS INTEGER) COLLATE BINARY) ISNULL));
SELECT ALL vt0.c0 FROM vt0 INNER JOIN v0 ON ((((CAST(vt0.c0 AS NUMERIC))AND(v0.c0)))AND(UNICODE(vt0.c0)));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((((('-827487070')) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) IN (CASE vt0.c0  WHEN x'' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT ((((('-827487070')) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) IN (CASE vt0.c0  WHEN x'' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((((((('-827487070')) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) IN (CASE vt0.c0  WHEN x'' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (((v0.c0) IS FALSE)) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT (((v0.c0) IS FALSE)))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((((v0.c0) IS FALSE)) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL vt0.c0, v0.c0 FROM v0 INNER JOIN vt0 ON (((((~ (v0.c0)))OR((v0.c0 IN ()))))OR(((vt0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))) GROUP BY vt0.c0, v0.c0;
SELECT ALL vt0.c0, v0.c0 FROM v0 INNER JOIN vt0 ON (((((~ (v0.c0)))OR((v0.c0 IN ()))))OR(((vt0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))) GROUP BY vt0.c0, v0.c0 HAVING AVG(MAX(vt0.c0)) UNION ALL SELECT ALL vt0.c0, v0.c0 FROM v0 INNER JOIN vt0 ON (((((~ (v0.c0)))OR((v0.c0 IN ()))))OR(((vt0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))) GROUP BY vt0.c0, v0.c0 HAVING (NOT (AVG(MAX(vt0.c0)))) UNION ALL SELECT ALL vt0.c0, v0.c0 FROM v0 INNER JOIN vt0 ON (((((~ (v0.c0)))OR((v0.c0 IN ()))))OR(((vt0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))) GROUP BY vt0.c0, v0.c0 HAVING ((AVG(MAX(vt0.c0))) ISNULL);
SELECT ALL TOTAL(NULL) FROM vt0, v0;
SELECT * FROM vt0;
SELECT ALL * FROM vt0 WHERE ((((vt0.c0 IN ()))-(((vt0.c0)OR('w'))))) UNION ALL SELECT * FROM vt0 WHERE ((NOT ((((vt0.c0 IN ()))-(((vt0.c0)OR('w'))))))) UNION ALL SELECT ALL * FROM vt0 WHERE ((((((vt0.c0 IN ()))-(((vt0.c0)OR('w'))))) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT vt0.c0 FROM v0, vt0;
SELECT DISTINCT vt0.c0 FROM v0, vt0 WHERE (vt0.c0) UNION SELECT DISTINCT vt0.c0 FROM v0, vt0 WHERE ((NOT (vt0.c0))) UNION SELECT DISTINCT vt0.c0 FROM v0, vt0 WHERE (((vt0.c0) ISNULL));
SELECT DISTINCT vt0.c0 FROM v0, vt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE ((- ((('1737018268') NOT BETWEEN (vt0.c0) AND (vt0.c0))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT ((- ((('1737018268') NOT BETWEEN (vt0.c0) AND (vt0.c0))))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((((- ((('1737018268') NOT BETWEEN (vt0.c0) AND (vt0.c0))))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0;
SELECT ALL v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0 HAVING ((COUNT(TOTAL(AVG(SUM(MAX(GROUP_CONCAT(MIN(v0.c0)))))))) NOT BETWEEN (GROUP_CONCAT(COUNT(*))) AND ((~ (MIN(GROUP_CONCAT(v0.c0)))))) UNION ALL SELECT ALL v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0 HAVING (NOT (((COUNT(TOTAL(AVG(SUM(MAX(GROUP_CONCAT(MIN(v0.c0)))))))) NOT BETWEEN (GROUP_CONCAT(COUNT(*))) AND ((~ (MIN(GROUP_CONCAT(v0.c0)))))))) UNION ALL SELECT ALL v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0 HAVING ((((COUNT(TOTAL(AVG(SUM(MAX(GROUP_CONCAT(MIN(v0.c0)))))))) NOT BETWEEN (GROUP_CONCAT(COUNT(*))) AND ((~ (MIN(GROUP_CONCAT(v0.c0))))))) ISNULL);
SELECT ALL * FROM vt0 CROSS JOIN v0 ON CASE WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN v0.c0 WHEN vt0.c0 THEN vt0.c0 END COLLATE NOCASE;
SELECT * FROM vt0 CROSS JOIN v0 ON CASE WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN v0.c0 WHEN vt0.c0 THEN vt0.c0 END COLLATE NOCASE WHERE ((((((v0.c0)) BETWEEN ((vt0.c0)) AND ((v0.c0))))OR(0.7260962989560155))) UNION ALL SELECT ALL * FROM vt0 CROSS JOIN v0 ON CASE WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN v0.c0 WHEN vt0.c0 THEN vt0.c0 END COLLATE NOCASE WHERE ((NOT ((((((v0.c0)) BETWEEN ((vt0.c0)) AND ((v0.c0))))OR(0.7260962989560155))))) UNION ALL SELECT * FROM vt0 CROSS JOIN v0 ON CASE WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN v0.c0 WHEN vt0.c0 THEN vt0.c0 END COLLATE NOCASE WHERE ((((((((v0.c0)) BETWEEN ((vt0.c0)) AND ((v0.c0))))OR(0.7260962989560155))) ISNULL));
SELECT ALL * FROM vt0 CROSS JOIN v0 ON CASE WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN v0.c0 WHEN vt0.c0 THEN vt0.c0 END COLLATE NOCASE;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (((1950190863)&(json_insert(x'', v0.c0, v0.c0, v0.c0, v0.c0)))) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (((1950190863)&(json_insert(x'', v0.c0, v0.c0, v0.c0, v0.c0)))))) UNION SELECT DISTINCT * FROM v0 WHERE (((((1950190863)&(json_insert(x'', v0.c0, v0.c0, v0.c0, v0.c0)))) ISNULL));
SELECT v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0;
SELECT v0.c0, vt0.c0 FROM vt0, v0 WHERE (((((((((((((((vt0.c0)OR(1.078123536E9)))AND(vt0.c0)))OR(v0.c0)))AND(vt0.c0)))AND(v0.c0)))OR(''))) BETWEEN ((- (v0.c0))) AND (((vt0.c0) IS FALSE)))) GROUP BY v0.c0, vt0.c0 UNION SELECT ALL v0.c0, vt0.c0 FROM vt0, v0 WHERE ((NOT (((((((((((((((vt0.c0)OR(1.078123536E9)))AND(vt0.c0)))OR(v0.c0)))AND(vt0.c0)))AND(v0.c0)))OR(''))) BETWEEN ((- (v0.c0))) AND (((vt0.c0) IS FALSE)))))) GROUP BY v0.c0, vt0.c0 UNION SELECT ALL v0.c0, vt0.c0 FROM vt0, v0 WHERE (((((((((((((((((vt0.c0)OR(1.078123536E9)))AND(vt0.c0)))OR(v0.c0)))AND(vt0.c0)))AND(v0.c0)))OR(''))) BETWEEN ((- (v0.c0))) AND (((vt0.c0) IS FALSE)))) ISNULL)) GROUP BY v0.c0, vt0.c0;
SELECT v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0;
SELECT v0.c0 FROM vt0 LEFT OUTER JOIN v0 ON ((((((v0.c0)/(vt0.c0)))OR(((vt0.c0)<<(vt0.c0)))))AND(((((v0.c0)AND(v0.c0)))AND(v0.c0)))) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM vt0 LEFT OUTER JOIN v0 ON ((((((v0.c0)/(vt0.c0)))OR(((vt0.c0)<<(vt0.c0)))))AND(((((v0.c0)AND(v0.c0)))AND(v0.c0)))) GROUP BY v0.c0 HAVING CAST(SUM(v0.c0) AS NUMERIC) UNION ALL SELECT v0.c0 FROM vt0 LEFT OUTER JOIN v0 ON ((((((v0.c0)/(vt0.c0)))OR(((vt0.c0)<<(vt0.c0)))))AND(((((v0.c0)AND(v0.c0)))AND(v0.c0)))) GROUP BY v0.c0 HAVING (NOT (CAST(SUM(v0.c0) AS NUMERIC))) UNION ALL SELECT v0.c0 FROM vt0 LEFT OUTER JOIN v0 ON ((((((v0.c0)/(vt0.c0)))OR(((vt0.c0)<<(vt0.c0)))))AND(((((v0.c0)AND(v0.c0)))AND(v0.c0)))) GROUP BY v0.c0 HAVING ((CAST(SUM(v0.c0) AS NUMERIC)) ISNULL);
SELECT v0.c0 FROM vt0 LEFT OUTER JOIN v0 ON ((((((v0.c0)/(vt0.c0)))OR(((vt0.c0)<<(vt0.c0)))))AND(((((v0.c0)AND(v0.c0)))AND(v0.c0)))) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM vt0 LEFT OUTER JOIN v0 ON ((((((v0.c0)/(vt0.c0)))OR(((vt0.c0)<<(vt0.c0)))))AND(((((v0.c0)AND(v0.c0)))AND(v0.c0)))) GROUP BY v0.c0 HAVING CAST(SUM(v0.c0) AS NUMERIC) UNION ALL SELECT v0.c0 FROM vt0 LEFT OUTER JOIN v0 ON ((((((v0.c0)/(vt0.c0)))OR(((vt0.c0)<<(vt0.c0)))))AND(((((v0.c0)AND(v0.c0)))AND(v0.c0)))) GROUP BY v0.c0 HAVING (NOT (CAST(SUM(v0.c0) AS NUMERIC))) UNION ALL SELECT v0.c0 FROM vt0 LEFT OUTER JOIN v0 ON ((((((v0.c0)/(vt0.c0)))OR(((vt0.c0)<<(vt0.c0)))))AND(((((v0.c0)AND(v0.c0)))AND(v0.c0)))) GROUP BY v0.c0 HAVING ((CAST(SUM(v0.c0) AS NUMERIC)) ISNULL);
SELECT v0.c0 FROM vt0 LEFT OUTER JOIN v0 ON ((((((v0.c0)/(vt0.c0)))OR(((vt0.c0)<<(vt0.c0)))))AND(((((v0.c0)AND(v0.c0)))AND(v0.c0)))) GROUP BY v0.c0;
SELECT vt0.c0, v0.c0 FROM v0, vt0;
SELECT ALL vt0.c0, v0.c0 FROM v0, vt0 WHERE (((vt0.c0)==(v0.c0)) COLLATE NOCASE) UNION ALL SELECT vt0.c0, v0.c0 FROM v0, vt0 WHERE ((NOT (((vt0.c0)==(v0.c0)) COLLATE NOCASE))) UNION ALL SELECT vt0.c0, v0.c0 FROM v0, vt0 WHERE (((((vt0.c0)==(v0.c0)) COLLATE NOCASE) ISNULL));
SELECT vt0.c0, v0.c0 FROM v0, vt0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (((((v0.c0)||(v0.c0)))>=(NULLIF(v0.c0, v0.c0)))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (((((v0.c0)||(v0.c0)))>=(NULLIF(v0.c0, v0.c0)))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((((((v0.c0)||(v0.c0)))>=(NULLIF(v0.c0, v0.c0)))) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT ALL v0.c0 FROM v0, vt0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0, vt0 WHERE ((((vt0.c0 COLLATE NOCASE))>=((((vt0.c0) ISNULL))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0, vt0 WHERE ((NOT ((((vt0.c0 COLLATE NOCASE))>=((((vt0.c0) ISNULL))))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0, vt0 WHERE ((((((vt0.c0 COLLATE NOCASE))>=((((vt0.c0) ISNULL))))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0, vt0 GROUP BY v0.c0;
SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0;
SELECT vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0 HAVING v0.c0 UNION ALL SELECT vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0 HAVING (NOT (v0.c0)) UNION ALL SELECT vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0 HAVING ((v0.c0) ISNULL);
SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0;
SELECT vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0 HAVING v0.c0 UNION ALL SELECT vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0 HAVING (NOT (v0.c0)) UNION ALL SELECT vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0 HAVING ((v0.c0) ISNULL);
SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0;
SELECT ALL vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE ((((~ (vt0.c0))) NOT BETWEEN (TRIM(DISTINCT vt0.c0, vt0.c0)) AND (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN '-598129419' THEN vt0.c0 END))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT ((((~ (vt0.c0))) NOT BETWEEN (TRIM(DISTINCT vt0.c0, vt0.c0)) AND (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN '-598129419' THEN vt0.c0 END))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((((((~ (vt0.c0))) NOT BETWEEN (TRIM(DISTINCT vt0.c0, vt0.c0)) AND (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN '-598129419' THEN vt0.c0 END))) ISNULL));
SELECT ALL vt0.c0 FROM vt0;
SELECT DISTINCT v0.c0 FROM v0 NATURAL JOIN vt0;
SELECT DISTINCT v0.c0 FROM v0 NATURAL JOIN vt0 WHERE (((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))<>('' COLLATE RTRIM))) UNION SELECT DISTINCT v0.c0 FROM v0 NATURAL JOIN vt0 WHERE ((NOT (((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))<>('' COLLATE RTRIM))))) UNION SELECT DISTINCT v0.c0 FROM v0 NATURAL JOIN vt0 WHERE (((((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))!=('' COLLATE RTRIM))) ISNULL));
SELECT DISTINCT v0.c0 FROM v0 NATURAL JOIN vt0;
SELECT vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0;
SELECT ALL vt0.c0, v0.c0 FROM v0, vt0 WHERE (((((CAST(vt0.c0 AS INTEGER))AND(vt0.c0)))OR(((v0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0))))) GROUP BY vt0.c0, v0.c0 UNION SELECT ALL vt0.c0, v0.c0 FROM v0, vt0 WHERE ((NOT (((((CAST(vt0.c0 AS INTEGER))AND(vt0.c0)))OR(((v0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0))))))) GROUP BY vt0.c0, v0.c0 UNION SELECT ALL vt0.c0, v0.c0 FROM v0, vt0 WHERE (((((((CAST(vt0.c0 AS INTEGER))AND(vt0.c0)))OR(((v0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0))))) ISNULL)) GROUP BY vt0.c0, v0.c0;
SELECT vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING MAX(TOTAL(TOTAL(vt0.c0))) COLLATE RTRIM UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (MAX(TOTAL(TOTAL(vt0.c0))) COLLATE RTRIM)) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((MAX(TOTAL(TOTAL(vt0.c0))) COLLATE RTRIM) ISNULL);
SELECT ALL * FROM vt0;
SELECT * FROM vt0 WHERE (vt0.c0) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (vt0.c0))) UNION ALL SELECT ALL * FROM vt0 WHERE (((vt0.c0) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (CAST(((v0.c0) ISNULL) AS TEXT)) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (CAST(((v0.c0) ISNULL) AS TEXT)))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((CAST(((v0.c0) ISNULL) AS TEXT)) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0;
SELECT v0.c0, vt0.c0 FROM v0, vt0 WHERE (UPPER(NULL)) GROUP BY v0.c0, vt0.c0 UNION SELECT ALL v0.c0, vt0.c0 FROM v0, vt0 WHERE ((NOT (UPPER(NULL)))) GROUP BY v0.c0, vt0.c0 UNION SELECT v0.c0, vt0.c0 FROM v0, vt0 WHERE (((UPPER(NULL)) ISNULL)) GROUP BY v0.c0, vt0.c0;
SELECT v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0;
SELECT vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0;
SELECT vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0;
SELECT vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0;
SELECT ALL SUM(UPPER(0.08074474773085583)) FROM vt0, v0;
SELECT ALL v0.c0 FROM v0;
SELECT ALL v0.c0 FROM v0 WHERE ((- ((v0.c0 IN ())))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE ((NOT ((- ((v0.c0 IN ())))))) UNION ALL SELECT v0.c0 FROM v0 WHERE ((((- ((v0.c0 IN ())))) ISNULL));
SELECT ALL v0.c0 FROM v0;
SELECT DISTINCT v0.c0, vt0.c0 FROM vt0, v0;
SELECT DISTINCT v0.c0, vt0.c0 FROM vt0, v0 WHERE (CASE ((v0.c0)LIKE(v0.c0))  WHEN CASE WHEN vt0.c0 THEN v0.c0 ELSE v0.c0 END THEN CAST(v0.c0 AS REAL) ELSE ((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) END) UNION SELECT DISTINCT v0.c0, vt0.c0 FROM vt0, v0 WHERE ((NOT (CASE ((v0.c0)LIKE(v0.c0))  WHEN CASE WHEN vt0.c0 THEN v0.c0 ELSE v0.c0 END THEN CAST(v0.c0 AS REAL) ELSE ((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) END))) UNION SELECT DISTINCT v0.c0, vt0.c0 FROM vt0, v0 WHERE (((CASE ((v0.c0)LIKE(v0.c0))  WHEN CASE WHEN vt0.c0 THEN v0.c0 ELSE v0.c0 END THEN CAST(v0.c0 AS REAL) ELSE ((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) END) ISNULL));
SELECT DISTINCT v0.c0, vt0.c0 FROM vt0, v0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (v0.c0) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT (v0.c0))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE (((v0.c0) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT vt0.c0 FROM vt0, v0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, v0 GROUP BY vt0.c0 HAVING 954624982 UNION ALL SELECT ALL vt0.c0 FROM vt0, v0 GROUP BY vt0.c0 HAVING (NOT (954624982)) UNION ALL SELECT vt0.c0 FROM vt0, v0 GROUP BY vt0.c0 HAVING ((954624982) ISNULL);
SELECT vt0.c0 FROM vt0, v0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, v0 GROUP BY vt0.c0 HAVING 954624982 UNION ALL SELECT ALL vt0.c0 FROM vt0, v0 GROUP BY vt0.c0 HAVING (NOT (954624982)) UNION ALL SELECT vt0.c0 FROM vt0, v0 GROUP BY vt0.c0 HAVING ((954624982) ISNULL);
SELECT vt0.c0 FROM vt0, v0 GROUP BY vt0.c0;
SELECT * FROM vt0 FULL OUTER JOIN v0 ON ((0X57be0ad8)+(v0.c0 COLLATE NOCASE));
SELECT * FROM vt0 FULL OUTER JOIN v0 ON ((0x57be0ad8)+(v0.c0 COLLATE NOCASE)) WHERE (CAST(CAST(1304829240 AS INTEGER) AS BLOB)) UNION ALL SELECT * FROM vt0 FULL OUTER JOIN v0 ON ((0X57be0ad8)+(v0.c0 COLLATE NOCASE)) WHERE ((NOT (CAST(CAST(1304829240 AS INTEGER) AS BLOB)))) UNION ALL SELECT ALL * FROM vt0 NOT INDEXED FULL OUTER JOIN v0 ON ((0x57be0ad8)+(v0.c0 COLLATE NOCASE)) WHERE (((CAST(CAST(1304829240 AS INTEGER) AS BLOB)) ISNULL));
SELECT * FROM vt0 FULL OUTER JOIN v0 ON ((0X57be0ad8)+(v0.c0 COLLATE NOCASE));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((- (((vt0.c0)*(vt0.c0))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT ((- (((vt0.c0)*(vt0.c0))))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((((- (((vt0.c0)*(vt0.c0))))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT ALL v0.c0 FROM v0, vt0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0, vt0 WHERE (CASE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))  WHEN ((v0.c0)+(vt0.c0)) THEN CAST(vt0.c0 AS INTEGER) END) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0, vt0 WHERE ((NOT (CASE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))  WHEN ((v0.c0)+(vt0.c0)) THEN CAST(vt0.c0 AS INTEGER) END))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0, vt0 WHERE (((CASE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))  WHEN ((v0.c0)+(vt0.c0)) THEN CAST(vt0.c0 AS INTEGER) END) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0, vt0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING GROUP_CONCAT(GROUP_CONCAT(TOTAL(v0.c0))) COLLATE NOCASE UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (GROUP_CONCAT(GROUP_CONCAT(TOTAL(v0.c0))) COLLATE NOCASE)) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((GROUP_CONCAT(GROUP_CONCAT(TOTAL(v0.c0))) COLLATE NOCASE) ISNULL);
SELECT ALL * FROM vt0 NATURAL JOIN v0;
SELECT ALL * FROM vt0 NATURAL JOIN v0 WHERE ((((vt0.c0 IN ())) ISNULL)) UNION ALL SELECT * FROM vt0 NATURAL JOIN v0 WHERE ((NOT ((((vt0.c0 IN ())) ISNULL)))) UNION ALL SELECT * FROM vt0 NATURAL JOIN v0 WHERE ((((((vt0.c0 IN ())) ISNULL)) ISNULL));
SELECT ALL * FROM vt0 NATURAL JOIN v0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN 1472072408 THEN vt0.c0 ELSE vt0.c0 END COLLATE RTRIM) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN 1472072408 THEN vt0.c0 ELSE vt0.c0 END COLLATE RTRIM))) UNION SELECT DISTINCT * FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN 1472072408 THEN vt0.c0 ELSE vt0.c0 END COLLATE RTRIM) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (CASE WHEN vt0.c0 THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) ELSE (NOT (vt0.c0)) END) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (CASE WHEN vt0.c0 THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) ELSE (NOT (vt0.c0)) END))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) ELSE (NOT (vt0.c0)) END) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, v0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0, v0 GROUP BY vt0.c0 HAVING TOTAL(vt0.c0) UNION ALL SELECT vt0.c0 FROM vt0, v0 GROUP BY vt0.c0 HAVING (NOT (TOTAL(vt0.c0))) UNION ALL SELECT vt0.c0 FROM vt0, v0 GROUP BY vt0.c0 HAVING ((TOTAL(vt0.c0)) ISNULL);
SELECT ALL vt0.c0 FROM vt0, v0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0, v0 GROUP BY vt0.c0 HAVING TOTAL(vt0.c0) UNION ALL SELECT vt0.c0 FROM vt0, v0 GROUP BY vt0.c0 HAVING (NOT (TOTAL(vt0.c0))) UNION ALL SELECT vt0.c0 FROM vt0, v0 GROUP BY vt0.c0 HAVING ((TOTAL(vt0.c0)) ISNULL);
SELECT ALL vt0.c0 FROM vt0, v0 GROUP BY vt0.c0;
SELECT ALL v0.c0 FROM vt0 FULL OUTER JOIN v0 ON '';
SELECT ALL v0.c0 FROM vt0 FULL OUTER JOIN v0 ON '' WHERE (2.011826397E9) UNION ALL SELECT v0.c0 FROM vt0 FULL OUTER JOIN v0 ON '' WHERE ((NOT (2.011826397E9))) UNION ALL SELECT ALL v0.c0 FROM vt0 FULL OUTER JOIN v0 ON '' WHERE (((2.011826397E9) ISNULL));
SELECT ALL v0.c0 FROM vt0 FULL OUTER JOIN v0 ON '';
SELECT DISTINCT * FROM v0 LEFT OUTER JOIN vt0 ON ((json_insert(0.8263994518241364, v0.c0, v0.c0))-(vt0.c0 COLLATE BINARY));
SELECT DISTINCT * FROM v0 LEFT OUTER JOIN vt0 ON ((json_insert(0.8263994518241364, v0.c0, v0.c0))-(vt0.c0 COLLATE BINARY)) WHERE (v0.c0) UNION SELECT DISTINCT * FROM v0 LEFT OUTER JOIN vt0 ON ((json_insert(0.8263994518241364, v0.c0, v0.c0))-(vt0.c0 COLLATE BINARY)) WHERE ((NOT (v0.c0))) UNION SELECT DISTINCT * FROM v0 LEFT OUTER JOIN vt0 ON ((json_insert(0.8263994518241364, v0.c0, v0.c0))-(vt0.c0 COLLATE BINARY)) WHERE (((v0.c0) ISNULL));
SELECT DISTINCT * FROM v0 LEFT OUTER JOIN vt0 ON ((json_insert(0.8263994518241364, v0.c0, v0.c0))-(vt0.c0 COLLATE BINARY));
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (v0.c0) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (v0.c0))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((v0.c0) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM vt0, v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM vt0, v0 GROUP BY v0.c0 HAVING MAX(COUNT(AVG(vt0.c0))) UNION ALL SELECT v0.c0 FROM vt0, v0 GROUP BY v0.c0 HAVING (NOT (MAX(COUNT(AVG(vt0.c0))))) UNION ALL SELECT v0.c0 FROM vt0, v0 GROUP BY v0.c0 HAVING ((MAX(COUNT(AVG(vt0.c0)))) ISNULL);
SELECT ALL * FROM vt0;
SELECT ALL * FROM vt0 WHERE (((CASE vt0.c0  WHEN 0.3652781852031647 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)==((vt0.c0 IN ())))) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (((CASE vt0.c0  WHEN 0.3652781852031647 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)=((vt0.c0 IN ())))))) UNION ALL SELECT ALL * FROM vt0 WHERE (((((CASE vt0.c0  WHEN 0.3652781852031647 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)==((vt0.c0 IN ())))) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT * FROM vt0 NOT INDEXED, v0;
SELECT DISTINCT * FROM vt0, v0 WHERE (((((((v0.c0)IS(vt0.c0)))AND(CASE WHEN v0.c0 THEN vt0.c0 ELSE v0.c0 END)))OR(CAST(vt0.c0 AS NUMERIC)))) UNION SELECT DISTINCT * FROM vt0, v0 WHERE ((NOT (((((((v0.c0)IS(vt0.c0)))AND(CASE WHEN v0.c0 THEN vt0.c0 ELSE v0.c0 END)))OR(CAST(vt0.c0 AS NUMERIC)))))) UNION SELECT DISTINCT * FROM vt0, v0 WHERE (((((((((v0.c0)IS(vt0.c0)))AND(CASE WHEN v0.c0 THEN vt0.c0 ELSE v0.c0 END)))OR(CAST(vt0.c0 AS NUMERIC)))) ISNULL));
SELECT DISTINCT * FROM vt0 NOT INDEXED, v0;
SELECT v0.c0 FROM v0 NOT INDEXED, vt0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0, vt0 WHERE (NULL) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0, vt0 WHERE ((NOT (NULL))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0, vt0 WHERE (((NULL) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 NOT INDEXED, vt0 GROUP BY v0.c0;
SELECT v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0;
SELECT v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0 HAVING vt0.c0 UNION ALL SELECT v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0 HAVING (NOT (vt0.c0)) UNION ALL SELECT ALL v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0 HAVING ((vt0.c0) ISNULL);
SELECT v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0;
SELECT v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0 HAVING vt0.c0 UNION ALL SELECT v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0 HAVING (NOT (vt0.c0)) UNION ALL SELECT ALL v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0 HAVING ((vt0.c0) ISNULL);
SELECT v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0;
SELECT ALL vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE ((((((vt0.c0))!=((vt0.c0)))) ISNULL)) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT ((((((vt0.c0))<>((vt0.c0)))) ISNULL)))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((((((((vt0.c0))<>((vt0.c0)))) ISNULL)) ISNULL));
SELECT ALL vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (TRIM('1568916544', (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, x'', x'07a1')) AND ((vt0.c0, vt0.c0, '-2006041941'))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (TRIM('1568916544', (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, x'', x'07a1')) AND ((vt0.c0, vt0.c0, '-2006041941'))))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((TRIM('1568916544', (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, x'', x'07a1')) AND ((vt0.c0, vt0.c0, '-2006041941'))))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (((((((((highlight(v0.c0, v0.c0, v0.c0, v0.c0))OR(('-1422993459' IN ()))))OR('l	nfQlz')))AND(((v0.c0)<>(v0.c0)))))OR(v0.c0))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT (((((((((highlight(v0.c0, v0.c0, v0.c0, v0.c0))OR(('-1422993459' IN ()))))OR('l	nfQlz')))AND(((v0.c0)!=(v0.c0)))))OR(v0.c0))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE (((((((((((highlight(v0.c0, v0.c0, v0.c0, v0.c0))OR(('-1422993459' IN ()))))OR('l	nfQlz')))AND(((v0.c0)!=(v0.c0)))))OR(v0.c0))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0;
SELECT vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0 HAVING GROUP_CONCAT(TOTAL(v0.c0)) UNION ALL SELECT vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0 HAVING (NOT (GROUP_CONCAT(TOTAL(v0.c0)))) UNION ALL SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0 HAVING ((GROUP_CONCAT(TOTAL(v0.c0))) ISNULL);
SELECT v0.c0 FROM v0, vt0;
SELECT ALL v0.c0 FROM v0, vt0 WHERE (((((((((((((CAST(v0.c0 AS NUMERIC))AND(((vt0.c0)<(vt0.c0)))))OR(((vt0.c0)/(v0.c0)))))AND(((vt0.c0) BETWEEN (v0.c0) AND (v0.c0)))))OR(((v0.c0) ISNULL))))OR((((((((('1950190863')OR(v0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))))OR(((vt0.c0)OR(vt0.c0))))) UNION ALL SELECT ALL v0.c0 FROM v0, vt0 WHERE ((NOT (((((((((((((CAST(v0.c0 AS NUMERIC))AND(((vt0.c0)<(vt0.c0)))))OR(((vt0.c0)/(v0.c0)))))AND(((vt0.c0) BETWEEN (v0.c0) AND (v0.c0)))))OR(((v0.c0) ISNULL))))OR((((((((('1950190863')OR(v0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))))OR(((vt0.c0)OR(vt0.c0))))))) UNION ALL SELECT ALL v0.c0 FROM v0, vt0 WHERE (((((((((((((((CAST(v0.c0 AS NUMERIC))AND(((vt0.c0)<(vt0.c0)))))OR(((vt0.c0)/(v0.c0)))))AND(((vt0.c0) BETWEEN (v0.c0) AND (v0.c0)))))OR(((v0.c0) ISNULL))))OR((((((((('1950190863')OR(v0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))))OR(((vt0.c0)OR(vt0.c0))))) ISNULL));
SELECT v0.c0 FROM v0, vt0;
SELECT DISTINCT * FROM vt0, v0;
SELECT DISTINCT * FROM vt0, v0 WHERE (CASE (((v0.c0)) BETWEEN ((v0.c0)) AND ((vt0.c0)))  WHEN CAST(-977747991 AS REAL) THEN ((v0.c0)<<(vt0.c0)) WHEN ((vt0.c0) BETWEEN (v0.c0) AND (v0.c0)) THEN vt0.c0 COLLATE RTRIM WHEN ((v0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)) THEN ((v0.c0) NOT NULL) END) UNION SELECT DISTINCT * FROM vt0, v0 WHERE ((NOT (CASE (((v0.c0)) BETWEEN ((v0.c0)) AND ((vt0.c0)))  WHEN CAST(-977747991 AS REAL) THEN ((v0.c0)<<(vt0.c0)) WHEN ((vt0.c0) BETWEEN (v0.c0) AND (v0.c0)) THEN vt0.c0 COLLATE RTRIM WHEN ((v0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)) THEN ((v0.c0) NOT NULL) END))) UNION SELECT DISTINCT * FROM vt0, v0 WHERE (((CASE (((v0.c0)) BETWEEN ((v0.c0)) AND ((vt0.c0)))  WHEN CAST(-977747991 AS REAL) THEN ((v0.c0)<<(vt0.c0)) WHEN ((vt0.c0) BETWEEN (v0.c0) AND (v0.c0)) THEN vt0.c0 COLLATE RTRIM WHEN ((v0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)) THEN ((v0.c0) NOT NULL) END) ISNULL));
SELECT DISTINCT * FROM vt0, v0;
SELECT ALL vt0.c0 FROM vt0, v0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0, v0 WHERE (((CAST(0.1838616680927443 AS NUMERIC)) BETWEEN (vt0.c0 COLLATE BINARY) AND (vt0.c0))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0, v0 WHERE ((NOT (((CAST(0.1838616680927443 AS NUMERIC)) BETWEEN (vt0.c0 COLLATE BINARY) AND (vt0.c0))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0, v0 WHERE (((((CAST(0.1838616680927443 AS NUMERIC)) BETWEEN (vt0.c0 COLLATE BINARY) AND (vt0.c0))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, v0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 RIGHT OUTER JOIN v0 ON (((((vt0.c0))<=((vt0.c0)))) ISNULL) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 RIGHT OUTER JOIN v0 ON (((((vt0.c0))<=((vt0.c0)))) ISNULL) GROUP BY vt0.c0 HAVING GROUP_CONCAT(COUNT(*)) UNION ALL SELECT ALL vt0.c0 FROM vt0 RIGHT OUTER JOIN v0 ON (((((vt0.c0))<=((vt0.c0)))) ISNULL) GROUP BY vt0.c0 HAVING (NOT (GROUP_CONCAT(COUNT(*)))) UNION ALL SELECT vt0.c0 FROM vt0 RIGHT OUTER JOIN v0 ON (((((vt0.c0))<=((vt0.c0)))) ISNULL) GROUP BY vt0.c0 HAVING ((GROUP_CONCAT(COUNT(*))) ISNULL);
SELECT v0.c0 FROM v0;
SELECT v0.c0 FROM v0 WHERE ((+ (((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))OR(v0.c0)))OR(v0.c0))))) UNION ALL SELECT v0.c0 FROM v0 WHERE ((NOT ((+ (((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))OR(v0.c0)))OR(v0.c0))))))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE ((((+ (((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))OR(v0.c0)))OR(v0.c0))))) ISNULL));
SELECT v0.c0 FROM v0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)==(0.5841256083160209))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)==(0.5841256083160209))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)=(0.5841256083160209))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0, v0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0, v0 WHERE ((((((v0.c0 IN ()))OR(vt0.c0 COLLATE NOCASE)))OR(((vt0.c0) NOT BETWEEN (0.307347652806079) AND (v0.c0))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0, v0 WHERE ((NOT ((((((v0.c0 IN ()))OR(vt0.c0 COLLATE NOCASE)))OR(((vt0.c0) NOT BETWEEN (0.307347652806079) AND (v0.c0))))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0, v0 WHERE ((((((((v0.c0 IN ()))OR(vt0.c0 COLLATE NOCASE)))OR(((vt0.c0) NOT BETWEEN (0.307347652806079) AND (v0.c0))))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0, v0 GROUP BY vt0.c0;
SELECT ALL v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0;
SELECT ALL v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0 HAVING CAST(CAST(SUM(x'') AS TEXT) AS TEXT) UNION ALL SELECT ALL v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0 HAVING (NOT (CAST(CAST(SUM(x'') AS TEXT) AS TEXT))) UNION ALL SELECT ALL v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0 HAVING ((CAST(CAST(SUM(x'') AS TEXT) AS TEXT)) ISNULL);
SELECT ALL v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0;
SELECT ALL v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0 HAVING CAST(CAST(SUM(x'') AS TEXT) AS TEXT) UNION ALL SELECT ALL v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0 HAVING (NOT (CAST(CAST(SUM(x'') AS TEXT) AS TEXT))) UNION ALL SELECT ALL v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0 HAVING ((CAST(CAST(SUM(x'') AS TEXT) AS TEXT)) ISNULL);
SELECT ALL v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0;
SELECT ALL v0.c0 FROM v0, vt0;
SELECT v0.c0 FROM v0, vt0 WHERE ((LTRIM(vt0.c0) IN ())) UNION ALL SELECT v0.c0 FROM v0, vt0 WHERE ((NOT ((LTRIM(vt0.c0) IN ())))) UNION ALL SELECT ALL v0.c0 FROM v0, vt0 WHERE ((((LTRIM(vt0.c0) IN ())) ISNULL));
SELECT ALL v0.c0 FROM v0, vt0;
SELECT DISTINCT v0.c0, vt0.c0 FROM v0 LEFT OUTER JOIN vt0 ON CASE WHEN ((((vt0.c0)AND(vt0.c0)))AND(v0.c0)) THEN ((((v0.c0)AND(vt0.c0)))AND(v0.c0)) WHEN LOWER(DISTINCT v0.c0) THEN ((v0.c0)OR(v0.c0)) WHEN ((((v0.c0)OR(v0.c0)))AND(vt0.c0)) THEN CAST(v0.c0 AS REAL) ELSE (+ (vt0.c0)) END;
SELECT DISTINCT v0.c0, vt0.c0 FROM v0 LEFT OUTER JOIN vt0 ON CASE WHEN ((((vt0.c0)AND(vt0.c0)))AND(v0.c0)) THEN ((((v0.c0)AND(vt0.c0)))AND(v0.c0)) WHEN LOWER(DISTINCT v0.c0) THEN ((v0.c0)OR(v0.c0)) WHEN ((((v0.c0)OR(v0.c0)))AND(vt0.c0)) THEN CAST(v0.c0 AS REAL) ELSE (+ (vt0.c0)) END WHERE (((v0.c0) NOTNULL) COLLATE RTRIM) UNION SELECT DISTINCT v0.c0, vt0.c0 FROM v0 LEFT OUTER JOIN vt0 ON CASE WHEN ((((vt0.c0)AND(vt0.c0)))AND(v0.c0)) THEN ((((v0.c0)AND(vt0.c0)))AND(v0.c0)) WHEN LOWER(DISTINCT v0.c0) THEN ((v0.c0)OR(v0.c0)) WHEN ((((v0.c0)OR(v0.c0)))AND(vt0.c0)) THEN CAST(v0.c0 AS REAL) ELSE (+ (vt0.c0)) END WHERE ((NOT (((v0.c0) NOTNULL) COLLATE RTRIM))) UNION SELECT DISTINCT v0.c0, vt0.c0 FROM v0 LEFT OUTER JOIN vt0 ON CASE WHEN ((((vt0.c0)AND(vt0.c0)))AND(v0.c0)) THEN ((((v0.c0)AND(vt0.c0)))AND(v0.c0)) WHEN LOWER(DISTINCT v0.c0) THEN ((v0.c0)OR(v0.c0)) WHEN ((((v0.c0)OR(v0.c0)))AND(vt0.c0)) THEN CAST(v0.c0 AS REAL) ELSE (+ (vt0.c0)) END WHERE (((((v0.c0) NOTNULL) COLLATE RTRIM) ISNULL));
SELECT DISTINCT v0.c0, vt0.c0 FROM v0 LEFT OUTER JOIN vt0 ON CASE WHEN ((((vt0.c0)AND(vt0.c0)))AND(v0.c0)) THEN ((((v0.c0)AND(vt0.c0)))AND(v0.c0)) WHEN LOWER(DISTINCT v0.c0) THEN ((v0.c0)OR(v0.c0)) WHEN ((((v0.c0)OR(v0.c0)))AND(vt0.c0)) THEN CAST(v0.c0 AS REAL) ELSE (+ (vt0.c0)) END;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (CAST(CAST(v0.c0 AS TEXT) AS BLOB)) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (CAST(CAST(v0.c0 AS TEXT) AS BLOB)))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((CAST(CAST(v0.c0 AS TEXT) AS BLOB)) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM vt0 INNER JOIN v0 ON x'3280' COLLATE RTRIM GROUP BY v0.c0;
SELECT v0.c0 FROM vt0 INNER JOIN v0 ON x'3280' COLLATE RTRIM GROUP BY v0.c0 HAVING CAST(x'' AS REAL) UNION ALL SELECT ALL v0.c0 FROM vt0 INNER JOIN v0 ON x'3280' COLLATE RTRIM GROUP BY v0.c0 HAVING (NOT (CAST(x'' AS REAL))) UNION ALL SELECT ALL v0.c0 FROM vt0 INNER JOIN v0 ON x'3280' COLLATE RTRIM GROUP BY v0.c0 HAVING ((CAST(x'' AS REAL)) ISNULL);
SELECT ALL v0.c0 FROM vt0 INNER JOIN v0 ON x'3280' COLLATE RTRIM GROUP BY v0.c0;
SELECT v0.c0 FROM vt0 INNER JOIN v0 ON x'3280' COLLATE RTRIM GROUP BY v0.c0 HAVING CAST(x'' AS REAL) UNION ALL SELECT ALL v0.c0 FROM vt0 INNER JOIN v0 ON x'3280' COLLATE RTRIM GROUP BY v0.c0 HAVING (NOT (CAST(x'' AS REAL))) UNION ALL SELECT ALL v0.c0 FROM vt0 INNER JOIN v0 ON x'3280' COLLATE RTRIM GROUP BY v0.c0 HAVING ((CAST(x'' AS REAL)) ISNULL);
SELECT ALL v0.c0 FROM vt0 INNER JOIN v0 ON x'3280' COLLATE RTRIM GROUP BY v0.c0;
SELECT vt0.c0, v0.c0 FROM v0, vt0;
SELECT vt0.c0, v0.c0 FROM v0, vt0 WHERE (TRIM(DISTINCT v0.c0)) UNION ALL SELECT vt0.c0, v0.c0 FROM v0, vt0 WHERE ((NOT (TRIM(DISTINCT v0.c0)))) UNION ALL SELECT vt0.c0, v0.c0 FROM v0, vt0 WHERE (((TRIM(DISTINCT v0.c0)) ISNULL));
SELECT vt0.c0, v0.c0 FROM v0, vt0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (CASE WHEN v0.c0 THEN CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END END) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (CASE WHEN v0.c0 THEN CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END END))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((CASE WHEN v0.c0 THEN CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END END) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT ALL vt0.c0 FROM v0, vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM v0, vt0 WHERE (TIME(vt0.c0, vt0.c0, 0.574017538912351, vt0.c0, v0.c0) COLLATE NOCASE) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM v0, vt0 WHERE ((NOT (TIME(vt0.c0, vt0.c0, 0.574017538912351, vt0.c0, v0.c0) COLLATE NOCASE))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM v0, vt0 WHERE (((TIME(vt0.c0, vt0.c0, 0.574017538912351, vt0.c0, v0.c0) COLLATE NOCASE) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM v0, vt0 GROUP BY vt0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING CAST((((MAX(MIN(MAX(v0.c0))))) NOT BETWEEN ((v0.c0)) AND ((v0.c0))) AS REAL) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (CAST((((MAX(MIN(MAX(v0.c0))))) NOT BETWEEN ((v0.c0)) AND ((v0.c0))) AS REAL))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((CAST((((MAX(MIN(MAX(v0.c0))))) NOT BETWEEN ((v0.c0)) AND ((v0.c0))) AS REAL)) ISNULL);
SELECT * FROM vt0 CROSS JOIN v0 ON (+ (vt0.c0 COLLATE NOCASE));
SELECT ALL * FROM vt0 CROSS JOIN v0 ON (+ (vt0.c0 COLLATE NOCASE)) WHERE (CASE ((v0.c0) NOT BETWEEN ('#') AND (v0.c0))  WHEN ((v0.c0)<=(v0.c0)) THEN (((vt0.c0))<=((vt0.c0))) WHEN CASE vt0.c0  WHEN vt0.c0 THEN v0.c0 ELSE v0.c0 END THEN CAST(v0.c0 AS REAL) WHEN vt0.c0 COLLATE BINARY THEN NULL COLLATE RTRIM ELSE ((vt0.c0)AND(v0.c0)) END) UNION ALL SELECT ALL * FROM vt0 CROSS JOIN v0 ON (+ (vt0.c0 COLLATE NOCASE)) WHERE ((NOT (CASE ((v0.c0) NOT BETWEEN ('#') AND (v0.c0))  WHEN ((v0.c0)<=(v0.c0)) THEN (((vt0.c0))<=((vt0.c0))) WHEN CASE vt0.c0  WHEN vt0.c0 THEN v0.c0 ELSE v0.c0 END THEN CAST(v0.c0 AS REAL) WHEN vt0.c0 COLLATE BINARY THEN NULL COLLATE RTRIM ELSE ((vt0.c0)AND(v0.c0)) END))) UNION ALL SELECT * FROM vt0 CROSS JOIN v0 ON (+ (vt0.c0 COLLATE NOCASE)) WHERE (((CASE ((v0.c0) NOT BETWEEN ('#') AND (v0.c0))  WHEN ((v0.c0)<=(v0.c0)) THEN (((vt0.c0))<=((vt0.c0))) WHEN CASE vt0.c0  WHEN vt0.c0 THEN v0.c0 ELSE v0.c0 END THEN CAST(v0.c0 AS REAL) WHEN vt0.c0 COLLATE BINARY THEN NULL COLLATE RTRIM ELSE ((vt0.c0)AND(v0.c0)) END) ISNULL));
SELECT * FROM vt0 CROSS JOIN v0 ON (+ (vt0.c0 COLLATE NOCASE));
SELECT DISTINCT * FROM vt0, v0;
SELECT DISTINCT * FROM vt0, v0 WHERE (((v0.c0 COLLATE NOCASE)%(ABS(DISTINCT v0.c0)))) UNION SELECT DISTINCT * FROM vt0, v0 WHERE ((NOT (((v0.c0 COLLATE NOCASE)%(ABS(DISTINCT v0.c0)))))) UNION SELECT DISTINCT * FROM vt0, v0 WHERE (((((v0.c0 COLLATE NOCASE)%(ABS(DISTINCT v0.c0)))) ISNULL));
SELECT DISTINCT * FROM vt0, v0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE ((CAST(vt0.c0 AS REAL) IN ())) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT ((CAST(vt0.c0 AS REAL) IN ())))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((((CAST(vt0.c0 AS REAL) IN ())) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0;
SELECT ALL vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0 HAVING (((TOTAL(MIN(vt0.c0)))>>(TOTAL(vt0.c0))) IN (MIN(vt0.c0), COUNT(*))) UNION ALL SELECT ALL vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0 HAVING (NOT ((((TOTAL(MIN(vt0.c0)))>>(TOTAL(vt0.c0))) IN (MIN(vt0.c0), COUNT(*))))) UNION ALL SELECT ALL vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0 HAVING (((((TOTAL(MIN(vt0.c0)))>>(TOTAL(vt0.c0))) IN (MIN(vt0.c0), COUNT(*)))) ISNULL);
SELECT vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE (((((vt0.c0)<<(vt0.c0)))<=((((vt0.c0))<((vt0.c0)))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (((((vt0.c0)<<(vt0.c0)))<=((((vt0.c0))<((vt0.c0)))))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE (((((((vt0.c0)<<(vt0.c0)))<=((((vt0.c0))<((vt0.c0)))))) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (v0.c0) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (v0.c0))) UNION SELECT DISTINCT * FROM v0 WHERE (((v0.c0) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0;
SELECT v0.c0, vt0.c0 FROM v0, vt0 WHERE ((((((v0.c0, '/&hRಂ2䏎2', vt0.c0))!=((vt0.c0, vt0.c0, vt0.c0)))) NOT BETWEEN ((NOT (v0.c0))) AND (((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(v0.c0)))OR(v0.c0))))) GROUP BY v0.c0, vt0.c0 UNION SELECT v0.c0, vt0.c0 FROM v0, vt0 WHERE ((NOT ((((((v0.c0, '/&hRಂ2䏎2', vt0.c0))!=((vt0.c0, vt0.c0, vt0.c0)))) NOT BETWEEN ((NOT (v0.c0))) AND (((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(v0.c0)))OR(v0.c0))))))) GROUP BY v0.c0, vt0.c0 UNION SELECT v0.c0, vt0.c0 FROM v0, vt0 WHERE ((((((((v0.c0, '/&hRಂ2䏎2', vt0.c0))<>((vt0.c0, vt0.c0, vt0.c0)))) NOT BETWEEN ((NOT (v0.c0))) AND (((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(v0.c0)))OR(v0.c0))))) ISNULL)) GROUP BY v0.c0, vt0.c0;
SELECT v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING COUNT(*) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING COUNT(*) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0, vt0.c0 FROM vt0 FULL OUTER JOIN v0 ON (((vt0.c0, TRIM(v0.c0), LENGTH(0Xffffffff9817e034)))>((((vt0.c0)<>(vt0.c0)), ((vt0.c0) NOT NULL), ((v0.c0) NOTNULL))));
SELECT ALL v0.c0, vt0.c0 FROM vt0 FULL OUTER JOIN v0 ON (((vt0.c0, TRIM(v0.c0), LENGTH(0xffffffff9817e034)))>((((vt0.c0)!=(vt0.c0)), ((vt0.c0) NOT NULL), ((v0.c0) NOTNULL)))) WHERE ((((NOT (v0.c0)))<=(((vt0.c0) ISNULL)))) UNION ALL SELECT v0.c0, vt0.c0 FROM vt0 FULL OUTER JOIN v0 ON (((vt0.c0, TRIM(v0.c0), LENGTH(0Xffffffff9817e034)))>((((vt0.c0)<>(vt0.c0)), ((vt0.c0) NOT NULL), ((v0.c0) NOTNULL)))) WHERE ((NOT ((((NOT (v0.c0)))<=(((vt0.c0) ISNULL)))))) UNION ALL SELECT v0.c0, vt0.c0 FROM vt0 FULL OUTER JOIN v0 ON (((vt0.c0, TRIM(v0.c0), LENGTH(0xffffffff9817e034)))>((((vt0.c0)!=(vt0.c0)), ((vt0.c0) NOT NULL), ((v0.c0) NOTNULL)))) WHERE ((((((NOT (v0.c0)))<=(((vt0.c0) ISNULL)))) ISNULL));
SELECT ALL v0.c0, vt0.c0 FROM vt0 FULL OUTER JOIN v0 ON (((vt0.c0, TRIM(v0.c0), LENGTH(0Xffffffff9817e034)))>((((vt0.c0)<>(vt0.c0)), ((vt0.c0) NOT NULL), ((v0.c0) NOTNULL))));
SELECT DISTINCT * FROM v0, vt0;
SELECT DISTINCT * FROM v0, vt0 WHERE (QUOTE(((vt0.c0) BETWEEN (v0.c0) AND (vt0.c0)))) UNION SELECT DISTINCT * FROM v0, vt0 WHERE ((NOT (QUOTE(((vt0.c0) BETWEEN (v0.c0) AND (vt0.c0)))))) UNION SELECT DISTINCT * FROM v0, vt0 WHERE (((QUOTE(((vt0.c0) BETWEEN (v0.c0) AND (vt0.c0)))) ISNULL));
SELECT DISTINCT * FROM v0, vt0;
SELECT ALL v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0;
SELECT ALL v0.c0, vt0.c0 FROM vt0, v0 WHERE (CAST((NOT (0.6364781035360491)) AS BLOB)) GROUP BY v0.c0, vt0.c0 UNION SELECT ALL v0.c0, vt0.c0 FROM vt0, v0 WHERE ((NOT (CAST((NOT (0.6364781035360491)) AS BLOB)))) GROUP BY v0.c0, vt0.c0 UNION SELECT ALL v0.c0, vt0.c0 FROM vt0, v0 WHERE (((CAST((NOT (0.6364781035360491)) AS BLOB)) ISNULL)) GROUP BY v0.c0, vt0.c0;
SELECT ALL v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((((MIN(COUNT(*)))AND(MAX(v0.c0))))AND((NOT (v0.c0)))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (((((MIN(COUNT(*)))AND(MAX(v0.c0))))AND((NOT (v0.c0)))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((((((MIN(COUNT(*)))AND(MAX(v0.c0))))AND((NOT (v0.c0))))) ISNULL);
SELECT MAX((v0.c0 IN ())) FROM v0 ORDER BY (CAST(v0.c0 AS BLOB) IN (CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END));
SELECT vt0.c0, v0.c0 FROM v0 NOT INDEXED, vt0;
SELECT vt0.c0, v0.c0 FROM v0, vt0 WHERE (CASE v0.c0  WHEN vt0.c0 THEN v0.c0 END COLLATE BINARY) UNION ALL SELECT ALL vt0.c0, v0.c0 FROM v0, vt0 WHERE ((NOT (CASE v0.c0  WHEN vt0.c0 THEN v0.c0 END COLLATE BINARY))) UNION ALL SELECT ALL vt0.c0, v0.c0 FROM v0, vt0 WHERE (((CASE v0.c0  WHEN vt0.c0 THEN v0.c0 END COLLATE BINARY) ISNULL));
SELECT vt0.c0, v0.c0 FROM v0 NOT INDEXED, vt0;
SELECT DISTINCT * FROM vt0, v0;
SELECT DISTINCT * FROM vt0, v0 WHERE (ABS(((vt0.c0)IS(vt0.c0)))) UNION SELECT DISTINCT * FROM vt0, v0 WHERE ((NOT (ABS(((vt0.c0)IS(vt0.c0)))))) UNION SELECT DISTINCT * FROM vt0, v0 WHERE (((ABS(((vt0.c0)IS(vt0.c0)))) ISNULL));
SELECT DISTINCT * FROM vt0, v0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (json_extract(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), vt0.c0)) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (json_extract(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), vt0.c0)))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((json_extract(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), vt0.c0)) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (((x'', ((v0.c0) IS TRUE), (('0.39391210809531374') BETWEEN (GROUP_CONCAT(COUNT(TOTAL(COUNT(v0.c0))))) AND (AVG(COUNT(v0.c0))))))>((SUM(v0.c0), COUNT(GROUP_CONCAT(AVG(AVG(v0.c0)))), 2083955465))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT ((((x'', ((v0.c0) IS TRUE), (('0.39391210809531374') BETWEEN (GROUP_CONCAT(COUNT(TOTAL(COUNT(v0.c0))))) AND (AVG(COUNT(v0.c0))))))>((SUM(v0.c0), COUNT(GROUP_CONCAT(AVG(AVG(v0.c0)))), 2083955465))))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (((((x'', ((v0.c0) IS TRUE), (('0.39391210809531374') BETWEEN (GROUP_CONCAT(COUNT(TOTAL(COUNT(v0.c0))))) AND (AVG(COUNT(v0.c0))))))>((SUM(v0.c0), COUNT(GROUP_CONCAT(AVG(AVG(v0.c0)))), 2083955465)))) ISNULL);
SELECT ALL * FROM v0;
SELECT * FROM v0 WHERE (((x'') ISNULL)) UNION ALL SELECT ALL * FROM v0 WHERE ((NOT (((x'') ISNULL)))) UNION ALL SELECT * FROM v0 WHERE (((((x'') ISNULL)) ISNULL));
SELECT ALL * FROM v0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE ('') UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (''))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((('') ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE BINARY) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE BINARY))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE BINARY) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING AVG(v0.c0 COLLATE BINARY) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (AVG(v0.c0 COLLATE BINARY))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((AVG(v0.c0 COLLATE BINARY)) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING AVG(v0.c0 COLLATE BINARY) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (AVG(v0.c0 COLLATE BINARY))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((AVG(v0.c0 COLLATE BINARY)) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT * FROM vt0, v0;
SELECT * FROM vt0, v0 WHERE ((CAST(vt0.c0 AS BLOB) IN ())) UNION ALL SELECT * FROM vt0, v0 WHERE ((NOT ((CAST(vt0.c0 AS BLOB) IN ())))) UNION ALL SELECT ALL * FROM vt0, v0 WHERE ((((CAST(vt0.c0 AS BLOB) IN ())) ISNULL));
SELECT * FROM vt0, v0;
SELECT DISTINCT * FROM vt0, v0;
SELECT DISTINCT * FROM vt0, v0 WHERE (((vt0.c0 COLLATE NOCASE)*(vt0.c0))) UNION SELECT DISTINCT * FROM vt0, v0 WHERE ((NOT (((vt0.c0 COLLATE NOCASE)*(vt0.c0))))) UNION SELECT DISTINCT * FROM vt0, v0 WHERE (((((vt0.c0 COLLATE NOCASE)*(vt0.c0))) ISNULL));
SELECT DISTINCT * FROM vt0, v0;
SELECT ALL v0.c0 FROM v0, vt0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0, vt0 WHERE (CAST(((v0.c0) IS TRUE) AS TEXT)) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0, vt0 WHERE ((NOT (CAST(((v0.c0) IS TRUE) AS TEXT)))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0, vt0 WHERE (((CAST(((v0.c0) IS TRUE) AS TEXT)) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0, vt0 GROUP BY v0.c0;
SELECT vt0.c0 FROM vt0, v0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0, v0 GROUP BY vt0.c0 HAVING MIN(AVG(v0.c0)) UNION ALL SELECT vt0.c0 FROM vt0, v0 GROUP BY vt0.c0 HAVING (NOT (MIN(AVG(v0.c0)))) UNION ALL SELECT vt0.c0 FROM vt0, v0 GROUP BY vt0.c0 HAVING ((MIN(AVG(v0.c0))) ISNULL);
SELECT * FROM v0, vt0;
SELECT ALL * FROM v0, vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0))) IS TRUE)) UNION ALL SELECT * FROM v0, vt0 WHERE ((NOT (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0))) IS TRUE)))) UNION ALL SELECT * FROM v0, vt0 WHERE (((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0))) IS TRUE)) ISNULL));
SELECT * FROM v0, vt0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (NULL) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (NULL))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((NULL) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT ALL v0.c0, vt0.c0 FROM v0 NOT INDEXED, vt0 GROUP BY v0.c0, vt0.c0;
SELECT ALL v0.c0, vt0.c0 FROM v0, vt0 NOT INDEXED WHERE (((v0.c0)LIKE(v0.c0)) COLLATE BINARY) GROUP BY v0.c0, vt0.c0 UNION SELECT ALL v0.c0, vt0.c0 FROM v0, vt0 WHERE ((NOT (((v0.c0)LIKE(v0.c0)) COLLATE BINARY))) GROUP BY v0.c0, vt0.c0 UNION SELECT v0.c0, vt0.c0 FROM v0, vt0 WHERE (((((v0.c0)LIKE(v0.c0)) COLLATE BINARY) ISNULL)) GROUP BY v0.c0, vt0.c0;
SELECT ALL v0.c0, vt0.c0 FROM v0 NOT INDEXED, vt0 GROUP BY v0.c0, vt0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING MIN((NOT (v0.c0))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (MIN((NOT (v0.c0))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((MIN((NOT (v0.c0)))) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING MIN((NOT (v0.c0))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (MIN((NOT (v0.c0))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((MIN((NOT (v0.c0)))) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE (0.1149667548845944) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (0.1149667548845944))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE (((0.1149667548845944) ISNULL));
SELECT ALL vt0.c0 FROM vt0;
SELECT DISTINCT * FROM v0, vt0;
SELECT DISTINCT * FROM v0, vt0 WHERE ((- (0.940076489074278))) UNION SELECT DISTINCT * FROM v0, vt0 WHERE ((NOT ((- (0.940076489074278))))) UNION SELECT DISTINCT * FROM v0, vt0 WHERE ((((- (0.940076489074278))) ISNULL));
SELECT DISTINCT * FROM v0, vt0;
SELECT vt0.c0, v0.c0 FROM vt0 NATURAL JOIN v0 GROUP BY vt0.c0, v0.c0;
SELECT ALL vt0.c0, v0.c0 FROM vt0 NATURAL JOIN v0 WHERE (CAST(CAST(vt0.c0 AS TEXT) AS REAL)) GROUP BY vt0.c0, v0.c0 UNION SELECT vt0.c0, v0.c0 FROM vt0 NATURAL JOIN v0 WHERE ((NOT (CAST(CAST(vt0.c0 AS TEXT) AS REAL)))) GROUP BY vt0.c0, v0.c0 UNION SELECT vt0.c0, v0.c0 FROM vt0 NATURAL JOIN v0 WHERE (((CAST(CAST(vt0.c0 AS TEXT) AS REAL)) ISNULL)) GROUP BY vt0.c0, v0.c0;
SELECT vt0.c0, v0.c0 FROM vt0 NATURAL JOIN v0 GROUP BY vt0.c0, v0.c0;
SELECT ALL vt0.c0 FROM v0, vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM v0, vt0 GROUP BY vt0.c0 HAVING GROUP_CONCAT(((MIN('')) NOTNULL)) UNION ALL SELECT vt0.c0 FROM v0, vt0 GROUP BY vt0.c0 HAVING (NOT (GROUP_CONCAT(((MIN('')) NOTNULL)))) UNION ALL SELECT vt0.c0 FROM v0, vt0 GROUP BY vt0.c0 HAVING ((GROUP_CONCAT(((MIN('')) NOTNULL))) ISNULL);
SELECT v0.c0 FROM v0;
SELECT v0.c0 FROM v0 WHERE ('691922127') UNION ALL SELECT v0.c0 FROM v0 WHERE ((NOT ('691922127'))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE ((('691922127') ISNULL));
SELECT v0.c0 FROM v0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (((((v0.c0)<<(v0.c0))) NOTNULL)) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (((((v0.c0)<<(v0.c0))) NOTNULL)))) UNION SELECT DISTINCT * FROM v0 WHERE (((((((v0.c0)<<(v0.c0))) NOTNULL)) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (((((vt0.c0)>=(vt0.c0))) IS FALSE)) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (((((vt0.c0)>=(vt0.c0))) IS FALSE)))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((((((vt0.c0)>=(vt0.c0))) IS FALSE)) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0;
SELECT vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0 HAVING v0.c0 UNION ALL SELECT ALL vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0 HAVING (NOT (v0.c0)) UNION ALL SELECT vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0 HAVING ((v0.c0) ISNULL);
SELECT vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0;
SELECT vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0 HAVING v0.c0 UNION ALL SELECT ALL vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0 HAVING (NOT (v0.c0)) UNION ALL SELECT vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0 HAVING ((v0.c0) ISNULL);
SELECT vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0;
SELECT ALL v0.c0 FROM v0, vt0;
SELECT ALL v0.c0 FROM v0, vt0 WHERE (((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))AND(v0.c0)))OR(v0.c0)) COLLATE NOCASE) UNION ALL SELECT v0.c0 FROM v0, vt0 WHERE ((NOT (((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))AND(v0.c0)))OR(v0.c0)) COLLATE NOCASE))) UNION ALL SELECT ALL v0.c0 FROM v0, vt0 WHERE (((((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))AND(v0.c0)))OR(v0.c0)) COLLATE NOCASE) ISNULL));
SELECT ALL v0.c0 FROM v0, vt0;
SELECT DISTINCT v0.c0, vt0.c0 FROM v0 LEFT OUTER JOIN vt0 ON CASE CAST(v0.c0 AS BLOB)  WHEN NULL THEN ((((v0.c0)OR(vt0.c0)))OR(vt0.c0)) ELSE v0.c0 END;
SELECT DISTINCT v0.c0, vt0.c0 FROM v0 LEFT OUTER JOIN vt0 ON CASE CAST(v0.c0 AS BLOB)  WHEN NULL THEN ((((v0.c0)OR(vt0.c0)))OR(vt0.c0)) ELSE v0.c0 END WHERE ((((((vt0.c0)*(vt0.c0)), x'6e45', LIKELIHOOD(DISTINCT v0.c0, 0.26103957018364676)))>=((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)), (+ (vt0.c0)), ((((v0.c0)OR(NULL)))OR(vt0.c0)))))) UNION SELECT DISTINCT v0.c0, vt0.c0 FROM v0 LEFT OUTER JOIN vt0 ON CASE CAST(v0.c0 AS BLOB)  WHEN NULL THEN ((((v0.c0)OR(vt0.c0)))OR(vt0.c0)) ELSE v0.c0 END WHERE ((NOT ((((((vt0.c0)*(vt0.c0)), x'6e45', LIKELIHOOD(DISTINCT v0.c0, 0.26103957018364676)))>=((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)), (+ (vt0.c0)), ((((v0.c0)OR(NULL)))OR(vt0.c0)))))))) UNION SELECT DISTINCT v0.c0, vt0.c0 FROM v0 LEFT OUTER JOIN vt0 ON CASE CAST(v0.c0 AS BLOB)  WHEN NULL THEN ((((v0.c0)OR(vt0.c0)))OR(vt0.c0)) ELSE v0.c0 END WHERE ((((((((vt0.c0)*(vt0.c0)), x'6e45', LIKELIHOOD(DISTINCT v0.c0, 0.26103957018364676)))>=((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)), (+ (vt0.c0)), ((((v0.c0)OR(NULL)))OR(vt0.c0)))))) ISNULL));
SELECT DISTINCT v0.c0, vt0.c0 FROM v0 LEFT OUTER JOIN vt0 ON CASE CAST(v0.c0 AS BLOB)  WHEN NULL THEN ((((v0.c0)OR(vt0.c0)))OR(vt0.c0)) ELSE v0.c0 END;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE ((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))<=(x''))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT ((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))<=(x''))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))<=(x''))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0;
SELECT ALL v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0 HAVING MAX(((v0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) UNION ALL SELECT ALL v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0 HAVING (NOT (MAX(((v0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) UNION ALL SELECT ALL v0.c0, vt0.c0 FROM vt0, v0 NOT INDEXED GROUP BY v0.c0, vt0.c0 HAVING ((MAX(((v0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) ISNULL);
SELECT ALL v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0;
SELECT ALL v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0 HAVING MAX(((v0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) UNION ALL SELECT ALL v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0 HAVING (NOT (MAX(((v0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) UNION ALL SELECT ALL v0.c0, vt0.c0 FROM vt0, v0 NOT INDEXED GROUP BY v0.c0, vt0.c0 HAVING ((MAX(((v0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) ISNULL);
SELECT ALL v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0;
SELECT SUM(CAST((((v0.c0))<=((NULL))) AS REAL)) FROM v0 ORDER BY (((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0)))) BETWEEN (((v0.c0) BETWEEN (v0.c0) AND (v0.c0))) AND (((((v0.c0)OR(v0.c0)))AND(v0.c0))));
SELECT ALL v0.c0 FROM v0;
SELECT ALL v0.c0 FROM v0 WHERE ((json_extract(0.8117985977325304, v0.c0, v0.c0, x'') IN ())) UNION ALL SELECT v0.c0 FROM v0 WHERE ((NOT ((json_extract(0.8117985977325304, v0.c0, v0.c0, x'') IN ())))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE ((((json_extract(0.8117985977325304, v0.c0, v0.c0, x'') IN ())) ISNULL));
SELECT ALL v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 NATURAL JOIN vt0;
SELECT DISTINCT v0.c0 FROM v0 NATURAL JOIN vt0 WHERE (((vt0.c0 COLLATE RTRIM)<<((NOT (v0.c0))))) UNION SELECT DISTINCT v0.c0 FROM v0 NATURAL JOIN vt0 WHERE ((NOT (((vt0.c0 COLLATE RTRIM)<<((NOT (v0.c0))))))) UNION SELECT DISTINCT v0.c0 FROM v0 NATURAL JOIN vt0 WHERE (((((vt0.c0 COLLATE RTRIM)<<((NOT (v0.c0))))) ISNULL));
SELECT DISTINCT v0.c0 FROM v0 NATURAL JOIN vt0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE ((((v0.c0))<=((LAST_INSERT_ROWID())))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT ((((v0.c0))<=((LAST_INSERT_ROWID())))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((((((v0.c0))<=((LAST_INSERT_ROWID())))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((vt0.c0)) NOT BETWEEN ((((COUNT(*)) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) AND ((COUNT(TOTAL(vt0.c0))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT ((((vt0.c0)) NOT BETWEEN ((((COUNT(*)) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) AND ((COUNT(TOTAL(vt0.c0))))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((((vt0.c0)) NOT BETWEEN ((((COUNT(*)) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) AND ((COUNT(TOTAL(vt0.c0)))))) ISNULL);
SELECT ALL v0.c0 FROM v0;
SELECT v0.c0 FROM v0 WHERE ((((v0.c0 IN ()))<>(((v0.c0) ISNULL)))) UNION ALL SELECT v0.c0 FROM v0 WHERE ((NOT ((((v0.c0 IN ()))<>(((v0.c0) ISNULL)))))) UNION ALL SELECT v0.c0 FROM v0 WHERE ((((((v0.c0 IN ()))!=(((v0.c0) ISNULL)))) ISNULL));
SELECT ALL v0.c0 FROM v0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (v0.c0) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (v0.c0))) UNION SELECT DISTINCT * FROM v0 WHERE (((v0.c0) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT v0.c0, vt0.c0 FROM vt0 INNER JOIN v0 ON (((v0.c0, v0.c0, v0.c0)) BETWEEN (((vt0.c0 IN (vt0.c0, v0.c0)), 0.439855273135194, ((v0.c0) NOT NULL))) AND ((0.4906801034405509, ((v0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), ((v0.c0)>>(vt0.c0))))) GROUP BY v0.c0, vt0.c0;
SELECT v0.c0, vt0.c0 FROM vt0 INNER JOIN v0 ON (((v0.c0, v0.c0, v0.c0)) BETWEEN (((vt0.c0 IN (vt0.c0, v0.c0)), 0.439855273135194, ((v0.c0) NOT NULL))) AND ((0.4906801034405509, ((v0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), ((v0.c0)>>(vt0.c0))))) WHERE (((((v0.c0)|(v0.c0)))>((v0.c0 IN ())))) GROUP BY v0.c0, vt0.c0 UNION SELECT ALL v0.c0, vt0.c0 FROM vt0 INNER JOIN v0 ON (((v0.c0, v0.c0, v0.c0)) BETWEEN (((vt0.c0 IN (vt0.c0, v0.c0)), 0.439855273135194, ((v0.c0) NOT NULL))) AND ((0.4906801034405509, ((v0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), ((v0.c0)>>(vt0.c0))))) WHERE ((NOT (((((v0.c0)|(v0.c0)))>((v0.c0 IN ())))))) GROUP BY v0.c0, vt0.c0 UNION SELECT ALL v0.c0, vt0.c0 FROM vt0 INNER JOIN v0 ON (((v0.c0, v0.c0, v0.c0)) BETWEEN (((vt0.c0 IN (vt0.c0, v0.c0)), 0.439855273135194, ((v0.c0) NOT NULL))) AND ((0.4906801034405509, ((v0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), ((v0.c0)>>(vt0.c0))))) WHERE (((((((v0.c0)|(v0.c0)))>((v0.c0 IN ())))) ISNULL)) GROUP BY v0.c0, vt0.c0;
SELECT v0.c0, vt0.c0 FROM vt0 INNER JOIN v0 ON (((v0.c0, v0.c0, v0.c0)) BETWEEN (((vt0.c0 IN (vt0.c0, v0.c0)), 0.439855273135194, ((v0.c0) NOT NULL))) AND ((0.4906801034405509, ((v0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), ((v0.c0)>>(vt0.c0))))) GROUP BY v0.c0, vt0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING 0X3f89e23e UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (0X3f89e23e)) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((0x3f89e23e) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING 0X3f89e23e UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (0X3f89e23e)) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((0x3f89e23e) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE (json_extract((NOT (vt0.c0)), CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (json_extract((NOT (vt0.c0)), CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE (((json_extract((NOT (vt0.c0)), CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT v0.c0 FROM v0, vt0;
SELECT DISTINCT v0.c0 FROM v0, vt0 WHERE (((JULIANDAY(v0.c0, vt0.c0, vt0.c0))*((vt0.c0 IN ())))) UNION SELECT DISTINCT v0.c0 FROM v0, vt0 WHERE ((NOT (((JULIANDAY(v0.c0, vt0.c0, vt0.c0))*((vt0.c0 IN ())))))) UNION SELECT DISTINCT v0.c0 FROM v0, vt0 WHERE (((((JULIANDAY(v0.c0, vt0.c0, vt0.c0))*((vt0.c0 IN ())))) ISNULL));
SELECT DISTINCT v0.c0 FROM v0, vt0;
SELECT ALL v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0;
SELECT ALL v0.c0, vt0.c0 FROM vt0, v0 WHERE (((((((vt0.c0)OR(v0.c0)))OR(vt0.c0)))-((v0.c0 IN ('-1221969756', vt0.c0))))) GROUP BY v0.c0, vt0.c0 UNION SELECT v0.c0, vt0.c0 FROM vt0, v0 WHERE ((NOT (((((((vt0.c0)OR(v0.c0)))OR(vt0.c0)))-((v0.c0 IN ('-1221969756', vt0.c0))))))) GROUP BY v0.c0, vt0.c0 UNION SELECT ALL v0.c0, vt0.c0 FROM vt0, v0 WHERE (((((((((vt0.c0)OR(v0.c0)))OR(vt0.c0)))-((v0.c0 IN ('-1221969756', vt0.c0))))) ISNULL)) GROUP BY v0.c0, vt0.c0;
SELECT ALL v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0;
SELECT ALL v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0;
SELECT v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0 HAVING MIN(COUNT(*)) UNION ALL SELECT ALL v0.c0, vt0.c0 FROM v0 NOT INDEXED, vt0 GROUP BY v0.c0, vt0.c0 HAVING (NOT (MIN(COUNT(*)))) UNION ALL SELECT ALL v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0 HAVING ((MIN(COUNT(*))) ISNULL);
SELECT MAX(((vt0.c0) IS FALSE)) FROM v0, vt0;
SELECT * FROM v0;
SELECT ALL * FROM v0 WHERE (v0.c0) UNION ALL SELECT ALL * FROM v0 WHERE ((NOT (v0.c0))) UNION ALL SELECT * FROM v0 WHERE (((v0.c0) ISNULL));
SELECT * FROM v0;
SELECT DISTINCT * FROM v0 FULL OUTER JOIN vt0 ON CAST((~ (vt0.c0)) AS BLOB);
SELECT DISTINCT * FROM v0 FULL OUTER JOIN vt0 ON CAST((~ (vt0.c0)) AS BLOB) WHERE ((((vt0.c0)) BETWEEN ((CAST(vt0.c0 AS TEXT))) AND ((v0.c0 COLLATE RTRIM)))) UNION SELECT DISTINCT * FROM v0 FULL OUTER JOIN vt0 ON CAST((~ (vt0.c0)) AS BLOB) WHERE ((NOT ((((vt0.c0)) BETWEEN ((CAST(vt0.c0 AS TEXT))) AND ((v0.c0 COLLATE RTRIM)))))) UNION SELECT DISTINCT * FROM v0 FULL OUTER JOIN vt0 ON CAST((~ (vt0.c0)) AS BLOB) WHERE ((((((vt0.c0)) BETWEEN ((CAST(vt0.c0 AS TEXT))) AND ((v0.c0 COLLATE RTRIM)))) ISNULL));
SELECT DISTINCT * FROM v0 FULL OUTER JOIN vt0 ON CAST((~ (vt0.c0)) AS BLOB);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (((((v0.c0)OR(((v0.c0)AND(v0.c0)))))AND(((v0.c0) NOTNULL)))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT (((((v0.c0)OR(((v0.c0)AND(v0.c0)))))AND(((v0.c0) NOTNULL)))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((((((v0.c0)OR(((v0.c0)AND(v0.c0)))))AND(((v0.c0) NOTNULL)))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT vt0.c0 FROM vt0, v0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0, v0 GROUP BY vt0.c0 HAVING x'' UNION ALL SELECT vt0.c0 FROM vt0, v0 GROUP BY vt0.c0 HAVING (NOT (x'')) UNION ALL SELECT ALL vt0.c0 FROM vt0, v0 GROUP BY vt0.c0 HAVING ((x'') ISNULL);
SELECT vt0.c0 FROM vt0, v0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0, v0 GROUP BY vt0.c0 HAVING x'' UNION ALL SELECT vt0.c0 FROM vt0, v0 GROUP BY vt0.c0 HAVING (NOT (x'')) UNION ALL SELECT ALL vt0.c0 FROM vt0, v0 GROUP BY vt0.c0 HAVING ((x'') ISNULL);
SELECT vt0.c0 FROM vt0, v0 GROUP BY vt0.c0;
SELECT * FROM v0;
SELECT * FROM v0 WHERE (CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END COLLATE NOCASE) UNION ALL SELECT ALL * FROM v0 WHERE ((NOT (CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END COLLATE NOCASE))) UNION ALL SELECT ALL * FROM v0 WHERE (((CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END COLLATE NOCASE) ISNULL));
SELECT * FROM v0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (vt0.c0) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (vt0.c0))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((vt0.c0) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 LEFT OUTER JOIN v0 ON ((((v0.c0)>(v0.c0)))<<((+ (v0.c0)))) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 LEFT OUTER JOIN v0 ON ((((v0.c0)>(v0.c0)))<<((+ (v0.c0)))) WHERE (((((v0.c0) BETWEEN (x'') AND (v0.c0)))*((+ (v0.c0))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 LEFT OUTER JOIN v0 ON ((((v0.c0)>(v0.c0)))<<((+ (v0.c0)))) WHERE ((NOT (((((v0.c0) BETWEEN (x'') AND (v0.c0)))*((+ (v0.c0))))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 LEFT OUTER JOIN v0 ON ((((v0.c0)>(v0.c0)))<<((+ (v0.c0)))) WHERE (((((((v0.c0) BETWEEN (x'') AND (v0.c0)))*((+ (v0.c0))))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 LEFT OUTER JOIN v0 ON ((((v0.c0)>(v0.c0)))<<((+ (v0.c0)))) GROUP BY vt0.c0;
SELECT vt0.c0, v0.c0 FROM v0 LEFT OUTER JOIN vt0 ON ((((((vt0.c0)=(v0.c0)))OR(((('m&w98(糫zc', v0.c0, vt0.c0))>((v0.c0, vt0.c0, v0.c0))))))AND(((vt0.c0)OR(vt0.c0)))) GROUP BY vt0.c0, v0.c0;
SELECT ALL vt0.c0, v0.c0 FROM v0 LEFT OUTER JOIN vt0 ON ((((((vt0.c0)=(v0.c0)))OR(((('m&w98(糫zc', v0.c0, vt0.c0))>((v0.c0, vt0.c0, v0.c0))))))AND(((vt0.c0)OR(vt0.c0)))) GROUP BY vt0.c0, v0.c0 HAVING GROUP_CONCAT(GROUP_CONCAT(TOTAL(MAX(v0.c0)))) UNION ALL SELECT vt0.c0, v0.c0 FROM v0 LEFT OUTER JOIN vt0 ON ((((((vt0.c0)==(v0.c0)))OR(((('m&w98(糫zc', v0.c0, vt0.c0))>((v0.c0, vt0.c0, v0.c0))))))AND(((vt0.c0)OR(vt0.c0)))) GROUP BY vt0.c0, v0.c0 HAVING (NOT (GROUP_CONCAT(GROUP_CONCAT(TOTAL(MAX(v0.c0)))))) UNION ALL SELECT ALL vt0.c0, v0.c0 FROM v0 LEFT OUTER JOIN vt0 ON ((((((vt0.c0)=(v0.c0)))OR(((('m&w98(糫zc', v0.c0, vt0.c0))>((v0.c0, vt0.c0, v0.c0))))))AND(((vt0.c0)OR(vt0.c0)))) GROUP BY vt0.c0, v0.c0 HAVING ((GROUP_CONCAT(GROUP_CONCAT(TOTAL(MAX(v0.c0))))) ISNULL);
SELECT * FROM v0 NATURAL JOIN vt0;
SELECT ALL * FROM v0 NATURAL JOIN vt0 WHERE (x'01d3') UNION ALL SELECT * FROM v0 NATURAL JOIN vt0 WHERE ((NOT (x'01d3'))) UNION ALL SELECT * FROM v0 NATURAL JOIN vt0 WHERE (((x'01d3') ISNULL));
SELECT * FROM v0 NATURAL JOIN vt0;
SELECT DISTINCT vt0.c0, v0.c0 FROM v0, vt0;
SELECT DISTINCT vt0.c0, v0.c0 FROM v0, vt0 WHERE (((x'') IS FALSE)) UNION SELECT DISTINCT vt0.c0, v0.c0 FROM v0, vt0 WHERE ((NOT (((x'') IS FALSE)))) UNION SELECT DISTINCT vt0.c0, v0.c0 FROM v0, vt0 WHERE (((((x'') IS FALSE)) ISNULL));
SELECT DISTINCT vt0.c0, v0.c0 FROM v0, vt0;
SELECT v0.c0, vt0.c0 FROM vt0 CROSS JOIN v0 ON ((((((x'')OR(v0.c0)))AND(vt0.c0)))IS(((0xffffffffb1dc2a4d)+(v0.c0)))) GROUP BY v0.c0, vt0.c0;
SELECT ALL v0.c0, vt0.c0 FROM vt0 CROSS JOIN v0 ON ((((((x'')OR(v0.c0)))AND(vt0.c0)))IS(((0xffffffffb1dc2a4d)+(v0.c0)))) WHERE (NULL) GROUP BY v0.c0, vt0.c0 UNION SELECT ALL v0.c0, vt0.c0 FROM vt0 CROSS JOIN v0 ON ((((((x'')OR(v0.c0)))AND(vt0.c0)))IS(((0xffffffffb1dc2a4d)+(v0.c0)))) WHERE ((NOT (NULL))) GROUP BY v0.c0, vt0.c0 UNION SELECT ALL v0.c0, vt0.c0 FROM vt0 CROSS JOIN v0 ON ((((((x'')OR(v0.c0)))AND(vt0.c0)))IS(((0Xffffffffb1dc2a4d)+(v0.c0)))) WHERE (((NULL) ISNULL)) GROUP BY v0.c0, vt0.c0;
SELECT v0.c0, vt0.c0 FROM vt0 CROSS JOIN v0 ON ((((((x'')OR(v0.c0)))AND(vt0.c0)))IS(((0xffffffffb1dc2a4d)+(v0.c0)))) GROUP BY v0.c0, vt0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING AVG(COUNT(*)) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (AVG(COUNT(*)))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((AVG(COUNT(*))) ISNULL);
SELECT ALL vt0.c0 FROM vt0, v0;
SELECT ALL vt0.c0 FROM vt0, v0 WHERE (((CAST(vt0.c0 AS NUMERIC)) BETWEEN (((((((((v0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(0.4805170555265027)))OR(v0.c0))) AND (((v0.c0)*(vt0.c0))))) UNION ALL SELECT vt0.c0 FROM vt0, v0 WHERE ((NOT (((CAST(vt0.c0 AS NUMERIC)) BETWEEN (((((((((v0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(0.4805170555265027)))OR(v0.c0))) AND (((v0.c0)*(vt0.c0))))))) UNION ALL SELECT ALL vt0.c0 FROM vt0, v0 WHERE (((((CAST(vt0.c0 AS NUMERIC)) BETWEEN (((((((((v0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(0.4805170555265027)))OR(v0.c0))) AND (((v0.c0)*(vt0.c0))))) ISNULL));
SELECT ALL vt0.c0 FROM vt0, v0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 END)*(((x'd722')|(vt0.c0))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (((CASE WHEN vt0.c0 THEN vt0.c0 END)*(((x'd722')|(vt0.c0))))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((((CASE WHEN vt0.c0 THEN vt0.c0 END)*(((x'd722')|(vt0.c0))))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (((((v0.c0 COLLATE NOCASE)AND(NULL)))OR((~ (v0.c0))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (((((v0.c0 COLLATE NOCASE)AND(NULL)))OR((~ (v0.c0))))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((((((v0.c0 COLLATE NOCASE)AND(NULL)))OR((~ (v0.c0))))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((((((((COUNT(*))AND(MIN(v0.c0))))OR(((v0.c0)IS(v0.c0)))))OR(((v0.c0) NOT BETWEEN (MAX(NULL)) AND (v0.c0)))))AND(GROUP_CONCAT(COUNT(v0.c0)))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (((((((((COUNT(*))AND(MIN(v0.c0))))OR(((v0.c0)IS(v0.c0)))))OR(((v0.c0) NOT BETWEEN (MAX(NULL)) AND (v0.c0)))))AND(GROUP_CONCAT(COUNT(v0.c0)))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((((((((((COUNT(*))AND(MIN(v0.c0))))OR(((v0.c0)IS(v0.c0)))))OR(((v0.c0) NOT BETWEEN (MAX(NULL)) AND (v0.c0)))))AND(GROUP_CONCAT(COUNT(v0.c0))))) ISNULL);
SELECT * FROM vt0;
SELECT * FROM vt0 WHERE (CASE ((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0))  WHEN (vt0.c0 IN ('', vt0.c0)) THEN '},>_.}' WHEN vt0.c0 COLLATE NOCASE THEN vt0.c0 WHEN '-1105640498' THEN vt0.c0 END) UNION ALL SELECT * FROM vt0 WHERE ((NOT (CASE ((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0))  WHEN (vt0.c0 IN ('', vt0.c0)) THEN '},>_.}' WHEN vt0.c0 COLLATE NOCASE THEN vt0.c0 WHEN '-1105640498' THEN vt0.c0 END))) UNION ALL SELECT ALL * FROM vt0 WHERE (((CASE ((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0))  WHEN (vt0.c0 IN ('', vt0.c0)) THEN '},>_.}' WHEN vt0.c0 COLLATE NOCASE THEN vt0.c0 WHEN '-1105640498' THEN vt0.c0 END) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0, v0;
SELECT DISTINCT vt0.c0 FROM vt0, v0 WHERE (CASE WHEN ((vt0.c0)OR(v0.c0)) THEN (vt0.c0 IN (vt0.c0, v0.c0, v0.c0)) END) UNION SELECT DISTINCT vt0.c0 FROM vt0, v0 WHERE ((NOT (CASE WHEN ((vt0.c0)OR(v0.c0)) THEN (vt0.c0 IN (vt0.c0, v0.c0, v0.c0)) END))) UNION SELECT DISTINCT vt0.c0 FROM vt0, v0 WHERE (((CASE WHEN ((vt0.c0)OR(v0.c0)) THEN (vt0.c0 IN (vt0.c0, v0.c0, v0.c0)) END) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0, v0;
SELECT v0.c0 FROM v0, vt0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0, vt0 WHERE (CASE WHEN ((vt0.c0) IS FALSE) THEN ((((vt0.c0)AND(vt0.c0)))OR(v0.c0)) WHEN CAST(v0.c0 AS TEXT) THEN (('j䑓9Cs')>(v0.c0)) WHEN CAST(v0.c0 AS TEXT) THEN load_extension(vt0.c0) ELSE (((v0.c0, v0.c0, vt0.c0))!=((v0.c0, vt0.c0, v0.c0))) END) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0, vt0 WHERE ((NOT (CASE WHEN ((vt0.c0) IS FALSE) THEN ((((vt0.c0)AND(vt0.c0)))OR(v0.c0)) WHEN CAST(v0.c0 AS TEXT) THEN (('j䑓9Cs')>(v0.c0)) WHEN CAST(v0.c0 AS TEXT) THEN load_extension(vt0.c0) ELSE (((v0.c0, v0.c0, vt0.c0))<>((v0.c0, vt0.c0, v0.c0))) END))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0, vt0 WHERE (((CASE WHEN ((vt0.c0) IS FALSE) THEN ((((vt0.c0)AND(vt0.c0)))OR(v0.c0)) WHEN CAST(v0.c0 AS TEXT) THEN (('j䑓9Cs')>(v0.c0)) WHEN CAST(v0.c0 AS TEXT) THEN load_extension(vt0.c0) ELSE (((v0.c0, v0.c0, vt0.c0))<>((v0.c0, vt0.c0, v0.c0))) END) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0, vt0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0, vt0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0, vt0 GROUP BY v0.c0 HAVING NULL UNION ALL SELECT ALL v0.c0 FROM v0, vt0 GROUP BY v0.c0 HAVING (NOT (NULL)) UNION ALL SELECT ALL v0.c0 FROM v0, vt0 GROUP BY v0.c0 HAVING ((NULL) ISNULL);
SELECT ALL v0.c0 FROM v0, vt0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0, vt0 GROUP BY v0.c0 HAVING NULL UNION ALL SELECT ALL v0.c0 FROM v0, vt0 GROUP BY v0.c0 HAVING (NOT (NULL)) UNION ALL SELECT ALL v0.c0 FROM v0, vt0 GROUP BY v0.c0 HAVING ((NULL) ISNULL);
SELECT ALL v0.c0 FROM v0, vt0 GROUP BY v0.c0;
SELECT ALL v0.c0, vt0.c0 FROM v0 RIGHT OUTER JOIN vt0 ON vt0.c0;
SELECT v0.c0, vt0.c0 FROM v0 RIGHT OUTER JOIN vt0 ON vt0.c0 WHERE ((((vt0.c0) IS TRUE) IN ())) UNION ALL SELECT v0.c0, vt0.c0 FROM v0 RIGHT OUTER JOIN vt0 ON vt0.c0 WHERE ((NOT ((((vt0.c0) IS TRUE) IN ())))) UNION ALL SELECT v0.c0, vt0.c0 FROM v0 RIGHT OUTER JOIN vt0 ON vt0.c0 WHERE ((((((vt0.c0) IS TRUE) IN ())) ISNULL));
SELECT ALL v0.c0, vt0.c0 FROM v0 RIGHT OUTER JOIN vt0 ON vt0.c0;
SELECT DISTINCT * FROM v0 RIGHT OUTER JOIN vt0 ON ((((((((v0.c0 COLLATE RTRIM)AND('0.3652781852031647')))AND(((vt0.c0)>=(vt0.c0)))))OR(0.8181254902114042)))AND((v0.c0 IN ())));
SELECT DISTINCT * FROM v0 RIGHT OUTER JOIN vt0 ON ((((((((v0.c0 COLLATE RTRIM)AND('0.3652781852031647')))AND(((vt0.c0)>=(vt0.c0)))))OR(0.8181254902114042)))AND((v0.c0 IN ()))) WHERE ((- (HEX(v0.c0)))) UNION SELECT DISTINCT * FROM v0 RIGHT OUTER JOIN vt0 ON ((((((((v0.c0 COLLATE RTRIM)AND('0.3652781852031647')))AND(((vt0.c0)>=(vt0.c0)))))OR(0.8181254902114042)))AND((v0.c0 IN ()))) WHERE ((NOT ((- (HEX(v0.c0)))))) UNION SELECT DISTINCT * FROM v0 RIGHT OUTER JOIN vt0 ON ((((((((v0.c0 COLLATE RTRIM)AND('0.3652781852031647')))AND(((vt0.c0)>=(vt0.c0)))))OR(0.8181254902114042)))AND((v0.c0 IN ()))) WHERE ((((- (HEX(v0.c0)))) ISNULL));
SELECT DISTINCT * FROM v0 RIGHT OUTER JOIN vt0 ON ((((((((v0.c0 COLLATE RTRIM)AND('0.3652781852031647')))AND(((vt0.c0)>=(vt0.c0)))))OR(0.8181254902114042)))AND((v0.c0 IN ())));
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (((((vt0.c0)IS NOT(vt0.c0))) BETWEEN ('1,\riH') AND (-1426300176))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (((((vt0.c0)IS NOT(vt0.c0))) BETWEEN ('1,\riH') AND (-1426300176))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((((((vt0.c0)IS NOT(vt0.c0))) BETWEEN ('1,\riH') AND (-1426300176))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM v0, vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM v0, vt0 GROUP BY vt0.c0 HAVING SUM(CASE vt0.c0  WHEN GROUP_CONCAT(vt0.c0) THEN v0.c0 ELSE COUNT(COUNT(*)) END) UNION ALL SELECT ALL vt0.c0 FROM v0, vt0 GROUP BY vt0.c0 HAVING (NOT (SUM(CASE vt0.c0  WHEN GROUP_CONCAT(vt0.c0) THEN v0.c0 ELSE COUNT(COUNT(*)) END))) UNION ALL SELECT vt0.c0 FROM v0, vt0 GROUP BY vt0.c0 HAVING ((SUM(CASE vt0.c0  WHEN GROUP_CONCAT(vt0.c0) THEN v0.c0 ELSE COUNT(COUNT(*)) END)) ISNULL);
SELECT SUM(((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))|((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) FROM vt0 ORDER BY ((CAST(vt0.c0 AS TEXT))GLOB(UPPER('N!琵'))), vt0.c0 DESC  NULLS FIRST, ((((vt0.c0)AND(((vt0.c0)+(vt0.c0)))))OR(NULL)) DESC  NULLS LAST;
SELECT * FROM v0, vt0;
SELECT * FROM v0, vt0 WHERE ((((vt0.c0)) BETWEEN (((NOT (v0.c0)))) AND (((vt0.c0 IN ()))))) UNION ALL SELECT ALL * FROM v0, vt0 WHERE ((NOT ((((vt0.c0)) BETWEEN (((NOT (v0.c0)))) AND (((vt0.c0 IN ()))))))) UNION ALL SELECT ALL * FROM v0, vt0 WHERE ((((((vt0.c0)) BETWEEN (((NOT (v0.c0)))) AND (((vt0.c0 IN ()))))) ISNULL));
SELECT * FROM v0, vt0;
SELECT DISTINCT v0.c0, vt0.c0 FROM v0, vt0;
SELECT DISTINCT v0.c0, vt0.c0 FROM v0, vt0 WHERE (COALESCE(DISTINCT (((vt0.c0))<((vt0.c0))), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), UPPER(DISTINCT v0.c0), '2083955465' COLLATE NOCASE)) UNION SELECT DISTINCT v0.c0, vt0.c0 FROM v0, vt0 WHERE ((NOT (COALESCE(DISTINCT (((vt0.c0))<((vt0.c0))), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), UPPER(DISTINCT v0.c0), '2083955465' COLLATE NOCASE)))) UNION SELECT DISTINCT v0.c0, vt0.c0 FROM v0, vt0 WHERE (((COALESCE(DISTINCT (((vt0.c0))<((vt0.c0))), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), UPPER(DISTINCT v0.c0), '2083955465' COLLATE NOCASE)) ISNULL));
SELECT DISTINCT v0.c0, vt0.c0 FROM v0, vt0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (CASE ((((v0.c0)OR(v0.c0)))AND(v0.c0))  WHEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) THEN ((0x20e8fe5b) NOT NULL) WHEN v0.c0 THEN ((v0.c0)|(v0.c0)) WHEN CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END THEN ((v0.c0)IS(v0.c0)) ELSE v0.c0 END) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT (CASE ((((v0.c0)OR(v0.c0)))AND(v0.c0))  WHEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) THEN ((0X20e8fe5b) NOT NULL) WHEN v0.c0 THEN ((v0.c0)|(v0.c0)) WHEN CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END THEN ((v0.c0)IS(v0.c0)) ELSE v0.c0 END))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE (((CASE ((((v0.c0)OR(v0.c0)))AND(v0.c0))  WHEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) THEN ((0X20e8fe5b) NOT NULL) WHEN v0.c0 THEN ((v0.c0)|(v0.c0)) WHEN CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END THEN ((v0.c0)IS(v0.c0)) ELSE v0.c0 END) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING MAX(vt0.c0 COLLATE RTRIM) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (MAX(vt0.c0 COLLATE RTRIM))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((MAX(vt0.c0 COLLATE RTRIM)) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING MAX(vt0.c0 COLLATE RTRIM) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (MAX(vt0.c0 COLLATE RTRIM))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((MAX(vt0.c0 COLLATE RTRIM)) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL * FROM vt0;
SELECT * FROM vt0 WHERE (LIKELY(DISTINCT (vt0.c0 IN ()))) UNION ALL SELECT * FROM vt0 WHERE ((NOT (LIKELY(DISTINCT (vt0.c0 IN ()))))) UNION ALL SELECT * FROM vt0 WHERE (((LIKELY(DISTINCT (vt0.c0 IN ()))) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((((vt0.c0)%(vt0.c0))) BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) AND (vt0.c0 COLLATE BINARY))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((((vt0.c0)%(vt0.c0))) BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) AND (vt0.c0 COLLATE BINARY))))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((((vt0.c0)%(vt0.c0))) BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) AND (vt0.c0 COLLATE BINARY))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (((((((NULL) BETWEEN (v0.c0) AND (v0.c0)))AND(((v0.c0)=(v0.c0)))))OR(json_array_length(v0.c0)))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT (((((((NULL) BETWEEN (v0.c0) AND (v0.c0)))AND(((v0.c0)==(v0.c0)))))OR(json_array_length(v0.c0)))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE (((((((((NULL) BETWEEN (v0.c0) AND (v0.c0)))AND(((v0.c0)==(v0.c0)))))OR(json_array_length(v0.c0)))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0, vt0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0, vt0 GROUP BY v0.c0 HAVING TOTAL(NULL) UNION ALL SELECT ALL v0.c0 FROM v0 NOT INDEXED, vt0 GROUP BY v0.c0 HAVING (NOT (TOTAL(NULL))) UNION ALL SELECT v0.c0 FROM v0, vt0 GROUP BY v0.c0 HAVING ((TOTAL(NULL)) ISNULL);
SELECT v0.c0 FROM v0, vt0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0, vt0 GROUP BY v0.c0 HAVING TOTAL(NULL) UNION ALL SELECT ALL v0.c0 FROM v0 NOT INDEXED, vt0 GROUP BY v0.c0 HAVING (NOT (TOTAL(NULL))) UNION ALL SELECT v0.c0 FROM v0, vt0 GROUP BY v0.c0 HAVING ((TOTAL(NULL)) ISNULL);
SELECT v0.c0 FROM v0, vt0 GROUP BY v0.c0;
SELECT ALL TOTAL(IFNULL(DISTINCT ((((v0.c0)AND(v0.c0)))AND(v0.c0)), ((v0.c0) BETWEEN (v0.c0) AND (vt0.c0)))) FROM vt0, v0 ORDER BY (((vt0.c0)) BETWEEN ((((vt0.c0) BETWEEN (v0.c0) AND (v0.c0)))) AND ((CASE vt0.c0  WHEN vt0.c0 THEN 0.7716793379607312 WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN vt0.c0 ELSE v0.c0 END))) ASC;
SELECT ALL v0.c0 FROM vt0, v0;
SELECT ALL v0.c0 FROM vt0, v0 WHERE ((((vt0.c0, v0.c0, vt0.c0)) BETWEEN (('1304829240', ((v0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)), CAST(v0.c0 AS REAL))) AND ((CAST(v0.c0 AS BLOB), ((vt0.c0)AND(vt0.c0)), vt0.c0 COLLATE RTRIM)))) UNION ALL SELECT v0.c0 FROM vt0, v0 WHERE ((NOT ((((vt0.c0, v0.c0, vt0.c0)) BETWEEN (('1304829240', ((v0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)), CAST(v0.c0 AS REAL))) AND ((CAST(v0.c0 AS BLOB), ((vt0.c0)AND(vt0.c0)), vt0.c0 COLLATE RTRIM)))))) UNION ALL SELECT ALL v0.c0 FROM vt0, v0 WHERE ((((((vt0.c0, v0.c0, vt0.c0)) BETWEEN (('1304829240', ((v0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)), CAST(v0.c0 AS REAL))) AND ((CAST(v0.c0 AS BLOB), ((vt0.c0)AND(vt0.c0)), vt0.c0 COLLATE RTRIM)))) ISNULL));
SELECT ALL v0.c0 FROM vt0, v0;
SELECT DISTINCT * FROM vt0, v0;
SELECT DISTINCT * FROM vt0, v0 WHERE (CAST(CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN vt0.c0 WHEN '0.6470001934067618' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END AS TEXT)) UNION SELECT DISTINCT * FROM vt0, v0 WHERE ((NOT (CAST(CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN vt0.c0 WHEN '0.6470001934067618' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END AS TEXT)))) UNION SELECT DISTINCT * FROM vt0, v0 WHERE (((CAST(CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN vt0.c0 WHEN '0.6470001934067618' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END AS TEXT)) ISNULL));
SELECT DISTINCT * FROM vt0, v0;
SELECT ALL vt0.c0, v0.c0 FROM vt0 CROSS JOIN v0 ON (v0.c0 IN ()) COLLATE BINARY GROUP BY vt0.c0, v0.c0;
SELECT vt0.c0, v0.c0 FROM vt0 CROSS JOIN v0 ON (v0.c0 IN ()) COLLATE BINARY WHERE (((json_type(v0.c0))<(((vt0.c0) ISNULL)))) GROUP BY vt0.c0, v0.c0 UNION SELECT vt0.c0, v0.c0 FROM vt0 CROSS JOIN v0 ON (v0.c0 IN ()) COLLATE BINARY WHERE ((NOT (((json_type(v0.c0))<(((vt0.c0) ISNULL)))))) GROUP BY vt0.c0, v0.c0 UNION SELECT vt0.c0, v0.c0 FROM vt0 CROSS JOIN v0 ON (v0.c0 IN ()) COLLATE BINARY WHERE (((((json_type(v0.c0))<(((vt0.c0) ISNULL)))) ISNULL)) GROUP BY vt0.c0, v0.c0;
SELECT ALL vt0.c0, v0.c0 FROM vt0 CROSS JOIN v0 ON (v0.c0 IN ()) COLLATE BINARY GROUP BY vt0.c0, v0.c0;
SELECT v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0;
SELECT ALL v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0 HAVING ((SUM(v0.c0)) BETWEEN (((0X59b9db8b) BETWEEN (GROUP_CONCAT(COUNT(*))) AND (vt0.c0))) AND (((v0.c0)*(MIN(GROUP_CONCAT(x'')))))) UNION ALL SELECT ALL v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0 HAVING (NOT (((SUM(v0.c0)) BETWEEN (((0X59b9db8b) BETWEEN (GROUP_CONCAT(COUNT(*))) AND (vt0.c0))) AND (((v0.c0)*(MIN(GROUP_CONCAT(x'')))))))) UNION ALL SELECT v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0 HAVING ((((SUM(v0.c0)) BETWEEN (((0x59b9db8b) BETWEEN (GROUP_CONCAT(COUNT(*))) AND (vt0.c0))) AND (((v0.c0)*(MIN(GROUP_CONCAT(x''))))))) ISNULL);
SELECT v0.c0, vt0.c0 FROM v0 FULL OUTER JOIN vt0 ON (((CAST(v0.c0 AS BLOB)))<>(((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((v0.c0))))));
SELECT ALL v0.c0, vt0.c0 FROM v0 FULL OUTER JOIN vt0 ON (((CAST(v0.c0 AS BLOB)))<>(((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((v0.c0)))))) WHERE ((~ (vt0.c0))) UNION ALL SELECT ALL v0.c0, vt0.c0 FROM v0 FULL OUTER JOIN vt0 ON (((CAST(v0.c0 AS BLOB)))!=(((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((v0.c0)))))) WHERE ((NOT ((~ (vt0.c0))))) UNION ALL SELECT v0.c0, vt0.c0 FROM v0 FULL OUTER JOIN vt0 ON (((CAST(v0.c0 AS BLOB)))!=(((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((v0.c0)))))) WHERE ((((~ (vt0.c0))) ISNULL));
SELECT v0.c0, vt0.c0 FROM v0 FULL OUTER JOIN vt0 ON (((CAST(v0.c0 AS BLOB)))<>(((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((v0.c0))))));
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE ((+ (((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))AND(v0.c0))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT ((+ (((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))AND(v0.c0))))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((((+ (((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))AND(v0.c0))))) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (vt0.c0) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (vt0.c0))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((vt0.c0) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING SUM((v0.c0 IN ())) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (SUM((v0.c0 IN ())))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((SUM((v0.c0 IN ()))) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING SUM((v0.c0 IN ())) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (SUM((v0.c0 IN ())))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((SUM((v0.c0 IN ()))) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT * FROM v0 LEFT OUTER JOIN vt0 ON (+ (((((((((((((v0.c0)OR(vt0.c0)))OR(v0.c0)))AND('-975328174')))OR(v0.c0)))OR(v0.c0)))OR(vt0.c0))));
SELECT ALL * FROM v0 LEFT OUTER JOIN vt0 ON (+ (((((((((((((v0.c0)OR(vt0.c0)))OR(v0.c0)))AND('-975328174')))OR(v0.c0)))OR(v0.c0)))OR(vt0.c0)))) WHERE ((+ (((vt0.c0)|(v0.c0))))) UNION ALL SELECT ALL * FROM v0 LEFT OUTER JOIN vt0 ON (+ (((((((((((((v0.c0)OR(vt0.c0)))OR(v0.c0)))AND('-975328174')))OR(v0.c0)))OR(v0.c0)))OR(vt0.c0)))) WHERE ((NOT ((+ (((vt0.c0)|(v0.c0))))))) UNION ALL SELECT ALL * FROM v0 LEFT OUTER JOIN vt0 ON (+ (((((((((((((v0.c0)OR(vt0.c0)))OR(v0.c0)))AND('-975328174')))OR(v0.c0)))OR(v0.c0)))OR(vt0.c0)))) WHERE ((((+ (((vt0.c0)|(v0.c0))))) ISNULL));
SELECT * FROM v0 LEFT OUTER JOIN vt0 ON (+ (((((((((((((v0.c0)OR(vt0.c0)))OR(v0.c0)))AND('-975328174')))OR(v0.c0)))OR(v0.c0)))OR(vt0.c0))));
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (((((((((((v0.c0)<(v0.c0)))AND(((v0.c0)IS NOT(v0.c0)))))OR(CASE WHEN v0.c0 THEN v0.c0 WHEN NULL THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)))OR(((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))AND(v0.c0)))AND(v0.c0)))))AND(load_extension(v0.c0, v0.c0)))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (((((((((((v0.c0)<(v0.c0)))AND(((v0.c0)IS NOT(v0.c0)))))OR(CASE WHEN v0.c0 THEN v0.c0 WHEN NULL THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)))OR(((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))AND(v0.c0)))AND(v0.c0)))))AND(load_extension(v0.c0, v0.c0)))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((((((((((((v0.c0)<(v0.c0)))AND(((v0.c0)IS NOT(v0.c0)))))OR(CASE WHEN v0.c0 THEN v0.c0 WHEN NULL THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)))OR(((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))AND(v0.c0)))AND(v0.c0)))))AND(load_extension(v0.c0, v0.c0)))) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT v0.c0 FROM vt0 CROSS JOIN v0 ON ((((v0.c0)OR('-977747991')))AND(v0.c0)) COLLATE NOCASE GROUP BY v0.c0;
SELECT v0.c0 FROM vt0 CROSS JOIN v0 ON ((((v0.c0)OR('-977747991')))AND(v0.c0)) COLLATE NOCASE WHERE (CASE ((((v0.c0)AND(vt0.c0)))AND(vt0.c0))  WHEN CAST(v0.c0 AS REAL) THEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE v0.c0 END ELSE ((v0.c0)IS NOT(v0.c0)) END) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM vt0 CROSS JOIN v0 ON ((((v0.c0)OR('-977747991')))AND(v0.c0)) COLLATE NOCASE WHERE ((NOT (CASE ((((v0.c0)AND(vt0.c0)))AND(vt0.c0))  WHEN CAST(v0.c0 AS REAL) THEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE v0.c0 END ELSE ((v0.c0)IS NOT(v0.c0)) END))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM vt0 CROSS JOIN v0 ON ((((v0.c0)OR('-977747991')))AND(v0.c0)) COLLATE NOCASE WHERE (((CASE ((((v0.c0)AND(vt0.c0)))AND(vt0.c0))  WHEN CAST(v0.c0 AS REAL) THEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE v0.c0 END ELSE ((v0.c0)IS NOT(v0.c0)) END) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM vt0 CROSS JOIN v0 ON ((((v0.c0)OR('-977747991')))AND(v0.c0)) COLLATE NOCASE GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((AVG(MIN(v0.c0)))>=(TOTAL(COUNT(*)))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (((AVG(MIN(v0.c0)))>=(TOTAL(COUNT(*)))))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((((AVG(MIN(v0.c0)))>=(TOTAL(COUNT(*))))) ISNULL);
SELECT ALL * FROM vt0;
SELECT * FROM vt0 WHERE ((((NOT (vt0.c0)))>=(((vt0.c0)*(vt0.c0))))) UNION ALL SELECT * FROM vt0 WHERE ((NOT ((((NOT (vt0.c0)))>=(((vt0.c0)*(vt0.c0))))))) UNION ALL SELECT ALL * FROM vt0 WHERE ((((((NOT (vt0.c0)))>=(((vt0.c0)*(vt0.c0))))) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((vt0.c0)AND(((vt0.c0)*(vt0.c0))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (((vt0.c0)AND(((vt0.c0)*(vt0.c0))))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((((vt0.c0)AND(((vt0.c0)*(vt0.c0))))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (((vt0.c0) NOT BETWEEN (x'') AND (vt0.c0)) COLLATE BINARY) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (((vt0.c0) NOT BETWEEN (x'') AND (vt0.c0)) COLLATE BINARY))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (x'') AND (vt0.c0)) COLLATE BINARY) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0, v0.c0 FROM v0 LEFT OUTER JOIN vt0 ON (+ (CASE WHEN vt0.c0 THEN v0.c0 END)) GROUP BY vt0.c0, v0.c0;
SELECT vt0.c0, v0.c0 FROM v0 LEFT OUTER JOIN vt0 ON (+ (CASE WHEN vt0.c0 THEN v0.c0 END)) GROUP BY vt0.c0, v0.c0 HAVING AVG(GROUP_CONCAT(TOTAL(MIN(COUNT(TOTAL(TOTAL(vt0.c0))))))) UNION ALL SELECT vt0.c0, v0.c0 FROM v0 LEFT OUTER JOIN vt0 ON (+ (CASE WHEN vt0.c0 THEN v0.c0 END)) GROUP BY vt0.c0, v0.c0 HAVING (NOT (AVG(GROUP_CONCAT(TOTAL(MIN(COUNT(TOTAL(TOTAL(vt0.c0))))))))) UNION ALL SELECT ALL vt0.c0, v0.c0 FROM v0 LEFT OUTER JOIN vt0 ON (+ (CASE WHEN vt0.c0 THEN v0.c0 END)) GROUP BY vt0.c0, v0.c0 HAVING ((AVG(GROUP_CONCAT(TOTAL(MIN(COUNT(TOTAL(TOTAL(vt0.c0)))))))) ISNULL);
SELECT * FROM vt0 FULL OUTER JOIN v0 ON ((CAST(vt0.c0 AS INTEGER))&(vt0.c0 COLLATE RTRIM));
SELECT * FROM vt0 FULL OUTER JOIN v0 ON ((CAST(vt0.c0 AS INTEGER))&(vt0.c0 COLLATE RTRIM)) WHERE (vt0.c0) UNION ALL SELECT * FROM vt0 FULL OUTER JOIN v0 ON ((CAST(vt0.c0 AS INTEGER))&(vt0.c0 COLLATE RTRIM)) WHERE ((NOT (vt0.c0))) UNION ALL SELECT ALL * FROM vt0 FULL OUTER JOIN v0 ON ((CAST(vt0.c0 AS INTEGER))&(vt0.c0 COLLATE RTRIM)) WHERE (((vt0.c0) ISNULL));
SELECT * FROM vt0 FULL OUTER JOIN v0 ON ((CAST(vt0.c0 AS INTEGER))&(vt0.c0 COLLATE RTRIM));
SELECT DISTINCT * FROM v0 NATURAL JOIN vt0;
SELECT DISTINCT * FROM v0 NATURAL JOIN vt0 WHERE ((((((v0.c0)) BETWEEN ((vt0.c0)) AND (('75800833')))) IS FALSE)) UNION SELECT DISTINCT * FROM v0 NATURAL JOIN vt0 WHERE ((NOT ((((((v0.c0)) BETWEEN ((vt0.c0)) AND (('75800833')))) IS FALSE)))) UNION SELECT DISTINCT * FROM v0 NATURAL JOIN vt0 WHERE ((((((((v0.c0)) BETWEEN ((vt0.c0)) AND (('75800833')))) IS FALSE)) ISNULL));
SELECT DISTINCT * FROM v0 NATURAL JOIN vt0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (v0.c0) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (v0.c0))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE (((v0.c0) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0;
SELECT ALL v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0 HAVING COUNT(*) UNION ALL SELECT ALL v0.c0, vt0.c0 FROM v0, vt0 NOT INDEXED GROUP BY v0.c0, vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0;
SELECT ALL v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0 HAVING COUNT(*) UNION ALL SELECT ALL v0.c0, vt0.c0 FROM v0, vt0 NOT INDEXED GROUP BY v0.c0, vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0;
SELECT * FROM v0, vt0;
SELECT ALL * FROM v0, vt0 WHERE (((((((((CASE v0.c0  WHEN v0.c0 THEN vt0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE vt0.c0 END)AND((((vt0.c0, vt0.c0, v0.c0))<((vt0.c0, v0.c0, vt0.c0))))))AND(((((((((vt0.c0)AND(vt0.c0)))AND(v0.c0)))AND(vt0.c0)))AND(vt0.c0)))))OR(CASE WHEN v0.c0 THEN vt0.c0 WHEN vt0.c0 THEN v0.c0 WHEN vt0.c0 THEN v0.c0 END)))AND(((((((((v0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(v0.c0))))) UNION ALL SELECT * FROM v0, vt0 WHERE ((NOT (((((((((CASE v0.c0  WHEN v0.c0 THEN vt0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE vt0.c0 END)AND((((vt0.c0, vt0.c0, v0.c0))<((vt0.c0, v0.c0, vt0.c0))))))AND(((((((((vt0.c0)AND(vt0.c0)))AND(v0.c0)))AND(vt0.c0)))AND(vt0.c0)))))OR(CASE WHEN v0.c0 THEN vt0.c0 WHEN vt0.c0 THEN v0.c0 WHEN vt0.c0 THEN v0.c0 END)))AND(((((((((v0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(v0.c0))))))) UNION ALL SELECT ALL * FROM v0, vt0 WHERE (((((((((((CASE v0.c0  WHEN v0.c0 THEN vt0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE vt0.c0 END)AND((((vt0.c0, vt0.c0, v0.c0))<((vt0.c0, v0.c0, vt0.c0))))))AND(((((((((vt0.c0)AND(vt0.c0)))AND(v0.c0)))AND(vt0.c0)))AND(vt0.c0)))))OR(CASE WHEN v0.c0 THEN vt0.c0 WHEN vt0.c0 THEN v0.c0 WHEN vt0.c0 THEN v0.c0 END)))AND(((((((((v0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(v0.c0))))) ISNULL));
SELECT * FROM v0, vt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))&(((vt0.c0) IS FALSE)))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))&(((vt0.c0) IS FALSE)))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))&(((vt0.c0) IS FALSE)))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (x'66d0' COLLATE BINARY) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (x'66d0' COLLATE BINARY))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((x'66d0' COLLATE BINARY) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL vt0.c0 FROM vt0, v0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, v0 GROUP BY vt0.c0 HAVING MAX(((v0.c0)>>(MIN(SUM(SUM(GROUP_CONCAT(COUNT(*)))))))) UNION ALL SELECT vt0.c0 FROM vt0, v0 GROUP BY vt0.c0 HAVING (NOT (MAX(((v0.c0)>>(MIN(SUM(SUM(GROUP_CONCAT(COUNT(*)))))))))) UNION ALL SELECT vt0.c0 FROM vt0, v0 GROUP BY vt0.c0 HAVING ((MAX(((v0.c0)>>(MIN(SUM(SUM(GROUP_CONCAT(COUNT(*))))))))) ISNULL);
SELECT ALL vt0.c0 FROM vt0, v0;
SELECT vt0.c0 FROM vt0, v0 WHERE (CASE WHEN CAST(-1533653655 AS TEXT) THEN ((v0.c0) NOTNULL) ELSE CAST(v0.c0 AS REAL) END) UNION ALL SELECT vt0.c0 FROM vt0, v0 WHERE ((NOT (CASE WHEN CAST(-1533653655 AS TEXT) THEN ((v0.c0) NOTNULL) ELSE CAST(v0.c0 AS REAL) END))) UNION ALL SELECT ALL vt0.c0 FROM vt0, v0 WHERE (((CASE WHEN CAST(-1533653655 AS TEXT) THEN ((v0.c0) NOTNULL) ELSE CAST(v0.c0 AS REAL) END) ISNULL));
SELECT ALL vt0.c0 FROM vt0, v0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (((((v0.c0)<<(v0.c0))) IS FALSE)) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (((((v0.c0)<<(v0.c0))) IS FALSE)))) UNION SELECT DISTINCT * FROM v0 WHERE (((((((v0.c0)<<(v0.c0))) IS FALSE)) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT v0.c0 FROM vt0, v0 GROUP BY v0.c0;
SELECT v0.c0 FROM vt0, v0 WHERE (((((vt0.c0)IS NOT(v0.c0)))>((('')/(vt0.c0))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM vt0, v0 WHERE ((NOT (((((vt0.c0)IS NOT(v0.c0)))>((('')/(vt0.c0))))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM vt0, v0 WHERE (((((((vt0.c0)IS NOT(v0.c0)))>((('')/(vt0.c0))))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM vt0, v0 GROUP BY v0.c0;
SELECT v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0;
SELECT v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0 HAVING MAX(SUM(v0.c0)) UNION ALL SELECT v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0 HAVING (NOT (MAX(SUM(v0.c0)))) UNION ALL SELECT ALL v0.c0, vt0.c0 FROM v0, vt0 NOT INDEXED GROUP BY v0.c0, vt0.c0 HAVING ((MAX(SUM(v0.c0))) ISNULL);
SELECT * FROM v0;
SELECT * FROM v0 WHERE (((((- (v0.c0))))<=((((((v0.c0)OR(v0.c0)))OR(v0.c0)))))) UNION ALL SELECT ALL * FROM v0 WHERE ((NOT (((((- (v0.c0))))<=((((((v0.c0)OR(v0.c0)))OR(v0.c0)))))))) UNION ALL SELECT * FROM v0 WHERE (((((((- (v0.c0))))<=((((((v0.c0)OR(v0.c0)))OR(v0.c0)))))) ISNULL));
SELECT * FROM v0;
SELECT DISTINCT * FROM v0 CROSS JOIN vt0 ON CASE WHEN vt0.c0 COLLATE BINARY THEN NULL END;
SELECT DISTINCT * FROM v0 CROSS JOIN vt0 ON CASE WHEN vt0.c0 COLLATE BINARY THEN NULL END WHERE (NULL) UNION SELECT DISTINCT * FROM v0 CROSS JOIN vt0 ON CASE WHEN vt0.c0 COLLATE BINARY THEN NULL END WHERE ((NOT (NULL))) UNION SELECT DISTINCT * FROM v0 CROSS JOIN vt0 ON CASE WHEN vt0.c0 COLLATE BINARY THEN NULL END WHERE (((NULL) ISNULL));
SELECT DISTINCT * FROM v0 CROSS JOIN vt0 ON CASE WHEN vt0.c0 COLLATE BINARY THEN NULL END;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE ((NOT (CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT ((NOT (CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((((NOT (CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0;
SELECT ALL v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0 HAVING SUM(((v0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0))) UNION ALL SELECT v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0 HAVING (NOT (SUM(((v0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0))))) UNION ALL SELECT v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0 HAVING ((SUM(((v0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0)))) ISNULL);
SELECT ALL v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0;
SELECT ALL v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0 HAVING SUM(((v0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0))) UNION ALL SELECT v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0 HAVING (NOT (SUM(((v0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0))))) UNION ALL SELECT v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0 HAVING ((SUM(((v0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0)))) ISNULL);
SELECT ALL v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0;
SELECT vt0.c0, v0.c0 FROM v0, vt0;
SELECT vt0.c0, v0.c0 FROM v0, vt0 WHERE (((v0.c0)>=(((((((((((((vt0.c0)AND(v0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(v0.c0))))) UNION ALL SELECT vt0.c0, v0.c0 FROM v0, vt0 WHERE ((NOT (((v0.c0)>=(((((((((((((vt0.c0)AND(v0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(v0.c0))))))) UNION ALL SELECT ALL vt0.c0, v0.c0 FROM v0, vt0 WHERE (((((v0.c0)>=(((((((((((((vt0.c0)AND(v0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(v0.c0))))) ISNULL));
SELECT vt0.c0, v0.c0 FROM v0, vt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((- (LIKELIHOOD(DISTINCT vt0.c0, 0.9852674894661339)))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT ((- (LIKELIHOOD(DISTINCT vt0.c0, 0.9852674894661339)))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((((- (LIKELIHOOD(DISTINCT vt0.c0, 0.9852674894661339)))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (((vt0.c0 COLLATE BINARY)<=(CAST(vt0.c0 AS NUMERIC)))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (((vt0.c0 COLLATE BINARY)<=(CAST(vt0.c0 AS NUMERIC)))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((((vt0.c0 COLLATE BINARY)<=(CAST(vt0.c0 AS NUMERIC)))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0, v0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0, v0 GROUP BY vt0.c0 HAVING MAX(((SUM(TOTAL(vt0.c0))) NOT NULL)) UNION ALL SELECT ALL vt0.c0 FROM vt0, v0 GROUP BY vt0.c0 HAVING (NOT (MAX(((SUM(TOTAL(vt0.c0))) NOT NULL)))) UNION ALL SELECT ALL vt0.c0 FROM vt0, v0 GROUP BY vt0.c0 HAVING ((MAX(((SUM(TOTAL(vt0.c0))) NOT NULL))) ISNULL);
SELECT ALL v0.c0 FROM vt0, v0;
SELECT ALL v0.c0 FROM vt0, v0 WHERE ((~ (vt0.c0 COLLATE BINARY))) UNION ALL SELECT ALL v0.c0 FROM vt0, v0 WHERE ((NOT ((~ (vt0.c0 COLLATE BINARY))))) UNION ALL SELECT v0.c0 FROM vt0, v0 WHERE ((((~ (vt0.c0 COLLATE BINARY))) ISNULL));
SELECT ALL v0.c0 FROM vt0, v0;
SELECT DISTINCT vt0.c0 FROM v0, vt0;
SELECT DISTINCT vt0.c0 FROM v0, vt0 WHERE (vt0.c0) UNION SELECT DISTINCT vt0.c0 FROM v0, vt0 WHERE ((NOT (vt0.c0))) UNION SELECT DISTINCT vt0.c0 FROM v0, vt0 WHERE (((vt0.c0) ISNULL));
SELECT DISTINCT vt0.c0 FROM v0, vt0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (v0.c0) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT (v0.c0))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((v0.c0) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT vt0.c0 FROM v0, vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM v0, vt0 GROUP BY vt0.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt0.c0 FROM v0, vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt0.c0 FROM v0, vt0 GROUP BY vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt0.c0 FROM v0, vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM v0, vt0 GROUP BY vt0.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt0.c0 FROM v0, vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt0.c0 FROM v0, vt0 GROUP BY vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt0.c0 FROM v0, vt0 GROUP BY vt0.c0;
SELECT ALL v0.c0, vt0.c0 FROM vt0, v0;
SELECT ALL v0.c0, vt0.c0 FROM vt0, v0 WHERE (TYPEOF(v0.c0)) UNION ALL SELECT ALL v0.c0, vt0.c0 FROM vt0, v0 WHERE ((NOT (TYPEOF(v0.c0)))) UNION ALL SELECT ALL v0.c0, vt0.c0 FROM vt0, v0 WHERE (((TYPEOF(v0.c0)) ISNULL));
SELECT ALL v0.c0, vt0.c0 FROM vt0, v0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (NULL) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (NULL))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((NULL) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (SQLITE_VERSION()) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (SQLITE_VERSION()))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE (((SQLITE_VERSION()) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING TRIM(GROUP_CONCAT(COUNT(TOTAL(AVG(GROUP_CONCAT(AVG(COUNT(TOTAL(v0.c0))))))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (TRIM(GROUP_CONCAT(COUNT(TOTAL(AVG(GROUP_CONCAT(AVG(COUNT(TOTAL(v0.c0))))))))))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((TRIM(GROUP_CONCAT(COUNT(TOTAL(AVG(GROUP_CONCAT(AVG(COUNT(TOTAL(v0.c0)))))))))) ISNULL);
SELECT ALL v0.c0 FROM v0;
SELECT ALL v0.c0 FROM v0 WHERE (((v0.c0) NOT BETWEEN (CAST(v0.c0 AS BLOB)) AND ((NOT (v0.c0))))) UNION ALL SELECT v0.c0 FROM v0 WHERE ((NOT (((v0.c0) NOT BETWEEN (CAST(v0.c0 AS BLOB)) AND ((NOT (v0.c0))))))) UNION ALL SELECT v0.c0 FROM v0 WHERE (((((v0.c0) NOT BETWEEN (CAST(v0.c0 AS BLOB)) AND ((NOT (v0.c0))))) ISNULL));
SELECT ALL v0.c0 FROM v0;
SELECT DISTINCT v0.c0, vt0.c0 FROM vt0, v0;
SELECT DISTINCT v0.c0, vt0.c0 FROM vt0, v0 WHERE ((((((vt0.c0)||(vt0.c0))))>=(((((v0.c0, v0.c0, vt0.c0))>((v0.c0, vt0.c0, vt0.c0))))))) UNION SELECT DISTINCT v0.c0, vt0.c0 FROM vt0, v0 WHERE ((NOT ((((((vt0.c0)||(vt0.c0))))>=(((((v0.c0, v0.c0, vt0.c0))>((v0.c0, vt0.c0, vt0.c0))))))))) UNION SELECT DISTINCT v0.c0, vt0.c0 FROM vt0, v0 WHERE ((((((((vt0.c0)||(vt0.c0))))>=(((((v0.c0, v0.c0, vt0.c0))>((v0.c0, vt0.c0, vt0.c0))))))) ISNULL));
SELECT DISTINCT v0.c0, vt0.c0 FROM vt0, v0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (((CAST(v0.c0 AS REAL)) NOT BETWEEN (v0.c0 COLLATE BINARY) AND ((- (v0.c0))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT (((CAST(v0.c0 AS REAL)) NOT BETWEEN (v0.c0 COLLATE BINARY) AND ((- (v0.c0))))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((((CAST(v0.c0 AS REAL)) NOT BETWEEN (v0.c0 COLLATE BINARY) AND ((- (v0.c0))))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL vt0.c0 FROM vt0, v0 NOT INDEXED GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0, v0 GROUP BY vt0.c0 HAVING ((COUNT(v0.c0)) ISNULL) UNION ALL SELECT vt0.c0 FROM vt0, v0 GROUP BY vt0.c0 HAVING (NOT (((COUNT(v0.c0)) ISNULL))) UNION ALL SELECT ALL vt0.c0 FROM vt0, v0 GROUP BY vt0.c0 HAVING ((((COUNT(v0.c0)) ISNULL)) ISNULL);
SELECT ALL vt0.c0 FROM vt0, v0 NOT INDEXED GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0, v0 GROUP BY vt0.c0 HAVING ((COUNT(v0.c0)) ISNULL) UNION ALL SELECT vt0.c0 FROM vt0, v0 GROUP BY vt0.c0 HAVING (NOT (((COUNT(v0.c0)) ISNULL))) UNION ALL SELECT ALL vt0.c0 FROM vt0, v0 GROUP BY vt0.c0 HAVING ((((COUNT(v0.c0)) ISNULL)) ISNULL);
SELECT ALL vt0.c0 FROM vt0, v0 NOT INDEXED GROUP BY vt0.c0;
SELECT v0.c0, vt0.c0 FROM vt0 NATURAL JOIN v0;
SELECT v0.c0, vt0.c0 FROM vt0 NATURAL JOIN v0 WHERE (0.5550349961685485) UNION ALL SELECT v0.c0, vt0.c0 FROM vt0 NATURAL JOIN v0 WHERE ((NOT (0.5550349961685485))) UNION ALL SELECT v0.c0, vt0.c0 FROM vt0 NATURAL JOIN v0 WHERE (((0.5550349961685485) ISNULL));
SELECT v0.c0, vt0.c0 FROM vt0 NATURAL JOIN v0;
SELECT DISTINCT v0.c0 FROM v0 RIGHT OUTER JOIN vt0 ON ((CAST(vt0.c0 AS REAL))IS(CAST(v0.c0 AS REAL)));
SELECT DISTINCT v0.c0 FROM v0 RIGHT OUTER JOIN vt0 ON ((CAST(vt0.c0 AS REAL))IS(CAST(v0.c0 AS REAL))) WHERE ((((vt0.c0, vt0.c0, -505772620)) BETWEEN ((vt0.c0, v0.c0, vt0.c0)) AND ((v0.c0, v0.c0, v0.c0))) COLLATE NOCASE) UNION SELECT DISTINCT v0.c0 FROM v0 RIGHT OUTER JOIN vt0 ON ((CAST(vt0.c0 AS REAL))IS(CAST(v0.c0 AS REAL))) WHERE ((NOT ((((vt0.c0, vt0.c0, -505772620)) BETWEEN ((vt0.c0, v0.c0, vt0.c0)) AND ((v0.c0, v0.c0, v0.c0))) COLLATE NOCASE))) UNION SELECT DISTINCT v0.c0 FROM v0 RIGHT OUTER JOIN vt0 ON ((CAST(vt0.c0 AS REAL))IS(CAST(v0.c0 AS REAL))) WHERE ((((((vt0.c0, vt0.c0, -505772620)) BETWEEN ((vt0.c0, v0.c0, vt0.c0)) AND ((v0.c0, v0.c0, v0.c0))) COLLATE NOCASE) ISNULL));
SELECT DISTINCT v0.c0 FROM v0 RIGHT OUTER JOIN vt0 ON ((CAST(vt0.c0 AS REAL))IS(CAST(v0.c0 AS REAL)));
SELECT ALL v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0;
SELECT v0.c0, vt0.c0 FROM vt0, v0 WHERE (PRINTF(v0.c0 COLLATE BINARY, SQLITE_VERSION(), ((vt0.c0)<>(vt0.c0)))) GROUP BY v0.c0, vt0.c0 UNION SELECT v0.c0, vt0.c0 FROM vt0, v0 WHERE ((NOT (PRINTF(v0.c0 COLLATE BINARY, SQLITE_VERSION(), ((vt0.c0)<>(vt0.c0)))))) GROUP BY v0.c0, vt0.c0 UNION SELECT v0.c0, vt0.c0 FROM vt0, v0 WHERE (((PRINTF(v0.c0 COLLATE BINARY, SQLITE_VERSION(), ((vt0.c0)<>(vt0.c0)))) ISNULL)) GROUP BY v0.c0, vt0.c0;
SELECT ALL v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING CAST(COUNT(v0.c0) AS TEXT) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (CAST(COUNT(v0.c0) AS TEXT))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((CAST(COUNT(v0.c0) AS TEXT)) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING CAST(COUNT(v0.c0) AS TEXT) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (CAST(COUNT(v0.c0) AS TEXT))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((CAST(COUNT(v0.c0) AS TEXT)) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL * FROM v0;
SELECT ALL * FROM v0 WHERE (((CAST(v0.c0 AS REAL)) NOT BETWEEN (CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END) AND (((((v0.c0)AND(v0.c0)))OR(v0.c0))))) UNION ALL SELECT ALL * FROM v0 WHERE ((NOT (((CAST(v0.c0 AS REAL)) NOT BETWEEN (CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END) AND (((((v0.c0)AND(v0.c0)))OR(v0.c0))))))) UNION ALL SELECT * FROM v0 WHERE (((((CAST(v0.c0 AS REAL)) NOT BETWEEN (CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END) AND (((((v0.c0)AND(v0.c0)))OR(v0.c0))))) ISNULL));
SELECT ALL * FROM v0;
SELECT DISTINCT * FROM vt0, v0;
SELECT DISTINCT * FROM vt0, v0 WHERE (((vt0.c0)|(((vt0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0))))) UNION SELECT DISTINCT * FROM vt0, v0 WHERE ((NOT (((vt0.c0)|(((vt0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0))))))) UNION SELECT DISTINCT * FROM vt0, v0 WHERE (((((vt0.c0)|(((vt0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0))))) ISNULL));
SELECT DISTINCT * FROM vt0, v0;
SELECT ALL v0.c0 FROM v0, vt0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0, vt0 WHERE (CASE WHEN (vt0.c0 IN ()) THEN ((x'9d8f')LIKE(vt0.c0)) ELSE (+ (vt0.c0)) END) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0, vt0 WHERE ((NOT (CASE WHEN (vt0.c0 IN ()) THEN ((x'9d8f')LIKE(vt0.c0)) ELSE (+ (vt0.c0)) END))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0, vt0 WHERE (((CASE WHEN (vt0.c0 IN ()) THEN ((x'9d8f')LIKE(vt0.c0)) ELSE (+ (vt0.c0)) END) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0, vt0 GROUP BY v0.c0;
SELECT ALL vt0.c0 FROM vt0, v0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0, v0 GROUP BY vt0.c0 HAVING CASE COUNT(vt0.c0)  WHEN vt0.c0 THEN COUNT('7U') END COLLATE RTRIM UNION ALL SELECT vt0.c0 FROM vt0, v0 GROUP BY vt0.c0 HAVING (NOT (CASE COUNT(vt0.c0)  WHEN vt0.c0 THEN COUNT('7U') END COLLATE RTRIM)) UNION ALL SELECT ALL vt0.c0 FROM vt0, v0 GROUP BY vt0.c0 HAVING ((CASE COUNT(vt0.c0)  WHEN vt0.c0 THEN COUNT('7U') END COLLATE RTRIM) ISNULL);
SELECT ALL vt0.c0 FROM vt0, v0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0, v0 GROUP BY vt0.c0 HAVING CASE COUNT(vt0.c0)  WHEN vt0.c0 THEN COUNT('7U') END COLLATE RTRIM UNION ALL SELECT vt0.c0 FROM vt0, v0 GROUP BY vt0.c0 HAVING (NOT (CASE COUNT(vt0.c0)  WHEN vt0.c0 THEN COUNT('7U') END COLLATE RTRIM)) UNION ALL SELECT ALL vt0.c0 FROM vt0, v0 GROUP BY vt0.c0 HAVING ((CASE COUNT(vt0.c0)  WHEN vt0.c0 THEN COUNT('7U') END COLLATE RTRIM) ISNULL);
SELECT ALL vt0.c0 FROM vt0, v0 GROUP BY vt0.c0;
SELECT * FROM v0, vt0;
SELECT ALL * FROM v0, vt0 WHERE ((NOT (v0.c0 COLLATE BINARY))) UNION ALL SELECT * FROM v0, vt0 NOT INDEXED WHERE ((NOT ((NOT (v0.c0 COLLATE BINARY))))) UNION ALL SELECT * FROM v0, vt0 WHERE ((((NOT (v0.c0 COLLATE BINARY))) ISNULL));
SELECT * FROM v0, vt0;
SELECT DISTINCT vt0.c0 FROM vt0 FULL OUTER JOIN v0 ON ((((v0.c0) BETWEEN (v0.c0) AND (vt0.c0))) NOT BETWEEN ((+ (vt0.c0))) AND (((v0.c0) IS TRUE)));
SELECT DISTINCT vt0.c0 FROM vt0 FULL OUTER JOIN v0 ON ((((v0.c0) BETWEEN (v0.c0) AND (vt0.c0))) NOT BETWEEN ((+ (vt0.c0))) AND (((v0.c0) IS TRUE))) WHERE ((('>Z#箞') NOT BETWEEN ((+ (v0.c0))) AND (CAST(vt0.c0 AS TEXT)))) UNION SELECT DISTINCT vt0.c0 FROM vt0 FULL OUTER JOIN v0 ON ((((v0.c0) BETWEEN (v0.c0) AND (vt0.c0))) NOT BETWEEN ((+ (vt0.c0))) AND (((v0.c0) IS TRUE))) WHERE ((NOT ((('>Z#箞') NOT BETWEEN ((+ (v0.c0))) AND (CAST(vt0.c0 AS TEXT)))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 FULL OUTER JOIN v0 ON ((((v0.c0) BETWEEN (v0.c0) AND (vt0.c0))) NOT BETWEEN ((+ (vt0.c0))) AND (((v0.c0) IS TRUE))) WHERE ((((('>Z#箞') NOT BETWEEN ((+ (v0.c0))) AND (CAST(vt0.c0 AS TEXT)))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0 FULL OUTER JOIN v0 ON ((((v0.c0) BETWEEN (v0.c0) AND (vt0.c0))) NOT BETWEEN ((+ (vt0.c0))) AND (((v0.c0) IS TRUE)));
SELECT vt0.c0 FROM v0, vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM v0, vt0 WHERE (vt0.c0) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM v0, vt0 WHERE ((NOT (vt0.c0))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM v0 NOT INDEXED, vt0 WHERE (((vt0.c0) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM v0, vt0 GROUP BY vt0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING COUNT(((v0.c0) NOT BETWEEN (v0.c0) AND (MAX(v0.c0)))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (COUNT(((v0.c0) NOT BETWEEN (v0.c0) AND (MAX(v0.c0)))))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((COUNT(((v0.c0) NOT BETWEEN (v0.c0) AND (MAX(v0.c0))))) ISNULL);
SELECT ALL * FROM v0 FULL OUTER JOIN vt0 ON ((((vt0.c0)*(v0.c0))) IS TRUE);
SELECT ALL * FROM v0 FULL OUTER JOIN vt0 ON ((((vt0.c0)*(v0.c0))) IS TRUE) WHERE ((((((0X23db7f46, v0.c0, vt0.c0)) BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((vt0.c0, v0.c0, v0.c0)))) IS TRUE)) UNION ALL SELECT * FROM v0 FULL OUTER JOIN vt0 ON ((((vt0.c0)*(v0.c0))) IS TRUE) WHERE ((NOT ((((((0x23db7f46, v0.c0, vt0.c0)) BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((vt0.c0, v0.c0, v0.c0)))) IS TRUE)))) UNION ALL SELECT ALL * FROM v0 FULL OUTER JOIN vt0 ON ((((vt0.c0)*(v0.c0))) IS TRUE) WHERE ((((((((0x23db7f46, v0.c0, vt0.c0)) BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((vt0.c0, v0.c0, v0.c0)))) IS TRUE)) ISNULL));
SELECT ALL * FROM v0 FULL OUTER JOIN vt0 ON ((((vt0.c0)*(v0.c0))) IS TRUE);
SELECT DISTINCT vt0.c0 FROM vt0 INNER JOIN v0 ON ((((vt0.c0)<(v0.c0))) NOT BETWEEN (((v0.c0) ISNULL)) AND (((vt0.c0) BETWEEN (vt0.c0) AND ('954624982'))));
SELECT DISTINCT vt0.c0 FROM vt0 INNER JOIN v0 ON ((((vt0.c0)<(v0.c0))) NOT BETWEEN (((v0.c0) ISNULL)) AND (((vt0.c0) BETWEEN (vt0.c0) AND ('954624982')))) WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN vt0.c0 WHEN v0.c0 THEN vt0.c0 END) NOT BETWEEN (((v0.c0)IS(0X2eda274a))) AND (((v0.c0)AND(vt0.c0))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 INNER JOIN v0 ON ((((vt0.c0)<(v0.c0))) NOT BETWEEN (((v0.c0) ISNULL)) AND (((vt0.c0) BETWEEN (vt0.c0) AND ('954624982')))) WHERE ((NOT (((CASE WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN vt0.c0 WHEN v0.c0 THEN vt0.c0 END) NOT BETWEEN (((v0.c0)IS(0x2eda274a))) AND (((v0.c0)AND(vt0.c0))))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 INNER JOIN v0 ON ((((vt0.c0)<(v0.c0))) NOT BETWEEN (((v0.c0) ISNULL)) AND (((vt0.c0) BETWEEN (vt0.c0) AND ('954624982')))) WHERE (((((CASE WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN vt0.c0 WHEN v0.c0 THEN vt0.c0 END) NOT BETWEEN (((v0.c0)IS(0X2eda274a))) AND (((v0.c0)AND(vt0.c0))))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0 INNER JOIN v0 ON ((((vt0.c0)<(v0.c0))) NOT BETWEEN (((v0.c0) ISNULL)) AND (((vt0.c0) BETWEEN (vt0.c0) AND ('954624982'))));
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (CAST(((vt0.c0) NOTNULL) AS NUMERIC)) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (CAST(((vt0.c0) NOTNULL) AS NUMERIC)))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((CAST(((vt0.c0) NOTNULL) AS NUMERIC)) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING LOWER(DISTINCT ((vt0.c0) NOT NULL)) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (LOWER(DISTINCT ((vt0.c0) NOT NULL)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((LOWER(DISTINCT ((vt0.c0) NOT NULL))) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING LOWER(DISTINCT ((vt0.c0) NOT NULL)) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (LOWER(DISTINCT ((vt0.c0) NOT NULL)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((LOWER(DISTINCT ((vt0.c0) NOT NULL))) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL * FROM vt0;
SELECT ALL * FROM vt0 WHERE (NULLIF(DISTINCT ((0.4942772099064038)GLOB(vt0.c0)), (+ (vt0.c0)))) UNION ALL SELECT * FROM vt0 NOT INDEXED WHERE ((NOT (NULLIF(DISTINCT ((0.4942772099064038)GLOB(vt0.c0)), (+ (vt0.c0)))))) UNION ALL SELECT ALL * FROM vt0 WHERE (((NULLIF(DISTINCT ((0.4942772099064038)GLOB(vt0.c0)), (+ (vt0.c0)))) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (vt0.c0) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (vt0.c0))) UNION SELECT DISTINCT * FROM vt0 WHERE (((vt0.c0) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (v0.c0) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT (v0.c0))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE (((v0.c0) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0;
SELECT v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0 HAVING v0.c0 UNION ALL SELECT ALL v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0 HAVING (NOT (v0.c0)) UNION ALL SELECT ALL v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0 HAVING ((v0.c0) ISNULL);
SELECT ALL v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0;
SELECT v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0 HAVING v0.c0 UNION ALL SELECT ALL v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0 HAVING (NOT (v0.c0)) UNION ALL SELECT ALL v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0 HAVING ((v0.c0) ISNULL);
SELECT ALL v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0;
SELECT ALL * FROM vt0, v0;
SELECT * FROM vt0, v0 WHERE ((vt0.c0 COLLATE RTRIM IN ())) UNION ALL SELECT ALL * FROM vt0, v0 WHERE ((NOT ((vt0.c0 COLLATE RTRIM IN ())))) UNION ALL SELECT * FROM vt0, v0 WHERE ((((vt0.c0 COLLATE RTRIM IN ())) ISNULL));
SELECT ALL * FROM vt0, v0;
SELECT DISTINCT * FROM v0, vt0;
SELECT DISTINCT * FROM v0, vt0 WHERE (((((vt0.c0)|('y䌇')))&(NULL))) UNION SELECT DISTINCT * FROM v0, vt0 WHERE ((NOT (((((vt0.c0)|('y䌇')))&(NULL))))) UNION SELECT DISTINCT * FROM v0, vt0 WHERE (((((((vt0.c0)|('y䌇')))&(NULL))) ISNULL));
SELECT DISTINCT * FROM v0, vt0;
SELECT v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0;
SELECT ALL v0.c0, vt0.c0 FROM v0, vt0 WHERE (TYPEOF(((v0.c0) ISNULL))) GROUP BY v0.c0, vt0.c0 UNION SELECT v0.c0, vt0.c0 FROM v0, vt0 WHERE ((NOT (TYPEOF(((v0.c0) ISNULL))))) GROUP BY v0.c0, vt0.c0 UNION SELECT v0.c0, vt0.c0 FROM v0, vt0 WHERE (((TYPEOF(((v0.c0) ISNULL))) ISNULL)) GROUP BY v0.c0, vt0.c0;
SELECT v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0;
SELECT ALL vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0;
SELECT vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0 HAVING ((COUNT(vt0.c0)) NOT BETWEEN (ABS(DISTINCT SUM(MIN(vt0.c0)))) AND (TOTAL(MIN(vt0.c0)))) UNION ALL SELECT vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0 HAVING (NOT (((COUNT(vt0.c0)) NOT BETWEEN (ABS(DISTINCT SUM(MIN(vt0.c0)))) AND (TOTAL(MIN(vt0.c0)))))) UNION ALL SELECT ALL vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0 HAVING ((((COUNT(vt0.c0)) NOT BETWEEN (ABS(DISTINCT SUM(MIN(vt0.c0)))) AND (TOTAL(MIN(vt0.c0))))) ISNULL);
SELECT ALL v0.c0 FROM v0 FULL OUTER JOIN vt0 ON (((vt0.c0))<>((((v0.c0)/(v0.c0)))));
SELECT ALL v0.c0 FROM v0 FULL OUTER JOIN vt0 ON (((vt0.c0))!=((((v0.c0)/(v0.c0))))) WHERE (-955741025) UNION ALL SELECT v0.c0 FROM v0 FULL OUTER JOIN vt0 ON (((vt0.c0))<>((((v0.c0)/(v0.c0))))) WHERE ((NOT (-955741025))) UNION ALL SELECT v0.c0 FROM v0 FULL OUTER JOIN vt0 ON (((vt0.c0))<>((((v0.c0)/(v0.c0))))) WHERE (((-955741025) ISNULL));
SELECT ALL v0.c0 FROM v0 FULL OUTER JOIN vt0 ON (((vt0.c0))<>((((v0.c0)/(v0.c0)))));
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE ((((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))<=(((- (NULL)))))) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT ((((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))<=(((- (NULL)))))))) UNION SELECT DISTINCT * FROM v0 WHERE ((((((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))<=(((- (NULL)))))) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (vt0.c0) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (vt0.c0))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((vt0.c0) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT v0.c0 FROM vt0 INNER JOIN v0 ON v0.c0 GROUP BY v0.c0;
SELECT v0.c0 FROM vt0 INNER JOIN v0 ON v0.c0 GROUP BY v0.c0 HAVING MIN(GROUP_CONCAT(TOTAL(COUNT(MIN(MAX(v0.c0)))))) UNION ALL SELECT v0.c0 FROM vt0 INNER JOIN v0 ON v0.c0 GROUP BY v0.c0 HAVING (NOT (MIN(GROUP_CONCAT(TOTAL(COUNT(MIN(MAX(v0.c0)))))))) UNION ALL SELECT v0.c0 FROM vt0 INNER JOIN v0 ON v0.c0 GROUP BY v0.c0 HAVING ((MIN(GROUP_CONCAT(TOTAL(COUNT(MIN(MAX(v0.c0))))))) ISNULL);
SELECT ALL vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE ((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))IS(vt0.c0 COLLATE BINARY))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT ((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))IS(vt0.c0 COLLATE BINARY))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))IS(vt0.c0 COLLATE BINARY))) ISNULL));
SELECT ALL vt0.c0 FROM vt0;
SELECT DISTINCT * FROM vt0, v0;
SELECT DISTINCT * FROM vt0, v0 WHERE (((vt0.c0) ISNULL) COLLATE NOCASE) UNION SELECT DISTINCT * FROM vt0, v0 WHERE ((NOT (((vt0.c0) ISNULL) COLLATE NOCASE))) UNION SELECT DISTINCT * FROM vt0, v0 WHERE (((((vt0.c0) ISNULL) COLLATE NOCASE) ISNULL));
SELECT DISTINCT * FROM vt0, v0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE ((((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))>>(0.8117985977325304 COLLATE NOCASE))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT ((((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))>>(0.8117985977325304 COLLATE NOCASE))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((((((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))>>(0.8117985977325304 COLLATE NOCASE))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING v0.c0 UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (v0.c0)) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((v0.c0) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING v0.c0 UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (v0.c0)) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((v0.c0) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0, vt0;
SELECT ALL v0.c0 FROM v0, vt0 WHERE (((- ('f')) IN (vt0.c0 COLLATE BINARY))) UNION ALL SELECT v0.c0 FROM v0, vt0 WHERE ((NOT (((- ('f')) IN (vt0.c0 COLLATE BINARY))))) UNION ALL SELECT v0.c0 FROM v0, vt0 WHERE (((((- ('f')) IN (vt0.c0 COLLATE BINARY))) ISNULL));
SELECT ALL v0.c0 FROM v0, vt0;
SELECT DISTINCT * FROM v0, vt0;
SELECT DISTINCT * FROM v0 NOT INDEXED, vt0 WHERE (((((vt0.c0) NOTNULL))==((v0.c0 IN (x''))))) UNION SELECT DISTINCT * FROM v0, vt0 WHERE ((NOT (((((vt0.c0) NOTNULL))==((v0.c0 IN (x''))))))) UNION SELECT DISTINCT * FROM v0, vt0 WHERE (((((((vt0.c0) NOTNULL))=((v0.c0 IN (x''))))) ISNULL));
SELECT DISTINCT * FROM v0, vt0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (CAST(((v0.c0) IS FALSE) AS NUMERIC)) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT (CAST(((v0.c0) IS FALSE) AS NUMERIC)))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE (((CAST(((v0.c0) IS FALSE) AS NUMERIC)) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (CAST(vt0.c0 AS REAL) IN ()) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT ((CAST(vt0.c0 AS REAL) IN ()))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((CAST(vt0.c0 AS REAL) IN ())) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (CAST(vt0.c0 AS REAL) IN ()) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT ((CAST(vt0.c0 AS REAL) IN ()))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((CAST(vt0.c0 AS REAL) IN ())) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL * FROM v0 INNER JOIN vt0 ON (~ ((+ (v0.c0))));
SELECT * FROM v0 INNER JOIN vt0 ON (~ ((+ (v0.c0)))) WHERE ((NOT (CASE vt0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE v0.c0 END))) UNION ALL SELECT * FROM v0 INNER JOIN vt0 ON (~ ((+ (v0.c0)))) WHERE ((NOT ((NOT (CASE vt0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE v0.c0 END))))) UNION ALL SELECT ALL * FROM v0 INNER JOIN vt0 ON (~ ((+ (v0.c0)))) WHERE ((((NOT (CASE vt0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE v0.c0 END))) ISNULL));
SELECT ALL * FROM v0 INNER JOIN vt0 ON (~ ((+ (v0.c0))));
SELECT DISTINCT * FROM vt0 INNER JOIN v0 ON (((((NULL)OR(vt0.c0)))AND(NULL)) IN ());
SELECT DISTINCT * FROM vt0 INNER JOIN v0 ON (((((NULL)OR(vt0.c0)))AND(NULL)) IN ()) WHERE (((CAST(vt0.c0 AS BLOB)) NOT BETWEEN (NULL) AND (((vt0.c0)>=(v0.c0))))) UNION SELECT DISTINCT * FROM vt0 INNER JOIN v0 ON (((((NULL)OR(vt0.c0)))AND(NULL)) IN ()) WHERE ((NOT (((CAST(vt0.c0 AS BLOB)) NOT BETWEEN (NULL) AND (((vt0.c0)>=(v0.c0))))))) UNION SELECT DISTINCT * FROM vt0 INNER JOIN v0 ON (((((NULL)OR(vt0.c0)))AND(NULL)) IN ()) WHERE (((((CAST(vt0.c0 AS BLOB)) NOT BETWEEN (NULL) AND (((vt0.c0)>=(v0.c0))))) ISNULL));
SELECT DISTINCT * FROM vt0 INNER JOIN v0 ON (((((NULL)OR(vt0.c0)))AND(NULL)) IN ());
SELECT ALL vt0.c0 FROM vt0 RIGHT OUTER JOIN v0 ON ((CASE WHEN v0.c0 THEN v0.c0 WHEN vt0.c0 THEN v0.c0 WHEN v0.c0 THEN vt0.c0 ELSE vt0.c0 END) NOT NULL) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 RIGHT OUTER JOIN v0 ON ((CASE WHEN v0.c0 THEN v0.c0 WHEN vt0.c0 THEN v0.c0 WHEN v0.c0 THEN vt0.c0 ELSE vt0.c0 END) NOT NULL) WHERE (LIKE(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)), v0.c0, '}')) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 RIGHT OUTER JOIN v0 ON ((CASE WHEN v0.c0 THEN v0.c0 WHEN vt0.c0 THEN v0.c0 WHEN v0.c0 THEN vt0.c0 ELSE vt0.c0 END) NOT NULL) WHERE ((NOT (LIKE(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)), v0.c0, '}')))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 RIGHT OUTER JOIN v0 ON ((CASE WHEN v0.c0 THEN v0.c0 WHEN vt0.c0 THEN v0.c0 WHEN v0.c0 THEN vt0.c0 ELSE vt0.c0 END) NOT NULL) WHERE (((LIKE(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)), v0.c0, '}')) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 RIGHT OUTER JOIN v0 ON ((CASE WHEN v0.c0 THEN v0.c0 WHEN vt0.c0 THEN v0.c0 WHEN v0.c0 THEN vt0.c0 ELSE vt0.c0 END) NOT NULL) GROUP BY vt0.c0;
SELECT ALL v0.c0 FROM vt0, v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM vt0, v0 GROUP BY v0.c0 HAVING MIN(GROUP_CONCAT(vt0.c0)) UNION ALL SELECT ALL v0.c0 FROM vt0, v0 GROUP BY v0.c0 HAVING (NOT (MIN(GROUP_CONCAT(vt0.c0)))) UNION ALL SELECT v0.c0 FROM vt0, v0 GROUP BY v0.c0 HAVING ((MIN(GROUP_CONCAT(vt0.c0))) ISNULL);
SELECT vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE (CASE WHEN ((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)) THEN vt0.c0 END) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (CASE WHEN ((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)) THEN vt0.c0 END))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE (((CASE WHEN ((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)) THEN vt0.c0 END) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT * FROM vt0, v0;
SELECT DISTINCT * FROM vt0, v0 WHERE (((NULL) NOTNULL) COLLATE RTRIM) UNION SELECT DISTINCT * FROM vt0, v0 WHERE ((NOT (((NULL) NOTNULL) COLLATE RTRIM))) UNION SELECT DISTINCT * FROM vt0, v0 WHERE (((((NULL) NOTNULL) COLLATE RTRIM) ISNULL));
SELECT DISTINCT * FROM vt0, v0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN (((vt0.c0 IN ()))) AND (((+ (vt0.c0)))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT ((((vt0.c0)) NOT BETWEEN (((vt0.c0 IN ()))) AND (((+ (vt0.c0)))))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((((((vt0.c0)) NOT BETWEEN (((vt0.c0 IN ()))) AND (((+ (vt0.c0)))))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0;
SELECT v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0 HAVING SUM(TOTAL(vt0.c0)) UNION ALL SELECT v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0 HAVING (NOT (SUM(TOTAL(vt0.c0)))) UNION ALL SELECT v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0 HAVING ((SUM(TOTAL(vt0.c0))) ISNULL);
SELECT ALL * FROM v0;
SELECT * FROM v0 WHERE (GLOB(CAST(v0.c0 AS TEXT), CASE 0.5874878962483777  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END)) UNION ALL SELECT * FROM v0 WHERE ((NOT (GLOB(CAST(v0.c0 AS TEXT), CASE 0.5874878962483777  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END)))) UNION ALL SELECT * FROM v0 WHERE (((GLOB(CAST(v0.c0 AS TEXT), CASE 0.5874878962483777  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END)) ISNULL));
SELECT ALL * FROM v0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE ((((((+ (v0.c0)))AND(((v0.c0) ISNULL))))AND((((v0.c0)) NOT BETWEEN ((x'')) AND ((v0.c0)))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT ((((((+ (v0.c0)))AND(((v0.c0) ISNULL))))AND((((v0.c0)) NOT BETWEEN ((x'')) AND ((v0.c0)))))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((((((((+ (v0.c0)))AND(((v0.c0) ISNULL))))AND((((v0.c0)) NOT BETWEEN ((x'')) AND ((v0.c0)))))) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE ((((((((((~ (vt0.c0)))AND(((0.3478364063017816) IS TRUE))))AND((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))))AND(CAST(vt0.c0 AS TEXT))))AND(((vt0.c0) IS FALSE)))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT ((((((((((~ (vt0.c0)))AND(((0.3478364063017816) IS TRUE))))AND((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))))AND(CAST(vt0.c0 AS TEXT))))AND(((vt0.c0) IS FALSE)))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((((((((((((~ (vt0.c0)))AND(((0.3478364063017816) IS TRUE))))AND((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))))AND(CAST(vt0.c0 AS TEXT))))AND(((vt0.c0) IS FALSE)))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((AVG(SUM(vt0.c0)), COUNT(vt0.c0), SUM(MIN(MIN(SUM(SUM(vt0.c0))))))) NOT BETWEEN ((MAX(vt0.c0), CASE WHEN GROUP_CONCAT(vt0.c0) THEN vt0.c0 ELSE GROUP_CONCAT(vt0.c0) END, (+ (vt0.c0)))) AND ((AVG(vt0.c0), vt0.c0, TOTAL(vt0.c0)))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT ((((AVG(SUM(vt0.c0)), COUNT(vt0.c0), SUM(MIN(MIN(SUM(SUM(vt0.c0))))))) NOT BETWEEN ((MAX(vt0.c0), CASE WHEN GROUP_CONCAT(vt0.c0) THEN vt0.c0 ELSE GROUP_CONCAT(vt0.c0) END, (+ (vt0.c0)))) AND ((AVG(vt0.c0), vt0.c0, TOTAL(vt0.c0)))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((((AVG(SUM(vt0.c0)), COUNT(vt0.c0), SUM(MIN(MIN(SUM(SUM(vt0.c0))))))) NOT BETWEEN ((MAX(vt0.c0), CASE WHEN GROUP_CONCAT(vt0.c0) THEN vt0.c0 ELSE GROUP_CONCAT(vt0.c0) END, (+ (vt0.c0)))) AND ((AVG(vt0.c0), vt0.c0, TOTAL(vt0.c0))))) ISNULL);
SELECT ALL vt0.c0 FROM vt0, v0;
SELECT ALL vt0.c0 FROM vt0, v0 WHERE (HEX(CAST(vt0.c0 AS TEXT))) UNION ALL SELECT vt0.c0 FROM vt0, v0 WHERE ((NOT (HEX(CAST(vt0.c0 AS TEXT))))) UNION ALL SELECT vt0.c0 FROM vt0, v0 WHERE (((HEX(CAST(vt0.c0 AS TEXT))) ISNULL));
SELECT ALL vt0.c0 FROM vt0, v0;
SELECT DISTINCT vt0.c0 FROM v0, vt0;
SELECT DISTINCT vt0.c0 FROM v0, vt0 WHERE (vt0.c0) UNION SELECT DISTINCT vt0.c0 FROM v0, vt0 WHERE ((NOT (vt0.c0))) UNION SELECT DISTINCT vt0.c0 FROM v0, vt0 WHERE (((vt0.c0) ISNULL));
SELECT DISTINCT vt0.c0 FROM v0, vt0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE ((((((v0.c0)>=(v0.c0))))<(((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT ((((((v0.c0)>=(v0.c0))))<(((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((((((((v0.c0)>=(v0.c0))))<(((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING TOTAL(TOTAL(v0.c0)) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (TOTAL(TOTAL(v0.c0)))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((TOTAL(TOTAL(v0.c0))) ISNULL);
SELECT ALL * FROM v0;
SELECT * FROM v0 WHERE ('1062795337') UNION ALL SELECT ALL * FROM v0 WHERE ((NOT ('1062795337'))) UNION ALL SELECT ALL * FROM v0 WHERE ((('1062795337') ISNULL));
SELECT ALL * FROM v0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE ((~ ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT ((~ ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((((~ ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL vt0.c0 FROM vt0, v0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, v0 WHERE (((((v0.c0)||(vt0.c0)))<=(((v0.c0)>>(v0.c0))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0, v0 WHERE ((NOT (((((v0.c0)||(vt0.c0)))<=(((v0.c0)>>(v0.c0))))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0, v0 WHERE (((((((v0.c0)||(vt0.c0)))<=(((v0.c0)>>(v0.c0))))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, v0 GROUP BY vt0.c0;
SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0;
SELECT vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0 HAVING (~ ((MIN(MAX(vt0.c0)) IN ()))) UNION ALL SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0 HAVING (NOT ((~ ((MIN(MAX(vt0.c0)) IN ()))))) UNION ALL SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0 HAVING (((~ ((MIN(MAX(vt0.c0)) IN ())))) ISNULL);
SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0;
SELECT vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0 HAVING (~ ((MIN(MAX(vt0.c0)) IN ()))) UNION ALL SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0 HAVING (NOT ((~ ((MIN(MAX(vt0.c0)) IN ()))))) UNION ALL SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0 HAVING (((~ ((MIN(MAX(vt0.c0)) IN ())))) ISNULL);
SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0;
SELECT * FROM v0 LEFT OUTER JOIN vt0 ON ((((vt0.c0)==(vt0.c0))) BETWEEN ((~ (x''))) AND (((((((((vt0.c0)OR(v0.c0)))AND(vt0.c0)))AND(v0.c0)))OR(0.964040551604348))));
SELECT ALL * FROM v0 LEFT OUTER JOIN vt0 ON ((((vt0.c0)==(vt0.c0))) BETWEEN ((~ (x''))) AND (((((((((vt0.c0)OR(v0.c0)))AND(vt0.c0)))AND(v0.c0)))OR(0.964040551604348)))) WHERE ((((v0.c0) NOTNULL) IN ())) UNION ALL SELECT ALL * FROM v0 LEFT OUTER JOIN vt0 ON ((((vt0.c0)=(vt0.c0))) BETWEEN ((~ (x''))) AND (((((((((vt0.c0)OR(v0.c0)))AND(vt0.c0)))AND(v0.c0)))OR(0.964040551604348)))) WHERE ((NOT ((((v0.c0) NOTNULL) IN ())))) UNION ALL SELECT * FROM v0 LEFT OUTER JOIN vt0 ON ((((vt0.c0)=(vt0.c0))) BETWEEN ((~ (x''))) AND (((((((((vt0.c0)OR(v0.c0)))AND(vt0.c0)))AND(v0.c0)))OR(0.964040551604348)))) WHERE ((((((v0.c0) NOTNULL) IN ())) ISNULL));
SELECT * FROM v0 LEFT OUTER JOIN vt0 ON ((((vt0.c0)==(vt0.c0))) BETWEEN ((~ (x''))) AND (((((((((vt0.c0)OR(v0.c0)))AND(vt0.c0)))AND(v0.c0)))OR(0.964040551604348))));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (CASE ((vt0.c0)||(vt0.c0))  WHEN TYPEOF(vt0.c0) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) END) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (CASE ((vt0.c0)||(vt0.c0))  WHEN TYPEOF(vt0.c0) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) END))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((CASE ((vt0.c0)||(vt0.c0))  WHEN TYPEOF(vt0.c0) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) END) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0, v0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0, v0 WHERE (((((((((NULL)AND(GLOB(vt0.c0, vt0.c0))))OR(vt0.c0)))AND(v0.c0)))OR(((((((((vt0.c0)OR(vt0.c0)))AND(0.6587324150915388)))OR(vt0.c0)))AND(NULL))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0, v0 WHERE ((NOT (((((((((NULL)AND(GLOB(vt0.c0, vt0.c0))))OR(vt0.c0)))AND(v0.c0)))OR(((((((((vt0.c0)OR(vt0.c0)))AND(0.6587324150915388)))OR(vt0.c0)))AND(NULL))))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0, v0 WHERE (((((((((((NULL)AND(GLOB(vt0.c0, vt0.c0))))OR(vt0.c0)))AND(v0.c0)))OR(((((((((vt0.c0)OR(vt0.c0)))AND(0.6587324150915388)))OR(vt0.c0)))AND(NULL))))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0, v0 GROUP BY vt0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING SUM(COUNT(*)) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (SUM(COUNT(*)))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((SUM(COUNT(*))) ISNULL);
SELECT v0.c0 FROM v0;
SELECT v0.c0 FROM v0 WHERE (TRIM(v0.c0 COLLATE RTRIM, (+ (v0.c0)))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE ((NOT (TRIM(v0.c0 COLLATE RTRIM, (+ (v0.c0)))))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE (((TRIM(v0.c0 COLLATE RTRIM, (+ (v0.c0)))) ISNULL));
SELECT v0.c0 FROM v0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE ('-1444943185') UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT ('-1444943185'))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((('-1444943185') ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT vt0.c0, v0.c0 FROM vt0 LEFT OUTER JOIN v0 ON ((CASE WHEN vt0.c0 THEN vt0.c0 END)>>(CAST(vt0.c0 AS NUMERIC))) GROUP BY vt0.c0, v0.c0;
SELECT ALL vt0.c0, v0.c0 FROM vt0 LEFT OUTER JOIN v0 ON ((CASE WHEN vt0.c0 THEN vt0.c0 END)>>(CAST(vt0.c0 AS NUMERIC))) WHERE (IFNULL(((((((((vt0.c0)OR(0.8980808749948189)))AND(v0.c0)))AND(vt0.c0)))AND(v0.c0)), CAST(vt0.c0 AS REAL))) GROUP BY vt0.c0, v0.c0 UNION SELECT vt0.c0, v0.c0 FROM vt0 LEFT OUTER JOIN v0 ON ((CASE WHEN vt0.c0 THEN vt0.c0 END)>>(CAST(vt0.c0 AS NUMERIC))) WHERE ((NOT (IFNULL(((((((((vt0.c0)OR(0.8980808749948189)))AND(v0.c0)))AND(vt0.c0)))AND(v0.c0)), CAST(vt0.c0 AS REAL))))) GROUP BY vt0.c0, v0.c0 UNION SELECT vt0.c0, v0.c0 FROM vt0 LEFT OUTER JOIN v0 ON ((CASE WHEN vt0.c0 THEN vt0.c0 END)>>(CAST(vt0.c0 AS NUMERIC))) WHERE (((IFNULL(((((((((vt0.c0)OR(0.8980808749948189)))AND(v0.c0)))AND(vt0.c0)))AND(v0.c0)), CAST(vt0.c0 AS REAL))) ISNULL)) GROUP BY vt0.c0, v0.c0;
SELECT vt0.c0, v0.c0 FROM vt0 LEFT OUTER JOIN v0 ON ((CASE WHEN vt0.c0 THEN vt0.c0 END)>>(CAST(vt0.c0 AS NUMERIC))) GROUP BY vt0.c0, v0.c0;
SELECT vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0;
SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0 HAVING AVG(GROUP_CONCAT(COUNT(vt0.c0))) UNION ALL SELECT vt0.c0, v0.c0 FROM vt0, v0 NOT INDEXED GROUP BY vt0.c0, v0.c0 HAVING (NOT (AVG(GROUP_CONCAT(COUNT(vt0.c0))))) UNION ALL SELECT vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0 HAVING ((AVG(GROUP_CONCAT(COUNT(vt0.c0)))) ISNULL);
SELECT vt0.c0, v0.c0 FROM v0, vt0;
SELECT ALL vt0.c0, v0.c0 FROM v0, vt0 WHERE (vt0.c0) UNION ALL SELECT ALL vt0.c0, v0.c0 FROM v0, vt0 WHERE ((NOT (vt0.c0))) UNION ALL SELECT vt0.c0, v0.c0 FROM v0, vt0 WHERE (((vt0.c0) ISNULL));
SELECT vt0.c0, v0.c0 FROM v0, vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (vt0.c0) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (vt0.c0))) UNION SELECT DISTINCT * FROM vt0 WHERE (((vt0.c0) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL vt0.c0 FROM v0, vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM v0, vt0 WHERE (CAST((+ (v0.c0)) AS NUMERIC)) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM v0, vt0 WHERE ((NOT (CAST((+ (v0.c0)) AS NUMERIC)))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM v0, vt0 WHERE (((CAST((+ (v0.c0)) AS NUMERIC)) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM v0, vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING MAX(MIN(SUM(AVG(vt0.c0)))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (MAX(MIN(SUM(AVG(vt0.c0)))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((MAX(MIN(SUM(AVG(vt0.c0))))) ISNULL);
SELECT * FROM vt0;
SELECT ALL * FROM vt0 WHERE (vt0.c0) UNION ALL SELECT * FROM vt0 WHERE ((NOT (vt0.c0))) UNION ALL SELECT ALL * FROM vt0 WHERE (((vt0.c0) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((IFNULL(DISTINCT vt0.c0, vt0.c0))) AND ((vt0.c0 COLLATE RTRIM)))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT ((((vt0.c0)) NOT BETWEEN ((IFNULL(DISTINCT vt0.c0, vt0.c0))) AND ((vt0.c0 COLLATE RTRIM)))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((((((vt0.c0)) NOT BETWEEN ((IFNULL(DISTINCT vt0.c0, vt0.c0))) AND ((vt0.c0 COLLATE RTRIM)))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0;
SELECT ALL vt0.c0, v0.c0 FROM v0, vt0 WHERE (((IFNULL(DISTINCT v0.c0, v0.c0))>>(CAST(vt0.c0 AS INTEGER)))) GROUP BY vt0.c0, v0.c0 UNION SELECT ALL vt0.c0, v0.c0 FROM v0, vt0 WHERE ((NOT (((IFNULL(DISTINCT v0.c0, v0.c0))>>(CAST(vt0.c0 AS INTEGER)))))) GROUP BY vt0.c0, v0.c0 UNION SELECT vt0.c0, v0.c0 FROM v0, vt0 WHERE (((((IFNULL(DISTINCT v0.c0, v0.c0))>>(CAST(vt0.c0 AS INTEGER)))) ISNULL)) GROUP BY vt0.c0, v0.c0;
SELECT ALL vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0;
SELECT v0.c0, vt0.c0 FROM vt0 LEFT OUTER JOIN v0 ON ((((vt0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))) IN ()) GROUP BY v0.c0, vt0.c0;
SELECT v0.c0, vt0.c0 FROM vt0 LEFT OUTER JOIN v0 ON ((((vt0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))) IN ()) GROUP BY v0.c0, vt0.c0 HAVING MIN(MAX(vt0.c0)) UNION ALL SELECT v0.c0, vt0.c0 FROM vt0 LEFT OUTER JOIN v0 ON ((((vt0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))) IN ()) GROUP BY v0.c0, vt0.c0 HAVING (NOT (MIN(MAX(vt0.c0)))) UNION ALL SELECT v0.c0, vt0.c0 FROM vt0 LEFT OUTER JOIN v0 ON ((((vt0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))) IN ()) GROUP BY v0.c0, vt0.c0 HAVING ((MIN(MAX(vt0.c0))) ISNULL);
SELECT ALL * FROM v0;
SELECT * FROM v0 WHERE ((((NOT (NULL))) BETWEEN ((((v0.c0, v0.c0, v0.c0))==((v0.c0, v0.c0, v0.c0)))) AND (((v0.c0) IS TRUE)))) UNION ALL SELECT ALL * FROM v0 WHERE ((NOT ((((NOT (NULL))) BETWEEN ((((v0.c0, v0.c0, v0.c0))==((v0.c0, v0.c0, v0.c0)))) AND (((v0.c0) IS TRUE)))))) UNION ALL SELECT ALL * FROM v0 WHERE ((((((NOT (NULL))) BETWEEN ((((v0.c0, v0.c0, v0.c0))=((v0.c0, v0.c0, v0.c0)))) AND (((v0.c0) IS TRUE)))) ISNULL));
SELECT ALL * FROM v0;
SELECT DISTINCT vt0.c0 FROM v0 CROSS JOIN vt0 ON CAST(CAST(vt0.c0 AS REAL) AS BLOB);
SELECT DISTINCT vt0.c0 FROM v0 CROSS JOIN vt0 ON CAST(CAST(vt0.c0 AS REAL) AS BLOB) WHERE (((((CAST(v0.c0 AS TEXT))AND(((vt0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))))OR((NOT (vt0.c0))))) UNION SELECT DISTINCT vt0.c0 FROM v0 CROSS JOIN vt0 ON CAST(CAST(vt0.c0 AS REAL) AS BLOB) WHERE ((NOT (((((CAST(v0.c0 AS TEXT))AND(((vt0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))))OR((NOT (vt0.c0))))))) UNION SELECT DISTINCT vt0.c0 FROM v0 CROSS JOIN vt0 ON CAST(CAST(vt0.c0 AS REAL) AS BLOB) WHERE (((((((CAST(v0.c0 AS TEXT))AND(((vt0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))))OR((NOT (vt0.c0))))) ISNULL));
SELECT DISTINCT vt0.c0 FROM v0 CROSS JOIN vt0 ON CAST(CAST(vt0.c0 AS REAL) AS BLOB);
SELECT vt0.c0 FROM vt0, v0 NOT INDEXED GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, v0 WHERE ((NOT ((~ (vt0.c0))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0, v0 WHERE ((NOT ((NOT ((~ (vt0.c0))))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0, v0 WHERE ((((NOT ((~ (vt0.c0))))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0, v0 NOT INDEXED GROUP BY vt0.c0;
SELECT ALL vt0.c0, v0.c0 FROM vt0 FULL OUTER JOIN v0 ON (((v0.c0)AND(vt0.c0)) IN ()) GROUP BY vt0.c0, v0.c0;
SELECT vt0.c0, v0.c0 FROM vt0 FULL OUTER JOIN v0 ON (((v0.c0)AND(vt0.c0)) IN ()) GROUP BY vt0.c0, v0.c0 HAVING COUNT(MIN(SUM(vt0.c0))) UNION ALL SELECT ALL vt0.c0, v0.c0 FROM vt0 FULL OUTER JOIN v0 ON (((v0.c0)AND(vt0.c0)) IN ()) GROUP BY vt0.c0, v0.c0 HAVING (NOT (COUNT(MIN(SUM(vt0.c0))))) UNION ALL SELECT vt0.c0, v0.c0 FROM vt0 FULL OUTER JOIN v0 ON (((v0.c0)AND(vt0.c0)) IN ()) GROUP BY vt0.c0, v0.c0 HAVING ((COUNT(MIN(SUM(vt0.c0)))) ISNULL);
SELECT ALL v0.c0 FROM v0;
SELECT ALL v0.c0 FROM v0 WHERE (LIKELIHOOD(DISTINCT v0.c0, 0.4232959392290546) COLLATE RTRIM) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE ((NOT (LIKELIHOOD(DISTINCT v0.c0, 0.4232959392290546) COLLATE RTRIM))) UNION ALL SELECT v0.c0 FROM v0 WHERE (((LIKELIHOOD(DISTINCT v0.c0, 0.4232959392290546) COLLATE RTRIM) ISNULL));
SELECT ALL v0.c0 FROM v0;
SELECT DISTINCT vt0.c0, v0.c0 FROM vt0, v0;
SELECT DISTINCT vt0.c0, v0.c0 FROM vt0, v0 WHERE ((NOT (json(v0.c0)))) UNION SELECT DISTINCT vt0.c0, v0.c0 FROM vt0, v0 WHERE ((NOT ((NOT (json(v0.c0)))))) UNION SELECT DISTINCT vt0.c0, v0.c0 FROM vt0, v0 WHERE ((((NOT (json(v0.c0)))) ISNULL));
SELECT DISTINCT vt0.c0, v0.c0 FROM vt0, v0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (LIKELIHOOD(ABS(DISTINCT NULL), 0.7975358758145856)) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (LIKELIHOOD(ABS(DISTINCT NULL), 0.7975358758145856)))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((LIKELIHOOD(ABS(DISTINCT NULL), 0.7975358758145856)) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING COUNT(*) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING COUNT(*) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT * FROM vt0, v0;
SELECT * FROM vt0, v0 WHERE (((vt0.c0 COLLATE NOCASE)IS(vt0.c0))) UNION ALL SELECT ALL * FROM vt0, v0 WHERE ((NOT (((vt0.c0 COLLATE NOCASE)IS(vt0.c0))))) UNION ALL SELECT * FROM vt0, v0 WHERE (((((vt0.c0 COLLATE NOCASE)IS(vt0.c0))) ISNULL));
SELECT * FROM vt0, v0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (((((((((CASE v0.c0  WHEN NULL THEN v0.c0 ELSE v0.c0 END)AND((v0.c0 IN ()))))AND(((v0.c0) IS FALSE))))AND((- (v0.c0)))))AND((+ (v0.c0))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (((((((((CASE v0.c0  WHEN NULL THEN v0.c0 ELSE v0.c0 END)AND((v0.c0 IN ()))))AND(((v0.c0) IS FALSE))))AND((- (v0.c0)))))AND((+ (v0.c0))))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((((((((((CASE v0.c0  WHEN NULL THEN v0.c0 ELSE v0.c0 END)AND((v0.c0 IN ()))))AND(((v0.c0) IS FALSE))))AND((- (v0.c0)))))AND((+ (v0.c0))))) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT ALL vt0.c0 FROM vt0 NOT INDEXED GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE ((~ (TRIM(0.2925816773602412)))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT ((~ (TRIM(0.2925816773602412)))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((((~ (TRIM(0.2925816773602412)))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 NOT INDEXED GROUP BY vt0.c0;
SELECT ALL v0.c0 FROM v0 NOT INDEXED GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING TYPEOF(COUNT(*)) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (TYPEOF(COUNT(*)))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((TYPEOF(COUNT(*))) ISNULL);
SELECT ALL v0.c0 FROM v0 NOT INDEXED GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING TYPEOF(COUNT(*)) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (TYPEOF(COUNT(*)))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((TYPEOF(COUNT(*))) ISNULL);
SELECT ALL v0.c0 FROM v0 NOT INDEXED GROUP BY v0.c0;
SELECT * FROM vt0, v0;
SELECT ALL * FROM vt0, v0 WHERE (v0.c0) UNION ALL SELECT ALL * FROM vt0, v0 WHERE ((NOT (v0.c0))) UNION ALL SELECT ALL * FROM vt0, v0 WHERE (((v0.c0) ISNULL));
SELECT * FROM vt0, v0;
SELECT DISTINCT vt0.c0 FROM v0 CROSS JOIN vt0 ON (~ (((((((((x'')AND(v0.c0)))OR(v0.c0)))OR(0x2123b9c8)))OR(v0.c0))));
SELECT DISTINCT vt0.c0 FROM v0 CROSS JOIN vt0 ON (~ (((((((((x'')AND(v0.c0)))OR(v0.c0)))OR(0X2123b9c8)))OR(v0.c0)))) WHERE ((((((v0.c0, v0.c0, v0.c0))==((vt0.c0, v0.c0, v0.c0)))) BETWEEN (UNLIKELY(NULL)) AND (((((vt0.c0)AND(vt0.c0)))AND(v0.c0))))) UNION SELECT DISTINCT vt0.c0 FROM v0 CROSS JOIN vt0 ON (~ (((((((((x'')AND(v0.c0)))OR(v0.c0)))OR(0x2123b9c8)))OR(v0.c0)))) WHERE ((NOT ((((((v0.c0, v0.c0, v0.c0))==((vt0.c0, v0.c0, v0.c0)))) BETWEEN (UNLIKELY(NULL)) AND (((((vt0.c0)AND(vt0.c0)))AND(v0.c0))))))) UNION SELECT DISTINCT vt0.c0 FROM v0 CROSS JOIN vt0 ON (~ (((((((((x'')AND(v0.c0)))OR(v0.c0)))OR(0x2123b9c8)))OR(v0.c0)))) WHERE ((((((((v0.c0, v0.c0, v0.c0))=((vt0.c0, v0.c0, v0.c0)))) BETWEEN (UNLIKELY(NULL)) AND (((((vt0.c0)AND(vt0.c0)))AND(v0.c0))))) ISNULL));
SELECT DISTINCT vt0.c0 FROM v0 CROSS JOIN vt0 ON (~ (((((((((x'')AND(v0.c0)))OR(v0.c0)))OR(0x2123b9c8)))OR(v0.c0))));
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))IS(v0.c0))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))IS(v0.c0))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE (((((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))IS(v0.c0))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING CASE WHEN vt0.c0 THEN MIN(vt0.c0) END UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (CASE WHEN vt0.c0 THEN MIN(vt0.c0) END)) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((CASE WHEN vt0.c0 THEN MIN(vt0.c0) END) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING CASE WHEN vt0.c0 THEN MIN(vt0.c0) END UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (CASE WHEN vt0.c0 THEN MIN(vt0.c0) END)) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((CASE WHEN vt0.c0 THEN MIN(vt0.c0) END) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT * FROM v0, vt0;
SELECT * FROM v0, vt0 WHERE (((((x'')>=(v0.c0)))||((((vt0.c0)) NOT BETWEEN ((0.8117985977325304)) AND ((vt0.c0)))))) UNION ALL SELECT * FROM v0, vt0 WHERE ((NOT (((((x'')>=(v0.c0)))||((((vt0.c0)) NOT BETWEEN ((0.8117985977325304)) AND ((vt0.c0)))))))) UNION ALL SELECT ALL * FROM v0, vt0 WHERE (((((((x'')>=(v0.c0)))||((((vt0.c0)) NOT BETWEEN ((0.8117985977325304)) AND ((vt0.c0)))))) ISNULL));
SELECT * FROM v0, vt0;
SELECT DISTINCT * FROM v0, vt0;
SELECT DISTINCT * FROM v0, vt0 WHERE (CASE ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(v0.c0)))AND(vt0.c0))  WHEN ((vt0.c0)&(v0.c0)) THEN LIKELIHOOD(DISTINCT v0.c0, 0.41547451699917626) ELSE (vt0.c0 IN ()) END) UNION SELECT DISTINCT * FROM v0, vt0 WHERE ((NOT (CASE ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(v0.c0)))AND(vt0.c0))  WHEN ((vt0.c0)&(v0.c0)) THEN LIKELIHOOD(DISTINCT v0.c0, 0.41547451699917626) ELSE (vt0.c0 IN ()) END))) UNION SELECT DISTINCT * FROM v0, vt0 WHERE (((CASE ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(v0.c0)))AND(vt0.c0))  WHEN ((vt0.c0)&(v0.c0)) THEN LIKELIHOOD(DISTINCT v0.c0, 0.41547451699917626) ELSE (vt0.c0 IN ()) END) ISNULL));
SELECT DISTINCT * FROM v0, vt0;
SELECT vt0.c0 FROM vt0, v0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0, v0 WHERE ((- (((((x'')AND(vt0.c0)))OR(vt0.c0))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0, v0 WHERE ((NOT ((- (((((x'')AND(vt0.c0)))OR(vt0.c0))))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0, v0 WHERE ((((- (((((x'')AND(vt0.c0)))OR(vt0.c0))))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0, v0 GROUP BY vt0.c0;
SELECT ALL v0.c0 FROM vt0, v0 GROUP BY v0.c0;
SELECT v0.c0 FROM vt0, v0 GROUP BY v0.c0 HAVING GROUP_CONCAT(vt0.c0 COLLATE BINARY) UNION ALL SELECT v0.c0 FROM vt0, v0 GROUP BY v0.c0 HAVING (NOT (GROUP_CONCAT(vt0.c0 COLLATE BINARY))) UNION ALL SELECT ALL v0.c0 FROM vt0, v0 GROUP BY v0.c0 HAVING ((GROUP_CONCAT(vt0.c0 COLLATE BINARY)) ISNULL);
SELECT ALL v0.c0 FROM vt0, v0 GROUP BY v0.c0;
SELECT v0.c0 FROM vt0, v0 GROUP BY v0.c0 HAVING GROUP_CONCAT(vt0.c0 COLLATE BINARY) UNION ALL SELECT v0.c0 FROM vt0, v0 GROUP BY v0.c0 HAVING (NOT (GROUP_CONCAT(vt0.c0 COLLATE BINARY))) UNION ALL SELECT ALL v0.c0 FROM vt0, v0 GROUP BY v0.c0 HAVING ((GROUP_CONCAT(vt0.c0 COLLATE BINARY)) ISNULL);
SELECT ALL v0.c0 FROM vt0, v0 GROUP BY v0.c0;
SELECT ALL vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE (CASE WHEN vt0.c0 THEN vt0.c0 END COLLATE RTRIM) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (CASE WHEN vt0.c0 THEN vt0.c0 END COLLATE RTRIM))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 END COLLATE RTRIM) ISNULL));
SELECT ALL vt0.c0 FROM vt0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (LOWER(CASE v0.c0  WHEN x'' THEN v0.c0 END)) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (LOWER(CASE v0.c0  WHEN x'' THEN v0.c0 END)))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((LOWER(CASE v0.c0  WHEN x'' THEN v0.c0 END)) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE ((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))!=(((vt0.c0) NOTNULL)))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT ((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))<>(((vt0.c0) NOTNULL)))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))<>(((vt0.c0) NOTNULL)))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0, v0.c0 FROM vt0 CROSS JOIN v0 ON ((((((((UNLIKELY(v0.c0))AND(x'')))AND((((vt0.c0)) BETWEEN ((v0.c0)) AND ((vt0.c0))))))OR(((NULL)||(vt0.c0)))))OR(((vt0.c0) BETWEEN (vt0.c0) AND (v0.c0)))) GROUP BY vt0.c0, v0.c0;
SELECT vt0.c0, v0.c0 FROM vt0 CROSS JOIN v0 ON ((((((((UNLIKELY(v0.c0))AND(x'')))AND((((vt0.c0)) BETWEEN ((v0.c0)) AND ((vt0.c0))))))OR(((NULL)||(vt0.c0)))))OR(((vt0.c0) BETWEEN (vt0.c0) AND (v0.c0)))) GROUP BY vt0.c0, v0.c0 HAVING (((TOTAL(v0.c0) IN ()))<>(COUNT(*))) UNION ALL SELECT ALL vt0.c0, v0.c0 FROM vt0 CROSS JOIN v0 ON ((((((((UNLIKELY(v0.c0))AND(x'')))AND((((vt0.c0)) BETWEEN ((v0.c0)) AND ((vt0.c0))))))OR(((NULL)||(vt0.c0)))))OR(((vt0.c0) BETWEEN (vt0.c0) AND (v0.c0)))) GROUP BY vt0.c0, v0.c0 HAVING (NOT ((((TOTAL(v0.c0) IN ()))!=(COUNT(*))))) UNION ALL SELECT ALL vt0.c0, v0.c0 FROM vt0 CROSS JOIN v0 ON ((((((((UNLIKELY(v0.c0))AND(x'')))AND((((vt0.c0)) BETWEEN ((v0.c0)) AND ((vt0.c0))))))OR(((NULL)||(vt0.c0)))))OR(((vt0.c0) BETWEEN (vt0.c0) AND (v0.c0)))) GROUP BY vt0.c0, v0.c0 HAVING (((((TOTAL(v0.c0) IN ()))<>(COUNT(*)))) ISNULL);
SELECT ALL vt0.c0, v0.c0 FROM vt0 CROSS JOIN v0 ON ((((((((UNLIKELY(v0.c0))AND(x'')))AND((((vt0.c0)) BETWEEN ((v0.c0)) AND ((vt0.c0))))))OR(((NULL)||(vt0.c0)))))OR(((vt0.c0) BETWEEN (vt0.c0) AND (v0.c0)))) GROUP BY vt0.c0, v0.c0;
SELECT vt0.c0, v0.c0 FROM vt0 CROSS JOIN v0 ON ((((((((UNLIKELY(v0.c0))AND(x'')))AND((((vt0.c0)) BETWEEN ((v0.c0)) AND ((vt0.c0))))))OR(((NULL)||(vt0.c0)))))OR(((vt0.c0) BETWEEN (vt0.c0) AND (v0.c0)))) GROUP BY vt0.c0, v0.c0 HAVING (((TOTAL(v0.c0) IN ()))<>(COUNT(*))) UNION ALL SELECT ALL vt0.c0, v0.c0 FROM vt0 CROSS JOIN v0 ON ((((((((UNLIKELY(v0.c0))AND(x'')))AND((((vt0.c0)) BETWEEN ((v0.c0)) AND ((vt0.c0))))))OR(((NULL)||(vt0.c0)))))OR(((vt0.c0) BETWEEN (vt0.c0) AND (v0.c0)))) GROUP BY vt0.c0, v0.c0 HAVING (NOT ((((TOTAL(v0.c0) IN ()))!=(COUNT(*))))) UNION ALL SELECT ALL vt0.c0, v0.c0 FROM vt0 CROSS JOIN v0 ON ((((((((UNLIKELY(v0.c0))AND(x'')))AND((((vt0.c0)) BETWEEN ((v0.c0)) AND ((vt0.c0))))))OR(((NULL)||(vt0.c0)))))OR(((vt0.c0) BETWEEN (vt0.c0) AND (v0.c0)))) GROUP BY vt0.c0, v0.c0 HAVING (((((TOTAL(v0.c0) IN ()))<>(COUNT(*)))) ISNULL);
SELECT ALL vt0.c0, v0.c0 FROM vt0 CROSS JOIN v0 ON ((((((((UNLIKELY(v0.c0))AND(x'')))AND((((vt0.c0)) BETWEEN ((v0.c0)) AND ((vt0.c0))))))OR(((NULL)||(vt0.c0)))))OR(((vt0.c0) BETWEEN (vt0.c0) AND (v0.c0)))) GROUP BY vt0.c0, v0.c0;
SELECT ALL * FROM v0, vt0;
SELECT ALL * FROM v0, vt0 WHERE (((((vt0.c0)!=(v0.c0)))&(v0.c0 COLLATE RTRIM))) UNION ALL SELECT * FROM v0, vt0 WHERE ((NOT (((((vt0.c0)<>(v0.c0)))&(v0.c0 COLLATE RTRIM))))) UNION ALL SELECT * FROM v0, vt0 WHERE (((((((vt0.c0)<>(v0.c0)))&(v0.c0 COLLATE RTRIM))) ISNULL));
SELECT ALL * FROM v0, vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) NOT BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) AND ('0.18705393113304358'))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) NOT BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) AND ('0.18705393113304358'))))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) NOT BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) AND ('0.18705393113304358'))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0;
SELECT v0.c0, vt0.c0 FROM vt0, v0 WHERE (UNLIKELY(DISTINCT ((vt0.c0)>>(vt0.c0)))) GROUP BY v0.c0, vt0.c0 UNION SELECT v0.c0, vt0.c0 FROM vt0, v0 WHERE ((NOT (UNLIKELY(DISTINCT ((vt0.c0)>>(vt0.c0)))))) GROUP BY v0.c0, vt0.c0 UNION SELECT ALL v0.c0, vt0.c0 FROM vt0, v0 WHERE (((UNLIKELY(DISTINCT ((vt0.c0)>>(vt0.c0)))) ISNULL)) GROUP BY v0.c0, vt0.c0;
SELECT ALL v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT(vt0.c0)) BETWEEN ((~ (vt0.c0))) AND (MAX(AVG(AVG(vt0.c0))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (((COUNT(vt0.c0)) BETWEEN ((~ (vt0.c0))) AND (MAX(AVG(AVG(vt0.c0))))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((COUNT(vt0.c0)) BETWEEN ((~ (vt0.c0))) AND (MAX(AVG(AVG(vt0.c0)))))) ISNULL);
SELECT ALL MIN(CASE WHEN load_extension(vt0.c0) THEN (((((((('-1699230230')AND(vt0.c0)))OR(v0.c0)))OR(v0.c0)))AND(vt0.c0)) ELSE '' END) FROM vt0, v0;
SELECT ALL * FROM vt0;
SELECT ALL * FROM vt0 WHERE (((vt0.c0 COLLATE NOCASE)|((vt0.c0 IN (vt0.c0))))) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (((vt0.c0 COLLATE NOCASE)|((vt0.c0 IN (vt0.c0))))))) UNION ALL SELECT ALL * FROM vt0 WHERE (((((vt0.c0 COLLATE NOCASE)|((vt0.c0 IN (vt0.c0))))) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((TRIM(vt0.c0, vt0.c0) IN ())) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT ((TRIM(vt0.c0, vt0.c0) IN ())))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((((TRIM(vt0.c0, vt0.c0) IN ())) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT ALL v0.c0 FROM v0, vt0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0, vt0 WHERE (((((CAST(v0.c0 AS REAL))OR(vt0.c0 COLLATE RTRIM)))AND((- (v0.c0))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0, vt0 WHERE ((NOT (((((CAST(v0.c0 AS REAL))OR(vt0.c0 COLLATE RTRIM)))AND((- (v0.c0))))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0, vt0 WHERE (((((((CAST(v0.c0 AS REAL))OR(vt0.c0 COLLATE RTRIM)))AND((- (v0.c0))))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0, vt0 GROUP BY v0.c0;
SELECT v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0;
SELECT v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0 HAVING COUNT(((AVG(v0.c0))%(vt0.c0))) UNION ALL SELECT v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0 HAVING (NOT (COUNT(((AVG(v0.c0))%(vt0.c0))))) UNION ALL SELECT ALL v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0 HAVING ((COUNT(((AVG(v0.c0))%(vt0.c0)))) ISNULL);
SELECT v0.c0 FROM v0;
SELECT v0.c0 FROM v0 WHERE (NULL) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE ((NOT (NULL))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE (((NULL) ISNULL));
SELECT v0.c0 FROM v0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE ((((vt0.c0)%(vt0.c0)) IN ())) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT ((((vt0.c0)%(vt0.c0)) IN ())))) UNION SELECT DISTINCT * FROM vt0 WHERE ((((((vt0.c0)%(vt0.c0)) IN ())) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (vt0.c0) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (vt0.c0))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((vt0.c0) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING CASE (v0.c0 IN ())  WHEN AVG(TOTAL(MIN(v0.c0))) THEN (+ (AVG(v0.c0))) WHEN (NOT (GROUP_CONCAT(COUNT(COUNT(MAX(AVG(v0.c0))))))) THEN TOTAL(AVG(COUNT(v0.c0))) WHEN x'80ba' THEN AVG(v0.c0) END UNION ALL SELECT ALL v0.c0 FROM v0 NOT INDEXED GROUP BY v0.c0 HAVING (NOT (CASE (v0.c0 IN ())  WHEN AVG(TOTAL(MIN(v0.c0))) THEN (+ (AVG(v0.c0))) WHEN (NOT (GROUP_CONCAT(COUNT(COUNT(MAX(AVG(v0.c0))))))) THEN TOTAL(AVG(COUNT(v0.c0))) WHEN x'80ba' THEN AVG(v0.c0) END)) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((CASE (v0.c0 IN ())  WHEN AVG(TOTAL(MIN(v0.c0))) THEN (+ (AVG(v0.c0))) WHEN (NOT (GROUP_CONCAT(COUNT(COUNT(MAX(AVG(v0.c0))))))) THEN TOTAL(AVG(COUNT(v0.c0))) WHEN x'80ba' THEN AVG(v0.c0) END) ISNULL);
SELECT ALL MAX(NULLIF(((vt0.c0)<(vt0.c0)), vt0.c0)) FROM vt0;
SELECT ALL vt0.c0 FROM v0 NATURAL JOIN vt0;
SELECT vt0.c0 FROM v0 NATURAL JOIN vt0 WHERE ((CASE WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN v0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END IN (CASE WHEN v0.c0 THEN v0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN vt0.c0 ELSE vt0.c0 END, ((((v0.c0)OR(v0.c0)))OR(v0.c0)), NULL))) UNION ALL SELECT vt0.c0 FROM v0 NATURAL JOIN vt0 WHERE ((NOT ((CASE WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN v0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END IN (CASE WHEN v0.c0 THEN v0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN vt0.c0 ELSE vt0.c0 END, ((((v0.c0)OR(v0.c0)))OR(v0.c0)), NULL))))) UNION ALL SELECT vt0.c0 FROM v0 NATURAL JOIN vt0 WHERE ((((CASE WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN v0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END IN (CASE WHEN v0.c0 THEN v0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN vt0.c0 ELSE vt0.c0 END, ((((v0.c0)OR(v0.c0)))OR(v0.c0)), NULL))) ISNULL));
SELECT ALL vt0.c0 FROM v0 NATURAL JOIN vt0;
SELECT DISTINCT vt0.c0, v0.c0 FROM v0, vt0;
SELECT DISTINCT vt0.c0, v0.c0 FROM v0, vt0 WHERE ('-932703558' COLLATE RTRIM) UNION SELECT DISTINCT vt0.c0, v0.c0 FROM v0, vt0 WHERE ((NOT ('-932703558' COLLATE RTRIM))) UNION SELECT DISTINCT vt0.c0, v0.c0 FROM v0, vt0 WHERE ((('-932703558' COLLATE RTRIM) ISNULL));
SELECT DISTINCT vt0.c0, v0.c0 FROM v0, vt0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (LOWER(v0.c0 COLLATE NOCASE)) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (LOWER(v0.c0 COLLATE NOCASE)))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((LOWER(v0.c0 COLLATE NOCASE)) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT vt0.c0 FROM v0 LEFT OUTER JOIN vt0 ON (~ (((0.9434671177589226)GLOB(vt0.c0)))) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM v0 LEFT OUTER JOIN vt0 ON (~ (((0.9434671177589226)GLOB(vt0.c0)))) GROUP BY vt0.c0 HAVING (NOT (MIN(vt0.c0))) UNION ALL SELECT ALL vt0.c0 FROM v0 LEFT OUTER JOIN vt0 ON (~ (((0.9434671177589226)GLOB(vt0.c0)))) GROUP BY vt0.c0 HAVING (NOT ((NOT (MIN(vt0.c0))))) UNION ALL SELECT vt0.c0 FROM v0 LEFT OUTER JOIN vt0 ON (~ (((0.9434671177589226)GLOB(vt0.c0)))) GROUP BY vt0.c0 HAVING (((NOT (MIN(vt0.c0)))) ISNULL);
SELECT vt0.c0 FROM v0 LEFT OUTER JOIN vt0 ON (~ (((0.9434671177589226)GLOB(vt0.c0)))) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM v0 LEFT OUTER JOIN vt0 ON (~ (((0.9434671177589226)GLOB(vt0.c0)))) GROUP BY vt0.c0 HAVING (NOT (MIN(vt0.c0))) UNION ALL SELECT ALL vt0.c0 FROM v0 LEFT OUTER JOIN vt0 ON (~ (((0.9434671177589226)GLOB(vt0.c0)))) GROUP BY vt0.c0 HAVING (NOT ((NOT (MIN(vt0.c0))))) UNION ALL SELECT vt0.c0 FROM v0 LEFT OUTER JOIN vt0 ON (~ (((0.9434671177589226)GLOB(vt0.c0)))) GROUP BY vt0.c0 HAVING (((NOT (MIN(vt0.c0)))) ISNULL);
SELECT vt0.c0 FROM v0 LEFT OUTER JOIN vt0 ON (~ (((0.9434671177589226)GLOB(vt0.c0)))) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE (LOWER(CASE WHEN NULL THEN vt0.c0 END)) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (LOWER(CASE WHEN NULL THEN vt0.c0 END)))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE (((LOWER(CASE WHEN NULL THEN vt0.c0 END)) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT * FROM vt0, v0;
SELECT DISTINCT * FROM vt0, v0 WHERE ((((+ (vt0.c0))) NOTNULL)) UNION SELECT DISTINCT * FROM vt0, v0 WHERE ((NOT ((((+ (vt0.c0))) NOTNULL)))) UNION SELECT DISTINCT * FROM vt0, v0 WHERE ((((((+ (vt0.c0))) NOTNULL)) ISNULL));
SELECT DISTINCT * FROM vt0, v0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE ((- (PRINTF(v0.c0)))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT ((- (PRINTF(v0.c0)))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((((- (PRINTF(v0.c0)))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING MIN(LIKE(vt0.c0, '-156207441', '㢤')) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (MIN(LIKE(vt0.c0, '-156207441', '㢤')))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((MIN(LIKE(vt0.c0, '-156207441', '㢤'))) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING MIN(LIKE(vt0.c0, '-156207441', '㢤')) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (MIN(LIKE(vt0.c0, '-156207441', '㢤')))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((MIN(LIKE(vt0.c0, '-156207441', '㢤'))) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL * FROM vt0, v0;
SELECT * FROM vt0, v0 WHERE ((((v0.c0 IN (v0.c0)))|(CASE WHEN v0.c0 THEN v0.c0 ELSE vt0.c0 END))) UNION ALL SELECT ALL * FROM vt0, v0 WHERE ((NOT ((((v0.c0 IN (v0.c0)))|(CASE WHEN v0.c0 THEN v0.c0 ELSE vt0.c0 END))))) UNION ALL SELECT ALL * FROM vt0, v0 WHERE ((((((v0.c0 IN (v0.c0)))|(CASE WHEN v0.c0 THEN v0.c0 ELSE vt0.c0 END))) ISNULL));
SELECT ALL * FROM vt0, v0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE ((+ ((((v0.c0))>((v0.c0)))))) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT ((+ ((((v0.c0))>((v0.c0)))))))) UNION SELECT DISTINCT * FROM v0 WHERE ((((+ ((((v0.c0))>((v0.c0)))))) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE ((('aq䜒?OBf<')<=(((vt0.c0)&(vt0.c0))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT ((('aq䜒?OBf<')<=(((vt0.c0)&(vt0.c0))))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((((('aq䜒?OBf<')<=(((vt0.c0)&(vt0.c0))))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0, v0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0, v0 GROUP BY vt0.c0 HAVING GROUP_CONCAT(COUNT(GROUP_CONCAT(COUNT(*)))) UNION ALL SELECT vt0.c0 FROM vt0, v0 GROUP BY vt0.c0 HAVING (NOT (GROUP_CONCAT(COUNT(GROUP_CONCAT(COUNT(*)))))) UNION ALL SELECT vt0.c0 FROM vt0, v0 GROUP BY vt0.c0 HAVING ((GROUP_CONCAT(COUNT(GROUP_CONCAT(COUNT(*))))) ISNULL);
SELECT vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE ((- (CAST(vt0.c0 AS REAL)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT ((- (CAST(vt0.c0 AS REAL)))))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((((- (CAST(vt0.c0 AS REAL)))) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE ((((((v0.c0)) BETWEEN ((v0.c0)) AND ((0.1967278794956434)))) NOTNULL)) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT ((((((v0.c0)) BETWEEN ((v0.c0)) AND ((0.1967278794956434)))) NOTNULL)))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((((((((v0.c0)) BETWEEN ((v0.c0)) AND ((0.1967278794956434)))) NOTNULL)) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0;
SELECT vt0.c0, v0.c0 FROM vt0, v0 WHERE (((CAST(v0.c0 AS BLOB)) IS FALSE)) GROUP BY vt0.c0, v0.c0 UNION SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 WHERE ((NOT (((CAST(v0.c0 AS BLOB)) IS FALSE)))) GROUP BY vt0.c0, v0.c0 UNION SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 WHERE (((((CAST(v0.c0 AS BLOB)) IS FALSE)) ISNULL)) GROUP BY vt0.c0, v0.c0;
SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 NOT INDEXED GROUP BY vt0.c0 HAVING NULL UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (NULL)) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((NULL) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 NOT INDEXED GROUP BY vt0.c0 HAVING NULL UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (NULL)) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((NULL) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0, v0.c0 FROM v0, vt0;
SELECT vt0.c0, v0.c0 FROM v0, vt0 WHERE (((v0.c0)>=((('-1221969756')-(v0.c0))))) UNION ALL SELECT ALL vt0.c0, v0.c0 FROM v0, vt0 WHERE ((NOT (((v0.c0)>=((('-1221969756')-(v0.c0))))))) UNION ALL SELECT ALL vt0.c0, v0.c0 FROM v0, vt0 WHERE (((((v0.c0)>=((('-1221969756')-(v0.c0))))) ISNULL));
SELECT ALL vt0.c0, v0.c0 FROM v0, vt0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE ((((LIKELIHOOD(v0.c0, 0.7038264492384809), (+ (v0.c0)), CAST(v0.c0 AS INTEGER)))==(((v0.c0 IN ()), ((v0.c0)LIKE(v0.c0)), ((x'') NOT BETWEEN (v0.c0) AND (v0.c0)))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT ((((LIKELIHOOD(v0.c0, 0.7038264492384809), (+ (v0.c0)), CAST(v0.c0 AS INTEGER)))==(((v0.c0 IN ()), ((v0.c0)LIKE(v0.c0)), ((x'') NOT BETWEEN (v0.c0) AND (v0.c0)))))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((((((LIKELIHOOD(v0.c0, 0.7038264492384809), (+ (v0.c0)), CAST(v0.c0 AS INTEGER)))==(((v0.c0 IN ()), ((v0.c0)LIKE(v0.c0)), ((x'') NOT BETWEEN (v0.c0) AND (v0.c0)))))) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT ALL v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0;
SELECT ALL v0.c0, vt0.c0 FROM vt0, v0 WHERE ((v0.c0 IN ())) GROUP BY v0.c0, vt0.c0 UNION SELECT v0.c0, vt0.c0 FROM vt0, v0 WHERE ((NOT ((v0.c0 IN ())))) GROUP BY v0.c0, vt0.c0 UNION SELECT ALL v0.c0, vt0.c0 FROM vt0, v0 WHERE ((((v0.c0 IN ())) ISNULL)) GROUP BY v0.c0, vt0.c0;
SELECT ALL v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((AVG(v0.c0)) BETWEEN ((- (COUNT(v0.c0)))) AND (((COUNT(*)) BETWEEN (AVG(v0.c0)) AND (v0.c0)))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (((AVG(v0.c0)) BETWEEN ((- (COUNT(v0.c0)))) AND (((COUNT(*)) BETWEEN (AVG(v0.c0)) AND (v0.c0)))))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((((AVG(v0.c0)) BETWEEN ((- (COUNT(v0.c0)))) AND (((COUNT(*)) BETWEEN (AVG(v0.c0)) AND (v0.c0))))) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((AVG(v0.c0)) BETWEEN ((- (COUNT(v0.c0)))) AND (((COUNT(*)) BETWEEN (AVG(v0.c0)) AND (v0.c0)))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (((AVG(v0.c0)) BETWEEN ((- (COUNT(v0.c0)))) AND (((COUNT(*)) BETWEEN (AVG(v0.c0)) AND (v0.c0)))))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((((AVG(v0.c0)) BETWEEN ((- (COUNT(v0.c0)))) AND (((COUNT(*)) BETWEEN (AVG(v0.c0)) AND (v0.c0))))) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT * FROM vt0 NOT INDEXED;
SELECT * FROM vt0 WHERE (vt0.c0) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (vt0.c0))) UNION ALL SELECT * FROM vt0 WHERE (((vt0.c0) ISNULL));
SELECT * FROM vt0 NOT INDEXED;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (COALESCE(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), json_array_length(vt0.c0, vt0.c0))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (COALESCE(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), json_array_length(vt0.c0, vt0.c0))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((COALESCE(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), json_array_length(vt0.c0, vt0.c0))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT ALL v0.c0 FROM vt0, v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM vt0, v0 WHERE (CHAR((((v0.c0))>((v0.c0))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM vt0, v0 WHERE ((NOT (CHAR((((v0.c0))>((v0.c0))))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM vt0, v0 WHERE (((CHAR((((v0.c0))>((v0.c0))))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM vt0, v0 GROUP BY v0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING COUNT(*) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING COUNT(*) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT * FROM v0 INNER JOIN vt0 ON ((- (vt0.c0)) IN ((NOT (v0.c0)), highlight(v0.c0, v0.c0, v0.c0, v0.c0)));
SELECT * FROM v0 INNER JOIN vt0 ON ((- (vt0.c0)) IN ((NOT (v0.c0)), highlight(v0.c0, v0.c0, v0.c0, v0.c0))) WHERE ('IX') UNION ALL SELECT * FROM v0 INNER JOIN vt0 ON ((- (vt0.c0)) IN ((NOT (v0.c0)), highlight(v0.c0, v0.c0, v0.c0, v0.c0))) WHERE ((NOT ('IX'))) UNION ALL SELECT ALL * FROM v0 INNER JOIN vt0 ON ((- (vt0.c0)) IN ((NOT (v0.c0)), highlight(v0.c0, v0.c0, v0.c0, v0.c0))) WHERE ((('IX') ISNULL));
SELECT * FROM v0 INNER JOIN vt0 ON ((- (vt0.c0)) IN ((NOT (v0.c0)), highlight(v0.c0, v0.c0, v0.c0, v0.c0)));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (((vt0.c0) NOT NULL)))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT ((NOT (((vt0.c0) NOT NULL)))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((((NOT (((vt0.c0) NOT NULL)))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT v0.c0, vt0.c0 FROM v0 LEFT OUTER JOIN vt0 ON INSTR(((vt0.c0)-(vt0.c0)), ((v0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0))) GROUP BY v0.c0, vt0.c0;
SELECT ALL v0.c0, vt0.c0 FROM v0 LEFT OUTER JOIN vt0 ON INSTR(((vt0.c0)-(vt0.c0)), ((v0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0))) WHERE ((((((v0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) NOT BETWEEN (CAST(vt0.c0 AS INTEGER)) AND ((v0.c0 IN ())))) GROUP BY v0.c0, vt0.c0 UNION SELECT v0.c0, vt0.c0 FROM v0 LEFT OUTER JOIN vt0 ON INSTR(((vt0.c0)-(vt0.c0)), ((v0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0))) WHERE ((NOT ((((((v0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) NOT BETWEEN (CAST(vt0.c0 AS INTEGER)) AND ((v0.c0 IN ())))))) GROUP BY v0.c0, vt0.c0 UNION SELECT ALL v0.c0, vt0.c0 FROM v0 LEFT OUTER JOIN vt0 ON INSTR(((vt0.c0)-(vt0.c0)), ((v0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0))) WHERE ((((((((v0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) NOT BETWEEN (CAST(vt0.c0 AS INTEGER)) AND ((v0.c0 IN ())))) ISNULL)) GROUP BY v0.c0, vt0.c0;
SELECT v0.c0, vt0.c0 FROM v0 LEFT OUTER JOIN vt0 ON INSTR(((vt0.c0)-(vt0.c0)), ((v0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0))) GROUP BY v0.c0, vt0.c0;
SELECT v0.c0, vt0.c0 FROM v0 FULL OUTER JOIN vt0 ON ((CAST(v0.c0 AS TEXT)) NOT BETWEEN ((((vt0.c0))>=((v0.c0)))) AND (LIKELIHOOD(v0.c0, 0.499805452796078))) GROUP BY v0.c0, vt0.c0;
SELECT v0.c0, vt0.c0 FROM v0 FULL OUTER JOIN vt0 ON ((CAST(v0.c0 AS TEXT)) NOT BETWEEN ((((vt0.c0))>=((v0.c0)))) AND (LIKELIHOOD(v0.c0, 0.499805452796078))) GROUP BY v0.c0, vt0.c0 HAVING MAX(((v0.c0)IS(vt0.c0))) UNION ALL SELECT v0.c0, vt0.c0 FROM v0 FULL OUTER JOIN vt0 ON ((CAST(v0.c0 AS TEXT)) NOT BETWEEN ((((vt0.c0))>=((v0.c0)))) AND (LIKELIHOOD(v0.c0, 0.499805452796078))) GROUP BY v0.c0, vt0.c0 HAVING (NOT (MAX(((v0.c0)IS(vt0.c0))))) UNION ALL SELECT v0.c0, vt0.c0 FROM v0 FULL OUTER JOIN vt0 ON ((CAST(v0.c0 AS TEXT)) NOT BETWEEN ((((vt0.c0))>=((v0.c0)))) AND (LIKELIHOOD(v0.c0, 0.499805452796078))) GROUP BY v0.c0, vt0.c0 HAVING ((MAX(((v0.c0)IS(vt0.c0)))) ISNULL);
SELECT v0.c0, vt0.c0 FROM v0 FULL OUTER JOIN vt0 ON ((CAST(v0.c0 AS TEXT)) NOT BETWEEN ((((vt0.c0))>=((v0.c0)))) AND (LIKELIHOOD(v0.c0, 0.499805452796078))) GROUP BY v0.c0, vt0.c0;
SELECT v0.c0, vt0.c0 FROM v0 FULL OUTER JOIN vt0 ON ((CAST(v0.c0 AS TEXT)) NOT BETWEEN ((((vt0.c0))>=((v0.c0)))) AND (LIKELIHOOD(v0.c0, 0.499805452796078))) GROUP BY v0.c0, vt0.c0 HAVING MAX(((v0.c0)IS(vt0.c0))) UNION ALL SELECT v0.c0, vt0.c0 FROM v0 FULL OUTER JOIN vt0 ON ((CAST(v0.c0 AS TEXT)) NOT BETWEEN ((((vt0.c0))>=((v0.c0)))) AND (LIKELIHOOD(v0.c0, 0.499805452796078))) GROUP BY v0.c0, vt0.c0 HAVING (NOT (MAX(((v0.c0)IS(vt0.c0))))) UNION ALL SELECT v0.c0, vt0.c0 FROM v0 FULL OUTER JOIN vt0 ON ((CAST(v0.c0 AS TEXT)) NOT BETWEEN ((((vt0.c0))>=((v0.c0)))) AND (LIKELIHOOD(v0.c0, 0.499805452796078))) GROUP BY v0.c0, vt0.c0 HAVING ((MAX(((v0.c0)IS(vt0.c0)))) ISNULL);
SELECT v0.c0, vt0.c0 FROM v0 FULL OUTER JOIN vt0 ON ((CAST(v0.c0 AS TEXT)) NOT BETWEEN ((((vt0.c0))>=((v0.c0)))) AND (LIKELIHOOD(v0.c0, 0.499805452796078))) GROUP BY v0.c0, vt0.c0;
SELECT * FROM vt0, v0;
SELECT ALL * FROM vt0, v0 WHERE ((((v0.c0) BETWEEN (v0.c0) AND (vt0.c0)) IN ())) UNION ALL SELECT ALL * FROM vt0, v0 WHERE ((NOT ((((v0.c0) BETWEEN (v0.c0) AND (vt0.c0)) IN ())))) UNION ALL SELECT * FROM vt0, v0 WHERE ((((((v0.c0) BETWEEN (v0.c0) AND (vt0.c0)) IN ())) ISNULL));
SELECT * FROM vt0, v0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (0.7277330656167499) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (0.7277330656167499))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((0.7277330656167499) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT ALL v0.c0 FROM vt0, v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM vt0, v0 WHERE ((((vt0.c0 IN (0.390496695787513, vt0.c0))) NOT BETWEEN (CAST(vt0.c0 AS TEXT)) AND (((((vt0.c0)AND(vt0.c0)))AND(0X734826a8))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM vt0, v0 WHERE ((NOT ((((vt0.c0 IN (0.390496695787513, vt0.c0))) NOT BETWEEN (CAST(vt0.c0 AS TEXT)) AND (((((vt0.c0)AND(vt0.c0)))AND(0x734826a8))))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM vt0, v0 WHERE ((((((vt0.c0 IN (0.390496695787513, vt0.c0))) NOT BETWEEN (CAST(vt0.c0 AS TEXT)) AND (((((vt0.c0)AND(vt0.c0)))AND(0x734826a8))))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM vt0, v0 GROUP BY v0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING 0.3311728241571681 UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (0.3311728241571681)) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((0.3311728241571681) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING 0.3311728241571681 UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (0.3311728241571681)) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((0.3311728241571681) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL MIN((((CAST(x'4734' AS TEXT)))=((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))))) FROM v0 ORDER BY ((0.36643577961428286) BETWEEN (((v0.c0) NOTNULL)) AND (NULL)) DESC, (- (v0.c0)) COLLATE RTRIM COLLATE BINARY ASC;
SELECT ALL v0.c0 FROM v0;
SELECT v0.c0 FROM v0 WHERE ((((((v0.c0 IN (v0.c0)))AND(((0X64d1f9cd) ISNULL))))OR(v0.c0 COLLATE NOCASE))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE ((NOT ((((((v0.c0 IN (v0.c0)))AND(((0x64d1f9cd) ISNULL))))OR(v0.c0 COLLATE NOCASE))))) UNION ALL SELECT v0.c0 FROM v0 WHERE ((((((((v0.c0 IN (v0.c0)))AND(((0X64d1f9cd) ISNULL))))OR(v0.c0 COLLATE NOCASE))) ISNULL));
SELECT ALL v0.c0 FROM v0;
SELECT DISTINCT vt0.c0, v0.c0 FROM vt0 LEFT OUTER JOIN v0 ON ((CASE WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)<=('\6'));
SELECT DISTINCT vt0.c0, v0.c0 FROM vt0 LEFT OUTER JOIN v0 ON ((CASE WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)<=('\6')) WHERE (UPPER((((v0.c0, vt0.c0, v0.c0)) BETWEEN ((vt0.c0, v0.c0, vt0.c0)) AND ((v0.c0, vt0.c0, v0.c0))))) UNION SELECT DISTINCT vt0.c0, v0.c0 FROM vt0 LEFT OUTER JOIN v0 ON ((CASE WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)<=('\6')) WHERE ((NOT (UPPER((((v0.c0, vt0.c0, v0.c0)) BETWEEN ((vt0.c0, v0.c0, vt0.c0)) AND ((v0.c0, vt0.c0, v0.c0))))))) UNION SELECT DISTINCT vt0.c0, v0.c0 FROM vt0 LEFT OUTER JOIN v0 ON ((CASE WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)<=('\6')) WHERE (((UPPER((((v0.c0, vt0.c0, v0.c0)) BETWEEN ((vt0.c0, v0.c0, vt0.c0)) AND ((v0.c0, vt0.c0, v0.c0))))) ISNULL));
SELECT DISTINCT vt0.c0, v0.c0 FROM vt0 LEFT OUTER JOIN v0 ON ((CASE WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)<=('\6'));
SELECT vt0.c0 FROM vt0, v0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, v0 WHERE (CASE CASE 0.20868107341699849  WHEN vt0.c0 THEN v0.c0 WHEN x'' THEN v0.c0 WHEN v0.c0 THEN v0.c0 END  WHEN ((vt0.c0)<=(v0.c0)) THEN ((vt0.c0)>=(vt0.c0)) END) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0, v0 WHERE ((NOT (CASE CASE 0.20868107341699849  WHEN vt0.c0 THEN v0.c0 WHEN x'' THEN v0.c0 WHEN v0.c0 THEN v0.c0 END  WHEN ((vt0.c0)<=(v0.c0)) THEN ((vt0.c0)>=(vt0.c0)) END))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0, v0 WHERE (((CASE CASE 0.20868107341699849  WHEN vt0.c0 THEN v0.c0 WHEN x'' THEN v0.c0 WHEN v0.c0 THEN v0.c0 END  WHEN ((vt0.c0)<=(v0.c0)) THEN ((vt0.c0)>=(vt0.c0)) END) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0, v0 GROUP BY vt0.c0;
SELECT vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0;
SELECT ALL vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0 HAVING '545987432' UNION ALL SELECT vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0 HAVING (NOT ('545987432')) UNION ALL SELECT vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0 HAVING (('545987432') ISNULL);
SELECT vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0;
SELECT ALL vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0 HAVING '545987432' UNION ALL SELECT vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0 HAVING (NOT ('545987432')) UNION ALL SELECT vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0 HAVING (('545987432') ISNULL);
SELECT vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0;
SELECT vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE ((- (((0.1788877523485014)<(vt0.c0))))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT ((- (((0.1788877523485014)<(vt0.c0))))))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((((- (((0.1788877523485014)<(vt0.c0))))) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0, v0.c0 FROM v0 LEFT OUTER JOIN vt0 ON ((COALESCE(DISTINCT vt0.c0, vt0.c0))>>(CAST(vt0.c0 AS INTEGER)));
SELECT DISTINCT vt0.c0, v0.c0 FROM v0 LEFT OUTER JOIN vt0 ON ((COALESCE(DISTINCT vt0.c0, vt0.c0))>>(CAST(vt0.c0 AS INTEGER))) WHERE (((NULL) NOTNULL)) UNION SELECT DISTINCT vt0.c0, v0.c0 FROM v0 LEFT OUTER JOIN vt0 ON ((COALESCE(DISTINCT vt0.c0, vt0.c0))>>(CAST(vt0.c0 AS INTEGER))) WHERE ((NOT (((NULL) NOTNULL)))) UNION SELECT DISTINCT vt0.c0, v0.c0 FROM v0 LEFT OUTER JOIN vt0 ON ((COALESCE(DISTINCT vt0.c0, vt0.c0))>>(CAST(vt0.c0 AS INTEGER))) WHERE (((((NULL) NOTNULL)) ISNULL));
SELECT DISTINCT vt0.c0, v0.c0 FROM v0 LEFT OUTER JOIN vt0 ON ((COALESCE(DISTINCT vt0.c0, vt0.c0))>>(CAST(vt0.c0 AS INTEGER)));
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (ABS(DISTINCT ((v0.c0)/(v0.c0)))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT (ABS(DISTINCT ((v0.c0)/(v0.c0)))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE (((ABS(DISTINCT ((v0.c0)/(v0.c0)))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT(*)) IS TRUE) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (((COUNT(*)) IS TRUE))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((COUNT(*)) IS TRUE)) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT(*)) IS TRUE) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (((COUNT(*)) IS TRUE))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((COUNT(*)) IS TRUE)) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL * FROM v0;
SELECT * FROM v0 WHERE ((((v0.c0)) NOT BETWEEN ((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))) AND ((((v0.c0)/(v0.c0)))))) UNION ALL SELECT ALL * FROM v0 WHERE ((NOT ((((v0.c0)) NOT BETWEEN ((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))) AND ((((v0.c0)/(v0.c0)))))))) UNION ALL SELECT * FROM v0 WHERE ((((((v0.c0)) NOT BETWEEN ((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))) AND ((((v0.c0)/(v0.c0)))))) ISNULL));
SELECT ALL * FROM v0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE ((NOT ((- (vt0.c0))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT ((NOT ((- (vt0.c0))))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((((NOT ((- (vt0.c0))))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (((((((((CAST(NULL AS NUMERIC))OR(((vt0.c0)+(vt0.c0)))))OR(((vt0.c0)!=(vt0.c0)))))OR(((vt0.c0)=(vt0.c0)))))AND(((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (((((((((CAST(NULL AS NUMERIC))OR(((vt0.c0)+(vt0.c0)))))OR(((vt0.c0)<>(vt0.c0)))))OR(((vt0.c0)==(vt0.c0)))))AND(((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0))))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((((((((((CAST(NULL AS NUMERIC))OR(((vt0.c0)+(vt0.c0)))))OR(((vt0.c0)!=(vt0.c0)))))OR(((vt0.c0)==(vt0.c0)))))AND(((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0))))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING json_extract(CASE vt0.c0  WHEN AVG(COUNT(MAX(SUM(GROUP_CONCAT(COUNT(vt0.c0)))))) THEN vt0.c0 END, AVG(0.01303284764372703), MIN(vt0.c0), GROUP_CONCAT(vt0.c0)) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (json_extract(CASE vt0.c0  WHEN AVG(COUNT(MAX(SUM(GROUP_CONCAT(COUNT(vt0.c0)))))) THEN vt0.c0 END, AVG(0.01303284764372703), MIN(vt0.c0), GROUP_CONCAT(vt0.c0)))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((json_extract(CASE vt0.c0  WHEN AVG(COUNT(MAX(SUM(GROUP_CONCAT(COUNT(vt0.c0)))))) THEN vt0.c0 END, AVG(0.01303284764372703), MIN(vt0.c0), GROUP_CONCAT(vt0.c0))) ISNULL);
SELECT ALL * FROM vt0;
SELECT * FROM vt0 WHERE (((TYPEOF(vt0.c0)) BETWEEN (vt0.c0 COLLATE RTRIM) AND (load_extension(vt0.c0)))) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (((TYPEOF(vt0.c0)) BETWEEN (vt0.c0 COLLATE RTRIM) AND (load_extension(vt0.c0)))))) UNION ALL SELECT ALL * FROM vt0 WHERE (((((TYPEOF(vt0.c0)) BETWEEN (vt0.c0 COLLATE RTRIM) AND (load_extension(vt0.c0)))) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (v0.c0) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (v0.c0))) UNION SELECT DISTINCT * FROM v0 WHERE (((v0.c0) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE ((- (v0.c0))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT ((- (v0.c0))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((((- (v0.c0))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0, vt0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0, vt0 GROUP BY v0.c0 HAVING SUM(LIKELIHOOD(vt0.c0, 0.667919184966007)) UNION ALL SELECT ALL v0.c0 FROM v0, vt0 GROUP BY v0.c0 HAVING (NOT (SUM(LIKELIHOOD(vt0.c0, 0.667919184966007)))) UNION ALL SELECT ALL v0.c0 FROM v0, vt0 GROUP BY v0.c0 HAVING ((SUM(LIKELIHOOD(vt0.c0, 0.667919184966007))) ISNULL);
SELECT v0.c0 FROM v0, vt0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0, vt0 GROUP BY v0.c0 HAVING SUM(LIKELIHOOD(vt0.c0, 0.667919184966007)) UNION ALL SELECT ALL v0.c0 FROM v0, vt0 GROUP BY v0.c0 HAVING (NOT (SUM(LIKELIHOOD(vt0.c0, 0.667919184966007)))) UNION ALL SELECT ALL v0.c0 FROM v0, vt0 GROUP BY v0.c0 HAVING ((SUM(LIKELIHOOD(vt0.c0, 0.667919184966007))) ISNULL);
SELECT v0.c0 FROM v0, vt0 GROUP BY v0.c0;
SELECT ALL TOTAL(((((((vt0.c0)OR(v0.c0)))AND(vt0.c0)))-(CASE v0.c0  WHEN v0.c0 THEN vt0.c0 END))) FROM v0, vt0 ORDER BY (((vt0.c0 IN ()))<(((v0.c0)==(vt0.c0))))  NULLS FIRST, COALESCE(0.020640234070053443, CASE vt0.c0  WHEN vt0.c0 THEN NULL ELSE v0.c0 END);
SELECT v0.c0 FROM v0;
SELECT ALL v0.c0 FROM v0 WHERE (((((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))AND('1151593003')))AND(v0.c0)))|(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE ((NOT (((((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))AND('1151593003')))AND(v0.c0)))|(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))))) UNION ALL SELECT v0.c0 FROM v0 WHERE (((((((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))AND('1151593003')))AND(v0.c0)))|(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))) ISNULL));
SELECT v0.c0 FROM v0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (((((v0.c0) NOTNULL)) BETWEEN (UPPER(v0.c0)) AND (((v0.c0) NOTNULL)))) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (((((v0.c0) NOTNULL)) BETWEEN (UPPER(v0.c0)) AND (((v0.c0) NOTNULL)))))) UNION SELECT DISTINCT * FROM v0 WHERE (((((((v0.c0) NOTNULL)) BETWEEN (UPPER(v0.c0)) AND (((v0.c0) NOTNULL)))) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0;
SELECT v0.c0, vt0.c0 FROM vt0, v0 WHERE (vt0.c0) GROUP BY v0.c0, vt0.c0 UNION SELECT ALL v0.c0, vt0.c0 FROM vt0, v0 WHERE ((NOT (vt0.c0))) GROUP BY v0.c0, vt0.c0 UNION SELECT v0.c0, vt0.c0 FROM vt0, v0 WHERE (((vt0.c0) ISNULL)) GROUP BY v0.c0, vt0.c0;
SELECT v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT ((((v0.c0)) BETWEEN ((v0.c0)) AND ((GROUP_CONCAT(COUNT(*))))))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT ((NOT ((((v0.c0)) BETWEEN ((v0.c0)) AND ((GROUP_CONCAT(COUNT(*))))))))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (((NOT ((((v0.c0)) BETWEEN ((v0.c0)) AND ((GROUP_CONCAT(COUNT(*)))))))) ISNULL);
SELECT * FROM vt0;
SELECT ALL * FROM vt0 WHERE (CASE (((vt0.c0))<((vt0.c0)))  WHEN LIKELIHOOD(DISTINCT vt0.c0, 0.8349294260497165) THEN (NOT (vt0.c0)) WHEN UNLIKELY(vt0.c0) THEN (((vt0.c0))<=((NULL))) WHEN vt0.c0 THEN ((vt0.c0)<(vt0.c0)) END) UNION ALL SELECT * FROM vt0 WHERE ((NOT (CASE (((vt0.c0))<((vt0.c0)))  WHEN LIKELIHOOD(DISTINCT vt0.c0, 0.8349294260497165) THEN (NOT (vt0.c0)) WHEN UNLIKELY(vt0.c0) THEN (((vt0.c0))<=((NULL))) WHEN vt0.c0 THEN ((vt0.c0)<(vt0.c0)) END))) UNION ALL SELECT * FROM vt0 WHERE (((CASE (((vt0.c0))<((vt0.c0)))  WHEN LIKELIHOOD(DISTINCT vt0.c0, 0.8349294260497165) THEN (NOT (vt0.c0)) WHEN UNLIKELY(vt0.c0) THEN (((vt0.c0))<=((NULL))) WHEN vt0.c0 THEN ((vt0.c0)<(vt0.c0)) END) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (CASE WHEN (('-2043550433') NOTNULL) THEN ((0.18750196927851892) BETWEEN (vt0.c0) AND (vt0.c0)) END) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (CASE WHEN (('-2043550433') NOTNULL) THEN ((0.18750196927851892) BETWEEN (vt0.c0) AND (vt0.c0)) END))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((CASE WHEN (('-2043550433') NOTNULL) THEN ((0.18750196927851892) BETWEEN (vt0.c0) AND (vt0.c0)) END) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0;
SELECT ALL v0.c0, vt0.c0 FROM v0, vt0 WHERE ((((((vt0.c0)) NOT BETWEEN ((v0.c0)) AND ((vt0.c0)))) NOT BETWEEN (((((((((vt0.c0)AND(v0.c0)))AND(v0.c0)))AND(vt0.c0)))OR(v0.c0))) AND (vt0.c0 COLLATE RTRIM))) GROUP BY v0.c0, vt0.c0 UNION SELECT ALL v0.c0, vt0.c0 FROM v0, vt0 WHERE ((NOT ((((((vt0.c0)) NOT BETWEEN ((v0.c0)) AND ((vt0.c0)))) NOT BETWEEN (((((((((vt0.c0)AND(v0.c0)))AND(v0.c0)))AND(vt0.c0)))OR(v0.c0))) AND (vt0.c0 COLLATE RTRIM))))) GROUP BY v0.c0, vt0.c0 UNION SELECT v0.c0, vt0.c0 FROM v0, vt0 WHERE ((((((((vt0.c0)) NOT BETWEEN ((v0.c0)) AND ((vt0.c0)))) NOT BETWEEN (((((((((vt0.c0)AND(v0.c0)))AND(v0.c0)))AND(vt0.c0)))OR(v0.c0))) AND (vt0.c0 COLLATE RTRIM))) ISNULL)) GROUP BY v0.c0, vt0.c0;
SELECT v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING GROUP_CONCAT(GROUP_CONCAT(MIN(MIN(vt0.c0)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (GROUP_CONCAT(GROUP_CONCAT(MIN(MIN(vt0.c0)))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((GROUP_CONCAT(GROUP_CONCAT(MIN(MIN(vt0.c0))))) ISNULL);
SELECT v0.c0 FROM v0 NOT INDEXED;
SELECT v0.c0 FROM v0 WHERE (CASE WHEN ((v0.c0)GLOB(v0.c0)) THEN (+ (v0.c0)) END) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE ((NOT (CASE WHEN ((v0.c0)GLOB(v0.c0)) THEN (+ (v0.c0)) END))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE (((CASE WHEN ((v0.c0)GLOB(v0.c0)) THEN (+ (v0.c0)) END) ISNULL));
SELECT v0.c0 FROM v0 NOT INDEXED;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (vt0.c0) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (vt0.c0))) UNION SELECT DISTINCT * FROM vt0 WHERE (((vt0.c0) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL vt0.c0 FROM v0, vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM v0, vt0 WHERE (((((vt0.c0 IN ())))==((((v0.c0)GLOB(vt0.c0)))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM v0, vt0 WHERE ((NOT (((((vt0.c0 IN ())))=((((v0.c0)GLOB(vt0.c0)))))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM v0, vt0 WHERE (((((((vt0.c0 IN ())))==((((v0.c0)GLOB(vt0.c0)))))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM v0, vt0 GROUP BY vt0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING COUNT(*) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING COUNT(*) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT * FROM v0, vt0;
SELECT * FROM v0, vt0 WHERE ((((((((((((((((('䨝Fk')OR(((0.821782003895033)%(v0.c0)))))AND(NULL)))OR(x'')))AND(vt0.c0 COLLATE NOCASE)))AND((x'' IN (vt0.c0)))))AND(v0.c0 COLLATE NOCASE)))OR((~ (NULL)))))OR(((vt0.c0)>(v0.c0))))) UNION ALL SELECT * FROM v0, vt0 WHERE ((NOT ((((((((((((((((('䨝Fk')OR(((0.821782003895033)%(v0.c0)))))AND(NULL)))OR(x'')))AND(vt0.c0 COLLATE NOCASE)))AND((x'' IN (vt0.c0)))))AND(v0.c0 COLLATE NOCASE)))OR((~ (NULL)))))OR(((vt0.c0)>(v0.c0))))))) UNION ALL SELECT * FROM v0, vt0 WHERE ((((((((((((((((((('䨝Fk')OR(((0.821782003895033)%(v0.c0)))))AND(NULL)))OR(x'')))AND(vt0.c0 COLLATE NOCASE)))AND((x'' IN (vt0.c0)))))AND(v0.c0 COLLATE NOCASE)))OR((~ (NULL)))))OR(((vt0.c0)>(v0.c0))))) ISNULL));
SELECT * FROM v0, vt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((+ (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT ((+ (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((((+ (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0;
SELECT v0.c0, vt0.c0 FROM v0, vt0 WHERE (CASE CAST(vt0.c0 AS NUMERIC)  WHEN ((vt0.c0)*(vt0.c0)) THEN (((vt0.c0))>=((vt0.c0))) END) GROUP BY v0.c0, vt0.c0 UNION SELECT v0.c0, vt0.c0 FROM v0, vt0 WHERE ((NOT (CASE CAST(vt0.c0 AS NUMERIC)  WHEN ((vt0.c0)*(vt0.c0)) THEN (((vt0.c0))>=((vt0.c0))) END))) GROUP BY v0.c0, vt0.c0 UNION SELECT ALL v0.c0, vt0.c0 FROM v0, vt0 WHERE (((CASE CAST(vt0.c0 AS NUMERIC)  WHEN ((vt0.c0)*(vt0.c0)) THEN (((vt0.c0))>=((vt0.c0))) END) ISNULL)) GROUP BY v0.c0, vt0.c0;
SELECT v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (((SUM(GROUP_CONCAT(v0.c0)))) NOT BETWEEN (((+ (MAX('760207015'))))) AND (((((v0.c0))<>((v0.c0)))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT ((((SUM(GROUP_CONCAT(v0.c0)))) NOT BETWEEN (((+ (MAX('760207015'))))) AND (((((v0.c0))!=((v0.c0)))))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (((((SUM(GROUP_CONCAT(v0.c0)))) NOT BETWEEN (((+ (MAX('760207015'))))) AND (((((v0.c0))<>((v0.c0))))))) ISNULL);
SELECT ALL MAX(((v0.c0 COLLATE RTRIM) ISNULL)) FROM vt0, v0;
SELECT ALL * FROM v0 CROSS JOIN vt0 ON (((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN (vt0.c0 COLLATE BINARY));
SELECT * FROM v0 CROSS JOIN vt0 ON (((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN (vt0.c0 COLLATE BINARY)) WHERE ((((~ (NULL)))IS NOT((v0.c0 IN (v0.c0))))) UNION ALL SELECT ALL * FROM v0 CROSS JOIN vt0 ON (((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN (vt0.c0 COLLATE BINARY)) WHERE ((NOT ((((~ (NULL)))IS NOT((v0.c0 IN (v0.c0))))))) UNION ALL SELECT ALL * FROM v0 CROSS JOIN vt0 ON (((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN (vt0.c0 COLLATE BINARY)) WHERE ((((((~ (NULL)))IS NOT((v0.c0 IN (v0.c0))))) ISNULL));
SELECT ALL * FROM v0 CROSS JOIN vt0 ON (((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN (vt0.c0 COLLATE BINARY));
SELECT DISTINCT vt0.c0 FROM v0 CROSS JOIN vt0 ON ((LIKELIHOOD(DISTINCT v0.c0, 0.0584617412987265))<(CASE WHEN vt0.c0 THEN v0.c0 WHEN v0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END));
SELECT DISTINCT vt0.c0 FROM v0 CROSS JOIN vt0 ON ((LIKELIHOOD(DISTINCT v0.c0, 0.0584617412987265))<(CASE WHEN vt0.c0 THEN v0.c0 WHEN v0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)) WHERE (((((v0.c0)IS NOT(vt0.c0))) BETWEEN ((v0.c0 IN ())) AND (((v0.c0)<<(vt0.c0))))) UNION SELECT DISTINCT vt0.c0 FROM v0 CROSS JOIN vt0 ON ((LIKELIHOOD(DISTINCT v0.c0, 0.0584617412987265))<(CASE WHEN vt0.c0 THEN v0.c0 WHEN v0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)) WHERE ((NOT (((((v0.c0)IS NOT(vt0.c0))) BETWEEN ((v0.c0 IN ())) AND (((v0.c0)<<(vt0.c0))))))) UNION SELECT DISTINCT vt0.c0 FROM v0 CROSS JOIN vt0 ON ((LIKELIHOOD(DISTINCT v0.c0, 0.0584617412987265))<(CASE WHEN vt0.c0 THEN v0.c0 WHEN v0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)) WHERE (((((((v0.c0)IS NOT(vt0.c0))) BETWEEN ((v0.c0 IN ())) AND (((v0.c0)<<(vt0.c0))))) ISNULL));
SELECT DISTINCT vt0.c0 FROM v0 CROSS JOIN vt0 ON ((LIKELIHOOD(DISTINCT v0.c0, 0.0584617412987265))<(CASE WHEN vt0.c0 THEN v0.c0 WHEN v0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END));
SELECT v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0;
SELECT v0.c0, vt0.c0 FROM vt0, v0 WHERE ((((((((v0.c0)AND(vt0.c0)))OR(vt0.c0))))<=((((((v0.c0)OR(vt0.c0)))OR(vt0.c0)))))) GROUP BY v0.c0, vt0.c0 UNION SELECT v0.c0, vt0.c0 FROM vt0, v0 WHERE ((NOT ((((((((v0.c0)AND(vt0.c0)))OR(vt0.c0))))<=((((((v0.c0)OR(vt0.c0)))OR(vt0.c0)))))))) GROUP BY v0.c0, vt0.c0 UNION SELECT v0.c0, vt0.c0 FROM vt0, v0 WHERE ((((((((((v0.c0)AND(vt0.c0)))OR(vt0.c0))))<=((((((v0.c0)OR(vt0.c0)))OR(vt0.c0)))))) ISNULL)) GROUP BY v0.c0, vt0.c0;
SELECT v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0;
SELECT ALL vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0;
SELECT vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0 HAVING CAST(COUNT(*) AS TEXT) UNION ALL SELECT ALL vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0 HAVING (NOT (CAST(COUNT(*) AS TEXT))) UNION ALL SELECT ALL vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0 HAVING ((CAST(COUNT(*) AS TEXT)) ISNULL);
SELECT ALL vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0;
SELECT vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0 HAVING CAST(COUNT(*) AS TEXT) UNION ALL SELECT ALL vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0 HAVING (NOT (CAST(COUNT(*) AS TEXT))) UNION ALL SELECT ALL vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0 HAVING ((CAST(COUNT(*) AS TEXT)) ISNULL);
SELECT ALL vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0;
SELECT ALL vt0.c0, v0.c0 FROM v0, vt0;
SELECT vt0.c0, v0.c0 FROM v0, vt0 WHERE (((((((((vt0.c0)OR(vt0.c0)))OR(v0.c0)))OR(CAST(v0.c0 AS NUMERIC))))AND(((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))OR(vt0.c0)))AND(v0.c0))))) UNION ALL SELECT vt0.c0, v0.c0 FROM v0, vt0 WHERE ((NOT (((((((((vt0.c0)OR(vt0.c0)))OR(v0.c0)))OR(CAST(v0.c0 AS NUMERIC))))AND(((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))OR(vt0.c0)))AND(v0.c0))))))) UNION ALL SELECT ALL vt0.c0, v0.c0 FROM v0, vt0 WHERE (((((((((((vt0.c0)OR(vt0.c0)))OR(v0.c0)))OR(CAST(v0.c0 AS NUMERIC))))AND(((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))OR(vt0.c0)))AND(v0.c0))))) ISNULL));
SELECT ALL vt0.c0, v0.c0 FROM v0, vt0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE ((NOT (((v0.c0) NOT NULL)))) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT ((NOT (((v0.c0) NOT NULL)))))) UNION SELECT DISTINCT * FROM v0 WHERE ((((NOT (((v0.c0) NOT NULL)))) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT vt0.c0 FROM v0, vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM v0, vt0 WHERE (((v0.c0)LIKE(v0.c0)) COLLATE RTRIM) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM v0, vt0 WHERE ((NOT (((v0.c0)LIKE(v0.c0)) COLLATE RTRIM))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM v0 NOT INDEXED, vt0 WHERE (((((v0.c0)LIKE(v0.c0)) COLLATE RTRIM) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM v0, vt0 GROUP BY vt0.c0;
SELECT v0.c0 FROM vt0, v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM vt0, v0 GROUP BY v0.c0 HAVING MIN(TOTAL(v0.c0)) UNION ALL SELECT ALL v0.c0 FROM vt0, v0 GROUP BY v0.c0 HAVING (NOT (MIN(TOTAL(v0.c0)))) UNION ALL SELECT v0.c0 FROM vt0, v0 GROUP BY v0.c0 HAVING ((MIN(TOTAL(v0.c0))) ISNULL);
SELECT ALL v0.c0 FROM v0, vt0;
SELECT v0.c0 FROM v0, vt0 WHERE (vt0.c0) UNION ALL SELECT v0.c0 FROM v0, vt0 WHERE ((NOT (vt0.c0))) UNION ALL SELECT ALL v0.c0 FROM v0, vt0 WHERE (((vt0.c0) ISNULL));
SELECT ALL v0.c0 FROM v0, vt0;
SELECT DISTINCT vt0.c0 FROM v0 RIGHT OUTER JOIN vt0 ON vt0.c0;
SELECT DISTINCT vt0.c0 FROM v0 RIGHT OUTER JOIN vt0 ON vt0.c0 WHERE (IFNULL(vt0.c0 COLLATE BINARY, ((v0.c0)OR(vt0.c0)))) UNION SELECT DISTINCT vt0.c0 FROM v0 RIGHT OUTER JOIN vt0 ON vt0.c0 WHERE ((NOT (IFNULL(vt0.c0 COLLATE BINARY, ((v0.c0)OR(vt0.c0)))))) UNION SELECT DISTINCT vt0.c0 FROM v0 RIGHT OUTER JOIN vt0 ON vt0.c0 WHERE (((IFNULL(vt0.c0 COLLATE BINARY, ((v0.c0)OR(vt0.c0)))) ISNULL));
SELECT DISTINCT vt0.c0 FROM v0 RIGHT OUTER JOIN vt0 ON vt0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (ABS(((((v0.c0)OR(v0.c0)))AND(v0.c0)))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (ABS(((((v0.c0)OR(v0.c0)))AND(v0.c0)))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((ABS(((((v0.c0)OR(v0.c0)))AND(v0.c0)))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((x'1f20') NOT BETWEEN (COALESCE(COUNT(vt0.c0), COUNT(vt0.c0))) AND (COUNT(*))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (((x'1f20') NOT BETWEEN (COALESCE(COUNT(vt0.c0), COUNT(vt0.c0))) AND (COUNT(*))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((x'1f20') NOT BETWEEN (COALESCE(COUNT(vt0.c0), COUNT(vt0.c0))) AND (COUNT(*)))) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((x'1f20') NOT BETWEEN (COALESCE(COUNT(vt0.c0), COUNT(vt0.c0))) AND (COUNT(*))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (((x'1f20') NOT BETWEEN (COALESCE(COUNT(vt0.c0), COUNT(vt0.c0))) AND (COUNT(*))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((x'1f20') NOT BETWEEN (COALESCE(COUNT(vt0.c0), COUNT(vt0.c0))) AND (COUNT(*)))) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL * FROM vt0, v0;
SELECT ALL * FROM vt0, v0 WHERE (CASE CAST(vt0.c0 AS INTEGER)  WHEN ((v0.c0)-(vt0.c0)) THEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) END) UNION ALL SELECT ALL * FROM vt0, v0 WHERE ((NOT (CASE CAST(vt0.c0 AS INTEGER)  WHEN ((v0.c0)-(vt0.c0)) THEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) END))) UNION ALL SELECT ALL * FROM vt0, v0 WHERE (((CASE CAST(vt0.c0 AS INTEGER)  WHEN ((v0.c0)-(vt0.c0)) THEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) END) ISNULL));
SELECT ALL * FROM vt0, v0;
SELECT DISTINCT v0.c0, vt0.c0 FROM v0 CROSS JOIN vt0 ON CAST(vt0.c0 AS INTEGER) COLLATE RTRIM;
SELECT DISTINCT v0.c0, vt0.c0 FROM v0 CROSS JOIN vt0 ON CAST(vt0.c0 AS INTEGER) COLLATE RTRIM WHERE ((- (((vt0.c0) NOT NULL)))) UNION SELECT DISTINCT v0.c0, vt0.c0 FROM v0 CROSS JOIN vt0 ON CAST(vt0.c0 AS INTEGER) COLLATE RTRIM WHERE ((NOT ((- (((vt0.c0) NOT NULL)))))) UNION SELECT DISTINCT v0.c0, vt0.c0 FROM v0 CROSS JOIN vt0 ON CAST(vt0.c0 AS INTEGER) COLLATE RTRIM WHERE ((((- (((vt0.c0) NOT NULL)))) ISNULL));
SELECT DISTINCT v0.c0, vt0.c0 FROM v0 CROSS JOIN vt0 ON CAST(vt0.c0 AS INTEGER) COLLATE RTRIM;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (NULL) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (NULL))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((NULL) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM v0, vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM v0, vt0 GROUP BY vt0.c0 HAVING SUM(COUNT(*)) UNION ALL SELECT ALL vt0.c0 FROM v0, vt0 GROUP BY vt0.c0 HAVING (NOT (SUM(COUNT(*)))) UNION ALL SELECT vt0.c0 FROM v0, vt0 GROUP BY vt0.c0 HAVING ((SUM(COUNT(*))) ISNULL);
SELECT vt0.c0, v0.c0 FROM vt0, v0;
SELECT vt0.c0, v0.c0 FROM vt0, v0 WHERE (((vt0.c0) NOT NULL) COLLATE NOCASE) UNION ALL SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 WHERE ((NOT (((vt0.c0) NOT NULL) COLLATE NOCASE))) UNION ALL SELECT vt0.c0, v0.c0 FROM vt0, v0 WHERE (((((vt0.c0) NOT NULL) COLLATE NOCASE) ISNULL));
SELECT vt0.c0, v0.c0 FROM vt0, v0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((UPPER(vt0.c0))AND((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((UPPER(vt0.c0))AND((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((UPPER(vt0.c0))AND((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL vt0.c0 FROM vt0, v0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, v0 WHERE ((((((v0.c0) IS TRUE), (vt0.c0 IN ()), (NOT (v0.c0))))==((((vt0.c0)LIKE(vt0.c0)), (vt0.c0 IN ()), (NOT (v0.c0)))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0, v0 WHERE ((NOT ((((((v0.c0) IS TRUE), (vt0.c0 IN ()), (NOT (v0.c0))))==((((vt0.c0)LIKE(vt0.c0)), (vt0.c0 IN ()), (NOT (v0.c0)))))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0, v0 NOT INDEXED WHERE ((((((((v0.c0) IS TRUE), (vt0.c0 IN ()), (NOT (v0.c0))))=((((vt0.c0)LIKE(vt0.c0)), (vt0.c0 IN ()), (NOT (v0.c0)))))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, v0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING CAST(TOTAL(NULL) AS NUMERIC) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (CAST(TOTAL(NULL) AS NUMERIC))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((CAST(TOTAL(NULL) AS NUMERIC)) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING CAST(TOTAL(NULL) AS NUMERIC) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (CAST(TOTAL(NULL) AS NUMERIC))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((CAST(TOTAL(NULL) AS NUMERIC)) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT * FROM vt0;
SELECT ALL * FROM vt0 WHERE (CAST(((vt0.c0)+(vt0.c0)) AS REAL)) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (CAST(((vt0.c0)+(vt0.c0)) AS REAL)))) UNION ALL SELECT ALL * FROM vt0 WHERE (((CAST(((vt0.c0)+(vt0.c0)) AS REAL)) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 RIGHT OUTER JOIN v0 ON NULL;
SELECT DISTINCT vt0.c0 FROM vt0 RIGHT OUTER JOIN v0 ON NULL WHERE (((CASE WHEN NULL THEN v0.c0 WHEN v0.c0 THEN vt0.c0 WHEN v0.c0 THEN v0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN v0.c0 ELSE v0.c0 END)%(0x38911a4e COLLATE RTRIM))) UNION SELECT DISTINCT vt0.c0 FROM vt0 RIGHT OUTER JOIN v0 ON NULL WHERE ((NOT (((CASE WHEN NULL THEN v0.c0 WHEN v0.c0 THEN vt0.c0 WHEN v0.c0 THEN v0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN v0.c0 ELSE v0.c0 END)%(0x38911a4e COLLATE RTRIM))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 RIGHT OUTER JOIN v0 ON NULL WHERE (((((CASE WHEN NULL THEN v0.c0 WHEN v0.c0 THEN vt0.c0 WHEN v0.c0 THEN v0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN v0.c0 ELSE v0.c0 END)%(0X38911a4e COLLATE RTRIM))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0 RIGHT OUTER JOIN v0 ON NULL;
SELECT ALL v0.c0 FROM v0, vt0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0, vt0 WHERE (UPPER(DISTINCT ((vt0.c0) BETWEEN (0.8592204743903975) AND (v0.c0)))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0, vt0 WHERE ((NOT (UPPER(DISTINCT ((vt0.c0) BETWEEN (0.8592204743903975) AND (v0.c0)))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0, vt0 WHERE (((UPPER(DISTINCT ((vt0.c0) BETWEEN (0.8592204743903975) AND (v0.c0)))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0, vt0 GROUP BY v0.c0;
SELECT v0.c0 FROM vt0, v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM vt0, v0 GROUP BY v0.c0 HAVING GROUP_CONCAT('-598129419') UNION ALL SELECT v0.c0 FROM vt0, v0 GROUP BY v0.c0 HAVING (NOT (GROUP_CONCAT('-598129419'))) UNION ALL SELECT v0.c0 FROM vt0, v0 GROUP BY v0.c0 HAVING ((GROUP_CONCAT('-598129419')) ISNULL);
SELECT v0.c0 FROM vt0, v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM vt0, v0 GROUP BY v0.c0 HAVING GROUP_CONCAT('-598129419') UNION ALL SELECT v0.c0 FROM vt0, v0 GROUP BY v0.c0 HAVING (NOT (GROUP_CONCAT('-598129419'))) UNION ALL SELECT v0.c0 FROM vt0, v0 GROUP BY v0.c0 HAVING ((GROUP_CONCAT('-598129419')) ISNULL);
SELECT v0.c0 FROM vt0, v0 GROUP BY v0.c0;
SELECT ALL * FROM v0, vt0;
SELECT * FROM v0, vt0 WHERE ('D?ᢣ') UNION ALL SELECT * FROM v0, vt0 WHERE ((NOT ('D?ᢣ'))) UNION ALL SELECT * FROM v0, vt0 WHERE ((('D?ᢣ') ISNULL));
SELECT ALL * FROM v0, vt0;
SELECT DISTINCT v0.c0, vt0.c0 FROM v0, vt0;
SELECT DISTINCT v0.c0, vt0.c0 FROM v0, vt0 WHERE (0xffffffff97a15f65) UNION SELECT DISTINCT v0.c0, vt0.c0 FROM v0, vt0 WHERE ((NOT (0Xffffffff97a15f65))) UNION SELECT DISTINCT v0.c0, vt0.c0 FROM v0, vt0 NOT INDEXED WHERE (((0xffffffff97a15f65) ISNULL));
SELECT DISTINCT v0.c0, vt0.c0 FROM v0, vt0;
SELECT ALL vt0.c0 FROM vt0 NOT INDEXED, v0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, v0 WHERE (((((v0.c0)AND(vt0.c0)))OR(v0.c0)) COLLATE RTRIM) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0, v0 WHERE ((NOT (((((v0.c0)AND(vt0.c0)))OR(v0.c0)) COLLATE RTRIM))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0, v0 WHERE (((((((v0.c0)AND(vt0.c0)))OR(v0.c0)) COLLATE RTRIM) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 NOT INDEXED, v0 GROUP BY vt0.c0;
SELECT v0.c0 FROM v0 NOT INDEXED GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING COUNT(AVG(v0.c0)) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (COUNT(AVG(v0.c0)))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((COUNT(AVG(v0.c0))) ISNULL);
SELECT vt0.c0 FROM vt0, v0;
SELECT ALL vt0.c0 FROM vt0, v0 WHERE (((((vt0.c0))!=((vt0.c0))) IN ((((vt0.c0))!=((vt0.c0)))))) UNION ALL SELECT vt0.c0 FROM vt0, v0 WHERE ((NOT (((((vt0.c0))!=((vt0.c0))) IN ((((vt0.c0))<>((vt0.c0)))))))) UNION ALL SELECT vt0.c0 FROM vt0, v0 WHERE (((((((vt0.c0))<>((vt0.c0))) IN ((((vt0.c0))<>((vt0.c0)))))) ISNULL));
SELECT vt0.c0 FROM vt0, v0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (CASE WHEN ((vt0.c0)-(vt0.c0)) THEN (~ (vt0.c0)) ELSE ((((((((vt0.c0)OR('%-')))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)) END) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (CASE WHEN ((vt0.c0)-(vt0.c0)) THEN (~ (vt0.c0)) ELSE ((((((((vt0.c0)OR('%-')))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)) END))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((CASE WHEN ((vt0.c0)-(vt0.c0)) THEN (~ (vt0.c0)) ELSE ((((((((vt0.c0)OR('%-')))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)) END) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
