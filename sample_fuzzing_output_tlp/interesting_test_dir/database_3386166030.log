-- Time: 2024/06/10 13:41:04
-- Database: database30
-- Database version: 3.40.0
-- seed value: 3386166030
PRAGMA cache_size = 50000; -- 17ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree(c0, c1, c2); -- 1ms;
CREATE VIEW v0(c0) AS SELECT ALL ((LOWER(x''))<<(rt0.c1 COLLATE NOCASE)) FROM rt0; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR ROLLBACK INTO rt0(c1) VALUES (0xffffffffb23249e1); -- 1ms;
END TRANSACTION; -- 0ms;
SELECT rtreecheck('rt0'); -- 1ms;
INSERT OR IGNORE INTO rt0 VALUES (x'0ced', 0x25c2c91c, '633522460'); -- 0ms;
ANALYZE rt0; -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA foreign_keys = false; -- 0ms;
UPDATE OR IGNORE rt0 SET (c1)=('-604133906') WHERE ((((x'') NOT BETWEEN (rt0.c0) AND (rt0.c0))) BETWEEN (((rt0.c1) IS TRUE)) AND (rt0.c1 COLLATE NOCASE)); -- 0ms;
UPDATE OR IGNORE rt0 SET (c1)=('-1686320142') WHERE (NOT ((- (rt0.c0)))); -- 1ms;
PRAGMA soft_heap_limit = 0; -- 0ms;
INSERT OR IGNORE INTO rt0(c2, c1) VALUES (x'', '32741361'), (1452208080, 0.05285502128063235), (x'', 0.7884034852714787); -- 0ms;
PRAGMA main.stats; -- 0ms;
END TRANSACTION; -- 0ms;
ANALYZE rt0; -- 1ms;
UPDATE OR IGNORE rt0 SET c0=1362277039 WHERE CASE WHEN (rt0.c2 IN (rt0.c0)) THEN (((0.3472713047308815, rt0.c2, rt0.c2, rt0.c1, rt0.c1)) NOT BETWEEN ((rt0.c1, 0.3472713047308815, rt0.c0, rt0.c1, rt0.c0)) AND ((rt0.c0, '|ioY#佳', rt0.c1, rt0.c1, rt0.c2))) END; -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
VACUUM; -- 0ms;
VACUUM; -- 1ms;
VACUUM; -- 0ms;
VACUUM temp; -- 0ms;
INSERT OR ROLLBACK INTO rt0(c2) VALUES (1e500); -- 0ms;
UPDATE rt0 SET c2=1.362277039E9; -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
INSERT OR ROLLBACK INTO rt0(c2, c1, c0) VALUES ('-1305327135', 0.3472713047308815, x'55af'); -- 0ms;
INSERT OR FAIL INTO rt0(c1, c2, c0) VALUES (-1469132160, '', ''); -- 0ms;
INSERT OR IGNORE INTO rt0(c1, c2) VALUES (NULL, 0xffffffffd98a8360); -- 0ms;
UPDATE OR REPLACE rt0 SET (c2, c2)=(NULL, x'4a3b7ac9'); -- 0ms;
UPDATE OR IGNORE rt0 SET (c1)=(NULL) WHERE ((((rt0.c1) NOT NULL)) NOT BETWEEN (CAST(rt0.c0 AS REAL)) AND (NULL)); -- 0ms;
INSERT OR REPLACE INTO rt0(c2, c1, c0) VALUES (NULL, 3.2741361E7, 0.44664564659454664), (x'', '-1686320142', 0xffffffffa86ed280), (NULL, 0.5783752307648226, 0.1409479013916286); -- 1ms;
INSERT OR ABORT INTO rt0(c0, c2, c1) VALUES (x'', '-645233824', 0X677ccdad), (NULL, x'', x''), ('-358265371', x'', ',#hsw1v'); -- 0ms;
INSERT OR IGNORE INTO rt0(c2) VALUES (x''); -- 0ms;
END TRANSACTION; -- 0ms;
UPDATE rt0 SET (c1, c0)=('Ed', 'Ve\nE9,D') WHERE ((((rt0.c2)<=(rt0.c1))) IS TRUE); -- 0ms;
UPDATE OR REPLACE rt0 SET c2=1362277039 WHERE ((((rt0.c1)AND(((x'2df0')>>(rt0.c0)))))OR(CASE rt0.c1  WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN NULL END)); -- 0ms;
INSERT OR FAIL INTO rt0(c0, c1, c2) VALUES ('1609056298', NULL, x'6413'); -- 1ms;
SELECT rtreecheck('rt0'); -- 0ms;
INSERT OR ABORT INTO rt0(c1) VALUES (1609056298); -- 0ms;
INSERT OR IGNORE INTO rt0(c2, c0) VALUES (NULL, 0.1409479013916286), (NULL, 1609056298), (0.8530903860814614, 9221299090168873114); -- 0ms;
INSERT OR FAIL INTO rt0(c1, c0, c2) VALUES (633522460, 0.7884034852714787, '-1469132160'), (-604133906, x'8d3c', -1.305327135E9), ('1400755647', 0.9910582999903562, NULL), ('tm<㬄y', '+荠JS,Pq', '-183175376'), (x'', NULL, ',#hsw1v'), (NULL, '0.3472713047308815', x'9cca'), ('-1479184442', 1.609056298E9, '1713729333'); -- 0ms;
INSERT OR IGNORE INTO rt0(c0) VALUES (0xffffffffd214b7ee), (-129671576), ('-1479184442'), (0.9576034424231462), (NULL); -- 0ms;
DROP VIEW v0; -- 0ms;
UPDATE OR FAIL rt0 SET c0=-1.83175376E8; -- 0ms;
UPDATE rt0 SET (c0, c1)=('32741361', 0.3472713047308815); -- 0ms;
UPDATE OR IGNORE rt0 SET (c0)=(NULL); -- 1ms;
INSERT OR REPLACE INTO rt0 VALUES (0xffffffff9b7ccbf2, '0.8530903860814614', -531557390); -- 0ms;
INSERT OR FAIL INTO rt0(c0, c1) VALUES (-1.83175376E8, 0x1f397f1), ('', 0.8530903860814614), (0.7837783547661866, 1425691973); -- 0ms;
INSERT OR IGNORE INTO rt0 VALUES (NULL, NULL, NULL); -- 0ms;
UPDATE OR IGNORE rt0 SET c2=x'473f', c0=0.1409479013916286 WHERE load_extension('dn\-v5b8'); -- 0ms;
UPDATE OR IGNORE rt0 SET (c2)=(0xffffffffe17897e9); -- 0ms;
VACUUM; -- 1ms;
COMMIT TRANSACTION; -- 1ms;
PRAGMA main.automatic_index = true; -- 0ms;
INSERT OR IGNORE INTO rt0(c2) VALUES (''), (NULL), (-1.479184442E9), (NULL), (''); -- 0ms;
INSERT OR ABORT INTO rt0(c0, c1) VALUES (0.8964876660615341, 0.3483432946866526); -- 0ms;
INSERT OR IGNORE INTO rt0 VALUES (x'', NULL, x''); -- 0ms;
INSERT OR IGNORE INTO rt0 VALUES (0X31cb0f60, 0Xffffffffc85e59df, '0.1409479013916286'), ('Ed', NULL, 0xffffffffeaa54de5), (0.5325826053250431, 0X12051955, 0.05285502128063235); -- 1ms;
INSERT OR IGNORE INTO rt0(c1, c0, c2) VALUES ('770360958', 6.3352246E8, x'f108ee57'); -- 0ms;
END; -- 0ms;
UPDATE rt0 SET (c2)=('1452208080'); -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
ANALYZE; -- 0ms;
ANALYZE sqlite_master; -- 3ms;
INSERT OR IGNORE INTO rt0(c2, c0, c1) VALUES ('1736232365', '', -5.3155739E8); -- 0ms;
REINDEX; -- 0ms;
INSERT OR IGNORE INTO rt0(c2) VALUES (x''), (0.8552221752576554), (x'877c6b2c'), (((((0.22207747041013182) ISNULL))<=((-2114872014 IN ())))), (NULL); -- 0ms;
PRAGMA temp.journal_size_limit = 5896880886754868287; -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
INSERT OR ABORT INTO rt0(c1, c0, c2) VALUES ('1963990369', -5.12190487E8, '-225045474'), (x'', 0Xffffffff9b7ccbf2, 0.6343926617952568), (1.45220808E9, x'', ''); -- 0ms;
INSERT OR IGNORE INTO rt0(c1, c0) VALUES ('%', x''); -- 0ms;
COMMIT; -- 0ms;
PRAGMA shrink_memory; -- 0ms;
INSERT OR REPLACE INTO rt0(c2) VALUES ('ꘑ''{ ('); -- 0ms;
INSERT OR ABORT INTO rt0(c1) VALUES ('835391328'), ('1295166638'), ('-2075825819'); -- 0ms;
INSERT OR ROLLBACK INTO rt0(c1, c2) VALUES (-1.305327135E9, x''); -- 0ms;
INSERT OR ROLLBACK INTO rt0(c2, c0, c1) VALUES ('1372930985', 6.3352246E8, -645233824); -- 0ms;
UPDATE OR ABORT rt0 SET (c1)=('-1505089734') WHERE (CAST(rt0.c0 AS INTEGER) IN ()); -- 0ms;
INSERT OR ROLLBACK INTO rt0(c0, c1) VALUES (-805018952, 0.8207952289233797); -- 0ms;
INSERT OR ROLLBACK INTO rt0(c0, c2) VALUES (NULL, 824926684); -- 1ms;
INSERT OR ROLLBACK INTO rt0(c2) VALUES (''), ('1400755647'), (x''); -- 0ms;
ANALYZE; -- 0ms;
COMMIT; -- 0ms;
UPDATE OR IGNORE rt0 SET (c0)=(NULL) WHERE ((((rt0.c0) IS FALSE)) IS FALSE); -- 1ms;
PRAGMA cache_spill = false; -- 0ms;
UPDATE OR IGNORE rt0 SET (c1)=(0.1409479013916286) WHERE ((rt0.c1)%((- (rt0.c1)))); -- 0ms;
UPDATE OR IGNORE rt0 SET c2=NULL WHERE 0.20561025855957782; -- 1ms;
UPDATE OR FAIL rt0 SET c2=NULL, c2=x'', c0='q9OA%5' WHERE CASE CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c2 END  WHEN 0.8530903860814614 COLLATE BINARY THEN ((rt0.c2)||(rt0.c2)) ELSE (((rt0.c2))>=((rt0.c2))) END; -- 0ms;
UPDATE OR ROLLBACK rt0 SET c0=x'', c0=0X5bfde552 WHERE (((('j~') BETWEEN (0.1033923968679702) AND (NULL)))IS((0.8074605172903195 IN (rt0.c0)))); -- 0ms;
UPDATE rt0 SET c1='-645233824'; -- 0ms;
PRAGMA stats; -- 0ms;
INSERT OR ROLLBACK INTO rt0(c1) VALUES ('l'); -- 1ms;
INSERT OR REPLACE INTO rt0 VALUES (0.183570771112738, x'', '0.44664564659454664'); -- 0ms;
UPDATE OR IGNORE rt0 SET c2='-933340705' WHERE rt0.c2; -- 0ms;
PRAGMA application_id = -8111941981930781085; -- 0ms;
END; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT ALL rt0.c0, rt0.c1 FROM rt0;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 WHERE (((((rt0.c1 IN ())))==((LENGTH(rt0.c0))))) UNION ALL SELECT rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (((((rt0.c1 IN ())))==((LENGTH(rt0.c0))))))) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM rt0 WHERE (((((((rt0.c1 IN ())))=((LENGTH(rt0.c0))))) ISNULL));
SELECT ALL rt0.c0, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((((rt0.c0, rt0.c1, rt0.c0))>((rt0.c2, '', rt0.c1))) COLLATE NOCASE) UNION SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT ((((rt0.c0, rt0.c1, rt0.c0))>((rt0.c2, '', rt0.c1))) COLLATE NOCASE))) UNION SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((((((rt0.c0, rt0.c1, rt0.c0))>((rt0.c2, '', rt0.c1))) COLLATE NOCASE) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((- (CASE rt0.c1  WHEN rt0.c1 THEN rt0.c1 END))) GROUP BY rt0.c2, rt0.c0, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT ((- (CASE rt0.c1  WHEN rt0.c1 THEN rt0.c1 END))))) GROUP BY rt0.c2, rt0.c0, rt0.c1 UNION SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((((- (CASE rt0.c1  WHEN rt0.c1 THEN rt0.c1 END))) ISNULL)) GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING ((TOTAL('1886774267')) NOT BETWEEN (COUNT(rt0.c0)) AND (TOTAL(rt0.c1))) UNION ALL SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING (NOT (((TOTAL('1886774267')) NOT BETWEEN (COUNT(rt0.c0)) AND (TOTAL(rt0.c1))))) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING ((((TOTAL('1886774267')) NOT BETWEEN (COUNT(rt0.c0)) AND (TOTAL(rt0.c1)))) ISNULL);
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING ((TOTAL('1886774267')) NOT BETWEEN (COUNT(rt0.c0)) AND (TOTAL(rt0.c1))) UNION ALL SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING (NOT (((TOTAL('1886774267')) NOT BETWEEN (COUNT(rt0.c0)) AND (TOTAL(rt0.c1))))) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING ((((TOTAL('1886774267')) NOT BETWEEN (COUNT(rt0.c0)) AND (TOTAL(rt0.c1)))) ISNULL);
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (CAST(rt0.c2 COLLATE RTRIM AS NUMERIC)) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (CAST(rt0.c2 COLLATE RTRIM AS NUMERIC)))) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (((CAST(rt0.c2 COLLATE RTRIM AS NUMERIC)) ISNULL));
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c1 FROM rt0 WHERE ('') UNION SELECT DISTINCT rt0.c1 FROM rt0 WHERE ((NOT (''))) UNION SELECT DISTINCT rt0.c1 FROM rt0 WHERE ((('') ISNULL));
SELECT DISTINCT rt0.c1 FROM rt0;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE (((0.7804742893089607)<<(TRIM(DISTINCT rt0.c2, rt0.c1)))) GROUP BY rt0.c0, rt0.c2, rt0.c1 UNION SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (((0.7804742893089607)<<(TRIM(DISTINCT rt0.c2, rt0.c1)))))) GROUP BY rt0.c0, rt0.c2, rt0.c1 UNION SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE (((((0.7804742893089607)<<(TRIM(DISTINCT rt0.c2, rt0.c1)))) ISNULL)) GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING json_array_length((NOT (SUM(TOTAL(rt0.c0)))), MIN(rt0.c1)) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING (NOT (json_array_length((NOT (SUM(TOTAL(rt0.c0)))), MIN(rt0.c1)))) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING ((json_array_length((NOT (SUM(TOTAL(rt0.c0)))), MIN(rt0.c1))) ISNULL);
SELECT rt0.c2, rt0.c1 FROM rt0;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 WHERE ('tm<㬄y') UNION ALL SELECT rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT ('tm<㬄y'))) UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM rt0 WHERE ((('tm<㬄y') ISNULL));
SELECT rt0.c2, rt0.c1 FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0)))) NOT BETWEEN (((rt0.c0)AND(rt0.c1))) AND (((rt0.c1)+(rt0.c0))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0)))) NOT BETWEEN (((rt0.c0)AND(rt0.c1))) AND (((rt0.c1)+(rt0.c0))))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0)))) NOT BETWEEN (((rt0.c0)AND(rt0.c1))) AND (((rt0.c1)+(rt0.c0))))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 WHERE ('-1101488085') GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM rt0 WHERE ((NOT ('-1101488085'))) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM rt0 WHERE ((('-1101488085') ISNULL)) GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING COUNT(COUNT(*)) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING (NOT (COUNT(COUNT(*)))) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING ((COUNT(COUNT(*))) ISNULL);
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE (LIKE(rt0.c0, x'') COLLATE RTRIM) UNION ALL SELECT * FROM rt0 WHERE ((NOT (LIKE(rt0.c0, x'') COLLATE RTRIM))) UNION ALL SELECT ALL * FROM rt0 WHERE (((LIKE(rt0.c0, x'') COLLATE RTRIM) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (TYPEOF(((((((((rt0.c1)OR(rt0.c0)))OR(rt0.c1)))AND(rt0.c1)))OR(rt0.c2)))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (TYPEOF(((((((((rt0.c1)OR(rt0.c0)))OR(rt0.c1)))AND(rt0.c1)))OR(rt0.c2)))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((TYPEOF(((((((((rt0.c1)OR(rt0.c0)))OR(rt0.c1)))AND(rt0.c1)))OR(rt0.c2)))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 WHERE (((1.963990369E9)OR(((((rt0.c0)AND(0x21e03178)))AND(rt0.c2))))) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM rt0 WHERE ((NOT (((1.963990369E9)OR(((((rt0.c0)AND(0X21e03178)))AND(rt0.c2))))))) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM rt0 WHERE (((((1.963990369E9)OR(((((rt0.c0)AND(0X21e03178)))AND(rt0.c2))))) ISNULL)) GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE (CASE rt0.c2  WHEN ((((rt0.c2)OR(rt0.c1)))OR('1894926875')) THEN LOWER(rt0.c2) WHEN ((rt0.c2)||(x'')) THEN rt0.c0 WHEN ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c1)) THEN (((NULL))>((rt0.c0))) ELSE ((rt0.c1)IS NOT(rt0.c1)) END) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (CASE rt0.c2  WHEN ((((rt0.c2)OR(rt0.c1)))OR('1894926875')) THEN LOWER(rt0.c2) WHEN ((rt0.c2)||(x'')) THEN rt0.c0 WHEN ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c1)) THEN (((NULL))>((rt0.c0))) ELSE ((rt0.c1)IS NOT(rt0.c1)) END))) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE (((CASE rt0.c2  WHEN ((((rt0.c2)OR(rt0.c1)))OR('1894926875')) THEN LOWER(rt0.c2) WHEN ((rt0.c2)||(x'')) THEN rt0.c0 WHEN ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c1)) THEN (((NULL))>((rt0.c0))) ELSE ((rt0.c1)IS NOT(rt0.c1)) END) ISNULL));
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0 WHERE ((((rt0.c0 IN ())) NOT BETWEEN (rt0.c2) AND (((rt0.c0)==(rt0.c0))))) UNION SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT ((((rt0.c0 IN ())) NOT BETWEEN (rt0.c2) AND (((rt0.c0)==(rt0.c0))))))) UNION SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0 WHERE ((((((rt0.c0 IN ())) NOT BETWEEN (rt0.c2) AND (((rt0.c0)=(rt0.c0))))) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 WHERE ((((((((((0.9910582999903562)OR(rt0.c1)))AND('tm<㬄y')))OR(rt0.c1)))AND(rt0.c2)) IN ())) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0 WHERE ((NOT ((((((((((0.9910582999903562)OR(rt0.c1)))AND('tm<㬄y')))OR(rt0.c1)))AND(rt0.c2)) IN ())))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0 WHERE ((((((((((((0.9910582999903562)OR(rt0.c1)))AND('tm<㬄y')))OR(rt0.c1)))AND(rt0.c2)) IN ())) ISNULL)) GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING AVG(SUM(SUM(rt0.c2))) UNION ALL SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING (NOT (AVG(SUM(SUM(rt0.c2))))) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING ((AVG(SUM(SUM(rt0.c2)))) ISNULL);
SELECT SUM(((((rt0.c1 IN ())))!=((rt0.c1)))) FROM rt0 ORDER BY ((((((((CAST(rt0.c1 AS TEXT))OR((rt0.c1 IN ()))))OR(((rt0.c0)GLOB(rt0.c1)))))OR(((rt0.c1)>(rt0.c1)))))AND(((rt0.c0) BETWEEN ('Ed') AND (rt0.c1)))) DESC  NULLS LAST;
SELECT rt0.c1 FROM rt0;
SELECT rt0.c1 FROM rt0 WHERE ((((((rt0.c1)AND(rt0.c2)))AND(rt0.c0)) IN (LIKELY(rt0.c1)))) UNION ALL SELECT ALL rt0.c1 FROM rt0 WHERE ((NOT ((((((rt0.c1)AND(rt0.c2)))AND(rt0.c0)) IN (LIKELY(rt0.c1)))))) UNION ALL SELECT rt0.c1 FROM rt0 WHERE ((((((((rt0.c1)AND(rt0.c2)))AND(rt0.c0)) IN (LIKELY(rt0.c1)))) ISNULL));
SELECT rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (rt0.c1) UNION SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (rt0.c1))) UNION SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (((rt0.c1) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0;
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 WHERE (CAST(rt0.c0 AS INTEGER) COLLATE NOCASE) GROUP BY rt0.c0, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (CAST(rt0.c0 AS INTEGER) COLLATE NOCASE))) GROUP BY rt0.c0, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c2 FROM rt0 WHERE (((CAST(rt0.c0 AS INTEGER) COLLATE NOCASE) ISNULL)) GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING UNLIKELY(MIN(rt0.c1)) UNION ALL SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (NOT (UNLIKELY(MIN(rt0.c1)))) UNION ALL SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING ((UNLIKELY(MIN(rt0.c1))) ISNULL);
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING UNLIKELY(MIN(rt0.c1)) UNION ALL SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (NOT (UNLIKELY(MIN(rt0.c1)))) UNION ALL SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING ((UNLIKELY(MIN(rt0.c1))) ISNULL);
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE (((0.38490274495037546)OR((rt0.c1 IN ())))) UNION ALL SELECT * FROM rt0 WHERE ((NOT (((0.38490274495037546)OR((rt0.c1 IN ())))))) UNION ALL SELECT * FROM rt0 WHERE (((((0.38490274495037546)OR((rt0.c1 IN ())))) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c0 FROM rt0 WHERE (((~ (rt0.c1)) IN (((((rt0.c2)OR(rt0.c1)))AND(rt0.c0))))) UNION SELECT DISTINCT rt0.c0 FROM rt0 WHERE ((NOT (((~ (rt0.c1)) IN (((((rt0.c2)OR(rt0.c1)))AND(rt0.c0))))))) UNION SELECT DISTINCT rt0.c0 FROM rt0 WHERE (((((~ (rt0.c1)) IN (((((rt0.c2)OR(rt0.c1)))AND(rt0.c0))))) ISNULL));
SELECT DISTINCT rt0.c0 FROM rt0;
SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 WHERE (LAST_INSERT_ROWID()) GROUP BY rt0.c1, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (LAST_INSERT_ROWID()))) GROUP BY rt0.c1, rt0.c2 UNION SELECT rt0.c1, rt0.c2 FROM rt0 WHERE (((LAST_INSERT_ROWID()) ISNULL)) GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING MIN((+ (SUM(TOTAL(MAX(MAX(rt0.c2))))))) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING (NOT (MIN((+ (SUM(TOTAL(MAX(MAX(rt0.c2))))))))) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING ((MIN((+ (SUM(TOTAL(MAX(MAX(rt0.c2)))))))) ISNULL);
SELECT ALL rt0.c2 FROM rt0;
SELECT rt0.c2 FROM rt0 WHERE ((((rt0.c1, rt0.c2, rt0.c0)) NOT BETWEEN ((((rt0.c1)IS(rt0.c0)), ((((((((rt0.c1)OR(rt0.c1)))OR(rt0.c1)))AND(rt0.c2)))OR(rt0.c1)), (+ (rt0.c1)))) AND ((((rt0.c1)+(rt0.c2)), CAST(rt0.c0 AS INTEGER), (rt0.c2 IN ()))))) UNION ALL SELECT rt0.c2 FROM rt0 WHERE ((NOT ((((rt0.c1, rt0.c2, rt0.c0)) NOT BETWEEN ((((rt0.c1)IS(rt0.c0)), ((((((((rt0.c1)OR(rt0.c1)))OR(rt0.c1)))AND(rt0.c2)))OR(rt0.c1)), (+ (rt0.c1)))) AND ((((rt0.c1)+(rt0.c2)), CAST(rt0.c0 AS INTEGER), (rt0.c2 IN ()))))))) UNION ALL SELECT rt0.c2 FROM rt0 WHERE ((((((rt0.c1, rt0.c2, rt0.c0)) NOT BETWEEN ((((rt0.c1)IS(rt0.c0)), ((((((((rt0.c1)OR(rt0.c1)))OR(rt0.c1)))AND(rt0.c2)))OR(rt0.c1)), (+ (rt0.c1)))) AND ((((rt0.c1)+(rt0.c2)), CAST(rt0.c0 AS INTEGER), (rt0.c2 IN ()))))) ISNULL));
SELECT ALL rt0.c2 FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((('1609056298'))<>((((((rt0.c0)OR(rt0.c2)))AND(rt0.c1)))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((('1609056298'))<>((((((rt0.c0)OR(rt0.c2)))AND(rt0.c1)))))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((('1609056298'))!=((((((rt0.c0)OR(rt0.c2)))AND(rt0.c1)))))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((~ (CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 END))) GROUP BY rt0.c2, rt0.c1, rt0.c0 UNION SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT ((~ (CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 END))))) GROUP BY rt0.c2, rt0.c1, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((((~ (CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 END))) ISNULL)) GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING (((MIN(rt0.c1)))<((SUM(AVG(rt0.c1))))) COLLATE NOCASE UNION ALL SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING (NOT ((((MIN(rt0.c1)))<((SUM(AVG(rt0.c1))))) COLLATE NOCASE)) UNION ALL SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING (((((MIN(rt0.c1)))<((SUM(AVG(rt0.c1))))) COLLATE NOCASE) ISNULL);
SELECT TOTAL((((NOT (rt0.c2)))IS NOT(((rt0.c1) IS FALSE)))) FROM rt0;
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE (((((((rt0.c2)<(rt0.c1)))AND(rt0.c0)))AND(CASE 0.141868942185994  WHEN 0x51ce4757 THEN rt0.c2 ELSE rt0.c0 END))) UNION ALL SELECT * FROM rt0 WHERE ((NOT (((((((rt0.c2)<(rt0.c1)))AND(rt0.c0)))AND(CASE 0.141868942185994  WHEN 0X51ce4757 THEN rt0.c2 ELSE rt0.c0 END))))) UNION ALL SELECT * FROM rt0 WHERE (((((((((rt0.c2)<(rt0.c1)))AND(rt0.c0)))AND(CASE 0.141868942185994  WHEN 0X51ce4757 THEN rt0.c2 ELSE rt0.c0 END))) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE (STRFTIME(((rt0.c1)OR(rt0.c2)), 0.9393579093348077, (((rt0.c1, rt0.c2, rt0.c1)) NOT BETWEEN ((rt0.c0, rt0.c0, rt0.c1)) AND ((rt0.c0, rt0.c0, rt0.c2))), NULL, CAST(0.8585815775528881 AS REAL))) UNION SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (STRFTIME(((rt0.c1)OR(rt0.c2)), 0.9393579093348077, (((rt0.c1, rt0.c2, rt0.c1)) NOT BETWEEN ((rt0.c0, rt0.c0, rt0.c1)) AND ((rt0.c0, rt0.c0, rt0.c2))), NULL, CAST(0.8585815775528881 AS REAL))))) UNION SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE (((STRFTIME(((rt0.c1)OR(rt0.c2)), 0.9393579093348077, (((rt0.c1, rt0.c2, rt0.c1)) NOT BETWEEN ((rt0.c0, rt0.c0, rt0.c1)) AND ((rt0.c0, rt0.c0, rt0.c2))), NULL, CAST(0.8585815775528881 AS REAL))) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1 FROM rt0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT rt0.c1, rt0.c0 FROM rt0 WHERE ((((((rt0.c0))<>((rt0.c1))))LIKE(((rt0.c2) NOTNULL)))) GROUP BY rt0.c1, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT ((((((rt0.c0))!=((rt0.c1))))LIKE(((rt0.c2) NOTNULL)))))) GROUP BY rt0.c1, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c0 FROM rt0 WHERE ((((((((rt0.c0))!=((rt0.c1))))LIKE(((rt0.c2) NOTNULL)))) ISNULL)) GROUP BY rt0.c1, rt0.c0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING NULL UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT (NULL)) UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING ((NULL) ISNULL);
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING NULL UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT (NULL)) UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING ((NULL) ISNULL);
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c2 FROM rt0;
SELECT rt0.c2 FROM rt0 WHERE ((((rt0.c1)) NOT BETWEEN ((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2)))) AND ((((rt0.c1)LIKE(rt0.c2)))))) UNION ALL SELECT rt0.c2 FROM rt0 WHERE ((NOT ((((rt0.c1)) NOT BETWEEN ((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2)))) AND ((((rt0.c1)LIKE(rt0.c2)))))))) UNION ALL SELECT rt0.c2 FROM rt0 WHERE ((((((rt0.c1)) NOT BETWEEN ((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2)))) AND ((((rt0.c1)LIKE(rt0.c2)))))) ISNULL));
SELECT ALL rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c1 FROM rt0 WHERE (((((rt0.c0)-(rt0.c1))) NOT BETWEEN (((rt0.c2) NOT NULL)) AND ((+ (rt0.c2))))) UNION SELECT DISTINCT rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (((((rt0.c0)-(rt0.c1))) NOT BETWEEN (((rt0.c2) NOT NULL)) AND ((+ (rt0.c2))))))) UNION SELECT DISTINCT rt0.c0, rt0.c1 FROM rt0 WHERE (((((((rt0.c0)-(rt0.c1))) NOT BETWEEN (((rt0.c2) NOT NULL)) AND ((+ (rt0.c2))))) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c1 FROM rt0;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 WHERE ((((rt0.c2)) NOT BETWEEN ((((rt0.c2)AND(rt0.c0)))) AND ((CAST(rt0.c1 AS INTEGER))))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0 WHERE ((NOT ((((rt0.c2)) NOT BETWEEN ((((rt0.c2)AND(rt0.c0)))) AND ((CAST(rt0.c1 AS INTEGER))))))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0 WHERE ((((((rt0.c2)) NOT BETWEEN ((((rt0.c2)AND(rt0.c0)))) AND ((CAST(rt0.c1 AS INTEGER))))) ISNULL)) GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING TOTAL((('t%') ISNULL)) UNION ALL SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING (NOT (TOTAL((('t%') ISNULL)))) UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING ((TOTAL((('t%') ISNULL))) ISNULL);
SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING TOTAL((('t%') ISNULL)) UNION ALL SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING (NOT (TOTAL((('t%') ISNULL)))) UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING ((TOTAL((('t%') ISNULL))) ISNULL);
SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c2 FROM rt0;
SELECT rt0.c2 FROM rt0 WHERE (CASE WHEN IFNULL(rt0.c1, rt0.c0) THEN rt0.c2 COLLATE NOCASE END) UNION ALL SELECT rt0.c2 FROM rt0 WHERE ((NOT (CASE WHEN IFNULL(rt0.c1, rt0.c0) THEN rt0.c2 COLLATE NOCASE END))) UNION ALL SELECT rt0.c2 FROM rt0 WHERE (((CASE WHEN IFNULL(rt0.c1, rt0.c0) THEN rt0.c2 COLLATE NOCASE END) ISNULL));
SELECT rt0.c2 FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (CASE ((rt0.c0)<<(rt0.c2))  WHEN (((rt0.c0))>=((rt0.c2))) THEN rt0.c1 END) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (CASE ((rt0.c0)<<(rt0.c2))  WHEN (((rt0.c0))>=((rt0.c2))) THEN rt0.c1 END))) UNION SELECT DISTINCT * FROM rt0 WHERE (((CASE ((rt0.c0)<<(rt0.c2))  WHEN (((rt0.c0))>=((rt0.c2))) THEN rt0.c1 END) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 WHERE ((((('Q\r<') IS TRUE)) IS TRUE)) GROUP BY rt0.c1, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT ((((('Q\r<') IS TRUE)) IS TRUE)))) GROUP BY rt0.c1, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c0 FROM rt0 WHERE ((((((('Q\r<') IS TRUE)) IS TRUE)) ISNULL)) GROUP BY rt0.c1, rt0.c0;
SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING ((((rt0.c0) BETWEEN (SUM(COUNT(*))) AND (COUNT(AVG(rt0.c1)))))>=(((((((((NULL)AND(rt0.c0)))AND(AVG(MIN(TOTAL(rt0.c2))))))AND(rt0.c2)))AND(rt0.c0)))) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING (NOT (((((rt0.c0) BETWEEN (SUM(COUNT(*))) AND (COUNT(AVG(rt0.c1)))))>=(((((((((NULL)AND(rt0.c0)))AND(AVG(MIN(TOTAL(rt0.c2))))))AND(rt0.c2)))AND(rt0.c0)))))) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING ((((((rt0.c0) BETWEEN (SUM(COUNT(*))) AND (COUNT(AVG(rt0.c1)))))>=(((((((((NULL)AND(rt0.c0)))AND(AVG(MIN(TOTAL(rt0.c2))))))AND(rt0.c2)))AND(rt0.c0))))) ISNULL);
SELECT rt0.c0 FROM rt0;
SELECT rt0.c0 FROM rt0 WHERE (LOWER(DISTINCT (rt0.c1 IN ()))) UNION ALL SELECT rt0.c0 FROM rt0 WHERE ((NOT (LOWER(DISTINCT (rt0.c1 IN ()))))) UNION ALL SELECT ALL rt0.c0 FROM rt0 WHERE (((LOWER(DISTINCT (rt0.c1 IN ()))) ISNULL));
SELECT rt0.c0 FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((CASE WHEN rt0.c2 THEN rt0.c2 END) IS FALSE)) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((CASE WHEN rt0.c2 THEN rt0.c2 END) IS FALSE)))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((CASE WHEN rt0.c2 THEN rt0.c2 END) IS FALSE)) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (((rt0.c2)LIKE(rt0.c0))))) GROUP BY rt0.c1, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT ((NOT (((rt0.c2)LIKE(rt0.c0))))))) GROUP BY rt0.c1, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c2 FROM rt0 WHERE ((((NOT (((rt0.c2)LIKE(rt0.c0))))) ISNULL)) GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING SUM(rt0.c0) UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT (SUM(rt0.c0))) UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING ((SUM(rt0.c0)) ISNULL);
SELECT rt0.c2, rt0.c0 FROM rt0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 WHERE ((rt0.c0 COLLATE BINARY IN ())) UNION ALL SELECT rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT ((rt0.c0 COLLATE BINARY IN ())))) UNION ALL SELECT rt0.c2, rt0.c0 FROM rt0 WHERE ((((rt0.c0 COLLATE BINARY IN ())) ISNULL));
SELECT rt0.c2, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE (((CAST(rt0.c2 AS TEXT)) IS FALSE)) UNION SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (((CAST(rt0.c2 AS TEXT)) IS FALSE)))) UNION SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE (((((CAST(rt0.c2 AS TEXT)) IS FALSE)) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0;
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c1 FROM rt0 WHERE ((~ (((rt0.c0)>=(rt0.c1))))) GROUP BY rt0.c0, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT ((~ (((rt0.c0)>=(rt0.c1))))))) GROUP BY rt0.c0, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c1 FROM rt0 WHERE ((((~ (((rt0.c0)>=(rt0.c1))))) ISNULL)) GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING ((x'9a7c')LIKE(AVG(TOTAL(SUM(MIN(rt0.c2)))))) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING (NOT (((x'9a7c')LIKE(AVG(TOTAL(SUM(MIN(rt0.c2)))))))) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING ((((x'9a7c')LIKE(AVG(TOTAL(SUM(MIN(rt0.c2))))))) ISNULL);
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE (((x'9946')>(((rt0.c1) NOT BETWEEN (rt0.c2) AND ('-1611454177'))))) UNION ALL SELECT * FROM rt0 WHERE ((NOT (((x'9946')>(((rt0.c1) NOT BETWEEN (rt0.c2) AND ('-1611454177'))))))) UNION ALL SELECT ALL * FROM rt0 WHERE (((((x'9946')>(((rt0.c1) NOT BETWEEN (rt0.c2) AND ('-1611454177'))))) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((((((rt0.c1) IS FALSE))OR(rt0.c1)))OR(rt0.c0 COLLATE NOCASE))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((((((rt0.c1) IS FALSE))OR(rt0.c1)))OR(rt0.c0 COLLATE NOCASE))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((((((rt0.c1) IS FALSE))OR(rt0.c1)))OR(rt0.c0 COLLATE NOCASE))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 WHERE ((CASE x'47b0'  WHEN rt0.c2 THEN NULL END IN (rt0.c1, (rt0.c2 IN (rt0.c1))))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0 WHERE ((NOT ((CASE x'47b0'  WHEN rt0.c2 THEN NULL END IN (rt0.c1, (rt0.c2 IN (rt0.c1))))))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0 WHERE ((((CASE x'47b0'  WHEN rt0.c2 THEN NULL END IN (rt0.c1, (rt0.c2 IN (rt0.c1))))) ISNULL)) GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (TOTAL(COUNT(rt0.c0)) COLLATE RTRIM IN (MIN(rt0.c1))) UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT ((TOTAL(COUNT(rt0.c0)) COLLATE RTRIM IN (MIN(rt0.c1))))) UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (((TOTAL(COUNT(rt0.c0)) COLLATE RTRIM IN (MIN(rt0.c1)))) ISNULL);
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((~ (rt0.c0)) COLLATE RTRIM) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT ((~ (rt0.c0)) COLLATE RTRIM))) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((((~ (rt0.c0)) COLLATE RTRIM) ISNULL));
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE (HEX(568340856)) UNION SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (HEX(568340856)))) UNION SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE (((HEX(568340856)) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0 FROM rt0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 NOT INDEXED WHERE ((((rt0.c1)&(rt0.c0)) IN ())) GROUP BY rt0.c1, rt0.c2, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT ((((rt0.c1)&(rt0.c0)) IN ())))) GROUP BY rt0.c1, rt0.c2, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((((((rt0.c1)&(rt0.c0)) IN ())) ISNULL)) GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING GROUP_CONCAT(SUM(rt0.c1)) UNION ALL SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (NOT (GROUP_CONCAT(SUM(rt0.c1)))) UNION ALL SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING ((GROUP_CONCAT(SUM(rt0.c1))) ISNULL);
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE (((((rt0.c1)<<(rt0.c2)))OR(((((NULL)OR(rt0.c2)))OR(rt0.c2))))) UNION ALL SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (((((rt0.c1)<<(rt0.c2)))OR(((((NULL)OR(rt0.c2)))OR(rt0.c2))))))) UNION ALL SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE (((((((rt0.c1)<<(rt0.c2)))OR(((((NULL)OR(rt0.c2)))OR(rt0.c2))))) ISNULL));
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((((CASE rt0.c1  WHEN rt0.c2 THEN rt0.c1 END)AND(rt0.c2)))OR(CAST(NULL AS REAL)))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((((CASE rt0.c1  WHEN rt0.c2 THEN rt0.c1 END)AND(rt0.c2)))OR(CAST(NULL AS REAL)))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((((CASE rt0.c1  WHEN rt0.c2 THEN rt0.c1 END)AND(rt0.c2)))OR(CAST(NULL AS REAL)))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 WHERE ('F}') GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0 WHERE ((NOT ('F}'))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0 WHERE ((('F}') ISNULL)) GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING ((((rt0.c0)>>(rt0.c0))) NOT BETWEEN (((MAX(rt0.c1))IS(rt0.c0))) AND (GROUP_CONCAT(rt0.c1))) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING (NOT (((((rt0.c0)>>(rt0.c0))) NOT BETWEEN (((MAX(rt0.c1))IS(rt0.c0))) AND (GROUP_CONCAT(rt0.c1))))) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING ((((((rt0.c0)>>(rt0.c0))) NOT BETWEEN (((MAX(rt0.c1))IS(rt0.c0))) AND (GROUP_CONCAT(rt0.c1)))) ISNULL);
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING ((((rt0.c0)>>(rt0.c0))) NOT BETWEEN (((MAX(rt0.c1))IS(rt0.c0))) AND (GROUP_CONCAT(rt0.c1))) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING (NOT (((((rt0.c0)>>(rt0.c0))) NOT BETWEEN (((MAX(rt0.c1))IS(rt0.c0))) AND (GROUP_CONCAT(rt0.c1))))) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING ((((((rt0.c0)>>(rt0.c0))) NOT BETWEEN (((MAX(rt0.c1))IS(rt0.c0))) AND (GROUP_CONCAT(rt0.c1)))) ISNULL);
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE (((rt0.c0)<<('}흽g^\rG')) COLLATE RTRIM) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (((rt0.c0)<<('}흽g^\rG')) COLLATE RTRIM))) UNION ALL SELECT * FROM rt0 WHERE (((((rt0.c0)<<('}흽g^\rG')) COLLATE RTRIM) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ('633522460') UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ('633522460'))) UNION SELECT DISTINCT * FROM rt0 WHERE ((('633522460') ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 WHERE (((((rt0.c2, rt0.c0, rt0.c0)) BETWEEN ((rt0.c2, rt0.c1, rt0.c2)) AND ((rt0.c0, rt0.c1, rt0.c2))) IN ())) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM rt0 WHERE ((NOT (((((rt0.c2, rt0.c0, rt0.c0)) BETWEEN ((rt0.c2, rt0.c1, rt0.c2)) AND ((rt0.c0, rt0.c1, rt0.c2))) IN ())))) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM rt0 WHERE (((((((rt0.c2, rt0.c0, rt0.c0)) BETWEEN ((rt0.c2, rt0.c1, rt0.c2)) AND ((rt0.c0, rt0.c1, rt0.c2))) IN ())) ISNULL)) GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING MIN(rt0.c2 COLLATE RTRIM) UNION ALL SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING (NOT (MIN(rt0.c2 COLLATE RTRIM))) UNION ALL SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING ((MIN(rt0.c2 COLLATE RTRIM)) ISNULL);
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING MIN(rt0.c2 COLLATE RTRIM) UNION ALL SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING (NOT (MIN(rt0.c2 COLLATE RTRIM))) UNION ALL SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING ((MIN(rt0.c2 COLLATE RTRIM)) ISNULL);
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE ((((((rt0.c2, rt0.c1, rt0.c1))<((rt0.c2, rt0.c0, rt0.c0))))=(CASE WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 END))) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT ((((((rt0.c2, rt0.c1, rt0.c1))<((rt0.c2, rt0.c0, rt0.c0))))==(CASE WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 END))))) UNION ALL SELECT * FROM rt0 WHERE ((((((((rt0.c2, rt0.c1, rt0.c1))<((rt0.c2, rt0.c0, rt0.c0))))==(CASE WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 END))) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE (((0.7608260638143454) NOT NULL)) UNION SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (((0.7608260638143454) NOT NULL)))) UNION SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE (((((0.7608260638143454) NOT NULL)) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0 FROM rt0;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 WHERE ((((((rt0.c2))!=((rt0.c0)))) IS FALSE)) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0 WHERE ((NOT ((((((rt0.c2))<>((rt0.c0)))) IS FALSE)))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0 WHERE ((((((((rt0.c2))<>((rt0.c0)))) IS FALSE)) ISNULL)) GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING rt0.c0 UNION ALL SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (NOT (rt0.c0)) UNION ALL SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING ((rt0.c0) ISNULL);
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING rt0.c0 UNION ALL SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (NOT (rt0.c0)) UNION ALL SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING ((rt0.c0) ISNULL);
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((((NULL IN ())) NOT BETWEEN ((rt0.c1 IN ())) AND (CAST(rt0.c1 AS NUMERIC)))) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT ((((NULL IN ())) NOT BETWEEN ((rt0.c1 IN ())) AND (CAST(rt0.c1 AS NUMERIC)))))) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((((((NULL IN ())) NOT BETWEEN ((rt0.c1 IN ())) AND (CAST(rt0.c1 AS NUMERIC)))) ISNULL));
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE (((((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c2))) BETWEEN (CASE rt0.c0  WHEN rt0.c2 THEN 0.7884034852714787 ELSE rt0.c2 END) AND ('384536256'))) UNION SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (((((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c2))) BETWEEN (CASE rt0.c0  WHEN rt0.c2 THEN 0.7884034852714787 ELSE rt0.c2 END) AND ('384536256'))))) UNION SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE (((((((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c2))) BETWEEN (CASE rt0.c0  WHEN rt0.c2 THEN 0.7884034852714787 ELSE rt0.c2 END) AND ('384536256'))) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 WHERE (((((rt0.c1)IS(rt0.c2))) BETWEEN (rt0.c0) AND (((rt0.c1)!=(rt0.c2))))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0 WHERE ((NOT (((((rt0.c1)IS(rt0.c2))) BETWEEN (rt0.c0) AND (((rt0.c1)!=(rt0.c2))))))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0 WHERE (((((((rt0.c1)IS(rt0.c2))) BETWEEN (rt0.c0) AND (((rt0.c1)!=(rt0.c2))))) ISNULL)) GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING GROUP_CONCAT(MIN(rt0.c1)) COLLATE NOCASE UNION ALL SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (NOT (GROUP_CONCAT(MIN(rt0.c1)) COLLATE NOCASE)) UNION ALL SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING ((GROUP_CONCAT(MIN(rt0.c1)) COLLATE NOCASE) ISNULL);
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE (((((COALESCE(rt0.c0, rt0.c0))AND(CASE WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN x'0538' WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 END)))AND(rt0.c1 COLLATE NOCASE))) UNION ALL SELECT * FROM rt0 WHERE ((NOT (((((COALESCE(rt0.c0, rt0.c0))AND(CASE WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN x'0538' WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 END)))AND(rt0.c1 COLLATE NOCASE))))) UNION ALL SELECT * FROM rt0 WHERE (((((((COALESCE(rt0.c0, rt0.c0))AND(CASE WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN x'0538' WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 END)))AND(rt0.c1 COLLATE NOCASE))) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((rt0.c1)-(CASE WHEN rt0.c1 THEN rt0.c0 END))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((rt0.c1)-(CASE WHEN rt0.c1 THEN rt0.c0 END))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((rt0.c1)-(CASE WHEN rt0.c1 THEN rt0.c0 END))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 WHERE ((0X2bf3e5b2 IN ()) COLLATE RTRIM) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0 WHERE ((NOT ((0X2bf3e5b2 IN ()) COLLATE RTRIM))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0 WHERE ((((0X2bf3e5b2 IN ()) COLLATE RTRIM) ISNULL)) GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING COUNT(*) COLLATE NOCASE UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING (NOT (COUNT(*) COLLATE NOCASE)) UNION ALL SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING ((COUNT(*) COLLATE NOCASE) ISNULL);
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING COUNT(*) COLLATE NOCASE UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING (NOT (COUNT(*) COLLATE NOCASE)) UNION ALL SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING ((COUNT(*) COLLATE NOCASE) ISNULL);
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((((rt0.c2 IN ())) NOT BETWEEN (ABS(rt0.c2)) AND (CASE rt0.c0  WHEN '2\rqUDi	䂣' THEN rt0.c2 ELSE rt0.c0 END))) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT ((((rt0.c2 IN ())) NOT BETWEEN (ABS(rt0.c2)) AND (CASE rt0.c0  WHEN '2\rqUDi	䂣' THEN rt0.c2 ELSE rt0.c0 END))))) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((((((rt0.c2 IN ())) NOT BETWEEN (ABS(rt0.c2)) AND (CASE rt0.c0  WHEN '2\rqUDi	䂣' THEN rt0.c2 ELSE rt0.c0 END))) ISNULL));
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((((rt0.c0) IS TRUE) IN ())) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((((rt0.c0) IS TRUE) IN ())))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((((rt0.c0) IS TRUE) IN ())) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE (((((((((((((UNLIKELY(rt0.c0))AND(NULLIF(DISTINCT '300101746', x''))))OR(((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0)))))AND((rt0.c2 IN ()))))AND(IFNULL(DISTINCT rt0.c1, rt0.c2))))AND(((rt0.c2)<(rt0.c0)))))OR((rt0.c1 IN (rt0.c1, rt0.c0))))) GROUP BY rt0.c0, rt0.c2, rt0.c1 UNION SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (((((((((((((UNLIKELY(rt0.c0))AND(NULLIF(DISTINCT '300101746', x''))))OR(((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0)))))AND((rt0.c2 IN ()))))AND(IFNULL(DISTINCT rt0.c1, rt0.c2))))AND(((rt0.c2)<(rt0.c0)))))OR((rt0.c1 IN (rt0.c1, rt0.c0))))))) GROUP BY rt0.c0, rt0.c2, rt0.c1 UNION SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE (((((((((((((((UNLIKELY(rt0.c0))AND(NULLIF(DISTINCT '300101746', x''))))OR(((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0)))))AND((rt0.c2 IN ()))))AND(IFNULL(DISTINCT rt0.c1, rt0.c2))))AND(((rt0.c2)<(rt0.c0)))))OR((rt0.c1 IN (rt0.c1, rt0.c0))))) ISNULL)) GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING (((MAX(AVG(AVG(rt0.c2)))))<=((((((GROUP_CONCAT(GROUP_CONCAT(MAX(rt0.c2))))OR(COUNT(*))))AND(rt0.c0))))) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING (NOT ((((MAX(AVG(AVG(rt0.c2)))))<=((((((GROUP_CONCAT(GROUP_CONCAT(MAX(rt0.c2))))OR(COUNT(*))))AND(rt0.c0))))))) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING (((((MAX(AVG(AVG(rt0.c2)))))<=((((((GROUP_CONCAT(GROUP_CONCAT(MAX(rt0.c2))))OR(COUNT(*))))AND(rt0.c0)))))) ISNULL);
SELECT ALL rt0.c1, rt0.c2 FROM rt0;
SELECT rt0.c1, rt0.c2 FROM rt0 WHERE ((((((rt0.c1, rt0.c1, rt0.c2)) BETWEEN ((rt0.c2, rt0.c1, rt0.c1)) AND ((rt0.c0, rt0.c2, rt0.c2)))) IS FALSE)) UNION ALL SELECT rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT ((((((rt0.c1, rt0.c1, rt0.c2)) BETWEEN ((rt0.c2, rt0.c1, rt0.c1)) AND ((rt0.c0, rt0.c2, rt0.c2)))) IS FALSE)))) UNION ALL SELECT rt0.c1, rt0.c2 FROM rt0 WHERE ((((((((rt0.c1, rt0.c1, rt0.c2)) BETWEEN ((rt0.c2, rt0.c1, rt0.c1)) AND ((rt0.c0, rt0.c2, rt0.c2)))) IS FALSE)) ISNULL));
SELECT ALL rt0.c1, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c0 FROM rt0 WHERE (CASE CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c0 END  WHEN (((rt0.c1, rt0.c1, rt0.c0)) BETWEEN ((rt0.c0, rt0.c2, rt0.c2)) AND ((rt0.c0, rt0.c1, rt0.c1))) THEN (~ (rt0.c2)) END) UNION SELECT DISTINCT rt0.c0 FROM rt0 WHERE ((NOT (CASE CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c0 END  WHEN (((rt0.c1, rt0.c1, rt0.c0)) BETWEEN ((rt0.c0, rt0.c2, rt0.c2)) AND ((rt0.c0, rt0.c1, rt0.c1))) THEN (~ (rt0.c2)) END))) UNION SELECT DISTINCT rt0.c0 FROM rt0 WHERE (((CASE CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c0 END  WHEN (((rt0.c1, rt0.c1, rt0.c0)) BETWEEN ((rt0.c0, rt0.c2, rt0.c2)) AND ((rt0.c0, rt0.c1, rt0.c1))) THEN (~ (rt0.c2)) END) ISNULL));
SELECT DISTINCT rt0.c0 FROM rt0;
SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM rt0 WHERE ((((rt0.c1)) BETWEEN ((((((((((rt0.c1)AND(rt0.c1)))AND(x'')))AND(rt0.c0)))OR(rt0.c2)))) AND (('-1305327135')))) GROUP BY rt0.c2, rt0.c0 UNION SELECT rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT ((((rt0.c1)) BETWEEN ((((((((((rt0.c1)AND(rt0.c1)))AND(x'')))AND(rt0.c0)))OR(rt0.c2)))) AND (('-1305327135')))))) GROUP BY rt0.c2, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c0 FROM rt0 WHERE ((((((rt0.c1)) BETWEEN ((((((((((rt0.c1)AND(rt0.c1)))AND(x'')))AND(rt0.c0)))OR(rt0.c2)))) AND (('-1305327135')))) ISNULL)) GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING (+ (0.8788981003253111)) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING (NOT ((+ (0.8788981003253111)))) UNION ALL SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING (((+ (0.8788981003253111))) ISNULL);
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING (+ (0.8788981003253111)) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING (NOT ((+ (0.8788981003253111)))) UNION ALL SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING (((+ (0.8788981003253111))) ISNULL);
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE (((((CAST(rt0.c2 AS INTEGER))OR(((rt0.c0)+(NULL)))))OR(((((rt0.c1)OR(rt0.c1)))AND(1625247348))))) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (((((CAST(rt0.c2 AS INTEGER))OR(((rt0.c0)+(NULL)))))OR(((((rt0.c1)OR(rt0.c1)))AND(1625247348))))))) UNION ALL SELECT * FROM rt0 WHERE (((((((CAST(rt0.c2 AS INTEGER))OR(((rt0.c0)+(NULL)))))OR(((((rt0.c1)OR(rt0.c1)))AND(1625247348))))) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE (((((((rt0.c2)OR(rt0.c0)))OR(rt0.c2)))OR(rt0.c1 COLLATE NOCASE))) UNION SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (((((((rt0.c2)OR(rt0.c0)))OR(rt0.c2)))OR(rt0.c1 COLLATE NOCASE))))) UNION SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE (((((((((rt0.c2)OR(rt0.c0)))OR(rt0.c2)))OR(rt0.c1 COLLATE NOCASE))) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM rt0;
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 WHERE ((rt0.c0 IN ()) COLLATE RTRIM) GROUP BY rt0.c0, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT ((rt0.c0 IN ()) COLLATE RTRIM))) GROUP BY rt0.c0, rt0.c1 UNION SELECT rt0.c0, rt0.c1 FROM rt0 WHERE ((((rt0.c0 IN ()) COLLATE RTRIM) ISNULL)) GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING AVG(MAX(rt0.c1)) UNION ALL SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING (NOT (AVG(MAX(rt0.c1)))) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING ((AVG(MAX(rt0.c1))) ISNULL);
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c0)) IN ())) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT ((((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c0)) IN ())))) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((((((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c0)) IN ())) ISNULL));
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0 WHERE (UNICODE(rt0.c2)) UNION SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (UNICODE(rt0.c2)))) UNION SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0 WHERE (((UNICODE(rt0.c2)) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (rt0.c0) GROUP BY rt0.c1, rt0.c0, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (rt0.c0))) GROUP BY rt0.c1, rt0.c0, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (((rt0.c0) ISNULL)) GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING CAST(MIN(rt0.c0) AS INTEGER) UNION ALL SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING (NOT (CAST(MIN(rt0.c0) AS INTEGER))) UNION ALL SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING ((CAST(MIN(rt0.c0) AS INTEGER)) ISNULL);
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING CAST(MIN(rt0.c0) AS INTEGER) UNION ALL SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING (NOT (CAST(MIN(rt0.c0) AS INTEGER))) UNION ALL SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING ((CAST(MIN(rt0.c0) AS INTEGER)) ISNULL);
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT ALL * FROM rt0;
SELECT * FROM rt0 WHERE (((((((((((rt0.c2)OR(rt0.c2)))OR('')))OR(rt0.c1)))OR(rt0.c2))) NOTNULL)) UNION ALL SELECT * FROM rt0 WHERE ((NOT (((((((((((rt0.c2)OR(rt0.c2)))OR('')))OR(rt0.c1)))OR(rt0.c2))) NOTNULL)))) UNION ALL SELECT ALL * FROM rt0 WHERE (((((((((((((rt0.c2)OR(rt0.c2)))OR('')))OR(rt0.c1)))OR(rt0.c2))) NOTNULL)) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((((((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1)))AND(rt0.c0 COLLATE RTRIM)))AND(((rt0.c0)|(rt0.c2))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((((((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1)))AND(rt0.c0 COLLATE RTRIM)))AND(((rt0.c0)|(rt0.c2))))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((((((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1)))AND(rt0.c0 COLLATE RTRIM)))AND(((rt0.c0)|(rt0.c2))))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT rt0.c1, rt0.c0 FROM rt0 WHERE (0X65e0c4bb) GROUP BY rt0.c1, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (0X65e0c4bb))) GROUP BY rt0.c1, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c0 FROM rt0 WHERE (((0X65e0c4bb) ISNULL)) GROUP BY rt0.c1, rt0.c0;
SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING json_quote(AVG(rt0.c0)) UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING (NOT (json_quote(AVG(rt0.c0)))) UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING ((json_quote(AVG(rt0.c0))) ISNULL);
SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING json_quote(AVG(rt0.c0)) UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING (NOT (json_quote(AVG(rt0.c0)))) UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING ((json_quote(AVG(rt0.c0))) ISNULL);
SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c2 FROM rt0;
SELECT rt0.c2 FROM rt0 WHERE (((CAST(rt0.c0 AS REAL)) NOT NULL)) UNION ALL SELECT ALL rt0.c2 FROM rt0 WHERE ((NOT (((CAST(rt0.c0 AS REAL)) NOT NULL)))) UNION ALL SELECT rt0.c2 FROM rt0 WHERE (((((CAST(rt0.c0 AS REAL)) NOT NULL)) ISNULL));
SELECT rt0.c2 FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((CASE WHEN rt0.c1 THEN rt0.c2 END IN ())) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((CASE WHEN rt0.c1 THEN rt0.c2 END IN ())))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((CASE WHEN rt0.c1 THEN rt0.c2 END IN ())) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 WHERE (((rt0.c2)||(rt0.c1)) COLLATE RTRIM) GROUP BY rt0.c0, rt0.c1 UNION SELECT rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (((rt0.c2)||(rt0.c1)) COLLATE RTRIM))) GROUP BY rt0.c0, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c1 FROM rt0 WHERE (((((rt0.c2)||(rt0.c1)) COLLATE RTRIM) ISNULL)) GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING MAX(GROUP_CONCAT(MIN(COUNT(COUNT(*))))) UNION ALL SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING (NOT (MAX(GROUP_CONCAT(MIN(COUNT(COUNT(*))))))) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING ((MAX(GROUP_CONCAT(MIN(COUNT(COUNT(*)))))) ISNULL);
SELECT ALL rt0.c1 FROM rt0;
SELECT rt0.c1 FROM rt0 WHERE (CAST(CAST(rt0.c0 AS TEXT) AS TEXT)) UNION ALL SELECT rt0.c1 FROM rt0 WHERE ((NOT (CAST(CAST(rt0.c0 AS TEXT) AS TEXT)))) UNION ALL SELECT rt0.c1 FROM rt0 WHERE (((CAST(CAST(rt0.c0 AS TEXT) AS TEXT)) ISNULL));
SELECT ALL rt0.c1 FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ('Up') UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ('Up'))) UNION SELECT DISTINCT * FROM rt0 WHERE ((('Up') ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((((((((((((NULL)AND(rt0.c1)))AND(rt0.c1)))OR(rt0.c0)))AND(rt0.c0)), (~ (rt0.c0)), CAST(rt0.c2 AS BLOB)))<=((((rt0.c1) IS FALSE), CAST(rt0.c1 AS TEXT), (NOT (x'')))))) GROUP BY rt0.c1, rt0.c0, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT ((((((((((((NULL)AND(rt0.c1)))AND(rt0.c1)))OR(rt0.c0)))AND(rt0.c0)), (~ (rt0.c0)), CAST(rt0.c2 AS BLOB)))<=((((rt0.c1) IS FALSE), CAST(rt0.c1 AS TEXT), (NOT (x'')))))))) GROUP BY rt0.c1, rt0.c0, rt0.c2 UNION SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((((((((((((((NULL)AND(rt0.c1)))AND(rt0.c1)))OR(rt0.c0)))AND(rt0.c0)), (~ (rt0.c0)), CAST(rt0.c2 AS BLOB)))<=((((rt0.c1) IS FALSE), CAST(rt0.c1 AS TEXT), (NOT (x'')))))) ISNULL)) GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (((- (rt0.c0))) NOT BETWEEN (TOTAL(rt0.c1)) AND (COUNT(*))) UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT ((((- (rt0.c0))) NOT BETWEEN (TOTAL(rt0.c1)) AND (COUNT(*))))) UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (((((- (rt0.c0))) NOT BETWEEN (TOTAL(rt0.c1)) AND (COUNT(*)))) ISNULL);
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (((- (rt0.c0))) NOT BETWEEN (TOTAL(rt0.c1)) AND (COUNT(*))) UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT ((((- (rt0.c0))) NOT BETWEEN (TOTAL(rt0.c1)) AND (COUNT(*))))) UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (((((- (rt0.c0))) NOT BETWEEN (TOTAL(rt0.c1)) AND (COUNT(*)))) ISNULL);
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE (((0.4105469267827644) NOT BETWEEN ((+ (rt0.c1))) AND (rt0.c2 COLLATE RTRIM))) UNION ALL SELECT * FROM rt0 WHERE ((NOT (((0.4105469267827644) NOT BETWEEN ((+ (rt0.c1))) AND (rt0.c2 COLLATE RTRIM))))) UNION ALL SELECT * FROM rt0 WHERE (((((0.4105469267827644) NOT BETWEEN ((+ (rt0.c1))) AND (rt0.c2 COLLATE RTRIM))) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c2 FROM rt0 WHERE ((CAST(rt0.c1 AS REAL) IN (((rt0.c1)IS NOT(rt0.c2))))) UNION SELECT DISTINCT rt0.c2 FROM rt0 WHERE ((NOT ((CAST(rt0.c1 AS REAL) IN (((rt0.c1)IS NOT(rt0.c2))))))) UNION SELECT DISTINCT rt0.c2 FROM rt0 WHERE ((((CAST(rt0.c1 AS REAL) IN (((rt0.c1)IS NOT(rt0.c2))))) ISNULL));
SELECT DISTINCT rt0.c2 FROM rt0;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 WHERE ('') GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0 WHERE ((NOT (''))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0 WHERE ((('') ISNULL)) GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING GROUP_CONCAT(((rt0.c1) NOT NULL)) UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING (NOT (GROUP_CONCAT(((rt0.c1) NOT NULL)))) UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING ((GROUP_CONCAT(((rt0.c1) NOT NULL))) ISNULL);
SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING GROUP_CONCAT(((rt0.c1) NOT NULL)) UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING (NOT (GROUP_CONCAT(((rt0.c1) NOT NULL)))) UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING ((GROUP_CONCAT(((rt0.c1) NOT NULL))) ISNULL);
SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 WHERE (((((((rt0.c0) ISNULL))OR(rt0.c0 COLLATE BINARY)))OR(CASE WHEN rt0.c2 THEN rt0.c0 END))) UNION ALL SELECT rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (((((((rt0.c0) ISNULL))OR(rt0.c0 COLLATE BINARY)))OR(CASE WHEN rt0.c2 THEN rt0.c0 END))))) UNION ALL SELECT rt0.c0, rt0.c1 FROM rt0 WHERE (((((((((rt0.c0) ISNULL))OR(rt0.c0 COLLATE BINARY)))OR(CASE WHEN rt0.c2 THEN rt0.c0 END))) ISNULL));
SELECT ALL rt0.c0, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0 WHERE (CAST(CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 END AS REAL)) UNION SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (CAST(CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 END AS REAL)))) UNION SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0 WHERE (((CAST(CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 END AS REAL)) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE (CASE ((rt0.c2)<<(rt0.c0))  WHEN rt0.c0 THEN rt0.c0 COLLATE BINARY END) GROUP BY rt0.c0, rt0.c1, rt0.c2 UNION SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (CASE ((rt0.c2)<<(rt0.c0))  WHEN rt0.c0 THEN rt0.c0 COLLATE BINARY END))) GROUP BY rt0.c0, rt0.c1, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE (((CASE ((rt0.c2)<<(rt0.c0))  WHEN rt0.c0 THEN rt0.c0 COLLATE BINARY END) ISNULL)) GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING ((((((((((((((MAX(rt0.c2))<<(rt0.c2)))OR(MIN(COUNT(rt0.c1)))))OR(COUNT(MIN(rt0.c2)))))AND(rtreenode(rt0.c0, MAX(rt0.c0)))))AND(rt0.c1)))OR(TOTAL(rt0.c2) COLLATE BINARY)))AND(((rt0.c2) BETWEEN (rt0.c0) AND (TOTAL(SUM(AVG(rt0.c1))))))) UNION ALL SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING (NOT (((((((((((((((MAX(rt0.c2))<<(rt0.c2)))OR(MIN(COUNT(rt0.c1)))))OR(COUNT(MIN(rt0.c2)))))AND(rtreenode(rt0.c0, MAX(rt0.c0)))))AND(rt0.c1)))OR(TOTAL(rt0.c2) COLLATE BINARY)))AND(((rt0.c2) BETWEEN (rt0.c0) AND (TOTAL(SUM(AVG(rt0.c1))))))))) UNION ALL SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING ((((((((((((((((MAX(rt0.c2))<<(rt0.c2)))OR(MIN(COUNT(rt0.c1)))))OR(COUNT(MIN(rt0.c2)))))AND(rtreenode(rt0.c0, MAX(rt0.c0)))))AND(rt0.c1)))OR(TOTAL(rt0.c2) COLLATE BINARY)))AND(((rt0.c2) BETWEEN (rt0.c0) AND (TOTAL(SUM(AVG(rt0.c1)))))))) ISNULL);
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((UPPER(rt0.c1) IN ())) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT ((UPPER(rt0.c1) IN ())))) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((((UPPER(rt0.c1) IN ())) ISNULL));
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (LOWER(rt0.c0) COLLATE NOCASE) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (LOWER(rt0.c0) COLLATE NOCASE))) UNION SELECT DISTINCT * FROM rt0 WHERE (((LOWER(rt0.c0) COLLATE NOCASE) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 WHERE (((rt0.c2 COLLATE RTRIM) BETWEEN ((rt0.c1 IN ())) AND (rt0.c0 COLLATE RTRIM))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0 WHERE ((NOT (((rt0.c2 COLLATE RTRIM) BETWEEN ((rt0.c1 IN ())) AND (rt0.c0 COLLATE RTRIM))))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0 WHERE (((((rt0.c2 COLLATE RTRIM) BETWEEN ((rt0.c1 IN ())) AND (rt0.c0 COLLATE RTRIM))) ISNULL)) GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING ((TOTAL(rt0.c1))&(GROUP_CONCAT(rt0.c0))) UNION ALL SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING (NOT (((TOTAL(rt0.c1))&(GROUP_CONCAT(rt0.c0))))) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING ((((TOTAL(rt0.c1))&(GROUP_CONCAT(rt0.c0)))) ISNULL);
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING ((TOTAL(rt0.c1))&(GROUP_CONCAT(rt0.c0))) UNION ALL SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING (NOT (((TOTAL(rt0.c1))&(GROUP_CONCAT(rt0.c0))))) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING ((((TOTAL(rt0.c1))&(GROUP_CONCAT(rt0.c0)))) ISNULL);
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c2 FROM rt0;
SELECT ALL rt0.c2 FROM rt0 WHERE (json_array_length(rt0.c1)) UNION ALL SELECT rt0.c2 FROM rt0 WHERE ((NOT (json_array_length(rt0.c1)))) UNION ALL SELECT rt0.c2 FROM rt0 WHERE (((json_array_length(rt0.c1)) ISNULL));
SELECT ALL rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (rt0.c0 COLLATE BINARY) UNION SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (rt0.c0 COLLATE BINARY))) UNION SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (((rt0.c0 COLLATE BINARY) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 WHERE ((((rt0.c2, rt0.c1, rt0.c1)) BETWEEN ((0.5504388205585653, rt0.c1, rt0.c0)) AND ((rt0.c1, rt0.c2, rt0.c0))) COLLATE BINARY COLLATE NOCASE) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0 WHERE ((NOT ((((rt0.c2, rt0.c1, rt0.c1)) BETWEEN ((0.5504388205585653, rt0.c1, rt0.c0)) AND ((rt0.c1, rt0.c2, rt0.c0))) COLLATE BINARY COLLATE NOCASE))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0 WHERE ((((((rt0.c2, rt0.c1, rt0.c1)) BETWEEN ((0.5504388205585653, rt0.c1, rt0.c0)) AND ((rt0.c1, rt0.c2, rt0.c0))) COLLATE BINARY COLLATE NOCASE) ISNULL)) GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING x'' UNION ALL SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING (NOT (x'')) UNION ALL SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING ((x'') ISNULL);
SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING x'' UNION ALL SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING (NOT (x'')) UNION ALL SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING ((x'') ISNULL);
SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT ALL * FROM rt0;
SELECT * FROM rt0 WHERE (json_array(1.362277039E9, rt0.c0, rt0.c2, rt0.c2) COLLATE NOCASE) UNION ALL SELECT * FROM rt0 WHERE ((NOT (json_array(1.362277039E9, rt0.c0, rt0.c2, rt0.c2) COLLATE NOCASE))) UNION ALL SELECT ALL * FROM rt0 WHERE (((json_array(1.362277039E9, rt0.c0, rt0.c2, rt0.c2) COLLATE NOCASE) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0 WHERE (((((rt0.c1)IS NOT(0.8452692745502026))) BETWEEN (DATE(rt0.c2, rt0.c1, rt0.c1, rt0.c1, rt0.c0)) AND (((rt0.c2)GLOB(rt0.c1))))) UNION SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (((((rt0.c1)IS NOT(0.8452692745502026))) BETWEEN (DATE(rt0.c2, rt0.c1, rt0.c1, rt0.c1, rt0.c0)) AND (((rt0.c2)GLOB(rt0.c1))))))) UNION SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0 WHERE (((((((rt0.c1)IS NOT(0.8452692745502026))) BETWEEN (DATE(rt0.c2, rt0.c1, rt0.c1, rt0.c1, rt0.c0)) AND (((rt0.c2)GLOB(rt0.c1))))) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 WHERE ((((('442055428')IS(rt0.c2)))OR(rt0.c1 COLLATE NOCASE))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0 WHERE ((NOT ((((('442055428')IS(rt0.c2)))OR(rt0.c1 COLLATE NOCASE))))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0 WHERE ((((((('442055428')IS(rt0.c2)))OR(rt0.c1 COLLATE NOCASE))) ISNULL)) GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING NULLIF(TOTAL(rt0.c0) COLLATE NOCASE, NULL) UNION ALL SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING (NOT (NULLIF(TOTAL(rt0.c0) COLLATE NOCASE, NULL))) UNION ALL SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING ((NULLIF(TOTAL(rt0.c0) COLLATE NOCASE, NULL)) ISNULL);
SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING NULLIF(TOTAL(rt0.c0) COLLATE NOCASE, NULL) UNION ALL SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING (NOT (NULLIF(TOTAL(rt0.c0) COLLATE NOCASE, NULL))) UNION ALL SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING ((NULLIF(TOTAL(rt0.c0) COLLATE NOCASE, NULL)) ISNULL);
SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT MIN(STRFTIME(rtreenode(rt0.c0, rt0.c1), (((rt0.c0, rt0.c0, rt0.c1)) BETWEEN ((rt0.c0, rt0.c0, rt0.c0)) AND ((rt0.c1, rt0.c1, rt0.c2))), CAST(rt0.c2 AS INTEGER), NULL, TYPEOF(rt0.c1))) FROM rt0;
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE (CASE WHEN ((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c1)) THEN CASE x''  WHEN '880364875' THEN NULL END ELSE rt0.c1 COLLATE BINARY END) UNION ALL SELECT * FROM rt0 WHERE ((NOT (CASE WHEN ((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c1)) THEN CASE x''  WHEN '880364875' THEN NULL END ELSE rt0.c1 COLLATE BINARY END))) UNION ALL SELECT * FROM rt0 WHERE (((CASE WHEN ((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c1)) THEN CASE x''  WHEN '880364875' THEN NULL END ELSE rt0.c1 COLLATE BINARY END) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((((CASE 0Xffffffffd00462b8  WHEN rt0.c2 THEN 0.36133115803709914 ELSE ' K\n?-C~' END)OR(((rt0.c0) NOTNULL))))OR(rt0.c2 COLLATE NOCASE))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((((CASE 0Xffffffffd00462b8  WHEN rt0.c2 THEN 0.36133115803709914 ELSE ' K\n?-C~' END)OR(((rt0.c0) NOTNULL))))OR(rt0.c2 COLLATE NOCASE))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((((CASE 0Xffffffffd00462b8  WHEN rt0.c2 THEN 0.36133115803709914 ELSE ' K\n?-C~' END)OR(((rt0.c0) NOTNULL))))OR(rt0.c2 COLLATE NOCASE))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 WHERE (((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1)) COLLATE BINARY) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0 WHERE ((NOT (((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1)) COLLATE BINARY))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0 WHERE (((((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1)) COLLATE BINARY) ISNULL)) GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING MIN(TOTAL(rt0.c0) COLLATE RTRIM) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING (NOT (MIN(TOTAL(rt0.c0) COLLATE RTRIM))) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING ((MIN(TOTAL(rt0.c0) COLLATE RTRIM)) ISNULL);
SELECT TOTAL(rt0.c1) FROM rt0 ORDER BY ((rt0.c1) NOT BETWEEN (((rt0.c1) IS FALSE)) AND (CAST(rt0.c0 AS NUMERIC))) DESC  NULLS LAST;
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE ((((((2146671608)GLOB(rt0.c2)), ((((rt0.c0)AND(rt0.c2)))AND(rt0.c2)), rt0.c0))>((((((rt0.c2)AND(rt0.c2)))OR(rt0.c0)), ((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2)), (('dn\-v5b8') NOT BETWEEN (x'') AND (rt0.c0)))))) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT ((((((2146671608)GLOB(rt0.c2)), ((((rt0.c0)AND(rt0.c2)))AND(rt0.c2)), rt0.c0))>((((((rt0.c2)AND(rt0.c2)))OR(rt0.c0)), ((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2)), (('dn\-v5b8') NOT BETWEEN (x'') AND (rt0.c0)))))))) UNION ALL SELECT * FROM rt0 WHERE ((((((((2146671608)GLOB(rt0.c2)), ((((rt0.c0)AND(rt0.c2)))AND(rt0.c2)), rt0.c0))>((((((rt0.c2)AND(rt0.c2)))OR(rt0.c0)), ((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2)), (('dn\-v5b8') NOT BETWEEN (x'') AND (rt0.c0)))))) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((0.27233760739306334)OR(CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c2 END))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((0.27233760739306334)OR(CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c2 END))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((0.27233760739306334)OR(CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c2 END))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM rt0 WHERE ((((((((('bsVp')AND(((rt0.c0)GLOB(rt0.c2)))))AND(CASE rt0.c2  WHEN rt0.c0 THEN rt0.c1 END)))OR(((((rt0.c0)AND(rt0.c1)))OR(rt0.c0)))))OR((rt0.c1 IN (0.7446079316960711))))) GROUP BY rt0.c2, rt0.c0 UNION SELECT rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT ((((((((('bsVp')AND(((rt0.c0)GLOB(rt0.c2)))))AND(CASE rt0.c2  WHEN rt0.c0 THEN rt0.c1 END)))OR(((((rt0.c0)AND(rt0.c1)))OR(rt0.c0)))))OR((rt0.c1 IN (0.7446079316960711))))))) GROUP BY rt0.c2, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c0 FROM rt0 WHERE ((((((((((('bsVp')AND(((rt0.c0)GLOB(rt0.c2)))))AND(CASE rt0.c2  WHEN rt0.c0 THEN rt0.c1 END)))OR(((((rt0.c0)AND(rt0.c1)))OR(rt0.c0)))))OR((rt0.c1 IN (0.7446079316960711))))) ISNULL)) GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING COUNT(*) UNION ALL SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING COUNT(*) UNION ALL SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c0, rt0.c1 FROM rt0;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 WHERE ((~ (((rt0.c1)*(rt0.c1))))) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT ((~ (((rt0.c1)*(rt0.c1))))))) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM rt0 WHERE ((((~ (((rt0.c1)*(rt0.c1))))) ISNULL));
SELECT rt0.c0, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c0 FROM rt0 WHERE (CAST((rt0.c0 IN (rt0.c2)) AS TEXT)) UNION SELECT DISTINCT rt0.c0 FROM rt0 WHERE ((NOT (CAST((rt0.c0 IN (rt0.c2)) AS TEXT)))) UNION SELECT DISTINCT rt0.c0 FROM rt0 WHERE (((CAST((rt0.c0 IN (rt0.c2)) AS TEXT)) ISNULL));
SELECT DISTINCT rt0.c0 FROM rt0;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 WHERE (((((rt0.c2) NOT NULL))GLOB((((rt0.c1, rt0.c1, rt0.c1)) NOT BETWEEN ((rt0.c0, rt0.c0, rt0.c0)) AND ((rt0.c0, rt0.c0, rt0.c1)))))) GROUP BY rt0.c2, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (((((rt0.c2) NOT NULL))GLOB((((rt0.c1, rt0.c1, rt0.c1)) NOT BETWEEN ((rt0.c0, rt0.c0, rt0.c0)) AND ((rt0.c0, rt0.c0, rt0.c1)))))))) GROUP BY rt0.c2, rt0.c1 UNION SELECT rt0.c2, rt0.c1 FROM rt0 WHERE (((((((rt0.c2) NOT NULL))GLOB((((rt0.c1, rt0.c1, rt0.c1)) NOT BETWEEN ((rt0.c0, rt0.c0, rt0.c0)) AND ((rt0.c0, rt0.c0, rt0.c1)))))) ISNULL)) GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING MIN(rt0.c1 COLLATE NOCASE) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING (NOT (MIN(rt0.c1 COLLATE NOCASE))) UNION ALL SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING ((MIN(rt0.c1 COLLATE NOCASE)) ISNULL);
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING MIN(rt0.c1 COLLATE NOCASE) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING (NOT (MIN(rt0.c1 COLLATE NOCASE))) UNION ALL SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING ((MIN(rt0.c1 COLLATE NOCASE)) ISNULL);
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((((rt0.c1))!=((rt0.c2))) COLLATE BINARY) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT ((((rt0.c1))!=((rt0.c2))) COLLATE BINARY))) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((((((rt0.c1))!=((rt0.c2))) COLLATE BINARY) ISNULL));
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (((CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 END)AND(((rt0.c0)|(rt0.c0))))) UNION SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (((CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 END)AND(((rt0.c0)|(rt0.c0))))))) UNION SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (((((CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 END)AND(((rt0.c0)|(rt0.c0))))) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0;
SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT rt0.c1, rt0.c0 FROM rt0 WHERE (-1401417235) GROUP BY rt0.c1, rt0.c0 UNION SELECT rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (-1401417235))) GROUP BY rt0.c1, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c0 FROM rt0 WHERE (((-1401417235) ISNULL)) GROUP BY rt0.c1, rt0.c0;
SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING COUNT(*) UNION ALL SELECT rt0.c0 FROM rt0 NOT INDEXED GROUP BY rt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING COUNT(*) UNION ALL SELECT rt0.c0 FROM rt0 NOT INDEXED GROUP BY rt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL * FROM rt0;
SELECT * FROM rt0 WHERE (CAST((((rt0.c1, rt0.c2, rt0.c2)) BETWEEN ((rt0.c0, rt0.c0, rt0.c1)) AND ((rt0.c1, rt0.c1, rt0.c1))) AS REAL)) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (CAST((((rt0.c1, rt0.c2, rt0.c2)) BETWEEN ((rt0.c0, rt0.c0, rt0.c1)) AND ((rt0.c1, rt0.c1, rt0.c1))) AS REAL)))) UNION ALL SELECT ALL * FROM rt0 WHERE (((CAST((((rt0.c1, rt0.c2, rt0.c2)) BETWEEN ((rt0.c0, rt0.c0, rt0.c1)) AND ((rt0.c1, rt0.c1, rt0.c1))) AS REAL)) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c2 FROM rt0 WHERE (((((rt0.c0) IS TRUE))IS(((rt0.c1) NOT NULL)))) UNION SELECT DISTINCT rt0.c2 FROM rt0 WHERE ((NOT (((((rt0.c0) IS TRUE))IS(((rt0.c1) NOT NULL)))))) UNION SELECT DISTINCT rt0.c2 FROM rt0 WHERE (((((((rt0.c0) IS TRUE))IS(((rt0.c1) NOT NULL)))) ISNULL));
SELECT DISTINCT rt0.c2 FROM rt0;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 WHERE (CASE WHEN (rt0.c0 IN ()) THEN 'Y4}I*h\z' WHEN CAST(rt0.c1 AS INTEGER) THEN ((rt0.c2)LIKE(NULL)) WHEN ((((rt0.c1)OR(rt0.c0)))AND(rt0.c0)) THEN '0.4307374504766004' ELSE rt0.c0 END) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0 WHERE ((NOT (CASE WHEN (rt0.c0 IN ()) THEN 'Y4}I*h\z' WHEN CAST(rt0.c1 AS INTEGER) THEN ((rt0.c2)LIKE(NULL)) WHEN ((((rt0.c1)OR(rt0.c0)))AND(rt0.c0)) THEN '0.4307374504766004' ELSE rt0.c0 END))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0 WHERE (((CASE WHEN (rt0.c0 IN ()) THEN 'Y4}I*h\z' WHEN CAST(rt0.c1 AS INTEGER) THEN ((rt0.c2)LIKE(NULL)) WHEN ((((rt0.c1)OR(rt0.c0)))AND(rt0.c0)) THEN '0.4307374504766004' ELSE rt0.c0 END) ISNULL)) GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING COUNT(CASE WHEN GROUP_CONCAT(rt0.c0) THEN TOTAL(TOTAL(rt0.c0)) END) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING (NOT (COUNT(CASE WHEN GROUP_CONCAT(rt0.c0) THEN TOTAL(TOTAL(rt0.c0)) END))) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING ((COUNT(CASE WHEN GROUP_CONCAT(rt0.c0) THEN TOTAL(TOTAL(rt0.c0)) END)) ISNULL);
SELECT ALL * FROM rt0;
SELECT * FROM rt0 WHERE ((((rt0.c1 IN ()))%((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0)))))) UNION ALL SELECT * FROM rt0 WHERE ((NOT ((((rt0.c1 IN ()))%((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0)))))))) UNION ALL SELECT ALL * FROM rt0 WHERE ((((((rt0.c1 IN ()))%((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0)))))) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c1 FROM rt0 WHERE (((rt0.c2)%(rt0.c1)) COLLATE NOCASE) UNION SELECT DISTINCT rt0.c1 FROM rt0 WHERE ((NOT (((rt0.c2)%(rt0.c1)) COLLATE NOCASE))) UNION SELECT DISTINCT rt0.c1 FROM rt0 WHERE (((((rt0.c2)%(rt0.c1)) COLLATE NOCASE) ISNULL));
SELECT DISTINCT rt0.c1 FROM rt0;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c1, rt0.c2 FROM rt0 WHERE (UPPER(DISTINCT (((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1))))) GROUP BY rt0.c1, rt0.c2 UNION SELECT rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (UPPER(DISTINCT (((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1))))))) GROUP BY rt0.c1, rt0.c2 UNION SELECT rt0.c1, rt0.c2 FROM rt0 WHERE (((UPPER(DISTINCT (((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1))))) ISNULL)) GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING MAX(COUNT(rt0.c2)) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT (MAX(COUNT(rt0.c2)))) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((MAX(COUNT(rt0.c2))) ISNULL);
SELECT TOTAL((('1481604800') NOTNULL)) FROM rt0;
SELECT rt0.c2, rt0.c0 FROM rt0;
SELECT rt0.c2, rt0.c0 FROM rt0 WHERE (NULLIF(((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0)), ((0.8294629825544936) NOT BETWEEN (rt0.c1) AND (rt0.c0)))) UNION ALL SELECT rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (NULLIF(((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0)), ((0.8294629825544936) NOT BETWEEN (rt0.c1) AND (rt0.c0)))))) UNION ALL SELECT rt0.c2, rt0.c0 FROM rt0 WHERE (((NULLIF(((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0)), ((0.8294629825544936) NOT BETWEEN (rt0.c1) AND (rt0.c0)))) ISNULL));
SELECT rt0.c2, rt0.c0 FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (CAST((((rt0.c2))==((rt0.c0))) AS INTEGER)) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (CAST((((rt0.c2))=((rt0.c0))) AS INTEGER)))) UNION SELECT DISTINCT * FROM rt0 WHERE (((CAST((((rt0.c2))==((rt0.c0))) AS INTEGER)) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 WHERE ((((rt0.c1 IN ()))GLOB(((rt0.c2)%(rt0.c0))))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0 WHERE ((NOT ((((rt0.c1 IN ()))GLOB(((rt0.c2)%(rt0.c0))))))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0 WHERE ((((((rt0.c1 IN ()))GLOB(((rt0.c2)%(rt0.c0))))) ISNULL)) GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING GROUP_CONCAT((((rt0.c2, AVG(rt0.c1), rt0.c0)) NOT BETWEEN ((SUM(COUNT(*)), SUM(TOTAL(rt0.c2)), GROUP_CONCAT(rt0.c2))) AND ((rt0.c0, MIN(rt0.c0), TOTAL(rt0.c0))))) UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT (GROUP_CONCAT((((rt0.c2, AVG(rt0.c1), rt0.c0)) NOT BETWEEN ((SUM(COUNT(*)), SUM(TOTAL(rt0.c2)), GROUP_CONCAT(rt0.c2))) AND ((rt0.c0, MIN(rt0.c0), TOTAL(rt0.c0))))))) UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING ((GROUP_CONCAT((((rt0.c2, AVG(rt0.c1), rt0.c0)) NOT BETWEEN ((SUM(COUNT(*)), SUM(TOTAL(rt0.c2)), GROUP_CONCAT(rt0.c2))) AND ((rt0.c0, MIN(rt0.c0), TOTAL(rt0.c0)))))) ISNULL);
SELECT rt0.c1 FROM rt0;
SELECT ALL rt0.c1 FROM rt0 WHERE (((TRIM(rt0.c1, rt0.c0))=(((rt0.c2)GLOB(rt0.c2))))) UNION ALL SELECT rt0.c1 FROM rt0 WHERE ((NOT (((TRIM(rt0.c1, rt0.c0))==(((rt0.c2)GLOB(rt0.c2))))))) UNION ALL SELECT ALL rt0.c1 FROM rt0 WHERE (((((TRIM(rt0.c1, rt0.c0))=(((rt0.c2)GLOB(rt0.c2))))) ISNULL));
SELECT rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE (((CASE WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c0 END)>=(CASE rt0.c0  WHEN rt0.c2 THEN rt0.c2 END))) UNION SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (((CASE WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c0 END)>=(CASE rt0.c0  WHEN rt0.c2 THEN rt0.c2 END))))) UNION SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE (((((CASE WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c0 END)>=(CASE rt0.c0  WHEN rt0.c2 THEN rt0.c2 END))) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0 FROM rt0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 WHERE ((((((rt0.c1)>=(rt0.c0))))<>((CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c0 END)))) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM rt0 WHERE ((NOT ((((((rt0.c1)>=(rt0.c0))))!=((CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c0 END)))))) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM rt0 WHERE ((((((((rt0.c1)>=(rt0.c0))))!=((CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c0 END)))) ISNULL)) GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING '1372473175' UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING (NOT ('1372473175')) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING (('1372473175') ISNULL);
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING '1372473175' UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING (NOT ('1372473175')) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING (('1372473175') ISNULL);
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c2 FROM rt0;
SELECT ALL rt0.c2 FROM rt0 WHERE (CASE CAST(rt0.c0 AS TEXT)  WHEN (((rt0.c2))>=((rt0.c1))) THEN LIKELY(DISTINCT rt0.c1) END) UNION ALL SELECT ALL rt0.c2 FROM rt0 WHERE ((NOT (CASE CAST(rt0.c0 AS TEXT)  WHEN (((rt0.c2))>=((rt0.c1))) THEN LIKELY(DISTINCT rt0.c1) END))) UNION ALL SELECT ALL rt0.c2 FROM rt0 WHERE (((CASE CAST(rt0.c0 AS TEXT)  WHEN (((rt0.c2))>=((rt0.c1))) THEN LIKELY(DISTINCT rt0.c1) END) ISNULL));
SELECT rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((((((rt0.c1))>(('.g')))) NOTNULL)) UNION SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT ((((((rt0.c1))>(('.g')))) NOTNULL)))) UNION SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((((((((rt0.c1))>(('.g')))) NOTNULL)) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE (((CASE rt0.c0  WHEN rt0.c0 THEN NULL ELSE rt0.c1 END)GLOB(CAST(rt0.c0 AS TEXT)))) GROUP BY rt0.c2, rt0.c0, rt0.c1 UNION SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (((CASE rt0.c0  WHEN rt0.c0 THEN NULL ELSE rt0.c1 END)GLOB(CAST(rt0.c0 AS TEXT)))))) GROUP BY rt0.c2, rt0.c0, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE (((((CASE rt0.c0  WHEN rt0.c0 THEN NULL ELSE rt0.c1 END)GLOB(CAST(rt0.c0 AS TEXT)))) ISNULL)) GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING GROUP_CONCAT(((rt0.c2)IS(SUM(GROUP_CONCAT(rt0.c0))))) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING (NOT (GROUP_CONCAT(((rt0.c2)IS(SUM(GROUP_CONCAT(rt0.c0))))))) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING ((GROUP_CONCAT(((rt0.c2)IS(SUM(GROUP_CONCAT(rt0.c0)))))) ISNULL);
SELECT ALL rt0.c2 FROM rt0;
SELECT ALL rt0.c2 FROM rt0 WHERE (((((((((rt0.c2)OR((NOT (rt0.c1)))))OR((rt0.c0 IN ()))))AND(((rt0.c0) ISNULL))))OR(UNLIKELY(rt0.c0)))) UNION ALL SELECT rt0.c2 FROM rt0 WHERE ((NOT (((((((((rt0.c2)OR((NOT (rt0.c1)))))OR((rt0.c0 IN ()))))AND(((rt0.c0) ISNULL))))OR(UNLIKELY(rt0.c0)))))) UNION ALL SELECT ALL rt0.c2 FROM rt0 WHERE (((((((((((rt0.c2)OR((NOT (rt0.c1)))))OR((rt0.c0 IN ()))))AND(((rt0.c0) ISNULL))))OR(UNLIKELY(rt0.c0)))) ISNULL));
SELECT ALL rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE (((CAST(rt0.c1 AS TEXT))<>(CASE rt0.c1  WHEN rt0.c1 THEN '-1193207400' ELSE rt0.c0 END))) UNION SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (((CAST(rt0.c1 AS TEXT))!=(CASE rt0.c1  WHEN rt0.c1 THEN '-1193207400' ELSE rt0.c0 END))))) UNION SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE (((((CAST(rt0.c1 AS TEXT))!=(CASE rt0.c1  WHEN rt0.c1 THEN '-1193207400' ELSE rt0.c0 END))) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0 FROM rt0;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 WHERE (0.9348507562210625) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0 WHERE ((NOT (0.9348507562210625))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0 WHERE (((0.9348507562210625) ISNULL)) GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING rt0.c2 UNION ALL SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (NOT (rt0.c2)) UNION ALL SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING ((rt0.c2) ISNULL);
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING rt0.c2 UNION ALL SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (NOT (rt0.c2)) UNION ALL SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING ((rt0.c2) ISNULL);
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c2 FROM rt0;
SELECT rt0.c2 FROM rt0 WHERE (((json_patch(rt0.c0, rt0.c0)) NOT BETWEEN (rt0.c1 COLLATE NOCASE) AND (CASE rt0.c2  WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN 0x290b735d WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 END))) UNION ALL SELECT rt0.c2 FROM rt0 WHERE ((NOT (((json_patch(rt0.c0, rt0.c0)) NOT BETWEEN (rt0.c1 COLLATE NOCASE) AND (CASE rt0.c2  WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN 0x290b735d WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 END))))) UNION ALL SELECT ALL rt0.c2 FROM rt0 WHERE (((((json_patch(rt0.c0, rt0.c0)) NOT BETWEEN (rt0.c1 COLLATE NOCASE) AND (CASE rt0.c2  WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN 0x290b735d WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 END))) ISNULL));
SELECT rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c2 FROM rt0 WHERE ((NOT (rt0.c1 COLLATE NOCASE))) UNION SELECT DISTINCT rt0.c2 FROM rt0 WHERE ((NOT ((NOT (rt0.c1 COLLATE NOCASE))))) UNION SELECT DISTINCT rt0.c2 FROM rt0 WHERE ((((NOT (rt0.c1 COLLATE NOCASE))) ISNULL));
SELECT DISTINCT rt0.c2 FROM rt0;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 WHERE (rt0.c1) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0 WHERE ((NOT (rt0.c1))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0 WHERE (((rt0.c1) ISNULL)) GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING SUM(SUM(COUNT(COUNT(*)))) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING (NOT (SUM(SUM(COUNT(COUNT(*)))))) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING ((SUM(SUM(COUNT(COUNT(*))))) ISNULL);
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE (CASE ((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c2))  WHEN ((((rt0.c2)AND(rt0.c0)))AND(rt0.c0)) THEN (('')-(rt0.c2)) END) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (CASE ((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c2))  WHEN ((((rt0.c2)AND(rt0.c0)))AND(rt0.c0)) THEN (('')-(rt0.c2)) END))) UNION ALL SELECT * FROM rt0 WHERE (((CASE ((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c2))  WHEN ((((rt0.c2)AND(rt0.c0)))AND(rt0.c0)) THEN (('')-(rt0.c2)) END) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((('0.6127410344551111')) BETWEEN (((+ (rt0.c1)))) AND (((rt0.c1 IN ()))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((('0.6127410344551111')) BETWEEN (((+ (rt0.c1)))) AND (((rt0.c1 IN ()))))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((('0.6127410344551111')) BETWEEN (((+ (rt0.c1)))) AND (((rt0.c1 IN ()))))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2)) IN (((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1))))) GROUP BY rt0.c0, rt0.c1, rt0.c2 UNION SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT ((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2)) IN (((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1))))))) GROUP BY rt0.c0, rt0.c1, rt0.c2 UNION SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2)) IN (((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1))))) ISNULL)) GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING rt0.c2 UNION ALL SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (NOT (rt0.c2)) UNION ALL SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING ((rt0.c2) ISNULL);
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING rt0.c2 UNION ALL SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (NOT (rt0.c2)) UNION ALL SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING ((rt0.c2) ISNULL);
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL SUM(TYPEOF(CASE rt0.c2  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c1 END)) FROM rt0 ORDER BY CASE CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 END  WHEN (~ (rt0.c2)) THEN (((rt0.c1))>((rt0.c0))) END  NULLS LAST, CAST(TOTAL_CHANGES() AS INTEGER), rt0.c0  NULLS FIRST, CASE WHEN rt0.c0 THEN '-58738317' END  NULLS FIRST;
SELECT ALL * FROM rt0;
SELECT * FROM rt0 WHERE (rt0.c1) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (rt0.c1))) UNION ALL SELECT * FROM rt0 WHERE (((rt0.c1) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (rt0.c1) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (rt0.c1))) UNION SELECT DISTINCT * FROM rt0 WHERE (((rt0.c1) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE (((((rt0.c2)LIKE(rt0.c0)))-(((0x11e33072)||(rt0.c1))))) GROUP BY rt0.c0, rt0.c2, rt0.c1 UNION SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (((((rt0.c2)LIKE(rt0.c0)))-(((0x11e33072)||(rt0.c1))))))) GROUP BY rt0.c0, rt0.c2, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE (((((((rt0.c2)LIKE(rt0.c0)))-(((0X11e33072)||(rt0.c1))))) ISNULL)) GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 NOT INDEXED GROUP BY rt0.c0 HAVING COUNT(*) UNION ALL SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 NOT INDEXED GROUP BY rt0.c0 HAVING COUNT(*) UNION ALL SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE (CAST('0.24169530859345145' AS NUMERIC)) UNION ALL SELECT * FROM rt0 WHERE ((NOT (CAST('0.24169530859345145' AS NUMERIC)))) UNION ALL SELECT * FROM rt0 WHERE (((CAST('0.24169530859345145' AS NUMERIC)) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (CASE WHEN UPPER(DISTINCT rt0.c0) THEN (((rt0.c2)) NOT BETWEEN (('0.3472713047308815')) AND ((rt0.c2))) END) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (CASE WHEN UPPER(DISTINCT rt0.c0) THEN (((rt0.c2)) NOT BETWEEN (('0.3472713047308815')) AND ((rt0.c2))) END))) UNION SELECT DISTINCT * FROM rt0 WHERE (((CASE WHEN UPPER(DISTINCT rt0.c0) THEN (((rt0.c2)) NOT BETWEEN (('0.3472713047308815')) AND ((rt0.c2))) END) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 WHERE ((NULL IN ())) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0 WHERE ((NOT ((NULL IN ())))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0 WHERE ((((NULL IN ())) ISNULL)) GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING COUNT(*) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING COUNT(*) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE (ROUND(rt0.c0, rt0.c2) COLLATE NOCASE) UNION ALL SELECT * FROM rt0 WHERE ((NOT (ROUND(rt0.c0, rt0.c2) COLLATE NOCASE))) UNION ALL SELECT * FROM rt0 WHERE (((ROUND(rt0.c0, rt0.c2) COLLATE NOCASE) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (HEX(DISTINCT (((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (HEX(DISTINCT (((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0))))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((HEX(DISTINCT (((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0))))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE (rt0.c1) GROUP BY rt0.c0, rt0.c2, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (rt0.c1))) GROUP BY rt0.c0, rt0.c2, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE (((rt0.c1) ISNULL)) GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING ((((((rt0.c0)OR(MIN(COUNT(SUM(TOTAL(rt0.c0)))))))AND(COUNT(*)))) NOTNULL) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING (NOT (((((((rt0.c0)OR(MIN(COUNT(SUM(TOTAL(rt0.c0)))))))AND(COUNT(*)))) NOTNULL))) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING ((((((((rt0.c0)OR(MIN(COUNT(SUM(TOTAL(rt0.c0)))))))AND(COUNT(*)))) NOTNULL)) ISNULL);
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE (NULL) UNION ALL SELECT * FROM rt0 WHERE ((NOT (NULL))) UNION ALL SELECT * FROM rt0 WHERE (((NULL) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE (x'') UNION SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (x''))) UNION SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE (((x'') ISNULL));
SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1 FROM rt0;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ('') GROUP BY rt0.c2, rt0.c0, rt0.c1 UNION SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (''))) GROUP BY rt0.c2, rt0.c0, rt0.c1 UNION SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((('') ISNULL)) GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (((NOT (TOTAL(GROUP_CONCAT(COUNT(*))))))LIKE(MAX(rt0.c0))) UNION ALL SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT ((((NOT (TOTAL(GROUP_CONCAT(COUNT(*))))))LIKE(MAX(rt0.c0))))) UNION ALL SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (((((NOT (TOTAL(GROUP_CONCAT(COUNT(*))))))LIKE(MAX(rt0.c0)))) ISNULL);
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE (rt0.c2 COLLATE RTRIM) UNION ALL SELECT * FROM rt0 WHERE ((NOT (rt0.c2 COLLATE RTRIM))) UNION ALL SELECT ALL * FROM rt0 WHERE (((rt0.c2 COLLATE RTRIM) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ('') UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (''))) UNION SELECT DISTINCT * FROM rt0 WHERE ((('') ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE (((NULL)LIKE(rt0.c2)) COLLATE RTRIM) GROUP BY rt0.c1, rt0.c2, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (((NULL)LIKE(rt0.c2)) COLLATE RTRIM))) GROUP BY rt0.c1, rt0.c2, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE (((((NULL)LIKE(rt0.c2)) COLLATE RTRIM) ISNULL)) GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING COUNT(CAST(rt0.c0 AS TEXT)) UNION ALL SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING (NOT (COUNT(CAST(rt0.c0 AS TEXT)))) UNION ALL SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING ((COUNT(CAST(rt0.c0 AS TEXT))) ISNULL);
SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING COUNT(CAST(rt0.c0 AS TEXT)) UNION ALL SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING (NOT (COUNT(CAST(rt0.c0 AS TEXT)))) UNION ALL SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING ((COUNT(CAST(rt0.c0 AS TEXT))) ISNULL);
SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE (((((-1214522290) NOT BETWEEN (rt0.c2) AND (rt0.c2))) NOT BETWEEN (rt0.c1 COLLATE NOCASE) AND (((rt0.c2)<(rt0.c1))))) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (((((-1214522290) NOT BETWEEN (rt0.c2) AND (rt0.c2))) NOT BETWEEN (rt0.c1 COLLATE NOCASE) AND (((rt0.c2)<(rt0.c1))))))) UNION ALL SELECT ALL * FROM rt0 WHERE (((((((-1214522290) NOT BETWEEN (rt0.c2) AND (rt0.c2))) NOT BETWEEN (rt0.c1 COLLATE NOCASE) AND (((rt0.c2)<(rt0.c1))))) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0 WHERE (CAST(rt0.c2 COLLATE RTRIM AS INTEGER)) UNION SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (CAST(rt0.c2 COLLATE RTRIM AS INTEGER)))) UNION SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0 WHERE (((CAST(rt0.c2 COLLATE RTRIM AS INTEGER)) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE (NULL) GROUP BY rt0.c0, rt0.c1, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (NULL))) GROUP BY rt0.c0, rt0.c1, rt0.c2 UNION SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE (((NULL) ISNULL)) GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING GROUP_CONCAT(((MIN(MIN(AVG(COUNT(AVG(TOTAL(rt0.c1)))))))IS NOT(MAX(rt0.c1)))) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING (NOT (GROUP_CONCAT(((MIN(MIN(AVG(COUNT(AVG(TOTAL(rt0.c1)))))))IS NOT(MAX(rt0.c1)))))) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING ((GROUP_CONCAT(((MIN(MIN(AVG(COUNT(AVG(TOTAL(rt0.c1)))))))IS NOT(MAX(rt0.c1))))) ISNULL);
SELECT rt0.c0, rt0.c1 FROM rt0;
SELECT rt0.c0, rt0.c1 FROM rt0 WHERE ((((0.0013764023182506469)) NOT BETWEEN ((x'')) AND ((((rt0.c1)>=(rt0.c0)))))) UNION ALL SELECT rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT ((((0.0013764023182506469)) NOT BETWEEN ((x'')) AND ((((rt0.c1)>=(rt0.c0)))))))) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM rt0 WHERE ((((((0.0013764023182506469)) NOT BETWEEN ((x'')) AND ((((rt0.c1)>=(rt0.c0)))))) ISNULL));
SELECT rt0.c0, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0 WHERE (((rt0.c0) IS TRUE)) UNION SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (((rt0.c0) IS TRUE)))) UNION SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0 WHERE (((((rt0.c0) IS TRUE)) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 WHERE (((json_array_length(rt0.c2)) NOTNULL)) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM rt0 WHERE ((NOT (((json_array_length(rt0.c2)) NOTNULL)))) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM rt0 WHERE (((((json_array_length(rt0.c2)) NOTNULL)) ISNULL)) GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING COUNT((COUNT(*) IN ())) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT (COUNT((COUNT(*) IN ())))) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((COUNT((COUNT(*) IN ()))) ISNULL);
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING COUNT((COUNT(*) IN ())) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT (COUNT((COUNT(*) IN ())))) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((COUNT((COUNT(*) IN ()))) ISNULL);
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (LIKELIHOOD(DISTINCT CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 END, 0.21809864275970658)) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (LIKELIHOOD(DISTINCT CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 END, 0.21809864275970658)))) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (((LIKELIHOOD(DISTINCT CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 END, 0.21809864275970658)) ISNULL));
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c2 FROM rt0 WHERE (CASE WHEN ((rt0.c1)GLOB(0.5319639109964653)) THEN rt0.c1 ELSE ((((((((rt0.c0)AND(rt0.c0)))OR(rt0.c2)))OR(rt0.c2)))OR(rt0.c1)) END) UNION SELECT DISTINCT rt0.c2 FROM rt0 WHERE ((NOT (CASE WHEN ((rt0.c1)GLOB(0.5319639109964653)) THEN rt0.c1 ELSE ((((((((rt0.c0)AND(rt0.c0)))OR(rt0.c2)))OR(rt0.c2)))OR(rt0.c1)) END))) UNION SELECT DISTINCT rt0.c2 FROM rt0 WHERE (((CASE WHEN ((rt0.c1)GLOB(0.5319639109964653)) THEN rt0.c1 ELSE ((((((((rt0.c0)AND(rt0.c0)))OR(rt0.c2)))OR(rt0.c2)))OR(rt0.c1)) END) ISNULL));
SELECT DISTINCT rt0.c2 FROM rt0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 NOT INDEXED WHERE (rt0.c1) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM rt0 WHERE ((NOT (rt0.c1))) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM rt0 WHERE (((rt0.c1) ISNULL)) GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING MIN((+ (rt0.c1))) UNION ALL SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING (NOT (MIN((+ (rt0.c1))))) UNION ALL SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING ((MIN((+ (rt0.c1)))) ISNULL);
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING MIN((+ (rt0.c1))) UNION ALL SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING (NOT (MIN((+ (rt0.c1))))) UNION ALL SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING ((MIN((+ (rt0.c1)))) ISNULL);
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c1 FROM rt0;
SELECT rt0.c2, rt0.c1 FROM rt0 WHERE (((((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2)))GLOB(rt0.c1))) UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (((((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2)))GLOB(rt0.c1))))) UNION ALL SELECT rt0.c2, rt0.c1 FROM rt0 WHERE (((((((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2)))GLOB(rt0.c1))) ISNULL));
SELECT ALL rt0.c2, rt0.c1 FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (CASE WHEN rt0.c1 COLLATE RTRIM THEN ((rt0.c2)<(rt0.c0)) ELSE (~ (rt0.c2)) END) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (CASE WHEN rt0.c1 COLLATE RTRIM THEN ((rt0.c2)<(rt0.c0)) ELSE (~ (rt0.c2)) END))) UNION SELECT DISTINCT * FROM rt0 WHERE (((CASE WHEN rt0.c1 COLLATE RTRIM THEN ((rt0.c2)<(rt0.c0)) ELSE (~ (rt0.c2)) END) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c2, rt0.c1 FROM rt0 WHERE (((((((((((rt0.c1)/(rt0.c2)))OR(((rt0.c1) IS FALSE))))AND(((rt0.c1)=(rt0.c2)))))OR(((rt0.c1)<(rt0.c0)))))AND(rt0.c2))) GROUP BY rt0.c2, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (((((((((((rt0.c1)/(rt0.c2)))OR(((rt0.c1) IS FALSE))))AND(((rt0.c1)==(rt0.c2)))))OR(((rt0.c1)<(rt0.c0)))))AND(rt0.c2))))) GROUP BY rt0.c2, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c1 FROM rt0 WHERE (((((((((((((rt0.c1)/(rt0.c2)))OR(((rt0.c1) IS FALSE))))AND(((rt0.c1)=(rt0.c2)))))OR(((rt0.c1)<(rt0.c0)))))AND(rt0.c2))) ISNULL)) GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING COUNT((rt0.c0 IN (rt0.c2))) UNION ALL SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING (NOT (COUNT((rt0.c0 IN (rt0.c2))))) UNION ALL SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING ((COUNT((rt0.c0 IN (rt0.c2)))) ISNULL);
SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING COUNT((rt0.c0 IN (rt0.c2))) UNION ALL SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING (NOT (COUNT((rt0.c0 IN (rt0.c2))))) UNION ALL SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING ((COUNT((rt0.c0 IN (rt0.c2)))) ISNULL);
SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE (rt0.c1 COLLATE BINARY) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (rt0.c1 COLLATE BINARY))) UNION ALL SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE (((rt0.c1 COLLATE BINARY) ISNULL));
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((((rt0.c2) NOTNULL))==((rt0.c2 IN (x'', rt0.c2))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((((rt0.c2) NOTNULL))==((rt0.c2 IN (x'', rt0.c2))))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((((rt0.c2) NOTNULL))=((rt0.c2 IN (x'', rt0.c2))))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 WHERE (CAST(((rt0.c1)|(-2113108472)) AS TEXT)) GROUP BY rt0.c0, rt0.c1 UNION SELECT rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (CAST(((rt0.c1)|(-2113108472)) AS TEXT)))) GROUP BY rt0.c0, rt0.c1 UNION SELECT rt0.c0, rt0.c1 FROM rt0 WHERE (((CAST(((rt0.c1)|(-2113108472)) AS TEXT)) ISNULL)) GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (((rt0.c1)) BETWEEN (((~ (rt0.c0)))) AND (((- (COUNT(rt0.c0)))))) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT ((((rt0.c1)) BETWEEN (((~ (rt0.c0)))) AND (((- (COUNT(rt0.c0)))))))) UNION ALL SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (((((rt0.c1)) BETWEEN (((~ (rt0.c0)))) AND (((- (COUNT(rt0.c0))))))) ISNULL);
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (((rt0.c1)) BETWEEN (((~ (rt0.c0)))) AND (((- (COUNT(rt0.c0)))))) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT ((((rt0.c1)) BETWEEN (((~ (rt0.c0)))) AND (((- (COUNT(rt0.c0)))))))) UNION ALL SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (((((rt0.c1)) BETWEEN (((~ (rt0.c0)))) AND (((- (COUNT(rt0.c0))))))) ISNULL);
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c1 FROM rt0;
SELECT rt0.c1 FROM rt0 WHERE (INSTR(rt0.c1 COLLATE BINARY, CAST(rt0.c1 AS INTEGER))) UNION ALL SELECT rt0.c1 FROM rt0 WHERE ((NOT (INSTR(rt0.c1 COLLATE BINARY, CAST(rt0.c1 AS INTEGER))))) UNION ALL SELECT rt0.c1 FROM rt0 WHERE (((INSTR(rt0.c1 COLLATE BINARY, CAST(rt0.c1 AS INTEGER))) ISNULL));
SELECT ALL rt0.c1 FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((((x''))<(((- (rt0.c0)))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((((x''))<(((- (rt0.c0)))))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((((x''))<(((- (rt0.c0)))))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (((((CASE rt0.c1  WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 END)AND(CASE rt0.c0  WHEN rt0.c2 THEN rt0.c0 END)))OR(((((rt0.c2)OR(rt0.c2)))AND(rt0.c1))))) GROUP BY rt0.c1, rt0.c0, rt0.c2 UNION SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (((((CASE rt0.c1  WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 END)AND(CASE rt0.c0  WHEN rt0.c2 THEN rt0.c0 END)))OR(((((rt0.c2)OR(rt0.c2)))AND(rt0.c1))))))) GROUP BY rt0.c1, rt0.c0, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (((((((CASE rt0.c1  WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 END)AND(CASE rt0.c0  WHEN rt0.c2 THEN rt0.c0 END)))OR(((((rt0.c2)OR(rt0.c2)))AND(rt0.c1))))) ISNULL)) GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING TOTAL(((SUM(0.3970714199124452)) IS FALSE)) UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT (TOTAL(((SUM(0.3970714199124452)) IS FALSE)))) UNION ALL SELECT rt0.c1 FROM rt0 NOT INDEXED GROUP BY rt0.c1 HAVING ((TOTAL(((SUM(0.3970714199124452)) IS FALSE))) ISNULL);
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE (rt0.c1) UNION ALL SELECT * FROM rt0 WHERE ((NOT (rt0.c1))) UNION ALL SELECT * FROM rt0 WHERE (((rt0.c1) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE (CAST(HEX(DISTINCT rt0.c0) AS INTEGER)) UNION SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (CAST(HEX(DISTINCT rt0.c0) AS INTEGER)))) UNION SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE (((CAST(HEX(DISTINCT rt0.c0) AS INTEGER)) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM rt0;
SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 WHERE ((((((rt0.c2 IN ()))OR(CASE WHEN NULL THEN rt0.c0 ELSE rt0.c0 END)))OR(((((((((((((rt0.c2)OR(rt0.c0)))AND(NULL)))OR(rt0.c0)))OR(rt0.c2)))AND(rt0.c0)))OR(rt0.c1))))) GROUP BY rt0.c2, rt0.c0 UNION SELECT rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT ((((((rt0.c2 IN ()))OR(CASE WHEN NULL THEN rt0.c0 ELSE rt0.c0 END)))OR(((((((((((((rt0.c2)OR(rt0.c0)))AND(NULL)))OR(rt0.c0)))OR(rt0.c2)))AND(rt0.c0)))OR(rt0.c1))))))) GROUP BY rt0.c2, rt0.c0 UNION SELECT rt0.c2, rt0.c0 FROM rt0 WHERE ((((((((rt0.c2 IN ()))OR(CASE WHEN NULL THEN rt0.c0 ELSE rt0.c0 END)))OR(((((((((((((rt0.c2)OR(rt0.c0)))AND(NULL)))OR(rt0.c0)))OR(rt0.c2)))AND(rt0.c0)))OR(rt0.c1))))) ISNULL)) GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING MIN(MIN(COUNT(*))) UNION ALL SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (NOT (MIN(MIN(COUNT(*))))) UNION ALL SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING ((MIN(MIN(COUNT(*)))) ISNULL);
SELECT ALL TOTAL(((((CASE rt0.c1  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c2 END)OR((rt0.c0 IN ()))))OR((((rt0.c0))<=((rt0.c0)))))) FROM rt0 ORDER BY CASE TRIM(DISTINCT rt0.c1, rt0.c1)  WHEN ((rt0.c0)AND(rt0.c2)) THEN CASE WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 WHEN '' THEN rt0.c1 ELSE rt0.c1 END ELSE ((((rt0.c2)OR(rt0.c0)))OR(rt0.c0)) END ASC  NULLS FIRST;
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE (CAST((- (rt0.c2)) AS REAL)) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (CAST((- (rt0.c2)) AS REAL)))) UNION ALL SELECT * FROM rt0 WHERE (((CAST((- (rt0.c2)) AS REAL)) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c0 FROM rt0 WHERE (((((rt0.c1) NOTNULL))IS((rt0.c0 IN ())))) UNION SELECT DISTINCT rt0.c0 FROM rt0 WHERE ((NOT (((((rt0.c1) NOTNULL))IS((rt0.c0 IN ())))))) UNION SELECT DISTINCT rt0.c0 FROM rt0 WHERE (((((((rt0.c1) NOTNULL))IS((rt0.c0 IN ())))) ISNULL));
SELECT DISTINCT rt0.c0 FROM rt0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((((rt0.c1)) NOT BETWEEN ((((((rt0.c1)AND('880364875')))OR(rt0.c0)))) AND ((((rt0.c1) NOTNULL))))) GROUP BY rt0.c1, rt0.c2, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT ((((rt0.c1)) NOT BETWEEN ((((((rt0.c1)AND('880364875')))OR(rt0.c0)))) AND ((((rt0.c1) NOTNULL))))))) GROUP BY rt0.c1, rt0.c2, rt0.c0 UNION SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((((((rt0.c1)) NOT BETWEEN ((((((rt0.c1)AND('880364875')))OR(rt0.c0)))) AND ((((rt0.c1) NOTNULL))))) ISNULL)) GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING (+ (rt0.c0)) UNION ALL SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING (NOT ((+ (rt0.c0)))) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING (((+ (rt0.c0))) ISNULL);
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING (+ (rt0.c0)) UNION ALL SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING (NOT ((+ (rt0.c0)))) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING (((+ (rt0.c0))) ISNULL);
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT rt0.c2, rt0.c1 FROM rt0;
SELECT rt0.c2, rt0.c1 FROM rt0 WHERE (-1688250358) UNION ALL SELECT rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (-1688250358))) UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM rt0 WHERE (((-1688250358) ISNULL));
SELECT rt0.c2, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE (((((((rt0.c2)AND(rt0.c2)))AND(rt0.c2))) BETWEEN (rt0.c1) AND (((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1))))) UNION SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (((((((rt0.c2)AND(rt0.c2)))AND(rt0.c2))) BETWEEN (rt0.c1) AND (((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1))))))) UNION SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE (((((((((rt0.c2)AND(rt0.c2)))AND(rt0.c2))) BETWEEN (rt0.c1) AND (((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1))))) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM rt0;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 WHERE ((+ (((((((((rt0.c1)OR(rt0.c1)))AND(rt0.c1)))AND(rt0.c2)))AND(rt0.c2))))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0 WHERE ((NOT ((+ (((((((((rt0.c1)OR(rt0.c1)))AND(rt0.c1)))AND(rt0.c2)))AND(rt0.c2))))))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0 WHERE ((((+ (((((((((rt0.c1)OR(rt0.c1)))AND(rt0.c1)))AND(rt0.c2)))AND(rt0.c2))))) ISNULL)) GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING GROUP_CONCAT((((COUNT(rt0.c1), AVG(rt0.c2), GROUP_CONCAT(SUM(COUNT(*))))) NOT BETWEEN ((rt0.c1, SUM(rt0.c0), rt0.c2)) AND ((AVG(GROUP_CONCAT(COUNT(*))), rt0.c1, TOTAL(TOTAL(MIN(rt0.c2))))))) UNION ALL SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING (NOT (GROUP_CONCAT((((COUNT(rt0.c1), AVG(rt0.c2), GROUP_CONCAT(SUM(COUNT(*))))) NOT BETWEEN ((rt0.c1, SUM(rt0.c0), rt0.c2)) AND ((AVG(GROUP_CONCAT(COUNT(*))), rt0.c1, TOTAL(TOTAL(MIN(rt0.c2))))))))) UNION ALL SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING ((GROUP_CONCAT((((COUNT(rt0.c1), AVG(rt0.c2), GROUP_CONCAT(SUM(COUNT(*))))) NOT BETWEEN ((rt0.c1, SUM(rt0.c0), rt0.c2)) AND ((AVG(GROUP_CONCAT(COUNT(*))), rt0.c1, TOTAL(TOTAL(MIN(rt0.c2)))))))) ISNULL);
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE (((((rt0.c2))<((rt0.c0))) IN ())) UNION ALL SELECT * FROM rt0 WHERE ((NOT (((((rt0.c2))<((rt0.c0))) IN ())))) UNION ALL SELECT ALL * FROM rt0 WHERE (((((((rt0.c2))<((rt0.c0))) IN ())) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0 WHERE ((((rt0.c1, rt0.c1, x'')) NOT BETWEEN ((((rt0.c1)OR(rt0.c1)), NULL, ((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2)))) AND (((- (NULL)), CAST(rt0.c2 AS TEXT), ((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c2)))))) UNION SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT ((((rt0.c1, rt0.c1, x'')) NOT BETWEEN ((((rt0.c1)OR(rt0.c1)), NULL, ((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2)))) AND (((- (NULL)), CAST(rt0.c2 AS TEXT), ((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c2)))))))) UNION SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0 WHERE ((((((rt0.c1, rt0.c1, x'')) NOT BETWEEN ((((rt0.c1)OR(rt0.c1)), NULL, ((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2)))) AND (((- (NULL)), CAST(rt0.c2 AS TEXT), ((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c2)))))) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0;
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 WHERE (((((((rt0.c0)AND(0.37933126966265307)))OR(rt0.c0)))<=(((((rt0.c2)OR(rt0.c1)))OR(rt0.c2))))) GROUP BY rt0.c0, rt0.c1 UNION SELECT rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (((((((rt0.c0)AND(0.37933126966265307)))OR(rt0.c0)))<=(((((rt0.c2)OR(rt0.c1)))OR(rt0.c2))))))) GROUP BY rt0.c0, rt0.c1 UNION SELECT rt0.c0, rt0.c1 FROM rt0 WHERE (((((((((rt0.c0)AND(0.37933126966265307)))OR(rt0.c0)))<=(((((rt0.c2)OR(rt0.c1)))OR(rt0.c2))))) ISNULL)) GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING CASE WHEN rt0.c1 THEN CAST(MIN(COUNT(rt0.c1)) AS INTEGER) END UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING (NOT (CASE WHEN rt0.c1 THEN CAST(MIN(COUNT(rt0.c1)) AS INTEGER) END)) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING ((CASE WHEN rt0.c1 THEN CAST(MIN(COUNT(rt0.c1)) AS INTEGER) END) ISNULL);
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE (((((rt0.c0)IS(rt0.c2)))=(CAST(rt0.c1 AS NUMERIC)))) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (((((rt0.c0)IS(rt0.c2)))=(CAST(rt0.c1 AS NUMERIC)))))) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE (((((((rt0.c0)IS(rt0.c2)))==(CAST(rt0.c1 AS NUMERIC)))) ISNULL));
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE (CAST(((rt0.c1) ISNULL) AS INTEGER)) UNION SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (CAST(((rt0.c1) ISNULL) AS INTEGER)))) UNION SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE (((CAST(((rt0.c1) ISNULL) AS INTEGER)) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 WHERE ((~ ((rt0.c0 IN ())))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0 WHERE ((NOT ((~ ((rt0.c0 IN ())))))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0 WHERE ((((~ ((rt0.c0 IN ())))) ISNULL)) GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING MIN(GROUP_CONCAT(COUNT(rt0.c1))) UNION ALL SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING (NOT (MIN(GROUP_CONCAT(COUNT(rt0.c1))))) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING ((MIN(GROUP_CONCAT(COUNT(rt0.c1)))) ISNULL);
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE (((rt0.c0)AND(rt0.c1)) COLLATE BINARY) UNION ALL SELECT * FROM rt0 WHERE ((NOT (((rt0.c0)AND(rt0.c1)) COLLATE BINARY))) UNION ALL SELECT * FROM rt0 WHERE (((((rt0.c0)AND(rt0.c1)) COLLATE BINARY) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((((~ (rt0.c1)))||(CAST(rt0.c1 AS NUMERIC)))) UNION SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT ((((~ (rt0.c1)))||(CAST(rt0.c1 AS NUMERIC)))))) UNION SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((((((~ (rt0.c1)))||(CAST(rt0.c1 AS NUMERIC)))) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0 FROM rt0;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((((((- (rt0.c1)))AND(((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c0)))))OR(((('')) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1)))))) GROUP BY rt0.c0, rt0.c2, rt0.c1 UNION SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT ((((((- (rt0.c1)))AND(((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c0)))))OR(((('')) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1)))))))) GROUP BY rt0.c0, rt0.c2, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((((((((- (rt0.c1)))AND(((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c0)))))OR(((('')) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1)))))) ISNULL)) GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING IFNULL(DISTINCT ((rt0.c1) IS TRUE), TOTAL(COUNT(*))) UNION ALL SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING (NOT (IFNULL(DISTINCT ((rt0.c1) IS TRUE), TOTAL(COUNT(*))))) UNION ALL SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING ((IFNULL(DISTINCT ((rt0.c1) IS TRUE), TOTAL(COUNT(*)))) ISNULL);
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((((((rt0.c1 IN ()))AND(CASE NULL  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 END)))AND(((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0))))) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT ((((((rt0.c1 IN ()))AND(CASE NULL  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 END)))AND(((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0))))))) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((((((((rt0.c1 IN ()))AND(CASE NULL  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 END)))AND(((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0))))) ISNULL));
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (rt0.c2) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (rt0.c2))) UNION SELECT DISTINCT * FROM rt0 WHERE (((rt0.c2) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 WHERE (rt0.c0) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0 WHERE ((NOT (rt0.c0))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0 WHERE (((rt0.c0) ISNULL)) GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING AVG(((((rt0.c1)OR(rt0.c2)))AND(COUNT(*)))) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING (NOT (AVG(((((rt0.c1)OR(rt0.c2)))AND(COUNT(*)))))) UNION ALL SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING ((AVG(((((rt0.c1)OR(rt0.c2)))AND(COUNT(*))))) ISNULL);
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE (((rt0.c2) ISNULL)) UNION ALL SELECT * FROM rt0 WHERE ((NOT (((rt0.c2) ISNULL)))) UNION ALL SELECT ALL * FROM rt0 WHERE (((((rt0.c2) ISNULL)) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((CAST(rt0.c1 AS NUMERIC)) NOTNULL)) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((CAST(rt0.c1 AS NUMERIC)) NOTNULL)))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((CAST(rt0.c1 AS NUMERIC)) NOTNULL)) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 WHERE (0.4134410840345084) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM rt0 WHERE ((NOT (0.4134410840345084))) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM rt0 WHERE (((0.4134410840345084) ISNULL)) GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING ((rt0.c0) BETWEEN (TOTAL(rt0.c2)) AND (((COUNT(COUNT(MIN(x'')))) BETWEEN (GROUP_CONCAT(rt0.c1)) AND (rt0.c1)))) UNION ALL SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING (NOT (((rt0.c0) BETWEEN (TOTAL(rt0.c2)) AND (((COUNT(COUNT(MIN(x'')))) BETWEEN (GROUP_CONCAT(rt0.c1)) AND (rt0.c1)))))) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING ((((rt0.c0) BETWEEN (TOTAL(rt0.c2)) AND (((COUNT(COUNT(MIN(x'')))) BETWEEN (GROUP_CONCAT(rt0.c1)) AND (rt0.c1))))) ISNULL);
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE (((rt0.c2) NOTNULL) COLLATE BINARY) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (((rt0.c2) NOTNULL) COLLATE BINARY))) UNION ALL SELECT ALL * FROM rt0 WHERE (((((rt0.c2) NOTNULL) COLLATE BINARY) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((((rt0.c2)) BETWEEN ((((((rt0.c1)AND(rt0.c1)))OR(0.4958319996453471)))) AND (('%kpcw뚨b{')))) UNION SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT ((((rt0.c2)) BETWEEN ((((((rt0.c1)AND(rt0.c1)))OR(0.4958319996453471)))) AND (('%kpcw뚨b{')))))) UNION SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((((((rt0.c2)) BETWEEN ((((((rt0.c1)AND(rt0.c1)))OR(0.4958319996453471)))) AND (('%kpcw뚨b{')))) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0 FROM rt0;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE (CASE ((((rt0.c2)OR(rt0.c0)))OR(rt0.c2))  WHEN (~ (rt0.c1)) THEN ((rt0.c2)GLOB(x'')) WHEN '-578106087' THEN ((((((((rt0.c0)AND(rt0.c2)))OR(rt0.c1)))OR(rt0.c2)))OR(rt0.c1)) WHEN (('')>(rt0.c1)) THEN (- (NULL)) ELSE (((0.6507480676701489, rt0.c1, '+S!9y'))<>((')|3M', rt0.c2, rt0.c0))) END) GROUP BY rt0.c0, rt0.c2, rt0.c1 UNION SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (CASE ((((rt0.c2)OR(rt0.c0)))OR(rt0.c2))  WHEN (~ (rt0.c1)) THEN ((rt0.c2)GLOB(x'')) WHEN '-578106087' THEN ((((((((rt0.c0)AND(rt0.c2)))OR(rt0.c1)))OR(rt0.c2)))OR(rt0.c1)) WHEN (('')>(rt0.c1)) THEN (- (NULL)) ELSE (((0.6507480676701489, rt0.c1, '+S!9y'))<>((')|3M', rt0.c2, rt0.c0))) END))) GROUP BY rt0.c0, rt0.c2, rt0.c1 UNION SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE (((CASE ((((rt0.c2)OR(rt0.c0)))OR(rt0.c2))  WHEN (~ (rt0.c1)) THEN ((rt0.c2)GLOB(x'')) WHEN '-578106087' THEN ((((((((rt0.c0)AND(rt0.c2)))OR(rt0.c1)))OR(rt0.c2)))OR(rt0.c1)) WHEN (('')>(rt0.c1)) THEN (- (NULL)) ELSE (((0.6507480676701489, rt0.c1, '+S!9y'))<>((')|3M', rt0.c2, rt0.c0))) END) ISNULL)) GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING (+ (LIKELIHOOD(rt0.c2, 0.052312216569680436))) UNION ALL SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING (NOT ((+ (LIKELIHOOD(rt0.c2, 0.052312216569680436))))) UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING (((+ (LIKELIHOOD(rt0.c2, 0.052312216569680436)))) ISNULL);
SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING (+ (LIKELIHOOD(rt0.c2, 0.052312216569680436))) UNION ALL SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING (NOT ((+ (LIKELIHOOD(rt0.c2, 0.052312216569680436))))) UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING (((+ (LIKELIHOOD(rt0.c2, 0.052312216569680436)))) ISNULL);
SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE (((((((rt0.c0)&(rt0.c1)))AND(rt0.c1)))OR(((rt0.c0)!=(rt0.c2))))) UNION ALL SELECT * FROM rt0 WHERE ((NOT (((((((rt0.c0)&(rt0.c1)))AND(rt0.c1)))OR(((rt0.c0)!=(rt0.c2))))))) UNION ALL SELECT ALL * FROM rt0 WHERE (((((((((rt0.c0)&(rt0.c1)))AND(rt0.c1)))OR(((rt0.c0)!=(rt0.c2))))) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((((- (rt0.c0)))==('bc8*r}呌do' COLLATE NOCASE))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((((- (rt0.c0)))==('bc8*r}呌do' COLLATE NOCASE))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((((- (rt0.c0)))=('bc8*r}呌do' COLLATE NOCASE))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c2 FROM rt0 WHERE (rt0.c0) GROUP BY rt0.c0, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (rt0.c0))) GROUP BY rt0.c0, rt0.c2 UNION SELECT rt0.c0, rt0.c2 FROM rt0 WHERE (((rt0.c0) ISNULL)) GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING SUM(MIN(AVG(MIN(rt0.c2)))) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING (NOT (SUM(MIN(AVG(MIN(rt0.c2)))))) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING ((SUM(MIN(AVG(MIN(rt0.c2))))) ISNULL);
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE (NULL) UNION ALL SELECT * FROM rt0 WHERE ((NOT (NULL))) UNION ALL SELECT * FROM rt0 WHERE (((NULL) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((((((rt0.c2))<=((rt0.c0)))) NOT BETWEEN (rt0.c1 COLLATE RTRIM) AND (CASE rt0.c1  WHEN rt0.c2 THEN rt0.c1 END))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((((((rt0.c2))<=((rt0.c0)))) NOT BETWEEN (rt0.c1 COLLATE RTRIM) AND (CASE rt0.c1  WHEN rt0.c2 THEN rt0.c1 END))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((((((rt0.c2))<=((rt0.c0)))) NOT BETWEEN (rt0.c1 COLLATE RTRIM) AND (CASE rt0.c1  WHEN rt0.c2 THEN rt0.c1 END))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 WHERE (((NULLIF(DISTINCT rt0.c1, rt0.c2)) ISNULL)) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0 WHERE ((NOT (((NULLIF(DISTINCT rt0.c1, rt0.c2)) ISNULL)))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0 WHERE (((((NULLIF(DISTINCT rt0.c1, rt0.c2)) ISNULL)) ISNULL)) GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING MIN(TOTAL(rt0.c1)) UNION ALL SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT (MIN(TOTAL(rt0.c1)))) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((MIN(TOTAL(rt0.c1))) ISNULL);
SELECT ALL rt0.c1, rt0.c0 FROM rt0;
SELECT rt0.c1, rt0.c0 FROM rt0 NOT INDEXED WHERE ((((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1)) IN ())) UNION ALL SELECT rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT ((((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1)) IN ())))) UNION ALL SELECT ALL rt0.c1, rt0.c0 FROM rt0 WHERE ((((((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1)) IN ())) ISNULL));
SELECT ALL rt0.c1, rt0.c0 FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (CASE (((rt0.c2, rt0.c2, rt0.c1)) BETWEEN ((rt0.c2, rt0.c2, rt0.c2)) AND ((rt0.c2, rt0.c0, rt0.c1)))  WHEN rt0.c0 COLLATE BINARY THEN (- (rt0.c0)) WHEN ((rt0.c2)AND(rt0.c0)) THEN '' WHEN CAST(rt0.c1 AS REAL) THEN 1.894926875E9 WHEN rt0.c0 THEN ((((rt0.c0)AND(rt0.c2)))AND(x'')) WHEN json_remove(rt0.c2, x'5e2c') THEN ((rt0.c0) IS FALSE) END) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (CASE (((rt0.c2, rt0.c2, rt0.c1)) BETWEEN ((rt0.c2, rt0.c2, rt0.c2)) AND ((rt0.c2, rt0.c0, rt0.c1)))  WHEN rt0.c0 COLLATE BINARY THEN (- (rt0.c0)) WHEN ((rt0.c2)AND(rt0.c0)) THEN '' WHEN CAST(rt0.c1 AS REAL) THEN 1.894926875E9 WHEN rt0.c0 THEN ((((rt0.c0)AND(rt0.c2)))AND(x'')) WHEN json_remove(rt0.c2, x'5e2c') THEN ((rt0.c0) IS FALSE) END))) UNION SELECT DISTINCT * FROM rt0 WHERE (((CASE (((rt0.c2, rt0.c2, rt0.c1)) BETWEEN ((rt0.c2, rt0.c2, rt0.c2)) AND ((rt0.c2, rt0.c0, rt0.c1)))  WHEN rt0.c0 COLLATE BINARY THEN (- (rt0.c0)) WHEN ((rt0.c2)AND(rt0.c0)) THEN '' WHEN CAST(rt0.c1 AS REAL) THEN 1.894926875E9 WHEN rt0.c0 THEN ((((rt0.c0)AND(rt0.c2)))AND(x'')) WHEN json_remove(rt0.c2, x'5e2c') THEN ((rt0.c0) IS FALSE) END) ISNULL));
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE (((rt0.c1 COLLATE RTRIM) NOT BETWEEN (((rt0.c1)LIKE(rt0.c1))) AND (((0.4185214552391372)OR(rt0.c1))))) GROUP BY rt0.c0, rt0.c2, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (((rt0.c1 COLLATE RTRIM) NOT BETWEEN (((rt0.c1)LIKE(rt0.c1))) AND (((0.4185214552391372)OR(rt0.c1))))))) GROUP BY rt0.c0, rt0.c2, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE (((((rt0.c1 COLLATE RTRIM) NOT BETWEEN (((rt0.c1)LIKE(rt0.c1))) AND (((0.4185214552391372)OR(rt0.c1))))) ISNULL)) GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING ((SUM(GROUP_CONCAT(SUM(GROUP_CONCAT(rt0.c2)))))<<(COUNT(rt0.c0))) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING (NOT (((SUM(GROUP_CONCAT(SUM(GROUP_CONCAT(rt0.c2)))))<<(COUNT(rt0.c0))))) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING ((((SUM(GROUP_CONCAT(SUM(GROUP_CONCAT(rt0.c2)))))<<(COUNT(rt0.c0)))) ISNULL);
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE (((+ (rt0.c2)) IN ())) UNION ALL SELECT * FROM rt0 WHERE ((NOT (((+ (rt0.c2)) IN ())))) UNION ALL SELECT ALL * FROM rt0 WHERE (((((+ (rt0.c2)) IN ())) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((rt0.c1) NOT NULL)) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((rt0.c1) NOT NULL)))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((rt0.c1) NOT NULL)) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 WHERE (TRIM(DISTINCT (NOT (x'9bbe015f')), ((rt0.c0)<=(rt0.c0)))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0 WHERE ((NOT (TRIM(DISTINCT (NOT (x'9bbe015f')), ((rt0.c0)<=(rt0.c0)))))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0 WHERE (((TRIM(DISTINCT (NOT (x'9bbe015f')), ((rt0.c0)<=(rt0.c0)))) ISNULL)) GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING rt0.c1 UNION ALL SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING (NOT (rt0.c1)) UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING ((rt0.c1) ISNULL);
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING rt0.c1 UNION ALL SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING (NOT (rt0.c1)) UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING ((rt0.c1) ISNULL);
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT SUM((((((~ (rt0.c1)))AND(((rt0.c1)<=(rt0.c0)))))OR(((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c1))))) FROM rt0;
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE ((((((rt0.c0, rt0.c0, rt0.c2)) BETWEEN ((rt0.c1, rt0.c0, rt0.c2)) AND ((rt0.c1, rt0.c0, rt0.c2)))) NOT BETWEEN (((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c2))) AND (rt0.c1))) UNION ALL SELECT * FROM rt0 WHERE ((NOT ((((((rt0.c0, rt0.c0, rt0.c2)) BETWEEN ((rt0.c1, rt0.c0, rt0.c2)) AND ((rt0.c1, rt0.c0, rt0.c2)))) NOT BETWEEN (((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c2))) AND (rt0.c1))))) UNION ALL SELECT ALL * FROM rt0 WHERE ((((((((rt0.c0, rt0.c0, rt0.c2)) BETWEEN ((rt0.c1, rt0.c0, rt0.c2)) AND ((rt0.c1, rt0.c0, rt0.c2)))) NOT BETWEEN (((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c2))) AND (rt0.c1))) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (json_array(rt0.c2, rt0.c2)))) UNION SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT ((NOT (json_array(rt0.c2, rt0.c2)))))) UNION SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0 WHERE ((((NOT (json_array(rt0.c2, rt0.c2)))) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (rt0.c0) GROUP BY rt0.c1, rt0.c0, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (rt0.c0))) GROUP BY rt0.c1, rt0.c0, rt0.c2 UNION SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (((rt0.c0) ISNULL)) GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING TOTAL(rt0.c0) UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT (TOTAL(rt0.c0))) UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING ((TOTAL(rt0.c0)) ISNULL);
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING TOTAL(rt0.c0) UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT (TOTAL(rt0.c0))) UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING ((TOTAL(rt0.c0)) ISNULL);
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE (TOTAL_CHANGES()) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (TOTAL_CHANGES()))) UNION ALL SELECT ALL * FROM rt0 WHERE (((TOTAL_CHANGES()) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (rt0.c2) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (rt0.c2))) UNION SELECT DISTINCT * FROM rt0 WHERE (((rt0.c2) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((+ ((- (rt0.c2))))) GROUP BY rt0.c2, rt0.c1, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT ((+ ((- (rt0.c2))))))) GROUP BY rt0.c2, rt0.c1, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((((+ ((- (rt0.c2))))) ISNULL)) GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING ((((MAX(MAX(COUNT(SUM(rt0.c2))))) IS TRUE)) IS TRUE) UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT (((((MAX(MAX(COUNT(SUM(rt0.c2))))) IS TRUE)) IS TRUE))) UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING ((((((MAX(MAX(COUNT(SUM(rt0.c2))))) IS TRUE)) IS TRUE)) ISNULL);
SELECT ALL rt0.c2, rt0.c0 FROM rt0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 WHERE (((LIKE(rt0.c0, rt0.c2, 'J'))GLOB((rt0.c0 IN ())))) UNION ALL SELECT rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (((LIKE(rt0.c0, rt0.c2, 'J'))GLOB((rt0.c0 IN ())))))) UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM rt0 WHERE (((((LIKE(rt0.c0, rt0.c2, 'J'))GLOB((rt0.c0 IN ())))) ISNULL));
SELECT ALL rt0.c2, rt0.c0 FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (rt0.c1) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (rt0.c1))) UNION SELECT DISTINCT * FROM rt0 WHERE (((rt0.c1) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 WHERE (rt0.c1) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM rt0 WHERE ((NOT (rt0.c1))) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM rt0 WHERE (((rt0.c1) ISNULL)) GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING TOTAL(CAST(GROUP_CONCAT(GROUP_CONCAT(rt0.c1)) AS INTEGER)) UNION ALL SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING (NOT (TOTAL(CAST(GROUP_CONCAT(GROUP_CONCAT(rt0.c1)) AS INTEGER)))) UNION ALL SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING ((TOTAL(CAST(GROUP_CONCAT(GROUP_CONCAT(rt0.c1)) AS INTEGER))) ISNULL);
SELECT ALL MIN(TRIM(DISTINCT x'd02a', (((rt0.c1))>=((rt0.c2))))) FROM rt0 ORDER BY (+ (rt0.c0)) COLLATE BINARY ASC;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE (rt0.c0) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (rt0.c0))) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE (((rt0.c0) ISNULL));
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0 NOT INDEXED WHERE ((CAST(rt0.c0 AS INTEGER) IN ())) UNION SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT ((CAST(rt0.c0 AS INTEGER) IN ())))) UNION SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0 WHERE ((((CAST(rt0.c0 AS INTEGER) IN ())) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 WHERE (rt0.c2) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0 WHERE ((NOT (rt0.c2))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0 WHERE (((rt0.c2) ISNULL)) GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((GROUP_CONCAT(rt0.c1)) BETWEEN (((((NULL)AND(MIN(rt0.c0))))AND(SUM(TOTAL(MIN(rt0.c2)))))) AND (COALESCE(DISTINCT MIN(0x34e4f42c), rt0.c0))) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT (((GROUP_CONCAT(rt0.c1)) BETWEEN (((((NULL)AND(MIN(rt0.c0))))AND(SUM(TOTAL(MIN(rt0.c2)))))) AND (COALESCE(DISTINCT MIN(0x34e4f42c), rt0.c0))))) UNION ALL SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((((GROUP_CONCAT(rt0.c1)) BETWEEN (((((NULL)AND(MIN(rt0.c0))))AND(SUM(TOTAL(MIN(rt0.c2)))))) AND (COALESCE(DISTINCT MIN(0x34e4f42c), rt0.c0)))) ISNULL);
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE (CAST(rt0.c1 AS BLOB)) UNION ALL SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (CAST(rt0.c1 AS BLOB)))) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE (((CAST(rt0.c1 AS BLOB)) ISNULL));
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c2 FROM rt0 WHERE ((((rt0.c1)) BETWEEN ((CASE '{%#5}7y[{m'  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c1 END)) AND ((((rt0.c1)<(rt0.c0)))))) UNION SELECT DISTINCT rt0.c2 FROM rt0 WHERE ((NOT ((((rt0.c1)) BETWEEN ((CASE '{%#5}7y[{m'  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c1 END)) AND ((((rt0.c1)<(rt0.c0)))))))) UNION SELECT DISTINCT rt0.c2 FROM rt0 WHERE ((((((rt0.c1)) BETWEEN ((CASE '{%#5}7y[{m'  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c1 END)) AND ((((rt0.c1)<(rt0.c0)))))) ISNULL));
SELECT DISTINCT rt0.c2 FROM rt0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE (((rt0.c0)AND(CAST(rt0.c1 AS TEXT)))) GROUP BY rt0.c1, rt0.c2, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (((rt0.c0)AND(CAST(rt0.c1 AS TEXT)))))) GROUP BY rt0.c1, rt0.c2, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE (((((rt0.c0)AND(CAST(rt0.c1 AS TEXT)))) ISNULL)) GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING COUNT(((TOTAL(COUNT(AVG(rt0.c2)))) NOTNULL)) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING (NOT (COUNT(((TOTAL(COUNT(AVG(rt0.c2)))) NOTNULL)))) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING ((COUNT(((TOTAL(COUNT(AVG(rt0.c2)))) NOTNULL))) ISNULL);
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE (CASE WHEN (((rt0.c2))<=(('1409969944'))) THEN ('1333832080' IN (rt0.c1, rt0.c0)) ELSE rt0.c0 COLLATE NOCASE END) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (CASE WHEN (((rt0.c2))<=(('1409969944'))) THEN ('1333832080' IN (rt0.c1, rt0.c0)) ELSE rt0.c0 COLLATE NOCASE END))) UNION ALL SELECT * FROM rt0 WHERE (((CASE WHEN (((rt0.c2))<=(('1409969944'))) THEN ('1333832080' IN (rt0.c1, rt0.c0)) ELSE rt0.c0 COLLATE NOCASE END) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT rt0.c0 FROM rt0 NOT INDEXED;
SELECT DISTINCT rt0.c0 FROM rt0 WHERE (((((rt0.c1) NOTNULL))OR(((((((((rt0.c2)AND(rt0.c1)))AND(NULL)))OR(rt0.c0)))AND(rt0.c0))))) UNION SELECT DISTINCT rt0.c0 FROM rt0 WHERE ((NOT (((((rt0.c1) NOTNULL))OR(((((((((rt0.c2)AND(rt0.c1)))AND(NULL)))OR(rt0.c0)))AND(rt0.c0))))))) UNION SELECT DISTINCT rt0.c0 FROM rt0 WHERE (((((((rt0.c1) NOTNULL))OR(((((((((rt0.c2)AND(rt0.c1)))AND(NULL)))OR(rt0.c0)))AND(rt0.c0))))) ISNULL));
SELECT DISTINCT rt0.c0 FROM rt0 NOT INDEXED;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((CHAR(rt0.c2, rt0.c0, rt0.c2) IN ())) GROUP BY rt0.c1, rt0.c2, rt0.c0 UNION SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT ((CHAR(rt0.c2, rt0.c0, rt0.c2) IN ())))) GROUP BY rt0.c1, rt0.c2, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((((CHAR(rt0.c2, rt0.c0, rt0.c2) IN ())) ISNULL)) GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING MIN(0.4133198425412514) UNION ALL SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING (NOT (MIN(0.4133198425412514))) UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING ((MIN(0.4133198425412514)) ISNULL);
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING MIN(0.4133198425412514) UNION ALL SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING (NOT (MIN(0.4133198425412514))) UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING ((MIN(0.4133198425412514)) ISNULL);
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c1 FROM rt0;
SELECT ALL rt0.c1 FROM rt0 WHERE (((rt0.c1)-(x'10fd')) COLLATE BINARY) UNION ALL SELECT ALL rt0.c1 FROM rt0 WHERE ((NOT (((rt0.c1)-(x'10fd')) COLLATE BINARY))) UNION ALL SELECT rt0.c1 FROM rt0 WHERE (((((rt0.c1)-(x'10fd')) COLLATE BINARY) ISNULL));
SELECT ALL rt0.c1 FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (rt0.c2 COLLATE RTRIM) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (rt0.c2 COLLATE RTRIM))) UNION SELECT DISTINCT * FROM rt0 WHERE (((rt0.c2 COLLATE RTRIM) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c1 FROM rt0 WHERE (((0.3683246186946042)OR(((rt0.c2) IS FALSE)))) GROUP BY rt0.c0, rt0.c1 UNION SELECT rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (((0.3683246186946042)OR(((rt0.c2) IS FALSE)))))) GROUP BY rt0.c0, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c1 FROM rt0 WHERE (((((0.3683246186946042)OR(((rt0.c2) IS FALSE)))) ISNULL)) GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT ALL * FROM rt0;
SELECT * FROM rt0 WHERE ((rt0.c1 IN ()) COLLATE RTRIM) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT ((rt0.c1 IN ()) COLLATE RTRIM))) UNION ALL SELECT ALL * FROM rt0 WHERE ((((rt0.c1 IN ()) COLLATE RTRIM) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((((rt0.c0) IS TRUE)) NOT BETWEEN ((~ (rt0.c0))) AND (((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((((rt0.c0) IS TRUE)) NOT BETWEEN ((~ (rt0.c0))) AND (((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1))))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((((rt0.c0) IS TRUE)) NOT BETWEEN ((~ (rt0.c0))) AND (((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1))))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (UPPER(((rt0.c0)GLOB(rt0.c2)))) GROUP BY rt0.c1, rt0.c0, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (UPPER(((rt0.c0)GLOB(rt0.c2)))))) GROUP BY rt0.c1, rt0.c0, rt0.c2 UNION SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (((UPPER(((rt0.c0)GLOB(rt0.c2)))) ISNULL)) GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING TOTAL(((AVG('888838916')) BETWEEN (GROUP_CONCAT(rt0.c0)) AND (rt0.c2))) UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING (NOT (TOTAL(((AVG('888838916')) BETWEEN (GROUP_CONCAT(rt0.c0)) AND (rt0.c2))))) UNION ALL SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING ((TOTAL(((AVG('888838916')) BETWEEN (GROUP_CONCAT(rt0.c0)) AND (rt0.c2)))) ISNULL);
SELECT ALL * FROM rt0;
SELECT * FROM rt0 WHERE ((((+ (rt0.c2)))<=(0.20561025855957782))) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT ((((+ (rt0.c2)))<=(0.20561025855957782))))) UNION ALL SELECT * FROM rt0 WHERE ((((((+ (rt0.c2)))<=(0.20561025855957782))) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE (((((rt0.c2) NOTNULL)) BETWEEN (((rt0.c1)>>(rt0.c1))) AND ((x'' IN ())))) UNION SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (((((rt0.c2) NOTNULL)) BETWEEN (((rt0.c1)>>(rt0.c1))) AND ((x'' IN ())))))) UNION SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE (((((((rt0.c2) NOTNULL)) BETWEEN (((rt0.c1)>>(rt0.c1))) AND ((x'' IN ())))) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0 FROM rt0;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 WHERE (((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)))AND(CAST(rt0.c1 AS REAL)))) GROUP BY rt0.c0, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)))AND(CAST(rt0.c1 AS REAL)))))) GROUP BY rt0.c0, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c1 FROM rt0 WHERE (((((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)))AND(CAST(rt0.c1 AS REAL)))) ISNULL)) GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING ((MIN(COUNT(SUM(MIN(0Xffffffff844724b1))))) NOTNULL) UNION ALL SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING (NOT (((MIN(COUNT(SUM(MIN(0Xffffffff844724b1))))) NOTNULL))) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING ((((MIN(COUNT(SUM(MIN(0xffffffff844724b1))))) NOTNULL)) ISNULL);
SELECT ALL SUM(((rt0.c0 IN ()) IN ())) FROM rt0 ORDER BY x'' DESC;
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE (((((((rt0.c2)GLOB(rt0.c1)))OR((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))))))AND(((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2))))) UNION ALL SELECT * FROM rt0 WHERE ((NOT (((((((rt0.c2)GLOB(rt0.c1)))OR((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))))))AND(((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2))))))) UNION ALL SELECT ALL * FROM rt0 WHERE (((((((((rt0.c2)GLOB(rt0.c1)))OR((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))))))AND(((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2))))) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (rt0.c0) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (rt0.c0))) UNION SELECT DISTINCT * FROM rt0 WHERE (((rt0.c0) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 WHERE (((CAST(rt0.c0 AS BLOB)) NOT NULL)) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0 WHERE ((NOT (((CAST(rt0.c0 AS BLOB)) NOT NULL)))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0 WHERE (((((CAST(rt0.c0 AS BLOB)) NOT NULL)) ISNULL)) GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING CAST(CASE rt0.c0  WHEN rt0.c0 THEN COUNT(*) ELSE TOTAL(GROUP_CONCAT(SUM(COUNT(rt0.c1)))) END AS BLOB) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING (NOT (CAST(CASE rt0.c0  WHEN rt0.c0 THEN COUNT(*) ELSE TOTAL(GROUP_CONCAT(SUM(COUNT(rt0.c1)))) END AS BLOB))) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING ((CAST(CASE rt0.c0  WHEN rt0.c0 THEN COUNT(*) ELSE TOTAL(GROUP_CONCAT(SUM(COUNT(rt0.c1)))) END AS BLOB)) ISNULL);
SELECT rt0.c1 FROM rt0;
SELECT ALL rt0.c1 FROM rt0 WHERE (CASE WHEN ((rt0.c2)LIKE(x'f472')) THEN ((rt0.c1)&(rt0.c1)) WHEN CAST(rt0.c2 AS BLOB) THEN rt0.c1 WHEN (0.2616395699594357 IN (rt0.c1)) THEN CASE WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c1 END END) UNION ALL SELECT ALL rt0.c1 FROM rt0 WHERE ((NOT (CASE WHEN ((rt0.c2)LIKE(x'f472')) THEN ((rt0.c1)&(rt0.c1)) WHEN CAST(rt0.c2 AS BLOB) THEN rt0.c1 WHEN (0.2616395699594357 IN (rt0.c1)) THEN CASE WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c1 END END))) UNION ALL SELECT ALL rt0.c1 FROM rt0 WHERE (((CASE WHEN ((rt0.c2)LIKE(x'f472')) THEN ((rt0.c1)&(rt0.c1)) WHEN CAST(rt0.c2 AS BLOB) THEN rt0.c1 WHEN (0.2616395699594357 IN (rt0.c1)) THEN CASE WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c1 END END) ISNULL));
SELECT rt0.c1 FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (rt0.c0) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (rt0.c0))) UNION SELECT DISTINCT * FROM rt0 WHERE (((rt0.c0) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 WHERE (NULLIF(((((((((rt0.c1)OR(rt0.c2)))OR(rt0.c0)))AND(rt0.c1)))OR('602716550')), COALESCE(rt0.c0, rt0.c2))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0 WHERE ((NOT (NULLIF(((((((((rt0.c1)OR(rt0.c2)))OR(rt0.c0)))AND(rt0.c1)))OR('602716550')), COALESCE(rt0.c0, rt0.c2))))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0 WHERE (((NULLIF(((((((((rt0.c1)OR(rt0.c2)))OR(rt0.c0)))AND(rt0.c1)))OR('602716550')), COALESCE(rt0.c0, rt0.c2))) ISNULL)) GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING TOTAL(((rt0.c2)<(rt0.c1))) UNION ALL SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (NOT (TOTAL(((rt0.c2)<(rt0.c1))))) UNION ALL SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING ((TOTAL(((rt0.c2)<(rt0.c1)))) ISNULL);
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING TOTAL(((rt0.c2)<(rt0.c1))) UNION ALL SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (NOT (TOTAL(((rt0.c2)<(rt0.c1))))) UNION ALL SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING ((TOTAL(((rt0.c2)<(rt0.c1)))) ISNULL);
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE (SQLITE_VERSION()) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (SQLITE_VERSION()))) UNION ALL SELECT ALL * FROM rt0 WHERE (((SQLITE_VERSION()) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((((rt0.c0) NOT NULL))<(((rt0.c1) IS FALSE)))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((((rt0.c0) NOT NULL))<(((rt0.c1) IS FALSE)))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((((rt0.c0) NOT NULL))<(((rt0.c1) IS FALSE)))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c2, rt0.c1 FROM rt0 WHERE (((((0.054527052249983) NOT BETWEEN (rt0.c1) AND (0.9648036136914103))) IS FALSE)) GROUP BY rt0.c2, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (((((0.054527052249983) NOT BETWEEN (rt0.c1) AND (0.9648036136914103))) IS FALSE)))) GROUP BY rt0.c2, rt0.c1 UNION SELECT rt0.c2, rt0.c1 FROM rt0 WHERE (((((((0.054527052249983) NOT BETWEEN (rt0.c1) AND (0.9648036136914103))) IS FALSE)) ISNULL)) GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((rt0.c2 IN (((((rt0.c1)OR(rt0.c1)))AND(rt0.c2))))) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT ((rt0.c2 IN (((((rt0.c1)OR(rt0.c1)))AND(rt0.c2))))))) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((((rt0.c2 IN (((((rt0.c1)OR(rt0.c1)))AND(rt0.c2))))) ISNULL));
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (('-1945413251' IN ())) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (('-1945413251' IN ())))) UNION SELECT DISTINCT * FROM rt0 WHERE (((('-1945413251' IN ())) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c2, rt0.c0 FROM rt0 NOT INDEXED GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM rt0 NOT INDEXED WHERE (((((rt0.c2)) BETWEEN ((NULL)) AND ((rt0.c2))) IN ())) GROUP BY rt0.c2, rt0.c0 UNION SELECT rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (((((rt0.c2)) BETWEEN ((NULL)) AND ((rt0.c2))) IN ())))) GROUP BY rt0.c2, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c0 FROM rt0 WHERE (((((((rt0.c2)) BETWEEN ((NULL)) AND ((rt0.c2))) IN ())) ISNULL)) GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM rt0 NOT INDEXED GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING ((SUM(AVG(COUNT(*)))) NOT BETWEEN (COUNT(rt0.c0)) AND (GROUP_CONCAT(GROUP_CONCAT(rt0.c2)))) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING (NOT (((SUM(AVG(COUNT(*)))) NOT BETWEEN (COUNT(rt0.c0)) AND (GROUP_CONCAT(GROUP_CONCAT(rt0.c2)))))) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING ((((SUM(AVG(COUNT(*)))) NOT BETWEEN (COUNT(rt0.c0)) AND (GROUP_CONCAT(GROUP_CONCAT(rt0.c2))))) ISNULL);
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE (json_array_length(NULL, CASE rt0.c1  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c1 END)) UNION ALL SELECT * FROM rt0 WHERE ((NOT (json_array_length(NULL, CASE rt0.c1  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c1 END)))) UNION ALL SELECT ALL * FROM rt0 WHERE (((json_array_length(NULL, CASE rt0.c1  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c1 END)) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (CAST(((0Xffffffff969f6818)/(NULL)) AS NUMERIC)) UNION SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (CAST(((0Xffffffff969f6818)/(NULL)) AS NUMERIC)))) UNION SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (((CAST(((0xffffffff969f6818)/(NULL)) AS NUMERIC)) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0;
SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM rt0 WHERE ((~ (((rt0.c0)!=(rt0.c1))))) GROUP BY rt0.c2, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT ((~ (((rt0.c0)!=(rt0.c1))))))) GROUP BY rt0.c2, rt0.c0 UNION SELECT rt0.c2, rt0.c0 FROM rt0 WHERE ((((~ (((rt0.c0)<>(rt0.c1))))) ISNULL)) GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING AVG(GROUP_CONCAT(MIN(rt0.c2))) UNION ALL SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING (NOT (AVG(GROUP_CONCAT(MIN(rt0.c2))))) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING ((AVG(GROUP_CONCAT(MIN(rt0.c2)))) ISNULL);
SELECT ALL * FROM rt0;
SELECT * FROM rt0 WHERE ('32741361' COLLATE RTRIM) UNION ALL SELECT * FROM rt0 WHERE ((NOT ('32741361' COLLATE RTRIM))) UNION ALL SELECT * FROM rt0 WHERE ((('32741361' COLLATE RTRIM) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE (((rt0.c1)-(CAST(rt0.c0 AS REAL)))) UNION SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (((rt0.c1)-(CAST(rt0.c0 AS REAL)))))) UNION SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE (((((rt0.c1)-(CAST(rt0.c0 AS REAL)))) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 WHERE (CASE rt0.c1 COLLATE NOCASE  WHEN ((rt0.c2) BETWEEN ('0.3241692583216843') AND (rt0.c1)) THEN rt0.c0 WHEN ((rt0.c0)IS NOT('401142158')) THEN ((rt0.c2)<<(rt0.c2)) WHEN ((((rt0.c1)AND(rt0.c2)))OR(rt0.c1)) THEN x'' END) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0 WHERE ((NOT (CASE rt0.c1 COLLATE NOCASE  WHEN ((rt0.c2) BETWEEN ('0.3241692583216843') AND (rt0.c1)) THEN rt0.c0 WHEN ((rt0.c0)IS NOT('401142158')) THEN ((rt0.c2)<<(rt0.c2)) WHEN ((((rt0.c1)AND(rt0.c2)))OR(rt0.c1)) THEN x'' END))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0 WHERE (((CASE rt0.c1 COLLATE NOCASE  WHEN ((rt0.c2) BETWEEN ('0.3241692583216843') AND (rt0.c1)) THEN rt0.c0 WHEN ((rt0.c0)IS NOT('401142158')) THEN ((rt0.c2)<<(rt0.c2)) WHEN ((((rt0.c1)AND(rt0.c2)))OR(rt0.c1)) THEN x'' END) ISNULL)) GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING MIN(CAST(MIN(rt0.c2) AS TEXT)) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING (NOT (MIN(CAST(MIN(rt0.c2) AS TEXT)))) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING ((MIN(CAST(MIN(rt0.c2) AS TEXT))) ISNULL);
SELECT rt0.c1 FROM rt0;
SELECT rt0.c1 FROM rt0 WHERE ((- (((rt0.c1) NOT NULL)))) UNION ALL SELECT rt0.c1 FROM rt0 WHERE ((NOT ((- (((rt0.c1) NOT NULL)))))) UNION ALL SELECT ALL rt0.c1 FROM rt0 WHERE ((((- (((rt0.c1) NOT NULL)))) ISNULL));
SELECT rt0.c1 FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((((((((((((CASE WHEN NULL THEN rt0.c1 END)OR(((rt0.c2)IS NOT(rt0.c0)))))AND(((rt0.c0)+(rt0.c1)))))OR(((((((((NULL)AND(rt0.c1)))OR(rt0.c0)))OR(rt0.c1)))OR(rt0.c1)))))OR(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0)))))OR(rt0.c2)))OR(0X2d09188e))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((((((((((((CASE WHEN NULL THEN rt0.c1 END)OR(((rt0.c2)IS NOT(rt0.c0)))))AND(((rt0.c0)+(rt0.c1)))))OR(((((((((NULL)AND(rt0.c1)))OR(rt0.c0)))OR(rt0.c1)))OR(rt0.c1)))))OR(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0)))))OR(rt0.c2)))OR(0x2d09188e))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((((((((((((CASE WHEN NULL THEN rt0.c1 END)OR(((rt0.c2)IS NOT(rt0.c0)))))AND(((rt0.c0)+(rt0.c1)))))OR(((((((((NULL)AND(rt0.c1)))OR(rt0.c0)))OR(rt0.c1)))OR(rt0.c1)))))OR(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0)))))OR(rt0.c2)))OR(0X2d09188e))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 WHERE (CASE WHEN ((((((((rt0.c2)OR(rt0.c2)))OR(rt0.c0)))OR(rt0.c0)))AND(rt0.c2)) THEN (rt0.c0 IN ()) WHEN CAST(rt0.c1 AS NUMERIC) THEN load_extension(rt0.c1, rt0.c1) WHEN IFNULL(rt0.c0, rt0.c1) THEN (((rt0.c0, NULL, rt0.c2))<=((rt0.c0, rt0.c0, rt0.c1))) ELSE ((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2)) END) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0 WHERE ((NOT (CASE WHEN ((((((((rt0.c2)OR(rt0.c2)))OR(rt0.c0)))OR(rt0.c0)))AND(rt0.c2)) THEN (rt0.c0 IN ()) WHEN CAST(rt0.c1 AS NUMERIC) THEN load_extension(rt0.c1, rt0.c1) WHEN IFNULL(rt0.c0, rt0.c1) THEN (((rt0.c0, NULL, rt0.c2))<=((rt0.c0, rt0.c0, rt0.c1))) ELSE ((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2)) END))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0 WHERE (((CASE WHEN ((((((((rt0.c2)OR(rt0.c2)))OR(rt0.c0)))OR(rt0.c0)))AND(rt0.c2)) THEN (rt0.c0 IN ()) WHEN CAST(rt0.c1 AS NUMERIC) THEN load_extension(rt0.c1, rt0.c1) WHEN IFNULL(rt0.c0, rt0.c1) THEN (((rt0.c0, NULL, rt0.c2))<=((rt0.c0, rt0.c0, rt0.c1))) ELSE ((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2)) END) ISNULL)) GROUP BY rt0.c2;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING json_insert(COUNT(*), (TOTAL(TOTAL(rt0.c2)) IN ()), (+ (NULL)), MIN(rt0.c0), ((rt0.c2) IS TRUE)) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING (NOT (json_insert(COUNT(*), (TOTAL(TOTAL(rt0.c2)) IN ()), (+ (NULL)), MIN(rt0.c0), ((rt0.c2) IS TRUE)))) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING ((json_insert(COUNT(*), (TOTAL(TOTAL(rt0.c2)) IN ()), (+ (NULL)), MIN(rt0.c0), ((rt0.c2) IS TRUE))) ISNULL);
SELECT ALL rt0.c2, rt0.c1 FROM rt0;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 WHERE (((((rt0.c2)%(rt0.c1))) ISNULL)) UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (((((rt0.c2)%(rt0.c1))) ISNULL)))) UNION ALL SELECT rt0.c2, rt0.c1 FROM rt0 WHERE (((((((rt0.c2)%(rt0.c1))) ISNULL)) ISNULL));
SELECT ALL rt0.c2, rt0.c1 FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (rt0.c1) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (rt0.c1))) UNION SELECT DISTINCT * FROM rt0 WHERE (((rt0.c1) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE (((CAST(rt0.c0 AS INTEGER)) ISNULL)) GROUP BY rt0.c0, rt0.c1, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (((CAST(rt0.c0 AS INTEGER)) ISNULL)))) GROUP BY rt0.c0, rt0.c1, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE (((((CAST(rt0.c0 AS INTEGER)) ISNULL)) ISNULL)) GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING ',#hsw1v' UNION ALL SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING (NOT (',#hsw1v')) UNION ALL SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING ((',#hsw1v') ISNULL);
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING ',#hsw1v' UNION ALL SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING (NOT (',#hsw1v')) UNION ALL SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING ((',#hsw1v') ISNULL);
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE ((((rt0.c0)-(rt0.c2)) IN ())) UNION ALL SELECT * FROM rt0 WHERE ((NOT ((((rt0.c0)-(rt0.c2)) IN ())))) UNION ALL SELECT * FROM rt0 WHERE ((((((rt0.c0)-(rt0.c2)) IN ())) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (x'') UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (x''))) UNION SELECT DISTINCT * FROM rt0 WHERE (((x'') ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE (CASE WHEN ((rt0.c2) ISNULL) THEN UPPER(0.2616395699594357) END) GROUP BY rt0.c0, rt0.c2, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (CASE WHEN ((rt0.c2) ISNULL) THEN UPPER(0.2616395699594357) END))) GROUP BY rt0.c0, rt0.c2, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE (((CASE WHEN ((rt0.c2) ISNULL) THEN UPPER(0.2616395699594357) END) ISNULL)) GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING SUM(SUM(rt0.c0)) UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT (SUM(SUM(rt0.c0)))) UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING ((SUM(SUM(rt0.c0))) ISNULL);
SELECT ALL TOTAL(((((rt0.c1)<(rt0.c0))) IS TRUE)) FROM rt0;
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE (CASE WHEN UNLIKELY(rt0.c0) THEN ((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c1)) END) UNION ALL SELECT * FROM rt0 WHERE ((NOT (CASE WHEN UNLIKELY(rt0.c0) THEN ((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c1)) END))) UNION ALL SELECT * FROM rt0 WHERE (((CASE WHEN UNLIKELY(rt0.c0) THEN ((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c1)) END) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE (LENGTH(rt0.c0 COLLATE RTRIM)) UNION SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (LENGTH(rt0.c0 COLLATE RTRIM)))) UNION SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE (((LENGTH(rt0.c0 COLLATE RTRIM)) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0 FROM rt0;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2)) IN (((rt0.c1) NOT BETWEEN ('') AND (rt0.c0)), (rt0.c0 IN ())))) GROUP BY rt0.c0, rt0.c1, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT ((((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2)) IN (((rt0.c1) NOT BETWEEN ('') AND (rt0.c0)), (rt0.c0 IN ())))))) GROUP BY rt0.c0, rt0.c1, rt0.c2 UNION SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((((((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2)) IN (((rt0.c1) NOT BETWEEN ('') AND (rt0.c0)), (rt0.c0 IN ())))) ISNULL)) GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING LIKELIHOOD(GROUP_CONCAT(rt0.c0), 0.006725453518358848) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT (LIKELIHOOD(GROUP_CONCAT(rt0.c0), 0.006725453518358848))) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((LIKELIHOOD(GROUP_CONCAT(rt0.c0), 0.006725453518358848)) ISNULL);
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING LIKELIHOOD(GROUP_CONCAT(rt0.c0), 0.006725453518358848) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT (LIKELIHOOD(GROUP_CONCAT(rt0.c0), 0.006725453518358848))) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((LIKELIHOOD(GROUP_CONCAT(rt0.c0), 0.006725453518358848)) ISNULL);
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c1, rt0.c0 FROM rt0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 WHERE ((((rt0.c0 IN ()))AND(0X540a6f18))) UNION ALL SELECT rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT ((((rt0.c0 IN ()))AND(0X540a6f18))))) UNION ALL SELECT ALL rt0.c1, rt0.c0 FROM rt0 WHERE ((((((rt0.c0 IN ()))AND(0X540a6f18))) ISNULL));
SELECT rt0.c1, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c2 FROM rt0 WHERE (((((((rt0.c1) IS TRUE))OR(((rt0.c0) NOTNULL))))AND(x'9d51' COLLATE NOCASE))) UNION SELECT DISTINCT rt0.c2 FROM rt0 WHERE ((NOT (((((((rt0.c1) IS TRUE))OR(((rt0.c0) NOTNULL))))AND(x'9d51' COLLATE NOCASE))))) UNION SELECT DISTINCT rt0.c2 FROM rt0 WHERE (((((((((rt0.c1) IS TRUE))OR(((rt0.c0) NOTNULL))))AND(x'9d51' COLLATE NOCASE))) ISNULL));
SELECT DISTINCT rt0.c2 FROM rt0;
SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM rt0 WHERE (((((rt0.c0) IS FALSE))>>(rt0.c0))) GROUP BY rt0.c2, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (((((rt0.c0) IS FALSE))>>(rt0.c0))))) GROUP BY rt0.c2, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c0 FROM rt0 WHERE (((((((rt0.c0) IS FALSE))>>(rt0.c0))) ISNULL)) GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING 1.400755647E9 UNION ALL SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (NOT (1.400755647E9)) UNION ALL SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING ((1.400755647E9) ISNULL);
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING 1.400755647E9 UNION ALL SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (NOT (1.400755647E9)) UNION ALL SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING ((1.400755647E9) ISNULL);
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0;
SELECT ALL rt0.c0 FROM rt0 WHERE ((rt0.c1 IN ()) COLLATE RTRIM) UNION ALL SELECT ALL rt0.c0 FROM rt0 WHERE ((NOT ((rt0.c1 IN ()) COLLATE RTRIM))) UNION ALL SELECT rt0.c0 FROM rt0 WHERE ((((rt0.c1 IN ()) COLLATE RTRIM) ISNULL));
SELECT rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((((rt0.c0)) BETWEEN ((json_extract(rt0.c0, rt0.c1))) AND ((CAST(rt0.c2 AS INTEGER))))) UNION SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT ((((rt0.c0)) BETWEEN ((json_extract(rt0.c0, rt0.c1))) AND ((CAST(rt0.c2 AS INTEGER))))))) UNION SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((((((rt0.c0)) BETWEEN ((json_extract(rt0.c0, rt0.c1))) AND ((CAST(rt0.c2 AS INTEGER))))) ISNULL));
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 NOT INDEXED WHERE ((((NOT (rt0.c0)))/(CASE rt0.c0  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN x'' THEN rt0.c2 ELSE rt0.c1 END))) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM rt0 WHERE ((NOT ((((NOT (rt0.c0)))/(CASE rt0.c0  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN x'' THEN rt0.c2 ELSE rt0.c1 END))))) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM rt0 WHERE ((((((NOT (rt0.c0)))/(CASE rt0.c0  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN x'' THEN rt0.c2 ELSE rt0.c1 END))) ISNULL)) GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING ((SUM(rt0.c2))==(LOWER(DISTINCT MIN(AVG(GROUP_CONCAT(SUM(rt0.c0))))))) UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT (((SUM(rt0.c2))==(LOWER(DISTINCT MIN(AVG(GROUP_CONCAT(SUM(rt0.c0))))))))) UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING ((((SUM(rt0.c2))==(LOWER(DISTINCT MIN(AVG(GROUP_CONCAT(SUM(rt0.c0)))))))) ISNULL);
SELECT ALL rt0.c1 FROM rt0;
SELECT rt0.c1 FROM rt0 WHERE ((+ (rt0.c0 COLLATE RTRIM))) UNION ALL SELECT rt0.c1 FROM rt0 WHERE ((NOT ((+ (rt0.c0 COLLATE RTRIM))))) UNION ALL SELECT ALL rt0.c1 FROM rt0 WHERE ((((+ (rt0.c0 COLLATE RTRIM))) ISNULL));
SELECT ALL rt0.c1 FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (CASE WHEN -2.114872014E9 THEN rt0.c1 WHEN (NOT (rt0.c0)) THEN (((rt0.c0)) NOT BETWEEN ((0.17730263100988464)) AND ((rt0.c1))) WHEN CAST(rt0.c1 AS TEXT) THEN (((rt0.c1, rt0.c2, rt0.c0))<((rt0.c0, rt0.c0, rt0.c0))) WHEN rt0.c0 THEN LIKELY(rt0.c0) WHEN (((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1))) THEN (((('0.054527052249983')AND(rt0.c0)))AND(rt0.c2)) ELSE ((rt0.c1)*(rt0.c2)) END) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (CASE WHEN -2.114872014E9 THEN rt0.c1 WHEN (NOT (rt0.c0)) THEN (((rt0.c0)) NOT BETWEEN ((0.17730263100988464)) AND ((rt0.c1))) WHEN CAST(rt0.c1 AS TEXT) THEN (((rt0.c1, rt0.c2, rt0.c0))<((rt0.c0, rt0.c0, rt0.c0))) WHEN rt0.c0 THEN LIKELY(rt0.c0) WHEN (((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1))) THEN (((('0.054527052249983')AND(rt0.c0)))AND(rt0.c2)) ELSE ((rt0.c1)*(rt0.c2)) END))) UNION SELECT DISTINCT * FROM rt0 WHERE (((CASE WHEN -2.114872014E9 THEN rt0.c1 WHEN (NOT (rt0.c0)) THEN (((rt0.c0)) NOT BETWEEN ((0.17730263100988464)) AND ((rt0.c1))) WHEN CAST(rt0.c1 AS TEXT) THEN (((rt0.c1, rt0.c2, rt0.c0))<((rt0.c0, rt0.c0, rt0.c0))) WHEN rt0.c0 THEN LIKELY(rt0.c0) WHEN (((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1))) THEN (((('0.054527052249983')AND(rt0.c0)))AND(rt0.c2)) ELSE ((rt0.c1)*(rt0.c2)) END) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c1 FROM rt0 NOT INDEXED WHERE (json_valid((((rt0.c2, rt0.c2, rt0.c2, rt0.c1, '-1291592185'))==((rt0.c1, rt0.c1, rt0.c0, rt0.c0, rt0.c0))))) GROUP BY rt0.c0, rt0.c1 UNION SELECT rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (json_valid((((rt0.c2, rt0.c2, rt0.c2, rt0.c1, '-1291592185'))=((rt0.c1, rt0.c1, rt0.c0, rt0.c0, rt0.c0))))))) GROUP BY rt0.c0, rt0.c1 UNION SELECT rt0.c0, rt0.c1 FROM rt0 WHERE (((json_valid((((rt0.c2, rt0.c2, rt0.c2, rt0.c1, '-1291592185'))=((rt0.c1, rt0.c1, rt0.c0, rt0.c0, rt0.c0))))) ISNULL)) GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING LENGTH('') UNION ALL SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING (NOT (LENGTH(''))) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING ((LENGTH('')) ISNULL);
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING LENGTH('') UNION ALL SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING (NOT (LENGTH(''))) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING ((LENGTH('')) ISNULL);
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE ((- ((~ (rt0.c2))))) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT ((- ((~ (rt0.c2))))))) UNION ALL SELECT ALL * FROM rt0 WHERE ((((- ((~ (rt0.c2))))) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((((((((((((((rt0.c2)OR('-1193207400')))AND(rt0.c1)))AND(rt0.c2)))OR(rt0.c0)))AND(0Xffffffffd214b7ee)))OR(rt0.c2)))<((rt0.c1 IN ())))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((((((((((((((rt0.c2)OR('-1193207400')))AND(rt0.c1)))AND(rt0.c2)))OR(rt0.c0)))AND(0xffffffffd214b7ee)))OR(rt0.c2)))<((rt0.c1 IN ())))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((((((((((((((rt0.c2)OR('-1193207400')))AND(rt0.c1)))AND(rt0.c2)))OR(rt0.c0)))AND(0xffffffffd214b7ee)))OR(rt0.c2)))<((rt0.c1 IN ())))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 WHERE (((rt0.c2) NOTNULL) COLLATE RTRIM) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0 WHERE ((NOT (((rt0.c2) NOTNULL) COLLATE RTRIM))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0 WHERE (((((rt0.c2) NOTNULL) COLLATE RTRIM) ISNULL)) GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c0, rt0.c2 FROM rt0 NOT INDEXED GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING ((((TOTAL(SUM(rt0.c1)), COUNT(AVG(rt0.c0)), rt0.c1)) BETWEEN ((rt0.c2, rt0.c1, GROUP_CONCAT(AVG(rt0.c1)))) AND ((NULL, rt0.c1, MAX(rt0.c2)))) IN ()) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING (NOT (((((TOTAL(SUM(rt0.c1)), COUNT(AVG(rt0.c0)), rt0.c1)) BETWEEN ((rt0.c2, rt0.c1, GROUP_CONCAT(AVG(rt0.c1)))) AND ((NULL, rt0.c1, MAX(rt0.c2)))) IN ()))) UNION ALL SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING ((((((TOTAL(SUM(rt0.c1)), COUNT(AVG(rt0.c0)), rt0.c1)) BETWEEN ((rt0.c2, rt0.c1, GROUP_CONCAT(AVG(rt0.c1)))) AND ((NULL, rt0.c1, MAX(rt0.c2)))) IN ())) ISNULL);
SELECT rt0.c0, rt0.c2 FROM rt0 NOT INDEXED GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING ((((TOTAL(SUM(rt0.c1)), COUNT(AVG(rt0.c0)), rt0.c1)) BETWEEN ((rt0.c2, rt0.c1, GROUP_CONCAT(AVG(rt0.c1)))) AND ((NULL, rt0.c1, MAX(rt0.c2)))) IN ()) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING (NOT (((((TOTAL(SUM(rt0.c1)), COUNT(AVG(rt0.c0)), rt0.c1)) BETWEEN ((rt0.c2, rt0.c1, GROUP_CONCAT(AVG(rt0.c1)))) AND ((NULL, rt0.c1, MAX(rt0.c2)))) IN ()))) UNION ALL SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING ((((((TOTAL(SUM(rt0.c1)), COUNT(AVG(rt0.c0)), rt0.c1)) BETWEEN ((rt0.c2, rt0.c1, GROUP_CONCAT(AVG(rt0.c1)))) AND ((NULL, rt0.c1, MAX(rt0.c2)))) IN ())) ISNULL);
SELECT rt0.c0, rt0.c2 FROM rt0 NOT INDEXED GROUP BY rt0.c0, rt0.c2;
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE (GLOB((rt0.c0 IN ()), rt0.c0 COLLATE BINARY)) UNION ALL SELECT * FROM rt0 WHERE ((NOT (GLOB((rt0.c0 IN ()), rt0.c0 COLLATE BINARY)))) UNION ALL SELECT * FROM rt0 WHERE (((GLOB((rt0.c0 IN ()), rt0.c0 COLLATE BINARY)) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((((~ (rt0.c2)))<(rt0.c0 COLLATE NOCASE))) UNION SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT ((((~ (rt0.c2)))<(rt0.c0 COLLATE NOCASE))))) UNION SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((((((~ (rt0.c2)))<(rt0.c0 COLLATE NOCASE))) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM rt0 WHERE (((((rt0.c2)AND(rt0.c1)))OR(-1712200871)) COLLATE BINARY) GROUP BY rt0.c2, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (((((rt0.c2)AND(rt0.c1)))OR(-1712200871)) COLLATE BINARY))) GROUP BY rt0.c2, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c0 FROM rt0 WHERE (((((((rt0.c2)AND(rt0.c1)))OR(-1712200871)) COLLATE BINARY) ISNULL)) GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING TRIM(DISTINCT MAX(SUM(SUM(GROUP_CONCAT(AVG(GROUP_CONCAT(rt0.c0)))))) COLLATE BINARY) UNION ALL SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING (NOT (TRIM(DISTINCT MAX(SUM(SUM(GROUP_CONCAT(AVG(GROUP_CONCAT(rt0.c0)))))) COLLATE BINARY))) UNION ALL SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING ((TRIM(DISTINCT MAX(SUM(SUM(GROUP_CONCAT(AVG(GROUP_CONCAT(rt0.c0)))))) COLLATE BINARY)) ISNULL);
SELECT rt0.c0 FROM rt0;
SELECT ALL rt0.c0 FROM rt0 WHERE (((rt0.c2 COLLATE RTRIM)OR(((((rt0.c2)OR(rt0.c0)))AND(''))))) UNION ALL SELECT ALL rt0.c0 FROM rt0 WHERE ((NOT (((rt0.c2 COLLATE RTRIM)OR(((((rt0.c2)OR(rt0.c0)))AND(''))))))) UNION ALL SELECT rt0.c0 FROM rt0 WHERE (((((rt0.c2 COLLATE RTRIM)OR(((((rt0.c2)OR(rt0.c0)))AND(''))))) ISNULL));
SELECT rt0.c0 FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((~ (rt0.c0))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((~ (rt0.c0))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((~ (rt0.c0))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 WHERE (UPPER(((((rt0.c0)OR(NULL)))AND(rt0.c1)))) GROUP BY rt0.c1, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (UPPER(((((rt0.c0)OR(NULL)))AND(rt0.c1)))))) GROUP BY rt0.c1, rt0.c0 UNION SELECT rt0.c1, rt0.c0 FROM rt0 WHERE (((UPPER(((((rt0.c0)OR(NULL)))AND(rt0.c1)))) ISNULL)) GROUP BY rt0.c1, rt0.c0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL TOTAL(CAST(CASE rt0.c2  WHEN x'b8b5' THEN '' END AS REAL)) FROM rt0 ORDER BY ((rt0.c1)-(((rt0.c1) IS FALSE))) DESC  NULLS LAST;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((((~ (rt0.c2))) ISNULL)) UNION ALL SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT ((((~ (rt0.c2))) ISNULL)))) UNION ALL SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((((((~ (rt0.c2))) ISNULL)) ISNULL));
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((~ (CAST(rt0.c1 AS TEXT)))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((~ (CAST(rt0.c1 AS TEXT)))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((~ (CAST(rt0.c1 AS TEXT)))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 WHERE (CASE WHEN CASE rt0.c0  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c0 END THEN ((NULL) ISNULL) END) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM rt0 WHERE ((NOT (CASE WHEN CASE rt0.c0  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c0 END THEN ((NULL) ISNULL) END))) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM rt0 WHERE (((CASE WHEN CASE rt0.c0  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c0 END THEN ((NULL) ISNULL) END) ISNULL)) GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING SUM(COUNT(*)) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING (NOT (SUM(COUNT(*)))) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING ((SUM(COUNT(*))) ISNULL);
SELECT rt0.c2, rt0.c1 FROM rt0;
SELECT rt0.c2, rt0.c1 FROM rt0 WHERE (((((rt0.c1) IS FALSE)) NOT BETWEEN (((rt0.c1)>=(rt0.c1))) AND (rt0.c1 COLLATE NOCASE))) UNION ALL SELECT rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (((((rt0.c1) IS FALSE)) NOT BETWEEN (((rt0.c1)>=(rt0.c1))) AND (rt0.c1 COLLATE NOCASE))))) UNION ALL SELECT rt0.c2, rt0.c1 FROM rt0 WHERE (((((((rt0.c1) IS FALSE)) NOT BETWEEN (((rt0.c1)>=(rt0.c1))) AND (rt0.c1 COLLATE NOCASE))) ISNULL));
SELECT rt0.c2, rt0.c1 FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((((- (0.4761842910478793)))|('2057878212'))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((((- (0.4761842910478793)))|('2057878212'))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((((- (0.4761842910478793)))|('2057878212'))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 WHERE (((((rt0.c0)IS(rt0.c1)))|(((rt0.c1)IS(rt0.c1))))) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM rt0 WHERE ((NOT (((((rt0.c0)IS(rt0.c1)))|(((rt0.c1)IS(rt0.c1))))))) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM rt0 WHERE (((((((rt0.c0)IS(rt0.c1)))|(((rt0.c1)IS(rt0.c1))))) ISNULL)) GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING COUNT(*) UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING COUNT(*) UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL * FROM rt0;
SELECT * FROM rt0 WHERE (CASE (((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2)))  WHEN ((rt0.c0)>=(rt0.c1)) THEN (- (rt0.c2)) ELSE x'' END) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (CASE (((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2)))  WHEN ((rt0.c0)>=(rt0.c1)) THEN (- (rt0.c2)) ELSE x'' END))) UNION ALL SELECT ALL * FROM rt0 WHERE (((CASE (((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2)))  WHEN ((rt0.c0)>=(rt0.c1)) THEN (- (rt0.c2)) ELSE x'' END) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE (rt0.c2) UNION SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (rt0.c2))) UNION SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE (((rt0.c2) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0 FROM rt0;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 WHERE ((((0.23648798237920854 IN ())) IS TRUE)) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0 WHERE ((NOT ((((0.23648798237920854 IN ())) IS TRUE)))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0 WHERE ((((((0.23648798237920854 IN ())) IS TRUE)) ISNULL)) GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING CHANGES() COLLATE RTRIM UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING (NOT (CHANGES() COLLATE RTRIM)) UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING ((CHANGES() COLLATE RTRIM) ISNULL);
SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING CHANGES() COLLATE RTRIM UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING (NOT (CHANGES() COLLATE RTRIM)) UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING ((CHANGES() COLLATE RTRIM) ISNULL);
SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c1, rt0.c2 FROM rt0;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 WHERE (((((rt0.c1)%(rt0.c0)))<<(0.5625411007838993))) UNION ALL SELECT ALL rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (((((rt0.c1)%(rt0.c0)))<<(0.5625411007838993))))) UNION ALL SELECT rt0.c1, rt0.c2 FROM rt0 WHERE (((((((rt0.c1)%(rt0.c0)))<<(0.5625411007838993))) ISNULL));
SELECT rt0.c1, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0 WHERE ('0.8447262187119086') UNION SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT ('0.8447262187119086'))) UNION SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0 WHERE ((('0.8447262187119086') ISNULL));
SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 WHERE (UPPER(((((((((rt0.c0)AND(rt0.c2)))OR(rt0.c1)))AND(rt0.c1)))AND(rt0.c1)))) GROUP BY rt0.c1, rt0.c2 UNION SELECT rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (UPPER(((((((((rt0.c0)AND(rt0.c2)))OR(rt0.c1)))AND(rt0.c1)))AND(rt0.c1)))))) GROUP BY rt0.c1, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c2 FROM rt0 WHERE (((UPPER(((((((((rt0.c0)AND(rt0.c2)))OR(rt0.c1)))AND(rt0.c1)))AND(rt0.c1)))) ISNULL)) GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING COUNT(MAX(rt0.c2)) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING (NOT (COUNT(MAX(rt0.c2)))) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING ((COUNT(MAX(rt0.c2))) ISNULL);
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE (CAST(rt0.c0 COLLATE RTRIM AS BLOB)) UNION ALL SELECT * FROM rt0 WHERE ((NOT (CAST(rt0.c0 COLLATE RTRIM AS BLOB)))) UNION ALL SELECT * FROM rt0 WHERE (((CAST(rt0.c0 COLLATE RTRIM AS BLOB)) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c0 FROM rt0 WHERE (((((rt0.c0 COLLATE BINARY)OR(CASE WHEN NULL THEN rt0.c0 END)))AND(rt0.c0))) UNION SELECT DISTINCT rt0.c0 FROM rt0 WHERE ((NOT (((((rt0.c0 COLLATE BINARY)OR(CASE WHEN NULL THEN rt0.c0 END)))AND(rt0.c0))))) UNION SELECT DISTINCT rt0.c0 FROM rt0 WHERE (((((((rt0.c0 COLLATE BINARY)OR(CASE WHEN NULL THEN rt0.c0 END)))AND(rt0.c0))) ISNULL));
SELECT DISTINCT rt0.c0 FROM rt0;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE (((rt0.c2) BETWEEN (LTRIM(rt0.c0, rt0.c2)) AND (((rt0.c1) IS TRUE)))) GROUP BY rt0.c2, rt0.c0, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (((rt0.c2) BETWEEN (LTRIM(rt0.c0, rt0.c2)) AND (((rt0.c1) IS TRUE)))))) GROUP BY rt0.c2, rt0.c0, rt0.c1 UNION SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE (((((rt0.c2) BETWEEN (LTRIM(rt0.c0, rt0.c2)) AND (((rt0.c1) IS TRUE)))) ISNULL)) GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING COUNT(*) UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c1 FROM rt0 NOT INDEXED GROUP BY rt0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING COUNT(*) UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c1 FROM rt0 NOT INDEXED GROUP BY rt0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0;
SELECT ALL rt0.c1 FROM rt0 WHERE (((((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2)))OR((((rt0.c2, x'12eb', rt0.c0))<((rt0.c0, rt0.c1, rt0.c1))))))AND(CAST(rt0.c2 AS INTEGER)))) UNION ALL SELECT rt0.c1 FROM rt0 WHERE ((NOT (((((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2)))OR((((rt0.c2, x'12eb', rt0.c0))<((rt0.c0, rt0.c1, rt0.c1))))))AND(CAST(rt0.c2 AS INTEGER)))))) UNION ALL SELECT rt0.c1 FROM rt0 WHERE (((((((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2)))OR((((rt0.c2, x'12eb', rt0.c0))<((rt0.c0, rt0.c1, rt0.c1))))))AND(CAST(rt0.c2 AS INTEGER)))) ISNULL));
SELECT rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c1 FROM rt0 WHERE (((rt0.c1) NOT NULL) COLLATE RTRIM) UNION SELECT DISTINCT rt0.c1 FROM rt0 WHERE ((NOT (((rt0.c1) NOT NULL) COLLATE RTRIM))) UNION SELECT DISTINCT rt0.c1 FROM rt0 WHERE (((((rt0.c1) NOT NULL) COLLATE RTRIM) ISNULL));
SELECT DISTINCT rt0.c1 FROM rt0;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 WHERE ((- (x'' COLLATE RTRIM))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0 WHERE ((NOT ((- (x'' COLLATE RTRIM))))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0 WHERE ((((- (x'' COLLATE RTRIM))) ISNULL)) GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING UNLIKELY(DISTINCT MIN(rt0.c1)) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING (NOT (UNLIKELY(DISTINCT MIN(rt0.c1)))) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING ((UNLIKELY(DISTINCT MIN(rt0.c1))) ISNULL);
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING UNLIKELY(DISTINCT MIN(rt0.c1)) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING (NOT (UNLIKELY(DISTINCT MIN(rt0.c1)))) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING ((UNLIKELY(DISTINCT MIN(rt0.c1))) ISNULL);
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0;
SELECT rt0.c1, rt0.c0 FROM rt0 WHERE (((TRIM(rt0.c0)) NOT BETWEEN (CASE WHEN '1518735491' THEN rt0.c2 END) AND (rt0.c2))) UNION ALL SELECT rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (((TRIM(rt0.c0)) NOT BETWEEN (CASE WHEN '1518735491' THEN rt0.c2 END) AND (rt0.c2))))) UNION ALL SELECT ALL rt0.c1, rt0.c0 FROM rt0 WHERE (((((TRIM(rt0.c0)) NOT BETWEEN (CASE WHEN '1518735491' THEN rt0.c2 END) AND (rt0.c2))) ISNULL));
SELECT ALL rt0.c1, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c1 FROM rt0 WHERE (((((rt0.c2) IS FALSE)) NOTNULL)) UNION SELECT DISTINCT rt0.c1 FROM rt0 WHERE ((NOT (((((rt0.c2) IS FALSE)) NOTNULL)))) UNION SELECT DISTINCT rt0.c1 FROM rt0 WHERE (((((((rt0.c2) IS FALSE)) NOTNULL)) ISNULL));
SELECT DISTINCT rt0.c1 FROM rt0;
SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM rt0 WHERE ('') GROUP BY rt0.c2, rt0.c0 UNION SELECT rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (''))) GROUP BY rt0.c2, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c0 FROM rt0 WHERE ((('') ISNULL)) GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING CAST(COUNT(*) AS BLOB) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING (NOT (CAST(COUNT(*) AS BLOB))) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING ((CAST(COUNT(*) AS BLOB)) ISNULL);
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING CAST(COUNT(*) AS BLOB) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING (NOT (CAST(COUNT(*) AS BLOB))) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING ((CAST(COUNT(*) AS BLOB)) ISNULL);
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE (((((((rt0.c0)GLOB(rt0.c0)))AND(((((rt0.c1)AND(rt0.c2)))AND(rt0.c0)))))AND(json_valid(rt0.c1)))) UNION ALL SELECT * FROM rt0 WHERE ((NOT (((((((rt0.c0)GLOB(rt0.c0)))AND(((((rt0.c1)AND(rt0.c2)))AND(rt0.c0)))))AND(json_valid(rt0.c1)))))) UNION ALL SELECT * FROM rt0 WHERE (((((((((rt0.c0)GLOB(rt0.c0)))AND(((((rt0.c1)AND(rt0.c2)))AND(rt0.c0)))))AND(json_valid(rt0.c1)))) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0 WHERE (CASE ((rt0.c1)=(rt0.c1))  WHEN CAST(rt0.c0 AS INTEGER) THEN (+ (rt0.c0)) WHEN x'bb11' THEN x'' WHEN rt0.c1 THEN ((rt0.c2)AND(rt0.c0)) ELSE ((rt0.c1) NOT BETWEEN (x'') AND ('')) END) UNION SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (CASE ((rt0.c1)=(rt0.c1))  WHEN CAST(rt0.c0 AS INTEGER) THEN (+ (rt0.c0)) WHEN x'bb11' THEN x'' WHEN rt0.c1 THEN ((rt0.c2)AND(rt0.c0)) ELSE ((rt0.c1) NOT BETWEEN (x'') AND ('')) END))) UNION SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0 WHERE (((CASE ((rt0.c1)=(rt0.c1))  WHEN CAST(rt0.c0 AS INTEGER) THEN (+ (rt0.c0)) WHEN x'bb11' THEN x'' WHEN rt0.c1 THEN ((rt0.c2)AND(rt0.c0)) ELSE ((rt0.c1) NOT BETWEEN (x'') AND ('')) END) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c2 FROM rt0 NOT INDEXED WHERE (((((rt0.c2) IS FALSE)) BETWEEN (((NULL)LIKE(rt0.c1))) AND (CASE WHEN rt0.c2 THEN rt0.c0 END))) GROUP BY rt0.c0, rt0.c2 UNION SELECT rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (((((rt0.c2) IS FALSE)) BETWEEN (((NULL)LIKE(rt0.c1))) AND (CASE WHEN rt0.c2 THEN rt0.c0 END))))) GROUP BY rt0.c0, rt0.c2 UNION SELECT rt0.c0, rt0.c2 FROM rt0 WHERE (((((((rt0.c2) IS FALSE)) BETWEEN (((NULL)LIKE(rt0.c1))) AND (CASE WHEN rt0.c2 THEN rt0.c0 END))) ISNULL)) GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING CAST(NULL AS TEXT) UNION ALL SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (NOT (CAST(NULL AS TEXT))) UNION ALL SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING ((CAST(NULL AS TEXT)) ISNULL);
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING CAST(NULL AS TEXT) UNION ALL SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (NOT (CAST(NULL AS TEXT))) UNION ALL SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING ((CAST(NULL AS TEXT)) ISNULL);
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (rt0.c1) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (rt0.c1))) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (((rt0.c1) ISNULL));
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c1 FROM rt0 WHERE ((+ (((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c0))))) UNION SELECT DISTINCT rt0.c1 FROM rt0 WHERE ((NOT ((+ (((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c0))))))) UNION SELECT DISTINCT rt0.c1 FROM rt0 WHERE ((((+ (((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c0))))) ISNULL));
SELECT DISTINCT rt0.c1 FROM rt0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE (CASE COALESCE(rt0.c0, rt0.c0, rt0.c1, rt0.c2)  WHEN rt0.c1 THEN (+ (rt0.c0)) END) GROUP BY rt0.c2, rt0.c1, rt0.c0 UNION SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (CASE COALESCE(rt0.c0, rt0.c0, rt0.c1, rt0.c2)  WHEN rt0.c1 THEN (+ (rt0.c0)) END))) GROUP BY rt0.c2, rt0.c1, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE (((CASE COALESCE(rt0.c0, rt0.c0, rt0.c1, rt0.c2)  WHEN rt0.c1 THEN (+ (rt0.c0)) END) ISNULL)) GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING rt0.c2 UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING (NOT (rt0.c2)) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING ((rt0.c2) ISNULL);
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING rt0.c2 UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING (NOT (rt0.c2)) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING ((rt0.c2) ISNULL);
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE (rt0.c0) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (rt0.c0))) UNION ALL SELECT ALL * FROM rt0 WHERE (((rt0.c0) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0 WHERE ((((((rt0.c0, rt0.c2, '660579857'))>((rt0.c0, rt0.c0, rt0.c1)))) NOTNULL)) UNION SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT ((((((rt0.c0, rt0.c2, '660579857'))>((rt0.c0, rt0.c0, rt0.c1)))) NOTNULL)))) UNION SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0 WHERE ((((((((rt0.c0, rt0.c2, '660579857'))>((rt0.c0, rt0.c0, rt0.c1)))) NOTNULL)) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 WHERE (((x'') NOT BETWEEN (((rt0.c1) NOT NULL)) AND (((((((((rt0.c2)OR(rt0.c0)))OR(rt0.c1)))AND(rt0.c0)))OR(-282262451))))) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM rt0 WHERE ((NOT (((x'') NOT BETWEEN (((rt0.c1) NOT NULL)) AND (((((((((rt0.c2)OR(rt0.c0)))OR(rt0.c1)))AND(rt0.c0)))OR(-282262451))))))) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM rt0 WHERE (((((x'') NOT BETWEEN (((rt0.c1) NOT NULL)) AND (((((((((rt0.c2)OR(rt0.c0)))OR(rt0.c1)))AND(rt0.c0)))OR(-282262451))))) ISNULL)) GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING GROUP_CONCAT(MAX(AVG(AVG(MIN(rt0.c0))))) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING (NOT (GROUP_CONCAT(MAX(AVG(AVG(MIN(rt0.c0))))))) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING ((GROUP_CONCAT(MAX(AVG(AVG(MIN(rt0.c0)))))) ISNULL);
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE ((((((((rt0.c1, rt0.c0, rt0.c2)) BETWEEN ((rt0.c1, rt0.c1, rt0.c0)) AND ((rt0.c1, rt0.c1, rt0.c2))))OR(NULL)))OR(CAST(rt0.c2 AS INTEGER)))) UNION ALL SELECT * FROM rt0 WHERE ((NOT ((((((((rt0.c1, rt0.c0, rt0.c2)) BETWEEN ((rt0.c1, rt0.c1, rt0.c0)) AND ((rt0.c1, rt0.c1, rt0.c2))))OR(NULL)))OR(CAST(rt0.c2 AS INTEGER)))))) UNION ALL SELECT * FROM rt0 WHERE ((((((((((rt0.c1, rt0.c0, rt0.c2)) BETWEEN ((rt0.c1, rt0.c1, rt0.c0)) AND ((rt0.c1, rt0.c1, rt0.c2))))OR(NULL)))OR(CAST(rt0.c2 AS INTEGER)))) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((((rt0.c2)>=(rt0.c2)))>>(((((rt0.c1)AND(rt0.c1)))OR(rt0.c0))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((((rt0.c2)>=(rt0.c2)))>>(((((rt0.c1)AND(rt0.c1)))OR(rt0.c0))))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((((rt0.c2)>=(rt0.c2)))>>(((((rt0.c1)AND(rt0.c1)))OR(rt0.c0))))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 WHERE (((((+ (rt0.c2)), ((((rt0.c1)OR(rt0.c0)))AND(rt0.c0)), rt0.c1 COLLATE NOCASE))!=((NULL, ((rt0.c1)||(0Xffffffff84dba457)), (- (rt0.c0)))))) GROUP BY rt0.c1, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (((((+ (rt0.c2)), ((((rt0.c1)OR(rt0.c0)))AND(rt0.c0)), rt0.c1 COLLATE NOCASE))!=((NULL, ((rt0.c1)||(0xffffffff84dba457)), (- (rt0.c0)))))))) GROUP BY rt0.c1, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c0 FROM rt0 WHERE (((((((+ (rt0.c2)), ((((rt0.c1)OR(rt0.c0)))AND(rt0.c0)), rt0.c1 COLLATE NOCASE))!=((NULL, ((rt0.c1)||(0xffffffff84dba457)), (- (rt0.c0)))))) ISNULL)) GROUP BY rt0.c1, rt0.c0;
SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING ((TOTAL(TOTAL(TOTAL(AVG(SUM(rt0.c2))))))>((~ (rt0.c2)))) UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT (((TOTAL(TOTAL(TOTAL(AVG(SUM(rt0.c2))))))>((~ (rt0.c2)))))) UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING ((((TOTAL(TOTAL(TOTAL(AVG(SUM(rt0.c2))))))>((~ (rt0.c2))))) ISNULL);
SELECT ALL * FROM rt0 NOT INDEXED;
SELECT ALL * FROM rt0 WHERE (((((((((rt0.c1)AND(rt0.c1)))AND(rt0.c2)))OR(rt0.c2 COLLATE RTRIM)))AND(((rt0.c1) IS FALSE)))) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (((((((((rt0.c1)AND(rt0.c1)))AND(rt0.c2)))OR(rt0.c2 COLLATE RTRIM)))AND(((rt0.c1) IS FALSE)))))) UNION ALL SELECT ALL * FROM rt0 WHERE (((((((((((rt0.c1)AND(rt0.c1)))AND(rt0.c2)))OR(rt0.c2 COLLATE RTRIM)))AND(((rt0.c1) IS FALSE)))) ISNULL));
SELECT ALL * FROM rt0 NOT INDEXED;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((((rt0.c2)<<(rt0.c0))) NOT BETWEEN ((rt0.c1 IN ())) AND (((((rt0.c1)OR(rt0.c0)))AND(rt0.c0))))) UNION SELECT DISTINCT * FROM rt0 NOT INDEXED WHERE ((NOT (((((rt0.c2)<<(rt0.c0))) NOT BETWEEN ((rt0.c1 IN ())) AND (((((rt0.c1)OR(rt0.c0)))AND(rt0.c0))))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((((rt0.c2)<<(rt0.c0))) NOT BETWEEN ((rt0.c1 IN ())) AND (((((rt0.c1)OR(rt0.c0)))AND(rt0.c0))))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE (CAST(UPPER(DISTINCT rt0.c0) AS TEXT)) GROUP BY rt0.c0, rt0.c2, rt0.c1 UNION SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (CAST(UPPER(DISTINCT rt0.c0) AS TEXT)))) GROUP BY rt0.c0, rt0.c2, rt0.c1 UNION SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE (((CAST(UPPER(DISTINCT rt0.c0) AS TEXT)) ISNULL)) GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c0 FROM rt0 NOT INDEXED GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING MIN(MAX('')) UNION ALL SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (NOT (MIN(MAX('')))) UNION ALL SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING ((MIN(MAX(''))) ISNULL);
SELECT rt0.c1, rt0.c2 FROM rt0;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 WHERE (CAST(rt0.c0 COLLATE RTRIM AS NUMERIC)) UNION ALL SELECT rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (CAST(rt0.c0 COLLATE RTRIM AS NUMERIC)))) UNION ALL SELECT ALL rt0.c1, rt0.c2 FROM rt0 WHERE (((CAST(rt0.c0 COLLATE RTRIM AS NUMERIC)) ISNULL));
SELECT rt0.c1, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c1 FROM rt0 WHERE (((((rt0.c0)-(rt0.c0)))LIKE(((rt0.c2) NOTNULL)))) UNION SELECT DISTINCT rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (((((rt0.c0)-(rt0.c0)))LIKE(((rt0.c2) NOTNULL)))))) UNION SELECT DISTINCT rt0.c0, rt0.c1 FROM rt0 WHERE (((((((rt0.c0)-(rt0.c0)))LIKE(((rt0.c2) NOTNULL)))) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c1 FROM rt0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 WHERE (((((x'e00f')GLOB(rt0.c2)))/(CAST(rt0.c0 AS INTEGER)))) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM rt0 WHERE ((NOT (((((x'e00f')GLOB(rt0.c2)))/(CAST(rt0.c0 AS INTEGER)))))) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM rt0 WHERE (((((((x'e00f')GLOB(rt0.c2)))/(CAST(rt0.c0 AS INTEGER)))) ISNULL)) GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING CASE SUM(GROUP_CONCAT(MIN(SUM(rt0.c1))))  WHEN MIN(SUM(GROUP_CONCAT(COUNT(*)))) THEN ((AVG(COUNT(*))) IS FALSE) END UNION ALL SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING (NOT (CASE SUM(GROUP_CONCAT(MIN(SUM(rt0.c1))))  WHEN MIN(SUM(GROUP_CONCAT(COUNT(*)))) THEN ((AVG(COUNT(*))) IS FALSE) END)) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING ((CASE SUM(GROUP_CONCAT(MIN(SUM(rt0.c1))))  WHEN MIN(SUM(GROUP_CONCAT(COUNT(*)))) THEN ((AVG(COUNT(*))) IS FALSE) END) ISNULL);
SELECT ALL * FROM rt0;
SELECT * FROM rt0 WHERE (((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c2 END) BETWEEN (rt0.c2) AND ((NOT (rt0.c1))))) UNION ALL SELECT * FROM rt0 WHERE ((NOT (((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c2 END) BETWEEN (rt0.c2) AND ((NOT (rt0.c1))))))) UNION ALL SELECT * FROM rt0 WHERE (((((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c2 END) BETWEEN (rt0.c2) AND ((NOT (rt0.c1))))) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c2))) NOTNULL)) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c2))) NOTNULL)))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c2))) NOTNULL)) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 WHERE ((((((NOT (rt0.c1)))AND(((rt0.c1)!=(rt0.c2)))))OR((+ (rt0.c1))))) GROUP BY rt0.c1, rt0.c2 UNION SELECT rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT ((((((NOT (rt0.c1)))AND(((rt0.c1)!=(rt0.c2)))))OR((+ (rt0.c1))))))) GROUP BY rt0.c1, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c2 FROM rt0 WHERE ((((((((NOT (rt0.c1)))AND(((rt0.c1)<>(rt0.c2)))))OR((+ (rt0.c1))))) ISNULL)) GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING TOTAL(((SUM(COUNT(*)))*(rt0.c1))) UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT (TOTAL(((SUM(COUNT(*)))*(rt0.c1))))) UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING ((TOTAL(((SUM(COUNT(*)))*(rt0.c1)))) ISNULL);
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((((rt0.c0, rt0.c1, rt0.c1, rt0.c1, rt0.c1)) NOT BETWEEN ((rt0.c2, 0X772e5e6c, rt0.c0, rt0.c0, rt0.c2)) AND ((rt0.c2, rt0.c0, rt0.c1, rt0.c2, rt0.c2))) COLLATE RTRIM) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT ((((rt0.c0, rt0.c1, rt0.c1, rt0.c1, rt0.c1)) NOT BETWEEN ((rt0.c2, 0X772e5e6c, rt0.c0, rt0.c0, rt0.c2)) AND ((rt0.c2, rt0.c0, rt0.c1, rt0.c2, rt0.c2))) COLLATE RTRIM))) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((((((rt0.c0, rt0.c1, rt0.c1, rt0.c1, rt0.c1)) NOT BETWEEN ((rt0.c2, 0x772e5e6c, rt0.c0, rt0.c0, rt0.c2)) AND ((rt0.c2, rt0.c0, rt0.c1, rt0.c2, rt0.c2))) COLLATE RTRIM) ISNULL));
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c0 FROM rt0 WHERE ((((0.0013764023182506469, rt0.c0, rt0.c2)) BETWEEN ((x'5571', json_type(rt0.c2), ((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2)))) AND ((((rt0.c0) IS FALSE), rt0.c2, ((rt0.c1)*(x'bea6c3c9')))))) UNION SELECT DISTINCT rt0.c0 FROM rt0 WHERE ((NOT ((((0.0013764023182506469, rt0.c0, rt0.c2)) BETWEEN ((x'5571', json_type(rt0.c2), ((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2)))) AND ((((rt0.c0) IS FALSE), rt0.c2, ((rt0.c1)*(x'bea6c3c9')))))))) UNION SELECT DISTINCT rt0.c0 FROM rt0 WHERE ((((((0.0013764023182506469, rt0.c0, rt0.c2)) BETWEEN ((x'5571', json_type(rt0.c2), ((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2)))) AND ((((rt0.c0) IS FALSE), rt0.c2, ((rt0.c1)*(x'bea6c3c9')))))) ISNULL));
SELECT DISTINCT rt0.c0 FROM rt0;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 WHERE ((((CAST(rt0.c2 AS REAL), ((rt0.c0) BETWEEN (rt0.c0) AND (1.372930985E9)), CASE rt0.c1  WHEN 0.03794402413806841 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 END))<=((((x'e74e')IS NOT(rt0.c2)), (rt0.c1 IN ()), rt0.c0 COLLATE BINARY)))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0 WHERE ((NOT ((((CAST(rt0.c2 AS REAL), ((rt0.c0) BETWEEN (rt0.c0) AND (1.372930985E9)), CASE rt0.c1  WHEN 0.03794402413806841 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 END))<=((((x'e74e')IS NOT(rt0.c2)), (rt0.c1 IN ()), rt0.c0 COLLATE BINARY)))))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0 WHERE ((((((CAST(rt0.c2 AS REAL), ((rt0.c0) BETWEEN (rt0.c0) AND (1.372930985E9)), CASE rt0.c1  WHEN 0.03794402413806841 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 END))<=((((x'e74e')IS NOT(rt0.c2)), (rt0.c1 IN ()), rt0.c0 COLLATE BINARY)))) ISNULL)) GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING GROUP_CONCAT(COUNT(rt0.c1)) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT (GROUP_CONCAT(COUNT(rt0.c1)))) UNION ALL SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((GROUP_CONCAT(COUNT(rt0.c1))) ISNULL);
SELECT rt0.c1 FROM rt0;
SELECT ALL rt0.c1 FROM rt0 WHERE (CASE CAST(rt0.c1 AS TEXT)  WHEN ((NULL)OR(rt0.c1)) THEN (((rt0.c1))>=((rt0.c0))) END) UNION ALL SELECT rt0.c1 FROM rt0 WHERE ((NOT (CASE CAST(rt0.c1 AS TEXT)  WHEN ((NULL)OR(rt0.c1)) THEN (((rt0.c1))>=((rt0.c0))) END))) UNION ALL SELECT rt0.c1 FROM rt0 WHERE (((CASE CAST(rt0.c1 AS TEXT)  WHEN ((NULL)OR(rt0.c1)) THEN (((rt0.c1))>=((rt0.c0))) END) ISNULL));
SELECT rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE (((json_array(0.9512010616908911, rt0.c1, 0.42631939487702486, rt0.c2)) ISNULL)) UNION SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (((json_array(0.9512010616908911, rt0.c1, 0.42631939487702486, rt0.c2)) ISNULL)))) UNION SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE (((((json_array(0.9512010616908911, rt0.c1, 0.42631939487702486, rt0.c2)) ISNULL)) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 WHERE (TRIM(rt0.c2, ((((((((rt0.c0)OR(rt0.c2)))AND(rt0.c0)))OR(rt0.c2)))AND(rt0.c1)))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0 WHERE ((NOT (TRIM(rt0.c2, ((((((((rt0.c0)OR(rt0.c2)))AND(rt0.c0)))OR(rt0.c2)))AND(rt0.c1)))))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0 WHERE (((TRIM(rt0.c2, ((((((((rt0.c0)OR(rt0.c2)))AND(rt0.c0)))OR(rt0.c2)))AND(rt0.c1)))) ISNULL)) GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING (((TOTAL(GROUP_CONCAT(rt0.c1))))>((((AVG(rt0.c0)) NOT BETWEEN ('1e500') AND ('1886774267'))))) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING (NOT ((((TOTAL(GROUP_CONCAT(rt0.c1))))>((((AVG(rt0.c0)) NOT BETWEEN ('1e500') AND ('1886774267'))))))) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING (((((TOTAL(GROUP_CONCAT(rt0.c1))))>((((AVG(rt0.c0)) NOT BETWEEN ('1e500') AND ('1886774267')))))) ISNULL);
SELECT ALL rt0.c2 FROM rt0;
SELECT ALL rt0.c2 FROM rt0 WHERE (CASE UNLIKELY(rt0.c2)  WHEN 0.20148269743575786 THEN ((((rt0.c1)AND(0.2743442449570518)))OR(rt0.c1)) WHEN rt0.c1 THEN ((rt0.c2)*(rt0.c1)) WHEN ((rt0.c2)-(rt0.c2)) THEN (~ (rt0.c0)) END) UNION ALL SELECT ALL rt0.c2 FROM rt0 WHERE ((NOT (CASE UNLIKELY(rt0.c2)  WHEN 0.20148269743575786 THEN ((((rt0.c1)AND(0.2743442449570518)))OR(rt0.c1)) WHEN rt0.c1 THEN ((rt0.c2)*(rt0.c1)) WHEN ((rt0.c2)-(rt0.c2)) THEN (~ (rt0.c0)) END))) UNION ALL SELECT ALL rt0.c2 FROM rt0 WHERE (((CASE UNLIKELY(rt0.c2)  WHEN 0.20148269743575786 THEN ((((rt0.c1)AND(0.2743442449570518)))OR(rt0.c1)) WHEN rt0.c1 THEN ((rt0.c2)*(rt0.c1)) WHEN ((rt0.c2)-(rt0.c2)) THEN (~ (rt0.c0)) END) ISNULL));
SELECT ALL rt0.c2 FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((('4S-]')>(((rt0.c2)&(rt0.c2))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((('4S-]')>(((rt0.c2)&(rt0.c2))))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((('4S-]')>(((rt0.c2)&(rt0.c2))))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 WHERE (x'') GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0 WHERE ((NOT (x''))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0 WHERE (((x'') ISNULL)) GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING MIN(GROUP_CONCAT(rt0.c1)) UNION ALL SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING (NOT (MIN(GROUP_CONCAT(rt0.c1)))) UNION ALL SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING ((MIN(GROUP_CONCAT(rt0.c1))) ISNULL);
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE (CASE WHEN rt0.c2 COLLATE RTRIM THEN ((rt0.c1) NOT NULL) END) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (CASE WHEN rt0.c2 COLLATE RTRIM THEN ((rt0.c1) NOT NULL) END))) UNION ALL SELECT * FROM rt0 WHERE (((CASE WHEN rt0.c2 COLLATE RTRIM THEN ((rt0.c1) NOT NULL) END) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (CASE WHEN CASE WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 END THEN CAST(rt0.c2 AS TEXT) END) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (CASE WHEN CASE WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 END THEN CAST(rt0.c2 AS TEXT) END))) UNION SELECT DISTINCT * FROM rt0 WHERE (((CASE WHEN CASE WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 END THEN CAST(rt0.c2 AS TEXT) END) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (QUOTE(((rt0.c0)=(0.29833038761150377)))) GROUP BY rt0.c1, rt0.c0, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (QUOTE(((rt0.c0)==(0.29833038761150377)))))) GROUP BY rt0.c1, rt0.c0, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (((QUOTE(((rt0.c0)=(0.29833038761150377)))) ISNULL)) GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING TOTAL(SUM(rt0.c1)) COLLATE NOCASE UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT (TOTAL(SUM(rt0.c1)) COLLATE NOCASE)) UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING ((TOTAL(SUM(rt0.c1)) COLLATE NOCASE) ISNULL);
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((((x''))>=((CASE WHEN rt0.c2 THEN rt0.c1 ELSE 'AgVc' END)))) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT ((((x''))>=((CASE WHEN rt0.c2 THEN rt0.c1 ELSE 'AgVc' END)))))) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((((((x''))>=((CASE WHEN rt0.c2 THEN rt0.c1 ELSE 'AgVc' END)))) ISNULL));
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0 WHERE (((((rt0.c0) NOT BETWEEN ('-1900419530') AND (rt0.c1)))<<(((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0))))) UNION SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (((((rt0.c0) NOT BETWEEN ('-1900419530') AND (rt0.c1)))<<(((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0))))))) UNION SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0 WHERE (((((((rt0.c0) NOT BETWEEN ('-1900419530') AND (rt0.c1)))<<(((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0))))) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 WHERE (((((((rt0.c0)<=('m{dq漘*')))OR(((rt0.c2)<<(rt0.c2)))))OR(CASE ''  WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c0 END))) GROUP BY rt0.c0, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (((((((rt0.c0)<=('m{dq漘*')))OR(((rt0.c2)<<(rt0.c2)))))OR(CASE ''  WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c0 END))))) GROUP BY rt0.c0, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c2 FROM rt0 WHERE (((((((((rt0.c0)<=('m{dq漘*')))OR(((rt0.c2)<<(rt0.c2)))))OR(CASE ''  WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c0 END))) ISNULL)) GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING COUNT(rt0.c1) UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING (NOT (COUNT(rt0.c1))) UNION ALL SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING ((COUNT(rt0.c1)) ISNULL);
SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING COUNT(rt0.c1) UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING (NOT (COUNT(rt0.c1))) UNION ALL SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING ((COUNT(rt0.c1)) ISNULL);
SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE (CASE rt0.c2 COLLATE NOCASE  WHEN (NOT (rt0.c1)) THEN ((rt0.c1)<=(0.03846472037841708)) END) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (CASE rt0.c2 COLLATE NOCASE  WHEN (NOT (rt0.c1)) THEN ((rt0.c1)<=(0.03846472037841708)) END))) UNION ALL SELECT ALL * FROM rt0 WHERE (((CASE rt0.c2 COLLATE NOCASE  WHEN (NOT (rt0.c1)) THEN ((rt0.c1)<=(0.03846472037841708)) END) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0 WHERE (CASE WHEN SQLITE_SOURCE_ID() THEN '1736232365' END) UNION SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (CASE WHEN SQLITE_SOURCE_ID() THEN '1736232365' END))) UNION SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0 WHERE (((CASE WHEN SQLITE_SOURCE_ID() THEN '1736232365' END) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((- ((- (rt0.c2))))) GROUP BY rt0.c2, rt0.c1, rt0.c0 UNION SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT ((- ((- (rt0.c2))))))) GROUP BY rt0.c2, rt0.c1, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((((- ((- (rt0.c2))))) ISNULL)) GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING SUM(((rt0.c0) BETWEEN (MAX(rt0.c2)) AND (rt0.c2))) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING (NOT (SUM(((rt0.c0) BETWEEN (MAX(rt0.c2)) AND (rt0.c2))))) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING ((SUM(((rt0.c0) BETWEEN (MAX(rt0.c2)) AND (rt0.c2)))) ISNULL);
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((~ (CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c0 END))) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT ((~ (CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c0 END))))) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((((~ (CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c0 END))) ISNULL));
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c0 FROM rt0 WHERE (-631882098) UNION SELECT DISTINCT rt0.c0 FROM rt0 WHERE ((NOT (-631882098))) UNION SELECT DISTINCT rt0.c0 FROM rt0 WHERE (((-631882098) ISNULL));
SELECT DISTINCT rt0.c0 FROM rt0;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 WHERE ((((rt0.c2 COLLATE NOCASE, ((rt0.c2) IS TRUE), rt0.c1))>=((x'', (rt0.c1 IN ()), ((rt0.c1) ISNULL))))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0 WHERE ((NOT ((((rt0.c2 COLLATE NOCASE, ((rt0.c2) IS TRUE), rt0.c1))>=((x'', (rt0.c1 IN ()), ((rt0.c1) ISNULL))))))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0 WHERE ((((((rt0.c2 COLLATE NOCASE, ((rt0.c2) IS TRUE), rt0.c1))>=((x'', (rt0.c1 IN ()), ((rt0.c1) ISNULL))))) ISNULL)) GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING ((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0)))>=(((AVG(COUNT(MIN(MAX(GROUP_CONCAT(rt0.c2)))))) IS TRUE))) UNION ALL SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING (NOT (((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0)))>=(((AVG(COUNT(MIN(MAX(GROUP_CONCAT(rt0.c2)))))) IS TRUE))))) UNION ALL SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING ((((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0)))>=(((AVG(COUNT(MIN(MAX(GROUP_CONCAT(rt0.c2)))))) IS TRUE)))) ISNULL);
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE (((((CASE WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c0 END)OR(rt0.c2 COLLATE RTRIM)))AND(((((rt0.c1)OR(rt0.c0)))AND(rt0.c2))))) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (((((CASE WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c0 END)OR(rt0.c2 COLLATE RTRIM)))AND(((((rt0.c1)OR(rt0.c0)))AND(rt0.c2))))))) UNION ALL SELECT ALL * FROM rt0 WHERE (((((((CASE WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c0 END)OR(rt0.c2 COLLATE RTRIM)))AND(((((rt0.c1)OR(rt0.c0)))AND(rt0.c2))))) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0 WHERE ((((rt0.c2, rt0.c1, rt0.c2)) BETWEEN (((rt0.c2 IN (rt0.c2)), '-1694066012', ((rt0.c1) IS FALSE))) AND ((rt0.c1 COLLATE RTRIM, ((NULL) NOTNULL), rt0.c0 COLLATE BINARY)))) UNION SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT ((((rt0.c2, rt0.c1, rt0.c2)) BETWEEN (((rt0.c2 IN (rt0.c2)), '-1694066012', ((rt0.c1) IS FALSE))) AND ((rt0.c1 COLLATE RTRIM, ((NULL) NOTNULL), rt0.c0 COLLATE BINARY)))))) UNION SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0 WHERE ((((((rt0.c2, rt0.c1, rt0.c2)) BETWEEN (((rt0.c2 IN (rt0.c2)), '-1694066012', ((rt0.c1) IS FALSE))) AND ((rt0.c1 COLLATE RTRIM, ((NULL) NOTNULL), rt0.c0 COLLATE BINARY)))) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE (((((rt0.c2) ISNULL)) BETWEEN ((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2)))) AND ((- (rt0.c2))))) GROUP BY rt0.c0, rt0.c2, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (((((rt0.c2) ISNULL)) BETWEEN ((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2)))) AND ((- (rt0.c2))))))) GROUP BY rt0.c0, rt0.c2, rt0.c1 UNION SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE (((((((rt0.c2) ISNULL)) BETWEEN ((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2)))) AND ((- (rt0.c2))))) ISNULL)) GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING COUNT(MAX(rt0.c2)) UNION ALL SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING (NOT (COUNT(MAX(rt0.c2)))) UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING ((COUNT(MAX(rt0.c2))) ISNULL);
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE (CAST((rt0.c2 IN ()) AS BLOB)) UNION ALL SELECT * FROM rt0 WHERE ((NOT (CAST((rt0.c2 IN ()) AS BLOB)))) UNION ALL SELECT * FROM rt0 WHERE (((CAST((rt0.c2 IN ()) AS BLOB)) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0 WHERE ((rt0.c0 COLLATE RTRIM IN ())) UNION SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT ((rt0.c0 COLLATE RTRIM IN ())))) UNION SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0 WHERE ((((rt0.c0 COLLATE RTRIM IN ())) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0;
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c2 FROM rt0 WHERE (NULL COLLATE NOCASE) GROUP BY rt0.c0, rt0.c2 UNION SELECT rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (NULL COLLATE NOCASE))) GROUP BY rt0.c0, rt0.c2 UNION SELECT rt0.c0, rt0.c2 FROM rt0 WHERE (((NULL COLLATE NOCASE) ISNULL)) GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING MAX(SUM(rt0.c1)) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING (NOT (MAX(SUM(rt0.c1)))) UNION ALL SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING ((MAX(SUM(rt0.c1))) ISNULL);
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE ((NOT ('-770394130' COLLATE BINARY))) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT ((NOT ('-770394130' COLLATE BINARY))))) UNION ALL SELECT * FROM rt0 WHERE ((((NOT ('-770394130' COLLATE BINARY))) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)) COLLATE BINARY) UNION SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)) COLLATE BINARY))) UNION SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (((((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)) COLLATE BINARY) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE (CASE ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c0))  WHEN ((rt0.c1) BETWEEN (rt0.c1) AND (x'')) THEN ((rt0.c2) NOT NULL) WHEN ((((((((NULL)OR(rt0.c2)))OR(rt0.c1)))OR(rt0.c2)))OR(rt0.c2)) THEN IFNULL(rt0.c0, rt0.c0) WHEN CAST(rt0.c0 AS NUMERIC) THEN (NULL IN (rt0.c2, rt0.c2)) END) GROUP BY rt0.c2, rt0.c0, rt0.c1 UNION SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (CASE ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c0))  WHEN ((rt0.c1) BETWEEN (rt0.c1) AND (x'')) THEN ((rt0.c2) NOT NULL) WHEN ((((((((NULL)OR(rt0.c2)))OR(rt0.c1)))OR(rt0.c2)))OR(rt0.c2)) THEN IFNULL(rt0.c0, rt0.c0) WHEN CAST(rt0.c0 AS NUMERIC) THEN (NULL IN (rt0.c2, rt0.c2)) END))) GROUP BY rt0.c2, rt0.c0, rt0.c1 UNION SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE (((CASE ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c0))  WHEN ((rt0.c1) BETWEEN (rt0.c1) AND (x'')) THEN ((rt0.c2) NOT NULL) WHEN ((((((((NULL)OR(rt0.c2)))OR(rt0.c1)))OR(rt0.c2)))OR(rt0.c2)) THEN IFNULL(rt0.c0, rt0.c0) WHEN CAST(rt0.c0 AS NUMERIC) THEN (NULL IN (rt0.c2, rt0.c2)) END) ISNULL)) GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING (((MAX(rt0.c2))) NOT BETWEEN ((GROUP_CONCAT(MAX(MAX(rt0.c2))))) AND ((COUNT(*)))) UNION ALL SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING (NOT ((((MAX(rt0.c2))) NOT BETWEEN ((GROUP_CONCAT(MAX(MAX(rt0.c2))))) AND ((COUNT(*)))))) UNION ALL SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING (((((MAX(rt0.c2))) NOT BETWEEN ((GROUP_CONCAT(MAX(MAX(rt0.c2))))) AND ((COUNT(*))))) ISNULL);
SELECT TOTAL(x'09d6') FROM rt0;
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE (((rt0.c0) IS TRUE)) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (((rt0.c0) IS TRUE)))) UNION ALL SELECT ALL * FROM rt0 WHERE (((((rt0.c0) IS TRUE)) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0 WHERE (((CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c0 END) IS FALSE)) UNION SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (((CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c0 END) IS FALSE)))) UNION SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0 WHERE (((((CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c0 END) IS FALSE)) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 WHERE (CAST(CAST(rt0.c0 AS NUMERIC) AS REAL)) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM rt0 WHERE ((NOT (CAST(CAST(rt0.c0 AS NUMERIC) AS REAL)))) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM rt0 WHERE (((CAST(CAST(rt0.c0 AS NUMERIC) AS REAL)) ISNULL)) GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING GROUP_CONCAT(MAX(rt0.c1)) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING (NOT (GROUP_CONCAT(MAX(rt0.c1)))) UNION ALL SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING ((GROUP_CONCAT(MAX(rt0.c1))) ISNULL);
SELECT ALL * FROM rt0;
SELECT * FROM rt0 WHERE (((((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1)))IS(((((rt0.c1)AND(rt0.c2)))OR(rt0.c1))))) UNION ALL SELECT * FROM rt0 WHERE ((NOT (((((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1)))IS(((((rt0.c1)AND(rt0.c2)))OR(rt0.c1))))))) UNION ALL SELECT ALL * FROM rt0 WHERE (((((((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1)))IS(((((rt0.c1)AND(rt0.c2)))OR(rt0.c1))))) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((((rt0.c2))<=((((((rt0.c1)AND(rt0.c1)))OR(rt0.c0)))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((((rt0.c2))<=((((((rt0.c1)AND(rt0.c1)))OR(rt0.c0)))))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((((rt0.c2))<=((((((rt0.c1)AND(rt0.c1)))OR(rt0.c0)))))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c1 FROM rt0 NOT INDEXED GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 WHERE (((rt0.c0) NOT BETWEEN (((rt0.c0) NOT NULL)) AND (-1343179405))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0 WHERE ((NOT (((rt0.c0) NOT BETWEEN (((rt0.c0) NOT NULL)) AND (-1343179405))))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0 WHERE (((((rt0.c0) NOT BETWEEN (((rt0.c0) NOT NULL)) AND (-1343179405))) ISNULL)) GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 NOT INDEXED GROUP BY rt0.c1;
SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING 0.5834753100192874 UNION ALL SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING (NOT (0.5834753100192874)) UNION ALL SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING ((0.5834753100192874) ISNULL);
SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING 0.5834753100192874 UNION ALL SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING (NOT (0.5834753100192874)) UNION ALL SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING ((0.5834753100192874) ISNULL);
SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE (((rt0.c2)GLOB(rt0.c2)) COLLATE RTRIM) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (((rt0.c2)GLOB(rt0.c2)) COLLATE RTRIM))) UNION ALL SELECT * FROM rt0 WHERE (((((rt0.c2)GLOB(rt0.c2)) COLLATE RTRIM) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((rt0.c1)+(rt0.c1)) COLLATE BINARY) UNION SELECT DISTINCT * FROM rt0 NOT INDEXED WHERE ((NOT (((rt0.c1)+(rt0.c1)) COLLATE BINARY))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((rt0.c1)+(rt0.c1)) COLLATE BINARY) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE (8.35391328E8) GROUP BY rt0.c2, rt0.c0, rt0.c1 UNION SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (8.35391328E8))) GROUP BY rt0.c2, rt0.c0, rt0.c1 UNION SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE (((8.35391328E8) ISNULL)) GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING ((GROUP_CONCAT(TOTAL(MAX(COUNT(rt0.c0)))))AND(MAX(rt0.c1))) COLLATE NOCASE UNION ALL SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING (NOT (((GROUP_CONCAT(TOTAL(MAX(COUNT(rt0.c0)))))AND(MAX(rt0.c1))) COLLATE NOCASE)) UNION ALL SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING ((((GROUP_CONCAT(TOTAL(MAX(COUNT(rt0.c0)))))AND(MAX(rt0.c1))) COLLATE NOCASE) ISNULL);
SELECT ALL MIN(((rt0.c0)<=(NULL)) COLLATE RTRIM) FROM rt0 ORDER BY CASE ((((rt0.c1)AND(rt0.c1)))AND(rt0.c2))  WHEN rt0.c1 THEN ((((rt0.c0)OR(rt0.c1)))OR(rt0.c2)) ELSE CASE rt0.c0  WHEN rt0.c1 THEN x'' END END ASC;
SELECT ALL * FROM rt0;
SELECT * FROM rt0 WHERE (CAST(LTRIM(rt0.c1) AS REAL)) UNION ALL SELECT * FROM rt0 WHERE ((NOT (CAST(LTRIM(rt0.c1) AS REAL)))) UNION ALL SELECT * FROM rt0 WHERE (((CAST(LTRIM(rt0.c1) AS REAL)) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE (((((((rt0.c2)AND(rt0.c0)))AND(rt0.c1))) NOT BETWEEN (((((rt0.c0)AND(rt0.c1)))AND(rt0.c2))) AND (((rt0.c1)<=(rt0.c1))))) UNION SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (((((((rt0.c2)AND(rt0.c0)))AND(rt0.c1))) NOT BETWEEN (((((rt0.c0)AND(rt0.c1)))AND(rt0.c2))) AND (((rt0.c1)<=(rt0.c1))))))) UNION SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE (((((((((rt0.c2)AND(rt0.c0)))AND(rt0.c1))) NOT BETWEEN (((((rt0.c0)AND(rt0.c1)))AND(rt0.c2))) AND (((rt0.c1)<=(rt0.c1))))) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0 FROM rt0;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE (((((rt0.c0) IS FALSE)) BETWEEN (SUBSTR(rt0.c0, rt0.c2)) AND ((rt0.c2 IN ())))) GROUP BY rt0.c0, rt0.c1, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (((((rt0.c0) IS FALSE)) BETWEEN (SUBSTR(rt0.c0, rt0.c2)) AND ((rt0.c2 IN ())))))) GROUP BY rt0.c0, rt0.c1, rt0.c2 UNION SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE (((((((rt0.c0) IS FALSE)) BETWEEN (SUBSTR(rt0.c0, rt0.c2)) AND ((rt0.c2 IN ())))) ISNULL)) GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING TOTAL(MAX(rt0.c0)) COLLATE NOCASE UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING (NOT (TOTAL(MAX(rt0.c0)) COLLATE NOCASE)) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING ((TOTAL(MAX(rt0.c0)) COLLATE NOCASE) ISNULL);
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE (x'') UNION ALL SELECT * FROM rt0 WHERE ((NOT (x''))) UNION ALL SELECT * FROM rt0 WHERE (((x'') ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c0 FROM rt0 WHERE (rt0.c0) UNION SELECT DISTINCT rt0.c0 FROM rt0 WHERE ((NOT (rt0.c0))) UNION SELECT DISTINCT rt0.c0 FROM rt0 WHERE (((rt0.c0) ISNULL));
SELECT DISTINCT rt0.c0 FROM rt0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 WHERE ((((~ (rt0.c0))) BETWEEN ((- (rt0.c1))) AND (((((((((rt0.c2)AND(rt0.c1)))OR(rt0.c0)))AND(rt0.c2)))OR(NULL))))) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM rt0 WHERE ((NOT ((((~ (rt0.c0))) BETWEEN ((- (rt0.c1))) AND (((((((((rt0.c2)AND(rt0.c1)))OR(rt0.c0)))AND(rt0.c2)))OR(NULL))))))) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM rt0 WHERE ((((((~ (rt0.c0))) BETWEEN ((- (rt0.c1))) AND (((((((((rt0.c2)AND(rt0.c1)))OR(rt0.c0)))AND(rt0.c2)))OR(NULL))))) ISNULL)) GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((((((((((TOTAL(NULL))>=(MIN(rt0.c0))))OR(((SUM(x''))OR(rt0.c1)))))AND(CAST(rt0.c0 AS INTEGER))))AND((COUNT(*) IN ()))))AND(SUM(rt0.c1))) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT (((((((((((TOTAL(NULL))>=(MIN(rt0.c0))))OR(((SUM(x''))OR(rt0.c1)))))AND(CAST(rt0.c0 AS INTEGER))))AND((COUNT(*) IN ()))))AND(SUM(rt0.c1))))) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((((((((((((TOTAL(NULL))>=(MIN(rt0.c0))))OR(((SUM(x''))OR(rt0.c1)))))AND(CAST(rt0.c0 AS INTEGER))))AND((COUNT(*) IN ()))))AND(SUM(rt0.c1)))) ISNULL);
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((((((((((TOTAL(NULL))>=(MIN(rt0.c0))))OR(((SUM(x''))OR(rt0.c1)))))AND(CAST(rt0.c0 AS INTEGER))))AND((COUNT(*) IN ()))))AND(SUM(rt0.c1))) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT (((((((((((TOTAL(NULL))>=(MIN(rt0.c0))))OR(((SUM(x''))OR(rt0.c1)))))AND(CAST(rt0.c0 AS INTEGER))))AND((COUNT(*) IN ()))))AND(SUM(rt0.c1))))) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((((((((((((TOTAL(NULL))>=(MIN(rt0.c0))))OR(((SUM(x''))OR(rt0.c1)))))AND(CAST(rt0.c0 AS INTEGER))))AND((COUNT(*) IN ()))))AND(SUM(rt0.c1)))) ISNULL);
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE (UPPER(DISTINCT rt0.c0) COLLATE NOCASE) UNION ALL SELECT * FROM rt0 WHERE ((NOT (UPPER(DISTINCT rt0.c0) COLLATE NOCASE))) UNION ALL SELECT * FROM rt0 WHERE (((UPPER(DISTINCT rt0.c0) COLLATE NOCASE) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c2 FROM rt0 WHERE (rt0.c2) UNION SELECT DISTINCT rt0.c2 FROM rt0 NOT INDEXED WHERE ((NOT (rt0.c2))) UNION SELECT DISTINCT rt0.c2 FROM rt0 WHERE (((rt0.c2) ISNULL));
SELECT DISTINCT rt0.c2 FROM rt0;
SELECT ALL rt0.c0 FROM rt0 NOT INDEXED GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 WHERE (rt0.c0) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM rt0 WHERE ((NOT (rt0.c0))) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM rt0 WHERE (((rt0.c0) ISNULL)) GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 NOT INDEXED GROUP BY rt0.c0;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((((COUNT(AVG(rt0.c1)))) BETWEEN ((COUNT(*))) AND ((TOTAL(rt0.c1)))) IN (AVG(AVG(COUNT(*))))) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT (((((COUNT(AVG(rt0.c1)))) BETWEEN ((COUNT(*))) AND ((TOTAL(rt0.c1)))) IN (AVG(AVG(COUNT(*))))))) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((((((COUNT(AVG(rt0.c1)))) BETWEEN ((COUNT(*))) AND ((TOTAL(rt0.c1)))) IN (AVG(AVG(COUNT(*)))))) ISNULL);
SELECT ALL * FROM rt0;
SELECT * FROM rt0 WHERE (rt0.c2) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (rt0.c2))) UNION ALL SELECT ALL * FROM rt0 WHERE (((rt0.c2) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((((rt0.c2)OR(rt0.c1)))<(CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 END))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((((rt0.c2)OR(rt0.c1)))<(CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 END))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((((rt0.c2)OR(rt0.c1)))<(CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 END))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE (((((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1))) IS TRUE)) GROUP BY rt0.c1, rt0.c2, rt0.c0 UNION SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (((((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1))) IS TRUE)))) GROUP BY rt0.c1, rt0.c2, rt0.c0 UNION SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE (((((((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1))) IS TRUE)) ISNULL)) GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING ((rt0.c1 COLLATE RTRIM)||(((COUNT(SUM(COUNT(COUNT(rt0.c0))))) NOTNULL))) UNION ALL SELECT rt0.c0 FROM rt0 NOT INDEXED GROUP BY rt0.c0 HAVING (NOT (((rt0.c1 COLLATE RTRIM)||(((COUNT(SUM(COUNT(COUNT(rt0.c0))))) NOTNULL))))) UNION ALL SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING ((((rt0.c1 COLLATE RTRIM)||(((COUNT(SUM(COUNT(COUNT(rt0.c0))))) NOTNULL)))) ISNULL);
SELECT ALL TOTAL((((('')IS(rt0.c1)))GLOB(''))) FROM rt0 ORDER BY CASE ((rt0.c2) NOTNULL)  WHEN CASE WHEN NULL THEN rt0.c0 ELSE rt0.c1 END THEN ((rt0.c2)/(rt0.c0)) END  NULLS FIRST;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (json_valid('-1113008259')) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (json_valid('-1113008259')))) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (((json_valid('-1113008259')) ISNULL));
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0 WHERE (0.65249434382894) UNION SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (0.65249434382894))) UNION SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0 WHERE (((0.65249434382894) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 WHERE (((((((rt0.c2)+(x'')))AND((- (rt0.c0)))))AND(0.280839536203232))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0 WHERE ((NOT (((((((rt0.c2)+(x'')))AND((- (rt0.c0)))))AND(0.280839536203232))))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0 WHERE (((((((((rt0.c2)+(x'')))AND((- (rt0.c0)))))AND(0.280839536203232))) ISNULL)) GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING CASE ((MAX(rt0.c2)) BETWEEN (rt0.c2) AND (rt0.c2))  WHEN MIN(rt0.c2) THEN TOTAL(COUNT(rt0.c1)) ELSE ABS(TOTAL(SUM(rt0.c1))) END UNION ALL SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING (NOT (CASE ((MAX(rt0.c2)) BETWEEN (rt0.c2) AND (rt0.c2))  WHEN MIN(rt0.c2) THEN TOTAL(COUNT(rt0.c1)) ELSE ABS(TOTAL(SUM(rt0.c1))) END)) UNION ALL SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING ((CASE ((MAX(rt0.c2)) BETWEEN (rt0.c2) AND (rt0.c2))  WHEN MIN(rt0.c2) THEN TOTAL(COUNT(rt0.c1)) ELSE ABS(TOTAL(SUM(rt0.c1))) END) ISNULL);
SELECT ALL rt0.c0, rt0.c2 FROM rt0;
SELECT rt0.c0, rt0.c2 FROM rt0 WHERE ((rt0.c0 IN ())) UNION ALL SELECT rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT ((rt0.c0 IN ())))) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt0 WHERE ((((rt0.c0 IN ())) ISNULL));
SELECT ALL rt0.c0, rt0.c2 FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((((rt0.c0, rt0.c0, rt0.c2)) NOT BETWEEN ((((rt0.c0) ISNULL), ((rt0.c1)-(rt0.c2)), x'b9f7')) AND ((((rt0.c1)IS(rt0.c2)), rt0.c0 COLLATE RTRIM, ((rt0.c0)*(rt0.c0)))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((((rt0.c0, rt0.c0, rt0.c2)) NOT BETWEEN ((((rt0.c0) ISNULL), ((rt0.c1)-(rt0.c2)), x'b9f7')) AND ((((rt0.c1)IS(rt0.c2)), rt0.c0 COLLATE RTRIM, ((rt0.c0)*(rt0.c0)))))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((((rt0.c0, rt0.c0, rt0.c2)) NOT BETWEEN ((((rt0.c0) ISNULL), ((rt0.c1)-(rt0.c2)), x'b9f7')) AND ((((rt0.c1)IS(rt0.c2)), rt0.c0 COLLATE RTRIM, ((rt0.c0)*(rt0.c0)))))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM rt0 WHERE (((((rt0.c1)&(rt0.c0)))OR(rt0.c0))) GROUP BY rt0.c2, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (((((rt0.c1)&(rt0.c0)))OR(rt0.c0))))) GROUP BY rt0.c2, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c0 FROM rt0 WHERE (((((((rt0.c1)&(rt0.c0)))OR(rt0.c0))) ISNULL)) GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING COUNT(MIN(COUNT(COUNT(rt0.c2)))) UNION ALL SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING (NOT (COUNT(MIN(COUNT(COUNT(rt0.c2)))))) UNION ALL SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING ((COUNT(MIN(COUNT(COUNT(rt0.c2))))) ISNULL);
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE ((('') NOTNULL) COLLATE BINARY) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT ((('') NOTNULL) COLLATE BINARY))) UNION ALL SELECT ALL * FROM rt0 WHERE ((((('') NOTNULL) COLLATE BINARY) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c0 FROM rt0 WHERE ((((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c0)))) NOT BETWEEN (CAST(rt0.c1 AS BLOB)) AND (CAST(rt0.c0 AS TEXT)))) UNION SELECT DISTINCT rt0.c0 FROM rt0 WHERE ((NOT ((((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c0)))) NOT BETWEEN (CAST(rt0.c1 AS BLOB)) AND (CAST(rt0.c0 AS TEXT)))))) UNION SELECT DISTINCT rt0.c0 FROM rt0 WHERE ((((((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c0)))) NOT BETWEEN (CAST(rt0.c1 AS BLOB)) AND (CAST(rt0.c0 AS TEXT)))) ISNULL));
SELECT DISTINCT rt0.c0 FROM rt0;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((((~ (rt0.c1)))+(((((x'')OR(rt0.c0)))OR(rt0.c0))))) GROUP BY rt0.c0, rt0.c2, rt0.c1 UNION SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT ((((~ (rt0.c1)))+(((((x'')OR(rt0.c0)))OR(rt0.c0))))))) GROUP BY rt0.c0, rt0.c2, rt0.c1 UNION SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((((((~ (rt0.c1)))+(((((x'')OR(rt0.c0)))OR(rt0.c0))))) ISNULL)) GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING MAX(UPPER(DISTINCT MAX(MAX(COUNT(rt0.c1))))) UNION ALL SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT (MAX(UPPER(DISTINCT MAX(MAX(COUNT(rt0.c1))))))) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((MAX(UPPER(DISTINCT MAX(MAX(COUNT(rt0.c1)))))) ISNULL);
SELECT ALL SUM(rt0.c2) FROM rt0;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE (((((rt0.c2)<<(rt0.c0)))GLOB(HEX(rt0.c0)))) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (((((rt0.c2)<<(rt0.c0)))GLOB(HEX(rt0.c0)))))) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE (((((((rt0.c2)<<(rt0.c0)))GLOB(HEX(rt0.c0)))) ISNULL));
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (CASE WHEN CAST(rt0.c0 AS INTEGER) THEN NULL END) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (CASE WHEN CAST(rt0.c0 AS INTEGER) THEN NULL END))) UNION SELECT DISTINCT * FROM rt0 WHERE (((CASE WHEN CAST(rt0.c0 AS INTEGER) THEN NULL END) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((((((rt0.c1)<<(rt0.c1))))!=((((((rt0.c1)AND(rt0.c0)))OR(rt0.c0)))))) GROUP BY rt0.c0, rt0.c2, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT ((((((rt0.c1)<<(rt0.c1))))<>((((((rt0.c1)AND(rt0.c0)))OR(rt0.c0)))))))) GROUP BY rt0.c0, rt0.c2, rt0.c1 UNION SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((((((((rt0.c1)<<(rt0.c1))))<>((((((rt0.c1)AND(rt0.c0)))OR(rt0.c0)))))) ISNULL)) GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING CASE WHEN MAX(GROUP_CONCAT(COUNT(*))) THEN CASE rt0.c1  WHEN rt0.c2 THEN SUM(rt0.c2) ELSE rt0.c1 END ELSE COUNT(rt0.c0) END UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT (CASE WHEN MAX(GROUP_CONCAT(COUNT(*))) THEN CASE rt0.c1  WHEN rt0.c2 THEN SUM(rt0.c2) ELSE rt0.c1 END ELSE COUNT(rt0.c0) END)) UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING ((CASE WHEN MAX(GROUP_CONCAT(COUNT(*))) THEN CASE rt0.c1  WHEN rt0.c2 THEN SUM(rt0.c2) ELSE rt0.c1 END ELSE COUNT(rt0.c0) END) ISNULL);
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE (TYPEOF((rt0.c2 IN ()))) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (TYPEOF((rt0.c2 IN ()))))) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE (((TYPEOF((rt0.c2 IN ()))) ISNULL));
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((((rt0.c1)-(rt0.c2)))>>((+ (rt0.c0))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((((rt0.c1)-(rt0.c2)))>>((+ (rt0.c0))))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((((rt0.c1)-(rt0.c2)))>>((+ (rt0.c0))))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 WHERE (((NULL) BETWEEN (CAST(rt0.c2 AS BLOB)) AND (CASE rt0.c2  WHEN 0Xfffffffff66e2167 THEN rt0.c0 END))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0 WHERE ((NOT (((NULL) BETWEEN (CAST(rt0.c2 AS BLOB)) AND (CASE rt0.c2  WHEN 0xfffffffff66e2167 THEN rt0.c0 END))))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0 WHERE (((((NULL) BETWEEN (CAST(rt0.c2 AS BLOB)) AND (CASE rt0.c2  WHEN 0xfffffffff66e2167 THEN rt0.c0 END))) ISNULL)) GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING 0.08886380282121642 UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING (NOT (0.08886380282121642)) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING ((0.08886380282121642) ISNULL);
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING 0.08886380282121642 UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING (NOT (0.08886380282121642)) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING ((0.08886380282121642) ISNULL);
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE (((((rt0.c0 COLLATE BINARY)OR((NOT (rt0.c2)))))AND(((rt0.c2)-(rt0.c0))))) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (((((rt0.c0 COLLATE BINARY)OR((NOT (rt0.c2)))))AND(((rt0.c2)-(rt0.c0))))))) UNION ALL SELECT * FROM rt0 WHERE (((((((rt0.c0 COLLATE BINARY)OR((NOT (rt0.c2)))))AND(((rt0.c2)-(rt0.c0))))) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((((rt0.c2 IN (rt0.c0))) ISNULL)) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((((rt0.c2 IN (rt0.c0))) ISNULL)))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((((rt0.c2 IN (rt0.c0))) ISNULL)) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c1, rt0.c2 FROM rt0 WHERE (((((((((((rt0.c1)<<(rt0.c1)))AND((+ (rt0.c2)))))AND(((rt0.c0)%(rt0.c1)))))AND((((rt0.c0, rt0.c1, rt0.c2, rt0.c0, rt0.c0))!=((rt0.c1, rt0.c0, rt0.c0, rt0.c2, rt0.c2))))))AND(UNLIKELY(DISTINCT rt0.c1)))) GROUP BY rt0.c1, rt0.c2 UNION SELECT rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (((((((((((rt0.c1)<<(rt0.c1)))AND((+ (rt0.c2)))))AND(((rt0.c0)%(rt0.c1)))))AND((((rt0.c0, rt0.c1, rt0.c2, rt0.c0, rt0.c0))<>((rt0.c1, rt0.c0, rt0.c0, rt0.c2, rt0.c2))))))AND(UNLIKELY(DISTINCT rt0.c1)))))) GROUP BY rt0.c1, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c2 FROM rt0 WHERE (((((((((((((rt0.c1)<<(rt0.c1)))AND((+ (rt0.c2)))))AND(((rt0.c0)%(rt0.c1)))))AND((((rt0.c0, rt0.c1, rt0.c2, rt0.c0, rt0.c0))!=((rt0.c1, rt0.c0, rt0.c0, rt0.c2, rt0.c2))))))AND(UNLIKELY(DISTINCT rt0.c1)))) ISNULL)) GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING RTRIM(PRINTF(GROUP_CONCAT(COUNT(rt0.c1)))) UNION ALL SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING (NOT (RTRIM(PRINTF(GROUP_CONCAT(COUNT(rt0.c1)))))) UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING ((RTRIM(PRINTF(GROUP_CONCAT(COUNT(rt0.c1))))) ISNULL);
SELECT rt0.c1, rt0.c0 FROM rt0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 WHERE ((((rt0.c2 IN ()))IS(CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 END))) UNION ALL SELECT ALL rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT ((((rt0.c2 IN ()))IS(CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 END))))) UNION ALL SELECT ALL rt0.c1, rt0.c0 FROM rt0 WHERE ((((((rt0.c2 IN ()))IS(CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 END))) ISNULL));
SELECT rt0.c1, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((- (((rt0.c1) ISNULL)))) UNION SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT ((- (((rt0.c1) ISNULL)))))) UNION SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((((- (((rt0.c1) ISNULL)))) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0;
SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 WHERE (((((rt0.c2))<=((rt0.c0))) IN ())) GROUP BY rt0.c1, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (((((rt0.c2))<=((rt0.c0))) IN ())))) GROUP BY rt0.c1, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c2 FROM rt0 WHERE (((((((rt0.c2))<=((rt0.c0))) IN ())) ISNULL)) GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING MIN(rt0.c1) UNION ALL SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING (NOT (MIN(rt0.c1))) UNION ALL SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING ((MIN(rt0.c1)) ISNULL);
SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING MIN(rt0.c1) UNION ALL SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING (NOT (MIN(rt0.c1))) UNION ALL SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING ((MIN(rt0.c1)) ISNULL);
SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE (COALESCE(DISTINCT ((rt0.c2)%('605360126')), ((((((((rt0.c1)AND(NULL)))OR(rt0.c0)))OR(rt0.c0)))AND(rt0.c1)))) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (COALESCE(DISTINCT ((rt0.c2)%('605360126')), ((((((((rt0.c1)AND(NULL)))OR(rt0.c0)))OR(rt0.c0)))AND(rt0.c1)))))) UNION ALL SELECT * FROM rt0 WHERE (((COALESCE(DISTINCT ((rt0.c2)%('605360126')), ((((((((rt0.c1)AND(NULL)))OR(rt0.c0)))OR(rt0.c0)))AND(rt0.c1)))) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (CASE WHEN (rt0.c0 IN (rt0.c2)) THEN DATETIME(rt0.c0, rt0.c2, rt0.c2) END) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (CASE WHEN (rt0.c0 IN (rt0.c2)) THEN DATETIME(rt0.c0, rt0.c2, rt0.c2) END))) UNION SELECT DISTINCT * FROM rt0 WHERE (((CASE WHEN (rt0.c0 IN (rt0.c2)) THEN DATETIME(rt0.c0, rt0.c2, rt0.c2) END) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 WHERE ((NOT (rt0.c1 COLLATE RTRIM))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0 WHERE ((NOT ((NOT (rt0.c1 COLLATE RTRIM))))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0 WHERE ((((NOT (rt0.c1 COLLATE RTRIM))) ISNULL)) GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING MAX(COUNT(COUNT(COUNT(x'f11a')))) UNION ALL SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (NOT (MAX(COUNT(COUNT(COUNT(x'f11a')))))) UNION ALL SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING ((MAX(COUNT(COUNT(COUNT(x'f11a'))))) ISNULL);
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE (CAST((((rt0.c0))=((rt0.c0))) AS BLOB)) UNION ALL SELECT * FROM rt0 WHERE ((NOT (CAST((((rt0.c0))==((rt0.c0))) AS BLOB)))) UNION ALL SELECT ALL * FROM rt0 WHERE (((CAST((((rt0.c0))=((rt0.c0))) AS BLOB)) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c1 FROM rt0 WHERE (((0xffffffffe0672670) NOT BETWEEN (CAST(rt0.c1 AS NUMERIC)) AND (rt0.c0))) UNION SELECT DISTINCT rt0.c1 FROM rt0 WHERE ((NOT (((0xffffffffe0672670) NOT BETWEEN (CAST(rt0.c1 AS NUMERIC)) AND (rt0.c0))))) UNION SELECT DISTINCT rt0.c1 FROM rt0 WHERE (((((0xffffffffe0672670) NOT BETWEEN (CAST(rt0.c1 AS NUMERIC)) AND (rt0.c0))) ISNULL));
SELECT DISTINCT rt0.c1 FROM rt0;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((- (((rt0.c1)>(rt0.c0))))) GROUP BY rt0.c2, rt0.c0, rt0.c1 UNION SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT ((- (((rt0.c1)>(rt0.c0))))))) GROUP BY rt0.c2, rt0.c0, rt0.c1 UNION SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((((- (((rt0.c1)>(rt0.c0))))) ISNULL)) GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING (rt0.c0 COLLATE BINARY IN ()) UNION ALL SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING (NOT ((rt0.c0 COLLATE BINARY IN ()))) UNION ALL SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING (((rt0.c0 COLLATE BINARY IN ())) ISNULL);
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING (rt0.c0 COLLATE BINARY IN ()) UNION ALL SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING (NOT ((rt0.c0 COLLATE BINARY IN ()))) UNION ALL SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING (((rt0.c0 COLLATE BINARY IN ())) ISNULL);
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c1 FROM rt0;
SELECT ALL rt0.c1 FROM rt0 WHERE (((((rt0.c2) BETWEEN ('1170502778') AND (x''))) BETWEEN (CASE WHEN rt0.c1 THEN rt0.c2 END) AND (rt0.c1 COLLATE BINARY))) UNION ALL SELECT ALL rt0.c1 FROM rt0 WHERE ((NOT (((((rt0.c2) BETWEEN ('1170502778') AND (x''))) BETWEEN (CASE WHEN rt0.c1 THEN rt0.c2 END) AND (rt0.c1 COLLATE BINARY))))) UNION ALL SELECT ALL rt0.c1 FROM rt0 WHERE (((((((rt0.c2) BETWEEN ('1170502778') AND (x''))) BETWEEN (CASE WHEN rt0.c1 THEN rt0.c2 END) AND (rt0.c1 COLLATE BINARY))) ISNULL));
SELECT rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE (0xffffffff8e77c8f3) UNION SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (0xffffffff8e77c8f3))) UNION SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE (((0xffffffff8e77c8f3) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c2, rt0.c0 FROM rt0;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((((((rt0.c0, rt0.c2, rt0.c2, rt0.c2, rt0.c1)) NOT BETWEEN ((rt0.c1, rt0.c1, rt0.c2, rt0.c2, rt0.c2)) AND ((0.2620916982353163, rt0.c0, rt0.c0, rt0.c1, rt0.c0)))) IS FALSE)) GROUP BY rt0.c1, rt0.c0, rt0.c2 UNION SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT ((((((rt0.c0, rt0.c2, rt0.c2, rt0.c2, rt0.c1)) NOT BETWEEN ((rt0.c1, rt0.c1, rt0.c2, rt0.c2, rt0.c2)) AND ((0.2620916982353163, rt0.c0, rt0.c0, rt0.c1, rt0.c0)))) IS FALSE)))) GROUP BY rt0.c1, rt0.c0, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((((((((rt0.c0, rt0.c2, rt0.c2, rt0.c2, rt0.c1)) NOT BETWEEN ((rt0.c1, rt0.c1, rt0.c2, rt0.c2, rt0.c2)) AND ((0.2620916982353163, rt0.c0, rt0.c0, rt0.c1, rt0.c0)))) IS FALSE)) ISNULL)) GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL * FROM rt0;
SELECT * FROM rt0 WHERE (TYPEOF(rt0.c2)) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (TYPEOF(rt0.c2)))) UNION ALL SELECT ALL * FROM rt0 WHERE (((TYPEOF(rt0.c2)) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE (CASE ((rt0.c1)>=(rt0.c2))  WHEN x'' THEN (((rt0.c2)) BETWEEN (('sq')) AND ((rt0.c0))) WHEN ((rt0.c1)>(rt0.c1)) THEN json_array(NULL, rt0.c0) WHEN '-1688250358' THEN ((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0)) ELSE (((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2))) END) UNION SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (CASE ((rt0.c1)>=(rt0.c2))  WHEN x'' THEN (((rt0.c2)) BETWEEN (('sq')) AND ((rt0.c0))) WHEN ((rt0.c1)>(rt0.c1)) THEN json_array(NULL, rt0.c0) WHEN '-1688250358' THEN ((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0)) ELSE (((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2))) END))) UNION SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE (((CASE ((rt0.c1)>=(rt0.c2))  WHEN x'' THEN (((rt0.c2)) BETWEEN (('sq')) AND ((rt0.c0))) WHEN ((rt0.c1)>(rt0.c1)) THEN json_array(NULL, rt0.c0) WHEN '-1688250358' THEN ((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0)) ELSE (((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2))) END) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0 FROM rt0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE (((((((((((((((((rt0.c1)AND(rt0.c1)))OR(rt0.c0)))AND(rt0.c1)))AND(rt0.c0)))AND(rt0.c2)))OR(((((rt0.c2)OR(rt0.c2)))AND(rt0.c0)))))OR(rt0.c1 COLLATE NOCASE)))OR(((-4.26781352E8) NOT BETWEEN (rt0.c1) AND (rt0.c0))))) GROUP BY rt0.c2, rt0.c1, rt0.c0 UNION SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (((((((((((((((((rt0.c1)AND(rt0.c1)))OR(rt0.c0)))AND(rt0.c1)))AND(rt0.c0)))AND(rt0.c2)))OR(((((rt0.c2)OR(rt0.c2)))AND(rt0.c0)))))OR(rt0.c1 COLLATE NOCASE)))OR(((-4.26781352E8) NOT BETWEEN (rt0.c1) AND (rt0.c0))))))) GROUP BY rt0.c2, rt0.c1, rt0.c0 UNION SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE (((((((((((((((((((rt0.c1)AND(rt0.c1)))OR(rt0.c0)))AND(rt0.c1)))AND(rt0.c0)))AND(rt0.c2)))OR(((((rt0.c2)OR(rt0.c2)))AND(rt0.c0)))))OR(rt0.c1 COLLATE NOCASE)))OR(((-4.26781352E8) NOT BETWEEN (rt0.c1) AND (rt0.c0))))) ISNULL)) GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING TRIM(((rt0.c1)OR(MIN(rt0.c0)))) UNION ALL SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING (NOT (TRIM(((rt0.c1)OR(MIN(rt0.c0)))))) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING ((TRIM(((rt0.c1)OR(MIN(rt0.c0))))) ISNULL);
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING TRIM(((rt0.c1)OR(MIN(rt0.c0)))) UNION ALL SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING (NOT (TRIM(((rt0.c1)OR(MIN(rt0.c0)))))) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING ((TRIM(((rt0.c1)OR(MIN(rt0.c0))))) ISNULL);
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE (((CAST(rt0.c1 AS INTEGER)) BETWEEN (CASE rt0.c1  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 END) AND ((((rt0.c0))=((rt0.c2)))))) UNION ALL SELECT * FROM rt0 WHERE ((NOT (((CAST(rt0.c1 AS INTEGER)) BETWEEN (CASE rt0.c1  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 END) AND ((((rt0.c0))==((rt0.c2)))))))) UNION ALL SELECT ALL * FROM rt0 WHERE (((((CAST(rt0.c1 AS INTEGER)) BETWEEN (CASE rt0.c1  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 END) AND ((((rt0.c0))==((rt0.c2)))))) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c1 FROM rt0 WHERE (rt0.c0) UNION SELECT DISTINCT rt0.c1 FROM rt0 WHERE ((NOT (rt0.c0))) UNION SELECT DISTINCT rt0.c1 FROM rt0 WHERE (((rt0.c0) ISNULL));
SELECT DISTINCT rt0.c1 FROM rt0;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 WHERE ('-1214522290') GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0 WHERE ((NOT ('-1214522290'))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0 WHERE ((('-1214522290') ISNULL)) GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING MAX((MIN(TOTAL(GROUP_CONCAT(rt0.c1))) IN ())) UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT (MAX((MIN(TOTAL(GROUP_CONCAT(rt0.c1))) IN ())))) UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING ((MAX((MIN(TOTAL(GROUP_CONCAT(rt0.c1))) IN ()))) ISNULL);
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING MAX((MIN(TOTAL(GROUP_CONCAT(rt0.c1))) IN ())) UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT (MAX((MIN(TOTAL(GROUP_CONCAT(rt0.c1))) IN ())))) UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING ((MAX((MIN(TOTAL(GROUP_CONCAT(rt0.c1))) IN ()))) ISNULL);
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE (CAST(((rt0.c2) IS FALSE) AS INTEGER)) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (CAST(((rt0.c2) IS FALSE) AS INTEGER)))) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE (((CAST(((rt0.c2) IS FALSE) AS INTEGER)) ISNULL));
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((((((rt0.c1)IS('uZ|D')), ((rt0.c0)>=(rt0.c0)), ((NULL) NOT NULL)))>=((rt0.c1, (((rt0.c2, rt0.c2, rt0.c1))<((rt0.c2, rt0.c2, rt0.c2))), ((((rt0.c2)OR(rt0.c0)))OR(rt0.c1)))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((((((rt0.c1)IS('uZ|D')), ((rt0.c0)>=(rt0.c0)), ((NULL) NOT NULL)))>=((rt0.c1, (((rt0.c2, rt0.c2, rt0.c1))<((rt0.c2, rt0.c2, rt0.c2))), ((((rt0.c2)OR(rt0.c0)))OR(rt0.c1)))))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((((((rt0.c1)IS('uZ|D')), ((rt0.c0)>=(rt0.c0)), ((NULL) NOT NULL)))>=((rt0.c1, (((rt0.c2, rt0.c2, rt0.c1))<((rt0.c2, rt0.c2, rt0.c2))), ((((rt0.c2)OR(rt0.c0)))OR(rt0.c1)))))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 WHERE (((+ (rt0.c2)) IN ((- (rt0.c2))))) GROUP BY rt0.c2, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (((+ (rt0.c2)) IN ((- (rt0.c2))))))) GROUP BY rt0.c2, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c1 FROM rt0 WHERE (((((+ (rt0.c2)) IN ((- (rt0.c2))))) ISNULL)) GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING MAX(((MIN(rt0.c2))AND(AVG(COUNT(x''))))) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING (NOT (MAX(((MIN(rt0.c2))AND(AVG(COUNT(x''))))))) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING ((MAX(((MIN(rt0.c2))AND(AVG(COUNT(x'')))))) ISNULL);
SELECT rt0.c1 FROM rt0;
SELECT rt0.c1 FROM rt0 WHERE (CAST(ABS(x'') AS BLOB)) UNION ALL SELECT ALL rt0.c1 FROM rt0 WHERE ((NOT (CAST(ABS(x'') AS BLOB)))) UNION ALL SELECT ALL rt0.c1 FROM rt0 WHERE (((CAST(ABS(x'') AS BLOB)) ISNULL));
SELECT rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c1 FROM rt0 WHERE (CASE (rt0.c2 IN (rt0.c1, rt0.c2))  WHEN (+ (rt0.c0)) THEN rt0.c0 ELSE CAST(rt0.c2 AS REAL) END) UNION SELECT DISTINCT rt0.c1 FROM rt0 WHERE ((NOT (CASE (rt0.c2 IN (rt0.c1, rt0.c2))  WHEN (+ (rt0.c0)) THEN rt0.c0 ELSE CAST(rt0.c2 AS REAL) END))) UNION SELECT DISTINCT rt0.c1 FROM rt0 WHERE (((CASE (rt0.c2 IN (rt0.c1, rt0.c2))  WHEN (+ (rt0.c0)) THEN rt0.c0 ELSE CAST(rt0.c2 AS REAL) END) ISNULL));
SELECT DISTINCT rt0.c1 FROM rt0;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 WHERE ((((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0)))) NOT BETWEEN (((((((((((((rt0.c2)AND(rt0.c0)))AND(rt0.c0)))AND(rt0.c1)))AND(rt0.c0)))AND(rt0.c1)))OR(x'a2e3'))) AND (rt0.c1))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0 WHERE ((NOT ((((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0)))) NOT BETWEEN (((((((((((((rt0.c2)AND(rt0.c0)))AND(rt0.c0)))AND(rt0.c1)))AND(rt0.c0)))AND(rt0.c1)))OR(x'a2e3'))) AND (rt0.c1))))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0 WHERE ((((((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0)))) NOT BETWEEN (((((((((((((rt0.c2)AND(rt0.c0)))AND(rt0.c0)))AND(rt0.c1)))AND(rt0.c0)))AND(rt0.c1)))OR(x'a2e3'))) AND (rt0.c1))) ISNULL)) GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING SUM(SUM(COUNT(*))) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING (NOT (SUM(SUM(COUNT(*))))) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING ((SUM(SUM(COUNT(*)))) ISNULL);
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE (((((rt0.c2) NOTNULL)) IS TRUE)) UNION ALL SELECT * FROM rt0 WHERE ((NOT (((((rt0.c2) NOTNULL)) IS TRUE)))) UNION ALL SELECT * FROM rt0 WHERE (((((((rt0.c2) NOTNULL)) IS TRUE)) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((HEX(DISTINCT 568340856)) NOT BETWEEN (CAST(0xffffffffc85e59df AS TEXT)) AND ((rt0.c0 IN (0.44891798381909664))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((HEX(DISTINCT 568340856)) NOT BETWEEN (CAST(0Xffffffffc85e59df AS TEXT)) AND ((rt0.c0 IN (0.44891798381909664))))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((HEX(DISTINCT 568340856)) NOT BETWEEN (CAST(0Xffffffffc85e59df AS TEXT)) AND ((rt0.c0 IN (0.44891798381909664))))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 WHERE ((- (((rt0.c2)==(rt0.c2))))) GROUP BY rt0.c1, rt0.c2 UNION SELECT rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT ((- (((rt0.c2)==(rt0.c2))))))) GROUP BY rt0.c1, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c2 FROM rt0 WHERE ((((- (((rt0.c2)=(rt0.c2))))) ISNULL)) GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 WHERE ((((((rt0.c2)AND(rt0.c1)))AND(rt0.c1)) IN (rt0.c1 COLLATE BINARY))) UNION ALL SELECT rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT ((((((rt0.c2)AND(rt0.c1)))AND(rt0.c1)) IN (rt0.c1 COLLATE BINARY))))) UNION ALL SELECT rt0.c2, rt0.c0 FROM rt0 WHERE ((((((((rt0.c2)AND(rt0.c1)))AND(rt0.c1)) IN (rt0.c1 COLLATE BINARY))) ISNULL));
SELECT ALL rt0.c2, rt0.c0 FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (CASE WHEN (((rt0.c1))>((rt0.c2))) THEN ((rt0.c0) NOT NULL) END) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (CASE WHEN (((rt0.c1))>((rt0.c2))) THEN ((rt0.c0) NOT NULL) END))) UNION SELECT DISTINCT * FROM rt0 WHERE (((CASE WHEN (((rt0.c1))>((rt0.c2))) THEN ((rt0.c0) NOT NULL) END) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c2 FROM rt0 WHERE ('-58738317') GROUP BY rt0.c0, rt0.c2 UNION SELECT rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT ('-58738317'))) GROUP BY rt0.c0, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c2 FROM rt0 WHERE ((('-58738317') ISNULL)) GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING CAST(COUNT(COUNT(*)) AS BLOB) UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT (CAST(COUNT(COUNT(*)) AS BLOB))) UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING ((CAST(COUNT(COUNT(*)) AS BLOB)) ISNULL);
SELECT ALL MIN((+ (rt0.c1))) FROM rt0;
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE (rt0.c1) UNION ALL SELECT * FROM rt0 WHERE ((NOT (rt0.c1))) UNION ALL SELECT ALL * FROM rt0 WHERE (((rt0.c1) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((0Xffffffffc1713d17)>=(((rt0.c1) IS FALSE)))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((0Xffffffffc1713d17)>=(((rt0.c1) IS FALSE)))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((0Xffffffffc1713d17)>=(((rt0.c1) IS FALSE)))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 WHERE (((((x'') IS TRUE))<=(((rt0.c2)-(rt0.c2))))) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM rt0 WHERE ((NOT (((((x'') IS TRUE))<=(((rt0.c2)-(rt0.c2))))))) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM rt0 WHERE (((((((x'') IS TRUE))<=(((rt0.c2)-(rt0.c2))))) ISNULL)) GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING json_array_length(MIN(MAX(COUNT(rt0.c2)))) UNION ALL SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT (json_array_length(MIN(MAX(COUNT(rt0.c2)))))) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((json_array_length(MIN(MAX(COUNT(rt0.c2))))) ISNULL);
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE ((- (rt0.c2))) UNION ALL SELECT * FROM rt0 WHERE ((NOT ((- (rt0.c2))))) UNION ALL SELECT ALL * FROM rt0 WHERE ((((- (rt0.c2))) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0 WHERE ((- (-911673361))) UNION SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT ((- (-911673361))))) UNION SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0 WHERE ((((- (-911673361))) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0;
