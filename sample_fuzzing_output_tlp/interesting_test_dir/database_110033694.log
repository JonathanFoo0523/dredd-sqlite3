-- Time: 2024/06/10 09:09:10
-- Database: database94
-- Database version: 3.40.0
-- seed value: 110033694
PRAGMA cache_size = 50000; -- 0ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts5(c0, c1); -- 0ms;
CREATE VIRTUAL TABLE vt1 USING fts5(c0 UNINDEXED, c1 UNINDEXED); -- 0ms;
REINDEX; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((~ (0.4144854069018392)))%(((NULL) NOT BETWEEN ('-344587545') AND (NULL)))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=-1636112821'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((TOTAL_CHANGES())OR((('') NOT NULL))))AND('' COLLATE RTRIM)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '-2120533279 sz=-1636112821 unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=-285308199'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(TYPEOF(DISTINCT NULL) AS NUMERIC); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '1367700609 sz=1723226626 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(NULL AS BLOB); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 -285308199 sz=1643856828 unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=1723226626 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '1367700609 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE COALESCE((NULL IN ()), NULL COLLATE NOCASE); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((- (0.27746474794617126)), (- ('L㫡[~%\r')), CASE WHEN '0.4144854069018392' THEN NULL END))<=((CAST(NULL AS INTEGER), x'2a3c' COLLATE NOCASE, CASE WHEN 0.27746474794617126 THEN 0xffffffffeb7602e7 ELSE 0.3205845668416407 END))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((ABS(0.8953853971578662))+((NOT ('1643856828')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '-34172968 -1599497554 sz=977533914 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=1777140248 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((((0.5710775378499766 COLLATE NOCASE)AND(CAST(')0F<!諙?' AS BLOB))))OR(x'7fac26bf')))OR((NOT (x'c52a')))))AND((- (0X69ed0218)))))AND(CASE x''  WHEN -3.4172968E7 THEN 0xffffffffe02efddf WHEN '904814249' THEN -1006939191 WHEN '' THEN x'' WHEN NULL THEN NULL WHEN NULL THEN 0.5751309479554 ELSE '1444248718' END)))OR((- ('36')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((+ (0.6342233211748826)))-('')); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=1777140248'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '1367700609 168819667'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=168819667 unordered'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (~ (((0Xffffffff819b3ae1)IS('1655133271')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=1538491504 unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=673757699 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 0 sz=977533914 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(NULL AS INTEGER))<(((x'c171') NOT BETWEEN (x'') AND (0.5879147594289736)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=-1497244290'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((- (-5.33791265E8)))%(((x'7fa9') IS FALSE))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('d <MN?' IN ())))>(('0.5751309479554'))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=2025938788 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=167970242 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 'ny'; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE TRIM(DISTINCT (- (1777140248))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NULL COLLATE RTRIM IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=1383514540 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=-44280372'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((json_remove(NULL, NULL)) BETWEEN ((- (NULL))) AND (RTRIM(x''))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=-695666540 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=-1006939191 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 sz=1723226626 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 sz=168819667 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=-344587545 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((x'')>>('-0.0')) AS BLOB); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (TYPEOF(x''))); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '-1997246264 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '2025938788 sz=-1055415379 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=1627113302 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '-448927774 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=-1684654418'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '2066157930 0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT ((- (977533914)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=1643856828 unordered'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE LAST_INSERT_ROWID(); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=1367700609 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=1777140248 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(x'd758' AS REAL)) BETWEEN ((((x'')) BETWEEN (('')) AND (('pOX o/')))) AND ('673757699' COLLATE RTRIM)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=1762642409 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'') NOT NULL) IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((+ (-4.48927774E8)) IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (x'35ef')); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(('0.5710775378499766' IN ()) AS INTEGER); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE LIKE(('36' IN ('-1055415379')), (0.5927794249823001 IN (0.02938336380809048, ''))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('1367700609') ISNULL) COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NOT ('NpZ.J'))) NOT BETWEEN (NULL) AND ((0.08056412590121009 IN (0.07863881433521336)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-344587545 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'' IN ())) BETWEEN (CAST('1367700609' AS BLOB)) AND (0xffffffffcb72ffc0 COLLATE NOCASE)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((CASE 0.5935482945390699  WHEN '36' THEN x'' WHEN x'' THEN x'' WHEN NULL THEN 'A(H<' ELSE NULL END))>=((CAST('npz.j' AS NUMERIC)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '0 0 unordered'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=-228185759'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '-881655872 0 sz=1444248718 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'') NOTNULL))|(((('1383514540'))<=((NULL))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT ((('-948723754')*('^Y|G')))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '-2120533279 sz=1051638970'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-1074388517 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=1726299193 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=1890617634 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL)>((('1679809035')/(0.8953853971578662)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=1456770915 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1557394962 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('1438972791')) NOT BETWEEN ((((0.7775557452806254)IS(0.02938336380809048)))) AND ((((-1038120704) NOT BETWEEN (x'') AND (NULL))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-979278923 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=-448927774'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '-458951837 168819667 sz=-1006939191 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((NULL) NOT BETWEEN ('') AND (1.456770915E9)) AS BLOB); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '2 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '239242266'; -- 0ms;
DELETE FROM sqlite_stat1 WHERE TYPEOF((('0.5710775378499766')LIKE(2064646301))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1497244290 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((0.06273744594134467)&(NULL)) AS BLOB); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '0 0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 sz=1514561824'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '615922673 sz=1777140248'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=-1176943330 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE LOWER(((0.7542324076871998) BETWEEN ('ny') AND ('-979278923'))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '1012385368 sz=749710271 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE NULL COLLATE BINARY  WHEN ((0xffffffffbd8ff2db) NOT BETWEEN ('cp>솬JGt<') AND (x'')) THEN ((NULL)>(NULL)) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=1346658168 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '-540922760 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN NULL COLLATE RTRIM THEN ((((-1684654418)AND('1367700609')))AND('168819667')) ELSE '8G*˧ 7㸌' COLLATE BINARY END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-967437315 sz=-1055415379'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=-680034530'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL, 0xffffffffeb7602e7, NULL)) BETWEEN ((0.9437004709049727, -4.4280372E7, '-34172968')) AND (('', x'9155a375', 'ny'))) COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1 WHERE x'4f35'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=-448927774'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '0 1243843197 unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=124643008 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CASE NULL  WHEN x'' THEN '2017014292' WHEN x'' THEN x'dfdf' WHEN x'7440' THEN 0.08056412590121009 END AS TEXT); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NOT (x''))) IS TRUE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-1317315480 sz=2017014292'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'' IN ())))<((((0X3eaebcba) NOT NULL)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '4 0 sz=-1114639653'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 'rTh?'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CASE NULL  WHEN 615922673 THEN x'0efe' ELSE 0xffffffffb946de4c END IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '616648215 sz=-1080222310'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN -1750858219 THEN NULL END)<=(((0Xfffffffffcfc44ca) ISNULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=-1095732302 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '0.08056412590121009'; -- 0ms;
DELETE FROM sqlite_stat1 WHERE 'KR辜M\r<9'; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(NULL AS BLOB); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '1643856828 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) NOT NULL)) IS FALSE); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('1486942694')|(x'')))>>(((((0.12698869722449946)AND(NULL)))OR(0Xffffffffb17b5c68)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '0 -1860664667 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((((NULL)) BETWEEN ((NULL)) AND ((0Xffffffffffffffff))) AS INTEGER); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('%%') NOT BETWEEN (x'') AND (')))B_<')) IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.5710775378499766) NOT BETWEEN (NULL) AND ('!Moz'))) ISNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '889328301'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('-1317315480')) BETWEEN ((((x'da2e29d8') NOT NULL))) AND ((((0.05426347309006996) NOT BETWEEN ('') AND (0.7542324076871998))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=466301489 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '345910683 -1095732302 sz=139787111 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-1080222310 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('894226005') BETWEEN (0.34849344827919004) AND ('')) IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(NULL AS TEXT) COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=10843440'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=-1641925840 unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0xffffffffc86d6599) BETWEEN (1045270026) AND (1.777140248E9))) NOT BETWEEN (json_array_length(0.00724553554777696, '[H')) AND (NULLIF(NULL, 0.10834408672832518))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(TIME('0.3205845668416407', NULL, 0X2f86b5e6) AS REAL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=1243843197 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '-1186537908 sz=1723226626'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=1786024859'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL) ISNULL) COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=-1038120704 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((((json_object(NULL, 0.805567036344553))AND(NULL COLLATE RTRIM)))OR(0X33ae3e2c)))AND(NULL)))OR(((((x'')OR('0.5751309479554')))AND(0.6342233211748826)))))OR((NOT (x'')))))AND((NULL IN ()))); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (CASE WHEN 0xffffffff9e7ae64b THEN x'a24390a7' END)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL COLLATE BINARY COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-1754901978 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('%!')*('-aE?')))GLOB((((0.7838715319493889, '', '%!'))>=((x'', 0.7775557452806254, x''))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'83d0')+(NULL)) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(-1.856925796E9 AS TEXT); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '0 sz=-1721565688 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=59501578 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '-44280372'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=-2050182425 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=1793288861 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- ((- (0.5157262506563409)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-1197368653 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL)-(1726299193)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (((0xfffffffff4bbf2a5) NOTNULL))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=-2001053332 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '1546116574 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' unordered'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=-1109905130'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=-1557394962 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((NULL) IS FALSE)  WHEN (~ (0.2893741597846269)) THEN (('-784437998') NOT NULL) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1981221712 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE LAST_INSERT_ROWID(); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 unordered'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE CASE (+ (1148447))  WHEN (('601490915') IS TRUE) THEN (((0.3268085541788406))<>((x''))) WHEN ((NULL) NOTNULL) THEN (7.49710271E8 IN ()) WHEN ((NULL) IS TRUE) THEN ((((NULL)AND(NULL)))OR(x'')) ELSE CASE WHEN '889328301' THEN '0.05426347309006996' END END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '-417466798 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '-726337683 -458951837 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=-1614892499 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL) IS FALSE); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '-1605094085 sz=1082229391 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('Xh', NULL, '', 0X7a67f0ea, x'53df')) NOT BETWEEN ((0.7838715319493889, NULL, '-1947524080', '-533791265', x'')) AND (('830001024', x'', 0.02938336380809048, 1793288861, '-1981221712'))))>=(NULLIF(x'', '-683780320'))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=1884344582 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=-979278923 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'47fc')<<(1.05163897E9)) COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '-1109905130 sz=1314306105'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((x'' IN ()))AND(CAST('-1981221712' AS BLOB))))AND(NULL)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-1600888454 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((NULL)>(0.9149112784275987))))<=((CAST(0.10834408672832518 AS TEXT)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'55f0')) BETWEEN ((NULL COLLATE BINARY)) AND ((((NULL)<=(0xffffffffe49e3023))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 sz=894226005'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '1450655244 sz=-485798173 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('fX'))==(('-979278923')))) IS FALSE); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((0.3376615642304137))>((0.9699633385675316)))) BETWEEN (((NULL)LIKE('1486942694'))) AND (CAST(NULL AS TEXT))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=1248103658'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '889328301 -1865525654 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((((0.03294233024255355, NULL, NULL, NULL, '>o/biP')) BETWEEN ((NULL, '?c', 'V涐}㱥', NULL, 'US호h9]')) AND ((0x7b27116a, x'9264', x'', 0.8960401855134882, x''))))AND((~ (0.41070718512873405)))))OR(((NULL)+(x'')))))OR(((0xd4512a7) NOT BETWEEN (NULL) AND (x'')))))AND(x'bb5d')); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((('0%S|', x'c2b8f7e7', '-784437998')) NOT BETWEEN (('鱾Y', 0.1044157797467562, x'')) AND (('', NULL, '682137671'))) AS NUMERIC); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE CASE WHEN 'Uu' THEN NULL END  WHEN (('T谚qP') NOT BETWEEN ('') AND ('')) THEN NULL ELSE (- (0x51874495)) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 sz=-34172968 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=-881655872 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL COLLATE BINARY)*((NULL IN ()))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((((0.8354667184055868)AND(x'')))OR(NULL)))OR(807824891)))OR(0.23771339380686718)))OR((x'' IN (x'')))))AND(CAST(x'0a6b' AS REAL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=-1104769603 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((-9.32354663E8) IS TRUE)  WHEN CASE '1243843197'  WHEN 'lfBoP''N*掵' THEN NULL ELSE 0.9476798011080535 END THEN ((0.10138508429637605) BETWEEN ('') AND (0.8489544956744476)) WHEN ('466301489' IN (NULL)) THEN (('*')>(0.944896746860222)) WHEN CAST(x'' AS TEXT) THEN ((-1257542395)|(NULL)) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=-784437998 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=-1153242251 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '474528145 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((((-1.31731548E9)AND('-1186537908')))OR(x'')) AS NUMERIC); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=-2013422738 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (('-1497244290')AND('-967437315')) THEN 0.12762575910101992 COLLATE NOCASE ELSE (((NULL))<>(('1439018433'))) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((('1346658168')|(NULL)) AS INTEGER); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((LTRIM(0.27435503883962464)) IS TRUE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '1030518628 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=844269445 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE json_extract(json_extract(-458951837, '-726337683'), (('-34172968') NOTNULL)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=-2098474114 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((UPPER(DISTINCT 0xfffffffffaf5fc97)) IS TRUE); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=1885328329 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1289376563 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=-379209238 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '1643856828 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN NULL THEN x'' ELSE x'eb37' END COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '2 sz=242718900'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' unordered'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE UPPER((~ ('1643856828'))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '2 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 2017014292 sz=601490915'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=-2001053332'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '1330729723 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((0.3873619020976473) BETWEEN (889328301) AND ('kd')) THEN 0.9660873972479749 ELSE NULL END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '797357542 sz=-587425065'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '0 sz=823334815 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 sz=821988037 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-1557394962 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '4 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (CASE WHEN '1525126817' THEN NULL ELSE '0.03294233024255355' END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=-417466798 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((('O')<>(NULL)) AS BLOB); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '0'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((NULL IN ('d <mn?'))) NOT BETWEEN (0.15511773924675487) AND (((('M]NBX-7'))<=((0.35294395511828514))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '-2106074452 -948723754 sz=182204000 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=2020676558 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((- ('')))|((~ (NULL)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '0 sz=-1038120704 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '0 sz=-517193089 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ABS(DISTINCT CASE NULL  WHEN '1e500' THEN NULL ELSE 'n' END); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=1012385368 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=516997256 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '1883048967 sz=867057196'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=1546116574'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=601490915 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN CAST('889328301' AS INTEGER) THEN ((-1897345058) IS FALSE) ELSE ((((x'e265')AND(x'')))OR(x'33d2')) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(('43' IN (2.064646301E9)) AS NUMERIC); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '4 sz=-1846254577'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NULL COLLATE NOCASE IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE '&骳'  WHEN NULL THEN NULL ELSE '-104429910' END) BETWEEN (CAST('1231494524' AS BLOB)) AND ((~ (0.7678413035704309)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((-1.006939191E9) NOTNULL) IN ()); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 0 sz=1383351103'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 sz=-189009243 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '740638760 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.6625652324235802; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=628602777 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('') BETWEEN (NULL) AND (x'')))!=((('US호H9]')IS(0Xffffffff9962fe08)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- ((- (x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-109896442 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=-714855820 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('1514561824') NOT BETWEEN (NULL) AND (x''))) BETWEEN (((NULL)%(''))) AND (((NULL) NOT BETWEEN (NULL) AND (-1643273714)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=-2053907018'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=1777140248 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('WNbH')||('1324675172')) COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '2 0 sz=-1211042298 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=-557639569 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=493848715 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ ((~ (0xffffffff9cbe4945)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=-1369619926'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ''); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=-1586274838'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=1367700609 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '1148447 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '-1588425817 0 sz=-1574602770 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '3%CQm(檝''b'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '1621505671 sz=-967437315 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '-265488931 2 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST('sI8dZ' AS BLOB); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '631671959 sz=-1371359522'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL) IS TRUE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=345910683 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '437391805 sz=1514561824 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'')-(-1.08022231E9)) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=-1133811562 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ('' COLLATE NOCASE IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '2 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=323886451 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '0 0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=139787111 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) NOT NULL))>>((((((((('')OR(NULL)))OR(0.4934956300543447)))AND('8G*˧ 7㸌')))OR(0Xffffffffbada79d9)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((1.084344E7)AND(NULL)))<>(CASE NULL  WHEN 0x5ec6be89 THEN '1012385368' ELSE 0.5784002076388292 END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '1407650599 2'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((NOT ('W4~')))OR(CAST('2116062141' AS REAL))))AND(0.6650731879226609)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ ((((('-228166458')OR(x'')))OR('0.07863881433521336')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(TYPEOF(NULL) AS TEXT); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE x'a7ea' COLLATE RTRIM; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=16836592 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '2 sz=-533791265 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '-1325849846 0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE LIKELY(((((0.659304335112451)AND(x'')))OR(0x22979706))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.34084779604666327)-((~ (x'')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '0 -468787087 sz=-50576182 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE UNICODE(('0.3268085541788406' IN (NULL))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- ((('0.5784002076388292')-(x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=-1975968343 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((((('8G*˧ 7㸌')IS(NULL)))AND('pX')))AND(TYPEOF(471574864))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.5953569476810446; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '2 0 sz=-337175726 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '0 0 sz=1853325300 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=1852740236 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((-1.10990513E9))<=((NULL)))) BETWEEN (x'' COLLATE BINARY) AND (((((NULL)OR(0.1372030874147785)))AND(0xffffffffaf062451)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((x''))<((0.49151430447670763)))))<=((((0X149e2d9b) ISNULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '2028801786 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-228185759 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((0x61fa0a85)/('894226005')))AND((NULL IN ()))))OR(((x'') NOTNULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE TRIM(((NULL)IS NOT('BmM?i')), (+ (x''))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=2019579349 unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=-2055640512 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 sz=2060817390 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '0 0 unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=269481377'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((NULL)!=(1.643856828E9))  WHEN (NULL IN ()) THEN ((((x'5851')OR(x'')))AND('')) ELSE (('-662507639')/(0.6625652324235802)) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=889328301 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- ((+ (0Xffffffffd6c141f6)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL, 'GKmW.ojC媛', x'')) NOT BETWEEN (((((0.6588071004807055)) NOT BETWEEN ((NULL)) AND ((0.8779330832404288))), ((((((((NULL)OR('1871501114')))AND('-1038120704')))AND(NULL)))AND(x'9608')), LIKELIHOOD(DISTINCT NULL, 0.1747887787395106))) AND (((('-1733873249') IS TRUE), (('616648215') NOT BETWEEN ('j03[.Jl m') AND (NULL)), (((NULL))!=(('L㫡[~%\r')))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '0 374714376 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((')]+Rq') NOT BETWEEN ('''T퉻H+') AND (0.5294077327459961)) COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=466301489 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=1667471341 noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=-979278923 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE 0.00724553554777696  WHEN -3.4172968E7 THEN '1883303944' ELSE x'' END)==(((NULL) BETWEEN (NULL) AND (NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '74990275 sz=-417466798'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((x'' IN ('')) AS BLOB); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((x'ed91'))>(('-507979760')))) BETWEEN (((('1810960283')) BETWEEN ((NULL)) AND ((0.5568511686918786)))) AND ((('-ae?')/(0.9519304463048222)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '1519086297 379071950 sz=268828171'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-224079788 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((0.3376615642304137) BETWEEN (-1.64192584E9) AND (0.7254485099110842))  WHEN 0Xffffffffeada8330 COLLATE NOCASE THEN ((0.8381003756823366) NOT NULL) ELSE ((('mn v', 2027072698, NULL)) BETWEEN ((x'', x'', x'')) AND (('-1186537908', 0xffffffff93232120, NULL))) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=632750601 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-541448862'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- ('-755804289')); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=1149140543 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.10834408672832518)!=(0.5294077327459961)) IN (NULL COLLATE RTRIM)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=58511484 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=-44280372 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-1080222310 0 sz=-1860664667 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0Xffffffffe71df652)>=(0.44283823415530577))) NOTNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=-1083163911 noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-1238001920 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '272505199 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((- (0.9781707231770401)), (((((((((((('0.49151430447670763')AND('0.4934956300543447')))OR(x'ae796206')))AND(NULL)))AND(0.10138508429637605)))OR('退x')))OR(1596478181)), ('1762642409' IN ())))<=((((('1276270226', NULL, 'sN')) NOT BETWEEN ((x'', 0.8865358545671232, NULL)) AND ((NULL, 1432888614, NULL))), 0.6584454649687157 COLLATE RTRIM, 1.450655244E9))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '2 sz=-1750858219 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-1254779452 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=1771221771 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'')>=(0.4459756350349785))) NOT NULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=2097592083 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0xffffffff99004973 IN ()))LIKE((((x'')) BETWEEN (('䅐}}?}\r<E^')) AND ((NULL))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((NULL IN ()) AS BLOB); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '-533586404 1546116574 sz=-448927774 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (((x'', NULL, 0.13353964005787033)) NOT BETWEEN ((',Z8FR\r', '867057196', 732532545)) AND ((NULL, '', NULL))) THEN ((((NULL)OR(0.8011996915799403)))OR(615922673)) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 sz=-1986774619 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=1890617634 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE -1856925796; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'2ee9b169')&('530070071')) IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ('&骳' IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=1833536392 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE NULL  WHEN 0.4090912765103474 THEN 0.6562791429951544 WHEN NULL THEN '' WHEN x'' THEN 0.5134891020675727 ELSE 0.05321752732603535 END) BETWEEN (CAST(x'' AS INTEGER)) AND (((NULL)IS NOT(x'')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((UPPER(DISTINCT '-1323189760'))AND(((((NULL)AND(NULL)))OR(63945931)))))OR((+ (0x4a238a7d)))))OR((~ (NULL)))))AND((('-34172968') NOT BETWEEN (NULL) AND (0.06621520696766203)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=97489436'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE x'1099'; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '0 0 sz=239242266 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('-50576182')) BETWEEN ((0.9955409497095247)) AND ((NULL))))AND(((x'')==('t戆(D')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((SQLITE_COMPILEOPTION_USED(NULL)) NOT BETWEEN (CAST('616648215' AS INTEGER)) AND (((x'') NOTNULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=1663151926 unordered'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '-1074388517 -1285515304 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '-1015997456 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-1400029709 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=168819667'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 -477584576'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(-731496481 AS TEXT) COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'e8e30924' IN ())) ISNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '0 sz=-726337683 noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-511749063 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE COALESCE(DISTINCT 0.12837587523007932 COLLATE BINARY, (+ (x'9ebc'))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 1704503891 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '2 sz=2064646301 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '2 sz=-1530667398 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=-1958227969 unordered'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((+ (0.683979910501028))) BETWEEN ((- ('867057196'))) AND ((~ ('*M')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'b2f5')AND(((x'')<=(NULL)))))OR(((NULL) BETWEEN (-1.095732302E9) AND ('')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((0.5294077327459961)=(NULL)) COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((0.5879147594289736) NOT BETWEEN ('ek') AND (NULL)) AS BLOB); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE UNLIKELY(DISTINCT ((-1.31731548E9) BETWEEN ('L1㚮Y俅') AND (0.7594816742132999))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-2067052020 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-189009243'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-50576182 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '0 sz=-469339077'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((-7.84437998E8)>>('}	i]%Y9')))!=((('') BETWEEN (0.8011996915799403) AND (0.4948140459209579)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '0 sz=-1821132466'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=-993727083'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '889328301 1456770915 sz=1921590121 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '-1549875451 sz=799289247'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((0.8315942785702036)||(0x3eaebcba)))AND((((0.32318898991726086, 0.683979910501028, '-325401597', '', '9335930'))<((NULL, '_nњly㤕?', NULL, 0.5647783677202727, NULL))))))OR(((0.9265654511762859) BETWEEN (x'') AND (0.38507961290542647)))))OR((+ (x'')))))OR((((0.005223706565052111))<=((''))))); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((('-189009243') IS TRUE)) BETWEEN (((0Xffffffff911882a5)<(-1.856925796E9))) AND (((('-458951837', NULL, NULL)) NOT BETWEEN (('', x'f088', x'6e74')) AND (('-2003259745', '-1721565688', 0.24399419352590135))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '1746666850 -719203905 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '0 0 sz=-406197314 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((NULL, 0.4354333490326169, 0.4273385256441459))<=(('', 'n', x''))))<<(CASE WHEN 'ㄖ' THEN '' END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=1546116574 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((TRIM(DISTINCT NULL))OR((('601490915') BETWEEN (x'245ed632') AND ('1679809035')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=578427823 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '-1137505726 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '1777140248 0 sz=1881464661 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((IFNULL('/!', -1.684654418E9)) IS FALSE); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=1456467456 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '1585039310'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1127778503 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN 0Xffffffffa32c09ee THEN NULL END)<<(((('-1114639653'))!=((-5.4092276E8))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL IN ())) IS FALSE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '4 sz=1383514540 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT ('-1708192518')); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.8249032670323806) BETWEEN (NULL) AND (NULL)) COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1 WHERE '-1497244290'; -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.27805960374460426; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'')<(0.5183445271019915)))*((~ (x'')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('-1168821550') BETWEEN (0.1487108066247267) AND (x''))) BETWEEN (((x'b71b') NOTNULL)) AND ((((('')OR(0.34084779604666327)))AND(0.9608632787401431)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-344587545 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ ('TRUE')) COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=-1176943330 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE TYPEOF(1.890617634E9); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=1456770915 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '2 sz=-635946395 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.764291982413741) BETWEEN (NULL) AND (0xffffffffbeb073b2))) NOT BETWEEN (((x'4bbb')GLOB(0.8924994618406986))) AND ((((x'd9a3'))<=((NULL))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE json_remove(CAST(NULL AS REAL), (('zxTQa') IS TRUE)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '-634161530 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ ((- (-2124944722)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '0 0'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (CASE WHEN 0.5024287924087099 THEN '' WHEN '-544256762' THEN NULL WHEN -262007322 THEN '1148447' END IN (CAST(x'' AS INTEGER), (('615922673')>('')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ ((']#+' IN ()))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-1987726624'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (((((((((((((x'')OR(x'')))AND('749710271')))AND(x'')))AND('-458951837')))AND(NULL)))OR(x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CAST('mn v' AS REAL) IN (CASE x'5a15'  WHEN NULL THEN NULL END)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)<=(0xffffffffbf1de6a9)))<((('&F') NOT BETWEEN ('-695666540') AND (x'')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 0'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((0.6732132704672482 IN ()))/(((829553183)!=('>>')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((- (NULL)) IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CASE 'De'  WHEN NULL THEN x'b5cc' ELSE 0.7233727774521076 END AS REAL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'f09e' IN ()))GLOB(CASE 1856320458  WHEN '-398441556' THEN '-1109905130' END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ''); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '0 0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1982579544 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=168819667'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-1796974237 sz=-967437315 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '-1860664667 2 sz=-297200849 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '-1038720171 sz=-967437315'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE SQLITE_COMPILEOPTION_GET(((0xffffffffffffffff) NOT NULL)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '-979278923 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 -1074388517 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('.')IS(2.017014292E9))))=(((('-1847268350') NOT BETWEEN (NULL) AND (x''))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '1777140248 sz=601490915 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL COLLATE NOCASE)GLOB('')); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 1938226396 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.8480975222597257)OR(x'')))<>(((((NULL)OR(0Xffffffffecb03fdf)))OR('''T퉻H+')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=-1464418648 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=1627113302 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (0.4653822524247797 COLLATE BINARY IN ((+ ('168819667')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'')) NOT BETWEEN (((('0.8865358545671232') IS TRUE))) AND ((((0X350212ad) NOT NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-1129940091 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=2031696960'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)||('g\r'))) BETWEEN ((('-501912263') IS TRUE)) AND (CASE WHEN x'' THEN '' WHEN NULL THEN '-2050182425' WHEN '1383514540' THEN NULL END)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((('-1892726607')*('1588234475')) AS NUMERIC); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '1649796329 sz=-50576182 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(x'' AS INTEGER); -- 0ms;
DELETE FROM sqlite_stat1 WHERE LIKELY(DISTINCT ((NULL) ISNULL)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=615922673 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)OR(0Xffffffff876f6ead)))>=((('-493287986')!=(NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.33628788835351686)IS NOT((((''))<=((0Xffffffffffffffff))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((-2120533279)IS NOT(NULL)) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=-819294326 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (0.35294395511828514 IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=1640025487'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '1733228610 -1860664667 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'') IS TRUE); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.315379942295932) IS TRUE) COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('') NOTNULL))OR(((x'') NOT BETWEEN (NULL) AND (1.655133271E9)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=-1194537663 unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=-511621998'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'')<(NULL COLLATE BINARY)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.665923007575369) IS TRUE) IN (CAST(x'' AS REAL))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL COLLATE NOCASE)OR(((-1060867859)AND(0.8438970243067017)))))AND((~ (313866743)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '1012385368 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.6866535316038818 IN (x'd283')) IN ('1697096603' COLLATE BINARY, (((x'', 0.6865551365121245, 'mn v')) NOT BETWEEN ((0.9891366833137079, 935554465, NULL)) AND ((',z8fr\r', x'86fe', '/!'))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=1512242768 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0xffffffffd4b4f76d; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=-1419500927 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (((0.10138508429637605)==(x'13d4')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=2134250320'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((1684885050)IS(NULL COLLATE NOCASE)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0Xfffffffface4c690; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((~ ('0.8011996915799403'))) NOT BETWEEN (((NULL)IS(0.16545236500973926))) AND ((- ('TQs')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '-458951837 sz=1009412506 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.9437004709049727)&(CASE NULL  WHEN NULL THEN NULL ELSE NULL END)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((((((((NULL)OR('~HF\')))OR('鎛E')))OR('2003316805')))OR(0.38245956455879226)) AS INTEGER); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '642271282'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((json_remove(NULL, '-876770969', '-50576182', NULL))<((((('316081066')AND(NULL)))AND(0.6235201755401968)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (HEX(NULL))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (((x'')) BETWEEN ((x'')) AND (('139787111'))) THEN ((x'')|(x'')) WHEN (+ ('<F#N')) THEN CASE WHEN x'4735' THEN NULL END WHEN (+ (NULL)) THEN CAST(0.8607588904586393 AS REAL) ELSE ((('>z7{㸌'))<>(('{}'))) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN CASE 0.053232085845818844  WHEN x'' THEN NULL WHEN 0.2615087634426405 THEN NULL WHEN 0xffffffffff313ee0 THEN '-2120533279' ELSE NULL END THEN -801669233 COLLATE RTRIM END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((-1.856925796E9) IS TRUE) AS NUMERIC); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.2856324904236167; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '-219798651 sz=466301489 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((0.4045941001770075)) NOT BETWEEN ((0.039762816804846945)) AND (('')))) ISNULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('CI1ua(A')||(0X3d7a8c2e)))*(json_extract(x'', x'', '-940912531', x'3c7a4944'))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=-354689336 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-2118332843 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=-1981221712'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ''); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(x'' AS TEXT)) NOT NULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '-885224242 sz=1148447 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=1148303082 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=-195801026 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '0 1762642409 sz=1051638970 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '-1957653739 sz=-504905919 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-1134614276'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((TOTAL_CHANGES())OR('-1721565688')))AND((('548192176')=(x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=-1004445304'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=2043132486 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'')LIKE(x'')); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=123534259 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- ((('168819667') IS TRUE))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=-199778396 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((0.39419115237388014)OR(((((x'bdb3')OR('ieg	MZ')))AND('1684153669')))))AND(((x'')+(0.256759380712657)))))AND(CAST(-967437315 AS NUMERIC))))OR(LIKELIHOOD(x'', 0.5464870356995415))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE LIKE((NULL IN ('')), ((((0.0018287034557442627)AND('{AY')))OR(NULL))); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=168819667'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '-540922760 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '2 2 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '345910683 2 sz=-1150105591'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- ((('-1319669493')IS(x'd726e016')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(0.659304335112451 AS NUMERIC))-(((((x'')AND('')))AND(NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '1554815622 sz=1579730989 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=-1641925840 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((('￀[')OR((((NULL)) BETWEEN ((-1647342549)) AND ((NULL))))))AND(x'1e33' COLLATE RTRIM)))AND((NOT (0.9519304463048222)))))OR(UPPER(0.5244627988841548))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1318610717 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CAST(0.00724553554777696 AS INTEGER) IN (CASE NULL  WHEN '' THEN 0.6676969003188011 ELSE NULL END, NULL COLLATE RTRIM)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '-2001053332 sz=604395662 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1540245289 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((NULL)) NOT BETWEEN ((0.5588172410201189)) AND (('\bUjP~~f谚'))))%(CASE 0.8313612363319655  WHEN 'e ' THEN x'' ELSE NULL END)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.23771339380686718) BETWEEN ('-1860664667') AND (x'3441')) COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=2126903314 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=124249246'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-979278923 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '0 -2048062399 sz=-1006939191'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (+ ('1786024859'))  WHEN GLOB(x'', NULL) THEN CASE 0.49965260293989167  WHEN '-680034530' THEN 0.6391253948462491 END WHEN CASE WHEN 0.3992720302786137 THEN x'' WHEN x'' THEN NULL WHEN 0.7542324076871998 THEN '-932354663' WHEN 0.8458930861376901 THEN '' WHEN 0.9512591745013134 THEN 'H>\r6G^G(\' ELSE '889328301' END THEN ((((x'540f')AND(446596911)))OR('-754689192')) WHEN CASE 0.7112868862750186  WHEN 1.444248718E9 THEN -932354663 WHEN 'vX' THEN NULL WHEN 0.20617146553506116 THEN NULL ELSE 'VP' END THEN (- (0.8385107568462234)) WHEN ((-504839580)>(',')) THEN ((((x'a142')AND(x'')))AND(1.012385368E9)) WHEN (~ (-1.038120704E9)) THEN (+ ('')) ELSE '1910977281' END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CAST('	8*J	2' AS NUMERIC) IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE json_quote(((((((((x'')OR(x'a367')))OR('&F')))OR(0.7889772077170831)))AND(x'84d9'))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '-967437315 sz=533309538 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '-360881133 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
DELETE FROM sqlite_stat1 WHERE '-540922760'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', '2 sz=-1981221712 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '-979278923'; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=49535446'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE rtreenode(0.17362782432989055, 0.1487108066247267)  WHEN CAST(x'd602' AS REAL) THEN (((('0.1372030874147785')AND(x'')))OR('M!8AB.ul_')) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (((((0.31398429538451145)AND(NULL)))AND('0.5294077327459961')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '69472466 sz=-948723754 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('1367700609' IN ()))%(((NULL) BETWEEN (x'a192') AND (0.38108504440663504)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=1081924730 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '-1038038869 noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' sz=-2057219407'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-1754901978 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '2 sz=1645134302'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=-44280372 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '59501578 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) NOT BETWEEN (0.9293872930590409) AND (0.3258058323424069)))>>((('') BETWEEN (NULL) AND ('rSCA.	t6')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' noskipscan'); -- 0ms;
UPDATE OR ROLLBACK vt1 SET c1=NULL WHERE ((((vt1.c1))!=((0.9078754143497765))) IN ()); -- 0ms;
INSERT OR IGNORE INTO vt1(c0, c1) VALUES (466301489, x''); -- 0ms;
PRAGMA stats; -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree(c0, c1, c2, c3, c4, +c5 INT ); -- 0ms;
SELECT rtreecheck('rt0'); -- 0ms;
UPDATE OR ABORT rt0 SET c4=0.7756336914030582, c4=NULL WHERE ((((((((((rt0.c3)||(rt0.c2)))AND(0Xfffffffff3ac01ad)))AND(((rt0.c0)<=(rt0.c2)))))AND(((rt0.c4) NOT BETWEEN (rt0.c1) AND (rt0.c4)))))AND((rt0.c4 IN ()))); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('automerge', 7); -- 0ms;
INSERT OR IGNORE INTO rt0(c0, c1, c4, c2, c3) VALUES (NULL, NULL, '1343600103', x'', (((('-1080222310' COLLATE BINARY)OR((('0.3376615642304137') BETWEEN (NULL) AND ('5^龄')))))OR(((NULL)GLOB('240608166'))))); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '42673'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR REPLACE INTO vt0(c1) VALUES (x''), ('Ew'), (x''); -- 1ms;
INSERT INTO vt1(vt1, rank) VALUES('pgsz', '11684'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=12'); -- 1ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
INSERT OR FAIL INTO vt0(c1) VALUES (0.4459206921887633); -- 0ms;
UPDATE OR IGNORE vt0 SET c1=0.6849674415816812 WHERE ((((((((((vt0.c1)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(NULL)))>=(CASE WHEN vt0.c0 THEN vt0.c0 END)); -- 0ms;
CREATE TEMPORARY VIEW  IF NOT EXISTS v0(c0) AS SELECT ((((0x4a2db304)OR(rt0.c1))) ISNULL) FROM vt0, vt1, rt0 WHERE (CAST('-1856925796' COLLATE RTRIM AS REAL)) ORDER BY ((((vt1.c0, rt0.c3, vt1.c0))<((rt0.c3, rt0.c1, vt0.c1))) IN (((((((((rt0.c5)OR(vt1.c0)))AND(rt0.c2)))AND(vt1.c1)))AND(rt0.c0)), ((rt0.c4)-(rt0.c5)))); -- 0ms;
VACUUM; -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 2053842032); -- 0ms;
UPDATE OR IGNORE vt1 SET (c0)=('-2129220711'); -- 1ms;
PRAGMA temp.journal_size_limit; -- 0ms;
ANALYZE; -- 0ms;
PRAGMA journal_size_limit; -- 0ms;
INSERT OR IGNORE INTO vt1(c1, c0) VALUES (NULL, 0x38bec0a); -- 0ms;
COMMIT TRANSACTION; -- 0ms;
INSERT OR ROLLBACK INTO vt1 VALUES ('867057196', NULL); -- 0ms;
VACUUM main; -- 2ms;
INSERT OR FAIL INTO rt0(c1, c3) VALUES ('', '	'); -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES (0.44283823415530577, NULL); -- 0ms;
PRAGMA short_column_names; -- 0ms;
INSERT OR IGNORE INTO rt0(c0, c2, c1) VALUES (x'', 0.5174574662994972, '-228185759'), (1.786024859E9, x'9dca', 0.5085485011012085), (x'', NULL, x'aed2'); -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA main.cache_size = 0; -- 0ms;
INSERT OR ROLLBACK INTO vt0(c1) VALUES (x''); -- 1ms;
INSERT OR IGNORE INTO vt0(c0, c1) VALUES (NULL, 'a,w**'); -- 1ms;
PRAGMA main.soft_heap_limit = 2210955514599228718; -- 0ms;
INSERT OR IGNORE INTO vt1(c1, c0) VALUES (0.8925259159191721, 0.3919454091535448); -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
INSERT OR ROLLBACK INTO rt0(c4, c2, c3) VALUES (x'', 0.16793760095350208, 'pmJQ'), (x'', '', x'acb8'), (0.23128204272825292, '-1080222310', NULL); -- 0ms;
INSERT OR REPLACE INTO vt1(c1) VALUES (x''); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' unordered noskipscan'); -- 0ms;
PRAGMA defer_foreign_keys = true; -- 0ms;
CREATE VIRTUAL TABLE vt2 USING fts4(c0, prefix=350); -- 1ms;
UPDATE OR IGNORE vt2 SET (c0)=(x'') WHERE ((QUOTE(x'9e51')) NOT BETWEEN (x'') AND (((vt2.c0)|(vt2.c0)))); -- 0ms;
PRAGMA temp.secure_delete = false; -- 0ms;
INSERT OR FAIL INTO rt0(c4, c5, c2) VALUES (0.7186461342300415, 0.5747115807675068, 0.4899510854653417), (0.1570488144002934, x'', 0x759e2a0), (x'8a1a', x'd84d', 0.21865446053724868); -- 0ms;
UPDATE OR IGNORE vt1 SET c1='짩dJ,8_!J', c0=x'bdd1' WHERE ((vt1.c0) NOT BETWEEN (vt1.c1 COLLATE BINARY) AND (((((((((((((vt1.c1)OR(vt1.c1)))OR(vt1.c1)))OR(vt1.c1)))AND(vt1.c1)))OR(vt1.c1)))OR(vt1.c1)))); -- 1ms;
BEGIN  TRANSACTION; -- 0ms;
END; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT ALL * FROM vt0, vt1, v0, rt0, vt2;
SELECT ALL * FROM vt0, vt1, v0, rt0, vt2 WHERE ((+ (((rt0.c0)>>(vt2.c0))))) UNION ALL SELECT ALL * FROM vt0, vt1, v0, rt0, vt2 WHERE ((NOT ((+ (((rt0.c0)>>(vt2.c0))))))) UNION ALL SELECT ALL * FROM vt0, vt1, v0, rt0, vt2 WHERE ((((+ (((rt0.c0)>>(vt2.c0))))) ISNULL));
SELECT ALL * FROM vt0, vt1, v0, rt0, vt2;
SELECT DISTINCT * FROM vt1, vt0;
SELECT DISTINCT * FROM vt1, vt0 WHERE (TRIM(DISTINCT vt1.c0) COLLATE RTRIM) UNION SELECT DISTINCT * FROM vt1, vt0 WHERE ((NOT (TRIM(DISTINCT vt1.c0) COLLATE RTRIM))) UNION SELECT DISTINCT * FROM vt1, vt0 WHERE (((TRIM(DISTINCT vt1.c0) COLLATE RTRIM) ISNULL));
SELECT DISTINCT * FROM vt1, vt0;
SELECT vt2.c0, rt0.c0, rt0.c1, v0.c0, rt0.c4, vt0.c0, rt0.c5, vt0.c1, rt0.c2, rt0.c3 FROM vt2, rt0, v0, vt0 GROUP BY vt2.c0, rt0.c0, rt0.c1, v0.c0, rt0.c4, vt0.c0, rt0.c5, vt0.c1, rt0.c2, rt0.c3;
SELECT vt2.c0, rt0.c0, rt0.c1, v0.c0, rt0.c4, vt0.c0, rt0.c5, vt0.c1, rt0.c2, rt0.c3 FROM vt2, rt0, v0, vt0 WHERE ((((((v0.c0)%(vt0.c1))))<=(((((vt0.c1)) BETWEEN ((rt0.c5)) AND ((vt0.c1))))))) GROUP BY vt2.c0, rt0.c0, rt0.c1, v0.c0, rt0.c4, vt0.c0, rt0.c5, vt0.c1, rt0.c2, rt0.c3 UNION SELECT vt2.c0, rt0.c0, rt0.c1, v0.c0, rt0.c4, vt0.c0, rt0.c5, vt0.c1, rt0.c2, rt0.c3 FROM vt2, rt0, v0, vt0 WHERE ((NOT ((((((v0.c0)%(vt0.c1))))<=(((((vt0.c1)) BETWEEN ((rt0.c5)) AND ((vt0.c1))))))))) GROUP BY vt2.c0, rt0.c0, rt0.c1, v0.c0, rt0.c4, vt0.c0, rt0.c5, vt0.c1, rt0.c2, rt0.c3 UNION SELECT ALL vt2.c0, rt0.c0, rt0.c1, v0.c0, rt0.c4, vt0.c0, rt0.c5, vt0.c1, rt0.c2, rt0.c3 FROM vt2, rt0, v0, vt0 WHERE ((((((((v0.c0)%(vt0.c1))))<=(((((vt0.c1)) BETWEEN ((rt0.c5)) AND ((vt0.c1))))))) ISNULL)) GROUP BY vt2.c0, rt0.c0, rt0.c1, v0.c0, rt0.c4, vt0.c0, rt0.c5, vt0.c1, rt0.c2, rt0.c3;
SELECT vt2.c0, rt0.c0, rt0.c1, v0.c0, rt0.c4, vt0.c0, rt0.c5, vt0.c1, rt0.c2, rt0.c3 FROM vt2, rt0, v0, vt0 GROUP BY vt2.c0, rt0.c0, rt0.c1, v0.c0, rt0.c4, vt0.c0, rt0.c5, vt0.c1, rt0.c2, rt0.c3;
SELECT rt0.c1, rt0.c4, rt0.c5, vt1.c1, vt1.c0, vt2.c0, rt0.c2 FROM rt0, vt1, v0, vt2 GROUP BY rt0.c1, rt0.c4, rt0.c5, vt1.c1, vt1.c0, vt2.c0, rt0.c2;
SELECT rt0.c1, rt0.c4, rt0.c5, vt1.c1, vt1.c0, vt2.c0, rt0.c2 FROM rt0, vt1, v0, vt2 GROUP BY rt0.c1, rt0.c4, rt0.c5, vt1.c1, vt1.c0, vt2.c0, rt0.c2 HAVING TOTAL(TOTAL(TOTAL(''))) UNION ALL SELECT rt0.c1, rt0.c4, rt0.c5, vt1.c1, vt1.c0, vt2.c0, rt0.c2 FROM rt0, vt1, v0, vt2 GROUP BY rt0.c1, rt0.c4, rt0.c5, vt1.c1, vt1.c0, vt2.c0, rt0.c2 HAVING (NOT (TOTAL(TOTAL(TOTAL(''))))) UNION ALL SELECT ALL rt0.c1, rt0.c4, rt0.c5, vt1.c1, vt1.c0, vt2.c0, rt0.c2 FROM rt0, vt1, v0, vt2 GROUP BY rt0.c1, rt0.c4, rt0.c5, vt1.c1, vt1.c0, vt2.c0, rt0.c2 HAVING ((TOTAL(TOTAL(TOTAL('')))) ISNULL);
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE (LIKELY('R[')) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (LIKELY('R[')))) UNION ALL SELECT * FROM rt0 WHERE (((LIKELY('R[')) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT * FROM v0, vt0, vt2, rt0, vt1;
SELECT DISTINCT * FROM v0, vt0, vt2, rt0, vt1 WHERE ((~ (((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c4))))) UNION SELECT DISTINCT * FROM v0, vt0, vt2, rt0, vt1 WHERE ((NOT ((~ (((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c4))))))) UNION SELECT DISTINCT * FROM v0, vt0, vt2, rt0, vt1 WHERE ((((~ (((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c4))))) ISNULL));
SELECT DISTINCT * FROM v0, vt0, vt2, rt0, vt1;
SELECT ALL vt1.c0, v0.c0 FROM vt2, v0, vt1 GROUP BY vt1.c0, v0.c0;
SELECT ALL vt1.c0, v0.c0 FROM vt2, v0, vt1 WHERE (((((((((CASE WHEN v0.c0 THEN vt1.c0 END)OR(vt1.c0)))AND(vt1.c1)))AND(CAST(0.5804365172102783 AS REAL))))AND(CAST(v0.c0 AS REAL)))) GROUP BY vt1.c0, v0.c0 UNION SELECT ALL vt1.c0, v0.c0 FROM vt2, v0, vt1 WHERE ((NOT (((((((((CASE WHEN v0.c0 THEN vt1.c0 END)OR(vt1.c0)))AND(vt1.c1)))AND(CAST(0.5804365172102783 AS REAL))))AND(CAST(v0.c0 AS REAL)))))) GROUP BY vt1.c0, v0.c0 UNION SELECT vt1.c0, v0.c0 FROM vt2, v0, vt1 WHERE (((((((((((CASE WHEN v0.c0 THEN vt1.c0 END)OR(vt1.c0)))AND(vt1.c1)))AND(CAST(0.5804365172102783 AS REAL))))AND(CAST(v0.c0 AS REAL)))) ISNULL)) GROUP BY vt1.c0, v0.c0;
SELECT ALL vt1.c0, v0.c0 FROM vt2, v0, vt1 GROUP BY vt1.c0, v0.c0;
SELECT ALL vt2.c0, rt0.c0, rt0.c5, rt0.c2, vt0.c0, rt0.c4, rt0.c1 FROM rt0, vt0, vt2 GROUP BY vt2.c0, rt0.c0, rt0.c5, rt0.c2, vt0.c0, rt0.c4, rt0.c1;
SELECT ALL vt2.c0, rt0.c0, rt0.c5, rt0.c2, vt0.c0, rt0.c4, rt0.c1 FROM rt0, vt0, vt2 GROUP BY vt2.c0, rt0.c0, rt0.c5, rt0.c2, vt0.c0, rt0.c4, rt0.c1 HAVING COUNT(COUNT(*)) UNION ALL SELECT ALL vt2.c0, rt0.c0, rt0.c5, rt0.c2, vt0.c0, rt0.c4, rt0.c1 FROM rt0, vt0, vt2 GROUP BY vt2.c0, rt0.c0, rt0.c5, rt0.c2, vt0.c0, rt0.c4, rt0.c1 HAVING (NOT (COUNT(COUNT(*)))) UNION ALL SELECT ALL vt2.c0, rt0.c0, rt0.c5, rt0.c2, vt0.c0, rt0.c4, rt0.c1 FROM rt0, vt0, vt2 GROUP BY vt2.c0, rt0.c0, rt0.c5, rt0.c2, vt0.c0, rt0.c4, rt0.c1 HAVING ((COUNT(COUNT(*))) ISNULL);
SELECT SUM((+ (CASE WHEN rt0.c5 THEN vt1.c0 ELSE vt1.c1 END))) FROM vt2, vt1, v0, rt0;
SELECT rt0.c2, rt0.c4 FROM rt0, vt0;
SELECT rt0.c2, rt0.c4 FROM rt0, vt0 WHERE (((vt0.c1 IN ()) IN ())) UNION ALL SELECT ALL rt0.c2, rt0.c4 FROM rt0, vt0 WHERE ((NOT (((vt0.c1 IN ()) IN ())))) UNION ALL SELECT rt0.c2, rt0.c4 FROM rt0, vt0 WHERE (((((vt0.c1 IN ()) IN ())) ISNULL));
SELECT rt0.c2, rt0.c4 FROM rt0, vt0;
SELECT DISTINCT * FROM vt2, vt0;
SELECT DISTINCT * FROM vt2, vt0 WHERE (vt0.c1) UNION SELECT DISTINCT * FROM vt2, vt0 WHERE ((NOT (vt0.c1))) UNION SELECT DISTINCT * FROM vt2, vt0 WHERE (((vt0.c1) ISNULL));
SELECT DISTINCT * FROM vt2, vt0;
SELECT ALL rt0.c1, rt0.c5, rt0.c2, vt1.c1, rt0.c0, vt0.c1, rt0.c3, vt2.c0 FROM vt2, vt0, rt0, vt1 GROUP BY rt0.c1, rt0.c5, rt0.c2, vt1.c1, rt0.c0, vt0.c1, rt0.c3, vt2.c0;
SELECT ALL rt0.c1, rt0.c5, rt0.c2, vt1.c1, rt0.c0, vt0.c1, rt0.c3, vt2.c0 FROM vt2, vt0, rt0, vt1 WHERE (((((vt1.c0)>=(rt0.c1))) ISNULL)) GROUP BY rt0.c1, rt0.c5, rt0.c2, vt1.c1, rt0.c0, vt0.c1, rt0.c3, vt2.c0 UNION SELECT rt0.c1, rt0.c5, rt0.c2, vt1.c1, rt0.c0, vt0.c1, rt0.c3, vt2.c0 FROM vt2, vt0, rt0, vt1 WHERE ((NOT (((((vt1.c0)>=(rt0.c1))) ISNULL)))) GROUP BY rt0.c1, rt0.c5, rt0.c2, vt1.c1, rt0.c0, vt0.c1, rt0.c3, vt2.c0 UNION SELECT rt0.c1, rt0.c5, rt0.c2, vt1.c1, rt0.c0, vt0.c1, rt0.c3, vt2.c0 FROM vt2, vt0, rt0, vt1 WHERE (((((((vt1.c0)>=(rt0.c1))) ISNULL)) ISNULL)) GROUP BY rt0.c1, rt0.c5, rt0.c2, vt1.c1, rt0.c0, vt0.c1, rt0.c3, vt2.c0;
SELECT ALL rt0.c1, rt0.c5, rt0.c2, vt1.c1, rt0.c0, vt0.c1, rt0.c3, vt2.c0 FROM vt2, vt0, rt0, vt1 GROUP BY rt0.c1, rt0.c5, rt0.c2, vt1.c1, rt0.c0, vt0.c1, rt0.c3, vt2.c0;
SELECT v0.c0, rt0.c2, rt0.c1, rt0.c4, vt1.c0, vt0.c1 FROM rt0, vt0 CROSS JOIN v0 ON CASE ((((((((rt0.c4)AND(rt0.c5)))OR(rt0.c2)))OR(rt0.c1)))OR(vt1.c1))  WHEN json_valid(vt1.c1) THEN 0.9727909973035792 ELSE ((rt0.c1)&(rt0.c2)) END INNER JOIN vt1 ON ((vt0.c1) NOT BETWEEN (0.683979910501028) AND (rt0.c5)) COLLATE RTRIM GROUP BY v0.c0, rt0.c2, rt0.c1, rt0.c4, vt1.c0, vt0.c1;
SELECT v0.c0, rt0.c2, rt0.c1, rt0.c4, vt1.c0, vt0.c1 FROM rt0, vt0 CROSS JOIN v0 ON CASE ((((((((rt0.c4)AND(rt0.c5)))OR(rt0.c2)))OR(rt0.c1)))OR(vt1.c1))  WHEN json_valid(vt1.c1) THEN 0.9727909973035792 ELSE ((rt0.c1)&(rt0.c2)) END INNER JOIN vt1 ON ((vt0.c1) NOT BETWEEN (0.683979910501028) AND (rt0.c5)) COLLATE RTRIM GROUP BY v0.c0, rt0.c2, rt0.c1, rt0.c4, vt1.c0, vt0.c1 HAVING ((COUNT(MAX('ny')))<<((((TOTAL(COUNT(*)), vt0.c1, COUNT(*)))>=((vt0.c1, GROUP_CONCAT(SUM(AVG(AVG(vt0.c1)))), rt0.c1))))) UNION ALL SELECT v0.c0, rt0.c2, rt0.c1, rt0.c4, vt1.c0, vt0.c1 FROM rt0, vt0 CROSS JOIN v0 ON CASE ((((((((rt0.c4)AND(rt0.c5)))OR(rt0.c2)))OR(rt0.c1)))OR(vt1.c1))  WHEN json_valid(vt1.c1) THEN 0.9727909973035792 ELSE ((rt0.c1)&(rt0.c2)) END INNER JOIN vt1 ON ((vt0.c1) NOT BETWEEN (0.683979910501028) AND (rt0.c5)) COLLATE RTRIM GROUP BY v0.c0, rt0.c2, rt0.c1, rt0.c4, vt1.c0, vt0.c1 HAVING (NOT (((COUNT(MAX('ny')))<<((((TOTAL(COUNT(*)), vt0.c1, COUNT(*)))>=((vt0.c1, GROUP_CONCAT(SUM(AVG(AVG(vt0.c1)))), rt0.c1))))))) UNION ALL SELECT ALL v0.c0, rt0.c2, rt0.c1, rt0.c4, vt1.c0, vt0.c1 FROM rt0, vt0 CROSS JOIN v0 ON CASE ((((((((rt0.c4)AND(rt0.c5)))OR(rt0.c2)))OR(rt0.c1)))OR(vt1.c1))  WHEN json_valid(vt1.c1) THEN 0.9727909973035792 ELSE ((rt0.c1)&(rt0.c2)) END INNER JOIN vt1 ON ((vt0.c1) NOT BETWEEN (0.683979910501028) AND (rt0.c5)) COLLATE RTRIM GROUP BY v0.c0, rt0.c2, rt0.c1, rt0.c4, vt1.c0, vt0.c1 HAVING ((((COUNT(MAX('ny')))<<((((TOTAL(COUNT(*)), vt0.c1, COUNT(*)))>=((vt0.c1, GROUP_CONCAT(SUM(AVG(AVG(vt0.c1)))), rt0.c1)))))) ISNULL);
SELECT ALL rt0.c2, vt1.c1 FROM rt0, vt1;
SELECT rt0.c2, vt1.c1 FROM rt0, vt1 WHERE (((((rt0.c0) NOTNULL))<(((vt1.c1) BETWEEN (rt0.c3) AND (rt0.c4))))) UNION ALL SELECT rt0.c2, vt1.c1 FROM rt0, vt1 WHERE ((NOT (((((rt0.c0) NOTNULL))<(((vt1.c1) BETWEEN (rt0.c3) AND (rt0.c4))))))) UNION ALL SELECT rt0.c2, vt1.c1 FROM rt0, vt1 WHERE (((((((rt0.c0) NOTNULL))<(((vt1.c1) BETWEEN (rt0.c3) AND (rt0.c4))))) ISNULL));
SELECT ALL rt0.c2, vt1.c1 FROM rt0, vt1;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (v0.c0) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (v0.c0))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((v0.c0) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT ALL rt0.c1, rt0.c4, vt1.c1, vt0.c1, vt0.c0, rt0.c3, vt2.c0 FROM v0, rt0, vt1, vt2, vt0 GROUP BY rt0.c1, rt0.c4, vt1.c1, vt0.c1, vt0.c0, rt0.c3, vt2.c0;
SELECT rt0.c1, rt0.c4, vt1.c1, vt0.c1, vt0.c0, rt0.c3, vt2.c0 FROM v0, rt0, vt1, vt2, vt0 WHERE ((vt2.c0 IN ())) GROUP BY rt0.c1, rt0.c4, vt1.c1, vt0.c1, vt0.c0, rt0.c3, vt2.c0 UNION SELECT rt0.c1, rt0.c4, vt1.c1, vt0.c1, vt0.c0, rt0.c3, vt2.c0 FROM v0, rt0, vt1, vt2, vt0 WHERE ((NOT ((vt2.c0 IN ())))) GROUP BY rt0.c1, rt0.c4, vt1.c1, vt0.c1, vt0.c0, rt0.c3, vt2.c0 UNION SELECT rt0.c1, rt0.c4, vt1.c1, vt0.c1, vt0.c0, rt0.c3, vt2.c0 FROM v0, rt0, vt1, vt2, vt0 WHERE ((((vt2.c0 IN ())) ISNULL)) GROUP BY rt0.c1, rt0.c4, vt1.c1, vt0.c1, vt0.c0, rt0.c3, vt2.c0;
SELECT ALL rt0.c1, rt0.c4, vt1.c1, vt0.c1, vt0.c0, rt0.c3, vt2.c0 FROM v0, rt0, vt1, vt2, vt0 GROUP BY rt0.c1, rt0.c4, vt1.c1, vt0.c1, vt0.c0, rt0.c3, vt2.c0;
SELECT rt0.c3, rt0.c4, rt0.c5, rt0.c0 FROM rt0 GROUP BY rt0.c3, rt0.c4, rt0.c5, rt0.c0;
SELECT rt0.c3, rt0.c4, rt0.c5, rt0.c0 FROM rt0 GROUP BY rt0.c3, rt0.c4, rt0.c5, rt0.c0 HAVING (TOTAL(rt0.c5) IN ()) UNION ALL SELECT rt0.c3, rt0.c4, rt0.c5, rt0.c0 FROM rt0 GROUP BY rt0.c3, rt0.c4, rt0.c5, rt0.c0 HAVING (NOT ((TOTAL(rt0.c5) IN ()))) UNION ALL SELECT rt0.c3, rt0.c4, rt0.c5, rt0.c0 FROM rt0 GROUP BY rt0.c3, rt0.c4, rt0.c5, rt0.c0 HAVING (((TOTAL(rt0.c5) IN ())) ISNULL);
SELECT rt0.c3, rt0.c4, rt0.c5, rt0.c0 FROM rt0 GROUP BY rt0.c3, rt0.c4, rt0.c5, rt0.c0;
SELECT rt0.c3, rt0.c4, rt0.c5, rt0.c0 FROM rt0 GROUP BY rt0.c3, rt0.c4, rt0.c5, rt0.c0 HAVING (TOTAL(rt0.c5) IN ()) UNION ALL SELECT rt0.c3, rt0.c4, rt0.c5, rt0.c0 FROM rt0 GROUP BY rt0.c3, rt0.c4, rt0.c5, rt0.c0 HAVING (NOT ((TOTAL(rt0.c5) IN ()))) UNION ALL SELECT rt0.c3, rt0.c4, rt0.c5, rt0.c0 FROM rt0 GROUP BY rt0.c3, rt0.c4, rt0.c5, rt0.c0 HAVING (((TOTAL(rt0.c5) IN ())) ISNULL);
SELECT rt0.c3, rt0.c4, rt0.c5, rt0.c0 FROM rt0 GROUP BY rt0.c3, rt0.c4, rt0.c5, rt0.c0;
SELECT ALL * FROM vt0, v0, rt0 RIGHT OUTER JOIN vt1 ON (((rt0.c2 COLLATE BINARY))<=((((v0.c0) NOT BETWEEN (vt1.c1) AND (rt0.c1))))) RIGHT OUTER JOIN vt2 ON ((((rt0.c5)AND(CAST(rt0.c2 AS REAL))))OR(((((vt1.c1)OR(vt0.c0)))OR(rt0.c1))));
SELECT ALL * FROM vt0, v0, rt0 RIGHT OUTER JOIN vt1 ON (((rt0.c2 COLLATE BINARY))<=((((v0.c0) NOT BETWEEN (vt1.c1) AND (rt0.c1))))) RIGHT OUTER JOIN vt2 ON ((((rt0.c5)AND(CAST(rt0.c2 AS REAL))))OR(((((vt1.c1)OR(vt0.c0)))OR(rt0.c1)))) WHERE (v0.c0) UNION ALL SELECT * FROM vt0, v0, rt0 RIGHT OUTER JOIN vt1 ON (((rt0.c2 COLLATE BINARY))<=((((v0.c0) NOT BETWEEN (vt1.c1) AND (rt0.c1))))) RIGHT OUTER JOIN vt2 ON ((((rt0.c5)AND(CAST(rt0.c2 AS REAL))))OR(((((vt1.c1)OR(vt0.c0)))OR(rt0.c1)))) WHERE ((NOT (v0.c0))) UNION ALL SELECT * FROM vt0, v0, rt0 RIGHT OUTER JOIN vt1 ON (((rt0.c2 COLLATE BINARY))<=((((v0.c0) NOT BETWEEN (vt1.c1) AND (rt0.c1))))) RIGHT OUTER JOIN vt2 ON ((((rt0.c5)AND(CAST(rt0.c2 AS REAL))))OR(((((vt1.c1)OR(vt0.c0)))OR(rt0.c1)))) WHERE (((v0.c0) ISNULL));
SELECT ALL * FROM vt0, v0, rt0 RIGHT OUTER JOIN vt1 ON (((rt0.c2 COLLATE BINARY))<=((((v0.c0) NOT BETWEEN (vt1.c1) AND (rt0.c1))))) RIGHT OUTER JOIN vt2 ON ((((rt0.c5)AND(CAST(rt0.c2 AS REAL))))OR(((((vt1.c1)OR(vt0.c0)))OR(rt0.c1))));
SELECT DISTINCT vt0.c1 FROM vt0;
SELECT DISTINCT vt0.c1 FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((CAST(vt0.c0 AS TEXT))) AND (((- (vt0.c1)))))) UNION SELECT DISTINCT vt0.c1 FROM vt0 WHERE ((NOT ((((vt0.c0)) NOT BETWEEN ((CAST(vt0.c0 AS TEXT))) AND (((- (vt0.c1)))))))) UNION SELECT DISTINCT vt0.c1 FROM vt0 WHERE ((((((vt0.c0)) NOT BETWEEN ((CAST(vt0.c0 AS TEXT))) AND (((- (vt0.c1)))))) ISNULL));
SELECT DISTINCT vt0.c1 FROM vt0;
SELECT ALL rt0.c4, v0.c0, rt0.c3, rt0.c0, rt0.c2, vt0.c0, vt1.c0, rt0.c1, vt1.c1, vt0.c1, rt0.c5 FROM v0, rt0, vt0, vt1 GROUP BY rt0.c4, v0.c0, rt0.c3, rt0.c0, rt0.c2, vt0.c0, vt1.c0, rt0.c1, vt1.c1, vt0.c1, rt0.c5;
SELECT ALL rt0.c4, v0.c0, rt0.c3, rt0.c0, rt0.c2, vt0.c0, vt1.c0, rt0.c1, vt1.c1, vt0.c1, rt0.c5 FROM v0, rt0, vt0, vt1 WHERE (rt0.c5) GROUP BY rt0.c4, v0.c0, rt0.c3, rt0.c0, rt0.c2, vt0.c0, vt1.c0, rt0.c1, vt1.c1, vt0.c1, rt0.c5 UNION SELECT ALL rt0.c4, v0.c0, rt0.c3, rt0.c0, rt0.c2, vt0.c0, vt1.c0, rt0.c1, vt1.c1, vt0.c1, rt0.c5 FROM v0, rt0, vt0, vt1 WHERE ((NOT (rt0.c5))) GROUP BY rt0.c4, v0.c0, rt0.c3, rt0.c0, rt0.c2, vt0.c0, vt1.c0, rt0.c1, vt1.c1, vt0.c1, rt0.c5 UNION SELECT ALL rt0.c4, v0.c0, rt0.c3, rt0.c0, rt0.c2, vt0.c0, vt1.c0, rt0.c1, vt1.c1, vt0.c1, rt0.c5 FROM v0, rt0, vt0, vt1 WHERE (((rt0.c5) ISNULL)) GROUP BY rt0.c4, v0.c0, rt0.c3, rt0.c0, rt0.c2, vt0.c0, vt1.c0, rt0.c1, vt1.c1, vt0.c1, rt0.c5;
SELECT ALL rt0.c4, v0.c0, rt0.c3, rt0.c0, rt0.c2, vt0.c0, vt1.c0, rt0.c1, vt1.c1, vt0.c1, rt0.c5 FROM v0, rt0, vt0, vt1 GROUP BY rt0.c4, v0.c0, rt0.c3, rt0.c0, rt0.c2, vt0.c0, vt1.c0, rt0.c1, vt1.c1, vt0.c1, rt0.c5;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((CAST(MAX(MAX(SUM(MAX(TOTAL(v0.c0))))) AS TEXT)) BETWEEN (SUM(GROUP_CONCAT(TOTAL(v0.c0)))) AND (COUNT(x''))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (((CAST(MAX(MAX(SUM(MAX(TOTAL(v0.c0))))) AS TEXT)) BETWEEN (SUM(GROUP_CONCAT(TOTAL(v0.c0)))) AND (COUNT(x''))))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((((CAST(MAX(MAX(SUM(MAX(TOTAL(v0.c0))))) AS TEXT)) BETWEEN (SUM(GROUP_CONCAT(TOTAL(v0.c0)))) AND (COUNT(x'')))) ISNULL);
SELECT ALL rt0.c2, rt0.c0, rt0.c5, vt0.c0, rt0.c1, rt0.c3, vt0.c1, rt0.c4 FROM rt0 CROSS JOIN vt0 ON ((rt0.c5 COLLATE RTRIM)AND(rt0.c2));
SELECT ALL rt0.c2, rt0.c0, rt0.c5, vt0.c0, rt0.c1, rt0.c3, vt0.c1, rt0.c4 FROM rt0 CROSS JOIN vt0 ON ((rt0.c5 COLLATE RTRIM)AND(rt0.c2)) WHERE ((((vt0.c1) BETWEEN (rt0.c1) AND (vt0.c1)) IN (PRINTF(rt0.c4)))) UNION ALL SELECT rt0.c2, rt0.c0, rt0.c5, vt0.c0, rt0.c1, rt0.c3, vt0.c1, rt0.c4 FROM rt0 CROSS JOIN vt0 ON ((rt0.c5 COLLATE RTRIM)AND(rt0.c2)) WHERE ((NOT ((((vt0.c1) BETWEEN (rt0.c1) AND (vt0.c1)) IN (PRINTF(rt0.c4)))))) UNION ALL SELECT rt0.c2, rt0.c0, rt0.c5, vt0.c0, rt0.c1, rt0.c3, vt0.c1, rt0.c4 FROM rt0 CROSS JOIN vt0 ON ((rt0.c5 COLLATE RTRIM)AND(rt0.c2)) WHERE ((((((vt0.c1) BETWEEN (rt0.c1) AND (vt0.c1)) IN (PRINTF(rt0.c4)))) ISNULL));
SELECT ALL rt0.c2, rt0.c0, rt0.c5, vt0.c0, rt0.c1, rt0.c3, vt0.c1, rt0.c4 FROM rt0 CROSS JOIN vt0 ON ((rt0.c5 COLLATE RTRIM)AND(rt0.c2));
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (((((v0.c0)>=('-944316008')))GLOB((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))))) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (((((v0.c0)>=('-944316008')))GLOB((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))))))) UNION SELECT DISTINCT * FROM v0 WHERE (((((((v0.c0)>=('-944316008')))GLOB((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))))) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT rt0.c4, rt0.c3, rt0.c2, vt1.c0, vt0.c0, rt0.c5, rt0.c1, v0.c0, vt0.c1, vt2.c0, vt1.c1, rt0.c0 FROM vt2, vt1, v0, vt0 CROSS JOIN rt0 ON 0.2893741597846269 GROUP BY rt0.c4, rt0.c3, rt0.c2, vt1.c0, vt0.c0, rt0.c5, rt0.c1, v0.c0, vt0.c1, vt2.c0, vt1.c1, rt0.c0;
SELECT ALL rt0.c4, rt0.c3, rt0.c2, vt1.c0, vt0.c0, rt0.c5, rt0.c1, v0.c0, vt0.c1, vt2.c0, vt1.c1, rt0.c0 FROM vt2, vt1, v0, vt0 CROSS JOIN rt0 ON 0.2893741597846269 WHERE (((((vt1.c0) NOTNULL)) IS TRUE)) GROUP BY rt0.c4, rt0.c3, rt0.c2, vt1.c0, vt0.c0, rt0.c5, rt0.c1, v0.c0, vt0.c1, vt2.c0, vt1.c1, rt0.c0 UNION SELECT ALL rt0.c4, rt0.c3, rt0.c2, vt1.c0, vt0.c0, rt0.c5, rt0.c1, v0.c0, vt0.c1, vt2.c0, vt1.c1, rt0.c0 FROM vt2, vt1, v0, vt0 CROSS JOIN rt0 ON 0.2893741597846269 WHERE ((NOT (((((vt1.c0) NOTNULL)) IS TRUE)))) GROUP BY rt0.c4, rt0.c3, rt0.c2, vt1.c0, vt0.c0, rt0.c5, rt0.c1, v0.c0, vt0.c1, vt2.c0, vt1.c1, rt0.c0 UNION SELECT rt0.c4, rt0.c3, rt0.c2, vt1.c0, vt0.c0, rt0.c5, rt0.c1, v0.c0, vt0.c1, vt2.c0, vt1.c1, rt0.c0 FROM vt2, vt1, v0, vt0 CROSS JOIN rt0 ON 0.2893741597846269 WHERE (((((((vt1.c0) NOTNULL)) IS TRUE)) ISNULL)) GROUP BY rt0.c4, rt0.c3, rt0.c2, vt1.c0, vt0.c0, rt0.c5, rt0.c1, v0.c0, vt0.c1, vt2.c0, vt1.c1, rt0.c0;
SELECT rt0.c4, rt0.c3, rt0.c2, vt1.c0, vt0.c0, rt0.c5, rt0.c1, v0.c0, vt0.c1, vt2.c0, vt1.c1, rt0.c0 FROM vt2, vt1, v0, vt0 CROSS JOIN rt0 ON 0.2893741597846269 GROUP BY rt0.c4, rt0.c3, rt0.c2, vt1.c0, vt0.c0, rt0.c5, rt0.c1, v0.c0, vt0.c1, vt2.c0, vt1.c1, rt0.c0;
SELECT ALL rt0.c1, vt0.c1, v0.c0, vt1.c0, vt0.c0, rt0.c2, rt0.c0, rt0.c3, vt1.c1, rt0.c5, rt0.c4 FROM vt1 RIGHT OUTER JOIN v0 ON ((((((((((rt0.c3) NOTNULL))AND((((rt0.c3)) BETWEEN ((v0.c0)) AND ((rt0.c1))))))OR(rt0.c3)))AND(vt1.c0)))OR(CAST(rt0.c1 AS INTEGER))) CROSS JOIN rt0 ON '还' FULL OUTER JOIN vt0 ON (((rt0.c3)) BETWEEN ((CAST(rt0.c1 AS BLOB))) AND (((0.16246388286486046 IN ())))) GROUP BY rt0.c1, vt0.c1, v0.c0, vt1.c0, vt0.c0, rt0.c2, rt0.c0, rt0.c3, vt1.c1, rt0.c5, rt0.c4;
SELECT ALL * FROM vt0, vt2 INNER JOIN rt0 ON ((((((((((((rt0.c3)AND(0.7542324076871998)))OR(rt0.c3)))AND(rt0.c3)))OR(vt2.c0)))AND(x'')))OR(CAST(rt0.c5 AS REAL)));
SELECT * FROM vt0, vt2 INNER JOIN rt0 ON ((((((((((((rt0.c3)AND(0.7542324076871998)))OR(rt0.c3)))AND(rt0.c3)))OR(vt2.c0)))AND(x'')))OR(CAST(rt0.c5 AS REAL))) WHERE (9.04814249E8) UNION ALL SELECT * FROM vt0, vt2 INNER JOIN rt0 ON ((((((((((((rt0.c3)AND(0.7542324076871998)))OR(rt0.c3)))AND(rt0.c3)))OR(vt2.c0)))AND(x'')))OR(CAST(rt0.c5 AS REAL))) WHERE ((NOT (9.04814249E8))) UNION ALL SELECT * FROM vt0, vt2 INNER JOIN rt0 ON ((((((((((((rt0.c3)AND(0.7542324076871998)))OR(rt0.c3)))AND(rt0.c3)))OR(vt2.c0)))AND(x'')))OR(CAST(rt0.c5 AS REAL))) WHERE (((9.04814249E8) ISNULL));
SELECT ALL * FROM vt0, vt2 INNER JOIN rt0 ON ((((((((((((rt0.c3)AND(0.7542324076871998)))OR(rt0.c3)))AND(rt0.c3)))OR(vt2.c0)))AND(x'')))OR(CAST(rt0.c5 AS REAL)));
SELECT DISTINCT * FROM vt1, v0, rt0, vt2, vt0;
SELECT DISTINCT * FROM vt1, v0, rt0, vt2, vt0 WHERE (((CASE rt0.c0  WHEN rt0.c4 THEN vt1.c1 END)AND((vt1.c1 IN (rt0.c0))))) UNION SELECT DISTINCT * FROM vt1, v0, rt0, vt2, vt0 WHERE ((NOT (((CASE rt0.c0  WHEN rt0.c4 THEN vt1.c1 END)AND((vt1.c1 IN (rt0.c0))))))) UNION SELECT DISTINCT * FROM vt1, v0, rt0, vt2, vt0 WHERE (((((CASE rt0.c0  WHEN rt0.c4 THEN vt1.c1 END)AND((vt1.c1 IN (rt0.c0))))) ISNULL));
SELECT DISTINCT * FROM vt1, v0, rt0, vt2, vt0;
SELECT rt0.c4 FROM v0, rt0, vt1, vt2 GROUP BY rt0.c4;
SELECT rt0.c4 FROM v0, rt0, vt1, vt2 WHERE ((rt0.c3 COLLATE BINARY IN ())) GROUP BY rt0.c4 UNION SELECT ALL rt0.c4 FROM v0, rt0, vt1, vt2 WHERE ((NOT ((rt0.c3 COLLATE BINARY IN ())))) GROUP BY rt0.c4 UNION SELECT ALL rt0.c4 FROM v0, rt0, vt1, vt2 WHERE ((((rt0.c3 COLLATE BINARY IN ())) ISNULL)) GROUP BY rt0.c4;
SELECT rt0.c4 FROM v0, rt0, vt1, vt2 GROUP BY rt0.c4;
SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT vt2.c0 FROM vt2;
SELECT ALL vt2.c0 FROM vt2 WHERE (((vt2.c0 COLLATE NOCASE) NOT BETWEEN (json(vt2.c0)) AND (2.064646301E9))) UNION ALL SELECT ALL vt2.c0 FROM vt2 WHERE ((NOT (((vt2.c0 COLLATE NOCASE) NOT BETWEEN (json(vt2.c0)) AND (2.064646301E9))))) UNION ALL SELECT vt2.c0 FROM vt2 WHERE (((((vt2.c0 COLLATE NOCASE) NOT BETWEEN (json(vt2.c0)) AND (2.064646301E9))) ISNULL));
SELECT vt2.c0 FROM vt2;
SELECT DISTINCT rt0.c0, rt0.c3, rt0.c2, rt0.c4, vt1.c0, vt1.c1, rt0.c1, rt0.c5 FROM vt1 NOT INDEXED, vt0 FULL OUTER JOIN vt2 ON CAST(((rt0.c0)>(vt1.c0)) AS TEXT) LEFT OUTER JOIN v0 ON (((((((rt0.c0)OR(vt0.c0)))OR(rt0.c3))))>(((NOT (vt1.c1))))) INNER JOIN rt0 ON ((vt0.c1)<(CASE vt2.c0  WHEN rt0.c2 THEN rt0.c0 END));
SELECT vt0.c0, vt1.c0 FROM vt1, vt2 INNER JOIN v0 ON (CASE v0.c0  WHEN vt0.c0 THEN vt1.c0 WHEN v0.c0 THEN vt0.c1 WHEN vt2.c0 THEN vt0.c0 END IN (((vt1.c1)&(v0.c0)), UNLIKELY(vt2.c0))) LEFT OUTER JOIN vt0 ON ((((vt1.c1) NOTNULL))LIKE(0.8295569471616113)) GROUP BY vt0.c0, vt1.c0;
SELECT ALL vt0.c0, vt1.c0 FROM vt1, vt2 INNER JOIN v0 ON (CASE v0.c0  WHEN vt0.c0 THEN vt1.c0 WHEN v0.c0 THEN vt0.c1 WHEN vt2.c0 THEN vt0.c0 END IN (((vt1.c1)&(v0.c0)), UNLIKELY(vt2.c0))) LEFT OUTER JOIN vt0 ON ((((vt1.c1) NOTNULL))LIKE(0.8295569471616113)) WHERE ((((vt1.c1) ISNULL) IN (((vt1.c1)%(vt0.c1))))) GROUP BY vt0.c0, vt1.c0 UNION SELECT vt0.c0, vt1.c0 FROM vt1, vt2 INNER JOIN v0 ON (CASE v0.c0  WHEN vt0.c0 THEN vt1.c0 WHEN v0.c0 THEN vt0.c1 WHEN vt2.c0 THEN vt0.c0 END IN (((vt1.c1)&(v0.c0)), UNLIKELY(vt2.c0))) LEFT OUTER JOIN vt0 ON ((((vt1.c1) NOTNULL))LIKE(0.8295569471616113)) WHERE ((NOT ((((vt1.c1) ISNULL) IN (((vt1.c1)%(vt0.c1))))))) GROUP BY vt0.c0, vt1.c0 UNION SELECT vt0.c0, vt1.c0 FROM vt1, vt2 INNER JOIN v0 ON (CASE v0.c0  WHEN vt0.c0 THEN vt1.c0 WHEN v0.c0 THEN vt0.c1 WHEN vt2.c0 THEN vt0.c0 END IN (((vt1.c1)&(v0.c0)), UNLIKELY(vt2.c0))) LEFT OUTER JOIN vt0 ON ((((vt1.c1) NOTNULL))LIKE(0.8295569471616113)) WHERE ((((((vt1.c1) ISNULL) IN (((vt1.c1)%(vt0.c1))))) ISNULL)) GROUP BY vt0.c0, vt1.c0;
SELECT vt0.c0, vt1.c0 FROM vt1, vt2 INNER JOIN v0 ON (CASE v0.c0  WHEN vt0.c0 THEN vt1.c0 WHEN v0.c0 THEN vt0.c1 WHEN vt2.c0 THEN vt0.c0 END IN (((vt1.c1)&(v0.c0)), UNLIKELY(vt2.c0))) LEFT OUTER JOIN vt0 ON ((((vt1.c1) NOTNULL))LIKE(0.8295569471616113)) GROUP BY vt0.c0, vt1.c0;
SELECT ALL rt0.c2, rt0.c5, rt0.c4, vt2.c0, rt0.c1, vt0.c1, rt0.c3, vt0.c0, rt0.c0, vt1.c1, v0.c0 FROM v0, rt0, vt2, vt0, vt1 GROUP BY rt0.c2, rt0.c5, rt0.c4, vt2.c0, rt0.c1, vt0.c1, rt0.c3, vt0.c0, rt0.c0, vt1.c1, v0.c0;
SELECT rt0.c2, rt0.c5, rt0.c4, vt2.c0, rt0.c1, vt0.c1, rt0.c3, vt0.c0, rt0.c0, vt1.c1, v0.c0 FROM v0, rt0, vt2, vt0, vt1 GROUP BY rt0.c2, rt0.c5, rt0.c4, vt2.c0, rt0.c1, vt0.c1, rt0.c3, vt0.c0, rt0.c0, vt1.c1, v0.c0 HAVING (((NOT (AVG(MIN(GROUP_CONCAT(MIN(AVG(TOTAL(vt1.c0)))))))))<=(COUNT(*))) UNION ALL SELECT ALL rt0.c2, rt0.c5, rt0.c4, vt2.c0, rt0.c1, vt0.c1, rt0.c3, vt0.c0, rt0.c0, vt1.c1, v0.c0 FROM v0, rt0, vt2, vt0, vt1 GROUP BY rt0.c2, rt0.c5, rt0.c4, vt2.c0, rt0.c1, vt0.c1, rt0.c3, vt0.c0, rt0.c0, vt1.c1, v0.c0 HAVING (NOT ((((NOT (AVG(MIN(GROUP_CONCAT(MIN(AVG(TOTAL(vt1.c0)))))))))<=(COUNT(*))))) UNION ALL SELECT rt0.c2, rt0.c5, rt0.c4, vt2.c0, rt0.c1, vt0.c1, rt0.c3, vt0.c0, rt0.c0, vt1.c1, v0.c0 FROM v0, rt0, vt2, vt0, vt1 GROUP BY rt0.c2, rt0.c5, rt0.c4, vt2.c0, rt0.c1, vt0.c1, rt0.c3, vt0.c0, rt0.c0, vt1.c1, v0.c0 HAVING (((((NOT (AVG(MIN(GROUP_CONCAT(MIN(AVG(TOTAL(vt1.c0)))))))))<=(COUNT(*)))) ISNULL);
SELECT ALL TOTAL(((((((((rt0.c3)AND(rt0.c5)))AND(rt0.c0)))OR(((rt0.c2)<(vt0.c0)))))AND(CASE WHEN vt2.c0 THEN rt0.c2 END))) FROM rt0, vt0, vt2, v0, vt1;
SELECT ALL * FROM vt0, vt1, vt2, v0, rt0;
SELECT * FROM vt0, vt1, vt2, v0, rt0 WHERE ((((CAST(vt2.c0 AS REAL)))>=((((v0.c0) BETWEEN (vt2.c0) AND (rt0.c1)))))) UNION ALL SELECT * FROM vt0, vt1, vt2, v0, rt0 WHERE ((NOT ((((CAST(vt2.c0 AS REAL)))>=((((v0.c0) BETWEEN (vt2.c0) AND (rt0.c1)))))))) UNION ALL SELECT * FROM vt0, vt1, vt2, v0, rt0 WHERE ((((((CAST(vt2.c0 AS REAL)))>=((((v0.c0) BETWEEN (vt2.c0) AND (rt0.c1)))))) ISNULL));
SELECT ALL * FROM vt0, vt1, vt2, v0, rt0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (((((NOT (v0.c0))))<>((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))))) UNION SELECT DISTINCT * FROM v0 NOT INDEXED WHERE ((NOT (((((NOT (v0.c0))))<>((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))))))) UNION SELECT DISTINCT * FROM v0 WHERE (((((((NOT (v0.c0))))<>((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))))) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT vt1.c1, rt0.c0, rt0.c3, rt0.c2, rt0.c4, vt2.c0, vt0.c0, rt0.c5, v0.c0, rt0.c1, vt0.c1, vt1.c0 FROM vt2, v0, vt0, rt0, vt1 GROUP BY vt1.c1, rt0.c0, rt0.c3, rt0.c2, rt0.c4, vt2.c0, vt0.c0, rt0.c5, v0.c0, rt0.c1, vt0.c1, vt1.c0;
SELECT vt1.c1, rt0.c0, rt0.c3, rt0.c2, rt0.c4, vt2.c0, vt0.c0, rt0.c5, v0.c0, rt0.c1, vt0.c1, vt1.c0 FROM vt2, v0, vt0, rt0, vt1 WHERE (((vt0.c0)GLOB(rt0.c4)) COLLATE NOCASE) GROUP BY vt1.c1, rt0.c0, rt0.c3, rt0.c2, rt0.c4, vt2.c0, vt0.c0, rt0.c5, v0.c0, rt0.c1, vt0.c1, vt1.c0 UNION SELECT vt1.c1, rt0.c0, rt0.c3, rt0.c2, rt0.c4, vt2.c0, vt0.c0, rt0.c5, v0.c0, rt0.c1, vt0.c1, vt1.c0 FROM vt2, v0, vt0, rt0, vt1 WHERE ((NOT (((vt0.c0)GLOB(rt0.c4)) COLLATE NOCASE))) GROUP BY vt1.c1, rt0.c0, rt0.c3, rt0.c2, rt0.c4, vt2.c0, vt0.c0, rt0.c5, v0.c0, rt0.c1, vt0.c1, vt1.c0 UNION SELECT vt1.c1, rt0.c0, rt0.c3, rt0.c2, rt0.c4, vt2.c0, vt0.c0, rt0.c5, v0.c0, rt0.c1, vt0.c1, vt1.c0 FROM vt2, v0, vt0, rt0, vt1 WHERE (((((vt0.c0)GLOB(rt0.c4)) COLLATE NOCASE) ISNULL)) GROUP BY vt1.c1, rt0.c0, rt0.c3, rt0.c2, rt0.c4, vt2.c0, vt0.c0, rt0.c5, v0.c0, rt0.c1, vt0.c1, vt1.c0;
SELECT vt1.c1, rt0.c0, rt0.c3, rt0.c2, rt0.c4, vt2.c0, vt0.c0, rt0.c5, v0.c0, rt0.c1, vt0.c1, vt1.c0 FROM vt2, v0, vt0, rt0, vt1 GROUP BY vt1.c1, rt0.c0, rt0.c3, rt0.c2, rt0.c4, vt2.c0, vt0.c0, rt0.c5, v0.c0, rt0.c1, vt0.c1, vt1.c0;
SELECT rt0.c0, rt0.c1, v0.c0, vt0.c1, rt0.c2, rt0.c5 FROM v0, vt1, vt0, rt0 GROUP BY rt0.c0, rt0.c1, v0.c0, vt0.c1, rt0.c2, rt0.c5;
SELECT ALL rt0.c0, rt0.c1, v0.c0, vt0.c1, rt0.c2, rt0.c5 FROM v0, vt1, vt0, rt0 GROUP BY rt0.c0, rt0.c1, v0.c0, vt0.c1, rt0.c2, rt0.c5 HAVING COUNT(*) UNION ALL SELECT rt0.c0, rt0.c1, v0.c0, vt0.c1, rt0.c2, rt0.c5 FROM v0, vt1, vt0, rt0 GROUP BY rt0.c0, rt0.c1, v0.c0, vt0.c1, rt0.c2, rt0.c5 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c0, rt0.c1, v0.c0, vt0.c1, rt0.c2, rt0.c5 FROM v0, vt1, vt0, rt0 GROUP BY rt0.c0, rt0.c1, v0.c0, vt0.c1, rt0.c2, rt0.c5 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c0, rt0.c1, v0.c0, vt0.c1, rt0.c2, rt0.c5 FROM v0, vt1, vt0, rt0 GROUP BY rt0.c0, rt0.c1, v0.c0, vt0.c1, rt0.c2, rt0.c5;
SELECT ALL rt0.c0, rt0.c1, v0.c0, vt0.c1, rt0.c2, rt0.c5 FROM v0, vt1, vt0, rt0 GROUP BY rt0.c0, rt0.c1, v0.c0, vt0.c1, rt0.c2, rt0.c5 HAVING COUNT(*) UNION ALL SELECT rt0.c0, rt0.c1, v0.c0, vt0.c1, rt0.c2, rt0.c5 FROM v0, vt1, vt0, rt0 GROUP BY rt0.c0, rt0.c1, v0.c0, vt0.c1, rt0.c2, rt0.c5 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c0, rt0.c1, v0.c0, vt0.c1, rt0.c2, rt0.c5 FROM v0, vt1, vt0, rt0 GROUP BY rt0.c0, rt0.c1, v0.c0, vt0.c1, rt0.c2, rt0.c5 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c0, rt0.c1, v0.c0, vt0.c1, rt0.c2, rt0.c5 FROM v0, vt1, vt0, rt0 GROUP BY rt0.c0, rt0.c1, v0.c0, vt0.c1, rt0.c2, rt0.c5;
SELECT ALL * FROM vt0, rt0, vt2, vt1;
SELECT ALL * FROM vt0, rt0, vt2, vt1 WHERE (rt0.c4) UNION ALL SELECT ALL * FROM vt0, rt0, vt2, vt1 WHERE ((NOT (rt0.c4))) UNION ALL SELECT * FROM vt0, rt0, vt2, vt1 WHERE (((rt0.c4) ISNULL));
SELECT ALL * FROM vt0, rt0, vt2, vt1;
SELECT DISTINCT * FROM rt0, vt0, vt2, v0;
SELECT DISTINCT * FROM rt0, vt0, vt2, v0 WHERE (CASE ((vt2.c0)+(vt0.c0))  WHEN (rt0.c1 IN ()) THEN (+ (rt0.c4)) END) UNION SELECT DISTINCT * FROM rt0, vt0, vt2, v0 WHERE ((NOT (CASE ((vt2.c0)+(vt0.c0))  WHEN (rt0.c1 IN ()) THEN (+ (rt0.c4)) END))) UNION SELECT DISTINCT * FROM rt0, vt0, vt2, v0 WHERE (((CASE ((vt2.c0)+(vt0.c0))  WHEN (rt0.c1 IN ()) THEN (+ (rt0.c4)) END) ISNULL));
SELECT DISTINCT * FROM rt0, vt0, vt2, v0;
SELECT v0.c0 FROM v0 NOT INDEXED GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (CASE CASE v0.c0  WHEN v0.c0 THEN v0.c0 END  WHEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) THEN (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))) ELSE CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END END) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT (CASE CASE v0.c0  WHEN v0.c0 THEN v0.c0 END  WHEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) THEN (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))) ELSE CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END END))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((CASE CASE v0.c0  WHEN v0.c0 THEN v0.c0 END  WHEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) THEN (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))) ELSE CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END END) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 NOT INDEXED GROUP BY v0.c0;
SELECT rt0.c0, rt0.c2, rt0.c1, vt2.c0 FROM vt1, vt2, rt0, vt0 GROUP BY rt0.c0, rt0.c2, rt0.c1, vt2.c0;
SELECT ALL rt0.c0, rt0.c2, rt0.c1, vt2.c0 FROM vt1, vt2, rt0, vt0 GROUP BY rt0.c0, rt0.c2, rt0.c1, vt2.c0 HAVING AVG((+ (vt1.c1))) UNION ALL SELECT ALL rt0.c0, rt0.c2, rt0.c1, vt2.c0 FROM vt1, vt2, rt0, vt0 GROUP BY rt0.c0, rt0.c2, rt0.c1, vt2.c0 HAVING (NOT (AVG((+ (vt1.c1))))) UNION ALL SELECT ALL rt0.c0, rt0.c2, rt0.c1, vt2.c0 FROM vt1, vt2, rt0, vt0 GROUP BY rt0.c0, rt0.c2, rt0.c1, vt2.c0 HAVING ((AVG((+ (vt1.c1)))) ISNULL);
SELECT rt0.c0, rt0.c2, rt0.c1, vt2.c0 FROM vt1, vt2, rt0, vt0 GROUP BY rt0.c0, rt0.c2, rt0.c1, vt2.c0;
SELECT ALL rt0.c0, rt0.c2, rt0.c1, vt2.c0 FROM vt1, vt2, rt0, vt0 GROUP BY rt0.c0, rt0.c2, rt0.c1, vt2.c0 HAVING AVG((+ (vt1.c1))) UNION ALL SELECT ALL rt0.c0, rt0.c2, rt0.c1, vt2.c0 FROM vt1, vt2, rt0, vt0 GROUP BY rt0.c0, rt0.c2, rt0.c1, vt2.c0 HAVING (NOT (AVG((+ (vt1.c1))))) UNION ALL SELECT ALL rt0.c0, rt0.c2, rt0.c1, vt2.c0 FROM vt1, vt2, rt0, vt0 GROUP BY rt0.c0, rt0.c2, rt0.c1, vt2.c0 HAVING ((AVG((+ (vt1.c1)))) ISNULL);
SELECT rt0.c0, rt0.c2, rt0.c1, vt2.c0 FROM vt1, vt2, rt0, vt0 GROUP BY rt0.c0, rt0.c2, rt0.c1, vt2.c0;
SELECT vt2.c0, vt1.c0, vt0.c1, vt1.c1, v0.c0 FROM v0, vt1, vt2, vt0;
SELECT ALL vt2.c0, vt1.c0, vt0.c1, vt1.c1, v0.c0 FROM v0, vt1, vt2, vt0 WHERE (((((CAST(0Xffffffffc7282691 AS BLOB))OR(((vt2.c0)IS('2025938788')))))AND(COALESCE(vt0.c0, vt1.c1)))) UNION ALL SELECT vt2.c0, vt1.c0, vt0.c1, vt1.c1, v0.c0 FROM v0, vt1, vt2, vt0 WHERE ((NOT (((((CAST(0xffffffffc7282691 AS BLOB))OR(((vt2.c0)IS('2025938788')))))AND(COALESCE(vt0.c0, vt1.c1)))))) UNION ALL SELECT ALL vt2.c0, vt1.c0, vt0.c1, vt1.c1, v0.c0 FROM v0, vt1, vt2, vt0 WHERE (((((((CAST(0Xffffffffc7282691 AS BLOB))OR(((vt2.c0)IS('2025938788')))))AND(COALESCE(vt0.c0, vt1.c1)))) ISNULL));
SELECT vt2.c0, vt1.c0, vt0.c1, vt1.c1, v0.c0 FROM v0, vt1, vt2, vt0;
SELECT DISTINCT vt2.c0, vt0.c0 FROM vt0, vt2;
SELECT DISTINCT vt2.c0, vt0.c0 FROM vt0, vt2 WHERE ((~ (vt0.c0 COLLATE BINARY))) UNION SELECT DISTINCT vt2.c0, vt0.c0 FROM vt0, vt2 WHERE ((NOT ((~ (vt0.c0 COLLATE BINARY))))) UNION SELECT DISTINCT vt2.c0, vt0.c0 FROM vt0, vt2 WHERE ((((~ (vt0.c0 COLLATE BINARY))) ISNULL));
SELECT DISTINCT vt2.c0, vt0.c0 FROM vt0, vt2;
SELECT rt0.c0, rt0.c5, rt0.c1, rt0.c2, v0.c0, vt2.c0, rt0.c4 FROM v0, rt0, vt2 GROUP BY rt0.c0, rt0.c5, rt0.c1, rt0.c2, v0.c0, vt2.c0, rt0.c4;
SELECT ALL rt0.c0, rt0.c5, rt0.c1, rt0.c2, v0.c0, vt2.c0, rt0.c4 FROM v0, rt0, vt2 WHERE (((((((rt0.c3)AND(rt0.c3)))OR(rt0.c1))) BETWEEN (CASE rt0.c2  WHEN rt0.c3 THEN rt0.c1 ELSE rt0.c3 END) AND (NULL))) GROUP BY rt0.c0, rt0.c5, rt0.c1, rt0.c2, v0.c0, vt2.c0, rt0.c4 UNION SELECT rt0.c0, rt0.c5, rt0.c1, rt0.c2, v0.c0, vt2.c0, rt0.c4 FROM v0, rt0, vt2 WHERE ((NOT (((((((rt0.c3)AND(rt0.c3)))OR(rt0.c1))) BETWEEN (CASE rt0.c2  WHEN rt0.c3 THEN rt0.c1 ELSE rt0.c3 END) AND (NULL))))) GROUP BY rt0.c0, rt0.c5, rt0.c1, rt0.c2, v0.c0, vt2.c0, rt0.c4 UNION SELECT rt0.c0, rt0.c5, rt0.c1, rt0.c2, v0.c0, vt2.c0, rt0.c4 FROM v0, rt0, vt2 WHERE (((((((((rt0.c3)AND(rt0.c3)))OR(rt0.c1))) BETWEEN (CASE rt0.c2  WHEN rt0.c3 THEN rt0.c1 ELSE rt0.c3 END) AND (NULL))) ISNULL)) GROUP BY rt0.c0, rt0.c5, rt0.c1, rt0.c2, v0.c0, vt2.c0, rt0.c4;
SELECT rt0.c0, rt0.c5, rt0.c1, rt0.c2, v0.c0, vt2.c0, rt0.c4 FROM v0, rt0, vt2 GROUP BY rt0.c0, rt0.c5, rt0.c1, rt0.c2, v0.c0, vt2.c0, rt0.c4;
SELECT ALL vt0.c0, vt2.c0 FROM vt0, vt1, v0 NATURAL JOIN vt2 GROUP BY vt0.c0, vt2.c0;
SELECT ALL vt0.c0, vt2.c0 FROM vt0, vt1, v0 NATURAL JOIN vt2 GROUP BY vt0.c0, vt2.c0 HAVING MIN(((((COUNT(*))AND(SUM(COUNT(*)))))AND(COUNT(*)))) UNION ALL SELECT vt0.c0, vt2.c0 FROM vt0, vt1, v0 NATURAL JOIN vt2 GROUP BY vt0.c0, vt2.c0 HAVING (NOT (MIN(((((COUNT(*))AND(SUM(COUNT(*)))))AND(COUNT(*)))))) UNION ALL SELECT vt0.c0, vt2.c0 FROM vt0, vt1, v0 NATURAL JOIN vt2 GROUP BY vt0.c0, vt2.c0 HAVING ((MIN(((((COUNT(*))AND(SUM(COUNT(*)))))AND(COUNT(*))))) ISNULL);
SELECT vt2.c0, rt0.c5 FROM vt1, vt0, vt2, rt0;
SELECT ALL vt2.c0, rt0.c5 FROM vt1, vt0, vt2, rt0 WHERE (((((vt0.c1)IS(rt0.c1))) IS TRUE)) UNION ALL SELECT vt2.c0, rt0.c5 FROM vt1, vt0, vt2, rt0 WHERE ((NOT (((((vt0.c1)IS(rt0.c1))) IS TRUE)))) UNION ALL SELECT ALL vt2.c0, rt0.c5 FROM vt1, vt0, vt2, rt0 WHERE (((((((vt0.c1)IS(rt0.c1))) IS TRUE)) ISNULL));
SELECT vt2.c0, rt0.c5 FROM vt1, vt0, vt2, rt0;
SELECT DISTINCT vt1.c0, vt1.c1, v0.c0, vt0.c1, vt0.c0 FROM vt1, v0, vt0;
SELECT DISTINCT vt1.c0, vt1.c1, v0.c0, vt0.c1, vt0.c0 FROM vt1, v0, vt0 WHERE (((CAST(NULL AS REAL))<=(v0.c0 COLLATE RTRIM))) UNION SELECT DISTINCT vt1.c0, vt1.c1, v0.c0, vt0.c1, vt0.c0 FROM vt1, v0, vt0 WHERE ((NOT (((CAST(NULL AS REAL))<=(v0.c0 COLLATE RTRIM))))) UNION SELECT DISTINCT vt1.c0, vt1.c1, v0.c0, vt0.c1, vt0.c0 FROM vt1, v0, vt0 WHERE (((((CAST(NULL AS REAL))<=(v0.c0 COLLATE RTRIM))) ISNULL));
SELECT DISTINCT vt1.c0, vt1.c1, v0.c0, vt0.c1, vt0.c0 FROM vt1, v0, vt0;
SELECT ALL rt0.c4, rt0.c1, v0.c0, vt0.c0, vt1.c1, rt0.c0, rt0.c5, vt0.c1, vt1.c0 FROM v0, vt2, vt1, rt0 FULL OUTER JOIN vt0 ON CAST((((vt0.c1))<>((0.7254485099110842))) AS INTEGER) GROUP BY rt0.c4, rt0.c1, v0.c0, vt0.c0, vt1.c1, rt0.c0, rt0.c5, vt0.c1, vt1.c0;
SELECT rt0.c4, rt0.c1, v0.c0, vt0.c0, vt1.c1, rt0.c0, rt0.c5, vt0.c1, vt1.c0 FROM v0, vt2, vt1, rt0 FULL OUTER JOIN vt0 ON CAST((((vt0.c1))<>((0.7254485099110842))) AS INTEGER) WHERE (CAST(LTRIM(rt0.c5, rt0.c3) AS INTEGER)) GROUP BY rt0.c4, rt0.c1, v0.c0, vt0.c0, vt1.c1, rt0.c0, rt0.c5, vt0.c1, vt1.c0 UNION SELECT rt0.c4, rt0.c1, v0.c0, vt0.c0, vt1.c1, rt0.c0, rt0.c5, vt0.c1, vt1.c0 FROM v0, vt2, vt1, rt0 FULL OUTER JOIN vt0 ON CAST((((vt0.c1))<>((0.7254485099110842))) AS INTEGER) WHERE ((NOT (CAST(LTRIM(rt0.c5, rt0.c3) AS INTEGER)))) GROUP BY rt0.c4, rt0.c1, v0.c0, vt0.c0, vt1.c1, rt0.c0, rt0.c5, vt0.c1, vt1.c0 UNION SELECT ALL rt0.c4, rt0.c1, v0.c0, vt0.c0, vt1.c1, rt0.c0, rt0.c5, vt0.c1, vt1.c0 FROM v0, vt2, vt1, rt0 FULL OUTER JOIN vt0 ON CAST((((vt0.c1))<>((0.7254485099110842))) AS INTEGER) WHERE (((CAST(LTRIM(rt0.c5, rt0.c3) AS INTEGER)) ISNULL)) GROUP BY rt0.c4, rt0.c1, v0.c0, vt0.c0, vt1.c1, rt0.c0, rt0.c5, vt0.c1, vt1.c0;
SELECT ALL rt0.c4, rt0.c1, v0.c0, vt0.c0, vt1.c1, rt0.c0, rt0.c5, vt0.c1, vt1.c0 FROM v0, vt2, vt1, rt0 FULL OUTER JOIN vt0 ON CAST((((vt0.c1))<>((0.7254485099110842))) AS INTEGER) GROUP BY rt0.c4, rt0.c1, v0.c0, vt0.c0, vt1.c1, rt0.c0, rt0.c5, vt0.c1, vt1.c0;
SELECT rt0.c1, vt2.c0, vt0.c0, v0.c0, rt0.c0, rt0.c4, vt1.c0, rt0.c2, rt0.c5, rt0.c3 FROM vt2, vt0, vt1, rt0, v0 GROUP BY rt0.c1, vt2.c0, vt0.c0, v0.c0, rt0.c0, rt0.c4, vt1.c0, rt0.c2, rt0.c5, rt0.c3;
SELECT ALL rt0.c1, vt2.c0, vt0.c0, v0.c0, rt0.c0, rt0.c4, vt1.c0, rt0.c2, rt0.c5, rt0.c3 FROM vt2, vt0, vt1, rt0, v0 GROUP BY rt0.c1, vt2.c0, vt0.c0, v0.c0, rt0.c0, rt0.c4, vt1.c0, rt0.c2, rt0.c5, rt0.c3 HAVING IFNULL(DISTINCT ((GROUP_CONCAT(TOTAL(vt0.c0))) NOT BETWEEN (SUM(SUM(AVG(rt0.c4)))) AND (AVG(SUM(COUNT(*))))), ((SUM(v0.c0)) IS TRUE)) UNION ALL SELECT rt0.c1, vt2.c0, vt0.c0, v0.c0, rt0.c0, rt0.c4, vt1.c0, rt0.c2, rt0.c5, rt0.c3 FROM vt2, vt0, vt1, rt0, v0 GROUP BY rt0.c1, vt2.c0, vt0.c0, v0.c0, rt0.c0, rt0.c4, vt1.c0, rt0.c2, rt0.c5, rt0.c3 HAVING (NOT (IFNULL(DISTINCT ((GROUP_CONCAT(TOTAL(vt0.c0))) NOT BETWEEN (SUM(SUM(AVG(rt0.c4)))) AND (AVG(SUM(COUNT(*))))), ((SUM(v0.c0)) IS TRUE)))) UNION ALL SELECT ALL rt0.c1, vt2.c0, vt0.c0, v0.c0, rt0.c0, rt0.c4, vt1.c0, rt0.c2, rt0.c5, rt0.c3 FROM vt2, vt0, vt1, rt0, v0 GROUP BY rt0.c1, vt2.c0, vt0.c0, v0.c0, rt0.c0, rt0.c4, vt1.c0, rt0.c2, rt0.c5, rt0.c3 HAVING ((IFNULL(DISTINCT ((GROUP_CONCAT(TOTAL(vt0.c0))) NOT BETWEEN (SUM(SUM(AVG(rt0.c4)))) AND (AVG(SUM(COUNT(*))))), ((SUM(v0.c0)) IS TRUE))) ISNULL);
SELECT * FROM vt0, vt2;
SELECT ALL * FROM vt0, vt2 WHERE (UPPER(CASE WHEN vt0.c1 THEN '-675775230' END)) UNION ALL SELECT ALL * FROM vt0, vt2 WHERE ((NOT (UPPER(CASE WHEN vt0.c1 THEN '-675775230' END)))) UNION ALL SELECT * FROM vt0, vt2 WHERE (((UPPER(CASE WHEN vt0.c1 THEN '-675775230' END)) ISNULL));
SELECT * FROM vt0, vt2;
SELECT DISTINCT rt0.c5, rt0.c2, vt0.c1, vt1.c1, rt0.c0, rt0.c1, rt0.c3, vt0.c0 FROM vt0, v0, rt0, vt1;
SELECT DISTINCT rt0.c5, rt0.c2, vt0.c1, vt1.c1, rt0.c0, rt0.c1, rt0.c3, vt0.c0 FROM vt0, v0, rt0, vt1 WHERE ('1747888339') UNION SELECT DISTINCT rt0.c5, rt0.c2, vt0.c1, vt1.c1, rt0.c0, rt0.c1, rt0.c3, vt0.c0 FROM vt0, v0, rt0, vt1 WHERE ((NOT ('1747888339'))) UNION SELECT DISTINCT rt0.c5, rt0.c2, vt0.c1, vt1.c1, rt0.c0, rt0.c1, rt0.c3, vt0.c0 FROM vt0, v0, rt0, vt1 WHERE ((('1747888339') ISNULL));
SELECT DISTINCT rt0.c5, rt0.c2, vt0.c1, vt1.c1, rt0.c0, rt0.c1, rt0.c3, vt0.c0 FROM vt0, v0, rt0, vt1;
SELECT ALL vt1.c1, rt0.c4, rt0.c5, vt0.c0 FROM vt2, rt0, vt1, vt0, v0 GROUP BY vt1.c1, rt0.c4, rt0.c5, vt0.c0;
SELECT ALL vt1.c1, rt0.c4, rt0.c5, vt0.c0 FROM vt2, rt0, vt1, vt0, v0 WHERE (((SQLITE_COMPILEOPTION_USED(rt0.c5)) BETWEEN ((rt0.c2 IN (vt1.c0))) AND ((v0.c0 IN ())))) GROUP BY vt1.c1, rt0.c4, rt0.c5, vt0.c0 UNION SELECT ALL vt1.c1, rt0.c4, rt0.c5, vt0.c0 FROM vt2, rt0, vt1, vt0, v0 WHERE ((NOT (((SQLITE_COMPILEOPTION_USED(rt0.c5)) BETWEEN ((rt0.c2 IN (vt1.c0))) AND ((v0.c0 IN ())))))) GROUP BY vt1.c1, rt0.c4, rt0.c5, vt0.c0 UNION SELECT ALL vt1.c1, rt0.c4, rt0.c5, vt0.c0 FROM vt2, rt0, vt1, vt0, v0 WHERE (((((SQLITE_COMPILEOPTION_USED(rt0.c5)) BETWEEN ((rt0.c2 IN (vt1.c0))) AND ((v0.c0 IN ())))) ISNULL)) GROUP BY vt1.c1, rt0.c4, rt0.c5, vt0.c0;
SELECT ALL vt1.c1, rt0.c4, rt0.c5, vt0.c0 FROM vt2, rt0, vt1, vt0, v0 GROUP BY vt1.c1, rt0.c4, rt0.c5, vt0.c0;
SELECT ALL vt0.c0, vt1.c1, rt0.c1, v0.c0, rt0.c5, rt0.c3, vt0.c1, rt0.c4, rt0.c2, rt0.c0 FROM vt0, vt1, v0, rt0, vt2 GROUP BY vt0.c0, vt1.c1, rt0.c1, v0.c0, rt0.c5, rt0.c3, vt0.c1, rt0.c4, rt0.c2, rt0.c0;
SELECT ALL vt0.c0, vt1.c1, rt0.c1, v0.c0, rt0.c5, rt0.c3, vt0.c1, rt0.c4, rt0.c2, rt0.c0 FROM vt0, vt1, v0, rt0, vt2 GROUP BY vt0.c0, vt1.c1, rt0.c1, v0.c0, rt0.c5, rt0.c3, vt0.c1, rt0.c4, rt0.c2, rt0.c0 HAVING MIN(CASE rt0.c3  WHEN rt0.c5 THEN rt0.c0 ELSE COUNT(rt0.c2) END) UNION ALL SELECT vt0.c0, vt1.c1, rt0.c1, v0.c0, rt0.c5, rt0.c3, vt0.c1, rt0.c4, rt0.c2, rt0.c0 FROM vt0, vt1, v0, rt0, vt2 GROUP BY vt0.c0, vt1.c1, rt0.c1, v0.c0, rt0.c5, rt0.c3, vt0.c1, rt0.c4, rt0.c2, rt0.c0 HAVING (NOT (MIN(CASE rt0.c3  WHEN rt0.c5 THEN rt0.c0 ELSE COUNT(rt0.c2) END))) UNION ALL SELECT vt0.c0, vt1.c1, rt0.c1, v0.c0, rt0.c5, rt0.c3, vt0.c1, rt0.c4, rt0.c2, rt0.c0 FROM vt0, vt1, v0, rt0, vt2 GROUP BY vt0.c0, vt1.c1, rt0.c1, v0.c0, rt0.c5, rt0.c3, vt0.c1, rt0.c4, rt0.c2, rt0.c0 HAVING ((MIN(CASE rt0.c3  WHEN rt0.c5 THEN rt0.c0 ELSE COUNT(rt0.c2) END)) ISNULL);
SELECT ALL vt0.c1, v0.c0 FROM vt0, v0;
SELECT ALL vt0.c1, v0.c0 FROM vt0, v0 WHERE ((((vt0.c0))<=((vt0.c0)))) UNION ALL SELECT ALL vt0.c1, v0.c0 FROM vt0, v0 WHERE ((NOT ((((vt0.c0))<=((vt0.c0)))))) UNION ALL SELECT ALL vt0.c1, v0.c0 FROM vt0, v0 WHERE ((((((vt0.c0))<=((vt0.c0)))) ISNULL));
SELECT ALL vt0.c1, v0.c0 FROM vt0, v0;
SELECT DISTINCT * FROM vt0, vt2, v0;
SELECT DISTINCT * FROM vt0, vt2, v0 WHERE (((LOWER(DISTINCT vt0.c1))%(0.08056412590121009))) UNION SELECT DISTINCT * FROM vt0, vt2, v0 WHERE ((NOT (((LOWER(DISTINCT vt0.c1))%(0.08056412590121009))))) UNION SELECT DISTINCT * FROM vt0, vt2, v0 WHERE (((((LOWER(DISTINCT vt0.c1))%(0.08056412590121009))) ISNULL));
SELECT DISTINCT * FROM vt0, vt2, v0;
SELECT ALL rt0.c4, rt0.c1, vt0.c1, rt0.c3, vt2.c0, vt0.c0 FROM rt0, v0, vt1, vt2, vt0 GROUP BY rt0.c4, rt0.c1, vt0.c1, rt0.c3, vt2.c0, vt0.c0;
SELECT rt0.c4, rt0.c1, vt0.c1, rt0.c3, vt2.c0, vt0.c0 FROM rt0, v0, vt1, vt2, vt0 WHERE ((((((rt0.c4)-(-9.32354663E8))))=(((((vt0.c1))>=((rt0.c2))))))) GROUP BY rt0.c4, rt0.c1, vt0.c1, rt0.c3, vt2.c0, vt0.c0 UNION SELECT rt0.c4, rt0.c1, vt0.c1, rt0.c3, vt2.c0, vt0.c0 FROM rt0, v0, vt1, vt2, vt0 WHERE ((NOT ((((((rt0.c4)-(-9.32354663E8))))=(((((vt0.c1))>=((rt0.c2))))))))) GROUP BY rt0.c4, rt0.c1, vt0.c1, rt0.c3, vt2.c0, vt0.c0 UNION SELECT rt0.c4, rt0.c1, vt0.c1, rt0.c3, vt2.c0, vt0.c0 FROM rt0, v0, vt1, vt2, vt0 WHERE ((((((((rt0.c4)-(-9.32354663E8))))=(((((vt0.c1))>=((rt0.c2))))))) ISNULL)) GROUP BY rt0.c4, rt0.c1, vt0.c1, rt0.c3, vt2.c0, vt0.c0;
SELECT ALL rt0.c4, rt0.c1, vt0.c1, rt0.c3, vt2.c0, vt0.c0 FROM rt0, v0, vt1, vt2, vt0 GROUP BY rt0.c4, rt0.c1, vt0.c1, rt0.c3, vt2.c0, vt0.c0;
SELECT ALL rt0.c1 FROM vt2, rt0, vt1 GROUP BY rt0.c1;
SELECT rt0.c1 FROM vt2, rt0, vt1 GROUP BY rt0.c1 HAVING CASE WHEN TOTAL(0x6966e956) THEN AVG(AVG('-344587545')) ELSE rt0.c3 END UNION ALL SELECT ALL rt0.c1 FROM vt2, rt0, vt1 GROUP BY rt0.c1 HAVING (NOT (CASE WHEN TOTAL(0X6966e956) THEN AVG(AVG('-344587545')) ELSE rt0.c3 END)) UNION ALL SELECT rt0.c1 FROM vt2, rt0 NOT INDEXED, vt1 GROUP BY rt0.c1 HAVING ((CASE WHEN TOTAL(0X6966e956) THEN AVG(AVG('-344587545')) ELSE rt0.c3 END) ISNULL);
SELECT rt0.c1, vt2.c0 FROM vt0, v0, vt2, rt0;
SELECT ALL rt0.c1, vt2.c0 FROM vt0, v0, vt2, rt0 WHERE (vt0.c1) UNION ALL SELECT ALL rt0.c1, vt2.c0 FROM vt0, v0, vt2, rt0 WHERE ((NOT (vt0.c1))) UNION ALL SELECT ALL rt0.c1, vt2.c0 FROM vt0, v0, vt2, rt0 WHERE (((vt0.c1) ISNULL));
SELECT rt0.c1, vt2.c0 FROM vt0, v0, vt2, rt0;
SELECT DISTINCT * FROM v0, vt0, rt0, vt1, vt2;
SELECT DISTINCT * FROM v0, vt0, rt0, vt1, vt2 WHERE ((+ ((rt0.c4 IN (vt0.c0))))) UNION SELECT DISTINCT * FROM v0, vt0, rt0, vt1, vt2 WHERE ((NOT ((+ ((rt0.c4 IN (vt0.c0))))))) UNION SELECT DISTINCT * FROM v0, vt0, rt0, vt1, vt2 WHERE ((((+ ((rt0.c4 IN (vt0.c0))))) ISNULL));
SELECT DISTINCT * FROM v0, vt0, rt0, vt1, vt2;
SELECT vt2.c0 FROM vt2 NOT INDEXED GROUP BY vt2.c0;
SELECT vt2.c0 FROM vt2 WHERE ((+ (((vt2.c0)=(vt2.c0))))) GROUP BY vt2.c0 UNION SELECT ALL vt2.c0 FROM vt2 WHERE ((NOT ((+ (((vt2.c0)==(vt2.c0))))))) GROUP BY vt2.c0 UNION SELECT vt2.c0 FROM vt2 WHERE ((((+ (((vt2.c0)==(vt2.c0))))) ISNULL)) GROUP BY vt2.c0;
SELECT vt2.c0 FROM vt2 NOT INDEXED GROUP BY vt2.c0;
SELECT v0.c0, vt0.c1, vt0.c0 FROM v0 CROSS JOIN vt0 ON ((((vt0.c1) IS TRUE))%(-9.48723754E8)) CROSS JOIN vt2 ON ((x'7eca')==(v0.c0)) GROUP BY v0.c0, vt0.c1, vt0.c0;
SELECT ALL v0.c0, vt0.c1, vt0.c0 FROM v0 NOT INDEXED CROSS JOIN vt0 ON ((((vt0.c1) IS TRUE))%(-9.48723754E8)) CROSS JOIN vt2 ON ((x'7eca')=(v0.c0)) GROUP BY v0.c0, vt0.c1, vt0.c0 HAVING ((((SUM(TOTAL(MIN(vt0.c0)))) IS FALSE))>(TOTAL(vt2.c0))) UNION ALL SELECT ALL v0.c0, vt0.c1, vt0.c0 FROM v0 CROSS JOIN vt0 ON ((((vt0.c1) IS TRUE))%(-9.48723754E8)) CROSS JOIN vt2 ON ((x'7eca')=(v0.c0)) GROUP BY v0.c0, vt0.c1, vt0.c0 HAVING (NOT (((((SUM(TOTAL(MIN(vt0.c0)))) IS FALSE))>(TOTAL(vt2.c0))))) UNION ALL SELECT v0.c0, vt0.c1, vt0.c0 FROM v0 CROSS JOIN vt0 ON ((((vt0.c1) IS TRUE))%(-9.48723754E8)) CROSS JOIN vt2 ON ((x'7eca')==(v0.c0)) GROUP BY v0.c0, vt0.c1, vt0.c0 HAVING ((((((SUM(TOTAL(MIN(vt0.c0)))) IS FALSE))>(TOTAL(vt2.c0)))) ISNULL);
SELECT ALL * FROM rt0, vt0, v0, vt2, vt1;
SELECT * FROM rt0, vt0, v0, vt2, vt1 WHERE ((((((vt1.c0))==((vt0.c0))))OR(((vt0.c0)>=(rt0.c1))))) UNION ALL SELECT ALL * FROM rt0, vt0, v0, vt2, vt1 WHERE ((NOT ((((((vt1.c0))==((vt0.c0))))OR(((vt0.c0)>=(rt0.c1))))))) UNION ALL SELECT ALL * FROM rt0, vt0, v0, vt2, vt1 WHERE ((((((((vt1.c0))==((vt0.c0))))OR(((vt0.c0)>=(rt0.c1))))) ISNULL));
SELECT ALL * FROM rt0, vt0, v0, vt2, vt1;
SELECT DISTINCT * FROM rt0, vt0, v0;
SELECT DISTINCT * FROM rt0, vt0, v0 WHERE (CASE ((((rt0.c5)AND('cb1S^z')))OR(rt0.c0))  WHEN (v0.c0 IN ()) THEN CAST(rt0.c0 AS BLOB) WHEN (rt0.c2 IN ()) THEN ((rt0.c1)>>(vt0.c1)) WHEN rt0.c2 THEN CASE vt0.c1  WHEN v0.c0 THEN v0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 END WHEN ((rt0.c1)AND(rt0.c2)) THEN vt0.c0 WHEN ((NULL)>=(v0.c0)) THEN ((vt0.c0)*(rt0.c1)) END) UNION SELECT DISTINCT * FROM rt0, vt0, v0 WHERE ((NOT (CASE ((((rt0.c5)AND('cb1S^z')))OR(rt0.c0))  WHEN (v0.c0 IN ()) THEN CAST(rt0.c0 AS BLOB) WHEN (rt0.c2 IN ()) THEN ((rt0.c1)>>(vt0.c1)) WHEN rt0.c2 THEN CASE vt0.c1  WHEN v0.c0 THEN v0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 END WHEN ((rt0.c1)AND(rt0.c2)) THEN vt0.c0 WHEN ((NULL)>=(v0.c0)) THEN ((vt0.c0)*(rt0.c1)) END))) UNION SELECT DISTINCT * FROM rt0, vt0, v0 WHERE (((CASE ((((rt0.c5)AND('cb1S^z')))OR(rt0.c0))  WHEN (v0.c0 IN ()) THEN CAST(rt0.c0 AS BLOB) WHEN (rt0.c2 IN ()) THEN ((rt0.c1)>>(vt0.c1)) WHEN rt0.c2 THEN CASE vt0.c1  WHEN v0.c0 THEN v0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 END WHEN ((rt0.c1)AND(rt0.c2)) THEN vt0.c0 WHEN ((NULL)>=(v0.c0)) THEN ((vt0.c0)*(rt0.c1)) END) ISNULL));
SELECT DISTINCT * FROM rt0, vt0, v0;
SELECT ALL vt2.c0, vt0.c1, v0.c0 FROM vt0, v0 NOT INDEXED, vt2 GROUP BY vt2.c0, vt0.c1, v0.c0;
SELECT ALL vt2.c0, vt0.c1, v0.c0 FROM vt0, v0, vt2 WHERE ((NOT (CAST(vt0.c0 AS INTEGER)))) GROUP BY vt2.c0, vt0.c1, v0.c0 UNION SELECT ALL vt2.c0, vt0.c1, v0.c0 FROM vt0, v0, vt2 WHERE ((NOT ((NOT (CAST(vt0.c0 AS INTEGER)))))) GROUP BY vt2.c0, vt0.c1, v0.c0 UNION SELECT vt2.c0, vt0.c1, v0.c0 FROM vt0, v0, vt2 WHERE ((((NOT (CAST(vt0.c0 AS INTEGER)))) ISNULL)) GROUP BY vt2.c0, vt0.c1, v0.c0;
SELECT ALL vt2.c0, vt0.c1, v0.c0 FROM vt0, v0 NOT INDEXED, vt2 GROUP BY vt2.c0, vt0.c1, v0.c0;
SELECT vt1.c0 FROM vt1, rt0, v0, vt2 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1, rt0, v0, vt2 GROUP BY vt1.c0 HAVING MIN(COUNT(COUNT(COUNT(*)))) UNION ALL SELECT vt1.c0 FROM vt1, rt0, v0, vt2 GROUP BY vt1.c0 HAVING (NOT (MIN(COUNT(COUNT(COUNT(*)))))) UNION ALL SELECT ALL vt1.c0 FROM vt1, rt0, v0, vt2 GROUP BY vt1.c0 HAVING ((MIN(COUNT(COUNT(COUNT(*))))) ISNULL);
SELECT ALL rt0.c5, vt0.c0, rt0.c1, vt0.c1, rt0.c2, vt1.c1, vt1.c0, rt0.c3, rt0.c4, rt0.c0 FROM rt0, vt0 CROSS JOIN vt1 ON ((-259167617 COLLATE RTRIM)%(vt1.c0));
SELECT rt0.c5, vt0.c0, rt0.c1, vt0.c1, rt0.c2, vt1.c1, vt1.c0, rt0.c3, rt0.c4, rt0.c0 FROM rt0, vt0 CROSS JOIN vt1 ON ((-259167617 COLLATE RTRIM)%(vt1.c0)) WHERE (((LOWER(rt0.c1)) NOT NULL)) UNION ALL SELECT rt0.c5, vt0.c0, rt0.c1, vt0.c1, rt0.c2, vt1.c1, vt1.c0, rt0.c3, rt0.c4, rt0.c0 FROM rt0, vt0 CROSS JOIN vt1 ON ((-259167617 COLLATE RTRIM)%(vt1.c0)) WHERE ((NOT (((LOWER(rt0.c1)) NOT NULL)))) UNION ALL SELECT rt0.c5, vt0.c0, rt0.c1, vt0.c1, rt0.c2, vt1.c1, vt1.c0, rt0.c3, rt0.c4, rt0.c0 FROM rt0, vt0 CROSS JOIN vt1 ON ((-259167617 COLLATE RTRIM)%(vt1.c0)) WHERE (((((LOWER(rt0.c1)) NOT NULL)) ISNULL));
SELECT ALL rt0.c5, vt0.c0, rt0.c1, vt0.c1, rt0.c2, vt1.c1, vt1.c0, rt0.c3, rt0.c4, rt0.c0 FROM rt0, vt0 CROSS JOIN vt1 ON ((-259167617 COLLATE RTRIM)%(vt1.c0));
SELECT DISTINCT * FROM v0 RIGHT OUTER JOIN vt1 ON CASE WHEN rt0.c2 THEN vt1.c0 WHEN '' THEN x'ba6b' WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c1 END COLLATE BINARY FULL OUTER JOIN rt0 ON CAST(((0.36050066453638696) NOTNULL) AS NUMERIC);
SELECT ALL vt1.c0, vt2.c0 FROM vt0, vt2, vt1 GROUP BY vt1.c0, vt2.c0;
SELECT vt1.c0, vt2.c0 FROM vt0, vt2, vt1 WHERE (NULL) GROUP BY vt1.c0, vt2.c0 UNION SELECT ALL vt1.c0, vt2.c0 FROM vt0, vt2, vt1 WHERE ((NOT (NULL))) GROUP BY vt1.c0, vt2.c0 UNION SELECT ALL vt1.c0, vt2.c0 FROM vt0, vt2, vt1 WHERE (((NULL) ISNULL)) GROUP BY vt1.c0, vt2.c0;
SELECT ALL vt1.c0, vt2.c0 FROM vt0, vt2, vt1 GROUP BY vt1.c0, vt2.c0;
SELECT ALL rt0.c1, rt0.c5, rt0.c2, rt0.c4 FROM rt0, vt2, v0 GROUP BY rt0.c1, rt0.c5, rt0.c2, rt0.c4;
SELECT rt0.c1, rt0.c5, rt0.c2, rt0.c4 FROM rt0, vt2, v0 GROUP BY rt0.c1, rt0.c5, rt0.c2, rt0.c4 HAVING (~ (SUM(rt0.c3))) UNION ALL SELECT rt0.c1, rt0.c5, rt0.c2, rt0.c4 FROM rt0, vt2, v0 GROUP BY rt0.c1, rt0.c5, rt0.c2, rt0.c4 HAVING (NOT ((~ (SUM(rt0.c3))))) UNION ALL SELECT rt0.c1, rt0.c5, rt0.c2, rt0.c4 FROM rt0, vt2, v0 GROUP BY rt0.c1, rt0.c5, rt0.c2, rt0.c4 HAVING (((~ (SUM(rt0.c3)))) ISNULL);
SELECT ALL rt0.c1, rt0.c5, rt0.c2, rt0.c4 FROM rt0, vt2, v0 GROUP BY rt0.c1, rt0.c5, rt0.c2, rt0.c4;
SELECT rt0.c1, rt0.c5, rt0.c2, rt0.c4 FROM rt0, vt2, v0 GROUP BY rt0.c1, rt0.c5, rt0.c2, rt0.c4 HAVING (~ (SUM(rt0.c3))) UNION ALL SELECT rt0.c1, rt0.c5, rt0.c2, rt0.c4 FROM rt0, vt2, v0 GROUP BY rt0.c1, rt0.c5, rt0.c2, rt0.c4 HAVING (NOT ((~ (SUM(rt0.c3))))) UNION ALL SELECT rt0.c1, rt0.c5, rt0.c2, rt0.c4 FROM rt0, vt2, v0 GROUP BY rt0.c1, rt0.c5, rt0.c2, rt0.c4 HAVING (((~ (SUM(rt0.c3)))) ISNULL);
SELECT ALL rt0.c1, rt0.c5, rt0.c2, rt0.c4 FROM rt0, vt2, v0 GROUP BY rt0.c1, rt0.c5, rt0.c2, rt0.c4;
SELECT * FROM vt2;
SELECT * FROM vt2 WHERE (CASE WHEN ((vt2.c0) BETWEEN (vt2.c0) AND (vt2.c0)) THEN ((vt2.c0)%(vt2.c0)) END) UNION ALL SELECT ALL * FROM vt2 WHERE ((NOT (CASE WHEN ((vt2.c0) BETWEEN (vt2.c0) AND (vt2.c0)) THEN ((vt2.c0)%(vt2.c0)) END))) UNION ALL SELECT ALL * FROM vt2 WHERE (((CASE WHEN ((vt2.c0) BETWEEN (vt2.c0) AND (vt2.c0)) THEN ((vt2.c0)%(vt2.c0)) END) ISNULL));
SELECT * FROM vt2;
SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0;
SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0 WHERE ((~ ((NOT (vt0.c1))))) UNION SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0 WHERE ((NOT ((~ ((NOT (vt0.c1))))))) UNION SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0 WHERE ((((~ ((NOT (vt0.c1))))) ISNULL));
SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0;
SELECT rt0.c3, vt0.c1, vt0.c0, rt0.c1, rt0.c2, rt0.c4, rt0.c5, rt0.c0 FROM rt0, vt0 GROUP BY rt0.c3, vt0.c1, vt0.c0, rt0.c1, rt0.c2, rt0.c4, rt0.c5, rt0.c0;
SELECT ALL rt0.c3, vt0.c1, vt0.c0, rt0.c1, rt0.c2, rt0.c4, rt0.c5, rt0.c0 FROM rt0, vt0 WHERE (0.13353964005787033) GROUP BY rt0.c3, vt0.c1, vt0.c0, rt0.c1, rt0.c2, rt0.c4, rt0.c5, rt0.c0 UNION SELECT rt0.c3, vt0.c1, vt0.c0, rt0.c1, rt0.c2, rt0.c4, rt0.c5, rt0.c0 FROM rt0, vt0 WHERE ((NOT (0.13353964005787033))) GROUP BY rt0.c3, vt0.c1, vt0.c0, rt0.c1, rt0.c2, rt0.c4, rt0.c5, rt0.c0 UNION SELECT ALL rt0.c3, vt0.c1, vt0.c0, rt0.c1, rt0.c2, rt0.c4, rt0.c5, rt0.c0 FROM rt0, vt0 WHERE (((0.13353964005787033) ISNULL)) GROUP BY rt0.c3, vt0.c1, vt0.c0, rt0.c1, rt0.c2, rt0.c4, rt0.c5, rt0.c0;
SELECT rt0.c3, vt0.c1, vt0.c0, rt0.c1, rt0.c2, rt0.c4, rt0.c5, rt0.c0 FROM rt0, vt0 GROUP BY rt0.c3, vt0.c1, vt0.c0, rt0.c1, rt0.c2, rt0.c4, rt0.c5, rt0.c0;
SELECT ALL vt2.c0 FROM vt2, vt0, v0 GROUP BY vt2.c0;
SELECT ALL vt2.c0 FROM vt2, vt0, v0 GROUP BY vt2.c0 HAVING ((((vt2.c0) IS FALSE))||(((vt0.c1)|(v0.c0)))) UNION ALL SELECT vt2.c0 FROM vt2, vt0, v0 GROUP BY vt2.c0 HAVING (NOT (((((vt2.c0) IS FALSE))||(((vt0.c1)|(v0.c0)))))) UNION ALL SELECT ALL vt2.c0 FROM vt2, vt0, v0 GROUP BY vt2.c0 HAVING ((((((vt2.c0) IS FALSE))||(((vt0.c1)|(v0.c0))))) ISNULL);
SELECT ALL vt2.c0 FROM vt2, vt0, v0 GROUP BY vt2.c0;
SELECT ALL vt2.c0 FROM vt2, vt0, v0 GROUP BY vt2.c0 HAVING ((((vt2.c0) IS FALSE))||(((vt0.c1)|(v0.c0)))) UNION ALL SELECT vt2.c0 FROM vt2, vt0, v0 GROUP BY vt2.c0 HAVING (NOT (((((vt2.c0) IS FALSE))||(((vt0.c1)|(v0.c0)))))) UNION ALL SELECT ALL vt2.c0 FROM vt2, vt0, v0 GROUP BY vt2.c0 HAVING ((((((vt2.c0) IS FALSE))||(((vt0.c1)|(v0.c0))))) ISNULL);
SELECT ALL vt2.c0 FROM vt2, vt0, v0 GROUP BY vt2.c0;
SELECT MIN(((((v0.c0)OR(((vt0.c1)GLOB(x'')))))OR(v0.c0 COLLATE NOCASE))) FROM v0, vt0 ORDER BY ((CASE WHEN vt0.c1 THEN vt0.c0 END) ISNULL) DESC  NULLS LAST, HEX(DISTINCT vt0.c0);
SELECT vt1.c1, vt2.c0, rt0.c1, vt0.c1, rt0.c4, rt0.c3, rt0.c5, vt0.c0, rt0.c0, vt1.c0, rt0.c2 FROM vt0, vt2, vt1 INNER JOIN rt0 ON CAST((0.9234045143763479 IN ()) AS REAL);
SELECT vt1.c1, vt2.c0, rt0.c1, vt0.c1, rt0.c4, rt0.c3, rt0.c5, vt0.c0, rt0.c0, vt1.c0, rt0.c2 FROM vt0, vt2, vt1 INNER JOIN rt0 ON CAST((0.9234045143763479 IN ()) AS REAL) WHERE ((((+ (vt0.c0)))OR(rt0.c5))) UNION ALL SELECT ALL vt1.c1, vt2.c0, rt0.c1, vt0.c1, rt0.c4, rt0.c3, rt0.c5, vt0.c0, rt0.c0, vt1.c0, rt0.c2 FROM vt0, vt2, vt1 INNER JOIN rt0 ON CAST((0.9234045143763479 IN ()) AS REAL) WHERE ((NOT ((((+ (vt0.c0)))OR(rt0.c5))))) UNION ALL SELECT ALL vt1.c1, vt2.c0, rt0.c1, vt0.c1, rt0.c4, rt0.c3, rt0.c5, vt0.c0, rt0.c0, vt1.c0, rt0.c2 FROM vt0, vt2, vt1 INNER JOIN rt0 ON CAST((0.9234045143763479 IN ()) AS REAL) WHERE ((((((+ (vt0.c0)))OR(rt0.c5))) ISNULL));
SELECT vt1.c1, vt2.c0, rt0.c1, vt0.c1, rt0.c4, rt0.c3, rt0.c5, vt0.c0, rt0.c0, vt1.c0, rt0.c2 FROM vt0, vt2, vt1 INNER JOIN rt0 ON CAST((0.9234045143763479 IN ()) AS REAL);
SELECT DISTINCT vt2.c0, v0.c0 FROM vt2 INNER JOIN v0 ON (+ (CASE WHEN vt2.c0 THEN vt2.c0 END));
SELECT DISTINCT vt2.c0, v0.c0 FROM vt2 INNER JOIN v0 ON (+ (CASE WHEN vt2.c0 THEN vt2.c0 END)) WHERE (CAST(CASE WHEN vt2.c0 THEN '' END AS REAL)) UNION SELECT DISTINCT vt2.c0, v0.c0 FROM vt2 INNER JOIN v0 ON (+ (CASE WHEN vt2.c0 THEN vt2.c0 END)) WHERE ((NOT (CAST(CASE WHEN vt2.c0 THEN '' END AS REAL)))) UNION SELECT DISTINCT vt2.c0, v0.c0 FROM vt2 INNER JOIN v0 ON (+ (CASE WHEN vt2.c0 THEN vt2.c0 END)) WHERE (((CAST(CASE WHEN vt2.c0 THEN '' END AS REAL)) ISNULL));
SELECT DISTINCT vt2.c0, v0.c0 FROM vt2 INNER JOIN v0 ON (+ (CASE WHEN vt2.c0 THEN vt2.c0 END));
SELECT rt0.c1 FROM vt2, vt0, rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM vt2, vt0, rt0 WHERE (((((((rt0.c5) NOT BETWEEN (0.7542324076871998) AND (vt0.c1)))AND((vt0.c1 IN ()))))OR(((vt0.c0) IS TRUE)))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM vt2, vt0, rt0 WHERE ((NOT (((((((rt0.c5) NOT BETWEEN (0.7542324076871998) AND (vt0.c1)))AND((vt0.c1 IN ()))))OR(((vt0.c0) IS TRUE)))))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM vt2, vt0, rt0 WHERE (((((((((rt0.c5) NOT BETWEEN (0.7542324076871998) AND (vt0.c1)))AND((vt0.c1 IN ()))))OR(((vt0.c0) IS TRUE)))) ISNULL)) GROUP BY rt0.c1;
SELECT rt0.c1 FROM vt2, vt0, rt0 GROUP BY rt0.c1;
SELECT rt0.c2, rt0.c4, rt0.c5, vt0.c0, v0.c0, vt2.c0, rt0.c0, vt0.c1, rt0.c1, rt0.c3 FROM vt0, vt2, v0, rt0 GROUP BY rt0.c2, rt0.c4, rt0.c5, vt0.c0, v0.c0, vt2.c0, rt0.c0, vt0.c1, rt0.c1, rt0.c3;
SELECT rt0.c2, rt0.c4, rt0.c5, vt0.c0, v0.c0, vt2.c0, rt0.c0, vt0.c1, rt0.c1, rt0.c3 FROM vt0, vt2, v0, rt0 GROUP BY rt0.c2, rt0.c4, rt0.c5, vt0.c0, v0.c0, vt2.c0, rt0.c0, vt0.c1, rt0.c1, rt0.c3 HAVING MIN(rt0.c5) UNION ALL SELECT rt0.c2, rt0.c4, rt0.c5, vt0.c0, v0.c0, vt2.c0, rt0.c0, vt0.c1, rt0.c1, rt0.c3 FROM vt0, vt2, v0, rt0 GROUP BY rt0.c2, rt0.c4, rt0.c5, vt0.c0, v0.c0, vt2.c0, rt0.c0, vt0.c1, rt0.c1, rt0.c3 HAVING (NOT (MIN(rt0.c5))) UNION ALL SELECT ALL rt0.c2, rt0.c4, rt0.c5, vt0.c0, v0.c0, vt2.c0, rt0.c0, vt0.c1, rt0.c1, rt0.c3 FROM vt0, vt2, v0, rt0 GROUP BY rt0.c2, rt0.c4, rt0.c5, vt0.c0, v0.c0, vt2.c0, rt0.c0, vt0.c1, rt0.c1, rt0.c3 HAVING ((MIN(rt0.c5)) ISNULL);
SELECT rt0.c2, rt0.c4, rt0.c5, vt0.c0, v0.c0, vt2.c0, rt0.c0, vt0.c1, rt0.c1, rt0.c3 FROM vt0, vt2, v0, rt0 GROUP BY rt0.c2, rt0.c4, rt0.c5, vt0.c0, v0.c0, vt2.c0, rt0.c0, vt0.c1, rt0.c1, rt0.c3;
SELECT rt0.c2, rt0.c4, rt0.c5, vt0.c0, v0.c0, vt2.c0, rt0.c0, vt0.c1, rt0.c1, rt0.c3 FROM vt0, vt2, v0, rt0 GROUP BY rt0.c2, rt0.c4, rt0.c5, vt0.c0, v0.c0, vt2.c0, rt0.c0, vt0.c1, rt0.c1, rt0.c3 HAVING MIN(rt0.c5) UNION ALL SELECT rt0.c2, rt0.c4, rt0.c5, vt0.c0, v0.c0, vt2.c0, rt0.c0, vt0.c1, rt0.c1, rt0.c3 FROM vt0, vt2, v0, rt0 GROUP BY rt0.c2, rt0.c4, rt0.c5, vt0.c0, v0.c0, vt2.c0, rt0.c0, vt0.c1, rt0.c1, rt0.c3 HAVING (NOT (MIN(rt0.c5))) UNION ALL SELECT ALL rt0.c2, rt0.c4, rt0.c5, vt0.c0, v0.c0, vt2.c0, rt0.c0, vt0.c1, rt0.c1, rt0.c3 FROM vt0, vt2, v0, rt0 GROUP BY rt0.c2, rt0.c4, rt0.c5, vt0.c0, v0.c0, vt2.c0, rt0.c0, vt0.c1, rt0.c1, rt0.c3 HAVING ((MIN(rt0.c5)) ISNULL);
SELECT rt0.c2, rt0.c4, rt0.c5, vt0.c0, v0.c0, vt2.c0, rt0.c0, vt0.c1, rt0.c1, rt0.c3 FROM vt0, vt2, v0, rt0 GROUP BY rt0.c2, rt0.c4, rt0.c5, vt0.c0, v0.c0, vt2.c0, rt0.c0, vt0.c1, rt0.c1, rt0.c3;
SELECT TOTAL((((vt1.c0 IN ())) NOTNULL)) FROM vt1;
SELECT ALL rt0.c5, rt0.c0, vt1.c1, vt0.c1, v0.c0, rt0.c3, rt0.c2, rt0.c1, vt0.c0 FROM rt0, vt1 CROSS JOIN v0 ON CASE ((vt2.c0) NOTNULL)  WHEN (((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c1))) THEN ((rt0.c1) ISNULL) ELSE CASE vt0.c0  WHEN rt0.c0 THEN v0.c0 ELSE vt1.c1 END END RIGHT OUTER JOIN vt2 ON x'' RIGHT OUTER JOIN vt0 ON CAST(CAST(rt0.c2 AS NUMERIC) AS INTEGER);
SELECT DISTINCT vt1.c1, vt0.c1 FROM v0 LEFT OUTER JOIN vt0 ON CASE WHEN ((vt1.c0)>>(vt1.c0)) THEN (vt1.c0 IN ()) END INNER JOIN vt1 ON ((CASE vt0.c1  WHEN x'a6bde5fd' THEN vt1.c1 END) IS TRUE);
SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT ALL vt2.c0 FROM vt2 WHERE (CAST(CAST(vt2.c0 AS BLOB) AS REAL)) GROUP BY vt2.c0 UNION SELECT ALL vt2.c0 FROM vt2 WHERE ((NOT (CAST(CAST(vt2.c0 AS BLOB) AS REAL)))) GROUP BY vt2.c0 UNION SELECT ALL vt2.c0 FROM vt2 WHERE (((CAST(CAST(vt2.c0 AS BLOB) AS REAL)) ISNULL)) GROUP BY vt2.c0;
SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT vt1.c0, rt0.c1, vt0.c1, rt0.c4, vt0.c0 FROM rt0, vt1, vt0, v0, vt2 GROUP BY vt1.c0, rt0.c1, vt0.c1, rt0.c4, vt0.c0;
SELECT vt1.c0, rt0.c1, vt0.c1, rt0.c4, vt0.c0 FROM rt0, vt1, vt0, v0, vt2 GROUP BY vt1.c0, rt0.c1, vt0.c1, rt0.c4, vt0.c0 HAVING (((rt0.c0 IN ()))<=(CAST(vt0.c0 AS REAL))) UNION ALL SELECT vt1.c0, rt0.c1, vt0.c1, rt0.c4, vt0.c0 FROM rt0, vt1, vt0, v0, vt2 GROUP BY vt1.c0, rt0.c1, vt0.c1, rt0.c4, vt0.c0 HAVING (NOT ((((rt0.c0 IN ()))<=(CAST(vt0.c0 AS REAL))))) UNION ALL SELECT vt1.c0, rt0.c1, vt0.c1, rt0.c4, vt0.c0 FROM rt0, vt1, vt0, v0, vt2 GROUP BY vt1.c0, rt0.c1, vt0.c1, rt0.c4, vt0.c0 HAVING (((((rt0.c0 IN ()))<=(CAST(vt0.c0 AS REAL)))) ISNULL);
SELECT vt1.c0, rt0.c1, vt0.c1, rt0.c4, vt0.c0 FROM rt0, vt1, vt0, v0, vt2 GROUP BY vt1.c0, rt0.c1, vt0.c1, rt0.c4, vt0.c0;
SELECT vt1.c0, rt0.c1, vt0.c1, rt0.c4, vt0.c0 FROM rt0, vt1, vt0, v0, vt2 GROUP BY vt1.c0, rt0.c1, vt0.c1, rt0.c4, vt0.c0 HAVING (((rt0.c0 IN ()))<=(CAST(vt0.c0 AS REAL))) UNION ALL SELECT vt1.c0, rt0.c1, vt0.c1, rt0.c4, vt0.c0 FROM rt0, vt1, vt0, v0, vt2 GROUP BY vt1.c0, rt0.c1, vt0.c1, rt0.c4, vt0.c0 HAVING (NOT ((((rt0.c0 IN ()))<=(CAST(vt0.c0 AS REAL))))) UNION ALL SELECT vt1.c0, rt0.c1, vt0.c1, rt0.c4, vt0.c0 FROM rt0, vt1, vt0, v0, vt2 GROUP BY vt1.c0, rt0.c1, vt0.c1, rt0.c4, vt0.c0 HAVING (((((rt0.c0 IN ()))<=(CAST(vt0.c0 AS REAL)))) ISNULL);
SELECT vt1.c0, rt0.c1, vt0.c1, rt0.c4, vt0.c0 FROM rt0, vt1, vt0, v0, vt2 GROUP BY vt1.c0, rt0.c1, vt0.c1, rt0.c4, vt0.c0;
SELECT ALL SUM(((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c0)) COLLATE NOCASE) FROM rt0;
SELECT ALL rt0.c4, rt0.c0, rt0.c1 FROM rt0, vt2;
SELECT ALL rt0.c4, rt0.c0, rt0.c1 FROM rt0, vt2 WHERE ((NOT ((((-540922760))==((rt0.c4)))))) UNION ALL SELECT rt0.c4, rt0.c0, rt0.c1 FROM rt0, vt2 WHERE ((NOT ((NOT ((((-540922760))==((rt0.c4)))))))) UNION ALL SELECT rt0.c4, rt0.c0, rt0.c1 FROM rt0, vt2 WHERE ((((NOT ((((-540922760))=((rt0.c4)))))) ISNULL));
SELECT ALL rt0.c4, rt0.c0, rt0.c1 FROM rt0, vt2;
SELECT DISTINCT vt0.c0, vt1.c0, vt0.c1, vt1.c1 FROM vt1, vt0, v0;
SELECT DISTINCT vt0.c0, vt1.c0, vt0.c1, vt1.c1 FROM vt1, vt0, v0 WHERE (CAST(((((v0.c0)OR(v0.c0)))OR(v0.c0)) AS NUMERIC)) UNION SELECT DISTINCT vt0.c0, vt1.c0, vt0.c1, vt1.c1 FROM vt1, vt0, v0 WHERE ((NOT (CAST(((((v0.c0)OR(v0.c0)))OR(v0.c0)) AS NUMERIC)))) UNION SELECT DISTINCT vt0.c0, vt1.c0, vt0.c1, vt1.c1 FROM vt1, vt0, v0 WHERE (((CAST(((((v0.c0)OR(v0.c0)))OR(v0.c0)) AS NUMERIC)) ISNULL));
SELECT DISTINCT vt0.c0, vt1.c0, vt0.c1, vt1.c1 FROM vt1, vt0, v0;
SELECT ALL rt0.c0, vt1.c0, rt0.c3, rt0.c4, vt0.c1, rt0.c2, vt2.c0 FROM vt2, vt0, rt0, v0, vt1 GROUP BY rt0.c0, vt1.c0, rt0.c3, rt0.c4, vt0.c1, rt0.c2, vt2.c0;
SELECT ALL rt0.c0, vt1.c0, rt0.c3, rt0.c4, vt0.c1, rt0.c2, vt2.c0 FROM vt2, vt0, rt0, v0, vt1 WHERE (CAST(MIN(vt0.c1, vt2.c0, rt0.c1, NULL) AS BLOB)) GROUP BY rt0.c0, vt1.c0, rt0.c3, rt0.c4, vt0.c1, rt0.c2, vt2.c0 UNION SELECT rt0.c0, vt1.c0, rt0.c3, rt0.c4, vt0.c1, rt0.c2, vt2.c0 FROM vt2, vt0, rt0, v0, vt1 WHERE ((NOT (CAST(MIN(vt0.c1, vt2.c0, rt0.c1, NULL) AS BLOB)))) GROUP BY rt0.c0, vt1.c0, rt0.c3, rt0.c4, vt0.c1, rt0.c2, vt2.c0 UNION SELECT rt0.c0, vt1.c0, rt0.c3, rt0.c4, vt0.c1, rt0.c2, vt2.c0 FROM vt2, vt0, rt0, v0, vt1 WHERE (((CAST(MIN(vt0.c1, vt2.c0, rt0.c1, NULL) AS BLOB)) ISNULL)) GROUP BY rt0.c0, vt1.c0, rt0.c3, rt0.c4, vt0.c1, rt0.c2, vt2.c0;
SELECT ALL rt0.c0, vt1.c0, rt0.c3, rt0.c4, vt0.c1, rt0.c2, vt2.c0 FROM vt2, vt0, rt0, v0, vt1 GROUP BY rt0.c0, vt1.c0, rt0.c3, rt0.c4, vt0.c1, rt0.c2, vt2.c0;
SELECT ALL vt0.c0, v0.c0, vt1.c1, vt1.c0, vt0.c1 FROM v0, vt0, vt1 GROUP BY vt0.c0, v0.c0, vt1.c1, vt1.c0, vt0.c1;
SELECT ALL vt0.c0, v0.c0, vt1.c1, vt1.c0, vt0.c1 FROM v0, vt0, vt1 GROUP BY vt0.c0, v0.c0, vt1.c1, vt1.c0, vt0.c1 HAVING (((((COUNT(SUM(COUNT(vt0.c1))))) BETWEEN ((SUM(v0.c0))) AND ((vt0.c0))))<=(CASE WHEN COUNT(vt1.c1) THEN vt1.c0 ELSE vt1.c0 END)) UNION ALL SELECT vt0.c0, v0.c0, vt1.c1, vt1.c0, vt0.c1 FROM v0, vt0, vt1 GROUP BY vt0.c0, v0.c0, vt1.c1, vt1.c0, vt0.c1 HAVING (NOT ((((((COUNT(SUM(COUNT(vt0.c1))))) BETWEEN ((SUM(v0.c0))) AND ((vt0.c0))))<=(CASE WHEN COUNT(vt1.c1) THEN vt1.c0 ELSE vt1.c0 END)))) UNION ALL SELECT ALL vt0.c0, v0.c0, vt1.c1, vt1.c0, vt0.c1 FROM v0, vt0, vt1 GROUP BY vt0.c0, v0.c0, vt1.c1, vt1.c0, vt0.c1 HAVING (((((((COUNT(SUM(COUNT(vt0.c1))))) BETWEEN ((SUM(v0.c0))) AND ((vt0.c0))))<=(CASE WHEN COUNT(vt1.c1) THEN vt1.c0 ELSE vt1.c0 END))) ISNULL);
SELECT vt2.c0 FROM vt2;
SELECT vt2.c0 FROM vt2 WHERE (((('')<=(vt2.c0)) IN ())) UNION ALL SELECT vt2.c0 FROM vt2 WHERE ((NOT (((('')<=(vt2.c0)) IN ())))) UNION ALL SELECT vt2.c0 FROM vt2 WHERE (((((('')<=(vt2.c0)) IN ())) ISNULL));
SELECT vt2.c0 FROM vt2;
SELECT DISTINCT * FROM vt2, v0, rt0 LEFT OUTER JOIN vt0 ON ((((vt0.c0) NOT NULL))&(((v0.c0) NOT BETWEEN (vt1.c0) AND (rt0.c0)))) LEFT OUTER JOIN vt1 ON CAST(((rt0.c3) NOT BETWEEN (v0.c0) AND (rt0.c1)) AS BLOB);
SELECT vt2.c0, v0.c0, vt1.c0 FROM vt2, vt1, v0 GROUP BY vt2.c0, v0.c0, vt1.c0;
SELECT ALL vt2.c0, v0.c0, vt1.c0 FROM vt2, vt1, v0 WHERE ((((('') NOTNULL)) BETWEEN (vt1.c1 COLLATE BINARY) AND (CAST(vt2.c0 AS TEXT)))) GROUP BY vt2.c0, v0.c0, vt1.c0 UNION SELECT vt2.c0, v0.c0, vt1.c0 FROM vt2, vt1, v0 WHERE ((NOT ((((('') NOTNULL)) BETWEEN (vt1.c1 COLLATE BINARY) AND (CAST(vt2.c0 AS TEXT)))))) GROUP BY vt2.c0, v0.c0, vt1.c0 UNION SELECT vt2.c0, v0.c0, vt1.c0 FROM vt2, vt1, v0 WHERE ((((((('') NOTNULL)) BETWEEN (vt1.c1 COLLATE BINARY) AND (CAST(vt2.c0 AS TEXT)))) ISNULL)) GROUP BY vt2.c0, v0.c0, vt1.c0;
SELECT vt2.c0, v0.c0, vt1.c0 FROM vt2, vt1, v0 GROUP BY vt2.c0, v0.c0, vt1.c0;
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING COUNT(*) UNION ALL SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING COUNT(*) UNION ALL SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT rt0.c5, rt0.c0, v0.c0 FROM v0, rt0, vt1;
SELECT rt0.c5, rt0.c0, v0.c0 FROM v0, rt0, vt1 WHERE ('43') UNION ALL SELECT rt0.c5, rt0.c0, v0.c0 FROM v0, rt0, vt1 WHERE ((NOT ('43'))) UNION ALL SELECT ALL rt0.c5, rt0.c0, v0.c0 FROM v0, rt0, vt1 WHERE ((('43') ISNULL));
SELECT rt0.c5, rt0.c0, v0.c0 FROM v0, rt0, vt1;
SELECT DISTINCT * FROM v0, vt0, vt2, vt1;
SELECT DISTINCT * FROM v0, vt0, vt2, vt1 WHERE (((~ ('2077400513')) IN ())) UNION SELECT DISTINCT * FROM v0, vt0, vt2, vt1 WHERE ((NOT (((~ ('2077400513')) IN ())))) UNION SELECT DISTINCT * FROM v0, vt0, vt2, vt1 WHERE (((((~ ('2077400513')) IN ())) ISNULL));
SELECT DISTINCT * FROM v0, vt0, vt2, vt1;
SELECT vt1.c1, v0.c0, vt1.c0, vt2.c0 FROM vt2, v0 RIGHT OUTER JOIN vt1 ON (vt1.c0 COLLATE RTRIM IN ()) GROUP BY vt1.c1, v0.c0, vt1.c0, vt2.c0;
SELECT ALL vt1.c1, v0.c0, vt1.c0, vt2.c0 FROM vt2, v0 RIGHT OUTER JOIN vt1 ON (vt1.c0 COLLATE RTRIM IN ()) WHERE ((((vt1.c0) NOTNULL) IN (NULL))) GROUP BY vt1.c1, v0.c0, vt1.c0, vt2.c0 UNION SELECT vt1.c1, v0.c0, vt1.c0, vt2.c0 FROM vt2, v0 RIGHT OUTER JOIN vt1 ON (vt1.c0 COLLATE RTRIM IN ()) WHERE ((NOT ((((vt1.c0) NOTNULL) IN (NULL))))) GROUP BY vt1.c1, v0.c0, vt1.c0, vt2.c0 UNION SELECT vt1.c1, v0.c0, vt1.c0, vt2.c0 FROM vt2, v0 RIGHT OUTER JOIN vt1 ON (vt1.c0 COLLATE RTRIM IN ()) WHERE ((((((vt1.c0) NOTNULL) IN (NULL))) ISNULL)) GROUP BY vt1.c1, v0.c0, vt1.c0, vt2.c0;
SELECT vt1.c1, v0.c0, vt1.c0, vt2.c0 FROM vt2, v0 RIGHT OUTER JOIN vt1 ON (vt1.c0 COLLATE RTRIM IN ()) GROUP BY vt1.c1, v0.c0, vt1.c0, vt2.c0;
SELECT ALL vt0.c0, vt0.c1 FROM vt0, v0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0, v0 GROUP BY vt0.c0, vt0.c1 HAVING SUM((AVG(vt0.c1) IN ())) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt0, v0 GROUP BY vt0.c0, vt0.c1 HAVING (NOT (SUM((AVG(vt0.c1) IN ())))) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt0, v0 GROUP BY vt0.c0, vt0.c1 HAVING ((SUM((AVG(vt0.c1) IN ()))) ISNULL);
SELECT ALL vt0.c0, vt0.c1 FROM vt0, v0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0, v0 GROUP BY vt0.c0, vt0.c1 HAVING SUM((AVG(vt0.c1) IN ())) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt0, v0 GROUP BY vt0.c0, vt0.c1 HAVING (NOT (SUM((AVG(vt0.c1) IN ())))) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt0, v0 GROUP BY vt0.c0, vt0.c1 HAVING ((SUM((AVG(vt0.c1) IN ()))) ISNULL);
SELECT ALL vt0.c0, vt0.c1 FROM vt0, v0 GROUP BY vt0.c0, vt0.c1;
SELECT * FROM vt1, rt0, vt0, vt2 INNER JOIN v0 ON (((((vt2.c0)|(vt0.c1))))>=(((((vt0.c1))>=((vt1.c0))))));
SELECT ALL * FROM vt1, rt0, vt0, vt2 INNER JOIN v0 ON (((((vt2.c0)|(vt0.c1))))>=(((((vt0.c1))>=((vt1.c0)))))) WHERE (IFNULL((((rt0.c4)) BETWEEN ((rt0.c4)) AND ((vt0.c1))), ((vt0.c0) IS TRUE))) UNION ALL SELECT ALL * FROM vt1, rt0, vt0, vt2 INNER JOIN v0 ON (((((vt2.c0)|(vt0.c1))))>=(((((vt0.c1))>=((vt1.c0)))))) WHERE ((NOT (IFNULL((((rt0.c4)) BETWEEN ((rt0.c4)) AND ((vt0.c1))), ((vt0.c0) IS TRUE))))) UNION ALL SELECT ALL * FROM vt1, rt0, vt0, vt2 INNER JOIN v0 ON (((((vt2.c0)|(vt0.c1))))>=(((((vt0.c1))>=((vt1.c0)))))) WHERE (((IFNULL((((rt0.c4)) BETWEEN ((rt0.c4)) AND ((vt0.c1))), ((vt0.c0) IS TRUE))) ISNULL));
SELECT * FROM vt1, rt0, vt0, vt2 INNER JOIN v0 ON (((((vt2.c0)|(vt0.c1))))>=(((((vt0.c1))>=((vt1.c0))))));
SELECT DISTINCT * FROM vt0 FULL OUTER JOIN vt1 ON ((((((vt1.c1) BETWEEN (vt1.c1) AND (vt1.c1)))OR(x'f463' COLLATE BINARY)))AND(((((vt0.c0)OR(vt1.c0)))OR(vt0.c1))));
SELECT DISTINCT * FROM vt0 FULL OUTER JOIN vt1 ON ((((((vt1.c1) BETWEEN (vt1.c1) AND (vt1.c1)))OR(x'f463' COLLATE BINARY)))AND(((((vt0.c0)OR(vt1.c0)))OR(vt0.c1)))) WHERE (CAST(CASE vt1.c1  WHEN vt0.c0 THEN vt0.c0 ELSE vt1.c0 END AS REAL)) UNION SELECT DISTINCT * FROM vt0 FULL OUTER JOIN vt1 ON ((((((vt1.c1) BETWEEN (vt1.c1) AND (vt1.c1)))OR(x'f463' COLLATE BINARY)))AND(((((vt0.c0)OR(vt1.c0)))OR(vt0.c1)))) WHERE ((NOT (CAST(CASE vt1.c1  WHEN vt0.c0 THEN vt0.c0 ELSE vt1.c0 END AS REAL)))) UNION SELECT DISTINCT * FROM vt0 FULL OUTER JOIN vt1 ON ((((((vt1.c1) BETWEEN (vt1.c1) AND (vt1.c1)))OR(x'f463' COLLATE BINARY)))AND(((((vt0.c0)OR(vt1.c0)))OR(vt0.c1)))) WHERE (((CAST(CASE vt1.c1  WHEN vt0.c0 THEN vt0.c0 ELSE vt1.c0 END AS REAL)) ISNULL));
SELECT DISTINCT * FROM vt0 FULL OUTER JOIN vt1 ON ((((((vt1.c1) BETWEEN (vt1.c1) AND (vt1.c1)))OR(x'f463' COLLATE BINARY)))AND(((((vt0.c0)OR(vt1.c0)))OR(vt0.c1))));
SELECT rt0.c0, rt0.c4, rt0.c5, vt0.c0, rt0.c3, v0.c0, vt2.c0, vt0.c1, rt0.c1 FROM v0, vt0, vt2, rt0 GROUP BY rt0.c0, rt0.c4, rt0.c5, vt0.c0, rt0.c3, v0.c0, vt2.c0, vt0.c1, rt0.c1;
SELECT ALL rt0.c0, rt0.c4, rt0.c5, vt0.c0, rt0.c3, v0.c0, vt2.c0, vt0.c1, rt0.c1 FROM v0, vt0, vt2, rt0 WHERE ((CAST(rt0.c4 AS TEXT) IN ())) GROUP BY rt0.c0, rt0.c4, rt0.c5, vt0.c0, rt0.c3, v0.c0, vt2.c0, vt0.c1, rt0.c1 UNION SELECT rt0.c0, rt0.c4, rt0.c5, vt0.c0, rt0.c3, v0.c0, vt2.c0, vt0.c1, rt0.c1 FROM v0, vt0, vt2, rt0 WHERE ((NOT ((CAST(rt0.c4 AS TEXT) IN ())))) GROUP BY rt0.c0, rt0.c4, rt0.c5, vt0.c0, rt0.c3, v0.c0, vt2.c0, vt0.c1, rt0.c1 UNION SELECT rt0.c0, rt0.c4, rt0.c5, vt0.c0, rt0.c3, v0.c0, vt2.c0, vt0.c1, rt0.c1 FROM v0, vt0, vt2, rt0 WHERE ((((CAST(rt0.c4 AS TEXT) IN ())) ISNULL)) GROUP BY rt0.c0, rt0.c4, rt0.c5, vt0.c0, rt0.c3, v0.c0, vt2.c0, vt0.c1, rt0.c1;
SELECT rt0.c0, rt0.c4, rt0.c5, vt0.c0, rt0.c3, v0.c0, vt2.c0, vt0.c1, rt0.c1 FROM v0, vt0, vt2, rt0 GROUP BY rt0.c0, rt0.c4, rt0.c5, vt0.c0, rt0.c3, v0.c0, vt2.c0, vt0.c1, rt0.c1;
SELECT ALL vt0.c0, vt0.c1, v0.c0, vt2.c0 FROM vt2, v0, vt0 GROUP BY vt0.c0, vt0.c1, v0.c0, vt2.c0;
SELECT ALL vt0.c0, vt0.c1, v0.c0, vt2.c0 FROM vt2, v0, vt0 GROUP BY vt0.c0, vt0.c1, v0.c0, vt2.c0 HAVING MAX(GROUP_CONCAT(0.9445651843931324)) UNION ALL SELECT ALL vt0.c0, vt0.c1, v0.c0, vt2.c0 FROM vt2, v0, vt0 GROUP BY vt0.c0, vt0.c1, v0.c0, vt2.c0 HAVING (NOT (MAX(GROUP_CONCAT(0.9445651843931324)))) UNION ALL SELECT ALL vt0.c0, vt0.c1, v0.c0, vt2.c0 FROM vt2, v0, vt0 GROUP BY vt0.c0, vt0.c1, v0.c0, vt2.c0 HAVING ((MAX(GROUP_CONCAT(0.9445651843931324))) ISNULL);
SELECT rt0.c1, vt0.c0, rt0.c4 FROM vt0, vt1, rt0;
SELECT rt0.c1, vt0.c0, rt0.c4 FROM vt0, vt1, rt0 WHERE ((- (((rt0.c0)<=(vt1.c0))))) UNION ALL SELECT ALL rt0.c1, vt0.c0, rt0.c4 FROM vt0, vt1, rt0 WHERE ((NOT ((- (((rt0.c0)<=(vt1.c0))))))) UNION ALL SELECT rt0.c1, vt0.c0, rt0.c4 FROM vt0, vt1, rt0 WHERE ((((- (((rt0.c0)<=(vt1.c0))))) ISNULL));
SELECT rt0.c1, vt0.c0, rt0.c4 FROM vt0, vt1, rt0;
SELECT DISTINCT v0.c0, vt0.c0 FROM v0, vt2, vt0;
SELECT DISTINCT v0.c0, vt0.c0 FROM v0, vt2, vt0 WHERE (((vt0.c0) NOT BETWEEN (vt0.c0) AND ('-50414583')) COLLATE BINARY) UNION SELECT DISTINCT v0.c0, vt0.c0 FROM v0, vt2, vt0 WHERE ((NOT (((vt0.c0) NOT BETWEEN (vt0.c0) AND ('-50414583')) COLLATE BINARY))) UNION SELECT DISTINCT v0.c0, vt0.c0 FROM v0, vt2, vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c0) AND ('-50414583')) COLLATE BINARY) ISNULL));
SELECT DISTINCT v0.c0, vt0.c0 FROM v0, vt2, vt0;
SELECT ALL rt0.c2 FROM rt0, vt1, vt0, v0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0, vt1, vt0, v0 WHERE (vt0.c0) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0, vt1, vt0, v0 WHERE ((NOT (vt0.c0))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0, vt1, vt0, v0 WHERE (((vt0.c0) ISNULL)) GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0, vt1, vt0, v0 GROUP BY rt0.c2;
SELECT ALL vt0.c0, rt0.c0 FROM rt0, vt0, vt1, vt2 GROUP BY vt0.c0, rt0.c0;
SELECT vt0.c0, rt0.c0 FROM rt0, vt0, vt1, vt2 GROUP BY vt0.c0, rt0.c0 HAVING (rt0.c2 IN ()) COLLATE RTRIM UNION ALL SELECT vt0.c0, rt0.c0 FROM rt0, vt0, vt1, vt2 GROUP BY vt0.c0, rt0.c0 HAVING (NOT ((rt0.c2 IN ()) COLLATE RTRIM)) UNION ALL SELECT vt0.c0, rt0.c0 FROM rt0, vt0, vt1, vt2 GROUP BY vt0.c0, rt0.c0 HAVING (((rt0.c2 IN ()) COLLATE RTRIM) ISNULL);
SELECT ALL vt0.c0, rt0.c0 FROM rt0, vt0, vt1, vt2 GROUP BY vt0.c0, rt0.c0;
SELECT vt0.c0, rt0.c0 FROM rt0, vt0, vt1, vt2 GROUP BY vt0.c0, rt0.c0 HAVING (rt0.c2 IN ()) COLLATE RTRIM UNION ALL SELECT vt0.c0, rt0.c0 FROM rt0, vt0, vt1, vt2 GROUP BY vt0.c0, rt0.c0 HAVING (NOT ((rt0.c2 IN ()) COLLATE RTRIM)) UNION ALL SELECT vt0.c0, rt0.c0 FROM rt0, vt0, vt1, vt2 GROUP BY vt0.c0, rt0.c0 HAVING (((rt0.c2 IN ()) COLLATE RTRIM) ISNULL);
SELECT ALL vt0.c0, rt0.c0 FROM rt0, vt0, vt1, vt2 GROUP BY vt0.c0, rt0.c0;
SELECT ALL vt1.c1, vt1.c0 FROM vt2, vt1;
SELECT vt1.c1, vt1.c0 FROM vt2, vt1 WHERE ((- ((vt1.c0 IN ())))) UNION ALL SELECT vt1.c1, vt1.c0 FROM vt2, vt1 WHERE ((NOT ((- ((vt1.c0 IN ())))))) UNION ALL SELECT vt1.c1, vt1.c0 FROM vt2, vt1 WHERE ((((- ((vt1.c0 IN ())))) ISNULL));
SELECT ALL vt1.c1, vt1.c0 FROM vt2, vt1;
SELECT DISTINCT * FROM vt0 LEFT OUTER JOIN vt1 ON (~ (vt1.c0)) COLLATE RTRIM;
SELECT DISTINCT * FROM vt0 LEFT OUTER JOIN vt1 ON (~ (vt1.c0)) COLLATE RTRIM WHERE (((((vt0.c1)&(vt0.c0)))LIKE(((vt0.c0) BETWEEN (vt1.c1) AND (vt0.c1))))) UNION SELECT DISTINCT * FROM vt0 LEFT OUTER JOIN vt1 ON (~ (vt1.c0)) COLLATE RTRIM WHERE ((NOT (((((vt0.c1)&(vt0.c0)))LIKE(((vt0.c0) BETWEEN (vt1.c1) AND (vt0.c1))))))) UNION SELECT DISTINCT * FROM vt0 LEFT OUTER JOIN vt1 ON (~ (vt1.c0)) COLLATE RTRIM WHERE (((((((vt0.c1)&(vt0.c0)))LIKE(((vt0.c0) BETWEEN (vt1.c1) AND (vt0.c1))))) ISNULL));
SELECT DISTINCT * FROM vt0 LEFT OUTER JOIN vt1 ON (~ (vt1.c0)) COLLATE RTRIM;
SELECT ALL vt1.c1, vt2.c0, rt0.c5, rt0.c4, rt0.c3, vt1.c0, rt0.c0 FROM vt2, vt1, rt0 GROUP BY vt1.c1, vt2.c0, rt0.c5, rt0.c4, rt0.c3, vt1.c0, rt0.c0;
SELECT vt1.c1, vt2.c0, rt0.c5, rt0.c4, rt0.c3, vt1.c0, rt0.c0 FROM vt2, vt1, rt0 WHERE (((((CAST(rt0.c4 AS BLOB))AND(rt0.c3)))OR((- (rt0.c5))))) GROUP BY vt1.c1, vt2.c0, rt0.c5, rt0.c4, rt0.c3, vt1.c0, rt0.c0 UNION SELECT ALL vt1.c1, vt2.c0, rt0.c5, rt0.c4, rt0.c3, vt1.c0, rt0.c0 FROM vt2, vt1, rt0 WHERE ((NOT (((((CAST(rt0.c4 AS BLOB))AND(rt0.c3)))OR((- (rt0.c5))))))) GROUP BY vt1.c1, vt2.c0, rt0.c5, rt0.c4, rt0.c3, vt1.c0, rt0.c0 UNION SELECT ALL vt1.c1, vt2.c0, rt0.c5, rt0.c4, rt0.c3, vt1.c0, rt0.c0 FROM vt2, vt1, rt0 WHERE (((((((CAST(rt0.c4 AS BLOB))AND(rt0.c3)))OR((- (rt0.c5))))) ISNULL)) GROUP BY vt1.c1, vt2.c0, rt0.c5, rt0.c4, rt0.c3, vt1.c0, rt0.c0;
SELECT ALL vt1.c1, vt2.c0, rt0.c5, rt0.c4, rt0.c3, vt1.c0, rt0.c0 FROM vt2, vt1, rt0 GROUP BY vt1.c1, vt2.c0, rt0.c5, rt0.c4, rt0.c3, vt1.c0, rt0.c0;
SELECT rt0.c1, rt0.c2, rt0.c3, v0.c0 FROM v0 CROSS JOIN vt2 ON (((CAST(v0.c0 AS BLOB)))!=((((rt0.c3) ISNULL)))) RIGHT OUTER JOIN rt0 ON rt0.c0 COLLATE NOCASE GROUP BY rt0.c1, rt0.c2, rt0.c3, v0.c0;
SELECT * FROM vt1;
SELECT * FROM vt1 WHERE ((CASE vt1.c1  WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c1 END IN (((vt1.c1)-(vt1.c0)), ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))) UNION ALL SELECT * FROM vt1 WHERE ((NOT ((CASE vt1.c1  WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c1 END IN (((vt1.c1)-(vt1.c0)), ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))))) UNION ALL SELECT ALL * FROM vt1 WHERE ((((CASE vt1.c1  WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c1 END IN (((vt1.c1)-(vt1.c0)), ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))) ISNULL));
SELECT * FROM vt1;
SELECT DISTINCT rt0.c1, rt0.c5, rt0.c0, vt2.c0, vt0.c1, rt0.c3, v0.c0 FROM vt0 CROSS JOIN v0 ON 1.084344E7 LEFT OUTER JOIN rt0 ON ((((rt0.c2) ISNULL)) NOT BETWEEN ((~ (rt0.c2))) AND (((rt0.c1) NOTNULL))) LEFT OUTER JOIN vt2 ON ((((TRIM(-3.4172968E7))AND(((rt0.c5) NOT BETWEEN (rt0.c0) AND (rt0.c5)))))AND(rt0.c3));
SELECT DISTINCT rt0.c1, rt0.c5, rt0.c0, vt2.c0, vt0.c1, rt0.c3, v0.c0 FROM vt0 CROSS JOIN v0 ON 1.084344E7 LEFT OUTER JOIN rt0 ON ((((rt0.c2) ISNULL)) NOT BETWEEN ((~ (rt0.c2))) AND (((rt0.c1) NOTNULL))) LEFT OUTER JOIN vt2 ON ((((TRIM(-3.4172968E7))AND(((rt0.c5) NOT BETWEEN (rt0.c0) AND (rt0.c5)))))AND(rt0.c3)) WHERE (CASE rt0.c2 COLLATE BINARY  WHEN ((0.39785188950619443) IS FALSE) THEN (((rt0.c3))!=((rt0.c5))) WHEN (vt0.c0 IN ()) THEN (vt2.c0 IN ()) WHEN CAST(vt0.c1 AS TEXT) THEN '-34172968' END) UNION SELECT DISTINCT rt0.c1, rt0.c5, rt0.c0, vt2.c0, vt0.c1, rt0.c3, v0.c0 FROM vt0 CROSS JOIN v0 ON 1.084344E7 LEFT OUTER JOIN rt0 ON ((((rt0.c2) ISNULL)) NOT BETWEEN ((~ (rt0.c2))) AND (((rt0.c1) NOTNULL))) LEFT OUTER JOIN vt2 ON ((((TRIM(-3.4172968E7))AND(((rt0.c5) NOT BETWEEN (rt0.c0) AND (rt0.c5)))))AND(rt0.c3)) WHERE ((NOT (CASE rt0.c2 COLLATE BINARY  WHEN ((0.39785188950619443) IS FALSE) THEN (((rt0.c3))!=((rt0.c5))) WHEN (vt0.c0 IN ()) THEN (vt2.c0 IN ()) WHEN CAST(vt0.c1 AS TEXT) THEN '-34172968' END))) UNION SELECT DISTINCT rt0.c1, rt0.c5, rt0.c0, vt2.c0, vt0.c1, rt0.c3, v0.c0 FROM vt0 CROSS JOIN v0 ON 1.084344E7 LEFT OUTER JOIN rt0 ON ((((rt0.c2) ISNULL)) NOT BETWEEN ((~ (rt0.c2))) AND (((rt0.c1) NOTNULL))) LEFT OUTER JOIN vt2 ON ((((TRIM(-3.4172968E7))AND(((rt0.c5) NOT BETWEEN (rt0.c0) AND (rt0.c5)))))AND(rt0.c3)) WHERE (((CASE rt0.c2 COLLATE BINARY  WHEN ((0.39785188950619443) IS FALSE) THEN (((rt0.c3))<>((rt0.c5))) WHEN (vt0.c0 IN ()) THEN (vt2.c0 IN ()) WHEN CAST(vt0.c1 AS TEXT) THEN '-34172968' END) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c5, rt0.c0, vt2.c0, vt0.c1, rt0.c3, v0.c0 FROM vt0 CROSS JOIN v0 ON 1.084344E7 LEFT OUTER JOIN rt0 ON ((((rt0.c2) ISNULL)) NOT BETWEEN ((~ (rt0.c2))) AND (((rt0.c1) NOTNULL))) LEFT OUTER JOIN vt2 ON ((((TRIM(-3.4172968E7))AND(((rt0.c5) NOT BETWEEN (rt0.c0) AND (rt0.c5)))))AND(rt0.c3));
SELECT ALL rt0.c4 FROM v0, rt0 NATURAL JOIN vt1 GROUP BY rt0.c4;
SELECT rt0.c4 FROM v0, rt0 NATURAL JOIN vt1 WHERE ((((((rt0.c5)) NOT BETWEEN ((0.9072713642549135)) AND ((rt0.c2))))GLOB((rt0.c3 IN ())))) GROUP BY rt0.c4 UNION SELECT rt0.c4 FROM v0, rt0 NATURAL JOIN vt1 WHERE ((NOT ((((((rt0.c5)) NOT BETWEEN ((0.9072713642549135)) AND ((rt0.c2))))GLOB((rt0.c3 IN ())))))) GROUP BY rt0.c4 UNION SELECT rt0.c4 FROM v0, rt0 NATURAL JOIN vt1 WHERE ((((((((rt0.c5)) NOT BETWEEN ((0.9072713642549135)) AND ((rt0.c2))))GLOB((rt0.c3 IN ())))) ISNULL)) GROUP BY rt0.c4;
SELECT ALL rt0.c4 FROM v0, rt0 NATURAL JOIN vt1 GROUP BY rt0.c4;
SELECT ALL rt0.c0, vt1.c1, vt0.c0, rt0.c5, vt0.c1 FROM rt0, vt0, vt1, v0 GROUP BY rt0.c0, vt1.c1, vt0.c0, rt0.c5, vt0.c1;
SELECT rt0.c0, vt1.c1, vt0.c0, rt0.c5, vt0.c1 FROM rt0, vt0, vt1, v0 GROUP BY rt0.c0, vt1.c1, vt0.c0, rt0.c5, vt0.c1 HAVING GROUP_CONCAT(vt0.c1) UNION ALL SELECT rt0.c0, vt1.c1, vt0.c0, rt0.c5, vt0.c1 FROM rt0, vt0, vt1, v0 GROUP BY rt0.c0, vt1.c1, vt0.c0, rt0.c5, vt0.c1 HAVING (NOT (GROUP_CONCAT(vt0.c1))) UNION ALL SELECT ALL rt0.c0, vt1.c1, vt0.c0, rt0.c5, vt0.c1 FROM rt0, vt0, vt1, v0 GROUP BY rt0.c0, vt1.c1, vt0.c0, rt0.c5, vt0.c1 HAVING ((GROUP_CONCAT(vt0.c1)) ISNULL);
SELECT ALL rt0.c0, vt1.c1, vt0.c0, rt0.c5, vt0.c1 FROM rt0, vt0, vt1, v0 GROUP BY rt0.c0, vt1.c1, vt0.c0, rt0.c5, vt0.c1;
SELECT rt0.c0, vt1.c1, vt0.c0, rt0.c5, vt0.c1 FROM rt0, vt0, vt1, v0 GROUP BY rt0.c0, vt1.c1, vt0.c0, rt0.c5, vt0.c1 HAVING GROUP_CONCAT(vt0.c1) UNION ALL SELECT rt0.c0, vt1.c1, vt0.c0, rt0.c5, vt0.c1 FROM rt0, vt0, vt1, v0 GROUP BY rt0.c0, vt1.c1, vt0.c0, rt0.c5, vt0.c1 HAVING (NOT (GROUP_CONCAT(vt0.c1))) UNION ALL SELECT ALL rt0.c0, vt1.c1, vt0.c0, rt0.c5, vt0.c1 FROM rt0, vt0, vt1, v0 GROUP BY rt0.c0, vt1.c1, vt0.c0, rt0.c5, vt0.c1 HAVING ((GROUP_CONCAT(vt0.c1)) ISNULL);
SELECT ALL rt0.c0, vt1.c1, vt0.c0, rt0.c5, vt0.c1 FROM rt0, vt0, vt1, v0 GROUP BY rt0.c0, vt1.c1, vt0.c0, rt0.c5, vt0.c1;
SELECT ALL MIN(16311852) FROM rt0, vt1, vt2, v0, vt0 ORDER BY (((((rt0.c4)=(vt1.c1))))<((NULL)));
SELECT ALL v0.c0 FROM v0;
SELECT ALL v0.c0 FROM v0 WHERE (CAST((v0.c0 IN (v0.c0)) AS BLOB)) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE ((NOT (CAST((v0.c0 IN (v0.c0)) AS BLOB)))) UNION ALL SELECT v0.c0 FROM v0 WHERE (((CAST((v0.c0 IN (v0.c0)) AS BLOB)) ISNULL));
SELECT ALL v0.c0 FROM v0;
SELECT DISTINCT v0.c0, vt2.c0, vt1.c1, vt1.c0 FROM vt2, v0 NATURAL JOIN vt1;
SELECT DISTINCT v0.c0, vt2.c0, vt1.c1, vt1.c0 FROM vt2, v0 NATURAL JOIN vt1 WHERE (CAST(TRIM(DISTINCT v0.c0, vt1.c1) AS REAL)) UNION SELECT DISTINCT v0.c0, vt2.c0, vt1.c1, vt1.c0 FROM vt2, v0 NATURAL JOIN vt1 WHERE ((NOT (CAST(TRIM(DISTINCT v0.c0, vt1.c1) AS REAL)))) UNION SELECT DISTINCT v0.c0, vt2.c0, vt1.c1, vt1.c0 FROM vt2, v0 NATURAL JOIN vt1 WHERE (((CAST(TRIM(DISTINCT v0.c0, vt1.c1) AS REAL)) ISNULL));
SELECT DISTINCT v0.c0, vt2.c0, vt1.c1, vt1.c0 FROM vt2, v0 NATURAL JOIN vt1;
SELECT ALL rt0.c3, rt0.c1, rt0.c5, vt1.c1, vt1.c0 FROM vt1, rt0 GROUP BY rt0.c3, rt0.c1, rt0.c5, vt1.c1, vt1.c0;
SELECT rt0.c3, rt0.c1, rt0.c5, vt1.c1, vt1.c0 FROM vt1, rt0 WHERE (((((rt0.c4)AND(vt1.c1)))!=((rt0.c2 IN ())))) GROUP BY rt0.c3, rt0.c1, rt0.c5, vt1.c1, vt1.c0 UNION SELECT ALL rt0.c3, rt0.c1, rt0.c5, vt1.c1, vt1.c0 FROM vt1, rt0 WHERE ((NOT (((((rt0.c4)AND(vt1.c1)))<>((rt0.c2 IN ())))))) GROUP BY rt0.c3, rt0.c1, rt0.c5, vt1.c1, vt1.c0 UNION SELECT ALL rt0.c3, rt0.c1, rt0.c5, vt1.c1, vt1.c0 FROM vt1, rt0 WHERE (((((((rt0.c4)AND(vt1.c1)))!=((rt0.c2 IN ())))) ISNULL)) GROUP BY rt0.c3, rt0.c1, rt0.c5, vt1.c1, vt1.c0;
SELECT ALL rt0.c3, rt0.c1, rt0.c5, vt1.c1, vt1.c0 FROM vt1, rt0 GROUP BY rt0.c3, rt0.c1, rt0.c5, vt1.c1, vt1.c0;
SELECT rt0.c3, rt0.c1, rt0.c5, rt0.c4, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c3, rt0.c1, rt0.c5, rt0.c4, rt0.c2, rt0.c0;
SELECT rt0.c3, rt0.c1, rt0.c5, rt0.c4, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c3, rt0.c1, rt0.c5, rt0.c4, rt0.c2, rt0.c0 HAVING ((GROUP_CONCAT(AVG(rt0.c1)))%(CAST(MIN(rt0.c1) AS BLOB))) UNION ALL SELECT ALL rt0.c3, rt0.c1, rt0.c5, rt0.c4, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c3, rt0.c1, rt0.c5, rt0.c4, rt0.c2, rt0.c0 HAVING (NOT (((GROUP_CONCAT(AVG(rt0.c1)))%(CAST(MIN(rt0.c1) AS BLOB))))) UNION ALL SELECT ALL rt0.c3, rt0.c1, rt0.c5, rt0.c4, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c3, rt0.c1, rt0.c5, rt0.c4, rt0.c2, rt0.c0 HAVING ((((GROUP_CONCAT(AVG(rt0.c1)))%(CAST(MIN(rt0.c1) AS BLOB)))) ISNULL);
SELECT ALL * FROM v0 CROSS JOIN rt0 ON ((rt0.c3) BETWEEN ((((rt0.c2))==((rt0.c5)))) AND ('>5K!'));
SELECT ALL * FROM v0 CROSS JOIN rt0 ON ((rt0.c3) BETWEEN ((((rt0.c2))=((rt0.c5)))) AND ('>5K!')) WHERE (CAST((NOT (rt0.c2)) AS NUMERIC)) UNION ALL SELECT ALL * FROM v0 CROSS JOIN rt0 ON ((rt0.c3) BETWEEN ((((rt0.c2))=((rt0.c5)))) AND ('>5K!')) WHERE ((NOT (CAST((NOT (rt0.c2)) AS NUMERIC)))) UNION ALL SELECT ALL * FROM v0 CROSS JOIN rt0 ON ((rt0.c3) BETWEEN ((((rt0.c2))=((rt0.c5)))) AND ('>5K!')) WHERE (((CAST((NOT (rt0.c2)) AS NUMERIC)) ISNULL));
SELECT ALL * FROM v0 CROSS JOIN rt0 ON ((rt0.c3) BETWEEN ((((rt0.c2))==((rt0.c5)))) AND ('>5K!'));
SELECT DISTINCT rt0.c2, vt2.c0 FROM vt0, vt2, rt0, v0;
SELECT DISTINCT rt0.c2, vt2.c0 FROM vt0, vt2, rt0, v0 WHERE (TRIM(DISTINCT ((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c2)), ((((rt0.c4)OR('-417466798')))AND(v0.c0)))) UNION SELECT DISTINCT rt0.c2, vt2.c0 FROM vt0, vt2, rt0, v0 WHERE ((NOT (TRIM(DISTINCT ((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c2)), ((((rt0.c4)OR('-417466798')))AND(v0.c0)))))) UNION SELECT DISTINCT rt0.c2, vt2.c0 FROM vt0, vt2, rt0, v0 WHERE (((TRIM(DISTINCT ((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c2)), ((((rt0.c4)OR('-417466798')))AND(v0.c0)))) ISNULL));
SELECT DISTINCT rt0.c2, vt2.c0 FROM vt0, vt2, rt0, v0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE ((((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END, CASE WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c1 WHEN NULL THEN vt1.c0 ELSE vt1.c0 END, NULL))>((((vt1.c1) NOT NULL), CAST(vt1.c0 AS REAL), SQLITE_COMPILEOPTION_GET('ᏽD'))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT ((((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END, CASE WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c1 WHEN NULL THEN vt1.c0 ELSE vt1.c0 END, NULL))>((((vt1.c1) NOT NULL), CAST(vt1.c0 AS REAL), SQLITE_COMPILEOPTION_GET('ᏽD'))))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((((((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END, CASE WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c1 WHEN NULL THEN vt1.c0 ELSE vt1.c0 END, NULL))>((((vt1.c1) NOT NULL), CAST(vt1.c0 AS REAL), SQLITE_COMPILEOPTION_GET('ᏽD'))))) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL rt0.c3, rt0.c2, vt0.c0, vt2.c0, rt0.c0, rt0.c4 FROM rt0 FULL OUTER JOIN vt0 ON CAST(((0.8530134285216258) NOT BETWEEN (rt0.c4) AND (rt0.c3)) AS TEXT) RIGHT OUTER JOIN vt2 ON CASE ((vt2.c0)LIKE(vt2.c0))  WHEN json_object(rt0.c3, rt0.c3) THEN ((rt0.c1)/(rt0.c1)) END GROUP BY rt0.c3, rt0.c2, vt0.c0, vt2.c0, rt0.c0, rt0.c4;
SELECT rt0.c3, rt0.c2, vt0.c0, vt2.c0, rt0.c0, rt0.c4 FROM rt0 FULL OUTER JOIN vt0 ON CAST(((0.8530134285216258) NOT BETWEEN (rt0.c4) AND (rt0.c3)) AS TEXT) RIGHT OUTER JOIN vt2 ON CASE ((vt2.c0)LIKE(vt2.c0))  WHEN json_object(rt0.c3, rt0.c3) THEN ((rt0.c1)/(rt0.c1)) END GROUP BY rt0.c3, rt0.c2, vt0.c0, vt2.c0, rt0.c0, rt0.c4 HAVING COUNT(NULL) UNION ALL SELECT ALL rt0.c3, rt0.c2, vt0.c0, vt2.c0, rt0.c0, rt0.c4 FROM rt0 FULL OUTER JOIN vt0 ON CAST(((0.8530134285216258) NOT BETWEEN (rt0.c4) AND (rt0.c3)) AS TEXT) RIGHT OUTER JOIN vt2 ON CASE ((vt2.c0)LIKE(vt2.c0))  WHEN json_object(rt0.c3, rt0.c3) THEN ((rt0.c1)/(rt0.c1)) END GROUP BY rt0.c3, rt0.c2, vt0.c0, vt2.c0, rt0.c0, rt0.c4 HAVING (NOT (COUNT(NULL))) UNION ALL SELECT rt0.c3, rt0.c2, vt0.c0, vt2.c0, rt0.c0, rt0.c4 FROM rt0 FULL OUTER JOIN vt0 ON CAST(((0.8530134285216258) NOT BETWEEN (rt0.c4) AND (rt0.c3)) AS TEXT) RIGHT OUTER JOIN vt2 ON CASE ((vt2.c0)LIKE(vt2.c0))  WHEN json_object(rt0.c3, rt0.c3) THEN ((rt0.c1)/(rt0.c1)) END GROUP BY rt0.c3, rt0.c2, vt0.c0, vt2.c0, rt0.c0, rt0.c4 HAVING ((COUNT(NULL)) ISNULL);
SELECT ALL rt0.c3, rt0.c2, vt0.c0, vt2.c0, rt0.c0, rt0.c4 FROM rt0 FULL OUTER JOIN vt0 ON CAST(((0.8530134285216258) NOT BETWEEN (rt0.c4) AND (rt0.c3)) AS TEXT) RIGHT OUTER JOIN vt2 ON CASE ((vt2.c0)LIKE(vt2.c0))  WHEN json_object(rt0.c3, rt0.c3) THEN ((rt0.c1)/(rt0.c1)) END GROUP BY rt0.c3, rt0.c2, vt0.c0, vt2.c0, rt0.c0, rt0.c4;
SELECT rt0.c3, rt0.c2, vt0.c0, vt2.c0, rt0.c0, rt0.c4 FROM rt0 FULL OUTER JOIN vt0 ON CAST(((0.8530134285216258) NOT BETWEEN (rt0.c4) AND (rt0.c3)) AS TEXT) RIGHT OUTER JOIN vt2 ON CASE ((vt2.c0)LIKE(vt2.c0))  WHEN json_object(rt0.c3, rt0.c3) THEN ((rt0.c1)/(rt0.c1)) END GROUP BY rt0.c3, rt0.c2, vt0.c0, vt2.c0, rt0.c0, rt0.c4 HAVING COUNT(NULL) UNION ALL SELECT ALL rt0.c3, rt0.c2, vt0.c0, vt2.c0, rt0.c0, rt0.c4 FROM rt0 FULL OUTER JOIN vt0 ON CAST(((0.8530134285216258) NOT BETWEEN (rt0.c4) AND (rt0.c3)) AS TEXT) RIGHT OUTER JOIN vt2 ON CASE ((vt2.c0)LIKE(vt2.c0))  WHEN json_object(rt0.c3, rt0.c3) THEN ((rt0.c1)/(rt0.c1)) END GROUP BY rt0.c3, rt0.c2, vt0.c0, vt2.c0, rt0.c0, rt0.c4 HAVING (NOT (COUNT(NULL))) UNION ALL SELECT rt0.c3, rt0.c2, vt0.c0, vt2.c0, rt0.c0, rt0.c4 FROM rt0 FULL OUTER JOIN vt0 ON CAST(((0.8530134285216258) NOT BETWEEN (rt0.c4) AND (rt0.c3)) AS TEXT) RIGHT OUTER JOIN vt2 ON CASE ((vt2.c0)LIKE(vt2.c0))  WHEN json_object(rt0.c3, rt0.c3) THEN ((rt0.c1)/(rt0.c1)) END GROUP BY rt0.c3, rt0.c2, vt0.c0, vt2.c0, rt0.c0, rt0.c4 HAVING ((COUNT(NULL)) ISNULL);
SELECT ALL rt0.c3, rt0.c2, vt0.c0, vt2.c0, rt0.c0, rt0.c4 FROM rt0 FULL OUTER JOIN vt0 ON CAST(((0.8530134285216258) NOT BETWEEN (rt0.c4) AND (rt0.c3)) AS TEXT) RIGHT OUTER JOIN vt2 ON CASE ((vt2.c0)LIKE(vt2.c0))  WHEN json_object(rt0.c3, rt0.c3) THEN ((rt0.c1)/(rt0.c1)) END GROUP BY rt0.c3, rt0.c2, vt0.c0, vt2.c0, rt0.c0, rt0.c4;
SELECT ALL rt0.c2, vt0.c1, rt0.c0, v0.c0, vt1.c0, vt2.c0, rt0.c1, rt0.c3, vt0.c0, rt0.c5, rt0.c4, vt1.c1 FROM vt2, vt1, vt0 RIGHT OUTER JOIN v0 ON ((CAST(v0.c0 AS BLOB))||(((((((((vt0.c1)AND(rt0.c1)))AND(rt0.c2)))AND(vt1.c1)))OR(vt0.c0)))) RIGHT OUTER JOIN rt0 ON (CASE vt0.c1  WHEN vt0.c1 THEN '-458951837' WHEN rt0.c4 THEN rt0.c0 WHEN rt0.c2 THEN vt2.c0 ELSE vt2.c0 END IN ());
SELECT DISTINCT vt1.c1, vt0.c1, vt2.c0 FROM vt1, vt0, vt2;
SELECT DISTINCT vt1.c1, vt0.c1, vt2.c0 FROM vt1, vt0, vt2 WHERE (CAST(((vt2.c0)>>(NULL)) AS BLOB)) UNION SELECT DISTINCT vt1.c1, vt0.c1, vt2.c0 FROM vt1, vt0, vt2 WHERE ((NOT (CAST(((vt2.c0)>>(NULL)) AS BLOB)))) UNION SELECT DISTINCT vt1.c1, vt0.c1, vt2.c0 FROM vt1, vt0, vt2 WHERE (((CAST(((vt2.c0)>>(NULL)) AS BLOB)) ISNULL));
SELECT DISTINCT vt1.c1, vt0.c1, vt2.c0 FROM vt1, vt0, vt2;
SELECT vt0.c1, vt1.c0, vt0.c0, rt0.c3, rt0.c0, vt2.c0, rt0.c2, rt0.c4, rt0.c1 FROM vt2, vt1 CROSS JOIN vt0 ON (((((vt0.c0)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c3)))) NOT BETWEEN (((vt1.c1) NOT NULL)) AND (((vt0.c1)<=(rt0.c1)))) CROSS JOIN rt0 ON ((((CAST(vt1.c1 AS NUMERIC))AND((vt1.c0 IN ()))))OR(((vt1.c0)||(vt2.c0)))) GROUP BY vt0.c1, vt1.c0, vt0.c0, rt0.c3, rt0.c0, vt2.c0, rt0.c2, rt0.c4, rt0.c1;
SELECT ALL vt0.c1, vt1.c0, vt0.c0, rt0.c3, rt0.c0, vt2.c0, rt0.c2, rt0.c4, rt0.c1 FROM vt2, vt1 CROSS JOIN vt0 ON (((((vt0.c0)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c3)))) NOT BETWEEN (((vt1.c1) NOT NULL)) AND (((vt0.c1)<=(rt0.c1)))) CROSS JOIN rt0 ON ((((CAST(vt1.c1 AS NUMERIC))AND((vt1.c0 IN ()))))OR(((vt1.c0)||(vt2.c0)))) WHERE (JULIANDAY(NULLIF(DISTINCT vt0.c1, rt0.c0), (((vt0.c0, rt0.c1, rt0.c5))>((vt1.c0, rt0.c3, vt0.c1))), ((rt0.c5)LIKE(rt0.c0)), vt0.c1 COLLATE RTRIM, NULL)) GROUP BY vt0.c1, vt1.c0, vt0.c0, rt0.c3, rt0.c0, vt2.c0, rt0.c2, rt0.c4, rt0.c1 UNION SELECT ALL vt0.c1, vt1.c0, vt0.c0, rt0.c3, rt0.c0, vt2.c0, rt0.c2, rt0.c4, rt0.c1 FROM vt2, vt1 CROSS JOIN vt0 ON (((((vt0.c0)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c3)))) NOT BETWEEN (((vt1.c1) NOT NULL)) AND (((vt0.c1)<=(rt0.c1)))) CROSS JOIN rt0 ON ((((CAST(vt1.c1 AS NUMERIC))AND((vt1.c0 IN ()))))OR(((vt1.c0)||(vt2.c0)))) WHERE ((NOT (JULIANDAY(NULLIF(DISTINCT vt0.c1, rt0.c0), (((vt0.c0, rt0.c1, rt0.c5))>((vt1.c0, rt0.c3, vt0.c1))), ((rt0.c5)LIKE(rt0.c0)), vt0.c1 COLLATE RTRIM, NULL)))) GROUP BY vt0.c1, vt1.c0, vt0.c0, rt0.c3, rt0.c0, vt2.c0, rt0.c2, rt0.c4, rt0.c1 UNION SELECT ALL vt0.c1, vt1.c0, vt0.c0, rt0.c3, rt0.c0, vt2.c0, rt0.c2, rt0.c4, rt0.c1 FROM vt2, vt1 CROSS JOIN vt0 ON (((((vt0.c0)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c3)))) NOT BETWEEN (((vt1.c1) NOT NULL)) AND (((vt0.c1)<=(rt0.c1)))) CROSS JOIN rt0 ON ((((CAST(vt1.c1 AS NUMERIC))AND((vt1.c0 IN ()))))OR(((vt1.c0)||(vt2.c0)))) WHERE (((JULIANDAY(NULLIF(DISTINCT vt0.c1, rt0.c0), (((vt0.c0, rt0.c1, rt0.c5))>((vt1.c0, rt0.c3, vt0.c1))), ((rt0.c5)LIKE(rt0.c0)), vt0.c1 COLLATE RTRIM, NULL)) ISNULL)) GROUP BY vt0.c1, vt1.c0, vt0.c0, rt0.c3, rt0.c0, vt2.c0, rt0.c2, rt0.c4, rt0.c1;
SELECT vt0.c1, vt1.c0, vt0.c0, rt0.c3, rt0.c0, vt2.c0, rt0.c2, rt0.c4, rt0.c1 FROM vt2, vt1 CROSS JOIN vt0 ON (((((vt0.c0)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c3)))) NOT BETWEEN (((vt1.c1) NOT NULL)) AND (((vt0.c1)<=(rt0.c1)))) CROSS JOIN rt0 ON ((((CAST(vt1.c1 AS NUMERIC))AND((vt1.c0 IN ()))))OR(((vt1.c0)||(vt2.c0)))) GROUP BY vt0.c1, vt1.c0, vt0.c0, rt0.c3, rt0.c0, vt2.c0, rt0.c2, rt0.c4, rt0.c1;
SELECT vt2.c0, v0.c0 FROM vt2, v0 GROUP BY vt2.c0, v0.c0;
SELECT ALL vt2.c0, v0.c0 FROM vt2, v0 GROUP BY vt2.c0, v0.c0 HAVING (((TOTAL(COUNT(v0.c0))))>=((MIN(v0.c0)))) UNION ALL SELECT vt2.c0, v0.c0 FROM vt2, v0 GROUP BY vt2.c0, v0.c0 HAVING (NOT ((((TOTAL(COUNT(v0.c0))))>=((MIN(v0.c0)))))) UNION ALL SELECT vt2.c0, v0.c0 FROM vt2, v0 GROUP BY vt2.c0, v0.c0 HAVING (((((TOTAL(COUNT(v0.c0))))>=((MIN(v0.c0))))) ISNULL);
SELECT ALL rt0.c2, vt2.c0, rt0.c5, vt1.c0, vt0.c1, vt0.c0, v0.c0, vt1.c1, rt0.c1, rt0.c0, rt0.c3 FROM v0, vt0 INNER JOIN vt1 ON COALESCE(CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c2 END, ((v0.c0) ISNULL), (~ (vt1.c0)), (rt0.c0 IN ())) FULL OUTER JOIN vt2 ON (((+ (-1.750858219E9)))+(((rt0.c0)|(rt0.c2)))) FULL OUTER JOIN rt0 ON (rt0.c2 IN ());
SELECT DISTINCT vt1.c1 FROM vt1;
SELECT DISTINCT vt1.c1 FROM vt1 WHERE (((((((((CAST(vt1.c0 AS NUMERIC))AND((((vt1.c0))>((vt1.c0))))))OR(((vt1.c1)>=(vt1.c0)))))AND(0.5134097076013076)))OR((vt1.c0 IN ())))) UNION SELECT DISTINCT vt1.c1 FROM vt1 WHERE ((NOT (((((((((CAST(vt1.c0 AS NUMERIC))AND((((vt1.c0))>((vt1.c0))))))OR(((vt1.c1)>=(vt1.c0)))))AND(0.5134097076013076)))OR((vt1.c0 IN ())))))) UNION SELECT DISTINCT vt1.c1 FROM vt1 WHERE (((((((((((CAST(vt1.c0 AS NUMERIC))AND((((vt1.c0))>((vt1.c0))))))OR(((vt1.c1)>=(vt1.c0)))))AND(0.5134097076013076)))OR((vt1.c0 IN ())))) ISNULL));
SELECT DISTINCT vt1.c1 FROM vt1;
SELECT ALL rt0.c5, vt0.c0 FROM vt2, vt0, rt0, v0 GROUP BY rt0.c5, vt0.c0;
SELECT rt0.c5, vt0.c0 FROM vt2, vt0, rt0, v0 WHERE ((((v0.c0)) BETWEEN ((('3%CQm(檝''b' IN ()))) AND (((vt2.c0 IN ()))))) GROUP BY rt0.c5, vt0.c0 UNION SELECT ALL rt0.c5, vt0.c0 FROM vt2, vt0, rt0, v0 WHERE ((NOT ((((v0.c0)) BETWEEN ((('3%CQm(檝''b' IN ()))) AND (((vt2.c0 IN ()))))))) GROUP BY rt0.c5, vt0.c0 UNION SELECT rt0.c5, vt0.c0 FROM vt2, vt0, rt0, v0 WHERE ((((((v0.c0)) BETWEEN ((('3%CQm(檝''b' IN ()))) AND (((vt2.c0 IN ()))))) ISNULL)) GROUP BY rt0.c5, vt0.c0;
SELECT ALL rt0.c5, vt0.c0 FROM vt2, vt0, rt0, v0 GROUP BY rt0.c5, vt0.c0;
SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING ((COUNT(*))<=(MAX(MAX(vt2.c0)))) UNION ALL SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING (NOT (((COUNT(*))<=(MAX(MAX(vt2.c0)))))) UNION ALL SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING ((((COUNT(*))<=(MAX(MAX(vt2.c0))))) ISNULL);
SELECT rt0.c2, rt0.c5, rt0.c0 FROM rt0 NOT INDEXED, vt2, v0;
SELECT rt0.c2, rt0.c5, rt0.c0 FROM rt0, vt2, v0 WHERE (((((vt2.c0)GLOB(rt0.c3)))=(((rt0.c0)LIKE(rt0.c4))))) UNION ALL SELECT rt0.c2, rt0.c5, rt0.c0 FROM rt0, vt2, v0 WHERE ((NOT (((((vt2.c0)GLOB(rt0.c3)))=(((rt0.c0)LIKE(rt0.c4))))))) UNION ALL SELECT rt0.c2, rt0.c5, rt0.c0 FROM rt0, vt2, v0 WHERE (((((((vt2.c0)GLOB(rt0.c3)))==(((rt0.c0)LIKE(rt0.c4))))) ISNULL));
SELECT rt0.c2, rt0.c5, rt0.c0 FROM rt0 NOT INDEXED, vt2, v0;
SELECT DISTINCT v0.c0, vt1.c1, vt1.c0 FROM v0, vt1;
SELECT DISTINCT v0.c0, vt1.c1, vt1.c0 FROM v0, vt1 WHERE (NULL COLLATE BINARY) UNION SELECT DISTINCT v0.c0, vt1.c1, vt1.c0 FROM v0, vt1 WHERE ((NOT (NULL COLLATE BINARY))) UNION SELECT DISTINCT v0.c0, vt1.c1, vt1.c0 FROM v0, vt1 WHERE (((NULL COLLATE BINARY) ISNULL));
SELECT DISTINCT v0.c0, vt1.c1, vt1.c0 FROM v0, vt1;
SELECT ALL rt0.c1, rt0.c3 FROM rt0, v0, vt2 GROUP BY rt0.c1, rt0.c3;
SELECT rt0.c1, rt0.c3 FROM rt0, v0, vt2 WHERE ((('1012385368') NOT BETWEEN (NULL) AND (rt0.c0)) COLLATE RTRIM) GROUP BY rt0.c1, rt0.c3 UNION SELECT rt0.c1, rt0.c3 FROM rt0, v0, vt2 WHERE ((NOT ((('1012385368') NOT BETWEEN (NULL) AND (rt0.c0)) COLLATE RTRIM))) GROUP BY rt0.c1, rt0.c3 UNION SELECT rt0.c1, rt0.c3 FROM rt0, v0, vt2 WHERE ((((('1012385368') NOT BETWEEN (NULL) AND (rt0.c0)) COLLATE RTRIM) ISNULL)) GROUP BY rt0.c1, rt0.c3;
SELECT ALL rt0.c1, rt0.c3 FROM rt0, v0, vt2 GROUP BY rt0.c1, rt0.c3;
SELECT ALL vt0.c1, rt0.c1, rt0.c2 FROM vt1, v0 CROSS JOIN vt2 ON 0X3eaebcba LEFT OUTER JOIN vt0 ON ((NULL) NOT BETWEEN ((+ (rt0.c3))) AND (NULL)) LEFT OUTER JOIN rt0 ON x'' GROUP BY vt0.c1, rt0.c1, rt0.c2;
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE (CASE WHEN (((rt0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c5))) THEN 'GR*zE*}' ELSE ((rt0.c5) BETWEEN (rt0.c1) AND (rt0.c0)) END) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (CASE WHEN (((rt0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c5))) THEN 'GR*zE*}' ELSE ((rt0.c5) BETWEEN (rt0.c1) AND (rt0.c0)) END))) UNION ALL SELECT * FROM rt0 WHERE (((CASE WHEN (((rt0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c5))) THEN 'GR*zE*}' ELSE ((rt0.c5) BETWEEN (rt0.c1) AND (rt0.c0)) END) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT rt0.c4, rt0.c5, vt2.c0, rt0.c3, rt0.c0, v0.c0, rt0.c1 FROM v0, rt0, vt2;
SELECT DISTINCT rt0.c4, rt0.c5, vt2.c0, rt0.c3, rt0.c0, v0.c0, rt0.c1 FROM v0, rt0, vt2 WHERE (v0.c0) UNION SELECT DISTINCT rt0.c4, rt0.c5, vt2.c0, rt0.c3, rt0.c0, v0.c0, rt0.c1 FROM v0, rt0, vt2 WHERE ((NOT (v0.c0))) UNION SELECT DISTINCT rt0.c4, rt0.c5, vt2.c0, rt0.c3, rt0.c0, v0.c0, rt0.c1 FROM v0, rt0, vt2 WHERE (((v0.c0) ISNULL));
SELECT DISTINCT rt0.c4, rt0.c5, vt2.c0, rt0.c3, rt0.c0, v0.c0, rt0.c1 FROM v0, rt0, vt2;
SELECT ALL vt2.c0, vt0.c0, rt0.c2, rt0.c0, vt1.c1, vt0.c1, rt0.c1, rt0.c3, vt1.c0, rt0.c5 FROM rt0, vt1, vt2, vt0, v0 GROUP BY vt2.c0, vt0.c0, rt0.c2, rt0.c0, vt1.c1, vt0.c1, rt0.c1, rt0.c3, vt1.c0, rt0.c5;
SELECT ALL vt2.c0, vt0.c0, rt0.c2, rt0.c0, vt1.c1, vt0.c1, rt0.c1, rt0.c3, vt1.c0, rt0.c5 FROM rt0, vt1, vt2, vt0, v0 WHERE ((((- (v0.c0))) NOT NULL)) GROUP BY vt2.c0, vt0.c0, rt0.c2, rt0.c0, vt1.c1, vt0.c1, rt0.c1, rt0.c3, vt1.c0, rt0.c5 UNION SELECT vt2.c0, vt0.c0, rt0.c2, rt0.c0, vt1.c1, vt0.c1, rt0.c1, rt0.c3, vt1.c0, rt0.c5 FROM rt0, vt1, vt2, vt0, v0 WHERE ((NOT ((((- (v0.c0))) NOT NULL)))) GROUP BY vt2.c0, vt0.c0, rt0.c2, rt0.c0, vt1.c1, vt0.c1, rt0.c1, rt0.c3, vt1.c0, rt0.c5 UNION SELECT ALL vt2.c0, vt0.c0, rt0.c2, rt0.c0, vt1.c1, vt0.c1, rt0.c1, rt0.c3, vt1.c0, rt0.c5 FROM rt0, vt1, vt2, vt0, v0 WHERE ((((((- (v0.c0))) NOT NULL)) ISNULL)) GROUP BY vt2.c0, vt0.c0, rt0.c2, rt0.c0, vt1.c1, vt0.c1, rt0.c1, rt0.c3, vt1.c0, rt0.c5;
SELECT ALL vt2.c0, vt0.c0, rt0.c2, rt0.c0, vt1.c1, vt0.c1, rt0.c1, rt0.c3, vt1.c0, rt0.c5 FROM rt0, vt1, vt2, vt0, v0 GROUP BY vt2.c0, vt0.c0, rt0.c2, rt0.c0, vt1.c1, vt0.c1, rt0.c1, rt0.c3, vt1.c0, rt0.c5;
SELECT v0.c0, vt1.c1, vt2.c0, vt0.c1 FROM vt0, vt1, vt2, v0 GROUP BY v0.c0, vt1.c1, vt2.c0, vt0.c1;
SELECT ALL v0.c0, vt1.c1, vt2.c0, vt0.c1 FROM vt0, vt1, vt2, v0 GROUP BY v0.c0, vt1.c1, vt2.c0, vt0.c1 HAVING TOTAL((- (MAX(COUNT(vt1.c1))))) UNION ALL SELECT ALL v0.c0, vt1.c1, vt2.c0, vt0.c1 FROM vt0, vt1, vt2, v0 GROUP BY v0.c0, vt1.c1, vt2.c0, vt0.c1 HAVING (NOT (TOTAL((- (MAX(COUNT(vt1.c1))))))) UNION ALL SELECT ALL v0.c0, vt1.c1, vt2.c0, vt0.c1 FROM vt0, vt1, vt2, v0 GROUP BY v0.c0, vt1.c1, vt2.c0, vt0.c1 HAVING ((TOTAL((- (MAX(COUNT(vt1.c1)))))) ISNULL);
SELECT ALL vt0.c1 FROM v0, vt0;
SELECT ALL vt0.c1 FROM v0, vt0 WHERE ((NOT (CASE v0.c0  WHEN vt0.c0 THEN vt0.c0 END))) UNION ALL SELECT vt0.c1 FROM v0, vt0 WHERE ((NOT ((NOT (CASE v0.c0  WHEN vt0.c0 THEN vt0.c0 END))))) UNION ALL SELECT vt0.c1 FROM v0, vt0 WHERE ((((NOT (CASE v0.c0  WHEN vt0.c0 THEN vt0.c0 END))) ISNULL));
SELECT ALL vt0.c1 FROM v0, vt0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (CAST((((v0.c0, v0.c0, v0.c0))=((v0.c0, v0.c0, v0.c0))) AS TEXT)) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (CAST((((v0.c0, v0.c0, v0.c0))=((v0.c0, v0.c0, v0.c0))) AS TEXT)))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((CAST((((v0.c0, v0.c0, v0.c0))==((v0.c0, v0.c0, v0.c0))) AS TEXT)) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT ALL vt0.c0, vt0.c1, rt0.c5 FROM vt1, rt0, v0, vt0 LEFT OUTER JOIN vt2 ON NULL GROUP BY vt0.c0, vt0.c1, rt0.c5;
SELECT ALL vt0.c0, vt0.c1, rt0.c5 FROM vt1, rt0, v0, vt0 LEFT OUTER JOIN vt2 ON NULL WHERE (CAST(v0.c0 COLLATE RTRIM AS REAL)) GROUP BY vt0.c0, vt0.c1, rt0.c5 UNION SELECT ALL vt0.c0, vt0.c1, rt0.c5 FROM vt1, rt0, v0, vt0 LEFT OUTER JOIN vt2 ON NULL WHERE ((NOT (CAST(v0.c0 COLLATE RTRIM AS REAL)))) GROUP BY vt0.c0, vt0.c1, rt0.c5 UNION SELECT vt0.c0, vt0.c1, rt0.c5 FROM vt1, rt0, v0, vt0 LEFT OUTER JOIN vt2 ON NULL WHERE (((CAST(v0.c0 COLLATE RTRIM AS REAL)) ISNULL)) GROUP BY vt0.c0, vt0.c1, rt0.c5;
SELECT ALL vt0.c0, vt0.c1, rt0.c5 FROM vt1, rt0, v0, vt0 LEFT OUTER JOIN vt2 ON NULL GROUP BY vt0.c0, vt0.c1, rt0.c5;
SELECT ALL v0.c0 FROM vt0 RIGHT OUTER JOIN v0 ON (((~ (vt0.c1))) NOT NULL) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM vt0 RIGHT OUTER JOIN v0 ON (((~ (vt0.c1))) NOT NULL) GROUP BY v0.c0 HAVING ((COUNT(*)) NOT BETWEEN (CAST(AVG(MAX(vt0.c0)) AS INTEGER)) AND (IFNULL(MAX(v0.c0), vt0.c0))) UNION ALL SELECT ALL v0.c0 FROM vt0 RIGHT OUTER JOIN v0 ON (((~ (vt0.c1))) NOT NULL) GROUP BY v0.c0 HAVING (NOT (((COUNT(*)) NOT BETWEEN (CAST(AVG(MAX(vt0.c0)) AS INTEGER)) AND (IFNULL(MAX(v0.c0), vt0.c0))))) UNION ALL SELECT v0.c0 FROM vt0 RIGHT OUTER JOIN v0 ON (((~ (vt0.c1))) NOT NULL) GROUP BY v0.c0 HAVING ((((COUNT(*)) NOT BETWEEN (CAST(AVG(MAX(vt0.c0)) AS INTEGER)) AND (IFNULL(MAX(v0.c0), vt0.c0)))) ISNULL);
SELECT * FROM vt1, vt2, rt0, v0, vt0;
SELECT * FROM vt1, vt2, rt0, v0, vt0 WHERE (((CAST(rt0.c3 AS INTEGER)) NOT BETWEEN (vt2.c0 COLLATE RTRIM) AND ((0.37271001026797657 IN ())))) UNION ALL SELECT * FROM vt1, vt2, rt0, v0, vt0 WHERE ((NOT (((CAST(rt0.c3 AS INTEGER)) NOT BETWEEN (vt2.c0 COLLATE RTRIM) AND ((0.37271001026797657 IN ())))))) UNION ALL SELECT * FROM vt1, vt2, rt0, v0, vt0 WHERE (((((CAST(rt0.c3 AS INTEGER)) NOT BETWEEN (vt2.c0 COLLATE RTRIM) AND ((0.37271001026797657 IN ())))) ISNULL));
SELECT * FROM vt1, vt2, rt0, v0, vt0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (INSTR(((v0.c0)==(v0.c0)), NULL)) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (INSTR(((v0.c0)=(v0.c0)), NULL)))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((INSTR(((v0.c0)==(v0.c0)), NULL)) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT vt2.c0 FROM vt2 WHERE ((((vt2.c0) IS TRUE) IN (((vt2.c0) NOT BETWEEN ('909116090') AND (vt2.c0))))) GROUP BY vt2.c0 UNION SELECT vt2.c0 FROM vt2 WHERE ((NOT ((((vt2.c0) IS TRUE) IN (((vt2.c0) NOT BETWEEN ('909116090') AND (vt2.c0))))))) GROUP BY vt2.c0 UNION SELECT vt2.c0 FROM vt2 WHERE ((((((vt2.c0) IS TRUE) IN (((vt2.c0) NOT BETWEEN ('909116090') AND (vt2.c0))))) ISNULL)) GROUP BY vt2.c0;
SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT ALL rt0.c0, rt0.c4, rt0.c1, vt0.c1, v0.c0, vt1.c0, vt2.c0, rt0.c2, vt0.c0 FROM vt1, vt2, v0, rt0, vt0 GROUP BY rt0.c0, rt0.c4, rt0.c1, vt0.c1, v0.c0, vt1.c0, vt2.c0, rt0.c2, vt0.c0;
SELECT rt0.c0, rt0.c4, rt0.c1, vt0.c1, v0.c0, vt1.c0, vt2.c0, rt0.c2, vt0.c0 FROM vt1, vt2, v0, rt0, vt0 GROUP BY rt0.c0, rt0.c4, rt0.c1, vt0.c1, v0.c0, vt1.c0, vt2.c0, rt0.c2, vt0.c0 HAVING ((LTRIM(vt1.c1))<<(TOTAL(SUM(SUM(vt0.c1))))) UNION ALL SELECT ALL rt0.c0, rt0.c4, rt0.c1, vt0.c1, v0.c0, vt1.c0, vt2.c0, rt0.c2, vt0.c0 FROM vt1, vt2, v0, rt0, vt0 GROUP BY rt0.c0, rt0.c4, rt0.c1, vt0.c1, v0.c0, vt1.c0, vt2.c0, rt0.c2, vt0.c0 HAVING (NOT (((LTRIM(vt1.c1))<<(TOTAL(SUM(SUM(vt0.c1))))))) UNION ALL SELECT rt0.c0, rt0.c4, rt0.c1, vt0.c1, v0.c0, vt1.c0, vt2.c0, rt0.c2, vt0.c0 FROM vt1, vt2, v0, rt0, vt0 GROUP BY rt0.c0, rt0.c4, rt0.c1, vt0.c1, v0.c0, vt1.c0, vt2.c0, rt0.c2, vt0.c0 HAVING ((((LTRIM(vt1.c1))<<(TOTAL(SUM(SUM(vt0.c1)))))) ISNULL);
SELECT TOTAL(PRINTF(vt2.c0) COLLATE NOCASE) FROM vt2 ORDER BY CAST(LIKELY(DISTINCT vt2.c0) AS REAL) DESC;
SELECT vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (TRIM(vt0.c0, vt0.c1)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT ((NOT (TRIM(vt0.c0, vt0.c1)))))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((((NOT (TRIM(vt0.c0, vt0.c1)))) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT * FROM v0, rt0, vt2, vt0, vt1;
SELECT DISTINCT * FROM v0, rt0, vt2, vt0, vt1 WHERE (((CASE v0.c0  WHEN v0.c0 THEN vt2.c0 END)AND(load_extension(v0.c0, rt0.c0)))) UNION SELECT DISTINCT * FROM v0, rt0, vt2, vt0, vt1 WHERE ((NOT (((CASE v0.c0  WHEN v0.c0 THEN vt2.c0 END)AND(load_extension(v0.c0, rt0.c0)))))) UNION SELECT DISTINCT * FROM v0, rt0, vt2, vt0, vt1 WHERE (((((CASE v0.c0  WHEN v0.c0 THEN vt2.c0 END)AND(load_extension(v0.c0, rt0.c0)))) ISNULL));
SELECT DISTINCT * FROM v0, rt0, vt2, vt0, vt1;
SELECT ALL rt0.c2, vt0.c1, vt2.c0, rt0.c1, v0.c0, rt0.c3, rt0.c5, rt0.c4, vt1.c1, vt1.c0, vt0.c0 FROM vt1, v0, vt2, rt0, vt0 GROUP BY rt0.c2, vt0.c1, vt2.c0, rt0.c1, v0.c0, rt0.c3, rt0.c5, rt0.c4, vt1.c1, vt1.c0, vt0.c0;
SELECT rt0.c2, vt0.c1, vt2.c0, rt0.c1, v0.c0, rt0.c3, rt0.c5, rt0.c4, vt1.c1, vt1.c0, vt0.c0 FROM vt1, v0, vt2, rt0, vt0 WHERE (x'') GROUP BY rt0.c2, vt0.c1, vt2.c0, rt0.c1, v0.c0, rt0.c3, rt0.c5, rt0.c4, vt1.c1, vt1.c0, vt0.c0 UNION SELECT ALL rt0.c2, vt0.c1, vt2.c0, rt0.c1, v0.c0, rt0.c3, rt0.c5, rt0.c4, vt1.c1, vt1.c0, vt0.c0 FROM vt1, v0, vt2, rt0, vt0 WHERE ((NOT (x''))) GROUP BY rt0.c2, vt0.c1, vt2.c0, rt0.c1, v0.c0, rt0.c3, rt0.c5, rt0.c4, vt1.c1, vt1.c0, vt0.c0 UNION SELECT rt0.c2, vt0.c1, vt2.c0, rt0.c1, v0.c0, rt0.c3, rt0.c5, rt0.c4, vt1.c1, vt1.c0, vt0.c0 FROM vt1, v0, vt2, rt0, vt0 WHERE (((x'') ISNULL)) GROUP BY rt0.c2, vt0.c1, vt2.c0, rt0.c1, v0.c0, rt0.c3, rt0.c5, rt0.c4, vt1.c1, vt1.c0, vt0.c0;
SELECT ALL rt0.c2, vt0.c1, vt2.c0, rt0.c1, v0.c0, rt0.c3, rt0.c5, rt0.c4, vt1.c1, vt1.c0, vt0.c0 FROM vt1, v0, vt2, rt0, vt0 GROUP BY rt0.c2, vt0.c1, vt2.c0, rt0.c1, v0.c0, rt0.c3, rt0.c5, rt0.c4, vt1.c1, vt1.c0, vt0.c0;
SELECT vt1.c0, vt1.c1, v0.c0, vt0.c1 FROM vt0, vt1, v0 GROUP BY vt1.c0, vt1.c1, v0.c0, vt0.c1;
SELECT ALL vt1.c0, vt1.c1, v0.c0, vt0.c1 FROM vt0, vt1, v0 GROUP BY vt1.c0, vt1.c1, v0.c0, vt0.c1 HAVING vt0.c0 UNION ALL SELECT ALL vt1.c0, vt1.c1, v0.c0, vt0.c1 FROM vt0, vt1, v0 GROUP BY vt1.c0, vt1.c1, v0.c0, vt0.c1 HAVING (NOT (vt0.c0)) UNION ALL SELECT vt1.c0, vt1.c1, v0.c0, vt0.c1 FROM vt0, vt1, v0 GROUP BY vt1.c0, vt1.c1, v0.c0, vt0.c1 HAVING ((vt0.c0) ISNULL);
SELECT vt1.c0, vt1.c1, v0.c0, vt0.c1 FROM vt0, vt1, v0 GROUP BY vt1.c0, vt1.c1, v0.c0, vt0.c1;
SELECT ALL vt1.c0, vt1.c1, v0.c0, vt0.c1 FROM vt0, vt1, v0 GROUP BY vt1.c0, vt1.c1, v0.c0, vt0.c1 HAVING vt0.c0 UNION ALL SELECT ALL vt1.c0, vt1.c1, v0.c0, vt0.c1 FROM vt0, vt1, v0 GROUP BY vt1.c0, vt1.c1, v0.c0, vt0.c1 HAVING (NOT (vt0.c0)) UNION ALL SELECT vt1.c0, vt1.c1, v0.c0, vt0.c1 FROM vt0, vt1, v0 GROUP BY vt1.c0, vt1.c1, v0.c0, vt0.c1 HAVING ((vt0.c0) ISNULL);
SELECT vt1.c0, vt1.c1, v0.c0, vt0.c1 FROM vt0, vt1, v0 GROUP BY vt1.c0, vt1.c1, v0.c0, vt0.c1;
SELECT ALL * FROM vt2;
SELECT ALL * FROM vt2 WHERE (LOWER(DISTINCT ((vt2.c0) NOT BETWEEN (vt2.c0) AND (vt2.c0)))) UNION ALL SELECT * FROM vt2 WHERE ((NOT (LOWER(DISTINCT ((vt2.c0) NOT BETWEEN (vt2.c0) AND (vt2.c0)))))) UNION ALL SELECT ALL * FROM vt2 WHERE (((LOWER(DISTINCT ((vt2.c0) NOT BETWEEN (vt2.c0) AND (vt2.c0)))) ISNULL));
SELECT ALL * FROM vt2;
SELECT DISTINCT * FROM v0, vt1;
SELECT DISTINCT * FROM v0, vt1 WHERE ((((vt1.c0, vt1.c1, vt1.c1))>((vt1.c1, vt1.c0, vt1.c0))) COLLATE NOCASE COLLATE RTRIM) UNION SELECT DISTINCT * FROM v0, vt1 WHERE ((NOT ((((vt1.c0, vt1.c1, vt1.c1))>((vt1.c1, vt1.c0, vt1.c0))) COLLATE NOCASE COLLATE RTRIM))) UNION SELECT DISTINCT * FROM v0, vt1 WHERE ((((((vt1.c0, vt1.c1, vt1.c1))>((vt1.c1, vt1.c0, vt1.c0))) COLLATE NOCASE COLLATE RTRIM) ISNULL));
SELECT DISTINCT * FROM v0, vt1;
SELECT ALL vt0.c0, rt0.c1, vt2.c0 FROM vt2, vt1, vt0, v0, rt0 GROUP BY vt0.c0, rt0.c1, vt2.c0;
SELECT ALL vt0.c0, rt0.c1, vt2.c0 FROM vt2, vt1, vt0, v0, rt0 WHERE ((((vt0.c1)&(rt0.c4)) IN ())) GROUP BY vt0.c0, rt0.c1, vt2.c0 UNION SELECT ALL vt0.c0, rt0.c1, vt2.c0 FROM vt2, vt1, vt0, v0, rt0 WHERE ((NOT ((((vt0.c1)&(rt0.c4)) IN ())))) GROUP BY vt0.c0, rt0.c1, vt2.c0 UNION SELECT ALL vt0.c0, rt0.c1, vt2.c0 FROM vt2, vt1, vt0, v0, rt0 WHERE ((((((vt0.c1)&(rt0.c4)) IN ())) ISNULL)) GROUP BY vt0.c0, rt0.c1, vt2.c0;
SELECT ALL vt0.c0, rt0.c1, vt2.c0 FROM vt2, vt1, vt0, v0, rt0 GROUP BY vt0.c0, rt0.c1, vt2.c0;
SELECT vt0.c1, rt0.c5, rt0.c3, rt0.c4, vt0.c0, v0.c0, rt0.c1, rt0.c0 FROM rt0, vt0, v0 GROUP BY vt0.c1, rt0.c5, rt0.c3, rt0.c4, vt0.c0, v0.c0, rt0.c1, rt0.c0;
SELECT ALL vt0.c1, rt0.c5, rt0.c3, rt0.c4, vt0.c0, v0.c0, rt0.c1, rt0.c0 FROM rt0, vt0, v0 GROUP BY vt0.c1, rt0.c5, rt0.c3, rt0.c4, vt0.c0, v0.c0, rt0.c1, rt0.c0 HAVING TOTAL(MAX(vt0.c0)) UNION ALL SELECT vt0.c1, rt0.c5, rt0.c3, rt0.c4, vt0.c0, v0.c0, rt0.c1, rt0.c0 FROM rt0, vt0, v0 GROUP BY vt0.c1, rt0.c5, rt0.c3, rt0.c4, vt0.c0, v0.c0, rt0.c1, rt0.c0 HAVING (NOT (TOTAL(MAX(vt0.c0)))) UNION ALL SELECT ALL vt0.c1, rt0.c5, rt0.c3, rt0.c4, vt0.c0, v0.c0, rt0.c1, rt0.c0 FROM rt0, vt0, v0 GROUP BY vt0.c1, rt0.c5, rt0.c3, rt0.c4, vt0.c0, v0.c0, rt0.c1, rt0.c0 HAVING ((TOTAL(MAX(vt0.c0))) ISNULL);
SELECT ALL * FROM vt1, vt0, v0, vt2;
SELECT * FROM vt1, vt0, v0, vt2 WHERE (MIN(CAST(vt0.c0 AS NUMERIC), ((vt0.c1) NOTNULL))) UNION ALL SELECT * FROM vt1, vt0, v0, vt2 WHERE ((NOT (MIN(CAST(vt0.c0 AS NUMERIC), ((vt0.c1) NOTNULL))))) UNION ALL SELECT ALL * FROM vt1, vt0, v0, vt2 WHERE (((MIN(CAST(vt0.c0 AS NUMERIC), ((vt0.c1) NOTNULL))) ISNULL));
SELECT ALL * FROM vt1, vt0, v0, vt2;
SELECT DISTINCT vt2.c0, v0.c0, vt1.c0, vt0.c1, rt0.c2, rt0.c4, rt0.c5, rt0.c0, rt0.c3, vt0.c0, vt1.c1, rt0.c1 FROM vt0, v0 FULL OUTER JOIN vt1 ON v0.c0 RIGHT OUTER JOIN vt2 ON CAST(CASE rt0.c5  WHEN vt0.c0 THEN rt0.c0 ELSE vt1.c1 END AS REAL) INNER JOIN rt0 ON (UPPER(DISTINCT vt0.c1) IN ());
SELECT DISTINCT vt2.c0, v0.c0, vt1.c0, vt0.c1, rt0.c2, rt0.c4, rt0.c5, rt0.c0, rt0.c3, vt0.c0, vt1.c1, rt0.c1 FROM vt0, v0 FULL OUTER JOIN vt1 ON v0.c0 RIGHT OUTER JOIN vt2 ON CAST(CASE rt0.c5  WHEN vt0.c0 THEN rt0.c0 ELSE vt1.c1 END AS REAL) INNER JOIN rt0 ON (UPPER(DISTINCT vt0.c1) IN ()) WHERE (((((((rt0.c2)AND(vt1.c0)))AND(vt0.c0)))&(ABS(vt1.c1)))) UNION SELECT DISTINCT vt2.c0, v0.c0, vt1.c0, vt0.c1, rt0.c2, rt0.c4, rt0.c5, rt0.c0, rt0.c3, vt0.c0, vt1.c1, rt0.c1 FROM vt0, v0 FULL OUTER JOIN vt1 ON v0.c0 RIGHT OUTER JOIN vt2 ON CAST(CASE rt0.c5  WHEN vt0.c0 THEN rt0.c0 ELSE vt1.c1 END AS REAL) INNER JOIN rt0 ON (UPPER(DISTINCT vt0.c1) IN ()) WHERE ((NOT (((((((rt0.c2)AND(vt1.c0)))AND(vt0.c0)))&(ABS(vt1.c1)))))) UNION SELECT DISTINCT vt2.c0, v0.c0, vt1.c0, vt0.c1, rt0.c2, rt0.c4, rt0.c5, rt0.c0, rt0.c3, vt0.c0, vt1.c1, rt0.c1 FROM vt0, v0 FULL OUTER JOIN vt1 ON v0.c0 RIGHT OUTER JOIN vt2 ON CAST(CASE rt0.c5  WHEN vt0.c0 THEN rt0.c0 ELSE vt1.c1 END AS REAL) INNER JOIN rt0 ON (UPPER(DISTINCT vt0.c1) IN ()) WHERE (((((((((rt0.c2)AND(vt1.c0)))AND(vt0.c0)))&(ABS(vt1.c1)))) ISNULL));
SELECT DISTINCT vt2.c0, v0.c0, vt1.c0, vt0.c1, rt0.c2, rt0.c4, rt0.c5, rt0.c0, rt0.c3, vt0.c0, vt1.c1, rt0.c1 FROM vt0, v0 FULL OUTER JOIN vt1 ON v0.c0 RIGHT OUTER JOIN vt2 ON CAST(CASE rt0.c5  WHEN vt0.c0 THEN rt0.c0 ELSE vt1.c1 END AS REAL) INNER JOIN rt0 ON (UPPER(DISTINCT vt0.c1) IN ());
SELECT vt1.c0 FROM v0, vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM v0, vt1 WHERE (IFNULL(json_array_length(vt1.c0), CASE WHEN v0.c0 THEN v0.c0 ELSE '877687364' END)) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM v0, vt1 WHERE ((NOT (IFNULL(json_array_length(vt1.c0), CASE WHEN v0.c0 THEN v0.c0 ELSE '877687364' END)))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM v0, vt1 WHERE (((IFNULL(json_array_length(vt1.c0), CASE WHEN v0.c0 THEN v0.c0 ELSE '877687364' END)) ISNULL)) GROUP BY vt1.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING json_object(((v0.c0)/(v0.c0)), v0.c0) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (json_object(((v0.c0)/(v0.c0)), v0.c0))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((json_object(((v0.c0)/(v0.c0)), v0.c0)) ISNULL);
SELECT * FROM vt2;
SELECT ALL * FROM vt2 WHERE (((((vt2.c0)|(NULL))) BETWEEN (((0.1791016810006294)LIKE(vt2.c0))) AND (CASE vt2.c0  WHEN vt2.c0 THEN vt2.c0 END))) UNION ALL SELECT * FROM vt2 WHERE ((NOT (((((vt2.c0)|(NULL))) BETWEEN (((0.1791016810006294)LIKE(vt2.c0))) AND (CASE vt2.c0  WHEN vt2.c0 THEN vt2.c0 END))))) UNION ALL SELECT * FROM vt2 WHERE (((((((vt2.c0)|(NULL))) BETWEEN (((0.1791016810006294)LIKE(vt2.c0))) AND (CASE vt2.c0  WHEN vt2.c0 THEN vt2.c0 END))) ISNULL));
SELECT * FROM vt2;
SELECT DISTINCT rt0.c4, vt1.c0, vt2.c0 FROM vt1, rt0, vt2;
SELECT DISTINCT rt0.c4, vt1.c0, vt2.c0 FROM vt1, rt0, vt2 WHERE (((((((vt2.c0)<(vt1.c1)))OR(((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c0)))))OR((((vt2.c0, vt1.c1, rt0.c0))<((rt0.c2, 0.8983920720455707, rt0.c5)))))) UNION SELECT DISTINCT rt0.c4, vt1.c0, vt2.c0 FROM vt1, rt0, vt2 WHERE ((NOT (((((((vt2.c0)<(vt1.c1)))OR(((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c0)))))OR((((vt2.c0, vt1.c1, rt0.c0))<((rt0.c2, 0.8983920720455707, rt0.c5)))))))) UNION SELECT DISTINCT rt0.c4, vt1.c0, vt2.c0 FROM vt1, rt0, vt2 WHERE (((((((((vt2.c0)<(vt1.c1)))OR(((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c0)))))OR((((vt2.c0, vt1.c1, rt0.c0))<((rt0.c2, 0.8983920720455707, rt0.c5)))))) ISNULL));
SELECT DISTINCT rt0.c4, vt1.c0, vt2.c0 FROM vt1, rt0, vt2;
SELECT vt0.c1, vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c1, vt0.c0, v0.c0;
SELECT vt0.c1, vt0.c0, v0.c0 FROM vt0, v0 WHERE ('') GROUP BY vt0.c1, vt0.c0, v0.c0 UNION SELECT ALL vt0.c1, vt0.c0, v0.c0 FROM vt0, v0 WHERE ((NOT (''))) GROUP BY vt0.c1, vt0.c0, v0.c0 UNION SELECT vt0.c1, vt0.c0, v0.c0 FROM vt0, v0 WHERE ((('') ISNULL)) GROUP BY vt0.c1, vt0.c0, v0.c0;
SELECT vt0.c1, vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c1, vt0.c0, v0.c0;
SELECT ALL rt0.c5 FROM vt0, v0, rt0, vt2 GROUP BY rt0.c5;
SELECT rt0.c5 FROM vt0, v0, rt0, vt2 GROUP BY rt0.c5 HAVING COUNT(NULL) UNION ALL SELECT rt0.c5 FROM vt0, v0, rt0, vt2 GROUP BY rt0.c5 HAVING (NOT (COUNT(NULL))) UNION ALL SELECT ALL rt0.c5 FROM vt0, v0, rt0, vt2 GROUP BY rt0.c5 HAVING ((COUNT(NULL)) ISNULL);
SELECT ALL rt0.c5 FROM vt0, v0, rt0, vt2 GROUP BY rt0.c5;
SELECT rt0.c5 FROM vt0, v0, rt0, vt2 GROUP BY rt0.c5 HAVING COUNT(NULL) UNION ALL SELECT rt0.c5 FROM vt0, v0, rt0, vt2 GROUP BY rt0.c5 HAVING (NOT (COUNT(NULL))) UNION ALL SELECT ALL rt0.c5 FROM vt0, v0, rt0, vt2 GROUP BY rt0.c5 HAVING ((COUNT(NULL)) ISNULL);
SELECT ALL rt0.c5 FROM vt0, v0, rt0, vt2 GROUP BY rt0.c5;
SELECT rt0.c4 FROM vt0, vt2, v0, vt1, rt0;
SELECT rt0.c4 FROM vt0, vt2, v0, vt1, rt0 WHERE (TYPEOF(((rt0.c0)||(vt0.c1)))) UNION ALL SELECT rt0.c4 FROM vt0, vt2, v0, vt1, rt0 WHERE ((NOT (TYPEOF(((rt0.c0)||(vt0.c1)))))) UNION ALL SELECT rt0.c4 FROM vt0, vt2, v0, vt1, rt0 WHERE (((TYPEOF(((rt0.c0)||(vt0.c1)))) ISNULL));
SELECT rt0.c4 FROM vt0, vt2, v0, vt1, rt0;
SELECT DISTINCT * FROM vt1, vt2, rt0, v0;
SELECT DISTINCT * FROM vt1, vt2, rt0, v0 WHERE ((CAST(-1.055415379E9 AS TEXT) IN ())) UNION SELECT DISTINCT * FROM vt1, vt2, rt0, v0 WHERE ((NOT ((CAST(-1.055415379E9 AS TEXT) IN ())))) UNION SELECT DISTINCT * FROM vt1, vt2, rt0, v0 WHERE ((((CAST(-1.055415379E9 AS TEXT) IN ())) ISNULL));
SELECT DISTINCT * FROM vt1, vt2, rt0, v0;
SELECT ALL v0.c0, vt2.c0 FROM v0, vt2 GROUP BY v0.c0, vt2.c0;
SELECT ALL v0.c0, vt2.c0 FROM v0, vt2 WHERE (((NULLIF(v0.c0, vt2.c0)) ISNULL)) GROUP BY v0.c0, vt2.c0 UNION SELECT ALL v0.c0, vt2.c0 FROM v0, vt2 WHERE ((NOT (((NULLIF(v0.c0, vt2.c0)) ISNULL)))) GROUP BY v0.c0, vt2.c0 UNION SELECT v0.c0, vt2.c0 FROM v0, vt2 WHERE (((((NULLIF(v0.c0, vt2.c0)) ISNULL)) ISNULL)) GROUP BY v0.c0, vt2.c0;
SELECT ALL v0.c0, vt2.c0 FROM v0, vt2 GROUP BY v0.c0, vt2.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt1.c1 FROM vt1;
SELECT vt1.c1 FROM vt1 WHERE (CAST((((NULL))>((0.2632944489662453))) AS INTEGER)) UNION ALL SELECT ALL vt1.c1 FROM vt1 WHERE ((NOT (CAST((((NULL))>((0.2632944489662453))) AS INTEGER)))) UNION ALL SELECT ALL vt1.c1 FROM vt1 WHERE (((CAST((((NULL))>((0.2632944489662453))) AS INTEGER)) ISNULL));
SELECT vt1.c1 FROM vt1;
SELECT DISTINCT vt1.c1, rt0.c5, rt0.c1, rt0.c2, rt0.c0, vt1.c0, rt0.c4, rt0.c3 FROM rt0, vt1, vt0;
SELECT DISTINCT vt1.c1, rt0.c5, rt0.c1, rt0.c2, rt0.c0, vt1.c0, rt0.c4, rt0.c3 FROM rt0, vt1, vt0 WHERE (((((((rt0.c4)) NOT BETWEEN ((vt1.c1)) AND ((rt0.c2)))))!=((vt1.c0)))) UNION SELECT DISTINCT vt1.c1, rt0.c5, rt0.c1, rt0.c2, rt0.c0, vt1.c0, rt0.c4, rt0.c3 FROM rt0, vt1, vt0 WHERE ((NOT (((((((rt0.c4)) NOT BETWEEN ((vt1.c1)) AND ((rt0.c2)))))!=((vt1.c0)))))) UNION SELECT DISTINCT vt1.c1, rt0.c5, rt0.c1, rt0.c2, rt0.c0, vt1.c0, rt0.c4, rt0.c3 FROM rt0, vt1 NOT INDEXED, vt0 WHERE (((((((((rt0.c4)) NOT BETWEEN ((vt1.c1)) AND ((rt0.c2)))))<>((vt1.c0)))) ISNULL));
SELECT DISTINCT vt1.c1, rt0.c5, rt0.c1, rt0.c2, rt0.c0, vt1.c0, rt0.c4, rt0.c3 FROM rt0, vt1, vt0;
SELECT ALL vt0.c0 FROM vt2, vt1, vt0, rt0, v0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt2, vt1, vt0, rt0, v0 WHERE (((COALESCE(rt0.c1, rt0.c1)) NOT BETWEEN ((NOT (v0.c0))) AND (((((v0.c0)OR(vt0.c0)))OR(v0.c0))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt2, vt1, vt0, rt0, v0 WHERE ((NOT (((COALESCE(rt0.c1, rt0.c1)) NOT BETWEEN ((NOT (v0.c0))) AND (((((v0.c0)OR(vt0.c0)))OR(v0.c0))))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt2, vt1, vt0, rt0, v0 WHERE (((((COALESCE(rt0.c1, rt0.c1)) NOT BETWEEN ((NOT (v0.c0))) AND (((((v0.c0)OR(vt0.c0)))OR(v0.c0))))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt2, vt1, vt0, rt0, v0 GROUP BY vt0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING GROUP_CONCAT(((((vt0.c1)AND(COUNT(*))))OR(GROUP_CONCAT(vt0.c0)))) UNION ALL SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING (NOT (GROUP_CONCAT(((((vt0.c1)AND(COUNT(*))))OR(GROUP_CONCAT(vt0.c0)))))) UNION ALL SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING ((GROUP_CONCAT(((((vt0.c1)AND(COUNT(*))))OR(GROUP_CONCAT(vt0.c0))))) ISNULL);
SELECT ALL rt0.c1, vt2.c0, vt0.c1, rt0.c4, vt0.c0 FROM rt0, v0, vt0, vt1, vt2;
SELECT rt0.c1, vt2.c0, vt0.c1, rt0.c4, vt0.c0 FROM rt0, v0, vt0, vt1, vt2 WHERE ((((((vt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))))|(((vt1.c0) NOT BETWEEN (rt0.c5) AND (0X5ec26136))))) UNION ALL SELECT rt0.c1, vt2.c0, vt0.c1, rt0.c4, vt0.c0 FROM rt0, v0, vt0, vt1, vt2 WHERE ((NOT ((((((vt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))))|(((vt1.c0) NOT BETWEEN (rt0.c5) AND (0X5ec26136))))))) UNION ALL SELECT rt0.c1, vt2.c0, vt0.c1, rt0.c4, vt0.c0 FROM rt0, v0, vt0, vt1, vt2 WHERE ((((((((vt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))))|(((vt1.c0) NOT BETWEEN (rt0.c5) AND (0X5ec26136))))) ISNULL));
SELECT ALL rt0.c1, vt2.c0, vt0.c1, rt0.c4, vt0.c0 FROM rt0, v0, vt0, vt1, vt2;
SELECT DISTINCT rt0.c3, rt0.c1, rt0.c5, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c3, rt0.c1, rt0.c5, rt0.c2 FROM rt0 WHERE (LIKE((- (-1478379910)), CASE rt0.c1  WHEN rt0.c1 THEN rt0.c1 WHEN '' THEN rt0.c3 WHEN rt0.c2 THEN rt0.c5 ELSE rt0.c4 END)) UNION SELECT DISTINCT rt0.c3, rt0.c1, rt0.c5, rt0.c2 FROM rt0 WHERE ((NOT (LIKE((- (-1478379910)), CASE rt0.c1  WHEN rt0.c1 THEN rt0.c1 WHEN '' THEN rt0.c3 WHEN rt0.c2 THEN rt0.c5 ELSE rt0.c4 END)))) UNION SELECT DISTINCT rt0.c3, rt0.c1, rt0.c5, rt0.c2 FROM rt0 WHERE (((LIKE((- (-1478379910)), CASE rt0.c1  WHEN rt0.c1 THEN rt0.c1 WHEN '' THEN rt0.c3 WHEN rt0.c2 THEN rt0.c5 ELSE rt0.c4 END)) ISNULL));
SELECT DISTINCT rt0.c3, rt0.c1, rt0.c5, rt0.c2 FROM rt0;
SELECT vt2.c0, vt1.c1, vt1.c0 FROM vt2, vt1 GROUP BY vt2.c0, vt1.c1, vt1.c0;
SELECT vt2.c0, vt1.c1, vt1.c0 FROM vt2, vt1 WHERE (vt2.c0) GROUP BY vt2.c0, vt1.c1, vt1.c0 UNION SELECT vt2.c0, vt1.c1, vt1.c0 FROM vt2, vt1 WHERE ((NOT (vt2.c0))) GROUP BY vt2.c0, vt1.c1, vt1.c0 UNION SELECT ALL vt2.c0, vt1.c1, vt1.c0 FROM vt2, vt1 WHERE (((vt2.c0) ISNULL)) GROUP BY vt2.c0, vt1.c1, vt1.c0;
SELECT vt2.c0, vt1.c1, vt1.c0 FROM vt2, vt1 GROUP BY vt2.c0, vt1.c1, vt1.c0;
SELECT vt2.c0, vt1.c0, rt0.c4, v0.c0, rt0.c2, rt0.c0, rt0.c1, rt0.c3, vt1.c1 FROM rt0, v0, vt2, vt1 GROUP BY vt2.c0, vt1.c0, rt0.c4, v0.c0, rt0.c2, rt0.c0, rt0.c1, rt0.c3, vt1.c1;
SELECT ALL vt2.c0, vt1.c0, rt0.c4, v0.c0, rt0.c2, rt0.c0, rt0.c1, rt0.c3, vt1.c1 FROM rt0, v0, vt2, vt1 GROUP BY vt2.c0, vt1.c0, rt0.c4, v0.c0, rt0.c2, rt0.c0, rt0.c1, rt0.c3, vt1.c1 HAVING MIN(GROUP_CONCAT(rt0.c5)) UNION ALL SELECT ALL vt2.c0, vt1.c0, rt0.c4, v0.c0, rt0.c2, rt0.c0, rt0.c1, rt0.c3, vt1.c1 FROM rt0, v0, vt2, vt1 GROUP BY vt2.c0, vt1.c0, rt0.c4, v0.c0, rt0.c2, rt0.c0, rt0.c1, rt0.c3, vt1.c1 HAVING (NOT (MIN(GROUP_CONCAT(rt0.c5)))) UNION ALL SELECT ALL vt2.c0, vt1.c0, rt0.c4, v0.c0, rt0.c2, rt0.c0, rt0.c1, rt0.c3, vt1.c1 FROM rt0, v0, vt2, vt1 GROUP BY vt2.c0, vt1.c0, rt0.c4, v0.c0, rt0.c2, rt0.c0, rt0.c1, rt0.c3, vt1.c1 HAVING ((MIN(GROUP_CONCAT(rt0.c5))) ISNULL);
SELECT ALL vt1.c1, rt0.c1, rt0.c0, rt0.c2, rt0.c3, vt0.c1, vt0.c0, rt0.c5, vt1.c0 FROM vt0, rt0 NATURAL JOIN vt1;
SELECT vt1.c1, rt0.c1, rt0.c0, rt0.c2, rt0.c3, vt0.c1, vt0.c0, rt0.c5, vt1.c0 FROM vt0, rt0 NATURAL JOIN vt1 WHERE (CAST(((((rt0.c4)OR(0.24282757253231146)))OR(vt1.c1)) AS REAL)) UNION ALL SELECT ALL vt1.c1, rt0.c1, rt0.c0, rt0.c2, rt0.c3, vt0.c1, vt0.c0, rt0.c5, vt1.c0 FROM vt0, rt0 NATURAL JOIN vt1 WHERE ((NOT (CAST(((((rt0.c4)OR(0.24282757253231146)))OR(vt1.c1)) AS REAL)))) UNION ALL SELECT vt1.c1, rt0.c1, rt0.c0, rt0.c2, rt0.c3, vt0.c1, vt0.c0, rt0.c5, vt1.c0 FROM vt0, rt0 NATURAL JOIN vt1 WHERE (((CAST(((((rt0.c4)OR(0.24282757253231146)))OR(vt1.c1)) AS REAL)) ISNULL));
SELECT ALL vt1.c1, rt0.c1, rt0.c0, rt0.c2, rt0.c3, vt0.c1, vt0.c0, rt0.c5, vt1.c0 FROM vt0, rt0 NATURAL JOIN vt1;
SELECT DISTINCT rt0.c3, rt0.c0, rt0.c2, vt0.c1 FROM vt2, rt0, v0, vt0, vt1;
SELECT DISTINCT rt0.c3, rt0.c0, rt0.c2, vt0.c1 FROM vt2, rt0, v0, vt0, vt1 WHERE (((((((((((rt0.c2)/(rt0.c1)))AND(((rt0.c4) NOT BETWEEN (rt0.c1) AND (rt0.c5)))))AND(vt2.c0 COLLATE NOCASE)))AND(((rt0.c5) ISNULL))))AND(((rt0.c0) NOT NULL)))) UNION SELECT DISTINCT rt0.c3, rt0.c0, rt0.c2, vt0.c1 FROM vt2, rt0, v0, vt0, vt1 WHERE ((NOT (((((((((((rt0.c2)/(rt0.c1)))AND(((rt0.c4) NOT BETWEEN (rt0.c1) AND (rt0.c5)))))AND(vt2.c0 COLLATE NOCASE)))AND(((rt0.c5) ISNULL))))AND(((rt0.c0) NOT NULL)))))) UNION SELECT DISTINCT rt0.c3, rt0.c0, rt0.c2, vt0.c1 FROM vt2, rt0, v0, vt0, vt1 WHERE (((((((((((((rt0.c2)/(rt0.c1)))AND(((rt0.c4) NOT BETWEEN (rt0.c1) AND (rt0.c5)))))AND(vt2.c0 COLLATE NOCASE)))AND(((rt0.c5) ISNULL))))AND(((rt0.c0) NOT NULL)))) ISNULL));
SELECT DISTINCT rt0.c3, rt0.c0, rt0.c2, vt0.c1 FROM vt2, rt0, v0, vt0, vt1;
SELECT ALL vt2.c0, rt0.c5, vt0.c0, rt0.c2, v0.c0, vt0.c1, rt0.c4 FROM rt0, vt0, vt2, v0 GROUP BY vt2.c0, rt0.c5, vt0.c0, rt0.c2, v0.c0, vt0.c1, rt0.c4;
SELECT vt2.c0, rt0.c5, vt0.c0, rt0.c2, v0.c0, vt0.c1, rt0.c4 FROM rt0, vt0, vt2, v0 WHERE (((NULL) NOTNULL)) GROUP BY vt2.c0, rt0.c5, vt0.c0, rt0.c2, v0.c0, vt0.c1, rt0.c4 UNION SELECT ALL vt2.c0, rt0.c5, vt0.c0, rt0.c2, v0.c0, vt0.c1, rt0.c4 FROM rt0, vt0, vt2, v0 WHERE ((NOT (((NULL) NOTNULL)))) GROUP BY vt2.c0, rt0.c5, vt0.c0, rt0.c2, v0.c0, vt0.c1, rt0.c4 UNION SELECT vt2.c0, rt0.c5, vt0.c0, rt0.c2, v0.c0, vt0.c1, rt0.c4 FROM rt0, vt0, vt2, v0 WHERE (((((NULL) NOTNULL)) ISNULL)) GROUP BY vt2.c0, rt0.c5, vt0.c0, rt0.c2, v0.c0, vt0.c1, rt0.c4;
SELECT ALL vt2.c0, rt0.c5, vt0.c0, rt0.c2, v0.c0, vt0.c1, rt0.c4 FROM rt0, vt0, vt2, v0 GROUP BY vt2.c0, rt0.c5, vt0.c0, rt0.c2, v0.c0, vt0.c1, rt0.c4;
SELECT rt0.c3, rt0.c2, vt0.c0, vt2.c0, rt0.c1, vt1.c1, vt0.c1, rt0.c5, rt0.c4, rt0.c0, vt1.c0 FROM vt0, rt0, vt2, v0, vt1 GROUP BY rt0.c3, rt0.c2, vt0.c0, vt2.c0, rt0.c1, vt1.c1, vt0.c1, rt0.c5, rt0.c4, rt0.c0, vt1.c0;
SELECT rt0.c3, rt0.c2, vt0.c0, vt2.c0, rt0.c1, vt1.c1, vt0.c1, rt0.c5, rt0.c4, rt0.c0, vt1.c0 FROM vt0, rt0, vt2, v0, vt1 GROUP BY rt0.c3, rt0.c2, vt0.c0, vt2.c0, rt0.c1, vt1.c1, vt0.c1, rt0.c5, rt0.c4, rt0.c0, vt1.c0 HAVING ((v0.c0 COLLATE RTRIM) NOTNULL) UNION ALL SELECT ALL rt0.c3, rt0.c2, vt0.c0, vt2.c0, rt0.c1, vt1.c1, vt0.c1, rt0.c5, rt0.c4, rt0.c0, vt1.c0 FROM vt0, rt0, vt2, v0, vt1 GROUP BY rt0.c3, rt0.c2, vt0.c0, vt2.c0, rt0.c1, vt1.c1, vt0.c1, rt0.c5, rt0.c4, rt0.c0, vt1.c0 HAVING (NOT (((v0.c0 COLLATE RTRIM) NOTNULL))) UNION ALL SELECT rt0.c3, rt0.c2, vt0.c0, vt2.c0, rt0.c1, vt1.c1, vt0.c1, rt0.c5, rt0.c4, rt0.c0, vt1.c0 FROM vt0, rt0, vt2, v0, vt1 GROUP BY rt0.c3, rt0.c2, vt0.c0, vt2.c0, rt0.c1, vt1.c1, vt0.c1, rt0.c5, rt0.c4, rt0.c0, vt1.c0 HAVING ((((v0.c0 COLLATE RTRIM) NOTNULL)) ISNULL);
SELECT rt0.c3, rt0.c2, vt0.c0, vt2.c0, rt0.c1, vt1.c1, vt0.c1, rt0.c5, rt0.c4, rt0.c0, vt1.c0 FROM vt0, rt0, vt2, v0, vt1 GROUP BY rt0.c3, rt0.c2, vt0.c0, vt2.c0, rt0.c1, vt1.c1, vt0.c1, rt0.c5, rt0.c4, rt0.c0, vt1.c0;
SELECT rt0.c3, rt0.c2, vt0.c0, vt2.c0, rt0.c1, vt1.c1, vt0.c1, rt0.c5, rt0.c4, rt0.c0, vt1.c0 FROM vt0, rt0, vt2, v0, vt1 GROUP BY rt0.c3, rt0.c2, vt0.c0, vt2.c0, rt0.c1, vt1.c1, vt0.c1, rt0.c5, rt0.c4, rt0.c0, vt1.c0 HAVING ((v0.c0 COLLATE RTRIM) NOTNULL) UNION ALL SELECT ALL rt0.c3, rt0.c2, vt0.c0, vt2.c0, rt0.c1, vt1.c1, vt0.c1, rt0.c5, rt0.c4, rt0.c0, vt1.c0 FROM vt0, rt0, vt2, v0, vt1 GROUP BY rt0.c3, rt0.c2, vt0.c0, vt2.c0, rt0.c1, vt1.c1, vt0.c1, rt0.c5, rt0.c4, rt0.c0, vt1.c0 HAVING (NOT (((v0.c0 COLLATE RTRIM) NOTNULL))) UNION ALL SELECT rt0.c3, rt0.c2, vt0.c0, vt2.c0, rt0.c1, vt1.c1, vt0.c1, rt0.c5, rt0.c4, rt0.c0, vt1.c0 FROM vt0, rt0, vt2, v0, vt1 GROUP BY rt0.c3, rt0.c2, vt0.c0, vt2.c0, rt0.c1, vt1.c1, vt0.c1, rt0.c5, rt0.c4, rt0.c0, vt1.c0 HAVING ((((v0.c0 COLLATE RTRIM) NOTNULL)) ISNULL);
SELECT rt0.c3, rt0.c2, vt0.c0, vt2.c0, rt0.c1, vt1.c1, vt0.c1, rt0.c5, rt0.c4, rt0.c0, vt1.c0 FROM vt0, rt0, vt2, v0, vt1 GROUP BY rt0.c3, rt0.c2, vt0.c0, vt2.c0, rt0.c1, vt1.c1, vt0.c1, rt0.c5, rt0.c4, rt0.c0, vt1.c0;
SELECT ALL vt1.c1, vt2.c0, vt1.c0 FROM v0, vt2 LEFT OUTER JOIN vt1 ON ((vt1.c1) NOT BETWEEN (NULL) AND (vt1.c1 COLLATE RTRIM));
SELECT vt1.c1, vt2.c0, vt1.c0 FROM v0, vt2 LEFT OUTER JOIN vt1 ON ((vt1.c1) NOT BETWEEN (NULL) AND (vt1.c1 COLLATE RTRIM)) WHERE ((~ (((vt1.c1) IS FALSE)))) UNION ALL SELECT ALL vt1.c1, vt2.c0, vt1.c0 FROM v0, vt2 LEFT OUTER JOIN vt1 ON ((vt1.c1) NOT BETWEEN (NULL) AND (vt1.c1 COLLATE RTRIM)) WHERE ((NOT ((~ (((vt1.c1) IS FALSE)))))) UNION ALL SELECT ALL vt1.c1, vt2.c0, vt1.c0 FROM v0, vt2 LEFT OUTER JOIN vt1 ON ((vt1.c1) NOT BETWEEN (NULL) AND (vt1.c1 COLLATE RTRIM)) WHERE ((((~ (((vt1.c1) IS FALSE)))) ISNULL));
SELECT ALL vt1.c1, vt2.c0, vt1.c0 FROM v0, vt2 LEFT OUTER JOIN vt1 ON ((vt1.c1) NOT BETWEEN (NULL) AND (vt1.c1 COLLATE RTRIM));
SELECT DISTINCT * FROM v0, vt2, vt0;
SELECT DISTINCT * FROM v0, vt2, vt0 WHERE ((((((('-1538973565')OR(vt0.c1)))AND(vt0.c0))) IS TRUE)) UNION SELECT DISTINCT * FROM v0, vt2, vt0 WHERE ((NOT ((((((('-1538973565')OR(vt0.c1)))AND(vt0.c0))) IS TRUE)))) UNION SELECT DISTINCT * FROM v0, vt2, vt0 WHERE ((((((((('-1538973565')OR(vt0.c1)))AND(vt0.c0))) IS TRUE)) ISNULL));
SELECT DISTINCT * FROM v0, vt2, vt0;
SELECT vt1.c1, rt0.c3, vt2.c0, rt0.c0, vt0.c0, rt0.c5, rt0.c4, vt0.c1, rt0.c1, vt1.c0 FROM vt0, rt0 CROSS JOIN vt2 ON vt0.c1 RIGHT OUTER JOIN vt1 ON ((vt0.c1)>>(CASE rt0.c0  WHEN '' THEN '-1080222310' ELSE vt0.c0 END)) CROSS JOIN v0 ON CAST((vt0.c0 IN ()) AS TEXT) GROUP BY vt1.c1, rt0.c3, vt2.c0, rt0.c0, vt0.c0, rt0.c5, rt0.c4, vt0.c1, rt0.c1, vt1.c0;
SELECT ALL vt1.c1, rt0.c3, vt2.c0, rt0.c0, vt0.c0, rt0.c5, rt0.c4, vt0.c1, rt0.c1, vt1.c0 FROM vt0, rt0 CROSS JOIN vt2 ON vt0.c1 RIGHT OUTER JOIN vt1 ON ((vt0.c1)>>(CASE rt0.c0  WHEN '' THEN '-1080222310' ELSE vt0.c0 END)) CROSS JOIN v0 ON CAST((vt0.c0 IN ()) AS TEXT) WHERE (CASE TRIM(DISTINCT rt0.c3)  WHEN LOWER(rt0.c2) THEN ((((((((vt0.c1)OR(vt0.c0)))OR('961396442')))AND(NULL)))OR(vt1.c0)) ELSE 0.9476798011080535 END) GROUP BY vt1.c1, rt0.c3, vt2.c0, rt0.c0, vt0.c0, rt0.c5, rt0.c4, vt0.c1, rt0.c1, vt1.c0 UNION SELECT vt1.c1, rt0.c3, vt2.c0, rt0.c0, vt0.c0, rt0.c5, rt0.c4, vt0.c1, rt0.c1, vt1.c0 FROM vt0, rt0 CROSS JOIN vt2 ON vt0.c1 RIGHT OUTER JOIN vt1 ON ((vt0.c1)>>(CASE rt0.c0  WHEN '' THEN '-1080222310' ELSE vt0.c0 END)) CROSS JOIN v0 ON CAST((vt0.c0 IN ()) AS TEXT) WHERE ((NOT (CASE TRIM(DISTINCT rt0.c3)  WHEN LOWER(rt0.c2) THEN ((((((((vt0.c1)OR(vt0.c0)))OR('961396442')))AND(NULL)))OR(vt1.c0)) ELSE 0.9476798011080535 END))) GROUP BY vt1.c1, rt0.c3, vt2.c0, rt0.c0, vt0.c0, rt0.c5, rt0.c4, vt0.c1, rt0.c1, vt1.c0 UNION SELECT vt1.c1, rt0.c3, vt2.c0, rt0.c0, vt0.c0, rt0.c5, rt0.c4, vt0.c1, rt0.c1, vt1.c0 FROM vt0, rt0 CROSS JOIN vt2 ON vt0.c1 RIGHT OUTER JOIN vt1 ON ((vt0.c1)>>(CASE rt0.c0  WHEN '' THEN '-1080222310' ELSE vt0.c0 END)) CROSS JOIN v0 ON CAST((vt0.c0 IN ()) AS TEXT) WHERE (((CASE TRIM(DISTINCT rt0.c3)  WHEN LOWER(rt0.c2) THEN ((((((((vt0.c1)OR(vt0.c0)))OR('961396442')))AND(NULL)))OR(vt1.c0)) ELSE 0.9476798011080535 END) ISNULL)) GROUP BY vt1.c1, rt0.c3, vt2.c0, rt0.c0, vt0.c0, rt0.c5, rt0.c4, vt0.c1, rt0.c1, vt1.c0;
SELECT vt1.c1, rt0.c3, vt2.c0, rt0.c0, vt0.c0, rt0.c5, rt0.c4, vt0.c1, rt0.c1, vt1.c0 FROM vt0, rt0 CROSS JOIN vt2 ON vt0.c1 RIGHT OUTER JOIN vt1 ON ((vt0.c1)>>(CASE rt0.c0  WHEN '' THEN '-1080222310' ELSE vt0.c0 END)) CROSS JOIN v0 ON CAST((vt0.c0 IN ()) AS TEXT) GROUP BY vt1.c1, rt0.c3, vt2.c0, rt0.c0, vt0.c0, rt0.c5, rt0.c4, vt0.c1, rt0.c1, vt1.c0;
SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING AVG(GROUP_CONCAT(vt2.c0)) UNION ALL SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING (NOT (AVG(GROUP_CONCAT(vt2.c0)))) UNION ALL SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING ((AVG(GROUP_CONCAT(vt2.c0))) ISNULL);
SELECT ALL * FROM vt0, v0;
SELECT ALL * FROM vt0, v0 WHERE ('') UNION ALL SELECT ALL * FROM vt0, v0 WHERE ((NOT (''))) UNION ALL SELECT ALL * FROM vt0, v0 WHERE ((('') ISNULL));
SELECT ALL * FROM vt0, v0;
SELECT DISTINCT rt0.c1, v0.c0 FROM vt1, rt0, vt0, v0;
SELECT DISTINCT rt0.c1, v0.c0 FROM vt1, rt0, vt0, v0 WHERE (rt0.c4) UNION SELECT DISTINCT rt0.c1, v0.c0 FROM vt1, rt0, vt0, v0 WHERE ((NOT (rt0.c4))) UNION SELECT DISTINCT rt0.c1, v0.c0 FROM vt1, rt0, vt0, v0 WHERE (((rt0.c4) ISNULL));
SELECT DISTINCT rt0.c1, v0.c0 FROM vt1, rt0, vt0, v0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0 WHERE (((((((((((vt0.c1) IS TRUE))AND(((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1)))))OR(((((vt0.c0)OR(vt0.c1)))OR(vt0.c0)))))AND(((vt0.c1) NOT NULL))))AND((((vt0.c0))<((vt0.c1)))))) GROUP BY vt0.c1, vt0.c0 UNION SELECT ALL vt0.c1, vt0.c0 FROM vt0 WHERE ((NOT (((((((((((vt0.c1) IS TRUE))AND(((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1)))))OR(((((vt0.c0)OR(vt0.c1)))OR(vt0.c0)))))AND(((vt0.c1) NOT NULL))))AND((((vt0.c0))<((vt0.c1)))))))) GROUP BY vt0.c1, vt0.c0 UNION SELECT ALL vt0.c1, vt0.c0 FROM vt0 WHERE (((((((((((((vt0.c1) IS TRUE))AND(((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1)))))OR(((((vt0.c0)OR(vt0.c1)))OR(vt0.c0)))))AND(((vt0.c1) NOT NULL))))AND((((vt0.c0))<((vt0.c1)))))) ISNULL)) GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt1.c1 FROM vt0 INNER JOIN vt1 ON CASE WHEN (vt1.c1 IN ()) THEN ((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)) WHEN ((((((((vt1.c0)OR(vt1.c0)))AND(vt0.c1)))AND(vt0.c1)))OR(vt0.c0)) THEN NULL WHEN (((vt0.c1))==((vt1.c0))) THEN ((vt1.c1) IS FALSE) ELSE CAST(vt1.c1 AS NUMERIC) END GROUP BY vt1.c1;
SELECT vt1.c1 FROM vt0 INNER JOIN vt1 ON CASE WHEN (vt1.c1 IN ()) THEN ((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)) WHEN ((((((((vt1.c0)OR(vt1.c0)))AND(vt0.c1)))AND(vt0.c1)))OR(vt0.c0)) THEN NULL WHEN (((vt0.c1))==((vt1.c0))) THEN ((vt1.c1) IS FALSE) ELSE CAST(vt1.c1 AS NUMERIC) END GROUP BY vt1.c1 HAVING SUM(vt1.c0) UNION ALL SELECT vt1.c1 FROM vt0 INNER JOIN vt1 ON CASE WHEN (vt1.c1 IN ()) THEN ((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)) WHEN ((((((((vt1.c0)OR(vt1.c0)))AND(vt0.c1)))AND(vt0.c1)))OR(vt0.c0)) THEN NULL WHEN (((vt0.c1))=((vt1.c0))) THEN ((vt1.c1) IS FALSE) ELSE CAST(vt1.c1 AS NUMERIC) END GROUP BY vt1.c1 HAVING (NOT (SUM(vt1.c0))) UNION ALL SELECT vt1.c1 FROM vt0 INNER JOIN vt1 ON CASE WHEN (vt1.c1 IN ()) THEN ((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)) WHEN ((((((((vt1.c0)OR(vt1.c0)))AND(vt0.c1)))AND(vt0.c1)))OR(vt0.c0)) THEN NULL WHEN (((vt0.c1))==((vt1.c0))) THEN ((vt1.c1) IS FALSE) ELSE CAST(vt1.c1 AS NUMERIC) END GROUP BY vt1.c1 HAVING ((SUM(vt1.c0)) ISNULL);
SELECT ALL vt1.c1 FROM vt0 INNER JOIN vt1 ON CASE WHEN (vt1.c1 IN ()) THEN ((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)) WHEN ((((((((vt1.c0)OR(vt1.c0)))AND(vt0.c1)))AND(vt0.c1)))OR(vt0.c0)) THEN NULL WHEN (((vt0.c1))==((vt1.c0))) THEN ((vt1.c1) IS FALSE) ELSE CAST(vt1.c1 AS NUMERIC) END GROUP BY vt1.c1;
SELECT vt1.c1 FROM vt0 INNER JOIN vt1 ON CASE WHEN (vt1.c1 IN ()) THEN ((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)) WHEN ((((((((vt1.c0)OR(vt1.c0)))AND(vt0.c1)))AND(vt0.c1)))OR(vt0.c0)) THEN NULL WHEN (((vt0.c1))==((vt1.c0))) THEN ((vt1.c1) IS FALSE) ELSE CAST(vt1.c1 AS NUMERIC) END GROUP BY vt1.c1 HAVING SUM(vt1.c0) UNION ALL SELECT vt1.c1 FROM vt0 INNER JOIN vt1 ON CASE WHEN (vt1.c1 IN ()) THEN ((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)) WHEN ((((((((vt1.c0)OR(vt1.c0)))AND(vt0.c1)))AND(vt0.c1)))OR(vt0.c0)) THEN NULL WHEN (((vt0.c1))=((vt1.c0))) THEN ((vt1.c1) IS FALSE) ELSE CAST(vt1.c1 AS NUMERIC) END GROUP BY vt1.c1 HAVING (NOT (SUM(vt1.c0))) UNION ALL SELECT vt1.c1 FROM vt0 INNER JOIN vt1 ON CASE WHEN (vt1.c1 IN ()) THEN ((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)) WHEN ((((((((vt1.c0)OR(vt1.c0)))AND(vt0.c1)))AND(vt0.c1)))OR(vt0.c0)) THEN NULL WHEN (((vt0.c1))==((vt1.c0))) THEN ((vt1.c1) IS FALSE) ELSE CAST(vt1.c1 AS NUMERIC) END GROUP BY vt1.c1 HAVING ((SUM(vt1.c0)) ISNULL);
SELECT ALL vt1.c1 FROM vt0 INNER JOIN vt1 ON CASE WHEN (vt1.c1 IN ()) THEN ((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)) WHEN ((((((((vt1.c0)OR(vt1.c0)))AND(vt0.c1)))AND(vt0.c1)))OR(vt0.c0)) THEN NULL WHEN (((vt0.c1))==((vt1.c0))) THEN ((vt1.c1) IS FALSE) ELSE CAST(vt1.c1 AS NUMERIC) END GROUP BY vt1.c1;
SELECT * FROM vt1, rt0, v0, vt2, vt0;
SELECT * FROM vt1, rt0, v0, vt2, vt0 WHERE (CASE ((rt0.c0)IS NOT(vt2.c0))  WHEN ((vt1.c0) IS TRUE) THEN ((v0.c0)&(x'')) WHEN rtreenode(vt0.c0, rt0.c2) THEN (((vt2.c0))>((rt0.c4))) WHEN rt0.c0 THEN QUOTE(vt0.c0) ELSE vt1.c1 COLLATE RTRIM END) UNION ALL SELECT * FROM vt1, rt0, v0, vt2, vt0 WHERE ((NOT (CASE ((rt0.c0)IS NOT(vt2.c0))  WHEN ((vt1.c0) IS TRUE) THEN ((v0.c0)&(x'')) WHEN rtreenode(vt0.c0, rt0.c2) THEN (((vt2.c0))>((rt0.c4))) WHEN rt0.c0 THEN QUOTE(vt0.c0) ELSE vt1.c1 COLLATE RTRIM END))) UNION ALL SELECT * FROM vt1, rt0, v0, vt2, vt0 WHERE (((CASE ((rt0.c0)IS NOT(vt2.c0))  WHEN ((vt1.c0) IS TRUE) THEN ((v0.c0)&(x'')) WHEN rtreenode(vt0.c0, rt0.c2) THEN (((vt2.c0))>((rt0.c4))) WHEN rt0.c0 THEN QUOTE(vt0.c0) ELSE vt1.c1 COLLATE RTRIM END) ISNULL));
SELECT * FROM vt1, rt0, v0, vt2, vt0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE ((~ (v0.c0))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT ((~ (v0.c0))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((((~ (v0.c0))) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT vt1.c0, vt1.c1 FROM vt1 LEFT OUTER JOIN v0 ON ((v0.c0)&(((((((((((((vt1.c0)OR('0.02938336380809048')))AND('0.8249032670323806')))AND(vt1.c0)))AND(vt1.c1)))OR(vt1.c0)))OR(vt1.c1)))) GROUP BY vt1.c0, vt1.c1;
SELECT vt1.c0, vt1.c1 FROM vt1 LEFT OUTER JOIN v0 ON ((v0.c0)&(((((((((((((vt1.c0)OR('0.02938336380809048')))AND('0.8249032670323806')))AND(vt1.c0)))AND(vt1.c1)))OR(vt1.c0)))OR(vt1.c1)))) WHERE (((CASE WHEN vt1.c0 THEN vt1.c1 ELSE vt1.c1 END) BETWEEN ((0.7768280108214073 IN (vt1.c1))) AND ((- (vt1.c0))))) GROUP BY vt1.c0, vt1.c1 UNION SELECT vt1.c0, vt1.c1 FROM vt1 LEFT OUTER JOIN v0 ON ((v0.c0)&(((((((((((((vt1.c0)OR('0.02938336380809048')))AND('0.8249032670323806')))AND(vt1.c0)))AND(vt1.c1)))OR(vt1.c0)))OR(vt1.c1)))) WHERE ((NOT (((CASE WHEN vt1.c0 THEN vt1.c1 ELSE vt1.c1 END) BETWEEN ((0.7768280108214073 IN (vt1.c1))) AND ((- (vt1.c0))))))) GROUP BY vt1.c0, vt1.c1 UNION SELECT ALL vt1.c0, vt1.c1 FROM vt1 LEFT OUTER JOIN v0 ON ((v0.c0)&(((((((((((((vt1.c0)OR('0.02938336380809048')))AND('0.8249032670323806')))AND(vt1.c0)))AND(vt1.c1)))OR(vt1.c0)))OR(vt1.c1)))) WHERE (((((CASE WHEN vt1.c0 THEN vt1.c1 ELSE vt1.c1 END) BETWEEN ((0.7768280108214073 IN (vt1.c1))) AND ((- (vt1.c0))))) ISNULL)) GROUP BY vt1.c0, vt1.c1;
SELECT vt1.c0, vt1.c1 FROM vt1 LEFT OUTER JOIN v0 ON ((v0.c0)&(((((((((((((vt1.c0)OR('0.02938336380809048')))AND('0.8249032670323806')))AND(vt1.c0)))AND(vt1.c1)))OR(vt1.c0)))OR(vt1.c1)))) GROUP BY vt1.c0, vt1.c1;
SELECT rt0.c3, rt0.c5, vt1.c1, rt0.c0, rt0.c4, rt0.c1 FROM vt1, rt0 GROUP BY rt0.c3, rt0.c5, vt1.c1, rt0.c0, rt0.c4, rt0.c1;
SELECT ALL rt0.c3, rt0.c5, vt1.c1, rt0.c0, rt0.c4, rt0.c1 FROM vt1, rt0 GROUP BY rt0.c3, rt0.c5, vt1.c1, rt0.c0, rt0.c4, rt0.c1 HAVING NULL UNION ALL SELECT ALL rt0.c3, rt0.c5, vt1.c1, rt0.c0, rt0.c4, rt0.c1 FROM vt1, rt0 GROUP BY rt0.c3, rt0.c5, vt1.c1, rt0.c0, rt0.c4, rt0.c1 HAVING (NOT (NULL)) UNION ALL SELECT rt0.c3, rt0.c5, vt1.c1, rt0.c0, rt0.c4, rt0.c1 FROM vt1, rt0 GROUP BY rt0.c3, rt0.c5, vt1.c1, rt0.c0, rt0.c4, rt0.c1 HAVING ((NULL) ISNULL);
SELECT rt0.c3, rt0.c5, vt1.c1, rt0.c0, rt0.c4, rt0.c1 FROM vt1, rt0 GROUP BY rt0.c3, rt0.c5, vt1.c1, rt0.c0, rt0.c4, rt0.c1;
SELECT ALL rt0.c3, rt0.c5, vt1.c1, rt0.c0, rt0.c4, rt0.c1 FROM vt1, rt0 GROUP BY rt0.c3, rt0.c5, vt1.c1, rt0.c0, rt0.c4, rt0.c1 HAVING NULL UNION ALL SELECT ALL rt0.c3, rt0.c5, vt1.c1, rt0.c0, rt0.c4, rt0.c1 FROM vt1, rt0 GROUP BY rt0.c3, rt0.c5, vt1.c1, rt0.c0, rt0.c4, rt0.c1 HAVING (NOT (NULL)) UNION ALL SELECT rt0.c3, rt0.c5, vt1.c1, rt0.c0, rt0.c4, rt0.c1 FROM vt1, rt0 GROUP BY rt0.c3, rt0.c5, vt1.c1, rt0.c0, rt0.c4, rt0.c1 HAVING ((NULL) ISNULL);
SELECT rt0.c3, rt0.c5, vt1.c1, rt0.c0, rt0.c4, rt0.c1 FROM vt1, rt0 GROUP BY rt0.c3, rt0.c5, vt1.c1, rt0.c0, rt0.c4, rt0.c1;
SELECT MAX(((rt0.c3) NOT BETWEEN (rt0.c3) AND (vt2.c0)) COLLATE BINARY) FROM rt0, vt2;
SELECT rt0.c3, vt0.c1, rt0.c0 FROM rt0, vt1, vt0;
SELECT ALL rt0.c3, vt0.c1, rt0.c0 FROM rt0, vt1, vt0 WHERE ((((CASE rt0.c3  WHEN rt0.c5 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c0 WHEN vt1.c1 THEN rt0.c3 END))==(((rt0.c3 IN ()))))) UNION ALL SELECT ALL rt0.c3, vt0.c1, rt0.c0 FROM rt0, vt1, vt0 WHERE ((NOT ((((CASE rt0.c3  WHEN rt0.c5 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c0 WHEN vt1.c1 THEN rt0.c3 END))==(((rt0.c3 IN ()))))))) UNION ALL SELECT ALL rt0.c3, vt0.c1, rt0.c0 FROM rt0, vt1, vt0 WHERE ((((((CASE rt0.c3  WHEN rt0.c5 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c0 WHEN vt1.c1 THEN rt0.c3 END))=(((rt0.c3 IN ()))))) ISNULL));
SELECT rt0.c3, vt0.c1, rt0.c0 FROM rt0, vt1, vt0;
SELECT DISTINCT * FROM vt1, vt2;
SELECT DISTINCT * FROM vt1, vt2 WHERE (((((((((vt1.c0)AND(vt1.c0)))OR(vt2.c0)))AND(vt1.c1)))AND(x'')) COLLATE NOCASE) UNION SELECT DISTINCT * FROM vt1, vt2 WHERE ((NOT (((((((((vt1.c0)AND(vt1.c0)))OR(vt2.c0)))AND(vt1.c1)))AND(x'')) COLLATE NOCASE))) UNION SELECT DISTINCT * FROM vt1, vt2 WHERE (((((((((((vt1.c0)AND(vt1.c0)))OR(vt2.c0)))AND(vt1.c1)))AND(x'')) COLLATE NOCASE) ISNULL));
SELECT DISTINCT * FROM vt1, vt2;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE ((((v0.c0)) NOT BETWEEN ((((v0.c0)AND(NULL)))) AND (((v0.c0 IN ()))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT ((((v0.c0)) NOT BETWEEN ((((v0.c0)AND(NULL)))) AND (((v0.c0 IN ()))))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((((((v0.c0)) NOT BETWEEN ((((v0.c0)AND(NULL)))) AND (((v0.c0 IN ()))))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT rt0.c1, vt0.c0, rt0.c0, rt0.c3, vt0.c1, vt2.c0 FROM vt2 CROSS JOIN rt0 ON ABS(DISTINCT (rt0.c0 IN ())) RIGHT OUTER JOIN vt0 ON ((rt0.c5)<<(rt0.c3)) COLLATE RTRIM GROUP BY rt0.c1, vt0.c0, rt0.c0, rt0.c3, vt0.c1, vt2.c0;
SELECT rt0.c1, vt0.c0, rt0.c0, rt0.c3, vt0.c1, vt2.c0 FROM vt2 CROSS JOIN rt0 ON ABS(DISTINCT (rt0.c0 IN ())) RIGHT OUTER JOIN vt0 ON ((rt0.c5)<<(rt0.c3)) COLLATE RTRIM GROUP BY rt0.c1, vt0.c0, rt0.c0, rt0.c3, vt0.c1, vt2.c0 HAVING SUM(AVG(COUNT(*))) UNION ALL SELECT ALL rt0.c1, vt0.c0, rt0.c0, rt0.c3, vt0.c1, vt2.c0 FROM vt2 CROSS JOIN rt0 ON ABS(DISTINCT (rt0.c0 IN ())) RIGHT OUTER JOIN vt0 ON ((rt0.c5)<<(rt0.c3)) COLLATE RTRIM GROUP BY rt0.c1, vt0.c0, rt0.c0, rt0.c3, vt0.c1, vt2.c0 HAVING (NOT (SUM(AVG(COUNT(*))))) UNION ALL SELECT rt0.c1, vt0.c0, rt0.c0, rt0.c3, vt0.c1, vt2.c0 FROM vt2 CROSS JOIN rt0 ON ABS(DISTINCT (rt0.c0 IN ())) RIGHT OUTER JOIN vt0 ON ((rt0.c5)<<(rt0.c3)) COLLATE RTRIM GROUP BY rt0.c1, vt0.c0, rt0.c0, rt0.c3, vt0.c1, vt2.c0 HAVING ((SUM(AVG(COUNT(*)))) ISNULL);
SELECT ALL * FROM rt0;
SELECT * FROM rt0 WHERE (ABS(DISTINCT (NOT (rt0.c2)))) UNION ALL SELECT * FROM rt0 WHERE ((NOT (ABS(DISTINCT (NOT (rt0.c2)))))) UNION ALL SELECT * FROM rt0 WHERE (((ABS(DISTINCT (NOT (rt0.c2)))) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (v0.c0 COLLATE RTRIM) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (v0.c0 COLLATE RTRIM))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((v0.c0 COLLATE RTRIM) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT ALL rt0.c2, rt0.c5, rt0.c0, rt0.c3, v0.c0 FROM rt0, v0 GROUP BY rt0.c2, rt0.c5, rt0.c0, rt0.c3, v0.c0;
SELECT rt0.c2, rt0.c5, rt0.c0, rt0.c3, v0.c0 FROM rt0, v0 WHERE (0.6983423265631096) GROUP BY rt0.c2, rt0.c5, rt0.c0, rt0.c3, v0.c0 UNION SELECT rt0.c2, rt0.c5, rt0.c0, rt0.c3, v0.c0 FROM rt0, v0 WHERE ((NOT (0.6983423265631096))) GROUP BY rt0.c2, rt0.c5, rt0.c0, rt0.c3, v0.c0 UNION SELECT ALL rt0.c2, rt0.c5, rt0.c0, rt0.c3, v0.c0 FROM rt0, v0 WHERE (((0.6983423265631096) ISNULL)) GROUP BY rt0.c2, rt0.c5, rt0.c0, rt0.c3, v0.c0;
SELECT ALL rt0.c2, rt0.c5, rt0.c0, rt0.c3, v0.c0 FROM rt0, v0 GROUP BY rt0.c2, rt0.c5, rt0.c0, rt0.c3, v0.c0;
SELECT vt1.c1, v0.c0, vt1.c0 FROM v0, vt1 GROUP BY vt1.c1, v0.c0, vt1.c0;
SELECT ALL vt1.c1, v0.c0, vt1.c0 FROM v0, vt1 GROUP BY vt1.c1, v0.c0, vt1.c0 HAVING ((((SUM(AVG(AVG(SUM(v0.c0)))))OR(COUNT(*))))OR(json_extract(vt1.c1, AVG(SUM(MAX(v0.c0))), SUM(vt1.c0), v0.c0))) UNION ALL SELECT vt1.c1, v0.c0, vt1.c0 FROM v0, vt1 GROUP BY vt1.c1, v0.c0, vt1.c0 HAVING (NOT (((((SUM(AVG(AVG(SUM(v0.c0)))))OR(COUNT(*))))OR(json_extract(vt1.c1, AVG(SUM(MAX(v0.c0))), SUM(vt1.c0), v0.c0))))) UNION ALL SELECT vt1.c1, v0.c0, vt1.c0 FROM v0, vt1 GROUP BY vt1.c1, v0.c0, vt1.c0 HAVING ((((((SUM(AVG(AVG(SUM(v0.c0)))))OR(COUNT(*))))OR(json_extract(vt1.c1, AVG(SUM(MAX(v0.c0))), SUM(vt1.c0), v0.c0)))) ISNULL);
SELECT vt1.c0, v0.c0, vt1.c1 FROM vt1, v0;
SELECT ALL vt1.c0, v0.c0, vt1.c1 FROM vt1, v0 WHERE ((((((((vt1.c0)) NOT BETWEEN ((v0.c0)) AND ((vt1.c1))))AND(((vt1.c1) NOTNULL))))AND(CASE vt1.c1  WHEN v0.c0 THEN vt1.c1 END))) UNION ALL SELECT vt1.c0, v0.c0, vt1.c1 FROM vt1, v0 WHERE ((NOT ((((((((vt1.c0)) NOT BETWEEN ((v0.c0)) AND ((vt1.c1))))AND(((vt1.c1) NOTNULL))))AND(CASE vt1.c1  WHEN v0.c0 THEN vt1.c1 END))))) UNION ALL SELECT ALL vt1.c0, v0.c0, vt1.c1 FROM vt1, v0 WHERE ((((((((((vt1.c0)) NOT BETWEEN ((v0.c0)) AND ((vt1.c1))))AND(((vt1.c1) NOTNULL))))AND(CASE vt1.c1  WHEN v0.c0 THEN vt1.c1 END))) ISNULL));
SELECT vt1.c0, v0.c0, vt1.c1 FROM vt1, v0;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (((((((vt1.c1)OR(vt1.c1)))OR(vt1.c0)))<=(CAST(x'' AS NUMERIC)))) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (((((((vt1.c1)OR(vt1.c1)))OR(vt1.c0)))<=(CAST(x'' AS NUMERIC)))))) UNION SELECT DISTINCT * FROM vt1 WHERE (((((((((vt1.c1)OR(vt1.c1)))OR(vt1.c0)))<=(CAST(x'' AS NUMERIC)))) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT rt0.c4, rt0.c0, v0.c0 FROM rt0, vt0 LEFT OUTER JOIN v0 ON (('1608225401')>=(((rt0.c0) NOT BETWEEN (rt0.c1) AND (vt0.c1)))) RIGHT OUTER JOIN vt1 ON ((((rt0.c1)AND(((((vt1.c0)AND(vt1.c0)))AND(rt0.c3)))))OR(((vt1.c0) BETWEEN (rt0.c4) AND (rt0.c1)))) GROUP BY rt0.c4, rt0.c0, v0.c0;
SELECT rt0.c4, rt0.c0, v0.c0 FROM rt0, vt0 LEFT OUTER JOIN v0 ON (('1608225401')>=(((rt0.c0) NOT BETWEEN (rt0.c1) AND (vt0.c1)))) RIGHT OUTER JOIN vt1 ON ((((rt0.c1)AND(((((vt1.c0)AND(vt1.c0)))AND(rt0.c3)))))OR(((vt1.c0) BETWEEN (rt0.c4) AND (rt0.c1)))) WHERE (NULLIF(CASE 0.4925361171810967  WHEN vt1.c1 THEN rt0.c5 END, ((v0.c0) BETWEEN (rt0.c5) AND ('0.06621520696766203')))) GROUP BY rt0.c4, rt0.c0, v0.c0 UNION SELECT rt0.c4, rt0.c0, v0.c0 FROM rt0, vt0 LEFT OUTER JOIN v0 ON (('1608225401')>=(((rt0.c0) NOT BETWEEN (rt0.c1) AND (vt0.c1)))) RIGHT OUTER JOIN vt1 ON ((((rt0.c1)AND(((((vt1.c0)AND(vt1.c0)))AND(rt0.c3)))))OR(((vt1.c0) BETWEEN (rt0.c4) AND (rt0.c1)))) WHERE ((NOT (NULLIF(CASE 0.4925361171810967  WHEN vt1.c1 THEN rt0.c5 END, ((v0.c0) BETWEEN (rt0.c5) AND ('0.06621520696766203')))))) GROUP BY rt0.c4, rt0.c0, v0.c0 UNION SELECT ALL rt0.c4, rt0.c0, v0.c0 FROM rt0, vt0 LEFT OUTER JOIN v0 ON (('1608225401')>=(((rt0.c0) NOT BETWEEN (rt0.c1) AND (vt0.c1)))) RIGHT OUTER JOIN vt1 ON ((((rt0.c1)AND(((((vt1.c0)AND(vt1.c0)))AND(rt0.c3)))))OR(((vt1.c0) BETWEEN (rt0.c4) AND (rt0.c1)))) WHERE (((NULLIF(CASE 0.4925361171810967  WHEN vt1.c1 THEN rt0.c5 END, ((v0.c0) BETWEEN (rt0.c5) AND ('0.06621520696766203')))) ISNULL)) GROUP BY rt0.c4, rt0.c0, v0.c0;
SELECT rt0.c4, rt0.c0, v0.c0 FROM rt0, vt0 LEFT OUTER JOIN v0 ON (('1608225401')>=(((rt0.c0) NOT BETWEEN (rt0.c1) AND (vt0.c1)))) RIGHT OUTER JOIN vt1 ON ((((rt0.c1)AND(((((vt1.c0)AND(vt1.c0)))AND(rt0.c3)))))OR(((vt1.c0) BETWEEN (rt0.c4) AND (rt0.c1)))) GROUP BY rt0.c4, rt0.c0, v0.c0;
SELECT ALL rt0.c3, v0.c0 FROM rt0, vt2, v0 GROUP BY rt0.c3, v0.c0;
SELECT rt0.c3, v0.c0 FROM rt0, vt2, v0 GROUP BY rt0.c3, v0.c0 HAVING SUM(TOTAL(AVG(rt0.c0))) UNION ALL SELECT rt0.c3, v0.c0 FROM rt0, vt2, v0 GROUP BY rt0.c3, v0.c0 HAVING (NOT (SUM(TOTAL(AVG(rt0.c0))))) UNION ALL SELECT ALL rt0.c3, v0.c0 FROM rt0, vt2, v0 GROUP BY rt0.c3, v0.c0 HAVING ((SUM(TOTAL(AVG(rt0.c0)))) ISNULL);
SELECT rt0.c0, rt0.c3, rt0.c1, vt0.c0, rt0.c5, vt1.c0 FROM vt0, rt0, vt1, v0;
SELECT rt0.c0, rt0.c3, rt0.c1, vt0.c0, rt0.c5, vt1.c0 FROM vt0, rt0, vt1, v0 WHERE ((((290557729, ((rt0.c4) NOTNULL), v0.c0))=((((v0.c0)+(rt0.c1)), (- (vt0.c1)), ((v0.c0)/(rt0.c3)))))) UNION ALL SELECT ALL rt0.c0, rt0.c3, rt0.c1, vt0.c0, rt0.c5, vt1.c0 FROM vt0, rt0, vt1, v0 WHERE ((NOT ((((290557729, ((rt0.c4) NOTNULL), v0.c0))=((((v0.c0)+(rt0.c1)), (- (vt0.c1)), ((v0.c0)/(rt0.c3)))))))) UNION ALL SELECT rt0.c0, rt0.c3, rt0.c1, vt0.c0, rt0.c5, vt1.c0 FROM vt0, rt0, vt1, v0 WHERE ((((((290557729, ((rt0.c4) NOTNULL), v0.c0))=((((v0.c0)+(rt0.c1)), (- (vt0.c1)), ((v0.c0)/(rt0.c3)))))) ISNULL));
SELECT rt0.c0, rt0.c3, rt0.c1, vt0.c0, rt0.c5, vt1.c0 FROM vt0, rt0, vt1, v0;
SELECT DISTINCT rt0.c1, vt0.c0, rt0.c5 FROM vt0, rt0 INNER JOIN vt1 ON ((0.979377165827066)/((((v0.c0))>((rt0.c2))))) RIGHT OUTER JOIN v0 ON ((rt0.c0 COLLATE BINARY)LIKE(((NULL)!=(rt0.c4))));
SELECT vt2.c0 FROM vt2, v0, vt0, vt1 GROUP BY vt2.c0;
SELECT vt2.c0 FROM vt2, v0, vt0, vt1 WHERE (UPPER(DISTINCT (((v0.c0, v0.c0, vt1.c1)) BETWEEN ((vt0.c1, vt0.c1, vt2.c0)) AND ((v0.c0, -1.17694333E9, vt0.c0))))) GROUP BY vt2.c0 UNION SELECT ALL vt2.c0 FROM vt2, v0, vt0, vt1 WHERE ((NOT (UPPER(DISTINCT (((v0.c0, v0.c0, vt1.c1)) BETWEEN ((vt0.c1, vt0.c1, vt2.c0)) AND ((v0.c0, -1.17694333E9, vt0.c0))))))) GROUP BY vt2.c0 UNION SELECT ALL vt2.c0 FROM vt2, v0, vt0, vt1 WHERE (((UPPER(DISTINCT (((v0.c0, v0.c0, vt1.c1)) BETWEEN ((vt0.c1, vt0.c1, vt2.c0)) AND ((v0.c0, -1.17694333E9, vt0.c0))))) ISNULL)) GROUP BY vt2.c0;
SELECT vt2.c0 FROM vt2, v0, vt0, vt1 GROUP BY vt2.c0;
SELECT ALL v0.c0, vt0.c0, rt0.c2, vt1.c0, rt0.c3, rt0.c0, vt0.c1, rt0.c4, vt1.c1, rt0.c5, rt0.c1 FROM vt1, v0, rt0, vt0 GROUP BY v0.c0, vt0.c0, rt0.c2, vt1.c0, rt0.c3, rt0.c0, vt0.c1, rt0.c4, vt1.c1, rt0.c5, rt0.c1;
SELECT ALL v0.c0, vt0.c0, rt0.c2, vt1.c0, rt0.c3, rt0.c0, vt0.c1, rt0.c4, vt1.c1, rt0.c5, rt0.c1 FROM vt1, v0, rt0, vt0 GROUP BY v0.c0, vt0.c0, rt0.c2, vt1.c0, rt0.c3, rt0.c0, vt0.c1, rt0.c4, vt1.c1, rt0.c5, rt0.c1 HAVING SUM(v0.c0) UNION ALL SELECT v0.c0, vt0.c0, rt0.c2, vt1.c0, rt0.c3, rt0.c0, vt0.c1, rt0.c4, vt1.c1, rt0.c5, rt0.c1 FROM vt1, v0, rt0, vt0 GROUP BY v0.c0, vt0.c0, rt0.c2, vt1.c0, rt0.c3, rt0.c0, vt0.c1, rt0.c4, vt1.c1, rt0.c5, rt0.c1 HAVING (NOT (SUM(v0.c0))) UNION ALL SELECT ALL v0.c0, vt0.c0, rt0.c2, vt1.c0, rt0.c3, rt0.c0, vt0.c1, rt0.c4, vt1.c1, rt0.c5, rt0.c1 FROM vt1, v0, rt0, vt0 GROUP BY v0.c0, vt0.c0, rt0.c2, vt1.c0, rt0.c3, rt0.c0, vt0.c1, rt0.c4, vt1.c1, rt0.c5, rt0.c1 HAVING ((SUM(v0.c0)) ISNULL);
SELECT ALL v0.c0, vt0.c0, rt0.c2, vt1.c0, rt0.c3, rt0.c0, vt0.c1, rt0.c4, vt1.c1, rt0.c5, rt0.c1 FROM vt1, v0, rt0, vt0 GROUP BY v0.c0, vt0.c0, rt0.c2, vt1.c0, rt0.c3, rt0.c0, vt0.c1, rt0.c4, vt1.c1, rt0.c5, rt0.c1;
SELECT ALL v0.c0, vt0.c0, rt0.c2, vt1.c0, rt0.c3, rt0.c0, vt0.c1, rt0.c4, vt1.c1, rt0.c5, rt0.c1 FROM vt1, v0, rt0, vt0 GROUP BY v0.c0, vt0.c0, rt0.c2, vt1.c0, rt0.c3, rt0.c0, vt0.c1, rt0.c4, vt1.c1, rt0.c5, rt0.c1 HAVING SUM(v0.c0) UNION ALL SELECT v0.c0, vt0.c0, rt0.c2, vt1.c0, rt0.c3, rt0.c0, vt0.c1, rt0.c4, vt1.c1, rt0.c5, rt0.c1 FROM vt1, v0, rt0, vt0 GROUP BY v0.c0, vt0.c0, rt0.c2, vt1.c0, rt0.c3, rt0.c0, vt0.c1, rt0.c4, vt1.c1, rt0.c5, rt0.c1 HAVING (NOT (SUM(v0.c0))) UNION ALL SELECT ALL v0.c0, vt0.c0, rt0.c2, vt1.c0, rt0.c3, rt0.c0, vt0.c1, rt0.c4, vt1.c1, rt0.c5, rt0.c1 FROM vt1, v0, rt0, vt0 GROUP BY v0.c0, vt0.c0, rt0.c2, vt1.c0, rt0.c3, rt0.c0, vt0.c1, rt0.c4, vt1.c1, rt0.c5, rt0.c1 HAVING ((SUM(v0.c0)) ISNULL);
SELECT ALL v0.c0, vt0.c0, rt0.c2, vt1.c0, rt0.c3, rt0.c0, vt0.c1, rt0.c4, vt1.c1, rt0.c5, rt0.c1 FROM vt1, v0, rt0, vt0 GROUP BY v0.c0, vt0.c0, rt0.c2, vt1.c0, rt0.c3, rt0.c0, vt0.c1, rt0.c4, vt1.c1, rt0.c5, rt0.c1;
SELECT rt0.c1 FROM rt0, vt1 INNER JOIN v0 ON TRIM(CASE rt0.c5  WHEN vt1.c0 THEN v0.c0 END, SUBSTR(vt2.c0, rt0.c0)) FULL OUTER JOIN vt0 ON CAST(rt0.c2 AS NUMERIC) RIGHT OUTER JOIN vt2 ON ((((rt0.c4) IS FALSE))/((('')>>(rt0.c3))));
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (NULL) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (NULL))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((NULL) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT ALL vt1.c0, vt2.c0, vt1.c1 FROM vt1 LEFT OUTER JOIN vt2 ON ((TRIM(DISTINCT vt1.c1, vt2.c0)) BETWEEN (((((((((vt1.c0)AND(0.9219950197240797)))OR(vt1.c0)))AND(vt1.c1)))AND(vt2.c0))) AND (vt1.c1 COLLATE NOCASE)) GROUP BY vt1.c0, vt2.c0, vt1.c1;
SELECT ALL vt1.c0, vt2.c0, vt1.c1 FROM vt1 LEFT OUTER JOIN vt2 ON ((TRIM(DISTINCT vt1.c1, vt2.c0)) BETWEEN (((((((((vt1.c0)AND(0.9219950197240797)))OR(vt1.c0)))AND(vt1.c1)))AND(vt2.c0))) AND (vt1.c1 COLLATE NOCASE)) WHERE (((((vt1.c1) IS TRUE)) NOT NULL)) GROUP BY vt1.c0, vt2.c0, vt1.c1 UNION SELECT vt1.c0, vt2.c0, vt1.c1 FROM vt1 LEFT OUTER JOIN vt2 ON ((TRIM(DISTINCT vt1.c1, vt2.c0)) BETWEEN (((((((((vt1.c0)AND(0.9219950197240797)))OR(vt1.c0)))AND(vt1.c1)))AND(vt2.c0))) AND (vt1.c1 COLLATE NOCASE)) WHERE ((NOT (((((vt1.c1) IS TRUE)) NOT NULL)))) GROUP BY vt1.c0, vt2.c0, vt1.c1 UNION SELECT ALL vt1.c0, vt2.c0, vt1.c1 FROM vt1 LEFT OUTER JOIN vt2 ON ((TRIM(DISTINCT vt1.c1, vt2.c0)) BETWEEN (((((((((vt1.c0)AND(0.9219950197240797)))OR(vt1.c0)))AND(vt1.c1)))AND(vt2.c0))) AND (vt1.c1 COLLATE NOCASE)) WHERE (((((((vt1.c1) IS TRUE)) NOT NULL)) ISNULL)) GROUP BY vt1.c0, vt2.c0, vt1.c1;
SELECT ALL vt1.c0, vt2.c0, vt1.c1 FROM vt1 LEFT OUTER JOIN vt2 ON ((TRIM(DISTINCT vt1.c1, vt2.c0)) BETWEEN (((((((((vt1.c0)AND(0.9219950197240797)))OR(vt1.c0)))AND(vt1.c1)))AND(vt2.c0))) AND (vt1.c1 COLLATE NOCASE)) GROUP BY vt1.c0, vt2.c0, vt1.c1;
SELECT ALL vt1.c1, vt0.c1 FROM vt0 FULL OUTER JOIN vt1 ON ((((vt0.c0 IN ())))>((((rt0.c0) IS TRUE)))) CROSS JOIN rt0 ON ((((((vt1.c0)AND(rt0.c0)))AND(rt0.c0)))AND(((((((((rt0.c0)AND(-540922760)))OR(vt1.c0)))AND('1069945024')))AND(rt0.c5)))) CROSS JOIN vt2 ON (((((~ (rt0.c5)))AND(CAST(rt0.c5 AS TEXT))))AND(rt0.c5)) GROUP BY vt1.c1, vt0.c1;
SELECT TOTAL(((x'') NOT BETWEEN (510887741 COLLATE NOCASE) AND (CAST('2061089081' AS NUMERIC)))) FROM vt0, rt0, vt2 ORDER BY ((((rt0.c3) NOT BETWEEN ('X#x郹aE~2D') AND (vt0.c0))) NOT BETWEEN (rt0.c4) AND (vt0.c0)) ASC;
SELECT rt0.c0 FROM rt0;
SELECT ALL rt0.c0 FROM rt0 WHERE (INSTR('g>,[]N', rt0.c0) COLLATE RTRIM) UNION ALL SELECT rt0.c0 FROM rt0 WHERE ((NOT (INSTR('g>,[]N', rt0.c0) COLLATE RTRIM))) UNION ALL SELECT rt0.c0 FROM rt0 WHERE (((INSTR('g>,[]N', rt0.c0) COLLATE RTRIM) ISNULL));
SELECT rt0.c0 FROM rt0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (((((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))AND(v0.c0)))AND(v0.c0)))LIKE((NOT (v0.c0))))) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (((((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))AND(v0.c0)))AND(v0.c0)))LIKE((NOT (v0.c0))))))) UNION SELECT DISTINCT * FROM v0 WHERE (((((((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))AND(v0.c0)))AND(v0.c0)))LIKE((NOT (v0.c0))))) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (((CASE v0.c0  WHEN v0.c0 THEN v0.c0 END) BETWEEN (NULL) AND (((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (((CASE v0.c0  WHEN v0.c0 THEN v0.c0 END) BETWEEN (NULL) AND (((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE (((((CASE v0.c0  WHEN v0.c0 THEN v0.c0 END) BETWEEN (NULL) AND (((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT vt0.c1, rt0.c3, rt0.c5, vt2.c0, vt0.c0, rt0.c4, v0.c0, rt0.c2, rt0.c1, rt0.c0 FROM rt0, vt0, vt2, v0 GROUP BY vt0.c1, rt0.c3, rt0.c5, vt2.c0, vt0.c0, rt0.c4, v0.c0, rt0.c2, rt0.c1, rt0.c0;
SELECT vt0.c1, rt0.c3, rt0.c5, vt2.c0, vt0.c0, rt0.c4, v0.c0, rt0.c2, rt0.c1, rt0.c0 FROM rt0, vt0, vt2, v0 GROUP BY vt0.c1, rt0.c3, rt0.c5, vt2.c0, vt0.c0, rt0.c4, v0.c0, rt0.c2, rt0.c1, rt0.c0 HAVING CASE MIN(rt0.c3)  WHEN COUNT(rt0.c0) THEN SUM(rt0.c3) END UNION ALL SELECT ALL vt0.c1, rt0.c3, rt0.c5, vt2.c0, vt0.c0, rt0.c4, v0.c0, rt0.c2, rt0.c1, rt0.c0 FROM rt0, vt0, vt2, v0 GROUP BY vt0.c1, rt0.c3, rt0.c5, vt2.c0, vt0.c0, rt0.c4, v0.c0, rt0.c2, rt0.c1, rt0.c0 HAVING (NOT (CASE MIN(rt0.c3)  WHEN COUNT(rt0.c0) THEN SUM(rt0.c3) END)) UNION ALL SELECT ALL vt0.c1, rt0.c3, rt0.c5, vt2.c0, vt0.c0, rt0.c4, v0.c0, rt0.c2, rt0.c1, rt0.c0 FROM rt0, vt0, vt2, v0 GROUP BY vt0.c1, rt0.c3, rt0.c5, vt2.c0, vt0.c0, rt0.c4, v0.c0, rt0.c2, rt0.c1, rt0.c0 HAVING ((CASE MIN(rt0.c3)  WHEN COUNT(rt0.c0) THEN SUM(rt0.c3) END) ISNULL);
SELECT vt0.c1, rt0.c3, rt0.c5, vt2.c0, vt0.c0, rt0.c4, v0.c0, rt0.c2, rt0.c1, rt0.c0 FROM rt0, vt0, vt2, v0 GROUP BY vt0.c1, rt0.c3, rt0.c5, vt2.c0, vt0.c0, rt0.c4, v0.c0, rt0.c2, rt0.c1, rt0.c0;
SELECT vt0.c1, rt0.c3, rt0.c5, vt2.c0, vt0.c0, rt0.c4, v0.c0, rt0.c2, rt0.c1, rt0.c0 FROM rt0, vt0, vt2, v0 GROUP BY vt0.c1, rt0.c3, rt0.c5, vt2.c0, vt0.c0, rt0.c4, v0.c0, rt0.c2, rt0.c1, rt0.c0 HAVING CASE MIN(rt0.c3)  WHEN COUNT(rt0.c0) THEN SUM(rt0.c3) END UNION ALL SELECT ALL vt0.c1, rt0.c3, rt0.c5, vt2.c0, vt0.c0, rt0.c4, v0.c0, rt0.c2, rt0.c1, rt0.c0 FROM rt0, vt0, vt2, v0 GROUP BY vt0.c1, rt0.c3, rt0.c5, vt2.c0, vt0.c0, rt0.c4, v0.c0, rt0.c2, rt0.c1, rt0.c0 HAVING (NOT (CASE MIN(rt0.c3)  WHEN COUNT(rt0.c0) THEN SUM(rt0.c3) END)) UNION ALL SELECT ALL vt0.c1, rt0.c3, rt0.c5, vt2.c0, vt0.c0, rt0.c4, v0.c0, rt0.c2, rt0.c1, rt0.c0 FROM rt0, vt0, vt2, v0 GROUP BY vt0.c1, rt0.c3, rt0.c5, vt2.c0, vt0.c0, rt0.c4, v0.c0, rt0.c2, rt0.c1, rt0.c0 HAVING ((CASE MIN(rt0.c3)  WHEN COUNT(rt0.c0) THEN SUM(rt0.c3) END) ISNULL);
SELECT vt0.c1, rt0.c3, rt0.c5, vt2.c0, vt0.c0, rt0.c4, v0.c0, rt0.c2, rt0.c1, rt0.c0 FROM rt0, vt0, vt2, v0 GROUP BY vt0.c1, rt0.c3, rt0.c5, vt2.c0, vt0.c0, rt0.c4, v0.c0, rt0.c2, rt0.c1, rt0.c0;
SELECT SUM(0.5820193758886882) FROM v0, vt2, vt1 ORDER BY ((((vt1.c1) NOTNULL)) NOTNULL), json_array_length(CAST(v0.c0 AS INTEGER))  NULLS FIRST;
SELECT vt0.c0, rt0.c1, rt0.c3, vt1.c1, rt0.c5, rt0.c4, rt0.c0 FROM v0, vt0 LEFT OUTER JOIN vt1 ON CAST(((vt0.c1)<>(vt0.c0)) AS INTEGER) LEFT OUTER JOIN rt0 ON ((((((rt0.c1) ISNULL))AND(((rt0.c0)+(vt0.c0)))))AND(((v0.c0) NOT BETWEEN (rt0.c2) AND (vt1.c1)))) INNER JOIN vt2 ON ((((vt2.c0 COLLATE BINARY)OR(CAST(vt1.c1 AS INTEGER))))AND(vt1.c1 COLLATE RTRIM));
SELECT vt0.c0, rt0.c1, rt0.c3, vt1.c1, rt0.c5, rt0.c4, rt0.c0 FROM v0, vt0 LEFT OUTER JOIN vt1 ON CAST(((vt0.c1)!=(vt0.c0)) AS INTEGER) LEFT OUTER JOIN rt0 ON ((((((rt0.c1) ISNULL))AND(((rt0.c0)+(vt0.c0)))))AND(((v0.c0) NOT BETWEEN (rt0.c2) AND (vt1.c1)))) INNER JOIN vt2 ON ((((vt2.c0 COLLATE BINARY)OR(CAST(vt1.c1 AS INTEGER))))AND(vt1.c1 COLLATE RTRIM)) WHERE ((((v0.c0)) NOT BETWEEN ((HEX(rt0.c5))) AND (((((vt0.c1))!=((0xfffffffff258c239))))))) UNION ALL SELECT vt0.c0, rt0.c1, rt0.c3, vt1.c1, rt0.c5, rt0.c4, rt0.c0 FROM v0, vt0 LEFT OUTER JOIN vt1 ON CAST(((vt0.c1)!=(vt0.c0)) AS INTEGER) LEFT OUTER JOIN rt0 ON ((((((rt0.c1) ISNULL))AND(((rt0.c0)+(vt0.c0)))))AND(((v0.c0) NOT BETWEEN (rt0.c2) AND (vt1.c1)))) INNER JOIN vt2 ON ((((vt2.c0 COLLATE BINARY)OR(CAST(vt1.c1 AS INTEGER))))AND(vt1.c1 COLLATE RTRIM)) WHERE ((NOT ((((v0.c0)) NOT BETWEEN ((HEX(rt0.c5))) AND (((((vt0.c1))!=((0Xfffffffff258c239))))))))) UNION ALL SELECT ALL vt0.c0, rt0.c1, rt0.c3, vt1.c1, rt0.c5, rt0.c4, rt0.c0 FROM v0, vt0 LEFT OUTER JOIN vt1 ON CAST(((vt0.c1)<>(vt0.c0)) AS INTEGER) LEFT OUTER JOIN rt0 ON ((((((rt0.c1) ISNULL))AND(((rt0.c0)+(vt0.c0)))))AND(((v0.c0) NOT BETWEEN (rt0.c2) AND (vt1.c1)))) INNER JOIN vt2 ON ((((vt2.c0 COLLATE BINARY)OR(CAST(vt1.c1 AS INTEGER))))AND(vt1.c1 COLLATE RTRIM)) WHERE ((((((v0.c0)) NOT BETWEEN ((HEX(rt0.c5))) AND (((((vt0.c1))!=((0Xfffffffff258c239))))))) ISNULL));
SELECT vt0.c0, rt0.c1, rt0.c3, vt1.c1, rt0.c5, rt0.c4, rt0.c0 FROM v0, vt0 LEFT OUTER JOIN vt1 ON CAST(((vt0.c1)<>(vt0.c0)) AS INTEGER) LEFT OUTER JOIN rt0 ON ((((((rt0.c1) ISNULL))AND(((rt0.c0)+(vt0.c0)))))AND(((v0.c0) NOT BETWEEN (rt0.c2) AND (vt1.c1)))) INNER JOIN vt2 ON ((((vt2.c0 COLLATE BINARY)OR(CAST(vt1.c1 AS INTEGER))))AND(vt1.c1 COLLATE RTRIM));
SELECT DISTINCT vt1.c1 FROM vt2, vt1;
SELECT DISTINCT vt1.c1 FROM vt2, vt1 WHERE ((- (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt2.c0))))) UNION SELECT DISTINCT vt1.c1 FROM vt2, vt1 WHERE ((NOT ((- (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt2.c0))))))) UNION SELECT DISTINCT vt1.c1 FROM vt2, vt1 WHERE ((((- (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt2.c0))))) ISNULL));
SELECT DISTINCT vt1.c1 FROM vt2, vt1;
SELECT v0.c0, vt1.c1, vt1.c0, vt0.c0 FROM vt2, vt0, vt1, v0 GROUP BY v0.c0, vt1.c1, vt1.c0, vt0.c0;
SELECT ALL v0.c0, vt1.c1, vt1.c0, vt0.c0 FROM vt2, vt0, vt1, v0 WHERE (((((((((((((((vt1.c1)AND(vt1.c0)))OR(vt1.c0)))AND(vt2.c0)))OR(vt1.c1)))OR(1.05163897E9)))OR(vt1.c0))) NOTNULL)) GROUP BY v0.c0, vt1.c1, vt1.c0, vt0.c0 UNION SELECT ALL v0.c0, vt1.c1, vt1.c0, vt0.c0 FROM vt2, vt0, vt1, v0 WHERE ((NOT (((((((((((((((vt1.c1)AND(vt1.c0)))OR(vt1.c0)))AND(vt2.c0)))OR(vt1.c1)))OR(1.05163897E9)))OR(vt1.c0))) NOTNULL)))) GROUP BY v0.c0, vt1.c1, vt1.c0, vt0.c0 UNION SELECT ALL v0.c0, vt1.c1, vt1.c0, vt0.c0 FROM vt2, vt0, vt1, v0 WHERE (((((((((((((((((vt1.c1)AND(vt1.c0)))OR(vt1.c0)))AND(vt2.c0)))OR(vt1.c1)))OR(1.05163897E9)))OR(vt1.c0))) NOTNULL)) ISNULL)) GROUP BY v0.c0, vt1.c1, vt1.c0, vt0.c0;
SELECT v0.c0, vt1.c1, vt1.c0, vt0.c0 FROM vt2, vt0, vt1, v0 GROUP BY v0.c0, vt1.c1, vt1.c0, vt0.c0;
SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING COUNT(((vt2.c0)%(SUM(vt2.c0)))) UNION ALL SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING (NOT (COUNT(((vt2.c0)%(SUM(vt2.c0)))))) UNION ALL SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING ((COUNT(((vt2.c0)%(SUM(vt2.c0))))) ISNULL);
SELECT ALL vt2.c0, vt0.c1, v0.c0, vt0.c0 FROM v0, vt2 NATURAL JOIN vt0;
SELECT vt2.c0, vt0.c1, v0.c0, vt0.c0 FROM v0, vt2 NATURAL JOIN vt0 WHERE (CASE vt2.c0  WHEN 'sN' THEN '' WHEN vt0.c1 THEN v0.c0 WHEN vt0.c0 THEN x'ad29' END COLLATE BINARY) UNION ALL SELECT ALL vt2.c0, vt0.c1, v0.c0, vt0.c0 FROM v0, vt2 NATURAL JOIN vt0 WHERE ((NOT (CASE vt2.c0  WHEN 'sN' THEN '' WHEN vt0.c1 THEN v0.c0 WHEN vt0.c0 THEN x'ad29' END COLLATE BINARY))) UNION ALL SELECT vt2.c0, vt0.c1, v0.c0, vt0.c0 FROM v0, vt2 NATURAL JOIN vt0 WHERE (((CASE vt2.c0  WHEN 'sN' THEN '' WHEN vt0.c1 THEN v0.c0 WHEN vt0.c0 THEN x'ad29' END COLLATE BINARY) ISNULL));
SELECT ALL vt2.c0, vt0.c1, v0.c0, vt0.c0 FROM v0, vt2 NATURAL JOIN vt0;
SELECT DISTINCT rt0.c1, v0.c0, rt0.c4, rt0.c3, rt0.c5, rt0.c0, rt0.c2 FROM vt0, v0, rt0;
SELECT DISTINCT rt0.c1, v0.c0, rt0.c4, rt0.c3, rt0.c5, rt0.c0, rt0.c2 FROM vt0, v0, rt0 WHERE ((((v0.c0)) BETWEEN ((rt0.c1)) AND (((~ (vt0.c1)))))) UNION SELECT DISTINCT rt0.c1, v0.c0, rt0.c4, rt0.c3, rt0.c5, rt0.c0, rt0.c2 FROM vt0, v0, rt0 WHERE ((NOT ((((v0.c0)) BETWEEN ((rt0.c1)) AND (((~ (vt0.c1)))))))) UNION SELECT DISTINCT rt0.c1, v0.c0, rt0.c4, rt0.c3, rt0.c5, rt0.c0, rt0.c2 FROM vt0, v0, rt0 WHERE ((((((v0.c0)) BETWEEN ((rt0.c1)) AND (((~ (vt0.c1)))))) ISNULL));
SELECT DISTINCT rt0.c1, v0.c0, rt0.c4, rt0.c3, rt0.c5, rt0.c0, rt0.c2 FROM vt0, v0, rt0;
SELECT ALL rt0.c5, rt0.c0, rt0.c3, vt1.c0, v0.c0, rt0.c4, rt0.c1, vt2.c0, vt1.c1, rt0.c2 FROM rt0, vt2, vt1 FULL OUTER JOIN v0 ON (+ (((vt1.c0) ISNULL))) GROUP BY rt0.c5, rt0.c0, rt0.c3, vt1.c0, v0.c0, rt0.c4, rt0.c1, vt2.c0, vt1.c1, rt0.c2;
SELECT ALL rt0.c5, rt0.c0, rt0.c3, vt1.c0, v0.c0, rt0.c4, rt0.c1, vt2.c0, vt1.c1, rt0.c2 FROM rt0, vt2, vt1 FULL OUTER JOIN v0 ON (+ (((vt1.c0) ISNULL))) WHERE (((x'')LIKE(rt0.c0))) GROUP BY rt0.c5, rt0.c0, rt0.c3, vt1.c0, v0.c0, rt0.c4, rt0.c1, vt2.c0, vt1.c1, rt0.c2 UNION SELECT rt0.c5, rt0.c0, rt0.c3, vt1.c0, v0.c0, rt0.c4, rt0.c1, vt2.c0, vt1.c1, rt0.c2 FROM rt0, vt2, vt1 FULL OUTER JOIN v0 ON (+ (((vt1.c0) ISNULL))) WHERE ((NOT (((x'')LIKE(rt0.c0))))) GROUP BY rt0.c5, rt0.c0, rt0.c3, vt1.c0, v0.c0, rt0.c4, rt0.c1, vt2.c0, vt1.c1, rt0.c2 UNION SELECT rt0.c5, rt0.c0, rt0.c3, vt1.c0, v0.c0, rt0.c4, rt0.c1, vt2.c0, vt1.c1, rt0.c2 FROM rt0, vt2, vt1 FULL OUTER JOIN v0 ON (+ (((vt1.c0) ISNULL))) WHERE (((((x'')LIKE(rt0.c0))) ISNULL)) GROUP BY rt0.c5, rt0.c0, rt0.c3, vt1.c0, v0.c0, rt0.c4, rt0.c1, vt2.c0, vt1.c1, rt0.c2;
SELECT ALL rt0.c5, rt0.c0, rt0.c3, vt1.c0, v0.c0, rt0.c4, rt0.c1, vt2.c0, vt1.c1, rt0.c2 FROM rt0, vt2, vt1 FULL OUTER JOIN v0 ON (+ (((vt1.c0) ISNULL))) GROUP BY rt0.c5, rt0.c0, rt0.c3, vt1.c0, v0.c0, rt0.c4, rt0.c1, vt2.c0, vt1.c1, rt0.c2;
SELECT rt0.c2, vt1.c1, rt0.c3, vt0.c0 FROM vt1, vt0, v0 FULL OUTER JOIN rt0 ON CASE (rt0.c0 IN (rt0.c1, vt0.c1))  WHEN CAST(vt1.c1 AS TEXT) THEN ((rt0.c1) ISNULL) END GROUP BY rt0.c2, vt1.c1, rt0.c3, vt0.c0;
SELECT rt0.c2, vt1.c1, rt0.c3, vt0.c0 FROM vt1, vt0, v0 FULL OUTER JOIN rt0 ON CASE (rt0.c0 IN (rt0.c1, vt0.c1))  WHEN CAST(vt1.c1 AS TEXT) THEN ((rt0.c1) ISNULL) END GROUP BY rt0.c2, vt1.c1, rt0.c3, vt0.c0 HAVING 0x20011472 UNION ALL SELECT ALL rt0.c2, vt1.c1, rt0.c3, vt0.c0 FROM vt1, vt0, v0 FULL OUTER JOIN rt0 ON CASE (rt0.c0 IN (rt0.c1, vt0.c1))  WHEN CAST(vt1.c1 AS TEXT) THEN ((rt0.c1) ISNULL) END GROUP BY rt0.c2, vt1.c1, rt0.c3, vt0.c0 HAVING (NOT (0x20011472)) UNION ALL SELECT rt0.c2, vt1.c1, rt0.c3, vt0.c0 FROM vt1, vt0, v0 FULL OUTER JOIN rt0 ON CASE (rt0.c0 IN (rt0.c1, vt0.c1))  WHEN CAST(vt1.c1 AS TEXT) THEN ((rt0.c1) ISNULL) END GROUP BY rt0.c2, vt1.c1, rt0.c3, vt0.c0 HAVING ((0X20011472) ISNULL);
SELECT rt0.c2, vt1.c1, rt0.c3, vt0.c0 FROM vt1, vt0, v0 FULL OUTER JOIN rt0 ON CASE (rt0.c0 IN (rt0.c1, vt0.c1))  WHEN CAST(vt1.c1 AS TEXT) THEN ((rt0.c1) ISNULL) END GROUP BY rt0.c2, vt1.c1, rt0.c3, vt0.c0;
SELECT rt0.c2, vt1.c1, rt0.c3, vt0.c0 FROM vt1, vt0, v0 FULL OUTER JOIN rt0 ON CASE (rt0.c0 IN (rt0.c1, vt0.c1))  WHEN CAST(vt1.c1 AS TEXT) THEN ((rt0.c1) ISNULL) END GROUP BY rt0.c2, vt1.c1, rt0.c3, vt0.c0 HAVING 0x20011472 UNION ALL SELECT ALL rt0.c2, vt1.c1, rt0.c3, vt0.c0 FROM vt1, vt0, v0 FULL OUTER JOIN rt0 ON CASE (rt0.c0 IN (rt0.c1, vt0.c1))  WHEN CAST(vt1.c1 AS TEXT) THEN ((rt0.c1) ISNULL) END GROUP BY rt0.c2, vt1.c1, rt0.c3, vt0.c0 HAVING (NOT (0x20011472)) UNION ALL SELECT rt0.c2, vt1.c1, rt0.c3, vt0.c0 FROM vt1, vt0, v0 FULL OUTER JOIN rt0 ON CASE (rt0.c0 IN (rt0.c1, vt0.c1))  WHEN CAST(vt1.c1 AS TEXT) THEN ((rt0.c1) ISNULL) END GROUP BY rt0.c2, vt1.c1, rt0.c3, vt0.c0 HAVING ((0X20011472) ISNULL);
SELECT rt0.c2, vt1.c1, rt0.c3, vt0.c0 FROM vt1, vt0, v0 FULL OUTER JOIN rt0 ON CASE (rt0.c0 IN (rt0.c1, vt0.c1))  WHEN CAST(vt1.c1 AS TEXT) THEN ((rt0.c1) ISNULL) END GROUP BY rt0.c2, vt1.c1, rt0.c3, vt0.c0;
SELECT * FROM vt1, vt0, vt2, v0, rt0;
SELECT * FROM vt1, vt0, vt2, v0 NOT INDEXED, rt0 WHERE (vt1.c0) UNION ALL SELECT * FROM vt1, vt0, vt2, v0, rt0 WHERE ((NOT (vt1.c0))) UNION ALL SELECT * FROM vt1, vt0, vt2, v0, rt0 WHERE (((vt1.c0) ISNULL));
SELECT * FROM vt1, vt0, vt2, v0, rt0;
SELECT DISTINCT vt2.c0, vt1.c0 FROM v0, rt0, vt1, vt2;
SELECT DISTINCT vt2.c0, vt1.c0 FROM v0, rt0, vt1, vt2 WHERE (vt2.c0) UNION SELECT DISTINCT vt2.c0, vt1.c0 FROM v0, rt0, vt1, vt2 WHERE ((NOT (vt2.c0))) UNION SELECT DISTINCT vt2.c0, vt1.c0 FROM v0, rt0, vt1, vt2 WHERE (((vt2.c0) ISNULL));
SELECT DISTINCT vt2.c0, vt1.c0 FROM v0, rt0, vt1, vt2;
SELECT ALL rt0.c2, rt0.c4, rt0.c0, rt0.c1, v0.c0, rt0.c3, rt0.c5 FROM rt0 LEFT OUTER JOIN v0 ON ((((((rt0.c0)>=(NULL)))AND(((rt0.c3) NOT BETWEEN (rt0.c5) AND (rt0.c1)))))AND('u~')) GROUP BY rt0.c2, rt0.c4, rt0.c0, rt0.c1, v0.c0, rt0.c3, rt0.c5;
SELECT rt0.c2, rt0.c4, rt0.c0, rt0.c1, v0.c0, rt0.c3, rt0.c5 FROM rt0 LEFT OUTER JOIN v0 ON ((((((rt0.c0)>=(NULL)))AND(((rt0.c3) NOT BETWEEN (rt0.c5) AND (rt0.c1)))))AND('u~')) WHERE ((CAST(rt0.c2 AS NUMERIC) IN ())) GROUP BY rt0.c2, rt0.c4, rt0.c0, rt0.c1, v0.c0, rt0.c3, rt0.c5 UNION SELECT ALL rt0.c2, rt0.c4, rt0.c0, rt0.c1, v0.c0, rt0.c3, rt0.c5 FROM rt0 LEFT OUTER JOIN v0 ON ((((((rt0.c0)>=(NULL)))AND(((rt0.c3) NOT BETWEEN (rt0.c5) AND (rt0.c1)))))AND('u~')) WHERE ((NOT ((CAST(rt0.c2 AS NUMERIC) IN ())))) GROUP BY rt0.c2, rt0.c4, rt0.c0, rt0.c1, v0.c0, rt0.c3, rt0.c5 UNION SELECT ALL rt0.c2, rt0.c4, rt0.c0, rt0.c1, v0.c0, rt0.c3, rt0.c5 FROM rt0 LEFT OUTER JOIN v0 ON ((((((rt0.c0)>=(NULL)))AND(((rt0.c3) NOT BETWEEN (rt0.c5) AND (rt0.c1)))))AND('u~')) WHERE ((((CAST(rt0.c2 AS NUMERIC) IN ())) ISNULL)) GROUP BY rt0.c2, rt0.c4, rt0.c0, rt0.c1, v0.c0, rt0.c3, rt0.c5;
SELECT ALL rt0.c2, rt0.c4, rt0.c0, rt0.c1, v0.c0, rt0.c3, rt0.c5 FROM rt0 LEFT OUTER JOIN v0 ON ((((((rt0.c0)>=(NULL)))AND(((rt0.c3) NOT BETWEEN (rt0.c5) AND (rt0.c1)))))AND('u~')) GROUP BY rt0.c2, rt0.c4, rt0.c0, rt0.c1, v0.c0, rt0.c3, rt0.c5;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (AVG(vt0.c1) COLLATE BINARY IN ()) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT ((AVG(vt0.c1) COLLATE BINARY IN ()))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((AVG(vt0.c1) COLLATE BINARY IN ())) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (AVG(vt0.c1) COLLATE BINARY IN ()) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT ((AVG(vt0.c1) COLLATE BINARY IN ()))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((AVG(vt0.c1) COLLATE BINARY IN ())) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL rt0.c4 FROM rt0 RIGHT OUTER JOIN v0 ON (((NULL)) NOT BETWEEN (((((v0.c0, vt2.c0, rt0.c2)) NOT BETWEEN ((rt0.c2, rt0.c0, rt0.c3)) AND ((rt0.c0, rt0.c2, rt0.c5))))) AND ((CAST(rt0.c5 AS BLOB)))) RIGHT OUTER JOIN vt1 ON ((((rt0.c3)%(rt0.c5))) IS FALSE) CROSS JOIN vt2 ON rt0.c2;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (CAST((((v0.c0))==((v0.c0))) AS REAL)) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (CAST((((v0.c0))==((v0.c0))) AS REAL)))) UNION SELECT DISTINCT * FROM v0 WHERE (((CAST((((v0.c0))=((v0.c0))) AS REAL)) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT rt0.c4, rt0.c3 FROM rt0 RIGHT OUTER JOIN v0 ON ((-1.64192584E9)LIKE(((((((((rt0.c1)AND(rt0.c2)))AND(rt0.c4)))OR(rt0.c0)))OR(rt0.c4)))) LEFT OUTER JOIN vt2 ON (+ ((((rt0.c2, rt0.c1, v0.c0)) NOT BETWEEN ((rt0.c4, rt0.c5, rt0.c4)) AND ((rt0.c3, rt0.c5, rt0.c3))))) GROUP BY rt0.c4, rt0.c3;
SELECT rt0.c4, rt0.c3 FROM rt0 RIGHT OUTER JOIN v0 ON ((-1.64192584E9)LIKE(((((((((rt0.c1)AND(rt0.c2)))AND(rt0.c4)))OR(rt0.c0)))OR(rt0.c4)))) LEFT OUTER JOIN vt2 ON (+ ((((rt0.c2, rt0.c1, v0.c0)) NOT BETWEEN ((rt0.c4, rt0.c5, rt0.c4)) AND ((rt0.c3, rt0.c5, rt0.c3))))) WHERE (CAST(rt0.c1 AS TEXT) COLLATE RTRIM) GROUP BY rt0.c4, rt0.c3 UNION SELECT rt0.c4, rt0.c3 FROM rt0 RIGHT OUTER JOIN v0 ON ((-1.64192584E9)LIKE(((((((((rt0.c1)AND(rt0.c2)))AND(rt0.c4)))OR(rt0.c0)))OR(rt0.c4)))) LEFT OUTER JOIN vt2 ON (+ ((((rt0.c2, rt0.c1, v0.c0)) NOT BETWEEN ((rt0.c4, rt0.c5, rt0.c4)) AND ((rt0.c3, rt0.c5, rt0.c3))))) WHERE ((NOT (CAST(rt0.c1 AS TEXT) COLLATE RTRIM))) GROUP BY rt0.c4, rt0.c3 UNION SELECT ALL rt0.c4, rt0.c3 FROM rt0 RIGHT OUTER JOIN v0 ON ((-1.64192584E9)LIKE(((((((((rt0.c1)AND(rt0.c2)))AND(rt0.c4)))OR(rt0.c0)))OR(rt0.c4)))) LEFT OUTER JOIN vt2 ON (+ ((((rt0.c2, rt0.c1, v0.c0)) NOT BETWEEN ((rt0.c4, rt0.c5, rt0.c4)) AND ((rt0.c3, rt0.c5, rt0.c3))))) WHERE (((CAST(rt0.c1 AS TEXT) COLLATE RTRIM) ISNULL)) GROUP BY rt0.c4, rt0.c3;
SELECT rt0.c4, rt0.c3 FROM rt0 RIGHT OUTER JOIN v0 ON ((-1.64192584E9)LIKE(((((((((rt0.c1)AND(rt0.c2)))AND(rt0.c4)))OR(rt0.c0)))OR(rt0.c4)))) LEFT OUTER JOIN vt2 ON (+ ((((rt0.c2, rt0.c1, v0.c0)) NOT BETWEEN ((rt0.c4, rt0.c5, rt0.c4)) AND ((rt0.c3, rt0.c5, rt0.c3))))) GROUP BY rt0.c4, rt0.c3;
SELECT ALL vt2.c0, v0.c0, vt0.c0 FROM v0, vt1, vt2, vt0 GROUP BY vt2.c0, v0.c0, vt0.c0;
SELECT vt2.c0, v0.c0, vt0.c0 FROM v0, vt1, vt2, vt0 GROUP BY vt2.c0, v0.c0, vt0.c0 HAVING COUNT(CASE MAX(vt1.c0)  WHEN vt2.c0 THEN vt1.c1 ELSE COUNT(GROUP_CONCAT(COUNT(*))) END) UNION ALL SELECT vt2.c0, v0.c0, vt0.c0 FROM v0, vt1, vt2, vt0 GROUP BY vt2.c0, v0.c0, vt0.c0 HAVING (NOT (COUNT(CASE MAX(vt1.c0)  WHEN vt2.c0 THEN vt1.c1 ELSE COUNT(GROUP_CONCAT(COUNT(*))) END))) UNION ALL SELECT vt2.c0, v0.c0, vt0.c0 FROM v0, vt1, vt2, vt0 GROUP BY vt2.c0, v0.c0, vt0.c0 HAVING ((COUNT(CASE MAX(vt1.c0)  WHEN vt2.c0 THEN vt1.c1 ELSE COUNT(GROUP_CONCAT(COUNT(*))) END)) ISNULL);
SELECT TOTAL((((rt0.c0)) NOT BETWEEN ((((vt2.c0) NOT BETWEEN (vt0.c0) AND (rt0.c3)))) AND (((((rt0.c1, vt0.c1, rt0.c1)) BETWEEN ((vt2.c0, rt0.c1, rt0.c1)) AND ((rt0.c3, rt0.c5, rt0.c5))))))) FROM vt2, rt0, vt0;
SELECT * FROM vt2, rt0, vt1;
SELECT * FROM vt2, rt0, vt1 WHERE ((NOT (((((rt0.c0)AND(NULL)))OR(rt0.c2))))) UNION ALL SELECT * FROM vt2, rt0, vt1 WHERE ((NOT ((NOT (((((rt0.c0)AND(NULL)))OR(rt0.c2))))))) UNION ALL SELECT ALL * FROM vt2, rt0, vt1 WHERE ((((NOT (((((rt0.c0)AND(NULL)))OR(rt0.c2))))) ISNULL));
SELECT * FROM vt2, rt0, vt1;
SELECT DISTINCT * FROM v0, vt2, vt1, rt0, vt0;
SELECT DISTINCT * FROM v0, vt2, vt1, rt0, vt0 WHERE (CASE WHEN vt0.c1 COLLATE BINARY THEN 'AXX9gv,㯱3' WHEN rt0.c5 COLLATE RTRIM THEN CAST(rt0.c0 AS BLOB) WHEN 0.3089268616248769 THEN CASE WHEN vt1.c1 THEN rt0.c3 END END) UNION SELECT DISTINCT * FROM v0, vt2, vt1, rt0, vt0 WHERE ((NOT (CASE WHEN vt0.c1 COLLATE BINARY THEN 'AXX9gv,㯱3' WHEN rt0.c5 COLLATE RTRIM THEN CAST(rt0.c0 AS BLOB) WHEN 0.3089268616248769 THEN CASE WHEN vt1.c1 THEN rt0.c3 END END))) UNION SELECT DISTINCT * FROM v0, vt2, vt1, rt0, vt0 WHERE (((CASE WHEN vt0.c1 COLLATE BINARY THEN 'AXX9gv,㯱3' WHEN rt0.c5 COLLATE RTRIM THEN CAST(rt0.c0 AS BLOB) WHEN 0.3089268616248769 THEN CASE WHEN vt1.c1 THEN rt0.c3 END END) ISNULL));
SELECT DISTINCT * FROM v0, vt2, vt1, rt0, vt0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE ((NOT (((((v0.c0)OR(v0.c0)))OR(v0.c0))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT ((NOT (((((v0.c0)OR(v0.c0)))OR(v0.c0))))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((((NOT (((((v0.c0)OR(v0.c0)))OR(v0.c0))))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL vt1.c0, v0.c0, vt1.c1, vt2.c0 FROM v0, vt2, vt1 NOT INDEXED GROUP BY vt1.c0, v0.c0, vt1.c1, vt2.c0;
SELECT vt1.c0, v0.c0, vt1.c1, vt2.c0 FROM v0, vt2, vt1 GROUP BY vt1.c0, v0.c0, vt1.c1, vt2.c0 HAVING ((((((((((TOTAL(MIN(vt1.c0))) BETWEEN (COUNT(vt2.c0)) AND (MAX(SUM(vt1.c1)))))OR(load_extension(MAX(MAX(GROUP_CONCAT(MIN(v0.c0))))))))OR(((COUNT(*)) NOT BETWEEN (0.8897837826985783) AND (v0.c0)))))AND(MIN(COUNT(*)))))AND(CASE SUM(AVG(v0.c0))  WHEN AVG(vt1.c0) THEN vt1.c1 END)) UNION ALL SELECT vt1.c0, v0.c0, vt1.c1, vt2.c0 FROM v0, vt2, vt1 GROUP BY vt1.c0, v0.c0, vt1.c1, vt2.c0 HAVING (NOT (((((((((((TOTAL(MIN(vt1.c0))) BETWEEN (COUNT(vt2.c0)) AND (MAX(SUM(vt1.c1)))))OR(load_extension(MAX(MAX(GROUP_CONCAT(MIN(v0.c0))))))))OR(((COUNT(*)) NOT BETWEEN (0.8897837826985783) AND (v0.c0)))))AND(MIN(COUNT(*)))))AND(CASE SUM(AVG(v0.c0))  WHEN AVG(vt1.c0) THEN vt1.c1 END)))) UNION ALL SELECT ALL vt1.c0, v0.c0, vt1.c1, vt2.c0 FROM v0, vt2, vt1 GROUP BY vt1.c0, v0.c0, vt1.c1, vt2.c0 HAVING ((((((((((((TOTAL(MIN(vt1.c0))) BETWEEN (COUNT(vt2.c0)) AND (MAX(SUM(vt1.c1)))))OR(load_extension(MAX(MAX(GROUP_CONCAT(MIN(v0.c0))))))))OR(((COUNT(*)) NOT BETWEEN (0.8897837826985783) AND (v0.c0)))))AND(MIN(COUNT(*)))))AND(CASE SUM(AVG(v0.c0))  WHEN AVG(vt1.c0) THEN vt1.c1 END))) ISNULL);
SELECT ALL vt2.c0, v0.c0 FROM vt2, v0;
SELECT ALL vt2.c0, v0.c0 FROM vt2, v0 WHERE (((((vt2.c0) ISNULL)) NOTNULL)) UNION ALL SELECT ALL vt2.c0, v0.c0 FROM vt2, v0 WHERE ((NOT (((((vt2.c0) ISNULL)) NOTNULL)))) UNION ALL SELECT ALL vt2.c0, v0.c0 FROM vt2, v0 WHERE (((((((vt2.c0) ISNULL)) NOTNULL)) ISNULL));
SELECT ALL vt2.c0, v0.c0 FROM vt2, v0;
SELECT DISTINCT rt0.c3 FROM rt0;
SELECT DISTINCT rt0.c3 FROM rt0 WHERE (((rt0.c2 COLLATE BINARY)<=(rt0.c5))) UNION SELECT DISTINCT rt0.c3 FROM rt0 WHERE ((NOT (((rt0.c2 COLLATE BINARY)<=(rt0.c5))))) UNION SELECT DISTINCT rt0.c3 FROM rt0 WHERE (((((rt0.c2 COLLATE BINARY)<=(rt0.c5))) ISNULL));
SELECT DISTINCT rt0.c3 FROM rt0;
SELECT ALL vt1.c0, vt0.c1, vt0.c0, vt1.c1, vt2.c0 FROM vt0, vt2, vt1, v0 GROUP BY vt1.c0, vt0.c1, vt0.c0, vt1.c1, vt2.c0;
SELECT vt1.c0, vt0.c1, vt0.c0, vt1.c1, vt2.c0 FROM vt0, vt2, vt1, v0 WHERE (((CAST(vt0.c1 AS TEXT)) BETWEEN (vt0.c0 COLLATE BINARY) AND ((((NULL)) BETWEEN ((vt0.c1)) AND ((vt2.c0)))))) GROUP BY vt1.c0, vt0.c1, vt0.c0, vt1.c1, vt2.c0 UNION SELECT ALL vt1.c0, vt0.c1, vt0.c0, vt1.c1, vt2.c0 FROM vt0, vt2, vt1, v0 WHERE ((NOT (((CAST(vt0.c1 AS TEXT)) BETWEEN (vt0.c0 COLLATE BINARY) AND ((((NULL)) BETWEEN ((vt0.c1)) AND ((vt2.c0)))))))) GROUP BY vt1.c0, vt0.c1, vt0.c0, vt1.c1, vt2.c0 UNION SELECT ALL vt1.c0, vt0.c1, vt0.c0, vt1.c1, vt2.c0 FROM vt0, vt2, vt1, v0 WHERE (((((CAST(vt0.c1 AS TEXT)) BETWEEN (vt0.c0 COLLATE BINARY) AND ((((NULL)) BETWEEN ((vt0.c1)) AND ((vt2.c0)))))) ISNULL)) GROUP BY vt1.c0, vt0.c1, vt0.c0, vt1.c1, vt2.c0;
SELECT ALL vt1.c0, vt0.c1, vt0.c0, vt1.c1, vt2.c0 FROM vt0, vt2, vt1, v0 GROUP BY vt1.c0, vt0.c1, vt0.c0, vt1.c1, vt2.c0;
SELECT ALL vt1.c1, vt1.c0, v0.c0 FROM v0, vt1 GROUP BY vt1.c1, vt1.c0, v0.c0;
SELECT vt1.c1, vt1.c0, v0.c0 FROM v0, vt1 GROUP BY vt1.c1, vt1.c0, v0.c0 HAVING COUNT(((vt1.c0) NOTNULL)) UNION ALL SELECT ALL vt1.c1, vt1.c0, v0.c0 FROM v0, vt1 GROUP BY vt1.c1, vt1.c0, v0.c0 HAVING (NOT (COUNT(((vt1.c0) NOTNULL)))) UNION ALL SELECT vt1.c1, vt1.c0, v0.c0 FROM v0, vt1 GROUP BY vt1.c1, vt1.c0, v0.c0 HAVING ((COUNT(((vt1.c0) NOTNULL))) ISNULL);
SELECT ALL vt1.c1, vt1.c0, v0.c0 FROM v0, vt1 GROUP BY vt1.c1, vt1.c0, v0.c0;
SELECT vt1.c1, vt1.c0, v0.c0 FROM v0, vt1 GROUP BY vt1.c1, vt1.c0, v0.c0 HAVING COUNT(((vt1.c0) NOTNULL)) UNION ALL SELECT ALL vt1.c1, vt1.c0, v0.c0 FROM v0, vt1 GROUP BY vt1.c1, vt1.c0, v0.c0 HAVING (NOT (COUNT(((vt1.c0) NOTNULL)))) UNION ALL SELECT vt1.c1, vt1.c0, v0.c0 FROM v0, vt1 GROUP BY vt1.c1, vt1.c0, v0.c0 HAVING ((COUNT(((vt1.c0) NOTNULL))) ISNULL);
SELECT ALL vt1.c1, vt1.c0, v0.c0 FROM v0, vt1 GROUP BY vt1.c1, vt1.c0, v0.c0;
SELECT rt0.c2, vt1.c1, vt0.c0, vt1.c0, rt0.c4, rt0.c5, rt0.c1, rt0.c0 FROM rt0, v0, vt1, vt2, vt0;
SELECT rt0.c2, vt1.c1, vt0.c0, vt1.c0, rt0.c4, rt0.c5, rt0.c1, rt0.c0 FROM rt0, v0, vt1, vt2, vt0 WHERE ((~ (((v0.c0)+(rt0.c0))))) UNION ALL SELECT rt0.c2, vt1.c1, vt0.c0, vt1.c0, rt0.c4, rt0.c5, rt0.c1, rt0.c0 FROM rt0, v0, vt1, vt2, vt0 WHERE ((NOT ((~ (((v0.c0)+(rt0.c0))))))) UNION ALL SELECT rt0.c2, vt1.c1, vt0.c0, vt1.c0, rt0.c4, rt0.c5, rt0.c1, rt0.c0 FROM rt0, v0, vt1, vt2, vt0 WHERE ((((~ (((v0.c0)+(rt0.c0))))) ISNULL));
SELECT rt0.c2, vt1.c1, vt0.c0, vt1.c0, rt0.c4, rt0.c5, rt0.c1, rt0.c0 FROM rt0, v0, vt1, vt2, vt0;
SELECT DISTINCT rt0.c3, rt0.c1, rt0.c2, vt2.c0 FROM vt1, vt0, rt0 RIGHT OUTER JOIN vt2 ON ((IFNULL(vt0.c0, rt0.c5)) BETWEEN (LOWER(DISTINCT vt1.c1)) AND (CAST('' AS TEXT))) CROSS JOIN v0 ON CASE rt0.c5  WHEN rt0.c0 THEN vt0.c1 ELSE vt1.c0 END COLLATE BINARY;
SELECT DISTINCT rt0.c3, rt0.c1, rt0.c2, vt2.c0 FROM vt1, vt0, rt0 RIGHT OUTER JOIN vt2 ON ((IFNULL(vt0.c0, rt0.c5)) BETWEEN (LOWER(DISTINCT vt1.c1)) AND (CAST('' AS TEXT))) CROSS JOIN v0 ON CASE rt0.c5  WHEN rt0.c0 THEN vt0.c1 ELSE vt1.c0 END COLLATE BINARY WHERE (((COALESCE(DISTINCT rt0.c2, vt1.c1)) NOT NULL)) UNION SELECT DISTINCT rt0.c3, rt0.c1, rt0.c2, vt2.c0 FROM vt1, vt0, rt0 RIGHT OUTER JOIN vt2 ON ((IFNULL(vt0.c0, rt0.c5)) BETWEEN (LOWER(DISTINCT vt1.c1)) AND (CAST('' AS TEXT))) CROSS JOIN v0 ON CASE rt0.c5  WHEN rt0.c0 THEN vt0.c1 ELSE vt1.c0 END COLLATE BINARY WHERE ((NOT (((COALESCE(DISTINCT rt0.c2, vt1.c1)) NOT NULL)))) UNION SELECT DISTINCT rt0.c3, rt0.c1, rt0.c2, vt2.c0 FROM vt1, vt0, rt0 NOT INDEXED RIGHT OUTER JOIN vt2 ON ((IFNULL(vt0.c0, rt0.c5)) BETWEEN (LOWER(DISTINCT vt1.c1)) AND (CAST('' AS TEXT))) CROSS JOIN v0 ON CASE rt0.c5  WHEN rt0.c0 THEN vt0.c1 ELSE vt1.c0 END COLLATE BINARY WHERE (((((COALESCE(DISTINCT rt0.c2, vt1.c1)) NOT NULL)) ISNULL));
SELECT DISTINCT rt0.c3, rt0.c1, rt0.c2, vt2.c0 FROM vt1, vt0, rt0 RIGHT OUTER JOIN vt2 ON ((IFNULL(vt0.c0, rt0.c5)) BETWEEN (LOWER(DISTINCT vt1.c1)) AND (CAST('' AS TEXT))) CROSS JOIN v0 ON CASE rt0.c5  WHEN rt0.c0 THEN vt0.c1 ELSE vt1.c0 END COLLATE BINARY;
SELECT vt2.c0, rt0.c5, vt0.c1, vt0.c0, rt0.c0, rt0.c3 FROM vt2, vt0, rt0 GROUP BY vt2.c0, rt0.c5, vt0.c1, vt0.c0, rt0.c0, rt0.c3;
SELECT vt2.c0, rt0.c5, vt0.c1, vt0.c0, rt0.c0, rt0.c3 FROM vt2, vt0, rt0 WHERE (NULL) GROUP BY vt2.c0, rt0.c5, vt0.c1, vt0.c0, rt0.c0, rt0.c3 UNION SELECT ALL vt2.c0, rt0.c5, vt0.c1, vt0.c0, rt0.c0, rt0.c3 FROM vt2, vt0, rt0 NOT INDEXED WHERE ((NOT (NULL))) GROUP BY vt2.c0, rt0.c5, vt0.c1, vt0.c0, rt0.c0, rt0.c3 UNION SELECT ALL vt2.c0, rt0.c5, vt0.c1, vt0.c0, rt0.c0, rt0.c3 FROM vt2, vt0, rt0 NOT INDEXED WHERE (((NULL) ISNULL)) GROUP BY vt2.c0, rt0.c5, vt0.c1, vt0.c0, rt0.c0, rt0.c3;
SELECT vt2.c0, rt0.c5, vt0.c1, vt0.c0, rt0.c0, rt0.c3 FROM vt2, vt0, rt0 GROUP BY vt2.c0, rt0.c5, vt0.c1, vt0.c0, rt0.c0, rt0.c3;
SELECT rt0.c1, rt0.c2, vt1.c1, rt0.c0, vt1.c0, vt2.c0, rt0.c3, rt0.c5, v0.c0, vt0.c0 FROM v0, vt0, vt1, rt0, vt2 GROUP BY rt0.c1, rt0.c2, vt1.c1, rt0.c0, vt1.c0, vt2.c0, rt0.c3, rt0.c5, v0.c0, vt0.c0;
SELECT ALL rt0.c1, rt0.c2, vt1.c1, rt0.c0, vt1.c0, vt2.c0, rt0.c3, rt0.c5, v0.c0, vt0.c0 FROM v0, vt0, vt1, rt0, vt2 GROUP BY rt0.c1, rt0.c2, vt1.c1, rt0.c0, vt1.c0, vt2.c0, rt0.c3, rt0.c5, v0.c0, vt0.c0 HAVING ((((MIN(rt0.c2))OR(CHAR(MAX(AVG(vt1.c0))))))AND(CAST(rt0.c3 AS BLOB))) UNION ALL SELECT rt0.c1, rt0.c2, vt1.c1, rt0.c0, vt1.c0, vt2.c0, rt0.c3, rt0.c5, v0.c0, vt0.c0 FROM v0, vt0, vt1, rt0, vt2 GROUP BY rt0.c1, rt0.c2, vt1.c1, rt0.c0, vt1.c0, vt2.c0, rt0.c3, rt0.c5, v0.c0, vt0.c0 HAVING (NOT (((((MIN(rt0.c2))OR(CHAR(MAX(AVG(vt1.c0))))))AND(CAST(rt0.c3 AS BLOB))))) UNION ALL SELECT rt0.c1, rt0.c2, vt1.c1, rt0.c0, vt1.c0, vt2.c0, rt0.c3, rt0.c5, v0.c0, vt0.c0 FROM v0, vt0, vt1, rt0, vt2 GROUP BY rt0.c1, rt0.c2, vt1.c1, rt0.c0, vt1.c0, vt2.c0, rt0.c3, rt0.c5, v0.c0, vt0.c0 HAVING ((((((MIN(rt0.c2))OR(CHAR(MAX(AVG(vt1.c0))))))AND(CAST(rt0.c3 AS BLOB)))) ISNULL);
SELECT * FROM v0, vt2, vt0, vt1;
SELECT * FROM v0, vt2, vt0, vt1 WHERE (CASE (~ (vt2.c0))  WHEN ((vt1.c0)IS(v0.c0)) THEN ((vt2.c0)+(vt1.c1)) WHEN ((vt0.c1) ISNULL) THEN (NOT (vt1.c1)) WHEN (- (vt1.c1)) THEN CAST(vt0.c1 AS TEXT) ELSE ((vt2.c0)<>(NULL)) END) UNION ALL SELECT * FROM v0, vt2, vt0, vt1 WHERE ((NOT (CASE (~ (vt2.c0))  WHEN ((vt1.c0)IS(v0.c0)) THEN ((vt2.c0)+(vt1.c1)) WHEN ((vt0.c1) ISNULL) THEN (NOT (vt1.c1)) WHEN (- (vt1.c1)) THEN CAST(vt0.c1 AS TEXT) ELSE ((vt2.c0)<>(NULL)) END))) UNION ALL SELECT * FROM v0, vt2, vt0, vt1 WHERE (((CASE (~ (vt2.c0))  WHEN ((vt1.c0)IS(v0.c0)) THEN ((vt2.c0)+(vt1.c1)) WHEN ((vt0.c1) ISNULL) THEN (NOT (vt1.c1)) WHEN (- (vt1.c1)) THEN CAST(vt0.c1 AS TEXT) ELSE ((vt2.c0)<>(NULL)) END) ISNULL));
SELECT * FROM v0, vt2, vt0, vt1;
SELECT DISTINCT * FROM v0, rt0, vt1, vt0, vt2;
SELECT DISTINCT * FROM v0, rt0, vt1, vt0, vt2 WHERE ((((((((((((vt1.c1, rt0.c4, vt2.c0))>((rt0.c0, rt0.c4, v0.c0))))AND(((vt0.c0) NOT NULL))))AND((NOT (vt2.c0)))))OR(((vt2.c0)!=('-417466798')))))OR(CASE NULL  WHEN rt0.c4 THEN x'' END))) UNION SELECT DISTINCT * FROM v0, rt0, vt1, vt0, vt2 WHERE ((NOT ((((((((((((vt1.c1, rt0.c4, vt2.c0))>((rt0.c0, rt0.c4, v0.c0))))AND(((vt0.c0) NOT NULL))))AND((NOT (vt2.c0)))))OR(((vt2.c0)!=('-417466798')))))OR(CASE NULL  WHEN rt0.c4 THEN x'' END))))) UNION SELECT DISTINCT * FROM v0, rt0, vt1, vt0, vt2 WHERE ((((((((((((((vt1.c1, rt0.c4, vt2.c0))>((rt0.c0, rt0.c4, v0.c0))))AND(((vt0.c0) NOT NULL))))AND((NOT (vt2.c0)))))OR(((vt2.c0)<>('-417466798')))))OR(CASE NULL  WHEN rt0.c4 THEN x'' END))) ISNULL));
SELECT DISTINCT * FROM v0, rt0, vt1, vt0, vt2;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE ((((v0.c0 IN ()))||(v0.c0))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT ((((v0.c0 IN ()))||(v0.c0))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((((((v0.c0 IN ()))||(v0.c0))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL rt0.c0, rt0.c3, rt0.c4, rt0.c2 FROM vt2, rt0 GROUP BY rt0.c0, rt0.c3, rt0.c4, rt0.c2;
SELECT ALL rt0.c0, rt0.c3, rt0.c4, rt0.c2 FROM vt2, rt0 GROUP BY rt0.c0, rt0.c3, rt0.c4, rt0.c2 HAVING COUNT(rt0.c0) COLLATE RTRIM UNION ALL SELECT ALL rt0.c0, rt0.c3, rt0.c4, rt0.c2 FROM vt2, rt0 GROUP BY rt0.c0, rt0.c3, rt0.c4, rt0.c2 HAVING (NOT (COUNT(rt0.c0) COLLATE RTRIM)) UNION ALL SELECT rt0.c0, rt0.c3, rt0.c4, rt0.c2 FROM vt2, rt0 GROUP BY rt0.c0, rt0.c3, rt0.c4, rt0.c2 HAVING ((COUNT(rt0.c0) COLLATE RTRIM) ISNULL);
SELECT ALL rt0.c0, rt0.c3, rt0.c4, rt0.c2 FROM vt2, rt0 GROUP BY rt0.c0, rt0.c3, rt0.c4, rt0.c2;
SELECT ALL rt0.c0, rt0.c3, rt0.c4, rt0.c2 FROM vt2, rt0 GROUP BY rt0.c0, rt0.c3, rt0.c4, rt0.c2 HAVING COUNT(rt0.c0) COLLATE RTRIM UNION ALL SELECT ALL rt0.c0, rt0.c3, rt0.c4, rt0.c2 FROM vt2, rt0 GROUP BY rt0.c0, rt0.c3, rt0.c4, rt0.c2 HAVING (NOT (COUNT(rt0.c0) COLLATE RTRIM)) UNION ALL SELECT rt0.c0, rt0.c3, rt0.c4, rt0.c2 FROM vt2, rt0 GROUP BY rt0.c0, rt0.c3, rt0.c4, rt0.c2 HAVING ((COUNT(rt0.c0) COLLATE RTRIM) ISNULL);
SELECT ALL rt0.c0, rt0.c3, rt0.c4, rt0.c2 FROM vt2, rt0 GROUP BY rt0.c0, rt0.c3, rt0.c4, rt0.c2;
SELECT vt1.c0, vt0.c1, vt2.c0, rt0.c3, vt1.c1, rt0.c1, rt0.c5 FROM vt1, rt0, vt2, vt0;
SELECT ALL vt1.c0, vt0.c1, vt2.c0, rt0.c3, vt1.c1, rt0.c1, rt0.c5 FROM vt1, rt0, vt2 NOT INDEXED, vt0 WHERE ((((rt0.c1)) BETWEEN ((((rt0.c2)<<(vt1.c0)))) AND (((((rt0.c4))>=((vt2.c0))))))) UNION ALL SELECT ALL vt1.c0, vt0.c1, vt2.c0, rt0.c3, vt1.c1, rt0.c1, rt0.c5 FROM vt1, rt0, vt2, vt0 WHERE ((NOT ((((rt0.c1)) BETWEEN ((((rt0.c2)<<(vt1.c0)))) AND (((((rt0.c4))>=((vt2.c0))))))))) UNION ALL SELECT ALL vt1.c0, vt0.c1, vt2.c0, rt0.c3, vt1.c1, rt0.c1, rt0.c5 FROM vt1, rt0, vt2, vt0 WHERE ((((((rt0.c1)) BETWEEN ((((rt0.c2)<<(vt1.c0)))) AND (((((rt0.c4))>=((vt2.c0))))))) ISNULL));
SELECT vt1.c0, vt0.c1, vt2.c0, rt0.c3, vt1.c1, rt0.c1, rt0.c5 FROM vt1, rt0, vt2, vt0;
SELECT DISTINCT rt0.c4, vt2.c0 FROM rt0, vt0, vt1 INNER JOIN v0 ON ((((vt1.c1)%(vt0.c1)))>(((v0.c0)>>(vt1.c0)))) FULL OUTER JOIN vt2 ON rt0.c2;
SELECT DISTINCT rt0.c4, vt2.c0 FROM rt0, vt0, vt1 INNER JOIN v0 ON ((((vt1.c1)%(vt0.c1)))>(((v0.c0)>>(vt1.c0)))) FULL OUTER JOIN vt2 ON rt0.c2 WHERE (CAST(((rt0.c4)GLOB('0.3205845668416407')) AS REAL)) UNION SELECT DISTINCT rt0.c4, vt2.c0 FROM rt0, vt0, vt1 INNER JOIN v0 ON ((((vt1.c1)%(vt0.c1)))>(((v0.c0)>>(vt1.c0)))) FULL OUTER JOIN vt2 ON rt0.c2 WHERE ((NOT (CAST(((rt0.c4)GLOB('0.3205845668416407')) AS REAL)))) UNION SELECT DISTINCT rt0.c4, vt2.c0 FROM rt0, vt0, vt1 INNER JOIN v0 ON ((((vt1.c1)%(vt0.c1)))>(((v0.c0)>>(vt1.c0)))) FULL OUTER JOIN vt2 ON rt0.c2 WHERE (((CAST(((rt0.c4)GLOB('0.3205845668416407')) AS REAL)) ISNULL));
SELECT DISTINCT rt0.c4, vt2.c0 FROM rt0, vt0, vt1 INNER JOIN v0 ON ((((vt1.c1)%(vt0.c1)))>(((v0.c0)>>(vt1.c0)))) FULL OUTER JOIN vt2 ON rt0.c2;
SELECT ALL rt0.c2, vt1.c0, rt0.c5, v0.c0, rt0.c0, rt0.c3, vt0.c1, vt0.c0, rt0.c1, rt0.c4, vt1.c1 FROM vt0, rt0, vt1, vt2 NATURAL JOIN v0 GROUP BY rt0.c2, vt1.c0, rt0.c5, v0.c0, rt0.c0, rt0.c3, vt0.c1, vt0.c0, rt0.c1, rt0.c4, vt1.c1;
SELECT ALL rt0.c2, vt1.c0, rt0.c5, v0.c0, rt0.c0, rt0.c3, vt0.c1, vt0.c0, rt0.c1, rt0.c4, vt1.c1 FROM vt0, rt0, vt1, vt2 NATURAL JOIN v0 WHERE (((((((((0Xffffffffafe3cea5)OR(CAST(rt0.c2 AS INTEGER))))OR(x'')))OR(((rt0.c2)=(vt1.c1)))))OR((0.4948140459209579 IN ())))) GROUP BY rt0.c2, vt1.c0, rt0.c5, v0.c0, rt0.c0, rt0.c3, vt0.c1, vt0.c0, rt0.c1, rt0.c4, vt1.c1 UNION SELECT rt0.c2, vt1.c0, rt0.c5, v0.c0, rt0.c0, rt0.c3, vt0.c1, vt0.c0, rt0.c1, rt0.c4, vt1.c1 FROM vt0, rt0, vt1, vt2 NATURAL JOIN v0 WHERE ((NOT (((((((((0Xffffffffafe3cea5)OR(CAST(rt0.c2 AS INTEGER))))OR(x'')))OR(((rt0.c2)=(vt1.c1)))))OR((0.4948140459209579 IN ())))))) GROUP BY rt0.c2, vt1.c0, rt0.c5, v0.c0, rt0.c0, rt0.c3, vt0.c1, vt0.c0, rt0.c1, rt0.c4, vt1.c1 UNION SELECT ALL rt0.c2, vt1.c0, rt0.c5, v0.c0, rt0.c0, rt0.c3, vt0.c1, vt0.c0, rt0.c1, rt0.c4, vt1.c1 FROM vt0, rt0, vt1, vt2 NATURAL JOIN v0 WHERE (((((((((((0Xffffffffafe3cea5)OR(CAST(rt0.c2 AS INTEGER))))OR(x'')))OR(((rt0.c2)==(vt1.c1)))))OR((0.4948140459209579 IN ())))) ISNULL)) GROUP BY rt0.c2, vt1.c0, rt0.c5, v0.c0, rt0.c0, rt0.c3, vt0.c1, vt0.c0, rt0.c1, rt0.c4, vt1.c1;
SELECT ALL rt0.c2, vt1.c0, rt0.c5, v0.c0, rt0.c0, rt0.c3, vt0.c1, vt0.c0, rt0.c1, rt0.c4, vt1.c1 FROM vt0, rt0, vt1, vt2 NATURAL JOIN v0 GROUP BY rt0.c2, vt1.c0, rt0.c5, v0.c0, rt0.c0, rt0.c3, vt0.c1, vt0.c0, rt0.c1, rt0.c4, vt1.c1;
SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING vt2.c0 UNION ALL SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING (NOT (vt2.c0)) UNION ALL SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING ((vt2.c0) ISNULL);
SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING vt2.c0 UNION ALL SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING (NOT (vt2.c0)) UNION ALL SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING ((vt2.c0) ISNULL);
SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT * FROM vt0, v0, vt2, rt0, vt1;
SELECT * FROM vt0, v0, vt2, rt0, vt1 WHERE (((((vt1.c1 COLLATE RTRIM)AND(x'')))AND((((rt0.c4))=((vt0.c1)))))) UNION ALL SELECT ALL * FROM vt0, v0, vt2, rt0, vt1 WHERE ((NOT (((((vt1.c1 COLLATE RTRIM)AND(x'')))AND((((rt0.c4))==((vt0.c1)))))))) UNION ALL SELECT ALL * FROM vt0, v0, vt2, rt0, vt1 WHERE (((((((vt1.c1 COLLATE RTRIM)AND(x'')))AND((((rt0.c4))=((vt0.c1)))))) ISNULL));
SELECT * FROM vt0, v0, vt2, rt0, vt1;
SELECT DISTINCT * FROM vt1 LEFT OUTER JOIN rt0 ON ((vt1.c0) BETWEEN (vt0.c1) AND (vt0.c1)) COLLATE NOCASE CROSS JOIN vt2 ON CASE WHEN CAST(rt0.c2 AS TEXT) THEN vt0.c1 COLLATE NOCASE END FULL OUTER JOIN vt0 ON (NOT (((rt0.c5) NOT BETWEEN (rt0.c4) AND (vt1.c0)))) FULL OUTER JOIN v0 ON ((DATE(rt0.c1, rt0.c1, vt1.c1))AND(((rt0.c0)==(vt2.c0))));
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (v0.c0) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (v0.c0))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE (((v0.c0) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0, rt0.c1, vt2.c0, vt1.c0, rt0.c5, vt1.c1, rt0.c2, rt0.c3 FROM vt1, v0, vt2, rt0 GROUP BY v0.c0, rt0.c1, vt2.c0, vt1.c0, rt0.c5, vt1.c1, rt0.c2, rt0.c3;
SELECT v0.c0, rt0.c1, vt2.c0, vt1.c0, rt0.c5, vt1.c1, rt0.c2, rt0.c3 FROM vt1, v0, vt2, rt0 GROUP BY v0.c0, rt0.c1, vt2.c0, vt1.c0, rt0.c5, vt1.c1, rt0.c2, rt0.c3 HAVING ((((((TOTAL(rt0.c1))AND(vt1.c1)))AND(rt0.c3)))<<(COUNT(*) COLLATE NOCASE)) UNION ALL SELECT ALL v0.c0, rt0.c1, vt2.c0, vt1.c0, rt0.c5, vt1.c1, rt0.c2, rt0.c3 FROM vt1, v0, vt2, rt0 GROUP BY v0.c0, rt0.c1, vt2.c0, vt1.c0, rt0.c5, vt1.c1, rt0.c2, rt0.c3 HAVING (NOT (((((((TOTAL(rt0.c1))AND(vt1.c1)))AND(rt0.c3)))<<(COUNT(*) COLLATE NOCASE)))) UNION ALL SELECT ALL v0.c0, rt0.c1, vt2.c0, vt1.c0, rt0.c5, vt1.c1, rt0.c2, rt0.c3 FROM vt1, v0, vt2, rt0 GROUP BY v0.c0, rt0.c1, vt2.c0, vt1.c0, rt0.c5, vt1.c1, rt0.c2, rt0.c3 HAVING ((((((((TOTAL(rt0.c1))AND(vt1.c1)))AND(rt0.c3)))<<(COUNT(*) COLLATE NOCASE))) ISNULL);
SELECT ALL v0.c0, rt0.c1, vt2.c0, vt1.c0, rt0.c5, vt1.c1, rt0.c2, rt0.c3 FROM vt1, v0, vt2, rt0 GROUP BY v0.c0, rt0.c1, vt2.c0, vt1.c0, rt0.c5, vt1.c1, rt0.c2, rt0.c3;
SELECT v0.c0, rt0.c1, vt2.c0, vt1.c0, rt0.c5, vt1.c1, rt0.c2, rt0.c3 FROM vt1, v0, vt2, rt0 GROUP BY v0.c0, rt0.c1, vt2.c0, vt1.c0, rt0.c5, vt1.c1, rt0.c2, rt0.c3 HAVING ((((((TOTAL(rt0.c1))AND(vt1.c1)))AND(rt0.c3)))<<(COUNT(*) COLLATE NOCASE)) UNION ALL SELECT ALL v0.c0, rt0.c1, vt2.c0, vt1.c0, rt0.c5, vt1.c1, rt0.c2, rt0.c3 FROM vt1, v0, vt2, rt0 GROUP BY v0.c0, rt0.c1, vt2.c0, vt1.c0, rt0.c5, vt1.c1, rt0.c2, rt0.c3 HAVING (NOT (((((((TOTAL(rt0.c1))AND(vt1.c1)))AND(rt0.c3)))<<(COUNT(*) COLLATE NOCASE)))) UNION ALL SELECT ALL v0.c0, rt0.c1, vt2.c0, vt1.c0, rt0.c5, vt1.c1, rt0.c2, rt0.c3 FROM vt1, v0, vt2, rt0 GROUP BY v0.c0, rt0.c1, vt2.c0, vt1.c0, rt0.c5, vt1.c1, rt0.c2, rt0.c3 HAVING ((((((((TOTAL(rt0.c1))AND(vt1.c1)))AND(rt0.c3)))<<(COUNT(*) COLLATE NOCASE))) ISNULL);
SELECT ALL v0.c0, rt0.c1, vt2.c0, vt1.c0, rt0.c5, vt1.c1, rt0.c2, rt0.c3 FROM vt1, v0, vt2, rt0 GROUP BY v0.c0, rt0.c1, vt2.c0, vt1.c0, rt0.c5, vt1.c1, rt0.c2, rt0.c3;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 FULL OUTER JOIN vt2 ON ((vt2.c0) IS FALSE) RIGHT OUTER JOIN v0 ON v0.c0;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 FULL OUTER JOIN vt2 ON ((vt2.c0) IS FALSE) RIGHT OUTER JOIN v0 ON v0.c0 WHERE ((((~ (vt0.c0)))LIKE(((vt0.c1)!=(vt2.c0))))) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt0 FULL OUTER JOIN vt2 ON ((vt2.c0) IS FALSE) RIGHT OUTER JOIN v0 ON v0.c0 WHERE ((NOT ((((~ (vt0.c0)))LIKE(((vt0.c1)!=(vt2.c0))))))) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt0 FULL OUTER JOIN vt2 ON ((vt2.c0) IS FALSE) RIGHT OUTER JOIN v0 ON v0.c0 WHERE ((((((~ (vt0.c0)))LIKE(((vt0.c1)!=(vt2.c0))))) ISNULL));
SELECT ALL vt0.c0, vt0.c1 FROM vt0 FULL OUTER JOIN vt2 ON ((vt2.c0) IS FALSE) RIGHT OUTER JOIN v0 ON v0.c0;
SELECT DISTINCT * FROM vt2, rt0 CROSS JOIN vt0 ON (((NOT (rt0.c2)))>>(CASE WHEN rt0.c1 THEN rt0.c2 WHEN vt1.c1 THEN rt0.c3 WHEN vt0.c1 THEN x'4cb1' END)) LEFT OUTER JOIN vt1 ON ((((rt0.c3) ISNULL)) ISNULL);
SELECT DISTINCT * FROM vt2, rt0 CROSS JOIN vt0 ON (((NOT (rt0.c2)))>>(CASE WHEN rt0.c1 THEN rt0.c2 WHEN vt1.c1 THEN rt0.c3 WHEN vt0.c1 THEN x'4cb1' END)) LEFT OUTER JOIN vt1 ON ((((rt0.c3) ISNULL)) ISNULL) WHERE (((((((((((rt0.c1)AND(rt0.c0)))AND(rt0.c2)))AND(rt0.c3)))OR(vt1.c1))) BETWEEN (rt0.c0 COLLATE RTRIM) AND ((NOT (rt0.c3))))) UNION SELECT DISTINCT * FROM vt2, rt0 CROSS JOIN vt0 ON (((NOT (rt0.c2)))>>(CASE WHEN rt0.c1 THEN rt0.c2 WHEN vt1.c1 THEN rt0.c3 WHEN vt0.c1 THEN x'4cb1' END)) LEFT OUTER JOIN vt1 ON ((((rt0.c3) ISNULL)) ISNULL) WHERE ((NOT (((((((((((rt0.c1)AND(rt0.c0)))AND(rt0.c2)))AND(rt0.c3)))OR(vt1.c1))) BETWEEN (rt0.c0 COLLATE RTRIM) AND ((NOT (rt0.c3))))))) UNION SELECT DISTINCT * FROM vt2, rt0 CROSS JOIN vt0 ON (((NOT (rt0.c2)))>>(CASE WHEN rt0.c1 THEN rt0.c2 WHEN vt1.c1 THEN rt0.c3 WHEN vt0.c1 THEN x'4cb1' END)) LEFT OUTER JOIN vt1 ON ((((rt0.c3) ISNULL)) ISNULL) WHERE (((((((((((((rt0.c1)AND(rt0.c0)))AND(rt0.c2)))AND(rt0.c3)))OR(vt1.c1))) BETWEEN (rt0.c0 COLLATE RTRIM) AND ((NOT (rt0.c3))))) ISNULL));
SELECT DISTINCT * FROM vt2, rt0 CROSS JOIN vt0 ON (((NOT (rt0.c2)))>>(CASE WHEN rt0.c1 THEN rt0.c2 WHEN vt1.c1 THEN rt0.c3 WHEN vt0.c1 THEN x'4cb1' END)) LEFT OUTER JOIN vt1 ON ((((rt0.c3) ISNULL)) ISNULL);
SELECT rt0.c4, vt0.c1, rt0.c5, v0.c0, rt0.c0, vt2.c0, vt1.c0, vt1.c1, vt0.c0, rt0.c3, rt0.c2, rt0.c1 FROM vt0, v0, rt0, vt2, vt1 GROUP BY rt0.c4, vt0.c1, rt0.c5, v0.c0, rt0.c0, vt2.c0, vt1.c0, vt1.c1, vt0.c0, rt0.c3, rt0.c2, rt0.c1;
SELECT ALL rt0.c4, vt0.c1, rt0.c5, v0.c0, rt0.c0, vt2.c0, vt1.c0, vt1.c1, vt0.c0, rt0.c3, rt0.c2, rt0.c1 FROM vt0, v0, rt0, vt2, vt1 WHERE ((((+ (rt0.c4)))=((((-492255031, rt0.c4, 0Xffffffffb2f89924)) NOT BETWEEN ((rt0.c3, vt0.c0, v0.c0)) AND ((vt2.c0, vt2.c0, vt1.c0)))))) GROUP BY rt0.c4, vt0.c1, rt0.c5, v0.c0, rt0.c0, vt2.c0, vt1.c0, vt1.c1, vt0.c0, rt0.c3, rt0.c2, rt0.c1 UNION SELECT ALL rt0.c4, vt0.c1, rt0.c5, v0.c0, rt0.c0, vt2.c0, vt1.c0, vt1.c1, vt0.c0, rt0.c3, rt0.c2, rt0.c1 FROM vt0, v0, rt0, vt2, vt1 WHERE ((NOT ((((+ (rt0.c4)))=((((-492255031, rt0.c4, 0xffffffffb2f89924)) NOT BETWEEN ((rt0.c3, vt0.c0, v0.c0)) AND ((vt2.c0, vt2.c0, vt1.c0)))))))) GROUP BY rt0.c4, vt0.c1, rt0.c5, v0.c0, rt0.c0, vt2.c0, vt1.c0, vt1.c1, vt0.c0, rt0.c3, rt0.c2, rt0.c1 UNION SELECT ALL rt0.c4, vt0.c1, rt0.c5, v0.c0, rt0.c0, vt2.c0, vt1.c0, vt1.c1, vt0.c0, rt0.c3, rt0.c2, rt0.c1 FROM vt0, v0, rt0, vt2, vt1 WHERE ((((((+ (rt0.c4)))==((((-492255031, rt0.c4, 0Xffffffffb2f89924)) NOT BETWEEN ((rt0.c3, vt0.c0, v0.c0)) AND ((vt2.c0, vt2.c0, vt1.c0)))))) ISNULL)) GROUP BY rt0.c4, vt0.c1, rt0.c5, v0.c0, rt0.c0, vt2.c0, vt1.c0, vt1.c1, vt0.c0, rt0.c3, rt0.c2, rt0.c1;
SELECT rt0.c4, vt0.c1, rt0.c5, v0.c0, rt0.c0, vt2.c0, vt1.c0, vt1.c1, vt0.c0, rt0.c3, rt0.c2, rt0.c1 FROM vt0, v0, rt0, vt2, vt1 GROUP BY rt0.c4, vt0.c1, rt0.c5, v0.c0, rt0.c0, vt2.c0, vt1.c0, vt1.c1, vt0.c0, rt0.c3, rt0.c2, rt0.c1;
SELECT vt1.c1, vt1.c0 FROM vt0, vt1 GROUP BY vt1.c1, vt1.c0;
SELECT ALL vt1.c1, vt1.c0 FROM vt0, vt1 GROUP BY vt1.c1, vt1.c0 HAVING ((((COUNT(MAX(COUNT(SUM(vt1.c1)))))AND(MIN(MIN(AVG(GROUP_CONCAT(0.24425755721524356)))) COLLATE BINARY)))OR(SUM(COUNT(*)))) UNION ALL SELECT ALL vt1.c1, vt1.c0 FROM vt0, vt1 GROUP BY vt1.c1, vt1.c0 HAVING (NOT (((((COUNT(MAX(COUNT(SUM(vt1.c1)))))AND(MIN(MIN(AVG(GROUP_CONCAT(0.24425755721524356)))) COLLATE BINARY)))OR(SUM(COUNT(*)))))) UNION ALL SELECT ALL vt1.c1, vt1.c0 FROM vt0, vt1 GROUP BY vt1.c1, vt1.c0 HAVING ((((((COUNT(MAX(COUNT(SUM(vt1.c1)))))AND(MIN(MIN(AVG(GROUP_CONCAT(0.24425755721524356)))) COLLATE BINARY)))OR(SUM(COUNT(*))))) ISNULL);
SELECT ALL * FROM vt0, vt1, vt2, rt0, v0;
SELECT * FROM vt0, vt1, vt2, rt0, v0 WHERE (((((rt0.c0)OR(vt1.c1))) NOT BETWEEN (((rt0.c5)<<(v0.c0))) AND (CASE vt0.c0  WHEN rt0.c5 THEN rt0.c1 ELSE vt1.c0 END))) UNION ALL SELECT * FROM vt0, vt1, vt2, rt0, v0 WHERE ((NOT (((((rt0.c0)OR(vt1.c1))) NOT BETWEEN (((rt0.c5)<<(v0.c0))) AND (CASE vt0.c0  WHEN rt0.c5 THEN rt0.c1 ELSE vt1.c0 END))))) UNION ALL SELECT ALL * FROM vt0, vt1, vt2, rt0, v0 WHERE (((((((rt0.c0)OR(vt1.c1))) NOT BETWEEN (((rt0.c5)<<(v0.c0))) AND (CASE vt0.c0  WHEN rt0.c5 THEN rt0.c1 ELSE vt1.c0 END))) ISNULL));
SELECT ALL * FROM vt0, vt1, vt2, rt0, v0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (((((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))AND(v0.c0)))AND(v0.c0)))<((v0.c0 IN (v0.c0))))) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (((((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))AND(v0.c0)))AND(v0.c0)))<((v0.c0 IN (v0.c0))))))) UNION SELECT DISTINCT * FROM v0 WHERE (((((((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))AND(v0.c0)))AND(v0.c0)))<((v0.c0 IN (v0.c0))))) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt0 WHERE (((CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END) NOT NULL)) GROUP BY vt0.c1 UNION SELECT vt0.c1 FROM vt0 WHERE ((NOT (((CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END) NOT NULL)))) GROUP BY vt0.c1 UNION SELECT vt0.c1 FROM vt0 WHERE (((((CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END) NOT NULL)) ISNULL)) GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT ALL rt0.c4, rt0.c0, rt0.c3, rt0.c1, rt0.c5 FROM rt0 GROUP BY rt0.c4, rt0.c0, rt0.c3, rt0.c1, rt0.c5;
SELECT rt0.c4, rt0.c0, rt0.c3, rt0.c1, rt0.c5 FROM rt0 GROUP BY rt0.c4, rt0.c0, rt0.c3, rt0.c1, rt0.c5 HAVING MAX(((rt0.c0) IS TRUE)) UNION ALL SELECT rt0.c4, rt0.c0, rt0.c3, rt0.c1, rt0.c5 FROM rt0 GROUP BY rt0.c4, rt0.c0, rt0.c3, rt0.c1, rt0.c5 HAVING (NOT (MAX(((rt0.c0) IS TRUE)))) UNION ALL SELECT ALL rt0.c4, rt0.c0, rt0.c3, rt0.c1, rt0.c5 FROM rt0 GROUP BY rt0.c4, rt0.c0, rt0.c3, rt0.c1, rt0.c5 HAVING ((MAX(((rt0.c0) IS TRUE))) ISNULL);
SELECT ALL rt0.c4, rt0.c0, rt0.c3, rt0.c1, rt0.c5 FROM rt0 GROUP BY rt0.c4, rt0.c0, rt0.c3, rt0.c1, rt0.c5;
SELECT rt0.c4, rt0.c0, rt0.c3, rt0.c1, rt0.c5 FROM rt0 GROUP BY rt0.c4, rt0.c0, rt0.c3, rt0.c1, rt0.c5 HAVING MAX(((rt0.c0) IS TRUE)) UNION ALL SELECT rt0.c4, rt0.c0, rt0.c3, rt0.c1, rt0.c5 FROM rt0 GROUP BY rt0.c4, rt0.c0, rt0.c3, rt0.c1, rt0.c5 HAVING (NOT (MAX(((rt0.c0) IS TRUE)))) UNION ALL SELECT ALL rt0.c4, rt0.c0, rt0.c3, rt0.c1, rt0.c5 FROM rt0 GROUP BY rt0.c4, rt0.c0, rt0.c3, rt0.c1, rt0.c5 HAVING ((MAX(((rt0.c0) IS TRUE))) ISNULL);
SELECT ALL rt0.c4, rt0.c0, rt0.c3, rt0.c1, rt0.c5 FROM rt0 GROUP BY rt0.c4, rt0.c0, rt0.c3, rt0.c1, rt0.c5;
SELECT TOTAL(((((vt1.c1) ISNULL))>(((vt1.c1)IS(v0.c0))))) FROM v0, vt0, vt1, vt2;
SELECT * FROM vt2, rt0;
SELECT * FROM vt2, rt0 WHERE (CAST(GLOB(rt0.c4, rt0.c2) AS BLOB)) UNION ALL SELECT * FROM vt2, rt0 WHERE ((NOT (CAST(GLOB(rt0.c4, rt0.c2) AS BLOB)))) UNION ALL SELECT * FROM vt2, rt0 WHERE (((CAST(GLOB(rt0.c4, rt0.c2) AS BLOB)) ISNULL));
SELECT * FROM vt2, rt0;
SELECT DISTINCT * FROM vt0, v0, vt1, rt0, vt2;
SELECT DISTINCT * FROM vt0, v0, vt1, rt0, vt2 WHERE ((vt0.c0 COLLATE RTRIM IN ())) UNION SELECT DISTINCT * FROM vt0, v0, vt1, rt0, vt2 WHERE ((NOT ((vt0.c0 COLLATE RTRIM IN ())))) UNION SELECT DISTINCT * FROM vt0, v0, vt1, rt0, vt2 WHERE ((((vt0.c0 COLLATE RTRIM IN ())) ISNULL));
SELECT DISTINCT * FROM vt0, v0, vt1, rt0, vt2;
SELECT ALL rt0.c4, rt0.c1, vt0.c0, rt0.c5, vt0.c1, rt0.c2, rt0.c3, rt0.c0 FROM rt0, vt0 GROUP BY rt0.c4, rt0.c1, vt0.c0, rt0.c5, vt0.c1, rt0.c2, rt0.c3, rt0.c0;
SELECT rt0.c4, rt0.c1, vt0.c0, rt0.c5, vt0.c1, rt0.c2, rt0.c3, rt0.c0 FROM rt0, vt0 WHERE (0.7813395002504838) GROUP BY rt0.c4, rt0.c1, vt0.c0, rt0.c5, vt0.c1, rt0.c2, rt0.c3, rt0.c0 UNION SELECT rt0.c4, rt0.c1, vt0.c0, rt0.c5, vt0.c1, rt0.c2, rt0.c3, rt0.c0 FROM rt0, vt0 WHERE ((NOT (0.7813395002504838))) GROUP BY rt0.c4, rt0.c1, vt0.c0, rt0.c5, vt0.c1, rt0.c2, rt0.c3, rt0.c0 UNION SELECT rt0.c4, rt0.c1, vt0.c0, rt0.c5, vt0.c1, rt0.c2, rt0.c3, rt0.c0 FROM rt0, vt0 WHERE (((0.7813395002504838) ISNULL)) GROUP BY rt0.c4, rt0.c1, vt0.c0, rt0.c5, vt0.c1, rt0.c2, rt0.c3, rt0.c0;
SELECT ALL rt0.c4, rt0.c1, vt0.c0, rt0.c5, vt0.c1, rt0.c2, rt0.c3, rt0.c0 FROM rt0, vt0 GROUP BY rt0.c4, rt0.c1, vt0.c0, rt0.c5, vt0.c1, rt0.c2, rt0.c3, rt0.c0;
SELECT rt0.c5, rt0.c1 FROM vt2, rt0, v0 GROUP BY rt0.c5, rt0.c1;
SELECT ALL rt0.c5, rt0.c1 FROM vt2, rt0, v0 GROUP BY rt0.c5, rt0.c1 HAVING MAX(((COUNT(*))<=(AVG(SUM(MIN(COUNT(MAX(rt0.c1)))))))) UNION ALL SELECT ALL rt0.c5, rt0.c1 FROM vt2, rt0, v0 GROUP BY rt0.c5, rt0.c1 HAVING (NOT (MAX(((COUNT(*))<=(AVG(SUM(MIN(COUNT(MAX(rt0.c1)))))))))) UNION ALL SELECT ALL rt0.c5, rt0.c1 FROM vt2, rt0, v0 GROUP BY rt0.c5, rt0.c1 HAVING ((MAX(((COUNT(*))<=(AVG(SUM(MIN(COUNT(MAX(rt0.c1))))))))) ISNULL);
SELECT vt1.c0, vt1.c1 FROM vt1;
SELECT vt1.c0, vt1.c1 FROM vt1 WHERE (CAST(CAST(vt1.c0 AS BLOB) AS INTEGER)) UNION ALL SELECT vt1.c0, vt1.c1 FROM vt1 WHERE ((NOT (CAST(CAST(vt1.c0 AS BLOB) AS INTEGER)))) UNION ALL SELECT vt1.c0, vt1.c1 FROM vt1 WHERE (((CAST(CAST(vt1.c0 AS BLOB) AS INTEGER)) ISNULL));
SELECT vt1.c0, vt1.c1 FROM vt1;
SELECT DISTINCT rt0.c3, vt1.c0, vt0.c1, vt1.c1 FROM rt0, vt1, vt2, vt0;
SELECT DISTINCT rt0.c3, vt1.c0, vt0.c1, vt1.c1 FROM rt0, vt1, vt2, vt0 NOT INDEXED WHERE ((((CASE rt0.c2  WHEN rt0.c4 THEN rt0.c4 ELSE -1.981221712E9 END))<((CASE WHEN rt0.c5 THEN '-296066155' WHEN vt1.c0 THEN vt1.c0 WHEN rt0.c1 THEN rt0.c5 WHEN vt0.c1 THEN rt0.c5 WHEN rt0.c3 THEN vt0.c1 END)))) UNION SELECT DISTINCT rt0.c3, vt1.c0, vt0.c1, vt1.c1 FROM rt0, vt1, vt2, vt0 WHERE ((NOT ((((CASE rt0.c2  WHEN rt0.c4 THEN rt0.c4 ELSE -1.981221712E9 END))<((CASE WHEN rt0.c5 THEN '-296066155' WHEN vt1.c0 THEN vt1.c0 WHEN rt0.c1 THEN rt0.c5 WHEN vt0.c1 THEN rt0.c5 WHEN rt0.c3 THEN vt0.c1 END)))))) UNION SELECT DISTINCT rt0.c3, vt1.c0, vt0.c1, vt1.c1 FROM rt0, vt1, vt2, vt0 WHERE ((((((CASE rt0.c2  WHEN rt0.c4 THEN rt0.c4 ELSE -1.981221712E9 END))<((CASE WHEN rt0.c5 THEN '-296066155' WHEN vt1.c0 THEN vt1.c0 WHEN rt0.c1 THEN rt0.c5 WHEN vt0.c1 THEN rt0.c5 WHEN rt0.c3 THEN vt0.c1 END)))) ISNULL));
SELECT DISTINCT rt0.c3, vt1.c0, vt0.c1, vt1.c1 FROM rt0, vt1, vt2, vt0;
SELECT vt0.c1, vt1.c1, vt0.c0, vt1.c0 FROM vt0, vt1, v0 GROUP BY vt0.c1, vt1.c1, vt0.c0, vt1.c0;
SELECT ALL vt0.c1, vt1.c1, vt0.c0, vt1.c0 FROM vt0, vt1 NOT INDEXED, v0 WHERE (vt0.c1) GROUP BY vt0.c1, vt1.c1, vt0.c0, vt1.c0 UNION SELECT ALL vt0.c1, vt1.c1, vt0.c0, vt1.c0 FROM vt0, vt1, v0 WHERE ((NOT (vt0.c1))) GROUP BY vt0.c1, vt1.c1, vt0.c0, vt1.c0 UNION SELECT ALL vt0.c1, vt1.c1, vt0.c0, vt1.c0 FROM vt0, vt1, v0 WHERE (((vt0.c1) ISNULL)) GROUP BY vt0.c1, vt1.c1, vt0.c0, vt1.c0;
SELECT vt0.c1, vt1.c1, vt0.c0, vt1.c0 FROM vt0, vt1, v0 GROUP BY vt0.c1, vt1.c1, vt0.c0, vt1.c0;
SELECT ALL vt2.c0, vt0.c1, vt1.c1, vt0.c0, v0.c0, vt1.c0 FROM v0, vt1, vt0, vt2 GROUP BY vt2.c0, vt0.c1, vt1.c1, vt0.c0, v0.c0, vt1.c0;
SELECT vt2.c0, vt0.c1, vt1.c1, vt0.c0, v0.c0, vt1.c0 FROM v0, vt1, vt0, vt2 GROUP BY vt2.c0, vt0.c1, vt1.c1, vt0.c0, v0.c0, vt1.c0 HAVING SUM(SUM(COUNT(MIN(vt2.c0)))) UNION ALL SELECT vt2.c0, vt0.c1, vt1.c1, vt0.c0, v0.c0, vt1.c0 FROM v0, vt1, vt0, vt2 GROUP BY vt2.c0, vt0.c1, vt1.c1, vt0.c0, v0.c0, vt1.c0 HAVING (NOT (SUM(SUM(COUNT(MIN(vt2.c0)))))) UNION ALL SELECT ALL vt2.c0, vt0.c1, vt1.c1, vt0.c0, v0.c0, vt1.c0 FROM v0, vt1, vt0, vt2 GROUP BY vt2.c0, vt0.c1, vt1.c1, vt0.c0, v0.c0, vt1.c0 HAVING ((SUM(SUM(COUNT(MIN(vt2.c0))))) ISNULL);
SELECT ALL MIN((NOT (((vt2.c0)*(v0.c0))))) FROM v0, vt2 ORDER BY '' COLLATE NOCASE COLLATE NOCASE  NULLS LAST;
SELECT vt0.c1, vt2.c0, rt0.c4, rt0.c5, rt0.c1, rt0.c2, rt0.c0, vt1.c1 FROM rt0, v0, vt1, vt2, vt0;
SELECT vt0.c1, vt2.c0, rt0.c4, rt0.c5, rt0.c1, rt0.c2, rt0.c0, vt1.c1 FROM rt0, v0, vt1, vt2, vt0 WHERE ((((CAST(rt0.c1 AS REAL)))==(((~ (vt1.c0)))))) UNION ALL SELECT ALL vt0.c1, vt2.c0, rt0.c4, rt0.c5, rt0.c1, rt0.c2, rt0.c0, vt1.c1 FROM rt0, v0, vt1, vt2, vt0 WHERE ((NOT ((((CAST(rt0.c1 AS REAL)))=(((~ (vt1.c0)))))))) UNION ALL SELECT vt0.c1, vt2.c0, rt0.c4, rt0.c5, rt0.c1, rt0.c2, rt0.c0, vt1.c1 FROM rt0, v0, vt1, vt2, vt0 WHERE ((((((CAST(rt0.c1 AS REAL)))==(((~ (vt1.c0)))))) ISNULL));
SELECT vt0.c1, vt2.c0, rt0.c4, rt0.c5, rt0.c1, rt0.c2, rt0.c0, vt1.c1 FROM rt0, v0, vt1, vt2, vt0;
SELECT DISTINCT * FROM rt0 LEFT OUTER JOIN vt0 ON ((((((('', rt0.c3, vt0.c0))>=((rt0.c2, rt0.c3, rt0.c3))))AND((- (rt0.c2)))))AND((~ (vt0.c0))));
SELECT DISTINCT * FROM rt0 LEFT OUTER JOIN vt0 ON ((((((('', rt0.c3, vt0.c0))>=((rt0.c2, rt0.c3, rt0.c3))))AND((- (rt0.c2)))))AND((~ (vt0.c0)))) WHERE (rt0.c5) UNION SELECT DISTINCT * FROM rt0 LEFT OUTER JOIN vt0 ON ((((((('', rt0.c3, vt0.c0))>=((rt0.c2, rt0.c3, rt0.c3))))AND((- (rt0.c2)))))AND((~ (vt0.c0)))) WHERE ((NOT (rt0.c5))) UNION SELECT DISTINCT * FROM rt0 LEFT OUTER JOIN vt0 ON ((((((('', rt0.c3, vt0.c0))>=((rt0.c2, rt0.c3, rt0.c3))))AND((- (rt0.c2)))))AND((~ (vt0.c0)))) WHERE (((rt0.c5) ISNULL));
SELECT DISTINCT * FROM rt0 LEFT OUTER JOIN vt0 ON ((((((('', rt0.c3, vt0.c0))>=((rt0.c2, rt0.c3, rt0.c3))))AND((- (rt0.c2)))))AND((~ (vt0.c0))));
SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT ALL vt2.c0 FROM vt2 WHERE (((((CAST(vt2.c0 AS INTEGER))AND(((NULL) BETWEEN (vt2.c0) AND (vt2.c0)))))AND(vt2.c0))) GROUP BY vt2.c0 UNION SELECT ALL vt2.c0 FROM vt2 WHERE ((NOT (((((CAST(vt2.c0 AS INTEGER))AND(((NULL) BETWEEN (vt2.c0) AND (vt2.c0)))))AND(vt2.c0))))) GROUP BY vt2.c0 UNION SELECT vt2.c0 FROM vt2 WHERE (((((((CAST(vt2.c0 AS INTEGER))AND(((NULL) BETWEEN (vt2.c0) AND (vt2.c0)))))AND(vt2.c0))) ISNULL)) GROUP BY vt2.c0;
SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT rt0.c4, rt0.c2, rt0.c1, rt0.c3, rt0.c5, vt0.c1, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c4, rt0.c2, rt0.c1, rt0.c3, rt0.c5, vt0.c1, vt0.c0;
SELECT rt0.c4, rt0.c2, rt0.c1, rt0.c3, rt0.c5, vt0.c1, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c4, rt0.c2, rt0.c1, rt0.c3, rt0.c5, vt0.c1, vt0.c0 HAVING CAST(CASE TOTAL(rt0.c5)  WHEN rt0.c1 THEN rt0.c3 ELSE GROUP_CONCAT(MAX(MAX('-1606861423'))) END AS BLOB) UNION ALL SELECT rt0.c4, rt0.c2, rt0.c1, rt0.c3, rt0.c5, vt0.c1, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c4, rt0.c2, rt0.c1, rt0.c3, rt0.c5, vt0.c1, vt0.c0 HAVING (NOT (CAST(CASE TOTAL(rt0.c5)  WHEN rt0.c1 THEN rt0.c3 ELSE GROUP_CONCAT(MAX(MAX('-1606861423'))) END AS BLOB))) UNION ALL SELECT rt0.c4, rt0.c2, rt0.c1, rt0.c3, rt0.c5, vt0.c1, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c4, rt0.c2, rt0.c1, rt0.c3, rt0.c5, vt0.c1, vt0.c0 HAVING ((CAST(CASE TOTAL(rt0.c5)  WHEN rt0.c1 THEN rt0.c3 ELSE GROUP_CONCAT(MAX(MAX('-1606861423'))) END AS BLOB)) ISNULL);
SELECT ALL vt1.c1, vt0.c1, rt0.c2, vt1.c0, rt0.c4, rt0.c1, rt0.c3, rt0.c5 FROM v0, vt0, vt1, rt0;
SELECT vt1.c1, vt0.c1, rt0.c2, vt1.c0, rt0.c4, rt0.c1, rt0.c3, rt0.c5 FROM v0, vt0, vt1, rt0 WHERE ((((vt0.c1, NULL, rt0.c3, rt0.c5, rt0.c0)) BETWEEN (((((0X5c27ddde, vt0.c1, 0.9608632787401431, rt0.c5, rt0.c4, rt0.c2, vt0.c0)) NOT BETWEEN ((vt0.c0, vt1.c1, vt1.c0, 0.7350002541843783, rt0.c1, rt0.c3, rt0.c2)) AND (('1890617634', vt0.c1, vt0.c0, vt1.c0, vt0.c1, rt0.c3, rt0.c0))), rt0.c1 COLLATE BINARY, (((rt0.c0))<=((v0.c0))), (- (rt0.c4)), CAST(rt0.c2 AS REAL))) AND ((((vt0.c0) BETWEEN (vt0.c0) AND (rt0.c0)), ((NULL) ISNULL), CAST(rt0.c0 AS REAL), rt0.c2 COLLATE BINARY, CASE rt0.c4  WHEN rt0.c5 THEN v0.c0 END)))) UNION ALL SELECT vt1.c1, vt0.c1, rt0.c2, vt1.c0, rt0.c4, rt0.c1, rt0.c3, rt0.c5 FROM v0, vt0, vt1, rt0 WHERE ((NOT ((((vt0.c1, NULL, rt0.c3, rt0.c5, rt0.c0)) BETWEEN (((((0x5c27ddde, vt0.c1, 0.9608632787401431, rt0.c5, rt0.c4, rt0.c2, vt0.c0)) NOT BETWEEN ((vt0.c0, vt1.c1, vt1.c0, 0.7350002541843783, rt0.c1, rt0.c3, rt0.c2)) AND (('1890617634', vt0.c1, vt0.c0, vt1.c0, vt0.c1, rt0.c3, rt0.c0))), rt0.c1 COLLATE BINARY, (((rt0.c0))<=((v0.c0))), (- (rt0.c4)), CAST(rt0.c2 AS REAL))) AND ((((vt0.c0) BETWEEN (vt0.c0) AND (rt0.c0)), ((NULL) ISNULL), CAST(rt0.c0 AS REAL), rt0.c2 COLLATE BINARY, CASE rt0.c4  WHEN rt0.c5 THEN v0.c0 END)))))) UNION ALL SELECT ALL vt1.c1, vt0.c1, rt0.c2, vt1.c0, rt0.c4, rt0.c1, rt0.c3, rt0.c5 FROM v0, vt0, vt1, rt0 WHERE ((((((vt0.c1, NULL, rt0.c3, rt0.c5, rt0.c0)) BETWEEN (((((0X5c27ddde, vt0.c1, 0.9608632787401431, rt0.c5, rt0.c4, rt0.c2, vt0.c0)) NOT BETWEEN ((vt0.c0, vt1.c1, vt1.c0, 0.7350002541843783, rt0.c1, rt0.c3, rt0.c2)) AND (('1890617634', vt0.c1, vt0.c0, vt1.c0, vt0.c1, rt0.c3, rt0.c0))), rt0.c1 COLLATE BINARY, (((rt0.c0))<=((v0.c0))), (- (rt0.c4)), CAST(rt0.c2 AS REAL))) AND ((((vt0.c0) BETWEEN (vt0.c0) AND (rt0.c0)), ((NULL) ISNULL), CAST(rt0.c0 AS REAL), rt0.c2 COLLATE BINARY, CASE rt0.c4  WHEN rt0.c5 THEN v0.c0 END)))) ISNULL));
SELECT ALL vt1.c1, vt0.c1, rt0.c2, vt1.c0, rt0.c4, rt0.c1, rt0.c3, rt0.c5 FROM v0, vt0, vt1, rt0;
SELECT DISTINCT * FROM rt0, vt2;
SELECT DISTINCT * FROM rt0, vt2 WHERE (x'') UNION SELECT DISTINCT * FROM rt0, vt2 WHERE ((NOT (x''))) UNION SELECT DISTINCT * FROM rt0, vt2 WHERE (((x'') ISNULL));
SELECT DISTINCT * FROM rt0, vt2;
SELECT ALL vt0.c0, vt0.c1, v0.c0, vt1.c1, vt1.c0 FROM vt1, v0, vt0 GROUP BY vt0.c0, vt0.c1, v0.c0, vt1.c1, vt1.c0;
SELECT vt0.c0, vt0.c1, v0.c0, vt1.c1, vt1.c0 FROM vt1, v0, vt0 WHERE (CAST(((55399162)*(vt0.c0)) AS NUMERIC)) GROUP BY vt0.c0, vt0.c1, v0.c0, vt1.c1, vt1.c0 UNION SELECT ALL vt0.c0, vt0.c1, v0.c0, vt1.c1, vt1.c0 FROM vt1, v0, vt0 WHERE ((NOT (CAST(((55399162)*(vt0.c0)) AS NUMERIC)))) GROUP BY vt0.c0, vt0.c1, v0.c0, vt1.c1, vt1.c0 UNION SELECT vt0.c0, vt0.c1, v0.c0, vt1.c1, vt1.c0 FROM vt1, v0, vt0 WHERE (((CAST(((55399162)*(vt0.c0)) AS NUMERIC)) ISNULL)) GROUP BY vt0.c0, vt0.c1, v0.c0, vt1.c1, vt1.c0;
SELECT ALL vt0.c0, vt0.c1, v0.c0, vt1.c1, vt1.c0 FROM vt1, v0, vt0 GROUP BY vt0.c0, vt0.c1, v0.c0, vt1.c1, vt1.c0;
SELECT ALL rt0.c4, rt0.c0, rt0.c5, rt0.c1 FROM rt0 GROUP BY rt0.c4, rt0.c0, rt0.c5, rt0.c1;
SELECT ALL rt0.c4, rt0.c0, rt0.c5, rt0.c1 FROM rt0 GROUP BY rt0.c4, rt0.c0, rt0.c5, rt0.c1 HAVING (CASE WHEN rt0.c4 THEN rt0.c0 END IN ()) UNION ALL SELECT ALL rt0.c4, rt0.c0, rt0.c5, rt0.c1 FROM rt0 GROUP BY rt0.c4, rt0.c0, rt0.c5, rt0.c1 HAVING (NOT ((CASE WHEN rt0.c4 THEN rt0.c0 END IN ()))) UNION ALL SELECT rt0.c4, rt0.c0, rt0.c5, rt0.c1 FROM rt0 GROUP BY rt0.c4, rt0.c0, rt0.c5, rt0.c1 HAVING (((CASE WHEN rt0.c4 THEN rt0.c0 END IN ())) ISNULL);
SELECT ALL rt0.c4, rt0.c0, rt0.c5, rt0.c1 FROM rt0 GROUP BY rt0.c4, rt0.c0, rt0.c5, rt0.c1;
SELECT ALL rt0.c4, rt0.c0, rt0.c5, rt0.c1 FROM rt0 GROUP BY rt0.c4, rt0.c0, rt0.c5, rt0.c1 HAVING (CASE WHEN rt0.c4 THEN rt0.c0 END IN ()) UNION ALL SELECT ALL rt0.c4, rt0.c0, rt0.c5, rt0.c1 FROM rt0 GROUP BY rt0.c4, rt0.c0, rt0.c5, rt0.c1 HAVING (NOT ((CASE WHEN rt0.c4 THEN rt0.c0 END IN ()))) UNION ALL SELECT rt0.c4, rt0.c0, rt0.c5, rt0.c1 FROM rt0 GROUP BY rt0.c4, rt0.c0, rt0.c5, rt0.c1 HAVING (((CASE WHEN rt0.c4 THEN rt0.c0 END IN ())) ISNULL);
SELECT ALL rt0.c4, rt0.c0, rt0.c5, rt0.c1 FROM rt0 GROUP BY rt0.c4, rt0.c0, rt0.c5, rt0.c1;
SELECT MIN(CASE WHEN ((vt1.c0)&(NULL)) THEN 0.18500586966652854 END) FROM vt0, vt1, v0, rt0 ORDER BY ((((((((((((((rt0.c5)<>(rt0.c1)))AND(-6.8003453E8)))OR(((rt0.c5)GLOB(v0.c0)))))OR((vt1.c0 IN ()))))OR(CAST(rt0.c1 AS BLOB))))OR((~ (rt0.c3)))))OR(((rt0.c3)-(vt0.c0))))  NULLS FIRST;
SELECT ALL vt1.c0, vt0.c1, rt0.c1, rt0.c2, rt0.c3, rt0.c5, rt0.c0, vt0.c0 FROM vt0, rt0, v0, vt2, vt1;
SELECT ALL vt1.c0, vt0.c1, rt0.c1, rt0.c2, rt0.c3, rt0.c5, rt0.c0, vt0.c0 FROM vt0, rt0, v0, vt2, vt1 WHERE ((((NOT (vt1.c0))) BETWEEN (((((vt1.c1)OR(rt0.c4)))OR(rt0.c5))) AND (((v0.c0)GLOB(vt0.c1))))) UNION ALL SELECT ALL vt1.c0, vt0.c1, rt0.c1, rt0.c2, rt0.c3, rt0.c5, rt0.c0, vt0.c0 FROM vt0, rt0, v0, vt2, vt1 WHERE ((NOT ((((NOT (vt1.c0))) BETWEEN (((((vt1.c1)OR(rt0.c4)))OR(rt0.c5))) AND (((v0.c0)GLOB(vt0.c1))))))) UNION ALL SELECT vt1.c0, vt0.c1, rt0.c1, rt0.c2, rt0.c3, rt0.c5, rt0.c0, vt0.c0 FROM vt0 NOT INDEXED, rt0, v0, vt2, vt1 WHERE ((((((NOT (vt1.c0))) BETWEEN (((((vt1.c1)OR(rt0.c4)))OR(rt0.c5))) AND (((v0.c0)GLOB(vt0.c1))))) ISNULL));
SELECT ALL vt1.c0, vt0.c1, rt0.c1, rt0.c2, rt0.c3, rt0.c5, rt0.c0, vt0.c0 FROM vt0, rt0, v0, vt2, vt1;
SELECT DISTINCT vt0.c0, rt0.c2, vt0.c1, rt0.c4, vt2.c0, rt0.c5, rt0.c0, rt0.c3, rt0.c1 FROM rt0, vt0, vt2;
SELECT DISTINCT vt0.c0, rt0.c2, vt0.c1, rt0.c4, vt2.c0, rt0.c5, rt0.c0, rt0.c3, rt0.c1 FROM rt0, vt0, vt2 WHERE (((NULL) NOT BETWEEN (NULLIF(rt0.c4, rt0.c5)) AND (CAST(rt0.c0 AS NUMERIC)))) UNION SELECT DISTINCT vt0.c0, rt0.c2, vt0.c1, rt0.c4, vt2.c0, rt0.c5, rt0.c0, rt0.c3, rt0.c1 FROM rt0, vt0, vt2 NOT INDEXED WHERE ((NOT (((NULL) NOT BETWEEN (NULLIF(rt0.c4, rt0.c5)) AND (CAST(rt0.c0 AS NUMERIC)))))) UNION SELECT DISTINCT vt0.c0, rt0.c2, vt0.c1, rt0.c4, vt2.c0, rt0.c5, rt0.c0, rt0.c3, rt0.c1 FROM rt0, vt0, vt2 WHERE (((((NULL) NOT BETWEEN (NULLIF(rt0.c4, rt0.c5)) AND (CAST(rt0.c0 AS NUMERIC)))) ISNULL));
SELECT DISTINCT vt0.c0, rt0.c2, vt0.c1, rt0.c4, vt2.c0, rt0.c5, rt0.c0, rt0.c3, rt0.c1 FROM rt0, vt0, vt2;
SELECT vt1.c0, vt2.c0 FROM vt2, vt1 GROUP BY vt1.c0, vt2.c0;
SELECT ALL vt1.c0, vt2.c0 FROM vt2, vt1 WHERE ((SQLITE_VERSION() IN ())) GROUP BY vt1.c0, vt2.c0 UNION SELECT ALL vt1.c0, vt2.c0 FROM vt2, vt1 WHERE ((NOT ((SQLITE_VERSION() IN ())))) GROUP BY vt1.c0, vt2.c0 UNION SELECT ALL vt1.c0, vt2.c0 FROM vt2, vt1 WHERE ((((SQLITE_VERSION() IN ())) ISNULL)) GROUP BY vt1.c0, vt2.c0;
SELECT vt1.c0, vt2.c0 FROM vt2, vt1 GROUP BY vt1.c0, vt2.c0;
SELECT ALL vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0;
SELECT ALL vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0 HAVING COUNT(MAX(0.8381003756823366)) UNION ALL SELECT ALL vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0 HAVING (NOT (COUNT(MAX(0.8381003756823366)))) UNION ALL SELECT ALL vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0 HAVING ((COUNT(MAX(0.8381003756823366))) ISNULL);
SELECT ALL * FROM vt0;
SELECT ALL * FROM vt0 WHERE ((+ ((- (vt0.c1))))) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT ((+ ((- (vt0.c1))))))) UNION ALL SELECT ALL * FROM vt0 WHERE ((((+ ((- (vt0.c1))))) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT * FROM vt2 CROSS JOIN vt0 ON CAST(((vt2.c0)/(vt0.c1)) AS INTEGER) FULL OUTER JOIN vt1 ON ((((LIKELY(vt0.c1))AND(((vt1.c1)LIKE(vt0.c1)))))AND((+ (vt0.c1))));
SELECT DISTINCT * FROM vt2 CROSS JOIN vt0 ON CAST(((vt2.c0)/(vt0.c1)) AS INTEGER) FULL OUTER JOIN vt1 ON ((((LIKELY(vt0.c1))AND(((vt1.c1)LIKE(vt0.c1)))))AND((+ (vt0.c1)))) WHERE (CAST((((vt1.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt1.c1))) AS TEXT)) UNION SELECT DISTINCT * FROM vt2 CROSS JOIN vt0 ON CAST(((vt2.c0)/(vt0.c1)) AS INTEGER) FULL OUTER JOIN vt1 ON ((((LIKELY(vt0.c1))AND(((vt1.c1)LIKE(vt0.c1)))))AND((+ (vt0.c1)))) WHERE ((NOT (CAST((((vt1.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt1.c1))) AS TEXT)))) UNION SELECT DISTINCT * FROM vt2 CROSS JOIN vt0 ON CAST(((vt2.c0)/(vt0.c1)) AS INTEGER) FULL OUTER JOIN vt1 ON ((((LIKELY(vt0.c1))AND(((vt1.c1)LIKE(vt0.c1)))))AND((+ (vt0.c1)))) WHERE (((CAST((((vt1.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt1.c1))) AS TEXT)) ISNULL));
SELECT DISTINCT * FROM vt2 CROSS JOIN vt0 ON CAST(((vt2.c0)/(vt0.c1)) AS INTEGER) FULL OUTER JOIN vt1 ON ((((LIKELY(vt0.c1))AND(((vt1.c1)LIKE(vt0.c1)))))AND((+ (vt0.c1))));
SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT vt2.c0 FROM vt2 WHERE ((((CAST(vt2.c0 AS REAL), ((vt2.c0) ISNULL), (((vt2.c0, vt2.c0, vt2.c0))<((vt2.c0, vt2.c0, vt2.c0)))))=((((((((((vt2.c0)AND(0xffffffff829fcb2f)))OR(vt2.c0)))AND(vt2.c0)))AND(vt2.c0)), vt2.c0, ((((-501442238)AND(vt2.c0)))OR(vt2.c0)))))) GROUP BY vt2.c0 UNION SELECT ALL vt2.c0 FROM vt2 WHERE ((NOT ((((CAST(vt2.c0 AS REAL), ((vt2.c0) ISNULL), (((vt2.c0, vt2.c0, vt2.c0))<((vt2.c0, vt2.c0, vt2.c0)))))=((((((((((vt2.c0)AND(0Xffffffff829fcb2f)))OR(vt2.c0)))AND(vt2.c0)))AND(vt2.c0)), vt2.c0, ((((-501442238)AND(vt2.c0)))OR(vt2.c0)))))))) GROUP BY vt2.c0 UNION SELECT vt2.c0 FROM vt2 WHERE ((((((CAST(vt2.c0 AS REAL), ((vt2.c0) ISNULL), (((vt2.c0, vt2.c0, vt2.c0))<((vt2.c0, vt2.c0, vt2.c0)))))==((((((((((vt2.c0)AND(0xffffffff829fcb2f)))OR(vt2.c0)))AND(vt2.c0)))AND(vt2.c0)), vt2.c0, ((((-501442238)AND(vt2.c0)))OR(vt2.c0)))))) ISNULL)) GROUP BY vt2.c0;
SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING COUNT((vt0.c1 IN ())) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT((vt0.c1 IN ())))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT((vt0.c1 IN ()))) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING COUNT((vt0.c1 IN ())) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT((vt0.c1 IN ())))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT((vt0.c1 IN ()))) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL rt0.c4, rt0.c3, rt0.c0 FROM rt0, vt2;
SELECT rt0.c4, rt0.c3, rt0.c0 FROM rt0, vt2 WHERE ((- ('1776487181'))) UNION ALL SELECT ALL rt0.c4, rt0.c3, rt0.c0 FROM rt0, vt2 WHERE ((NOT ((- ('1776487181'))))) UNION ALL SELECT rt0.c4, rt0.c3, rt0.c0 FROM rt0, vt2 WHERE ((((- ('1776487181'))) ISNULL));
SELECT ALL rt0.c4, rt0.c3, rt0.c0 FROM rt0, vt2;
SELECT DISTINCT * FROM v0, vt2, vt1, vt0 INNER JOIN rt0 ON UNLIKELY(DISTINCT (((rt0.c1, x'3b5c89dd', rt0.c0))>=(('5^龄', rt0.c5, vt1.c1))));
SELECT DISTINCT * FROM v0, vt2, vt1, vt0 INNER JOIN rt0 ON UNLIKELY(DISTINCT (((rt0.c1, x'3b5c89dd', rt0.c0))>=(('5^龄', rt0.c5, vt1.c1)))) WHERE (json_array('-1636112821', CAST(v0.c0 AS NUMERIC))) UNION SELECT DISTINCT * FROM v0, vt2, vt1, vt0 INNER JOIN rt0 ON UNLIKELY(DISTINCT (((rt0.c1, x'3b5c89dd', rt0.c0))>=(('5^龄', rt0.c5, vt1.c1)))) WHERE ((NOT (json_array('-1636112821', CAST(v0.c0 AS NUMERIC))))) UNION SELECT DISTINCT * FROM v0, vt2, vt1, vt0 INNER JOIN rt0 ON UNLIKELY(DISTINCT (((rt0.c1, x'3b5c89dd', rt0.c0))>=(('5^龄', rt0.c5, vt1.c1)))) WHERE (((json_array('-1636112821', CAST(v0.c0 AS NUMERIC))) ISNULL));
SELECT DISTINCT * FROM v0, vt2, vt1, vt0 INNER JOIN rt0 ON UNLIKELY(DISTINCT (((rt0.c1, x'3b5c89dd', rt0.c0))>=(('5^龄', rt0.c5, vt1.c1))));
SELECT rt0.c2 FROM rt0 CROSS JOIN vt0 ON ((0.8325579403493413)%(CAST(rt0.c1 AS BLOB))) GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 CROSS JOIN vt0 ON ((0.8325579403493413)%(CAST(rt0.c1 AS BLOB))) WHERE (((((((((((((((((rt0.c0)OR('')))AND(rt0.c3)))OR(rt0.c1)))AND(rt0.c1)))OR(CASE rt0.c1  WHEN rt0.c0 THEN vt0.c0 ELSE vt0.c1 END)))AND(((((rt0.c1)AND(rt0.c1)))OR(vt0.c0)))))AND(CAST(rt0.c2 AS INTEGER))))AND(rt0.c1 COLLATE NOCASE))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0 CROSS JOIN vt0 ON ((0.8325579403493413)%(CAST(rt0.c1 AS BLOB))) WHERE ((NOT (((((((((((((((((rt0.c0)OR('')))AND(rt0.c3)))OR(rt0.c1)))AND(rt0.c1)))OR(CASE rt0.c1  WHEN rt0.c0 THEN vt0.c0 ELSE vt0.c1 END)))AND(((((rt0.c1)AND(rt0.c1)))OR(vt0.c0)))))AND(CAST(rt0.c2 AS INTEGER))))AND(rt0.c1 COLLATE NOCASE))))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0 CROSS JOIN vt0 ON ((0.8325579403493413)%(CAST(rt0.c1 AS BLOB))) WHERE (((((((((((((((((((rt0.c0)OR('')))AND(rt0.c3)))OR(rt0.c1)))AND(rt0.c1)))OR(CASE rt0.c1  WHEN rt0.c0 THEN vt0.c0 ELSE vt0.c1 END)))AND(((((rt0.c1)AND(rt0.c1)))OR(vt0.c0)))))AND(CAST(rt0.c2 AS INTEGER))))AND(rt0.c1 COLLATE NOCASE))) ISNULL)) GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 CROSS JOIN vt0 ON ((0.8325579403493413)%(CAST(rt0.c1 AS BLOB))) GROUP BY rt0.c2;
SELECT vt1.c1 FROM vt1 FULL OUTER JOIN vt0 ON (+ (rt0.c5 COLLATE BINARY)) RIGHT OUTER JOIN v0 ON 0.4459756350349785 COLLATE NOCASE LEFT OUTER JOIN rt0 ON CAST((~ (vt1.c0)) AS NUMERIC) GROUP BY vt1.c1;
SELECT ALL SUM(((((vt1.c1)>=('')))||(((v0.c0)<(']e\nZtaTz7'))))) FROM vt2, vt0, vt1, v0 ORDER BY (((((((0.8592969712649065)OR(vt0.c1)))OR(v0.c0))))=((((vt0.c0) IS TRUE)))) DESC, (((v0.c0)) BETWEEN ((((vt2.c0) IS FALSE))) AND ((CAST(vt0.c1 AS NUMERIC)))) ASC  NULLS LAST;
SELECT ALL * FROM vt2;
SELECT * FROM vt2 WHERE (vt2.c0) UNION ALL SELECT * FROM vt2 WHERE ((NOT (vt2.c0))) UNION ALL SELECT * FROM vt2 WHERE (((vt2.c0) ISNULL));
SELECT ALL * FROM vt2;
SELECT DISTINCT * FROM vt1, vt0, rt0, vt2;
SELECT DISTINCT * FROM vt1, vt0, rt0, vt2 WHERE ((((((vt0.c1))<((vt1.c0)))) IS TRUE)) UNION SELECT DISTINCT * FROM vt1, vt0, rt0, vt2 WHERE ((NOT ((((((vt0.c1))<((vt1.c0)))) IS TRUE)))) UNION SELECT DISTINCT * FROM vt1, vt0, rt0, vt2 WHERE ((((((((vt0.c1))<((vt1.c0)))) IS TRUE)) ISNULL));
SELECT DISTINCT * FROM vt1, vt0, rt0, vt2;
SELECT v0.c0, rt0.c2, rt0.c4, rt0.c3, rt0.c1 FROM vt2, v0, vt1, rt0 GROUP BY v0.c0, rt0.c2, rt0.c4, rt0.c3, rt0.c1;
SELECT ALL v0.c0, rt0.c2, rt0.c4, rt0.c3, rt0.c1 FROM vt2, v0, vt1, rt0 WHERE (vt1.c1) GROUP BY v0.c0, rt0.c2, rt0.c4, rt0.c3, rt0.c1 UNION SELECT v0.c0, rt0.c2, rt0.c4, rt0.c3, rt0.c1 FROM vt2, v0, vt1, rt0 WHERE ((NOT (vt1.c1))) GROUP BY v0.c0, rt0.c2, rt0.c4, rt0.c3, rt0.c1 UNION SELECT ALL v0.c0, rt0.c2, rt0.c4, rt0.c3, rt0.c1 FROM vt2, v0, vt1, rt0 WHERE (((vt1.c1) ISNULL)) GROUP BY v0.c0, rt0.c2, rt0.c4, rt0.c3, rt0.c1;
SELECT v0.c0, rt0.c2, rt0.c4, rt0.c3, rt0.c1 FROM vt2, v0, vt1, rt0 GROUP BY v0.c0, rt0.c2, rt0.c4, rt0.c3, rt0.c1;
SELECT vt0.c0, v0.c0, vt2.c0 FROM vt0, v0 INNER JOIN vt2 ON 'OqZ3庩' GROUP BY vt0.c0, v0.c0, vt2.c0;
SELECT ALL vt0.c0, v0.c0, vt2.c0 FROM vt0, v0 INNER JOIN vt2 ON 'OqZ3庩' GROUP BY vt0.c0, v0.c0, vt2.c0 HAVING ((CASE vt0.c0  WHEN GROUP_CONCAT(MIN(AVG(v0.c0))) THEN v0.c0 END)<<(TOTAL(COUNT(*)))) UNION ALL SELECT vt0.c0, v0.c0, vt2.c0 FROM vt0, v0 INNER JOIN vt2 ON 'OqZ3庩' GROUP BY vt0.c0, v0.c0, vt2.c0 HAVING (NOT (((CASE vt0.c0  WHEN GROUP_CONCAT(MIN(AVG(v0.c0))) THEN v0.c0 END)<<(TOTAL(COUNT(*)))))) UNION ALL SELECT ALL vt0.c0, v0.c0, vt2.c0 FROM vt0, v0 INNER JOIN vt2 ON 'OqZ3庩' GROUP BY vt0.c0, v0.c0, vt2.c0 HAVING ((((CASE vt0.c0  WHEN GROUP_CONCAT(MIN(AVG(v0.c0))) THEN v0.c0 END)<<(TOTAL(COUNT(*))))) ISNULL);
SELECT ALL * FROM vt0, vt2;
SELECT ALL * FROM vt0, vt2 WHERE ((((0.2428629276956501)=(vt0.c0)) IN ())) UNION ALL SELECT * FROM vt0, vt2 WHERE ((NOT ((((0.2428629276956501)=(vt0.c0)) IN ())))) UNION ALL SELECT ALL * FROM vt0, vt2 WHERE ((((((0.2428629276956501)=(vt0.c0)) IN ())) ISNULL));
SELECT ALL * FROM vt0, vt2;
SELECT DISTINCT * FROM vt2;
SELECT DISTINCT * FROM vt2 WHERE (CASE WHEN ((vt2.c0) IS TRUE) THEN (- (vt2.c0)) WHEN ((vt2.c0)<<(x'')) THEN vt2.c0 WHEN (NOT (vt2.c0)) THEN ((vt2.c0) BETWEEN (vt2.c0) AND (vt2.c0)) END) UNION SELECT DISTINCT * FROM vt2 WHERE ((NOT (CASE WHEN ((vt2.c0) IS TRUE) THEN (- (vt2.c0)) WHEN ((vt2.c0)<<(x'')) THEN vt2.c0 WHEN (NOT (vt2.c0)) THEN ((vt2.c0) BETWEEN (vt2.c0) AND (vt2.c0)) END))) UNION SELECT DISTINCT * FROM vt2 WHERE (((CASE WHEN ((vt2.c0) IS TRUE) THEN (- (vt2.c0)) WHEN ((vt2.c0)<<(x'')) THEN vt2.c0 WHEN (NOT (vt2.c0)) THEN ((vt2.c0) BETWEEN (vt2.c0) AND (vt2.c0)) END) ISNULL));
SELECT DISTINCT * FROM vt2;
SELECT vt0.c1, vt0.c0 FROM vt0, vt2 NATURAL JOIN v0 GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0, vt2 NATURAL JOIN v0 WHERE (CAST(LIKE(v0.c0, vt2.c0) AS NUMERIC)) GROUP BY vt0.c1, vt0.c0 UNION SELECT ALL vt0.c1, vt0.c0 FROM vt0, vt2 NATURAL JOIN v0 WHERE ((NOT (CAST(LIKE(v0.c0, vt2.c0) AS NUMERIC)))) GROUP BY vt0.c1, vt0.c0 UNION SELECT vt0.c1, vt0.c0 FROM vt0, vt2 NATURAL JOIN v0 WHERE (((CAST(LIKE(v0.c0, vt2.c0) AS NUMERIC)) ISNULL)) GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0, vt2 NATURAL JOIN v0 GROUP BY vt0.c1, vt0.c0;
SELECT rt0.c2, rt0.c5, vt1.c1, vt1.c0, rt0.c1, rt0.c4, vt2.c0, rt0.c0, rt0.c3, v0.c0 FROM v0, rt0, vt1, vt2 GROUP BY rt0.c2, rt0.c5, vt1.c1, vt1.c0, rt0.c1, rt0.c4, vt2.c0, rt0.c0, rt0.c3, v0.c0;
SELECT ALL rt0.c2, rt0.c5, vt1.c1, vt1.c0, rt0.c1, rt0.c4, vt2.c0, rt0.c0, rt0.c3, v0.c0 FROM v0, rt0, vt1, vt2 GROUP BY rt0.c2, rt0.c5, vt1.c1, vt1.c0, rt0.c1, rt0.c4, vt2.c0, rt0.c0, rt0.c3, v0.c0 HAVING x'' UNION ALL SELECT ALL rt0.c2, rt0.c5, vt1.c1, vt1.c0, rt0.c1, rt0.c4, vt2.c0, rt0.c0, rt0.c3, v0.c0 FROM v0, rt0, vt1, vt2 GROUP BY rt0.c2, rt0.c5, vt1.c1, vt1.c0, rt0.c1, rt0.c4, vt2.c0, rt0.c0, rt0.c3, v0.c0 HAVING (NOT (x'')) UNION ALL SELECT ALL rt0.c2, rt0.c5, vt1.c1, vt1.c0, rt0.c1, rt0.c4, vt2.c0, rt0.c0, rt0.c3, v0.c0 FROM v0, rt0, vt1, vt2 GROUP BY rt0.c2, rt0.c5, vt1.c1, vt1.c0, rt0.c1, rt0.c4, vt2.c0, rt0.c0, rt0.c3, v0.c0 HAVING ((x'') ISNULL);
SELECT rt0.c2, rt0.c5, vt1.c1, vt1.c0, rt0.c1, rt0.c4, vt2.c0, rt0.c0, rt0.c3, v0.c0 FROM v0, rt0, vt1, vt2 GROUP BY rt0.c2, rt0.c5, vt1.c1, vt1.c0, rt0.c1, rt0.c4, vt2.c0, rt0.c0, rt0.c3, v0.c0;
SELECT ALL rt0.c2, rt0.c5, vt1.c1, vt1.c0, rt0.c1, rt0.c4, vt2.c0, rt0.c0, rt0.c3, v0.c0 FROM v0, rt0, vt1, vt2 GROUP BY rt0.c2, rt0.c5, vt1.c1, vt1.c0, rt0.c1, rt0.c4, vt2.c0, rt0.c0, rt0.c3, v0.c0 HAVING x'' UNION ALL SELECT ALL rt0.c2, rt0.c5, vt1.c1, vt1.c0, rt0.c1, rt0.c4, vt2.c0, rt0.c0, rt0.c3, v0.c0 FROM v0, rt0, vt1, vt2 GROUP BY rt0.c2, rt0.c5, vt1.c1, vt1.c0, rt0.c1, rt0.c4, vt2.c0, rt0.c0, rt0.c3, v0.c0 HAVING (NOT (x'')) UNION ALL SELECT ALL rt0.c2, rt0.c5, vt1.c1, vt1.c0, rt0.c1, rt0.c4, vt2.c0, rt0.c0, rt0.c3, v0.c0 FROM v0, rt0, vt1, vt2 GROUP BY rt0.c2, rt0.c5, vt1.c1, vt1.c0, rt0.c1, rt0.c4, vt2.c0, rt0.c0, rt0.c3, v0.c0 HAVING ((x'') ISNULL);
SELECT rt0.c2, rt0.c5, vt1.c1, vt1.c0, rt0.c1, rt0.c4, vt2.c0, rt0.c0, rt0.c3, v0.c0 FROM v0, rt0, vt1, vt2 GROUP BY rt0.c2, rt0.c5, vt1.c1, vt1.c0, rt0.c1, rt0.c4, vt2.c0, rt0.c0, rt0.c3, v0.c0;
SELECT ALL * FROM vt0;
SELECT ALL * FROM vt0 WHERE (NULL) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (NULL))) UNION ALL SELECT ALL * FROM vt0 WHERE (((NULL) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT * FROM vt0, v0;
SELECT DISTINCT * FROM vt0, v0 WHERE (LIKELIHOOD(CAST(v0.c0 AS REAL), 0.06074598813609766)) UNION SELECT DISTINCT * FROM vt0, v0 WHERE ((NOT (LIKELIHOOD(CAST(v0.c0 AS REAL), 0.06074598813609766)))) UNION SELECT DISTINCT * FROM vt0, v0 WHERE (((LIKELIHOOD(CAST(v0.c0 AS REAL), 0.06074598813609766)) ISNULL));
SELECT DISTINCT * FROM vt0, v0;
SELECT vt2.c0, vt1.c1 FROM vt2, vt1 GROUP BY vt2.c0, vt1.c1;
SELECT vt2.c0, vt1.c1 FROM vt2, vt1 WHERE (vt2.c0) GROUP BY vt2.c0, vt1.c1 UNION SELECT ALL vt2.c0, vt1.c1 FROM vt2, vt1 WHERE ((NOT (vt2.c0))) GROUP BY vt2.c0, vt1.c1 UNION SELECT vt2.c0, vt1.c1 FROM vt2, vt1 WHERE (((vt2.c0) ISNULL)) GROUP BY vt2.c0, vt1.c1;
SELECT vt2.c0, vt1.c1 FROM vt2, vt1 GROUP BY vt2.c0, vt1.c1;
SELECT ALL vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1;
SELECT vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1 HAVING MIN(COUNT(vt1.c1)) UNION ALL SELECT vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1 HAVING (NOT (MIN(COUNT(vt1.c1)))) UNION ALL SELECT ALL vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1 HAVING ((MIN(COUNT(vt1.c1))) ISNULL);
SELECT ALL vt1.c1 FROM vt1;
SELECT vt1.c1 FROM vt1 WHERE ((((((vt1.c0)IS(vt1.c0))))=((CAST(vt1.c0 AS TEXT))))) UNION ALL SELECT ALL vt1.c1 FROM vt1 WHERE ((NOT ((((((vt1.c0)IS(vt1.c0))))=((CAST(vt1.c0 AS TEXT))))))) UNION ALL SELECT ALL vt1.c1 FROM vt1 WHERE ((((((((vt1.c0)IS(vt1.c0))))==((CAST(vt1.c0 AS TEXT))))) ISNULL));
SELECT ALL vt1.c1 FROM vt1;
SELECT DISTINCT rt0.c0, rt0.c3, vt0.c0, rt0.c5, rt0.c1, rt0.c2 FROM vt0 NATURAL JOIN rt0;
SELECT DISTINCT rt0.c0, rt0.c3, vt0.c0, rt0.c5, rt0.c1, rt0.c2 FROM vt0 NATURAL JOIN rt0 WHERE ((((rt0.c2)%(vt0.c0)) IN (HEX(DISTINCT rt0.c2)))) UNION SELECT DISTINCT rt0.c0, rt0.c3, vt0.c0, rt0.c5, rt0.c1, rt0.c2 FROM vt0 NATURAL JOIN rt0 WHERE ((NOT ((((rt0.c2)%(vt0.c0)) IN (HEX(DISTINCT rt0.c2)))))) UNION SELECT DISTINCT rt0.c0, rt0.c3, vt0.c0, rt0.c5, rt0.c1, rt0.c2 FROM vt0 NATURAL JOIN rt0 WHERE ((((((rt0.c2)%(vt0.c0)) IN (HEX(DISTINCT rt0.c2)))) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c3, vt0.c0, rt0.c5, rt0.c1, rt0.c2 FROM vt0 NATURAL JOIN rt0;
SELECT ALL rt0.c3, rt0.c4, rt0.c2, vt1.c1, vt1.c0, v0.c0, rt0.c5, rt0.c0 FROM vt1, rt0 INNER JOIN v0 ON (NULL IN (vt1.c1, vt1.c1)) COLLATE RTRIM GROUP BY rt0.c3, rt0.c4, rt0.c2, vt1.c1, vt1.c0, v0.c0, rt0.c5, rt0.c0;
SELECT ALL rt0.c3, rt0.c4, rt0.c2, vt1.c1, vt1.c0, v0.c0, rt0.c5, rt0.c0 FROM vt1, rt0 INNER JOIN v0 ON (NULL IN (vt1.c1, vt1.c1)) COLLATE RTRIM WHERE (1e500) GROUP BY rt0.c3, rt0.c4, rt0.c2, vt1.c1, vt1.c0, v0.c0, rt0.c5, rt0.c0 UNION SELECT ALL rt0.c3, rt0.c4, rt0.c2, vt1.c1, vt1.c0, v0.c0, rt0.c5, rt0.c0 FROM vt1, rt0 INNER JOIN v0 ON (NULL IN (vt1.c1, vt1.c1)) COLLATE RTRIM WHERE ((NOT (1e500))) GROUP BY rt0.c3, rt0.c4, rt0.c2, vt1.c1, vt1.c0, v0.c0, rt0.c5, rt0.c0 UNION SELECT rt0.c3, rt0.c4, rt0.c2, vt1.c1, vt1.c0, v0.c0, rt0.c5, rt0.c0 FROM vt1, rt0 INNER JOIN v0 ON (NULL IN (vt1.c1, vt1.c1)) COLLATE RTRIM WHERE (((1e500) ISNULL)) GROUP BY rt0.c3, rt0.c4, rt0.c2, vt1.c1, vt1.c0, v0.c0, rt0.c5, rt0.c0;
SELECT ALL rt0.c3, rt0.c4, rt0.c2, vt1.c1, vt1.c0, v0.c0, rt0.c5, rt0.c0 FROM vt1, rt0 INNER JOIN v0 ON (NULL IN (vt1.c1, vt1.c1)) COLLATE RTRIM GROUP BY rt0.c3, rt0.c4, rt0.c2, vt1.c1, vt1.c0, v0.c0, rt0.c5, rt0.c0;
SELECT ALL vt0.c1, rt0.c1 FROM rt0, vt2 NOT INDEXED, vt0 GROUP BY vt0.c1, rt0.c1;
SELECT ALL vt0.c1, rt0.c1 FROM rt0 NOT INDEXED, vt2, vt0 GROUP BY vt0.c1, rt0.c1 HAVING MIN(rt0.c2 COLLATE RTRIM) UNION ALL SELECT vt0.c1, rt0.c1 FROM rt0, vt2, vt0 GROUP BY vt0.c1, rt0.c1 HAVING (NOT (MIN(rt0.c2 COLLATE RTRIM))) UNION ALL SELECT ALL vt0.c1, rt0.c1 FROM rt0, vt2, vt0 GROUP BY vt0.c1, rt0.c1 HAVING ((MIN(rt0.c2 COLLATE RTRIM)) ISNULL);
SELECT ALL vt0.c1, rt0.c1 FROM rt0, vt2 NOT INDEXED, vt0 GROUP BY vt0.c1, rt0.c1;
SELECT ALL vt0.c1, rt0.c1 FROM rt0 NOT INDEXED, vt2, vt0 GROUP BY vt0.c1, rt0.c1 HAVING MIN(rt0.c2 COLLATE RTRIM) UNION ALL SELECT vt0.c1, rt0.c1 FROM rt0, vt2, vt0 GROUP BY vt0.c1, rt0.c1 HAVING (NOT (MIN(rt0.c2 COLLATE RTRIM))) UNION ALL SELECT ALL vt0.c1, rt0.c1 FROM rt0, vt2, vt0 GROUP BY vt0.c1, rt0.c1 HAVING ((MIN(rt0.c2 COLLATE RTRIM)) ISNULL);
SELECT ALL vt0.c1, rt0.c1 FROM rt0, vt2 NOT INDEXED, vt0 GROUP BY vt0.c1, rt0.c1;
SELECT * FROM vt1, v0 FULL OUTER JOIN vt0 ON ((((rt0.c0)AND(((v0.c0) BETWEEN (rt0.c2) AND (rt0.c0)))))AND(((('-1320829745'))<((rt0.c0))))) LEFT OUTER JOIN rt0 ON ((((((((x'')OR(CAST(rt0.c5 AS REAL))))OR((('')%(v0.c0)))))OR(((rt0.c4) ISNULL))))AND(vt0.c1 COLLATE RTRIM));
SELECT DISTINCT vt1.c1 FROM vt2, vt1;
SELECT DISTINCT vt1.c1 FROM vt2, vt1 WHERE (((((vt1.c0) BETWEEN (vt1.c1) AND (vt2.c0))) NOTNULL)) UNION SELECT DISTINCT vt1.c1 FROM vt2, vt1 WHERE ((NOT (((((vt1.c0) BETWEEN (vt1.c1) AND (vt2.c0))) NOTNULL)))) UNION SELECT DISTINCT vt1.c1 FROM vt2, vt1 WHERE (((((((vt1.c0) BETWEEN (vt1.c1) AND (vt2.c0))) NOTNULL)) ISNULL));
SELECT DISTINCT vt1.c1 FROM vt2, vt1;
SELECT rt0.c3, rt0.c4, rt0.c0, rt0.c2, rt0.c1, rt0.c5 FROM rt0 GROUP BY rt0.c3, rt0.c4, rt0.c0, rt0.c2, rt0.c1, rt0.c5;
SELECT ALL rt0.c3, rt0.c4, rt0.c0, rt0.c2, rt0.c1, rt0.c5 FROM rt0 WHERE ((+ (LOWER(DISTINCT rt0.c1)))) GROUP BY rt0.c3, rt0.c4, rt0.c0, rt0.c2, rt0.c1, rt0.c5 UNION SELECT rt0.c3, rt0.c4, rt0.c0, rt0.c2, rt0.c1, rt0.c5 FROM rt0 WHERE ((NOT ((+ (LOWER(DISTINCT rt0.c1)))))) GROUP BY rt0.c3, rt0.c4, rt0.c0, rt0.c2, rt0.c1, rt0.c5 UNION SELECT rt0.c3, rt0.c4, rt0.c0, rt0.c2, rt0.c1, rt0.c5 FROM rt0 WHERE ((((+ (LOWER(DISTINCT rt0.c1)))) ISNULL)) GROUP BY rt0.c3, rt0.c4, rt0.c0, rt0.c2, rt0.c1, rt0.c5;
SELECT rt0.c3, rt0.c4, rt0.c0, rt0.c2, rt0.c1, rt0.c5 FROM rt0 GROUP BY rt0.c3, rt0.c4, rt0.c0, rt0.c2, rt0.c1, rt0.c5;
SELECT vt1.c0, v0.c0, vt1.c1, vt2.c0 FROM vt1, v0 INNER JOIN vt2 ON (((v0.c0 IN (vt1.c1, vt1.c1))) ISNULL) GROUP BY vt1.c0, v0.c0, vt1.c1, vt2.c0;
SELECT ALL vt1.c0, v0.c0, vt1.c1, vt2.c0 FROM vt1, v0 INNER JOIN vt2 ON (((v0.c0 IN (vt1.c1, vt1.c1))) ISNULL) GROUP BY vt1.c0, v0.c0, vt1.c1, vt2.c0 HAVING (((((vt1.c0, vt1.c1, SUM(vt1.c1)))>((SUM(MAX(vt2.c0)), MIN(MAX(0.8245042372987604)), v0.c0)))) NOTNULL) UNION ALL SELECT ALL vt1.c0, v0.c0, vt1.c1, vt2.c0 FROM vt1, v0 INNER JOIN vt2 ON (((v0.c0 IN (vt1.c1, vt1.c1))) ISNULL) GROUP BY vt1.c0, v0.c0, vt1.c1, vt2.c0 HAVING (NOT ((((((vt1.c0, vt1.c1, SUM(vt1.c1)))>((SUM(MAX(vt2.c0)), MIN(MAX(0.8245042372987604)), v0.c0)))) NOTNULL))) UNION ALL SELECT ALL vt1.c0, v0.c0, vt1.c1, vt2.c0 FROM vt1, v0 NOT INDEXED INNER JOIN vt2 ON (((v0.c0 IN (vt1.c1, vt1.c1))) ISNULL) GROUP BY vt1.c0, v0.c0, vt1.c1, vt2.c0 HAVING (((((((vt1.c0, vt1.c1, SUM(vt1.c1)))>((SUM(MAX(vt2.c0)), MIN(MAX(0.8245042372987604)), v0.c0)))) NOTNULL)) ISNULL);
SELECT * FROM vt2, rt0, vt1, v0, vt0;
SELECT ALL * FROM vt2, rt0, vt1, v0, vt0 WHERE (((((vt1.c1)OR(vt1.c1)))AND(vt1.c1)) COLLATE NOCASE) UNION ALL SELECT * FROM vt2, rt0, vt1 NOT INDEXED, v0, vt0 WHERE ((NOT (((((vt1.c1)OR(vt1.c1)))AND(vt1.c1)) COLLATE NOCASE))) UNION ALL SELECT ALL * FROM vt2, rt0, vt1, v0, vt0 WHERE (((((((vt1.c1)OR(vt1.c1)))AND(vt1.c1)) COLLATE NOCASE) ISNULL));
SELECT * FROM vt2, rt0, vt1, v0, vt0;
SELECT DISTINCT * FROM rt0, vt0, vt1;
SELECT DISTINCT * FROM rt0, vt0, vt1 WHERE (((rtreenode(rt0.c2, rt0.c5))OR(((rt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c1))))) UNION SELECT DISTINCT * FROM rt0, vt0, vt1 WHERE ((NOT (((rtreenode(rt0.c2, rt0.c5))OR(((rt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c1))))))) UNION SELECT DISTINCT * FROM rt0, vt0, vt1 WHERE (((((rtreenode(rt0.c2, rt0.c5))OR(((rt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c1))))) ISNULL));
SELECT DISTINCT * FROM rt0, vt0, vt1;
SELECT ALL vt1.c0 FROM vt2 CROSS JOIN vt1 ON QUOTE(vt2.c0) COLLATE BINARY GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt2 CROSS JOIN vt1 ON QUOTE(vt2.c0) COLLATE BINARY WHERE ((CAST(0.5013724833998234 AS REAL) IN (NULL, json_patch(vt1.c0, 0.2776978249288481)))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt2 CROSS JOIN vt1 ON QUOTE(vt2.c0) COLLATE BINARY WHERE ((NOT ((CAST(0.5013724833998234 AS REAL) IN (NULL, json_patch(vt1.c0, 0.2776978249288481)))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt2 CROSS JOIN vt1 ON QUOTE(vt2.c0) COLLATE BINARY WHERE ((((CAST(0.5013724833998234 AS REAL) IN (NULL, json_patch(vt1.c0, 0.2776978249288481)))) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt2 CROSS JOIN vt1 ON QUOTE(vt2.c0) COLLATE BINARY GROUP BY vt1.c0;
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING COUNT(((vt0.c1)AND(vt0.c0))) UNION ALL SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING (NOT (COUNT(((vt0.c1)AND(vt0.c0))))) UNION ALL SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING ((COUNT(((vt0.c1)AND(vt0.c0)))) ISNULL);
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING COUNT(((vt0.c1)AND(vt0.c0))) UNION ALL SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING (NOT (COUNT(((vt0.c1)AND(vt0.c0))))) UNION ALL SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING ((COUNT(((vt0.c1)AND(vt0.c0)))) ISNULL);
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT * FROM vt2 LEFT OUTER JOIN vt1 ON ((v0.c0 COLLATE RTRIM) IS TRUE) LEFT OUTER JOIN v0 ON (((vt2.c0)) BETWEEN ((((rt0.c2)>=(rt0.c1)))) AND ((TRIM(x'')))) RIGHT OUTER JOIN rt0 ON ((((rt0.c5)GLOB(vt2.c0)))LIKE(CASE WHEN rt0.c1 THEN rt0.c2 END)) LEFT OUTER JOIN vt0 ON '+wQ8}t';
SELECT DISTINCT * FROM vt0, vt1, vt2, v0 INNER JOIN rt0 ON (NOT (((vt1.c1) NOT BETWEEN (v0.c0) AND (NULL))));
SELECT DISTINCT * FROM vt0, vt1, vt2, v0 INNER JOIN rt0 ON (NOT (((vt1.c1) NOT BETWEEN (v0.c0) AND (NULL)))) WHERE (((((NULLIF(rt0.c2, rt0.c3))OR(CHAR(rt0.c4))))OR(((rt0.c5) NOT BETWEEN (rt0.c1) AND (vt0.c1))))) UNION SELECT DISTINCT * FROM vt0, vt1, vt2, v0 INNER JOIN rt0 ON (NOT (((vt1.c1) NOT BETWEEN (v0.c0) AND (NULL)))) WHERE ((NOT (((((NULLIF(rt0.c2, rt0.c3))OR(CHAR(rt0.c4))))OR(((rt0.c5) NOT BETWEEN (rt0.c1) AND (vt0.c1))))))) UNION SELECT DISTINCT * FROM vt0, vt1, vt2, v0 INNER JOIN rt0 ON (NOT (((vt1.c1) NOT BETWEEN (v0.c0) AND (NULL)))) WHERE (((((((NULLIF(rt0.c2, rt0.c3))OR(CHAR(rt0.c4))))OR(((rt0.c5) NOT BETWEEN (rt0.c1) AND (vt0.c1))))) ISNULL));
SELECT DISTINCT * FROM vt0, vt1, vt2, v0 INNER JOIN rt0 ON (NOT (((vt1.c1) NOT BETWEEN (v0.c0) AND (NULL))));
SELECT ALL rt0.c0, vt1.c0, rt0.c2, rt0.c3, rt0.c5, vt1.c1, rt0.c4 FROM rt0, vt2, vt1 GROUP BY rt0.c0, vt1.c0, rt0.c2, rt0.c3, rt0.c5, vt1.c1, rt0.c4;
SELECT rt0.c0, vt1.c0, rt0.c2, rt0.c3, rt0.c5, vt1.c1, rt0.c4 FROM rt0, vt2, vt1 WHERE (((CAST(vt1.c0 AS BLOB))*(((-4.48927774E8)>=(vt1.c1))))) GROUP BY rt0.c0, vt1.c0, rt0.c2, rt0.c3, rt0.c5, vt1.c1, rt0.c4 UNION SELECT ALL rt0.c0, vt1.c0, rt0.c2, rt0.c3, rt0.c5, vt1.c1, rt0.c4 FROM rt0, vt2, vt1 WHERE ((NOT (((CAST(vt1.c0 AS BLOB))*(((-4.48927774E8)>=(vt1.c1))))))) GROUP BY rt0.c0, vt1.c0, rt0.c2, rt0.c3, rt0.c5, vt1.c1, rt0.c4 UNION SELECT ALL rt0.c0, vt1.c0, rt0.c2, rt0.c3, rt0.c5, vt1.c1, rt0.c4 FROM rt0, vt2, vt1 WHERE (((((CAST(vt1.c0 AS BLOB))*(((-4.48927774E8)>=(vt1.c1))))) ISNULL)) GROUP BY rt0.c0, vt1.c0, rt0.c2, rt0.c3, rt0.c5, vt1.c1, rt0.c4;
SELECT ALL rt0.c0, vt1.c0, rt0.c2, rt0.c3, rt0.c5, vt1.c1, rt0.c4 FROM rt0, vt2, vt1 GROUP BY rt0.c0, vt1.c0, rt0.c2, rt0.c3, rt0.c5, vt1.c1, rt0.c4;
SELECT rt0.c5, rt0.c1, rt0.c0, rt0.c4, rt0.c3, v0.c0, rt0.c2 FROM v0, rt0 GROUP BY rt0.c5, rt0.c1, rt0.c0, rt0.c4, rt0.c3, v0.c0, rt0.c2;
SELECT rt0.c5, rt0.c1, rt0.c0, rt0.c4, rt0.c3, v0.c0, rt0.c2 FROM v0 NOT INDEXED, rt0 GROUP BY rt0.c5, rt0.c1, rt0.c0, rt0.c4, rt0.c3, v0.c0, rt0.c2 HAVING ((-111640533)IS NOT(((rt0.c1) BETWEEN (COUNT(AVG(MIN(SUM(MAX(SUM(rt0.c5))))))) AND (GROUP_CONCAT(rt0.c0))))) UNION ALL SELECT rt0.c5, rt0.c1, rt0.c0, rt0.c4, rt0.c3, v0.c0, rt0.c2 FROM v0, rt0 GROUP BY rt0.c5, rt0.c1, rt0.c0, rt0.c4, rt0.c3, v0.c0, rt0.c2 HAVING (NOT (((-111640533)IS NOT(((rt0.c1) BETWEEN (COUNT(AVG(MIN(SUM(MAX(SUM(rt0.c5))))))) AND (GROUP_CONCAT(rt0.c0))))))) UNION ALL SELECT ALL rt0.c5, rt0.c1, rt0.c0, rt0.c4, rt0.c3, v0.c0, rt0.c2 FROM v0, rt0 GROUP BY rt0.c5, rt0.c1, rt0.c0, rt0.c4, rt0.c3, v0.c0, rt0.c2 HAVING ((((-111640533)IS NOT(((rt0.c1) BETWEEN (COUNT(AVG(MIN(SUM(MAX(SUM(rt0.c5))))))) AND (GROUP_CONCAT(rt0.c0)))))) ISNULL);
SELECT ALL * FROM v0, rt0;
SELECT ALL * FROM v0, rt0 WHERE (NULL COLLATE NOCASE) UNION ALL SELECT ALL * FROM v0, rt0 WHERE ((NOT (NULL COLLATE NOCASE))) UNION ALL SELECT * FROM v0, rt0 WHERE (((NULL COLLATE NOCASE) ISNULL));
SELECT ALL * FROM v0, rt0;
SELECT DISTINCT vt1.c0, vt2.c0, vt1.c1 FROM vt2, vt1;
SELECT DISTINCT vt1.c0, vt2.c0, vt1.c1 FROM vt2, vt1 WHERE (CASE (vt2.c0 IN (vt1.c0))  WHEN vt1.c1 COLLATE RTRIM THEN (((vt2.c0)) NOT BETWEEN ((NULL)) AND ((vt1.c0))) WHEN ((vt1.c1) IS FALSE) THEN ((vt2.c0)>(vt1.c1)) WHEN (- (vt2.c0)) THEN ((vt1.c1)%(vt1.c1)) ELSE ((((vt2.c0)AND(vt1.c1)))AND(vt2.c0)) END) UNION SELECT DISTINCT vt1.c0, vt2.c0, vt1.c1 FROM vt2, vt1 WHERE ((NOT (CASE (vt2.c0 IN (vt1.c0))  WHEN vt1.c1 COLLATE RTRIM THEN (((vt2.c0)) NOT BETWEEN ((NULL)) AND ((vt1.c0))) WHEN ((vt1.c1) IS FALSE) THEN ((vt2.c0)>(vt1.c1)) WHEN (- (vt2.c0)) THEN ((vt1.c1)%(vt1.c1)) ELSE ((((vt2.c0)AND(vt1.c1)))AND(vt2.c0)) END))) UNION SELECT DISTINCT vt1.c0, vt2.c0, vt1.c1 FROM vt2, vt1 WHERE (((CASE (vt2.c0 IN (vt1.c0))  WHEN vt1.c1 COLLATE RTRIM THEN (((vt2.c0)) NOT BETWEEN ((NULL)) AND ((vt1.c0))) WHEN ((vt1.c1) IS FALSE) THEN ((vt2.c0)>(vt1.c1)) WHEN (- (vt2.c0)) THEN ((vt1.c1)%(vt1.c1)) ELSE ((((vt2.c0)AND(vt1.c1)))AND(vt2.c0)) END) ISNULL));
SELECT DISTINCT vt1.c0, vt2.c0, vt1.c1 FROM vt2, vt1;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE ((CASE WHEN v0.c0 THEN v0.c0 END IN ())) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT ((CASE WHEN v0.c0 THEN v0.c0 END IN ())))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((((CASE WHEN v0.c0 THEN v0.c0 END IN ())) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT rt0.c0 FROM vt2, vt0, v0, vt1, rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM vt2, vt0, v0, vt1, rt0 GROUP BY rt0.c0 HAVING (TOTAL(rt0.c3) IN ()) UNION ALL SELECT ALL rt0.c0 FROM vt2, vt0, v0, vt1, rt0 GROUP BY rt0.c0 HAVING (NOT ((TOTAL(rt0.c3) IN ()))) UNION ALL SELECT ALL rt0.c0 FROM vt2, vt0, v0, vt1, rt0 GROUP BY rt0.c0 HAVING (((TOTAL(rt0.c3) IN ())) ISNULL);
SELECT rt0.c0 FROM vt2, vt0, v0, vt1, rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM vt2, vt0, v0, vt1, rt0 GROUP BY rt0.c0 HAVING (TOTAL(rt0.c3) IN ()) UNION ALL SELECT ALL rt0.c0 FROM vt2, vt0, v0, vt1, rt0 GROUP BY rt0.c0 HAVING (NOT ((TOTAL(rt0.c3) IN ()))) UNION ALL SELECT ALL rt0.c0 FROM vt2, vt0, v0, vt1, rt0 GROUP BY rt0.c0 HAVING (((TOTAL(rt0.c3) IN ())) ISNULL);
SELECT rt0.c0 FROM vt2, vt0, v0, vt1, rt0 GROUP BY rt0.c0;
SELECT ALL * FROM v0, rt0, vt2, vt0;
SELECT ALL * FROM v0, rt0, vt2, vt0 WHERE ((json_array_length(vt0.c1, rt0.c0) IN ())) UNION ALL SELECT * FROM v0, rt0, vt2, vt0 WHERE ((NOT ((json_array_length(vt0.c1, rt0.c0) IN ())))) UNION ALL SELECT * FROM v0, rt0, vt2, vt0 WHERE ((((json_array_length(vt0.c1, rt0.c0) IN ())) ISNULL));
SELECT ALL * FROM v0, rt0, vt2, vt0;
SELECT DISTINCT vt1.c1, rt0.c2 FROM vt0, rt0 NOT INDEXED, v0, vt2 NATURAL JOIN vt1;
SELECT DISTINCT vt1.c1, rt0.c2 FROM vt0, rt0, v0, vt2 NATURAL JOIN vt1 WHERE ((('797357542')=(vt0.c0)) COLLATE RTRIM) UNION SELECT DISTINCT vt1.c1, rt0.c2 FROM vt0, rt0, v0, vt2 NATURAL JOIN vt1 WHERE ((NOT ((('797357542')==(vt0.c0)) COLLATE RTRIM))) UNION SELECT DISTINCT vt1.c1, rt0.c2 FROM vt0, rt0, v0, vt2 NATURAL JOIN vt1 WHERE ((((('797357542')=(vt0.c0)) COLLATE RTRIM) ISNULL));
SELECT DISTINCT vt1.c1, rt0.c2 FROM vt0, rt0 NOT INDEXED, v0, vt2 NATURAL JOIN vt1;
SELECT ALL vt1.c1, rt0.c0 FROM vt1, rt0, vt2, vt0 GROUP BY vt1.c1, rt0.c0;
SELECT vt1.c1, rt0.c0 FROM vt1, rt0, vt2, vt0 WHERE ((((rt0.c3))>((((vt1.c1) BETWEEN (vt2.c0) AND (vt0.c1)))))) GROUP BY vt1.c1, rt0.c0 UNION SELECT ALL vt1.c1, rt0.c0 FROM vt1, rt0, vt2, vt0 WHERE ((NOT ((((rt0.c3))>((((vt1.c1) BETWEEN (vt2.c0) AND (vt0.c1)))))))) GROUP BY vt1.c1, rt0.c0 UNION SELECT vt1.c1, rt0.c0 FROM vt1, rt0, vt2, vt0 WHERE ((((((rt0.c3))>((((vt1.c1) BETWEEN (vt2.c0) AND (vt0.c1)))))) ISNULL)) GROUP BY vt1.c1, rt0.c0;
SELECT ALL vt1.c1, rt0.c0 FROM vt1, rt0, vt2, vt0 GROUP BY vt1.c1, rt0.c0;
SELECT ALL rt0.c2, rt0.c0, rt0.c5, vt2.c0, vt0.c0, rt0.c3, rt0.c4, vt0.c1, rt0.c1 FROM vt2, vt0, rt0 GROUP BY rt0.c2, rt0.c0, rt0.c5, vt2.c0, vt0.c0, rt0.c3, rt0.c4, vt0.c1, rt0.c1;
SELECT rt0.c2, rt0.c0, rt0.c5, vt2.c0, vt0.c0, rt0.c3, rt0.c4, vt0.c1, rt0.c1 FROM vt2, vt0, rt0 GROUP BY rt0.c2, rt0.c0, rt0.c5, vt2.c0, vt0.c0, rt0.c3, rt0.c4, vt0.c1, rt0.c1 HAVING SUM(GROUP_CONCAT(x'')) UNION ALL SELECT rt0.c2, rt0.c0, rt0.c5, vt2.c0, vt0.c0, rt0.c3, rt0.c4, vt0.c1, rt0.c1 FROM vt2, vt0, rt0 GROUP BY rt0.c2, rt0.c0, rt0.c5, vt2.c0, vt0.c0, rt0.c3, rt0.c4, vt0.c1, rt0.c1 HAVING (NOT (SUM(GROUP_CONCAT(x'')))) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c5, vt2.c0, vt0.c0, rt0.c3, rt0.c4, vt0.c1, rt0.c1 FROM vt2, vt0, rt0 GROUP BY rt0.c2, rt0.c0, rt0.c5, vt2.c0, vt0.c0, rt0.c3, rt0.c4, vt0.c1, rt0.c1 HAVING ((SUM(GROUP_CONCAT(x''))) ISNULL);
SELECT * FROM vt0;
SELECT * FROM vt0 WHERE (((vt0.c0 IN ()) IN ())) UNION ALL SELECT * FROM vt0 WHERE ((NOT (((vt0.c0 IN ()) IN ())))) UNION ALL SELECT ALL * FROM vt0 WHERE (((((vt0.c0 IN ()) IN ())) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT * FROM vt1, v0;
SELECT DISTINCT * FROM vt1, v0 WHERE (CASE CASE WHEN vt1.c0 THEN vt1.c0 END  WHEN v0.c0 COLLATE RTRIM THEN ((v0.c0)>>(vt1.c0)) ELSE ((v0.c0) BETWEEN (vt1.c1) AND (vt1.c1)) END) UNION SELECT DISTINCT * FROM vt1, v0 WHERE ((NOT (CASE CASE WHEN vt1.c0 THEN vt1.c0 END  WHEN v0.c0 COLLATE RTRIM THEN ((v0.c0)>>(vt1.c0)) ELSE ((v0.c0) BETWEEN (vt1.c1) AND (vt1.c1)) END))) UNION SELECT DISTINCT * FROM vt1, v0 WHERE (((CASE CASE WHEN vt1.c0 THEN vt1.c0 END  WHEN v0.c0 COLLATE RTRIM THEN ((v0.c0)>>(vt1.c0)) ELSE ((v0.c0) BETWEEN (vt1.c1) AND (vt1.c1)) END) ISNULL));
SELECT DISTINCT * FROM vt1, v0;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt0 WHERE (TRIM(CAST(0xffffffffd8faf970 AS TEXT), (vt0.c0 IN ()))) GROUP BY vt0.c1 UNION SELECT vt0.c1 FROM vt0 WHERE ((NOT (TRIM(CAST(0xffffffffd8faf970 AS TEXT), (vt0.c0 IN ()))))) GROUP BY vt0.c1 UNION SELECT ALL vt0.c1 FROM vt0 WHERE (((TRIM(CAST(0Xffffffffd8faf970 AS TEXT), (vt0.c0 IN ()))) ISNULL)) GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT ALL vt0.c0 FROM vt2, vt1 INNER JOIN v0 ON ((CASE WHEN vt2.c0 THEN vt0.c0 END) NOT BETWEEN (((((((((vt0.c1)AND(vt2.c0)))AND(vt0.c1)))OR(vt1.c0)))OR(vt0.c1))) AND (CAST(vt0.c0 AS NUMERIC))) FULL OUTER JOIN vt0 ON ((CAST(vt0.c0 AS BLOB))IS((+ (vt1.c1)))) GROUP BY vt0.c0;
SELECT v0.c0 FROM v0;
SELECT ALL v0.c0 FROM v0 WHERE (((v0.c0)+(NULL))) UNION ALL SELECT v0.c0 FROM v0 WHERE ((NOT (((v0.c0)+(NULL))))) UNION ALL SELECT v0.c0 FROM v0 WHERE (((((v0.c0)+(NULL))) ISNULL));
SELECT v0.c0 FROM v0;
SELECT DISTINCT rt0.c2, vt0.c1 FROM rt0, vt0 CROSS JOIN vt2 ON (((+ (rt0.c0))) NOT BETWEEN ((((rt0.c3, rt0.c0, rt0.c3))<>((rt0.c0, rt0.c0, rt0.c3)))) AND (((rt0.c1)<=(0.4934956300543447))));
SELECT DISTINCT rt0.c2, vt0.c1 FROM rt0, vt0 CROSS JOIN vt2 ON (((+ (rt0.c0))) NOT BETWEEN ((((rt0.c3, rt0.c0, rt0.c3))<>((rt0.c0, rt0.c0, rt0.c3)))) AND (((rt0.c1)<=(0.4934956300543447)))) WHERE (-1754901978) UNION SELECT DISTINCT rt0.c2, vt0.c1 FROM rt0, vt0 CROSS JOIN vt2 ON (((+ (rt0.c0))) NOT BETWEEN ((((rt0.c3, rt0.c0, rt0.c3))<>((rt0.c0, rt0.c0, rt0.c3)))) AND (((rt0.c1)<=(0.4934956300543447)))) WHERE ((NOT (-1754901978))) UNION SELECT DISTINCT rt0.c2, vt0.c1 FROM rt0, vt0 CROSS JOIN vt2 ON (((+ (rt0.c0))) NOT BETWEEN ((((rt0.c3, rt0.c0, rt0.c3))!=((rt0.c0, rt0.c0, rt0.c3)))) AND (((rt0.c1)<=(0.4934956300543447)))) WHERE (((-1754901978) ISNULL));
SELECT DISTINCT rt0.c2, vt0.c1 FROM rt0, vt0 CROSS JOIN vt2 ON (((+ (rt0.c0))) NOT BETWEEN ((((rt0.c3, rt0.c0, rt0.c3))<>((rt0.c0, rt0.c0, rt0.c3)))) AND (((rt0.c1)<=(0.4934956300543447))));
SELECT rt0.c2, vt1.c1, v0.c0 FROM rt0, v0, vt1 GROUP BY rt0.c2, vt1.c1, v0.c0;
SELECT ALL rt0.c2, vt1.c1, v0.c0 FROM rt0, v0, vt1 WHERE ((((rt0.c1)) BETWEEN ((CAST(rt0.c2 AS BLOB))) AND ((NULL)))) GROUP BY rt0.c2, vt1.c1, v0.c0 UNION SELECT rt0.c2, vt1.c1, v0.c0 FROM rt0, v0, vt1 WHERE ((NOT ((((rt0.c1)) BETWEEN ((CAST(rt0.c2 AS BLOB))) AND ((NULL)))))) GROUP BY rt0.c2, vt1.c1, v0.c0 UNION SELECT ALL rt0.c2, vt1.c1, v0.c0 FROM rt0, v0, vt1 WHERE ((((((rt0.c1)) BETWEEN ((CAST(rt0.c2 AS BLOB))) AND ((NULL)))) ISNULL)) GROUP BY rt0.c2, vt1.c1, v0.c0;
SELECT rt0.c2, vt1.c1, v0.c0 FROM rt0, v0, vt1 GROUP BY rt0.c2, vt1.c1, v0.c0;
SELECT ALL vt0.c1, v0.c0, vt2.c0, vt0.c0 FROM vt0, vt2 RIGHT OUTER JOIN v0 ON ((((((((vt0.c1)OR(vt2.c0)))OR(v0.c0)))OR(vt0.c1)))AND(vt0.c0)) COLLATE BINARY GROUP BY vt0.c1, v0.c0, vt2.c0, vt0.c0;
SELECT vt0.c1, v0.c0, vt2.c0, vt0.c0 FROM vt0, vt2 RIGHT OUTER JOIN v0 ON ((((((((vt0.c1)OR(vt2.c0)))OR(v0.c0)))OR(vt0.c1)))AND(vt0.c0)) COLLATE BINARY GROUP BY vt0.c1, v0.c0, vt2.c0, vt0.c0 HAVING (~ (GROUP_CONCAT(vt0.c0))) UNION ALL SELECT ALL vt0.c1, v0.c0, vt2.c0, vt0.c0 FROM vt0, vt2 RIGHT OUTER JOIN v0 ON ((((((((vt0.c1)OR(vt2.c0)))OR(v0.c0)))OR(vt0.c1)))AND(vt0.c0)) COLLATE BINARY GROUP BY vt0.c1, v0.c0, vt2.c0, vt0.c0 HAVING (NOT ((~ (GROUP_CONCAT(vt0.c0))))) UNION ALL SELECT ALL vt0.c1, v0.c0, vt2.c0, vt0.c0 FROM vt0, vt2 RIGHT OUTER JOIN v0 ON ((((((((vt0.c1)OR(vt2.c0)))OR(v0.c0)))OR(vt0.c1)))AND(vt0.c0)) COLLATE BINARY GROUP BY vt0.c1, v0.c0, vt2.c0, vt0.c0 HAVING (((~ (GROUP_CONCAT(vt0.c0)))) ISNULL);
SELECT ALL vt0.c1, v0.c0, vt2.c0, vt0.c0 FROM vt0, vt2 RIGHT OUTER JOIN v0 ON ((((((((vt0.c1)OR(vt2.c0)))OR(v0.c0)))OR(vt0.c1)))AND(vt0.c0)) COLLATE BINARY GROUP BY vt0.c1, v0.c0, vt2.c0, vt0.c0;
SELECT vt0.c1, v0.c0, vt2.c0, vt0.c0 FROM vt0, vt2 RIGHT OUTER JOIN v0 ON ((((((((vt0.c1)OR(vt2.c0)))OR(v0.c0)))OR(vt0.c1)))AND(vt0.c0)) COLLATE BINARY GROUP BY vt0.c1, v0.c0, vt2.c0, vt0.c0 HAVING (~ (GROUP_CONCAT(vt0.c0))) UNION ALL SELECT ALL vt0.c1, v0.c0, vt2.c0, vt0.c0 FROM vt0, vt2 RIGHT OUTER JOIN v0 ON ((((((((vt0.c1)OR(vt2.c0)))OR(v0.c0)))OR(vt0.c1)))AND(vt0.c0)) COLLATE BINARY GROUP BY vt0.c1, v0.c0, vt2.c0, vt0.c0 HAVING (NOT ((~ (GROUP_CONCAT(vt0.c0))))) UNION ALL SELECT ALL vt0.c1, v0.c0, vt2.c0, vt0.c0 FROM vt0, vt2 RIGHT OUTER JOIN v0 ON ((((((((vt0.c1)OR(vt2.c0)))OR(v0.c0)))OR(vt0.c1)))AND(vt0.c0)) COLLATE BINARY GROUP BY vt0.c1, v0.c0, vt2.c0, vt0.c0 HAVING (((~ (GROUP_CONCAT(vt0.c0)))) ISNULL);
SELECT ALL vt0.c1, v0.c0, vt2.c0, vt0.c0 FROM vt0, vt2 RIGHT OUTER JOIN v0 ON ((((((((vt0.c1)OR(vt2.c0)))OR(v0.c0)))OR(vt0.c1)))AND(vt0.c0)) COLLATE BINARY GROUP BY vt0.c1, v0.c0, vt2.c0, vt0.c0;
SELECT vt1.c1, vt1.c0 FROM vt1;
SELECT vt1.c1, vt1.c0 FROM vt1 WHERE (((vt1.c0)>(vt1.c0)) COLLATE RTRIM) UNION ALL SELECT vt1.c1, vt1.c0 FROM vt1 WHERE ((NOT (((vt1.c0)>(vt1.c0)) COLLATE RTRIM))) UNION ALL SELECT ALL vt1.c1, vt1.c0 FROM vt1 WHERE (((((vt1.c0)>(vt1.c0)) COLLATE RTRIM) ISNULL));
SELECT vt1.c1, vt1.c0 FROM vt1;
SELECT DISTINCT rt0.c2, rt0.c3, vt2.c0, rt0.c4, rt0.c1, rt0.c0 FROM rt0, vt2;
SELECT DISTINCT rt0.c2, rt0.c3, vt2.c0, rt0.c4, rt0.c1, rt0.c0 FROM rt0, vt2 WHERE (((((rt0.c3 IN ())))<=((((rt0.c0) NOTNULL))))) UNION SELECT DISTINCT rt0.c2, rt0.c3, vt2.c0, rt0.c4, rt0.c1, rt0.c0 FROM rt0, vt2 WHERE ((NOT (((((rt0.c3 IN ())))<=((((rt0.c0) NOTNULL))))))) UNION SELECT DISTINCT rt0.c2, rt0.c3, vt2.c0, rt0.c4, rt0.c1, rt0.c0 FROM rt0, vt2 WHERE (((((((rt0.c3 IN ())))<=((((rt0.c0) NOTNULL))))) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c3, vt2.c0, rt0.c4, rt0.c1, rt0.c0 FROM rt0, vt2;
SELECT ALL vt0.c0, rt0.c2, rt0.c0, rt0.c1, rt0.c4, vt0.c1, rt0.c3, rt0.c5 FROM vt0, rt0 GROUP BY vt0.c0, rt0.c2, rt0.c0, rt0.c1, rt0.c4, vt0.c1, rt0.c3, rt0.c5;
SELECT ALL vt0.c0, rt0.c2, rt0.c0, rt0.c1, rt0.c4, vt0.c1, rt0.c3, rt0.c5 FROM vt0, rt0 WHERE ((((rt0.c2 COLLATE NOCASE, NULL, ((rt0.c3) NOT BETWEEN (rt0.c5) AND (rt0.c2))))>=((rt0.c3 COLLATE NOCASE, rt0.c3, (vt0.c1 IN (vt0.c1, rt0.c0)))))) GROUP BY vt0.c0, rt0.c2, rt0.c0, rt0.c1, rt0.c4, vt0.c1, rt0.c3, rt0.c5 UNION SELECT ALL vt0.c0, rt0.c2, rt0.c0, rt0.c1, rt0.c4, vt0.c1, rt0.c3, rt0.c5 FROM vt0, rt0 WHERE ((NOT ((((rt0.c2 COLLATE NOCASE, NULL, ((rt0.c3) NOT BETWEEN (rt0.c5) AND (rt0.c2))))>=((rt0.c3 COLLATE NOCASE, rt0.c3, (vt0.c1 IN (vt0.c1, rt0.c0)))))))) GROUP BY vt0.c0, rt0.c2, rt0.c0, rt0.c1, rt0.c4, vt0.c1, rt0.c3, rt0.c5 UNION SELECT ALL vt0.c0, rt0.c2, rt0.c0, rt0.c1, rt0.c4, vt0.c1, rt0.c3, rt0.c5 FROM vt0, rt0 WHERE ((((((rt0.c2 COLLATE NOCASE, NULL, ((rt0.c3) NOT BETWEEN (rt0.c5) AND (rt0.c2))))>=((rt0.c3 COLLATE NOCASE, rt0.c3, (vt0.c1 IN (vt0.c1, rt0.c0)))))) ISNULL)) GROUP BY vt0.c0, rt0.c2, rt0.c0, rt0.c1, rt0.c4, vt0.c1, rt0.c3, rt0.c5;
SELECT ALL vt0.c0, rt0.c2, rt0.c0, rt0.c1, rt0.c4, vt0.c1, rt0.c3, rt0.c5 FROM vt0, rt0 GROUP BY vt0.c0, rt0.c2, rt0.c0, rt0.c1, rt0.c4, vt0.c1, rt0.c3, rt0.c5;
SELECT ALL rt0.c0, vt2.c0, rt0.c5 FROM vt2, rt0 GROUP BY rt0.c0, vt2.c0, rt0.c5;
SELECT ALL rt0.c0, vt2.c0, rt0.c5 FROM vt2, rt0 GROUP BY rt0.c0, vt2.c0, rt0.c5 HAVING NULL UNION ALL SELECT rt0.c0, vt2.c0, rt0.c5 FROM vt2, rt0 GROUP BY rt0.c0, vt2.c0, rt0.c5 HAVING (NOT (NULL)) UNION ALL SELECT ALL rt0.c0, vt2.c0, rt0.c5 FROM vt2, rt0 GROUP BY rt0.c0, vt2.c0, rt0.c5 HAVING ((NULL) ISNULL);
SELECT ALL rt0.c0, vt2.c0, rt0.c5 FROM vt2, rt0 GROUP BY rt0.c0, vt2.c0, rt0.c5;
SELECT ALL rt0.c0, vt2.c0, rt0.c5 FROM vt2, rt0 GROUP BY rt0.c0, vt2.c0, rt0.c5 HAVING NULL UNION ALL SELECT rt0.c0, vt2.c0, rt0.c5 FROM vt2, rt0 GROUP BY rt0.c0, vt2.c0, rt0.c5 HAVING (NOT (NULL)) UNION ALL SELECT ALL rt0.c0, vt2.c0, rt0.c5 FROM vt2, rt0 GROUP BY rt0.c0, vt2.c0, rt0.c5 HAVING ((NULL) ISNULL);
SELECT ALL rt0.c0, vt2.c0, rt0.c5 FROM vt2, rt0 GROUP BY rt0.c0, vt2.c0, rt0.c5;
SELECT ALL * FROM vt0, rt0, v0 INNER JOIN vt2 ON CAST(((rt0.c1)<=(rt0.c4)) AS REAL);
SELECT ALL * FROM vt0, rt0, v0 INNER JOIN vt2 ON CAST(((rt0.c1)<=(rt0.c4)) AS REAL) WHERE ((((- (rt0.c3))) IS FALSE)) UNION ALL SELECT ALL * FROM vt0, rt0, v0 INNER JOIN vt2 ON CAST(((rt0.c1)<=(rt0.c4)) AS REAL) WHERE ((NOT ((((- (rt0.c3))) IS FALSE)))) UNION ALL SELECT ALL * FROM vt0, rt0, v0 INNER JOIN vt2 ON CAST(((rt0.c1)<=(rt0.c4)) AS REAL) WHERE ((((((- (rt0.c3))) IS FALSE)) ISNULL));
SELECT ALL * FROM vt0, rt0, v0 INNER JOIN vt2 ON CAST(((rt0.c1)<=(rt0.c4)) AS REAL);
SELECT DISTINCT * FROM v0, rt0 FULL OUTER JOIN vt0 ON CAST(vt0.c1 COLLATE NOCASE AS BLOB) CROSS JOIN vt1 ON ((CASE NULL  WHEN rt0.c0 THEN vt0.c1 WHEN rt0.c2 THEN rt0.c3 WHEN vt0.c1 THEN rt0.c2 ELSE rt0.c4 END) BETWEEN (vt1.c0 COLLATE RTRIM) AND ((~ (vt0.c1)))) RIGHT OUTER JOIN vt2 ON CAST(TRIM(0.951996610115097, rt0.c2) AS BLOB);
SELECT DISTINCT * FROM v0, rt0 FULL OUTER JOIN vt0 ON CAST(vt0.c1 COLLATE NOCASE AS BLOB) CROSS JOIN vt1 ON ((CASE NULL  WHEN rt0.c0 THEN vt0.c1 WHEN rt0.c2 THEN rt0.c3 WHEN vt0.c1 THEN rt0.c2 ELSE rt0.c4 END) BETWEEN (vt1.c0 COLLATE RTRIM) AND ((~ (vt0.c1)))) RIGHT OUTER JOIN vt2 ON CAST(TRIM(0.951996610115097, rt0.c2) AS BLOB) WHERE ((+ ((((vt0.c0)) BETWEEN ((rt0.c5)) AND ((rt0.c1)))))) UNION SELECT DISTINCT * FROM v0, rt0 FULL OUTER JOIN vt0 ON CAST(vt0.c1 COLLATE NOCASE AS BLOB) CROSS JOIN vt1 ON ((CASE NULL  WHEN rt0.c0 THEN vt0.c1 WHEN rt0.c2 THEN rt0.c3 WHEN vt0.c1 THEN rt0.c2 ELSE rt0.c4 END) BETWEEN (vt1.c0 COLLATE RTRIM) AND ((~ (vt0.c1)))) RIGHT OUTER JOIN vt2 ON CAST(TRIM(0.951996610115097, rt0.c2) AS BLOB) WHERE ((NOT ((+ ((((vt0.c0)) BETWEEN ((rt0.c5)) AND ((rt0.c1)))))))) UNION SELECT DISTINCT * FROM v0, rt0 FULL OUTER JOIN vt0 ON CAST(vt0.c1 COLLATE NOCASE AS BLOB) CROSS JOIN vt1 ON ((CASE NULL  WHEN rt0.c0 THEN vt0.c1 WHEN rt0.c2 THEN rt0.c3 WHEN vt0.c1 THEN rt0.c2 ELSE rt0.c4 END) BETWEEN (vt1.c0 COLLATE RTRIM) AND ((~ (vt0.c1)))) RIGHT OUTER JOIN vt2 ON CAST(TRIM(0.951996610115097, rt0.c2) AS BLOB) WHERE ((((+ ((((vt0.c0)) BETWEEN ((rt0.c5)) AND ((rt0.c1)))))) ISNULL));
SELECT DISTINCT * FROM v0, rt0 FULL OUTER JOIN vt0 ON CAST(vt0.c1 COLLATE NOCASE AS BLOB) CROSS JOIN vt1 ON ((CASE NULL  WHEN rt0.c0 THEN vt0.c1 WHEN rt0.c2 THEN rt0.c3 WHEN vt0.c1 THEN rt0.c2 ELSE rt0.c4 END) BETWEEN (vt1.c0 COLLATE RTRIM) AND ((~ (vt0.c1)))) RIGHT OUTER JOIN vt2 ON CAST(TRIM(0.951996610115097, rt0.c2) AS BLOB);
SELECT ALL vt0.c0 FROM vt0, v0, vt2, rt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0, v0, vt2, rt0 WHERE (CAST(vt2.c0 AS NUMERIC) COLLATE RTRIM) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0, v0, vt2, rt0 WHERE ((NOT (CAST(vt2.c0 AS NUMERIC) COLLATE RTRIM))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0, v0, vt2, rt0 WHERE (((CAST(vt2.c0 AS NUMERIC) COLLATE RTRIM) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, v0, vt2, rt0 GROUP BY vt0.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING COUNT(GROUP_CONCAT(vt1.c0)) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (COUNT(GROUP_CONCAT(vt1.c0)))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((COUNT(GROUP_CONCAT(vt1.c0))) ISNULL);
SELECT v0.c0, vt2.c0, vt0.c0 FROM v0, vt0, vt2;
SELECT ALL v0.c0, vt2.c0, vt0.c0 FROM v0, vt0, vt2 WHERE (((((((vt0.c0) IS FALSE))AND(((vt0.c1)-(v0.c0)))))AND((vt0.c0 IN ())))) UNION ALL SELECT ALL v0.c0, vt2.c0, vt0.c0 FROM v0, vt0, vt2 WHERE ((NOT (((((((vt0.c0) IS FALSE))AND(((vt0.c1)-(v0.c0)))))AND((vt0.c0 IN ())))))) UNION ALL SELECT ALL v0.c0, vt2.c0, vt0.c0 FROM v0, vt0, vt2 WHERE (((((((((vt0.c0) IS FALSE))AND(((vt0.c1)-(v0.c0)))))AND((vt0.c0 IN ())))) ISNULL));
SELECT v0.c0, vt2.c0, vt0.c0 FROM v0, vt0, vt2;
SELECT DISTINCT vt1.c1 FROM vt0, vt2, vt1;
SELECT DISTINCT vt1.c1 FROM vt0, vt2, vt1 WHERE (((((vt0.c1)AND(vt1.c0))) NOT NULL)) UNION SELECT DISTINCT vt1.c1 FROM vt0, vt2, vt1 WHERE ((NOT (((((vt0.c1)AND(vt1.c0))) NOT NULL)))) UNION SELECT DISTINCT vt1.c1 FROM vt0, vt2, vt1 WHERE (((((((vt0.c1)AND(vt1.c0))) NOT NULL)) ISNULL));
SELECT DISTINCT vt1.c1 FROM vt0, vt2, vt1;
SELECT ALL rt0.c5, vt0.c1, vt2.c0, rt0.c2, vt0.c0, v0.c0, vt1.c1 FROM v0, rt0, vt2 CROSS JOIN vt1 ON (((vt0.c1)) BETWEEN ((TYPEOF(rt0.c3))) AND ((CASE rt0.c1  WHEN rt0.c3 THEN rt0.c5 END))) CROSS JOIN vt0 ON ((((rt0.c3)AND('')))AND(rt0.c1)) COLLATE RTRIM GROUP BY rt0.c5, vt0.c1, vt2.c0, rt0.c2, vt0.c0, v0.c0, vt1.c1;
SELECT ALL rt0.c5, vt0.c1, vt2.c0, rt0.c2, vt0.c0, v0.c0, vt1.c1 FROM v0, rt0, vt2 CROSS JOIN vt1 ON (((vt0.c1)) BETWEEN ((TYPEOF(rt0.c3))) AND ((CASE rt0.c1  WHEN rt0.c3 THEN rt0.c5 END))) CROSS JOIN vt0 ON ((((rt0.c3)AND('')))AND(rt0.c1)) COLLATE RTRIM WHERE (CAST(((vt1.c1) NOTNULL) AS BLOB)) GROUP BY rt0.c5, vt0.c1, vt2.c0, rt0.c2, vt0.c0, v0.c0, vt1.c1 UNION SELECT rt0.c5, vt0.c1, vt2.c0, rt0.c2, vt0.c0, v0.c0, vt1.c1 FROM v0, rt0, vt2 CROSS JOIN vt1 ON (((vt0.c1)) BETWEEN ((TYPEOF(rt0.c3))) AND ((CASE rt0.c1  WHEN rt0.c3 THEN rt0.c5 END))) CROSS JOIN vt0 ON ((((rt0.c3)AND('')))AND(rt0.c1)) COLLATE RTRIM WHERE ((NOT (CAST(((vt1.c1) NOTNULL) AS BLOB)))) GROUP BY rt0.c5, vt0.c1, vt2.c0, rt0.c2, vt0.c0, v0.c0, vt1.c1 UNION SELECT ALL rt0.c5, vt0.c1, vt2.c0, rt0.c2, vt0.c0, v0.c0, vt1.c1 FROM v0, rt0, vt2 CROSS JOIN vt1 ON (((vt0.c1)) BETWEEN ((TYPEOF(rt0.c3))) AND ((CASE rt0.c1  WHEN rt0.c3 THEN rt0.c5 END))) CROSS JOIN vt0 ON ((((rt0.c3)AND('')))AND(rt0.c1)) COLLATE RTRIM WHERE (((CAST(((vt1.c1) NOTNULL) AS BLOB)) ISNULL)) GROUP BY rt0.c5, vt0.c1, vt2.c0, rt0.c2, vt0.c0, v0.c0, vt1.c1;
SELECT ALL rt0.c5, vt0.c1, vt2.c0, rt0.c2, vt0.c0, v0.c0, vt1.c1 FROM v0, rt0, vt2 CROSS JOIN vt1 ON (((vt0.c1)) BETWEEN ((TYPEOF(rt0.c3))) AND ((CASE rt0.c1  WHEN rt0.c3 THEN rt0.c5 END))) CROSS JOIN vt0 ON ((((rt0.c3)AND('')))AND(rt0.c1)) COLLATE RTRIM GROUP BY rt0.c5, vt0.c1, vt2.c0, rt0.c2, vt0.c0, v0.c0, vt1.c1;
SELECT ALL rt0.c0, rt0.c1, rt0.c4, rt0.c2, rt0.c3 FROM vt0, rt0, vt2 GROUP BY rt0.c0, rt0.c1, rt0.c4, rt0.c2, rt0.c3;
SELECT rt0.c0, rt0.c1, rt0.c4, rt0.c2, rt0.c3 FROM vt0, rt0, vt2 GROUP BY rt0.c0, rt0.c1, rt0.c4, rt0.c2, rt0.c3 HAVING MIN((- (SUM(AVG(rt0.c3))))) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c4, rt0.c2, rt0.c3 FROM vt0, rt0, vt2 GROUP BY rt0.c0, rt0.c1, rt0.c4, rt0.c2, rt0.c3 HAVING (NOT (MIN((- (SUM(AVG(rt0.c3))))))) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c4, rt0.c2, rt0.c3 FROM vt0, rt0 NOT INDEXED, vt2 GROUP BY rt0.c0, rt0.c1, rt0.c4, rt0.c2, rt0.c3 HAVING ((MIN((- (SUM(AVG(rt0.c3)))))) ISNULL);
SELECT ALL * FROM rt0, vt1, vt0, vt2;
SELECT ALL * FROM rt0, vt1, vt0, vt2 WHERE ((((((rt0.c4))>((vt0.c0)))) NOTNULL)) UNION ALL SELECT ALL * FROM rt0, vt1, vt0, vt2 WHERE ((NOT ((((((rt0.c4))>((vt0.c0)))) NOTNULL)))) UNION ALL SELECT * FROM rt0, vt1, vt0, vt2 WHERE ((((((((rt0.c4))>((vt0.c0)))) NOTNULL)) ISNULL));
SELECT ALL * FROM rt0, vt1, vt0, vt2;
SELECT DISTINCT * FROM v0, rt0, vt1;
SELECT DISTINCT * FROM v0, rt0, vt1 WHERE (rt0.c4 COLLATE NOCASE) UNION SELECT DISTINCT * FROM v0, rt0, vt1 WHERE ((NOT (rt0.c4 COLLATE NOCASE))) UNION SELECT DISTINCT * FROM v0, rt0, vt1 WHERE (((rt0.c4 COLLATE NOCASE) ISNULL));
SELECT DISTINCT * FROM v0, rt0, vt1;
SELECT vt1.c1, rt0.c3 FROM rt0, vt2 NATURAL JOIN vt1 GROUP BY vt1.c1, rt0.c3;
SELECT ALL vt1.c1, rt0.c3 FROM rt0, vt2 NATURAL JOIN vt1 WHERE (((rt0.c1 IN ()) IN ())) GROUP BY vt1.c1, rt0.c3 UNION SELECT ALL vt1.c1, rt0.c3 FROM rt0, vt2 NATURAL JOIN vt1 WHERE ((NOT (((rt0.c1 IN ()) IN ())))) GROUP BY vt1.c1, rt0.c3 UNION SELECT vt1.c1, rt0.c3 FROM rt0, vt2 NATURAL JOIN vt1 WHERE (((((rt0.c1 IN ()) IN ())) ISNULL)) GROUP BY vt1.c1, rt0.c3;
SELECT vt1.c1, rt0.c3 FROM rt0, vt2 NATURAL JOIN vt1 GROUP BY vt1.c1, rt0.c3;
SELECT ALL vt0.c1, vt1.c0, vt1.c1 FROM vt0, vt2, vt1 GROUP BY vt0.c1, vt1.c0, vt1.c1;
SELECT vt0.c1, vt1.c0, vt1.c1 FROM vt0, vt2, vt1 GROUP BY vt0.c1, vt1.c0, vt1.c1 HAVING COUNT(*) UNION ALL SELECT vt0.c1, vt1.c0, vt1.c1 FROM vt0, vt2, vt1 GROUP BY vt0.c1, vt1.c0, vt1.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt0.c1, vt1.c0, vt1.c1 FROM vt0, vt2, vt1 GROUP BY vt0.c1, vt1.c0, vt1.c1 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt0.c1, vt1.c0, vt1.c1 FROM vt0, vt2, vt1 GROUP BY vt0.c1, vt1.c0, vt1.c1;
SELECT vt0.c1, vt1.c0, vt1.c1 FROM vt0, vt2, vt1 GROUP BY vt0.c1, vt1.c0, vt1.c1 HAVING COUNT(*) UNION ALL SELECT vt0.c1, vt1.c0, vt1.c1 FROM vt0, vt2, vt1 GROUP BY vt0.c1, vt1.c0, vt1.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt0.c1, vt1.c0, vt1.c1 FROM vt0, vt2, vt1 GROUP BY vt0.c1, vt1.c0, vt1.c1 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt0.c1, vt1.c0, vt1.c1 FROM vt0, vt2, vt1 GROUP BY vt0.c1, vt1.c0, vt1.c1;
SELECT ALL * FROM v0 INNER JOIN vt0 ON (- (CAST(rt0.c0 AS INTEGER))) CROSS JOIN rt0 ON ((CASE WHEN rt0.c1 THEN rt0.c5 WHEN vt0.c1 THEN vt0.c1 WHEN rt0.c5 THEN v0.c0 ELSE vt0.c0 END) NOT BETWEEN (CASE rt0.c4  WHEN rt0.c1 THEN vt0.c1 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c5 THEN v0.c0 END) AND (((0.07171432644631737)<(rt0.c3))));
SELECT * FROM v0 INNER JOIN vt0 ON (- (CAST(rt0.c0 AS INTEGER))) CROSS JOIN rt0 ON ((CASE WHEN rt0.c1 THEN rt0.c5 WHEN vt0.c1 THEN vt0.c1 WHEN rt0.c5 THEN v0.c0 ELSE vt0.c0 END) NOT BETWEEN (CASE rt0.c4  WHEN rt0.c1 THEN vt0.c1 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c5 THEN v0.c0 END) AND (((0.07171432644631737)<(rt0.c3)))) WHERE ((((rt0.c5 IN ()))-((((vt0.c0))==((vt0.c1)))))) UNION ALL SELECT * FROM v0 INNER JOIN vt0 ON (- (CAST(rt0.c0 AS INTEGER))) CROSS JOIN rt0 ON ((CASE WHEN rt0.c1 THEN rt0.c5 WHEN vt0.c1 THEN vt0.c1 WHEN rt0.c5 THEN v0.c0 ELSE vt0.c0 END) NOT BETWEEN (CASE rt0.c4  WHEN rt0.c1 THEN vt0.c1 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c5 THEN v0.c0 END) AND (((0.07171432644631737)<(rt0.c3)))) WHERE ((NOT ((((rt0.c5 IN ()))-((((vt0.c0))=((vt0.c1)))))))) UNION ALL SELECT * FROM v0 INNER JOIN vt0 ON (- (CAST(rt0.c0 AS INTEGER))) CROSS JOIN rt0 ON ((CASE WHEN rt0.c1 THEN rt0.c5 WHEN vt0.c1 THEN vt0.c1 WHEN rt0.c5 THEN v0.c0 ELSE vt0.c0 END) NOT BETWEEN (CASE rt0.c4  WHEN rt0.c1 THEN vt0.c1 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c5 THEN v0.c0 END) AND (((0.07171432644631737)<(rt0.c3)))) WHERE ((((((rt0.c5 IN ()))-((((vt0.c0))=((vt0.c1)))))) ISNULL));
SELECT ALL * FROM v0 INNER JOIN vt0 ON (- (CAST(rt0.c0 AS INTEGER))) CROSS JOIN rt0 ON ((CASE WHEN rt0.c1 THEN rt0.c5 WHEN vt0.c1 THEN vt0.c1 WHEN rt0.c5 THEN v0.c0 ELSE vt0.c0 END) NOT BETWEEN (CASE rt0.c4  WHEN rt0.c1 THEN vt0.c1 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c5 THEN v0.c0 END) AND (((0.07171432644631737)<(rt0.c3))));
SELECT DISTINCT * FROM vt2, rt0;
SELECT DISTINCT * FROM vt2, rt0 WHERE (((((vt2.c0)||(rt0.c5))) NOT BETWEEN ((NOT (rt0.c5))) AND (vt2.c0 COLLATE NOCASE))) UNION SELECT DISTINCT * FROM vt2, rt0 WHERE ((NOT (((((vt2.c0)||(rt0.c5))) NOT BETWEEN ((NOT (rt0.c5))) AND (vt2.c0 COLLATE NOCASE))))) UNION SELECT DISTINCT * FROM vt2, rt0 WHERE (((((((vt2.c0)||(rt0.c5))) NOT BETWEEN ((NOT (rt0.c5))) AND (vt2.c0 COLLATE NOCASE))) ISNULL));
SELECT DISTINCT * FROM vt2, rt0;
SELECT ALL rt0.c5, rt0.c0, rt0.c2, rt0.c3 FROM vt1 FULL OUTER JOIN rt0 ON ((CASE rt0.c1  WHEN rt0.c3 THEN rt0.c4 WHEN vt1.c1 THEN 0.8354667184055868 WHEN rt0.c5 THEN vt1.c1 ELSE rt0.c1 END)==(vt1.c0)) GROUP BY rt0.c5, rt0.c0, rt0.c2, rt0.c3;
SELECT ALL rt0.c5, rt0.c0, rt0.c2, rt0.c3 FROM vt1 FULL OUTER JOIN rt0 ON ((CASE rt0.c1  WHEN rt0.c3 THEN rt0.c4 WHEN vt1.c1 THEN 0.8354667184055868 WHEN rt0.c5 THEN vt1.c1 ELSE rt0.c1 END)==(vt1.c0)) WHERE ((CASE rt0.c5  WHEN rt0.c4 THEN rt0.c4 ELSE rt0.c5 END IN ())) GROUP BY rt0.c5, rt0.c0, rt0.c2, rt0.c3 UNION SELECT rt0.c5, rt0.c0, rt0.c2, rt0.c3 FROM vt1 FULL OUTER JOIN rt0 ON ((CASE rt0.c1  WHEN rt0.c3 THEN rt0.c4 WHEN vt1.c1 THEN 0.8354667184055868 WHEN rt0.c5 THEN vt1.c1 ELSE rt0.c1 END)==(vt1.c0)) WHERE ((NOT ((CASE rt0.c5  WHEN rt0.c4 THEN rt0.c4 ELSE rt0.c5 END IN ())))) GROUP BY rt0.c5, rt0.c0, rt0.c2, rt0.c3 UNION SELECT ALL rt0.c5, rt0.c0, rt0.c2, rt0.c3 FROM vt1 FULL OUTER JOIN rt0 ON ((CASE rt0.c1  WHEN rt0.c3 THEN rt0.c4 WHEN vt1.c1 THEN 0.8354667184055868 WHEN rt0.c5 THEN vt1.c1 ELSE rt0.c1 END)=(vt1.c0)) WHERE ((((CASE rt0.c5  WHEN rt0.c4 THEN rt0.c4 ELSE rt0.c5 END IN ())) ISNULL)) GROUP BY rt0.c5, rt0.c0, rt0.c2, rt0.c3;
SELECT ALL rt0.c5, rt0.c0, rt0.c2, rt0.c3 FROM vt1 FULL OUTER JOIN rt0 ON ((CASE rt0.c1  WHEN rt0.c3 THEN rt0.c4 WHEN vt1.c1 THEN 0.8354667184055868 WHEN rt0.c5 THEN vt1.c1 ELSE rt0.c1 END)==(vt1.c0)) GROUP BY rt0.c5, rt0.c0, rt0.c2, rt0.c3;
SELECT rt0.c4, rt0.c5, rt0.c1, rt0.c2, vt1.c0, vt2.c0 FROM vt2 CROSS JOIN rt0 ON (((('239242266' COLLATE NOCASE)AND(((rt0.c4)AND(NULL)))))OR(((rt0.c4)>(v0.c0)))) RIGHT OUTER JOIN vt1 ON CASE ((v0.c0) NOTNULL)  WHEN (((vt1.c1))<=((v0.c0))) THEN ((rt0.c1)>>(v0.c0)) END INNER JOIN v0 ON ('-1241349198' IN ()) GROUP BY rt0.c4, rt0.c5, rt0.c1, rt0.c2, vt1.c0, vt2.c0;
SELECT rt0.c4, rt0.c5, rt0.c1, rt0.c2, vt1.c0, vt2.c0 FROM vt2 CROSS JOIN rt0 ON (((('239242266' COLLATE NOCASE)AND(((rt0.c4)AND(NULL)))))OR(((rt0.c4)>(v0.c0)))) RIGHT OUTER JOIN vt1 ON CASE ((v0.c0) NOTNULL)  WHEN (((vt1.c1))<=((v0.c0))) THEN ((rt0.c1)>>(v0.c0)) END INNER JOIN v0 ON ('-1241349198' IN ()) GROUP BY rt0.c4, rt0.c5, rt0.c1, rt0.c2, vt1.c0, vt2.c0 HAVING MIN(MAX('-533791265')) UNION ALL SELECT rt0.c4, rt0.c5, rt0.c1, rt0.c2, vt1.c0, vt2.c0 FROM vt2 CROSS JOIN rt0 ON (((('239242266' COLLATE NOCASE)AND(((rt0.c4)AND(NULL)))))OR(((rt0.c4)>(v0.c0)))) RIGHT OUTER JOIN vt1 ON CASE ((v0.c0) NOTNULL)  WHEN (((vt1.c1))<=((v0.c0))) THEN ((rt0.c1)>>(v0.c0)) END INNER JOIN v0 ON ('-1241349198' IN ()) GROUP BY rt0.c4, rt0.c5, rt0.c1, rt0.c2, vt1.c0, vt2.c0 HAVING (NOT (MIN(MAX('-533791265')))) UNION ALL SELECT ALL rt0.c4, rt0.c5, rt0.c1, rt0.c2, vt1.c0, vt2.c0 FROM vt2 CROSS JOIN rt0 ON (((('239242266' COLLATE NOCASE)AND(((rt0.c4)AND(NULL)))))OR(((rt0.c4)>(v0.c0)))) RIGHT OUTER JOIN vt1 ON CASE ((v0.c0) NOTNULL)  WHEN (((vt1.c1))<=((v0.c0))) THEN ((rt0.c1)>>(v0.c0)) END INNER JOIN v0 ON ('-1241349198' IN ()) GROUP BY rt0.c4, rt0.c5, rt0.c1, rt0.c2, vt1.c0, vt2.c0 HAVING ((MIN(MAX('-533791265'))) ISNULL);
SELECT vt1.c0 FROM vt1;
SELECT ALL vt1.c0 FROM vt1 WHERE (CASE WHEN vt1.c1 COLLATE RTRIM THEN vt1.c0 COLLATE RTRIM WHEN ((vt1.c0)OR(vt1.c1)) THEN ((vt1.c1)==(vt1.c1)) WHEN ((vt1.c0)*(vt1.c0)) THEN (~ (vt1.c1)) END) UNION ALL SELECT vt1.c0 FROM vt1 WHERE ((NOT (CASE WHEN vt1.c1 COLLATE RTRIM THEN vt1.c0 COLLATE RTRIM WHEN ((vt1.c0)OR(vt1.c1)) THEN ((vt1.c1)=(vt1.c1)) WHEN ((vt1.c0)*(vt1.c0)) THEN (~ (vt1.c1)) END))) UNION ALL SELECT vt1.c0 FROM vt1 WHERE (((CASE WHEN vt1.c1 COLLATE RTRIM THEN vt1.c0 COLLATE RTRIM WHEN ((vt1.c0)OR(vt1.c1)) THEN ((vt1.c1)==(vt1.c1)) WHEN ((vt1.c0)*(vt1.c0)) THEN (~ (vt1.c1)) END) ISNULL));
SELECT vt1.c0 FROM vt1;
SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0;
SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0 WHERE (((((((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)))OR(vt0.c0 COLLATE BINARY)))AND(ABS(vt0.c1))))AND(((vt0.c1)LIKE(vt0.c0)))))AND((~ (vt0.c1))))) UNION SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0 WHERE ((NOT (((((((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)))OR(vt0.c0 COLLATE BINARY)))AND(ABS(vt0.c1))))AND(((vt0.c1)LIKE(vt0.c0)))))AND((~ (vt0.c1))))))) UNION SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0 WHERE (((((((((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)))OR(vt0.c0 COLLATE BINARY)))AND(ABS(vt0.c1))))AND(((vt0.c1)LIKE(vt0.c0)))))AND((~ (vt0.c1))))) ISNULL));
SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (((((((v0.c0)OR(v0.c0)))OR(x'c780'))) IS FALSE)) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT (((((((v0.c0)OR(v0.c0)))OR(x'c780'))) IS FALSE)))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((((((((v0.c0)OR(v0.c0)))OR(x'c780'))) IS FALSE)) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT vt0.c1, vt0.c0 FROM vt2, vt0 GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM vt2, vt0 GROUP BY vt0.c1, vt0.c0 HAVING ((((((COUNT(vt0.c0))<(TOTAL(vt0.c0))))AND(COUNT(*))))OR(MAX(COUNT(*)))) UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM vt2, vt0 GROUP BY vt0.c1, vt0.c0 HAVING (NOT (((((((COUNT(vt0.c0))<(TOTAL(vt0.c0))))AND(COUNT(*))))OR(MAX(COUNT(*)))))) UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM vt2, vt0 GROUP BY vt0.c1, vt0.c0 HAVING ((((((((COUNT(vt0.c0))<(TOTAL(vt0.c0))))AND(COUNT(*))))OR(MAX(COUNT(*))))) ISNULL);
SELECT v0.c0 FROM v0;
SELECT ALL v0.c0 FROM v0 WHERE ((((((~ (v0.c0)))OR(LIKELIHOOD(v0.c0, 0.21859208813282216))))OR(ABS(DISTINCT v0.c0)))) ORDER BY v0.c0 DESC;
SELECT ALL v0.c0 FROM v0 WHERE ((NOT ((((((~ (v0.c0)))OR(LIKELIHOOD(v0.c0, 0.21859208813282216))))OR(ABS(DISTINCT v0.c0)))))) ORDER BY v0.c0 DESC;
SELECT ALL v0.c0 FROM v0 WHERE ((((((((~ (v0.c0)))OR(LIKELIHOOD(v0.c0, 0.21859208813282216))))OR(ABS(DISTINCT v0.c0)))) ISNULL)) ORDER BY v0.c0 DESC;
SELECT v0.c0 FROM v0;
SELECT DISTINCT * FROM vt2, v0;
SELECT DISTINCT * FROM vt2, v0 WHERE (((v0.c0) IS FALSE) COLLATE BINARY) UNION SELECT DISTINCT * FROM vt2, v0 WHERE ((NOT (((v0.c0) IS FALSE) COLLATE BINARY))) UNION SELECT DISTINCT * FROM vt2, v0 WHERE (((((v0.c0) IS FALSE) COLLATE BINARY) ISNULL));
SELECT DISTINCT * FROM vt2, v0;
SELECT rt0.c1, v0.c0 FROM v0, rt0 GROUP BY rt0.c1, v0.c0;
SELECT rt0.c1, v0.c0 FROM v0, rt0 WHERE (SQLITE_COMPILEOPTION_GET(rt0.c3 COLLATE BINARY)) GROUP BY rt0.c1, v0.c0 UNION SELECT ALL rt0.c1, v0.c0 FROM v0, rt0 WHERE ((NOT (SQLITE_COMPILEOPTION_GET(rt0.c3 COLLATE BINARY)))) GROUP BY rt0.c1, v0.c0 UNION SELECT ALL rt0.c1, v0.c0 FROM v0, rt0 WHERE (((SQLITE_COMPILEOPTION_GET(rt0.c3 COLLATE BINARY)) ISNULL)) GROUP BY rt0.c1, v0.c0;
SELECT rt0.c1, v0.c0 FROM v0, rt0 GROUP BY rt0.c1, v0.c0;
SELECT v0.c0, vt0.c1, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c1, vt0.c0;
SELECT ALL v0.c0, vt0.c1, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c1, vt0.c0 HAVING ((2124633494) IS FALSE) UNION ALL SELECT ALL v0.c0, vt0.c1, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c1, vt0.c0 HAVING (NOT (((2124633494) IS FALSE))) UNION ALL SELECT v0.c0, vt0.c1, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c1, vt0.c0 HAVING ((((2124633494) IS FALSE)) ISNULL);
SELECT v0.c0, vt0.c1, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c1, vt0.c0;
SELECT ALL v0.c0, vt0.c1, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c1, vt0.c0 HAVING ((2124633494) IS FALSE) UNION ALL SELECT ALL v0.c0, vt0.c1, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c1, vt0.c0 HAVING (NOT (((2124633494) IS FALSE))) UNION ALL SELECT v0.c0, vt0.c1, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c1, vt0.c0 HAVING ((((2124633494) IS FALSE)) ISNULL);
SELECT v0.c0, vt0.c1, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c1, vt0.c0;
SELECT ALL * FROM rt0, v0, vt1;
SELECT * FROM rt0, v0, vt1 WHERE (rt0.c3) UNION ALL SELECT * FROM rt0, v0, vt1 WHERE ((NOT (rt0.c3))) UNION ALL SELECT ALL * FROM rt0, v0, vt1 WHERE (((rt0.c3) ISNULL));
SELECT ALL * FROM rt0, v0, vt1;
SELECT DISTINCT * FROM v0, vt2 NOT INDEXED, vt1, vt0;
SELECT DISTINCT * FROM v0, vt2, vt1, vt0 WHERE (v0.c0) UNION SELECT DISTINCT * FROM v0, vt2, vt1, vt0 WHERE ((NOT (v0.c0))) UNION SELECT DISTINCT * FROM v0, vt2, vt1, vt0 WHERE (((v0.c0) ISNULL));
SELECT DISTINCT * FROM v0, vt2 NOT INDEXED, vt1, vt0;
SELECT vt0.c1, rt0.c2 FROM vt2, rt0, vt1, vt0 GROUP BY vt0.c1, rt0.c2;
SELECT ALL vt0.c1, rt0.c2 FROM vt2, rt0, vt1, vt0 WHERE (CASE (((rt0.c2)) NOT BETWEEN ((-9.67437315E8)) AND ((rt0.c2)))  WHEN CASE rt0.c0  WHEN rt0.c1 THEN vt2.c0 ELSE vt1.c1 END THEN (vt0.c1 IN (0X48a78a6a)) ELSE CAST(vt2.c0 AS NUMERIC) END) GROUP BY vt0.c1, rt0.c2 UNION SELECT ALL vt0.c1, rt0.c2 FROM vt2, rt0, vt1, vt0 WHERE ((NOT (CASE (((rt0.c2)) NOT BETWEEN ((-9.67437315E8)) AND ((rt0.c2)))  WHEN CASE rt0.c0  WHEN rt0.c1 THEN vt2.c0 ELSE vt1.c1 END THEN (vt0.c1 IN (0x48a78a6a)) ELSE CAST(vt2.c0 AS NUMERIC) END))) GROUP BY vt0.c1, rt0.c2 UNION SELECT ALL vt0.c1, rt0.c2 FROM vt2, rt0, vt1, vt0 WHERE (((CASE (((rt0.c2)) NOT BETWEEN ((-9.67437315E8)) AND ((rt0.c2)))  WHEN CASE rt0.c0  WHEN rt0.c1 THEN vt2.c0 ELSE vt1.c1 END THEN (vt0.c1 IN (0X48a78a6a)) ELSE CAST(vt2.c0 AS NUMERIC) END) ISNULL)) GROUP BY vt0.c1, rt0.c2;
SELECT vt0.c1, rt0.c2 FROM vt2, rt0, vt1, vt0 GROUP BY vt0.c1, rt0.c2;
SELECT rt0.c3, vt2.c0 FROM vt1, vt2, v0, rt0, vt0 GROUP BY rt0.c3, vt2.c0;
SELECT rt0.c3, vt2.c0 FROM vt1, vt2, v0, rt0, vt0 GROUP BY rt0.c3, vt2.c0 HAVING SUM(CAST(AVG(TOTAL(rt0.c5)) AS BLOB)) UNION ALL SELECT rt0.c3, vt2.c0 FROM vt1, vt2, v0, rt0, vt0 GROUP BY rt0.c3, vt2.c0 HAVING (NOT (SUM(CAST(AVG(TOTAL(rt0.c5)) AS BLOB)))) UNION ALL SELECT rt0.c3, vt2.c0 FROM vt1, vt2, v0, rt0, vt0 GROUP BY rt0.c3, vt2.c0 HAVING ((SUM(CAST(AVG(TOTAL(rt0.c5)) AS BLOB))) ISNULL);
SELECT vt1.c0, vt2.c0, rt0.c2, v0.c0, rt0.c1 FROM vt0, vt1, rt0, v0, vt2;
SELECT ALL vt1.c0, vt2.c0, rt0.c2, v0.c0, rt0.c1 FROM vt0, vt1, rt0, v0, vt2 WHERE ((((+ (rt0.c4))) IS TRUE)) UNION ALL SELECT ALL vt1.c0, vt2.c0, rt0.c2, v0.c0, rt0.c1 FROM vt0, vt1, rt0, v0, vt2 WHERE ((NOT ((((+ (rt0.c4))) IS TRUE)))) UNION ALL SELECT ALL vt1.c0, vt2.c0, rt0.c2, v0.c0, rt0.c1 FROM vt0, vt1, rt0, v0, vt2 WHERE ((((((+ (rt0.c4))) IS TRUE)) ISNULL));
SELECT vt1.c0, vt2.c0, rt0.c2, v0.c0, rt0.c1 FROM vt0, vt1, rt0, v0, vt2;
SELECT DISTINCT * FROM v0, vt2, vt0 FULL OUTER JOIN rt0 ON (((((rt0.c2) NOT NULL)))<=((((rt0.c2) IS FALSE)))) FULL OUTER JOIN vt1 ON rt0.c1;
SELECT DISTINCT * FROM v0, vt2, vt0 FULL OUTER JOIN rt0 ON (((((rt0.c2) NOT NULL)))<=((((rt0.c2) IS FALSE)))) FULL OUTER JOIN vt1 ON rt0.c1 WHERE (CAST(x'3641' AS INTEGER) COLLATE RTRIM COLLATE RTRIM) UNION SELECT DISTINCT * FROM v0, vt2 NOT INDEXED, vt0 FULL OUTER JOIN rt0 ON (((((rt0.c2) NOT NULL)))<=((((rt0.c2) IS FALSE)))) FULL OUTER JOIN vt1 ON rt0.c1 WHERE ((NOT (CAST(x'3641' AS INTEGER) COLLATE RTRIM COLLATE RTRIM))) UNION SELECT DISTINCT * FROM v0, vt2, vt0 FULL OUTER JOIN rt0 ON (((((rt0.c2) NOT NULL)))<=((((rt0.c2) IS FALSE)))) FULL OUTER JOIN vt1 ON rt0.c1 WHERE (((CAST(x'3641' AS INTEGER) COLLATE RTRIM COLLATE RTRIM) ISNULL));
SELECT DISTINCT * FROM v0, vt2, vt0 FULL OUTER JOIN rt0 ON (((((rt0.c2) NOT NULL)))<=((((rt0.c2) IS FALSE)))) FULL OUTER JOIN vt1 ON rt0.c1;
SELECT ALL rt0.c0, vt0.c0, rt0.c2 FROM v0, vt0, rt0 GROUP BY rt0.c0, vt0.c0, rt0.c2;
SELECT ALL rt0.c0, vt0.c0, rt0.c2 FROM v0, vt0, rt0 WHERE (((json_valid(rt0.c3)) ISNULL)) GROUP BY rt0.c0, vt0.c0, rt0.c2 UNION SELECT ALL rt0.c0, vt0.c0, rt0.c2 FROM v0, vt0, rt0 WHERE ((NOT (((json_valid(rt0.c3)) ISNULL)))) GROUP BY rt0.c0, vt0.c0, rt0.c2 UNION SELECT rt0.c0, vt0.c0, rt0.c2 FROM v0, vt0, rt0 WHERE (((((json_valid(rt0.c3)) ISNULL)) ISNULL)) GROUP BY rt0.c0, vt0.c0, rt0.c2;
SELECT ALL rt0.c0, vt0.c0, rt0.c2 FROM v0, vt0, rt0 GROUP BY rt0.c0, vt0.c0, rt0.c2;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING 'Tk' UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT ('Tk')) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (('Tk') ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING 'Tk' UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT ('Tk')) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (('Tk') ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT * FROM vt0, v0, vt1, rt0 INNER JOIN vt2 ON ((((v0.c0) BETWEEN (rt0.c3) AND (vt0.c0))) IS TRUE);
SELECT ALL * FROM vt0, v0, vt1, rt0 INNER JOIN vt2 ON ((((v0.c0) BETWEEN (rt0.c3) AND (vt0.c0))) IS TRUE) WHERE ((CAST(v0.c0 AS BLOB) IN ())) UNION ALL SELECT * FROM vt0, v0, vt1, rt0 INNER JOIN vt2 ON ((((v0.c0) BETWEEN (rt0.c3) AND (vt0.c0))) IS TRUE) WHERE ((NOT ((CAST(v0.c0 AS BLOB) IN ())))) UNION ALL SELECT ALL * FROM vt0, v0, vt1, rt0 INNER JOIN vt2 ON ((((v0.c0) BETWEEN (rt0.c3) AND (vt0.c0))) IS TRUE) WHERE ((((CAST(v0.c0 AS BLOB) IN ())) ISNULL));
SELECT * FROM vt0, v0, vt1, rt0 INNER JOIN vt2 ON ((((v0.c0) BETWEEN (rt0.c3) AND (vt0.c0))) IS TRUE);
SELECT DISTINCT vt1.c0, vt1.c1 FROM vt1;
SELECT DISTINCT vt1.c0, vt1.c1 FROM vt1 WHERE (CASE WHEN CAST(NULL AS REAL) THEN -688884220 ELSE '0.5710775378499766' END) UNION SELECT DISTINCT vt1.c0, vt1.c1 FROM vt1 WHERE ((NOT (CASE WHEN CAST(NULL AS REAL) THEN -688884220 ELSE '0.5710775378499766' END))) UNION SELECT DISTINCT vt1.c0, vt1.c1 FROM vt1 WHERE (((CASE WHEN CAST(NULL AS REAL) THEN -688884220 ELSE '0.5710775378499766' END) ISNULL));
SELECT DISTINCT vt1.c0, vt1.c1 FROM vt1;
SELECT ALL v0.c0 FROM v0 LEFT OUTER JOIN vt2 ON v0.c0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 LEFT OUTER JOIN vt2 ON v0.c0 WHERE (((v0.c0 COLLATE RTRIM) IS FALSE)) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 LEFT OUTER JOIN vt2 ON v0.c0 WHERE ((NOT (((v0.c0 COLLATE RTRIM) IS FALSE)))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 LEFT OUTER JOIN vt2 ON v0.c0 WHERE (((((v0.c0 COLLATE RTRIM) IS FALSE)) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 LEFT OUTER JOIN vt2 ON v0.c0 GROUP BY v0.c0;
SELECT ALL vt0.c0, rt0.c3 FROM vt1, vt0, vt2, rt0 GROUP BY vt0.c0, rt0.c3;
SELECT ALL vt0.c0, rt0.c3 FROM vt1, vt0, vt2, rt0 GROUP BY vt0.c0, rt0.c3 HAVING MAX(MIN(GROUP_CONCAT(rt0.c5))) UNION ALL SELECT vt0.c0, rt0.c3 FROM vt1, vt0, vt2, rt0 NOT INDEXED GROUP BY vt0.c0, rt0.c3 HAVING (NOT (MAX(MIN(GROUP_CONCAT(rt0.c5))))) UNION ALL SELECT vt0.c0, rt0.c3 FROM vt1, vt0, vt2, rt0 GROUP BY vt0.c0, rt0.c3 HAVING ((MAX(MIN(GROUP_CONCAT(rt0.c5)))) ISNULL);
SELECT * FROM vt0, vt2, rt0, v0;
SELECT ALL * FROM vt0, vt2 NOT INDEXED, rt0, v0 WHERE ('&骳') ORDER BY NULLIF(DISTINCT (((vt0.c1))<((vt0.c1))), (vt0.c1 IN ())) DESC;
SELECT ALL * FROM vt0, vt2, rt0, v0 WHERE ((NOT ('&骳'))) ORDER BY NULLIF(DISTINCT (((vt0.c1))<((vt0.c1))), (vt0.c1 IN ())) DESC;
SELECT * FROM vt0, vt2, rt0, v0 WHERE ((('&骳') ISNULL)) ORDER BY NULLIF(DISTINCT (((vt0.c1))<((vt0.c1))), (vt0.c1 IN ())) DESC;
SELECT * FROM vt0, vt2, rt0, v0;
SELECT DISTINCT * FROM vt2, vt1, rt0, vt0, v0;
SELECT DISTINCT * FROM vt2, vt1, rt0, vt0, v0 WHERE (((((1148447.0) ISNULL)) NOT NULL)) UNION SELECT DISTINCT * FROM vt2, vt1, rt0, vt0, v0 WHERE ((NOT (((((1148447.0) ISNULL)) NOT NULL)))) UNION SELECT DISTINCT * FROM vt2, vt1, rt0, vt0, v0 WHERE (((((((1148447.0) ISNULL)) NOT NULL)) ISNULL));
SELECT DISTINCT * FROM vt2, vt1, rt0, vt0, v0;
SELECT vt1.c0 FROM vt2, vt0, vt1, rt0, v0 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt2, vt0, vt1, rt0, v0 WHERE (NULL) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt2, vt0, vt1, rt0, v0 WHERE ((NOT (NULL))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt2, vt0, vt1, rt0, v0 WHERE (((NULL) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt2, vt0, vt1, rt0, v0 GROUP BY vt1.c0;
SELECT rt0.c3, rt0.c4 FROM rt0 GROUP BY rt0.c3, rt0.c4;
SELECT ALL rt0.c3, rt0.c4 FROM rt0 GROUP BY rt0.c3, rt0.c4 HAVING ((((((TOTAL(COUNT(*)))OR(COUNT(MIN(rt0.c4)))))AND(TOTAL(rt0.c1))))OR(GROUP_CONCAT(COUNT(*)))) UNION ALL SELECT rt0.c3, rt0.c4 FROM rt0 GROUP BY rt0.c3, rt0.c4 HAVING (NOT (((((((TOTAL(COUNT(*)))OR(COUNT(MIN(rt0.c4)))))AND(TOTAL(rt0.c1))))OR(GROUP_CONCAT(COUNT(*)))))) UNION ALL SELECT ALL rt0.c3, rt0.c4 FROM rt0 GROUP BY rt0.c3, rt0.c4 HAVING ((((((((TOTAL(COUNT(*)))OR(COUNT(MIN(rt0.c4)))))AND(TOTAL(rt0.c1))))OR(GROUP_CONCAT(COUNT(*))))) ISNULL);
SELECT TOTAL((NOT ((((vt0.c1))==((vt0.c0)))))) FROM vt0, vt2, v0;
SELECT * FROM vt0 NATURAL JOIN vt2;
SELECT ALL * FROM vt0 NATURAL JOIN vt2 WHERE (CASE WHEN (- (vt0.c1)) THEN ((vt0.c0) NOT NULL) ELSE (+ (vt0.c1)) END) UNION ALL SELECT * FROM vt0 NATURAL JOIN vt2 WHERE ((NOT (CASE WHEN (- (vt0.c1)) THEN ((vt0.c0) NOT NULL) ELSE (+ (vt0.c1)) END))) UNION ALL SELECT * FROM vt0 NATURAL JOIN vt2 WHERE (((CASE WHEN (- (vt0.c1)) THEN ((vt0.c0) NOT NULL) ELSE (+ (vt0.c1)) END) ISNULL));
SELECT * FROM vt0 NATURAL JOIN vt2;
SELECT DISTINCT * FROM rt0, vt0 FULL OUTER JOIN vt1 ON (CAST(rt0.c1 AS BLOB) IN ((((vt1.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))) CROSS JOIN vt2 ON CAST(((vt1.c1)OR(rt0.c5)) AS TEXT) LEFT OUTER JOIN v0 ON (rt0.c3 IN ());
SELECT vt2.c0, v0.c0 FROM v0, vt2 GROUP BY vt2.c0, v0.c0;
SELECT vt2.c0, v0.c0 FROM v0, vt2 WHERE ((((CAST(vt2.c0 AS TEXT), (NOT (vt2.c0)), ((vt2.c0) ISNULL)))>=((('(v' IN (v0.c0, 1666084889, v0.c0)), vt2.c0, ((vt2.c0)GLOB(v0.c0)))))) GROUP BY vt2.c0, v0.c0 UNION SELECT ALL vt2.c0, v0.c0 FROM v0, vt2 WHERE ((NOT ((((CAST(vt2.c0 AS TEXT), (NOT (vt2.c0)), ((vt2.c0) ISNULL)))>=((('(v' IN (v0.c0, 1666084889, v0.c0)), vt2.c0, ((vt2.c0)GLOB(v0.c0)))))))) GROUP BY vt2.c0, v0.c0 UNION SELECT vt2.c0, v0.c0 FROM v0, vt2 WHERE ((((((CAST(vt2.c0 AS TEXT), (NOT (vt2.c0)), ((vt2.c0) ISNULL)))>=((('(v' IN (v0.c0, 1666084889, v0.c0)), vt2.c0, ((vt2.c0)GLOB(v0.c0)))))) ISNULL)) GROUP BY vt2.c0, v0.c0;
SELECT vt2.c0, v0.c0 FROM v0, vt2 GROUP BY vt2.c0, v0.c0;
SELECT ALL rt0.c1, v0.c0, vt0.c1, rt0.c3, rt0.c2, rt0.c4, rt0.c0 FROM v0, rt0, vt0 GROUP BY rt0.c1, v0.c0, vt0.c1, rt0.c3, rt0.c2, rt0.c4, rt0.c0;
SELECT ALL rt0.c1, v0.c0, vt0.c1, rt0.c3, rt0.c2, rt0.c4, rt0.c0 FROM v0, rt0, vt0 NOT INDEXED GROUP BY rt0.c1, v0.c0, vt0.c1, rt0.c3, rt0.c2, rt0.c4, rt0.c0 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c1, v0.c0, vt0.c1, rt0.c3, rt0.c2, rt0.c4, rt0.c0 FROM v0, rt0, vt0 GROUP BY rt0.c1, v0.c0, vt0.c1, rt0.c3, rt0.c2, rt0.c4, rt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c1, v0.c0, vt0.c1, rt0.c3, rt0.c2, rt0.c4, rt0.c0 FROM v0, rt0, vt0 GROUP BY rt0.c1, v0.c0, vt0.c1, rt0.c3, rt0.c2, rt0.c4, rt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c1, v0.c0, vt0.c1, rt0.c3, rt0.c2, rt0.c4, rt0.c0 FROM v0, rt0, vt0 GROUP BY rt0.c1, v0.c0, vt0.c1, rt0.c3, rt0.c2, rt0.c4, rt0.c0;
SELECT ALL rt0.c1, v0.c0, vt0.c1, rt0.c3, rt0.c2, rt0.c4, rt0.c0 FROM v0, rt0, vt0 NOT INDEXED GROUP BY rt0.c1, v0.c0, vt0.c1, rt0.c3, rt0.c2, rt0.c4, rt0.c0 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c1, v0.c0, vt0.c1, rt0.c3, rt0.c2, rt0.c4, rt0.c0 FROM v0, rt0, vt0 GROUP BY rt0.c1, v0.c0, vt0.c1, rt0.c3, rt0.c2, rt0.c4, rt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c1, v0.c0, vt0.c1, rt0.c3, rt0.c2, rt0.c4, rt0.c0 FROM v0, rt0, vt0 GROUP BY rt0.c1, v0.c0, vt0.c1, rt0.c3, rt0.c2, rt0.c4, rt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c1, v0.c0, vt0.c1, rt0.c3, rt0.c2, rt0.c4, rt0.c0 FROM v0, rt0, vt0 GROUP BY rt0.c1, v0.c0, vt0.c1, rt0.c3, rt0.c2, rt0.c4, rt0.c0;
SELECT * FROM vt1;
SELECT * FROM vt1 WHERE (((CASE WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c1 END)IS(((vt1.c0)>(vt1.c0))))) UNION ALL SELECT ALL * FROM vt1 WHERE ((NOT (((CASE WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c1 END)IS(((vt1.c0)>(vt1.c0))))))) UNION ALL SELECT * FROM vt1 WHERE (((((CASE WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c1 END)IS(((vt1.c0)>(vt1.c0))))) ISNULL));
SELECT * FROM vt1;
SELECT DISTINCT * FROM vt2, vt1, vt0 CROSS JOIN v0 ON ((CASE vt1.c1  WHEN rt0.c5 THEN vt0.c0 END) ISNULL) CROSS JOIN rt0 ON ABS(((-44280372) BETWEEN (vt1.c0) AND (rt0.c1)));
SELECT DISTINCT * FROM vt2, vt1, vt0 CROSS JOIN v0 ON ((CASE vt1.c1  WHEN rt0.c5 THEN vt0.c0 END) ISNULL) CROSS JOIN rt0 ON ABS(((-44280372) BETWEEN (vt1.c0) AND (rt0.c1))) WHERE ((CASE v0.c0  WHEN vt1.c1 THEN rt0.c0 END IN ((+ (rt0.c5)), (((rt0.c5))<=((vt2.c0)))))) UNION SELECT DISTINCT * FROM vt2, vt1, vt0 CROSS JOIN v0 ON ((CASE vt1.c1  WHEN rt0.c5 THEN vt0.c0 END) ISNULL) CROSS JOIN rt0 ON ABS(((-44280372) BETWEEN (vt1.c0) AND (rt0.c1))) WHERE ((NOT ((CASE v0.c0  WHEN vt1.c1 THEN rt0.c0 END IN ((+ (rt0.c5)), (((rt0.c5))<=((vt2.c0)))))))) UNION SELECT DISTINCT * FROM vt2, vt1, vt0 CROSS JOIN v0 ON ((CASE vt1.c1  WHEN rt0.c5 THEN vt0.c0 END) ISNULL) CROSS JOIN rt0 ON ABS(((-44280372) BETWEEN (vt1.c0) AND (rt0.c1))) WHERE ((((CASE v0.c0  WHEN vt1.c1 THEN rt0.c0 END IN ((+ (rt0.c5)), (((rt0.c5))<=((vt2.c0)))))) ISNULL));
SELECT DISTINCT * FROM vt2, vt1, vt0 CROSS JOIN v0 ON ((CASE vt1.c1  WHEN rt0.c5 THEN vt0.c0 END) ISNULL) CROSS JOIN rt0 ON ABS(((-44280372) BETWEEN (vt1.c0) AND (rt0.c1)));
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (((((((((((((v0.c0 COLLATE RTRIM)AND(CASE WHEN v0.c0 THEN v0.c0 END)))AND((+ (v0.c0)))))AND(((v0.c0) NOTNULL))))OR(((((v0.c0)AND(v0.c0)))AND(v0.c0)))))AND(v0.c0)))OR(CAST(v0.c0 AS NUMERIC)))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT (((((((((((((v0.c0 COLLATE RTRIM)AND(CASE WHEN v0.c0 THEN v0.c0 END)))AND((+ (v0.c0)))))AND(((v0.c0) NOTNULL))))OR(((((v0.c0)AND(v0.c0)))AND(v0.c0)))))AND(v0.c0)))OR(CAST(v0.c0 AS NUMERIC)))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE (((((((((((((((v0.c0 COLLATE RTRIM)AND(CASE WHEN v0.c0 THEN v0.c0 END)))AND((+ (v0.c0)))))AND(((v0.c0) NOTNULL))))OR(((((v0.c0)AND(v0.c0)))AND(v0.c0)))))AND(v0.c0)))OR(CAST(v0.c0 AS NUMERIC)))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING MIN((v0.c0 IN (v0.c0))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (MIN((v0.c0 IN (v0.c0))))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((MIN((v0.c0 IN (v0.c0)))) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING MIN((v0.c0 IN (v0.c0))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (MIN((v0.c0 IN (v0.c0))))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((MIN((v0.c0 IN (v0.c0)))) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT * FROM vt1, rt0, vt2, vt0 NATURAL JOIN v0;
SELECT * FROM vt1, rt0, vt2, vt0 NATURAL JOIN v0 WHERE ((~ (((((rt0.c5)OR(rt0.c2)))OR(rt0.c3))))) UNION ALL SELECT ALL * FROM vt1, rt0, vt2, vt0 NATURAL JOIN v0 WHERE ((NOT ((~ (((((rt0.c5)OR(rt0.c2)))OR(rt0.c3))))))) UNION ALL SELECT * FROM vt1, rt0, vt2, vt0 NATURAL JOIN v0 WHERE ((((~ (((((rt0.c5)OR(rt0.c2)))OR(rt0.c3))))) ISNULL));
SELECT * FROM vt1, rt0, vt2, vt0 NATURAL JOIN v0;
SELECT DISTINCT * FROM rt0, vt0, vt2, vt1;
SELECT DISTINCT * FROM rt0, vt0, vt2, vt1 WHERE (CASE CASE WHEN vt2.c0 THEN vt2.c0 END  WHEN vt1.c1 COLLATE RTRIM THEN ((((rt0.c4)OR(rt0.c2)))OR(rt0.c2)) WHEN ((rt0.c3)!=(vt0.c1)) THEN CASE WHEN '-1018925601' THEN 0.2203724122788232 WHEN vt0.c0 THEN rt0.c5 WHEN x'd1d8' THEN '1803496091' END WHEN (+ (rt0.c2)) THEN CAST(vt0.c0 AS INTEGER) END) UNION SELECT DISTINCT * FROM rt0, vt0, vt2, vt1 WHERE ((NOT (CASE CASE WHEN vt2.c0 THEN vt2.c0 END  WHEN vt1.c1 COLLATE RTRIM THEN ((((rt0.c4)OR(rt0.c2)))OR(rt0.c2)) WHEN ((rt0.c3)<>(vt0.c1)) THEN CASE WHEN '-1018925601' THEN 0.2203724122788232 WHEN vt0.c0 THEN rt0.c5 WHEN x'd1d8' THEN '1803496091' END WHEN (+ (rt0.c2)) THEN CAST(vt0.c0 AS INTEGER) END))) UNION SELECT DISTINCT * FROM rt0, vt0, vt2, vt1 WHERE (((CASE CASE WHEN vt2.c0 THEN vt2.c0 END  WHEN vt1.c1 COLLATE RTRIM THEN ((((rt0.c4)OR(rt0.c2)))OR(rt0.c2)) WHEN ((rt0.c3)!=(vt0.c1)) THEN CASE WHEN '-1018925601' THEN 0.2203724122788232 WHEN vt0.c0 THEN rt0.c5 WHEN x'd1d8' THEN '1803496091' END WHEN (+ (rt0.c2)) THEN CAST(vt0.c0 AS INTEGER) END) ISNULL));
SELECT DISTINCT * FROM rt0, vt0, vt2, vt1;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE ((((- (v0.c0))) NOT BETWEEN (CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE NULL END) AND ((~ (0.13882748103499198))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT ((((- (v0.c0))) NOT BETWEEN (CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE NULL END) AND ((~ (0.13882748103499198))))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((((((- (v0.c0))) NOT BETWEEN (CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE NULL END) AND ((~ (0.13882748103499198))))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT vt2.c0 FROM vt0, vt2 GROUP BY vt2.c0;
SELECT vt2.c0 FROM vt0, vt2 GROUP BY vt2.c0 HAVING SUM(((vt2.c0)>>(vt0.c1))) UNION ALL SELECT ALL vt2.c0 FROM vt0, vt2 GROUP BY vt2.c0 HAVING (NOT (SUM(((vt2.c0)>>(vt0.c1))))) UNION ALL SELECT vt2.c0 FROM vt0, vt2 GROUP BY vt2.c0 HAVING ((SUM(((vt2.c0)>>(vt0.c1)))) ISNULL);
SELECT vt2.c0 FROM vt0, vt2 GROUP BY vt2.c0;
SELECT vt2.c0 FROM vt0, vt2 GROUP BY vt2.c0 HAVING SUM(((vt2.c0)>>(vt0.c1))) UNION ALL SELECT ALL vt2.c0 FROM vt0, vt2 GROUP BY vt2.c0 HAVING (NOT (SUM(((vt2.c0)>>(vt0.c1))))) UNION ALL SELECT vt2.c0 FROM vt0, vt2 GROUP BY vt2.c0 HAVING ((SUM(((vt2.c0)>>(vt0.c1)))) ISNULL);
SELECT vt2.c0 FROM vt0, vt2 GROUP BY vt2.c0;
SELECT vt1.c0, rt0.c4, vt1.c1, vt2.c0, rt0.c5, rt0.c0, vt0.c0, rt0.c3 FROM rt0, vt0, vt2, vt1;
SELECT ALL vt1.c0, rt0.c4, vt1.c1, vt2.c0, rt0.c5, rt0.c0, vt0.c0, rt0.c3 FROM rt0, vt0, vt2, vt1 WHERE (((((((((((((((rt0.c2)AND(rt0.c3)))AND(vt0.c1)))AND(rt0.c5)))AND(rt0.c0)))OR(rt0.c1)))AND(rt0.c2))) ISNULL)) UNION ALL SELECT vt1.c0, rt0.c4, vt1.c1, vt2.c0, rt0.c5, rt0.c0, vt0.c0, rt0.c3 FROM rt0, vt0, vt2, vt1 WHERE ((NOT (((((((((((((((rt0.c2)AND(rt0.c3)))AND(vt0.c1)))AND(rt0.c5)))AND(rt0.c0)))OR(rt0.c1)))AND(rt0.c2))) ISNULL)))) UNION ALL SELECT ALL vt1.c0, rt0.c4, vt1.c1, vt2.c0, rt0.c5, rt0.c0, vt0.c0, rt0.c3 FROM rt0, vt0, vt2, vt1 WHERE (((((((((((((((((rt0.c2)AND(rt0.c3)))AND(vt0.c1)))AND(rt0.c5)))AND(rt0.c0)))OR(rt0.c1)))AND(rt0.c2))) ISNULL)) ISNULL));
SELECT vt1.c0, rt0.c4, vt1.c1, vt2.c0, rt0.c5, rt0.c0, vt0.c0, rt0.c3 FROM rt0, vt0, vt2, vt1;
SELECT DISTINCT vt1.c1 FROM vt1;
SELECT DISTINCT vt1.c1 FROM vt1 WHERE ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c1 END IN (vt1.c1 COLLATE BINARY))) UNION SELECT DISTINCT vt1.c1 FROM vt1 WHERE ((NOT ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c1 END IN (vt1.c1 COLLATE BINARY))))) UNION SELECT DISTINCT vt1.c1 FROM vt1 WHERE ((((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c1 END IN (vt1.c1 COLLATE BINARY))) ISNULL));
SELECT DISTINCT vt1.c1 FROM vt1;
SELECT ALL vt2.c0, vt0.c1, v0.c0 FROM vt2, v0, vt0 GROUP BY vt2.c0, vt0.c1, v0.c0;
SELECT vt2.c0, vt0.c1, v0.c0 FROM vt2, v0, vt0 WHERE ((((((v0.c0)) BETWEEN ((vt2.c0)) AND ((vt0.c0)))) NOT BETWEEN ((('9655315') IS FALSE)) AND (((vt2.c0)*(vt0.c1))))) GROUP BY vt2.c0, vt0.c1, v0.c0 UNION SELECT ALL vt2.c0, vt0.c1, v0.c0 FROM vt2, v0, vt0 WHERE ((NOT ((((((v0.c0)) BETWEEN ((vt2.c0)) AND ((vt0.c0)))) NOT BETWEEN ((('9655315') IS FALSE)) AND (((vt2.c0)*(vt0.c1))))))) GROUP BY vt2.c0, vt0.c1, v0.c0 UNION SELECT vt2.c0, vt0.c1, v0.c0 FROM vt2, v0, vt0 WHERE ((((((((v0.c0)) BETWEEN ((vt2.c0)) AND ((vt0.c0)))) NOT BETWEEN ((('9655315') IS FALSE)) AND (((vt2.c0)*(vt0.c1))))) ISNULL)) GROUP BY vt2.c0, vt0.c1, v0.c0;
SELECT ALL vt2.c0, vt0.c1, v0.c0 FROM vt2, v0, vt0 GROUP BY vt2.c0, vt0.c1, v0.c0;
SELECT ALL v0.c0, vt1.c0, rt0.c5, rt0.c1, rt0.c0, rt0.c4, vt2.c0, rt0.c2 FROM rt0, vt1, v0, vt2 GROUP BY v0.c0, vt1.c0, rt0.c5, rt0.c1, rt0.c0, rt0.c4, vt2.c0, rt0.c2;
SELECT ALL v0.c0, vt1.c0, rt0.c5, rt0.c1, rt0.c0, rt0.c4, vt2.c0, rt0.c2 FROM rt0, vt1, v0, vt2 GROUP BY v0.c0, vt1.c0, rt0.c5, rt0.c1, rt0.c0, rt0.c4, vt2.c0, rt0.c2 HAVING ((rt0.c2)>>(SUM(GROUP_CONCAT(rt0.c4)))) UNION ALL SELECT ALL v0.c0, vt1.c0, rt0.c5, rt0.c1, rt0.c0, rt0.c4, vt2.c0, rt0.c2 FROM rt0, vt1, v0, vt2 GROUP BY v0.c0, vt1.c0, rt0.c5, rt0.c1, rt0.c0, rt0.c4, vt2.c0, rt0.c2 HAVING (NOT (((rt0.c2)>>(SUM(GROUP_CONCAT(rt0.c4)))))) UNION ALL SELECT ALL v0.c0, vt1.c0, rt0.c5, rt0.c1, rt0.c0, rt0.c4, vt2.c0, rt0.c2 FROM rt0, vt1, v0, vt2 GROUP BY v0.c0, vt1.c0, rt0.c5, rt0.c1, rt0.c0, rt0.c4, vt2.c0, rt0.c2 HAVING ((((rt0.c2)>>(SUM(GROUP_CONCAT(rt0.c4))))) ISNULL);
SELECT SUM(((CASE WHEN rt0.c1 THEN vt1.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN vt1.c0 END)OR(vt2.c0))) FROM vt1, rt0, vt2, v0 ORDER BY CAST(((NULL)<=(vt1.c1)) AS BLOB) ASC;
SELECT rt0.c0, rt0.c2, rt0.c1, rt0.c4, rt0.c5 FROM v0, rt0;
SELECT rt0.c0, rt0.c2, rt0.c1, rt0.c4, rt0.c5 FROM v0, rt0 WHERE (rt0.c0) UNION ALL SELECT rt0.c0, rt0.c2, rt0.c1, rt0.c4, rt0.c5 FROM v0, rt0 WHERE ((NOT (rt0.c0))) UNION ALL SELECT rt0.c0, rt0.c2, rt0.c1, rt0.c4, rt0.c5 FROM v0, rt0 WHERE (((rt0.c0) ISNULL));
SELECT rt0.c0, rt0.c2, rt0.c1, rt0.c4, rt0.c5 FROM v0, rt0;
SELECT DISTINCT rt0.c5, rt0.c2, rt0.c3, rt0.c4 FROM rt0;
SELECT DISTINCT rt0.c5, rt0.c2, rt0.c3, rt0.c4 FROM rt0 WHERE ((rt0.c2 COLLATE RTRIM IN ())) UNION SELECT DISTINCT rt0.c5, rt0.c2, rt0.c3, rt0.c4 FROM rt0 WHERE ((NOT ((rt0.c2 COLLATE RTRIM IN ())))) UNION SELECT DISTINCT rt0.c5, rt0.c2, rt0.c3, rt0.c4 FROM rt0 WHERE ((((rt0.c2 COLLATE RTRIM IN ())) ISNULL));
SELECT DISTINCT rt0.c5, rt0.c2, rt0.c3, rt0.c4 FROM rt0;
SELECT vt0.c0, vt2.c0, rt0.c1, vt1.c1, rt0.c3, vt1.c0, rt0.c4, v0.c0, vt0.c1, rt0.c5, rt0.c2, rt0.c0 FROM v0, rt0, vt2, vt1, vt0 GROUP BY vt0.c0, vt2.c0, rt0.c1, vt1.c1, rt0.c3, vt1.c0, rt0.c4, v0.c0, vt0.c1, rt0.c5, rt0.c2, rt0.c0;
SELECT ALL vt0.c0, vt2.c0, rt0.c1, vt1.c1, rt0.c3, vt1.c0, rt0.c4, v0.c0, vt0.c1, rt0.c5, rt0.c2, rt0.c0 FROM v0, rt0, vt2, vt1, vt0 WHERE (((((((vt0.c0)OR(rt0.c4)))OR(rt0.c3)))LIKE(CASE WHEN vt1.c1 THEN vt2.c0 WHEN rt0.c4 THEN rt0.c1 WHEN v0.c0 THEN x'' ELSE rt0.c1 END))) GROUP BY vt0.c0, vt2.c0, rt0.c1, vt1.c1, rt0.c3, vt1.c0, rt0.c4, v0.c0, vt0.c1, rt0.c5, rt0.c2, rt0.c0 UNION SELECT ALL vt0.c0, vt2.c0, rt0.c1, vt1.c1, rt0.c3, vt1.c0, rt0.c4, v0.c0, vt0.c1, rt0.c5, rt0.c2, rt0.c0 FROM v0, rt0, vt2, vt1, vt0 WHERE ((NOT (((((((vt0.c0)OR(rt0.c4)))OR(rt0.c3)))LIKE(CASE WHEN vt1.c1 THEN vt2.c0 WHEN rt0.c4 THEN rt0.c1 WHEN v0.c0 THEN x'' ELSE rt0.c1 END))))) GROUP BY vt0.c0, vt2.c0, rt0.c1, vt1.c1, rt0.c3, vt1.c0, rt0.c4, v0.c0, vt0.c1, rt0.c5, rt0.c2, rt0.c0 UNION SELECT vt0.c0, vt2.c0, rt0.c1, vt1.c1, rt0.c3, vt1.c0, rt0.c4, v0.c0, vt0.c1, rt0.c5, rt0.c2, rt0.c0 FROM v0, rt0, vt2, vt1, vt0 WHERE (((((((((vt0.c0)OR(rt0.c4)))OR(rt0.c3)))LIKE(CASE WHEN vt1.c1 THEN vt2.c0 WHEN rt0.c4 THEN rt0.c1 WHEN v0.c0 THEN x'' ELSE rt0.c1 END))) ISNULL)) GROUP BY vt0.c0, vt2.c0, rt0.c1, vt1.c1, rt0.c3, vt1.c0, rt0.c4, v0.c0, vt0.c1, rt0.c5, rt0.c2, rt0.c0;
SELECT vt0.c0, vt2.c0, rt0.c1, vt1.c1, rt0.c3, vt1.c0, rt0.c4, v0.c0, vt0.c1, rt0.c5, rt0.c2, rt0.c0 FROM v0, rt0, vt2, vt1, vt0 GROUP BY vt0.c0, vt2.c0, rt0.c1, vt1.c1, rt0.c3, vt1.c0, rt0.c4, v0.c0, vt0.c1, rt0.c5, rt0.c2, rt0.c0;
SELECT rt0.c2, vt2.c0, rt0.c3, rt0.c5 FROM vt2, vt1, rt0 GROUP BY rt0.c2, vt2.c0, rt0.c3, rt0.c5;
SELECT ALL rt0.c2, vt2.c0, rt0.c3, rt0.c5 FROM vt2, vt1, rt0 GROUP BY rt0.c2, vt2.c0, rt0.c3, rt0.c5 HAVING TOTAL(MIN(AVG(COUNT(vt1.c0)))) UNION ALL SELECT rt0.c2, vt2.c0, rt0.c3, rt0.c5 FROM vt2, vt1, rt0 GROUP BY rt0.c2, vt2.c0, rt0.c3, rt0.c5 HAVING (NOT (TOTAL(MIN(AVG(COUNT(vt1.c0)))))) UNION ALL SELECT rt0.c2, vt2.c0, rt0.c3, rt0.c5 FROM vt2, vt1, rt0 GROUP BY rt0.c2, vt2.c0, rt0.c3, rt0.c5 HAVING ((TOTAL(MIN(AVG(COUNT(vt1.c0))))) ISNULL);
SELECT vt0.c0 FROM v0, vt2, vt1, vt0;
SELECT vt0.c0 FROM v0, vt2, vt1, vt0 WHERE (vt2.c0) UNION ALL SELECT vt0.c0 FROM v0, vt2, vt1, vt0 WHERE ((NOT (vt2.c0))) UNION ALL SELECT ALL vt0.c0 FROM v0, vt2, vt1, vt0 WHERE (((vt2.c0) ISNULL));
SELECT vt0.c0 FROM v0, vt2, vt1, vt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((~ ((rt0.c2 IN ())))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((~ ((rt0.c2 IN ())))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((~ ((rt0.c2 IN ())))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT v0.c0 FROM vt0, rt0, v0 GROUP BY v0.c0;
SELECT v0.c0 FROM vt0, rt0, v0 WHERE ((((rt0.c0)) NOT BETWEEN ((CAST(vt0.c0 AS NUMERIC))) AND ((((v0.c0) IS TRUE))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM vt0, rt0, v0 WHERE ((NOT ((((rt0.c0)) NOT BETWEEN ((CAST(vt0.c0 AS NUMERIC))) AND ((((v0.c0) IS TRUE))))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM vt0, rt0, v0 WHERE ((((((rt0.c0)) NOT BETWEEN ((CAST(vt0.c0 AS NUMERIC))) AND ((((v0.c0) IS TRUE))))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM vt0, rt0, v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING CAST(AVG(MAX(v0.c0)) AS INTEGER) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (CAST(AVG(MAX(v0.c0)) AS INTEGER))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((CAST(AVG(MAX(v0.c0)) AS INTEGER)) ISNULL);
SELECT * FROM vt1, rt0;
SELECT ALL * FROM vt1, rt0 WHERE ((((('') NOT NULL)) BETWEEN (((((vt1.c0)OR(rt0.c1)))OR(vt1.c0))) AND (TYPEOF(DISTINCT rt0.c3)))) ORDER BY CASE (((rt0.c4))>=((rt0.c4)))  WHEN CAST(rt0.c4 AS NUMERIC) THEN ((rt0.c4)IS NOT(rt0.c5)) ELSE ((vt1.c1)<(vt1.c1)) END ASC  NULLS FIRST, CAST(((rt0.c3)<(NULL)) AS TEXT) DESC;
SELECT * FROM vt1, rt0 WHERE ((NOT ((((('') NOT NULL)) BETWEEN (((((vt1.c0)OR(rt0.c1)))OR(vt1.c0))) AND (TYPEOF(DISTINCT rt0.c3)))))) ORDER BY CASE (((rt0.c4))>=((rt0.c4)))  WHEN CAST(rt0.c4 AS NUMERIC) THEN ((rt0.c4)IS NOT(rt0.c5)) ELSE ((vt1.c1)<(vt1.c1)) END ASC  NULLS FIRST, CAST(((rt0.c3)<(NULL)) AS TEXT) DESC;
SELECT * FROM vt1, rt0 WHERE ((((((('') NOT NULL)) BETWEEN (((((vt1.c0)OR(rt0.c1)))OR(vt1.c0))) AND (TYPEOF(DISTINCT rt0.c3)))) ISNULL)) ORDER BY CASE (((rt0.c4))>=((rt0.c4)))  WHEN CAST(rt0.c4 AS NUMERIC) THEN ((rt0.c4)IS NOT(rt0.c5)) ELSE ((vt1.c1)<(vt1.c1)) END ASC  NULLS FIRST, CAST(((rt0.c3)<(NULL)) AS TEXT) DESC;
SELECT * FROM vt1, rt0;
SELECT DISTINCT vt0.c0, vt0.c1, rt0.c4, vt2.c0, v0.c0, rt0.c5, rt0.c0, rt0.c3, rt0.c2 FROM v0, vt0 FULL OUTER JOIN rt0 ON ((((((vt0.c0)OR(vt0.c0)))AND(rt0.c1))) IS FALSE) LEFT OUTER JOIN vt2 ON ((((((v0.c0)AND(x'')))OR(rt0.c1))) NOT BETWEEN (CASE rt0.c2  WHEN vt0.c1 THEN rt0.c1 ELSE rt0.c2 END) AND (((vt0.c0)GLOB(rt0.c4))));
SELECT DISTINCT vt0.c0, vt0.c1, rt0.c4, vt2.c0, v0.c0, rt0.c5, rt0.c0, rt0.c3, rt0.c2 FROM v0, vt0 FULL OUTER JOIN rt0 ON ((((((vt0.c0)OR(vt0.c0)))AND(rt0.c1))) IS FALSE) LEFT OUTER JOIN vt2 ON ((((((v0.c0)AND(x'')))OR(rt0.c1))) NOT BETWEEN (CASE rt0.c2  WHEN vt0.c1 THEN rt0.c1 ELSE rt0.c2 END) AND (((vt0.c0)GLOB(rt0.c4)))) WHERE ((+ (((((vt0.c0)OR(vt0.c1)))OR(v0.c0))))) UNION SELECT DISTINCT vt0.c0, vt0.c1, rt0.c4, vt2.c0, v0.c0, rt0.c5, rt0.c0, rt0.c3, rt0.c2 FROM v0, vt0 FULL OUTER JOIN rt0 ON ((((((vt0.c0)OR(vt0.c0)))AND(rt0.c1))) IS FALSE) LEFT OUTER JOIN vt2 ON ((((((v0.c0)AND(x'')))OR(rt0.c1))) NOT BETWEEN (CASE rt0.c2  WHEN vt0.c1 THEN rt0.c1 ELSE rt0.c2 END) AND (((vt0.c0)GLOB(rt0.c4)))) WHERE ((NOT ((+ (((((vt0.c0)OR(vt0.c1)))OR(v0.c0))))))) UNION SELECT DISTINCT vt0.c0, vt0.c1, rt0.c4, vt2.c0, v0.c0, rt0.c5, rt0.c0, rt0.c3, rt0.c2 FROM v0, vt0 FULL OUTER JOIN rt0 ON ((((((vt0.c0)OR(vt0.c0)))AND(rt0.c1))) IS FALSE) LEFT OUTER JOIN vt2 ON ((((((v0.c0)AND(x'')))OR(rt0.c1))) NOT BETWEEN (CASE rt0.c2  WHEN vt0.c1 THEN rt0.c1 ELSE rt0.c2 END) AND (((vt0.c0)GLOB(rt0.c4)))) WHERE ((((+ (((((vt0.c0)OR(vt0.c1)))OR(v0.c0))))) ISNULL));
SELECT DISTINCT vt0.c0, vt0.c1, rt0.c4, vt2.c0, v0.c0, rt0.c5, rt0.c0, rt0.c3, rt0.c2 FROM v0, vt0 FULL OUTER JOIN rt0 ON ((((((vt0.c0)OR(vt0.c0)))AND(rt0.c1))) IS FALSE) LEFT OUTER JOIN vt2 ON ((((((v0.c0)AND(x'')))OR(rt0.c1))) NOT BETWEEN (CASE rt0.c2  WHEN vt0.c1 THEN rt0.c1 ELSE rt0.c2 END) AND (((vt0.c0)GLOB(rt0.c4))));
SELECT rt0.c3, rt0.c1, rt0.c2, rt0.c5, vt0.c0 FROM vt2, vt1, rt0, v0, vt0 NOT INDEXED GROUP BY rt0.c3, rt0.c1, rt0.c2, rt0.c5, vt0.c0;
SELECT rt0.c3, rt0.c1, rt0.c2, rt0.c5, vt0.c0 FROM vt2, vt1, rt0, v0, vt0 WHERE ((((rt0.c2, vt1.c1, vt2.c0)) NOT BETWEEN ((rt0.c5, ((((((((((((rt0.c4)AND(vt2.c0)))OR(rt0.c3)))OR(rt0.c1)))AND(rt0.c3)))AND(rt0.c5)))AND(vt0.c1)), rt0.c2)) AND ((((((((((rt0.c5)OR(v0.c0)))AND(vt1.c1)))OR(0xffffffffb8314135)))OR(v0.c0)), CASE WHEN vt0.c0 THEN rt0.c3 ELSE rt0.c3 END, ((rt0.c0) BETWEEN (v0.c0) AND (vt1.c0)))))) GROUP BY rt0.c3, rt0.c1, rt0.c2, rt0.c5, vt0.c0 UNION SELECT rt0.c3, rt0.c1, rt0.c2, rt0.c5, vt0.c0 FROM vt2, vt1, rt0, v0, vt0 WHERE ((NOT ((((rt0.c2, vt1.c1, vt2.c0)) NOT BETWEEN ((rt0.c5, ((((((((((((rt0.c4)AND(vt2.c0)))OR(rt0.c3)))OR(rt0.c1)))AND(rt0.c3)))AND(rt0.c5)))AND(vt0.c1)), rt0.c2)) AND ((((((((((rt0.c5)OR(v0.c0)))AND(vt1.c1)))OR(0Xffffffffb8314135)))OR(v0.c0)), CASE WHEN vt0.c0 THEN rt0.c3 ELSE rt0.c3 END, ((rt0.c0) BETWEEN (v0.c0) AND (vt1.c0)))))))) GROUP BY rt0.c3, rt0.c1, rt0.c2, rt0.c5, vt0.c0 UNION SELECT rt0.c3, rt0.c1, rt0.c2, rt0.c5, vt0.c0 FROM vt2, vt1, rt0, v0, vt0 WHERE ((((((rt0.c2, vt1.c1, vt2.c0)) NOT BETWEEN ((rt0.c5, ((((((((((((rt0.c4)AND(vt2.c0)))OR(rt0.c3)))OR(rt0.c1)))AND(rt0.c3)))AND(rt0.c5)))AND(vt0.c1)), rt0.c2)) AND ((((((((((rt0.c5)OR(v0.c0)))AND(vt1.c1)))OR(0Xffffffffb8314135)))OR(v0.c0)), CASE WHEN vt0.c0 THEN rt0.c3 ELSE rt0.c3 END, ((rt0.c0) BETWEEN (v0.c0) AND (vt1.c0)))))) ISNULL)) GROUP BY rt0.c3, rt0.c1, rt0.c2, rt0.c5, vt0.c0;
SELECT rt0.c3, rt0.c1, rt0.c2, rt0.c5, vt0.c0 FROM vt2, vt1, rt0, v0, vt0 NOT INDEXED GROUP BY rt0.c3, rt0.c1, rt0.c2, rt0.c5, vt0.c0;
SELECT ALL vt1.c1, vt2.c0, vt0.c1, vt1.c0 FROM vt1, vt0, vt2, v0 GROUP BY vt1.c1, vt2.c0, vt0.c1, vt1.c0;
SELECT ALL vt1.c1, vt2.c0, vt0.c1, vt1.c0 FROM vt1, vt0, vt2, v0 GROUP BY vt1.c1, vt2.c0, vt0.c1, vt1.c0 HAVING SUM(AVG(MAX(vt1.c0))) UNION ALL SELECT ALL vt1.c1, vt2.c0, vt0.c1, vt1.c0 FROM vt1, vt0, vt2, v0 GROUP BY vt1.c1, vt2.c0, vt0.c1, vt1.c0 HAVING (NOT (SUM(AVG(MAX(vt1.c0))))) UNION ALL SELECT ALL vt1.c1, vt2.c0, vt0.c1, vt1.c0 FROM vt1, vt0, vt2, v0 GROUP BY vt1.c1, vt2.c0, vt0.c1, vt1.c0 HAVING ((SUM(AVG(MAX(vt1.c0)))) ISNULL);
SELECT * FROM vt0;
SELECT ALL * FROM vt0 WHERE (((vt0.c0 COLLATE RTRIM)!=(((((-1986106220)AND(vt0.c1)))AND(vt0.c0))))) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (((vt0.c0 COLLATE RTRIM)!=(((((-1986106220)AND(vt0.c1)))AND(vt0.c0))))))) UNION ALL SELECT * FROM vt0 WHERE (((((vt0.c0 COLLATE RTRIM)!=(((((-1986106220)AND(vt0.c1)))AND(vt0.c0))))) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT rt0.c1, rt0.c3, vt1.c1, rt0.c4, v0.c0, rt0.c0, vt1.c0 FROM v0 INNER JOIN rt0 ON LENGTH((- (v0.c0))) FULL OUTER JOIN vt1 ON ((rt0.c2)/((rt0.c2 IN ())));
SELECT DISTINCT rt0.c1, rt0.c3, vt1.c1, rt0.c4, v0.c0, rt0.c0, vt1.c0 FROM v0 INNER JOIN rt0 ON LENGTH((- (v0.c0))) FULL OUTER JOIN vt1 ON ((rt0.c2)/((rt0.c2 IN ()))) WHERE ((((((((v0.c0)OR(rt0.c5)))AND(rt0.c4))))<((((rt0.c3) IS TRUE))))) UNION SELECT DISTINCT rt0.c1, rt0.c3, vt1.c1, rt0.c4, v0.c0, rt0.c0, vt1.c0 FROM v0 INNER JOIN rt0 ON LENGTH((- (v0.c0))) FULL OUTER JOIN vt1 ON ((rt0.c2)/((rt0.c2 IN ()))) WHERE ((NOT ((((((((v0.c0)OR(rt0.c5)))AND(rt0.c4))))<((((rt0.c3) IS TRUE))))))) UNION SELECT DISTINCT rt0.c1, rt0.c3, vt1.c1, rt0.c4, v0.c0, rt0.c0, vt1.c0 FROM v0 INNER JOIN rt0 ON LENGTH((- (v0.c0))) FULL OUTER JOIN vt1 ON ((rt0.c2)/((rt0.c2 IN ()))) WHERE ((((((((((v0.c0)OR(rt0.c5)))AND(rt0.c4))))<((((rt0.c3) IS TRUE))))) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c3, vt1.c1, rt0.c4, v0.c0, rt0.c0, vt1.c0 FROM v0 INNER JOIN rt0 ON LENGTH((- (v0.c0))) FULL OUTER JOIN vt1 ON ((rt0.c2)/((rt0.c2 IN ())));
SELECT vt0.c0, rt0.c3, v0.c0, vt1.c0 FROM vt1, vt2, rt0, vt0, v0 GROUP BY vt0.c0, rt0.c3, v0.c0, vt1.c0;
SELECT ALL vt0.c0, rt0.c3, v0.c0, vt1.c0 FROM vt1, vt2, rt0, vt0, v0 WHERE (CAST(((((vt0.c0)AND(rt0.c4)))OR(0.8371395788671978)) AS NUMERIC)) GROUP BY vt0.c0, rt0.c3, v0.c0, vt1.c0 UNION SELECT ALL vt0.c0, rt0.c3, v0.c0, vt1.c0 FROM vt1, vt2, rt0, vt0, v0 WHERE ((NOT (CAST(((((vt0.c0)AND(rt0.c4)))OR(0.8371395788671978)) AS NUMERIC)))) GROUP BY vt0.c0, rt0.c3, v0.c0, vt1.c0 UNION SELECT vt0.c0, rt0.c3, v0.c0, vt1.c0 FROM vt1, vt2, rt0, vt0, v0 WHERE (((CAST(((((vt0.c0)AND(rt0.c4)))OR(0.8371395788671978)) AS NUMERIC)) ISNULL)) GROUP BY vt0.c0, rt0.c3, v0.c0, vt1.c0;
SELECT vt0.c0, rt0.c3, v0.c0, vt1.c0 FROM vt1, vt2, rt0, vt0, v0 GROUP BY vt0.c0, rt0.c3, v0.c0, vt1.c0;
SELECT ALL vt1.c1, vt1.c0, v0.c0 FROM v0, vt1 GROUP BY vt1.c1, vt1.c0, v0.c0;
SELECT vt1.c1, vt1.c0, v0.c0 FROM v0, vt1 GROUP BY vt1.c1, vt1.c0, v0.c0 HAVING GROUP_CONCAT(((vt1.c0) NOT BETWEEN (MIN(COUNT(*))) AND (COUNT(vt1.c0)))) UNION ALL SELECT ALL vt1.c1, vt1.c0, v0.c0 FROM v0, vt1 GROUP BY vt1.c1, vt1.c0, v0.c0 HAVING (NOT (GROUP_CONCAT(((vt1.c0) NOT BETWEEN (MIN(COUNT(*))) AND (COUNT(vt1.c0)))))) UNION ALL SELECT vt1.c1, vt1.c0, v0.c0 FROM v0, vt1 GROUP BY vt1.c1, vt1.c0, v0.c0 HAVING ((GROUP_CONCAT(((vt1.c0) NOT BETWEEN (MIN(COUNT(*))) AND (COUNT(vt1.c0))))) ISNULL);
SELECT vt0.c1, vt2.c0, vt0.c0 FROM vt2, vt0;
SELECT ALL vt0.c1, vt2.c0, vt0.c0 FROM vt2, vt0 WHERE (CAST(vt0.c1 COLLATE BINARY AS REAL)) UNION ALL SELECT vt0.c1, vt2.c0, vt0.c0 FROM vt2, vt0 WHERE ((NOT (CAST(vt0.c1 COLLATE BINARY AS REAL)))) UNION ALL SELECT ALL vt0.c1, vt2.c0, vt0.c0 FROM vt2, vt0 WHERE (((CAST(vt0.c1 COLLATE BINARY AS REAL)) ISNULL));
SELECT vt0.c1, vt2.c0, vt0.c0 FROM vt2, vt0;
SELECT DISTINCT v0.c0, vt1.c1, vt1.c0 FROM v0, vt1;
SELECT DISTINCT v0.c0, vt1.c1, vt1.c0 FROM v0, vt1 WHERE ((((vt1.c0)) BETWEEN ((v0.c0 COLLATE NOCASE)) AND ((CASE vt1.c1  WHEN vt1.c1 THEN v0.c0 END)))) UNION SELECT DISTINCT v0.c0, vt1.c1, vt1.c0 FROM v0, vt1 WHERE ((NOT ((((vt1.c0)) BETWEEN ((v0.c0 COLLATE NOCASE)) AND ((CASE vt1.c1  WHEN vt1.c1 THEN v0.c0 END)))))) UNION SELECT DISTINCT v0.c0, vt1.c1, vt1.c0 FROM v0, vt1 WHERE ((((((vt1.c0)) BETWEEN ((v0.c0 COLLATE NOCASE)) AND ((CASE vt1.c1  WHEN vt1.c1 THEN v0.c0 END)))) ISNULL));
SELECT DISTINCT v0.c0, vt1.c1, vt1.c0 FROM v0, vt1;
SELECT ALL v0.c0, vt2.c0 FROM v0, rt0, vt0, vt2 GROUP BY v0.c0, vt2.c0;
SELECT ALL v0.c0, vt2.c0 FROM v0, rt0, vt0, vt2 WHERE (vt0.c0) GROUP BY v0.c0, vt2.c0 UNION SELECT ALL v0.c0, vt2.c0 FROM v0, rt0, vt0, vt2 WHERE ((NOT (vt0.c0))) GROUP BY v0.c0, vt2.c0 UNION SELECT ALL v0.c0, vt2.c0 FROM v0, rt0, vt0, vt2 WHERE (((vt0.c0) ISNULL)) GROUP BY v0.c0, vt2.c0;
SELECT ALL v0.c0, vt2.c0 FROM v0, rt0, vt0, vt2 GROUP BY v0.c0, vt2.c0;
SELECT ALL rt0.c3, v0.c0, vt0.c1, rt0.c0, rt0.c4, rt0.c1, rt0.c2, vt1.c0, rt0.c5 FROM vt0, rt0 INNER JOIN vt1 ON '-967437315' CROSS JOIN vt2 ON (((((((('J[{R')AND(rt0.c1 COLLATE NOCASE)))AND(CAST(vt0.c1 AS NUMERIC))))AND(((vt0.c1) NOTNULL))))AND(((rt0.c4)GLOB(NULL)))) INNER JOIN v0 ON ((((((((((v0.c0)OR(v0.c0)))AND(vt0.c0)))AND(vt2.c0)))AND(vt0.c0))) NOT NULL) GROUP BY rt0.c3, v0.c0, vt0.c1, rt0.c0, rt0.c4, rt0.c1, rt0.c2, vt1.c0, rt0.c5;
SELECT rt0.c3, v0.c0, vt0.c1, rt0.c0, rt0.c4, rt0.c1, rt0.c2, vt1.c0, rt0.c5 FROM vt0, rt0 INNER JOIN vt1 ON '-967437315' CROSS JOIN vt2 ON (((((((('J[{R')AND(rt0.c1 COLLATE NOCASE)))AND(CAST(vt0.c1 AS NUMERIC))))AND(((vt0.c1) NOTNULL))))AND(((rt0.c4)GLOB(NULL)))) INNER JOIN v0 ON ((((((((((v0.c0)OR(v0.c0)))AND(vt0.c0)))AND(vt2.c0)))AND(vt0.c0))) NOT NULL) GROUP BY rt0.c3, v0.c0, vt0.c1, rt0.c0, rt0.c4, rt0.c1, rt0.c2, vt1.c0, rt0.c5 HAVING (+ (COUNT(*))) COLLATE BINARY UNION ALL SELECT ALL rt0.c3, v0.c0, vt0.c1, rt0.c0, rt0.c4, rt0.c1, rt0.c2, vt1.c0, rt0.c5 FROM vt0, rt0 INNER JOIN vt1 ON '-967437315' CROSS JOIN vt2 ON (((((((('J[{R')AND(rt0.c1 COLLATE NOCASE)))AND(CAST(vt0.c1 AS NUMERIC))))AND(((vt0.c1) NOTNULL))))AND(((rt0.c4)GLOB(NULL)))) INNER JOIN v0 ON ((((((((((v0.c0)OR(v0.c0)))AND(vt0.c0)))AND(vt2.c0)))AND(vt0.c0))) NOT NULL) GROUP BY rt0.c3, v0.c0, vt0.c1, rt0.c0, rt0.c4, rt0.c1, rt0.c2, vt1.c0, rt0.c5 HAVING (NOT ((+ (COUNT(*))) COLLATE BINARY)) UNION ALL SELECT ALL rt0.c3, v0.c0, vt0.c1, rt0.c0, rt0.c4, rt0.c1, rt0.c2, vt1.c0, rt0.c5 FROM vt0, rt0 INNER JOIN vt1 ON '-967437315' CROSS JOIN vt2 ON (((((((('J[{R')AND(rt0.c1 COLLATE NOCASE)))AND(CAST(vt0.c1 AS NUMERIC))))AND(((vt0.c1) NOTNULL))))AND(((rt0.c4)GLOB(NULL)))) INNER JOIN v0 ON ((((((((((v0.c0)OR(v0.c0)))AND(vt0.c0)))AND(vt2.c0)))AND(vt0.c0))) NOT NULL) GROUP BY rt0.c3, v0.c0, vt0.c1, rt0.c0, rt0.c4, rt0.c1, rt0.c2, vt1.c0, rt0.c5 HAVING (((+ (COUNT(*))) COLLATE BINARY) ISNULL);
SELECT ALL rt0.c3, v0.c0, vt0.c1, rt0.c0, rt0.c4, rt0.c1, rt0.c2, vt1.c0, rt0.c5 FROM vt0, rt0 INNER JOIN vt1 ON '-967437315' CROSS JOIN vt2 ON (((((((('J[{R')AND(rt0.c1 COLLATE NOCASE)))AND(CAST(vt0.c1 AS NUMERIC))))AND(((vt0.c1) NOTNULL))))AND(((rt0.c4)GLOB(NULL)))) INNER JOIN v0 ON ((((((((((v0.c0)OR(v0.c0)))AND(vt0.c0)))AND(vt2.c0)))AND(vt0.c0))) NOT NULL) GROUP BY rt0.c3, v0.c0, vt0.c1, rt0.c0, rt0.c4, rt0.c1, rt0.c2, vt1.c0, rt0.c5;
SELECT rt0.c3, v0.c0, vt0.c1, rt0.c0, rt0.c4, rt0.c1, rt0.c2, vt1.c0, rt0.c5 FROM vt0, rt0 INNER JOIN vt1 ON '-967437315' CROSS JOIN vt2 ON (((((((('J[{R')AND(rt0.c1 COLLATE NOCASE)))AND(CAST(vt0.c1 AS NUMERIC))))AND(((vt0.c1) NOTNULL))))AND(((rt0.c4)GLOB(NULL)))) INNER JOIN v0 ON ((((((((((v0.c0)OR(v0.c0)))AND(vt0.c0)))AND(vt2.c0)))AND(vt0.c0))) NOT NULL) GROUP BY rt0.c3, v0.c0, vt0.c1, rt0.c0, rt0.c4, rt0.c1, rt0.c2, vt1.c0, rt0.c5 HAVING (+ (COUNT(*))) COLLATE BINARY UNION ALL SELECT ALL rt0.c3, v0.c0, vt0.c1, rt0.c0, rt0.c4, rt0.c1, rt0.c2, vt1.c0, rt0.c5 FROM vt0, rt0 INNER JOIN vt1 ON '-967437315' CROSS JOIN vt2 ON (((((((('J[{R')AND(rt0.c1 COLLATE NOCASE)))AND(CAST(vt0.c1 AS NUMERIC))))AND(((vt0.c1) NOTNULL))))AND(((rt0.c4)GLOB(NULL)))) INNER JOIN v0 ON ((((((((((v0.c0)OR(v0.c0)))AND(vt0.c0)))AND(vt2.c0)))AND(vt0.c0))) NOT NULL) GROUP BY rt0.c3, v0.c0, vt0.c1, rt0.c0, rt0.c4, rt0.c1, rt0.c2, vt1.c0, rt0.c5 HAVING (NOT ((+ (COUNT(*))) COLLATE BINARY)) UNION ALL SELECT ALL rt0.c3, v0.c0, vt0.c1, rt0.c0, rt0.c4, rt0.c1, rt0.c2, vt1.c0, rt0.c5 FROM vt0, rt0 INNER JOIN vt1 ON '-967437315' CROSS JOIN vt2 ON (((((((('J[{R')AND(rt0.c1 COLLATE NOCASE)))AND(CAST(vt0.c1 AS NUMERIC))))AND(((vt0.c1) NOTNULL))))AND(((rt0.c4)GLOB(NULL)))) INNER JOIN v0 ON ((((((((((v0.c0)OR(v0.c0)))AND(vt0.c0)))AND(vt2.c0)))AND(vt0.c0))) NOT NULL) GROUP BY rt0.c3, v0.c0, vt0.c1, rt0.c0, rt0.c4, rt0.c1, rt0.c2, vt1.c0, rt0.c5 HAVING (((+ (COUNT(*))) COLLATE BINARY) ISNULL);
SELECT ALL rt0.c3, v0.c0, vt0.c1, rt0.c0, rt0.c4, rt0.c1, rt0.c2, vt1.c0, rt0.c5 FROM vt0, rt0 INNER JOIN vt1 ON '-967437315' CROSS JOIN vt2 ON (((((((('J[{R')AND(rt0.c1 COLLATE NOCASE)))AND(CAST(vt0.c1 AS NUMERIC))))AND(((vt0.c1) NOTNULL))))AND(((rt0.c4)GLOB(NULL)))) INNER JOIN v0 ON ((((((((((v0.c0)OR(v0.c0)))AND(vt0.c0)))AND(vt2.c0)))AND(vt0.c0))) NOT NULL) GROUP BY rt0.c3, v0.c0, vt0.c1, rt0.c0, rt0.c4, rt0.c1, rt0.c2, vt1.c0, rt0.c5;
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE (CASE WHEN ((((rt0.c3)AND(rt0.c0)))OR(x'')) THEN (rt0.c1 IN (rt0.c1, rt0.c2)) ELSE CAST(rt0.c1 AS NUMERIC) END) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (CASE WHEN ((((rt0.c3)AND(rt0.c0)))OR(x'')) THEN (rt0.c1 IN (rt0.c1, rt0.c2)) ELSE CAST(rt0.c1 AS NUMERIC) END))) UNION ALL SELECT * FROM rt0 WHERE (((CASE WHEN ((((rt0.c3)AND(rt0.c0)))OR(x'')) THEN (rt0.c1 IN (rt0.c1, rt0.c2)) ELSE CAST(rt0.c1 AS NUMERIC) END) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT rt0.c4, vt1.c0, v0.c0, rt0.c5, vt0.c1, rt0.c3, rt0.c1, rt0.c0, vt1.c1, vt0.c0, rt0.c2 FROM vt0, vt1, rt0, vt2 NATURAL JOIN v0;
SELECT DISTINCT rt0.c4, vt1.c0, v0.c0, rt0.c5, vt0.c1, rt0.c3, rt0.c1, rt0.c0, vt1.c1, vt0.c0, rt0.c2 FROM vt0, vt1, rt0, vt2 NATURAL JOIN v0 WHERE (LIKE(rt0.c5 COLLATE BINARY, (((rt0.c3))<((rt0.c0))), 'J')) UNION SELECT DISTINCT rt0.c4, vt1.c0, v0.c0, rt0.c5, vt0.c1, rt0.c3, rt0.c1, rt0.c0, vt1.c1, vt0.c0, rt0.c2 FROM vt0, vt1, rt0, vt2 NATURAL JOIN v0 WHERE ((NOT (LIKE(rt0.c5 COLLATE BINARY, (((rt0.c3))<((rt0.c0))), 'J')))) UNION SELECT DISTINCT rt0.c4, vt1.c0, v0.c0, rt0.c5, vt0.c1, rt0.c3, rt0.c1, rt0.c0, vt1.c1, vt0.c0, rt0.c2 FROM vt0, vt1, rt0, vt2 NATURAL JOIN v0 WHERE (((LIKE(rt0.c5 COLLATE BINARY, (((rt0.c3))<((rt0.c0))), 'J')) ISNULL));
SELECT DISTINCT rt0.c4, vt1.c0, v0.c0, rt0.c5, vt0.c1, rt0.c3, rt0.c1, rt0.c0, vt1.c1, vt0.c0, rt0.c2 FROM vt0, vt1, rt0, vt2 NATURAL JOIN v0;
SELECT vt0.c0, vt1.c0 FROM rt0 CROSS JOIN vt1 ON 0.8157998909933598 LEFT OUTER JOIN vt0 ON (- (LIKELY(vt0.c0))) CROSS JOIN vt2 ON (((+ (rt0.c4))) BETWEEN (((rt0.c0) BETWEEN (x'') AND (vt0.c1))) AND ((((rt0.c1))<>((vt0.c0))))) GROUP BY vt0.c0, vt1.c0;
SELECT vt0.c0, vt1.c0 FROM rt0 CROSS JOIN vt1 ON 0.8157998909933598 LEFT OUTER JOIN vt0 ON (- (LIKELY(vt0.c0))) CROSS JOIN vt2 ON (((+ (rt0.c4))) BETWEEN (((rt0.c0) BETWEEN (x'') AND (vt0.c1))) AND ((((rt0.c1))!=((vt0.c0))))) WHERE ('{}') GROUP BY vt0.c0, vt1.c0 UNION SELECT vt0.c0, vt1.c0 FROM rt0 CROSS JOIN vt1 ON 0.8157998909933598 LEFT OUTER JOIN vt0 ON (- (LIKELY(vt0.c0))) CROSS JOIN vt2 ON (((+ (rt0.c4))) BETWEEN (((rt0.c0) BETWEEN (x'') AND (vt0.c1))) AND ((((rt0.c1))<>((vt0.c0))))) WHERE ((NOT ('{}'))) GROUP BY vt0.c0, vt1.c0 UNION SELECT vt0.c0, vt1.c0 FROM rt0 CROSS JOIN vt1 ON 0.8157998909933598 LEFT OUTER JOIN vt0 ON (- (LIKELY(vt0.c0))) CROSS JOIN vt2 ON (((+ (rt0.c4))) BETWEEN (((rt0.c0) BETWEEN (x'') AND (vt0.c1))) AND ((((rt0.c1))!=((vt0.c0))))) WHERE ((('{}') ISNULL)) GROUP BY vt0.c0, vt1.c0;
SELECT vt0.c0, vt1.c0 FROM rt0 CROSS JOIN vt1 ON 0.8157998909933598 LEFT OUTER JOIN vt0 ON (- (LIKELY(vt0.c0))) CROSS JOIN vt2 ON (((+ (rt0.c4))) BETWEEN (((rt0.c0) BETWEEN (x'') AND (vt0.c1))) AND ((((rt0.c1))<>((vt0.c0))))) GROUP BY vt0.c0, vt1.c0;
SELECT vt1.c1, vt0.c0, vt1.c0, vt0.c1 FROM vt0, vt1 GROUP BY vt1.c1, vt0.c0, vt1.c0, vt0.c1;
SELECT vt1.c1, vt0.c0, vt1.c0, vt0.c1 FROM vt0, vt1 GROUP BY vt1.c1, vt0.c0, vt1.c0, vt0.c1 HAVING AVG(CAST(vt0.c0 AS REAL)) UNION ALL SELECT vt1.c1, vt0.c0, vt1.c0, vt0.c1 FROM vt0, vt1 GROUP BY vt1.c1, vt0.c0, vt1.c0, vt0.c1 HAVING (NOT (AVG(CAST(vt0.c0 AS REAL)))) UNION ALL SELECT ALL vt1.c1, vt0.c0, vt1.c0, vt0.c1 FROM vt0, vt1 GROUP BY vt1.c1, vt0.c0, vt1.c0, vt0.c1 HAVING ((AVG(CAST(vt0.c0 AS REAL))) ISNULL);
SELECT vt1.c1, vt0.c0, vt1.c0, vt0.c1 FROM vt0, vt1 GROUP BY vt1.c1, vt0.c0, vt1.c0, vt0.c1;
SELECT vt1.c1, vt0.c0, vt1.c0, vt0.c1 FROM vt0, vt1 GROUP BY vt1.c1, vt0.c0, vt1.c0, vt0.c1 HAVING AVG(CAST(vt0.c0 AS REAL)) UNION ALL SELECT vt1.c1, vt0.c0, vt1.c0, vt0.c1 FROM vt0, vt1 GROUP BY vt1.c1, vt0.c0, vt1.c0, vt0.c1 HAVING (NOT (AVG(CAST(vt0.c0 AS REAL)))) UNION ALL SELECT ALL vt1.c1, vt0.c0, vt1.c0, vt0.c1 FROM vt0, vt1 GROUP BY vt1.c1, vt0.c0, vt1.c0, vt0.c1 HAVING ((AVG(CAST(vt0.c0 AS REAL))) ISNULL);
SELECT vt1.c1, vt0.c0, vt1.c0, vt0.c1 FROM vt0, vt1 GROUP BY vt1.c1, vt0.c0, vt1.c0, vt0.c1;
SELECT * FROM vt1, vt0 FULL OUTER JOIN vt2 ON (((((vt1.c0 IN (vt1.c0, vt0.c1)))OR(((((vt1.c1)OR(0.13987294603421552)))OR(vt1.c0)))))AND((vt2.c0 IN ())));
SELECT * FROM vt1, vt0 FULL OUTER JOIN vt2 ON (((((vt1.c0 IN (vt1.c0, vt0.c1)))OR(((((vt1.c1)OR(0.13987294603421552)))OR(vt1.c0)))))AND((vt2.c0 IN ()))) WHERE (((((LIKELY('T''QVR3 ^3'))OR(vt1.c1 COLLATE RTRIM)))AND(vt0.c0))) UNION ALL SELECT ALL * FROM vt1 NOT INDEXED, vt0 FULL OUTER JOIN vt2 ON (((((vt1.c0 IN (vt1.c0, vt0.c1)))OR(((((vt1.c1)OR(0.13987294603421552)))OR(vt1.c0)))))AND((vt2.c0 IN ()))) WHERE ((NOT (((((LIKELY('T''QVR3 ^3'))OR(vt1.c1 COLLATE RTRIM)))AND(vt0.c0))))) UNION ALL SELECT ALL * FROM vt1, vt0 FULL OUTER JOIN vt2 ON (((((vt1.c0 IN (vt1.c0, vt0.c1)))OR(((((vt1.c1)OR(0.13987294603421552)))OR(vt1.c0)))))AND((vt2.c0 IN ()))) WHERE (((((((LIKELY('T''QVR3 ^3'))OR(vt1.c1 COLLATE RTRIM)))AND(vt0.c0))) ISNULL));
SELECT * FROM vt1, vt0 FULL OUTER JOIN vt2 ON (((((vt1.c0 IN (vt1.c0, vt0.c1)))OR(((((vt1.c1)OR(0.13987294603421552)))OR(vt1.c0)))))AND((vt2.c0 IN ())));
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE ((((0.45971693068580255))>=((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT ((((0.45971693068580255))>=((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((((((0.45971693068580255))>=((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))))) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT ALL vt0.c0, vt1.c0, rt0.c2, rt0.c3, rt0.c0, rt0.c1, rt0.c4, v0.c0, vt0.c1, vt2.c0, vt1.c1, rt0.c5 FROM vt0, vt2 NOT INDEXED, v0, rt0 INNER JOIN vt1 ON (- (vt1.c0)) COLLATE NOCASE GROUP BY vt0.c0, vt1.c0, rt0.c2, rt0.c3, rt0.c0, rt0.c1, rt0.c4, v0.c0, vt0.c1, vt2.c0, vt1.c1, rt0.c5;
SELECT ALL vt0.c0, vt1.c0, rt0.c2, rt0.c3, rt0.c0, rt0.c1, rt0.c4, v0.c0, vt0.c1, vt2.c0, vt1.c1, rt0.c5 FROM vt0, vt2, v0, rt0 INNER JOIN vt1 ON (- (vt1.c0)) COLLATE NOCASE WHERE (x'60e1') GROUP BY vt0.c0, vt1.c0, rt0.c2, rt0.c3, rt0.c0, rt0.c1, rt0.c4, v0.c0, vt0.c1, vt2.c0, vt1.c1, rt0.c5 UNION SELECT ALL vt0.c0, vt1.c0, rt0.c2, rt0.c3, rt0.c0, rt0.c1, rt0.c4, v0.c0, vt0.c1, vt2.c0, vt1.c1, rt0.c5 FROM vt0, vt2, v0, rt0 INNER JOIN vt1 ON (- (vt1.c0)) COLLATE NOCASE WHERE ((NOT (x'60e1'))) GROUP BY vt0.c0, vt1.c0, rt0.c2, rt0.c3, rt0.c0, rt0.c1, rt0.c4, v0.c0, vt0.c1, vt2.c0, vt1.c1, rt0.c5 UNION SELECT vt0.c0, vt1.c0, rt0.c2, rt0.c3, rt0.c0, rt0.c1, rt0.c4, v0.c0, vt0.c1, vt2.c0, vt1.c1, rt0.c5 FROM vt0, vt2, v0, rt0 INNER JOIN vt1 ON (- (vt1.c0)) COLLATE NOCASE WHERE (((x'60e1') ISNULL)) GROUP BY vt0.c0, vt1.c0, rt0.c2, rt0.c3, rt0.c0, rt0.c1, rt0.c4, v0.c0, vt0.c1, vt2.c0, vt1.c1, rt0.c5;
SELECT ALL vt0.c0, vt1.c0, rt0.c2, rt0.c3, rt0.c0, rt0.c1, rt0.c4, v0.c0, vt0.c1, vt2.c0, vt1.c1, rt0.c5 FROM vt0, vt2 NOT INDEXED, v0, rt0 INNER JOIN vt1 ON (- (vt1.c0)) COLLATE NOCASE GROUP BY vt0.c0, vt1.c0, rt0.c2, rt0.c3, rt0.c0, rt0.c1, rt0.c4, v0.c0, vt0.c1, vt2.c0, vt1.c1, rt0.c5;
SELECT ALL rt0.c4, rt0.c3, rt0.c0, rt0.c1, rt0.c5, rt0.c2 FROM rt0 GROUP BY rt0.c4, rt0.c3, rt0.c0, rt0.c1, rt0.c5, rt0.c2;
SELECT rt0.c4, rt0.c3, rt0.c0, rt0.c1, rt0.c5, rt0.c2 FROM rt0 GROUP BY rt0.c4, rt0.c3, rt0.c0, rt0.c1, rt0.c5, rt0.c2 HAVING ((((MAX(SUM(NULL)))OR(((((((((rt0.c5)AND(AVG(AVG(x'')))))AND(SUM(AVG(SUM(rt0.c3))))))AND(GROUP_CONCAT(MAX(AVG(MAX(AVG(rt0.c5))))))))OR(COUNT(*))))))OR(rt0.c3 COLLATE NOCASE)) UNION ALL SELECT ALL rt0.c4, rt0.c3, rt0.c0, rt0.c1, rt0.c5, rt0.c2 FROM rt0 GROUP BY rt0.c4, rt0.c3, rt0.c0, rt0.c1, rt0.c5, rt0.c2 HAVING (NOT (((((MAX(SUM(NULL)))OR(((((((((rt0.c5)AND(AVG(AVG(x'')))))AND(SUM(AVG(SUM(rt0.c3))))))AND(GROUP_CONCAT(MAX(AVG(MAX(AVG(rt0.c5))))))))OR(COUNT(*))))))OR(rt0.c3 COLLATE NOCASE)))) UNION ALL SELECT ALL rt0.c4, rt0.c3, rt0.c0, rt0.c1, rt0.c5, rt0.c2 FROM rt0 GROUP BY rt0.c4, rt0.c3, rt0.c0, rt0.c1, rt0.c5, rt0.c2 HAVING ((((((MAX(SUM(NULL)))OR(((((((((rt0.c5)AND(AVG(AVG(x'')))))AND(SUM(AVG(SUM(rt0.c3))))))AND(GROUP_CONCAT(MAX(AVG(MAX(AVG(rt0.c5))))))))OR(COUNT(*))))))OR(rt0.c3 COLLATE NOCASE))) ISNULL);
SELECT ALL * FROM v0, vt1;
SELECT ALL * FROM v0, vt1 WHERE ((((v0.c0, vt1.c1, vt1.c1)) BETWEEN ((v0.c0, vt1.c1, v0.c0)) AND ((vt1.c0, v0.c0, vt1.c1))) COLLATE NOCASE) UNION ALL SELECT * FROM v0, vt1 WHERE ((NOT ((((v0.c0, vt1.c1, vt1.c1)) BETWEEN ((v0.c0, vt1.c1, v0.c0)) AND ((vt1.c0, v0.c0, vt1.c1))) COLLATE NOCASE))) UNION ALL SELECT * FROM v0, vt1 WHERE ((((((v0.c0, vt1.c1, vt1.c1)) BETWEEN ((v0.c0, vt1.c1, v0.c0)) AND ((vt1.c0, v0.c0, vt1.c1))) COLLATE NOCASE) ISNULL));
SELECT ALL * FROM v0, vt1;
SELECT DISTINCT vt0.c1, v0.c0, vt1.c0, rt0.c4, rt0.c5, rt0.c3, vt2.c0, rt0.c0, vt0.c0, rt0.c2, rt0.c1, vt1.c1 FROM vt1, vt2, rt0, vt0 INNER JOIN v0 ON ((((((((NULLIF(vt1.c1, rt0.c1))OR(x'6799')))AND(((((((((rt0.c5)OR(rt0.c4)))AND(v0.c0)))OR(rt0.c0)))OR(rt0.c5)))))OR(CASE WHEN vt0.c1 THEN rt0.c3 END)))AND(CASE rt0.c4  WHEN v0.c0 THEN rt0.c1 ELSE rt0.c2 END));
SELECT DISTINCT vt0.c1, v0.c0, vt1.c0, rt0.c4, rt0.c5, rt0.c3, vt2.c0, rt0.c0, vt0.c0, rt0.c2, rt0.c1, vt1.c1 FROM vt1, vt2, rt0, vt0 INNER JOIN v0 ON ((((((((NULLIF(vt1.c1, rt0.c1))OR(x'6799')))AND(((((((((rt0.c5)OR(rt0.c4)))AND(v0.c0)))OR(rt0.c0)))OR(rt0.c5)))))OR(CASE WHEN vt0.c1 THEN rt0.c3 END)))AND(CASE rt0.c4  WHEN v0.c0 THEN rt0.c1 ELSE rt0.c2 END)) WHERE ((((((('-540922760')AND(rt0.c1)))OR(0.37308667775756743)))IS NOT('867057196'))) UNION SELECT DISTINCT vt0.c1, v0.c0, vt1.c0, rt0.c4, rt0.c5, rt0.c3, vt2.c0, rt0.c0, vt0.c0, rt0.c2, rt0.c1, vt1.c1 FROM vt1, vt2 NOT INDEXED, rt0, vt0 INNER JOIN v0 ON ((((((((NULLIF(vt1.c1, rt0.c1))OR(x'6799')))AND(((((((((rt0.c5)OR(rt0.c4)))AND(v0.c0)))OR(rt0.c0)))OR(rt0.c5)))))OR(CASE WHEN vt0.c1 THEN rt0.c3 END)))AND(CASE rt0.c4  WHEN v0.c0 THEN rt0.c1 ELSE rt0.c2 END)) WHERE ((NOT ((((((('-540922760')AND(rt0.c1)))OR(0.37308667775756743)))IS NOT('867057196'))))) UNION SELECT DISTINCT vt0.c1, v0.c0, vt1.c0, rt0.c4, rt0.c5, rt0.c3, vt2.c0, rt0.c0, vt0.c0, rt0.c2, rt0.c1, vt1.c1 FROM vt1, vt2, rt0, vt0 INNER JOIN v0 ON ((((((((NULLIF(vt1.c1, rt0.c1))OR(x'6799')))AND(((((((((rt0.c5)OR(rt0.c4)))AND(v0.c0)))OR(rt0.c0)))OR(rt0.c5)))))OR(CASE WHEN vt0.c1 THEN rt0.c3 END)))AND(CASE rt0.c4  WHEN v0.c0 THEN rt0.c1 ELSE rt0.c2 END)) WHERE ((((((((('-540922760')AND(rt0.c1)))OR(0.37308667775756743)))IS NOT('867057196'))) ISNULL));
SELECT DISTINCT vt0.c1, v0.c0, vt1.c0, rt0.c4, rt0.c5, rt0.c3, vt2.c0, rt0.c0, vt0.c0, rt0.c2, rt0.c1, vt1.c1 FROM vt1, vt2, rt0, vt0 INNER JOIN v0 ON ((((((((NULLIF(vt1.c1, rt0.c1))OR(x'6799')))AND(((((((((rt0.c5)OR(rt0.c4)))AND(v0.c0)))OR(rt0.c0)))OR(rt0.c5)))))OR(CASE WHEN vt0.c1 THEN rt0.c3 END)))AND(CASE rt0.c4  WHEN v0.c0 THEN rt0.c1 ELSE rt0.c2 END));
SELECT vt0.c1, vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c1, vt0.c0, v0.c0;
SELECT vt0.c1, vt0.c0, v0.c0 FROM v0, vt0 WHERE (((((((((TOTAL_CHANGES())AND(x'')))OR(NULL)))AND((vt0.c0 IN (v0.c0, vt0.c0)))))OR(vt0.c1 COLLATE BINARY))) GROUP BY vt0.c1, vt0.c0, v0.c0 UNION SELECT ALL vt0.c1, vt0.c0, v0.c0 FROM v0, vt0 WHERE ((NOT (((((((((TOTAL_CHANGES())AND(x'')))OR(NULL)))AND((vt0.c0 IN (v0.c0, vt0.c0)))))OR(vt0.c1 COLLATE BINARY))))) GROUP BY vt0.c1, vt0.c0, v0.c0 UNION SELECT ALL vt0.c1, vt0.c0, v0.c0 FROM v0, vt0 WHERE (((((((((((TOTAL_CHANGES())AND(x'')))OR(NULL)))AND((vt0.c0 IN (v0.c0, vt0.c0)))))OR(vt0.c1 COLLATE BINARY))) ISNULL)) GROUP BY vt0.c1, vt0.c0, v0.c0;
SELECT vt0.c1, vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c1, vt0.c0, v0.c0;
SELECT ALL vt1.c1, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c1, vt0.c0;
SELECT ALL vt1.c1, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c1, vt0.c0 HAVING ((TOTAL(SUM(COUNT(*))))|(((((vt1.c1)AND(vt0.c0)))OR(vt1.c0)))) UNION ALL SELECT vt1.c1, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c1, vt0.c0 HAVING (NOT (((TOTAL(SUM(COUNT(*))))|(((((vt1.c1)AND(vt0.c0)))OR(vt1.c0)))))) UNION ALL SELECT vt1.c1, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c1, vt0.c0 HAVING ((((TOTAL(SUM(COUNT(*))))|(((((vt1.c1)AND(vt0.c0)))OR(vt1.c0))))) ISNULL);
SELECT ALL * FROM rt0, vt2, v0 NATURAL JOIN vt0;
SELECT * FROM rt0, vt2, v0 NATURAL JOIN vt0 WHERE (((((((rt0.c1) IS FALSE))AND(CAST(rt0.c3 AS NUMERIC))))OR(((rt0.c5)GLOB(vt0.c0))))) UNION ALL SELECT * FROM rt0, vt2 NOT INDEXED, v0 NATURAL JOIN vt0 WHERE ((NOT (((((((rt0.c1) IS FALSE))AND(CAST(rt0.c3 AS NUMERIC))))OR(((rt0.c5)GLOB(vt0.c0))))))) UNION ALL SELECT ALL * FROM rt0, vt2, v0 NATURAL JOIN vt0 WHERE (((((((((rt0.c1) IS FALSE))AND(CAST(rt0.c3 AS NUMERIC))))OR(((rt0.c5)GLOB(vt0.c0))))) ISNULL));
SELECT ALL * FROM rt0, vt2, v0 NATURAL JOIN vt0;
SELECT DISTINCT * FROM vt2, v0, vt1, vt0, rt0;
SELECT DISTINCT * FROM vt2, v0, vt1, vt0, rt0 WHERE ((((NULL, vt0.c1, rt0.c2)) NOT BETWEEN ((((((rt0.c4)OR(vt2.c0)))AND(vt1.c1)), (((vt1.c1)) BETWEEN ((vt0.c1)) AND ((rt0.c3))), ((vt1.c0) NOT NULL))) AND ((((rt0.c0)>(vt1.c1)), (- (rt0.c2)), rt0.c0)))) UNION SELECT DISTINCT * FROM vt2, v0, vt1, vt0, rt0 WHERE ((NOT ((((NULL, vt0.c1, rt0.c2)) NOT BETWEEN ((((((rt0.c4)OR(vt2.c0)))AND(vt1.c1)), (((vt1.c1)) BETWEEN ((vt0.c1)) AND ((rt0.c3))), ((vt1.c0) NOT NULL))) AND ((((rt0.c0)>(vt1.c1)), (- (rt0.c2)), rt0.c0)))))) UNION SELECT DISTINCT * FROM vt2, v0, vt1, vt0, rt0 WHERE ((((((NULL, vt0.c1, rt0.c2)) NOT BETWEEN ((((((rt0.c4)OR(vt2.c0)))AND(vt1.c1)), (((vt1.c1)) BETWEEN ((vt0.c1)) AND ((rt0.c3))), ((vt1.c0) NOT NULL))) AND ((((rt0.c0)>(vt1.c1)), (- (rt0.c2)), rt0.c0)))) ISNULL));
SELECT DISTINCT * FROM vt2, v0, vt1, vt0, rt0;
SELECT ALL v0.c0 FROM vt2, v0 RIGHT OUTER JOIN vt1 ON (((vt2.c0)) NOT BETWEEN ((((vt1.c1)||(vt1.c1)))) AND ((vt1.c1))) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM vt2, v0 RIGHT OUTER JOIN vt1 ON (((vt2.c0)) NOT BETWEEN ((((vt1.c1)||(vt1.c1)))) AND ((vt1.c1))) WHERE (((((((((((vt1.c0) NOT NULL))OR(((0.7233727774521076)OR(vt2.c0)))))AND(((v0.c0) NOTNULL))))OR((NOT (vt2.c0)))))OR(((((vt1.c0)OR(vt1.c1)))OR(vt1.c0))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM vt2, v0 RIGHT OUTER JOIN vt1 ON (((vt2.c0)) NOT BETWEEN ((((vt1.c1)||(vt1.c1)))) AND ((vt1.c1))) WHERE ((NOT (((((((((((vt1.c0) NOT NULL))OR(((0.7233727774521076)OR(vt2.c0)))))AND(((v0.c0) NOTNULL))))OR((NOT (vt2.c0)))))OR(((((vt1.c0)OR(vt1.c1)))OR(vt1.c0))))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM vt2, v0 RIGHT OUTER JOIN vt1 ON (((vt2.c0)) NOT BETWEEN ((((vt1.c1)||(vt1.c1)))) AND ((vt1.c1))) WHERE (((((((((((((vt1.c0) NOT NULL))OR(((0.7233727774521076)OR(vt2.c0)))))AND(((v0.c0) NOTNULL))))OR((NOT (vt2.c0)))))OR(((((vt1.c0)OR(vt1.c1)))OR(vt1.c0))))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM vt2, v0 RIGHT OUTER JOIN vt1 ON (((vt2.c0)) NOT BETWEEN ((((vt1.c1)||(vt1.c1)))) AND ((vt1.c1))) GROUP BY v0.c0;
SELECT ALL vt1.c1 FROM vt1, vt2 GROUP BY vt1.c1;
SELECT ALL vt1.c1 FROM vt1, vt2 GROUP BY vt1.c1 HAVING TOTAL(SUM(TOTAL(vt1.c1))) UNION ALL SELECT vt1.c1 FROM vt1, vt2 GROUP BY vt1.c1 HAVING (NOT (TOTAL(SUM(TOTAL(vt1.c1))))) UNION ALL SELECT ALL vt1.c1 FROM vt1, vt2 GROUP BY vt1.c1 HAVING ((TOTAL(SUM(TOTAL(vt1.c1)))) ISNULL);
SELECT ALL v0.c0, vt0.c1, rt0.c0, rt0.c5, rt0.c1, rt0.c3, vt0.c0, rt0.c4 FROM vt0, v0 NATURAL JOIN rt0;
SELECT v0.c0, vt0.c1, rt0.c0, rt0.c5, rt0.c1, rt0.c3, vt0.c0, rt0.c4 FROM vt0, v0 NATURAL JOIN rt0 WHERE (((LOWER(rt0.c5)) NOT BETWEEN (((((rt0.c3)OR(v0.c0)))OR(rt0.c4))) AND (((((rt0.c1)AND(v0.c0)))AND(v0.c0))))) UNION ALL SELECT ALL v0.c0, vt0.c1, rt0.c0, rt0.c5, rt0.c1, rt0.c3, vt0.c0, rt0.c4 FROM vt0, v0 NATURAL JOIN rt0 WHERE ((NOT (((LOWER(rt0.c5)) NOT BETWEEN (((((rt0.c3)OR(v0.c0)))OR(rt0.c4))) AND (((((rt0.c1)AND(v0.c0)))AND(v0.c0))))))) UNION ALL SELECT ALL v0.c0, vt0.c1, rt0.c0, rt0.c5, rt0.c1, rt0.c3, vt0.c0, rt0.c4 FROM vt0, v0 NATURAL JOIN rt0 WHERE (((((LOWER(rt0.c5)) NOT BETWEEN (((((rt0.c3)OR(v0.c0)))OR(rt0.c4))) AND (((((rt0.c1)AND(v0.c0)))AND(v0.c0))))) ISNULL));
SELECT ALL v0.c0, vt0.c1, rt0.c0, rt0.c5, rt0.c1, rt0.c3, vt0.c0, rt0.c4 FROM vt0, v0 NATURAL JOIN rt0;
SELECT DISTINCT * FROM v0, vt1;
SELECT DISTINCT * FROM v0, vt1 WHERE (CAST(CAST(v0.c0 AS BLOB) AS NUMERIC)) UNION SELECT DISTINCT * FROM v0, vt1 WHERE ((NOT (CAST(CAST(v0.c0 AS BLOB) AS NUMERIC)))) UNION SELECT DISTINCT * FROM v0, vt1 WHERE (((CAST(CAST(v0.c0 AS BLOB) AS NUMERIC)) ISNULL));
SELECT DISTINCT * FROM v0, vt1;
SELECT vt0.c0, vt2.c0, vt1.c1, vt1.c0, vt0.c1 FROM v0, vt2, vt0 RIGHT OUTER JOIN vt1 ON CASE WHEN CASE vt2.c0  WHEN v0.c0 THEN 0.6390011735900919 ELSE vt0.c0 END THEN CAST(vt1.c1 AS NUMERIC) ELSE CASE v0.c0  WHEN vt1.c0 THEN vt2.c0 WHEN vt2.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c1 ELSE vt2.c0 END END GROUP BY vt0.c0, vt2.c0, vt1.c1, vt1.c0, vt0.c1;
SELECT vt0.c0, vt2.c0, vt1.c1, vt1.c0, vt0.c1 FROM v0, vt2, vt0 RIGHT OUTER JOIN vt1 ON CASE WHEN CASE vt2.c0  WHEN v0.c0 THEN 0.6390011735900919 ELSE vt0.c0 END THEN CAST(vt1.c1 AS NUMERIC) ELSE CASE v0.c0  WHEN vt1.c0 THEN vt2.c0 WHEN vt2.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c1 ELSE vt2.c0 END END WHERE (((SQLITE_COMPILEOPTION_USED(v0.c0)) IS FALSE)) GROUP BY vt0.c0, vt2.c0, vt1.c1, vt1.c0, vt0.c1 UNION SELECT vt0.c0, vt2.c0, vt1.c1, vt1.c0, vt0.c1 FROM v0, vt2, vt0 RIGHT OUTER JOIN vt1 ON CASE WHEN CASE vt2.c0  WHEN v0.c0 THEN 0.6390011735900919 ELSE vt0.c0 END THEN CAST(vt1.c1 AS NUMERIC) ELSE CASE v0.c0  WHEN vt1.c0 THEN vt2.c0 WHEN vt2.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c1 ELSE vt2.c0 END END WHERE ((NOT (((SQLITE_COMPILEOPTION_USED(v0.c0)) IS FALSE)))) GROUP BY vt0.c0, vt2.c0, vt1.c1, vt1.c0, vt0.c1 UNION SELECT vt0.c0, vt2.c0, vt1.c1, vt1.c0, vt0.c1 FROM v0, vt2, vt0 RIGHT OUTER JOIN vt1 ON CASE WHEN CASE vt2.c0  WHEN v0.c0 THEN 0.6390011735900919 ELSE vt0.c0 END THEN CAST(vt1.c1 AS NUMERIC) ELSE CASE v0.c0  WHEN vt1.c0 THEN vt2.c0 WHEN vt2.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c1 ELSE vt2.c0 END END WHERE (((((SQLITE_COMPILEOPTION_USED(v0.c0)) IS FALSE)) ISNULL)) GROUP BY vt0.c0, vt2.c0, vt1.c1, vt1.c0, vt0.c1;
SELECT vt0.c0, vt2.c0, vt1.c1, vt1.c0, vt0.c1 FROM v0, vt2, vt0 RIGHT OUTER JOIN vt1 ON CASE WHEN CASE vt2.c0  WHEN v0.c0 THEN 0.6390011735900919 ELSE vt0.c0 END THEN CAST(vt1.c1 AS NUMERIC) ELSE CASE v0.c0  WHEN vt1.c0 THEN vt2.c0 WHEN vt2.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c1 ELSE vt2.c0 END END GROUP BY vt0.c0, vt2.c0, vt1.c1, vt1.c0, vt0.c1;
SELECT ALL rt0.c0, rt0.c2, rt0.c3, rt0.c4, rt0.c5 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c3, rt0.c4, rt0.c5;
SELECT rt0.c0, rt0.c2, rt0.c3, rt0.c4, rt0.c5 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c3, rt0.c4, rt0.c5 HAVING ((GROUP_CONCAT(TOTAL(GROUP_CONCAT(rt0.c0))))<<(COUNT(*))) UNION ALL SELECT rt0.c0, rt0.c2, rt0.c3, rt0.c4, rt0.c5 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c3, rt0.c4, rt0.c5 HAVING (NOT (((GROUP_CONCAT(TOTAL(GROUP_CONCAT(rt0.c0))))<<(COUNT(*))))) UNION ALL SELECT ALL rt0.c0, rt0.c2, rt0.c3, rt0.c4, rt0.c5 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c3, rt0.c4, rt0.c5 HAVING ((((GROUP_CONCAT(TOTAL(GROUP_CONCAT(rt0.c0))))<<(COUNT(*)))) ISNULL);
SELECT ALL vt1.c0, vt0.c1, v0.c0, vt1.c1 FROM vt2, vt0, vt1, v0;
SELECT vt1.c0, vt0.c1, v0.c0, vt1.c1 FROM vt2, vt0, vt1, v0 WHERE (0.46158870222187387) UNION ALL SELECT ALL vt1.c0, vt0.c1, v0.c0, vt1.c1 FROM vt2, vt0, vt1, v0 WHERE ((NOT (0.46158870222187387))) UNION ALL SELECT vt1.c0, vt0.c1, v0.c0, vt1.c1 FROM vt2, vt0, vt1, v0 WHERE (((0.46158870222187387) ISNULL));
SELECT ALL vt1.c0, vt0.c1, v0.c0, vt1.c1 FROM vt2, vt0, vt1, v0;
SELECT DISTINCT * FROM vt1, rt0;
SELECT DISTINCT * FROM vt1, rt0 WHERE (rt0.c2) UNION SELECT DISTINCT * FROM vt1 NOT INDEXED, rt0 WHERE ((NOT (rt0.c2))) UNION SELECT DISTINCT * FROM vt1, rt0 WHERE (((rt0.c2) ISNULL));
SELECT DISTINCT * FROM vt1, rt0;
SELECT ALL vt1.c0, rt0.c3 FROM vt1, vt0, rt0 GROUP BY vt1.c0, rt0.c3;
SELECT ALL vt1.c0, rt0.c3 FROM vt1, vt0, rt0 WHERE (vt1.c0) GROUP BY vt1.c0, rt0.c3 UNION SELECT ALL vt1.c0, rt0.c3 FROM vt1, vt0, rt0 WHERE ((NOT (vt1.c0))) GROUP BY vt1.c0, rt0.c3 UNION SELECT vt1.c0, rt0.c3 FROM vt1, vt0, rt0 WHERE (((vt1.c0) ISNULL)) GROUP BY vt1.c0, rt0.c3;
SELECT ALL vt1.c0, rt0.c3 FROM vt1, vt0, rt0 GROUP BY vt1.c0, rt0.c3;
SELECT vt0.c1, vt2.c0, rt0.c1 FROM vt0, rt0, vt2 GROUP BY vt0.c1, vt2.c0, rt0.c1;
SELECT vt0.c1, vt2.c0, rt0.c1 FROM vt0, rt0, vt2 GROUP BY vt0.c1, vt2.c0, rt0.c1 HAVING MAX(MAX(vt0.c0)) UNION ALL SELECT ALL vt0.c1, vt2.c0, rt0.c1 FROM vt0, rt0, vt2 GROUP BY vt0.c1, vt2.c0, rt0.c1 HAVING (NOT (MAX(MAX(vt0.c0)))) UNION ALL SELECT ALL vt0.c1, vt2.c0, rt0.c1 FROM vt0, rt0, vt2 GROUP BY vt0.c1, vt2.c0, rt0.c1 HAVING ((MAX(MAX(vt0.c0))) ISNULL);
SELECT ALL TOTAL(0.13353964005787033) FROM vt1, vt0, rt0, v0, vt2;
SELECT * FROM vt2, vt0, v0, vt1;
SELECT * FROM vt2, vt0, v0, vt1 WHERE ((((NOT (vt2.c0))) NOT BETWEEN ((NOT (vt0.c0))) AND ('ㄝV)P'))) UNION ALL SELECT ALL * FROM vt2, vt0, v0, vt1 WHERE ((NOT ((((NOT (vt2.c0))) NOT BETWEEN ((NOT (vt0.c0))) AND ('ㄝV)P'))))) UNION ALL SELECT ALL * FROM vt2, vt0, v0, vt1 WHERE ((((((NOT (vt2.c0))) NOT BETWEEN ((NOT (vt0.c0))) AND ('ㄝV)P'))) ISNULL));
SELECT * FROM vt2, vt0, v0, vt1;
SELECT DISTINCT * FROM vt0, rt0 RIGHT OUTER JOIN vt2 ON (~ ((((rt0.c0)) NOT BETWEEN ((rt0.c5)) AND ((vt0.c1))))) LEFT OUTER JOIN v0 ON ((rt0.c2)>((((vt0.c0, rt0.c0, v0.c0)) BETWEEN ((vt0.c1, rt0.c4, x'e0da')) AND ((rt0.c5, '0.9476798011080535', rt0.c0)))));
SELECT DISTINCT * FROM vt0, rt0 RIGHT OUTER JOIN vt2 ON (~ ((((rt0.c0)) NOT BETWEEN ((rt0.c5)) AND ((vt0.c1))))) LEFT OUTER JOIN v0 ON ((rt0.c2)>((((vt0.c0, rt0.c0, v0.c0)) BETWEEN ((vt0.c1, rt0.c4, x'e0da')) AND ((rt0.c5, '0.9476798011080535', rt0.c0))))) WHERE (((CAST(v0.c0 AS NUMERIC)) NOT BETWEEN (',') AND (rt0.c4))) UNION SELECT DISTINCT * FROM vt0, rt0 RIGHT OUTER JOIN vt2 ON (~ ((((rt0.c0)) NOT BETWEEN ((rt0.c5)) AND ((vt0.c1))))) LEFT OUTER JOIN v0 ON ((rt0.c2)>((((vt0.c0, rt0.c0, v0.c0)) BETWEEN ((vt0.c1, rt0.c4, x'e0da')) AND ((rt0.c5, '0.9476798011080535', rt0.c0))))) WHERE ((NOT (((CAST(v0.c0 AS NUMERIC)) NOT BETWEEN (',') AND (rt0.c4))))) UNION SELECT DISTINCT * FROM vt0, rt0 RIGHT OUTER JOIN vt2 ON (~ ((((rt0.c0)) NOT BETWEEN ((rt0.c5)) AND ((vt0.c1))))) LEFT OUTER JOIN v0 ON ((rt0.c2)>((((vt0.c0, rt0.c0, v0.c0)) BETWEEN ((vt0.c1, rt0.c4, x'e0da')) AND ((rt0.c5, '0.9476798011080535', rt0.c0))))) WHERE (((((CAST(v0.c0 AS NUMERIC)) NOT BETWEEN (',') AND (rt0.c4))) ISNULL));
SELECT DISTINCT * FROM vt0, rt0 RIGHT OUTER JOIN vt2 ON (~ ((((rt0.c0)) NOT BETWEEN ((rt0.c5)) AND ((vt0.c1))))) LEFT OUTER JOIN v0 ON ((rt0.c2)>((((vt0.c0, rt0.c0, v0.c0)) BETWEEN ((vt0.c1, rt0.c4, x'e0da')) AND ((rt0.c5, '0.9476798011080535', rt0.c0)))));
SELECT ALL vt0.c0, vt0.c1, rt0.c4 FROM vt0 INNER JOIN v0 ON (((vt1.c0) BETWEEN (vt0.c1) AND (rt0.c3)) IN ((rt0.c4 IN (vt0.c0)))) CROSS JOIN rt0 ON CAST(((((((((v0.c0)OR(vt1.c0)))AND(vt0.c0)))OR(rt0.c4)))AND(v0.c0)) AS BLOB) LEFT OUTER JOIN vt2 ON CASE WHEN '-1599716171' THEN (('0.38507961290542647')>(rt0.c5)) ELSE (~ (vt2.c0)) END FULL OUTER JOIN vt1 ON ((((((((((vt2.c0) IS TRUE))AND(((rt0.c5)*(vt0.c0)))))OR(HEX(rt0.c3))))OR(UNLIKELY(DISTINCT x''))))OR(((vt0.c0) IS FALSE))) GROUP BY vt0.c0, vt0.c1, rt0.c4;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING (((vt0.c0 IN ()))!=(((vt0.c1) IS FALSE))) UNION ALL SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING (NOT ((((vt0.c0 IN ()))<>(((vt0.c1) IS FALSE))))) UNION ALL SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING (((((vt0.c0 IN ()))<>(((vt0.c1) IS FALSE)))) ISNULL);
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING (((vt0.c0 IN ()))!=(((vt0.c1) IS FALSE))) UNION ALL SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING (NOT ((((vt0.c0 IN ()))<>(((vt0.c1) IS FALSE))))) UNION ALL SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING (((((vt0.c0 IN ()))<>(((vt0.c1) IS FALSE)))) ISNULL);
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT * FROM vt1, vt2, rt0;
SELECT * FROM vt1, vt2 NOT INDEXED, rt0 WHERE (MAX(((rt0.c1)<<(rt0.c0)), COALESCE(rt0.c5, rt0.c3))) UNION ALL SELECT * FROM vt1, vt2, rt0 WHERE ((NOT (MAX(((rt0.c1)<<(rt0.c0)), COALESCE(rt0.c5, rt0.c3))))) UNION ALL SELECT ALL * FROM vt1, vt2, rt0 WHERE (((MAX(((rt0.c1)<<(rt0.c0)), COALESCE(rt0.c5, rt0.c3))) ISNULL));
SELECT * FROM vt1, vt2, rt0;
SELECT DISTINCT * FROM rt0, v0, vt1;
SELECT DISTINCT * FROM rt0, v0, vt1 WHERE ('-1497244290') UNION SELECT DISTINCT * FROM rt0, v0, vt1 WHERE ((NOT ('-1497244290'))) UNION SELECT DISTINCT * FROM rt0, v0, vt1 WHERE ((('-1497244290') ISNULL));
SELECT DISTINCT * FROM rt0, v0, vt1;
SELECT vt1.c0 FROM rt0, v0 FULL OUTER JOIN vt0 ON '还' RIGHT OUTER JOIN vt1 ON ((v0.c0 COLLATE NOCASE) BETWEEN (CASE v0.c0  WHEN rt0.c3 THEN rt0.c2 ELSE vt0.c1 END) AND ((rt0.c1 IN ()))) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM rt0, v0 FULL OUTER JOIN vt0 ON '还' RIGHT OUTER JOIN vt1 ON ((v0.c0 COLLATE NOCASE) BETWEEN (CASE v0.c0  WHEN rt0.c3 THEN rt0.c2 ELSE vt0.c1 END) AND ((rt0.c1 IN ()))) WHERE (((CAST(rt0.c0 AS BLOB)) BETWEEN (((0.8638458257827669)+(rt0.c0))) AND (((rt0.c3) BETWEEN (vt1.c0) AND (rt0.c3))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM rt0, v0 FULL OUTER JOIN vt0 ON '还' RIGHT OUTER JOIN vt1 ON ((v0.c0 COLLATE NOCASE) BETWEEN (CASE v0.c0  WHEN rt0.c3 THEN rt0.c2 ELSE vt0.c1 END) AND ((rt0.c1 IN ()))) WHERE ((NOT (((CAST(rt0.c0 AS BLOB)) BETWEEN (((0.8638458257827669)+(rt0.c0))) AND (((rt0.c3) BETWEEN (vt1.c0) AND (rt0.c3))))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM rt0, v0 FULL OUTER JOIN vt0 ON '还' RIGHT OUTER JOIN vt1 ON ((v0.c0 COLLATE NOCASE) BETWEEN (CASE v0.c0  WHEN rt0.c3 THEN rt0.c2 ELSE vt0.c1 END) AND ((rt0.c1 IN ()))) WHERE (((((CAST(rt0.c0 AS BLOB)) BETWEEN (((0.8638458257827669)+(rt0.c0))) AND (((rt0.c3) BETWEEN (vt1.c0) AND (rt0.c3))))) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM rt0, v0 FULL OUTER JOIN vt0 ON '还' RIGHT OUTER JOIN vt1 ON ((v0.c0 COLLATE NOCASE) BETWEEN (CASE v0.c0  WHEN rt0.c3 THEN rt0.c2 ELSE vt0.c1 END) AND ((rt0.c1 IN ()))) GROUP BY vt1.c0;
SELECT rt0.c0, vt1.c0 FROM vt0, v0, rt0, vt1 GROUP BY rt0.c0, vt1.c0;
SELECT ALL rt0.c0, vt1.c0 FROM vt0, v0 NOT INDEXED, rt0, vt1 GROUP BY rt0.c0, vt1.c0 HAVING SUM(COUNT(rt0.c0)) UNION ALL SELECT ALL rt0.c0, vt1.c0 FROM vt0, v0, rt0, vt1 GROUP BY rt0.c0, vt1.c0 HAVING (NOT (SUM(COUNT(rt0.c0)))) UNION ALL SELECT rt0.c0, vt1.c0 FROM vt0, v0, rt0, vt1 GROUP BY rt0.c0, vt1.c0 HAVING ((SUM(COUNT(rt0.c0))) ISNULL);
SELECT TOTAL(((+ (rt0.c1)) IN ((((0.8354667184055868))<>((vt2.c0)))))) FROM vt0, vt2, rt0;
SELECT * FROM vt1, vt2;
SELECT ALL * FROM vt1, vt2 WHERE (CASE ((0xffffffff97665226)IS(NULL))  WHEN (((vt1.c1))=((vt1.c0))) THEN (vt2.c0 IN ()) END) UNION ALL SELECT ALL * FROM vt1, vt2 WHERE ((NOT (CASE ((0Xffffffff97665226)IS(NULL))  WHEN (((vt1.c1))==((vt1.c0))) THEN (vt2.c0 IN ()) END))) UNION ALL SELECT * FROM vt1, vt2 WHERE (((CASE ((0Xffffffff97665226)IS(NULL))  WHEN (((vt1.c1))==((vt1.c0))) THEN (vt2.c0 IN ()) END) ISNULL));
SELECT * FROM vt1, vt2;
SELECT DISTINCT vt2.c0 FROM vt2, rt0;
SELECT DISTINCT vt2.c0 FROM vt2, rt0 WHERE ((~ ((((rt0.c2, rt0.c4, rt0.c2, rt0.c0, rt0.c2)) NOT BETWEEN ((rt0.c2, rt0.c1, rt0.c1, rt0.c5, '1486942694')) AND ((rt0.c4, rt0.c3, rt0.c3, rt0.c5, rt0.c4)))))) UNION SELECT DISTINCT vt2.c0 FROM vt2, rt0 WHERE ((NOT ((~ ((((rt0.c2, rt0.c4, rt0.c2, rt0.c0, rt0.c2)) NOT BETWEEN ((rt0.c2, rt0.c1, rt0.c1, rt0.c5, '1486942694')) AND ((rt0.c4, rt0.c3, rt0.c3, rt0.c5, rt0.c4)))))))) UNION SELECT DISTINCT vt2.c0 FROM vt2, rt0 WHERE ((((~ ((((rt0.c2, rt0.c4, rt0.c2, rt0.c0, rt0.c2)) NOT BETWEEN ((rt0.c2, rt0.c1, rt0.c1, rt0.c5, '1486942694')) AND ((rt0.c4, rt0.c3, rt0.c3, rt0.c5, rt0.c4)))))) ISNULL));
SELECT DISTINCT vt2.c0 FROM vt2, rt0;
SELECT vt1.c0, vt1.c1, vt2.c0, v0.c0 FROM vt2, vt1, v0, vt0 GROUP BY vt1.c0, vt1.c1, vt2.c0, v0.c0;
SELECT vt1.c0, vt1.c1, vt2.c0, v0.c0 FROM vt2, vt1, v0, vt0 WHERE (DATETIME(LIKELIHOOD(DISTINCT vt0.c0, 0.12091885113763312), CASE vt1.c0  WHEN vt2.c0 THEN vt0.c1 WHEN vt0.c1 THEN v0.c0 WHEN x'' THEN 0x306a05d4 ELSE vt1.c1 END, COALESCE(vt1.c0, vt0.c1, vt2.c0, '1045270026'), vt0.c1, (~ (vt0.c1)))) GROUP BY vt1.c0, vt1.c1, vt2.c0, v0.c0 UNION SELECT vt1.c0, vt1.c1, vt2.c0, v0.c0 FROM vt2, vt1, v0, vt0 WHERE ((NOT (DATETIME(LIKELIHOOD(DISTINCT vt0.c0, 0.12091885113763312), CASE vt1.c0  WHEN vt2.c0 THEN vt0.c1 WHEN vt0.c1 THEN v0.c0 WHEN x'' THEN 0x306a05d4 ELSE vt1.c1 END, COALESCE(vt1.c0, vt0.c1, vt2.c0, '1045270026'), vt0.c1, (~ (vt0.c1)))))) GROUP BY vt1.c0, vt1.c1, vt2.c0, v0.c0 UNION SELECT ALL vt1.c0, vt1.c1, vt2.c0, v0.c0 FROM vt2, vt1, v0, vt0 WHERE (((DATETIME(LIKELIHOOD(DISTINCT vt0.c0, 0.12091885113763312), CASE vt1.c0  WHEN vt2.c0 THEN vt0.c1 WHEN vt0.c1 THEN v0.c0 WHEN x'' THEN 0x306a05d4 ELSE vt1.c1 END, COALESCE(vt1.c0, vt0.c1, vt2.c0, '1045270026'), vt0.c1, (~ (vt0.c1)))) ISNULL)) GROUP BY vt1.c0, vt1.c1, vt2.c0, v0.c0;
SELECT vt1.c0, vt1.c1, vt2.c0, v0.c0 FROM vt2, vt1, v0, vt0 GROUP BY vt1.c0, vt1.c1, vt2.c0, v0.c0;
SELECT ALL rt0.c3, vt2.c0, vt1.c1, v0.c0 FROM vt2, v0, vt0 CROSS JOIN rt0 ON ((CAST(rt0.c2 AS REAL))|(x'')) CROSS JOIN vt1 ON (+ (CASE WHEN rt0.c0 THEN vt1.c0 ELSE rt0.c0 END)) GROUP BY rt0.c3, vt2.c0, vt1.c1, v0.c0;
SELECT rt0.c3, vt2.c0, vt1.c1, v0.c0 FROM vt2, v0, vt0 CROSS JOIN rt0 ON ((CAST(rt0.c2 AS REAL))|(x'')) CROSS JOIN vt1 ON (+ (CASE WHEN rt0.c0 THEN vt1.c0 ELSE rt0.c0 END)) GROUP BY rt0.c3, vt2.c0, vt1.c1, v0.c0 HAVING GROUP_CONCAT(((AVG(COUNT(COUNT(*)))) BETWEEN (rt0.c4) AND (rt0.c0))) UNION ALL SELECT ALL rt0.c3, vt2.c0, vt1.c1, v0.c0 FROM vt2, v0, vt0 CROSS JOIN rt0 ON ((CAST(rt0.c2 AS REAL))|(x'')) CROSS JOIN vt1 ON (+ (CASE WHEN rt0.c0 THEN vt1.c0 ELSE rt0.c0 END)) GROUP BY rt0.c3, vt2.c0, vt1.c1, v0.c0 HAVING (NOT (GROUP_CONCAT(((AVG(COUNT(COUNT(*)))) BETWEEN (rt0.c4) AND (rt0.c0))))) UNION ALL SELECT rt0.c3, vt2.c0, vt1.c1, v0.c0 FROM vt2, v0, vt0 CROSS JOIN rt0 ON ((CAST(rt0.c2 AS REAL))|(x'')) CROSS JOIN vt1 ON (+ (CASE WHEN rt0.c0 THEN vt1.c0 ELSE rt0.c0 END)) GROUP BY rt0.c3, vt2.c0, vt1.c1, v0.c0 HAVING ((GROUP_CONCAT(((AVG(COUNT(COUNT(*)))) BETWEEN (rt0.c4) AND (rt0.c0)))) ISNULL);
SELECT ALL SUM(QUOTE(((vt1.c0)<=(vt1.c1)))) FROM vt1, v0;
SELECT * FROM vt2;
SELECT ALL * FROM vt2 WHERE (((((UNLIKELY(vt2.c0))OR(((vt2.c0) IS TRUE))))OR(CASE NULL  WHEN vt2.c0 THEN vt2.c0 END))) UNION ALL SELECT * FROM vt2 WHERE ((NOT (((((UNLIKELY(vt2.c0))OR(((vt2.c0) IS TRUE))))OR(CASE NULL  WHEN vt2.c0 THEN vt2.c0 END))))) UNION ALL SELECT * FROM vt2 WHERE (((((((UNLIKELY(vt2.c0))OR(((vt2.c0) IS TRUE))))OR(CASE NULL  WHEN vt2.c0 THEN vt2.c0 END))) ISNULL));
SELECT * FROM vt2;
SELECT DISTINCT * FROM vt0, vt2, vt1, rt0;
SELECT DISTINCT * FROM vt0, vt2, vt1, rt0 WHERE (((((rt0.c0) NOT NULL))%(x''))) UNION SELECT DISTINCT * FROM vt0, vt2, vt1, rt0 WHERE ((NOT (((((rt0.c0) NOT NULL))%(x''))))) UNION SELECT DISTINCT * FROM vt0, vt2, vt1, rt0 WHERE (((((((rt0.c0) NOT NULL))%(x''))) ISNULL));
SELECT DISTINCT * FROM vt0, vt2, vt1, rt0;
SELECT ALL vt1.c0, v0.c0, vt1.c1, vt2.c0 FROM vt2, v0, vt1 GROUP BY vt1.c0, v0.c0, vt1.c1, vt2.c0;
SELECT ALL vt1.c0, v0.c0, vt1.c1, vt2.c0 FROM vt2, v0, vt1 WHERE (((0X51857481)LIKE((vt1.c1 IN ())))) GROUP BY vt1.c0, v0.c0, vt1.c1, vt2.c0 UNION SELECT ALL vt1.c0, v0.c0, vt1.c1, vt2.c0 FROM vt2, v0, vt1 WHERE ((NOT (((0X51857481)LIKE((vt1.c1 IN ())))))) GROUP BY vt1.c0, v0.c0, vt1.c1, vt2.c0 UNION SELECT vt1.c0, v0.c0, vt1.c1, vt2.c0 FROM vt2, v0, vt1 WHERE (((((0X51857481)LIKE((vt1.c1 IN ())))) ISNULL)) GROUP BY vt1.c0, v0.c0, vt1.c1, vt2.c0;
SELECT ALL vt1.c0, v0.c0, vt1.c1, vt2.c0 FROM vt2, v0, vt1 GROUP BY vt1.c0, v0.c0, vt1.c1, vt2.c0;
SELECT ALL vt1.c0, v0.c0, vt1.c1 FROM vt1 LEFT OUTER JOIN v0 ON LIKE(vt1.c0 COLLATE RTRIM, CAST(vt1.c1 AS REAL), '{') GROUP BY vt1.c0, v0.c0, vt1.c1;
SELECT ALL vt1.c0, v0.c0, vt1.c1 FROM vt1 LEFT OUTER JOIN v0 ON LIKE(vt1.c0 COLLATE RTRIM, CAST(vt1.c1 AS REAL), '{') GROUP BY vt1.c0, v0.c0, vt1.c1 HAVING ((((MAX(MIN(MAX(vt1.c1))))AND((AVG(TOTAL(TOTAL(x''))) IN (v0.c0)))))AND(GROUP_CONCAT(vt1.c1))) UNION ALL SELECT vt1.c0, v0.c0, vt1.c1 FROM vt1 LEFT OUTER JOIN v0 ON LIKE(vt1.c0 COLLATE RTRIM, CAST(vt1.c1 AS REAL), '{') GROUP BY vt1.c0, v0.c0, vt1.c1 HAVING (NOT (((((MAX(MIN(MAX(vt1.c1))))AND((AVG(TOTAL(TOTAL(x''))) IN (v0.c0)))))AND(GROUP_CONCAT(vt1.c1))))) UNION ALL SELECT vt1.c0, v0.c0, vt1.c1 FROM vt1 LEFT OUTER JOIN v0 ON LIKE(vt1.c0 COLLATE RTRIM, CAST(vt1.c1 AS REAL), '{') GROUP BY vt1.c0, v0.c0, vt1.c1 HAVING ((((((MAX(MIN(MAX(vt1.c1))))AND((AVG(TOTAL(TOTAL(x''))) IN (v0.c0)))))AND(GROUP_CONCAT(vt1.c1)))) ISNULL);
SELECT SUM(((CASE WHEN vt0.c1 THEN x'a0fe' ELSE vt0.c1 END)>=(((vt2.c0) BETWEEN (vt2.c0) AND (vt2.c0))))) FROM vt0, v0, vt2;
SELECT ALL vt1.c0, rt0.c1, rt0.c0, rt0.c4, vt1.c1, vt0.c1, rt0.c3, vt0.c0, rt0.c2 FROM vt0, v0 INNER JOIN vt1 ON (+ (((rt0.c2) IS TRUE))) CROSS JOIN rt0 ON ((((vt1.c0) NOT NULL)) BETWEEN ((NULL IN ())) AND (CASE vt1.c0  WHEN vt0.c1 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c4 THEN v0.c0 ELSE vt0.c0 END)) CROSS JOIN vt2 ON ((((CASE rt0.c0  WHEN v0.c0 THEN rt0.c2 ELSE vt1.c1 END)OR(((((rt0.c4)AND('/!')))OR(vt0.c0)))))AND((((rt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c1)))));
SELECT vt1.c0, rt0.c1, rt0.c0, rt0.c4, vt1.c1, vt0.c1, rt0.c3, vt0.c0, rt0.c2 FROM vt0, v0 NOT INDEXED INNER JOIN vt1 ON (+ (((rt0.c2) IS TRUE))) CROSS JOIN rt0 ON ((((vt1.c0) NOT NULL)) BETWEEN ((NULL IN ())) AND (CASE vt1.c0  WHEN vt0.c1 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c4 THEN v0.c0 ELSE vt0.c0 END)) CROSS JOIN vt2 ON ((((CASE rt0.c0  WHEN v0.c0 THEN rt0.c2 ELSE vt1.c1 END)OR(((((rt0.c4)AND('/!')))OR(vt0.c0)))))AND((((rt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c1))))) WHERE (vt2.c0) UNION ALL SELECT vt1.c0, rt0.c1, rt0.c0, rt0.c4, vt1.c1, vt0.c1, rt0.c3, vt0.c0, rt0.c2 FROM vt0, v0 INNER JOIN vt1 ON (+ (((rt0.c2) IS TRUE))) CROSS JOIN rt0 ON ((((vt1.c0) NOT NULL)) BETWEEN ((NULL IN ())) AND (CASE vt1.c0  WHEN vt0.c1 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c4 THEN v0.c0 ELSE vt0.c0 END)) CROSS JOIN vt2 ON ((((CASE rt0.c0  WHEN v0.c0 THEN rt0.c2 ELSE vt1.c1 END)OR(((((rt0.c4)AND('/!')))OR(vt0.c0)))))AND((((rt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c1))))) WHERE ((NOT (vt2.c0))) UNION ALL SELECT ALL vt1.c0, rt0.c1, rt0.c0, rt0.c4, vt1.c1, vt0.c1, rt0.c3, vt0.c0, rt0.c2 FROM vt0, v0 INNER JOIN vt1 ON (+ (((rt0.c2) IS TRUE))) CROSS JOIN rt0 ON ((((vt1.c0) NOT NULL)) BETWEEN ((NULL IN ())) AND (CASE vt1.c0  WHEN vt0.c1 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c4 THEN v0.c0 ELSE vt0.c0 END)) CROSS JOIN vt2 ON ((((CASE rt0.c0  WHEN v0.c0 THEN rt0.c2 ELSE vt1.c1 END)OR(((((rt0.c4)AND('/!')))OR(vt0.c0)))))AND((((rt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c1))))) WHERE (((vt2.c0) ISNULL));
SELECT ALL vt1.c0, rt0.c1, rt0.c0, rt0.c4, vt1.c1, vt0.c1, rt0.c3, vt0.c0, rt0.c2 FROM vt0, v0 INNER JOIN vt1 ON (+ (((rt0.c2) IS TRUE))) CROSS JOIN rt0 ON ((((vt1.c0) NOT NULL)) BETWEEN ((NULL IN ())) AND (CASE vt1.c0  WHEN vt0.c1 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c4 THEN v0.c0 ELSE vt0.c0 END)) CROSS JOIN vt2 ON ((((CASE rt0.c0  WHEN v0.c0 THEN rt0.c2 ELSE vt1.c1 END)OR(((((rt0.c4)AND('/!')))OR(vt0.c0)))))AND((((rt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c1)))));
SELECT DISTINCT vt0.c0, vt2.c0, rt0.c3, rt0.c4, vt1.c0, rt0.c2, rt0.c0, vt1.c1, v0.c0 FROM vt2, rt0, vt0, v0, vt1;
SELECT DISTINCT vt0.c0, vt2.c0, rt0.c3, rt0.c4, vt1.c0, rt0.c2, rt0.c0, vt1.c1, v0.c0 FROM vt2, rt0, vt0, v0, vt1 WHERE (json_valid(((rt0.c0) NOT BETWEEN (rt0.c1) AND (vt0.c0)))) UNION SELECT DISTINCT vt0.c0, vt2.c0, rt0.c3, rt0.c4, vt1.c0, rt0.c2, rt0.c0, vt1.c1, v0.c0 FROM vt2, rt0, vt0, v0, vt1 WHERE ((NOT (json_valid(((rt0.c0) NOT BETWEEN (rt0.c1) AND (vt0.c0)))))) UNION SELECT DISTINCT vt0.c0, vt2.c0, rt0.c3, rt0.c4, vt1.c0, rt0.c2, rt0.c0, vt1.c1, v0.c0 FROM vt2, rt0, vt0, v0, vt1 WHERE (((json_valid(((rt0.c0) NOT BETWEEN (rt0.c1) AND (vt0.c0)))) ISNULL));
SELECT DISTINCT vt0.c0, vt2.c0, rt0.c3, rt0.c4, vt1.c0, rt0.c2, rt0.c0, vt1.c1, v0.c0 FROM vt2, rt0, vt0, v0, vt1;
SELECT rt0.c5, rt0.c2, vt0.c0, vt1.c0, vt0.c1, rt0.c0, v0.c0 FROM rt0, vt0 RIGHT OUTER JOIN vt1 ON ((vt1.c0) BETWEEN (v0.c0) AND (rt0.c1)) COLLATE RTRIM INNER JOIN v0 ON ((((((((((rt0.c0) ISNULL))AND(((((rt0.c3)AND(rt0.c2)))AND(vt1.c0)))))AND(rt0.c1)))OR(((vt0.c1)!=(vt1.c1)))))AND(vt0.c1)) GROUP BY rt0.c5, rt0.c2, vt0.c0, vt1.c0, vt0.c1, rt0.c0, v0.c0;
SELECT ALL rt0.c0, rt0.c1, vt2.c0, v0.c0, rt0.c3, rt0.c5, rt0.c2 FROM rt0, vt2, v0 GROUP BY rt0.c0, rt0.c1, vt2.c0, v0.c0, rt0.c3, rt0.c5, rt0.c2;
SELECT rt0.c0, rt0.c1, vt2.c0, v0.c0, rt0.c3, rt0.c5, rt0.c2 FROM rt0, vt2, v0 GROUP BY rt0.c0, rt0.c1, vt2.c0, v0.c0, rt0.c3, rt0.c5, rt0.c2 HAVING MAX(JULIANDAY(rt0.c5, TOTAL(rt0.c0), vt2.c0)) UNION ALL SELECT ALL rt0.c0, rt0.c1, vt2.c0, v0.c0, rt0.c3, rt0.c5, rt0.c2 FROM rt0, vt2, v0 GROUP BY rt0.c0, rt0.c1, vt2.c0, v0.c0, rt0.c3, rt0.c5, rt0.c2 HAVING (NOT (MAX(JULIANDAY(rt0.c5, TOTAL(rt0.c0), vt2.c0)))) UNION ALL SELECT ALL rt0.c0, rt0.c1, vt2.c0, v0.c0, rt0.c3, rt0.c5, rt0.c2 FROM rt0, vt2, v0 GROUP BY rt0.c0, rt0.c1, vt2.c0, v0.c0, rt0.c3, rt0.c5, rt0.c2 HAVING ((MAX(JULIANDAY(rt0.c5, TOTAL(rt0.c0), vt2.c0))) ISNULL);
SELECT ALL * FROM vt2, v0, vt0;
SELECT * FROM vt2, v0, vt0 WHERE ((vt0.c0 COLLATE NOCASE IN ())) UNION ALL SELECT ALL * FROM vt2, v0, vt0 WHERE ((NOT ((vt0.c0 COLLATE NOCASE IN ())))) UNION ALL SELECT * FROM vt2, v0, vt0 WHERE ((((vt0.c0 COLLATE NOCASE IN ())) ISNULL));
SELECT ALL * FROM vt2, v0, vt0;
SELECT DISTINCT vt0.c0, vt0.c1 FROM v0 FULL OUTER JOIN vt0 ON vt0.c0;
SELECT DISTINCT vt0.c0, vt0.c1 FROM v0 FULL OUTER JOIN vt0 ON vt0.c0 WHERE ((vt0.c1 COLLATE NOCASE IN ())) UNION SELECT DISTINCT vt0.c0, vt0.c1 FROM v0 FULL OUTER JOIN vt0 ON vt0.c0 WHERE ((NOT ((vt0.c1 COLLATE NOCASE IN ())))) UNION SELECT DISTINCT vt0.c0, vt0.c1 FROM v0 FULL OUTER JOIN vt0 ON vt0.c0 WHERE ((((vt0.c1 COLLATE NOCASE IN ())) ISNULL));
SELECT DISTINCT vt0.c0, vt0.c1 FROM v0 FULL OUTER JOIN vt0 ON vt0.c0;
SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT vt2.c0 FROM vt2 WHERE (CASE WHEN ((vt2.c0)>=(vt2.c0)) THEN (vt2.c0 IN ()) ELSE ((vt2.c0)*(vt2.c0)) END) GROUP BY vt2.c0 UNION SELECT vt2.c0 FROM vt2 WHERE ((NOT (CASE WHEN ((vt2.c0)>=(vt2.c0)) THEN (vt2.c0 IN ()) ELSE ((vt2.c0)*(vt2.c0)) END))) GROUP BY vt2.c0 UNION SELECT ALL vt2.c0 FROM vt2 WHERE (((CASE WHEN ((vt2.c0)>=(vt2.c0)) THEN (vt2.c0 IN ()) ELSE ((vt2.c0)*(vt2.c0)) END) ISNULL)) GROUP BY vt2.c0;
SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT ALL vt1.c1, vt2.c0 FROM v0, vt0, vt1 NATURAL JOIN vt2 GROUP BY vt1.c1, vt2.c0;
SELECT ALL vt1.c1, vt2.c0 FROM v0, vt0, vt1 NATURAL JOIN vt2 GROUP BY vt1.c1, vt2.c0 HAVING COUNT((v0.c0 IN (MIN(vt2.c0)))) UNION ALL SELECT ALL vt1.c1, vt2.c0 FROM v0, vt0, vt1 NATURAL JOIN vt2 GROUP BY vt1.c1, vt2.c0 HAVING (NOT (COUNT((v0.c0 IN (MIN(vt2.c0)))))) UNION ALL SELECT vt1.c1, vt2.c0 FROM v0, vt0, vt1 NATURAL JOIN vt2 GROUP BY vt1.c1, vt2.c0 HAVING ((COUNT((v0.c0 IN (MIN(vt2.c0))))) ISNULL);
SELECT * FROM vt0, vt1;
SELECT * FROM vt0, vt1 WHERE ((((vt0.c0 IN ()))<>(((vt1.c1)IS('i'))))) UNION ALL SELECT ALL * FROM vt0, vt1 WHERE ((NOT ((((vt0.c0 IN ()))!=(((vt1.c1)IS('i'))))))) UNION ALL SELECT ALL * FROM vt0, vt1 WHERE ((((((vt0.c0 IN ()))<>(((vt1.c1)IS('i'))))) ISNULL));
SELECT * FROM vt0, vt1;
SELECT DISTINCT * FROM rt0, v0, vt1, vt0;
SELECT DISTINCT * FROM rt0, v0, vt1, vt0 WHERE ((rt0.c0 IN ())) UNION SELECT DISTINCT * FROM rt0, v0, vt1, vt0 WHERE ((NOT ((rt0.c0 IN ())))) UNION SELECT DISTINCT * FROM rt0, v0, vt1, vt0 WHERE ((((rt0.c0 IN ())) ISNULL));
SELECT DISTINCT * FROM rt0, v0, vt1, vt0;
SELECT vt2.c0 FROM vt1, vt2 NOT INDEXED GROUP BY vt2.c0;
SELECT vt2.c0 FROM vt1, vt2 WHERE (((((vt1.c0)==(vt2.c0)))>>(NULLIF(DISTINCT vt1.c1, vt2.c0)))) GROUP BY vt2.c0 UNION SELECT vt2.c0 FROM vt1, vt2 WHERE ((NOT (((((vt1.c0)==(vt2.c0)))>>(NULLIF(DISTINCT vt1.c1, vt2.c0)))))) GROUP BY vt2.c0 UNION SELECT vt2.c0 FROM vt1, vt2 WHERE (((((((vt1.c0)=(vt2.c0)))>>(NULLIF(DISTINCT vt1.c1, vt2.c0)))) ISNULL)) GROUP BY vt2.c0;
SELECT vt2.c0 FROM vt1, vt2 NOT INDEXED GROUP BY vt2.c0;
SELECT vt2.c0, rt0.c2 FROM vt0, v0, rt0 RIGHT OUTER JOIN vt2 ON (((((rt0.c5, rt0.c3, rt0.c5))=((rt0.c0, vt2.c0, v0.c0))))IS((((vt0.c0))>((vt0.c1))))) GROUP BY vt2.c0, rt0.c2;
SELECT vt2.c0, rt0.c2 FROM vt0, v0, rt0 RIGHT OUTER JOIN vt2 ON (((((rt0.c5, rt0.c3, rt0.c5))==((rt0.c0, vt2.c0, v0.c0))))IS((((vt0.c0))>((vt0.c1))))) GROUP BY vt2.c0, rt0.c2 HAVING MAX(LIKELY(vt0.c1)) UNION ALL SELECT vt2.c0, rt0.c2 FROM vt0, v0, rt0 RIGHT OUTER JOIN vt2 ON (((((rt0.c5, rt0.c3, rt0.c5))==((rt0.c0, vt2.c0, v0.c0))))IS((((vt0.c0))>((vt0.c1))))) GROUP BY vt2.c0, rt0.c2 HAVING (NOT (MAX(LIKELY(vt0.c1)))) UNION ALL SELECT vt2.c0, rt0.c2 FROM vt0, v0 NOT INDEXED, rt0 RIGHT OUTER JOIN vt2 ON (((((rt0.c5, rt0.c3, rt0.c5))=((rt0.c0, vt2.c0, v0.c0))))IS((((vt0.c0))>((vt0.c1))))) GROUP BY vt2.c0, rt0.c2 HAVING ((MAX(LIKELY(vt0.c1))) ISNULL);
SELECT vt2.c0, rt0.c2 FROM vt0, v0, rt0 RIGHT OUTER JOIN vt2 ON (((((rt0.c5, rt0.c3, rt0.c5))=((rt0.c0, vt2.c0, v0.c0))))IS((((vt0.c0))>((vt0.c1))))) GROUP BY vt2.c0, rt0.c2;
SELECT vt2.c0, rt0.c2 FROM vt0, v0, rt0 RIGHT OUTER JOIN vt2 ON (((((rt0.c5, rt0.c3, rt0.c5))==((rt0.c0, vt2.c0, v0.c0))))IS((((vt0.c0))>((vt0.c1))))) GROUP BY vt2.c0, rt0.c2 HAVING MAX(LIKELY(vt0.c1)) UNION ALL SELECT vt2.c0, rt0.c2 FROM vt0, v0, rt0 RIGHT OUTER JOIN vt2 ON (((((rt0.c5, rt0.c3, rt0.c5))==((rt0.c0, vt2.c0, v0.c0))))IS((((vt0.c0))>((vt0.c1))))) GROUP BY vt2.c0, rt0.c2 HAVING (NOT (MAX(LIKELY(vt0.c1)))) UNION ALL SELECT vt2.c0, rt0.c2 FROM vt0, v0 NOT INDEXED, rt0 RIGHT OUTER JOIN vt2 ON (((((rt0.c5, rt0.c3, rt0.c5))=((rt0.c0, vt2.c0, v0.c0))))IS((((vt0.c0))>((vt0.c1))))) GROUP BY vt2.c0, rt0.c2 HAVING ((MAX(LIKELY(vt0.c1))) ISNULL);
SELECT vt2.c0, rt0.c2 FROM vt0, v0, rt0 RIGHT OUTER JOIN vt2 ON (((((rt0.c5, rt0.c3, rt0.c5))=((rt0.c0, vt2.c0, v0.c0))))IS((((vt0.c0))>((vt0.c1))))) GROUP BY vt2.c0, rt0.c2;
SELECT ALL * FROM vt2, v0, vt0;
SELECT ALL * FROM vt2, v0, vt0 WHERE (((v0.c0)>(v0.c0)) COLLATE BINARY) UNION ALL SELECT * FROM vt2, v0, vt0 WHERE ((NOT (((v0.c0)>(v0.c0)) COLLATE BINARY))) UNION ALL SELECT * FROM vt2, v0, vt0 WHERE (((((v0.c0)>(v0.c0)) COLLATE BINARY) ISNULL));
SELECT ALL * FROM vt2, v0, vt0;
SELECT DISTINCT rt0.c4, vt1.c1, vt2.c0, vt0.c1, rt0.c2, rt0.c3, rt0.c0, rt0.c1, vt1.c0, vt0.c0, rt0.c5 FROM vt1, rt0, vt0, vt2;
SELECT DISTINCT rt0.c4, vt1.c1, vt2.c0, vt0.c1, rt0.c2, rt0.c3, rt0.c0, rt0.c1, vt1.c0, vt0.c0, rt0.c5 FROM vt1, rt0, vt0, vt2 WHERE (rt0.c4) UNION SELECT DISTINCT rt0.c4, vt1.c1, vt2.c0, vt0.c1, rt0.c2, rt0.c3, rt0.c0, rt0.c1, vt1.c0, vt0.c0, rt0.c5 FROM vt1, rt0, vt0, vt2 WHERE ((NOT (rt0.c4))) UNION SELECT DISTINCT rt0.c4, vt1.c1, vt2.c0, vt0.c1, rt0.c2, rt0.c3, rt0.c0, rt0.c1, vt1.c0, vt0.c0, rt0.c5 FROM vt1, rt0, vt0 NOT INDEXED, vt2 WHERE (((rt0.c4) ISNULL));
SELECT DISTINCT rt0.c4, vt1.c1, vt2.c0, vt0.c1, rt0.c2, rt0.c3, rt0.c0, rt0.c1, vt1.c0, vt0.c0, rt0.c5 FROM vt1, rt0, vt0, vt2;
SELECT v0.c0, rt0.c3, rt0.c5 FROM vt0, v0 CROSS JOIN rt0 ON (((((rt0.c4)AND(v0.c0)))AND(rt0.c4)) IN ()) GROUP BY v0.c0, rt0.c3, rt0.c5;
SELECT ALL v0.c0, rt0.c3, rt0.c5 FROM vt0, v0 CROSS JOIN rt0 ON (((((rt0.c4)AND(v0.c0)))AND(rt0.c4)) IN ()) WHERE (((0.7075184234031197 COLLATE RTRIM)LIKE(CAST(rt0.c5 AS TEXT)))) GROUP BY v0.c0, rt0.c3, rt0.c5 UNION SELECT v0.c0, rt0.c3, rt0.c5 FROM vt0, v0 CROSS JOIN rt0 ON (((((rt0.c4)AND(v0.c0)))AND(rt0.c4)) IN ()) WHERE ((NOT (((0.7075184234031197 COLLATE RTRIM)LIKE(CAST(rt0.c5 AS TEXT)))))) GROUP BY v0.c0, rt0.c3, rt0.c5 UNION SELECT v0.c0, rt0.c3, rt0.c5 FROM vt0, v0 CROSS JOIN rt0 ON (((((rt0.c4)AND(v0.c0)))AND(rt0.c4)) IN ()) WHERE (((((0.7075184234031197 COLLATE RTRIM)LIKE(CAST(rt0.c5 AS TEXT)))) ISNULL)) GROUP BY v0.c0, rt0.c3, rt0.c5;
SELECT v0.c0, rt0.c3, rt0.c5 FROM vt0, v0 CROSS JOIN rt0 ON (((((rt0.c4)AND(v0.c0)))AND(rt0.c4)) IN ()) GROUP BY v0.c0, rt0.c3, rt0.c5;
SELECT ALL rt0.c3, rt0.c4, rt0.c1, v0.c0, rt0.c0, rt0.c2, rt0.c5 FROM rt0, v0 GROUP BY rt0.c3, rt0.c4, rt0.c1, v0.c0, rt0.c0, rt0.c2, rt0.c5;
SELECT ALL rt0.c3, rt0.c4, rt0.c1, v0.c0, rt0.c0, rt0.c2, rt0.c5 FROM rt0, v0 GROUP BY rt0.c3, rt0.c4, rt0.c1, v0.c0, rt0.c0, rt0.c2, rt0.c5 HAVING COUNT(MIN(TOTAL(rt0.c2))) UNION ALL SELECT rt0.c3, rt0.c4, rt0.c1, v0.c0, rt0.c0, rt0.c2, rt0.c5 FROM rt0, v0 GROUP BY rt0.c3, rt0.c4, rt0.c1, v0.c0, rt0.c0, rt0.c2, rt0.c5 HAVING (NOT (COUNT(MIN(TOTAL(rt0.c2))))) UNION ALL SELECT rt0.c3, rt0.c4, rt0.c1, v0.c0, rt0.c0, rt0.c2, rt0.c5 FROM rt0, v0 GROUP BY rt0.c3, rt0.c4, rt0.c1, v0.c0, rt0.c0, rt0.c2, rt0.c5 HAVING ((COUNT(MIN(TOTAL(rt0.c2)))) ISNULL);
SELECT ALL vt1.c1 FROM vt2, vt0, v0, vt1;
SELECT ALL vt1.c1 FROM vt2, vt0, v0, vt1 WHERE ((((vt0.c1 COLLATE NOCASE))>((vt2.c0 COLLATE RTRIM)))) UNION ALL SELECT ALL vt1.c1 FROM vt2, vt0, v0, vt1 WHERE ((NOT ((((vt0.c1 COLLATE NOCASE))>((vt2.c0 COLLATE RTRIM)))))) UNION ALL SELECT vt1.c1 FROM vt2, vt0, v0, vt1 WHERE ((((((vt0.c1 COLLATE NOCASE))>((vt2.c0 COLLATE RTRIM)))) ISNULL));
SELECT ALL vt1.c1 FROM vt2, vt0, v0, vt1;
SELECT DISTINCT rt0.c3, vt0.c1, rt0.c4, vt2.c0, vt1.c0, rt0.c2, v0.c0, vt1.c1, rt0.c5 FROM vt0, vt2, rt0, vt1, v0;
SELECT DISTINCT rt0.c3, vt0.c1, rt0.c4, vt2.c0, vt1.c0, rt0.c2, v0.c0, vt1.c1, rt0.c5 FROM vt0, vt2, rt0, vt1, v0 WHERE (COALESCE(DISTINCT -2.28185759E8, (- (vt1.c0)))) UNION SELECT DISTINCT rt0.c3, vt0.c1, rt0.c4, vt2.c0, vt1.c0, rt0.c2, v0.c0, vt1.c1, rt0.c5 FROM vt0, vt2, rt0, vt1, v0 WHERE ((NOT (COALESCE(DISTINCT -2.28185759E8, (- (vt1.c0)))))) UNION SELECT DISTINCT rt0.c3, vt0.c1, rt0.c4, vt2.c0, vt1.c0, rt0.c2, v0.c0, vt1.c1, rt0.c5 FROM vt0, vt2, rt0, vt1, v0 WHERE (((COALESCE(DISTINCT -2.28185759E8, (- (vt1.c0)))) ISNULL));
SELECT DISTINCT rt0.c3, vt0.c1, rt0.c4, vt2.c0, vt1.c0, rt0.c2, v0.c0, vt1.c1, rt0.c5 FROM vt0, vt2, rt0, vt1, v0;
SELECT v0.c0, vt1.c1, vt0.c0 FROM v0, vt1, vt2, vt0 GROUP BY v0.c0, vt1.c1, vt0.c0;
SELECT v0.c0, vt1.c1, vt0.c0 FROM v0, vt1, vt2 NOT INDEXED, vt0 WHERE (vt0.c1) GROUP BY v0.c0, vt1.c1, vt0.c0 UNION SELECT v0.c0, vt1.c1, vt0.c0 FROM v0, vt1, vt2, vt0 WHERE ((NOT (vt0.c1))) GROUP BY v0.c0, vt1.c1, vt0.c0 UNION SELECT v0.c0, vt1.c1, vt0.c0 FROM v0, vt1, vt2, vt0 WHERE (((vt0.c1) ISNULL)) GROUP BY v0.c0, vt1.c1, vt0.c0;
SELECT v0.c0, vt1.c1, vt0.c0 FROM v0, vt1, vt2, vt0 GROUP BY v0.c0, vt1.c1, vt0.c0;
SELECT vt2.c0, vt0.c1 FROM vt2, vt0 GROUP BY vt2.c0, vt0.c1;
SELECT ALL vt2.c0, vt0.c1 FROM vt2 NOT INDEXED, vt0 GROUP BY vt2.c0, vt0.c1 HAVING -1.114639653E9 UNION ALL SELECT vt2.c0, vt0.c1 FROM vt2, vt0 GROUP BY vt2.c0, vt0.c1 HAVING (NOT (-1.114639653E9)) UNION ALL SELECT vt2.c0, vt0.c1 FROM vt2, vt0 GROUP BY vt2.c0, vt0.c1 HAVING ((-1.114639653E9) ISNULL);
SELECT vt2.c0, vt0.c1 FROM vt2, vt0 GROUP BY vt2.c0, vt0.c1;
SELECT ALL vt2.c0, vt0.c1 FROM vt2 NOT INDEXED, vt0 GROUP BY vt2.c0, vt0.c1 HAVING -1.114639653E9 UNION ALL SELECT vt2.c0, vt0.c1 FROM vt2, vt0 GROUP BY vt2.c0, vt0.c1 HAVING (NOT (-1.114639653E9)) UNION ALL SELECT vt2.c0, vt0.c1 FROM vt2, vt0 GROUP BY vt2.c0, vt0.c1 HAVING ((-1.114639653E9) ISNULL);
SELECT vt2.c0, vt0.c1 FROM vt2, vt0 GROUP BY vt2.c0, vt0.c1;
SELECT rt0.c2, rt0.c0, rt0.c1, rt0.c5, rt0.c3, vt2.c0 FROM vt2 LEFT OUTER JOIN rt0 ON ((((((((((((((rt0.c5)||(rt0.c0)))AND(((rt0.c0) ISNULL))))AND((((rt0.c1, vt2.c0, rt0.c4))<=((-2.001053332E9, rt0.c2, rt0.c1))))))AND(json_array(rt0.c2, rt0.c5))))AND(((rt0.c1)+(rt0.c5)))))AND(((rt0.c4)-(rt0.c4)))))AND(vt2.c0));
SELECT rt0.c2, rt0.c0, rt0.c1, rt0.c5, rt0.c3, vt2.c0 FROM vt2 LEFT OUTER JOIN rt0 ON ((((((((((((((rt0.c5)||(rt0.c0)))AND(((rt0.c0) ISNULL))))AND((((rt0.c1, vt2.c0, rt0.c4))<=((-2.001053332E9, rt0.c2, rt0.c1))))))AND(json_array(rt0.c2, rt0.c5))))AND(((rt0.c1)+(rt0.c5)))))AND(((rt0.c4)-(rt0.c4)))))AND(vt2.c0)) WHERE (((CAST(rt0.c3 AS TEXT)) NOTNULL)) UNION ALL SELECT rt0.c2, rt0.c0, rt0.c1, rt0.c5, rt0.c3, vt2.c0 FROM vt2 LEFT OUTER JOIN rt0 ON ((((((((((((((rt0.c5)||(rt0.c0)))AND(((rt0.c0) ISNULL))))AND((((rt0.c1, vt2.c0, rt0.c4))<=((-2.001053332E9, rt0.c2, rt0.c1))))))AND(json_array(rt0.c2, rt0.c5))))AND(((rt0.c1)+(rt0.c5)))))AND(((rt0.c4)-(rt0.c4)))))AND(vt2.c0)) WHERE ((NOT (((CAST(rt0.c3 AS TEXT)) NOTNULL)))) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c1, rt0.c5, rt0.c3, vt2.c0 FROM vt2 NOT INDEXED LEFT OUTER JOIN rt0 ON ((((((((((((((rt0.c5)||(rt0.c0)))AND(((rt0.c0) ISNULL))))AND((((rt0.c1, vt2.c0, rt0.c4))<=((-2.001053332E9, rt0.c2, rt0.c1))))))AND(json_array(rt0.c2, rt0.c5))))AND(((rt0.c1)+(rt0.c5)))))AND(((rt0.c4)-(rt0.c4)))))AND(vt2.c0)) WHERE (((((CAST(rt0.c3 AS TEXT)) NOTNULL)) ISNULL));
SELECT rt0.c2, rt0.c0, rt0.c1, rt0.c5, rt0.c3, vt2.c0 FROM vt2 LEFT OUTER JOIN rt0 ON ((((((((((((((rt0.c5)||(rt0.c0)))AND(((rt0.c0) ISNULL))))AND((((rt0.c1, vt2.c0, rt0.c4))<=((-2.001053332E9, rt0.c2, rt0.c1))))))AND(json_array(rt0.c2, rt0.c5))))AND(((rt0.c1)+(rt0.c5)))))AND(((rt0.c4)-(rt0.c4)))))AND(vt2.c0));
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (v0.c0) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (v0.c0))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((v0.c0) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT ALL rt0.c1, rt0.c0, rt0.c4, vt1.c0, vt1.c1, vt0.c1 FROM rt0, vt1, vt2, vt0 GROUP BY rt0.c1, rt0.c0, rt0.c4, vt1.c0, vt1.c1, vt0.c1;
SELECT rt0.c1, rt0.c0, rt0.c4, vt1.c0, vt1.c1, vt0.c1 FROM rt0, vt1, vt2, vt0 WHERE (8.94226005E8) GROUP BY rt0.c1, rt0.c0, rt0.c4, vt1.c0, vt1.c1, vt0.c1 UNION SELECT ALL rt0.c1, rt0.c0, rt0.c4, vt1.c0, vt1.c1, vt0.c1 FROM rt0, vt1, vt2, vt0 WHERE ((NOT (8.94226005E8))) GROUP BY rt0.c1, rt0.c0, rt0.c4, vt1.c0, vt1.c1, vt0.c1 UNION SELECT rt0.c1, rt0.c0, rt0.c4, vt1.c0, vt1.c1, vt0.c1 FROM rt0, vt1, vt2, vt0 WHERE (((8.94226005E8) ISNULL)) GROUP BY rt0.c1, rt0.c0, rt0.c4, vt1.c0, vt1.c1, vt0.c1;
SELECT ALL rt0.c1, rt0.c0, rt0.c4, vt1.c0, vt1.c1, vt0.c1 FROM rt0, vt1, vt2, vt0 GROUP BY rt0.c1, rt0.c0, rt0.c4, vt1.c0, vt1.c1, vt0.c1;
SELECT ALL rt0.c2, rt0.c0, rt0.c5, vt0.c1, rt0.c1, vt1.c0, rt0.c4, vt1.c1 FROM vt1, vt0, v0 RIGHT OUTER JOIN rt0 ON (((vt1.c0 IN ()))IS NOT(((rt0.c2) BETWEEN (vt1.c1) AND ('-2120533279')))) GROUP BY rt0.c2, rt0.c0, rt0.c5, vt0.c1, rt0.c1, vt1.c0, rt0.c4, vt1.c1;
SELECT ALL rt0.c2, rt0.c0, rt0.c5, vt0.c1, rt0.c1, vt1.c0, rt0.c4, vt1.c1 FROM vt1, vt0, v0 RIGHT OUTER JOIN rt0 ON (((vt1.c0 IN ()))IS NOT(((rt0.c2) BETWEEN (vt1.c1) AND ('-2120533279')))) GROUP BY rt0.c2, rt0.c0, rt0.c5, vt0.c1, rt0.c1, vt1.c0, rt0.c4, vt1.c1 HAVING (- (COUNT(COUNT(*)))) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c5, vt0.c1, rt0.c1, vt1.c0, rt0.c4, vt1.c1 FROM vt1, vt0, v0 RIGHT OUTER JOIN rt0 ON (((vt1.c0 IN ()))IS NOT(((rt0.c2) BETWEEN (vt1.c1) AND ('-2120533279')))) GROUP BY rt0.c2, rt0.c0, rt0.c5, vt0.c1, rt0.c1, vt1.c0, rt0.c4, vt1.c1 HAVING (NOT ((- (COUNT(COUNT(*)))))) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c5, vt0.c1, rt0.c1, vt1.c0, rt0.c4, vt1.c1 FROM vt1, vt0, v0 RIGHT OUTER JOIN rt0 ON (((vt1.c0 IN ()))IS NOT(((rt0.c2) BETWEEN (vt1.c1) AND ('-2120533279')))) GROUP BY rt0.c2, rt0.c0, rt0.c5, vt0.c1, rt0.c1, vt1.c0, rt0.c4, vt1.c1 HAVING (((- (COUNT(COUNT(*))))) ISNULL);
SELECT * FROM v0, vt0, vt1, rt0, vt2;
SELECT ALL * FROM v0, vt0, vt1, rt0, vt2 WHERE (IFNULL(DISTINCT rt0.c1, IFNULL(DISTINCT v0.c0, v0.c0))) UNION ALL SELECT ALL * FROM v0, vt0, vt1, rt0, vt2 WHERE ((NOT (IFNULL(DISTINCT rt0.c1, IFNULL(DISTINCT v0.c0, v0.c0))))) UNION ALL SELECT * FROM v0, vt0, vt1, rt0, vt2 WHERE (((IFNULL(DISTINCT rt0.c1, IFNULL(DISTINCT v0.c0, v0.c0))) ISNULL));
SELECT * FROM v0, vt0, vt1, rt0, vt2;
SELECT DISTINCT vt0.c1, rt0.c4, vt0.c0, rt0.c2, rt0.c1, rt0.c5, rt0.c0 FROM vt0, rt0;
SELECT DISTINCT vt0.c1, rt0.c4, vt0.c0, rt0.c2, rt0.c1, rt0.c5, rt0.c0 FROM vt0, rt0 WHERE (((((rt0.c2)==(rt0.c0))) NOTNULL)) UNION SELECT DISTINCT vt0.c1, rt0.c4, vt0.c0, rt0.c2, rt0.c1, rt0.c5, rt0.c0 FROM vt0, rt0 WHERE ((NOT (((((rt0.c2)=(rt0.c0))) NOTNULL)))) UNION SELECT DISTINCT vt0.c1, rt0.c4, vt0.c0, rt0.c2, rt0.c1, rt0.c5, rt0.c0 FROM vt0, rt0 WHERE (((((((rt0.c2)==(rt0.c0))) NOTNULL)) ISNULL));
SELECT DISTINCT vt0.c1, rt0.c4, vt0.c0, rt0.c2, rt0.c1, rt0.c5, rt0.c0 FROM vt0, rt0;
SELECT vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0;
SELECT vt1.c1, vt1.c0 FROM vt1 WHERE (CASE ((vt1.c1)-(vt1.c1))  WHEN (((vt1.c0, vt1.c1, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, x'8f01')) AND ((vt1.c0, vt1.c0, vt1.c1))) THEN CASE vt1.c0  WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c0 END WHEN ((vt1.c0) NOTNULL) THEN vt1.c1 WHEN vt1.c1 THEN CAST(vt1.c1 AS INTEGER) END) GROUP BY vt1.c1, vt1.c0 UNION SELECT ALL vt1.c1, vt1.c0 FROM vt1 WHERE ((NOT (CASE ((vt1.c1)-(vt1.c1))  WHEN (((vt1.c0, vt1.c1, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, x'8f01')) AND ((vt1.c0, vt1.c0, vt1.c1))) THEN CASE vt1.c0  WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c0 END WHEN ((vt1.c0) NOTNULL) THEN vt1.c1 WHEN vt1.c1 THEN CAST(vt1.c1 AS INTEGER) END))) GROUP BY vt1.c1, vt1.c0 UNION SELECT ALL vt1.c1, vt1.c0 FROM vt1 WHERE (((CASE ((vt1.c1)-(vt1.c1))  WHEN (((vt1.c0, vt1.c1, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, x'8f01')) AND ((vt1.c0, vt1.c0, vt1.c1))) THEN CASE vt1.c0  WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c0 END WHEN ((vt1.c0) NOTNULL) THEN vt1.c1 WHEN vt1.c1 THEN CAST(vt1.c1 AS INTEGER) END) ISNULL)) GROUP BY vt1.c1, vt1.c0;
SELECT vt1.c1, vt1.c0 FROM vt1 GROUP BY vt1.c1, vt1.c0;
SELECT ALL vt0.c1, rt0.c3, rt0.c2, v0.c0, rt0.c4, vt0.c0, rt0.c1, rt0.c0, rt0.c5 FROM vt0, v0 NATURAL JOIN rt0 GROUP BY vt0.c1, rt0.c3, rt0.c2, v0.c0, rt0.c4, vt0.c0, rt0.c1, rt0.c0, rt0.c5;
SELECT vt0.c1, rt0.c3, rt0.c2, v0.c0, rt0.c4, vt0.c0, rt0.c1, rt0.c0, rt0.c5 FROM vt0, v0 NATURAL JOIN rt0 GROUP BY vt0.c1, rt0.c3, rt0.c2, v0.c0, rt0.c4, vt0.c0, rt0.c1, rt0.c0, rt0.c5 HAVING CASE WHEN (('UL')<=(COUNT(*))) THEN ((v0.c0) NOT BETWEEN (COUNT(rt0.c3)) AND (MIN(AVG(MIN(rt0.c1))))) WHEN MIN(rt0.c3) THEN AVG(SUM(x'')) WHEN COUNT(rt0.c5) THEN SUM(x'') END UNION ALL SELECT vt0.c1, rt0.c3, rt0.c2, v0.c0, rt0.c4, vt0.c0, rt0.c1, rt0.c0, rt0.c5 FROM vt0, v0 NATURAL JOIN rt0 GROUP BY vt0.c1, rt0.c3, rt0.c2, v0.c0, rt0.c4, vt0.c0, rt0.c1, rt0.c0, rt0.c5 HAVING (NOT (CASE WHEN (('UL')<=(COUNT(*))) THEN ((v0.c0) NOT BETWEEN (COUNT(rt0.c3)) AND (MIN(AVG(MIN(rt0.c1))))) WHEN MIN(rt0.c3) THEN AVG(SUM(x'')) WHEN COUNT(rt0.c5) THEN SUM(x'') END)) UNION ALL SELECT ALL vt0.c1, rt0.c3, rt0.c2, v0.c0, rt0.c4, vt0.c0, rt0.c1, rt0.c0, rt0.c5 FROM vt0, v0 NATURAL JOIN rt0 GROUP BY vt0.c1, rt0.c3, rt0.c2, v0.c0, rt0.c4, vt0.c0, rt0.c1, rt0.c0, rt0.c5 HAVING ((CASE WHEN (('UL')<=(COUNT(*))) THEN ((v0.c0) NOT BETWEEN (COUNT(rt0.c3)) AND (MIN(AVG(MIN(rt0.c1))))) WHEN MIN(rt0.c3) THEN AVG(SUM(x'')) WHEN COUNT(rt0.c5) THEN SUM(x'') END) ISNULL);
SELECT * FROM rt0, v0;
SELECT ALL * FROM rt0, v0 WHERE (((((rt0.c5) NOT BETWEEN (rt0.c3) AND (v0.c0)))/(((rt0.c4) BETWEEN (rt0.c2) AND (rt0.c0))))) UNION ALL SELECT ALL * FROM rt0, v0 WHERE ((NOT (((((rt0.c5) NOT BETWEEN (rt0.c3) AND (v0.c0)))/(((rt0.c4) BETWEEN (rt0.c2) AND (rt0.c0))))))) UNION ALL SELECT ALL * FROM rt0, v0 WHERE (((((((rt0.c5) NOT BETWEEN (rt0.c3) AND (v0.c0)))/(((rt0.c4) BETWEEN (rt0.c2) AND (rt0.c0))))) ISNULL));
SELECT * FROM rt0, v0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (0.3376615642304137) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (0.3376615642304137))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((0.3376615642304137) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT vt0.c1 FROM v0, vt0 GROUP BY vt0.c1;
SELECT vt0.c1 FROM v0, vt0 WHERE ((NOT ((vt0.c0 IN (vt0.c0, vt0.c1))))) GROUP BY vt0.c1 UNION SELECT ALL vt0.c1 FROM v0, vt0 WHERE ((NOT ((NOT ((vt0.c0 IN (vt0.c0, vt0.c1))))))) GROUP BY vt0.c1 UNION SELECT ALL vt0.c1 FROM v0, vt0 WHERE ((((NOT ((vt0.c0 IN (vt0.c0, vt0.c1))))) ISNULL)) GROUP BY vt0.c1;
SELECT vt0.c1 FROM v0, vt0 GROUP BY vt0.c1;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING AVG(SUM(878872059) COLLATE NOCASE) UNION ALL SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING (NOT (AVG(SUM(878872059) COLLATE NOCASE))) UNION ALL SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING ((AVG(SUM(878872059) COLLATE NOCASE)) ISNULL);
SELECT v0.c0 FROM v0;
SELECT v0.c0 FROM v0 WHERE ((((v0.c0 COLLATE BINARY))<((CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE ((NOT ((((v0.c0 COLLATE BINARY))<((CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)))))) UNION ALL SELECT v0.c0 FROM v0 WHERE ((((((v0.c0 COLLATE BINARY))<((CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)))) ISNULL));
SELECT v0.c0 FROM v0;
SELECT DISTINCT vt2.c0 FROM vt2;
SELECT DISTINCT vt2.c0 FROM vt2 WHERE (CASE WHEN (((x'')) NOT BETWEEN ((vt2.c0)) AND ((x''))) THEN vt2.c0 COLLATE RTRIM ELSE ((vt2.c0)>(vt2.c0)) END) UNION SELECT DISTINCT vt2.c0 FROM vt2 WHERE ((NOT (CASE WHEN (((x'')) NOT BETWEEN ((vt2.c0)) AND ((x''))) THEN vt2.c0 COLLATE RTRIM ELSE ((vt2.c0)>(vt2.c0)) END))) UNION SELECT DISTINCT vt2.c0 FROM vt2 WHERE (((CASE WHEN (((x'')) NOT BETWEEN ((vt2.c0)) AND ((x''))) THEN vt2.c0 COLLATE RTRIM ELSE ((vt2.c0)>(vt2.c0)) END) ISNULL));
SELECT DISTINCT vt2.c0 FROM vt2;
SELECT ALL vt0.c0 FROM vt1, vt0, v0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt1, vt0, v0 WHERE (CAST((~ (vt1.c1)) AS NUMERIC)) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt1, vt0, v0 WHERE ((NOT (CAST((~ (vt1.c1)) AS NUMERIC)))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt1, vt0, v0 WHERE (((CAST((~ (vt1.c1)) AS NUMERIC)) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt1, vt0, v0 GROUP BY vt0.c0;
SELECT ALL rt0.c5, rt0.c4, rt0.c0, vt2.c0, rt0.c1, rt0.c2 FROM rt0 CROSS JOIN vt2 ON (~ (CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c4 END)) GROUP BY rt0.c5, rt0.c4, rt0.c0, vt2.c0, rt0.c1, rt0.c2;
SELECT rt0.c5, rt0.c4, rt0.c0, vt2.c0, rt0.c1, rt0.c2 FROM rt0 CROSS JOIN vt2 ON (~ (CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c4 END)) GROUP BY rt0.c5, rt0.c4, rt0.c0, vt2.c0, rt0.c1, rt0.c2 HAVING json_remove(((rt0.c5) IS FALSE), SUM(COUNT(*))) UNION ALL SELECT rt0.c5, rt0.c4, rt0.c0, vt2.c0, rt0.c1, rt0.c2 FROM rt0 CROSS JOIN vt2 ON (~ (CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c4 END)) GROUP BY rt0.c5, rt0.c4, rt0.c0, vt2.c0, rt0.c1, rt0.c2 HAVING (NOT (json_remove(((rt0.c5) IS FALSE), SUM(COUNT(*))))) UNION ALL SELECT ALL rt0.c5, rt0.c4, rt0.c0, vt2.c0, rt0.c1, rt0.c2 FROM rt0 CROSS JOIN vt2 ON (~ (CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c4 END)) GROUP BY rt0.c5, rt0.c4, rt0.c0, vt2.c0, rt0.c1, rt0.c2 HAVING ((json_remove(((rt0.c5) IS FALSE), SUM(COUNT(*)))) ISNULL);
SELECT ALL TOTAL(((CAST(vt2.c0 AS REAL))OR((rt0.c1 IN ())))) FROM vt0, v0, vt2, rt0;
SELECT vt2.c0 FROM vt2;
SELECT vt2.c0 FROM vt2 WHERE (((CAST(vt2.c0 AS INTEGER)) IS TRUE)) UNION ALL SELECT vt2.c0 FROM vt2 WHERE ((NOT (((CAST(vt2.c0 AS INTEGER)) IS TRUE)))) UNION ALL SELECT ALL vt2.c0 FROM vt2 WHERE (((((CAST(vt2.c0 AS INTEGER)) IS TRUE)) ISNULL));
SELECT vt2.c0 FROM vt2;
SELECT DISTINCT vt1.c0 FROM vt0, vt1;
SELECT DISTINCT vt1.c0 FROM vt0, vt1 WHERE (LENGTH(1.444248718E9)) UNION SELECT DISTINCT vt1.c0 FROM vt0, vt1 WHERE ((NOT (LENGTH(1.444248718E9)))) UNION SELECT DISTINCT vt1.c0 FROM vt0, vt1 WHERE (((LENGTH(1.444248718E9)) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt0, vt1;
SELECT vt0.c0, v0.c0, vt2.c0, vt0.c1 FROM vt2 RIGHT OUTER JOIN vt0 ON '	YRe>,aY' CROSS JOIN v0 ON ((x'eebd')>>((vt2.c0 IN (v0.c0)))) GROUP BY vt0.c0, v0.c0, vt2.c0, vt0.c1;
SELECT vt0.c0, v0.c0, vt2.c0, vt0.c1 FROM vt2 RIGHT OUTER JOIN vt0 ON '	YRe>,aY' CROSS JOIN v0 ON ((x'eebd')>>((vt2.c0 IN (v0.c0)))) WHERE (CAST(((NULL) NOTNULL) AS BLOB)) GROUP BY vt0.c0, v0.c0, vt2.c0, vt0.c1 UNION SELECT vt0.c0, v0.c0, vt2.c0, vt0.c1 FROM vt2 RIGHT OUTER JOIN vt0 ON '	YRe>,aY' CROSS JOIN v0 ON ((x'eebd')>>((vt2.c0 IN (v0.c0)))) WHERE ((NOT (CAST(((NULL) NOTNULL) AS BLOB)))) GROUP BY vt0.c0, v0.c0, vt2.c0, vt0.c1 UNION SELECT ALL vt0.c0, v0.c0, vt2.c0, vt0.c1 FROM vt2 RIGHT OUTER JOIN vt0 ON '	YRe>,aY' CROSS JOIN v0 ON ((x'eebd')>>((vt2.c0 IN (v0.c0)))) WHERE (((CAST(((NULL) NOTNULL) AS BLOB)) ISNULL)) GROUP BY vt0.c0, v0.c0, vt2.c0, vt0.c1;
SELECT vt0.c0, v0.c0, vt2.c0, vt0.c1 FROM vt2 RIGHT OUTER JOIN vt0 ON '	YRe>,aY' CROSS JOIN v0 ON ((x'eebd')>>((vt2.c0 IN (v0.c0)))) GROUP BY vt0.c0, v0.c0, vt2.c0, vt0.c1;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((MAX(v0.c0)) NOT NULL) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (((MAX(v0.c0)) NOT NULL))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((((MAX(v0.c0)) NOT NULL)) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((MAX(v0.c0)) NOT NULL) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (((MAX(v0.c0)) NOT NULL))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((((MAX(v0.c0)) NOT NULL)) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT vt1.c1, rt0.c2 FROM rt0, vt1 CROSS JOIN v0 ON (- (UNLIKELY(DISTINCT rt0.c2)));
SELECT vt1.c1, rt0.c2 FROM rt0, vt1 CROSS JOIN v0 ON (- (UNLIKELY(DISTINCT rt0.c2))) WHERE (NULL) UNION ALL SELECT vt1.c1, rt0.c2 FROM rt0, vt1 CROSS JOIN v0 ON (- (UNLIKELY(DISTINCT rt0.c2))) WHERE ((NOT (NULL))) UNION ALL SELECT vt1.c1, rt0.c2 FROM rt0, vt1 CROSS JOIN v0 ON (- (UNLIKELY(DISTINCT rt0.c2))) WHERE (((NULL) ISNULL));
SELECT vt1.c1, rt0.c2 FROM rt0, vt1 CROSS JOIN v0 ON (- (UNLIKELY(DISTINCT rt0.c2)));
SELECT DISTINCT * FROM v0, vt2, vt0, vt1 CROSS JOIN rt0 ON (((vt1.c0, rt0.c5, vt0.c0)) NOT BETWEEN (((+ (rt0.c0)), (((vt1.c0))>=((rt0.c1))), '1073021116')) AND (((v0.c0 IN ()), QUOTE(rt0.c1), ((rt0.c4)|(vt1.c0)))));
SELECT DISTINCT * FROM v0, vt2, vt0, vt1 CROSS JOIN rt0 ON (((vt1.c0, rt0.c5, vt0.c0)) NOT BETWEEN (((+ (rt0.c0)), (((vt1.c0))>=((rt0.c1))), '1073021116')) AND (((v0.c0 IN ()), QUOTE(rt0.c1), ((rt0.c4)|(vt1.c0))))) WHERE ((+ (((((vt1.c1)OR(vt0.c1)))OR(rt0.c0))))) UNION SELECT DISTINCT * FROM v0, vt2, vt0, vt1 CROSS JOIN rt0 ON (((vt1.c0, rt0.c5, vt0.c0)) NOT BETWEEN (((+ (rt0.c0)), (((vt1.c0))>=((rt0.c1))), '1073021116')) AND (((v0.c0 IN ()), QUOTE(rt0.c1), ((rt0.c4)|(vt1.c0))))) WHERE ((NOT ((+ (((((vt1.c1)OR(vt0.c1)))OR(rt0.c0))))))) UNION SELECT DISTINCT * FROM v0, vt2, vt0, vt1 CROSS JOIN rt0 ON (((vt1.c0, rt0.c5, vt0.c0)) NOT BETWEEN (((+ (rt0.c0)), (((vt1.c0))>=((rt0.c1))), '1073021116')) AND (((v0.c0 IN ()), QUOTE(rt0.c1), ((rt0.c4)|(vt1.c0))))) WHERE ((((+ (((((vt1.c1)OR(vt0.c1)))OR(rt0.c0))))) ISNULL));
SELECT DISTINCT * FROM v0, vt2, vt0, vt1 CROSS JOIN rt0 ON (((vt1.c0, rt0.c5, vt0.c0)) NOT BETWEEN (((+ (rt0.c0)), (((vt1.c0))>=((rt0.c1))), '1073021116')) AND (((v0.c0 IN ()), QUOTE(rt0.c1), ((rt0.c4)|(vt1.c0)))));
SELECT vt0.c0 FROM vt2, vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt2, vt0 WHERE (CASE LIKELIHOOD(DISTINCT vt0.c1, 0.17290511199980074)  WHEN (~ (vt0.c0)) THEN NULL END) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt2, vt0 WHERE ((NOT (CASE LIKELIHOOD(DISTINCT vt0.c1, 0.17290511199980074)  WHEN (~ (vt0.c0)) THEN NULL END))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt2, vt0 WHERE (((CASE LIKELIHOOD(DISTINCT vt0.c1, 0.17290511199980074)  WHEN (~ (vt0.c0)) THEN NULL END) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt2, vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c1, vt1.c1, vt0.c0, vt1.c0, v0.c0 FROM v0, vt0, vt1 GROUP BY vt0.c1, vt1.c1, vt0.c0, vt1.c0, v0.c0;
SELECT ALL vt0.c1, vt1.c1, vt0.c0, vt1.c0, v0.c0 FROM v0, vt0, vt1 GROUP BY vt0.c1, vt1.c1, vt0.c0, vt1.c0, v0.c0 HAVING CAST(v0.c0 AS TEXT) UNION ALL SELECT ALL vt0.c1, vt1.c1, vt0.c0, vt1.c0, v0.c0 FROM v0, vt0, vt1 GROUP BY vt0.c1, vt1.c1, vt0.c0, vt1.c0, v0.c0 HAVING (NOT (CAST(v0.c0 AS TEXT))) UNION ALL SELECT vt0.c1, vt1.c1, vt0.c0, vt1.c0, v0.c0 FROM v0, vt0, vt1 GROUP BY vt0.c1, vt1.c1, vt0.c0, vt1.c0, v0.c0 HAVING ((CAST(v0.c0 AS TEXT)) ISNULL);
SELECT ALL vt0.c1, vt1.c1, vt0.c0, vt1.c0, v0.c0 FROM v0, vt0, vt1 GROUP BY vt0.c1, vt1.c1, vt0.c0, vt1.c0, v0.c0;
SELECT ALL vt0.c1, vt1.c1, vt0.c0, vt1.c0, v0.c0 FROM v0, vt0, vt1 GROUP BY vt0.c1, vt1.c1, vt0.c0, vt1.c0, v0.c0 HAVING CAST(v0.c0 AS TEXT) UNION ALL SELECT ALL vt0.c1, vt1.c1, vt0.c0, vt1.c0, v0.c0 FROM v0, vt0, vt1 GROUP BY vt0.c1, vt1.c1, vt0.c0, vt1.c0, v0.c0 HAVING (NOT (CAST(v0.c0 AS TEXT))) UNION ALL SELECT vt0.c1, vt1.c1, vt0.c0, vt1.c0, v0.c0 FROM v0, vt0, vt1 GROUP BY vt0.c1, vt1.c1, vt0.c0, vt1.c0, v0.c0 HAVING ((CAST(v0.c0 AS TEXT)) ISNULL);
SELECT ALL vt0.c1, vt1.c1, vt0.c0, vt1.c0, v0.c0 FROM v0, vt0, vt1 GROUP BY vt0.c1, vt1.c1, vt0.c0, vt1.c0, v0.c0;
SELECT ALL rt0.c5, rt0.c4, rt0.c0, rt0.c3, rt0.c2 FROM rt0;
SELECT ALL rt0.c5, rt0.c4, rt0.c0, rt0.c3, rt0.c2 FROM rt0 WHERE ((rt0.c0 IN ()) COLLATE BINARY) UNION ALL SELECT rt0.c5, rt0.c4, rt0.c0, rt0.c3, rt0.c2 FROM rt0 WHERE ((NOT ((rt0.c0 IN ()) COLLATE BINARY))) UNION ALL SELECT ALL rt0.c5, rt0.c4, rt0.c0, rt0.c3, rt0.c2 FROM rt0 WHERE ((((rt0.c0 IN ()) COLLATE BINARY) ISNULL));
SELECT ALL rt0.c5, rt0.c4, rt0.c0, rt0.c3, rt0.c2 FROM rt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE ((- (vt0.c0)) COLLATE BINARY) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT ((- (vt0.c0)) COLLATE BINARY))) UNION SELECT DISTINCT * FROM vt0 WHERE ((((- (vt0.c0)) COLLATE BINARY) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL vt1.c1, rt0.c5, rt0.c4, rt0.c2, rt0.c0, vt2.c0, vt0.c1, rt0.c1, vt0.c0, vt1.c0 FROM rt0 FULL OUTER JOIN v0 ON (0.7594816742132999 IN ()) RIGHT OUTER JOIN vt2 ON (((((rt0.c2 IN (vt0.c0, rt0.c1, v0.c0, v0.c0)))OR(((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)))))OR(UPPER(vt1.c1))) FULL OUTER JOIN vt1 ON (((rt0.c3 IN ())) ISNULL) CROSS JOIN vt0 ON (- (rt0.c5)) GROUP BY vt1.c1, rt0.c5, rt0.c4, rt0.c2, rt0.c0, vt2.c0, vt0.c1, rt0.c1, vt0.c0, vt1.c0;
SELECT rt0.c3, rt0.c5 FROM rt0 GROUP BY rt0.c3, rt0.c5;
SELECT rt0.c3, rt0.c5 FROM rt0 GROUP BY rt0.c3, rt0.c5 HAVING COUNT(rt0.c2) UNION ALL SELECT ALL rt0.c3, rt0.c5 FROM rt0 GROUP BY rt0.c3, rt0.c5 HAVING (NOT (COUNT(rt0.c2))) UNION ALL SELECT ALL rt0.c3, rt0.c5 FROM rt0 GROUP BY rt0.c3, rt0.c5 HAVING ((COUNT(rt0.c2)) ISNULL);
SELECT rt0.c3, rt0.c5 FROM rt0 GROUP BY rt0.c3, rt0.c5;
SELECT rt0.c3, rt0.c5 FROM rt0 GROUP BY rt0.c3, rt0.c5 HAVING COUNT(rt0.c2) UNION ALL SELECT ALL rt0.c3, rt0.c5 FROM rt0 GROUP BY rt0.c3, rt0.c5 HAVING (NOT (COUNT(rt0.c2))) UNION ALL SELECT ALL rt0.c3, rt0.c5 FROM rt0 GROUP BY rt0.c3, rt0.c5 HAVING ((COUNT(rt0.c2)) ISNULL);
SELECT rt0.c3, rt0.c5 FROM rt0 GROUP BY rt0.c3, rt0.c5;
SELECT rt0.c5 FROM v0, vt1, rt0 LEFT OUTER JOIN vt2 ON ((CASE WHEN rt0.c4 THEN vt1.c1 END) NOT NULL);
SELECT ALL rt0.c5 FROM v0, vt1, rt0 LEFT OUTER JOIN vt2 ON ((CASE WHEN rt0.c4 THEN vt1.c1 END) NOT NULL) WHERE (TRIM((((rt0.c1))==((vt2.c0))), rt0.c2)) UNION ALL SELECT ALL rt0.c5 FROM v0, vt1, rt0 LEFT OUTER JOIN vt2 ON ((CASE WHEN rt0.c4 THEN vt1.c1 END) NOT NULL) WHERE ((NOT (TRIM((((rt0.c1))==((vt2.c0))), rt0.c2)))) UNION ALL SELECT rt0.c5 FROM v0, vt1, rt0 LEFT OUTER JOIN vt2 ON ((CASE WHEN rt0.c4 THEN vt1.c1 END) NOT NULL) WHERE (((TRIM((((rt0.c1))=((vt2.c0))), rt0.c2)) ISNULL));
SELECT rt0.c5 FROM v0, vt1, rt0 LEFT OUTER JOIN vt2 ON ((CASE WHEN rt0.c4 THEN vt1.c1 END) NOT NULL);
SELECT DISTINCT vt2.c0, vt1.c0, vt1.c1, vt0.c0, vt0.c1 FROM vt1, vt0, vt2;
SELECT DISTINCT vt2.c0, vt1.c0, vt1.c1, vt0.c0, vt0.c1 FROM vt1, vt0, vt2 WHERE (((((((vt1.c1)OR(vt1.c0)))OR(vt0.c0))) BETWEEN (NULL) AND ((((x''))!=((vt0.c1)))))) UNION SELECT DISTINCT vt2.c0, vt1.c0, vt1.c1, vt0.c0, vt0.c1 FROM vt1, vt0, vt2 WHERE ((NOT (((((((vt1.c1)OR(vt1.c0)))OR(vt0.c0))) BETWEEN (NULL) AND ((((x''))!=((vt0.c1)))))))) UNION SELECT DISTINCT vt2.c0, vt1.c0, vt1.c1, vt0.c0, vt0.c1 FROM vt1, vt0, vt2 WHERE (((((((((vt1.c1)OR(vt1.c0)))OR(vt0.c0))) BETWEEN (NULL) AND ((((x''))<>((vt0.c1)))))) ISNULL));
SELECT DISTINCT vt2.c0, vt1.c0, vt1.c1, vt0.c0, vt0.c1 FROM vt1, vt0, vt2;
SELECT rt0.c0, vt0.c1, v0.c0 FROM vt0 RIGHT OUTER JOIN v0 ON ((((((((rt0.c5)OR(rt0.c1)))AND(rt0.c0)))AND(((rt0.c3)<<(NULL)))))OR((('')<<(rt0.c1)))) CROSS JOIN rt0 ON ((((((((vt0.c0)AND((vt2.c0 IN ()))))AND(((((rt0.c1)OR(rt0.c2)))OR(rt0.c5)))))OR(LOWER(rt0.c1))))AND(vt2.c0 COLLATE NOCASE)) LEFT OUTER JOIN vt2 ON -9.32354663E8 GROUP BY rt0.c0, vt0.c1, v0.c0;
SELECT ALL rt0.c3, rt0.c1, vt1.c0, vt1.c1, v0.c0, rt0.c4, rt0.c2, vt2.c0 FROM vt1, rt0 LEFT OUTER JOIN v0 ON (((((rt0.c2))<>((vt1.c0))))||(((vt1.c0)*(v0.c0)))) LEFT OUTER JOIN vt2 ON ((((((((((rt0.c1)/('197372049')))AND(((vt1.c0) NOT BETWEEN (rt0.c3) AND (vt2.c0)))))OR(((0.6276482070834271) IS FALSE))))AND((rt0.c3 IN (NULL)))))AND(((rt0.c2) IS FALSE))) GROUP BY rt0.c3, rt0.c1, vt1.c0, vt1.c1, v0.c0, rt0.c4, rt0.c2, vt2.c0;
SELECT rt0.c3, rt0.c1, vt1.c0, vt1.c1, v0.c0, rt0.c4, rt0.c2, vt2.c0 FROM vt1, rt0 LEFT OUTER JOIN v0 ON (((((rt0.c2))!=((vt1.c0))))||(((vt1.c0)*(v0.c0)))) LEFT OUTER JOIN vt2 ON ((((((((((rt0.c1)/('197372049')))AND(((vt1.c0) NOT BETWEEN (rt0.c3) AND (vt2.c0)))))OR(((0.6276482070834271) IS FALSE))))AND((rt0.c3 IN (NULL)))))AND(((rt0.c2) IS FALSE))) GROUP BY rt0.c3, rt0.c1, vt1.c0, vt1.c1, v0.c0, rt0.c4, rt0.c2, vt2.c0 HAVING AVG('-1221308971') UNION ALL SELECT ALL rt0.c3, rt0.c1, vt1.c0, vt1.c1, v0.c0, rt0.c4, rt0.c2, vt2.c0 FROM vt1, rt0 LEFT OUTER JOIN v0 ON (((((rt0.c2))!=((vt1.c0))))||(((vt1.c0)*(v0.c0)))) LEFT OUTER JOIN vt2 ON ((((((((((rt0.c1)/('197372049')))AND(((vt1.c0) NOT BETWEEN (rt0.c3) AND (vt2.c0)))))OR(((0.6276482070834271) IS FALSE))))AND((rt0.c3 IN (NULL)))))AND(((rt0.c2) IS FALSE))) GROUP BY rt0.c3, rt0.c1, vt1.c0, vt1.c1, v0.c0, rt0.c4, rt0.c2, vt2.c0 HAVING (NOT (AVG('-1221308971'))) UNION ALL SELECT ALL rt0.c3, rt0.c1, vt1.c0, vt1.c1, v0.c0, rt0.c4, rt0.c2, vt2.c0 FROM vt1, rt0 LEFT OUTER JOIN v0 ON (((((rt0.c2))!=((vt1.c0))))||(((vt1.c0)*(v0.c0)))) LEFT OUTER JOIN vt2 ON ((((((((((rt0.c1)/('197372049')))AND(((vt1.c0) NOT BETWEEN (rt0.c3) AND (vt2.c0)))))OR(((0.6276482070834271) IS FALSE))))AND((rt0.c3 IN (NULL)))))AND(((rt0.c2) IS FALSE))) GROUP BY rt0.c3, rt0.c1, vt1.c0, vt1.c1, v0.c0, rt0.c4, rt0.c2, vt2.c0 HAVING ((AVG('-1221308971')) ISNULL);
SELECT ALL rt0.c3, rt0.c1, vt1.c0, vt1.c1, v0.c0, rt0.c4, rt0.c2, vt2.c0 FROM vt1, rt0 LEFT OUTER JOIN v0 ON (((((rt0.c2))<>((vt1.c0))))||(((vt1.c0)*(v0.c0)))) LEFT OUTER JOIN vt2 ON ((((((((((rt0.c1)/('197372049')))AND(((vt1.c0) NOT BETWEEN (rt0.c3) AND (vt2.c0)))))OR(((0.6276482070834271) IS FALSE))))AND((rt0.c3 IN (NULL)))))AND(((rt0.c2) IS FALSE))) GROUP BY rt0.c3, rt0.c1, vt1.c0, vt1.c1, v0.c0, rt0.c4, rt0.c2, vt2.c0;
SELECT rt0.c3, rt0.c1, vt1.c0, vt1.c1, v0.c0, rt0.c4, rt0.c2, vt2.c0 FROM vt1, rt0 LEFT OUTER JOIN v0 ON (((((rt0.c2))!=((vt1.c0))))||(((vt1.c0)*(v0.c0)))) LEFT OUTER JOIN vt2 ON ((((((((((rt0.c1)/('197372049')))AND(((vt1.c0) NOT BETWEEN (rt0.c3) AND (vt2.c0)))))OR(((0.6276482070834271) IS FALSE))))AND((rt0.c3 IN (NULL)))))AND(((rt0.c2) IS FALSE))) GROUP BY rt0.c3, rt0.c1, vt1.c0, vt1.c1, v0.c0, rt0.c4, rt0.c2, vt2.c0 HAVING AVG('-1221308971') UNION ALL SELECT ALL rt0.c3, rt0.c1, vt1.c0, vt1.c1, v0.c0, rt0.c4, rt0.c2, vt2.c0 FROM vt1, rt0 LEFT OUTER JOIN v0 ON (((((rt0.c2))!=((vt1.c0))))||(((vt1.c0)*(v0.c0)))) LEFT OUTER JOIN vt2 ON ((((((((((rt0.c1)/('197372049')))AND(((vt1.c0) NOT BETWEEN (rt0.c3) AND (vt2.c0)))))OR(((0.6276482070834271) IS FALSE))))AND((rt0.c3 IN (NULL)))))AND(((rt0.c2) IS FALSE))) GROUP BY rt0.c3, rt0.c1, vt1.c0, vt1.c1, v0.c0, rt0.c4, rt0.c2, vt2.c0 HAVING (NOT (AVG('-1221308971'))) UNION ALL SELECT ALL rt0.c3, rt0.c1, vt1.c0, vt1.c1, v0.c0, rt0.c4, rt0.c2, vt2.c0 FROM vt1, rt0 LEFT OUTER JOIN v0 ON (((((rt0.c2))!=((vt1.c0))))||(((vt1.c0)*(v0.c0)))) LEFT OUTER JOIN vt2 ON ((((((((((rt0.c1)/('197372049')))AND(((vt1.c0) NOT BETWEEN (rt0.c3) AND (vt2.c0)))))OR(((0.6276482070834271) IS FALSE))))AND((rt0.c3 IN (NULL)))))AND(((rt0.c2) IS FALSE))) GROUP BY rt0.c3, rt0.c1, vt1.c0, vt1.c1, v0.c0, rt0.c4, rt0.c2, vt2.c0 HAVING ((AVG('-1221308971')) ISNULL);
SELECT ALL rt0.c3, rt0.c1, vt1.c0, vt1.c1, v0.c0, rt0.c4, rt0.c2, vt2.c0 FROM vt1, rt0 LEFT OUTER JOIN v0 ON (((((rt0.c2))<>((vt1.c0))))||(((vt1.c0)*(v0.c0)))) LEFT OUTER JOIN vt2 ON ((((((((((rt0.c1)/('197372049')))AND(((vt1.c0) NOT BETWEEN (rt0.c3) AND (vt2.c0)))))OR(((0.6276482070834271) IS FALSE))))AND((rt0.c3 IN (NULL)))))AND(((rt0.c2) IS FALSE))) GROUP BY rt0.c3, rt0.c1, vt1.c0, vt1.c1, v0.c0, rt0.c4, rt0.c2, vt2.c0;
SELECT ALL vt1.c1, vt0.c0 FROM vt1, vt0, v0;
SELECT vt1.c1, vt0.c0 FROM vt1, vt0, v0 WHERE (v0.c0) UNION ALL SELECT ALL vt1.c1, vt0.c0 FROM vt1, vt0, v0 WHERE ((NOT (v0.c0))) UNION ALL SELECT vt1.c1, vt0.c0 FROM vt1, vt0, v0 WHERE (((v0.c0) ISNULL));
SELECT ALL vt1.c1, vt0.c0 FROM vt1, vt0, v0;
SELECT DISTINCT vt2.c0, rt0.c0, v0.c0, rt0.c2, rt0.c4, rt0.c1, rt0.c3 FROM vt2, v0 LEFT OUTER JOIN rt0 ON ((((rt0.c2)%(vt2.c0)))<>((((rt0.c0))<((rt0.c5)))));
SELECT DISTINCT vt2.c0, rt0.c0, v0.c0, rt0.c2, rt0.c4, rt0.c1, rt0.c3 FROM vt2, v0 LEFT OUTER JOIN rt0 ON ((((rt0.c2)%(vt2.c0)))!=((((rt0.c0))<((rt0.c5))))) WHERE ((+ ((rt0.c1 IN ())))) UNION SELECT DISTINCT vt2.c0, rt0.c0, v0.c0, rt0.c2, rt0.c4, rt0.c1, rt0.c3 FROM vt2, v0 LEFT OUTER JOIN rt0 ON ((((rt0.c2)%(vt2.c0)))<>((((rt0.c0))<((rt0.c5))))) WHERE ((NOT ((+ ((rt0.c1 IN ())))))) UNION SELECT DISTINCT vt2.c0, rt0.c0, v0.c0, rt0.c2, rt0.c4, rt0.c1, rt0.c3 FROM vt2, v0 LEFT OUTER JOIN rt0 ON ((((rt0.c2)%(vt2.c0)))<>((((rt0.c0))<((rt0.c5))))) WHERE ((((+ ((rt0.c1 IN ())))) ISNULL));
SELECT DISTINCT vt2.c0, rt0.c0, v0.c0, rt0.c2, rt0.c4, rt0.c1, rt0.c3 FROM vt2, v0 LEFT OUTER JOIN rt0 ON ((((rt0.c2)%(vt2.c0)))<>((((rt0.c0))<((rt0.c5)))));
SELECT vt1.c0, vt2.c0, vt1.c1 FROM vt2 RIGHT OUTER JOIN vt1 ON COALESCE(((vt1.c0)*(vt1.c1)), (((vt1.c0))<((vt1.c1))), NULL, (- (vt2.c0))) GROUP BY vt1.c0, vt2.c0, vt1.c1;
SELECT vt1.c0, vt2.c0, vt1.c1 FROM vt2 RIGHT OUTER JOIN vt1 ON COALESCE(((vt1.c0)*(vt1.c1)), (((vt1.c0))<((vt1.c1))), NULL, (- (vt2.c0))) WHERE (SQLITE_COMPILEOPTION_GET(CASE vt1.c1  WHEN vt2.c0 THEN vt2.c0 ELSE vt2.c0 END)) GROUP BY vt1.c0, vt2.c0, vt1.c1 UNION SELECT vt1.c0, vt2.c0, vt1.c1 FROM vt2 RIGHT OUTER JOIN vt1 ON COALESCE(((vt1.c0)*(vt1.c1)), (((vt1.c0))<((vt1.c1))), NULL, (- (vt2.c0))) WHERE ((NOT (SQLITE_COMPILEOPTION_GET(CASE vt1.c1  WHEN vt2.c0 THEN vt2.c0 ELSE vt2.c0 END)))) GROUP BY vt1.c0, vt2.c0, vt1.c1 UNION SELECT ALL vt1.c0, vt2.c0, vt1.c1 FROM vt2 RIGHT OUTER JOIN vt1 ON COALESCE(((vt1.c0)*(vt1.c1)), (((vt1.c0))<((vt1.c1))), NULL, (- (vt2.c0))) WHERE (((SQLITE_COMPILEOPTION_GET(CASE vt1.c1  WHEN vt2.c0 THEN vt2.c0 ELSE vt2.c0 END)) ISNULL)) GROUP BY vt1.c0, vt2.c0, vt1.c1;
SELECT vt1.c0, vt2.c0, vt1.c1 FROM vt2 RIGHT OUTER JOIN vt1 ON COALESCE(((vt1.c0)*(vt1.c1)), (((vt1.c0))<((vt1.c1))), NULL, (- (vt2.c0))) GROUP BY vt1.c0, vt2.c0, vt1.c1;
SELECT vt0.c1, vt0.c0, vt1.c1 FROM vt2, v0, vt1, rt0, vt0 GROUP BY vt0.c1, vt0.c0, vt1.c1;
SELECT ALL vt0.c1, vt0.c0, vt1.c1 FROM vt2, v0, vt1, rt0, vt0 GROUP BY vt0.c1, vt0.c0, vt1.c1 HAVING CASE GROUP_CONCAT(GROUP_CONCAT(rt0.c4))  WHEN MIN(AVG('889328301')) THEN COUNT(MIN(rt0.c5)) COLLATE NOCASE END UNION ALL SELECT ALL vt0.c1, vt0.c0, vt1.c1 FROM vt2, v0, vt1, rt0, vt0 GROUP BY vt0.c1, vt0.c0, vt1.c1 HAVING (NOT (CASE GROUP_CONCAT(GROUP_CONCAT(rt0.c4))  WHEN MIN(AVG('889328301')) THEN COUNT(MIN(rt0.c5)) COLLATE NOCASE END)) UNION ALL SELECT ALL vt0.c1, vt0.c0, vt1.c1 FROM vt2, v0, vt1 NOT INDEXED, rt0, vt0 GROUP BY vt0.c1, vt0.c0, vt1.c1 HAVING ((CASE GROUP_CONCAT(GROUP_CONCAT(rt0.c4))  WHEN MIN(AVG('889328301')) THEN COUNT(MIN(rt0.c5)) COLLATE NOCASE END) ISNULL);
SELECT MIN(((CASE WHEN rt0.c2 THEN vt1.c0 WHEN rt0.c4 THEN rt0.c5 WHEN rt0.c4 THEN rt0.c0 ELSE rt0.c2 END)!=(((rt0.c1) IS FALSE)))) FROM rt0, vt1, vt0 ORDER BY 0.07863881433521336 ASC;
SELECT * FROM vt2;
SELECT ALL * FROM vt2 WHERE (CAST((('466301489') ISNULL) AS NUMERIC)) UNION ALL SELECT * FROM vt2 WHERE ((NOT (CAST((('466301489') ISNULL) AS NUMERIC)))) UNION ALL SELECT ALL * FROM vt2 WHERE (((CAST((('466301489') ISNULL) AS NUMERIC)) ISNULL));
SELECT * FROM vt2;
SELECT DISTINCT rt0.c3, rt0.c4, rt0.c5, vt1.c1, rt0.c2 FROM vt1, rt0, v0, vt2;
SELECT DISTINCT rt0.c3, rt0.c4, rt0.c5, vt1.c1, rt0.c2 FROM vt1, rt0, v0, vt2 WHERE (LIKELY(DISTINCT CAST(vt1.c0 AS NUMERIC))) UNION SELECT DISTINCT rt0.c3, rt0.c4, rt0.c5, vt1.c1, rt0.c2 FROM vt1, rt0, v0, vt2 WHERE ((NOT (LIKELY(DISTINCT CAST(vt1.c0 AS NUMERIC))))) UNION SELECT DISTINCT rt0.c3, rt0.c4, rt0.c5, vt1.c1, rt0.c2 FROM vt1, rt0, v0 NOT INDEXED, vt2 WHERE (((LIKELY(DISTINCT CAST(vt1.c0 AS NUMERIC))) ISNULL));
SELECT DISTINCT rt0.c3, rt0.c4, rt0.c5, vt1.c1, rt0.c2 FROM vt1, rt0, v0, vt2;
SELECT vt0.c1, rt0.c3, rt0.c2, vt1.c0, vt1.c1, rt0.c1, vt0.c0, rt0.c4, rt0.c5, v0.c0 FROM vt2, vt1, vt0, v0 LEFT OUTER JOIN rt0 ON CASE (rt0.c2 IN ())  WHEN JULIANDAY(rt0.c1, rt0.c5, rt0.c1) THEN (rt0.c0 IN ()) END GROUP BY vt0.c1, rt0.c3, rt0.c2, vt1.c0, vt1.c1, rt0.c1, vt0.c0, rt0.c4, rt0.c5, v0.c0;
SELECT ALL vt0.c1, rt0.c3, rt0.c2, vt1.c0, vt1.c1, rt0.c1, vt0.c0, rt0.c4, rt0.c5, v0.c0 FROM vt2, vt1, vt0, v0 LEFT OUTER JOIN rt0 ON CASE (rt0.c2 IN ())  WHEN JULIANDAY(rt0.c1, rt0.c5, rt0.c1) THEN (rt0.c0 IN ()) END WHERE ((((((((vt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((vt0.c0))))OR(((v0.c0) NOT BETWEEN (rt0.c3) AND (vt2.c0)))))OR(((rt0.c3)OR(vt1.c0))))) GROUP BY vt0.c1, rt0.c3, rt0.c2, vt1.c0, vt1.c1, rt0.c1, vt0.c0, rt0.c4, rt0.c5, v0.c0 UNION SELECT vt0.c1, rt0.c3, rt0.c2, vt1.c0, vt1.c1, rt0.c1, vt0.c0, rt0.c4, rt0.c5, v0.c0 FROM vt2 NOT INDEXED, vt1, vt0, v0 LEFT OUTER JOIN rt0 ON CASE (rt0.c2 IN ())  WHEN JULIANDAY(rt0.c1, rt0.c5, rt0.c1) THEN (rt0.c0 IN ()) END WHERE ((NOT ((((((((vt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((vt0.c0))))OR(((v0.c0) NOT BETWEEN (rt0.c3) AND (vt2.c0)))))OR(((rt0.c3)OR(vt1.c0))))))) GROUP BY vt0.c1, rt0.c3, rt0.c2, vt1.c0, vt1.c1, rt0.c1, vt0.c0, rt0.c4, rt0.c5, v0.c0 UNION SELECT vt0.c1, rt0.c3, rt0.c2, vt1.c0, vt1.c1, rt0.c1, vt0.c0, rt0.c4, rt0.c5, v0.c0 FROM vt2, vt1, vt0, v0 LEFT OUTER JOIN rt0 ON CASE (rt0.c2 IN ())  WHEN JULIANDAY(rt0.c1, rt0.c5, rt0.c1) THEN (rt0.c0 IN ()) END WHERE ((((((((((vt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((vt0.c0))))OR(((v0.c0) NOT BETWEEN (rt0.c3) AND (vt2.c0)))))OR(((rt0.c3)OR(vt1.c0))))) ISNULL)) GROUP BY vt0.c1, rt0.c3, rt0.c2, vt1.c0, vt1.c1, rt0.c1, vt0.c0, rt0.c4, rt0.c5, v0.c0;
SELECT vt0.c1, rt0.c3, rt0.c2, vt1.c0, vt1.c1, rt0.c1, vt0.c0, rt0.c4, rt0.c5, v0.c0 FROM vt2, vt1, vt0, v0 LEFT OUTER JOIN rt0 ON CASE (rt0.c2 IN ())  WHEN JULIANDAY(rt0.c1, rt0.c5, rt0.c1) THEN (rt0.c0 IN ()) END GROUP BY vt0.c1, rt0.c3, rt0.c2, vt1.c0, vt1.c1, rt0.c1, vt0.c0, rt0.c4, rt0.c5, v0.c0;
SELECT ALL vt0.c1, v0.c0, vt0.c0 FROM vt0, v0 GROUP BY vt0.c1, v0.c0, vt0.c0;
SELECT vt0.c1, v0.c0, vt0.c0 FROM vt0, v0 GROUP BY vt0.c1, v0.c0, vt0.c0 HAVING AVG((NOT (SUM(MIN(vt0.c1))))) UNION ALL SELECT vt0.c1, v0.c0, vt0.c0 FROM vt0, v0 GROUP BY vt0.c1, v0.c0, vt0.c0 HAVING (NOT (AVG((NOT (SUM(MIN(vt0.c1))))))) UNION ALL SELECT ALL vt0.c1, v0.c0, vt0.c0 FROM vt0, v0 GROUP BY vt0.c1, v0.c0, vt0.c0 HAVING ((AVG((NOT (SUM(MIN(vt0.c1)))))) ISNULL);
SELECT vt0.c0 FROM vt1, vt0, vt2;
SELECT ALL vt0.c0 FROM vt1, vt0, vt2 WHERE (((+ (vt1.c0)) IN ())) UNION ALL SELECT vt0.c0 FROM vt1, vt0, vt2 WHERE ((NOT (((+ (vt1.c0)) IN ())))) UNION ALL SELECT ALL vt0.c0 FROM vt1, vt0, vt2 WHERE (((((+ (vt1.c0)) IN ())) ISNULL));
SELECT vt0.c0 FROM vt1, vt0, vt2;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE ((((vt0.c1 IN ())) NOTNULL)) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT ((((vt0.c1 IN ())) NOTNULL)))) UNION SELECT DISTINCT * FROM vt0 WHERE ((((((vt0.c1 IN ())) NOTNULL)) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT v0.c0, rt0.c0, rt0.c3, rt0.c5 FROM v0, rt0 GROUP BY v0.c0, rt0.c0, rt0.c3, rt0.c5;
SELECT ALL v0.c0, rt0.c0, rt0.c3, rt0.c5 FROM v0, rt0 WHERE ((((v0.c0, rt0.c2, rt0.c2)) BETWEEN ((((rt0.c3) IS TRUE), ((rt0.c4) NOT BETWEEN (rt0.c4) AND (rt0.c4)), (rt0.c2 IN ()))) AND ((((NULL)LIKE(rt0.c1)), rt0.c4 COLLATE NOCASE, CASE -198283073  WHEN rt0.c1 THEN rt0.c5 WHEN v0.c0 THEN rt0.c4 WHEN rt0.c5 THEN rt0.c5 ELSE v0.c0 END)))) GROUP BY v0.c0, rt0.c0, rt0.c3, rt0.c5 UNION SELECT v0.c0, rt0.c0, rt0.c3, rt0.c5 FROM v0, rt0 WHERE ((NOT ((((v0.c0, rt0.c2, rt0.c2)) BETWEEN ((((rt0.c3) IS TRUE), ((rt0.c4) NOT BETWEEN (rt0.c4) AND (rt0.c4)), (rt0.c2 IN ()))) AND ((((NULL)LIKE(rt0.c1)), rt0.c4 COLLATE NOCASE, CASE -198283073  WHEN rt0.c1 THEN rt0.c5 WHEN v0.c0 THEN rt0.c4 WHEN rt0.c5 THEN rt0.c5 ELSE v0.c0 END)))))) GROUP BY v0.c0, rt0.c0, rt0.c3, rt0.c5 UNION SELECT ALL v0.c0, rt0.c0, rt0.c3, rt0.c5 FROM v0, rt0 WHERE ((((((v0.c0, rt0.c2, rt0.c2)) BETWEEN ((((rt0.c3) IS TRUE), ((rt0.c4) NOT BETWEEN (rt0.c4) AND (rt0.c4)), (rt0.c2 IN ()))) AND ((((NULL)LIKE(rt0.c1)), rt0.c4 COLLATE NOCASE, CASE -198283073  WHEN rt0.c1 THEN rt0.c5 WHEN v0.c0 THEN rt0.c4 WHEN rt0.c5 THEN rt0.c5 ELSE v0.c0 END)))) ISNULL)) GROUP BY v0.c0, rt0.c0, rt0.c3, rt0.c5;
SELECT v0.c0, rt0.c0, rt0.c3, rt0.c5 FROM v0, rt0 GROUP BY v0.c0, rt0.c0, rt0.c3, rt0.c5;
SELECT ALL v0.c0, rt0.c4, vt0.c1, rt0.c3 FROM v0, vt0, vt2, rt0 GROUP BY v0.c0, rt0.c4, vt0.c1, rt0.c3;
SELECT ALL v0.c0, rt0.c4, vt0.c1, rt0.c3 FROM v0, vt0, vt2, rt0 GROUP BY v0.c0, rt0.c4, vt0.c1, rt0.c3 HAVING ((rt0.c5) NOT NULL) UNION ALL SELECT v0.c0, rt0.c4, vt0.c1, rt0.c3 FROM v0, vt0, vt2, rt0 GROUP BY v0.c0, rt0.c4, vt0.c1, rt0.c3 HAVING (NOT (((rt0.c5) NOT NULL))) UNION ALL SELECT v0.c0, rt0.c4, vt0.c1, rt0.c3 FROM v0, vt0, vt2, rt0 GROUP BY v0.c0, rt0.c4, vt0.c1, rt0.c3 HAVING ((((rt0.c5) NOT NULL)) ISNULL);
SELECT ALL v0.c0, rt0.c4, vt0.c1, rt0.c3 FROM v0, vt0, vt2, rt0 GROUP BY v0.c0, rt0.c4, vt0.c1, rt0.c3;
SELECT ALL v0.c0, rt0.c4, vt0.c1, rt0.c3 FROM v0, vt0, vt2, rt0 GROUP BY v0.c0, rt0.c4, vt0.c1, rt0.c3 HAVING ((rt0.c5) NOT NULL) UNION ALL SELECT v0.c0, rt0.c4, vt0.c1, rt0.c3 FROM v0, vt0, vt2, rt0 GROUP BY v0.c0, rt0.c4, vt0.c1, rt0.c3 HAVING (NOT (((rt0.c5) NOT NULL))) UNION ALL SELECT v0.c0, rt0.c4, vt0.c1, rt0.c3 FROM v0, vt0, vt2, rt0 GROUP BY v0.c0, rt0.c4, vt0.c1, rt0.c3 HAVING ((((rt0.c5) NOT NULL)) ISNULL);
SELECT ALL v0.c0, rt0.c4, vt0.c1, rt0.c3 FROM v0, vt0, vt2, rt0 GROUP BY v0.c0, rt0.c4, vt0.c1, rt0.c3;
SELECT ALL * FROM rt0 RIGHT OUTER JOIN v0 ON ((x'') NOT BETWEEN (((0.2645144038242587) NOT BETWEEN (x'ce95') AND (rt0.c3))) AND (CASE WHEN rt0.c5 THEN rt0.c3 END));
SELECT * FROM rt0 RIGHT OUTER JOIN v0 ON ((x'') NOT BETWEEN (((0.2645144038242587) NOT BETWEEN (x'ce95') AND (rt0.c3))) AND (CASE WHEN rt0.c5 THEN rt0.c3 END)) WHERE (CAST((((rt0.c4, rt0.c3, rt0.c1))!=(('', rt0.c4, rt0.c5))) AS NUMERIC)) UNION ALL SELECT ALL * FROM rt0 RIGHT OUTER JOIN v0 ON ((x'') NOT BETWEEN (((0.2645144038242587) NOT BETWEEN (x'ce95') AND (rt0.c3))) AND (CASE WHEN rt0.c5 THEN rt0.c3 END)) WHERE ((NOT (CAST((((rt0.c4, rt0.c3, rt0.c1))<>(('', rt0.c4, rt0.c5))) AS NUMERIC)))) UNION ALL SELECT * FROM rt0 RIGHT OUTER JOIN v0 ON ((x'') NOT BETWEEN (((0.2645144038242587) NOT BETWEEN (x'ce95') AND (rt0.c3))) AND (CASE WHEN rt0.c5 THEN rt0.c3 END)) WHERE (((CAST((((rt0.c4, rt0.c3, rt0.c1))!=(('', rt0.c4, rt0.c5))) AS NUMERIC)) ISNULL));
SELECT ALL * FROM rt0 RIGHT OUTER JOIN v0 ON ((x'') NOT BETWEEN (((0.2645144038242587) NOT BETWEEN (x'ce95') AND (rt0.c3))) AND (CASE WHEN rt0.c5 THEN rt0.c3 END));
SELECT DISTINCT * FROM vt0, v0;
SELECT DISTINCT * FROM vt0, v0 WHERE ((~ (((vt0.c0)*(vt0.c0))))) UNION SELECT DISTINCT * FROM vt0, v0 WHERE ((NOT ((~ (((vt0.c0)*(vt0.c0))))))) UNION SELECT DISTINCT * FROM vt0, v0 WHERE ((((~ (((vt0.c0)*(vt0.c0))))) ISNULL));
SELECT DISTINCT * FROM vt0, v0;
SELECT rt0.c2, rt0.c0, rt0.c4, vt0.c1, rt0.c5, vt2.c0, vt0.c0, rt0.c1, rt0.c3 FROM rt0, vt0 FULL OUTER JOIN vt2 ON ((((~ (vt0.c0))))==((rt0.c0))) GROUP BY rt0.c2, rt0.c0, rt0.c4, vt0.c1, rt0.c5, vt2.c0, vt0.c0, rt0.c1, rt0.c3;
SELECT ALL rt0.c2, rt0.c0, rt0.c4, vt0.c1, rt0.c5, vt2.c0, vt0.c0, rt0.c1, rt0.c3 FROM rt0, vt0 FULL OUTER JOIN vt2 ON ((((~ (vt0.c0))))=((rt0.c0))) WHERE (CHAR(((rt0.c2)/(vt0.c1)), (rt0.c4 IN ()), CASE WHEN rt0.c3 THEN rt0.c1 WHEN vt0.c0 THEN vt2.c0 WHEN rt0.c5 THEN vt0.c1 END)) GROUP BY rt0.c2, rt0.c0, rt0.c4, vt0.c1, rt0.c5, vt2.c0, vt0.c0, rt0.c1, rt0.c3 UNION SELECT rt0.c2, rt0.c0, rt0.c4, vt0.c1, rt0.c5, vt2.c0, vt0.c0, rt0.c1, rt0.c3 FROM rt0, vt0 FULL OUTER JOIN vt2 ON ((((~ (vt0.c0))))==((rt0.c0))) WHERE ((NOT (CHAR(((rt0.c2)/(vt0.c1)), (rt0.c4 IN ()), CASE WHEN rt0.c3 THEN rt0.c1 WHEN vt0.c0 THEN vt2.c0 WHEN rt0.c5 THEN vt0.c1 END)))) GROUP BY rt0.c2, rt0.c0, rt0.c4, vt0.c1, rt0.c5, vt2.c0, vt0.c0, rt0.c1, rt0.c3 UNION SELECT rt0.c2, rt0.c0, rt0.c4, vt0.c1, rt0.c5, vt2.c0, vt0.c0, rt0.c1, rt0.c3 FROM rt0, vt0 FULL OUTER JOIN vt2 ON ((((~ (vt0.c0))))=((rt0.c0))) WHERE (((CHAR(((rt0.c2)/(vt0.c1)), (rt0.c4 IN ()), CASE WHEN rt0.c3 THEN rt0.c1 WHEN vt0.c0 THEN vt2.c0 WHEN rt0.c5 THEN vt0.c1 END)) ISNULL)) GROUP BY rt0.c2, rt0.c0, rt0.c4, vt0.c1, rt0.c5, vt2.c0, vt0.c0, rt0.c1, rt0.c3;
SELECT rt0.c2, rt0.c0, rt0.c4, vt0.c1, rt0.c5, vt2.c0, vt0.c0, rt0.c1, rt0.c3 FROM rt0, vt0 FULL OUTER JOIN vt2 ON ((((~ (vt0.c0))))==((rt0.c0))) GROUP BY rt0.c2, rt0.c0, rt0.c4, vt0.c1, rt0.c5, vt2.c0, vt0.c0, rt0.c1, rt0.c3;
SELECT ALL rt0.c4, rt0.c1, rt0.c3, vt1.c0, vt0.c0, v0.c0, rt0.c2, rt0.c0, rt0.c5 FROM v0 RIGHT OUTER JOIN vt1 ON CAST(CASE vt1.c1  WHEN rt0.c0 THEN rt0.c4 END AS NUMERIC) INNER JOIN rt0 ON 0xffffffffedfeccb8 LEFT OUTER JOIN vt0 ON (((vt0.c0)) BETWEEN ((CASE vt1.c0  WHEN rt0.c3 THEN NULL END)) AND ((((rt0.c1)GLOB(v0.c0))))) FULL OUTER JOIN vt2 ON ((-458951837 COLLATE NOCASE)/(NULL)) GROUP BY rt0.c4, rt0.c1, rt0.c3, vt1.c0, vt0.c0, v0.c0, rt0.c2, rt0.c0, rt0.c5;
SELECT ALL * FROM v0, vt0, vt2;
SELECT ALL * FROM v0, vt0, vt2 WHERE (CASE ((vt0.c1)GLOB(vt0.c0))  WHEN (- (x'')) THEN ((vt0.c0) IS FALSE) END) UNION ALL SELECT ALL * FROM v0, vt0, vt2 WHERE ((NOT (CASE ((vt0.c1)GLOB(vt0.c0))  WHEN (- (x'')) THEN ((vt0.c0) IS FALSE) END))) UNION ALL SELECT ALL * FROM v0, vt0, vt2 WHERE (((CASE ((vt0.c1)GLOB(vt0.c0))  WHEN (- (x'')) THEN ((vt0.c0) IS FALSE) END) ISNULL));
SELECT ALL * FROM v0, vt0, vt2;
SELECT DISTINCT vt0.c1, rt0.c0, rt0.c2, rt0.c1, vt1.c1, rt0.c5, vt2.c0, rt0.c3 FROM vt2, v0, rt0, vt0 FULL OUTER JOIN vt1 ON (((NOT (vt1.c0)))==((((v0.c0)) BETWEEN ((rt0.c5)) AND ((rt0.c3)))));
SELECT DISTINCT vt0.c1, rt0.c0, rt0.c2, rt0.c1, vt1.c1, rt0.c5, vt2.c0, rt0.c3 FROM vt2, v0, rt0, vt0 FULL OUTER JOIN vt1 ON (((NOT (vt1.c0)))=((((v0.c0)) BETWEEN ((rt0.c5)) AND ((rt0.c3))))) WHERE ('}z') UNION SELECT DISTINCT vt0.c1, rt0.c0, rt0.c2, rt0.c1, vt1.c1, rt0.c5, vt2.c0, rt0.c3 FROM vt2, v0, rt0, vt0 FULL OUTER JOIN vt1 ON (((NOT (vt1.c0)))=((((v0.c0)) BETWEEN ((rt0.c5)) AND ((rt0.c3))))) WHERE ((NOT ('}z'))) UNION SELECT DISTINCT vt0.c1, rt0.c0, rt0.c2, rt0.c1, vt1.c1, rt0.c5, vt2.c0, rt0.c3 FROM vt2, v0, rt0, vt0 FULL OUTER JOIN vt1 ON (((NOT (vt1.c0)))==((((v0.c0)) BETWEEN ((rt0.c5)) AND ((rt0.c3))))) WHERE ((('}z') ISNULL));
SELECT DISTINCT vt0.c1, rt0.c0, rt0.c2, rt0.c1, vt1.c1, rt0.c5, vt2.c0, rt0.c3 FROM vt2, v0, rt0, vt0 FULL OUTER JOIN vt1 ON (((NOT (vt1.c0)))==((((v0.c0)) BETWEEN ((rt0.c5)) AND ((rt0.c3)))));
SELECT vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1;
SELECT vt1.c0, vt1.c1 FROM vt1 WHERE (((((((((((vt1.c0)AND(vt1.c0)))OR(CASE vt1.c1  WHEN vt1.c1 THEN vt1.c0 WHEN '155839806' THEN vt1.c1 WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c0 THEN x'' END)))AND(rtreenode(vt1.c0, vt1.c0))))AND(x'')))OR((vt1.c0 IN ())))) GROUP BY vt1.c0, vt1.c1 UNION SELECT ALL vt1.c0, vt1.c1 FROM vt1 WHERE ((NOT (((((((((((vt1.c0)AND(vt1.c0)))OR(CASE vt1.c1  WHEN vt1.c1 THEN vt1.c0 WHEN '155839806' THEN vt1.c1 WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c0 THEN x'' END)))AND(rtreenode(vt1.c0, vt1.c0))))AND(x'')))OR((vt1.c0 IN ())))))) GROUP BY vt1.c0, vt1.c1 UNION SELECT vt1.c0, vt1.c1 FROM vt1 WHERE (((((((((((((vt1.c0)AND(vt1.c0)))OR(CASE vt1.c1  WHEN vt1.c1 THEN vt1.c0 WHEN '155839806' THEN vt1.c1 WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c0 THEN x'' END)))AND(rtreenode(vt1.c0, vt1.c0))))AND(x'')))OR((vt1.c0 IN ())))) ISNULL)) GROUP BY vt1.c0, vt1.c1;
SELECT vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1;
SELECT rt0.c3, rt0.c4 FROM rt0 GROUP BY rt0.c3, rt0.c4;
SELECT rt0.c3, rt0.c4 FROM rt0 GROUP BY rt0.c3, rt0.c4 HAVING MAX(MIN(MIN(MAX(rt0.c2)))) UNION ALL SELECT rt0.c3, rt0.c4 FROM rt0 GROUP BY rt0.c3, rt0.c4 HAVING (NOT (MAX(MIN(MIN(MAX(rt0.c2)))))) UNION ALL SELECT ALL rt0.c3, rt0.c4 FROM rt0 GROUP BY rt0.c3, rt0.c4 HAVING ((MAX(MIN(MIN(MAX(rt0.c2))))) ISNULL);
SELECT vt0.c0, vt0.c1, v0.c0 FROM vt0, vt1, v0;
SELECT ALL vt0.c0, vt0.c1, v0.c0 FROM vt0, vt1, v0 WHERE ((((vt0.c1) NOT BETWEEN (v0.c0) AND (vt1.c1)) IN ((((vt1.c1)) BETWEEN ((vt1.c1)) AND (('615922673')))))) UNION ALL SELECT ALL vt0.c0, vt0.c1, v0.c0 FROM vt0, vt1, v0 WHERE ((NOT ((((vt0.c1) NOT BETWEEN (v0.c0) AND (vt1.c1)) IN ((((vt1.c1)) BETWEEN ((vt1.c1)) AND (('615922673')))))))) UNION ALL SELECT vt0.c0, vt0.c1, v0.c0 FROM vt0, vt1, v0 WHERE ((((((vt0.c1) NOT BETWEEN (v0.c0) AND (vt1.c1)) IN ((((vt1.c1)) BETWEEN ((vt1.c1)) AND (('615922673')))))) ISNULL));
SELECT vt0.c0, vt0.c1, v0.c0 FROM vt0, vt1, v0;
SELECT DISTINCT * FROM v0 LEFT OUTER JOIN vt2 ON (((((((vt1.c1))>((vt1.c0))))OR((~ (v0.c0)))))AND(0.7220251350851946)) LEFT OUTER JOIN vt1 ON NULL;
SELECT rt0.c1, rt0.c2, vt1.c0, rt0.c0, vt1.c1 FROM rt0, v0, vt2, vt1, vt0 GROUP BY rt0.c1, rt0.c2, vt1.c0, rt0.c0, vt1.c1;
SELECT rt0.c1, rt0.c2, vt1.c0, rt0.c0, vt1.c1 FROM rt0, v0, vt2, vt1, vt0 WHERE (((((((((((vt1.c0)AND(vt1.c1)))OR('168819667')))AND(vt1.c0)))AND(rt0.c0)))OR(rt0.c0))) GROUP BY rt0.c1, rt0.c2, vt1.c0, rt0.c0, vt1.c1 UNION SELECT ALL rt0.c1, rt0.c2, vt1.c0, rt0.c0, vt1.c1 FROM rt0, v0, vt2, vt1 NOT INDEXED, vt0 WHERE ((NOT (((((((((((vt1.c0)AND(vt1.c1)))OR('168819667')))AND(vt1.c0)))AND(rt0.c0)))OR(rt0.c0))))) GROUP BY rt0.c1, rt0.c2, vt1.c0, rt0.c0, vt1.c1 UNION SELECT rt0.c1, rt0.c2, vt1.c0, rt0.c0, vt1.c1 FROM rt0, v0, vt2, vt1, vt0 WHERE (((((((((((((vt1.c0)AND(vt1.c1)))OR('168819667')))AND(vt1.c0)))AND(rt0.c0)))OR(rt0.c0))) ISNULL)) GROUP BY rt0.c1, rt0.c2, vt1.c0, rt0.c0, vt1.c1;
SELECT rt0.c1, rt0.c2, vt1.c0, rt0.c0, vt1.c1 FROM rt0, v0, vt2, vt1, vt0 GROUP BY rt0.c1, rt0.c2, vt1.c0, rt0.c0, vt1.c1;
SELECT ALL rt0.c4, rt0.c0, rt0.c3, rt0.c5, v0.c0, vt1.c1, rt0.c1, vt0.c0, rt0.c2, vt0.c1, vt1.c0 FROM rt0, v0, vt0, vt1 GROUP BY rt0.c4, rt0.c0, rt0.c3, rt0.c5, v0.c0, vt1.c1, rt0.c1, vt0.c0, rt0.c2, vt0.c1, vt1.c0;
SELECT ALL rt0.c4, rt0.c0, rt0.c3, rt0.c5, v0.c0, vt1.c1, rt0.c1, vt0.c0, rt0.c2, vt0.c1, vt1.c0 FROM rt0, v0, vt0, vt1 GROUP BY rt0.c4, rt0.c0, rt0.c3, rt0.c5, v0.c0, vt1.c1, rt0.c1, vt0.c0, rt0.c2, vt0.c1, vt1.c0 HAVING (((CAST(MIN(v0.c0) AS REAL), (((AVG(SUM(v0.c0))))>((MAX(GROUP_CONCAT(rt0.c3))))), AVG(rt0.c2)))>=((SUM(MIN(SUM(rt0.c1))), GROUP_CONCAT(vt1.c0), json_type(rt0.c4)))) UNION ALL SELECT rt0.c4, rt0.c0, rt0.c3, rt0.c5, v0.c0, vt1.c1, rt0.c1, vt0.c0, rt0.c2, vt0.c1, vt1.c0 FROM rt0, v0, vt0, vt1 GROUP BY rt0.c4, rt0.c0, rt0.c3, rt0.c5, v0.c0, vt1.c1, rt0.c1, vt0.c0, rt0.c2, vt0.c1, vt1.c0 HAVING (NOT ((((CAST(MIN(v0.c0) AS REAL), (((AVG(SUM(v0.c0))))>((MAX(GROUP_CONCAT(rt0.c3))))), AVG(rt0.c2)))>=((SUM(MIN(SUM(rt0.c1))), GROUP_CONCAT(vt1.c0), json_type(rt0.c4)))))) UNION ALL SELECT ALL rt0.c4, rt0.c0, rt0.c3, rt0.c5, v0.c0, vt1.c1, rt0.c1, vt0.c0, rt0.c2, vt0.c1, vt1.c0 FROM rt0, v0, vt0, vt1 GROUP BY rt0.c4, rt0.c0, rt0.c3, rt0.c5, v0.c0, vt1.c1, rt0.c1, vt0.c0, rt0.c2, vt0.c1, vt1.c0 HAVING (((((CAST(MIN(v0.c0) AS REAL), (((AVG(SUM(v0.c0))))>((MAX(GROUP_CONCAT(rt0.c3))))), AVG(rt0.c2)))>=((SUM(MIN(SUM(rt0.c1))), GROUP_CONCAT(vt1.c0), json_type(rt0.c4))))) ISNULL);
SELECT ALL vt1.c1 FROM vt1;
SELECT vt1.c1 FROM vt1 WHERE ((((x'', CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END, (((vt1.c1)) NOT BETWEEN ((vt1.c1)) AND ((vt1.c1)))))<>((NULL, ((vt1.c1) NOT BETWEEN (vt1.c0) AND (vt1.c1)), ((vt1.c1)OR(vt1.c1)))))) UNION ALL SELECT vt1.c1 FROM vt1 WHERE ((NOT ((((x'', CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END, (((vt1.c1)) NOT BETWEEN ((vt1.c1)) AND ((vt1.c1)))))<>((NULL, ((vt1.c1) NOT BETWEEN (vt1.c0) AND (vt1.c1)), ((vt1.c1)OR(vt1.c1)))))))) UNION ALL SELECT vt1.c1 FROM vt1 WHERE ((((((x'', CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END, (((vt1.c1)) NOT BETWEEN ((vt1.c1)) AND ((vt1.c1)))))<>((NULL, ((vt1.c1) NOT BETWEEN (vt1.c0) AND (vt1.c1)), ((vt1.c1)OR(vt1.c1)))))) ISNULL));
SELECT ALL vt1.c1 FROM vt1;
SELECT DISTINCT * FROM vt0, vt1;
SELECT DISTINCT * FROM vt0, vt1 WHERE ((((vt0.c1 IN ('510343050')))!=(((vt1.c0) IS FALSE)))) UNION SELECT DISTINCT * FROM vt0, vt1 WHERE ((NOT ((((vt0.c1 IN ('510343050')))!=(((vt1.c0) IS FALSE)))))) UNION SELECT DISTINCT * FROM vt0, vt1 WHERE ((((((vt0.c1 IN ('510343050')))<>(((vt1.c0) IS FALSE)))) ISNULL));
SELECT DISTINCT * FROM vt0, vt1;
SELECT ALL vt2.c0, vt0.c0, vt0.c1 FROM vt0, vt2 GROUP BY vt2.c0, vt0.c0, vt0.c1;
SELECT ALL vt2.c0, vt0.c0, vt0.c1 FROM vt0, vt2 WHERE (CAST(vt0.c1 AS BLOB) COLLATE BINARY) GROUP BY vt2.c0, vt0.c0, vt0.c1 UNION SELECT vt2.c0, vt0.c0, vt0.c1 FROM vt0, vt2 WHERE ((NOT (CAST(vt0.c1 AS BLOB) COLLATE BINARY))) GROUP BY vt2.c0, vt0.c0, vt0.c1 UNION SELECT vt2.c0, vt0.c0, vt0.c1 FROM vt0, vt2 WHERE (((CAST(vt0.c1 AS BLOB) COLLATE BINARY) ISNULL)) GROUP BY vt2.c0, vt0.c0, vt0.c1;
SELECT ALL vt2.c0, vt0.c0, vt0.c1 FROM vt0, vt2 GROUP BY vt2.c0, vt0.c0, vt0.c1;
SELECT ALL vt2.c0, rt0.c5, v0.c0 FROM rt0, vt2 CROSS JOIN v0 ON ((CASE rt0.c0  WHEN rt0.c5 THEN rt0.c1 END)>(CASE WHEN vt2.c0 THEN v0.c0 WHEN v0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c4 ELSE rt0.c3 END)) GROUP BY vt2.c0, rt0.c5, v0.c0;
SELECT ALL vt2.c0, rt0.c5, v0.c0 FROM rt0, vt2 CROSS JOIN v0 ON ((CASE rt0.c0  WHEN rt0.c5 THEN rt0.c1 END)>(CASE WHEN vt2.c0 THEN v0.c0 WHEN v0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c4 ELSE rt0.c3 END)) GROUP BY vt2.c0, rt0.c5, v0.c0 HAVING ((TYPEOF(MIN(rt0.c1)))GLOB(((MIN(rt0.c0))/(COUNT(*))))) UNION ALL SELECT ALL vt2.c0, rt0.c5, v0.c0 FROM rt0, vt2 CROSS JOIN v0 ON ((CASE rt0.c0  WHEN rt0.c5 THEN rt0.c1 END)>(CASE WHEN vt2.c0 THEN v0.c0 WHEN v0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c4 ELSE rt0.c3 END)) GROUP BY vt2.c0, rt0.c5, v0.c0 HAVING (NOT (((TYPEOF(MIN(rt0.c1)))GLOB(((MIN(rt0.c0))/(COUNT(*))))))) UNION ALL SELECT ALL vt2.c0, rt0.c5, v0.c0 FROM rt0, vt2 CROSS JOIN v0 ON ((CASE rt0.c0  WHEN rt0.c5 THEN rt0.c1 END)>(CASE WHEN vt2.c0 THEN v0.c0 WHEN v0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c4 ELSE rt0.c3 END)) GROUP BY vt2.c0, rt0.c5, v0.c0 HAVING ((((TYPEOF(MIN(rt0.c1)))GLOB(((MIN(rt0.c0))/(COUNT(*)))))) ISNULL);
SELECT ALL vt2.c0, rt0.c5, v0.c0 FROM rt0, vt2 CROSS JOIN v0 ON ((CASE rt0.c0  WHEN rt0.c5 THEN rt0.c1 END)>(CASE WHEN vt2.c0 THEN v0.c0 WHEN v0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c4 ELSE rt0.c3 END)) GROUP BY vt2.c0, rt0.c5, v0.c0;
SELECT ALL vt2.c0, rt0.c5, v0.c0 FROM rt0, vt2 CROSS JOIN v0 ON ((CASE rt0.c0  WHEN rt0.c5 THEN rt0.c1 END)>(CASE WHEN vt2.c0 THEN v0.c0 WHEN v0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c4 ELSE rt0.c3 END)) GROUP BY vt2.c0, rt0.c5, v0.c0 HAVING ((TYPEOF(MIN(rt0.c1)))GLOB(((MIN(rt0.c0))/(COUNT(*))))) UNION ALL SELECT ALL vt2.c0, rt0.c5, v0.c0 FROM rt0, vt2 CROSS JOIN v0 ON ((CASE rt0.c0  WHEN rt0.c5 THEN rt0.c1 END)>(CASE WHEN vt2.c0 THEN v0.c0 WHEN v0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c4 ELSE rt0.c3 END)) GROUP BY vt2.c0, rt0.c5, v0.c0 HAVING (NOT (((TYPEOF(MIN(rt0.c1)))GLOB(((MIN(rt0.c0))/(COUNT(*))))))) UNION ALL SELECT ALL vt2.c0, rt0.c5, v0.c0 FROM rt0, vt2 CROSS JOIN v0 ON ((CASE rt0.c0  WHEN rt0.c5 THEN rt0.c1 END)>(CASE WHEN vt2.c0 THEN v0.c0 WHEN v0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c4 ELSE rt0.c3 END)) GROUP BY vt2.c0, rt0.c5, v0.c0 HAVING ((((TYPEOF(MIN(rt0.c1)))GLOB(((MIN(rt0.c0))/(COUNT(*)))))) ISNULL);
SELECT ALL vt2.c0, rt0.c5, v0.c0 FROM rt0, vt2 CROSS JOIN v0 ON ((CASE rt0.c0  WHEN rt0.c5 THEN rt0.c1 END)>(CASE WHEN vt2.c0 THEN v0.c0 WHEN v0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c4 ELSE rt0.c3 END)) GROUP BY vt2.c0, rt0.c5, v0.c0;
SELECT ALL rt0.c0, vt2.c0, rt0.c1, v0.c0, vt0.c1, rt0.c4 FROM v0, vt2, rt0, vt0, vt1;
SELECT ALL rt0.c0, vt2.c0, rt0.c1, v0.c0, vt0.c1, rt0.c4 FROM v0, vt2, rt0, vt0, vt1 WHERE ((((rt0.c3)) NOT BETWEEN ((((rt0.c4)+(rt0.c0)))) AND ((((rt0.c2)%(rt0.c1)))))) UNION ALL SELECT ALL rt0.c0, vt2.c0, rt0.c1, v0.c0, vt0.c1, rt0.c4 FROM v0, vt2, rt0, vt0, vt1 WHERE ((NOT ((((rt0.c3)) NOT BETWEEN ((((rt0.c4)+(rt0.c0)))) AND ((((rt0.c2)%(rt0.c1)))))))) UNION ALL SELECT ALL rt0.c0, vt2.c0, rt0.c1, v0.c0, vt0.c1, rt0.c4 FROM v0, vt2, rt0, vt0, vt1 WHERE ((((((rt0.c3)) NOT BETWEEN ((((rt0.c4)+(rt0.c0)))) AND ((((rt0.c2)%(rt0.c1)))))) ISNULL));
SELECT ALL rt0.c0, vt2.c0, rt0.c1, v0.c0, vt0.c1, rt0.c4 FROM v0, vt2, rt0, vt0, vt1;
SELECT DISTINCT vt0.c1, rt0.c5 FROM vt0, rt0;
SELECT DISTINCT vt0.c1, rt0.c5 FROM vt0, rt0 WHERE (((((rt0.c4) IS TRUE))+(((rt0.c2) NOTNULL)))) UNION SELECT DISTINCT vt0.c1, rt0.c5 FROM vt0, rt0 WHERE ((NOT (((((rt0.c4) IS TRUE))+(((rt0.c2) NOTNULL)))))) UNION SELECT DISTINCT vt0.c1, rt0.c5 FROM vt0, rt0 WHERE (((((((rt0.c4) IS TRUE))+(((rt0.c2) NOTNULL)))) ISNULL));
SELECT DISTINCT vt0.c1, rt0.c5 FROM vt0, rt0;
SELECT ALL vt1.c1, vt1.c0, vt2.c0, rt0.c5 FROM vt2, vt1, rt0 GROUP BY vt1.c1, vt1.c0, vt2.c0, rt0.c5;
SELECT ALL vt1.c1, vt1.c0, vt2.c0, rt0.c5 FROM vt2, vt1, rt0 WHERE (x'') GROUP BY vt1.c1, vt1.c0, vt2.c0, rt0.c5 UNION SELECT vt1.c1, vt1.c0, vt2.c0, rt0.c5 FROM vt2, vt1, rt0 WHERE ((NOT (x''))) GROUP BY vt1.c1, vt1.c0, vt2.c0, rt0.c5 UNION SELECT vt1.c1, vt1.c0, vt2.c0, rt0.c5 FROM vt2, vt1, rt0 WHERE (((x'') ISNULL)) GROUP BY vt1.c1, vt1.c0, vt2.c0, rt0.c5;
SELECT ALL vt1.c1, vt1.c0, vt2.c0, rt0.c5 FROM vt2, vt1, rt0 GROUP BY vt1.c1, vt1.c0, vt2.c0, rt0.c5;
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING CASE WHEN AVG(GROUP_CONCAT(AVG(NULL))) THEN vt0.c0 END UNION ALL SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING (NOT (CASE WHEN AVG(GROUP_CONCAT(AVG(NULL))) THEN vt0.c0 END)) UNION ALL SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING ((CASE WHEN AVG(GROUP_CONCAT(AVG(NULL))) THEN vt0.c0 END) ISNULL);
SELECT ALL * FROM rt0, v0, vt0 RIGHT OUTER JOIN vt1 ON ((CASE vt0.c1  WHEN vt0.c0 THEN rt0.c4 ELSE x'' END) NOT BETWEEN (((rt0.c3)LIKE(vt2.c0))) AND (rt0.c3 COLLATE RTRIM)) FULL OUTER JOIN vt2 ON CAST((vt0.c1 IN ()) AS INTEGER);
SELECT DISTINCT * FROM vt1, rt0;
SELECT DISTINCT * FROM vt1, rt0 WHERE (IFNULL(((x'') ISNULL), ((rt0.c0) NOT BETWEEN (rt0.c0) AND (vt1.c1)))) UNION SELECT DISTINCT * FROM vt1, rt0 WHERE ((NOT (IFNULL(((x'') ISNULL), ((rt0.c0) NOT BETWEEN (rt0.c0) AND (vt1.c1)))))) UNION SELECT DISTINCT * FROM vt1, rt0 WHERE (((IFNULL(((x'') ISNULL), ((rt0.c0) NOT BETWEEN (rt0.c0) AND (vt1.c1)))) ISNULL));
SELECT DISTINCT * FROM vt1, rt0;
SELECT rt0.c3, rt0.c4, vt0.c1, vt1.c1 FROM vt1 CROSS JOIN v0 ON (((vt0.c0) NOT BETWEEN (vt1.c0) AND (rt0.c0)) IN ((((rt0.c3)) NOT BETWEEN ((rt0.c0)) AND ((vt1.c1))))) LEFT OUTER JOIN vt0 ON x'' RIGHT OUTER JOIN rt0 ON CAST(((((rt0.c0)OR(rt0.c2)))OR(vt2.c0)) AS BLOB) LEFT OUTER JOIN vt2 ON CAST((- (rt0.c1)) AS INTEGER) GROUP BY rt0.c3, rt0.c4, vt0.c1, vt1.c1;
SELECT vt0.c0 FROM vt1, vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt1, vt0 GROUP BY vt0.c0 HAVING COUNT(COUNT(GROUP_CONCAT(vt0.c1))) UNION ALL SELECT ALL vt0.c0 FROM vt1, vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(COUNT(GROUP_CONCAT(vt0.c1))))) UNION ALL SELECT ALL vt0.c0 FROM vt1, vt0 GROUP BY vt0.c0 HAVING ((COUNT(COUNT(GROUP_CONCAT(vt0.c1)))) ISNULL);
SELECT * FROM vt1, rt0;
SELECT * FROM vt1, rt0 WHERE (((((((rt0.c4)OR(rt0.c2)))AND(rt0.c4)))%(((rt0.c3) NOT BETWEEN (rt0.c1) AND (rt0.c0))))) UNION ALL SELECT * FROM vt1, rt0 WHERE ((NOT (((((((rt0.c4)OR(rt0.c2)))AND(rt0.c4)))%(((rt0.c3) NOT BETWEEN (rt0.c1) AND (rt0.c0))))))) UNION ALL SELECT * FROM vt1, rt0 WHERE (((((((((rt0.c4)OR(rt0.c2)))AND(rt0.c4)))%(((rt0.c3) NOT BETWEEN (rt0.c1) AND (rt0.c0))))) ISNULL));
SELECT * FROM vt1, rt0;
SELECT DISTINCT vt0.c1 FROM vt0;
SELECT DISTINCT vt0.c1 FROM vt0 WHERE ((vt0.c1 IN ())) UNION SELECT DISTINCT vt0.c1 FROM vt0 WHERE ((NOT ((vt0.c1 IN ())))) UNION SELECT DISTINCT vt0.c1 FROM vt0 WHERE ((((vt0.c1 IN ())) ISNULL));
SELECT DISTINCT vt0.c1 FROM vt0;
SELECT ALL rt0.c3, rt0.c2, rt0.c1, rt0.c4, rt0.c5, rt0.c0, vt2.c0 FROM vt2, rt0 GROUP BY rt0.c3, rt0.c2, rt0.c1, rt0.c4, rt0.c5, rt0.c0, vt2.c0;
SELECT ALL rt0.c3, rt0.c2, rt0.c1, rt0.c4, rt0.c5, rt0.c0, vt2.c0 FROM vt2, rt0 WHERE (vt2.c0) GROUP BY rt0.c3, rt0.c2, rt0.c1, rt0.c4, rt0.c5, rt0.c0, vt2.c0 UNION SELECT rt0.c3, rt0.c2, rt0.c1, rt0.c4, rt0.c5, rt0.c0, vt2.c0 FROM vt2, rt0 WHERE ((NOT (vt2.c0))) GROUP BY rt0.c3, rt0.c2, rt0.c1, rt0.c4, rt0.c5, rt0.c0, vt2.c0 UNION SELECT ALL rt0.c3, rt0.c2, rt0.c1, rt0.c4, rt0.c5, rt0.c0, vt2.c0 FROM vt2, rt0 WHERE (((vt2.c0) ISNULL)) GROUP BY rt0.c3, rt0.c2, rt0.c1, rt0.c4, rt0.c5, rt0.c0, vt2.c0;
SELECT ALL rt0.c3, rt0.c2, rt0.c1, rt0.c4, rt0.c5, rt0.c0, vt2.c0 FROM vt2, rt0 GROUP BY rt0.c3, rt0.c2, rt0.c1, rt0.c4, rt0.c5, rt0.c0, vt2.c0;
SELECT ALL vt1.c0, rt0.c3, rt0.c4, rt0.c0, rt0.c1, vt1.c1, rt0.c5 FROM vt0, vt1 FULL OUTER JOIN v0 ON TIME(vt0.c0, CAST(rt0.c3 AS INTEGER), LIKELY(vt0.c0)) INNER JOIN rt0 ON (CASE NULL  WHEN rt0.c2 THEN rt0.c4 ELSE vt1.c0 END IN ()) GROUP BY vt1.c0, rt0.c3, rt0.c4, rt0.c0, rt0.c1, vt1.c1, rt0.c5;
SELECT vt1.c0, rt0.c3, rt0.c4, rt0.c0, rt0.c1, vt1.c1, rt0.c5 FROM vt0, vt1 FULL OUTER JOIN v0 ON TIME(vt0.c0, CAST(rt0.c3 AS INTEGER), LIKELY(vt0.c0)) INNER JOIN rt0 ON (CASE NULL  WHEN rt0.c2 THEN rt0.c4 ELSE vt1.c0 END IN ()) GROUP BY vt1.c0, rt0.c3, rt0.c4, rt0.c0, rt0.c1, vt1.c1, rt0.c5 HAVING CASE WHEN COUNT(vt1.c1) THEN AVG(MIN(MIN(TOTAL(x'b989')))) WHEN vt1.c1 COLLATE BINARY THEN COUNT(*) WHEN COUNT(rt0.c1) THEN (+ (MIN(COUNT(*)))) END UNION ALL SELECT vt1.c0, rt0.c3, rt0.c4, rt0.c0, rt0.c1, vt1.c1, rt0.c5 FROM vt0, vt1 FULL OUTER JOIN v0 ON TIME(vt0.c0, CAST(rt0.c3 AS INTEGER), LIKELY(vt0.c0)) INNER JOIN rt0 ON (CASE NULL  WHEN rt0.c2 THEN rt0.c4 ELSE vt1.c0 END IN ()) GROUP BY vt1.c0, rt0.c3, rt0.c4, rt0.c0, rt0.c1, vt1.c1, rt0.c5 HAVING (NOT (CASE WHEN COUNT(vt1.c1) THEN AVG(MIN(MIN(TOTAL(x'b989')))) WHEN vt1.c1 COLLATE BINARY THEN COUNT(*) WHEN COUNT(rt0.c1) THEN (+ (MIN(COUNT(*)))) END)) UNION ALL SELECT ALL vt1.c0, rt0.c3, rt0.c4, rt0.c0, rt0.c1, vt1.c1, rt0.c5 FROM vt0, vt1 FULL OUTER JOIN v0 ON TIME(vt0.c0, CAST(rt0.c3 AS INTEGER), LIKELY(vt0.c0)) INNER JOIN rt0 ON (CASE NULL  WHEN rt0.c2 THEN rt0.c4 ELSE vt1.c0 END IN ()) GROUP BY vt1.c0, rt0.c3, rt0.c4, rt0.c0, rt0.c1, vt1.c1, rt0.c5 HAVING ((CASE WHEN COUNT(vt1.c1) THEN AVG(MIN(MIN(TOTAL(x'b989')))) WHEN vt1.c1 COLLATE BINARY THEN COUNT(*) WHEN COUNT(rt0.c1) THEN (+ (MIN(COUNT(*)))) END) ISNULL);
SELECT MIN((((rt0.c0)) BETWEEN (((rt0.c3 IN ()))) AND ((((v0.c0) BETWEEN (rt0.c0) AND ('bBNbgJ')))))) FROM vt1, vt0, v0, rt0 ORDER BY (((rt0.c1)) NOT BETWEEN ((((vt0.c1) NOT NULL))) AND ((((vt0.c0)>=(rt0.c4))))) ASC  NULLS LAST, ((rt0.c0) NOT BETWEEN (((rt0.c1) NOTNULL)) AND ((- (rt0.c2))));
SELECT rt0.c0, rt0.c1, rt0.c3, rt0.c2, rt0.c4 FROM rt0;
SELECT rt0.c0, rt0.c1, rt0.c3, rt0.c2, rt0.c4 FROM rt0 WHERE (json_array(((rt0.c2)|(rt0.c1)), CASE WHEN rt0.c4 THEN 0.3173977968314208 ELSE rt0.c2 END)) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c3, rt0.c2, rt0.c4 FROM rt0 WHERE ((NOT (json_array(((rt0.c2)|(rt0.c1)), CASE WHEN rt0.c4 THEN 0.3173977968314208 ELSE rt0.c2 END)))) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c3, rt0.c2, rt0.c4 FROM rt0 WHERE (((json_array(((rt0.c2)|(rt0.c1)), CASE WHEN rt0.c4 THEN 0.3173977968314208 ELSE rt0.c2 END)) ISNULL));
SELECT rt0.c0, rt0.c1, rt0.c3, rt0.c2, rt0.c4 FROM rt0;
SELECT DISTINCT vt0.c1 FROM vt0, v0 RIGHT OUTER JOIN vt1 ON ((CAST(vt0.c1 AS NUMERIC)) NOTNULL);
SELECT DISTINCT vt0.c1 FROM vt0, v0 RIGHT OUTER JOIN vt1 ON ((CAST(vt0.c1 AS NUMERIC)) NOTNULL) WHERE (((vt0.c0)!=(vt0.c0)) COLLATE BINARY) UNION SELECT DISTINCT vt0.c1 FROM vt0, v0 RIGHT OUTER JOIN vt1 ON ((CAST(vt0.c1 AS NUMERIC)) NOTNULL) WHERE ((NOT (((vt0.c0)!=(vt0.c0)) COLLATE BINARY))) UNION SELECT DISTINCT vt0.c1 FROM vt0, v0 RIGHT OUTER JOIN vt1 ON ((CAST(vt0.c1 AS NUMERIC)) NOTNULL) WHERE (((((vt0.c0)<>(vt0.c0)) COLLATE BINARY) ISNULL));
SELECT DISTINCT vt0.c1 FROM vt0, v0 RIGHT OUTER JOIN vt1 ON ((CAST(vt0.c1 AS NUMERIC)) NOTNULL);
SELECT vt1.c1 FROM v0, vt1 GROUP BY vt1.c1;
SELECT vt1.c1 FROM v0, vt1 WHERE (NULL) GROUP BY vt1.c1 UNION SELECT ALL vt1.c1 FROM v0, vt1 WHERE ((NOT (NULL))) GROUP BY vt1.c1 UNION SELECT ALL vt1.c1 FROM v0, vt1 WHERE (((NULL) ISNULL)) GROUP BY vt1.c1;
SELECT vt1.c1 FROM v0, vt1 GROUP BY vt1.c1;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (COUNT(*) IN ()) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT ((COUNT(*) IN ()))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (((COUNT(*) IN ())) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (COUNT(*) IN ()) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT ((COUNT(*) IN ()))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (((COUNT(*) IN ())) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0, rt0.c3, rt0.c2, rt0.c0 FROM rt0, v0;
SELECT v0.c0, rt0.c3, rt0.c2, rt0.c0 FROM rt0, v0 WHERE ((((((rt0.c3, rt0.c0, rt0.c1))<((rt0.c3, rt0.c2, rt0.c5))))%((0.9623743685937929 IN ())))) UNION ALL SELECT ALL v0.c0, rt0.c3, rt0.c2, rt0.c0 FROM rt0, v0 WHERE ((NOT ((((((rt0.c3, rt0.c0, rt0.c1))<((rt0.c3, rt0.c2, rt0.c5))))%((0.9623743685937929 IN ())))))) UNION ALL SELECT ALL v0.c0, rt0.c3, rt0.c2, rt0.c0 FROM rt0, v0 WHERE ((((((((rt0.c3, rt0.c0, rt0.c1))<((rt0.c3, rt0.c2, rt0.c5))))%((0.9623743685937929 IN ())))) ISNULL));
SELECT ALL v0.c0, rt0.c3, rt0.c2, rt0.c0 FROM rt0, v0;
SELECT DISTINCT * FROM vt2, vt0, rt0, vt1, v0;
SELECT DISTINCT * FROM vt2, vt0, rt0, vt1, v0 WHERE ((((rt0.c5)) NOT BETWEEN ((vt2.c0)) AND ((vt2.c0))) COLLATE BINARY) UNION SELECT DISTINCT * FROM vt2, vt0, rt0, vt1, v0 WHERE ((NOT ((((rt0.c5)) NOT BETWEEN ((vt2.c0)) AND ((vt2.c0))) COLLATE BINARY))) UNION SELECT DISTINCT * FROM vt2, vt0, rt0, vt1, v0 WHERE ((((((rt0.c5)) NOT BETWEEN ((vt2.c0)) AND ((vt2.c0))) COLLATE BINARY) ISNULL));
SELECT DISTINCT * FROM vt2, vt0, rt0, vt1, v0;
SELECT ALL rt0.c5, rt0.c4, rt0.c1 FROM rt0, vt2 GROUP BY rt0.c5, rt0.c4, rt0.c1;
SELECT ALL rt0.c5, rt0.c4, rt0.c1 FROM rt0, vt2 WHERE (((rt0.c3 COLLATE NOCASE) BETWEEN (((((rt0.c2)OR(rt0.c5)))AND(rt0.c4))) AND ((+ (rt0.c1))))) GROUP BY rt0.c5, rt0.c4, rt0.c1 UNION SELECT ALL rt0.c5, rt0.c4, rt0.c1 FROM rt0, vt2 WHERE ((NOT (((rt0.c3 COLLATE NOCASE) BETWEEN (((((rt0.c2)OR(rt0.c5)))AND(rt0.c4))) AND ((+ (rt0.c1))))))) GROUP BY rt0.c5, rt0.c4, rt0.c1 UNION SELECT rt0.c5, rt0.c4, rt0.c1 FROM rt0, vt2 WHERE (((((rt0.c3 COLLATE NOCASE) BETWEEN (((((rt0.c2)OR(rt0.c5)))AND(rt0.c4))) AND ((+ (rt0.c1))))) ISNULL)) GROUP BY rt0.c5, rt0.c4, rt0.c1;
SELECT ALL rt0.c5, rt0.c4, rt0.c1 FROM rt0, vt2 GROUP BY rt0.c5, rt0.c4, rt0.c1;
SELECT vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1;
SELECT ALL vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1 HAVING AVG(COUNT(MAX(AVG(SUM(vt1.c0))))) UNION ALL SELECT vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1 HAVING (NOT (AVG(COUNT(MAX(AVG(SUM(vt1.c0))))))) UNION ALL SELECT vt1.c0, vt1.c1 FROM vt1 GROUP BY vt1.c0, vt1.c1 HAVING ((AVG(COUNT(MAX(AVG(SUM(vt1.c0)))))) ISNULL);
SELECT * FROM v0 RIGHT OUTER JOIN vt2 ON NULL;
SELECT * FROM v0 RIGHT OUTER JOIN vt2 ON NULL WHERE (vt2.c0) UNION ALL SELECT * FROM v0 RIGHT OUTER JOIN vt2 ON NULL WHERE ((NOT (vt2.c0))) UNION ALL SELECT ALL * FROM v0 RIGHT OUTER JOIN vt2 ON NULL WHERE (((vt2.c0) ISNULL));
SELECT * FROM v0 RIGHT OUTER JOIN vt2 ON NULL;
SELECT DISTINCT * FROM vt0, rt0, vt1;
SELECT DISTINCT * FROM vt0, rt0, vt1 WHERE ((((rt0.c3)) BETWEEN ((CAST(vt1.c0 AS REAL))) AND ((((((NULL)AND(rt0.c2)))OR(0.3008049701065174)))))) UNION SELECT DISTINCT * FROM vt0, rt0, vt1 WHERE ((NOT ((((rt0.c3)) BETWEEN ((CAST(vt1.c0 AS REAL))) AND ((((((NULL)AND(rt0.c2)))OR(0.3008049701065174)))))))) UNION SELECT DISTINCT * FROM vt0, rt0, vt1 WHERE ((((((rt0.c3)) BETWEEN ((CAST(vt1.c0 AS REAL))) AND ((((((NULL)AND(rt0.c2)))OR(0.3008049701065174)))))) ISNULL));
SELECT DISTINCT * FROM vt0, rt0, vt1;
SELECT ALL rt0.c0, rt0.c3, rt0.c1, rt0.c2 FROM vt2, rt0 RIGHT OUTER JOIN v0 ON ((x'')<<(CAST(rt0.c4 AS TEXT))) GROUP BY rt0.c0, rt0.c3, rt0.c1, rt0.c2;
SELECT rt0.c0, rt0.c3, rt0.c1, rt0.c2 FROM vt2, rt0 RIGHT OUTER JOIN v0 ON ((x'')<<(CAST(rt0.c4 AS TEXT))) WHERE (CASE 0.2636873368920011  WHEN vt2.c0 THEN v0.c0 ELSE 0.6650731879226609 END COLLATE BINARY) GROUP BY rt0.c0, rt0.c3, rt0.c1, rt0.c2 UNION SELECT rt0.c0, rt0.c3, rt0.c1, rt0.c2 FROM vt2, rt0 RIGHT OUTER JOIN v0 ON ((x'')<<(CAST(rt0.c4 AS TEXT))) WHERE ((NOT (CASE 0.2636873368920011  WHEN vt2.c0 THEN v0.c0 ELSE 0.6650731879226609 END COLLATE BINARY))) GROUP BY rt0.c0, rt0.c3, rt0.c1, rt0.c2 UNION SELECT rt0.c0, rt0.c3, rt0.c1, rt0.c2 FROM vt2, rt0 RIGHT OUTER JOIN v0 ON ((x'')<<(CAST(rt0.c4 AS TEXT))) WHERE (((CASE 0.2636873368920011  WHEN vt2.c0 THEN v0.c0 ELSE 0.6650731879226609 END COLLATE BINARY) ISNULL)) GROUP BY rt0.c0, rt0.c3, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, rt0.c3, rt0.c1, rt0.c2 FROM vt2, rt0 RIGHT OUTER JOIN v0 ON ((x'')<<(CAST(rt0.c4 AS TEXT))) GROUP BY rt0.c0, rt0.c3, rt0.c1, rt0.c2;
SELECT vt1.c1, rt0.c0, vt0.c1, rt0.c4, rt0.c5, rt0.c2, v0.c0, vt0.c0 FROM vt1, vt0, v0, rt0, vt2 GROUP BY vt1.c1, rt0.c0, vt0.c1, rt0.c4, rt0.c5, rt0.c2, v0.c0, vt0.c0;
SELECT vt1.c1, rt0.c0, vt0.c1, rt0.c4, rt0.c5, rt0.c2, v0.c0, vt0.c0 FROM vt1, vt0, v0, rt0, vt2 GROUP BY vt1.c1, rt0.c0, vt0.c1, rt0.c4, rt0.c5, rt0.c2, v0.c0, vt0.c0 HAVING SUM(CAST(vt2.c0 AS INTEGER)) UNION ALL SELECT ALL vt1.c1, rt0.c0, vt0.c1, rt0.c4, rt0.c5, rt0.c2, v0.c0, vt0.c0 FROM vt1, vt0, v0, rt0, vt2 GROUP BY vt1.c1, rt0.c0, vt0.c1, rt0.c4, rt0.c5, rt0.c2, v0.c0, vt0.c0 HAVING (NOT (SUM(CAST(vt2.c0 AS INTEGER)))) UNION ALL SELECT ALL vt1.c1, rt0.c0, vt0.c1, rt0.c4, rt0.c5, rt0.c2, v0.c0, vt0.c0 FROM vt1, vt0, v0, rt0, vt2 GROUP BY vt1.c1, rt0.c0, vt0.c1, rt0.c4, rt0.c5, rt0.c2, v0.c0, vt0.c0 HAVING ((SUM(CAST(vt2.c0 AS INTEGER))) ISNULL);
SELECT vt1.c1, rt0.c0, vt0.c1, rt0.c4, rt0.c5, rt0.c2, v0.c0, vt0.c0 FROM vt1, vt0, v0, rt0, vt2 GROUP BY vt1.c1, rt0.c0, vt0.c1, rt0.c4, rt0.c5, rt0.c2, v0.c0, vt0.c0;
SELECT vt1.c1, rt0.c0, vt0.c1, rt0.c4, rt0.c5, rt0.c2, v0.c0, vt0.c0 FROM vt1, vt0, v0, rt0, vt2 GROUP BY vt1.c1, rt0.c0, vt0.c1, rt0.c4, rt0.c5, rt0.c2, v0.c0, vt0.c0 HAVING SUM(CAST(vt2.c0 AS INTEGER)) UNION ALL SELECT ALL vt1.c1, rt0.c0, vt0.c1, rt0.c4, rt0.c5, rt0.c2, v0.c0, vt0.c0 FROM vt1, vt0, v0, rt0, vt2 GROUP BY vt1.c1, rt0.c0, vt0.c1, rt0.c4, rt0.c5, rt0.c2, v0.c0, vt0.c0 HAVING (NOT (SUM(CAST(vt2.c0 AS INTEGER)))) UNION ALL SELECT ALL vt1.c1, rt0.c0, vt0.c1, rt0.c4, rt0.c5, rt0.c2, v0.c0, vt0.c0 FROM vt1, vt0, v0, rt0, vt2 GROUP BY vt1.c1, rt0.c0, vt0.c1, rt0.c4, rt0.c5, rt0.c2, v0.c0, vt0.c0 HAVING ((SUM(CAST(vt2.c0 AS INTEGER))) ISNULL);
SELECT vt1.c1, rt0.c0, vt0.c1, rt0.c4, rt0.c5, rt0.c2, v0.c0, vt0.c0 FROM vt1, vt0, v0, rt0, vt2 GROUP BY vt1.c1, rt0.c0, vt0.c1, rt0.c4, rt0.c5, rt0.c2, v0.c0, vt0.c0;
SELECT vt0.c0, vt2.c0, vt0.c1, rt0.c1, rt0.c4, rt0.c2, vt1.c1, v0.c0, rt0.c5, rt0.c0, rt0.c3 FROM vt0, vt2, vt1 FULL OUTER JOIN rt0 ON (((+ (rt0.c4))) NOT BETWEEN (((vt1.c0)<<(rt0.c0))) AND (NULL)) INNER JOIN v0 ON CAST((((vt1.c0, rt0.c4, rt0.c3)) BETWEEN ((rt0.c0, '찟''NmmOV', rt0.c1)) AND ((x'', vt0.c0, vt0.c1))) AS INTEGER);
SELECT ALL vt0.c0, vt2.c0, vt0.c1, rt0.c1, rt0.c4, rt0.c2, vt1.c1, v0.c0, rt0.c5, rt0.c0, rt0.c3 FROM vt0, vt2, vt1 FULL OUTER JOIN rt0 ON (((+ (rt0.c4))) NOT BETWEEN (((vt1.c0)<<(rt0.c0))) AND (NULL)) INNER JOIN v0 ON CAST((((vt1.c0, rt0.c4, rt0.c3)) BETWEEN ((rt0.c0, '찟''NmmOV', rt0.c1)) AND ((x'', vt0.c0, vt0.c1))) AS INTEGER) WHERE (((NOT (0.8924994618406986)) IN ())) UNION ALL SELECT ALL vt0.c0, vt2.c0, vt0.c1, rt0.c1, rt0.c4, rt0.c2, vt1.c1, v0.c0, rt0.c5, rt0.c0, rt0.c3 FROM vt0, vt2, vt1 FULL OUTER JOIN rt0 ON (((+ (rt0.c4))) NOT BETWEEN (((vt1.c0)<<(rt0.c0))) AND (NULL)) INNER JOIN v0 ON CAST((((vt1.c0, rt0.c4, rt0.c3)) BETWEEN ((rt0.c0, '찟''NmmOV', rt0.c1)) AND ((x'', vt0.c0, vt0.c1))) AS INTEGER) WHERE ((NOT (((NOT (0.8924994618406986)) IN ())))) UNION ALL SELECT ALL vt0.c0, vt2.c0, vt0.c1, rt0.c1, rt0.c4, rt0.c2, vt1.c1, v0.c0, rt0.c5, rt0.c0, rt0.c3 FROM vt0, vt2, vt1 FULL OUTER JOIN rt0 ON (((+ (rt0.c4))) NOT BETWEEN (((vt1.c0)<<(rt0.c0))) AND (NULL)) INNER JOIN v0 ON CAST((((vt1.c0, rt0.c4, rt0.c3)) BETWEEN ((rt0.c0, '찟''NmmOV', rt0.c1)) AND ((x'', vt0.c0, vt0.c1))) AS INTEGER) WHERE (((((NOT (0.8924994618406986)) IN ())) ISNULL));
SELECT vt0.c0, vt2.c0, vt0.c1, rt0.c1, rt0.c4, rt0.c2, vt1.c1, v0.c0, rt0.c5, rt0.c0, rt0.c3 FROM vt0, vt2, vt1 FULL OUTER JOIN rt0 ON (((+ (rt0.c4))) NOT BETWEEN (((vt1.c0)<<(rt0.c0))) AND (NULL)) INNER JOIN v0 ON CAST((((vt1.c0, rt0.c4, rt0.c3)) BETWEEN ((rt0.c0, '찟''NmmOV', rt0.c1)) AND ((x'', vt0.c0, vt0.c1))) AS INTEGER);
SELECT DISTINCT * FROM vt1, vt2;
SELECT DISTINCT * FROM vt1, vt2 WHERE ((+ (((vt2.c0)<<(vt2.c0))))) UNION SELECT DISTINCT * FROM vt1, vt2 WHERE ((NOT ((+ (((vt2.c0)<<(vt2.c0))))))) UNION SELECT DISTINCT * FROM vt1, vt2 WHERE ((((+ (((vt2.c0)<<(vt2.c0))))) ISNULL));
SELECT DISTINCT * FROM vt1, vt2;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE ((- ((vt1.c1 IN (vt1.c0))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT ((- ((vt1.c1 IN (vt1.c0))))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((((- ((vt1.c1 IN (vt1.c0))))) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt0.c0, rt0.c4 FROM vt0 RIGHT OUTER JOIN v0 ON (((rt0.c3 IN ())) NOT BETWEEN (((((rt0.c2)AND(rt0.c1)))AND(vt1.c0))) AND (((NULL) NOT NULL))) CROSS JOIN vt1 ON CASE WHEN vt1.c1 COLLATE RTRIM THEN (NOT (x'')) END INNER JOIN rt0 ON (((((rt0.c5)<>(vt0.c0))))<((((vt1.c1) BETWEEN (rt0.c5) AND (rt0.c3))))) GROUP BY vt0.c0, rt0.c4;
SELECT ALL v0.c0, rt0.c4 FROM v0, rt0, vt0, vt2, vt1;
SELECT ALL v0.c0, rt0.c4 FROM v0, rt0, vt0, vt2, vt1 WHERE (((TYPEOF(DISTINCT v0.c0)) BETWEEN (CASE vt1.c0  WHEN rt0.c1 THEN vt1.c1 END) AND (CASE WHEN vt0.c1 THEN rt0.c0 WHEN rt0.c4 THEN NULL WHEN vt1.c0 THEN vt2.c0 ELSE vt0.c0 END))) UNION ALL SELECT v0.c0, rt0.c4 FROM v0, rt0, vt0, vt2, vt1 WHERE ((NOT (((TYPEOF(DISTINCT v0.c0)) BETWEEN (CASE vt1.c0  WHEN rt0.c1 THEN vt1.c1 END) AND (CASE WHEN vt0.c1 THEN rt0.c0 WHEN rt0.c4 THEN NULL WHEN vt1.c0 THEN vt2.c0 ELSE vt0.c0 END))))) UNION ALL SELECT v0.c0, rt0.c4 FROM v0, rt0, vt0, vt2, vt1 WHERE (((((TYPEOF(DISTINCT v0.c0)) BETWEEN (CASE vt1.c0  WHEN rt0.c1 THEN vt1.c1 END) AND (CASE WHEN vt0.c1 THEN rt0.c0 WHEN rt0.c4 THEN NULL WHEN vt1.c0 THEN vt2.c0 ELSE vt0.c0 END))) ISNULL));
SELECT ALL v0.c0, rt0.c4 FROM v0, rt0, vt0, vt2, vt1;
SELECT DISTINCT * FROM vt0 FULL OUTER JOIN vt2 ON (((vt0.c1)) BETWEEN ((((vt0.c0)*(NULL)))) AND ((((((vt2.c0)OR(vt0.c1)))AND(vt0.c0)))));
SELECT DISTINCT * FROM vt0 FULL OUTER JOIN vt2 ON (((vt0.c1)) BETWEEN ((((vt0.c0)*(NULL)))) AND ((((((vt2.c0)OR(vt0.c1)))AND(vt0.c0))))) WHERE (CAST((((vt0.c1))>=((vt0.c0))) AS NUMERIC)) UNION SELECT DISTINCT * FROM vt0 FULL OUTER JOIN vt2 ON (((vt0.c1)) BETWEEN ((((vt0.c0)*(NULL)))) AND ((((((vt2.c0)OR(vt0.c1)))AND(vt0.c0))))) WHERE ((NOT (CAST((((vt0.c1))>=((vt0.c0))) AS NUMERIC)))) UNION SELECT DISTINCT * FROM vt0 FULL OUTER JOIN vt2 ON (((vt0.c1)) BETWEEN ((((vt0.c0)*(NULL)))) AND ((((((vt2.c0)OR(vt0.c1)))AND(vt0.c0))))) WHERE (((CAST((((vt0.c1))>=((vt0.c0))) AS NUMERIC)) ISNULL));
SELECT DISTINCT * FROM vt0 FULL OUTER JOIN vt2 ON (((vt0.c1)) BETWEEN ((((vt0.c0)*(NULL)))) AND ((((((vt2.c0)OR(vt0.c1)))AND(vt0.c0)))));
SELECT ALL vt1.c0, v0.c0, vt1.c1, vt0.c0 FROM vt0, vt1, v0 GROUP BY vt1.c0, v0.c0, vt1.c1, vt0.c0;
SELECT vt1.c0, v0.c0, vt1.c1, vt0.c0 FROM vt0, vt1, v0 WHERE ((((vt1.c0)) NOT BETWEEN (((vt1.c0 IN (vt1.c1)))) AND (((vt1.c0 IN ()))))) GROUP BY vt1.c0, v0.c0, vt1.c1, vt0.c0 UNION SELECT ALL vt1.c0, v0.c0, vt1.c1, vt0.c0 FROM vt0, vt1, v0 WHERE ((NOT ((((vt1.c0)) NOT BETWEEN (((vt1.c0 IN (vt1.c1)))) AND (((vt1.c0 IN ()))))))) GROUP BY vt1.c0, v0.c0, vt1.c1, vt0.c0 UNION SELECT vt1.c0, v0.c0, vt1.c1, vt0.c0 FROM vt0, vt1, v0 WHERE ((((((vt1.c0)) NOT BETWEEN (((vt1.c0 IN (vt1.c1)))) AND (((vt1.c0 IN ()))))) ISNULL)) GROUP BY vt1.c0, v0.c0, vt1.c1, vt0.c0;
SELECT ALL vt1.c0, v0.c0, vt1.c1, vt0.c0 FROM vt0, vt1, v0 GROUP BY vt1.c0, v0.c0, vt1.c1, vt0.c0;
SELECT rt0.c5, rt0.c3, vt2.c0, vt0.c0, vt1.c0, v0.c0, vt1.c1 FROM vt2, vt1 INNER JOIN v0 ON ((((rt0.c4))>((rt0.c5))) IN ()) CROSS JOIN vt0 ON ((((vt0.c0) IS FALSE))*((~ (vt0.c0)))) RIGHT OUTER JOIN rt0 ON (((rt0.c5, ((v0.c0) BETWEEN (vt0.c0) AND (rt0.c1)), ((((vt2.c0)AND(rt0.c4)))AND(rt0.c2))))<>((CAST(vt0.c0 AS REAL), ((v0.c0) NOT BETWEEN (rt0.c1) AND (vt0.c0)), vt1.c0))) GROUP BY rt0.c5, rt0.c3, vt2.c0, vt0.c0, vt1.c0, v0.c0, vt1.c1;
SELECT ALL rt0.c5, rt0.c3, vt2.c0, vt0.c0, vt1.c0, v0.c0, vt1.c1 FROM vt2, vt1 INNER JOIN v0 ON ((((rt0.c4))>((rt0.c5))) IN ()) CROSS JOIN vt0 ON ((((vt0.c0) IS FALSE))*((~ (vt0.c0)))) RIGHT OUTER JOIN rt0 ON (((rt0.c5, ((v0.c0) BETWEEN (vt0.c0) AND (rt0.c1)), ((((vt2.c0)AND(rt0.c4)))AND(rt0.c2))))<>((CAST(vt0.c0 AS REAL), ((v0.c0) NOT BETWEEN (rt0.c1) AND (vt0.c0)), vt1.c0))) GROUP BY rt0.c5, rt0.c3, vt2.c0, vt0.c0, vt1.c0, v0.c0, vt1.c1 HAVING MIN(((rt0.c1) IS FALSE)) UNION ALL SELECT ALL rt0.c5, rt0.c3, vt2.c0, vt0.c0, vt1.c0, v0.c0, vt1.c1 FROM vt2 NOT INDEXED, vt1 INNER JOIN v0 ON ((((rt0.c4))>((rt0.c5))) IN ()) CROSS JOIN vt0 ON ((((vt0.c0) IS FALSE))*((~ (vt0.c0)))) RIGHT OUTER JOIN rt0 ON (((rt0.c5, ((v0.c0) BETWEEN (vt0.c0) AND (rt0.c1)), ((((vt2.c0)AND(rt0.c4)))AND(rt0.c2))))!=((CAST(vt0.c0 AS REAL), ((v0.c0) NOT BETWEEN (rt0.c1) AND (vt0.c0)), vt1.c0))) GROUP BY rt0.c5, rt0.c3, vt2.c0, vt0.c0, vt1.c0, v0.c0, vt1.c1 HAVING (NOT (MIN(((rt0.c1) IS FALSE)))) UNION ALL SELECT rt0.c5, rt0.c3, vt2.c0, vt0.c0, vt1.c0, v0.c0, vt1.c1 FROM vt2, vt1 INNER JOIN v0 ON ((((rt0.c4))>((rt0.c5))) IN ()) CROSS JOIN vt0 ON ((((vt0.c0) IS FALSE))*((~ (vt0.c0)))) RIGHT OUTER JOIN rt0 ON (((rt0.c5, ((v0.c0) BETWEEN (vt0.c0) AND (rt0.c1)), ((((vt2.c0)AND(rt0.c4)))AND(rt0.c2))))<>((CAST(vt0.c0 AS REAL), ((v0.c0) NOT BETWEEN (rt0.c1) AND (vt0.c0)), vt1.c0))) GROUP BY rt0.c5, rt0.c3, vt2.c0, vt0.c0, vt1.c0, v0.c0, vt1.c1 HAVING ((MIN(((rt0.c1) IS FALSE))) ISNULL);
SELECT rt0.c5, rt0.c3, vt2.c0, vt0.c0, vt1.c0, v0.c0, vt1.c1 FROM vt2, vt1 INNER JOIN v0 ON ((((rt0.c4))>((rt0.c5))) IN ()) CROSS JOIN vt0 ON ((((vt0.c0) IS FALSE))*((~ (vt0.c0)))) RIGHT OUTER JOIN rt0 ON (((rt0.c5, ((v0.c0) BETWEEN (vt0.c0) AND (rt0.c1)), ((((vt2.c0)AND(rt0.c4)))AND(rt0.c2))))<>((CAST(vt0.c0 AS REAL), ((v0.c0) NOT BETWEEN (rt0.c1) AND (vt0.c0)), vt1.c0))) GROUP BY rt0.c5, rt0.c3, vt2.c0, vt0.c0, vt1.c0, v0.c0, vt1.c1;
SELECT ALL rt0.c5, rt0.c3, vt2.c0, vt0.c0, vt1.c0, v0.c0, vt1.c1 FROM vt2, vt1 INNER JOIN v0 ON ((((rt0.c4))>((rt0.c5))) IN ()) CROSS JOIN vt0 ON ((((vt0.c0) IS FALSE))*((~ (vt0.c0)))) RIGHT OUTER JOIN rt0 ON (((rt0.c5, ((v0.c0) BETWEEN (vt0.c0) AND (rt0.c1)), ((((vt2.c0)AND(rt0.c4)))AND(rt0.c2))))<>((CAST(vt0.c0 AS REAL), ((v0.c0) NOT BETWEEN (rt0.c1) AND (vt0.c0)), vt1.c0))) GROUP BY rt0.c5, rt0.c3, vt2.c0, vt0.c0, vt1.c0, v0.c0, vt1.c1 HAVING MIN(((rt0.c1) IS FALSE)) UNION ALL SELECT ALL rt0.c5, rt0.c3, vt2.c0, vt0.c0, vt1.c0, v0.c0, vt1.c1 FROM vt2 NOT INDEXED, vt1 INNER JOIN v0 ON ((((rt0.c4))>((rt0.c5))) IN ()) CROSS JOIN vt0 ON ((((vt0.c0) IS FALSE))*((~ (vt0.c0)))) RIGHT OUTER JOIN rt0 ON (((rt0.c5, ((v0.c0) BETWEEN (vt0.c0) AND (rt0.c1)), ((((vt2.c0)AND(rt0.c4)))AND(rt0.c2))))!=((CAST(vt0.c0 AS REAL), ((v0.c0) NOT BETWEEN (rt0.c1) AND (vt0.c0)), vt1.c0))) GROUP BY rt0.c5, rt0.c3, vt2.c0, vt0.c0, vt1.c0, v0.c0, vt1.c1 HAVING (NOT (MIN(((rt0.c1) IS FALSE)))) UNION ALL SELECT rt0.c5, rt0.c3, vt2.c0, vt0.c0, vt1.c0, v0.c0, vt1.c1 FROM vt2, vt1 INNER JOIN v0 ON ((((rt0.c4))>((rt0.c5))) IN ()) CROSS JOIN vt0 ON ((((vt0.c0) IS FALSE))*((~ (vt0.c0)))) RIGHT OUTER JOIN rt0 ON (((rt0.c5, ((v0.c0) BETWEEN (vt0.c0) AND (rt0.c1)), ((((vt2.c0)AND(rt0.c4)))AND(rt0.c2))))<>((CAST(vt0.c0 AS REAL), ((v0.c0) NOT BETWEEN (rt0.c1) AND (vt0.c0)), vt1.c0))) GROUP BY rt0.c5, rt0.c3, vt2.c0, vt0.c0, vt1.c0, v0.c0, vt1.c1 HAVING ((MIN(((rt0.c1) IS FALSE))) ISNULL);
SELECT rt0.c5, rt0.c3, vt2.c0, vt0.c0, vt1.c0, v0.c0, vt1.c1 FROM vt2, vt1 INNER JOIN v0 ON ((((rt0.c4))>((rt0.c5))) IN ()) CROSS JOIN vt0 ON ((((vt0.c0) IS FALSE))*((~ (vt0.c0)))) RIGHT OUTER JOIN rt0 ON (((rt0.c5, ((v0.c0) BETWEEN (vt0.c0) AND (rt0.c1)), ((((vt2.c0)AND(rt0.c4)))AND(rt0.c2))))<>((CAST(vt0.c0 AS REAL), ((v0.c0) NOT BETWEEN (rt0.c1) AND (vt0.c0)), vt1.c0))) GROUP BY rt0.c5, rt0.c3, vt2.c0, vt0.c0, vt1.c0, v0.c0, vt1.c1;
SELECT ALL vt0.c0, vt0.c1, rt0.c0, rt0.c3, vt1.c1, rt0.c2, rt0.c4, rt0.c1, vt1.c0, v0.c0, vt2.c0, rt0.c5 FROM vt1, rt0, vt2, vt0, v0;
SELECT ALL vt0.c0, vt0.c1, rt0.c0, rt0.c3, vt1.c1, rt0.c2, rt0.c4, rt0.c1, vt1.c0, v0.c0, vt2.c0, rt0.c5 FROM vt1, rt0, vt2, vt0, v0 WHERE ((((rt0.c1, vt0.c1, v0.c0)) NOT BETWEEN (('-1095732302', vt2.c0, NULL)) AND ((((rt0.c0) BETWEEN (0.3407096156585654) AND (rt0.c0)), rt0.c2, ((vt0.c0)%(vt1.c0)))))) UNION ALL SELECT vt0.c0, vt0.c1, rt0.c0, rt0.c3, vt1.c1, rt0.c2, rt0.c4, rt0.c1, vt1.c0, v0.c0, vt2.c0, rt0.c5 FROM vt1, rt0, vt2, vt0, v0 WHERE ((NOT ((((rt0.c1, vt0.c1, v0.c0)) NOT BETWEEN (('-1095732302', vt2.c0, NULL)) AND ((((rt0.c0) BETWEEN (0.3407096156585654) AND (rt0.c0)), rt0.c2, ((vt0.c0)%(vt1.c0)))))))) UNION ALL SELECT vt0.c0, vt0.c1, rt0.c0, rt0.c3, vt1.c1, rt0.c2, rt0.c4, rt0.c1, vt1.c0, v0.c0, vt2.c0, rt0.c5 FROM vt1, rt0, vt2, vt0 NOT INDEXED, v0 WHERE ((((((rt0.c1, vt0.c1, v0.c0)) NOT BETWEEN (('-1095732302', vt2.c0, NULL)) AND ((((rt0.c0) BETWEEN (0.3407096156585654) AND (rt0.c0)), rt0.c2, ((vt0.c0)%(vt1.c0)))))) ISNULL));
SELECT ALL vt0.c0, vt0.c1, rt0.c0, rt0.c3, vt1.c1, rt0.c2, rt0.c4, rt0.c1, vt1.c0, v0.c0, vt2.c0, rt0.c5 FROM vt1, rt0, vt2, vt0, v0;
SELECT DISTINCT rt0.c0, rt0.c5, vt1.c1, rt0.c3, rt0.c1, v0.c0, rt0.c2, rt0.c4, vt1.c0 FROM v0, vt1 FULL OUTER JOIN rt0 ON ((rt0.c5)OR(((((rt0.c2)AND(rt0.c5)))OR(vt1.c1))));
SELECT DISTINCT rt0.c0, rt0.c5, vt1.c1, rt0.c3, rt0.c1, v0.c0, rt0.c2, rt0.c4, vt1.c0 FROM v0, vt1 FULL OUTER JOIN rt0 ON ((rt0.c5)OR(((((rt0.c2)AND(rt0.c5)))OR(vt1.c1)))) WHERE ((~ (((((((((vt1.c0)OR(rt0.c3)))OR(0X354cce55)))OR(rt0.c5)))OR(x'cc1e'))))) UNION SELECT DISTINCT rt0.c0, rt0.c5, vt1.c1, rt0.c3, rt0.c1, v0.c0, rt0.c2, rt0.c4, vt1.c0 FROM v0, vt1 FULL OUTER JOIN rt0 ON ((rt0.c5)OR(((((rt0.c2)AND(rt0.c5)))OR(vt1.c1)))) WHERE ((NOT ((~ (((((((((vt1.c0)OR(rt0.c3)))OR(0x354cce55)))OR(rt0.c5)))OR(x'cc1e'))))))) UNION SELECT DISTINCT rt0.c0, rt0.c5, vt1.c1, rt0.c3, rt0.c1, v0.c0, rt0.c2, rt0.c4, vt1.c0 FROM v0, vt1 FULL OUTER JOIN rt0 ON ((rt0.c5)OR(((((rt0.c2)AND(rt0.c5)))OR(vt1.c1)))) WHERE ((((~ (((((((((vt1.c0)OR(rt0.c3)))OR(0x354cce55)))OR(rt0.c5)))OR(x'cc1e'))))) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c5, vt1.c1, rt0.c3, rt0.c1, v0.c0, rt0.c2, rt0.c4, vt1.c0 FROM v0, vt1 FULL OUTER JOIN rt0 ON ((rt0.c5)OR(((((rt0.c2)AND(rt0.c5)))OR(vt1.c1))));
SELECT rt0.c5 FROM rt0 GROUP BY rt0.c5;
SELECT rt0.c5 FROM rt0 WHERE ((((NOT (rt0.c1)))>>(((rt0.c0)&(rt0.c0))))) GROUP BY rt0.c5 UNION SELECT ALL rt0.c5 FROM rt0 WHERE ((NOT ((((NOT (rt0.c1)))>>(((rt0.c0)&(rt0.c0))))))) GROUP BY rt0.c5 UNION SELECT rt0.c5 FROM rt0 WHERE ((((((NOT (rt0.c1)))>>(((rt0.c0)&(rt0.c0))))) ISNULL)) GROUP BY rt0.c5;
SELECT rt0.c5 FROM rt0 GROUP BY rt0.c5;
SELECT ALL rt0.c3, rt0.c5, vt1.c0, rt0.c4, rt0.c1, vt1.c1, vt0.c1, rt0.c2 FROM vt1 FULL OUTER JOIN vt0 ON ((((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c4)))AND(((rt0.c2)<(rt0.c5)))))AND((vt1.c0 IN ()))) INNER JOIN rt0 ON vt0.c0 GROUP BY rt0.c3, rt0.c5, vt1.c0, rt0.c4, rt0.c1, vt1.c1, vt0.c1, rt0.c2;
SELECT rt0.c3, rt0.c5, vt1.c0, rt0.c4, rt0.c1, vt1.c1, vt0.c1, rt0.c2 FROM vt1 FULL OUTER JOIN vt0 ON ((((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c4)))AND(((rt0.c2)<(rt0.c5)))))AND((vt1.c0 IN ()))) INNER JOIN rt0 ON vt0.c0 GROUP BY rt0.c3, rt0.c5, vt1.c0, rt0.c4, rt0.c1, vt1.c1, vt0.c1, rt0.c2 HAVING MAX(COUNT(rt0.c3)) UNION ALL SELECT ALL rt0.c3, rt0.c5, vt1.c0, rt0.c4, rt0.c1, vt1.c1, vt0.c1, rt0.c2 FROM vt1 FULL OUTER JOIN vt0 ON ((((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c4)))AND(((rt0.c2)<(rt0.c5)))))AND((vt1.c0 IN ()))) INNER JOIN rt0 ON vt0.c0 GROUP BY rt0.c3, rt0.c5, vt1.c0, rt0.c4, rt0.c1, vt1.c1, vt0.c1, rt0.c2 HAVING (NOT (MAX(COUNT(rt0.c3)))) UNION ALL SELECT rt0.c3, rt0.c5, vt1.c0, rt0.c4, rt0.c1, vt1.c1, vt0.c1, rt0.c2 FROM vt1 FULL OUTER JOIN vt0 ON ((((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c4)))AND(((rt0.c2)<(rt0.c5)))))AND((vt1.c0 IN ()))) INNER JOIN rt0 ON vt0.c0 GROUP BY rt0.c3, rt0.c5, vt1.c0, rt0.c4, rt0.c1, vt1.c1, vt0.c1, rt0.c2 HAVING ((MAX(COUNT(rt0.c3))) ISNULL);
SELECT vt1.c0, rt0.c2, vt0.c0, vt1.c1, rt0.c0, vt2.c0, rt0.c4, rt0.c3, vt0.c1, rt0.c5 FROM v0, vt0, rt0, vt2, vt1;
SELECT ALL vt1.c0, rt0.c2, vt0.c0, vt1.c1, rt0.c0, vt2.c0, rt0.c4, rt0.c3, vt0.c1, rt0.c5 FROM v0, vt0, rt0, vt2, vt1 WHERE (((((((rt0.c4)OR(0.41070718512873405)))OR(rt0.c0))) NOT BETWEEN (((((((((((((rt0.c3)AND(v0.c0)))OR(vt0.c1)))OR(vt0.c0)))OR(vt0.c0)))AND(rt0.c3)))AND(rt0.c3))) AND (((v0.c0) NOT NULL)))) UNION ALL SELECT ALL vt1.c0, rt0.c2, vt0.c0, vt1.c1, rt0.c0, vt2.c0, rt0.c4, rt0.c3, vt0.c1, rt0.c5 FROM v0, vt0, rt0, vt2, vt1 NOT INDEXED WHERE ((NOT (((((((rt0.c4)OR(0.41070718512873405)))OR(rt0.c0))) NOT BETWEEN (((((((((((((rt0.c3)AND(v0.c0)))OR(vt0.c1)))OR(vt0.c0)))OR(vt0.c0)))AND(rt0.c3)))AND(rt0.c3))) AND (((v0.c0) NOT NULL)))))) UNION ALL SELECT ALL vt1.c0, rt0.c2, vt0.c0, vt1.c1, rt0.c0, vt2.c0, rt0.c4, rt0.c3, vt0.c1, rt0.c5 FROM v0, vt0, rt0, vt2, vt1 WHERE (((((((((rt0.c4)OR(0.41070718512873405)))OR(rt0.c0))) NOT BETWEEN (((((((((((((rt0.c3)AND(v0.c0)))OR(vt0.c1)))OR(vt0.c0)))OR(vt0.c0)))AND(rt0.c3)))AND(rt0.c3))) AND (((v0.c0) NOT NULL)))) ISNULL));
SELECT vt1.c0, rt0.c2, vt0.c0, vt1.c1, rt0.c0, vt2.c0, rt0.c4, rt0.c3, vt0.c1, rt0.c5 FROM v0, vt0, rt0, vt2, vt1;
SELECT DISTINCT * FROM vt0, vt1 FULL OUTER JOIN vt2 ON vt2.c0 CROSS JOIN rt0 ON ((((rt0.c1) NOT NULL))|(CAST(rt0.c1 AS BLOB))) RIGHT OUTER JOIN v0 ON CAST(((vt1.c0) BETWEEN (vt1.c0) AND (v0.c0)) AS REAL);
SELECT DISTINCT * FROM vt0, vt1 FULL OUTER JOIN vt2 ON vt2.c0 CROSS JOIN rt0 ON ((((rt0.c1) NOT NULL))|(CAST(rt0.c1 AS BLOB))) RIGHT OUTER JOIN v0 ON CAST(((vt1.c0) BETWEEN (vt1.c0) AND (v0.c0)) AS REAL) WHERE ((((rt0.c3, vt1.c1, vt1.c1)) BETWEEN ((CASE rt0.c2  WHEN vt1.c1 THEN 'z' ELSE rt0.c0 END, ((vt1.c0)IS(v0.c0)), rt0.c2)) AND ((((rt0.c4) IS FALSE), LOWER(vt2.c0), ((rt0.c5)+(vt1.c0)))))) UNION SELECT DISTINCT * FROM vt0, vt1 FULL OUTER JOIN vt2 ON vt2.c0 CROSS JOIN rt0 ON ((((rt0.c1) NOT NULL))|(CAST(rt0.c1 AS BLOB))) RIGHT OUTER JOIN v0 ON CAST(((vt1.c0) BETWEEN (vt1.c0) AND (v0.c0)) AS REAL) WHERE ((NOT ((((rt0.c3, vt1.c1, vt1.c1)) BETWEEN ((CASE rt0.c2  WHEN vt1.c1 THEN 'z' ELSE rt0.c0 END, ((vt1.c0)IS(v0.c0)), rt0.c2)) AND ((((rt0.c4) IS FALSE), LOWER(vt2.c0), ((rt0.c5)+(vt1.c0)))))))) UNION SELECT DISTINCT * FROM vt0, vt1 FULL OUTER JOIN vt2 ON vt2.c0 CROSS JOIN rt0 ON ((((rt0.c1) NOT NULL))|(CAST(rt0.c1 AS BLOB))) RIGHT OUTER JOIN v0 ON CAST(((vt1.c0) BETWEEN (vt1.c0) AND (v0.c0)) AS REAL) WHERE ((((((rt0.c3, vt1.c1, vt1.c1)) BETWEEN ((CASE rt0.c2  WHEN vt1.c1 THEN 'z' ELSE rt0.c0 END, ((vt1.c0)IS(v0.c0)), rt0.c2)) AND ((((rt0.c4) IS FALSE), LOWER(vt2.c0), ((rt0.c5)+(vt1.c0)))))) ISNULL));
SELECT DISTINCT * FROM vt0, vt1 FULL OUTER JOIN vt2 ON vt2.c0 CROSS JOIN rt0 ON ((((rt0.c1) NOT NULL))|(CAST(rt0.c1 AS BLOB))) RIGHT OUTER JOIN v0 ON CAST(((vt1.c0) BETWEEN (vt1.c0) AND (v0.c0)) AS REAL);
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 WHERE (((RTRIM(vt0.c1))+(vt0.c0 COLLATE BINARY))) GROUP BY vt0.c0, vt0.c1 UNION SELECT vt0.c0, vt0.c1 FROM vt0 WHERE ((NOT (((RTRIM(vt0.c1))+(vt0.c0 COLLATE BINARY))))) GROUP BY vt0.c0, vt0.c1 UNION SELECT ALL vt0.c0, vt0.c1 FROM vt0 WHERE (((((RTRIM(vt0.c1))+(vt0.c0 COLLATE BINARY))) ISNULL)) GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL v0.c0, vt0.c1, vt1.c0 FROM vt0, v0, vt2, vt1 GROUP BY v0.c0, vt0.c1, vt1.c0;
SELECT v0.c0, vt0.c1, vt1.c0 FROM vt0, v0, vt2, vt1 GROUP BY v0.c0, vt0.c1, vt1.c0 HAVING (~ (GROUP_CONCAT(SUM('*TvX')))) UNION ALL SELECT v0.c0, vt0.c1, vt1.c0 FROM vt0, v0, vt2, vt1 GROUP BY v0.c0, vt0.c1, vt1.c0 HAVING (NOT ((~ (GROUP_CONCAT(SUM('*TvX')))))) UNION ALL SELECT v0.c0, vt0.c1, vt1.c0 FROM vt0, v0, vt2, vt1 GROUP BY v0.c0, vt0.c1, vt1.c0 HAVING (((~ (GROUP_CONCAT(SUM('*TvX'))))) ISNULL);
SELECT ALL * FROM rt0, vt1 CROSS JOIN vt0 ON (((((v0.c0, rt0.c0, v0.c0)) BETWEEN ((rt0.c4, rt0.c3, rt0.c0)) AND ((vt0.c0, rt0.c2, vt1.c1)))) ISNULL) LEFT OUTER JOIN v0 ON vt1.c0 RIGHT OUTER JOIN vt2 ON ((((CASE WHEN rt0.c2 THEN rt0.c1 END)OR(((((rt0.c2)AND(v0.c0)))OR(vt0.c1)))))OR((((0.435160213190414)) BETWEEN ((rt0.c4)) AND ((vt1.c0)))));
SELECT DISTINCT * FROM v0, rt0, vt1, vt0, vt2;
SELECT DISTINCT * FROM v0, rt0, vt1, vt0, vt2 WHERE (TRIM(DISTINCT ((((vt1.c0)OR(rt0.c2)))AND(vt0.c1)), vt1.c0)) UNION SELECT DISTINCT * FROM v0, rt0, vt1, vt0, vt2 WHERE ((NOT (TRIM(DISTINCT ((((vt1.c0)OR(rt0.c2)))AND(vt0.c1)), vt1.c0)))) UNION SELECT DISTINCT * FROM v0, rt0, vt1, vt0, vt2 WHERE (((TRIM(DISTINCT ((((vt1.c0)OR(rt0.c2)))AND(vt0.c1)), vt1.c0)) ISNULL));
SELECT DISTINCT * FROM v0, rt0, vt1, vt0, vt2;
SELECT v0.c0, vt1.c1, vt1.c0 FROM v0, vt1 GROUP BY v0.c0, vt1.c1, vt1.c0;
SELECT v0.c0, vt1.c1, vt1.c0 FROM v0, vt1 WHERE (vt1.c1) GROUP BY v0.c0, vt1.c1, vt1.c0 UNION SELECT ALL v0.c0, vt1.c1, vt1.c0 FROM v0, vt1 WHERE ((NOT (vt1.c1))) GROUP BY v0.c0, vt1.c1, vt1.c0 UNION SELECT ALL v0.c0, vt1.c1, vt1.c0 FROM v0, vt1 WHERE (((vt1.c1) ISNULL)) GROUP BY v0.c0, vt1.c1, vt1.c0;
SELECT v0.c0, vt1.c1, vt1.c0 FROM v0, vt1 GROUP BY v0.c0, vt1.c1, vt1.c0;
SELECT rt0.c5, rt0.c4, rt0.c3, v0.c0, vt1.c1, rt0.c1 FROM rt0, vt2, vt1, v0 GROUP BY rt0.c5, rt0.c4, rt0.c3, v0.c0, vt1.c1, rt0.c1;
SELECT ALL rt0.c5, rt0.c4, rt0.c3, v0.c0, vt1.c1, rt0.c1 FROM rt0 NOT INDEXED, vt2, vt1, v0 GROUP BY rt0.c5, rt0.c4, rt0.c3, v0.c0, vt1.c1, rt0.c1 HAVING COUNT(GROUP_CONCAT(v0.c0)) UNION ALL SELECT ALL rt0.c5, rt0.c4, rt0.c3, v0.c0, vt1.c1, rt0.c1 FROM rt0, vt2, vt1, v0 GROUP BY rt0.c5, rt0.c4, rt0.c3, v0.c0, vt1.c1, rt0.c1 HAVING (NOT (COUNT(GROUP_CONCAT(v0.c0)))) UNION ALL SELECT ALL rt0.c5, rt0.c4, rt0.c3, v0.c0, vt1.c1, rt0.c1 FROM rt0, vt2, vt1, v0 GROUP BY rt0.c5, rt0.c4, rt0.c3, v0.c0, vt1.c1, rt0.c1 HAVING ((COUNT(GROUP_CONCAT(v0.c0))) ISNULL);
SELECT rt0.c1, vt1.c1, v0.c0, rt0.c2 FROM vt0, v0, vt2, vt1, rt0;
SELECT rt0.c1, vt1.c1, v0.c0, rt0.c2 FROM vt0, v0, vt2, vt1, rt0 WHERE (CASE WHEN ((vt0.c1)!=(0.2868937565291888)) THEN (((rt0.c2)) BETWEEN ((vt1.c0)) AND ((rt0.c4))) END) UNION ALL SELECT rt0.c1, vt1.c1, v0.c0, rt0.c2 FROM vt0, v0, vt2, vt1, rt0 WHERE ((NOT (CASE WHEN ((vt0.c1)<>(0.2868937565291888)) THEN (((rt0.c2)) BETWEEN ((vt1.c0)) AND ((rt0.c4))) END))) UNION ALL SELECT rt0.c1, vt1.c1, v0.c0, rt0.c2 FROM vt0, v0, vt2, vt1, rt0 WHERE (((CASE WHEN ((vt0.c1)!=(0.2868937565291888)) THEN (((rt0.c2)) BETWEEN ((vt1.c0)) AND ((rt0.c4))) END) ISNULL));
SELECT rt0.c1, vt1.c1, v0.c0, rt0.c2 FROM vt0, v0, vt2, vt1, rt0;
SELECT DISTINCT * FROM v0, rt0;
SELECT DISTINCT * FROM v0 NOT INDEXED, rt0 WHERE ((((((((((((0xfffffffff6845b47))>((rt0.c3))))OR(CASE WHEN rt0.c3 THEN NULL END)))OR(((rt0.c0)IS(rt0.c5)))))AND(((rt0.c0)OR(rt0.c4)))))OR(CAST(v0.c0 AS REAL)))) UNION SELECT DISTINCT * FROM v0, rt0 WHERE ((NOT ((((((((((((0xfffffffff6845b47))>((rt0.c3))))OR(CASE WHEN rt0.c3 THEN NULL END)))OR(((rt0.c0)IS(rt0.c5)))))AND(((rt0.c0)OR(rt0.c4)))))OR(CAST(v0.c0 AS REAL)))))) UNION SELECT DISTINCT * FROM v0, rt0 WHERE ((((((((((((((0xfffffffff6845b47))>((rt0.c3))))OR(CASE WHEN rt0.c3 THEN NULL END)))OR(((rt0.c0)IS(rt0.c5)))))AND(((rt0.c0)OR(rt0.c4)))))OR(CAST(v0.c0 AS REAL)))) ISNULL));
SELECT DISTINCT * FROM v0, rt0;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0 WHERE ((((vt0.c1 COLLATE BINARY, LAST_INSERT_ROWID(), vt0.c0))<=((vt0.c0, ((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1)), '>3.M\a' COLLATE RTRIM)))) GROUP BY vt0.c1 UNION SELECT ALL vt0.c1 FROM vt0 WHERE ((NOT ((((vt0.c1 COLLATE BINARY, LAST_INSERT_ROWID(), vt0.c0))<=((vt0.c0, ((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1)), '>3.M\a' COLLATE RTRIM)))))) GROUP BY vt0.c1 UNION SELECT ALL vt0.c1 FROM vt0 WHERE ((((((vt0.c1 COLLATE BINARY, LAST_INSERT_ROWID(), vt0.c0))<=((vt0.c0, ((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1)), '>3.M\a' COLLATE RTRIM)))) ISNULL)) GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT v0.c0, vt1.c1, vt1.c0 FROM vt1 INNER JOIN v0 ON (((vt1.c1 IN ()))>(((v0.c0) IS FALSE))) GROUP BY v0.c0, vt1.c1, vt1.c0;
SELECT ALL v0.c0, vt1.c1, vt1.c0 FROM vt1 INNER JOIN v0 ON (((vt1.c1 IN ()))>(((v0.c0) IS FALSE))) GROUP BY v0.c0, vt1.c1, vt1.c0 HAVING SUM(TOTAL(SUM(vt1.c0))) UNION ALL SELECT v0.c0, vt1.c1, vt1.c0 FROM vt1 INNER JOIN v0 ON (((vt1.c1 IN ()))>(((v0.c0) IS FALSE))) GROUP BY v0.c0, vt1.c1, vt1.c0 HAVING (NOT (SUM(TOTAL(SUM(vt1.c0))))) UNION ALL SELECT ALL v0.c0, vt1.c1, vt1.c0 FROM vt1 INNER JOIN v0 ON (((vt1.c1 IN ()))>(((v0.c0) IS FALSE))) GROUP BY v0.c0, vt1.c1, vt1.c0 HAVING ((SUM(TOTAL(SUM(vt1.c0)))) ISNULL);
SELECT v0.c0 FROM v0;
SELECT ALL v0.c0 FROM v0 WHERE ((~ (CAST(v0.c0 AS TEXT)))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE ((NOT ((~ (CAST(v0.c0 AS TEXT)))))) UNION ALL SELECT v0.c0 FROM v0 WHERE ((((~ (CAST(v0.c0 AS TEXT)))) ISNULL));
SELECT v0.c0 FROM v0;
SELECT DISTINCT * FROM vt2, vt0, rt0, v0;
SELECT DISTINCT * FROM vt2, vt0, rt0, v0 WHERE ((+ (CASE WHEN vt0.c0 THEN 0.7400639212013665 END))) UNION SELECT DISTINCT * FROM vt2, vt0, rt0, v0 WHERE ((NOT ((+ (CASE WHEN vt0.c0 THEN 0.7400639212013665 END))))) UNION SELECT DISTINCT * FROM vt2, vt0, rt0, v0 WHERE ((((+ (CASE WHEN vt0.c0 THEN 0.7400639212013665 END))) ISNULL));
SELECT DISTINCT * FROM vt2, vt0, rt0, v0;
SELECT vt1.c0, v0.c0, rt0.c5, rt0.c0, rt0.c1, rt0.c4, vt2.c0, rt0.c3, vt0.c0, vt1.c1, vt0.c1 FROM vt2, vt1, v0, vt0 INNER JOIN rt0 ON rt0.c5 GROUP BY vt1.c0, v0.c0, rt0.c5, rt0.c0, rt0.c1, rt0.c4, vt2.c0, rt0.c3, vt0.c0, vt1.c1, vt0.c1;
SELECT vt1.c0, v0.c0, rt0.c5, rt0.c0, rt0.c1, rt0.c4, vt2.c0, rt0.c3, vt0.c0, vt1.c1, vt0.c1 FROM vt2, vt1, v0, vt0 INNER JOIN rt0 ON rt0.c5 WHERE (HEX(DISTINCT rt0.c1) COLLATE BINARY) GROUP BY vt1.c0, v0.c0, rt0.c5, rt0.c0, rt0.c1, rt0.c4, vt2.c0, rt0.c3, vt0.c0, vt1.c1, vt0.c1 UNION SELECT vt1.c0, v0.c0, rt0.c5, rt0.c0, rt0.c1, rt0.c4, vt2.c0, rt0.c3, vt0.c0, vt1.c1, vt0.c1 FROM vt2, vt1, v0, vt0 INNER JOIN rt0 ON rt0.c5 WHERE ((NOT (HEX(DISTINCT rt0.c1) COLLATE BINARY))) GROUP BY vt1.c0, v0.c0, rt0.c5, rt0.c0, rt0.c1, rt0.c4, vt2.c0, rt0.c3, vt0.c0, vt1.c1, vt0.c1 UNION SELECT ALL vt1.c0, v0.c0, rt0.c5, rt0.c0, rt0.c1, rt0.c4, vt2.c0, rt0.c3, vt0.c0, vt1.c1, vt0.c1 FROM vt2, vt1, v0, vt0 INNER JOIN rt0 ON rt0.c5 WHERE (((HEX(DISTINCT rt0.c1) COLLATE BINARY) ISNULL)) GROUP BY vt1.c0, v0.c0, rt0.c5, rt0.c0, rt0.c1, rt0.c4, vt2.c0, rt0.c3, vt0.c0, vt1.c1, vt0.c1;
SELECT vt1.c0, v0.c0, rt0.c5, rt0.c0, rt0.c1, rt0.c4, vt2.c0, rt0.c3, vt0.c0, vt1.c1, vt0.c1 FROM vt2, vt1, v0, vt0 INNER JOIN rt0 ON rt0.c5 GROUP BY vt1.c0, v0.c0, rt0.c5, rt0.c0, rt0.c1, rt0.c4, vt2.c0, rt0.c3, vt0.c0, vt1.c1, vt0.c1;
SELECT rt0.c3, rt0.c5, vt1.c0, rt0.c1, vt0.c0, rt0.c2, vt2.c0, vt0.c1 FROM rt0, v0, vt2 LEFT OUTER JOIN vt0 ON vt1.c1 FULL OUTER JOIN vt1 ON '4,a+zM8Sq' GROUP BY rt0.c3, rt0.c5, vt1.c0, rt0.c1, vt0.c0, rt0.c2, vt2.c0, vt0.c1;
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE (((((((rt0.c1)OR(rt0.c0)))AND(rt0.c2))) BETWEEN ((((rt0.c4))<((rt0.c2)))) AND ((- (rt0.c3))))) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (((((((rt0.c1)OR(rt0.c0)))AND(rt0.c2))) BETWEEN ((((rt0.c4))<((rt0.c2)))) AND ((- (rt0.c3))))))) UNION ALL SELECT ALL * FROM rt0 WHERE (((((((((rt0.c1)OR(rt0.c0)))AND(rt0.c2))) BETWEEN ((((rt0.c4))<((rt0.c2)))) AND ((- (rt0.c3))))) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT vt2.c0, rt0.c2 FROM v0, vt2, rt0;
SELECT DISTINCT vt2.c0, rt0.c2 FROM v0, vt2, rt0 WHERE ((((('1679809035')>=(vt2.c0))) BETWEEN (CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c5 WHEN rt0.c2 THEN rt0.c3 WHEN vt2.c0 THEN rt0.c3 ELSE rt0.c5 END) AND (json_remove(v0.c0, rt0.c5, rt0.c0, rt0.c0)))) UNION SELECT DISTINCT vt2.c0, rt0.c2 FROM v0, vt2, rt0 WHERE ((NOT ((((('1679809035')>=(vt2.c0))) BETWEEN (CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c5 WHEN rt0.c2 THEN rt0.c3 WHEN vt2.c0 THEN rt0.c3 ELSE rt0.c5 END) AND (json_remove(v0.c0, rt0.c5, rt0.c0, rt0.c0)))))) UNION SELECT DISTINCT vt2.c0, rt0.c2 FROM v0, vt2, rt0 WHERE ((((((('1679809035')>=(vt2.c0))) BETWEEN (CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c5 WHEN rt0.c2 THEN rt0.c3 WHEN vt2.c0 THEN rt0.c3 ELSE rt0.c5 END) AND (json_remove(v0.c0, rt0.c5, rt0.c0, rt0.c0)))) ISNULL));
SELECT DISTINCT vt2.c0, rt0.c2 FROM v0, vt2, rt0;
SELECT vt1.c1 FROM rt0, v0, vt1 GROUP BY vt1.c1;
SELECT vt1.c1 FROM rt0, v0, vt1 WHERE (((x'') IS FALSE)) GROUP BY vt1.c1 UNION SELECT ALL vt1.c1 FROM rt0, v0, vt1 WHERE ((NOT (((x'') IS FALSE)))) GROUP BY vt1.c1 UNION SELECT ALL vt1.c1 FROM rt0, v0, vt1 WHERE (((((x'') IS FALSE)) ISNULL)) GROUP BY vt1.c1;
SELECT vt1.c1 FROM rt0, v0, vt1 GROUP BY vt1.c1;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING COUNT(*) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING COUNT(*) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT vt2.c0 FROM vt2;
SELECT ALL vt2.c0 FROM vt2 WHERE (vt2.c0) UNION ALL SELECT vt2.c0 FROM vt2 WHERE ((NOT (vt2.c0))) UNION ALL SELECT vt2.c0 FROM vt2 WHERE (((vt2.c0) ISNULL));
SELECT vt2.c0 FROM vt2;
SELECT DISTINCT * FROM vt1, rt0;
SELECT DISTINCT * FROM vt1, rt0 WHERE (((CASE WHEN rt0.c3 THEN x'' ELSE vt1.c0 END)<<(CASE WHEN rt0.c2 THEN rt0.c4 ELSE vt1.c0 END))) UNION SELECT DISTINCT * FROM vt1, rt0 WHERE ((NOT (((CASE WHEN rt0.c3 THEN x'' ELSE vt1.c0 END)<<(CASE WHEN rt0.c2 THEN rt0.c4 ELSE vt1.c0 END))))) UNION SELECT DISTINCT * FROM vt1, rt0 WHERE (((((CASE WHEN rt0.c3 THEN x'' ELSE vt1.c0 END)<<(CASE WHEN rt0.c2 THEN rt0.c4 ELSE vt1.c0 END))) ISNULL));
SELECT DISTINCT * FROM vt1, rt0;
SELECT vt1.c1 FROM vt0, vt1, vt2, v0 GROUP BY vt1.c1;
SELECT ALL vt1.c1 FROM vt0, vt1, vt2, v0 WHERE ((((((vt0.c0))==((x'3ce7'))))>=(((vt2.c0)<<(v0.c0))))) GROUP BY vt1.c1 UNION SELECT vt1.c1 FROM vt0, vt1, vt2, v0 WHERE ((NOT ((((((vt0.c0))=((x'3ce7'))))>=(((vt2.c0)<<(v0.c0))))))) GROUP BY vt1.c1 UNION SELECT ALL vt1.c1 FROM vt0, vt1, vt2, v0 WHERE ((((((((vt0.c0))=((x'3ce7'))))>=(((vt2.c0)<<(v0.c0))))) ISNULL)) GROUP BY vt1.c1;
SELECT vt1.c1 FROM vt0, vt1, vt2, v0 GROUP BY vt1.c1;
SELECT ALL rt0.c3, rt0.c1, rt0.c4, rt0.c0, vt0.c1, rt0.c2, rt0.c5, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c3, rt0.c1, rt0.c4, rt0.c0, vt0.c1, rt0.c2, rt0.c5, vt0.c0;
SELECT ALL rt0.c3, rt0.c1, rt0.c4, rt0.c0, vt0.c1, rt0.c2, rt0.c5, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c3, rt0.c1, rt0.c4, rt0.c0, vt0.c1, rt0.c2, rt0.c5, vt0.c0 HAVING UNLIKELY(DISTINCT TOTAL(SUM(rt0.c5))) UNION ALL SELECT rt0.c3, rt0.c1, rt0.c4, rt0.c0, vt0.c1, rt0.c2, rt0.c5, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c3, rt0.c1, rt0.c4, rt0.c0, vt0.c1, rt0.c2, rt0.c5, vt0.c0 HAVING (NOT (UNLIKELY(DISTINCT TOTAL(SUM(rt0.c5))))) UNION ALL SELECT rt0.c3, rt0.c1, rt0.c4, rt0.c0, vt0.c1, rt0.c2, rt0.c5, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c3, rt0.c1, rt0.c4, rt0.c0, vt0.c1, rt0.c2, rt0.c5, vt0.c0 HAVING ((UNLIKELY(DISTINCT TOTAL(SUM(rt0.c5)))) ISNULL);
SELECT * FROM rt0, v0 INNER JOIN vt2 ON (NULL IN ());
SELECT ALL * FROM rt0, v0 INNER JOIN vt2 ON (NULL IN ()) WHERE (((((vt2.c0)OR('1048303760')))AND(vt2.c0)) COLLATE NOCASE) UNION ALL SELECT * FROM rt0, v0 INNER JOIN vt2 ON (NULL IN ()) WHERE ((NOT (((((vt2.c0)OR('1048303760')))AND(vt2.c0)) COLLATE NOCASE))) UNION ALL SELECT ALL * FROM rt0, v0 INNER JOIN vt2 ON (NULL IN ()) WHERE (((((((vt2.c0)OR('1048303760')))AND(vt2.c0)) COLLATE NOCASE) ISNULL));
SELECT * FROM rt0, v0 INNER JOIN vt2 ON (NULL IN ());
