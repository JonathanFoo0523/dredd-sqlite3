-- Time: 2024/06/11 13:01:26
-- Database: database59
-- Database version: 3.40.0
-- seed value: 1317903159
PRAGMA cache_size = 50000; -- 0ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA encoding = 'UTF-16'; -- 0ms;
CREATE TABLE IF NOT EXISTS t0 (c0 INTEGER , c1 INTEGER , c2 REAL ); -- 0ms;
UPDATE OR IGNORE t0 SET (c2)=(x'') WHERE (((t0.c0 IN (t0.c0)))&(((t0.c2)AND(t0.c2)))); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-574770663'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '1124181622 754105324 sz=-786031161 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL COLLATE RTRIM)AND(((NULL) NOT BETWEEN (x'b47f') AND ('駬rB')))))AND((NOT ('U&vhzaL~')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('-1430579667') BETWEEN ('U&vhzaL~') AND (CAST('U&vhzaL~' AS NUMERIC))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-1219564603'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (((('U&vhzaL~'))>(('-786031161'))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-1955085920'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-1956337384 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=557591470 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE x''  WHEN '' THEN NULL ELSE -179566131 END) ISNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-1597435265 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-1430579667 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.7000933564192409; -- 0ms;
DELETE FROM sqlite_stat1 WHERE UNICODE((-5.74770663E8 IN ())); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (TRIM(x'', NULL) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=1187297073 unordered noskipscan'); -- 3ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=557591470'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (0.982997602242347)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '1570665772 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '0 -53417611'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '-1795953106 sz=-523343000 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)*(0.29636527957854897))) NOT BETWEEN (CASE WHEN '0.7000933564192409' THEN 'Z^A6!<p{' WHEN x'8619' THEN '45032633' WHEN '1576645131' THEN 'VT靺VSa愕L' WHEN 0.982997602242347 THEN '-1223283425' WHEN x'' THEN 0.7000933564192409 ELSE '253171048' END) AND (json_array(NULL, 0.7000933564192409))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-1865926644 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-1 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '486230400 0 sz=-269772533'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '217551217 0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-582276949 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '754105324 noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('1315477991' IN ()))OR(((0xcf79171) BETWEEN (x'') AND ('蜗ayG\')))))AND((('-1955085920')>=(x'')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((CASE NULL  WHEN x'' THEN 0.12403799022695539 END)OR((((((((('0.982997602242347')AND(0.29636527957854897)))OR(x'0e348a6554a4')))AND('')))OR('VT靺VSa愕L')))))OR((NOT ('''/')))))OR((1.576645131E9 IN ()))))AND(((NULL)>>('-1223283425')))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '0 2'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '-2011764833 sz=431902493 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-53417611 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '754105324 sz=-302332112 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE UPPER(('-1280081820' IN ())); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0x7c9d4454 COLLATE NOCASE) IS FALSE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE (- ((- (1e500)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE NULL COLLATE BINARY  WHEN 0.0 THEN load_extension(-1122979191) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(1.576645131E9 AS REAL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '0 sz=-910661985'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ ((((''))<=((NULL))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0xffffffffefeb990b COLLATE BINARY))<((((x'')<('C-#Gbq^N|'))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN x'' THEN 0.7588937310404551 WHEN x'' THEN -0.0 WHEN 0.18376758688397066 THEN '㚮Xㅥ?\n_hW]' END)-((((((((('68654970')OR(-19610220)))AND(1129487033)))AND(x'')))AND('1224499477')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '217551217 2 sz=-523343000 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-1430579667 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((('볎m[{PNNa')AND(NULL)))AND(NULL)))OR('1')))OR(x'f61f')) COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((+ (NULL)))||((('D')%(NULL)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0Xffffffffe0ce6b68)) BETWEEN ((CASE WHEN NULL THEN '-1236263866' END)) AND (((('Uc')%(-1265940481))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '2 0 sz=638753464 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'' COLLATE NOCASE) BETWEEN (CASE NULL  WHEN '877485331' THEN '-1280081820' ELSE -1271666659 END) AND (((0.9572838859805536)GLOB('8')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CAST(NULL AS REAL) AS BLOB); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((0Xffffffffd552bfcd)||(0.7000933564192409)), ((0.4511016103309007) NOT BETWEEN (x'') AND ('-1223283425')), ((0.798825748221544)-(x'')), ((('0.7000933564192409')) NOT BETWEEN (('Y팀?Y|jd\')) AND ((x''))), CASE WHEN '431902493' THEN 0X63ec1f25 END, 'b', (((('-296646889')AND(NULL)))OR('1676418853'))))=((x'', ((x'3b12') NOT BETWEEN (NULL) AND (x'')), x'', (- (NULL)), ('431902493' IN ('ET')), '''G', (((((((((((('1146289714')OR(x'')))OR('-1475417040')))OR(0x72835cb6)))OR(x'')))AND(0.8657087579763673)))AND(0.23157352618987015))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=500366954 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '1391475972 sz=-1565885652 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'') BETWEEN (0.5897325409533951) AND (NULL)))LIKE(x'a95b')); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=169947575'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '-1296364832 sz=1232552663 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((~ (x'')))<<(((((NULL)AND('477880295')))OR('-170843180')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((NULL) BETWEEN (0.3848330011139288) AND (x'')) THEN 'yF' END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-277102053 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-868374890 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((CAST(x'' AS REAL), CASE x''  WHEN '1232552663' THEN 0Xffffffffb74eebc5 WHEN 'hm歨\&6' THEN 0.6097639324909092 WHEN 0Xffffffffbd09707e THEN '' END, ((0X6541179b) BETWEEN (NULL) AND (NULL))))<=(('', 0.2820880118411605, ((-1858546944)/('yR'))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('㚮Xㅥ?\n_hW]')>('G!)|ㆿn')) COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=1249757063 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '-1296364832 sz=479401932'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=1821973730 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=392280615 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-710376134 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-1740384441 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.2820880118411605))=(('-910661985'))) IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=621188495'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '0 0 -1007668398 sz=-1166291965 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '0 sz=-894407260 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=1230135954 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN CASE x'1e5a'  WHEN '-1123454850' THEN '-1909790974' END THEN CAST(NULL AS TEXT) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '1576645131 -657935786'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE UPPER(DISTINCT 0.11411812715706471); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (('蜗ayG\')%(x''))  WHEN ((0.3751870501914526)>=('')) THEN ((NULL) IS FALSE) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '-711200144 0 1576645131 sz=1102830589 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (DATETIME('', '-309126043', NULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x'6691'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (CASE WHEN -1851065585 THEN x'f73e' ELSE NULL END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('479401932')==(((0x80297c4) NOT BETWEEN ('?\r') AND (0.40475857232922163)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '4 sz=-710376134 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((0.45660910778494457)<=('2010105996')) AS REAL); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-455984978 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=2136989058 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('B'))=((x'')))) IS FALSE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '2'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-903469077 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=253171048 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '0'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '0 sz=773562844'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '2010105996 0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-992443122'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '739730613 0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-903469077 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '2 773562844 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((NULL) NOT BETWEEN (0.9748783850130965) AND ('	r}Ge')) THEN (((NULL))>((x''))) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '-286298563 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=56287365 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=134387652 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-657935786 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '2 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=291559784 unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '2 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-542510829'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '-1479074641 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'a98d'))>=((NULL))) COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'')>(0.3222553037762741)) COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((- ('[]NB4')))OR(0.1296279645917342 COLLATE BINARY)))OR('-328045842')); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ('-1302830136' IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-1590206557 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '2 -868374890 sz=-715997235 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 'WkR!{}?'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.6083187008621668) NOT BETWEEN (0.718552078101251) AND (0X497742d7)))GLOB((((0.8973929823782284)) NOT BETWEEN (('-462064748')) AND ((NULL))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ''); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((CASE 6.21188495E8  WHEN 'l\r4{yL!#' THEN x'' WHEN 'Aw\nL\*Z糰' THEN x'7d59' WHEN '{E8S^&6' THEN 0.7145750013672879 END)OR(((x'') BETWEEN (x'') AND (0.03973778502059355)))))OR((((NULL)) NOT BETWEEN ((-1.95508592E9)) AND ((NULL))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-1525129451 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '1820968780 2 sz=-33239360 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '0 sz=557591470 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (1.129487033E9)) COLLATE NOCASE COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-1996524870'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)OR(((((((((0.7308590149050579)AND('1226162128')))AND(x'')))AND(0.5725321544444373)))AND(0xffffffffb2bb0ae0)))))OR(((NULL) ISNULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-370028480 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-574770663 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '-99654968 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '2 sz=-1886100100 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'')>>(0.7958102833608587)) IN ((~ ('1062983022')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE LOWER(DISTINCT x'4662')  WHEN CAST(x'' AS TEXT) THEN ((((((((NULL)OR(NULL)))OR('752422275')))AND(0.11411812715706471)))OR('97]&2p08d')) WHEN NULL COLLATE BINARY THEN ((NULL)AND(x'')) WHEN (x'' IN ()) THEN (('?q\U?O\r')LIKE(NULL)) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0Xffffffffdf3c9800 COLLATE BINARY))<=((((x'') BETWEEN ('-R\JI*\n') AND (0.3176122600795901))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((NULL) NOT NULL), (((('-1528635574')AND(NULL)))OR(x'68c9')), (('')-(NULL))))>((CASE NULL  WHEN NULL THEN '1479456959' END, (NULL IN ()), (('hm歨\&6')+(0.6390143501292131))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '-128725491 835647261 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-1554507930 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-380562275'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '1057262948 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=2062214861 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((((x'f24b')OR(-233166945)))AND('-868374890')) AS NUMERIC); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-1956337384 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '0 sz=2116352364 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '0 sz=-1276165467'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((CAST(x'7ffb' AS NUMERIC))OR((- (x'')))))OR(CASE WHEN 0.768447377976044 THEN NULL WHEN NULL THEN NULL WHEN 'b' THEN -2127762336 END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-1865926644 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '-1740384441 -657935786 sz=905736883'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-1242722003 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '-179566131 sz=-582276949 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT ((('-1851065585')%(x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '1611136530 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((HEX('638753464'))<<(((x'')+('ୟG')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=1391475972 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '-2133160600 68654970 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN '-1442448666' THEN x'' END COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((+ (0.8927657314894124))) NOTNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=1937845166 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL IN ()))&((NULL IN ()))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((0.44397476499150257) IS TRUE))AND(((NULL)&('TH|>N')))))AND((x'' IN (0.5709832106531936)))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '754105324 2 803733411 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CASE -1236263866  WHEN '-925319986' THEN NULL ELSE NULL END IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ABS((~ (0.7000933564192409))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)>=('-1265940481')))-((NULL IN (NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-766879214 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN '1948064939' THEN -1253348070 END) ISNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '2 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ ((((x'f6dc')) BETWEEN (('0.1296279645917342')) AND ((0xffffffff8816e79f))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) NOT BETWEEN (x'') AND ('AdJ秼'))) NOT BETWEEN (9.84561326E8) AND (CASE 0.29636527957854897  WHEN -1.271666659E9 THEN 0.18025416399810013 ELSE x'' END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (((0.2897026701714964) BETWEEN (0.29636527957854897) AND (0Xffffffffcdf43047)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (x'' COLLATE NOCASE)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=1902658958 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-894407260 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '-309126043 0'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(0.982997602242347 AS BLOB))||(((((((((((((0.4489716282005508)AND(x'')))AND(x'3ff4')))AND('(/')))AND('_)qWVPFI')))AND(0.29922281139175844)))OR(x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=1921211574 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((x'' IN ()) AS BLOB); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '0 571134969'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '0 0'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=1779351214 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('-527763066')<(x'')))<(((((x'')OR('')))AND(x'')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((0.44737184262657503)OR(x'')))OR('-277102053')))AND(COALESCE(DISTINCT 'Z|', '', NULL, x''))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (x'' IN (((((NULL)OR('0.5709832106531936')))OR(x'')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ ('1542664639')) COLLATE NOCASE COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (((x'')>>(NULL)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL) ISNULL) IN (NULL)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (((NULL)/(-1.7084318E8)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '0 sz=-715997235 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE json_object(((x'') NOT BETWEEN (0.8979566109965287) AND (NULL)), (0.41854769964498517 IN (x'', NULL, -1.28008182E9))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=345152415 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((RTRIM(NULL)) NOT BETWEEN (CASE WHEN NULL THEN NULL ELSE NULL END) AND (CASE x''  WHEN '253171048' THEN 0.8287796341484793 END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=2002113588 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((((0Xffffffffc9b8669f, NULL, x''))>((NULL, NULL, 0.732439976749581))) AS BLOB); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('5150495' IN ())) BETWEEN (((0.7308590149050579) ISNULL)) AND ((0.6545076378790267 IN ()))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ ((NULL IN ()))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (0.31980006852117937 IN ()) COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((0.6478283769718765)*('-77339696')) AS INTEGER); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=754105324'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-1348083252 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '134387652 45032633 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NOT (NULL))) BETWEEN (JULIANDAY('449032546', 0.9454023062644065, x'')) AND ((NULL IN (x'', NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '-555091385 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '-1161616603 0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=1542664639 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.03973778502059355)) NOT BETWEEN ((((0.8973929823782284)>>(x'')))) AND ((((((0.4489716282005508)AND('.>')))AND(x'd7aa'))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '0 332496822 sz=461902695 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE JULIANDAY(('b' IN (x'', 0.02155370195572437)), '1647907228' COLLATE NOCASE, (((0Xffffffffd59bf270))!=(('0.8657087579763673')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 3ms;
DELETE FROM sqlite_stat1 WHERE (('0.7588937310404551' IN ()) IN (x'91e8', (('''/')*('')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)GLOB(0.5709832106531936))) NOT NULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=1766924757 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(('' IN ()) AS TEXT); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-1589127750 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=1934872500'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE SQLITE_COMPILEOPTION_USED(CAST(NULL AS BLOB)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '0 2 sz=-454637417 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('-1700216920')) NOT BETWEEN ((CASE -2.77102053E8  WHEN '' THEN '' ELSE NULL END)) AND ((x'd671ffd0' COLLATE RTRIM))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=500366954'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '-1768151074 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'' IN (8.77485331E8))))>=((((NULL)%(0.9201404430633536))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=431902493 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-1121124102'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'')LIKE('T')) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=291559784'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL)) BETWEEN ((0.5971978639101526 COLLATE BINARY)) AND ((CAST('-548288122' AS NUMERIC)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-497818812 unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '-173652364 sz=-170843180 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (NULL)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (CAST('' AS BLOB))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NOT (NULL)), (('1304494317') NOTNULL), (('Vl') NOT BETWEEN (0X2af24b9) AND ('AdJ秼'))))!=((CASE WHEN 0x119e0166 THEN NULL ELSE '0.768447377976044' END, ((NULL) ISNULL), GLOB('웺S{', '2010105996')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=877485331'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '0 2 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=638497775 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'' IN ())) BETWEEN (((x'')=(0.403399878347817))) AND ((((NULL))<=((x''))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '2136989058 0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST('1187297073' AS BLOB))<<(CASE x''  WHEN '-1249774018' THEN x'' END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '5187125 0 sz=-998714182'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=1129487033'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '0 sz=-574770663 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '2 -1473108642 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((0.37137735283738804)AND('-1166291965')))OR(x'')))LIKE(x'195c')); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '1607323393 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((~ (-9.25319986E8)) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=219577092 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-1479074641 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-1296364832 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-2118454403 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(JULIANDAY(NULL, 0.41854769964498517, x'101d') AS BLOB); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('0.45660910778494457')LIKE(-833100469)))AND(((0.6853294723211041) NOT BETWEEN (0.45660910778494457) AND (0.3578321226185808)))))OR(((x'') IS FALSE))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=479401932'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-1986680325 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-871449570 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=984561326'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE json_quote((+ (2.010105996E9))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '2 sz=-820939389 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((((('lL')OR(x'')))AND(0.10790319727426045)) AS NUMERIC); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=284818 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) NOTNULL)) BETWEEN ((((-969519195))!=((NULL)))) AND (((x'')<=('0.2820880118411605')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '-1429710565 sz=-250439188 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=1706863721 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('1')) NOT BETWEEN (('-455984978')) AND ((0.1198919644533818)))) ISNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-2100017753 unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=1076101152 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((LOWER('⏔o!5㹽X'))OR((- (254080677)))))OR(LOWER(DISTINCT ''))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '0 sz=-88518437'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=319893299 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '2 1762672857 sz=-1236263866 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '-711200144 -1295703054 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=1058052893 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=1836233358 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT ((- (NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-1588125094 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '0 -197035388'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=68654970 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=1542664639 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((0.98373211236449)IS(x'')) AS BLOB); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-1752450517 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((NULL)>=(x'')) AS REAL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=754105324 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-1758138979 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE LOWER(((NULL)IS(NULL))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('500366954') BETWEEN (-1645268635) AND ('856216240')) COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1 WHERE '-909685661'; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((x'' IN ()) AS NUMERIC); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-1727386375 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((1.230135954E9)IS NOT('742615013')))OR(((0xffffffffe0da2a15)LIKE('-894407260')))))OR(HEX(0.09218167929238341))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=1151367575 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((0.02155370195572437))==((NULL)))) BETWEEN (((x'd740')>=(']4oC㴄v'))) AND (((('-903469077')) BETWEEN ((NULL)) AND (('-609961227'))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)IS NOT(NULL)))IS NOT(((x'')>=(x'd9d8')))); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((CAST('ka' AS REAL)) ISNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '0 0'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-2014689166 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (NULL)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '1816277654'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('-1236263866')) BETWEEN ((NULL)) AND ((0X41081091))))LIKE(((x'490a')==(0.1459117034301085)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '-1909790974 sz=-170843180 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((0.900420822907685)AND(x'')))OR('s},O8')))<=(((('-179566131'))<=((''))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((('U*') NOT BETWEEN ('') AND ('蜗ayg\')) AS REAL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=226173149 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '-715997235 2 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '0 sz=-1851065585 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '-291484667 -179566131 sz=-778422071 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (~ (1.249757063E9)) THEN ((0.15401747241164432) IS FALSE) ELSE '1246464838' END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.6083187008621668 IN ())) IS FALSE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '1464785899 sz=-1590206557'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-323357174 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((~ (x'b253'))) NOT BETWEEN (CASE WHEN NULL THEN '-1123454850' WHEN -1.795953106E9 THEN x'411c' WHEN 'AdJ秼' THEN 420013146 END) AND ((((0.4325812509390684, '244122648', 0.5927704562619744)) NOT BETWEEN ((NULL, 0.47442485539504275, NULL)) AND (('', x'8a59', -5.42510829E8))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '-1529857504 -1354854874 sz=-592474455 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '0 1817094229 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE x'd55f'  WHEN x'8271' THEN 0.4511016103309007 WHEN '0.7308590149050579' THEN '-1810455890' WHEN '_ Im柯Qc,e' THEN '0.7588937310404551' END) NOT BETWEEN (((((-1.430579667E9)AND(NULL)))AND(x'1fca'))) AND (CAST(NULL AS REAL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '-1313367077 sz=-559073704 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)AND(NULL)))AND(NULL)) COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-1858546944 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (NULL)) COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '2 sz=479401932'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL)<=(((((((((x'7005')OR(x'6f1e')))OR('-1590206557')))OR(x'e9af')))AND(x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '0 sz=577270880'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((TRIM(DISTINCT 0.41854769964498517, NULL)) BETWEEN (LIKELY(DISTINCT '')) AND (((-8.6837489E8)||(x'')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((RTRIM(x'')) IS TRUE); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-574770663 unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((((JULIANDAY(0.18025416399810013, '', x'', 0xffffffffa18decb8, 0.6848436679057752))OR(CAST(x'' AS TEXT))))OR((('-1909790974') BETWEEN (-1485782973) AND (-351355390)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '-1479074641 0 sz=1631529642 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=1124181622'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((x'' IN ()) AS REAL); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((TYPEOF('Z|')) NOT BETWEEN ((((('905722520')AND('1102830589')))AND('W(Ih^V4'))) AND (((('Z^A6!<p{')) BETWEEN ((NULL)) AND ((NULL))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '-2011764833 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-1629481091 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((SQLITE_COMPILEOPTION_USED(x'c3b7'))<((NOT (0.26926913038996103)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '-1740384441 sz=464325671 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '2 sz=134387652'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '-810328990 sz=14318677 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((CAST(0.6798074956862018 AS BLOB)))>(((NULL IN (0X2d3ff6d6))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '0 -328045842 sz=-558134353'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '2 sz=486230400 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN 0.2949052152180339 THEN NULL END) NOT BETWEEN (LAST_INSERT_ROWID()) AND ((('f)')GLOB('2423908832240778506T-1364739886217453808T4440689493549173924T섐')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '2 sz=1877642897 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-1565885652 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.9709612097051264)!=(0.47553675350238167))) BETWEEN ((('0.0')IS(NULL))) AND (CASE WHEN NULL THEN x'' END)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('1294338817' COLLATE NOCASE) IS FALSE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((UNLIKELY(DISTINCT '1224499477')))<>((((0.21236771836494472) NOT BETWEEN ('{% 9p') AND (x''))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-1004945014 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=2010105996'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=1754877861 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-1955090287 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=45032633'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(x'0d5762e4' AS TEXT))=(1391475972 COLLATE NOCASE)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-553528166 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((((x'95f6')AND('U*')))AND(0.3352417700944389))  WHEN ((((((((2.136989058E9)OR(0.6780526652927465)))AND(NULL)))OR('avMr눙]XYu')))OR(x'6a0d')) THEN DATE(0.8831737051014005, x'', 0xf675407, x'fa5afd04', NULL) ELSE ((((-1965684100)AND(x'')))OR(0.14513521601781032)) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('217551217')) BETWEEN (((x'726a' IN ()))) AND ((CASE WHEN 0.7245437647346015 THEN '500366954' WHEN NULL THEN 'CM' WHEN x'3587' THEN '_s忢\' END))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=1111083574'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ ((((('-1378414750')AND('')))AND('뉖6')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE json_valid(((0Xffffffff8b64a918) NOT BETWEEN ('lg') AND ('1245935675'))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=1987846611 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-480389618'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN 'k 솠85᷇~' COLLATE RTRIM THEN ((('621188495'))>=((x''))) WHEN LIKELY(DISTINCT NULL) THEN UPPER(NULL) WHEN CAST(NULL AS BLOB) THEN ((NULL)||(x'')) WHEN (~ (0.40475857232922163)) THEN CASE 'i0/a)'  WHEN '754105324' THEN NULL ELSE x'f9af' END WHEN CASE WHEN 'DOet{R\A' THEN 0.8160680818781847 END THEN CASE ''  WHEN 0.3408908388168046 THEN NULL ELSE 0.03973778502059355 END ELSE (('-992443122') NOT BETWEEN (x'd659ecaa') AND (1.391475972E9)) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST('汯vrQ#' AS REAL)) NOT NULL); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '0'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((- ('')) AS INTEGER); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-925319986 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '2'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '1808292526 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '84009984 sz=-523343000'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '4 1004652654 unordered'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((0.9128926135525247, x'', '-2011764833')) BETWEEN (((((x'', '-1865926644', x''))<(('0Sㆷ7?~E', NULL, x''))), (- (x'')), ((((NULL)OR('yf')))AND(2033107824)))) AND ((((NULL)==(0.08500929295649884)), ((('1187297073')) NOT BETWEEN (('O8')) AND ((x''))), 'DOet{R\A' COLLATE BINARY))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((+ ('R')) IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(x'' AS REAL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('-1399451072')OR('An*T~fM')))OR(x'a5ade4f1'))) ISNULL); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=55371754 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-1951748679 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=1870532962 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '1676418853 0 sz=-286298563 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((~ (NULL)))>=(((((NULL)AND(NULL)))OR(1252757358)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.3375999822077017) BETWEEN (0.8757157322082643) AND (x'')))LIKE((('-711200144')||(0.3223788349920539)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-1851558103'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-657935786 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-269772533 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (x'' IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((json_insert(x'', 0.8066308965081846, 0.5756874001858537, '{섈', 0.631652382434112)) ISNULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((x'') NOT BETWEEN (x'') AND (0x7b7c896))  WHEN ('-1265940481' IN ()) THEN CASE WHEN NULL THEN '' ELSE NULL END END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (+ (0.7958102833608587)) THEN ('}.nyJ' IN ()) ELSE 0.36797740040906857 END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (CAST('0.6083187008621668' AS REAL))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CAST('-1187187374' AS TEXT) AS INTEGER); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '0 sz=997995339 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('FALSE')>=(0X651ddbe9)))IS(((x'')<=(x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=1006376559 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((x'faa7')|(0X451302c7))  WHEN CAST(x'' AS TEXT) THEN (('') IS FALSE) ELSE (('IV윴q聤zq') NOTNULL) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NULL IN ()) COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '-1332022831 sz=-1166331879 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-1'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('' IN ())) NOT BETWEEN ((('0.44397476499150257')OR(''))) AND (((0.03838428283231521)AND(-1624016081)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('') BETWEEN (((((-322787625)OR('1570665772')))OR(0.3608068893214478))) AND ('')); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.6275799197739924)) BETWEEN (((((('178000050')OR(NULL)))OR('45032633')))) AND ((CASE WHEN 0.7302984026337527 THEN '-916127502' WHEN '-53417611' THEN '' WHEN NULL THEN '1Uqf甬鲹>퍪' END))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=1072032688 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '1187297073 sz=557591470 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('1935601493') NOT BETWEEN (-328045842) AND (0.3349466531443983)) IN ((('oZ[/0G[') NOT BETWEEN (x'') AND (0.7062671097094478)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(0Xffffffffa3f60dbe AS NUMERIC))IS(CAST('' AS NUMERIC))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CASE NULL  WHEN x'aeee' THEN 0.13681042580427416 END IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=1576645131 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=1401021976 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('597146950')GLOB(1.315477991E9)) COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-1300363471'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '0 4 sz=-231899260 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '-1869891733 0 sz=1997768104 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'' IN ()) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('')=(x'')))IS(x'4dcb')); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '0'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '-1513855717 sz=826964731 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '-1265940481 sz=-200751811'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=859075699 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('' COLLATE NOCASE))>=(((((NULL)) BETWEEN ((x'')) AND ((NULL)))))); -- 1ms;
DELETE FROM sqlite_stat1 WHERE CAST(((x'')>=('0ZZ')) AS INTEGER); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-450047881'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '4 1542664639'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '0 sz=-894407260 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('', '-1298602772', x'', NULL, NULL)) NOT BETWEEN (((('d')>(NULL)), ((((((((-148423553)AND('b%n3GA5')))AND('-811098490')))OR(0.36467040690391506)))OR(NULL)), 0Xffffffff9c244664, ((NULL) IS FALSE), ((0.27174053324195124) NOT NULL))) AND ((((('oひAMGL5dh', x'', '-848170340'))>(('-906738244', '3G', '-872277239'))), (~ (-1.956337384E9)), CASE 0.26926913038996103  WHEN NULL THEN 161041521 WHEN x'8e84' THEN NULL WHEN 1210870921 THEN -1615589936 END, NULL, ((NULL)*(x''))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '0 sz=-1597435265'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((((x'eb1176e7')-('1112577883')))<=((~ (NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((('')>>('vyqS')) AS TEXT); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL IN (0.35673539763227025)))OR((- ('')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-1865926644 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST('-577379087' AS BLOB))IS(((x'2ced') NOT BETWEEN ('ET') AND (0.17138333035638242)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((NULL)AND(-1.79566131E8)))AND(NULL))) BETWEEN (((('0.5756874001858537')) BETWEEN (('1570665772')) AND ((0.530901106547389)))) AND (HEX(x'b035'))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '-910661985'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=722559018 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL)) NOT BETWEEN (((((NULL))<(('-1667014712'))))) AND ((NULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '-1565885652'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '-613507535 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE SUBSTR(NULL, ((5.5759147E8)>(NULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ''); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-336738896 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ ('-33575500')) COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.755818699691991; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '-882952786 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.385751094445828)!=((('ୟG')>>('392280615')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('-338907981')LIKE('0.5927704562619744'))) ISNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '0 sz=679979663 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE SQLITE_SOURCE_ID(); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '1129487033 sz=-710376134 unordered'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (CASE WHEN 4.5032633E7 THEN x'f32f' WHEN x'' THEN NULL WHEN x'' THEN x'' END IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((+ (0.15401747241164432)) IN (NULL, ((x'')AND('1129487033')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=512412464'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('-286298563') BETWEEN ('1129487033') AND ('-296646889')) COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '-1301973690 sz=-85626324 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT ((NOT (0.5443688506417349)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-1728648633 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-1593259421 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CAST(x'' AS INTEGER) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-1150132359'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '134387652' COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((NULL)) NOT BETWEEN ((x'')) AND ((''))))OR(CASE '-582957975'  WHEN NULL THEN 'h災BVKZE9D' WHEN -1.265940481E9 THEN x'0ffe' WHEN '-1645554726' THEN NULL ELSE -1549354915 END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-1671273363'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE SUBSTR(((0.3265493660515537) NOT BETWEEN (x'7757') AND ('uF')), CAST(x'' AS TEXT)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ ((NULL IN ('2001332783', x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=486230400'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL) NOT NULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (('JcuHGh')>('0pAcUNJVt'))  WHEN ('' IN ()) THEN CAST('-910661985' AS BLOB) WHEN ((x'68a5') BETWEEN (NULL) AND (0.4878287043179349)) THEN (x'' IN (NULL)) WHEN (('-542510829')+('1245069539')) THEN ((((NULL)OR('1183732046')))AND('-627227144')) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '0 sz=-1280081820 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '6 sz=-1729970872 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.665076427248669)) NOT BETWEEN ((((0.7806644436377247) NOT NULL))) AND ((((NULL) IS FALSE)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '0 sz=-1931511339 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=28254474 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '134387652 sz=486230400 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-868374890'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '2 sz=1537671450'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(x'532c' AS BLOB) COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '0 0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE load_extension('>''', 'M솺hsm&') COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '4 2 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-466695516 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.41854769964498517) IS TRUE))IS((((('')AND(NULL)))OR('-80207081')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=555599017 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN json_type(x'') THEN COALESCE(NULL, '-786031161') WHEN (+ ('0.3222553037762741')) THEN (((NULL))!=((0.6234329154725878))) WHEN ('214710340' IN (NULL)) THEN (0xf171568 IN (-1956337384)) ELSE ((('0.5927704562619744')) NOT BETWEEN ((0.4337366174748897)) AND ((x''))) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-711200144 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=1233598030 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=739878962'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=1816870706 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-2042375485 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-1323529875 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE -1936104767; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '0 sz=-19610220 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE TOTAL_CHANGES(); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (0.6129982299328292 IN ())  WHEN CASE WHEN x'' THEN 0.14664624211183297 WHEN x'3950' THEN NULL WHEN NULL THEN x'' END THEN (((-2080216638, x'', '1546789739', NULL, '')) BETWEEN (('-1565885652', NULL, 0.0023796835237789304, '-1479074641', 'nn?Cfj')) AND ((0.32888182221024864, 0.8870129071557215, 0.3375999822077017, '0.44737184262657503', 0.4383931947266172))) ELSE ((((x'')AND('965545597')))AND(984561326)) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '0 sz=-1638628784 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-1537763642 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN x'' THEN x'' ELSE 0.727986173302011 END)<=(CASE WHEN NULL THEN '1814516179' ELSE '2136989058' END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '0 0 sz=740691886 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL)) NOT BETWEEN (((('-286298563')GLOB('')))) AND ((((NULL) BETWEEN (NULL) AND ('-264404690'))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '-1248010556 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)OR(CAST(0.5886261293396866 AS INTEGER))))AND(CAST(0.1967373366474826 AS REAL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((CAST('-910661985' AS REAL))OR((+ ('(')))))OR((x'' IN (x'', x'83a4')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-1489970953'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '0 sz=-1858546944 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '1337251222 sz=773562844'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((CASE WHEN 0x4f3e4488 THEN x'98db' WHEN NULL THEN 0.8640809215226429 WHEN '' THEN 0.9816507802950285 END)AND(((x'')!=(1.7976931348623157E308)))))OR(('+p{.Bk0' IN ()))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((x'')&(1904019096)) AS TEXT); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=617907009 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0X157e9c05 COLLATE BINARY) NOT BETWEEN (((('0.8973929823782284', '\n', 'qnwV4')) BETWEEN (('E', 'V	', x'')) AND ((NULL, 0.1953797542492851, '-9223372036854775808')))) AND ((NOT (0.8448573911949459)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '1251187121 sz=-1123454850'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-1865926644 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE CASE WHEN NULL THEN NULL END  WHEN '615286703' COLLATE RTRIM THEN (('JcuHGh')LIKE(0.9436692486853285)) WHEN (('99039784')|(0.3665730760627799)) THEN ((((0.9454023062644065)OR(x'df12')))AND(x'')) WHEN CAST(x'' AS BLOB) THEN UNLIKELY(x'4096') WHEN NULL COLLATE RTRIM THEN 0.1296279645917342 COLLATE NOCASE WHEN ((((0.3608068893214478)OR(NULL)))OR(NULL)) THEN LAST_INSERT_ROWID() ELSE 557591470 END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((~ (NULL))) NOT BETWEEN ((('w0') NOT NULL)) AND (CAST('+V\n1 ]' AS BLOB))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE SQLITE_COMPILEOPTION_USED(((x'') BETWEEN (0.31802552882259194) AND (0.9542920046359018))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '1676418853 sz=-250439188 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ''); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((CAST(NULL AS TEXT))OR((5.00366954E8 IN (x'')))))OR(NULL COLLATE BINARY)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((+ (NULL)))-((NULL IN ()))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '4 -1649667439 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-19610220'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-1278939477 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '0 sz=739730613 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (CASE NULL  WHEN NULL THEN 0.07999135988597894 WHEN NULL THEN NULL WHEN x'' THEN NULL WHEN x'' THEN 0.6968658599659903 WHEN NULL THEN x'' ELSE '-788492946' END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-803383287 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (1393393986 COLLATE NOCASE IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (CAST('0.3176122600795901' AS TEXT))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=787049805 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-2011764833'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((0.06589870032124823)) BETWEEN ((2.17551217E8)) AND ((x'bf1a62bf')))) NOT BETWEEN ((('69421972') NOT BETWEEN (0.7180360888498356) AND (-416763114))) AND (((1798112049) ISNULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '0 sz=-296646889 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '2 2 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'') NOT BETWEEN (0xffffffff8e2ae702) AND (0.7909207530024532)) COLLATE RTRIM COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-807352287'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '1813326909 0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE LAST_INSERT_ROWID(); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-1403753793'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '0 sz=984556859 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-1435719522 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=1957995333 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '0 sz=841687948 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) BETWEEN (NULL) AND (0.718552078101251))) NOT NULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '0 sz=1102830589'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CAST(x'' AS TEXT) AS TEXT); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL) BETWEEN (x'') AND (0.9128926135525247)) COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-133145482 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-710376134 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '0 2 sz=-1049498992 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=452954510 unordered'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '2090681428 sz=24650156 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=1570665772 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (load_extension('1364188066'))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=1298165886'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-1613682966'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '1740089064 sz=-505433852 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-1064786533'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST('479401932' AS REAL))|(((0.10028077061843321) NOT BETWEEN (-1.597435265E9) AND ('s},o8')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=991472618 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.8549170870798662) ISNULL) COLLATE BINARY COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0xffffffff9ca1e505 IN ()))*(((NULL)&(NULL)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'6838') NOTNULL))>((((((((('1509504933')OR(-1430579667)))AND(-179566131)))AND(NULL)))OR('{(KiQ')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '-894407260 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '0 sz=-2019846770 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-903469077 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-67006600 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '-2124801298 sz=-1983261916 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=169947575 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=45032633 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '2 sz=-296646889'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '1017204721 sz=-657257566 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '0 2 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NOT (0.14153363565035992))))<>((((x'') NOT NULL)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-582276949 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((4.31902493E8 IN (0X33306461)))<=(SQLITE_SOURCE_ID())); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-1296364832 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-1007668398 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.46088876547659285)) BETWEEN ((CAST(NULL AS INTEGER))) AND ((((0.6402083380632044) NOT BETWEEN (x'') AND (169947575))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ''); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((0.23073548402930333) BETWEEN ('봯\2)X') AND (NULL)) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
ANALYZE; -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR REPLACE t0 SET (c2, c1)=(0X6e87c882, NULL) WHERE (NOT ((t0.c1 IN ()))); -- 0ms;
CREATE VIEW v0(c0) AS SELECT DISTINCT ((((((t0.c1)IS NOT('-891795132')))AND(t0.c0 COLLATE BINARY)))OR(t0.c2 COLLATE BINARY)) FROM t0 LIMIT -1529929596 OFFSET 1676585771; -- 0ms;
UPDATE OR IGNORE t0 SET (c1)=(0.3223788349920539) WHERE CAST(((t0.c1)-(t0.c0)) AS NUMERIC); -- 0ms;
REINDEX  t0; -- 0ms;
PRAGMA wal_checkpoint(RESTART); -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
PRAGMA short_column_names = false; -- 0ms;
END; -- 0ms;
PRAGMA auto_vacuum = INCREMENTAL; -- 0ms;
PRAGMA application_id = 253685760185431306; -- 0ms;
UPDATE OR IGNORE t0 SET c1=0.1968305684199123; -- 0ms;
ANALYZE; -- 0ms;
CREATE UNIQUE INDEX i75 ON t0(CASE WHEN ((((((((c0)OR(c2)))AND(c0)))AND(c0)))AND(c1)) THEN (('(v') BETWEEN (c2) AND (c2)) ELSE CAST(x'1f45' AS INTEGER) END COLLATE BINARY ASC,(((c1))<>((((c1) NOT BETWEEN (c0) AND (c1))))) COLLATE RTRIM DESC,(((c1)) NOT BETWEEN ((CASE c0  WHEN c1 THEN c0 END)) AND ((c1))) ASC) WHERE CAST(((c1) BETWEEN (c0) AND (x'')) AS NUMERIC); -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
PRAGMA stats; -- 0ms;
ANALYZE; -- 0ms;
END TRANSACTION; -- 0ms;
CREATE TRIGGER IF NOT EXISTS tr0 INSTEAD OF DELETE ON v0 BEGIN SELECT RAISE(IGNORE);DELETE FROM t0;END; -- 0ms;
REINDEX  t0; -- 0ms;
DROP INDEX "i75"; -- 0ms;
UPDATE OR IGNORE t0 SET (c0)=(0Xffffffff883afd95); -- 0ms;
PRAGMA temp.optimize; -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES (0.4511016103309007); -- 0ms;
UPDATE OR IGNORE t0 SET (c2, c0, c1)=('-968949235', x'', 'umfK(L5M컋'); -- 0ms;
CREATE INDEX IF NOT EXISTS i77 ON t0(IFNULL(DISTINCT (((c1)) NOT BETWEEN ((c1)) AND ((NULL))), INSTR(c1, c2)),CASE WHEN (NOT (c1)) THEN (((c0, c0, c2)) BETWEEN ((c1, 0.004595755634976939, 0.9977006172134214)) AND ((c2, c1, c2))) WHEN CAST(c2 AS NUMERIC) THEN CAST(c1 AS INTEGER) WHEN (c1 IN (c1, c1)) THEN ((c2) NOT NULL) ELSE CAST('' AS INTEGER) END ASC,((LOWER(DISTINCT c2))/(((c2) BETWEEN (c0) AND (c1)))) COLLATE RTRIM ASC); -- 0ms;
PRAGMA defer_foreign_keys = false; -- 0ms;
UPDATE t0 SET c0=NULL; -- 0ms;
INSERT OR IGNORE INTO t0(c1, c2) VALUES ('795070576', 'L?'), (x'', 0.8028874463381106), (0.39537703151991155, 0.8876953499754194); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES ('-309126043'), (x''), (x''); -- 0ms;
REINDEX  t0; -- 1ms;
INSERT OR IGNORE INTO t0(c2, c1, c0) VALUES ('', 1.315477991E9, x'3126'), ('0I!]6j', 0.8432491239807419, 0.44397476499150257), (0.6390143501292131, '', x''); -- 1ms;
ANALYZE t0; -- 1ms;
UPDATE OR IGNORE t0 SET c2='-894407260' WHERE ((((t0.c1)IS(t0.c1)))|(CAST(t0.c0 AS BLOB))); -- 0ms;
PRAGMA threads = 7643404530602129408; -- 0ms;
UPDATE OR ABORT t0 SET (c0)=(0.45006982574362686) WHERE ((NOT (t0.c2)) IN (0.8742748334436627)); -- 0ms;
UPDATE OR IGNORE t0 SET c0=x'' WHERE ((((t0.c2) NOT BETWEEN (t0.c1) AND (t0.c2))) NOT BETWEEN (((t0.c0)<>(t0.c0))) AND (((((((((t0.c2)OR(t0.c0)))AND(t0.c2)))AND(t0.c1)))OR(t0.c0)))); -- 1ms;
UPDATE OR IGNORE t0 SET c1=0.672319984304953; -- 1ms;
UPDATE OR ABORT t0 SET c0=0.6079149827722755 WHERE 0xffffffffa4f0f5eb; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
PRAGMA cell_size_check = false; -- 0ms;
UPDATE t0 SET c1=0X2a3484ad, c1=x'', c0=1827123574 WHERE (((((t0.c2)AND(t0.c0)))OR(t0.c2)) IN ()); -- 0ms;
PRAGMA wal_checkpoint(PASSIVE); -- 0ms;
PRAGMA stats; -- 0ms;
UPDATE t0 SET (c1)=(x'23f0') WHERE ((CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c1 WHEN t0.c1 THEN t0.c1 END)>(((NULL)<(0.5927704562619744)))); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
UPDATE OR IGNORE t0 SET (c1)=(x''); -- 1ms;
UPDATE OR IGNORE t0 SET (c1)=(x''); -- 0ms;
PRAGMA recursive_triggers; -- 0ms;
DELETE FROM t0 WHERE HEX(CASE t0.c1  WHEN t0.c2 THEN -752610895 END); -- 0ms;
REINDEX  t0; -- 0ms;
ANALYZE v0; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
UPDATE t0 SET c2='486230400', c2=x'ccfd', c2='-1280081820'; -- 0ms;
UPDATE t0 SET (c0)=(0.056277498501661416); -- 0ms;
END TRANSACTION; -- 0ms;
ANALYZE i77; -- 0ms;
END; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO t0(c1) VALUES (NULL); -- 1ms;
UPDATE t0 SET (c0)=(x'') WHERE ((((((t0.c2)OR(t0.c1)))OR(0.2606534104128696)))OR(((t0.c1)|(t0.c0)))); -- 0ms;
UPDATE t0 SET (c0)=('-429269198') WHERE CAST(-7.7339696E7 AS INTEGER); -- 0ms;
PRAGMA reverse_unordered_selects = false; -- 0ms;
REINDEX; -- 0ms;
UPDATE t0 SET c0=1391475972; -- 0ms;
INSERT OR ROLLBACK INTO t0(c2, c1, c0) VALUES (519719134, NULL, -1.302830136E9); -- 0ms;
INSERT OR IGNORE INTO t0(c2, c0) VALUES (x'', 174788730); -- 1ms;
REINDEX  t0; -- 0ms;
INSERT OR IGNORE INTO t0 VALUES ('0.9709612097051264', NULL, NULL), ('x1', '1476350488', x''), (0.8979566109965287, '', '1676418853'); -- 0ms;
PRAGMA main.mmap_size; -- 0ms;
REINDEX BINARY; -- 0ms;
INSERT OR IGNORE INTO t0(c1) VALUES (x''); -- 1ms;
INSERT OR IGNORE INTO t0(c2) VALUES (NULL), (0.48035547484235586), (0x7f5fdd82); -- 0ms;
ANALYZE; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
PRAGMA temp.soft_heap_limit = 0; -- 0ms;
UPDATE OR IGNORE t0 SET c0=-903469077 WHERE (((0.8979566109965287 IN ())) BETWEEN (((((t0.c0)OR(t0.c0)))AND(t0.c2))) AND (((((t0.c2)AND(t0.c2)))OR(t0.c0)))); -- 1ms;
COMMIT; -- 0ms;
ROLLBACK TRANSACTION; -- 1ms;
SELECT ALL * FROM t0;
SELECT * FROM t0 WHERE (CAST(((t0.c1) NOT BETWEEN (t0.c2) AND (t0.c0)) AS REAL)) UNION ALL SELECT ALL * FROM t0 WHERE ((NOT (CAST(((t0.c1) NOT BETWEEN (t0.c2) AND (t0.c0)) AS REAL)))) UNION ALL SELECT ALL * FROM t0 WHERE (((CAST(((t0.c1) NOT BETWEEN (t0.c2) AND (t0.c0)) AS REAL)) ISNULL));
SELECT ALL * FROM t0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE ((CAST(v0.c0 AS BLOB) IN ())) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT ((CAST(v0.c0 AS BLOB) IN ())))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((((CAST(v0.c0 AS BLOB) IN ())) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT t0.c0, t0.c1 FROM t0 GROUP BY t0.c0, t0.c1;
SELECT ALL t0.c0, t0.c1 FROM t0 WHERE (((CAST(0.22659417517030234 AS REAL)) BETWEEN ((t0.c2 IN ())) AND ((((t0.c0)) BETWEEN ((t0.c2)) AND ((t0.c2)))))) GROUP BY t0.c0, t0.c1 UNION SELECT ALL t0.c0, t0.c1 FROM t0 WHERE ((NOT (((CAST(0.22659417517030234 AS REAL)) BETWEEN ((t0.c2 IN ())) AND ((((t0.c0)) BETWEEN ((t0.c2)) AND ((t0.c2)))))))) GROUP BY t0.c0, t0.c1 UNION SELECT t0.c0, t0.c1 FROM t0 WHERE (((((CAST(0.22659417517030234 AS REAL)) BETWEEN ((t0.c2 IN ())) AND ((((t0.c0)) BETWEEN ((t0.c2)) AND ((t0.c2)))))) ISNULL)) GROUP BY t0.c0, t0.c1;
SELECT t0.c0, t0.c1 FROM t0 GROUP BY t0.c0, t0.c1;
SELECT ALL t0.c2, t0.c1, v0.c0, t0.c0 FROM v0, t0 GROUP BY t0.c2, t0.c1, v0.c0, t0.c0;
SELECT ALL t0.c2, t0.c1, v0.c0, t0.c0 FROM v0, t0 GROUP BY t0.c2, t0.c1, v0.c0, t0.c0 HAVING (+ (((t0.c1) NOT BETWEEN (t0.c1) AND (GROUP_CONCAT(t0.c2))))) UNION ALL SELECT t0.c2, t0.c1, v0.c0, t0.c0 FROM v0, t0 GROUP BY t0.c2, t0.c1, v0.c0, t0.c0 HAVING (NOT ((+ (((t0.c1) NOT BETWEEN (t0.c1) AND (GROUP_CONCAT(t0.c2))))))) UNION ALL SELECT t0.c2, t0.c1, v0.c0, t0.c0 FROM v0, t0 GROUP BY t0.c2, t0.c1, v0.c0, t0.c0 HAVING (((+ (((t0.c1) NOT BETWEEN (t0.c1) AND (GROUP_CONCAT(t0.c2)))))) ISNULL);
SELECT ALL t0.c2, t0.c1, v0.c0, t0.c0 FROM v0, t0 GROUP BY t0.c2, t0.c1, v0.c0, t0.c0;
SELECT ALL t0.c2, t0.c1, v0.c0, t0.c0 FROM v0, t0 GROUP BY t0.c2, t0.c1, v0.c0, t0.c0 HAVING (+ (((t0.c1) NOT BETWEEN (t0.c1) AND (GROUP_CONCAT(t0.c2))))) UNION ALL SELECT t0.c2, t0.c1, v0.c0, t0.c0 FROM v0, t0 GROUP BY t0.c2, t0.c1, v0.c0, t0.c0 HAVING (NOT ((+ (((t0.c1) NOT BETWEEN (t0.c1) AND (GROUP_CONCAT(t0.c2))))))) UNION ALL SELECT t0.c2, t0.c1, v0.c0, t0.c0 FROM v0, t0 GROUP BY t0.c2, t0.c1, v0.c0, t0.c0 HAVING (((+ (((t0.c1) NOT BETWEEN (t0.c1) AND (GROUP_CONCAT(t0.c2)))))) ISNULL);
SELECT ALL t0.c2, t0.c1, v0.c0, t0.c0 FROM v0, t0 GROUP BY t0.c2, t0.c1, v0.c0, t0.c0;
SELECT ALL SUM(0.35326956617385763) FROM t0, v0 ORDER BY (~ (CASE WHEN t0.c2 THEN t0.c1 ELSE t0.c1 END)) DESC  NULLS FIRST;
SELECT t0.c0, t0.c2, t0.c1 FROM t0;
SELECT t0.c0, t0.c2, t0.c1 FROM t0 WHERE (NULL) UNION ALL SELECT t0.c0, t0.c2, t0.c1 FROM t0 WHERE ((NOT (NULL))) UNION ALL SELECT ALL t0.c0, t0.c2, t0.c1 FROM t0 WHERE (((NULL) ISNULL));
SELECT t0.c0, t0.c2, t0.c1 FROM t0;
SELECT DISTINCT * FROM t0 INNER JOIN v0 ON ((t0.c1) NOT BETWEEN ('1096623863') AND (t0.c0)) COLLATE BINARY;
SELECT DISTINCT * FROM t0 INNER JOIN v0 ON ((t0.c1) NOT BETWEEN ('1096623863') AND (t0.c0)) COLLATE BINARY WHERE ((((((+ (v0.c0)))OR(((t0.c2) NOT BETWEEN (v0.c0) AND (0.743378621375282)))))AND(CAST(t0.c0 AS BLOB)))) UNION SELECT DISTINCT * FROM t0 INNER JOIN v0 ON ((t0.c1) NOT BETWEEN ('1096623863') AND (t0.c0)) COLLATE BINARY WHERE ((NOT ((((((+ (v0.c0)))OR(((t0.c2) NOT BETWEEN (v0.c0) AND (0.743378621375282)))))AND(CAST(t0.c0 AS BLOB)))))) UNION SELECT DISTINCT * FROM t0 INNER JOIN v0 ON ((t0.c1) NOT BETWEEN ('1096623863') AND (t0.c0)) COLLATE BINARY WHERE ((((((((+ (v0.c0)))OR(((t0.c2) NOT BETWEEN (v0.c0) AND (0.743378621375282)))))AND(CAST(t0.c0 AS BLOB)))) ISNULL));
SELECT DISTINCT * FROM t0 INNER JOIN v0 ON ((t0.c1) NOT BETWEEN ('1096623863') AND (t0.c0)) COLLATE BINARY;
SELECT ALL t0.c2, t0.c1, v0.c0, t0.c0 FROM v0, t0 GROUP BY t0.c2, t0.c1, v0.c0, t0.c0;
SELECT ALL t0.c2, t0.c1, v0.c0, t0.c0 FROM v0, t0 WHERE (0Xffffffffaabb162d) GROUP BY t0.c2, t0.c1, v0.c0, t0.c0 UNION SELECT t0.c2, t0.c1, v0.c0, t0.c0 FROM v0, t0 WHERE ((NOT (0Xffffffffaabb162d))) GROUP BY t0.c2, t0.c1, v0.c0, t0.c0 UNION SELECT ALL t0.c2, t0.c1, v0.c0, t0.c0 FROM v0, t0 WHERE (((0Xffffffffaabb162d) ISNULL)) GROUP BY t0.c2, t0.c1, v0.c0, t0.c0;
SELECT ALL t0.c2, t0.c1, v0.c0, t0.c0 FROM v0, t0 GROUP BY t0.c2, t0.c1, v0.c0, t0.c0;
SELECT ALL t0.c2 FROM v0, t0 GROUP BY t0.c2;
SELECT t0.c2 FROM v0, t0 GROUP BY t0.c2 HAVING (MAX(GROUP_CONCAT(t0.c2)) IN (LIKE(COUNT(*), NULL, '嚆'))) UNION ALL SELECT t0.c2 FROM v0, t0 GROUP BY t0.c2 HAVING (NOT ((MAX(GROUP_CONCAT(t0.c2)) IN (LIKE(COUNT(*), NULL, '嚆'))))) UNION ALL SELECT t0.c2 FROM v0, t0 GROUP BY t0.c2 HAVING (((MAX(GROUP_CONCAT(t0.c2)) IN (LIKE(COUNT(*), NULL, '嚆')))) ISNULL);
SELECT ALL * FROM t0, v0;
SELECT ALL * FROM t0, v0 WHERE (((v0.c0) NOT BETWEEN (t0.c2) AND (x'')) COLLATE RTRIM) UNION ALL SELECT ALL * FROM t0, v0 WHERE ((NOT (((v0.c0) NOT BETWEEN (t0.c2) AND (x'')) COLLATE RTRIM))) UNION ALL SELECT ALL * FROM t0, v0 WHERE (((((v0.c0) NOT BETWEEN (t0.c2) AND (x'')) COLLATE RTRIM) ISNULL));
SELECT ALL * FROM t0, v0;
SELECT DISTINCT v0.c0, t0.c2 FROM v0, t0;
SELECT DISTINCT v0.c0, t0.c2 FROM v0, t0 WHERE (((v0.c0)+(((((t0.c1)AND(v0.c0)))AND(t0.c0))))) UNION SELECT DISTINCT v0.c0, t0.c2 FROM v0, t0 WHERE ((NOT (((v0.c0)+(((((t0.c1)AND(v0.c0)))AND(t0.c0))))))) UNION SELECT DISTINCT v0.c0, t0.c2 FROM v0, t0 WHERE (((((v0.c0)+(((((t0.c1)AND(v0.c0)))AND(t0.c0))))) ISNULL));
SELECT DISTINCT v0.c0, t0.c2 FROM v0, t0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE (((((x'')GLOB(t0.c1))) NOTNULL)) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT (((((x'')GLOB(t0.c1))) NOTNULL)))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE (((((((x'')GLOB(t0.c1))) NOTNULL)) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL v0.c0, t0.c2 FROM t0, v0 GROUP BY v0.c0, t0.c2;
SELECT ALL v0.c0, t0.c2 FROM t0, v0 GROUP BY v0.c0, t0.c2 HAVING MAX((t0.c2 IN (SUM(AVG(SUM(v0.c0)))))) UNION ALL SELECT v0.c0, t0.c2 FROM t0, v0 GROUP BY v0.c0, t0.c2 HAVING (NOT (MAX((t0.c2 IN (SUM(AVG(SUM(v0.c0)))))))) UNION ALL SELECT ALL v0.c0, t0.c2 FROM t0, v0 GROUP BY v0.c0, t0.c2 HAVING ((MAX((t0.c2 IN (SUM(AVG(SUM(v0.c0))))))) ISNULL);
SELECT * FROM v0 INNER JOIN t0 ON CASE TRIM(DISTINCT v0.c0)  WHEN HEX(v0.c0) THEN CAST(v0.c0 AS TEXT) ELSE ((t0.c2)LIKE(t0.c0)) END;
SELECT * FROM v0 INNER JOIN t0 ON CASE TRIM(DISTINCT v0.c0)  WHEN HEX(v0.c0) THEN CAST(v0.c0 AS TEXT) ELSE ((t0.c2)LIKE(t0.c0)) END WHERE (((((v0.c0) BETWEEN (t0.c0) AND (v0.c0)))|(CAST(t0.c1 AS NUMERIC)))) UNION ALL SELECT ALL * FROM v0 INNER JOIN t0 ON CASE TRIM(DISTINCT v0.c0)  WHEN HEX(v0.c0) THEN CAST(v0.c0 AS TEXT) ELSE ((t0.c2)LIKE(t0.c0)) END WHERE ((NOT (((((v0.c0) BETWEEN (t0.c0) AND (v0.c0)))|(CAST(t0.c1 AS NUMERIC)))))) UNION ALL SELECT * FROM v0 INNER JOIN t0 ON CASE TRIM(DISTINCT v0.c0)  WHEN HEX(v0.c0) THEN CAST(v0.c0 AS TEXT) ELSE ((t0.c2)LIKE(t0.c0)) END WHERE (((((((v0.c0) BETWEEN (t0.c0) AND (v0.c0)))|(CAST(t0.c1 AS NUMERIC)))) ISNULL));
SELECT * FROM v0 INNER JOIN t0 ON CASE TRIM(DISTINCT v0.c0)  WHEN HEX(v0.c0) THEN CAST(v0.c0 AS TEXT) ELSE ((t0.c2)LIKE(t0.c0)) END;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE ((((v0.c0)>(v0.c0)) IN ())) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT ((((v0.c0)>(v0.c0)) IN ())))) UNION SELECT DISTINCT * FROM v0 WHERE ((((((v0.c0)>(v0.c0)) IN ())) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT t0.c2, t0.c0, t0.c1 FROM t0, v0 GROUP BY t0.c2, t0.c0, t0.c1;
SELECT ALL t0.c2, t0.c0, t0.c1 FROM t0, v0 WHERE (((((((t0.c2)OR(t0.c0)))AND(t0.c0)))==(t0.c2 COLLATE RTRIM))) GROUP BY t0.c2, t0.c0, t0.c1 UNION SELECT t0.c2, t0.c0, t0.c1 FROM t0, v0 WHERE ((NOT (((((((t0.c2)OR(t0.c0)))AND(t0.c0)))==(t0.c2 COLLATE RTRIM))))) GROUP BY t0.c2, t0.c0, t0.c1 UNION SELECT t0.c2, t0.c0, t0.c1 FROM t0, v0 WHERE (((((((((t0.c2)OR(t0.c0)))AND(t0.c0)))=(t0.c2 COLLATE RTRIM))) ISNULL)) GROUP BY t0.c2, t0.c0, t0.c1;
SELECT t0.c2, t0.c0, t0.c1 FROM t0, v0 GROUP BY t0.c2, t0.c0, t0.c1;
SELECT t0.c1, t0.c0, v0.c0, t0.c2 FROM v0, t0 GROUP BY t0.c1, t0.c0, v0.c0, t0.c2;
SELECT t0.c1, t0.c0, v0.c0, t0.c2 FROM v0, t0 GROUP BY t0.c1, t0.c0, v0.c0, t0.c2 HAVING NULL UNION ALL SELECT t0.c1, t0.c0, v0.c0, t0.c2 FROM v0, t0 GROUP BY t0.c1, t0.c0, v0.c0, t0.c2 HAVING (NOT (NULL)) UNION ALL SELECT t0.c1, t0.c0, v0.c0, t0.c2 FROM v0, t0 GROUP BY t0.c1, t0.c0, v0.c0, t0.c2 HAVING ((NULL) ISNULL);
SELECT t0.c1, t0.c0, v0.c0, t0.c2 FROM v0, t0 GROUP BY t0.c1, t0.c0, v0.c0, t0.c2;
SELECT t0.c1, t0.c0, v0.c0, t0.c2 FROM v0, t0 GROUP BY t0.c1, t0.c0, v0.c0, t0.c2 HAVING NULL UNION ALL SELECT t0.c1, t0.c0, v0.c0, t0.c2 FROM v0, t0 GROUP BY t0.c1, t0.c0, v0.c0, t0.c2 HAVING (NOT (NULL)) UNION ALL SELECT t0.c1, t0.c0, v0.c0, t0.c2 FROM v0, t0 GROUP BY t0.c1, t0.c0, v0.c0, t0.c2 HAVING ((NULL) ISNULL);
SELECT t0.c1, t0.c0, v0.c0, t0.c2 FROM v0, t0 GROUP BY t0.c1, t0.c0, v0.c0, t0.c2;
SELECT ALL t0.c0 FROM t0, v0;
SELECT t0.c0 FROM t0, v0 WHERE (NULLIF(DISTINCT v0.c0 COLLATE BINARY, x'38a9' COLLATE RTRIM)) UNION ALL SELECT t0.c0 FROM t0, v0 WHERE ((NOT (NULLIF(DISTINCT v0.c0 COLLATE BINARY, x'38a9' COLLATE RTRIM)))) UNION ALL SELECT ALL t0.c0 FROM t0, v0 WHERE (((NULLIF(DISTINCT v0.c0 COLLATE BINARY, x'38a9' COLLATE RTRIM)) ISNULL));
SELECT ALL t0.c0 FROM t0, v0;
SELECT DISTINCT * FROM v0, t0;
SELECT DISTINCT * FROM v0, t0 WHERE ((((((NULL, t0.c2, v0.c0)) NOT BETWEEN ((t0.c0, t0.c2, t0.c0)) AND ((x'32c0', t0.c0, t0.c2))))||(x''))) UNION SELECT DISTINCT * FROM v0, t0 WHERE ((NOT ((((((NULL, t0.c2, v0.c0)) NOT BETWEEN ((t0.c0, t0.c2, t0.c0)) AND ((x'32c0', t0.c0, t0.c2))))||(x''))))) UNION SELECT DISTINCT * FROM v0, t0 WHERE ((((((((NULL, t0.c2, v0.c0)) NOT BETWEEN ((t0.c0, t0.c2, t0.c0)) AND ((x'32c0', t0.c0, t0.c2))))||(x''))) ISNULL));
SELECT DISTINCT * FROM v0, t0;
SELECT t0.c0, t0.c1 FROM t0 GROUP BY t0.c0, t0.c1;
SELECT ALL t0.c0, t0.c1 FROM t0 WHERE ((((t0.c1)) BETWEEN ((CASE WHEN t0.c2 THEN t0.c0 END)) AND ((((((-911769856)AND(t0.c2)))OR(t0.c0)))))) GROUP BY t0.c0, t0.c1 UNION SELECT t0.c0, t0.c1 FROM t0 WHERE ((NOT ((((t0.c1)) BETWEEN ((CASE WHEN t0.c2 THEN t0.c0 END)) AND ((((((-911769856)AND(t0.c2)))OR(t0.c0)))))))) GROUP BY t0.c0, t0.c1 UNION SELECT t0.c0, t0.c1 FROM t0 WHERE ((((((t0.c1)) BETWEEN ((CASE WHEN t0.c2 THEN t0.c0 END)) AND ((((((-911769856)AND(t0.c2)))OR(t0.c0)))))) ISNULL)) GROUP BY t0.c0, t0.c1;
SELECT t0.c0, t0.c1 FROM t0 GROUP BY t0.c0, t0.c1;
SELECT t0.c2, t0.c0 FROM t0 GROUP BY t0.c2, t0.c0;
SELECT t0.c2, t0.c0 FROM t0 GROUP BY t0.c2, t0.c0 HAVING MIN(MAX(t0.c0)) UNION ALL SELECT t0.c2, t0.c0 FROM t0 GROUP BY t0.c2, t0.c0 HAVING (NOT (MIN(MAX(t0.c0)))) UNION ALL SELECT t0.c2, t0.c0 FROM t0 GROUP BY t0.c2, t0.c0 HAVING ((MIN(MAX(t0.c0))) ISNULL);
SELECT ALL TOTAL((((t0.c1 IN ()))+('-582664657'))) FROM t0, v0 ORDER BY (+ ((t0.c0 IN ()))) DESC;
SELECT * FROM t0, v0;
SELECT ALL * FROM t0, v0 WHERE (((t0.c1)==(t0.c2)) COLLATE NOCASE) UNION ALL SELECT * FROM t0, v0 WHERE ((NOT (((t0.c1)==(t0.c2)) COLLATE NOCASE))) UNION ALL SELECT * FROM t0, v0 WHERE (((((t0.c1)==(t0.c2)) COLLATE NOCASE) ISNULL));
SELECT * FROM t0, v0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (((((x'') NOT BETWEEN (v0.c0) AND (v0.c0))) NOT BETWEEN ((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))) AND (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (((((x'') NOT BETWEEN (v0.c0) AND (v0.c0))) NOT BETWEEN ((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))) AND (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((((((x'') NOT BETWEEN (v0.c0) AND (v0.c0))) NOT BETWEEN ((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))) AND (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT t0.c2 FROM t0 INNER JOIN v0 ON t0.c0 GROUP BY t0.c2;
SELECT t0.c2 FROM t0 INNER JOIN v0 ON t0.c0 WHERE ((((+ (t0.c2)))LIKE(CAST(t0.c0 AS NUMERIC)))) GROUP BY t0.c2 UNION SELECT t0.c2 FROM t0 INNER JOIN v0 ON t0.c0 WHERE ((NOT ((((+ (t0.c2)))LIKE(CAST(t0.c0 AS NUMERIC)))))) GROUP BY t0.c2 UNION SELECT ALL t0.c2 FROM t0 INNER JOIN v0 ON t0.c0 WHERE ((((((+ (t0.c2)))LIKE(CAST(t0.c0 AS NUMERIC)))) ISNULL)) GROUP BY t0.c2;
SELECT t0.c2 FROM t0 INNER JOIN v0 ON t0.c0 GROUP BY t0.c2;
SELECT ALL t0.c0, t0.c1, t0.c2 FROM v0, t0 GROUP BY t0.c0, t0.c1, t0.c2;
SELECT t0.c0, t0.c1, t0.c2 FROM v0, t0 GROUP BY t0.c0, t0.c1, t0.c2 HAVING MIN(MIN(t0.c2)) UNION ALL SELECT ALL t0.c0, t0.c1, t0.c2 FROM v0, t0 GROUP BY t0.c0, t0.c1, t0.c2 HAVING (NOT (MIN(MIN(t0.c2)))) UNION ALL SELECT ALL t0.c0, t0.c1, t0.c2 FROM v0, t0 GROUP BY t0.c0, t0.c1, t0.c2 HAVING ((MIN(MIN(t0.c2))) ISNULL);
SELECT v0.c0 FROM v0;
SELECT ALL v0.c0 FROM v0 WHERE (INSTR((v0.c0 IN ()), (- (v0.c0)))) UNION ALL SELECT v0.c0 FROM v0 WHERE ((NOT (INSTR((v0.c0 IN ()), (- (v0.c0)))))) UNION ALL SELECT v0.c0 FROM v0 WHERE (((INSTR((v0.c0 IN ()), (- (v0.c0)))) ISNULL));
SELECT v0.c0 FROM v0;
SELECT DISTINCT * FROM t0, v0;
SELECT DISTINCT * FROM t0, v0 WHERE (ABS(x'')) UNION SELECT DISTINCT * FROM t0, v0 WHERE ((NOT (ABS(x'')))) UNION SELECT DISTINCT * FROM t0, v0 WHERE (((ABS(x'')) ISNULL));
SELECT DISTINCT * FROM t0, v0;
SELECT t0.c0 FROM t0, v0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 NOT INDEXED, v0 WHERE (((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c1))) ISNULL)) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0, v0 WHERE ((NOT (((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c1))) ISNULL)))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0, v0 WHERE (((((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c1))) ISNULL)) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0, v0 GROUP BY t0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (((v0.c0, MIN(GROUP_CONCAT(AVG(COUNT(*)))), TOTAL(v0.c0))) BETWEEN (((v0.c0 IN ()), x'e995', AVG(TOTAL(v0.c0)))) AND ((SUM(v0.c0), ((COUNT(*)) NOT BETWEEN (TOTAL(v0.c0)) AND (TOTAL(MIN(MAX(MAX(v0.c0)))))), MAX(TOTAL(SUM(v0.c0)))))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT ((((v0.c0, MIN(GROUP_CONCAT(AVG(COUNT(*)))), TOTAL(v0.c0))) BETWEEN (((v0.c0 IN ()), x'e995', AVG(TOTAL(v0.c0)))) AND ((SUM(v0.c0), ((COUNT(*)) NOT BETWEEN (TOTAL(v0.c0)) AND (TOTAL(MIN(MAX(MAX(v0.c0)))))), MAX(TOTAL(SUM(v0.c0)))))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (((((v0.c0, MIN(GROUP_CONCAT(AVG(COUNT(*)))), TOTAL(v0.c0))) BETWEEN (((v0.c0 IN ()), x'e995', AVG(TOTAL(v0.c0)))) AND ((SUM(v0.c0), ((COUNT(*)) NOT BETWEEN (TOTAL(v0.c0)) AND (TOTAL(MIN(MAX(MAX(v0.c0)))))), MAX(TOTAL(SUM(v0.c0))))))) ISNULL);
SELECT ALL t0.c2, t0.c1, v0.c0, t0.c0 FROM t0, v0;
SELECT ALL t0.c2, t0.c1, v0.c0, t0.c0 FROM t0, v0 WHERE (CASE WHEN (((t0.c2))<((t0.c2))) THEN ((v0.c0) NOT BETWEEN (-1.740384441E9) AND (t0.c0)) WHEN NULL THEN ((('0.2949052152180339')) NOT BETWEEN ((v0.c0)) AND ((t0.c1))) WHEN CASE v0.c0  WHEN t0.c1 THEN t0.c2 WHEN t0.c2 THEN v0.c0 WHEN t0.c1 THEN t0.c1 ELSE t0.c1 END THEN v0.c0 ELSE (~ (t0.c0)) END) UNION ALL SELECT ALL t0.c2, t0.c1, v0.c0, t0.c0 FROM t0, v0 WHERE ((NOT (CASE WHEN (((t0.c2))<((t0.c2))) THEN ((v0.c0) NOT BETWEEN (-1.740384441E9) AND (t0.c0)) WHEN NULL THEN ((('0.2949052152180339')) NOT BETWEEN ((v0.c0)) AND ((t0.c1))) WHEN CASE v0.c0  WHEN t0.c1 THEN t0.c2 WHEN t0.c2 THEN v0.c0 WHEN t0.c1 THEN t0.c1 ELSE t0.c1 END THEN v0.c0 ELSE (~ (t0.c0)) END))) UNION ALL SELECT ALL t0.c2, t0.c1, v0.c0, t0.c0 FROM t0, v0 WHERE (((CASE WHEN (((t0.c2))<((t0.c2))) THEN ((v0.c0) NOT BETWEEN (-1.740384441E9) AND (t0.c0)) WHEN NULL THEN ((('0.2949052152180339')) NOT BETWEEN ((v0.c0)) AND ((t0.c1))) WHEN CASE v0.c0  WHEN t0.c1 THEN t0.c2 WHEN t0.c2 THEN v0.c0 WHEN t0.c1 THEN t0.c1 ELSE t0.c1 END THEN v0.c0 ELSE (~ (t0.c0)) END) ISNULL));
SELECT ALL t0.c2, t0.c1, v0.c0, t0.c0 FROM t0, v0;
SELECT DISTINCT t0.c2 FROM t0;
SELECT DISTINCT t0.c2 FROM t0 WHERE (t0.c2) UNION SELECT DISTINCT t0.c2 FROM t0 WHERE ((NOT (t0.c2))) UNION SELECT DISTINCT t0.c2 FROM t0 WHERE (((t0.c2) ISNULL));
SELECT DISTINCT t0.c2 FROM t0;
SELECT ALL t0.c2 FROM t0 GROUP BY t0.c2;
SELECT ALL t0.c2 FROM t0 WHERE (((((t0.c0) NOT NULL)) NOT BETWEEN ((((t0.c2, t0.c0, t0.c2))<=((t0.c0, t0.c1, t0.c1)))) AND (CAST('616312271' AS NUMERIC)))) GROUP BY t0.c2 UNION SELECT t0.c2 FROM t0 WHERE ((NOT (((((t0.c0) NOT NULL)) NOT BETWEEN ((((t0.c2, t0.c0, t0.c2))<=((t0.c0, t0.c1, t0.c1)))) AND (CAST('616312271' AS NUMERIC)))))) GROUP BY t0.c2 UNION SELECT t0.c2 FROM t0 WHERE (((((((t0.c0) NOT NULL)) NOT BETWEEN ((((t0.c2, t0.c0, t0.c2))<=((t0.c0, t0.c1, t0.c1)))) AND (CAST('616312271' AS NUMERIC)))) ISNULL)) GROUP BY t0.c2;
SELECT ALL t0.c2 FROM t0 GROUP BY t0.c2;
SELECT ALL t0.c2, t0.c0 FROM t0, v0 GROUP BY t0.c2, t0.c0;
SELECT ALL t0.c2, t0.c0 FROM t0, v0 GROUP BY t0.c2, t0.c0 HAVING GROUP_CONCAT(AVG(MIN(COUNT(*)))) UNION ALL SELECT t0.c2, t0.c0 FROM t0, v0 GROUP BY t0.c2, t0.c0 HAVING (NOT (GROUP_CONCAT(AVG(MIN(COUNT(*)))))) UNION ALL SELECT t0.c2, t0.c0 FROM t0, v0 GROUP BY t0.c2, t0.c0 HAVING ((GROUP_CONCAT(AVG(MIN(COUNT(*))))) ISNULL);
SELECT ALL * FROM v0;
SELECT ALL * FROM v0 WHERE (NULLIF(((v0.c0)>(v0.c0)), ((v0.c0) IS TRUE))) UNION ALL SELECT ALL * FROM v0 WHERE ((NOT (NULLIF(((v0.c0)>(v0.c0)), ((v0.c0) IS TRUE))))) UNION ALL SELECT ALL * FROM v0 WHERE (((NULLIF(((v0.c0)>(v0.c0)), ((v0.c0) IS TRUE))) ISNULL));
SELECT ALL * FROM v0;
SELECT DISTINCT v0.c0, t0.c2, t0.c1 FROM v0, t0;
SELECT DISTINCT v0.c0, t0.c2, t0.c1 FROM v0, t0 WHERE ((((t0.c2 IN ())) NOT NULL)) UNION SELECT DISTINCT v0.c0, t0.c2, t0.c1 FROM v0, t0 WHERE ((NOT ((((t0.c2 IN ())) NOT NULL)))) UNION SELECT DISTINCT v0.c0, t0.c2, t0.c1 FROM v0, t0 WHERE ((((((t0.c2 IN ())) NOT NULL)) ISNULL));
SELECT DISTINCT v0.c0, t0.c2, t0.c1 FROM v0, t0;
SELECT t0.c1, t0.c0 FROM v0, t0 GROUP BY t0.c1, t0.c0;
SELECT ALL t0.c1, t0.c0 FROM v0, t0 WHERE (x'') GROUP BY t0.c1, t0.c0 UNION SELECT t0.c1, t0.c0 FROM v0, t0 WHERE ((NOT (x''))) GROUP BY t0.c1, t0.c0 UNION SELECT ALL t0.c1, t0.c0 FROM v0, t0 WHERE (((x'') ISNULL)) GROUP BY t0.c1, t0.c0;
SELECT t0.c1, t0.c0 FROM v0, t0 GROUP BY t0.c1, t0.c0;
SELECT t0.c1 FROM t0 GROUP BY t0.c1;
SELECT t0.c1 FROM t0 GROUP BY t0.c1 HAVING AVG((- (COUNT(t0.c0)))) UNION ALL SELECT t0.c1 FROM t0 GROUP BY t0.c1 HAVING (NOT (AVG((- (COUNT(t0.c0)))))) UNION ALL SELECT t0.c1 FROM t0 GROUP BY t0.c1 HAVING ((AVG((- (COUNT(t0.c0))))) ISNULL);
SELECT * FROM t0;
SELECT ALL * FROM t0 WHERE (((((t0.c2) NOTNULL))<<(json_extract(t0.c1, t0.c2)))) UNION ALL SELECT * FROM t0 WHERE ((NOT (((((t0.c2) NOTNULL))<<(json_extract(t0.c1, t0.c2)))))) UNION ALL SELECT ALL * FROM t0 WHERE (((((((t0.c2) NOTNULL))<<(json_extract(t0.c1, t0.c2)))) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (((CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END) NOT BETWEEN (0.3092438618104342) AND (v0.c0))) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (((CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END) NOT BETWEEN (0.3092438618104342) AND (v0.c0))))) UNION SELECT DISTINCT * FROM v0 WHERE (((((CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END) NOT BETWEEN (0.3092438618104342) AND (v0.c0))) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT ALL t0.c2, t0.c0 FROM v0, t0 GROUP BY t0.c2, t0.c0;
SELECT ALL t0.c2, t0.c0 FROM v0, t0 WHERE ((((t0.c1) IS FALSE) IN ())) GROUP BY t0.c2, t0.c0 UNION SELECT t0.c2, t0.c0 FROM v0, t0 WHERE ((NOT ((((t0.c1) IS FALSE) IN ())))) GROUP BY t0.c2, t0.c0 UNION SELECT t0.c2, t0.c0 FROM v0, t0 WHERE ((((((t0.c1) IS FALSE) IN ())) ISNULL)) GROUP BY t0.c2, t0.c0;
SELECT ALL t0.c2, t0.c0 FROM v0, t0 GROUP BY t0.c2, t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING MIN(SUM(COUNT(*))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (MIN(SUM(COUNT(*))))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((MIN(SUM(COUNT(*)))) ISNULL);
SELECT ALL v0.c0 FROM v0, t0;
SELECT ALL v0.c0 FROM v0, t0 WHERE (CASE WHEN (((t0.c2))>((v0.c0))) THEN (v0.c0 IN (v0.c0)) ELSE '-733406789' END) UNION ALL SELECT v0.c0 FROM v0, t0 WHERE ((NOT (CASE WHEN (((t0.c2))>((v0.c0))) THEN (v0.c0 IN (v0.c0)) ELSE '-733406789' END))) UNION ALL SELECT ALL v0.c0 FROM v0, t0 WHERE (((CASE WHEN (((t0.c2))>((v0.c0))) THEN (v0.c0 IN (v0.c0)) ELSE '-733406789' END) ISNULL));
SELECT ALL v0.c0 FROM v0, t0;
SELECT DISTINCT t0.c0, t0.c1, v0.c0, t0.c2 FROM t0, v0;
SELECT DISTINCT t0.c0, t0.c1, v0.c0, t0.c2 FROM t0, v0 WHERE ((IFNULL(t0.c0, t0.c0) IN ())) UNION SELECT DISTINCT t0.c0, t0.c1, v0.c0, t0.c2 FROM t0, v0 WHERE ((NOT ((IFNULL(t0.c0, t0.c0) IN ())))) UNION SELECT DISTINCT t0.c0, t0.c1, v0.c0, t0.c2 FROM t0, v0 WHERE ((((IFNULL(t0.c0, t0.c0) IN ())) ISNULL));
SELECT DISTINCT t0.c0, t0.c1, v0.c0, t0.c2 FROM t0, v0;
SELECT v0.c0, t0.c2 FROM v0, t0 GROUP BY v0.c0, t0.c2;
SELECT ALL v0.c0, t0.c2 FROM v0, t0 WHERE (CAST((((v0.c0))>=((t0.c2))) AS BLOB)) GROUP BY v0.c0, t0.c2 UNION SELECT v0.c0, t0.c2 FROM v0, t0 WHERE ((NOT (CAST((((v0.c0))>=((t0.c2))) AS BLOB)))) GROUP BY v0.c0, t0.c2 UNION SELECT ALL v0.c0, t0.c2 FROM v0, t0 WHERE (((CAST((((v0.c0))>=((t0.c2))) AS BLOB)) ISNULL)) GROUP BY v0.c0, t0.c2;
SELECT v0.c0, t0.c2 FROM v0, t0 GROUP BY v0.c0, t0.c2;
SELECT ALL t0.c0, t0.c1, t0.c2 FROM v0, t0 GROUP BY t0.c0, t0.c1, t0.c2;
SELECT t0.c0, t0.c1, t0.c2 FROM v0, t0 GROUP BY t0.c0, t0.c1, t0.c2 HAVING TOTAL(COUNT(t0.c2)) UNION ALL SELECT t0.c0, t0.c1, t0.c2 FROM v0, t0 GROUP BY t0.c0, t0.c1, t0.c2 HAVING (NOT (TOTAL(COUNT(t0.c2)))) UNION ALL SELECT t0.c0, t0.c1, t0.c2 FROM v0, t0 GROUP BY t0.c0, t0.c1, t0.c2 HAVING ((TOTAL(COUNT(t0.c2))) ISNULL);
SELECT ALL v0.c0 FROM v0;
SELECT v0.c0 FROM v0 WHERE ((((v0.c0)) NOT BETWEEN (((((v0.c0)) BETWEEN (('-1938041292')) AND ((v0.c0))))) AND ((((((v0.c0)AND(v0.c0)))OR(v0.c0)))))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE ((NOT ((((v0.c0)) NOT BETWEEN (((((v0.c0)) BETWEEN (('-1938041292')) AND ((v0.c0))))) AND ((((((v0.c0)AND(v0.c0)))OR(v0.c0)))))))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE ((((((v0.c0)) NOT BETWEEN (((((v0.c0)) BETWEEN (('-1938041292')) AND ((v0.c0))))) AND ((((((v0.c0)AND(v0.c0)))OR(v0.c0)))))) ISNULL));
SELECT ALL v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (0.6729854260104113) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (0.6729854260104113))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((0.6729854260104113) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT ALL t0.c1 FROM v0, t0 GROUP BY t0.c1;
SELECT t0.c1 FROM v0, t0 WHERE (((((((((SQLITE_SOURCE_ID())AND(((t0.c0)!=(t0.c2)))))AND(t0.c2)))AND(json_remove(t0.c0, '()'))))OR(((NULL)IS NOT(t0.c0))))) GROUP BY t0.c1 UNION SELECT ALL t0.c1 FROM v0, t0 WHERE ((NOT (((((((((SQLITE_SOURCE_ID())AND(((t0.c0)<>(t0.c2)))))AND(t0.c2)))AND(json_remove(t0.c0, '()'))))OR(((NULL)IS NOT(t0.c0))))))) GROUP BY t0.c1 UNION SELECT t0.c1 FROM v0, t0 WHERE (((((((((((SQLITE_SOURCE_ID())AND(((t0.c0)!=(t0.c2)))))AND(t0.c2)))AND(json_remove(t0.c0, '()'))))OR(((NULL)IS NOT(t0.c0))))) ISNULL)) GROUP BY t0.c1;
SELECT ALL t0.c1 FROM v0, t0 GROUP BY t0.c1;
SELECT ALL t0.c1, t0.c0, v0.c0 FROM v0, t0 GROUP BY t0.c1, t0.c0, v0.c0;
SELECT ALL t0.c1, t0.c0, v0.c0 FROM v0, t0 GROUP BY t0.c1, t0.c0, v0.c0 HAVING ((((((t0.c1)||(v0.c0)))AND(MIN(v0.c0))))AND(COUNT(*))) UNION ALL SELECT t0.c1, t0.c0, v0.c0 FROM v0, t0 GROUP BY t0.c1, t0.c0, v0.c0 HAVING (NOT (((((((t0.c1)||(v0.c0)))AND(MIN(v0.c0))))AND(COUNT(*))))) UNION ALL SELECT t0.c1, t0.c0, v0.c0 FROM v0, t0 GROUP BY t0.c1, t0.c0, v0.c0 HAVING ((((((((t0.c1)||(v0.c0)))AND(MIN(v0.c0))))AND(COUNT(*)))) ISNULL);
SELECT ALL t0.c1, t0.c0, v0.c0 FROM v0, t0 GROUP BY t0.c1, t0.c0, v0.c0;
SELECT ALL t0.c1, t0.c0, v0.c0 FROM v0, t0 GROUP BY t0.c1, t0.c0, v0.c0 HAVING ((((((t0.c1)||(v0.c0)))AND(MIN(v0.c0))))AND(COUNT(*))) UNION ALL SELECT t0.c1, t0.c0, v0.c0 FROM v0, t0 GROUP BY t0.c1, t0.c0, v0.c0 HAVING (NOT (((((((t0.c1)||(v0.c0)))AND(MIN(v0.c0))))AND(COUNT(*))))) UNION ALL SELECT t0.c1, t0.c0, v0.c0 FROM v0, t0 GROUP BY t0.c1, t0.c0, v0.c0 HAVING ((((((((t0.c1)||(v0.c0)))AND(MIN(v0.c0))))AND(COUNT(*)))) ISNULL);
SELECT ALL t0.c1, t0.c0, v0.c0 FROM v0, t0 GROUP BY t0.c1, t0.c0, v0.c0;
SELECT ALL * FROM v0;
SELECT ALL * FROM v0 WHERE ((+ (json_extract(v0.c0, v0.c0)))) UNION ALL SELECT * FROM v0 WHERE ((NOT ((+ (json_extract(v0.c0, v0.c0)))))) UNION ALL SELECT * FROM v0 WHERE ((((+ (json_extract(v0.c0, v0.c0)))) ISNULL));
SELECT ALL * FROM v0;
SELECT DISTINCT v0.c0, t0.c2 FROM t0, v0;
SELECT DISTINCT v0.c0, t0.c2 FROM t0, v0 WHERE (0xffffffffb2bb0ae0) UNION SELECT DISTINCT v0.c0, t0.c2 FROM t0, v0 WHERE ((NOT (0xffffffffb2bb0ae0))) UNION SELECT DISTINCT v0.c0, t0.c2 FROM t0, v0 WHERE (((0xffffffffb2bb0ae0) ISNULL));
SELECT DISTINCT v0.c0, t0.c2 FROM t0, v0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE ((((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))))|(v0.c0))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT ((((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))))|(v0.c0))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((((((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))))|(v0.c0))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL t0.c2, t0.c1, t0.c0 FROM t0 GROUP BY t0.c2, t0.c1, t0.c0;
SELECT t0.c2, t0.c1, t0.c0 FROM t0 GROUP BY t0.c2, t0.c1, t0.c0 HAVING SUM(t0.c0) COLLATE RTRIM UNION ALL SELECT t0.c2, t0.c1, t0.c0 FROM t0 GROUP BY t0.c2, t0.c1, t0.c0 HAVING (NOT (SUM(t0.c0) COLLATE RTRIM)) UNION ALL SELECT ALL t0.c2, t0.c1, t0.c0 FROM t0 GROUP BY t0.c2, t0.c1, t0.c0 HAVING ((SUM(t0.c0) COLLATE RTRIM) ISNULL);
SELECT ALL t0.c2, t0.c1, t0.c0 FROM t0 GROUP BY t0.c2, t0.c1, t0.c0;
SELECT t0.c2, t0.c1, t0.c0 FROM t0 GROUP BY t0.c2, t0.c1, t0.c0 HAVING SUM(t0.c0) COLLATE RTRIM UNION ALL SELECT t0.c2, t0.c1, t0.c0 FROM t0 GROUP BY t0.c2, t0.c1, t0.c0 HAVING (NOT (SUM(t0.c0) COLLATE RTRIM)) UNION ALL SELECT ALL t0.c2, t0.c1, t0.c0 FROM t0 GROUP BY t0.c2, t0.c1, t0.c0 HAVING ((SUM(t0.c0) COLLATE RTRIM) ISNULL);
SELECT ALL t0.c2, t0.c1, t0.c0 FROM t0 GROUP BY t0.c2, t0.c1, t0.c0;
SELECT t0.c1, t0.c2, v0.c0, t0.c0 FROM t0, v0;
SELECT t0.c1, t0.c2, v0.c0, t0.c0 FROM t0, v0 WHERE (t0.c1) UNION ALL SELECT ALL t0.c1, t0.c2, v0.c0, t0.c0 FROM t0, v0 WHERE ((NOT (t0.c1))) UNION ALL SELECT ALL t0.c1, t0.c2, v0.c0, t0.c0 FROM t0, v0 WHERE (((t0.c1) ISNULL));
SELECT t0.c1, t0.c2, v0.c0, t0.c0 FROM t0, v0;
SELECT DISTINCT * FROM t0, v0;
SELECT DISTINCT * FROM t0, v0 WHERE (x'') UNION SELECT DISTINCT * FROM t0, v0 WHERE ((NOT (x''))) UNION SELECT DISTINCT * FROM t0, v0 WHERE (((x'') ISNULL));
SELECT DISTINCT * FROM t0, v0;
SELECT ALL t0.c2, t0.c0, t0.c1 FROM t0 GROUP BY t0.c2, t0.c0, t0.c1;
SELECT t0.c2, t0.c0, t0.c1 FROM t0 WHERE (((((t0.c1)AND(t0.c1)))*((((t0.c2, t0.c0, t0.c2)) NOT BETWEEN ((t0.c2, t0.c1, t0.c2)) AND ((t0.c2, t0.c1, t0.c1)))))) GROUP BY t0.c2, t0.c0, t0.c1 UNION SELECT ALL t0.c2, t0.c0, t0.c1 FROM t0 WHERE ((NOT (((((t0.c1)AND(t0.c1)))*((((t0.c2, t0.c0, t0.c2)) NOT BETWEEN ((t0.c2, t0.c1, t0.c2)) AND ((t0.c2, t0.c1, t0.c1)))))))) GROUP BY t0.c2, t0.c0, t0.c1 UNION SELECT ALL t0.c2, t0.c0, t0.c1 FROM t0 WHERE (((((((t0.c1)AND(t0.c1)))*((((t0.c2, t0.c0, t0.c2)) NOT BETWEEN ((t0.c2, t0.c1, t0.c2)) AND ((t0.c2, t0.c1, t0.c1)))))) ISNULL)) GROUP BY t0.c2, t0.c0, t0.c1;
SELECT ALL t0.c2, t0.c0, t0.c1 FROM t0 GROUP BY t0.c2, t0.c0, t0.c1;
SELECT t0.c1 FROM t0 GROUP BY t0.c1;
SELECT ALL t0.c1 FROM t0 GROUP BY t0.c1 HAVING LOWER(((TOTAL(t0.c2)) BETWEEN (MAX(t0.c0)) AND (GROUP_CONCAT(t0.c0)))) UNION ALL SELECT ALL t0.c1 FROM t0 GROUP BY t0.c1 HAVING (NOT (LOWER(((TOTAL(t0.c2)) BETWEEN (MAX(t0.c0)) AND (GROUP_CONCAT(t0.c0)))))) UNION ALL SELECT ALL t0.c1 FROM t0 GROUP BY t0.c1 HAVING ((LOWER(((TOTAL(t0.c2)) BETWEEN (MAX(t0.c0)) AND (GROUP_CONCAT(t0.c0))))) ISNULL);
SELECT t0.c1 FROM t0 GROUP BY t0.c1;
SELECT ALL t0.c1 FROM t0 GROUP BY t0.c1 HAVING LOWER(((TOTAL(t0.c2)) BETWEEN (MAX(t0.c0)) AND (GROUP_CONCAT(t0.c0)))) UNION ALL SELECT ALL t0.c1 FROM t0 GROUP BY t0.c1 HAVING (NOT (LOWER(((TOTAL(t0.c2)) BETWEEN (MAX(t0.c0)) AND (GROUP_CONCAT(t0.c0)))))) UNION ALL SELECT ALL t0.c1 FROM t0 GROUP BY t0.c1 HAVING ((LOWER(((TOTAL(t0.c2)) BETWEEN (MAX(t0.c0)) AND (GROUP_CONCAT(t0.c0))))) ISNULL);
SELECT t0.c1 FROM t0 GROUP BY t0.c1;
SELECT t0.c0 FROM v0, t0;
SELECT ALL t0.c0 FROM v0, t0 WHERE ((NOT (((v0.c0) BETWEEN (t0.c0) AND ('1434880965'))))) UNION ALL SELECT t0.c0 FROM v0, t0 WHERE ((NOT ((NOT (((v0.c0) BETWEEN (t0.c0) AND ('1434880965'))))))) UNION ALL SELECT ALL t0.c0 FROM v0, t0 WHERE ((((NOT (((v0.c0) BETWEEN (t0.c0) AND ('1434880965'))))) ISNULL));
SELECT t0.c0 FROM v0, t0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (((v0.c0)<=(v0.c0)) COLLATE RTRIM) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (((v0.c0)<=(v0.c0)) COLLATE RTRIM))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((((v0.c0)<=(v0.c0)) COLLATE RTRIM) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT t0.c0, t0.c1 FROM t0 GROUP BY t0.c0, t0.c1;
SELECT ALL t0.c0, t0.c1 FROM t0 WHERE (((t0.c2 COLLATE RTRIM)LIKE(x''))) GROUP BY t0.c0, t0.c1 UNION SELECT t0.c0, t0.c1 FROM t0 WHERE ((NOT (((t0.c2 COLLATE RTRIM)LIKE(x''))))) GROUP BY t0.c0, t0.c1 UNION SELECT ALL t0.c0, t0.c1 FROM t0 WHERE (((((t0.c2 COLLATE RTRIM)LIKE(x''))) ISNULL)) GROUP BY t0.c0, t0.c1;
SELECT t0.c0, t0.c1 FROM t0 GROUP BY t0.c0, t0.c1;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING TOTAL(CASE WHEN SUM(v0.c0) THEN v0.c0 END) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (TOTAL(CASE WHEN SUM(v0.c0) THEN v0.c0 END))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((TOTAL(CASE WHEN SUM(v0.c0) THEN v0.c0 END)) ISNULL);
SELECT ALL t0.c0, t0.c1 FROM t0;
SELECT t0.c0, t0.c1 FROM t0 WHERE (CASE (- (x''))  WHEN (- (t0.c0)) THEN ((((((((NULL)AND(t0.c2)))AND(t0.c2)))AND(t0.c0)))OR(t0.c1)) ELSE (((-1645268635, t0.c2, x'1139')) NOT BETWEEN ((0X53272896, t0.c1, t0.c2)) AND ((t0.c2, t0.c2, t0.c0))) END) UNION ALL SELECT ALL t0.c0, t0.c1 FROM t0 WHERE ((NOT (CASE (- (x''))  WHEN (- (t0.c0)) THEN ((((((((NULL)AND(t0.c2)))AND(t0.c2)))AND(t0.c0)))OR(t0.c1)) ELSE (((-1645268635, t0.c2, x'1139')) NOT BETWEEN ((0X53272896, t0.c1, t0.c2)) AND ((t0.c2, t0.c2, t0.c0))) END))) UNION ALL SELECT ALL t0.c0, t0.c1 FROM t0 WHERE (((CASE (- (x''))  WHEN (- (t0.c0)) THEN ((((((((NULL)AND(t0.c2)))AND(t0.c2)))AND(t0.c0)))OR(t0.c1)) ELSE (((-1645268635, t0.c2, x'1139')) NOT BETWEEN ((0x53272896, t0.c1, t0.c2)) AND ((t0.c2, t0.c2, t0.c0))) END) ISNULL));
SELECT ALL t0.c0, t0.c1 FROM t0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (((TRIM(v0.c0)) ISNULL)) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (((TRIM(v0.c0)) ISNULL)))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((((TRIM(v0.c0)) ISNULL)) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT ALL t0.c0, t0.c2, t0.c1 FROM t0 GROUP BY t0.c0, t0.c2, t0.c1;
SELECT ALL t0.c0, t0.c2, t0.c1 FROM t0 WHERE (((((((((t0.c2)OR(t0.c2)))OR(t0.c2)))AND((((t0.c2, t0.c1, '-300086763'))<((t0.c1, t0.c0, t0.c0))))))AND((t0.c1 IN ())))) GROUP BY t0.c0, t0.c2, t0.c1 UNION SELECT t0.c0, t0.c2, t0.c1 FROM t0 WHERE ((NOT (((((((((t0.c2)OR(t0.c2)))OR(t0.c2)))AND((((t0.c2, t0.c1, '-300086763'))<((t0.c1, t0.c0, t0.c0))))))AND((t0.c1 IN ())))))) GROUP BY t0.c0, t0.c2, t0.c1 UNION SELECT t0.c0, t0.c2, t0.c1 FROM t0 WHERE (((((((((((t0.c2)OR(t0.c2)))OR(t0.c2)))AND((((t0.c2, t0.c1, '-300086763'))<((t0.c1, t0.c0, t0.c0))))))AND((t0.c1 IN ())))) ISNULL)) GROUP BY t0.c0, t0.c2, t0.c1;
SELECT ALL t0.c0, t0.c2, t0.c1 FROM t0 GROUP BY t0.c0, t0.c2, t0.c1;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING TRIM(DISTINCT MAX(v0.c0), GROUP_CONCAT(SUM(GROUP_CONCAT(MIN(v0.c0))))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (TRIM(DISTINCT MAX(v0.c0), GROUP_CONCAT(SUM(GROUP_CONCAT(MIN(v0.c0))))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((TRIM(DISTINCT MAX(v0.c0), GROUP_CONCAT(SUM(GROUP_CONCAT(MIN(v0.c0)))))) ISNULL);
SELECT * FROM t0 INNER JOIN v0 ON ((((t0.c0)-(t0.c1))) NOT BETWEEN (ABS(DISTINCT t0.c0)) AND (t0.c0 COLLATE RTRIM));
SELECT * FROM t0 INNER JOIN v0 ON ((((t0.c0)-(t0.c1))) NOT BETWEEN (ABS(DISTINCT t0.c0)) AND (t0.c0 COLLATE RTRIM)) WHERE (0.44737184262657503) UNION ALL SELECT * FROM t0 INNER JOIN v0 ON ((((t0.c0)-(t0.c1))) NOT BETWEEN (ABS(DISTINCT t0.c0)) AND (t0.c0 COLLATE RTRIM)) WHERE ((NOT (0.44737184262657503))) UNION ALL SELECT * FROM t0 INNER JOIN v0 ON ((((t0.c0)-(t0.c1))) NOT BETWEEN (ABS(DISTINCT t0.c0)) AND (t0.c0 COLLATE RTRIM)) WHERE (((0.44737184262657503) ISNULL));
SELECT * FROM t0 INNER JOIN v0 ON ((((t0.c0)-(t0.c1))) NOT BETWEEN (ABS(DISTINCT t0.c0)) AND (t0.c0 COLLATE RTRIM));
SELECT DISTINCT * FROM v0, t0;
SELECT DISTINCT * FROM v0, t0 WHERE (((v0.c0)+(((t0.c1) NOT BETWEEN (x'') AND ('1795753742'))))) UNION SELECT DISTINCT * FROM v0, t0 WHERE ((NOT (((v0.c0)+(((t0.c1) NOT BETWEEN (x'') AND ('1795753742'))))))) UNION SELECT DISTINCT * FROM v0, t0 WHERE (((((v0.c0)+(((t0.c1) NOT BETWEEN (x'') AND ('1795753742'))))) ISNULL));
SELECT DISTINCT * FROM v0, t0;
SELECT v0.c0, t0.c1, t0.c2, t0.c0 FROM v0 LEFT OUTER JOIN t0 ON (NOT ((v0.c0 IN ()))) GROUP BY v0.c0, t0.c1, t0.c2, t0.c0;
SELECT v0.c0, t0.c1, t0.c2, t0.c0 FROM v0 LEFT OUTER JOIN t0 ON (NOT ((v0.c0 IN ()))) WHERE ((CAST(t0.c0 AS REAL) IN ())) GROUP BY v0.c0, t0.c1, t0.c2, t0.c0 UNION SELECT ALL v0.c0, t0.c1, t0.c2, t0.c0 FROM v0 LEFT OUTER JOIN t0 ON (NOT ((v0.c0 IN ()))) WHERE ((NOT ((CAST(t0.c0 AS REAL) IN ())))) GROUP BY v0.c0, t0.c1, t0.c2, t0.c0 UNION SELECT ALL v0.c0, t0.c1, t0.c2, t0.c0 FROM v0 LEFT OUTER JOIN t0 ON (NOT ((v0.c0 IN ()))) WHERE ((((CAST(t0.c0 AS REAL) IN ())) ISNULL)) GROUP BY v0.c0, t0.c1, t0.c2, t0.c0;
SELECT v0.c0, t0.c1, t0.c2, t0.c0 FROM v0 LEFT OUTER JOIN t0 ON (NOT ((v0.c0 IN ()))) GROUP BY v0.c0, t0.c1, t0.c2, t0.c0;
SELECT t0.c1, t0.c2 FROM t0 GROUP BY t0.c1, t0.c2;
SELECT ALL t0.c1, t0.c2 FROM t0 GROUP BY t0.c1, t0.c2 HAVING MAX(CAST(SUM(MAX(MAX(TOTAL(t0.c0)))) AS NUMERIC)) UNION ALL SELECT t0.c1, t0.c2 FROM t0 GROUP BY t0.c1, t0.c2 HAVING (NOT (MAX(CAST(SUM(MAX(MAX(TOTAL(t0.c0)))) AS NUMERIC)))) UNION ALL SELECT ALL t0.c1, t0.c2 FROM t0 GROUP BY t0.c1, t0.c2 HAVING ((MAX(CAST(SUM(MAX(MAX(TOTAL(t0.c0)))) AS NUMERIC))) ISNULL);
SELECT ALL t0.c1 FROM t0, v0;
SELECT t0.c1 FROM t0, v0 WHERE (((t0.c2 COLLATE NOCASE)/(((t0.c0)AND(v0.c0))))) UNION ALL SELECT ALL t0.c1 FROM t0, v0 WHERE ((NOT (((t0.c2 COLLATE NOCASE)/(((t0.c0)AND(v0.c0))))))) UNION ALL SELECT ALL t0.c1 FROM t0, v0 WHERE (((((t0.c2 COLLATE NOCASE)/(((t0.c0)AND(v0.c0))))) ISNULL));
SELECT ALL t0.c1 FROM t0, v0;
SELECT DISTINCT t0.c0, v0.c0 FROM t0, v0;
SELECT DISTINCT t0.c0, v0.c0 FROM t0, v0 WHERE (CASE WHEN ((t0.c2)IS(v0.c0)) THEN ((t0.c1)<<(v0.c0)) ELSE t0.c2 END) UNION SELECT DISTINCT t0.c0, v0.c0 FROM t0, v0 WHERE ((NOT (CASE WHEN ((t0.c2)IS(v0.c0)) THEN ((t0.c1)<<(v0.c0)) ELSE t0.c2 END))) UNION SELECT DISTINCT t0.c0, v0.c0 FROM t0, v0 WHERE (((CASE WHEN ((t0.c2)IS(v0.c0)) THEN ((t0.c1)<<(v0.c0)) ELSE t0.c2 END) ISNULL));
SELECT DISTINCT t0.c0, v0.c0 FROM t0, v0;
SELECT ALL t0.c0, t0.c1 FROM v0, t0 GROUP BY t0.c0, t0.c1;
SELECT ALL t0.c0, t0.c1 FROM v0, t0 WHERE (((((t0.c0)%(t0.c0)))LIKE(v0.c0 COLLATE NOCASE))) GROUP BY t0.c0, t0.c1 UNION SELECT ALL t0.c0, t0.c1 FROM v0, t0 WHERE ((NOT (((((t0.c0)%(t0.c0)))LIKE(v0.c0 COLLATE NOCASE))))) GROUP BY t0.c0, t0.c1 UNION SELECT t0.c0, t0.c1 FROM v0, t0 WHERE (((((((t0.c0)%(t0.c0)))LIKE(v0.c0 COLLATE NOCASE))) ISNULL)) GROUP BY t0.c0, t0.c1;
SELECT ALL t0.c0, t0.c1 FROM v0, t0 GROUP BY t0.c0, t0.c1;
SELECT ALL v0.c0 FROM t0 NATURAL JOIN v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM t0 NOT INDEXED NATURAL JOIN v0 GROUP BY v0.c0 HAVING COUNT(*) UNION ALL SELECT ALL v0.c0 FROM t0 NATURAL JOIN v0 GROUP BY v0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT v0.c0 FROM t0 NATURAL JOIN v0 GROUP BY v0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL v0.c0 FROM t0 NATURAL JOIN v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM t0 NOT INDEXED NATURAL JOIN v0 GROUP BY v0.c0 HAVING COUNT(*) UNION ALL SELECT ALL v0.c0 FROM t0 NATURAL JOIN v0 GROUP BY v0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT v0.c0 FROM t0 NATURAL JOIN v0 GROUP BY v0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL v0.c0 FROM t0 NATURAL JOIN v0 GROUP BY v0.c0;
SELECT ALL t0.c1 FROM v0 LEFT OUTER JOIN t0 ON ((((((((NULL)AND(v0.c0)))AND(t0.c2)))OR(t0.c0)))AND(v0.c0)) COLLATE BINARY;
SELECT ALL t0.c1 FROM v0 LEFT OUTER JOIN t0 ON ((((((((NULL)AND(v0.c0)))AND(t0.c2)))OR(t0.c0)))AND(v0.c0)) COLLATE BINARY WHERE (((CASE WHEN t0.c0 THEN t0.c0 END) IS TRUE)) UNION ALL SELECT t0.c1 FROM v0 LEFT OUTER JOIN t0 ON ((((((((NULL)AND(v0.c0)))AND(t0.c2)))OR(t0.c0)))AND(v0.c0)) COLLATE BINARY WHERE ((NOT (((CASE WHEN t0.c0 THEN t0.c0 END) IS TRUE)))) UNION ALL SELECT ALL t0.c1 FROM v0 LEFT OUTER JOIN t0 ON ((((((((NULL)AND(v0.c0)))AND(t0.c2)))OR(t0.c0)))AND(v0.c0)) COLLATE BINARY WHERE (((((CASE WHEN t0.c0 THEN t0.c0 END) IS TRUE)) ISNULL));
SELECT ALL t0.c1 FROM v0 LEFT OUTER JOIN t0 ON ((((((((NULL)AND(v0.c0)))AND(t0.c2)))OR(t0.c0)))AND(v0.c0)) COLLATE BINARY;
SELECT DISTINCT t0.c1, t0.c0, t0.c2 FROM v0 INNER JOIN t0 ON ((((t0.c0) NOT NULL)) NOTNULL);
SELECT DISTINCT t0.c1, t0.c0, t0.c2 FROM v0 INNER JOIN t0 ON ((((t0.c0) NOT NULL)) NOTNULL) WHERE (((((t0.c1)GLOB(t0.c0)))<(NULL))) UNION SELECT DISTINCT t0.c1, t0.c0, t0.c2 FROM v0 INNER JOIN t0 ON ((((t0.c0) NOT NULL)) NOTNULL) WHERE ((NOT (((((t0.c1)GLOB(t0.c0)))<(NULL))))) UNION SELECT DISTINCT t0.c1, t0.c0, t0.c2 FROM v0 INNER JOIN t0 ON ((((t0.c0) NOT NULL)) NOTNULL) WHERE (((((((t0.c1)GLOB(t0.c0)))<(NULL))) ISNULL));
SELECT DISTINCT t0.c1, t0.c0, t0.c2 FROM v0 INNER JOIN t0 ON ((((t0.c0) NOT NULL)) NOTNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (CASE ((v0.c0)IS(0.22745579055912357))  WHEN ((v0.c0) ISNULL) THEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) WHEN v0.c0 THEN CASE WHEN 'Nv]\[/磘>' THEN v0.c0 END WHEN ((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))OR(v0.c0)))AND(v0.c0)) THEN v0.c0 END) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (CASE ((v0.c0)IS(0.22745579055912357))  WHEN ((v0.c0) ISNULL) THEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) WHEN v0.c0 THEN CASE WHEN 'Nv]\[/磘>' THEN v0.c0 END WHEN ((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))OR(v0.c0)))AND(v0.c0)) THEN v0.c0 END))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE (((CASE ((v0.c0)IS(0.22745579055912357))  WHEN ((v0.c0) ISNULL) THEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) WHEN v0.c0 THEN CASE WHEN 'Nv]\[/磘>' THEN v0.c0 END WHEN ((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))OR(v0.c0)))AND(v0.c0)) THEN v0.c0 END) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING GROUP_CONCAT(MAX(v0.c0)) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (GROUP_CONCAT(MAX(v0.c0)))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((GROUP_CONCAT(MAX(v0.c0))) ISNULL);
SELECT ALL * FROM t0;
SELECT ALL * FROM t0 WHERE ((NOT (CASE WHEN t0.c2 THEN t0.c0 WHEN t0.c2 THEN t0.c0 WHEN t0.c1 THEN t0.c2 END))) UNION ALL SELECT ALL * FROM t0 WHERE ((NOT ((NOT (CASE WHEN t0.c2 THEN t0.c0 WHEN t0.c2 THEN t0.c0 WHEN t0.c1 THEN t0.c2 END))))) UNION ALL SELECT ALL * FROM t0 WHERE ((((NOT (CASE WHEN t0.c2 THEN t0.c0 WHEN t0.c2 THEN t0.c0 WHEN t0.c1 THEN t0.c2 END))) ISNULL));
SELECT ALL * FROM t0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (((((((v0.c0) BETWEEN (x'') AND (v0.c0)))OR(((v0.c0) IS TRUE))))AND(((v0.c0) NOTNULL)))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (((((((v0.c0) BETWEEN (x'') AND (v0.c0)))OR(((v0.c0) IS TRUE))))AND(((v0.c0) NOTNULL)))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((((((((v0.c0) BETWEEN (x'') AND (v0.c0)))OR(((v0.c0) IS TRUE))))AND(((v0.c0) NOTNULL)))) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT t0.c2, t0.c0 FROM t0, v0 GROUP BY t0.c2, t0.c0;
SELECT ALL t0.c2, t0.c0 FROM t0, v0 WHERE ((((((t0.c0)) BETWEEN ((-1.956337384E9)) AND ((t0.c2)))) NOTNULL)) GROUP BY t0.c2, t0.c0 UNION SELECT t0.c2, t0.c0 FROM t0, v0 WHERE ((NOT ((((((t0.c0)) BETWEEN ((-1.956337384E9)) AND ((t0.c2)))) NOTNULL)))) GROUP BY t0.c2, t0.c0 UNION SELECT t0.c2, t0.c0 FROM t0, v0 WHERE ((((((((t0.c0)) BETWEEN ((-1.956337384E9)) AND ((t0.c2)))) NOTNULL)) ISNULL)) GROUP BY t0.c2, t0.c0;
SELECT t0.c2, t0.c0 FROM t0, v0 GROUP BY t0.c2, t0.c0;
SELECT t0.c1, t0.c0, t0.c2 FROM t0 GROUP BY t0.c1, t0.c0, t0.c2;
SELECT t0.c1, t0.c0, t0.c2 FROM t0 GROUP BY t0.c1, t0.c0, t0.c2 HAVING (MIN(GROUP_CONCAT(t0.c1)) IN ()) UNION ALL SELECT ALL t0.c1, t0.c0, t0.c2 FROM t0 GROUP BY t0.c1, t0.c0, t0.c2 HAVING (NOT ((MIN(GROUP_CONCAT(t0.c1)) IN ()))) UNION ALL SELECT t0.c1, t0.c0, t0.c2 FROM t0 GROUP BY t0.c1, t0.c0, t0.c2 HAVING (((MIN(GROUP_CONCAT(t0.c1)) IN ())) ISNULL);
SELECT t0.c1, t0.c0, t0.c2 FROM t0 GROUP BY t0.c1, t0.c0, t0.c2;
SELECT t0.c1, t0.c0, t0.c2 FROM t0 GROUP BY t0.c1, t0.c0, t0.c2 HAVING (MIN(GROUP_CONCAT(t0.c1)) IN ()) UNION ALL SELECT ALL t0.c1, t0.c0, t0.c2 FROM t0 GROUP BY t0.c1, t0.c0, t0.c2 HAVING (NOT ((MIN(GROUP_CONCAT(t0.c1)) IN ()))) UNION ALL SELECT t0.c1, t0.c0, t0.c2 FROM t0 GROUP BY t0.c1, t0.c0, t0.c2 HAVING (((MIN(GROUP_CONCAT(t0.c1)) IN ())) ISNULL);
SELECT t0.c1, t0.c0, t0.c2 FROM t0 GROUP BY t0.c1, t0.c0, t0.c2;
SELECT ALL * FROM t0 LEFT OUTER JOIN v0 ON ((((CAST(t0.c2 AS BLOB))OR(CASE WHEN t0.c0 THEN '2X' WHEN 0.7214428434571372 THEN t0.c0 WHEN t0.c0 THEN t0.c2 ELSE v0.c0 END)))AND(0.8416365902701642));
SELECT ALL * FROM t0 LEFT OUTER JOIN v0 ON ((((CAST(t0.c2 AS BLOB))OR(CASE WHEN t0.c0 THEN '2X' WHEN 0.7214428434571372 THEN t0.c0 WHEN t0.c0 THEN t0.c2 ELSE v0.c0 END)))AND(0.8416365902701642)) WHERE ((t0.c1 IN ()) COLLATE RTRIM) UNION ALL SELECT * FROM t0 LEFT OUTER JOIN v0 ON ((((CAST(t0.c2 AS BLOB))OR(CASE WHEN t0.c0 THEN '2X' WHEN 0.7214428434571372 THEN t0.c0 WHEN t0.c0 THEN t0.c2 ELSE v0.c0 END)))AND(0.8416365902701642)) WHERE ((NOT ((t0.c1 IN ()) COLLATE RTRIM))) UNION ALL SELECT ALL * FROM t0 LEFT OUTER JOIN v0 ON ((((CAST(t0.c2 AS BLOB))OR(CASE WHEN t0.c0 THEN '2X' WHEN 0.7214428434571372 THEN t0.c0 WHEN t0.c0 THEN t0.c2 ELSE v0.c0 END)))AND(0.8416365902701642)) WHERE ((((t0.c1 IN ()) COLLATE RTRIM) ISNULL));
SELECT ALL * FROM t0 LEFT OUTER JOIN v0 ON ((((CAST(t0.c2 AS BLOB))OR(CASE WHEN t0.c0 THEN '2X' WHEN 0.7214428434571372 THEN t0.c0 WHEN t0.c0 THEN t0.c2 ELSE v0.c0 END)))AND(0.8416365902701642));
SELECT DISTINCT t0.c0, t0.c2 FROM t0 NATURAL JOIN v0;
SELECT DISTINCT t0.c0, t0.c2 FROM t0 NATURAL JOIN v0 WHERE (CASE WHEN ((t0.c1) ISNULL) THEN ((t0.c1)AND(t0.c0)) WHEN CAST(t0.c0 AS NUMERIC) THEN (((v0.c0))<=((v0.c0))) WHEN t0.c0 COLLATE BINARY THEN ((t0.c2) BETWEEN (t0.c2) AND (t0.c1)) END) UNION SELECT DISTINCT t0.c0, t0.c2 FROM t0 NATURAL JOIN v0 WHERE ((NOT (CASE WHEN ((t0.c1) ISNULL) THEN ((t0.c1)AND(t0.c0)) WHEN CAST(t0.c0 AS NUMERIC) THEN (((v0.c0))<=((v0.c0))) WHEN t0.c0 COLLATE BINARY THEN ((t0.c2) BETWEEN (t0.c2) AND (t0.c1)) END))) UNION SELECT DISTINCT t0.c0, t0.c2 FROM t0 NATURAL JOIN v0 WHERE (((CASE WHEN ((t0.c1) ISNULL) THEN ((t0.c1)AND(t0.c0)) WHEN CAST(t0.c0 AS NUMERIC) THEN (((v0.c0))<=((v0.c0))) WHEN t0.c0 COLLATE BINARY THEN ((t0.c2) BETWEEN (t0.c2) AND (t0.c1)) END) ISNULL));
SELECT DISTINCT t0.c0, t0.c2 FROM t0 NATURAL JOIN v0;
SELECT ALL v0.c0 FROM v0 RIGHT OUTER JOIN t0 ON CASE WHEN (NOT (t0.c0)) THEN CASE t0.c1  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN t0.c1 WHEN t0.c2 THEN t0.c2 END END GROUP BY v0.c0;
SELECT v0.c0 FROM v0 RIGHT OUTER JOIN t0 ON CASE WHEN (NOT (t0.c0)) THEN CASE t0.c1  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN t0.c1 WHEN t0.c2 THEN t0.c2 END END WHERE (((((LOWER(DISTINCT t0.c0))AND((t0.c0 IN (v0.c0)))))AND(((t0.c1)+(t0.c0))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 RIGHT OUTER JOIN t0 ON CASE WHEN (NOT (t0.c0)) THEN CASE t0.c1  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN t0.c1 WHEN t0.c2 THEN t0.c2 END END WHERE ((NOT (((((LOWER(DISTINCT t0.c0))AND((t0.c0 IN (v0.c0)))))AND(((t0.c1)+(t0.c0))))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 RIGHT OUTER JOIN t0 ON CASE WHEN (NOT (t0.c0)) THEN CASE t0.c1  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN t0.c1 WHEN t0.c2 THEN t0.c2 END END WHERE (((((((LOWER(DISTINCT t0.c0))AND((t0.c0 IN (v0.c0)))))AND(((t0.c1)+(t0.c0))))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 RIGHT OUTER JOIN t0 ON CASE WHEN (NOT (t0.c0)) THEN CASE t0.c1  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN t0.c1 WHEN t0.c2 THEN t0.c2 END END GROUP BY v0.c0;
SELECT ALL v0.c0 FROM t0, v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM t0, v0 GROUP BY v0.c0 HAVING ((t0.c0) NOT BETWEEN (t0.c1 COLLATE NOCASE) AND (GROUP_CONCAT(TOTAL(COUNT(*))))) UNION ALL SELECT ALL v0.c0 FROM t0, v0 GROUP BY v0.c0 HAVING (NOT (((t0.c0) NOT BETWEEN (t0.c1 COLLATE NOCASE) AND (GROUP_CONCAT(TOTAL(COUNT(*))))))) UNION ALL SELECT v0.c0 FROM t0, v0 GROUP BY v0.c0 HAVING ((((t0.c0) NOT BETWEEN (t0.c1 COLLATE NOCASE) AND (GROUP_CONCAT(TOTAL(COUNT(*)))))) ISNULL);
SELECT TOTAL(CAST(t0.c0 AS REAL) COLLATE RTRIM) FROM t0;
SELECT ALL * FROM t0;
SELECT * FROM t0 WHERE (t0.c2) UNION ALL SELECT ALL * FROM t0 WHERE ((NOT (t0.c2))) UNION ALL SELECT * FROM t0 WHERE (((t0.c2) ISNULL));
SELECT ALL * FROM t0;
SELECT DISTINCT t0.c2, t0.c0 FROM t0;
SELECT DISTINCT t0.c2, t0.c0 FROM t0 WHERE (((((t0.c1))>=((t0.c1))) IN (((t0.c0) ISNULL)))) UNION SELECT DISTINCT t0.c2, t0.c0 FROM t0 WHERE ((NOT (((((t0.c1))>=((t0.c1))) IN (((t0.c0) ISNULL)))))) UNION SELECT DISTINCT t0.c2, t0.c0 FROM t0 WHERE (((((((t0.c1))>=((t0.c1))) IN (((t0.c0) ISNULL)))) ISNULL));
SELECT DISTINCT t0.c2, t0.c0 FROM t0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (CASE v0.c0  WHEN v0.c0 THEN v0.c0 END COLLATE BINARY) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT (CASE v0.c0  WHEN v0.c0 THEN v0.c0 END COLLATE BINARY))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE (((CASE v0.c0  WHEN v0.c0 THEN v0.c0 END COLLATE BINARY) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0, t0.c0, t0.c2 FROM v0, t0 GROUP BY v0.c0, t0.c0, t0.c2;
SELECT ALL v0.c0, t0.c0, t0.c2 FROM v0, t0 GROUP BY v0.c0, t0.c0, t0.c2 HAVING COUNT(*) UNION ALL SELECT v0.c0, t0.c0, t0.c2 FROM v0, t0 GROUP BY v0.c0, t0.c0, t0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL v0.c0, t0.c0, t0.c2 FROM v0, t0 GROUP BY v0.c0, t0.c0, t0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT ALL v0.c0, t0.c0, t0.c2 FROM v0, t0 GROUP BY v0.c0, t0.c0, t0.c2;
SELECT ALL v0.c0, t0.c0, t0.c2 FROM v0, t0 GROUP BY v0.c0, t0.c0, t0.c2 HAVING COUNT(*) UNION ALL SELECT v0.c0, t0.c0, t0.c2 FROM v0, t0 GROUP BY v0.c0, t0.c0, t0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL v0.c0, t0.c0, t0.c2 FROM v0, t0 GROUP BY v0.c0, t0.c0, t0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT ALL v0.c0, t0.c0, t0.c2 FROM v0, t0 GROUP BY v0.c0, t0.c0, t0.c2;
SELECT * FROM v0, t0;
SELECT * FROM v0, t0 WHERE (v0.c0) UNION ALL SELECT * FROM v0, t0 WHERE ((NOT (v0.c0))) UNION ALL SELECT ALL * FROM v0, t0 WHERE (((v0.c0) ISNULL));
SELECT * FROM v0, t0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE ((((t0.c2)) NOT BETWEEN (((((t0.c1, t0.c0, t0.c2)) NOT BETWEEN ((t0.c0, '\+', t0.c1)) AND ((t0.c1, t0.c0, t0.c2))))) AND ((((t0.c1)||(t0.c1)))))) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT ((((t0.c2)) NOT BETWEEN (((((t0.c1, t0.c0, t0.c2)) NOT BETWEEN ((t0.c0, '\+', t0.c1)) AND ((t0.c1, t0.c0, t0.c2))))) AND ((((t0.c1)||(t0.c1)))))))) UNION SELECT DISTINCT * FROM t0 WHERE ((((((t0.c2)) NOT BETWEEN (((((t0.c1, t0.c0, t0.c2)) NOT BETWEEN ((t0.c0, '\+', t0.c1)) AND ((t0.c1, t0.c0, t0.c2))))) AND ((((t0.c1)||(t0.c1)))))) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (0.8091337202211105) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (0.8091337202211105))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((0.8091337202211105) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM t0 RIGHT OUTER JOIN v0 ON ((((t0.c1)OR(t0.c2)))OR(t0.c2)) COLLATE BINARY GROUP BY v0.c0;
SELECT v0.c0 FROM t0 RIGHT OUTER JOIN v0 ON ((((t0.c1)OR(t0.c2)))OR(t0.c2)) COLLATE BINARY GROUP BY v0.c0 HAVING SUM(MIN(SUM(t0.c2))) UNION ALL SELECT v0.c0 FROM t0 RIGHT OUTER JOIN v0 ON ((((t0.c1)OR(t0.c2)))OR(t0.c2)) COLLATE BINARY GROUP BY v0.c0 HAVING (NOT (SUM(MIN(SUM(t0.c2))))) UNION ALL SELECT ALL v0.c0 FROM t0 RIGHT OUTER JOIN v0 ON ((((t0.c1)OR(t0.c2)))OR(t0.c2)) COLLATE BINARY GROUP BY v0.c0 HAVING ((SUM(MIN(SUM(t0.c2)))) ISNULL);
SELECT ALL * FROM v0, t0;
SELECT * FROM v0, t0 WHERE (0x245fda01) ORDER BY (~ (t0.c2)) COLLATE NOCASE ASC;
SELECT * FROM v0, t0 WHERE ((NOT (0X245fda01))) ORDER BY (~ (t0.c2)) COLLATE NOCASE ASC;
SELECT * FROM v0, t0 NOT INDEXED WHERE (((0x245fda01) ISNULL)) ORDER BY (~ (t0.c2)) COLLATE NOCASE ASC;
SELECT ALL * FROM v0, t0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE ((((t0.c1 IN ())) IS TRUE)) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT ((((t0.c1 IN ())) IS TRUE)))) UNION SELECT DISTINCT * FROM t0 WHERE ((((((t0.c1 IN ())) IS TRUE)) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (CASE ((((v0.c0)AND(v0.c0)))OR(v0.c0))  WHEN '6q\bd/' THEN (v0.c0 IN (v0.c0)) END) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (CASE ((((v0.c0)AND(v0.c0)))OR(v0.c0))  WHEN '6q\bd/' THEN (v0.c0 IN (v0.c0)) END))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((CASE ((((v0.c0)AND(v0.c0)))OR(v0.c0))  WHEN '6q\bd/' THEN (v0.c0 IN (v0.c0)) END) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((((((((((v0.c0) ISNULL))OR(v0.c0)))OR((AVG(x'') IN ()))))AND(GROUP_CONCAT(AVG(AVG(GROUP_CONCAT(MIN(v0.c0))))))))OR(MAX(TOTAL(v0.c0)))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (((((((((((v0.c0) ISNULL))OR(v0.c0)))OR((AVG(x'') IN ()))))AND(GROUP_CONCAT(AVG(AVG(GROUP_CONCAT(MIN(v0.c0))))))))OR(MAX(TOTAL(v0.c0)))))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((((((((((((v0.c0) ISNULL))OR(v0.c0)))OR((AVG(x'') IN ()))))AND(GROUP_CONCAT(AVG(AVG(GROUP_CONCAT(MIN(v0.c0))))))))OR(MAX(TOTAL(v0.c0))))) ISNULL);
SELECT ALL t0.c1, t0.c0, v0.c0, t0.c2 FROM v0 FULL OUTER JOIN t0 ON (v0.c0 COLLATE NOCASE IN ());
SELECT ALL t0.c1, t0.c0, v0.c0, t0.c2 FROM v0 FULL OUTER JOIN t0 ON (v0.c0 COLLATE NOCASE IN ()) WHERE (((-1.219564603E9)>=(t0.c1))) UNION ALL SELECT ALL t0.c1, t0.c0, v0.c0, t0.c2 FROM v0 FULL OUTER JOIN t0 ON (v0.c0 COLLATE NOCASE IN ()) WHERE ((NOT (((-1.219564603E9)>=(t0.c1))))) UNION ALL SELECT t0.c1, t0.c0, v0.c0, t0.c2 FROM v0 FULL OUTER JOIN t0 ON (v0.c0 COLLATE NOCASE IN ()) WHERE (((((-1.219564603E9)>=(t0.c1))) ISNULL));
SELECT ALL t0.c1, t0.c0, v0.c0, t0.c2 FROM v0 FULL OUTER JOIN t0 ON (v0.c0 COLLATE NOCASE IN ());
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE ('773562844') UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT ('773562844'))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((('773562844') ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT t0.c0, t0.c2, t0.c1, v0.c0 FROM v0, t0 GROUP BY t0.c0, t0.c2, t0.c1, v0.c0;
SELECT t0.c0, t0.c2, t0.c1, v0.c0 FROM v0, t0 WHERE ((((CAST(v0.c0 AS INTEGER)))>=((t0.c0 COLLATE RTRIM)))) GROUP BY t0.c0, t0.c2, t0.c1, v0.c0 UNION SELECT t0.c0, t0.c2, t0.c1, v0.c0 FROM v0, t0 WHERE ((NOT ((((CAST(v0.c0 AS INTEGER)))>=((t0.c0 COLLATE RTRIM)))))) GROUP BY t0.c0, t0.c2, t0.c1, v0.c0 UNION SELECT t0.c0, t0.c2, t0.c1, v0.c0 FROM v0, t0 WHERE ((((((CAST(v0.c0 AS INTEGER)))>=((t0.c0 COLLATE RTRIM)))) ISNULL)) GROUP BY t0.c0, t0.c2, t0.c1, v0.c0;
SELECT t0.c0, t0.c2, t0.c1, v0.c0 FROM v0, t0 GROUP BY t0.c0, t0.c2, t0.c1, v0.c0;
SELECT ALL t0.c0 FROM v0, t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM v0, t0 GROUP BY t0.c0 HAVING MAX(((GROUP_CONCAT('')) IS TRUE)) UNION ALL SELECT ALL t0.c0 FROM v0, t0 GROUP BY t0.c0 HAVING (NOT (MAX(((GROUP_CONCAT('')) IS TRUE)))) UNION ALL SELECT t0.c0 FROM v0, t0 GROUP BY t0.c0 HAVING ((MAX(((GROUP_CONCAT('')) IS TRUE))) ISNULL);
SELECT * FROM t0;
SELECT ALL * FROM t0 WHERE (((((((((t0.c0)AND(((((((((((((0.6780526652927465)OR(t0.c0)))OR(t0.c2)))OR(t0.c2)))AND(t0.c0)))OR(t0.c2)))AND(t0.c0)))))OR(json_type('-1956337384'))))OR(NULL)))OR(0.0))) UNION ALL SELECT * FROM t0 WHERE ((NOT (((((((((t0.c0)AND(((((((((((((0.6780526652927465)OR(t0.c0)))OR(t0.c2)))OR(t0.c2)))AND(t0.c0)))OR(t0.c2)))AND(t0.c0)))))OR(json_type('-1956337384'))))OR(NULL)))OR(0.0))))) UNION ALL SELECT ALL * FROM t0 WHERE (((((((((((t0.c0)AND(((((((((((((0.6780526652927465)OR(t0.c0)))OR(t0.c2)))OR(t0.c2)))AND(t0.c0)))OR(t0.c2)))AND(t0.c0)))))OR(json_type('-1956337384'))))OR(NULL)))OR(0.0))) ISNULL));
SELECT * FROM t0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE ((((((v0.c0))>((v0.c0)))) NOT BETWEEN (((v0.c0) IS TRUE)) AND (((v0.c0) NOTNULL)))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT ((((((v0.c0))>((v0.c0)))) NOT BETWEEN (((v0.c0) IS TRUE)) AND (((v0.c0) NOTNULL)))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((((((((v0.c0))>((v0.c0)))) NOT BETWEEN (((v0.c0) IS TRUE)) AND (((v0.c0) NOTNULL)))) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (LIKELY(DISTINCT ((v0.c0)GLOB(v0.c0)))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT (LIKELY(DISTINCT ((v0.c0)GLOB(v0.c0)))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((LIKELY(DISTINCT ((v0.c0)GLOB(v0.c0)))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL t0.c2, v0.c0, t0.c0, t0.c1 FROM t0 FULL OUTER JOIN v0 ON (((((t0.c0) IS FALSE)))==(((- ('<k*]'))))) GROUP BY t0.c2, v0.c0, t0.c0, t0.c1;
SELECT t0.c2, v0.c0, t0.c0, t0.c1 FROM t0 FULL OUTER JOIN v0 ON (((((t0.c0) IS FALSE)))=(((- ('<k*]'))))) GROUP BY t0.c2, v0.c0, t0.c0, t0.c1 HAVING ((GROUP_CONCAT(AVG(t0.c2))) ISNULL) UNION ALL SELECT t0.c2, v0.c0, t0.c0, t0.c1 FROM t0 FULL OUTER JOIN v0 ON (((((t0.c0) IS FALSE)))=(((- ('<k*]'))))) GROUP BY t0.c2, v0.c0, t0.c0, t0.c1 HAVING (NOT (((GROUP_CONCAT(AVG(t0.c2))) ISNULL))) UNION ALL SELECT ALL t0.c2, v0.c0, t0.c0, t0.c1 FROM t0 FULL OUTER JOIN v0 ON (((((t0.c0) IS FALSE)))=(((- ('<k*]'))))) GROUP BY t0.c2, v0.c0, t0.c0, t0.c1 HAVING ((((GROUP_CONCAT(AVG(t0.c2))) ISNULL)) ISNULL);
SELECT ALL t0.c0 FROM t0;
SELECT ALL t0.c0 FROM t0 WHERE (((x'')>=(CASE WHEN t0.c2 THEN 1647801214 WHEN t0.c2 THEN t0.c1 WHEN t0.c1 THEN t0.c1 ELSE t0.c1 END))) UNION ALL SELECT ALL t0.c0 FROM t0 WHERE ((NOT (((x'')>=(CASE WHEN t0.c2 THEN 1647801214 WHEN t0.c2 THEN t0.c1 WHEN t0.c1 THEN t0.c1 ELSE t0.c1 END))))) UNION ALL SELECT ALL t0.c0 FROM t0 WHERE (((((x'')>=(CASE WHEN t0.c2 THEN 1647801214 WHEN t0.c2 THEN t0.c1 WHEN t0.c1 THEN t0.c1 ELSE t0.c1 END))) ISNULL));
SELECT ALL t0.c0 FROM t0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (((((((((((v0.c0) ISNULL))AND(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))))OR((v0.c0 IN ()))))AND((v0.c0 IN ()))))AND(CAST(v0.c0 AS NUMERIC)))) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (((((((((((v0.c0) ISNULL))AND(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))))OR((v0.c0 IN ()))))AND((v0.c0 IN ()))))AND(CAST(v0.c0 AS NUMERIC)))))) UNION SELECT DISTINCT * FROM v0 WHERE (((((((((((((v0.c0) ISNULL))AND(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))))OR((v0.c0 IN ()))))AND((v0.c0 IN ()))))AND(CAST(v0.c0 AS NUMERIC)))) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (SQLITE_VERSION()) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT (SQLITE_VERSION()))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((SQLITE_VERSION()) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING SUM(GROUP_CONCAT(NULL)) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (SUM(GROUP_CONCAT(NULL)))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((SUM(GROUP_CONCAT(NULL))) ISNULL);
SELECT MAX(((((((t0.c1)AND(t0.c0)))OR(t0.c2))) BETWEEN (((((x'')AND(v0.c0)))OR(t0.c0))) AND (((v0.c0) NOTNULL)))) FROM t0 NOT INDEXED, v0;
SELECT ALL * FROM v0, t0;
SELECT ALL * FROM v0, t0 WHERE (t0.c1) ORDER BY ((t0.c1)>>((516884857 IN (v0.c0, t0.c0)))) DESC;
SELECT ALL * FROM v0, t0 WHERE ((NOT (t0.c1))) ORDER BY ((t0.c1)>>((516884857 IN (v0.c0, t0.c0)))) DESC;
SELECT ALL * FROM v0, t0 WHERE (((t0.c1) ISNULL)) ORDER BY ((t0.c1)>>((516884857 IN (v0.c0, t0.c0)))) DESC;
SELECT ALL * FROM v0, t0;
SELECT DISTINCT t0.c1, t0.c2, t0.c0 FROM t0;
SELECT DISTINCT t0.c1, t0.c2, t0.c0 FROM t0 WHERE (((CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c1 THEN x'' WHEN t0.c0 THEN t0.c2 ELSE t0.c2 END)&(((t0.c1) BETWEEN (0.3608424621559626) AND (t0.c0))))) UNION SELECT DISTINCT t0.c1, t0.c2, t0.c0 FROM t0 WHERE ((NOT (((CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c1 THEN x'' WHEN t0.c0 THEN t0.c2 ELSE t0.c2 END)&(((t0.c1) BETWEEN (0.3608424621559626) AND (t0.c0))))))) UNION SELECT DISTINCT t0.c1, t0.c2, t0.c0 FROM t0 WHERE (((((CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c1 THEN x'' WHEN t0.c0 THEN t0.c2 ELSE t0.c2 END)&(((t0.c1) BETWEEN (0.3608424621559626) AND (t0.c0))))) ISNULL));
SELECT DISTINCT t0.c1, t0.c2, t0.c0 FROM t0;
SELECT ALL t0.c2, t0.c0 FROM t0, v0 GROUP BY t0.c2, t0.c0;
SELECT t0.c2, t0.c0 FROM t0, v0 WHERE ((t0.c2 IN (t0.c1)) COLLATE RTRIM) GROUP BY t0.c2, t0.c0 UNION SELECT ALL t0.c2, t0.c0 FROM t0, v0 WHERE ((NOT ((t0.c2 IN (t0.c1)) COLLATE RTRIM))) GROUP BY t0.c2, t0.c0 UNION SELECT ALL t0.c2, t0.c0 FROM t0, v0 WHERE ((((t0.c2 IN (t0.c1)) COLLATE RTRIM) ISNULL)) GROUP BY t0.c2, t0.c0;
SELECT ALL t0.c2, t0.c0 FROM t0, v0 GROUP BY t0.c2, t0.c0;
SELECT t0.c2 FROM t0 GROUP BY t0.c2;
SELECT t0.c2 FROM t0 GROUP BY t0.c2 HAVING AVG(((AVG(t0.c2))!=(SUM(t0.c0)))) UNION ALL SELECT ALL t0.c2 FROM t0 GROUP BY t0.c2 HAVING (NOT (AVG(((AVG(t0.c2))<>(SUM(t0.c0)))))) UNION ALL SELECT t0.c2 FROM t0 GROUP BY t0.c2 HAVING ((AVG(((AVG(t0.c2))!=(SUM(t0.c0))))) ISNULL);
SELECT ALL MIN(v0.c0) FROM v0;
SELECT ALL * FROM t0 INNER JOIN v0 ON ((((t0.c2)GLOB(t0.c2))) NOT NULL);
SELECT * FROM t0 INNER JOIN v0 ON ((((t0.c2)GLOB(t0.c2))) NOT NULL) WHERE (CASE WHEN t0.c2 THEN v0.c0 END COLLATE RTRIM) UNION ALL SELECT * FROM t0 INNER JOIN v0 ON ((((t0.c2)GLOB(t0.c2))) NOT NULL) WHERE ((NOT (CASE WHEN t0.c2 THEN v0.c0 END COLLATE RTRIM))) UNION ALL SELECT * FROM t0 INNER JOIN v0 ON ((((t0.c2)GLOB(t0.c2))) NOT NULL) WHERE (((CASE WHEN t0.c2 THEN v0.c0 END COLLATE RTRIM) ISNULL));
SELECT ALL * FROM t0 INNER JOIN v0 ON ((((t0.c2)GLOB(t0.c2))) NOT NULL);
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE ((((v0.c0 IN ())) NOT BETWEEN ((NOT (228532488))) AND (((v0.c0)<<('C'))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT ((((v0.c0 IN ())) NOT BETWEEN ((NOT (228532488))) AND (((v0.c0)<<('C'))))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((((((v0.c0 IN ())) NOT BETWEEN ((NOT (228532488))) AND (((v0.c0)<<('C'))))) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE ('-1763119264') GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT ('-1763119264'))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((('-1763119264') ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT t0.c1, t0.c0, t0.c2 FROM t0 GROUP BY t0.c1, t0.c0, t0.c2;
SELECT ALL t0.c1, t0.c0, t0.c2 FROM t0 GROUP BY t0.c1, t0.c0, t0.c2 HAVING TRIM(DISTINCT GROUP_CONCAT(MIN(t0.c0)), t0.c0) UNION ALL SELECT ALL t0.c1, t0.c0, t0.c2 FROM t0 GROUP BY t0.c1, t0.c0, t0.c2 HAVING (NOT (TRIM(DISTINCT GROUP_CONCAT(MIN(t0.c0)), t0.c0))) UNION ALL SELECT ALL t0.c1, t0.c0, t0.c2 FROM t0 GROUP BY t0.c1, t0.c0, t0.c2 HAVING ((TRIM(DISTINCT GROUP_CONCAT(MIN(t0.c0)), t0.c0)) ISNULL);
SELECT ALL t0.c2 FROM v0 LEFT OUTER JOIN t0 ON ((((t0.c0)>>(v0.c0))) ISNULL);
SELECT ALL t0.c2 FROM v0 LEFT OUTER JOIN t0 ON ((((t0.c0)>>(v0.c0))) ISNULL) WHERE ((((t0.c1 IN ())) NOT BETWEEN ((t0.c1 IN (t0.c0))) AND (LIKELY(DISTINCT v0.c0)))) UNION ALL SELECT ALL t0.c2 FROM v0 LEFT OUTER JOIN t0 ON ((((t0.c0)>>(v0.c0))) ISNULL) WHERE ((NOT ((((t0.c1 IN ())) NOT BETWEEN ((t0.c1 IN (t0.c0))) AND (LIKELY(DISTINCT v0.c0)))))) UNION ALL SELECT t0.c2 FROM v0 LEFT OUTER JOIN t0 ON ((((t0.c0)>>(v0.c0))) ISNULL) WHERE ((((((t0.c1 IN ())) NOT BETWEEN ((t0.c1 IN (t0.c0))) AND (LIKELY(DISTINCT v0.c0)))) ISNULL));
SELECT ALL t0.c2 FROM v0 LEFT OUTER JOIN t0 ON ((((t0.c0)>>(v0.c0))) ISNULL);
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (((CAST(t0.c1 AS NUMERIC)) ISNULL)) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (((CAST(t0.c1 AS NUMERIC)) ISNULL)))) UNION SELECT DISTINCT * FROM t0 WHERE (((((CAST(t0.c1 AS NUMERIC)) ISNULL)) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT ALL t0.c0, t0.c1, t0.c2 FROM v0 RIGHT OUTER JOIN t0 ON (((NULL IN ())) BETWEEN ((t0.c0 IN (t0.c1))) AND (((t0.c2) IS FALSE))) GROUP BY t0.c0, t0.c1, t0.c2;
SELECT t0.c0, t0.c1, t0.c2 FROM v0 RIGHT OUTER JOIN t0 ON (((NULL IN ())) BETWEEN ((t0.c0 IN (t0.c1))) AND (((t0.c2) IS FALSE))) WHERE (v0.c0) GROUP BY t0.c0, t0.c1, t0.c2 UNION SELECT ALL t0.c0, t0.c1, t0.c2 FROM v0 RIGHT OUTER JOIN t0 ON (((NULL IN ())) BETWEEN ((t0.c0 IN (t0.c1))) AND (((t0.c2) IS FALSE))) WHERE ((NOT (v0.c0))) GROUP BY t0.c0, t0.c1, t0.c2 UNION SELECT ALL t0.c0, t0.c1, t0.c2 FROM v0 RIGHT OUTER JOIN t0 ON (((NULL IN ())) BETWEEN ((t0.c0 IN (t0.c1))) AND (((t0.c2) IS FALSE))) WHERE (((v0.c0) ISNULL)) GROUP BY t0.c0, t0.c1, t0.c2;
SELECT ALL t0.c0, t0.c1, t0.c2 FROM v0 RIGHT OUTER JOIN t0 ON (((NULL IN ())) BETWEEN ((t0.c0 IN (t0.c1))) AND (((t0.c2) IS FALSE))) GROUP BY t0.c0, t0.c1, t0.c2;
SELECT t0.c2, t0.c0, t0.c1, v0.c0 FROM t0, v0 GROUP BY t0.c2, t0.c0, t0.c1, v0.c0;
SELECT t0.c2, t0.c0, t0.c1, v0.c0 FROM t0, v0 GROUP BY t0.c2, t0.c0, t0.c1, v0.c0 HAVING COUNT(t0.c2 COLLATE RTRIM) UNION ALL SELECT ALL t0.c2, t0.c0, t0.c1, v0.c0 FROM t0, v0 GROUP BY t0.c2, t0.c0, t0.c1, v0.c0 HAVING (NOT (COUNT(t0.c2 COLLATE RTRIM))) UNION ALL SELECT t0.c2, t0.c0, t0.c1, v0.c0 FROM t0, v0 GROUP BY t0.c2, t0.c0, t0.c1, v0.c0 HAVING ((COUNT(t0.c2 COLLATE RTRIM)) ISNULL);
SELECT t0.c2, t0.c0, t0.c1, v0.c0 FROM t0, v0 GROUP BY t0.c2, t0.c0, t0.c1, v0.c0;
SELECT t0.c2, t0.c0, t0.c1, v0.c0 FROM t0, v0 GROUP BY t0.c2, t0.c0, t0.c1, v0.c0 HAVING COUNT(t0.c2 COLLATE RTRIM) UNION ALL SELECT ALL t0.c2, t0.c0, t0.c1, v0.c0 FROM t0, v0 GROUP BY t0.c2, t0.c0, t0.c1, v0.c0 HAVING (NOT (COUNT(t0.c2 COLLATE RTRIM))) UNION ALL SELECT t0.c2, t0.c0, t0.c1, v0.c0 FROM t0, v0 GROUP BY t0.c2, t0.c0, t0.c1, v0.c0 HAVING ((COUNT(t0.c2 COLLATE RTRIM)) ISNULL);
SELECT t0.c2, t0.c0, t0.c1, v0.c0 FROM t0, v0 GROUP BY t0.c2, t0.c0, t0.c1, v0.c0;
SELECT * FROM v0, t0;
SELECT * FROM v0, t0 WHERE (((((t0.c0)%(t0.c2)))GLOB((- (t0.c0))))) UNION ALL SELECT ALL * FROM v0, t0 WHERE ((NOT (((((t0.c0)%(t0.c2)))GLOB((- (t0.c0))))))) UNION ALL SELECT * FROM v0, t0 WHERE (((((((t0.c0)%(t0.c2)))GLOB((- (t0.c0))))) ISNULL));
SELECT * FROM v0, t0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (CASE CAST(t0.c0 AS BLOB)  WHEN CASE WHEN t0.c0 THEN t0.c0 END THEN CASE t0.c1  WHEN t0.c0 THEN t0.c0 WHEN t0.c1 THEN t0.c1 WHEN t0.c0 THEN t0.c1 END END) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (CASE CAST(t0.c0 AS BLOB)  WHEN CASE WHEN t0.c0 THEN t0.c0 END THEN CASE t0.c1  WHEN t0.c0 THEN t0.c0 WHEN t0.c1 THEN t0.c1 WHEN t0.c0 THEN t0.c1 END END))) UNION SELECT DISTINCT * FROM t0 WHERE (((CASE CAST(t0.c0 AS BLOB)  WHEN CASE WHEN t0.c0 THEN t0.c0 END THEN CASE t0.c1  WHEN t0.c0 THEN t0.c0 WHEN t0.c1 THEN t0.c1 WHEN t0.c0 THEN t0.c1 END END) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT ALL t0.c0, t0.c2 FROM v0, t0 GROUP BY t0.c0, t0.c2;
SELECT ALL t0.c0, t0.c2 FROM v0, t0 WHERE ((((t0.c0)) NOT BETWEEN ((CAST('-835387127' AS TEXT))) AND ((((t0.c2)OR(t0.c2)))))) GROUP BY t0.c0, t0.c2 UNION SELECT t0.c0, t0.c2 FROM v0, t0 WHERE ((NOT ((((t0.c0)) NOT BETWEEN ((CAST('-835387127' AS TEXT))) AND ((((t0.c2)OR(t0.c2)))))))) GROUP BY t0.c0, t0.c2 UNION SELECT t0.c0, t0.c2 FROM v0, t0 WHERE ((((((t0.c0)) NOT BETWEEN ((CAST('-835387127' AS TEXT))) AND ((((t0.c2)OR(t0.c2)))))) ISNULL)) GROUP BY t0.c0, t0.c2;
SELECT ALL t0.c0, t0.c2 FROM v0, t0 GROUP BY t0.c0, t0.c2;
SELECT t0.c1 FROM v0, t0 GROUP BY t0.c1;
SELECT t0.c1 FROM v0, t0 GROUP BY t0.c1 HAVING MIN(((TOTAL(SUM(v0.c0))) IS TRUE)) UNION ALL SELECT t0.c1 FROM v0, t0 GROUP BY t0.c1 HAVING (NOT (MIN(((TOTAL(SUM(v0.c0))) IS TRUE)))) UNION ALL SELECT ALL t0.c1 FROM v0, t0 GROUP BY t0.c1 HAVING ((MIN(((TOTAL(SUM(v0.c0))) IS TRUE))) ISNULL);
SELECT ALL t0.c1, v0.c0 FROM t0, v0;
SELECT t0.c1, v0.c0 FROM t0, v0 WHERE (CAST(((t0.c0) NOT BETWEEN (v0.c0) AND (t0.c0)) AS BLOB)) UNION ALL SELECT t0.c1, v0.c0 FROM t0, v0 WHERE ((NOT (CAST(((t0.c0) NOT BETWEEN (v0.c0) AND (t0.c0)) AS BLOB)))) UNION ALL SELECT ALL t0.c1, v0.c0 FROM t0, v0 WHERE (((CAST(((t0.c0) NOT BETWEEN (v0.c0) AND (t0.c0)) AS BLOB)) ISNULL));
SELECT ALL t0.c1, v0.c0 FROM t0, v0;
SELECT DISTINCT * FROM t0 FULL OUTER JOIN v0 ON CAST(CAST(v0.c0 AS TEXT) AS NUMERIC);
SELECT DISTINCT * FROM t0 NOT INDEXED FULL OUTER JOIN v0 ON CAST(CAST(v0.c0 AS TEXT) AS NUMERIC) WHERE (((((v0.c0) BETWEEN (v0.c0) AND (t0.c1)))&(((t0.c1) NOT BETWEEN (t0.c0) AND (t0.c0))))) UNION SELECT DISTINCT * FROM t0 FULL OUTER JOIN v0 ON CAST(CAST(v0.c0 AS TEXT) AS NUMERIC) WHERE ((NOT (((((v0.c0) BETWEEN (v0.c0) AND (t0.c1)))&(((t0.c1) NOT BETWEEN (t0.c0) AND (t0.c0))))))) UNION SELECT DISTINCT * FROM t0 FULL OUTER JOIN v0 ON CAST(CAST(v0.c0 AS TEXT) AS NUMERIC) WHERE (((((((v0.c0) BETWEEN (v0.c0) AND (t0.c1)))&(((t0.c1) NOT BETWEEN (t0.c0) AND (t0.c0))))) ISNULL));
SELECT DISTINCT * FROM t0 FULL OUTER JOIN v0 ON CAST(CAST(v0.c0 AS TEXT) AS NUMERIC);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE ((NOT (((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT ((NOT (((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((((NOT (((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING COUNT(AVG(v0.c0)) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (COUNT(AVG(v0.c0)))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((COUNT(AVG(v0.c0))) ISNULL);
SELECT * FROM t0;
SELECT ALL * FROM t0 WHERE (((t0.c1 COLLATE RTRIM)/(1424428341))) UNION ALL SELECT ALL * FROM t0 WHERE ((NOT (((t0.c1 COLLATE RTRIM)/(1424428341))))) UNION ALL SELECT * FROM t0 WHERE (((((t0.c1 COLLATE RTRIM)/(1424428341))) ISNULL));
SELECT * FROM t0;
SELECT DISTINCT t0.c2, t0.c0 FROM t0;
SELECT DISTINCT t0.c2, t0.c0 FROM t0 WHERE (((((t0.c0)AND(t0.c2)))AND(t0.c2)) COLLATE RTRIM COLLATE BINARY) UNION SELECT DISTINCT t0.c2, t0.c0 FROM t0 WHERE ((NOT (((((t0.c0)AND(t0.c2)))AND(t0.c2)) COLLATE RTRIM COLLATE BINARY))) UNION SELECT DISTINCT t0.c2, t0.c0 FROM t0 WHERE (((((((t0.c0)AND(t0.c2)))AND(t0.c2)) COLLATE RTRIM COLLATE BINARY) ISNULL));
SELECT DISTINCT t0.c2, t0.c0 FROM t0;
SELECT t0.c2, t0.c1 FROM t0, v0 GROUP BY t0.c2, t0.c1;
SELECT ALL t0.c2, t0.c1 FROM t0, v0 WHERE ((NOT (((((((((v0.c0)AND(t0.c0)))OR(v0.c0)))OR(t0.c0)))AND(t0.c0))))) GROUP BY t0.c2, t0.c1 UNION SELECT t0.c2, t0.c1 FROM t0, v0 WHERE ((NOT ((NOT (((((((((v0.c0)AND(t0.c0)))OR(v0.c0)))OR(t0.c0)))AND(t0.c0))))))) GROUP BY t0.c2, t0.c1 UNION SELECT ALL t0.c2, t0.c1 FROM t0, v0 WHERE ((((NOT (((((((((v0.c0)AND(t0.c0)))OR(v0.c0)))OR(t0.c0)))AND(t0.c0))))) ISNULL)) GROUP BY t0.c2, t0.c1;
SELECT t0.c2, t0.c1 FROM t0, v0 GROUP BY t0.c2, t0.c1;
SELECT ALL t0.c2, t0.c0 FROM t0 GROUP BY t0.c2, t0.c0;
SELECT t0.c2, t0.c0 FROM t0 GROUP BY t0.c2, t0.c0 HAVING MAX(MIN(t0.c0)) UNION ALL SELECT t0.c2, t0.c0 FROM t0 GROUP BY t0.c2, t0.c0 HAVING (NOT (MAX(MIN(t0.c0)))) UNION ALL SELECT ALL t0.c2, t0.c0 FROM t0 GROUP BY t0.c2, t0.c0 HAVING ((MAX(MIN(t0.c0))) ISNULL);
SELECT * FROM v0;
SELECT * FROM v0 WHERE ((((v0.c0)) NOT BETWEEN (((v0.c0 IN ()))) AND ((((((0.6390143501292131)OR(v0.c0)))AND(v0.c0)))))) UNION ALL SELECT ALL * FROM v0 WHERE ((NOT ((((v0.c0)) NOT BETWEEN (((v0.c0 IN ()))) AND ((((((0.6390143501292131)OR(v0.c0)))AND(v0.c0)))))))) UNION ALL SELECT ALL * FROM v0 WHERE ((((((v0.c0)) NOT BETWEEN (((v0.c0 IN ()))) AND ((((((0.6390143501292131)OR(v0.c0)))AND(v0.c0)))))) ISNULL));
SELECT * FROM v0;
SELECT DISTINCT t0.c1, t0.c2 FROM t0, v0;
SELECT DISTINCT t0.c1, t0.c2 FROM t0, v0 WHERE (CAST(((t0.c2) NOT BETWEEN (t0.c1) AND (t0.c1)) AS REAL)) UNION SELECT DISTINCT t0.c1, t0.c2 FROM t0, v0 WHERE ((NOT (CAST(((t0.c2) NOT BETWEEN (t0.c1) AND (t0.c1)) AS REAL)))) UNION SELECT DISTINCT t0.c1, t0.c2 FROM t0, v0 WHERE (((CAST(((t0.c2) NOT BETWEEN (t0.c1) AND (t0.c1)) AS REAL)) ISNULL));
SELECT DISTINCT t0.c1, t0.c2 FROM t0, v0;
SELECT ALL t0.c0, t0.c1, t0.c2, v0.c0 FROM v0, t0 GROUP BY t0.c0, t0.c1, t0.c2, v0.c0;
SELECT ALL t0.c0, t0.c1, t0.c2, v0.c0 FROM v0, t0 WHERE (CASE WHEN t0.c1 THEN (~ (NULL)) END) GROUP BY t0.c0, t0.c1, t0.c2, v0.c0 UNION SELECT ALL t0.c0, t0.c1, t0.c2, v0.c0 FROM v0, t0 WHERE ((NOT (CASE WHEN t0.c1 THEN (~ (NULL)) END))) GROUP BY t0.c0, t0.c1, t0.c2, v0.c0 UNION SELECT t0.c0, t0.c1, t0.c2, v0.c0 FROM v0, t0 WHERE (((CASE WHEN t0.c1 THEN (~ (NULL)) END) ISNULL)) GROUP BY t0.c0, t0.c1, t0.c2, v0.c0;
SELECT ALL t0.c0, t0.c1, t0.c2, v0.c0 FROM v0, t0 GROUP BY t0.c0, t0.c1, t0.c2, v0.c0;
SELECT t0.c2 FROM t0 GROUP BY t0.c2;
SELECT t0.c2 FROM t0 GROUP BY t0.c2 HAVING ((MAX(AVG(MAX(COUNT(t0.c0)))))IS(SUM(t0.c1))) UNION ALL SELECT t0.c2 FROM t0 GROUP BY t0.c2 HAVING (NOT (((MAX(AVG(MAX(COUNT(t0.c0)))))IS(SUM(t0.c1))))) UNION ALL SELECT t0.c2 FROM t0 GROUP BY t0.c2 HAVING ((((MAX(AVG(MAX(COUNT(t0.c0)))))IS(SUM(t0.c1)))) ISNULL);
SELECT ALL t0.c0 FROM t0;
SELECT t0.c0 FROM t0 WHERE (((((- (t0.c2))))!=((((x'')<<(t0.c0)))))) UNION ALL SELECT t0.c0 FROM t0 WHERE ((NOT (((((- (t0.c2))))<>((((x'')<<(t0.c0)))))))) UNION ALL SELECT ALL t0.c0 FROM t0 WHERE (((((((- (t0.c2))))!=((((x'')<<(t0.c0)))))) ISNULL));
SELECT ALL t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0 WHERE (('-455984978' IN (((t0.c2)|(t0.c2)), ((t0.c0)==(t0.c2))))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((NOT (('-455984978' IN (((t0.c2)|(t0.c2)), ((t0.c0)==(t0.c2))))))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE (((('-455984978' IN (((t0.c2)|(t0.c2)), ((t0.c0)=(t0.c2))))) ISNULL));
SELECT DISTINCT t0.c0 FROM t0;
SELECT ALL t0.c1, t0.c0, t0.c2, v0.c0 FROM t0, v0 GROUP BY t0.c1, t0.c0, t0.c2, v0.c0;
SELECT ALL t0.c1, t0.c0, t0.c2, v0.c0 FROM t0, v0 WHERE (CAST('-169642848' AS REAL)) GROUP BY t0.c1, t0.c0, t0.c2, v0.c0 UNION SELECT t0.c1, t0.c0, t0.c2, v0.c0 FROM t0, v0 WHERE ((NOT (CAST('-169642848' AS REAL)))) GROUP BY t0.c1, t0.c0, t0.c2, v0.c0 UNION SELECT ALL t0.c1, t0.c0, t0.c2, v0.c0 FROM t0, v0 WHERE (((CAST('-169642848' AS REAL)) ISNULL)) GROUP BY t0.c1, t0.c0, t0.c2, v0.c0;
SELECT ALL t0.c1, t0.c0, t0.c2, v0.c0 FROM t0, v0 GROUP BY t0.c1, t0.c0, t0.c2, v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING MIN((v0.c0 IN (GROUP_CONCAT(AVG(MAX(COUNT(*)))), v0.c0))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (MIN((v0.c0 IN (GROUP_CONCAT(AVG(MAX(COUNT(*)))), v0.c0))))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((MIN((v0.c0 IN (GROUP_CONCAT(AVG(MAX(COUNT(*)))), v0.c0)))) ISNULL);
SELECT t0.c0 FROM v0, t0;
SELECT ALL t0.c0 FROM v0, t0 WHERE ((+ (CAST(t0.c1 AS NUMERIC)))) UNION ALL SELECT t0.c0 FROM v0, t0 WHERE ((NOT ((+ (CAST(t0.c1 AS NUMERIC)))))) UNION ALL SELECT t0.c0 FROM v0, t0 WHERE ((((+ (CAST(t0.c1 AS NUMERIC)))) ISNULL));
SELECT t0.c0 FROM v0, t0;
SELECT DISTINCT * FROM t0 CROSS JOIN v0 ON ((((v0.c0 IN ())))<((CASE t0.c1  WHEN t0.c2 THEN v0.c0 WHEN v0.c0 THEN t0.c1 WHEN t0.c0 THEN v0.c0 END)));
SELECT DISTINCT * FROM t0 CROSS JOIN v0 ON ((((v0.c0 IN ())))<((CASE t0.c1  WHEN t0.c2 THEN v0.c0 WHEN v0.c0 THEN t0.c1 WHEN t0.c0 THEN v0.c0 END))) WHERE (CASE t0.c2  WHEN (t0.c1 IN ()) THEN ' Un' ELSE ((t0.c0) ISNULL) END) UNION SELECT DISTINCT * FROM t0 CROSS JOIN v0 ON ((((v0.c0 IN ())))<((CASE t0.c1  WHEN t0.c2 THEN v0.c0 WHEN v0.c0 THEN t0.c1 WHEN t0.c0 THEN v0.c0 END))) WHERE ((NOT (CASE t0.c2  WHEN (t0.c1 IN ()) THEN ' Un' ELSE ((t0.c0) ISNULL) END))) UNION SELECT DISTINCT * FROM t0 CROSS JOIN v0 ON ((((v0.c0 IN ())))<((CASE t0.c1  WHEN t0.c2 THEN v0.c0 WHEN v0.c0 THEN t0.c1 WHEN t0.c0 THEN v0.c0 END))) WHERE (((CASE t0.c2  WHEN (t0.c1 IN ()) THEN ' Un' ELSE ((t0.c0) ISNULL) END) ISNULL));
SELECT DISTINCT * FROM t0 CROSS JOIN v0 ON ((((v0.c0 IN ())))<((CASE t0.c1  WHEN t0.c2 THEN v0.c0 WHEN v0.c0 THEN t0.c1 WHEN t0.c0 THEN v0.c0 END)));
SELECT t0.c2 FROM t0 GROUP BY t0.c2;
SELECT t0.c2 FROM t0 WHERE (x'') GROUP BY t0.c2 UNION SELECT t0.c2 FROM t0 WHERE ((NOT (x''))) GROUP BY t0.c2 UNION SELECT ALL t0.c2 FROM t0 NOT INDEXED WHERE (((x'') ISNULL)) GROUP BY t0.c2;
SELECT t0.c2 FROM t0 GROUP BY t0.c2;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((((v0.c0) BETWEEN (SUM(TOTAL(v0.c0))) AND (COUNT(v0.c0))))LIKE(((MIN(v0.c0))||(v0.c0)))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (((((v0.c0) BETWEEN (SUM(TOTAL(v0.c0))) AND (COUNT(v0.c0))))LIKE(((MIN(v0.c0))||(v0.c0)))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((((((v0.c0) BETWEEN (SUM(TOTAL(v0.c0))) AND (COUNT(v0.c0))))LIKE(((MIN(v0.c0))||(v0.c0))))) ISNULL);
SELECT ALL MIN((((t0.c1))!=((t0.c2))) COLLATE RTRIM) FROM t0, v0;
SELECT v0.c0 FROM v0;
SELECT v0.c0 FROM v0 WHERE (877485331) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE ((NOT (877485331))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE (((877485331) ISNULL));
SELECT v0.c0 FROM v0;
SELECT DISTINCT * FROM v0 LEFT OUTER JOIN t0 ON CASE WHEN ((v0.c0) NOT NULL) THEN (('1821973730')&(t0.c0)) ELSE (NOT (t0.c1)) END;
SELECT DISTINCT * FROM v0 LEFT OUTER JOIN t0 ON CASE WHEN ((v0.c0) NOT NULL) THEN (('1821973730')&(t0.c0)) ELSE (NOT (t0.c1)) END WHERE ((((t0.c1)IS(t0.c2)) IN (CASE t0.c1  WHEN t0.c2 THEN v0.c0 END, ((t0.c1) NOT BETWEEN (t0.c2) AND (t0.c1))))) UNION SELECT DISTINCT * FROM v0 LEFT OUTER JOIN t0 ON CASE WHEN ((v0.c0) NOT NULL) THEN (('1821973730')&(t0.c0)) ELSE (NOT (t0.c1)) END WHERE ((NOT ((((t0.c1)IS(t0.c2)) IN (CASE t0.c1  WHEN t0.c2 THEN v0.c0 END, ((t0.c1) NOT BETWEEN (t0.c2) AND (t0.c1))))))) UNION SELECT DISTINCT * FROM v0 LEFT OUTER JOIN t0 ON CASE WHEN ((v0.c0) NOT NULL) THEN (('1821973730')&(t0.c0)) ELSE (NOT (t0.c1)) END WHERE ((((((t0.c1)IS(t0.c2)) IN (CASE t0.c1  WHEN t0.c2 THEN v0.c0 END, ((t0.c1) NOT BETWEEN (t0.c2) AND (t0.c1))))) ISNULL));
SELECT DISTINCT * FROM v0 LEFT OUTER JOIN t0 ON CASE WHEN ((v0.c0) NOT NULL) THEN (('1821973730')&(t0.c0)) ELSE (NOT (t0.c1)) END;
SELECT v0.c0, t0.c2, t0.c1, t0.c0 FROM t0, v0 NOT INDEXED GROUP BY v0.c0, t0.c2, t0.c1, t0.c0;
SELECT ALL v0.c0, t0.c2, t0.c1, t0.c0 FROM t0, v0 WHERE ((((((((t0.c2))=((t0.c2))))AND(LIKELIHOOD(t0.c1, 0.026904484781756666))))OR(CASE WHEN v0.c0 THEN t0.c0 ELSE t0.c0 END))) GROUP BY v0.c0, t0.c2, t0.c1, t0.c0 UNION SELECT v0.c0, t0.c2, t0.c1, t0.c0 FROM t0, v0 WHERE ((NOT ((((((((t0.c2))=((t0.c2))))AND(LIKELIHOOD(t0.c1, 0.026904484781756666))))OR(CASE WHEN v0.c0 THEN t0.c0 ELSE t0.c0 END))))) GROUP BY v0.c0, t0.c2, t0.c1, t0.c0 UNION SELECT ALL v0.c0, t0.c2, t0.c1, t0.c0 FROM t0, v0 WHERE ((((((((((t0.c2))=((t0.c2))))AND(LIKELIHOOD(t0.c1, 0.026904484781756666))))OR(CASE WHEN v0.c0 THEN t0.c0 ELSE t0.c0 END))) ISNULL)) GROUP BY v0.c0, t0.c2, t0.c1, t0.c0;
SELECT v0.c0, t0.c2, t0.c1, t0.c0 FROM t0, v0 NOT INDEXED GROUP BY v0.c0, t0.c2, t0.c1, t0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING COUNT(json(v0.c0)) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (COUNT(json(v0.c0)))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((COUNT(json(v0.c0))) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING COUNT(json(v0.c0)) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (COUNT(json(v0.c0)))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((COUNT(json(v0.c0))) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT * FROM v0;
SELECT * FROM v0 WHERE (((((v0.c0) NOT NULL)) NOTNULL)) UNION ALL SELECT * FROM v0 WHERE ((NOT (((((v0.c0) NOT NULL)) NOTNULL)))) UNION ALL SELECT * FROM v0 WHERE (((((((v0.c0) NOT NULL)) NOTNULL)) ISNULL));
SELECT * FROM v0;
SELECT DISTINCT * FROM v0, t0;
SELECT DISTINCT * FROM v0, t0 WHERE (t0.c0) UNION SELECT DISTINCT * FROM v0, t0 WHERE ((NOT (t0.c0))) UNION SELECT DISTINCT * FROM v0, t0 WHERE (((t0.c0) ISNULL));
SELECT DISTINCT * FROM v0, t0;
SELECT ALL t0.c1 FROM t0 CROSS JOIN v0 ON CASE (('1921211574') IS FALSE)  WHEN NULL THEN ((((v0.c0)OR(t0.c0)))OR(t0.c0)) END GROUP BY t0.c1;
SELECT ALL t0.c1 FROM t0 CROSS JOIN v0 ON CASE (('1921211574') IS FALSE)  WHEN NULL THEN ((((v0.c0)OR(t0.c0)))OR(t0.c0)) END WHERE (t0.c2) GROUP BY t0.c1 UNION SELECT t0.c1 FROM t0 CROSS JOIN v0 ON CASE (('1921211574') IS FALSE)  WHEN NULL THEN ((((v0.c0)OR(t0.c0)))OR(t0.c0)) END WHERE ((NOT (t0.c2))) GROUP BY t0.c1 UNION SELECT ALL t0.c1 FROM t0 CROSS JOIN v0 ON CASE (('1921211574') IS FALSE)  WHEN NULL THEN ((((v0.c0)OR(t0.c0)))OR(t0.c0)) END WHERE (((t0.c2) ISNULL)) GROUP BY t0.c1;
SELECT ALL t0.c1 FROM t0 CROSS JOIN v0 ON CASE (('1921211574') IS FALSE)  WHEN NULL THEN ((((v0.c0)OR(t0.c0)))OR(t0.c0)) END GROUP BY t0.c1;
SELECT ALL t0.c1, t0.c0, t0.c2 FROM t0, v0 GROUP BY t0.c1, t0.c0, t0.c2;
SELECT t0.c1, t0.c0, t0.c2 FROM t0, v0 GROUP BY t0.c1, t0.c0, t0.c2 HAVING CASE WHEN CASE WHEN t0.c1 THEN TOTAL(v0.c0) WHEN t0.c1 THEN TOTAL(COUNT(*)) WHEN v0.c0 THEN AVG(GROUP_CONCAT(TOTAL(AVG('oIVz]\n4')))) ELSE TOTAL(v0.c0) END THEN GROUP_CONCAT(v0.c0) END UNION ALL SELECT t0.c1, t0.c0, t0.c2 FROM t0, v0 GROUP BY t0.c1, t0.c0, t0.c2 HAVING (NOT (CASE WHEN CASE WHEN t0.c1 THEN TOTAL(v0.c0) WHEN t0.c1 THEN TOTAL(COUNT(*)) WHEN v0.c0 THEN AVG(GROUP_CONCAT(TOTAL(AVG('oIVz]\n4')))) ELSE TOTAL(v0.c0) END THEN GROUP_CONCAT(v0.c0) END)) UNION ALL SELECT ALL t0.c1, t0.c0, t0.c2 FROM t0, v0 GROUP BY t0.c1, t0.c0, t0.c2 HAVING ((CASE WHEN CASE WHEN t0.c1 THEN TOTAL(v0.c0) WHEN t0.c1 THEN TOTAL(COUNT(*)) WHEN v0.c0 THEN AVG(GROUP_CONCAT(TOTAL(AVG('oIVz]\n4')))) ELSE TOTAL(v0.c0) END THEN GROUP_CONCAT(v0.c0) END) ISNULL);
SELECT MAX((v0.c0 COLLATE RTRIM IN ((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))))) FROM v0 ORDER BY ((((v0.c0) BETWEEN (v0.c0) AND (v0.c0))) NOT BETWEEN (CASE WHEN v0.c0 THEN v0.c0 END) AND ((((v0.c0, v0.c0, v0.c0))==((v0.c0, x'', v0.c0)))))  NULLS LAST;
SELECT * FROM v0;
SELECT * FROM v0 WHERE ((NOT ((v0.c0 IN (v0.c0))))) UNION ALL SELECT ALL * FROM v0 WHERE ((NOT ((NOT ((v0.c0 IN (v0.c0))))))) UNION ALL SELECT * FROM v0 WHERE ((((NOT ((v0.c0 IN (v0.c0))))) ISNULL));
SELECT * FROM v0;
SELECT DISTINCT t0.c2, t0.c1 FROM t0;
SELECT DISTINCT t0.c2, t0.c1 FROM t0 WHERE (CAST(((t0.c2)>(t0.c1)) AS REAL)) UNION SELECT DISTINCT t0.c2, t0.c1 FROM t0 WHERE ((NOT (CAST(((t0.c2)>(t0.c1)) AS REAL)))) UNION SELECT DISTINCT t0.c2, t0.c1 FROM t0 WHERE (((CAST(((t0.c2)>(t0.c1)) AS REAL)) ISNULL));
SELECT DISTINCT t0.c2, t0.c1 FROM t0;
SELECT ALL v0.c0, t0.c2, t0.c1, t0.c0 FROM v0, t0 GROUP BY v0.c0, t0.c2, t0.c1, t0.c0;
SELECT v0.c0, t0.c2, t0.c1, t0.c0 FROM v0, t0 WHERE (CASE WHEN GLOB(v0.c0, t0.c1) THEN ((t0.c1)<>(t0.c1)) ELSE t0.c1 END) GROUP BY v0.c0, t0.c2, t0.c1, t0.c0 UNION SELECT v0.c0, t0.c2, t0.c1, t0.c0 FROM v0, t0 WHERE ((NOT (CASE WHEN GLOB(v0.c0, t0.c1) THEN ((t0.c1)!=(t0.c1)) ELSE t0.c1 END))) GROUP BY v0.c0, t0.c2, t0.c1, t0.c0 UNION SELECT v0.c0, t0.c2, t0.c1, t0.c0 FROM v0, t0 WHERE (((CASE WHEN GLOB(v0.c0, t0.c1) THEN ((t0.c1)<>(t0.c1)) ELSE t0.c1 END) ISNULL)) GROUP BY v0.c0, t0.c2, t0.c1, t0.c0;
SELECT ALL v0.c0, t0.c2, t0.c1, t0.c0 FROM v0, t0 GROUP BY v0.c0, t0.c2, t0.c1, t0.c0;
SELECT t0.c1 FROM t0 NOT INDEXED GROUP BY t0.c1;
SELECT t0.c1 FROM t0 GROUP BY t0.c1 HAVING TOTAL((- (x''))) UNION ALL SELECT ALL t0.c1 FROM t0 GROUP BY t0.c1 HAVING (NOT (TOTAL((- (x''))))) UNION ALL SELECT ALL t0.c1 FROM t0 GROUP BY t0.c1 HAVING ((TOTAL((- (x'')))) ISNULL);
SELECT t0.c1 FROM t0 NOT INDEXED GROUP BY t0.c1;
SELECT t0.c1 FROM t0 GROUP BY t0.c1 HAVING TOTAL((- (x''))) UNION ALL SELECT ALL t0.c1 FROM t0 GROUP BY t0.c1 HAVING (NOT (TOTAL((- (x''))))) UNION ALL SELECT ALL t0.c1 FROM t0 GROUP BY t0.c1 HAVING ((TOTAL((- (x'')))) ISNULL);
SELECT t0.c1 FROM t0 NOT INDEXED GROUP BY t0.c1;
SELECT t0.c0, v0.c0, t0.c1, t0.c2 FROM v0, t0;
SELECT t0.c0, v0.c0, t0.c1, t0.c2 FROM v0, t0 WHERE (LIKELIHOOD(((t0.c2) IS TRUE), 0.2508698524762012)) UNION ALL SELECT ALL t0.c0, v0.c0, t0.c1, t0.c2 FROM v0, t0 WHERE ((NOT (LIKELIHOOD(((t0.c2) IS TRUE), 0.2508698524762012)))) UNION ALL SELECT ALL t0.c0, v0.c0, t0.c1, t0.c2 FROM v0, t0 WHERE (((LIKELIHOOD(((t0.c2) IS TRUE), 0.2508698524762012)) ISNULL));
SELECT t0.c0, v0.c0, t0.c1, t0.c2 FROM v0, t0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (((((t0.c1)==(t0.c0))) BETWEEN ((((('j백z\r')OR(t0.c2)))AND(t0.c1))) AND (((t0.c0)IS NOT(t0.c2))))) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (((((t0.c1)=(t0.c0))) BETWEEN ((((('j백z\r')OR(t0.c2)))AND(t0.c1))) AND (((t0.c0)IS NOT(t0.c2))))))) UNION SELECT DISTINCT * FROM t0 WHERE (((((((t0.c1)==(t0.c0))) BETWEEN ((((('j백z\r')OR(t0.c2)))AND(t0.c1))) AND (((t0.c0)IS NOT(t0.c2))))) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT t0.c2, v0.c0, t0.c1, t0.c0 FROM t0 CROSS JOIN v0 ON CAST(((t0.c1) NOT BETWEEN (t0.c1) AND (t0.c1)) AS REAL) GROUP BY t0.c2, v0.c0, t0.c1, t0.c0;
SELECT ALL t0.c2, v0.c0, t0.c1, t0.c0 FROM t0 CROSS JOIN v0 ON CAST(((t0.c1) NOT BETWEEN (t0.c1) AND (t0.c1)) AS REAL) WHERE ((t0.c0 COLLATE BINARY IN ())) GROUP BY t0.c2, v0.c0, t0.c1, t0.c0 UNION SELECT ALL t0.c2, v0.c0, t0.c1, t0.c0 FROM t0 CROSS JOIN v0 ON CAST(((t0.c1) NOT BETWEEN (t0.c1) AND (t0.c1)) AS REAL) WHERE ((NOT ((t0.c0 COLLATE BINARY IN ())))) GROUP BY t0.c2, v0.c0, t0.c1, t0.c0 UNION SELECT ALL t0.c2, v0.c0, t0.c1, t0.c0 FROM t0 CROSS JOIN v0 ON CAST(((t0.c1) NOT BETWEEN (t0.c1) AND (t0.c1)) AS REAL) WHERE ((((t0.c0 COLLATE BINARY IN ())) ISNULL)) GROUP BY t0.c2, v0.c0, t0.c1, t0.c0;
SELECT t0.c2, v0.c0, t0.c1, t0.c0 FROM t0 CROSS JOIN v0 ON CAST(((t0.c1) NOT BETWEEN (t0.c1) AND (t0.c1)) AS REAL) GROUP BY t0.c2, v0.c0, t0.c1, t0.c0;
SELECT t0.c1, t0.c0, t0.c2, v0.c0 FROM v0 CROSS JOIN t0 ON (t0.c0 COLLATE NOCASE IN ()) GROUP BY t0.c1, t0.c0, t0.c2, v0.c0;
SELECT ALL t0.c1, t0.c0, t0.c2, v0.c0 FROM v0 CROSS JOIN t0 ON (t0.c0 COLLATE NOCASE IN ()) GROUP BY t0.c1, t0.c0, t0.c2, v0.c0 HAVING SUM(((GROUP_CONCAT(MIN(t0.c0)))|(SUM(t0.c2)))) UNION ALL SELECT t0.c1, t0.c0, t0.c2, v0.c0 FROM v0 CROSS JOIN t0 ON (t0.c0 COLLATE NOCASE IN ()) GROUP BY t0.c1, t0.c0, t0.c2, v0.c0 HAVING (NOT (SUM(((GROUP_CONCAT(MIN(t0.c0)))|(SUM(t0.c2)))))) UNION ALL SELECT ALL t0.c1, t0.c0, t0.c2, v0.c0 FROM v0 CROSS JOIN t0 ON (t0.c0 COLLATE NOCASE IN ()) GROUP BY t0.c1, t0.c0, t0.c2, v0.c0 HAVING ((SUM(((GROUP_CONCAT(MIN(t0.c0)))|(SUM(t0.c2))))) ISNULL);
SELECT t0.c2 FROM t0;
SELECT t0.c2 FROM t0 WHERE (t0.c0) UNION ALL SELECT t0.c2 FROM t0 WHERE ((NOT (t0.c0))) UNION ALL SELECT ALL t0.c2 FROM t0 WHERE (((t0.c0) ISNULL));
SELECT t0.c2 FROM t0;
SELECT DISTINCT t0.c1 FROM t0;
SELECT DISTINCT t0.c1 FROM t0 WHERE (t0.c0) UNION SELECT DISTINCT t0.c1 FROM t0 WHERE ((NOT (t0.c0))) UNION SELECT DISTINCT t0.c1 FROM t0 WHERE (((t0.c0) ISNULL));
SELECT DISTINCT t0.c1 FROM t0;
SELECT t0.c1, v0.c0, t0.c2 FROM v0, t0 GROUP BY t0.c1, v0.c0, t0.c2;
SELECT ALL t0.c1, v0.c0, t0.c2 FROM v0, t0 WHERE ((((t0.c1)) NOT BETWEEN ((CHAR(t0.c0, t0.c1, v0.c0))) AND (('')))) GROUP BY t0.c1, v0.c0, t0.c2 UNION SELECT ALL t0.c1, v0.c0, t0.c2 FROM v0, t0 WHERE ((NOT ((((t0.c1)) NOT BETWEEN ((CHAR(t0.c0, t0.c1, v0.c0))) AND (('')))))) GROUP BY t0.c1, v0.c0, t0.c2 UNION SELECT ALL t0.c1, v0.c0, t0.c2 FROM v0, t0 WHERE ((((((t0.c1)) NOT BETWEEN ((CHAR(t0.c0, t0.c1, v0.c0))) AND (('')))) ISNULL)) GROUP BY t0.c1, v0.c0, t0.c2;
SELECT t0.c1, v0.c0, t0.c2 FROM v0, t0 GROUP BY t0.c1, v0.c0, t0.c2;
SELECT t0.c2 FROM t0 GROUP BY t0.c2;
SELECT ALL t0.c2 FROM t0 GROUP BY t0.c2 HAVING TOTAL(CAST(t0.c1 AS REAL)) UNION ALL SELECT ALL t0.c2 FROM t0 GROUP BY t0.c2 HAVING (NOT (TOTAL(CAST(t0.c1 AS REAL)))) UNION ALL SELECT ALL t0.c2 FROM t0 GROUP BY t0.c2 HAVING ((TOTAL(CAST(t0.c1 AS REAL))) ISNULL);
SELECT t0.c2 FROM t0 GROUP BY t0.c2;
SELECT ALL t0.c2 FROM t0 GROUP BY t0.c2 HAVING TOTAL(CAST(t0.c1 AS REAL)) UNION ALL SELECT ALL t0.c2 FROM t0 GROUP BY t0.c2 HAVING (NOT (TOTAL(CAST(t0.c1 AS REAL)))) UNION ALL SELECT ALL t0.c2 FROM t0 GROUP BY t0.c2 HAVING ((TOTAL(CAST(t0.c1 AS REAL))) ISNULL);
SELECT t0.c2 FROM t0 GROUP BY t0.c2;
SELECT * FROM t0, v0 NOT INDEXED;
SELECT * FROM t0, v0 WHERE (t0.c0) UNION ALL SELECT * FROM t0, v0 WHERE ((NOT (t0.c0))) UNION ALL SELECT ALL * FROM t0, v0 WHERE (((t0.c0) ISNULL));
SELECT * FROM t0, v0 NOT INDEXED;
SELECT DISTINCT v0.c0 FROM t0 LEFT OUTER JOIN v0 ON '-309126043';
SELECT DISTINCT v0.c0 FROM t0 LEFT OUTER JOIN v0 ON '-309126043' WHERE (((((t0.c2) BETWEEN (v0.c0) AND (t0.c0))) IS TRUE)) UNION SELECT DISTINCT v0.c0 FROM t0 LEFT OUTER JOIN v0 ON '-309126043' WHERE ((NOT (((((t0.c2) BETWEEN (v0.c0) AND (t0.c0))) IS TRUE)))) UNION SELECT DISTINCT v0.c0 FROM t0 LEFT OUTER JOIN v0 ON '-309126043' WHERE (((((((t0.c2) BETWEEN (v0.c0) AND (t0.c0))) IS TRUE)) ISNULL));
SELECT DISTINCT v0.c0 FROM t0 LEFT OUTER JOIN v0 ON '-309126043';
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE ((((v0.c0 IN (v0.c0))) IS FALSE)) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT ((((v0.c0 IN (v0.c0))) IS FALSE)))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((((((v0.c0 IN (v0.c0))) IS FALSE)) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL t0.c1, t0.c0, t0.c2 FROM t0 GROUP BY t0.c1, t0.c0, t0.c2;
SELECT ALL t0.c1, t0.c0, t0.c2 FROM t0 GROUP BY t0.c1, t0.c0, t0.c2 HAVING TOTAL(TOTAL(TOTAL(t0.c2))) UNION ALL SELECT t0.c1, t0.c0, t0.c2 FROM t0 GROUP BY t0.c1, t0.c0, t0.c2 HAVING (NOT (TOTAL(TOTAL(TOTAL(t0.c2))))) UNION ALL SELECT ALL t0.c1, t0.c0, t0.c2 FROM t0 GROUP BY t0.c1, t0.c0, t0.c2 HAVING ((TOTAL(TOTAL(TOTAL(t0.c2)))) ISNULL);
SELECT ALL * FROM t0 NOT INDEXED, v0;
SELECT ALL * FROM t0, v0 WHERE ((((t0.c0 IN (t0.c0)))||((t0.c0 IN (x'c250', t0.c1))))) UNION ALL SELECT ALL * FROM t0, v0 WHERE ((NOT ((((t0.c0 IN (t0.c0)))||((t0.c0 IN (x'c250', t0.c1))))))) UNION ALL SELECT * FROM t0, v0 WHERE ((((((t0.c0 IN (t0.c0)))||((t0.c0 IN (x'c250', t0.c1))))) ISNULL));
SELECT ALL * FROM t0 NOT INDEXED, v0;
SELECT DISTINCT t0.c2, t0.c1, v0.c0 FROM v0, t0;
SELECT DISTINCT t0.c2, t0.c1, v0.c0 FROM v0, t0 WHERE ((('h54n9u')AND((((v0.c0))<>((x'')))))) UNION SELECT DISTINCT t0.c2, t0.c1, v0.c0 FROM v0, t0 WHERE ((NOT ((('h54n9u')AND((((v0.c0))<>((x'')))))))) UNION SELECT DISTINCT t0.c2, t0.c1, v0.c0 FROM v0, t0 WHERE ((((('h54n9u')AND((((v0.c0))<>((x'')))))) ISNULL));
SELECT DISTINCT t0.c2, t0.c1, v0.c0 FROM v0, t0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (((json_insert(v0.c0, v0.c0, v0.c0)) NOT BETWEEN (CASE WHEN v0.c0 THEN '-602396862' ELSE v0.c0 END) AND ((((0xffffffffcc3da696)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT (((json_insert(v0.c0, v0.c0, v0.c0)) NOT BETWEEN (CASE WHEN v0.c0 THEN '-602396862' ELSE v0.c0 END) AND ((((0xffffffffcc3da696)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((((json_insert(v0.c0, v0.c0, v0.c0)) NOT BETWEEN (CASE WHEN v0.c0 THEN '-602396862' ELSE v0.c0 END) AND ((((0xffffffffcc3da696)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL t0.c2, t0.c1, v0.c0, t0.c0 FROM v0, t0 GROUP BY t0.c2, t0.c1, v0.c0, t0.c0;
SELECT ALL t0.c2, t0.c1, v0.c0, t0.c0 FROM v0, t0 GROUP BY t0.c2, t0.c1, v0.c0, t0.c0 HAVING t0.c0 UNION ALL SELECT t0.c2, t0.c1, v0.c0, t0.c0 FROM v0, t0 GROUP BY t0.c2, t0.c1, v0.c0, t0.c0 HAVING (NOT (t0.c0)) UNION ALL SELECT ALL t0.c2, t0.c1, v0.c0, t0.c0 FROM v0, t0 GROUP BY t0.c2, t0.c1, v0.c0, t0.c0 HAVING ((t0.c0) ISNULL);
SELECT ALL t0.c2, t0.c1, v0.c0, t0.c0 FROM v0, t0 GROUP BY t0.c2, t0.c1, v0.c0, t0.c0;
SELECT ALL t0.c2, t0.c1, v0.c0, t0.c0 FROM v0, t0 GROUP BY t0.c2, t0.c1, v0.c0, t0.c0 HAVING t0.c0 UNION ALL SELECT t0.c2, t0.c1, v0.c0, t0.c0 FROM v0, t0 GROUP BY t0.c2, t0.c1, v0.c0, t0.c0 HAVING (NOT (t0.c0)) UNION ALL SELECT ALL t0.c2, t0.c1, v0.c0, t0.c0 FROM v0, t0 GROUP BY t0.c2, t0.c1, v0.c0, t0.c0 HAVING ((t0.c0) ISNULL);
SELECT ALL t0.c2, t0.c1, v0.c0, t0.c0 FROM v0, t0 GROUP BY t0.c2, t0.c1, v0.c0, t0.c0;
SELECT ALL t0.c1 FROM v0, t0;
SELECT t0.c1 FROM v0, t0 WHERE (((((t0.c1) IS FALSE))<(((((v0.c0)AND(t0.c2)))OR(t0.c0))))) UNION ALL SELECT t0.c1 FROM v0, t0 WHERE ((NOT (((((t0.c1) IS FALSE))<(((((v0.c0)AND(t0.c2)))OR(t0.c0))))))) UNION ALL SELECT ALL t0.c1 FROM v0, t0 WHERE (((((((t0.c1) IS FALSE))<(((((v0.c0)AND(t0.c2)))OR(t0.c0))))) ISNULL));
SELECT ALL t0.c1 FROM v0, t0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE ((((((v0.c0))>((0.26810700332278403)))) NOT BETWEEN (((v0.c0) NOT NULL)) AND ((+ (v0.c0))))) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT ((((((v0.c0))>((0.26810700332278403)))) NOT BETWEEN (((v0.c0) NOT NULL)) AND ((+ (v0.c0))))))) UNION SELECT DISTINCT * FROM v0 WHERE ((((((((v0.c0))>((0.26810700332278403)))) NOT BETWEEN (((v0.c0) NOT NULL)) AND ((+ (v0.c0))))) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT ALL t0.c2, t0.c1, v0.c0, t0.c0 FROM t0, v0 GROUP BY t0.c2, t0.c1, v0.c0, t0.c0;
SELECT t0.c2, t0.c1, v0.c0, t0.c0 FROM t0, v0 WHERE (((CASE t0.c2  WHEN t0.c0 THEN t0.c1 WHEN t0.c2 THEN t0.c2 WHEN '|H' THEN t0.c1 END) IS TRUE)) GROUP BY t0.c2, t0.c1, v0.c0, t0.c0 UNION SELECT ALL t0.c2, t0.c1, v0.c0, t0.c0 FROM t0, v0 WHERE ((NOT (((CASE t0.c2  WHEN t0.c0 THEN t0.c1 WHEN t0.c2 THEN t0.c2 WHEN '|H' THEN t0.c1 END) IS TRUE)))) GROUP BY t0.c2, t0.c1, v0.c0, t0.c0 UNION SELECT ALL t0.c2, t0.c1, v0.c0, t0.c0 FROM t0, v0 WHERE (((((CASE t0.c2  WHEN t0.c0 THEN t0.c1 WHEN t0.c2 THEN t0.c2 WHEN '|H' THEN t0.c1 END) IS TRUE)) ISNULL)) GROUP BY t0.c2, t0.c1, v0.c0, t0.c0;
SELECT ALL t0.c2, t0.c1, v0.c0, t0.c0 FROM t0, v0 GROUP BY t0.c2, t0.c1, v0.c0, t0.c0;
SELECT t0.c0, t0.c2, t0.c1 FROM t0 GROUP BY t0.c0, t0.c2, t0.c1;
SELECT t0.c0, t0.c2, t0.c1 FROM t0 GROUP BY t0.c0, t0.c2, t0.c1 HAVING MAX(((t0.c0) BETWEEN (x'') AND ('횆<AaxI8{'))) UNION ALL SELECT ALL t0.c0, t0.c2, t0.c1 FROM t0 GROUP BY t0.c0, t0.c2, t0.c1 HAVING (NOT (MAX(((t0.c0) BETWEEN (x'') AND ('횆<AaxI8{'))))) UNION ALL SELECT ALL t0.c0, t0.c2, t0.c1 FROM t0 GROUP BY t0.c0, t0.c2, t0.c1 HAVING ((MAX(((t0.c0) BETWEEN (x'') AND ('횆<AaxI8{')))) ISNULL);
SELECT t0.c0, t0.c2, t0.c1 FROM t0 GROUP BY t0.c0, t0.c2, t0.c1;
SELECT t0.c0, t0.c2, t0.c1 FROM t0 GROUP BY t0.c0, t0.c2, t0.c1 HAVING MAX(((t0.c0) BETWEEN (x'') AND ('횆<AaxI8{'))) UNION ALL SELECT ALL t0.c0, t0.c2, t0.c1 FROM t0 GROUP BY t0.c0, t0.c2, t0.c1 HAVING (NOT (MAX(((t0.c0) BETWEEN (x'') AND ('횆<AaxI8{'))))) UNION ALL SELECT ALL t0.c0, t0.c2, t0.c1 FROM t0 GROUP BY t0.c0, t0.c2, t0.c1 HAVING ((MAX(((t0.c0) BETWEEN (x'') AND ('횆<AaxI8{')))) ISNULL);
SELECT t0.c0, t0.c2, t0.c1 FROM t0 GROUP BY t0.c0, t0.c2, t0.c1;
SELECT ALL TOTAL((((v0.c0 IN ()))+((+ (v0.c0))))) FROM v0 ORDER BY ((((v0.c0) NOT NULL)) ISNULL) ASC  NULLS FIRST, (+ (CAST(x'' AS INTEGER))) DESC;
SELECT ALL * FROM v0 INDEXED BY i77, t0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (v0.c0) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (v0.c0))) UNION SELECT DISTINCT * FROM v0 WHERE (((v0.c0) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (CAST(((v0.c0) NOTNULL) AS TEXT)) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT (CAST(((v0.c0) NOTNULL) AS TEXT)))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE (((CAST(((v0.c0) NOTNULL) AS TEXT)) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT t0.c2 FROM v0 NATURAL JOIN t0 GROUP BY t0.c2;
SELECT ALL t0.c2 FROM v0 NATURAL JOIN t0 GROUP BY t0.c2 HAVING COUNT(*) UNION ALL SELECT ALL t0.c2 FROM v0 NATURAL JOIN t0 GROUP BY t0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL t0.c2 FROM v0 NATURAL JOIN t0 GROUP BY t0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT t0.c2 FROM v0 NATURAL JOIN t0 GROUP BY t0.c2;
SELECT ALL t0.c2 FROM v0 NATURAL JOIN t0 GROUP BY t0.c2 HAVING COUNT(*) UNION ALL SELECT ALL t0.c2 FROM v0 NATURAL JOIN t0 GROUP BY t0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL t0.c2 FROM v0 NATURAL JOIN t0 GROUP BY t0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT t0.c2 FROM v0 NATURAL JOIN t0 GROUP BY t0.c2;
SELECT ALL * FROM v0;
SELECT ALL * FROM v0 WHERE ('') UNION ALL SELECT * FROM v0 WHERE ((NOT (''))) UNION ALL SELECT ALL * FROM v0 WHERE ((('') ISNULL));
SELECT ALL * FROM v0;
SELECT DISTINCT * FROM v0 RIGHT OUTER JOIN t0 ON NULLIF(DISTINCT (NOT (t0.c2)), ((v0.c0) NOT NULL));
SELECT DISTINCT * FROM v0 RIGHT OUTER JOIN t0 ON NULLIF(DISTINCT (NOT (t0.c2)), ((v0.c0) NOT NULL)) WHERE ('1638520007') UNION SELECT DISTINCT * FROM v0 RIGHT OUTER JOIN t0 ON NULLIF(DISTINCT (NOT (t0.c2)), ((v0.c0) NOT NULL)) WHERE ((NOT ('1638520007'))) UNION SELECT DISTINCT * FROM v0 RIGHT OUTER JOIN t0 ON NULLIF(DISTINCT (NOT (t0.c2)), ((v0.c0) NOT NULL)) WHERE ((('1638520007') ISNULL));
SELECT DISTINCT * FROM v0 RIGHT OUTER JOIN t0 ON NULLIF(DISTINCT (NOT (t0.c2)), ((v0.c0) NOT NULL));
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (((v0.c0 COLLATE NOCASE)+(((((v0.c0)OR(v0.c0)))OR(v0.c0))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (((v0.c0 COLLATE NOCASE)+(((((v0.c0)OR(v0.c0)))OR(v0.c0))))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE (((((v0.c0 COLLATE NOCASE)+(((((v0.c0)OR(v0.c0)))OR(v0.c0))))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL t0.c1, t0.c0, t0.c2 FROM t0 GROUP BY t0.c1, t0.c0, t0.c2;
SELECT t0.c1, t0.c0, t0.c2 FROM t0 GROUP BY t0.c1, t0.c0, t0.c2 HAVING MIN(t0.c1 COLLATE BINARY) UNION ALL SELECT ALL t0.c1, t0.c0, t0.c2 FROM t0 GROUP BY t0.c1, t0.c0, t0.c2 HAVING (NOT (MIN(t0.c1 COLLATE BINARY))) UNION ALL SELECT ALL t0.c1, t0.c0, t0.c2 FROM t0 GROUP BY t0.c1, t0.c0, t0.c2 HAVING ((MIN(t0.c1 COLLATE BINARY)) ISNULL);
SELECT ALL t0.c1, t0.c0, t0.c2 FROM t0 GROUP BY t0.c1, t0.c0, t0.c2;
SELECT t0.c1, t0.c0, t0.c2 FROM t0 GROUP BY t0.c1, t0.c0, t0.c2 HAVING MIN(t0.c1 COLLATE BINARY) UNION ALL SELECT ALL t0.c1, t0.c0, t0.c2 FROM t0 GROUP BY t0.c1, t0.c0, t0.c2 HAVING (NOT (MIN(t0.c1 COLLATE BINARY))) UNION ALL SELECT ALL t0.c1, t0.c0, t0.c2 FROM t0 GROUP BY t0.c1, t0.c0, t0.c2 HAVING ((MIN(t0.c1 COLLATE BINARY)) ISNULL);
SELECT ALL t0.c1, t0.c0, t0.c2 FROM t0 GROUP BY t0.c1, t0.c0, t0.c2;
SELECT ALL t0.c2, v0.c0, t0.c1, t0.c0 FROM t0, v0;
SELECT ALL t0.c2, v0.c0, t0.c1, t0.c0 FROM t0, v0 WHERE ((((t0.c0)>>(v0.c0)) IN ())) UNION ALL SELECT ALL t0.c2, v0.c0, t0.c1, t0.c0 FROM t0, v0 WHERE ((NOT ((((t0.c0)>>(v0.c0)) IN ())))) UNION ALL SELECT ALL t0.c2, v0.c0, t0.c1, t0.c0 FROM t0, v0 WHERE ((((((t0.c0)>>(v0.c0)) IN ())) ISNULL));
SELECT ALL t0.c2, v0.c0, t0.c1, t0.c0 FROM t0, v0;
SELECT DISTINCT * FROM v0, t0;
SELECT DISTINCT * FROM v0, t0 WHERE (((((((t0.c2)OR(t0.c2)))AND(t0.c0)))GLOB(COALESCE(DISTINCT t0.c2, v0.c0, t0.c2, t0.c1, t0.c2, v0.c0)))) UNION SELECT DISTINCT * FROM v0, t0 WHERE ((NOT (((((((t0.c2)OR(t0.c2)))AND(t0.c0)))GLOB(COALESCE(DISTINCT t0.c2, v0.c0, t0.c2, t0.c1, t0.c2, v0.c0)))))) UNION SELECT DISTINCT * FROM v0, t0 WHERE (((((((((t0.c2)OR(t0.c2)))AND(t0.c0)))GLOB(COALESCE(DISTINCT t0.c2, v0.c0, t0.c2, t0.c1, t0.c2, v0.c0)))) ISNULL));
SELECT DISTINCT * FROM v0, t0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (((CAST('1230135954' AS TEXT)) NOT NULL)) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (((CAST('1230135954' AS TEXT)) NOT NULL)))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE (((((CAST('1230135954' AS TEXT)) NOT NULL)) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING GROUP_CONCAT(((MAX(GROUP_CONCAT(COUNT(*))))GLOB(v0.c0))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (GROUP_CONCAT(((MAX(GROUP_CONCAT(COUNT(*))))GLOB(v0.c0))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((GROUP_CONCAT(((MAX(GROUP_CONCAT(COUNT(*))))GLOB(v0.c0)))) ISNULL);
SELECT t0.c2 FROM v0, t0;
SELECT t0.c2 FROM v0, t0 WHERE ('') UNION ALL SELECT ALL t0.c2 FROM v0, t0 WHERE ((NOT (''))) UNION ALL SELECT t0.c2 FROM v0, t0 WHERE ((('') ISNULL));
SELECT t0.c2 FROM v0, t0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (((LOWER(t0.c1)) IS TRUE)) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (((LOWER(t0.c1)) IS TRUE)))) UNION SELECT DISTINCT * FROM t0 WHERE (((((LOWER(t0.c1)) IS TRUE)) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT ALL v0.c0, t0.c0, t0.c1 FROM t0, v0 GROUP BY v0.c0, t0.c0, t0.c1;
SELECT v0.c0, t0.c0, t0.c1 FROM t0, v0 WHERE (t0.c2) GROUP BY v0.c0, t0.c0, t0.c1 UNION SELECT ALL v0.c0, t0.c0, t0.c1 FROM t0, v0 WHERE ((NOT (t0.c2))) GROUP BY v0.c0, t0.c0, t0.c1 UNION SELECT v0.c0, t0.c0, t0.c1 FROM t0, v0 WHERE (((t0.c2) ISNULL)) GROUP BY v0.c0, t0.c0, t0.c1;
SELECT ALL v0.c0, t0.c0, t0.c1 FROM t0, v0 GROUP BY v0.c0, t0.c0, t0.c1;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING SUM(AVG(v0.c0)) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (SUM(AVG(v0.c0)))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((SUM(AVG(v0.c0))) ISNULL);
SELECT ALL v0.c0 FROM v0 NOT INDEXED;
SELECT ALL v0.c0 FROM v0 WHERE ((((~ (v0.c0))) BETWEEN (0.9332957651039953) AND ((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))))) UNION ALL SELECT v0.c0 FROM v0 WHERE ((NOT ((((~ (v0.c0))) BETWEEN (0.9332957651039953) AND ((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))))))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE ((((((~ (v0.c0))) BETWEEN (0.9332957651039953) AND ((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))))) ISNULL));
SELECT ALL v0.c0 FROM v0 NOT INDEXED;
SELECT DISTINCT t0.c2 FROM t0, v0;
SELECT DISTINCT t0.c2 FROM t0, v0 WHERE (LIKELY(DISTINCT x'')) UNION SELECT DISTINCT t0.c2 FROM t0, v0 WHERE ((NOT (LIKELY(DISTINCT x'')))) UNION SELECT DISTINCT t0.c2 FROM t0, v0 WHERE (((LIKELY(DISTINCT x'')) ISNULL));
SELECT DISTINCT t0.c2 FROM t0, v0;
SELECT ALL t0.c1 FROM t0 GROUP BY t0.c1;
SELECT ALL t0.c1 FROM t0 WHERE ((((t0.c0 IN (t0.c2))) BETWEEN (t0.c2 COLLATE BINARY) AND (CAST(t0.c1 AS NUMERIC)))) GROUP BY t0.c1 UNION SELECT ALL t0.c1 FROM t0 WHERE ((NOT ((((t0.c0 IN (t0.c2))) BETWEEN (t0.c2 COLLATE BINARY) AND (CAST(t0.c1 AS NUMERIC)))))) GROUP BY t0.c1 UNION SELECT t0.c1 FROM t0 WHERE ((((((t0.c0 IN (t0.c2))) BETWEEN (t0.c2 COLLATE BINARY) AND (CAST(t0.c1 AS NUMERIC)))) ISNULL)) GROUP BY t0.c1;
SELECT ALL t0.c1 FROM t0 GROUP BY t0.c1;
SELECT t0.c0, t0.c2, t0.c1 FROM t0 GROUP BY t0.c0, t0.c2, t0.c1;
SELECT ALL t0.c0, t0.c2, t0.c1 FROM t0 GROUP BY t0.c0, t0.c2, t0.c1 HAVING (~ (MAX(MIN(t0.c2)))) UNION ALL SELECT t0.c0, t0.c2, t0.c1 FROM t0 GROUP BY t0.c0, t0.c2, t0.c1 HAVING (NOT ((~ (MAX(MIN(t0.c2)))))) UNION ALL SELECT ALL t0.c0, t0.c2, t0.c1 FROM t0 GROUP BY t0.c0, t0.c2, t0.c1 HAVING (((~ (MAX(MIN(t0.c2))))) ISNULL);
SELECT ALL * FROM v0;
SELECT ALL * FROM v0 WHERE ((~ (CASE v0.c0  WHEN v0.c0 THEN x'' WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))) UNION ALL SELECT * FROM v0 WHERE ((NOT ((~ (CASE v0.c0  WHEN v0.c0 THEN x'' WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))))) UNION ALL SELECT ALL * FROM v0 WHERE ((((~ (CASE v0.c0  WHEN v0.c0 THEN x'' WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))) ISNULL));
SELECT ALL * FROM v0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (NULL) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (NULL))) UNION SELECT DISTINCT * FROM t0 WHERE (((NULL) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT ALL t0.c1 FROM t0, v0 GROUP BY t0.c1;
SELECT t0.c1 FROM t0, v0 WHERE (((((x'44ce')OR(v0.c0)))OR(v0.c0)) COLLATE NOCASE) GROUP BY t0.c1 UNION SELECT t0.c1 FROM t0, v0 WHERE ((NOT (((((x'44ce')OR(v0.c0)))OR(v0.c0)) COLLATE NOCASE))) GROUP BY t0.c1 UNION SELECT ALL t0.c1 FROM t0, v0 WHERE (((((((x'44ce')OR(v0.c0)))OR(v0.c0)) COLLATE NOCASE) ISNULL)) GROUP BY t0.c1;
SELECT ALL t0.c1 FROM t0, v0 GROUP BY t0.c1;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING MAX(SUM(TOTAL(SUM(v0.c0)))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (MAX(SUM(TOTAL(SUM(v0.c0)))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((MAX(SUM(TOTAL(SUM(v0.c0))))) ISNULL);
SELECT ALL * FROM t0, v0;
SELECT ALL * FROM t0, v0 WHERE (json_array(CAST(t0.c0 AS NUMERIC), ABS(t0.c1))) UNION ALL SELECT ALL * FROM t0, v0 WHERE ((NOT (json_array(CAST(t0.c0 AS NUMERIC), ABS(t0.c1))))) UNION ALL SELECT * FROM t0, v0 WHERE (((json_array(CAST(t0.c0 AS NUMERIC), ABS(t0.c1))) ISNULL));
SELECT ALL * FROM t0, v0;
SELECT DISTINCT * FROM v0, t0;
SELECT DISTINCT * FROM v0, t0 WHERE (((((((((CAST(t0.c1 AS REAL))OR((t0.c2 IN ()))))AND(((NULL) IS FALSE))))OR(x'')))AND(CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE NULL END))) UNION SELECT DISTINCT * FROM v0, t0 WHERE ((NOT (((((((((CAST(t0.c1 AS REAL))OR((t0.c2 IN ()))))AND(((NULL) IS FALSE))))OR(x'')))AND(CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE NULL END))))) UNION SELECT DISTINCT * FROM v0, t0 WHERE (((((((((((CAST(t0.c1 AS REAL))OR((t0.c2 IN ()))))AND(((NULL) IS FALSE))))OR(x'')))AND(CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE NULL END))) ISNULL));
SELECT DISTINCT * FROM v0, t0;
SELECT ALL t0.c2, t0.c1 FROM v0 INNER JOIN t0 ON t0.c0 GROUP BY t0.c2, t0.c1;
SELECT t0.c2, t0.c1 FROM v0 INNER JOIN t0 ON t0.c0 WHERE (((((v0.c0)+(t0.c2))) BETWEEN (((t0.c1)>(t0.c2))) AND (CASE t0.c2  WHEN t0.c2 THEN t0.c0 END))) GROUP BY t0.c2, t0.c1 UNION SELECT ALL t0.c2, t0.c1 FROM v0 INNER JOIN t0 ON t0.c0 WHERE ((NOT (((((v0.c0)+(t0.c2))) BETWEEN (((t0.c1)>(t0.c2))) AND (CASE t0.c2  WHEN t0.c2 THEN t0.c0 END))))) GROUP BY t0.c2, t0.c1 UNION SELECT ALL t0.c2, t0.c1 FROM v0 INNER JOIN t0 ON t0.c0 WHERE (((((((v0.c0)+(t0.c2))) BETWEEN (((t0.c1)>(t0.c2))) AND (CASE t0.c2  WHEN t0.c2 THEN t0.c0 END))) ISNULL)) GROUP BY t0.c2, t0.c1;
SELECT ALL t0.c2, t0.c1 FROM v0 INNER JOIN t0 ON t0.c0 GROUP BY t0.c2, t0.c1;
SELECT v0.c0 FROM t0 INNER JOIN v0 ON NULLIF(((((NULL)AND('')))OR(t0.c0)), t0.c0 COLLATE NOCASE) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM t0 INNER JOIN v0 ON NULLIF(((((NULL)AND('')))OR(t0.c0)), t0.c0 COLLATE NOCASE) GROUP BY v0.c0 HAVING COUNT(*) UNION ALL SELECT ALL v0.c0 FROM t0 INNER JOIN v0 ON NULLIF(((((NULL)AND('')))OR(t0.c0)), t0.c0 COLLATE NOCASE) GROUP BY v0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT v0.c0 FROM t0 INNER JOIN v0 ON NULLIF(((((NULL)AND('')))OR(t0.c0)), t0.c0 COLLATE NOCASE) GROUP BY v0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT v0.c0 FROM t0 INNER JOIN v0 ON NULLIF(((((NULL)AND('')))OR(t0.c0)), t0.c0 COLLATE NOCASE) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM t0 INNER JOIN v0 ON NULLIF(((((NULL)AND('')))OR(t0.c0)), t0.c0 COLLATE NOCASE) GROUP BY v0.c0 HAVING COUNT(*) UNION ALL SELECT ALL v0.c0 FROM t0 INNER JOIN v0 ON NULLIF(((((NULL)AND('')))OR(t0.c0)), t0.c0 COLLATE NOCASE) GROUP BY v0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT v0.c0 FROM t0 INNER JOIN v0 ON NULLIF(((((NULL)AND('')))OR(t0.c0)), t0.c0 COLLATE NOCASE) GROUP BY v0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT v0.c0 FROM t0 INNER JOIN v0 ON NULLIF(((((NULL)AND('')))OR(t0.c0)), t0.c0 COLLATE NOCASE) GROUP BY v0.c0;
SELECT ALL * FROM t0;
SELECT ALL * FROM t0 NOT INDEXED WHERE (((t0.c0 COLLATE NOCASE) NOT NULL)) UNION ALL SELECT * FROM t0 WHERE ((NOT (((t0.c0 COLLATE NOCASE) NOT NULL)))) UNION ALL SELECT ALL * FROM t0 WHERE (((((t0.c0 COLLATE NOCASE) NOT NULL)) ISNULL));
SELECT ALL * FROM t0;
SELECT DISTINCT t0.c1, t0.c0 FROM t0;
SELECT DISTINCT t0.c1, t0.c0 FROM t0 WHERE ((t0.c2 IN (t0.c2)) COLLATE BINARY) UNION SELECT DISTINCT t0.c1, t0.c0 FROM t0 WHERE ((NOT ((t0.c2 IN (t0.c2)) COLLATE BINARY))) UNION SELECT DISTINCT t0.c1, t0.c0 FROM t0 WHERE ((((t0.c2 IN (t0.c2)) COLLATE BINARY) ISNULL));
SELECT DISTINCT t0.c1, t0.c0 FROM t0;
SELECT ALL t0.c1, v0.c0 FROM t0 LEFT OUTER JOIN v0 ON ((t0.c1)||(t0.c1)) GROUP BY t0.c1, v0.c0;
SELECT ALL t0.c1, v0.c0 FROM t0 LEFT OUTER JOIN v0 ON ((t0.c1)||(t0.c1)) WHERE (CAST(('-1007668398' IN (t0.c2)) AS BLOB)) GROUP BY t0.c1, v0.c0 UNION SELECT ALL t0.c1, v0.c0 FROM t0 LEFT OUTER JOIN v0 ON ((t0.c1)||(t0.c1)) WHERE ((NOT (CAST(('-1007668398' IN (t0.c2)) AS BLOB)))) GROUP BY t0.c1, v0.c0 UNION SELECT t0.c1, v0.c0 FROM t0 LEFT OUTER JOIN v0 ON ((t0.c1)||(t0.c1)) WHERE (((CAST(('-1007668398' IN (t0.c2)) AS BLOB)) ISNULL)) GROUP BY t0.c1, v0.c0;
SELECT ALL t0.c1, v0.c0 FROM t0 LEFT OUTER JOIN v0 ON ((t0.c1)||(t0.c1)) GROUP BY t0.c1, v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((((v0.c0)IS NOT(v0.c0))) NOTNULL) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (((((v0.c0)IS NOT(v0.c0))) NOTNULL))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((((((v0.c0)IS NOT(v0.c0))) NOTNULL)) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((((v0.c0)IS NOT(v0.c0))) NOTNULL) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (((((v0.c0)IS NOT(v0.c0))) NOTNULL))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((((((v0.c0)IS NOT(v0.c0))) NOTNULL)) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL * FROM t0, v0;
SELECT ALL * FROM t0, v0 WHERE (((0.3721564829353854)IS NOT(t0.c1))) UNION ALL SELECT * FROM t0, v0 WHERE ((NOT (((0.3721564829353854)IS NOT(t0.c1))))) UNION ALL SELECT ALL * FROM t0, v0 WHERE (((((0.3721564829353854)IS NOT(t0.c1))) ISNULL));
SELECT ALL * FROM t0, v0;
SELECT DISTINCT * FROM t0 LEFT OUTER JOIN v0 ON ((t0.c1 COLLATE RTRIM) IS TRUE);
SELECT DISTINCT * FROM t0 LEFT OUTER JOIN v0 ON ((t0.c1 COLLATE RTRIM) IS TRUE) WHERE ((('.)FhE]w{') NOT NULL) COLLATE RTRIM) UNION SELECT DISTINCT * FROM t0 LEFT OUTER JOIN v0 ON ((t0.c1 COLLATE RTRIM) IS TRUE) WHERE ((NOT ((('.)FhE]w{') NOT NULL) COLLATE RTRIM))) UNION SELECT DISTINCT * FROM t0 LEFT OUTER JOIN v0 ON ((t0.c1 COLLATE RTRIM) IS TRUE) WHERE ((((('.)FhE]w{') NOT NULL) COLLATE RTRIM) ISNULL));
SELECT DISTINCT * FROM t0 LEFT OUTER JOIN v0 ON ((t0.c1 COLLATE RTRIM) IS TRUE);
SELECT t0.c0, t0.c1, t0.c2 FROM t0, v0 GROUP BY t0.c0, t0.c1, t0.c2;
SELECT ALL t0.c0, t0.c1, t0.c2 FROM t0, v0 WHERE (v0.c0) GROUP BY t0.c0, t0.c1, t0.c2 UNION SELECT ALL t0.c0, t0.c1, t0.c2 FROM t0, v0 WHERE ((NOT (v0.c0))) GROUP BY t0.c0, t0.c1, t0.c2 UNION SELECT ALL t0.c0, t0.c1, t0.c2 FROM t0, v0 WHERE (((v0.c0) ISNULL)) GROUP BY t0.c0, t0.c1, t0.c2;
SELECT t0.c0, t0.c1, t0.c2 FROM t0, v0 GROUP BY t0.c0, t0.c1, t0.c2;
SELECT t0.c0, v0.c0 FROM t0 FULL OUTER JOIN v0 ON CASE WHEN CASE t0.c2  WHEN 0x587c9094 THEN t0.c1 WHEN t0.c2 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END THEN ((t0.c0) BETWEEN (v0.c0) AND (t0.c0)) WHEN (~ (0.38035854214566134)) THEN t0.c0 WHEN ((v0.c0) NOT NULL) THEN t0.c1 WHEN ((t0.c0)GLOB(t0.c0)) THEN COALESCE(t0.c0, NULL, x'', t0.c2) WHEN CAST(v0.c0 AS NUMERIC) THEN ((t0.c2) NOT BETWEEN (t0.c1) AND (v0.c0)) END GROUP BY t0.c0, v0.c0;
SELECT t0.c0, v0.c0 FROM t0 FULL OUTER JOIN v0 ON CASE WHEN CASE t0.c2  WHEN 0X587c9094 THEN t0.c1 WHEN t0.c2 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END THEN ((t0.c0) BETWEEN (v0.c0) AND (t0.c0)) WHEN (~ (0.38035854214566134)) THEN t0.c0 WHEN ((v0.c0) NOT NULL) THEN t0.c1 WHEN ((t0.c0)GLOB(t0.c0)) THEN COALESCE(t0.c0, NULL, x'', t0.c2) WHEN CAST(v0.c0 AS NUMERIC) THEN ((t0.c2) NOT BETWEEN (t0.c1) AND (v0.c0)) END GROUP BY t0.c0, v0.c0 HAVING GROUP_CONCAT(COUNT(*)) UNION ALL SELECT ALL t0.c0, v0.c0 FROM t0 FULL OUTER JOIN v0 ON CASE WHEN CASE t0.c2  WHEN 0X587c9094 THEN t0.c1 WHEN t0.c2 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END THEN ((t0.c0) BETWEEN (v0.c0) AND (t0.c0)) WHEN (~ (0.38035854214566134)) THEN t0.c0 WHEN ((v0.c0) NOT NULL) THEN t0.c1 WHEN ((t0.c0)GLOB(t0.c0)) THEN COALESCE(t0.c0, NULL, x'', t0.c2) WHEN CAST(v0.c0 AS NUMERIC) THEN ((t0.c2) NOT BETWEEN (t0.c1) AND (v0.c0)) END GROUP BY t0.c0, v0.c0 HAVING (NOT (GROUP_CONCAT(COUNT(*)))) UNION ALL SELECT t0.c0, v0.c0 FROM t0 FULL OUTER JOIN v0 ON CASE WHEN CASE t0.c2  WHEN 0X587c9094 THEN t0.c1 WHEN t0.c2 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END THEN ((t0.c0) BETWEEN (v0.c0) AND (t0.c0)) WHEN (~ (0.38035854214566134)) THEN t0.c0 WHEN ((v0.c0) NOT NULL) THEN t0.c1 WHEN ((t0.c0)GLOB(t0.c0)) THEN COALESCE(t0.c0, NULL, x'', t0.c2) WHEN CAST(v0.c0 AS NUMERIC) THEN ((t0.c2) NOT BETWEEN (t0.c1) AND (v0.c0)) END GROUP BY t0.c0, v0.c0 HAVING ((GROUP_CONCAT(COUNT(*))) ISNULL);
SELECT t0.c1, t0.c2, t0.c0 FROM t0 INNER JOIN v0 ON (~ (((t0.c0) ISNULL)));
SELECT t0.c1, t0.c2, t0.c0 FROM t0 INNER JOIN v0 ON (~ (((t0.c0) ISNULL))) WHERE (((v0.c0)<<((- (''))))) UNION ALL SELECT ALL t0.c1, t0.c2, t0.c0 FROM t0 INNER JOIN v0 ON (~ (((t0.c0) ISNULL))) WHERE ((NOT (((v0.c0)<<((- (''))))))) UNION ALL SELECT ALL t0.c1, t0.c2, t0.c0 FROM t0 INNER JOIN v0 ON (~ (((t0.c0) ISNULL))) WHERE (((((v0.c0)<<((- (''))))) ISNULL));
SELECT t0.c1, t0.c2, t0.c0 FROM t0 INNER JOIN v0 ON (~ (((t0.c0) ISNULL)));
SELECT DISTINCT t0.c2 FROM t0;
SELECT DISTINCT t0.c2 FROM t0 WHERE (((CAST(t0.c1 AS NUMERIC)) IS TRUE)) UNION SELECT DISTINCT t0.c2 FROM t0 WHERE ((NOT (((CAST(t0.c1 AS NUMERIC)) IS TRUE)))) UNION SELECT DISTINCT t0.c2 FROM t0 WHERE (((((CAST(t0.c1 AS NUMERIC)) IS TRUE)) ISNULL));
SELECT DISTINCT t0.c2 FROM t0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE ((~ (v0.c0))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT ((~ (v0.c0))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((((~ (v0.c0))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL t0.c2, t0.c1, t0.c0 FROM t0 GROUP BY t0.c2, t0.c1, t0.c0;
SELECT t0.c2, t0.c1, t0.c0 FROM t0 GROUP BY t0.c2, t0.c1, t0.c0 HAVING MAX(5.6287365E7) UNION ALL SELECT t0.c2, t0.c1, t0.c0 FROM t0 GROUP BY t0.c2, t0.c1, t0.c0 HAVING (NOT (MAX(5.6287365E7))) UNION ALL SELECT t0.c2, t0.c1, t0.c0 FROM t0 GROUP BY t0.c2, t0.c1, t0.c0 HAVING ((MAX(5.6287365E7)) ISNULL);
SELECT ALL t0.c2, t0.c1, t0.c0 FROM t0 GROUP BY t0.c2, t0.c1, t0.c0;
SELECT t0.c2, t0.c1, t0.c0 FROM t0 GROUP BY t0.c2, t0.c1, t0.c0 HAVING MAX(5.6287365E7) UNION ALL SELECT t0.c2, t0.c1, t0.c0 FROM t0 GROUP BY t0.c2, t0.c1, t0.c0 HAVING (NOT (MAX(5.6287365E7))) UNION ALL SELECT t0.c2, t0.c1, t0.c0 FROM t0 GROUP BY t0.c2, t0.c1, t0.c0 HAVING ((MAX(5.6287365E7)) ISNULL);
SELECT ALL t0.c2, t0.c1, t0.c0 FROM t0 GROUP BY t0.c2, t0.c1, t0.c0;
SELECT v0.c0, t0.c0, t0.c1, t0.c2 FROM t0, v0 NOT INDEXED;
SELECT ALL v0.c0, t0.c0, t0.c1, t0.c2 FROM t0, v0 WHERE (highlight(CASE WHEN v0.c0 THEN t0.c1 ELSE t0.c1 END, t0.c0 COLLATE BINARY, NULL, CASE t0.c0  WHEN v0.c0 THEN v0.c0 END)) UNION ALL SELECT v0.c0, t0.c0, t0.c1, t0.c2 FROM t0, v0 WHERE ((NOT (highlight(CASE WHEN v0.c0 THEN t0.c1 ELSE t0.c1 END, t0.c0 COLLATE BINARY, NULL, CASE t0.c0  WHEN v0.c0 THEN v0.c0 END)))) UNION ALL SELECT ALL v0.c0, t0.c0, t0.c1, t0.c2 FROM t0, v0 WHERE (((highlight(CASE WHEN v0.c0 THEN t0.c1 ELSE t0.c1 END, t0.c0 COLLATE BINARY, NULL, CASE t0.c0  WHEN v0.c0 THEN v0.c0 END)) ISNULL));
SELECT v0.c0, t0.c0, t0.c1, t0.c2 FROM t0, v0 NOT INDEXED;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (((((v0.c0)AND(v0.c0)))OR(v0.c0)) COLLATE RTRIM) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (((((v0.c0)AND(v0.c0)))OR(v0.c0)) COLLATE RTRIM))) UNION SELECT DISTINCT * FROM v0 WHERE (((((((v0.c0)AND(v0.c0)))OR(v0.c0)) COLLATE RTRIM) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT t0.c2, t0.c0, t0.c1 FROM t0 GROUP BY t0.c2, t0.c0, t0.c1;
SELECT ALL t0.c2, t0.c0, t0.c1 FROM t0 WHERE (((((((t0.c2)OR(-837559166)))OR(t0.c0))) IS FALSE)) GROUP BY t0.c2, t0.c0, t0.c1 UNION SELECT ALL t0.c2, t0.c0, t0.c1 FROM t0 WHERE ((NOT (((((((t0.c2)OR(-837559166)))OR(t0.c0))) IS FALSE)))) GROUP BY t0.c2, t0.c0, t0.c1 UNION SELECT ALL t0.c2, t0.c0, t0.c1 FROM t0 WHERE (((((((((t0.c2)OR(-837559166)))OR(t0.c0))) IS FALSE)) ISNULL)) GROUP BY t0.c2, t0.c0, t0.c1;
SELECT t0.c2, t0.c0, t0.c1 FROM t0 GROUP BY t0.c2, t0.c0, t0.c1;
SELECT ALL t0.c0, t0.c1 FROM t0 GROUP BY t0.c0, t0.c1;
SELECT ALL t0.c0, t0.c1 FROM t0 GROUP BY t0.c0, t0.c1 HAVING MIN(COUNT(COUNT(*))) UNION ALL SELECT ALL t0.c0, t0.c1 FROM t0 NOT INDEXED GROUP BY t0.c0, t0.c1 HAVING (NOT (MIN(COUNT(COUNT(*))))) UNION ALL SELECT t0.c0, t0.c1 FROM t0 GROUP BY t0.c0, t0.c1 HAVING ((MIN(COUNT(COUNT(*)))) ISNULL);
SELECT ALL t0.c1, t0.c2 FROM v0, t0;
SELECT ALL t0.c1, t0.c2 FROM v0, t0 WHERE (((t0.c2)/(t0.c2)) COLLATE NOCASE) UNION ALL SELECT ALL t0.c1, t0.c2 FROM v0, t0 WHERE ((NOT (((t0.c2)/(t0.c2)) COLLATE NOCASE))) UNION ALL SELECT ALL t0.c1, t0.c2 FROM v0, t0 WHERE (((((t0.c2)/(t0.c2)) COLLATE NOCASE) ISNULL));
SELECT ALL t0.c1, t0.c2 FROM v0, t0;
SELECT DISTINCT t0.c1 FROM t0, v0;
SELECT DISTINCT t0.c1 FROM t0, v0 WHERE ((((+ (v0.c0)))|(t0.c2 COLLATE NOCASE))) UNION SELECT DISTINCT t0.c1 FROM t0, v0 WHERE ((NOT ((((+ (v0.c0)))|(t0.c2 COLLATE NOCASE))))) UNION SELECT DISTINCT t0.c1 FROM t0, v0 WHERE ((((((+ (v0.c0)))|(t0.c2 COLLATE NOCASE))) ISNULL));
SELECT DISTINCT t0.c1 FROM t0, v0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE (((CAST(t0.c0 AS NUMERIC))OR((((t0.c2, t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c2, t0.c2)) AND ((t0.c2, t0.c0, t0.c1)))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT (((CAST(t0.c0 AS NUMERIC))OR((((t0.c2, t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c2, t0.c2)) AND ((t0.c2, t0.c0, t0.c1)))))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE (((((CAST(t0.c0 AS NUMERIC))OR((((t0.c2, t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c2, t0.c2)) AND ((t0.c2, t0.c0, t0.c1)))))) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((((COUNT(*))GLOB(v0.c0))) IS TRUE) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (((((COUNT(*))GLOB(v0.c0))) IS TRUE))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((((((COUNT(*))GLOB(v0.c0))) IS TRUE)) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((((COUNT(*))GLOB(v0.c0))) IS TRUE) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (((((COUNT(*))GLOB(v0.c0))) IS TRUE))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((((((COUNT(*))GLOB(v0.c0))) IS TRUE)) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT * FROM v0;
SELECT * FROM v0 WHERE (CAST(CASE 'fO'  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END AS NUMERIC)) UNION ALL SELECT * FROM v0 NOT INDEXED WHERE ((NOT (CAST(CASE 'fO'  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END AS NUMERIC)))) UNION ALL SELECT ALL * FROM v0 WHERE (((CAST(CASE 'fO'  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END AS NUMERIC)) ISNULL));
SELECT * FROM v0;
SELECT DISTINCT v0.c0, t0.c0, t0.c1, t0.c2 FROM v0, t0;
SELECT DISTINCT v0.c0, t0.c0, t0.c1, t0.c2 FROM v0, t0 WHERE ((((((v0.c0) NOT BETWEEN (t0.c2) AND (t0.c1))))>=((((t0.c1)-(t0.c0)))))) UNION SELECT DISTINCT v0.c0, t0.c0, t0.c1, t0.c2 FROM v0, t0 WHERE ((NOT ((((((v0.c0) NOT BETWEEN (t0.c2) AND (t0.c1))))>=((((t0.c1)-(t0.c0)))))))) UNION SELECT DISTINCT v0.c0, t0.c0, t0.c1, t0.c2 FROM v0, t0 WHERE ((((((((v0.c0) NOT BETWEEN (t0.c2) AND (t0.c1))))>=((((t0.c1)-(t0.c0)))))) ISNULL));
SELECT DISTINCT v0.c0, t0.c0, t0.c1, t0.c2 FROM v0, t0;
SELECT t0.c2, v0.c0, t0.c0 FROM t0, v0 GROUP BY t0.c2, v0.c0, t0.c0;
SELECT ALL t0.c2, v0.c0, t0.c0 FROM t0, v0 WHERE (TYPEOF(CASE '0.1459117034301085'  WHEN t0.c2 THEN t0.c2 ELSE t0.c1 END)) GROUP BY t0.c2, v0.c0, t0.c0 UNION SELECT ALL t0.c2, v0.c0, t0.c0 FROM t0, v0 WHERE ((NOT (TYPEOF(CASE '0.1459117034301085'  WHEN t0.c2 THEN t0.c2 ELSE t0.c1 END)))) GROUP BY t0.c2, v0.c0, t0.c0 UNION SELECT ALL t0.c2, v0.c0, t0.c0 FROM t0, v0 WHERE (((TYPEOF(CASE '0.1459117034301085'  WHEN t0.c2 THEN t0.c2 ELSE t0.c1 END)) ISNULL)) GROUP BY t0.c2, v0.c0, t0.c0;
SELECT t0.c2, v0.c0, t0.c0 FROM t0, v0 GROUP BY t0.c2, v0.c0, t0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING COUNT(CASE MAX(v0.c0)  WHEN AVG(v0.c0) THEN v0.c0 ELSE v0.c0 END) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (COUNT(CASE MAX(v0.c0)  WHEN AVG(v0.c0) THEN v0.c0 ELSE v0.c0 END))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((COUNT(CASE MAX(v0.c0)  WHEN AVG(v0.c0) THEN v0.c0 ELSE v0.c0 END)) ISNULL);
SELECT ALL t0.c1, t0.c2 FROM v0 CROSS JOIN t0 ON COALESCE(LIKE(t0.c1, t0.c0, '>'), ((t0.c1)>=(t0.c2)));
SELECT ALL t0.c1, t0.c2 FROM v0 CROSS JOIN t0 ON COALESCE(LIKE(t0.c1, t0.c0, '>'), ((t0.c1)>=(t0.c2))) WHERE (((CASE WHEN v0.c0 THEN t0.c0 ELSE t0.c0 END) NOT NULL)) UNION ALL SELECT t0.c1, t0.c2 FROM v0 CROSS JOIN t0 ON COALESCE(LIKE(t0.c1, t0.c0, '>'), ((t0.c1)>=(t0.c2))) WHERE ((NOT (((CASE WHEN v0.c0 THEN t0.c0 ELSE t0.c0 END) NOT NULL)))) UNION ALL SELECT t0.c1, t0.c2 FROM v0 CROSS JOIN t0 ON COALESCE(LIKE(t0.c1, t0.c0, '>'), ((t0.c1)>=(t0.c2))) WHERE (((((CASE WHEN v0.c0 THEN t0.c0 ELSE t0.c0 END) NOT NULL)) ISNULL));
SELECT ALL t0.c1, t0.c2 FROM v0 CROSS JOIN t0 ON COALESCE(LIKE(t0.c1, t0.c0, '>'), ((t0.c1)>=(t0.c2)));
SELECT DISTINCT t0.c1 FROM t0, v0;
SELECT DISTINCT t0.c1 FROM t0, v0 WHERE (t0.c1) UNION SELECT DISTINCT t0.c1 FROM t0, v0 WHERE ((NOT (t0.c1))) UNION SELECT DISTINCT t0.c1 FROM t0, v0 WHERE (((t0.c1) ISNULL));
SELECT DISTINCT t0.c1 FROM t0, v0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (UNICODE(-1919299475) COLLATE BINARY) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT (UNICODE(-1919299475) COLLATE BINARY))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE (((UNICODE(-1919299475) COLLATE BINARY) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (((((((((((GROUP_CONCAT(COUNT(SUM(MAX(v0.c0)))), v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, MAX(TOTAL(MAX(v0.c0))), COUNT(v0.c0))) AND ((COUNT(*), v0.c0, AVG(v0.c0)))))AND(-2120476913)))OR(((((v0.c0)AND(v0.c0)))OR(308049530)))))AND(x'')))OR(CASE v0.c0  WHEN NULL THEN COUNT(v0.c0) ELSE SUM(NULL) END)) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT ((((((((((((GROUP_CONCAT(COUNT(SUM(MAX(v0.c0)))), v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, MAX(TOTAL(MAX(v0.c0))), COUNT(v0.c0))) AND ((COUNT(*), v0.c0, AVG(v0.c0)))))AND(-2120476913)))OR(((((v0.c0)AND(v0.c0)))OR(308049530)))))AND(x'')))OR(CASE v0.c0  WHEN NULL THEN COUNT(v0.c0) ELSE SUM(NULL) END)))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (((((((((((((GROUP_CONCAT(COUNT(SUM(MAX(v0.c0)))), v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, MAX(TOTAL(MAX(v0.c0))), COUNT(v0.c0))) AND ((COUNT(*), v0.c0, AVG(v0.c0)))))AND(-2120476913)))OR(((((v0.c0)AND(v0.c0)))OR(308049530)))))AND(x'')))OR(CASE v0.c0  WHEN NULL THEN COUNT(v0.c0) ELSE SUM(NULL) END))) ISNULL);
SELECT ALL * FROM v0;
SELECT ALL * FROM v0 WHERE ((~ (((v0.c0) NOT NULL)))) UNION ALL SELECT * FROM v0 WHERE ((NOT ((~ (((v0.c0) NOT NULL)))))) UNION ALL SELECT * FROM v0 WHERE ((((~ (((v0.c0) NOT NULL)))) ISNULL));
SELECT ALL * FROM v0;
SELECT DISTINCT t0.c0 FROM t0, v0;
SELECT DISTINCT t0.c0 FROM t0, v0 WHERE ((((t0.c1)) NOT BETWEEN ((((v0.c0)IS NOT(v0.c0)))) AND ((v0.c0 COLLATE NOCASE)))) UNION SELECT DISTINCT t0.c0 FROM t0, v0 WHERE ((NOT ((((t0.c1)) NOT BETWEEN ((((v0.c0)IS NOT(v0.c0)))) AND ((v0.c0 COLLATE NOCASE)))))) UNION SELECT DISTINCT t0.c0 FROM t0, v0 WHERE ((((((t0.c1)) NOT BETWEEN ((((v0.c0)IS NOT(v0.c0)))) AND ((v0.c0 COLLATE NOCASE)))) ISNULL));
SELECT DISTINCT t0.c0 FROM t0, v0;
SELECT t0.c0, t0.c2 FROM t0 GROUP BY t0.c0, t0.c2;
SELECT t0.c0, t0.c2 FROM t0 WHERE (((0.18396794676285477)>(t0.c0))) GROUP BY t0.c0, t0.c2 UNION SELECT t0.c0, t0.c2 FROM t0 WHERE ((NOT (((0.18396794676285477)>(t0.c0))))) GROUP BY t0.c0, t0.c2 UNION SELECT t0.c0, t0.c2 FROM t0 WHERE (((((0.18396794676285477)>(t0.c0))) ISNULL)) GROUP BY t0.c0, t0.c2;
SELECT t0.c0, t0.c2 FROM t0 GROUP BY t0.c0, t0.c2;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (((~ (TOTAL(SUM(MAX(COUNT(COUNT(*))))))))<>(AVG(t0.c2))) UNION ALL SELECT ALL t0.c0 FROM t0 NOT INDEXED GROUP BY t0.c0 HAVING (NOT ((((~ (TOTAL(SUM(MAX(COUNT(COUNT(*))))))))!=(AVG(t0.c2))))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (((((~ (TOTAL(SUM(MAX(COUNT(COUNT(*))))))))!=(AVG(t0.c2)))) ISNULL);
SELECT ALL * FROM v0, t0;
SELECT ALL * FROM v0, t0 WHERE (json_patch(((t0.c0) IS TRUE), v0.c0 COLLATE BINARY)) UNION ALL SELECT * FROM v0, t0 WHERE ((NOT (json_patch(((t0.c0) IS TRUE), v0.c0 COLLATE BINARY)))) UNION ALL SELECT * FROM v0, t0 WHERE (((json_patch(((t0.c0) IS TRUE), v0.c0 COLLATE BINARY)) ISNULL));
SELECT ALL * FROM v0, t0;
SELECT DISTINCT t0.c2, t0.c1, t0.c0 FROM t0;
SELECT DISTINCT t0.c2, t0.c1, t0.c0 FROM t0 WHERE (CASE ((t0.c2)OR(t0.c0))  WHEN ('2010105996' IN ()) THEN CAST(t0.c0 AS REAL) WHEN t0.c2 THEN (t0.c1 IN ()) WHEN CAST(t0.c0 AS BLOB) THEN ((t0.c1) NOT BETWEEN (t0.c1) AND (t0.c1)) END) UNION SELECT DISTINCT t0.c2, t0.c1, t0.c0 FROM t0 WHERE ((NOT (CASE ((t0.c2)OR(t0.c0))  WHEN ('2010105996' IN ()) THEN CAST(t0.c0 AS REAL) WHEN t0.c2 THEN (t0.c1 IN ()) WHEN CAST(t0.c0 AS BLOB) THEN ((t0.c1) NOT BETWEEN (t0.c1) AND (t0.c1)) END))) UNION SELECT DISTINCT t0.c2, t0.c1, t0.c0 FROM t0 WHERE (((CASE ((t0.c2)OR(t0.c0))  WHEN ('2010105996' IN ()) THEN CAST(t0.c0 AS REAL) WHEN t0.c2 THEN (t0.c1 IN ()) WHEN CAST(t0.c0 AS BLOB) THEN ((t0.c1) NOT BETWEEN (t0.c1) AND (t0.c1)) END) ISNULL));
SELECT DISTINCT t0.c2, t0.c1, t0.c0 FROM t0;
SELECT t0.c2, t0.c0 FROM t0 GROUP BY t0.c2, t0.c0;
SELECT ALL t0.c2, t0.c0 FROM t0 WHERE ((((t0.c0 IN ())) BETWEEN (((t0.c2) NOT BETWEEN (t0.c2) AND (t0.c2))) AND (0xffffffffd8c8b256))) GROUP BY t0.c2, t0.c0 UNION SELECT ALL t0.c2, t0.c0 FROM t0 WHERE ((NOT ((((t0.c0 IN ())) BETWEEN (((t0.c2) NOT BETWEEN (t0.c2) AND (t0.c2))) AND (0Xffffffffd8c8b256))))) GROUP BY t0.c2, t0.c0 UNION SELECT t0.c2, t0.c0 FROM t0 WHERE ((((((t0.c0 IN ())) BETWEEN (((t0.c2) NOT BETWEEN (t0.c2) AND (t0.c2))) AND (0Xffffffffd8c8b256))) ISNULL)) GROUP BY t0.c2, t0.c0;
SELECT t0.c2, t0.c0 FROM t0 GROUP BY t0.c2, t0.c0;
SELECT ALL t0.c1 FROM t0, v0 GROUP BY t0.c1;
SELECT ALL t0.c1 FROM t0, v0 GROUP BY t0.c1 HAVING (~ (COUNT(*))) UNION ALL SELECT t0.c1 FROM t0, v0 GROUP BY t0.c1 HAVING (NOT ((~ (COUNT(*))))) UNION ALL SELECT ALL t0.c1 FROM t0, v0 GROUP BY t0.c1 HAVING (((~ (COUNT(*)))) ISNULL);
SELECT ALL t0.c1 FROM t0, v0 GROUP BY t0.c1;
SELECT ALL t0.c1 FROM t0, v0 GROUP BY t0.c1 HAVING (~ (COUNT(*))) UNION ALL SELECT t0.c1 FROM t0, v0 GROUP BY t0.c1 HAVING (NOT ((~ (COUNT(*))))) UNION ALL SELECT ALL t0.c1 FROM t0, v0 GROUP BY t0.c1 HAVING (((~ (COUNT(*)))) ISNULL);
SELECT ALL t0.c1 FROM t0, v0 GROUP BY t0.c1;
SELECT ALL * FROM t0;
SELECT * FROM t0 WHERE (t0.c2) UNION ALL SELECT ALL * FROM t0 WHERE ((NOT (t0.c2))) UNION ALL SELECT * FROM t0 WHERE (((t0.c2) ISNULL));
SELECT ALL * FROM t0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (((((t0.c2)+(t0.c2))) BETWEEN ((((t0.c2))<>((t0.c0)))) AND (CAST(t0.c0 AS BLOB)))) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (((((t0.c2)+(t0.c2))) BETWEEN ((((t0.c2))!=((t0.c0)))) AND (CAST(t0.c0 AS BLOB)))))) UNION SELECT DISTINCT * FROM t0 WHERE (((((((t0.c2)+(t0.c2))) BETWEEN ((((t0.c2))!=((t0.c0)))) AND (CAST(t0.c0 AS BLOB)))) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT t0.c1 FROM t0 GROUP BY t0.c1;
SELECT ALL t0.c1 FROM t0 WHERE (((t0.c1) BETWEEN (CASE WHEN '' THEN t0.c0 ELSE '' END) AND (0.5048744071471064))) GROUP BY t0.c1 UNION SELECT ALL t0.c1 FROM t0 WHERE ((NOT (((t0.c1) BETWEEN (CASE WHEN '' THEN t0.c0 ELSE '' END) AND (0.5048744071471064))))) GROUP BY t0.c1 UNION SELECT ALL t0.c1 FROM t0 WHERE (((((t0.c1) BETWEEN (CASE WHEN '' THEN t0.c0 ELSE '' END) AND (0.5048744071471064))) ISNULL)) GROUP BY t0.c1;
SELECT t0.c1 FROM t0 GROUP BY t0.c1;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING SUM(AVG(v0.c0)) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (SUM(AVG(v0.c0)))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((SUM(AVG(v0.c0))) ISNULL);
SELECT v0.c0 FROM v0;
SELECT v0.c0 FROM v0 WHERE ((((- (v0.c0)))AND(v0.c0 COLLATE RTRIM))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE ((NOT ((((- (v0.c0)))AND(v0.c0 COLLATE RTRIM))))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE ((((((- (v0.c0)))AND(v0.c0 COLLATE RTRIM))) ISNULL));
SELECT v0.c0 FROM v0;
SELECT DISTINCT * FROM t0, v0;
SELECT DISTINCT * FROM t0, v0 WHERE (((t0.c1 COLLATE BINARY) IS TRUE)) UNION SELECT DISTINCT * FROM t0, v0 WHERE ((NOT (((t0.c1 COLLATE BINARY) IS TRUE)))) UNION SELECT DISTINCT * FROM t0, v0 WHERE (((((t0.c1 COLLATE BINARY) IS TRUE)) ISNULL));
SELECT DISTINCT * FROM t0, v0;
SELECT t0.c1, t0.c0 FROM v0, t0 GROUP BY t0.c1, t0.c0;
SELECT t0.c1, t0.c0 FROM v0, t0 WHERE (((t0.c0 IN ()) IN ())) GROUP BY t0.c1, t0.c0 UNION SELECT t0.c1, t0.c0 FROM v0, t0 WHERE ((NOT (((t0.c0 IN ()) IN ())))) GROUP BY t0.c1, t0.c0 UNION SELECT ALL t0.c1, t0.c0 FROM v0, t0 WHERE (((((t0.c0 IN ()) IN ())) ISNULL)) GROUP BY t0.c1, t0.c0;
SELECT t0.c1, t0.c0 FROM v0, t0 GROUP BY t0.c1, t0.c0;
SELECT v0.c0, t0.c1, t0.c0 FROM v0 RIGHT OUTER JOIN t0 ON (((v0.c0, t0.c0, t0.c1, t0.c0, t0.c0)) BETWEEN (((((v0.c0, t0.c2, v0.c0, t0.c0, '-277102053'))>=((t0.c2, t0.c0, t0.c2, t0.c0, NULL))), ((t0.c2)==(v0.c0)), rtreenode(t0.c2, t0.c0), (((t0.c1))<=((t0.c0))), v0.c0)) AND ((x'70bc', UPPER(v0.c0), ((t0.c0)%(t0.c1)), ((v0.c0)+(t0.c1)), ((v0.c0)>>(t0.c2))))) GROUP BY v0.c0, t0.c1, t0.c0;
SELECT v0.c0, t0.c1, t0.c0 FROM v0 RIGHT OUTER JOIN t0 ON (((v0.c0, t0.c0, t0.c1, t0.c0, t0.c0)) BETWEEN (((((v0.c0, t0.c2, v0.c0, t0.c0, '-277102053'))>=((t0.c2, t0.c0, t0.c2, t0.c0, NULL))), ((t0.c2)=(v0.c0)), rtreenode(t0.c2, t0.c0), (((t0.c1))<=((t0.c0))), v0.c0)) AND ((x'70bc', UPPER(v0.c0), ((t0.c0)%(t0.c1)), ((v0.c0)+(t0.c1)), ((v0.c0)>>(t0.c2))))) GROUP BY v0.c0, t0.c1, t0.c0 HAVING ABS((((v0.c0, COUNT(t0.c2), t0.c2))<>((v0.c0, COUNT(AVG(MIN(v0.c0))), t0.c2)))) UNION ALL SELECT ALL v0.c0, t0.c1, t0.c0 FROM v0 RIGHT OUTER JOIN t0 ON (((v0.c0, t0.c0, t0.c1, t0.c0, t0.c0)) BETWEEN (((((v0.c0, t0.c2, v0.c0, t0.c0, '-277102053'))>=((t0.c2, t0.c0, t0.c2, t0.c0, NULL))), ((t0.c2)==(v0.c0)), rtreenode(t0.c2, t0.c0), (((t0.c1))<=((t0.c0))), v0.c0)) AND ((x'70bc', UPPER(v0.c0), ((t0.c0)%(t0.c1)), ((v0.c0)+(t0.c1)), ((v0.c0)>>(t0.c2))))) GROUP BY v0.c0, t0.c1, t0.c0 HAVING (NOT (ABS((((v0.c0, COUNT(t0.c2), t0.c2))<>((v0.c0, COUNT(AVG(MIN(v0.c0))), t0.c2)))))) UNION ALL SELECT v0.c0, t0.c1, t0.c0 FROM v0 RIGHT OUTER JOIN t0 ON (((v0.c0, t0.c0, t0.c1, t0.c0, t0.c0)) BETWEEN (((((v0.c0, t0.c2, v0.c0, t0.c0, '-277102053'))>=((t0.c2, t0.c0, t0.c2, t0.c0, NULL))), ((t0.c2)=(v0.c0)), rtreenode(t0.c2, t0.c0), (((t0.c1))<=((t0.c0))), v0.c0)) AND ((x'70bc', UPPER(v0.c0), ((t0.c0)%(t0.c1)), ((v0.c0)+(t0.c1)), ((v0.c0)>>(t0.c2))))) GROUP BY v0.c0, t0.c1, t0.c0 HAVING ((ABS((((v0.c0, COUNT(t0.c2), t0.c2))!=((v0.c0, COUNT(AVG(MIN(v0.c0))), t0.c2))))) ISNULL);
SELECT ALL SUM((((v0.c0)) BETWEEN ((((((((((((((t0.c1)AND(t0.c0)))AND(-1879563050)))AND(t0.c2)))OR('-786031161')))OR(t0.c2)))AND(t0.c1)))) AND ((((v0.c0)+(v0.c0)))))) FROM v0, t0 ORDER BY CAST(t0.c1 AS REAL);
SELECT ALL * FROM t0, v0;
SELECT * FROM t0, v0 WHERE ((((v0.c0 IN ())) NOTNULL)) UNION ALL SELECT * FROM t0, v0 WHERE ((NOT ((((v0.c0 IN ())) NOTNULL)))) UNION ALL SELECT * FROM t0, v0 WHERE ((((((v0.c0 IN ())) NOTNULL)) ISNULL));
SELECT ALL * FROM t0, v0;
SELECT DISTINCT t0.c2, t0.c1, t0.c0 FROM t0;
SELECT DISTINCT t0.c2, t0.c1, t0.c0 FROM t0 WHERE (x'') UNION SELECT DISTINCT t0.c2, t0.c1, t0.c0 FROM t0 WHERE ((NOT (x''))) UNION SELECT DISTINCT t0.c2, t0.c1, t0.c0 FROM t0 WHERE (((x'') ISNULL));
SELECT DISTINCT t0.c2, t0.c1, t0.c0 FROM t0;
SELECT ALL t0.c2 FROM t0 GROUP BY t0.c2;
SELECT t0.c2 FROM t0 WHERE ((NOT (((((t0.c2)OR(t0.c2)))OR(t0.c1))))) GROUP BY t0.c2 UNION SELECT ALL t0.c2 FROM t0 WHERE ((NOT ((NOT (((((t0.c2)OR(t0.c2)))OR(t0.c1))))))) GROUP BY t0.c2 UNION SELECT ALL t0.c2 FROM t0 WHERE ((((NOT (((((t0.c2)OR(t0.c2)))OR(t0.c1))))) ISNULL)) GROUP BY t0.c2;
SELECT ALL t0.c2 FROM t0 GROUP BY t0.c2;
SELECT t0.c0, t0.c2, t0.c1 FROM t0 GROUP BY t0.c0, t0.c2, t0.c1;
SELECT t0.c0, t0.c2, t0.c1 FROM t0 GROUP BY t0.c0, t0.c2, t0.c1 HAVING CASE (((('w')OR(t0.c2)))OR(t0.c2))  WHEN TOTAL(COUNT(t0.c2)) THEN MAX(TOTAL(TOTAL(t0.c1))) END UNION ALL SELECT t0.c0, t0.c2, t0.c1 FROM t0 GROUP BY t0.c0, t0.c2, t0.c1 HAVING (NOT (CASE (((('w')OR(t0.c2)))OR(t0.c2))  WHEN TOTAL(COUNT(t0.c2)) THEN MAX(TOTAL(TOTAL(t0.c1))) END)) UNION ALL SELECT ALL t0.c0, t0.c2, t0.c1 FROM t0 GROUP BY t0.c0, t0.c2, t0.c1 HAVING ((CASE (((('w')OR(t0.c2)))OR(t0.c2))  WHEN TOTAL(COUNT(t0.c2)) THEN MAX(TOTAL(TOTAL(t0.c1))) END) ISNULL);
SELECT * FROM v0;
SELECT ALL * FROM v0 WHERE ((0X7ac5f8b2 COLLATE BINARY IN ())) UNION ALL SELECT * FROM v0 WHERE ((NOT ((0x7ac5f8b2 COLLATE BINARY IN ())))) UNION ALL SELECT ALL * FROM v0 WHERE ((((0X7ac5f8b2 COLLATE BINARY IN ())) ISNULL));
SELECT * FROM v0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE ((NOT (PRINTF(t0.c0, t0.c2, 0.6234105502931371)))) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT ((NOT (PRINTF(t0.c0, t0.c2, 0.6234105502931371)))))) UNION SELECT DISTINCT * FROM t0 WHERE ((((NOT (PRINTF(t0.c0, t0.c2, 0.6234105502931371)))) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT t0.c0 FROM t0 FULL OUTER JOIN v0 ON ((((((((t0.c2)AND(0.015263787314097388)))AND(t0.c0)))OR('-657935786')))OR(((t0.c0)AND(t0.c2)))) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 FULL OUTER JOIN v0 ON ((((((((t0.c2)AND(0.015263787314097388)))AND(t0.c0)))OR('-657935786')))OR(((t0.c0)AND(t0.c2)))) WHERE (CASE WHEN ((t0.c1)||(v0.c0)) THEN 0.5993698103966502 ELSE ((t0.c1) ISNULL) END) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 FULL OUTER JOIN v0 ON ((((((((t0.c2)AND(0.015263787314097388)))AND(t0.c0)))OR('-657935786')))OR(((t0.c0)AND(t0.c2)))) WHERE ((NOT (CASE WHEN ((t0.c1)||(v0.c0)) THEN 0.5993698103966502 ELSE ((t0.c1) ISNULL) END))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 FULL OUTER JOIN v0 ON ((((((((t0.c2)AND(0.015263787314097388)))AND(t0.c0)))OR('-657935786')))OR(((t0.c0)AND(t0.c2)))) WHERE (((CASE WHEN ((t0.c1)||(v0.c0)) THEN 0.5993698103966502 ELSE ((t0.c1) ISNULL) END) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 FULL OUTER JOIN v0 ON ((((((((t0.c2)AND(0.015263787314097388)))AND(t0.c0)))OR('-657935786')))OR(((t0.c0)AND(t0.c2)))) GROUP BY t0.c0;
SELECT t0.c2, v0.c0, t0.c0 FROM t0, v0 GROUP BY t0.c2, v0.c0, t0.c0;
SELECT t0.c2, v0.c0, t0.c0 FROM t0, v0 GROUP BY t0.c2, v0.c0, t0.c0 HAVING COUNT(*) UNION ALL SELECT t0.c2, v0.c0, t0.c0 FROM t0, v0 GROUP BY t0.c2, v0.c0, t0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL t0.c2, v0.c0, t0.c0 FROM t0, v0 GROUP BY t0.c2, v0.c0, t0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT t0.c2, v0.c0, t0.c0 FROM t0, v0 GROUP BY t0.c2, v0.c0, t0.c0;
SELECT t0.c2, v0.c0, t0.c0 FROM t0, v0 GROUP BY t0.c2, v0.c0, t0.c0 HAVING COUNT(*) UNION ALL SELECT t0.c2, v0.c0, t0.c0 FROM t0, v0 GROUP BY t0.c2, v0.c0, t0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL t0.c2, v0.c0, t0.c0 FROM t0, v0 GROUP BY t0.c2, v0.c0, t0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT t0.c2, v0.c0, t0.c0 FROM t0, v0 GROUP BY t0.c2, v0.c0, t0.c0;
SELECT t0.c2, t0.c1, t0.c0, v0.c0 FROM t0, v0;
SELECT ALL t0.c2, t0.c1, t0.c0, v0.c0 FROM t0, v0 WHERE (((CAST(t0.c0 AS INTEGER))<(((x'')+(v0.c0))))) UNION ALL SELECT ALL t0.c2, t0.c1, t0.c0, v0.c0 FROM t0 NOT INDEXED, v0 WHERE ((NOT (((CAST(t0.c0 AS INTEGER))<(((x'')+(v0.c0))))))) UNION ALL SELECT t0.c2, t0.c1, t0.c0, v0.c0 FROM t0, v0 NOT INDEXED WHERE (((((CAST(t0.c0 AS INTEGER))<(((x'')+(v0.c0))))) ISNULL));
SELECT t0.c2, t0.c1, t0.c0, v0.c0 FROM t0, v0;
SELECT DISTINCT * FROM v0 CROSS JOIN t0 ON (t0.c1 IN ());
SELECT DISTINCT * FROM v0 CROSS JOIN t0 ON (t0.c1 IN ()) WHERE (0.21029612596855563) UNION SELECT DISTINCT * FROM v0 CROSS JOIN t0 ON (t0.c1 IN ()) WHERE ((NOT (0.21029612596855563))) UNION SELECT DISTINCT * FROM v0 CROSS JOIN t0 ON (t0.c1 IN ()) WHERE (((0.21029612596855563) ISNULL));
SELECT DISTINCT * FROM v0 CROSS JOIN t0 ON (t0.c1 IN ());
SELECT ALL t0.c0, v0.c0, t0.c2 FROM v0, t0 GROUP BY t0.c0, v0.c0, t0.c2;
SELECT ALL t0.c0, v0.c0, t0.c2 FROM v0, t0 WHERE (CASE WHEN ((v0.c0)>=(t0.c2)) THEN t0.c1 COLLATE NOCASE ELSE (((v0.c0)) NOT BETWEEN ((t0.c1)) AND ((v0.c0))) END) GROUP BY t0.c0, v0.c0, t0.c2 UNION SELECT t0.c0, v0.c0, t0.c2 FROM v0, t0 WHERE ((NOT (CASE WHEN ((v0.c0)>=(t0.c2)) THEN t0.c1 COLLATE NOCASE ELSE (((v0.c0)) NOT BETWEEN ((t0.c1)) AND ((v0.c0))) END))) GROUP BY t0.c0, v0.c0, t0.c2 UNION SELECT t0.c0, v0.c0, t0.c2 FROM v0, t0 WHERE (((CASE WHEN ((v0.c0)>=(t0.c2)) THEN t0.c1 COLLATE NOCASE ELSE (((v0.c0)) NOT BETWEEN ((t0.c1)) AND ((v0.c0))) END) ISNULL)) GROUP BY t0.c0, v0.c0, t0.c2;
SELECT ALL t0.c0, v0.c0, t0.c2 FROM v0, t0 GROUP BY t0.c0, v0.c0, t0.c2;
SELECT ALL t0.c1, v0.c0, t0.c0, t0.c2 FROM t0, v0 GROUP BY t0.c1, v0.c0, t0.c0, t0.c2;
SELECT ALL t0.c1, v0.c0, t0.c0, t0.c2 FROM t0, v0 GROUP BY t0.c1, v0.c0, t0.c0, t0.c2 HAVING ((GROUP_CONCAT(GROUP_CONCAT(TOTAL(COUNT(t0.c1)))))>(CASE WHEN TOTAL(t0.c0) THEN SUM(MIN(COUNT(COUNT(t0.c0)))) WHEN t0.c2 THEN t0.c1 WHEN AVG(t0.c2) THEN v0.c0 WHEN t0.c0 THEN MAX(COUNT(t0.c0)) WHEN t0.c0 THEN MAX(v0.c0) END)) UNION ALL SELECT ALL t0.c1, v0.c0, t0.c0, t0.c2 FROM t0, v0 GROUP BY t0.c1, v0.c0, t0.c0, t0.c2 HAVING (NOT (((GROUP_CONCAT(GROUP_CONCAT(TOTAL(COUNT(t0.c1)))))>(CASE WHEN TOTAL(t0.c0) THEN SUM(MIN(COUNT(COUNT(t0.c0)))) WHEN t0.c2 THEN t0.c1 WHEN AVG(t0.c2) THEN v0.c0 WHEN t0.c0 THEN MAX(COUNT(t0.c0)) WHEN t0.c0 THEN MAX(v0.c0) END)))) UNION ALL SELECT ALL t0.c1, v0.c0, t0.c0, t0.c2 FROM t0, v0 GROUP BY t0.c1, v0.c0, t0.c0, t0.c2 HAVING ((((GROUP_CONCAT(GROUP_CONCAT(TOTAL(COUNT(t0.c1)))))>(CASE WHEN TOTAL(t0.c0) THEN SUM(MIN(COUNT(COUNT(t0.c0)))) WHEN t0.c2 THEN t0.c1 WHEN AVG(t0.c2) THEN v0.c0 WHEN t0.c0 THEN MAX(COUNT(t0.c0)) WHEN t0.c0 THEN MAX(v0.c0) END))) ISNULL);
SELECT v0.c0 FROM v0;
SELECT ALL v0.c0 FROM v0 WHERE (((((v0.c0)-(v0.c0))) ISNULL)) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE ((NOT (((((v0.c0)-(v0.c0))) ISNULL)))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE (((((((v0.c0)-(v0.c0))) ISNULL)) ISNULL));
SELECT v0.c0 FROM v0;
SELECT DISTINCT t0.c0, t0.c2, t0.c1 FROM t0, v0;
SELECT DISTINCT t0.c0, t0.c2, t0.c1 FROM t0, v0 WHERE (TOTAL_CHANGES()) UNION SELECT DISTINCT t0.c0, t0.c2, t0.c1 FROM t0, v0 WHERE ((NOT (TOTAL_CHANGES()))) UNION SELECT DISTINCT t0.c0, t0.c2, t0.c1 FROM t0, v0 WHERE (((TOTAL_CHANGES()) ISNULL));
SELECT DISTINCT t0.c0, t0.c2, t0.c1 FROM t0, v0;
SELECT ALL t0.c2, t0.c0, t0.c1 FROM t0, v0 GROUP BY t0.c2, t0.c0, t0.c1;
SELECT ALL t0.c2, t0.c0, t0.c1 FROM t0, v0 WHERE (((((((v0.c0)OR(v0.c0)))AND(t0.c0)))<>(v0.c0))) GROUP BY t0.c2, t0.c0, t0.c1 UNION SELECT ALL t0.c2, t0.c0, t0.c1 FROM t0, v0 WHERE ((NOT (((((((v0.c0)OR(v0.c0)))AND(t0.c0)))<>(v0.c0))))) GROUP BY t0.c2, t0.c0, t0.c1 UNION SELECT ALL t0.c2, t0.c0, t0.c1 FROM t0, v0 WHERE (((((((((v0.c0)OR(v0.c0)))AND(t0.c0)))!=(v0.c0))) ISNULL)) GROUP BY t0.c2, t0.c0, t0.c1;
SELECT ALL t0.c2, t0.c0, t0.c1 FROM t0, v0 GROUP BY t0.c2, t0.c0, t0.c1;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((((((((json_object(t0.c1, t0.c2))OR(((t0.c2)-(COUNT(COUNT(*)))))))AND(GROUP_CONCAT(t0.c2))))AND(COUNT(*))))OR(MIN(t0.c2))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (((((((((json_object(t0.c1, t0.c2))OR(((t0.c2)-(COUNT(COUNT(*)))))))AND(GROUP_CONCAT(t0.c2))))AND(COUNT(*))))OR(MIN(t0.c2))))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((((((((((json_object(t0.c1, t0.c2))OR(((t0.c2)-(COUNT(COUNT(*)))))))AND(GROUP_CONCAT(t0.c2))))AND(COUNT(*))))OR(MIN(t0.c2)))) ISNULL);
SELECT v0.c0 FROM v0;
SELECT v0.c0 FROM v0 WHERE (ABS(ABS(v0.c0))) UNION ALL SELECT v0.c0 FROM v0 WHERE ((NOT (ABS(ABS(v0.c0))))) UNION ALL SELECT ALL v0.c0 FROM v0 NOT INDEXED WHERE (((ABS(ABS(v0.c0))) ISNULL));
SELECT v0.c0 FROM v0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (CASE ((((0.8979566109965287)OR(v0.c0)))AND(v0.c0))  WHEN CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END THEN ((v0.c0)%(v0.c0)) ELSE ((v0.c0) NOTNULL) END) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (CASE ((((0.8979566109965287)OR(v0.c0)))AND(v0.c0))  WHEN CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END THEN ((v0.c0)%(v0.c0)) ELSE ((v0.c0) NOTNULL) END))) UNION SELECT DISTINCT * FROM v0 WHERE (((CASE ((((0.8979566109965287)OR(v0.c0)))AND(v0.c0))  WHEN CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END THEN ((v0.c0)%(v0.c0)) ELSE ((v0.c0) NOTNULL) END) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (((((((v0.c0)OR(v0.c0)))OR(v0.c0))) IS TRUE)) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (((((((v0.c0)OR(v0.c0)))OR(v0.c0))) IS TRUE)))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE (((((((((v0.c0)OR(v0.c0)))OR(v0.c0))) IS TRUE)) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING v0.c0 UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (v0.c0)) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((v0.c0) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING v0.c0 UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (v0.c0)) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((v0.c0) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL * FROM v0, t0;
SELECT * FROM v0, t0 WHERE (t0.c1) UNION ALL SELECT ALL * FROM v0, t0 WHERE ((NOT (t0.c1))) UNION ALL SELECT * FROM v0, t0 WHERE (((t0.c1) ISNULL));
SELECT ALL * FROM v0, t0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))*((- (v0.c0))))) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))*((- (v0.c0))))))) UNION SELECT DISTINCT * FROM v0 WHERE (((((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))*((- (v0.c0))))) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT ALL t0.c1, v0.c0 FROM t0, v0 GROUP BY t0.c1, v0.c0;
SELECT t0.c1, v0.c0 FROM t0, v0 WHERE ((((- ('0.35673539763227025')))>((~ (v0.c0))))) GROUP BY t0.c1, v0.c0 UNION SELECT t0.c1, v0.c0 FROM t0, v0 WHERE ((NOT ((((- ('0.35673539763227025')))>((~ (v0.c0))))))) GROUP BY t0.c1, v0.c0 UNION SELECT ALL t0.c1, v0.c0 FROM t0, v0 WHERE ((((((- ('0.35673539763227025')))>((~ (v0.c0))))) ISNULL)) GROUP BY t0.c1, v0.c0;
SELECT ALL t0.c1, v0.c0 FROM t0, v0 GROUP BY t0.c1, v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING GROUP_CONCAT(MIN(GROUP_CONCAT(v0.c0))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (GROUP_CONCAT(MIN(GROUP_CONCAT(v0.c0))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((GROUP_CONCAT(MIN(GROUP_CONCAT(v0.c0)))) ISNULL);
SELECT v0.c0 FROM v0;
SELECT v0.c0 FROM v0 WHERE (((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) COLLATE RTRIM) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE ((NOT (((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) COLLATE RTRIM))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE (((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) COLLATE RTRIM) ISNULL));
SELECT v0.c0 FROM v0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (((x'' COLLATE BINARY)>=((((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0)))))) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (((x'' COLLATE BINARY)>=((((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0)))))))) UNION SELECT DISTINCT * FROM v0 WHERE (((((x'' COLLATE BINARY)>=((((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0)))))) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT ALL v0.c0, t0.c2 FROM v0, t0 GROUP BY v0.c0, t0.c2;
SELECT v0.c0, t0.c2 FROM v0, t0 WHERE (CASE ((0xfffffffffb63e3d0) NOT BETWEEN (t0.c1) AND (t0.c2))  WHEN (-1036127626 IN ()) THEN t0.c1 COLLATE BINARY WHEN CASE WHEN t0.c2 THEN t0.c1 END THEN x'' WHEN ((t0.c1)LIKE(t0.c1)) THEN x'' ELSE (('') IS FALSE) END) GROUP BY v0.c0, t0.c2 UNION SELECT v0.c0, t0.c2 FROM v0, t0 WHERE ((NOT (CASE ((0Xfffffffffb63e3d0) NOT BETWEEN (t0.c1) AND (t0.c2))  WHEN (-1036127626 IN ()) THEN t0.c1 COLLATE BINARY WHEN CASE WHEN t0.c2 THEN t0.c1 END THEN x'' WHEN ((t0.c1)LIKE(t0.c1)) THEN x'' ELSE (('') IS FALSE) END))) GROUP BY v0.c0, t0.c2 UNION SELECT v0.c0, t0.c2 FROM v0, t0 WHERE (((CASE ((0xfffffffffb63e3d0) NOT BETWEEN (t0.c1) AND (t0.c2))  WHEN (-1036127626 IN ()) THEN t0.c1 COLLATE BINARY WHEN CASE WHEN t0.c2 THEN t0.c1 END THEN x'' WHEN ((t0.c1)LIKE(t0.c1)) THEN x'' ELSE (('') IS FALSE) END) ISNULL)) GROUP BY v0.c0, t0.c2;
SELECT ALL v0.c0, t0.c2 FROM v0, t0 GROUP BY v0.c0, t0.c2;
SELECT ALL t0.c2, v0.c0, t0.c0 FROM t0, v0 GROUP BY t0.c2, v0.c0, t0.c0;
SELECT ALL t0.c2, v0.c0, t0.c0 FROM t0, v0 GROUP BY t0.c2, v0.c0, t0.c0 HAVING MAX(CAST(MIN(AVG(COUNT(*))) AS NUMERIC)) UNION ALL SELECT t0.c2, v0.c0, t0.c0 FROM t0, v0 GROUP BY t0.c2, v0.c0, t0.c0 HAVING (NOT (MAX(CAST(MIN(AVG(COUNT(*))) AS NUMERIC)))) UNION ALL SELECT t0.c2, v0.c0, t0.c0 FROM t0 NOT INDEXED, v0 GROUP BY t0.c2, v0.c0, t0.c0 HAVING ((MAX(CAST(MIN(AVG(COUNT(*))) AS NUMERIC))) ISNULL);
SELECT * FROM t0 FULL OUTER JOIN v0 ON (NOT (t0.c0)) COLLATE BINARY;
SELECT ALL * FROM t0 FULL OUTER JOIN v0 ON (NOT (t0.c0)) COLLATE BINARY WHERE (LTRIM((((t0.c1)) BETWEEN ((0.5137682363236303)) AND ((t0.c2))), CASE t0.c2  WHEN t0.c2 THEN '660253465' ELSE t0.c2 END)) UNION ALL SELECT * FROM t0 FULL OUTER JOIN v0 ON (NOT (t0.c0)) COLLATE BINARY WHERE ((NOT (LTRIM((((t0.c1)) BETWEEN ((0.5137682363236303)) AND ((t0.c2))), CASE t0.c2  WHEN t0.c2 THEN '660253465' ELSE t0.c2 END)))) UNION ALL SELECT ALL * FROM t0 FULL OUTER JOIN v0 ON (NOT (t0.c0)) COLLATE BINARY WHERE (((LTRIM((((t0.c1)) BETWEEN ((0.5137682363236303)) AND ((t0.c2))), CASE t0.c2  WHEN t0.c2 THEN '660253465' ELSE t0.c2 END)) ISNULL));
SELECT * FROM t0 FULL OUTER JOIN v0 ON (NOT (t0.c0)) COLLATE BINARY;
SELECT DISTINCT t0.c0, t0.c2, v0.c0 FROM t0, v0;
SELECT DISTINCT t0.c0, t0.c2, v0.c0 FROM t0, v0 WHERE (t0.c0) UNION SELECT DISTINCT t0.c0, t0.c2, v0.c0 FROM t0, v0 WHERE ((NOT (t0.c0))) UNION SELECT DISTINCT t0.c0, t0.c2, v0.c0 FROM t0, v0 WHERE (((t0.c0) ISNULL));
SELECT DISTINCT t0.c0, t0.c2, v0.c0 FROM t0, v0;
SELECT ALL t0.c2 FROM t0 GROUP BY t0.c2;
SELECT ALL t0.c2 FROM t0 WHERE (((((t0.c1)>=(t0.c1)))%((((t0.c0, t0.c2, '1187297073'))>=((t0.c0, t0.c2, t0.c1)))))) GROUP BY t0.c2 UNION SELECT ALL t0.c2 FROM t0 WHERE ((NOT (((((t0.c1)>=(t0.c1)))%((((t0.c0, t0.c2, '1187297073'))>=((t0.c0, t0.c2, t0.c1)))))))) GROUP BY t0.c2 UNION SELECT ALL t0.c2 FROM t0 WHERE (((((((t0.c1)>=(t0.c1)))%((((t0.c0, t0.c2, '1187297073'))>=((t0.c0, t0.c2, t0.c1)))))) ISNULL)) GROUP BY t0.c2;
SELECT ALL t0.c2 FROM t0 GROUP BY t0.c2;
SELECT ALL v0.c0, t0.c0 FROM t0, v0 GROUP BY v0.c0, t0.c0;
SELECT v0.c0, t0.c0 FROM t0, v0 GROUP BY v0.c0, t0.c0 HAVING MAX((((t0.c1))>=((t0.c2)))) UNION ALL SELECT ALL v0.c0, t0.c0 FROM t0, v0 GROUP BY v0.c0, t0.c0 HAVING (NOT (MAX((((t0.c1))>=((t0.c2)))))) UNION ALL SELECT ALL v0.c0, t0.c0 FROM t0, v0 GROUP BY v0.c0, t0.c0 HAVING ((MAX((((t0.c1))>=((t0.c2))))) ISNULL);
SELECT ALL v0.c0, t0.c0 FROM t0, v0 GROUP BY v0.c0, t0.c0;
SELECT v0.c0, t0.c0 FROM t0, v0 GROUP BY v0.c0, t0.c0 HAVING MAX((((t0.c1))>=((t0.c2)))) UNION ALL SELECT ALL v0.c0, t0.c0 FROM t0, v0 GROUP BY v0.c0, t0.c0 HAVING (NOT (MAX((((t0.c1))>=((t0.c2)))))) UNION ALL SELECT ALL v0.c0, t0.c0 FROM t0, v0 GROUP BY v0.c0, t0.c0 HAVING ((MAX((((t0.c1))>=((t0.c2))))) ISNULL);
SELECT ALL v0.c0, t0.c0 FROM t0, v0 GROUP BY v0.c0, t0.c0;
SELECT v0.c0, t0.c0 FROM t0, v0;
SELECT ALL v0.c0, t0.c0 FROM t0, v0 WHERE (((((((v0.c0) NOTNULL))AND('')))AND((+ (t0.c0))))) UNION ALL SELECT v0.c0, t0.c0 FROM t0, v0 WHERE ((NOT (((((((v0.c0) NOTNULL))AND('')))AND((+ (t0.c0))))))) UNION ALL SELECT v0.c0, t0.c0 FROM t0, v0 WHERE (((((((((v0.c0) NOTNULL))AND('')))AND((+ (t0.c0))))) ISNULL));
SELECT v0.c0, t0.c0 FROM t0, v0;
SELECT DISTINCT * FROM t0, v0;
SELECT DISTINCT * FROM t0, v0 WHERE (CAST(((t0.c1) NOT NULL) AS BLOB)) UNION SELECT DISTINCT * FROM t0, v0 WHERE ((NOT (CAST(((t0.c1) NOT NULL) AS BLOB)))) UNION SELECT DISTINCT * FROM t0, v0 WHERE (((CAST(((t0.c1) NOT NULL) AS BLOB)) ISNULL));
SELECT DISTINCT * FROM t0, v0;
SELECT t0.c2 FROM v0, t0 GROUP BY t0.c2;
SELECT t0.c2 FROM v0, t0 WHERE ('-992443122') GROUP BY t0.c2 UNION SELECT ALL t0.c2 FROM v0, t0 WHERE ((NOT ('-992443122'))) GROUP BY t0.c2 UNION SELECT t0.c2 FROM v0, t0 WHERE ((('-992443122') ISNULL)) GROUP BY t0.c2;
SELECT t0.c2 FROM v0, t0 GROUP BY t0.c2;
SELECT ALL t0.c2, t0.c1 FROM t0 GROUP BY t0.c2, t0.c1;
SELECT t0.c2, t0.c1 FROM t0 GROUP BY t0.c2, t0.c1 HAVING SUM(((((COUNT(*))AND(t0.c0)))AND(t0.c2))) UNION ALL SELECT t0.c2, t0.c1 FROM t0 GROUP BY t0.c2, t0.c1 HAVING (NOT (SUM(((((COUNT(*))AND(t0.c0)))AND(t0.c2))))) UNION ALL SELECT ALL t0.c2, t0.c1 FROM t0 GROUP BY t0.c2, t0.c1 HAVING ((SUM(((((COUNT(*))AND(t0.c0)))AND(t0.c2)))) ISNULL);
SELECT ALL v0.c0 FROM v0;
SELECT v0.c0 FROM v0 WHERE (v0.c0) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE ((NOT (v0.c0))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE (((v0.c0) ISNULL));
SELECT ALL v0.c0 FROM v0;
SELECT DISTINCT * FROM t0, v0;
SELECT DISTINCT * FROM t0, v0 WHERE (((COALESCE(v0.c0, t0.c2)) IS TRUE)) UNION SELECT DISTINCT * FROM t0, v0 WHERE ((NOT (((COALESCE(v0.c0, t0.c2)) IS TRUE)))) UNION SELECT DISTINCT * FROM t0, v0 WHERE (((((COALESCE(v0.c0, t0.c2)) IS TRUE)) ISNULL));
SELECT DISTINCT * FROM t0, v0;
SELECT ALL t0.c2 FROM v0, t0 GROUP BY t0.c2;
SELECT ALL t0.c2 FROM v0, t0 WHERE ((((((t0.c1 IN ()))OR((((t0.c0))<>((t0.c1))))))OR(((v0.c0)>=(v0.c0))))) GROUP BY t0.c2 UNION SELECT ALL t0.c2 FROM v0, t0 WHERE ((NOT ((((((t0.c1 IN ()))OR((((t0.c0))<>((t0.c1))))))OR(((v0.c0)>=(v0.c0))))))) GROUP BY t0.c2 UNION SELECT ALL t0.c2 FROM v0, t0 WHERE ((((((((t0.c1 IN ()))OR((((t0.c0))!=((t0.c1))))))OR(((v0.c0)>=(v0.c0))))) ISNULL)) GROUP BY t0.c2;
SELECT ALL t0.c2 FROM v0, t0 GROUP BY t0.c2;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (((((((((+ (COUNT(v0.c0))))AND(((COUNT(v0.c0)) NOTNULL))))AND(AVG(v0.c0))))AND(MIN(MIN(TOTAL(v0.c0))))))AND(AVG(0.421867646924581))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT ((((((((((+ (COUNT(v0.c0))))AND(((COUNT(v0.c0)) NOTNULL))))AND(AVG(v0.c0))))AND(MIN(MIN(TOTAL(v0.c0))))))AND(AVG(0.421867646924581))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (((((((((((+ (COUNT(v0.c0))))AND(((COUNT(v0.c0)) NOTNULL))))AND(AVG(v0.c0))))AND(MIN(MIN(TOTAL(v0.c0))))))AND(AVG(0.421867646924581)))) ISNULL);
SELECT ALL * FROM v0;
SELECT * FROM v0 WHERE (((CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END) NOT NULL)) UNION ALL SELECT * FROM v0 NOT INDEXED WHERE ((NOT (((CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END) NOT NULL)))) UNION ALL SELECT ALL * FROM v0 WHERE (((((CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END) NOT NULL)) ISNULL));
SELECT ALL * FROM v0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE ((CHANGES() IN ('6be7}'))) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT ((CHANGES() IN ('6be7}'))))) UNION SELECT DISTINCT * FROM t0 WHERE ((((CHANGES() IN ('6be7}'))) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT v0.c0, t0.c0 FROM t0 NATURAL JOIN v0 GROUP BY v0.c0, t0.c0;
SELECT v0.c0, t0.c0 FROM t0 NATURAL JOIN v0 WHERE (INSTR(v0.c0 COLLATE RTRIM, ((t0.c1) BETWEEN (t0.c0) AND (t0.c0)))) GROUP BY v0.c0, t0.c0 UNION SELECT ALL v0.c0, t0.c0 FROM t0 NATURAL JOIN v0 WHERE ((NOT (INSTR(v0.c0 COLLATE RTRIM, ((t0.c1) BETWEEN (t0.c0) AND (t0.c0)))))) GROUP BY v0.c0, t0.c0 UNION SELECT ALL v0.c0, t0.c0 FROM t0 NATURAL JOIN v0 WHERE (((INSTR(v0.c0 COLLATE RTRIM, ((t0.c1) BETWEEN (t0.c0) AND (t0.c0)))) ISNULL)) GROUP BY v0.c0, t0.c0;
SELECT v0.c0, t0.c0 FROM t0 NATURAL JOIN v0 GROUP BY v0.c0, t0.c0;
SELECT v0.c0, t0.c0, t0.c1 FROM v0, t0 GROUP BY v0.c0, t0.c0, t0.c1;
SELECT v0.c0, t0.c0, t0.c1 FROM v0, t0 GROUP BY v0.c0, t0.c0, t0.c1 HAVING ((MIN(COUNT(*)))|(MAX(t0.c1))) UNION ALL SELECT v0.c0, t0.c0, t0.c1 FROM v0, t0 GROUP BY v0.c0, t0.c0, t0.c1 HAVING (NOT (((MIN(COUNT(*)))|(MAX(t0.c1))))) UNION ALL SELECT ALL v0.c0, t0.c0, t0.c1 FROM v0, t0 GROUP BY v0.c0, t0.c0, t0.c1 HAVING ((((MIN(COUNT(*)))|(MAX(t0.c1)))) ISNULL);
SELECT ALL * FROM v0, t0;
SELECT ALL * FROM v0, t0 WHERE (TOTAL_CHANGES()) UNION ALL SELECT ALL * FROM v0, t0 WHERE ((NOT (TOTAL_CHANGES()))) UNION ALL SELECT ALL * FROM v0, t0 WHERE (((TOTAL_CHANGES()) ISNULL));
SELECT ALL * FROM v0, t0;
SELECT DISTINCT * FROM t0 RIGHT OUTER JOIN v0 ON ((~ (t0.c0)) IN ());
SELECT DISTINCT * FROM t0 RIGHT OUTER JOIN v0 ON ((~ (t0.c0)) IN ()) WHERE (((((t0.c1)IS NOT(t0.c0))) NOTNULL)) UNION SELECT DISTINCT * FROM t0 RIGHT OUTER JOIN v0 ON ((~ (t0.c0)) IN ()) WHERE ((NOT (((((t0.c1)IS NOT(t0.c0))) NOTNULL)))) UNION SELECT DISTINCT * FROM t0 RIGHT OUTER JOIN v0 ON ((~ (t0.c0)) IN ()) WHERE (((((((t0.c1)IS NOT(t0.c0))) NOTNULL)) ISNULL));
SELECT DISTINCT * FROM t0 RIGHT OUTER JOIN v0 ON ((~ (t0.c0)) IN ());
SELECT ALL t0.c2, t0.c1, t0.c0 FROM t0 GROUP BY t0.c2, t0.c1, t0.c0;
SELECT t0.c2, t0.c1, t0.c0 FROM t0 WHERE ((((t0.c1 IN ()))=(t0.c2))) GROUP BY t0.c2, t0.c1, t0.c0 UNION SELECT ALL t0.c2, t0.c1, t0.c0 FROM t0 WHERE ((NOT ((((t0.c1 IN ()))==(t0.c2))))) GROUP BY t0.c2, t0.c1, t0.c0 UNION SELECT t0.c2, t0.c1, t0.c0 FROM t0 WHERE ((((((t0.c1 IN ()))=(t0.c2))) ISNULL)) GROUP BY t0.c2, t0.c1, t0.c0;
SELECT ALL t0.c2, t0.c1, t0.c0 FROM t0 GROUP BY t0.c2, t0.c1, t0.c0;
SELECT ALL v0.c0, t0.c0 FROM t0, v0 GROUP BY v0.c0, t0.c0;
SELECT v0.c0, t0.c0 FROM t0, v0 GROUP BY v0.c0, t0.c0 HAVING COUNT(((GROUP_CONCAT(COUNT(*)))OR(MAX(COUNT(NULL))))) UNION ALL SELECT ALL v0.c0, t0.c0 FROM t0, v0 GROUP BY v0.c0, t0.c0 HAVING (NOT (COUNT(((GROUP_CONCAT(COUNT(*)))OR(MAX(COUNT(NULL))))))) UNION ALL SELECT ALL v0.c0, t0.c0 FROM t0, v0 GROUP BY v0.c0, t0.c0 HAVING ((COUNT(((GROUP_CONCAT(COUNT(*)))OR(MAX(COUNT(NULL)))))) ISNULL);
SELECT ALL * FROM v0, t0;
SELECT * FROM v0, t0 WHERE ((- (v0.c0))) UNION ALL SELECT * FROM v0, t0 WHERE ((NOT ((- (v0.c0))))) UNION ALL SELECT ALL * FROM v0, t0 WHERE ((((- (v0.c0))) ISNULL));
SELECT ALL * FROM v0, t0;
SELECT DISTINCT * FROM t0, v0;
SELECT DISTINCT * FROM t0, v0 WHERE ((+ (v0.c0 COLLATE RTRIM))) UNION SELECT DISTINCT * FROM t0, v0 NOT INDEXED WHERE ((NOT ((+ (v0.c0 COLLATE RTRIM))))) UNION SELECT DISTINCT * FROM t0, v0 WHERE ((((+ (v0.c0 COLLATE RTRIM))) ISNULL));
SELECT DISTINCT * FROM t0, v0;
SELECT t0.c1, t0.c2, t0.c0, v0.c0 FROM v0, t0 GROUP BY t0.c1, t0.c2, t0.c0, v0.c0;
SELECT t0.c1, t0.c2, t0.c0, v0.c0 FROM v0, t0 WHERE (CASE ((t0.c0) NOT BETWEEN (v0.c0) AND (NULL))  WHEN (('')||(t0.c1)) THEN ((t0.c1) BETWEEN (t0.c0) AND (t0.c0)) ELSE (~ (t0.c2)) END) GROUP BY t0.c1, t0.c2, t0.c0, v0.c0 UNION SELECT ALL t0.c1, t0.c2, t0.c0, v0.c0 FROM v0, t0 WHERE ((NOT (CASE ((t0.c0) NOT BETWEEN (v0.c0) AND (NULL))  WHEN (('')||(t0.c1)) THEN ((t0.c1) BETWEEN (t0.c0) AND (t0.c0)) ELSE (~ (t0.c2)) END))) GROUP BY t0.c1, t0.c2, t0.c0, v0.c0 UNION SELECT ALL t0.c1, t0.c2, t0.c0, v0.c0 FROM v0, t0 WHERE (((CASE ((t0.c0) NOT BETWEEN (v0.c0) AND (NULL))  WHEN (('')||(t0.c1)) THEN ((t0.c1) BETWEEN (t0.c0) AND (t0.c0)) ELSE (~ (t0.c2)) END) ISNULL)) GROUP BY t0.c1, t0.c2, t0.c0, v0.c0;
SELECT t0.c1, t0.c2, t0.c0, v0.c0 FROM v0, t0 GROUP BY t0.c1, t0.c2, t0.c0, v0.c0;
SELECT t0.c0 FROM v0, t0 GROUP BY t0.c0;
SELECT t0.c0 FROM v0, t0 GROUP BY t0.c0 HAVING COUNT(*) UNION ALL SELECT ALL t0.c0 FROM v0, t0 GROUP BY t0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT t0.c0 FROM v0, t0 GROUP BY t0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT t0.c0 FROM v0, t0 GROUP BY t0.c0;
SELECT t0.c0 FROM v0, t0 GROUP BY t0.c0 HAVING COUNT(*) UNION ALL SELECT ALL t0.c0 FROM v0, t0 GROUP BY t0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT t0.c0 FROM v0, t0 GROUP BY t0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT t0.c0 FROM v0, t0 GROUP BY t0.c0;
SELECT ALL t0.c2, t0.c1, v0.c0, t0.c0 FROM t0 CROSS JOIN v0 ON (('' COLLATE RTRIM) NOTNULL);
SELECT t0.c2, t0.c1, v0.c0, t0.c0 FROM t0 CROSS JOIN v0 ON (('' COLLATE RTRIM) NOTNULL) WHERE (((t0.c2 COLLATE BINARY) ISNULL)) UNION ALL SELECT ALL t0.c2, t0.c1, v0.c0, t0.c0 FROM t0 CROSS JOIN v0 ON (('' COLLATE RTRIM) NOTNULL) WHERE ((NOT (((t0.c2 COLLATE BINARY) ISNULL)))) UNION ALL SELECT ALL t0.c2, t0.c1, v0.c0, t0.c0 FROM t0 CROSS JOIN v0 ON (('' COLLATE RTRIM) NOTNULL) WHERE (((((t0.c2 COLLATE BINARY) ISNULL)) ISNULL));
SELECT ALL t0.c2, t0.c1, v0.c0, t0.c0 FROM t0 CROSS JOIN v0 ON (('' COLLATE RTRIM) NOTNULL);
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (x'3cc4') UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (x'3cc4'))) UNION SELECT DISTINCT * FROM t0 WHERE (((x'3cc4') ISNULL));
SELECT DISTINCT * FROM t0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE ((v0.c0 IN (v0.c0)) COLLATE RTRIM) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT ((v0.c0 IN (v0.c0)) COLLATE RTRIM))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((((v0.c0 IN (v0.c0)) COLLATE RTRIM) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT t0.c1, t0.c2, t0.c0, v0.c0 FROM t0, v0 GROUP BY t0.c1, t0.c2, t0.c0, v0.c0;
SELECT ALL t0.c1, t0.c2, t0.c0, v0.c0 FROM t0, v0 GROUP BY t0.c1, t0.c2, t0.c0, v0.c0 HAVING GROUP_CONCAT(json_extract(COUNT(*), t0.c2, v0.c0, AVG(TOTAL(GROUP_CONCAT(t0.c0))))) UNION ALL SELECT t0.c1, t0.c2, t0.c0, v0.c0 FROM t0, v0 GROUP BY t0.c1, t0.c2, t0.c0, v0.c0 HAVING (NOT (GROUP_CONCAT(json_extract(COUNT(*), t0.c2, v0.c0, AVG(TOTAL(GROUP_CONCAT(t0.c0))))))) UNION ALL SELECT ALL t0.c1, t0.c2, t0.c0, v0.c0 FROM t0, v0 GROUP BY t0.c1, t0.c2, t0.c0, v0.c0 HAVING ((GROUP_CONCAT(json_extract(COUNT(*), t0.c2, v0.c0, AVG(TOTAL(GROUP_CONCAT(t0.c0)))))) ISNULL);
SELECT v0.c0 FROM v0, t0;
SELECT ALL v0.c0 FROM v0, t0 WHERE (CAST(((t0.c0)<>(t0.c0)) AS NUMERIC)) UNION ALL SELECT v0.c0 FROM v0, t0 WHERE ((NOT (CAST(((t0.c0)!=(t0.c0)) AS NUMERIC)))) UNION ALL SELECT v0.c0 FROM v0, t0 WHERE (((CAST(((t0.c0)!=(t0.c0)) AS NUMERIC)) ISNULL));
SELECT v0.c0 FROM v0, t0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE ((((v0.c0))>=((v0.c0))) COLLATE BINARY) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT ((((v0.c0))>=((v0.c0))) COLLATE BINARY))) UNION SELECT DISTINCT * FROM v0 WHERE ((((((v0.c0))>=((v0.c0))) COLLATE BINARY) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT ALL v0.c0, t0.c2 FROM t0, v0 GROUP BY v0.c0, t0.c2;
SELECT v0.c0, t0.c2 FROM t0, v0 WHERE (HEX(v0.c0) COLLATE BINARY) GROUP BY v0.c0, t0.c2 UNION SELECT ALL v0.c0, t0.c2 FROM t0, v0 WHERE ((NOT (HEX(v0.c0) COLLATE BINARY))) GROUP BY v0.c0, t0.c2 UNION SELECT ALL v0.c0, t0.c2 FROM t0, v0 WHERE (((HEX(v0.c0) COLLATE BINARY) ISNULL)) GROUP BY v0.c0, t0.c2;
SELECT ALL v0.c0, t0.c2 FROM t0, v0 GROUP BY v0.c0, t0.c2;
SELECT ALL t0.c1, t0.c0 FROM t0 GROUP BY t0.c1, t0.c0;
SELECT t0.c1, t0.c0 FROM t0 GROUP BY t0.c1, t0.c0 HAVING (((t0.c2)) BETWEEN ((COUNT(*))) AND ((MIN(x'da42')))) UNION ALL SELECT t0.c1, t0.c0 FROM t0 GROUP BY t0.c1, t0.c0 HAVING (NOT ((((t0.c2)) BETWEEN ((COUNT(*))) AND ((MIN(x'da42')))))) UNION ALL SELECT ALL t0.c1, t0.c0 FROM t0 GROUP BY t0.c1, t0.c0 HAVING (((((t0.c2)) BETWEEN ((COUNT(*))) AND ((MIN(x'da42'))))) ISNULL);
SELECT ALL t0.c1, t0.c0 FROM t0 GROUP BY t0.c1, t0.c0;
SELECT t0.c1, t0.c0 FROM t0 GROUP BY t0.c1, t0.c0 HAVING (((t0.c2)) BETWEEN ((COUNT(*))) AND ((MIN(x'da42')))) UNION ALL SELECT t0.c1, t0.c0 FROM t0 GROUP BY t0.c1, t0.c0 HAVING (NOT ((((t0.c2)) BETWEEN ((COUNT(*))) AND ((MIN(x'da42')))))) UNION ALL SELECT ALL t0.c1, t0.c0 FROM t0 GROUP BY t0.c1, t0.c0 HAVING (((((t0.c2)) BETWEEN ((COUNT(*))) AND ((MIN(x'da42'))))) ISNULL);
SELECT ALL t0.c1, t0.c0 FROM t0 GROUP BY t0.c1, t0.c0;
SELECT ALL * FROM t0, v0;
SELECT ALL * FROM t0, v0 WHERE (((NULL) BETWEEN ((+ (0.4487366377825198))) AND ((t0.c0 IN ())))) UNION ALL SELECT * FROM t0, v0 WHERE ((NOT (((NULL) BETWEEN ((+ (0.4487366377825198))) AND ((t0.c0 IN ())))))) UNION ALL SELECT ALL * FROM t0, v0 WHERE (((((NULL) BETWEEN ((+ (0.4487366377825198))) AND ((t0.c0 IN ())))) ISNULL));
SELECT ALL * FROM t0, v0;
SELECT DISTINCT * FROM t0, v0;
SELECT DISTINCT * FROM t0, v0 WHERE (CAST((((v0.c0))>=((t0.c1))) AS REAL)) UNION SELECT DISTINCT * FROM t0, v0 WHERE ((NOT (CAST((((v0.c0))>=((t0.c1))) AS REAL)))) UNION SELECT DISTINCT * FROM t0, v0 WHERE (((CAST((((v0.c0))>=((t0.c1))) AS REAL)) ISNULL));
SELECT DISTINCT * FROM t0, v0;
SELECT ALL t0.c2, v0.c0 FROM t0 LEFT OUTER JOIN v0 ON (((t0.c1 IN (v0.c0)))/(((t0.c1) BETWEEN (t0.c0) AND (t0.c1)))) GROUP BY t0.c2, v0.c0;
SELECT t0.c2, v0.c0 FROM t0 LEFT OUTER JOIN v0 ON (((t0.c1 IN (v0.c0)))/(((t0.c1) BETWEEN (t0.c0) AND (t0.c1)))) WHERE (CAST(v0.c0 COLLATE NOCASE AS REAL)) GROUP BY t0.c2, v0.c0 UNION SELECT ALL t0.c2, v0.c0 FROM t0 LEFT OUTER JOIN v0 ON (((t0.c1 IN (v0.c0)))/(((t0.c1) BETWEEN (t0.c0) AND (t0.c1)))) WHERE ((NOT (CAST(v0.c0 COLLATE NOCASE AS REAL)))) GROUP BY t0.c2, v0.c0 UNION SELECT ALL t0.c2, v0.c0 FROM t0 LEFT OUTER JOIN v0 ON (((t0.c1 IN (v0.c0)))/(((t0.c1) BETWEEN (t0.c0) AND (t0.c1)))) WHERE (((CAST(v0.c0 COLLATE NOCASE AS REAL)) ISNULL)) GROUP BY t0.c2, v0.c0;
SELECT ALL t0.c2, v0.c0 FROM t0 LEFT OUTER JOIN v0 ON (((t0.c1 IN (v0.c0)))/(((t0.c1) BETWEEN (t0.c0) AND (t0.c1)))) GROUP BY t0.c2, v0.c0;
SELECT v0.c0, t0.c2, t0.c0, t0.c1 FROM v0, t0 GROUP BY v0.c0, t0.c2, t0.c0, t0.c1;
SELECT v0.c0, t0.c2, t0.c0, t0.c1 FROM v0, t0 GROUP BY v0.c0, t0.c2, t0.c0, t0.c1 HAVING (('7B\T') ISNULL) UNION ALL SELECT v0.c0, t0.c2, t0.c0, t0.c1 FROM v0, t0 GROUP BY v0.c0, t0.c2, t0.c0, t0.c1 HAVING (NOT ((('7B\T') ISNULL))) UNION ALL SELECT v0.c0, t0.c2, t0.c0, t0.c1 FROM v0, t0 GROUP BY v0.c0, t0.c2, t0.c0, t0.c1 HAVING (((('7B\T') ISNULL)) ISNULL);
SELECT v0.c0, t0.c2, t0.c0, t0.c1 FROM v0, t0 GROUP BY v0.c0, t0.c2, t0.c0, t0.c1;
SELECT v0.c0, t0.c2, t0.c0, t0.c1 FROM v0, t0 GROUP BY v0.c0, t0.c2, t0.c0, t0.c1 HAVING (('7B\T') ISNULL) UNION ALL SELECT v0.c0, t0.c2, t0.c0, t0.c1 FROM v0, t0 GROUP BY v0.c0, t0.c2, t0.c0, t0.c1 HAVING (NOT ((('7B\T') ISNULL))) UNION ALL SELECT v0.c0, t0.c2, t0.c0, t0.c1 FROM v0, t0 GROUP BY v0.c0, t0.c2, t0.c0, t0.c1 HAVING (((('7B\T') ISNULL)) ISNULL);
SELECT v0.c0, t0.c2, t0.c0, t0.c1 FROM v0, t0 GROUP BY v0.c0, t0.c2, t0.c0, t0.c1;
SELECT ALL * FROM t0;
SELECT * FROM t0 WHERE ((- (t0.c0 COLLATE RTRIM))) UNION ALL SELECT ALL * FROM t0 WHERE ((NOT ((- (t0.c0 COLLATE RTRIM))))) UNION ALL SELECT * FROM t0 WHERE ((((- (t0.c0 COLLATE RTRIM))) ISNULL));
SELECT ALL * FROM t0;
SELECT DISTINCT * FROM v0, t0;
SELECT DISTINCT * FROM v0, t0 WHERE (((((t0.c2)AND((('877485331')!=(t0.c1)))))OR(CASE t0.c2  WHEN v0.c0 THEN t0.c2 END))) UNION SELECT DISTINCT * FROM v0, t0 WHERE ((NOT (((((t0.c2)AND((('877485331')!=(t0.c1)))))OR(CASE t0.c2  WHEN v0.c0 THEN t0.c2 END))))) UNION SELECT DISTINCT * FROM v0, t0 WHERE (((((((t0.c2)AND((('877485331')<>(t0.c1)))))OR(CASE t0.c2  WHEN v0.c0 THEN t0.c2 END))) ISNULL));
SELECT DISTINCT * FROM v0, t0;
SELECT ALL t0.c1, t0.c2 FROM t0 GROUP BY t0.c1, t0.c2;
SELECT t0.c1, t0.c2 FROM t0 WHERE ((- (((((t0.c0)AND(t0.c2)))OR(t0.c0))))) GROUP BY t0.c1, t0.c2 UNION SELECT ALL t0.c1, t0.c2 FROM t0 WHERE ((NOT ((- (((((t0.c0)AND(t0.c2)))OR(t0.c0))))))) GROUP BY t0.c1, t0.c2 UNION SELECT ALL t0.c1, t0.c2 FROM t0 WHERE ((((- (((((t0.c0)AND(t0.c2)))OR(t0.c0))))) ISNULL)) GROUP BY t0.c1, t0.c2;
SELECT ALL t0.c1, t0.c2 FROM t0 GROUP BY t0.c1, t0.c2;
SELECT ALL v0.c0 FROM v0, t0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0, t0 GROUP BY v0.c0 HAVING AVG(MAX(0.3535883894008336)) UNION ALL SELECT ALL v0.c0 FROM v0, t0 GROUP BY v0.c0 HAVING (NOT (AVG(MAX(0.3535883894008336)))) UNION ALL SELECT v0.c0 FROM v0, t0 GROUP BY v0.c0 HAVING ((AVG(MAX(0.3535883894008336))) ISNULL);
SELECT ALL * FROM t0;
SELECT ALL * FROM t0 WHERE (x'') UNION ALL SELECT * FROM t0 WHERE ((NOT (x''))) UNION ALL SELECT * FROM t0 WHERE (((x'') ISNULL));
SELECT ALL * FROM t0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (v0.c0 COLLATE RTRIM) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (v0.c0 COLLATE RTRIM))) UNION SELECT DISTINCT * FROM v0 WHERE (((v0.c0 COLLATE RTRIM) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT ALL t0.c2, t0.c1, t0.c0 FROM t0 GROUP BY t0.c2, t0.c1, t0.c0;
SELECT ALL t0.c2, t0.c1, t0.c0 FROM t0 WHERE (CAST(NULL AS REAL)) GROUP BY t0.c2, t0.c1, t0.c0 UNION SELECT ALL t0.c2, t0.c1, t0.c0 FROM t0 WHERE ((NOT (CAST(NULL AS REAL)))) GROUP BY t0.c2, t0.c1, t0.c0 UNION SELECT t0.c2, t0.c1, t0.c0 FROM t0 WHERE (((CAST(NULL AS REAL)) ISNULL)) GROUP BY t0.c2, t0.c1, t0.c0;
SELECT ALL t0.c2, t0.c1, t0.c0 FROM t0 GROUP BY t0.c2, t0.c1, t0.c0;
SELECT t0.c2 FROM t0 GROUP BY t0.c2;
SELECT t0.c2 FROM t0 GROUP BY t0.c2 HAVING ((COUNT(*)) NOT BETWEEN (MAX(t0.c0)) AND (COUNT(*))) UNION ALL SELECT t0.c2 FROM t0 GROUP BY t0.c2 HAVING (NOT (((COUNT(*)) NOT BETWEEN (MAX(t0.c0)) AND (COUNT(*))))) UNION ALL SELECT t0.c2 FROM t0 GROUP BY t0.c2 HAVING ((((COUNT(*)) NOT BETWEEN (MAX(t0.c0)) AND (COUNT(*)))) ISNULL);
SELECT t0.c2 FROM t0 GROUP BY t0.c2;
SELECT t0.c2 FROM t0 GROUP BY t0.c2 HAVING ((COUNT(*)) NOT BETWEEN (MAX(t0.c0)) AND (COUNT(*))) UNION ALL SELECT t0.c2 FROM t0 GROUP BY t0.c2 HAVING (NOT (((COUNT(*)) NOT BETWEEN (MAX(t0.c0)) AND (COUNT(*))))) UNION ALL SELECT t0.c2 FROM t0 GROUP BY t0.c2 HAVING ((((COUNT(*)) NOT BETWEEN (MAX(t0.c0)) AND (COUNT(*)))) ISNULL);
SELECT t0.c2 FROM t0 GROUP BY t0.c2;
SELECT ALL MAX(-1.28008182E9) FROM t0;
SELECT ALL * FROM v0;
SELECT * FROM v0 WHERE ((((0.982997602242347, CASE WHEN v0.c0 THEN v0.c0 END, ((v0.c0)AND(v0.c0))))!=((((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))OR(v0.c0)))AND(v0.c0)), v0.c0, ((v0.c0) NOTNULL))))) UNION ALL SELECT * FROM v0 WHERE ((NOT ((((0.982997602242347, CASE WHEN v0.c0 THEN v0.c0 END, ((v0.c0)AND(v0.c0))))<>((((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))OR(v0.c0)))AND(v0.c0)), v0.c0, ((v0.c0) NOTNULL))))))) UNION ALL SELECT * FROM v0 WHERE ((((((0.982997602242347, CASE WHEN v0.c0 THEN v0.c0 END, ((v0.c0)AND(v0.c0))))!=((((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))OR(v0.c0)))AND(v0.c0)), v0.c0, ((v0.c0) NOTNULL))))) ISNULL));
SELECT ALL * FROM v0;
SELECT DISTINCT t0.c1, v0.c0 FROM v0, t0;
SELECT DISTINCT t0.c1, v0.c0 FROM v0, t0 WHERE ((CASE t0.c0  WHEN v0.c0 THEN t0.c1 WHEN t0.c2 THEN v0.c0 WHEN t0.c2 THEN t0.c2 END IN ())) UNION SELECT DISTINCT t0.c1, v0.c0 FROM v0, t0 WHERE ((NOT ((CASE t0.c0  WHEN v0.c0 THEN t0.c1 WHEN t0.c2 THEN v0.c0 WHEN t0.c2 THEN t0.c2 END IN ())))) UNION SELECT DISTINCT t0.c1, v0.c0 FROM v0, t0 WHERE ((((CASE t0.c0  WHEN v0.c0 THEN t0.c1 WHEN t0.c2 THEN v0.c0 WHEN t0.c2 THEN t0.c2 END IN ())) ISNULL));
SELECT DISTINCT t0.c1, v0.c0 FROM v0, t0;
SELECT t0.c1, t0.c2, v0.c0 FROM v0, t0 GROUP BY t0.c1, t0.c2, v0.c0;
SELECT t0.c1, t0.c2, v0.c0 FROM v0, t0 WHERE (t0.c1 COLLATE RTRIM) GROUP BY t0.c1, t0.c2, v0.c0 UNION SELECT ALL t0.c1, t0.c2, v0.c0 FROM v0, t0 WHERE ((NOT (t0.c1 COLLATE RTRIM))) GROUP BY t0.c1, t0.c2, v0.c0 UNION SELECT t0.c1, t0.c2, v0.c0 FROM v0, t0 WHERE (((t0.c1 COLLATE RTRIM) ISNULL)) GROUP BY t0.c1, t0.c2, v0.c0;
SELECT t0.c1, t0.c2, v0.c0 FROM v0, t0 GROUP BY t0.c1, t0.c2, v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING COUNT(MIN(v0.c0)) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (COUNT(MIN(v0.c0)))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((COUNT(MIN(v0.c0))) ISNULL);
SELECT ALL t0.c1, v0.c0, t0.c0 FROM v0 RIGHT OUTER JOIN t0 ON x'fa5b';
SELECT t0.c1, v0.c0, t0.c0 FROM v0 RIGHT OUTER JOIN t0 ON x'fa5b' WHERE (IFNULL(DISTINCT ((t0.c2)&(t0.c1)), v0.c0)) UNION ALL SELECT ALL t0.c1, v0.c0, t0.c0 FROM v0 RIGHT OUTER JOIN t0 ON x'fa5b' WHERE ((NOT (IFNULL(DISTINCT ((t0.c2)&(t0.c1)), v0.c0)))) UNION ALL SELECT ALL t0.c1, v0.c0, t0.c0 FROM v0 RIGHT OUTER JOIN t0 ON x'fa5b' WHERE (((IFNULL(DISTINCT ((t0.c2)&(t0.c1)), v0.c0)) ISNULL));
SELECT ALL t0.c1, v0.c0, t0.c0 FROM v0 RIGHT OUTER JOIN t0 ON x'fa5b';
SELECT DISTINCT t0.c0, t0.c1, t0.c2 FROM t0;
SELECT DISTINCT t0.c0, t0.c1, t0.c2 FROM t0 WHERE ((NOT (LIKELIHOOD(t0.c2, 0.9783429432838183)))) UNION SELECT DISTINCT t0.c0, t0.c1, t0.c2 FROM t0 WHERE ((NOT ((NOT (LIKELIHOOD(t0.c2, 0.9783429432838183)))))) UNION SELECT DISTINCT t0.c0, t0.c1, t0.c2 FROM t0 WHERE ((((NOT (LIKELIHOOD(t0.c2, 0.9783429432838183)))) ISNULL));
SELECT DISTINCT t0.c0, t0.c1, t0.c2 FROM t0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))OR(v0.c0)))OR(v0.c0)) COLLATE RTRIM) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT (((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))OR(v0.c0)))OR(v0.c0)) COLLATE RTRIM))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE (((((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))OR(v0.c0)))OR(v0.c0)) COLLATE RTRIM) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL t0.c0, t0.c2, t0.c1, v0.c0 FROM v0, t0 GROUP BY t0.c0, t0.c2, t0.c1, v0.c0;
SELECT ALL t0.c0, t0.c2, t0.c1, v0.c0 FROM v0, t0 GROUP BY t0.c0, t0.c2, t0.c1, v0.c0 HAVING SUM(AVG(v0.c0)) UNION ALL SELECT ALL t0.c0, t0.c2, t0.c1, v0.c0 FROM v0, t0 GROUP BY t0.c0, t0.c2, t0.c1, v0.c0 HAVING (NOT (SUM(AVG(v0.c0)))) UNION ALL SELECT ALL t0.c0, t0.c2, t0.c1, v0.c0 FROM v0, t0 GROUP BY t0.c0, t0.c2, t0.c1, v0.c0 HAVING ((SUM(AVG(v0.c0))) ISNULL);
SELECT ALL * FROM v0, t0;
SELECT ALL * FROM v0, t0 WHERE ((((((v0.c0)AND(v0.c0)))AND(t0.c2)) IN ())) UNION ALL SELECT * FROM v0, t0 WHERE ((NOT ((((((v0.c0)AND(v0.c0)))AND(t0.c2)) IN ())))) UNION ALL SELECT * FROM v0, t0 WHERE ((((((((v0.c0)AND(v0.c0)))AND(t0.c2)) IN ())) ISNULL));
SELECT ALL * FROM v0, t0;
SELECT DISTINCT t0.c1, t0.c2, t0.c0, v0.c0 FROM v0, t0;
SELECT DISTINCT t0.c1, t0.c2, t0.c0, v0.c0 FROM v0, t0 WHERE (NULL COLLATE RTRIM) UNION SELECT DISTINCT t0.c1, t0.c2, t0.c0, v0.c0 FROM v0, t0 WHERE ((NOT (NULL COLLATE RTRIM))) UNION SELECT DISTINCT t0.c1, t0.c2, t0.c0, v0.c0 FROM v0, t0 WHERE (((NULL COLLATE RTRIM) ISNULL));
SELECT DISTINCT t0.c1, t0.c2, t0.c0, v0.c0 FROM v0, t0;
SELECT ALL t0.c1, v0.c0 FROM v0, t0 GROUP BY t0.c1, v0.c0;
SELECT t0.c1, v0.c0 FROM v0, t0 WHERE (((CAST(t0.c0 AS REAL))GLOB(v0.c0))) GROUP BY t0.c1, v0.c0 UNION SELECT t0.c1, v0.c0 FROM v0, t0 WHERE ((NOT (((CAST(t0.c0 AS REAL))GLOB(v0.c0))))) GROUP BY t0.c1, v0.c0 UNION SELECT ALL t0.c1, v0.c0 FROM v0, t0 WHERE (((((CAST(t0.c0 AS REAL))GLOB(v0.c0))) ISNULL)) GROUP BY t0.c1, v0.c0;
SELECT ALL t0.c1, v0.c0 FROM v0, t0 GROUP BY t0.c1, v0.c0;
SELECT t0.c2, t0.c0, t0.c1 FROM t0 GROUP BY t0.c2, t0.c0, t0.c1;
SELECT t0.c2, t0.c0, t0.c1 FROM t0 GROUP BY t0.c2, t0.c0, t0.c1 HAVING GROUP_CONCAT(x'') UNION ALL SELECT ALL t0.c2, t0.c0, t0.c1 FROM t0 GROUP BY t0.c2, t0.c0, t0.c1 HAVING (NOT (GROUP_CONCAT(x''))) UNION ALL SELECT ALL t0.c2, t0.c0, t0.c1 FROM t0 GROUP BY t0.c2, t0.c0, t0.c1 HAVING ((GROUP_CONCAT(x'')) ISNULL);
SELECT t0.c2, t0.c0, t0.c1 FROM t0 GROUP BY t0.c2, t0.c0, t0.c1;
SELECT t0.c2, t0.c0, t0.c1 FROM t0 GROUP BY t0.c2, t0.c0, t0.c1 HAVING GROUP_CONCAT(x'') UNION ALL SELECT ALL t0.c2, t0.c0, t0.c1 FROM t0 GROUP BY t0.c2, t0.c0, t0.c1 HAVING (NOT (GROUP_CONCAT(x''))) UNION ALL SELECT ALL t0.c2, t0.c0, t0.c1 FROM t0 GROUP BY t0.c2, t0.c0, t0.c1 HAVING ((GROUP_CONCAT(x'')) ISNULL);
SELECT t0.c2, t0.c0, t0.c1 FROM t0 GROUP BY t0.c2, t0.c0, t0.c1;
SELECT ALL * FROM v0;
SELECT * FROM v0 WHERE (0Xffffffffa212e654) UNION ALL SELECT * FROM v0 WHERE ((NOT (0Xffffffffa212e654))) UNION ALL SELECT ALL * FROM v0 WHERE (((0xffffffffa212e654) ISNULL));
SELECT ALL * FROM v0;
SELECT DISTINCT t0.c1, t0.c2 FROM v0, t0;
SELECT DISTINCT t0.c1, t0.c2 FROM v0, t0 WHERE (t0.c0) UNION SELECT DISTINCT t0.c1, t0.c2 FROM v0, t0 WHERE ((NOT (t0.c0))) UNION SELECT DISTINCT t0.c1, t0.c2 FROM v0, t0 WHERE (((t0.c0) ISNULL));
SELECT DISTINCT t0.c1, t0.c2 FROM v0, t0;
SELECT t0.c2 FROM v0, t0 GROUP BY t0.c2;
SELECT ALL t0.c2 FROM v0, t0 WHERE (((((((((t0.c0)OR(v0.c0)))OR(v0.c0)))AND(t0.c2)))AND(t0.c2)) COLLATE RTRIM COLLATE NOCASE) GROUP BY t0.c2 UNION SELECT t0.c2 FROM v0, t0 WHERE ((NOT (((((((((t0.c0)OR(v0.c0)))OR(v0.c0)))AND(t0.c2)))AND(t0.c2)) COLLATE RTRIM COLLATE NOCASE))) GROUP BY t0.c2 UNION SELECT t0.c2 FROM v0, t0 WHERE (((((((((((t0.c0)OR(v0.c0)))OR(v0.c0)))AND(t0.c2)))AND(t0.c2)) COLLATE RTRIM COLLATE NOCASE) ISNULL)) GROUP BY t0.c2;
SELECT t0.c2 FROM v0, t0 GROUP BY t0.c2;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING CASE WHEN TOTAL(GROUP_CONCAT(TOTAL(MAX(COUNT(v0.c0))))) THEN ((((((((v0.c0)AND(SUM(v0.c0))))OR(v0.c0)))AND(NULL)))AND(COUNT(TOTAL(TOTAL(0.1485742405453746))))) ELSE COUNT(*) END UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (CASE WHEN TOTAL(GROUP_CONCAT(TOTAL(MAX(COUNT(v0.c0))))) THEN ((((((((v0.c0)AND(SUM(v0.c0))))OR(v0.c0)))AND(NULL)))AND(COUNT(TOTAL(TOTAL(0.1485742405453746))))) ELSE COUNT(*) END)) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((CASE WHEN TOTAL(GROUP_CONCAT(TOTAL(MAX(COUNT(v0.c0))))) THEN ((((((((v0.c0)AND(SUM(v0.c0))))OR(v0.c0)))AND(NULL)))AND(COUNT(TOTAL(TOTAL(0.1485742405453746))))) ELSE COUNT(*) END) ISNULL);
SELECT v0.c0 FROM v0;
SELECT v0.c0 FROM v0 WHERE (((((((v0.c0)AND(v0.c0)))OR(v0.c0)))IS NOT(((0.7511850980265504)<=(v0.c0))))) UNION ALL SELECT ALL v0.c0 FROM v0 NOT INDEXED WHERE ((NOT (((((((v0.c0)AND(v0.c0)))OR(v0.c0)))IS NOT(((0.7511850980265504)<=(v0.c0))))))) UNION ALL SELECT v0.c0 FROM v0 WHERE (((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))IS NOT(((0.7511850980265504)<=(v0.c0))))) ISNULL));
SELECT v0.c0 FROM v0;
SELECT DISTINCT * FROM t0, v0;
SELECT DISTINCT * FROM t0 NOT INDEXED, v0 WHERE (((((v0.c0)IS(t0.c0)))GLOB(((t0.c0) IS TRUE)))) UNION SELECT DISTINCT * FROM t0, v0 WHERE ((NOT (((((v0.c0)IS(t0.c0)))GLOB(((t0.c0) IS TRUE)))))) UNION SELECT DISTINCT * FROM t0, v0 WHERE (((((((v0.c0)IS(t0.c0)))GLOB(((t0.c0) IS TRUE)))) ISNULL));
SELECT DISTINCT * FROM t0, v0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (((CASE v0.c0  WHEN v0.c0 THEN v0.c0 END) NOT BETWEEN (TRIM(DISTINCT v0.c0, v0.c0)) AND (v0.c0))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT (((CASE v0.c0  WHEN v0.c0 THEN v0.c0 END) NOT BETWEEN (TRIM(DISTINCT v0.c0, v0.c0)) AND (v0.c0))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((((CASE v0.c0  WHEN v0.c0 THEN v0.c0 END) NOT BETWEEN (TRIM(DISTINCT v0.c0, v0.c0)) AND (v0.c0))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING MAX(MAX(SUM(v0.c0))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (MAX(MAX(SUM(v0.c0))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((MAX(MAX(SUM(v0.c0)))) ISNULL);
SELECT ALL t0.c0, t0.c2, t0.c1 FROM t0;
SELECT ALL t0.c0, t0.c2, t0.c1 FROM t0 WHERE ((t0.c1 COLLATE BINARY IN ())) UNION ALL SELECT t0.c0, t0.c2, t0.c1 FROM t0 WHERE ((NOT ((t0.c1 COLLATE BINARY IN ())))) UNION ALL SELECT ALL t0.c0, t0.c2, t0.c1 FROM t0 WHERE ((((t0.c1 COLLATE BINARY IN ())) ISNULL));
SELECT ALL t0.c0, t0.c2, t0.c1 FROM t0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (CAST(v0.c0 COLLATE RTRIM AS REAL)) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (CAST(v0.c0 COLLATE RTRIM AS REAL)))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((CAST(v0.c0 COLLATE RTRIM AS REAL)) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE ((NOT (v0.c0)) COLLATE NOCASE) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT ((NOT (v0.c0)) COLLATE NOCASE))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((((NOT (v0.c0)) COLLATE NOCASE) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT t0.c2, t0.c0, t0.c1, v0.c0 FROM v0 CROSS JOIN t0 ON (0Xffffffff9843d747 IN ()) GROUP BY t0.c2, t0.c0, t0.c1, v0.c0;
SELECT t0.c2, t0.c0, t0.c1, v0.c0 FROM v0 CROSS JOIN t0 ON (0xffffffff9843d747 IN ()) GROUP BY t0.c2, t0.c0, t0.c1, v0.c0 HAVING GROUP_CONCAT((COUNT(*) IN (GROUP_CONCAT(COUNT(*)), t0.c0))) UNION ALL SELECT ALL t0.c2, t0.c0, t0.c1, v0.c0 FROM v0 CROSS JOIN t0 ON (0xffffffff9843d747 IN ()) GROUP BY t0.c2, t0.c0, t0.c1, v0.c0 HAVING (NOT (GROUP_CONCAT((COUNT(*) IN (GROUP_CONCAT(COUNT(*)), t0.c0))))) UNION ALL SELECT ALL t0.c2, t0.c0, t0.c1, v0.c0 FROM v0 CROSS JOIN t0 ON (0Xffffffff9843d747 IN ()) GROUP BY t0.c2, t0.c0, t0.c1, v0.c0 HAVING ((GROUP_CONCAT((COUNT(*) IN (GROUP_CONCAT(COUNT(*)), t0.c0)))) ISNULL);
SELECT ALL v0.c0 FROM v0;
SELECT v0.c0 FROM v0 WHERE (((((v0.c0)OR(v0.c0)))OR(v0.c0)) COLLATE BINARY) UNION ALL SELECT v0.c0 FROM v0 WHERE ((NOT (((((v0.c0)OR(v0.c0)))OR(v0.c0)) COLLATE BINARY))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE (((((((v0.c0)OR(v0.c0)))OR(v0.c0)) COLLATE BINARY) ISNULL));
SELECT ALL v0.c0 FROM v0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (CASE (('(╪g') BETWEEN (v0.c0) AND (v0.c0))  WHEN v0.c0 THEN ((v0.c0) IS TRUE) WHEN (v0.c0 IN ()) THEN ((v0.c0) BETWEEN (459640047) AND (v0.c0)) WHEN (v0.c0 IN (v0.c0)) THEN CAST(v0.c0 AS INTEGER) ELSE ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) END) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (CASE (('(╪g') BETWEEN (v0.c0) AND (v0.c0))  WHEN v0.c0 THEN ((v0.c0) IS TRUE) WHEN (v0.c0 IN ()) THEN ((v0.c0) BETWEEN (459640047) AND (v0.c0)) WHEN (v0.c0 IN (v0.c0)) THEN CAST(v0.c0 AS INTEGER) ELSE ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) END))) UNION SELECT DISTINCT * FROM v0 WHERE (((CASE (('(╪g') BETWEEN (v0.c0) AND (v0.c0))  WHEN v0.c0 THEN ((v0.c0) IS TRUE) WHEN (v0.c0 IN ()) THEN ((v0.c0) BETWEEN (459640047) AND (v0.c0)) WHEN (v0.c0 IN (v0.c0)) THEN CAST(v0.c0 AS INTEGER) ELSE ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) END) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT ALL t0.c0, v0.c0 FROM v0, t0 GROUP BY t0.c0, v0.c0;
SELECT t0.c0, v0.c0 FROM v0, t0 WHERE (((CASE t0.c1  WHEN t0.c2 THEN v0.c0 WHEN t0.c0 THEN v0.c0 WHEN x'' THEN t0.c1 END) NOTNULL)) GROUP BY t0.c0, v0.c0 UNION SELECT t0.c0, v0.c0 FROM v0, t0 WHERE ((NOT (((CASE t0.c1  WHEN t0.c2 THEN v0.c0 WHEN t0.c0 THEN v0.c0 WHEN x'' THEN t0.c1 END) NOTNULL)))) GROUP BY t0.c0, v0.c0 UNION SELECT ALL t0.c0, v0.c0 FROM v0, t0 WHERE (((((CASE t0.c1  WHEN t0.c2 THEN v0.c0 WHEN t0.c0 THEN v0.c0 WHEN x'' THEN t0.c1 END) NOTNULL)) ISNULL)) GROUP BY t0.c0, v0.c0;
SELECT ALL t0.c0, v0.c0 FROM v0, t0 GROUP BY t0.c0, v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING TOTAL(MIN(v0.c0)) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (TOTAL(MIN(v0.c0)))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((TOTAL(MIN(v0.c0))) ISNULL);
SELECT * FROM t0, v0;
SELECT * FROM t0, v0 WHERE ((((v0.c0)) NOT BETWEEN ((((v0.c0) IS FALSE))) AND ((((t0.c1)%(t0.c2)))))) UNION ALL SELECT ALL * FROM t0, v0 WHERE ((NOT ((((v0.c0)) NOT BETWEEN ((((v0.c0) IS FALSE))) AND ((((t0.c1)%(t0.c2)))))))) UNION ALL SELECT * FROM t0, v0 WHERE ((((((v0.c0)) NOT BETWEEN ((((v0.c0) IS FALSE))) AND ((((t0.c1)%(t0.c2)))))) ISNULL));
SELECT * FROM t0, v0;
SELECT DISTINCT t0.c0, v0.c0, t0.c1, t0.c2 FROM v0, t0;
SELECT DISTINCT t0.c0, v0.c0, t0.c1, t0.c2 FROM v0, t0 NOT INDEXED WHERE ((+ (load_extension(t0.c1)))) UNION SELECT DISTINCT t0.c0, v0.c0, t0.c1, t0.c2 FROM v0, t0 WHERE ((NOT ((+ (load_extension(t0.c1)))))) UNION SELECT DISTINCT t0.c0, v0.c0, t0.c1, t0.c2 FROM v0, t0 WHERE ((((+ (load_extension(t0.c1)))) ISNULL));
SELECT DISTINCT t0.c0, v0.c0, t0.c1, t0.c2 FROM v0, t0;
SELECT t0.c1, t0.c0, t0.c2 FROM t0 GROUP BY t0.c1, t0.c0, t0.c2;
SELECT ALL t0.c1, t0.c0, t0.c2 FROM t0 WHERE (((UNLIKELY(t0.c2))AND(((((((((t0.c1)AND(t0.c2)))AND(t0.c0)))AND(t0.c0)))OR(t0.c0))))) GROUP BY t0.c1, t0.c0, t0.c2 UNION SELECT ALL t0.c1, t0.c0, t0.c2 FROM t0 WHERE ((NOT (((UNLIKELY(t0.c2))AND(((((((((t0.c1)AND(t0.c2)))AND(t0.c0)))AND(t0.c0)))OR(t0.c0))))))) GROUP BY t0.c1, t0.c0, t0.c2 UNION SELECT ALL t0.c1, t0.c0, t0.c2 FROM t0 WHERE (((((UNLIKELY(t0.c2))AND(((((((((t0.c1)AND(t0.c2)))AND(t0.c0)))AND(t0.c0)))OR(t0.c0))))) ISNULL)) GROUP BY t0.c1, t0.c0, t0.c2;
SELECT t0.c1, t0.c0, t0.c2 FROM t0 GROUP BY t0.c1, t0.c0, t0.c2;
SELECT t0.c0, v0.c0, t0.c1, t0.c2 FROM v0 RIGHT OUTER JOIN t0 ON CASE NULL  WHEN v0.c0 COLLATE BINARY THEN t0.c2 COLLATE NOCASE END GROUP BY t0.c0, v0.c0, t0.c1, t0.c2;
SELECT t0.c0, v0.c0, t0.c1, t0.c2 FROM v0 RIGHT OUTER JOIN t0 ON CASE NULL  WHEN v0.c0 COLLATE BINARY THEN t0.c2 COLLATE NOCASE END GROUP BY t0.c0, v0.c0, t0.c1, t0.c2 HAVING GROUP_CONCAT(CASE WHEN t0.c1 THEN t0.c0 ELSE TOTAL(TOTAL(t0.c0)) END) UNION ALL SELECT ALL t0.c0, v0.c0, t0.c1, t0.c2 FROM v0 RIGHT OUTER JOIN t0 ON CASE NULL  WHEN v0.c0 COLLATE BINARY THEN t0.c2 COLLATE NOCASE END GROUP BY t0.c0, v0.c0, t0.c1, t0.c2 HAVING (NOT (GROUP_CONCAT(CASE WHEN t0.c1 THEN t0.c0 ELSE TOTAL(TOTAL(t0.c0)) END))) UNION ALL SELECT ALL t0.c0, v0.c0, t0.c1, t0.c2 FROM v0 RIGHT OUTER JOIN t0 ON CASE NULL  WHEN v0.c0 COLLATE BINARY THEN t0.c2 COLLATE NOCASE END GROUP BY t0.c0, v0.c0, t0.c1, t0.c2 HAVING ((GROUP_CONCAT(CASE WHEN t0.c1 THEN t0.c0 ELSE TOTAL(TOTAL(t0.c0)) END)) ISNULL);
SELECT v0.c0, t0.c0, t0.c1, t0.c2 FROM v0, t0;
SELECT v0.c0, t0.c0, t0.c1, t0.c2 FROM v0, t0 WHERE (CASE WHEN t0.c2 THEN ((((t0.c2)OR(t0.c0)))AND(v0.c0)) END) UNION ALL SELECT v0.c0, t0.c0, t0.c1, t0.c2 FROM v0, t0 WHERE ((NOT (CASE WHEN t0.c2 THEN ((((t0.c2)OR(t0.c0)))AND(v0.c0)) END))) UNION ALL SELECT v0.c0, t0.c0, t0.c1, t0.c2 FROM v0, t0 WHERE (((CASE WHEN t0.c2 THEN ((((t0.c2)OR(t0.c0)))AND(v0.c0)) END) ISNULL));
SELECT v0.c0, t0.c0, t0.c1, t0.c2 FROM v0, t0;
SELECT DISTINCT * FROM t0, v0;
SELECT DISTINCT * FROM t0, v0 WHERE ((((NULL) ISNULL) IN ())) UNION SELECT DISTINCT * FROM t0, v0 WHERE ((NOT ((((NULL) ISNULL) IN ())))) UNION SELECT DISTINCT * FROM t0, v0 WHERE ((((((NULL) ISNULL) IN ())) ISNULL));
SELECT DISTINCT * FROM t0, v0;
SELECT t0.c2, v0.c0 FROM t0, v0 GROUP BY t0.c2, v0.c0;
SELECT t0.c2, v0.c0 FROM t0, v0 WHERE ((((CASE -5.3417611E7  WHEN t0.c1 THEN v0.c0 END))>=((t0.c2)))) GROUP BY t0.c2, v0.c0 UNION SELECT t0.c2, v0.c0 FROM t0, v0 WHERE ((NOT ((((CASE -5.3417611E7  WHEN t0.c1 THEN v0.c0 END))>=((t0.c2)))))) GROUP BY t0.c2, v0.c0 UNION SELECT ALL t0.c2, v0.c0 FROM t0, v0 WHERE ((((((CASE -5.3417611E7  WHEN t0.c1 THEN v0.c0 END))>=((t0.c2)))) ISNULL)) GROUP BY t0.c2, v0.c0;
SELECT t0.c2, v0.c0 FROM t0, v0 GROUP BY t0.c2, v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING COUNT(*) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING COUNT(*) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL t0.c1, t0.c0, v0.c0 FROM t0 CROSS JOIN v0 ON ((t0.c2)+(t0.c1)) COLLATE NOCASE;
SELECT ALL t0.c1, t0.c0, v0.c0 FROM t0 CROSS JOIN v0 ON ((t0.c2)+(t0.c1)) COLLATE NOCASE WHERE (t0.c2) UNION ALL SELECT t0.c1, t0.c0, v0.c0 FROM t0 CROSS JOIN v0 ON ((t0.c2)+(t0.c1)) COLLATE NOCASE WHERE ((NOT (t0.c2))) UNION ALL SELECT ALL t0.c1, t0.c0, v0.c0 FROM t0 CROSS JOIN v0 ON ((t0.c2)+(t0.c1)) COLLATE NOCASE WHERE (((t0.c2) ISNULL));
SELECT ALL t0.c1, t0.c0, v0.c0 FROM t0 CROSS JOIN v0 ON ((t0.c2)+(t0.c1)) COLLATE NOCASE;
SELECT DISTINCT * FROM t0, v0;
SELECT DISTINCT * FROM t0, v0 WHERE ((((NOT ('1129487033')))>>(CASE t0.c2  WHEN t0.c0 THEN v0.c0 WHEN t0.c0 THEN t0.c0 WHEN 0.6203992769249694 THEN t0.c0 END))) UNION SELECT DISTINCT * FROM t0, v0 WHERE ((NOT ((((NOT ('1129487033')))>>(CASE t0.c2  WHEN t0.c0 THEN v0.c0 WHEN t0.c0 THEN t0.c0 WHEN 0.6203992769249694 THEN t0.c0 END))))) UNION SELECT DISTINCT * FROM t0, v0 WHERE ((((((NOT ('1129487033')))>>(CASE t0.c2  WHEN t0.c0 THEN v0.c0 WHEN t0.c0 THEN t0.c0 WHEN 0.6203992769249694 THEN t0.c0 END))) ISNULL));
SELECT DISTINCT * FROM t0, v0;
SELECT ALL v0.c0, t0.c2, t0.c0, t0.c1 FROM v0, t0 GROUP BY v0.c0, t0.c2, t0.c0, t0.c1;
SELECT ALL v0.c0, t0.c2, t0.c0, t0.c1 FROM v0, t0 WHERE ((((t0.c0) NOT BETWEEN (t0.c1) AND (v0.c0)) IN ())) GROUP BY v0.c0, t0.c2, t0.c0, t0.c1 UNION SELECT v0.c0, t0.c2, t0.c0, t0.c1 FROM v0, t0 WHERE ((NOT ((((t0.c0) NOT BETWEEN (t0.c1) AND (v0.c0)) IN ())))) GROUP BY v0.c0, t0.c2, t0.c0, t0.c1 UNION SELECT ALL v0.c0, t0.c2, t0.c0, t0.c1 FROM v0, t0 WHERE ((((((t0.c0) NOT BETWEEN (t0.c1) AND (v0.c0)) IN ())) ISNULL)) GROUP BY v0.c0, t0.c2, t0.c0, t0.c1;
SELECT ALL v0.c0, t0.c2, t0.c0, t0.c1 FROM v0, t0 GROUP BY v0.c0, t0.c2, t0.c0, t0.c1;
SELECT ALL t0.c2, t0.c0, t0.c1 FROM t0, v0 GROUP BY t0.c2, t0.c0, t0.c1;
SELECT t0.c2, t0.c0, t0.c1 FROM t0, v0 GROUP BY t0.c2, t0.c0, t0.c1 HAVING CAST(SUM(v0.c0) AS INTEGER) UNION ALL SELECT ALL t0.c2, t0.c0, t0.c1 FROM t0, v0 GROUP BY t0.c2, t0.c0, t0.c1 HAVING (NOT (CAST(SUM(v0.c0) AS INTEGER))) UNION ALL SELECT ALL t0.c2, t0.c0, t0.c1 FROM t0, v0 GROUP BY t0.c2, t0.c0, t0.c1 HAVING ((CAST(SUM(v0.c0) AS INTEGER)) ISNULL);
SELECT ALL t0.c2, t0.c0, t0.c1 FROM t0, v0 GROUP BY t0.c2, t0.c0, t0.c1;
SELECT t0.c2, t0.c0, t0.c1 FROM t0, v0 GROUP BY t0.c2, t0.c0, t0.c1 HAVING CAST(SUM(v0.c0) AS INTEGER) UNION ALL SELECT ALL t0.c2, t0.c0, t0.c1 FROM t0, v0 GROUP BY t0.c2, t0.c0, t0.c1 HAVING (NOT (CAST(SUM(v0.c0) AS INTEGER))) UNION ALL SELECT ALL t0.c2, t0.c0, t0.c1 FROM t0, v0 GROUP BY t0.c2, t0.c0, t0.c1 HAVING ((CAST(SUM(v0.c0) AS INTEGER)) ISNULL);
SELECT ALL t0.c2, t0.c0, t0.c1 FROM t0, v0 GROUP BY t0.c2, t0.c0, t0.c1;
SELECT ALL * FROM t0, v0;
SELECT ALL * FROM t0, v0 WHERE (((((((v0.c0)) BETWEEN ((t0.c1)) AND ((t0.c0)))))>((CASE v0.c0  WHEN v0.c0 THEN t0.c1 ELSE t0.c0 END)))) UNION ALL SELECT ALL * FROM t0, v0 WHERE ((NOT (((((((v0.c0)) BETWEEN ((t0.c1)) AND ((t0.c0)))))>((CASE v0.c0  WHEN v0.c0 THEN t0.c1 ELSE t0.c0 END)))))) UNION ALL SELECT * FROM t0, v0 NOT INDEXED WHERE (((((((((v0.c0)) BETWEEN ((t0.c1)) AND ((t0.c0)))))>((CASE v0.c0  WHEN v0.c0 THEN t0.c1 ELSE t0.c0 END)))) ISNULL));
SELECT ALL * FROM t0, v0;
SELECT DISTINCT * FROM t0 NOT INDEXED;
SELECT DISTINCT * FROM t0 WHERE ((((t0.c1) NOT NULL) IN ())) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT ((((t0.c1) NOT NULL) IN ())))) UNION SELECT DISTINCT * FROM t0 WHERE ((((((t0.c1) NOT NULL) IN ())) ISNULL));
SELECT DISTINCT * FROM t0 NOT INDEXED;
SELECT t0.c2 FROM v0 CROSS JOIN t0 ON SQLITE_COMPILEOPTION_USED(LENGTH(t0.c1)) GROUP BY t0.c2;
SELECT ALL t0.c2 FROM v0 CROSS JOIN t0 ON SQLITE_COMPILEOPTION_USED(LENGTH(t0.c1)) WHERE (((((((v0.c0)-(v0.c0)))OR((((t0.c1)) NOT BETWEEN ((t0.c0)) AND ((v0.c0))))))OR((+ (x''))))) GROUP BY t0.c2 UNION SELECT t0.c2 FROM v0 CROSS JOIN t0 ON SQLITE_COMPILEOPTION_USED(LENGTH(t0.c1)) WHERE ((NOT (((((((v0.c0)-(v0.c0)))OR((((t0.c1)) NOT BETWEEN ((t0.c0)) AND ((v0.c0))))))OR((+ (x''))))))) GROUP BY t0.c2 UNION SELECT t0.c2 FROM v0 CROSS JOIN t0 ON SQLITE_COMPILEOPTION_USED(LENGTH(t0.c1)) WHERE (((((((((v0.c0)-(v0.c0)))OR((((t0.c1)) NOT BETWEEN ((t0.c0)) AND ((v0.c0))))))OR((+ (x''))))) ISNULL)) GROUP BY t0.c2;
SELECT t0.c2 FROM v0 CROSS JOIN t0 ON SQLITE_COMPILEOPTION_USED(LENGTH(t0.c1)) GROUP BY t0.c2;
SELECT t0.c0, t0.c2, t0.c1 FROM t0 GROUP BY t0.c0, t0.c2, t0.c1;
SELECT t0.c0, t0.c2, t0.c1 FROM t0 GROUP BY t0.c0, t0.c2, t0.c1 HAVING AVG(((COUNT(t0.c2))>(COUNT(*)))) UNION ALL SELECT ALL t0.c0, t0.c2, t0.c1 FROM t0 GROUP BY t0.c0, t0.c2, t0.c1 HAVING (NOT (AVG(((COUNT(t0.c2))>(COUNT(*)))))) UNION ALL SELECT t0.c0, t0.c2, t0.c1 FROM t0 GROUP BY t0.c0, t0.c2, t0.c1 HAVING ((AVG(((COUNT(t0.c2))>(COUNT(*))))) ISNULL);
SELECT MIN(CAST(CASE WHEN v0.c0 THEN t0.c0 ELSE NULL END AS BLOB)) FROM v0, t0 ORDER BY ((t0.c2 COLLATE BINARY) ISNULL)  NULLS FIRST;
SELECT ALL * FROM v0, t0;
SELECT ALL * FROM v0, t0 WHERE (((((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))OR(v0.c0)))OR(t0.c1))) ISNULL)) UNION ALL SELECT * FROM v0, t0 WHERE ((NOT (((((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))OR(v0.c0)))OR(t0.c1))) ISNULL)))) UNION ALL SELECT ALL * FROM v0, t0 WHERE (((((((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))OR(v0.c0)))OR(t0.c1))) ISNULL)) ISNULL));
SELECT ALL * FROM v0, t0;
SELECT DISTINCT t0.c2, t0.c1, t0.c0 FROM t0;
SELECT DISTINCT t0.c2, t0.c1, t0.c0 FROM t0 WHERE (((((CASE t0.c0  WHEN t0.c0 THEN t0.c1 WHEN t0.c2 THEN t0.c2 WHEN t0.c2 THEN t0.c2 WHEN t0.c1 THEN t0.c1 WHEN t0.c1 THEN t0.c0 ELSE t0.c0 END)OR(((((t0.c2)OR(t0.c1)))AND(t0.c1)))))OR(((t0.c0) NOT BETWEEN (x'') AND (t0.c0))))) UNION SELECT DISTINCT t0.c2, t0.c1, t0.c0 FROM t0 WHERE ((NOT (((((CASE t0.c0  WHEN t0.c0 THEN t0.c1 WHEN t0.c2 THEN t0.c2 WHEN t0.c2 THEN t0.c2 WHEN t0.c1 THEN t0.c1 WHEN t0.c1 THEN t0.c0 ELSE t0.c0 END)OR(((((t0.c2)OR(t0.c1)))AND(t0.c1)))))OR(((t0.c0) NOT BETWEEN (x'') AND (t0.c0))))))) UNION SELECT DISTINCT t0.c2, t0.c1, t0.c0 FROM t0 WHERE (((((((CASE t0.c0  WHEN t0.c0 THEN t0.c1 WHEN t0.c2 THEN t0.c2 WHEN t0.c2 THEN t0.c2 WHEN t0.c1 THEN t0.c1 WHEN t0.c1 THEN t0.c0 ELSE t0.c0 END)OR(((((t0.c2)OR(t0.c1)))AND(t0.c1)))))OR(((t0.c0) NOT BETWEEN (x'') AND (t0.c0))))) ISNULL));
SELECT DISTINCT t0.c2, t0.c1, t0.c0 FROM t0;
SELECT t0.c1 FROM t0, v0 GROUP BY t0.c1;
SELECT t0.c1 FROM t0, v0 WHERE (((((t0.c0)<=(v0.c0))) NOTNULL)) GROUP BY t0.c1 UNION SELECT ALL t0.c1 FROM t0, v0 WHERE ((NOT (((((t0.c0)<=(v0.c0))) NOTNULL)))) GROUP BY t0.c1 UNION SELECT t0.c1 FROM t0, v0 WHERE (((((((t0.c0)<=(v0.c0))) NOTNULL)) ISNULL)) GROUP BY t0.c1;
SELECT t0.c1 FROM t0, v0 GROUP BY t0.c1;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((COUNT(NULL))-('-1905210080')) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (((COUNT(NULL))-('-1905210080')))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((((COUNT(NULL))-('-1905210080'))) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((COUNT(NULL))-('-1905210080')) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (((COUNT(NULL))-('-1905210080')))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((((COUNT(NULL))-('-1905210080'))) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT t0.c1 FROM t0;
SELECT t0.c1 FROM t0 WHERE (t0.c2) UNION ALL SELECT t0.c1 FROM t0 NOT INDEXED WHERE ((NOT (t0.c2))) UNION ALL SELECT ALL t0.c1 FROM t0 WHERE (((t0.c2) ISNULL));
SELECT t0.c1 FROM t0;
SELECT DISTINCT t0.c1, t0.c0, v0.c0 FROM v0, t0;
SELECT DISTINCT t0.c1, t0.c0, v0.c0 FROM v0, t0 WHERE (CAST(((t0.c2) NOT NULL) AS NUMERIC)) UNION SELECT DISTINCT t0.c1, t0.c0, v0.c0 FROM v0, t0 WHERE ((NOT (CAST(((t0.c2) NOT NULL) AS NUMERIC)))) UNION SELECT DISTINCT t0.c1, t0.c0, v0.c0 FROM v0, t0 WHERE (((CAST(((t0.c2) NOT NULL) AS NUMERIC)) ISNULL));
SELECT DISTINCT t0.c1, t0.c0, v0.c0 FROM v0, t0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (NULL) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT (NULL))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((NULL) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT t0.c0, t0.c2, t0.c1 FROM t0 GROUP BY t0.c0, t0.c2, t0.c1;
SELECT ALL t0.c0, t0.c2, t0.c1 FROM t0 GROUP BY t0.c0, t0.c2, t0.c1 HAVING MIN(SUM(t0.c0)) UNION ALL SELECT ALL t0.c0, t0.c2, t0.c1 FROM t0 GROUP BY t0.c0, t0.c2, t0.c1 HAVING (NOT (MIN(SUM(t0.c0)))) UNION ALL SELECT t0.c0, t0.c2, t0.c1 FROM t0 GROUP BY t0.c0, t0.c2, t0.c1 HAVING ((MIN(SUM(t0.c0))) ISNULL);
SELECT ALL t0.c2, v0.c0, t0.c0 FROM v0, t0;
SELECT t0.c2, v0.c0, t0.c0 FROM v0, t0 WHERE (((((CAST(v0.c0 AS BLOB))OR((+ (t0.c2)))))OR(((t0.c2)AND(t0.c2))))) UNION ALL SELECT t0.c2, v0.c0, t0.c0 FROM v0, t0 WHERE ((NOT (((((CAST(v0.c0 AS BLOB))OR((+ (t0.c2)))))OR(((t0.c2)AND(t0.c2))))))) UNION ALL SELECT t0.c2, v0.c0, t0.c0 FROM v0, t0 WHERE (((((((CAST(v0.c0 AS BLOB))OR((+ (t0.c2)))))OR(((t0.c2)AND(t0.c2))))) ISNULL));
SELECT ALL t0.c2, v0.c0, t0.c0 FROM v0, t0;
SELECT DISTINCT * FROM t0 NATURAL JOIN v0;
SELECT DISTINCT * FROM t0 NATURAL JOIN v0 WHERE (((v0.c0 COLLATE RTRIM) IS FALSE)) UNION SELECT DISTINCT * FROM t0 NATURAL JOIN v0 WHERE ((NOT (((v0.c0 COLLATE RTRIM) IS FALSE)))) UNION SELECT DISTINCT * FROM t0 NATURAL JOIN v0 WHERE (((((v0.c0 COLLATE RTRIM) IS FALSE)) ISNULL));
SELECT DISTINCT * FROM t0 NATURAL JOIN v0;
SELECT t0.c2 FROM t0 GROUP BY t0.c2;
SELECT t0.c2 FROM t0 WHERE (CASE WHEN (((t0.c0)) NOT BETWEEN ((t0.c1)) AND ((t0.c1))) THEN ((t0.c0) ISNULL) END) GROUP BY t0.c2 UNION SELECT ALL t0.c2 FROM t0 WHERE ((NOT (CASE WHEN (((t0.c0)) NOT BETWEEN ((t0.c1)) AND ((t0.c1))) THEN ((t0.c0) ISNULL) END))) GROUP BY t0.c2 UNION SELECT t0.c2 FROM t0 WHERE (((CASE WHEN (((t0.c0)) NOT BETWEEN ((t0.c1)) AND ((t0.c1))) THEN ((t0.c0) ISNULL) END) ISNULL)) GROUP BY t0.c2;
SELECT t0.c2 FROM t0 GROUP BY t0.c2;
SELECT ALL t0.c0, t0.c2 FROM t0, v0 GROUP BY t0.c0, t0.c2;
SELECT t0.c0, t0.c2 FROM t0, v0 GROUP BY t0.c0, t0.c2 HAVING ((((((((AVG(v0.c0))OR(((t0.c2) BETWEEN (GROUP_CONCAT(MAX(t0.c0))) AND (t0.c2)))))AND(CASE WHEN COUNT(*) THEN MIN(MIN(0.6817257969958086)) ELSE GROUP_CONCAT(v0.c0) END)))AND((~ (MAX(t0.c2))))))OR(((MAX(t0.c0)) BETWEEN (MAX(t0.c0)) AND (COUNT(*))))) UNION ALL SELECT ALL t0.c0, t0.c2 FROM t0, v0 GROUP BY t0.c0, t0.c2 HAVING (NOT (((((((((AVG(v0.c0))OR(((t0.c2) BETWEEN (GROUP_CONCAT(MAX(t0.c0))) AND (t0.c2)))))AND(CASE WHEN COUNT(*) THEN MIN(MIN(0.6817257969958086)) ELSE GROUP_CONCAT(v0.c0) END)))AND((~ (MAX(t0.c2))))))OR(((MAX(t0.c0)) BETWEEN (MAX(t0.c0)) AND (COUNT(*))))))) UNION ALL SELECT ALL t0.c0, t0.c2 FROM t0, v0 GROUP BY t0.c0, t0.c2 HAVING ((((((((((AVG(v0.c0))OR(((t0.c2) BETWEEN (GROUP_CONCAT(MAX(t0.c0))) AND (t0.c2)))))AND(CASE WHEN COUNT(*) THEN MIN(MIN(0.6817257969958086)) ELSE GROUP_CONCAT(v0.c0) END)))AND((~ (MAX(t0.c2))))))OR(((MAX(t0.c0)) BETWEEN (MAX(t0.c0)) AND (COUNT(*)))))) ISNULL);
SELECT ALL TOTAL((0.7145750013672879 IN ())) FROM v0 ORDER BY (((((v0.c0)) BETWEEN ((0.03592765841195111)) AND ((v0.c0)))) ISNULL) DESC  NULLS FIRST, (NOT (CAST(v0.c0 AS NUMERIC))) DESC, ((((v0.c0)<(v0.c0)))IS NOT((NULL IN ())));
SELECT t0.c1 FROM t0;
SELECT ALL t0.c1 FROM t0 WHERE ((((t0.c0) BETWEEN (t0.c2) AND (t0.c1)) IN (t0.c1))) UNION ALL SELECT ALL t0.c1 FROM t0 WHERE ((NOT ((((t0.c0) BETWEEN (t0.c2) AND (t0.c1)) IN (t0.c1))))) UNION ALL SELECT t0.c1 FROM t0 WHERE ((((((t0.c0) BETWEEN (t0.c2) AND (t0.c1)) IN (t0.c1))) ISNULL));
SELECT t0.c1 FROM t0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (t0.c0) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (t0.c0))) UNION SELECT DISTINCT * FROM t0 WHERE (((t0.c0) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (((CAST(v0.c0 AS REAL)) NOTNULL)) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT (((CAST(v0.c0 AS REAL)) NOTNULL)))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((((CAST(v0.c0 AS REAL)) NOTNULL)) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT t0.c2, t0.c0 FROM t0 CROSS JOIN v0 ON ((CASE t0.c2  WHEN v0.c0 THEN '0.29922281139175844' ELSE v0.c0 END) NOT NULL) GROUP BY t0.c2, t0.c0;
SELECT t0.c2, t0.c0 FROM t0 CROSS JOIN v0 ON ((CASE t0.c2  WHEN v0.c0 THEN '0.29922281139175844' ELSE v0.c0 END) NOT NULL) GROUP BY t0.c2, t0.c0 HAVING AVG(AVG(GROUP_CONCAT(''))) UNION ALL SELECT t0.c2, t0.c0 FROM t0 CROSS JOIN v0 ON ((CASE t0.c2  WHEN v0.c0 THEN '0.29922281139175844' ELSE v0.c0 END) NOT NULL) GROUP BY t0.c2, t0.c0 HAVING (NOT (AVG(AVG(GROUP_CONCAT(''))))) UNION ALL SELECT t0.c2, t0.c0 FROM t0 CROSS JOIN v0 ON ((CASE t0.c2  WHEN v0.c0 THEN '0.29922281139175844' ELSE v0.c0 END) NOT NULL) GROUP BY t0.c2, t0.c0 HAVING ((AVG(AVG(GROUP_CONCAT('')))) ISNULL);
SELECT * FROM t0, v0;
SELECT ALL * FROM t0, v0 WHERE (((v0.c0)LIKE(t0.c2)) COLLATE NOCASE) UNION ALL SELECT * FROM t0, v0 WHERE ((NOT (((v0.c0)LIKE(t0.c2)) COLLATE NOCASE))) UNION ALL SELECT * FROM t0, v0 WHERE (((((v0.c0)LIKE(t0.c2)) COLLATE NOCASE) ISNULL));
SELECT * FROM t0, v0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE ((SQLITE_VERSION() IN (v0.c0))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT ((SQLITE_VERSION() IN (v0.c0))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((((SQLITE_VERSION() IN (v0.c0))) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT v0.c0, t0.c2, t0.c1, t0.c0 FROM v0, t0 GROUP BY v0.c0, t0.c2, t0.c1, t0.c0;
SELECT ALL v0.c0, t0.c2, t0.c1, t0.c0 FROM v0, t0 WHERE (INSTR((((t0.c2))>((t0.c0))), ((v0.c0)LIKE(t0.c2)))) GROUP BY v0.c0, t0.c2, t0.c1, t0.c0 UNION SELECT ALL v0.c0, t0.c2, t0.c1, t0.c0 FROM v0, t0 WHERE ((NOT (INSTR((((t0.c2))>((t0.c0))), ((v0.c0)LIKE(t0.c2)))))) GROUP BY v0.c0, t0.c2, t0.c1, t0.c0 UNION SELECT v0.c0, t0.c2, t0.c1, t0.c0 FROM v0, t0 WHERE (((INSTR((((t0.c2))>((t0.c0))), ((v0.c0)LIKE(t0.c2)))) ISNULL)) GROUP BY v0.c0, t0.c2, t0.c1, t0.c0;
SELECT v0.c0, t0.c2, t0.c1, t0.c0 FROM v0, t0 GROUP BY v0.c0, t0.c2, t0.c1, t0.c0;
SELECT t0.c0, t0.c1 FROM t0 GROUP BY t0.c0, t0.c1;
SELECT ALL t0.c0, t0.c1 FROM t0 GROUP BY t0.c0, t0.c1 HAVING COUNT(((t0.c2)+(t0.c1))) UNION ALL SELECT ALL t0.c0, t0.c1 FROM t0 GROUP BY t0.c0, t0.c1 HAVING (NOT (COUNT(((t0.c2)+(t0.c1))))) UNION ALL SELECT t0.c0, t0.c1 FROM t0 GROUP BY t0.c0, t0.c1 HAVING ((COUNT(((t0.c2)+(t0.c1)))) ISNULL);
SELECT t0.c0, t0.c1 FROM t0 GROUP BY t0.c0, t0.c1;
SELECT ALL t0.c0, t0.c1 FROM t0 GROUP BY t0.c0, t0.c1 HAVING COUNT(((t0.c2)+(t0.c1))) UNION ALL SELECT ALL t0.c0, t0.c1 FROM t0 GROUP BY t0.c0, t0.c1 HAVING (NOT (COUNT(((t0.c2)+(t0.c1))))) UNION ALL SELECT t0.c0, t0.c1 FROM t0 GROUP BY t0.c0, t0.c1 HAVING ((COUNT(((t0.c2)+(t0.c1)))) ISNULL);
SELECT t0.c0, t0.c1 FROM t0 GROUP BY t0.c0, t0.c1;
SELECT ALL * FROM t0, v0;
SELECT * FROM t0, v0 WHERE ((((t0.c2)) NOT BETWEEN ((((t0.c1)GLOB(v0.c0)))) AND ((((t0.c2)IS(t0.c0)))))) UNION ALL SELECT * FROM t0, v0 WHERE ((NOT ((((t0.c2)) NOT BETWEEN ((((t0.c1)GLOB(v0.c0)))) AND ((((t0.c2)IS(t0.c0)))))))) UNION ALL SELECT * FROM t0, v0 WHERE ((((((t0.c2)) NOT BETWEEN ((((t0.c1)GLOB(v0.c0)))) AND ((((t0.c2)IS(t0.c0)))))) ISNULL));
SELECT ALL * FROM t0, v0;
SELECT DISTINCT t0.c0, t0.c2, t0.c1 FROM t0;
SELECT DISTINCT t0.c0, t0.c2, t0.c1 FROM t0 WHERE ((NOT (-563114446))) UNION SELECT DISTINCT t0.c0, t0.c2, t0.c1 FROM t0 WHERE ((NOT ((NOT (-563114446))))) UNION SELECT DISTINCT t0.c0, t0.c2, t0.c1 FROM t0 WHERE ((((NOT (-563114446))) ISNULL));
SELECT DISTINCT t0.c0, t0.c2, t0.c1 FROM t0;
SELECT t0.c2 FROM t0 GROUP BY t0.c2;
SELECT t0.c2 FROM t0 WHERE ((t0.c2 IN ())) GROUP BY t0.c2 UNION SELECT ALL t0.c2 FROM t0 WHERE ((NOT ((t0.c2 IN ())))) GROUP BY t0.c2 UNION SELECT ALL t0.c2 FROM t0 WHERE ((((t0.c2 IN ())) ISNULL)) GROUP BY t0.c2;
SELECT t0.c2 FROM t0 GROUP BY t0.c2;
SELECT ALL t0.c0, t0.c1, v0.c0 FROM v0 NATURAL JOIN t0 GROUP BY t0.c0, t0.c1, v0.c0;
SELECT t0.c0, t0.c1, v0.c0 FROM v0 NATURAL JOIN t0 GROUP BY t0.c0, t0.c1, v0.c0 HAVING CAST(AVG(v0.c0) AS BLOB) UNION ALL SELECT t0.c0, t0.c1, v0.c0 FROM v0 NATURAL JOIN t0 GROUP BY t0.c0, t0.c1, v0.c0 HAVING (NOT (CAST(AVG(v0.c0) AS BLOB))) UNION ALL SELECT t0.c0, t0.c1, v0.c0 FROM v0 NATURAL JOIN t0 GROUP BY t0.c0, t0.c1, v0.c0 HAVING ((CAST(AVG(v0.c0) AS BLOB)) ISNULL);
SELECT ALL t0.c0, t0.c1, v0.c0 FROM v0 NATURAL JOIN t0 GROUP BY t0.c0, t0.c1, v0.c0;
SELECT t0.c0, t0.c1, v0.c0 FROM v0 NATURAL JOIN t0 GROUP BY t0.c0, t0.c1, v0.c0 HAVING CAST(AVG(v0.c0) AS BLOB) UNION ALL SELECT t0.c0, t0.c1, v0.c0 FROM v0 NATURAL JOIN t0 GROUP BY t0.c0, t0.c1, v0.c0 HAVING (NOT (CAST(AVG(v0.c0) AS BLOB))) UNION ALL SELECT t0.c0, t0.c1, v0.c0 FROM v0 NATURAL JOIN t0 GROUP BY t0.c0, t0.c1, v0.c0 HAVING ((CAST(AVG(v0.c0) AS BLOB)) ISNULL);
SELECT ALL t0.c0, t0.c1, v0.c0 FROM v0 NATURAL JOIN t0 GROUP BY t0.c0, t0.c1, v0.c0;
SELECT t0.c0 FROM v0, t0 INDEXED BY i77;
SELECT ALL t0.c0 FROM v0, t0 INDEXED BY i77 WHERE ((((+ (t0.c1))) NOT NULL)) UNION ALL SELECT t0.c0 FROM v0, t0 INDEXED BY i77 WHERE ((NOT ((((+ (t0.c1))) NOT NULL)))) UNION ALL SELECT ALL t0.c0 FROM v0, t0 INDEXED BY i77 WHERE ((((((+ (t0.c1))) NOT NULL)) ISNULL));
SELECT t0.c0 FROM v0, t0 INDEXED BY i77;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (CASE ((x'') NOT BETWEEN (v0.c0) AND (v0.c0))  WHEN 'CzN%~윰f4' THEN v0.c0 COLLATE NOCASE WHEN TRIM(v0.c0, v0.c0) THEN (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))) WHEN v0.c0 THEN ((((v0.c0)OR(v0.c0)))AND(v0.c0)) END) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (CASE ((x'') NOT BETWEEN (v0.c0) AND (v0.c0))  WHEN 'CzN%~윰f4' THEN v0.c0 COLLATE NOCASE WHEN TRIM(v0.c0, v0.c0) THEN (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))) WHEN v0.c0 THEN ((((v0.c0)OR(v0.c0)))AND(v0.c0)) END))) UNION SELECT DISTINCT * FROM v0 WHERE (((CASE ((x'') NOT BETWEEN (v0.c0) AND (v0.c0))  WHEN 'CzN%~윰f4' THEN v0.c0 COLLATE NOCASE WHEN TRIM(v0.c0, v0.c0) THEN (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))) WHEN v0.c0 THEN ((((v0.c0)OR(v0.c0)))AND(v0.c0)) END) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT t0.c2, t0.c1, t0.c0 FROM t0 GROUP BY t0.c2, t0.c1, t0.c0;
SELECT t0.c2, t0.c1, t0.c0 FROM t0 WHERE ((('-328045842')==((((t0.c2, t0.c0, 'B#做K')) BETWEEN ((t0.c0, t0.c1, t0.c2)) AND ((t0.c1, t0.c1, 0X77cfc88c)))))) GROUP BY t0.c2, t0.c1, t0.c0 UNION SELECT t0.c2, t0.c1, t0.c0 FROM t0 WHERE ((NOT ((('-328045842')==((((t0.c2, t0.c0, 'B#做K')) BETWEEN ((t0.c0, t0.c1, t0.c2)) AND ((t0.c1, t0.c1, 0x77cfc88c)))))))) GROUP BY t0.c2, t0.c1, t0.c0 UNION SELECT ALL t0.c2, t0.c1, t0.c0 FROM t0 WHERE ((((('-328045842')=((((t0.c2, t0.c0, 'B#做K')) BETWEEN ((t0.c0, t0.c1, t0.c2)) AND ((t0.c1, t0.c1, 0x77cfc88c)))))) ISNULL)) GROUP BY t0.c2, t0.c1, t0.c0;
SELECT t0.c2, t0.c1, t0.c0 FROM t0 GROUP BY t0.c2, t0.c1, t0.c0;
SELECT t0.c1 FROM t0, v0 GROUP BY t0.c1;
SELECT t0.c1 FROM t0, v0 GROUP BY t0.c1 HAVING MIN(MIN(t0.c2)) UNION ALL SELECT t0.c1 FROM t0, v0 GROUP BY t0.c1 HAVING (NOT (MIN(MIN(t0.c2)))) UNION ALL SELECT ALL t0.c1 FROM t0, v0 GROUP BY t0.c1 HAVING ((MIN(MIN(t0.c2))) ISNULL);
SELECT ALL t0.c1, t0.c0, t0.c2 FROM t0;
SELECT t0.c1, t0.c0, t0.c2 FROM t0 WHERE (NULL) UNION ALL SELECT ALL t0.c1, t0.c0, t0.c2 FROM t0 WHERE ((NOT (NULL))) UNION ALL SELECT t0.c1, t0.c0, t0.c2 FROM t0 WHERE (((NULL) ISNULL));
SELECT ALL t0.c1, t0.c0, t0.c2 FROM t0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE ((((v0.c0)%(v0.c0)) IN ())) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT ((((v0.c0)%(v0.c0)) IN ())))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((((((v0.c0)%(v0.c0)) IN ())) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT t0.c2 FROM t0 INDEXED BY i77 GROUP BY t0.c2;
SELECT t0.c2 FROM t0 INDEXED BY i77 WHERE (0.2403477032730038 COLLATE NOCASE) GROUP BY t0.c2 UNION SELECT t0.c2 FROM t0 INDEXED BY i77 WHERE ((NOT (0.2403477032730038 COLLATE NOCASE))) GROUP BY t0.c2 UNION SELECT t0.c2 FROM t0 INDEXED BY i77 WHERE (((0.2403477032730038 COLLATE NOCASE) ISNULL)) GROUP BY t0.c2;
SELECT t0.c2 FROM t0 INDEXED BY i77 GROUP BY t0.c2;
SELECT ALL t0.c2, t0.c0 FROM t0 GROUP BY t0.c2, t0.c0;
SELECT t0.c2, t0.c0 FROM t0 GROUP BY t0.c2, t0.c0 HAVING CAST(TOTAL(t0.c2) AS TEXT) UNION ALL SELECT ALL t0.c2, t0.c0 FROM t0 GROUP BY t0.c2, t0.c0 HAVING (NOT (CAST(TOTAL(t0.c2) AS TEXT))) UNION ALL SELECT ALL t0.c2, t0.c0 FROM t0 GROUP BY t0.c2, t0.c0 HAVING ((CAST(TOTAL(t0.c2) AS TEXT)) ISNULL);
SELECT ALL t0.c2, t0.c0 FROM t0 GROUP BY t0.c2, t0.c0;
SELECT t0.c2, t0.c0 FROM t0 GROUP BY t0.c2, t0.c0 HAVING CAST(TOTAL(t0.c2) AS TEXT) UNION ALL SELECT ALL t0.c2, t0.c0 FROM t0 GROUP BY t0.c2, t0.c0 HAVING (NOT (CAST(TOTAL(t0.c2) AS TEXT))) UNION ALL SELECT ALL t0.c2, t0.c0 FROM t0 GROUP BY t0.c2, t0.c0 HAVING ((CAST(TOTAL(t0.c2) AS TEXT)) ISNULL);
SELECT ALL t0.c2, t0.c0 FROM t0 GROUP BY t0.c2, t0.c0;
SELECT * FROM t0, v0;
SELECT ALL * FROM t0, v0 WHERE ((((v0.c0) NOT BETWEEN (t0.c0) AND (t0.c1)) IN ())) UNION ALL SELECT ALL * FROM t0, v0 WHERE ((NOT ((((v0.c0) NOT BETWEEN (t0.c0) AND (t0.c1)) IN ())))) UNION ALL SELECT * FROM t0, v0 WHERE ((((((v0.c0) NOT BETWEEN (t0.c0) AND (t0.c1)) IN ())) ISNULL));
SELECT * FROM t0, v0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE ((((((('1019079936'))<>((0Xffffffff8e195dd5)))))<=((((v0.c0) IS TRUE))))) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT ((((((('1019079936'))!=((0xffffffff8e195dd5)))))<=((((v0.c0) IS TRUE))))))) UNION SELECT DISTINCT * FROM v0 WHERE ((((((((('1019079936'))<>((0Xffffffff8e195dd5)))))<=((((v0.c0) IS TRUE))))) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE (((((((t0.c1)) NOT BETWEEN ((t0.c1)) AND ((t0.c1))), '-778877898', t0.c0))<((((t0.c1) NOT BETWEEN (t0.c2) AND (x'')), (((t0.c2))<=((t0.c0))), (NOT (t0.c1)))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT (((((((t0.c1)) NOT BETWEEN ((t0.c1)) AND ((t0.c1))), '-778877898', t0.c0))<((((t0.c1) NOT BETWEEN (t0.c2) AND (x'')), (((t0.c2))<=((t0.c0))), (NOT (t0.c1)))))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE (((((((((t0.c1)) NOT BETWEEN ((t0.c1)) AND ((t0.c1))), '-778877898', t0.c0))<((((t0.c1) NOT BETWEEN (t0.c2) AND (x'')), (((t0.c2))<=((t0.c0))), (NOT (t0.c1)))))) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING MIN(SUM(GROUP_CONCAT(SUM(v0.c0)))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (MIN(SUM(GROUP_CONCAT(SUM(v0.c0)))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((MIN(SUM(GROUP_CONCAT(SUM(v0.c0))))) ISNULL);
SELECT TOTAL(t0.c1) FROM v0, t0 ORDER BY highlight(NULL, CASE t0.c0  WHEN t0.c1 THEN t0.c0 ELSE t0.c0 END, (t0.c2 IN ()), CAST(t0.c0 AS BLOB)) DESC  NULLS FIRST;
SELECT * FROM v0 INNER JOIN t0 ON CASE WHEN t0.c0 COLLATE NOCASE THEN CASE t0.c0  WHEN t0.c0 THEN t0.c0 END WHEN t0.c2 THEN t0.c1 COLLATE NOCASE WHEN t0.c1 COLLATE NOCASE THEN t0.c2 END;
SELECT * FROM v0 INNER JOIN t0 ON CASE WHEN t0.c0 COLLATE NOCASE THEN CASE t0.c0  WHEN t0.c0 THEN t0.c0 END WHEN t0.c2 THEN t0.c1 COLLATE NOCASE WHEN t0.c1 COLLATE NOCASE THEN t0.c2 END WHERE (SUBSTR(t0.c1, CASE t0.c0  WHEN t0.c1 THEN t0.c2 END)) UNION ALL SELECT ALL * FROM v0 INNER JOIN t0 ON CASE WHEN t0.c0 COLLATE NOCASE THEN CASE t0.c0  WHEN t0.c0 THEN t0.c0 END WHEN t0.c2 THEN t0.c1 COLLATE NOCASE WHEN t0.c1 COLLATE NOCASE THEN t0.c2 END WHERE ((NOT (SUBSTR(t0.c1, CASE t0.c0  WHEN t0.c1 THEN t0.c2 END)))) UNION ALL SELECT * FROM v0 INNER JOIN t0 ON CASE WHEN t0.c0 COLLATE NOCASE THEN CASE t0.c0  WHEN t0.c0 THEN t0.c0 END WHEN t0.c2 THEN t0.c1 COLLATE NOCASE WHEN t0.c1 COLLATE NOCASE THEN t0.c2 END WHERE (((SUBSTR(t0.c1, CASE t0.c0  WHEN t0.c1 THEN t0.c2 END)) ISNULL));
SELECT * FROM v0 INNER JOIN t0 ON CASE WHEN t0.c0 COLLATE NOCASE THEN CASE t0.c0  WHEN t0.c0 THEN t0.c0 END WHEN t0.c2 THEN t0.c1 COLLATE NOCASE WHEN t0.c1 COLLATE NOCASE THEN t0.c2 END;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (((((((v0.c0)<<(v0.c0)))AND(v0.c0)))AND((NOT (v0.c0))))) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (((((((v0.c0)<<(v0.c0)))AND(v0.c0)))AND((NOT (v0.c0))))))) UNION SELECT DISTINCT * FROM v0 WHERE (((((((((v0.c0)<<(v0.c0)))AND(v0.c0)))AND((NOT (v0.c0))))) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (v0.c0) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT (v0.c0))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((v0.c0) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING MAX((((v0.c0, MIN(v0.c0), v0.c0))==((COUNT(v0.c0), v0.c0, v0.c0)))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (MAX((((v0.c0, MIN(v0.c0), v0.c0))=((COUNT(v0.c0), v0.c0, v0.c0)))))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((MAX((((v0.c0, MIN(v0.c0), v0.c0))=((COUNT(v0.c0), v0.c0, v0.c0))))) ISNULL);
SELECT t0.c0 FROM t0 INNER JOIN v0 ON (((((('1794529235') IS FALSE))OR(CAST(v0.c0 AS INTEGER))))AND(UNLIKELY(x'')));
SELECT t0.c0 FROM t0 INNER JOIN v0 ON (((((('1794529235') IS FALSE))OR(CAST(v0.c0 AS INTEGER))))AND(UNLIKELY(x''))) WHERE (((t0.c2 COLLATE RTRIM)GLOB(((t0.c0)&(t0.c1))))) UNION ALL SELECT ALL t0.c0 FROM t0 INNER JOIN v0 ON (((((('1794529235') IS FALSE))OR(CAST(v0.c0 AS INTEGER))))AND(UNLIKELY(x''))) WHERE ((NOT (((t0.c2 COLLATE RTRIM)GLOB(((t0.c0)&(t0.c1))))))) UNION ALL SELECT ALL t0.c0 FROM t0 INNER JOIN v0 ON (((((('1794529235') IS FALSE))OR(CAST(v0.c0 AS INTEGER))))AND(UNLIKELY(x''))) WHERE (((((t0.c2 COLLATE RTRIM)GLOB(((t0.c0)&(t0.c1))))) ISNULL));
SELECT t0.c0 FROM t0 INNER JOIN v0 ON (((((('1794529235') IS FALSE))OR(CAST(v0.c0 AS INTEGER))))AND(UNLIKELY(x'')));
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (((CAST(t0.c0 AS INTEGER)) NOT BETWEEN (((t0.c0) BETWEEN (t0.c2) AND (t0.c0))) AND (CAST(t0.c0 AS NUMERIC)))) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (((CAST(t0.c0 AS INTEGER)) NOT BETWEEN (((t0.c0) BETWEEN (t0.c2) AND (t0.c0))) AND (CAST(t0.c0 AS NUMERIC)))))) UNION SELECT DISTINCT * FROM t0 WHERE (((((CAST(t0.c0 AS INTEGER)) NOT BETWEEN (((t0.c0) BETWEEN (t0.c2) AND (t0.c0))) AND (CAST(t0.c0 AS NUMERIC)))) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT ALL t0.c2, t0.c1, v0.c0 FROM t0 LEFT OUTER JOIN v0 ON ((((((((((((x'')AND((('') BETWEEN (v0.c0) AND (t0.c0)))))AND(t0.c1 COLLATE BINARY)))AND(((v0.c0) NOTNULL))))AND(v0.c0)))OR(((v0.c0) BETWEEN (v0.c0) AND (t0.c0)))))AND(t0.c2)) GROUP BY t0.c2, t0.c1, v0.c0;
SELECT ALL t0.c2, t0.c1, v0.c0 FROM t0 LEFT OUTER JOIN v0 ON ((((((((((((x'')AND((('') BETWEEN (v0.c0) AND (t0.c0)))))AND(t0.c1 COLLATE BINARY)))AND(((v0.c0) NOTNULL))))AND(v0.c0)))OR(((v0.c0) BETWEEN (v0.c0) AND (t0.c0)))))AND(t0.c2)) WHERE (CAST(((((t0.c0)AND(t0.c1)))OR(0Xffffffffd1261dc7)) AS TEXT)) GROUP BY t0.c2, t0.c1, v0.c0 UNION SELECT t0.c2, t0.c1, v0.c0 FROM t0 LEFT OUTER JOIN v0 ON ((((((((((((x'')AND((('') BETWEEN (v0.c0) AND (t0.c0)))))AND(t0.c1 COLLATE BINARY)))AND(((v0.c0) NOTNULL))))AND(v0.c0)))OR(((v0.c0) BETWEEN (v0.c0) AND (t0.c0)))))AND(t0.c2)) WHERE ((NOT (CAST(((((t0.c0)AND(t0.c1)))OR(0xffffffffd1261dc7)) AS TEXT)))) GROUP BY t0.c2, t0.c1, v0.c0 UNION SELECT ALL t0.c2, t0.c1, v0.c0 FROM t0 LEFT OUTER JOIN v0 ON ((((((((((((x'')AND((('') BETWEEN (v0.c0) AND (t0.c0)))))AND(t0.c1 COLLATE BINARY)))AND(((v0.c0) NOTNULL))))AND(v0.c0)))OR(((v0.c0) BETWEEN (v0.c0) AND (t0.c0)))))AND(t0.c2)) WHERE (((CAST(((((t0.c0)AND(t0.c1)))OR(0xffffffffd1261dc7)) AS TEXT)) ISNULL)) GROUP BY t0.c2, t0.c1, v0.c0;
SELECT ALL t0.c2, t0.c1, v0.c0 FROM t0 LEFT OUTER JOIN v0 ON ((((((((((((x'')AND((('') BETWEEN (v0.c0) AND (t0.c0)))))AND(t0.c1 COLLATE BINARY)))AND(((v0.c0) NOTNULL))))AND(v0.c0)))OR(((v0.c0) BETWEEN (v0.c0) AND (t0.c0)))))AND(t0.c2)) GROUP BY t0.c2, t0.c1, v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING NULLIF(((COUNT(*)) NOTNULL), MIN(v0.c0)) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (NULLIF(((COUNT(*)) NOTNULL), MIN(v0.c0)))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((NULLIF(((COUNT(*)) NOTNULL), MIN(v0.c0))) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING NULLIF(((COUNT(*)) NOTNULL), MIN(v0.c0)) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (NULLIF(((COUNT(*)) NOTNULL), MIN(v0.c0)))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((NULLIF(((COUNT(*)) NOTNULL), MIN(v0.c0))) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL TOTAL(-521249378 COLLATE RTRIM) FROM t0, v0;
SELECT t0.c2, t0.c1 FROM t0;
SELECT t0.c2, t0.c1 FROM t0 WHERE (CASE ((t0.c2)&(t0.c0))  WHEN CAST(NULL AS REAL) THEN (NOT (x'275b')) ELSE (~ (t0.c0)) END) UNION ALL SELECT ALL t0.c2, t0.c1 FROM t0 WHERE ((NOT (CASE ((t0.c2)&(t0.c0))  WHEN CAST(NULL AS REAL) THEN (NOT (x'275b')) ELSE (~ (t0.c0)) END))) UNION ALL SELECT t0.c2, t0.c1 FROM t0 WHERE (((CASE ((t0.c2)&(t0.c0))  WHEN CAST(NULL AS REAL) THEN (NOT (x'275b')) ELSE (~ (t0.c0)) END) ISNULL));
SELECT t0.c2, t0.c1 FROM t0;
SELECT DISTINCT * FROM t0, v0 INDEXED BY i77;
SELECT t0.c0, t0.c2 FROM t0 GROUP BY t0.c0, t0.c2;
SELECT t0.c0, t0.c2 FROM t0 WHERE (CASE WHEN ((((t0.c1)AND(0X7f09d784)))AND(t0.c1)) THEN (+ (t0.c1)) WHEN ((t0.c0)+(t0.c1)) THEN ((t0.c2) NOT BETWEEN (t0.c1) AND (t0.c1)) WHEN CAST(t0.c2 AS INTEGER) THEN (t0.c1 IN ()) END) GROUP BY t0.c0, t0.c2 UNION SELECT ALL t0.c0, t0.c2 FROM t0 WHERE ((NOT (CASE WHEN ((((t0.c1)AND(0X7f09d784)))AND(t0.c1)) THEN (+ (t0.c1)) WHEN ((t0.c0)+(t0.c1)) THEN ((t0.c2) NOT BETWEEN (t0.c1) AND (t0.c1)) WHEN CAST(t0.c2 AS INTEGER) THEN (t0.c1 IN ()) END))) GROUP BY t0.c0, t0.c2 UNION SELECT ALL t0.c0, t0.c2 FROM t0 WHERE (((CASE WHEN ((((t0.c1)AND(0x7f09d784)))AND(t0.c1)) THEN (+ (t0.c1)) WHEN ((t0.c0)+(t0.c1)) THEN ((t0.c2) NOT BETWEEN (t0.c1) AND (t0.c1)) WHEN CAST(t0.c2 AS INTEGER) THEN (t0.c1 IN ()) END) ISNULL)) GROUP BY t0.c0, t0.c2;
SELECT t0.c0, t0.c2 FROM t0 GROUP BY t0.c0, t0.c2;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING TOTAL(0.919841344388576) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (TOTAL(0.919841344388576))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((TOTAL(0.919841344388576)) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING TOTAL(0.919841344388576) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (TOTAL(0.919841344388576))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((TOTAL(0.919841344388576)) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL * FROM t0, v0;
SELECT ALL * FROM t0, v0 WHERE ((((t0.c0 IN (NULL, t0.c2, t0.c2))) BETWEEN (CASE t0.c1  WHEN t0.c0 THEN t0.c1 WHEN x'' THEN t0.c1 WHEN v0.c0 THEN t0.c2 ELSE t0.c2 END) AND (((t0.c2) NOT BETWEEN (t0.c2) AND (t0.c2))))) UNION ALL SELECT * FROM t0, v0 WHERE ((NOT ((((t0.c0 IN (NULL, t0.c2, t0.c2))) BETWEEN (CASE t0.c1  WHEN t0.c0 THEN t0.c1 WHEN x'' THEN t0.c1 WHEN v0.c0 THEN t0.c2 ELSE t0.c2 END) AND (((t0.c2) NOT BETWEEN (t0.c2) AND (t0.c2))))))) UNION ALL SELECT * FROM t0, v0 WHERE ((((((t0.c0 IN (NULL, t0.c2, t0.c2))) BETWEEN (CASE t0.c1  WHEN t0.c0 THEN t0.c1 WHEN x'' THEN t0.c1 WHEN v0.c0 THEN t0.c2 ELSE t0.c2 END) AND (((t0.c2) NOT BETWEEN (t0.c2) AND (t0.c2))))) ISNULL));
SELECT ALL * FROM t0, v0;
SELECT DISTINCT * FROM t0, v0;
SELECT DISTINCT * FROM t0, v0 WHERE ((t0.c2 COLLATE RTRIM IN (((t0.c0)LIKE(t0.c1)), ((t0.c0) BETWEEN (t0.c1) AND (t0.c2))))) UNION SELECT DISTINCT * FROM t0, v0 WHERE ((NOT ((t0.c2 COLLATE RTRIM IN (((t0.c0)LIKE(t0.c1)), ((t0.c0) BETWEEN (t0.c1) AND (t0.c2))))))) UNION SELECT DISTINCT * FROM t0, v0 WHERE ((((t0.c2 COLLATE RTRIM IN (((t0.c0)LIKE(t0.c1)), ((t0.c0) BETWEEN (t0.c1) AND (t0.c2))))) ISNULL));
SELECT DISTINCT * FROM t0, v0;
SELECT v0.c0 FROM t0, v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM t0, v0 WHERE (((((t0.c2) NOT BETWEEN (v0.c0) AND (t0.c0))) NOT BETWEEN (((v0.c0)OR(t0.c0))) AND (((0xffffffffa54a5da6)+(t0.c0))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM t0, v0 WHERE ((NOT (((((t0.c2) NOT BETWEEN (v0.c0) AND (t0.c0))) NOT BETWEEN (((v0.c0)OR(t0.c0))) AND (((0xffffffffa54a5da6)+(t0.c0))))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM t0, v0 WHERE (((((((t0.c2) NOT BETWEEN (v0.c0) AND (t0.c0))) NOT BETWEEN (((v0.c0)OR(t0.c0))) AND (((0xffffffffa54a5da6)+(t0.c0))))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM t0, v0 GROUP BY v0.c0;
SELECT v0.c0, t0.c1, t0.c2, t0.c0 FROM v0, t0 GROUP BY v0.c0, t0.c1, t0.c2, t0.c0;
SELECT ALL v0.c0, t0.c1, t0.c2, t0.c0 FROM v0, t0 GROUP BY v0.c0, t0.c1, t0.c2, t0.c0 HAVING MIN(MAX(COUNT(v0.c0))) UNION ALL SELECT ALL v0.c0, t0.c1, t0.c2, t0.c0 FROM v0, t0 GROUP BY v0.c0, t0.c1, t0.c2, t0.c0 HAVING (NOT (MIN(MAX(COUNT(v0.c0))))) UNION ALL SELECT v0.c0, t0.c1, t0.c2, t0.c0 FROM v0, t0 GROUP BY v0.c0, t0.c1, t0.c2, t0.c0 HAVING ((MIN(MAX(COUNT(v0.c0)))) ISNULL);
SELECT ALL t0.c2, t0.c1 FROM v0 RIGHT OUTER JOIN t0 ON CAST(v0.c0 AS INTEGER) COLLATE RTRIM;
SELECT ALL t0.c2, t0.c1 FROM v0 RIGHT OUTER JOIN t0 ON CAST(v0.c0 AS INTEGER) COLLATE RTRIM WHERE (((CASE t0.c1  WHEN t0.c0 THEN t0.c0 ELSE v0.c0 END) NOT BETWEEN (((v0.c0)OR(t0.c1))) AND (((t0.c1) NOT BETWEEN (v0.c0) AND (t0.c2))))) UNION ALL SELECT t0.c2, t0.c1 FROM v0 RIGHT OUTER JOIN t0 ON CAST(v0.c0 AS INTEGER) COLLATE RTRIM WHERE ((NOT (((CASE t0.c1  WHEN t0.c0 THEN t0.c0 ELSE v0.c0 END) NOT BETWEEN (((v0.c0)OR(t0.c1))) AND (((t0.c1) NOT BETWEEN (v0.c0) AND (t0.c2))))))) UNION ALL SELECT t0.c2, t0.c1 FROM v0 RIGHT OUTER JOIN t0 ON CAST(v0.c0 AS INTEGER) COLLATE RTRIM WHERE (((((CASE t0.c1  WHEN t0.c0 THEN t0.c0 ELSE v0.c0 END) NOT BETWEEN (((v0.c0)OR(t0.c1))) AND (((t0.c1) NOT BETWEEN (v0.c0) AND (t0.c2))))) ISNULL));
SELECT ALL t0.c2, t0.c1 FROM v0 RIGHT OUTER JOIN t0 ON CAST(v0.c0 AS INTEGER) COLLATE RTRIM;
SELECT DISTINCT t0.c1, t0.c2, v0.c0 FROM t0, v0;
SELECT DISTINCT t0.c1, t0.c2, v0.c0 FROM t0, v0 WHERE ((((((((((NOT (t0.c2)))OR(NULLIF(v0.c0, t0.c0))))AND(((v0.c0) BETWEEN (-1.166291965E9) AND (NULL)))))AND(((t0.c0)!=(t0.c2)))))OR(t0.c2 COLLATE RTRIM))) UNION SELECT DISTINCT t0.c1, t0.c2, v0.c0 FROM t0, v0 WHERE ((NOT ((((((((((NOT (t0.c2)))OR(NULLIF(v0.c0, t0.c0))))AND(((v0.c0) BETWEEN (-1.166291965E9) AND (NULL)))))AND(((t0.c0)!=(t0.c2)))))OR(t0.c2 COLLATE RTRIM))))) UNION SELECT DISTINCT t0.c1, t0.c2, v0.c0 FROM t0, v0 WHERE ((((((((((((NOT (t0.c2)))OR(NULLIF(v0.c0, t0.c0))))AND(((v0.c0) BETWEEN (-1.166291965E9) AND (NULL)))))AND(((t0.c0)<>(t0.c2)))))OR(t0.c2 COLLATE RTRIM))) ISNULL));
SELECT DISTINCT t0.c1, t0.c2, v0.c0 FROM t0, v0;
SELECT ALL v0.c0 FROM v0, t0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0, t0 WHERE (CASE WHEN t0.c2 THEN t0.c1 WHEN t0.c1 THEN v0.c0 WHEN t0.c2 THEN v0.c0 ELSE t0.c0 END COLLATE BINARY) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0, t0 WHERE ((NOT (CASE WHEN t0.c2 THEN t0.c1 WHEN t0.c1 THEN v0.c0 WHEN t0.c2 THEN v0.c0 ELSE t0.c0 END COLLATE BINARY))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0, t0 WHERE (((CASE WHEN t0.c2 THEN t0.c1 WHEN t0.c1 THEN v0.c0 WHEN t0.c2 THEN v0.c0 ELSE t0.c0 END COLLATE BINARY) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0, t0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM t0, v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM t0, v0 GROUP BY v0.c0 HAVING SUM(LTRIM(t0.c2, COUNT(TOTAL(MIN(SUM('*?2')))))) UNION ALL SELECT ALL v0.c0 FROM t0, v0 GROUP BY v0.c0 HAVING (NOT (SUM(LTRIM(t0.c2, COUNT(TOTAL(MIN(SUM('*?2')))))))) UNION ALL SELECT ALL v0.c0 FROM t0, v0 GROUP BY v0.c0 HAVING ((SUM(LTRIM(t0.c2, COUNT(TOTAL(MIN(SUM('*?2'))))))) ISNULL);
SELECT ALL * FROM t0, v0;
SELECT * FROM t0, v0 WHERE ((((t0.c1 IN ())) NOT BETWEEN (((v0.c0) NOT BETWEEN (t0.c2) AND (t0.c2))) AND (NULL))) UNION ALL SELECT * FROM t0, v0 WHERE ((NOT ((((t0.c1 IN ())) NOT BETWEEN (((v0.c0) NOT BETWEEN (t0.c2) AND (t0.c2))) AND (NULL))))) UNION ALL SELECT ALL * FROM t0, v0 WHERE ((((((t0.c1 IN ())) NOT BETWEEN (((v0.c0) NOT BETWEEN (t0.c2) AND (t0.c2))) AND (NULL))) ISNULL));
SELECT ALL * FROM t0, v0;
SELECT DISTINCT * FROM t0, v0;
SELECT DISTINCT * FROM t0, v0 WHERE ((~ (t0.c1 COLLATE NOCASE))) UNION SELECT DISTINCT * FROM t0, v0 WHERE ((NOT ((~ (t0.c1 COLLATE NOCASE))))) UNION SELECT DISTINCT * FROM t0, v0 WHERE ((((~ (t0.c1 COLLATE NOCASE))) ISNULL));
SELECT DISTINCT * FROM t0, v0;
SELECT ALL t0.c2, t0.c1 FROM t0 FULL OUTER JOIN v0 ON t0.c1 GROUP BY t0.c2, t0.c1;
SELECT ALL t0.c2, t0.c1 FROM t0 FULL OUTER JOIN v0 ON t0.c1 WHERE (LENGTH((t0.c0 IN ()))) GROUP BY t0.c2, t0.c1 UNION SELECT ALL t0.c2, t0.c1 FROM t0 FULL OUTER JOIN v0 ON t0.c1 WHERE ((NOT (LENGTH((t0.c0 IN ()))))) GROUP BY t0.c2, t0.c1 UNION SELECT ALL t0.c2, t0.c1 FROM t0 FULL OUTER JOIN v0 ON t0.c1 WHERE (((LENGTH((t0.c0 IN ()))) ISNULL)) GROUP BY t0.c2, t0.c1;
SELECT ALL t0.c2, t0.c1 FROM t0 FULL OUTER JOIN v0 ON t0.c1 GROUP BY t0.c2, t0.c1;
SELECT ALL t0.c2, t0.c1, t0.c0 FROM v0, t0 GROUP BY t0.c2, t0.c1, t0.c0;
SELECT ALL t0.c2, t0.c1, t0.c0 FROM v0, t0 GROUP BY t0.c2, t0.c1, t0.c0 HAVING ((v0.c0 COLLATE BINARY) NOT BETWEEN (((((t0.c1)OR(t0.c1)))AND(v0.c0))) AND (COUNT(*))) UNION ALL SELECT ALL t0.c2, t0.c1, t0.c0 FROM v0, t0 GROUP BY t0.c2, t0.c1, t0.c0 HAVING (NOT (((v0.c0 COLLATE BINARY) NOT BETWEEN (((((t0.c1)OR(t0.c1)))AND(v0.c0))) AND (COUNT(*))))) UNION ALL SELECT t0.c2, t0.c1, t0.c0 FROM v0, t0 GROUP BY t0.c2, t0.c1, t0.c0 HAVING ((((v0.c0 COLLATE BINARY) NOT BETWEEN (((((t0.c1)OR(t0.c1)))AND(v0.c0))) AND (COUNT(*)))) ISNULL);
SELECT ALL t0.c2, t0.c1, t0.c0 FROM v0, t0 GROUP BY t0.c2, t0.c1, t0.c0;
SELECT ALL t0.c2, t0.c1, t0.c0 FROM v0, t0 GROUP BY t0.c2, t0.c1, t0.c0 HAVING ((v0.c0 COLLATE BINARY) NOT BETWEEN (((((t0.c1)OR(t0.c1)))AND(v0.c0))) AND (COUNT(*))) UNION ALL SELECT ALL t0.c2, t0.c1, t0.c0 FROM v0, t0 GROUP BY t0.c2, t0.c1, t0.c0 HAVING (NOT (((v0.c0 COLLATE BINARY) NOT BETWEEN (((((t0.c1)OR(t0.c1)))AND(v0.c0))) AND (COUNT(*))))) UNION ALL SELECT t0.c2, t0.c1, t0.c0 FROM v0, t0 GROUP BY t0.c2, t0.c1, t0.c0 HAVING ((((v0.c0 COLLATE BINARY) NOT BETWEEN (((((t0.c1)OR(t0.c1)))AND(v0.c0))) AND (COUNT(*)))) ISNULL);
SELECT ALL t0.c2, t0.c1, t0.c0 FROM v0, t0 GROUP BY t0.c2, t0.c1, t0.c0;
SELECT ALL v0.c0 FROM v0;
SELECT v0.c0 FROM v0 WHERE (CASE WHEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) THEN v0.c0 WHEN UNLIKELY(DISTINCT v0.c0) THEN ((v0.c0)%(v0.c0)) WHEN CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN x'' THEN NULL WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END THEN v0.c0 COLLATE NOCASE ELSE ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) END) UNION ALL SELECT v0.c0 FROM v0 WHERE ((NOT (CASE WHEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) THEN v0.c0 WHEN UNLIKELY(DISTINCT v0.c0) THEN ((v0.c0)%(v0.c0)) WHEN CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN x'' THEN NULL WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END THEN v0.c0 COLLATE NOCASE ELSE ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) END))) UNION ALL SELECT v0.c0 FROM v0 WHERE (((CASE WHEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) THEN v0.c0 WHEN UNLIKELY(DISTINCT v0.c0) THEN ((v0.c0)%(v0.c0)) WHEN CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN x'' THEN NULL WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END THEN v0.c0 COLLATE NOCASE ELSE ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) END) ISNULL));
SELECT ALL v0.c0 FROM v0;
SELECT DISTINCT * FROM v0, t0;
SELECT DISTINCT * FROM v0, t0 WHERE (((t0.c0) BETWEEN (NULL) AND (v0.c0)) COLLATE RTRIM COLLATE NOCASE) UNION SELECT DISTINCT * FROM v0, t0 WHERE ((NOT (((t0.c0) BETWEEN (NULL) AND (v0.c0)) COLLATE RTRIM COLLATE NOCASE))) UNION SELECT DISTINCT * FROM v0, t0 WHERE (((((t0.c0) BETWEEN (NULL) AND (v0.c0)) COLLATE RTRIM COLLATE NOCASE) ISNULL));
SELECT DISTINCT * FROM v0, t0;
SELECT v0.c0, t0.c0, t0.c1, t0.c2 FROM t0 INNER JOIN v0 ON (+ (LTRIM(t0.c0))) GROUP BY v0.c0, t0.c0, t0.c1, t0.c2;
SELECT ALL v0.c0, t0.c0, t0.c1, t0.c2 FROM t0 INNER JOIN v0 ON (+ (LTRIM(t0.c0))) WHERE ((((t0.c1 IN ()))GLOB((((('\')OR('~ud')))AND(t0.c0))))) GROUP BY v0.c0, t0.c0, t0.c1, t0.c2 UNION SELECT v0.c0, t0.c0, t0.c1, t0.c2 FROM t0 INNER JOIN v0 ON (+ (LTRIM(t0.c0))) WHERE ((NOT ((((t0.c1 IN ()))GLOB((((('\')OR('~ud')))AND(t0.c0))))))) GROUP BY v0.c0, t0.c0, t0.c1, t0.c2 UNION SELECT ALL v0.c0, t0.c0, t0.c1, t0.c2 FROM t0 INNER JOIN v0 ON (+ (LTRIM(t0.c0))) WHERE ((((((t0.c1 IN ()))GLOB((((('\')OR('~ud')))AND(t0.c0))))) ISNULL)) GROUP BY v0.c0, t0.c0, t0.c1, t0.c2;
SELECT v0.c0, t0.c0, t0.c1, t0.c2 FROM t0 INNER JOIN v0 ON (+ (LTRIM(t0.c0))) GROUP BY v0.c0, t0.c0, t0.c1, t0.c2;
SELECT ALL v0.c0, t0.c2, t0.c0, t0.c1 FROM t0, v0 GROUP BY v0.c0, t0.c2, t0.c0, t0.c1;
SELECT v0.c0, t0.c2, t0.c0, t0.c1 FROM t0, v0 GROUP BY v0.c0, t0.c2, t0.c0, t0.c1 HAVING JULIANDAY(MAX(t0.c0), MIN(v0.c0), (SUM(v0.c0) IN (t0.c0, MIN(v0.c0)))) UNION ALL SELECT ALL v0.c0, t0.c2, t0.c0, t0.c1 FROM t0, v0 GROUP BY v0.c0, t0.c2, t0.c0, t0.c1 HAVING (NOT (JULIANDAY(MAX(t0.c0), MIN(v0.c0), (SUM(v0.c0) IN (t0.c0, MIN(v0.c0)))))) UNION ALL SELECT ALL v0.c0, t0.c2, t0.c0, t0.c1 FROM t0, v0 GROUP BY v0.c0, t0.c2, t0.c0, t0.c1 HAVING ((JULIANDAY(MAX(t0.c0), MIN(v0.c0), (SUM(v0.c0) IN (t0.c0, MIN(v0.c0))))) ISNULL);
SELECT ALL v0.c0, t0.c2, t0.c0, t0.c1 FROM t0, v0 GROUP BY v0.c0, t0.c2, t0.c0, t0.c1;
SELECT v0.c0, t0.c2, t0.c0, t0.c1 FROM t0, v0 GROUP BY v0.c0, t0.c2, t0.c0, t0.c1 HAVING JULIANDAY(MAX(t0.c0), MIN(v0.c0), (SUM(v0.c0) IN (t0.c0, MIN(v0.c0)))) UNION ALL SELECT ALL v0.c0, t0.c2, t0.c0, t0.c1 FROM t0, v0 GROUP BY v0.c0, t0.c2, t0.c0, t0.c1 HAVING (NOT (JULIANDAY(MAX(t0.c0), MIN(v0.c0), (SUM(v0.c0) IN (t0.c0, MIN(v0.c0)))))) UNION ALL SELECT ALL v0.c0, t0.c2, t0.c0, t0.c1 FROM t0, v0 GROUP BY v0.c0, t0.c2, t0.c0, t0.c1 HAVING ((JULIANDAY(MAX(t0.c0), MIN(v0.c0), (SUM(v0.c0) IN (t0.c0, MIN(v0.c0))))) ISNULL);
SELECT ALL v0.c0, t0.c2, t0.c0, t0.c1 FROM t0, v0 GROUP BY v0.c0, t0.c2, t0.c0, t0.c1;
SELECT t0.c2, t0.c1 FROM t0;
SELECT t0.c2, t0.c1 FROM t0 WHERE (IFNULL(DISTINCT t0.c1, ((t0.c0) IS TRUE))) UNION ALL SELECT ALL t0.c2, t0.c1 FROM t0 WHERE ((NOT (IFNULL(DISTINCT t0.c1, ((t0.c0) IS TRUE))))) UNION ALL SELECT t0.c2, t0.c1 FROM t0 WHERE (((IFNULL(DISTINCT t0.c1, ((t0.c0) IS TRUE))) ISNULL));
SELECT t0.c2, t0.c1 FROM t0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (((((((v0.c0)AND(v0.c0)))AND(v0.c0)))OR((- (v0.c0))))) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (((((((v0.c0)AND(v0.c0)))AND(v0.c0)))OR((- (v0.c0))))))) UNION SELECT DISTINCT * FROM v0 WHERE (((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))OR((- (v0.c0))))) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT t0.c0, t0.c1 FROM v0, t0 GROUP BY t0.c0, t0.c1;
SELECT ALL t0.c0, t0.c1 FROM v0, t0 WHERE (((- (t0.c1)) IN ())) GROUP BY t0.c0, t0.c1 UNION SELECT ALL t0.c0, t0.c1 FROM v0, t0 WHERE ((NOT (((- (t0.c1)) IN ())))) GROUP BY t0.c0, t0.c1 UNION SELECT t0.c0, t0.c1 FROM v0, t0 WHERE (((((- (t0.c1)) IN ())) ISNULL)) GROUP BY t0.c0, t0.c1;
SELECT t0.c0, t0.c1 FROM v0, t0 GROUP BY t0.c0, t0.c1;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING COUNT(AVG('f)HHbrG29')) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (COUNT(AVG('f)HHbrG29')))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((COUNT(AVG('f)HHbrG29'))) ISNULL);
SELECT ALL v0.c0 FROM v0;
SELECT ALL v0.c0 FROM v0 WHERE (ABS(CAST(v0.c0 AS NUMERIC))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE ((NOT (ABS(CAST(v0.c0 AS NUMERIC))))) UNION ALL SELECT v0.c0 FROM v0 WHERE (((ABS(CAST(v0.c0 AS NUMERIC))) ISNULL));
SELECT ALL v0.c0 FROM v0;
SELECT DISTINCT * FROM v0, t0;
SELECT DISTINCT * FROM v0, t0 WHERE (LAST_INSERT_ROWID()) UNION SELECT DISTINCT * FROM v0, t0 WHERE ((NOT (LAST_INSERT_ROWID()))) UNION SELECT DISTINCT * FROM v0, t0 WHERE (((LAST_INSERT_ROWID()) ISNULL));
SELECT DISTINCT * FROM v0, t0;
SELECT v0.c0 FROM t0, v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM t0, v0 WHERE (ROUND(((t0.c0) NOT BETWEEN (v0.c0) AND (t0.c2)), (v0.c0 IN ()))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM t0, v0 WHERE ((NOT (ROUND(((t0.c0) NOT BETWEEN (v0.c0) AND (t0.c2)), (v0.c0 IN ()))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM t0, v0 WHERE (((ROUND(((t0.c0) NOT BETWEEN (v0.c0) AND (t0.c2)), (v0.c0 IN ()))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM t0, v0 GROUP BY v0.c0;
SELECT t0.c0 FROM t0, v0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0, v0 GROUP BY t0.c0 HAVING MIN(((('aC-Z\s~Lm', t0.c0, GROUP_CONCAT(TOTAL(MAX(t0.c2))))) NOT BETWEEN ((t0.c2, t0.c2, -1122979191)) AND ((GROUP_CONCAT(AVG(MAX(COUNT(*)))), t0.c1, t0.c1)))) UNION ALL SELECT t0.c0 FROM t0, v0 GROUP BY t0.c0 HAVING (NOT (MIN(((('aC-Z\s~Lm', t0.c0, GROUP_CONCAT(TOTAL(MAX(t0.c2))))) NOT BETWEEN ((t0.c2, t0.c2, -1122979191)) AND ((GROUP_CONCAT(AVG(MAX(COUNT(*)))), t0.c1, t0.c1)))))) UNION ALL SELECT t0.c0 FROM t0, v0 GROUP BY t0.c0 HAVING ((MIN(((('aC-Z\s~Lm', t0.c0, GROUP_CONCAT(TOTAL(MAX(t0.c2))))) NOT BETWEEN ((t0.c2, t0.c2, -1122979191)) AND ((GROUP_CONCAT(AVG(MAX(COUNT(*)))), t0.c1, t0.c1))))) ISNULL);
SELECT ALL * FROM v0;
SELECT ALL * FROM v0 WHERE (((CASE WHEN v0.c0 THEN v0.c0 END) BETWEEN (CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END) AND (NULL))) UNION ALL SELECT * FROM v0 WHERE ((NOT (((CASE WHEN v0.c0 THEN v0.c0 END) BETWEEN (CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END) AND (NULL))))) UNION ALL SELECT * FROM v0 WHERE (((((CASE WHEN v0.c0 THEN v0.c0 END) BETWEEN (CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END) AND (NULL))) ISNULL));
SELECT ALL * FROM v0;
SELECT DISTINCT * FROM v0 NATURAL JOIN t0;
SELECT DISTINCT * FROM v0 NATURAL JOIN t0 WHERE ((((+ (t0.c1))) IS TRUE)) UNION SELECT DISTINCT * FROM v0 NATURAL JOIN t0 WHERE ((NOT ((((+ (t0.c1))) IS TRUE)))) UNION SELECT DISTINCT * FROM v0 NATURAL JOIN t0 WHERE ((((((+ (t0.c1))) IS TRUE)) ISNULL));
SELECT DISTINCT * FROM v0 NATURAL JOIN t0;
SELECT ALL v0.c0, t0.c0, t0.c2, t0.c1 FROM t0, v0 GROUP BY v0.c0, t0.c0, t0.c2, t0.c1;
SELECT ALL v0.c0, t0.c0, t0.c2, t0.c1 FROM t0, v0 WHERE ((NOT ((t0.c0 IN (t0.c1))))) GROUP BY v0.c0, t0.c0, t0.c2, t0.c1 UNION SELECT v0.c0, t0.c0, t0.c2, t0.c1 FROM t0, v0 WHERE ((NOT ((NOT ((t0.c0 IN (t0.c1))))))) GROUP BY v0.c0, t0.c0, t0.c2, t0.c1 UNION SELECT ALL v0.c0, t0.c0, t0.c2, t0.c1 FROM t0, v0 WHERE ((((NOT ((t0.c0 IN (t0.c1))))) ISNULL)) GROUP BY v0.c0, t0.c0, t0.c2, t0.c1;
SELECT ALL v0.c0, t0.c0, t0.c2, t0.c1 FROM t0, v0 GROUP BY v0.c0, t0.c0, t0.c2, t0.c1;
SELECT v0.c0, t0.c1, t0.c0, t0.c2 FROM t0, v0 GROUP BY v0.c0, t0.c1, t0.c0, t0.c2;
SELECT ALL v0.c0, t0.c1, t0.c0, t0.c2 FROM t0, v0 GROUP BY v0.c0, t0.c1, t0.c0, t0.c2 HAVING ((((((MAX(t0.c2))OR(t0.c0)))OR(-9.92443122E8)))IS NOT(MIN(MIN(AVG(t0.c0))))) UNION ALL SELECT v0.c0, t0.c1, t0.c0, t0.c2 FROM t0, v0 GROUP BY v0.c0, t0.c1, t0.c0, t0.c2 HAVING (NOT (((((((MAX(t0.c2))OR(t0.c0)))OR(-9.92443122E8)))IS NOT(MIN(MIN(AVG(t0.c0))))))) UNION ALL SELECT ALL v0.c0, t0.c1, t0.c0, t0.c2 FROM t0, v0 GROUP BY v0.c0, t0.c1, t0.c0, t0.c2 HAVING ((((((((MAX(t0.c2))OR(t0.c0)))OR(-9.92443122E8)))IS NOT(MIN(MIN(AVG(t0.c0)))))) ISNULL);
SELECT ALL * FROM t0;
SELECT * FROM t0 WHERE (TYPEOF(CASE t0.c2  WHEN t0.c0 THEN t0.c0 WHEN t0.c1 THEN t0.c2 WHEN t0.c1 THEN t0.c0 ELSE t0.c2 END)) UNION ALL SELECT ALL * FROM t0 WHERE ((NOT (TYPEOF(CASE t0.c2  WHEN t0.c0 THEN t0.c0 WHEN t0.c1 THEN t0.c2 WHEN t0.c1 THEN t0.c0 ELSE t0.c2 END)))) UNION ALL SELECT * FROM t0 WHERE (((TYPEOF(CASE t0.c2  WHEN t0.c0 THEN t0.c0 WHEN t0.c1 THEN t0.c2 WHEN t0.c1 THEN t0.c0 ELSE t0.c2 END)) ISNULL));
SELECT ALL * FROM t0;
SELECT DISTINCT * FROM v0, t0;
SELECT DISTINCT * FROM v0, t0 WHERE (((v0.c0 COLLATE RTRIM)>=(CASE t0.c2  WHEN t0.c1 THEN t0.c2 ELSE t0.c1 END))) UNION SELECT DISTINCT * FROM v0, t0 WHERE ((NOT (((v0.c0 COLLATE RTRIM)>=(CASE t0.c2  WHEN t0.c1 THEN t0.c2 ELSE t0.c1 END))))) UNION SELECT DISTINCT * FROM v0, t0 WHERE (((((v0.c0 COLLATE RTRIM)>=(CASE t0.c2  WHEN t0.c1 THEN t0.c2 ELSE t0.c1 END))) ISNULL));
SELECT DISTINCT * FROM v0, t0;
SELECT ALL v0.c0, t0.c2, t0.c0 FROM t0, v0 GROUP BY v0.c0, t0.c2, t0.c0;
SELECT ALL v0.c0, t0.c2, t0.c0 FROM t0, v0 WHERE (((((t0.c2)-(t0.c1)))<<(((x'') IS FALSE)))) GROUP BY v0.c0, t0.c2, t0.c0 UNION SELECT ALL v0.c0, t0.c2, t0.c0 FROM t0, v0 WHERE ((NOT (((((t0.c2)-(t0.c1)))<<(((x'') IS FALSE)))))) GROUP BY v0.c0, t0.c2, t0.c0 UNION SELECT ALL v0.c0, t0.c2, t0.c0 FROM t0, v0 WHERE (((((((t0.c2)-(t0.c1)))<<(((x'') IS FALSE)))) ISNULL)) GROUP BY v0.c0, t0.c2, t0.c0;
SELECT ALL v0.c0, t0.c2, t0.c0 FROM t0, v0 GROUP BY v0.c0, t0.c2, t0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((GROUP_CONCAT(MIN(TOTAL(MAX(AVG(v0.c0))))))>=(((((((((MIN(SUM(v0.c0)))AND(v0.c0)))OR(v0.c0)))AND(AVG(COUNT(*)))))OR(SUM(v0.c0))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (((GROUP_CONCAT(MIN(TOTAL(MAX(AVG(v0.c0))))))>=(((((((((MIN(SUM(v0.c0)))AND(v0.c0)))OR(v0.c0)))AND(AVG(COUNT(*)))))OR(SUM(v0.c0))))))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((((GROUP_CONCAT(MIN(TOTAL(MAX(AVG(v0.c0))))))>=(((((((((MIN(SUM(v0.c0)))AND(v0.c0)))OR(v0.c0)))AND(AVG(COUNT(*)))))OR(SUM(v0.c0)))))) ISNULL);
SELECT ALL t0.c0, t0.c2, t0.c1 FROM t0, v0;
SELECT t0.c0, t0.c2, t0.c1 FROM t0, v0 WHERE (((t0.c0 COLLATE RTRIM)<=(((t0.c0) BETWEEN (v0.c0) AND (t0.c1))))) UNION ALL SELECT t0.c0, t0.c2, t0.c1 FROM t0, v0 WHERE ((NOT (((t0.c0 COLLATE RTRIM)<=(((t0.c0) BETWEEN (v0.c0) AND (t0.c1))))))) UNION ALL SELECT ALL t0.c0, t0.c2, t0.c1 FROM t0, v0 WHERE (((((t0.c0 COLLATE RTRIM)<=(((t0.c0) BETWEEN (v0.c0) AND (t0.c1))))) ISNULL));
SELECT ALL t0.c0, t0.c2, t0.c1 FROM t0, v0;
SELECT DISTINCT t0.c2 FROM t0;
SELECT DISTINCT t0.c2 FROM t0 WHERE ((CASE t0.c1  WHEN t0.c1 THEN t0.c1 END IN ())) UNION SELECT DISTINCT t0.c2 FROM t0 WHERE ((NOT ((CASE t0.c1  WHEN t0.c1 THEN t0.c1 END IN ())))) UNION SELECT DISTINCT t0.c2 FROM t0 WHERE ((((CASE t0.c1  WHEN t0.c1 THEN t0.c1 END IN ())) ISNULL));
SELECT DISTINCT t0.c2 FROM t0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 NOT INDEXED WHERE (((0.9115431076872973) NOT NULL)) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (((0.9115431076872973) NOT NULL)))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE (((((0.9115431076872973) NOT NULL)) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL t0.c0, v0.c0, t0.c1 FROM v0 INNER JOIN t0 ON (t0.c2 IN ()) GROUP BY t0.c0, v0.c0, t0.c1;
SELECT ALL t0.c0, v0.c0, t0.c1 FROM v0 INNER JOIN t0 ON (t0.c2 IN ()) GROUP BY t0.c0, v0.c0, t0.c1 HAVING GROUP_CONCAT(GROUP_CONCAT(MAX(AVG(SUM(COUNT(*)))))) UNION ALL SELECT ALL t0.c0, v0.c0, t0.c1 FROM v0 INNER JOIN t0 ON (t0.c2 IN ()) GROUP BY t0.c0, v0.c0, t0.c1 HAVING (NOT (GROUP_CONCAT(GROUP_CONCAT(MAX(AVG(SUM(COUNT(*)))))))) UNION ALL SELECT ALL t0.c0, v0.c0, t0.c1 FROM v0 INNER JOIN t0 ON (t0.c2 IN ()) GROUP BY t0.c0, v0.c0, t0.c1 HAVING ((GROUP_CONCAT(GROUP_CONCAT(MAX(AVG(SUM(COUNT(*))))))) ISNULL);
SELECT ALL t0.c2 FROM t0;
SELECT t0.c2 FROM t0 WHERE ((((((((((((t0.c1, t0.c1, t0.c2)) NOT BETWEEN ((t0.c1, x'', 0.8256222861854094)) AND ((t0.c2, '1967257691', t0.c0))))AND(DATE(t0.c2, t0.c2, t0.c1))))AND(((t0.c1) BETWEEN (t0.c1) AND (t0.c2)))))AND(((t0.c0) NOT BETWEEN (t0.c2) AND (t0.c1)))))OR(CASE t0.c2  WHEN t0.c1 THEN t0.c1 END))) UNION ALL SELECT ALL t0.c2 FROM t0 WHERE ((NOT ((((((((((((t0.c1, t0.c1, t0.c2)) NOT BETWEEN ((t0.c1, x'', 0.8256222861854094)) AND ((t0.c2, '1967257691', t0.c0))))AND(DATE(t0.c2, t0.c2, t0.c1))))AND(((t0.c1) BETWEEN (t0.c1) AND (t0.c2)))))AND(((t0.c0) NOT BETWEEN (t0.c2) AND (t0.c1)))))OR(CASE t0.c2  WHEN t0.c1 THEN t0.c1 END))))) UNION ALL SELECT t0.c2 FROM t0 WHERE ((((((((((((((t0.c1, t0.c1, t0.c2)) NOT BETWEEN ((t0.c1, x'', 0.8256222861854094)) AND ((t0.c2, '1967257691', t0.c0))))AND(DATE(t0.c2, t0.c2, t0.c1))))AND(((t0.c1) BETWEEN (t0.c1) AND (t0.c2)))))AND(((t0.c0) NOT BETWEEN (t0.c2) AND (t0.c1)))))OR(CASE t0.c2  WHEN t0.c1 THEN t0.c1 END))) ISNULL));
SELECT ALL t0.c2 FROM t0;
SELECT DISTINCT * FROM v0 NATURAL JOIN t0;
SELECT DISTINCT * FROM v0 NATURAL JOIN t0 WHERE (CASE (('638753464')<<(v0.c0))  WHEN (((('')AND(t0.c1)))OR(v0.c0)) THEN TRIM(DISTINCT t0.c0, t0.c1) ELSE ((v0.c0)IS(t0.c1)) END) UNION SELECT DISTINCT * FROM v0 NATURAL JOIN t0 WHERE ((NOT (CASE (('638753464')<<(v0.c0))  WHEN (((('')AND(t0.c1)))OR(v0.c0)) THEN TRIM(DISTINCT t0.c0, t0.c1) ELSE ((v0.c0)IS(t0.c1)) END))) UNION SELECT DISTINCT * FROM v0 NATURAL JOIN t0 WHERE (((CASE (('638753464')<<(v0.c0))  WHEN (((('')AND(t0.c1)))OR(v0.c0)) THEN TRIM(DISTINCT t0.c0, t0.c1) ELSE ((v0.c0)IS(t0.c1)) END) ISNULL));
SELECT DISTINCT * FROM v0 NATURAL JOIN t0;
SELECT ALL t0.c0 FROM v0, t0 GROUP BY t0.c0;
SELECT t0.c0 FROM v0, t0 WHERE (((((((v0.c0)AND(t0.c2)))OR(t0.c0))) IS TRUE)) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM v0, t0 WHERE ((NOT (((((((v0.c0)AND(t0.c2)))OR(t0.c0))) IS TRUE)))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM v0, t0 WHERE (((((((((v0.c0)AND(t0.c2)))OR(t0.c0))) IS TRUE)) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM v0, t0 GROUP BY t0.c0;
SELECT ALL t0.c2 FROM t0 GROUP BY t0.c2;
SELECT ALL t0.c2 FROM t0 GROUP BY t0.c2 HAVING TOTAL(CASE MAX(COUNT(*))  WHEN t0.c1 THEN t0.c1 END) UNION ALL SELECT ALL t0.c2 FROM t0 GROUP BY t0.c2 HAVING (NOT (TOTAL(CASE MAX(COUNT(*))  WHEN t0.c1 THEN t0.c1 END))) UNION ALL SELECT t0.c2 FROM t0 GROUP BY t0.c2 HAVING ((TOTAL(CASE MAX(COUNT(*))  WHEN t0.c1 THEN t0.c1 END)) ISNULL);
SELECT ALL v0.c0 FROM v0;
SELECT v0.c0 FROM v0 WHERE (((CASE WHEN v0.c0 THEN '' WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)>=('0.7302984026337527'))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE ((NOT (((CASE WHEN v0.c0 THEN '' WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)>=('0.7302984026337527'))))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE (((((CASE WHEN v0.c0 THEN '' WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)>=('0.7302984026337527'))) ISNULL));
SELECT ALL v0.c0 FROM v0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (t0.c1) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (t0.c1))) UNION SELECT DISTINCT * FROM t0 WHERE (((t0.c1) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE ((- (v0.c0)) COLLATE BINARY) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT ((- (v0.c0)) COLLATE BINARY))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((((- (v0.c0)) COLLATE BINARY) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING COUNT(*) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING COUNT(*) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT * FROM t0, v0;
SELECT ALL * FROM t0, v0 WHERE (CASE ((((((((v0.c0)OR(v0.c0)))AND('ZY-][9ӑ0B')))OR(t0.c2)))OR(t0.c1))  WHEN ((v0.c0) IS FALSE) THEN ((((((((t0.c0)OR(t0.c1)))OR(t0.c0)))OR(v0.c0)))AND(t0.c1)) ELSE t0.c0 COLLATE BINARY END) UNION ALL SELECT * FROM t0, v0 WHERE ((NOT (CASE ((((((((v0.c0)OR(v0.c0)))AND('ZY-][9ӑ0B')))OR(t0.c2)))OR(t0.c1))  WHEN ((v0.c0) IS FALSE) THEN ((((((((t0.c0)OR(t0.c1)))OR(t0.c0)))OR(v0.c0)))AND(t0.c1)) ELSE t0.c0 COLLATE BINARY END))) UNION ALL SELECT ALL * FROM t0, v0 WHERE (((CASE ((((((((v0.c0)OR(v0.c0)))AND('ZY-][9ӑ0B')))OR(t0.c2)))OR(t0.c1))  WHEN ((v0.c0) IS FALSE) THEN ((((((((t0.c0)OR(t0.c1)))OR(t0.c0)))OR(v0.c0)))AND(t0.c1)) ELSE t0.c0 COLLATE BINARY END) ISNULL));
SELECT * FROM t0, v0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (((((t0.c1)AND(((t0.c2)+(t0.c0)))))AND(t0.c2))) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (((((t0.c1)AND(((t0.c2)+(t0.c0)))))AND(t0.c2))))) UNION SELECT DISTINCT * FROM t0 WHERE (((((((t0.c1)AND(((t0.c2)+(t0.c0)))))AND(t0.c2))) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT t0.c1, t0.c0 FROM t0 GROUP BY t0.c1, t0.c0;
SELECT ALL t0.c1, t0.c0 FROM t0 WHERE (CAST(((t0.c0) IS FALSE) AS NUMERIC)) GROUP BY t0.c1, t0.c0 UNION SELECT ALL t0.c1, t0.c0 FROM t0 WHERE ((NOT (CAST(((t0.c0) IS FALSE) AS NUMERIC)))) GROUP BY t0.c1, t0.c0 UNION SELECT t0.c1, t0.c0 FROM t0 WHERE (((CAST(((t0.c0) IS FALSE) AS NUMERIC)) ISNULL)) GROUP BY t0.c1, t0.c0;
SELECT t0.c1, t0.c0 FROM t0 GROUP BY t0.c1, t0.c0;
SELECT ALL t0.c1, t0.c2 FROM v0, t0 GROUP BY t0.c1, t0.c2;
SELECT t0.c1, t0.c2 FROM v0, t0 GROUP BY t0.c1, t0.c2 HAVING COUNT(*) UNION ALL SELECT t0.c1, t0.c2 FROM v0, t0 GROUP BY t0.c1, t0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL t0.c1, t0.c2 FROM v0, t0 GROUP BY t0.c1, t0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT ALL t0.c1, t0.c2 FROM v0, t0 GROUP BY t0.c1, t0.c2;
SELECT t0.c1, t0.c2 FROM v0, t0 GROUP BY t0.c1, t0.c2 HAVING COUNT(*) UNION ALL SELECT t0.c1, t0.c2 FROM v0, t0 GROUP BY t0.c1, t0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL t0.c1, t0.c2 FROM v0, t0 GROUP BY t0.c1, t0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT ALL t0.c1, t0.c2 FROM v0, t0 GROUP BY t0.c1, t0.c2;
SELECT ALL MAX(CAST(CASE WHEN t0.c2 THEN t0.c0 WHEN v0.c0 THEN t0.c1 WHEN 0x44212f01 THEN t0.c1 END AS INTEGER)) FROM t0, v0 ORDER BY ((x'') NOT BETWEEN (('1921211574' IN (t0.c2))) AND ((NOT (NULL)))) DESC  NULLS FIRST;
SELECT ALL t0.c0, t0.c2 FROM t0, v0;
SELECT t0.c0, t0.c2 FROM t0, v0 WHERE (((((((t0.c1)AND(t0.c2)))AND(t0.c1))) NOTNULL)) UNION ALL SELECT ALL t0.c0, t0.c2 FROM t0, v0 WHERE ((NOT (((((((t0.c1)AND(t0.c2)))AND(t0.c1))) NOTNULL)))) UNION ALL SELECT ALL t0.c0, t0.c2 FROM t0, v0 WHERE (((((((((t0.c1)AND(t0.c2)))AND(t0.c1))) NOTNULL)) ISNULL));
SELECT ALL t0.c0, t0.c2 FROM t0, v0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (x'3f6d') UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (x'3f6d'))) UNION SELECT DISTINCT * FROM v0 WHERE (((x'3f6d') ISNULL));
SELECT DISTINCT * FROM v0;
SELECT t0.c2, t0.c1, v0.c0 FROM t0, v0 GROUP BY t0.c2, t0.c1, v0.c0;
SELECT t0.c2, t0.c1, v0.c0 FROM t0, v0 WHERE ((((~ (t0.c0))) IS TRUE)) GROUP BY t0.c2, t0.c1, v0.c0 UNION SELECT ALL t0.c2, t0.c1, v0.c0 FROM t0, v0 WHERE ((NOT ((((~ (t0.c0))) IS TRUE)))) GROUP BY t0.c2, t0.c1, v0.c0 UNION SELECT ALL t0.c2, t0.c1, v0.c0 FROM t0, v0 WHERE ((((((~ (t0.c0))) IS TRUE)) ISNULL)) GROUP BY t0.c2, t0.c1, v0.c0;
SELECT t0.c2, t0.c1, v0.c0 FROM t0, v0 GROUP BY t0.c2, t0.c1, v0.c0;
SELECT ALL t0.c2, v0.c0, t0.c1 FROM t0 NATURAL JOIN v0 GROUP BY t0.c2, v0.c0, t0.c1;
SELECT ALL t0.c2, v0.c0, t0.c1 FROM t0 NATURAL JOIN v0 GROUP BY t0.c2, v0.c0, t0.c1 HAVING COUNT(COUNT(*)) UNION ALL SELECT t0.c2, v0.c0, t0.c1 FROM t0 NATURAL JOIN v0 GROUP BY t0.c2, v0.c0, t0.c1 HAVING (NOT (COUNT(COUNT(*)))) UNION ALL SELECT ALL t0.c2, v0.c0, t0.c1 FROM t0 NATURAL JOIN v0 GROUP BY t0.c2, v0.c0, t0.c1 HAVING ((COUNT(COUNT(*))) ISNULL);
SELECT ALL SUM(CAST((((t0.c0, t0.c0, t0.c1))!=((t0.c0, t0.c1, t0.c2))) AS BLOB)) FROM t0;
SELECT * FROM t0, v0;
SELECT ALL * FROM t0, v0 WHERE (((((((t0.c0, 0.8718907340867325, t0.c2))>=((t0.c2, t0.c1, x'')))))==(((+ (t0.c0)))))) UNION ALL SELECT ALL * FROM t0, v0 WHERE ((NOT (((((((t0.c0, 0.8718907340867325, t0.c2))>=((t0.c2, t0.c1, x'')))))=(((+ (t0.c0)))))))) UNION ALL SELECT * FROM t0, v0 WHERE (((((((((t0.c0, 0.8718907340867325, t0.c2))>=((t0.c2, t0.c1, x'')))))=(((+ (t0.c0)))))) ISNULL));
SELECT * FROM t0, v0;
SELECT DISTINCT * FROM t0, v0;
SELECT DISTINCT * FROM t0, v0 WHERE ((~ ((((t0.c0))>((t0.c2)))))) UNION SELECT DISTINCT * FROM t0, v0 WHERE ((NOT ((~ ((((t0.c0))>((t0.c2)))))))) UNION SELECT DISTINCT * FROM t0, v0 WHERE ((((~ ((((t0.c0))>((t0.c2)))))) ISNULL));
SELECT DISTINCT * FROM t0, v0;
SELECT t0.c2, t0.c0, t0.c1 FROM t0 GROUP BY t0.c2, t0.c0, t0.c1;
SELECT ALL t0.c2, t0.c0, t0.c1 FROM t0 WHERE (((x'') IS TRUE)) GROUP BY t0.c2, t0.c0, t0.c1 UNION SELECT t0.c2, t0.c0, t0.c1 FROM t0 WHERE ((NOT (((x'') IS TRUE)))) GROUP BY t0.c2, t0.c0, t0.c1 UNION SELECT ALL t0.c2, t0.c0, t0.c1 FROM t0 WHERE (((((x'') IS TRUE)) ISNULL)) GROUP BY t0.c2, t0.c0, t0.c1;
SELECT t0.c2, t0.c0, t0.c1 FROM t0 GROUP BY t0.c2, t0.c0, t0.c1;
SELECT t0.c0, t0.c2 FROM t0 GROUP BY t0.c0, t0.c2;
SELECT ALL t0.c0, t0.c2 FROM t0 GROUP BY t0.c0, t0.c2 HAVING t0.c0 UNION ALL SELECT ALL t0.c0, t0.c2 FROM t0 GROUP BY t0.c0, t0.c2 HAVING (NOT (t0.c0)) UNION ALL SELECT ALL t0.c0, t0.c2 FROM t0 NOT INDEXED GROUP BY t0.c0, t0.c2 HAVING ((t0.c0) ISNULL);
SELECT t0.c0, t0.c2 FROM t0 GROUP BY t0.c0, t0.c2;
SELECT ALL t0.c0, t0.c2 FROM t0 GROUP BY t0.c0, t0.c2 HAVING t0.c0 UNION ALL SELECT ALL t0.c0, t0.c2 FROM t0 GROUP BY t0.c0, t0.c2 HAVING (NOT (t0.c0)) UNION ALL SELECT ALL t0.c0, t0.c2 FROM t0 NOT INDEXED GROUP BY t0.c0, t0.c2 HAVING ((t0.c0) ISNULL);
SELECT t0.c0, t0.c2 FROM t0 GROUP BY t0.c0, t0.c2;
SELECT t0.c1, t0.c0, v0.c0, t0.c2 FROM t0 RIGHT OUTER JOIN v0 ON CAST(v0.c0 COLLATE BINARY AS NUMERIC);
SELECT t0.c1, t0.c0, v0.c0, t0.c2 FROM t0 RIGHT OUTER JOIN v0 ON CAST(v0.c0 COLLATE BINARY AS NUMERIC) WHERE ((((((t0.c0)) NOT BETWEEN ((t0.c2)) AND ((t0.c1))))AND((((t0.c1, t0.c1, t0.c0))<((t0.c2, t0.c0, v0.c0)))))) UNION ALL SELECT ALL t0.c1, t0.c0, v0.c0, t0.c2 FROM t0 RIGHT OUTER JOIN v0 ON CAST(v0.c0 COLLATE BINARY AS NUMERIC) WHERE ((NOT ((((((t0.c0)) NOT BETWEEN ((t0.c2)) AND ((t0.c1))))AND((((t0.c1, t0.c1, t0.c0))<((t0.c2, t0.c0, v0.c0)))))))) UNION ALL SELECT t0.c1, t0.c0, v0.c0, t0.c2 FROM t0 RIGHT OUTER JOIN v0 ON CAST(v0.c0 COLLATE BINARY AS NUMERIC) WHERE ((((((((t0.c0)) NOT BETWEEN ((t0.c2)) AND ((t0.c1))))AND((((t0.c1, t0.c1, t0.c0))<((t0.c2, t0.c0, v0.c0)))))) ISNULL));
SELECT t0.c1, t0.c0, v0.c0, t0.c2 FROM t0 RIGHT OUTER JOIN v0 ON CAST(v0.c0 COLLATE BINARY AS NUMERIC);
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (x'') UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (x''))) UNION SELECT DISTINCT * FROM t0 WHERE (((x'') ISNULL));
SELECT DISTINCT * FROM t0;
SELECT t0.c0, t0.c1 FROM t0, v0 GROUP BY t0.c0, t0.c1;
SELECT t0.c0, t0.c1 FROM t0, v0 WHERE (IFNULL(DISTINCT 0X2cf2bbec, (((t0.c2, v0.c0, 0xffffffffe4d238ae))=((t0.c1, NULL, t0.c1))))) GROUP BY t0.c0, t0.c1 UNION SELECT t0.c0, t0.c1 FROM t0, v0 WHERE ((NOT (IFNULL(DISTINCT 0x2cf2bbec, (((t0.c2, v0.c0, 0Xffffffffe4d238ae))==((t0.c1, NULL, t0.c1))))))) GROUP BY t0.c0, t0.c1 UNION SELECT ALL t0.c0, t0.c1 FROM t0, v0 WHERE (((IFNULL(DISTINCT 0X2cf2bbec, (((t0.c2, v0.c0, 0Xffffffffe4d238ae))=((t0.c1, NULL, t0.c1))))) ISNULL)) GROUP BY t0.c0, t0.c1;
SELECT t0.c0, t0.c1 FROM t0, v0 GROUP BY t0.c0, t0.c1;
SELECT ALL t0.c2, t0.c1 FROM t0, v0 GROUP BY t0.c2, t0.c1;
SELECT t0.c2, t0.c1 FROM t0, v0 GROUP BY t0.c2, t0.c1 HAVING MAX(COUNT(t0.c2)) UNION ALL SELECT t0.c2, t0.c1 FROM t0, v0 GROUP BY t0.c2, t0.c1 HAVING (NOT (MAX(COUNT(t0.c2)))) UNION ALL SELECT ALL t0.c2, t0.c1 FROM t0, v0 GROUP BY t0.c2, t0.c1 HAVING ((MAX(COUNT(t0.c2))) ISNULL);
SELECT v0.c0 FROM v0;
SELECT v0.c0 FROM v0 WHERE (((((v0.c0)||(v0.c0))) NOT BETWEEN (NULLIF(v0.c0, x'fbb1')) AND ((((v0.c0))>=((v0.c0)))))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE ((NOT (((((v0.c0)||(v0.c0))) NOT BETWEEN (NULLIF(v0.c0, x'fbb1')) AND ((((v0.c0))>=((v0.c0)))))))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE (((((((v0.c0)||(v0.c0))) NOT BETWEEN (NULLIF(v0.c0, x'fbb1')) AND ((((v0.c0))>=((v0.c0)))))) ISNULL));
SELECT v0.c0 FROM v0;
SELECT DISTINCT * FROM t0, v0;
SELECT DISTINCT * FROM t0, v0 NOT INDEXED WHERE ((('') IS FALSE)) UNION SELECT DISTINCT * FROM t0, v0 WHERE ((NOT ((('') IS FALSE)))) UNION SELECT DISTINCT * FROM t0, v0 WHERE ((((('') IS FALSE)) ISNULL));
SELECT DISTINCT * FROM t0, v0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE ('-894407260') GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT ('-894407260'))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((('-894407260') ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL t0.c1, v0.c0, t0.c2, t0.c0 FROM t0, v0 GROUP BY t0.c1, v0.c0, t0.c2, t0.c0;
SELECT ALL t0.c1, v0.c0, t0.c2, t0.c0 FROM t0, v0 GROUP BY t0.c1, v0.c0, t0.c2, t0.c0 HAVING TOTAL(SUM(t0.c0)) UNION ALL SELECT ALL t0.c1, v0.c0, t0.c2, t0.c0 FROM t0, v0 GROUP BY t0.c1, v0.c0, t0.c2, t0.c0 HAVING (NOT (TOTAL(SUM(t0.c0)))) UNION ALL SELECT ALL t0.c1, v0.c0, t0.c2, t0.c0 FROM t0, v0 GROUP BY t0.c1, v0.c0, t0.c2, t0.c0 HAVING ((TOTAL(SUM(t0.c0))) ISNULL);
SELECT t0.c0 FROM t0, v0;
SELECT t0.c0 FROM t0, v0 WHERE (CASE CAST(v0.c0 AS INTEGER)  WHEN CAST(v0.c0 AS BLOB) THEN ((t0.c2) NOT BETWEEN (t0.c2) AND (0.006197212930909912)) ELSE ((t0.c1) IS FALSE) END) UNION ALL SELECT t0.c0 FROM t0, v0 WHERE ((NOT (CASE CAST(v0.c0 AS INTEGER)  WHEN CAST(v0.c0 AS BLOB) THEN ((t0.c2) NOT BETWEEN (t0.c2) AND (0.006197212930909912)) ELSE ((t0.c1) IS FALSE) END))) UNION ALL SELECT t0.c0 FROM t0, v0 WHERE (((CASE CAST(v0.c0 AS INTEGER)  WHEN CAST(v0.c0 AS BLOB) THEN ((t0.c2) NOT BETWEEN (t0.c2) AND (0.006197212930909912)) ELSE ((t0.c1) IS FALSE) END) ISNULL));
SELECT t0.c0 FROM t0, v0;
SELECT DISTINCT * FROM t0, v0;
SELECT DISTINCT * FROM t0, v0 WHERE (0.9988561260023632) UNION SELECT DISTINCT * FROM t0, v0 WHERE ((NOT (0.9988561260023632))) UNION SELECT DISTINCT * FROM t0, v0 WHERE (((0.9988561260023632) ISNULL));
SELECT DISTINCT * FROM t0, v0;
SELECT t0.c0, v0.c0, t0.c1 FROM t0 CROSS JOIN v0 ON (CAST(t0.c0 AS INTEGER) IN ()) GROUP BY t0.c0, v0.c0, t0.c1;
SELECT t0.c0, v0.c0, t0.c1 FROM t0 CROSS JOIN v0 ON (CAST(t0.c0 AS INTEGER) IN ()) WHERE (t0.c1) GROUP BY t0.c0, v0.c0, t0.c1 UNION SELECT ALL t0.c0, v0.c0, t0.c1 FROM t0 CROSS JOIN v0 ON (CAST(t0.c0 AS INTEGER) IN ()) WHERE ((NOT (t0.c1))) GROUP BY t0.c0, v0.c0, t0.c1 UNION SELECT ALL t0.c0, v0.c0, t0.c1 FROM t0 CROSS JOIN v0 ON (CAST(t0.c0 AS INTEGER) IN ()) WHERE (((t0.c1) ISNULL)) GROUP BY t0.c0, v0.c0, t0.c1;
SELECT t0.c0, v0.c0, t0.c1 FROM t0 CROSS JOIN v0 ON (CAST(t0.c0 AS INTEGER) IN ()) GROUP BY t0.c0, v0.c0, t0.c1;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((((((((COUNT(*))OR(((v0.c0)&(x'')))))OR((+ (MIN(MAX(x'')))))))AND(SUM(SUM(MAX(v0.c0))))))OR(MAX(SUM(GROUP_CONCAT(v0.c0))) COLLATE RTRIM)) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (((((((((COUNT(*))OR(((v0.c0)&(x'')))))OR((+ (MIN(MAX(x'')))))))AND(SUM(SUM(MAX(v0.c0))))))OR(MAX(SUM(GROUP_CONCAT(v0.c0))) COLLATE RTRIM)))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((((((((((COUNT(*))OR(((v0.c0)&(x'')))))OR((+ (MIN(MAX(x'')))))))AND(SUM(SUM(MAX(v0.c0))))))OR(MAX(SUM(GROUP_CONCAT(v0.c0))) COLLATE RTRIM))) ISNULL);
SELECT ALL v0.c0 FROM v0;
SELECT v0.c0 FROM v0 WHERE (((((((((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))OR(((v0.c0)>>(NULL)))))OR(((v0.c0)||(v0.c0)))))AND(((((v0.c0)OR(v0.c0)))OR(v0.c0)))))OR(TRIM(v0.c0, v0.c0)))) UNION ALL SELECT v0.c0 FROM v0 WHERE ((NOT (((((((((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))OR(((v0.c0)>>(NULL)))))OR(((v0.c0)||(v0.c0)))))AND(((((v0.c0)OR(v0.c0)))OR(v0.c0)))))OR(TRIM(v0.c0, v0.c0)))))) UNION ALL SELECT v0.c0 FROM v0 WHERE (((((((((((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))OR(((v0.c0)>>(NULL)))))OR(((v0.c0)||(v0.c0)))))AND(((((v0.c0)OR(v0.c0)))OR(v0.c0)))))OR(TRIM(v0.c0, v0.c0)))) ISNULL));
SELECT ALL v0.c0 FROM v0;
SELECT DISTINCT t0.c0 FROM t0, v0;
SELECT DISTINCT t0.c0 FROM t0, v0 WHERE (((v0.c0) NOTNULL) COLLATE BINARY) UNION SELECT DISTINCT t0.c0 FROM t0, v0 WHERE ((NOT (((v0.c0) NOTNULL) COLLATE BINARY))) UNION SELECT DISTINCT t0.c0 FROM t0, v0 WHERE (((((v0.c0) NOTNULL) COLLATE BINARY) ISNULL));
SELECT DISTINCT t0.c0 FROM t0, v0;
SELECT ALL t0.c0, t0.c1, t0.c2 FROM t0, v0 GROUP BY t0.c0, t0.c1, t0.c2;
SELECT ALL t0.c0, t0.c1, t0.c2 FROM t0, v0 WHERE (CAST(((t0.c2) NOT BETWEEN (t0.c0) AND (t0.c2)) AS BLOB)) GROUP BY t0.c0, t0.c1, t0.c2 UNION SELECT t0.c0, t0.c1, t0.c2 FROM t0, v0 WHERE ((NOT (CAST(((t0.c2) NOT BETWEEN (t0.c0) AND (t0.c2)) AS BLOB)))) GROUP BY t0.c0, t0.c1, t0.c2 UNION SELECT t0.c0, t0.c1, t0.c2 FROM t0, v0 WHERE (((CAST(((t0.c2) NOT BETWEEN (t0.c0) AND (t0.c2)) AS BLOB)) ISNULL)) GROUP BY t0.c0, t0.c1, t0.c2;
SELECT ALL t0.c0, t0.c1, t0.c2 FROM t0, v0 GROUP BY t0.c0, t0.c1, t0.c2;
SELECT v0.c0 FROM t0, v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM t0, v0 GROUP BY v0.c0 HAVING (((+ (MIN(t0.c1)))) NOT BETWEEN (AVG(t0.c2)) AND ('-1875509702')) UNION ALL SELECT ALL v0.c0 FROM t0, v0 GROUP BY v0.c0 HAVING (NOT ((((+ (MIN(t0.c1)))) NOT BETWEEN (AVG(t0.c2)) AND ('-1875509702')))) UNION ALL SELECT v0.c0 FROM t0, v0 GROUP BY v0.c0 HAVING (((((+ (MIN(t0.c1)))) NOT BETWEEN (AVG(t0.c2)) AND ('-1875509702'))) ISNULL);
SELECT v0.c0 FROM t0, v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM t0, v0 GROUP BY v0.c0 HAVING (((+ (MIN(t0.c1)))) NOT BETWEEN (AVG(t0.c2)) AND ('-1875509702')) UNION ALL SELECT ALL v0.c0 FROM t0, v0 GROUP BY v0.c0 HAVING (NOT ((((+ (MIN(t0.c1)))) NOT BETWEEN (AVG(t0.c2)) AND ('-1875509702')))) UNION ALL SELECT v0.c0 FROM t0, v0 GROUP BY v0.c0 HAVING (((((+ (MIN(t0.c1)))) NOT BETWEEN (AVG(t0.c2)) AND ('-1875509702'))) ISNULL);
SELECT v0.c0 FROM t0, v0 GROUP BY v0.c0;
SELECT t0.c1 FROM t0;
SELECT t0.c1 FROM t0 WHERE (json_remove(0.8183078079243269, t0.c2) COLLATE NOCASE) UNION ALL SELECT t0.c1 FROM t0 WHERE ((NOT (json_remove(0.8183078079243269, t0.c2) COLLATE NOCASE))) UNION ALL SELECT t0.c1 FROM t0 WHERE (((json_remove(0.8183078079243269, t0.c2) COLLATE NOCASE) ISNULL));
SELECT DISTINCT * FROM v0 RIGHT OUTER JOIN t0 ON (- ((((t0.c0)) NOT BETWEEN ((t0.c2)) AND ((v0.c0)))));
SELECT DISTINCT * FROM v0 RIGHT OUTER JOIN t0 ON (- ((((t0.c0)) NOT BETWEEN ((t0.c2)) AND ((v0.c0))))) WHERE (LTRIM(ABS(DISTINCT NULL))) UNION SELECT DISTINCT * FROM v0 RIGHT OUTER JOIN t0 ON (- ((((t0.c0)) NOT BETWEEN ((t0.c2)) AND ((v0.c0))))) WHERE ((NOT (LTRIM(ABS(DISTINCT NULL))))) UNION SELECT DISTINCT * FROM v0 RIGHT OUTER JOIN t0 ON (- ((((t0.c0)) NOT BETWEEN ((t0.c2)) AND ((v0.c0))))) WHERE (((LTRIM(ABS(DISTINCT NULL))) ISNULL));
SELECT DISTINCT * FROM v0 RIGHT OUTER JOIN t0 ON (- ((((t0.c0)) NOT BETWEEN ((t0.c2)) AND ((v0.c0)))));
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (((((((((((((0x6b3261cd)OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))OR(v0.c0)))AND((('b%n3GA5')LIKE(v0.c0)))))AND(v0.c0 COLLATE BINARY))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT (((((((((((((0X6b3261cd)OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))OR(v0.c0)))AND((('b%n3GA5')LIKE(v0.c0)))))AND(v0.c0 COLLATE BINARY))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((((((((((((((0X6b3261cd)OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))OR(v0.c0)))AND((('b%n3GA5')LIKE(v0.c0)))))AND(v0.c0 COLLATE BINARY))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT t0.c0, t0.c2, t0.c1 FROM t0 GROUP BY t0.c0, t0.c2, t0.c1;
SELECT ALL t0.c0, t0.c2, t0.c1 FROM t0 GROUP BY t0.c0, t0.c2, t0.c1 HAVING ((MAX(t0.c0)) NOT BETWEEN (MIN(COUNT(t0.c2))) AND (MAX(t0.c1))) UNION ALL SELECT t0.c0, t0.c2, t0.c1 FROM t0 GROUP BY t0.c0, t0.c2, t0.c1 HAVING (NOT (((MAX(t0.c0)) NOT BETWEEN (MIN(COUNT(t0.c2))) AND (MAX(t0.c1))))) UNION ALL SELECT ALL t0.c0, t0.c2, t0.c1 FROM t0 GROUP BY t0.c0, t0.c2, t0.c1 HAVING ((((MAX(t0.c0)) NOT BETWEEN (MIN(COUNT(t0.c2))) AND (MAX(t0.c1)))) ISNULL);
SELECT * FROM v0;
SELECT ALL * FROM v0 WHERE (((((v0.c0) NOT NULL))==((v0.c0 IN (v0.c0))))) UNION ALL SELECT * FROM v0 WHERE ((NOT (((((v0.c0) NOT NULL))==((v0.c0 IN (v0.c0))))))) UNION ALL SELECT ALL * FROM v0 WHERE (((((((v0.c0) NOT NULL))==((v0.c0 IN (v0.c0))))) ISNULL));
SELECT * FROM v0;
SELECT DISTINCT t0.c1, t0.c0, t0.c2 FROM t0, v0;
SELECT DISTINCT t0.c1, t0.c0, t0.c2 FROM t0, v0 WHERE (CAST(t0.c0 AS BLOB)) UNION SELECT DISTINCT t0.c1, t0.c0, t0.c2 FROM t0, v0 WHERE ((NOT (CAST(t0.c0 AS BLOB)))) UNION SELECT DISTINCT t0.c1, t0.c0, t0.c2 FROM t0, v0 WHERE (((CAST(t0.c0 AS BLOB)) ISNULL));
SELECT DISTINCT t0.c1, t0.c0, t0.c2 FROM t0, v0;
SELECT t0.c2, t0.c1, v0.c0, t0.c0 FROM v0 CROSS JOIN t0 ON t0.c0 GROUP BY t0.c2, t0.c1, v0.c0, t0.c0;
SELECT t0.c2, t0.c1, v0.c0, t0.c0 FROM v0 CROSS JOIN t0 ON t0.c0 WHERE (((((v0.c0) NOT NULL))>(((t0.c2) BETWEEN (t0.c1) AND (v0.c0))))) GROUP BY t0.c2, t0.c1, v0.c0, t0.c0 UNION SELECT ALL t0.c2, t0.c1, v0.c0, t0.c0 FROM v0 CROSS JOIN t0 ON t0.c0 WHERE ((NOT (((((v0.c0) NOT NULL))>(((t0.c2) BETWEEN (t0.c1) AND (v0.c0))))))) GROUP BY t0.c2, t0.c1, v0.c0, t0.c0 UNION SELECT ALL t0.c2, t0.c1, v0.c0, t0.c0 FROM v0 CROSS JOIN t0 ON t0.c0 WHERE (((((((v0.c0) NOT NULL))>(((t0.c2) BETWEEN (t0.c1) AND (v0.c0))))) ISNULL)) GROUP BY t0.c2, t0.c1, v0.c0, t0.c0;
SELECT t0.c2, t0.c1, v0.c0, t0.c0 FROM v0 CROSS JOIN t0 ON t0.c0 GROUP BY t0.c2, t0.c1, v0.c0, t0.c0;
SELECT t0.c1, t0.c2, v0.c0 FROM v0, t0 GROUP BY t0.c1, t0.c2, v0.c0;
SELECT t0.c1, t0.c2, v0.c0 FROM v0, t0 GROUP BY t0.c1, t0.c2, v0.c0 HAVING (- (SUM(t0.c2))) UNION ALL SELECT t0.c1, t0.c2, v0.c0 FROM v0, t0 GROUP BY t0.c1, t0.c2, v0.c0 HAVING (NOT ((- (SUM(t0.c2))))) UNION ALL SELECT t0.c1, t0.c2, v0.c0 FROM v0, t0 GROUP BY t0.c1, t0.c2, v0.c0 HAVING (((- (SUM(t0.c2)))) ISNULL);
SELECT t0.c1, t0.c2, v0.c0 FROM v0, t0 GROUP BY t0.c1, t0.c2, v0.c0;
SELECT t0.c1, t0.c2, v0.c0 FROM v0, t0 GROUP BY t0.c1, t0.c2, v0.c0 HAVING (- (SUM(t0.c2))) UNION ALL SELECT t0.c1, t0.c2, v0.c0 FROM v0, t0 GROUP BY t0.c1, t0.c2, v0.c0 HAVING (NOT ((- (SUM(t0.c2))))) UNION ALL SELECT t0.c1, t0.c2, v0.c0 FROM v0, t0 GROUP BY t0.c1, t0.c2, v0.c0 HAVING (((- (SUM(t0.c2)))) ISNULL);
SELECT t0.c1, t0.c2, v0.c0 FROM v0, t0 GROUP BY t0.c1, t0.c2, v0.c0;
SELECT ALL t0.c0, v0.c0, t0.c2, t0.c1 FROM v0, t0;
SELECT t0.c0, v0.c0, t0.c2, t0.c1 FROM v0, t0 WHERE ((((t0.c1, v0.c0, v0.c0)) BETWEEN ((CAST(t0.c2 AS BLOB), v0.c0, ((t0.c2) NOT NULL))) AND ((t0.c1 COLLATE BINARY, CASE v0.c0  WHEN t0.c2 THEN v0.c0 END, json_object(v0.c0, t0.c0))))) UNION ALL SELECT t0.c0, v0.c0, t0.c2, t0.c1 FROM v0, t0 WHERE ((NOT ((((t0.c1, v0.c0, v0.c0)) BETWEEN ((CAST(t0.c2 AS BLOB), v0.c0, ((t0.c2) NOT NULL))) AND ((t0.c1 COLLATE BINARY, CASE v0.c0  WHEN t0.c2 THEN v0.c0 END, json_object(v0.c0, t0.c0))))))) UNION ALL SELECT ALL t0.c0, v0.c0, t0.c2, t0.c1 FROM v0, t0 WHERE ((((((t0.c1, v0.c0, v0.c0)) BETWEEN ((CAST(t0.c2 AS BLOB), v0.c0, ((t0.c2) NOT NULL))) AND ((t0.c1 COLLATE BINARY, CASE v0.c0  WHEN t0.c2 THEN v0.c0 END, json_object(v0.c0, t0.c0))))) ISNULL));
SELECT ALL t0.c0, v0.c0, t0.c2, t0.c1 FROM v0, t0;
SELECT DISTINCT v0.c0, t0.c2, t0.c0, t0.c1 FROM v0, t0;
SELECT DISTINCT v0.c0, t0.c2, t0.c0, t0.c1 FROM v0, t0 WHERE (v0.c0) UNION SELECT DISTINCT v0.c0, t0.c2, t0.c0, t0.c1 FROM v0, t0 WHERE ((NOT (v0.c0))) UNION SELECT DISTINCT v0.c0, t0.c2, t0.c0, t0.c1 FROM v0, t0 WHERE (((v0.c0) ISNULL));
SELECT DISTINCT v0.c0, t0.c2, t0.c0, t0.c1 FROM v0, t0;
SELECT t0.c0, v0.c0 FROM v0, t0 GROUP BY t0.c0, v0.c0;
SELECT ALL t0.c0, v0.c0 FROM v0, t0 WHERE (HEX(DISTINCT ((v0.c0) NOT BETWEEN (t0.c2) AND (t0.c1)))) GROUP BY t0.c0, v0.c0 UNION SELECT ALL t0.c0, v0.c0 FROM v0, t0 WHERE ((NOT (HEX(DISTINCT ((v0.c0) NOT BETWEEN (t0.c2) AND (t0.c1)))))) GROUP BY t0.c0, v0.c0 UNION SELECT t0.c0, v0.c0 FROM v0, t0 WHERE (((HEX(DISTINCT ((v0.c0) NOT BETWEEN (t0.c2) AND (t0.c1)))) ISNULL)) GROUP BY t0.c0, v0.c0;
SELECT t0.c0, v0.c0 FROM v0, t0 GROUP BY t0.c0, v0.c0;
SELECT t0.c1 FROM t0 GROUP BY t0.c1;
SELECT ALL t0.c1 FROM t0 GROUP BY t0.c1 HAVING AVG(MAX('閏')) UNION ALL SELECT ALL t0.c1 FROM t0 GROUP BY t0.c1 HAVING (NOT (AVG(MAX('閏')))) UNION ALL SELECT t0.c1 FROM t0 GROUP BY t0.c1 HAVING ((AVG(MAX('閏'))) ISNULL);
SELECT * FROM v0 INDEXED BY i77;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (CAST((NOT (v0.c0)) AS REAL)) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (CAST((NOT (v0.c0)) AS REAL)))) UNION SELECT DISTINCT * FROM v0 WHERE (((CAST((NOT (v0.c0)) AS REAL)) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE ((((((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))>((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT ((((((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))>((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((((((((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))>((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING SUM(GROUP_CONCAT(v0.c0)) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (SUM(GROUP_CONCAT(v0.c0)))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((SUM(GROUP_CONCAT(v0.c0))) ISNULL);
SELECT * FROM t0;
SELECT * FROM t0 WHERE (x'') UNION ALL SELECT * FROM t0 WHERE ((NOT (x''))) UNION ALL SELECT ALL * FROM t0 WHERE (((x'') ISNULL));
SELECT * FROM t0;
SELECT DISTINCT t0.c0, t0.c2, t0.c1 FROM t0;
SELECT DISTINCT t0.c0, t0.c2, t0.c1 FROM t0 WHERE ((~ (ROUND(t0.c0, t0.c1)))) UNION SELECT DISTINCT t0.c0, t0.c2, t0.c1 FROM t0 WHERE ((NOT ((~ (ROUND(t0.c0, t0.c1)))))) UNION SELECT DISTINCT t0.c0, t0.c2, t0.c1 FROM t0 WHERE ((((~ (ROUND(t0.c0, t0.c1)))) ISNULL));
SELECT DISTINCT t0.c0, t0.c2, t0.c1 FROM t0;
SELECT t0.c2 FROM v0, t0 GROUP BY t0.c2;
SELECT ALL t0.c2 FROM v0, t0 WHERE ((~ (t0.c2)) COLLATE RTRIM) GROUP BY t0.c2 UNION SELECT t0.c2 FROM v0, t0 WHERE ((NOT ((~ (t0.c2)) COLLATE RTRIM))) GROUP BY t0.c2 UNION SELECT t0.c2 FROM v0, t0 WHERE ((((~ (t0.c2)) COLLATE RTRIM) ISNULL)) GROUP BY t0.c2;
SELECT t0.c2 FROM v0, t0 GROUP BY t0.c2;
SELECT t0.c2 FROM t0 GROUP BY t0.c2;
SELECT t0.c2 FROM t0 GROUP BY t0.c2 HAVING ((SUM(SUM(t0.c2)))LIKE(TOTAL(TOTAL(TOTAL(t0.c2))))) UNION ALL SELECT ALL t0.c2 FROM t0 GROUP BY t0.c2 HAVING (NOT (((SUM(SUM(t0.c2)))LIKE(TOTAL(TOTAL(TOTAL(t0.c2))))))) UNION ALL SELECT t0.c2 FROM t0 GROUP BY t0.c2 HAVING ((((SUM(SUM(t0.c2)))LIKE(TOTAL(TOTAL(TOTAL(t0.c2)))))) ISNULL);
SELECT ALL * FROM t0, v0;
SELECT ALL * FROM t0, v0 WHERE (CAST((x'' IN (t0.c2, 1509822781)) AS INTEGER)) UNION ALL SELECT ALL * FROM t0, v0 WHERE ((NOT (CAST((x'' IN (t0.c2, 1509822781)) AS INTEGER)))) UNION ALL SELECT * FROM t0, v0 WHERE (((CAST((x'' IN (t0.c2, 1509822781)) AS INTEGER)) ISNULL));
SELECT ALL * FROM t0, v0;
SELECT DISTINCT t0.c2 FROM t0;
SELECT DISTINCT t0.c2 FROM t0 WHERE ((((((t0.c2))<((t0.c1))))IS(t0.c1))) UNION SELECT DISTINCT t0.c2 FROM t0 WHERE ((NOT ((((((t0.c2))<((t0.c1))))IS(t0.c1))))) UNION SELECT DISTINCT t0.c2 FROM t0 WHERE ((((((((t0.c2))<((t0.c1))))IS(t0.c1))) ISNULL));
SELECT DISTINCT t0.c2 FROM t0;
SELECT ALL t0.c0, t0.c2 FROM v0, t0 GROUP BY t0.c0, t0.c2;
SELECT t0.c0, t0.c2 FROM v0, t0 WHERE ('-542510829' COLLATE RTRIM) GROUP BY t0.c0, t0.c2 UNION SELECT ALL t0.c0, t0.c2 FROM v0, t0 WHERE ((NOT ('-542510829' COLLATE RTRIM))) GROUP BY t0.c0, t0.c2 UNION SELECT t0.c0, t0.c2 FROM v0, t0 WHERE ((('-542510829' COLLATE RTRIM) ISNULL)) GROUP BY t0.c0, t0.c2;
SELECT ALL t0.c0, t0.c2 FROM v0, t0 GROUP BY t0.c0, t0.c2;
SELECT t0.c1, t0.c0, t0.c2 FROM t0 GROUP BY t0.c1, t0.c0, t0.c2;
SELECT ALL t0.c1, t0.c0, t0.c2 FROM t0 GROUP BY t0.c1, t0.c0, t0.c2 HAVING (((t0.c1))<>((MAX(MAX(t0.c1))))) COLLATE BINARY UNION ALL SELECT ALL t0.c1, t0.c0, t0.c2 FROM t0 GROUP BY t0.c1, t0.c0, t0.c2 HAVING (NOT ((((t0.c1))!=((MAX(MAX(t0.c1))))) COLLATE BINARY)) UNION ALL SELECT t0.c1, t0.c0, t0.c2 FROM t0 GROUP BY t0.c1, t0.c0, t0.c2 HAVING (((((t0.c1))!=((MAX(MAX(t0.c1))))) COLLATE BINARY) ISNULL);
SELECT ALL * FROM t0, v0;
SELECT * FROM t0, v0 WHERE ((- (t0.c0))) UNION ALL SELECT ALL * FROM t0, v0 WHERE ((NOT ((- (t0.c0))))) UNION ALL SELECT ALL * FROM t0, v0 WHERE ((((- (t0.c0))) ISNULL));
SELECT ALL * FROM t0, v0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (CASE IFNULL(DISTINCT t0.c1, t0.c2)  WHEN CAST(t0.c2 AS TEXT) THEN LIKELY(DISTINCT t0.c0) WHEN ((x'')LIKE(t0.c0)) THEN ((t0.c2)>=(t0.c0)) WHEN (t0.c2 IN ()) THEN CAST(t0.c0 AS BLOB) ELSE CASE t0.c0  WHEN '-1956337384' THEN t0.c0 END END) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (CASE IFNULL(DISTINCT t0.c1, t0.c2)  WHEN CAST(t0.c2 AS TEXT) THEN LIKELY(DISTINCT t0.c0) WHEN ((x'')LIKE(t0.c0)) THEN ((t0.c2)>=(t0.c0)) WHEN (t0.c2 IN ()) THEN CAST(t0.c0 AS BLOB) ELSE CASE t0.c0  WHEN '-1956337384' THEN t0.c0 END END))) UNION SELECT DISTINCT * FROM t0 WHERE (((CASE IFNULL(DISTINCT t0.c1, t0.c2)  WHEN CAST(t0.c2 AS TEXT) THEN LIKELY(DISTINCT t0.c0) WHEN ((x'')LIKE(t0.c0)) THEN ((t0.c2)>=(t0.c0)) WHEN (t0.c2 IN ()) THEN CAST(t0.c0 AS BLOB) ELSE CASE t0.c0  WHEN '-1956337384' THEN t0.c0 END END) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT ALL t0.c1, t0.c0, t0.c2 FROM t0 GROUP BY t0.c1, t0.c0, t0.c2;
SELECT ALL t0.c1, t0.c0, t0.c2 FROM t0 WHERE (((t0.c2 COLLATE RTRIM)/(((t0.c2) NOTNULL)))) GROUP BY t0.c1, t0.c0, t0.c2 UNION SELECT t0.c1, t0.c0, t0.c2 FROM t0 WHERE ((NOT (((t0.c2 COLLATE RTRIM)/(((t0.c2) NOTNULL)))))) GROUP BY t0.c1, t0.c0, t0.c2 UNION SELECT ALL t0.c1, t0.c0, t0.c2 FROM t0 WHERE (((((t0.c2 COLLATE RTRIM)/(((t0.c2) NOTNULL)))) ISNULL)) GROUP BY t0.c1, t0.c0, t0.c2;
SELECT ALL t0.c1, t0.c0, t0.c2 FROM t0 GROUP BY t0.c1, t0.c0, t0.c2;
SELECT t0.c2, v0.c0, t0.c0, t0.c1 FROM t0, v0 GROUP BY t0.c2, v0.c0, t0.c0, t0.c1;
SELECT t0.c2, v0.c0, t0.c0, t0.c1 FROM t0, v0 GROUP BY t0.c2, v0.c0, t0.c0, t0.c1 HAVING AVG(MIN('9HCx')) UNION ALL SELECT ALL t0.c2, v0.c0, t0.c0, t0.c1 FROM t0, v0 GROUP BY t0.c2, v0.c0, t0.c0, t0.c1 HAVING (NOT (AVG(MIN('9HCx')))) UNION ALL SELECT t0.c2, v0.c0, t0.c0, t0.c1 FROM t0, v0 GROUP BY t0.c2, v0.c0, t0.c0, t0.c1 HAVING ((AVG(MIN('9HCx'))) ISNULL);
SELECT ALL t0.c2, t0.c0, v0.c0 FROM t0, v0;
SELECT ALL t0.c2, t0.c0, v0.c0 FROM t0, v0 WHERE (((CASE WHEN v0.c0 THEN t0.c1 END)LIKE((t0.c0 IN ())))) UNION ALL SELECT t0.c2, t0.c0, v0.c0 FROM t0, v0 WHERE ((NOT (((CASE WHEN v0.c0 THEN t0.c1 END)LIKE((t0.c0 IN ())))))) UNION ALL SELECT t0.c2, t0.c0, v0.c0 FROM t0, v0 WHERE (((((CASE WHEN v0.c0 THEN t0.c1 END)LIKE((t0.c0 IN ())))) ISNULL));
SELECT ALL t0.c2, t0.c0, v0.c0 FROM t0, v0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (((((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))AND((NOT (0.10885500753292199)))))AND(((v0.c0) NOTNULL)))) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (((((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))AND((NOT (0.10885500753292199)))))AND(((v0.c0) NOTNULL)))))) UNION SELECT DISTINCT * FROM v0 WHERE (((((((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))AND((NOT (0.10885500753292199)))))AND(((v0.c0) NOTNULL)))) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT ALL t0.c1 FROM t0 INNER JOIN v0 ON ((CAST(t0.c1 AS TEXT))LIKE(((t0.c2) BETWEEN (NULL) AND (v0.c0)))) GROUP BY t0.c1;
SELECT ALL t0.c1 FROM t0 INNER JOIN v0 ON ((CAST(t0.c1 AS TEXT))LIKE(((t0.c2) BETWEEN (NULL) AND (v0.c0)))) WHERE (TYPEOF(DISTINCT (((t0.c1, v0.c0, t0.c2))==((v0.c0, t0.c2, t0.c0))))) GROUP BY t0.c1 UNION SELECT t0.c1 FROM t0 INNER JOIN v0 ON ((CAST(t0.c1 AS TEXT))LIKE(((t0.c2) BETWEEN (NULL) AND (v0.c0)))) WHERE ((NOT (TYPEOF(DISTINCT (((t0.c1, v0.c0, t0.c2))=((v0.c0, t0.c2, t0.c0))))))) GROUP BY t0.c1 UNION SELECT t0.c1 FROM t0 INNER JOIN v0 ON ((CAST(t0.c1 AS TEXT))LIKE(((t0.c2) BETWEEN (NULL) AND (v0.c0)))) WHERE (((TYPEOF(DISTINCT (((t0.c1, v0.c0, t0.c2))=((v0.c0, t0.c2, t0.c0))))) ISNULL)) GROUP BY t0.c1;
SELECT ALL t0.c1 FROM t0 INNER JOIN v0 ON ((CAST(t0.c1 AS TEXT))LIKE(((t0.c2) BETWEEN (NULL) AND (v0.c0)))) GROUP BY t0.c1;
SELECT ALL t0.c2, v0.c0 FROM v0, t0 GROUP BY t0.c2, v0.c0;
SELECT t0.c2, v0.c0 FROM v0, t0 GROUP BY t0.c2, v0.c0 HAVING ((((((((MAX(TOTAL(MAX(SUM(v0.c0)))))OR(AVG(v0.c0))))AND(x'99ff')))OR(COUNT(*))))AND(AVG(AVG(t0.c0)))) UNION ALL SELECT t0.c2, v0.c0 FROM v0, t0 GROUP BY t0.c2, v0.c0 HAVING (NOT (((((((((MAX(TOTAL(MAX(SUM(v0.c0)))))OR(AVG(v0.c0))))AND(x'99ff')))OR(COUNT(*))))AND(AVG(AVG(t0.c0)))))) UNION ALL SELECT ALL t0.c2, v0.c0 FROM v0, t0 GROUP BY t0.c2, v0.c0 HAVING ((((((((((MAX(TOTAL(MAX(SUM(v0.c0)))))OR(AVG(v0.c0))))AND(x'99ff')))OR(COUNT(*))))AND(AVG(AVG(t0.c0))))) ISNULL);
SELECT ALL v0.c0, t0.c2, t0.c0, t0.c1 FROM v0, t0;
SELECT ALL v0.c0, t0.c2, t0.c0, t0.c1 FROM v0, t0 WHERE (((((v0.c0)OR((t0.c2 IN ()))))OR(TYPEOF(DISTINCT t0.c2)))) UNION ALL SELECT v0.c0, t0.c2, t0.c0, t0.c1 FROM v0, t0 WHERE ((NOT (((((v0.c0)OR((t0.c2 IN ()))))OR(TYPEOF(DISTINCT t0.c2)))))) UNION ALL SELECT v0.c0, t0.c2, t0.c0, t0.c1 FROM v0, t0 WHERE (((((((v0.c0)OR((t0.c2 IN ()))))OR(TYPEOF(DISTINCT t0.c2)))) ISNULL));
SELECT ALL v0.c0, t0.c2, t0.c0, t0.c1 FROM v0, t0;
SELECT DISTINCT t0.c2 FROM v0, t0;
SELECT DISTINCT t0.c2 FROM v0, t0 WHERE (((((((v0.c0) ISNULL))OR(0xffffffffd57d9af9)))OR(((t0.c2)OR(t0.c0))))) UNION SELECT DISTINCT t0.c2 FROM v0, t0 WHERE ((NOT (((((((v0.c0) ISNULL))OR(0Xffffffffd57d9af9)))OR(((t0.c2)OR(t0.c0))))))) UNION SELECT DISTINCT t0.c2 FROM v0, t0 WHERE (((((((((v0.c0) ISNULL))OR(0xffffffffd57d9af9)))OR(((t0.c2)OR(t0.c0))))) ISNULL));
SELECT DISTINCT t0.c2 FROM v0, t0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (UNLIKELY(((v0.c0)+(v0.c0)))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (UNLIKELY(((v0.c0)+(v0.c0)))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE (((UNLIKELY(((v0.c0)+(v0.c0)))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT t0.c1, t0.c0 FROM v0 INNER JOIN t0 ON (- (v0.c0)) COLLATE RTRIM GROUP BY t0.c1, t0.c0;
SELECT t0.c1, t0.c0 FROM v0 INNER JOIN t0 ON (- (v0.c0)) COLLATE RTRIM GROUP BY t0.c1, t0.c0 HAVING TOTAL(AVG(v0.c0)) UNION ALL SELECT t0.c1, t0.c0 FROM v0 INNER JOIN t0 ON (- (v0.c0)) COLLATE RTRIM GROUP BY t0.c1, t0.c0 HAVING (NOT (TOTAL(AVG(v0.c0)))) UNION ALL SELECT ALL t0.c1, t0.c0 FROM v0 INNER JOIN t0 ON (- (v0.c0)) COLLATE RTRIM GROUP BY t0.c1, t0.c0 HAVING ((TOTAL(AVG(v0.c0))) ISNULL);
SELECT ALL t0.c2, t0.c0, t0.c1 FROM t0, v0;
SELECT ALL t0.c2, t0.c0, t0.c1 FROM t0, v0 WHERE (((CASE WHEN v0.c0 THEN v0.c0 END)-(t0.c0))) UNION ALL SELECT t0.c2, t0.c0, t0.c1 FROM t0, v0 WHERE ((NOT (((CASE WHEN v0.c0 THEN v0.c0 END)-(t0.c0))))) UNION ALL SELECT t0.c2, t0.c0, t0.c1 FROM t0, v0 WHERE (((((CASE WHEN v0.c0 THEN v0.c0 END)-(t0.c0))) ISNULL));
SELECT ALL t0.c2, t0.c0, t0.c1 FROM t0, v0;
SELECT DISTINCT t0.c2, v0.c0, t0.c0 FROM v0, t0;
SELECT DISTINCT t0.c2, v0.c0, t0.c0 FROM v0, t0 NOT INDEXED WHERE ((- (CASE v0.c0  WHEN t0.c2 THEN t0.c2 WHEN v0.c0 THEN t0.c2 WHEN t0.c2 THEN t0.c1 WHEN t0.c1 THEN v0.c0 WHEN t0.c1 THEN t0.c0 END))) UNION SELECT DISTINCT t0.c2, v0.c0, t0.c0 FROM v0, t0 WHERE ((NOT ((- (CASE v0.c0  WHEN t0.c2 THEN t0.c2 WHEN v0.c0 THEN t0.c2 WHEN t0.c2 THEN t0.c1 WHEN t0.c1 THEN v0.c0 WHEN t0.c1 THEN t0.c0 END))))) UNION SELECT DISTINCT t0.c2, v0.c0, t0.c0 FROM v0, t0 WHERE ((((- (CASE v0.c0  WHEN t0.c2 THEN t0.c2 WHEN v0.c0 THEN t0.c2 WHEN t0.c2 THEN t0.c1 WHEN t0.c1 THEN v0.c0 WHEN t0.c1 THEN t0.c0 END))) ISNULL));
SELECT DISTINCT t0.c2, v0.c0, t0.c0 FROM v0, t0;
SELECT ALL t0.c1, t0.c0 FROM v0, t0 GROUP BY t0.c1, t0.c0;
SELECT t0.c1, t0.c0 FROM v0, t0 WHERE (((+ (v0.c0)) IN ())) GROUP BY t0.c1, t0.c0 UNION SELECT ALL t0.c1, t0.c0 FROM v0, t0 WHERE ((NOT (((+ (v0.c0)) IN ())))) GROUP BY t0.c1, t0.c0 UNION SELECT ALL t0.c1, t0.c0 FROM v0 NOT INDEXED, t0 WHERE (((((+ (v0.c0)) IN ())) ISNULL)) GROUP BY t0.c1, t0.c0;
SELECT ALL t0.c1, t0.c0 FROM v0, t0 GROUP BY t0.c1, t0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING CASE WHEN ((COUNT(*)) IS TRUE) THEN SUM(MAX(v0.c0)) END UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (CASE WHEN ((COUNT(*)) IS TRUE) THEN SUM(MAX(v0.c0)) END)) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((CASE WHEN ((COUNT(*)) IS TRUE) THEN SUM(MAX(v0.c0)) END) ISNULL);
SELECT t0.c1, v0.c0, t0.c2, t0.c0 FROM v0, t0;
SELECT ALL t0.c1, v0.c0, t0.c2, t0.c0 FROM v0, t0 WHERE (((((t0.c1)*(t0.c0))) NOT BETWEEN (ABS(DISTINCT t0.c0)) AND ((- (t0.c2))))) UNION ALL SELECT ALL t0.c1, v0.c0, t0.c2, t0.c0 FROM v0, t0 WHERE ((NOT (((((t0.c1)*(t0.c0))) NOT BETWEEN (ABS(DISTINCT t0.c0)) AND ((- (t0.c2))))))) UNION ALL SELECT ALL t0.c1, v0.c0, t0.c2, t0.c0 FROM v0, t0 WHERE (((((((t0.c1)*(t0.c0))) NOT BETWEEN (ABS(DISTINCT t0.c0)) AND ((- (t0.c2))))) ISNULL));
SELECT t0.c1, v0.c0, t0.c2, t0.c0 FROM v0, t0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE ((((((NULL)||(v0.c0))))=((CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN '-1918332784' WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)))) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT ((((((NULL)||(v0.c0))))==((CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN '-1918332784' WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)))))) UNION SELECT DISTINCT * FROM v0 WHERE ((((((((NULL)||(v0.c0))))==((CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN '-1918332784' WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)))) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (CHAR(((v0.c0)*(0.8570581904738699)))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (CHAR(((v0.c0)*(0.8570581904738699)))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE (((CHAR(((v0.c0)*(0.8570581904738699)))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((((TOTAL(v0.c0))OR(COUNT(SUM(COUNT(SUM(NULL)))))))OR((((v0.c0, v0.c0, v0.c0))>((v0.c0, v0.c0, v0.c0))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (((((TOTAL(v0.c0))OR(COUNT(SUM(COUNT(SUM(NULL)))))))OR((((v0.c0, v0.c0, v0.c0))>((v0.c0, v0.c0, v0.c0))))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((((((TOTAL(v0.c0))OR(COUNT(SUM(COUNT(SUM(NULL)))))))OR((((v0.c0, v0.c0, v0.c0))>((v0.c0, v0.c0, v0.c0)))))) ISNULL);
SELECT ALL * FROM t0;
SELECT * FROM t0 WHERE (((t0.c0) BETWEEN (((t0.c2) ISNULL)) AND (t0.c2))) UNION ALL SELECT * FROM t0 WHERE ((NOT (((t0.c0) BETWEEN (((t0.c2) ISNULL)) AND (t0.c2))))) UNION ALL SELECT * FROM t0 WHERE (((((t0.c0) BETWEEN (((t0.c2) ISNULL)) AND (t0.c2))) ISNULL));
SELECT ALL * FROM t0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (0.36910628744574236) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (0.36910628744574236))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((0.36910628744574236) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT t0.c2 FROM t0 INNER JOIN v0 ON (((t0.c1, (~ (t0.c2)), ((((((((v0.c0)OR(t0.c1)))AND(v0.c0)))AND('')))AND(t0.c2))))<=((LIKELIHOOD(DISTINCT t0.c1, 0.7749261911154798), (~ ('-1271666659')), (NOT (v0.c0))))) GROUP BY t0.c2;
SELECT ALL t0.c2 FROM t0 INNER JOIN v0 ON (((t0.c1, (~ (t0.c2)), ((((((((v0.c0)OR(t0.c1)))AND(v0.c0)))AND('')))AND(t0.c2))))<=((LIKELIHOOD(DISTINCT t0.c1, 0.7749261911154798), (~ ('-1271666659')), (NOT (v0.c0))))) WHERE (LIKELIHOOD(DISTINCT x'', 0.4700502889843289)) GROUP BY t0.c2 UNION SELECT t0.c2 FROM t0 INNER JOIN v0 ON (((t0.c1, (~ (t0.c2)), ((((((((v0.c0)OR(t0.c1)))AND(v0.c0)))AND('')))AND(t0.c2))))<=((LIKELIHOOD(DISTINCT t0.c1, 0.7749261911154798), (~ ('-1271666659')), (NOT (v0.c0))))) WHERE ((NOT (LIKELIHOOD(DISTINCT x'', 0.4700502889843289)))) GROUP BY t0.c2 UNION SELECT t0.c2 FROM t0 INNER JOIN v0 ON (((t0.c1, (~ (t0.c2)), ((((((((v0.c0)OR(t0.c1)))AND(v0.c0)))AND('')))AND(t0.c2))))<=((LIKELIHOOD(DISTINCT t0.c1, 0.7749261911154798), (~ ('-1271666659')), (NOT (v0.c0))))) WHERE (((LIKELIHOOD(DISTINCT x'', 0.4700502889843289)) ISNULL)) GROUP BY t0.c2;
SELECT t0.c2 FROM t0 INNER JOIN v0 ON (((t0.c1, (~ (t0.c2)), ((((((((v0.c0)OR(t0.c1)))AND(v0.c0)))AND('')))AND(t0.c2))))<=((LIKELIHOOD(DISTINCT t0.c1, 0.7749261911154798), (~ ('-1271666659')), (NOT (v0.c0))))) GROUP BY t0.c2;
SELECT ALL t0.c2, t0.c1, t0.c0 FROM t0 GROUP BY t0.c2, t0.c1, t0.c0;
SELECT t0.c2, t0.c1, t0.c0 FROM t0 GROUP BY t0.c2, t0.c1, t0.c0 HAVING AVG(GROUP_CONCAT(COUNT(*))) UNION ALL SELECT ALL t0.c2, t0.c1, t0.c0 FROM t0 GROUP BY t0.c2, t0.c1, t0.c0 HAVING (NOT (AVG(GROUP_CONCAT(COUNT(*))))) UNION ALL SELECT ALL t0.c2, t0.c1, t0.c0 FROM t0 GROUP BY t0.c2, t0.c1, t0.c0 HAVING ((AVG(GROUP_CONCAT(COUNT(*)))) ISNULL);
SELECT ALL TOTAL('') FROM v0, t0;
SELECT ALL * FROM v0, t0;
SELECT ALL * FROM v0, t0 WHERE ((CASE WHEN t0.c0 THEN t0.c0 END IN (((t0.c1)GLOB(t0.c0)), CASE t0.c1  WHEN t0.c2 THEN t0.c1 ELSE t0.c1 END))) UNION ALL SELECT ALL * FROM v0, t0 WHERE ((NOT ((CASE WHEN t0.c0 THEN t0.c0 END IN (((t0.c1)GLOB(t0.c0)), CASE t0.c1  WHEN t0.c2 THEN t0.c1 ELSE t0.c1 END))))) UNION ALL SELECT ALL * FROM v0, t0 WHERE ((((CASE WHEN t0.c0 THEN t0.c0 END IN (((t0.c1)GLOB(t0.c0)), CASE t0.c1  WHEN t0.c2 THEN t0.c1 ELSE t0.c1 END))) ISNULL));
SELECT ALL * FROM v0, t0;
SELECT DISTINCT t0.c0, t0.c1 FROM t0;
SELECT DISTINCT t0.c0, t0.c1 FROM t0 WHERE (NULL) UNION SELECT DISTINCT t0.c0, t0.c1 FROM t0 WHERE ((NOT (NULL))) UNION SELECT DISTINCT t0.c0, t0.c1 FROM t0 WHERE (((NULL) ISNULL));
SELECT DISTINCT t0.c0, t0.c1 FROM t0;
SELECT ALL t0.c0 FROM v0 RIGHT OUTER JOIN t0 ON (CASE v0.c0  WHEN v0.c0 THEN t0.c1 END IN ((t0.c0 IN ()))) GROUP BY t0.c0;
SELECT t0.c0 FROM v0 RIGHT OUTER JOIN t0 ON (CASE v0.c0  WHEN v0.c0 THEN t0.c1 END IN ((t0.c0 IN ()))) WHERE (CASE WHEN CAST(t0.c0 AS NUMERIC) THEN (((t0.c2))>=((t0.c0))) END) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM v0 RIGHT OUTER JOIN t0 ON (CASE v0.c0  WHEN v0.c0 THEN t0.c1 END IN ((t0.c0 IN ()))) WHERE ((NOT (CASE WHEN CAST(t0.c0 AS NUMERIC) THEN (((t0.c2))>=((t0.c0))) END))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM v0 RIGHT OUTER JOIN t0 ON (CASE v0.c0  WHEN v0.c0 THEN t0.c1 END IN ((t0.c0 IN ()))) WHERE (((CASE WHEN CAST(t0.c0 AS NUMERIC) THEN (((t0.c2))>=((t0.c0))) END) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM v0 RIGHT OUTER JOIN t0 ON (CASE v0.c0  WHEN v0.c0 THEN t0.c1 END IN ((t0.c0 IN ()))) GROUP BY t0.c0;
SELECT t0.c0, t0.c2 FROM t0 GROUP BY t0.c0, t0.c2;
SELECT t0.c0, t0.c2 FROM t0 GROUP BY t0.c0, t0.c2 HAVING CASE AVG(t0.c0)  WHEN (- (TOTAL(t0.c0))) THEN '' WHEN t0.c2 COLLATE RTRIM THEN ((((((((AVG(AVG(t0.c2)))OR(MIN(t0.c0))))OR(COUNT(t0.c2))))AND(t0.c0)))AND(COUNT(t0.c1))) WHEN COUNT(*) THEN COUNT(*) ELSE -1.7976931348623157E308 END UNION ALL SELECT t0.c0, t0.c2 FROM t0 GROUP BY t0.c0, t0.c2 HAVING (NOT (CASE AVG(t0.c0)  WHEN (- (TOTAL(t0.c0))) THEN '' WHEN t0.c2 COLLATE RTRIM THEN ((((((((AVG(AVG(t0.c2)))OR(MIN(t0.c0))))OR(COUNT(t0.c2))))AND(t0.c0)))AND(COUNT(t0.c1))) WHEN COUNT(*) THEN COUNT(*) ELSE -1.7976931348623157E308 END)) UNION ALL SELECT ALL t0.c0, t0.c2 FROM t0 GROUP BY t0.c0, t0.c2 HAVING ((CASE AVG(t0.c0)  WHEN (- (TOTAL(t0.c0))) THEN '' WHEN t0.c2 COLLATE RTRIM THEN ((((((((AVG(AVG(t0.c2)))OR(MIN(t0.c0))))OR(COUNT(t0.c2))))AND(t0.c0)))AND(COUNT(t0.c1))) WHEN COUNT(*) THEN COUNT(*) ELSE -1.7976931348623157E308 END) ISNULL);
SELECT ALL t0.c0, t0.c1 FROM t0;
SELECT ALL t0.c0, t0.c1 FROM t0 WHERE (t0.c1) UNION ALL SELECT ALL t0.c0, t0.c1 FROM t0 WHERE ((NOT (t0.c1))) UNION ALL SELECT ALL t0.c0, t0.c1 FROM t0 NOT INDEXED WHERE (((t0.c1) ISNULL));
SELECT ALL t0.c0, t0.c1 FROM t0;
SELECT DISTINCT t0.c0, t0.c1, t0.c2 FROM t0;
SELECT DISTINCT t0.c0, t0.c1, t0.c2 FROM t0 WHERE ((((((t0.c0, t0.c0, t0.c0))<((t0.c0, t0.c2, t0.c0)))) NOT BETWEEN (((((((((t0.c0)OR(t0.c1)))OR(t0.c1)))OR(t0.c2)))OR(t0.c1))) AND (CASE t0.c0  WHEN t0.c2 THEN t0.c2 ELSE t0.c0 END))) UNION SELECT DISTINCT t0.c0, t0.c1, t0.c2 FROM t0 WHERE ((NOT ((((((t0.c0, t0.c0, t0.c0))<((t0.c0, t0.c2, t0.c0)))) NOT BETWEEN (((((((((t0.c0)OR(t0.c1)))OR(t0.c1)))OR(t0.c2)))OR(t0.c1))) AND (CASE t0.c0  WHEN t0.c2 THEN t0.c2 ELSE t0.c0 END))))) UNION SELECT DISTINCT t0.c0, t0.c1, t0.c2 FROM t0 WHERE ((((((((t0.c0, t0.c0, t0.c0))<((t0.c0, t0.c2, t0.c0)))) NOT BETWEEN (((((((((t0.c0)OR(t0.c1)))OR(t0.c1)))OR(t0.c2)))OR(t0.c1))) AND (CASE t0.c0  WHEN t0.c2 THEN t0.c2 ELSE t0.c0 END))) ISNULL));
SELECT DISTINCT t0.c0, t0.c1, t0.c2 FROM t0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (((+ (v0.c0)) IN ((+ (v0.c0))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (((+ (v0.c0)) IN ((+ (v0.c0))))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE (((((+ (v0.c0)) IN ((+ (v0.c0))))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL t0.c2, t0.c1, v0.c0 FROM v0 LEFT OUTER JOIN t0 ON t0.c2 GROUP BY t0.c2, t0.c1, v0.c0;
SELECT ALL t0.c2, t0.c1, v0.c0 FROM v0 LEFT OUTER JOIN t0 ON t0.c2 GROUP BY t0.c2, t0.c1, v0.c0 HAVING t0.c0 UNION ALL SELECT ALL t0.c2, t0.c1, v0.c0 FROM v0 LEFT OUTER JOIN t0 ON t0.c2 GROUP BY t0.c2, t0.c1, v0.c0 HAVING (NOT (t0.c0)) UNION ALL SELECT t0.c2, t0.c1, v0.c0 FROM v0 LEFT OUTER JOIN t0 ON t0.c2 GROUP BY t0.c2, t0.c1, v0.c0 HAVING ((t0.c0) ISNULL);
SELECT ALL t0.c2, t0.c1, v0.c0 FROM v0 LEFT OUTER JOIN t0 ON t0.c2 GROUP BY t0.c2, t0.c1, v0.c0;
SELECT ALL t0.c2, t0.c1, v0.c0 FROM v0 LEFT OUTER JOIN t0 ON t0.c2 GROUP BY t0.c2, t0.c1, v0.c0 HAVING t0.c0 UNION ALL SELECT ALL t0.c2, t0.c1, v0.c0 FROM v0 LEFT OUTER JOIN t0 ON t0.c2 GROUP BY t0.c2, t0.c1, v0.c0 HAVING (NOT (t0.c0)) UNION ALL SELECT t0.c2, t0.c1, v0.c0 FROM v0 LEFT OUTER JOIN t0 ON t0.c2 GROUP BY t0.c2, t0.c1, v0.c0 HAVING ((t0.c0) ISNULL);
SELECT ALL t0.c2, t0.c1, v0.c0 FROM v0 LEFT OUTER JOIN t0 ON t0.c2 GROUP BY t0.c2, t0.c1, v0.c0;
SELECT ALL TOTAL(((ABS(t0.c0)) ISNULL)) FROM v0, t0;
SELECT ALL * FROM v0, t0;
SELECT * FROM v0, t0 WHERE (v0.c0) UNION ALL SELECT ALL * FROM v0, t0 WHERE ((NOT (v0.c0))) UNION ALL SELECT ALL * FROM v0, t0 WHERE (((v0.c0) ISNULL));
SELECT ALL * FROM v0, t0;
SELECT DISTINCT * FROM v0, t0;
SELECT DISTINCT * FROM v0, t0 WHERE ((((UPPER(t0.c1)))<((LIKELY(DISTINCT v0.c0))))) UNION SELECT DISTINCT * FROM v0, t0 WHERE ((NOT ((((UPPER(t0.c1)))<((LIKELY(DISTINCT v0.c0))))))) UNION SELECT DISTINCT * FROM v0, t0 WHERE ((((((UPPER(t0.c1)))<((LIKELY(DISTINCT v0.c0))))) ISNULL));
SELECT DISTINCT * FROM v0, t0;
SELECT t0.c0, t0.c2 FROM t0 CROSS JOIN v0 ON (((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))>(((t0.c1) BETWEEN (t0.c0) AND (v0.c0)))) GROUP BY t0.c0, t0.c2;
SELECT t0.c0, t0.c2 FROM t0 CROSS JOIN v0 ON (((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))>(((t0.c1) BETWEEN (t0.c0) AND (v0.c0)))) WHERE ((((t0.c0 COLLATE RTRIM))>((((((v0.c0)AND(t0.c1)))OR(t0.c0)))))) GROUP BY t0.c0, t0.c2 UNION SELECT ALL t0.c0, t0.c2 FROM t0 CROSS JOIN v0 ON (((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))>(((t0.c1) BETWEEN (t0.c0) AND (v0.c0)))) WHERE ((NOT ((((t0.c0 COLLATE RTRIM))>((((((v0.c0)AND(t0.c1)))OR(t0.c0)))))))) GROUP BY t0.c0, t0.c2 UNION SELECT ALL t0.c0, t0.c2 FROM t0 CROSS JOIN v0 ON (((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))>(((t0.c1) BETWEEN (t0.c0) AND (v0.c0)))) WHERE ((((((t0.c0 COLLATE RTRIM))>((((((v0.c0)AND(t0.c1)))OR(t0.c0)))))) ISNULL)) GROUP BY t0.c0, t0.c2;
SELECT t0.c0, t0.c2 FROM t0 CROSS JOIN v0 ON (((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))>(((t0.c1) BETWEEN (t0.c0) AND (v0.c0)))) GROUP BY t0.c0, t0.c2;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING TOTAL((~ (TOTAL(SUM(v0.c0))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (TOTAL((~ (TOTAL(SUM(v0.c0))))))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((TOTAL((~ (TOTAL(SUM(v0.c0)))))) ISNULL);
SELECT ALL * FROM t0, v0;
SELECT ALL * FROM t0, v0 WHERE ((t0.c1 IN ()) COLLATE BINARY) UNION ALL SELECT * FROM t0, v0 WHERE ((NOT ((t0.c1 IN ()) COLLATE BINARY))) UNION ALL SELECT * FROM t0, v0 WHERE ((((t0.c1 IN ()) COLLATE BINARY) ISNULL));
SELECT ALL * FROM t0, v0;
SELECT DISTINCT v0.c0, t0.c1 FROM v0, t0;
SELECT DISTINCT v0.c0, t0.c1 FROM v0, t0 WHERE (CASE x'47bd'  WHEN t0.c1 THEN LTRIM('vaN	\<骖8\r', t0.c2) END) UNION SELECT DISTINCT v0.c0, t0.c1 FROM v0, t0 WHERE ((NOT (CASE x'47bd'  WHEN t0.c1 THEN LTRIM('vaN	\<骖8\r', t0.c2) END))) UNION SELECT DISTINCT v0.c0, t0.c1 FROM v0, t0 WHERE (((CASE x'47bd'  WHEN t0.c1 THEN LTRIM('vaN	\<骖8\r', t0.c2) END) ISNULL));
SELECT DISTINCT v0.c0, t0.c1 FROM v0, t0;
SELECT t0.c2, v0.c0, t0.c1 FROM t0 LEFT OUTER JOIN v0 ON (((('0.8979566109965287') NOTNULL)) NOTNULL) GROUP BY t0.c2, v0.c0, t0.c1;
SELECT t0.c2, v0.c0, t0.c1 FROM t0 LEFT OUTER JOIN v0 ON (((('0.8979566109965287') NOTNULL)) NOTNULL) WHERE (((((t0.c0)<>(t0.c0))) NOT BETWEEN (((((t0.c1)AND(NULL)))AND(t0.c2))) AND (CAST(v0.c0 AS NUMERIC)))) GROUP BY t0.c2, v0.c0, t0.c1 UNION SELECT t0.c2, v0.c0, t0.c1 FROM t0 LEFT OUTER JOIN v0 ON (((('0.8979566109965287') NOTNULL)) NOTNULL) WHERE ((NOT (((((t0.c0)<>(t0.c0))) NOT BETWEEN (((((t0.c1)AND(NULL)))AND(t0.c2))) AND (CAST(v0.c0 AS NUMERIC)))))) GROUP BY t0.c2, v0.c0, t0.c1 UNION SELECT t0.c2, v0.c0, t0.c1 FROM t0 LEFT OUTER JOIN v0 ON (((('0.8979566109965287') NOTNULL)) NOTNULL) WHERE (((((((t0.c0)<>(t0.c0))) NOT BETWEEN (((((t0.c1)AND(NULL)))AND(t0.c2))) AND (CAST(v0.c0 AS NUMERIC)))) ISNULL)) GROUP BY t0.c2, v0.c0, t0.c1;
SELECT t0.c2, v0.c0, t0.c1 FROM t0 LEFT OUTER JOIN v0 ON (((('0.8979566109965287') NOTNULL)) NOTNULL) GROUP BY t0.c2, v0.c0, t0.c1;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (~ ((- (TOTAL(MIN(SUM(v0.c0))))))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT ((~ ((- (TOTAL(MIN(SUM(v0.c0))))))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (((~ ((- (TOTAL(MIN(SUM(v0.c0)))))))) ISNULL);
SELECT ALL MAX(((v0.c0) NOTNULL) COLLATE BINARY) FROM v0;
SELECT * FROM t0, v0;
SELECT * FROM t0, v0 WHERE ((((NOT (t0.c1)))IS NOT(((((t0.c2)OR(t0.c2)))AND(t0.c1))))) ORDER BY ((((((t0.c2)AND(v0.c0)))OR(t0.c2)))||(((t0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))) DESC  NULLS FIRST, (((t0.c2 IN ()))LIKE(((t0.c2)GLOB(v0.c0)))) DESC;
SELECT ALL * FROM t0, v0 WHERE ((NOT ((((NOT (t0.c1)))IS NOT(((((t0.c2)OR(t0.c2)))AND(t0.c1))))))) ORDER BY ((((((t0.c2)AND(v0.c0)))OR(t0.c2)))||(((t0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))) DESC  NULLS FIRST, (((t0.c2 IN ()))LIKE(((t0.c2)GLOB(v0.c0)))) DESC;
SELECT ALL * FROM t0, v0 WHERE ((((((NOT (t0.c1)))IS NOT(((((t0.c2)OR(t0.c2)))AND(t0.c1))))) ISNULL)) ORDER BY ((((((t0.c2)AND(v0.c0)))OR(t0.c2)))||(((t0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))) DESC  NULLS FIRST, (((t0.c2 IN ()))LIKE(((t0.c2)GLOB(v0.c0)))) DESC;
SELECT * FROM t0, v0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (UPPER(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (UPPER(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))))) UNION SELECT DISTINCT * FROM v0 WHERE (((UPPER(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT v0.c0 FROM v0, t0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0, t0 WHERE ((+ (CAST(t0.c0 AS TEXT)))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0, t0 WHERE ((NOT ((+ (CAST(t0.c0 AS TEXT)))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0, t0 WHERE ((((+ (CAST(t0.c0 AS TEXT)))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0, t0 GROUP BY v0.c0;
SELECT t0.c1 FROM v0, t0 GROUP BY t0.c1;
SELECT ALL t0.c1 FROM v0, t0 GROUP BY t0.c1 HAVING COUNT(*) UNION ALL SELECT ALL t0.c1 FROM v0, t0 GROUP BY t0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL t0.c1 FROM v0, t0 GROUP BY t0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT t0.c1 FROM v0, t0 GROUP BY t0.c1;
SELECT ALL t0.c1 FROM v0, t0 GROUP BY t0.c1 HAVING COUNT(*) UNION ALL SELECT ALL t0.c1 FROM v0, t0 GROUP BY t0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL t0.c1 FROM v0, t0 GROUP BY t0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT t0.c1 FROM v0, t0 GROUP BY t0.c1;
SELECT * FROM v0, t0;
SELECT ALL * FROM v0, t0 WHERE (((json_extract(t0.c2, t0.c2)) NOT BETWEEN (CASE WHEN v0.c0 THEN t0.c0 ELSE t0.c1 END) AND ((~ (NULL))))) UNION ALL SELECT ALL * FROM v0, t0 WHERE ((NOT (((json_extract(t0.c2, t0.c2)) NOT BETWEEN (CASE WHEN v0.c0 THEN t0.c0 ELSE t0.c1 END) AND ((~ (NULL))))))) UNION ALL SELECT ALL * FROM v0, t0 WHERE (((((json_extract(t0.c2, t0.c2)) NOT BETWEEN (CASE WHEN v0.c0 THEN t0.c0 ELSE t0.c1 END) AND ((~ (NULL))))) ISNULL));
SELECT * FROM v0, t0;
SELECT DISTINCT t0.c1, v0.c0 FROM t0, v0;
SELECT DISTINCT t0.c1, v0.c0 FROM t0, v0 WHERE (t0.c0) UNION SELECT DISTINCT t0.c1, v0.c0 FROM t0, v0 WHERE ((NOT (t0.c0))) UNION SELECT DISTINCT t0.c1, v0.c0 FROM t0, v0 WHERE (((t0.c0) ISNULL));
SELECT DISTINCT t0.c1, v0.c0 FROM t0, v0;
SELECT ALL t0.c1, v0.c0, t0.c0, t0.c2 FROM v0, t0 GROUP BY t0.c1, v0.c0, t0.c0, t0.c2;
SELECT ALL t0.c1, v0.c0, t0.c0, t0.c2 FROM v0, t0 WHERE (CAST(NULL COLLATE BINARY AS NUMERIC)) GROUP BY t0.c1, v0.c0, t0.c0, t0.c2 UNION SELECT t0.c1, v0.c0, t0.c0, t0.c2 FROM v0, t0 WHERE ((NOT (CAST(NULL COLLATE BINARY AS NUMERIC)))) GROUP BY t0.c1, v0.c0, t0.c0, t0.c2 UNION SELECT ALL t0.c1, v0.c0, t0.c0, t0.c2 FROM v0, t0 WHERE (((CAST(NULL COLLATE BINARY AS NUMERIC)) ISNULL)) GROUP BY t0.c1, v0.c0, t0.c0, t0.c2;
SELECT ALL t0.c1, v0.c0, t0.c0, t0.c2 FROM v0, t0 GROUP BY t0.c1, v0.c0, t0.c0, t0.c2;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING MAX(AVG(COUNT(*))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (MAX(AVG(COUNT(*))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((MAX(AVG(COUNT(*)))) ISNULL);
SELECT v0.c0, t0.c1, t0.c2 FROM t0, v0;
SELECT v0.c0, t0.c1, t0.c2 FROM t0, v0 WHERE (((v0.c0 COLLATE BINARY)=(((t0.c2)<=(t0.c2))))) UNION ALL SELECT v0.c0, t0.c1, t0.c2 FROM t0, v0 WHERE ((NOT (((v0.c0 COLLATE BINARY)==(((t0.c2)<=(t0.c2))))))) UNION ALL SELECT v0.c0, t0.c1, t0.c2 FROM t0, v0 WHERE (((((v0.c0 COLLATE BINARY)==(((t0.c2)<=(t0.c2))))) ISNULL));
SELECT v0.c0, t0.c1, t0.c2 FROM t0, v0;
SELECT DISTINCT t0.c1, v0.c0 FROM v0 LEFT OUTER JOIN t0 ON (((((t0.c2)AND(t0.c0)))AND(v0.c0)) IN (CAST(t0.c0 AS TEXT)));
SELECT DISTINCT t0.c1, v0.c0 FROM v0 LEFT OUTER JOIN t0 ON (((((t0.c2)AND(t0.c0)))AND(v0.c0)) IN (CAST(t0.c0 AS TEXT))) WHERE (((CASE t0.c1  WHEN v0.c0 THEN t0.c2 ELSE t0.c0 END)||('l\r4{yL!#'))) UNION SELECT DISTINCT t0.c1, v0.c0 FROM v0 LEFT OUTER JOIN t0 ON (((((t0.c2)AND(t0.c0)))AND(v0.c0)) IN (CAST(t0.c0 AS TEXT))) WHERE ((NOT (((CASE t0.c1  WHEN v0.c0 THEN t0.c2 ELSE t0.c0 END)||('l\r4{yL!#'))))) UNION SELECT DISTINCT t0.c1, v0.c0 FROM v0 LEFT OUTER JOIN t0 ON (((((t0.c2)AND(t0.c0)))AND(v0.c0)) IN (CAST(t0.c0 AS TEXT))) WHERE (((((CASE t0.c1  WHEN v0.c0 THEN t0.c2 ELSE t0.c0 END)||('l\r4{yL!#'))) ISNULL));
SELECT DISTINCT t0.c1, v0.c0 FROM v0 LEFT OUTER JOIN t0 ON (((((t0.c2)AND(t0.c0)))AND(v0.c0)) IN (CAST(t0.c0 AS TEXT)));
SELECT ALL v0.c0 FROM t0, v0 GROUP BY v0.c0;
SELECT v0.c0 FROM t0, v0 WHERE ((('W1') IS FALSE)) GROUP BY v0.c0 UNION SELECT v0.c0 FROM t0, v0 WHERE ((NOT ((('W1') IS FALSE)))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM t0, v0 WHERE ((((('W1') IS FALSE)) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM t0, v0 GROUP BY v0.c0;
SELECT ALL t0.c2, t0.c1, v0.c0, t0.c0 FROM v0 INNER JOIN t0 ON (((((t0.c2)OR(t0.c2)))AND(v0.c0)) IN ()) GROUP BY t0.c2, t0.c1, v0.c0, t0.c0;
SELECT ALL t0.c2, t0.c1, v0.c0, t0.c0 FROM v0 INNER JOIN t0 ON (((((t0.c2)OR(t0.c2)))AND(v0.c0)) IN ()) GROUP BY t0.c2, t0.c1, v0.c0, t0.c0 HAVING LENGTH(SUM(t0.c1)) UNION ALL SELECT t0.c2, t0.c1, v0.c0, t0.c0 FROM v0 INNER JOIN t0 ON (((((t0.c2)OR(t0.c2)))AND(v0.c0)) IN ()) GROUP BY t0.c2, t0.c1, v0.c0, t0.c0 HAVING (NOT (LENGTH(SUM(t0.c1)))) UNION ALL SELECT t0.c2, t0.c1, v0.c0, t0.c0 FROM v0 INNER JOIN t0 ON (((((t0.c2)OR(t0.c2)))AND(v0.c0)) IN ()) GROUP BY t0.c2, t0.c1, v0.c0, t0.c0 HAVING ((LENGTH(SUM(t0.c1))) ISNULL);
SELECT ALL t0.c2, t0.c1, v0.c0, t0.c0 FROM v0 INNER JOIN t0 ON (((((t0.c2)OR(t0.c2)))AND(v0.c0)) IN ()) GROUP BY t0.c2, t0.c1, v0.c0, t0.c0;
SELECT ALL t0.c2, t0.c1, v0.c0, t0.c0 FROM v0 INNER JOIN t0 ON (((((t0.c2)OR(t0.c2)))AND(v0.c0)) IN ()) GROUP BY t0.c2, t0.c1, v0.c0, t0.c0 HAVING LENGTH(SUM(t0.c1)) UNION ALL SELECT t0.c2, t0.c1, v0.c0, t0.c0 FROM v0 INNER JOIN t0 ON (((((t0.c2)OR(t0.c2)))AND(v0.c0)) IN ()) GROUP BY t0.c2, t0.c1, v0.c0, t0.c0 HAVING (NOT (LENGTH(SUM(t0.c1)))) UNION ALL SELECT t0.c2, t0.c1, v0.c0, t0.c0 FROM v0 INNER JOIN t0 ON (((((t0.c2)OR(t0.c2)))AND(v0.c0)) IN ()) GROUP BY t0.c2, t0.c1, v0.c0, t0.c0 HAVING ((LENGTH(SUM(t0.c1))) ISNULL);
SELECT ALL t0.c2, t0.c1, v0.c0, t0.c0 FROM v0 INNER JOIN t0 ON (((((t0.c2)OR(t0.c2)))AND(v0.c0)) IN ()) GROUP BY t0.c2, t0.c1, v0.c0, t0.c0;
SELECT t0.c1, t0.c2, v0.c0, t0.c0 FROM v0, t0;
SELECT ALL t0.c1, t0.c2, v0.c0, t0.c0 FROM v0, t0 WHERE ((CAST(t0.c0 AS INTEGER) IN ())) UNION ALL SELECT ALL t0.c1, t0.c2, v0.c0, t0.c0 FROM v0, t0 WHERE ((NOT ((CAST(t0.c0 AS INTEGER) IN ())))) UNION ALL SELECT ALL t0.c1, t0.c2, v0.c0, t0.c0 FROM v0, t0 WHERE ((((CAST(t0.c0 AS INTEGER) IN ())) ISNULL));
SELECT t0.c1, t0.c2, v0.c0, t0.c0 FROM v0, t0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE ((((+ (v0.c0))) IS TRUE)) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT ((((+ (v0.c0))) IS TRUE)))) UNION SELECT DISTINCT * FROM v0 WHERE ((((((+ (v0.c0))) IS TRUE)) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT v0.c0, t0.c0 FROM t0, v0 GROUP BY v0.c0, t0.c0;
SELECT ALL v0.c0, t0.c0 FROM t0, v0 WHERE (((((((((((t0.c2)OR(t0.c2)))OR(v0.c0)))AND(t0.c0)))AND(t0.c1)))OR((t0.c2 IN (t0.c2))))) GROUP BY v0.c0, t0.c0 UNION SELECT v0.c0, t0.c0 FROM t0, v0 WHERE ((NOT (((((((((((t0.c2)OR(t0.c2)))OR(v0.c0)))AND(t0.c0)))AND(t0.c1)))OR((t0.c2 IN (t0.c2))))))) GROUP BY v0.c0, t0.c0 UNION SELECT v0.c0, t0.c0 FROM t0, v0 WHERE (((((((((((((t0.c2)OR(t0.c2)))OR(v0.c0)))AND(t0.c0)))AND(t0.c1)))OR((t0.c2 IN (t0.c2))))) ISNULL)) GROUP BY v0.c0, t0.c0;
SELECT v0.c0, t0.c0 FROM t0, v0 GROUP BY v0.c0, t0.c0;
SELECT v0.c0, t0.c2, t0.c0, t0.c1 FROM t0, v0 GROUP BY v0.c0, t0.c2, t0.c0, t0.c1;
SELECT ALL v0.c0, t0.c2, t0.c0, t0.c1 FROM t0, v0 GROUP BY v0.c0, t0.c2, t0.c0, t0.c1 HAVING SUM(TOTAL(t0.c0)) UNION ALL SELECT v0.c0, t0.c2, t0.c0, t0.c1 FROM t0, v0 GROUP BY v0.c0, t0.c2, t0.c0, t0.c1 HAVING (NOT (SUM(TOTAL(t0.c0)))) UNION ALL SELECT v0.c0, t0.c2, t0.c0, t0.c1 FROM t0, v0 GROUP BY v0.c0, t0.c2, t0.c0, t0.c1 HAVING ((SUM(TOTAL(t0.c0))) ISNULL);
SELECT ALL t0.c0 FROM t0;
SELECT ALL t0.c0 FROM t0 WHERE (0.6842340067426713) UNION ALL SELECT ALL t0.c0 FROM t0 WHERE ((NOT (0.6842340067426713))) UNION ALL SELECT ALL t0.c0 FROM t0 WHERE (((0.6842340067426713) ISNULL));
SELECT ALL t0.c0 FROM t0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE ((LOWER(DISTINCT t0.c1) IN ())) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT ((LOWER(DISTINCT t0.c1) IN ())))) UNION SELECT DISTINCT * FROM t0 WHERE ((((LOWER(DISTINCT t0.c1) IN ())) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT t0.c1, t0.c0, t0.c2 FROM t0 GROUP BY t0.c1, t0.c0, t0.c2;
SELECT t0.c1, t0.c0, t0.c2 FROM t0 WHERE (CASE x''  WHEN (~ (t0.c0)) THEN CAST(t0.c0 AS REAL) WHEN (t0.c1 IN ()) THEN ((t0.c2)*(t0.c1)) WHEN (NOT (t0.c1)) THEN '' ELSE ((t0.c1)==(t0.c1)) END) GROUP BY t0.c1, t0.c0, t0.c2 UNION SELECT t0.c1, t0.c0, t0.c2 FROM t0 WHERE ((NOT (CASE x''  WHEN (~ (t0.c0)) THEN CAST(t0.c0 AS REAL) WHEN (t0.c1 IN ()) THEN ((t0.c2)*(t0.c1)) WHEN (NOT (t0.c1)) THEN '' ELSE ((t0.c1)==(t0.c1)) END))) GROUP BY t0.c1, t0.c0, t0.c2 UNION SELECT t0.c1, t0.c0, t0.c2 FROM t0 WHERE (((CASE x''  WHEN (~ (t0.c0)) THEN CAST(t0.c0 AS REAL) WHEN (t0.c1 IN ()) THEN ((t0.c2)*(t0.c1)) WHEN (NOT (t0.c1)) THEN '' ELSE ((t0.c1)=(t0.c1)) END) ISNULL)) GROUP BY t0.c1, t0.c0, t0.c2;
SELECT t0.c1, t0.c0, t0.c2 FROM t0 GROUP BY t0.c1, t0.c0, t0.c2;
SELECT ALL t0.c2 FROM t0 GROUP BY t0.c2;
SELECT t0.c2 FROM t0 GROUP BY t0.c2 HAVING MAX(AVG(t0.c2)) UNION ALL SELECT t0.c2 FROM t0 GROUP BY t0.c2 HAVING (NOT (MAX(AVG(t0.c2)))) UNION ALL SELECT t0.c2 FROM t0 GROUP BY t0.c2 HAVING ((MAX(AVG(t0.c2))) ISNULL);
SELECT * FROM v0;
SELECT ALL * FROM v0 WHERE (v0.c0) UNION ALL SELECT * FROM v0 WHERE ((NOT (v0.c0))) UNION ALL SELECT * FROM v0 WHERE (((v0.c0) ISNULL));
SELECT * FROM v0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 NOT INDEXED WHERE (((((((((t0.c1)OR(t0.c2)))AND(t0.c1)))OR((+ (t0.c2)))))OR(((t0.c0)>>(t0.c1))))) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (((((((((t0.c1)OR(t0.c2)))AND(t0.c1)))OR((+ (t0.c2)))))OR(((t0.c0)>>(t0.c1))))))) UNION SELECT DISTINCT * FROM t0 WHERE (((((((((((t0.c1)OR(t0.c2)))AND(t0.c1)))OR((+ (t0.c2)))))OR(((t0.c0)>>(t0.c1))))) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT t0.c0, t0.c1, t0.c2 FROM t0 NOT INDEXED GROUP BY t0.c0, t0.c1, t0.c2;
SELECT ALL t0.c0, t0.c1, t0.c2 FROM t0 WHERE (((json_array_length(t0.c1))-('\n^1PQ}mﱡ'))) GROUP BY t0.c0, t0.c1, t0.c2 UNION SELECT t0.c0, t0.c1, t0.c2 FROM t0 WHERE ((NOT (((json_array_length(t0.c1))-('\n^1PQ}mﱡ'))))) GROUP BY t0.c0, t0.c1, t0.c2 UNION SELECT t0.c0, t0.c1, t0.c2 FROM t0 WHERE (((((json_array_length(t0.c1))-('\n^1PQ}mﱡ'))) ISNULL)) GROUP BY t0.c0, t0.c1, t0.c2;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((MIN(v0.c0))!=(((v0.c0)&(v0.c0)))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (((MIN(v0.c0))!=(((v0.c0)&(v0.c0)))))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((((MIN(v0.c0))!=(((v0.c0)&(v0.c0))))) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((MIN(v0.c0))!=(((v0.c0)&(v0.c0)))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (((MIN(v0.c0))!=(((v0.c0)&(v0.c0)))))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((((MIN(v0.c0))!=(((v0.c0)&(v0.c0))))) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL * FROM t0;
SELECT * FROM t0 WHERE (((((t0.c1) IS FALSE)) IS FALSE)) UNION ALL SELECT ALL * FROM t0 WHERE ((NOT (((((t0.c1) IS FALSE)) IS FALSE)))) UNION ALL SELECT ALL * FROM t0 WHERE (((((((t0.c1) IS FALSE)) IS FALSE)) ISNULL));
SELECT ALL * FROM t0;
SELECT DISTINCT v0.c0, t0.c2, t0.c0 FROM t0 LEFT OUTER JOIN v0 ON ((v0.c0)LIKE(((v0.c0) NOT NULL)));
SELECT DISTINCT v0.c0, t0.c2, t0.c0 FROM t0 LEFT OUTER JOIN v0 ON ((v0.c0)LIKE(((v0.c0) NOT NULL))) WHERE ((((((t0.c1) NOT BETWEEN (v0.c0) AND (t0.c1)), ((0.8919496744496509)/(t0.c0)), (NOT (t0.c2))))<>(((((t0.c1, v0.c0, t0.c0)) NOT BETWEEN ((t0.c2, t0.c2, 'b<G')) AND ((t0.c0, t0.c1, t0.c0))), v0.c0 COLLATE BINARY, CAST(t0.c0 AS TEXT))))) UNION SELECT DISTINCT v0.c0, t0.c2, t0.c0 FROM t0 LEFT OUTER JOIN v0 ON ((v0.c0)LIKE(((v0.c0) NOT NULL))) WHERE ((NOT ((((((t0.c1) NOT BETWEEN (v0.c0) AND (t0.c1)), ((0.8919496744496509)/(t0.c0)), (NOT (t0.c2))))!=(((((t0.c1, v0.c0, t0.c0)) NOT BETWEEN ((t0.c2, t0.c2, 'b<G')) AND ((t0.c0, t0.c1, t0.c0))), v0.c0 COLLATE BINARY, CAST(t0.c0 AS TEXT))))))) UNION SELECT DISTINCT v0.c0, t0.c2, t0.c0 FROM t0 LEFT OUTER JOIN v0 ON ((v0.c0)LIKE(((v0.c0) NOT NULL))) WHERE ((((((((t0.c1) NOT BETWEEN (v0.c0) AND (t0.c1)), ((0.8919496744496509)/(t0.c0)), (NOT (t0.c2))))!=(((((t0.c1, v0.c0, t0.c0)) NOT BETWEEN ((t0.c2, t0.c2, 'b<G')) AND ((t0.c0, t0.c1, t0.c0))), v0.c0 COLLATE BINARY, CAST(t0.c0 AS TEXT))))) ISNULL));
SELECT DISTINCT v0.c0, t0.c2, t0.c0 FROM t0 LEFT OUTER JOIN v0 ON ((v0.c0)LIKE(((v0.c0) NOT NULL)));
SELECT t0.c1, t0.c0, t0.c2 FROM v0, t0 GROUP BY t0.c1, t0.c0, t0.c2;
SELECT ALL t0.c1, t0.c0, t0.c2 FROM v0, t0 WHERE (((CAST(t0.c2 AS REAL))>=(v0.c0 COLLATE BINARY))) GROUP BY t0.c1, t0.c0, t0.c2 UNION SELECT t0.c1, t0.c0, t0.c2 FROM v0, t0 WHERE ((NOT (((CAST(t0.c2 AS REAL))>=(v0.c0 COLLATE BINARY))))) GROUP BY t0.c1, t0.c0, t0.c2 UNION SELECT t0.c1, t0.c0, t0.c2 FROM v0, t0 WHERE (((((CAST(t0.c2 AS REAL))>=(v0.c0 COLLATE BINARY))) ISNULL)) GROUP BY t0.c1, t0.c0, t0.c2;
SELECT t0.c1, t0.c0, t0.c2 FROM v0, t0 GROUP BY t0.c1, t0.c0, t0.c2;
SELECT ALL t0.c0, t0.c2, t0.c1, v0.c0 FROM v0 FULL OUTER JOIN t0 ON (((v0.c0))<((((((t0.c0)AND(v0.c0)))OR(t0.c2))))) GROUP BY t0.c0, t0.c2, t0.c1, v0.c0;
SELECT ALL t0.c0, t0.c2, t0.c1, v0.c0 FROM v0 FULL OUTER JOIN t0 ON (((v0.c0))<((((((t0.c0)AND(v0.c0)))OR(t0.c2))))) GROUP BY t0.c0, t0.c2, t0.c1, v0.c0 HAVING COUNT(*) UNION ALL SELECT ALL t0.c0, t0.c2, t0.c1, v0.c0 FROM v0 FULL OUTER JOIN t0 ON (((v0.c0))<((((((t0.c0)AND(v0.c0)))OR(t0.c2))))) GROUP BY t0.c0, t0.c2, t0.c1, v0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL t0.c0, t0.c2, t0.c1, v0.c0 FROM v0 FULL OUTER JOIN t0 ON (((v0.c0))<((((((t0.c0)AND(v0.c0)))OR(t0.c2))))) GROUP BY t0.c0, t0.c2, t0.c1, v0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL t0.c0, t0.c2, t0.c1, v0.c0 FROM v0 FULL OUTER JOIN t0 ON (((v0.c0))<((((((t0.c0)AND(v0.c0)))OR(t0.c2))))) GROUP BY t0.c0, t0.c2, t0.c1, v0.c0;
SELECT ALL t0.c0, t0.c2, t0.c1, v0.c0 FROM v0 FULL OUTER JOIN t0 ON (((v0.c0))<((((((t0.c0)AND(v0.c0)))OR(t0.c2))))) GROUP BY t0.c0, t0.c2, t0.c1, v0.c0 HAVING COUNT(*) UNION ALL SELECT ALL t0.c0, t0.c2, t0.c1, v0.c0 FROM v0 FULL OUTER JOIN t0 ON (((v0.c0))<((((((t0.c0)AND(v0.c0)))OR(t0.c2))))) GROUP BY t0.c0, t0.c2, t0.c1, v0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL t0.c0, t0.c2, t0.c1, v0.c0 FROM v0 FULL OUTER JOIN t0 ON (((v0.c0))<((((((t0.c0)AND(v0.c0)))OR(t0.c2))))) GROUP BY t0.c0, t0.c2, t0.c1, v0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL t0.c0, t0.c2, t0.c1, v0.c0 FROM v0 FULL OUTER JOIN t0 ON (((v0.c0))<((((((t0.c0)AND(v0.c0)))OR(t0.c2))))) GROUP BY t0.c0, t0.c2, t0.c1, v0.c0;
SELECT * FROM t0, v0;
SELECT * FROM t0, v0 WHERE (((x'aeb2') BETWEEN ((v0.c0 IN ())) AND ((t0.c1 IN (v0.c0))))) UNION ALL SELECT * FROM t0, v0 WHERE ((NOT (((x'aeb2') BETWEEN ((v0.c0 IN ())) AND ((t0.c1 IN (v0.c0))))))) UNION ALL SELECT * FROM t0, v0 WHERE (((((x'aeb2') BETWEEN ((v0.c0 IN ())) AND ((t0.c1 IN (v0.c0))))) ISNULL));
SELECT * FROM t0, v0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (((((v0.c0)OR((+ (v0.c0)))))AND(v0.c0 COLLATE NOCASE))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (((((v0.c0)OR((+ (v0.c0)))))AND(v0.c0 COLLATE NOCASE))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((((((v0.c0)OR((+ (v0.c0)))))AND(v0.c0 COLLATE NOCASE))) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT ALL t0.c1 FROM t0, v0 GROUP BY t0.c1;
SELECT t0.c1 FROM t0, v0 WHERE ((0.7937718677083112 IN ())) GROUP BY t0.c1 UNION SELECT t0.c1 FROM t0, v0 WHERE ((NOT ((0.7937718677083112 IN ())))) GROUP BY t0.c1 UNION SELECT t0.c1 FROM t0, v0 WHERE ((((0.7937718677083112 IN ())) ISNULL)) GROUP BY t0.c1;
SELECT ALL t0.c1 FROM t0, v0 GROUP BY t0.c1;
SELECT t0.c1, t0.c2 FROM t0, v0 GROUP BY t0.c1, t0.c2;
SELECT ALL t0.c1, t0.c2 FROM t0, v0 GROUP BY t0.c1, t0.c2 HAVING GROUP_CONCAT(COUNT(t0.c1)) UNION ALL SELECT ALL t0.c1, t0.c2 FROM t0, v0 GROUP BY t0.c1, t0.c2 HAVING (NOT (GROUP_CONCAT(COUNT(t0.c1)))) UNION ALL SELECT t0.c1, t0.c2 FROM t0, v0 GROUP BY t0.c1, t0.c2 HAVING ((GROUP_CONCAT(COUNT(t0.c1))) ISNULL);
SELECT ALL t0.c2 FROM t0;
SELECT t0.c2 FROM t0 WHERE (UNLIKELY((((t0.c1)) NOT BETWEEN ((0.2409861950141735)) AND ((t0.c2))))) UNION ALL SELECT ALL t0.c2 FROM t0 WHERE ((NOT (UNLIKELY((((t0.c1)) NOT BETWEEN ((0.2409861950141735)) AND ((t0.c2))))))) UNION ALL SELECT t0.c2 FROM t0 WHERE (((UNLIKELY((((t0.c1)) NOT BETWEEN ((0.2409861950141735)) AND ((t0.c2))))) ISNULL));
SELECT ALL t0.c2 FROM t0;
SELECT DISTINCT * FROM v0, t0;
SELECT DISTINCT * FROM v0, t0 WHERE (CAST('' AS REAL)) UNION SELECT DISTINCT * FROM v0, t0 WHERE ((NOT (CAST('' AS REAL)))) UNION SELECT DISTINCT * FROM v0, t0 WHERE (((CAST('' AS REAL)) ISNULL));
SELECT DISTINCT * FROM v0, t0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (CAST(((v0.c0)+(v0.c0)) AS TEXT)) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT (CAST(((v0.c0)+(v0.c0)) AS TEXT)))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE (((CAST(((v0.c0)+(v0.c0)) AS TEXT)) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
