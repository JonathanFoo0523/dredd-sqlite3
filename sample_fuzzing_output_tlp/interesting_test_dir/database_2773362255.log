-- Time: 2024/06/10 03:09:08
-- Database: database55
-- Database version: 3.40.0
-- seed value: 2773362255
PRAGMA cache_size = 50000; -- 1ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA case_sensitive_like=ON; -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree_i32(c0, c1, c2, c3, c4, +c5 INT , +c6 INT ); -- 0ms;
COMMIT; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
UPDATE rt0 SET (c2, c3)=(0.8113354602212344, 913823746); -- 0ms;
SELECT rtreecheck('rt0'); -- 0ms;
UPDATE OR ABORT rt0 SET (c3)=(NULL); -- 0ms;
END; -- 0ms;
END; -- 0ms;
UPDATE rt0 SET (c2)=(0.16514471856118695); -- 1ms;
ANALYZE; -- 1ms;
UPDATE OR IGNORE rt0 SET (c3)=('-557063378') WHERE ((((CAST(rt0.c5 AS REAL))OR(0.3269264400437172)))AND(CAST(rt0.c1 AS BLOB))); -- 0ms;
ANALYZE; -- 0ms;
UPDATE rt0 SET (c3)=(NULL); -- 0ms;
UPDATE OR ROLLBACK rt0 SET (c6)=(1330312517); -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
ANALYZE; -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
VACUUM temp; -- 2ms;
UPDATE OR IGNORE rt0 SET (c3)=(NULL) WHERE ((((rt0.c0) BETWEEN (rt0.c3) AND (rt0.c4))) IS TRUE); -- 1ms;
UPDATE rt0 SET (c4)=('J5'); -- 0ms;
REINDEX; -- 0ms;
PRAGMA locking_mode = EXCLUSIVE; -- 0ms;
DELETE FROM rt0 WHERE ((CASE WHEN NULL THEN rt0.c6 ELSE rt0.c2 END)==(rt0.c0 COLLATE BINARY)); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
PRAGMA journal_size_limit = 8788299958319409720; -- 0ms;
INSERT OR IGNORE INTO rt0(c6, c5, c1) VALUES (x'', '', NULL), ('0.3269264400437172', 9.13823746E8, x''), ('', x'', '0.3269264400437172'); -- 5ms;
INSERT OR FAIL INTO rt0(c4, c0, c2, c5, c3, c6, c1) VALUES (0X666e582a, 0.5465124151593944, x'f9d7', 913823746, 0X7d202b5d, NULL, '1718507562'); -- 0ms;
INSERT OR IGNORE INTO rt0(c0, c5, c4, c3, c2, c6) VALUES ('堪Fi+蹹af\n', NULL, x'530f', -557063378, '-453922715', NULL); -- 4ms;
UPDATE rt0 SET c4=0.6008453123282173 WHERE 0.7984489367788951; -- 0ms;
INSERT OR IGNORE INTO rt0(c6, c1, c3, c0, c2) VALUES ('SE', '', x'', 913823746, NULL); -- 0ms;
ANALYZE; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO rt0(c2, c1, c4, c5, c6, c3, c0) VALUES (0.06263035911615245, x'c32e', '堪fi+蹹af\n', -4.53922715E8, NULL, -723677093, ''), ('-723677093', x'', 0.15750349520356155, '}', '0.3269264400437172', NULL, 0.7385119892181384), (x'', 0.4103267554787776, '', '堪^', '1330312517', NULL, 0Xffffffffe4f1b065); -- 1ms;
CREATE TEMP VIEW  IF NOT EXISTS v0(c0, c1, c2) AS SELECT (NOT (((rt0.c2)IS NOT(x'')))), (+ (((rt0.c0)OR('Jm')))), CAST(((0.6317291259658998) BETWEEN (rt0.c4) AND (rt0.c6)) AS TEXT) FROM rt0; -- 0ms;
ANALYZE sqlite_master; -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
ANALYZE rt0; -- 0ms;
UPDATE OR IGNORE rt0 SET (c4)=(0X60b94833); -- 0ms;
INSERT OR FAIL INTO rt0(c4, c3, c2) VALUES (x'', '', -3.17223303E8), (776608484, NULL, x''), (0.5465124151593944, NULL, x'6f57'), (x'', 0.7294811255773191, 0.27007297244314354), (x'', 2099260253, x''); -- 0ms;
INSERT OR IGNORE INTO rt0(c1, c2) VALUES (x'', NULL); -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO rt0(c3, c0, c4, c2, c1, c5) VALUES (NULL, x'', '', '', x'', '776608484'); -- 0ms;
ANALYZE; -- 0ms;
INSERT OR IGNORE INTO rt0(c2, c1, c6, c3, c5, c0, c4) VALUES (x'', x'', 913823746, ']q?d	?', 0.00510711735790248, '308826477', 0.06263035911615245); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
ANALYZE main; -- 0ms;
UPDATE OR ROLLBACK rt0 SET c2=x'' WHERE ((((rt0.c2)>=(rt0.c3))) NOT BETWEEN (((rt0.c2) BETWEEN ('/ 2)V') AND (rt0.c5))) AND (CAST(rt0.c2 AS REAL))); -- 0ms;
SELECT rtreecheck('rt0'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
UPDATE rt0 SET c5=0.5876975225266161, c2=0.865383256874581, c5=x'' WHERE ((rt0.c0 COLLATE BINARY) BETWEEN (rt0.c1) AND (CAST(rt0.c2 AS NUMERIC))); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
CREATE TEMPORARY TABLE t72 (c0 REAL ); -- 0ms;
ALTER TABLE t72 RENAME TO t0; -- 0ms;
UPDATE OR IGNORE rt0 SET c6=0.44710054284383616 WHERE (- (((rt0.c3) BETWEEN (rt0.c5) AND (rt0.c5)))); -- 0ms;
VACUUM; -- 0ms;
VACUUM; -- 0ms;
VACUUM temp; -- 0ms;
PRAGMA temp.defer_foreign_keys = false; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
UPDATE OR IGNORE t0 SET c0=x'7e67', c0='h(t 89'; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
COMMIT; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT * FROM t0 NATURAL JOIN rt0;
SELECT * FROM t0 NATURAL JOIN rt0 WHERE (((rt0.c4)-(((-3.17223303E8) ISNULL)))) UNION ALL SELECT * FROM t0 NATURAL JOIN rt0 WHERE ((NOT (((rt0.c4)-(((-3.17223303E8) ISNULL)))))) UNION ALL SELECT ALL * FROM t0 NATURAL JOIN rt0 WHERE (((((rt0.c4)-(((-3.17223303E8) ISNULL)))) ISNULL));
SELECT * FROM t0 NATURAL JOIN rt0;
SELECT DISTINCT * FROM rt0, t0;
SELECT DISTINCT * FROM rt0, t0 WHERE (((rt0.c1) NOTNULL)) UNION SELECT DISTINCT * FROM rt0, t0 WHERE ((NOT (((rt0.c1) NOTNULL)))) UNION SELECT DISTINCT * FROM rt0, t0 WHERE (((((rt0.c1) NOTNULL)) ISNULL));
SELECT DISTINCT * FROM rt0, t0;
SELECT rt0.c4, v0.c2, rt0.c0 FROM v0, rt0, t0 GROUP BY rt0.c4, v0.c2, rt0.c0;
SELECT rt0.c4, v0.c2, rt0.c0 FROM v0, rt0, t0 WHERE (((((v0.c0)LIKE(t0.c0)))LIKE(((rt0.c3)>>(rt0.c5))))) GROUP BY rt0.c4, v0.c2, rt0.c0 UNION SELECT rt0.c4, v0.c2, rt0.c0 FROM v0, rt0, t0 WHERE ((NOT (((((v0.c0)LIKE(t0.c0)))LIKE(((rt0.c3)>>(rt0.c5))))))) GROUP BY rt0.c4, v0.c2, rt0.c0 UNION SELECT ALL rt0.c4, v0.c2, rt0.c0 FROM v0, rt0, t0 WHERE (((((((v0.c0)LIKE(t0.c0)))LIKE(((rt0.c3)>>(rt0.c5))))) ISNULL)) GROUP BY rt0.c4, v0.c2, rt0.c0;
SELECT rt0.c4, v0.c2, rt0.c0 FROM v0, rt0, t0 GROUP BY rt0.c4, v0.c2, rt0.c0;
SELECT ALL rt0.c5, rt0.c2, rt0.c6, rt0.c4, rt0.c0 FROM v0, rt0 GROUP BY rt0.c5, rt0.c2, rt0.c6, rt0.c4, rt0.c0;
SELECT rt0.c5, rt0.c2, rt0.c6, rt0.c4, rt0.c0 FROM v0, rt0 GROUP BY rt0.c5, rt0.c2, rt0.c6, rt0.c4, rt0.c0 HAVING TOTAL(MIN(v0.c1)) UNION ALL SELECT ALL rt0.c5, rt0.c2, rt0.c6, rt0.c4, rt0.c0 FROM v0, rt0 GROUP BY rt0.c5, rt0.c2, rt0.c6, rt0.c4, rt0.c0 HAVING (NOT (TOTAL(MIN(v0.c1)))) UNION ALL SELECT ALL rt0.c5, rt0.c2, rt0.c6, rt0.c4, rt0.c0 FROM v0, rt0 GROUP BY rt0.c5, rt0.c2, rt0.c6, rt0.c4, rt0.c0 HAVING ((TOTAL(MIN(v0.c1))) ISNULL);
SELECT ALL v0.c2, v0.c0, t0.c0 FROM t0, v0;
SELECT ALL v0.c2, v0.c0, t0.c0 FROM t0, v0 WHERE (LOWER(((v0.c2) NOTNULL))) UNION ALL SELECT v0.c2, v0.c0, t0.c0 FROM t0, v0 WHERE ((NOT (LOWER(((v0.c2) NOTNULL))))) UNION ALL SELECT v0.c2, v0.c0, t0.c0 FROM t0, v0 WHERE (((LOWER(((v0.c2) NOTNULL))) ISNULL));
SELECT ALL v0.c2, v0.c0, t0.c0 FROM t0, v0;
SELECT DISTINCT * FROM rt0, t0;
SELECT DISTINCT * FROM rt0, t0 WHERE (((((((((((t0.c0)OR(rt0.c3)))OR(rt0.c2)))AND(rt0.c3)))AND(rt0.c1)))|(rt0.c4 COLLATE BINARY))) UNION SELECT DISTINCT * FROM rt0, t0 WHERE ((NOT (((((((((((t0.c0)OR(rt0.c3)))OR(rt0.c2)))AND(rt0.c3)))AND(rt0.c1)))|(rt0.c4 COLLATE BINARY))))) UNION SELECT DISTINCT * FROM rt0, t0 WHERE (((((((((((((t0.c0)OR(rt0.c3)))OR(rt0.c2)))AND(rt0.c3)))AND(rt0.c1)))|(rt0.c4 COLLATE BINARY))) ISNULL));
SELECT DISTINCT * FROM rt0, t0;
SELECT v0.c1, rt0.c4, rt0.c2, v0.c0, rt0.c5, t0.c0, rt0.c3, v0.c2, rt0.c1, rt0.c6 FROM v0 LEFT OUTER JOIN rt0 ON (((((NULL)||('-723677093')), ((rt0.c6) NOT BETWEEN (rt0.c0) AND (rt0.c4)), ((rt0.c6)<<(rt0.c1)), (((rt0.c3)) BETWEEN ((t0.c0)) AND ((v0.c0))), IFNULL(rt0.c5, v0.c0), (((v0.c1))>=((rt0.c1))), CASE WHEN NULL THEN rt0.c2 WHEN rt0.c6 THEN v0.c0 WHEN rt0.c6 THEN t0.c0 ELSE rt0.c0 END))=((rt0.c0, ((rt0.c6) NOT BETWEEN (x'') AND (v0.c2)), rt0.c5 COLLATE NOCASE, rt0.c6, v0.c1, rt0.c3 COLLATE BINARY, CASE t0.c0  WHEN rt0.c1 THEN v0.c2 ELSE v0.c2 END))) RIGHT OUTER JOIN t0 ON ((rt0.c3)-(rt0.c6)) COLLATE NOCASE GROUP BY v0.c1, rt0.c4, rt0.c2, v0.c0, rt0.c5, t0.c0, rt0.c3, v0.c2, rt0.c1, rt0.c6;
SELECT ALL v0.c1 FROM v0 GROUP BY v0.c1;
SELECT v0.c1 FROM v0 GROUP BY v0.c1 HAVING LOWER(v0.c0 COLLATE BINARY) UNION ALL SELECT ALL v0.c1 FROM v0 GROUP BY v0.c1 HAVING (NOT (LOWER(v0.c0 COLLATE BINARY))) UNION ALL SELECT ALL v0.c1 FROM v0 GROUP BY v0.c1 HAVING ((LOWER(v0.c0 COLLATE BINARY)) ISNULL);
SELECT ALL v0.c1 FROM v0 GROUP BY v0.c1;
SELECT v0.c1 FROM v0 GROUP BY v0.c1 HAVING LOWER(v0.c0 COLLATE BINARY) UNION ALL SELECT ALL v0.c1 FROM v0 GROUP BY v0.c1 HAVING (NOT (LOWER(v0.c0 COLLATE BINARY))) UNION ALL SELECT ALL v0.c1 FROM v0 GROUP BY v0.c1 HAVING ((LOWER(v0.c0 COLLATE BINARY)) ISNULL);
SELECT ALL v0.c1 FROM v0 GROUP BY v0.c1;
SELECT v0.c1 FROM v0;
SELECT v0.c1 FROM v0 WHERE ((((~ (v0.c1))) NOTNULL)) UNION ALL SELECT v0.c1 FROM v0 WHERE ((NOT ((((~ (v0.c1))) NOTNULL)))) UNION ALL SELECT v0.c1 FROM v0 WHERE ((((((~ (v0.c1))) NOTNULL)) ISNULL));
SELECT v0.c1 FROM v0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE ((+ (((t0.c0) NOTNULL)))) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT ((+ (((t0.c0) NOTNULL)))))) UNION SELECT DISTINCT * FROM t0 WHERE ((((+ (((t0.c0) NOTNULL)))) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE (((((t0.c0)<=(t0.c0)))<<((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0)))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT (((((t0.c0)<=(t0.c0)))<<((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0)))))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE (((((((t0.c0)<=(t0.c0)))<<((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0)))))) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT v0.c0, v0.c2 FROM v0 GROUP BY v0.c0, v0.c2;
SELECT ALL v0.c0, v0.c2 FROM v0 GROUP BY v0.c0, v0.c2 HAVING HEX(COUNT(*)) UNION ALL SELECT v0.c0, v0.c2 FROM v0 GROUP BY v0.c0, v0.c2 HAVING (NOT (HEX(COUNT(*)))) UNION ALL SELECT v0.c0, v0.c2 FROM v0 GROUP BY v0.c0, v0.c2 HAVING ((HEX(COUNT(*))) ISNULL);
SELECT v0.c0, v0.c2 FROM v0 GROUP BY v0.c0, v0.c2;
SELECT ALL v0.c0, v0.c2 FROM v0 GROUP BY v0.c0, v0.c2 HAVING HEX(COUNT(*)) UNION ALL SELECT v0.c0, v0.c2 FROM v0 GROUP BY v0.c0, v0.c2 HAVING (NOT (HEX(COUNT(*)))) UNION ALL SELECT v0.c0, v0.c2 FROM v0 GROUP BY v0.c0, v0.c2 HAVING ((HEX(COUNT(*))) ISNULL);
SELECT v0.c0, v0.c2 FROM v0 GROUP BY v0.c0, v0.c2;
SELECT ALL MAX(((CAST(rt0.c4 AS TEXT)) NOT BETWEEN (((v0.c2) NOT BETWEEN (rt0.c2) AND ('125090814'))) AND (((rt0.c2)>>(v0.c1))))) FROM v0, rt0, t0 NOT INDEXED ORDER BY ('蕹#DKtGI\' IN (((rt0.c1) BETWEEN (rt0.c6) AND (t0.c0)), v0.c1 COLLATE NOCASE));
SELECT v0.c2, v0.c0, v0.c1 FROM v0;
SELECT ALL v0.c2, v0.c0, v0.c1 FROM v0 WHERE (((((v0.c1)>=(v0.c2)))>>(v0.c0 COLLATE NOCASE))) UNION ALL SELECT v0.c2, v0.c0, v0.c1 FROM v0 WHERE ((NOT (((((v0.c1)>=(v0.c2)))>>(v0.c0 COLLATE NOCASE))))) UNION ALL SELECT v0.c2, v0.c0, v0.c1 FROM v0 WHERE (((((((v0.c1)>=(v0.c2)))>>(v0.c0 COLLATE NOCASE))) ISNULL));
SELECT v0.c2, v0.c0, v0.c1 FROM v0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE ((~ (CAST(t0.c0 AS INTEGER)))) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT ((~ (CAST(t0.c0 AS INTEGER)))))) UNION SELECT DISTINCT * FROM t0 WHERE ((((~ (CAST(t0.c0 AS INTEGER)))) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT ALL rt0.c0, rt0.c2, rt0.c3, rt0.c6, v0.c1, rt0.c1, rt0.c4, rt0.c5 FROM rt0, v0 GROUP BY rt0.c0, rt0.c2, rt0.c3, rt0.c6, v0.c1, rt0.c1, rt0.c4, rt0.c5;
SELECT ALL rt0.c0, rt0.c2, rt0.c3, rt0.c6, v0.c1, rt0.c1, rt0.c4, rt0.c5 FROM rt0, v0 WHERE (CAST(((rt0.c5) NOT BETWEEN (rt0.c3) AND (rt0.c6)) AS BLOB)) GROUP BY rt0.c0, rt0.c2, rt0.c3, rt0.c6, v0.c1, rt0.c1, rt0.c4, rt0.c5 UNION SELECT ALL rt0.c0, rt0.c2, rt0.c3, rt0.c6, v0.c1, rt0.c1, rt0.c4, rt0.c5 FROM rt0, v0 WHERE ((NOT (CAST(((rt0.c5) NOT BETWEEN (rt0.c3) AND (rt0.c6)) AS BLOB)))) GROUP BY rt0.c0, rt0.c2, rt0.c3, rt0.c6, v0.c1, rt0.c1, rt0.c4, rt0.c5 UNION SELECT rt0.c0, rt0.c2, rt0.c3, rt0.c6, v0.c1, rt0.c1, rt0.c4, rt0.c5 FROM rt0, v0 WHERE (((CAST(((rt0.c5) NOT BETWEEN (rt0.c3) AND (rt0.c6)) AS BLOB)) ISNULL)) GROUP BY rt0.c0, rt0.c2, rt0.c3, rt0.c6, v0.c1, rt0.c1, rt0.c4, rt0.c5;
SELECT ALL rt0.c0, rt0.c2, rt0.c3, rt0.c6, v0.c1, rt0.c1, rt0.c4, rt0.c5 FROM rt0, v0 GROUP BY rt0.c0, rt0.c2, rt0.c3, rt0.c6, v0.c1, rt0.c1, rt0.c4, rt0.c5;
SELECT rt0.c6, rt0.c4, rt0.c0, rt0.c1, rt0.c5, v0.c0, rt0.c2, v0.c2, t0.c0, v0.c1 FROM t0, rt0, v0 GROUP BY rt0.c6, rt0.c4, rt0.c0, rt0.c1, rt0.c5, v0.c0, rt0.c2, v0.c2, t0.c0, v0.c1;
SELECT ALL rt0.c6, rt0.c4, rt0.c0, rt0.c1, rt0.c5, v0.c0, rt0.c2, v0.c2, t0.c0, v0.c1 FROM t0, rt0, v0 GROUP BY rt0.c6, rt0.c4, rt0.c0, rt0.c1, rt0.c5, v0.c0, rt0.c2, v0.c2, t0.c0, v0.c1 HAVING ((((CASE WHEN rt0.c1 THEN MIN(COUNT(t0.c0)) ELSE rt0.c2 END)OR(((AVG(0.5824235094664648))-(v0.c1)))))AND(SUM(rt0.c2))) UNION ALL SELECT ALL rt0.c6, rt0.c4, rt0.c0, rt0.c1, rt0.c5, v0.c0, rt0.c2, v0.c2, t0.c0, v0.c1 FROM t0, rt0, v0 GROUP BY rt0.c6, rt0.c4, rt0.c0, rt0.c1, rt0.c5, v0.c0, rt0.c2, v0.c2, t0.c0, v0.c1 HAVING (NOT (((((CASE WHEN rt0.c1 THEN MIN(COUNT(t0.c0)) ELSE rt0.c2 END)OR(((AVG(0.5824235094664648))-(v0.c1)))))AND(SUM(rt0.c2))))) UNION ALL SELECT ALL rt0.c6, rt0.c4, rt0.c0, rt0.c1, rt0.c5, v0.c0, rt0.c2, v0.c2, t0.c0, v0.c1 FROM t0, rt0, v0 GROUP BY rt0.c6, rt0.c4, rt0.c0, rt0.c1, rt0.c5, v0.c0, rt0.c2, v0.c2, t0.c0, v0.c1 HAVING ((((((CASE WHEN rt0.c1 THEN MIN(COUNT(t0.c0)) ELSE rt0.c2 END)OR(((AVG(0.5824235094664648))-(v0.c1)))))AND(SUM(rt0.c2)))) ISNULL);
SELECT ALL v0.c1, rt0.c2, rt0.c1, v0.c0 FROM rt0, v0;
SELECT v0.c1, rt0.c2, rt0.c1, v0.c0 FROM rt0, v0 WHERE (((((((((rt0.c2 COLLATE RTRIM)OR(((rt0.c6)>>('1718507562')))))AND(NULL)))OR(((rt0.c4)>=(v0.c1)))))OR(((rt0.c3) ISNULL)))) UNION ALL SELECT ALL v0.c1, rt0.c2, rt0.c1, v0.c0 FROM rt0, v0 WHERE ((NOT (((((((((rt0.c2 COLLATE RTRIM)OR(((rt0.c6)>>('1718507562')))))AND(NULL)))OR(((rt0.c4)>=(v0.c1)))))OR(((rt0.c3) ISNULL)))))) UNION ALL SELECT v0.c1, rt0.c2, rt0.c1, v0.c0 FROM rt0, v0 WHERE (((((((((((rt0.c2 COLLATE RTRIM)OR(((rt0.c6)>>('1718507562')))))AND(NULL)))OR(((rt0.c4)>=(v0.c1)))))OR(((rt0.c3) ISNULL)))) ISNULL));
SELECT ALL v0.c1, rt0.c2, rt0.c1, v0.c0 FROM rt0, v0;
SELECT DISTINCT * FROM rt0, t0;
SELECT DISTINCT * FROM rt0, t0 WHERE ((((CASE rt0.c6  WHEN rt0.c2 THEN rt0.c5 END))<((LIKELY(rt0.c0))))) UNION SELECT DISTINCT * FROM rt0, t0 WHERE ((NOT ((((CASE rt0.c6  WHEN rt0.c2 THEN rt0.c5 END))<((LIKELY(rt0.c0))))))) UNION SELECT DISTINCT * FROM rt0, t0 WHERE ((((((CASE rt0.c6  WHEN rt0.c2 THEN rt0.c5 END))<((LIKELY(rt0.c0))))) ISNULL));
SELECT DISTINCT * FROM rt0, t0;
SELECT v0.c1, rt0.c0, v0.c2, rt0.c6, v0.c0, rt0.c5, rt0.c2, rt0.c1, rt0.c4, rt0.c3 FROM rt0, v0 GROUP BY v0.c1, rt0.c0, v0.c2, rt0.c6, v0.c0, rt0.c5, rt0.c2, rt0.c1, rt0.c4, rt0.c3;
SELECT ALL v0.c1, rt0.c0, v0.c2, rt0.c6, v0.c0, rt0.c5, rt0.c2, rt0.c1, rt0.c4, rt0.c3 FROM rt0, v0 WHERE (((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c1)) COLLATE BINARY) GROUP BY v0.c1, rt0.c0, v0.c2, rt0.c6, v0.c0, rt0.c5, rt0.c2, rt0.c1, rt0.c4, rt0.c3 UNION SELECT v0.c1, rt0.c0, v0.c2, rt0.c6, v0.c0, rt0.c5, rt0.c2, rt0.c1, rt0.c4, rt0.c3 FROM rt0, v0 WHERE ((NOT (((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c1)) COLLATE BINARY))) GROUP BY v0.c1, rt0.c0, v0.c2, rt0.c6, v0.c0, rt0.c5, rt0.c2, rt0.c1, rt0.c4, rt0.c3 UNION SELECT v0.c1, rt0.c0, v0.c2, rt0.c6, v0.c0, rt0.c5, rt0.c2, rt0.c1, rt0.c4, rt0.c3 FROM rt0, v0 WHERE (((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c1)) COLLATE BINARY) ISNULL)) GROUP BY v0.c1, rt0.c0, v0.c2, rt0.c6, v0.c0, rt0.c5, rt0.c2, rt0.c1, rt0.c4, rt0.c3;
SELECT v0.c1, rt0.c0, v0.c2, rt0.c6, v0.c0, rt0.c5, rt0.c2, rt0.c1, rt0.c4, rt0.c3 FROM rt0, v0 GROUP BY v0.c1, rt0.c0, v0.c2, rt0.c6, v0.c0, rt0.c5, rt0.c2, rt0.c1, rt0.c4, rt0.c3;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (~ (0.8861013376677146)) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT ((~ (0.8861013376677146)))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (((~ (0.8861013376677146))) ISNULL);
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (~ (0.8861013376677146)) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT ((~ (0.8861013376677146)))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (((~ (0.8861013376677146))) ISNULL);
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL v0.c1, rt0.c1, v0.c2, rt0.c3, rt0.c6, v0.c0, rt0.c4, t0.c0, rt0.c5, rt0.c0, rt0.c2 FROM rt0, v0, t0;
SELECT ALL v0.c1, rt0.c1, v0.c2, rt0.c3, rt0.c6, v0.c0, rt0.c4, t0.c0, rt0.c5, rt0.c0, rt0.c2 FROM rt0, v0, t0 WHERE ((- (((v0.c1) ISNULL)))) UNION ALL SELECT ALL v0.c1, rt0.c1, v0.c2, rt0.c3, rt0.c6, v0.c0, rt0.c4, t0.c0, rt0.c5, rt0.c0, rt0.c2 FROM rt0, v0, t0 WHERE ((NOT ((- (((v0.c1) ISNULL)))))) UNION ALL SELECT ALL v0.c1, rt0.c1, v0.c2, rt0.c3, rt0.c6, v0.c0, rt0.c4, t0.c0, rt0.c5, rt0.c0, rt0.c2 FROM rt0, v0, t0 WHERE ((((- (((v0.c1) ISNULL)))) ISNULL));
SELECT ALL v0.c1, rt0.c1, v0.c2, rt0.c3, rt0.c6, v0.c0, rt0.c4, t0.c0, rt0.c5, rt0.c0, rt0.c2 FROM rt0, v0, t0;
SELECT DISTINCT v0.c0 FROM v0, rt0;
SELECT DISTINCT v0.c0 FROM v0, rt0 WHERE ((((v0.c1)) BETWEEN ((((v0.c0) NOTNULL))) AND ((TRIM(DISTINCT rt0.c6, rt0.c2))))) UNION SELECT DISTINCT v0.c0 FROM v0, rt0 WHERE ((NOT ((((v0.c1)) BETWEEN ((((v0.c0) NOTNULL))) AND ((TRIM(DISTINCT rt0.c6, rt0.c2))))))) UNION SELECT DISTINCT v0.c0 FROM v0, rt0 WHERE ((((((v0.c1)) BETWEEN ((((v0.c0) NOTNULL))) AND ((TRIM(DISTINCT rt0.c6, rt0.c2))))) ISNULL));
SELECT DISTINCT v0.c0 FROM v0, rt0;
SELECT ALL rt0.c5, rt0.c3, rt0.c6 FROM rt0 GROUP BY rt0.c5, rt0.c3, rt0.c6;
SELECT rt0.c5, rt0.c3, rt0.c6 FROM rt0 WHERE ((((rt0.c2)) BETWEEN ((rt0.c0 COLLATE RTRIM)) AND ((((x'')==(rt0.c6)))))) GROUP BY rt0.c5, rt0.c3, rt0.c6 UNION SELECT rt0.c5, rt0.c3, rt0.c6 FROM rt0 WHERE ((NOT ((((rt0.c2)) BETWEEN ((rt0.c0 COLLATE RTRIM)) AND ((((x'')=(rt0.c6)))))))) GROUP BY rt0.c5, rt0.c3, rt0.c6 UNION SELECT rt0.c5, rt0.c3, rt0.c6 FROM rt0 NOT INDEXED WHERE ((((((rt0.c2)) BETWEEN ((rt0.c0 COLLATE RTRIM)) AND ((((x'')==(rt0.c6)))))) ISNULL)) GROUP BY rt0.c5, rt0.c3, rt0.c6;
SELECT ALL rt0.c5, rt0.c3, rt0.c6 FROM rt0 GROUP BY rt0.c5, rt0.c3, rt0.c6;
SELECT rt0.c5, rt0.c4, v0.c1, t0.c0, rt0.c1, rt0.c6, rt0.c2 FROM t0, rt0, v0 GROUP BY rt0.c5, rt0.c4, v0.c1, t0.c0, rt0.c1, rt0.c6, rt0.c2;
SELECT ALL rt0.c5, rt0.c4, v0.c1, t0.c0, rt0.c1, rt0.c6, rt0.c2 FROM t0, rt0, v0 GROUP BY rt0.c5, rt0.c4, v0.c1, t0.c0, rt0.c1, rt0.c6, rt0.c2 HAVING MIN(((COUNT(*)) NOT BETWEEN (COUNT(*)) AND (rt0.c4))) UNION ALL SELECT ALL rt0.c5, rt0.c4, v0.c1, t0.c0, rt0.c1, rt0.c6, rt0.c2 FROM t0, rt0, v0 GROUP BY rt0.c5, rt0.c4, v0.c1, t0.c0, rt0.c1, rt0.c6, rt0.c2 HAVING (NOT (MIN(((COUNT(*)) NOT BETWEEN (COUNT(*)) AND (rt0.c4))))) UNION ALL SELECT ALL rt0.c5, rt0.c4, v0.c1, t0.c0, rt0.c1, rt0.c6, rt0.c2 FROM t0, rt0, v0 GROUP BY rt0.c5, rt0.c4, v0.c1, t0.c0, rt0.c1, rt0.c6, rt0.c2 HAVING ((MIN(((COUNT(*)) NOT BETWEEN (COUNT(*)) AND (rt0.c4)))) ISNULL);
SELECT ALL rt0.c2, v0.c0, rt0.c4, rt0.c3, v0.c2, rt0.c6, rt0.c0, v0.c1, rt0.c5 FROM rt0 LEFT OUTER JOIN v0 ON ((((v0.c0) BETWEEN (rt0.c6) AND (v0.c1)))<<(((rt0.c3)>=('598959127'))));
SELECT ALL rt0.c2, v0.c0, rt0.c4, rt0.c3, v0.c2, rt0.c6, rt0.c0, v0.c1, rt0.c5 FROM rt0 LEFT OUTER JOIN v0 ON ((((v0.c0) BETWEEN (rt0.c6) AND (v0.c1)))<<(((rt0.c3)>=('598959127')))) WHERE (((((v0.c0) IS FALSE))&(((((((((rt0.c5)AND(v0.c1)))OR(rt0.c6)))OR(rt0.c4)))OR(',b^蕹BWai'))))) UNION ALL SELECT ALL rt0.c2, v0.c0, rt0.c4, rt0.c3, v0.c2, rt0.c6, rt0.c0, v0.c1, rt0.c5 FROM rt0 LEFT OUTER JOIN v0 ON ((((v0.c0) BETWEEN (rt0.c6) AND (v0.c1)))<<(((rt0.c3)>=('598959127')))) WHERE ((NOT (((((v0.c0) IS FALSE))&(((((((((rt0.c5)AND(v0.c1)))OR(rt0.c6)))OR(rt0.c4)))OR(',b^蕹BWai'))))))) UNION ALL SELECT ALL rt0.c2, v0.c0, rt0.c4, rt0.c3, v0.c2, rt0.c6, rt0.c0, v0.c1, rt0.c5 FROM rt0 LEFT OUTER JOIN v0 ON ((((v0.c0) BETWEEN (rt0.c6) AND (v0.c1)))<<(((rt0.c3)>=('598959127')))) WHERE (((((((v0.c0) IS FALSE))&(((((((((rt0.c5)AND(v0.c1)))OR(rt0.c6)))OR(rt0.c4)))OR(',b^蕹BWai'))))) ISNULL));
SELECT ALL rt0.c2, v0.c0, rt0.c4, rt0.c3, v0.c2, rt0.c6, rt0.c0, v0.c1, rt0.c5 FROM rt0 LEFT OUTER JOIN v0 ON ((((v0.c0) BETWEEN (rt0.c6) AND (v0.c1)))<<(((rt0.c3)>=('598959127'))));
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (0.2654003096743507) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (0.2654003096743507))) UNION SELECT DISTINCT * FROM rt0 WHERE (((0.2654003096743507) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c1, rt0.c3, rt0.c0, rt0.c4, rt0.c6, rt0.c5, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c3, rt0.c0, rt0.c4, rt0.c6, rt0.c5, rt0.c2;
SELECT ALL rt0.c1, rt0.c3, rt0.c0, rt0.c4, rt0.c6, rt0.c5, rt0.c2 FROM rt0 WHERE (((((rt0.c4)OR(rt0.c2)))OR(rt0.c4)) COLLATE BINARY) GROUP BY rt0.c1, rt0.c3, rt0.c0, rt0.c4, rt0.c6, rt0.c5, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c3, rt0.c0, rt0.c4, rt0.c6, rt0.c5, rt0.c2 FROM rt0 WHERE ((NOT (((((rt0.c4)OR(rt0.c2)))OR(rt0.c4)) COLLATE BINARY))) GROUP BY rt0.c1, rt0.c3, rt0.c0, rt0.c4, rt0.c6, rt0.c5, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c3, rt0.c0, rt0.c4, rt0.c6, rt0.c5, rt0.c2 FROM rt0 WHERE (((((((rt0.c4)OR(rt0.c2)))OR(rt0.c4)) COLLATE BINARY) ISNULL)) GROUP BY rt0.c1, rt0.c3, rt0.c0, rt0.c4, rt0.c6, rt0.c5, rt0.c2;
SELECT rt0.c1, rt0.c3, rt0.c0, rt0.c4, rt0.c6, rt0.c5, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c3, rt0.c0, rt0.c4, rt0.c6, rt0.c5, rt0.c2;
SELECT ALL v0.c2 FROM v0, rt0, t0 GROUP BY v0.c2;
SELECT v0.c2 FROM v0 NOT INDEXED, rt0, t0 GROUP BY v0.c2 HAVING GROUP_CONCAT(COUNT(*)) UNION ALL SELECT ALL v0.c2 FROM v0, rt0, t0 GROUP BY v0.c2 HAVING (NOT (GROUP_CONCAT(COUNT(*)))) UNION ALL SELECT ALL v0.c2 FROM v0, rt0, t0 GROUP BY v0.c2 HAVING ((GROUP_CONCAT(COUNT(*))) ISNULL);
SELECT ALL rt0.c2, rt0.c6, v0.c0, rt0.c0, rt0.c1 FROM rt0 FULL OUTER JOIN v0 ON ((v0.c1) BETWEEN (v0.c2) AND (rt0.c5)) COLLATE NOCASE;
SELECT ALL rt0.c2, rt0.c6, v0.c0, rt0.c0, rt0.c1 FROM rt0 FULL OUTER JOIN v0 ON ((v0.c1) BETWEEN (v0.c2) AND (rt0.c5)) COLLATE NOCASE WHERE (((((rt0.c3)&(v0.c2))) NOTNULL)) UNION ALL SELECT ALL rt0.c2, rt0.c6, v0.c0, rt0.c0, rt0.c1 FROM rt0 FULL OUTER JOIN v0 ON ((v0.c1) BETWEEN (v0.c2) AND (rt0.c5)) COLLATE NOCASE WHERE ((NOT (((((rt0.c3)&(v0.c2))) NOTNULL)))) UNION ALL SELECT rt0.c2, rt0.c6, v0.c0, rt0.c0, rt0.c1 FROM rt0 FULL OUTER JOIN v0 ON ((v0.c1) BETWEEN (v0.c2) AND (rt0.c5)) COLLATE NOCASE WHERE (((((((rt0.c3)&(v0.c2))) NOTNULL)) ISNULL));
SELECT ALL rt0.c2, rt0.c6, v0.c0, rt0.c0, rt0.c1 FROM rt0 FULL OUTER JOIN v0 ON ((v0.c1) BETWEEN (v0.c2) AND (rt0.c5)) COLLATE NOCASE;
SELECT DISTINCT t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0 WHERE ((((((NULL)=(t0.c0))))==((t0.c0)))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((NOT ((((((NULL)==(t0.c0))))==((t0.c0)))))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((((((((NULL)=(t0.c0))))==((t0.c0)))) ISNULL));
SELECT DISTINCT t0.c0 FROM t0;
SELECT v0.c1, v0.c2 FROM v0 GROUP BY v0.c1, v0.c2;
SELECT ALL v0.c1, v0.c2 FROM v0 WHERE (CAST(v0.c1 AS BLOB)) GROUP BY v0.c1, v0.c2 UNION SELECT ALL v0.c1, v0.c2 FROM v0 WHERE ((NOT (CAST(v0.c1 AS BLOB)))) GROUP BY v0.c1, v0.c2 UNION SELECT ALL v0.c1, v0.c2 FROM v0 WHERE (((CAST(v0.c1 AS BLOB)) ISNULL)) GROUP BY v0.c1, v0.c2;
SELECT v0.c1, v0.c2 FROM v0 GROUP BY v0.c1, v0.c2;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING AVG(MIN(AVG(x'0217')) COLLATE RTRIM) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (AVG(MIN(AVG(x'0217')) COLLATE RTRIM))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((AVG(MIN(AVG(x'0217')) COLLATE RTRIM)) ISNULL);
SELECT * FROM v0;
SELECT ALL * FROM v0 WHERE (((((v0.c1)GLOB(v0.c2))) NOT BETWEEN (((v0.c2)=(x''))) AND (v0.c2))) UNION ALL SELECT ALL * FROM v0 WHERE ((NOT (((((v0.c1)GLOB(v0.c2))) NOT BETWEEN (((v0.c2)==(x''))) AND (v0.c2))))) UNION ALL SELECT * FROM v0 WHERE (((((((v0.c1)GLOB(v0.c2))) NOT BETWEEN (((v0.c2)=(x''))) AND (v0.c2))) ISNULL));
SELECT * FROM v0;
SELECT DISTINCT v0.c2, v0.c0, t0.c0, rt0.c3 FROM t0, v0 INNER JOIN rt0 ON ((((rt0.c6) IS TRUE))|((((rt0.c1, v0.c1, v0.c2)) BETWEEN ((t0.c0, t0.c0, v0.c2)) AND ((rt0.c4, rt0.c2, v0.c1)))));
SELECT DISTINCT v0.c2, v0.c0, t0.c0, rt0.c3 FROM t0, v0 INNER JOIN rt0 ON ((((rt0.c6) IS TRUE))|((((rt0.c1, v0.c1, v0.c2)) BETWEEN ((t0.c0, t0.c0, v0.c2)) AND ((rt0.c4, rt0.c2, v0.c1))))) WHERE (((v0.c2 IN (NULL)) IN ((((rt0.c6, rt0.c6, rt0.c1)) NOT BETWEEN ((v0.c2, x'4dba', v0.c2)) AND ((v0.c0, v0.c1, NULL)))))) UNION SELECT DISTINCT v0.c2, v0.c0, t0.c0, rt0.c3 FROM t0, v0 NOT INDEXED INNER JOIN rt0 ON ((((rt0.c6) IS TRUE))|((((rt0.c1, v0.c1, v0.c2)) BETWEEN ((t0.c0, t0.c0, v0.c2)) AND ((rt0.c4, rt0.c2, v0.c1))))) WHERE ((NOT (((v0.c2 IN (NULL)) IN ((((rt0.c6, rt0.c6, rt0.c1)) NOT BETWEEN ((v0.c2, x'4dba', v0.c2)) AND ((v0.c0, v0.c1, NULL)))))))) UNION SELECT DISTINCT v0.c2, v0.c0, t0.c0, rt0.c3 FROM t0, v0 INNER JOIN rt0 ON ((((rt0.c6) IS TRUE))|((((rt0.c1, v0.c1, v0.c2)) BETWEEN ((t0.c0, t0.c0, v0.c2)) AND ((rt0.c4, rt0.c2, v0.c1))))) WHERE (((((v0.c2 IN (NULL)) IN ((((rt0.c6, rt0.c6, rt0.c1)) NOT BETWEEN ((v0.c2, x'4dba', v0.c2)) AND ((v0.c0, v0.c1, NULL)))))) ISNULL));
SELECT DISTINCT v0.c2, v0.c0, t0.c0, rt0.c3 FROM t0, v0 INNER JOIN rt0 ON ((((rt0.c6) IS TRUE))|((((rt0.c1, v0.c1, v0.c2)) BETWEEN ((t0.c0, t0.c0, v0.c2)) AND ((rt0.c4, rt0.c2, v0.c1)))));
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (NULL) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (NULL))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((NULL) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT rt0.c3, rt0.c4, v0.c2, rt0.c0, v0.c1, rt0.c5, v0.c0, rt0.c6, t0.c0, rt0.c2, rt0.c1 FROM v0, rt0, t0 GROUP BY rt0.c3, rt0.c4, v0.c2, rt0.c0, v0.c1, rt0.c5, v0.c0, rt0.c6, t0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c3, rt0.c4, v0.c2, rt0.c0, v0.c1, rt0.c5, v0.c0, rt0.c6, t0.c0, rt0.c2, rt0.c1 FROM v0, rt0, t0 GROUP BY rt0.c3, rt0.c4, v0.c2, rt0.c0, v0.c1, rt0.c5, v0.c0, rt0.c6, t0.c0, rt0.c2, rt0.c1 HAVING json_insert(LIKELIHOOD(DISTINCT MAX(rt0.c3), 0.6683827455808095), ((((COUNT(*))AND(v0.c1)))AND(v0.c1)), ((COUNT(rt0.c1))&(v0.c0))) UNION ALL SELECT ALL rt0.c3, rt0.c4, v0.c2, rt0.c0, v0.c1, rt0.c5, v0.c0, rt0.c6, t0.c0, rt0.c2, rt0.c1 FROM v0, rt0, t0 GROUP BY rt0.c3, rt0.c4, v0.c2, rt0.c0, v0.c1, rt0.c5, v0.c0, rt0.c6, t0.c0, rt0.c2, rt0.c1 HAVING (NOT (json_insert(LIKELIHOOD(DISTINCT MAX(rt0.c3), 0.6683827455808095), ((((COUNT(*))AND(v0.c1)))AND(v0.c1)), ((COUNT(rt0.c1))&(v0.c0))))) UNION ALL SELECT ALL rt0.c3, rt0.c4, v0.c2, rt0.c0, v0.c1, rt0.c5, v0.c0, rt0.c6, t0.c0, rt0.c2, rt0.c1 FROM v0, rt0, t0 GROUP BY rt0.c3, rt0.c4, v0.c2, rt0.c0, v0.c1, rt0.c5, v0.c0, rt0.c6, t0.c0, rt0.c2, rt0.c1 HAVING ((json_insert(LIKELIHOOD(DISTINCT MAX(rt0.c3), 0.6683827455808095), ((((COUNT(*))AND(v0.c1)))AND(v0.c1)), ((COUNT(rt0.c1))&(v0.c0)))) ISNULL);
SELECT rt0.c3, rt0.c4, v0.c2, rt0.c0, v0.c1, rt0.c5, v0.c0, rt0.c6, t0.c0, rt0.c2, rt0.c1 FROM v0, rt0, t0 GROUP BY rt0.c3, rt0.c4, v0.c2, rt0.c0, v0.c1, rt0.c5, v0.c0, rt0.c6, t0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c3, rt0.c4, v0.c2, rt0.c0, v0.c1, rt0.c5, v0.c0, rt0.c6, t0.c0, rt0.c2, rt0.c1 FROM v0, rt0, t0 GROUP BY rt0.c3, rt0.c4, v0.c2, rt0.c0, v0.c1, rt0.c5, v0.c0, rt0.c6, t0.c0, rt0.c2, rt0.c1 HAVING json_insert(LIKELIHOOD(DISTINCT MAX(rt0.c3), 0.6683827455808095), ((((COUNT(*))AND(v0.c1)))AND(v0.c1)), ((COUNT(rt0.c1))&(v0.c0))) UNION ALL SELECT ALL rt0.c3, rt0.c4, v0.c2, rt0.c0, v0.c1, rt0.c5, v0.c0, rt0.c6, t0.c0, rt0.c2, rt0.c1 FROM v0, rt0, t0 GROUP BY rt0.c3, rt0.c4, v0.c2, rt0.c0, v0.c1, rt0.c5, v0.c0, rt0.c6, t0.c0, rt0.c2, rt0.c1 HAVING (NOT (json_insert(LIKELIHOOD(DISTINCT MAX(rt0.c3), 0.6683827455808095), ((((COUNT(*))AND(v0.c1)))AND(v0.c1)), ((COUNT(rt0.c1))&(v0.c0))))) UNION ALL SELECT ALL rt0.c3, rt0.c4, v0.c2, rt0.c0, v0.c1, rt0.c5, v0.c0, rt0.c6, t0.c0, rt0.c2, rt0.c1 FROM v0, rt0, t0 GROUP BY rt0.c3, rt0.c4, v0.c2, rt0.c0, v0.c1, rt0.c5, v0.c0, rt0.c6, t0.c0, rt0.c2, rt0.c1 HAVING ((json_insert(LIKELIHOOD(DISTINCT MAX(rt0.c3), 0.6683827455808095), ((((COUNT(*))AND(v0.c1)))AND(v0.c1)), ((COUNT(rt0.c1))&(v0.c0)))) ISNULL);
SELECT rt0.c3, rt0.c4, v0.c2, rt0.c0, v0.c1, rt0.c5, v0.c0, rt0.c6, t0.c0, rt0.c2, rt0.c1 FROM v0, rt0, t0 GROUP BY rt0.c3, rt0.c4, v0.c2, rt0.c0, v0.c1, rt0.c5, v0.c0, rt0.c6, t0.c0, rt0.c2, rt0.c1;
SELECT ALL TOTAL(((v0.c2 COLLATE NOCASE)<>('1330312517'))) FROM t0, v0 ORDER BY (5.98959127E8 COLLATE NOCASE IN (v0.c2 COLLATE NOCASE)), (((v0.c2 IN (v0.c2)))>>('-237090210')) DESC;
SELECT ALL rt0.c1 FROM rt0 NOT INDEXED, t0;
SELECT ALL rt0.c1 FROM rt0, t0 WHERE (((t0.c0) ISNULL)) UNION ALL SELECT rt0.c1 FROM rt0, t0 WHERE ((NOT (((t0.c0) ISNULL)))) UNION ALL SELECT ALL rt0.c1 FROM rt0, t0 WHERE (((((t0.c0) ISNULL)) ISNULL));
SELECT ALL rt0.c1 FROM rt0 NOT INDEXED, t0;
SELECT DISTINCT rt0.c6, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c6, rt0.c1 FROM rt0 WHERE (((((rt0.c1) NOT NULL))==(CAST(rt0.c1 AS BLOB)))) UNION SELECT DISTINCT rt0.c6, rt0.c1 FROM rt0 WHERE ((NOT (((((rt0.c1) NOT NULL))=(CAST(rt0.c1 AS BLOB)))))) UNION SELECT DISTINCT rt0.c6, rt0.c1 FROM rt0 WHERE (((((((rt0.c1) NOT NULL))==(CAST(rt0.c1 AS BLOB)))) ISNULL));
SELECT DISTINCT rt0.c6, rt0.c1 FROM rt0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 WHERE (CASE WHEN (t0.c0 IN ()) THEN ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) END) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT (CASE WHEN (t0.c0 IN ()) THEN ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) END))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE (((CASE WHEN (t0.c0 IN ()) THEN ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) END) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL rt0.c3, rt0.c0, rt0.c6, rt0.c5, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c3, rt0.c0, rt0.c6, rt0.c5, rt0.c1, rt0.c2;
SELECT rt0.c3, rt0.c0, rt0.c6, rt0.c5, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c3, rt0.c0, rt0.c6, rt0.c5, rt0.c1, rt0.c2 HAVING MIN(SUM(MIN(TOTAL(AVG(COUNT(*)))))) UNION ALL SELECT rt0.c3, rt0.c0, rt0.c6, rt0.c5, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c3, rt0.c0, rt0.c6, rt0.c5, rt0.c1, rt0.c2 HAVING (NOT (MIN(SUM(MIN(TOTAL(AVG(COUNT(*)))))))) UNION ALL SELECT rt0.c3, rt0.c0, rt0.c6, rt0.c5, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c3, rt0.c0, rt0.c6, rt0.c5, rt0.c1, rt0.c2 HAVING ((MIN(SUM(MIN(TOTAL(AVG(COUNT(*))))))) ISNULL);
SELECT rt0.c6, v0.c0 FROM v0, t0, rt0;
SELECT rt0.c6, v0.c0 FROM v0, t0, rt0 WHERE (((((rt0.c3)LIKE(0.8267467995937636)))<(rt0.c5 COLLATE BINARY))) UNION ALL SELECT rt0.c6, v0.c0 FROM v0, t0, rt0 WHERE ((NOT (((((rt0.c3)LIKE(0.8267467995937636)))<(rt0.c5 COLLATE BINARY))))) UNION ALL SELECT ALL rt0.c6, v0.c0 FROM v0, t0, rt0 WHERE (((((((rt0.c3)LIKE(0.8267467995937636)))<(rt0.c5 COLLATE BINARY))) ISNULL));
SELECT rt0.c6, v0.c0 FROM v0, t0, rt0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (((((x'3deb')) BETWEEN ((v0.c2)) AND ((v0.c0))) IN ())) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (((((x'3deb')) BETWEEN ((v0.c2)) AND ((v0.c0))) IN ())))) UNION SELECT DISTINCT * FROM v0 WHERE (((((((x'3deb')) BETWEEN ((v0.c2)) AND ((v0.c0))) IN ())) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT rt0.c6, v0.c1, v0.c0, rt0.c4, rt0.c3, rt0.c1 FROM v0, t0, rt0 GROUP BY rt0.c6, v0.c1, v0.c0, rt0.c4, rt0.c3, rt0.c1;
SELECT ALL rt0.c6, v0.c1, v0.c0, rt0.c4, rt0.c3, rt0.c1 FROM v0, t0, rt0 WHERE ((((((v0.c1)AND(v0.c0)))AND(rt0.c4)) IN ())) GROUP BY rt0.c6, v0.c1, v0.c0, rt0.c4, rt0.c3, rt0.c1 UNION SELECT rt0.c6, v0.c1, v0.c0, rt0.c4, rt0.c3, rt0.c1 FROM v0, t0, rt0 WHERE ((NOT ((((((v0.c1)AND(v0.c0)))AND(rt0.c4)) IN ())))) GROUP BY rt0.c6, v0.c1, v0.c0, rt0.c4, rt0.c3, rt0.c1 UNION SELECT rt0.c6, v0.c1, v0.c0, rt0.c4, rt0.c3, rt0.c1 FROM v0, t0, rt0 WHERE ((((((((v0.c1)AND(v0.c0)))AND(rt0.c4)) IN ())) ISNULL)) GROUP BY rt0.c6, v0.c1, v0.c0, rt0.c4, rt0.c3, rt0.c1;
SELECT rt0.c6, v0.c1, v0.c0, rt0.c4, rt0.c3, rt0.c1 FROM v0, t0, rt0 GROUP BY rt0.c6, v0.c1, v0.c0, rt0.c4, rt0.c3, rt0.c1;
SELECT ALL v0.c1 FROM v0, t0 GROUP BY v0.c1;
SELECT v0.c1 FROM v0, t0 GROUP BY v0.c1 HAVING (((load_extension(MIN(COUNT(*)), GROUP_CONCAT(MAX(SUM(AVG(v0.c2)))))))<>((AVG(COUNT(t0.c0))))) UNION ALL SELECT v0.c1 FROM v0, t0 GROUP BY v0.c1 HAVING (NOT ((((load_extension(MIN(COUNT(*)), GROUP_CONCAT(MAX(SUM(AVG(v0.c2)))))))<>((AVG(COUNT(t0.c0))))))) UNION ALL SELECT ALL v0.c1 FROM v0, t0 GROUP BY v0.c1 HAVING (((((load_extension(MIN(COUNT(*)), GROUP_CONCAT(MAX(SUM(AVG(v0.c2)))))))!=((AVG(COUNT(t0.c0)))))) ISNULL);
SELECT * FROM t0;
SELECT * FROM t0 WHERE ((((t0.c0 IN ()))GLOB((NOT (t0.c0))))) UNION ALL SELECT * FROM t0 WHERE ((NOT ((((t0.c0 IN ()))GLOB((NOT (t0.c0))))))) UNION ALL SELECT ALL * FROM t0 WHERE ((((((t0.c0 IN ()))GLOB((NOT (t0.c0))))) ISNULL));
SELECT * FROM t0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE ('u') UNION SELECT DISTINCT * FROM v0 WHERE ((NOT ('u'))) UNION SELECT DISTINCT * FROM v0 WHERE ((('u') ISNULL));
SELECT DISTINCT * FROM v0;
SELECT ALL rt0.c3 FROM rt0, v0, t0 GROUP BY rt0.c3;
SELECT rt0.c3 FROM rt0, v0, t0 WHERE ((((v0.c2 COLLATE BINARY, rt0.c2, ((((v0.c0)AND(t0.c0)))AND(rt0.c1))))>=(((((t0.c0))<=((rt0.c2))), CASE v0.c1  WHEN t0.c0 THEN rt0.c0 END, (((rt0.c0, t0.c0, rt0.c0)) BETWEEN ((v0.c2, rt0.c6, rt0.c4)) AND ((v0.c2, rt0.c3, rt0.c4))))))) GROUP BY rt0.c3 UNION SELECT ALL rt0.c3 FROM rt0, v0, t0 WHERE ((NOT ((((v0.c2 COLLATE BINARY, rt0.c2, ((((v0.c0)AND(t0.c0)))AND(rt0.c1))))>=(((((t0.c0))<=((rt0.c2))), CASE v0.c1  WHEN t0.c0 THEN rt0.c0 END, (((rt0.c0, t0.c0, rt0.c0)) BETWEEN ((v0.c2, rt0.c6, rt0.c4)) AND ((v0.c2, rt0.c3, rt0.c4))))))))) GROUP BY rt0.c3 UNION SELECT ALL rt0.c3 FROM rt0, v0, t0 WHERE ((((((v0.c2 COLLATE BINARY, rt0.c2, ((((v0.c0)AND(t0.c0)))AND(rt0.c1))))>=(((((t0.c0))<=((rt0.c2))), CASE v0.c1  WHEN t0.c0 THEN rt0.c0 END, (((rt0.c0, t0.c0, rt0.c0)) BETWEEN ((v0.c2, rt0.c6, rt0.c4)) AND ((v0.c2, rt0.c3, rt0.c4))))))) ISNULL)) GROUP BY rt0.c3;
SELECT ALL rt0.c3 FROM rt0, v0, t0 GROUP BY rt0.c3;
SELECT ALL rt0.c4, rt0.c6 FROM rt0 INNER JOIN v0 ON CASE CAST(rt0.c0 AS BLOB)  WHEN ((((rt0.c6)OR(rt0.c4)))OR(v0.c0)) THEN rt0.c6 COLLATE NOCASE END GROUP BY rt0.c4, rt0.c6;
SELECT ALL rt0.c4, rt0.c6 FROM rt0 INNER JOIN v0 ON CASE CAST(rt0.c0 AS BLOB)  WHEN ((((rt0.c6)OR(rt0.c4)))OR(v0.c0)) THEN rt0.c6 COLLATE NOCASE END GROUP BY rt0.c4, rt0.c6 HAVING GROUP_CONCAT(((((((((rt0.c5)OR(rt0.c1)))AND(v0.c0)))OR(TOTAL(v0.c1))))OR(rt0.c0))) UNION ALL SELECT ALL rt0.c4, rt0.c6 FROM rt0 INNER JOIN v0 ON CASE CAST(rt0.c0 AS BLOB)  WHEN ((((rt0.c6)OR(rt0.c4)))OR(v0.c0)) THEN rt0.c6 COLLATE NOCASE END GROUP BY rt0.c4, rt0.c6 HAVING (NOT (GROUP_CONCAT(((((((((rt0.c5)OR(rt0.c1)))AND(v0.c0)))OR(TOTAL(v0.c1))))OR(rt0.c0))))) UNION ALL SELECT rt0.c4, rt0.c6 FROM rt0 INNER JOIN v0 ON CASE CAST(rt0.c0 AS BLOB)  WHEN ((((rt0.c6)OR(rt0.c4)))OR(v0.c0)) THEN rt0.c6 COLLATE NOCASE END GROUP BY rt0.c4, rt0.c6 HAVING ((GROUP_CONCAT(((((((((rt0.c5)OR(rt0.c1)))AND(v0.c0)))OR(TOTAL(v0.c1))))OR(rt0.c0)))) ISNULL);
SELECT ALL MAX((~ (RTRIM(v0.c0)))) FROM v0;
SELECT ALL v0.c2 FROM v0, t0;
SELECT ALL v0.c2 FROM v0, t0 WHERE (((((v0.c1) BETWEEN (v0.c1) AND (v0.c2)))=((t0.c0 IN (t0.c0, v0.c0))))) UNION ALL SELECT ALL v0.c2 FROM v0, t0 WHERE ((NOT (((((v0.c1) BETWEEN (v0.c1) AND (v0.c2)))=((t0.c0 IN (t0.c0, v0.c0))))))) UNION ALL SELECT ALL v0.c2 FROM v0, t0 WHERE (((((((v0.c1) BETWEEN (v0.c1) AND (v0.c2)))=((t0.c0 IN (t0.c0, v0.c0))))) ISNULL));
SELECT ALL v0.c2 FROM v0, t0;
SELECT DISTINCT v0.c0, rt0.c2 FROM rt0, v0, t0;
SELECT DISTINCT v0.c0, rt0.c2 FROM rt0, v0, t0 WHERE ('') UNION SELECT DISTINCT v0.c0, rt0.c2 FROM rt0, v0, t0 WHERE ((NOT (''))) UNION SELECT DISTINCT v0.c0, rt0.c2 FROM rt0, v0, t0 WHERE ((('') ISNULL));
SELECT DISTINCT v0.c0, rt0.c2 FROM rt0, v0, t0;
SELECT rt0.c6, t0.c0, rt0.c3, rt0.c4, v0.c0, rt0.c5, rt0.c1 FROM t0, v0, rt0 GROUP BY rt0.c6, t0.c0, rt0.c3, rt0.c4, v0.c0, rt0.c5, rt0.c1;
SELECT rt0.c6, t0.c0, rt0.c3, rt0.c4, v0.c0, rt0.c5, rt0.c1 FROM t0, v0, rt0 WHERE (CAST(((((((((rt0.c5)AND(rt0.c4)))AND(rt0.c3)))OR(t0.c0)))AND(rt0.c5)) AS BLOB)) GROUP BY rt0.c6, t0.c0, rt0.c3, rt0.c4, v0.c0, rt0.c5, rt0.c1 UNION SELECT ALL rt0.c6, t0.c0, rt0.c3, rt0.c4, v0.c0, rt0.c5, rt0.c1 FROM t0 NOT INDEXED, v0, rt0 WHERE ((NOT (CAST(((((((((rt0.c5)AND(rt0.c4)))AND(rt0.c3)))OR(t0.c0)))AND(rt0.c5)) AS BLOB)))) GROUP BY rt0.c6, t0.c0, rt0.c3, rt0.c4, v0.c0, rt0.c5, rt0.c1 UNION SELECT ALL rt0.c6, t0.c0, rt0.c3, rt0.c4, v0.c0, rt0.c5, rt0.c1 FROM t0, v0, rt0 WHERE (((CAST(((((((((rt0.c5)AND(rt0.c4)))AND(rt0.c3)))OR(t0.c0)))AND(rt0.c5)) AS BLOB)) ISNULL)) GROUP BY rt0.c6, t0.c0, rt0.c3, rt0.c4, v0.c0, rt0.c5, rt0.c1;
SELECT rt0.c6, t0.c0, rt0.c3, rt0.c4, v0.c0, rt0.c5, rt0.c1 FROM t0, v0, rt0 GROUP BY rt0.c6, t0.c0, rt0.c3, rt0.c4, v0.c0, rt0.c5, rt0.c1;
SELECT ALL rt0.c3, rt0.c2, rt0.c5, rt0.c1 FROM rt0, t0 GROUP BY rt0.c3, rt0.c2, rt0.c5, rt0.c1;
SELECT ALL rt0.c3, rt0.c2, rt0.c5, rt0.c1 FROM rt0, t0 GROUP BY rt0.c3, rt0.c2, rt0.c5, rt0.c1 HAVING CASE ((rt0.c2)IS NOT(SUM(rt0.c0)))  WHEN COUNT(*) THEN 0.6685257364239486 ELSE SUM(rt0.c1) END UNION ALL SELECT ALL rt0.c3, rt0.c2, rt0.c5, rt0.c1 FROM rt0, t0 GROUP BY rt0.c3, rt0.c2, rt0.c5, rt0.c1 HAVING (NOT (CASE ((rt0.c2)IS NOT(SUM(rt0.c0)))  WHEN COUNT(*) THEN 0.6685257364239486 ELSE SUM(rt0.c1) END)) UNION ALL SELECT ALL rt0.c3, rt0.c2, rt0.c5, rt0.c1 FROM rt0, t0 GROUP BY rt0.c3, rt0.c2, rt0.c5, rt0.c1 HAVING ((CASE ((rt0.c2)IS NOT(SUM(rt0.c0)))  WHEN COUNT(*) THEN 0.6685257364239486 ELSE SUM(rt0.c1) END) ISNULL);
SELECT ALL rt0.c3, rt0.c2, rt0.c5, rt0.c1 FROM rt0, t0 GROUP BY rt0.c3, rt0.c2, rt0.c5, rt0.c1;
SELECT ALL rt0.c3, rt0.c2, rt0.c5, rt0.c1 FROM rt0, t0 GROUP BY rt0.c3, rt0.c2, rt0.c5, rt0.c1 HAVING CASE ((rt0.c2)IS NOT(SUM(rt0.c0)))  WHEN COUNT(*) THEN 0.6685257364239486 ELSE SUM(rt0.c1) END UNION ALL SELECT ALL rt0.c3, rt0.c2, rt0.c5, rt0.c1 FROM rt0, t0 GROUP BY rt0.c3, rt0.c2, rt0.c5, rt0.c1 HAVING (NOT (CASE ((rt0.c2)IS NOT(SUM(rt0.c0)))  WHEN COUNT(*) THEN 0.6685257364239486 ELSE SUM(rt0.c1) END)) UNION ALL SELECT ALL rt0.c3, rt0.c2, rt0.c5, rt0.c1 FROM rt0, t0 GROUP BY rt0.c3, rt0.c2, rt0.c5, rt0.c1 HAVING ((CASE ((rt0.c2)IS NOT(SUM(rt0.c0)))  WHEN COUNT(*) THEN 0.6685257364239486 ELSE SUM(rt0.c1) END) ISNULL);
SELECT ALL rt0.c3, rt0.c2, rt0.c5, rt0.c1 FROM rt0, t0 GROUP BY rt0.c3, rt0.c2, rt0.c5, rt0.c1;
SELECT * FROM rt0, t0, v0;
SELECT ALL * FROM rt0, t0, v0 WHERE (((v0.c2 COLLATE NOCASE) ISNULL)) UNION ALL SELECT ALL * FROM rt0, t0, v0 WHERE ((NOT (((v0.c2 COLLATE NOCASE) ISNULL)))) UNION ALL SELECT ALL * FROM rt0, t0, v0 WHERE (((((v0.c2 COLLATE NOCASE) ISNULL)) ISNULL));
SELECT * FROM rt0, t0, v0;
SELECT DISTINCT * FROM v0 FULL OUTER JOIN t0 ON CAST('1718507562' AS NUMERIC) INNER JOIN rt0 ON ((CASE rt0.c4  WHEN rt0.c1 THEN t0.c0 ELSE rt0.c1 END)|(LIKELIHOOD(rt0.c4, 0.9757341566714037)));
SELECT DISTINCT * FROM v0 FULL OUTER JOIN t0 ON CAST('1718507562' AS NUMERIC) INNER JOIN rt0 ON ((CASE rt0.c4  WHEN rt0.c1 THEN t0.c0 ELSE rt0.c1 END)|(LIKELIHOOD(rt0.c4, 0.9757341566714037))) WHERE (CAST(v0.c2 AS BLOB)) UNION SELECT DISTINCT * FROM v0 FULL OUTER JOIN t0 ON CAST('1718507562' AS NUMERIC) INNER JOIN rt0 ON ((CASE rt0.c4  WHEN rt0.c1 THEN t0.c0 ELSE rt0.c1 END)|(LIKELIHOOD(rt0.c4, 0.9757341566714037))) WHERE ((NOT (CAST(v0.c2 AS BLOB)))) UNION SELECT DISTINCT * FROM v0 FULL OUTER JOIN t0 ON CAST('1718507562' AS NUMERIC) INNER JOIN rt0 ON ((CASE rt0.c4  WHEN rt0.c1 THEN t0.c0 ELSE rt0.c1 END)|(LIKELIHOOD(rt0.c4, 0.9757341566714037))) WHERE (((CAST(v0.c2 AS BLOB)) ISNULL));
SELECT DISTINCT * FROM v0 FULL OUTER JOIN t0 ON CAST('1718507562' AS NUMERIC) INNER JOIN rt0 ON ((CASE rt0.c4  WHEN rt0.c1 THEN t0.c0 ELSE rt0.c1 END)|(LIKELIHOOD(rt0.c4, 0.9757341566714037)));
SELECT v0.c2, v0.c1, v0.c0 FROM v0 GROUP BY v0.c2, v0.c1, v0.c0;
SELECT v0.c2, v0.c1, v0.c0 FROM v0 WHERE (((LIKELY(x''))<>(CASE WHEN v0.c1 THEN v0.c2 ELSE v0.c2 END))) GROUP BY v0.c2, v0.c1, v0.c0 UNION SELECT v0.c2, v0.c1, v0.c0 FROM v0 WHERE ((NOT (((LIKELY(x''))<>(CASE WHEN v0.c1 THEN v0.c2 ELSE v0.c2 END))))) GROUP BY v0.c2, v0.c1, v0.c0 UNION SELECT v0.c2, v0.c1, v0.c0 FROM v0 WHERE (((((LIKELY(x''))<>(CASE WHEN v0.c1 THEN v0.c2 ELSE v0.c2 END))) ISNULL)) GROUP BY v0.c2, v0.c1, v0.c0;
SELECT v0.c2, v0.c1, v0.c0 FROM v0 GROUP BY v0.c2, v0.c1, v0.c0;
SELECT ALL v0.c1, v0.c2, rt0.c1, rt0.c5, rt0.c4, rt0.c3, v0.c0 FROM rt0, t0, v0 GROUP BY v0.c1, v0.c2, rt0.c1, rt0.c5, rt0.c4, rt0.c3, v0.c0;
SELECT v0.c1, v0.c2, rt0.c1, rt0.c5, rt0.c4, rt0.c3, v0.c0 FROM rt0, t0, v0 GROUP BY v0.c1, v0.c2, rt0.c1, rt0.c5, rt0.c4, rt0.c3, v0.c0 HAVING MIN(GROUP_CONCAT(rt0.c6)) UNION ALL SELECT ALL v0.c1, v0.c2, rt0.c1, rt0.c5, rt0.c4, rt0.c3, v0.c0 FROM rt0, t0, v0 GROUP BY v0.c1, v0.c2, rt0.c1, rt0.c5, rt0.c4, rt0.c3, v0.c0 HAVING (NOT (MIN(GROUP_CONCAT(rt0.c6)))) UNION ALL SELECT ALL v0.c1, v0.c2, rt0.c1, rt0.c5, rt0.c4, rt0.c3, v0.c0 FROM rt0, t0, v0 GROUP BY v0.c1, v0.c2, rt0.c1, rt0.c5, rt0.c4, rt0.c3, v0.c0 HAVING ((MIN(GROUP_CONCAT(rt0.c6))) ISNULL);
SELECT ALL v0.c1, v0.c0, rt0.c1, v0.c2, rt0.c3 FROM rt0, t0, v0;
SELECT v0.c1, v0.c0, rt0.c1, v0.c2, rt0.c3 FROM rt0, t0, v0 WHERE (CASE rt0.c4  WHEN rt0.c6 THEN v0.c0 WHEN v0.c0 THEN rt0.c1 WHEN v0.c2 THEN rt0.c0 END COLLATE NOCASE) UNION ALL SELECT v0.c1, v0.c0, rt0.c1, v0.c2, rt0.c3 FROM rt0, t0, v0 WHERE ((NOT (CASE rt0.c4  WHEN rt0.c6 THEN v0.c0 WHEN v0.c0 THEN rt0.c1 WHEN v0.c2 THEN rt0.c0 END COLLATE NOCASE))) UNION ALL SELECT ALL v0.c1, v0.c0, rt0.c1, v0.c2, rt0.c3 FROM rt0, t0, v0 WHERE (((CASE rt0.c4  WHEN rt0.c6 THEN v0.c0 WHEN v0.c0 THEN rt0.c1 WHEN v0.c2 THEN rt0.c0 END COLLATE NOCASE) ISNULL));
SELECT ALL v0.c1, v0.c0, rt0.c1, v0.c2, rt0.c3 FROM rt0, t0, v0;
SELECT DISTINCT * FROM rt0, v0;
SELECT DISTINCT * FROM rt0, v0 WHERE (LIKELIHOOD(DISTINCT rt0.c0, 0.8971042523248958) COLLATE NOCASE) UNION SELECT DISTINCT * FROM rt0, v0 WHERE ((NOT (LIKELIHOOD(DISTINCT rt0.c0, 0.8971042523248958) COLLATE NOCASE))) UNION SELECT DISTINCT * FROM rt0, v0 WHERE (((LIKELIHOOD(DISTINCT rt0.c0, 0.8971042523248958) COLLATE NOCASE) ISNULL));
SELECT DISTINCT * FROM rt0, v0;
SELECT rt0.c2, rt0.c4, rt0.c5, rt0.c6 FROM rt0 GROUP BY rt0.c2, rt0.c4, rt0.c5, rt0.c6;
SELECT rt0.c2, rt0.c4, rt0.c5, rt0.c6 FROM rt0 WHERE ((((rt0.c4)<(rt0.c1)) IN ())) GROUP BY rt0.c2, rt0.c4, rt0.c5, rt0.c6 UNION SELECT rt0.c2, rt0.c4, rt0.c5, rt0.c6 FROM rt0 WHERE ((NOT ((((rt0.c4)<(rt0.c1)) IN ())))) GROUP BY rt0.c2, rt0.c4, rt0.c5, rt0.c6 UNION SELECT ALL rt0.c2, rt0.c4, rt0.c5, rt0.c6 FROM rt0 WHERE ((((((rt0.c4)<(rt0.c1)) IN ())) ISNULL)) GROUP BY rt0.c2, rt0.c4, rt0.c5, rt0.c6;
SELECT rt0.c2, rt0.c4, rt0.c5, rt0.c6 FROM rt0 GROUP BY rt0.c2, rt0.c4, rt0.c5, rt0.c6;
SELECT ALL t0.c0 FROM v0, t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM v0, t0 GROUP BY t0.c0 HAVING CASE WHEN ((v0.c2)IS NOT(AVG(NULL))) THEN COUNT(*) END UNION ALL SELECT t0.c0 FROM v0, t0 GROUP BY t0.c0 HAVING (NOT (CASE WHEN ((v0.c2)IS NOT(AVG(NULL))) THEN COUNT(*) END)) UNION ALL SELECT ALL t0.c0 FROM v0, t0 GROUP BY t0.c0 HAVING ((CASE WHEN ((v0.c2)IS NOT(AVG(NULL))) THEN COUNT(*) END) ISNULL);
SELECT ALL t0.c0 FROM v0, t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM v0, t0 GROUP BY t0.c0 HAVING CASE WHEN ((v0.c2)IS NOT(AVG(NULL))) THEN COUNT(*) END UNION ALL SELECT t0.c0 FROM v0, t0 GROUP BY t0.c0 HAVING (NOT (CASE WHEN ((v0.c2)IS NOT(AVG(NULL))) THEN COUNT(*) END)) UNION ALL SELECT ALL t0.c0 FROM v0, t0 GROUP BY t0.c0 HAVING ((CASE WHEN ((v0.c2)IS NOT(AVG(NULL))) THEN COUNT(*) END) ISNULL);
SELECT ALL t0.c0 FROM v0, t0 GROUP BY t0.c0;
SELECT v0.c1, v0.c0, t0.c0 FROM t0, v0;
SELECT ALL v0.c1, v0.c0, t0.c0 FROM t0, v0 WHERE ((NOT (((((((((v0.c0)AND(v0.c0)))OR(v0.c2)))AND(v0.c2)))AND(x''))))) UNION ALL SELECT ALL v0.c1, v0.c0, t0.c0 FROM t0, v0 WHERE ((NOT ((NOT (((((((((v0.c0)AND(v0.c0)))OR(v0.c2)))AND(v0.c2)))AND(x''))))))) UNION ALL SELECT v0.c1, v0.c0, t0.c0 FROM t0, v0 WHERE ((((NOT (((((((((v0.c0)AND(v0.c0)))OR(v0.c2)))AND(v0.c2)))AND(x''))))) ISNULL));
SELECT v0.c1, v0.c0, t0.c0 FROM t0, v0;
SELECT DISTINCT rt0.c4, rt0.c5, t0.c0, rt0.c0, rt0.c2, rt0.c3 FROM t0, rt0;
SELECT DISTINCT rt0.c4, rt0.c5, t0.c0, rt0.c0, rt0.c2, rt0.c3 FROM t0, rt0 WHERE (((((((t0.c0)AND(rt0.c6)))OR(rt0.c5))) NOT BETWEEN ((- (t0.c0))) AND ((NOT (rt0.c6))))) UNION SELECT DISTINCT rt0.c4, rt0.c5, t0.c0, rt0.c0, rt0.c2, rt0.c3 FROM t0, rt0 WHERE ((NOT (((((((t0.c0)AND(rt0.c6)))OR(rt0.c5))) NOT BETWEEN ((- (t0.c0))) AND ((NOT (rt0.c6))))))) UNION SELECT DISTINCT rt0.c4, rt0.c5, t0.c0, rt0.c0, rt0.c2, rt0.c3 FROM t0, rt0 WHERE (((((((((t0.c0)AND(rt0.c6)))OR(rt0.c5))) NOT BETWEEN ((- (t0.c0))) AND ((NOT (rt0.c6))))) ISNULL));
SELECT DISTINCT rt0.c4, rt0.c5, t0.c0, rt0.c0, rt0.c2, rt0.c3 FROM t0, rt0;
SELECT rt0.c4, v0.c2, rt0.c0, v0.c0, rt0.c3, rt0.c6, v0.c1, rt0.c2, t0.c0, rt0.c1 FROM rt0, t0, v0 GROUP BY rt0.c4, v0.c2, rt0.c0, v0.c0, rt0.c3, rt0.c6, v0.c1, rt0.c2, t0.c0, rt0.c1;
SELECT ALL rt0.c4, v0.c2, rt0.c0, v0.c0, rt0.c3, rt0.c6, v0.c1, rt0.c2, t0.c0, rt0.c1 FROM rt0, t0, v0 WHERE (((((CASE 732124294  WHEN x'' THEN rt0.c2 ELSE v0.c1 END)AND(CASE WHEN v0.c2 THEN rt0.c5 WHEN 0.401305871876961 THEN '-572684935' WHEN t0.c0 THEN rt0.c2 ELSE rt0.c2 END)))AND(rt0.c3))) GROUP BY rt0.c4, v0.c2, rt0.c0, v0.c0, rt0.c3, rt0.c6, v0.c1, rt0.c2, t0.c0, rt0.c1 UNION SELECT rt0.c4, v0.c2, rt0.c0, v0.c0, rt0.c3, rt0.c6, v0.c1, rt0.c2, t0.c0, rt0.c1 FROM rt0, t0, v0 WHERE ((NOT (((((CASE 732124294  WHEN x'' THEN rt0.c2 ELSE v0.c1 END)AND(CASE WHEN v0.c2 THEN rt0.c5 WHEN 0.401305871876961 THEN '-572684935' WHEN t0.c0 THEN rt0.c2 ELSE rt0.c2 END)))AND(rt0.c3))))) GROUP BY rt0.c4, v0.c2, rt0.c0, v0.c0, rt0.c3, rt0.c6, v0.c1, rt0.c2, t0.c0, rt0.c1 UNION SELECT rt0.c4, v0.c2, rt0.c0, v0.c0, rt0.c3, rt0.c6, v0.c1, rt0.c2, t0.c0, rt0.c1 FROM rt0, t0, v0 WHERE (((((((CASE 732124294  WHEN x'' THEN rt0.c2 ELSE v0.c1 END)AND(CASE WHEN v0.c2 THEN rt0.c5 WHEN 0.401305871876961 THEN '-572684935' WHEN t0.c0 THEN rt0.c2 ELSE rt0.c2 END)))AND(rt0.c3))) ISNULL)) GROUP BY rt0.c4, v0.c2, rt0.c0, v0.c0, rt0.c3, rt0.c6, v0.c1, rt0.c2, t0.c0, rt0.c1;
SELECT rt0.c4, v0.c2, rt0.c0, v0.c0, rt0.c3, rt0.c6, v0.c1, rt0.c2, t0.c0, rt0.c1 FROM rt0, t0, v0 GROUP BY rt0.c4, v0.c2, rt0.c0, v0.c0, rt0.c3, rt0.c6, v0.c1, rt0.c2, t0.c0, rt0.c1;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING GROUP_CONCAT(CASE WHEN t0.c0 THEN t0.c0 END) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (GROUP_CONCAT(CASE WHEN t0.c0 THEN t0.c0 END))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((GROUP_CONCAT(CASE WHEN t0.c0 THEN t0.c0 END)) ISNULL);
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING GROUP_CONCAT(CASE WHEN t0.c0 THEN t0.c0 END) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (GROUP_CONCAT(CASE WHEN t0.c0 THEN t0.c0 END))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((GROUP_CONCAT(CASE WHEN t0.c0 THEN t0.c0 END)) ISNULL);
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL rt0.c6, v0.c1, v0.c0, rt0.c3, rt0.c2, t0.c0, v0.c2, rt0.c1, rt0.c5, rt0.c0 FROM rt0, v0, t0;
SELECT rt0.c6, v0.c1, v0.c0, rt0.c3, rt0.c2, t0.c0, v0.c2, rt0.c1, rt0.c5, rt0.c0 FROM rt0, v0, t0 WHERE (((((((rt0.c3)OR(rt0.c5)))OR(rt0.c2)))>=(CAST(rt0.c6 AS REAL)))) UNION ALL SELECT rt0.c6, v0.c1, v0.c0, rt0.c3, rt0.c2, t0.c0, v0.c2, rt0.c1, rt0.c5, rt0.c0 FROM rt0, v0, t0 WHERE ((NOT (((((((rt0.c3)OR(rt0.c5)))OR(rt0.c2)))>=(CAST(rt0.c6 AS REAL)))))) UNION ALL SELECT rt0.c6, v0.c1, v0.c0, rt0.c3, rt0.c2, t0.c0, v0.c2, rt0.c1, rt0.c5, rt0.c0 FROM rt0, v0, t0 WHERE (((((((((rt0.c3)OR(rt0.c5)))OR(rt0.c2)))>=(CAST(rt0.c6 AS REAL)))) ISNULL));
SELECT ALL rt0.c6, v0.c1, v0.c0, rt0.c3, rt0.c2, t0.c0, v0.c2, rt0.c1, rt0.c5, rt0.c0 FROM rt0, v0, t0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (((((v0.c2) NOT BETWEEN (v0.c0) AND (v0.c1))) NOTNULL)) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (((((v0.c2) NOT BETWEEN (v0.c0) AND (v0.c1))) NOTNULL)))) UNION SELECT DISTINCT * FROM v0 WHERE (((((((v0.c2) NOT BETWEEN (v0.c0) AND (v0.c1))) NOTNULL)) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT v0.c1, rt0.c4, v0.c2, rt0.c0 FROM v0 FULL OUTER JOIN rt0 ON ((CAST(v0.c2 AS TEXT)) BETWEEN (CASE WHEN rt0.c3 THEN rt0.c6 WHEN t0.c0 THEN rt0.c1 WHEN rt0.c5 THEN rt0.c4 END) AND (COALESCE(rt0.c5, rt0.c5))) LEFT OUTER JOIN t0 ON CASE (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c2)))  WHEN (0.061139785558381066 IN (rt0.c2)) THEN ((rt0.c1)/(rt0.c3)) END GROUP BY v0.c1, rt0.c4, v0.c2, rt0.c0;
SELECT t0.c0, v0.c0, v0.c2, v0.c1 FROM v0, t0 GROUP BY t0.c0, v0.c0, v0.c2, v0.c1;
SELECT ALL t0.c0, v0.c0, v0.c2, v0.c1 FROM v0, t0 GROUP BY t0.c0, v0.c0, v0.c2, v0.c1 HAVING MIN(COALESCE(v0.c0, t0.c0)) UNION ALL SELECT ALL t0.c0, v0.c0, v0.c2, v0.c1 FROM v0, t0 GROUP BY t0.c0, v0.c0, v0.c2, v0.c1 HAVING (NOT (MIN(COALESCE(v0.c0, t0.c0)))) UNION ALL SELECT ALL t0.c0, v0.c0, v0.c2, v0.c1 FROM v0, t0 GROUP BY t0.c0, v0.c0, v0.c2, v0.c1 HAVING ((MIN(COALESCE(v0.c0, t0.c0))) ISNULL);
SELECT t0.c0, v0.c0, v0.c2, v0.c1 FROM v0, t0 GROUP BY t0.c0, v0.c0, v0.c2, v0.c1;
SELECT ALL t0.c0, v0.c0, v0.c2, v0.c1 FROM v0, t0 GROUP BY t0.c0, v0.c0, v0.c2, v0.c1 HAVING MIN(COALESCE(v0.c0, t0.c0)) UNION ALL SELECT ALL t0.c0, v0.c0, v0.c2, v0.c1 FROM v0, t0 GROUP BY t0.c0, v0.c0, v0.c2, v0.c1 HAVING (NOT (MIN(COALESCE(v0.c0, t0.c0)))) UNION ALL SELECT ALL t0.c0, v0.c0, v0.c2, v0.c1 FROM v0, t0 GROUP BY t0.c0, v0.c0, v0.c2, v0.c1 HAVING ((MIN(COALESCE(v0.c0, t0.c0))) ISNULL);
SELECT t0.c0, v0.c0, v0.c2, v0.c1 FROM v0, t0 GROUP BY t0.c0, v0.c0, v0.c2, v0.c1;
SELECT ALL * FROM rt0, v0;
SELECT * FROM rt0, v0 WHERE (LIKE(rt0.c0 COLLATE RTRIM, LTRIM(v0.c2, rt0.c3))) UNION ALL SELECT * FROM rt0, v0 WHERE ((NOT (LIKE(rt0.c0 COLLATE RTRIM, LTRIM(v0.c2, rt0.c3))))) UNION ALL SELECT ALL * FROM rt0, v0 WHERE (((LIKE(rt0.c0 COLLATE RTRIM, LTRIM(v0.c2, rt0.c3))) ISNULL));
SELECT ALL * FROM rt0, v0;
SELECT DISTINCT * FROM v0 RIGHT OUTER JOIN rt0 ON ((((rt0.c3) BETWEEN ('') AND (t0.c0)))IS(rt0.c5)) RIGHT OUTER JOIN t0 ON rt0.c0 COLLATE NOCASE;
SELECT v0.c2, rt0.c6, rt0.c0, rt0.c3, rt0.c4, v0.c0, v0.c1, rt0.c1 FROM rt0, v0 GROUP BY v0.c2, rt0.c6, rt0.c0, rt0.c3, rt0.c4, v0.c0, v0.c1, rt0.c1;
SELECT ALL v0.c2, rt0.c6, rt0.c0, rt0.c3, rt0.c4, v0.c0, v0.c1, rt0.c1 FROM rt0, v0 WHERE (((((CAST(v0.c1 AS NUMERIC))AND(((((rt0.c6)OR(v0.c1)))OR(rt0.c1)))))AND((rt0.c6 IN ())))) GROUP BY v0.c2, rt0.c6, rt0.c0, rt0.c3, rt0.c4, v0.c0, v0.c1, rt0.c1 UNION SELECT v0.c2, rt0.c6, rt0.c0, rt0.c3, rt0.c4, v0.c0, v0.c1, rt0.c1 FROM rt0, v0 WHERE ((NOT (((((CAST(v0.c1 AS NUMERIC))AND(((((rt0.c6)OR(v0.c1)))OR(rt0.c1)))))AND((rt0.c6 IN ())))))) GROUP BY v0.c2, rt0.c6, rt0.c0, rt0.c3, rt0.c4, v0.c0, v0.c1, rt0.c1 UNION SELECT ALL v0.c2, rt0.c6, rt0.c0, rt0.c3, rt0.c4, v0.c0, v0.c1, rt0.c1 FROM rt0, v0 WHERE (((((((CAST(v0.c1 AS NUMERIC))AND(((((rt0.c6)OR(v0.c1)))OR(rt0.c1)))))AND((rt0.c6 IN ())))) ISNULL)) GROUP BY v0.c2, rt0.c6, rt0.c0, rt0.c3, rt0.c4, v0.c0, v0.c1, rt0.c1;
SELECT v0.c2, rt0.c6, rt0.c0, rt0.c3, rt0.c4, v0.c0, v0.c1, rt0.c1 FROM rt0, v0 GROUP BY v0.c2, rt0.c6, rt0.c0, rt0.c3, rt0.c4, v0.c0, v0.c1, rt0.c1;
SELECT ALL rt0.c6 FROM rt0 GROUP BY rt0.c6;
SELECT rt0.c6 FROM rt0 GROUP BY rt0.c6 HAVING (NOT (MAX(TOTAL(AVG(MAX(TOTAL('pl'))))))) UNION ALL SELECT ALL rt0.c6 FROM rt0 GROUP BY rt0.c6 HAVING (NOT ((NOT (MAX(TOTAL(AVG(MAX(TOTAL('pl'))))))))) UNION ALL SELECT ALL rt0.c6 FROM rt0 GROUP BY rt0.c6 HAVING (((NOT (MAX(TOTAL(AVG(MAX(TOTAL('pl')))))))) ISNULL);
SELECT ALL MIN(NULLIF((NOT (t0.c0)), (((v0.c2, rt0.c3, rt0.c4)) NOT BETWEEN ((t0.c0, '믾', rt0.c5)) AND ((rt0.c3, t0.c0, 0.05821817286410946))))) FROM t0, rt0, v0;
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE (((rt0.c5 COLLATE RTRIM)LIKE(((((rt0.c3)AND(rt0.c3)))OR(rt0.c4))))) UNION ALL SELECT * FROM rt0 WHERE ((NOT (((rt0.c5 COLLATE RTRIM)LIKE(((((rt0.c3)AND(rt0.c3)))OR(rt0.c4))))))) UNION ALL SELECT ALL * FROM rt0 WHERE (((((rt0.c5 COLLATE RTRIM)LIKE(((((rt0.c3)AND(rt0.c3)))OR(rt0.c4))))) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT * FROM rt0 NATURAL JOIN t0;
SELECT DISTINCT * FROM rt0 NATURAL JOIN t0 WHERE (((- (0.6417478484603758)) IN ())) UNION SELECT DISTINCT * FROM rt0 NATURAL JOIN t0 WHERE ((NOT (((- (0.6417478484603758)) IN ())))) UNION SELECT DISTINCT * FROM rt0 NATURAL JOIN t0 WHERE (((((- (0.6417478484603758)) IN ())) ISNULL));
SELECT DISTINCT * FROM rt0 NATURAL JOIN t0;
SELECT v0.c2 FROM t0 INNER JOIN v0 ON (((((v0.c0)IS NOT(v0.c1)), (v0.c2 IN ()), v0.c1 COLLATE NOCASE))!=((v0.c0, ((v0.c1)*(t0.c0)), ((v0.c2) ISNULL)))) GROUP BY v0.c2;
SELECT v0.c2 FROM t0 INNER JOIN v0 ON (((((v0.c0)IS NOT(v0.c1)), (v0.c2 IN ()), v0.c1 COLLATE NOCASE))!=((v0.c0, ((v0.c1)*(t0.c0)), ((v0.c2) ISNULL)))) WHERE (0.13264595468482043) GROUP BY v0.c2 UNION SELECT v0.c2 FROM t0 INNER JOIN v0 ON (((((v0.c0)IS NOT(v0.c1)), (v0.c2 IN ()), v0.c1 COLLATE NOCASE))<>((v0.c0, ((v0.c1)*(t0.c0)), ((v0.c2) ISNULL)))) WHERE ((NOT (0.13264595468482043))) GROUP BY v0.c2 UNION SELECT v0.c2 FROM t0 INNER JOIN v0 ON (((((v0.c0)IS NOT(v0.c1)), (v0.c2 IN ()), v0.c1 COLLATE NOCASE))<>((v0.c0, ((v0.c1)*(t0.c0)), ((v0.c2) ISNULL)))) WHERE (((0.13264595468482043) ISNULL)) GROUP BY v0.c2;
SELECT v0.c2 FROM t0 INNER JOIN v0 ON (((((v0.c0)IS NOT(v0.c1)), (v0.c2 IN ()), v0.c1 COLLATE NOCASE))!=((v0.c0, ((v0.c1)*(t0.c0)), ((v0.c2) ISNULL)))) GROUP BY v0.c2;
SELECT v0.c0, v0.c1, v0.c2 FROM v0 GROUP BY v0.c0, v0.c1, v0.c2;
SELECT v0.c0, v0.c1, v0.c2 FROM v0 GROUP BY v0.c0, v0.c1, v0.c2 HAVING UNICODE(v0.c0) COLLATE RTRIM UNION ALL SELECT v0.c0, v0.c1, v0.c2 FROM v0 GROUP BY v0.c0, v0.c1, v0.c2 HAVING (NOT (UNICODE(v0.c0) COLLATE RTRIM)) UNION ALL SELECT v0.c0, v0.c1, v0.c2 FROM v0 GROUP BY v0.c0, v0.c1, v0.c2 HAVING ((UNICODE(v0.c0) COLLATE RTRIM) ISNULL);
SELECT v0.c0, v0.c1, v0.c2 FROM v0 GROUP BY v0.c0, v0.c1, v0.c2;
SELECT v0.c0, v0.c1, v0.c2 FROM v0 GROUP BY v0.c0, v0.c1, v0.c2 HAVING UNICODE(v0.c0) COLLATE RTRIM UNION ALL SELECT v0.c0, v0.c1, v0.c2 FROM v0 GROUP BY v0.c0, v0.c1, v0.c2 HAVING (NOT (UNICODE(v0.c0) COLLATE RTRIM)) UNION ALL SELECT v0.c0, v0.c1, v0.c2 FROM v0 GROUP BY v0.c0, v0.c1, v0.c2 HAVING ((UNICODE(v0.c0) COLLATE RTRIM) ISNULL);
SELECT v0.c0, v0.c1, v0.c2 FROM v0 GROUP BY v0.c0, v0.c1, v0.c2;
SELECT * FROM rt0, v0, t0;
SELECT * FROM rt0, v0, t0 WHERE (((v0.c0) IS FALSE) COLLATE RTRIM COLLATE RTRIM) UNION ALL SELECT ALL * FROM rt0, v0, t0 WHERE ((NOT (((v0.c0) IS FALSE) COLLATE RTRIM COLLATE RTRIM))) UNION ALL SELECT ALL * FROM rt0, v0, t0 WHERE (((((v0.c0) IS FALSE) COLLATE RTRIM COLLATE RTRIM) ISNULL));
SELECT * FROM rt0, v0, t0;
SELECT DISTINCT rt0.c5, rt0.c1 FROM rt0, t0;
SELECT DISTINCT rt0.c5, rt0.c1 FROM rt0, t0 WHERE (((((rt0.c0)==(rt0.c6))) NOTNULL)) UNION SELECT DISTINCT rt0.c5, rt0.c1 FROM rt0, t0 WHERE ((NOT (((((rt0.c0)=(rt0.c6))) NOTNULL)))) UNION SELECT DISTINCT rt0.c5, rt0.c1 FROM rt0, t0 WHERE (((((((rt0.c0)==(rt0.c6))) NOTNULL)) ISNULL));
SELECT DISTINCT rt0.c5, rt0.c1 FROM rt0, t0;
SELECT ALL v0.c1, t0.c0, v0.c0 FROM v0, t0 GROUP BY v0.c1, t0.c0, v0.c0;
SELECT v0.c1, t0.c0, v0.c0 FROM v0, t0 WHERE (CAST(t0.c0 AS BLOB)) GROUP BY v0.c1, t0.c0, v0.c0 UNION SELECT v0.c1, t0.c0, v0.c0 FROM v0, t0 WHERE ((NOT (CAST(t0.c0 AS BLOB)))) GROUP BY v0.c1, t0.c0, v0.c0 UNION SELECT v0.c1, t0.c0, v0.c0 FROM v0, t0 WHERE (((CAST(t0.c0 AS BLOB)) ISNULL)) GROUP BY v0.c1, t0.c0, v0.c0;
SELECT ALL v0.c1, t0.c0, v0.c0 FROM v0, t0 GROUP BY v0.c1, t0.c0, v0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING CAST(AVG(t0.c0) AS TEXT) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (CAST(AVG(t0.c0) AS TEXT))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((CAST(AVG(t0.c0) AS TEXT)) ISNULL);
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING CAST(AVG(t0.c0) AS TEXT) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (CAST(AVG(t0.c0) AS TEXT))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((CAST(AVG(t0.c0) AS TEXT)) ISNULL);
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT * FROM rt0 INNER JOIN t0 ON (((rt0.c0 IN ())) NOTNULL);
SELECT * FROM rt0 INNER JOIN t0 ON (((rt0.c0 IN ())) NOTNULL) WHERE (CASE ((((((((rt0.c3)AND(rt0.c0)))AND(rt0.c3)))AND(rt0.c3)))AND(rt0.c6))  WHEN (rt0.c2 IN ()) THEN rt0.c4 COLLATE RTRIM END) UNION ALL SELECT * FROM rt0 INNER JOIN t0 ON (((rt0.c0 IN ())) NOTNULL) WHERE ((NOT (CASE ((((((((rt0.c3)AND(rt0.c0)))AND(rt0.c3)))AND(rt0.c3)))AND(rt0.c6))  WHEN (rt0.c2 IN ()) THEN rt0.c4 COLLATE RTRIM END))) UNION ALL SELECT ALL * FROM rt0 INNER JOIN t0 ON (((rt0.c0 IN ())) NOTNULL) WHERE (((CASE ((((((((rt0.c3)AND(rt0.c0)))AND(rt0.c3)))AND(rt0.c3)))AND(rt0.c6))  WHEN (rt0.c2 IN ()) THEN rt0.c4 COLLATE RTRIM END) ISNULL));
SELECT * FROM rt0 INNER JOIN t0 ON (((rt0.c0 IN ())) NOTNULL);
SELECT DISTINCT rt0.c2, rt0.c1, v0.c2 FROM t0, rt0, v0;
SELECT DISTINCT rt0.c2, rt0.c1, v0.c2 FROM t0, rt0, v0 WHERE (x'') UNION SELECT DISTINCT rt0.c2, rt0.c1, v0.c2 FROM t0, rt0, v0 WHERE ((NOT (x''))) UNION SELECT DISTINCT rt0.c2, rt0.c1, v0.c2 FROM t0, rt0, v0 WHERE (((x'') ISNULL));
SELECT DISTINCT rt0.c2, rt0.c1, v0.c2 FROM t0, rt0, v0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 WHERE ((CAST(t0.c0 AS REAL) IN ())) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT ((CAST(t0.c0 AS REAL) IN ())))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((((CAST(t0.c0 AS REAL) IN ())) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL rt0.c5, rt0.c2, v0.c2, rt0.c0, t0.c0, rt0.c6, rt0.c3, rt0.c1, v0.c0, rt0.c4 FROM t0, v0, rt0 GROUP BY rt0.c5, rt0.c2, v0.c2, rt0.c0, t0.c0, rt0.c6, rt0.c3, rt0.c1, v0.c0, rt0.c4;
SELECT rt0.c5, rt0.c2, v0.c2, rt0.c0, t0.c0, rt0.c6, rt0.c3, rt0.c1, v0.c0, rt0.c4 FROM t0, v0, rt0 GROUP BY rt0.c5, rt0.c2, v0.c2, rt0.c0, t0.c0, rt0.c6, rt0.c3, rt0.c1, v0.c0, rt0.c4 HAVING MIN(GROUP_CONCAT(rt0.c6)) COLLATE BINARY COLLATE RTRIM UNION ALL SELECT rt0.c5, rt0.c2, v0.c2, rt0.c0, t0.c0, rt0.c6, rt0.c3, rt0.c1, v0.c0, rt0.c4 FROM t0, v0, rt0 GROUP BY rt0.c5, rt0.c2, v0.c2, rt0.c0, t0.c0, rt0.c6, rt0.c3, rt0.c1, v0.c0, rt0.c4 HAVING (NOT (MIN(GROUP_CONCAT(rt0.c6)) COLLATE BINARY COLLATE RTRIM)) UNION ALL SELECT ALL rt0.c5, rt0.c2, v0.c2, rt0.c0, t0.c0, rt0.c6, rt0.c3, rt0.c1, v0.c0, rt0.c4 FROM t0, v0, rt0 GROUP BY rt0.c5, rt0.c2, v0.c2, rt0.c0, t0.c0, rt0.c6, rt0.c3, rt0.c1, v0.c0, rt0.c4 HAVING ((MIN(GROUP_CONCAT(rt0.c6)) COLLATE BINARY COLLATE RTRIM) ISNULL);
SELECT ALL * FROM v0, rt0, t0;
SELECT ALL * FROM v0, rt0, t0 WHERE (((rt0.c1) NOT BETWEEN (v0.c1) AND (t0.c0)) COLLATE BINARY) UNION ALL SELECT ALL * FROM v0, rt0, t0 WHERE ((NOT (((rt0.c1) NOT BETWEEN (v0.c1) AND (t0.c0)) COLLATE BINARY))) UNION ALL SELECT * FROM v0, rt0, t0 WHERE (((((rt0.c1) NOT BETWEEN (v0.c1) AND (t0.c0)) COLLATE BINARY) ISNULL));
SELECT ALL * FROM v0, rt0, t0;
SELECT DISTINCT * FROM v0, t0, rt0;
SELECT DISTINCT * FROM v0, t0, rt0 NOT INDEXED WHERE ((((((rt0.c4, t0.c0, t0.c0, v0.c1, rt0.c1, -237090210, rt0.c4))=((rt0.c3, v0.c0, v0.c0, rt0.c4, 'C?loKDc佟c', rt0.c3, rt0.c5))))IS(rt0.c6))) UNION SELECT DISTINCT * FROM v0, t0, rt0 WHERE ((NOT ((((((rt0.c4, t0.c0, t0.c0, v0.c1, rt0.c1, -237090210, rt0.c4))==((rt0.c3, v0.c0, v0.c0, rt0.c4, 'C?loKDc佟c', rt0.c3, rt0.c5))))IS(rt0.c6))))) UNION SELECT DISTINCT * FROM v0, t0, rt0 WHERE ((((((((rt0.c4, t0.c0, t0.c0, v0.c1, rt0.c1, -237090210, rt0.c4))==((rt0.c3, v0.c0, v0.c0, rt0.c4, 'C?loKDc佟c', rt0.c3, rt0.c5))))IS(rt0.c6))) ISNULL));
SELECT DISTINCT * FROM v0, t0, rt0;
SELECT ALL v0.c2, v0.c0 FROM v0, t0 GROUP BY v0.c2, v0.c0;
SELECT v0.c2, v0.c0 FROM v0, t0 WHERE (ABS(DISTINCT CASE v0.c2  WHEN v0.c1 THEN v0.c0 WHEN v0.c0 THEN v0.c2 WHEN v0.c1 THEN v0.c0 END)) GROUP BY v0.c2, v0.c0 UNION SELECT ALL v0.c2, v0.c0 FROM v0, t0 WHERE ((NOT (ABS(DISTINCT CASE v0.c2  WHEN v0.c1 THEN v0.c0 WHEN v0.c0 THEN v0.c2 WHEN v0.c1 THEN v0.c0 END)))) GROUP BY v0.c2, v0.c0 UNION SELECT ALL v0.c2, v0.c0 FROM v0, t0 WHERE (((ABS(DISTINCT CASE v0.c2  WHEN v0.c1 THEN v0.c0 WHEN v0.c0 THEN v0.c2 WHEN v0.c1 THEN v0.c0 END)) ISNULL)) GROUP BY v0.c2, v0.c0;
SELECT ALL v0.c2, v0.c0 FROM v0, t0 GROUP BY v0.c2, v0.c0;
SELECT ALL t0.c0, rt0.c6, rt0.c1, rt0.c2, rt0.c4, v0.c0 FROM rt0, v0 NATURAL JOIN t0 GROUP BY t0.c0, rt0.c6, rt0.c1, rt0.c2, rt0.c4, v0.c0;
SELECT t0.c0, rt0.c6, rt0.c1, rt0.c2, rt0.c4, v0.c0 FROM rt0, v0 NATURAL JOIN t0 GROUP BY t0.c0, rt0.c6, rt0.c1, rt0.c2, rt0.c4, v0.c0 HAVING MIN(((SUM(v0.c1)) NOT NULL)) UNION ALL SELECT ALL t0.c0, rt0.c6, rt0.c1, rt0.c2, rt0.c4, v0.c0 FROM rt0, v0 NATURAL JOIN t0 GROUP BY t0.c0, rt0.c6, rt0.c1, rt0.c2, rt0.c4, v0.c0 HAVING (NOT (MIN(((SUM(v0.c1)) NOT NULL)))) UNION ALL SELECT ALL t0.c0, rt0.c6, rt0.c1, rt0.c2, rt0.c4, v0.c0 FROM rt0, v0 NATURAL JOIN t0 GROUP BY t0.c0, rt0.c6, rt0.c1, rt0.c2, rt0.c4, v0.c0 HAVING ((MIN(((SUM(v0.c1)) NOT NULL))) ISNULL);
SELECT rt0.c0, rt0.c2, rt0.c3, rt0.c5 FROM rt0;
SELECT rt0.c0, rt0.c2, rt0.c3, rt0.c5 FROM rt0 WHERE (CASE x''  WHEN rt0.c5 COLLATE BINARY THEN rt0.c5 WHEN CASE WHEN rt0.c1 THEN x'623ae048' END THEN (+ (rt0.c5)) WHEN CASE WHEN rt0.c1 THEN rt0.c1 END THEN (((rt0.c5, rt0.c4, rt0.c0))>((rt0.c5, rt0.c1, rt0.c0))) ELSE ((rt0.c5)GLOB(rt0.c6)) END) UNION ALL SELECT rt0.c0, rt0.c2, rt0.c3, rt0.c5 FROM rt0 WHERE ((NOT (CASE x''  WHEN rt0.c5 COLLATE BINARY THEN rt0.c5 WHEN CASE WHEN rt0.c1 THEN x'623ae048' END THEN (+ (rt0.c5)) WHEN CASE WHEN rt0.c1 THEN rt0.c1 END THEN (((rt0.c5, rt0.c4, rt0.c0))>((rt0.c5, rt0.c1, rt0.c0))) ELSE ((rt0.c5)GLOB(rt0.c6)) END))) UNION ALL SELECT ALL rt0.c0, rt0.c2, rt0.c3, rt0.c5 FROM rt0 WHERE (((CASE x''  WHEN rt0.c5 COLLATE BINARY THEN rt0.c5 WHEN CASE WHEN rt0.c1 THEN x'623ae048' END THEN (+ (rt0.c5)) WHEN CASE WHEN rt0.c1 THEN rt0.c1 END THEN (((rt0.c5, rt0.c4, rt0.c0))>((rt0.c5, rt0.c1, rt0.c0))) ELSE ((rt0.c5)GLOB(rt0.c6)) END) ISNULL));
SELECT rt0.c0, rt0.c2, rt0.c3, rt0.c5 FROM rt0;
SELECT DISTINCT * FROM rt0, t0, v0;
SELECT DISTINCT * FROM rt0, t0, v0 WHERE (((((rt0.c6)>=(t0.c0)))IS(((v0.c2) NOT BETWEEN (t0.c0) AND (0.4996360957689635))))) UNION SELECT DISTINCT * FROM rt0, t0, v0 WHERE ((NOT (((((rt0.c6)>=(t0.c0)))IS(((v0.c2) NOT BETWEEN (t0.c0) AND (0.4996360957689635))))))) UNION SELECT DISTINCT * FROM rt0, t0, v0 WHERE (((((((rt0.c6)>=(t0.c0)))IS(((v0.c2) NOT BETWEEN (t0.c0) AND (0.4996360957689635))))) ISNULL));
SELECT DISTINCT * FROM rt0, t0, v0;
SELECT ALL rt0.c6, rt0.c4, rt0.c1 FROM rt0, v0 GROUP BY rt0.c6, rt0.c4, rt0.c1;
SELECT rt0.c6, rt0.c4, rt0.c1 FROM rt0, v0 WHERE (((((((v0.c2)AND(3.08826477E8)))AND(rt0.c1)))=(((((rt0.c4)OR(rt0.c5)))AND(rt0.c3))))) GROUP BY rt0.c6, rt0.c4, rt0.c1 UNION SELECT ALL rt0.c6, rt0.c4, rt0.c1 FROM rt0, v0 WHERE ((NOT (((((((v0.c2)AND(3.08826477E8)))AND(rt0.c1)))==(((((rt0.c4)OR(rt0.c5)))AND(rt0.c3))))))) GROUP BY rt0.c6, rt0.c4, rt0.c1 UNION SELECT ALL rt0.c6, rt0.c4, rt0.c1 FROM rt0, v0 WHERE (((((((((v0.c2)AND(3.08826477E8)))AND(rt0.c1)))=(((((rt0.c4)OR(rt0.c5)))AND(rt0.c3))))) ISNULL)) GROUP BY rt0.c6, rt0.c4, rt0.c1;
SELECT ALL rt0.c6, rt0.c4, rt0.c1 FROM rt0, v0 GROUP BY rt0.c6, rt0.c4, rt0.c1;
SELECT ALL v0.c0, v0.c1, v0.c2, t0.c0 FROM t0, v0 GROUP BY v0.c0, v0.c1, v0.c2, t0.c0;
SELECT v0.c0, v0.c1, v0.c2, t0.c0 FROM t0, v0 GROUP BY v0.c0, v0.c1, v0.c2, t0.c0 HAVING ((GROUP_CONCAT(COUNT(*)))*(v0.c0)) UNION ALL SELECT v0.c0, v0.c1, v0.c2, t0.c0 FROM t0, v0 GROUP BY v0.c0, v0.c1, v0.c2, t0.c0 HAVING (NOT (((GROUP_CONCAT(COUNT(*)))*(v0.c0)))) UNION ALL SELECT v0.c0, v0.c1, v0.c2, t0.c0 FROM t0, v0 GROUP BY v0.c0, v0.c1, v0.c2, t0.c0 HAVING ((((GROUP_CONCAT(COUNT(*)))*(v0.c0))) ISNULL);
SELECT * FROM t0, rt0, v0;
SELECT * FROM t0, rt0, v0 WHERE (((('-1609778046'))>((CAST(v0.c2 AS NUMERIC))))) UNION ALL SELECT ALL * FROM t0, rt0, v0 WHERE ((NOT (((('-1609778046'))>((CAST(v0.c2 AS NUMERIC))))))) UNION ALL SELECT * FROM t0, rt0, v0 WHERE (((((('-1609778046'))>((CAST(v0.c2 AS NUMERIC))))) ISNULL));
SELECT * FROM t0, rt0, v0;
SELECT DISTINCT rt0.c1, rt0.c6, v0.c0, rt0.c0, rt0.c3, t0.c0, rt0.c2, rt0.c5 FROM t0, rt0, v0;
SELECT DISTINCT rt0.c1, rt0.c6, v0.c0, rt0.c0, rt0.c3, t0.c0, rt0.c2, rt0.c5 FROM t0, rt0, v0 WHERE ((((rt0.c5)) NOT BETWEEN (((('腺r*4ಏMh໢') NOT BETWEEN (0.36505003131767433) AND (rt0.c1)))) AND ((LOWER(v0.c0))))) UNION SELECT DISTINCT rt0.c1, rt0.c6, v0.c0, rt0.c0, rt0.c3, t0.c0, rt0.c2, rt0.c5 FROM t0, rt0, v0 WHERE ((NOT ((((rt0.c5)) NOT BETWEEN (((('腺r*4ಏMh໢') NOT BETWEEN (0.36505003131767433) AND (rt0.c1)))) AND ((LOWER(v0.c0))))))) UNION SELECT DISTINCT rt0.c1, rt0.c6, v0.c0, rt0.c0, rt0.c3, t0.c0, rt0.c2, rt0.c5 FROM t0, rt0, v0 WHERE ((((((rt0.c5)) NOT BETWEEN (((('腺r*4ಏMh໢') NOT BETWEEN (0.36505003131767433) AND (rt0.c1)))) AND ((LOWER(v0.c0))))) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c6, v0.c0, rt0.c0, rt0.c3, t0.c0, rt0.c2, rt0.c5 FROM t0, rt0, v0;
SELECT t0.c0 FROM t0, v0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0, v0 WHERE ((NOT (json_valid(t0.c0)))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0, v0 WHERE ((NOT ((NOT (json_valid(t0.c0)))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0, v0 WHERE ((((NOT (json_valid(t0.c0)))) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0, v0 GROUP BY t0.c0;
SELECT rt0.c3, rt0.c4, v0.c0, rt0.c0, rt0.c2, rt0.c1, v0.c1, v0.c2 FROM rt0, v0 GROUP BY rt0.c3, rt0.c4, v0.c0, rt0.c0, rt0.c2, rt0.c1, v0.c1, v0.c2;
SELECT ALL rt0.c3, rt0.c4, v0.c0, rt0.c0, rt0.c2, rt0.c1, v0.c1, v0.c2 FROM rt0, v0 GROUP BY rt0.c3, rt0.c4, v0.c0, rt0.c0, rt0.c2, rt0.c1, v0.c1, v0.c2 HAVING NULL UNION ALL SELECT rt0.c3, rt0.c4, v0.c0, rt0.c0, rt0.c2, rt0.c1, v0.c1, v0.c2 FROM rt0, v0 GROUP BY rt0.c3, rt0.c4, v0.c0, rt0.c0, rt0.c2, rt0.c1, v0.c1, v0.c2 HAVING (NOT (NULL)) UNION ALL SELECT ALL rt0.c3, rt0.c4, v0.c0, rt0.c0, rt0.c2, rt0.c1, v0.c1, v0.c2 FROM rt0, v0 GROUP BY rt0.c3, rt0.c4, v0.c0, rt0.c0, rt0.c2, rt0.c1, v0.c1, v0.c2 HAVING ((NULL) ISNULL);
SELECT rt0.c3, rt0.c4, v0.c0, rt0.c0, rt0.c2, rt0.c1, v0.c1, v0.c2 FROM rt0, v0 GROUP BY rt0.c3, rt0.c4, v0.c0, rt0.c0, rt0.c2, rt0.c1, v0.c1, v0.c2;
SELECT ALL rt0.c3, rt0.c4, v0.c0, rt0.c0, rt0.c2, rt0.c1, v0.c1, v0.c2 FROM rt0, v0 GROUP BY rt0.c3, rt0.c4, v0.c0, rt0.c0, rt0.c2, rt0.c1, v0.c1, v0.c2 HAVING NULL UNION ALL SELECT rt0.c3, rt0.c4, v0.c0, rt0.c0, rt0.c2, rt0.c1, v0.c1, v0.c2 FROM rt0, v0 GROUP BY rt0.c3, rt0.c4, v0.c0, rt0.c0, rt0.c2, rt0.c1, v0.c1, v0.c2 HAVING (NOT (NULL)) UNION ALL SELECT ALL rt0.c3, rt0.c4, v0.c0, rt0.c0, rt0.c2, rt0.c1, v0.c1, v0.c2 FROM rt0, v0 GROUP BY rt0.c3, rt0.c4, v0.c0, rt0.c0, rt0.c2, rt0.c1, v0.c1, v0.c2 HAVING ((NULL) ISNULL);
SELECT rt0.c3, rt0.c4, v0.c0, rt0.c0, rt0.c2, rt0.c1, v0.c1, v0.c2 FROM rt0, v0 GROUP BY rt0.c3, rt0.c4, v0.c0, rt0.c0, rt0.c2, rt0.c1, v0.c1, v0.c2;
SELECT TOTAL(CASE ((((v0.c1)OR(v0.c1)))OR(v0.c0))  WHEN CASE t0.c0  WHEN v0.c2 THEN t0.c0 END THEN (NOT (v0.c0)) WHEN ((v0.c0)IS(v0.c2)) THEN ((v0.c2)IS(v0.c2)) WHEN ((v0.c1) IS FALSE) THEN v0.c2 COLLATE RTRIM END) FROM v0, t0 ORDER BY ((x'') NOT NULL) ASC  NULLS FIRST, CAST(v0.c2 AS TEXT) COLLATE NOCASE DESC;
SELECT v0.c2, v0.c1 FROM v0;
SELECT v0.c2, v0.c1 FROM v0 WHERE (v0.c2) UNION ALL SELECT v0.c2, v0.c1 FROM v0 WHERE ((NOT (v0.c2))) UNION ALL SELECT v0.c2, v0.c1 FROM v0 WHERE (((v0.c2) ISNULL));
SELECT v0.c2, v0.c1 FROM v0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (CAST(((((t0.c0)AND(t0.c0)))AND(t0.c0)) AS TEXT)) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (CAST(((((t0.c0)AND(t0.c0)))AND(t0.c0)) AS TEXT)))) UNION SELECT DISTINCT * FROM t0 WHERE (((CAST(((((t0.c0)AND(t0.c0)))AND(t0.c0)) AS TEXT)) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 WHERE ((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) IN ())) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT ((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) IN ())))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) IN ())) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT rt0.c5 FROM v0 CROSS JOIN rt0 ON (((rt0.c5 COLLATE BINARY))=(((rt0.c6 IN ())))) GROUP BY rt0.c5;
SELECT ALL rt0.c5 FROM v0 CROSS JOIN rt0 ON (((rt0.c5 COLLATE BINARY))==(((rt0.c6 IN ())))) GROUP BY rt0.c5 HAVING AVG(CASE GROUP_CONCAT(SUM(rt0.c2))  WHEN rt0.c1 THEN SUM(rt0.c2) END) UNION ALL SELECT rt0.c5 FROM v0 CROSS JOIN rt0 ON (((rt0.c5 COLLATE BINARY))==(((rt0.c6 IN ())))) GROUP BY rt0.c5 HAVING (NOT (AVG(CASE GROUP_CONCAT(SUM(rt0.c2))  WHEN rt0.c1 THEN SUM(rt0.c2) END))) UNION ALL SELECT rt0.c5 FROM v0 CROSS JOIN rt0 ON (((rt0.c5 COLLATE BINARY))==(((rt0.c6 IN ())))) GROUP BY rt0.c5 HAVING ((AVG(CASE GROUP_CONCAT(SUM(rt0.c2))  WHEN rt0.c1 THEN SUM(rt0.c2) END)) ISNULL);
SELECT rt0.c2, rt0.c5, rt0.c1, rt0.c0 FROM rt0;
SELECT rt0.c2, rt0.c5, rt0.c1, rt0.c0 FROM rt0 WHERE (CASE WHEN CAST(rt0.c4 AS BLOB) THEN rt0.c3 END) UNION ALL SELECT rt0.c2, rt0.c5, rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (CASE WHEN CAST(rt0.c4 AS BLOB) THEN rt0.c3 END))) UNION ALL SELECT ALL rt0.c2, rt0.c5, rt0.c1, rt0.c0 FROM rt0 WHERE (((CASE WHEN CAST(rt0.c4 AS BLOB) THEN rt0.c3 END) ISNULL));
SELECT rt0.c2, rt0.c5, rt0.c1, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c6, rt0.c0, rt0.c2, t0.c0 FROM t0, v0, rt0;
SELECT DISTINCT rt0.c6, rt0.c0, rt0.c2, t0.c0 FROM t0, v0, rt0 WHERE (((ABS(x'')) NOT BETWEEN (((((rt0.c4)AND(t0.c0)))AND(v0.c0))) AND (x''))) UNION SELECT DISTINCT rt0.c6, rt0.c0, rt0.c2, t0.c0 FROM t0, v0, rt0 WHERE ((NOT (((ABS(x'')) NOT BETWEEN (((((rt0.c4)AND(t0.c0)))AND(v0.c0))) AND (x''))))) UNION SELECT DISTINCT rt0.c6, rt0.c0, rt0.c2, t0.c0 FROM t0, v0, rt0 WHERE (((((ABS(x'')) NOT BETWEEN (((((rt0.c4)AND(t0.c0)))AND(v0.c0))) AND (x''))) ISNULL));
SELECT DISTINCT rt0.c6, rt0.c0, rt0.c2, t0.c0 FROM t0, v0, rt0;
SELECT v0.c0, t0.c0, v0.c2, rt0.c4, rt0.c5, rt0.c2, v0.c1 FROM v0, rt0, t0 GROUP BY v0.c0, t0.c0, v0.c2, rt0.c4, rt0.c5, rt0.c2, v0.c1;
SELECT ALL v0.c0, t0.c0, v0.c2, rt0.c4, rt0.c5, rt0.c2, v0.c1 FROM v0, rt0, t0 WHERE (rt0.c5) GROUP BY v0.c0, t0.c0, v0.c2, rt0.c4, rt0.c5, rt0.c2, v0.c1 UNION SELECT ALL v0.c0, t0.c0, v0.c2, rt0.c4, rt0.c5, rt0.c2, v0.c1 FROM v0, rt0, t0 WHERE ((NOT (rt0.c5))) GROUP BY v0.c0, t0.c0, v0.c2, rt0.c4, rt0.c5, rt0.c2, v0.c1 UNION SELECT ALL v0.c0, t0.c0, v0.c2, rt0.c4, rt0.c5, rt0.c2, v0.c1 FROM v0, rt0, t0 WHERE (((rt0.c5) ISNULL)) GROUP BY v0.c0, t0.c0, v0.c2, rt0.c4, rt0.c5, rt0.c2, v0.c1;
SELECT v0.c0, t0.c0, v0.c2, rt0.c4, rt0.c5, rt0.c2, v0.c1 FROM v0, rt0, t0 GROUP BY v0.c0, t0.c0, v0.c2, rt0.c4, rt0.c5, rt0.c2, v0.c1;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING CASE WHEN TOTAL(AVG(v0.c0)) THEN COUNT(MIN(v0.c0)) END UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (CASE WHEN TOTAL(AVG(v0.c0)) THEN COUNT(MIN(v0.c0)) END)) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((CASE WHEN TOTAL(AVG(v0.c0)) THEN COUNT(MIN(v0.c0)) END) ISNULL);
SELECT ALL * FROM rt0, t0, v0;
SELECT ALL * FROM rt0, t0, v0 WHERE (rt0.c1) UNION ALL SELECT * FROM rt0, t0, v0 WHERE ((NOT (rt0.c1))) UNION ALL SELECT ALL * FROM rt0, t0, v0 WHERE (((rt0.c1) ISNULL));
SELECT ALL * FROM rt0, t0, v0;
SELECT DISTINCT rt0.c0, rt0.c5, rt0.c3, rt0.c4, rt0.c6, rt0.c1 FROM rt0 LEFT OUTER JOIN t0 ON rt0.c3;
SELECT DISTINCT rt0.c0, rt0.c5, rt0.c3, rt0.c4, rt0.c6, rt0.c1 FROM rt0 LEFT OUTER JOIN t0 ON rt0.c3 WHERE (CASE WHEN ((t0.c0) NOTNULL) THEN (~ (rt0.c3)) WHEN rt0.c6 THEN rt0.c1 WHEN rt0.c5 COLLATE NOCASE THEN ((rt0.c3)GLOB(rt0.c2)) END) UNION SELECT DISTINCT rt0.c0, rt0.c5, rt0.c3, rt0.c4, rt0.c6, rt0.c1 FROM rt0 LEFT OUTER JOIN t0 ON rt0.c3 WHERE ((NOT (CASE WHEN ((t0.c0) NOTNULL) THEN (~ (rt0.c3)) WHEN rt0.c6 THEN rt0.c1 WHEN rt0.c5 COLLATE NOCASE THEN ((rt0.c3)GLOB(rt0.c2)) END))) UNION SELECT DISTINCT rt0.c0, rt0.c5, rt0.c3, rt0.c4, rt0.c6, rt0.c1 FROM rt0 LEFT OUTER JOIN t0 ON rt0.c3 WHERE (((CASE WHEN ((t0.c0) NOTNULL) THEN (~ (rt0.c3)) WHEN rt0.c6 THEN rt0.c1 WHEN rt0.c5 COLLATE NOCASE THEN ((rt0.c3)GLOB(rt0.c2)) END) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c5, rt0.c3, rt0.c4, rt0.c6, rt0.c1 FROM rt0 LEFT OUTER JOIN t0 ON rt0.c3;
SELECT ALL t0.c0, v0.c2 FROM t0, v0 GROUP BY t0.c0, v0.c2;
SELECT ALL t0.c0, v0.c2 FROM t0 NOT INDEXED, v0 WHERE (x'1e753a92') GROUP BY t0.c0, v0.c2 UNION SELECT t0.c0, v0.c2 FROM t0, v0 WHERE ((NOT (x'1e753a92'))) GROUP BY t0.c0, v0.c2 UNION SELECT t0.c0, v0.c2 FROM t0, v0 WHERE (((x'1e753a92') ISNULL)) GROUP BY t0.c0, v0.c2;
SELECT ALL t0.c0, v0.c2 FROM t0, v0 GROUP BY t0.c0, v0.c2;
SELECT v0.c1, v0.c0 FROM v0 GROUP BY v0.c1, v0.c0;
SELECT v0.c1, v0.c0 FROM v0 GROUP BY v0.c1, v0.c0 HAVING TOTAL(json_type(COUNT(*))) UNION ALL SELECT ALL v0.c1, v0.c0 FROM v0 GROUP BY v0.c1, v0.c0 HAVING (NOT (TOTAL(json_type(COUNT(*))))) UNION ALL SELECT v0.c1, v0.c0 FROM v0 GROUP BY v0.c1, v0.c0 HAVING ((TOTAL(json_type(COUNT(*)))) ISNULL);
SELECT v0.c1, t0.c0, rt0.c3, rt0.c0, v0.c0, v0.c2, rt0.c4, rt0.c1, rt0.c2, rt0.c6 FROM t0, v0, rt0;
SELECT v0.c1, t0.c0, rt0.c3, rt0.c0, v0.c0, v0.c2, rt0.c4, rt0.c1, rt0.c2, rt0.c6 FROM t0, v0, rt0 WHERE (SQLITE_VERSION()) UNION ALL SELECT ALL v0.c1, t0.c0, rt0.c3, rt0.c0, v0.c0, v0.c2, rt0.c4, rt0.c1, rt0.c2, rt0.c6 FROM t0, v0, rt0 WHERE ((NOT (SQLITE_VERSION()))) UNION ALL SELECT v0.c1, t0.c0, rt0.c3, rt0.c0, v0.c0, v0.c2, rt0.c4, rt0.c1, rt0.c2, rt0.c6 FROM t0, v0, rt0 WHERE (((SQLITE_VERSION()) ISNULL));
SELECT v0.c1, t0.c0, rt0.c3, rt0.c0, v0.c0, v0.c2, rt0.c4, rt0.c1, rt0.c2, rt0.c6 FROM t0, v0, rt0;
SELECT DISTINCT rt0.c6, rt0.c5, rt0.c0 FROM rt0, v0;
SELECT DISTINCT rt0.c6, rt0.c5, rt0.c0 FROM rt0, v0 WHERE (rt0.c4) UNION SELECT DISTINCT rt0.c6, rt0.c5, rt0.c0 FROM rt0, v0 WHERE ((NOT (rt0.c4))) UNION SELECT DISTINCT rt0.c6, rt0.c5, rt0.c0 FROM rt0, v0 WHERE (((rt0.c4) ISNULL));
SELECT DISTINCT rt0.c6, rt0.c5, rt0.c0 FROM rt0, v0;
SELECT rt0.c4, rt0.c3, v0.c1 FROM v0, t0, rt0 GROUP BY rt0.c4, rt0.c3, v0.c1;
SELECT rt0.c4, rt0.c3, v0.c1 FROM v0, t0, rt0 WHERE (((((rt0.c1)OR(rt0.c0)))&(((x'') BETWEEN (rt0.c0) AND (v0.c2))))) GROUP BY rt0.c4, rt0.c3, v0.c1 UNION SELECT rt0.c4, rt0.c3, v0.c1 FROM v0, t0, rt0 WHERE ((NOT (((((rt0.c1)OR(rt0.c0)))&(((x'') BETWEEN (rt0.c0) AND (v0.c2))))))) GROUP BY rt0.c4, rt0.c3, v0.c1 UNION SELECT rt0.c4, rt0.c3, v0.c1 FROM v0, t0, rt0 WHERE (((((((rt0.c1)OR(rt0.c0)))&(((x'') BETWEEN (rt0.c0) AND (v0.c2))))) ISNULL)) GROUP BY rt0.c4, rt0.c3, v0.c1;
SELECT rt0.c4, rt0.c3, v0.c1 FROM v0, t0, rt0 GROUP BY rt0.c4, rt0.c3, v0.c1;
SELECT v0.c0, v0.c1 FROM v0, t0 GROUP BY v0.c0, v0.c1;
SELECT v0.c0, v0.c1 FROM v0, t0 GROUP BY v0.c0, v0.c1 HAVING MAX(GROUP_CONCAT(v0.c1)) UNION ALL SELECT ALL v0.c0, v0.c1 FROM v0, t0 GROUP BY v0.c0, v0.c1 HAVING (NOT (MAX(GROUP_CONCAT(v0.c1)))) UNION ALL SELECT ALL v0.c0, v0.c1 FROM v0, t0 GROUP BY v0.c0, v0.c1 HAVING ((MAX(GROUP_CONCAT(v0.c1))) ISNULL);
SELECT ALL t0.c0 FROM t0 NOT INDEXED;
SELECT ALL t0.c0 FROM t0 WHERE ((((+ (t0.c0)))>>((t0.c0 IN ())))) UNION ALL SELECT ALL t0.c0 FROM t0 WHERE ((NOT ((((+ (t0.c0)))>>((t0.c0 IN ())))))) UNION ALL SELECT ALL t0.c0 FROM t0 WHERE ((((((+ (t0.c0)))>>((t0.c0 IN ())))) ISNULL));
SELECT ALL t0.c0 FROM t0 NOT INDEXED;
SELECT DISTINCT * FROM t0, v0, rt0;
SELECT DISTINCT * FROM t0, v0, rt0 WHERE (((CAST(rt0.c4 AS BLOB))>(((rt0.c0)<<(rt0.c5))))) UNION SELECT DISTINCT * FROM t0, v0, rt0 WHERE ((NOT (((CAST(rt0.c4 AS BLOB))>(((rt0.c0)<<(rt0.c5))))))) UNION SELECT DISTINCT * FROM t0, v0, rt0 WHERE (((((CAST(rt0.c4 AS BLOB))>(((rt0.c0)<<(rt0.c5))))) ISNULL));
SELECT DISTINCT * FROM t0, v0, rt0;
SELECT ALL rt0.c2, rt0.c5, rt0.c1, v0.c1, rt0.c6, v0.c2, rt0.c3, v0.c0, t0.c0, rt0.c0, rt0.c4 FROM t0, v0, rt0 GROUP BY rt0.c2, rt0.c5, rt0.c1, v0.c1, rt0.c6, v0.c2, rt0.c3, v0.c0, t0.c0, rt0.c0, rt0.c4;
SELECT ALL rt0.c2, rt0.c5, rt0.c1, v0.c1, rt0.c6, v0.c2, rt0.c3, v0.c0, t0.c0, rt0.c0, rt0.c4 FROM t0, v0, rt0 WHERE ((~ ((NOT (v0.c2))))) GROUP BY rt0.c2, rt0.c5, rt0.c1, v0.c1, rt0.c6, v0.c2, rt0.c3, v0.c0, t0.c0, rt0.c0, rt0.c4 UNION SELECT ALL rt0.c2, rt0.c5, rt0.c1, v0.c1, rt0.c6, v0.c2, rt0.c3, v0.c0, t0.c0, rt0.c0, rt0.c4 FROM t0, v0, rt0 WHERE ((NOT ((~ ((NOT (v0.c2))))))) GROUP BY rt0.c2, rt0.c5, rt0.c1, v0.c1, rt0.c6, v0.c2, rt0.c3, v0.c0, t0.c0, rt0.c0, rt0.c4 UNION SELECT rt0.c2, rt0.c5, rt0.c1, v0.c1, rt0.c6, v0.c2, rt0.c3, v0.c0, t0.c0, rt0.c0, rt0.c4 FROM t0, v0, rt0 WHERE ((((~ ((NOT (v0.c2))))) ISNULL)) GROUP BY rt0.c2, rt0.c5, rt0.c1, v0.c1, rt0.c6, v0.c2, rt0.c3, v0.c0, t0.c0, rt0.c0, rt0.c4;
SELECT ALL rt0.c2, rt0.c5, rt0.c1, v0.c1, rt0.c6, v0.c2, rt0.c3, v0.c0, t0.c0, rt0.c0, rt0.c4 FROM t0, v0, rt0 GROUP BY rt0.c2, rt0.c5, rt0.c1, v0.c1, rt0.c6, v0.c2, rt0.c3, v0.c0, t0.c0, rt0.c0, rt0.c4;
SELECT v0.c2 FROM t0 CROSS JOIN v0 ON IFNULL(LIKELIHOOD(DISTINCT 0.05082634794509966, 0.1861708729687711), ((((v0.c2)AND(v0.c1)))OR(v0.c1))) GROUP BY v0.c2;
SELECT ALL v0.c2 FROM t0 CROSS JOIN v0 ON IFNULL(LIKELIHOOD(DISTINCT 0.05082634794509966, 0.1861708729687711), ((((v0.c2)AND(v0.c1)))OR(v0.c1))) GROUP BY v0.c2 HAVING 0.2725832634085701 UNION ALL SELECT v0.c2 FROM t0 CROSS JOIN v0 ON IFNULL(LIKELIHOOD(DISTINCT 0.05082634794509966, 0.1861708729687711), ((((v0.c2)AND(v0.c1)))OR(v0.c1))) GROUP BY v0.c2 HAVING (NOT (0.2725832634085701)) UNION ALL SELECT ALL v0.c2 FROM t0 CROSS JOIN v0 ON IFNULL(LIKELIHOOD(DISTINCT 0.05082634794509966, 0.1861708729687711), ((((v0.c2)AND(v0.c1)))OR(v0.c1))) GROUP BY v0.c2 HAVING ((0.2725832634085701) ISNULL);
SELECT v0.c2 FROM t0 CROSS JOIN v0 ON IFNULL(LIKELIHOOD(DISTINCT 0.05082634794509966, 0.1861708729687711), ((((v0.c2)AND(v0.c1)))OR(v0.c1))) GROUP BY v0.c2;
SELECT ALL v0.c2 FROM t0 CROSS JOIN v0 ON IFNULL(LIKELIHOOD(DISTINCT 0.05082634794509966, 0.1861708729687711), ((((v0.c2)AND(v0.c1)))OR(v0.c1))) GROUP BY v0.c2 HAVING 0.2725832634085701 UNION ALL SELECT v0.c2 FROM t0 CROSS JOIN v0 ON IFNULL(LIKELIHOOD(DISTINCT 0.05082634794509966, 0.1861708729687711), ((((v0.c2)AND(v0.c1)))OR(v0.c1))) GROUP BY v0.c2 HAVING (NOT (0.2725832634085701)) UNION ALL SELECT ALL v0.c2 FROM t0 CROSS JOIN v0 ON IFNULL(LIKELIHOOD(DISTINCT 0.05082634794509966, 0.1861708729687711), ((((v0.c2)AND(v0.c1)))OR(v0.c1))) GROUP BY v0.c2 HAVING ((0.2725832634085701) ISNULL);
SELECT v0.c2 FROM t0 CROSS JOIN v0 ON IFNULL(LIKELIHOOD(DISTINCT 0.05082634794509966, 0.1861708729687711), ((((v0.c2)AND(v0.c1)))OR(v0.c1))) GROUP BY v0.c2;
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE ((((rt0.c4 IN (rt0.c6))) NOT BETWEEN (rt0.c1) AND (rt0.c4))) UNION ALL SELECT * FROM rt0 WHERE ((NOT ((((rt0.c4 IN (rt0.c6))) NOT BETWEEN (rt0.c1) AND (rt0.c4))))) UNION ALL SELECT ALL * FROM rt0 WHERE ((((((rt0.c4 IN (rt0.c6))) NOT BETWEEN (rt0.c1) AND (rt0.c4))) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (t0.c0) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (t0.c0))) UNION SELECT DISTINCT * FROM t0 WHERE (((t0.c0) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT v0.c1, rt0.c1, rt0.c0, v0.c0 FROM rt0 LEFT OUTER JOIN t0 ON ((((x'964d')AND(rt0.c0))) NOT BETWEEN ((NOT (t0.c0))) AND (MAX(v0.c1, rt0.c6))) INNER JOIN v0 ON ((rt0.c2)/((((v0.c0, v0.c1, rt0.c0)) NOT BETWEEN ((rt0.c1, v0.c2, v0.c1)) AND ((rt0.c6, v0.c1, rt0.c0))))) GROUP BY v0.c1, rt0.c1, rt0.c0, v0.c0;
SELECT ALL rt0.c2, rt0.c5, rt0.c6, rt0.c4, rt0.c0, rt0.c1, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c5, rt0.c6, rt0.c4, rt0.c0, rt0.c1, rt0.c3;
SELECT ALL rt0.c2, rt0.c5, rt0.c6, rt0.c4, rt0.c0, rt0.c1, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c5, rt0.c6, rt0.c4, rt0.c0, rt0.c1, rt0.c3 HAVING CASE WHEN GROUP_CONCAT(TOTAL(rt0.c0)) THEN AVG(rt0.c0) ELSE TOTAL(rt0.c3) END UNION ALL SELECT rt0.c2, rt0.c5, rt0.c6, rt0.c4, rt0.c0, rt0.c1, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c5, rt0.c6, rt0.c4, rt0.c0, rt0.c1, rt0.c3 HAVING (NOT (CASE WHEN GROUP_CONCAT(TOTAL(rt0.c0)) THEN AVG(rt0.c0) ELSE TOTAL(rt0.c3) END)) UNION ALL SELECT ALL rt0.c2, rt0.c5, rt0.c6, rt0.c4, rt0.c0, rt0.c1, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c5, rt0.c6, rt0.c4, rt0.c0, rt0.c1, rt0.c3 HAVING ((CASE WHEN GROUP_CONCAT(TOTAL(rt0.c0)) THEN AVG(rt0.c0) ELSE TOTAL(rt0.c3) END) ISNULL);
SELECT ALL v0.c0, v0.c1, rt0.c1, t0.c0, rt0.c0, rt0.c5, rt0.c3, rt0.c4, rt0.c2 FROM rt0 FULL OUTER JOIN t0 ON NULL CROSS JOIN v0 ON ((((rt0.c6) BETWEEN (v0.c2) AND (rt0.c6))) BETWEEN (CHANGES()) AND ((- (rt0.c5))));
SELECT ALL v0.c0, v0.c1, rt0.c1, t0.c0, rt0.c0, rt0.c5, rt0.c3, rt0.c4, rt0.c2 FROM rt0 FULL OUTER JOIN t0 ON NULL CROSS JOIN v0 ON ((((rt0.c6) BETWEEN (v0.c2) AND (rt0.c6))) BETWEEN (CHANGES()) AND ((- (rt0.c5)))) WHERE (((((((((((((rt0.c2 COLLATE BINARY)OR(CASE 0.09989007760439883  WHEN rt0.c0 THEN '-453922715' WHEN rt0.c6 THEN x'' WHEN v0.c1 THEN rt0.c1 END)))OR(((rt0.c0)>=(v0.c2)))))AND((v0.c2 IN (rt0.c6)))))AND((- (rt0.c4)))))OR(((rt0.c3)>(v0.c0)))))AND((((x''))<((rt0.c4)))))) UNION ALL SELECT ALL v0.c0, v0.c1, rt0.c1, t0.c0, rt0.c0, rt0.c5, rt0.c3, rt0.c4, rt0.c2 FROM rt0 FULL OUTER JOIN t0 ON NULL CROSS JOIN v0 ON ((((rt0.c6) BETWEEN (v0.c2) AND (rt0.c6))) BETWEEN (CHANGES()) AND ((- (rt0.c5)))) WHERE ((NOT (((((((((((((rt0.c2 COLLATE BINARY)OR(CASE 0.09989007760439883  WHEN rt0.c0 THEN '-453922715' WHEN rt0.c6 THEN x'' WHEN v0.c1 THEN rt0.c1 END)))OR(((rt0.c0)>=(v0.c2)))))AND((v0.c2 IN (rt0.c6)))))AND((- (rt0.c4)))))OR(((rt0.c3)>(v0.c0)))))AND((((x''))<((rt0.c4)))))))) UNION ALL SELECT v0.c0, v0.c1, rt0.c1, t0.c0, rt0.c0, rt0.c5, rt0.c3, rt0.c4, rt0.c2 FROM rt0 FULL OUTER JOIN t0 ON NULL CROSS JOIN v0 ON ((((rt0.c6) BETWEEN (v0.c2) AND (rt0.c6))) BETWEEN (CHANGES()) AND ((- (rt0.c5)))) WHERE (((((((((((((((rt0.c2 COLLATE BINARY)OR(CASE 0.09989007760439883  WHEN rt0.c0 THEN '-453922715' WHEN rt0.c6 THEN x'' WHEN v0.c1 THEN rt0.c1 END)))OR(((rt0.c0)>=(v0.c2)))))AND((v0.c2 IN (rt0.c6)))))AND((- (rt0.c4)))))OR(((rt0.c3)>(v0.c0)))))AND((((x''))<((rt0.c4)))))) ISNULL));
SELECT ALL v0.c0, v0.c1, rt0.c1, t0.c0, rt0.c0, rt0.c5, rt0.c3, rt0.c4, rt0.c2 FROM rt0 FULL OUTER JOIN t0 ON NULL CROSS JOIN v0 ON ((((rt0.c6) BETWEEN (v0.c2) AND (rt0.c6))) BETWEEN (CHANGES()) AND ((- (rt0.c5))));
SELECT DISTINCT v0.c0, v0.c1 FROM v0;
SELECT DISTINCT v0.c0, v0.c1 FROM v0 WHERE (((CASE v0.c0  WHEN v0.c2 THEN v0.c0 WHEN v0.c1 THEN v0.c1 WHEN v0.c0 THEN 0.36505003131767433 END) NOT NULL)) UNION SELECT DISTINCT v0.c0, v0.c1 FROM v0 WHERE ((NOT (((CASE v0.c0  WHEN v0.c2 THEN v0.c0 WHEN v0.c1 THEN v0.c1 WHEN v0.c0 THEN 0.36505003131767433 END) NOT NULL)))) UNION SELECT DISTINCT v0.c0, v0.c1 FROM v0 WHERE (((((CASE v0.c0  WHEN v0.c2 THEN v0.c0 WHEN v0.c1 THEN v0.c1 WHEN v0.c0 THEN 0.36505003131767433 END) NOT NULL)) ISNULL));
SELECT DISTINCT v0.c0, v0.c1 FROM v0;
SELECT rt0.c6, rt0.c1, t0.c0, rt0.c4, rt0.c2, v0.c1, rt0.c5 FROM rt0, t0 FULL OUTER JOIN v0 ON ((((v0.c2)OR(SQLITE_COMPILEOPTION_GET(rt0.c0))))AND(CASE 0.6470406848962253  WHEN v0.c1 THEN rt0.c3 ELSE v0.c2 END)) GROUP BY rt0.c6, rt0.c1, t0.c0, rt0.c4, rt0.c2, v0.c1, rt0.c5;
SELECT rt0.c6, rt0.c1, t0.c0, rt0.c4, rt0.c2, v0.c1, rt0.c5 FROM rt0, t0 FULL OUTER JOIN v0 ON ((((v0.c2)OR(SQLITE_COMPILEOPTION_GET(rt0.c0))))AND(CASE 0.6470406848962253  WHEN v0.c1 THEN rt0.c3 ELSE v0.c2 END)) WHERE (((((((((v0.c0)OR((- (rt0.c5)))))OR((rt0.c2 IN ()))))AND(CASE WHEN rt0.c2 THEN rt0.c5 ELSE v0.c1 END)))AND(((rt0.c3) IS FALSE)))) GROUP BY rt0.c6, rt0.c1, t0.c0, rt0.c4, rt0.c2, v0.c1, rt0.c5 UNION SELECT rt0.c6, rt0.c1, t0.c0, rt0.c4, rt0.c2, v0.c1, rt0.c5 FROM rt0, t0 FULL OUTER JOIN v0 ON ((((v0.c2)OR(SQLITE_COMPILEOPTION_GET(rt0.c0))))AND(CASE 0.6470406848962253  WHEN v0.c1 THEN rt0.c3 ELSE v0.c2 END)) WHERE ((NOT (((((((((v0.c0)OR((- (rt0.c5)))))OR((rt0.c2 IN ()))))AND(CASE WHEN rt0.c2 THEN rt0.c5 ELSE v0.c1 END)))AND(((rt0.c3) IS FALSE)))))) GROUP BY rt0.c6, rt0.c1, t0.c0, rt0.c4, rt0.c2, v0.c1, rt0.c5 UNION SELECT rt0.c6, rt0.c1, t0.c0, rt0.c4, rt0.c2, v0.c1, rt0.c5 FROM rt0, t0 FULL OUTER JOIN v0 ON ((((v0.c2)OR(SQLITE_COMPILEOPTION_GET(rt0.c0))))AND(CASE 0.6470406848962253  WHEN v0.c1 THEN rt0.c3 ELSE v0.c2 END)) WHERE (((((((((((v0.c0)OR((- (rt0.c5)))))OR((rt0.c2 IN ()))))AND(CASE WHEN rt0.c2 THEN rt0.c5 ELSE v0.c1 END)))AND(((rt0.c3) IS FALSE)))) ISNULL)) GROUP BY rt0.c6, rt0.c1, t0.c0, rt0.c4, rt0.c2, v0.c1, rt0.c5;
SELECT rt0.c6, rt0.c1, t0.c0, rt0.c4, rt0.c2, v0.c1, rt0.c5 FROM rt0, t0 FULL OUTER JOIN v0 ON ((((v0.c2)OR(SQLITE_COMPILEOPTION_GET(rt0.c0))))AND(CASE 0.6470406848962253  WHEN v0.c1 THEN rt0.c3 ELSE v0.c2 END)) GROUP BY rt0.c6, rt0.c1, t0.c0, rt0.c4, rt0.c2, v0.c1, rt0.c5;
SELECT ALL rt0.c0, rt0.c5, v0.c2, rt0.c6 FROM v0, rt0, t0 GROUP BY rt0.c0, rt0.c5, v0.c2, rt0.c6;
SELECT rt0.c0, rt0.c5, v0.c2, rt0.c6 FROM v0, rt0, t0 GROUP BY rt0.c0, rt0.c5, v0.c2, rt0.c6 HAVING '-453922715' UNION ALL SELECT ALL rt0.c0, rt0.c5, v0.c2, rt0.c6 FROM v0, rt0, t0 GROUP BY rt0.c0, rt0.c5, v0.c2, rt0.c6 HAVING (NOT ('-453922715')) UNION ALL SELECT rt0.c0, rt0.c5, v0.c2, rt0.c6 FROM v0, rt0, t0 GROUP BY rt0.c0, rt0.c5, v0.c2, rt0.c6 HAVING (('-453922715') ISNULL);
SELECT ALL rt0.c0, rt0.c5, v0.c2, rt0.c6 FROM v0, rt0, t0 GROUP BY rt0.c0, rt0.c5, v0.c2, rt0.c6;
SELECT rt0.c0, rt0.c5, v0.c2, rt0.c6 FROM v0, rt0, t0 GROUP BY rt0.c0, rt0.c5, v0.c2, rt0.c6 HAVING '-453922715' UNION ALL SELECT ALL rt0.c0, rt0.c5, v0.c2, rt0.c6 FROM v0, rt0, t0 GROUP BY rt0.c0, rt0.c5, v0.c2, rt0.c6 HAVING (NOT ('-453922715')) UNION ALL SELECT rt0.c0, rt0.c5, v0.c2, rt0.c6 FROM v0, rt0, t0 GROUP BY rt0.c0, rt0.c5, v0.c2, rt0.c6 HAVING (('-453922715') ISNULL);
SELECT ALL rt0.c0, rt0.c5, v0.c2, rt0.c6 FROM v0, rt0, t0 GROUP BY rt0.c0, rt0.c5, v0.c2, rt0.c6;
SELECT ALL v0.c1, v0.c0, rt0.c2, rt0.c1, v0.c2, rt0.c5, rt0.c0, rt0.c6 FROM v0, rt0;
SELECT v0.c1, v0.c0, rt0.c2, rt0.c1, v0.c2, rt0.c5, rt0.c0, rt0.c6 FROM v0, rt0 WHERE (TYPEOF(DISTINCT ((rt0.c6)AND(rt0.c6)))) UNION ALL SELECT v0.c1, v0.c0, rt0.c2, rt0.c1, v0.c2, rt0.c5, rt0.c0, rt0.c6 FROM v0, rt0 WHERE ((NOT (TYPEOF(DISTINCT ((rt0.c6)AND(rt0.c6)))))) UNION ALL SELECT ALL v0.c1, v0.c0, rt0.c2, rt0.c1, v0.c2, rt0.c5, rt0.c0, rt0.c6 FROM v0, rt0 WHERE (((TYPEOF(DISTINCT ((rt0.c6)AND(rt0.c6)))) ISNULL));
SELECT ALL v0.c1, v0.c0, rt0.c2, rt0.c1, v0.c2, rt0.c5, rt0.c0, rt0.c6 FROM v0, rt0;
SELECT DISTINCT * FROM v0, t0;
SELECT DISTINCT * FROM v0, t0 WHERE (CAST((NOT (v0.c0)) AS NUMERIC)) UNION SELECT DISTINCT * FROM v0, t0 WHERE ((NOT (CAST((NOT (v0.c0)) AS NUMERIC)))) UNION SELECT DISTINCT * FROM v0, t0 WHERE (((CAST((NOT (v0.c0)) AS NUMERIC)) ISNULL));
SELECT DISTINCT * FROM v0, t0;
SELECT ALL v0.c2, v0.c0 FROM v0 GROUP BY v0.c2, v0.c0;
SELECT ALL v0.c2, v0.c0 FROM v0 WHERE (((v0.c0 COLLATE NOCASE) IS TRUE)) GROUP BY v0.c2, v0.c0 UNION SELECT ALL v0.c2, v0.c0 FROM v0 WHERE ((NOT (((v0.c0 COLLATE NOCASE) IS TRUE)))) GROUP BY v0.c2, v0.c0 UNION SELECT v0.c2, v0.c0 FROM v0 WHERE (((((v0.c0 COLLATE NOCASE) IS TRUE)) ISNULL)) GROUP BY v0.c2, v0.c0;
SELECT ALL v0.c2, v0.c0 FROM v0 GROUP BY v0.c2, v0.c0;
SELECT rt0.c0, rt0.c2, t0.c0, rt0.c4, rt0.c6 FROM rt0, t0 GROUP BY rt0.c0, rt0.c2, t0.c0, rt0.c4, rt0.c6;
SELECT rt0.c0, rt0.c2, t0.c0, rt0.c4, rt0.c6 FROM rt0, t0 GROUP BY rt0.c0, rt0.c2, t0.c0, rt0.c4, rt0.c6 HAVING 0.27007297244314354 UNION ALL SELECT rt0.c0, rt0.c2, t0.c0, rt0.c4, rt0.c6 FROM rt0, t0 GROUP BY rt0.c0, rt0.c2, t0.c0, rt0.c4, rt0.c6 HAVING (NOT (0.27007297244314354)) UNION ALL SELECT rt0.c0, rt0.c2, t0.c0, rt0.c4, rt0.c6 FROM rt0, t0 GROUP BY rt0.c0, rt0.c2, t0.c0, rt0.c4, rt0.c6 HAVING ((0.27007297244314354) ISNULL);
SELECT rt0.c0, rt0.c2, t0.c0, rt0.c4, rt0.c6 FROM rt0, t0 GROUP BY rt0.c0, rt0.c2, t0.c0, rt0.c4, rt0.c6;
SELECT rt0.c0, rt0.c2, t0.c0, rt0.c4, rt0.c6 FROM rt0, t0 GROUP BY rt0.c0, rt0.c2, t0.c0, rt0.c4, rt0.c6 HAVING 0.27007297244314354 UNION ALL SELECT rt0.c0, rt0.c2, t0.c0, rt0.c4, rt0.c6 FROM rt0, t0 GROUP BY rt0.c0, rt0.c2, t0.c0, rt0.c4, rt0.c6 HAVING (NOT (0.27007297244314354)) UNION ALL SELECT rt0.c0, rt0.c2, t0.c0, rt0.c4, rt0.c6 FROM rt0, t0 GROUP BY rt0.c0, rt0.c2, t0.c0, rt0.c4, rt0.c6 HAVING ((0.27007297244314354) ISNULL);
SELECT rt0.c0, rt0.c2, t0.c0, rt0.c4, rt0.c6 FROM rt0, t0 GROUP BY rt0.c0, rt0.c2, t0.c0, rt0.c4, rt0.c6;
SELECT ALL v0.c0, rt0.c2, v0.c2 FROM v0, rt0;
SELECT ALL v0.c0, rt0.c2, v0.c2 FROM v0, rt0 WHERE ((((((v0.c0) NOT BETWEEN (rt0.c5) AND (rt0.c5))))<=(((((rt0.c6))<((rt0.c5))))))) UNION ALL SELECT ALL v0.c0, rt0.c2, v0.c2 FROM v0, rt0 WHERE ((NOT ((((((v0.c0) NOT BETWEEN (rt0.c5) AND (rt0.c5))))<=(((((rt0.c6))<((rt0.c5))))))))) UNION ALL SELECT ALL v0.c0, rt0.c2, v0.c2 FROM v0, rt0 WHERE ((((((((v0.c0) NOT BETWEEN (rt0.c5) AND (rt0.c5))))<=(((((rt0.c6))<((rt0.c5))))))) ISNULL));
SELECT ALL v0.c0, rt0.c2, v0.c2 FROM v0, rt0;
SELECT DISTINCT v0.c2, rt0.c5, rt0.c4, v0.c1, rt0.c6, rt0.c0, rt0.c1, v0.c0, rt0.c3, rt0.c2 FROM rt0, t0 RIGHT OUTER JOIN v0 ON (((rt0.c2)) NOT BETWEEN ((((v0.c1)LIKE(rt0.c0)))) AND (((- (v0.c2)))));
SELECT DISTINCT v0.c2, rt0.c5, rt0.c4, v0.c1, rt0.c6, rt0.c0, rt0.c1, v0.c0, rt0.c3, rt0.c2 FROM rt0, t0 RIGHT OUTER JOIN v0 ON (((rt0.c2)) NOT BETWEEN ((((v0.c1)LIKE(rt0.c0)))) AND (((- (v0.c2))))) WHERE (CASE WHEN LIKELIHOOD(rt0.c2, 0.23595999991707284) THEN ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1)) END) UNION SELECT DISTINCT v0.c2, rt0.c5, rt0.c4, v0.c1, rt0.c6, rt0.c0, rt0.c1, v0.c0, rt0.c3, rt0.c2 FROM rt0, t0 RIGHT OUTER JOIN v0 ON (((rt0.c2)) NOT BETWEEN ((((v0.c1)LIKE(rt0.c0)))) AND (((- (v0.c2))))) WHERE ((NOT (CASE WHEN LIKELIHOOD(rt0.c2, 0.23595999991707284) THEN ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1)) END))) UNION SELECT DISTINCT v0.c2, rt0.c5, rt0.c4, v0.c1, rt0.c6, rt0.c0, rt0.c1, v0.c0, rt0.c3, rt0.c2 FROM rt0, t0 RIGHT OUTER JOIN v0 ON (((rt0.c2)) NOT BETWEEN ((((v0.c1)LIKE(rt0.c0)))) AND (((- (v0.c2))))) WHERE (((CASE WHEN LIKELIHOOD(rt0.c2, 0.23595999991707284) THEN ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1)) END) ISNULL));
SELECT DISTINCT v0.c2, rt0.c5, rt0.c4, v0.c1, rt0.c6, rt0.c0, rt0.c1, v0.c0, rt0.c3, rt0.c2 FROM rt0, t0 RIGHT OUTER JOIN v0 ON (((rt0.c2)) NOT BETWEEN ((((v0.c1)LIKE(rt0.c0)))) AND (((- (v0.c2)))));
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE (CASE WHEN ((((((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))OR(t0.c0)))OR(t0.c0)))AND(t0.c0)) THEN (((x''))>=((t0.c0))) ELSE ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) END) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT (CASE WHEN ((((((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))OR(t0.c0)))OR(t0.c0)))AND(t0.c0)) THEN (((x''))>=((t0.c0))) ELSE ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) END))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE (((CASE WHEN ((((((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))OR(t0.c0)))OR(t0.c0)))AND(t0.c0)) THEN (((x''))>=((t0.c0))) ELSE ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) END) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT rt0.c4 FROM v0, t0, rt0 GROUP BY rt0.c4;
SELECT rt0.c4 FROM v0, t0, rt0 GROUP BY rt0.c4 HAVING MAX(CAST(t0.c0 AS BLOB)) UNION ALL SELECT rt0.c4 FROM v0, t0, rt0 GROUP BY rt0.c4 HAVING (NOT (MAX(CAST(t0.c0 AS BLOB)))) UNION ALL SELECT ALL rt0.c4 FROM v0, t0, rt0 GROUP BY rt0.c4 HAVING ((MAX(CAST(t0.c0 AS BLOB))) ISNULL);
SELECT rt0.c4 FROM v0, t0, rt0 GROUP BY rt0.c4;
SELECT rt0.c4 FROM v0, t0, rt0 GROUP BY rt0.c4 HAVING MAX(CAST(t0.c0 AS BLOB)) UNION ALL SELECT rt0.c4 FROM v0, t0, rt0 GROUP BY rt0.c4 HAVING (NOT (MAX(CAST(t0.c0 AS BLOB)))) UNION ALL SELECT ALL rt0.c4 FROM v0, t0, rt0 GROUP BY rt0.c4 HAVING ((MAX(CAST(t0.c0 AS BLOB))) ISNULL);
SELECT rt0.c4 FROM v0, t0, rt0 GROUP BY rt0.c4;
SELECT ALL * FROM t0 INNER JOIN rt0 ON (((((rt0.c4 IN ()))OR((((rt0.c1))=((rt0.c5))))))OR((+ (v0.c1)))) CROSS JOIN v0 ON ((rt0.c2)IS NOT(rt0.c1)) COLLATE BINARY;
SELECT * FROM t0 INNER JOIN rt0 ON (((((rt0.c4 IN ()))OR((((rt0.c1))==((rt0.c5))))))OR((+ (v0.c1)))) CROSS JOIN v0 ON ((rt0.c2)IS NOT(rt0.c1)) COLLATE BINARY WHERE (((rt0.c1) IS TRUE) COLLATE BINARY) UNION ALL SELECT * FROM t0 INNER JOIN rt0 ON (((((rt0.c4 IN ()))OR((((rt0.c1))=((rt0.c5))))))OR((+ (v0.c1)))) CROSS JOIN v0 ON ((rt0.c2)IS NOT(rt0.c1)) COLLATE BINARY WHERE ((NOT (((rt0.c1) IS TRUE) COLLATE BINARY))) UNION ALL SELECT * FROM t0 INNER JOIN rt0 ON (((((rt0.c4 IN ()))OR((((rt0.c1))=((rt0.c5))))))OR((+ (v0.c1)))) CROSS JOIN v0 ON ((rt0.c2)IS NOT(rt0.c1)) COLLATE BINARY WHERE (((((rt0.c1) IS TRUE) COLLATE BINARY) ISNULL));
SELECT ALL * FROM t0 INNER JOIN rt0 ON (((((rt0.c4 IN ()))OR((((rt0.c1))=((rt0.c5))))))OR((+ (v0.c1)))) CROSS JOIN v0 ON ((rt0.c2)IS NOT(rt0.c1)) COLLATE BINARY;
SELECT DISTINCT * FROM v0 CROSS JOIN rt0 ON rt0.c4;
SELECT DISTINCT * FROM v0 CROSS JOIN rt0 ON rt0.c4 WHERE (NULLIF(v0.c2, v0.c1) COLLATE NOCASE) UNION SELECT DISTINCT * FROM v0 CROSS JOIN rt0 ON rt0.c4 WHERE ((NOT (NULLIF(v0.c2, v0.c1) COLLATE NOCASE))) UNION SELECT DISTINCT * FROM v0 CROSS JOIN rt0 ON rt0.c4 WHERE (((NULLIF(v0.c2, v0.c1) COLLATE NOCASE) ISNULL));
SELECT DISTINCT * FROM v0 CROSS JOIN rt0 ON rt0.c4;
SELECT rt0.c1, rt0.c4, v0.c2, t0.c0, rt0.c2, rt0.c0, rt0.c3, v0.c1, v0.c0, rt0.c6 FROM rt0, v0, t0 GROUP BY rt0.c1, rt0.c4, v0.c2, t0.c0, rt0.c2, rt0.c0, rt0.c3, v0.c1, v0.c0, rt0.c6;
SELECT ALL rt0.c1, rt0.c4, v0.c2, t0.c0, rt0.c2, rt0.c0, rt0.c3, v0.c1, v0.c0, rt0.c6 FROM rt0, v0, t0 WHERE (0.12295331467627835) GROUP BY rt0.c1, rt0.c4, v0.c2, t0.c0, rt0.c2, rt0.c0, rt0.c3, v0.c1, v0.c0, rt0.c6 UNION SELECT ALL rt0.c1, rt0.c4, v0.c2, t0.c0, rt0.c2, rt0.c0, rt0.c3, v0.c1, v0.c0, rt0.c6 FROM rt0, v0, t0 WHERE ((NOT (0.12295331467627835))) GROUP BY rt0.c1, rt0.c4, v0.c2, t0.c0, rt0.c2, rt0.c0, rt0.c3, v0.c1, v0.c0, rt0.c6 UNION SELECT rt0.c1, rt0.c4, v0.c2, t0.c0, rt0.c2, rt0.c0, rt0.c3, v0.c1, v0.c0, rt0.c6 FROM rt0, v0, t0 WHERE (((0.12295331467627835) ISNULL)) GROUP BY rt0.c1, rt0.c4, v0.c2, t0.c0, rt0.c2, rt0.c0, rt0.c3, v0.c1, v0.c0, rt0.c6;
SELECT rt0.c1, rt0.c4, v0.c2, t0.c0, rt0.c2, rt0.c0, rt0.c3, v0.c1, v0.c0, rt0.c6 FROM rt0, v0, t0 GROUP BY rt0.c1, rt0.c4, v0.c2, t0.c0, rt0.c2, rt0.c0, rt0.c3, v0.c1, v0.c0, rt0.c6;
SELECT rt0.c3, v0.c2, rt0.c5, v0.c1 FROM v0, rt0 GROUP BY rt0.c3, v0.c2, rt0.c5, v0.c1;
SELECT rt0.c3, v0.c2, rt0.c5, v0.c1 FROM v0, rt0 GROUP BY rt0.c3, v0.c2, rt0.c5, v0.c1 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c3, v0.c2, rt0.c5, v0.c1 FROM v0, rt0 GROUP BY rt0.c3, v0.c2, rt0.c5, v0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c3, v0.c2, rt0.c5, v0.c1 FROM v0, rt0 GROUP BY rt0.c3, v0.c2, rt0.c5, v0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c3, v0.c2, rt0.c5, v0.c1 FROM v0, rt0 GROUP BY rt0.c3, v0.c2, rt0.c5, v0.c1;
SELECT rt0.c3, v0.c2, rt0.c5, v0.c1 FROM v0, rt0 GROUP BY rt0.c3, v0.c2, rt0.c5, v0.c1 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c3, v0.c2, rt0.c5, v0.c1 FROM v0, rt0 GROUP BY rt0.c3, v0.c2, rt0.c5, v0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c3, v0.c2, rt0.c5, v0.c1 FROM v0, rt0 GROUP BY rt0.c3, v0.c2, rt0.c5, v0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c3, v0.c2, rt0.c5, v0.c1 FROM v0, rt0 GROUP BY rt0.c3, v0.c2, rt0.c5, v0.c1;
SELECT ALL MIN(((LOWER(rt0.c6)) BETWEEN (rt0.c3) AND ((rt0.c3 IN ())))) FROM rt0;
SELECT ALL rt0.c3, rt0.c6 FROM rt0;
SELECT ALL rt0.c3, rt0.c6 FROM rt0 WHERE (((rt0.c4 COLLATE BINARY) IS FALSE)) UNION ALL SELECT ALL rt0.c3, rt0.c6 FROM rt0 WHERE ((NOT (((rt0.c4 COLLATE BINARY) IS FALSE)))) UNION ALL SELECT ALL rt0.c3, rt0.c6 FROM rt0 WHERE (((((rt0.c4 COLLATE BINARY) IS FALSE)) ISNULL));
SELECT ALL rt0.c3, rt0.c6 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c6, rt0.c3, rt0.c2, rt0.c5, v0.c0, rt0.c1, v0.c1, v0.c2, rt0.c4 FROM rt0, v0;
SELECT DISTINCT rt0.c0, rt0.c6, rt0.c3, rt0.c2, rt0.c5, v0.c0, rt0.c1, v0.c1, v0.c2, rt0.c4 FROM rt0, v0 WHERE (rt0.c0) UNION SELECT DISTINCT rt0.c0, rt0.c6, rt0.c3, rt0.c2, rt0.c5, v0.c0, rt0.c1, v0.c1, v0.c2, rt0.c4 FROM rt0, v0 WHERE ((NOT (rt0.c0))) UNION SELECT DISTINCT rt0.c0, rt0.c6, rt0.c3, rt0.c2, rt0.c5, v0.c0, rt0.c1, v0.c1, v0.c2, rt0.c4 FROM rt0, v0 WHERE (((rt0.c0) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c6, rt0.c3, rt0.c2, rt0.c5, v0.c0, rt0.c1, v0.c1, v0.c2, rt0.c4 FROM rt0, v0;
SELECT v0.c2, rt0.c3, rt0.c0, rt0.c6, v0.c1 FROM rt0, v0 GROUP BY v0.c2, rt0.c3, rt0.c0, rt0.c6, v0.c1;
SELECT ALL v0.c2, rt0.c3, rt0.c0, rt0.c6, v0.c1 FROM rt0, v0 WHERE (rt0.c5) GROUP BY v0.c2, rt0.c3, rt0.c0, rt0.c6, v0.c1 UNION SELECT ALL v0.c2, rt0.c3, rt0.c0, rt0.c6, v0.c1 FROM rt0, v0 WHERE ((NOT (rt0.c5))) GROUP BY v0.c2, rt0.c3, rt0.c0, rt0.c6, v0.c1 UNION SELECT v0.c2, rt0.c3, rt0.c0, rt0.c6, v0.c1 FROM rt0, v0 WHERE (((rt0.c5) ISNULL)) GROUP BY v0.c2, rt0.c3, rt0.c0, rt0.c6, v0.c1;
SELECT v0.c2, rt0.c3, rt0.c0, rt0.c6, v0.c1 FROM rt0, v0 GROUP BY v0.c2, rt0.c3, rt0.c0, rt0.c6, v0.c1;
SELECT ALL rt0.c5, v0.c1, rt0.c6, v0.c2, rt0.c4 FROM t0, v0, rt0 GROUP BY rt0.c5, v0.c1, rt0.c6, v0.c2, rt0.c4;
SELECT rt0.c5, v0.c1, rt0.c6, v0.c2, rt0.c4 FROM t0, v0, rt0 GROUP BY rt0.c5, v0.c1, rt0.c6, v0.c2, rt0.c4 HAVING MIN((NOT (rt0.c0))) UNION ALL SELECT rt0.c5, v0.c1, rt0.c6, v0.c2, rt0.c4 FROM t0, v0, rt0 GROUP BY rt0.c5, v0.c1, rt0.c6, v0.c2, rt0.c4 HAVING (NOT (MIN((NOT (rt0.c0))))) UNION ALL SELECT rt0.c5, v0.c1, rt0.c6, v0.c2, rt0.c4 FROM t0, v0, rt0 GROUP BY rt0.c5, v0.c1, rt0.c6, v0.c2, rt0.c4 HAVING ((MIN((NOT (rt0.c0)))) ISNULL);
SELECT ALL rt0.c5, v0.c1, rt0.c6, v0.c2, rt0.c4 FROM t0, v0, rt0 GROUP BY rt0.c5, v0.c1, rt0.c6, v0.c2, rt0.c4;
SELECT rt0.c5, v0.c1, rt0.c6, v0.c2, rt0.c4 FROM t0, v0, rt0 GROUP BY rt0.c5, v0.c1, rt0.c6, v0.c2, rt0.c4 HAVING MIN((NOT (rt0.c0))) UNION ALL SELECT rt0.c5, v0.c1, rt0.c6, v0.c2, rt0.c4 FROM t0, v0, rt0 GROUP BY rt0.c5, v0.c1, rt0.c6, v0.c2, rt0.c4 HAVING (NOT (MIN((NOT (rt0.c0))))) UNION ALL SELECT rt0.c5, v0.c1, rt0.c6, v0.c2, rt0.c4 FROM t0, v0, rt0 GROUP BY rt0.c5, v0.c1, rt0.c6, v0.c2, rt0.c4 HAVING ((MIN((NOT (rt0.c0)))) ISNULL);
SELECT ALL rt0.c5, v0.c1, rt0.c6, v0.c2, rt0.c4 FROM t0, v0, rt0 GROUP BY rt0.c5, v0.c1, rt0.c6, v0.c2, rt0.c4;
SELECT ALL * FROM v0 CROSS JOIN t0 ON CAST(1409696729 COLLATE NOCASE AS NUMERIC);
SELECT * FROM v0 CROSS JOIN t0 ON CAST(1409696729 COLLATE NOCASE AS NUMERIC) WHERE (0.5719385121024064) UNION ALL SELECT * FROM v0 CROSS JOIN t0 ON CAST(1409696729 COLLATE NOCASE AS NUMERIC) WHERE ((NOT (0.5719385121024064))) UNION ALL SELECT * FROM v0 CROSS JOIN t0 ON CAST(1409696729 COLLATE NOCASE AS NUMERIC) WHERE (((0.5719385121024064) ISNULL));
SELECT ALL * FROM v0 CROSS JOIN t0 ON CAST(1409696729 COLLATE NOCASE AS NUMERIC);
SELECT DISTINCT * FROM rt0, v0, t0;
SELECT DISTINCT * FROM rt0, v0, t0 WHERE (((((CAST(rt0.c2 AS TEXT))OR(CAST(rt0.c0 AS INTEGER))))AND(json_remove(rt0.c6, t0.c0, rt0.c0, rt0.c6)))) UNION SELECT DISTINCT * FROM rt0, v0, t0 WHERE ((NOT (((((CAST(rt0.c2 AS TEXT))OR(CAST(rt0.c0 AS INTEGER))))AND(json_remove(rt0.c6, t0.c0, rt0.c0, rt0.c6)))))) UNION SELECT DISTINCT * FROM rt0, v0, t0 WHERE (((((((CAST(rt0.c2 AS TEXT))OR(CAST(rt0.c0 AS INTEGER))))AND(json_remove(rt0.c6, t0.c0, rt0.c0, rt0.c6)))) ISNULL));
SELECT DISTINCT * FROM rt0, v0, t0;
SELECT v0.c0, rt0.c4, v0.c2, rt0.c3, rt0.c1, v0.c1, rt0.c5, rt0.c0 FROM v0, rt0 GROUP BY v0.c0, rt0.c4, v0.c2, rt0.c3, rt0.c1, v0.c1, rt0.c5, rt0.c0;
SELECT v0.c0, rt0.c4, v0.c2, rt0.c3, rt0.c1, v0.c1, rt0.c5, rt0.c0 FROM v0, rt0 WHERE (((((NULL)+(rt0.c4)))AND(CAST(v0.c2 AS INTEGER)))) GROUP BY v0.c0, rt0.c4, v0.c2, rt0.c3, rt0.c1, v0.c1, rt0.c5, rt0.c0 UNION SELECT ALL v0.c0, rt0.c4, v0.c2, rt0.c3, rt0.c1, v0.c1, rt0.c5, rt0.c0 FROM v0, rt0 WHERE ((NOT (((((NULL)+(rt0.c4)))AND(CAST(v0.c2 AS INTEGER)))))) GROUP BY v0.c0, rt0.c4, v0.c2, rt0.c3, rt0.c1, v0.c1, rt0.c5, rt0.c0 UNION SELECT v0.c0, rt0.c4, v0.c2, rt0.c3, rt0.c1, v0.c1, rt0.c5, rt0.c0 FROM v0, rt0 WHERE (((((((NULL)+(rt0.c4)))AND(CAST(v0.c2 AS INTEGER)))) ISNULL)) GROUP BY v0.c0, rt0.c4, v0.c2, rt0.c3, rt0.c1, v0.c1, rt0.c5, rt0.c0;
SELECT v0.c0, rt0.c4, v0.c2, rt0.c3, rt0.c1, v0.c1, rt0.c5, rt0.c0 FROM v0, rt0 GROUP BY v0.c0, rt0.c4, v0.c2, rt0.c3, rt0.c1, v0.c1, rt0.c5, rt0.c0;
SELECT t0.c0, v0.c2, v0.c0 FROM t0, v0 GROUP BY t0.c0, v0.c2, v0.c0;
SELECT t0.c0, v0.c2, v0.c0 FROM t0, v0 GROUP BY t0.c0, v0.c2, v0.c0 HAVING AVG(SUM(x'6e4dee9e')) UNION ALL SELECT ALL t0.c0, v0.c2, v0.c0 FROM t0, v0 GROUP BY t0.c0, v0.c2, v0.c0 HAVING (NOT (AVG(SUM(x'6e4dee9e')))) UNION ALL SELECT t0.c0, v0.c2, v0.c0 FROM t0, v0 GROUP BY t0.c0, v0.c2, v0.c0 HAVING ((AVG(SUM(x'6e4dee9e'))) ISNULL);
SELECT rt0.c6 FROM rt0;
SELECT rt0.c6 FROM rt0 WHERE (rt0.c2) UNION ALL SELECT ALL rt0.c6 FROM rt0 WHERE ((NOT (rt0.c2))) UNION ALL SELECT ALL rt0.c6 FROM rt0 WHERE (((rt0.c2) ISNULL));
SELECT rt0.c6 FROM rt0;
SELECT DISTINCT t0.c0, v0.c1 FROM v0 CROSS JOIN t0 ON (((v0.c1 IN ()))OR((+ (t0.c0))));
SELECT DISTINCT t0.c0, v0.c1 FROM v0 CROSS JOIN t0 ON (((v0.c1 IN ()))OR((+ (t0.c0)))) WHERE (CASE CAST(v0.c2 AS REAL)  WHEN ((v0.c2) BETWEEN (t0.c0) AND (v0.c2)) THEN ((v0.c2)>(v0.c2)) WHEN CAST(v0.c2 AS INTEGER) THEN ((v0.c2)>>(t0.c0)) WHEN '-453922715' THEN (~ (t0.c0)) END) UNION SELECT DISTINCT t0.c0, v0.c1 FROM v0 CROSS JOIN t0 ON (((v0.c1 IN ()))OR((+ (t0.c0)))) WHERE ((NOT (CASE CAST(v0.c2 AS REAL)  WHEN ((v0.c2) BETWEEN (t0.c0) AND (v0.c2)) THEN ((v0.c2)>(v0.c2)) WHEN CAST(v0.c2 AS INTEGER) THEN ((v0.c2)>>(t0.c0)) WHEN '-453922715' THEN (~ (t0.c0)) END))) UNION SELECT DISTINCT t0.c0, v0.c1 FROM v0 CROSS JOIN t0 ON (((v0.c1 IN ()))OR((+ (t0.c0)))) WHERE (((CASE CAST(v0.c2 AS REAL)  WHEN ((v0.c2) BETWEEN (t0.c0) AND (v0.c2)) THEN ((v0.c2)>(v0.c2)) WHEN CAST(v0.c2 AS INTEGER) THEN ((v0.c2)>>(t0.c0)) WHEN '-453922715' THEN (~ (t0.c0)) END) ISNULL));
SELECT DISTINCT t0.c0, v0.c1 FROM v0 CROSS JOIN t0 ON (((v0.c1 IN ()))OR((+ (t0.c0))));
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 WHERE (CASE WHEN t0.c0 THEN t0.c0 COLLATE BINARY END) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT (CASE WHEN t0.c0 THEN t0.c0 COLLATE BINARY END))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE (((CASE WHEN t0.c0 THEN t0.c0 COLLATE BINARY END) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL rt0.c5, rt0.c4, rt0.c3, rt0.c1 FROM rt0 GROUP BY rt0.c5, rt0.c4, rt0.c3, rt0.c1;
SELECT ALL rt0.c5, rt0.c4, rt0.c3, rt0.c1 FROM rt0 GROUP BY rt0.c5, rt0.c4, rt0.c3, rt0.c1 HAVING TOTAL(MIN(rt0.c5)) UNION ALL SELECT rt0.c5, rt0.c4, rt0.c3, rt0.c1 FROM rt0 GROUP BY rt0.c5, rt0.c4, rt0.c3, rt0.c1 HAVING (NOT (TOTAL(MIN(rt0.c5)))) UNION ALL SELECT rt0.c5, rt0.c4, rt0.c3, rt0.c1 FROM rt0 GROUP BY rt0.c5, rt0.c4, rt0.c3, rt0.c1 HAVING ((TOTAL(MIN(rt0.c5))) ISNULL);
SELECT ALL v0.c0, rt0.c5, rt0.c0, rt0.c2 FROM v0, rt0;
SELECT v0.c0, rt0.c5, rt0.c0, rt0.c2 FROM v0, rt0 WHERE ((((CAST(rt0.c2 AS NUMERIC), ABS(v0.c2), (((v0.c1))>=((v0.c0)))))>((LTRIM(rt0.c2, v0.c0), rt0.c1 COLLATE NOCASE, ((rt0.c6) BETWEEN (rt0.c5) AND (rt0.c2)))))) UNION ALL SELECT v0.c0, rt0.c5, rt0.c0, rt0.c2 FROM v0, rt0 WHERE ((NOT ((((CAST(rt0.c2 AS NUMERIC), ABS(v0.c2), (((v0.c1))>=((v0.c0)))))>((LTRIM(rt0.c2, v0.c0), rt0.c1 COLLATE NOCASE, ((rt0.c6) BETWEEN (rt0.c5) AND (rt0.c2)))))))) UNION ALL SELECT ALL v0.c0, rt0.c5, rt0.c0, rt0.c2 FROM v0, rt0 WHERE ((((((CAST(rt0.c2 AS NUMERIC), ABS(v0.c2), (((v0.c1))>=((v0.c0)))))>((LTRIM(rt0.c2, v0.c0), rt0.c1 COLLATE NOCASE, ((rt0.c6) BETWEEN (rt0.c5) AND (rt0.c2)))))) ISNULL));
SELECT ALL v0.c0, rt0.c5, rt0.c0, rt0.c2 FROM v0, rt0;
SELECT DISTINCT t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0 WHERE (0.43101303769663757) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((NOT (0.43101303769663757))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE (((0.43101303769663757) ISNULL));
SELECT DISTINCT t0.c0 FROM t0;
SELECT ALL rt0.c3, rt0.c6, v0.c1 FROM rt0 NATURAL JOIN v0 GROUP BY rt0.c3, rt0.c6, v0.c1;
SELECT rt0.c3, rt0.c6, v0.c1 FROM rt0 NATURAL JOIN v0 WHERE (((((v0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c1))) NOT BETWEEN (((('776608484')) BETWEEN ((v0.c1)) AND ((x'')))) AND (((rt0.c0) BETWEEN (x'') AND (v0.c2))))) GROUP BY rt0.c3, rt0.c6, v0.c1 UNION SELECT rt0.c3, rt0.c6, v0.c1 FROM rt0 NATURAL JOIN v0 WHERE ((NOT (((((v0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c1))) NOT BETWEEN (((('776608484')) BETWEEN ((v0.c1)) AND ((x'')))) AND (((rt0.c0) BETWEEN (x'') AND (v0.c2))))))) GROUP BY rt0.c3, rt0.c6, v0.c1 UNION SELECT ALL rt0.c3, rt0.c6, v0.c1 FROM rt0 NATURAL JOIN v0 WHERE (((((((v0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c1))) NOT BETWEEN (((('776608484')) BETWEEN ((v0.c1)) AND ((x'')))) AND (((rt0.c0) BETWEEN (x'') AND (v0.c2))))) ISNULL)) GROUP BY rt0.c3, rt0.c6, v0.c1;
SELECT ALL rt0.c3, rt0.c6, v0.c1 FROM rt0 NATURAL JOIN v0 GROUP BY rt0.c3, rt0.c6, v0.c1;
SELECT ALL rt0.c0, rt0.c3, rt0.c6, rt0.c1, t0.c0 FROM rt0, t0 GROUP BY rt0.c0, rt0.c3, rt0.c6, rt0.c1, t0.c0;
SELECT rt0.c0, rt0.c3, rt0.c6, rt0.c1, t0.c0 FROM rt0, t0 GROUP BY rt0.c0, rt0.c3, rt0.c6, rt0.c1, t0.c0 HAVING AVG(GROUP_CONCAT(MAX(rt0.c4))) COLLATE NOCASE UNION ALL SELECT rt0.c0, rt0.c3, rt0.c6, rt0.c1, t0.c0 FROM rt0, t0 GROUP BY rt0.c0, rt0.c3, rt0.c6, rt0.c1, t0.c0 HAVING (NOT (AVG(GROUP_CONCAT(MAX(rt0.c4))) COLLATE NOCASE)) UNION ALL SELECT rt0.c0, rt0.c3, rt0.c6, rt0.c1, t0.c0 FROM rt0, t0 GROUP BY rt0.c0, rt0.c3, rt0.c6, rt0.c1, t0.c0 HAVING ((AVG(GROUP_CONCAT(MAX(rt0.c4))) COLLATE NOCASE) ISNULL);
SELECT ALL * FROM rt0 CROSS JOIN t0 ON ((t0.c0)-(((rt0.c5)<=(rt0.c1))));
SELECT * FROM rt0 CROSS JOIN t0 ON ((t0.c0)-(((rt0.c5)<=(rt0.c1)))) WHERE ('1376998607') UNION ALL SELECT ALL * FROM rt0 CROSS JOIN t0 ON ((t0.c0)-(((rt0.c5)<=(rt0.c1)))) WHERE ((NOT ('1376998607'))) UNION ALL SELECT ALL * FROM rt0 CROSS JOIN t0 ON ((t0.c0)-(((rt0.c5)<=(rt0.c1)))) WHERE ((('1376998607') ISNULL));
SELECT ALL * FROM rt0 CROSS JOIN t0 ON ((t0.c0)-(((rt0.c5)<=(rt0.c1))));
SELECT DISTINCT v0.c1, v0.c0 FROM v0;
SELECT DISTINCT v0.c1, v0.c0 FROM v0 WHERE (v0.c1) UNION SELECT DISTINCT v0.c1, v0.c0 FROM v0 WHERE ((NOT (v0.c1))) UNION SELECT DISTINCT v0.c1, v0.c0 FROM v0 WHERE (((v0.c1) ISNULL));
SELECT DISTINCT v0.c1, v0.c0 FROM v0;
SELECT v0.c2, v0.c0, v0.c1 FROM v0 GROUP BY v0.c2, v0.c0, v0.c1;
SELECT v0.c2, v0.c0, v0.c1 FROM v0 WHERE (((v0.c0 COLLATE BINARY) NOT NULL)) GROUP BY v0.c2, v0.c0, v0.c1 UNION SELECT v0.c2, v0.c0, v0.c1 FROM v0 WHERE ((NOT (((v0.c0 COLLATE BINARY) NOT NULL)))) GROUP BY v0.c2, v0.c0, v0.c1 UNION SELECT v0.c2, v0.c0, v0.c1 FROM v0 WHERE (((((v0.c0 COLLATE BINARY) NOT NULL)) ISNULL)) GROUP BY v0.c2, v0.c0, v0.c1;
SELECT v0.c2, v0.c0, v0.c1 FROM v0 GROUP BY v0.c2, v0.c0, v0.c1;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (+ (MIN(TOTAL(t0.c0)))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT ((+ (MIN(TOTAL(t0.c0)))))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (((+ (MIN(TOTAL(t0.c0))))) ISNULL);
SELECT * FROM v0, rt0 LEFT OUTER JOIN t0 ON 0.1575234795470466;
SELECT * FROM v0, rt0 LEFT OUTER JOIN t0 ON 0.1575234795470466 WHERE (rt0.c1) UNION ALL SELECT * FROM v0, rt0 LEFT OUTER JOIN t0 ON 0.1575234795470466 WHERE ((NOT (rt0.c1))) UNION ALL SELECT ALL * FROM v0, rt0 LEFT OUTER JOIN t0 ON 0.1575234795470466 WHERE (((rt0.c1) ISNULL));
SELECT * FROM v0, rt0 LEFT OUTER JOIN t0 ON 0.1575234795470466;
SELECT DISTINCT rt0.c4, rt0.c2, v0.c2, rt0.c3, rt0.c5, t0.c0 FROM rt0, v0, t0;
SELECT DISTINCT rt0.c4, rt0.c2, v0.c2, rt0.c3, rt0.c5, t0.c0 FROM rt0, v0, t0 WHERE (CAST(0.05082634794509966 AS BLOB)) UNION SELECT DISTINCT rt0.c4, rt0.c2, v0.c2, rt0.c3, rt0.c5, t0.c0 FROM rt0, v0, t0 WHERE ((NOT (CAST(0.05082634794509966 AS BLOB)))) UNION SELECT DISTINCT rt0.c4, rt0.c2, v0.c2, rt0.c3, rt0.c5, t0.c0 FROM rt0, v0, t0 WHERE (((CAST(0.05082634794509966 AS BLOB)) ISNULL));
SELECT DISTINCT rt0.c4, rt0.c2, v0.c2, rt0.c3, rt0.c5, t0.c0 FROM rt0, v0, t0;
SELECT ALL rt0.c3 FROM t0 CROSS JOIN rt0 ON (- (rt0.c0)) COLLATE RTRIM RIGHT OUTER JOIN v0 ON -1561433859 GROUP BY rt0.c3;
SELECT ALL rt0.c3 FROM t0 CROSS JOIN rt0 ON (- (rt0.c0)) COLLATE RTRIM RIGHT OUTER JOIN v0 ON -1561433859 WHERE ((- ((((rt0.c5))>((v0.c1)))))) GROUP BY rt0.c3 UNION SELECT ALL rt0.c3 FROM t0 CROSS JOIN rt0 ON (- (rt0.c0)) COLLATE RTRIM RIGHT OUTER JOIN v0 ON -1561433859 WHERE ((NOT ((- ((((rt0.c5))>((v0.c1)))))))) GROUP BY rt0.c3 UNION SELECT ALL rt0.c3 FROM t0 CROSS JOIN rt0 ON (- (rt0.c0)) COLLATE RTRIM RIGHT OUTER JOIN v0 ON -1561433859 WHERE ((((- ((((rt0.c5))>((v0.c1)))))) ISNULL)) GROUP BY rt0.c3;
SELECT ALL rt0.c3 FROM t0 CROSS JOIN rt0 ON (- (rt0.c0)) COLLATE RTRIM RIGHT OUTER JOIN v0 ON -1561433859 GROUP BY rt0.c3;
SELECT rt0.c4, t0.c0, rt0.c5, rt0.c0, rt0.c2, v0.c0, v0.c1, rt0.c1, v0.c2, rt0.c6, rt0.c3 FROM rt0, v0, t0 GROUP BY rt0.c4, t0.c0, rt0.c5, rt0.c0, rt0.c2, v0.c0, v0.c1, rt0.c1, v0.c2, rt0.c6, rt0.c3;
SELECT rt0.c4, t0.c0, rt0.c5, rt0.c0, rt0.c2, v0.c0, v0.c1, rt0.c1, v0.c2, rt0.c6, rt0.c3 FROM rt0, v0, t0 GROUP BY rt0.c4, t0.c0, rt0.c5, rt0.c0, rt0.c2, v0.c0, v0.c1, rt0.c1, v0.c2, rt0.c6, rt0.c3 HAVING ((SUM(MAX(COUNT(COUNT(*))))) BETWEEN ((- (SUM(COUNT(*))))) AND (MAX(rt0.c6))) UNION ALL SELECT rt0.c4, t0.c0, rt0.c5, rt0.c0, rt0.c2, v0.c0, v0.c1, rt0.c1, v0.c2, rt0.c6, rt0.c3 FROM rt0, v0, t0 GROUP BY rt0.c4, t0.c0, rt0.c5, rt0.c0, rt0.c2, v0.c0, v0.c1, rt0.c1, v0.c2, rt0.c6, rt0.c3 HAVING (NOT (((SUM(MAX(COUNT(COUNT(*))))) BETWEEN ((- (SUM(COUNT(*))))) AND (MAX(rt0.c6))))) UNION ALL SELECT ALL rt0.c4, t0.c0, rt0.c5, rt0.c0, rt0.c2, v0.c0, v0.c1, rt0.c1, v0.c2, rt0.c6, rt0.c3 FROM rt0, v0, t0 GROUP BY rt0.c4, t0.c0, rt0.c5, rt0.c0, rt0.c2, v0.c0, v0.c1, rt0.c1, v0.c2, rt0.c6, rt0.c3 HAVING ((((SUM(MAX(COUNT(COUNT(*))))) BETWEEN ((- (SUM(COUNT(*))))) AND (MAX(rt0.c6)))) ISNULL);
SELECT rt0.c4, t0.c0, rt0.c6, rt0.c2, v0.c2, rt0.c5, rt0.c0, v0.c0 FROM rt0, v0, t0;
SELECT rt0.c4, t0.c0, rt0.c6, rt0.c2, v0.c2, rt0.c5, rt0.c0, v0.c0 FROM rt0, v0, t0 WHERE (((COALESCE(DISTINCT v0.c1, v0.c1))%((('')&(rt0.c0))))) UNION ALL SELECT ALL rt0.c4, t0.c0, rt0.c6, rt0.c2, v0.c2, rt0.c5, rt0.c0, v0.c0 FROM rt0, v0, t0 WHERE ((NOT (((COALESCE(DISTINCT v0.c1, v0.c1))%((('')&(rt0.c0))))))) UNION ALL SELECT ALL rt0.c4, t0.c0, rt0.c6, rt0.c2, v0.c2, rt0.c5, rt0.c0, v0.c0 FROM rt0, v0, t0 WHERE (((((COALESCE(DISTINCT v0.c1, v0.c1))%((('')&(rt0.c0))))) ISNULL));
SELECT rt0.c4, t0.c0, rt0.c6, rt0.c2, v0.c2, rt0.c5, rt0.c0, v0.c0 FROM rt0, v0, t0;
SELECT DISTINCT rt0.c4, v0.c1, rt0.c5 FROM v0, t0, rt0;
SELECT DISTINCT rt0.c4, v0.c1, rt0.c5 FROM v0, t0, rt0 WHERE (((v0.c2 COLLATE NOCASE) IS FALSE)) UNION SELECT DISTINCT rt0.c4, v0.c1, rt0.c5 FROM v0, t0, rt0 WHERE ((NOT (((v0.c2 COLLATE NOCASE) IS FALSE)))) UNION SELECT DISTINCT rt0.c4, v0.c1, rt0.c5 FROM v0, t0, rt0 WHERE (((((v0.c2 COLLATE NOCASE) IS FALSE)) ISNULL));
SELECT DISTINCT rt0.c4, v0.c1, rt0.c5 FROM v0, t0, rt0;
SELECT ALL rt0.c4 FROM rt0 GROUP BY rt0.c4;
SELECT ALL rt0.c4 FROM rt0 WHERE ((((((0.9746325835062496)<>(rt0.c1))))<=((((rt0.c2)GLOB(NULL)))))) GROUP BY rt0.c4 UNION SELECT rt0.c4 FROM rt0 WHERE ((NOT ((((((0.9746325835062496)<>(rt0.c1))))<=((((rt0.c2)GLOB(NULL)))))))) GROUP BY rt0.c4 UNION SELECT ALL rt0.c4 FROM rt0 WHERE ((((((((0.9746325835062496)!=(rt0.c1))))<=((((rt0.c2)GLOB(NULL)))))) ISNULL)) GROUP BY rt0.c4;
SELECT ALL rt0.c4 FROM rt0 GROUP BY rt0.c4;
SELECT v0.c1, t0.c0 FROM v0, t0 GROUP BY v0.c1, t0.c0;
SELECT v0.c1, t0.c0 FROM v0, t0 NOT INDEXED GROUP BY v0.c1, t0.c0 HAVING 'h(t 89' UNION ALL SELECT v0.c1, t0.c0 FROM v0, t0 GROUP BY v0.c1, t0.c0 HAVING (NOT ('h(t 89')) UNION ALL SELECT v0.c1, t0.c0 FROM v0, t0 GROUP BY v0.c1, t0.c0 HAVING (('h(t 89') ISNULL);
SELECT v0.c1, t0.c0 FROM v0, t0 GROUP BY v0.c1, t0.c0;
SELECT v0.c1, t0.c0 FROM v0, t0 NOT INDEXED GROUP BY v0.c1, t0.c0 HAVING 'h(t 89' UNION ALL SELECT v0.c1, t0.c0 FROM v0, t0 GROUP BY v0.c1, t0.c0 HAVING (NOT ('h(t 89')) UNION ALL SELECT v0.c1, t0.c0 FROM v0, t0 GROUP BY v0.c1, t0.c0 HAVING (('h(t 89') ISNULL);
SELECT v0.c1, t0.c0 FROM v0, t0 GROUP BY v0.c1, t0.c0;
SELECT ALL rt0.c5, rt0.c0, rt0.c3, rt0.c2, rt0.c4, rt0.c1 FROM rt0, t0;
SELECT ALL rt0.c5, rt0.c0, rt0.c3, rt0.c2, rt0.c4, rt0.c1 FROM rt0, t0 WHERE (((rt0.c6 COLLATE BINARY)>>(CASE WHEN rt0.c5 THEN rt0.c0 END))) UNION ALL SELECT ALL rt0.c5, rt0.c0, rt0.c3, rt0.c2, rt0.c4, rt0.c1 FROM rt0, t0 WHERE ((NOT (((rt0.c6 COLLATE BINARY)>>(CASE WHEN rt0.c5 THEN rt0.c0 END))))) UNION ALL SELECT ALL rt0.c5, rt0.c0, rt0.c3, rt0.c2, rt0.c4, rt0.c1 FROM rt0, t0 WHERE (((((rt0.c6 COLLATE BINARY)>>(CASE WHEN rt0.c5 THEN rt0.c0 END))) ISNULL));
SELECT ALL rt0.c5, rt0.c0, rt0.c3, rt0.c2, rt0.c4, rt0.c1 FROM rt0, t0;
SELECT DISTINCT rt0.c4, rt0.c6, rt0.c5, rt0.c3, rt0.c1, t0.c0 FROM t0, rt0;
SELECT DISTINCT rt0.c4, rt0.c6, rt0.c5, rt0.c3, rt0.c1, t0.c0 FROM t0, rt0 WHERE (((((rt0.c4) IS TRUE))-(((rt0.c4)>(''))))) UNION SELECT DISTINCT rt0.c4, rt0.c6, rt0.c5, rt0.c3, rt0.c1, t0.c0 FROM t0, rt0 WHERE ((NOT (((((rt0.c4) IS TRUE))-(((rt0.c4)>(''))))))) UNION SELECT DISTINCT rt0.c4, rt0.c6, rt0.c5, rt0.c3, rt0.c1, t0.c0 FROM t0, rt0 WHERE (((((((rt0.c4) IS TRUE))-(((rt0.c4)>(''))))) ISNULL));
SELECT DISTINCT rt0.c4, rt0.c6, rt0.c5, rt0.c3, rt0.c1, t0.c0 FROM t0, rt0;
SELECT rt0.c6, rt0.c1, v0.c1 FROM t0, v0, rt0 GROUP BY rt0.c6, rt0.c1, v0.c1;
SELECT rt0.c6, rt0.c1, v0.c1 FROM t0, v0, rt0 WHERE (HEX(t0.c0) COLLATE NOCASE) GROUP BY rt0.c6, rt0.c1, v0.c1 UNION SELECT rt0.c6, rt0.c1, v0.c1 FROM t0, v0, rt0 WHERE ((NOT (HEX(t0.c0) COLLATE NOCASE))) GROUP BY rt0.c6, rt0.c1, v0.c1 UNION SELECT ALL rt0.c6, rt0.c1, v0.c1 FROM t0, v0, rt0 WHERE (((HEX(t0.c0) COLLATE NOCASE) ISNULL)) GROUP BY rt0.c6, rt0.c1, v0.c1;
SELECT rt0.c6, rt0.c1, v0.c1 FROM t0, v0, rt0 GROUP BY rt0.c6, rt0.c1, v0.c1;
SELECT rt0.c4, rt0.c1, rt0.c3, rt0.c5, rt0.c6, rt0.c0 FROM rt0, t0 GROUP BY rt0.c4, rt0.c1, rt0.c3, rt0.c5, rt0.c6, rt0.c0;
SELECT rt0.c4, rt0.c1, rt0.c3, rt0.c5, rt0.c6, rt0.c0 FROM rt0, t0 GROUP BY rt0.c4, rt0.c1, rt0.c3, rt0.c5, rt0.c6, rt0.c0 HAVING ((((SUM(rt0.c2))AND(rt0.c1 COLLATE BINARY)))AND(((rt0.c0) NOT BETWEEN (COUNT(MAX(rt0.c0))) AND (GROUP_CONCAT(rt0.c0))))) UNION ALL SELECT rt0.c4, rt0.c1, rt0.c3, rt0.c5, rt0.c6, rt0.c0 FROM rt0, t0 GROUP BY rt0.c4, rt0.c1, rt0.c3, rt0.c5, rt0.c6, rt0.c0 HAVING (NOT (((((SUM(rt0.c2))AND(rt0.c1 COLLATE BINARY)))AND(((rt0.c0) NOT BETWEEN (COUNT(MAX(rt0.c0))) AND (GROUP_CONCAT(rt0.c0))))))) UNION ALL SELECT ALL rt0.c4, rt0.c1, rt0.c3, rt0.c5, rt0.c6, rt0.c0 FROM rt0, t0 GROUP BY rt0.c4, rt0.c1, rt0.c3, rt0.c5, rt0.c6, rt0.c0 HAVING ((((((SUM(rt0.c2))AND(rt0.c1 COLLATE BINARY)))AND(((rt0.c0) NOT BETWEEN (COUNT(MAX(rt0.c0))) AND (GROUP_CONCAT(rt0.c0)))))) ISNULL);
SELECT SUM(UNLIKELY(DISTINCT rt0.c4)) FROM rt0, t0 ORDER BY x'';
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (rt0.c3)) COLLATE NOCASE) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT ((NOT (rt0.c3)) COLLATE NOCASE))) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((((NOT (rt0.c3)) COLLATE NOCASE) ISNULL));
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0;
SELECT DISTINCT v0.c2, v0.c0, v0.c1 FROM t0, v0;
SELECT DISTINCT v0.c2, v0.c0, v0.c1 FROM t0, v0 WHERE (x'9427') UNION SELECT DISTINCT v0.c2, v0.c0, v0.c1 FROM t0, v0 WHERE ((NOT (x'9427'))) UNION SELECT DISTINCT v0.c2, v0.c0, v0.c1 FROM t0, v0 WHERE (((x'9427') ISNULL));
SELECT DISTINCT v0.c2, v0.c0, v0.c1 FROM t0, v0;
SELECT rt0.c1, v0.c0, rt0.c6, v0.c1, rt0.c0, v0.c2, rt0.c3, rt0.c4, t0.c0, rt0.c5, rt0.c2 FROM t0, rt0, v0 GROUP BY rt0.c1, v0.c0, rt0.c6, v0.c1, rt0.c0, v0.c2, rt0.c3, rt0.c4, t0.c0, rt0.c5, rt0.c2;
SELECT rt0.c1, v0.c0, rt0.c6, v0.c1, rt0.c0, v0.c2, rt0.c3, rt0.c4, t0.c0, rt0.c5, rt0.c2 FROM t0, rt0, v0 WHERE (SQLITE_VERSION()) GROUP BY rt0.c1, v0.c0, rt0.c6, v0.c1, rt0.c0, v0.c2, rt0.c3, rt0.c4, t0.c0, rt0.c5, rt0.c2 UNION SELECT ALL rt0.c1, v0.c0, rt0.c6, v0.c1, rt0.c0, v0.c2, rt0.c3, rt0.c4, t0.c0, rt0.c5, rt0.c2 FROM t0, rt0, v0 WHERE ((NOT (SQLITE_VERSION()))) GROUP BY rt0.c1, v0.c0, rt0.c6, v0.c1, rt0.c0, v0.c2, rt0.c3, rt0.c4, t0.c0, rt0.c5, rt0.c2 UNION SELECT rt0.c1, v0.c0, rt0.c6, v0.c1, rt0.c0, v0.c2, rt0.c3, rt0.c4, t0.c0, rt0.c5, rt0.c2 FROM t0, rt0, v0 WHERE (((SQLITE_VERSION()) ISNULL)) GROUP BY rt0.c1, v0.c0, rt0.c6, v0.c1, rt0.c0, v0.c2, rt0.c3, rt0.c4, t0.c0, rt0.c5, rt0.c2;
SELECT rt0.c1, v0.c0, rt0.c6, v0.c1, rt0.c0, v0.c2, rt0.c3, rt0.c4, t0.c0, rt0.c5, rt0.c2 FROM t0, rt0, v0 GROUP BY rt0.c1, v0.c0, rt0.c6, v0.c1, rt0.c0, v0.c2, rt0.c3, rt0.c4, t0.c0, rt0.c5, rt0.c2;
SELECT ALL rt0.c6, v0.c1, rt0.c1, rt0.c5, v0.c2, v0.c0, rt0.c3, rt0.c2, rt0.c4 FROM rt0 NATURAL JOIN v0 GROUP BY rt0.c6, v0.c1, rt0.c1, rt0.c5, v0.c2, v0.c0, rt0.c3, rt0.c2, rt0.c4;
SELECT ALL rt0.c6, v0.c1, rt0.c1, rt0.c5, v0.c2, v0.c0, rt0.c3, rt0.c2, rt0.c4 FROM rt0 NATURAL JOIN v0 GROUP BY rt0.c6, v0.c1, rt0.c1, rt0.c5, v0.c2, v0.c0, rt0.c3, rt0.c2, rt0.c4 HAVING MIN(MAX(MIN(COUNT(MIN(rt0.c4))))) UNION ALL SELECT ALL rt0.c6, v0.c1, rt0.c1, rt0.c5, v0.c2, v0.c0, rt0.c3, rt0.c2, rt0.c4 FROM rt0 NATURAL JOIN v0 GROUP BY rt0.c6, v0.c1, rt0.c1, rt0.c5, v0.c2, v0.c0, rt0.c3, rt0.c2, rt0.c4 HAVING (NOT (MIN(MAX(MIN(COUNT(MIN(rt0.c4))))))) UNION ALL SELECT ALL rt0.c6, v0.c1, rt0.c1, rt0.c5, v0.c2, v0.c0, rt0.c3, rt0.c2, rt0.c4 FROM rt0 NATURAL JOIN v0 GROUP BY rt0.c6, v0.c1, rt0.c1, rt0.c5, v0.c2, v0.c0, rt0.c3, rt0.c2, rt0.c4 HAVING ((MIN(MAX(MIN(COUNT(MIN(rt0.c4)))))) ISNULL);
SELECT MAX((((((rt0.c3))<=((NULL)))) NOT NULL)) FROM rt0, v0 ORDER BY (((rt0.c6 IN ())) IS TRUE);
SELECT ALL t0.c0 FROM t0;
SELECT t0.c0 FROM t0 WHERE (t0.c0) UNION ALL SELECT ALL t0.c0 FROM t0 WHERE ((NOT (t0.c0))) UNION ALL SELECT ALL t0.c0 FROM t0 WHERE (((t0.c0) ISNULL));
SELECT ALL t0.c0 FROM t0;
SELECT DISTINCT * FROM rt0, v0, t0;
SELECT DISTINCT * FROM rt0, v0, t0 WHERE (rt0.c6) UNION SELECT DISTINCT * FROM rt0, v0, t0 WHERE ((NOT (rt0.c6))) UNION SELECT DISTINCT * FROM rt0, v0, t0 WHERE (((rt0.c6) ISNULL));
SELECT DISTINCT * FROM rt0, v0, t0;
SELECT v0.c0, v0.c2, rt0.c2, v0.c1, rt0.c3, rt0.c1, rt0.c4 FROM t0, v0, rt0 GROUP BY v0.c0, v0.c2, rt0.c2, v0.c1, rt0.c3, rt0.c1, rt0.c4;
SELECT ALL v0.c0, v0.c2, rt0.c2, v0.c1, rt0.c3, rt0.c1, rt0.c4 FROM t0, v0, rt0 WHERE (CASE WHEN ('' IN (rt0.c2, rt0.c0)) THEN (v0.c2 IN ()) END) GROUP BY v0.c0, v0.c2, rt0.c2, v0.c1, rt0.c3, rt0.c1, rt0.c4 UNION SELECT v0.c0, v0.c2, rt0.c2, v0.c1, rt0.c3, rt0.c1, rt0.c4 FROM t0, v0, rt0 WHERE ((NOT (CASE WHEN ('' IN (rt0.c2, rt0.c0)) THEN (v0.c2 IN ()) END))) GROUP BY v0.c0, v0.c2, rt0.c2, v0.c1, rt0.c3, rt0.c1, rt0.c4 UNION SELECT ALL v0.c0, v0.c2, rt0.c2, v0.c1, rt0.c3, rt0.c1, rt0.c4 FROM t0, v0, rt0 WHERE (((CASE WHEN ('' IN (rt0.c2, rt0.c0)) THEN (v0.c2 IN ()) END) ISNULL)) GROUP BY v0.c0, v0.c2, rt0.c2, v0.c1, rt0.c3, rt0.c1, rt0.c4;
SELECT v0.c0, v0.c2, rt0.c2, v0.c1, rt0.c3, rt0.c1, rt0.c4 FROM t0, v0, rt0 GROUP BY v0.c0, v0.c2, rt0.c2, v0.c1, rt0.c3, rt0.c1, rt0.c4;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING MIN((NOT (t0.c0))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (MIN((NOT (t0.c0))))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((MIN((NOT (t0.c0)))) ISNULL);
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING MIN((NOT (t0.c0))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (MIN((NOT (t0.c0))))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((MIN((NOT (t0.c0)))) ISNULL);
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL rt0.c5, rt0.c1 FROM v0, t0, rt0;
SELECT ALL rt0.c5, rt0.c1 FROM v0, t0, rt0 WHERE (CAST((+ (v0.c0)) AS REAL)) UNION ALL SELECT ALL rt0.c5, rt0.c1 FROM v0, t0, rt0 WHERE ((NOT (CAST((+ (v0.c0)) AS REAL)))) UNION ALL SELECT ALL rt0.c5, rt0.c1 FROM v0, t0, rt0 WHERE (((CAST((+ (v0.c0)) AS REAL)) ISNULL));
SELECT ALL rt0.c5, rt0.c1 FROM v0, t0, rt0;
SELECT DISTINCT v0.c2, t0.c0, v0.c1 FROM v0, t0;
SELECT DISTINCT v0.c2, t0.c0, v0.c1 FROM v0, t0 WHERE (((((t0.c0) ISNULL)) ISNULL)) UNION SELECT DISTINCT v0.c2, t0.c0, v0.c1 FROM v0, t0 WHERE ((NOT (((((t0.c0) ISNULL)) ISNULL)))) UNION SELECT DISTINCT v0.c2, t0.c0, v0.c1 FROM v0, t0 WHERE (((((((t0.c0) ISNULL)) ISNULL)) ISNULL));
SELECT DISTINCT v0.c2, t0.c0, v0.c1 FROM v0, t0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE ((((((t0.c0)&('2103833598'))))>((CAST(t0.c0 AS NUMERIC))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT ((((((t0.c0)&('2103833598'))))>((CAST(t0.c0 AS NUMERIC))))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((((((((t0.c0)&('2103833598'))))>((CAST(t0.c0 AS NUMERIC))))) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING SUM(TOTAL(MIN(GROUP_CONCAT(MAX(COUNT(v0.c1)))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (SUM(TOTAL(MIN(GROUP_CONCAT(MAX(COUNT(v0.c1)))))))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((SUM(TOTAL(MIN(GROUP_CONCAT(MAX(COUNT(v0.c1))))))) ISNULL);
SELECT ALL * FROM v0, rt0;
SELECT ALL * FROM v0, rt0 WHERE (((((((rt0.c1)OR(rt0.c3)))OR(rt0.c5))) ISNULL)) UNION ALL SELECT * FROM v0, rt0 WHERE ((NOT (((((((rt0.c1)OR(rt0.c3)))OR(rt0.c5))) ISNULL)))) UNION ALL SELECT ALL * FROM v0, rt0 WHERE (((((((((rt0.c1)OR(rt0.c3)))OR(rt0.c5))) ISNULL)) ISNULL));
SELECT ALL * FROM v0, rt0;
SELECT DISTINCT t0.c0 FROM t0, v0, rt0;
SELECT DISTINCT t0.c0 FROM t0, v0, rt0 WHERE (LIKELIHOOD(DISTINCT v0.c0 COLLATE NOCASE, 0.08682094556018194)) UNION SELECT DISTINCT t0.c0 FROM t0, v0, rt0 WHERE ((NOT (LIKELIHOOD(DISTINCT v0.c0 COLLATE NOCASE, 0.08682094556018194)))) UNION SELECT DISTINCT t0.c0 FROM t0, v0, rt0 WHERE (((LIKELIHOOD(DISTINCT v0.c0 COLLATE NOCASE, 0.08682094556018194)) ISNULL));
SELECT DISTINCT t0.c0 FROM t0, v0, rt0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE (((((((((CAST(t0.c0 AS REAL))AND(rtreenode(t0.c0, t0.c0))))OR('-1892267110')))AND(((t0.c0)=(t0.c0)))))AND(NULLIF(DISTINCT t0.c0, t0.c0)))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT (((((((((CAST(t0.c0 AS REAL))AND(rtreenode(t0.c0, t0.c0))))OR('-1892267110')))AND(((t0.c0)==(t0.c0)))))AND(NULLIF(DISTINCT t0.c0, t0.c0)))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE (((((((((((CAST(t0.c0 AS REAL))AND(rtreenode(t0.c0, t0.c0))))OR('-1892267110')))AND(((t0.c0)=(t0.c0)))))AND(NULLIF(DISTINCT t0.c0, t0.c0)))) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL v0.c1, t0.c0, rt0.c0, v0.c0, rt0.c4, rt0.c3, rt0.c1, rt0.c5, rt0.c2, v0.c2 FROM t0, v0, rt0 GROUP BY v0.c1, t0.c0, rt0.c0, v0.c0, rt0.c4, rt0.c3, rt0.c1, rt0.c5, rt0.c2, v0.c2;
SELECT ALL v0.c1, t0.c0, rt0.c0, v0.c0, rt0.c4, rt0.c3, rt0.c1, rt0.c5, rt0.c2, v0.c2 FROM t0, v0, rt0 GROUP BY v0.c1, t0.c0, rt0.c0, v0.c0, rt0.c4, rt0.c3, rt0.c1, rt0.c5, rt0.c2, v0.c2 HAVING ((((v0.c1)<=(COUNT(v0.c1))))%(CAST(TOTAL(COUNT(rt0.c5)) AS BLOB))) UNION ALL SELECT v0.c1, t0.c0, rt0.c0, v0.c0, rt0.c4, rt0.c3, rt0.c1, rt0.c5, rt0.c2, v0.c2 FROM t0, v0, rt0 GROUP BY v0.c1, t0.c0, rt0.c0, v0.c0, rt0.c4, rt0.c3, rt0.c1, rt0.c5, rt0.c2, v0.c2 HAVING (NOT (((((v0.c1)<=(COUNT(v0.c1))))%(CAST(TOTAL(COUNT(rt0.c5)) AS BLOB))))) UNION ALL SELECT v0.c1, t0.c0, rt0.c0, v0.c0, rt0.c4, rt0.c3, rt0.c1, rt0.c5, rt0.c2, v0.c2 FROM t0, v0, rt0 GROUP BY v0.c1, t0.c0, rt0.c0, v0.c0, rt0.c4, rt0.c3, rt0.c1, rt0.c5, rt0.c2, v0.c2 HAVING ((((((v0.c1)<=(COUNT(v0.c1))))%(CAST(TOTAL(COUNT(rt0.c5)) AS BLOB)))) ISNULL);
SELECT rt0.c1, v0.c0 FROM v0 CROSS JOIN rt0 ON ((((rt0.c3)GLOB(rt0.c5))) BETWEEN (((rt0.c6) IS FALSE)) AND (((((((((rt0.c4)OR(rt0.c6)))OR(rt0.c5)))AND(rt0.c4)))OR(rt0.c2))));
SELECT ALL rt0.c1, v0.c0 FROM v0 CROSS JOIN rt0 ON ((((rt0.c3)GLOB(rt0.c5))) BETWEEN (((rt0.c6) IS FALSE)) AND (((((((((rt0.c4)OR(rt0.c6)))OR(rt0.c5)))AND(rt0.c4)))OR(rt0.c2)))) WHERE (rt0.c4) UNION ALL SELECT ALL rt0.c1, v0.c0 FROM v0 CROSS JOIN rt0 ON ((((rt0.c3)GLOB(rt0.c5))) BETWEEN (((rt0.c6) IS FALSE)) AND (((((((((rt0.c4)OR(rt0.c6)))OR(rt0.c5)))AND(rt0.c4)))OR(rt0.c2)))) WHERE ((NOT (rt0.c4))) UNION ALL SELECT ALL rt0.c1, v0.c0 FROM v0 CROSS JOIN rt0 ON ((((rt0.c3)GLOB(rt0.c5))) BETWEEN (((rt0.c6) IS FALSE)) AND (((((((((rt0.c4)OR(rt0.c6)))OR(rt0.c5)))AND(rt0.c4)))OR(rt0.c2)))) WHERE (((rt0.c4) ISNULL));
SELECT rt0.c1, v0.c0 FROM v0 CROSS JOIN rt0 ON ((((rt0.c3)GLOB(rt0.c5))) BETWEEN (((rt0.c6) IS FALSE)) AND (((((((((rt0.c4)OR(rt0.c6)))OR(rt0.c5)))AND(rt0.c4)))OR(rt0.c2))));
SELECT DISTINCT * FROM t0, v0 FULL OUTER JOIN rt0 ON ((CAST(rt0.c1 AS BLOB))>=((((rt0.c6)) BETWEEN ((v0.c1)) AND ((rt0.c1)))));
SELECT DISTINCT * FROM t0, v0 FULL OUTER JOIN rt0 ON ((CAST(rt0.c1 AS BLOB))>=((((rt0.c6)) BETWEEN ((v0.c1)) AND ((rt0.c1))))) WHERE ((+ (rt0.c4))) UNION SELECT DISTINCT * FROM t0, v0 FULL OUTER JOIN rt0 ON ((CAST(rt0.c1 AS BLOB))>=((((rt0.c6)) BETWEEN ((v0.c1)) AND ((rt0.c1))))) WHERE ((NOT ((+ (rt0.c4))))) UNION SELECT DISTINCT * FROM t0, v0 NOT INDEXED FULL OUTER JOIN rt0 ON ((CAST(rt0.c1 AS BLOB))>=((((rt0.c6)) BETWEEN ((v0.c1)) AND ((rt0.c1))))) WHERE ((((+ (rt0.c4))) ISNULL));
SELECT DISTINCT * FROM t0, v0 FULL OUTER JOIN rt0 ON ((CAST(rt0.c1 AS BLOB))>=((((rt0.c6)) BETWEEN ((v0.c1)) AND ((rt0.c1)))));
SELECT ALL rt0.c5, rt0.c3 FROM rt0 GROUP BY rt0.c5, rt0.c3;
SELECT ALL rt0.c5, rt0.c3 FROM rt0 WHERE ('KYsR') GROUP BY rt0.c5, rt0.c3 UNION SELECT ALL rt0.c5, rt0.c3 FROM rt0 WHERE ((NOT ('KYsR'))) GROUP BY rt0.c5, rt0.c3 UNION SELECT ALL rt0.c5, rt0.c3 FROM rt0 WHERE ((('KYsR') ISNULL)) GROUP BY rt0.c5, rt0.c3;
SELECT ALL rt0.c5, rt0.c3 FROM rt0 GROUP BY rt0.c5, rt0.c3;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING MAX(MIN(AVG(COUNT(*)))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (MAX(MIN(AVG(COUNT(*)))))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((MAX(MIN(AVG(COUNT(*))))) ISNULL);
SELECT * FROM rt0, v0 INNER JOIN t0 ON (((v0.c0 IN ()))%(CAST(rt0.c5 AS NUMERIC)));
SELECT ALL * FROM rt0, v0 INNER JOIN t0 ON (((v0.c0 IN ()))%(CAST(rt0.c5 AS NUMERIC))) WHERE (SQLITE_COMPILEOPTION_USED(json_remove(rt0.c0, rt0.c4))) UNION ALL SELECT * FROM rt0, v0 INNER JOIN t0 ON (((v0.c0 IN ()))%(CAST(rt0.c5 AS NUMERIC))) WHERE ((NOT (SQLITE_COMPILEOPTION_USED(json_remove(rt0.c0, rt0.c4))))) UNION ALL SELECT * FROM rt0, v0 INNER JOIN t0 ON (((v0.c0 IN ()))%(CAST(rt0.c5 AS NUMERIC))) WHERE (((SQLITE_COMPILEOPTION_USED(json_remove(rt0.c0, rt0.c4))) ISNULL));
SELECT DISTINCT * FROM v0, rt0;
SELECT DISTINCT * FROM v0, rt0 WHERE (((((v0.c2) BETWEEN (v0.c1) AND (rt0.c1))) NOTNULL)) UNION SELECT DISTINCT * FROM v0, rt0 WHERE ((NOT (((((v0.c2) BETWEEN (v0.c1) AND (rt0.c1))) NOTNULL)))) UNION SELECT DISTINCT * FROM v0, rt0 WHERE (((((((v0.c2) BETWEEN (v0.c1) AND (rt0.c1))) NOTNULL)) ISNULL));
SELECT DISTINCT * FROM v0, rt0;
SELECT rt0.c2, v0.c1, rt0.c5, rt0.c0, rt0.c6, v0.c0, rt0.c4 FROM v0, rt0 GROUP BY rt0.c2, v0.c1, rt0.c5, rt0.c0, rt0.c6, v0.c0, rt0.c4;
SELECT ALL rt0.c2, v0.c1, rt0.c5, rt0.c0, rt0.c6, v0.c0, rt0.c4 FROM v0, rt0 WHERE (((((((rt0.c6)<>(v0.c1)))AND(PRINTF(v0.c2, rt0.c3, rt0.c0))))OR(((rt0.c1)%(rt0.c1))))) GROUP BY rt0.c2, v0.c1, rt0.c5, rt0.c0, rt0.c6, v0.c0, rt0.c4 UNION SELECT rt0.c2, v0.c1, rt0.c5, rt0.c0, rt0.c6, v0.c0, rt0.c4 FROM v0, rt0 WHERE ((NOT (((((((rt0.c6)<>(v0.c1)))AND(PRINTF(v0.c2, rt0.c3, rt0.c0))))OR(((rt0.c1)%(rt0.c1))))))) GROUP BY rt0.c2, v0.c1, rt0.c5, rt0.c0, rt0.c6, v0.c0, rt0.c4 UNION SELECT ALL rt0.c2, v0.c1, rt0.c5, rt0.c0, rt0.c6, v0.c0, rt0.c4 FROM v0, rt0 WHERE (((((((((rt0.c6)<>(v0.c1)))AND(PRINTF(v0.c2, rt0.c3, rt0.c0))))OR(((rt0.c1)%(rt0.c1))))) ISNULL)) GROUP BY rt0.c2, v0.c1, rt0.c5, rt0.c0, rt0.c6, v0.c0, rt0.c4;
SELECT rt0.c2, v0.c1, rt0.c5, rt0.c0, rt0.c6, v0.c0, rt0.c4 FROM v0, rt0 GROUP BY rt0.c2, v0.c1, rt0.c5, rt0.c0, rt0.c6, v0.c0, rt0.c4;
SELECT ALL rt0.c2, rt0.c1, rt0.c5, rt0.c0, rt0.c6, t0.c0, rt0.c4, rt0.c3 FROM rt0, t0 GROUP BY rt0.c2, rt0.c1, rt0.c5, rt0.c0, rt0.c6, t0.c0, rt0.c4, rt0.c3;
SELECT rt0.c2, rt0.c1, rt0.c5, rt0.c0, rt0.c6, t0.c0, rt0.c4, rt0.c3 FROM rt0, t0 GROUP BY rt0.c2, rt0.c1, rt0.c5, rt0.c0, rt0.c6, t0.c0, rt0.c4, rt0.c3 HAVING MAX(LIKE(MAX(rt0.c4), rt0.c2, 'J')) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c5, rt0.c0, rt0.c6, t0.c0, rt0.c4, rt0.c3 FROM rt0, t0 GROUP BY rt0.c2, rt0.c1, rt0.c5, rt0.c0, rt0.c6, t0.c0, rt0.c4, rt0.c3 HAVING (NOT (MAX(LIKE(MAX(rt0.c4), rt0.c2, 'J')))) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c5, rt0.c0, rt0.c6, t0.c0, rt0.c4, rt0.c3 FROM rt0, t0 GROUP BY rt0.c2, rt0.c1, rt0.c5, rt0.c0, rt0.c6, t0.c0, rt0.c4, rt0.c3 HAVING ((MAX(LIKE(MAX(rt0.c4), rt0.c2, 'J'))) ISNULL);
SELECT * FROM v0, rt0;
SELECT * FROM v0, rt0 WHERE (CAST(CAST(rt0.c1 AS BLOB) AS TEXT)) UNION ALL SELECT ALL * FROM v0, rt0 WHERE ((NOT (CAST(CAST(rt0.c1 AS BLOB) AS TEXT)))) UNION ALL SELECT * FROM v0, rt0 WHERE (((CAST(CAST(rt0.c1 AS BLOB) AS TEXT)) ISNULL));
SELECT * FROM v0, rt0;
SELECT DISTINCT rt0.c5, rt0.c1, v0.c0, rt0.c3, rt0.c2, v0.c1, rt0.c4, rt0.c6, rt0.c0 FROM v0, rt0;
SELECT DISTINCT rt0.c5, rt0.c1, v0.c0, rt0.c3, rt0.c2, v0.c1, rt0.c4, rt0.c6, rt0.c0 FROM v0, rt0 WHERE (((CASE rt0.c6  WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c0 END) BETWEEN (((((v0.c1)AND(rt0.c2)))OR(rt0.c1))) AND (((((((((0.7720665478998153)OR(v0.c0)))AND(v0.c0)))OR(rt0.c6)))OR(rt0.c3))))) UNION SELECT DISTINCT rt0.c5, rt0.c1, v0.c0, rt0.c3, rt0.c2, v0.c1, rt0.c4, rt0.c6, rt0.c0 FROM v0, rt0 WHERE ((NOT (((CASE rt0.c6  WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c0 END) BETWEEN (((((v0.c1)AND(rt0.c2)))OR(rt0.c1))) AND (((((((((0.7720665478998153)OR(v0.c0)))AND(v0.c0)))OR(rt0.c6)))OR(rt0.c3))))))) UNION SELECT DISTINCT rt0.c5, rt0.c1, v0.c0, rt0.c3, rt0.c2, v0.c1, rt0.c4, rt0.c6, rt0.c0 FROM v0, rt0 WHERE (((((CASE rt0.c6  WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c0 END) BETWEEN (((((v0.c1)AND(rt0.c2)))OR(rt0.c1))) AND (((((((((0.7720665478998153)OR(v0.c0)))AND(v0.c0)))OR(rt0.c6)))OR(rt0.c3))))) ISNULL));
SELECT DISTINCT rt0.c5, rt0.c1, v0.c0, rt0.c3, rt0.c2, v0.c1, rt0.c4, rt0.c6, rt0.c0 FROM v0, rt0;
SELECT v0.c2 FROM v0 GROUP BY v0.c2;
SELECT v0.c2 FROM v0 WHERE (CAST((('1376998607') IS TRUE) AS NUMERIC)) GROUP BY v0.c2 UNION SELECT ALL v0.c2 FROM v0 WHERE ((NOT (CAST((('1376998607') IS TRUE) AS NUMERIC)))) GROUP BY v0.c2 UNION SELECT ALL v0.c2 FROM v0 WHERE (((CAST((('1376998607') IS TRUE) AS NUMERIC)) ISNULL)) GROUP BY v0.c2;
SELECT v0.c2 FROM v0 GROUP BY v0.c2;
SELECT v0.c2, rt0.c1, rt0.c5, rt0.c0, t0.c0, rt0.c6, v0.c1, rt0.c2 FROM v0, t0, rt0 GROUP BY v0.c2, rt0.c1, rt0.c5, rt0.c0, t0.c0, rt0.c6, v0.c1, rt0.c2;
SELECT ALL v0.c2, rt0.c1, rt0.c5, rt0.c0, t0.c0, rt0.c6, v0.c1, rt0.c2 FROM v0, t0, rt0 GROUP BY v0.c2, rt0.c1, rt0.c5, rt0.c0, t0.c0, rt0.c6, v0.c1, rt0.c2 HAVING CASE WHEN rt0.c1 THEN (rt0.c1 IN (COUNT(v0.c1))) END UNION ALL SELECT v0.c2, rt0.c1, rt0.c5, rt0.c0, t0.c0, rt0.c6, v0.c1, rt0.c2 FROM v0, t0, rt0 GROUP BY v0.c2, rt0.c1, rt0.c5, rt0.c0, t0.c0, rt0.c6, v0.c1, rt0.c2 HAVING (NOT (CASE WHEN rt0.c1 THEN (rt0.c1 IN (COUNT(v0.c1))) END)) UNION ALL SELECT ALL v0.c2, rt0.c1, rt0.c5, rt0.c0, t0.c0, rt0.c6, v0.c1, rt0.c2 FROM v0, t0, rt0 GROUP BY v0.c2, rt0.c1, rt0.c5, rt0.c0, t0.c0, rt0.c6, v0.c1, rt0.c2 HAVING ((CASE WHEN rt0.c1 THEN (rt0.c1 IN (COUNT(v0.c1))) END) ISNULL);
SELECT v0.c2, rt0.c1, rt0.c5, rt0.c0, t0.c0, rt0.c6, v0.c1, rt0.c2 FROM v0, t0, rt0 GROUP BY v0.c2, rt0.c1, rt0.c5, rt0.c0, t0.c0, rt0.c6, v0.c1, rt0.c2;
SELECT ALL v0.c2, rt0.c1, rt0.c5, rt0.c0, t0.c0, rt0.c6, v0.c1, rt0.c2 FROM v0, t0, rt0 GROUP BY v0.c2, rt0.c1, rt0.c5, rt0.c0, t0.c0, rt0.c6, v0.c1, rt0.c2 HAVING CASE WHEN rt0.c1 THEN (rt0.c1 IN (COUNT(v0.c1))) END UNION ALL SELECT v0.c2, rt0.c1, rt0.c5, rt0.c0, t0.c0, rt0.c6, v0.c1, rt0.c2 FROM v0, t0, rt0 GROUP BY v0.c2, rt0.c1, rt0.c5, rt0.c0, t0.c0, rt0.c6, v0.c1, rt0.c2 HAVING (NOT (CASE WHEN rt0.c1 THEN (rt0.c1 IN (COUNT(v0.c1))) END)) UNION ALL SELECT ALL v0.c2, rt0.c1, rt0.c5, rt0.c0, t0.c0, rt0.c6, v0.c1, rt0.c2 FROM v0, t0, rt0 GROUP BY v0.c2, rt0.c1, rt0.c5, rt0.c0, t0.c0, rt0.c6, v0.c1, rt0.c2 HAVING ((CASE WHEN rt0.c1 THEN (rt0.c1 IN (COUNT(v0.c1))) END) ISNULL);
SELECT v0.c2, rt0.c1, rt0.c5, rt0.c0, t0.c0, rt0.c6, v0.c1, rt0.c2 FROM v0, t0, rt0 GROUP BY v0.c2, rt0.c1, rt0.c5, rt0.c0, t0.c0, rt0.c6, v0.c1, rt0.c2;
SELECT MIN(((((v0.c2)==(rt0.c3))) IS FALSE)) FROM rt0, v0;
SELECT * FROM t0, v0;
SELECT * FROM t0, v0 WHERE (((((CAST(v0.c1 AS BLOB))OR((+ (v0.c0)))))OR(NULL COLLATE RTRIM))) UNION ALL SELECT ALL * FROM t0, v0 WHERE ((NOT (((((CAST(v0.c1 AS BLOB))OR((+ (v0.c0)))))OR(NULL COLLATE RTRIM))))) UNION ALL SELECT ALL * FROM t0, v0 WHERE (((((((CAST(v0.c1 AS BLOB))OR((+ (v0.c0)))))OR(NULL COLLATE RTRIM))) ISNULL));
SELECT * FROM t0, v0;
SELECT DISTINCT t0.c0, rt0.c4, rt0.c6, rt0.c0, rt0.c3, v0.c1, v0.c0, rt0.c2, rt0.c5, rt0.c1, v0.c2 FROM rt0, t0, v0;
SELECT DISTINCT t0.c0, rt0.c4, rt0.c6, rt0.c0, rt0.c3, v0.c1, v0.c0, rt0.c2, rt0.c5, rt0.c1, v0.c2 FROM rt0, t0, v0 WHERE (TRIM((rt0.c2 IN (v0.c2, 0.7729670876803674)), rtreenode(rt0.c4, t0.c0))) UNION SELECT DISTINCT t0.c0, rt0.c4, rt0.c6, rt0.c0, rt0.c3, v0.c1, v0.c0, rt0.c2, rt0.c5, rt0.c1, v0.c2 FROM rt0, t0, v0 WHERE ((NOT (TRIM((rt0.c2 IN (v0.c2, 0.7729670876803674)), rtreenode(rt0.c4, t0.c0))))) UNION SELECT DISTINCT t0.c0, rt0.c4, rt0.c6, rt0.c0, rt0.c3, v0.c1, v0.c0, rt0.c2, rt0.c5, rt0.c1, v0.c2 FROM rt0, t0, v0 WHERE (((TRIM((rt0.c2 IN (v0.c2, 0.7729670876803674)), rtreenode(rt0.c4, t0.c0))) ISNULL));
SELECT DISTINCT t0.c0, rt0.c4, rt0.c6, rt0.c0, rt0.c3, v0.c1, v0.c0, rt0.c2, rt0.c5, rt0.c1, v0.c2 FROM rt0, t0, v0;
SELECT rt0.c0, rt0.c1, rt0.c2, rt0.c5, rt0.c4 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2, rt0.c5, rt0.c4;
SELECT rt0.c0, rt0.c1, rt0.c2, rt0.c5, rt0.c4 FROM rt0 WHERE (((((CAST(rt0.c4 AS NUMERIC))OR(((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c3)))))OR((((rt0.c5, rt0.c0, rt0.c6))<=((rt0.c5, rt0.c1, rt0.c5)))))) GROUP BY rt0.c0, rt0.c1, rt0.c2, rt0.c5, rt0.c4 UNION SELECT ALL rt0.c0, rt0.c1, rt0.c2, rt0.c5, rt0.c4 FROM rt0 WHERE ((NOT (((((CAST(rt0.c4 AS NUMERIC))OR(((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c3)))))OR((((rt0.c5, rt0.c0, rt0.c6))<=((rt0.c5, rt0.c1, rt0.c5)))))))) GROUP BY rt0.c0, rt0.c1, rt0.c2, rt0.c5, rt0.c4 UNION SELECT rt0.c0, rt0.c1, rt0.c2, rt0.c5, rt0.c4 FROM rt0 WHERE (((((((CAST(rt0.c4 AS NUMERIC))OR(((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c3)))))OR((((rt0.c5, rt0.c0, rt0.c6))<=((rt0.c5, rt0.c1, rt0.c5)))))) ISNULL)) GROUP BY rt0.c0, rt0.c1, rt0.c2, rt0.c5, rt0.c4;
SELECT rt0.c0, rt0.c1, rt0.c2, rt0.c5, rt0.c4 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2, rt0.c5, rt0.c4;
SELECT ALL rt0.c1, rt0.c2 FROM t0, v0, rt0 GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM t0, v0, rt0 GROUP BY rt0.c1, rt0.c2 HAVING ((PRINTF(rt0.c6))-(SUM(rt0.c1))) UNION ALL SELECT ALL rt0.c1, rt0.c2 FROM t0, v0, rt0 GROUP BY rt0.c1, rt0.c2 HAVING (NOT (((PRINTF(rt0.c6))-(SUM(rt0.c1))))) UNION ALL SELECT ALL rt0.c1, rt0.c2 FROM t0, v0, rt0 GROUP BY rt0.c1, rt0.c2 HAVING ((((PRINTF(rt0.c6))-(SUM(rt0.c1)))) ISNULL);
SELECT ALL rt0.c1, rt0.c2 FROM t0, v0, rt0 GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM t0, v0, rt0 GROUP BY rt0.c1, rt0.c2 HAVING ((PRINTF(rt0.c6))-(SUM(rt0.c1))) UNION ALL SELECT ALL rt0.c1, rt0.c2 FROM t0, v0, rt0 GROUP BY rt0.c1, rt0.c2 HAVING (NOT (((PRINTF(rt0.c6))-(SUM(rt0.c1))))) UNION ALL SELECT ALL rt0.c1, rt0.c2 FROM t0, v0, rt0 GROUP BY rt0.c1, rt0.c2 HAVING ((((PRINTF(rt0.c6))-(SUM(rt0.c1)))) ISNULL);
SELECT ALL rt0.c1, rt0.c2 FROM t0, v0, rt0 GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c2, v0.c0, rt0.c6, v0.c1, rt0.c0, rt0.c4, rt0.c1, v0.c2 FROM rt0, v0;
SELECT ALL rt0.c2, v0.c0, rt0.c6, v0.c1, rt0.c0, rt0.c4, rt0.c1, v0.c2 FROM rt0, v0 WHERE (CAST('444676608' AS REAL)) UNION ALL SELECT ALL rt0.c2, v0.c0, rt0.c6, v0.c1, rt0.c0, rt0.c4, rt0.c1, v0.c2 FROM rt0, v0 WHERE ((NOT (CAST('444676608' AS REAL)))) UNION ALL SELECT rt0.c2, v0.c0, rt0.c6, v0.c1, rt0.c0, rt0.c4, rt0.c1, v0.c2 FROM rt0, v0 WHERE (((CAST('444676608' AS REAL)) ISNULL));
SELECT rt0.c2, v0.c0, rt0.c6, v0.c1, rt0.c0, rt0.c4, rt0.c1, v0.c2 FROM rt0, v0;
SELECT DISTINCT * FROM rt0, v0;
SELECT DISTINCT * FROM rt0, v0 WHERE (((rt0.c2 COLLATE RTRIM) NOT BETWEEN (((rt0.c1) NOT BETWEEN (NULL) AND (rt0.c2))) AND (CASE WHEN v0.c2 THEN rt0.c5 ELSE x'' END))) UNION SELECT DISTINCT * FROM rt0, v0 WHERE ((NOT (((rt0.c2 COLLATE RTRIM) NOT BETWEEN (((rt0.c1) NOT BETWEEN (NULL) AND (rt0.c2))) AND (CASE WHEN v0.c2 THEN rt0.c5 ELSE x'' END))))) UNION SELECT DISTINCT * FROM rt0, v0 WHERE (((((rt0.c2 COLLATE RTRIM) NOT BETWEEN (((rt0.c1) NOT BETWEEN (NULL) AND (rt0.c2))) AND (CASE WHEN v0.c2 THEN rt0.c5 ELSE x'' END))) ISNULL));
SELECT DISTINCT * FROM rt0, v0;
SELECT ALL v0.c0, v0.c1, rt0.c2, t0.c0, rt0.c4, rt0.c1, rt0.c5, rt0.c3, rt0.c6, v0.c2 FROM t0, rt0, v0 GROUP BY v0.c0, v0.c1, rt0.c2, t0.c0, rt0.c4, rt0.c1, rt0.c5, rt0.c3, rt0.c6, v0.c2;
SELECT v0.c0, v0.c1, rt0.c2, t0.c0, rt0.c4, rt0.c1, rt0.c5, rt0.c3, rt0.c6, v0.c2 FROM t0, rt0, v0 WHERE (((((((((((rt0.c6)OR(rt0.c6)))AND(((rt0.c1) NOT NULL))))OR(((rt0.c2)&(rt0.c5)))))OR(SUBSTR(v0.c0, v0.c1))))AND(((rt0.c4) NOTNULL)))) GROUP BY v0.c0, v0.c1, rt0.c2, t0.c0, rt0.c4, rt0.c1, rt0.c5, rt0.c3, rt0.c6, v0.c2 UNION SELECT v0.c0, v0.c1, rt0.c2, t0.c0, rt0.c4, rt0.c1, rt0.c5, rt0.c3, rt0.c6, v0.c2 FROM t0, rt0, v0 WHERE ((NOT (((((((((((rt0.c6)OR(rt0.c6)))AND(((rt0.c1) NOT NULL))))OR(((rt0.c2)&(rt0.c5)))))OR(SUBSTR(v0.c0, v0.c1))))AND(((rt0.c4) NOTNULL)))))) GROUP BY v0.c0, v0.c1, rt0.c2, t0.c0, rt0.c4, rt0.c1, rt0.c5, rt0.c3, rt0.c6, v0.c2 UNION SELECT ALL v0.c0, v0.c1, rt0.c2, t0.c0, rt0.c4, rt0.c1, rt0.c5, rt0.c3, rt0.c6, v0.c2 FROM t0, rt0, v0 WHERE (((((((((((((rt0.c6)OR(rt0.c6)))AND(((rt0.c1) NOT NULL))))OR(((rt0.c2)&(rt0.c5)))))OR(SUBSTR(v0.c0, v0.c1))))AND(((rt0.c4) NOTNULL)))) ISNULL)) GROUP BY v0.c0, v0.c1, rt0.c2, t0.c0, rt0.c4, rt0.c1, rt0.c5, rt0.c3, rt0.c6, v0.c2;
SELECT ALL v0.c0, v0.c1, rt0.c2, t0.c0, rt0.c4, rt0.c1, rt0.c5, rt0.c3, rt0.c6, v0.c2 FROM t0, rt0, v0 GROUP BY v0.c0, v0.c1, rt0.c2, t0.c0, rt0.c4, rt0.c1, rt0.c5, rt0.c3, rt0.c6, v0.c2;
SELECT rt0.c5, rt0.c0, rt0.c2, rt0.c1, t0.c0 FROM t0, rt0 FULL OUTER JOIN v0 ON ((rt0.c0 COLLATE RTRIM)%(((rt0.c4)!=(rt0.c0)))) GROUP BY rt0.c5, rt0.c0, rt0.c2, rt0.c1, t0.c0;
SELECT rt0.c5, rt0.c0, rt0.c2, rt0.c1, t0.c0 FROM t0, rt0 FULL OUTER JOIN v0 ON ((rt0.c0 COLLATE RTRIM)%(((rt0.c4)<>(rt0.c0)))) GROUP BY rt0.c5, rt0.c0, rt0.c2, rt0.c1, t0.c0 HAVING COUNT(MAX(MIN(rt0.c6))) UNION ALL SELECT ALL rt0.c5, rt0.c0, rt0.c2, rt0.c1, t0.c0 FROM t0, rt0 FULL OUTER JOIN v0 ON ((rt0.c0 COLLATE RTRIM)%(((rt0.c4)<>(rt0.c0)))) GROUP BY rt0.c5, rt0.c0, rt0.c2, rt0.c1, t0.c0 HAVING (NOT (COUNT(MAX(MIN(rt0.c6))))) UNION ALL SELECT ALL rt0.c5, rt0.c0, rt0.c2, rt0.c1, t0.c0 FROM t0, rt0 FULL OUTER JOIN v0 ON ((rt0.c0 COLLATE RTRIM)%(((rt0.c4)!=(rt0.c0)))) GROUP BY rt0.c5, rt0.c0, rt0.c2, rt0.c1, t0.c0 HAVING ((COUNT(MAX(MIN(rt0.c6)))) ISNULL);
SELECT * FROM t0, v0;
SELECT ALL * FROM t0, v0 WHERE (((v0.c1) IS TRUE)) UNION ALL SELECT * FROM t0, v0 WHERE ((NOT (((v0.c1) IS TRUE)))) UNION ALL SELECT * FROM t0, v0 WHERE (((((v0.c1) IS TRUE)) ISNULL));
SELECT * FROM t0, v0;
SELECT DISTINCT v0.c0, v0.c1 FROM v0;
SELECT DISTINCT v0.c0, v0.c1 FROM v0 WHERE (LOWER(DISTINCT 0.19281424613416365) COLLATE BINARY) UNION SELECT DISTINCT v0.c0, v0.c1 FROM v0 WHERE ((NOT (LOWER(DISTINCT 0.19281424613416365) COLLATE BINARY))) UNION SELECT DISTINCT v0.c0, v0.c1 FROM v0 NOT INDEXED WHERE (((LOWER(DISTINCT 0.19281424613416365) COLLATE BINARY) ISNULL));
SELECT DISTINCT v0.c0, v0.c1 FROM v0;
SELECT ALL rt0.c4, v0.c1, rt0.c3, v0.c0, t0.c0, rt0.c6, rt0.c5, rt0.c1, rt0.c2, v0.c2, rt0.c0 FROM v0, t0, rt0 GROUP BY rt0.c4, v0.c1, rt0.c3, v0.c0, t0.c0, rt0.c6, rt0.c5, rt0.c1, rt0.c2, v0.c2, rt0.c0;
SELECT ALL rt0.c4, v0.c1, rt0.c3, v0.c0, t0.c0, rt0.c6, rt0.c5, rt0.c1, rt0.c2, v0.c2, rt0.c0 FROM v0, t0, rt0 WHERE (((CASE WHEN v0.c0 THEN v0.c1 END) IS TRUE)) GROUP BY rt0.c4, v0.c1, rt0.c3, v0.c0, t0.c0, rt0.c6, rt0.c5, rt0.c1, rt0.c2, v0.c2, rt0.c0 UNION SELECT rt0.c4, v0.c1, rt0.c3, v0.c0, t0.c0, rt0.c6, rt0.c5, rt0.c1, rt0.c2, v0.c2, rt0.c0 FROM v0, t0, rt0 WHERE ((NOT (((CASE WHEN v0.c0 THEN v0.c1 END) IS TRUE)))) GROUP BY rt0.c4, v0.c1, rt0.c3, v0.c0, t0.c0, rt0.c6, rt0.c5, rt0.c1, rt0.c2, v0.c2, rt0.c0 UNION SELECT rt0.c4, v0.c1, rt0.c3, v0.c0, t0.c0, rt0.c6, rt0.c5, rt0.c1, rt0.c2, v0.c2, rt0.c0 FROM v0, t0, rt0 WHERE (((((CASE WHEN v0.c0 THEN v0.c1 END) IS TRUE)) ISNULL)) GROUP BY rt0.c4, v0.c1, rt0.c3, v0.c0, t0.c0, rt0.c6, rt0.c5, rt0.c1, rt0.c2, v0.c2, rt0.c0;
SELECT ALL rt0.c4, v0.c1, rt0.c3, v0.c0, t0.c0, rt0.c6, rt0.c5, rt0.c1, rt0.c2, v0.c2, rt0.c0 FROM v0, t0, rt0 GROUP BY rt0.c4, v0.c1, rt0.c3, v0.c0, t0.c0, rt0.c6, rt0.c5, rt0.c1, rt0.c2, v0.c2, rt0.c0;
SELECT ALL rt0.c4, rt0.c3 FROM rt0, t0, v0 GROUP BY rt0.c4, rt0.c3;
SELECT ALL rt0.c4, rt0.c3 FROM rt0, t0, v0 GROUP BY rt0.c4, rt0.c3 HAVING ((COUNT(*))*(CASE t0.c0  WHEN NULL THEN SUM(SUM(MAX(COUNT(*)))) END)) UNION ALL SELECT rt0.c4, rt0.c3 FROM rt0, t0, v0 GROUP BY rt0.c4, rt0.c3 HAVING (NOT (((COUNT(*))*(CASE t0.c0  WHEN NULL THEN SUM(SUM(MAX(COUNT(*)))) END)))) UNION ALL SELECT rt0.c4, rt0.c3 FROM rt0, t0, v0 GROUP BY rt0.c4, rt0.c3 HAVING ((((COUNT(*))*(CASE t0.c0  WHEN NULL THEN SUM(SUM(MAX(COUNT(*)))) END))) ISNULL);
SELECT * FROM t0;
SELECT * FROM t0 WHERE ((((((t0.c0)&(t0.c0)), ABS(t0.c0), ((t0.c0) IS FALSE)))<(((+ (t0.c0)), ((t0.c0)<=(t0.c0)), ((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))OR(0.6018649615146867)))AND(t0.c0)))))) UNION ALL SELECT ALL * FROM t0 WHERE ((NOT ((((((t0.c0)&(t0.c0)), ABS(t0.c0), ((t0.c0) IS FALSE)))<(((+ (t0.c0)), ((t0.c0)<=(t0.c0)), ((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))OR(0.6018649615146867)))AND(t0.c0)))))))) UNION ALL SELECT ALL * FROM t0 WHERE ((((((((t0.c0)&(t0.c0)), ABS(t0.c0), ((t0.c0) IS FALSE)))<(((+ (t0.c0)), ((t0.c0)<=(t0.c0)), ((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))OR(0.6018649615146867)))AND(t0.c0)))))) ISNULL));
SELECT * FROM t0;
SELECT DISTINCT v0.c1, rt0.c4, rt0.c1 FROM v0, rt0, t0;
SELECT DISTINCT v0.c1, rt0.c4, rt0.c1 FROM v0, rt0, t0 WHERE (CASE WHEN ((rt0.c2) BETWEEN (t0.c0) AND (rt0.c6)) THEN (rt0.c6 IN ()) END) UNION SELECT DISTINCT v0.c1, rt0.c4, rt0.c1 FROM v0, rt0, t0 WHERE ((NOT (CASE WHEN ((rt0.c2) BETWEEN (t0.c0) AND (rt0.c6)) THEN (rt0.c6 IN ()) END))) UNION SELECT DISTINCT v0.c1, rt0.c4, rt0.c1 FROM v0, rt0, t0 WHERE (((CASE WHEN ((rt0.c2) BETWEEN (t0.c0) AND (rt0.c6)) THEN (rt0.c6 IN ()) END) ISNULL));
SELECT DISTINCT v0.c1, rt0.c4, rt0.c1 FROM v0, rt0, t0;
SELECT t0.c0, v0.c2, v0.c1, v0.c0 FROM t0, v0 GROUP BY t0.c0, v0.c2, v0.c1, v0.c0;
SELECT ALL t0.c0, v0.c2, v0.c1, v0.c0 FROM t0, v0 WHERE (CASE WHEN ((v0.c1)AND(t0.c0)) THEN t0.c0 END) GROUP BY t0.c0, v0.c2, v0.c1, v0.c0 UNION SELECT ALL t0.c0, v0.c2, v0.c1, v0.c0 FROM t0, v0 WHERE ((NOT (CASE WHEN ((v0.c1)AND(t0.c0)) THEN t0.c0 END))) GROUP BY t0.c0, v0.c2, v0.c1, v0.c0 UNION SELECT t0.c0, v0.c2, v0.c1, v0.c0 FROM t0, v0 WHERE (((CASE WHEN ((v0.c1)AND(t0.c0)) THEN t0.c0 END) ISNULL)) GROUP BY t0.c0, v0.c2, v0.c1, v0.c0;
SELECT t0.c0, v0.c2, v0.c1, v0.c0 FROM t0, v0 GROUP BY t0.c0, v0.c2, v0.c1, v0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING AVG(((t0.c0) NOT NULL)) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (AVG(((t0.c0) NOT NULL)))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((AVG(((t0.c0) NOT NULL))) ISNULL);
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING AVG(((t0.c0) NOT NULL)) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (AVG(((t0.c0) NOT NULL)))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((AVG(((t0.c0) NOT NULL))) ISNULL);
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL * FROM t0;
SELECT ALL * FROM t0 WHERE (((((CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)AND(((((t0.c0)AND(t0.c0)))AND(t0.c0)))))AND((((t0.c0)) NOT BETWEEN (('-121474719')) AND ((t0.c0)))))) UNION ALL SELECT * FROM t0 WHERE ((NOT (((((CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)AND(((((t0.c0)AND(t0.c0)))AND(t0.c0)))))AND((((t0.c0)) NOT BETWEEN (('-121474719')) AND ((t0.c0)))))))) UNION ALL SELECT * FROM t0 WHERE (((((((CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)AND(((((t0.c0)AND(t0.c0)))AND(t0.c0)))))AND((((t0.c0)) NOT BETWEEN (('-121474719')) AND ((t0.c0)))))) ISNULL));
SELECT ALL * FROM t0;
SELECT DISTINCT rt0.c0, rt0.c6, rt0.c3, rt0.c2, rt0.c1, v0.c1, v0.c0, rt0.c4, rt0.c5 FROM rt0, v0;
SELECT DISTINCT rt0.c0, rt0.c6, rt0.c3, rt0.c2, rt0.c1, v0.c1, v0.c0, rt0.c4, rt0.c5 FROM rt0, v0 WHERE (((((rt0.c2)IS(v0.c0)))>>(((rt0.c1) BETWEEN (rt0.c5) AND (rt0.c6))))) UNION SELECT DISTINCT rt0.c0, rt0.c6, rt0.c3, rt0.c2, rt0.c1, v0.c1, v0.c0, rt0.c4, rt0.c5 FROM rt0, v0 WHERE ((NOT (((((rt0.c2)IS(v0.c0)))>>(((rt0.c1) BETWEEN (rt0.c5) AND (rt0.c6))))))) UNION SELECT DISTINCT rt0.c0, rt0.c6, rt0.c3, rt0.c2, rt0.c1, v0.c1, v0.c0, rt0.c4, rt0.c5 FROM rt0, v0 WHERE (((((((rt0.c2)IS(v0.c0)))>>(((rt0.c1) BETWEEN (rt0.c5) AND (rt0.c6))))) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c6, rt0.c3, rt0.c2, rt0.c1, v0.c1, v0.c0, rt0.c4, rt0.c5 FROM rt0, v0;
SELECT rt0.c0, v0.c0, rt0.c3, v0.c2, v0.c1 FROM v0, rt0 GROUP BY rt0.c0, v0.c0, rt0.c3, v0.c2, v0.c1;
SELECT ALL rt0.c0, v0.c0, rt0.c3, v0.c2, v0.c1 FROM v0, rt0 WHERE (((((rt0.c0)-(v0.c1)))/((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c6)))))) GROUP BY rt0.c0, v0.c0, rt0.c3, v0.c2, v0.c1 UNION SELECT ALL rt0.c0, v0.c0, rt0.c3, v0.c2, v0.c1 FROM v0, rt0 WHERE ((NOT (((((rt0.c0)-(v0.c1)))/((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c6)))))))) GROUP BY rt0.c0, v0.c0, rt0.c3, v0.c2, v0.c1 UNION SELECT rt0.c0, v0.c0, rt0.c3, v0.c2, v0.c1 FROM v0, rt0 WHERE (((((((rt0.c0)-(v0.c1)))/((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c6)))))) ISNULL)) GROUP BY rt0.c0, v0.c0, rt0.c3, v0.c2, v0.c1;
SELECT rt0.c0, v0.c0, rt0.c3, v0.c2, v0.c1 FROM v0, rt0 GROUP BY rt0.c0, v0.c0, rt0.c3, v0.c2, v0.c1;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING MIN(((t0.c0)<>(t0.c0))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (MIN(((t0.c0)<>(t0.c0))))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((MIN(((t0.c0)<>(t0.c0)))) ISNULL);
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING MIN(((t0.c0)<>(t0.c0))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (MIN(((t0.c0)<>(t0.c0))))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((MIN(((t0.c0)<>(t0.c0)))) ISNULL);
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT * FROM rt0, v0, t0;
SELECT * FROM rt0, v0, t0 WHERE ((((CAST(v0.c1 AS REAL)))<=((((rt0.c5)%('Wb')))))) UNION ALL SELECT ALL * FROM rt0, v0, t0 WHERE ((NOT ((((CAST(v0.c1 AS REAL)))<=((((rt0.c5)%('Wb')))))))) UNION ALL SELECT * FROM rt0, v0, t0 WHERE ((((((CAST(v0.c1 AS REAL)))<=((((rt0.c5)%('Wb')))))) ISNULL));
SELECT * FROM rt0, v0, t0;
SELECT DISTINCT t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0 WHERE (CASE (((t0.c0, t0.c0, t0.c0))>=((t0.c0, t0.c0, t0.c0)))  WHEN ((((t0.c0)AND(t0.c0)))AND(t0.c0)) THEN ((t0.c0) NOT NULL) ELSE ((t0.c0)||(t0.c0)) END) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((NOT (CASE (((t0.c0, t0.c0, t0.c0))>=((t0.c0, t0.c0, t0.c0)))  WHEN ((((t0.c0)AND(t0.c0)))AND(t0.c0)) THEN ((t0.c0) NOT NULL) ELSE ((t0.c0)||(t0.c0)) END))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE (((CASE (((t0.c0, t0.c0, t0.c0))>=((t0.c0, t0.c0, t0.c0)))  WHEN ((((t0.c0)AND(t0.c0)))AND(t0.c0)) THEN ((t0.c0) NOT NULL) ELSE ((t0.c0)||(t0.c0)) END) ISNULL));
SELECT DISTINCT t0.c0 FROM t0;
SELECT v0.c1, rt0.c4, rt0.c2, t0.c0, v0.c0, rt0.c5, rt0.c3, rt0.c0 FROM v0, rt0, t0 GROUP BY v0.c1, rt0.c4, rt0.c2, t0.c0, v0.c0, rt0.c5, rt0.c3, rt0.c0;
SELECT v0.c1, rt0.c4, rt0.c2, t0.c0, v0.c0, rt0.c5, rt0.c3, rt0.c0 FROM v0, rt0, t0 WHERE ((CHANGES() IN (((rt0.c5)/(v0.c2))))) GROUP BY v0.c1, rt0.c4, rt0.c2, t0.c0, v0.c0, rt0.c5, rt0.c3, rt0.c0 UNION SELECT ALL v0.c1, rt0.c4, rt0.c2, t0.c0, v0.c0, rt0.c5, rt0.c3, rt0.c0 FROM v0, rt0, t0 WHERE ((NOT ((CHANGES() IN (((rt0.c5)/(v0.c2))))))) GROUP BY v0.c1, rt0.c4, rt0.c2, t0.c0, v0.c0, rt0.c5, rt0.c3, rt0.c0 UNION SELECT ALL v0.c1, rt0.c4, rt0.c2, t0.c0, v0.c0, rt0.c5, rt0.c3, rt0.c0 FROM v0, rt0, t0 WHERE ((((CHANGES() IN (((rt0.c5)/(v0.c2))))) ISNULL)) GROUP BY v0.c1, rt0.c4, rt0.c2, t0.c0, v0.c0, rt0.c5, rt0.c3, rt0.c0;
SELECT v0.c1, rt0.c4, rt0.c2, t0.c0, v0.c0, rt0.c5, rt0.c3, rt0.c0 FROM v0, rt0, t0 GROUP BY v0.c1, rt0.c4, rt0.c2, t0.c0, v0.c0, rt0.c5, rt0.c3, rt0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((((COUNT(t0.c0))AND(COUNT(COUNT(*)))))OR(SUM(t0.c0))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (((((COUNT(t0.c0))AND(COUNT(COUNT(*)))))OR(SUM(t0.c0))))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((((((COUNT(t0.c0))AND(COUNT(COUNT(*)))))OR(SUM(t0.c0)))) ISNULL);
SELECT rt0.c0, v0.c0, rt0.c2, rt0.c4, v0.c2, v0.c1, t0.c0 FROM v0, t0, rt0;
SELECT rt0.c0, v0.c0, rt0.c2, rt0.c4, v0.c2, v0.c1, t0.c0 FROM v0, t0 NOT INDEXED, rt0 WHERE (((((t0.c0)IS(v0.c2)))%(v0.c0 COLLATE BINARY))) UNION ALL SELECT rt0.c0, v0.c0, rt0.c2, rt0.c4, v0.c2, v0.c1, t0.c0 FROM v0, t0, rt0 WHERE ((NOT (((((t0.c0)IS(v0.c2)))%(v0.c0 COLLATE BINARY))))) UNION ALL SELECT ALL rt0.c0, v0.c0, rt0.c2, rt0.c4, v0.c2, v0.c1, t0.c0 FROM v0, t0, rt0 WHERE (((((((t0.c0)IS(v0.c2)))%(v0.c0 COLLATE BINARY))) ISNULL));
SELECT rt0.c0, v0.c0, rt0.c2, rt0.c4, v0.c2, v0.c1, t0.c0 FROM v0, t0, rt0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (0.9329771428888222) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (0.9329771428888222))) UNION SELECT DISTINCT * FROM t0 WHERE (((0.9329771428888222) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE (((((((t0.c0)OR(t0.c0)))OR(t0.c0))) NOT BETWEEN (((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))) AND (t0.c0))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT (((((((t0.c0)OR(t0.c0)))OR(t0.c0))) NOT BETWEEN (((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))) AND (t0.c0))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE (((((((((t0.c0)OR(t0.c0)))OR(t0.c0))) NOT BETWEEN (((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))) AND (t0.c0))) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL rt0.c2, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c3;
SELECT rt0.c2, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c3 HAVING (((- (AVG(AVG(NULL))))) ISNULL) UNION ALL SELECT rt0.c2, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c3 HAVING (NOT ((((- (AVG(AVG(NULL))))) ISNULL))) UNION ALL SELECT rt0.c2, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c3 HAVING (((((- (AVG(AVG(NULL))))) ISNULL)) ISNULL);
SELECT rt0.c6, rt0.c0, rt0.c5, v0.c1, v0.c2, rt0.c1, rt0.c2, rt0.c4, v0.c0 FROM v0, rt0;
SELECT rt0.c6, rt0.c0, rt0.c5, v0.c1, v0.c2, rt0.c1, rt0.c2, rt0.c4, v0.c0 FROM v0, rt0 WHERE (CASE rt0.c3  WHEN v0.c2 THEN NULL ELSE rt0.c4 END COLLATE NOCASE) UNION ALL SELECT rt0.c6, rt0.c0, rt0.c5, v0.c1, v0.c2, rt0.c1, rt0.c2, rt0.c4, v0.c0 FROM v0, rt0 WHERE ((NOT (CASE rt0.c3  WHEN v0.c2 THEN NULL ELSE rt0.c4 END COLLATE NOCASE))) UNION ALL SELECT rt0.c6, rt0.c0, rt0.c5, v0.c1, v0.c2, rt0.c1, rt0.c2, rt0.c4, v0.c0 FROM v0, rt0 WHERE (((CASE rt0.c3  WHEN v0.c2 THEN NULL ELSE rt0.c4 END COLLATE NOCASE) ISNULL));
SELECT rt0.c6, rt0.c0, rt0.c5, v0.c1, v0.c2, rt0.c1, rt0.c2, rt0.c4, v0.c0 FROM v0, rt0;
SELECT DISTINCT * FROM t0, rt0, v0;
SELECT DISTINCT * FROM t0, rt0, v0 WHERE (((((((rt0.c5)%(rt0.c0)))AND(LIKELIHOOD(rt0.c4, 0.26442822853123793))))OR(IFNULL(rt0.c2, v0.c0)))) UNION SELECT DISTINCT * FROM t0, rt0, v0 WHERE ((NOT (((((((rt0.c5)%(rt0.c0)))AND(LIKELIHOOD(rt0.c4, 0.26442822853123793))))OR(IFNULL(rt0.c2, v0.c0)))))) UNION SELECT DISTINCT * FROM t0, rt0, v0 WHERE (((((((((rt0.c5)%(rt0.c0)))AND(LIKELIHOOD(rt0.c4, 0.26442822853123793))))OR(IFNULL(rt0.c2, v0.c0)))) ISNULL));
SELECT DISTINCT * FROM t0, rt0, v0;
SELECT v0.c1, v0.c0, rt0.c2, rt0.c3, rt0.c1, rt0.c6, rt0.c5 FROM rt0, v0, t0 GROUP BY v0.c1, v0.c0, rt0.c2, rt0.c3, rt0.c1, rt0.c6, rt0.c5;
SELECT ALL v0.c1, v0.c0, rt0.c2, rt0.c3, rt0.c1, rt0.c6, rt0.c5 FROM rt0, v0, t0 WHERE ((((((((('')OR('pl')))OR(rt0.c0)))OR((rt0.c1 IN (rt0.c5)))))AND((rt0.c3 IN (rt0.c6))))) GROUP BY v0.c1, v0.c0, rt0.c2, rt0.c3, rt0.c1, rt0.c6, rt0.c5 UNION SELECT ALL v0.c1, v0.c0, rt0.c2, rt0.c3, rt0.c1, rt0.c6, rt0.c5 FROM rt0, v0, t0 WHERE ((NOT ((((((((('')OR('pl')))OR(rt0.c0)))OR((rt0.c1 IN (rt0.c5)))))AND((rt0.c3 IN (rt0.c6))))))) GROUP BY v0.c1, v0.c0, rt0.c2, rt0.c3, rt0.c1, rt0.c6, rt0.c5 UNION SELECT ALL v0.c1, v0.c0, rt0.c2, rt0.c3, rt0.c1, rt0.c6, rt0.c5 FROM rt0, v0, t0 WHERE ((((((((((('')OR('pl')))OR(rt0.c0)))OR((rt0.c1 IN (rt0.c5)))))AND((rt0.c3 IN (rt0.c6))))) ISNULL)) GROUP BY v0.c1, v0.c0, rt0.c2, rt0.c3, rt0.c1, rt0.c6, rt0.c5;
SELECT v0.c1, v0.c0, rt0.c2, rt0.c3, rt0.c1, rt0.c6, rt0.c5 FROM rt0, v0, t0 GROUP BY v0.c1, v0.c0, rt0.c2, rt0.c3, rt0.c1, rt0.c6, rt0.c5;
SELECT ALL v0.c1, rt0.c6, rt0.c2, v0.c0, t0.c0 FROM v0, t0 LEFT OUTER JOIN rt0 ON CASE JULIANDAY(rt0.c2, rt0.c5, rt0.c0, rt0.c2, rt0.c3)  WHEN CAST(t0.c0 AS REAL) THEN (rt0.c6 IN (rt0.c5)) END GROUP BY v0.c1, rt0.c6, rt0.c2, v0.c0, t0.c0;
SELECT v0.c1, rt0.c6, rt0.c2, v0.c0, t0.c0 FROM v0, t0 LEFT OUTER JOIN rt0 ON CASE JULIANDAY(rt0.c2, rt0.c5, rt0.c0, rt0.c2, rt0.c3)  WHEN CAST(t0.c0 AS REAL) THEN (rt0.c6 IN (rt0.c5)) END GROUP BY v0.c1, rt0.c6, rt0.c2, v0.c0, t0.c0 HAVING TOTAL(GROUP_CONCAT(AVG(rt0.c6))) UNION ALL SELECT v0.c1, rt0.c6, rt0.c2, v0.c0, t0.c0 FROM v0, t0 LEFT OUTER JOIN rt0 ON CASE JULIANDAY(rt0.c2, rt0.c5, rt0.c0, rt0.c2, rt0.c3)  WHEN CAST(t0.c0 AS REAL) THEN (rt0.c6 IN (rt0.c5)) END GROUP BY v0.c1, rt0.c6, rt0.c2, v0.c0, t0.c0 HAVING (NOT (TOTAL(GROUP_CONCAT(AVG(rt0.c6))))) UNION ALL SELECT ALL v0.c1, rt0.c6, rt0.c2, v0.c0, t0.c0 FROM v0, t0 LEFT OUTER JOIN rt0 ON CASE JULIANDAY(rt0.c2, rt0.c5, rt0.c0, rt0.c2, rt0.c3)  WHEN CAST(t0.c0 AS REAL) THEN (rt0.c6 IN (rt0.c5)) END GROUP BY v0.c1, rt0.c6, rt0.c2, v0.c0, t0.c0 HAVING ((TOTAL(GROUP_CONCAT(AVG(rt0.c6)))) ISNULL);
SELECT t0.c0, v0.c0, v0.c2, v0.c1 FROM v0, t0;
SELECT ALL t0.c0, v0.c0, v0.c2, v0.c1 FROM v0, t0 WHERE (CAST(v0.c1 AS INTEGER) COLLATE NOCASE) UNION ALL SELECT t0.c0, v0.c0, v0.c2, v0.c1 FROM v0, t0 WHERE ((NOT (CAST(v0.c1 AS INTEGER) COLLATE NOCASE))) UNION ALL SELECT t0.c0, v0.c0, v0.c2, v0.c1 FROM v0, t0 WHERE (((CAST(v0.c1 AS INTEGER) COLLATE NOCASE) ISNULL));
SELECT t0.c0, v0.c0, v0.c2, v0.c1 FROM v0, t0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (TIME(rt0.c1, rt0.c2, rt0.c4) COLLATE RTRIM) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (TIME(rt0.c1, rt0.c2, rt0.c4) COLLATE RTRIM))) UNION SELECT DISTINCT * FROM rt0 WHERE (((TIME(rt0.c1, rt0.c2, rt0.c4) COLLATE RTRIM) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT v0.c1, v0.c0 FROM v0, rt0, t0 GROUP BY v0.c1, v0.c0;
SELECT ALL v0.c1, v0.c0 FROM v0, rt0, t0 WHERE (LOWER(rt0.c4)) GROUP BY v0.c1, v0.c0 UNION SELECT ALL v0.c1, v0.c0 FROM v0, rt0, t0 WHERE ((NOT (LOWER(rt0.c4)))) GROUP BY v0.c1, v0.c0 UNION SELECT ALL v0.c1, v0.c0 FROM v0, rt0, t0 WHERE (((LOWER(rt0.c4)) ISNULL)) GROUP BY v0.c1, v0.c0;
SELECT v0.c1, v0.c0 FROM v0, rt0, t0 GROUP BY v0.c1, v0.c0;
SELECT t0.c0, rt0.c6 FROM v0, rt0, t0 GROUP BY t0.c0, rt0.c6;
SELECT t0.c0, rt0.c6 FROM v0, rt0, t0 GROUP BY t0.c0, rt0.c6 HAVING COUNT(*) UNION ALL SELECT t0.c0, rt0.c6 FROM v0, rt0, t0 GROUP BY t0.c0, rt0.c6 HAVING (NOT (COUNT(*))) UNION ALL SELECT t0.c0, rt0.c6 FROM v0, rt0, t0 GROUP BY t0.c0, rt0.c6 HAVING ((COUNT(*)) ISNULL);
SELECT t0.c0, rt0.c6 FROM v0, rt0, t0 GROUP BY t0.c0, rt0.c6;
SELECT t0.c0, rt0.c6 FROM v0, rt0, t0 GROUP BY t0.c0, rt0.c6 HAVING COUNT(*) UNION ALL SELECT t0.c0, rt0.c6 FROM v0, rt0, t0 GROUP BY t0.c0, rt0.c6 HAVING (NOT (COUNT(*))) UNION ALL SELECT t0.c0, rt0.c6 FROM v0, rt0, t0 GROUP BY t0.c0, rt0.c6 HAVING ((COUNT(*)) ISNULL);
SELECT t0.c0, rt0.c6 FROM v0, rt0, t0 GROUP BY t0.c0, rt0.c6;
SELECT ALL * FROM v0 FULL OUTER JOIN t0 ON CASE WHEN ((v0.c1)||(v0.c2)) THEN ((((v0.c2)AND(v0.c2)))AND(v0.c1)) WHEN ((v0.c2) BETWEEN (v0.c1) AND (v0.c2)) THEN v0.c1 COLLATE BINARY WHEN CASE WHEN t0.c0 THEN NULL ELSE v0.c0 END THEN 0.9625591480946961 ELSE json_type(t0.c0) END;
SELECT * FROM v0 FULL OUTER JOIN t0 ON CASE WHEN ((v0.c1)||(v0.c2)) THEN ((((v0.c2)AND(v0.c2)))AND(v0.c1)) WHEN ((v0.c2) BETWEEN (v0.c1) AND (v0.c2)) THEN v0.c1 COLLATE BINARY WHEN CASE WHEN t0.c0 THEN NULL ELSE v0.c0 END THEN 0.9625591480946961 ELSE json_type(t0.c0) END WHERE ((((v0.c0)) BETWEEN ((CAST(v0.c1 AS BLOB))) AND ((CAST(v0.c2 AS TEXT))))) UNION ALL SELECT * FROM v0 FULL OUTER JOIN t0 ON CASE WHEN ((v0.c1)||(v0.c2)) THEN ((((v0.c2)AND(v0.c2)))AND(v0.c1)) WHEN ((v0.c2) BETWEEN (v0.c1) AND (v0.c2)) THEN v0.c1 COLLATE BINARY WHEN CASE WHEN t0.c0 THEN NULL ELSE v0.c0 END THEN 0.9625591480946961 ELSE json_type(t0.c0) END WHERE ((NOT ((((v0.c0)) BETWEEN ((CAST(v0.c1 AS BLOB))) AND ((CAST(v0.c2 AS TEXT))))))) UNION ALL SELECT ALL * FROM v0 FULL OUTER JOIN t0 ON CASE WHEN ((v0.c1)||(v0.c2)) THEN ((((v0.c2)AND(v0.c2)))AND(v0.c1)) WHEN ((v0.c2) BETWEEN (v0.c1) AND (v0.c2)) THEN v0.c1 COLLATE BINARY WHEN CASE WHEN t0.c0 THEN NULL ELSE v0.c0 END THEN 0.9625591480946961 ELSE json_type(t0.c0) END WHERE ((((((v0.c0)) BETWEEN ((CAST(v0.c1 AS BLOB))) AND ((CAST(v0.c2 AS TEXT))))) ISNULL));
SELECT ALL * FROM v0 FULL OUTER JOIN t0 ON CASE WHEN ((v0.c1)||(v0.c2)) THEN ((((v0.c2)AND(v0.c2)))AND(v0.c1)) WHEN ((v0.c2) BETWEEN (v0.c1) AND (v0.c2)) THEN v0.c1 COLLATE BINARY WHEN CASE WHEN t0.c0 THEN NULL ELSE v0.c0 END THEN 0.9625591480946961 ELSE json_type(t0.c0) END;
SELECT DISTINCT t0.c0, rt0.c0, rt0.c2, rt0.c6, rt0.c5, rt0.c3, rt0.c4, rt0.c1 FROM t0, rt0;
SELECT DISTINCT t0.c0, rt0.c0, rt0.c2, rt0.c6, rt0.c5, rt0.c3, rt0.c4, rt0.c1 FROM t0, rt0 WHERE ((rt0.c0 COLLATE BINARY IN ())) UNION SELECT DISTINCT t0.c0, rt0.c0, rt0.c2, rt0.c6, rt0.c5, rt0.c3, rt0.c4, rt0.c1 FROM t0, rt0 WHERE ((NOT ((rt0.c0 COLLATE BINARY IN ())))) UNION SELECT DISTINCT t0.c0, rt0.c0, rt0.c2, rt0.c6, rt0.c5, rt0.c3, rt0.c4, rt0.c1 FROM t0, rt0 WHERE ((((rt0.c0 COLLATE BINARY IN ())) ISNULL));
SELECT DISTINCT t0.c0, rt0.c0, rt0.c2, rt0.c6, rt0.c5, rt0.c3, rt0.c4, rt0.c1 FROM t0, rt0;
SELECT rt0.c4, rt0.c0, v0.c2, rt0.c3, rt0.c1, v0.c0, rt0.c6, rt0.c2 FROM rt0, v0 GROUP BY rt0.c4, rt0.c0, v0.c2, rt0.c3, rt0.c1, v0.c0, rt0.c6, rt0.c2;
SELECT rt0.c4, rt0.c0, v0.c2, rt0.c3, rt0.c1, v0.c0, rt0.c6, rt0.c2 FROM rt0, v0 WHERE ((((((rt0.c0)%(rt0.c3))))=((CASE WHEN v0.c1 THEN rt0.c3 END)))) GROUP BY rt0.c4, rt0.c0, v0.c2, rt0.c3, rt0.c1, v0.c0, rt0.c6, rt0.c2 UNION SELECT ALL rt0.c4, rt0.c0, v0.c2, rt0.c3, rt0.c1, v0.c0, rt0.c6, rt0.c2 FROM rt0, v0 WHERE ((NOT ((((((rt0.c0)%(rt0.c3))))==((CASE WHEN v0.c1 THEN rt0.c3 END)))))) GROUP BY rt0.c4, rt0.c0, v0.c2, rt0.c3, rt0.c1, v0.c0, rt0.c6, rt0.c2 UNION SELECT ALL rt0.c4, rt0.c0, v0.c2, rt0.c3, rt0.c1, v0.c0, rt0.c6, rt0.c2 FROM rt0, v0 WHERE ((((((((rt0.c0)%(rt0.c3))))=((CASE WHEN v0.c1 THEN rt0.c3 END)))) ISNULL)) GROUP BY rt0.c4, rt0.c0, v0.c2, rt0.c3, rt0.c1, v0.c0, rt0.c6, rt0.c2;
SELECT rt0.c4, rt0.c0, v0.c2, rt0.c3, rt0.c1, v0.c0, rt0.c6, rt0.c2 FROM rt0, v0 GROUP BY rt0.c4, rt0.c0, v0.c2, rt0.c3, rt0.c1, v0.c0, rt0.c6, rt0.c2;
SELECT rt0.c0, rt0.c1, v0.c0, rt0.c6, rt0.c4, rt0.c3, v0.c2, t0.c0, rt0.c5, rt0.c2, v0.c1 FROM rt0, t0 LEFT OUTER JOIN v0 ON ((((t0.c0 COLLATE BINARY)OR(v0.c1)))AND(((v0.c2) NOTNULL))) GROUP BY rt0.c0, rt0.c1, v0.c0, rt0.c6, rt0.c4, rt0.c3, v0.c2, t0.c0, rt0.c5, rt0.c2, v0.c1;
SELECT ALL rt0.c0, rt0.c1, v0.c0, rt0.c6, rt0.c4, rt0.c3, v0.c2, t0.c0, rt0.c5, rt0.c2, v0.c1 FROM rt0, t0 LEFT OUTER JOIN v0 ON ((((t0.c0 COLLATE BINARY)OR(v0.c1)))AND(((v0.c2) NOTNULL))) GROUP BY rt0.c0, rt0.c1, v0.c0, rt0.c6, rt0.c4, rt0.c3, v0.c2, t0.c0, rt0.c5, rt0.c2, v0.c1 HAVING TOTAL(MIN(SUM(GROUP_CONCAT(GROUP_CONCAT(GROUP_CONCAT(rt0.c1)))))) UNION ALL SELECT ALL rt0.c0, rt0.c1, v0.c0, rt0.c6, rt0.c4, rt0.c3, v0.c2, t0.c0, rt0.c5, rt0.c2, v0.c1 FROM rt0, t0 LEFT OUTER JOIN v0 ON ((((t0.c0 COLLATE BINARY)OR(v0.c1)))AND(((v0.c2) NOTNULL))) GROUP BY rt0.c0, rt0.c1, v0.c0, rt0.c6, rt0.c4, rt0.c3, v0.c2, t0.c0, rt0.c5, rt0.c2, v0.c1 HAVING (NOT (TOTAL(MIN(SUM(GROUP_CONCAT(GROUP_CONCAT(GROUP_CONCAT(rt0.c1)))))))) UNION ALL SELECT rt0.c0, rt0.c1, v0.c0, rt0.c6, rt0.c4, rt0.c3, v0.c2, t0.c0, rt0.c5, rt0.c2, v0.c1 FROM rt0, t0 LEFT OUTER JOIN v0 ON ((((t0.c0 COLLATE BINARY)OR(v0.c1)))AND(((v0.c2) NOTNULL))) GROUP BY rt0.c0, rt0.c1, v0.c0, rt0.c6, rt0.c4, rt0.c3, v0.c2, t0.c0, rt0.c5, rt0.c2, v0.c1 HAVING ((TOTAL(MIN(SUM(GROUP_CONCAT(GROUP_CONCAT(GROUP_CONCAT(rt0.c1))))))) ISNULL);
SELECT * FROM rt0, t0 LEFT OUTER JOIN v0 ON ((((((((TRIM(rt0.c1))OR(CASE rt0.c5  WHEN rt0.c1 THEN 0.5770533422391645 ELSE rt0.c2 END)))AND(((0.9911817264511646) NOT BETWEEN (rt0.c1) AND (v0.c2)))))AND(((rt0.c0) IS FALSE))))AND(CASE WHEN rt0.c4 THEN '0.9866261859040659' WHEN x'217a' THEN t0.c0 WHEN t0.c0 THEN t0.c0 END));
SELECT * FROM rt0, t0 LEFT OUTER JOIN v0 ON ((((((((TRIM(rt0.c1))OR(CASE rt0.c5  WHEN rt0.c1 THEN 0.5770533422391645 ELSE rt0.c2 END)))AND(((0.9911817264511646) NOT BETWEEN (rt0.c1) AND (v0.c2)))))AND(((rt0.c0) IS FALSE))))AND(CASE WHEN rt0.c4 THEN '0.9866261859040659' WHEN x'217a' THEN t0.c0 WHEN t0.c0 THEN t0.c0 END)) WHERE ('~7ZIp') UNION ALL SELECT * FROM rt0, t0 LEFT OUTER JOIN v0 ON ((((((((TRIM(rt0.c1))OR(CASE rt0.c5  WHEN rt0.c1 THEN 0.5770533422391645 ELSE rt0.c2 END)))AND(((0.9911817264511646) NOT BETWEEN (rt0.c1) AND (v0.c2)))))AND(((rt0.c0) IS FALSE))))AND(CASE WHEN rt0.c4 THEN '0.9866261859040659' WHEN x'217a' THEN t0.c0 WHEN t0.c0 THEN t0.c0 END)) WHERE ((NOT ('~7ZIp'))) UNION ALL SELECT * FROM rt0, t0 LEFT OUTER JOIN v0 ON ((((((((TRIM(rt0.c1))OR(CASE rt0.c5  WHEN rt0.c1 THEN 0.5770533422391645 ELSE rt0.c2 END)))AND(((0.9911817264511646) NOT BETWEEN (rt0.c1) AND (v0.c2)))))AND(((rt0.c0) IS FALSE))))AND(CASE WHEN rt0.c4 THEN '0.9866261859040659' WHEN x'217a' THEN t0.c0 WHEN t0.c0 THEN t0.c0 END)) WHERE ((('~7ZIp') ISNULL));
SELECT * FROM rt0, t0 LEFT OUTER JOIN v0 ON ((((((((TRIM(rt0.c1))OR(CASE rt0.c5  WHEN rt0.c1 THEN 0.5770533422391645 ELSE rt0.c2 END)))AND(((0.9911817264511646) NOT BETWEEN (rt0.c1) AND (v0.c2)))))AND(((rt0.c0) IS FALSE))))AND(CASE WHEN rt0.c4 THEN '0.9866261859040659' WHEN x'217a' THEN t0.c0 WHEN t0.c0 THEN t0.c0 END));
SELECT DISTINCT v0.c0, v0.c2, t0.c0 FROM rt0, t0, v0;
SELECT DISTINCT v0.c0, v0.c2, t0.c0 FROM rt0, t0, v0 WHERE (NULL) UNION SELECT DISTINCT v0.c0, v0.c2, t0.c0 FROM rt0, t0, v0 WHERE ((NOT (NULL))) UNION SELECT DISTINCT v0.c0, v0.c2, t0.c0 FROM rt0, t0, v0 WHERE (((NULL) ISNULL));
SELECT DISTINCT v0.c0, v0.c2, t0.c0 FROM rt0, t0, v0;
SELECT ALL v0.c2, t0.c0 FROM v0, t0 GROUP BY v0.c2, t0.c0;
SELECT v0.c2, t0.c0 FROM v0, t0 WHERE ((NOT (((t0.c0) IS TRUE)))) GROUP BY v0.c2, t0.c0 UNION SELECT v0.c2, t0.c0 FROM v0, t0 WHERE ((NOT ((NOT (((t0.c0) IS TRUE)))))) GROUP BY v0.c2, t0.c0 UNION SELECT v0.c2, t0.c0 FROM v0, t0 WHERE ((((NOT (((t0.c0) IS TRUE)))) ISNULL)) GROUP BY v0.c2, t0.c0;
SELECT ALL v0.c2, t0.c0 FROM v0, t0 GROUP BY v0.c2, t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING MAX(((TOTAL(GROUP_CONCAT(x'')))IS NOT(t0.c0))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (MAX(((TOTAL(GROUP_CONCAT(x'')))IS NOT(t0.c0))))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((MAX(((TOTAL(GROUP_CONCAT(x'')))IS NOT(t0.c0)))) ISNULL);
SELECT * FROM rt0, t0, v0;
SELECT * FROM rt0, t0, v0 WHERE (rt0.c0) UNION ALL SELECT * FROM rt0, t0, v0 WHERE ((NOT (rt0.c0))) UNION ALL SELECT ALL * FROM rt0, t0, v0 WHERE (((rt0.c0) ISNULL));
SELECT * FROM rt0, t0, v0;
SELECT DISTINCT rt0.c3, rt0.c1, rt0.c2, t0.c0, v0.c2, rt0.c5, rt0.c0, rt0.c4 FROM rt0, t0, v0;
SELECT DISTINCT rt0.c3, rt0.c1, rt0.c2, t0.c0, v0.c2, rt0.c5, rt0.c0, rt0.c4 FROM rt0, t0, v0 WHERE ((NOT (0.2045305785402125))) UNION SELECT DISTINCT rt0.c3, rt0.c1, rt0.c2, t0.c0, v0.c2, rt0.c5, rt0.c0, rt0.c4 FROM rt0, t0, v0 WHERE ((NOT ((NOT (0.2045305785402125))))) UNION SELECT DISTINCT rt0.c3, rt0.c1, rt0.c2, t0.c0, v0.c2, rt0.c5, rt0.c0, rt0.c4 FROM rt0, t0, v0 WHERE ((((NOT (0.2045305785402125))) ISNULL));
SELECT DISTINCT rt0.c3, rt0.c1, rt0.c2, t0.c0, v0.c2, rt0.c5, rt0.c0, rt0.c4 FROM rt0, t0, v0;
SELECT ALL v0.c2, rt0.c1, v0.c0, rt0.c2, t0.c0, rt0.c3, v0.c1, rt0.c5, rt0.c0, rt0.c6 FROM t0, rt0, v0 GROUP BY v0.c2, rt0.c1, v0.c0, rt0.c2, t0.c0, rt0.c3, v0.c1, rt0.c5, rt0.c0, rt0.c6;
SELECT v0.c2, rt0.c1, v0.c0, rt0.c2, t0.c0, rt0.c3, v0.c1, rt0.c5, rt0.c0, rt0.c6 FROM t0, rt0, v0 WHERE (v0.c0) GROUP BY v0.c2, rt0.c1, v0.c0, rt0.c2, t0.c0, rt0.c3, v0.c1, rt0.c5, rt0.c0, rt0.c6 UNION SELECT v0.c2, rt0.c1, v0.c0, rt0.c2, t0.c0, rt0.c3, v0.c1, rt0.c5, rt0.c0, rt0.c6 FROM t0, rt0, v0 WHERE ((NOT (v0.c0))) GROUP BY v0.c2, rt0.c1, v0.c0, rt0.c2, t0.c0, rt0.c3, v0.c1, rt0.c5, rt0.c0, rt0.c6 UNION SELECT ALL v0.c2, rt0.c1, v0.c0, rt0.c2, t0.c0, rt0.c3, v0.c1, rt0.c5, rt0.c0, rt0.c6 FROM t0, rt0, v0 WHERE (((v0.c0) ISNULL)) GROUP BY v0.c2, rt0.c1, v0.c0, rt0.c2, t0.c0, rt0.c3, v0.c1, rt0.c5, rt0.c0, rt0.c6;
SELECT ALL v0.c2, rt0.c1, v0.c0, rt0.c2, t0.c0, rt0.c3, v0.c1, rt0.c5, rt0.c0, rt0.c6 FROM t0, rt0, v0 GROUP BY v0.c2, rt0.c1, v0.c0, rt0.c2, t0.c0, rt0.c3, v0.c1, rt0.c5, rt0.c0, rt0.c6;
SELECT ALL rt0.c4, rt0.c6, v0.c2, t0.c0, rt0.c2, rt0.c3 FROM v0, rt0, t0 GROUP BY rt0.c4, rt0.c6, v0.c2, t0.c0, rt0.c2, rt0.c3;
SELECT ALL rt0.c4, rt0.c6, v0.c2, t0.c0, rt0.c2, rt0.c3 FROM v0, rt0, t0 GROUP BY rt0.c4, rt0.c6, v0.c2, t0.c0, rt0.c2, rt0.c3 HAVING COUNT(AVG(rt0.c3)) UNION ALL SELECT rt0.c4, rt0.c6, v0.c2, t0.c0, rt0.c2, rt0.c3 FROM v0, rt0, t0 GROUP BY rt0.c4, rt0.c6, v0.c2, t0.c0, rt0.c2, rt0.c3 HAVING (NOT (COUNT(AVG(rt0.c3)))) UNION ALL SELECT rt0.c4, rt0.c6, v0.c2, t0.c0, rt0.c2, rt0.c3 FROM v0, rt0, t0 GROUP BY rt0.c4, rt0.c6, v0.c2, t0.c0, rt0.c2, rt0.c3 HAVING ((COUNT(AVG(rt0.c3))) ISNULL);
SELECT * FROM t0, rt0 LEFT OUTER JOIN v0 ON rt0.c1;
SELECT * FROM t0, rt0 LEFT OUTER JOIN v0 ON rt0.c1 WHERE (((((((rt0.c0)OR(0.32096688592673817)))AND(rt0.c0)))*(CAST(rt0.c6 AS INTEGER)))) UNION ALL SELECT * FROM t0, rt0 LEFT OUTER JOIN v0 ON rt0.c1 WHERE ((NOT (((((((rt0.c0)OR(0.32096688592673817)))AND(rt0.c0)))*(CAST(rt0.c6 AS INTEGER)))))) UNION ALL SELECT * FROM t0, rt0 LEFT OUTER JOIN v0 ON rt0.c1 WHERE (((((((((rt0.c0)OR(0.32096688592673817)))AND(rt0.c0)))*(CAST(rt0.c6 AS INTEGER)))) ISNULL));
SELECT * FROM t0, rt0 LEFT OUTER JOIN v0 ON rt0.c1;
SELECT DISTINCT rt0.c4, rt0.c2, rt0.c1, rt0.c6, v0.c1, v0.c2, rt0.c3, rt0.c5, rt0.c0 FROM rt0, v0;
SELECT DISTINCT rt0.c4, rt0.c2, rt0.c1, rt0.c6, v0.c1, v0.c2, rt0.c3, rt0.c5, rt0.c0 FROM rt0, v0 WHERE (((rt0.c2) BETWEEN (((rt0.c2)OR(rt0.c3))) AND ('' COLLATE NOCASE))) UNION SELECT DISTINCT rt0.c4, rt0.c2, rt0.c1, rt0.c6, v0.c1, v0.c2, rt0.c3, rt0.c5, rt0.c0 FROM rt0, v0 WHERE ((NOT (((rt0.c2) BETWEEN (((rt0.c2)OR(rt0.c3))) AND ('' COLLATE NOCASE))))) UNION SELECT DISTINCT rt0.c4, rt0.c2, rt0.c1, rt0.c6, v0.c1, v0.c2, rt0.c3, rt0.c5, rt0.c0 FROM rt0, v0 WHERE (((((rt0.c2) BETWEEN (((rt0.c2)OR(rt0.c3))) AND ('' COLLATE NOCASE))) ISNULL));
SELECT DISTINCT rt0.c4, rt0.c2, rt0.c1, rt0.c6, v0.c1, v0.c2, rt0.c3, rt0.c5, rt0.c0 FROM rt0, v0;
SELECT rt0.c0, t0.c0, rt0.c2, rt0.c5, rt0.c4, rt0.c1 FROM t0, rt0 GROUP BY rt0.c0, t0.c0, rt0.c2, rt0.c5, rt0.c4, rt0.c1;
SELECT ALL rt0.c0, t0.c0, rt0.c2, rt0.c5, rt0.c4, rt0.c1 FROM t0, rt0 WHERE (((rt0.c3)||(rt0.c2)) COLLATE BINARY) GROUP BY rt0.c0, t0.c0, rt0.c2, rt0.c5, rt0.c4, rt0.c1 UNION SELECT rt0.c0, t0.c0, rt0.c2, rt0.c5, rt0.c4, rt0.c1 FROM t0, rt0 WHERE ((NOT (((rt0.c3)||(rt0.c2)) COLLATE BINARY))) GROUP BY rt0.c0, t0.c0, rt0.c2, rt0.c5, rt0.c4, rt0.c1 UNION SELECT rt0.c0, t0.c0, rt0.c2, rt0.c5, rt0.c4, rt0.c1 FROM t0, rt0 WHERE (((((rt0.c3)||(rt0.c2)) COLLATE BINARY) ISNULL)) GROUP BY rt0.c0, t0.c0, rt0.c2, rt0.c5, rt0.c4, rt0.c1;
SELECT rt0.c0, t0.c0, rt0.c2, rt0.c5, rt0.c4, rt0.c1 FROM t0, rt0 GROUP BY rt0.c0, t0.c0, rt0.c2, rt0.c5, rt0.c4, rt0.c1;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING GROUP_CONCAT((TOTAL(t0.c0) IN (t0.c0))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (GROUP_CONCAT((TOTAL(t0.c0) IN (t0.c0))))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((GROUP_CONCAT((TOTAL(t0.c0) IN (t0.c0)))) ISNULL);
SELECT v0.c1, v0.c0, v0.c2 FROM v0;
SELECT ALL v0.c1, v0.c0, v0.c2 FROM v0 WHERE ((v0.c0 IN ()) COLLATE RTRIM) UNION ALL SELECT v0.c1, v0.c0, v0.c2 FROM v0 WHERE ((NOT ((v0.c0 IN ()) COLLATE RTRIM))) UNION ALL SELECT v0.c1, v0.c0, v0.c2 FROM v0 WHERE ((((v0.c0 IN ()) COLLATE RTRIM) ISNULL));
SELECT v0.c1, v0.c0, v0.c2 FROM v0;
SELECT DISTINCT rt0.c1, v0.c0, v0.c1, v0.c2, t0.c0, rt0.c6, rt0.c0, rt0.c3, rt0.c2, rt0.c5, rt0.c4 FROM t0, v0 NATURAL JOIN rt0;
SELECT DISTINCT rt0.c1, v0.c0, v0.c1, v0.c2, t0.c0, rt0.c6, rt0.c0, rt0.c3, rt0.c2, rt0.c5, rt0.c4 FROM t0, v0 NATURAL JOIN rt0 WHERE (x'ce56' COLLATE BINARY COLLATE BINARY) UNION SELECT DISTINCT rt0.c1, v0.c0, v0.c1, v0.c2, t0.c0, rt0.c6, rt0.c0, rt0.c3, rt0.c2, rt0.c5, rt0.c4 FROM t0, v0 NATURAL JOIN rt0 WHERE ((NOT (x'ce56' COLLATE BINARY COLLATE BINARY))) UNION SELECT DISTINCT rt0.c1, v0.c0, v0.c1, v0.c2, t0.c0, rt0.c6, rt0.c0, rt0.c3, rt0.c2, rt0.c5, rt0.c4 FROM t0, v0 NATURAL JOIN rt0 WHERE (((x'ce56' COLLATE BINARY COLLATE BINARY) ISNULL));
SELECT DISTINCT rt0.c1, v0.c0, v0.c1, v0.c2, t0.c0, rt0.c6, rt0.c0, rt0.c3, rt0.c2, rt0.c5, rt0.c4 FROM t0, v0 NATURAL JOIN rt0;
SELECT v0.c1, rt0.c2, t0.c0, v0.c0, rt0.c0, rt0.c1 FROM v0, rt0 INNER JOIN t0 ON rt0.c2 GROUP BY v0.c1, rt0.c2, t0.c0, v0.c0, rt0.c0, rt0.c1;
SELECT ALL v0.c1, rt0.c2, t0.c0, v0.c0, rt0.c0, rt0.c1 FROM v0, rt0 INNER JOIN t0 ON rt0.c2 WHERE (CASE ((v0.c1)GLOB(t0.c0))  WHEN ((rt0.c5) NOT BETWEEN (rt0.c2) AND (rt0.c5)) THEN ((rt0.c1)|(rt0.c1)) WHEN ((v0.c0)%(v0.c2)) THEN CAST(v0.c1 AS REAL) WHEN ((((((((rt0.c3)OR('TL.''v+,')))AND(0.30166670782013805)))AND(0.0988052181929957)))AND(rt0.c2)) THEN -6.96215008E8 ELSE rt0.c0 COLLATE NOCASE END) GROUP BY v0.c1, rt0.c2, t0.c0, v0.c0, rt0.c0, rt0.c1 UNION SELECT v0.c1, rt0.c2, t0.c0, v0.c0, rt0.c0, rt0.c1 FROM v0, rt0 INNER JOIN t0 ON rt0.c2 WHERE ((NOT (CASE ((v0.c1)GLOB(t0.c0))  WHEN ((rt0.c5) NOT BETWEEN (rt0.c2) AND (rt0.c5)) THEN ((rt0.c1)|(rt0.c1)) WHEN ((v0.c0)%(v0.c2)) THEN CAST(v0.c1 AS REAL) WHEN ((((((((rt0.c3)OR('TL.''v+,')))AND(0.30166670782013805)))AND(0.0988052181929957)))AND(rt0.c2)) THEN -6.96215008E8 ELSE rt0.c0 COLLATE NOCASE END))) GROUP BY v0.c1, rt0.c2, t0.c0, v0.c0, rt0.c0, rt0.c1 UNION SELECT v0.c1, rt0.c2, t0.c0, v0.c0, rt0.c0, rt0.c1 FROM v0, rt0 INNER JOIN t0 ON rt0.c2 WHERE (((CASE ((v0.c1)GLOB(t0.c0))  WHEN ((rt0.c5) NOT BETWEEN (rt0.c2) AND (rt0.c5)) THEN ((rt0.c1)|(rt0.c1)) WHEN ((v0.c0)%(v0.c2)) THEN CAST(v0.c1 AS REAL) WHEN ((((((((rt0.c3)OR('TL.''v+,')))AND(0.30166670782013805)))AND(0.0988052181929957)))AND(rt0.c2)) THEN -6.96215008E8 ELSE rt0.c0 COLLATE NOCASE END) ISNULL)) GROUP BY v0.c1, rt0.c2, t0.c0, v0.c0, rt0.c0, rt0.c1;
SELECT v0.c1, rt0.c2, t0.c0, v0.c0, rt0.c0, rt0.c1 FROM v0, rt0 INNER JOIN t0 ON rt0.c2 GROUP BY v0.c1, rt0.c2, t0.c0, v0.c0, rt0.c0, rt0.c1;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING NULL UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (NULL)) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((NULL) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING NULL UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (NULL)) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((NULL) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT * FROM rt0, v0, t0;
SELECT * FROM rt0, v0, t0 WHERE (((rt0.c1) IS FALSE)) UNION ALL SELECT * FROM rt0, v0, t0 WHERE ((NOT (((rt0.c1) IS FALSE)))) UNION ALL SELECT ALL * FROM rt0, v0, t0 WHERE (((((rt0.c1) IS FALSE)) ISNULL));
SELECT * FROM rt0, v0, t0;
SELECT DISTINCT * FROM t0 FULL OUTER JOIN rt0 ON CASE WHEN ((v0.c0)>=(rt0.c2)) THEN ((t0.c0) NOTNULL) ELSE ((((rt0.c3)OR(rt0.c4)))OR(rt0.c1)) END LEFT OUTER JOIN v0 ON CAST(DATETIME(v0.c0, rt0.c1, rt0.c3, rt0.c5, rt0.c4) AS NUMERIC);
SELECT rt0.c2, v0.c1, v0.c0, t0.c0, rt0.c1, rt0.c6, rt0.c4, v0.c2, rt0.c3 FROM t0, rt0, v0 GROUP BY rt0.c2, v0.c1, v0.c0, t0.c0, rt0.c1, rt0.c6, rt0.c4, v0.c2, rt0.c3;
SELECT ALL rt0.c2, v0.c1, v0.c0, t0.c0, rt0.c1, rt0.c6, rt0.c4, v0.c2, rt0.c3 FROM t0, rt0, v0 WHERE (v0.c0) GROUP BY rt0.c2, v0.c1, v0.c0, t0.c0, rt0.c1, rt0.c6, rt0.c4, v0.c2, rt0.c3 UNION SELECT rt0.c2, v0.c1, v0.c0, t0.c0, rt0.c1, rt0.c6, rt0.c4, v0.c2, rt0.c3 FROM t0, rt0, v0 WHERE ((NOT (v0.c0))) GROUP BY rt0.c2, v0.c1, v0.c0, t0.c0, rt0.c1, rt0.c6, rt0.c4, v0.c2, rt0.c3 UNION SELECT ALL rt0.c2, v0.c1, v0.c0, t0.c0, rt0.c1, rt0.c6, rt0.c4, v0.c2, rt0.c3 FROM t0, rt0, v0 WHERE (((v0.c0) ISNULL)) GROUP BY rt0.c2, v0.c1, v0.c0, t0.c0, rt0.c1, rt0.c6, rt0.c4, v0.c2, rt0.c3;
SELECT rt0.c2, v0.c1, v0.c0, t0.c0, rt0.c1, rt0.c6, rt0.c4, v0.c2, rt0.c3 FROM t0, rt0, v0 GROUP BY rt0.c2, v0.c1, v0.c0, t0.c0, rt0.c1, rt0.c6, rt0.c4, v0.c2, rt0.c3;
SELECT ALL v0.c1, v0.c2, v0.c0 FROM v0 GROUP BY v0.c1, v0.c2, v0.c0;
SELECT ALL v0.c1, v0.c2, v0.c0 FROM v0 GROUP BY v0.c1, v0.c2, v0.c0 HAVING (((0.5193070171583545, GROUP_CONCAT(v0.c0), '&A6+in', v0.c0, v0.c0)) BETWEEN ((AVG(v0.c2), ((MIN(v0.c1))AND(v0.c0)), SUM(MAX(TOTAL(TOTAL(MAX(v0.c1))))), TOTAL(v0.c1), AVG(x''))) AND ((AVG(TOTAL(TOTAL(TOTAL(AVG(v0.c2))))), CASE v0.c2  WHEN COUNT(v0.c2) THEN TOTAL(TOTAL(SUM(TOTAL(AVG(v0.c0))))) END, AVG(v0.c2), ((v0.c0)*(v0.c0)), ((v0.c0) BETWEEN (v0.c1) AND (v0.c1))))) UNION ALL SELECT ALL v0.c1, v0.c2, v0.c0 FROM v0 GROUP BY v0.c1, v0.c2, v0.c0 HAVING (NOT ((((0.5193070171583545, GROUP_CONCAT(v0.c0), '&A6+in', v0.c0, v0.c0)) BETWEEN ((AVG(v0.c2), ((MIN(v0.c1))AND(v0.c0)), SUM(MAX(TOTAL(TOTAL(MAX(v0.c1))))), TOTAL(v0.c1), AVG(x''))) AND ((AVG(TOTAL(TOTAL(TOTAL(AVG(v0.c2))))), CASE v0.c2  WHEN COUNT(v0.c2) THEN TOTAL(TOTAL(SUM(TOTAL(AVG(v0.c0))))) END, AVG(v0.c2), ((v0.c0)*(v0.c0)), ((v0.c0) BETWEEN (v0.c1) AND (v0.c1))))))) UNION ALL SELECT v0.c1, v0.c2, v0.c0 FROM v0 GROUP BY v0.c1, v0.c2, v0.c0 HAVING (((((0.5193070171583545, GROUP_CONCAT(v0.c0), '&A6+in', v0.c0, v0.c0)) BETWEEN ((AVG(v0.c2), ((MIN(v0.c1))AND(v0.c0)), SUM(MAX(TOTAL(TOTAL(MAX(v0.c1))))), TOTAL(v0.c1), AVG(x''))) AND ((AVG(TOTAL(TOTAL(TOTAL(AVG(v0.c2))))), CASE v0.c2  WHEN COUNT(v0.c2) THEN TOTAL(TOTAL(SUM(TOTAL(AVG(v0.c0))))) END, AVG(v0.c2), ((v0.c0)*(v0.c0)), ((v0.c0) BETWEEN (v0.c1) AND (v0.c1)))))) ISNULL);
SELECT * FROM v0, t0;
SELECT ALL * FROM v0, t0 WHERE (json_quote(((v0.c0)<(v0.c2)))) UNION ALL SELECT ALL * FROM v0, t0 WHERE ((NOT (json_quote(((v0.c0)<(v0.c2)))))) UNION ALL SELECT * FROM v0, t0 WHERE (((json_quote(((v0.c0)<(v0.c2)))) ISNULL));
SELECT * FROM v0, t0;
SELECT DISTINCT v0.c2, v0.c1 FROM v0;
SELECT DISTINCT v0.c2, v0.c1 FROM v0 WHERE (((~ (733721458)) IN ())) UNION SELECT DISTINCT v0.c2, v0.c1 FROM v0 WHERE ((NOT (((~ (733721458)) IN ())))) UNION SELECT DISTINCT v0.c2, v0.c1 FROM v0 WHERE (((((~ (733721458)) IN ())) ISNULL));
SELECT DISTINCT v0.c2, v0.c1 FROM v0;
SELECT rt0.c0, rt0.c3, v0.c2, rt0.c6, rt0.c5, v0.c0, rt0.c1, t0.c0, v0.c1, rt0.c4 FROM t0, v0, rt0 GROUP BY rt0.c0, rt0.c3, v0.c2, rt0.c6, rt0.c5, v0.c0, rt0.c1, t0.c0, v0.c1, rt0.c4;
SELECT ALL rt0.c0, rt0.c3, v0.c2, rt0.c6, rt0.c5, v0.c0, rt0.c1, t0.c0, v0.c1, rt0.c4 FROM t0, v0, rt0 WHERE (((((rt0.c1)|(rt0.c5))) BETWEEN ((rt0.c1 IN ())) AND ((+ (v0.c2))))) GROUP BY rt0.c0, rt0.c3, v0.c2, rt0.c6, rt0.c5, v0.c0, rt0.c1, t0.c0, v0.c1, rt0.c4 UNION SELECT rt0.c0, rt0.c3, v0.c2, rt0.c6, rt0.c5, v0.c0, rt0.c1, t0.c0, v0.c1, rt0.c4 FROM t0, v0, rt0 WHERE ((NOT (((((rt0.c1)|(rt0.c5))) BETWEEN ((rt0.c1 IN ())) AND ((+ (v0.c2))))))) GROUP BY rt0.c0, rt0.c3, v0.c2, rt0.c6, rt0.c5, v0.c0, rt0.c1, t0.c0, v0.c1, rt0.c4 UNION SELECT rt0.c0, rt0.c3, v0.c2, rt0.c6, rt0.c5, v0.c0, rt0.c1, t0.c0, v0.c1, rt0.c4 FROM t0 NOT INDEXED, v0, rt0 WHERE (((((((rt0.c1)|(rt0.c5))) BETWEEN ((rt0.c1 IN ())) AND ((+ (v0.c2))))) ISNULL)) GROUP BY rt0.c0, rt0.c3, v0.c2, rt0.c6, rt0.c5, v0.c0, rt0.c1, t0.c0, v0.c1, rt0.c4;
SELECT rt0.c0, rt0.c3, v0.c2, rt0.c6, rt0.c5, v0.c0, rt0.c1, t0.c0, v0.c1, rt0.c4 FROM t0, v0, rt0 GROUP BY rt0.c0, rt0.c3, v0.c2, rt0.c6, rt0.c5, v0.c0, rt0.c1, t0.c0, v0.c1, rt0.c4;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 CROSS JOIN v0 ON ((((0.8997983355678049)OR(v0.c1)))AND(rt0.c4)) COLLATE NOCASE RIGHT OUTER JOIN t0 ON (CASE WHEN v0.c0 THEN rt0.c5 ELSE -2024378710 END IN ()) GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 CROSS JOIN v0 ON ((((0.8997983355678049)OR(v0.c1)))AND(rt0.c4)) COLLATE NOCASE RIGHT OUTER JOIN t0 ON (CASE WHEN v0.c0 THEN rt0.c5 ELSE -2024378710 END IN ()) GROUP BY rt0.c1, rt0.c2 HAVING MAX((NOT (SUM(MIN(GROUP_CONCAT(SUM(GROUP_CONCAT(t0.c0)))))))) UNION ALL SELECT ALL rt0.c1, rt0.c2 FROM rt0 CROSS JOIN v0 ON ((((0.8997983355678049)OR(v0.c1)))AND(rt0.c4)) COLLATE NOCASE RIGHT OUTER JOIN t0 ON (CASE WHEN v0.c0 THEN rt0.c5 ELSE -2024378710 END IN ()) GROUP BY rt0.c1, rt0.c2 HAVING (NOT (MAX((NOT (SUM(MIN(GROUP_CONCAT(SUM(GROUP_CONCAT(t0.c0)))))))))) UNION ALL SELECT ALL rt0.c1, rt0.c2 FROM rt0 CROSS JOIN v0 ON ((((0.8997983355678049)OR(v0.c1)))AND(rt0.c4)) COLLATE NOCASE RIGHT OUTER JOIN t0 ON (CASE WHEN v0.c0 THEN rt0.c5 ELSE -2024378710 END IN ()) GROUP BY rt0.c1, rt0.c2 HAVING ((MAX((NOT (SUM(MIN(GROUP_CONCAT(SUM(GROUP_CONCAT(t0.c0))))))))) ISNULL);
SELECT rt0.c3, rt0.c1, v0.c0, rt0.c6, rt0.c2, v0.c1, rt0.c5 FROM v0, rt0;
SELECT rt0.c3, rt0.c1, v0.c0, rt0.c6, rt0.c2, v0.c1, rt0.c5 FROM v0, rt0 WHERE (rt0.c5) UNION ALL SELECT rt0.c3, rt0.c1, v0.c0, rt0.c6, rt0.c2, v0.c1, rt0.c5 FROM v0, rt0 WHERE ((NOT (rt0.c5))) UNION ALL SELECT ALL rt0.c3, rt0.c1, v0.c0, rt0.c6, rt0.c2, v0.c1, rt0.c5 FROM v0, rt0 WHERE (((rt0.c5) ISNULL));
SELECT rt0.c3, rt0.c1, v0.c0, rt0.c6, rt0.c2, v0.c1, rt0.c5 FROM v0, rt0;
SELECT DISTINCT v0.c2, v0.c0, t0.c0, rt0.c4, rt0.c6 FROM v0, rt0, t0;
SELECT DISTINCT v0.c2, v0.c0, t0.c0, rt0.c4, rt0.c6 FROM v0, rt0, t0 WHERE (TIME(CASE WHEN v0.c2 THEN rt0.c6 END, ((t0.c0) IS FALSE), x'')) UNION SELECT DISTINCT v0.c2, v0.c0, t0.c0, rt0.c4, rt0.c6 FROM v0, rt0, t0 WHERE ((NOT (TIME(CASE WHEN v0.c2 THEN rt0.c6 END, ((t0.c0) IS FALSE), x'')))) UNION SELECT DISTINCT v0.c2, v0.c0, t0.c0, rt0.c4, rt0.c6 FROM v0, rt0, t0 WHERE (((TIME(CASE WHEN v0.c2 THEN rt0.c6 END, ((t0.c0) IS FALSE), x'')) ISNULL));
SELECT DISTINCT v0.c2, v0.c0, t0.c0, rt0.c4, rt0.c6 FROM v0, rt0, t0;
SELECT rt0.c5, rt0.c0, rt0.c3, rt0.c1, rt0.c4 FROM rt0 GROUP BY rt0.c5, rt0.c0, rt0.c3, rt0.c1, rt0.c4;
SELECT ALL rt0.c5, rt0.c0, rt0.c3, rt0.c1, rt0.c4 FROM rt0 WHERE (rt0.c3) GROUP BY rt0.c5, rt0.c0, rt0.c3, rt0.c1, rt0.c4 UNION SELECT rt0.c5, rt0.c0, rt0.c3, rt0.c1, rt0.c4 FROM rt0 NOT INDEXED WHERE ((NOT (rt0.c3))) GROUP BY rt0.c5, rt0.c0, rt0.c3, rt0.c1, rt0.c4 UNION SELECT rt0.c5, rt0.c0, rt0.c3, rt0.c1, rt0.c4 FROM rt0 WHERE (((rt0.c3) ISNULL)) GROUP BY rt0.c5, rt0.c0, rt0.c3, rt0.c1, rt0.c4;
SELECT rt0.c5, rt0.c0, rt0.c3, rt0.c1, rt0.c4 FROM rt0 GROUP BY rt0.c5, rt0.c0, rt0.c3, rt0.c1, rt0.c4;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING MAX(((TOTAL(GROUP_CONCAT(COUNT(t0.c0))))IS(t0.c0)), (- (COUNT(t0.c0)))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (MAX(((TOTAL(GROUP_CONCAT(COUNT(t0.c0))))IS(t0.c0)), (- (COUNT(t0.c0)))))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((MAX(((TOTAL(GROUP_CONCAT(COUNT(t0.c0))))IS(t0.c0)), (- (COUNT(t0.c0))))) ISNULL);
SELECT ALL rt0.c2, rt0.c3, v0.c1, rt0.c4, rt0.c5, rt0.c0, v0.c0, rt0.c6 FROM rt0, v0;
SELECT rt0.c2, rt0.c3, v0.c1, rt0.c4, rt0.c5, rt0.c0, v0.c0, rt0.c6 FROM rt0, v0 WHERE (CAST(((rt0.c4) NOT NULL) AS INTEGER)) UNION ALL SELECT rt0.c2, rt0.c3, v0.c1, rt0.c4, rt0.c5, rt0.c0, v0.c0, rt0.c6 FROM rt0, v0 WHERE ((NOT (CAST(((rt0.c4) NOT NULL) AS INTEGER)))) UNION ALL SELECT rt0.c2, rt0.c3, v0.c1, rt0.c4, rt0.c5, rt0.c0, v0.c0, rt0.c6 FROM rt0, v0 WHERE (((CAST(((rt0.c4) NOT NULL) AS INTEGER)) ISNULL));
SELECT ALL rt0.c2, rt0.c3, v0.c1, rt0.c4, rt0.c5, rt0.c0, v0.c0, rt0.c6 FROM rt0, v0;
SELECT DISTINCT rt0.c1, rt0.c2, v0.c1, rt0.c6, v0.c0, rt0.c3, v0.c2, rt0.c0 FROM v0, rt0;
SELECT DISTINCT rt0.c1, rt0.c2, v0.c1, rt0.c6, v0.c0, rt0.c3, v0.c2, rt0.c0 FROM v0, rt0 WHERE (((rt0.c4) BETWEEN (((((((((rt0.c4)AND(rt0.c6)))AND(v0.c1)))AND(NULL)))OR(v0.c1))) AND (CASE v0.c2  WHEN v0.c0 THEN rt0.c0 WHEN x'' THEN rt0.c4 WHEN v0.c2 THEN rt0.c1 END))) UNION SELECT DISTINCT rt0.c1, rt0.c2, v0.c1, rt0.c6, v0.c0, rt0.c3, v0.c2, rt0.c0 FROM v0, rt0 WHERE ((NOT (((rt0.c4) BETWEEN (((((((((rt0.c4)AND(rt0.c6)))AND(v0.c1)))AND(NULL)))OR(v0.c1))) AND (CASE v0.c2  WHEN v0.c0 THEN rt0.c0 WHEN x'' THEN rt0.c4 WHEN v0.c2 THEN rt0.c1 END))))) UNION SELECT DISTINCT rt0.c1, rt0.c2, v0.c1, rt0.c6, v0.c0, rt0.c3, v0.c2, rt0.c0 FROM v0, rt0 WHERE (((((rt0.c4) BETWEEN (((((((((rt0.c4)AND(rt0.c6)))AND(v0.c1)))AND(NULL)))OR(v0.c1))) AND (CASE v0.c2  WHEN v0.c0 THEN rt0.c0 WHEN x'' THEN rt0.c4 WHEN v0.c2 THEN rt0.c1 END))) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c2, v0.c1, rt0.c6, v0.c0, rt0.c3, v0.c2, rt0.c0 FROM v0, rt0;
SELECT v0.c2, v0.c1 FROM v0, t0 GROUP BY v0.c2, v0.c1;
SELECT v0.c2, v0.c1 FROM v0, t0 WHERE (t0.c0) GROUP BY v0.c2, v0.c1 UNION SELECT v0.c2, v0.c1 FROM v0, t0 WHERE ((NOT (t0.c0))) GROUP BY v0.c2, v0.c1 UNION SELECT ALL v0.c2, v0.c1 FROM v0, t0 WHERE (((t0.c0) ISNULL)) GROUP BY v0.c2, v0.c1;
SELECT v0.c2, v0.c1 FROM v0, t0 GROUP BY v0.c2, v0.c1;
SELECT ALL t0.c0, rt0.c4, rt0.c0, rt0.c3, rt0.c2, rt0.c6, rt0.c1, rt0.c5 FROM t0, rt0 GROUP BY t0.c0, rt0.c4, rt0.c0, rt0.c3, rt0.c2, rt0.c6, rt0.c1, rt0.c5;
SELECT t0.c0, rt0.c4, rt0.c0, rt0.c3, rt0.c2, rt0.c6, rt0.c1, rt0.c5 FROM t0, rt0 GROUP BY t0.c0, rt0.c4, rt0.c0, rt0.c3, rt0.c2, rt0.c6, rt0.c1, rt0.c5 HAVING SUM(MAX(AVG(t0.c0))) UNION ALL SELECT ALL t0.c0, rt0.c4, rt0.c0, rt0.c3, rt0.c2, rt0.c6, rt0.c1, rt0.c5 FROM t0, rt0 GROUP BY t0.c0, rt0.c4, rt0.c0, rt0.c3, rt0.c2, rt0.c6, rt0.c1, rt0.c5 HAVING (NOT (SUM(MAX(AVG(t0.c0))))) UNION ALL SELECT t0.c0, rt0.c4, rt0.c0, rt0.c3, rt0.c2, rt0.c6, rt0.c1, rt0.c5 FROM t0, rt0 GROUP BY t0.c0, rt0.c4, rt0.c0, rt0.c3, rt0.c2, rt0.c6, rt0.c1, rt0.c5 HAVING ((SUM(MAX(AVG(t0.c0)))) ISNULL);
SELECT * FROM t0, v0;
SELECT * FROM t0, v0 WHERE (CASE 0.5955725178799408  WHEN ((v0.c0) NOT BETWEEN (v0.c2) AND (t0.c0)) THEN CAST(t0.c0 AS INTEGER) END) UNION ALL SELECT ALL * FROM t0, v0 WHERE ((NOT (CASE 0.5955725178799408  WHEN ((v0.c0) NOT BETWEEN (v0.c2) AND (t0.c0)) THEN CAST(t0.c0 AS INTEGER) END))) UNION ALL SELECT ALL * FROM t0, v0 WHERE (((CASE 0.5955725178799408  WHEN ((v0.c0) NOT BETWEEN (v0.c2) AND (t0.c0)) THEN CAST(t0.c0 AS INTEGER) END) ISNULL));
SELECT * FROM t0, v0;
SELECT DISTINCT rt0.c1, rt0.c6, v0.c2 FROM rt0, v0;
SELECT DISTINCT rt0.c1, rt0.c6, v0.c2 FROM rt0, v0 WHERE (((x'' COLLATE RTRIM)+((((v0.c2)) BETWEEN ((rt0.c4)) AND ((rt0.c6)))))) UNION SELECT DISTINCT rt0.c1, rt0.c6, v0.c2 FROM rt0, v0 WHERE ((NOT (((x'' COLLATE RTRIM)+((((v0.c2)) BETWEEN ((rt0.c4)) AND ((rt0.c6)))))))) UNION SELECT DISTINCT rt0.c1, rt0.c6, v0.c2 FROM rt0, v0 WHERE (((((x'' COLLATE RTRIM)+((((v0.c2)) BETWEEN ((rt0.c4)) AND ((rt0.c6)))))) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c6, v0.c2 FROM rt0, v0;
SELECT ALL rt0.c3, rt0.c4 FROM rt0, v0 GROUP BY rt0.c3, rt0.c4;
SELECT ALL rt0.c3, rt0.c4 FROM rt0, v0 WHERE (ABS(DISTINCT ((((rt0.c1)OR(rt0.c5)))OR(rt0.c2)))) GROUP BY rt0.c3, rt0.c4 UNION SELECT ALL rt0.c3, rt0.c4 FROM rt0, v0 WHERE ((NOT (ABS(DISTINCT ((((rt0.c1)OR(rt0.c5)))OR(rt0.c2)))))) GROUP BY rt0.c3, rt0.c4 UNION SELECT ALL rt0.c3, rt0.c4 FROM rt0, v0 WHERE (((ABS(DISTINCT ((((rt0.c1)OR(rt0.c5)))OR(rt0.c2)))) ISNULL)) GROUP BY rt0.c3, rt0.c4;
SELECT ALL rt0.c3, rt0.c4 FROM rt0, v0 GROUP BY rt0.c3, rt0.c4;
SELECT rt0.c4, rt0.c1, v0.c1, rt0.c0 FROM v0, rt0 GROUP BY rt0.c4, rt0.c1, v0.c1, rt0.c0;
SELECT ALL rt0.c4, rt0.c1, v0.c1, rt0.c0 FROM v0, rt0 GROUP BY rt0.c4, rt0.c1, v0.c1, rt0.c0 HAVING MAX(TOTAL(TOTAL(v0.c1))) UNION ALL SELECT rt0.c4, rt0.c1, v0.c1, rt0.c0 FROM v0, rt0 GROUP BY rt0.c4, rt0.c1, v0.c1, rt0.c0 HAVING (NOT (MAX(TOTAL(TOTAL(v0.c1))))) UNION ALL SELECT rt0.c4, rt0.c1, v0.c1, rt0.c0 FROM v0, rt0 GROUP BY rt0.c4, rt0.c1, v0.c1, rt0.c0 HAVING ((MAX(TOTAL(TOTAL(v0.c1)))) ISNULL);
SELECT ALL rt0.c0 FROM rt0, t0, v0;
SELECT ALL rt0.c0 FROM rt0, t0, v0 WHERE (((((((rt0.c6)IS(rt0.c1)))AND((~ (rt0.c3)))))AND(((rt0.c2)<=(rt0.c2))))) UNION ALL SELECT rt0.c0 FROM rt0, t0, v0 WHERE ((NOT (((((((rt0.c6)IS(rt0.c1)))AND((~ (rt0.c3)))))AND(((rt0.c2)<=(rt0.c2))))))) UNION ALL SELECT rt0.c0 FROM rt0, t0, v0 WHERE (((((((((rt0.c6)IS(rt0.c1)))AND((~ (rt0.c3)))))AND(((rt0.c2)<=(rt0.c2))))) ISNULL));
SELECT ALL rt0.c0 FROM rt0, t0, v0;
SELECT DISTINCT rt0.c5 FROM v0, t0 CROSS JOIN rt0 ON ((((((((((rt0.c6)<(v0.c1)))OR((0.16623601096301344 IN ()))))AND(TRIM(DISTINCT rt0.c0, rt0.c0))))AND((- (t0.c0)))))AND(CASE rt0.c0  WHEN '哔P})\rhu-' THEN rt0.c0 END));
SELECT DISTINCT rt0.c5 FROM v0, t0 CROSS JOIN rt0 ON ((((((((((rt0.c6)<(v0.c1)))OR((0.16623601096301344 IN ()))))AND(TRIM(DISTINCT rt0.c0, rt0.c0))))AND((- (t0.c0)))))AND(CASE rt0.c0  WHEN '哔P})\rhu-' THEN rt0.c0 END)) WHERE (CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c5 THEN rt0.c0 WHEN rt0.c2 THEN v0.c2 ELSE v0.c2 END COLLATE RTRIM) UNION SELECT DISTINCT rt0.c5 FROM v0, t0 CROSS JOIN rt0 ON ((((((((((rt0.c6)<(v0.c1)))OR((0.16623601096301344 IN ()))))AND(TRIM(DISTINCT rt0.c0, rt0.c0))))AND((- (t0.c0)))))AND(CASE rt0.c0  WHEN '哔P})\rhu-' THEN rt0.c0 END)) WHERE ((NOT (CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c5 THEN rt0.c0 WHEN rt0.c2 THEN v0.c2 ELSE v0.c2 END COLLATE RTRIM))) UNION SELECT DISTINCT rt0.c5 FROM v0, t0 CROSS JOIN rt0 ON ((((((((((rt0.c6)<(v0.c1)))OR((0.16623601096301344 IN ()))))AND(TRIM(DISTINCT rt0.c0, rt0.c0))))AND((- (t0.c0)))))AND(CASE rt0.c0  WHEN '哔P})\rhu-' THEN rt0.c0 END)) WHERE (((CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c5 THEN rt0.c0 WHEN rt0.c2 THEN v0.c2 ELSE v0.c2 END COLLATE RTRIM) ISNULL));
SELECT DISTINCT rt0.c5 FROM v0, t0 CROSS JOIN rt0 ON ((((((((((rt0.c6)<(v0.c1)))OR((0.16623601096301344 IN ()))))AND(TRIM(DISTINCT rt0.c0, rt0.c0))))AND((- (t0.c0)))))AND(CASE rt0.c0  WHEN '哔P})\rhu-' THEN rt0.c0 END));
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 WHERE (TYPEOF(CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT (TYPEOF(CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE (((TYPEOF(CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT rt0.c1, rt0.c2 FROM rt0, t0 GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c1, rt0.c2 FROM rt0, t0 GROUP BY rt0.c1, rt0.c2 HAVING AVG(rt0.c4) UNION ALL SELECT rt0.c1, rt0.c2 FROM rt0, t0 GROUP BY rt0.c1, rt0.c2 HAVING (NOT (AVG(rt0.c4))) UNION ALL SELECT ALL rt0.c1, rt0.c2 FROM rt0, t0 GROUP BY rt0.c1, rt0.c2 HAVING ((AVG(rt0.c4)) ISNULL);
SELECT rt0.c1, rt0.c2 FROM rt0, t0 GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c1, rt0.c2 FROM rt0, t0 GROUP BY rt0.c1, rt0.c2 HAVING AVG(rt0.c4) UNION ALL SELECT rt0.c1, rt0.c2 FROM rt0, t0 GROUP BY rt0.c1, rt0.c2 HAVING (NOT (AVG(rt0.c4))) UNION ALL SELECT ALL rt0.c1, rt0.c2 FROM rt0, t0 GROUP BY rt0.c1, rt0.c2 HAVING ((AVG(rt0.c4)) ISNULL);
SELECT rt0.c1, rt0.c2 FROM rt0, t0 GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c4, rt0.c3, v0.c0, rt0.c6 FROM rt0, v0, t0;
SELECT ALL rt0.c4, rt0.c3, v0.c0, rt0.c6 FROM rt0, v0, t0 WHERE ((~ (rt0.c6)) COLLATE RTRIM) UNION ALL SELECT ALL rt0.c4, rt0.c3, v0.c0, rt0.c6 FROM rt0, v0, t0 WHERE ((NOT ((~ (rt0.c6)) COLLATE RTRIM))) UNION ALL SELECT rt0.c4, rt0.c3, v0.c0, rt0.c6 FROM rt0, v0, t0 WHERE ((((~ (rt0.c6)) COLLATE RTRIM) ISNULL));
SELECT ALL rt0.c4, rt0.c3, v0.c0, rt0.c6 FROM rt0, v0, t0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((- (((((rt0.c0)OR(rt0.c3)))OR(rt0.c5))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((- (((((rt0.c0)OR(rt0.c3)))OR(rt0.c5))))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((- (((((rt0.c0)OR(rt0.c3)))OR(rt0.c5))))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c6, rt0.c0, t0.c0 FROM rt0, t0, v0 GROUP BY rt0.c6, rt0.c0, t0.c0;
SELECT rt0.c6, rt0.c0, t0.c0 FROM rt0, t0, v0 WHERE ((+ ((rt0.c3 IN ())))) GROUP BY rt0.c6, rt0.c0, t0.c0 UNION SELECT ALL rt0.c6, rt0.c0, t0.c0 FROM rt0, t0, v0 WHERE ((NOT ((+ ((rt0.c3 IN ())))))) GROUP BY rt0.c6, rt0.c0, t0.c0 UNION SELECT ALL rt0.c6, rt0.c0, t0.c0 FROM rt0, t0, v0 WHERE ((((+ ((rt0.c3 IN ())))) ISNULL)) GROUP BY rt0.c6, rt0.c0, t0.c0;
SELECT rt0.c6, rt0.c0, t0.c0 FROM rt0, t0, v0 GROUP BY rt0.c6, rt0.c0, t0.c0;
SELECT ALL rt0.c6, rt0.c5, rt0.c4, rt0.c0, rt0.c2, t0.c0 FROM t0, rt0 GROUP BY rt0.c6, rt0.c5, rt0.c4, rt0.c0, rt0.c2, t0.c0;
SELECT rt0.c6, rt0.c5, rt0.c4, rt0.c0, rt0.c2, t0.c0 FROM t0, rt0 GROUP BY rt0.c6, rt0.c5, rt0.c4, rt0.c0, rt0.c2, t0.c0 HAVING GROUP_CONCAT(MAX(rt0.c4)) UNION ALL SELECT rt0.c6, rt0.c5, rt0.c4, rt0.c0, rt0.c2, t0.c0 FROM t0, rt0 GROUP BY rt0.c6, rt0.c5, rt0.c4, rt0.c0, rt0.c2, t0.c0 HAVING (NOT (GROUP_CONCAT(MAX(rt0.c4)))) UNION ALL SELECT ALL rt0.c6, rt0.c5, rt0.c4, rt0.c0, rt0.c2, t0.c0 FROM t0, rt0 GROUP BY rt0.c6, rt0.c5, rt0.c4, rt0.c0, rt0.c2, t0.c0 HAVING ((GROUP_CONCAT(MAX(rt0.c4))) ISNULL);
SELECT ALL rt0.c3, rt0.c4, rt0.c1, rt0.c0, rt0.c2 FROM rt0, t0, v0 NOT INDEXED;
SELECT rt0.c3, rt0.c4, rt0.c1, rt0.c0, rt0.c2 FROM rt0, t0, v0 WHERE (((rt0.c2 COLLATE BINARY) BETWEEN (((rt0.c0) BETWEEN (rt0.c3) AND (rt0.c3))) AND ((+ (v0.c2))))) UNION ALL SELECT ALL rt0.c3, rt0.c4, rt0.c1, rt0.c0, rt0.c2 FROM rt0, t0, v0 WHERE ((NOT (((rt0.c2 COLLATE BINARY) BETWEEN (((rt0.c0) BETWEEN (rt0.c3) AND (rt0.c3))) AND ((+ (v0.c2))))))) UNION ALL SELECT rt0.c3, rt0.c4, rt0.c1, rt0.c0, rt0.c2 FROM rt0, t0, v0 WHERE (((((rt0.c2 COLLATE BINARY) BETWEEN (((rt0.c0) BETWEEN (rt0.c3) AND (rt0.c3))) AND ((+ (v0.c2))))) ISNULL));
SELECT ALL rt0.c3, rt0.c4, rt0.c1, rt0.c0, rt0.c2 FROM rt0, t0, v0 NOT INDEXED;
SELECT DISTINCT rt0.c6, rt0.c3, rt0.c1, v0.c1, rt0.c5, rt0.c4, t0.c0 FROM v0, t0, rt0;
SELECT DISTINCT rt0.c6, rt0.c3, rt0.c1, v0.c1, rt0.c5, rt0.c4, t0.c0 FROM v0, t0, rt0 WHERE (ABS(DISTINCT rt0.c6) COLLATE NOCASE) UNION SELECT DISTINCT rt0.c6, rt0.c3, rt0.c1, v0.c1, rt0.c5, rt0.c4, t0.c0 FROM v0, t0, rt0 WHERE ((NOT (ABS(DISTINCT rt0.c6) COLLATE NOCASE))) UNION SELECT DISTINCT rt0.c6, rt0.c3, rt0.c1, v0.c1, rt0.c5, rt0.c4, t0.c0 FROM v0, t0, rt0 WHERE (((ABS(DISTINCT rt0.c6) COLLATE NOCASE) ISNULL));
SELECT DISTINCT rt0.c6, rt0.c3, rt0.c1, v0.c1, rt0.c5, rt0.c4, t0.c0 FROM v0, t0, rt0;
SELECT ALL rt0.c6, v0.c0, rt0.c1 FROM rt0, v0, t0 GROUP BY rt0.c6, v0.c0, rt0.c1;
SELECT rt0.c6, v0.c0, rt0.c1 FROM rt0, v0, t0 WHERE (((((((((((rt0.c5)OR(rt0.c1)))OR(t0.c0)))OR(t0.c0)))OR(rt0.c3))) IS TRUE)) GROUP BY rt0.c6, v0.c0, rt0.c1 UNION SELECT rt0.c6, v0.c0, rt0.c1 FROM rt0, v0, t0 WHERE ((NOT (((((((((((rt0.c5)OR(rt0.c1)))OR(t0.c0)))OR(t0.c0)))OR(rt0.c3))) IS TRUE)))) GROUP BY rt0.c6, v0.c0, rt0.c1 UNION SELECT rt0.c6, v0.c0, rt0.c1 FROM rt0, v0, t0 WHERE (((((((((((((rt0.c5)OR(rt0.c1)))OR(t0.c0)))OR(t0.c0)))OR(rt0.c3))) IS TRUE)) ISNULL)) GROUP BY rt0.c6, v0.c0, rt0.c1;
SELECT ALL rt0.c6, v0.c0, rt0.c1 FROM rt0, v0, t0 GROUP BY rt0.c6, v0.c0, rt0.c1;
SELECT ALL v0.c2, v0.c0 FROM v0 GROUP BY v0.c2, v0.c0;
SELECT ALL v0.c2, v0.c0 FROM v0 GROUP BY v0.c2, v0.c0 HAVING GROUP_CONCAT(((v0.c1)LIKE(v0.c1))) UNION ALL SELECT ALL v0.c2, v0.c0 FROM v0 GROUP BY v0.c2, v0.c0 HAVING (NOT (GROUP_CONCAT(((v0.c1)LIKE(v0.c1))))) UNION ALL SELECT ALL v0.c2, v0.c0 FROM v0 GROUP BY v0.c2, v0.c0 HAVING ((GROUP_CONCAT(((v0.c1)LIKE(v0.c1)))) ISNULL);
SELECT ALL v0.c2, v0.c0 FROM v0 GROUP BY v0.c2, v0.c0;
SELECT ALL v0.c2, v0.c0 FROM v0 GROUP BY v0.c2, v0.c0 HAVING GROUP_CONCAT(((v0.c1)LIKE(v0.c1))) UNION ALL SELECT ALL v0.c2, v0.c0 FROM v0 GROUP BY v0.c2, v0.c0 HAVING (NOT (GROUP_CONCAT(((v0.c1)LIKE(v0.c1))))) UNION ALL SELECT ALL v0.c2, v0.c0 FROM v0 GROUP BY v0.c2, v0.c0 HAVING ((GROUP_CONCAT(((v0.c1)LIKE(v0.c1)))) ISNULL);
SELECT ALL v0.c2, v0.c0 FROM v0 GROUP BY v0.c2, v0.c0;
SELECT * FROM v0;
SELECT ALL * FROM v0 WHERE (CAST((v0.c1 IN ()) AS REAL)) UNION ALL SELECT * FROM v0 WHERE ((NOT (CAST((v0.c1 IN ()) AS REAL)))) UNION ALL SELECT * FROM v0 WHERE (((CAST((v0.c1 IN ()) AS REAL)) ISNULL));
SELECT * FROM v0;
SELECT DISTINCT * FROM rt0 NOT INDEXED, t0 RIGHT OUTER JOIN v0 ON CAST('I8' AS INTEGER) COLLATE BINARY;
SELECT DISTINCT * FROM rt0, t0 RIGHT OUTER JOIN v0 ON CAST('I8' AS INTEGER) COLLATE BINARY WHERE ((+ (rt0.c6)) COLLATE RTRIM) UNION SELECT DISTINCT * FROM rt0, t0 RIGHT OUTER JOIN v0 ON CAST('I8' AS INTEGER) COLLATE BINARY WHERE ((NOT ((+ (rt0.c6)) COLLATE RTRIM))) UNION SELECT DISTINCT * FROM rt0, t0 RIGHT OUTER JOIN v0 ON CAST('I8' AS INTEGER) COLLATE BINARY WHERE ((((+ (rt0.c6)) COLLATE RTRIM) ISNULL));
SELECT DISTINCT * FROM rt0 NOT INDEXED, t0 RIGHT OUTER JOIN v0 ON CAST('I8' AS INTEGER) COLLATE BINARY;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE (t0.c0) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT (t0.c0))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE (((t0.c0) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT v0.c1, rt0.c3, rt0.c1, rt0.c5, rt0.c0, v0.c2 FROM v0, rt0 GROUP BY v0.c1, rt0.c3, rt0.c1, rt0.c5, rt0.c0, v0.c2;
SELECT v0.c1, rt0.c3, rt0.c1, rt0.c5, rt0.c0, v0.c2 FROM v0, rt0 GROUP BY v0.c1, rt0.c3, rt0.c1, rt0.c5, rt0.c0, v0.c2 HAVING ((((SUM(rt0.c2))/(COUNT(AVG(rt0.c3))))) BETWEEN ('-1094114122' COLLATE BINARY) AND (v0.c1)) UNION ALL SELECT ALL v0.c1, rt0.c3, rt0.c1, rt0.c5, rt0.c0, v0.c2 FROM v0, rt0 GROUP BY v0.c1, rt0.c3, rt0.c1, rt0.c5, rt0.c0, v0.c2 HAVING (NOT (((((SUM(rt0.c2))/(COUNT(AVG(rt0.c3))))) BETWEEN ('-1094114122' COLLATE BINARY) AND (v0.c1)))) UNION ALL SELECT v0.c1, rt0.c3, rt0.c1, rt0.c5, rt0.c0, v0.c2 FROM v0, rt0 GROUP BY v0.c1, rt0.c3, rt0.c1, rt0.c5, rt0.c0, v0.c2 HAVING ((((((SUM(rt0.c2))/(COUNT(AVG(rt0.c3))))) BETWEEN ('-1094114122' COLLATE BINARY) AND (v0.c1))) ISNULL);
SELECT ALL rt0.c2 FROM rt0 RIGHT OUTER JOIN t0 ON CASE WHEN (x'' IN ()) THEN CASE WHEN rt0.c4 THEN rt0.c1 ELSE rt0.c2 END ELSE (- (rt0.c2)) END;
SELECT rt0.c2 FROM rt0 RIGHT OUTER JOIN t0 ON CASE WHEN (x'' IN ()) THEN CASE WHEN rt0.c4 THEN rt0.c1 ELSE rt0.c2 END ELSE (- (rt0.c2)) END WHERE (((CASE WHEN rt0.c3 THEN rt0.c6 WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c5 ELSE t0.c0 END) IS FALSE)) UNION ALL SELECT rt0.c2 FROM rt0 RIGHT OUTER JOIN t0 ON CASE WHEN (x'' IN ()) THEN CASE WHEN rt0.c4 THEN rt0.c1 ELSE rt0.c2 END ELSE (- (rt0.c2)) END WHERE ((NOT (((CASE WHEN rt0.c3 THEN rt0.c6 WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c5 ELSE t0.c0 END) IS FALSE)))) UNION ALL SELECT rt0.c2 FROM rt0 RIGHT OUTER JOIN t0 ON CASE WHEN (x'' IN ()) THEN CASE WHEN rt0.c4 THEN rt0.c1 ELSE rt0.c2 END ELSE (- (rt0.c2)) END WHERE (((((CASE WHEN rt0.c3 THEN rt0.c6 WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c5 ELSE t0.c0 END) IS FALSE)) ISNULL));
SELECT ALL rt0.c2 FROM rt0 RIGHT OUTER JOIN t0 ON CASE WHEN (x'' IN ()) THEN CASE WHEN rt0.c4 THEN rt0.c1 ELSE rt0.c2 END ELSE (- (rt0.c2)) END;
SELECT DISTINCT v0.c0 FROM rt0, v0, t0;
SELECT DISTINCT v0.c0 FROM rt0, v0, t0 WHERE ((NOT ((((rt0.c4, rt0.c3, v0.c2)) NOT BETWEEN ((rt0.c6, rt0.c5, rt0.c3)) AND ((v0.c1, rt0.c5, rt0.c5)))))) UNION SELECT DISTINCT v0.c0 FROM rt0, v0, t0 WHERE ((NOT ((NOT ((((rt0.c4, rt0.c3, v0.c2)) NOT BETWEEN ((rt0.c6, rt0.c5, rt0.c3)) AND ((v0.c1, rt0.c5, rt0.c5)))))))) UNION SELECT DISTINCT v0.c0 FROM rt0, v0, t0 WHERE ((((NOT ((((rt0.c4, rt0.c3, v0.c2)) NOT BETWEEN ((rt0.c6, rt0.c5, rt0.c3)) AND ((v0.c1, rt0.c5, rt0.c5)))))) ISNULL));
SELECT DISTINCT v0.c0 FROM rt0, v0, t0;
SELECT rt0.c1, rt0.c0, v0.c1 FROM v0, rt0, t0 GROUP BY rt0.c1, rt0.c0, v0.c1;
SELECT ALL rt0.c1, rt0.c0, v0.c1 FROM v0, rt0, t0 WHERE ((NOT (CASE '279302682'  WHEN rt0.c4 THEN t0.c0 ELSE rt0.c3 END))) GROUP BY rt0.c1, rt0.c0, v0.c1 UNION SELECT ALL rt0.c1, rt0.c0, v0.c1 FROM v0, rt0, t0 WHERE ((NOT ((NOT (CASE '279302682'  WHEN rt0.c4 THEN t0.c0 ELSE rt0.c3 END))))) GROUP BY rt0.c1, rt0.c0, v0.c1 UNION SELECT ALL rt0.c1, rt0.c0, v0.c1 FROM v0, rt0, t0 WHERE ((((NOT (CASE '279302682'  WHEN rt0.c4 THEN t0.c0 ELSE rt0.c3 END))) ISNULL)) GROUP BY rt0.c1, rt0.c0, v0.c1;
SELECT rt0.c1, rt0.c0, v0.c1 FROM v0, rt0, t0 GROUP BY rt0.c1, rt0.c0, v0.c1;
SELECT v0.c2, t0.c0 FROM t0 LEFT OUTER JOIN v0 ON t0.c0 GROUP BY v0.c2, t0.c0;
SELECT v0.c2, t0.c0 FROM t0 LEFT OUTER JOIN v0 ON t0.c0 GROUP BY v0.c2, t0.c0 HAVING CASE WHEN SUM(v0.c1) THEN (NOT (t0.c0)) WHEN AVG(v0.c1) THEN ((COUNT(*)) BETWEEN (MIN(v0.c0)) AND (COUNT(v0.c2))) WHEN MAX(COUNT(*)) THEN TOTAL(AVG(t0.c0)) WHEN MAX(t0.c0) THEN MIN(v0.c0) WHEN AVG(v0.c0) THEN (((TOTAL(GROUP_CONCAT(v0.c0))))!=((t0.c0))) ELSE ((v0.c2)&(SUM(COUNT(AVG(SUM(v0.c0)))))) END UNION ALL SELECT ALL v0.c2, t0.c0 FROM t0 LEFT OUTER JOIN v0 ON t0.c0 GROUP BY v0.c2, t0.c0 HAVING (NOT (CASE WHEN SUM(v0.c1) THEN (NOT (t0.c0)) WHEN AVG(v0.c1) THEN ((COUNT(*)) BETWEEN (MIN(v0.c0)) AND (COUNT(v0.c2))) WHEN MAX(COUNT(*)) THEN TOTAL(AVG(t0.c0)) WHEN MAX(t0.c0) THEN MIN(v0.c0) WHEN AVG(v0.c0) THEN (((TOTAL(GROUP_CONCAT(v0.c0))))<>((t0.c0))) ELSE ((v0.c2)&(SUM(COUNT(AVG(SUM(v0.c0)))))) END)) UNION ALL SELECT ALL v0.c2, t0.c0 FROM t0 LEFT OUTER JOIN v0 ON t0.c0 GROUP BY v0.c2, t0.c0 HAVING ((CASE WHEN SUM(v0.c1) THEN (NOT (t0.c0)) WHEN AVG(v0.c1) THEN ((COUNT(*)) BETWEEN (MIN(v0.c0)) AND (COUNT(v0.c2))) WHEN MAX(COUNT(*)) THEN TOTAL(AVG(t0.c0)) WHEN MAX(t0.c0) THEN MIN(v0.c0) WHEN AVG(v0.c0) THEN (((TOTAL(GROUP_CONCAT(v0.c0))))!=((t0.c0))) ELSE ((v0.c2)&(SUM(COUNT(AVG(SUM(v0.c0)))))) END) ISNULL);
SELECT ALL v0.c2, rt0.c4, rt0.c6, rt0.c5, rt0.c1 FROM v0 INNER JOIN rt0 ON (((rt0.c1)) NOT BETWEEN ((((((((((((((rt0.c0)AND(rt0.c0)))OR(rt0.c6)))OR(v0.c1)))OR(rt0.c4)))AND(v0.c0)))OR(rt0.c0)))) AND ((NULL)));
SELECT ALL v0.c2, rt0.c4, rt0.c6, rt0.c5, rt0.c1 FROM v0 INNER JOIN rt0 ON (((rt0.c1)) NOT BETWEEN ((((((((((((((rt0.c0)AND(rt0.c0)))OR(rt0.c6)))OR(v0.c1)))OR(rt0.c4)))AND(v0.c0)))OR(rt0.c0)))) AND ((NULL))) WHERE (CASE CAST(rt0.c0 AS BLOB)  WHEN rt0.c6 COLLATE BINARY THEN (~ (v0.c2)) END) UNION ALL SELECT v0.c2, rt0.c4, rt0.c6, rt0.c5, rt0.c1 FROM v0 INNER JOIN rt0 ON (((rt0.c1)) NOT BETWEEN ((((((((((((((rt0.c0)AND(rt0.c0)))OR(rt0.c6)))OR(v0.c1)))OR(rt0.c4)))AND(v0.c0)))OR(rt0.c0)))) AND ((NULL))) WHERE ((NOT (CASE CAST(rt0.c0 AS BLOB)  WHEN rt0.c6 COLLATE BINARY THEN (~ (v0.c2)) END))) UNION ALL SELECT v0.c2, rt0.c4, rt0.c6, rt0.c5, rt0.c1 FROM v0 NOT INDEXED INNER JOIN rt0 ON (((rt0.c1)) NOT BETWEEN ((((((((((((((rt0.c0)AND(rt0.c0)))OR(rt0.c6)))OR(v0.c1)))OR(rt0.c4)))AND(v0.c0)))OR(rt0.c0)))) AND ((NULL))) WHERE (((CASE CAST(rt0.c0 AS BLOB)  WHEN rt0.c6 COLLATE BINARY THEN (~ (v0.c2)) END) ISNULL));
SELECT ALL v0.c2, rt0.c4, rt0.c6, rt0.c5, rt0.c1 FROM v0 INNER JOIN rt0 ON (((rt0.c1)) NOT BETWEEN ((((((((((((((rt0.c0)AND(rt0.c0)))OR(rt0.c6)))OR(v0.c1)))OR(rt0.c4)))AND(v0.c0)))OR(rt0.c0)))) AND ((NULL)));
SELECT DISTINCT * FROM rt0, v0, t0;
SELECT DISTINCT * FROM rt0, v0, t0 WHERE (((v0.c2 COLLATE BINARY)<(((rt0.c4)<(v0.c2))))) UNION SELECT DISTINCT * FROM rt0, v0, t0 WHERE ((NOT (((v0.c2 COLLATE BINARY)<(((rt0.c4)<(v0.c2))))))) UNION SELECT DISTINCT * FROM rt0, v0, t0 WHERE (((((v0.c2 COLLATE BINARY)<(((rt0.c4)<(v0.c2))))) ISNULL));
SELECT DISTINCT * FROM rt0, v0, t0;
SELECT v0.c2 FROM v0, t0 GROUP BY v0.c2;
SELECT ALL v0.c2 FROM v0, t0 WHERE (0.7756693515002603) GROUP BY v0.c2 UNION SELECT ALL v0.c2 FROM v0, t0 WHERE ((NOT (0.7756693515002603))) GROUP BY v0.c2 UNION SELECT v0.c2 FROM v0, t0 WHERE (((0.7756693515002603) ISNULL)) GROUP BY v0.c2;
SELECT v0.c2 FROM v0, t0 GROUP BY v0.c2;
SELECT ALL t0.c0, rt0.c1, rt0.c4 FROM t0 INNER JOIN rt0 ON (((rt0.c1 IN (rt0.c2))) NOTNULL) GROUP BY t0.c0, rt0.c1, rt0.c4;
SELECT t0.c0, rt0.c1, rt0.c4 FROM t0 INNER JOIN rt0 ON (((rt0.c1 IN (rt0.c2))) NOTNULL) GROUP BY t0.c0, rt0.c1, rt0.c4 HAVING (NOT (((rt0.c2)LIKE(MIN(MIN(AVG(COUNT(*)))))))) UNION ALL SELECT t0.c0, rt0.c1, rt0.c4 FROM t0 INNER JOIN rt0 ON (((rt0.c1 IN (rt0.c2))) NOTNULL) GROUP BY t0.c0, rt0.c1, rt0.c4 HAVING (NOT ((NOT (((rt0.c2)LIKE(MIN(MIN(AVG(COUNT(*)))))))))) UNION ALL SELECT ALL t0.c0, rt0.c1, rt0.c4 FROM t0 INNER JOIN rt0 ON (((rt0.c1 IN (rt0.c2))) NOTNULL) GROUP BY t0.c0, rt0.c1, rt0.c4 HAVING (((NOT (((rt0.c2)LIKE(MIN(MIN(AVG(COUNT(*))))))))) ISNULL);
SELECT ALL rt0.c5, rt0.c0, rt0.c3, v0.c0 FROM rt0 INNER JOIN v0 ON (((rt0.c1))!=(((~ (x'6e91'))))) INNER JOIN t0 ON rt0.c0;
SELECT ALL rt0.c5, rt0.c0, rt0.c3, v0.c0 FROM rt0 INNER JOIN v0 ON (((rt0.c1))!=(((~ (x'6e91'))))) INNER JOIN t0 ON rt0.c0 WHERE (0.08406566715713348) UNION ALL SELECT ALL rt0.c5, rt0.c0, rt0.c3, v0.c0 FROM rt0 INNER JOIN v0 ON (((rt0.c1))<>(((~ (x'6e91'))))) INNER JOIN t0 ON rt0.c0 WHERE ((NOT (0.08406566715713348))) UNION ALL SELECT ALL rt0.c5, rt0.c0, rt0.c3, v0.c0 FROM rt0 INNER JOIN v0 ON (((rt0.c1))!=(((~ (x'6e91'))))) INNER JOIN t0 ON rt0.c0 WHERE (((0.08406566715713348) ISNULL));
SELECT ALL rt0.c5, rt0.c0, rt0.c3, v0.c0 FROM rt0 INNER JOIN v0 ON (((rt0.c1))!=(((~ (x'6e91'))))) INNER JOIN t0 ON rt0.c0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE ((COALESCE(DISTINCT t0.c0, t0.c0, t0.c0, t0.c0) IN ())) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT ((COALESCE(DISTINCT t0.c0, t0.c0, t0.c0, t0.c0) IN ())))) UNION SELECT DISTINCT * FROM t0 WHERE ((((COALESCE(DISTINCT t0.c0, t0.c0, t0.c0, t0.c0) IN ())) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT ALL rt0.c3, t0.c0 FROM rt0, v0 RIGHT OUTER JOIN t0 ON ('JvCISvJ' IN ()) COLLATE BINARY GROUP BY rt0.c3, t0.c0;
SELECT ALL rt0.c3, t0.c0 FROM rt0, v0 RIGHT OUTER JOIN t0 ON ('JvCISvJ' IN ()) COLLATE BINARY WHERE (CAST(0.4857251936738606 AS REAL)) GROUP BY rt0.c3, t0.c0 UNION SELECT rt0.c3, t0.c0 FROM rt0, v0 RIGHT OUTER JOIN t0 ON ('JvCISvJ' IN ()) COLLATE BINARY WHERE ((NOT (CAST(0.4857251936738606 AS REAL)))) GROUP BY rt0.c3, t0.c0 UNION SELECT rt0.c3, t0.c0 FROM rt0, v0 RIGHT OUTER JOIN t0 ON ('JvCISvJ' IN ()) COLLATE BINARY WHERE (((CAST(0.4857251936738606 AS REAL)) ISNULL)) GROUP BY rt0.c3, t0.c0;
SELECT ALL rt0.c3, t0.c0 FROM rt0, v0 RIGHT OUTER JOIN t0 ON ('JvCISvJ' IN ()) COLLATE BINARY GROUP BY rt0.c3, t0.c0;
SELECT ALL rt0.c3, rt0.c5 FROM t0, rt0, v0 GROUP BY rt0.c3, rt0.c5;
SELECT ALL rt0.c3, rt0.c5 FROM t0, rt0, v0 GROUP BY rt0.c3, rt0.c5 HAVING TOTAL(MAX(rt0.c0)) UNION ALL SELECT ALL rt0.c3, rt0.c5 FROM t0, rt0, v0 GROUP BY rt0.c3, rt0.c5 HAVING (NOT (TOTAL(MAX(rt0.c0)))) UNION ALL SELECT ALL rt0.c3, rt0.c5 FROM t0, rt0, v0 GROUP BY rt0.c3, rt0.c5 HAVING ((TOTAL(MAX(rt0.c0))) ISNULL);
SELECT ALL * FROM t0, v0;
SELECT ALL * FROM t0, v0 WHERE (x'1e20') UNION ALL SELECT ALL * FROM t0, v0 WHERE ((NOT (x'1e20'))) UNION ALL SELECT ALL * FROM t0, v0 WHERE (((x'1e20') ISNULL));
SELECT ALL * FROM t0, v0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (LIKELIHOOD(((v0.c1)||(v0.c0)), 0.7297630736954086)) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (LIKELIHOOD(((v0.c1)||(v0.c0)), 0.7297630736954086)))) UNION SELECT DISTINCT * FROM v0 WHERE (((LIKELIHOOD(((v0.c1)||(v0.c0)), 0.7297630736954086)) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT ALL rt0.c2, v0.c2, rt0.c4 FROM t0, rt0 INNER JOIN v0 ON (((((rt0.c5)GLOB(v0.c0)), ((v0.c0) ISNULL), CASE WHEN x'' THEN '430837474' ELSE rt0.c3 END))<((((rt0.c2)GLOB('-1733559650')), (t0.c0 IN ()), CASE WHEN v0.c2 THEN rt0.c2 END))) GROUP BY rt0.c2, v0.c2, rt0.c4;
SELECT rt0.c2, v0.c2, rt0.c4 FROM t0, rt0 INNER JOIN v0 ON (((((rt0.c5)GLOB(v0.c0)), ((v0.c0) ISNULL), CASE WHEN x'' THEN '430837474' ELSE rt0.c3 END))<((((rt0.c2)GLOB('-1733559650')), (t0.c0 IN ()), CASE WHEN v0.c2 THEN rt0.c2 END))) WHERE (((v0.c1 COLLATE NOCASE)<=(((rt0.c6) IS FALSE)))) GROUP BY rt0.c2, v0.c2, rt0.c4 UNION SELECT ALL rt0.c2, v0.c2, rt0.c4 FROM t0, rt0 INNER JOIN v0 ON (((((rt0.c5)GLOB(v0.c0)), ((v0.c0) ISNULL), CASE WHEN x'' THEN '430837474' ELSE rt0.c3 END))<((((rt0.c2)GLOB('-1733559650')), (t0.c0 IN ()), CASE WHEN v0.c2 THEN rt0.c2 END))) WHERE ((NOT (((v0.c1 COLLATE NOCASE)<=(((rt0.c6) IS FALSE)))))) GROUP BY rt0.c2, v0.c2, rt0.c4 UNION SELECT ALL rt0.c2, v0.c2, rt0.c4 FROM t0, rt0 INNER JOIN v0 ON (((((rt0.c5)GLOB(v0.c0)), ((v0.c0) ISNULL), CASE WHEN x'' THEN '430837474' ELSE rt0.c3 END))<((((rt0.c2)GLOB('-1733559650')), (t0.c0 IN ()), CASE WHEN v0.c2 THEN rt0.c2 END))) WHERE (((((v0.c1 COLLATE NOCASE)<=(((rt0.c6) IS FALSE)))) ISNULL)) GROUP BY rt0.c2, v0.c2, rt0.c4;
SELECT ALL rt0.c2, v0.c2, rt0.c4 FROM t0, rt0 INNER JOIN v0 ON (((((rt0.c5)GLOB(v0.c0)), ((v0.c0) ISNULL), CASE WHEN x'' THEN '430837474' ELSE rt0.c3 END))<((((rt0.c2)GLOB('-1733559650')), (t0.c0 IN ()), CASE WHEN v0.c2 THEN rt0.c2 END))) GROUP BY rt0.c2, v0.c2, rt0.c4;
SELECT ALL v0.c2 FROM v0 GROUP BY v0.c2;
SELECT ALL v0.c2 FROM v0 GROUP BY v0.c2 HAVING MIN(MAX(COUNT(*))) UNION ALL SELECT v0.c2 FROM v0 GROUP BY v0.c2 HAVING (NOT (MIN(MAX(COUNT(*))))) UNION ALL SELECT v0.c2 FROM v0 GROUP BY v0.c2 HAVING ((MIN(MAX(COUNT(*)))) ISNULL);
SELECT ALL rt0.c2, rt0.c4, rt0.c3, rt0.c1, rt0.c0, v0.c1, v0.c0, t0.c0, rt0.c5, v0.c2 FROM v0, rt0, t0;
SELECT rt0.c2, rt0.c4, rt0.c3, rt0.c1, rt0.c0, v0.c1, v0.c0, t0.c0, rt0.c5, v0.c2 FROM v0, rt0, t0 WHERE (((((((((((((CAST(v0.c1 AS BLOB))AND((- (rt0.c2)))))OR(((rt0.c0) BETWEEN (rt0.c5) AND (rt0.c3)))))AND(CASE WHEN v0.c1 THEN t0.c0 ELSE rt0.c6 END)))OR(((v0.c0)<(rt0.c3)))))AND(((((v0.c2)OR(rt0.c5)))AND(rt0.c3)))))AND(((v0.c0) BETWEEN (rt0.c0) AND (rt0.c5))))) UNION ALL SELECT ALL rt0.c2, rt0.c4, rt0.c3, rt0.c1, rt0.c0, v0.c1, v0.c0, t0.c0, rt0.c5, v0.c2 FROM v0, rt0, t0 WHERE ((NOT (((((((((((((CAST(v0.c1 AS BLOB))AND((- (rt0.c2)))))OR(((rt0.c0) BETWEEN (rt0.c5) AND (rt0.c3)))))AND(CASE WHEN v0.c1 THEN t0.c0 ELSE rt0.c6 END)))OR(((v0.c0)<(rt0.c3)))))AND(((((v0.c2)OR(rt0.c5)))AND(rt0.c3)))))AND(((v0.c0) BETWEEN (rt0.c0) AND (rt0.c5))))))) UNION ALL SELECT rt0.c2, rt0.c4, rt0.c3, rt0.c1, rt0.c0, v0.c1, v0.c0, t0.c0, rt0.c5, v0.c2 FROM v0, rt0, t0 WHERE (((((((((((((((CAST(v0.c1 AS BLOB))AND((- (rt0.c2)))))OR(((rt0.c0) BETWEEN (rt0.c5) AND (rt0.c3)))))AND(CASE WHEN v0.c1 THEN t0.c0 ELSE rt0.c6 END)))OR(((v0.c0)<(rt0.c3)))))AND(((((v0.c2)OR(rt0.c5)))AND(rt0.c3)))))AND(((v0.c0) BETWEEN (rt0.c0) AND (rt0.c5))))) ISNULL));
SELECT ALL rt0.c2, rt0.c4, rt0.c3, rt0.c1, rt0.c0, v0.c1, v0.c0, t0.c0, rt0.c5, v0.c2 FROM v0, rt0, t0;
SELECT DISTINCT * FROM v0, t0;
SELECT DISTINCT * FROM v0, t0 WHERE ((((((((v0.c2)OR(t0.c0)))AND(v0.c1)), RTRIM(v0.c2), x'79ff'))>=(((- (v0.c0)), ((((t0.c0)OR(t0.c0)))AND(v0.c1)), (((v0.c1)) NOT BETWEEN (('e9')) AND ((NULL))))))) UNION SELECT DISTINCT * FROM v0 NOT INDEXED, t0 WHERE ((NOT ((((((((v0.c2)OR(t0.c0)))AND(v0.c1)), RTRIM(v0.c2), x'79ff'))>=(((- (v0.c0)), ((((t0.c0)OR(t0.c0)))AND(v0.c1)), (((v0.c1)) NOT BETWEEN (('e9')) AND ((NULL))))))))) UNION SELECT DISTINCT * FROM v0, t0 WHERE ((((((((((v0.c2)OR(t0.c0)))AND(v0.c1)), RTRIM(v0.c2), x'79ff'))>=(((- (v0.c0)), ((((t0.c0)OR(t0.c0)))AND(v0.c1)), (((v0.c1)) NOT BETWEEN (('e9')) AND ((NULL))))))) ISNULL));
SELECT DISTINCT * FROM v0, t0;
SELECT v0.c1, v0.c0 FROM v0 GROUP BY v0.c1, v0.c0;
SELECT v0.c1, v0.c0 FROM v0 WHERE (((((v0.c0)||(v0.c0))) NOT BETWEEN (((v0.c0)+(v0.c2))) AND (((v0.c2) IS TRUE)))) GROUP BY v0.c1, v0.c0 UNION SELECT v0.c1, v0.c0 FROM v0 WHERE ((NOT (((((v0.c0)||(v0.c0))) NOT BETWEEN (((v0.c0)+(v0.c2))) AND (((v0.c2) IS TRUE)))))) GROUP BY v0.c1, v0.c0 UNION SELECT v0.c1, v0.c0 FROM v0 WHERE (((((((v0.c0)||(v0.c0))) NOT BETWEEN (((v0.c0)+(v0.c2))) AND (((v0.c2) IS TRUE)))) ISNULL)) GROUP BY v0.c1, v0.c0;
SELECT v0.c1, v0.c0 FROM v0 GROUP BY v0.c1, v0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING COUNT(*) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING COUNT(*) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT * FROM v0 CROSS JOIN rt0 ON ((NULL) NOT BETWEEN (((((v0.c0)AND('-1368280592')))AND(rt0.c4))) AND (CAST(rt0.c2 AS TEXT)));
SELECT ALL * FROM v0 CROSS JOIN rt0 ON ((NULL) NOT BETWEEN (((((v0.c0)AND('-1368280592')))AND(rt0.c4))) AND (CAST(rt0.c2 AS TEXT))) WHERE (CASE WHEN CASE WHEN 0X74185429 THEN 0.14354432218447477 END THEN ((0.8612026864803738)||(rt0.c3)) END) UNION ALL SELECT * FROM v0 CROSS JOIN rt0 ON ((NULL) NOT BETWEEN (((((v0.c0)AND('-1368280592')))AND(rt0.c4))) AND (CAST(rt0.c2 AS TEXT))) WHERE ((NOT (CASE WHEN CASE WHEN 0x74185429 THEN 0.14354432218447477 END THEN ((0.8612026864803738)||(rt0.c3)) END))) UNION ALL SELECT ALL * FROM v0 CROSS JOIN rt0 ON ((NULL) NOT BETWEEN (((((v0.c0)AND('-1368280592')))AND(rt0.c4))) AND (CAST(rt0.c2 AS TEXT))) WHERE (((CASE WHEN CASE WHEN 0x74185429 THEN 0.14354432218447477 END THEN ((0.8612026864803738)||(rt0.c3)) END) ISNULL));
SELECT * FROM v0 CROSS JOIN rt0 ON ((NULL) NOT BETWEEN (((((v0.c0)AND('-1368280592')))AND(rt0.c4))) AND (CAST(rt0.c2 AS TEXT)));
SELECT DISTINCT * FROM v0 INNER JOIN t0 ON t0.c0 INNER JOIN rt0 ON (((((rt0.c0) IS FALSE)))=((v0.c0 COLLATE RTRIM)));
SELECT DISTINCT * FROM v0 INNER JOIN t0 ON t0.c0 INNER JOIN rt0 ON (((((rt0.c0) IS FALSE)))=((v0.c0 COLLATE RTRIM))) WHERE (CAST(((t0.c0) BETWEEN (rt0.c4) AND (rt0.c0)) AS TEXT)) UNION SELECT DISTINCT * FROM v0 INNER JOIN t0 ON t0.c0 INNER JOIN rt0 ON (((((rt0.c0) IS FALSE)))=((v0.c0 COLLATE RTRIM))) WHERE ((NOT (CAST(((t0.c0) BETWEEN (rt0.c4) AND (rt0.c0)) AS TEXT)))) UNION SELECT DISTINCT * FROM v0 INNER JOIN t0 ON t0.c0 INNER JOIN rt0 ON (((((rt0.c0) IS FALSE)))==((v0.c0 COLLATE RTRIM))) WHERE (((CAST(((t0.c0) BETWEEN (rt0.c4) AND (rt0.c0)) AS TEXT)) ISNULL));
SELECT DISTINCT * FROM v0 INNER JOIN t0 ON t0.c0 INNER JOIN rt0 ON (((((rt0.c0) IS FALSE)))=((v0.c0 COLLATE RTRIM)));
SELECT rt0.c2, rt0.c1, rt0.c0, rt0.c5, t0.c0, v0.c0, rt0.c4 FROM t0 FULL OUTER JOIN v0 ON ((((rt0.c4)<=(rt0.c2)))IS NOT(-1.094114122E9)) LEFT OUTER JOIN rt0 ON ((CAST(rt0.c6 AS INTEGER)) ISNULL) GROUP BY rt0.c2, rt0.c1, rt0.c0, rt0.c5, t0.c0, v0.c0, rt0.c4;
SELECT ALL rt0.c3, v0.c0, v0.c1 FROM rt0, v0, t0 GROUP BY rt0.c3, v0.c0, v0.c1;
SELECT ALL rt0.c3, v0.c0, v0.c1 FROM rt0, v0, t0 GROUP BY rt0.c3, v0.c0, v0.c1 HAVING CAST(AVG(rt0.c6) AS TEXT) UNION ALL SELECT rt0.c3, v0.c0, v0.c1 FROM rt0, v0, t0 GROUP BY rt0.c3, v0.c0, v0.c1 HAVING (NOT (CAST(AVG(rt0.c6) AS TEXT))) UNION ALL SELECT rt0.c3, v0.c0, v0.c1 FROM rt0, v0, t0 GROUP BY rt0.c3, v0.c0, v0.c1 HAVING ((CAST(AVG(rt0.c6) AS TEXT)) ISNULL);
SELECT ALL rt0.c3, v0.c0, v0.c1 FROM rt0, v0, t0 GROUP BY rt0.c3, v0.c0, v0.c1;
SELECT ALL rt0.c3, v0.c0, v0.c1 FROM rt0, v0, t0 GROUP BY rt0.c3, v0.c0, v0.c1 HAVING CAST(AVG(rt0.c6) AS TEXT) UNION ALL SELECT rt0.c3, v0.c0, v0.c1 FROM rt0, v0, t0 GROUP BY rt0.c3, v0.c0, v0.c1 HAVING (NOT (CAST(AVG(rt0.c6) AS TEXT))) UNION ALL SELECT rt0.c3, v0.c0, v0.c1 FROM rt0, v0, t0 GROUP BY rt0.c3, v0.c0, v0.c1 HAVING ((CAST(AVG(rt0.c6) AS TEXT)) ISNULL);
SELECT ALL rt0.c3, v0.c0, v0.c1 FROM rt0, v0, t0 GROUP BY rt0.c3, v0.c0, v0.c1;
SELECT MIN((+ (((rt0.c4)%(v0.c0))))) FROM v0, rt0, t0;
SELECT ALL * FROM v0, rt0, t0;
SELECT ALL * FROM v0, rt0, t0 WHERE (((t0.c0) ISNULL) COLLATE NOCASE) UNION ALL SELECT * FROM v0, rt0, t0 WHERE ((NOT (((t0.c0) ISNULL) COLLATE NOCASE))) UNION ALL SELECT ALL * FROM v0, rt0, t0 WHERE (((((t0.c0) ISNULL) COLLATE NOCASE) ISNULL));
SELECT ALL * FROM v0, rt0, t0;
SELECT DISTINCT * FROM rt0 NOT INDEXED;
SELECT DISTINCT * FROM rt0 WHERE (rt0.c6) UNION SELECT DISTINCT * FROM rt0 NOT INDEXED WHERE ((NOT (rt0.c6))) UNION SELECT DISTINCT * FROM rt0 WHERE (((rt0.c6) ISNULL));
SELECT DISTINCT * FROM rt0 NOT INDEXED;
SELECT ALL v0.c1, v0.c2, v0.c0 FROM v0 GROUP BY v0.c1, v0.c2, v0.c0;
SELECT ALL v0.c1, v0.c2, v0.c0 FROM v0 WHERE (((((v0.c1, v0.c0, v0.c2, v0.c2, x'')) BETWEEN ((v0.c1, v0.c0, v0.c1, v0.c0, v0.c2)) AND ((v0.c2, v0.c0, v0.c1, v0.c1, '308826477'))) IN ())) GROUP BY v0.c1, v0.c2, v0.c0 UNION SELECT v0.c1, v0.c2, v0.c0 FROM v0 WHERE ((NOT (((((v0.c1, v0.c0, v0.c2, v0.c2, x'')) BETWEEN ((v0.c1, v0.c0, v0.c1, v0.c0, v0.c2)) AND ((v0.c2, v0.c0, v0.c1, v0.c1, '308826477'))) IN ())))) GROUP BY v0.c1, v0.c2, v0.c0 UNION SELECT ALL v0.c1, v0.c2, v0.c0 FROM v0 WHERE (((((((v0.c1, v0.c0, v0.c2, v0.c2, x'')) BETWEEN ((v0.c1, v0.c0, v0.c1, v0.c0, v0.c2)) AND ((v0.c2, v0.c0, v0.c1, v0.c1, '308826477'))) IN ())) ISNULL)) GROUP BY v0.c1, v0.c2, v0.c0;
SELECT ALL v0.c1, v0.c2, v0.c0 FROM v0 GROUP BY v0.c1, v0.c2, v0.c0;
SELECT v0.c2, v0.c0, rt0.c4 FROM v0, rt0 GROUP BY v0.c2, v0.c0, rt0.c4;
SELECT v0.c2, v0.c0, rt0.c4 FROM v0, rt0 GROUP BY v0.c2, v0.c0, rt0.c4 HAVING ((GROUP_CONCAT(MAX(rt0.c4))) NOT BETWEEN (COUNT(rt0.c1)) AND (((COUNT(rt0.c2)) NOT BETWEEN (MIN(rt0.c1)) AND (COUNT(*))))) UNION ALL SELECT ALL v0.c2, v0.c0, rt0.c4 FROM v0, rt0 GROUP BY v0.c2, v0.c0, rt0.c4 HAVING (NOT (((GROUP_CONCAT(MAX(rt0.c4))) NOT BETWEEN (COUNT(rt0.c1)) AND (((COUNT(rt0.c2)) NOT BETWEEN (MIN(rt0.c1)) AND (COUNT(*))))))) UNION ALL SELECT ALL v0.c2, v0.c0, rt0.c4 FROM v0, rt0 GROUP BY v0.c2, v0.c0, rt0.c4 HAVING ((((GROUP_CONCAT(MAX(rt0.c4))) NOT BETWEEN (COUNT(rt0.c1)) AND (((COUNT(rt0.c2)) NOT BETWEEN (MIN(rt0.c1)) AND (COUNT(*)))))) ISNULL);
SELECT t0.c0 FROM t0;
SELECT t0.c0 FROM t0 WHERE ((((t0.c0)) NOT BETWEEN (((x'' IN ()))) AND (((~ (t0.c0)))))) UNION ALL SELECT t0.c0 FROM t0 WHERE ((NOT ((((t0.c0)) NOT BETWEEN (((x'' IN ()))) AND (((~ (t0.c0)))))))) UNION ALL SELECT t0.c0 FROM t0 WHERE ((((((t0.c0)) NOT BETWEEN (((x'' IN ()))) AND (((~ (t0.c0)))))) ISNULL));
SELECT t0.c0 FROM t0;
SELECT DISTINCT * FROM v0, t0 LEFT OUTER JOIN rt0 ON ((rt0.c1 COLLATE NOCASE) NOT BETWEEN ((('1498889589') IS TRUE)) AND ((NOT (v0.c1))));
SELECT DISTINCT * FROM v0, t0 LEFT OUTER JOIN rt0 ON ((rt0.c1 COLLATE NOCASE) NOT BETWEEN ((('1498889589') IS TRUE)) AND ((NOT (v0.c1)))) WHERE (((((((((((rt0.c2) BETWEEN (rt0.c6) AND (rt0.c0)))OR(((t0.c0)/(rt0.c2)))))OR((((rt0.c0))>((rt0.c6))))))OR(((rt0.c0)/(rt0.c4)))))AND(((v0.c1) NOTNULL)))) UNION SELECT DISTINCT * FROM v0, t0 LEFT OUTER JOIN rt0 ON ((rt0.c1 COLLATE NOCASE) NOT BETWEEN ((('1498889589') IS TRUE)) AND ((NOT (v0.c1)))) WHERE ((NOT (((((((((((rt0.c2) BETWEEN (rt0.c6) AND (rt0.c0)))OR(((t0.c0)/(rt0.c2)))))OR((((rt0.c0))>((rt0.c6))))))OR(((rt0.c0)/(rt0.c4)))))AND(((v0.c1) NOTNULL)))))) UNION SELECT DISTINCT * FROM v0, t0 LEFT OUTER JOIN rt0 ON ((rt0.c1 COLLATE NOCASE) NOT BETWEEN ((('1498889589') IS TRUE)) AND ((NOT (v0.c1)))) WHERE (((((((((((((rt0.c2) BETWEEN (rt0.c6) AND (rt0.c0)))OR(((t0.c0)/(rt0.c2)))))OR((((rt0.c0))>((rt0.c6))))))OR(((rt0.c0)/(rt0.c4)))))AND(((v0.c1) NOTNULL)))) ISNULL));
SELECT DISTINCT * FROM v0, t0 LEFT OUTER JOIN rt0 ON ((rt0.c1 COLLATE NOCASE) NOT BETWEEN ((('1498889589') IS TRUE)) AND ((NOT (v0.c1))));
SELECT ALL v0.c1, t0.c0, rt0.c1, rt0.c2, rt0.c5, v0.c2, rt0.c3, v0.c0 FROM rt0, t0 NOT INDEXED, v0 GROUP BY v0.c1, t0.c0, rt0.c1, rt0.c2, rt0.c5, v0.c2, rt0.c3, v0.c0;
SELECT ALL v0.c1, t0.c0, rt0.c1, rt0.c2, rt0.c5, v0.c2, rt0.c3, v0.c0 FROM rt0, t0, v0 WHERE (((((((((x'')OR((- (v0.c0)))))OR(CAST(rt0.c2 AS NUMERIC))))OR(((((((((v0.c0)AND(rt0.c2)))AND(rt0.c5)))OR('0.6481409788146181')))OR(v0.c0)))))OR(rt0.c5 COLLATE NOCASE))) GROUP BY v0.c1, t0.c0, rt0.c1, rt0.c2, rt0.c5, v0.c2, rt0.c3, v0.c0 UNION SELECT v0.c1, t0.c0, rt0.c1, rt0.c2, rt0.c5, v0.c2, rt0.c3, v0.c0 FROM rt0, t0, v0 WHERE ((NOT (((((((((x'')OR((- (v0.c0)))))OR(CAST(rt0.c2 AS NUMERIC))))OR(((((((((v0.c0)AND(rt0.c2)))AND(rt0.c5)))OR('0.6481409788146181')))OR(v0.c0)))))OR(rt0.c5 COLLATE NOCASE))))) GROUP BY v0.c1, t0.c0, rt0.c1, rt0.c2, rt0.c5, v0.c2, rt0.c3, v0.c0 UNION SELECT ALL v0.c1, t0.c0, rt0.c1, rt0.c2, rt0.c5, v0.c2, rt0.c3, v0.c0 FROM rt0, t0, v0 WHERE (((((((((((x'')OR((- (v0.c0)))))OR(CAST(rt0.c2 AS NUMERIC))))OR(((((((((v0.c0)AND(rt0.c2)))AND(rt0.c5)))OR('0.6481409788146181')))OR(v0.c0)))))OR(rt0.c5 COLLATE NOCASE))) ISNULL)) GROUP BY v0.c1, t0.c0, rt0.c1, rt0.c2, rt0.c5, v0.c2, rt0.c3, v0.c0;
SELECT ALL v0.c1, t0.c0, rt0.c1, rt0.c2, rt0.c5, v0.c2, rt0.c3, v0.c0 FROM rt0, t0 NOT INDEXED, v0 GROUP BY v0.c1, t0.c0, rt0.c1, rt0.c2, rt0.c5, v0.c2, rt0.c3, v0.c0;
SELECT ALL rt0.c5, v0.c0, v0.c2, rt0.c4, rt0.c6, rt0.c0, rt0.c2, rt0.c1, t0.c0, rt0.c3, v0.c1 FROM t0, v0 NATURAL JOIN rt0 GROUP BY rt0.c5, v0.c0, v0.c2, rt0.c4, rt0.c6, rt0.c0, rt0.c2, rt0.c1, t0.c0, rt0.c3, v0.c1;
SELECT rt0.c5, v0.c0, v0.c2, rt0.c4, rt0.c6, rt0.c0, rt0.c2, rt0.c1, t0.c0, rt0.c3, v0.c1 FROM t0, v0 NATURAL JOIN rt0 GROUP BY rt0.c5, v0.c0, v0.c2, rt0.c4, rt0.c6, rt0.c0, rt0.c2, rt0.c1, t0.c0, rt0.c3, v0.c1 HAVING COUNT(*) UNION ALL SELECT rt0.c5, v0.c0, v0.c2, rt0.c4, rt0.c6, rt0.c0, rt0.c2, rt0.c1, t0.c0, rt0.c3, v0.c1 FROM t0, v0 NATURAL JOIN rt0 GROUP BY rt0.c5, v0.c0, v0.c2, rt0.c4, rt0.c6, rt0.c0, rt0.c2, rt0.c1, t0.c0, rt0.c3, v0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c5, v0.c0, v0.c2, rt0.c4, rt0.c6, rt0.c0, rt0.c2, rt0.c1, t0.c0, rt0.c3, v0.c1 FROM t0, v0 NATURAL JOIN rt0 GROUP BY rt0.c5, v0.c0, v0.c2, rt0.c4, rt0.c6, rt0.c0, rt0.c2, rt0.c1, t0.c0, rt0.c3, v0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c5, v0.c0, v0.c2, rt0.c4, rt0.c6, rt0.c0, rt0.c2, rt0.c1, t0.c0, rt0.c3, v0.c1 FROM t0, v0 NATURAL JOIN rt0 GROUP BY rt0.c5, v0.c0, v0.c2, rt0.c4, rt0.c6, rt0.c0, rt0.c2, rt0.c1, t0.c0, rt0.c3, v0.c1;
SELECT rt0.c5, v0.c0, v0.c2, rt0.c4, rt0.c6, rt0.c0, rt0.c2, rt0.c1, t0.c0, rt0.c3, v0.c1 FROM t0, v0 NATURAL JOIN rt0 GROUP BY rt0.c5, v0.c0, v0.c2, rt0.c4, rt0.c6, rt0.c0, rt0.c2, rt0.c1, t0.c0, rt0.c3, v0.c1 HAVING COUNT(*) UNION ALL SELECT rt0.c5, v0.c0, v0.c2, rt0.c4, rt0.c6, rt0.c0, rt0.c2, rt0.c1, t0.c0, rt0.c3, v0.c1 FROM t0, v0 NATURAL JOIN rt0 GROUP BY rt0.c5, v0.c0, v0.c2, rt0.c4, rt0.c6, rt0.c0, rt0.c2, rt0.c1, t0.c0, rt0.c3, v0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c5, v0.c0, v0.c2, rt0.c4, rt0.c6, rt0.c0, rt0.c2, rt0.c1, t0.c0, rt0.c3, v0.c1 FROM t0, v0 NATURAL JOIN rt0 GROUP BY rt0.c5, v0.c0, v0.c2, rt0.c4, rt0.c6, rt0.c0, rt0.c2, rt0.c1, t0.c0, rt0.c3, v0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c5, v0.c0, v0.c2, rt0.c4, rt0.c6, rt0.c0, rt0.c2, rt0.c1, t0.c0, rt0.c3, v0.c1 FROM t0, v0 NATURAL JOIN rt0 GROUP BY rt0.c5, v0.c0, v0.c2, rt0.c4, rt0.c6, rt0.c0, rt0.c2, rt0.c1, t0.c0, rt0.c3, v0.c1;
SELECT rt0.c0, rt0.c2, rt0.c1, v0.c0, rt0.c6, v0.c1, rt0.c4, rt0.c3 FROM v0, rt0;
SELECT ALL rt0.c0, rt0.c2, rt0.c1, v0.c0, rt0.c6, v0.c1, rt0.c4, rt0.c3 FROM v0, rt0 WHERE (CAST(((rt0.c2) BETWEEN (x'') AND (rt0.c6)) AS TEXT)) UNION ALL SELECT rt0.c0, rt0.c2, rt0.c1, v0.c0, rt0.c6, v0.c1, rt0.c4, rt0.c3 FROM v0, rt0 WHERE ((NOT (CAST(((rt0.c2) BETWEEN (x'') AND (rt0.c6)) AS TEXT)))) UNION ALL SELECT ALL rt0.c0, rt0.c2, rt0.c1, v0.c0, rt0.c6, v0.c1, rt0.c4, rt0.c3 FROM v0, rt0 WHERE (((CAST(((rt0.c2) BETWEEN (x'') AND (rt0.c6)) AS TEXT)) ISNULL));
SELECT rt0.c0, rt0.c2, rt0.c1, v0.c0, rt0.c6, v0.c1, rt0.c4, rt0.c3 FROM v0, rt0;
SELECT DISTINCT v0.c1, v0.c0 FROM v0;
SELECT DISTINCT v0.c1, v0.c0 FROM v0 WHERE (((((((((json_insert(v0.c0, v0.c1, v0.c2))OR(v0.c0)))OR(v0.c2 COLLATE BINARY)))AND(ABS(x''))))AND(json_array_length(v0.c0, v0.c0)))) UNION SELECT DISTINCT v0.c1, v0.c0 FROM v0 WHERE ((NOT (((((((((json_insert(v0.c0, v0.c1, v0.c2))OR(v0.c0)))OR(v0.c2 COLLATE BINARY)))AND(ABS(x''))))AND(json_array_length(v0.c0, v0.c0)))))) UNION SELECT DISTINCT v0.c1, v0.c0 FROM v0 WHERE (((((((((((json_insert(v0.c0, v0.c1, v0.c2))OR(v0.c0)))OR(v0.c2 COLLATE BINARY)))AND(ABS(x''))))AND(json_array_length(v0.c0, v0.c0)))) ISNULL));
SELECT ALL v0.c1, v0.c0, t0.c0, v0.c2 FROM t0, v0 GROUP BY v0.c1, v0.c0, t0.c0, v0.c2;
SELECT v0.c1, v0.c0, t0.c0, v0.c2 FROM t0, v0 WHERE ((((v0.c2 IN ()))&(((v0.c0)>=(v0.c0))))) GROUP BY v0.c1, v0.c0, t0.c0, v0.c2 UNION SELECT ALL v0.c1, v0.c0, t0.c0, v0.c2 FROM t0, v0 WHERE ((NOT ((((v0.c2 IN ()))&(((v0.c0)>=(v0.c0))))))) GROUP BY v0.c1, v0.c0, t0.c0, v0.c2 UNION SELECT ALL v0.c1, v0.c0, t0.c0, v0.c2 FROM t0, v0 WHERE ((((((v0.c2 IN ()))&(((v0.c0)>=(v0.c0))))) ISNULL)) GROUP BY v0.c1, v0.c0, t0.c0, v0.c2;
SELECT ALL v0.c1, v0.c0, t0.c0, v0.c2 FROM t0, v0 GROUP BY v0.c1, v0.c0, t0.c0, v0.c2;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING TOTAL(0X7c3a23d8) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (TOTAL(0x7c3a23d8))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((TOTAL(0x7c3a23d8)) ISNULL);
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING TOTAL(0X7c3a23d8) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (TOTAL(0x7c3a23d8))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((TOTAL(0x7c3a23d8)) ISNULL);
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL rt0.c2, rt0.c3, rt0.c6, rt0.c4, rt0.c5, rt0.c0, rt0.c1, t0.c0 FROM rt0, t0 NOT INDEXED;
SELECT ALL rt0.c2, rt0.c3, rt0.c6, rt0.c4, rt0.c5, rt0.c0, rt0.c1, t0.c0 FROM rt0, t0 WHERE (((rt0.c4 IN (rt0.c3)) IN ())) UNION ALL SELECT rt0.c2, rt0.c3, rt0.c6, rt0.c4, rt0.c5, rt0.c0, rt0.c1, t0.c0 FROM rt0, t0 WHERE ((NOT (((rt0.c4 IN (rt0.c3)) IN ())))) UNION ALL SELECT rt0.c2, rt0.c3, rt0.c6, rt0.c4, rt0.c5, rt0.c0, rt0.c1, t0.c0 FROM rt0, t0 WHERE (((((rt0.c4 IN (rt0.c3)) IN ())) ISNULL));
SELECT ALL rt0.c2, rt0.c3, rt0.c6, rt0.c4, rt0.c5, rt0.c0, rt0.c1, t0.c0 FROM rt0, t0 NOT INDEXED;
SELECT DISTINCT * FROM v0, rt0, t0;
SELECT DISTINCT * FROM v0, rt0, t0 WHERE (CAST((((0.5193070171583545, v0.c2, t0.c0)) BETWEEN ((x'', v0.c1, rt0.c3)) AND ((rt0.c0, v0.c0, v0.c0))) AS TEXT)) UNION SELECT DISTINCT * FROM v0, rt0, t0 WHERE ((NOT (CAST((((0.5193070171583545, v0.c2, t0.c0)) BETWEEN ((x'', v0.c1, rt0.c3)) AND ((rt0.c0, v0.c0, v0.c0))) AS TEXT)))) UNION SELECT DISTINCT * FROM v0, rt0, t0 WHERE (((CAST((((0.5193070171583545, v0.c2, t0.c0)) BETWEEN ((x'', v0.c1, rt0.c3)) AND ((rt0.c0, v0.c0, v0.c0))) AS TEXT)) ISNULL));
SELECT DISTINCT * FROM v0, rt0, t0;
SELECT v0.c1, rt0.c0, rt0.c1, rt0.c6, rt0.c3, rt0.c2, rt0.c5, t0.c0, rt0.c4, v0.c0 FROM v0 LEFT OUTER JOIN rt0 ON ((CAST(v0.c1 AS TEXT)) IS TRUE) FULL OUTER JOIN t0 ON ((((((((((rt0.c3)OR(rt0.c2)))AND(rt0.c6)))OR(rt0.c3)))AND(0X2a38af47)))AND(((rt0.c3) NOTNULL))) GROUP BY v0.c1, rt0.c0, rt0.c1, rt0.c6, rt0.c3, rt0.c2, rt0.c5, t0.c0, rt0.c4, v0.c0;
SELECT ALL v0.c1, rt0.c0, rt0.c1, rt0.c6, rt0.c3, rt0.c2, rt0.c5, t0.c0, rt0.c4, v0.c0 FROM v0 LEFT OUTER JOIN rt0 ON ((CAST(v0.c1 AS TEXT)) IS TRUE) FULL OUTER JOIN t0 ON ((((((((((rt0.c3)OR(rt0.c2)))AND(rt0.c6)))OR(rt0.c3)))AND(0x2a38af47)))AND(((rt0.c3) NOTNULL))) WHERE ((((t0.c0))<=(((rt0.c6 IN ()))))) GROUP BY v0.c1, rt0.c0, rt0.c1, rt0.c6, rt0.c3, rt0.c2, rt0.c5, t0.c0, rt0.c4, v0.c0 UNION SELECT v0.c1, rt0.c0, rt0.c1, rt0.c6, rt0.c3, rt0.c2, rt0.c5, t0.c0, rt0.c4, v0.c0 FROM v0 LEFT OUTER JOIN rt0 ON ((CAST(v0.c1 AS TEXT)) IS TRUE) FULL OUTER JOIN t0 ON ((((((((((rt0.c3)OR(rt0.c2)))AND(rt0.c6)))OR(rt0.c3)))AND(0X2a38af47)))AND(((rt0.c3) NOTNULL))) WHERE ((NOT ((((t0.c0))<=(((rt0.c6 IN ()))))))) GROUP BY v0.c1, rt0.c0, rt0.c1, rt0.c6, rt0.c3, rt0.c2, rt0.c5, t0.c0, rt0.c4, v0.c0 UNION SELECT v0.c1, rt0.c0, rt0.c1, rt0.c6, rt0.c3, rt0.c2, rt0.c5, t0.c0, rt0.c4, v0.c0 FROM v0 LEFT OUTER JOIN rt0 ON ((CAST(v0.c1 AS TEXT)) IS TRUE) FULL OUTER JOIN t0 ON ((((((((((rt0.c3)OR(rt0.c2)))AND(rt0.c6)))OR(rt0.c3)))AND(0X2a38af47)))AND(((rt0.c3) NOTNULL))) WHERE ((((((t0.c0))<=(((rt0.c6 IN ()))))) ISNULL)) GROUP BY v0.c1, rt0.c0, rt0.c1, rt0.c6, rt0.c3, rt0.c2, rt0.c5, t0.c0, rt0.c4, v0.c0;
SELECT v0.c1, rt0.c0, rt0.c1, rt0.c6, rt0.c3, rt0.c2, rt0.c5, t0.c0, rt0.c4, v0.c0 FROM v0 LEFT OUTER JOIN rt0 ON ((CAST(v0.c1 AS TEXT)) IS TRUE) FULL OUTER JOIN t0 ON ((((((((((rt0.c3)OR(rt0.c2)))AND(rt0.c6)))OR(rt0.c3)))AND(0X2a38af47)))AND(((rt0.c3) NOTNULL))) GROUP BY v0.c1, rt0.c0, rt0.c1, rt0.c6, rt0.c3, rt0.c2, rt0.c5, t0.c0, rt0.c4, v0.c0;
SELECT ALL rt0.c6, rt0.c3, rt0.c2, v0.c2, rt0.c4, rt0.c5, rt0.c0, v0.c1, rt0.c1, v0.c0 FROM rt0, v0 GROUP BY rt0.c6, rt0.c3, rt0.c2, v0.c2, rt0.c4, rt0.c5, rt0.c0, v0.c1, rt0.c1, v0.c0;
SELECT ALL rt0.c6, rt0.c3, rt0.c2, v0.c2, rt0.c4, rt0.c5, rt0.c0, v0.c1, rt0.c1, v0.c0 FROM rt0, v0 GROUP BY rt0.c6, rt0.c3, rt0.c2, v0.c2, rt0.c4, rt0.c5, rt0.c0, v0.c1, rt0.c1, v0.c0 HAVING (((GROUP_CONCAT(v0.c1)))==((CASE WHEN rt0.c3 THEN rt0.c5 END))) UNION ALL SELECT ALL rt0.c6, rt0.c3, rt0.c2, v0.c2, rt0.c4, rt0.c5, rt0.c0, v0.c1, rt0.c1, v0.c0 FROM rt0, v0 GROUP BY rt0.c6, rt0.c3, rt0.c2, v0.c2, rt0.c4, rt0.c5, rt0.c0, v0.c1, rt0.c1, v0.c0 HAVING (NOT ((((GROUP_CONCAT(v0.c1)))==((CASE WHEN rt0.c3 THEN rt0.c5 END))))) UNION ALL SELECT ALL rt0.c6, rt0.c3, rt0.c2, v0.c2, rt0.c4, rt0.c5, rt0.c0, v0.c1, rt0.c1, v0.c0 FROM rt0, v0 GROUP BY rt0.c6, rt0.c3, rt0.c2, v0.c2, rt0.c4, rt0.c5, rt0.c0, v0.c1, rt0.c1, v0.c0 HAVING (((((GROUP_CONCAT(v0.c1)))==((CASE WHEN rt0.c3 THEN rt0.c5 END)))) ISNULL);
SELECT ALL rt0.c6, rt0.c3, rt0.c2, v0.c2, rt0.c4, rt0.c5, rt0.c0, v0.c1, rt0.c1, v0.c0 FROM rt0, v0 GROUP BY rt0.c6, rt0.c3, rt0.c2, v0.c2, rt0.c4, rt0.c5, rt0.c0, v0.c1, rt0.c1, v0.c0;
SELECT ALL rt0.c6, rt0.c3, rt0.c2, v0.c2, rt0.c4, rt0.c5, rt0.c0, v0.c1, rt0.c1, v0.c0 FROM rt0, v0 GROUP BY rt0.c6, rt0.c3, rt0.c2, v0.c2, rt0.c4, rt0.c5, rt0.c0, v0.c1, rt0.c1, v0.c0 HAVING (((GROUP_CONCAT(v0.c1)))==((CASE WHEN rt0.c3 THEN rt0.c5 END))) UNION ALL SELECT ALL rt0.c6, rt0.c3, rt0.c2, v0.c2, rt0.c4, rt0.c5, rt0.c0, v0.c1, rt0.c1, v0.c0 FROM rt0, v0 GROUP BY rt0.c6, rt0.c3, rt0.c2, v0.c2, rt0.c4, rt0.c5, rt0.c0, v0.c1, rt0.c1, v0.c0 HAVING (NOT ((((GROUP_CONCAT(v0.c1)))==((CASE WHEN rt0.c3 THEN rt0.c5 END))))) UNION ALL SELECT ALL rt0.c6, rt0.c3, rt0.c2, v0.c2, rt0.c4, rt0.c5, rt0.c0, v0.c1, rt0.c1, v0.c0 FROM rt0, v0 GROUP BY rt0.c6, rt0.c3, rt0.c2, v0.c2, rt0.c4, rt0.c5, rt0.c0, v0.c1, rt0.c1, v0.c0 HAVING (((((GROUP_CONCAT(v0.c1)))==((CASE WHEN rt0.c3 THEN rt0.c5 END)))) ISNULL);
SELECT ALL rt0.c6, rt0.c3, rt0.c2, v0.c2, rt0.c4, rt0.c5, rt0.c0, v0.c1, rt0.c1, v0.c0 FROM rt0, v0 GROUP BY rt0.c6, rt0.c3, rt0.c2, v0.c2, rt0.c4, rt0.c5, rt0.c0, v0.c1, rt0.c1, v0.c0;
SELECT * FROM rt0, t0;
SELECT * FROM rt0, t0 WHERE (((((rt0.c1)*(t0.c0))) NOT BETWEEN (((rt0.c2) NOT NULL)) AND (((((rt0.c6)AND(rt0.c3)))AND(rt0.c0))))) UNION ALL SELECT * FROM rt0, t0 WHERE ((NOT (((((rt0.c1)*(t0.c0))) NOT BETWEEN (((rt0.c2) NOT NULL)) AND (((((rt0.c6)AND(rt0.c3)))AND(rt0.c0))))))) UNION ALL SELECT * FROM rt0, t0 WHERE (((((((rt0.c1)*(t0.c0))) NOT BETWEEN (((rt0.c2) NOT NULL)) AND (((((rt0.c6)AND(rt0.c3)))AND(rt0.c0))))) ISNULL));
SELECT * FROM rt0, t0;
SELECT DISTINCT * FROM v0, rt0;
SELECT DISTINCT * FROM v0, rt0 WHERE ('-777332348') UNION SELECT DISTINCT * FROM v0, rt0 NOT INDEXED WHERE ((NOT ('-777332348'))) UNION SELECT DISTINCT * FROM v0, rt0 WHERE ((('-777332348') ISNULL));
SELECT DISTINCT * FROM v0, rt0;
SELECT ALL v0.c0, v0.c2, v0.c1 FROM v0 GROUP BY v0.c0, v0.c2, v0.c1;
SELECT ALL v0.c0, v0.c2, v0.c1 FROM v0 WHERE (((CAST(v0.c0 AS BLOB))/(((v0.c0) IS TRUE)))) GROUP BY v0.c0, v0.c2, v0.c1 UNION SELECT v0.c0, v0.c2, v0.c1 FROM v0 WHERE ((NOT (((CAST(v0.c0 AS BLOB))/(((v0.c0) IS TRUE)))))) GROUP BY v0.c0, v0.c2, v0.c1 UNION SELECT ALL v0.c0, v0.c2, v0.c1 FROM v0 WHERE (((((CAST(v0.c0 AS BLOB))/(((v0.c0) IS TRUE)))) ISNULL)) GROUP BY v0.c0, v0.c2, v0.c1;
SELECT ALL v0.c0, v0.c2, v0.c1 FROM v0 GROUP BY v0.c0, v0.c2, v0.c1;
SELECT ALL rt0.c3, rt0.c2, v0.c2, rt0.c1, rt0.c0, v0.c1, rt0.c6, v0.c0, rt0.c4, rt0.c5 FROM rt0, v0 GROUP BY rt0.c3, rt0.c2, v0.c2, rt0.c1, rt0.c0, v0.c1, rt0.c6, v0.c0, rt0.c4, rt0.c5;
SELECT rt0.c3, rt0.c2, v0.c2, rt0.c1, rt0.c0, v0.c1, rt0.c6, v0.c0, rt0.c4, rt0.c5 FROM rt0, v0 GROUP BY rt0.c3, rt0.c2, v0.c2, rt0.c1, rt0.c0, v0.c1, rt0.c6, v0.c0, rt0.c4, rt0.c5 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c3, rt0.c2, v0.c2, rt0.c1, rt0.c0, v0.c1, rt0.c6, v0.c0, rt0.c4, rt0.c5 FROM rt0, v0 GROUP BY rt0.c3, rt0.c2, v0.c2, rt0.c1, rt0.c0, v0.c1, rt0.c6, v0.c0, rt0.c4, rt0.c5 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c3, rt0.c2, v0.c2, rt0.c1, rt0.c0, v0.c1, rt0.c6, v0.c0, rt0.c4, rt0.c5 FROM rt0, v0 GROUP BY rt0.c3, rt0.c2, v0.c2, rt0.c1, rt0.c0, v0.c1, rt0.c6, v0.c0, rt0.c4, rt0.c5 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c3, rt0.c2, v0.c2, rt0.c1, rt0.c0, v0.c1, rt0.c6, v0.c0, rt0.c4, rt0.c5 FROM rt0, v0 GROUP BY rt0.c3, rt0.c2, v0.c2, rt0.c1, rt0.c0, v0.c1, rt0.c6, v0.c0, rt0.c4, rt0.c5;
SELECT rt0.c3, rt0.c2, v0.c2, rt0.c1, rt0.c0, v0.c1, rt0.c6, v0.c0, rt0.c4, rt0.c5 FROM rt0, v0 GROUP BY rt0.c3, rt0.c2, v0.c2, rt0.c1, rt0.c0, v0.c1, rt0.c6, v0.c0, rt0.c4, rt0.c5 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c3, rt0.c2, v0.c2, rt0.c1, rt0.c0, v0.c1, rt0.c6, v0.c0, rt0.c4, rt0.c5 FROM rt0, v0 GROUP BY rt0.c3, rt0.c2, v0.c2, rt0.c1, rt0.c0, v0.c1, rt0.c6, v0.c0, rt0.c4, rt0.c5 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c3, rt0.c2, v0.c2, rt0.c1, rt0.c0, v0.c1, rt0.c6, v0.c0, rt0.c4, rt0.c5 FROM rt0, v0 GROUP BY rt0.c3, rt0.c2, v0.c2, rt0.c1, rt0.c0, v0.c1, rt0.c6, v0.c0, rt0.c4, rt0.c5 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c3, rt0.c2, v0.c2, rt0.c1, rt0.c0, v0.c1, rt0.c6, v0.c0, rt0.c4, rt0.c5 FROM rt0, v0 GROUP BY rt0.c3, rt0.c2, v0.c2, rt0.c1, rt0.c0, v0.c1, rt0.c6, v0.c0, rt0.c4, rt0.c5;
SELECT ALL * FROM v0;
SELECT * FROM v0 WHERE (((((v0.c1 COLLATE RTRIM)AND(CAST(v0.c2 AS BLOB))))AND(((v0.c0)>>(v0.c1))))) UNION ALL SELECT * FROM v0 WHERE ((NOT (((((v0.c1 COLLATE RTRIM)AND(CAST(v0.c2 AS BLOB))))AND(((v0.c0)>>(v0.c1))))))) UNION ALL SELECT ALL * FROM v0 WHERE (((((((v0.c1 COLLATE RTRIM)AND(CAST(v0.c2 AS BLOB))))AND(((v0.c0)>>(v0.c1))))) ISNULL));
SELECT ALL * FROM v0;
SELECT DISTINCT rt0.c0, rt0.c3, rt0.c5, rt0.c1, rt0.c6, rt0.c4, rt0.c2, t0.c0 FROM t0, rt0;
SELECT DISTINCT rt0.c0, rt0.c3, rt0.c5, rt0.c1, rt0.c6, rt0.c4, rt0.c2, t0.c0 FROM t0, rt0 WHERE ((NOT ((- (rt0.c1))))) UNION SELECT DISTINCT rt0.c0, rt0.c3, rt0.c5, rt0.c1, rt0.c6, rt0.c4, rt0.c2, t0.c0 FROM t0, rt0 WHERE ((NOT ((NOT ((- (rt0.c1))))))) UNION SELECT DISTINCT rt0.c0, rt0.c3, rt0.c5, rt0.c1, rt0.c6, rt0.c4, rt0.c2, t0.c0 FROM t0, rt0 WHERE ((((NOT ((- (rt0.c1))))) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c3, rt0.c5, rt0.c1, rt0.c6, rt0.c4, rt0.c2, t0.c0 FROM t0, rt0;
SELECT rt0.c5, rt0.c0, rt0.c6, t0.c0, v0.c2, v0.c1, rt0.c4, rt0.c1, rt0.c2 FROM t0 LEFT OUTER JOIN rt0 ON ((t0.c0)/(rt0.c6)) INNER JOIN v0 ON (+ (json_array_length(rt0.c6, v0.c2))) GROUP BY rt0.c5, rt0.c0, rt0.c6, t0.c0, v0.c2, v0.c1, rt0.c4, rt0.c1, rt0.c2;
SELECT ALL rt0.c5, rt0.c0, rt0.c6, t0.c0, v0.c2, v0.c1, rt0.c4, rt0.c1, rt0.c2 FROM t0 LEFT OUTER JOIN rt0 ON ((t0.c0)/(rt0.c6)) INNER JOIN v0 ON (+ (json_array_length(rt0.c6, v0.c2))) WHERE ((NOT (rt0.c4))) GROUP BY rt0.c5, rt0.c0, rt0.c6, t0.c0, v0.c2, v0.c1, rt0.c4, rt0.c1, rt0.c2 UNION SELECT rt0.c5, rt0.c0, rt0.c6, t0.c0, v0.c2, v0.c1, rt0.c4, rt0.c1, rt0.c2 FROM t0 LEFT OUTER JOIN rt0 ON ((t0.c0)/(rt0.c6)) INNER JOIN v0 ON (+ (json_array_length(rt0.c6, v0.c2))) WHERE ((NOT ((NOT (rt0.c4))))) GROUP BY rt0.c5, rt0.c0, rt0.c6, t0.c0, v0.c2, v0.c1, rt0.c4, rt0.c1, rt0.c2 UNION SELECT rt0.c5, rt0.c0, rt0.c6, t0.c0, v0.c2, v0.c1, rt0.c4, rt0.c1, rt0.c2 FROM t0 LEFT OUTER JOIN rt0 ON ((t0.c0)/(rt0.c6)) INNER JOIN v0 ON (+ (json_array_length(rt0.c6, v0.c2))) WHERE ((((NOT (rt0.c4))) ISNULL)) GROUP BY rt0.c5, rt0.c0, rt0.c6, t0.c0, v0.c2, v0.c1, rt0.c4, rt0.c1, rt0.c2;
SELECT v0.c0 FROM t0, v0 GROUP BY v0.c0;
SELECT v0.c0 FROM t0, v0 GROUP BY v0.c0 HAVING CASE WHEN TOTAL(COUNT(v0.c0)) THEN COUNT(*) END COLLATE BINARY UNION ALL SELECT ALL v0.c0 FROM t0, v0 GROUP BY v0.c0 HAVING (NOT (CASE WHEN TOTAL(COUNT(v0.c0)) THEN COUNT(*) END COLLATE BINARY)) UNION ALL SELECT ALL v0.c0 FROM t0, v0 GROUP BY v0.c0 HAVING ((CASE WHEN TOTAL(COUNT(v0.c0)) THEN COUNT(*) END COLLATE BINARY) ISNULL);
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE (x'') UNION ALL SELECT * FROM rt0 WHERE ((NOT (x''))) UNION ALL SELECT * FROM rt0 WHERE (((x'') ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT * FROM t0, rt0, v0;
SELECT DISTINCT * FROM t0, rt0, v0 WHERE (CASE WHEN ((v0.c2)&(rt0.c3)) THEN 1.25090814E8 END) UNION SELECT DISTINCT * FROM t0, rt0, v0 WHERE ((NOT (CASE WHEN ((v0.c2)&(rt0.c3)) THEN 1.25090814E8 END))) UNION SELECT DISTINCT * FROM t0, rt0, v0 WHERE (((CASE WHEN ((v0.c2)&(rt0.c3)) THEN 1.25090814E8 END) ISNULL));
SELECT DISTINCT * FROM t0, rt0, v0;
SELECT ALL v0.c0, rt0.c1, rt0.c0, rt0.c5, rt0.c3, v0.c1, rt0.c6, t0.c0 FROM rt0, v0, t0 GROUP BY v0.c0, rt0.c1, rt0.c0, rt0.c5, rt0.c3, v0.c1, rt0.c6, t0.c0;
SELECT v0.c0, rt0.c1, rt0.c0, rt0.c5, rt0.c3, v0.c1, rt0.c6, t0.c0 FROM rt0, v0, t0 WHERE (((((rt0.c3)|(v0.c0)))LIKE(v0.c2))) GROUP BY v0.c0, rt0.c1, rt0.c0, rt0.c5, rt0.c3, v0.c1, rt0.c6, t0.c0 UNION SELECT ALL v0.c0, rt0.c1, rt0.c0, rt0.c5, rt0.c3, v0.c1, rt0.c6, t0.c0 FROM rt0, v0, t0 WHERE ((NOT (((((rt0.c3)|(v0.c0)))LIKE(v0.c2))))) GROUP BY v0.c0, rt0.c1, rt0.c0, rt0.c5, rt0.c3, v0.c1, rt0.c6, t0.c0 UNION SELECT v0.c0, rt0.c1, rt0.c0, rt0.c5, rt0.c3, v0.c1, rt0.c6, t0.c0 FROM rt0, v0, t0 WHERE (((((((rt0.c3)|(v0.c0)))LIKE(v0.c2))) ISNULL)) GROUP BY v0.c0, rt0.c1, rt0.c0, rt0.c5, rt0.c3, v0.c1, rt0.c6, t0.c0;
SELECT ALL v0.c0, rt0.c1, rt0.c0, rt0.c5, rt0.c3, v0.c1, rt0.c6, t0.c0 FROM rt0, v0, t0 GROUP BY v0.c0, rt0.c1, rt0.c0, rt0.c5, rt0.c3, v0.c1, rt0.c6, t0.c0;
SELECT ALL rt0.c1, v0.c0, rt0.c2, v0.c1, rt0.c3, rt0.c6, rt0.c5, rt0.c4, v0.c2, t0.c0, rt0.c0 FROM v0 LEFT OUTER JOIN t0 ON ((rt0.c2)/(json_object(rt0.c6, rt0.c4, v0.c0, rt0.c3))) RIGHT OUTER JOIN rt0 ON CAST((rt0.c2 IN ()) AS REAL) GROUP BY rt0.c1, v0.c0, rt0.c2, v0.c1, rt0.c3, rt0.c6, rt0.c5, rt0.c4, v0.c2, t0.c0, rt0.c0;
SELECT ALL * FROM t0, rt0, v0;
SELECT ALL * FROM t0, rt0, v0 WHERE (((v0.c2)||(v0.c0)) COLLATE BINARY) UNION ALL SELECT ALL * FROM t0, rt0, v0 WHERE ((NOT (((v0.c2)||(v0.c0)) COLLATE BINARY))) UNION ALL SELECT ALL * FROM t0, rt0, v0 WHERE (((((v0.c2)||(v0.c0)) COLLATE BINARY) ISNULL));
SELECT ALL * FROM t0, rt0, v0;
SELECT DISTINCT rt0.c0, rt0.c2 FROM v0 INNER JOIN t0 ON (((((rt0.c3)>=(rt0.c0))))<(((((rt0.c1, v0.c2, v0.c0)) BETWEEN ((v0.c2, rt0.c1, t0.c0)) AND ((0.4398907765529504, -732070486, rt0.c6)))))) RIGHT OUTER JOIN rt0 ON ((((((((((rt0.c2)OR(t0.c0)))OR(rt0.c5)))OR(rt0.c0)))OR(rt0.c5))) NOT NULL);
SELECT ALL rt0.c2, t0.c0, rt0.c1, v0.c1, rt0.c6, v0.c2, v0.c0, rt0.c3, rt0.c5, rt0.c4 FROM rt0, t0, v0 GROUP BY rt0.c2, t0.c0, rt0.c1, v0.c1, rt0.c6, v0.c2, v0.c0, rt0.c3, rt0.c5, rt0.c4;
SELECT ALL rt0.c2, t0.c0, rt0.c1, v0.c1, rt0.c6, v0.c2, v0.c0, rt0.c3, rt0.c5, rt0.c4 FROM rt0, t0, v0 WHERE (CAST((NOT (v0.c2)) AS REAL)) GROUP BY rt0.c2, t0.c0, rt0.c1, v0.c1, rt0.c6, v0.c2, v0.c0, rt0.c3, rt0.c5, rt0.c4 UNION SELECT ALL rt0.c2, t0.c0, rt0.c1, v0.c1, rt0.c6, v0.c2, v0.c0, rt0.c3, rt0.c5, rt0.c4 FROM rt0, t0, v0 WHERE ((NOT (CAST((NOT (v0.c2)) AS REAL)))) GROUP BY rt0.c2, t0.c0, rt0.c1, v0.c1, rt0.c6, v0.c2, v0.c0, rt0.c3, rt0.c5, rt0.c4 UNION SELECT rt0.c2, t0.c0, rt0.c1, v0.c1, rt0.c6, v0.c2, v0.c0, rt0.c3, rt0.c5, rt0.c4 FROM rt0, t0, v0 WHERE (((CAST((NOT (v0.c2)) AS REAL)) ISNULL)) GROUP BY rt0.c2, t0.c0, rt0.c1, v0.c1, rt0.c6, v0.c2, v0.c0, rt0.c3, rt0.c5, rt0.c4;
SELECT ALL rt0.c2, t0.c0, rt0.c1, v0.c1, rt0.c6, v0.c2, v0.c0, rt0.c3, rt0.c5, rt0.c4 FROM rt0, t0, v0 GROUP BY rt0.c2, t0.c0, rt0.c1, v0.c1, rt0.c6, v0.c2, v0.c0, rt0.c3, rt0.c5, rt0.c4;
SELECT ALL rt0.c4, rt0.c6, rt0.c3, rt0.c0, rt0.c1, rt0.c2, rt0.c5 FROM rt0 GROUP BY rt0.c4, rt0.c6, rt0.c3, rt0.c0, rt0.c1, rt0.c2, rt0.c5;
SELECT rt0.c4, rt0.c6, rt0.c3, rt0.c0, rt0.c1, rt0.c2, rt0.c5 FROM rt0 GROUP BY rt0.c4, rt0.c6, rt0.c3, rt0.c0, rt0.c1, rt0.c2, rt0.c5 HAVING CASE WHEN ROUND(MAX(GROUP_CONCAT(COUNT(rt0.c3))), rt0.c2) THEN UNLIKELY(rt0.c2) END UNION ALL SELECT rt0.c4, rt0.c6, rt0.c3, rt0.c0, rt0.c1, rt0.c2, rt0.c5 FROM rt0 GROUP BY rt0.c4, rt0.c6, rt0.c3, rt0.c0, rt0.c1, rt0.c2, rt0.c5 HAVING (NOT (CASE WHEN ROUND(MAX(GROUP_CONCAT(COUNT(rt0.c3))), rt0.c2) THEN UNLIKELY(rt0.c2) END)) UNION ALL SELECT ALL rt0.c4, rt0.c6, rt0.c3, rt0.c0, rt0.c1, rt0.c2, rt0.c5 FROM rt0 GROUP BY rt0.c4, rt0.c6, rt0.c3, rt0.c0, rt0.c1, rt0.c2, rt0.c5 HAVING ((CASE WHEN ROUND(MAX(GROUP_CONCAT(COUNT(rt0.c3))), rt0.c2) THEN UNLIKELY(rt0.c2) END) ISNULL);
SELECT * FROM t0;
SELECT ALL * FROM t0 WHERE ((NOT (CAST(t0.c0 AS TEXT)))) UNION ALL SELECT * FROM t0 WHERE ((NOT ((NOT (CAST(t0.c0 AS TEXT)))))) UNION ALL SELECT * FROM t0 WHERE ((((NOT (CAST(t0.c0 AS TEXT)))) ISNULL));
SELECT * FROM t0;
SELECT DISTINCT v0.c2, v0.c1 FROM v0;
SELECT DISTINCT v0.c2, v0.c1 FROM v0 WHERE (((((((((((((0.8861013376677146)OR(0.844814088781221)))OR(((v0.c1) IS TRUE))))AND(v0.c2)))OR(((((v0.c1)OR(v0.c1)))OR(v0.c2)))))OR((~ (v0.c2)))))AND(((((v0.c1)AND(v0.c0)))AND(v0.c2))))) UNION SELECT DISTINCT v0.c2, v0.c1 FROM v0 WHERE ((NOT (((((((((((((0.8861013376677146)OR(0.844814088781221)))OR(((v0.c1) IS TRUE))))AND(v0.c2)))OR(((((v0.c1)OR(v0.c1)))OR(v0.c2)))))OR((~ (v0.c2)))))AND(((((v0.c1)AND(v0.c0)))AND(v0.c2))))))) UNION SELECT DISTINCT v0.c2, v0.c1 FROM v0 WHERE (((((((((((((((0.8861013376677146)OR(0.844814088781221)))OR(((v0.c1) IS TRUE))))AND(v0.c2)))OR(((((v0.c1)OR(v0.c1)))OR(v0.c2)))))OR((~ (v0.c2)))))AND(((((v0.c1)AND(v0.c0)))AND(v0.c2))))) ISNULL));
SELECT DISTINCT v0.c2, v0.c1 FROM v0;
SELECT ALL rt0.c6, rt0.c3, rt0.c1, rt0.c2, rt0.c5, v0.c0, v0.c2, rt0.c0 FROM v0, rt0 GROUP BY rt0.c6, rt0.c3, rt0.c1, rt0.c2, rt0.c5, v0.c0, v0.c2, rt0.c0;
SELECT rt0.c6, rt0.c3, rt0.c1, rt0.c2, rt0.c5, v0.c0, v0.c2, rt0.c0 FROM v0, rt0 WHERE ((((rt0.c4)) NOT BETWEEN ((((rt0.c1)/(rt0.c0)))) AND ((v0.c0)))) GROUP BY rt0.c6, rt0.c3, rt0.c1, rt0.c2, rt0.c5, v0.c0, v0.c2, rt0.c0 UNION SELECT ALL rt0.c6, rt0.c3, rt0.c1, rt0.c2, rt0.c5, v0.c0, v0.c2, rt0.c0 FROM v0, rt0 WHERE ((NOT ((((rt0.c4)) NOT BETWEEN ((((rt0.c1)/(rt0.c0)))) AND ((v0.c0)))))) GROUP BY rt0.c6, rt0.c3, rt0.c1, rt0.c2, rt0.c5, v0.c0, v0.c2, rt0.c0 UNION SELECT ALL rt0.c6, rt0.c3, rt0.c1, rt0.c2, rt0.c5, v0.c0, v0.c2, rt0.c0 FROM v0, rt0 WHERE ((((((rt0.c4)) NOT BETWEEN ((((rt0.c1)/(rt0.c0)))) AND ((v0.c0)))) ISNULL)) GROUP BY rt0.c6, rt0.c3, rt0.c1, rt0.c2, rt0.c5, v0.c0, v0.c2, rt0.c0;
SELECT ALL rt0.c6, rt0.c3, rt0.c1, rt0.c2, rt0.c5, v0.c0, v0.c2, rt0.c0 FROM v0, rt0 GROUP BY rt0.c6, rt0.c3, rt0.c1, rt0.c2, rt0.c5, v0.c0, v0.c2, rt0.c0;
SELECT ALL rt0.c5, rt0.c2, rt0.c4 FROM rt0, v0, t0 GROUP BY rt0.c5, rt0.c2, rt0.c4;
SELECT rt0.c5, rt0.c2, rt0.c4 FROM rt0, v0, t0 GROUP BY rt0.c5, rt0.c2, rt0.c4 HAVING CAST(rt0.c1 AS NUMERIC) UNION ALL SELECT ALL rt0.c5, rt0.c2, rt0.c4 FROM rt0, v0, t0 GROUP BY rt0.c5, rt0.c2, rt0.c4 HAVING (NOT (CAST(rt0.c1 AS NUMERIC))) UNION ALL SELECT rt0.c5, rt0.c2, rt0.c4 FROM rt0, v0, t0 GROUP BY rt0.c5, rt0.c2, rt0.c4 HAVING ((CAST(rt0.c1 AS NUMERIC)) ISNULL);
SELECT ALL rt0.c5, rt0.c2, rt0.c4 FROM rt0, v0, t0 GROUP BY rt0.c5, rt0.c2, rt0.c4;
SELECT rt0.c5, rt0.c2, rt0.c4 FROM rt0, v0, t0 GROUP BY rt0.c5, rt0.c2, rt0.c4 HAVING CAST(rt0.c1 AS NUMERIC) UNION ALL SELECT ALL rt0.c5, rt0.c2, rt0.c4 FROM rt0, v0, t0 GROUP BY rt0.c5, rt0.c2, rt0.c4 HAVING (NOT (CAST(rt0.c1 AS NUMERIC))) UNION ALL SELECT rt0.c5, rt0.c2, rt0.c4 FROM rt0, v0, t0 GROUP BY rt0.c5, rt0.c2, rt0.c4 HAVING ((CAST(rt0.c1 AS NUMERIC)) ISNULL);
SELECT ALL rt0.c5, rt0.c2, rt0.c4 FROM rt0, v0, t0 GROUP BY rt0.c5, rt0.c2, rt0.c4;
SELECT ALL * FROM v0 INNER JOIN t0 ON TRIM(DISTINCT CAST(v0.c1 AS BLOB));
SELECT ALL * FROM v0 INNER JOIN t0 ON TRIM(DISTINCT CAST(v0.c1 AS BLOB)) WHERE (CAST(((v0.c1) NOTNULL) AS TEXT)) UNION ALL SELECT ALL * FROM v0 INNER JOIN t0 ON TRIM(DISTINCT CAST(v0.c1 AS BLOB)) WHERE ((NOT (CAST(((v0.c1) NOTNULL) AS TEXT)))) UNION ALL SELECT * FROM v0 INNER JOIN t0 ON TRIM(DISTINCT CAST(v0.c1 AS BLOB)) WHERE (((CAST(((v0.c1) NOTNULL) AS TEXT)) ISNULL));
SELECT ALL * FROM v0 INNER JOIN t0 ON TRIM(DISTINCT CAST(v0.c1 AS BLOB));
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (json_insert(NULL, (((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))), (t0.c0 IN (t0.c0)))) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (json_insert(NULL, (((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))), (t0.c0 IN (t0.c0)))))) UNION SELECT DISTINCT * FROM t0 WHERE (((json_insert(NULL, (((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))), (t0.c0 IN (t0.c0)))) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT v0.c2 FROM v0, rt0 GROUP BY v0.c2;
SELECT ALL v0.c2 FROM v0, rt0 WHERE ((rt0.c4 COLLATE NOCASE IN (((rt0.c2)<=(rt0.c5))))) GROUP BY v0.c2 UNION SELECT ALL v0.c2 FROM v0, rt0 WHERE ((NOT ((rt0.c4 COLLATE NOCASE IN (((rt0.c2)<=(rt0.c5))))))) GROUP BY v0.c2 UNION SELECT v0.c2 FROM v0, rt0 WHERE ((((rt0.c4 COLLATE NOCASE IN (((rt0.c2)<=(rt0.c5))))) ISNULL)) GROUP BY v0.c2;
SELECT v0.c2 FROM v0, rt0 GROUP BY v0.c2;
SELECT ALL rt0.c4, rt0.c2, v0.c2, rt0.c3, v0.c0, rt0.c6, rt0.c1, rt0.c0 FROM v0 RIGHT OUTER JOIN rt0 ON rt0.c4 GROUP BY rt0.c4, rt0.c2, v0.c2, rt0.c3, v0.c0, rt0.c6, rt0.c1, rt0.c0;
SELECT ALL rt0.c4, rt0.c2, v0.c2, rt0.c3, v0.c0, rt0.c6, rt0.c1, rt0.c0 FROM v0 RIGHT OUTER JOIN rt0 ON rt0.c4 GROUP BY rt0.c4, rt0.c2, v0.c2, rt0.c3, v0.c0, rt0.c6, rt0.c1, rt0.c0 HAVING 'I,' UNION ALL SELECT rt0.c4, rt0.c2, v0.c2, rt0.c3, v0.c0, rt0.c6, rt0.c1, rt0.c0 FROM v0 RIGHT OUTER JOIN rt0 ON rt0.c4 GROUP BY rt0.c4, rt0.c2, v0.c2, rt0.c3, v0.c0, rt0.c6, rt0.c1, rt0.c0 HAVING (NOT ('I,')) UNION ALL SELECT ALL rt0.c4, rt0.c2, v0.c2, rt0.c3, v0.c0, rt0.c6, rt0.c1, rt0.c0 FROM v0 RIGHT OUTER JOIN rt0 ON rt0.c4 GROUP BY rt0.c4, rt0.c2, v0.c2, rt0.c3, v0.c0, rt0.c6, rt0.c1, rt0.c0 HAVING (('I,') ISNULL);
SELECT ALL rt0.c4, rt0.c2, v0.c2, rt0.c3, v0.c0, rt0.c6, rt0.c1, rt0.c0 FROM v0 RIGHT OUTER JOIN rt0 ON rt0.c4 GROUP BY rt0.c4, rt0.c2, v0.c2, rt0.c3, v0.c0, rt0.c6, rt0.c1, rt0.c0;
SELECT ALL rt0.c4, rt0.c2, v0.c2, rt0.c3, v0.c0, rt0.c6, rt0.c1, rt0.c0 FROM v0 RIGHT OUTER JOIN rt0 ON rt0.c4 GROUP BY rt0.c4, rt0.c2, v0.c2, rt0.c3, v0.c0, rt0.c6, rt0.c1, rt0.c0 HAVING 'I,' UNION ALL SELECT rt0.c4, rt0.c2, v0.c2, rt0.c3, v0.c0, rt0.c6, rt0.c1, rt0.c0 FROM v0 RIGHT OUTER JOIN rt0 ON rt0.c4 GROUP BY rt0.c4, rt0.c2, v0.c2, rt0.c3, v0.c0, rt0.c6, rt0.c1, rt0.c0 HAVING (NOT ('I,')) UNION ALL SELECT ALL rt0.c4, rt0.c2, v0.c2, rt0.c3, v0.c0, rt0.c6, rt0.c1, rt0.c0 FROM v0 RIGHT OUTER JOIN rt0 ON rt0.c4 GROUP BY rt0.c4, rt0.c2, v0.c2, rt0.c3, v0.c0, rt0.c6, rt0.c1, rt0.c0 HAVING (('I,') ISNULL);
SELECT ALL rt0.c4, rt0.c2, v0.c2, rt0.c3, v0.c0, rt0.c6, rt0.c1, rt0.c0 FROM v0 RIGHT OUTER JOIN rt0 ON rt0.c4 GROUP BY rt0.c4, rt0.c2, v0.c2, rt0.c3, v0.c0, rt0.c6, rt0.c1, rt0.c0;
SELECT * FROM t0, rt0;
SELECT ALL * FROM t0, rt0 WHERE (UNLIKELY((- (rt0.c2)))) UNION ALL SELECT ALL * FROM t0, rt0 WHERE ((NOT (UNLIKELY((- (rt0.c2)))))) UNION ALL SELECT * FROM t0, rt0 WHERE (((UNLIKELY((- (rt0.c2)))) ISNULL));
SELECT * FROM t0, rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((RTRIM(0.8903772076018552))AND((- (rt0.c0))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((RTRIM(0.8903772076018552))AND((- (rt0.c0))))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((RTRIM(0.8903772076018552))AND((- (rt0.c0))))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE (((CASE -1.474752236E9  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END) IS TRUE)) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT (((CASE -1.474752236E9  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END) IS TRUE)))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE (((((CASE -1.474752236E9  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END) IS TRUE)) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT v0.c2, rt0.c6, rt0.c1, rt0.c4, rt0.c5 FROM rt0, t0, v0 GROUP BY v0.c2, rt0.c6, rt0.c1, rt0.c4, rt0.c5;
SELECT v0.c2, rt0.c6, rt0.c1, rt0.c4, rt0.c5 FROM rt0, t0, v0 GROUP BY v0.c2, rt0.c6, rt0.c1, rt0.c4, rt0.c5 HAVING MAX(CASE WHEN rt0.c4 THEN MAX(COUNT(*)) END) UNION ALL SELECT ALL v0.c2, rt0.c6, rt0.c1, rt0.c4, rt0.c5 FROM rt0, t0, v0 GROUP BY v0.c2, rt0.c6, rt0.c1, rt0.c4, rt0.c5 HAVING (NOT (MAX(CASE WHEN rt0.c4 THEN MAX(COUNT(*)) END))) UNION ALL SELECT ALL v0.c2, rt0.c6, rt0.c1, rt0.c4, rt0.c5 FROM rt0, t0, v0 GROUP BY v0.c2, rt0.c6, rt0.c1, rt0.c4, rt0.c5 HAVING ((MAX(CASE WHEN rt0.c4 THEN MAX(COUNT(*)) END)) ISNULL);
SELECT ALL rt0.c5, rt0.c4, rt0.c2, rt0.c3, rt0.c0, rt0.c1, rt0.c6 FROM rt0;
SELECT rt0.c5, rt0.c4, rt0.c2, rt0.c3, rt0.c0, rt0.c1, rt0.c6 FROM rt0 WHERE (CASE ((rt0.c0) ISNULL)  WHEN ((((rt0.c6)AND(rt0.c4)))OR(rt0.c3)) THEN TYPEOF(DISTINCT rt0.c6) END) UNION ALL SELECT ALL rt0.c5, rt0.c4, rt0.c2, rt0.c3, rt0.c0, rt0.c1, rt0.c6 FROM rt0 WHERE ((NOT (CASE ((rt0.c0) ISNULL)  WHEN ((((rt0.c6)AND(rt0.c4)))OR(rt0.c3)) THEN TYPEOF(DISTINCT rt0.c6) END))) UNION ALL SELECT ALL rt0.c5, rt0.c4, rt0.c2, rt0.c3, rt0.c0, rt0.c1, rt0.c6 FROM rt0 WHERE (((CASE ((rt0.c0) ISNULL)  WHEN ((((rt0.c6)AND(rt0.c4)))OR(rt0.c3)) THEN TYPEOF(DISTINCT rt0.c6) END) ISNULL));
SELECT ALL rt0.c5, rt0.c4, rt0.c2, rt0.c3, rt0.c0, rt0.c1, rt0.c6 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c6, rt0.c0, rt0.c4, rt0.c3 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c6, rt0.c0, rt0.c4, rt0.c3 FROM rt0 WHERE ((- (((rt0.c1) NOT BETWEEN ('0.5770533422391645') AND (rt0.c3))))) UNION SELECT DISTINCT rt0.c2, rt0.c6, rt0.c0, rt0.c4, rt0.c3 FROM rt0 WHERE ((NOT ((- (((rt0.c1) NOT BETWEEN ('0.5770533422391645') AND (rt0.c3))))))) UNION SELECT DISTINCT rt0.c2, rt0.c6, rt0.c0, rt0.c4, rt0.c3 FROM rt0 WHERE ((((- (((rt0.c1) NOT BETWEEN ('0.5770533422391645') AND (rt0.c3))))) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c6, rt0.c0, rt0.c4, rt0.c3 FROM rt0;
SELECT rt0.c6, rt0.c5, rt0.c1, rt0.c2, rt0.c0, rt0.c3, rt0.c4 FROM rt0 GROUP BY rt0.c6, rt0.c5, rt0.c1, rt0.c2, rt0.c0, rt0.c3, rt0.c4;
SELECT rt0.c6, rt0.c5, rt0.c1, rt0.c2, rt0.c0, rt0.c3, rt0.c4 FROM rt0 WHERE (CASE WHEN (+ (rt0.c4)) THEN (+ (rt0.c5)) WHEN (NOT (rt0.c4)) THEN ((rt0.c1)IS NOT(rt0.c2)) WHEN (+ (rt0.c0)) THEN '-22070456' END) GROUP BY rt0.c6, rt0.c5, rt0.c1, rt0.c2, rt0.c0, rt0.c3, rt0.c4 UNION SELECT rt0.c6, rt0.c5, rt0.c1, rt0.c2, rt0.c0, rt0.c3, rt0.c4 FROM rt0 WHERE ((NOT (CASE WHEN (+ (rt0.c4)) THEN (+ (rt0.c5)) WHEN (NOT (rt0.c4)) THEN ((rt0.c1)IS NOT(rt0.c2)) WHEN (+ (rt0.c0)) THEN '-22070456' END))) GROUP BY rt0.c6, rt0.c5, rt0.c1, rt0.c2, rt0.c0, rt0.c3, rt0.c4 UNION SELECT ALL rt0.c6, rt0.c5, rt0.c1, rt0.c2, rt0.c0, rt0.c3, rt0.c4 FROM rt0 WHERE (((CASE WHEN (+ (rt0.c4)) THEN (+ (rt0.c5)) WHEN (NOT (rt0.c4)) THEN ((rt0.c1)IS NOT(rt0.c2)) WHEN (+ (rt0.c0)) THEN '-22070456' END) ISNULL)) GROUP BY rt0.c6, rt0.c5, rt0.c1, rt0.c2, rt0.c0, rt0.c3, rt0.c4;
SELECT rt0.c6, rt0.c5, rt0.c1, rt0.c2, rt0.c0, rt0.c3, rt0.c4 FROM rt0 GROUP BY rt0.c6, rt0.c5, rt0.c1, rt0.c2, rt0.c0, rt0.c3, rt0.c4;
SELECT ALL rt0.c4, rt0.c1, t0.c0, rt0.c2, rt0.c0 FROM t0, rt0 GROUP BY rt0.c4, rt0.c1, t0.c0, rt0.c2, rt0.c0;
SELECT rt0.c4, rt0.c1, t0.c0, rt0.c2, rt0.c0 FROM t0, rt0 GROUP BY rt0.c4, rt0.c1, t0.c0, rt0.c2, rt0.c0 HAVING TOTAL(AVG(rt0.c5)) UNION ALL SELECT rt0.c4, rt0.c1, t0.c0, rt0.c2, rt0.c0 FROM t0, rt0 GROUP BY rt0.c4, rt0.c1, t0.c0, rt0.c2, rt0.c0 HAVING (NOT (TOTAL(AVG(rt0.c5)))) UNION ALL SELECT rt0.c4, rt0.c1, t0.c0, rt0.c2, rt0.c0 FROM t0, rt0 GROUP BY rt0.c4, rt0.c1, t0.c0, rt0.c2, rt0.c0 HAVING ((TOTAL(AVG(rt0.c5))) ISNULL);
SELECT rt0.c2 FROM rt0;
SELECT ALL rt0.c2 FROM rt0 WHERE (((((rt0.c4)>>(rt0.c6)))+((((rt0.c6)) BETWEEN ((rt0.c4)) AND ((rt0.c5)))))) UNION ALL SELECT ALL rt0.c2 FROM rt0 WHERE ((NOT (((((rt0.c4)>>(rt0.c6)))+((((rt0.c6)) BETWEEN ((rt0.c4)) AND ((rt0.c5)))))))) UNION ALL SELECT ALL rt0.c2 FROM rt0 WHERE (((((((rt0.c4)>>(rt0.c6)))+((((rt0.c6)) BETWEEN ((rt0.c4)) AND ((rt0.c5)))))) ISNULL));
SELECT rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c4, rt0.c0, v0.c2, rt0.c1, rt0.c6, v0.c1, rt0.c3, rt0.c2, t0.c0, rt0.c5 FROM t0, rt0, v0;
SELECT DISTINCT rt0.c4, rt0.c0, v0.c2, rt0.c1, rt0.c6, v0.c1, rt0.c3, rt0.c2, t0.c0, rt0.c5 FROM t0, rt0, v0 WHERE (UPPER(DISTINCT x'')) UNION SELECT DISTINCT rt0.c4, rt0.c0, v0.c2, rt0.c1, rt0.c6, v0.c1, rt0.c3, rt0.c2, t0.c0, rt0.c5 FROM t0, rt0, v0 WHERE ((NOT (UPPER(DISTINCT x'')))) UNION SELECT DISTINCT rt0.c4, rt0.c0, v0.c2, rt0.c1, rt0.c6, v0.c1, rt0.c3, rt0.c2, t0.c0, rt0.c5 FROM t0, rt0, v0 WHERE (((UPPER(DISTINCT x'')) ISNULL));
SELECT DISTINCT rt0.c4, rt0.c0, v0.c2, rt0.c1, rt0.c6, v0.c1, rt0.c3, rt0.c2, t0.c0, rt0.c5 FROM t0, rt0, v0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 WHERE (t0.c0) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT (t0.c0))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE (((t0.c0) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL rt0.c3, rt0.c5, rt0.c6, rt0.c4, rt0.c0, rt0.c2, t0.c0, rt0.c1, v0.c1, v0.c0, v0.c2 FROM rt0 LEFT OUTER JOIN t0 ON ((CAST('-557063378' AS NUMERIC))IS(((rt0.c0) BETWEEN (rt0.c6) AND (rt0.c2)))) INNER JOIN v0 ON (+ (((((((((rt0.c0)AND(v0.c2)))OR(rt0.c0)))OR(rt0.c3)))OR(v0.c0)))) GROUP BY rt0.c3, rt0.c5, rt0.c6, rt0.c4, rt0.c0, rt0.c2, t0.c0, rt0.c1, v0.c1, v0.c0, v0.c2;
SELECT ALL rt0.c3, rt0.c5, rt0.c6, rt0.c4, rt0.c0, rt0.c2, t0.c0, rt0.c1, v0.c1, v0.c0, v0.c2 FROM rt0 LEFT OUTER JOIN t0 ON ((CAST('-557063378' AS NUMERIC))IS(((rt0.c0) BETWEEN (rt0.c6) AND (rt0.c2)))) INNER JOIN v0 ON (+ (((((((((rt0.c0)AND(v0.c2)))OR(rt0.c0)))OR(rt0.c3)))OR(v0.c0)))) GROUP BY rt0.c3, rt0.c5, rt0.c6, rt0.c4, rt0.c0, rt0.c2, t0.c0, rt0.c1, v0.c1, v0.c0, v0.c2 HAVING ABS(MAX(v0.c0)) UNION ALL SELECT rt0.c3, rt0.c5, rt0.c6, rt0.c4, rt0.c0, rt0.c2, t0.c0, rt0.c1, v0.c1, v0.c0, v0.c2 FROM rt0 LEFT OUTER JOIN t0 ON ((CAST('-557063378' AS NUMERIC))IS(((rt0.c0) BETWEEN (rt0.c6) AND (rt0.c2)))) INNER JOIN v0 ON (+ (((((((((rt0.c0)AND(v0.c2)))OR(rt0.c0)))OR(rt0.c3)))OR(v0.c0)))) GROUP BY rt0.c3, rt0.c5, rt0.c6, rt0.c4, rt0.c0, rt0.c2, t0.c0, rt0.c1, v0.c1, v0.c0, v0.c2 HAVING (NOT (ABS(MAX(v0.c0)))) UNION ALL SELECT rt0.c3, rt0.c5, rt0.c6, rt0.c4, rt0.c0, rt0.c2, t0.c0, rt0.c1, v0.c1, v0.c0, v0.c2 FROM rt0 LEFT OUTER JOIN t0 ON ((CAST('-557063378' AS NUMERIC))IS(((rt0.c0) BETWEEN (rt0.c6) AND (rt0.c2)))) INNER JOIN v0 ON (+ (((((((((rt0.c0)AND(v0.c2)))OR(rt0.c0)))OR(rt0.c3)))OR(v0.c0)))) GROUP BY rt0.c3, rt0.c5, rt0.c6, rt0.c4, rt0.c0, rt0.c2, t0.c0, rt0.c1, v0.c1, v0.c0, v0.c2 HAVING ((ABS(MAX(v0.c0))) ISNULL);
SELECT ALL rt0.c3, rt0.c5, rt0.c6, rt0.c4, rt0.c0, rt0.c2, t0.c0, rt0.c1, v0.c1, v0.c0, v0.c2 FROM rt0 LEFT OUTER JOIN t0 ON ((CAST('-557063378' AS NUMERIC))IS(((rt0.c0) BETWEEN (rt0.c6) AND (rt0.c2)))) INNER JOIN v0 ON (+ (((((((((rt0.c0)AND(v0.c2)))OR(rt0.c0)))OR(rt0.c3)))OR(v0.c0)))) GROUP BY rt0.c3, rt0.c5, rt0.c6, rt0.c4, rt0.c0, rt0.c2, t0.c0, rt0.c1, v0.c1, v0.c0, v0.c2;
SELECT ALL rt0.c3, rt0.c5, rt0.c6, rt0.c4, rt0.c0, rt0.c2, t0.c0, rt0.c1, v0.c1, v0.c0, v0.c2 FROM rt0 LEFT OUTER JOIN t0 ON ((CAST('-557063378' AS NUMERIC))IS(((rt0.c0) BETWEEN (rt0.c6) AND (rt0.c2)))) INNER JOIN v0 ON (+ (((((((((rt0.c0)AND(v0.c2)))OR(rt0.c0)))OR(rt0.c3)))OR(v0.c0)))) GROUP BY rt0.c3, rt0.c5, rt0.c6, rt0.c4, rt0.c0, rt0.c2, t0.c0, rt0.c1, v0.c1, v0.c0, v0.c2 HAVING ABS(MAX(v0.c0)) UNION ALL SELECT rt0.c3, rt0.c5, rt0.c6, rt0.c4, rt0.c0, rt0.c2, t0.c0, rt0.c1, v0.c1, v0.c0, v0.c2 FROM rt0 LEFT OUTER JOIN t0 ON ((CAST('-557063378' AS NUMERIC))IS(((rt0.c0) BETWEEN (rt0.c6) AND (rt0.c2)))) INNER JOIN v0 ON (+ (((((((((rt0.c0)AND(v0.c2)))OR(rt0.c0)))OR(rt0.c3)))OR(v0.c0)))) GROUP BY rt0.c3, rt0.c5, rt0.c6, rt0.c4, rt0.c0, rt0.c2, t0.c0, rt0.c1, v0.c1, v0.c0, v0.c2 HAVING (NOT (ABS(MAX(v0.c0)))) UNION ALL SELECT rt0.c3, rt0.c5, rt0.c6, rt0.c4, rt0.c0, rt0.c2, t0.c0, rt0.c1, v0.c1, v0.c0, v0.c2 FROM rt0 LEFT OUTER JOIN t0 ON ((CAST('-557063378' AS NUMERIC))IS(((rt0.c0) BETWEEN (rt0.c6) AND (rt0.c2)))) INNER JOIN v0 ON (+ (((((((((rt0.c0)AND(v0.c2)))OR(rt0.c0)))OR(rt0.c3)))OR(v0.c0)))) GROUP BY rt0.c3, rt0.c5, rt0.c6, rt0.c4, rt0.c0, rt0.c2, t0.c0, rt0.c1, v0.c1, v0.c0, v0.c2 HAVING ((ABS(MAX(v0.c0))) ISNULL);
SELECT ALL rt0.c3, rt0.c5, rt0.c6, rt0.c4, rt0.c0, rt0.c2, t0.c0, rt0.c1, v0.c1, v0.c0, v0.c2 FROM rt0 LEFT OUTER JOIN t0 ON ((CAST('-557063378' AS NUMERIC))IS(((rt0.c0) BETWEEN (rt0.c6) AND (rt0.c2)))) INNER JOIN v0 ON (+ (((((((((rt0.c0)AND(v0.c2)))OR(rt0.c0)))OR(rt0.c3)))OR(v0.c0)))) GROUP BY rt0.c3, rt0.c5, rt0.c6, rt0.c4, rt0.c0, rt0.c2, t0.c0, rt0.c1, v0.c1, v0.c0, v0.c2;
SELECT * FROM v0, t0;
SELECT * FROM v0, t0 WHERE (((((t0.c0)=(v0.c2)))OR(('FA9j_/' IN (v0.c1))))) UNION ALL SELECT * FROM v0, t0 WHERE ((NOT (((((t0.c0)=(v0.c2)))OR(('FA9j_/' IN (v0.c1))))))) UNION ALL SELECT ALL * FROM v0, t0 WHERE (((((((t0.c0)=(v0.c2)))OR(('FA9j_/' IN (v0.c1))))) ISNULL));
SELECT * FROM v0, t0;
SELECT DISTINCT * FROM t0, v0;
SELECT DISTINCT * FROM t0, v0 WHERE ((((((t0.c0)) BETWEEN ((v0.c1)) AND ((v0.c1)))) IS FALSE)) UNION SELECT DISTINCT * FROM t0, v0 WHERE ((NOT ((((((t0.c0)) BETWEEN ((v0.c1)) AND ((v0.c1)))) IS FALSE)))) UNION SELECT DISTINCT * FROM t0, v0 WHERE ((((((((t0.c0)) BETWEEN ((v0.c1)) AND ((v0.c1)))) IS FALSE)) ISNULL));
SELECT DISTINCT * FROM t0, v0;
SELECT t0.c0, v0.c1, v0.c2, v0.c0 FROM t0, v0 GROUP BY t0.c0, v0.c1, v0.c2, v0.c0;
SELECT ALL t0.c0, v0.c1, v0.c2, v0.c0 FROM t0, v0 WHERE ((~ (x''))) GROUP BY t0.c0, v0.c1, v0.c2, v0.c0 UNION SELECT ALL t0.c0, v0.c1, v0.c2, v0.c0 FROM t0, v0 WHERE ((NOT ((~ (x''))))) GROUP BY t0.c0, v0.c1, v0.c2, v0.c0 UNION SELECT ALL t0.c0, v0.c1, v0.c2, v0.c0 FROM t0, v0 WHERE ((((~ (x''))) ISNULL)) GROUP BY t0.c0, v0.c1, v0.c2, v0.c0;
SELECT t0.c0, v0.c1, v0.c2, v0.c0 FROM t0, v0 GROUP BY t0.c0, v0.c1, v0.c2, v0.c0;
SELECT v0.c0, v0.c2, v0.c1 FROM v0, t0 GROUP BY v0.c0, v0.c2, v0.c1;
SELECT v0.c0, v0.c2, v0.c1 FROM v0, t0 GROUP BY v0.c0, v0.c2, v0.c1 HAVING ((v0.c0 COLLATE BINARY) BETWEEN (CAST(AVG(TOTAL(v0.c2)) AS REAL)) AND (AVG(NULL))) UNION ALL SELECT v0.c0, v0.c2, v0.c1 FROM v0, t0 GROUP BY v0.c0, v0.c2, v0.c1 HAVING (NOT (((v0.c0 COLLATE BINARY) BETWEEN (CAST(AVG(TOTAL(v0.c2)) AS REAL)) AND (AVG(NULL))))) UNION ALL SELECT ALL v0.c0, v0.c2, v0.c1 FROM v0, t0 GROUP BY v0.c0, v0.c2, v0.c1 HAVING ((((v0.c0 COLLATE BINARY) BETWEEN (CAST(AVG(TOTAL(v0.c2)) AS REAL)) AND (AVG(NULL)))) ISNULL);
SELECT ALL * FROM t0;
SELECT * FROM t0 WHERE ((((x''))!=((CAST(t0.c0 AS REAL))))) UNION ALL SELECT ALL * FROM t0 WHERE ((NOT ((((x''))<>((CAST(t0.c0 AS REAL))))))) UNION ALL SELECT * FROM t0 WHERE ((((((x''))<>((CAST(t0.c0 AS REAL))))) ISNULL));
SELECT ALL * FROM t0;
SELECT DISTINCT t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0 WHERE (((((CASE t0.c0  WHEN t0.c0 THEN t0.c0 END)OR(CASE WHEN t0.c0 THEN t0.c0 END)))OR(t0.c0 COLLATE RTRIM))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((NOT (((((CASE t0.c0  WHEN t0.c0 THEN t0.c0 END)OR(CASE WHEN t0.c0 THEN t0.c0 END)))OR(t0.c0 COLLATE RTRIM))))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE (((((((CASE t0.c0  WHEN t0.c0 THEN t0.c0 END)OR(CASE WHEN t0.c0 THEN t0.c0 END)))OR(t0.c0 COLLATE RTRIM))) ISNULL));
SELECT DISTINCT t0.c0 FROM t0;
SELECT rt0.c5, rt0.c3, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c5, rt0.c3, rt0.c0, rt0.c1;
SELECT rt0.c5, rt0.c3, rt0.c0, rt0.c1 FROM rt0 WHERE (((((rt0.c5)>(rt0.c0))) NOT BETWEEN (((rt0.c2)-(rt0.c2))) AND (CAST(rt0.c3 AS TEXT)))) GROUP BY rt0.c5, rt0.c3, rt0.c0, rt0.c1 UNION SELECT rt0.c5, rt0.c3, rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (((((rt0.c5)>(rt0.c0))) NOT BETWEEN (((rt0.c2)-(rt0.c2))) AND (CAST(rt0.c3 AS TEXT)))))) GROUP BY rt0.c5, rt0.c3, rt0.c0, rt0.c1 UNION SELECT rt0.c5, rt0.c3, rt0.c0, rt0.c1 FROM rt0 WHERE (((((((rt0.c5)>(rt0.c0))) NOT BETWEEN (((rt0.c2)-(rt0.c2))) AND (CAST(rt0.c3 AS TEXT)))) ISNULL)) GROUP BY rt0.c5, rt0.c3, rt0.c0, rt0.c1;
SELECT rt0.c5, rt0.c3, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c5, rt0.c3, rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c4, rt0.c6, t0.c0, rt0.c3, rt0.c5 FROM rt0, t0 GROUP BY rt0.c0, rt0.c4, rt0.c6, t0.c0, rt0.c3, rt0.c5;
SELECT ALL rt0.c0, rt0.c4, rt0.c6, t0.c0, rt0.c3, rt0.c5 FROM rt0, t0 GROUP BY rt0.c0, rt0.c4, rt0.c6, t0.c0, rt0.c3, rt0.c5 HAVING COUNT(((((rt0.c4)AND(rt0.c4)))OR(COUNT(t0.c0)))) UNION ALL SELECT rt0.c0, rt0.c4, rt0.c6, t0.c0, rt0.c3, rt0.c5 FROM rt0, t0 GROUP BY rt0.c0, rt0.c4, rt0.c6, t0.c0, rt0.c3, rt0.c5 HAVING (NOT (COUNT(((((rt0.c4)AND(rt0.c4)))OR(COUNT(t0.c0)))))) UNION ALL SELECT ALL rt0.c0, rt0.c4, rt0.c6, t0.c0, rt0.c3, rt0.c5 FROM rt0, t0 GROUP BY rt0.c0, rt0.c4, rt0.c6, t0.c0, rt0.c3, rt0.c5 HAVING ((COUNT(((((rt0.c4)AND(rt0.c4)))OR(COUNT(t0.c0))))) ISNULL);
SELECT rt0.c2 FROM v0 RIGHT OUTER JOIN rt0 ON v0.c0;
SELECT rt0.c2 FROM v0 RIGHT OUTER JOIN rt0 ON v0.c0 WHERE ((((~ (rt0.c6)))&(v0.c1 COLLATE NOCASE))) UNION ALL SELECT rt0.c2 FROM v0 RIGHT OUTER JOIN rt0 ON v0.c0 WHERE ((NOT ((((~ (rt0.c6)))&(v0.c1 COLLATE NOCASE))))) UNION ALL SELECT rt0.c2 FROM v0 RIGHT OUTER JOIN rt0 ON v0.c0 WHERE ((((((~ (rt0.c6)))&(v0.c1 COLLATE NOCASE))) ISNULL));
SELECT rt0.c2 FROM v0 RIGHT OUTER JOIN rt0 ON v0.c0;
SELECT DISTINCT rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c1 FROM rt0 WHERE ((+ (rt0.c5)) COLLATE BINARY COLLATE BINARY) UNION SELECT DISTINCT rt0.c1 FROM rt0 WHERE ((NOT ((+ (rt0.c5)) COLLATE BINARY COLLATE BINARY))) UNION SELECT DISTINCT rt0.c1 FROM rt0 WHERE ((((+ (rt0.c5)) COLLATE BINARY COLLATE BINARY) ISNULL));
SELECT DISTINCT rt0.c1 FROM rt0;
SELECT ALL v0.c0 FROM rt0, t0, v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM rt0, t0, v0 WHERE (NULL) GROUP BY v0.c0 UNION SELECT v0.c0 FROM rt0, t0, v0 WHERE ((NOT (NULL))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM rt0, t0, v0 WHERE (((NULL) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM rt0, t0, v0 GROUP BY v0.c0;
SELECT ALL v0.c2, v0.c0 FROM t0, rt0, v0 GROUP BY v0.c2, v0.c0;
SELECT v0.c2, v0.c0 FROM t0, rt0, v0 GROUP BY v0.c2, v0.c0 HAVING GROUP_CONCAT(CASE WHEN COUNT(MIN(TOTAL(NULL))) THEN rt0.c5 WHEN SUM(rt0.c0) THEN rt0.c1 WHEN rt0.c2 THEN GROUP_CONCAT(rt0.c1) ELSE v0.c0 END) UNION ALL SELECT v0.c2, v0.c0 FROM t0, rt0, v0 GROUP BY v0.c2, v0.c0 HAVING (NOT (GROUP_CONCAT(CASE WHEN COUNT(MIN(TOTAL(NULL))) THEN rt0.c5 WHEN SUM(rt0.c0) THEN rt0.c1 WHEN rt0.c2 THEN GROUP_CONCAT(rt0.c1) ELSE v0.c0 END))) UNION ALL SELECT v0.c2, v0.c0 FROM t0, rt0, v0 GROUP BY v0.c2, v0.c0 HAVING ((GROUP_CONCAT(CASE WHEN COUNT(MIN(TOTAL(NULL))) THEN rt0.c5 WHEN SUM(rt0.c0) THEN rt0.c1 WHEN rt0.c2 THEN GROUP_CONCAT(rt0.c1) ELSE v0.c0 END)) ISNULL);
SELECT ALL rt0.c1, rt0.c3, rt0.c2, rt0.c6, rt0.c5, rt0.c0 FROM rt0, t0;
SELECT rt0.c1, rt0.c3, rt0.c2, rt0.c6, rt0.c5, rt0.c0 FROM rt0, t0 WHERE ((((CAST(rt0.c4 AS BLOB)))>(((- (rt0.c0)))))) UNION ALL SELECT rt0.c1, rt0.c3, rt0.c2, rt0.c6, rt0.c5, rt0.c0 FROM rt0, t0 WHERE ((NOT ((((CAST(rt0.c4 AS BLOB)))>(((- (rt0.c0)))))))) UNION ALL SELECT ALL rt0.c1, rt0.c3, rt0.c2, rt0.c6, rt0.c5, rt0.c0 FROM rt0, t0 WHERE ((((((CAST(rt0.c4 AS BLOB)))>(((- (rt0.c0)))))) ISNULL));
SELECT ALL rt0.c1, rt0.c3, rt0.c2, rt0.c6, rt0.c5, rt0.c0 FROM rt0, t0;
SELECT DISTINCT * FROM v0, rt0;
SELECT DISTINCT * FROM v0, rt0 WHERE (((CAST(rt0.c1 AS BLOB)) NOT NULL)) UNION SELECT DISTINCT * FROM v0, rt0 WHERE ((NOT (((CAST(rt0.c1 AS BLOB)) NOT NULL)))) UNION SELECT DISTINCT * FROM v0, rt0 WHERE (((((CAST(rt0.c1 AS BLOB)) NOT NULL)) ISNULL));
SELECT DISTINCT * FROM v0, rt0;
SELECT ALL v0.c2, v0.c0 FROM v0 GROUP BY v0.c2, v0.c0;
SELECT v0.c2, v0.c0 FROM v0 WHERE (((((((((((v0.c1) NOT BETWEEN (v0.c2) AND (v0.c1)))OR(CASE v0.c2  WHEN v0.c1 THEN v0.c0 WHEN v0.c1 THEN v0.c1 WHEN v0.c1 THEN v0.c0 END)))AND((~ (v0.c2)))))OR(((((v0.c1)OR(v0.c1)))OR(v0.c1)))))OR(((v0.c2)&(v0.c1))))) GROUP BY v0.c2, v0.c0 UNION SELECT v0.c2, v0.c0 FROM v0 WHERE ((NOT (((((((((((v0.c1) NOT BETWEEN (v0.c2) AND (v0.c1)))OR(CASE v0.c2  WHEN v0.c1 THEN v0.c0 WHEN v0.c1 THEN v0.c1 WHEN v0.c1 THEN v0.c0 END)))AND((~ (v0.c2)))))OR(((((v0.c1)OR(v0.c1)))OR(v0.c1)))))OR(((v0.c2)&(v0.c1))))))) GROUP BY v0.c2, v0.c0 UNION SELECT v0.c2, v0.c0 FROM v0 WHERE (((((((((((((v0.c1) NOT BETWEEN (v0.c2) AND (v0.c1)))OR(CASE v0.c2  WHEN v0.c1 THEN v0.c0 WHEN v0.c1 THEN v0.c1 WHEN v0.c1 THEN v0.c0 END)))AND((~ (v0.c2)))))OR(((((v0.c1)OR(v0.c1)))OR(v0.c1)))))OR(((v0.c2)&(v0.c1))))) ISNULL)) GROUP BY v0.c2, v0.c0;
SELECT ALL v0.c2, v0.c0 FROM v0 GROUP BY v0.c2, v0.c0;
SELECT rt0.c4, rt0.c1, rt0.c6 FROM rt0 GROUP BY rt0.c4, rt0.c1, rt0.c6;
SELECT ALL rt0.c4, rt0.c1, rt0.c6 FROM rt0 GROUP BY rt0.c4, rt0.c1, rt0.c6 HAVING MIN(COUNT(MAX(rt0.c6))) UNION ALL SELECT rt0.c4, rt0.c1, rt0.c6 FROM rt0 GROUP BY rt0.c4, rt0.c1, rt0.c6 HAVING (NOT (MIN(COUNT(MAX(rt0.c6))))) UNION ALL SELECT rt0.c4, rt0.c1, rt0.c6 FROM rt0 GROUP BY rt0.c4, rt0.c1, rt0.c6 HAVING ((MIN(COUNT(MAX(rt0.c6)))) ISNULL);
SELECT t0.c0 FROM t0;
SELECT t0.c0 FROM t0 WHERE (((t0.c0)/((t0.c0 IN ())))) UNION ALL SELECT t0.c0 FROM t0 WHERE ((NOT (((t0.c0)/((t0.c0 IN ())))))) UNION ALL SELECT t0.c0 FROM t0 WHERE (((((t0.c0)/((t0.c0 IN ())))) ISNULL));
SELECT t0.c0 FROM t0;
SELECT DISTINCT v0.c2, t0.c0, rt0.c3, v0.c0, rt0.c4, rt0.c6, rt0.c5, v0.c1 FROM t0, v0, rt0;
SELECT DISTINCT v0.c2, t0.c0, rt0.c3, v0.c0, rt0.c4, rt0.c6, rt0.c5, v0.c1 FROM t0, v0, rt0 WHERE (((((v0.c2)==(rt0.c6))) BETWEEN ((- (rt0.c3))) AND (((v0.c2)&(v0.c0))))) UNION SELECT DISTINCT v0.c2, t0.c0, rt0.c3, v0.c0, rt0.c4, rt0.c6, rt0.c5, v0.c1 FROM t0, v0, rt0 WHERE ((NOT (((((v0.c2)=(rt0.c6))) BETWEEN ((- (rt0.c3))) AND (((v0.c2)&(v0.c0))))))) UNION SELECT DISTINCT v0.c2, t0.c0, rt0.c3, v0.c0, rt0.c4, rt0.c6, rt0.c5, v0.c1 FROM t0, v0, rt0 WHERE (((((((v0.c2)=(rt0.c6))) BETWEEN ((- (rt0.c3))) AND (((v0.c2)&(v0.c0))))) ISNULL));
SELECT DISTINCT v0.c2, t0.c0, rt0.c3, v0.c0, rt0.c4, rt0.c6, rt0.c5, v0.c1 FROM t0, v0, rt0;
SELECT rt0.c0, rt0.c1, t0.c0, rt0.c6, rt0.c2 FROM t0, rt0 GROUP BY rt0.c0, rt0.c1, t0.c0, rt0.c6, rt0.c2;
SELECT ALL rt0.c0, rt0.c1, t0.c0, rt0.c6, rt0.c2 FROM t0, rt0 WHERE (((((UNICODE(rt0.c6))AND(t0.c0)))AND((rt0.c3 IN (rt0.c2, rt0.c5))))) GROUP BY rt0.c0, rt0.c1, t0.c0, rt0.c6, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c1, t0.c0, rt0.c6, rt0.c2 FROM t0, rt0 WHERE ((NOT (((((UNICODE(rt0.c6))AND(t0.c0)))AND((rt0.c3 IN (rt0.c2, rt0.c5))))))) GROUP BY rt0.c0, rt0.c1, t0.c0, rt0.c6, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c1, t0.c0, rt0.c6, rt0.c2 FROM t0, rt0 WHERE (((((((UNICODE(rt0.c6))AND(t0.c0)))AND((rt0.c3 IN (rt0.c2, rt0.c5))))) ISNULL)) GROUP BY rt0.c0, rt0.c1, t0.c0, rt0.c6, rt0.c2;
SELECT rt0.c0, rt0.c1, t0.c0, rt0.c6, rt0.c2 FROM t0, rt0 GROUP BY rt0.c0, rt0.c1, t0.c0, rt0.c6, rt0.c2;
SELECT ALL t0.c0, rt0.c2, rt0.c1, rt0.c6, rt0.c3 FROM rt0 NATURAL JOIN t0 GROUP BY t0.c0, rt0.c2, rt0.c1, rt0.c6, rt0.c3;
SELECT t0.c0, rt0.c2, rt0.c1, rt0.c6, rt0.c3 FROM rt0 NOT INDEXED NATURAL JOIN t0 GROUP BY t0.c0, rt0.c2, rt0.c1, rt0.c6, rt0.c3 HAVING TOTAL(COUNT(MAX(AVG(AVG(MAX(SUM(COUNT(rt0.c4)))))))) COLLATE BINARY UNION ALL SELECT ALL t0.c0, rt0.c2, rt0.c1, rt0.c6, rt0.c3 FROM rt0 NATURAL JOIN t0 GROUP BY t0.c0, rt0.c2, rt0.c1, rt0.c6, rt0.c3 HAVING (NOT (TOTAL(COUNT(MAX(AVG(AVG(MAX(SUM(COUNT(rt0.c4)))))))) COLLATE BINARY)) UNION ALL SELECT ALL t0.c0, rt0.c2, rt0.c1, rt0.c6, rt0.c3 FROM rt0 NATURAL JOIN t0 GROUP BY t0.c0, rt0.c2, rt0.c1, rt0.c6, rt0.c3 HAVING ((TOTAL(COUNT(MAX(AVG(AVG(MAX(SUM(COUNT(rt0.c4)))))))) COLLATE BINARY) ISNULL);
SELECT * FROM v0, t0, rt0;
SELECT * FROM v0, t0, rt0 WHERE (IFNULL(x'', (+ (v0.c2)))) UNION ALL SELECT ALL * FROM v0, t0, rt0 WHERE ((NOT (IFNULL(x'', (+ (v0.c2)))))) UNION ALL SELECT * FROM v0, t0, rt0 WHERE (((IFNULL(x'', (+ (v0.c2)))) ISNULL));
SELECT * FROM v0, t0, rt0;
SELECT DISTINCT * FROM t0, rt0, v0;
SELECT DISTINCT * FROM t0, rt0, v0 WHERE ((+ (CASE WHEN '1960549171' THEN rt0.c6 ELSE rt0.c3 END))) UNION SELECT DISTINCT * FROM t0, rt0, v0 WHERE ((NOT ((+ (CASE WHEN '1960549171' THEN rt0.c6 ELSE rt0.c3 END))))) UNION SELECT DISTINCT * FROM t0, rt0, v0 WHERE ((((+ (CASE WHEN '1960549171' THEN rt0.c6 ELSE rt0.c3 END))) ISNULL));
SELECT DISTINCT * FROM t0, rt0, v0;
SELECT ALL rt0.c1, rt0.c6, rt0.c5, v0.c0 FROM v0 LEFT OUTER JOIN rt0 ON json_array_length(((((v0.c1)AND(rt0.c0)))OR(rt0.c3)), (v0.c1 IN (rt0.c4, rt0.c1))) GROUP BY rt0.c1, rt0.c6, rt0.c5, v0.c0;
SELECT ALL rt0.c1, rt0.c5, rt0.c0 FROM rt0, t0 GROUP BY rt0.c1, rt0.c5, rt0.c0;
SELECT rt0.c1, rt0.c5, rt0.c0 FROM rt0, t0 GROUP BY rt0.c1, rt0.c5, rt0.c0 HAVING ((((((((rt0.c6)AND(SUM(MAX(TOTAL(MAX(rt0.c6)))))))OR(MAX(AVG(MIN(GROUP_CONCAT(rt0.c0)))))))OR(TOTAL(rt0.c3))))OR(AVG(t0.c0))) UNION ALL SELECT rt0.c1, rt0.c5, rt0.c0 FROM rt0, t0 GROUP BY rt0.c1, rt0.c5, rt0.c0 HAVING (NOT (((((((((rt0.c6)AND(SUM(MAX(TOTAL(MAX(rt0.c6)))))))OR(MAX(AVG(MIN(GROUP_CONCAT(rt0.c0)))))))OR(TOTAL(rt0.c3))))OR(AVG(t0.c0))))) UNION ALL SELECT ALL rt0.c1, rt0.c5, rt0.c0 FROM rt0, t0 GROUP BY rt0.c1, rt0.c5, rt0.c0 HAVING ((((((((((rt0.c6)AND(SUM(MAX(TOTAL(MAX(rt0.c6)))))))OR(MAX(AVG(MIN(GROUP_CONCAT(rt0.c0)))))))OR(TOTAL(rt0.c3))))OR(AVG(t0.c0)))) ISNULL);
SELECT * FROM v0, rt0;
SELECT * FROM v0, rt0 WHERE (rt0.c1) UNION ALL SELECT * FROM v0, rt0 WHERE ((NOT (rt0.c1))) UNION ALL SELECT * FROM v0, rt0 WHERE (((rt0.c1) ISNULL));
SELECT * FROM v0, rt0;
SELECT DISTINCT t0.c0 FROM t0 FULL OUTER JOIN v0 ON v0.c1;
SELECT DISTINCT t0.c0 FROM t0 FULL OUTER JOIN v0 ON v0.c1 WHERE ((((NOT (v0.c0))) NOT BETWEEN (((v0.c0) NOT BETWEEN (x'a61c') AND (v0.c1))) AND (v0.c0 COLLATE RTRIM))) UNION SELECT DISTINCT t0.c0 FROM t0 FULL OUTER JOIN v0 ON v0.c1 WHERE ((NOT ((((NOT (v0.c0))) NOT BETWEEN (((v0.c0) NOT BETWEEN (x'a61c') AND (v0.c1))) AND (v0.c0 COLLATE RTRIM))))) UNION SELECT DISTINCT t0.c0 FROM t0 FULL OUTER JOIN v0 ON v0.c1 WHERE ((((((NOT (v0.c0))) NOT BETWEEN (((v0.c0) NOT BETWEEN (x'a61c') AND (v0.c1))) AND (v0.c0 COLLATE RTRIM))) ISNULL));
SELECT DISTINCT t0.c0 FROM t0 FULL OUTER JOIN v0 ON v0.c1;
SELECT rt0.c4, rt0.c1, rt0.c2, v0.c0, rt0.c6, rt0.c0, t0.c0, rt0.c5, v0.c2 FROM rt0, t0, v0 GROUP BY rt0.c4, rt0.c1, rt0.c2, v0.c0, rt0.c6, rt0.c0, t0.c0, rt0.c5, v0.c2;
SELECT rt0.c4, rt0.c1, rt0.c2, v0.c0, rt0.c6, rt0.c0, t0.c0, rt0.c5, v0.c2 FROM rt0, t0, v0 WHERE (json_patch(((((rt0.c6)AND(rt0.c3)))OR(rt0.c6)), ((rt0.c4) BETWEEN (rt0.c6) AND (v0.c2)))) GROUP BY rt0.c4, rt0.c1, rt0.c2, v0.c0, rt0.c6, rt0.c0, t0.c0, rt0.c5, v0.c2 UNION SELECT ALL rt0.c4, rt0.c1, rt0.c2, v0.c0, rt0.c6, rt0.c0, t0.c0, rt0.c5, v0.c2 FROM rt0, t0, v0 WHERE ((NOT (json_patch(((((rt0.c6)AND(rt0.c3)))OR(rt0.c6)), ((rt0.c4) BETWEEN (rt0.c6) AND (v0.c2)))))) GROUP BY rt0.c4, rt0.c1, rt0.c2, v0.c0, rt0.c6, rt0.c0, t0.c0, rt0.c5, v0.c2 UNION SELECT ALL rt0.c4, rt0.c1, rt0.c2, v0.c0, rt0.c6, rt0.c0, t0.c0, rt0.c5, v0.c2 FROM rt0, t0, v0 WHERE (((json_patch(((((rt0.c6)AND(rt0.c3)))OR(rt0.c6)), ((rt0.c4) BETWEEN (rt0.c6) AND (v0.c2)))) ISNULL)) GROUP BY rt0.c4, rt0.c1, rt0.c2, v0.c0, rt0.c6, rt0.c0, t0.c0, rt0.c5, v0.c2;
SELECT rt0.c4, rt0.c1, rt0.c2, v0.c0, rt0.c6, rt0.c0, t0.c0, rt0.c5, v0.c2 FROM rt0, t0, v0 GROUP BY rt0.c4, rt0.c1, rt0.c2, v0.c0, rt0.c6, rt0.c0, t0.c0, rt0.c5, v0.c2;
SELECT ALL rt0.c4, v0.c0 FROM t0, v0, rt0 GROUP BY rt0.c4, v0.c0;
SELECT ALL rt0.c4, v0.c0 FROM t0, v0, rt0 GROUP BY rt0.c4, v0.c0 HAVING COUNT((((rt0.c4))>((NULL)))) UNION ALL SELECT rt0.c4, v0.c0 FROM t0, v0, rt0 GROUP BY rt0.c4, v0.c0 HAVING (NOT (COUNT((((rt0.c4))>((NULL)))))) UNION ALL SELECT ALL rt0.c4, v0.c0 FROM t0, v0, rt0 GROUP BY rt0.c4, v0.c0 HAVING ((COUNT((((rt0.c4))>((NULL))))) ISNULL);
SELECT ALL rt0.c4, v0.c0 FROM t0, v0, rt0 GROUP BY rt0.c4, v0.c0;
SELECT ALL rt0.c4, v0.c0 FROM t0, v0, rt0 GROUP BY rt0.c4, v0.c0 HAVING COUNT((((rt0.c4))>((NULL)))) UNION ALL SELECT rt0.c4, v0.c0 FROM t0, v0, rt0 GROUP BY rt0.c4, v0.c0 HAVING (NOT (COUNT((((rt0.c4))>((NULL)))))) UNION ALL SELECT ALL rt0.c4, v0.c0 FROM t0, v0, rt0 GROUP BY rt0.c4, v0.c0 HAVING ((COUNT((((rt0.c4))>((NULL))))) ISNULL);
SELECT ALL rt0.c4, v0.c0 FROM t0, v0, rt0 GROUP BY rt0.c4, v0.c0;
SELECT ALL rt0.c2, v0.c0 FROM rt0, v0;
SELECT ALL rt0.c2, v0.c0 FROM rt0, v0 WHERE (CAST(((rt0.c4)+(rt0.c6)) AS BLOB)) UNION ALL SELECT rt0.c2, v0.c0 FROM rt0, v0 WHERE ((NOT (CAST(((rt0.c4)+(rt0.c6)) AS BLOB)))) UNION ALL SELECT ALL rt0.c2, v0.c0 FROM rt0, v0 WHERE (((CAST(((rt0.c4)+(rt0.c6)) AS BLOB)) ISNULL));
SELECT ALL rt0.c2, v0.c0 FROM rt0, v0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (((((v0.c2) NOT NULL)) NOTNULL)) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (((((v0.c2) NOT NULL)) NOTNULL)))) UNION SELECT DISTINCT * FROM v0 WHERE (((((((v0.c2) NOT NULL)) NOTNULL)) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (CAST(TYPEOF(DISTINCT v0.c0) AS BLOB)) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT (CAST(TYPEOF(DISTINCT v0.c0) AS BLOB)))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((CAST(TYPEOF(DISTINCT v0.c0) AS BLOB)) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c2, rt0.c5, rt0.c2, v0.c1, rt0.c1, rt0.c6, rt0.c4, v0.c0 FROM v0 NOT INDEXED, rt0, t0 GROUP BY v0.c2, rt0.c5, rt0.c2, v0.c1, rt0.c1, rt0.c6, rt0.c4, v0.c0;
SELECT v0.c2, rt0.c5, rt0.c2, v0.c1, rt0.c1, rt0.c6, rt0.c4, v0.c0 FROM v0, rt0, t0 GROUP BY v0.c2, rt0.c5, rt0.c2, v0.c1, rt0.c1, rt0.c6, rt0.c4, v0.c0 HAVING TOTAL(CAST(t0.c0 AS INTEGER)) UNION ALL SELECT ALL v0.c2, rt0.c5, rt0.c2, v0.c1, rt0.c1, rt0.c6, rt0.c4, v0.c0 FROM v0, rt0, t0 GROUP BY v0.c2, rt0.c5, rt0.c2, v0.c1, rt0.c1, rt0.c6, rt0.c4, v0.c0 HAVING (NOT (TOTAL(CAST(t0.c0 AS INTEGER)))) UNION ALL SELECT ALL v0.c2, rt0.c5, rt0.c2, v0.c1, rt0.c1, rt0.c6, rt0.c4, v0.c0 FROM v0, rt0, t0 GROUP BY v0.c2, rt0.c5, rt0.c2, v0.c1, rt0.c1, rt0.c6, rt0.c4, v0.c0 HAVING ((TOTAL(CAST(t0.c0 AS INTEGER))) ISNULL);
SELECT ALL v0.c2, rt0.c5, rt0.c2, v0.c1, rt0.c1, rt0.c6, rt0.c4, v0.c0 FROM v0 NOT INDEXED, rt0, t0 GROUP BY v0.c2, rt0.c5, rt0.c2, v0.c1, rt0.c1, rt0.c6, rt0.c4, v0.c0;
SELECT v0.c2, rt0.c5, rt0.c2, v0.c1, rt0.c1, rt0.c6, rt0.c4, v0.c0 FROM v0, rt0, t0 GROUP BY v0.c2, rt0.c5, rt0.c2, v0.c1, rt0.c1, rt0.c6, rt0.c4, v0.c0 HAVING TOTAL(CAST(t0.c0 AS INTEGER)) UNION ALL SELECT ALL v0.c2, rt0.c5, rt0.c2, v0.c1, rt0.c1, rt0.c6, rt0.c4, v0.c0 FROM v0, rt0, t0 GROUP BY v0.c2, rt0.c5, rt0.c2, v0.c1, rt0.c1, rt0.c6, rt0.c4, v0.c0 HAVING (NOT (TOTAL(CAST(t0.c0 AS INTEGER)))) UNION ALL SELECT ALL v0.c2, rt0.c5, rt0.c2, v0.c1, rt0.c1, rt0.c6, rt0.c4, v0.c0 FROM v0, rt0, t0 GROUP BY v0.c2, rt0.c5, rt0.c2, v0.c1, rt0.c1, rt0.c6, rt0.c4, v0.c0 HAVING ((TOTAL(CAST(t0.c0 AS INTEGER))) ISNULL);
SELECT ALL v0.c2, rt0.c5, rt0.c2, v0.c1, rt0.c1, rt0.c6, rt0.c4, v0.c0 FROM v0 NOT INDEXED, rt0, t0 GROUP BY v0.c2, rt0.c5, rt0.c2, v0.c1, rt0.c1, rt0.c6, rt0.c4, v0.c0;
SELECT ALL MAX((((rt0.c5) NOT BETWEEN (v0.c0) AND (t0.c0)) IN ())) FROM v0, t0, rt0;
SELECT ALL * FROM rt0 INNER JOIN v0 ON ((HEX(v0.c1))IS NOT(rtreenode(rt0.c4, rt0.c4))) RIGHT OUTER JOIN t0 ON ((CAST(rt0.c2 AS BLOB))&((((rt0.c2, rt0.c6, rt0.c2)) NOT BETWEEN ((rt0.c0, v0.c0, rt0.c0)) AND ((rt0.c6, rt0.c0, rt0.c6)))));
SELECT ALL * FROM rt0 INNER JOIN v0 ON ((HEX(v0.c1))IS NOT(rtreenode(rt0.c4, rt0.c4))) RIGHT OUTER JOIN t0 ON ((CAST(rt0.c2 AS BLOB))&((((rt0.c2, rt0.c6, rt0.c2)) NOT BETWEEN ((rt0.c0, v0.c0, rt0.c0)) AND ((rt0.c6, rt0.c0, rt0.c6))))) WHERE (CAST(rt0.c0 COLLATE RTRIM AS INTEGER)) UNION ALL SELECT * FROM rt0 INNER JOIN v0 ON ((HEX(v0.c1))IS NOT(rtreenode(rt0.c4, rt0.c4))) RIGHT OUTER JOIN t0 ON ((CAST(rt0.c2 AS BLOB))&((((rt0.c2, rt0.c6, rt0.c2)) NOT BETWEEN ((rt0.c0, v0.c0, rt0.c0)) AND ((rt0.c6, rt0.c0, rt0.c6))))) WHERE ((NOT (CAST(rt0.c0 COLLATE RTRIM AS INTEGER)))) UNION ALL SELECT ALL * FROM rt0 INNER JOIN v0 ON ((HEX(v0.c1))IS NOT(rtreenode(rt0.c4, rt0.c4))) RIGHT OUTER JOIN t0 ON ((CAST(rt0.c2 AS BLOB))&((((rt0.c2, rt0.c6, rt0.c2)) NOT BETWEEN ((rt0.c0, v0.c0, rt0.c0)) AND ((rt0.c6, rt0.c0, rt0.c6))))) WHERE (((CAST(rt0.c0 COLLATE RTRIM AS INTEGER)) ISNULL));
SELECT ALL * FROM rt0 INNER JOIN v0 ON ((HEX(v0.c1))IS NOT(rtreenode(rt0.c4, rt0.c4))) RIGHT OUTER JOIN t0 ON ((CAST(rt0.c2 AS BLOB))&((((rt0.c2, rt0.c6, rt0.c2)) NOT BETWEEN ((rt0.c0, v0.c0, rt0.c0)) AND ((rt0.c6, rt0.c0, rt0.c6)))));
SELECT DISTINCT * FROM v0 LEFT OUTER JOIN rt0 ON NULLIF(t0.c0, x'7736') INNER JOIN t0 ON ((((v0.c2)>=(rt0.c4))) NOT BETWEEN (((((((((((((rt0.c1)OR(v0.c2)))OR(v0.c0)))OR(t0.c0)))OR(rt0.c6)))OR(rt0.c6)))OR(v0.c1))) AND ((((t0.c0)) BETWEEN ((NULL)) AND ((rt0.c5)))));
SELECT v0.c0, rt0.c5, rt0.c6, v0.c2, v0.c1, t0.c0, rt0.c3, rt0.c0, rt0.c2 FROM t0, rt0, v0 GROUP BY v0.c0, rt0.c5, rt0.c6, v0.c2, v0.c1, t0.c0, rt0.c3, rt0.c0, rt0.c2;
SELECT ALL v0.c0, rt0.c5, rt0.c6, v0.c2, v0.c1, t0.c0, rt0.c3, rt0.c0, rt0.c2 FROM t0, rt0, v0 WHERE (LIKE(CASE WHEN v0.c0 THEN rt0.c6 END, ((rt0.c3) IS FALSE))) GROUP BY v0.c0, rt0.c5, rt0.c6, v0.c2, v0.c1, t0.c0, rt0.c3, rt0.c0, rt0.c2 UNION SELECT ALL v0.c0, rt0.c5, rt0.c6, v0.c2, v0.c1, t0.c0, rt0.c3, rt0.c0, rt0.c2 FROM t0, rt0, v0 WHERE ((NOT (LIKE(CASE WHEN v0.c0 THEN rt0.c6 END, ((rt0.c3) IS FALSE))))) GROUP BY v0.c0, rt0.c5, rt0.c6, v0.c2, v0.c1, t0.c0, rt0.c3, rt0.c0, rt0.c2 UNION SELECT ALL v0.c0, rt0.c5, rt0.c6, v0.c2, v0.c1, t0.c0, rt0.c3, rt0.c0, rt0.c2 FROM t0, rt0, v0 WHERE (((LIKE(CASE WHEN v0.c0 THEN rt0.c6 END, ((rt0.c3) IS FALSE))) ISNULL)) GROUP BY v0.c0, rt0.c5, rt0.c6, v0.c2, v0.c1, t0.c0, rt0.c3, rt0.c0, rt0.c2;
SELECT v0.c0, rt0.c5, rt0.c6, v0.c2, v0.c1, t0.c0, rt0.c3, rt0.c0, rt0.c2 FROM t0, rt0, v0 GROUP BY v0.c0, rt0.c5, rt0.c6, v0.c2, v0.c1, t0.c0, rt0.c3, rt0.c0, rt0.c2;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING MIN(CAST(COUNT(t0.c0) AS REAL)) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (MIN(CAST(COUNT(t0.c0) AS REAL)))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((MIN(CAST(COUNT(t0.c0) AS REAL))) ISNULL);
SELECT MIN((((NOT (rt0.c0)))/(TYPEOF(DISTINCT v0.c0)))) FROM v0, rt0 ORDER BY ((((rt0.c4) NOT NULL))=(CASE WHEN rt0.c3 THEN rt0.c2 END))  NULLS LAST;
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE (0X5b3a17ac COLLATE NOCASE) UNION ALL SELECT * FROM rt0 WHERE ((NOT (0X5b3a17ac COLLATE NOCASE))) UNION ALL SELECT * FROM rt0 WHERE (((0X5b3a17ac COLLATE NOCASE) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT v0.c2, v0.c0, t0.c0 FROM t0 CROSS JOIN v0 ON ((((v0.c1) IS FALSE)) BETWEEN (IFNULL(v0.c1, 0.5806401940108974)) AND (0.5806401940108974 COLLATE RTRIM));
SELECT DISTINCT v0.c2, v0.c0, t0.c0 FROM t0 CROSS JOIN v0 ON ((((v0.c1) IS FALSE)) BETWEEN (IFNULL(v0.c1, 0.5806401940108974)) AND (0.5806401940108974 COLLATE RTRIM)) WHERE (CASE WHEN ((v0.c2)>=(v0.c0)) THEN ((((v0.c0)OR(v0.c2)))AND(t0.c0)) END) UNION SELECT DISTINCT v0.c2, v0.c0, t0.c0 FROM t0 CROSS JOIN v0 ON ((((v0.c1) IS FALSE)) BETWEEN (IFNULL(v0.c1, 0.5806401940108974)) AND (0.5806401940108974 COLLATE RTRIM)) WHERE ((NOT (CASE WHEN ((v0.c2)>=(v0.c0)) THEN ((((v0.c0)OR(v0.c2)))AND(t0.c0)) END))) UNION SELECT DISTINCT v0.c2, v0.c0, t0.c0 FROM t0 CROSS JOIN v0 ON ((((v0.c1) IS FALSE)) BETWEEN (IFNULL(v0.c1, 0.5806401940108974)) AND (0.5806401940108974 COLLATE RTRIM)) WHERE (((CASE WHEN ((v0.c2)>=(v0.c0)) THEN ((((v0.c0)OR(v0.c2)))AND(t0.c0)) END) ISNULL));
SELECT DISTINCT v0.c2, v0.c0, t0.c0 FROM t0 CROSS JOIN v0 ON ((((v0.c1) IS FALSE)) BETWEEN (IFNULL(v0.c1, 0.5806401940108974)) AND (0.5806401940108974 COLLATE RTRIM));
SELECT rt0.c2 FROM rt0, t0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 NOT INDEXED, t0 WHERE (CASE WHEN 0.43002614825290664 THEN rt0.c6 COLLATE BINARY END) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0, t0 WHERE ((NOT (CASE WHEN 0.43002614825290664 THEN rt0.c6 COLLATE BINARY END))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0, t0 WHERE (((CASE WHEN 0.43002614825290664 THEN rt0.c6 COLLATE BINARY END) ISNULL)) GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0, t0 GROUP BY rt0.c2;
SELECT t0.c0, v0.c1, rt0.c3, rt0.c4, rt0.c1, rt0.c5 FROM rt0, v0, t0 GROUP BY t0.c0, v0.c1, rt0.c3, rt0.c4, rt0.c1, rt0.c5;
SELECT ALL t0.c0, v0.c1, rt0.c3, rt0.c4, rt0.c1, rt0.c5 FROM rt0, v0, t0 GROUP BY t0.c0, v0.c1, rt0.c3, rt0.c4, rt0.c1, rt0.c5 HAVING ((COUNT(COUNT(*)))==(TIME(v0.c2, rt0.c6, rt0.c3, '1693012397', rt0.c6, MIN(MAX(rt0.c1)), MIN(SUM(t0.c0))))) UNION ALL SELECT t0.c0, v0.c1, rt0.c3, rt0.c4, rt0.c1, rt0.c5 FROM rt0, v0, t0 GROUP BY t0.c0, v0.c1, rt0.c3, rt0.c4, rt0.c1, rt0.c5 HAVING (NOT (((COUNT(COUNT(*)))==(TIME(v0.c2, rt0.c6, rt0.c3, '1693012397', rt0.c6, MIN(MAX(rt0.c1)), MIN(SUM(t0.c0))))))) UNION ALL SELECT t0.c0, v0.c1, rt0.c3, rt0.c4, rt0.c1, rt0.c5 FROM rt0, v0, t0 GROUP BY t0.c0, v0.c1, rt0.c3, rt0.c4, rt0.c1, rt0.c5 HAVING ((((COUNT(COUNT(*)))=(TIME(v0.c2, rt0.c6, rt0.c3, '1693012397', rt0.c6, MIN(MAX(rt0.c1)), MIN(SUM(t0.c0)))))) ISNULL);
SELECT ALL rt0.c3, rt0.c1, v0.c2, rt0.c2, t0.c0 FROM v0, t0 NOT INDEXED, rt0;
SELECT ALL rt0.c3, rt0.c1, v0.c2, rt0.c2, t0.c0 FROM v0, t0, rt0 WHERE ((((rt0.c2, rt0.c0, rt0.c0)) NOT BETWEEN ((v0.c1, v0.c0, '+9')) AND ((rt0.c4, v0.c1, v0.c1))) COLLATE RTRIM) UNION ALL SELECT rt0.c3, rt0.c1, v0.c2, rt0.c2, t0.c0 FROM v0, t0, rt0 WHERE ((NOT ((((rt0.c2, rt0.c0, rt0.c0)) NOT BETWEEN ((v0.c1, v0.c0, '+9')) AND ((rt0.c4, v0.c1, v0.c1))) COLLATE RTRIM))) UNION ALL SELECT rt0.c3, rt0.c1, v0.c2, rt0.c2, t0.c0 FROM v0, t0, rt0 WHERE ((((((rt0.c2, rt0.c0, rt0.c0)) NOT BETWEEN ((v0.c1, v0.c0, '+9')) AND ((rt0.c4, v0.c1, v0.c1))) COLLATE RTRIM) ISNULL));
SELECT ALL rt0.c3, rt0.c1, v0.c2, rt0.c2, t0.c0 FROM v0, t0 NOT INDEXED, rt0;
SELECT DISTINCT * FROM t0, rt0;
SELECT DISTINCT * FROM t0, rt0 WHERE (CAST(rt0.c4 AS NUMERIC) COLLATE BINARY) UNION SELECT DISTINCT * FROM t0, rt0 WHERE ((NOT (CAST(rt0.c4 AS NUMERIC) COLLATE BINARY))) UNION SELECT DISTINCT * FROM t0, rt0 WHERE (((CAST(rt0.c4 AS NUMERIC) COLLATE BINARY) ISNULL));
SELECT DISTINCT * FROM t0, rt0;
SELECT rt0.c5, v0.c1, rt0.c2, rt0.c3, v0.c2, rt0.c0, v0.c0, t0.c0, rt0.c1, rt0.c4 FROM v0, t0, rt0 GROUP BY rt0.c5, v0.c1, rt0.c2, rt0.c3, v0.c2, rt0.c0, v0.c0, t0.c0, rt0.c1, rt0.c4;
SELECT rt0.c5, v0.c1, rt0.c2, rt0.c3, v0.c2, rt0.c0, v0.c0, t0.c0, rt0.c1, rt0.c4 FROM v0, t0, rt0 WHERE (CAST(v0.c1 AS BLOB)) GROUP BY rt0.c5, v0.c1, rt0.c2, rt0.c3, v0.c2, rt0.c0, v0.c0, t0.c0, rt0.c1, rt0.c4 UNION SELECT ALL rt0.c5, v0.c1, rt0.c2, rt0.c3, v0.c2, rt0.c0, v0.c0, t0.c0, rt0.c1, rt0.c4 FROM v0, t0, rt0 WHERE ((NOT (CAST(v0.c1 AS BLOB)))) GROUP BY rt0.c5, v0.c1, rt0.c2, rt0.c3, v0.c2, rt0.c0, v0.c0, t0.c0, rt0.c1, rt0.c4 UNION SELECT rt0.c5, v0.c1, rt0.c2, rt0.c3, v0.c2, rt0.c0, v0.c0, t0.c0, rt0.c1, rt0.c4 FROM v0, t0, rt0 WHERE (((CAST(v0.c1 AS BLOB)) ISNULL)) GROUP BY rt0.c5, v0.c1, rt0.c2, rt0.c3, v0.c2, rt0.c0, v0.c0, t0.c0, rt0.c1, rt0.c4;
SELECT rt0.c5, v0.c1, rt0.c2, rt0.c3, v0.c2, rt0.c0, v0.c0, t0.c0, rt0.c1, rt0.c4 FROM v0, t0, rt0 GROUP BY rt0.c5, v0.c1, rt0.c2, rt0.c3, v0.c2, rt0.c0, v0.c0, t0.c0, rt0.c1, rt0.c4;
SELECT ALL v0.c0 FROM rt0 CROSS JOIN v0 ON ((x'') IS TRUE) COLLATE RTRIM GROUP BY v0.c0;
SELECT v0.c0 FROM rt0 CROSS JOIN v0 ON ((x'') IS TRUE) COLLATE RTRIM GROUP BY v0.c0 HAVING GROUP_CONCAT(TOTAL(COUNT(*))) UNION ALL SELECT v0.c0 FROM rt0 CROSS JOIN v0 ON ((x'') IS TRUE) COLLATE RTRIM GROUP BY v0.c0 HAVING (NOT (GROUP_CONCAT(TOTAL(COUNT(*))))) UNION ALL SELECT ALL v0.c0 FROM rt0 CROSS JOIN v0 ON ((x'') IS TRUE) COLLATE RTRIM GROUP BY v0.c0 HAVING ((GROUP_CONCAT(TOTAL(COUNT(*)))) ISNULL);
SELECT * FROM t0, v0, rt0;
SELECT * FROM t0, v0, rt0 WHERE (CAST(IFNULL(t0.c0, rt0.c1) AS TEXT)) UNION ALL SELECT ALL * FROM t0, v0, rt0 WHERE ((NOT (CAST(IFNULL(t0.c0, rt0.c1) AS TEXT)))) UNION ALL SELECT * FROM t0, v0, rt0 WHERE (((CAST(IFNULL(t0.c0, rt0.c1) AS TEXT)) ISNULL));
SELECT * FROM t0, v0, rt0;
SELECT DISTINCT rt0.c1, rt0.c6 FROM rt0, t0;
SELECT DISTINCT rt0.c1, rt0.c6 FROM rt0, t0 WHERE (CASE WHEN ((t0.c0)/(rt0.c6)) THEN ((rt0.c1)>=(rt0.c4)) END) UNION SELECT DISTINCT rt0.c1, rt0.c6 FROM rt0, t0 WHERE ((NOT (CASE WHEN ((t0.c0)/(rt0.c6)) THEN ((rt0.c1)>=(rt0.c4)) END))) UNION SELECT DISTINCT rt0.c1, rt0.c6 FROM rt0, t0 WHERE (((CASE WHEN ((t0.c0)/(rt0.c6)) THEN ((rt0.c1)>=(rt0.c4)) END) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c6 FROM rt0, t0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (LIKELIHOOD(DISTINCT v0.c2 COLLATE BINARY, 0.49860375806513746)) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT (LIKELIHOOD(DISTINCT v0.c2 COLLATE BINARY, 0.49860375806513746)))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((LIKELIHOOD(DISTINCT v0.c2 COLLATE BINARY, 0.49860375806513746)) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT rt0.c6, rt0.c3, rt0.c2, rt0.c5, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c6, rt0.c3, rt0.c2, rt0.c5, rt0.c0, rt0.c1;
SELECT ALL rt0.c6, rt0.c3, rt0.c2, rt0.c5, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c6, rt0.c3, rt0.c2, rt0.c5, rt0.c0, rt0.c1 HAVING COUNT(rt0.c6) UNION ALL SELECT ALL rt0.c6, rt0.c3, rt0.c2, rt0.c5, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c6, rt0.c3, rt0.c2, rt0.c5, rt0.c0, rt0.c1 HAVING (NOT (COUNT(rt0.c6))) UNION ALL SELECT ALL rt0.c6, rt0.c3, rt0.c2, rt0.c5, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c6, rt0.c3, rt0.c2, rt0.c5, rt0.c0, rt0.c1 HAVING ((COUNT(rt0.c6)) ISNULL);
SELECT rt0.c6, rt0.c3, rt0.c2, rt0.c5, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c6, rt0.c3, rt0.c2, rt0.c5, rt0.c0, rt0.c1;
SELECT ALL rt0.c6, rt0.c3, rt0.c2, rt0.c5, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c6, rt0.c3, rt0.c2, rt0.c5, rt0.c0, rt0.c1 HAVING COUNT(rt0.c6) UNION ALL SELECT ALL rt0.c6, rt0.c3, rt0.c2, rt0.c5, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c6, rt0.c3, rt0.c2, rt0.c5, rt0.c0, rt0.c1 HAVING (NOT (COUNT(rt0.c6))) UNION ALL SELECT ALL rt0.c6, rt0.c3, rt0.c2, rt0.c5, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c6, rt0.c3, rt0.c2, rt0.c5, rt0.c0, rt0.c1 HAVING ((COUNT(rt0.c6)) ISNULL);
SELECT rt0.c6, rt0.c3, rt0.c2, rt0.c5, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c6, rt0.c3, rt0.c2, rt0.c5, rt0.c0, rt0.c1;
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE ((NOT (((rt0.c4)%(rt0.c5))))) UNION ALL SELECT * FROM rt0 WHERE ((NOT ((NOT (((rt0.c4)%(rt0.c5))))))) UNION ALL SELECT ALL * FROM rt0 WHERE ((((NOT (((rt0.c4)%(rt0.c5))))) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT * FROM v0, rt0;
SELECT DISTINCT * FROM v0, rt0 WHERE (CASE v0.c2  WHEN v0.c1 THEN rt0.c6 ELSE rt0.c1 END COLLATE NOCASE) UNION SELECT DISTINCT * FROM v0, rt0 WHERE ((NOT (CASE v0.c2  WHEN v0.c1 THEN rt0.c6 ELSE rt0.c1 END COLLATE NOCASE))) UNION SELECT DISTINCT * FROM v0, rt0 WHERE (((CASE v0.c2  WHEN v0.c1 THEN rt0.c6 ELSE rt0.c1 END COLLATE NOCASE) ISNULL));
SELECT DISTINCT * FROM v0, rt0;
SELECT ALL v0.c0, v0.c1 FROM v0 GROUP BY v0.c0, v0.c1;
SELECT v0.c0, v0.c1 FROM v0 WHERE (x'') GROUP BY v0.c0, v0.c1 UNION SELECT ALL v0.c0, v0.c1 FROM v0 WHERE ((NOT (x''))) GROUP BY v0.c0, v0.c1 UNION SELECT v0.c0, v0.c1 FROM v0 WHERE (((x'') ISNULL)) GROUP BY v0.c0, v0.c1;
SELECT ALL v0.c0, v0.c1 FROM v0 GROUP BY v0.c0, v0.c1;
SELECT rt0.c3, rt0.c0, v0.c1, v0.c2, v0.c0, rt0.c2 FROM v0, t0, rt0 GROUP BY rt0.c3, rt0.c0, v0.c1, v0.c2, v0.c0, rt0.c2;
SELECT rt0.c3, rt0.c0, v0.c1, v0.c2, v0.c0, rt0.c2 FROM v0, t0, rt0 GROUP BY rt0.c3, rt0.c0, v0.c1, v0.c2, v0.c0, rt0.c2 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c3, rt0.c0, v0.c1, v0.c2, v0.c0, rt0.c2 FROM v0, t0, rt0 GROUP BY rt0.c3, rt0.c0, v0.c1, v0.c2, v0.c0, rt0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c3, rt0.c0, v0.c1, v0.c2, v0.c0, rt0.c2 FROM v0, t0, rt0 GROUP BY rt0.c3, rt0.c0, v0.c1, v0.c2, v0.c0, rt0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c3, rt0.c0, v0.c1, v0.c2, v0.c0, rt0.c2 FROM v0, t0, rt0 GROUP BY rt0.c3, rt0.c0, v0.c1, v0.c2, v0.c0, rt0.c2;
SELECT rt0.c3, rt0.c0, v0.c1, v0.c2, v0.c0, rt0.c2 FROM v0, t0, rt0 GROUP BY rt0.c3, rt0.c0, v0.c1, v0.c2, v0.c0, rt0.c2 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c3, rt0.c0, v0.c1, v0.c2, v0.c0, rt0.c2 FROM v0, t0, rt0 GROUP BY rt0.c3, rt0.c0, v0.c1, v0.c2, v0.c0, rt0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c3, rt0.c0, v0.c1, v0.c2, v0.c0, rt0.c2 FROM v0, t0, rt0 GROUP BY rt0.c3, rt0.c0, v0.c1, v0.c2, v0.c0, rt0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c3, rt0.c0, v0.c1, v0.c2, v0.c0, rt0.c2 FROM v0, t0, rt0 GROUP BY rt0.c3, rt0.c0, v0.c1, v0.c2, v0.c0, rt0.c2;
SELECT * FROM v0;
SELECT * FROM v0 WHERE (((CAST(v0.c1 AS TEXT))LIKE(CASE WHEN v0.c0 THEN v0.c2 WHEN v0.c2 THEN v0.c1 WHEN v0.c1 THEN v0.c1 END))) UNION ALL SELECT * FROM v0 WHERE ((NOT (((CAST(v0.c1 AS TEXT))LIKE(CASE WHEN v0.c0 THEN v0.c2 WHEN v0.c2 THEN v0.c1 WHEN v0.c1 THEN v0.c1 END))))) UNION ALL SELECT * FROM v0 WHERE (((((CAST(v0.c1 AS TEXT))LIKE(CASE WHEN v0.c0 THEN v0.c2 WHEN v0.c2 THEN v0.c1 WHEN v0.c1 THEN v0.c1 END))) ISNULL));
SELECT * FROM v0;
SELECT DISTINCT t0.c0, rt0.c4, rt0.c6, rt0.c3, rt0.c0, rt0.c5, v0.c1, v0.c0, rt0.c1, rt0.c2, v0.c2 FROM v0, t0 LEFT OUTER JOIN rt0 ON ((((((rt0.c5) IS TRUE))AND(((((rt0.c2)AND(rt0.c0)))AND(v0.c0)))))AND(((rt0.c6)LIKE(rt0.c6))));
SELECT DISTINCT t0.c0, rt0.c4, rt0.c6, rt0.c3, rt0.c0, rt0.c5, v0.c1, v0.c0, rt0.c1, rt0.c2, v0.c2 FROM v0, t0 LEFT OUTER JOIN rt0 ON ((((((rt0.c5) IS TRUE))AND(((((rt0.c2)AND(rt0.c0)))AND(v0.c0)))))AND(((rt0.c6)LIKE(rt0.c6)))) WHERE (0.23878490067429692) UNION SELECT DISTINCT t0.c0, rt0.c4, rt0.c6, rt0.c3, rt0.c0, rt0.c5, v0.c1, v0.c0, rt0.c1, rt0.c2, v0.c2 FROM v0, t0 LEFT OUTER JOIN rt0 ON ((((((rt0.c5) IS TRUE))AND(((((rt0.c2)AND(rt0.c0)))AND(v0.c0)))))AND(((rt0.c6)LIKE(rt0.c6)))) WHERE ((NOT (0.23878490067429692))) UNION SELECT DISTINCT t0.c0, rt0.c4, rt0.c6, rt0.c3, rt0.c0, rt0.c5, v0.c1, v0.c0, rt0.c1, rt0.c2, v0.c2 FROM v0, t0 LEFT OUTER JOIN rt0 ON ((((((rt0.c5) IS TRUE))AND(((((rt0.c2)AND(rt0.c0)))AND(v0.c0)))))AND(((rt0.c6)LIKE(rt0.c6)))) WHERE (((0.23878490067429692) ISNULL));
SELECT DISTINCT t0.c0, rt0.c4, rt0.c6, rt0.c3, rt0.c0, rt0.c5, v0.c1, v0.c0, rt0.c1, rt0.c2, v0.c2 FROM v0, t0 LEFT OUTER JOIN rt0 ON ((((((rt0.c5) IS TRUE))AND(((((rt0.c2)AND(rt0.c0)))AND(v0.c0)))))AND(((rt0.c6)LIKE(rt0.c6))));
SELECT ALL rt0.c6, rt0.c3 FROM rt0 GROUP BY rt0.c6, rt0.c3;
SELECT rt0.c6, rt0.c3 FROM rt0 WHERE ((((rt0.c0, x'', rt0.c4))=((rt0.c4, rt0.c2, '-1802220435'))) COLLATE BINARY) GROUP BY rt0.c6, rt0.c3 UNION SELECT ALL rt0.c6, rt0.c3 FROM rt0 WHERE ((NOT ((((rt0.c0, x'', rt0.c4))=((rt0.c4, rt0.c2, '-1802220435'))) COLLATE BINARY))) GROUP BY rt0.c6, rt0.c3 UNION SELECT rt0.c6, rt0.c3 FROM rt0 WHERE ((((((rt0.c0, x'', rt0.c4))=((rt0.c4, rt0.c2, '-1802220435'))) COLLATE BINARY) ISNULL)) GROUP BY rt0.c6, rt0.c3;
SELECT ALL rt0.c6, rt0.c3 FROM rt0 GROUP BY rt0.c6, rt0.c3;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((COUNT(t0.c0)) IS TRUE) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (((COUNT(t0.c0)) IS TRUE))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((((COUNT(t0.c0)) IS TRUE)) ISNULL);
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((COUNT(t0.c0)) IS TRUE) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (((COUNT(t0.c0)) IS TRUE))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((((COUNT(t0.c0)) IS TRUE)) ISNULL);
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT rt0.c2, t0.c0, rt0.c6, v0.c0, rt0.c3, v0.c2, rt0.c1, rt0.c5, rt0.c0, v0.c1, rt0.c4 FROM rt0, t0, v0;
SELECT ALL rt0.c2, t0.c0, rt0.c6, v0.c0, rt0.c3, v0.c2, rt0.c1, rt0.c5, rt0.c0, v0.c1, rt0.c4 FROM rt0, t0, v0 WHERE ((((CAST(v0.c0 AS BLOB)))<((CAST(v0.c0 AS INTEGER))))) UNION ALL SELECT rt0.c2, t0.c0, rt0.c6, v0.c0, rt0.c3, v0.c2, rt0.c1, rt0.c5, rt0.c0, v0.c1, rt0.c4 FROM rt0, t0, v0 WHERE ((NOT ((((CAST(v0.c0 AS BLOB)))<((CAST(v0.c0 AS INTEGER))))))) UNION ALL SELECT rt0.c2, t0.c0, rt0.c6, v0.c0, rt0.c3, v0.c2, rt0.c1, rt0.c5, rt0.c0, v0.c1, rt0.c4 FROM rt0, t0, v0 WHERE ((((((CAST(v0.c0 AS BLOB)))<((CAST(v0.c0 AS INTEGER))))) ISNULL));
SELECT rt0.c2, t0.c0, rt0.c6, v0.c0, rt0.c3, v0.c2, rt0.c1, rt0.c5, rt0.c0, v0.c1, rt0.c4 FROM rt0, t0, v0;
SELECT DISTINCT rt0.c0, rt0.c6, rt0.c4, rt0.c1, v0.c1 FROM v0, rt0;
SELECT DISTINCT rt0.c0, rt0.c6, rt0.c4, rt0.c1, v0.c1 FROM v0, rt0 WHERE (PRINTF(rt0.c2 COLLATE NOCASE)) UNION SELECT DISTINCT rt0.c0, rt0.c6, rt0.c4, rt0.c1, v0.c1 FROM v0, rt0 WHERE ((NOT (PRINTF(rt0.c2 COLLATE NOCASE)))) UNION SELECT DISTINCT rt0.c0, rt0.c6, rt0.c4, rt0.c1, v0.c1 FROM v0, rt0 WHERE (((PRINTF(rt0.c2 COLLATE NOCASE)) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c6, rt0.c4, rt0.c1, v0.c1 FROM v0, rt0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE ((((v0.c0)IS NOT(v0.c0)) IN ())) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT ((((v0.c0)IS NOT(v0.c0)) IN ())))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((((((v0.c0)IS NOT(v0.c0)) IN ())) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL rt0.c2, rt0.c3, rt0.c6, rt0.c0, v0.c0 FROM t0, v0 CROSS JOIN rt0 ON ((('-896819977') IS TRUE) IN (((v0.c1) NOTNULL))) GROUP BY rt0.c2, rt0.c3, rt0.c6, rt0.c0, v0.c0;
SELECT rt0.c2, rt0.c3, rt0.c6, rt0.c0, v0.c0 FROM t0, v0 CROSS JOIN rt0 ON ((('-896819977') IS TRUE) IN (((v0.c1) NOTNULL))) GROUP BY rt0.c2, rt0.c3, rt0.c6, rt0.c0, v0.c0 HAVING SUM(SUM(SUM(COUNT(MIN(v0.c2)))) COLLATE BINARY) UNION ALL SELECT ALL rt0.c2, rt0.c3, rt0.c6, rt0.c0, v0.c0 FROM t0, v0 CROSS JOIN rt0 ON ((('-896819977') IS TRUE) IN (((v0.c1) NOTNULL))) GROUP BY rt0.c2, rt0.c3, rt0.c6, rt0.c0, v0.c0 HAVING (NOT (SUM(SUM(SUM(COUNT(MIN(v0.c2)))) COLLATE BINARY))) UNION ALL SELECT ALL rt0.c2, rt0.c3, rt0.c6, rt0.c0, v0.c0 FROM t0, v0 CROSS JOIN rt0 ON ((('-896819977') IS TRUE) IN (((v0.c1) NOTNULL))) GROUP BY rt0.c2, rt0.c3, rt0.c6, rt0.c0, v0.c0 HAVING ((SUM(SUM(SUM(COUNT(MIN(v0.c2)))) COLLATE BINARY)) ISNULL);
SELECT ALL t0.c0, v0.c1, v0.c2, v0.c0 FROM t0, v0;
SELECT t0.c0, v0.c1, v0.c2, v0.c0 FROM t0, v0 WHERE (CAST(((((v0.c1)AND(v0.c2)))AND(v0.c2)) AS NUMERIC)) UNION ALL SELECT t0.c0, v0.c1, v0.c2, v0.c0 FROM t0, v0 WHERE ((NOT (CAST(((((v0.c1)AND(v0.c2)))AND(v0.c2)) AS NUMERIC)))) UNION ALL SELECT ALL t0.c0, v0.c1, v0.c2, v0.c0 FROM t0, v0 WHERE (((CAST(((((v0.c1)AND(v0.c2)))AND(v0.c2)) AS NUMERIC)) ISNULL));
SELECT ALL t0.c0, v0.c1, v0.c2, v0.c0 FROM t0, v0;
SELECT DISTINCT t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0 WHERE ((((((((((t0.c0 IN ()))OR(((t0.c0)>(t0.c0)))))OR(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))))AND(NULL)))OR(((t0.c0) IS TRUE)))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((NOT ((((((((((t0.c0 IN ()))OR(((t0.c0)>(t0.c0)))))OR(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))))AND(NULL)))OR(((t0.c0) IS TRUE)))))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((((((((((((t0.c0 IN ()))OR(((t0.c0)>(t0.c0)))))OR(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))))AND(NULL)))OR(((t0.c0) IS TRUE)))) ISNULL));
SELECT DISTINCT t0.c0 FROM t0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 WHERE (((((CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END)AND(((t0.c0) IS FALSE))))AND('' COLLATE BINARY))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT (((((CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END)AND(((t0.c0) IS FALSE))))AND('' COLLATE BINARY))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE (((((((CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END)AND(((t0.c0) IS FALSE))))AND('' COLLATE BINARY))) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL rt0.c6, t0.c0, rt0.c5, rt0.c0 FROM v0, t0, rt0 GROUP BY rt0.c6, t0.c0, rt0.c5, rt0.c0;
SELECT ALL rt0.c6, t0.c0, rt0.c5, rt0.c0 FROM v0, t0, rt0 GROUP BY rt0.c6, t0.c0, rt0.c5, rt0.c0 HAVING (rtreenode(rt0.c5, GROUP_CONCAT(rt0.c2)) IN ()) UNION ALL SELECT ALL rt0.c6, t0.c0, rt0.c5, rt0.c0 FROM v0, t0, rt0 GROUP BY rt0.c6, t0.c0, rt0.c5, rt0.c0 HAVING (NOT ((rtreenode(rt0.c5, GROUP_CONCAT(rt0.c2)) IN ()))) UNION ALL SELECT ALL rt0.c6, t0.c0, rt0.c5, rt0.c0 FROM v0, t0, rt0 GROUP BY rt0.c6, t0.c0, rt0.c5, rt0.c0 HAVING (((rtreenode(rt0.c5, GROUP_CONCAT(rt0.c2)) IN ())) ISNULL);
SELECT ALL rt0.c6, t0.c0, rt0.c5, rt0.c0 FROM v0, t0, rt0 GROUP BY rt0.c6, t0.c0, rt0.c5, rt0.c0;
SELECT ALL rt0.c6, t0.c0, rt0.c5, rt0.c0 FROM v0, t0, rt0 GROUP BY rt0.c6, t0.c0, rt0.c5, rt0.c0 HAVING (rtreenode(rt0.c5, GROUP_CONCAT(rt0.c2)) IN ()) UNION ALL SELECT ALL rt0.c6, t0.c0, rt0.c5, rt0.c0 FROM v0, t0, rt0 GROUP BY rt0.c6, t0.c0, rt0.c5, rt0.c0 HAVING (NOT ((rtreenode(rt0.c5, GROUP_CONCAT(rt0.c2)) IN ()))) UNION ALL SELECT ALL rt0.c6, t0.c0, rt0.c5, rt0.c0 FROM v0, t0, rt0 GROUP BY rt0.c6, t0.c0, rt0.c5, rt0.c0 HAVING (((rtreenode(rt0.c5, GROUP_CONCAT(rt0.c2)) IN ())) ISNULL);
SELECT ALL rt0.c6, t0.c0, rt0.c5, rt0.c0 FROM v0, t0, rt0 GROUP BY rt0.c6, t0.c0, rt0.c5, rt0.c0;
SELECT ALL * FROM t0, v0, rt0;
SELECT * FROM t0, v0, rt0 WHERE (((2.099260253E9)>=(0.9128832444706155))) UNION ALL SELECT * FROM t0, v0, rt0 WHERE ((NOT (((2.099260253E9)>=(0.9128832444706155))))) UNION ALL SELECT * FROM t0, v0, rt0 WHERE (((((2.099260253E9)>=(0.9128832444706155))) ISNULL));
SELECT ALL * FROM t0, v0, rt0;
SELECT DISTINCT rt0.c3, rt0.c4, rt0.c5 FROM v0, rt0;
SELECT DISTINCT rt0.c3, rt0.c4, rt0.c5 FROM v0, rt0 WHERE (CAST(CASE v0.c1  WHEN rt0.c2 THEN v0.c1 ELSE v0.c1 END AS REAL)) UNION SELECT DISTINCT rt0.c3, rt0.c4, rt0.c5 FROM v0, rt0 WHERE ((NOT (CAST(CASE v0.c1  WHEN rt0.c2 THEN v0.c1 ELSE v0.c1 END AS REAL)))) UNION SELECT DISTINCT rt0.c3, rt0.c4, rt0.c5 FROM v0, rt0 WHERE (((CAST(CASE v0.c1  WHEN rt0.c2 THEN v0.c1 ELSE v0.c1 END AS REAL)) ISNULL));
SELECT DISTINCT rt0.c3, rt0.c4, rt0.c5 FROM v0, rt0;
SELECT ALL v0.c1, rt0.c2, rt0.c0, t0.c0, rt0.c5, rt0.c1, rt0.c3 FROM rt0, v0, t0 GROUP BY v0.c1, rt0.c2, rt0.c0, t0.c0, rt0.c5, rt0.c1, rt0.c3;
SELECT v0.c1, rt0.c2, rt0.c0, t0.c0, rt0.c5, rt0.c1, rt0.c3 FROM rt0 NOT INDEXED, v0, t0 WHERE (CASE WHEN ((rt0.c6)IS(rt0.c5)) THEN ((((rt0.c4)OR(rt0.c4)))OR(t0.c0)) WHEN ((t0.c0) BETWEEN (v0.c1) AND (rt0.c6)) THEN SQLITE_COMPILEOPTION_GET(t0.c0) WHEN CAST(v0.c1 AS NUMERIC) THEN ((rt0.c5)+(rt0.c5)) ELSE CASE WHEN rt0.c6 THEN rt0.c3 WHEN v0.c2 THEN rt0.c1 WHEN rt0.c0 THEN NULL END END) GROUP BY v0.c1, rt0.c2, rt0.c0, t0.c0, rt0.c5, rt0.c1, rt0.c3 UNION SELECT v0.c1, rt0.c2, rt0.c0, t0.c0, rt0.c5, rt0.c1, rt0.c3 FROM rt0 NOT INDEXED, v0, t0 WHERE ((NOT (CASE WHEN ((rt0.c6)IS(rt0.c5)) THEN ((((rt0.c4)OR(rt0.c4)))OR(t0.c0)) WHEN ((t0.c0) BETWEEN (v0.c1) AND (rt0.c6)) THEN SQLITE_COMPILEOPTION_GET(t0.c0) WHEN CAST(v0.c1 AS NUMERIC) THEN ((rt0.c5)+(rt0.c5)) ELSE CASE WHEN rt0.c6 THEN rt0.c3 WHEN v0.c2 THEN rt0.c1 WHEN rt0.c0 THEN NULL END END))) GROUP BY v0.c1, rt0.c2, rt0.c0, t0.c0, rt0.c5, rt0.c1, rt0.c3 UNION SELECT ALL v0.c1, rt0.c2, rt0.c0, t0.c0, rt0.c5, rt0.c1, rt0.c3 FROM rt0, v0, t0 WHERE (((CASE WHEN ((rt0.c6)IS(rt0.c5)) THEN ((((rt0.c4)OR(rt0.c4)))OR(t0.c0)) WHEN ((t0.c0) BETWEEN (v0.c1) AND (rt0.c6)) THEN SQLITE_COMPILEOPTION_GET(t0.c0) WHEN CAST(v0.c1 AS NUMERIC) THEN ((rt0.c5)+(rt0.c5)) ELSE CASE WHEN rt0.c6 THEN rt0.c3 WHEN v0.c2 THEN rt0.c1 WHEN rt0.c0 THEN NULL END END) ISNULL)) GROUP BY v0.c1, rt0.c2, rt0.c0, t0.c0, rt0.c5, rt0.c1, rt0.c3;
SELECT ALL v0.c1, rt0.c2, rt0.c0, t0.c0, rt0.c5, rt0.c1, rt0.c3 FROM rt0, v0, t0 GROUP BY v0.c1, rt0.c2, rt0.c0, t0.c0, rt0.c5, rt0.c1, rt0.c3;
SELECT ALL v0.c2, v0.c1 FROM v0 GROUP BY v0.c2, v0.c1;
SELECT ALL v0.c2, v0.c1 FROM v0 GROUP BY v0.c2, v0.c1 HAVING MAX(AVG(TOTAL(v0.c0))) UNION ALL SELECT ALL v0.c2, v0.c1 FROM v0 GROUP BY v0.c2, v0.c1 HAVING (NOT (MAX(AVG(TOTAL(v0.c0))))) UNION ALL SELECT v0.c2, v0.c1 FROM v0 GROUP BY v0.c2, v0.c1 HAVING ((MAX(AVG(TOTAL(v0.c0)))) ISNULL);
SELECT ALL MIN(ROUND(((((v0.c1)AND(v0.c2)))OR(t0.c0)), CAST(v0.c0 AS TEXT))) FROM v0, t0 ORDER BY ((((((t0.c0)OR(v0.c0)))AND(v0.c2))) IS FALSE);
SELECT ALL * FROM v0, t0 NOT INDEXED, rt0;
SELECT ALL * FROM v0, t0, rt0 WHERE (0.04798334422334427) UNION ALL SELECT ALL * FROM v0, t0, rt0 WHERE ((NOT (0.04798334422334427))) UNION ALL SELECT ALL * FROM v0, t0, rt0 WHERE (((0.04798334422334427) ISNULL));
SELECT ALL * FROM v0, t0 NOT INDEXED, rt0;
SELECT DISTINCT * FROM v0, rt0;
SELECT DISTINCT * FROM v0, rt0 WHERE (0.7615615846511208) UNION SELECT DISTINCT * FROM v0, rt0 WHERE ((NOT (0.7615615846511208))) UNION SELECT DISTINCT * FROM v0, rt0 WHERE (((0.7615615846511208) ISNULL));
SELECT DISTINCT * FROM v0, rt0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE ((((((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, 0.36419000389545775)))) BETWEEN ('') AND ((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0)))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT ((((((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, 0.36419000389545775)))) BETWEEN ('') AND ((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0)))))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((((((((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, 0.36419000389545775)))) BETWEEN ('') AND ((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0)))))) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT v0.c0, v0.c1, v0.c2 FROM v0 GROUP BY v0.c0, v0.c1, v0.c2;
SELECT v0.c0, v0.c1, v0.c2 FROM v0 GROUP BY v0.c0, v0.c1, v0.c2 HAVING x'79e3' COLLATE NOCASE UNION ALL SELECT ALL v0.c0, v0.c1, v0.c2 FROM v0 GROUP BY v0.c0, v0.c1, v0.c2 HAVING (NOT (x'79e3' COLLATE NOCASE)) UNION ALL SELECT v0.c0, v0.c1, v0.c2 FROM v0 GROUP BY v0.c0, v0.c1, v0.c2 HAVING ((x'79e3' COLLATE NOCASE) ISNULL);
SELECT v0.c0, v0.c1, v0.c2 FROM v0 GROUP BY v0.c0, v0.c1, v0.c2;
SELECT v0.c0, v0.c1, v0.c2 FROM v0 GROUP BY v0.c0, v0.c1, v0.c2 HAVING x'79e3' COLLATE NOCASE UNION ALL SELECT ALL v0.c0, v0.c1, v0.c2 FROM v0 GROUP BY v0.c0, v0.c1, v0.c2 HAVING (NOT (x'79e3' COLLATE NOCASE)) UNION ALL SELECT v0.c0, v0.c1, v0.c2 FROM v0 GROUP BY v0.c0, v0.c1, v0.c2 HAVING ((x'79e3' COLLATE NOCASE) ISNULL);
SELECT v0.c0, v0.c1, v0.c2 FROM v0 GROUP BY v0.c0, v0.c1, v0.c2;
SELECT ALL * FROM v0, t0;
SELECT * FROM v0, t0 WHERE (CAST(t0.c0 COLLATE NOCASE AS REAL)) UNION ALL SELECT * FROM v0, t0 WHERE ((NOT (CAST(t0.c0 COLLATE NOCASE AS REAL)))) UNION ALL SELECT ALL * FROM v0, t0 WHERE (((CAST(t0.c0 COLLATE NOCASE AS REAL)) ISNULL));
SELECT ALL * FROM v0, t0;
SELECT DISTINCT * FROM v0 RIGHT OUTER JOIN t0 ON ((((((((((((CHANGES())AND('-527499769')))AND((~ (rt0.c3)))))OR(((rt0.c5) BETWEEN (v0.c1) AND (rt0.c0)))))AND(((((rt0.c1)OR(rt0.c4)))OR(rt0.c6)))))AND(((v0.c0)|(v0.c2)))))OR(((rt0.c4) ISNULL))) INNER JOIN rt0 ON (~ ((((v0.c0))<=((rt0.c3)))));
SELECT ALL rt0.c5, rt0.c0, t0.c0, v0.c0, rt0.c1, rt0.c3, rt0.c4, v0.c2, rt0.c6, v0.c1, rt0.c2 FROM rt0 CROSS JOIN v0 ON ROUND(rt0.c5, x'') LEFT OUTER JOIN t0 ON ((((rt0.c2)LIKE(v0.c1))) NOT BETWEEN ((NOT (0.4628925319318832))) AND (CAST(v0.c2 AS REAL))) GROUP BY rt0.c5, rt0.c0, t0.c0, v0.c0, rt0.c1, rt0.c3, rt0.c4, v0.c2, rt0.c6, v0.c1, rt0.c2;
SELECT ALL rt0.c5, rt0.c0, t0.c0, v0.c0, rt0.c1, rt0.c3, rt0.c4, v0.c2, rt0.c6, v0.c1, rt0.c2 FROM rt0 CROSS JOIN v0 ON ROUND(rt0.c5, x'') LEFT OUTER JOIN t0 ON ((((rt0.c2)LIKE(v0.c1))) NOT BETWEEN ((NOT (0.4628925319318832))) AND (CAST(v0.c2 AS REAL))) WHERE ((v0.c2 IN (MAX(rt0.c6, v0.c1)))) GROUP BY rt0.c5, rt0.c0, t0.c0, v0.c0, rt0.c1, rt0.c3, rt0.c4, v0.c2, rt0.c6, v0.c1, rt0.c2 UNION SELECT rt0.c5, rt0.c0, t0.c0, v0.c0, rt0.c1, rt0.c3, rt0.c4, v0.c2, rt0.c6, v0.c1, rt0.c2 FROM rt0 CROSS JOIN v0 ON ROUND(rt0.c5, x'') LEFT OUTER JOIN t0 ON ((((rt0.c2)LIKE(v0.c1))) NOT BETWEEN ((NOT (0.4628925319318832))) AND (CAST(v0.c2 AS REAL))) WHERE ((NOT ((v0.c2 IN (MAX(rt0.c6, v0.c1)))))) GROUP BY rt0.c5, rt0.c0, t0.c0, v0.c0, rt0.c1, rt0.c3, rt0.c4, v0.c2, rt0.c6, v0.c1, rt0.c2 UNION SELECT rt0.c5, rt0.c0, t0.c0, v0.c0, rt0.c1, rt0.c3, rt0.c4, v0.c2, rt0.c6, v0.c1, rt0.c2 FROM rt0 CROSS JOIN v0 ON ROUND(rt0.c5, x'') LEFT OUTER JOIN t0 ON ((((rt0.c2)LIKE(v0.c1))) NOT BETWEEN ((NOT (0.4628925319318832))) AND (CAST(v0.c2 AS REAL))) WHERE ((((v0.c2 IN (MAX(rt0.c6, v0.c1)))) ISNULL)) GROUP BY rt0.c5, rt0.c0, t0.c0, v0.c0, rt0.c1, rt0.c3, rt0.c4, v0.c2, rt0.c6, v0.c1, rt0.c2;
SELECT ALL rt0.c5, rt0.c0, t0.c0, v0.c0, rt0.c1, rt0.c3, rt0.c4, v0.c2, rt0.c6, v0.c1, rt0.c2 FROM rt0 CROSS JOIN v0 ON ROUND(rt0.c5, x'') LEFT OUTER JOIN t0 ON ((((rt0.c2)LIKE(v0.c1))) NOT BETWEEN ((NOT (0.4628925319318832))) AND (CAST(v0.c2 AS REAL))) GROUP BY rt0.c5, rt0.c0, t0.c0, v0.c0, rt0.c1, rt0.c3, rt0.c4, v0.c2, rt0.c6, v0.c1, rt0.c2;
SELECT ALL v0.c0, v0.c1, rt0.c5, t0.c0, rt0.c0, rt0.c6, rt0.c2, v0.c2 FROM v0, t0, rt0 GROUP BY v0.c0, v0.c1, rt0.c5, t0.c0, rt0.c0, rt0.c6, rt0.c2, v0.c2;
SELECT v0.c0, v0.c1, rt0.c5, t0.c0, rt0.c0, rt0.c6, rt0.c2, v0.c2 FROM v0, t0, rt0 GROUP BY v0.c0, v0.c1, rt0.c5, t0.c0, rt0.c0, rt0.c6, rt0.c2, v0.c2 HAVING AVG(((rt0.c2) NOT BETWEEN (rt0.c6) AND (COUNT(*)))) UNION ALL SELECT v0.c0, v0.c1, rt0.c5, t0.c0, rt0.c0, rt0.c6, rt0.c2, v0.c2 FROM v0, t0, rt0 GROUP BY v0.c0, v0.c1, rt0.c5, t0.c0, rt0.c0, rt0.c6, rt0.c2, v0.c2 HAVING (NOT (AVG(((rt0.c2) NOT BETWEEN (rt0.c6) AND (COUNT(*)))))) UNION ALL SELECT ALL v0.c0, v0.c1, rt0.c5, t0.c0, rt0.c0, rt0.c6, rt0.c2, v0.c2 FROM v0, t0, rt0 GROUP BY v0.c0, v0.c1, rt0.c5, t0.c0, rt0.c0, rt0.c6, rt0.c2, v0.c2 HAVING ((AVG(((rt0.c2) NOT BETWEEN (rt0.c6) AND (COUNT(*))))) ISNULL);
SELECT t0.c0 FROM t0;
SELECT t0.c0 FROM t0 WHERE (((((t0.c0)/(t0.c0)))!=(CASE WHEN t0.c0 THEN t0.c0 END))) UNION ALL SELECT t0.c0 FROM t0 NOT INDEXED WHERE ((NOT (((((t0.c0)/(t0.c0)))!=(CASE WHEN t0.c0 THEN t0.c0 END))))) UNION ALL SELECT t0.c0 FROM t0 WHERE (((((((t0.c0)/(t0.c0)))<>(CASE WHEN t0.c0 THEN t0.c0 END))) ISNULL));
SELECT t0.c0 FROM t0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (COALESCE(DISTINCT t0.c0, t0.c0) COLLATE BINARY) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (COALESCE(DISTINCT t0.c0, t0.c0) COLLATE BINARY))) UNION SELECT DISTINCT * FROM t0 WHERE (((COALESCE(DISTINCT t0.c0, t0.c0) COLLATE BINARY) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT ALL rt0.c1, rt0.c4, rt0.c3, v0.c0, rt0.c6, rt0.c5, rt0.c0, rt0.c2 FROM rt0, v0 GROUP BY rt0.c1, rt0.c4, rt0.c3, v0.c0, rt0.c6, rt0.c5, rt0.c0, rt0.c2;
SELECT rt0.c1, rt0.c4, rt0.c3, v0.c0, rt0.c6, rt0.c5, rt0.c0, rt0.c2 FROM rt0, v0 WHERE ((((rt0.c3)) NOT BETWEEN ((((rt0.c1)>>(rt0.c3)))) AND ((TRIM(rt0.c5))))) GROUP BY rt0.c1, rt0.c4, rt0.c3, v0.c0, rt0.c6, rt0.c5, rt0.c0, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c4, rt0.c3, v0.c0, rt0.c6, rt0.c5, rt0.c0, rt0.c2 FROM rt0, v0 WHERE ((NOT ((((rt0.c3)) NOT BETWEEN ((((rt0.c1)>>(rt0.c3)))) AND ((TRIM(rt0.c5))))))) GROUP BY rt0.c1, rt0.c4, rt0.c3, v0.c0, rt0.c6, rt0.c5, rt0.c0, rt0.c2 UNION SELECT rt0.c1, rt0.c4, rt0.c3, v0.c0, rt0.c6, rt0.c5, rt0.c0, rt0.c2 FROM rt0, v0 WHERE ((((((rt0.c3)) NOT BETWEEN ((((rt0.c1)>>(rt0.c3)))) AND ((TRIM(rt0.c5))))) ISNULL)) GROUP BY rt0.c1, rt0.c4, rt0.c3, v0.c0, rt0.c6, rt0.c5, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c4, rt0.c3, v0.c0, rt0.c6, rt0.c5, rt0.c0, rt0.c2 FROM rt0, v0 GROUP BY rt0.c1, rt0.c4, rt0.c3, v0.c0, rt0.c6, rt0.c5, rt0.c0, rt0.c2;
SELECT v0.c1, rt0.c0, v0.c0, rt0.c3, v0.c2, rt0.c5, rt0.c6, t0.c0, rt0.c2 FROM v0, rt0, t0 GROUP BY v0.c1, rt0.c0, v0.c0, rt0.c3, v0.c2, rt0.c5, rt0.c6, t0.c0, rt0.c2;
SELECT v0.c1, rt0.c0, v0.c0, rt0.c3, v0.c2, rt0.c5, rt0.c6, t0.c0, rt0.c2 FROM v0, rt0, t0 GROUP BY v0.c1, rt0.c0, v0.c0, rt0.c3, v0.c2, rt0.c5, rt0.c6, t0.c0, rt0.c2 HAVING (((AVG(t0.c0) IN ())) NOT NULL) UNION ALL SELECT ALL v0.c1, rt0.c0, v0.c0, rt0.c3, v0.c2, rt0.c5, rt0.c6, t0.c0, rt0.c2 FROM v0, rt0, t0 GROUP BY v0.c1, rt0.c0, v0.c0, rt0.c3, v0.c2, rt0.c5, rt0.c6, t0.c0, rt0.c2 HAVING (NOT ((((AVG(t0.c0) IN ())) NOT NULL))) UNION ALL SELECT v0.c1, rt0.c0, v0.c0, rt0.c3, v0.c2, rt0.c5, rt0.c6, t0.c0, rt0.c2 FROM v0, rt0, t0 GROUP BY v0.c1, rt0.c0, v0.c0, rt0.c3, v0.c2, rt0.c5, rt0.c6, t0.c0, rt0.c2 HAVING (((((AVG(t0.c0) IN ())) NOT NULL)) ISNULL);
SELECT v0.c1, rt0.c0, v0.c0, rt0.c3, v0.c2, rt0.c5, rt0.c6, t0.c0, rt0.c2 FROM v0, rt0, t0 GROUP BY v0.c1, rt0.c0, v0.c0, rt0.c3, v0.c2, rt0.c5, rt0.c6, t0.c0, rt0.c2;
SELECT v0.c1, rt0.c0, v0.c0, rt0.c3, v0.c2, rt0.c5, rt0.c6, t0.c0, rt0.c2 FROM v0, rt0, t0 GROUP BY v0.c1, rt0.c0, v0.c0, rt0.c3, v0.c2, rt0.c5, rt0.c6, t0.c0, rt0.c2 HAVING (((AVG(t0.c0) IN ())) NOT NULL) UNION ALL SELECT ALL v0.c1, rt0.c0, v0.c0, rt0.c3, v0.c2, rt0.c5, rt0.c6, t0.c0, rt0.c2 FROM v0, rt0, t0 GROUP BY v0.c1, rt0.c0, v0.c0, rt0.c3, v0.c2, rt0.c5, rt0.c6, t0.c0, rt0.c2 HAVING (NOT ((((AVG(t0.c0) IN ())) NOT NULL))) UNION ALL SELECT v0.c1, rt0.c0, v0.c0, rt0.c3, v0.c2, rt0.c5, rt0.c6, t0.c0, rt0.c2 FROM v0, rt0, t0 GROUP BY v0.c1, rt0.c0, v0.c0, rt0.c3, v0.c2, rt0.c5, rt0.c6, t0.c0, rt0.c2 HAVING (((((AVG(t0.c0) IN ())) NOT NULL)) ISNULL);
SELECT v0.c1, rt0.c0, v0.c0, rt0.c3, v0.c2, rt0.c5, rt0.c6, t0.c0, rt0.c2 FROM v0, rt0, t0 GROUP BY v0.c1, rt0.c0, v0.c0, rt0.c3, v0.c2, rt0.c5, rt0.c6, t0.c0, rt0.c2;
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE ((((((rt0.c2 IN ()))OR((((rt0.c6, rt0.c1, rt0.c1))>=((rt0.c1, rt0.c0, rt0.c1))))))OR(CASE NULL  WHEN rt0.c3 THEN rt0.c1 END))) UNION ALL SELECT * FROM rt0 WHERE ((NOT ((((((rt0.c2 IN ()))OR((((rt0.c6, rt0.c1, rt0.c1))>=((rt0.c1, rt0.c0, rt0.c1))))))OR(CASE NULL  WHEN rt0.c3 THEN rt0.c1 END))))) UNION ALL SELECT * FROM rt0 WHERE ((((((((rt0.c2 IN ()))OR((((rt0.c6, rt0.c1, rt0.c1))>=((rt0.c1, rt0.c0, rt0.c1))))))OR(CASE NULL  WHEN rt0.c3 THEN rt0.c1 END))) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT t0.c0, rt0.c2, v0.c1 FROM t0 RIGHT OUTER JOIN rt0 ON (((rt0.c6 IN (v0.c0))) NOTNULL) LEFT OUTER JOIN v0 ON CASE WHEN v0.c1 THEN rt0.c1 ELSE rt0.c3 END COLLATE BINARY COLLATE BINARY;
SELECT ALL v0.c0 FROM rt0, v0 GROUP BY v0.c0;
SELECT v0.c0 FROM rt0, v0 WHERE ((((rt0.c3 IN (rt0.c3)))<((((rt0.c5, v0.c1, rt0.c5)) NOT BETWEEN ((rt0.c3, rt0.c0, rt0.c2)) AND ((rt0.c4, rt0.c3, rt0.c3)))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM rt0, v0 WHERE ((NOT ((((rt0.c3 IN (rt0.c3)))<((((rt0.c5, v0.c1, rt0.c5)) NOT BETWEEN ((rt0.c3, rt0.c0, rt0.c2)) AND ((rt0.c4, rt0.c3, rt0.c3)))))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM rt0, v0 WHERE ((((((rt0.c3 IN (rt0.c3)))<((((rt0.c5, v0.c1, rt0.c5)) NOT BETWEEN ((rt0.c3, rt0.c0, rt0.c2)) AND ((rt0.c4, rt0.c3, rt0.c3)))))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM rt0, v0 GROUP BY v0.c0;
SELECT ALL t0.c0, v0.c1, v0.c0 FROM t0, v0 GROUP BY t0.c0, v0.c1, v0.c0;
SELECT t0.c0, v0.c1, v0.c0 FROM t0, v0 GROUP BY t0.c0, v0.c1, v0.c0 HAVING MAX(CAST(t0.c0 AS REAL)) UNION ALL SELECT ALL t0.c0, v0.c1, v0.c0 FROM t0, v0 GROUP BY t0.c0, v0.c1, v0.c0 HAVING (NOT (MAX(CAST(t0.c0 AS REAL)))) UNION ALL SELECT t0.c0, v0.c1, v0.c0 FROM t0, v0 GROUP BY t0.c0, v0.c1, v0.c0 HAVING ((MAX(CAST(t0.c0 AS REAL))) ISNULL);
SELECT ALL t0.c0, v0.c1, v0.c0 FROM t0, v0 GROUP BY t0.c0, v0.c1, v0.c0;
SELECT t0.c0, v0.c1, v0.c0 FROM t0, v0 GROUP BY t0.c0, v0.c1, v0.c0 HAVING MAX(CAST(t0.c0 AS REAL)) UNION ALL SELECT ALL t0.c0, v0.c1, v0.c0 FROM t0, v0 GROUP BY t0.c0, v0.c1, v0.c0 HAVING (NOT (MAX(CAST(t0.c0 AS REAL)))) UNION ALL SELECT t0.c0, v0.c1, v0.c0 FROM t0, v0 GROUP BY t0.c0, v0.c1, v0.c0 HAVING ((MAX(CAST(t0.c0 AS REAL))) ISNULL);
SELECT ALL t0.c0, v0.c1, v0.c0 FROM t0, v0 GROUP BY t0.c0, v0.c1, v0.c0;
SELECT v0.c2 FROM v0;
SELECT ALL v0.c2 FROM v0 WHERE (((v0.c2)<(v0.c1)) COLLATE NOCASE) UNION ALL SELECT ALL v0.c2 FROM v0 WHERE ((NOT (((v0.c2)<(v0.c1)) COLLATE NOCASE))) UNION ALL SELECT ALL v0.c2 FROM v0 WHERE (((((v0.c2)<(v0.c1)) COLLATE NOCASE) ISNULL));
SELECT v0.c2 FROM v0;
SELECT DISTINCT * FROM t0, rt0, v0;
SELECT DISTINCT * FROM t0, rt0, v0 WHERE (CASE rt0.c4  WHEN ((t0.c0)>>(v0.c1)) THEN v0.c1 COLLATE NOCASE WHEN ((v0.c0)IS NOT(v0.c1)) THEN CASE v0.c1  WHEN v0.c2 THEN rt0.c1 WHEN rt0.c4 THEN 0X604ec976 WHEN v0.c0 THEN rt0.c6 WHEN rt0.c3 THEN rt0.c3 WHEN v0.c0 THEN rt0.c2 WHEN v0.c0 THEN rt0.c2 WHEN v0.c1 THEN rt0.c6 END WHEN ((rt0.c2)LIKE(rt0.c4)) THEN CAST(rt0.c3 AS NUMERIC) ELSE json_array_length(rt0.c2, 0x59573d75) END) UNION SELECT DISTINCT * FROM t0, rt0, v0 WHERE ((NOT (CASE rt0.c4  WHEN ((t0.c0)>>(v0.c1)) THEN v0.c1 COLLATE NOCASE WHEN ((v0.c0)IS NOT(v0.c1)) THEN CASE v0.c1  WHEN v0.c2 THEN rt0.c1 WHEN rt0.c4 THEN 0x604ec976 WHEN v0.c0 THEN rt0.c6 WHEN rt0.c3 THEN rt0.c3 WHEN v0.c0 THEN rt0.c2 WHEN v0.c0 THEN rt0.c2 WHEN v0.c1 THEN rt0.c6 END WHEN ((rt0.c2)LIKE(rt0.c4)) THEN CAST(rt0.c3 AS NUMERIC) ELSE json_array_length(rt0.c2, 0x59573d75) END))) UNION SELECT DISTINCT * FROM t0, rt0, v0 WHERE (((CASE rt0.c4  WHEN ((t0.c0)>>(v0.c1)) THEN v0.c1 COLLATE NOCASE WHEN ((v0.c0)IS NOT(v0.c1)) THEN CASE v0.c1  WHEN v0.c2 THEN rt0.c1 WHEN rt0.c4 THEN 0X604ec976 WHEN v0.c0 THEN rt0.c6 WHEN rt0.c3 THEN rt0.c3 WHEN v0.c0 THEN rt0.c2 WHEN v0.c0 THEN rt0.c2 WHEN v0.c1 THEN rt0.c6 END WHEN ((rt0.c2)LIKE(rt0.c4)) THEN CAST(rt0.c3 AS NUMERIC) ELSE json_array_length(rt0.c2, 0x59573d75) END) ISNULL));
SELECT DISTINCT * FROM t0, rt0, v0;
SELECT rt0.c0, rt0.c1, t0.c0, rt0.c4, rt0.c3 FROM rt0, t0 GROUP BY rt0.c0, rt0.c1, t0.c0, rt0.c4, rt0.c3;
SELECT rt0.c0, rt0.c1, t0.c0, rt0.c4, rt0.c3 FROM rt0, t0 WHERE (((((((rt0.c3)AND(rt0.c1)))AND(rt0.c0)))>=(0x48ee1f73))) GROUP BY rt0.c0, rt0.c1, t0.c0, rt0.c4, rt0.c3 UNION SELECT ALL rt0.c0, rt0.c1, t0.c0, rt0.c4, rt0.c3 FROM rt0, t0 WHERE ((NOT (((((((rt0.c3)AND(rt0.c1)))AND(rt0.c0)))>=(0x48ee1f73))))) GROUP BY rt0.c0, rt0.c1, t0.c0, rt0.c4, rt0.c3 UNION SELECT rt0.c0, rt0.c1, t0.c0, rt0.c4, rt0.c3 FROM rt0, t0 WHERE (((((((((rt0.c3)AND(rt0.c1)))AND(rt0.c0)))>=(0X48ee1f73))) ISNULL)) GROUP BY rt0.c0, rt0.c1, t0.c0, rt0.c4, rt0.c3;
SELECT rt0.c0, rt0.c1, t0.c0, rt0.c4, rt0.c3 FROM rt0, t0 GROUP BY rt0.c0, rt0.c1, t0.c0, rt0.c4, rt0.c3;
SELECT ALL rt0.c2, t0.c0, rt0.c3, rt0.c5, rt0.c6, rt0.c1, rt0.c0, rt0.c4 FROM t0, rt0 GROUP BY rt0.c2, t0.c0, rt0.c3, rt0.c5, rt0.c6, rt0.c1, rt0.c0, rt0.c4;
SELECT ALL rt0.c2, t0.c0, rt0.c3, rt0.c5, rt0.c6, rt0.c1, rt0.c0, rt0.c4 FROM t0, rt0 GROUP BY rt0.c2, t0.c0, rt0.c3, rt0.c5, rt0.c6, rt0.c1, rt0.c0, rt0.c4 HAVING MIN(SUM(COUNT(*))) UNION ALL SELECT rt0.c2, t0.c0, rt0.c3, rt0.c5, rt0.c6, rt0.c1, rt0.c0, rt0.c4 FROM t0, rt0 NOT INDEXED GROUP BY rt0.c2, t0.c0, rt0.c3, rt0.c5, rt0.c6, rt0.c1, rt0.c0, rt0.c4 HAVING (NOT (MIN(SUM(COUNT(*))))) UNION ALL SELECT ALL rt0.c2, t0.c0, rt0.c3, rt0.c5, rt0.c6, rt0.c1, rt0.c0, rt0.c4 FROM t0, rt0 GROUP BY rt0.c2, t0.c0, rt0.c3, rt0.c5, rt0.c6, rt0.c1, rt0.c0, rt0.c4 HAVING ((MIN(SUM(COUNT(*)))) ISNULL);
SELECT ALL TOTAL(t0.c0) FROM t0;
SELECT ALL t0.c0 FROM t0;
SELECT ALL t0.c0 FROM t0 WHERE (CAST(((t0.c0)OR(t0.c0)) AS BLOB)) UNION ALL SELECT ALL t0.c0 FROM t0 WHERE ((NOT (CAST(((t0.c0)OR(t0.c0)) AS BLOB)))) UNION ALL SELECT t0.c0 FROM t0 WHERE (((CAST(((t0.c0)OR(t0.c0)) AS BLOB)) ISNULL));
SELECT ALL t0.c0 FROM t0;
SELECT DISTINCT * FROM rt0, v0;
SELECT DISTINCT * FROM rt0, v0 WHERE (((COALESCE(rt0.c0, v0.c0)) NOT BETWEEN (((rt0.c5)<<(v0.c2))) AND (CASE WHEN v0.c0 THEN rt0.c6 ELSE rt0.c2 END))) UNION SELECT DISTINCT * FROM rt0, v0 WHERE ((NOT (((COALESCE(rt0.c0, v0.c0)) NOT BETWEEN (((rt0.c5)<<(v0.c2))) AND (CASE WHEN v0.c0 THEN rt0.c6 ELSE rt0.c2 END))))) UNION SELECT DISTINCT * FROM rt0, v0 WHERE (((((COALESCE(rt0.c0, v0.c0)) NOT BETWEEN (((rt0.c5)<<(v0.c2))) AND (CASE WHEN v0.c0 THEN rt0.c6 ELSE rt0.c2 END))) ISNULL));
SELECT DISTINCT * FROM rt0, v0;
SELECT v0.c0, v0.c1, v0.c2 FROM v0 GROUP BY v0.c0, v0.c1, v0.c2;
SELECT ALL v0.c0, v0.c1, v0.c2 FROM v0 WHERE (v0.c2) GROUP BY v0.c0, v0.c1, v0.c2 UNION SELECT v0.c0, v0.c1, v0.c2 FROM v0 WHERE ((NOT (v0.c2))) GROUP BY v0.c0, v0.c1, v0.c2 UNION SELECT v0.c0, v0.c1, v0.c2 FROM v0 WHERE (((v0.c2) ISNULL)) GROUP BY v0.c0, v0.c1, v0.c2;
SELECT v0.c0, v0.c1, v0.c2 FROM v0 GROUP BY v0.c0, v0.c1, v0.c2;
SELECT ALL rt0.c5, rt0.c4 FROM t0, rt0 GROUP BY rt0.c5, rt0.c4;
SELECT ALL rt0.c5, rt0.c4 FROM t0, rt0 GROUP BY rt0.c5, rt0.c4 HAVING rt0.c2 UNION ALL SELECT rt0.c5, rt0.c4 FROM t0, rt0 GROUP BY rt0.c5, rt0.c4 HAVING (NOT (rt0.c2)) UNION ALL SELECT ALL rt0.c5, rt0.c4 FROM t0, rt0 GROUP BY rt0.c5, rt0.c4 HAVING ((rt0.c2) ISNULL);
SELECT ALL rt0.c5, rt0.c4 FROM t0, rt0 GROUP BY rt0.c5, rt0.c4;
SELECT ALL rt0.c5, rt0.c4 FROM t0, rt0 GROUP BY rt0.c5, rt0.c4 HAVING rt0.c2 UNION ALL SELECT rt0.c5, rt0.c4 FROM t0, rt0 GROUP BY rt0.c5, rt0.c4 HAVING (NOT (rt0.c2)) UNION ALL SELECT ALL rt0.c5, rt0.c4 FROM t0, rt0 GROUP BY rt0.c5, rt0.c4 HAVING ((rt0.c2) ISNULL);
SELECT ALL rt0.c5, rt0.c4 FROM t0, rt0 GROUP BY rt0.c5, rt0.c4;
SELECT ALL * FROM t0;
SELECT ALL * FROM t0 WHERE (CAST(((t0.c0)-(t0.c0)) AS TEXT)) UNION ALL SELECT ALL * FROM t0 WHERE ((NOT (CAST(((t0.c0)-(t0.c0)) AS TEXT)))) UNION ALL SELECT ALL * FROM t0 WHERE (((CAST(((t0.c0)-(t0.c0)) AS TEXT)) ISNULL));
SELECT ALL * FROM t0;
SELECT DISTINCT * FROM t0 CROSS JOIN rt0 ON CAST('-732070486' AS NUMERIC) RIGHT OUTER JOIN v0 ON IFNULL(((v0.c2)*(v0.c2)), x'');
SELECT DISTINCT * FROM t0 CROSS JOIN rt0 ON CAST('-732070486' AS NUMERIC) RIGHT OUTER JOIN v0 ON IFNULL(((v0.c2)*(v0.c2)), x'') WHERE (0.9086283473210289 COLLATE NOCASE) UNION SELECT DISTINCT * FROM t0 CROSS JOIN rt0 ON CAST('-732070486' AS NUMERIC) RIGHT OUTER JOIN v0 ON IFNULL(((v0.c2)*(v0.c2)), x'') WHERE ((NOT (0.9086283473210289 COLLATE NOCASE))) UNION SELECT DISTINCT * FROM t0 CROSS JOIN rt0 ON CAST('-732070486' AS NUMERIC) RIGHT OUTER JOIN v0 ON IFNULL(((v0.c2)*(v0.c2)), x'') WHERE (((0.9086283473210289 COLLATE NOCASE) ISNULL));
SELECT DISTINCT * FROM t0 CROSS JOIN rt0 ON CAST('-732070486' AS NUMERIC) RIGHT OUTER JOIN v0 ON IFNULL(((v0.c2)*(v0.c2)), x'');
SELECT v0.c1 FROM v0 GROUP BY v0.c1;
SELECT ALL v0.c1 FROM v0 WHERE (((((0xffffffffd45d7daa)OR(CAST(v0.c2 AS NUMERIC))))AND(((v0.c2)>=(v0.c0))))) GROUP BY v0.c1 UNION SELECT ALL v0.c1 FROM v0 WHERE ((NOT (((((0xffffffffd45d7daa)OR(CAST(v0.c2 AS NUMERIC))))AND(((v0.c2)>=(v0.c0))))))) GROUP BY v0.c1 UNION SELECT v0.c1 FROM v0 WHERE (((((((0Xffffffffd45d7daa)OR(CAST(v0.c2 AS NUMERIC))))AND(((v0.c2)>=(v0.c0))))) ISNULL)) GROUP BY v0.c1;
SELECT v0.c1 FROM v0 GROUP BY v0.c1;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING UPPER(MAX(0.5047146718572362)) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (UPPER(MAX(0.5047146718572362)))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((UPPER(MAX(0.5047146718572362))) ISNULL);
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING UPPER(MAX(0.5047146718572362)) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (UPPER(MAX(0.5047146718572362)))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((UPPER(MAX(0.5047146718572362))) ISNULL);
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT rt0.c2, rt0.c3, rt0.c4, rt0.c1, rt0.c0, rt0.c5, t0.c0, rt0.c6 FROM t0, rt0;
SELECT rt0.c2, rt0.c3, rt0.c4, rt0.c1, rt0.c0, rt0.c5, t0.c0, rt0.c6 FROM t0, rt0 WHERE ((~ ((rt0.c5 IN ())))) ORDER BY CASE WHEN ((((rt0.c6)OR(rt0.c4)))AND(rt0.c2)) THEN -1485138356 WHEN rt0.c0 COLLATE RTRIM THEN CAST(rt0.c1 AS REAL) WHEN (- (rt0.c0)) THEN ((rt0.c5) BETWEEN (rt0.c5) AND (rt0.c1)) END;
SELECT rt0.c2, rt0.c3, rt0.c4, rt0.c1, rt0.c0, rt0.c5, t0.c0, rt0.c6 FROM t0, rt0 WHERE ((NOT ((~ ((rt0.c5 IN ())))))) ORDER BY CASE WHEN ((((rt0.c6)OR(rt0.c4)))AND(rt0.c2)) THEN -1485138356 WHEN rt0.c0 COLLATE RTRIM THEN CAST(rt0.c1 AS REAL) WHEN (- (rt0.c0)) THEN ((rt0.c5) BETWEEN (rt0.c5) AND (rt0.c1)) END;
SELECT ALL rt0.c2, rt0.c3, rt0.c4, rt0.c1, rt0.c0, rt0.c5, t0.c0, rt0.c6 FROM t0, rt0 WHERE ((((~ ((rt0.c5 IN ())))) ISNULL)) ORDER BY CASE WHEN ((((rt0.c6)OR(rt0.c4)))AND(rt0.c2)) THEN -1485138356 WHEN rt0.c0 COLLATE RTRIM THEN CAST(rt0.c1 AS REAL) WHEN (- (rt0.c0)) THEN ((rt0.c5) BETWEEN (rt0.c5) AND (rt0.c1)) END;
SELECT rt0.c2, rt0.c3, rt0.c4, rt0.c1, rt0.c0, rt0.c5, t0.c0, rt0.c6 FROM t0, rt0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))) NOT BETWEEN (((t0.c0) IS FALSE)) AND (((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))) NOT BETWEEN (((t0.c0) IS FALSE)) AND (((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))))) UNION SELECT DISTINCT * FROM t0 WHERE (((((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))) NOT BETWEEN (((t0.c0) IS FALSE)) AND (((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT rt0.c2, rt0.c1, rt0.c6, rt0.c5, rt0.c0, rt0.c3, rt0.c4 FROM t0, rt0 GROUP BY rt0.c2, rt0.c1, rt0.c6, rt0.c5, rt0.c0, rt0.c3, rt0.c4;
SELECT rt0.c2, rt0.c1, rt0.c6, rt0.c5, rt0.c0, rt0.c3, rt0.c4 FROM t0, rt0 WHERE (((DATE(rt0.c4, rt0.c3, rt0.c2)) BETWEEN (((((t0.c0)AND(rt0.c2)))OR(rt0.c4))) AND (1.718507562E9))) GROUP BY rt0.c2, rt0.c1, rt0.c6, rt0.c5, rt0.c0, rt0.c3, rt0.c4 UNION SELECT ALL rt0.c2, rt0.c1, rt0.c6, rt0.c5, rt0.c0, rt0.c3, rt0.c4 FROM t0, rt0 WHERE ((NOT (((DATE(rt0.c4, rt0.c3, rt0.c2)) BETWEEN (((((t0.c0)AND(rt0.c2)))OR(rt0.c4))) AND (1.718507562E9))))) GROUP BY rt0.c2, rt0.c1, rt0.c6, rt0.c5, rt0.c0, rt0.c3, rt0.c4 UNION SELECT ALL rt0.c2, rt0.c1, rt0.c6, rt0.c5, rt0.c0, rt0.c3, rt0.c4 FROM t0, rt0 WHERE (((((DATE(rt0.c4, rt0.c3, rt0.c2)) BETWEEN (((((t0.c0)AND(rt0.c2)))OR(rt0.c4))) AND (1.718507562E9))) ISNULL)) GROUP BY rt0.c2, rt0.c1, rt0.c6, rt0.c5, rt0.c0, rt0.c3, rt0.c4;
SELECT rt0.c2, rt0.c1, rt0.c6, rt0.c5, rt0.c0, rt0.c3, rt0.c4 FROM t0, rt0 GROUP BY rt0.c2, rt0.c1, rt0.c6, rt0.c5, rt0.c0, rt0.c3, rt0.c4;
SELECT ALL rt0.c1, t0.c0, rt0.c0, rt0.c4, rt0.c2, rt0.c3 FROM t0, rt0 GROUP BY rt0.c1, t0.c0, rt0.c0, rt0.c4, rt0.c2, rt0.c3;
SELECT rt0.c1, t0.c0, rt0.c0, rt0.c4, rt0.c2, rt0.c3 FROM t0, rt0 GROUP BY rt0.c1, t0.c0, rt0.c0, rt0.c4, rt0.c2, rt0.c3 HAVING 0.9228393414668962 UNION ALL SELECT ALL rt0.c1, t0.c0, rt0.c0, rt0.c4, rt0.c2, rt0.c3 FROM t0, rt0 GROUP BY rt0.c1, t0.c0, rt0.c0, rt0.c4, rt0.c2, rt0.c3 HAVING (NOT (0.9228393414668962)) UNION ALL SELECT rt0.c1, t0.c0, rt0.c0, rt0.c4, rt0.c2, rt0.c3 FROM t0, rt0 GROUP BY rt0.c1, t0.c0, rt0.c0, rt0.c4, rt0.c2, rt0.c3 HAVING ((0.9228393414668962) ISNULL);
SELECT ALL rt0.c1, t0.c0, rt0.c0, rt0.c4, rt0.c2, rt0.c3 FROM t0, rt0 GROUP BY rt0.c1, t0.c0, rt0.c0, rt0.c4, rt0.c2, rt0.c3;
SELECT rt0.c1, t0.c0, rt0.c0, rt0.c4, rt0.c2, rt0.c3 FROM t0, rt0 GROUP BY rt0.c1, t0.c0, rt0.c0, rt0.c4, rt0.c2, rt0.c3 HAVING 0.9228393414668962 UNION ALL SELECT ALL rt0.c1, t0.c0, rt0.c0, rt0.c4, rt0.c2, rt0.c3 FROM t0, rt0 GROUP BY rt0.c1, t0.c0, rt0.c0, rt0.c4, rt0.c2, rt0.c3 HAVING (NOT (0.9228393414668962)) UNION ALL SELECT rt0.c1, t0.c0, rt0.c0, rt0.c4, rt0.c2, rt0.c3 FROM t0, rt0 GROUP BY rt0.c1, t0.c0, rt0.c0, rt0.c4, rt0.c2, rt0.c3 HAVING ((0.9228393414668962) ISNULL);
SELECT ALL rt0.c1, t0.c0, rt0.c0, rt0.c4, rt0.c2, rt0.c3 FROM t0, rt0 GROUP BY rt0.c1, t0.c0, rt0.c0, rt0.c4, rt0.c2, rt0.c3;
SELECT SUM(CASE WHEN ((rt0.c5)<=(rt0.c0)) THEN -0.0 ELSE rt0.c3 END) FROM t0, rt0;
SELECT rt0.c5, rt0.c0, rt0.c4, rt0.c6, rt0.c1, rt0.c2, rt0.c3, t0.c0 FROM rt0 NATURAL JOIN t0;
SELECT rt0.c5, rt0.c0, rt0.c4, rt0.c6, rt0.c1, rt0.c2, rt0.c3, t0.c0 FROM rt0 NATURAL JOIN t0 WHERE (CAST(((rt0.c5)<(t0.c0)) AS BLOB)) UNION ALL SELECT ALL rt0.c5, rt0.c0, rt0.c4, rt0.c6, rt0.c1, rt0.c2, rt0.c3, t0.c0 FROM rt0 NATURAL JOIN t0 WHERE ((NOT (CAST(((rt0.c5)<(t0.c0)) AS BLOB)))) UNION ALL SELECT ALL rt0.c5, rt0.c0, rt0.c4, rt0.c6, rt0.c1, rt0.c2, rt0.c3, t0.c0 FROM rt0 NATURAL JOIN t0 WHERE (((CAST(((rt0.c5)<(t0.c0)) AS BLOB)) ISNULL));
SELECT rt0.c5, rt0.c0, rt0.c4, rt0.c6, rt0.c1, rt0.c2, rt0.c3, t0.c0 FROM rt0 NATURAL JOIN t0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (LIKELIHOOD(DISTINCT ((rt0.c6) IS FALSE), 0.5687862021900602)) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (LIKELIHOOD(DISTINCT ((rt0.c6) IS FALSE), 0.5687862021900602)))) UNION SELECT DISTINCT * FROM rt0 WHERE (((LIKELIHOOD(DISTINCT ((rt0.c6) IS FALSE), 0.5687862021900602)) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL t0.c0, rt0.c1, rt0.c3, rt0.c0, rt0.c2, rt0.c4, v0.c0, v0.c1 FROM t0, v0 LEFT OUTER JOIN rt0 ON 0.8051272565506093 GROUP BY t0.c0, rt0.c1, rt0.c3, rt0.c0, rt0.c2, rt0.c4, v0.c0, v0.c1;
SELECT ALL t0.c0, rt0.c1, rt0.c3, rt0.c0, rt0.c2, rt0.c4, v0.c0, v0.c1 FROM t0, v0 LEFT OUTER JOIN rt0 ON 0.8051272565506093 WHERE (0.22408256486277) GROUP BY t0.c0, rt0.c1, rt0.c3, rt0.c0, rt0.c2, rt0.c4, v0.c0, v0.c1 UNION SELECT t0.c0, rt0.c1, rt0.c3, rt0.c0, rt0.c2, rt0.c4, v0.c0, v0.c1 FROM t0, v0 LEFT OUTER JOIN rt0 ON 0.8051272565506093 WHERE ((NOT (0.22408256486277))) GROUP BY t0.c0, rt0.c1, rt0.c3, rt0.c0, rt0.c2, rt0.c4, v0.c0, v0.c1 UNION SELECT t0.c0, rt0.c1, rt0.c3, rt0.c0, rt0.c2, rt0.c4, v0.c0, v0.c1 FROM t0, v0 LEFT OUTER JOIN rt0 ON 0.8051272565506093 WHERE (((0.22408256486277) ISNULL)) GROUP BY t0.c0, rt0.c1, rt0.c3, rt0.c0, rt0.c2, rt0.c4, v0.c0, v0.c1;
SELECT ALL t0.c0, rt0.c1, rt0.c3, rt0.c0, rt0.c2, rt0.c4, v0.c0, v0.c1 FROM t0, v0 LEFT OUTER JOIN rt0 ON 0.8051272565506093 GROUP BY t0.c0, rt0.c1, rt0.c3, rt0.c0, rt0.c2, rt0.c4, v0.c0, v0.c1;
SELECT ALL rt0.c4, rt0.c0, rt0.c5, rt0.c6, rt0.c3, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c4, rt0.c0, rt0.c5, rt0.c6, rt0.c3, rt0.c2, rt0.c1;
SELECT rt0.c4, rt0.c0, rt0.c5, rt0.c6, rt0.c3, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c4, rt0.c0, rt0.c5, rt0.c6, rt0.c3, rt0.c2, rt0.c1 HAVING ((MIN(rt0.c3)) NOT BETWEEN (LIKELY(SUM(TOTAL(AVG(AVG(COUNT(*))))))) AND (IFNULL(rt0.c6, rt0.c6))) UNION ALL SELECT ALL rt0.c4, rt0.c0, rt0.c5, rt0.c6, rt0.c3, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c4, rt0.c0, rt0.c5, rt0.c6, rt0.c3, rt0.c2, rt0.c1 HAVING (NOT (((MIN(rt0.c3)) NOT BETWEEN (LIKELY(SUM(TOTAL(AVG(AVG(COUNT(*))))))) AND (IFNULL(rt0.c6, rt0.c6))))) UNION ALL SELECT rt0.c4, rt0.c0, rt0.c5, rt0.c6, rt0.c3, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c4, rt0.c0, rt0.c5, rt0.c6, rt0.c3, rt0.c2, rt0.c1 HAVING ((((MIN(rt0.c3)) NOT BETWEEN (LIKELY(SUM(TOTAL(AVG(AVG(COUNT(*))))))) AND (IFNULL(rt0.c6, rt0.c6)))) ISNULL);
SELECT ALL v0.c0 FROM t0, v0 INNER JOIN rt0 ON rt0.c0;
SELECT v0.c0 FROM t0, v0 INNER JOIN rt0 ON rt0.c0 WHERE (((((((rt0.c2)OR(rt0.c6)))OR(rt0.c3)))&(CASE 0.2663715607034405  WHEN rt0.c4 THEN rt0.c6 END))) UNION ALL SELECT v0.c0 FROM t0, v0 INNER JOIN rt0 ON rt0.c0 WHERE ((NOT (((((((rt0.c2)OR(rt0.c6)))OR(rt0.c3)))&(CASE 0.2663715607034405  WHEN rt0.c4 THEN rt0.c6 END))))) UNION ALL SELECT ALL v0.c0 FROM t0, v0 INNER JOIN rt0 ON rt0.c0 WHERE (((((((((rt0.c2)OR(rt0.c6)))OR(rt0.c3)))&(CASE 0.2663715607034405  WHEN rt0.c4 THEN rt0.c6 END))) ISNULL));
SELECT ALL v0.c0 FROM t0, v0 INNER JOIN rt0 ON rt0.c0;
SELECT DISTINCT * FROM t0 INNER JOIN v0 ON (v0.c1 IN ()) COLLATE NOCASE;
SELECT DISTINCT * FROM t0 INNER JOIN v0 ON (v0.c1 IN ()) COLLATE NOCASE WHERE (((UNICODE(v0.c0)) NOT BETWEEN (0.039010621117439914) AND (((v0.c0)IS NOT(t0.c0))))) UNION SELECT DISTINCT * FROM t0 INNER JOIN v0 ON (v0.c1 IN ()) COLLATE NOCASE WHERE ((NOT (((UNICODE(v0.c0)) NOT BETWEEN (0.039010621117439914) AND (((v0.c0)IS NOT(t0.c0))))))) UNION SELECT DISTINCT * FROM t0 INNER JOIN v0 ON (v0.c1 IN ()) COLLATE NOCASE WHERE (((((UNICODE(v0.c0)) NOT BETWEEN (0.039010621117439914) AND (((v0.c0)IS NOT(t0.c0))))) ISNULL));
SELECT DISTINCT * FROM t0 INNER JOIN v0 ON (v0.c1 IN ()) COLLATE NOCASE;
SELECT ALL v0.c2, v0.c0 FROM t0, v0 GROUP BY v0.c2, v0.c0;
SELECT v0.c2, v0.c0 FROM t0, v0 WHERE (((((((v0.c2)AND(v0.c2)))OR(v0.c2))) NOT BETWEEN (NULLIF(v0.c1, t0.c0)) AND (((t0.c0) ISNULL)))) GROUP BY v0.c2, v0.c0 UNION SELECT v0.c2, v0.c0 FROM t0, v0 WHERE ((NOT (((((((v0.c2)AND(v0.c2)))OR(v0.c2))) NOT BETWEEN (NULLIF(v0.c1, t0.c0)) AND (((t0.c0) ISNULL)))))) GROUP BY v0.c2, v0.c0 UNION SELECT v0.c2, v0.c0 FROM t0, v0 WHERE (((((((((v0.c2)AND(v0.c2)))OR(v0.c2))) NOT BETWEEN (NULLIF(v0.c1, t0.c0)) AND (((t0.c0) ISNULL)))) ISNULL)) GROUP BY v0.c2, v0.c0;
SELECT ALL v0.c2, v0.c0 FROM t0, v0 GROUP BY v0.c2, v0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING MIN((+ (MIN(GROUP_CONCAT(MIN(t0.c0)))))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (MIN((+ (MIN(GROUP_CONCAT(MIN(t0.c0)))))))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((MIN((+ (MIN(GROUP_CONCAT(MIN(t0.c0))))))) ISNULL);
SELECT ALL rt0.c3, t0.c0, rt0.c4, rt0.c0 FROM t0, rt0;
SELECT ALL rt0.c3, t0.c0, rt0.c4, rt0.c0 FROM t0, rt0 WHERE ((((rt0.c5)) BETWEEN (((('0.8997983355678049') IS FALSE))) AND (((('1413040054') ISNULL))))) UNION ALL SELECT ALL rt0.c3, t0.c0, rt0.c4, rt0.c0 FROM t0, rt0 WHERE ((NOT ((((rt0.c5)) BETWEEN (((('0.8997983355678049') IS FALSE))) AND (((('1413040054') ISNULL))))))) UNION ALL SELECT ALL rt0.c3, t0.c0, rt0.c4, rt0.c0 FROM t0, rt0 WHERE ((((((rt0.c5)) BETWEEN (((('0.8997983355678049') IS FALSE))) AND (((('1413040054') ISNULL))))) ISNULL));
SELECT ALL rt0.c3, t0.c0, rt0.c4, rt0.c0 FROM t0, rt0;
SELECT DISTINCT * FROM t0, v0, rt0;
SELECT DISTINCT * FROM t0, v0, rt0 WHERE (NULL) UNION SELECT DISTINCT * FROM t0, v0, rt0 WHERE ((NOT (NULL))) UNION SELECT DISTINCT * FROM t0, v0, rt0 WHERE (((NULL) ISNULL));
SELECT DISTINCT * FROM t0, v0, rt0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 WHERE (((0.4533368888905296) IS FALSE)) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT (((0.4533368888905296) IS FALSE)))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 NOT INDEXED WHERE (((((0.4533368888905296) IS FALSE)) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL rt0.c0, rt0.c4, rt0.c3, rt0.c1 FROM rt0, v0 GROUP BY rt0.c0, rt0.c4, rt0.c3, rt0.c1;
SELECT ALL rt0.c0, rt0.c4, rt0.c3, rt0.c1 FROM rt0 NOT INDEXED, v0 GROUP BY rt0.c0, rt0.c4, rt0.c3, rt0.c1 HAVING CASE NULL  WHEN CAST(rt0.c1 AS TEXT) THEN (MIN(rt0.c6) IN ()) END UNION ALL SELECT ALL rt0.c0, rt0.c4, rt0.c3, rt0.c1 FROM rt0, v0 GROUP BY rt0.c0, rt0.c4, rt0.c3, rt0.c1 HAVING (NOT (CASE NULL  WHEN CAST(rt0.c1 AS TEXT) THEN (MIN(rt0.c6) IN ()) END)) UNION ALL SELECT ALL rt0.c0, rt0.c4, rt0.c3, rt0.c1 FROM rt0, v0 GROUP BY rt0.c0, rt0.c4, rt0.c3, rt0.c1 HAVING ((CASE NULL  WHEN CAST(rt0.c1 AS TEXT) THEN (MIN(rt0.c6) IN ()) END) ISNULL);
SELECT ALL rt0.c0, rt0.c4, rt0.c3, rt0.c1 FROM rt0, v0 GROUP BY rt0.c0, rt0.c4, rt0.c3, rt0.c1;
SELECT ALL rt0.c0, rt0.c4, rt0.c3, rt0.c1 FROM rt0 NOT INDEXED, v0 GROUP BY rt0.c0, rt0.c4, rt0.c3, rt0.c1 HAVING CASE NULL  WHEN CAST(rt0.c1 AS TEXT) THEN (MIN(rt0.c6) IN ()) END UNION ALL SELECT ALL rt0.c0, rt0.c4, rt0.c3, rt0.c1 FROM rt0, v0 GROUP BY rt0.c0, rt0.c4, rt0.c3, rt0.c1 HAVING (NOT (CASE NULL  WHEN CAST(rt0.c1 AS TEXT) THEN (MIN(rt0.c6) IN ()) END)) UNION ALL SELECT ALL rt0.c0, rt0.c4, rt0.c3, rt0.c1 FROM rt0, v0 GROUP BY rt0.c0, rt0.c4, rt0.c3, rt0.c1 HAVING ((CASE NULL  WHEN CAST(rt0.c1 AS TEXT) THEN (MIN(rt0.c6) IN ()) END) ISNULL);
SELECT ALL rt0.c0, rt0.c4, rt0.c3, rt0.c1 FROM rt0, v0 GROUP BY rt0.c0, rt0.c4, rt0.c3, rt0.c1;
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE (((((((((((rt0.c2)AND(rt0.c3)))AND(rt0.c2)))AND(rt0.c2)))AND(rt0.c5))) IS TRUE)) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (((((((((((rt0.c2)AND(rt0.c3)))AND(rt0.c2)))AND(rt0.c2)))AND(rt0.c5))) IS TRUE)))) UNION ALL SELECT * FROM rt0 WHERE (((((((((((((rt0.c2)AND(rt0.c3)))AND(rt0.c2)))AND(rt0.c2)))AND(rt0.c5))) IS TRUE)) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT v0.c2, rt0.c3, rt0.c5, rt0.c6, t0.c0 FROM rt0, v0 LEFT OUTER JOIN t0 ON ((((((((((((rt0.c6)OR(v0.c2)))OR(rt0.c3)))OR((((rt0.c4, v0.c0, rt0.c1)) NOT BETWEEN ((rt0.c5, rt0.c0, '-1840475113')) AND ((rt0.c3, rt0.c0, x''))))))AND(((rt0.c5) IS TRUE))))AND(((rt0.c2)*(v0.c1)))))AND((0.9037595512132908 IN ())));
SELECT DISTINCT v0.c2, rt0.c3, rt0.c5, rt0.c6, t0.c0 FROM rt0, v0 LEFT OUTER JOIN t0 ON ((((((((((((rt0.c6)OR(v0.c2)))OR(rt0.c3)))OR((((rt0.c4, v0.c0, rt0.c1)) NOT BETWEEN ((rt0.c5, rt0.c0, '-1840475113')) AND ((rt0.c3, rt0.c0, x''))))))AND(((rt0.c5) IS TRUE))))AND(((rt0.c2)*(v0.c1)))))AND((0.9037595512132908 IN ()))) WHERE (x'') UNION SELECT DISTINCT v0.c2, rt0.c3, rt0.c5, rt0.c6, t0.c0 FROM rt0, v0 LEFT OUTER JOIN t0 ON ((((((((((((rt0.c6)OR(v0.c2)))OR(rt0.c3)))OR((((rt0.c4, v0.c0, rt0.c1)) NOT BETWEEN ((rt0.c5, rt0.c0, '-1840475113')) AND ((rt0.c3, rt0.c0, x''))))))AND(((rt0.c5) IS TRUE))))AND(((rt0.c2)*(v0.c1)))))AND((0.9037595512132908 IN ()))) WHERE ((NOT (x''))) UNION SELECT DISTINCT v0.c2, rt0.c3, rt0.c5, rt0.c6, t0.c0 FROM rt0, v0 LEFT OUTER JOIN t0 ON ((((((((((((rt0.c6)OR(v0.c2)))OR(rt0.c3)))OR((((rt0.c4, v0.c0, rt0.c1)) NOT BETWEEN ((rt0.c5, rt0.c0, '-1840475113')) AND ((rt0.c3, rt0.c0, x''))))))AND(((rt0.c5) IS TRUE))))AND(((rt0.c2)*(v0.c1)))))AND((0.9037595512132908 IN ()))) WHERE (((x'') ISNULL));
SELECT DISTINCT v0.c2, rt0.c3, rt0.c5, rt0.c6, t0.c0 FROM rt0, v0 LEFT OUTER JOIN t0 ON ((((((((((((rt0.c6)OR(v0.c2)))OR(rt0.c3)))OR((((rt0.c4, v0.c0, rt0.c1)) NOT BETWEEN ((rt0.c5, rt0.c0, '-1840475113')) AND ((rt0.c3, rt0.c0, x''))))))AND(((rt0.c5) IS TRUE))))AND(((rt0.c2)*(v0.c1)))))AND((0.9037595512132908 IN ())));
SELECT v0.c1, v0.c0 FROM t0, v0 GROUP BY v0.c1, v0.c0;
SELECT ALL v0.c1, v0.c0 FROM t0, v0 WHERE (CAST(((v0.c0) BETWEEN (v0.c1) AND (v0.c2)) AS TEXT)) GROUP BY v0.c1, v0.c0 UNION SELECT ALL v0.c1, v0.c0 FROM t0, v0 WHERE ((NOT (CAST(((v0.c0) BETWEEN (v0.c1) AND (v0.c2)) AS TEXT)))) GROUP BY v0.c1, v0.c0 UNION SELECT v0.c1, v0.c0 FROM t0, v0 WHERE (((CAST(((v0.c0) BETWEEN (v0.c1) AND (v0.c2)) AS TEXT)) ISNULL)) GROUP BY v0.c1, v0.c0;
SELECT v0.c1, v0.c0 FROM t0, v0 GROUP BY v0.c1, v0.c0;
SELECT ALL rt0.c3, v0.c1, rt0.c4, t0.c0, v0.c0, rt0.c5, rt0.c6, rt0.c2 FROM t0, v0, rt0 GROUP BY rt0.c3, v0.c1, rt0.c4, t0.c0, v0.c0, rt0.c5, rt0.c6, rt0.c2;
SELECT ALL rt0.c3, v0.c1, rt0.c4, t0.c0, v0.c0, rt0.c5, rt0.c6, rt0.c2 FROM t0, v0, rt0 GROUP BY rt0.c3, v0.c1, rt0.c4, t0.c0, v0.c0, rt0.c5, rt0.c6, rt0.c2 HAVING SUM(0X707a2bd8) UNION ALL SELECT ALL rt0.c3, v0.c1, rt0.c4, t0.c0, v0.c0, rt0.c5, rt0.c6, rt0.c2 FROM t0, v0, rt0 GROUP BY rt0.c3, v0.c1, rt0.c4, t0.c0, v0.c0, rt0.c5, rt0.c6, rt0.c2 HAVING (NOT (SUM(0X707a2bd8))) UNION ALL SELECT ALL rt0.c3, v0.c1, rt0.c4, t0.c0, v0.c0, rt0.c5, rt0.c6, rt0.c2 FROM t0 NOT INDEXED, v0, rt0 GROUP BY rt0.c3, v0.c1, rt0.c4, t0.c0, v0.c0, rt0.c5, rt0.c6, rt0.c2 HAVING ((SUM(0x707a2bd8)) ISNULL);
SELECT ALL rt0.c3, v0.c1, rt0.c4, t0.c0, v0.c0, rt0.c5, rt0.c6, rt0.c2 FROM t0, v0, rt0 GROUP BY rt0.c3, v0.c1, rt0.c4, t0.c0, v0.c0, rt0.c5, rt0.c6, rt0.c2;
SELECT ALL rt0.c3, v0.c1, rt0.c4, t0.c0, v0.c0, rt0.c5, rt0.c6, rt0.c2 FROM t0, v0, rt0 GROUP BY rt0.c3, v0.c1, rt0.c4, t0.c0, v0.c0, rt0.c5, rt0.c6, rt0.c2 HAVING SUM(0X707a2bd8) UNION ALL SELECT ALL rt0.c3, v0.c1, rt0.c4, t0.c0, v0.c0, rt0.c5, rt0.c6, rt0.c2 FROM t0, v0, rt0 GROUP BY rt0.c3, v0.c1, rt0.c4, t0.c0, v0.c0, rt0.c5, rt0.c6, rt0.c2 HAVING (NOT (SUM(0X707a2bd8))) UNION ALL SELECT ALL rt0.c3, v0.c1, rt0.c4, t0.c0, v0.c0, rt0.c5, rt0.c6, rt0.c2 FROM t0 NOT INDEXED, v0, rt0 GROUP BY rt0.c3, v0.c1, rt0.c4, t0.c0, v0.c0, rt0.c5, rt0.c6, rt0.c2 HAVING ((SUM(0x707a2bd8)) ISNULL);
SELECT ALL rt0.c3, v0.c1, rt0.c4, t0.c0, v0.c0, rt0.c5, rt0.c6, rt0.c2 FROM t0, v0, rt0 GROUP BY rt0.c3, v0.c1, rt0.c4, t0.c0, v0.c0, rt0.c5, rt0.c6, rt0.c2;
SELECT rt0.c5, v0.c1, rt0.c6, rt0.c4, rt0.c2, rt0.c0, v0.c0 FROM t0, v0, rt0;
SELECT ALL rt0.c5, v0.c1, rt0.c6, rt0.c4, rt0.c2, rt0.c0, v0.c0 FROM t0, v0, rt0 WHERE (((('-983683299') IS FALSE) IN ())) UNION ALL SELECT ALL rt0.c5, v0.c1, rt0.c6, rt0.c4, rt0.c2, rt0.c0, v0.c0 FROM t0, v0, rt0 WHERE ((NOT (((('-983683299') IS FALSE) IN ())))) UNION ALL SELECT ALL rt0.c5, v0.c1, rt0.c6, rt0.c4, rt0.c2, rt0.c0, v0.c0 FROM t0, v0, rt0 WHERE (((((('-983683299') IS FALSE) IN ())) ISNULL));
SELECT rt0.c5, v0.c1, rt0.c6, rt0.c4, rt0.c2, rt0.c0, v0.c0 FROM t0, v0, rt0;
SELECT DISTINCT * FROM v0, t0, rt0;
SELECT DISTINCT * FROM v0, t0, rt0 WHERE (-1.485138356E9) UNION SELECT DISTINCT * FROM v0, t0, rt0 WHERE ((NOT (-1.485138356E9))) UNION SELECT DISTINCT * FROM v0, t0, rt0 WHERE (((-1.485138356E9) ISNULL));
SELECT DISTINCT * FROM v0, t0, rt0;
SELECT ALL rt0.c5, t0.c0, rt0.c3 FROM rt0, t0 GROUP BY rt0.c5, t0.c0, rt0.c3;
SELECT ALL rt0.c5, t0.c0, rt0.c3 FROM rt0, t0 WHERE (((rt0.c0) NOT BETWEEN ((t0.c0 IN ())) AND (((rt0.c6)%(rt0.c4))))) GROUP BY rt0.c5, t0.c0, rt0.c3 UNION SELECT rt0.c5, t0.c0, rt0.c3 FROM rt0, t0 WHERE ((NOT (((rt0.c0) NOT BETWEEN ((t0.c0 IN ())) AND (((rt0.c6)%(rt0.c4))))))) GROUP BY rt0.c5, t0.c0, rt0.c3 UNION SELECT ALL rt0.c5, t0.c0, rt0.c3 FROM rt0, t0 WHERE (((((rt0.c0) NOT BETWEEN ((t0.c0 IN ())) AND (((rt0.c6)%(rt0.c4))))) ISNULL)) GROUP BY rt0.c5, t0.c0, rt0.c3;
SELECT ALL rt0.c5, t0.c0, rt0.c3 FROM rt0, t0 GROUP BY rt0.c5, t0.c0, rt0.c3;
SELECT rt0.c3, v0.c1, rt0.c0, rt0.c1 FROM rt0, v0 GROUP BY rt0.c3, v0.c1, rt0.c0, rt0.c1;
SELECT ALL rt0.c3, v0.c1, rt0.c0, rt0.c1 FROM rt0, v0 GROUP BY rt0.c3, v0.c1, rt0.c0, rt0.c1 HAVING COUNT(((COUNT(v0.c1))<('-773920516'))) UNION ALL SELECT ALL rt0.c3, v0.c1, rt0.c0, rt0.c1 FROM rt0, v0 GROUP BY rt0.c3, v0.c1, rt0.c0, rt0.c1 HAVING (NOT (COUNT(((COUNT(v0.c1))<('-773920516'))))) UNION ALL SELECT ALL rt0.c3, v0.c1, rt0.c0, rt0.c1 FROM rt0, v0 GROUP BY rt0.c3, v0.c1, rt0.c0, rt0.c1 HAVING ((COUNT(((COUNT(v0.c1))<('-773920516')))) ISNULL);
SELECT v0.c1, rt0.c2, v0.c0 FROM rt0, t0, v0;
SELECT ALL v0.c1, rt0.c2, v0.c0 FROM rt0, t0, v0 WHERE ((- (CASE x''  WHEN t0.c0 THEN NULL WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 WHEN 0.9840678443157814 THEN rt0.c0 WHEN rt0.c5 THEN v0.c1 WHEN v0.c2 THEN rt0.c4 END))) UNION ALL SELECT ALL v0.c1, rt0.c2, v0.c0 FROM rt0, t0, v0 WHERE ((NOT ((- (CASE x''  WHEN t0.c0 THEN NULL WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 WHEN 0.9840678443157814 THEN rt0.c0 WHEN rt0.c5 THEN v0.c1 WHEN v0.c2 THEN rt0.c4 END))))) UNION ALL SELECT v0.c1, rt0.c2, v0.c0 FROM rt0, t0, v0 WHERE ((((- (CASE x''  WHEN t0.c0 THEN NULL WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 WHEN 0.9840678443157814 THEN rt0.c0 WHEN rt0.c5 THEN v0.c1 WHEN v0.c2 THEN rt0.c4 END))) ISNULL));
SELECT v0.c1, rt0.c2, v0.c0 FROM rt0, t0, v0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (((((((t0.c0)AND(t0.c0)))AND(t0.c0))) BETWEEN ((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((-144514573)))) AND (CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END))) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (((((((t0.c0)AND(t0.c0)))AND(t0.c0))) BETWEEN ((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((-144514573)))) AND (CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END))))) UNION SELECT DISTINCT * FROM t0 WHERE (((((((((t0.c0)AND(t0.c0)))AND(t0.c0))) BETWEEN ((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((-144514573)))) AND (CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END))) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT rt0.c2, rt0.c0, rt0.c4, rt0.c6 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c4, rt0.c6;
SELECT ALL rt0.c2, rt0.c0, rt0.c4, rt0.c6 FROM rt0 WHERE (((((rt0.c5, rt0.c6, rt0.c0)) NOT BETWEEN ((rt0.c1, rt0.c5, rt0.c0)) AND ((rt0.c3, rt0.c6, rt0.c0))) IN ())) GROUP BY rt0.c2, rt0.c0, rt0.c4, rt0.c6 UNION SELECT ALL rt0.c2, rt0.c0, rt0.c4, rt0.c6 FROM rt0 WHERE ((NOT (((((rt0.c5, rt0.c6, rt0.c0)) NOT BETWEEN ((rt0.c1, rt0.c5, rt0.c0)) AND ((rt0.c3, rt0.c6, rt0.c0))) IN ())))) GROUP BY rt0.c2, rt0.c0, rt0.c4, rt0.c6 UNION SELECT ALL rt0.c2, rt0.c0, rt0.c4, rt0.c6 FROM rt0 WHERE (((((((rt0.c5, rt0.c6, rt0.c0)) NOT BETWEEN ((rt0.c1, rt0.c5, rt0.c0)) AND ((rt0.c3, rt0.c6, rt0.c0))) IN ())) ISNULL)) GROUP BY rt0.c2, rt0.c0, rt0.c4, rt0.c6;
SELECT rt0.c2, rt0.c0, rt0.c4, rt0.c6 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c4, rt0.c6;
SELECT rt0.c3, rt0.c0 FROM rt0 GROUP BY rt0.c3, rt0.c0;
SELECT ALL rt0.c3, rt0.c0 FROM rt0 GROUP BY rt0.c3, rt0.c0 HAVING MAX(COUNT(MIN(rt0.c1))) UNION ALL SELECT ALL rt0.c3, rt0.c0 FROM rt0 GROUP BY rt0.c3, rt0.c0 HAVING (NOT (MAX(COUNT(MIN(rt0.c1))))) UNION ALL SELECT ALL rt0.c3, rt0.c0 FROM rt0 GROUP BY rt0.c3, rt0.c0 HAVING ((MAX(COUNT(MIN(rt0.c1)))) ISNULL);
SELECT ALL * FROM v0 LEFT OUTER JOIN t0 ON CAST(UNICODE(v0.c1) AS BLOB);
SELECT * FROM v0 LEFT OUTER JOIN t0 ON CAST(UNICODE(v0.c1) AS BLOB) WHERE (((((((((v0.c0)AND(t0.c0)))AND(v0.c0)))OR(((v0.c0)&(v0.c1)))))AND(COALESCE(v0.c2, v0.c2)))) UNION ALL SELECT ALL * FROM v0 LEFT OUTER JOIN t0 ON CAST(UNICODE(v0.c1) AS BLOB) WHERE ((NOT (((((((((v0.c0)AND(t0.c0)))AND(v0.c0)))OR(((v0.c0)&(v0.c1)))))AND(COALESCE(v0.c2, v0.c2)))))) UNION ALL SELECT ALL * FROM v0 LEFT OUTER JOIN t0 ON CAST(UNICODE(v0.c1) AS BLOB) WHERE (((((((((((v0.c0)AND(t0.c0)))AND(v0.c0)))OR(((v0.c0)&(v0.c1)))))AND(COALESCE(v0.c2, v0.c2)))) ISNULL));
SELECT ALL * FROM v0 LEFT OUTER JOIN t0 ON CAST(UNICODE(v0.c1) AS BLOB);
SELECT DISTINCT rt0.c4, rt0.c0, t0.c0, v0.c1, rt0.c6, v0.c2, rt0.c5, rt0.c3, rt0.c2, v0.c0 FROM t0, rt0, v0;
SELECT DISTINCT rt0.c4, rt0.c0, t0.c0, v0.c1, rt0.c6, v0.c2, rt0.c5, rt0.c3, rt0.c2, v0.c0 FROM t0, rt0, v0 WHERE (0.16797457362629498) UNION SELECT DISTINCT rt0.c4, rt0.c0, t0.c0, v0.c1, rt0.c6, v0.c2, rt0.c5, rt0.c3, rt0.c2, v0.c0 FROM t0, rt0, v0 WHERE ((NOT (0.16797457362629498))) UNION SELECT DISTINCT rt0.c4, rt0.c0, t0.c0, v0.c1, rt0.c6, v0.c2, rt0.c5, rt0.c3, rt0.c2, v0.c0 FROM t0, rt0, v0 WHERE (((0.16797457362629498) ISNULL));
SELECT DISTINCT rt0.c4, rt0.c0, t0.c0, v0.c1, rt0.c6, v0.c2, rt0.c5, rt0.c3, rt0.c2, v0.c0 FROM t0, rt0, v0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 WHERE ((CASE t0.c0  WHEN t0.c0 THEN t0.c0 END IN (CASE x''  WHEN t0.c0 THEN t0.c0 END))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT ((CASE t0.c0  WHEN t0.c0 THEN t0.c0 END IN (CASE x''  WHEN t0.c0 THEN t0.c0 END))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((((CASE t0.c0  WHEN t0.c0 THEN t0.c0 END IN (CASE x''  WHEN t0.c0 THEN t0.c0 END))) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL rt0.c5, v0.c0, rt0.c6 FROM rt0, v0 GROUP BY rt0.c5, v0.c0, rt0.c6;
SELECT ALL rt0.c5, v0.c0, rt0.c6 FROM rt0, v0 GROUP BY rt0.c5, v0.c0, rt0.c6 HAVING (GROUP_CONCAT(COUNT(*)) IN ()) UNION ALL SELECT ALL rt0.c5, v0.c0, rt0.c6 FROM rt0, v0 GROUP BY rt0.c5, v0.c0, rt0.c6 HAVING (NOT ((GROUP_CONCAT(COUNT(*)) IN ()))) UNION ALL SELECT rt0.c5, v0.c0, rt0.c6 FROM rt0, v0 GROUP BY rt0.c5, v0.c0, rt0.c6 HAVING (((GROUP_CONCAT(COUNT(*)) IN ())) ISNULL);
SELECT ALL rt0.c5, v0.c0, rt0.c6 FROM rt0, v0 GROUP BY rt0.c5, v0.c0, rt0.c6;
SELECT ALL rt0.c5, v0.c0, rt0.c6 FROM rt0, v0 GROUP BY rt0.c5, v0.c0, rt0.c6 HAVING (GROUP_CONCAT(COUNT(*)) IN ()) UNION ALL SELECT ALL rt0.c5, v0.c0, rt0.c6 FROM rt0, v0 GROUP BY rt0.c5, v0.c0, rt0.c6 HAVING (NOT ((GROUP_CONCAT(COUNT(*)) IN ()))) UNION ALL SELECT rt0.c5, v0.c0, rt0.c6 FROM rt0, v0 GROUP BY rt0.c5, v0.c0, rt0.c6 HAVING (((GROUP_CONCAT(COUNT(*)) IN ())) ISNULL);
SELECT ALL rt0.c5, v0.c0, rt0.c6 FROM rt0, v0 GROUP BY rt0.c5, v0.c0, rt0.c6;
SELECT ALL * FROM rt0;
SELECT * FROM rt0 WHERE ((((((rt0.c0))=((rt0.c1)))) NOT NULL)) UNION ALL SELECT * FROM rt0 WHERE ((NOT ((((((rt0.c0))==((rt0.c1)))) NOT NULL)))) UNION ALL SELECT * FROM rt0 WHERE ((((((((rt0.c0))==((rt0.c1)))) NOT NULL)) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT rt0.c3, rt0.c5, rt0.c6, t0.c0, rt0.c0, v0.c2, rt0.c1, v0.c0, rt0.c4 FROM rt0, v0 LEFT OUTER JOIN t0 ON CAST(CASE t0.c0  WHEN rt0.c2 THEN rt0.c4 ELSE t0.c0 END AS REAL);
SELECT DISTINCT rt0.c3, rt0.c5, rt0.c6, t0.c0, rt0.c0, v0.c2, rt0.c1, v0.c0, rt0.c4 FROM rt0, v0 LEFT OUTER JOIN t0 ON CAST(CASE t0.c0  WHEN rt0.c2 THEN rt0.c4 ELSE t0.c0 END AS REAL) WHERE (((rt0.c0) NOT BETWEEN (((t0.c0)-(rt0.c3))) AND (CAST(rt0.c2 AS INTEGER)))) UNION SELECT DISTINCT rt0.c3, rt0.c5, rt0.c6, t0.c0, rt0.c0, v0.c2, rt0.c1, v0.c0, rt0.c4 FROM rt0, v0 LEFT OUTER JOIN t0 ON CAST(CASE t0.c0  WHEN rt0.c2 THEN rt0.c4 ELSE t0.c0 END AS REAL) WHERE ((NOT (((rt0.c0) NOT BETWEEN (((t0.c0)-(rt0.c3))) AND (CAST(rt0.c2 AS INTEGER)))))) UNION SELECT DISTINCT rt0.c3, rt0.c5, rt0.c6, t0.c0, rt0.c0, v0.c2, rt0.c1, v0.c0, rt0.c4 FROM rt0, v0 LEFT OUTER JOIN t0 ON CAST(CASE t0.c0  WHEN rt0.c2 THEN rt0.c4 ELSE t0.c0 END AS REAL) WHERE (((((rt0.c0) NOT BETWEEN (((t0.c0)-(rt0.c3))) AND (CAST(rt0.c2 AS INTEGER)))) ISNULL));
SELECT DISTINCT rt0.c3, rt0.c5, rt0.c6, t0.c0, rt0.c0, v0.c2, rt0.c1, v0.c0, rt0.c4 FROM rt0, v0 LEFT OUTER JOIN t0 ON CAST(CASE t0.c0  WHEN rt0.c2 THEN rt0.c4 ELSE t0.c0 END AS REAL);
SELECT ALL rt0.c0, rt0.c6, t0.c0, rt0.c3, v0.c0, rt0.c5, v0.c2 FROM rt0, t0, v0 GROUP BY rt0.c0, rt0.c6, t0.c0, rt0.c3, v0.c0, rt0.c5, v0.c2;
SELECT rt0.c0, rt0.c6, t0.c0, rt0.c3, v0.c0, rt0.c5, v0.c2 FROM rt0, t0, v0 WHERE (CASE WHEN (- (rt0.c6)) THEN ((v0.c1) NOT BETWEEN (v0.c1) AND (rt0.c0)) WHEN (NOT (v0.c0)) THEN ((rt0.c4) NOT NULL) WHEN (~ (rt0.c5)) THEN DATETIME(rt0.c5, rt0.c6, rt0.c1) ELSE (((rt0.c0))==((v0.c1))) END) GROUP BY rt0.c0, rt0.c6, t0.c0, rt0.c3, v0.c0, rt0.c5, v0.c2 UNION SELECT rt0.c0, rt0.c6, t0.c0, rt0.c3, v0.c0, rt0.c5, v0.c2 FROM rt0, t0, v0 WHERE ((NOT (CASE WHEN (- (rt0.c6)) THEN ((v0.c1) NOT BETWEEN (v0.c1) AND (rt0.c0)) WHEN (NOT (v0.c0)) THEN ((rt0.c4) NOT NULL) WHEN (~ (rt0.c5)) THEN DATETIME(rt0.c5, rt0.c6, rt0.c1) ELSE (((rt0.c0))==((v0.c1))) END))) GROUP BY rt0.c0, rt0.c6, t0.c0, rt0.c3, v0.c0, rt0.c5, v0.c2 UNION SELECT rt0.c0, rt0.c6, t0.c0, rt0.c3, v0.c0, rt0.c5, v0.c2 FROM rt0, t0, v0 WHERE (((CASE WHEN (- (rt0.c6)) THEN ((v0.c1) NOT BETWEEN (v0.c1) AND (rt0.c0)) WHEN (NOT (v0.c0)) THEN ((rt0.c4) NOT NULL) WHEN (~ (rt0.c5)) THEN DATETIME(rt0.c5, rt0.c6, rt0.c1) ELSE (((rt0.c0))=((v0.c1))) END) ISNULL)) GROUP BY rt0.c0, rt0.c6, t0.c0, rt0.c3, v0.c0, rt0.c5, v0.c2;
SELECT ALL rt0.c0, rt0.c6, t0.c0, rt0.c3, v0.c0, rt0.c5, v0.c2 FROM rt0, t0, v0 GROUP BY rt0.c0, rt0.c6, t0.c0, rt0.c3, v0.c0, rt0.c5, v0.c2;
SELECT ALL rt0.c2, v0.c2, rt0.c6, v0.c0 FROM rt0, t0 LEFT OUTER JOIN v0 ON CASE rt0.c5  WHEN -2019102863 THEN rt0.c4 ELSE v0.c1 END COLLATE RTRIM GROUP BY rt0.c2, v0.c2, rt0.c6, v0.c0;
SELECT ALL rt0.c2, v0.c2, rt0.c6, v0.c0 FROM rt0, t0 LEFT OUTER JOIN v0 ON CASE rt0.c5  WHEN -2019102863 THEN rt0.c4 ELSE v0.c1 END COLLATE RTRIM GROUP BY rt0.c2, v0.c2, rt0.c6, v0.c0 HAVING AVG(AVG(MAX(rt0.c4))) UNION ALL SELECT rt0.c2, v0.c2, rt0.c6, v0.c0 FROM rt0, t0 LEFT OUTER JOIN v0 ON CASE rt0.c5  WHEN -2019102863 THEN rt0.c4 ELSE v0.c1 END COLLATE RTRIM GROUP BY rt0.c2, v0.c2, rt0.c6, v0.c0 HAVING (NOT (AVG(AVG(MAX(rt0.c4))))) UNION ALL SELECT ALL rt0.c2, v0.c2, rt0.c6, v0.c0 FROM rt0, t0 LEFT OUTER JOIN v0 ON CASE rt0.c5  WHEN -2019102863 THEN rt0.c4 ELSE v0.c1 END COLLATE RTRIM GROUP BY rt0.c2, v0.c2, rt0.c6, v0.c0 HAVING ((AVG(AVG(MAX(rt0.c4)))) ISNULL);
SELECT t0.c0, rt0.c0, v0.c0, rt0.c1, rt0.c2, rt0.c5, v0.c1, v0.c2 FROM t0, rt0, v0;
SELECT ALL t0.c0, rt0.c0, v0.c0, rt0.c1, rt0.c2, rt0.c5, v0.c1, v0.c2 FROM t0, rt0, v0 WHERE (json_quote(((((((((rt0.c0)OR(rt0.c6)))OR(t0.c0)))OR(rt0.c1)))AND(t0.c0)))) UNION ALL SELECT t0.c0, rt0.c0, v0.c0, rt0.c1, rt0.c2, rt0.c5, v0.c1, v0.c2 FROM t0, rt0, v0 WHERE ((NOT (json_quote(((((((((rt0.c0)OR(rt0.c6)))OR(t0.c0)))OR(rt0.c1)))AND(t0.c0)))))) UNION ALL SELECT ALL t0.c0, rt0.c0, v0.c0, rt0.c1, rt0.c2, rt0.c5, v0.c1, v0.c2 FROM t0, rt0, v0 WHERE (((json_quote(((((((((rt0.c0)OR(rt0.c6)))OR(t0.c0)))OR(rt0.c1)))AND(t0.c0)))) ISNULL));
SELECT t0.c0, rt0.c0, v0.c0, rt0.c1, rt0.c2, rt0.c5, v0.c1, v0.c2 FROM t0, rt0, v0;
SELECT DISTINCT v0.c2, v0.c1 FROM v0 INNER JOIN t0 ON CAST((t0.c0 IN (v0.c2)) AS BLOB);
SELECT DISTINCT v0.c2, v0.c1 FROM v0 INNER JOIN t0 ON CAST((t0.c0 IN (v0.c2)) AS BLOB) WHERE (((((((((((((DATETIME(v0.c2, t0.c0, v0.c0, v0.c2, t0.c0))OR(((v0.c1)+(v0.c1)))))OR(CAST(t0.c0 AS TEXT))))OR(UPPER(v0.c0))))OR(LENGTH(''))))AND(t0.c0)))AND(CAST(v0.c2 AS INTEGER)))) UNION SELECT DISTINCT v0.c2, v0.c1 FROM v0 INNER JOIN t0 ON CAST((t0.c0 IN (v0.c2)) AS BLOB) WHERE ((NOT (((((((((((((DATETIME(v0.c2, t0.c0, v0.c0, v0.c2, t0.c0))OR(((v0.c1)+(v0.c1)))))OR(CAST(t0.c0 AS TEXT))))OR(UPPER(v0.c0))))OR(LENGTH(''))))AND(t0.c0)))AND(CAST(v0.c2 AS INTEGER)))))) UNION SELECT DISTINCT v0.c2, v0.c1 FROM v0 INNER JOIN t0 ON CAST((t0.c0 IN (v0.c2)) AS BLOB) WHERE (((((((((((((((DATETIME(v0.c2, t0.c0, v0.c0, v0.c2, t0.c0))OR(((v0.c1)+(v0.c1)))))OR(CAST(t0.c0 AS TEXT))))OR(UPPER(v0.c0))))OR(LENGTH(''))))AND(t0.c0)))AND(CAST(v0.c2 AS INTEGER)))) ISNULL));
SELECT DISTINCT v0.c2, v0.c1 FROM v0 INNER JOIN t0 ON CAST((t0.c0 IN (v0.c2)) AS BLOB);
SELECT ALL v0.c1, rt0.c2, rt0.c4 FROM rt0, v0 GROUP BY v0.c1, rt0.c2, rt0.c4;
SELECT v0.c1, rt0.c2, rt0.c4 FROM rt0, v0 WHERE (v0.c0) GROUP BY v0.c1, rt0.c2, rt0.c4 UNION SELECT ALL v0.c1, rt0.c2, rt0.c4 FROM rt0, v0 WHERE ((NOT (v0.c0))) GROUP BY v0.c1, rt0.c2, rt0.c4 UNION SELECT v0.c1, rt0.c2, rt0.c4 FROM rt0, v0 WHERE (((v0.c0) ISNULL)) GROUP BY v0.c1, rt0.c2, rt0.c4;
SELECT ALL v0.c1, rt0.c2, rt0.c4 FROM rt0, v0 GROUP BY v0.c1, rt0.c2, rt0.c4;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((MAX(x''))LIKE(0x48f11b00)) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (((MAX(x''))LIKE(0x48f11b00)))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((((MAX(x''))LIKE(0x48f11b00))) ISNULL);
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((MAX(x''))LIKE(0x48f11b00)) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (((MAX(x''))LIKE(0x48f11b00)))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((((MAX(x''))LIKE(0x48f11b00))) ISNULL);
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT * FROM t0, v0, rt0;
SELECT * FROM t0, v0, rt0 WHERE ((+ ((- (rt0.c4))))) UNION ALL SELECT ALL * FROM t0, v0, rt0 WHERE ((NOT ((+ ((- (rt0.c4))))))) UNION ALL SELECT ALL * FROM t0, v0, rt0 WHERE ((((+ ((- (rt0.c4))))) ISNULL));
SELECT * FROM t0, v0, rt0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE ('-639387240') UNION SELECT DISTINCT * FROM t0 WHERE ((NOT ('-639387240'))) UNION SELECT DISTINCT * FROM t0 WHERE ((('-639387240') ISNULL));
SELECT DISTINCT * FROM t0;
SELECT ALL rt0.c2, rt0.c4, rt0.c6, t0.c0, rt0.c0 FROM rt0, t0 GROUP BY rt0.c2, rt0.c4, rt0.c6, t0.c0, rt0.c0;
SELECT rt0.c2, rt0.c4, rt0.c6, t0.c0, rt0.c0 FROM rt0, t0 WHERE (GLOB(rt0.c0 COLLATE RTRIM, (((rt0.c5)) BETWEEN ((rt0.c0)) AND ((rt0.c2))))) GROUP BY rt0.c2, rt0.c4, rt0.c6, t0.c0, rt0.c0 UNION SELECT rt0.c2, rt0.c4, rt0.c6, t0.c0, rt0.c0 FROM rt0, t0 WHERE ((NOT (GLOB(rt0.c0 COLLATE RTRIM, (((rt0.c5)) BETWEEN ((rt0.c0)) AND ((rt0.c2))))))) GROUP BY rt0.c2, rt0.c4, rt0.c6, t0.c0, rt0.c0 UNION SELECT rt0.c2, rt0.c4, rt0.c6, t0.c0, rt0.c0 FROM rt0, t0 WHERE (((GLOB(rt0.c0 COLLATE RTRIM, (((rt0.c5)) BETWEEN ((rt0.c0)) AND ((rt0.c2))))) ISNULL)) GROUP BY rt0.c2, rt0.c4, rt0.c6, t0.c0, rt0.c0;
SELECT ALL rt0.c2, rt0.c4, rt0.c6, t0.c0, rt0.c0 FROM rt0, t0 GROUP BY rt0.c2, rt0.c4, rt0.c6, t0.c0, rt0.c0;
SELECT ALL rt0.c5 FROM t0 FULL OUTER JOIN v0 ON CAST(v0.c0 AS TEXT) COLLATE BINARY CROSS JOIN rt0 ON CAST(((v0.c2) ISNULL) AS TEXT) GROUP BY rt0.c5;
SELECT rt0.c5 FROM t0 FULL OUTER JOIN v0 ON CAST(v0.c0 AS TEXT) COLLATE BINARY CROSS JOIN rt0 ON CAST(((v0.c2) ISNULL) AS TEXT) GROUP BY rt0.c5 HAVING SUM(v0.c0 COLLATE BINARY) UNION ALL SELECT ALL rt0.c5 FROM t0 FULL OUTER JOIN v0 ON CAST(v0.c0 AS TEXT) COLLATE BINARY CROSS JOIN rt0 ON CAST(((v0.c2) ISNULL) AS TEXT) GROUP BY rt0.c5 HAVING (NOT (SUM(v0.c0 COLLATE BINARY))) UNION ALL SELECT rt0.c5 FROM t0 FULL OUTER JOIN v0 ON CAST(v0.c0 AS TEXT) COLLATE BINARY CROSS JOIN rt0 ON CAST(((v0.c2) ISNULL) AS TEXT) GROUP BY rt0.c5 HAVING ((SUM(v0.c0 COLLATE BINARY)) ISNULL);
SELECT ALL rt0.c5 FROM t0 FULL OUTER JOIN v0 ON CAST(v0.c0 AS TEXT) COLLATE BINARY CROSS JOIN rt0 ON CAST(((v0.c2) ISNULL) AS TEXT) GROUP BY rt0.c5;
SELECT rt0.c5 FROM t0 FULL OUTER JOIN v0 ON CAST(v0.c0 AS TEXT) COLLATE BINARY CROSS JOIN rt0 ON CAST(((v0.c2) ISNULL) AS TEXT) GROUP BY rt0.c5 HAVING SUM(v0.c0 COLLATE BINARY) UNION ALL SELECT ALL rt0.c5 FROM t0 FULL OUTER JOIN v0 ON CAST(v0.c0 AS TEXT) COLLATE BINARY CROSS JOIN rt0 ON CAST(((v0.c2) ISNULL) AS TEXT) GROUP BY rt0.c5 HAVING (NOT (SUM(v0.c0 COLLATE BINARY))) UNION ALL SELECT rt0.c5 FROM t0 FULL OUTER JOIN v0 ON CAST(v0.c0 AS TEXT) COLLATE BINARY CROSS JOIN rt0 ON CAST(((v0.c2) ISNULL) AS TEXT) GROUP BY rt0.c5 HAVING ((SUM(v0.c0 COLLATE BINARY)) ISNULL);
SELECT ALL rt0.c5 FROM t0 FULL OUTER JOIN v0 ON CAST(v0.c0 AS TEXT) COLLATE BINARY CROSS JOIN rt0 ON CAST(((v0.c2) ISNULL) AS TEXT) GROUP BY rt0.c5;
SELECT rt0.c4, rt0.c2, rt0.c6, v0.c0, rt0.c3, rt0.c0, v0.c2, v0.c1 FROM v0 RIGHT OUTER JOIN rt0 ON ((((((rt0.c1)AND('0.05082634794509966')))OR(rt0.c5))) BETWEEN (((((((((rt0.c3)OR(rt0.c2)))OR(v0.c2)))OR(rt0.c3)))AND(rt0.c6))) AND (x'8aa427db'));
SELECT rt0.c4, rt0.c2, rt0.c6, v0.c0, rt0.c3, rt0.c0, v0.c2, v0.c1 FROM v0 RIGHT OUTER JOIN rt0 ON ((((((rt0.c1)AND('0.05082634794509966')))OR(rt0.c5))) BETWEEN (((((((((rt0.c3)OR(rt0.c2)))OR(v0.c2)))OR(rt0.c3)))AND(rt0.c6))) AND (x'8aa427db')) WHERE ((- (rt0.c3 COLLATE RTRIM))) UNION ALL SELECT rt0.c4, rt0.c2, rt0.c6, v0.c0, rt0.c3, rt0.c0, v0.c2, v0.c1 FROM v0 RIGHT OUTER JOIN rt0 ON ((((((rt0.c1)AND('0.05082634794509966')))OR(rt0.c5))) BETWEEN (((((((((rt0.c3)OR(rt0.c2)))OR(v0.c2)))OR(rt0.c3)))AND(rt0.c6))) AND (x'8aa427db')) WHERE ((NOT ((- (rt0.c3 COLLATE RTRIM))))) UNION ALL SELECT rt0.c4, rt0.c2, rt0.c6, v0.c0, rt0.c3, rt0.c0, v0.c2, v0.c1 FROM v0 RIGHT OUTER JOIN rt0 ON ((((((rt0.c1)AND('0.05082634794509966')))OR(rt0.c5))) BETWEEN (((((((((rt0.c3)OR(rt0.c2)))OR(v0.c2)))OR(rt0.c3)))AND(rt0.c6))) AND (x'8aa427db')) WHERE ((((- (rt0.c3 COLLATE RTRIM))) ISNULL));
SELECT rt0.c4, rt0.c2, rt0.c6, v0.c0, rt0.c3, rt0.c0, v0.c2, v0.c1 FROM v0 RIGHT OUTER JOIN rt0 ON ((((((rt0.c1)AND('0.05082634794509966')))OR(rt0.c5))) BETWEEN (((((((((rt0.c3)OR(rt0.c2)))OR(v0.c2)))OR(rt0.c3)))AND(rt0.c6))) AND (x'8aa427db'));
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (v0.c0 COLLATE RTRIM) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (v0.c0 COLLATE RTRIM))) UNION SELECT DISTINCT * FROM v0 WHERE (((v0.c0 COLLATE RTRIM) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT ALL rt0.c3, rt0.c2, v0.c1, rt0.c5 FROM v0, rt0 GROUP BY rt0.c3, rt0.c2, v0.c1, rt0.c5;
SELECT ALL rt0.c3, rt0.c2, v0.c1, rt0.c5 FROM v0, rt0 WHERE ((((v0.c2)==(rt0.c1)) IN (CASE rt0.c1  WHEN rt0.c5 THEN '221343318' ELSE v0.c1 END))) GROUP BY rt0.c3, rt0.c2, v0.c1, rt0.c5 UNION SELECT rt0.c3, rt0.c2, v0.c1, rt0.c5 FROM v0, rt0 WHERE ((NOT ((((v0.c2)==(rt0.c1)) IN (CASE rt0.c1  WHEN rt0.c5 THEN '221343318' ELSE v0.c1 END))))) GROUP BY rt0.c3, rt0.c2, v0.c1, rt0.c5 UNION SELECT ALL rt0.c3, rt0.c2, v0.c1, rt0.c5 FROM v0, rt0 WHERE ((((((v0.c2)=(rt0.c1)) IN (CASE rt0.c1  WHEN rt0.c5 THEN '221343318' ELSE v0.c1 END))) ISNULL)) GROUP BY rt0.c3, rt0.c2, v0.c1, rt0.c5;
SELECT ALL rt0.c3, rt0.c2, v0.c1, rt0.c5 FROM v0, rt0 GROUP BY rt0.c3, rt0.c2, v0.c1, rt0.c5;
SELECT v0.c1 FROM v0 GROUP BY v0.c1;
SELECT ALL v0.c1 FROM v0 GROUP BY v0.c1 HAVING COUNT(RTRIM(COUNT(v0.c0))) UNION ALL SELECT v0.c1 FROM v0 GROUP BY v0.c1 HAVING (NOT (COUNT(RTRIM(COUNT(v0.c0))))) UNION ALL SELECT v0.c1 FROM v0 GROUP BY v0.c1 HAVING ((COUNT(RTRIM(COUNT(v0.c0)))) ISNULL);
SELECT ALL v0.c2, rt0.c5, rt0.c3, rt0.c2, rt0.c6, v0.c1 FROM rt0 NOT INDEXED, v0, t0;
SELECT v0.c2, rt0.c5, rt0.c3, rt0.c2, rt0.c6, v0.c1 FROM rt0, v0, t0 WHERE (0Xfffffffff52ad101) UNION ALL SELECT v0.c2, rt0.c5, rt0.c3, rt0.c2, rt0.c6, v0.c1 FROM rt0, v0, t0 WHERE ((NOT (0xfffffffff52ad101))) UNION ALL SELECT ALL v0.c2, rt0.c5, rt0.c3, rt0.c2, rt0.c6, v0.c1 FROM rt0, v0, t0 WHERE (((0Xfffffffff52ad101) ISNULL));
SELECT ALL v0.c2, rt0.c5, rt0.c3, rt0.c2, rt0.c6, v0.c1 FROM rt0 NOT INDEXED, v0, t0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE ((((~ (v0.c1))) NOT BETWEEN (v0.c2 COLLATE RTRIM) AND (((v0.c2) BETWEEN (v0.c2) AND (v0.c0))))) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT ((((~ (v0.c1))) NOT BETWEEN (v0.c2 COLLATE RTRIM) AND (((v0.c2) BETWEEN (v0.c2) AND (v0.c0))))))) UNION SELECT DISTINCT * FROM v0 WHERE ((((((~ (v0.c1))) NOT BETWEEN (v0.c2 COLLATE RTRIM) AND (((v0.c2) BETWEEN (v0.c2) AND (v0.c0))))) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT ALL v0.c0, v0.c2 FROM t0, v0 GROUP BY v0.c0, v0.c2;
SELECT ALL v0.c0, v0.c2 FROM t0, v0 WHERE (CAST(((v0.c2)AND(v0.c2)) AS REAL)) GROUP BY v0.c0, v0.c2 UNION SELECT ALL v0.c0, v0.c2 FROM t0, v0 WHERE ((NOT (CAST(((v0.c2)AND(v0.c2)) AS REAL)))) GROUP BY v0.c0, v0.c2 UNION SELECT v0.c0, v0.c2 FROM t0, v0 WHERE (((CAST(((v0.c2)AND(v0.c2)) AS REAL)) ISNULL)) GROUP BY v0.c0, v0.c2;
SELECT ALL v0.c0, v0.c2 FROM t0, v0 GROUP BY v0.c0, v0.c2;
SELECT v0.c1, v0.c2, t0.c0, rt0.c2, rt0.c1, rt0.c0, rt0.c4, v0.c0, rt0.c5, rt0.c6, rt0.c3 FROM t0, rt0, v0 GROUP BY v0.c1, v0.c2, t0.c0, rt0.c2, rt0.c1, rt0.c0, rt0.c4, v0.c0, rt0.c5, rt0.c6, rt0.c3;
SELECT ALL v0.c1, v0.c2, t0.c0, rt0.c2, rt0.c1, rt0.c0, rt0.c4, v0.c0, rt0.c5, rt0.c6, rt0.c3 FROM t0, rt0, v0 GROUP BY v0.c1, v0.c2, t0.c0, rt0.c2, rt0.c1, rt0.c0, rt0.c4, v0.c0, rt0.c5, rt0.c6, rt0.c3 HAVING AVG(MIN(NULL)) UNION ALL SELECT ALL v0.c1, v0.c2, t0.c0, rt0.c2, rt0.c1, rt0.c0, rt0.c4, v0.c0, rt0.c5, rt0.c6, rt0.c3 FROM t0, rt0, v0 GROUP BY v0.c1, v0.c2, t0.c0, rt0.c2, rt0.c1, rt0.c0, rt0.c4, v0.c0, rt0.c5, rt0.c6, rt0.c3 HAVING (NOT (AVG(MIN(NULL)))) UNION ALL SELECT v0.c1, v0.c2, t0.c0, rt0.c2, rt0.c1, rt0.c0, rt0.c4, v0.c0, rt0.c5, rt0.c6, rt0.c3 FROM t0, rt0, v0 GROUP BY v0.c1, v0.c2, t0.c0, rt0.c2, rt0.c1, rt0.c0, rt0.c4, v0.c0, rt0.c5, rt0.c6, rt0.c3 HAVING ((AVG(MIN(NULL))) ISNULL);
SELECT rt0.c6, rt0.c0, rt0.c3, v0.c1, v0.c0 FROM rt0, v0;
SELECT rt0.c6, rt0.c0, rt0.c3, v0.c1, v0.c0 FROM rt0, v0 WHERE (0.23458569909546878) UNION ALL SELECT ALL rt0.c6, rt0.c0, rt0.c3, v0.c1, v0.c0 FROM rt0, v0 WHERE ((NOT (0.23458569909546878))) UNION ALL SELECT rt0.c6, rt0.c0, rt0.c3, v0.c1, v0.c0 FROM rt0, v0 WHERE (((0.23458569909546878) ISNULL));
SELECT rt0.c6, rt0.c0, rt0.c3, v0.c1, v0.c0 FROM rt0, v0;
SELECT DISTINCT * FROM rt0, v0, t0;
SELECT DISTINCT * FROM rt0, v0, t0 WHERE (CASE WHEN rt0.c4 THEN rt0.c4 COLLATE RTRIM ELSE TYPEOF(DISTINCT 'Hz') END) UNION SELECT DISTINCT * FROM rt0, v0, t0 WHERE ((NOT (CASE WHEN rt0.c4 THEN rt0.c4 COLLATE RTRIM ELSE TYPEOF(DISTINCT 'Hz') END))) UNION SELECT DISTINCT * FROM rt0, v0, t0 WHERE (((CASE WHEN rt0.c4 THEN rt0.c4 COLLATE RTRIM ELSE TYPEOF(DISTINCT 'Hz') END) ISNULL));
SELECT DISTINCT * FROM rt0, v0, t0;
SELECT ALL rt0.c0, rt0.c3, v0.c1, t0.c0, v0.c0, rt0.c6, rt0.c4, rt0.c1 FROM rt0, t0 FULL OUTER JOIN v0 ON v0.c0 GROUP BY rt0.c0, rt0.c3, v0.c1, t0.c0, v0.c0, rt0.c6, rt0.c4, rt0.c1;
SELECT ALL rt0.c0, rt0.c3, v0.c1, t0.c0, v0.c0, rt0.c6, rt0.c4, rt0.c1 FROM rt0 NOT INDEXED, t0 FULL OUTER JOIN v0 ON v0.c0 WHERE (((((v0.c0)%(rt0.c6))) NOT BETWEEN (((rt0.c1)-(''))) AND ((+ (rt0.c2))))) GROUP BY rt0.c0, rt0.c3, v0.c1, t0.c0, v0.c0, rt0.c6, rt0.c4, rt0.c1 UNION SELECT rt0.c0, rt0.c3, v0.c1, t0.c0, v0.c0, rt0.c6, rt0.c4, rt0.c1 FROM rt0, t0 FULL OUTER JOIN v0 ON v0.c0 WHERE ((NOT (((((v0.c0)%(rt0.c6))) NOT BETWEEN (((rt0.c1)-(''))) AND ((+ (rt0.c2))))))) GROUP BY rt0.c0, rt0.c3, v0.c1, t0.c0, v0.c0, rt0.c6, rt0.c4, rt0.c1 UNION SELECT rt0.c0, rt0.c3, v0.c1, t0.c0, v0.c0, rt0.c6, rt0.c4, rt0.c1 FROM rt0, t0 FULL OUTER JOIN v0 ON v0.c0 WHERE (((((((v0.c0)%(rt0.c6))) NOT BETWEEN (((rt0.c1)-(''))) AND ((+ (rt0.c2))))) ISNULL)) GROUP BY rt0.c0, rt0.c3, v0.c1, t0.c0, v0.c0, rt0.c6, rt0.c4, rt0.c1;
SELECT ALL rt0.c0, rt0.c3, v0.c1, t0.c0, v0.c0, rt0.c6, rt0.c4, rt0.c1 FROM rt0, t0 FULL OUTER JOIN v0 ON v0.c0 GROUP BY rt0.c0, rt0.c3, v0.c1, t0.c0, v0.c0, rt0.c6, rt0.c4, rt0.c1;
SELECT rt0.c5, v0.c2 FROM v0, t0 LEFT OUTER JOIN rt0 ON CAST(((rt0.c4)<>(rt0.c1)) AS INTEGER) GROUP BY rt0.c5, v0.c2;
SELECT rt0.c5, v0.c2 FROM v0, t0 LEFT OUTER JOIN rt0 ON CAST(((rt0.c4)<>(rt0.c1)) AS INTEGER) GROUP BY rt0.c5, v0.c2 HAVING ((((MAX(v0.c2)) IS TRUE)) NOT BETWEEN (COUNT(*)) AND (CASE WHEN MAX(527272597) THEN x'' END)) UNION ALL SELECT ALL rt0.c5, v0.c2 FROM v0, t0 LEFT OUTER JOIN rt0 ON CAST(((rt0.c4)<>(rt0.c1)) AS INTEGER) GROUP BY rt0.c5, v0.c2 HAVING (NOT (((((MAX(v0.c2)) IS TRUE)) NOT BETWEEN (COUNT(*)) AND (CASE WHEN MAX(527272597) THEN x'' END)))) UNION ALL SELECT rt0.c5, v0.c2 FROM v0, t0 LEFT OUTER JOIN rt0 ON CAST(((rt0.c4)!=(rt0.c1)) AS INTEGER) GROUP BY rt0.c5, v0.c2 HAVING ((((((MAX(v0.c2)) IS TRUE)) NOT BETWEEN (COUNT(*)) AND (CASE WHEN MAX(527272597) THEN x'' END))) ISNULL);
SELECT rt0.c5, v0.c2 FROM v0, t0 LEFT OUTER JOIN rt0 ON CAST(((rt0.c4)<>(rt0.c1)) AS INTEGER) GROUP BY rt0.c5, v0.c2;
SELECT rt0.c5, v0.c2 FROM v0, t0 LEFT OUTER JOIN rt0 ON CAST(((rt0.c4)<>(rt0.c1)) AS INTEGER) GROUP BY rt0.c5, v0.c2 HAVING ((((MAX(v0.c2)) IS TRUE)) NOT BETWEEN (COUNT(*)) AND (CASE WHEN MAX(527272597) THEN x'' END)) UNION ALL SELECT ALL rt0.c5, v0.c2 FROM v0, t0 LEFT OUTER JOIN rt0 ON CAST(((rt0.c4)<>(rt0.c1)) AS INTEGER) GROUP BY rt0.c5, v0.c2 HAVING (NOT (((((MAX(v0.c2)) IS TRUE)) NOT BETWEEN (COUNT(*)) AND (CASE WHEN MAX(527272597) THEN x'' END)))) UNION ALL SELECT rt0.c5, v0.c2 FROM v0, t0 LEFT OUTER JOIN rt0 ON CAST(((rt0.c4)!=(rt0.c1)) AS INTEGER) GROUP BY rt0.c5, v0.c2 HAVING ((((((MAX(v0.c2)) IS TRUE)) NOT BETWEEN (COUNT(*)) AND (CASE WHEN MAX(527272597) THEN x'' END))) ISNULL);
SELECT rt0.c5, v0.c2 FROM v0, t0 LEFT OUTER JOIN rt0 ON CAST(((rt0.c4)<>(rt0.c1)) AS INTEGER) GROUP BY rt0.c5, v0.c2;
SELECT v0.c1 FROM v0, t0;
SELECT v0.c1 FROM v0, t0 WHERE (0xffffffffa77a964c) UNION ALL SELECT ALL v0.c1 FROM v0, t0 WHERE ((NOT (0xffffffffa77a964c))) UNION ALL SELECT ALL v0.c1 FROM v0, t0 WHERE (((0xffffffffa77a964c) ISNULL));
SELECT v0.c1 FROM v0, t0;
SELECT DISTINCT * FROM t0, rt0, v0;
SELECT DISTINCT * FROM t0, rt0, v0 WHERE (((((rt0.c3)<<(v0.c0)))%(((v0.c2)>(rt0.c4))))) UNION SELECT DISTINCT * FROM t0, rt0, v0 WHERE ((NOT (((((rt0.c3)<<(v0.c0)))%(((v0.c2)>(rt0.c4))))))) UNION SELECT DISTINCT * FROM t0, rt0, v0 WHERE (((((((rt0.c3)<<(v0.c0)))%(((v0.c2)>(rt0.c4))))) ISNULL));
SELECT DISTINCT * FROM t0, rt0, v0;
SELECT v0.c2 FROM v0, t0, rt0 GROUP BY v0.c2;
SELECT v0.c2 FROM v0, t0, rt0 WHERE (((v0.c2)&(v0.c0)) COLLATE NOCASE) GROUP BY v0.c2 UNION SELECT ALL v0.c2 FROM v0, t0, rt0 WHERE ((NOT (((v0.c2)&(v0.c0)) COLLATE NOCASE))) GROUP BY v0.c2 UNION SELECT v0.c2 FROM v0, t0, rt0 WHERE (((((v0.c2)&(v0.c0)) COLLATE NOCASE) ISNULL)) GROUP BY v0.c2;
SELECT v0.c2 FROM v0, t0, rt0 GROUP BY v0.c2;
SELECT v0.c1, rt0.c4, rt0.c5, rt0.c3, rt0.c6 FROM v0, rt0 GROUP BY v0.c1, rt0.c4, rt0.c5, rt0.c3, rt0.c6;
SELECT ALL v0.c1, rt0.c4, rt0.c5, rt0.c3, rt0.c6 FROM v0, rt0 GROUP BY v0.c1, rt0.c4, rt0.c5, rt0.c3, rt0.c6 HAVING (~ (CAST(MIN(COUNT(rt0.c3)) AS TEXT))) UNION ALL SELECT ALL v0.c1, rt0.c4, rt0.c5, rt0.c3, rt0.c6 FROM v0, rt0 GROUP BY v0.c1, rt0.c4, rt0.c5, rt0.c3, rt0.c6 HAVING (NOT ((~ (CAST(MIN(COUNT(rt0.c3)) AS TEXT))))) UNION ALL SELECT v0.c1, rt0.c4, rt0.c5, rt0.c3, rt0.c6 FROM v0, rt0 GROUP BY v0.c1, rt0.c4, rt0.c5, rt0.c3, rt0.c6 HAVING (((~ (CAST(MIN(COUNT(rt0.c3)) AS TEXT)))) ISNULL);
SELECT * FROM t0, v0, rt0;
SELECT * FROM t0, v0, rt0 WHERE (((v0.c1) ISNULL)) UNION ALL SELECT * FROM t0, v0, rt0 WHERE ((NOT (((v0.c1) ISNULL)))) UNION ALL SELECT * FROM t0, v0, rt0 WHERE (((((v0.c1) ISNULL)) ISNULL));
SELECT * FROM t0, v0, rt0;
SELECT DISTINCT * FROM v0 RIGHT OUTER JOIN rt0 ON ((x'') BETWEEN (((v0.c1) NOT NULL)) AND (rt0.c5 COLLATE BINARY));
SELECT DISTINCT * FROM v0 RIGHT OUTER JOIN rt0 ON ((x'') BETWEEN (((v0.c1) NOT NULL)) AND (rt0.c5 COLLATE BINARY)) WHERE ((((v0.c0)) BETWEEN ((((v0.c2)IS(NULL)))) AND ((rt0.c6)))) UNION SELECT DISTINCT * FROM v0 RIGHT OUTER JOIN rt0 ON ((x'') BETWEEN (((v0.c1) NOT NULL)) AND (rt0.c5 COLLATE BINARY)) WHERE ((NOT ((((v0.c0)) BETWEEN ((((v0.c2)IS(NULL)))) AND ((rt0.c6)))))) UNION SELECT DISTINCT * FROM v0 RIGHT OUTER JOIN rt0 ON ((x'') BETWEEN (((v0.c1) NOT NULL)) AND (rt0.c5 COLLATE BINARY)) WHERE ((((((v0.c0)) BETWEEN ((((v0.c2)IS(NULL)))) AND ((rt0.c6)))) ISNULL));
SELECT DISTINCT * FROM v0 RIGHT OUTER JOIN rt0 ON ((x'') BETWEEN (((v0.c1) NOT NULL)) AND (rt0.c5 COLLATE BINARY));
SELECT ALL rt0.c4, rt0.c6, rt0.c5, rt0.c1, rt0.c0, v0.c1, rt0.c3, v0.c0, v0.c2, rt0.c2 FROM v0 CROSS JOIN rt0 ON CAST(CASE WHEN rt0.c4 THEN v0.c1 WHEN rt0.c5 THEN rt0.c2 WHEN rt0.c0 THEN v0.c2 END AS TEXT) GROUP BY rt0.c4, rt0.c6, rt0.c5, rt0.c1, rt0.c0, v0.c1, rt0.c3, v0.c0, v0.c2, rt0.c2;
SELECT rt0.c4, rt0.c6, rt0.c5, rt0.c1, rt0.c0, v0.c1, rt0.c3, v0.c0, v0.c2, rt0.c2 FROM v0 CROSS JOIN rt0 ON CAST(CASE WHEN rt0.c4 THEN v0.c1 WHEN rt0.c5 THEN rt0.c2 WHEN rt0.c0 THEN v0.c2 END AS TEXT) WHERE (((((rt0.c6)||(rt0.c6)))=((rt0.c1 IN ())))) GROUP BY rt0.c4, rt0.c6, rt0.c5, rt0.c1, rt0.c0, v0.c1, rt0.c3, v0.c0, v0.c2, rt0.c2 UNION SELECT rt0.c4, rt0.c6, rt0.c5, rt0.c1, rt0.c0, v0.c1, rt0.c3, v0.c0, v0.c2, rt0.c2 FROM v0 CROSS JOIN rt0 ON CAST(CASE WHEN rt0.c4 THEN v0.c1 WHEN rt0.c5 THEN rt0.c2 WHEN rt0.c0 THEN v0.c2 END AS TEXT) WHERE ((NOT (((((rt0.c6)||(rt0.c6)))==((rt0.c1 IN ())))))) GROUP BY rt0.c4, rt0.c6, rt0.c5, rt0.c1, rt0.c0, v0.c1, rt0.c3, v0.c0, v0.c2, rt0.c2 UNION SELECT ALL rt0.c4, rt0.c6, rt0.c5, rt0.c1, rt0.c0, v0.c1, rt0.c3, v0.c0, v0.c2, rt0.c2 FROM v0 CROSS JOIN rt0 ON CAST(CASE WHEN rt0.c4 THEN v0.c1 WHEN rt0.c5 THEN rt0.c2 WHEN rt0.c0 THEN v0.c2 END AS TEXT) WHERE (((((((rt0.c6)||(rt0.c6)))==((rt0.c1 IN ())))) ISNULL)) GROUP BY rt0.c4, rt0.c6, rt0.c5, rt0.c1, rt0.c0, v0.c1, rt0.c3, v0.c0, v0.c2, rt0.c2;
SELECT ALL rt0.c4, rt0.c6, rt0.c5, rt0.c1, rt0.c0, v0.c1, rt0.c3, v0.c0, v0.c2, rt0.c2 FROM v0 CROSS JOIN rt0 ON CAST(CASE WHEN rt0.c4 THEN v0.c1 WHEN rt0.c5 THEN rt0.c2 WHEN rt0.c0 THEN v0.c2 END AS TEXT) GROUP BY rt0.c4, rt0.c6, rt0.c5, rt0.c1, rt0.c0, v0.c1, rt0.c3, v0.c0, v0.c2, rt0.c2;
SELECT ALL rt0.c5, rt0.c3, v0.c0, rt0.c0, rt0.c2, rt0.c6, v0.c2, rt0.c1, v0.c1 FROM rt0, v0 GROUP BY rt0.c5, rt0.c3, v0.c0, rt0.c0, rt0.c2, rt0.c6, v0.c2, rt0.c1, v0.c1;
SELECT rt0.c5, rt0.c3, v0.c0, rt0.c0, rt0.c2, rt0.c6, v0.c2, rt0.c1, v0.c1 FROM rt0, v0 GROUP BY rt0.c5, rt0.c3, v0.c0, rt0.c0, rt0.c2, rt0.c6, v0.c2, rt0.c1, v0.c1 HAVING GROUP_CONCAT(((((((((rt0.c2)AND(MIN(MIN('0.11171565524162907')))))OR(AVG(COUNT(*)))))OR(TOTAL(COUNT(MAX(AVG(rt0.c6)))))))AND(rt0.c2))) UNION ALL SELECT ALL rt0.c5, rt0.c3, v0.c0, rt0.c0, rt0.c2, rt0.c6, v0.c2, rt0.c1, v0.c1 FROM rt0, v0 GROUP BY rt0.c5, rt0.c3, v0.c0, rt0.c0, rt0.c2, rt0.c6, v0.c2, rt0.c1, v0.c1 HAVING (NOT (GROUP_CONCAT(((((((((rt0.c2)AND(MIN(MIN('0.11171565524162907')))))OR(AVG(COUNT(*)))))OR(TOTAL(COUNT(MAX(AVG(rt0.c6)))))))AND(rt0.c2))))) UNION ALL SELECT rt0.c5, rt0.c3, v0.c0, rt0.c0, rt0.c2, rt0.c6, v0.c2, rt0.c1, v0.c1 FROM rt0, v0 GROUP BY rt0.c5, rt0.c3, v0.c0, rt0.c0, rt0.c2, rt0.c6, v0.c2, rt0.c1, v0.c1 HAVING ((GROUP_CONCAT(((((((((rt0.c2)AND(MIN(MIN('0.11171565524162907')))))OR(AVG(COUNT(*)))))OR(TOTAL(COUNT(MAX(AVG(rt0.c6)))))))AND(rt0.c2)))) ISNULL);
SELECT v0.c0, rt0.c5, rt0.c4, v0.c1, rt0.c2 FROM rt0, v0;
SELECT v0.c0, rt0.c5, rt0.c4, v0.c1, rt0.c2 FROM rt0, v0 WHERE (((rt0.c3) BETWEEN (((v0.c1)<(rt0.c3))) AND ((- (0.950776719798323))))) UNION ALL SELECT v0.c0, rt0.c5, rt0.c4, v0.c1, rt0.c2 FROM rt0, v0 WHERE ((NOT (((rt0.c3) BETWEEN (((v0.c1)<(rt0.c3))) AND ((- (0.950776719798323))))))) UNION ALL SELECT ALL v0.c0, rt0.c5, rt0.c4, v0.c1, rt0.c2 FROM rt0, v0 WHERE (((((rt0.c3) BETWEEN (((v0.c1)<(rt0.c3))) AND ((- (0.950776719798323))))) ISNULL));
SELECT v0.c0, rt0.c5, rt0.c4, v0.c1, rt0.c2 FROM rt0, v0;
SELECT DISTINCT * FROM t0 NOT INDEXED;
SELECT DISTINCT * FROM t0 WHERE (((((t0.c0)LIKE(t0.c0)))||((((t0.c0))<((t0.c0)))))) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (((((t0.c0)LIKE(t0.c0)))||((((t0.c0))<((t0.c0)))))))) UNION SELECT DISTINCT * FROM t0 WHERE (((((((t0.c0)LIKE(t0.c0)))||((((t0.c0))<((t0.c0)))))) ISNULL));
SELECT DISTINCT * FROM t0 NOT INDEXED;
SELECT t0.c0, rt0.c4 FROM rt0, t0 GROUP BY t0.c0, rt0.c4;
SELECT t0.c0, rt0.c4 FROM rt0, t0 WHERE (((((rt0.c3) BETWEEN (rt0.c6) AND (rt0.c0)))<((((rt0.c4)) NOT BETWEEN ((rt0.c6)) AND ((rt0.c5)))))) GROUP BY t0.c0, rt0.c4 UNION SELECT t0.c0, rt0.c4 FROM rt0, t0 WHERE ((NOT (((((rt0.c3) BETWEEN (rt0.c6) AND (rt0.c0)))<((((rt0.c4)) NOT BETWEEN ((rt0.c6)) AND ((rt0.c5)))))))) GROUP BY t0.c0, rt0.c4 UNION SELECT t0.c0, rt0.c4 FROM rt0, t0 WHERE (((((((rt0.c3) BETWEEN (rt0.c6) AND (rt0.c0)))<((((rt0.c4)) NOT BETWEEN ((rt0.c6)) AND ((rt0.c5)))))) ISNULL)) GROUP BY t0.c0, rt0.c4;
SELECT t0.c0, rt0.c4 FROM rt0, t0 GROUP BY t0.c0, rt0.c4;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING MAX(((t0.c0) BETWEEN (COUNT(*)) AND (''))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (MAX(((t0.c0) BETWEEN (COUNT(*)) AND (''))))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((MAX(((t0.c0) BETWEEN (COUNT(*)) AND ('')))) ISNULL);
SELECT ALL rt0.c3, v0.c1, rt0.c5, v0.c2 FROM t0 CROSS JOIN v0 ON CASE WHEN ((rt0.c3)|(rt0.c0)) THEN ((x'7c8a0cfd') BETWEEN (rt0.c5) AND (rt0.c2)) WHEN CAST(v0.c2 AS REAL) THEN (- (rt0.c0)) WHEN (v0.c2 IN ()) THEN ((rt0.c3)<<(rt0.c0)) WHEN t0.c0 COLLATE BINARY THEN rt0.c3 COLLATE BINARY WHEN CASE WHEN rt0.c3 THEN rt0.c1 ELSE NULL END THEN (+ (v0.c1)) ELSE (((rt0.c0))<=((rt0.c3))) END LEFT OUTER JOIN rt0 ON ((CASE WHEN t0.c0 THEN rt0.c5 END) ISNULL);
SELECT ALL rt0.c3, v0.c1, rt0.c5, v0.c2 FROM t0 CROSS JOIN v0 ON CASE WHEN ((rt0.c3)|(rt0.c0)) THEN ((x'7c8a0cfd') BETWEEN (rt0.c5) AND (rt0.c2)) WHEN CAST(v0.c2 AS REAL) THEN (- (rt0.c0)) WHEN (v0.c2 IN ()) THEN ((rt0.c3)<<(rt0.c0)) WHEN t0.c0 COLLATE BINARY THEN rt0.c3 COLLATE BINARY WHEN CASE WHEN rt0.c3 THEN rt0.c1 ELSE NULL END THEN (+ (v0.c1)) ELSE (((rt0.c0))<=((rt0.c3))) END LEFT OUTER JOIN rt0 ON ((CASE WHEN t0.c0 THEN rt0.c5 END) ISNULL) WHERE ((- (rt0.c1))) UNION ALL SELECT ALL rt0.c3, v0.c1, rt0.c5, v0.c2 FROM t0 CROSS JOIN v0 ON CASE WHEN ((rt0.c3)|(rt0.c0)) THEN ((x'7c8a0cfd') BETWEEN (rt0.c5) AND (rt0.c2)) WHEN CAST(v0.c2 AS REAL) THEN (- (rt0.c0)) WHEN (v0.c2 IN ()) THEN ((rt0.c3)<<(rt0.c0)) WHEN t0.c0 COLLATE BINARY THEN rt0.c3 COLLATE BINARY WHEN CASE WHEN rt0.c3 THEN rt0.c1 ELSE NULL END THEN (+ (v0.c1)) ELSE (((rt0.c0))<=((rt0.c3))) END LEFT OUTER JOIN rt0 ON ((CASE WHEN t0.c0 THEN rt0.c5 END) ISNULL) WHERE ((NOT ((- (rt0.c1))))) UNION ALL SELECT ALL rt0.c3, v0.c1, rt0.c5, v0.c2 FROM t0 CROSS JOIN v0 ON CASE WHEN ((rt0.c3)|(rt0.c0)) THEN ((x'7c8a0cfd') BETWEEN (rt0.c5) AND (rt0.c2)) WHEN CAST(v0.c2 AS REAL) THEN (- (rt0.c0)) WHEN (v0.c2 IN ()) THEN ((rt0.c3)<<(rt0.c0)) WHEN t0.c0 COLLATE BINARY THEN rt0.c3 COLLATE BINARY WHEN CASE WHEN rt0.c3 THEN rt0.c1 ELSE NULL END THEN (+ (v0.c1)) ELSE (((rt0.c0))<=((rt0.c3))) END LEFT OUTER JOIN rt0 ON ((CASE WHEN t0.c0 THEN rt0.c5 END) ISNULL) WHERE ((((- (rt0.c1))) ISNULL));
SELECT ALL rt0.c3, v0.c1, rt0.c5, v0.c2 FROM t0 CROSS JOIN v0 ON CASE WHEN ((rt0.c3)|(rt0.c0)) THEN ((x'7c8a0cfd') BETWEEN (rt0.c5) AND (rt0.c2)) WHEN CAST(v0.c2 AS REAL) THEN (- (rt0.c0)) WHEN (v0.c2 IN ()) THEN ((rt0.c3)<<(rt0.c0)) WHEN t0.c0 COLLATE BINARY THEN rt0.c3 COLLATE BINARY WHEN CASE WHEN rt0.c3 THEN rt0.c1 ELSE NULL END THEN (+ (v0.c1)) ELSE (((rt0.c0))<=((rt0.c3))) END LEFT OUTER JOIN rt0 ON ((CASE WHEN t0.c0 THEN rt0.c5 END) ISNULL);
SELECT DISTINCT * FROM v0, rt0, t0;
SELECT DISTINCT * FROM v0, rt0, t0 WHERE (((((rt0.c3)) NOT BETWEEN ((rt0.c5)) AND ((v0.c1))) IN (((v0.c0)+(0.9969097932396684))))) UNION SELECT DISTINCT * FROM v0, rt0, t0 WHERE ((NOT (((((rt0.c3)) NOT BETWEEN ((rt0.c5)) AND ((v0.c1))) IN (((v0.c0)+(0.9969097932396684))))))) UNION SELECT DISTINCT * FROM v0, rt0 NOT INDEXED, t0 WHERE (((((((rt0.c3)) NOT BETWEEN ((rt0.c5)) AND ((v0.c1))) IN (((v0.c0)+(0.9969097932396684))))) ISNULL));
SELECT DISTINCT * FROM v0, rt0, t0;
SELECT rt0.c6, rt0.c5, rt0.c0, rt0.c4, rt0.c3 FROM rt0, t0 GROUP BY rt0.c6, rt0.c5, rt0.c0, rt0.c4, rt0.c3;
SELECT rt0.c6, rt0.c5, rt0.c0, rt0.c4, rt0.c3 FROM rt0, t0 WHERE (((rt0.c6 COLLATE BINARY)&(((((rt0.c3)AND(rt0.c5)))OR(rt0.c6))))) GROUP BY rt0.c6, rt0.c5, rt0.c0, rt0.c4, rt0.c3 UNION SELECT rt0.c6, rt0.c5, rt0.c0, rt0.c4, rt0.c3 FROM rt0, t0 WHERE ((NOT (((rt0.c6 COLLATE BINARY)&(((((rt0.c3)AND(rt0.c5)))OR(rt0.c6))))))) GROUP BY rt0.c6, rt0.c5, rt0.c0, rt0.c4, rt0.c3 UNION SELECT ALL rt0.c6, rt0.c5, rt0.c0, rt0.c4, rt0.c3 FROM rt0, t0 WHERE (((((rt0.c6 COLLATE BINARY)&(((((rt0.c3)AND(rt0.c5)))OR(rt0.c6))))) ISNULL)) GROUP BY rt0.c6, rt0.c5, rt0.c0, rt0.c4, rt0.c3;
SELECT rt0.c6, rt0.c5, rt0.c0, rt0.c4, rt0.c3 FROM rt0, t0 GROUP BY rt0.c6, rt0.c5, rt0.c0, rt0.c4, rt0.c3;
SELECT ALL rt0.c4, v0.c0 FROM v0, t0 NATURAL JOIN rt0 GROUP BY rt0.c4, v0.c0;
SELECT ALL rt0.c4, v0.c0 FROM v0, t0 NATURAL JOIN rt0 GROUP BY rt0.c4, v0.c0 HAVING GROUP_CONCAT(MIN(COUNT(v0.c2))) UNION ALL SELECT rt0.c4, v0.c0 FROM v0, t0 NOT INDEXED NATURAL JOIN rt0 GROUP BY rt0.c4, v0.c0 HAVING (NOT (GROUP_CONCAT(MIN(COUNT(v0.c2))))) UNION ALL SELECT rt0.c4, v0.c0 FROM v0, t0 NATURAL JOIN rt0 GROUP BY rt0.c4, v0.c0 HAVING ((GROUP_CONCAT(MIN(COUNT(v0.c2)))) ISNULL);
SELECT v0.c2, v0.c0, rt0.c6 FROM v0, rt0;
SELECT v0.c2, v0.c0, rt0.c6 FROM v0, rt0 WHERE (((rt0.c0 COLLATE RTRIM)OR((NOT (rt0.c0))))) UNION ALL SELECT ALL v0.c2, v0.c0, rt0.c6 FROM v0, rt0 WHERE ((NOT (((rt0.c0 COLLATE RTRIM)OR((NOT (rt0.c0))))))) UNION ALL SELECT v0.c2, v0.c0, rt0.c6 FROM v0, rt0 WHERE (((((rt0.c0 COLLATE RTRIM)OR((NOT (rt0.c0))))) ISNULL));
SELECT v0.c2, v0.c0, rt0.c6 FROM v0, rt0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (((CASE WHEN v0.c1 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c2 THEN v0.c1 WHEN v0.c1 THEN v0.c0 WHEN v0.c1 THEN x'' END)||((NOT (v0.c0))))) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (((CASE WHEN v0.c1 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c2 THEN v0.c1 WHEN v0.c1 THEN v0.c0 WHEN v0.c1 THEN x'' END)||((NOT (v0.c0))))))) UNION SELECT DISTINCT * FROM v0 WHERE (((((CASE WHEN v0.c1 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c2 THEN v0.c1 WHEN v0.c1 THEN v0.c0 WHEN v0.c1 THEN x'' END)||((NOT (v0.c0))))) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT ALL rt0.c1, rt0.c5, rt0.c6, rt0.c3, t0.c0 FROM t0 NATURAL JOIN rt0 GROUP BY rt0.c1, rt0.c5, rt0.c6, rt0.c3, t0.c0;
SELECT ALL rt0.c1, rt0.c5, rt0.c6, rt0.c3, t0.c0 FROM t0 NATURAL JOIN rt0 WHERE (((((rt0.c3)>(rt0.c0)))-(((rt0.c5) NOT BETWEEN ('-56562370') AND (rt0.c4))))) GROUP BY rt0.c1, rt0.c5, rt0.c6, rt0.c3, t0.c0 UNION SELECT ALL rt0.c1, rt0.c5, rt0.c6, rt0.c3, t0.c0 FROM t0 NATURAL JOIN rt0 WHERE ((NOT (((((rt0.c3)>(rt0.c0)))-(((rt0.c5) NOT BETWEEN ('-56562370') AND (rt0.c4))))))) GROUP BY rt0.c1, rt0.c5, rt0.c6, rt0.c3, t0.c0 UNION SELECT ALL rt0.c1, rt0.c5, rt0.c6, rt0.c3, t0.c0 FROM t0 NATURAL JOIN rt0 WHERE (((((((rt0.c3)>(rt0.c0)))-(((rt0.c5) NOT BETWEEN ('-56562370') AND (rt0.c4))))) ISNULL)) GROUP BY rt0.c1, rt0.c5, rt0.c6, rt0.c3, t0.c0;
SELECT ALL rt0.c1, rt0.c5, rt0.c6, rt0.c3, t0.c0 FROM t0 NATURAL JOIN rt0 GROUP BY rt0.c1, rt0.c5, rt0.c6, rt0.c3, t0.c0;
SELECT v0.c1 FROM v0 GROUP BY v0.c1;
SELECT ALL v0.c1 FROM v0 GROUP BY v0.c1 HAVING ((AVG(v0.c0))>(TOTAL(COUNT(MAX(SUM(v0.c0)))))) UNION ALL SELECT ALL v0.c1 FROM v0 GROUP BY v0.c1 HAVING (NOT (((AVG(v0.c0))>(TOTAL(COUNT(MAX(SUM(v0.c0)))))))) UNION ALL SELECT ALL v0.c1 FROM v0 GROUP BY v0.c1 HAVING ((((AVG(v0.c0))>(TOTAL(COUNT(MAX(SUM(v0.c0))))))) ISNULL);
SELECT ALL v0.c2 FROM v0, rt0 FULL OUTER JOIN t0 ON ((((CASE rt0.c5  WHEN rt0.c0 THEN v0.c2 ELSE NULL END)OR(((rt0.c0) IS TRUE))))OR(0.6126028354976613));
SELECT v0.c2 FROM v0, rt0 FULL OUTER JOIN t0 ON ((((CASE rt0.c5  WHEN rt0.c0 THEN v0.c2 ELSE NULL END)OR(((rt0.c0) IS TRUE))))OR(0.6126028354976613)) WHERE (v0.c0) UNION ALL SELECT ALL v0.c2 FROM v0, rt0 FULL OUTER JOIN t0 ON ((((CASE rt0.c5  WHEN rt0.c0 THEN v0.c2 ELSE NULL END)OR(((rt0.c0) IS TRUE))))OR(0.6126028354976613)) WHERE ((NOT (v0.c0))) UNION ALL SELECT v0.c2 FROM v0, rt0 FULL OUTER JOIN t0 ON ((((CASE rt0.c5  WHEN rt0.c0 THEN v0.c2 ELSE NULL END)OR(((rt0.c0) IS TRUE))))OR(0.6126028354976613)) WHERE (((v0.c0) ISNULL));
SELECT ALL v0.c2 FROM v0, rt0 FULL OUTER JOIN t0 ON ((((CASE rt0.c5  WHEN rt0.c0 THEN v0.c2 ELSE NULL END)OR(((rt0.c0) IS TRUE))))OR(0.6126028354976613));
SELECT DISTINCT rt0.c5, rt0.c3, rt0.c2 FROM rt0, v0;
SELECT DISTINCT rt0.c5, rt0.c3, rt0.c2 FROM rt0, v0 WHERE (rt0.c3) UNION SELECT DISTINCT rt0.c5, rt0.c3, rt0.c2 FROM rt0, v0 WHERE ((NOT (rt0.c3))) UNION SELECT DISTINCT rt0.c5, rt0.c3, rt0.c2 FROM rt0, v0 WHERE (((rt0.c3) ISNULL));
SELECT DISTINCT rt0.c5, rt0.c3, rt0.c2 FROM rt0, v0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 WHERE (0.4461763626181491) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT (0.4461763626181491))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE (((0.4461763626181491) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL rt0.c0, rt0.c5, rt0.c4, rt0.c6, rt0.c2, rt0.c1, rt0.c3 FROM rt0, t0 GROUP BY rt0.c0, rt0.c5, rt0.c4, rt0.c6, rt0.c2, rt0.c1, rt0.c3;
SELECT rt0.c0, rt0.c5, rt0.c4, rt0.c6, rt0.c2, rt0.c1, rt0.c3 FROM rt0, t0 GROUP BY rt0.c0, rt0.c5, rt0.c4, rt0.c6, rt0.c2, rt0.c1, rt0.c3 HAVING (((((SUM(rt0.c2), MIN(rt0.c5), rt0.c5))=((rt0.c6, -1561433859, TOTAL(rt0.c4)))))IS NOT(TOTAL(MIN(t0.c0)))) UNION ALL SELECT rt0.c0, rt0.c5, rt0.c4, rt0.c6, rt0.c2, rt0.c1, rt0.c3 FROM rt0, t0 GROUP BY rt0.c0, rt0.c5, rt0.c4, rt0.c6, rt0.c2, rt0.c1, rt0.c3 HAVING (NOT ((((((SUM(rt0.c2), MIN(rt0.c5), rt0.c5))==((rt0.c6, -1561433859, TOTAL(rt0.c4)))))IS NOT(TOTAL(MIN(t0.c0)))))) UNION ALL SELECT ALL rt0.c0, rt0.c5, rt0.c4, rt0.c6, rt0.c2, rt0.c1, rt0.c3 FROM rt0, t0 GROUP BY rt0.c0, rt0.c5, rt0.c4, rt0.c6, rt0.c2, rt0.c1, rt0.c3 HAVING (((((((SUM(rt0.c2), MIN(rt0.c5), rt0.c5))=((rt0.c6, -1561433859, TOTAL(rt0.c4)))))IS NOT(TOTAL(MIN(t0.c0))))) ISNULL);
SELECT v0.c1, v0.c0, v0.c2 FROM v0;
SELECT ALL v0.c1, v0.c0, v0.c2 FROM v0 WHERE ((((NOT (v0.c2))) BETWEEN (((v0.c1)+(v0.c1))) AND (((v0.c1)&(v0.c1))))) UNION ALL SELECT ALL v0.c1, v0.c0, v0.c2 FROM v0 WHERE ((NOT ((((NOT (v0.c2))) BETWEEN (((v0.c1)+(v0.c1))) AND (((v0.c1)&(v0.c1))))))) UNION ALL SELECT v0.c1, v0.c0, v0.c2 FROM v0 WHERE ((((((NOT (v0.c2))) BETWEEN (((v0.c1)+(v0.c1))) AND (((v0.c1)&(v0.c1))))) ISNULL));
SELECT v0.c1, v0.c0, v0.c2 FROM v0;
SELECT DISTINCT v0.c2, rt0.c2 FROM rt0, v0;
SELECT DISTINCT v0.c2, rt0.c2 FROM rt0, v0 WHERE ((((rt0.c3)) NOT BETWEEN ((((v0.c2) NOT BETWEEN (v0.c0) AND (rt0.c5)))) AND ((0.15750349520356155)))) UNION SELECT DISTINCT v0.c2, rt0.c2 FROM rt0, v0 WHERE ((NOT ((((rt0.c3)) NOT BETWEEN ((((v0.c2) NOT BETWEEN (v0.c0) AND (rt0.c5)))) AND ((0.15750349520356155)))))) UNION SELECT DISTINCT v0.c2, rt0.c2 FROM rt0, v0 WHERE ((((((rt0.c3)) NOT BETWEEN ((((v0.c2) NOT BETWEEN (v0.c0) AND (rt0.c5)))) AND ((0.15750349520356155)))) ISNULL));
SELECT DISTINCT v0.c2, rt0.c2 FROM rt0, v0;
SELECT ALL v0.c0 FROM t0, v0 GROUP BY v0.c0;
SELECT v0.c0 FROM t0, v0 WHERE (((t0.c0) BETWEEN (v0.c2) AND (v0.c1)) COLLATE RTRIM) GROUP BY v0.c0 UNION SELECT v0.c0 FROM t0, v0 WHERE ((NOT (((t0.c0) BETWEEN (v0.c2) AND (v0.c1)) COLLATE RTRIM))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM t0, v0 WHERE (((((t0.c0) BETWEEN (v0.c2) AND (v0.c1)) COLLATE RTRIM) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM t0, v0 GROUP BY v0.c0;
SELECT ALL rt0.c1 FROM t0, rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM t0, rt0 GROUP BY rt0.c1 HAVING ((((rt0.c0)AND(AVG(GROUP_CONCAT(rt0.c4)))))OR(COUNT(rt0.c4))) UNION ALL SELECT rt0.c1 FROM t0, rt0 GROUP BY rt0.c1 HAVING (NOT (((((rt0.c0)AND(AVG(GROUP_CONCAT(rt0.c4)))))OR(COUNT(rt0.c4))))) UNION ALL SELECT rt0.c1 FROM t0, rt0 GROUP BY rt0.c1 HAVING ((((((rt0.c0)AND(AVG(GROUP_CONCAT(rt0.c4)))))OR(COUNT(rt0.c4)))) ISNULL);
SELECT ALL MIN(((((v0.c1) NOT BETWEEN (v0.c2) AND (rt0.c1)))LIKE(((t0.c0)+(rt0.c2))))) FROM rt0, v0, t0;
SELECT ALL * FROM t0, v0;
SELECT ALL * FROM t0, v0 WHERE (NULLIF((((t0.c0))<=((NULL))), ((((((((v0.c1)OR(t0.c0)))AND(v0.c0)))OR(v0.c1)))OR(v0.c0)))) UNION ALL SELECT ALL * FROM t0, v0 WHERE ((NOT (NULLIF((((t0.c0))<=((NULL))), ((((((((v0.c1)OR(t0.c0)))AND(v0.c0)))OR(v0.c1)))OR(v0.c0)))))) UNION ALL SELECT * FROM t0, v0 WHERE (((NULLIF((((t0.c0))<=((NULL))), ((((((((v0.c1)OR(t0.c0)))AND(v0.c0)))OR(v0.c1)))OR(v0.c0)))) ISNULL));
SELECT ALL * FROM t0, v0;
SELECT DISTINCT t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0 WHERE (t0.c0) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((NOT (t0.c0))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE (((t0.c0) ISNULL));
SELECT DISTINCT t0.c0 FROM t0;
SELECT ALL v0.c1, rt0.c0 FROM t0, v0 RIGHT OUTER JOIN rt0 ON (((rt0.c0 COLLATE NOCASE, (((rt0.c1, rt0.c4, v0.c2))<((t0.c0, v0.c1, rt0.c3))), ((((0.15593448331364568)AND(rt0.c1)))OR(rt0.c1))))<(('-696215008', rt0.c2, CAST(v0.c1 AS NUMERIC)))) GROUP BY v0.c1, rt0.c0;
SELECT v0.c1, rt0.c0 FROM t0, v0 RIGHT OUTER JOIN rt0 ON (((rt0.c0 COLLATE NOCASE, (((rt0.c1, rt0.c4, v0.c2))<((t0.c0, v0.c1, rt0.c3))), ((((0.15593448331364568)AND(rt0.c1)))OR(rt0.c1))))<(('-696215008', rt0.c2, CAST(v0.c1 AS NUMERIC)))) WHERE (((NULL) BETWEEN (((((((((rt0.c5)OR('bfzY!LjDh')))OR(v0.c2)))OR(9.24864417E8)))AND(rt0.c3))) AND (IFNULL(DISTINCT rt0.c1, v0.c1)))) GROUP BY v0.c1, rt0.c0 UNION SELECT ALL v0.c1, rt0.c0 FROM t0, v0 RIGHT OUTER JOIN rt0 ON (((rt0.c0 COLLATE NOCASE, (((rt0.c1, rt0.c4, v0.c2))<((t0.c0, v0.c1, rt0.c3))), ((((0.15593448331364568)AND(rt0.c1)))OR(rt0.c1))))<(('-696215008', rt0.c2, CAST(v0.c1 AS NUMERIC)))) WHERE ((NOT (((NULL) BETWEEN (((((((((rt0.c5)OR('bfzY!LjDh')))OR(v0.c2)))OR(9.24864417E8)))AND(rt0.c3))) AND (IFNULL(DISTINCT rt0.c1, v0.c1)))))) GROUP BY v0.c1, rt0.c0 UNION SELECT ALL v0.c1, rt0.c0 FROM t0, v0 RIGHT OUTER JOIN rt0 ON (((rt0.c0 COLLATE NOCASE, (((rt0.c1, rt0.c4, v0.c2))<((t0.c0, v0.c1, rt0.c3))), ((((0.15593448331364568)AND(rt0.c1)))OR(rt0.c1))))<(('-696215008', rt0.c2, CAST(v0.c1 AS NUMERIC)))) WHERE (((((NULL) BETWEEN (((((((((rt0.c5)OR('bfzY!LjDh')))OR(v0.c2)))OR(9.24864417E8)))AND(rt0.c3))) AND (IFNULL(DISTINCT rt0.c1, v0.c1)))) ISNULL)) GROUP BY v0.c1, rt0.c0;
SELECT ALL v0.c1, rt0.c0 FROM t0, v0 RIGHT OUTER JOIN rt0 ON (((rt0.c0 COLLATE NOCASE, (((rt0.c1, rt0.c4, v0.c2))<((t0.c0, v0.c1, rt0.c3))), ((((0.15593448331364568)AND(rt0.c1)))OR(rt0.c1))))<(('-696215008', rt0.c2, CAST(v0.c1 AS NUMERIC)))) GROUP BY v0.c1, rt0.c0;
SELECT rt0.c3, t0.c0, rt0.c6, rt0.c2, rt0.c5, rt0.c0, rt0.c1, rt0.c4 FROM rt0, t0 GROUP BY rt0.c3, t0.c0, rt0.c6, rt0.c2, rt0.c5, rt0.c0, rt0.c1, rt0.c4;
SELECT ALL rt0.c3, t0.c0, rt0.c6, rt0.c2, rt0.c5, rt0.c0, rt0.c1, rt0.c4 FROM rt0, t0 GROUP BY rt0.c3, t0.c0, rt0.c6, rt0.c2, rt0.c5, rt0.c0, rt0.c1, rt0.c4 HAVING SUM(MAX(MIN(rt0.c5))) COLLATE RTRIM UNION ALL SELECT ALL rt0.c3, t0.c0, rt0.c6, rt0.c2, rt0.c5, rt0.c0, rt0.c1, rt0.c4 FROM rt0, t0 GROUP BY rt0.c3, t0.c0, rt0.c6, rt0.c2, rt0.c5, rt0.c0, rt0.c1, rt0.c4 HAVING (NOT (SUM(MAX(MIN(rt0.c5))) COLLATE RTRIM)) UNION ALL SELECT rt0.c3, t0.c0, rt0.c6, rt0.c2, rt0.c5, rt0.c0, rt0.c1, rt0.c4 FROM rt0, t0 GROUP BY rt0.c3, t0.c0, rt0.c6, rt0.c2, rt0.c5, rt0.c0, rt0.c1, rt0.c4 HAVING ((SUM(MAX(MIN(rt0.c5))) COLLATE RTRIM) ISNULL);
SELECT * FROM v0;
SELECT ALL * FROM v0 WHERE (((((((v0.c1)-(v0.c2)))AND(CAST(v0.c2 AS NUMERIC))))OR((~ (v0.c1))))) UNION ALL SELECT * FROM v0 WHERE ((NOT (((((((v0.c1)-(v0.c2)))AND(CAST(v0.c2 AS NUMERIC))))OR((~ (v0.c1))))))) UNION ALL SELECT ALL * FROM v0 WHERE (((((((((v0.c1)-(v0.c2)))AND(CAST(v0.c2 AS NUMERIC))))OR((~ (v0.c1))))) ISNULL));
SELECT * FROM v0;
SELECT DISTINCT t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0 WHERE (CAST(((x'')+(t0.c0)) AS INTEGER)) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((NOT (CAST(((x'')+(t0.c0)) AS INTEGER)))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE (((CAST(((x'')+(t0.c0)) AS INTEGER)) ISNULL));
SELECT DISTINCT t0.c0 FROM t0;
SELECT ALL rt0.c0, v0.c1, v0.c2, rt0.c2, t0.c0, rt0.c1, rt0.c4, v0.c0, rt0.c5, rt0.c6, rt0.c3 FROM v0, rt0, t0 GROUP BY rt0.c0, v0.c1, v0.c2, rt0.c2, t0.c0, rt0.c1, rt0.c4, v0.c0, rt0.c5, rt0.c6, rt0.c3;
SELECT ALL rt0.c0, v0.c1, v0.c2, rt0.c2, t0.c0, rt0.c1, rt0.c4, v0.c0, rt0.c5, rt0.c6, rt0.c3 FROM v0, rt0, t0 WHERE ((~ ((((rt0.c0)) BETWEEN ((rt0.c3)) AND ((v0.c2)))))) GROUP BY rt0.c0, v0.c1, v0.c2, rt0.c2, t0.c0, rt0.c1, rt0.c4, v0.c0, rt0.c5, rt0.c6, rt0.c3 UNION SELECT rt0.c0, v0.c1, v0.c2, rt0.c2, t0.c0, rt0.c1, rt0.c4, v0.c0, rt0.c5, rt0.c6, rt0.c3 FROM v0, rt0, t0 WHERE ((NOT ((~ ((((rt0.c0)) BETWEEN ((rt0.c3)) AND ((v0.c2)))))))) GROUP BY rt0.c0, v0.c1, v0.c2, rt0.c2, t0.c0, rt0.c1, rt0.c4, v0.c0, rt0.c5, rt0.c6, rt0.c3 UNION SELECT ALL rt0.c0, v0.c1, v0.c2, rt0.c2, t0.c0, rt0.c1, rt0.c4, v0.c0, rt0.c5, rt0.c6, rt0.c3 FROM v0, rt0, t0 WHERE ((((~ ((((rt0.c0)) BETWEEN ((rt0.c3)) AND ((v0.c2)))))) ISNULL)) GROUP BY rt0.c0, v0.c1, v0.c2, rt0.c2, t0.c0, rt0.c1, rt0.c4, v0.c0, rt0.c5, rt0.c6, rt0.c3;
SELECT ALL rt0.c0, v0.c1, v0.c2, rt0.c2, t0.c0, rt0.c1, rt0.c4, v0.c0, rt0.c5, rt0.c6, rt0.c3 FROM v0, rt0, t0 GROUP BY rt0.c0, v0.c1, v0.c2, rt0.c2, t0.c0, rt0.c1, rt0.c4, v0.c0, rt0.c5, rt0.c6, rt0.c3;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (((MIN(v0.c0))) BETWEEN ((CASE WHEN MAX(MIN(TOTAL(GROUP_CONCAT(MAX(v0.c1))))) THEN MAX(v0.c1) ELSE GROUP_CONCAT(GROUP_CONCAT(MAX(v0.c0))) END)) AND ((((((COUNT(*))OR(v0.c2)))OR(v0.c2))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT ((((MIN(v0.c0))) BETWEEN ((CASE WHEN MAX(MIN(TOTAL(GROUP_CONCAT(MAX(v0.c1))))) THEN MAX(v0.c1) ELSE GROUP_CONCAT(GROUP_CONCAT(MAX(v0.c0))) END)) AND ((((((COUNT(*))OR(v0.c2)))OR(v0.c2))))))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (((((MIN(v0.c0))) BETWEEN ((CASE WHEN MAX(MIN(TOTAL(GROUP_CONCAT(MAX(v0.c1))))) THEN MAX(v0.c1) ELSE GROUP_CONCAT(GROUP_CONCAT(MAX(v0.c0))) END)) AND ((((((COUNT(*))OR(v0.c2)))OR(v0.c2)))))) ISNULL);
SELECT ALL * FROM v0 RIGHT OUTER JOIN t0 ON CASE (v0.c0 IN ())  WHEN ((v0.c0) BETWEEN (v0.c1) AND (v0.c2)) THEN ((v0.c1)>=('逪Rq.\\rynow㹎(')) WHEN ((v0.c0) NOT BETWEEN (v0.c2) AND (v0.c2)) THEN ((v0.c0)-(v0.c0)) WHEN (t0.c0 IN ()) THEN ((v0.c1)||(v0.c1)) WHEN LIKELY(DISTINCT v0.c0) THEN ((v0.c0)<<(v0.c1)) WHEN ((v0.c2)%(v0.c0)) THEN ((v0.c0)=(v0.c0)) END;
SELECT * FROM v0 RIGHT OUTER JOIN t0 ON CASE (v0.c0 IN ())  WHEN ((v0.c0) BETWEEN (v0.c1) AND (v0.c2)) THEN ((v0.c1)>=('逪Rq.\\rynow㹎(')) WHEN ((v0.c0) NOT BETWEEN (v0.c2) AND (v0.c2)) THEN ((v0.c0)-(v0.c0)) WHEN (t0.c0 IN ()) THEN ((v0.c1)||(v0.c1)) WHEN LIKELY(DISTINCT v0.c0) THEN ((v0.c0)<<(v0.c1)) WHEN ((v0.c2)%(v0.c0)) THEN ((v0.c0)==(v0.c0)) END WHERE ((((0.8206657523474002) NOT NULL) IN ())) UNION ALL SELECT * FROM v0 RIGHT OUTER JOIN t0 ON CASE (v0.c0 IN ())  WHEN ((v0.c0) BETWEEN (v0.c1) AND (v0.c2)) THEN ((v0.c1)>=('逪Rq.\\rynow㹎(')) WHEN ((v0.c0) NOT BETWEEN (v0.c2) AND (v0.c2)) THEN ((v0.c0)-(v0.c0)) WHEN (t0.c0 IN ()) THEN ((v0.c1)||(v0.c1)) WHEN LIKELY(DISTINCT v0.c0) THEN ((v0.c0)<<(v0.c1)) WHEN ((v0.c2)%(v0.c0)) THEN ((v0.c0)=(v0.c0)) END WHERE ((NOT ((((0.8206657523474002) NOT NULL) IN ())))) UNION ALL SELECT ALL * FROM v0 RIGHT OUTER JOIN t0 ON CASE (v0.c0 IN ())  WHEN ((v0.c0) BETWEEN (v0.c1) AND (v0.c2)) THEN ((v0.c1)>=('逪Rq.\\rynow㹎(')) WHEN ((v0.c0) NOT BETWEEN (v0.c2) AND (v0.c2)) THEN ((v0.c0)-(v0.c0)) WHEN (t0.c0 IN ()) THEN ((v0.c1)||(v0.c1)) WHEN LIKELY(DISTINCT v0.c0) THEN ((v0.c0)<<(v0.c1)) WHEN ((v0.c2)%(v0.c0)) THEN ((v0.c0)==(v0.c0)) END WHERE ((((((0.8206657523474002) NOT NULL) IN ())) ISNULL));
SELECT ALL * FROM v0 RIGHT OUTER JOIN t0 ON CASE (v0.c0 IN ())  WHEN ((v0.c0) BETWEEN (v0.c1) AND (v0.c2)) THEN ((v0.c1)>=('逪Rq.\\rynow㹎(')) WHEN ((v0.c0) NOT BETWEEN (v0.c2) AND (v0.c2)) THEN ((v0.c0)-(v0.c0)) WHEN (t0.c0 IN ()) THEN ((v0.c1)||(v0.c1)) WHEN LIKELY(DISTINCT v0.c0) THEN ((v0.c0)<<(v0.c1)) WHEN ((v0.c2)%(v0.c0)) THEN ((v0.c0)=(v0.c0)) END;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (((CAST(t0.c0 AS NUMERIC)) BETWEEN ((+ (t0.c0))) AND (((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))OR(t0.c0)))OR(t0.c0))))) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (((CAST(t0.c0 AS NUMERIC)) BETWEEN ((+ (t0.c0))) AND (((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))OR(t0.c0)))OR(t0.c0))))))) UNION SELECT DISTINCT * FROM t0 WHERE (((((CAST(t0.c0 AS NUMERIC)) BETWEEN ((+ (t0.c0))) AND (((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))OR(t0.c0)))OR(t0.c0))))) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE (json_type('-453582175')) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT (json_type('-453582175')))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE (((json_type('-453582175')) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL v0.c1, rt0.c4, rt0.c3, rt0.c2, v0.c2, t0.c0, rt0.c0 FROM t0, rt0, v0 GROUP BY v0.c1, rt0.c4, rt0.c3, rt0.c2, v0.c2, t0.c0, rt0.c0;
SELECT ALL v0.c1, rt0.c4, rt0.c3, rt0.c2, v0.c2, t0.c0, rt0.c0 FROM t0, rt0, v0 GROUP BY v0.c1, rt0.c4, rt0.c3, rt0.c2, v0.c2, t0.c0, rt0.c0 HAVING SUM(MAX(rt0.c0)) UNION ALL SELECT v0.c1, rt0.c4, rt0.c3, rt0.c2, v0.c2, t0.c0, rt0.c0 FROM t0, rt0, v0 GROUP BY v0.c1, rt0.c4, rt0.c3, rt0.c2, v0.c2, t0.c0, rt0.c0 HAVING (NOT (SUM(MAX(rt0.c0)))) UNION ALL SELECT v0.c1, rt0.c4, rt0.c3, rt0.c2, v0.c2, t0.c0, rt0.c0 FROM t0, rt0, v0 GROUP BY v0.c1, rt0.c4, rt0.c3, rt0.c2, v0.c2, t0.c0, rt0.c0 HAVING ((SUM(MAX(rt0.c0))) ISNULL);
SELECT ALL * FROM t0, rt0;
SELECT ALL * FROM t0, rt0 WHERE (CASE CAST(rt0.c0 AS BLOB)  WHEN (+ (rt0.c5)) THEN (rt0.c1 IN ()) END) UNION ALL SELECT * FROM t0, rt0 WHERE ((NOT (CASE CAST(rt0.c0 AS BLOB)  WHEN (+ (rt0.c5)) THEN (rt0.c1 IN ()) END))) UNION ALL SELECT ALL * FROM t0, rt0 WHERE (((CASE CAST(rt0.c0 AS BLOB)  WHEN (+ (rt0.c5)) THEN (rt0.c1 IN ()) END) ISNULL));
SELECT ALL * FROM t0, rt0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (((((t0.c0)|(t0.c0)))-(((t0.c0)<=(t0.c0))))) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (((((t0.c0)|(t0.c0)))-(((t0.c0)<=(t0.c0))))))) UNION SELECT DISTINCT * FROM t0 WHERE (((((((t0.c0)|(t0.c0)))-(((t0.c0)<=(t0.c0))))) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT rt0.c3, rt0.c0, rt0.c2, rt0.c5 FROM rt0, t0 GROUP BY rt0.c3, rt0.c0, rt0.c2, rt0.c5;
SELECT rt0.c3, rt0.c0, rt0.c2, rt0.c5 FROM rt0, t0 WHERE ((((CAST(rt0.c1 AS BLOB)))<((NULL)))) GROUP BY rt0.c3, rt0.c0, rt0.c2, rt0.c5 UNION SELECT ALL rt0.c3, rt0.c0, rt0.c2, rt0.c5 FROM rt0, t0 WHERE ((NOT ((((CAST(rt0.c1 AS BLOB)))<((NULL)))))) GROUP BY rt0.c3, rt0.c0, rt0.c2, rt0.c5 UNION SELECT rt0.c3, rt0.c0, rt0.c2, rt0.c5 FROM rt0, t0 WHERE ((((((CAST(rt0.c1 AS BLOB)))<((NULL)))) ISNULL)) GROUP BY rt0.c3, rt0.c0, rt0.c2, rt0.c5;
SELECT rt0.c3, rt0.c0, rt0.c2, rt0.c5 FROM rt0, t0 GROUP BY rt0.c3, rt0.c0, rt0.c2, rt0.c5;
SELECT v0.c0, t0.c0 FROM t0, v0 GROUP BY v0.c0, t0.c0;
SELECT v0.c0, t0.c0 FROM t0, v0 GROUP BY v0.c0, t0.c0 HAVING AVG(AVG(MAX(v0.c1))) UNION ALL SELECT v0.c0, t0.c0 FROM t0, v0 GROUP BY v0.c0, t0.c0 HAVING (NOT (AVG(AVG(MAX(v0.c1))))) UNION ALL SELECT ALL v0.c0, t0.c0 FROM t0, v0 GROUP BY v0.c0, t0.c0 HAVING ((AVG(AVG(MAX(v0.c1)))) ISNULL);
SELECT rt0.c1, t0.c0 FROM rt0 FULL OUTER JOIN t0 ON (((json_remove(rt0.c4, rt0.c0, rt0.c1, t0.c0)))<=(('-2133812350'))) LEFT OUTER JOIN v0 ON (((((rt0.c5))>=((v0.c1)))) ISNULL);
SELECT rt0.c1, t0.c0 FROM rt0 FULL OUTER JOIN t0 ON (((json_remove(rt0.c4, rt0.c0, rt0.c1, t0.c0)))<=(('-2133812350'))) LEFT OUTER JOIN v0 ON (((((rt0.c5))>=((v0.c1)))) ISNULL) WHERE (((((((((v0.c1 COLLATE RTRIM)OR((((v0.c2)) BETWEEN ((rt0.c4)) AND ((rt0.c2))))))OR(0.4996360957689635)))AND(((((v0.c1)AND(NULL)))AND(NULL)))))AND(NULL))) UNION ALL SELECT ALL rt0.c1, t0.c0 FROM rt0 FULL OUTER JOIN t0 ON (((json_remove(rt0.c4, rt0.c0, rt0.c1, t0.c0)))<=(('-2133812350'))) LEFT OUTER JOIN v0 ON (((((rt0.c5))>=((v0.c1)))) ISNULL) WHERE ((NOT (((((((((v0.c1 COLLATE RTRIM)OR((((v0.c2)) BETWEEN ((rt0.c4)) AND ((rt0.c2))))))OR(0.4996360957689635)))AND(((((v0.c1)AND(NULL)))AND(NULL)))))AND(NULL))))) UNION ALL SELECT rt0.c1, t0.c0 FROM rt0 FULL OUTER JOIN t0 ON (((json_remove(rt0.c4, rt0.c0, rt0.c1, t0.c0)))<=(('-2133812350'))) LEFT OUTER JOIN v0 ON (((((rt0.c5))>=((v0.c1)))) ISNULL) WHERE (((((((((((v0.c1 COLLATE RTRIM)OR((((v0.c2)) BETWEEN ((rt0.c4)) AND ((rt0.c2))))))OR(0.4996360957689635)))AND(((((v0.c1)AND(NULL)))AND(NULL)))))AND(NULL))) ISNULL));
SELECT rt0.c1, t0.c0 FROM rt0 FULL OUTER JOIN t0 ON (((json_remove(rt0.c4, rt0.c0, rt0.c1, t0.c0)))<=(('-2133812350'))) LEFT OUTER JOIN v0 ON (((((rt0.c5))>=((v0.c1)))) ISNULL);
SELECT DISTINCT v0.c0, rt0.c4, rt0.c3, rt0.c2 FROM v0, t0 INNER JOIN rt0 ON ((((rt0.c5)IS NOT(v0.c1))) NOT BETWEEN (((v0.c0)LIKE(x''))) AND (((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c2))));
SELECT DISTINCT v0.c0, rt0.c4, rt0.c3, rt0.c2 FROM v0 NOT INDEXED, t0 INNER JOIN rt0 ON ((((rt0.c5)IS NOT(v0.c1))) NOT BETWEEN (((v0.c0)LIKE(x''))) AND (((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c2)))) WHERE ((((v0.c2 IN ())) NOT BETWEEN (((v0.c1)%(rt0.c5))) AND (((((v0.c2)OR(rt0.c0)))OR(rt0.c4))))) UNION SELECT DISTINCT v0.c0, rt0.c4, rt0.c3, rt0.c2 FROM v0, t0 INNER JOIN rt0 ON ((((rt0.c5)IS NOT(v0.c1))) NOT BETWEEN (((v0.c0)LIKE(x''))) AND (((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c2)))) WHERE ((NOT ((((v0.c2 IN ())) NOT BETWEEN (((v0.c1)%(rt0.c5))) AND (((((v0.c2)OR(rt0.c0)))OR(rt0.c4))))))) UNION SELECT DISTINCT v0.c0, rt0.c4, rt0.c3, rt0.c2 FROM v0, t0 INNER JOIN rt0 ON ((((rt0.c5)IS NOT(v0.c1))) NOT BETWEEN (((v0.c0)LIKE(x''))) AND (((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c2)))) WHERE ((((((v0.c2 IN ())) NOT BETWEEN (((v0.c1)%(rt0.c5))) AND (((((v0.c2)OR(rt0.c0)))OR(rt0.c4))))) ISNULL));
SELECT DISTINCT v0.c0, rt0.c4, rt0.c3, rt0.c2 FROM v0, t0 INNER JOIN rt0 ON ((((rt0.c5)IS NOT(v0.c1))) NOT BETWEEN (((v0.c0)LIKE(x''))) AND (((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c2))));
SELECT ALL rt0.c5, rt0.c1, v0.c1, v0.c0, rt0.c6 FROM t0 RIGHT OUTER JOIN v0 ON ((CASE WHEN rt0.c3 THEN rt0.c3 END)||((v0.c0 IN (v0.c1)))) INNER JOIN rt0 ON (((('977771373')OR(rt0.c0)))AND(((((rt0.c2)OR(rt0.c1)))AND(v0.c2)))) GROUP BY rt0.c5, rt0.c1, v0.c1, v0.c0, rt0.c6;
SELECT ALL rt0.c3, v0.c2, t0.c0, v0.c1, rt0.c0, v0.c0 FROM t0, rt0, v0 GROUP BY rt0.c3, v0.c2, t0.c0, v0.c1, rt0.c0, v0.c0;
SELECT rt0.c3, v0.c2, t0.c0, v0.c1, rt0.c0, v0.c0 FROM t0, rt0, v0 GROUP BY rt0.c3, v0.c2, t0.c0, v0.c1, rt0.c0, v0.c0 HAVING AVG(COUNT(*)) UNION ALL SELECT rt0.c3, v0.c2, t0.c0, v0.c1, rt0.c0, v0.c0 FROM t0, rt0, v0 GROUP BY rt0.c3, v0.c2, t0.c0, v0.c1, rt0.c0, v0.c0 HAVING (NOT (AVG(COUNT(*)))) UNION ALL SELECT ALL rt0.c3, v0.c2, t0.c0, v0.c1, rt0.c0, v0.c0 FROM t0, rt0, v0 GROUP BY rt0.c3, v0.c2, t0.c0, v0.c1, rt0.c0, v0.c0 HAVING ((AVG(COUNT(*))) ISNULL);
SELECT * FROM t0, v0, rt0;
SELECT * FROM t0, v0, rt0 WHERE ((- (((v0.c1) IS TRUE)))) UNION ALL SELECT ALL * FROM t0, v0, rt0 WHERE ((NOT ((- (((v0.c1) IS TRUE)))))) UNION ALL SELECT * FROM t0, v0, rt0 WHERE ((((- (((v0.c1) IS TRUE)))) ISNULL));
SELECT * FROM t0, v0, rt0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (0.7735831474082344) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (0.7735831474082344))) UNION SELECT DISTINCT * FROM v0 WHERE (((0.7735831474082344) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT rt0.c5 FROM rt0, t0 GROUP BY rt0.c5;
SELECT rt0.c5 FROM rt0, t0 WHERE (((CASE WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c2 END)<(CASE WHEN rt0.c3 THEN rt0.c5 END))) GROUP BY rt0.c5 UNION SELECT ALL rt0.c5 FROM rt0, t0 WHERE ((NOT (((CASE WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c2 END)<(CASE WHEN rt0.c3 THEN rt0.c5 END))))) GROUP BY rt0.c5 UNION SELECT rt0.c5 FROM rt0, t0 WHERE (((((CASE WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c2 END)<(CASE WHEN rt0.c3 THEN rt0.c5 END))) ISNULL)) GROUP BY rt0.c5;
SELECT rt0.c5 FROM rt0, t0 GROUP BY rt0.c5;
SELECT ALL v0.c2, t0.c0, v0.c0 FROM t0, v0 GROUP BY v0.c2, t0.c0, v0.c0;
SELECT ALL v0.c2, t0.c0, v0.c0 FROM t0, v0 GROUP BY v0.c2, t0.c0, v0.c0 HAVING SUM(COUNT(*)) UNION ALL SELECT v0.c2, t0.c0, v0.c0 FROM t0, v0 GROUP BY v0.c2, t0.c0, v0.c0 HAVING (NOT (SUM(COUNT(*)))) UNION ALL SELECT ALL v0.c2, t0.c0, v0.c0 FROM t0, v0 GROUP BY v0.c2, t0.c0, v0.c0 HAVING ((SUM(COUNT(*))) ISNULL);
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE ((~ ((NOT (rt0.c0))))) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT ((~ ((NOT (rt0.c0))))))) UNION ALL SELECT ALL * FROM rt0 WHERE ((((~ ((NOT (rt0.c0))))) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT v0.c1 FROM t0 LEFT OUTER JOIN v0 ON v0.c2;
SELECT DISTINCT v0.c1 FROM t0 LEFT OUTER JOIN v0 ON v0.c2 WHERE (((((v0.c1) BETWEEN (v0.c0) AND (t0.c0))) NOT BETWEEN (x'') AND (((((v0.c2)AND(v0.c0)))AND(t0.c0))))) UNION SELECT DISTINCT v0.c1 FROM t0 LEFT OUTER JOIN v0 ON v0.c2 WHERE ((NOT (((((v0.c1) BETWEEN (v0.c0) AND (t0.c0))) NOT BETWEEN (x'') AND (((((v0.c2)AND(v0.c0)))AND(t0.c0))))))) UNION SELECT DISTINCT v0.c1 FROM t0 LEFT OUTER JOIN v0 ON v0.c2 WHERE (((((((v0.c1) BETWEEN (v0.c0) AND (t0.c0))) NOT BETWEEN (x'') AND (((((v0.c2)AND(v0.c0)))AND(t0.c0))))) ISNULL));
SELECT DISTINCT v0.c1 FROM t0 LEFT OUTER JOIN v0 ON v0.c2;
SELECT ALL t0.c0 FROM v0, t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM v0, t0 WHERE (NULL) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM v0, t0 WHERE ((NOT (NULL))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM v0, t0 WHERE (((NULL) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM v0, t0 GROUP BY t0.c0;
SELECT v0.c1, v0.c2 FROM t0, v0 RIGHT OUTER JOIN rt0 ON CASE (rt0.c5 IN ())  WHEN (t0.c0 IN ()) THEN NULL END GROUP BY v0.c1, v0.c2;
SELECT ALL v0.c1, v0.c2 FROM t0, v0 RIGHT OUTER JOIN rt0 ON CASE (rt0.c5 IN ())  WHEN (t0.c0 IN ()) THEN NULL END GROUP BY v0.c1, v0.c2 HAVING SUM(AVG(GROUP_CONCAT(AVG(rt0.c5)))) UNION ALL SELECT ALL v0.c1, v0.c2 FROM t0, v0 RIGHT OUTER JOIN rt0 ON CASE (rt0.c5 IN ())  WHEN (t0.c0 IN ()) THEN NULL END GROUP BY v0.c1, v0.c2 HAVING (NOT (SUM(AVG(GROUP_CONCAT(AVG(rt0.c5)))))) UNION ALL SELECT v0.c1, v0.c2 FROM t0, v0 RIGHT OUTER JOIN rt0 ON CASE (rt0.c5 IN ())  WHEN (t0.c0 IN ()) THEN NULL END GROUP BY v0.c1, v0.c2 HAVING ((SUM(AVG(GROUP_CONCAT(AVG(rt0.c5))))) ISNULL);
SELECT ALL SUM((((~ (v0.c0))) NOTNULL)) FROM v0, t0, rt0;
SELECT * FROM v0, t0, rt0;
SELECT ALL * FROM v0, t0, rt0 WHERE ((CASE WHEN rt0.c2 THEN v0.c0 END IN (rt0.c6))) UNION ALL SELECT * FROM v0, t0, rt0 WHERE ((NOT ((CASE WHEN rt0.c2 THEN v0.c0 END IN (rt0.c6))))) UNION ALL SELECT ALL * FROM v0, t0, rt0 WHERE ((((CASE WHEN rt0.c2 THEN v0.c0 END IN (rt0.c6))) ISNULL));
SELECT * FROM v0, t0, rt0;
SELECT DISTINCT rt0.c0 FROM v0, rt0;
SELECT DISTINCT rt0.c0 FROM v0, rt0 WHERE ((((v0.c1)) BETWEEN (((+ (rt0.c2)))) AND ((((((v0.c2)AND(rt0.c5)))OR(v0.c2)))))) UNION SELECT DISTINCT rt0.c0 FROM v0, rt0 WHERE ((NOT ((((v0.c1)) BETWEEN (((+ (rt0.c2)))) AND ((((((v0.c2)AND(rt0.c5)))OR(v0.c2)))))))) UNION SELECT DISTINCT rt0.c0 FROM v0, rt0 WHERE ((((((v0.c1)) BETWEEN (((+ (rt0.c2)))) AND ((((((v0.c2)AND(rt0.c5)))OR(v0.c2)))))) ISNULL));
SELECT DISTINCT rt0.c0 FROM v0, rt0;
SELECT ALL v0.c1, rt0.c4, rt0.c0 FROM t0, rt0, v0 GROUP BY v0.c1, rt0.c4, rt0.c0;
SELECT ALL v0.c1, rt0.c4, rt0.c0 FROM t0, rt0, v0 WHERE (((CAST(rt0.c4 AS NUMERIC))GLOB(rt0.c1 COLLATE RTRIM))) GROUP BY v0.c1, rt0.c4, rt0.c0 UNION SELECT ALL v0.c1, rt0.c4, rt0.c0 FROM t0, rt0, v0 WHERE ((NOT (((CAST(rt0.c4 AS NUMERIC))GLOB(rt0.c1 COLLATE RTRIM))))) GROUP BY v0.c1, rt0.c4, rt0.c0 UNION SELECT v0.c1, rt0.c4, rt0.c0 FROM t0, rt0, v0 WHERE (((((CAST(rt0.c4 AS NUMERIC))GLOB(rt0.c1 COLLATE RTRIM))) ISNULL)) GROUP BY v0.c1, rt0.c4, rt0.c0;
SELECT ALL v0.c1, rt0.c4, rt0.c0 FROM t0, rt0, v0 GROUP BY v0.c1, rt0.c4, rt0.c0;
SELECT v0.c0 FROM v0, t0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0, t0 GROUP BY v0.c0 HAVING (COUNT(v0.c2) IN (GROUP_CONCAT(MIN(v0.c2)), MIN(v0.c0))) UNION ALL SELECT ALL v0.c0 FROM v0, t0 GROUP BY v0.c0 HAVING (NOT ((COUNT(v0.c2) IN (GROUP_CONCAT(MIN(v0.c2)), MIN(v0.c0))))) UNION ALL SELECT v0.c0 FROM v0, t0 GROUP BY v0.c0 HAVING (((COUNT(v0.c2) IN (GROUP_CONCAT(MIN(v0.c2)), MIN(v0.c0)))) ISNULL);
SELECT ALL * FROM rt0 CROSS JOIN t0 ON '\Ew-ov' INNER JOIN v0 ON CASE WHEN ((rt0.c3) NOT BETWEEN (v0.c2) AND (rt0.c5)) THEN (((x'c19c', v0.c1, rt0.c6))<=((rt0.c0, rt0.c4, rt0.c2))) END;
SELECT * FROM rt0 CROSS JOIN t0 ON '\Ew-ov' INNER JOIN v0 ON CASE WHEN ((rt0.c3) NOT BETWEEN (v0.c2) AND (rt0.c5)) THEN (((x'c19c', v0.c1, rt0.c6))<=((rt0.c0, rt0.c4, rt0.c2))) END WHERE (TYPEOF(DISTINCT v0.c2 COLLATE BINARY)) UNION ALL SELECT ALL * FROM rt0 CROSS JOIN t0 ON '\Ew-ov' INNER JOIN v0 ON CASE WHEN ((rt0.c3) NOT BETWEEN (v0.c2) AND (rt0.c5)) THEN (((x'c19c', v0.c1, rt0.c6))<=((rt0.c0, rt0.c4, rt0.c2))) END WHERE ((NOT (TYPEOF(DISTINCT v0.c2 COLLATE BINARY)))) UNION ALL SELECT * FROM rt0 CROSS JOIN t0 ON '\Ew-ov' INNER JOIN v0 ON CASE WHEN ((rt0.c3) NOT BETWEEN (v0.c2) AND (rt0.c5)) THEN (((x'c19c', v0.c1, rt0.c6))<=((rt0.c0, rt0.c4, rt0.c2))) END WHERE (((TYPEOF(DISTINCT v0.c2 COLLATE BINARY)) ISNULL));
SELECT ALL * FROM rt0 CROSS JOIN t0 ON '\Ew-ov' INNER JOIN v0 ON CASE WHEN ((rt0.c3) NOT BETWEEN (v0.c2) AND (rt0.c5)) THEN (((x'c19c', v0.c1, rt0.c6))<=((rt0.c0, rt0.c4, rt0.c2))) END;
SELECT DISTINCT * FROM rt0 FULL OUTER JOIN t0 ON CAST(x'' AS NUMERIC);
SELECT DISTINCT * FROM rt0 FULL OUTER JOIN t0 ON CAST(x'' AS NUMERIC) WHERE (rt0.c2) UNION SELECT DISTINCT * FROM rt0 FULL OUTER JOIN t0 ON CAST(x'' AS NUMERIC) WHERE ((NOT (rt0.c2))) UNION SELECT DISTINCT * FROM rt0 FULL OUTER JOIN t0 ON CAST(x'' AS NUMERIC) WHERE (((rt0.c2) ISNULL));
SELECT DISTINCT * FROM rt0 FULL OUTER JOIN t0 ON CAST(x'' AS NUMERIC);
SELECT t0.c0, v0.c1, v0.c0, v0.c2 FROM t0 FULL OUTER JOIN v0 ON CASE (((t0.c0)) NOT BETWEEN ((v0.c1)) AND ((v0.c2)))  WHEN t0.c0 COLLATE RTRIM THEN v0.c2 COLLATE RTRIM WHEN ((((v0.c2)AND(v0.c1)))OR(v0.c0)) THEN ((v0.c0)/(NULL)) WHEN ((v0.c2) BETWEEN (v0.c2) AND (t0.c0)) THEN ((v0.c1) NOT BETWEEN (t0.c0) AND (v0.c2)) ELSE ((v0.c1)AND(v0.c2)) END GROUP BY t0.c0, v0.c1, v0.c0, v0.c2;
SELECT ALL t0.c0, v0.c1, v0.c0, v0.c2 FROM t0 FULL OUTER JOIN v0 ON CASE (((t0.c0)) NOT BETWEEN ((v0.c1)) AND ((v0.c2)))  WHEN t0.c0 COLLATE RTRIM THEN v0.c2 COLLATE RTRIM WHEN ((((v0.c2)AND(v0.c1)))OR(v0.c0)) THEN ((v0.c0)/(NULL)) WHEN ((v0.c2) BETWEEN (v0.c2) AND (t0.c0)) THEN ((v0.c1) NOT BETWEEN (t0.c0) AND (v0.c2)) ELSE ((v0.c1)AND(v0.c2)) END WHERE (((CAST(t0.c0 AS REAL)) BETWEEN (0.11666911451655493) AND ((t0.c0 IN (v0.c1))))) GROUP BY t0.c0, v0.c1, v0.c0, v0.c2 UNION SELECT ALL t0.c0, v0.c1, v0.c0, v0.c2 FROM t0 FULL OUTER JOIN v0 ON CASE (((t0.c0)) NOT BETWEEN ((v0.c1)) AND ((v0.c2)))  WHEN t0.c0 COLLATE RTRIM THEN v0.c2 COLLATE RTRIM WHEN ((((v0.c2)AND(v0.c1)))OR(v0.c0)) THEN ((v0.c0)/(NULL)) WHEN ((v0.c2) BETWEEN (v0.c2) AND (t0.c0)) THEN ((v0.c1) NOT BETWEEN (t0.c0) AND (v0.c2)) ELSE ((v0.c1)AND(v0.c2)) END WHERE ((NOT (((CAST(t0.c0 AS REAL)) BETWEEN (0.11666911451655493) AND ((t0.c0 IN (v0.c1))))))) GROUP BY t0.c0, v0.c1, v0.c0, v0.c2 UNION SELECT t0.c0, v0.c1, v0.c0, v0.c2 FROM t0 FULL OUTER JOIN v0 ON CASE (((t0.c0)) NOT BETWEEN ((v0.c1)) AND ((v0.c2)))  WHEN t0.c0 COLLATE RTRIM THEN v0.c2 COLLATE RTRIM WHEN ((((v0.c2)AND(v0.c1)))OR(v0.c0)) THEN ((v0.c0)/(NULL)) WHEN ((v0.c2) BETWEEN (v0.c2) AND (t0.c0)) THEN ((v0.c1) NOT BETWEEN (t0.c0) AND (v0.c2)) ELSE ((v0.c1)AND(v0.c2)) END WHERE (((((CAST(t0.c0 AS REAL)) BETWEEN (0.11666911451655493) AND ((t0.c0 IN (v0.c1))))) ISNULL)) GROUP BY t0.c0, v0.c1, v0.c0, v0.c2;
SELECT t0.c0, v0.c1, v0.c0, v0.c2 FROM t0 FULL OUTER JOIN v0 ON CASE (((t0.c0)) NOT BETWEEN ((v0.c1)) AND ((v0.c2)))  WHEN t0.c0 COLLATE RTRIM THEN v0.c2 COLLATE RTRIM WHEN ((((v0.c2)AND(v0.c1)))OR(v0.c0)) THEN ((v0.c0)/(NULL)) WHEN ((v0.c2) BETWEEN (v0.c2) AND (t0.c0)) THEN ((v0.c1) NOT BETWEEN (t0.c0) AND (v0.c2)) ELSE ((v0.c1)AND(v0.c2)) END GROUP BY t0.c0, v0.c1, v0.c0, v0.c2;
SELECT v0.c1, v0.c2, v0.c0 FROM t0, v0 GROUP BY v0.c1, v0.c2, v0.c0;
SELECT ALL v0.c1, v0.c2, v0.c0 FROM t0, v0 GROUP BY v0.c1, v0.c2, v0.c0 HAVING MAX((SUM(COUNT(COUNT(v0.c2))) IN ())) UNION ALL SELECT v0.c1, v0.c2, v0.c0 FROM t0, v0 GROUP BY v0.c1, v0.c2, v0.c0 HAVING (NOT (MAX((SUM(COUNT(COUNT(v0.c2))) IN ())))) UNION ALL SELECT ALL v0.c1, v0.c2, v0.c0 FROM t0, v0 GROUP BY v0.c1, v0.c2, v0.c0 HAVING ((MAX((SUM(COUNT(COUNT(v0.c2))) IN ()))) ISNULL);
SELECT v0.c1, v0.c2, v0.c0 FROM t0, v0 GROUP BY v0.c1, v0.c2, v0.c0;
SELECT ALL v0.c1, v0.c2, v0.c0 FROM t0, v0 GROUP BY v0.c1, v0.c2, v0.c0 HAVING MAX((SUM(COUNT(COUNT(v0.c2))) IN ())) UNION ALL SELECT v0.c1, v0.c2, v0.c0 FROM t0, v0 GROUP BY v0.c1, v0.c2, v0.c0 HAVING (NOT (MAX((SUM(COUNT(COUNT(v0.c2))) IN ())))) UNION ALL SELECT ALL v0.c1, v0.c2, v0.c0 FROM t0, v0 GROUP BY v0.c1, v0.c2, v0.c0 HAVING ((MAX((SUM(COUNT(COUNT(v0.c2))) IN ()))) ISNULL);
SELECT v0.c1, v0.c2, v0.c0 FROM t0, v0 GROUP BY v0.c1, v0.c2, v0.c0;
SELECT MAX((+ (((v0.c0)%(v0.c2))))) FROM t0, rt0, v0;
SELECT * FROM rt0 NATURAL JOIN v0;
SELECT ALL * FROM rt0 NATURAL JOIN v0 WHERE ((((((((((rt0.c1 IN (NULL)))OR(((rt0.c6) NOT BETWEEN (rt0.c0) AND (rt0.c4)))))OR(v0.c1 COLLATE RTRIM)))AND(x'3c57')))AND(((((v0.c0)AND(rt0.c3)))OR(rt0.c3))))) UNION ALL SELECT ALL * FROM rt0 NATURAL JOIN v0 WHERE ((NOT ((((((((((rt0.c1 IN (NULL)))OR(((rt0.c6) NOT BETWEEN (rt0.c0) AND (rt0.c4)))))OR(v0.c1 COLLATE RTRIM)))AND(x'3c57')))AND(((((v0.c0)AND(rt0.c3)))OR(rt0.c3))))))) UNION ALL SELECT ALL * FROM rt0 NATURAL JOIN v0 WHERE ((((((((((((rt0.c1 IN (NULL)))OR(((rt0.c6) NOT BETWEEN (rt0.c0) AND (rt0.c4)))))OR(v0.c1 COLLATE RTRIM)))AND(x'3c57')))AND(((((v0.c0)AND(rt0.c3)))OR(rt0.c3))))) ISNULL));
SELECT * FROM rt0 NATURAL JOIN v0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((((rt0.c5)<<(rt0.c5))) IS FALSE)) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((((rt0.c5)<<(rt0.c5))) IS FALSE)))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((((rt0.c5)<<(rt0.c5))) IS FALSE)) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c1, rt0.c6, rt0.c4, rt0.c2, rt0.c0, t0.c0, rt0.c3, rt0.c5 FROM t0 NATURAL JOIN rt0 GROUP BY rt0.c1, rt0.c6, rt0.c4, rt0.c2, rt0.c0, t0.c0, rt0.c3, rt0.c5;
SELECT ALL rt0.c1, rt0.c6, rt0.c4, rt0.c2, rt0.c0, t0.c0, rt0.c3, rt0.c5 FROM t0 NATURAL JOIN rt0 WHERE (((((rt0.c2)<(rt0.c0))) NOT BETWEEN (((((((((rt0.c4)OR('-121474719')))AND(rt0.c4)))AND(rt0.c4)))AND(rt0.c3))) AND (((x'') IS TRUE)))) GROUP BY rt0.c1, rt0.c6, rt0.c4, rt0.c2, rt0.c0, t0.c0, rt0.c3, rt0.c5 UNION SELECT ALL rt0.c1, rt0.c6, rt0.c4, rt0.c2, rt0.c0, t0.c0, rt0.c3, rt0.c5 FROM t0 NATURAL JOIN rt0 WHERE ((NOT (((((rt0.c2)<(rt0.c0))) NOT BETWEEN (((((((((rt0.c4)OR('-121474719')))AND(rt0.c4)))AND(rt0.c4)))AND(rt0.c3))) AND (((x'') IS TRUE)))))) GROUP BY rt0.c1, rt0.c6, rt0.c4, rt0.c2, rt0.c0, t0.c0, rt0.c3, rt0.c5 UNION SELECT rt0.c1, rt0.c6, rt0.c4, rt0.c2, rt0.c0, t0.c0, rt0.c3, rt0.c5 FROM t0 NATURAL JOIN rt0 WHERE (((((((rt0.c2)<(rt0.c0))) NOT BETWEEN (((((((((rt0.c4)OR('-121474719')))AND(rt0.c4)))AND(rt0.c4)))AND(rt0.c3))) AND (((x'') IS TRUE)))) ISNULL)) GROUP BY rt0.c1, rt0.c6, rt0.c4, rt0.c2, rt0.c0, t0.c0, rt0.c3, rt0.c5;
SELECT rt0.c1, rt0.c6, rt0.c4, rt0.c2, rt0.c0, t0.c0, rt0.c3, rt0.c5 FROM t0 NATURAL JOIN rt0 GROUP BY rt0.c1, rt0.c6, rt0.c4, rt0.c2, rt0.c0, t0.c0, rt0.c3, rt0.c5;
SELECT rt0.c5, rt0.c2, rt0.c3, rt0.c4, rt0.c1, rt0.c0, rt0.c6, t0.c0 FROM rt0 FULL OUTER JOIN t0 ON (~ ('')) GROUP BY rt0.c5, rt0.c2, rt0.c3, rt0.c4, rt0.c1, rt0.c0, rt0.c6, t0.c0;
SELECT ALL rt0.c5, rt0.c2, rt0.c3, rt0.c4, rt0.c1, rt0.c0, rt0.c6, t0.c0 FROM rt0 FULL OUTER JOIN t0 ON (~ ('')) GROUP BY rt0.c5, rt0.c2, rt0.c3, rt0.c4, rt0.c1, rt0.c0, rt0.c6, t0.c0 HAVING MAX((NOT (t0.c0))) UNION ALL SELECT rt0.c5, rt0.c2, rt0.c3, rt0.c4, rt0.c1, rt0.c0, rt0.c6, t0.c0 FROM rt0 FULL OUTER JOIN t0 ON (~ ('')) GROUP BY rt0.c5, rt0.c2, rt0.c3, rt0.c4, rt0.c1, rt0.c0, rt0.c6, t0.c0 HAVING (NOT (MAX((NOT (t0.c0))))) UNION ALL SELECT ALL rt0.c5, rt0.c2, rt0.c3, rt0.c4, rt0.c1, rt0.c0, rt0.c6, t0.c0 FROM rt0 FULL OUTER JOIN t0 ON (~ ('')) GROUP BY rt0.c5, rt0.c2, rt0.c3, rt0.c4, rt0.c1, rt0.c0, rt0.c6, t0.c0 HAVING ((MAX((NOT (t0.c0)))) ISNULL);
SELECT rt0.c5, rt0.c2, rt0.c3, rt0.c4, rt0.c1, rt0.c0, rt0.c6, t0.c0 FROM rt0 FULL OUTER JOIN t0 ON (~ ('')) GROUP BY rt0.c5, rt0.c2, rt0.c3, rt0.c4, rt0.c1, rt0.c0, rt0.c6, t0.c0;
SELECT ALL rt0.c5, rt0.c2, rt0.c3, rt0.c4, rt0.c1, rt0.c0, rt0.c6, t0.c0 FROM rt0 FULL OUTER JOIN t0 ON (~ ('')) GROUP BY rt0.c5, rt0.c2, rt0.c3, rt0.c4, rt0.c1, rt0.c0, rt0.c6, t0.c0 HAVING MAX((NOT (t0.c0))) UNION ALL SELECT rt0.c5, rt0.c2, rt0.c3, rt0.c4, rt0.c1, rt0.c0, rt0.c6, t0.c0 FROM rt0 FULL OUTER JOIN t0 ON (~ ('')) GROUP BY rt0.c5, rt0.c2, rt0.c3, rt0.c4, rt0.c1, rt0.c0, rt0.c6, t0.c0 HAVING (NOT (MAX((NOT (t0.c0))))) UNION ALL SELECT ALL rt0.c5, rt0.c2, rt0.c3, rt0.c4, rt0.c1, rt0.c0, rt0.c6, t0.c0 FROM rt0 FULL OUTER JOIN t0 ON (~ ('')) GROUP BY rt0.c5, rt0.c2, rt0.c3, rt0.c4, rt0.c1, rt0.c0, rt0.c6, t0.c0 HAVING ((MAX((NOT (t0.c0)))) ISNULL);
SELECT rt0.c5, rt0.c2, rt0.c3, rt0.c4, rt0.c1, rt0.c0, rt0.c6, t0.c0 FROM rt0 FULL OUTER JOIN t0 ON (~ ('')) GROUP BY rt0.c5, rt0.c2, rt0.c3, rt0.c4, rt0.c1, rt0.c0, rt0.c6, t0.c0;
SELECT ALL * FROM t0, rt0, v0;
SELECT ALL * FROM t0, rt0 NOT INDEXED, v0 WHERE (((((v0.c0)IS(rt0.c3))) NOTNULL)) UNION ALL SELECT ALL * FROM t0, rt0, v0 WHERE ((NOT (((((v0.c0)IS(rt0.c3))) NOTNULL)))) UNION ALL SELECT * FROM t0, rt0, v0 WHERE (((((((v0.c0)IS(rt0.c3))) NOTNULL)) ISNULL));
SELECT ALL * FROM t0, rt0, v0;
SELECT DISTINCT v0.c2, v0.c0, v0.c1 FROM v0;
SELECT DISTINCT v0.c2, v0.c0, v0.c1 FROM v0 WHERE (((((((v0.c2)AND(v0.c2)))OR(v0.c1)))/((NOT (v0.c1))))) UNION SELECT DISTINCT v0.c2, v0.c0, v0.c1 FROM v0 WHERE ((NOT (((((((v0.c2)AND(v0.c2)))OR(v0.c1)))/((NOT (v0.c1))))))) UNION SELECT DISTINCT v0.c2, v0.c0, v0.c1 FROM v0 WHERE (((((((((v0.c2)AND(v0.c2)))OR(v0.c1)))/((NOT (v0.c1))))) ISNULL));
SELECT DISTINCT v0.c2, v0.c0, v0.c1 FROM v0;
SELECT rt0.c1, rt0.c0, rt0.c4, rt0.c6, rt0.c3, rt0.c2, t0.c0 FROM rt0, t0 GROUP BY rt0.c1, rt0.c0, rt0.c4, rt0.c6, rt0.c3, rt0.c2, t0.c0;
SELECT rt0.c1, rt0.c0, rt0.c4, rt0.c6, rt0.c3, rt0.c2, t0.c0 FROM rt0, t0 WHERE ((((LIKELY(rt0.c1), ((rt0.c2)/(rt0.c2)), 0.17664275033780286))>=((((rt0.c4)>>(rt0.c2)), NULL, rt0.c4)))) GROUP BY rt0.c1, rt0.c0, rt0.c4, rt0.c6, rt0.c3, rt0.c2, t0.c0 UNION SELECT ALL rt0.c1, rt0.c0, rt0.c4, rt0.c6, rt0.c3, rt0.c2, t0.c0 FROM rt0, t0 WHERE ((NOT ((((LIKELY(rt0.c1), ((rt0.c2)/(rt0.c2)), 0.17664275033780286))>=((((rt0.c4)>>(rt0.c2)), NULL, rt0.c4)))))) GROUP BY rt0.c1, rt0.c0, rt0.c4, rt0.c6, rt0.c3, rt0.c2, t0.c0 UNION SELECT rt0.c1, rt0.c0, rt0.c4, rt0.c6, rt0.c3, rt0.c2, t0.c0 FROM rt0, t0 WHERE ((((((LIKELY(rt0.c1), ((rt0.c2)/(rt0.c2)), 0.17664275033780286))>=((((rt0.c4)>>(rt0.c2)), NULL, rt0.c4)))) ISNULL)) GROUP BY rt0.c1, rt0.c0, rt0.c4, rt0.c6, rt0.c3, rt0.c2, t0.c0;
SELECT rt0.c1, rt0.c0, rt0.c4, rt0.c6, rt0.c3, rt0.c2, t0.c0 FROM rt0, t0 GROUP BY rt0.c1, rt0.c0, rt0.c4, rt0.c6, rt0.c3, rt0.c2, t0.c0;
