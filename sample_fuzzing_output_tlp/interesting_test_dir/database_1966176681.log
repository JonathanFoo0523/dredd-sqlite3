-- Time: 2024/06/10 05:28:54
-- Database: database81
-- Database version: 3.40.0
-- seed value: 1966176681
PRAGMA cache_size = 50000; -- 0ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA case_sensitive_like=ON; -- 0ms;
PRAGMA encoding = 'UTF-16le'; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts4(c0 UNINDEXED, c1 UNINDEXED, c2 UNINDEXED); -- 0ms;
INSERT OR IGNORE INTO vt0(c2, c1) VALUES ('', '2072511759'); -- 0ms;
UPDATE OR IGNORE vt0 SET (c0)=(''); -- 0ms;
UPDATE OR ROLLBACK vt0 SET c0=0.9619296446268749 WHERE TRIM(UNICODE(vt0.c1), vt0.c0); -- 11ms;
INSERT OR IGNORE INTO vt0(c2) VALUES ('8rN~챲DWԏ^'); -- 13ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR IGNORE vt0 SET (c2)=('423873650'); -- 12ms;
UPDATE OR IGNORE vt0 SET (c1, c0)=('', x''); -- 11ms;
CREATE VIRTUAL TABLE rt0 USING rtree(c0, c1, c2); -- 0ms;
UPDATE OR IGNORE rt0 SET (c2)=(NULL); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 4); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '47742'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
UPDATE rt0 SET c1=2.072511759E9, c2=0.9041904663458131 WHERE ((((rt0.c0)IS(rt0.c1)))||((((((((('423873650')AND(rt0.c1)))AND(NULL)))AND(rt0.c2)))AND(rt0.c2)))); -- 0ms;
UPDATE OR IGNORE rt0 SET c0='' WHERE CAST(((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0)) AS TEXT); -- 0ms;
UPDATE OR IGNORE vt0 SET c1=NULL; -- 1ms;
ROLLBACK TRANSACTION; -- 1ms;
UPDATE OR IGNORE vt0 SET c0='423873650', c0=''; -- 14ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', '423873650 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=423873650'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((- ('R3q{8')))>=((('Udt}')<=(x'4c73b02b')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((TRIM('Vk')) ISNULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' sz=-1113536350 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL, x'c0d2640d', 0.4315101288699962, '-2067415986', 0.6239452730579015)) BETWEEN ((2072511759 COLLATE BINARY, ((0.3588458643805814) BETWEEN (0.3588458643805814) AND ('')), (('-1657853768')-(NULL)), CAST(-1.11353635E9 AS INTEGER), 0Xb5d4cfd)) AND (('2072511759', ((((NULL)OR(946169554)))OR(-1116400239)), (NULL IN ()), (NULL IN ()), ((0.9267029425612332) NOTNULL)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-1184928901 sz=-1815077186 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((NULL)AND('-259068142')))OR(NULL)) IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('') BETWEEN ('946169554') AND ('946169554'))) NOT BETWEEN (CAST(NULL AS INTEGER)) AND ((('')||(0.6239452730579015)))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' sz=-301122259'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-858899534'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', '0 1648583541'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1458587158'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' sz=274564658 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('190663933') IS FALSE))>>((('-1657853768') ISNULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', '-1058233873 2'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1815077186 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE -533091991; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1888253100 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', '-112228539 sz=-858899534 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE UPPER(DISTINCT ((0.9488105681134474) ISNULL)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('K&')) BETWEEN ((CAST(0.8154381690151004 AS TEXT))) AND ((CASE NULL  WHEN '-343480228' THEN 0.8326969991463146 WHEN x'' THEN 0.2826439426259537 WHEN x'' THEN '-1458587158' END))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-1097482965 946169554 sz=-2067415986 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' sz=274564658 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1113536350'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2 991804334 sz=1648583541 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('g#]K4')IS('423873650')) COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE 0.7624721150062975  WHEN ('sbPv!S' IN ()) THEN CASE '0.9488105681134474'  WHEN x'' THEN x'' WHEN 0.18724192509898896 THEN '2006007904' WHEN 190663933 THEN '' END END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.40361109509800386 IN ())) NOT BETWEEN (0xffffffffb0f32fc8 COLLATE BINARY) AND (x'' COLLATE NOCASE)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', '991804334 2 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('쥘%I')+(NULL)))AND(CASE x''  WHEN NULL THEN '' END)))OR(CASE WHEN x'' THEN 'Ic' WHEN NULL THEN 0.7482888155492131 WHEN '781552751' THEN 0.6301040932285634 END)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((747127377) IS FALSE) AS REAL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=58350612'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', '2'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((- (0.2826439426259537)) AS TEXT); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', '2 0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', '0 101311347 sz=-1356834812 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN 0.615133172381499 THEN x'' END COLLATE NOCASE; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '17255840 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '6 sz=-1236674984 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' sz=1930357347 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0X1d25e2a6, x'4330', 0.6634334915960787)) BETWEEN ((TRIM(-879627654), ((NULL)AND('-301122259')), ((((((((NULL)OR(x'')))OR(0.9075562474413608)))OR(0X72402fe3)))AND(2.072511759E9)))) AND ((((('&o')) BETWEEN ((x'309f')) AND (('190663933'))), (NULL IN ()), (('-1122378268')<=(x'91cc1bd9'))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE HEX(DISTINCT ((x'')IS NOT(NULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-608240632 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (5.8350612E7 COLLATE RTRIM IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=881896065'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', '0 sz=-1356834812 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1458587158'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '1001356305 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-521286294 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' sz=1130084262 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '747127377 -615087271 sz=274564658 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 -1009404019 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NOT (0.059022599426466704))) IS TRUE); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE LIKELY(((x'') IS TRUE)); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1236674984 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-725753462 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 sz=-858899534 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CAST(NULL AS TEXT) AS BLOB); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE COALESCE(DISTINCT (+ (x'')), x'6d5d', ((NULL)%(-1.236674984E9)), CASE WHEN x'' THEN 0.19380897319294277 END, (('')LIKE(x'')), ((849052457) BETWEEN (x'') AND (17255840))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-521286294 -200990121 sz=-2046786720 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1360887024'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((CASE 0.3022743659137913  WHEN 'U\' THEN 'TRUE' END)OR(LTRIM(x'', NULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-1418332938 -1203875433 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('0.6634334915960787')OR(''))) IS TRUE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-452878773'); -- 2ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' sz=423873650'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(4.89022118E8 AS REAL) COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.7624721150062975, NULL, '뱎')) NOT BETWEEN (((NULL IN (0.5620432208249307, NULL)), (((('')OR(0.7624721150062975)))AND(1.01311347E8)), ('1091392105' IN ()))) AND ((CAST('-2046786720' AS NUMERIC), ((0.6715808466410779) BETWEEN ('t') AND ('-879627654')), (NULL IN ())))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NOT (''))) BETWEEN (x'') AND (0.4817494399398665)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=239627849 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', '0 sz=817733574'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', '0 sz=-1225167659 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((IFNULL(DISTINCT NULL, NULL)))>((x'' COLLATE RTRIM))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', '-1116562900 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=958960584 noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1584451039 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (NULL)); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', '-842538507 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', '617284317 sz=194014170 unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' sz=1584451039 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'') BETWEEN (0.4224050299410863) AND (x'2704'))) BETWEEN (((x'')GLOB('%0LO7T\rd'))) AND (((('{', ')xᘯf', x'4151'))==((NULL, 0.18522787631111937, ''))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' sz=1898726692 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', '0 sz=-1149801715'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1068599991 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0X511d7cf0) BETWEEN (NULL) AND ('-1283855293'))) ISNULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '2 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 'L.>뭑m'; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', '0 0'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=489022118 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1903194210 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((1648583541, x'', '-1031116999')) NOT BETWEEN ((('' IN (1.360887024E9)), CASE WHEN NULL THEN '-1184928901' END, CAST('0.40361109509800386' AS TEXT))) AND ((((NULL) IS TRUE), NULL COLLATE RTRIM, ((NULL) NOT BETWEEN ('0.18522787631111937') AND (x''))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL IN (-1))) NOT BETWEEN ((((x'3a6b', x'', -1.815077186E9, x'', '1916809187')) NOT BETWEEN (('', 0.5783296388942114, '', NULL, x'')) AND ((0.6715808466410779, NULL, 0Xffffffffe6048a42, NULL, 8.81896065E8)))) AND (CAST(NULL AS INTEGER))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.135887853274132; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' sz=1479848100 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((+ (0.1107167170038077)))+(CASE WHEN NULL THEN '-2094688989' ELSE NULL END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' sz=991804334 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '0.5620432208249307'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (-533091991 IN (CASE 0.5663980881489945  WHEN x'' THEN x'' ELSE NULL END, DATETIME(-1.356834812E9, 0.36349323057051963, x''))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' sz=1527070258 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=423873650 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-858899534'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1054251019'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', '2 sz=-724721475 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (((0.3070391662498071)*(x'c835')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=946169554 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-435910078 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-1623130825 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1064136564 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', '-855024044 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', '0 sz=-615087271 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((x'')AND(0x703a0eb6)))OR(NULL)))OR('')))AND('')) COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CHAR('-842538507')) IS FALSE); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', '752637282 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', '0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-763481857 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('-1726930595', '', 'LiNSgsM')) BETWEEN ((0.18398217385727278, NULL, 0xb0386b0)) AND (('⤲퉀', 0.5663980881489945, x''))))>(((((((((NULL)AND(NULL)))OR('')))AND(NULL)))AND(NULL)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE HEX(((x'')GLOB('423873650'))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL)>>(NULL)) COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.474521125543072; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((0.9861656858815454) IS FALSE))OR((~ ('-1097482965')))))AND(((x'')LIKE('-1436654980')))))AND((((((((('-1113536350')AND(NULL)))OR(0.3134892394386851)))OR(0.14311372404139255)))AND(NULL)))))OR((('Dr≗⿈0뜑ね死') ISNULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1898726692 noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((x''))>((((NULL) BETWEEN (NULL) AND (0.4121779148702015))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE json_insert(((0xffffffffd9bf8da5) IS FALSE), ((('-1956607937')) BETWEEN ((1.9401417E8)) AND ((x''))), ('2119482975' IN (8.8527424E7, x'2039'))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', '0 sz=377947882 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1360993027 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1356834812'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN NULL THEN 0.776402603957473 ELSE -1260612678 END) IS FALSE); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'') NOT BETWEEN ('-615087271') AND (''))) IS TRUE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('') NOTNULL)) IS FALSE); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((-1.43665498E9)) NOT BETWEEN ((CASE 0.2826439426259537  WHEN NULL THEN '0.8326969991463146' END)) AND ((('' IN (0xffffffffd6540d49, 843340861))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1054251019'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 3ms;
DELETE FROM sqlite_stat1 WHERE CAST(CAST(NULL AS INTEGER) AS TEXT); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-763481857 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL) BETWEEN (NULL) AND (0.8358199713592708)) COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '175264966 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '&u'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', '-899012302 sz=1130084262'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('-1009404019' COLLATE NOCASE)OR(CAST(0xffffffffb44745c8 AS INTEGER))))OR(CAST(x'c167' AS TEXT))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '17255840 0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('\nf<?gẾ+x')) NOT BETWEEN ((0.34289594159375225 COLLATE BINARY)) AND ((x''))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', '-145951241 sz=-641757787 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1623544701 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-367505789'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('z?K') IS TRUE)) BETWEEN (CAST(0.706827790845221 AS REAL)) AND ((0X4cf35f0b IN ()))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(0.3848565475824679 AS REAL) COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', '-1920973593 sz=-1332854115 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', '1983573299 sz=-452878773 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((- (NULL)))LIKE(((NULL)-('-435910078')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 sz=189090536'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', '-381178268 -1700453941'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=617284317 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE NULL  WHEN x'' THEN 0.44804459519699824 END) BETWEEN ((x'' IN ())) AND (((0.4495485218195323)&(0.5581509774483299)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1905452284 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'90e8')||('')))LIKE(CAST('R3Q{8' AS BLOB))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 sz=781552751 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' sz=-291415598 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '2 0'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1494261575 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((1130084262) BETWEEN (x'') AND (0.9075562474413608)))<((('L.>뭑m') BETWEEN (NULL) AND (NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-514368231 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', '0 sz=-1888253100'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)%('.}V')))*(NULL COLLATE NOCASE)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CASE WHEN x'2b0f' THEN 0.8941839594413248 WHEN NULL THEN 0Xffffffffafb16c47 WHEN x'b3b6' THEN NULL WHEN NULL THEN 'NP!ud\r?J_' WHEN '1930357347' THEN x'' ELSE 'a' END AS NUMERIC); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN NULL THEN NULL ELSE '-1316339006' END) NOT BETWEEN (0Xfffffffffadd8b4a COLLATE NOCASE) AND (((13946844) NOT BETWEEN (0x7364f10c) AND (0.8941839594413248)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' sz=763027715 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', '0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-200990121 62901144 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE -1623130825; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1623130825 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ ((+ (0x7add041a)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', '135685041 -1168642529 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=924131353 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((NULL IN ()) AS NUMERIC); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', '2 0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE LOWER(((NULL)LIKE(x''))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-76684723 184780464 sz=1722479218 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT ((~ ('489022118')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '1527070258 0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1182999241 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-724721475 1578677251 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', '1261304237 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' sz=-1705001451 unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1134291661 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', '0 sz=402725130 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1479666129 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', '-1101388660 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE UNLIKELY(((0Xffffffff8b60883f) NOT BETWEEN (x'f0d2') AND (0.07531915092199126))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1125874367 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' sz=1796209121 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', '58350612 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '1916809187 226104541'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-152279921 0 0 sz=274564658 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-996737728'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1577766772'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '1967045512 sz=1846575693 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((CAST('-757804216' AS BLOB))OR((((('&3KO#')AND('0.8358199713592708')))OR(x'')))))OR(CAST('190663933' AS BLOB))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', '192866093 -1011254432 sz=1360993027 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', '0 -842538507 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '4 2 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL IN (NULL))))<=((((((x'')OR(NULL)))OR(-1657853768))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('')>(CAST('' AS TEXT))); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', '4 sz=-899012302 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT ((- (x'')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('1044108342')+(CASE NULL  WHEN -1.149801715E9 THEN '1091392105' END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '1360993027 0 sz=-581003806 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0xffffffffa90fb9ea)GLOB('DotT')))LIKE((((NULL, NULL, 't', 0.7583382967287303, 0Xffffffffb649d658))<>((-5.33091991E8, -757050818, x'', NULL, '-2067415986'))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '2 2 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '-1377089918'; -- 0ms;
DELETE FROM sqlite_stat1 WHERE json_quote((('-800936624') IS TRUE)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '4 0 sz=-377998310 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' sz=-50060755 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1913783857 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('-1418332938')=(NULL)) COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', '-1116562900 0 sz=-2059085805 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1267811386 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1527070258 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-1941727782 sz=1120732802 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((0X6c6f7a8)AND(')XᘯF')))OR('0.9619296446268749')))AND(NULL)))AND('-899012302'))) BETWEEN (((x'')<=(x'c8f386b5'))) AND ((~ (1218253683)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' sz=-1071399709 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN NULL THEN NULL END) BETWEEN ((~ (NULL))) AND ('N')); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', '843340861 sz=-1270397496 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=88527424'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' sz=1479848100'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=763779075 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' sz=-842250262 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((x'') NOT NULL))AND(((0.6159754850700937) NOTNULL))))AND(((8.8527424E7) IS FALSE))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' sz=-679791300 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((x'') BETWEEN (x'') AND (x'59df')) AS BLOB); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x'1f96'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' sz=-1312651385 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', '0 2 sz=1860166440 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL IN ()))AND('IC')); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1360887024 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', '1907859433 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1527070258 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', '0 sz=-458237032 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((0.20345094750697035)AND(0.7288236540005293)))AND(x'')))<<((((('rqVt+')OR('')))AND(0.622725735776212)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE SUBSTR(((NULL)IS(x'')), ((((((((x'5692')AND(x'')))AND('-1577296514')))OR(NULL)))AND(NULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-608082168'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', '-929424435 2 sz=1286049224'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', '-1326239800'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1936586907 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '4 758758367 sz=239627849 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1203341068'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', '0 sz=-755274748 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', '747127377 sz=637211050 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL) IS FALSE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', '617284317 2094647640 sz=1034985683 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('0.3588458643805814')>=(1269766861)))>>((((('\nF<?GẾ+X')AND(1.360993027E9)))AND(x'd8d0')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=355805232'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((- (0Xfffffffff08eef12)))IS NOT(((-1.1165629E9) IS FALSE))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(x'' AS TEXT)) IS TRUE); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((-1465140967, 0.6828155816105946, 154673850)) BETWEEN (((((0.9041904663458131, x'', x'', NULL, NULL))<((x'e819', 0Xffffffffa2a05e6b, x'968f', '-2069904869', x''))), ((NULL) IS FALSE), (((x'')) BETWEEN ((-1.009404019E9)) AND ((0.16681783840025877))))) AND ((CASE 'b13D<'  WHEN 0.7624721150062975 THEN 2.73166445E8 ELSE NULL END, (-1203875433 IN (x'')), json_valid(NULL)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((0x22e84f1e) NOT NULL)  WHEN ((((-1885173634)AND('0.14311372404139255')))OR('mXH??ṇC_')) THEN (('㻳*C1 3N')IS NOT(0.578230854617583)) ELSE NULL END; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', '-5024812 sz=-1666452121 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL IN ())) IS FALSE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' sz=2000359300'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '1091392105 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (((NULL) NOT NULL))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', '162044463 sz=-1389776833 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('-242917340') NOT NULL) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2 2 sz=-2067415986 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE x''  WHEN x'' THEN x'' ELSE x'4cb4' END)||('747127377' COLLATE BINARY)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-1815077186 sz=-348180867 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1360993027 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', '630590528 sz=-1116400239'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0xffffffffb4869372; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1676973722 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ('-951741945' COLLATE RTRIM IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', '-729927185 0 sz=-1924904337'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-763481857'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (0.8470891522961825 COLLATE BINARY)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((x'')AND(-1.122378268E9)))AND(NULL))) IS TRUE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1840466839 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('-595918116' COLLATE BINARY)AND((('') NOT BETWEEN (NULL) AND ('')))))OR(((0.47683781766012656) IS FALSE))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1657114503 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (CASE ''  WHEN NULL THEN '' ELSE x'30c0' END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('u\') NOT BETWEEN (NULL) AND ('Xz>')))-((('2!0c')=('946169554')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '1011534072 -1184928901'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '1241149098 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((2.006007904E9) NOT NULL))<<((2094647640 IN ()))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((LOWER(x''), x'', ((-1047347555)=(x''))))<=((((0xffffffff867d9a8f) NOT BETWEEN ('BPDPj') AND ('-1822960471')), (((x'030dcbc52212', x'', 0.42223137790519083))<=(('1130084262', NULL, 0.8761692510665063))), ((0xffffffffb7a49568)<(x''))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1260612678 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' sz=1922069263 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', '-1447234142 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '1839879489 -2067415986 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-1657853768 sz=365777309 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1693696247 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((+ (x'7dd2')))AND((NULL IN ('')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '2 sz=-860217337 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' sz=-813122313'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', '0 2 sz=2057666358 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' sz=-1512578281 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('' IN ()))&((~ (0xfffffffff08eef12)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', '0 -982316085 sz=-200990121'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '1707934986 sz=-1283855293 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=849052457 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('-1623130825') NOTNULL)))>(((((NULL))!=((0.20797143463234102)))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE -1.236674984E9; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1043497545'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'2678')) BETWEEN ((('' IN ()))) AND ((((0X1f5e1e42) BETWEEN (x'') AND (x'3d90'))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', '2 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-744176707'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-1 sz=-1310819902 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((((((0.35804552584221294)OR(NULL)))AND(''))))<>(((NULL IN ())))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' sz=-28047444 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1496021563'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE HEX('2094647640'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-60375217 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' sz=9162965 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '1941317701 0'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((0x79010bda, x'055a', '1882853046')) BETWEEN ((0.7669167509393615, 0.776402603957473, 0.9742492084723327)) AND ((0X7f56f254, x'', NULL))))IS((((x'7385'))==((NULL))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((+ (NULL)) IN (LOWER('412676785'))); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((0.8036366767339403, 0.0473682985852486, NULL)) NOT BETWEEN ((((NULL)>('法뤔')), NULLIF(0.5875402896699881, 0.08747507231080087), (+ (0.8607694676199992)))) AND (((- ('-1809294733')), (((((((('Ếg)c')OR(NULL)))AND(-1225167659)))AND('')))AND(x'67d1')), (0.596533825149851 IN ())))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('')OR('qN')))OR(NULL)))<((('-1928412754') BETWEEN (NULL) AND (219811181)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' sz=-1104907946 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-879627654 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((x'') NOTNULL) THEN ((((((((-5.33091991E8)OR('')))OR(NULL)))AND(x'')))AND(NULL)) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((821774205) NOT BETWEEN (NULL) AND (('QN' IN (0.7710094660114353, x'2e58')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '2006007904 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', '686669691 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' sz=-570238862 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 0 -291442496 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' sz=-471156895 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', '-1009404019 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((+ (''))) NOT NULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE highlight(0xffffffffa7ce162f COLLATE BINARY, ((((((((((((x'd7f2')OR('377947882')))AND('525718830')))OR(NULL)))AND(x'')))OR(NULL)))AND('')), CAST(-1.90319421E9 AS NUMERIC), (((('1584451039')OR(0.3633380075674173)))AND(x'f626'))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('-971986595')GLOB('-533091991')) COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(HEX(DISTINCT 0xfffffffffa606ef3) AS BLOB); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (CASE WHEN '\r|\7z>K0x' THEN 0.8619319598993592 END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' sz=1054251019 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1113536350 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.776402603957473)) BETWEEN ((((((((((((((x'')OR(x'9272')))AND('')))OR(x'')))OR('no1e500000w')))OR(x'3b1a')))AND(x'de37771d')))) AND (((x'' IN ())))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 -222560059 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN '-427410024' THEN 0.9899252463667491 ELSE 0.20345094750697035 END)GLOB('946169554')); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((~ ('-1058233873'))) BETWEEN (((0xffffffffffffffff)GLOB(''))) AND (((NULL) IS TRUE))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1460711023 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL)) NOT BETWEEN ((CAST(x'4b33' AS TEXT))) AND ((UPPER(DISTINCT '0.18398217385727278')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-533091991 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1871847800 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((SQLITE_VERSION())+(((0.7098120860771138)>=('0.596533825149851')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'')) BETWEEN (('-615087271')) AND ((0.49728146991368205))) COLLATE BINARY COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '1771263217 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-1211058415 sz=453269311'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' sz=-1226674732 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1896955610 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((NULL)AND('843340861')))OR(NULL)))|(((((0.8761692510665063)AND('Fj')))AND(NULL)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE ''  WHEN '' THEN 0x64ea2abd WHEN 'idᾩ\r۪4-R.' THEN -6.15087271E8 WHEN 'M3' THEN '' WHEN '-725753462' THEN 0xffffffffaf205804 WHEN x'ad45' THEN '{>i7' ELSE 't+z~	' END)&(2028944159 COLLATE RTRIM)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=489022118 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '2 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' sz=-2046786720 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.0027540767101982278)) NOT BETWEEN ((((NULL)<<(NULL)))) AND ((CASE 0.16602855014455242  WHEN x'' THEN NULL WHEN 1.84780464E8 THEN x'' WHEN 0.7227040872282399 THEN NULL ELSE 0.37829098189749055 END))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1031116999 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (CAST(0.5425922006727995 AS REAL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', '0 -1509485155'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.7710094660114353)>>(NULL)))LIKE((- ('0.9075562474413608')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-235210431 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((((('뱎')OR('937038218')))AND('t')))AND('603189008')))AND(NULL)))OR(NULL)))OR(('-1317567748' IN (0.80398974438639)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2 sz=843340861 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (((x'7af3') IS TRUE))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', '2'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'5b7d66ae' IN ())) BETWEEN ((~ (0Xffffffffe5bc777b))) AND (CASE 0.3848565475824679  WHEN 0.1647980035926343 THEN 0xffffffffbbff35de WHEN NULL THEN x'' WHEN -5.33091991E8 THEN 0.4404313997495709 WHEN x'ded6' THEN NULL WHEN x'efdc' THEN NULL END)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-370836136 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (CAST(x'' AS INTEGER))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 sz=1747365406 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN CAST('-475272914' AS NUMERIC) THEN ((NULL) NOT NULL) WHEN (((((((('-989261444')OR(NULL)))OR('2119482975')))AND(0.657121145774054)))AND(x'')) THEN ((NULL)-('1850695643')) WHEN (('')LIKE('-1036563707')) THEN ((x'') IS FALSE) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-827251247 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', '0 31425533 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 sz=1804268347 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0X3fb18ab7, NULL, NULL)) BETWEEN ((0xffffffffd9bf8da5, (+ (x'')), CASE WHEN NULL THEN NULL WHEN x'f8f1' THEN NULL WHEN 0.2440806941023248 THEN 0.9075562474413608 ELSE x'' END)) AND ((NULL, CAST(NULL AS TEXT), (x'' IN ())))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' sz=1882853046 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', '-1479714008'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) NOTNULL)) NOT BETWEEN (((x'') IS FALSE)) AND ((x'' IN ()))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-200990121'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-997236012 sz=1353741711'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=2018495148 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((-2094688989, x'191d', NULL, '%h', '833T-448805070395090078 -190670895415232059 1705 ')) NOT BETWEEN (((('')%(x'3bf8')), (('XH|멼24>8\')AND('1495763255')), (('0.44804459519699824')<<(NULL)), (((-200990121)) NOT BETWEEN ((0.17663581485279323)) AND (('-1356834812'))), '鳉#&q0ຶd')) AND ((0.6190855390167072 COLLATE BINARY, x'c5a0', (((3.77947882E8))>=((NULL))), 0.16926708112423383 COLLATE NOCASE, x''))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'')IS(x'')) IN (((((x'63a8c7e0')AND(x'4d88')))OR(NULL)), ((NULL)<>(x'471a')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL)) BETWEEN ((x'')) AND ((IFNULL('', x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=881896065 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0X45e92c6e) BETWEEN ('-1888253100') AND (NULL)))|(json_type(NULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1722826433'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'fe71a15f')) BETWEEN (('-615087271' COLLATE BINARY)) AND (((('-243745967')IS NOT(x''))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-1524815914 sz=-343480228 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', '1760263109 sz=1679576242 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=704443350 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((json_valid(''))/(((x'')&(x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' sz=-36645695 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' sz=943711457 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1184928901 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0xffffffffbeb0c1b0 IN ())) NOT BETWEEN ((-592562729 IN (0.44804459519699824, NULL))) AND (((0.12205960751027034)*(0x4a0c0ff7)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=101574018'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1277862930 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(ABS(NULL) AS REAL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(0.8579054264531097 COLLATE NOCASE AS BLOB); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((+ ('-615087271')) IN (((-1171301060)&('')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((NULL, x'', 2035724403))<>((NULL, x'', 0.6634334915960787))), ((NULL)+('-1383326503')), (x'fd6e' IN ()), LIKELIHOOD(NULL, 0.15524037088030662), CASE WHEN x'6b92' THEN 'C' ELSE x'c8db' END))>(('-1956607937' COLLATE BINARY, CAST('P#\rj8娫y' AS NUMERIC), (-989556233 IN ()), CASE x''  WHEN 'fgE''s' THEN NULL ELSE NULL END, ((NULL)/(-1.009404019E9))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ ((((''))>=(('NP!u}\r?J_'))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', '0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1850917099 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', '1718629884'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('z''|K\rf')>(0Xffffffffa9c86f56)) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-243745967'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', '0 sz=-2006709890 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(0X7cd9c958 AS REAL) COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', '-103074927 sz=-1270397496 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((x''))>=((2.73166445E8))))-(((((x'')AND(0x4a03bd6f)))OR(NULL)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' sz=2048754174 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-1219586760 sz=-797328921 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=2067318657'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-452878773'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', '2 sz=1916809187 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE json_array_length(((0X5e70cddf)LIKE('Fj')), TYPEOF(DISTINCT NULL)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', '0 1091392105 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'') NOT BETWEEN (NULL) AND ('#~\>剩')))GLOB((x'f1b5' IN ()))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-946093014 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE TIME(((NULL) IS TRUE), CAST('-855024044' AS REAL), ((x'')%(-1305073258))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', '0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (((x'') IS FALSE))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (CAST('998940490' AS NUMERIC))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((ABS(DISTINCT '')))==((((NULL) NOTNULL)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN 0.8664002363609464 THEN CAST(0.40107564600597123 AS INTEGER) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 sz=-1124169841 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (-1903194210 IN ())  WHEN (NOT (0.6952975278938471)) THEN CAST(0.12536561827394332 AS REAL) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((- (NULL)) IN ((((0.9985986995033591, 0.16108128497527774, NULL)) NOT BETWEEN ((NULL, x'', 'a>(EL')) AND (('1183767972', NULL, ''))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE MIN(((('s{g蟆*\rL'))!=(('175264966'))), ((x'') IS FALSE), ((x'')>>('GA')), '1001356305'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1116562900 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', '1012972135 -899012302 sz=-243745967'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1873268108 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1324854839'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('175264966' IN (NULL, NULL))) NOTNULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ ('1295561418' COLLATE RTRIM)); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('')) BETWEEN (((NULL IN (x'22a716e7')))) AND ((-1149801715))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-150572774'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' sz=-49418611 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)) BETWEEN ((-8.55024044E8)) AND ((NULL))) IN ()); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('') ISNULL)) NOT NULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1260612678 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1479848100 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', '2 2 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', '745767980 sz=1799823006 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (NULL COLLATE BINARY)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((- (921613635))) ISNULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((((((((')q4aSd')AND('-435910078')))AND(-676150187)))AND('')))OR('0.5425922006727995')))OR((('194014170') NOTNULL))))AND(CAST('-699134647' AS REAL))))OR((('2094179940') NOTNULL))))AND((((('-1009404019')OR(0X1fd2ff6)))AND('K&')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) NOTNULL)) NOT NULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', '0 0 sz=-2046786720 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((' <|g5?%縜')) BETWEEN ((x'')) AND ((''))) COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0Xffffffffcb91f27a)<=('')) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1790104578 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) IS FALSE))!=(CASE '2094647640'  WHEN x'80176fa4' THEN 0x6cedf354 WHEN 0X280ae1e3 THEN x'' WHEN NULL THEN '' ELSE x'' END)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN 0Xffffffff952ee00a THEN 'DO' ELSE '' END) NOT BETWEEN (CAST(NULL AS BLOB)) AND (CASE WHEN 0.8823215171237919 THEN -1623130825 ELSE 0X168706ea END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 sz=1570290997 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (x'')); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(NULL AS BLOB))IS NOT(0x2e32db1c COLLATE NOCASE)); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', '0'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((0.7639904648683499)AND(((('d>', NULL, '-92398556'))<((NULL, -1.458587158E9, x''))))))OR(0x14e58bd8)))AND((((('Z㬀')OR('')))AND(NULL)))))OR('_c' COLLATE RTRIM)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((x'') NOT BETWEEN ('781552751') AND (' 尽a &Q'))  WHEN ((('-1149801715'))>((NULL))) THEN JULIANDAY(x'', 0.7811350285581397, 'z_') END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)+(0.9531875601823837)))LIKE(((((x'')OR(0.14311372404139255)))AND(0.3384266254685122)))); -- 1ms;
DELETE FROM sqlite_stat1 WHERE CAST((('239249653') BETWEEN (0.08489996873035499) AND ('-1207720677')) AS TEXT); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((0.49728146991368205)%(x'')))AND((('t+z~	') NOT BETWEEN (0.622725735776212) AND (NULL)))))AND((('423873650')*(-1.43665498E9)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', '2 sz=58350612'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
DELETE FROM sqlite_stat1 WHERE rtreenode(NULL, (- (0.013858062544436))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 sz=373634726 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-513420835 sz=-243745967 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE json_quote(NULL) COLLATE BINARY COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' sz=1115360800 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=220269651'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1859567373 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', '2'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', '0 817733574 sz=290107015 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', '1650662097 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', '0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 sz=1023491339 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((-2.59068142E8)OR(((0.30315380756047616) NOT BETWEEN ('') AND (0.9861253685142171)))))OR(((((-452878773)AND(x'')))OR('-1085319085')))))OR((((((((((((('-1184928901')OR(NULL)))OR('UQ')))OR(0.610123404553259)))OR(NULL)))OR(x'a18e')))AND(NULL)))))AND(CAST('HG[' AS BLOB))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-208424640 -1832173917 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE LOWER(DISTINCT NULL) COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((x'')AND('-879627654')))OR(x'd4b2'))) NOT NULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-858899534 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-1479666129 2 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '184780464 sz=-1449071956'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('') NOT BETWEEN (NULL) AND (x''))) NOT BETWEEN (HEX(DISTINCT x'')) AND (x'' COLLATE NOCASE)); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', '1849816825 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', '0 sz=855037575 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE JULIANDAY(0.7236510139035913, NULL, -1.815077186E9) COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', '2 sz=1147487756 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((-94621958)GLOB(x''))) ISNULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (NULL COLLATE RTRIM)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', '-2100153430 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (('881896065')AND(0.7746655616797912)) THEN CAST(x'' AS TEXT) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('-1623130825' COLLATE RTRIM) NOT BETWEEN ((('1899371852') NOT NULL)) AND (((((((((x'')AND('')))AND(0.23697847761789903)))OR(0.07161461338543518)))OR(NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=651505818 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((x'')OR(0X346e9372)))AND(x'')))=(CASE 0xffffffffe039a969  WHEN '843340861' THEN NULL END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1864607031'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((('尔蓟䁠!K,w+G')AND(x'')))OR(0.9672940211345646)))OR(((((NULL)OR(NULL)))OR(NULL)))))AND(((((((((0x40afc6f7)AND(0xffffffffc284e971)))AND(-112228539)))AND(x'')))AND(0.41179003745587717)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=2122197853 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', '-313887186 sz=1038857042 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN 'Q,(pHO' THEN x'' WHEN 0Xffffffffcd095e54 THEN '-1122378268' WHEN NULL THEN -4.52878773E8 WHEN NULL THEN NULL WHEN 0.9215177302336478 THEN 0.5024429651346106 END COLLATE RTRIM COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-200990121 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' sz=-1283855293 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('TPM', x'3ef1', 0.8645832013924439)) NOT BETWEEN ((highlight('\nf<?gế+x', '', 0.2451994888987209, '-382772774'), (((x'3b19', NULL, NULL, x'', 0.8448607102498062, 0.14311372404139255, NULL)) NOT BETWEEN ((NULL, '', NULL, x'', x'', 0x242ce9cd, 0.5085645571382994)) AND ((0X12d3c0a1, 0.07161334039627076, 0.1615693147790409, NULL, 0.012934514713770051, -1.149801715E9, 'nvc*z QB'))), CASE WHEN 0.9057190017541727 THEN '66897166' WHEN NULL THEN x'' WHEN '' THEN x'' ELSE '1799399598' END)) AND (((NOT (NULL)), (((((((('&u')OR(0.3055325459727647)))AND(-1.11353635E9)))AND('oS<')))AND('1988530573')), LIKE(2094647640, 0.2686390790880052)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1218835693 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((x'') NOT BETWEEN (NULL) AND (x'')) AS TEXT); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=617284317 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=16374568'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 1198819590 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (('t+z~~') NOTNULL) THEN (+ ('-2094688989')) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.6882408877057191 IN ())) ISNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', '0 -390818512 sz=1205682493 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=217636567 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((-989654781)GLOB(((x'33f7') NOT BETWEEN (x'49ed') AND (0.5781737153336877)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', '489022118 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', '0 760239028 0 sz=1227574450 noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (('') NOT BETWEEN (2.09464764E9) AND (0.9943526593415948)) COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' sz=593551305'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.17582271254398163) NOT BETWEEN (x'cc2e') AND ('iP)v礇!_j')) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-740008150 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', '763986852 0 sz=-1993640813'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('') NOT BETWEEN (0.40107564600597123) AND ('')))-((('0.7098120860771138')<>(-1999549574)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', '0 0 sz=1508081458 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.05699096619656141)>>('-1418332938')) IN (0.596533825149851 COLLATE NOCASE)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL, 0.5810060189723442, 'sc|')) BETWEEN (((('-1116400239') BETWEEN (-1.726930595E9) AND ('-U')), ((NULL)+(0.9123479671648317)), NULL)) AND ((CASE WHEN 382726316 THEN 0.9488105681134474 WHEN 'ME' THEN '0.0027540767101982278' WHEN x'b73b' THEN NULL ELSE 0xffffffffc28a6739 END, ((x'') NOT BETWEEN (0.09814708681495232) AND ('w(7-Yd')), ((-886805607) BETWEEN (x'7224') AND (0.2647478211829568))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1457418740 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((x'')OR(0.357285793816134)))AND('\S5ԏ爓jYa')))=(CASE ''  WHEN NULL THEN NULL WHEN '-200990121' THEN NULL WHEN x'575d' THEN NULL END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1690499700 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=941544543 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1925175379'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1623524550 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=362824319 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=229865744'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '1909712223 0 sz=-533091991 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ']*'; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((-398352784)>>('Fges%_'))) ISNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' sz=747127377 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)OR(SQLITE_SOURCE_ID())))OR((~ (x'')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((- (x'')))IS NOT(CASE WHEN x'' THEN x'4f82' END)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1941627685 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- ((NULL IN ()))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE UPPER(DISTINCT (('N䧻^s')==(x''))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE 0.30943387063124517; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', '0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1927576235 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', '0'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'' COLLATE RTRIM) BETWEEN (((0.18522787631111937) ISNULL)) AND (NULL COLLATE NOCASE)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' sz=-1827956890 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', ' sz=-725753462 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', '2 1130084262 sz=-169596692 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL IN ())) IS FALSE); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', '0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((- (x''))) BETWEEN (CASE x''  WHEN 0.6715808466410779 THEN x'14cc573d' END) AND ((((x'', NULL, '-1145345707')) NOT BETWEEN (('-1323308586', x'', NULL)) AND ((x'', '', 0.10487745317346409))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('Vr0')OR('1360887024')))OR(x'')) COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', '2 sz=-952699591'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CASE 1916809187  WHEN 0.48907049320271545 THEN '{-鑒I[' END IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST('JnVZQa8' AS REAL)) BETWEEN (((NULL)>('/j'))) AND (0.3633380075674173)); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', '0 220686288 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-725753462 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (('0.4121779148702015')GLOB(0X3ed6980b))  WHEN (((((((('g7')OR(x'3e45')))OR(x'b84b')))OR(NULL)))AND(0.8449575808247853)) THEN ((x'') BETWEEN ('') AND (0.8543059646093182)) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((('1996668110', '', NULL))>((0.1668424340608321, '-1116562900', 'w*^J'))) AS BLOB); -- 2ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=190663933 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (json_insert(x'', 'QF', NULL) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-1734807650 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', '2 sz=714344921 unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt0', '367806472 0 2 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (CAST(x'ab11' AS INTEGER))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '2 sz=138202586'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((((-1436654980) BETWEEN (x'') AND (0xffffffffcb91f27a)), CAST('' AS REAL), ((NULL)AND(0.8793079055777139))))==((((x'') NOT NULL), x'', ((x'4593') NOTNULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt0_segdir_1', '0 unordered noskipscan'); -- 0ms;
UPDATE OR ABORT vt0 SET c1='nvc*z qb' WHERE '-1580441457'; -- 6ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 8); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1428523406); -- 1ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
REINDEX; -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (x''); -- 0ms;
INSERT OR IGNORE INTO vt0(c1, c2) VALUES (0.19380897319294277, 0.5875402896699881); -- 0ms;
SELECT rtreecheck('rt0'); -- 2ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '18042'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
PRAGMA optimize; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE vt0 SET c0=x'' WHERE vt0.c0; -- 0ms;
INSERT OR IGNORE INTO vt0(c1) VALUES (0.5721021556296683), (0.17415078969995845), ('1360887024'); -- 1ms;
REINDEX; -- 0ms;
END; -- 0ms;
UPDATE OR IGNORE vt0 SET c1=NULL WHERE NULL; -- 0ms;
PRAGMA locking_mode = EXCLUSIVE; -- 0ms;
UPDATE OR IGNORE vt0 SET (c0, c2)=(x'565b', NULL); -- 1ms;
UPDATE rt0 SET c0=0.9055582783152762; -- 0ms;
UPDATE OR IGNORE vt0 SET (c0)=(274564658); -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR IGNORE vt0 SET c2='915895174' WHERE (((vt0.c1 IN ())) NOT BETWEEN ((('1068599991')<<(vt0.c0))) AND (((((vt0.c2)AND(vt0.c2)))OR(vt0.c1)))); -- 1ms;
INSERT OR IGNORE INTO vt0(c2, c0) VALUES (0.021789847426536557, '0.35804552584221294'); -- 1ms;
INSERT OR IGNORE INTO rt0(c1) VALUES (NULL), (x'7dfd'), ('CWVy'); -- 0ms;
ANALYZE vt0; -- 0ms;
ANALYZE; -- 1ms;
COMMIT TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
UPDATE vt0 SET c0=NULL; -- 1ms;
INSERT OR FAIL INTO vt0(c2) VALUES (0.8569013106823142); -- 0ms;
REINDEX; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 3); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 5); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
INSERT OR IGNORE INTO vt0(c1, c2) VALUES ('0.47683781766012656', ''), (x'', 'Futc\r'), (x'', x''); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', -59703586);\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '18437'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', -1643096349);\n; -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
UPDATE OR IGNORE rt0 SET c1='ecuy'; -- 0ms;
CREATE VIRTUAL TABLE vt1 USING fts4(c0, c1); -- 0ms;
UPDATE OR IGNORE vt1 SET (c0, c0)=(NULL, x'e17c') WHERE (((+ (vt1.c1)))OR((((vt1.c0))>((vt1.c0))))); -- 0ms;
REINDEX; -- 0ms;
UPDATE OR IGNORE rt0 SET c1=0.4803493838390931, c2=x'28d0', c0='-301122259'; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 7); -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=12'); -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 15); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=881896065,15');\n; -- 0ms;
PRAGMA main.mmap_size; -- 0ms;
INSERT OR REPLACE INTO vt0(c0) VALUES (''); -- 0ms;
REINDEX; -- 0ms;
UPDATE OR IGNORE vt1 SET c1=0.18519329657961026, c1=0.6927933368561429 WHERE (vt1.c0 IN ()) COLLATE RTRIM; -- 0ms;
PRAGMA recursive_triggers; -- 1ms;
INSERT OR ABORT INTO vt0(c0) VALUES (0.2343292889877272), (0.8595946611481737), (0.36349323057051963); -- 0ms;
INSERT OR IGNORE INTO vt1(c0, c1) VALUES (0.5890099541324624, 0.6190855390167072); -- 0ms;
PRAGMA optimize; -- 0ms;
INSERT OR ABORT INTO vt0(c1) VALUES (NULL), (x'758d'), (x'6efd'); -- 0ms;
INSERT OR ROLLBACK INTO rt0(c2) VALUES (NULL); -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=-724721475,11');\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 9); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', 190663933);\n; -- 0ms;
INSERT INTO vt1(vt1) VALUES('optimize'); -- 0ms;
INSERT OR IGNORE INTO rt0(c0, c1) VALUES (NULL, '-1009404019'); -- 0ms;
PRAGMA main.journal_size_limit = 3561198583805463860; -- 0ms;
UPDATE OR IGNORE vt0 SET c0=0.4817494399398665, c0=0.8184194781401571 WHERE ((((+ (vt0.c0))))!=(((- (vt0.c0))))); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
END TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '47268'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
REINDEX; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
PRAGMA main.cell_size_check; -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '2732'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 13); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=1183521628,11');\n; -- 0ms;
UPDATE OR REPLACE rt0 SET (c0, c2)=(x'5a33', x'b7bc') WHERE ((rt0.c2 COLLATE RTRIM)<>(LIKELY(rt0.c0))); -- 0ms;
VACUUM temp; -- 0ms;
END; -- 0ms;
UPDATE OR IGNORE vt0 SET c2='-I*M.[', c1='1e5000001''e)'; -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES (x'95a1', 0Xffffffffee0d3d2d, NULL); -- 0ms;
PRAGMA journal_size_limit = 0; -- 0ms;
SELECT rtreecheck('rt0'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 7); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
INSERT OR IGNORE INTO rt0(c1, c2) VALUES (x'911ad2ba', 0.6433856549740974), (0Xffffffffb6f96cd5, NULL), (x'', 'VR'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 579826606); -- 1ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
VACUUM; -- 1ms;
UPDATE OR IGNORE rt0 SET c2=NULL; -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=3'); -- 0ms;
INSERT OR ABORT INTO vt0(c1, c2, c0) VALUES (NULL, 1507200451, 0.7161216524927054); -- 1ms;
INSERT OR REPLACE INTO vt0(c1, c0) VALUES (0.13616014482086736, x''); -- 1ms;
DELETE FROM vt0 WHERE (((~ (vt0.c0)))&(((vt0.c0)|(vt0.c1)))); -- 1ms;
INSERT OR ABORT INTO vt0(c2, c0) VALUES (-1.11353635E9, 0.7874881546597862), (1083135736, -521286294), (x'5d06', 0.7601678525752241), ('1373364433', NULL), (NULL, '175264966'); -- 1ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (x'7cf6'); -- 1ms;
UPDATE OR IGNORE rt0 SET c0=x''; -- 1ms;
PRAGMA main.ignore_check_constraints; -- 0ms;
INSERT OR ROLLBACK INTO vt0 VALUES (-1662233669, 1.9401417E8, NULL); -- 1ms;
COMMIT; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT ALL rt0.c2 FROM vt0 NATURAL JOIN rt0;
SELECT ALL rt0.c2 FROM vt0 NATURAL JOIN rt0 WHERE (CAST(json_remove(vt0.c1, vt0.c0) AS INTEGER)) UNION ALL SELECT rt0.c2 FROM vt0 NATURAL JOIN rt0 WHERE ((NOT (CAST(json_remove(vt0.c1, vt0.c0) AS INTEGER)))) UNION ALL SELECT rt0.c2 FROM vt0 NATURAL JOIN rt0 WHERE (((CAST(json_remove(vt0.c1, vt0.c0) AS INTEGER)) ISNULL));
SELECT DISTINCT vt0.c2, rt0.c2, vt0.c0 FROM vt0 INNER JOIN rt0 ON ((vt0.c2) NOTNULL) COLLATE RTRIM;
SELECT DISTINCT vt0.c2, rt0.c2, vt0.c0 FROM vt0 INNER JOIN rt0 ON ((vt0.c2) NOTNULL) COLLATE RTRIM WHERE (((((rt0.c0 COLLATE NOCASE)AND(ABS(rt0.c0))))OR((('-275202373') ISNULL)))) UNION SELECT DISTINCT vt0.c2, rt0.c2, vt0.c0 FROM vt0 INNER JOIN rt0 ON ((vt0.c2) NOTNULL) COLLATE RTRIM WHERE ((NOT (((((rt0.c0 COLLATE NOCASE)AND(ABS(rt0.c0))))OR((('-275202373') ISNULL)))))) UNION SELECT DISTINCT vt0.c2, rt0.c2, vt0.c0 FROM vt0 INNER JOIN rt0 ON ((vt0.c2) NOTNULL) COLLATE RTRIM WHERE (((((((rt0.c0 COLLATE NOCASE)AND(ABS(rt0.c0))))OR((('-275202373') ISNULL)))) ISNULL));
SELECT DISTINCT vt0.c2, rt0.c2, vt0.c0 FROM vt0 INNER JOIN rt0 ON ((vt0.c2) NOTNULL) COLLATE RTRIM;
SELECT ALL vt0.c2, rt0.c1, rt0.c0, vt0.c0 FROM rt0, vt0 GROUP BY vt0.c2, rt0.c1, rt0.c0, vt0.c0;
SELECT ALL vt0.c2, rt0.c1, rt0.c0, vt0.c0 FROM rt0, vt0 WHERE ((x'' IN ()) COLLATE RTRIM) GROUP BY vt0.c2, rt0.c1, rt0.c0, vt0.c0 UNION SELECT vt0.c2, rt0.c1, rt0.c0, vt0.c0 FROM rt0, vt0 WHERE ((NOT ((x'' IN ()) COLLATE RTRIM))) GROUP BY vt0.c2, rt0.c1, rt0.c0, vt0.c0 UNION SELECT vt0.c2, rt0.c1, rt0.c0, vt0.c0 FROM rt0, vt0 WHERE ((((x'' IN ()) COLLATE RTRIM) ISNULL)) GROUP BY vt0.c2, rt0.c1, rt0.c0, vt0.c0;
SELECT ALL vt0.c2, rt0.c1, rt0.c0, vt0.c0 FROM rt0, vt0 GROUP BY vt0.c2, rt0.c1, rt0.c0, vt0.c0;
SELECT ALL vt0.c2, vt0.c0 FROM rt0, vt0 GROUP BY vt0.c2, vt0.c0;
SELECT ALL vt0.c2, vt0.c0 FROM rt0, vt0 GROUP BY vt0.c2, vt0.c0 HAVING COUNT(*) UNION ALL SELECT vt0.c2, vt0.c0 FROM rt0, vt0 GROUP BY vt0.c2, vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt0.c2, vt0.c0 FROM rt0, vt0 GROUP BY vt0.c2, vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt0.c2, vt0.c0 FROM rt0, vt0 GROUP BY vt0.c2, vt0.c0;
SELECT ALL vt0.c2, vt0.c0 FROM rt0, vt0 GROUP BY vt0.c2, vt0.c0 HAVING COUNT(*) UNION ALL SELECT vt0.c2, vt0.c0 FROM rt0, vt0 GROUP BY vt0.c2, vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt0.c2, vt0.c0 FROM rt0, vt0 GROUP BY vt0.c2, vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt0.c2, vt0.c0 FROM rt0, vt0 GROUP BY vt0.c2, vt0.c0;
SELECT ALL * FROM rt0 LEFT OUTER JOIN vt0 ON (((INSTR(vt0.c0, rt0.c1)))<=((SQLITE_COMPILEOPTION_GET(rt0.c2))));
SELECT ALL * FROM rt0 LEFT OUTER JOIN vt0 ON (((INSTR(vt0.c0, rt0.c1)))<=((SQLITE_COMPILEOPTION_GET(rt0.c2)))) WHERE (CASE WHEN (NOT (rt0.c0)) THEN ((0.5581509774483299)AND(rt0.c1)) ELSE (((0.5523612262218814, x'5e51', vt0.c1))<((vt0.c1, x'', vt0.c0))) END) UNION ALL SELECT * FROM rt0 LEFT OUTER JOIN vt0 ON (((INSTR(vt0.c0, rt0.c1)))<=((SQLITE_COMPILEOPTION_GET(rt0.c2)))) WHERE ((NOT (CASE WHEN (NOT (rt0.c0)) THEN ((0.5581509774483299)AND(rt0.c1)) ELSE (((0.5523612262218814, x'5e51', vt0.c1))<((vt0.c1, x'', vt0.c0))) END))) UNION ALL SELECT * FROM rt0 LEFT OUTER JOIN vt0 ON (((INSTR(vt0.c0, rt0.c1)))<=((SQLITE_COMPILEOPTION_GET(rt0.c2)))) WHERE (((CASE WHEN (NOT (rt0.c0)) THEN ((0.5581509774483299)AND(rt0.c1)) ELSE (((0.5523612262218814, x'5e51', vt0.c1))<((vt0.c1, x'', vt0.c0))) END) ISNULL));
SELECT ALL * FROM rt0 LEFT OUTER JOIN vt0 ON (((INSTR(vt0.c0, rt0.c1)))<=((SQLITE_COMPILEOPTION_GET(rt0.c2))));
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((((NULL) IS TRUE))IS(CASE x''  WHEN vt0.c2 THEN vt0.c0 ELSE vt0.c0 END))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((((NULL) IS TRUE))IS(CASE x''  WHEN vt0.c2 THEN vt0.c0 ELSE vt0.c0 END))))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((((NULL) IS TRUE))IS(CASE x''  WHEN vt0.c2 THEN vt0.c0 ELSE vt0.c0 END))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT vt0.c2, rt0.c2, rt0.c0, rt0.c1, vt0.c0 FROM vt0, rt0 GROUP BY vt0.c2, rt0.c2, rt0.c0, rt0.c1, vt0.c0;
SELECT vt0.c2, rt0.c2, rt0.c0, rt0.c1, vt0.c0 FROM vt0, rt0 WHERE (((((rt0.c0)&(rt0.c2)))<>((+ (rt0.c0))))) GROUP BY vt0.c2, rt0.c2, rt0.c0, rt0.c1, vt0.c0 UNION SELECT ALL vt0.c2, rt0.c2, rt0.c0, rt0.c1, vt0.c0 FROM vt0, rt0 WHERE ((NOT (((((rt0.c0)&(rt0.c2)))!=((+ (rt0.c0))))))) GROUP BY vt0.c2, rt0.c2, rt0.c0, rt0.c1, vt0.c0 UNION SELECT vt0.c2, rt0.c2, rt0.c0, rt0.c1, vt0.c0 FROM vt0, rt0 WHERE (((((((rt0.c0)&(rt0.c2)))!=((+ (rt0.c0))))) ISNULL)) GROUP BY vt0.c2, rt0.c2, rt0.c0, rt0.c1, vt0.c0;
SELECT vt0.c2, rt0.c2, rt0.c0, rt0.c1, vt0.c0 FROM vt0, rt0 GROUP BY vt0.c2, rt0.c2, rt0.c0, rt0.c1, vt0.c0;
SELECT vt0.c2, vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c2, vt0.c1, vt0.c0;
SELECT ALL vt0.c2, vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c2, vt0.c1, vt0.c0 HAVING TOTAL(TOTAL(MIN(MAX(TOTAL(vt0.c1))))) COLLATE NOCASE UNION ALL SELECT ALL vt0.c2, vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c2, vt0.c1, vt0.c0 HAVING (NOT (TOTAL(TOTAL(MIN(MAX(TOTAL(vt0.c1))))) COLLATE NOCASE)) UNION ALL SELECT vt0.c2, vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c2, vt0.c1, vt0.c0 HAVING ((TOTAL(TOTAL(MIN(MAX(TOTAL(vt0.c1))))) COLLATE NOCASE) ISNULL);
SELECT vt0.c0, vt0.c1, vt0.c2, rt0.c1, rt0.c2, rt0.c0 FROM vt0 FULL OUTER JOIN rt0 ON rt0.c0;
SELECT vt0.c0, vt0.c1, vt0.c2, rt0.c1, rt0.c2, rt0.c0 FROM vt0 FULL OUTER JOIN rt0 ON rt0.c0 WHERE (((('\&,3,')LIKE(rt0.c1)) IN ())) UNION ALL SELECT vt0.c0, vt0.c1, vt0.c2, rt0.c1, rt0.c2, rt0.c0 FROM vt0 FULL OUTER JOIN rt0 ON rt0.c0 WHERE ((NOT (((('\&,3,')LIKE(rt0.c1)) IN ())))) UNION ALL SELECT vt0.c0, vt0.c1, vt0.c2, rt0.c1, rt0.c2, rt0.c0 FROM vt0 FULL OUTER JOIN rt0 ON rt0.c0 WHERE (((((('\&,3,')LIKE(rt0.c1)) IN ())) ISNULL));
SELECT vt0.c0, vt0.c1, vt0.c2, rt0.c1, rt0.c2, rt0.c0 FROM vt0 FULL OUTER JOIN rt0 ON rt0.c0;
SELECT DISTINCT vt0.c1 FROM vt0;
SELECT DISTINCT vt0.c1 FROM vt0 WHERE (547854877) UNION SELECT DISTINCT vt0.c1 FROM vt0 WHERE ((NOT (547854877))) UNION SELECT DISTINCT vt0.c1 FROM vt0 WHERE (((547854877) ISNULL));
SELECT DISTINCT vt0.c1 FROM vt0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 NOT INDEXED GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE (rt0.c2) GROUP BY rt0.c2, rt0.c1, rt0.c0 UNION SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (rt0.c2))) GROUP BY rt0.c2, rt0.c1, rt0.c0 UNION SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE (((rt0.c2) ISNULL)) GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 NOT INDEXED GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING GROUP_CONCAT(TOTAL('*q밨n[')) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING (NOT (GROUP_CONCAT(TOTAL('*q밨n[')))) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING ((GROUP_CONCAT(TOTAL('*q밨n['))) ISNULL);
SELECT * FROM vt0;
SELECT ALL * FROM vt0 WHERE (vt0.c0) UNION ALL SELECT * FROM vt0 WHERE ((NOT (vt0.c0))) UNION ALL SELECT * FROM vt0 WHERE (((vt0.c0) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT rt0.c1, vt0.c0 FROM rt0, vt0;
SELECT DISTINCT rt0.c1, vt0.c0 FROM rt0, vt0 NOT INDEXED WHERE ((x'' IN ((- (rt0.c2)), CASE WHEN rt0.c0 THEN vt0.c2 WHEN vt0.c2 THEN vt0.c1 WHEN vt0.c2 THEN rt0.c2 END))) UNION SELECT DISTINCT rt0.c1, vt0.c0 FROM rt0, vt0 WHERE ((NOT ((x'' IN ((- (rt0.c2)), CASE WHEN rt0.c0 THEN vt0.c2 WHEN vt0.c2 THEN vt0.c1 WHEN vt0.c2 THEN rt0.c2 END))))) UNION SELECT DISTINCT rt0.c1, vt0.c0 FROM rt0, vt0 WHERE ((((x'' IN ((- (rt0.c2)), CASE WHEN rt0.c0 THEN vt0.c2 WHEN vt0.c2 THEN vt0.c1 WHEN vt0.c2 THEN rt0.c2 END))) ISNULL));
SELECT DISTINCT rt0.c1, vt0.c0 FROM rt0, vt0;
SELECT ALL vt0.c0, vt0.c2, rt0.c1, rt0.c2, vt0.c1 FROM rt0 NATURAL JOIN vt0 GROUP BY vt0.c0, vt0.c2, rt0.c1, rt0.c2, vt0.c1;
SELECT vt0.c0, vt0.c2, rt0.c1, rt0.c2, vt0.c1 FROM rt0 NATURAL JOIN vt0 WHERE ((LIKE(vt0.c2, rt0.c0, '봫') IN ())) GROUP BY vt0.c0, vt0.c2, rt0.c1, rt0.c2, vt0.c1 UNION SELECT ALL vt0.c0, vt0.c2, rt0.c1, rt0.c2, vt0.c1 FROM rt0 NATURAL JOIN vt0 WHERE ((NOT ((LIKE(vt0.c2, rt0.c0, '봫') IN ())))) GROUP BY vt0.c0, vt0.c2, rt0.c1, rt0.c2, vt0.c1 UNION SELECT vt0.c0, vt0.c2, rt0.c1, rt0.c2, vt0.c1 FROM rt0 NATURAL JOIN vt0 WHERE ((((LIKE(vt0.c2, rt0.c0, '봫') IN ())) ISNULL)) GROUP BY vt0.c0, vt0.c2, rt0.c1, rt0.c2, vt0.c1;
SELECT ALL vt0.c0, vt0.c2, rt0.c1, rt0.c2, vt0.c1 FROM rt0 NATURAL JOIN vt0 GROUP BY vt0.c0, vt0.c2, rt0.c1, rt0.c2, vt0.c1;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING TRIM(((rt0.c2) NOT BETWEEN (MAX(rt0.c1)) AND (MAX(SUM(GROUP_CONCAT(rt0.c1))))), COUNT(*)) UNION ALL SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING (NOT (TRIM(((rt0.c2) NOT BETWEEN (MAX(rt0.c1)) AND (MAX(SUM(GROUP_CONCAT(rt0.c1))))), COUNT(*)))) UNION ALL SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING ((TRIM(((rt0.c2) NOT BETWEEN (MAX(rt0.c1)) AND (MAX(SUM(GROUP_CONCAT(rt0.c1))))), COUNT(*))) ISNULL);
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE (rt0.c1) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (rt0.c1))) UNION ALL SELECT * FROM rt0 WHERE (((rt0.c1) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT vt0.c0, vt0.c2 FROM vt0;
SELECT DISTINCT vt0.c0, vt0.c2 FROM vt0 WHERE (((vt0.c0 IN ()) IN ())) UNION SELECT DISTINCT vt0.c0, vt0.c2 FROM vt0 WHERE ((NOT (((vt0.c0 IN ()) IN ())))) UNION SELECT DISTINCT vt0.c0, vt0.c2 FROM vt0 WHERE (((((vt0.c0 IN ()) IN ())) ISNULL));
SELECT DISTINCT vt0.c0, vt0.c2 FROM vt0;
SELECT rt0.c2, vt0.c2, rt0.c1, vt0.c0, rt0.c0 FROM vt0 INNER JOIN rt0 ON (((vt0.c0) IS TRUE) IN (rt0.c0)) GROUP BY rt0.c2, vt0.c2, rt0.c1, vt0.c0, rt0.c0;
SELECT rt0.c2, vt0.c2, rt0.c1, vt0.c0, rt0.c0 FROM vt0 NOT INDEXED INNER JOIN rt0 ON (((vt0.c0) IS TRUE) IN (rt0.c0)) WHERE (x'2ad5') GROUP BY rt0.c2, vt0.c2, rt0.c1, vt0.c0, rt0.c0 UNION SELECT ALL rt0.c2, vt0.c2, rt0.c1, vt0.c0, rt0.c0 FROM vt0 INNER JOIN rt0 ON (((vt0.c0) IS TRUE) IN (rt0.c0)) WHERE ((NOT (x'2ad5'))) GROUP BY rt0.c2, vt0.c2, rt0.c1, vt0.c0, rt0.c0 UNION SELECT rt0.c2, vt0.c2, rt0.c1, vt0.c0, rt0.c0 FROM vt0 INNER JOIN rt0 ON (((vt0.c0) IS TRUE) IN (rt0.c0)) WHERE (((x'2ad5') ISNULL)) GROUP BY rt0.c2, vt0.c2, rt0.c1, vt0.c0, rt0.c0;
SELECT rt0.c2, vt0.c2, rt0.c1, vt0.c0, rt0.c0 FROM vt0 INNER JOIN rt0 ON (((vt0.c0) IS TRUE) IN (rt0.c0)) GROUP BY rt0.c2, vt0.c2, rt0.c1, vt0.c0, rt0.c0;
SELECT vt0.c1, vt0.c2 FROM rt0 CROSS JOIN vt0 ON ((rt0.c1) BETWEEN (((vt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0))) AND ((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((''))))) GROUP BY vt0.c1, vt0.c2;
SELECT ALL vt0.c1, vt0.c2 FROM rt0 CROSS JOIN vt0 ON ((rt0.c1) BETWEEN (((vt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0))) AND ((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((''))))) GROUP BY vt0.c1, vt0.c2 HAVING GROUP_CONCAT(rt0.c0) UNION ALL SELECT vt0.c1, vt0.c2 FROM rt0 CROSS JOIN vt0 ON ((rt0.c1) BETWEEN (((vt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0))) AND ((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((''))))) GROUP BY vt0.c1, vt0.c2 HAVING (NOT (GROUP_CONCAT(rt0.c0))) UNION ALL SELECT vt0.c1, vt0.c2 FROM rt0 CROSS JOIN vt0 ON ((rt0.c1) BETWEEN (((vt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0))) AND ((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((''))))) GROUP BY vt0.c1, vt0.c2 HAVING ((GROUP_CONCAT(rt0.c0)) ISNULL);
SELECT vt0.c1, vt0.c2 FROM rt0 CROSS JOIN vt0 ON ((rt0.c1) BETWEEN (((vt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0))) AND ((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((''))))) GROUP BY vt0.c1, vt0.c2;
SELECT ALL vt0.c1, vt0.c2 FROM rt0 CROSS JOIN vt0 ON ((rt0.c1) BETWEEN (((vt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0))) AND ((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((''))))) GROUP BY vt0.c1, vt0.c2 HAVING GROUP_CONCAT(rt0.c0) UNION ALL SELECT vt0.c1, vt0.c2 FROM rt0 CROSS JOIN vt0 ON ((rt0.c1) BETWEEN (((vt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0))) AND ((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((''))))) GROUP BY vt0.c1, vt0.c2 HAVING (NOT (GROUP_CONCAT(rt0.c0))) UNION ALL SELECT vt0.c1, vt0.c2 FROM rt0 CROSS JOIN vt0 ON ((rt0.c1) BETWEEN (((vt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0))) AND ((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((''))))) GROUP BY vt0.c1, vt0.c2 HAVING ((GROUP_CONCAT(rt0.c0)) ISNULL);
SELECT vt0.c1, vt0.c2 FROM rt0 CROSS JOIN vt0 ON ((rt0.c1) BETWEEN (((vt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0))) AND ((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((''))))) GROUP BY vt0.c1, vt0.c2;
SELECT vt0.c0, vt0.c1 FROM rt0 LEFT OUTER JOIN vt0 ON CAST((~ (rt0.c1)) AS NUMERIC);
SELECT vt0.c0, vt0.c1 FROM rt0 LEFT OUTER JOIN vt0 ON CAST((~ (rt0.c1)) AS NUMERIC) WHERE (CAST(rt0.c1 AS TEXT)) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM rt0 LEFT OUTER JOIN vt0 ON CAST((~ (rt0.c1)) AS NUMERIC) WHERE ((NOT (CAST(rt0.c1 AS TEXT)))) UNION ALL SELECT vt0.c0, vt0.c1 FROM rt0 LEFT OUTER JOIN vt0 ON CAST((~ (rt0.c1)) AS NUMERIC) WHERE (((CAST(rt0.c1 AS TEXT)) ISNULL));
SELECT vt0.c0, vt0.c1 FROM rt0 LEFT OUTER JOIN vt0 ON CAST((~ (rt0.c1)) AS NUMERIC);
SELECT DISTINCT vt0.c2 FROM vt0;
SELECT DISTINCT vt0.c2 FROM vt0 WHERE ((vt0.c1 COLLATE NOCASE IN ())) UNION SELECT DISTINCT vt0.c2 FROM vt0 WHERE ((NOT ((vt0.c1 COLLATE NOCASE IN ())))) UNION SELECT DISTINCT vt0.c2 FROM vt0 WHERE ((((vt0.c1 COLLATE NOCASE IN ())) ISNULL));
SELECT DISTINCT vt0.c2 FROM vt0;
SELECT ALL vt0.c1, vt0.c0, vt0.c2 FROM vt0 GROUP BY vt0.c1, vt0.c0, vt0.c2;
SELECT ALL vt0.c1, vt0.c0, vt0.c2 FROM vt0 WHERE ((((NOT ('-2094688989'))) NOT NULL)) GROUP BY vt0.c1, vt0.c0, vt0.c2 UNION SELECT vt0.c1, vt0.c0, vt0.c2 FROM vt0 WHERE ((NOT ((((NOT ('-2094688989'))) NOT NULL)))) GROUP BY vt0.c1, vt0.c0, vt0.c2 UNION SELECT vt0.c1, vt0.c0, vt0.c2 FROM vt0 WHERE ((((((NOT ('-2094688989'))) NOT NULL)) ISNULL)) GROUP BY vt0.c1, vt0.c0, vt0.c2;
SELECT ALL vt0.c1, vt0.c0, vt0.c2 FROM vt0 GROUP BY vt0.c1, vt0.c0, vt0.c2;
SELECT ALL vt0.c1, vt0.c2 FROM vt0, rt0 GROUP BY vt0.c1, vt0.c2;
SELECT ALL vt0.c1, vt0.c2 FROM vt0, rt0 GROUP BY vt0.c1, vt0.c2 HAVING CASE WHEN (MAX(GROUP_CONCAT(MAX(vt0.c2))) IN ()) THEN AVG(vt0.c2) WHEN HEX(DISTINCT vt0.c0) THEN SUM(x'20f1') WHEN COUNT(SUM(vt0.c2)) THEN UPPER(DISTINCT vt0.c0) ELSE MAX(vt0.c0) END UNION ALL SELECT vt0.c1, vt0.c2 FROM vt0, rt0 GROUP BY vt0.c1, vt0.c2 HAVING (NOT (CASE WHEN (MAX(GROUP_CONCAT(MAX(vt0.c2))) IN ()) THEN AVG(vt0.c2) WHEN HEX(DISTINCT vt0.c0) THEN SUM(x'20f1') WHEN COUNT(SUM(vt0.c2)) THEN UPPER(DISTINCT vt0.c0) ELSE MAX(vt0.c0) END)) UNION ALL SELECT vt0.c1, vt0.c2 FROM vt0, rt0 GROUP BY vt0.c1, vt0.c2 HAVING ((CASE WHEN (MAX(GROUP_CONCAT(MAX(vt0.c2))) IN ()) THEN AVG(vt0.c2) WHEN HEX(DISTINCT vt0.c0) THEN SUM(x'20f1') WHEN COUNT(SUM(vt0.c2)) THEN UPPER(DISTINCT vt0.c0) ELSE MAX(vt0.c0) END) ISNULL);
SELECT ALL * FROM rt0, vt0;
SELECT ALL * FROM rt0, vt0 WHERE (rt0.c1) UNION ALL SELECT ALL * FROM rt0, vt0 WHERE ((NOT (rt0.c1))) UNION ALL SELECT ALL * FROM rt0, vt0 WHERE (((rt0.c1) ISNULL));
SELECT ALL * FROM rt0, vt0;
SELECT DISTINCT vt0.c2 FROM vt0;
SELECT DISTINCT vt0.c2 FROM vt0 WHERE ((+ (NULL))) UNION SELECT DISTINCT vt0.c2 FROM vt0 WHERE ((NOT ((+ (NULL))))) UNION SELECT DISTINCT vt0.c2 FROM vt0 WHERE ((((+ (NULL))) ISNULL));
SELECT DISTINCT vt0.c2 FROM vt0;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (((rt0.c2 IN ()) IN ())) GROUP BY rt0.c1, rt0.c0, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (((rt0.c2 IN ()) IN ())))) GROUP BY rt0.c1, rt0.c0, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (((((rt0.c2 IN ()) IN ())) ISNULL)) GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT rt0.c1, vt0.c1, vt0.c2, rt0.c2 FROM vt0 CROSS JOIN rt0 ON 1935637899 GROUP BY rt0.c1, vt0.c1, vt0.c2, rt0.c2;
SELECT rt0.c1, vt0.c1, vt0.c2, rt0.c2 FROM vt0 CROSS JOIN rt0 ON 1935637899 GROUP BY rt0.c1, vt0.c1, vt0.c2, rt0.c2 HAVING (MIN(COUNT(*)) IN ()) UNION ALL SELECT ALL rt0.c1, vt0.c1, vt0.c2, rt0.c2 FROM vt0 CROSS JOIN rt0 ON 1935637899 GROUP BY rt0.c1, vt0.c1, vt0.c2, rt0.c2 HAVING (NOT ((MIN(COUNT(*)) IN ()))) UNION ALL SELECT ALL rt0.c1, vt0.c1, vt0.c2, rt0.c2 FROM vt0 CROSS JOIN rt0 ON 1935637899 GROUP BY rt0.c1, vt0.c1, vt0.c2, rt0.c2 HAVING (((MIN(COUNT(*)) IN ())) ISNULL);
SELECT rt0.c1, vt0.c1, vt0.c2, rt0.c2 FROM vt0 CROSS JOIN rt0 ON 1935637899 GROUP BY rt0.c1, vt0.c1, vt0.c2, rt0.c2;
SELECT rt0.c1, vt0.c1, vt0.c2, rt0.c2 FROM vt0 CROSS JOIN rt0 ON 1935637899 GROUP BY rt0.c1, vt0.c1, vt0.c2, rt0.c2 HAVING (MIN(COUNT(*)) IN ()) UNION ALL SELECT ALL rt0.c1, vt0.c1, vt0.c2, rt0.c2 FROM vt0 CROSS JOIN rt0 ON 1935637899 GROUP BY rt0.c1, vt0.c1, vt0.c2, rt0.c2 HAVING (NOT ((MIN(COUNT(*)) IN ()))) UNION ALL SELECT ALL rt0.c1, vt0.c1, vt0.c2, rt0.c2 FROM vt0 CROSS JOIN rt0 ON 1935637899 GROUP BY rt0.c1, vt0.c1, vt0.c2, rt0.c2 HAVING (((MIN(COUNT(*)) IN ())) ISNULL);
SELECT rt0.c1, vt0.c1, vt0.c2, rt0.c2 FROM vt0 CROSS JOIN rt0 ON 1935637899 GROUP BY rt0.c1, vt0.c1, vt0.c2, rt0.c2;
SELECT ALL vt0.c1, vt0.c2, rt0.c1, vt0.c0, rt0.c2, rt0.c0 FROM vt0, rt0;
SELECT ALL vt0.c1, vt0.c2, rt0.c1, vt0.c0, rt0.c2, rt0.c0 FROM vt0, rt0 WHERE (((((NULL)IS(rt0.c2))) NOT BETWEEN ((rt0.c0 IN (vt0.c0))) AND (((x'')=(vt0.c1))))) UNION ALL SELECT ALL vt0.c1, vt0.c2, rt0.c1, vt0.c0, rt0.c2, rt0.c0 FROM vt0, rt0 WHERE ((NOT (((((NULL)IS(rt0.c2))) NOT BETWEEN ((rt0.c0 IN (vt0.c0))) AND (((x'')==(vt0.c1))))))) UNION ALL SELECT ALL vt0.c1, vt0.c2, rt0.c1, vt0.c0, rt0.c2, rt0.c0 FROM vt0, rt0 WHERE (((((((NULL)IS(rt0.c2))) NOT BETWEEN ((rt0.c0 IN (vt0.c0))) AND (((x'')=(vt0.c1))))) ISNULL));
SELECT ALL vt0.c1, vt0.c2, rt0.c1, vt0.c0, rt0.c2, rt0.c0 FROM vt0, rt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (vt0.c2) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (vt0.c2))) UNION SELECT DISTINCT * FROM vt0 WHERE (((vt0.c2) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 WHERE (((((+ ('FYLTNBd4m'))))==((((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1)))))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0 WHERE ((NOT (((((+ ('FYLTNBd4m'))))=((((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1)))))))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0 WHERE (((((((+ ('FYLTNBd4m'))))==((((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1)))))) ISNULL)) GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c1, vt0.c2, vt0.c0, rt0.c0, rt0.c2 FROM vt0, rt0 GROUP BY rt0.c1, vt0.c2, vt0.c0, rt0.c0, rt0.c2;
SELECT rt0.c1, vt0.c2, vt0.c0, rt0.c0, rt0.c2 FROM vt0, rt0 GROUP BY rt0.c1, vt0.c2, vt0.c0, rt0.c0, rt0.c2 HAVING (((CASE WHEN vt0.c1 THEN vt0.c1 END))!=((NULL))) UNION ALL SELECT ALL rt0.c1, vt0.c2, vt0.c0, rt0.c0, rt0.c2 FROM vt0, rt0 GROUP BY rt0.c1, vt0.c2, vt0.c0, rt0.c0, rt0.c2 HAVING (NOT ((((CASE WHEN vt0.c1 THEN vt0.c1 END))<>((NULL))))) UNION ALL SELECT ALL rt0.c1, vt0.c2, vt0.c0, rt0.c0, rt0.c2 FROM vt0, rt0 GROUP BY rt0.c1, vt0.c2, vt0.c0, rt0.c0, rt0.c2 HAVING (((((CASE WHEN vt0.c1 THEN vt0.c1 END))<>((NULL)))) ISNULL);
SELECT rt0.c1, vt0.c2, vt0.c0, rt0.c0, rt0.c2 FROM vt0, rt0 GROUP BY rt0.c1, vt0.c2, vt0.c0, rt0.c0, rt0.c2;
SELECT rt0.c1, vt0.c2, vt0.c0, rt0.c0, rt0.c2 FROM vt0, rt0 GROUP BY rt0.c1, vt0.c2, vt0.c0, rt0.c0, rt0.c2 HAVING (((CASE WHEN vt0.c1 THEN vt0.c1 END))!=((NULL))) UNION ALL SELECT ALL rt0.c1, vt0.c2, vt0.c0, rt0.c0, rt0.c2 FROM vt0, rt0 GROUP BY rt0.c1, vt0.c2, vt0.c0, rt0.c0, rt0.c2 HAVING (NOT ((((CASE WHEN vt0.c1 THEN vt0.c1 END))<>((NULL))))) UNION ALL SELECT ALL rt0.c1, vt0.c2, vt0.c0, rt0.c0, rt0.c2 FROM vt0, rt0 GROUP BY rt0.c1, vt0.c2, vt0.c0, rt0.c0, rt0.c2 HAVING (((((CASE WHEN vt0.c1 THEN vt0.c1 END))<>((NULL)))) ISNULL);
SELECT rt0.c1, vt0.c2, vt0.c0, rt0.c0, rt0.c2 FROM vt0, rt0 GROUP BY rt0.c1, vt0.c2, vt0.c0, rt0.c0, rt0.c2;
SELECT ALL TOTAL(CASE WHEN ((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c0)) THEN TRIM(rt0.c0, rt0.c0) END) FROM rt0 ORDER BY CAST(NULLIF(rt0.c1, rt0.c1) AS BLOB)  NULLS FIRST;
SELECT rt0.c2, vt0.c2, vt0.c0, rt0.c1, vt0.c1 FROM rt0, vt0;
SELECT ALL rt0.c2, vt0.c2, vt0.c0, rt0.c1, vt0.c1 FROM rt0, vt0 WHERE (0.366393176933448) UNION ALL SELECT rt0.c2, vt0.c2, vt0.c0, rt0.c1, vt0.c1 FROM rt0, vt0 WHERE ((NOT (0.366393176933448))) UNION ALL SELECT rt0.c2, vt0.c2, vt0.c0, rt0.c1, vt0.c1 FROM rt0, vt0 WHERE (((0.366393176933448) ISNULL));
SELECT rt0.c2, vt0.c2, vt0.c0, rt0.c1, vt0.c1 FROM rt0, vt0;
SELECT DISTINCT * FROM rt0 LEFT OUTER JOIN vt0 ON CASE ((((rt0.c2)OR(vt0.c0)))AND(rt0.c0))  WHEN ((vt0.c2) BETWEEN (rt0.c0) AND (vt0.c1)) THEN ((vt0.c2) NOT BETWEEN (vt0.c0) AND (rt0.c1)) ELSE vt0.c2 END;
SELECT DISTINCT * FROM rt0 LEFT OUTER JOIN vt0 ON CASE ((((rt0.c2)OR(vt0.c0)))AND(rt0.c0))  WHEN ((vt0.c2) BETWEEN (rt0.c0) AND (vt0.c1)) THEN ((vt0.c2) NOT BETWEEN (vt0.c0) AND (rt0.c1)) ELSE vt0.c2 END WHERE (CAST(((vt0.c0) NOT NULL) AS BLOB)) UNION SELECT DISTINCT * FROM rt0 LEFT OUTER JOIN vt0 ON CASE ((((rt0.c2)OR(vt0.c0)))AND(rt0.c0))  WHEN ((vt0.c2) BETWEEN (rt0.c0) AND (vt0.c1)) THEN ((vt0.c2) NOT BETWEEN (vt0.c0) AND (rt0.c1)) ELSE vt0.c2 END WHERE ((NOT (CAST(((vt0.c0) NOT NULL) AS BLOB)))) UNION SELECT DISTINCT * FROM rt0 LEFT OUTER JOIN vt0 ON CASE ((((rt0.c2)OR(vt0.c0)))AND(rt0.c0))  WHEN ((vt0.c2) BETWEEN (rt0.c0) AND (vt0.c1)) THEN ((vt0.c2) NOT BETWEEN (vt0.c0) AND (rt0.c1)) ELSE vt0.c2 END WHERE (((CAST(((vt0.c0) NOT NULL) AS BLOB)) ISNULL));
SELECT DISTINCT * FROM rt0 LEFT OUTER JOIN vt0 ON CASE ((((rt0.c2)OR(vt0.c0)))AND(rt0.c0))  WHEN ((vt0.c2) BETWEEN (rt0.c0) AND (vt0.c1)) THEN ((vt0.c2) NOT BETWEEN (vt0.c0) AND (rt0.c1)) ELSE vt0.c2 END;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE ((vt0.c2 IN ())) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT ((vt0.c2 IN ())))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((((vt0.c2 IN ())) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL rt0.c1, vt0.c1, rt0.c0 FROM vt0, rt0 GROUP BY rt0.c1, vt0.c1, rt0.c0;
SELECT rt0.c1, vt0.c1, rt0.c0 FROM vt0, rt0 GROUP BY rt0.c1, vt0.c1, rt0.c0 HAVING MIN(COUNT(*)) UNION ALL SELECT ALL rt0.c1, vt0.c1, rt0.c0 FROM vt0, rt0 GROUP BY rt0.c1, vt0.c1, rt0.c0 HAVING (NOT (MIN(COUNT(*)))) UNION ALL SELECT ALL rt0.c1, vt0.c1, rt0.c0 FROM vt0 NOT INDEXED, rt0 GROUP BY rt0.c1, vt0.c1, rt0.c0 HAVING ((MIN(COUNT(*))) ISNULL);
SELECT ALL vt0.c1, vt0.c2, vt0.c0 FROM vt0;
SELECT vt0.c1, vt0.c2, vt0.c0 FROM vt0 WHERE (CAST(vt0.c2 AS INTEGER)) UNION ALL SELECT vt0.c1, vt0.c2, vt0.c0 FROM vt0 WHERE ((NOT (CAST(vt0.c2 AS INTEGER)))) UNION ALL SELECT vt0.c1, vt0.c2, vt0.c0 FROM vt0 WHERE (((CAST(vt0.c2 AS INTEGER)) ISNULL));
SELECT ALL vt0.c1, vt0.c2, vt0.c0 FROM vt0;
SELECT DISTINCT * FROM vt0, rt0;
SELECT DISTINCT * FROM vt0, rt0 WHERE (COALESCE(((((rt0.c2)OR(rt0.c1)))AND(vt0.c0)), (- (vt0.c2)))) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE ((NOT (COALESCE(((((rt0.c2)OR(rt0.c1)))AND(vt0.c0)), (- (vt0.c2)))))) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE (((COALESCE(((((rt0.c2)OR(rt0.c1)))AND(vt0.c0)), (- (vt0.c2)))) ISNULL));
SELECT DISTINCT * FROM vt0, rt0;
SELECT vt0.c1, rt0.c2 FROM rt0, vt0 GROUP BY vt0.c1, rt0.c2;
SELECT ALL vt0.c1, rt0.c2 FROM rt0, vt0 WHERE (rt0.c1) GROUP BY vt0.c1, rt0.c2 UNION SELECT vt0.c1, rt0.c2 FROM rt0, vt0 WHERE ((NOT (rt0.c1))) GROUP BY vt0.c1, rt0.c2 UNION SELECT ALL vt0.c1, rt0.c2 FROM rt0, vt0 WHERE (((rt0.c1) ISNULL)) GROUP BY vt0.c1, rt0.c2;
SELECT vt0.c1, rt0.c2 FROM rt0, vt0 GROUP BY vt0.c1, rt0.c2;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING ((((((((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c1)))OR(((TOTAL(COUNT(*)))<>(rt0.c2)))))OR(COUNT(AVG(SUM(GROUP_CONCAT(rt0.c2)))))))OR((rt0.c0 IN (MAX(TOTAL(GROUP_CONCAT(rt0.c2))))))))AND(((COUNT(*))>=(rt0.c0)))) UNION ALL SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (NOT (((((((((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c1)))OR(((TOTAL(COUNT(*)))!=(rt0.c2)))))OR(COUNT(AVG(SUM(GROUP_CONCAT(rt0.c2)))))))OR((rt0.c0 IN (MAX(TOTAL(GROUP_CONCAT(rt0.c2))))))))AND(((COUNT(*))>=(rt0.c0)))))) UNION ALL SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING ((((((((((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c1)))OR(((TOTAL(COUNT(*)))!=(rt0.c2)))))OR(COUNT(AVG(SUM(GROUP_CONCAT(rt0.c2)))))))OR((rt0.c0 IN (MAX(TOTAL(GROUP_CONCAT(rt0.c2))))))))AND(((COUNT(*))>=(rt0.c0))))) ISNULL);
SELECT ALL vt0.c2 FROM rt0, vt0;
SELECT vt0.c2 FROM rt0, vt0 WHERE (CASE WHEN ((x'3a1e') NOT BETWEEN (vt0.c2) AND (vt0.c1)) THEN (((vt0.c2)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c2))) END) UNION ALL SELECT ALL vt0.c2 FROM rt0, vt0 WHERE ((NOT (CASE WHEN ((x'3a1e') NOT BETWEEN (vt0.c2) AND (vt0.c1)) THEN (((vt0.c2)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c2))) END))) UNION ALL SELECT ALL vt0.c2 FROM rt0, vt0 WHERE (((CASE WHEN ((x'3a1e') NOT BETWEEN (vt0.c2) AND (vt0.c1)) THEN (((vt0.c2)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c2))) END) ISNULL));
SELECT ALL vt0.c2 FROM rt0, vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (vt0.c0) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (vt0.c0))) UNION SELECT DISTINCT * FROM vt0 WHERE (((vt0.c0) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL vt0.c2 FROM rt0, vt0 GROUP BY vt0.c2;
SELECT vt0.c2 FROM rt0, vt0 WHERE ((UNLIKELY(vt0.c2) IN ((('D49+e{un') ISNULL)))) GROUP BY vt0.c2 UNION SELECT ALL vt0.c2 FROM rt0, vt0 WHERE ((NOT ((UNLIKELY(vt0.c2) IN ((('D49+e{un') ISNULL)))))) GROUP BY vt0.c2 UNION SELECT vt0.c2 FROM rt0, vt0 WHERE ((((UNLIKELY(vt0.c2) IN ((('D49+e{un') ISNULL)))) ISNULL)) GROUP BY vt0.c2;
SELECT ALL vt0.c2 FROM rt0, vt0 GROUP BY vt0.c2;
SELECT ALL vt0.c0, rt0.c2, vt0.c1, rt0.c0, vt0.c2, rt0.c1 FROM vt0, rt0 GROUP BY vt0.c0, rt0.c2, vt0.c1, rt0.c0, vt0.c2, rt0.c1;
SELECT vt0.c0, rt0.c2, vt0.c1, rt0.c0, vt0.c2, rt0.c1 FROM vt0, rt0 GROUP BY vt0.c0, rt0.c2, vt0.c1, rt0.c0, vt0.c2, rt0.c1 HAVING TOTAL(vt0.c2 COLLATE BINARY) UNION ALL SELECT vt0.c0, rt0.c2, vt0.c1, rt0.c0, vt0.c2, rt0.c1 FROM vt0 NOT INDEXED, rt0 GROUP BY vt0.c0, rt0.c2, vt0.c1, rt0.c0, vt0.c2, rt0.c1 HAVING (NOT (TOTAL(vt0.c2 COLLATE BINARY))) UNION ALL SELECT vt0.c0, rt0.c2, vt0.c1, rt0.c0, vt0.c2, rt0.c1 FROM vt0, rt0 GROUP BY vt0.c0, rt0.c2, vt0.c1, rt0.c0, vt0.c2, rt0.c1 HAVING ((TOTAL(vt0.c2 COLLATE BINARY)) ISNULL);
SELECT ALL vt0.c0, rt0.c2, vt0.c1, rt0.c0, vt0.c2, rt0.c1 FROM vt0, rt0 GROUP BY vt0.c0, rt0.c2, vt0.c1, rt0.c0, vt0.c2, rt0.c1;
SELECT vt0.c0, rt0.c2, vt0.c1, rt0.c0, vt0.c2, rt0.c1 FROM vt0, rt0 GROUP BY vt0.c0, rt0.c2, vt0.c1, rt0.c0, vt0.c2, rt0.c1 HAVING TOTAL(vt0.c2 COLLATE BINARY) UNION ALL SELECT vt0.c0, rt0.c2, vt0.c1, rt0.c0, vt0.c2, rt0.c1 FROM vt0 NOT INDEXED, rt0 GROUP BY vt0.c0, rt0.c2, vt0.c1, rt0.c0, vt0.c2, rt0.c1 HAVING (NOT (TOTAL(vt0.c2 COLLATE BINARY))) UNION ALL SELECT vt0.c0, rt0.c2, vt0.c1, rt0.c0, vt0.c2, rt0.c1 FROM vt0, rt0 GROUP BY vt0.c0, rt0.c2, vt0.c1, rt0.c0, vt0.c2, rt0.c1 HAVING ((TOTAL(vt0.c2 COLLATE BINARY)) ISNULL);
SELECT ALL vt0.c0, rt0.c2, vt0.c1, rt0.c0, vt0.c2, rt0.c1 FROM vt0, rt0 GROUP BY vt0.c0, rt0.c2, vt0.c1, rt0.c0, vt0.c2, rt0.c1;
SELECT ALL MAX((((vt0.c0 IN ())) NOTNULL)) FROM rt0, vt0 ORDER BY ((((((((x'22f4')AND(rt0.c0)))AND(rt0.c2)))OR(rt0.c1)))OR(x'')) COLLATE RTRIM;
SELECT ALL rt0.c0, rt0.c1, rt0.c2, vt0.c0 FROM rt0, vt0;
SELECT ALL rt0.c0, rt0.c1, rt0.c2, vt0.c0 FROM rt0, vt0 WHERE ((+ (PRINTF(rt0.c0, rt0.c2, rt0.c0)))) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2, vt0.c0 FROM rt0, vt0 WHERE ((NOT ((+ (PRINTF(rt0.c0, rt0.c2, rt0.c0)))))) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2, vt0.c0 FROM rt0, vt0 WHERE ((((+ (PRINTF(rt0.c0, rt0.c2, rt0.c0)))) ISNULL));
SELECT ALL rt0.c0, rt0.c1, rt0.c2, vt0.c0 FROM rt0, vt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((rt0.c2 IN ()) COLLATE RTRIM) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((rt0.c2 IN ()) COLLATE RTRIM))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((rt0.c2 IN ()) COLLATE RTRIM) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0 WHERE (vt0.c0) GROUP BY vt0.c1, vt0.c0 UNION SELECT vt0.c1, vt0.c0 FROM vt0 WHERE ((NOT (vt0.c0))) GROUP BY vt0.c1, vt0.c0 UNION SELECT vt0.c1, vt0.c0 FROM vt0 WHERE (((vt0.c0) ISNULL)) GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c2 FROM rt0 RIGHT OUTER JOIN vt0 ON ((((vt0.c0)/(vt0.c2)))>(((((vt0.c2)OR(vt0.c2)))AND(vt0.c0)))) GROUP BY vt0.c2;
SELECT ALL vt0.c2 FROM rt0 RIGHT OUTER JOIN vt0 ON ((((vt0.c0)/(vt0.c2)))>(((((vt0.c2)OR(vt0.c2)))AND(vt0.c0)))) GROUP BY vt0.c2 HAVING ((((COUNT(*))AND(GROUP_CONCAT(vt0.c2))))OR(CAST(COUNT(vt0.c1) AS INTEGER))) UNION ALL SELECT vt0.c2 FROM rt0 RIGHT OUTER JOIN vt0 ON ((((vt0.c0)/(vt0.c2)))>(((((vt0.c2)OR(vt0.c2)))AND(vt0.c0)))) GROUP BY vt0.c2 HAVING (NOT (((((COUNT(*))AND(GROUP_CONCAT(vt0.c2))))OR(CAST(COUNT(vt0.c1) AS INTEGER))))) UNION ALL SELECT ALL vt0.c2 FROM rt0 RIGHT OUTER JOIN vt0 ON ((((vt0.c0)/(vt0.c2)))>(((((vt0.c2)OR(vt0.c2)))AND(vt0.c0)))) GROUP BY vt0.c2 HAVING ((((((COUNT(*))AND(GROUP_CONCAT(vt0.c2))))OR(CAST(COUNT(vt0.c1) AS INTEGER)))) ISNULL);
SELECT ALL vt0.c2 FROM rt0 RIGHT OUTER JOIN vt0 ON ((((vt0.c0)/(vt0.c2)))>(((((vt0.c2)OR(vt0.c2)))AND(vt0.c0)))) GROUP BY vt0.c2;
SELECT ALL vt0.c2 FROM rt0 RIGHT OUTER JOIN vt0 ON ((((vt0.c0)/(vt0.c2)))>(((((vt0.c2)OR(vt0.c2)))AND(vt0.c0)))) GROUP BY vt0.c2 HAVING ((((COUNT(*))AND(GROUP_CONCAT(vt0.c2))))OR(CAST(COUNT(vt0.c1) AS INTEGER))) UNION ALL SELECT vt0.c2 FROM rt0 RIGHT OUTER JOIN vt0 ON ((((vt0.c0)/(vt0.c2)))>(((((vt0.c2)OR(vt0.c2)))AND(vt0.c0)))) GROUP BY vt0.c2 HAVING (NOT (((((COUNT(*))AND(GROUP_CONCAT(vt0.c2))))OR(CAST(COUNT(vt0.c1) AS INTEGER))))) UNION ALL SELECT ALL vt0.c2 FROM rt0 RIGHT OUTER JOIN vt0 ON ((((vt0.c0)/(vt0.c2)))>(((((vt0.c2)OR(vt0.c2)))AND(vt0.c0)))) GROUP BY vt0.c2 HAVING ((((((COUNT(*))AND(GROUP_CONCAT(vt0.c2))))OR(CAST(COUNT(vt0.c1) AS INTEGER)))) ISNULL);
SELECT ALL vt0.c2 FROM rt0 RIGHT OUTER JOIN vt0 ON ((((vt0.c0)/(vt0.c2)))>(((((vt0.c2)OR(vt0.c2)))AND(vt0.c0)))) GROUP BY vt0.c2;
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE (CASE ((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c1))  WHEN rt0.c1 COLLATE RTRIM THEN rt0.c2 ELSE DATE(rt0.c0, 0.4451316351502168, rt0.c1, rt0.c0, rt0.c0, rt0.c2, rt0.c0) END) UNION ALL SELECT * FROM rt0 WHERE ((NOT (CASE ((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c1))  WHEN rt0.c1 COLLATE RTRIM THEN rt0.c2 ELSE DATE(rt0.c0, 0.4451316351502168, rt0.c1, rt0.c0, rt0.c0, rt0.c2, rt0.c0) END))) UNION ALL SELECT ALL * FROM rt0 WHERE (((CASE ((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c1))  WHEN rt0.c1 COLLATE RTRIM THEN rt0.c2 ELSE DATE(rt0.c0, 0.4451316351502168, rt0.c1, rt0.c0, rt0.c0, rt0.c2, rt0.c0) END) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT * FROM rt0, vt0;
SELECT DISTINCT * FROM rt0, vt0 WHERE ((- (((rt0.c2)OR(vt0.c2))))) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE ((NOT ((- (((rt0.c2)OR(vt0.c2))))))) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE ((((- (((rt0.c2)OR(vt0.c2))))) ISNULL));
SELECT DISTINCT * FROM rt0, vt0;
SELECT rt0.c0, rt0.c1 FROM rt0, vt0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0, vt0 WHERE ('') GROUP BY rt0.c0, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c1 FROM rt0, vt0 WHERE ((NOT (''))) GROUP BY rt0.c0, rt0.c1 UNION SELECT rt0.c0, rt0.c1 FROM rt0, vt0 WHERE ((('') ISNULL)) GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c1 FROM rt0, vt0 GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING GROUP_CONCAT(AVG(TOTAL(rt0.c2)) COLLATE NOCASE) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING (NOT (GROUP_CONCAT(AVG(TOTAL(rt0.c2)) COLLATE NOCASE))) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING ((GROUP_CONCAT(AVG(TOTAL(rt0.c2)) COLLATE NOCASE)) ISNULL);
SELECT * FROM vt0 NOT INDEXED, rt0;
SELECT * FROM vt0, rt0 WHERE (((rt0.c1)GLOB(rt0.c1)) COLLATE NOCASE) UNION ALL SELECT * FROM vt0, rt0 WHERE ((NOT (((rt0.c1)GLOB(rt0.c1)) COLLATE NOCASE))) UNION ALL SELECT * FROM vt0, rt0 WHERE (((((rt0.c1)GLOB(rt0.c1)) COLLATE NOCASE) ISNULL));
SELECT * FROM vt0 NOT INDEXED, rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((((((rt0.c0))==((rt0.c1))))AND(0x7f29ec70))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((((((rt0.c0))=((rt0.c1))))AND(0X7f29ec70))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((((((rt0.c0))=((rt0.c1))))AND(0x7f29ec70))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 WHERE (NULL) GROUP BY rt0.c0, rt0.c1 UNION SELECT rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (NULL))) GROUP BY rt0.c0, rt0.c1 UNION SELECT rt0.c0, rt0.c1 FROM rt0 WHERE (((NULL) ISNULL)) GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING AVG(((((((((rt0.c2)AND(rt0.c0)))OR(COUNT(*))))OR(COUNT(COUNT(rt0.c0)))))OR(COUNT(*)))) UNION ALL SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING (NOT (AVG(((((((((rt0.c2)AND(rt0.c0)))OR(COUNT(*))))OR(COUNT(COUNT(rt0.c0)))))OR(COUNT(*)))))) UNION ALL SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING ((AVG(((((((((rt0.c2)AND(rt0.c0)))OR(COUNT(*))))OR(COUNT(COUNT(rt0.c0)))))OR(COUNT(*))))) ISNULL);
SELECT ALL rt0.c0, vt0.c2, vt0.c0, rt0.c1, rt0.c2 FROM rt0, vt0;
SELECT ALL rt0.c0, vt0.c2, vt0.c0, rt0.c1, rt0.c2 FROM rt0, vt0 WHERE (((((((((((rt0.c2)OR(vt0.c1)))AND(vt0.c1)))OR(rt0.c0)))AND(vt0.c1))) BETWEEN (((((((((vt0.c1)OR(rt0.c2)))AND(vt0.c2)))AND(rt0.c1)))OR(rt0.c2))) AND (((0Xfffffffff4052257) NOTNULL)))) UNION ALL SELECT ALL rt0.c0, vt0.c2, vt0.c0, rt0.c1, rt0.c2 FROM rt0, vt0 WHERE ((NOT (((((((((((rt0.c2)OR(vt0.c1)))AND(vt0.c1)))OR(rt0.c0)))AND(vt0.c1))) BETWEEN (((((((((vt0.c1)OR(rt0.c2)))AND(vt0.c2)))AND(rt0.c1)))OR(rt0.c2))) AND (((0Xfffffffff4052257) NOTNULL)))))) UNION ALL SELECT ALL rt0.c0, vt0.c2, vt0.c0, rt0.c1, rt0.c2 FROM rt0, vt0 WHERE (((((((((((((rt0.c2)OR(vt0.c1)))AND(vt0.c1)))OR(rt0.c0)))AND(vt0.c1))) BETWEEN (((((((((vt0.c1)OR(rt0.c2)))AND(vt0.c2)))AND(rt0.c1)))OR(rt0.c2))) AND (((0xfffffffff4052257) NOTNULL)))) ISNULL));
SELECT ALL rt0.c0, vt0.c2, vt0.c0, rt0.c1, rt0.c2 FROM rt0, vt0;
SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0 WHERE (((((rt0.c0) NOT NULL))<>(((rt0.c2) IS FALSE)))) UNION SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (((((rt0.c0) NOT NULL))<>(((rt0.c2) IS FALSE)))))) UNION SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0 WHERE (((((((rt0.c0) NOT NULL))<>(((rt0.c2) IS FALSE)))) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0;
SELECT ALL vt0.c1, vt0.c2, rt0.c1, rt0.c0 FROM rt0, vt0 GROUP BY vt0.c1, vt0.c2, rt0.c1, rt0.c0;
SELECT vt0.c1, vt0.c2, rt0.c1, rt0.c0 FROM rt0, vt0 WHERE ((~ (rt0.c0 COLLATE BINARY))) GROUP BY vt0.c1, vt0.c2, rt0.c1, rt0.c0 UNION SELECT ALL vt0.c1, vt0.c2, rt0.c1, rt0.c0 FROM rt0, vt0 WHERE ((NOT ((~ (rt0.c0 COLLATE BINARY))))) GROUP BY vt0.c1, vt0.c2, rt0.c1, rt0.c0 UNION SELECT ALL vt0.c1, vt0.c2, rt0.c1, rt0.c0 FROM rt0, vt0 WHERE ((((~ (rt0.c0 COLLATE BINARY))) ISNULL)) GROUP BY vt0.c1, vt0.c2, rt0.c1, rt0.c0;
SELECT ALL vt0.c1, vt0.c2, rt0.c1, rt0.c0 FROM rt0, vt0 GROUP BY vt0.c1, vt0.c2, rt0.c1, rt0.c0;
SELECT vt0.c1, vt0.c0, vt0.c2 FROM vt0 GROUP BY vt0.c1, vt0.c0, vt0.c2;
SELECT ALL vt0.c1, vt0.c0, vt0.c2 FROM vt0 GROUP BY vt0.c1, vt0.c0, vt0.c2 HAVING MIN((vt0.c2 IN ())) UNION ALL SELECT vt0.c1, vt0.c0, vt0.c2 FROM vt0 GROUP BY vt0.c1, vt0.c0, vt0.c2 HAVING (NOT (MIN((vt0.c2 IN ())))) UNION ALL SELECT vt0.c1, vt0.c0, vt0.c2 FROM vt0 GROUP BY vt0.c1, vt0.c0, vt0.c2 HAVING ((MIN((vt0.c2 IN ()))) ISNULL);
SELECT vt0.c1, vt0.c0, vt0.c2 FROM vt0 GROUP BY vt0.c1, vt0.c0, vt0.c2;
SELECT ALL vt0.c1, vt0.c0, vt0.c2 FROM vt0 GROUP BY vt0.c1, vt0.c0, vt0.c2 HAVING MIN((vt0.c2 IN ())) UNION ALL SELECT vt0.c1, vt0.c0, vt0.c2 FROM vt0 GROUP BY vt0.c1, vt0.c0, vt0.c2 HAVING (NOT (MIN((vt0.c2 IN ())))) UNION ALL SELECT vt0.c1, vt0.c0, vt0.c2 FROM vt0 GROUP BY vt0.c1, vt0.c0, vt0.c2 HAVING ((MIN((vt0.c2 IN ()))) ISNULL);
SELECT vt0.c1, vt0.c0, vt0.c2 FROM vt0 GROUP BY vt0.c1, vt0.c0, vt0.c2;
SELECT rt0.c1 FROM rt0;
SELECT ALL rt0.c1 FROM rt0 WHERE (CAST('116096418' AS BLOB)) UNION ALL SELECT ALL rt0.c1 FROM rt0 WHERE ((NOT (CAST('116096418' AS BLOB)))) UNION ALL SELECT rt0.c1 FROM rt0 WHERE (((CAST('116096418' AS BLOB)) ISNULL));
SELECT rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE (CAST(((rt0.c1) NOT BETWEEN (rt0.c0) AND (0.06941648706271264)) AS REAL)) UNION SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (CAST(((rt0.c1) NOT BETWEEN (rt0.c0) AND (0.06941648706271264)) AS REAL)))) UNION SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0 NOT INDEXED WHERE (((CAST(((rt0.c1) NOT BETWEEN (rt0.c0) AND (0.06941648706271264)) AS REAL)) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0;
SELECT vt0.c0, vt0.c2, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c2, vt0.c1;
SELECT ALL vt0.c0, vt0.c2, vt0.c1 FROM vt0 WHERE ((((vt0.c2 IN (vt0.c0))) IS TRUE)) GROUP BY vt0.c0, vt0.c2, vt0.c1 UNION SELECT vt0.c0, vt0.c2, vt0.c1 FROM vt0 WHERE ((NOT ((((vt0.c2 IN (vt0.c0))) IS TRUE)))) GROUP BY vt0.c0, vt0.c2, vt0.c1 UNION SELECT ALL vt0.c0, vt0.c2, vt0.c1 FROM vt0 WHERE ((((((vt0.c2 IN (vt0.c0))) IS TRUE)) ISNULL)) GROUP BY vt0.c0, vt0.c2, vt0.c1;
SELECT vt0.c0, vt0.c2, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c2, vt0.c1;
SELECT ALL vt0.c2, rt0.c1 FROM vt0, rt0 GROUP BY vt0.c2, rt0.c1;
SELECT ALL vt0.c2, rt0.c1 FROM vt0, rt0 GROUP BY vt0.c2, rt0.c1 HAVING GROUP_CONCAT(CASE AVG(SUM(MIN(vt0.c2)))  WHEN GROUP_CONCAT(TOTAL(-724721475)) THEN MIN(vt0.c2) ELSE vt0.c0 END) UNION ALL SELECT vt0.c2, rt0.c1 FROM vt0, rt0 GROUP BY vt0.c2, rt0.c1 HAVING (NOT (GROUP_CONCAT(CASE AVG(SUM(MIN(vt0.c2)))  WHEN GROUP_CONCAT(TOTAL(-724721475)) THEN MIN(vt0.c2) ELSE vt0.c0 END))) UNION ALL SELECT ALL vt0.c2, rt0.c1 FROM vt0, rt0 GROUP BY vt0.c2, rt0.c1 HAVING ((GROUP_CONCAT(CASE AVG(SUM(MIN(vt0.c2)))  WHEN GROUP_CONCAT(TOTAL(-724721475)) THEN MIN(vt0.c2) ELSE vt0.c0 END)) ISNULL);
SELECT ALL vt0.c2, rt0.c0, rt0.c1, vt0.c1 FROM vt0, rt0;
SELECT vt0.c2, rt0.c0, rt0.c1, vt0.c1 FROM vt0, rt0 WHERE (CAST(vt0.c0 AS INTEGER) COLLATE NOCASE) UNION ALL SELECT vt0.c2, rt0.c0, rt0.c1, vt0.c1 FROM vt0, rt0 WHERE ((NOT (CAST(vt0.c0 AS INTEGER) COLLATE NOCASE))) UNION ALL SELECT vt0.c2, rt0.c0, rt0.c1, vt0.c1 FROM vt0, rt0 WHERE (((CAST(vt0.c0 AS INTEGER) COLLATE NOCASE) ISNULL));
SELECT ALL vt0.c2, rt0.c0, rt0.c1, vt0.c1 FROM vt0, rt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE ((vt0.c1 IN ()) COLLATE BINARY) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT ((vt0.c1 IN ()) COLLATE BINARY))) UNION SELECT DISTINCT * FROM vt0 WHERE ((((vt0.c1 IN ()) COLLATE BINARY) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0, vt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0, vt0 WHERE (((((vt0.c1)>=(rt0.c2)))-(vt0.c0))) GROUP BY rt0.c0, rt0.c1, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0, vt0 WHERE ((NOT (((((vt0.c1)>=(rt0.c2)))-(vt0.c0))))) GROUP BY rt0.c0, rt0.c1, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0, vt0 WHERE (((((((vt0.c1)>=(rt0.c2)))-(vt0.c0))) ISNULL)) GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0, vt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT vt0.c2, vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c2, vt0.c0, vt0.c1;
SELECT vt0.c2, vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c2, vt0.c0, vt0.c1 HAVING ((COUNT(vt0.c0)) NOT BETWEEN ((0.5791176449202553 IN (MIN(NULL)))) AND (NULL)) UNION ALL SELECT ALL vt0.c2, vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c2, vt0.c0, vt0.c1 HAVING (NOT (((COUNT(vt0.c0)) NOT BETWEEN ((0.5791176449202553 IN (MIN(NULL)))) AND (NULL)))) UNION ALL SELECT ALL vt0.c2, vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c2, vt0.c0, vt0.c1 HAVING ((((COUNT(vt0.c0)) NOT BETWEEN ((0.5791176449202553 IN (MIN(NULL)))) AND (NULL))) ISNULL);
SELECT vt0.c2, vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c2, vt0.c0, vt0.c1;
SELECT vt0.c2, vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c2, vt0.c0, vt0.c1 HAVING ((COUNT(vt0.c0)) NOT BETWEEN ((0.5791176449202553 IN (MIN(NULL)))) AND (NULL)) UNION ALL SELECT ALL vt0.c2, vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c2, vt0.c0, vt0.c1 HAVING (NOT (((COUNT(vt0.c0)) NOT BETWEEN ((0.5791176449202553 IN (MIN(NULL)))) AND (NULL)))) UNION ALL SELECT ALL vt0.c2, vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c2, vt0.c0, vt0.c1 HAVING ((((COUNT(vt0.c0)) NOT BETWEEN ((0.5791176449202553 IN (MIN(NULL)))) AND (NULL))) ISNULL);
SELECT vt0.c2, vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c2, vt0.c0, vt0.c1;
SELECT SUM((((~ (0.42223137790519083))) BETWEEN (((vt0.c0)-(vt0.c1))) AND (DATE(rt0.c1, rt0.c1, vt0.c0)))) FROM vt0, rt0 ORDER BY LOWER(CAST(vt0.c1 AS REAL));
SELECT ALL * FROM vt0;
SELECT * FROM vt0 WHERE (((vt0.c0) NOT BETWEEN (json_quote(vt0.c2)) AND (0.9530850979728386 COLLATE RTRIM))) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (((vt0.c0) NOT BETWEEN (json_quote(vt0.c2)) AND (0.9530850979728386 COLLATE RTRIM))))) UNION ALL SELECT * FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (json_quote(vt0.c2)) AND (0.9530850979728386 COLLATE RTRIM))) ISNULL));
SELECT DISTINCT vt0.c2 FROM vt0, rt0;
SELECT DISTINCT vt0.c2 FROM vt0, rt0 WHERE ((vt0.c2 IN ()) COLLATE NOCASE) UNION SELECT DISTINCT vt0.c2 FROM vt0, rt0 WHERE ((NOT ((vt0.c2 IN ()) COLLATE NOCASE))) UNION SELECT DISTINCT vt0.c2 FROM vt0, rt0 WHERE ((((vt0.c2 IN ()) COLLATE NOCASE) ISNULL));
SELECT DISTINCT vt0.c2 FROM vt0, rt0;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((((rt0.c0 IN (rt0.c2)))IS NOT(((rt0.c2)GLOB(x'dd682c32'))))) GROUP BY rt0.c2, rt0.c0, rt0.c1 UNION SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT ((((rt0.c0 IN (rt0.c2)))IS NOT(((rt0.c2)GLOB(x'dd682c32'))))))) GROUP BY rt0.c2, rt0.c0, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((((((rt0.c0 IN (rt0.c2)))IS NOT(((rt0.c2)GLOB(x'dd682c32'))))) ISNULL)) GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING SUM(((rt0.c2)LIKE(rt0.c1))) UNION ALL SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING (NOT (SUM(((rt0.c2)LIKE(rt0.c1))))) UNION ALL SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING ((SUM(((rt0.c2)LIKE(rt0.c1)))) ISNULL);
SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING SUM(((rt0.c2)LIKE(rt0.c1))) UNION ALL SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING (NOT (SUM(((rt0.c2)LIKE(rt0.c1))))) UNION ALL SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING ((SUM(((rt0.c2)LIKE(rt0.c1)))) ISNULL);
SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c0, rt0.c2 FROM rt0;
SELECT rt0.c0, rt0.c2 FROM rt0 WHERE (CAST(NULL AS TEXT)) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (CAST(NULL AS TEXT)))) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt0 WHERE (((CAST(NULL AS TEXT)) ISNULL));
SELECT ALL rt0.c0, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0 WHERE (((rt0.c1 COLLATE NOCASE) NOT BETWEEN (rt0.c1 COLLATE BINARY) AND (((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1))))) UNION SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (((rt0.c1 COLLATE NOCASE) NOT BETWEEN (rt0.c1 COLLATE BINARY) AND (((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1))))))) UNION SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0 WHERE (((((rt0.c1 COLLATE NOCASE) NOT BETWEEN (rt0.c1 COLLATE BINARY) AND (((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1))))) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0, vt0.c1, vt0.c0, vt0.c2 FROM rt0, vt0 GROUP BY rt0.c1, rt0.c2, rt0.c0, vt0.c1, vt0.c0, vt0.c2;
SELECT ALL rt0.c1, rt0.c2, rt0.c0, vt0.c1, vt0.c0, vt0.c2 FROM rt0, vt0 WHERE (0.03080035038893958) GROUP BY rt0.c1, rt0.c2, rt0.c0, vt0.c1, vt0.c0, vt0.c2 UNION SELECT rt0.c1, rt0.c2, rt0.c0, vt0.c1, vt0.c0, vt0.c2 FROM rt0, vt0 WHERE ((NOT (0.03080035038893958))) GROUP BY rt0.c1, rt0.c2, rt0.c0, vt0.c1, vt0.c0, vt0.c2 UNION SELECT rt0.c1, rt0.c2, rt0.c0, vt0.c1, vt0.c0, vt0.c2 FROM rt0, vt0 WHERE (((0.03080035038893958) ISNULL)) GROUP BY rt0.c1, rt0.c2, rt0.c0, vt0.c1, vt0.c0, vt0.c2;
SELECT ALL rt0.c1, rt0.c2, rt0.c0, vt0.c1, vt0.c0, vt0.c2 FROM rt0, vt0 GROUP BY rt0.c1, rt0.c2, rt0.c0, vt0.c1, vt0.c0, vt0.c2;
SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING MAX((COUNT(COUNT(rt0.c0)) IN ())) UNION ALL SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING (NOT (MAX((COUNT(COUNT(rt0.c0)) IN ())))) UNION ALL SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING ((MAX((COUNT(COUNT(rt0.c0)) IN ()))) ISNULL);
SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING MAX((COUNT(COUNT(rt0.c0)) IN ())) UNION ALL SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING (NOT (MAX((COUNT(COUNT(rt0.c0)) IN ())))) UNION ALL SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING ((MAX((COUNT(COUNT(rt0.c0)) IN ()))) ISNULL);
SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT ALL vt0.c1, rt0.c2 FROM rt0, vt0;
SELECT ALL vt0.c1, rt0.c2 FROM rt0, vt0 WHERE ((+ ((+ (vt0.c2))))) UNION ALL SELECT vt0.c1, rt0.c2 FROM rt0, vt0 WHERE ((NOT ((+ ((+ (vt0.c2))))))) UNION ALL SELECT ALL vt0.c1, rt0.c2 FROM rt0, vt0 WHERE ((((+ ((+ (vt0.c2))))) ISNULL));
SELECT ALL vt0.c1, rt0.c2 FROM rt0, vt0;
SELECT DISTINCT vt0.c0 FROM rt0 LEFT OUTER JOIN vt0 ON CASE WHEN vt0.c2 THEN CAST(vt0.c0 AS BLOB) END;
SELECT DISTINCT vt0.c0 FROM rt0 LEFT OUTER JOIN vt0 ON CASE WHEN vt0.c2 THEN CAST(vt0.c0 AS BLOB) END WHERE ((((rt0.c0 IN (rt0.c2))) IS TRUE)) UNION SELECT DISTINCT vt0.c0 FROM rt0 LEFT OUTER JOIN vt0 ON CASE WHEN vt0.c2 THEN CAST(vt0.c0 AS BLOB) END WHERE ((NOT ((((rt0.c0 IN (rt0.c2))) IS TRUE)))) UNION SELECT DISTINCT vt0.c0 FROM rt0 LEFT OUTER JOIN vt0 ON CASE WHEN vt0.c2 THEN CAST(vt0.c0 AS BLOB) END WHERE ((((((rt0.c0 IN (rt0.c2))) IS TRUE)) ISNULL));
SELECT DISTINCT vt0.c0 FROM rt0 LEFT OUTER JOIN vt0 ON CASE WHEN vt0.c2 THEN CAST(vt0.c0 AS BLOB) END;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 WHERE (rt0.c2) GROUP BY rt0.c1, rt0.c0 UNION SELECT rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (rt0.c2))) GROUP BY rt0.c1, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c0 FROM rt0 WHERE (((rt0.c2) ISNULL)) GROUP BY rt0.c1, rt0.c0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT rt0.c0, rt0.c1, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c0, rt0.c1, vt0.c0;
SELECT rt0.c0, rt0.c1, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c0, rt0.c1, vt0.c0 HAVING GROUP_CONCAT(COUNT(GROUP_CONCAT(vt0.c0))) UNION ALL SELECT ALL rt0.c0, rt0.c1, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c0, rt0.c1, vt0.c0 HAVING (NOT (GROUP_CONCAT(COUNT(GROUP_CONCAT(vt0.c0))))) UNION ALL SELECT rt0.c0, rt0.c1, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c0, rt0.c1, vt0.c0 HAVING ((GROUP_CONCAT(COUNT(GROUP_CONCAT(vt0.c0)))) ISNULL);
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE (((((((((x'')OR(((rt0.c1)<>(rt0.c1)))))AND((rt0.c2 IN (rt0.c0, rt0.c0)))))AND((((rt0.c1, rt0.c1, rt0.c2))>=((rt0.c2, rt0.c2, rt0.c0))))))AND(rt0.c0))) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (((((((((x'')OR(((rt0.c1)!=(rt0.c1)))))AND((rt0.c2 IN (rt0.c0, rt0.c0)))))AND((((rt0.c1, rt0.c1, rt0.c2))>=((rt0.c2, rt0.c2, rt0.c0))))))AND(rt0.c0))))) UNION ALL SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE (((((((((((x'')OR(((rt0.c1)!=(rt0.c1)))))AND((rt0.c2 IN (rt0.c0, rt0.c0)))))AND((((rt0.c1, rt0.c1, rt0.c2))>=((rt0.c2, rt0.c2, rt0.c0))))))AND(rt0.c0))) ISNULL));
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0;
SELECT DISTINCT vt0.c0, rt0.c0, rt0.c1 FROM rt0, vt0 NOT INDEXED;
SELECT DISTINCT vt0.c0, rt0.c0, rt0.c1 FROM rt0, vt0 WHERE (((CASE rt0.c2  WHEN vt0.c2 THEN rt0.c2 END) NOTNULL)) UNION SELECT DISTINCT vt0.c0, rt0.c0, rt0.c1 FROM rt0, vt0 WHERE ((NOT (((CASE rt0.c2  WHEN vt0.c2 THEN rt0.c2 END) NOTNULL)))) UNION SELECT DISTINCT vt0.c0, rt0.c0, rt0.c1 FROM rt0, vt0 WHERE (((((CASE rt0.c2  WHEN vt0.c2 THEN rt0.c2 END) NOTNULL)) ISNULL));
SELECT DISTINCT vt0.c0, rt0.c0, rt0.c1 FROM rt0, vt0 NOT INDEXED;
SELECT ALL rt0.c1, vt0.c1, rt0.c2, rt0.c0, vt0.c0, vt0.c2 FROM vt0, rt0 GROUP BY rt0.c1, vt0.c1, rt0.c2, rt0.c0, vt0.c0, vt0.c2;
SELECT ALL rt0.c1, vt0.c1, rt0.c2, rt0.c0, vt0.c0, vt0.c2 FROM vt0, rt0 WHERE ((((((((((- (0.9226020716907959)))OR(LIKELIHOOD(vt0.c1, 0.035302240322086065))))OR('-1270397496')))AND(((((rt0.c0)AND(rt0.c0)))OR(rt0.c0)))))OR(x''))) GROUP BY rt0.c1, vt0.c1, rt0.c2, rt0.c0, vt0.c0, vt0.c2 UNION SELECT rt0.c1, vt0.c1, rt0.c2, rt0.c0, vt0.c0, vt0.c2 FROM vt0, rt0 WHERE ((NOT ((((((((((- (0.9226020716907959)))OR(LIKELIHOOD(vt0.c1, 0.035302240322086065))))OR('-1270397496')))AND(((((rt0.c0)AND(rt0.c0)))OR(rt0.c0)))))OR(x''))))) GROUP BY rt0.c1, vt0.c1, rt0.c2, rt0.c0, vt0.c0, vt0.c2 UNION SELECT ALL rt0.c1, vt0.c1, rt0.c2, rt0.c0, vt0.c0, vt0.c2 FROM vt0, rt0 WHERE ((((((((((((- (0.9226020716907959)))OR(LIKELIHOOD(vt0.c1, 0.035302240322086065))))OR('-1270397496')))AND(((((rt0.c0)AND(rt0.c0)))OR(rt0.c0)))))OR(x''))) ISNULL)) GROUP BY rt0.c1, vt0.c1, rt0.c2, rt0.c0, vt0.c0, vt0.c2;
SELECT ALL rt0.c1, vt0.c1, rt0.c2, rt0.c0, vt0.c0, vt0.c2 FROM vt0, rt0 GROUP BY rt0.c1, vt0.c1, rt0.c2, rt0.c0, vt0.c0, vt0.c2;
SELECT ALL vt0.c2, rt0.c1 FROM rt0, vt0 GROUP BY vt0.c2, rt0.c1;
SELECT vt0.c2, rt0.c1 FROM rt0, vt0 GROUP BY vt0.c2, rt0.c1 HAVING MIN(MAX(AVG(TOTAL(SUM(vt0.c2))))) UNION ALL SELECT vt0.c2, rt0.c1 FROM rt0, vt0 GROUP BY vt0.c2, rt0.c1 HAVING (NOT (MIN(MAX(AVG(TOTAL(SUM(vt0.c2))))))) UNION ALL SELECT ALL vt0.c2, rt0.c1 FROM rt0, vt0 GROUP BY vt0.c2, rt0.c1 HAVING ((MIN(MAX(AVG(TOTAL(SUM(vt0.c2)))))) ISNULL);
SELECT ALL vt0.c2, vt0.c1, vt0.c0 FROM rt0, vt0;
SELECT vt0.c2, vt0.c1, vt0.c0 FROM rt0, vt0 WHERE (((HEX(DISTINCT rt0.c2))/((NOT (vt0.c0))))) UNION ALL SELECT ALL vt0.c2, vt0.c1, vt0.c0 FROM rt0, vt0 WHERE ((NOT (((HEX(DISTINCT rt0.c2))/((NOT (vt0.c0))))))) UNION ALL SELECT ALL vt0.c2, vt0.c1, vt0.c0 FROM rt0, vt0 WHERE (((((HEX(DISTINCT rt0.c2))/((NOT (vt0.c0))))) ISNULL));
SELECT ALL vt0.c2, vt0.c1, vt0.c0 FROM rt0, vt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((((((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((x'')))) IS FALSE)) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((((((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((x'')))) IS FALSE)))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((((((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((x'')))) IS FALSE)) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0 WHERE (((((vt0.c0)IS NOT(vt0.c2)))>=(0.6157263807251481 COLLATE NOCASE))) GROUP BY vt0.c1 UNION SELECT vt0.c1 FROM vt0 WHERE ((NOT (((((vt0.c0)IS NOT(vt0.c2)))>=(0.6157263807251481 COLLATE NOCASE))))) GROUP BY vt0.c1 UNION SELECT vt0.c1 FROM vt0 WHERE (((((((vt0.c0)IS NOT(vt0.c2)))>=(0.6157263807251481 COLLATE NOCASE))) ISNULL)) GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT ALL vt0.c0, rt0.c1, rt0.c2, vt0.c2 FROM rt0, vt0 GROUP BY vt0.c0, rt0.c1, rt0.c2, vt0.c2;
SELECT ALL vt0.c0, rt0.c1, rt0.c2, vt0.c2 FROM rt0, vt0 GROUP BY vt0.c0, rt0.c1, rt0.c2, vt0.c2 HAVING ((CASE WHEN MIN(GROUP_CONCAT(vt0.c0)) THEN GROUP_CONCAT(NULL) WHEN vt0.c2 THEN vt0.c1 WHEN vt0.c1 THEN MIN(GROUP_CONCAT(MAX(vt0.c2))) ELSE 0.9356317911191719 END)AND((((vt0.c0, MIN(MAX(x'')), TOTAL(NULL)))<>((rt0.c1, MAX(MAX(COUNT(AVG(TOTAL(COUNT(vt0.c1)))))), COUNT(vt0.c2)))))) UNION ALL SELECT ALL vt0.c0, rt0.c1, rt0.c2, vt0.c2 FROM rt0, vt0 GROUP BY vt0.c0, rt0.c1, rt0.c2, vt0.c2 HAVING (NOT (((CASE WHEN MIN(GROUP_CONCAT(vt0.c0)) THEN GROUP_CONCAT(NULL) WHEN vt0.c2 THEN vt0.c1 WHEN vt0.c1 THEN MIN(GROUP_CONCAT(MAX(vt0.c2))) ELSE 0.9356317911191719 END)AND((((vt0.c0, MIN(MAX(x'')), TOTAL(NULL)))<>((rt0.c1, MAX(MAX(COUNT(AVG(TOTAL(COUNT(vt0.c1)))))), COUNT(vt0.c2)))))))) UNION ALL SELECT ALL vt0.c0, rt0.c1, rt0.c2, vt0.c2 FROM rt0, vt0 GROUP BY vt0.c0, rt0.c1, rt0.c2, vt0.c2 HAVING ((((CASE WHEN MIN(GROUP_CONCAT(vt0.c0)) THEN GROUP_CONCAT(NULL) WHEN vt0.c2 THEN vt0.c1 WHEN vt0.c1 THEN MIN(GROUP_CONCAT(MAX(vt0.c2))) ELSE 0.9356317911191719 END)AND((((vt0.c0, MIN(MAX(x'')), TOTAL(NULL)))<>((rt0.c1, MAX(MAX(COUNT(AVG(TOTAL(COUNT(vt0.c1)))))), COUNT(vt0.c2))))))) ISNULL);
SELECT vt0.c0, vt0.c2, vt0.c1 FROM vt0;
SELECT ALL vt0.c0, vt0.c2, vt0.c1 FROM vt0 WHERE ((((vt0.c1)) BETWEEN ((vt0.c1)) AND (((+ (vt0.c1)))))) UNION ALL SELECT vt0.c0, vt0.c2, vt0.c1 FROM vt0 WHERE ((NOT ((((vt0.c1)) BETWEEN ((vt0.c1)) AND (((+ (vt0.c1)))))))) UNION ALL SELECT ALL vt0.c0, vt0.c2, vt0.c1 FROM vt0 WHERE ((((((vt0.c1)) BETWEEN ((vt0.c1)) AND (((+ (vt0.c1)))))) ISNULL));
SELECT vt0.c0, vt0.c2, vt0.c1 FROM vt0;
SELECT DISTINCT * FROM vt0 LEFT OUTER JOIN rt0 ON LIKELY(((((rt0.c0)OR(rt0.c2)))OR(rt0.c1)));
SELECT DISTINCT * FROM vt0 LEFT OUTER JOIN rt0 ON LIKELY(((((rt0.c0)OR(rt0.c2)))OR(rt0.c1))) WHERE ('273166445') UNION SELECT DISTINCT * FROM vt0 LEFT OUTER JOIN rt0 ON LIKELY(((((rt0.c0)OR(rt0.c2)))OR(rt0.c1))) WHERE ((NOT ('273166445'))) UNION SELECT DISTINCT * FROM vt0 LEFT OUTER JOIN rt0 ON LIKELY(((((rt0.c0)OR(rt0.c2)))OR(rt0.c1))) WHERE ((('273166445') ISNULL));
SELECT DISTINCT * FROM vt0 LEFT OUTER JOIN rt0 ON LIKELY(((((rt0.c0)OR(rt0.c2)))OR(rt0.c1)));
SELECT rt0.c2, vt0.c0, rt0.c0, vt0.c1, vt0.c2, rt0.c1 FROM rt0, vt0 GROUP BY rt0.c2, vt0.c0, rt0.c0, vt0.c1, vt0.c2, rt0.c1;
SELECT ALL rt0.c2, vt0.c0, rt0.c0, vt0.c1, vt0.c2, rt0.c1 FROM rt0, vt0 WHERE (CASE ((vt0.c1) IS TRUE)  WHEN ((rt0.c1) BETWEEN (vt0.c1) AND (rt0.c0)) THEN 0.6795320133003699 END) GROUP BY rt0.c2, vt0.c0, rt0.c0, vt0.c1, vt0.c2, rt0.c1 UNION SELECT ALL rt0.c2, vt0.c0, rt0.c0, vt0.c1, vt0.c2, rt0.c1 FROM rt0, vt0 WHERE ((NOT (CASE ((vt0.c1) IS TRUE)  WHEN ((rt0.c1) BETWEEN (vt0.c1) AND (rt0.c0)) THEN 0.6795320133003699 END))) GROUP BY rt0.c2, vt0.c0, rt0.c0, vt0.c1, vt0.c2, rt0.c1 UNION SELECT ALL rt0.c2, vt0.c0, rt0.c0, vt0.c1, vt0.c2, rt0.c1 FROM rt0, vt0 WHERE (((CASE ((vt0.c1) IS TRUE)  WHEN ((rt0.c1) BETWEEN (vt0.c1) AND (rt0.c0)) THEN 0.6795320133003699 END) ISNULL)) GROUP BY rt0.c2, vt0.c0, rt0.c0, vt0.c1, vt0.c2, rt0.c1;
SELECT rt0.c2, vt0.c0, rt0.c0, vt0.c1, vt0.c2, rt0.c1 FROM rt0, vt0 GROUP BY rt0.c2, vt0.c0, rt0.c0, vt0.c1, vt0.c2, rt0.c1;
SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING SUM(COUNT(rt0.c0)) UNION ALL SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING (NOT (SUM(COUNT(rt0.c0)))) UNION ALL SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING ((SUM(COUNT(rt0.c0))) ISNULL);
SELECT * FROM rt0, vt0;
SELECT * FROM rt0, vt0 WHERE (NULL) UNION ALL SELECT ALL * FROM rt0, vt0 WHERE ((NOT (NULL))) UNION ALL SELECT ALL * FROM rt0, vt0 WHERE (((NULL) ISNULL));
SELECT * FROM rt0, vt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((((0.40107564600597123))=(((NOT (rt0.c2)))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((((0.40107564600597123))=(((NOT (rt0.c2)))))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((((0.40107564600597123))=(((NOT (rt0.c2)))))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 WHERE (((vt0.c1 COLLATE BINARY)<=(((vt0.c2) NOTNULL)))) GROUP BY vt0.c1, vt0.c0 UNION SELECT vt0.c1, vt0.c0 FROM vt0 WHERE ((NOT (((vt0.c1 COLLATE BINARY)<=(((vt0.c2) NOTNULL)))))) GROUP BY vt0.c1, vt0.c0 UNION SELECT ALL vt0.c1, vt0.c0 FROM vt0 WHERE (((((vt0.c1 COLLATE BINARY)<=(((vt0.c2) NOTNULL)))) ISNULL)) GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c2, vt0.c1 FROM vt0 GROUP BY vt0.c2, vt0.c1;
SELECT vt0.c2, vt0.c1 FROM vt0 GROUP BY vt0.c2, vt0.c1 HAVING TOTAL(((vt0.c0)>(COUNT(vt0.c0)))) UNION ALL SELECT vt0.c2, vt0.c1 FROM vt0 GROUP BY vt0.c2, vt0.c1 HAVING (NOT (TOTAL(((vt0.c0)>(COUNT(vt0.c0)))))) UNION ALL SELECT ALL vt0.c2, vt0.c1 FROM vt0 GROUP BY vt0.c2, vt0.c1 HAVING ((TOTAL(((vt0.c0)>(COUNT(vt0.c0))))) ISNULL);
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE (((CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 END) NOT NULL)) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (((CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 END) NOT NULL)))) UNION ALL SELECT ALL * FROM rt0 WHERE (((((CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 END) NOT NULL)) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c2 FROM rt0 WHERE (0.5660902121867704) UNION SELECT DISTINCT rt0.c2 FROM rt0 WHERE ((NOT (0.5660902121867704))) UNION SELECT DISTINCT rt0.c2 FROM rt0 WHERE (((0.5660902121867704) ISNULL));
SELECT DISTINCT rt0.c2 FROM rt0;
SELECT vt0.c0, vt0.c2, rt0.c2, vt0.c1, rt0.c0 FROM rt0 LEFT OUTER JOIN vt0 ON NULL COLLATE BINARY GROUP BY vt0.c0, vt0.c2, rt0.c2, vt0.c1, rt0.c0;
SELECT vt0.c0, vt0.c2, rt0.c2, vt0.c1, rt0.c0 FROM rt0 LEFT OUTER JOIN vt0 ON NULL COLLATE BINARY WHERE ((highlight('501362062', rt0.c2, rt0.c1, vt0.c1) IN ())) GROUP BY vt0.c0, vt0.c2, rt0.c2, vt0.c1, rt0.c0 UNION SELECT vt0.c0, vt0.c2, rt0.c2, vt0.c1, rt0.c0 FROM rt0 LEFT OUTER JOIN vt0 ON NULL COLLATE BINARY WHERE ((NOT ((highlight('501362062', rt0.c2, rt0.c1, vt0.c1) IN ())))) GROUP BY vt0.c0, vt0.c2, rt0.c2, vt0.c1, rt0.c0 UNION SELECT ALL vt0.c0, vt0.c2, rt0.c2, vt0.c1, rt0.c0 FROM rt0 LEFT OUTER JOIN vt0 ON NULL COLLATE BINARY WHERE ((((highlight('501362062', rt0.c2, rt0.c1, vt0.c1) IN ())) ISNULL)) GROUP BY vt0.c0, vt0.c2, rt0.c2, vt0.c1, rt0.c0;
SELECT vt0.c0, vt0.c2, rt0.c2, vt0.c1, rt0.c0 FROM rt0 LEFT OUTER JOIN vt0 ON NULL COLLATE BINARY GROUP BY vt0.c0, vt0.c2, rt0.c2, vt0.c1, rt0.c0;
SELECT vt0.c2 FROM vt0, rt0 GROUP BY vt0.c2;
SELECT ALL vt0.c2 FROM vt0, rt0 GROUP BY vt0.c2 HAVING AVG(COUNT(rt0.c1)) UNION ALL SELECT vt0.c2 FROM vt0, rt0 GROUP BY vt0.c2 HAVING (NOT (AVG(COUNT(rt0.c1)))) UNION ALL SELECT vt0.c2 FROM vt0, rt0 GROUP BY vt0.c2 HAVING ((AVG(COUNT(rt0.c1))) ISNULL);
SELECT ALL MIN(((((((((((vt0.c0)OR(rt0.c2)))AND(vt0.c0)))OR(vt0.c1)))AND(rt0.c2)))AND(((rt0.c2) BETWEEN (rt0.c1) AND (vt0.c2))))) FROM rt0, vt0 ORDER BY (('-533091991')OR(((vt0.c2) NOTNULL))) ASC, CAST('1068599991' COLLATE BINARY AS NUMERIC) DESC;
SELECT vt0.c2, rt0.c1, vt0.c1, rt0.c0, rt0.c2, vt0.c0 FROM rt0, vt0;
SELECT ALL vt0.c2, rt0.c1, vt0.c1, rt0.c0, rt0.c2, vt0.c0 FROM rt0, vt0 WHERE ((NOT ((NOT (vt0.c2))))) UNION ALL SELECT ALL vt0.c2, rt0.c1, vt0.c1, rt0.c0, rt0.c2, vt0.c0 FROM rt0, vt0 WHERE ((NOT ((NOT ((NOT (vt0.c2))))))) UNION ALL SELECT vt0.c2, rt0.c1, vt0.c1, rt0.c0, rt0.c2, vt0.c0 FROM rt0, vt0 WHERE ((((NOT ((NOT (vt0.c2))))) ISNULL));
SELECT vt0.c2, rt0.c1, vt0.c1, rt0.c0, rt0.c2, vt0.c0 FROM rt0, vt0;
SELECT DISTINCT vt0.c0, vt0.c1, rt0.c1, rt0.c2 FROM vt0, rt0;
SELECT DISTINCT vt0.c0, vt0.c1, rt0.c1, rt0.c2 FROM vt0, rt0 WHERE (CAST(CAST(rt0.c1 AS REAL) AS NUMERIC)) UNION SELECT DISTINCT vt0.c0, vt0.c1, rt0.c1, rt0.c2 FROM vt0, rt0 WHERE ((NOT (CAST(CAST(rt0.c1 AS REAL) AS NUMERIC)))) UNION SELECT DISTINCT vt0.c0, vt0.c1, rt0.c1, rt0.c2 FROM vt0, rt0 WHERE (((CAST(CAST(rt0.c1 AS REAL) AS NUMERIC)) ISNULL));
SELECT DISTINCT vt0.c0, vt0.c1, rt0.c1, rt0.c2 FROM vt0, rt0;
SELECT rt0.c0 FROM vt0 RIGHT OUTER JOIN rt0 ON CAST(rt0.c2 COLLATE NOCASE AS BLOB) GROUP BY rt0.c0;
SELECT rt0.c0 FROM vt0 RIGHT OUTER JOIN rt0 ON CAST(rt0.c2 COLLATE NOCASE AS BLOB) WHERE ((('a>(EL' COLLATE BINARY)|(((vt0.c0)<<(vt0.c0))))) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM vt0 RIGHT OUTER JOIN rt0 ON CAST(rt0.c2 COLLATE NOCASE AS BLOB) WHERE ((NOT ((('a>(EL' COLLATE BINARY)|(((vt0.c0)<<(vt0.c0))))))) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM vt0 RIGHT OUTER JOIN rt0 ON CAST(rt0.c2 COLLATE NOCASE AS BLOB) WHERE ((((('a>(EL' COLLATE BINARY)|(((vt0.c0)<<(vt0.c0))))) ISNULL)) GROUP BY rt0.c0;
SELECT rt0.c0 FROM vt0 RIGHT OUTER JOIN rt0 ON CAST(rt0.c2 COLLATE NOCASE AS BLOB) GROUP BY rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING CASE COUNT(*)  WHEN MAX(SUM(TOTAL(rt0.c1))) THEN SUM(GROUP_CONCAT(SUM(rt0.c1))) ELSE ((((rt0.c2)AND(rt0.c0)))AND(TOTAL(GROUP_CONCAT(MIN(rt0.c0))))) END UNION ALL SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING (NOT (CASE COUNT(*)  WHEN MAX(SUM(TOTAL(rt0.c1))) THEN SUM(GROUP_CONCAT(SUM(rt0.c1))) ELSE ((((rt0.c2)AND(rt0.c0)))AND(TOTAL(GROUP_CONCAT(MIN(rt0.c0))))) END)) UNION ALL SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING ((CASE COUNT(*)  WHEN MAX(SUM(TOTAL(rt0.c1))) THEN SUM(GROUP_CONCAT(SUM(rt0.c1))) ELSE ((((rt0.c2)AND(rt0.c0)))AND(TOTAL(GROUP_CONCAT(MIN(rt0.c0))))) END) ISNULL);
SELECT MIN(((vt0.c0)IS NOT(vt0.c0)) COLLATE NOCASE) FROM vt0;
SELECT ALL vt0.c2 FROM vt0;
SELECT vt0.c2 FROM vt0 WHERE (json_patch((vt0.c1 IN ()), CASE WHEN vt0.c2 THEN vt0.c0 ELSE vt0.c1 END)) UNION ALL SELECT ALL vt0.c2 FROM vt0 WHERE ((NOT (json_patch((vt0.c1 IN ()), CASE WHEN vt0.c2 THEN vt0.c0 ELSE vt0.c1 END)))) UNION ALL SELECT ALL vt0.c2 FROM vt0 WHERE (((json_patch((vt0.c1 IN ()), CASE WHEN vt0.c2 THEN vt0.c0 ELSE vt0.c1 END)) ISNULL));
SELECT DISTINCT * FROM vt0, rt0;
SELECT DISTINCT * FROM vt0, rt0 WHERE (rt0.c1) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE ((NOT (rt0.c1))) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE (((rt0.c1) ISNULL));
SELECT DISTINCT * FROM vt0, rt0;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((((+ (rt0.c1)))IS NOT(((rt0.c2) IS FALSE)))) GROUP BY rt0.c0, rt0.c1, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT ((((+ (rt0.c1)))IS NOT(((rt0.c2) IS FALSE)))))) GROUP BY rt0.c0, rt0.c1, rt0.c2 UNION SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((((((+ (rt0.c1)))IS NOT(((rt0.c2) IS FALSE)))) ISNULL)) GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT vt0.c0, vt0.c2 FROM vt0 GROUP BY vt0.c0, vt0.c2;
SELECT ALL vt0.c0, vt0.c2 FROM vt0 GROUP BY vt0.c0, vt0.c2 HAVING ((((((((LOWER(DISTINCT vt0.c1))OR(MAX(vt0.c2))))OR(SUM(TOTAL(vt0.c1)))))OR(GROUP_CONCAT(TOTAL(NULL)))))OR(SUM(vt0.c0))) UNION ALL SELECT vt0.c0, vt0.c2 FROM vt0 GROUP BY vt0.c0, vt0.c2 HAVING (NOT (((((((((LOWER(DISTINCT vt0.c1))OR(MAX(vt0.c2))))OR(SUM(TOTAL(vt0.c1)))))OR(GROUP_CONCAT(TOTAL(NULL)))))OR(SUM(vt0.c0))))) UNION ALL SELECT vt0.c0, vt0.c2 FROM vt0 GROUP BY vt0.c0, vt0.c2 HAVING ((((((((((LOWER(DISTINCT vt0.c1))OR(MAX(vt0.c2))))OR(SUM(TOTAL(vt0.c1)))))OR(GROUP_CONCAT(TOTAL(NULL)))))OR(SUM(vt0.c0)))) ISNULL);
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE (UNLIKELY(DISTINCT ((rt0.c2)<=(x'')))) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (UNLIKELY(DISTINCT ((rt0.c2)<=(x'')))))) UNION ALL SELECT * FROM rt0 WHERE (((UNLIKELY(DISTINCT ((rt0.c2)<=(x'')))) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT vt0.c2 FROM vt0;
SELECT DISTINCT vt0.c2 FROM vt0 WHERE (((ABS(DISTINCT vt0.c2)) ISNULL)) UNION SELECT DISTINCT vt0.c2 FROM vt0 WHERE ((NOT (((ABS(DISTINCT vt0.c2)) ISNULL)))) UNION SELECT DISTINCT vt0.c2 FROM vt0 WHERE (((((ABS(DISTINCT vt0.c2)) ISNULL)) ISNULL));
SELECT DISTINCT vt0.c2 FROM vt0;
SELECT ALL vt0.c2, rt0.c1, rt0.c2, vt0.c0, rt0.c0, vt0.c1 FROM rt0, vt0 GROUP BY vt0.c2, rt0.c1, rt0.c2, vt0.c0, rt0.c0, vt0.c1;
SELECT vt0.c2, rt0.c1, rt0.c2, vt0.c0, rt0.c0, vt0.c1 FROM rt0, vt0 WHERE ('-200990121') GROUP BY vt0.c2, rt0.c1, rt0.c2, vt0.c0, rt0.c0, vt0.c1 UNION SELECT vt0.c2, rt0.c1, rt0.c2, vt0.c0, rt0.c0, vt0.c1 FROM rt0, vt0 WHERE ((NOT ('-200990121'))) GROUP BY vt0.c2, rt0.c1, rt0.c2, vt0.c0, rt0.c0, vt0.c1 UNION SELECT vt0.c2, rt0.c1, rt0.c2, vt0.c0, rt0.c0, vt0.c1 FROM rt0, vt0 WHERE ((('-200990121') ISNULL)) GROUP BY vt0.c2, rt0.c1, rt0.c2, vt0.c0, rt0.c0, vt0.c1;
SELECT ALL vt0.c2, rt0.c1, rt0.c2, vt0.c0, rt0.c0, vt0.c1 FROM rt0, vt0 GROUP BY vt0.c2, rt0.c1, rt0.c2, vt0.c0, rt0.c0, vt0.c1;
SELECT ALL vt0.c1, rt0.c1, rt0.c2, vt0.c0 FROM vt0 LEFT OUTER JOIN rt0 ON rt0.c0 GROUP BY vt0.c1, rt0.c1, rt0.c2, vt0.c0;
SELECT ALL vt0.c1, rt0.c1, rt0.c2, vt0.c0 FROM vt0 LEFT OUTER JOIN rt0 ON rt0.c0 GROUP BY vt0.c1, rt0.c1, rt0.c2, vt0.c0 HAVING GROUP_CONCAT(((((TOTAL(COUNT(AVG(vt0.c1))))OR(vt0.c0)))AND(COUNT(*)))) UNION ALL SELECT ALL vt0.c1, rt0.c1, rt0.c2, vt0.c0 FROM vt0 LEFT OUTER JOIN rt0 ON rt0.c0 GROUP BY vt0.c1, rt0.c1, rt0.c2, vt0.c0 HAVING (NOT (GROUP_CONCAT(((((TOTAL(COUNT(AVG(vt0.c1))))OR(vt0.c0)))AND(COUNT(*)))))) UNION ALL SELECT ALL vt0.c1, rt0.c1, rt0.c2, vt0.c0 FROM vt0 LEFT OUTER JOIN rt0 ON rt0.c0 GROUP BY vt0.c1, rt0.c1, rt0.c2, vt0.c0 HAVING ((GROUP_CONCAT(((((TOTAL(COUNT(AVG(vt0.c1))))OR(vt0.c0)))AND(COUNT(*))))) ISNULL);
SELECT vt0.c2, vt0.c1 FROM vt0, rt0;
SELECT vt0.c2, vt0.c1 FROM vt0, rt0 WHERE (((((((vt0.c1) ISNULL))OR(vt0.c0)))OR(x'319184b1'))) UNION ALL SELECT vt0.c2, vt0.c1 FROM vt0, rt0 WHERE ((NOT (((((((vt0.c1) ISNULL))OR(vt0.c0)))OR(x'319184b1'))))) UNION ALL SELECT vt0.c2, vt0.c1 FROM vt0, rt0 WHERE (((((((((vt0.c1) ISNULL))OR(vt0.c0)))OR(x'319184b1'))) ISNULL));
SELECT vt0.c2, vt0.c1 FROM vt0, rt0;
SELECT DISTINCT rt0.c0 FROM rt0, vt0;
SELECT DISTINCT rt0.c0 FROM rt0, vt0 WHERE (((LIKELY(rt0.c2))AND(''))) UNION SELECT DISTINCT rt0.c0 FROM rt0, vt0 WHERE ((NOT (((LIKELY(rt0.c2))AND(''))))) UNION SELECT DISTINCT rt0.c0 FROM rt0, vt0 WHERE (((((LIKELY(rt0.c2))AND(''))) ISNULL));
SELECT DISTINCT rt0.c0 FROM rt0, vt0;
SELECT ALL rt0.c0, vt0.c2, rt0.c1, vt0.c1, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c0, vt0.c2, rt0.c1, vt0.c1, vt0.c0;
SELECT rt0.c0, vt0.c2, rt0.c1, vt0.c1, vt0.c0 FROM vt0, rt0 WHERE (x'') GROUP BY rt0.c0, vt0.c2, rt0.c1, vt0.c1, vt0.c0 UNION SELECT rt0.c0, vt0.c2, rt0.c1, vt0.c1, vt0.c0 FROM vt0, rt0 WHERE ((NOT (x''))) GROUP BY rt0.c0, vt0.c2, rt0.c1, vt0.c1, vt0.c0 UNION SELECT rt0.c0, vt0.c2, rt0.c1, vt0.c1, vt0.c0 FROM vt0, rt0 WHERE (((x'') ISNULL)) GROUP BY rt0.c0, vt0.c2, rt0.c1, vt0.c1, vt0.c0;
SELECT ALL rt0.c0, vt0.c2, rt0.c1, vt0.c1, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c0, vt0.c2, rt0.c1, vt0.c1, vt0.c0;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING ((CASE WHEN TOTAL(rt0.c1) THEN rt0.c1 ELSE rt0.c0 END) BETWEEN (x'') AND (((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c2)))) UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT (((CASE WHEN TOTAL(rt0.c1) THEN rt0.c1 ELSE rt0.c0 END) BETWEEN (x'') AND (((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c2)))))) UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING ((((CASE WHEN TOTAL(rt0.c1) THEN rt0.c1 ELSE rt0.c0 END) BETWEEN (x'') AND (((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c2))))) ISNULL);
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING ((CASE WHEN TOTAL(rt0.c1) THEN rt0.c1 ELSE rt0.c0 END) BETWEEN (x'') AND (((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c2)))) UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT (((CASE WHEN TOTAL(rt0.c1) THEN rt0.c1 ELSE rt0.c0 END) BETWEEN (x'') AND (((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c2)))))) UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING ((((CASE WHEN TOTAL(rt0.c1) THEN rt0.c1 ELSE rt0.c0 END) BETWEEN (x'') AND (((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c2))))) ISNULL);
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c0, vt0.c0 FROM rt0, vt0;
SELECT ALL rt0.c0, vt0.c0 FROM rt0, vt0 WHERE (CAST(CAST(vt0.c2 AS TEXT) AS NUMERIC)) UNION ALL SELECT ALL rt0.c0, vt0.c0 FROM rt0, vt0 WHERE ((NOT (CAST(CAST(vt0.c2 AS TEXT) AS NUMERIC)))) UNION ALL SELECT rt0.c0, vt0.c0 FROM rt0, vt0 WHERE (((CAST(CAST(vt0.c2 AS TEXT) AS NUMERIC)) ISNULL));
SELECT ALL rt0.c0, vt0.c0 FROM rt0, vt0;
SELECT DISTINCT * FROM vt0, rt0;
SELECT DISTINCT * FROM vt0, rt0 WHERE (((((('', vt0.c0, rt0.c2))==((rt0.c0, vt0.c0, vt0.c2)))) NOT BETWEEN (((rt0.c1)<=(vt0.c2))) AND (NULL COLLATE BINARY))) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE ((NOT (((((('', vt0.c0, rt0.c2))==((rt0.c0, vt0.c0, vt0.c2)))) NOT BETWEEN (((rt0.c1)<=(vt0.c2))) AND (NULL COLLATE BINARY))))) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE (((((((('', vt0.c0, rt0.c2))=((rt0.c0, vt0.c0, vt0.c2)))) NOT BETWEEN (((rt0.c1)<=(vt0.c2))) AND (NULL COLLATE BINARY))) ISNULL));
SELECT DISTINCT * FROM vt0, rt0;
SELECT rt0.c1, rt0.c0, vt0.c2, vt0.c1 FROM vt0 INNER JOIN rt0 ON ((((((vt0.c2, vt0.c1, rt0.c1)) NOT BETWEEN ((vt0.c1, vt0.c1, vt0.c2)) AND ((rt0.c0, vt0.c0, 0.36682345493079505))), ((rt0.c2)GLOB(vt0.c0)), CASE rt0.c2  WHEN vt0.c1 THEN rt0.c0 ELSE rt0.c1 END))==((rt0.c2, (+ (rt0.c0)), ((rt0.c0)%(vt0.c0))))) GROUP BY rt0.c1, rt0.c0, vt0.c2, vt0.c1;
SELECT rt0.c1, rt0.c0, vt0.c2, vt0.c1 FROM vt0 INNER JOIN rt0 ON ((((((vt0.c2, vt0.c1, rt0.c1)) NOT BETWEEN ((vt0.c1, vt0.c1, vt0.c2)) AND ((rt0.c0, vt0.c0, 0.36682345493079505))), ((rt0.c2)GLOB(vt0.c0)), CASE rt0.c2  WHEN vt0.c1 THEN rt0.c0 ELSE rt0.c1 END))==((rt0.c2, (+ (rt0.c0)), ((rt0.c0)%(vt0.c0))))) WHERE (ABS(vt0.c0 COLLATE BINARY)) GROUP BY rt0.c1, rt0.c0, vt0.c2, vt0.c1 UNION SELECT rt0.c1, rt0.c0, vt0.c2, vt0.c1 FROM vt0 INNER JOIN rt0 ON ((((((vt0.c2, vt0.c1, rt0.c1)) NOT BETWEEN ((vt0.c1, vt0.c1, vt0.c2)) AND ((rt0.c0, vt0.c0, 0.36682345493079505))), ((rt0.c2)GLOB(vt0.c0)), CASE rt0.c2  WHEN vt0.c1 THEN rt0.c0 ELSE rt0.c1 END))=((rt0.c2, (+ (rt0.c0)), ((rt0.c0)%(vt0.c0))))) WHERE ((NOT (ABS(vt0.c0 COLLATE BINARY)))) GROUP BY rt0.c1, rt0.c0, vt0.c2, vt0.c1 UNION SELECT rt0.c1, rt0.c0, vt0.c2, vt0.c1 FROM vt0 INNER JOIN rt0 ON ((((((vt0.c2, vt0.c1, rt0.c1)) NOT BETWEEN ((vt0.c1, vt0.c1, vt0.c2)) AND ((rt0.c0, vt0.c0, 0.36682345493079505))), ((rt0.c2)GLOB(vt0.c0)), CASE rt0.c2  WHEN vt0.c1 THEN rt0.c0 ELSE rt0.c1 END))==((rt0.c2, (+ (rt0.c0)), ((rt0.c0)%(vt0.c0))))) WHERE (((ABS(vt0.c0 COLLATE BINARY)) ISNULL)) GROUP BY rt0.c1, rt0.c0, vt0.c2, vt0.c1;
SELECT rt0.c1, rt0.c0, vt0.c2, vt0.c1 FROM vt0 INNER JOIN rt0 ON ((((((vt0.c2, vt0.c1, rt0.c1)) NOT BETWEEN ((vt0.c1, vt0.c1, vt0.c2)) AND ((rt0.c0, vt0.c0, 0.36682345493079505))), ((rt0.c2)GLOB(vt0.c0)), CASE rt0.c2  WHEN vt0.c1 THEN rt0.c0 ELSE rt0.c1 END))==((rt0.c2, (+ (rt0.c0)), ((rt0.c0)%(vt0.c0))))) GROUP BY rt0.c1, rt0.c0, vt0.c2, vt0.c1;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0, vt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0, vt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING COUNT(COUNT(rt0.c1) COLLATE NOCASE) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0, vt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING (NOT (COUNT(COUNT(rt0.c1) COLLATE NOCASE))) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0, vt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING ((COUNT(COUNT(rt0.c1) COLLATE NOCASE)) ISNULL);
SELECT ALL * FROM rt0, vt0;
SELECT ALL * FROM rt0, vt0 WHERE (vt0.c0) UNION ALL SELECT * FROM rt0, vt0 WHERE ((NOT (vt0.c0))) UNION ALL SELECT ALL * FROM rt0, vt0 WHERE (((vt0.c0) ISNULL));
SELECT ALL * FROM rt0, vt0;
SELECT DISTINCT vt0.c1, vt0.c2, rt0.c2, rt0.c0, vt0.c0, rt0.c1 FROM rt0 RIGHT OUTER JOIN vt0 ON json_extract((((vt0.c2, vt0.c1, rt0.c1))>((vt0.c1, x'99e8', vt0.c1))), (((rt0.c0))==((rt0.c0))));
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 WHERE (LENGTH(((((x'')AND(rt0.c2)))AND(rt0.c2)))) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM rt0 WHERE ((NOT (LENGTH(((((x'')AND(rt0.c2)))AND(rt0.c2)))))) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM rt0 WHERE (((LENGTH(((((x'')AND(rt0.c2)))AND(rt0.c2)))) ISNULL)) GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING SUM(SUM(COUNT(vt0.c1))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (SUM(SUM(COUNT(vt0.c1))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((SUM(SUM(COUNT(vt0.c1)))) ISNULL);
SELECT rt0.c2 FROM rt0;
SELECT rt0.c2 FROM rt0 WHERE (CAST((rt0.c1 IN ()) AS INTEGER)) UNION ALL SELECT rt0.c2 FROM rt0 WHERE ((NOT (CAST((rt0.c1 IN ()) AS INTEGER)))) UNION ALL SELECT ALL rt0.c2 FROM rt0 WHERE (((CAST((rt0.c1 IN ()) AS INTEGER)) ISNULL));
SELECT rt0.c2 FROM rt0;
SELECT DISTINCT vt0.c1, rt0.c0, rt0.c2, vt0.c0, rt0.c1 FROM rt0, vt0;
SELECT DISTINCT vt0.c1, rt0.c0, rt0.c2, vt0.c0, rt0.c1 FROM rt0, vt0 WHERE (TRIM(((vt0.c0) ISNULL), CASE x''  WHEN vt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN x'' ELSE vt0.c2 END)) UNION SELECT DISTINCT vt0.c1, rt0.c0, rt0.c2, vt0.c0, rt0.c1 FROM rt0, vt0 WHERE ((NOT (TRIM(((vt0.c0) ISNULL), CASE x''  WHEN vt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN x'' ELSE vt0.c2 END)))) UNION SELECT DISTINCT vt0.c1, rt0.c0, rt0.c2, vt0.c0, rt0.c1 FROM rt0, vt0 WHERE (((TRIM(((vt0.c0) ISNULL), CASE x''  WHEN vt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN x'' ELSE vt0.c2 END)) ISNULL));
SELECT DISTINCT vt0.c1, rt0.c0, rt0.c2, vt0.c0, rt0.c1 FROM rt0, vt0;
SELECT rt0.c1, vt0.c2, rt0.c2 FROM rt0, vt0 GROUP BY rt0.c1, vt0.c2, rt0.c2;
SELECT rt0.c1, vt0.c2, rt0.c2 FROM rt0, vt0 WHERE (((((rt0.c0)%(vt0.c1)))<<(rt0.c2 COLLATE BINARY))) GROUP BY rt0.c1, vt0.c2, rt0.c2 UNION SELECT rt0.c1, vt0.c2, rt0.c2 FROM rt0, vt0 WHERE ((NOT (((((rt0.c0)%(vt0.c1)))<<(rt0.c2 COLLATE BINARY))))) GROUP BY rt0.c1, vt0.c2, rt0.c2 UNION SELECT ALL rt0.c1, vt0.c2, rt0.c2 FROM rt0, vt0 WHERE (((((((rt0.c0)%(vt0.c1)))<<(rt0.c2 COLLATE BINARY))) ISNULL)) GROUP BY rt0.c1, vt0.c2, rt0.c2;
SELECT rt0.c1, vt0.c2, rt0.c2 FROM rt0, vt0 GROUP BY rt0.c1, vt0.c2, rt0.c2;
SELECT ALL rt0.c1 FROM rt0, vt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0, vt0 GROUP BY rt0.c1 HAVING ((((vt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0)))-(MAX(vt0.c1))) UNION ALL SELECT ALL rt0.c1 FROM rt0, vt0 GROUP BY rt0.c1 HAVING (NOT (((((vt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0)))-(MAX(vt0.c1))))) UNION ALL SELECT rt0.c1 FROM rt0, vt0 GROUP BY rt0.c1 HAVING ((((((vt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0)))-(MAX(vt0.c1)))) ISNULL);
SELECT ALL rt0.c1 FROM rt0, vt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0, vt0 GROUP BY rt0.c1 HAVING ((((vt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0)))-(MAX(vt0.c1))) UNION ALL SELECT ALL rt0.c1 FROM rt0, vt0 GROUP BY rt0.c1 HAVING (NOT (((((vt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0)))-(MAX(vt0.c1))))) UNION ALL SELECT rt0.c1 FROM rt0, vt0 GROUP BY rt0.c1 HAVING ((((((vt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0)))-(MAX(vt0.c1)))) ISNULL);
SELECT ALL rt0.c1 FROM rt0, vt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 RIGHT OUTER JOIN vt0 ON (CAST(vt0.c1 AS TEXT) IN ());
SELECT ALL rt0.c1 FROM rt0 RIGHT OUTER JOIN vt0 ON (CAST(vt0.c1 AS TEXT) IN ()) WHERE ((((((((vt0.c0)OR(vt0.c1)))AND(x''))))>=((((vt0.c2) NOTNULL))))) UNION ALL SELECT rt0.c1 FROM rt0 RIGHT OUTER JOIN vt0 ON (CAST(vt0.c1 AS TEXT) IN ()) WHERE ((NOT ((((((((vt0.c0)OR(vt0.c1)))AND(x''))))>=((((vt0.c2) NOTNULL))))))) UNION ALL SELECT rt0.c1 FROM rt0 RIGHT OUTER JOIN vt0 ON (CAST(vt0.c1 AS TEXT) IN ()) WHERE ((((((((((vt0.c0)OR(vt0.c1)))AND(x''))))>=((((vt0.c2) NOTNULL))))) ISNULL));
SELECT rt0.c1 FROM rt0 RIGHT OUTER JOIN vt0 ON (CAST(vt0.c1 AS TEXT) IN ());
SELECT DISTINCT rt0.c2, vt0.c1, vt0.c2, rt0.c1, vt0.c0, rt0.c0 FROM vt0 FULL OUTER JOIN rt0 ON (((rt0.c1)) BETWEEN ((((rt0.c2)<(rt0.c2)))) AND ((((rt0.c0)<=(vt0.c0)))));
SELECT DISTINCT rt0.c2, vt0.c1, vt0.c2, rt0.c1, vt0.c0, rt0.c0 FROM vt0 FULL OUTER JOIN rt0 ON (((rt0.c1)) BETWEEN ((((rt0.c2)<(rt0.c2)))) AND ((((rt0.c0)<=(vt0.c0))))) WHERE (CAST('n䧻^s' AS REAL)) UNION SELECT DISTINCT rt0.c2, vt0.c1, vt0.c2, rt0.c1, vt0.c0, rt0.c0 FROM vt0 FULL OUTER JOIN rt0 ON (((rt0.c1)) BETWEEN ((((rt0.c2)<(rt0.c2)))) AND ((((rt0.c0)<=(vt0.c0))))) WHERE ((NOT (CAST('n䧻^s' AS REAL)))) UNION SELECT DISTINCT rt0.c2, vt0.c1, vt0.c2, rt0.c1, vt0.c0, rt0.c0 FROM vt0 FULL OUTER JOIN rt0 ON (((rt0.c1)) BETWEEN ((((rt0.c2)<(rt0.c2)))) AND ((((rt0.c0)<=(vt0.c0))))) WHERE (((CAST('n䧻^s' AS REAL)) ISNULL));
SELECT DISTINCT rt0.c2, vt0.c1, vt0.c2, rt0.c1, vt0.c0, rt0.c0 FROM vt0 FULL OUTER JOIN rt0 ON (((rt0.c1)) BETWEEN ((((rt0.c2)<(rt0.c2)))) AND ((((rt0.c0)<=(vt0.c0)))));
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 WHERE (CAST((rt0.c0 IN ()) AS TEXT)) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM rt0 WHERE ((NOT (CAST((rt0.c0 IN ()) AS TEXT)))) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM rt0 WHERE (((CAST((rt0.c0 IN ()) AS TEXT)) ISNULL)) GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c2, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c2, vt0.c0;
SELECT ALL rt0.c2, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c2, vt0.c0 HAVING (((((COUNT(GROUP_CONCAT(rt0.c1))) BETWEEN (vt0.c1) AND (rt0.c1))))<((((GROUP_CONCAT(vt0.c2))<(x'765e'))))) UNION ALL SELECT rt0.c2, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c2, vt0.c0 HAVING (NOT ((((((COUNT(GROUP_CONCAT(rt0.c1))) BETWEEN (vt0.c1) AND (rt0.c1))))<((((GROUP_CONCAT(vt0.c2))<(x'765e'))))))) UNION ALL SELECT ALL rt0.c2, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c2, vt0.c0 HAVING (((((((COUNT(GROUP_CONCAT(rt0.c1))) BETWEEN (vt0.c1) AND (rt0.c1))))<((((GROUP_CONCAT(vt0.c2))<(x'765e')))))) ISNULL);
SELECT * FROM vt0;
SELECT ALL * FROM vt0 WHERE (vt0.c2) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (vt0.c2))) UNION ALL SELECT * FROM vt0 WHERE (((vt0.c2) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((rt0.c1 COLLATE NOCASE)*((~ (rt0.c1))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((rt0.c1 COLLATE NOCASE)*((~ (rt0.c1))))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((rt0.c1 COLLATE NOCASE)*((~ (rt0.c1))))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c2, rt0.c1, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c2, rt0.c1, vt0.c0;
SELECT rt0.c2, rt0.c1, vt0.c0 FROM vt0, rt0 WHERE (((((((rt0.c2)OR(rt0.c2)))OR(vt0.c2)))IS NOT(((vt0.c1) ISNULL)))) GROUP BY rt0.c2, rt0.c1, vt0.c0 UNION SELECT rt0.c2, rt0.c1, vt0.c0 FROM vt0, rt0 WHERE ((NOT (((((((rt0.c2)OR(rt0.c2)))OR(vt0.c2)))IS NOT(((vt0.c1) ISNULL)))))) GROUP BY rt0.c2, rt0.c1, vt0.c0 UNION SELECT rt0.c2, rt0.c1, vt0.c0 FROM vt0, rt0 WHERE (((((((((rt0.c2)OR(rt0.c2)))OR(vt0.c2)))IS NOT(((vt0.c1) ISNULL)))) ISNULL)) GROUP BY rt0.c2, rt0.c1, vt0.c0;
SELECT ALL rt0.c2, rt0.c1, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c2, rt0.c1, vt0.c0;
SELECT ALL rt0.c2, vt0.c1, rt0.c1 FROM vt0, rt0 GROUP BY rt0.c2, vt0.c1, rt0.c1;
SELECT ALL rt0.c2, vt0.c1, rt0.c1 FROM vt0, rt0 GROUP BY rt0.c2, vt0.c1, rt0.c1 HAVING CAST(GROUP_CONCAT(COUNT(*)) AS NUMERIC) UNION ALL SELECT ALL rt0.c2, vt0.c1, rt0.c1 FROM vt0, rt0 GROUP BY rt0.c2, vt0.c1, rt0.c1 HAVING (NOT (CAST(GROUP_CONCAT(COUNT(*)) AS NUMERIC))) UNION ALL SELECT ALL rt0.c2, vt0.c1, rt0.c1 FROM vt0, rt0 GROUP BY rt0.c2, vt0.c1, rt0.c1 HAVING ((CAST(GROUP_CONCAT(COUNT(*)) AS NUMERIC)) ISNULL);
SELECT vt0.c0 FROM rt0, vt0;
SELECT vt0.c0 FROM rt0, vt0 WHERE ((- (vt0.c1)) COLLATE BINARY) UNION ALL SELECT ALL vt0.c0 FROM rt0, vt0 WHERE ((NOT ((- (vt0.c1)) COLLATE BINARY))) UNION ALL SELECT vt0.c0 FROM rt0, vt0 WHERE ((((- (vt0.c1)) COLLATE BINARY) ISNULL));
SELECT vt0.c0 FROM rt0, vt0;
SELECT DISTINCT rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c0 FROM rt0 WHERE ((((((rt0.c2)<<(rt0.c1)), ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)), (- (rt0.c1))))>=((rt0.c2, CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c0 END, ((rt0.c0)-(rt0.c2)))))) UNION SELECT DISTINCT rt0.c0 FROM rt0 WHERE ((NOT ((((((rt0.c2)<<(rt0.c1)), ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)), (- (rt0.c1))))>=((rt0.c2, CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c0 END, ((rt0.c0)-(rt0.c2)))))))) UNION SELECT DISTINCT rt0.c0 FROM rt0 WHERE ((((((((rt0.c2)<<(rt0.c1)), ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)), (- (rt0.c1))))>=((rt0.c2, CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c0 END, ((rt0.c0)-(rt0.c2)))))) ISNULL));
SELECT DISTINCT rt0.c0 FROM rt0;
SELECT rt0.c0, vt0.c1, rt0.c1, vt0.c2 FROM rt0, vt0 GROUP BY rt0.c0, vt0.c1, rt0.c1, vt0.c2;
SELECT rt0.c0, vt0.c1, rt0.c1, vt0.c2 FROM rt0, vt0 WHERE (((((rt0.c0) NOT BETWEEN (vt0.c2) AND (vt0.c1)))OR(0.7256296752797122))) GROUP BY rt0.c0, vt0.c1, rt0.c1, vt0.c2 UNION SELECT ALL rt0.c0, vt0.c1, rt0.c1, vt0.c2 FROM rt0, vt0 WHERE ((NOT (((((rt0.c0) NOT BETWEEN (vt0.c2) AND (vt0.c1)))OR(0.7256296752797122))))) GROUP BY rt0.c0, vt0.c1, rt0.c1, vt0.c2 UNION SELECT rt0.c0, vt0.c1, rt0.c1, vt0.c2 FROM rt0, vt0 WHERE (((((((rt0.c0) NOT BETWEEN (vt0.c2) AND (vt0.c1)))OR(0.7256296752797122))) ISNULL)) GROUP BY rt0.c0, vt0.c1, rt0.c1, vt0.c2;
SELECT rt0.c0, vt0.c1, rt0.c1, vt0.c2 FROM rt0, vt0 GROUP BY rt0.c0, vt0.c1, rt0.c1, vt0.c2;
SELECT vt0.c2, rt0.c0, vt0.c1 FROM vt0 NATURAL JOIN rt0 GROUP BY vt0.c2, rt0.c0, vt0.c1;
SELECT ALL vt0.c2, rt0.c0, vt0.c1 FROM vt0 NATURAL JOIN rt0 GROUP BY vt0.c2, rt0.c0, vt0.c1 HAVING MIN(SUM(vt0.c1) COLLATE NOCASE) UNION ALL SELECT vt0.c2, rt0.c0, vt0.c1 FROM vt0 NATURAL JOIN rt0 GROUP BY vt0.c2, rt0.c0, vt0.c1 HAVING (NOT (MIN(SUM(vt0.c1) COLLATE NOCASE))) UNION ALL SELECT ALL vt0.c2, rt0.c0, vt0.c1 FROM vt0 NATURAL JOIN rt0 GROUP BY vt0.c2, rt0.c0, vt0.c1 HAVING ((MIN(SUM(vt0.c1) COLLATE NOCASE)) ISNULL);
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE (CAST(((rt0.c1) NOT NULL) AS REAL)) UNION ALL SELECT * FROM rt0 WHERE ((NOT (CAST(((rt0.c1) NOT NULL) AS REAL)))) UNION ALL SELECT ALL * FROM rt0 WHERE (((CAST(((rt0.c1) NOT NULL) AS REAL)) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((((rt0.c1 IN ('vP^*k')))+(((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c0))))) UNION SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT ((((rt0.c1 IN ('vP^*k')))+(((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c0))))))) UNION SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((((((rt0.c1 IN ('vP^*k')))+(((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c0))))) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0 FROM rt0;
SELECT vt0.c0, vt0.c2 FROM vt0, rt0 GROUP BY vt0.c0, vt0.c2;
SELECT vt0.c0, vt0.c2 FROM vt0, rt0 WHERE (((((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c1))) NOT BETWEEN (((rt0.c2)<<(rt0.c2))) AND ((vt0.c0 IN ())))) GROUP BY vt0.c0, vt0.c2 UNION SELECT ALL vt0.c0, vt0.c2 FROM vt0, rt0 WHERE ((NOT (((((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c1))) NOT BETWEEN (((rt0.c2)<<(rt0.c2))) AND ((vt0.c0 IN ())))))) GROUP BY vt0.c0, vt0.c2 UNION SELECT vt0.c0, vt0.c2 FROM vt0, rt0 WHERE (((((((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c1))) NOT BETWEEN (((rt0.c2)<<(rt0.c2))) AND ((vt0.c0 IN ())))) ISNULL)) GROUP BY vt0.c0, vt0.c2;
SELECT vt0.c0, vt0.c2 FROM vt0, rt0 GROUP BY vt0.c0, vt0.c2;
SELECT vt0.c2, vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c2, vt0.c1, vt0.c0;
SELECT ALL vt0.c2, vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c2, vt0.c1, vt0.c0 HAVING COUNT(COUNT(MIN(MAX(COUNT(TOTAL(AVG(GROUP_CONCAT(COUNT('1584451039'))))))))) UNION ALL SELECT ALL vt0.c2, vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c2, vt0.c1, vt0.c0 HAVING (NOT (COUNT(COUNT(MIN(MAX(COUNT(TOTAL(AVG(GROUP_CONCAT(COUNT('1584451039'))))))))))) UNION ALL SELECT vt0.c2, vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c2, vt0.c1, vt0.c0 HAVING ((COUNT(COUNT(MIN(MAX(COUNT(TOTAL(AVG(GROUP_CONCAT(COUNT('1584451039')))))))))) ISNULL);
SELECT ALL * FROM rt0, vt0;
SELECT * FROM rt0, vt0 WHERE (vt0.c1) UNION ALL SELECT * FROM rt0, vt0 WHERE ((NOT (vt0.c1))) UNION ALL SELECT ALL * FROM rt0, vt0 WHERE (((vt0.c1) ISNULL));
SELECT ALL * FROM rt0, vt0;
SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0;
SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0 WHERE (CASE WHEN (vt0.c2 IN ()) THEN ((vt0.c2)<<(vt0.c2)) WHEN (((vt0.c1)) BETWEEN ((vt0.c2)) AND ((vt0.c2))) THEN 0.8001920709590946 WHEN (((vt0.c1)) BETWEEN ((vt0.c2)) AND ((vt0.c1))) THEN (NOT (vt0.c2)) END) UNION SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0 WHERE ((NOT (CASE WHEN (vt0.c2 IN ()) THEN ((vt0.c2)<<(vt0.c2)) WHEN (((vt0.c1)) BETWEEN ((vt0.c2)) AND ((vt0.c2))) THEN 0.8001920709590946 WHEN (((vt0.c1)) BETWEEN ((vt0.c2)) AND ((vt0.c1))) THEN (NOT (vt0.c2)) END))) UNION SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0 WHERE (((CASE WHEN (vt0.c2 IN ()) THEN ((vt0.c2)<<(vt0.c2)) WHEN (((vt0.c1)) BETWEEN ((vt0.c2)) AND ((vt0.c2))) THEN 0.8001920709590946 WHEN (((vt0.c1)) BETWEEN ((vt0.c2)) AND ((vt0.c1))) THEN (NOT (vt0.c2)) END) ISNULL));
SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0;
SELECT ALL rt0.c0, rt0.c1, rt0.c2, vt0.c0, vt0.c1 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2, vt0.c0, vt0.c1;
SELECT ALL rt0.c0, rt0.c1, rt0.c2, vt0.c0, vt0.c1 FROM vt0, rt0 WHERE (json_array_length(rt0.c2)) GROUP BY rt0.c0, rt0.c1, rt0.c2, vt0.c0, vt0.c1 UNION SELECT ALL rt0.c0, rt0.c1, rt0.c2, vt0.c0, vt0.c1 FROM vt0, rt0 WHERE ((NOT (json_array_length(rt0.c2)))) GROUP BY rt0.c0, rt0.c1, rt0.c2, vt0.c0, vt0.c1 UNION SELECT ALL rt0.c0, rt0.c1, rt0.c2, vt0.c0, vt0.c1 FROM vt0, rt0 WHERE (((json_array_length(rt0.c2)) ISNULL)) GROUP BY rt0.c0, rt0.c1, rt0.c2, vt0.c0, vt0.c1;
SELECT ALL rt0.c0, rt0.c1, rt0.c2, vt0.c0, vt0.c1 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2, vt0.c0, vt0.c1;
SELECT ALL rt0.c0, vt0.c0, vt0.c2, vt0.c1 FROM vt0 FULL OUTER JOIN rt0 ON ((((((((x'')AND(((rt0.c2)||(rt0.c2)))))OR((~ ('2072511759')))))OR((NULL IN (rt0.c0)))))OR(rt0.c0 COLLATE NOCASE)) GROUP BY rt0.c0, vt0.c0, vt0.c2, vt0.c1;
SELECT rt0.c0, vt0.c0, vt0.c2, vt0.c1 FROM vt0 FULL OUTER JOIN rt0 ON ((((((((x'')AND(((rt0.c2)||(rt0.c2)))))OR((~ ('2072511759')))))OR((NULL IN (rt0.c0)))))OR(rt0.c0 COLLATE NOCASE)) GROUP BY rt0.c0, vt0.c0, vt0.c2, vt0.c1 HAVING CASE COUNT(MAX(GROUP_CONCAT(TOTAL(rt0.c1))))  WHEN AVG(rt0.c1) THEN COUNT(*) ELSE rt0.c1 END UNION ALL SELECT rt0.c0, vt0.c0, vt0.c2, vt0.c1 FROM vt0 FULL OUTER JOIN rt0 ON ((((((((x'')AND(((rt0.c2)||(rt0.c2)))))OR((~ ('2072511759')))))OR((NULL IN (rt0.c0)))))OR(rt0.c0 COLLATE NOCASE)) GROUP BY rt0.c0, vt0.c0, vt0.c2, vt0.c1 HAVING (NOT (CASE COUNT(MAX(GROUP_CONCAT(TOTAL(rt0.c1))))  WHEN AVG(rt0.c1) THEN COUNT(*) ELSE rt0.c1 END)) UNION ALL SELECT rt0.c0, vt0.c0, vt0.c2, vt0.c1 FROM vt0 FULL OUTER JOIN rt0 ON ((((((((x'')AND(((rt0.c2)||(rt0.c2)))))OR((~ ('2072511759')))))OR((NULL IN (rt0.c0)))))OR(rt0.c0 COLLATE NOCASE)) GROUP BY rt0.c0, vt0.c0, vt0.c2, vt0.c1 HAVING ((CASE COUNT(MAX(GROUP_CONCAT(TOTAL(rt0.c1))))  WHEN AVG(rt0.c1) THEN COUNT(*) ELSE rt0.c1 END) ISNULL);
SELECT * FROM rt0, vt0;
SELECT ALL * FROM rt0, vt0 WHERE (TYPEOF(DISTINCT CASE 'VC0}Ut'  WHEN vt0.c0 THEN rt0.c1 ELSE x'' END)) UNION ALL SELECT ALL * FROM rt0, vt0 WHERE ((NOT (TYPEOF(DISTINCT CASE 'VC0}Ut'  WHEN vt0.c0 THEN rt0.c1 ELSE x'' END)))) UNION ALL SELECT ALL * FROM rt0, vt0 WHERE (((TYPEOF(DISTINCT CASE 'VC0}Ut'  WHEN vt0.c0 THEN rt0.c1 ELSE x'' END)) ISNULL));
SELECT * FROM rt0, vt0;
SELECT DISTINCT rt0.c1, rt0.c2, vt0.c0 FROM rt0, vt0;
SELECT DISTINCT rt0.c1, rt0.c2, vt0.c0 FROM rt0, vt0 WHERE ((((vt0.c1)>=(rt0.c2)) IN ())) UNION SELECT DISTINCT rt0.c1, rt0.c2, vt0.c0 FROM rt0, vt0 WHERE ((NOT ((((vt0.c1)>=(rt0.c2)) IN ())))) UNION SELECT DISTINCT rt0.c1, rt0.c2, vt0.c0 FROM rt0, vt0 WHERE ((((((vt0.c1)>=(rt0.c2)) IN ())) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c2, vt0.c0 FROM rt0, vt0;
SELECT ALL rt0.c0, rt0.c1 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c1 FROM vt0, rt0 WHERE (CASE ((rt0.c1)>>(vt0.c0))  WHEN ((vt0.c1)||(vt0.c2)) THEN CASE WHEN rt0.c1 THEN rt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c2 THEN rt0.c2 END WHEN ((rt0.c1)AND(rt0.c2)) THEN ((rt0.c2)*(vt0.c1)) WHEN rt0.c2 COLLATE NOCASE THEN (vt0.c1 IN (vt0.c0)) ELSE vt0.c1 COLLATE BINARY END) GROUP BY rt0.c0, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c1 FROM vt0, rt0 WHERE ((NOT (CASE ((rt0.c1)>>(vt0.c0))  WHEN ((vt0.c1)||(vt0.c2)) THEN CASE WHEN rt0.c1 THEN rt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c2 THEN rt0.c2 END WHEN ((rt0.c1)AND(rt0.c2)) THEN ((rt0.c2)*(vt0.c1)) WHEN rt0.c2 COLLATE NOCASE THEN (vt0.c1 IN (vt0.c0)) ELSE vt0.c1 COLLATE BINARY END))) GROUP BY rt0.c0, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c1 FROM vt0, rt0 WHERE (((CASE ((rt0.c1)>>(vt0.c0))  WHEN ((vt0.c1)||(vt0.c2)) THEN CASE WHEN rt0.c1 THEN rt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c2 THEN rt0.c2 END WHEN ((rt0.c1)AND(rt0.c2)) THEN ((rt0.c2)*(vt0.c1)) WHEN rt0.c2 COLLATE NOCASE THEN (vt0.c1 IN (vt0.c0)) ELSE vt0.c1 COLLATE BINARY END) ISNULL)) GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0 FROM rt0, vt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0, vt0 GROUP BY rt0.c0 HAVING COUNT(*) UNION ALL SELECT rt0.c0 FROM rt0, vt0 GROUP BY rt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c0 FROM rt0, vt0 GROUP BY rt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c0 FROM rt0, vt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0, vt0 GROUP BY rt0.c0 HAVING COUNT(*) UNION ALL SELECT rt0.c0 FROM rt0, vt0 GROUP BY rt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c0 FROM rt0, vt0 GROUP BY rt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c0 FROM rt0, vt0 GROUP BY rt0.c0;
SELECT ALL vt0.c0, vt0.c1 FROM vt0;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 WHERE ((((((vt0.c2)AND(vt0.c1)))AND(vt0.c1)) IN ())) UNION ALL SELECT vt0.c0, vt0.c1 FROM vt0 WHERE ((NOT ((((((vt0.c2)AND(vt0.c1)))AND(vt0.c1)) IN ())))) UNION ALL SELECT vt0.c0, vt0.c1 FROM vt0 WHERE ((((((((vt0.c2)AND(vt0.c1)))AND(vt0.c1)) IN ())) ISNULL));
SELECT ALL vt0.c0, vt0.c1 FROM vt0;
SELECT DISTINCT vt0.c0, vt0.c2, vt0.c1 FROM vt0;
SELECT DISTINCT vt0.c0, vt0.c2, vt0.c1 FROM vt0 WHERE (((((((((vt0.c2 COLLATE RTRIM)AND(((((vt0.c1)AND(vt0.c0)))AND(vt0.c0)))))AND(vt0.c1)))AND(vt0.c2)))AND(vt0.c0))) UNION SELECT DISTINCT vt0.c0, vt0.c2, vt0.c1 FROM vt0 WHERE ((NOT (((((((((vt0.c2 COLLATE RTRIM)AND(((((vt0.c1)AND(vt0.c0)))AND(vt0.c0)))))AND(vt0.c1)))AND(vt0.c2)))AND(vt0.c0))))) UNION SELECT DISTINCT vt0.c0, vt0.c2, vt0.c1 FROM vt0 NOT INDEXED WHERE (((((((((((vt0.c2 COLLATE RTRIM)AND(((((vt0.c1)AND(vt0.c0)))AND(vt0.c0)))))AND(vt0.c1)))AND(vt0.c2)))AND(vt0.c0))) ISNULL));
SELECT DISTINCT vt0.c0, vt0.c2, vt0.c1 FROM vt0;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 WHERE ((- (rt0.c2 COLLATE RTRIM))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0 WHERE ((NOT ((- (rt0.c2 COLLATE RTRIM))))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0 WHERE ((((- (rt0.c2 COLLATE RTRIM))) ISNULL)) GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING TOTAL(((rt0.c0) NOTNULL)) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING (NOT (TOTAL(((rt0.c0) NOTNULL)))) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING ((TOTAL(((rt0.c0) NOTNULL))) ISNULL);
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING TOTAL(((rt0.c0) NOTNULL)) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING (NOT (TOTAL(((rt0.c0) NOTNULL)))) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING ((TOTAL(((rt0.c0) NOTNULL))) ISNULL);
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE (((((((((rt0.c1 COLLATE BINARY)AND(((((rt0.c2)OR(rt0.c2)))AND(rt0.c0)))))AND(rt0.c2)))OR((('㇙\\+Ƿ\.F') IS FALSE))))AND((((rt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c0)))))) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (((((((((rt0.c1 COLLATE BINARY)AND(((((rt0.c2)OR(rt0.c2)))AND(rt0.c0)))))AND(rt0.c2)))OR((('㇙\\+Ƿ\.F') IS FALSE))))AND((((rt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c0)))))))) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE (((((((((((rt0.c1 COLLATE BINARY)AND(((((rt0.c2)OR(rt0.c2)))AND(rt0.c0)))))AND(rt0.c2)))OR((('㇙\\+Ƿ\.F') IS FALSE))))AND((((rt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c0)))))) ISNULL));
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0;
SELECT DISTINCT vt0.c1, vt0.c2 FROM vt0;
SELECT DISTINCT vt0.c1, vt0.c2 FROM vt0 WHERE (((((((vt0.c2)AND(vt0.c1)))AND(vt0.c2)))IS(vt0.c1))) UNION SELECT DISTINCT vt0.c1, vt0.c2 FROM vt0 WHERE ((NOT (((((((vt0.c2)AND(vt0.c1)))AND(vt0.c2)))IS(vt0.c1))))) UNION SELECT DISTINCT vt0.c1, vt0.c2 FROM vt0 WHERE (((((((((vt0.c2)AND(vt0.c1)))AND(vt0.c2)))IS(vt0.c1))) ISNULL));
SELECT DISTINCT vt0.c1, vt0.c2 FROM vt0;
SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 WHERE (rt0.c1) GROUP BY rt0.c1, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (rt0.c1))) GROUP BY rt0.c1, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c0 FROM rt0 WHERE (((rt0.c1) ISNULL)) GROUP BY rt0.c1, rt0.c0;
SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT ALL rt0.c1, vt0.c0, rt0.c2, vt0.c1 FROM vt0 CROSS JOIN rt0 ON ((vt0.c0 COLLATE NOCASE)<=(((vt0.c2)IS(NULL)))) GROUP BY rt0.c1, vt0.c0, rt0.c2, vt0.c1;
SELECT rt0.c1, vt0.c0, rt0.c2, vt0.c1 FROM vt0 CROSS JOIN rt0 ON ((vt0.c0 COLLATE NOCASE)<=(((vt0.c2)IS(NULL)))) GROUP BY rt0.c1, vt0.c0, rt0.c2, vt0.c1 HAVING MAX(((rt0.c2) NOT BETWEEN (vt0.c1) AND (GROUP_CONCAT(COUNT(rt0.c1)))), ((vt0.c1) IS FALSE)) UNION ALL SELECT rt0.c1, vt0.c0, rt0.c2, vt0.c1 FROM vt0 CROSS JOIN rt0 ON ((vt0.c0 COLLATE NOCASE)<=(((vt0.c2)IS(NULL)))) GROUP BY rt0.c1, vt0.c0, rt0.c2, vt0.c1 HAVING (NOT (MAX(((rt0.c2) NOT BETWEEN (vt0.c1) AND (GROUP_CONCAT(COUNT(rt0.c1)))), ((vt0.c1) IS FALSE)))) UNION ALL SELECT ALL rt0.c1, vt0.c0, rt0.c2, vt0.c1 FROM vt0 CROSS JOIN rt0 ON ((vt0.c0 COLLATE NOCASE)<=(((vt0.c2)IS(NULL)))) GROUP BY rt0.c1, vt0.c0, rt0.c2, vt0.c1 HAVING ((MAX(((rt0.c2) NOT BETWEEN (vt0.c1) AND (GROUP_CONCAT(COUNT(rt0.c1)))), ((vt0.c1) IS FALSE))) ISNULL);
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE ((((~ (rt0.c2))) NOT BETWEEN ('-297038187') AND ((((rt0.c2))=((rt0.c1)))))) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT ((((~ (rt0.c2))) NOT BETWEEN ('-297038187') AND ((((rt0.c2))=((rt0.c1)))))))) UNION ALL SELECT ALL * FROM rt0 WHERE ((((((~ (rt0.c2))) NOT BETWEEN ('-297038187') AND ((((rt0.c2))=((rt0.c1)))))) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT * FROM vt0 FULL OUTER JOIN rt0 ON (- ((((rt0.c0))<=((vt0.c2)))));
SELECT DISTINCT * FROM vt0 FULL OUTER JOIN rt0 ON (- ((((rt0.c0))<=((vt0.c2))))) WHERE (CASE CAST(vt0.c2 AS REAL)  WHEN vt0.c1 THEN ((rt0.c0) NOT BETWEEN (vt0.c0) AND ('-858899534')) WHEN (((NULL, rt0.c1, vt0.c2))<((vt0.c2, rt0.c1, rt0.c1))) THEN '-1661824309' WHEN CASE WHEN vt0.c0 THEN rt0.c0 END THEN ((((rt0.c1)OR(vt0.c0)))AND(rt0.c2)) END) UNION SELECT DISTINCT * FROM vt0 FULL OUTER JOIN rt0 ON (- ((((rt0.c0))<=((vt0.c2))))) WHERE ((NOT (CASE CAST(vt0.c2 AS REAL)  WHEN vt0.c1 THEN ((rt0.c0) NOT BETWEEN (vt0.c0) AND ('-858899534')) WHEN (((NULL, rt0.c1, vt0.c2))<((vt0.c2, rt0.c1, rt0.c1))) THEN '-1661824309' WHEN CASE WHEN vt0.c0 THEN rt0.c0 END THEN ((((rt0.c1)OR(vt0.c0)))AND(rt0.c2)) END))) UNION SELECT DISTINCT * FROM vt0 FULL OUTER JOIN rt0 ON (- ((((rt0.c0))<=((vt0.c2))))) WHERE (((CASE CAST(vt0.c2 AS REAL)  WHEN vt0.c1 THEN ((rt0.c0) NOT BETWEEN (vt0.c0) AND ('-858899534')) WHEN (((NULL, rt0.c1, vt0.c2))<((vt0.c2, rt0.c1, rt0.c1))) THEN '-1661824309' WHEN CASE WHEN vt0.c0 THEN rt0.c0 END THEN ((((rt0.c1)OR(vt0.c0)))AND(rt0.c2)) END) ISNULL));
SELECT DISTINCT * FROM vt0 FULL OUTER JOIN rt0 ON (- ((((rt0.c0))<=((vt0.c2)))));
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 WHERE (rt0.c2) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0 WHERE ((NOT (rt0.c2))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0 WHERE (((rt0.c2) ISNULL)) GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT vt0.c0, vt0.c2 FROM vt0 GROUP BY vt0.c0, vt0.c2;
SELECT ALL vt0.c0, vt0.c2 FROM vt0 GROUP BY vt0.c0, vt0.c2 HAVING COUNT(((((GROUP_CONCAT(vt0.c1))OR(vt0.c1)))OR(COUNT(MAX(COUNT(COUNT(TOTAL(AVG(COUNT(*)))))))))) UNION ALL SELECT ALL vt0.c0, vt0.c2 FROM vt0 GROUP BY vt0.c0, vt0.c2 HAVING (NOT (COUNT(((((GROUP_CONCAT(vt0.c1))OR(vt0.c1)))OR(COUNT(MAX(COUNT(COUNT(TOTAL(AVG(COUNT(*)))))))))))) UNION ALL SELECT vt0.c0, vt0.c2 FROM vt0 GROUP BY vt0.c0, vt0.c2 HAVING ((COUNT(((((GROUP_CONCAT(vt0.c1))OR(vt0.c1)))OR(COUNT(MAX(COUNT(COUNT(TOTAL(AVG(COUNT(*))))))))))) ISNULL);
SELECT ALL * FROM rt0 INNER JOIN vt0 ON ((CAST(vt0.c0 AS BLOB)) BETWEEN ((- (rt0.c1))) AND (NULL));
SELECT * FROM rt0 INNER JOIN vt0 ON ((CAST(vt0.c0 AS BLOB)) BETWEEN ((- (rt0.c1))) AND (NULL)) WHERE (vt0.c0) UNION ALL SELECT ALL * FROM rt0 INNER JOIN vt0 ON ((CAST(vt0.c0 AS BLOB)) BETWEEN ((- (rt0.c1))) AND (NULL)) WHERE ((NOT (vt0.c0))) UNION ALL SELECT * FROM rt0 INNER JOIN vt0 ON ((CAST(vt0.c0 AS BLOB)) BETWEEN ((- (rt0.c1))) AND (NULL)) WHERE (((vt0.c0) ISNULL));
SELECT ALL * FROM rt0 INNER JOIN vt0 ON ((CAST(vt0.c0 AS BLOB)) BETWEEN ((- (rt0.c1))) AND (NULL));
SELECT DISTINCT * FROM vt0, rt0;
SELECT DISTINCT * FROM vt0, rt0 WHERE (((((vt0.c0) ISNULL))<=(((((rt0.c1)OR(vt0.c0)))AND(rt0.c0))))) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE ((NOT (((((vt0.c0) ISNULL))<=(((((rt0.c1)OR(vt0.c0)))AND(rt0.c0))))))) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE (((((((vt0.c0) ISNULL))<=(((((rt0.c1)OR(vt0.c0)))AND(rt0.c0))))) ISNULL));
SELECT DISTINCT * FROM vt0, rt0;
SELECT ALL rt0.c0, rt0.c1, vt0.c2, vt0.c1, rt0.c2 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c1, vt0.c2, vt0.c1, rt0.c2;
SELECT ALL rt0.c0, rt0.c1, vt0.c2, vt0.c1, rt0.c2 FROM vt0, rt0 WHERE ((((((((((- (vt0.c2)))OR('0.6634334915960787')))AND(((NULL) NOT NULL))))AND(CASE WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END)))AND(vt0.c2 COLLATE BINARY))) GROUP BY rt0.c0, rt0.c1, vt0.c2, vt0.c1, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c1, vt0.c2, vt0.c1, rt0.c2 FROM vt0, rt0 WHERE ((NOT ((((((((((- (vt0.c2)))OR('0.6634334915960787')))AND(((NULL) NOT NULL))))AND(CASE WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END)))AND(vt0.c2 COLLATE BINARY))))) GROUP BY rt0.c0, rt0.c1, vt0.c2, vt0.c1, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c1, vt0.c2, vt0.c1, rt0.c2 FROM vt0, rt0 WHERE ((((((((((((- (vt0.c2)))OR('0.6634334915960787')))AND(((NULL) NOT NULL))))AND(CASE WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END)))AND(vt0.c2 COLLATE BINARY))) ISNULL)) GROUP BY rt0.c0, rt0.c1, vt0.c2, vt0.c1, rt0.c2;
SELECT ALL rt0.c0, rt0.c1, vt0.c2, vt0.c1, rt0.c2 FROM vt0, rt0 GROUP BY rt0.c0, rt0.c1, vt0.c2, vt0.c1, rt0.c2;
SELECT ALL vt0.c1, rt0.c1, vt0.c2, rt0.c2, vt0.c0 FROM vt0, rt0 GROUP BY vt0.c1, rt0.c1, vt0.c2, rt0.c2, vt0.c0;
SELECT ALL vt0.c1, rt0.c1, vt0.c2, rt0.c2, vt0.c0 FROM vt0, rt0 GROUP BY vt0.c1, rt0.c1, vt0.c2, rt0.c2, vt0.c0 HAVING ((MIN(TOTAL(MIN(rt0.c2))))|(COUNT(NULL))) UNION ALL SELECT vt0.c1, rt0.c1, vt0.c2, rt0.c2, vt0.c0 FROM vt0, rt0 GROUP BY vt0.c1, rt0.c1, vt0.c2, rt0.c2, vt0.c0 HAVING (NOT (((MIN(TOTAL(MIN(rt0.c2))))|(COUNT(NULL))))) UNION ALL SELECT ALL vt0.c1, rt0.c1, vt0.c2, rt0.c2, vt0.c0 FROM vt0, rt0 GROUP BY vt0.c1, rt0.c1, vt0.c2, rt0.c2, vt0.c0 HAVING ((((MIN(TOTAL(MIN(rt0.c2))))|(COUNT(NULL)))) ISNULL);
SELECT rt0.c1, rt0.c0 FROM rt0;
SELECT rt0.c1, rt0.c0 FROM rt0 WHERE ((((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0))) COLLATE NOCASE) UNION ALL SELECT ALL rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT ((((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0))) COLLATE NOCASE))) UNION ALL SELECT ALL rt0.c1, rt0.c0 FROM rt0 WHERE ((((((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0))) COLLATE NOCASE) ISNULL));
SELECT rt0.c1, rt0.c0 FROM rt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((('jhFYG M' IN (vt0.c1, vt0.c1))) BETWEEN ((((vt0.c2, x'', vt0.c2))<((vt0.c2, 0.7811350285581397, vt0.c1)))) AND (x''))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((('jhFYG M' IN (vt0.c1, vt0.c1))) BETWEEN ((((vt0.c2, x'', vt0.c2))<((vt0.c2, 0.7811350285581397, vt0.c1)))) AND (x''))))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((('jhFYG M' IN (vt0.c1, vt0.c1))) BETWEEN ((((vt0.c2, x'', vt0.c2))<((vt0.c2, 0.7811350285581397, vt0.c1)))) AND (x''))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 WHERE (((json_valid(rt0.c0))AND(rt0.c0 COLLATE BINARY))) GROUP BY rt0.c0, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (((json_valid(rt0.c0))AND(rt0.c0 COLLATE BINARY))))) GROUP BY rt0.c0, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c2 FROM rt0 WHERE (((((json_valid(rt0.c0))AND(rt0.c0 COLLATE BINARY))) ISNULL)) GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING (+ (SUM(rt0.c0))) UNION ALL SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING (NOT ((+ (SUM(rt0.c0))))) UNION ALL SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING (((+ (SUM(rt0.c0)))) ISNULL);
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING (+ (SUM(rt0.c0))) UNION ALL SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING (NOT ((+ (SUM(rt0.c0))))) UNION ALL SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING (((+ (SUM(rt0.c0)))) ISNULL);
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT MIN(IFNULL(DISTINCT ((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0)), UPPER(DISTINCT rt0.c0))) FROM rt0, vt0 ORDER BY (((0.3751608365086657)) NOT BETWEEN ((((((vt0.c0)OR(NULL)))AND(rt0.c0)))) AND ((((vt0.c2)<(vt0.c0))))) ASC;
SELECT ALL * FROM vt0;
SELECT * FROM vt0 WHERE ((((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c2 END, ((vt0.c0) NOTNULL), ((vt0.c0) BETWEEN (vt0.c2) AND (vt0.c1))))<(((((vt0.c0)) NOT BETWEEN ((vt0.c2)) AND ((vt0.c1))), CASE vt0.c2  WHEN vt0.c0 THEN vt0.c1 WHEN '-699134647' THEN vt0.c2 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, ((vt0.c0) NOT NULL))))) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT ((((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c2 END, ((vt0.c0) NOTNULL), ((vt0.c0) BETWEEN (vt0.c2) AND (vt0.c1))))<(((((vt0.c0)) NOT BETWEEN ((vt0.c2)) AND ((vt0.c1))), CASE vt0.c2  WHEN vt0.c0 THEN vt0.c1 WHEN '-699134647' THEN vt0.c2 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, ((vt0.c0) NOT NULL))))))) UNION ALL SELECT * FROM vt0 WHERE ((((((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c2 END, ((vt0.c0) NOTNULL), ((vt0.c0) BETWEEN (vt0.c2) AND (vt0.c1))))<(((((vt0.c0)) NOT BETWEEN ((vt0.c2)) AND ((vt0.c1))), CASE vt0.c2  WHEN vt0.c0 THEN vt0.c1 WHEN '-699134647' THEN vt0.c2 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, ((vt0.c0) NOT NULL))))) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT vt0.c1, vt0.c2, rt0.c2, rt0.c0, rt0.c1 FROM vt0, rt0;
SELECT DISTINCT vt0.c1, vt0.c2, rt0.c2, rt0.c0, rt0.c1 FROM vt0, rt0 WHERE (((rt0.c1)!=(((rt0.c1) ISNULL)))) UNION SELECT DISTINCT vt0.c1, vt0.c2, rt0.c2, rt0.c0, rt0.c1 FROM vt0, rt0 WHERE ((NOT (((rt0.c1)!=(((rt0.c1) ISNULL)))))) UNION SELECT DISTINCT vt0.c1, vt0.c2, rt0.c2, rt0.c0, rt0.c1 FROM vt0, rt0 WHERE (((((rt0.c1)<>(((rt0.c1) ISNULL)))) ISNULL));
SELECT DISTINCT vt0.c1, vt0.c2, rt0.c2, rt0.c0, rt0.c1 FROM vt0, rt0;
SELECT vt0.c2, vt0.c1 FROM vt0 GROUP BY vt0.c2, vt0.c1;
SELECT ALL vt0.c2, vt0.c1 FROM vt0 WHERE (((x'0060')IS NOT((((vt0.c2, vt0.c0, vt0.c0))>=((x'f9e2', vt0.c1, vt0.c2)))))) GROUP BY vt0.c2, vt0.c1 UNION SELECT ALL vt0.c2, vt0.c1 FROM vt0 WHERE ((NOT (((x'0060')IS NOT((((vt0.c2, vt0.c0, vt0.c0))>=((x'f9e2', vt0.c1, vt0.c2)))))))) GROUP BY vt0.c2, vt0.c1 UNION SELECT ALL vt0.c2, vt0.c1 FROM vt0 WHERE (((((x'0060')IS NOT((((vt0.c2, vt0.c0, vt0.c0))>=((x'f9e2', vt0.c1, vt0.c2)))))) ISNULL)) GROUP BY vt0.c2, vt0.c1;
SELECT vt0.c2, vt0.c1 FROM vt0 GROUP BY vt0.c2, vt0.c1;
SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING (((rt0.c0 COLLATE RTRIM))!=(((NOT (''))))) UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING (NOT ((((rt0.c0 COLLATE RTRIM))<>(((NOT (''))))))) UNION ALL SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING (((((rt0.c0 COLLATE RTRIM))<>(((NOT ('')))))) ISNULL);
SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING (((rt0.c0 COLLATE RTRIM))!=(((NOT (''))))) UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING (NOT ((((rt0.c0 COLLATE RTRIM))<>(((NOT (''))))))) UNION ALL SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING (((((rt0.c0 COLLATE RTRIM))<>(((NOT ('')))))) ISNULL);
SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT ALL MIN(((rt0.c1 COLLATE RTRIM) NOT BETWEEN (((rt0.c2)OR(rt0.c2))) AND (((rt0.c1)OR(rt0.c0))))) FROM rt0;
SELECT * FROM vt0 FULL OUTER JOIN rt0 ON (- (ABS(DISTINCT rt0.c2)));
SELECT ALL * FROM vt0 FULL OUTER JOIN rt0 ON (- (ABS(DISTINCT rt0.c2))) WHERE (((((rt0.c1) BETWEEN (vt0.c0) AND (vt0.c1))) BETWEEN (((rt0.c2)*(vt0.c0))) AND (((0.9080496901757543) BETWEEN (vt0.c2) AND (rt0.c2))))) UNION ALL SELECT * FROM vt0 FULL OUTER JOIN rt0 ON (- (ABS(DISTINCT rt0.c2))) WHERE ((NOT (((((rt0.c1) BETWEEN (vt0.c0) AND (vt0.c1))) BETWEEN (((rt0.c2)*(vt0.c0))) AND (((0.9080496901757543) BETWEEN (vt0.c2) AND (rt0.c2))))))) UNION ALL SELECT * FROM vt0 FULL OUTER JOIN rt0 ON (- (ABS(DISTINCT rt0.c2))) WHERE (((((((rt0.c1) BETWEEN (vt0.c0) AND (vt0.c1))) BETWEEN (((rt0.c2)*(vt0.c0))) AND (((0.9080496901757543) BETWEEN (vt0.c2) AND (rt0.c2))))) ISNULL));
SELECT * FROM vt0 FULL OUTER JOIN rt0 ON (- (ABS(DISTINCT rt0.c2)));
SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0 WHERE (CAST(CASE WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c0 END AS REAL)) UNION SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (CAST(CASE WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c0 END AS REAL)))) UNION SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0 WHERE (((CAST(CASE WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c0 END AS REAL)) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c0 FROM rt0;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 WHERE (((CASE WHEN rt0.c1 THEN rt0.c1 END) NOT BETWEEN ((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c0)))) AND (((rt0.c1)==(rt0.c2))))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0 WHERE ((NOT (((CASE WHEN rt0.c1 THEN rt0.c1 END) NOT BETWEEN ((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c0)))) AND (((rt0.c1)==(rt0.c2))))))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0 WHERE (((((CASE WHEN rt0.c1 THEN rt0.c1 END) NOT BETWEEN ((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c0)))) AND (((rt0.c1)==(rt0.c2))))) ISNULL)) GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING (GROUP_CONCAT(rt0.c2) IN (rt0.c2, COUNT(*))) COLLATE BINARY UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING (NOT ((GROUP_CONCAT(rt0.c2) IN (rt0.c2, COUNT(*))) COLLATE BINARY)) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING (((GROUP_CONCAT(rt0.c2) IN (rt0.c2, COUNT(*))) COLLATE BINARY) ISNULL);
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING (GROUP_CONCAT(rt0.c2) IN (rt0.c2, COUNT(*))) COLLATE BINARY UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING (NOT ((GROUP_CONCAT(rt0.c2) IN (rt0.c2, COUNT(*))) COLLATE BINARY)) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING (((GROUP_CONCAT(rt0.c2) IN (rt0.c2, COUNT(*))) COLLATE BINARY) ISNULL);
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT ALL vt0.c0, vt0.c2 FROM vt0;
SELECT ALL vt0.c0, vt0.c2 FROM vt0 WHERE ((((((~ (0Xffffffffb44745c8)))OR(vt0.c1)))AND(((vt0.c2) IS TRUE)))) UNION ALL SELECT vt0.c0, vt0.c2 FROM vt0 WHERE ((NOT ((((((~ (0xffffffffb44745c8)))OR(vt0.c1)))AND(((vt0.c2) IS TRUE)))))) UNION ALL SELECT vt0.c0, vt0.c2 FROM vt0 WHERE ((((((((~ (0xffffffffb44745c8)))OR(vt0.c1)))AND(((vt0.c2) IS TRUE)))) ISNULL));
SELECT ALL vt0.c0, vt0.c2 FROM vt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((((rt0.c2) NOTNULL)) IS TRUE)) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((((rt0.c2) NOTNULL)) IS TRUE)))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((((rt0.c2) NOTNULL)) IS TRUE)) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL vt0.c2, vt0.c1, vt0.c0, rt0.c1, rt0.c0 FROM vt0, rt0 GROUP BY vt0.c2, vt0.c1, vt0.c0, rt0.c1, rt0.c0;
SELECT vt0.c2, vt0.c1, vt0.c0, rt0.c1, rt0.c0 FROM vt0, rt0 WHERE (CAST((rt0.c0 IN (vt0.c0, rt0.c1)) AS NUMERIC)) GROUP BY vt0.c2, vt0.c1, vt0.c0, rt0.c1, rt0.c0 UNION SELECT ALL vt0.c2, vt0.c1, vt0.c0, rt0.c1, rt0.c0 FROM vt0, rt0 WHERE ((NOT (CAST((rt0.c0 IN (vt0.c0, rt0.c1)) AS NUMERIC)))) GROUP BY vt0.c2, vt0.c1, vt0.c0, rt0.c1, rt0.c0 UNION SELECT vt0.c2, vt0.c1, vt0.c0, rt0.c1, rt0.c0 FROM vt0, rt0 WHERE (((CAST((rt0.c0 IN (vt0.c0, rt0.c1)) AS NUMERIC)) ISNULL)) GROUP BY vt0.c2, vt0.c1, vt0.c0, rt0.c1, rt0.c0;
SELECT ALL vt0.c2, vt0.c1, vt0.c0, rt0.c1, rt0.c0 FROM vt0, rt0 GROUP BY vt0.c2, vt0.c1, vt0.c0, rt0.c1, rt0.c0;
SELECT ALL vt0.c1, vt0.c2 FROM vt0 GROUP BY vt0.c1, vt0.c2;
SELECT ALL vt0.c1, vt0.c2 FROM vt0 GROUP BY vt0.c1, vt0.c2 HAVING HEX(COUNT(*)) UNION ALL SELECT ALL vt0.c1, vt0.c2 FROM vt0 GROUP BY vt0.c1, vt0.c2 HAVING (NOT (HEX(COUNT(*)))) UNION ALL SELECT ALL vt0.c1, vt0.c2 FROM vt0 GROUP BY vt0.c1, vt0.c2 HAVING ((HEX(COUNT(*))) ISNULL);
SELECT ALL vt0.c1, vt0.c2 FROM vt0 GROUP BY vt0.c1, vt0.c2;
SELECT ALL vt0.c1, vt0.c2 FROM vt0 GROUP BY vt0.c1, vt0.c2 HAVING HEX(COUNT(*)) UNION ALL SELECT ALL vt0.c1, vt0.c2 FROM vt0 GROUP BY vt0.c1, vt0.c2 HAVING (NOT (HEX(COUNT(*)))) UNION ALL SELECT ALL vt0.c1, vt0.c2 FROM vt0 GROUP BY vt0.c1, vt0.c2 HAVING ((HEX(COUNT(*))) ISNULL);
SELECT ALL vt0.c1, vt0.c2 FROM vt0 GROUP BY vt0.c1, vt0.c2;
SELECT TOTAL(vt0.c2) FROM vt0;
SELECT ALL * FROM rt0 RIGHT OUTER JOIN vt0 ON (((CAST(rt0.c0 AS NUMERIC), ((rt0.c1)=(rt0.c0)), ((((((((vt0.c0)OR(0.2072806735417948)))AND(rt0.c2)))OR(rt0.c0)))AND(vt0.c2))))=(((((vt0.c2, vt0.c0, rt0.c2)) NOT BETWEEN ((rt0.c2, vt0.c2, rt0.c2)) AND ((vt0.c0, vt0.c2, vt0.c2))), ((vt0.c1) NOT BETWEEN (vt0.c2) AND (NULL)), (~ (rt0.c0)))));
SELECT ALL * FROM rt0 RIGHT OUTER JOIN vt0 ON (((CAST(rt0.c0 AS NUMERIC), ((rt0.c1)=(rt0.c0)), ((((((((vt0.c0)OR(0.2072806735417948)))AND(rt0.c2)))OR(rt0.c0)))AND(vt0.c2))))==(((((vt0.c2, vt0.c0, rt0.c2)) NOT BETWEEN ((rt0.c2, vt0.c2, rt0.c2)) AND ((vt0.c0, vt0.c2, vt0.c2))), ((vt0.c1) NOT BETWEEN (vt0.c2) AND (NULL)), (~ (rt0.c0))))) WHERE (((((rt0.c2)|(vt0.c1)))!=(NULLIF(DISTINCT rt0.c2, rt0.c0)))) UNION ALL SELECT * FROM rt0 RIGHT OUTER JOIN vt0 ON (((CAST(rt0.c0 AS NUMERIC), ((rt0.c1)==(rt0.c0)), ((((((((vt0.c0)OR(0.2072806735417948)))AND(rt0.c2)))OR(rt0.c0)))AND(vt0.c2))))==(((((vt0.c2, vt0.c0, rt0.c2)) NOT BETWEEN ((rt0.c2, vt0.c2, rt0.c2)) AND ((vt0.c0, vt0.c2, vt0.c2))), ((vt0.c1) NOT BETWEEN (vt0.c2) AND (NULL)), (~ (rt0.c0))))) WHERE ((NOT (((((rt0.c2)|(vt0.c1)))!=(NULLIF(DISTINCT rt0.c2, rt0.c0)))))) UNION ALL SELECT ALL * FROM rt0 RIGHT OUTER JOIN vt0 ON (((CAST(rt0.c0 AS NUMERIC), ((rt0.c1)==(rt0.c0)), ((((((((vt0.c0)OR(0.2072806735417948)))AND(rt0.c2)))OR(rt0.c0)))AND(vt0.c2))))==(((((vt0.c2, vt0.c0, rt0.c2)) NOT BETWEEN ((rt0.c2, vt0.c2, rt0.c2)) AND ((vt0.c0, vt0.c2, vt0.c2))), ((vt0.c1) NOT BETWEEN (vt0.c2) AND (NULL)), (~ (rt0.c0))))) WHERE (((((((rt0.c2)|(vt0.c1)))!=(NULLIF(DISTINCT rt0.c2, rt0.c0)))) ISNULL));
SELECT ALL * FROM rt0 RIGHT OUTER JOIN vt0 ON (((CAST(rt0.c0 AS NUMERIC), ((rt0.c1)=(rt0.c0)), ((((((((vt0.c0)OR(0.2072806735417948)))AND(rt0.c2)))OR(rt0.c0)))AND(vt0.c2))))=(((((vt0.c2, vt0.c0, rt0.c2)) NOT BETWEEN ((rt0.c2, vt0.c2, rt0.c2)) AND ((vt0.c0, vt0.c2, vt0.c2))), ((vt0.c1) NOT BETWEEN (vt0.c2) AND (NULL)), (~ (rt0.c0)))));
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((vt0.c0)<(vt0.c0)) COLLATE RTRIM) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((vt0.c0)<(vt0.c0)) COLLATE RTRIM))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((vt0.c0)<(vt0.c0)) COLLATE RTRIM) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE (0.7483445672076667) GROUP BY rt0.c0, rt0.c1, rt0.c2 UNION SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (0.7483445672076667))) GROUP BY rt0.c0, rt0.c1, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE (((0.7483445672076667) ISNULL)) GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING MIN((rt0.c2 IN ())) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING (NOT (MIN((rt0.c2 IN ())))) UNION ALL SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING ((MIN((rt0.c2 IN ()))) ISNULL);
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING MIN((rt0.c2 IN ())) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING (NOT (MIN((rt0.c2 IN ())))) UNION ALL SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING ((MIN((rt0.c2 IN ()))) ISNULL);
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE (rt0.c1) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (rt0.c1))) UNION ALL SELECT ALL * FROM rt0 WHERE (((rt0.c1) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT vt0.c1, rt0.c2 FROM rt0, vt0;
SELECT DISTINCT vt0.c1, rt0.c2 FROM rt0, vt0 WHERE (1.068599991E9) UNION SELECT DISTINCT vt0.c1, rt0.c2 FROM rt0, vt0 WHERE ((NOT (1.068599991E9))) UNION SELECT DISTINCT vt0.c1, rt0.c2 FROM rt0, vt0 WHERE (((1.068599991E9) ISNULL));
SELECT DISTINCT vt0.c1, rt0.c2 FROM rt0, vt0;
SELECT rt0.c2, rt0.c1, vt0.c2, vt0.c0 FROM rt0 RIGHT OUTER JOIN vt0 ON (~ (((((vt0.c2)OR(rt0.c1)))AND(rt0.c0)))) GROUP BY rt0.c2, rt0.c1, vt0.c2, vt0.c0;
SELECT ALL rt0.c2, rt0.c1, vt0.c2, vt0.c0 FROM rt0 RIGHT OUTER JOIN vt0 ON (~ (((((vt0.c2)OR(rt0.c1)))AND(rt0.c0)))) WHERE (vt0.c2) GROUP BY rt0.c2, rt0.c1, vt0.c2, vt0.c0 UNION SELECT ALL rt0.c2, rt0.c1, vt0.c2, vt0.c0 FROM rt0 RIGHT OUTER JOIN vt0 ON (~ (((((vt0.c2)OR(rt0.c1)))AND(rt0.c0)))) WHERE ((NOT (vt0.c2))) GROUP BY rt0.c2, rt0.c1, vt0.c2, vt0.c0 UNION SELECT rt0.c2, rt0.c1, vt0.c2, vt0.c0 FROM rt0 RIGHT OUTER JOIN vt0 ON (~ (((((vt0.c2)OR(rt0.c1)))AND(rt0.c0)))) WHERE (((vt0.c2) ISNULL)) GROUP BY rt0.c2, rt0.c1, vt0.c2, vt0.c0;
SELECT rt0.c2, rt0.c1, vt0.c2, vt0.c0 FROM rt0 RIGHT OUTER JOIN vt0 ON (~ (((((vt0.c2)OR(rt0.c1)))AND(rt0.c0)))) GROUP BY rt0.c2, rt0.c1, vt0.c2, vt0.c0;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING COUNT(GROUP_CONCAT(rt0.c0)) UNION ALL SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING (NOT (COUNT(GROUP_CONCAT(rt0.c0)))) UNION ALL SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING ((COUNT(GROUP_CONCAT(rt0.c0))) ISNULL);
SELECT vt0.c1 FROM vt0;
SELECT ALL vt0.c1 FROM vt0 WHERE (vt0.c2) UNION ALL SELECT ALL vt0.c1 FROM vt0 WHERE ((NOT (vt0.c2))) UNION ALL SELECT vt0.c1 FROM vt0 WHERE (((vt0.c2) ISNULL));
SELECT vt0.c1 FROM vt0;
SELECT DISTINCT vt0.c0, rt0.c1, rt0.c0, vt0.c2, vt0.c1, rt0.c2 FROM vt0, rt0;
SELECT DISTINCT vt0.c0, rt0.c1, rt0.c0, vt0.c2, vt0.c1, rt0.c2 FROM vt0, rt0 WHERE ((((~ (vt0.c1)))|((('') ISNULL)))) UNION SELECT DISTINCT vt0.c0, rt0.c1, rt0.c0, vt0.c2, vt0.c1, rt0.c2 FROM vt0, rt0 WHERE ((NOT ((((~ (vt0.c1)))|((('') ISNULL)))))) UNION SELECT DISTINCT vt0.c0, rt0.c1, rt0.c0, vt0.c2, vt0.c1, rt0.c2 FROM vt0, rt0 WHERE ((((((~ (vt0.c1)))|((('') ISNULL)))) ISNULL));
SELECT DISTINCT vt0.c0, rt0.c1, rt0.c0, vt0.c2, vt0.c1, rt0.c2 FROM vt0, rt0;
SELECT ALL rt0.c1, vt0.c1 FROM vt0, rt0 GROUP BY rt0.c1, vt0.c1;
SELECT rt0.c1, vt0.c1 FROM vt0, rt0 WHERE (((((vt0.c1)) BETWEEN ((x'')) AND ((vt0.c0))) IN ())) GROUP BY rt0.c1, vt0.c1 UNION SELECT rt0.c1, vt0.c1 FROM vt0, rt0 WHERE ((NOT (((((vt0.c1)) BETWEEN ((x'')) AND ((vt0.c0))) IN ())))) GROUP BY rt0.c1, vt0.c1 UNION SELECT ALL rt0.c1, vt0.c1 FROM vt0, rt0 WHERE (((((((vt0.c1)) BETWEEN ((x'')) AND ((vt0.c0))) IN ())) ISNULL)) GROUP BY rt0.c1, vt0.c1;
SELECT ALL rt0.c1, vt0.c1 FROM vt0, rt0 GROUP BY rt0.c1, vt0.c1;
SELECT ALL rt0.c2, vt0.c1, vt0.c2, rt0.c1, rt0.c0, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c2, vt0.c1, vt0.c2, rt0.c1, rt0.c0, vt0.c0;
SELECT rt0.c2, vt0.c1, vt0.c2, rt0.c1, rt0.c0, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c2, vt0.c1, vt0.c2, rt0.c1, rt0.c0, vt0.c0 HAVING (~ ((((COUNT(*)))>((SUM(SUM(COUNT(rt0.c0)))))))) UNION ALL SELECT rt0.c2, vt0.c1, vt0.c2, rt0.c1, rt0.c0, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c2, vt0.c1, vt0.c2, rt0.c1, rt0.c0, vt0.c0 HAVING (NOT ((~ ((((COUNT(*)))>((SUM(SUM(COUNT(rt0.c0)))))))))) UNION ALL SELECT rt0.c2, vt0.c1, vt0.c2, rt0.c1, rt0.c0, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c2, vt0.c1, vt0.c2, rt0.c1, rt0.c0, vt0.c0 HAVING (((~ ((((COUNT(*)))>((SUM(SUM(COUNT(rt0.c0))))))))) ISNULL);
SELECT ALL MIN((rt0.c1 IN ())) FROM rt0;
SELECT ALL vt0.c2, vt0.c0 FROM rt0, vt0;
SELECT ALL vt0.c2, vt0.c0 FROM rt0, vt0 WHERE (NULL) UNION ALL SELECT vt0.c2, vt0.c0 FROM rt0, vt0 WHERE ((NOT (NULL))) UNION ALL SELECT vt0.c2, vt0.c0 FROM rt0, vt0 WHERE (((NULL) ISNULL));
SELECT ALL vt0.c2, vt0.c0 FROM rt0, vt0;
SELECT DISTINCT * FROM vt0, rt0;
SELECT DISTINCT * FROM vt0, rt0 WHERE (((((((vt0.c0)OR(vt0.c2)))OR(vt0.c0)))+(CASE rt0.c1  WHEN vt0.c0 THEN vt0.c2 ELSE vt0.c2 END))) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE ((NOT (((((((vt0.c0)OR(vt0.c2)))OR(vt0.c0)))+(CASE rt0.c1  WHEN vt0.c0 THEN vt0.c2 ELSE vt0.c2 END))))) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE (((((((((vt0.c0)OR(vt0.c2)))OR(vt0.c0)))+(CASE rt0.c1  WHEN vt0.c0 THEN vt0.c2 ELSE vt0.c2 END))) ISNULL));
SELECT DISTINCT * FROM vt0, rt0;
SELECT rt0.c2, vt0.c1, vt0.c2, rt0.c0 FROM vt0, rt0 GROUP BY rt0.c2, vt0.c1, vt0.c2, rt0.c0;
SELECT rt0.c2, vt0.c1, vt0.c2, rt0.c0 FROM vt0, rt0 WHERE (json_extract(rt0.c1 COLLATE BINARY, CAST(rt0.c2 AS NUMERIC))) GROUP BY rt0.c2, vt0.c1, vt0.c2, rt0.c0 UNION SELECT ALL rt0.c2, vt0.c1, vt0.c2, rt0.c0 FROM vt0, rt0 WHERE ((NOT (json_extract(rt0.c1 COLLATE BINARY, CAST(rt0.c2 AS NUMERIC))))) GROUP BY rt0.c2, vt0.c1, vt0.c2, rt0.c0 UNION SELECT ALL rt0.c2, vt0.c1, vt0.c2, rt0.c0 FROM vt0, rt0 WHERE (((json_extract(rt0.c1 COLLATE BINARY, CAST(rt0.c2 AS NUMERIC))) ISNULL)) GROUP BY rt0.c2, vt0.c1, vt0.c2, rt0.c0;
SELECT rt0.c1, rt0.c2, vt0.c1, rt0.c0 FROM rt0, vt0 GROUP BY rt0.c1, rt0.c2, vt0.c1, rt0.c0;
SELECT ALL rt0.c1, rt0.c2, vt0.c1, rt0.c0 FROM rt0, vt0 GROUP BY rt0.c1, rt0.c2, vt0.c1, rt0.c0 HAVING LIKELIHOOD(DISTINCT GROUP_CONCAT(TOTAL(TOTAL(MAX(rt0.c1)))), 0.6231619398651685) UNION ALL SELECT rt0.c1, rt0.c2, vt0.c1, rt0.c0 FROM rt0, vt0 GROUP BY rt0.c1, rt0.c2, vt0.c1, rt0.c0 HAVING (NOT (LIKELIHOOD(DISTINCT GROUP_CONCAT(TOTAL(TOTAL(MAX(rt0.c1)))), 0.6231619398651685))) UNION ALL SELECT rt0.c1, rt0.c2, vt0.c1, rt0.c0 FROM rt0, vt0 GROUP BY rt0.c1, rt0.c2, vt0.c1, rt0.c0 HAVING ((LIKELIHOOD(DISTINCT GROUP_CONCAT(TOTAL(TOTAL(MAX(rt0.c1)))), 0.6231619398651685)) ISNULL);
SELECT ALL * FROM rt0 INNER JOIN vt0 ON x'';
SELECT ALL * FROM rt0 INNER JOIN vt0 ON x'' WHERE ((CAST(vt0.c1 AS REAL) IN ())) UNION ALL SELECT ALL * FROM rt0 INNER JOIN vt0 ON x'' WHERE ((NOT ((CAST(vt0.c1 AS REAL) IN ())))) UNION ALL SELECT ALL * FROM rt0 INNER JOIN vt0 ON x'' WHERE ((((CAST(vt0.c1 AS REAL) IN ())) ISNULL));
SELECT ALL * FROM rt0 INNER JOIN vt0 ON x'';
SELECT DISTINCT * FROM vt0 NATURAL JOIN rt0;
SELECT DISTINCT * FROM vt0 NATURAL JOIN rt0 WHERE ((~ (((vt0.c2)|(vt0.c2))))) UNION SELECT DISTINCT * FROM vt0 NATURAL JOIN rt0 WHERE ((NOT ((~ (((vt0.c2)|(vt0.c2))))))) UNION SELECT DISTINCT * FROM vt0 NATURAL JOIN rt0 WHERE ((((~ (((vt0.c2)|(vt0.c2))))) ISNULL));
SELECT DISTINCT * FROM vt0 NATURAL JOIN rt0;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c2 FROM rt0 WHERE ((+ (((NULL)<=(rt0.c2))))) GROUP BY rt0.c0, rt0.c2 UNION SELECT rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT ((+ (((NULL)<=(rt0.c2))))))) GROUP BY rt0.c0, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c2 FROM rt0 WHERE ((((+ (((NULL)<=(rt0.c2))))) ISNULL)) GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT vt0.c1, vt0.c2 FROM vt0 GROUP BY vt0.c1, vt0.c2;
SELECT ALL vt0.c1, vt0.c2 FROM vt0 GROUP BY vt0.c1, vt0.c2 HAVING AVG(COUNT(vt0.c1)) UNION ALL SELECT vt0.c1, vt0.c2 FROM vt0 GROUP BY vt0.c1, vt0.c2 HAVING (NOT (AVG(COUNT(vt0.c1)))) UNION ALL SELECT ALL vt0.c1, vt0.c2 FROM vt0 GROUP BY vt0.c1, vt0.c2 HAVING ((AVG(COUNT(vt0.c1))) ISNULL);
SELECT * FROM vt0, rt0;
SELECT ALL * FROM vt0, rt0 WHERE (((((((((((vt0.c1)<<(rt0.c1)))AND(CAST(vt0.c0 AS INTEGER))))OR(CASE WHEN x'' THEN 377027457 ELSE vt0.c1 END)))OR(CAST('-1479666129' AS INTEGER))))AND(CAST(rt0.c0 AS REAL)))) UNION ALL SELECT * FROM vt0, rt0 WHERE ((NOT (((((((((((vt0.c1)<<(rt0.c1)))AND(CAST(vt0.c0 AS INTEGER))))OR(CASE WHEN x'' THEN 377027457 ELSE vt0.c1 END)))OR(CAST('-1479666129' AS INTEGER))))AND(CAST(rt0.c0 AS REAL)))))) UNION ALL SELECT * FROM vt0, rt0 WHERE (((((((((((((vt0.c1)<<(rt0.c1)))AND(CAST(vt0.c0 AS INTEGER))))OR(CASE WHEN x'' THEN 377027457 ELSE vt0.c1 END)))OR(CAST('-1479666129' AS INTEGER))))AND(CAST(rt0.c0 AS REAL)))) ISNULL));
SELECT * FROM vt0, rt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE ('.Ty''5\E.%') UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT ('.Ty''5\E.%'))) UNION SELECT DISTINCT * FROM vt0 WHERE ((('.Ty''5\E.%') ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT vt0.c2, rt0.c1, vt0.c0, rt0.c2 FROM rt0, vt0 GROUP BY vt0.c2, rt0.c1, vt0.c0, rt0.c2;
SELECT ALL vt0.c2, rt0.c1, vt0.c0, rt0.c2 FROM rt0, vt0 WHERE (((CASE WHEN rt0.c1 THEN -1031116999 END) ISNULL)) GROUP BY vt0.c2, rt0.c1, vt0.c0, rt0.c2 UNION SELECT vt0.c2, rt0.c1, vt0.c0, rt0.c2 FROM rt0, vt0 WHERE ((NOT (((CASE WHEN rt0.c1 THEN -1031116999 END) ISNULL)))) GROUP BY vt0.c2, rt0.c1, vt0.c0, rt0.c2 UNION SELECT ALL vt0.c2, rt0.c1, vt0.c0, rt0.c2 FROM rt0, vt0 WHERE (((((CASE WHEN rt0.c1 THEN -1031116999 END) ISNULL)) ISNULL)) GROUP BY vt0.c2, rt0.c1, vt0.c0, rt0.c2;
SELECT vt0.c2, rt0.c1, vt0.c0, rt0.c2 FROM rt0, vt0 GROUP BY vt0.c2, rt0.c1, vt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 FULL OUTER JOIN vt0 ON ((x'e5d2')AND((~ ('377947882')))) GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 FULL OUTER JOIN vt0 ON ((x'e5d2')AND((~ ('377947882')))) GROUP BY rt0.c1, rt0.c2 HAVING ABS(MAX(vt0.c0)) UNION ALL SELECT ALL rt0.c1, rt0.c2 FROM rt0 FULL OUTER JOIN vt0 ON ((x'e5d2')AND((~ ('377947882')))) GROUP BY rt0.c1, rt0.c2 HAVING (NOT (ABS(MAX(vt0.c0)))) UNION ALL SELECT ALL rt0.c1, rt0.c2 FROM rt0 FULL OUTER JOIN vt0 ON ((x'e5d2')AND((~ ('377947882')))) GROUP BY rt0.c1, rt0.c2 HAVING ((ABS(MAX(vt0.c0))) ISNULL);
SELECT ALL rt0.c1, rt0.c2 FROM rt0 FULL OUTER JOIN vt0 ON ((x'e5d2')AND((~ ('377947882')))) GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 FULL OUTER JOIN vt0 ON ((x'e5d2')AND((~ ('377947882')))) GROUP BY rt0.c1, rt0.c2 HAVING ABS(MAX(vt0.c0)) UNION ALL SELECT ALL rt0.c1, rt0.c2 FROM rt0 FULL OUTER JOIN vt0 ON ((x'e5d2')AND((~ ('377947882')))) GROUP BY rt0.c1, rt0.c2 HAVING (NOT (ABS(MAX(vt0.c0)))) UNION ALL SELECT ALL rt0.c1, rt0.c2 FROM rt0 FULL OUTER JOIN vt0 ON ((x'e5d2')AND((~ ('377947882')))) GROUP BY rt0.c1, rt0.c2 HAVING ((ABS(MAX(vt0.c0))) ISNULL);
SELECT ALL rt0.c1, rt0.c2 FROM rt0 FULL OUTER JOIN vt0 ON ((x'e5d2')AND((~ ('377947882')))) GROUP BY rt0.c1, rt0.c2;
SELECT ALL * FROM rt0 INNER JOIN vt0 ON ((((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1)))GLOB(0.578230854617583));
SELECT ALL * FROM rt0 INNER JOIN vt0 ON ((((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1)))GLOB(0.578230854617583)) WHERE (COALESCE(((rt0.c0) BETWEEN (rt0.c1) AND (vt0.c0)), CAST(vt0.c0 AS TEXT))) UNION ALL SELECT * FROM rt0 INNER JOIN vt0 ON ((((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1)))GLOB(0.578230854617583)) WHERE ((NOT (COALESCE(((rt0.c0) BETWEEN (rt0.c1) AND (vt0.c0)), CAST(vt0.c0 AS TEXT))))) UNION ALL SELECT ALL * FROM rt0 INNER JOIN vt0 ON ((((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1)))GLOB(0.578230854617583)) WHERE (((COALESCE(((rt0.c0) BETWEEN (rt0.c1) AND (vt0.c0)), CAST(vt0.c0 AS TEXT))) ISNULL));
SELECT ALL * FROM rt0 INNER JOIN vt0 ON ((((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1)))GLOB(0.578230854617583));
SELECT DISTINCT * FROM rt0, vt0;
SELECT DISTINCT * FROM rt0, vt0 WHERE (((((vt0.c2) NOT NULL))LIKE(HEX(rt0.c0)))) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE ((NOT (((((vt0.c2) NOT NULL))LIKE(HEX(rt0.c0)))))) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE (((((((vt0.c2) NOT NULL))LIKE(HEX(rt0.c0)))) ISNULL));
SELECT DISTINCT * FROM rt0, vt0;
SELECT ALL vt0.c2 FROM vt0 GROUP BY vt0.c2;
SELECT vt0.c2 FROM vt0 WHERE (vt0.c0) GROUP BY vt0.c2 UNION SELECT vt0.c2 FROM vt0 WHERE ((NOT (vt0.c0))) GROUP BY vt0.c2 UNION SELECT vt0.c2 FROM vt0 WHERE (((vt0.c0) ISNULL)) GROUP BY vt0.c2;
SELECT ALL vt0.c2 FROM vt0 GROUP BY vt0.c2;
SELECT vt0.c0, vt0.c2 FROM vt0 GROUP BY vt0.c0, vt0.c2;
SELECT ALL vt0.c0, vt0.c2 FROM vt0 NOT INDEXED GROUP BY vt0.c0, vt0.c2 HAVING COUNT(*) UNION ALL SELECT vt0.c0, vt0.c2 FROM vt0 GROUP BY vt0.c0, vt0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt0.c0, vt0.c2 FROM vt0 GROUP BY vt0.c0, vt0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT vt0.c0, vt0.c2 FROM vt0 GROUP BY vt0.c0, vt0.c2;
SELECT ALL vt0.c0, vt0.c2 FROM vt0 NOT INDEXED GROUP BY vt0.c0, vt0.c2 HAVING COUNT(*) UNION ALL SELECT vt0.c0, vt0.c2 FROM vt0 GROUP BY vt0.c0, vt0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt0.c0, vt0.c2 FROM vt0 GROUP BY vt0.c0, vt0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT vt0.c0, vt0.c2 FROM vt0 GROUP BY vt0.c0, vt0.c2;
SELECT ALL MIN(CASE WHEN (((vt0.c2))<=((vt0.c0))) THEN '&3KO#' ELSE (((vt0.c1))>((vt0.c1))) END) FROM vt0 ORDER BY ((ABS(vt0.c0)) IS TRUE) DESC;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((rt0.c0 IN (CASE WHEN rt0.c1 THEN rt0.c1 END, (((x'fad7'))==((rt0.c0)))))) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT ((rt0.c0 IN (CASE WHEN rt0.c1 THEN rt0.c1 END, (((x'fad7'))==((rt0.c0)))))))) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((((rt0.c0 IN (CASE WHEN rt0.c1 THEN rt0.c1 END, (((x'fad7'))==((rt0.c0)))))) ISNULL));
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c1 FROM vt0, rt0;
SELECT DISTINCT rt0.c1 FROM vt0, rt0 WHERE ((CAST(vt0.c1 AS NUMERIC) IN (ABS(rt0.c0), ((vt0.c0)+(rt0.c1))))) UNION SELECT DISTINCT rt0.c1 FROM vt0, rt0 WHERE ((NOT ((CAST(vt0.c1 AS NUMERIC) IN (ABS(rt0.c0), ((vt0.c0)+(rt0.c1))))))) UNION SELECT DISTINCT rt0.c1 FROM vt0, rt0 WHERE ((((CAST(vt0.c1 AS NUMERIC) IN (ABS(rt0.c0), ((vt0.c0)+(rt0.c1))))) ISNULL));
SELECT DISTINCT rt0.c1 FROM vt0, rt0;
SELECT vt0.c2, rt0.c1, vt0.c1, vt0.c0, rt0.c2, rt0.c0 FROM vt0, rt0 GROUP BY vt0.c2, rt0.c1, vt0.c1, vt0.c0, rt0.c2, rt0.c0;
SELECT vt0.c2, rt0.c1, vt0.c1, vt0.c0, rt0.c2, rt0.c0 FROM vt0, rt0 WHERE (((((NOT (rt0.c1))))>=((((rt0.c2) NOT BETWEEN (rt0.c1) AND (x'')))))) GROUP BY vt0.c2, rt0.c1, vt0.c1, vt0.c0, rt0.c2, rt0.c0 UNION SELECT vt0.c2, rt0.c1, vt0.c1, vt0.c0, rt0.c2, rt0.c0 FROM vt0, rt0 WHERE ((NOT (((((NOT (rt0.c1))))>=((((rt0.c2) NOT BETWEEN (rt0.c1) AND (x'')))))))) GROUP BY vt0.c2, rt0.c1, vt0.c1, vt0.c0, rt0.c2, rt0.c0 UNION SELECT ALL vt0.c2, rt0.c1, vt0.c1, vt0.c0, rt0.c2, rt0.c0 FROM vt0, rt0 WHERE (((((((NOT (rt0.c1))))>=((((rt0.c2) NOT BETWEEN (rt0.c1) AND (x'')))))) ISNULL)) GROUP BY vt0.c2, rt0.c1, vt0.c1, vt0.c0, rt0.c2, rt0.c0;
SELECT vt0.c2, rt0.c1, vt0.c1, vt0.c0, rt0.c2, rt0.c0 FROM vt0, rt0 GROUP BY vt0.c2, rt0.c1, vt0.c1, vt0.c0, rt0.c2, rt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 NOT INDEXED GROUP BY vt0.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 NOT INDEXED GROUP BY vt0.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT * FROM vt0 NATURAL JOIN rt0;
SELECT * FROM vt0 NATURAL JOIN rt0 WHERE (((((rt0.c2)||(rt0.c0))) ISNULL)) UNION ALL SELECT ALL * FROM vt0 NATURAL JOIN rt0 WHERE ((NOT (((((rt0.c2)||(rt0.c0))) ISNULL)))) UNION ALL SELECT ALL * FROM vt0 NATURAL JOIN rt0 WHERE (((((((rt0.c2)||(rt0.c0))) ISNULL)) ISNULL));
SELECT * FROM vt0 NATURAL JOIN rt0;
SELECT DISTINCT vt0.c0, vt0.c2 FROM vt0;
SELECT DISTINCT vt0.c0, vt0.c2 FROM vt0 WHERE (((((vt0.c0))>((vt0.c0))) IN ())) UNION SELECT DISTINCT vt0.c0, vt0.c2 FROM vt0 WHERE ((NOT (((((vt0.c0))>((vt0.c0))) IN ())))) UNION SELECT DISTINCT vt0.c0, vt0.c2 FROM vt0 WHERE (((((((vt0.c0))>((vt0.c0))) IN ())) ISNULL));
SELECT DISTINCT vt0.c0, vt0.c2 FROM vt0;
SELECT vt0.c0, vt0.c2, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c2, vt0.c1;
SELECT vt0.c0, vt0.c2, vt0.c1 FROM vt0 WHERE (LENGTH(NULL)) GROUP BY vt0.c0, vt0.c2, vt0.c1 UNION SELECT vt0.c0, vt0.c2, vt0.c1 FROM vt0 WHERE ((NOT (LENGTH(NULL)))) GROUP BY vt0.c0, vt0.c2, vt0.c1 UNION SELECT ALL vt0.c0, vt0.c2, vt0.c1 FROM vt0 WHERE (((LENGTH(NULL)) ISNULL)) GROUP BY vt0.c0, vt0.c2, vt0.c1;
SELECT vt0.c0, vt0.c2, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c2, vt0.c1;
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING MAX(COUNT(*)) UNION ALL SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING (NOT (MAX(COUNT(*)))) UNION ALL SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING ((MAX(COUNT(*))) ISNULL);
SELECT * FROM vt0;
SELECT ALL * FROM vt0 WHERE (((LOWER(vt0.c0))==(CAST(vt0.c2 AS INTEGER)))) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (((LOWER(vt0.c0))==(CAST(vt0.c2 AS INTEGER)))))) UNION ALL SELECT * FROM vt0 WHERE (((((LOWER(vt0.c0))==(CAST(vt0.c2 AS INTEGER)))) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((CAST(vt0.c2 AS REAL))OR(((vt0.c0)<<(vt0.c0))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((CAST(vt0.c2 AS REAL))OR(((vt0.c0)<<(vt0.c0))))))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((CAST(vt0.c2 AS REAL))OR(((vt0.c0)<<(vt0.c0))))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 WHERE (0.47715466628430947) GROUP BY rt0.c1, rt0.c0 UNION SELECT rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (0.47715466628430947))) GROUP BY rt0.c1, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c0 FROM rt0 WHERE (((0.47715466628430947) ISNULL)) GROUP BY rt0.c1, rt0.c0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING TOTAL(((((((((vt0.c0)OR(vt0.c2)))OR(vt0.c2)))OR(MAX(vt0.c1))))OR(vt0.c2))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (TOTAL(((((((((vt0.c0)OR(vt0.c2)))OR(vt0.c2)))OR(MAX(vt0.c1))))OR(vt0.c2))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((TOTAL(((((((((vt0.c0)OR(vt0.c2)))OR(vt0.c2)))OR(MAX(vt0.c1))))OR(vt0.c2)))) ISNULL);
SELECT MAX(((rt0.c2 COLLATE NOCASE) NOT BETWEEN ('ie袧舜P[^f') AND ((((rt0.c0))<((rt0.c1)))))) FROM rt0, vt0;
SELECT ALL * FROM vt0;
SELECT ALL * FROM vt0 WHERE (SQLITE_VERSION()) UNION ALL SELECT * FROM vt0 WHERE ((NOT (SQLITE_VERSION()))) UNION ALL SELECT * FROM vt0 WHERE (((SQLITE_VERSION()) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT vt0.c1, rt0.c0, rt0.c2, vt0.c0, vt0.c2, rt0.c1 FROM vt0 RIGHT OUTER JOIN rt0 ON (((((((rt0.c1)OR(rt0.c0)))OR(rt0.c0)), ((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0)), (((vt0.c2)) NOT BETWEEN ((0.6952975278938471)) AND ((rt0.c2)))))<>((CASE WHEN vt0.c0 THEN rt0.c0 ELSE rt0.c2 END, (((vt0.c1, 0.8036366767339403, rt0.c1)) BETWEEN ((vt0.c2, rt0.c2, rt0.c1)) AND ((rt0.c2, rt0.c0, rt0.c2))), CASE vt0.c2  WHEN rt0.c0 THEN vt0.c0 END)));
SELECT DISTINCT vt0.c1, rt0.c0, rt0.c2, vt0.c0, vt0.c2, rt0.c1 FROM vt0 RIGHT OUTER JOIN rt0 ON (((((((rt0.c1)OR(rt0.c0)))OR(rt0.c0)), ((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0)), (((vt0.c2)) NOT BETWEEN ((0.6952975278938471)) AND ((rt0.c2)))))<>((CASE WHEN vt0.c0 THEN rt0.c0 ELSE rt0.c2 END, (((vt0.c1, 0.8036366767339403, rt0.c1)) BETWEEN ((vt0.c2, rt0.c2, rt0.c1)) AND ((rt0.c2, rt0.c0, rt0.c2))), CASE vt0.c2  WHEN rt0.c0 THEN vt0.c0 END))) WHERE (CASE WHEN ((((((((((((rt0.c1)AND(vt0.c0)))OR(rt0.c1)))OR(vt0.c0)))AND(vt0.c2)))AND(vt0.c2)))AND(rt0.c1)) THEN ((rt0.c0) BETWEEN (vt0.c2) AND (rt0.c1)) END) UNION SELECT DISTINCT vt0.c1, rt0.c0, rt0.c2, vt0.c0, vt0.c2, rt0.c1 FROM vt0 RIGHT OUTER JOIN rt0 ON (((((((rt0.c1)OR(rt0.c0)))OR(rt0.c0)), ((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0)), (((vt0.c2)) NOT BETWEEN ((0.6952975278938471)) AND ((rt0.c2)))))!=((CASE WHEN vt0.c0 THEN rt0.c0 ELSE rt0.c2 END, (((vt0.c1, 0.8036366767339403, rt0.c1)) BETWEEN ((vt0.c2, rt0.c2, rt0.c1)) AND ((rt0.c2, rt0.c0, rt0.c2))), CASE vt0.c2  WHEN rt0.c0 THEN vt0.c0 END))) WHERE ((NOT (CASE WHEN ((((((((((((rt0.c1)AND(vt0.c0)))OR(rt0.c1)))OR(vt0.c0)))AND(vt0.c2)))AND(vt0.c2)))AND(rt0.c1)) THEN ((rt0.c0) BETWEEN (vt0.c2) AND (rt0.c1)) END))) UNION SELECT DISTINCT vt0.c1, rt0.c0, rt0.c2, vt0.c0, vt0.c2, rt0.c1 FROM vt0 RIGHT OUTER JOIN rt0 ON (((((((rt0.c1)OR(rt0.c0)))OR(rt0.c0)), ((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0)), (((vt0.c2)) NOT BETWEEN ((0.6952975278938471)) AND ((rt0.c2)))))<>((CASE WHEN vt0.c0 THEN rt0.c0 ELSE rt0.c2 END, (((vt0.c1, 0.8036366767339403, rt0.c1)) BETWEEN ((vt0.c2, rt0.c2, rt0.c1)) AND ((rt0.c2, rt0.c0, rt0.c2))), CASE vt0.c2  WHEN rt0.c0 THEN vt0.c0 END))) WHERE (((CASE WHEN ((((((((((((rt0.c1)AND(vt0.c0)))OR(rt0.c1)))OR(vt0.c0)))AND(vt0.c2)))AND(vt0.c2)))AND(rt0.c1)) THEN ((rt0.c0) BETWEEN (vt0.c2) AND (rt0.c1)) END) ISNULL));
SELECT DISTINCT vt0.c1, rt0.c0, rt0.c2, vt0.c0, vt0.c2, rt0.c1 FROM vt0 RIGHT OUTER JOIN rt0 ON (((((((rt0.c1)OR(rt0.c0)))OR(rt0.c0)), ((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0)), (((vt0.c2)) NOT BETWEEN ((0.6952975278938471)) AND ((rt0.c2)))))<>((CASE WHEN vt0.c0 THEN rt0.c0 ELSE rt0.c2 END, (((vt0.c1, 0.8036366767339403, rt0.c1)) BETWEEN ((vt0.c2, rt0.c2, rt0.c1)) AND ((rt0.c2, rt0.c0, rt0.c2))), CASE vt0.c2  WHEN rt0.c0 THEN vt0.c0 END)));
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (((((rt0.c1) NOTNULL))!=(rt0.c1))) GROUP BY rt0.c1, rt0.c0, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (((((rt0.c1) NOTNULL))<>(rt0.c1))))) GROUP BY rt0.c1, rt0.c0, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (((((((rt0.c1) NOTNULL))<>(rt0.c1))) ISNULL)) GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING NULL UNION ALL SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING (NOT (NULL)) UNION ALL SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING ((NULL) ISNULL);
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING NULL UNION ALL SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING (NOT (NULL)) UNION ALL SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING ((NULL) ISNULL);
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL TOTAL((NOT (((((rt0.c2)OR(rt0.c2)))AND(rt0.c2))))) FROM rt0, vt0;
SELECT * FROM vt0;
SELECT * FROM vt0 WHERE ((((('{-鑒I[') NOT BETWEEN (vt0.c1) AND (vt0.c1))) NOT BETWEEN ((NOT ('U?*Xtn#6/'))) AND ((NOT (vt0.c0))))) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT ((((('{-鑒I[') NOT BETWEEN (vt0.c1) AND (vt0.c1))) NOT BETWEEN ((NOT ('U?*Xtn#6/'))) AND ((NOT (vt0.c0))))))) UNION ALL SELECT * FROM vt0 WHERE ((((((('{-鑒I[') NOT BETWEEN (vt0.c1) AND (vt0.c1))) NOT BETWEEN ((NOT ('U?*Xtn#6/'))) AND ((NOT (vt0.c0))))) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT rt0.c0, vt0.c1, vt0.c2, rt0.c2, rt0.c1 FROM vt0, rt0;
SELECT DISTINCT rt0.c0, vt0.c1, vt0.c2, rt0.c2, rt0.c1 FROM vt0, rt0 WHERE ((~ (((((vt0.c2)OR(vt0.c2)))AND(vt0.c1))))) UNION SELECT DISTINCT rt0.c0, vt0.c1, vt0.c2, rt0.c2, rt0.c1 FROM vt0, rt0 WHERE ((NOT ((~ (((((vt0.c2)OR(vt0.c2)))AND(vt0.c1))))))) UNION SELECT DISTINCT rt0.c0, vt0.c1, vt0.c2, rt0.c2, rt0.c1 FROM vt0, rt0 WHERE ((((~ (((((vt0.c2)OR(vt0.c2)))AND(vt0.c1))))) ISNULL));
SELECT DISTINCT rt0.c0, vt0.c1, vt0.c2, rt0.c2, rt0.c1 FROM vt0, rt0;
SELECT vt0.c1, rt0.c2 FROM rt0, vt0 GROUP BY vt0.c1, rt0.c2;
SELECT vt0.c1, rt0.c2 FROM rt0, vt0 WHERE ((~ (CASE vt0.c0  WHEN rt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN NULL THEN vt0.c1 WHEN rt0.c0 THEN vt0.c0 WHEN vt0.c2 THEN vt0.c0 ELSE vt0.c0 END))) GROUP BY vt0.c1, rt0.c2 UNION SELECT ALL vt0.c1, rt0.c2 FROM rt0, vt0 WHERE ((NOT ((~ (CASE vt0.c0  WHEN rt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN NULL THEN vt0.c1 WHEN rt0.c0 THEN vt0.c0 WHEN vt0.c2 THEN vt0.c0 ELSE vt0.c0 END))))) GROUP BY vt0.c1, rt0.c2 UNION SELECT ALL vt0.c1, rt0.c2 FROM rt0, vt0 WHERE ((((~ (CASE vt0.c0  WHEN rt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN NULL THEN vt0.c1 WHEN rt0.c0 THEN vt0.c0 WHEN vt0.c2 THEN vt0.c0 ELSE vt0.c0 END))) ISNULL)) GROUP BY vt0.c1, rt0.c2;
SELECT vt0.c1, rt0.c2 FROM rt0, vt0 GROUP BY vt0.c1, rt0.c2;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING CAST(vt0.c1 AS NUMERIC) COLLATE BINARY UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (CAST(vt0.c1 AS NUMERIC) COLLATE BINARY)) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((CAST(vt0.c1 AS NUMERIC) COLLATE BINARY) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING CAST(vt0.c1 AS NUMERIC) COLLATE BINARY UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (CAST(vt0.c1 AS NUMERIC) COLLATE BINARY)) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((CAST(vt0.c1 AS NUMERIC) COLLATE BINARY) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT * FROM vt0;
SELECT ALL * FROM vt0 WHERE ((NULL IN (vt0.c1 COLLATE BINARY, ((vt0.c0)%(vt0.c2))))) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT ((NULL IN (vt0.c1 COLLATE BINARY, ((vt0.c0)%(vt0.c2))))))) UNION ALL SELECT ALL * FROM vt0 WHERE ((((NULL IN (vt0.c1 COLLATE BINARY, ((vt0.c0)%(vt0.c2))))) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT * FROM vt0 INNER JOIN rt0 ON CAST(CASE WHEN rt0.c1 THEN NULL ELSE vt0.c1 END AS BLOB);
SELECT DISTINCT * FROM vt0 INNER JOIN rt0 ON CAST(CASE WHEN rt0.c1 THEN NULL ELSE vt0.c1 END AS BLOB) WHERE (((rt0.c0) NOT NULL) COLLATE NOCASE) UNION SELECT DISTINCT * FROM vt0 INNER JOIN rt0 ON CAST(CASE WHEN rt0.c1 THEN NULL ELSE vt0.c1 END AS BLOB) WHERE ((NOT (((rt0.c0) NOT NULL) COLLATE NOCASE))) UNION SELECT DISTINCT * FROM vt0 INNER JOIN rt0 ON CAST(CASE WHEN rt0.c1 THEN NULL ELSE vt0.c1 END AS BLOB) WHERE (((((rt0.c0) NOT NULL) COLLATE NOCASE) ISNULL));
SELECT DISTINCT * FROM vt0 INNER JOIN rt0 ON CAST(CASE WHEN rt0.c1 THEN NULL ELSE vt0.c1 END AS BLOB);
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((((rt0.c1)) BETWEEN ((CASE WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c2 END)) AND ((((rt0.c2)&(rt0.c0)))))) GROUP BY rt0.c2, rt0.c0, rt0.c1 UNION SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT ((((rt0.c1)) BETWEEN ((CASE WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c2 END)) AND ((((rt0.c2)&(rt0.c0)))))))) GROUP BY rt0.c2, rt0.c0, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((((((rt0.c1)) BETWEEN ((CASE WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c2 END)) AND ((((rt0.c2)&(rt0.c0)))))) ISNULL)) GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c1, vt0.c0, vt0.c2, rt0.c0, rt0.c2 FROM rt0, vt0 GROUP BY rt0.c1, vt0.c0, vt0.c2, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, vt0.c0, vt0.c2, rt0.c0, rt0.c2 FROM rt0, vt0 GROUP BY rt0.c1, vt0.c0, vt0.c2, rt0.c0, rt0.c2 HAVING MAX(GROUP_CONCAT(COUNT(vt0.c0))) UNION ALL SELECT rt0.c1, vt0.c0, vt0.c2, rt0.c0, rt0.c2 FROM rt0, vt0 GROUP BY rt0.c1, vt0.c0, vt0.c2, rt0.c0, rt0.c2 HAVING (NOT (MAX(GROUP_CONCAT(COUNT(vt0.c0))))) UNION ALL SELECT rt0.c1, vt0.c0, vt0.c2, rt0.c0, rt0.c2 FROM rt0, vt0 GROUP BY rt0.c1, vt0.c0, vt0.c2, rt0.c0, rt0.c2 HAVING ((MAX(GROUP_CONCAT(COUNT(vt0.c0)))) ISNULL);
SELECT ALL MIN(CAST(((vt0.c1)>=(rt0.c2)) AS BLOB)) FROM vt0, rt0;
SELECT * FROM vt0;
SELECT * FROM vt0 WHERE (((vt0.c1 COLLATE NOCASE) ISNULL)) UNION ALL SELECT * FROM vt0 WHERE ((NOT (((vt0.c1 COLLATE NOCASE) ISNULL)))) UNION ALL SELECT * FROM vt0 WHERE (((((vt0.c1 COLLATE NOCASE) ISNULL)) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((x'')IS NOT(CAST(vt0.c2 AS NUMERIC)))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((x'')IS NOT(CAST(vt0.c2 AS NUMERIC)))))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((x'')IS NOT(CAST(vt0.c2 AS NUMERIC)))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT rt0.c2, vt0.c0, vt0.c2, vt0.c1 FROM vt0, rt0 GROUP BY rt0.c2, vt0.c0, vt0.c2, vt0.c1;
SELECT ALL rt0.c2, vt0.c0, vt0.c2, vt0.c1 FROM vt0, rt0 WHERE ((~ (rt0.c1)) COLLATE RTRIM) GROUP BY rt0.c2, vt0.c0, vt0.c2, vt0.c1 UNION SELECT ALL rt0.c2, vt0.c0, vt0.c2, vt0.c1 FROM vt0, rt0 WHERE ((NOT ((~ (rt0.c1)) COLLATE RTRIM))) GROUP BY rt0.c2, vt0.c0, vt0.c2, vt0.c1 UNION SELECT ALL rt0.c2, vt0.c0, vt0.c2, vt0.c1 FROM vt0, rt0 WHERE ((((~ (rt0.c1)) COLLATE RTRIM) ISNULL)) GROUP BY rt0.c2, vt0.c0, vt0.c2, vt0.c1;
SELECT rt0.c2, vt0.c0, vt0.c2, vt0.c1 FROM vt0, rt0 GROUP BY rt0.c2, vt0.c0, vt0.c2, vt0.c1;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING ((((rt0.c0)<(COUNT(*)))) BETWEEN (AVG(rt0.c1)) AND (SUM(AVG(MAX(rt0.c1))))) UNION ALL SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (NOT (((((rt0.c0)<(COUNT(*)))) BETWEEN (AVG(rt0.c1)) AND (SUM(AVG(MAX(rt0.c1))))))) UNION ALL SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING ((((((rt0.c0)<(COUNT(*)))) BETWEEN (AVG(rt0.c1)) AND (SUM(AVG(MAX(rt0.c1)))))) ISNULL);
SELECT * FROM vt0, rt0;
SELECT * FROM vt0, rt0 WHERE (vt0.c2) UNION ALL SELECT ALL * FROM vt0, rt0 WHERE ((NOT (vt0.c2))) UNION ALL SELECT * FROM vt0, rt0 WHERE (((vt0.c2) ISNULL));
SELECT * FROM vt0, rt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (CAST(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) AS BLOB)) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (CAST(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) AS BLOB)))) UNION SELECT DISTINCT * FROM vt0 WHERE (((CAST(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) AS BLOB)) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL vt0.c0, rt0.c1, rt0.c0, vt0.c2, rt0.c2 FROM vt0, rt0 GROUP BY vt0.c0, rt0.c1, rt0.c0, vt0.c2, rt0.c2;
SELECT vt0.c0, rt0.c1, rt0.c0, vt0.c2, rt0.c2 FROM vt0, rt0 WHERE ((~ ((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND (('-1451026705')))))) GROUP BY vt0.c0, rt0.c1, rt0.c0, vt0.c2, rt0.c2 UNION SELECT vt0.c0, rt0.c1, rt0.c0, vt0.c2, rt0.c2 FROM vt0, rt0 WHERE ((NOT ((~ ((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND (('-1451026705')))))))) GROUP BY vt0.c0, rt0.c1, rt0.c0, vt0.c2, rt0.c2 UNION SELECT ALL vt0.c0, rt0.c1, rt0.c0, vt0.c2, rt0.c2 FROM vt0, rt0 WHERE ((((~ ((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND (('-1451026705')))))) ISNULL)) GROUP BY vt0.c0, rt0.c1, rt0.c0, vt0.c2, rt0.c2;
SELECT ALL vt0.c0, rt0.c1, rt0.c0, vt0.c2, rt0.c2 FROM vt0, rt0 GROUP BY vt0.c0, rt0.c1, rt0.c0, vt0.c2, rt0.c2;
SELECT vt0.c2, rt0.c2, vt0.c1, rt0.c0, rt0.c1, vt0.c0 FROM vt0, rt0 GROUP BY vt0.c2, rt0.c2, vt0.c1, rt0.c0, rt0.c1, vt0.c0;
SELECT ALL vt0.c2, rt0.c2, vt0.c1, rt0.c0, rt0.c1, vt0.c0 FROM vt0, rt0 GROUP BY vt0.c2, rt0.c2, vt0.c1, rt0.c0, rt0.c1, vt0.c0 HAVING MAX(((((((((SUM(rt0.c1))OR(SUM(MIN(rt0.c0)))))AND(TOTAL(vt0.c1))))OR('XH|멼24>8\')))AND(TOTAL(vt0.c0)))) UNION ALL SELECT ALL vt0.c2, rt0.c2, vt0.c1, rt0.c0, rt0.c1, vt0.c0 FROM vt0, rt0 GROUP BY vt0.c2, rt0.c2, vt0.c1, rt0.c0, rt0.c1, vt0.c0 HAVING (NOT (MAX(((((((((SUM(rt0.c1))OR(SUM(MIN(rt0.c0)))))AND(TOTAL(vt0.c1))))OR('XH|멼24>8\')))AND(TOTAL(vt0.c0)))))) UNION ALL SELECT ALL vt0.c2, rt0.c2, vt0.c1, rt0.c0, rt0.c1, vt0.c0 FROM vt0, rt0 GROUP BY vt0.c2, rt0.c2, vt0.c1, rt0.c0, rt0.c1, vt0.c0 HAVING ((MAX(((((((((SUM(rt0.c1))OR(SUM(MIN(rt0.c0)))))AND(TOTAL(vt0.c1))))OR('XH|멼24>8\')))AND(TOTAL(vt0.c0))))) ISNULL);
SELECT ALL vt0.c2, rt0.c1, rt0.c0, rt0.c2, vt0.c0, vt0.c1 FROM rt0, vt0;
SELECT vt0.c2, rt0.c1, rt0.c0, rt0.c2, vt0.c0, vt0.c1 FROM rt0, vt0 WHERE (((((vt0.c2)=(vt0.c0))) NOTNULL)) UNION ALL SELECT ALL vt0.c2, rt0.c1, rt0.c0, rt0.c2, vt0.c0, vt0.c1 FROM rt0, vt0 WHERE ((NOT (((((vt0.c2)==(vt0.c0))) NOTNULL)))) UNION ALL SELECT vt0.c2, rt0.c1, rt0.c0, rt0.c2, vt0.c0, vt0.c1 FROM rt0, vt0 WHERE (((((((vt0.c2)=(vt0.c0))) NOTNULL)) ISNULL));
SELECT ALL vt0.c2, rt0.c1, rt0.c0, rt0.c2, vt0.c0, vt0.c1 FROM rt0, vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c2)))OR(vt0.c1)))AND(vt0.c0))) NOT BETWEEN (((vt0.c0)&(vt0.c1))) AND ((+ (vt0.c0))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c2)))OR(vt0.c1)))AND(vt0.c0))) NOT BETWEEN (((vt0.c0)&(vt0.c1))) AND ((+ (vt0.c0))))))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c2)))OR(vt0.c1)))AND(vt0.c0))) NOT BETWEEN (((vt0.c0)&(vt0.c1))) AND ((+ (vt0.c0))))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL rt0.c2, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c2, vt0.c0;
SELECT rt0.c2, vt0.c0 FROM vt0, rt0 WHERE ((((((vt0.c1, vt0.c1, -343480228))<=((rt0.c1, '', vt0.c2))))GLOB(((rt0.c2)<>(vt0.c0))))) GROUP BY rt0.c2, vt0.c0 UNION SELECT ALL rt0.c2, vt0.c0 FROM vt0, rt0 WHERE ((NOT ((((((vt0.c1, vt0.c1, -343480228))<=((rt0.c1, '', vt0.c2))))GLOB(((rt0.c2)!=(vt0.c0))))))) GROUP BY rt0.c2, vt0.c0 UNION SELECT rt0.c2, vt0.c0 FROM vt0, rt0 WHERE ((((((((vt0.c1, vt0.c1, -343480228))<=((rt0.c1, '', vt0.c2))))GLOB(((rt0.c2)!=(vt0.c0))))) ISNULL)) GROUP BY rt0.c2, vt0.c0;
SELECT ALL rt0.c2, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c2, vt0.c0;
SELECT ALL vt0.c0, vt0.c2, rt0.c0, vt0.c1, rt0.c2 FROM rt0, vt0 GROUP BY vt0.c0, vt0.c2, rt0.c0, vt0.c1, rt0.c2;
SELECT vt0.c0, vt0.c2, rt0.c0, vt0.c1, rt0.c2 FROM rt0, vt0 GROUP BY vt0.c0, vt0.c2, rt0.c0, vt0.c1, rt0.c2 HAVING TRIM(DISTINCT ((SUM(AVG(COUNT(rt0.c0)))) NOTNULL)) UNION ALL SELECT ALL vt0.c0, vt0.c2, rt0.c0, vt0.c1, rt0.c2 FROM rt0, vt0 GROUP BY vt0.c0, vt0.c2, rt0.c0, vt0.c1, rt0.c2 HAVING (NOT (TRIM(DISTINCT ((SUM(AVG(COUNT(rt0.c0)))) NOTNULL)))) UNION ALL SELECT vt0.c0, vt0.c2, rt0.c0, vt0.c1, rt0.c2 FROM rt0, vt0 GROUP BY vt0.c0, vt0.c2, rt0.c0, vt0.c1, rt0.c2 HAVING ((TRIM(DISTINCT ((SUM(AVG(COUNT(rt0.c0)))) NOTNULL))) ISNULL);
SELECT ALL vt0.c2, rt0.c0 FROM rt0 FULL OUTER JOIN vt0 ON ((x'')AND(CAST(vt0.c0 AS INTEGER)));
SELECT vt0.c2, rt0.c0 FROM rt0 FULL OUTER JOIN vt0 ON ((x'')AND(CAST(vt0.c0 AS INTEGER))) WHERE ('A') UNION ALL SELECT ALL vt0.c2, rt0.c0 FROM rt0 FULL OUTER JOIN vt0 ON ((x'')AND(CAST(vt0.c0 AS INTEGER))) WHERE ((NOT ('A'))) UNION ALL SELECT vt0.c2, rt0.c0 FROM rt0 FULL OUTER JOIN vt0 ON ((x'')AND(CAST(vt0.c0 AS INTEGER))) WHERE ((('A') ISNULL));
SELECT ALL vt0.c2, rt0.c0 FROM rt0 FULL OUTER JOIN vt0 ON ((x'')AND(CAST(vt0.c0 AS INTEGER)));
SELECT DISTINCT * FROM vt0, rt0;
SELECT DISTINCT * FROM vt0, rt0 WHERE (ABS(((rt0.c2) IS TRUE))) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE ((NOT (ABS(((rt0.c2) IS TRUE))))) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE (((ABS(((rt0.c2) IS TRUE))) ISNULL));
SELECT DISTINCT * FROM vt0, rt0;
SELECT ALL vt0.c1, vt0.c0 FROM rt0, vt0 GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM rt0, vt0 WHERE ((~ ((vt0.c0 IN ())))) GROUP BY vt0.c1, vt0.c0 UNION SELECT ALL vt0.c1, vt0.c0 FROM rt0, vt0 WHERE ((NOT ((~ ((vt0.c0 IN ())))))) GROUP BY vt0.c1, vt0.c0 UNION SELECT vt0.c1, vt0.c0 FROM rt0, vt0 WHERE ((((~ ((vt0.c0 IN ())))) ISNULL)) GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM rt0, vt0 GROUP BY vt0.c1, vt0.c0;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((MIN(rt0.c1))IS(((((rt0.c0)AND(rt0.c0)))AND(rt0.c0)))) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT (((MIN(rt0.c1))IS(((((rt0.c0)AND(rt0.c0)))AND(rt0.c0)))))) UNION ALL SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((((MIN(rt0.c1))IS(((((rt0.c0)AND(rt0.c0)))AND(rt0.c0))))) ISNULL);
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((MIN(rt0.c1))IS(((((rt0.c0)AND(rt0.c0)))AND(rt0.c0)))) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT (((MIN(rt0.c1))IS(((((rt0.c0)AND(rt0.c0)))AND(rt0.c0)))))) UNION ALL SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((((MIN(rt0.c1))IS(((((rt0.c0)AND(rt0.c0)))AND(rt0.c0))))) ISNULL);
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c1, rt0.c0, vt0.c0, vt0.c1, vt0.c2, rt0.c2 FROM vt0, rt0;
SELECT ALL rt0.c1, rt0.c0, vt0.c0, vt0.c1, vt0.c2, rt0.c2 FROM vt0, rt0 WHERE (CASE WHEN (vt0.c2 IN ()) THEN CASE WHEN rt0.c0 THEN rt0.c2 ELSE vt0.c0 END END) UNION ALL SELECT rt0.c1, rt0.c0, vt0.c0, vt0.c1, vt0.c2, rt0.c2 FROM vt0, rt0 WHERE ((NOT (CASE WHEN (vt0.c2 IN ()) THEN CASE WHEN rt0.c0 THEN rt0.c2 ELSE vt0.c0 END END))) UNION ALL SELECT rt0.c1, rt0.c0, vt0.c0, vt0.c1, vt0.c2, rt0.c2 FROM vt0, rt0 WHERE (((CASE WHEN (vt0.c2 IN ()) THEN CASE WHEN rt0.c0 THEN rt0.c2 ELSE vt0.c0 END END) ISNULL));
SELECT ALL rt0.c1, rt0.c0, vt0.c0, vt0.c1, vt0.c2, rt0.c2 FROM vt0, rt0;
SELECT DISTINCT * FROM vt0, rt0;
SELECT DISTINCT * FROM vt0, rt0 WHERE (CASE ((rt0.c2)+(vt0.c1))  WHEN ((vt0.c0) NOT BETWEEN (rt0.c1) AND (vt0.c1)) THEN ((((((((vt0.c1)AND(vt0.c0)))AND(0.5665361378379064)))OR(rt0.c0)))AND(-1.260612678E9)) END) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE ((NOT (CASE ((rt0.c2)+(vt0.c1))  WHEN ((vt0.c0) NOT BETWEEN (rt0.c1) AND (vt0.c1)) THEN ((((((((vt0.c1)AND(vt0.c0)))AND(0.5665361378379064)))OR(rt0.c0)))AND(-1.260612678E9)) END))) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE (((CASE ((rt0.c2)+(vt0.c1))  WHEN ((vt0.c0) NOT BETWEEN (rt0.c1) AND (vt0.c1)) THEN ((((((((vt0.c1)AND(vt0.c0)))AND(0.5665361378379064)))OR(rt0.c0)))AND(-1.260612678E9)) END) ISNULL));
SELECT DISTINCT * FROM vt0, rt0;
SELECT vt0.c2, vt0.c0, vt0.c1, rt0.c1, rt0.c0 FROM rt0, vt0 GROUP BY vt0.c2, vt0.c0, vt0.c1, rt0.c1, rt0.c0;
SELECT ALL vt0.c2, vt0.c0, vt0.c1, rt0.c1, rt0.c0 FROM rt0, vt0 WHERE (((((rt0.c2)/(rt0.c0)))IS(vt0.c0))) GROUP BY vt0.c2, vt0.c0, vt0.c1, rt0.c1, rt0.c0 UNION SELECT ALL vt0.c2, vt0.c0, vt0.c1, rt0.c1, rt0.c0 FROM rt0, vt0 WHERE ((NOT (((((rt0.c2)/(rt0.c0)))IS(vt0.c0))))) GROUP BY vt0.c2, vt0.c0, vt0.c1, rt0.c1, rt0.c0 UNION SELECT ALL vt0.c2, vt0.c0, vt0.c1, rt0.c1, rt0.c0 FROM rt0, vt0 WHERE (((((((rt0.c2)/(rt0.c0)))IS(vt0.c0))) ISNULL)) GROUP BY vt0.c2, vt0.c0, vt0.c1, rt0.c1, rt0.c0;
SELECT vt0.c2, vt0.c0, vt0.c1, rt0.c1, rt0.c0 FROM rt0, vt0 GROUP BY vt0.c2, vt0.c0, vt0.c1, rt0.c1, rt0.c0;
SELECT ALL vt0.c0, vt0.c1, vt0.c2 FROM vt0 GROUP BY vt0.c0, vt0.c1, vt0.c2;
SELECT vt0.c0, vt0.c1, vt0.c2 FROM vt0 GROUP BY vt0.c0, vt0.c1, vt0.c2 HAVING AVG((((MIN(AVG(vt0.c1))))>=((vt0.c1)))) UNION ALL SELECT vt0.c0, vt0.c1, vt0.c2 FROM vt0 GROUP BY vt0.c0, vt0.c1, vt0.c2 HAVING (NOT (AVG((((MIN(AVG(vt0.c1))))>=((vt0.c1)))))) UNION ALL SELECT ALL vt0.c0, vt0.c1, vt0.c2 FROM vt0 GROUP BY vt0.c0, vt0.c1, vt0.c2 HAVING ((AVG((((MIN(AVG(vt0.c1))))>=((vt0.c1))))) ISNULL);
SELECT ALL rt0.c1, vt0.c1, vt0.c0, vt0.c2 FROM rt0, vt0;
SELECT rt0.c1, vt0.c1, vt0.c0, vt0.c2 FROM rt0, vt0 WHERE (((rt0.c1) NOT BETWEEN (vt0.c2) AND (rt0.c2)) COLLATE RTRIM) UNION ALL SELECT rt0.c1, vt0.c1, vt0.c0, vt0.c2 FROM rt0, vt0 WHERE ((NOT (((rt0.c1) NOT BETWEEN (vt0.c2) AND (rt0.c2)) COLLATE RTRIM))) UNION ALL SELECT ALL rt0.c1, vt0.c1, vt0.c0, vt0.c2 FROM rt0, vt0 WHERE (((((rt0.c1) NOT BETWEEN (vt0.c2) AND (rt0.c2)) COLLATE RTRIM) ISNULL));
SELECT ALL rt0.c1, vt0.c1, vt0.c0, vt0.c2 FROM rt0, vt0;
SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE (rt0.c0) UNION SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (rt0.c0))) UNION SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE (((rt0.c0) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2 FROM rt0;
SELECT ALL vt0.c2, vt0.c0 FROM rt0, vt0 GROUP BY vt0.c2, vt0.c0;
SELECT ALL vt0.c2, vt0.c0 FROM rt0, vt0 WHERE ((((('1057513593') NOT BETWEEN (rt0.c2) AND (vt0.c2))) BETWEEN (vt0.c0) AND (IFNULL(DISTINCT rt0.c2, vt0.c1)))) GROUP BY vt0.c2, vt0.c0 UNION SELECT vt0.c2, vt0.c0 FROM rt0, vt0 WHERE ((NOT ((((('1057513593') NOT BETWEEN (rt0.c2) AND (vt0.c2))) BETWEEN (vt0.c0) AND (IFNULL(DISTINCT rt0.c2, vt0.c1)))))) GROUP BY vt0.c2, vt0.c0 UNION SELECT ALL vt0.c2, vt0.c0 FROM rt0, vt0 WHERE ((((((('1057513593') NOT BETWEEN (rt0.c2) AND (vt0.c2))) BETWEEN (vt0.c0) AND (IFNULL(DISTINCT rt0.c2, vt0.c1)))) ISNULL)) GROUP BY vt0.c2, vt0.c0;
SELECT ALL vt0.c2, vt0.c0 FROM rt0, vt0 GROUP BY vt0.c2, vt0.c0;
SELECT vt0.c1, vt0.c0, vt0.c2, rt0.c2, rt0.c1 FROM vt0, rt0 GROUP BY vt0.c1, vt0.c0, vt0.c2, rt0.c2, rt0.c1;
SELECT ALL vt0.c1, vt0.c0, vt0.c2, rt0.c2, rt0.c1 FROM vt0, rt0 GROUP BY vt0.c1, vt0.c0, vt0.c2, rt0.c2, rt0.c1 HAVING GROUP_CONCAT(CAST(TOTAL(COUNT(MIN(GROUP_CONCAT(SUM(MAX(MIN(MIN(AVG(MAX(vt0.c2)))))))))) AS TEXT)) UNION ALL SELECT vt0.c1, vt0.c0, vt0.c2, rt0.c2, rt0.c1 FROM vt0, rt0 GROUP BY vt0.c1, vt0.c0, vt0.c2, rt0.c2, rt0.c1 HAVING (NOT (GROUP_CONCAT(CAST(TOTAL(COUNT(MIN(GROUP_CONCAT(SUM(MAX(MIN(MIN(AVG(MAX(vt0.c2)))))))))) AS TEXT)))) UNION ALL SELECT ALL vt0.c1, vt0.c0, vt0.c2, rt0.c2, rt0.c1 FROM vt0, rt0 GROUP BY vt0.c1, vt0.c0, vt0.c2, rt0.c2, rt0.c1 HAVING ((GROUP_CONCAT(CAST(TOTAL(COUNT(MIN(GROUP_CONCAT(SUM(MAX(MIN(MIN(AVG(MAX(vt0.c2)))))))))) AS TEXT))) ISNULL);
SELECT ALL rt0.c2 FROM rt0, vt0;
SELECT ALL rt0.c2 FROM rt0, vt0 WHERE (((((rt0.c2, rt0.c1, 0.002746570466274023)) BETWEEN ((vt0.c1, rt0.c1, 0xffffffffb085db59)) AND ((vt0.c1, vt0.c0, rt0.c0))) IN ())) UNION ALL SELECT rt0.c2 FROM rt0, vt0 WHERE ((NOT (((((rt0.c2, rt0.c1, 0.002746570466274023)) BETWEEN ((vt0.c1, rt0.c1, 0Xffffffffb085db59)) AND ((vt0.c1, vt0.c0, rt0.c0))) IN ())))) UNION ALL SELECT rt0.c2 FROM rt0, vt0 WHERE (((((((rt0.c2, rt0.c1, 0.002746570466274023)) BETWEEN ((vt0.c1, rt0.c1, 0xffffffffb085db59)) AND ((vt0.c1, vt0.c0, rt0.c0))) IN ())) ISNULL));
SELECT ALL rt0.c2 FROM rt0, vt0;
SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE (((((rt0.c2) IS FALSE)) ISNULL)) UNION SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (((((rt0.c2) IS FALSE)) ISNULL)))) UNION SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE (((((((rt0.c2) IS FALSE)) ISNULL)) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1 FROM rt0;
SELECT ALL vt0.c2 FROM vt0 GROUP BY vt0.c2;
SELECT vt0.c2 FROM vt0 WHERE (((((vt0.c2) BETWEEN (vt0.c1) AND (vt0.c0)))<=(vt0.c1))) GROUP BY vt0.c2 UNION SELECT ALL vt0.c2 FROM vt0 WHERE ((NOT (((((vt0.c2) BETWEEN (vt0.c1) AND (vt0.c0)))<=(vt0.c1))))) GROUP BY vt0.c2 UNION SELECT vt0.c2 FROM vt0 WHERE (((((((vt0.c2) BETWEEN (vt0.c1) AND (vt0.c0)))<=(vt0.c1))) ISNULL)) GROUP BY vt0.c2;
SELECT ALL vt0.c2 FROM vt0 GROUP BY vt0.c2;
SELECT ALL rt0.c0, vt0.c0, vt0.c1, vt0.c2, rt0.c2 FROM vt0, rt0 GROUP BY rt0.c0, vt0.c0, vt0.c1, vt0.c2, rt0.c2;
SELECT rt0.c0, vt0.c0, vt0.c1, vt0.c2, rt0.c2 FROM vt0, rt0 GROUP BY rt0.c0, vt0.c0, vt0.c1, vt0.c2, rt0.c2 HAVING 'EA' COLLATE RTRIM UNION ALL SELECT ALL rt0.c0, vt0.c0, vt0.c1, vt0.c2, rt0.c2 FROM vt0, rt0 GROUP BY rt0.c0, vt0.c0, vt0.c1, vt0.c2, rt0.c2 HAVING (NOT ('EA' COLLATE RTRIM)) UNION ALL SELECT ALL rt0.c0, vt0.c0, vt0.c1, vt0.c2, rt0.c2 FROM vt0, rt0 GROUP BY rt0.c0, vt0.c0, vt0.c1, vt0.c2, rt0.c2 HAVING (('EA' COLLATE RTRIM) ISNULL);
SELECT ALL rt0.c0, vt0.c0, vt0.c1, vt0.c2, rt0.c2 FROM vt0, rt0 GROUP BY rt0.c0, vt0.c0, vt0.c1, vt0.c2, rt0.c2;
SELECT rt0.c0, vt0.c0, vt0.c1, vt0.c2, rt0.c2 FROM vt0, rt0 GROUP BY rt0.c0, vt0.c0, vt0.c1, vt0.c2, rt0.c2 HAVING 'EA' COLLATE RTRIM UNION ALL SELECT ALL rt0.c0, vt0.c0, vt0.c1, vt0.c2, rt0.c2 FROM vt0, rt0 GROUP BY rt0.c0, vt0.c0, vt0.c1, vt0.c2, rt0.c2 HAVING (NOT ('EA' COLLATE RTRIM)) UNION ALL SELECT ALL rt0.c0, vt0.c0, vt0.c1, vt0.c2, rt0.c2 FROM vt0, rt0 GROUP BY rt0.c0, vt0.c0, vt0.c1, vt0.c2, rt0.c2 HAVING (('EA' COLLATE RTRIM) ISNULL);
SELECT ALL rt0.c0, vt0.c0, vt0.c1, vt0.c2, rt0.c2 FROM vt0, rt0 GROUP BY rt0.c0, vt0.c0, vt0.c1, vt0.c2, rt0.c2;
SELECT ALL rt0.c2, vt0.c1, rt0.c1, rt0.c0, vt0.c0, vt0.c2 FROM vt0, rt0;
SELECT ALL rt0.c2, vt0.c1, rt0.c1, rt0.c0, vt0.c0, vt0.c2 FROM vt0, rt0 WHERE (CAST(((((((((vt0.c0)OR(vt0.c0)))AND(rt0.c1)))OR(0xffffffffdbbefc08)))OR(rt0.c0)) AS NUMERIC)) UNION ALL SELECT rt0.c2, vt0.c1, rt0.c1, rt0.c0, vt0.c0, vt0.c2 FROM vt0, rt0 WHERE ((NOT (CAST(((((((((vt0.c0)OR(vt0.c0)))AND(rt0.c1)))OR(0Xffffffffdbbefc08)))OR(rt0.c0)) AS NUMERIC)))) UNION ALL SELECT rt0.c2, vt0.c1, rt0.c1, rt0.c0, vt0.c0, vt0.c2 FROM vt0, rt0 WHERE (((CAST(((((((((vt0.c0)OR(vt0.c0)))AND(rt0.c1)))OR(0Xffffffffdbbefc08)))OR(rt0.c0)) AS NUMERIC)) ISNULL));
SELECT ALL rt0.c2, vt0.c1, rt0.c1, rt0.c0, vt0.c0, vt0.c2 FROM vt0, rt0;
SELECT DISTINCT * FROM rt0, vt0;
SELECT DISTINCT * FROM rt0, vt0 WHERE (((((rt0.c2) NOT BETWEEN (vt0.c1) AND (rt0.c2))) NOT BETWEEN (((vt0.c2)OR(vt0.c2))) AND ((('752637282')AND(''))))) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE ((NOT (((((rt0.c2) NOT BETWEEN (vt0.c1) AND (rt0.c2))) NOT BETWEEN (((vt0.c2)OR(vt0.c2))) AND ((('752637282')AND(''))))))) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE (((((((rt0.c2) NOT BETWEEN (vt0.c1) AND (rt0.c2))) NOT BETWEEN (((vt0.c2)OR(vt0.c2))) AND ((('752637282')AND(''))))) ISNULL));
SELECT DISTINCT * FROM rt0, vt0;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 WHERE (((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 END) IS TRUE)) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0 WHERE ((NOT (((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 END) IS TRUE)))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0 WHERE (((((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 END) IS TRUE)) ISNULL)) GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (((((((((MIN(COUNT(*)))AND(COUNT(*))))AND(GROUP_CONCAT(SUM(rt0.c0)))))OR(rt0.c1)))AND(rt0.c2)) IN ()) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT ((((((((((MIN(COUNT(*)))AND(COUNT(*))))AND(GROUP_CONCAT(SUM(rt0.c0)))))OR(rt0.c1)))AND(rt0.c2)) IN ()))) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (((((((((((MIN(COUNT(*)))AND(COUNT(*))))AND(GROUP_CONCAT(SUM(rt0.c0)))))OR(rt0.c1)))AND(rt0.c2)) IN ())) ISNULL);
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (((((((((MIN(COUNT(*)))AND(COUNT(*))))AND(GROUP_CONCAT(SUM(rt0.c0)))))OR(rt0.c1)))AND(rt0.c2)) IN ()) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT ((((((((((MIN(COUNT(*)))AND(COUNT(*))))AND(GROUP_CONCAT(SUM(rt0.c0)))))OR(rt0.c1)))AND(rt0.c2)) IN ()))) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (((((((((((MIN(COUNT(*)))AND(COUNT(*))))AND(GROUP_CONCAT(SUM(rt0.c0)))))OR(rt0.c1)))AND(rt0.c2)) IN ())) ISNULL);
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL vt0.c0, vt0.c2 FROM vt0;
SELECT ALL vt0.c0, vt0.c2 FROM vt0 WHERE (CAST(CAST(vt0.c0 AS REAL) AS INTEGER)) UNION ALL SELECT ALL vt0.c0, vt0.c2 FROM vt0 WHERE ((NOT (CAST(CAST(vt0.c0 AS REAL) AS INTEGER)))) UNION ALL SELECT vt0.c0, vt0.c2 FROM vt0 WHERE (((CAST(CAST(vt0.c0 AS REAL) AS INTEGER)) ISNULL));
SELECT ALL vt0.c0, vt0.c2 FROM vt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1)))>>('88527424'))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1)))>>('88527424'))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1)))>>('88527424'))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c1 FROM vt0, rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM vt0, rt0 WHERE ((((~ (vt0.c1)))=(CASE WHEN rt0.c0 THEN vt0.c2 END))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM vt0, rt0 WHERE ((NOT ((((~ (vt0.c1)))==(CASE WHEN rt0.c0 THEN vt0.c2 END))))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM vt0, rt0 WHERE ((((((~ (vt0.c1)))==(CASE WHEN rt0.c0 THEN vt0.c2 END))) ISNULL)) GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM vt0, rt0 GROUP BY rt0.c1;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING (AVG(vt0.c0) IN ()) UNION ALL SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING (NOT ((AVG(vt0.c0) IN ()))) UNION ALL SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING (((AVG(vt0.c0) IN ())) ISNULL);
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING (AVG(vt0.c0) IN ()) UNION ALL SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING (NOT ((AVG(vt0.c0) IN ()))) UNION ALL SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING (((AVG(vt0.c0) IN ())) ISNULL);
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT rt0.c0, vt0.c0, vt0.c2, vt0.c1 FROM rt0 FULL OUTER JOIN vt0 ON CAST((((rt0.c1)) NOT BETWEEN ((vt0.c2)) AND (('423873650'))) AS NUMERIC);
SELECT rt0.c0, vt0.c0, vt0.c2, vt0.c1 FROM rt0 FULL OUTER JOIN vt0 ON CAST((((rt0.c1)) NOT BETWEEN ((vt0.c2)) AND (('423873650'))) AS NUMERIC) WHERE (TRIM(DISTINCT ((vt0.c0) BETWEEN (rt0.c0) AND (vt0.c0)))) UNION ALL SELECT ALL rt0.c0, vt0.c0, vt0.c2, vt0.c1 FROM rt0 FULL OUTER JOIN vt0 ON CAST((((rt0.c1)) NOT BETWEEN ((vt0.c2)) AND (('423873650'))) AS NUMERIC) WHERE ((NOT (TRIM(DISTINCT ((vt0.c0) BETWEEN (rt0.c0) AND (vt0.c0)))))) UNION ALL SELECT ALL rt0.c0, vt0.c0, vt0.c2, vt0.c1 FROM rt0 FULL OUTER JOIN vt0 ON CAST((((rt0.c1)) NOT BETWEEN ((vt0.c2)) AND (('423873650'))) AS NUMERIC) WHERE (((TRIM(DISTINCT ((vt0.c0) BETWEEN (rt0.c0) AND (vt0.c0)))) ISNULL));
SELECT rt0.c0, vt0.c0, vt0.c2, vt0.c1 FROM rt0 FULL OUTER JOIN vt0 ON CAST((((rt0.c1)) NOT BETWEEN ((vt0.c2)) AND (('423873650'))) AS NUMERIC);
SELECT DISTINCT vt0.c1, rt0.c0, rt0.c1, vt0.c0, rt0.c2 FROM rt0, vt0;
SELECT DISTINCT vt0.c1, rt0.c0, rt0.c1, vt0.c0, rt0.c2 FROM rt0, vt0 WHERE (CAST(CAST(vt0.c0 AS NUMERIC) AS INTEGER)) UNION SELECT DISTINCT vt0.c1, rt0.c0, rt0.c1, vt0.c0, rt0.c2 FROM rt0, vt0 WHERE ((NOT (CAST(CAST(vt0.c0 AS NUMERIC) AS INTEGER)))) UNION SELECT DISTINCT vt0.c1, rt0.c0, rt0.c1, vt0.c0, rt0.c2 FROM rt0, vt0 WHERE (((CAST(CAST(vt0.c0 AS NUMERIC) AS INTEGER)) ISNULL));
SELECT DISTINCT vt0.c1, rt0.c0, rt0.c1, vt0.c0, rt0.c2 FROM rt0, vt0;
SELECT vt0.c2, vt0.c0 FROM vt0 GROUP BY vt0.c2, vt0.c0;
SELECT ALL vt0.c2, vt0.c0 FROM vt0 WHERE ('557417789') GROUP BY vt0.c2, vt0.c0 UNION SELECT vt0.c2, vt0.c0 FROM vt0 WHERE ((NOT ('557417789'))) GROUP BY vt0.c2, vt0.c0 UNION SELECT ALL vt0.c2, vt0.c0 FROM vt0 WHERE ((('557417789') ISNULL)) GROUP BY vt0.c2, vt0.c0;
SELECT vt0.c2, vt0.c0 FROM vt0 GROUP BY vt0.c2, vt0.c0;
SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT vt0.c0, vt0.c2 FROM vt0;
SELECT vt0.c0, vt0.c2 FROM vt0 WHERE (vt0.c2) UNION ALL SELECT ALL vt0.c0, vt0.c2 FROM vt0 WHERE ((NOT (vt0.c2))) UNION ALL SELECT vt0.c0, vt0.c2 FROM vt0 WHERE (((vt0.c2) ISNULL));
SELECT vt0.c0, vt0.c2 FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE ((((vt0.c1)) BETWEEN ((x'' COLLATE RTRIM)) AND ((((vt0.c2)=(vt0.c0)))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT ((((vt0.c1)) BETWEEN ((x'' COLLATE RTRIM)) AND ((((vt0.c2)==(vt0.c0)))))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((((((vt0.c1)) BETWEEN ((x'' COLLATE RTRIM)) AND ((((vt0.c2)==(vt0.c0)))))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT vt0.c2, vt0.c1 FROM vt0 GROUP BY vt0.c2, vt0.c1;
SELECT ALL vt0.c2, vt0.c1 FROM vt0 WHERE (vt0.c0) GROUP BY vt0.c2, vt0.c1 UNION SELECT ALL vt0.c2, vt0.c1 FROM vt0 WHERE ((NOT (vt0.c0))) GROUP BY vt0.c2, vt0.c1 UNION SELECT vt0.c2, vt0.c1 FROM vt0 WHERE (((vt0.c0) ISNULL)) GROUP BY vt0.c2, vt0.c1;
SELECT vt0.c2, vt0.c1 FROM vt0 GROUP BY vt0.c2, vt0.c1;
SELECT vt0.c2, vt0.c0 FROM vt0, rt0 GROUP BY vt0.c2, vt0.c0;
SELECT ALL vt0.c2, vt0.c0 FROM vt0, rt0 GROUP BY vt0.c2, vt0.c0 HAVING AVG(IFNULL(DISTINCT vt0.c2, vt0.c0)) UNION ALL SELECT ALL vt0.c2, vt0.c0 FROM vt0, rt0 GROUP BY vt0.c2, vt0.c0 HAVING (NOT (AVG(IFNULL(DISTINCT vt0.c2, vt0.c0)))) UNION ALL SELECT vt0.c2, vt0.c0 FROM vt0, rt0 GROUP BY vt0.c2, vt0.c0 HAVING ((AVG(IFNULL(DISTINCT vt0.c2, vt0.c0))) ISNULL);
SELECT vt0.c2, vt0.c0 FROM vt0, rt0 GROUP BY vt0.c2, vt0.c0;
SELECT ALL vt0.c2, vt0.c0 FROM vt0, rt0 GROUP BY vt0.c2, vt0.c0 HAVING AVG(IFNULL(DISTINCT vt0.c2, vt0.c0)) UNION ALL SELECT ALL vt0.c2, vt0.c0 FROM vt0, rt0 GROUP BY vt0.c2, vt0.c0 HAVING (NOT (AVG(IFNULL(DISTINCT vt0.c2, vt0.c0)))) UNION ALL SELECT vt0.c2, vt0.c0 FROM vt0, rt0 GROUP BY vt0.c2, vt0.c0 HAVING ((AVG(IFNULL(DISTINCT vt0.c2, vt0.c0))) ISNULL);
SELECT vt0.c2, vt0.c0 FROM vt0, rt0 GROUP BY vt0.c2, vt0.c0;
SELECT ALL * FROM rt0, vt0;
SELECT ALL * FROM rt0, vt0 WHERE (LENGTH(((1387979930)<=(rt0.c1)))) UNION ALL SELECT * FROM rt0, vt0 WHERE ((NOT (LENGTH(((1387979930)<=(rt0.c1)))))) UNION ALL SELECT ALL * FROM rt0, vt0 WHERE (((LENGTH(((1387979930)<=(rt0.c1)))) ISNULL));
SELECT ALL * FROM rt0, vt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (CAST(((rt0.c0)<<(rt0.c1)) AS TEXT)) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (CAST(((rt0.c0)<<(rt0.c1)) AS TEXT)))) UNION SELECT DISTINCT * FROM rt0 WHERE (((CAST(((rt0.c0)<<(rt0.c1)) AS TEXT)) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 WHERE (0.5414610253227311) GROUP BY rt0.c2, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (0.5414610253227311))) GROUP BY rt0.c2, rt0.c1 UNION SELECT rt0.c2, rt0.c1 FROM rt0 WHERE (((0.5414610253227311) ISNULL)) GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING LAST_INSERT_ROWID() UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING (NOT (LAST_INSERT_ROWID())) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING ((LAST_INSERT_ROWID()) ISNULL);
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING LAST_INSERT_ROWID() UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING (NOT (LAST_INSERT_ROWID())) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING ((LAST_INSERT_ROWID()) ISNULL);
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT vt0.c2, vt0.c1 FROM vt0;
SELECT vt0.c2, vt0.c1 FROM vt0 WHERE (CAST(SQLITE_SOURCE_ID() AS NUMERIC)) UNION ALL SELECT ALL vt0.c2, vt0.c1 FROM vt0 WHERE ((NOT (CAST(SQLITE_SOURCE_ID() AS NUMERIC)))) UNION ALL SELECT vt0.c2, vt0.c1 FROM vt0 WHERE (((CAST(SQLITE_SOURCE_ID() AS NUMERIC)) ISNULL));
SELECT vt0.c2, vt0.c1 FROM vt0;
SELECT DISTINCT vt0.c0, vt0.c1, rt0.c2 FROM rt0, vt0;
SELECT DISTINCT vt0.c0, vt0.c1, rt0.c2 FROM rt0, vt0 WHERE ((((vt0.c2)) NOT BETWEEN ((rt0.c1)) AND (('')))) UNION SELECT DISTINCT vt0.c0, vt0.c1, rt0.c2 FROM rt0, vt0 WHERE ((NOT ((((vt0.c2)) NOT BETWEEN ((rt0.c1)) AND (('')))))) UNION SELECT DISTINCT vt0.c0, vt0.c1, rt0.c2 FROM rt0, vt0 WHERE ((((((vt0.c2)) NOT BETWEEN ((rt0.c1)) AND (('')))) ISNULL));
SELECT DISTINCT vt0.c0, vt0.c1, rt0.c2 FROM rt0, vt0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 WHERE (((((rt0.c1) IS FALSE)) NOT BETWEEN (CASE WHEN NULL THEN rt0.c0 END) AND ((((rt0.c0))>((rt0.c0)))))) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM rt0 WHERE ((NOT (((((rt0.c1) IS FALSE)) NOT BETWEEN (CASE WHEN NULL THEN rt0.c0 END) AND ((((rt0.c0))>((rt0.c0)))))))) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM rt0 WHERE (((((((rt0.c1) IS FALSE)) NOT BETWEEN (CASE WHEN NULL THEN rt0.c0 END) AND ((((rt0.c0))>((rt0.c0)))))) ISNULL)) GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c1, vt0.c0, rt0.c0, vt0.c1 FROM rt0, vt0 GROUP BY rt0.c1, vt0.c0, rt0.c0, vt0.c1;
SELECT ALL rt0.c1, vt0.c0, rt0.c0, vt0.c1 FROM rt0, vt0 GROUP BY rt0.c1, vt0.c0, rt0.c0, vt0.c1 HAVING ((SUM(COUNT(*)))-(rt0.c2)) UNION ALL SELECT ALL rt0.c1, vt0.c0, rt0.c0, vt0.c1 FROM rt0, vt0 GROUP BY rt0.c1, vt0.c0, rt0.c0, vt0.c1 HAVING (NOT (((SUM(COUNT(*)))-(rt0.c2)))) UNION ALL SELECT ALL rt0.c1, vt0.c0, rt0.c0, vt0.c1 FROM rt0, vt0 GROUP BY rt0.c1, vt0.c0, rt0.c0, vt0.c1 HAVING ((((SUM(COUNT(*)))-(rt0.c2))) ISNULL);
SELECT vt0.c2 FROM vt0 FULL OUTER JOIN rt0 ON (((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c0))) COLLATE NOCASE;
SELECT ALL vt0.c2 FROM vt0 FULL OUTER JOIN rt0 ON (((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c0))) COLLATE NOCASE WHERE (((((((((((((((vt0.c1)<<(vt0.c1)))OR((rt0.c1 IN (vt0.c2, rt0.c2)))))AND(CASE rt0.c1  WHEN rt0.c1 THEN vt0.c2 WHEN vt0.c0 THEN vt0.c1 WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c0 END)))OR(((vt0.c2)>=(vt0.c1)))))OR(((vt0.c0) NOT BETWEEN (vt0.c2) AND (vt0.c1)))))AND(CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c0 END)))OR((rt0.c1 IN ())))) UNION ALL SELECT vt0.c2 FROM vt0 FULL OUTER JOIN rt0 ON (((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c0))) COLLATE NOCASE WHERE ((NOT (((((((((((((((vt0.c1)<<(vt0.c1)))OR((rt0.c1 IN (vt0.c2, rt0.c2)))))AND(CASE rt0.c1  WHEN rt0.c1 THEN vt0.c2 WHEN vt0.c0 THEN vt0.c1 WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c0 END)))OR(((vt0.c2)>=(vt0.c1)))))OR(((vt0.c0) NOT BETWEEN (vt0.c2) AND (vt0.c1)))))AND(CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c0 END)))OR((rt0.c1 IN ())))))) UNION ALL SELECT ALL vt0.c2 FROM vt0 FULL OUTER JOIN rt0 ON (((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c0))) COLLATE NOCASE WHERE (((((((((((((((((vt0.c1)<<(vt0.c1)))OR((rt0.c1 IN (vt0.c2, rt0.c2)))))AND(CASE rt0.c1  WHEN rt0.c1 THEN vt0.c2 WHEN vt0.c0 THEN vt0.c1 WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c0 END)))OR(((vt0.c2)>=(vt0.c1)))))OR(((vt0.c0) NOT BETWEEN (vt0.c2) AND (vt0.c1)))))AND(CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c0 END)))OR((rt0.c1 IN ())))) ISNULL));
SELECT vt0.c2 FROM vt0 FULL OUTER JOIN rt0 ON (((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c0))) COLLATE NOCASE;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((- (((rt0.c2) IS TRUE)))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((- (((rt0.c2) IS TRUE)))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((- (((rt0.c2) IS TRUE)))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c1, vt0.c1 FROM rt0, vt0 GROUP BY rt0.c1, vt0.c1;
SELECT ALL rt0.c1, vt0.c1 FROM rt0, vt0 WHERE (((((rt0.c1) IS FALSE)) IS TRUE)) GROUP BY rt0.c1, vt0.c1 UNION SELECT rt0.c1, vt0.c1 FROM rt0, vt0 WHERE ((NOT (((((rt0.c1) IS FALSE)) IS TRUE)))) GROUP BY rt0.c1, vt0.c1 UNION SELECT ALL rt0.c1, vt0.c1 FROM rt0, vt0 WHERE (((((((rt0.c1) IS FALSE)) IS TRUE)) ISNULL)) GROUP BY rt0.c1, vt0.c1;
SELECT rt0.c1, vt0.c1 FROM rt0, vt0 GROUP BY rt0.c1, vt0.c1;
SELECT rt0.c1, rt0.c2 FROM rt0 RIGHT OUTER JOIN vt0 ON rt0.c0 GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 RIGHT OUTER JOIN vt0 ON rt0.c0 GROUP BY rt0.c1, rt0.c2 HAVING TOTAL(((vt0.c2)||(COUNT(MIN(MIN(TOTAL(rt0.c0))))))) UNION ALL SELECT ALL rt0.c1, rt0.c2 FROM rt0 RIGHT OUTER JOIN vt0 ON rt0.c0 GROUP BY rt0.c1, rt0.c2 HAVING (NOT (TOTAL(((vt0.c2)||(COUNT(MIN(MIN(TOTAL(rt0.c0))))))))) UNION ALL SELECT rt0.c1, rt0.c2 FROM rt0 RIGHT OUTER JOIN vt0 ON rt0.c0 GROUP BY rt0.c1, rt0.c2 HAVING ((TOTAL(((vt0.c2)||(COUNT(MIN(MIN(TOTAL(rt0.c0)))))))) ISNULL);
SELECT vt0.c0, rt0.c1 FROM vt0, rt0;
SELECT ALL vt0.c0, rt0.c1 FROM vt0, rt0 WHERE (((CASE vt0.c0  WHEN vt0.c1 THEN '-1657853768' END)&(CASE rt0.c2  WHEN vt0.c1 THEN vt0.c2 END))) UNION ALL SELECT vt0.c0, rt0.c1 FROM vt0, rt0 WHERE ((NOT (((CASE vt0.c0  WHEN vt0.c1 THEN '-1657853768' END)&(CASE rt0.c2  WHEN vt0.c1 THEN vt0.c2 END))))) UNION ALL SELECT vt0.c0, rt0.c1 FROM vt0, rt0 WHERE (((((CASE vt0.c0  WHEN vt0.c1 THEN '-1657853768' END)&(CASE rt0.c2  WHEN vt0.c1 THEN vt0.c2 END))) ISNULL));
SELECT vt0.c0, rt0.c1 FROM vt0, rt0;
SELECT DISTINCT vt0.c2 FROM vt0, rt0;
SELECT DISTINCT vt0.c2 FROM vt0, rt0 WHERE (((((((((vt0.c2)OR(vt0.c0)))OR(rt0.c2)))OR(CASE vt0.c0  WHEN vt0.c1 THEN vt0.c2 WHEN vt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 END)))AND((((vt0.c0, vt0.c1, vt0.c2)) NOT BETWEEN ((rt0.c1, vt0.c2, vt0.c2)) AND ((x'', rt0.c2, rt0.c0)))))) UNION SELECT DISTINCT vt0.c2 FROM vt0, rt0 WHERE ((NOT (((((((((vt0.c2)OR(vt0.c0)))OR(rt0.c2)))OR(CASE vt0.c0  WHEN vt0.c1 THEN vt0.c2 WHEN vt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 END)))AND((((vt0.c0, vt0.c1, vt0.c2)) NOT BETWEEN ((rt0.c1, vt0.c2, vt0.c2)) AND ((x'', rt0.c2, rt0.c0)))))))) UNION SELECT DISTINCT vt0.c2 FROM vt0, rt0 WHERE (((((((((((vt0.c2)OR(vt0.c0)))OR(rt0.c2)))OR(CASE vt0.c0  WHEN vt0.c1 THEN vt0.c2 WHEN vt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 END)))AND((((vt0.c0, vt0.c1, vt0.c2)) NOT BETWEEN ((rt0.c1, vt0.c2, vt0.c2)) AND ((x'', rt0.c2, rt0.c0)))))) ISNULL));
SELECT DISTINCT vt0.c2 FROM vt0, rt0;
SELECT ALL vt0.c0, rt0.c1, vt0.c1, rt0.c0, vt0.c2 FROM vt0 RIGHT OUTER JOIN rt0 ON (((vt0.c2 IN ()))>>(((vt0.c0)+(vt0.c0)))) GROUP BY vt0.c0, rt0.c1, vt0.c1, rt0.c0, vt0.c2;
SELECT ALL vt0.c0, rt0.c1, vt0.c1, rt0.c0, vt0.c2 FROM vt0 RIGHT OUTER JOIN rt0 ON (((vt0.c2 IN ()))>>(((vt0.c0)+(vt0.c0)))) WHERE (CAST(CASE WHEN rt0.c2 THEN vt0.c0 ELSE rt0.c0 END AS BLOB)) GROUP BY vt0.c0, rt0.c1, vt0.c1, rt0.c0, vt0.c2 UNION SELECT ALL vt0.c0, rt0.c1, vt0.c1, rt0.c0, vt0.c2 FROM vt0 RIGHT OUTER JOIN rt0 ON (((vt0.c2 IN ()))>>(((vt0.c0)+(vt0.c0)))) WHERE ((NOT (CAST(CASE WHEN rt0.c2 THEN vt0.c0 ELSE rt0.c0 END AS BLOB)))) GROUP BY vt0.c0, rt0.c1, vt0.c1, rt0.c0, vt0.c2 UNION SELECT ALL vt0.c0, rt0.c1, vt0.c1, rt0.c0, vt0.c2 FROM vt0 RIGHT OUTER JOIN rt0 ON (((vt0.c2 IN ()))>>(((vt0.c0)+(vt0.c0)))) WHERE (((CAST(CASE WHEN rt0.c2 THEN vt0.c0 ELSE rt0.c0 END AS BLOB)) ISNULL)) GROUP BY vt0.c0, rt0.c1, vt0.c1, rt0.c0, vt0.c2;
SELECT ALL vt0.c0, rt0.c1, vt0.c1, rt0.c0, vt0.c2 FROM vt0 RIGHT OUTER JOIN rt0 ON (((vt0.c2 IN ()))>>(((vt0.c0)+(vt0.c0)))) GROUP BY vt0.c0, rt0.c1, vt0.c1, rt0.c0, vt0.c2;
SELECT vt0.c2, vt0.c0 FROM vt0 GROUP BY vt0.c2, vt0.c0;
SELECT vt0.c2, vt0.c0 FROM vt0 GROUP BY vt0.c2, vt0.c0 HAVING ((((COUNT(MAX(COUNT(MAX(vt0.c1)))))!=(MIN(COUNT(MAX(vt0.c0)))))) NOT BETWEEN (MIN(COUNT(*))) AND (1.84780464E8)) UNION ALL SELECT vt0.c2, vt0.c0 FROM vt0 GROUP BY vt0.c2, vt0.c0 HAVING (NOT (((((COUNT(MAX(COUNT(MAX(vt0.c1)))))<>(MIN(COUNT(MAX(vt0.c0)))))) NOT BETWEEN (MIN(COUNT(*))) AND (1.84780464E8)))) UNION ALL SELECT ALL vt0.c2, vt0.c0 FROM vt0 GROUP BY vt0.c2, vt0.c0 HAVING ((((((COUNT(MAX(COUNT(MAX(vt0.c1)))))<>(MIN(COUNT(MAX(vt0.c0)))))) NOT BETWEEN (MIN(COUNT(*))) AND (1.84780464E8))) ISNULL);
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE (((((((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c0)))AND(rt0.c1 COLLATE RTRIM)))OR((~ (rt0.c0))))) UNION ALL SELECT * FROM rt0 WHERE ((NOT (((((((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c0)))AND(rt0.c1 COLLATE RTRIM)))OR((~ (rt0.c0))))))) UNION ALL SELECT ALL * FROM rt0 WHERE (((((((((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c0)))AND(rt0.c1 COLLATE RTRIM)))OR((~ (rt0.c0))))) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((- (CASE WHEN vt0.c1 THEN vt0.c2 END))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT ((- (CASE WHEN vt0.c1 THEN vt0.c2 END))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((((- (CASE WHEN vt0.c1 THEN vt0.c2 END))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT vt0.c0, rt0.c2, rt0.c0, rt0.c1, vt0.c2, vt0.c1 FROM vt0, rt0 GROUP BY vt0.c0, rt0.c2, rt0.c0, rt0.c1, vt0.c2, vt0.c1;
SELECT vt0.c0, rt0.c2, rt0.c0, rt0.c1, vt0.c2, vt0.c1 FROM vt0, rt0 WHERE (vt0.c2) GROUP BY vt0.c0, rt0.c2, rt0.c0, rt0.c1, vt0.c2, vt0.c1 UNION SELECT vt0.c0, rt0.c2, rt0.c0, rt0.c1, vt0.c2, vt0.c1 FROM vt0, rt0 WHERE ((NOT (vt0.c2))) GROUP BY vt0.c0, rt0.c2, rt0.c0, rt0.c1, vt0.c2, vt0.c1 UNION SELECT vt0.c0, rt0.c2, rt0.c0, rt0.c1, vt0.c2, vt0.c1 FROM vt0, rt0 WHERE (((vt0.c2) ISNULL)) GROUP BY vt0.c0, rt0.c2, rt0.c0, rt0.c1, vt0.c2, vt0.c1;
SELECT vt0.c0, rt0.c2, rt0.c0, rt0.c1, vt0.c2, vt0.c1 FROM vt0, rt0 GROUP BY vt0.c0, rt0.c2, rt0.c0, rt0.c1, vt0.c2, vt0.c1;
SELECT ALL vt0.c2, rt0.c2, rt0.c0, rt0.c1 FROM vt0, rt0 GROUP BY vt0.c2, rt0.c2, rt0.c0, rt0.c1;
SELECT ALL vt0.c2, rt0.c2, rt0.c0, rt0.c1 FROM vt0, rt0 GROUP BY vt0.c2, rt0.c2, rt0.c0, rt0.c1 HAVING COUNT(((AVG(AVG(vt0.c0)))>(MAX(rt0.c1)))) UNION ALL SELECT vt0.c2, rt0.c2, rt0.c0, rt0.c1 FROM vt0, rt0 GROUP BY vt0.c2, rt0.c2, rt0.c0, rt0.c1 HAVING (NOT (COUNT(((AVG(AVG(vt0.c0)))>(MAX(rt0.c1)))))) UNION ALL SELECT ALL vt0.c2, rt0.c2, rt0.c0, rt0.c1 FROM vt0, rt0 GROUP BY vt0.c2, rt0.c2, rt0.c0, rt0.c1 HAVING ((COUNT(((AVG(AVG(vt0.c0)))>(MAX(rt0.c1))))) ISNULL);
SELECT rt0.c2 FROM rt0;
SELECT rt0.c2 FROM rt0 WHERE ((((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c2)))) ISNULL)) UNION ALL SELECT ALL rt0.c2 FROM rt0 WHERE ((NOT ((((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c2)))) ISNULL)))) UNION ALL SELECT rt0.c2 FROM rt0 WHERE ((((((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c2)))) ISNULL)) ISNULL));
SELECT rt0.c2 FROM rt0;
SELECT DISTINCT vt0.c2, vt0.c0, rt0.c0, rt0.c2, vt0.c1 FROM vt0, rt0;
SELECT DISTINCT vt0.c2, vt0.c0, rt0.c0, rt0.c2, vt0.c1 FROM vt0, rt0 WHERE (((((((((((((rt0.c1)OR(vt0.c1)))AND(vt0.c2)))AND('-1235299423')))AND(rt0.c1)))OR(((rt0.c1) BETWEEN (vt0.c2) AND ('q,(pho')))))AND(rt0.c2 COLLATE RTRIM))) UNION SELECT DISTINCT vt0.c2, vt0.c0, rt0.c0, rt0.c2, vt0.c1 FROM vt0, rt0 WHERE ((NOT (((((((((((((rt0.c1)OR(vt0.c1)))AND(vt0.c2)))AND('-1235299423')))AND(rt0.c1)))OR(((rt0.c1) BETWEEN (vt0.c2) AND ('q,(pho')))))AND(rt0.c2 COLLATE RTRIM))))) UNION SELECT DISTINCT vt0.c2, vt0.c0, rt0.c0, rt0.c2, vt0.c1 FROM vt0, rt0 WHERE (((((((((((((((rt0.c1)OR(vt0.c1)))AND(vt0.c2)))AND('-1235299423')))AND(rt0.c1)))OR(((rt0.c1) BETWEEN (vt0.c2) AND ('q,(pho')))))AND(rt0.c2 COLLATE RTRIM))) ISNULL));
SELECT DISTINCT vt0.c2, vt0.c0, rt0.c0, rt0.c2, vt0.c1 FROM vt0, rt0;
SELECT ALL vt0.c1, vt0.c0, rt0.c0, rt0.c2, rt0.c1 FROM vt0, rt0 GROUP BY vt0.c1, vt0.c0, rt0.c0, rt0.c2, rt0.c1;
SELECT ALL vt0.c1, vt0.c0, rt0.c0, rt0.c2, rt0.c1 FROM vt0, rt0 WHERE ((((('692183634' IN ())))<>((vt0.c0)))) GROUP BY vt0.c1, vt0.c0, rt0.c0, rt0.c2, rt0.c1 UNION SELECT vt0.c1, vt0.c0, rt0.c0, rt0.c2, rt0.c1 FROM vt0, rt0 WHERE ((NOT ((((('692183634' IN ())))!=((vt0.c0)))))) GROUP BY vt0.c1, vt0.c0, rt0.c0, rt0.c2, rt0.c1 UNION SELECT ALL vt0.c1, vt0.c0, rt0.c0, rt0.c2, rt0.c1 FROM vt0, rt0 WHERE ((((((('692183634' IN ())))<>((vt0.c0)))) ISNULL)) GROUP BY vt0.c1, vt0.c0, rt0.c0, rt0.c2, rt0.c1;
SELECT ALL vt0.c1, vt0.c0, rt0.c0, rt0.c2, rt0.c1 FROM vt0, rt0 GROUP BY vt0.c1, vt0.c0, rt0.c0, rt0.c2, rt0.c1;
SELECT ALL vt0.c1 FROM rt0, vt0 GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM rt0, vt0 GROUP BY vt0.c1 HAVING COUNT(TOTAL(COUNT(*))) COLLATE NOCASE UNION ALL SELECT ALL vt0.c1 FROM rt0, vt0 GROUP BY vt0.c1 HAVING (NOT (COUNT(TOTAL(COUNT(*))) COLLATE NOCASE)) UNION ALL SELECT ALL vt0.c1 FROM rt0, vt0 GROUP BY vt0.c1 HAVING ((COUNT(TOTAL(COUNT(*))) COLLATE NOCASE) ISNULL);
SELECT ALL * FROM vt0;
SELECT ALL * FROM vt0 WHERE (((vt0.c2)IS NOT(((vt0.c1)*(vt0.c2))))) UNION ALL SELECT * FROM vt0 WHERE ((NOT (((vt0.c2)IS NOT(((vt0.c1)*(vt0.c2))))))) UNION ALL SELECT * FROM vt0 WHERE (((((vt0.c2)IS NOT(((vt0.c1)*(vt0.c2))))) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT * FROM vt0, rt0;
SELECT DISTINCT * FROM vt0, rt0 WHERE (((((((((((((((1.7976931348623157E308)<<(vt0.c2)))OR(((((vt0.c0)OR(rt0.c1)))OR(vt0.c2)))))AND(vt0.c2)))OR(((vt0.c1) IS FALSE))))AND((vt0.c1 IN ()))))AND(rt0.c1)))AND(((((((((rt0.c0)OR(vt0.c1)))OR(rt0.c0)))OR(rt0.c1)))AND(rt0.c1))))) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE ((NOT (((((((((((((((1.7976931348623157E308)<<(vt0.c2)))OR(((((vt0.c0)OR(rt0.c1)))OR(vt0.c2)))))AND(vt0.c2)))OR(((vt0.c1) IS FALSE))))AND((vt0.c1 IN ()))))AND(rt0.c1)))AND(((((((((rt0.c0)OR(vt0.c1)))OR(rt0.c0)))OR(rt0.c1)))AND(rt0.c1))))))) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE (((((((((((((((((1.7976931348623157E308)<<(vt0.c2)))OR(((((vt0.c0)OR(rt0.c1)))OR(vt0.c2)))))AND(vt0.c2)))OR(((vt0.c1) IS FALSE))))AND((vt0.c1 IN ()))))AND(rt0.c1)))AND(((((((((rt0.c0)OR(vt0.c1)))OR(rt0.c0)))OR(rt0.c1)))AND(rt0.c1))))) ISNULL));
SELECT DISTINCT * FROM vt0, rt0;
SELECT vt0.c0, vt0.c1, rt0.c1, rt0.c2, rt0.c0 FROM rt0, vt0 GROUP BY vt0.c0, vt0.c1, rt0.c1, rt0.c2, rt0.c0;
SELECT vt0.c0, vt0.c1, rt0.c1, rt0.c2, rt0.c0 FROM rt0, vt0 WHERE (((((rt0.c2)<('986581580')))==(((vt0.c1)GLOB(rt0.c2))))) GROUP BY vt0.c0, vt0.c1, rt0.c1, rt0.c2, rt0.c0 UNION SELECT vt0.c0, vt0.c1, rt0.c1, rt0.c2, rt0.c0 FROM rt0, vt0 WHERE ((NOT (((((rt0.c2)<('986581580')))==(((vt0.c1)GLOB(rt0.c2))))))) GROUP BY vt0.c0, vt0.c1, rt0.c1, rt0.c2, rt0.c0 UNION SELECT ALL vt0.c0, vt0.c1, rt0.c1, rt0.c2, rt0.c0 FROM rt0, vt0 WHERE (((((((rt0.c2)<('986581580')))==(((vt0.c1)GLOB(rt0.c2))))) ISNULL)) GROUP BY vt0.c0, vt0.c1, rt0.c1, rt0.c2, rt0.c0;
SELECT vt0.c0, vt0.c1, rt0.c1, rt0.c2, rt0.c0 FROM rt0, vt0 GROUP BY vt0.c0, vt0.c1, rt0.c1, rt0.c2, rt0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING (NOT (CAST(AVG(TOTAL(COUNT(COUNT(*)))) AS BLOB))) UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING (NOT ((NOT (CAST(AVG(TOTAL(COUNT(COUNT(*)))) AS BLOB))))) UNION ALL SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING (((NOT (CAST(AVG(TOTAL(COUNT(COUNT(*)))) AS BLOB)))) ISNULL);
SELECT ALL vt0.c1 FROM vt0;
SELECT ALL vt0.c1 FROM vt0 WHERE (rtreenode(((vt0.c2)LIKE(vt0.c1)), ((vt0.c2)%(vt0.c0)))) UNION ALL SELECT vt0.c1 FROM vt0 WHERE ((NOT (rtreenode(((vt0.c2)LIKE(vt0.c1)), ((vt0.c2)%(vt0.c0)))))) UNION ALL SELECT ALL vt0.c1 FROM vt0 WHERE (((rtreenode(((vt0.c2)LIKE(vt0.c1)), ((vt0.c2)%(vt0.c0)))) ISNULL));
SELECT ALL vt0.c1 FROM vt0;
SELECT DISTINCT * FROM rt0 CROSS JOIN vt0 ON vt0.c0 COLLATE BINARY;
SELECT DISTINCT * FROM rt0 CROSS JOIN vt0 ON vt0.c0 COLLATE BINARY WHERE ((~ ((vt0.c2 IN (958960584))))) UNION SELECT DISTINCT * FROM rt0 CROSS JOIN vt0 ON vt0.c0 COLLATE BINARY WHERE ((NOT ((~ ((vt0.c2 IN (958960584))))))) UNION SELECT DISTINCT * FROM rt0 CROSS JOIN vt0 ON vt0.c0 COLLATE BINARY WHERE ((((~ ((vt0.c2 IN (958960584))))) ISNULL));
SELECT DISTINCT * FROM rt0 CROSS JOIN vt0 ON vt0.c0 COLLATE BINARY;
SELECT ALL rt0.c1, vt0.c2, vt0.c1, vt0.c0, rt0.c0, rt0.c2 FROM vt0, rt0 GROUP BY rt0.c1, vt0.c2, vt0.c1, vt0.c0, rt0.c0, rt0.c2;
SELECT rt0.c1, vt0.c2, vt0.c1, vt0.c0, rt0.c0, rt0.c2 FROM vt0, rt0 WHERE ((((((vt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0)))) BETWEEN ((rt0.c2 IN ())) AND ((('-858899534')==(vt0.c2))))) GROUP BY rt0.c1, vt0.c2, vt0.c1, vt0.c0, rt0.c0, rt0.c2 UNION SELECT ALL rt0.c1, vt0.c2, vt0.c1, vt0.c0, rt0.c0, rt0.c2 FROM vt0, rt0 WHERE ((NOT ((((((vt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0)))) BETWEEN ((rt0.c2 IN ())) AND ((('-858899534')==(vt0.c2))))))) GROUP BY rt0.c1, vt0.c2, vt0.c1, vt0.c0, rt0.c0, rt0.c2 UNION SELECT ALL rt0.c1, vt0.c2, vt0.c1, vt0.c0, rt0.c0, rt0.c2 FROM vt0, rt0 WHERE ((((((((vt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0)))) BETWEEN ((rt0.c2 IN ())) AND ((('-858899534')==(vt0.c2))))) ISNULL)) GROUP BY rt0.c1, vt0.c2, vt0.c1, vt0.c0, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, vt0.c2, vt0.c1, vt0.c0, rt0.c0, rt0.c2 FROM vt0, rt0 GROUP BY rt0.c1, vt0.c2, vt0.c1, vt0.c0, rt0.c0, rt0.c2;
SELECT vt0.c2, rt0.c1, vt0.c0, vt0.c1, rt0.c2, rt0.c0 FROM rt0, vt0 GROUP BY vt0.c2, rt0.c1, vt0.c0, vt0.c1, rt0.c2, rt0.c0;
SELECT vt0.c2, rt0.c1, vt0.c0, vt0.c1, rt0.c2, rt0.c0 FROM rt0, vt0 GROUP BY vt0.c2, rt0.c1, vt0.c0, vt0.c1, rt0.c2, rt0.c0 HAVING CASE SUM(MAX(SUM(COUNT(*))))  WHEN rt0.c0 THEN rt0.c2 END COLLATE RTRIM UNION ALL SELECT vt0.c2, rt0.c1, vt0.c0, vt0.c1, rt0.c2, rt0.c0 FROM rt0, vt0 GROUP BY vt0.c2, rt0.c1, vt0.c0, vt0.c1, rt0.c2, rt0.c0 HAVING (NOT (CASE SUM(MAX(SUM(COUNT(*))))  WHEN rt0.c0 THEN rt0.c2 END COLLATE RTRIM)) UNION ALL SELECT ALL vt0.c2, rt0.c1, vt0.c0, vt0.c1, rt0.c2, rt0.c0 FROM rt0, vt0 GROUP BY vt0.c2, rt0.c1, vt0.c0, vt0.c1, rt0.c2, rt0.c0 HAVING ((CASE SUM(MAX(SUM(COUNT(*))))  WHEN rt0.c0 THEN rt0.c2 END COLLATE RTRIM) ISNULL);
SELECT rt0.c1, rt0.c0 FROM rt0 RIGHT OUTER JOIN vt0 ON (('')<(CASE x'e1aa'  WHEN vt0.c0 THEN vt0.c2 END));
SELECT rt0.c1, rt0.c0 FROM rt0 RIGHT OUTER JOIN vt0 ON (('')<(CASE x'e1aa'  WHEN vt0.c0 THEN vt0.c2 END)) WHERE (CASE WHEN CASE WHEN vt0.c0 THEN rt0.c2 ELSE vt0.c2 END THEN ((rt0.c1)*(vt0.c0)) WHEN 0.2276666011792906 COLLATE BINARY THEN ((vt0.c2)<<(rt0.c2)) WHEN (((vt0.c1)) BETWEEN ((rt0.c2)) AND (('wjF&-'))) THEN rt0.c1 ELSE rt0.c0 END) UNION ALL SELECT ALL rt0.c1, rt0.c0 FROM rt0 RIGHT OUTER JOIN vt0 ON (('')<(CASE x'e1aa'  WHEN vt0.c0 THEN vt0.c2 END)) WHERE ((NOT (CASE WHEN CASE WHEN vt0.c0 THEN rt0.c2 ELSE vt0.c2 END THEN ((rt0.c1)*(vt0.c0)) WHEN 0.2276666011792906 COLLATE BINARY THEN ((vt0.c2)<<(rt0.c2)) WHEN (((vt0.c1)) BETWEEN ((rt0.c2)) AND (('wjF&-'))) THEN rt0.c1 ELSE rt0.c0 END))) UNION ALL SELECT rt0.c1, rt0.c0 FROM rt0 RIGHT OUTER JOIN vt0 ON (('')<(CASE x'e1aa'  WHEN vt0.c0 THEN vt0.c2 END)) WHERE (((CASE WHEN CASE WHEN vt0.c0 THEN rt0.c2 ELSE vt0.c2 END THEN ((rt0.c1)*(vt0.c0)) WHEN 0.2276666011792906 COLLATE BINARY THEN ((vt0.c2)<<(rt0.c2)) WHEN (((vt0.c1)) BETWEEN ((rt0.c2)) AND (('wjF&-'))) THEN rt0.c1 ELSE rt0.c0 END) ISNULL));
SELECT rt0.c1, rt0.c0 FROM rt0 RIGHT OUTER JOIN vt0 ON (('')<(CASE x'e1aa'  WHEN vt0.c0 THEN vt0.c2 END));
SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0 WHERE ('-408729555') UNION SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT ('-408729555'))) UNION SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0 WHERE ((('-408729555') ISNULL));
SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM rt0 WHERE ((- ((((rt0.c2))<((rt0.c1)))))) GROUP BY rt0.c2, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT ((- ((((rt0.c2))<((rt0.c1)))))))) GROUP BY rt0.c2, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c0 FROM rt0 WHERE ((((- ((((rt0.c2))<((rt0.c1)))))) ISNULL)) GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING AVG(MAX(SUM(rt0.c0))) UNION ALL SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING (NOT (AVG(MAX(SUM(rt0.c0))))) UNION ALL SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING ((AVG(MAX(SUM(rt0.c0)))) ISNULL);
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (((((rt0.c1))>((rt0.c1))) IN ())) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (((((rt0.c1))>((rt0.c1))) IN ())))) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (((((((rt0.c1))>((rt0.c1))) IN ())) ISNULL));
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0;
SELECT DISTINCT vt0.c2 FROM vt0 NOT INDEXED;
SELECT DISTINCT vt0.c2 FROM vt0 WHERE ((((vt0.c0) IS TRUE) IN ())) UNION SELECT DISTINCT vt0.c2 FROM vt0 WHERE ((NOT ((((vt0.c0) IS TRUE) IN ())))) UNION SELECT DISTINCT vt0.c2 FROM vt0 WHERE ((((((vt0.c0) IS TRUE) IN ())) ISNULL));
SELECT DISTINCT vt0.c2 FROM vt0 NOT INDEXED;
SELECT vt0.c0, rt0.c1, vt0.c2, rt0.c2, rt0.c0, vt0.c1 FROM vt0 LEFT OUTER JOIN rt0 ON rt0.c0 GROUP BY vt0.c0, rt0.c1, vt0.c2, rt0.c2, rt0.c0, vt0.c1;
SELECT vt0.c0, rt0.c1, vt0.c2, rt0.c2, rt0.c0, vt0.c1 FROM vt0 LEFT OUTER JOIN rt0 ON rt0.c0 WHERE (0.21266832061828567) GROUP BY vt0.c0, rt0.c1, vt0.c2, rt0.c2, rt0.c0, vt0.c1 UNION SELECT ALL vt0.c0, rt0.c1, vt0.c2, rt0.c2, rt0.c0, vt0.c1 FROM vt0 LEFT OUTER JOIN rt0 ON rt0.c0 WHERE ((NOT (0.21266832061828567))) GROUP BY vt0.c0, rt0.c1, vt0.c2, rt0.c2, rt0.c0, vt0.c1 UNION SELECT ALL vt0.c0, rt0.c1, vt0.c2, rt0.c2, rt0.c0, vt0.c1 FROM vt0 LEFT OUTER JOIN rt0 ON rt0.c0 WHERE (((0.21266832061828567) ISNULL)) GROUP BY vt0.c0, rt0.c1, vt0.c2, rt0.c2, rt0.c0, vt0.c1;
SELECT vt0.c0, rt0.c1, vt0.c2, rt0.c2, rt0.c0, vt0.c1 FROM vt0 LEFT OUTER JOIN rt0 ON rt0.c0 GROUP BY vt0.c0, rt0.c1, vt0.c2, rt0.c2, rt0.c0, vt0.c1;
SELECT vt0.c2, vt0.c1 FROM vt0 GROUP BY vt0.c2, vt0.c1;
SELECT vt0.c2, vt0.c1 FROM vt0 GROUP BY vt0.c2, vt0.c1 HAVING MIN(((((AVG(vt0.c1))OR(vt0.c2)))AND(COUNT(MIN(vt0.c0))))) UNION ALL SELECT vt0.c2, vt0.c1 FROM vt0 GROUP BY vt0.c2, vt0.c1 HAVING (NOT (MIN(((((AVG(vt0.c1))OR(vt0.c2)))AND(COUNT(MIN(vt0.c0))))))) UNION ALL SELECT ALL vt0.c2, vt0.c1 FROM vt0 GROUP BY vt0.c2, vt0.c1 HAVING ((MIN(((((AVG(vt0.c1))OR(vt0.c2)))AND(COUNT(MIN(vt0.c0)))))) ISNULL);
SELECT vt0.c1, vt0.c0, vt0.c2 FROM rt0 RIGHT OUTER JOIN vt0 ON (((vt0.c1, ((rt0.c2) NOT BETWEEN (rt0.c0) AND (vt0.c2)), x''))<>((CASE WHEN vt0.c1 THEN vt0.c2 END, rt0.c0, ((rt0.c2)AND(vt0.c0)))));
SELECT ALL vt0.c1, vt0.c0, vt0.c2 FROM rt0 RIGHT OUTER JOIN vt0 ON (((vt0.c1, ((rt0.c2) NOT BETWEEN (rt0.c0) AND (vt0.c2)), x''))<>((CASE WHEN vt0.c1 THEN vt0.c2 END, rt0.c0, ((rt0.c2)AND(vt0.c0))))) WHERE (((((vt0.c1)!=(rt0.c0)))<<((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((vt0.c2)))))) UNION ALL SELECT vt0.c1, vt0.c0, vt0.c2 FROM rt0 RIGHT OUTER JOIN vt0 ON (((vt0.c1, ((rt0.c2) NOT BETWEEN (rt0.c0) AND (vt0.c2)), x''))!=((CASE WHEN vt0.c1 THEN vt0.c2 END, rt0.c0, ((rt0.c2)AND(vt0.c0))))) WHERE ((NOT (((((vt0.c1)!=(rt0.c0)))<<((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((vt0.c2)))))))) UNION ALL SELECT ALL vt0.c1, vt0.c0, vt0.c2 FROM rt0 RIGHT OUTER JOIN vt0 ON (((vt0.c1, ((rt0.c2) NOT BETWEEN (rt0.c0) AND (vt0.c2)), x''))<>((CASE WHEN vt0.c1 THEN vt0.c2 END, rt0.c0, ((rt0.c2)AND(vt0.c0))))) WHERE (((((((vt0.c1)<>(rt0.c0)))<<((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((vt0.c2)))))) ISNULL));
SELECT vt0.c1, vt0.c0, vt0.c2 FROM rt0 RIGHT OUTER JOIN vt0 ON (((vt0.c1, ((rt0.c2) NOT BETWEEN (rt0.c0) AND (vt0.c2)), x''))<>((CASE WHEN vt0.c1 THEN vt0.c2 END, rt0.c0, ((rt0.c2)AND(vt0.c0)))));
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((((rt0.c1)<<(rt0.c0))) BETWEEN (LIKELIHOOD(rt0.c0, 0.4749172815464199)) AND (HEX(rt0.c2)))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((((rt0.c1)<<(rt0.c0))) BETWEEN (LIKELIHOOD(rt0.c0, 0.4749172815464199)) AND (HEX(rt0.c2)))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((((rt0.c1)<<(rt0.c0))) BETWEEN (LIKELIHOOD(rt0.c0, 0.4749172815464199)) AND (HEX(rt0.c2)))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL vt0.c1, vt0.c2 FROM vt0 GROUP BY vt0.c1, vt0.c2;
SELECT vt0.c1, vt0.c2 FROM vt0 WHERE ((((((vt0.c2, x'', vt0.c1))=((vt0.c1, NULL, vt0.c2)))) IS TRUE)) GROUP BY vt0.c1, vt0.c2 UNION SELECT vt0.c1, vt0.c2 FROM vt0 WHERE ((NOT ((((((vt0.c2, x'', vt0.c1))=((vt0.c1, NULL, vt0.c2)))) IS TRUE)))) GROUP BY vt0.c1, vt0.c2 UNION SELECT ALL vt0.c1, vt0.c2 FROM vt0 WHERE ((((((((vt0.c2, x'', vt0.c1))==((vt0.c1, NULL, vt0.c2)))) IS TRUE)) ISNULL)) GROUP BY vt0.c1, vt0.c2;
SELECT ALL vt0.c1, vt0.c2 FROM vt0 GROUP BY vt0.c1, vt0.c2;
SELECT vt0.c2, vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c2, vt0.c1, vt0.c0;
SELECT vt0.c2, vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c2, vt0.c1, vt0.c0 HAVING CAST(MAX(SUM(GROUP_CONCAT(vt0.c2))) AS NUMERIC) UNION ALL SELECT vt0.c2, vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c2, vt0.c1, vt0.c0 HAVING (NOT (CAST(MAX(SUM(GROUP_CONCAT(vt0.c2))) AS NUMERIC))) UNION ALL SELECT vt0.c2, vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c2, vt0.c1, vt0.c0 HAVING ((CAST(MAX(SUM(GROUP_CONCAT(vt0.c2))) AS NUMERIC)) ISNULL);
SELECT ALL * FROM vt0;
SELECT ALL * FROM vt0 WHERE (vt0.c2) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (vt0.c2))) UNION ALL SELECT * FROM vt0 WHERE (((vt0.c2) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT rt0.c2, vt0.c0 FROM vt0, rt0;
SELECT DISTINCT rt0.c2, vt0.c0 FROM vt0, rt0 WHERE (((((((vt0.c1)IS(rt0.c1)))AND((+ (rt0.c0)))))OR((((vt0.c0)) BETWEEN ((rt0.c0)) AND ((NULL)))))) UNION SELECT DISTINCT rt0.c2, vt0.c0 FROM vt0, rt0 WHERE ((NOT (((((((vt0.c1)IS(rt0.c1)))AND((+ (rt0.c0)))))OR((((vt0.c0)) BETWEEN ((rt0.c0)) AND ((NULL)))))))) UNION SELECT DISTINCT rt0.c2, vt0.c0 FROM vt0, rt0 WHERE (((((((((vt0.c1)IS(rt0.c1)))AND((+ (rt0.c0)))))OR((((vt0.c0)) BETWEEN ((rt0.c0)) AND ((NULL)))))) ISNULL));
SELECT DISTINCT rt0.c2, vt0.c0 FROM vt0, rt0;
SELECT ALL rt0.c2, vt0.c1, rt0.c0, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c2, vt0.c1, rt0.c0, vt0.c0;
SELECT rt0.c2, vt0.c1, rt0.c0, vt0.c0 FROM vt0, rt0 WHERE ((('')>(rt0.c2)) COLLATE RTRIM) GROUP BY rt0.c2, vt0.c1, rt0.c0, vt0.c0 UNION SELECT ALL rt0.c2, vt0.c1, rt0.c0, vt0.c0 FROM vt0, rt0 WHERE ((NOT ((('')>(rt0.c2)) COLLATE RTRIM))) GROUP BY rt0.c2, vt0.c1, rt0.c0, vt0.c0 UNION SELECT rt0.c2, vt0.c1, rt0.c0, vt0.c0 FROM vt0, rt0 WHERE ((((('')>(rt0.c2)) COLLATE RTRIM) ISNULL)) GROUP BY rt0.c2, vt0.c1, rt0.c0, vt0.c0;
SELECT ALL rt0.c2, vt0.c1, rt0.c0, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c2, vt0.c1, rt0.c0, vt0.c0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING ((((MIN(GROUP_CONCAT(COUNT(*))))OR(COUNT(*))))OR(MIN(rt0.c0))) UNION ALL SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (NOT (((((MIN(GROUP_CONCAT(COUNT(*))))OR(COUNT(*))))OR(MIN(rt0.c0))))) UNION ALL SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING ((((((MIN(GROUP_CONCAT(COUNT(*))))OR(COUNT(*))))OR(MIN(rt0.c0)))) ISNULL);
SELECT rt0.c0 FROM rt0;
SELECT ALL rt0.c0 FROM rt0 WHERE (((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c0)) COLLATE BINARY) UNION ALL SELECT ALL rt0.c0 FROM rt0 WHERE ((NOT (((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c0)) COLLATE BINARY))) UNION ALL SELECT ALL rt0.c0 FROM rt0 WHERE (((((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c0)) COLLATE BINARY) ISNULL));
SELECT rt0.c0 FROM rt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((vt0.c0) IS TRUE)) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((vt0.c0) IS TRUE)))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((vt0.c0) IS TRUE)) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL vt0.c0, rt0.c0 FROM vt0, rt0 GROUP BY vt0.c0, rt0.c0;
SELECT vt0.c0, rt0.c0 FROM vt0, rt0 WHERE (vt0.c2) GROUP BY vt0.c0, rt0.c0 UNION SELECT ALL vt0.c0, rt0.c0 FROM vt0, rt0 WHERE ((NOT (vt0.c2))) GROUP BY vt0.c0, rt0.c0 UNION SELECT ALL vt0.c0, rt0.c0 FROM vt0, rt0 WHERE (((vt0.c2) ISNULL)) GROUP BY vt0.c0, rt0.c0;
SELECT ALL vt0.c0, rt0.c0 FROM vt0, rt0 GROUP BY vt0.c0, rt0.c0;
SELECT ALL vt0.c0, vt0.c2, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c2, vt0.c1;
SELECT ALL vt0.c0, vt0.c2, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c2, vt0.c1 HAVING TOTAL(MAX(vt0.c1)) UNION ALL SELECT ALL vt0.c0, vt0.c2, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c2, vt0.c1 HAVING (NOT (TOTAL(MAX(vt0.c1)))) UNION ALL SELECT ALL vt0.c0, vt0.c2, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c2, vt0.c1 HAVING ((TOTAL(MAX(vt0.c1))) ISNULL);
SELECT ALL * FROM rt0, vt0;
SELECT ALL * FROM rt0, vt0 WHERE (CAST(NULL AS BLOB)) UNION ALL SELECT ALL * FROM rt0, vt0 WHERE ((NOT (CAST(NULL AS BLOB)))) UNION ALL SELECT ALL * FROM rt0, vt0 WHERE (((CAST(NULL AS BLOB)) ISNULL));
SELECT ALL * FROM rt0, vt0;
SELECT DISTINCT rt0.c1, rt0.c0, vt0.c0 FROM vt0, rt0;
SELECT DISTINCT rt0.c1, rt0.c0, vt0.c0 FROM vt0, rt0 WHERE (CAST(((rt0.c0) IS FALSE) AS TEXT)) UNION SELECT DISTINCT rt0.c1, rt0.c0, vt0.c0 FROM vt0, rt0 WHERE ((NOT (CAST(((rt0.c0) IS FALSE) AS TEXT)))) UNION SELECT DISTINCT rt0.c1, rt0.c0, vt0.c0 FROM vt0, rt0 WHERE (((CAST(((rt0.c0) IS FALSE) AS TEXT)) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c0, vt0.c0 FROM vt0, rt0;
SELECT ALL vt0.c1, vt0.c2, rt0.c0, rt0.c2, rt0.c1, vt0.c0 FROM vt0, rt0 GROUP BY vt0.c1, vt0.c2, rt0.c0, rt0.c2, rt0.c1, vt0.c0;
SELECT vt0.c1, vt0.c2, rt0.c0, rt0.c2, rt0.c1, vt0.c0 FROM vt0, rt0 WHERE (COALESCE(CAST(rt0.c1 AS TEXT), CASE WHEN rt0.c2 THEN vt0.c2 WHEN vt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN vt0.c1 END, vt0.c0, CAST(vt0.c2 AS NUMERIC), ((vt0.c2) NOT NULL), LOWER(vt0.c0))) GROUP BY vt0.c1, vt0.c2, rt0.c0, rt0.c2, rt0.c1, vt0.c0 UNION SELECT ALL vt0.c1, vt0.c2, rt0.c0, rt0.c2, rt0.c1, vt0.c0 FROM vt0, rt0 WHERE ((NOT (COALESCE(CAST(rt0.c1 AS TEXT), CASE WHEN rt0.c2 THEN vt0.c2 WHEN vt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN vt0.c1 END, vt0.c0, CAST(vt0.c2 AS NUMERIC), ((vt0.c2) NOT NULL), LOWER(vt0.c0))))) GROUP BY vt0.c1, vt0.c2, rt0.c0, rt0.c2, rt0.c1, vt0.c0 UNION SELECT ALL vt0.c1, vt0.c2, rt0.c0, rt0.c2, rt0.c1, vt0.c0 FROM vt0, rt0 WHERE (((COALESCE(CAST(rt0.c1 AS TEXT), CASE WHEN rt0.c2 THEN vt0.c2 WHEN vt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN vt0.c1 END, vt0.c0, CAST(vt0.c2 AS NUMERIC), ((vt0.c2) NOT NULL), LOWER(vt0.c0))) ISNULL)) GROUP BY vt0.c1, vt0.c2, rt0.c0, rt0.c2, rt0.c1, vt0.c0;
SELECT ALL vt0.c1, vt0.c2, rt0.c0, rt0.c2, rt0.c1, vt0.c0 FROM vt0, rt0 GROUP BY vt0.c1, vt0.c2, rt0.c0, rt0.c2, rt0.c1, vt0.c0;
SELECT vt0.c0, rt0.c0, rt0.c1, vt0.c1, vt0.c2 FROM vt0, rt0 GROUP BY vt0.c0, rt0.c0, rt0.c1, vt0.c1, vt0.c2;
SELECT vt0.c0, rt0.c0, rt0.c1, vt0.c1, vt0.c2 FROM vt0, rt0 GROUP BY vt0.c0, rt0.c0, rt0.c1, vt0.c1, vt0.c2 HAVING (+ (((COUNT(COUNT(AVG(rt0.c2))))<>(SUM(COUNT(vt0.c2)))))) UNION ALL SELECT ALL vt0.c0, rt0.c0, rt0.c1, vt0.c1, vt0.c2 FROM vt0, rt0 GROUP BY vt0.c0, rt0.c0, rt0.c1, vt0.c1, vt0.c2 HAVING (NOT ((+ (((COUNT(COUNT(AVG(rt0.c2))))<>(SUM(COUNT(vt0.c2)))))))) UNION ALL SELECT ALL vt0.c0, rt0.c0, rt0.c1, vt0.c1, vt0.c2 FROM vt0, rt0 GROUP BY vt0.c0, rt0.c0, rt0.c1, vt0.c1, vt0.c2 HAVING (((+ (((COUNT(COUNT(AVG(rt0.c2))))<>(SUM(COUNT(vt0.c2))))))) ISNULL);
SELECT TOTAL(((((((((((vt0.c2) NOT NULL))OR((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c0))))))AND('*䝐m%''')))OR((((rt0.c0, vt0.c2, vt0.c1))>=((rt0.c0, vt0.c2, ''))))))OR(CASE WHEN rt0.c0 THEN vt0.c1 END))) FROM vt0, rt0 ORDER BY JULIANDAY(((((x'')AND(vt0.c1)))OR(rt0.c1)), ((vt0.c0)+(vt0.c0)), (NOT (rt0.c0)))  NULLS LAST;
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE (0Xffffffffa6202fc6) UNION ALL SELECT * FROM rt0 WHERE ((NOT (0Xffffffffa6202fc6))) UNION ALL SELECT * FROM rt0 WHERE (((0Xffffffffa6202fc6) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT * FROM rt0, vt0;
SELECT DISTINCT * FROM rt0, vt0 WHERE (((((vt0.c1) BETWEEN (vt0.c0) AND (rt0.c1)))IS NOT(x'78d3'))) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE ((NOT (((((vt0.c1) BETWEEN (vt0.c0) AND (rt0.c1)))IS NOT(x'78d3'))))) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE (((((((vt0.c1) BETWEEN (vt0.c0) AND (rt0.c1)))IS NOT(x'78d3'))) ISNULL));
SELECT DISTINCT * FROM rt0, vt0;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 WHERE (rt0.c0) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0 WHERE ((NOT (rt0.c0))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0 WHERE (((rt0.c0) ISNULL)) GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c1, vt0.c2 FROM vt0, rt0 GROUP BY rt0.c1, vt0.c2;
SELECT ALL rt0.c1, vt0.c2 FROM vt0, rt0 GROUP BY rt0.c1, vt0.c2 HAVING GROUP_CONCAT(CASE COUNT(*)  WHEN COUNT(*) THEN SUM(COUNT(*)) WHEN TOTAL(MIN(vt0.c0)) THEN rt0.c0 WHEN MAX(TOTAL(MAX(rt0.c1))) THEN vt0.c0 WHEN 'U)+30\pA' THEN MAX(COUNT(*)) WHEN SUM(rt0.c2) THEN COUNT(*) ELSE TOTAL(GROUP_CONCAT(TOTAL(COUNT(*)))) END) UNION ALL SELECT rt0.c1, vt0.c2 FROM vt0, rt0 GROUP BY rt0.c1, vt0.c2 HAVING (NOT (GROUP_CONCAT(CASE COUNT(*)  WHEN COUNT(*) THEN SUM(COUNT(*)) WHEN TOTAL(MIN(vt0.c0)) THEN rt0.c0 WHEN MAX(TOTAL(MAX(rt0.c1))) THEN vt0.c0 WHEN 'U)+30\pA' THEN MAX(COUNT(*)) WHEN SUM(rt0.c2) THEN COUNT(*) ELSE TOTAL(GROUP_CONCAT(TOTAL(COUNT(*)))) END))) UNION ALL SELECT ALL rt0.c1, vt0.c2 FROM vt0, rt0 GROUP BY rt0.c1, vt0.c2 HAVING ((GROUP_CONCAT(CASE COUNT(*)  WHEN COUNT(*) THEN SUM(COUNT(*)) WHEN TOTAL(MIN(vt0.c0)) THEN rt0.c0 WHEN MAX(TOTAL(MAX(rt0.c1))) THEN vt0.c0 WHEN 'U)+30\pA' THEN MAX(COUNT(*)) WHEN SUM(rt0.c2) THEN COUNT(*) ELSE TOTAL(GROUP_CONCAT(TOTAL(COUNT(*)))) END)) ISNULL);
SELECT vt0.c0, vt0.c1, vt0.c2 FROM vt0;
SELECT ALL vt0.c0, vt0.c1, vt0.c2 FROM vt0 WHERE (vt0.c2 COLLATE RTRIM COLLATE NOCASE) UNION ALL SELECT ALL vt0.c0, vt0.c1, vt0.c2 FROM vt0 WHERE ((NOT (vt0.c2 COLLATE RTRIM COLLATE NOCASE))) UNION ALL SELECT vt0.c0, vt0.c1, vt0.c2 FROM vt0 WHERE (((vt0.c2 COLLATE RTRIM COLLATE NOCASE) ISNULL));
SELECT vt0.c0, vt0.c1, vt0.c2 FROM vt0;
SELECT DISTINCT * FROM vt0 CROSS JOIN rt0 ON CASE ((rt0.c0)OR(rt0.c2))  WHEN ((vt0.c1)IS NOT(vt0.c0)) THEN x'2b1b' WHEN (NOT (vt0.c0)) THEN ((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2)) WHEN rt0.c2 COLLATE NOCASE THEN vt0.c0 COLLATE BINARY END;
SELECT DISTINCT * FROM vt0 CROSS JOIN rt0 ON CASE ((rt0.c0)OR(rt0.c2))  WHEN ((vt0.c1)IS NOT(vt0.c0)) THEN x'2b1b' WHEN (NOT (vt0.c0)) THEN ((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2)) WHEN rt0.c2 COLLATE NOCASE THEN vt0.c0 COLLATE BINARY END WHERE (((rt0.c2) ISNULL)) UNION SELECT DISTINCT * FROM vt0 CROSS JOIN rt0 ON CASE ((rt0.c0)OR(rt0.c2))  WHEN ((vt0.c1)IS NOT(vt0.c0)) THEN x'2b1b' WHEN (NOT (vt0.c0)) THEN ((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2)) WHEN rt0.c2 COLLATE NOCASE THEN vt0.c0 COLLATE BINARY END WHERE ((NOT (((rt0.c2) ISNULL)))) UNION SELECT DISTINCT * FROM vt0 CROSS JOIN rt0 ON CASE ((rt0.c0)OR(rt0.c2))  WHEN ((vt0.c1)IS NOT(vt0.c0)) THEN x'2b1b' WHEN (NOT (vt0.c0)) THEN ((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2)) WHEN rt0.c2 COLLATE NOCASE THEN vt0.c0 COLLATE BINARY END WHERE (((((rt0.c2) ISNULL)) ISNULL));
SELECT DISTINCT * FROM vt0 CROSS JOIN rt0 ON CASE ((rt0.c0)OR(rt0.c2))  WHEN ((vt0.c1)IS NOT(vt0.c0)) THEN x'2b1b' WHEN (NOT (vt0.c0)) THEN ((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2)) WHEN rt0.c2 COLLATE NOCASE THEN vt0.c0 COLLATE BINARY END;
SELECT rt0.c1, rt0.c0, vt0.c2, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c1, rt0.c0, vt0.c2, vt0.c0;
SELECT rt0.c1, rt0.c0, vt0.c2, vt0.c0 FROM rt0, vt0 WHERE ((((((((vt0.c1)AND(rt0.c0)))AND(vt0.c0))))>=((((vt0.c2)>>(rt0.c2)))))) GROUP BY rt0.c1, rt0.c0, vt0.c2, vt0.c0 UNION SELECT rt0.c1, rt0.c0, vt0.c2, vt0.c0 FROM rt0, vt0 WHERE ((NOT ((((((((vt0.c1)AND(rt0.c0)))AND(vt0.c0))))>=((((vt0.c2)>>(rt0.c2)))))))) GROUP BY rt0.c1, rt0.c0, vt0.c2, vt0.c0 UNION SELECT ALL rt0.c1, rt0.c0, vt0.c2, vt0.c0 FROM rt0, vt0 WHERE ((((((((((vt0.c1)AND(rt0.c0)))AND(vt0.c0))))>=((((vt0.c2)>>(rt0.c2)))))) ISNULL)) GROUP BY rt0.c1, rt0.c0, vt0.c2, vt0.c0;
SELECT rt0.c1, rt0.c0, vt0.c2, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c1, rt0.c0, vt0.c2, vt0.c0;
SELECT vt0.c1, vt0.c2, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c2, vt0.c0;
SELECT ALL vt0.c1, vt0.c2, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c2, vt0.c0 HAVING ((MIN(SUM(COUNT(vt0.c1)))) NOT BETWEEN (vt0.c2) AND (AVG(COUNT(TOTAL(vt0.c2))))) UNION ALL SELECT ALL vt0.c1, vt0.c2, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c2, vt0.c0 HAVING (NOT (((MIN(SUM(COUNT(vt0.c1)))) NOT BETWEEN (vt0.c2) AND (AVG(COUNT(TOTAL(vt0.c2))))))) UNION ALL SELECT ALL vt0.c1, vt0.c2, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c2, vt0.c0 HAVING ((((MIN(SUM(COUNT(vt0.c1)))) NOT BETWEEN (vt0.c2) AND (AVG(COUNT(TOTAL(vt0.c2)))))) ISNULL);
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c1 END IN ())) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT ((CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c1 END IN ())))) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((((CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c1 END IN ())) ISNULL));
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (CASE WHEN rt0.c1 THEN ((rt0.c0)IS NOT(rt0.c1)) ELSE rt0.c2 END) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (CASE WHEN rt0.c1 THEN ((rt0.c0)IS NOT(rt0.c1)) ELSE rt0.c2 END))) UNION SELECT DISTINCT * FROM rt0 WHERE (((CASE WHEN rt0.c1 THEN ((rt0.c0)IS NOT(rt0.c1)) ELSE rt0.c2 END) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL vt0.c1, vt0.c0, rt0.c0, rt0.c2, vt0.c2 FROM vt0, rt0 GROUP BY vt0.c1, vt0.c0, rt0.c0, rt0.c2, vt0.c2;
SELECT vt0.c1, vt0.c0, rt0.c0, rt0.c2, vt0.c2 FROM vt0, rt0 WHERE (((CASE WHEN rt0.c0 THEN rt0.c1 END)>>('-1009404019' COLLATE BINARY))) GROUP BY vt0.c1, vt0.c0, rt0.c0, rt0.c2, vt0.c2 UNION SELECT vt0.c1, vt0.c0, rt0.c0, rt0.c2, vt0.c2 FROM vt0, rt0 WHERE ((NOT (((CASE WHEN rt0.c0 THEN rt0.c1 END)>>('-1009404019' COLLATE BINARY))))) GROUP BY vt0.c1, vt0.c0, rt0.c0, rt0.c2, vt0.c2 UNION SELECT vt0.c1, vt0.c0, rt0.c0, rt0.c2, vt0.c2 FROM vt0, rt0 WHERE (((((CASE WHEN rt0.c0 THEN rt0.c1 END)>>('-1009404019' COLLATE BINARY))) ISNULL)) GROUP BY vt0.c1, vt0.c0, rt0.c0, rt0.c2, vt0.c2;
SELECT ALL vt0.c1, vt0.c0, rt0.c0, rt0.c2, vt0.c2 FROM vt0, rt0 GROUP BY vt0.c1, vt0.c0, rt0.c0, rt0.c2, vt0.c2;
SELECT vt0.c2, rt0.c2 FROM vt0 NATURAL JOIN rt0 GROUP BY vt0.c2, rt0.c2;
SELECT vt0.c2, rt0.c2 FROM vt0 NATURAL JOIN rt0 GROUP BY vt0.c2, rt0.c2 HAVING AVG(COUNT(*)) UNION ALL SELECT vt0.c2, rt0.c2 FROM vt0 NATURAL JOIN rt0 GROUP BY vt0.c2, rt0.c2 HAVING (NOT (AVG(COUNT(*)))) UNION ALL SELECT ALL vt0.c2, rt0.c2 FROM vt0 NATURAL JOIN rt0 GROUP BY vt0.c2, rt0.c2 HAVING ((AVG(COUNT(*))) ISNULL);
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((((rt0.c2, rt0.c0, x'', rt0.c1, 0.3528665413245433)) NOT BETWEEN ((CAST(rt0.c1 AS REAL), TYPEOF(rt0.c1), ((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0)), ((rt0.c2)%(rt0.c2)), rt0.c0 COLLATE BINARY)) AND ((((((rt0.c1)OR(rt0.c2)))AND(rt0.c1)), ((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c2)), ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1)), NULL COLLATE BINARY, rt0.c2 COLLATE BINARY)))) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT ((((rt0.c2, rt0.c0, x'', rt0.c1, 0.3528665413245433)) NOT BETWEEN ((CAST(rt0.c1 AS REAL), TYPEOF(rt0.c1), ((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0)), ((rt0.c2)%(rt0.c2)), rt0.c0 COLLATE BINARY)) AND ((((((rt0.c1)OR(rt0.c2)))AND(rt0.c1)), ((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c2)), ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1)), NULL COLLATE BINARY, rt0.c2 COLLATE BINARY)))))) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((((((rt0.c2, rt0.c0, x'', rt0.c1, 0.3528665413245433)) NOT BETWEEN ((CAST(rt0.c1 AS REAL), TYPEOF(rt0.c1), ((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0)), ((rt0.c2)%(rt0.c2)), rt0.c0 COLLATE BINARY)) AND ((((((rt0.c1)OR(rt0.c2)))AND(rt0.c1)), ((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c2)), ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1)), NULL COLLATE BINARY, rt0.c2 COLLATE BINARY)))) ISNULL));
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE ((((vt0.c2)) BETWEEN (('')) AND ((((0.4886789671561115) BETWEEN (vt0.c0) AND (vt0.c2)))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT ((((vt0.c2)) BETWEEN (('')) AND ((((0.4886789671561115) BETWEEN (vt0.c0) AND (vt0.c2)))))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((((((vt0.c2)) BETWEEN (('')) AND ((((0.4886789671561115) BETWEEN (vt0.c0) AND (vt0.c2)))))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT vt0.c1, vt0.c2, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c2, vt0.c0;
SELECT vt0.c1, vt0.c2, vt0.c0 FROM vt0 WHERE ((- (vt0.c2)) COLLATE BINARY) GROUP BY vt0.c1, vt0.c2, vt0.c0 UNION SELECT ALL vt0.c1, vt0.c2, vt0.c0 FROM vt0 WHERE ((NOT ((- (vt0.c2)) COLLATE BINARY))) GROUP BY vt0.c1, vt0.c2, vt0.c0 UNION SELECT vt0.c1, vt0.c2, vt0.c0 FROM vt0 WHERE ((((- (vt0.c2)) COLLATE BINARY) ISNULL)) GROUP BY vt0.c1, vt0.c2, vt0.c0;
SELECT vt0.c1, vt0.c2, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c2, vt0.c0;
SELECT vt0.c0, rt0.c1, rt0.c2, vt0.c1, vt0.c2, rt0.c0 FROM rt0 FULL OUTER JOIN vt0 ON ((NULL COLLATE BINARY)OR(rt0.c2 COLLATE NOCASE)) GROUP BY vt0.c0, rt0.c1, rt0.c2, vt0.c1, vt0.c2, rt0.c0;
SELECT vt0.c0, rt0.c1, rt0.c2, vt0.c1, vt0.c2, rt0.c0 FROM rt0 FULL OUTER JOIN vt0 ON ((NULL COLLATE BINARY)OR(rt0.c2 COLLATE NOCASE)) GROUP BY vt0.c0, rt0.c1, rt0.c2, vt0.c1, vt0.c2, rt0.c0 HAVING MIN(MIN(rt0.c2)) UNION ALL SELECT ALL vt0.c0, rt0.c1, rt0.c2, vt0.c1, vt0.c2, rt0.c0 FROM rt0 FULL OUTER JOIN vt0 ON ((NULL COLLATE BINARY)OR(rt0.c2 COLLATE NOCASE)) GROUP BY vt0.c0, rt0.c1, rt0.c2, vt0.c1, vt0.c2, rt0.c0 HAVING (NOT (MIN(MIN(rt0.c2)))) UNION ALL SELECT ALL vt0.c0, rt0.c1, rt0.c2, vt0.c1, vt0.c2, rt0.c0 FROM rt0 FULL OUTER JOIN vt0 ON ((NULL COLLATE BINARY)OR(rt0.c2 COLLATE NOCASE)) GROUP BY vt0.c0, rt0.c1, rt0.c2, vt0.c1, vt0.c2, rt0.c0 HAVING ((MIN(MIN(rt0.c2))) ISNULL);
SELECT rt0.c1, rt0.c2 FROM rt0;
SELECT rt0.c1, rt0.c2 FROM rt0 WHERE (((rt0.c0)>>(rt0.c1)) COLLATE NOCASE) UNION ALL SELECT ALL rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (((rt0.c0)>>(rt0.c1)) COLLATE NOCASE))) UNION ALL SELECT ALL rt0.c1, rt0.c2 FROM rt0 WHERE (((((rt0.c0)>>(rt0.c1)) COLLATE NOCASE) ISNULL));
SELECT rt0.c1, rt0.c2 FROM rt0;
SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0 WHERE (((vt0.c2)IS NOT((vt0.c0 IN ())))) UNION SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0 WHERE ((NOT (((vt0.c2)IS NOT((vt0.c0 IN ())))))) UNION SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0 WHERE (((((vt0.c2)IS NOT((vt0.c0 IN ())))) ISNULL));
SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 WHERE (((((TRIM(rt0.c2))AND(rt0.c2)))AND(((rt0.c0)=(rt0.c2))))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0 WHERE ((NOT (((((TRIM(rt0.c2))AND(rt0.c2)))AND(((rt0.c0)=(rt0.c2))))))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0 WHERE (((((((TRIM(rt0.c2))AND(rt0.c2)))AND(((rt0.c0)==(rt0.c2))))) ISNULL)) GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL vt0.c0, vt0.c1, vt0.c2 FROM vt0 GROUP BY vt0.c0, vt0.c1, vt0.c2;
SELECT ALL vt0.c0, vt0.c1, vt0.c2 FROM vt0 GROUP BY vt0.c0, vt0.c1, vt0.c2 HAVING CASE WHEN SUM(COUNT(*)) THEN (((TOTAL(vt0.c2), GROUP_CONCAT(vt0.c0), vt0.c1)) BETWEEN ((vt0.c2, MIN(vt0.c1), SUM(vt0.c1))) AND ((vt0.c0, MAX(AVG(vt0.c1)), AVG(AVG(COUNT(*)))))) WHEN TOTAL(vt0.c1) THEN CASE WHEN vt0.c2 THEN x'8c46' ELSE '426272215' END WHEN MIN(vt0.c2) THEN TOTAL(AVG(vt0.c2)) END UNION ALL SELECT ALL vt0.c0, vt0.c1, vt0.c2 FROM vt0 GROUP BY vt0.c0, vt0.c1, vt0.c2 HAVING (NOT (CASE WHEN SUM(COUNT(*)) THEN (((TOTAL(vt0.c2), GROUP_CONCAT(vt0.c0), vt0.c1)) BETWEEN ((vt0.c2, MIN(vt0.c1), SUM(vt0.c1))) AND ((vt0.c0, MAX(AVG(vt0.c1)), AVG(AVG(COUNT(*)))))) WHEN TOTAL(vt0.c1) THEN CASE WHEN vt0.c2 THEN x'8c46' ELSE '426272215' END WHEN MIN(vt0.c2) THEN TOTAL(AVG(vt0.c2)) END)) UNION ALL SELECT ALL vt0.c0, vt0.c1, vt0.c2 FROM vt0 GROUP BY vt0.c0, vt0.c1, vt0.c2 HAVING ((CASE WHEN SUM(COUNT(*)) THEN (((TOTAL(vt0.c2), GROUP_CONCAT(vt0.c0), vt0.c1)) BETWEEN ((vt0.c2, MIN(vt0.c1), SUM(vt0.c1))) AND ((vt0.c0, MAX(AVG(vt0.c1)), AVG(AVG(COUNT(*)))))) WHEN TOTAL(vt0.c1) THEN CASE WHEN vt0.c2 THEN x'8c46' ELSE '426272215' END WHEN MIN(vt0.c2) THEN TOTAL(AVG(vt0.c2)) END) ISNULL);
SELECT ALL * FROM rt0;
SELECT * FROM rt0 WHERE (COALESCE((rt0.c1 IN ()), NULL)) UNION ALL SELECT * FROM rt0 WHERE ((NOT (COALESCE((rt0.c1 IN ()), NULL)))) UNION ALL SELECT * FROM rt0 WHERE (((COALESCE((rt0.c1 IN ()), NULL)) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT vt0.c2, rt0.c1, vt0.c0, rt0.c0, vt0.c1, rt0.c2 FROM rt0, vt0;
SELECT DISTINCT vt0.c2, rt0.c1, vt0.c0, rt0.c0, vt0.c1, rt0.c2 FROM rt0, vt0 WHERE (((x'7a277f2f')OR(CAST(rt0.c2 AS REAL)))) UNION SELECT DISTINCT vt0.c2, rt0.c1, vt0.c0, rt0.c0, vt0.c1, rt0.c2 FROM rt0, vt0 WHERE ((NOT (((x'7a277f2f')OR(CAST(rt0.c2 AS REAL)))))) UNION SELECT DISTINCT vt0.c2, rt0.c1, vt0.c0, rt0.c0, vt0.c1, rt0.c2 FROM rt0, vt0 WHERE (((((x'7a277f2f')OR(CAST(rt0.c2 AS REAL)))) ISNULL));
SELECT DISTINCT vt0.c2, rt0.c1, vt0.c0, rt0.c0, vt0.c1, rt0.c2 FROM rt0, vt0;
SELECT vt0.c2, vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c2, vt0.c0, vt0.c1;
SELECT vt0.c2, vt0.c0, vt0.c1 FROM vt0 WHERE (((vt0.c0)%(vt0.c2)) COLLATE RTRIM) GROUP BY vt0.c2, vt0.c0, vt0.c1 UNION SELECT vt0.c2, vt0.c0, vt0.c1 FROM vt0 WHERE ((NOT (((vt0.c0)%(vt0.c2)) COLLATE RTRIM))) GROUP BY vt0.c2, vt0.c0, vt0.c1 UNION SELECT ALL vt0.c2, vt0.c0, vt0.c1 FROM vt0 WHERE (((((vt0.c0)%(vt0.c2)) COLLATE RTRIM) ISNULL)) GROUP BY vt0.c2, vt0.c0, vt0.c1;
SELECT vt0.c2, vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c2, vt0.c0, vt0.c1;
SELECT vt0.c2 FROM rt0 INNER JOIN vt0 ON (((((vt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((vt0.c2))))IS NOT(((vt0.c2) IS TRUE))) GROUP BY vt0.c2;
SELECT vt0.c2 FROM rt0 INNER JOIN vt0 ON (((((vt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((vt0.c2))))IS NOT(((vt0.c2) IS TRUE))) GROUP BY vt0.c2 HAVING ((((vt0.c1)>=(SUM(SUM(COUNT(MAX(rt0.c1)))))))==(COUNT(COUNT(GROUP_CONCAT(TOTAL(GROUP_CONCAT(MAX(rt0.c2)))))))) UNION ALL SELECT ALL vt0.c2 FROM rt0 INNER JOIN vt0 ON (((((vt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((vt0.c2))))IS NOT(((vt0.c2) IS TRUE))) GROUP BY vt0.c2 HAVING (NOT (((((vt0.c1)>=(SUM(SUM(COUNT(MAX(rt0.c1)))))))==(COUNT(COUNT(GROUP_CONCAT(TOTAL(GROUP_CONCAT(MAX(rt0.c2)))))))))) UNION ALL SELECT ALL vt0.c2 FROM rt0 INNER JOIN vt0 ON (((((vt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((vt0.c2))))IS NOT(((vt0.c2) IS TRUE))) GROUP BY vt0.c2 HAVING ((((((vt0.c1)>=(SUM(SUM(COUNT(MAX(rt0.c1)))))))==(COUNT(COUNT(GROUP_CONCAT(TOTAL(GROUP_CONCAT(MAX(rt0.c2))))))))) ISNULL);
SELECT ALL * FROM rt0, vt0;
SELECT * FROM rt0, vt0 WHERE (CAST((+ (rt0.c2)) AS INTEGER)) UNION ALL SELECT * FROM rt0, vt0 WHERE ((NOT (CAST((+ (rt0.c2)) AS INTEGER)))) UNION ALL SELECT ALL * FROM rt0, vt0 WHERE (((CAST((+ (rt0.c2)) AS INTEGER)) ISNULL));
SELECT ALL * FROM rt0, vt0;
SELECT DISTINCT * FROM rt0, vt0;
SELECT DISTINCT * FROM rt0, vt0 WHERE (CASE WHEN (((x'9086'))<((0.8969227034117198))) THEN ((rt0.c1)+(rt0.c2)) END) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE ((NOT (CASE WHEN (((x'9086'))<((0.8969227034117198))) THEN ((rt0.c1)+(rt0.c2)) END))) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE (((CASE WHEN (((x'9086'))<((0.8969227034117198))) THEN ((rt0.c1)+(rt0.c2)) END) ISNULL));
SELECT DISTINCT * FROM rt0, vt0;
SELECT rt0.c1, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c1, vt0.c0;
SELECT ALL rt0.c1, vt0.c0 FROM vt0, rt0 WHERE (((vt0.c1 COLLATE BINARY) BETWEEN ((vt0.c0 IN ())) AND (((vt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2))))) GROUP BY rt0.c1, vt0.c0 UNION SELECT ALL rt0.c1, vt0.c0 FROM vt0, rt0 WHERE ((NOT (((vt0.c1 COLLATE BINARY) BETWEEN ((vt0.c0 IN ())) AND (((vt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2))))))) GROUP BY rt0.c1, vt0.c0 UNION SELECT rt0.c1, vt0.c0 FROM vt0, rt0 WHERE (((((vt0.c1 COLLATE BINARY) BETWEEN ((vt0.c0 IN ())) AND (((vt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2))))) ISNULL)) GROUP BY rt0.c1, vt0.c0;
SELECT rt0.c1, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c1, vt0.c0;
SELECT ALL vt0.c0, vt0.c2, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c2, vt0.c1;
SELECT ALL vt0.c0, vt0.c2, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c2, vt0.c1 HAVING TOTAL(COUNT(vt0.c2)) UNION ALL SELECT vt0.c0, vt0.c2, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c2, vt0.c1 HAVING (NOT (TOTAL(COUNT(vt0.c2)))) UNION ALL SELECT ALL vt0.c0, vt0.c2, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c2, vt0.c1 HAVING ((TOTAL(COUNT(vt0.c2))) ISNULL);
SELECT * FROM rt0, vt0;
SELECT * FROM rt0, vt0 WHERE ((((((rt0.c2))<=((vt0.c0))))||(((((rt0.c0)OR(rt0.c0)))OR(rt0.c0))))) UNION ALL SELECT ALL * FROM rt0, vt0 WHERE ((NOT ((((((rt0.c2))<=((vt0.c0))))||(((((rt0.c0)OR(rt0.c0)))OR(rt0.c0))))))) UNION ALL SELECT ALL * FROM rt0, vt0 WHERE ((((((((rt0.c2))<=((vt0.c0))))||(((((rt0.c0)OR(rt0.c0)))OR(rt0.c0))))) ISNULL));
SELECT * FROM rt0, vt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((((rt0.c2 COLLATE RTRIM)AND(CAST(rt0.c1 AS NUMERIC))))AND(((0.8740763980614679)<(rt0.c1))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((((rt0.c2 COLLATE RTRIM)AND(CAST(rt0.c1 AS NUMERIC))))AND(((0.8740763980614679)<(rt0.c1))))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((((rt0.c2 COLLATE RTRIM)AND(CAST(rt0.c1 AS NUMERIC))))AND(((0.8740763980614679)<(rt0.c1))))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 WHERE (UPPER(rt0.c0)) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0 WHERE ((NOT (UPPER(rt0.c0)))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0 WHERE (((UPPER(rt0.c0)) ISNULL)) GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING SUM(CAST(SUM(COUNT(MAX(rt0.c2))) AS INTEGER)) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING (NOT (SUM(CAST(SUM(COUNT(MAX(rt0.c2))) AS INTEGER)))) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING ((SUM(CAST(SUM(COUNT(MAX(rt0.c2))) AS INTEGER))) ISNULL);
SELECT * FROM vt0, rt0;
SELECT ALL * FROM vt0, rt0 WHERE (CASE ((((rt0.c1)AND(vt0.c0)))AND(vt0.c1))  WHEN rt0.c2 COLLATE NOCASE THEN TRIM(DISTINCT rt0.c1, vt0.c0) WHEN -3.43480228E8 THEN ((rt0.c0) NOT BETWEEN (vt0.c1) AND (rt0.c0)) WHEN CAST(vt0.c2 AS TEXT) THEN ABS(DISTINCT vt0.c1) END) UNION ALL SELECT * FROM vt0, rt0 WHERE ((NOT (CASE ((((rt0.c1)AND(vt0.c0)))AND(vt0.c1))  WHEN rt0.c2 COLLATE NOCASE THEN TRIM(DISTINCT rt0.c1, vt0.c0) WHEN -3.43480228E8 THEN ((rt0.c0) NOT BETWEEN (vt0.c1) AND (rt0.c0)) WHEN CAST(vt0.c2 AS TEXT) THEN ABS(DISTINCT vt0.c1) END))) UNION ALL SELECT ALL * FROM vt0, rt0 WHERE (((CASE ((((rt0.c1)AND(vt0.c0)))AND(vt0.c1))  WHEN rt0.c2 COLLATE NOCASE THEN TRIM(DISTINCT rt0.c1, vt0.c0) WHEN -3.43480228E8 THEN ((rt0.c0) NOT BETWEEN (vt0.c1) AND (rt0.c0)) WHEN CAST(vt0.c2 AS TEXT) THEN ABS(DISTINCT vt0.c1) END) ISNULL));
SELECT * FROM vt0, rt0;
SELECT DISTINCT rt0.c1, rt0.c2, vt0.c1 FROM vt0 NATURAL JOIN rt0;
SELECT DISTINCT rt0.c1, rt0.c2, vt0.c1 FROM vt0 NATURAL JOIN rt0 WHERE (NULL) UNION SELECT DISTINCT rt0.c1, rt0.c2, vt0.c1 FROM vt0 NATURAL JOIN rt0 WHERE ((NOT (NULL))) UNION SELECT DISTINCT rt0.c1, rt0.c2, vt0.c1 FROM vt0 NATURAL JOIN rt0 WHERE (((NULL) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c2, vt0.c1 FROM vt0 NATURAL JOIN rt0;
SELECT ALL vt0.c1, vt0.c2 FROM vt0 GROUP BY vt0.c1, vt0.c2;
SELECT ALL vt0.c1, vt0.c2 FROM vt0 WHERE ((NOT (vt0.c0))) GROUP BY vt0.c1, vt0.c2 UNION SELECT vt0.c1, vt0.c2 FROM vt0 WHERE ((NOT ((NOT (vt0.c0))))) GROUP BY vt0.c1, vt0.c2 UNION SELECT vt0.c1, vt0.c2 FROM vt0 WHERE ((((NOT (vt0.c0))) ISNULL)) GROUP BY vt0.c1, vt0.c2;
SELECT ALL vt0.c1, vt0.c2 FROM vt0 GROUP BY vt0.c1, vt0.c2;
SELECT ALL rt0.c0, vt0.c1, rt0.c2 FROM vt0, rt0 GROUP BY rt0.c0, vt0.c1, rt0.c2;
SELECT ALL rt0.c0, vt0.c1, rt0.c2 FROM vt0, rt0 GROUP BY rt0.c0, vt0.c1, rt0.c2 HAVING AVG(rt0.c1) COLLATE RTRIM UNION ALL SELECT ALL rt0.c0, vt0.c1, rt0.c2 FROM vt0, rt0 GROUP BY rt0.c0, vt0.c1, rt0.c2 HAVING (NOT (AVG(rt0.c1) COLLATE RTRIM)) UNION ALL SELECT rt0.c0, vt0.c1, rt0.c2 FROM vt0, rt0 GROUP BY rt0.c0, vt0.c1, rt0.c2 HAVING ((AVG(rt0.c1) COLLATE RTRIM) ISNULL);
SELECT ALL rt0.c0, vt0.c1, rt0.c2 FROM vt0, rt0 GROUP BY rt0.c0, vt0.c1, rt0.c2;
SELECT ALL rt0.c0, vt0.c1, rt0.c2 FROM vt0, rt0 GROUP BY rt0.c0, vt0.c1, rt0.c2 HAVING AVG(rt0.c1) COLLATE RTRIM UNION ALL SELECT ALL rt0.c0, vt0.c1, rt0.c2 FROM vt0, rt0 GROUP BY rt0.c0, vt0.c1, rt0.c2 HAVING (NOT (AVG(rt0.c1) COLLATE RTRIM)) UNION ALL SELECT rt0.c0, vt0.c1, rt0.c2 FROM vt0, rt0 GROUP BY rt0.c0, vt0.c1, rt0.c2 HAVING ((AVG(rt0.c1) COLLATE RTRIM) ISNULL);
SELECT ALL rt0.c0, vt0.c1, rt0.c2 FROM vt0, rt0 GROUP BY rt0.c0, vt0.c1, rt0.c2;
SELECT ALL rt0.c0, vt0.c1, vt0.c2 FROM vt0 INNER JOIN rt0 ON '1';
SELECT ALL rt0.c0, vt0.c1, vt0.c2 FROM vt0 INNER JOIN rt0 ON '1' WHERE (((0Xffffffff8ad2d418)<(((rt0.c1) IS FALSE)))) UNION ALL SELECT rt0.c0, vt0.c1, vt0.c2 FROM vt0 INNER JOIN rt0 ON '1' WHERE ((NOT (((0Xffffffff8ad2d418)<(((rt0.c1) IS FALSE)))))) UNION ALL SELECT rt0.c0, vt0.c1, vt0.c2 FROM vt0 INNER JOIN rt0 ON '1' WHERE (((((0Xffffffff8ad2d418)<(((rt0.c1) IS FALSE)))) ISNULL));
SELECT ALL rt0.c0, vt0.c1, vt0.c2 FROM vt0 INNER JOIN rt0 ON '1';
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((SUBSTR(rt0.c2, rt0.c0))LIKE(rt0.c2 COLLATE RTRIM))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((SUBSTR(rt0.c2, rt0.c0))LIKE(rt0.c2 COLLATE RTRIM))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((SUBSTR(rt0.c2, rt0.c0))LIKE(rt0.c2 COLLATE RTRIM))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT vt0.c0, rt0.c2, rt0.c1, rt0.c0, vt0.c2, vt0.c1 FROM rt0, vt0 GROUP BY vt0.c0, rt0.c2, rt0.c1, rt0.c0, vt0.c2, vt0.c1;
SELECT vt0.c0, rt0.c2, rt0.c1, rt0.c0, vt0.c2, vt0.c1 FROM rt0, vt0 WHERE ('1119755684') GROUP BY vt0.c0, rt0.c2, rt0.c1, rt0.c0, vt0.c2, vt0.c1 UNION SELECT vt0.c0, rt0.c2, rt0.c1, rt0.c0, vt0.c2, vt0.c1 FROM rt0, vt0 WHERE ((NOT ('1119755684'))) GROUP BY vt0.c0, rt0.c2, rt0.c1, rt0.c0, vt0.c2, vt0.c1 UNION SELECT ALL vt0.c0, rt0.c2, rt0.c1, rt0.c0, vt0.c2, vt0.c1 FROM rt0, vt0 WHERE ((('1119755684') ISNULL)) GROUP BY vt0.c0, rt0.c2, rt0.c1, rt0.c0, vt0.c2, vt0.c1;
SELECT vt0.c0, rt0.c2, rt0.c1, rt0.c0, vt0.c2, vt0.c1 FROM rt0, vt0 GROUP BY vt0.c0, rt0.c2, rt0.c1, rt0.c0, vt0.c2, vt0.c1;
SELECT ALL vt0.c2, rt0.c0, vt0.c0 FROM rt0, vt0 GROUP BY vt0.c2, rt0.c0, vt0.c0;
SELECT vt0.c2, rt0.c0, vt0.c0 FROM rt0, vt0 GROUP BY vt0.c2, rt0.c0, vt0.c0 HAVING CASE ((vt0.c1) NOT NULL)  WHEN TOTAL(rt0.c0) THEN ((MAX(MAX(rt0.c2))) NOT BETWEEN (vt0.c1) AND (rt0.c2)) ELSE MIN(vt0.c0) END UNION ALL SELECT ALL vt0.c2, rt0.c0, vt0.c0 FROM rt0, vt0 GROUP BY vt0.c2, rt0.c0, vt0.c0 HAVING (NOT (CASE ((vt0.c1) NOT NULL)  WHEN TOTAL(rt0.c0) THEN ((MAX(MAX(rt0.c2))) NOT BETWEEN (vt0.c1) AND (rt0.c2)) ELSE MIN(vt0.c0) END)) UNION ALL SELECT vt0.c2, rt0.c0, vt0.c0 FROM rt0, vt0 GROUP BY vt0.c2, rt0.c0, vt0.c0 HAVING ((CASE ((vt0.c1) NOT NULL)  WHEN TOTAL(rt0.c0) THEN ((MAX(MAX(rt0.c2))) NOT BETWEEN (vt0.c1) AND (rt0.c2)) ELSE MIN(vt0.c0) END) ISNULL);
SELECT * FROM vt0, rt0;
SELECT * FROM vt0, rt0 WHERE (((vt0.c2)<<(vt0.c1)) COLLATE RTRIM) UNION ALL SELECT ALL * FROM vt0, rt0 WHERE ((NOT (((vt0.c2)<<(vt0.c1)) COLLATE RTRIM))) UNION ALL SELECT ALL * FROM vt0, rt0 WHERE (((((vt0.c2)<<(vt0.c1)) COLLATE RTRIM) ISNULL));
SELECT * FROM vt0, rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((~ ('.vQ/e~KgL'))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((~ ('.vQ/e~KgL'))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((~ ('.vQ/e~KgL'))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (((vt0.c2) BETWEEN (vt0.c1) AND ('WF2K')) COLLATE RTRIM) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (((vt0.c2) BETWEEN (vt0.c1) AND ('WF2K')) COLLATE RTRIM))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((((vt0.c2) BETWEEN (vt0.c1) AND ('WF2K')) COLLATE RTRIM) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING TOTAL(COUNT(*)) UNION ALL SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING (NOT (TOTAL(COUNT(*)))) UNION ALL SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING ((TOTAL(COUNT(*))) ISNULL);
SELECT ALL * FROM vt0, rt0;
SELECT * FROM vt0, rt0 WHERE (((CAST(vt0.c2 AS REAL))LIKE(((vt0.c0) NOT BETWEEN (vt0.c0) AND (0Xffffffffbe95bd2b))))) UNION ALL SELECT * FROM vt0, rt0 WHERE ((NOT (((CAST(vt0.c2 AS REAL))LIKE(((vt0.c0) NOT BETWEEN (vt0.c0) AND (0xffffffffbe95bd2b))))))) UNION ALL SELECT ALL * FROM vt0, rt0 WHERE (((((CAST(vt0.c2 AS REAL))LIKE(((vt0.c0) NOT BETWEEN (vt0.c0) AND (0xffffffffbe95bd2b))))) ISNULL));
SELECT ALL * FROM vt0, rt0;
SELECT DISTINCT vt0.c1, rt0.c0, rt0.c1, vt0.c2, vt0.c0 FROM vt0, rt0;
SELECT DISTINCT vt0.c1, rt0.c0, rt0.c1, vt0.c2, vt0.c0 FROM vt0, rt0 WHERE (((LIKELY(vt0.c1))<(''))) UNION SELECT DISTINCT vt0.c1, rt0.c0, rt0.c1, vt0.c2, vt0.c0 FROM vt0, rt0 WHERE ((NOT (((LIKELY(vt0.c1))<(''))))) UNION SELECT DISTINCT vt0.c1, rt0.c0, rt0.c1, vt0.c2, vt0.c0 FROM vt0, rt0 WHERE (((((LIKELY(vt0.c1))<(''))) ISNULL));
SELECT DISTINCT vt0.c1, rt0.c0, rt0.c1, vt0.c2, vt0.c0 FROM vt0, rt0;
SELECT ALL vt0.c2, vt0.c0 FROM vt0 GROUP BY vt0.c2, vt0.c0;
SELECT ALL vt0.c2, vt0.c0 FROM vt0 WHERE (CASE WHEN ((((vt0.c2)OR(x'787d')))OR('377947882')) THEN (((vt0.c2))<=((vt0.c0))) WHEN vt0.c0 COLLATE RTRIM THEN ((vt0.c0) NOT BETWEEN (x'') AND (vt0.c2)) WHEN LENGTH(NULL) THEN (((vt0.c1))>((vt0.c0))) WHEN vt0.c0 COLLATE NOCASE THEN CASE WHEN vt0.c2 THEN 'Ej' WHEN vt0.c1 THEN vt0.c2 WHEN vt0.c1 THEN vt0.c0 END WHEN ((vt0.c1)+(x'')) THEN ((vt0.c1) NOT BETWEEN (vt0.c2) AND (x'')) END) GROUP BY vt0.c2, vt0.c0 UNION SELECT ALL vt0.c2, vt0.c0 FROM vt0 WHERE ((NOT (CASE WHEN ((((vt0.c2)OR(x'787d')))OR('377947882')) THEN (((vt0.c2))<=((vt0.c0))) WHEN vt0.c0 COLLATE RTRIM THEN ((vt0.c0) NOT BETWEEN (x'') AND (vt0.c2)) WHEN LENGTH(NULL) THEN (((vt0.c1))>((vt0.c0))) WHEN vt0.c0 COLLATE NOCASE THEN CASE WHEN vt0.c2 THEN 'Ej' WHEN vt0.c1 THEN vt0.c2 WHEN vt0.c1 THEN vt0.c0 END WHEN ((vt0.c1)+(x'')) THEN ((vt0.c1) NOT BETWEEN (vt0.c2) AND (x'')) END))) GROUP BY vt0.c2, vt0.c0 UNION SELECT vt0.c2, vt0.c0 FROM vt0 WHERE (((CASE WHEN ((((vt0.c2)OR(x'787d')))OR('377947882')) THEN (((vt0.c2))<=((vt0.c0))) WHEN vt0.c0 COLLATE RTRIM THEN ((vt0.c0) NOT BETWEEN (x'') AND (vt0.c2)) WHEN LENGTH(NULL) THEN (((vt0.c1))>((vt0.c0))) WHEN vt0.c0 COLLATE NOCASE THEN CASE WHEN vt0.c2 THEN 'Ej' WHEN vt0.c1 THEN vt0.c2 WHEN vt0.c1 THEN vt0.c0 END WHEN ((vt0.c1)+(x'')) THEN ((vt0.c1) NOT BETWEEN (vt0.c2) AND (x'')) END) ISNULL)) GROUP BY vt0.c2, vt0.c0;
SELECT ALL vt0.c2, vt0.c0 FROM vt0 GROUP BY vt0.c2, vt0.c0;
SELECT vt0.c0, rt0.c2, rt0.c1, vt0.c1, rt0.c0, vt0.c2 FROM rt0, vt0 GROUP BY vt0.c0, rt0.c2, rt0.c1, vt0.c1, rt0.c0, vt0.c2;
SELECT ALL vt0.c0, rt0.c2, rt0.c1, vt0.c1, rt0.c0, vt0.c2 FROM rt0, vt0 GROUP BY vt0.c0, rt0.c2, rt0.c1, vt0.c1, rt0.c0, vt0.c2 HAVING TOTAL(CAST(rt0.c1 AS REAL)) UNION ALL SELECT vt0.c0, rt0.c2, rt0.c1, vt0.c1, rt0.c0, vt0.c2 FROM rt0, vt0 GROUP BY vt0.c0, rt0.c2, rt0.c1, vt0.c1, rt0.c0, vt0.c2 HAVING (NOT (TOTAL(CAST(rt0.c1 AS REAL)))) UNION ALL SELECT vt0.c0, rt0.c2, rt0.c1, vt0.c1, rt0.c0, vt0.c2 FROM rt0, vt0 GROUP BY vt0.c0, rt0.c2, rt0.c1, vt0.c1, rt0.c0, vt0.c2 HAVING ((TOTAL(CAST(rt0.c1 AS REAL))) ISNULL);
SELECT vt0.c0, rt0.c2, rt0.c1, vt0.c1, rt0.c0, vt0.c2 FROM rt0, vt0 GROUP BY vt0.c0, rt0.c2, rt0.c1, vt0.c1, rt0.c0, vt0.c2;
SELECT ALL vt0.c0, rt0.c2, rt0.c1, vt0.c1, rt0.c0, vt0.c2 FROM rt0, vt0 GROUP BY vt0.c0, rt0.c2, rt0.c1, vt0.c1, rt0.c0, vt0.c2 HAVING TOTAL(CAST(rt0.c1 AS REAL)) UNION ALL SELECT vt0.c0, rt0.c2, rt0.c1, vt0.c1, rt0.c0, vt0.c2 FROM rt0, vt0 GROUP BY vt0.c0, rt0.c2, rt0.c1, vt0.c1, rt0.c0, vt0.c2 HAVING (NOT (TOTAL(CAST(rt0.c1 AS REAL)))) UNION ALL SELECT vt0.c0, rt0.c2, rt0.c1, vt0.c1, rt0.c0, vt0.c2 FROM rt0, vt0 GROUP BY vt0.c0, rt0.c2, rt0.c1, vt0.c1, rt0.c0, vt0.c2 HAVING ((TOTAL(CAST(rt0.c1 AS REAL))) ISNULL);
SELECT vt0.c0, rt0.c2, rt0.c1, vt0.c1, rt0.c0, vt0.c2 FROM rt0, vt0 GROUP BY vt0.c0, rt0.c2, rt0.c1, vt0.c1, rt0.c0, vt0.c2;
SELECT * FROM vt0;
SELECT * FROM vt0 WHERE (CAST(((((vt0.c0)OR(vt0.c0)))AND(vt0.c2)) AS TEXT)) UNION ALL SELECT * FROM vt0 WHERE ((NOT (CAST(((((vt0.c0)OR(vt0.c0)))AND(vt0.c2)) AS TEXT)))) UNION ALL SELECT ALL * FROM vt0 WHERE (((CAST(((((vt0.c0)OR(vt0.c0)))AND(vt0.c2)) AS TEXT)) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((((+ (rt0.c2)))IS(((((((((((((rt0.c0)OR(rt0.c2)))OR(rt0.c0)))OR(rt0.c0)))OR(rt0.c1)))OR(x'')))OR(rt0.c2))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((((+ (rt0.c2)))IS(((((((((((((rt0.c0)OR(rt0.c2)))OR(rt0.c0)))OR(rt0.c0)))OR(rt0.c1)))OR(x'')))OR(rt0.c2))))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((((+ (rt0.c2)))IS(((((((((((((rt0.c0)OR(rt0.c2)))OR(rt0.c0)))OR(rt0.c0)))OR(rt0.c1)))OR(x'')))OR(rt0.c2))))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL vt0.c0, rt0.c1 FROM rt0, vt0 GROUP BY vt0.c0, rt0.c1;
SELECT ALL vt0.c0, rt0.c1 FROM rt0, vt0 WHERE (NULL) GROUP BY vt0.c0, rt0.c1 UNION SELECT vt0.c0, rt0.c1 FROM rt0, vt0 WHERE ((NOT (NULL))) GROUP BY vt0.c0, rt0.c1 UNION SELECT ALL vt0.c0, rt0.c1 FROM rt0, vt0 WHERE (((NULL) ISNULL)) GROUP BY vt0.c0, rt0.c1;
SELECT ALL vt0.c0, rt0.c1 FROM rt0, vt0 GROUP BY vt0.c0, rt0.c1;
SELECT vt0.c1, rt0.c1, rt0.c0 FROM vt0, rt0 GROUP BY vt0.c1, rt0.c1, rt0.c0;
SELECT vt0.c1, rt0.c1, rt0.c0 FROM vt0, rt0 GROUP BY vt0.c1, rt0.c1, rt0.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt0.c1, rt0.c1, rt0.c0 FROM vt0, rt0 GROUP BY vt0.c1, rt0.c1, rt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt0.c1, rt0.c1, rt0.c0 FROM vt0, rt0 GROUP BY vt0.c1, rt0.c1, rt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt0.c1, rt0.c1, rt0.c0 FROM vt0, rt0 GROUP BY vt0.c1, rt0.c1, rt0.c0;
SELECT vt0.c1, rt0.c1, rt0.c0 FROM vt0, rt0 GROUP BY vt0.c1, rt0.c1, rt0.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt0.c1, rt0.c1, rt0.c0 FROM vt0, rt0 GROUP BY vt0.c1, rt0.c1, rt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt0.c1, rt0.c1, rt0.c0 FROM vt0, rt0 GROUP BY vt0.c1, rt0.c1, rt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt0.c1, rt0.c1, rt0.c0 FROM vt0, rt0 GROUP BY vt0.c1, rt0.c1, rt0.c0;
SELECT ALL * FROM rt0 NATURAL JOIN vt0;
SELECT ALL * FROM rt0 NATURAL JOIN vt0 WHERE (0.14447615859494256) UNION ALL SELECT * FROM rt0 NATURAL JOIN vt0 WHERE ((NOT (0.14447615859494256))) UNION ALL SELECT ALL * FROM rt0 NATURAL JOIN vt0 WHERE (((0.14447615859494256) ISNULL));
SELECT ALL * FROM rt0 NATURAL JOIN vt0;
SELECT DISTINCT vt0.c0, vt0.c1, vt0.c2 FROM vt0;
SELECT DISTINCT vt0.c0, vt0.c1, vt0.c2 FROM vt0 WHERE (vt0.c0) UNION SELECT DISTINCT vt0.c0, vt0.c1, vt0.c2 FROM vt0 WHERE ((NOT (vt0.c0))) UNION SELECT DISTINCT vt0.c0, vt0.c1, vt0.c2 FROM vt0 WHERE (((vt0.c0) ISNULL));
SELECT DISTINCT vt0.c0, vt0.c1, vt0.c2 FROM vt0;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE (((SQLITE_COMPILEOPTION_GET(rt0.c1)) NOTNULL)) GROUP BY rt0.c0, rt0.c1, rt0.c2 UNION SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 NOT INDEXED WHERE ((NOT (((SQLITE_COMPILEOPTION_GET(rt0.c1)) NOTNULL)))) GROUP BY rt0.c0, rt0.c1, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE (((((SQLITE_COMPILEOPTION_GET(rt0.c1)) NOTNULL)) ISNULL)) GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT vt0.c2, vt0.c1 FROM vt0 GROUP BY vt0.c2, vt0.c1;
SELECT vt0.c2, vt0.c1 FROM vt0 GROUP BY vt0.c2, vt0.c1 HAVING MAX(COUNT(*)) UNION ALL SELECT ALL vt0.c2, vt0.c1 FROM vt0 GROUP BY vt0.c2, vt0.c1 HAVING (NOT (MAX(COUNT(*)))) UNION ALL SELECT ALL vt0.c2, vt0.c1 FROM vt0 GROUP BY vt0.c2, vt0.c1 HAVING ((MAX(COUNT(*))) ISNULL);
SELECT ALL * FROM vt0;
SELECT ALL * FROM vt0 WHERE ((((vt0.c2, vt0.c2, vt0.c2)) NOT BETWEEN ((CASE WHEN vt0.c1 THEN 0.45582196506166617 ELSE vt0.c0 END, (vt0.c2 IN ()), x'0714')) AND ((((vt0.c0) NOTNULL), vt0.c1, vt0.c1)))) UNION ALL SELECT * FROM vt0 WHERE ((NOT ((((vt0.c2, vt0.c2, vt0.c2)) NOT BETWEEN ((CASE WHEN vt0.c1 THEN 0.45582196506166617 ELSE vt0.c0 END, (vt0.c2 IN ()), x'0714')) AND ((((vt0.c0) NOTNULL), vt0.c1, vt0.c1)))))) UNION ALL SELECT ALL * FROM vt0 WHERE ((((((vt0.c2, vt0.c2, vt0.c2)) NOT BETWEEN ((CASE WHEN vt0.c1 THEN 0.45582196506166617 ELSE vt0.c0 END, (vt0.c2 IN ()), x'0714')) AND ((((vt0.c0) NOTNULL), vt0.c1, vt0.c1)))) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT * FROM vt0, rt0;
SELECT DISTINCT * FROM vt0, rt0 WHERE (((((((vt0.c1)AND(0.17663581485279323)))OR(vt0.c1)))>>((vt0.c0 IN (vt0.c0))))) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE ((NOT (((((((vt0.c1)AND(0.17663581485279323)))OR(vt0.c1)))>>((vt0.c0 IN (vt0.c0))))))) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE (((((((((vt0.c1)AND(0.17663581485279323)))OR(vt0.c1)))>>((vt0.c0 IN (vt0.c0))))) ISNULL));
SELECT DISTINCT * FROM vt0, rt0;
SELECT ALL vt0.c2, rt0.c2, vt0.c0 FROM rt0 FULL OUTER JOIN vt0 ON ((vt0.c0) NOT BETWEEN ('r3q{8') AND (((vt0.c0)*(rt0.c2)))) GROUP BY vt0.c2, rt0.c2, vt0.c0;
SELECT vt0.c2, rt0.c2, vt0.c0 FROM rt0 FULL OUTER JOIN vt0 ON ((vt0.c0) NOT BETWEEN ('r3q{8') AND (((vt0.c0)*(rt0.c2)))) WHERE ('⧦o') GROUP BY vt0.c2, rt0.c2, vt0.c0 UNION SELECT vt0.c2, rt0.c2, vt0.c0 FROM rt0 FULL OUTER JOIN vt0 ON ((vt0.c0) NOT BETWEEN ('r3q{8') AND (((vt0.c0)*(rt0.c2)))) WHERE ((NOT ('⧦o'))) GROUP BY vt0.c2, rt0.c2, vt0.c0 UNION SELECT ALL vt0.c2, rt0.c2, vt0.c0 FROM rt0 FULL OUTER JOIN vt0 ON ((vt0.c0) NOT BETWEEN ('r3q{8') AND (((vt0.c0)*(rt0.c2)))) WHERE ((('⧦o') ISNULL)) GROUP BY vt0.c2, rt0.c2, vt0.c0;
SELECT ALL vt0.c2, rt0.c2, vt0.c0 FROM rt0 FULL OUTER JOIN vt0 ON ((vt0.c0) NOT BETWEEN ('r3q{8') AND (((vt0.c0)*(rt0.c2)))) GROUP BY vt0.c2, rt0.c2, vt0.c0;
SELECT vt0.c2 FROM vt0 GROUP BY vt0.c2;
SELECT ALL vt0.c2 FROM vt0 GROUP BY vt0.c2 HAVING ((COUNT(*) COLLATE NOCASE)<=(MIN(vt0.c2))) UNION ALL SELECT ALL vt0.c2 FROM vt0 GROUP BY vt0.c2 HAVING (NOT (((COUNT(*) COLLATE NOCASE)<=(MIN(vt0.c2))))) UNION ALL SELECT ALL vt0.c2 FROM vt0 GROUP BY vt0.c2 HAVING ((((COUNT(*) COLLATE NOCASE)<=(MIN(vt0.c2)))) ISNULL);
SELECT vt0.c2 FROM vt0 GROUP BY vt0.c2;
SELECT ALL vt0.c2 FROM vt0 GROUP BY vt0.c2 HAVING ((COUNT(*) COLLATE NOCASE)<=(MIN(vt0.c2))) UNION ALL SELECT ALL vt0.c2 FROM vt0 GROUP BY vt0.c2 HAVING (NOT (((COUNT(*) COLLATE NOCASE)<=(MIN(vt0.c2))))) UNION ALL SELECT ALL vt0.c2 FROM vt0 GROUP BY vt0.c2 HAVING ((((COUNT(*) COLLATE NOCASE)<=(MIN(vt0.c2)))) ISNULL);
SELECT vt0.c2 FROM vt0 GROUP BY vt0.c2;
SELECT * FROM vt0 CROSS JOIN rt0 ON ((((CAST('-800429243' AS INTEGER))AND(CASE WHEN rt0.c2 THEN vt0.c1 WHEN vt0.c2 THEN vt0.c1 WHEN vt0.c2 THEN vt0.c0 ELSE rt0.c2 END)))OR(((rt0.c2) IS FALSE)));
SELECT ALL * FROM vt0 CROSS JOIN rt0 ON ((((CAST('-800429243' AS INTEGER))AND(CASE WHEN rt0.c2 THEN vt0.c1 WHEN vt0.c2 THEN vt0.c1 WHEN vt0.c2 THEN vt0.c0 ELSE rt0.c2 END)))OR(((rt0.c2) IS FALSE))) WHERE ((((((rt0.c2) BETWEEN (vt0.c0) AND (vt0.c0))))=((x'')))) UNION ALL SELECT * FROM vt0 CROSS JOIN rt0 ON ((((CAST('-800429243' AS INTEGER))AND(CASE WHEN rt0.c2 THEN vt0.c1 WHEN vt0.c2 THEN vt0.c1 WHEN vt0.c2 THEN vt0.c0 ELSE rt0.c2 END)))OR(((rt0.c2) IS FALSE))) WHERE ((NOT ((((((rt0.c2) BETWEEN (vt0.c0) AND (vt0.c0))))==((x'')))))) UNION ALL SELECT ALL * FROM vt0 CROSS JOIN rt0 ON ((((CAST('-800429243' AS INTEGER))AND(CASE WHEN rt0.c2 THEN vt0.c1 WHEN vt0.c2 THEN vt0.c1 WHEN vt0.c2 THEN vt0.c0 ELSE rt0.c2 END)))OR(((rt0.c2) IS FALSE))) WHERE ((((((((rt0.c2) BETWEEN (vt0.c0) AND (vt0.c0))))=((x'')))) ISNULL));
SELECT * FROM vt0 CROSS JOIN rt0 ON ((((CAST('-800429243' AS INTEGER))AND(CASE WHEN rt0.c2 THEN vt0.c1 WHEN vt0.c2 THEN vt0.c1 WHEN vt0.c2 THEN vt0.c0 ELSE rt0.c2 END)))OR(((rt0.c2) IS FALSE)));
SELECT DISTINCT * FROM vt0 RIGHT OUTER JOIN rt0 ON ((((vt0.c0)IS(vt0.c2)))/(LOWER(DISTINCT vt0.c2)));
SELECT DISTINCT * FROM vt0 RIGHT OUTER JOIN rt0 ON ((((vt0.c0)IS(vt0.c2)))/(LOWER(DISTINCT vt0.c2))) WHERE (((((((((((((TRIM(0.40107564600597123, vt0.c0))AND(CAST(vt0.c0 AS NUMERIC))))OR((+ (x'b4ed')))))OR(IFNULL(-1009404019, rt0.c0))))OR(((vt0.c0)OR(rt0.c1)))))AND((+ (vt0.c0)))))OR((+ (vt0.c1))))) UNION SELECT DISTINCT * FROM vt0 RIGHT OUTER JOIN rt0 ON ((((vt0.c0)IS(vt0.c2)))/(LOWER(DISTINCT vt0.c2))) WHERE ((NOT (((((((((((((TRIM(0.40107564600597123, vt0.c0))AND(CAST(vt0.c0 AS NUMERIC))))OR((+ (x'b4ed')))))OR(IFNULL(-1009404019, rt0.c0))))OR(((vt0.c0)OR(rt0.c1)))))AND((+ (vt0.c0)))))OR((+ (vt0.c1))))))) UNION SELECT DISTINCT * FROM vt0 RIGHT OUTER JOIN rt0 ON ((((vt0.c0)IS(vt0.c2)))/(LOWER(DISTINCT vt0.c2))) WHERE (((((((((((((((TRIM(0.40107564600597123, vt0.c0))AND(CAST(vt0.c0 AS NUMERIC))))OR((+ (x'b4ed')))))OR(IFNULL(-1009404019, rt0.c0))))OR(((vt0.c0)OR(rt0.c1)))))AND((+ (vt0.c0)))))OR((+ (vt0.c1))))) ISNULL));
SELECT DISTINCT * FROM vt0 RIGHT OUTER JOIN rt0 ON ((((vt0.c0)IS(vt0.c2)))/(LOWER(DISTINCT vt0.c2)));
SELECT ALL vt0.c2, rt0.c1 FROM vt0, rt0 GROUP BY vt0.c2, rt0.c1;
SELECT vt0.c2, rt0.c1 FROM vt0, rt0 WHERE (vt0.c0) GROUP BY vt0.c2, rt0.c1 UNION SELECT vt0.c2, rt0.c1 FROM vt0, rt0 WHERE ((NOT (vt0.c0))) GROUP BY vt0.c2, rt0.c1 UNION SELECT vt0.c2, rt0.c1 FROM vt0, rt0 WHERE (((vt0.c0) ISNULL)) GROUP BY vt0.c2, rt0.c1;
SELECT ALL vt0.c2, rt0.c1 FROM vt0, rt0 GROUP BY vt0.c2, rt0.c1;
SELECT vt0.c2, vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c2, vt0.c0, vt0.c1;
SELECT vt0.c2, vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c2, vt0.c0, vt0.c1 HAVING GROUP_CONCAT(CASE vt0.c0  WHEN vt0.c1 THEN SUM(vt0.c2) WHEN vt0.c2 THEN vt0.c2 WHEN vt0.c0 THEN vt0.c2 END) UNION ALL SELECT ALL vt0.c2, vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c2, vt0.c0, vt0.c1 HAVING (NOT (GROUP_CONCAT(CASE vt0.c0  WHEN vt0.c1 THEN SUM(vt0.c2) WHEN vt0.c2 THEN vt0.c2 WHEN vt0.c0 THEN vt0.c2 END))) UNION ALL SELECT vt0.c2, vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c2, vt0.c0, vt0.c1 HAVING ((GROUP_CONCAT(CASE vt0.c0  WHEN vt0.c1 THEN SUM(vt0.c2) WHEN vt0.c2 THEN vt0.c2 WHEN vt0.c0 THEN vt0.c2 END)) ISNULL);
SELECT ALL * FROM vt0 RIGHT OUTER JOIN rt0 ON ((CAST(rt0.c1 AS TEXT)) NOTNULL);
SELECT * FROM vt0 RIGHT OUTER JOIN rt0 ON ((CAST(rt0.c1 AS TEXT)) NOTNULL) WHERE (((((rt0.c2 IN ())))>=((((rt0.c0)||(rt0.c2)))))) UNION ALL SELECT * FROM vt0 RIGHT OUTER JOIN rt0 ON ((CAST(rt0.c1 AS TEXT)) NOTNULL) WHERE ((NOT (((((rt0.c2 IN ())))>=((((rt0.c0)||(rt0.c2)))))))) UNION ALL SELECT * FROM vt0 RIGHT OUTER JOIN rt0 ON ((CAST(rt0.c1 AS TEXT)) NOTNULL) WHERE (((((((rt0.c2 IN ())))>=((((rt0.c0)||(rt0.c2)))))) ISNULL));
SELECT ALL * FROM vt0 RIGHT OUTER JOIN rt0 ON ((CAST(rt0.c1 AS TEXT)) NOTNULL);
SELECT DISTINCT * FROM rt0, vt0;
SELECT DISTINCT * FROM rt0, vt0 WHERE (CASE WHEN ((vt0.c2)||(rt0.c0)) THEN ((vt0.c2) ISNULL) ELSE (rt0.c2 IN (1315144081)) END) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE ((NOT (CASE WHEN ((vt0.c2)||(rt0.c0)) THEN ((vt0.c2) ISNULL) ELSE (rt0.c2 IN (1315144081)) END))) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE (((CASE WHEN ((vt0.c2)||(rt0.c0)) THEN ((vt0.c2) ISNULL) ELSE (rt0.c2 IN (1315144081)) END) ISNULL));
SELECT DISTINCT * FROM rt0, vt0;
SELECT vt0.c2, vt0.c0 FROM vt0 GROUP BY vt0.c2, vt0.c0;
SELECT ALL vt0.c2, vt0.c0 FROM vt0 WHERE (((((vt0.c2))>((NULL))) IN (vt0.c1, (NOT (vt0.c0))))) GROUP BY vt0.c2, vt0.c0 UNION SELECT vt0.c2, vt0.c0 FROM vt0 WHERE ((NOT (((((vt0.c2))>((NULL))) IN (vt0.c1, (NOT (vt0.c0))))))) GROUP BY vt0.c2, vt0.c0 UNION SELECT ALL vt0.c2, vt0.c0 FROM vt0 WHERE (((((((vt0.c2))>((NULL))) IN (vt0.c1, (NOT (vt0.c0))))) ISNULL)) GROUP BY vt0.c2, vt0.c0;
SELECT vt0.c2, vt0.c0 FROM vt0 GROUP BY vt0.c2, vt0.c0;
SELECT rt0.c0, vt0.c2, rt0.c2, rt0.c1, vt0.c1, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c0, vt0.c2, rt0.c2, rt0.c1, vt0.c1, vt0.c0;
SELECT ALL rt0.c0, vt0.c2, rt0.c2, rt0.c1, vt0.c1, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c0, vt0.c2, rt0.c2, rt0.c1, vt0.c1, vt0.c0 HAVING CAST((((COUNT(COUNT(*)), COUNT(*), AVG(rt0.c1))) NOT BETWEEN ((MIN(rt0.c0), rt0.c0, COUNT(*))) AND ((rt0.c0, rt0.c1, NULL))) AS TEXT) UNION ALL SELECT rt0.c0, vt0.c2, rt0.c2, rt0.c1, vt0.c1, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c0, vt0.c2, rt0.c2, rt0.c1, vt0.c1, vt0.c0 HAVING (NOT (CAST((((COUNT(COUNT(*)), COUNT(*), AVG(rt0.c1))) NOT BETWEEN ((MIN(rt0.c0), rt0.c0, COUNT(*))) AND ((rt0.c0, rt0.c1, NULL))) AS TEXT))) UNION ALL SELECT rt0.c0, vt0.c2, rt0.c2, rt0.c1, vt0.c1, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c0, vt0.c2, rt0.c2, rt0.c1, vt0.c1, vt0.c0 HAVING ((CAST((((COUNT(COUNT(*)), COUNT(*), AVG(rt0.c1))) NOT BETWEEN ((MIN(rt0.c0), rt0.c0, COUNT(*))) AND ((rt0.c0, rt0.c1, NULL))) AS TEXT)) ISNULL);
SELECT ALL vt0.c2, vt0.c1 FROM vt0;
SELECT vt0.c2, vt0.c1 FROM vt0 WHERE (CASE UPPER(vt0.c0)  WHEN ((((vt0.c2)OR(vt0.c2)))OR(vt0.c1)) THEN ((((vt0.c2)OR(vt0.c1)))AND(vt0.c1)) ELSE ((((((((vt0.c0)AND(vt0.c2)))AND(vt0.c2)))OR(vt0.c2)))AND(vt0.c0)) END) UNION ALL SELECT vt0.c2, vt0.c1 FROM vt0 WHERE ((NOT (CASE UPPER(vt0.c0)  WHEN ((((vt0.c2)OR(vt0.c2)))OR(vt0.c1)) THEN ((((vt0.c2)OR(vt0.c1)))AND(vt0.c1)) ELSE ((((((((vt0.c0)AND(vt0.c2)))AND(vt0.c2)))OR(vt0.c2)))AND(vt0.c0)) END))) UNION ALL SELECT vt0.c2, vt0.c1 FROM vt0 WHERE (((CASE UPPER(vt0.c0)  WHEN ((((vt0.c2)OR(vt0.c2)))OR(vt0.c1)) THEN ((((vt0.c2)OR(vt0.c1)))AND(vt0.c1)) ELSE ((((((((vt0.c0)AND(vt0.c2)))AND(vt0.c2)))OR(vt0.c2)))AND(vt0.c0)) END) ISNULL));
SELECT ALL vt0.c2, vt0.c1 FROM vt0;
SELECT DISTINCT * FROM rt0 LEFT OUTER JOIN vt0 ON ((NULL) BETWEEN ((((rt0.c0, rt0.c1, rt0.c0)) BETWEEN ((vt0.c0, rt0.c0, vt0.c1)) AND ((x'', 0.622725735776212, 0.474521125543072)))) AND (((rt0.c2)+(rt0.c0))));
SELECT DISTINCT * FROM rt0 LEFT OUTER JOIN vt0 ON ((NULL) BETWEEN ((((rt0.c0, rt0.c1, rt0.c0)) BETWEEN ((vt0.c0, rt0.c0, vt0.c1)) AND ((x'', 0.622725735776212, 0.474521125543072)))) AND (((rt0.c2)+(rt0.c0)))) WHERE (CASE WHEN rt0.c0 COLLATE NOCASE THEN CAST(vt0.c2 AS NUMERIC) WHEN CASE WHEN vt0.c1 THEN 0.7367874679179726 WHEN 0.045404647616493876 THEN rt0.c2 WHEN rt0.c2 THEN vt0.c1 END THEN ((rt0.c1)-(rt0.c0)) WHEN ((vt0.c0)*(vt0.c2)) THEN vt0.c0 COLLATE RTRIM END) UNION SELECT DISTINCT * FROM rt0 LEFT OUTER JOIN vt0 ON ((NULL) BETWEEN ((((rt0.c0, rt0.c1, rt0.c0)) BETWEEN ((vt0.c0, rt0.c0, vt0.c1)) AND ((x'', 0.622725735776212, 0.474521125543072)))) AND (((rt0.c2)+(rt0.c0)))) WHERE ((NOT (CASE WHEN rt0.c0 COLLATE NOCASE THEN CAST(vt0.c2 AS NUMERIC) WHEN CASE WHEN vt0.c1 THEN 0.7367874679179726 WHEN 0.045404647616493876 THEN rt0.c2 WHEN rt0.c2 THEN vt0.c1 END THEN ((rt0.c1)-(rt0.c0)) WHEN ((vt0.c0)*(vt0.c2)) THEN vt0.c0 COLLATE RTRIM END))) UNION SELECT DISTINCT * FROM rt0 LEFT OUTER JOIN vt0 ON ((NULL) BETWEEN ((((rt0.c0, rt0.c1, rt0.c0)) BETWEEN ((vt0.c0, rt0.c0, vt0.c1)) AND ((x'', 0.622725735776212, 0.474521125543072)))) AND (((rt0.c2)+(rt0.c0)))) WHERE (((CASE WHEN rt0.c0 COLLATE NOCASE THEN CAST(vt0.c2 AS NUMERIC) WHEN CASE WHEN vt0.c1 THEN 0.7367874679179726 WHEN 0.045404647616493876 THEN rt0.c2 WHEN rt0.c2 THEN vt0.c1 END THEN ((rt0.c1)-(rt0.c0)) WHEN ((vt0.c0)*(vt0.c2)) THEN vt0.c0 COLLATE RTRIM END) ISNULL));
SELECT DISTINCT * FROM rt0 LEFT OUTER JOIN vt0 ON ((NULL) BETWEEN ((((rt0.c0, rt0.c1, rt0.c0)) BETWEEN ((vt0.c0, rt0.c0, vt0.c1)) AND ((x'', 0.622725735776212, 0.474521125543072)))) AND (((rt0.c2)+(rt0.c0))));
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((((LIKELIHOOD(DISTINCT NULL, 0.7274329467984831)))=(((~ (rt0.c1)))))) GROUP BY rt0.c2, rt0.c0, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT ((((LIKELIHOOD(DISTINCT NULL, 0.7274329467984831)))=(((~ (rt0.c1)))))))) GROUP BY rt0.c2, rt0.c0, rt0.c1 UNION SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((((((LIKELIHOOD(DISTINCT NULL, 0.7274329467984831)))=(((~ (rt0.c1)))))) ISNULL)) GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL vt0.c0, vt0.c2, rt0.c2, vt0.c1, rt0.c1, rt0.c0 FROM vt0 CROSS JOIN rt0 ON vt0.c2 GROUP BY vt0.c0, vt0.c2, rt0.c2, vt0.c1, rt0.c1, rt0.c0;
SELECT ALL vt0.c0, vt0.c2, rt0.c2, vt0.c1, rt0.c1, rt0.c0 FROM vt0 CROSS JOIN rt0 ON vt0.c2 GROUP BY vt0.c0, vt0.c2, rt0.c2, vt0.c1, rt0.c1, rt0.c0 HAVING COALESCE(DISTINCT SUM(MIN(vt0.c1)), SUM(vt0.c2), (((COUNT(*))) NOT BETWEEN ((TOTAL(rt0.c1))) AND ((AVG(SUM(rt0.c0))))), AVG(AVG(COUNT(*)))) UNION ALL SELECT ALL vt0.c0, vt0.c2, rt0.c2, vt0.c1, rt0.c1, rt0.c0 FROM vt0 CROSS JOIN rt0 ON vt0.c2 GROUP BY vt0.c0, vt0.c2, rt0.c2, vt0.c1, rt0.c1, rt0.c0 HAVING (NOT (COALESCE(DISTINCT SUM(MIN(vt0.c1)), SUM(vt0.c2), (((COUNT(*))) NOT BETWEEN ((TOTAL(rt0.c1))) AND ((AVG(SUM(rt0.c0))))), AVG(AVG(COUNT(*)))))) UNION ALL SELECT ALL vt0.c0, vt0.c2, rt0.c2, vt0.c1, rt0.c1, rt0.c0 FROM vt0 CROSS JOIN rt0 ON vt0.c2 GROUP BY vt0.c0, vt0.c2, rt0.c2, vt0.c1, rt0.c1, rt0.c0 HAVING ((COALESCE(DISTINCT SUM(MIN(vt0.c1)), SUM(vt0.c2), (((COUNT(*))) NOT BETWEEN ((TOTAL(rt0.c1))) AND ((AVG(SUM(rt0.c0))))), AVG(AVG(COUNT(*))))) ISNULL);
SELECT ALL rt0.c2, rt0.c1 FROM rt0;
SELECT rt0.c2, rt0.c1 FROM rt0 WHERE (ABS(((rt0.c1) NOT NULL))) UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (ABS(((rt0.c1) NOT NULL))))) UNION ALL SELECT rt0.c2, rt0.c1 FROM rt0 WHERE (((ABS(((rt0.c1) NOT NULL))) ISNULL));
SELECT ALL rt0.c2, rt0.c1 FROM rt0;
SELECT DISTINCT vt0.c2, vt0.c1 FROM vt0;
SELECT DISTINCT vt0.c2, vt0.c1 FROM vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c2) AND (vt0.c2))) NOT NULL)) UNION SELECT DISTINCT vt0.c2, vt0.c1 FROM vt0 NOT INDEXED WHERE ((NOT (((((vt0.c0) BETWEEN (vt0.c2) AND (vt0.c2))) NOT NULL)))) UNION SELECT DISTINCT vt0.c2, vt0.c1 FROM vt0 WHERE (((((((vt0.c0) BETWEEN (vt0.c2) AND (vt0.c2))) NOT NULL)) ISNULL));
SELECT DISTINCT vt0.c2, vt0.c1 FROM vt0;
SELECT ALL rt0.c2 FROM rt0, vt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0, vt0 WHERE ((((vt0.c2)) BETWEEN ((rt0.c0 COLLATE RTRIM)) AND ((LIKELIHOOD(rt0.c0, 0.7396028159017911))))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0, vt0 WHERE ((NOT ((((vt0.c2)) BETWEEN ((rt0.c0 COLLATE RTRIM)) AND ((LIKELIHOOD(rt0.c0, 0.7396028159017911))))))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0, vt0 WHERE ((((((vt0.c2)) BETWEEN ((rt0.c0 COLLATE RTRIM)) AND ((LIKELIHOOD(rt0.c0, 0.7396028159017911))))) ISNULL)) GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0, vt0 GROUP BY rt0.c2;
SELECT rt0.c0, vt0.c0, rt0.c1, rt0.c2 FROM rt0, vt0 GROUP BY rt0.c0, vt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, vt0.c0, rt0.c1, rt0.c2 FROM rt0, vt0 GROUP BY rt0.c0, vt0.c0, rt0.c1, rt0.c2 HAVING COUNT(*) UNION ALL SELECT rt0.c0, vt0.c0, rt0.c1, rt0.c2 FROM rt0, vt0 GROUP BY rt0.c0, vt0.c0, rt0.c1, rt0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c0, vt0.c0, rt0.c1, rt0.c2 FROM rt0, vt0 GROUP BY rt0.c0, vt0.c0, rt0.c1, rt0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c0, vt0.c0, rt0.c1, rt0.c2 FROM rt0, vt0 GROUP BY rt0.c0, vt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, vt0.c0, rt0.c1, rt0.c2 FROM rt0, vt0 GROUP BY rt0.c0, vt0.c0, rt0.c1, rt0.c2 HAVING COUNT(*) UNION ALL SELECT rt0.c0, vt0.c0, rt0.c1, rt0.c2 FROM rt0, vt0 GROUP BY rt0.c0, vt0.c0, rt0.c1, rt0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c0, vt0.c0, rt0.c1, rt0.c2 FROM rt0, vt0 GROUP BY rt0.c0, vt0.c0, rt0.c1, rt0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c0, vt0.c0, rt0.c1, rt0.c2 FROM rt0, vt0 GROUP BY rt0.c0, vt0.c0, rt0.c1, rt0.c2;
SELECT vt0.c0, vt0.c2, rt0.c0, rt0.c1, rt0.c2 FROM vt0 RIGHT OUTER JOIN rt0 ON ((((vt0.c1)OR(((rt0.c1)<<(rt0.c2)))))OR((vt0.c2 IN ())));
SELECT vt0.c0, vt0.c2, rt0.c0, rt0.c1, rt0.c2 FROM vt0 RIGHT OUTER JOIN rt0 ON ((((vt0.c1)OR(((rt0.c1)<<(rt0.c2)))))OR((vt0.c2 IN ()))) WHERE (((rt0.c2) BETWEEN (vt0.c0) AND (vt0.c2)) COLLATE BINARY) UNION ALL SELECT ALL vt0.c0, vt0.c2, rt0.c0, rt0.c1, rt0.c2 FROM vt0 RIGHT OUTER JOIN rt0 ON ((((vt0.c1)OR(((rt0.c1)<<(rt0.c2)))))OR((vt0.c2 IN ()))) WHERE ((NOT (((rt0.c2) BETWEEN (vt0.c0) AND (vt0.c2)) COLLATE BINARY))) UNION ALL SELECT vt0.c0, vt0.c2, rt0.c0, rt0.c1, rt0.c2 FROM vt0 RIGHT OUTER JOIN rt0 ON ((((vt0.c1)OR(((rt0.c1)<<(rt0.c2)))))OR((vt0.c2 IN ()))) WHERE (((((rt0.c2) BETWEEN (vt0.c0) AND (vt0.c2)) COLLATE BINARY) ISNULL));
SELECT vt0.c0, vt0.c2, rt0.c0, rt0.c1, rt0.c2 FROM vt0 RIGHT OUTER JOIN rt0 ON ((((vt0.c1)OR(((rt0.c1)<<(rt0.c2)))))OR((vt0.c2 IN ())));
SELECT DISTINCT * FROM rt0, vt0;
SELECT DISTINCT * FROM rt0, vt0 WHERE ((~ (((((rt0.c2)AND(vt0.c0)))AND(rt0.c2))))) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE ((NOT ((~ (((((rt0.c2)AND(vt0.c0)))AND(rt0.c2))))))) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE ((((~ (((((rt0.c2)AND(vt0.c0)))AND(rt0.c2))))) ISNULL));
SELECT DISTINCT * FROM rt0, vt0;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 WHERE (NULL) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0 WHERE ((NOT (NULL))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0 WHERE (((NULL) ISNULL)) GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT vt0.c2, vt0.c0, vt0.c1, rt0.c2, rt0.c1 FROM rt0, vt0 GROUP BY vt0.c2, vt0.c0, vt0.c1, rt0.c2, rt0.c1;
SELECT ALL vt0.c2, vt0.c0, vt0.c1, rt0.c2, rt0.c1 FROM rt0, vt0 GROUP BY vt0.c2, vt0.c0, vt0.c1, rt0.c2, rt0.c1 HAVING MAX(json_remove(COUNT('0.9267029425612332'), vt0.c2)) UNION ALL SELECT ALL vt0.c2, vt0.c0, vt0.c1, rt0.c2, rt0.c1 FROM rt0, vt0 GROUP BY vt0.c2, vt0.c0, vt0.c1, rt0.c2, rt0.c1 HAVING (NOT (MAX(json_remove(COUNT('0.9267029425612332'), vt0.c2)))) UNION ALL SELECT vt0.c2, vt0.c0, vt0.c1, rt0.c2, rt0.c1 FROM rt0, vt0 GROUP BY vt0.c2, vt0.c0, vt0.c1, rt0.c2, rt0.c1 HAVING ((MAX(json_remove(COUNT('0.9267029425612332'), vt0.c2))) ISNULL);
SELECT * FROM vt0;
SELECT * FROM vt0 WHERE (CAST(((vt0.c1) NOT BETWEEN (vt0.c2) AND (vt0.c1)) AS TEXT)) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (CAST(((vt0.c1) NOT BETWEEN (vt0.c2) AND (vt0.c1)) AS TEXT)))) UNION ALL SELECT ALL * FROM vt0 WHERE (((CAST(((vt0.c1) NOT BETWEEN (vt0.c2) AND (vt0.c1)) AS TEXT)) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT vt0.c2, rt0.c1, vt0.c1, vt0.c0 FROM vt0, rt0;
SELECT DISTINCT vt0.c2, rt0.c1, vt0.c1, vt0.c0 FROM vt0, rt0 WHERE (MIN((((rt0.c0, vt0.c0, rt0.c0)) NOT BETWEEN ((rt0.c0, vt0.c2, rt0.c2)) AND ((rt0.c0, rt0.c0, vt0.c0))), CASE 'S '  WHEN vt0.c2 THEN vt0.c0 END)) UNION SELECT DISTINCT vt0.c2, rt0.c1, vt0.c1, vt0.c0 FROM vt0, rt0 WHERE ((NOT (MIN((((rt0.c0, vt0.c0, rt0.c0)) NOT BETWEEN ((rt0.c0, vt0.c2, rt0.c2)) AND ((rt0.c0, rt0.c0, vt0.c0))), CASE 'S '  WHEN vt0.c2 THEN vt0.c0 END)))) UNION SELECT DISTINCT vt0.c2, rt0.c1, vt0.c1, vt0.c0 FROM vt0, rt0 WHERE (((MIN((((rt0.c0, vt0.c0, rt0.c0)) NOT BETWEEN ((rt0.c0, vt0.c2, rt0.c2)) AND ((rt0.c0, rt0.c0, vt0.c0))), CASE 'S '  WHEN vt0.c2 THEN vt0.c0 END)) ISNULL));
SELECT DISTINCT vt0.c2, rt0.c1, vt0.c1, vt0.c0 FROM vt0, rt0;
SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT ((((rt0.c1))>=(('1648583541')))))) GROUP BY rt0.c1, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT ((NOT ((((rt0.c1))>=(('1648583541')))))))) GROUP BY rt0.c1, rt0.c0 UNION SELECT rt0.c1, rt0.c0 FROM rt0 WHERE ((((NOT ((((rt0.c1))>=(('1648583541')))))) ISNULL)) GROUP BY rt0.c1, rt0.c0;
SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT vt0.c2, vt0.c1 FROM rt0, vt0 GROUP BY vt0.c2, vt0.c1;
SELECT ALL vt0.c2, vt0.c1 FROM rt0, vt0 GROUP BY vt0.c2, vt0.c1 HAVING MAX((~ (rt0.c1))) UNION ALL SELECT vt0.c2, vt0.c1 FROM rt0, vt0 GROUP BY vt0.c2, vt0.c1 HAVING (NOT (MAX((~ (rt0.c1))))) UNION ALL SELECT vt0.c2, vt0.c1 FROM rt0, vt0 GROUP BY vt0.c2, vt0.c1 HAVING ((MAX((~ (rt0.c1)))) ISNULL);
SELECT vt0.c2, vt0.c1 FROM rt0, vt0 GROUP BY vt0.c2, vt0.c1;
SELECT ALL vt0.c2, vt0.c1 FROM rt0, vt0 GROUP BY vt0.c2, vt0.c1 HAVING MAX((~ (rt0.c1))) UNION ALL SELECT vt0.c2, vt0.c1 FROM rt0, vt0 GROUP BY vt0.c2, vt0.c1 HAVING (NOT (MAX((~ (rt0.c1))))) UNION ALL SELECT vt0.c2, vt0.c1 FROM rt0, vt0 GROUP BY vt0.c2, vt0.c1 HAVING ((MAX((~ (rt0.c1)))) ISNULL);
SELECT vt0.c2, vt0.c1 FROM rt0, vt0 GROUP BY vt0.c2, vt0.c1;
SELECT rt0.c2, vt0.c0, vt0.c1, rt0.c0 FROM vt0 NATURAL JOIN rt0;
SELECT rt0.c2, vt0.c0, vt0.c1, rt0.c0 FROM vt0 NATURAL JOIN rt0 WHERE ((~ (CASE WHEN vt0.c2 THEN vt0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN vt0.c2 THEN vt0.c0 END))) UNION ALL SELECT ALL rt0.c2, vt0.c0, vt0.c1, rt0.c0 FROM vt0 NATURAL JOIN rt0 WHERE ((NOT ((~ (CASE WHEN vt0.c2 THEN vt0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN vt0.c2 THEN vt0.c0 END))))) UNION ALL SELECT rt0.c2, vt0.c0, vt0.c1, rt0.c0 FROM vt0 NATURAL JOIN rt0 WHERE ((((~ (CASE WHEN vt0.c2 THEN vt0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN vt0.c2 THEN vt0.c0 END))) ISNULL));
SELECT rt0.c2, vt0.c0, vt0.c1, rt0.c0 FROM vt0 NATURAL JOIN rt0;
SELECT DISTINCT rt0.c2, rt0.c0, vt0.c2 FROM rt0, vt0;
SELECT DISTINCT rt0.c2, rt0.c0, vt0.c2 FROM rt0, vt0 WHERE (((((rt0.c1)OR(((rt0.c2)-(-1.260612678E9)))))AND(CASE WHEN rt0.c1 THEN rt0.c2 END))) UNION SELECT DISTINCT rt0.c2, rt0.c0, vt0.c2 FROM rt0, vt0 WHERE ((NOT (((((rt0.c1)OR(((rt0.c2)-(-1.260612678E9)))))AND(CASE WHEN rt0.c1 THEN rt0.c2 END))))) UNION SELECT DISTINCT rt0.c2, rt0.c0, vt0.c2 FROM rt0, vt0 WHERE (((((((rt0.c1)OR(((rt0.c2)-(-1.260612678E9)))))AND(CASE WHEN rt0.c1 THEN rt0.c2 END))) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c0, vt0.c2 FROM rt0, vt0;
SELECT ALL vt0.c2, rt0.c1, rt0.c2 FROM rt0, vt0 GROUP BY vt0.c2, rt0.c1, rt0.c2;
SELECT vt0.c2, rt0.c1, rt0.c2 FROM rt0, vt0 WHERE (((((1360887024) ISNULL))IS(((vt0.c0)/(rt0.c2))))) GROUP BY vt0.c2, rt0.c1, rt0.c2 UNION SELECT vt0.c2, rt0.c1, rt0.c2 FROM rt0, vt0 WHERE ((NOT (((((1360887024) ISNULL))IS(((vt0.c0)/(rt0.c2))))))) GROUP BY vt0.c2, rt0.c1, rt0.c2 UNION SELECT ALL vt0.c2, rt0.c1, rt0.c2 FROM rt0, vt0 WHERE (((((((1360887024) ISNULL))IS(((vt0.c0)/(rt0.c2))))) ISNULL)) GROUP BY vt0.c2, rt0.c1, rt0.c2;
SELECT ALL vt0.c2, rt0.c1, rt0.c2 FROM rt0, vt0 GROUP BY vt0.c2, rt0.c1, rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT (CAST(rt0.c0 AS NUMERIC))) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT ((NOT (CAST(rt0.c0 AS NUMERIC))))) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (((NOT (CAST(rt0.c0 AS NUMERIC)))) ISNULL);
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT (CAST(rt0.c0 AS NUMERIC))) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT ((NOT (CAST(rt0.c0 AS NUMERIC))))) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (((NOT (CAST(rt0.c0 AS NUMERIC)))) ISNULL);
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL * FROM rt0, vt0;
SELECT ALL * FROM rt0, vt0 WHERE (((CAST(rt0.c1 AS NUMERIC)) BETWEEN (CAST(vt0.c0 AS NUMERIC)) AND (CAST(rt0.c0 AS INTEGER)))) UNION ALL SELECT ALL * FROM rt0, vt0 WHERE ((NOT (((CAST(rt0.c1 AS NUMERIC)) BETWEEN (CAST(vt0.c0 AS NUMERIC)) AND (CAST(rt0.c0 AS INTEGER)))))) UNION ALL SELECT ALL * FROM rt0, vt0 WHERE (((((CAST(rt0.c1 AS NUMERIC)) BETWEEN (CAST(vt0.c0 AS NUMERIC)) AND (CAST(rt0.c0 AS INTEGER)))) ISNULL));
SELECT ALL * FROM rt0, vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE ((('-2064877130') NOT NULL)) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT ((('-2064877130') NOT NULL)))) UNION SELECT DISTINCT * FROM vt0 WHERE ((((('-2064877130') NOT NULL)) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL vt0.c0, vt0.c1, vt0.c2 FROM vt0 GROUP BY vt0.c0, vt0.c1, vt0.c2;
SELECT vt0.c0, vt0.c1, vt0.c2 FROM vt0 WHERE ((((((vt0.c2)<>(vt0.c1)), json_insert(vt0.c1, vt0.c1, vt0.c1), ((vt0.c2)+(vt0.c0))))<((vt0.c2, (((x''))==((vt0.c0))), CASE vt0.c0  WHEN vt0.c2 THEN vt0.c2 END)))) GROUP BY vt0.c0, vt0.c1, vt0.c2 UNION SELECT ALL vt0.c0, vt0.c1, vt0.c2 FROM vt0 WHERE ((NOT ((((((vt0.c2)<>(vt0.c1)), json_insert(vt0.c1, vt0.c1, vt0.c1), ((vt0.c2)+(vt0.c0))))<((vt0.c2, (((x''))=((vt0.c0))), CASE vt0.c0  WHEN vt0.c2 THEN vt0.c2 END)))))) GROUP BY vt0.c0, vt0.c1, vt0.c2 UNION SELECT ALL vt0.c0, vt0.c1, vt0.c2 FROM vt0 WHERE ((((((((vt0.c2)!=(vt0.c1)), json_insert(vt0.c1, vt0.c1, vt0.c1), ((vt0.c2)+(vt0.c0))))<((vt0.c2, (((x''))==((vt0.c0))), CASE vt0.c0  WHEN vt0.c2 THEN vt0.c2 END)))) ISNULL)) GROUP BY vt0.c0, vt0.c1, vt0.c2;
SELECT ALL vt0.c0, vt0.c1, vt0.c2 FROM vt0 GROUP BY vt0.c0, vt0.c1, vt0.c2;
SELECT vt0.c0, vt0.c2, vt0.c1 FROM vt0 NATURAL JOIN rt0 GROUP BY vt0.c0, vt0.c2, vt0.c1;
SELECT ALL vt0.c0, vt0.c2, vt0.c1 FROM vt0 NATURAL JOIN rt0 GROUP BY vt0.c0, vt0.c2, vt0.c1 HAVING vt0.c0 UNION ALL SELECT ALL vt0.c0, vt0.c2, vt0.c1 FROM vt0 NATURAL JOIN rt0 GROUP BY vt0.c0, vt0.c2, vt0.c1 HAVING (NOT (vt0.c0)) UNION ALL SELECT vt0.c0, vt0.c2, vt0.c1 FROM vt0 NATURAL JOIN rt0 GROUP BY vt0.c0, vt0.c2, vt0.c1 HAVING ((vt0.c0) ISNULL);
SELECT vt0.c0, vt0.c2, vt0.c1 FROM vt0 NATURAL JOIN rt0 GROUP BY vt0.c0, vt0.c2, vt0.c1;
SELECT ALL vt0.c0, vt0.c2, vt0.c1 FROM vt0 NATURAL JOIN rt0 GROUP BY vt0.c0, vt0.c2, vt0.c1 HAVING vt0.c0 UNION ALL SELECT ALL vt0.c0, vt0.c2, vt0.c1 FROM vt0 NATURAL JOIN rt0 GROUP BY vt0.c0, vt0.c2, vt0.c1 HAVING (NOT (vt0.c0)) UNION ALL SELECT vt0.c0, vt0.c2, vt0.c1 FROM vt0 NATURAL JOIN rt0 GROUP BY vt0.c0, vt0.c2, vt0.c1 HAVING ((vt0.c0) ISNULL);
SELECT vt0.c0, vt0.c2, vt0.c1 FROM vt0 NATURAL JOIN rt0 GROUP BY vt0.c0, vt0.c2, vt0.c1;
SELECT ALL * FROM rt0, vt0;
SELECT ALL * FROM rt0, vt0 WHERE (TRIM(CASE WHEN vt0.c1 THEN vt0.c1 ELSE rt0.c0 END)) UNION ALL SELECT * FROM rt0, vt0 WHERE ((NOT (TRIM(CASE WHEN vt0.c1 THEN vt0.c1 ELSE rt0.c0 END)))) UNION ALL SELECT ALL * FROM rt0, vt0 WHERE (((TRIM(CASE WHEN vt0.c1 THEN vt0.c1 ELSE rt0.c0 END)) ISNULL));
SELECT ALL * FROM rt0, vt0;
SELECT DISTINCT vt0.c2, vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c2, vt0.c0 FROM vt0 WHERE (((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c2 END)OR(vt0.c1 COLLATE NOCASE)))OR(((((vt0.c2)OR(vt0.c2)))OR(vt0.c2))))) UNION SELECT DISTINCT vt0.c2, vt0.c0 FROM vt0 WHERE ((NOT (((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c2 END)OR(vt0.c1 COLLATE NOCASE)))OR(((((vt0.c2)OR(vt0.c2)))OR(vt0.c2))))))) UNION SELECT DISTINCT vt0.c2, vt0.c0 FROM vt0 WHERE (((((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c2 END)OR(vt0.c1 COLLATE NOCASE)))OR(((((vt0.c2)OR(vt0.c2)))OR(vt0.c2))))) ISNULL));
SELECT DISTINCT vt0.c2, vt0.c0 FROM vt0;
SELECT vt0.c2, vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c2, vt0.c0, vt0.c1;
SELECT ALL vt0.c2, vt0.c0, vt0.c1 FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END) NOT BETWEEN ((vt0.c1 IN (vt0.c0, vt0.c2))) AND (CAST(vt0.c1 AS REAL)))) GROUP BY vt0.c2, vt0.c0, vt0.c1 UNION SELECT ALL vt0.c2, vt0.c0, vt0.c1 FROM vt0 WHERE ((NOT (((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END) NOT BETWEEN ((vt0.c1 IN (vt0.c0, vt0.c2))) AND (CAST(vt0.c1 AS REAL)))))) GROUP BY vt0.c2, vt0.c0, vt0.c1 UNION SELECT ALL vt0.c2, vt0.c0, vt0.c1 FROM vt0 WHERE (((((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END) NOT BETWEEN ((vt0.c1 IN (vt0.c0, vt0.c2))) AND (CAST(vt0.c1 AS REAL)))) ISNULL)) GROUP BY vt0.c2, vt0.c0, vt0.c1;
SELECT vt0.c2, vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c2, vt0.c0, vt0.c1;
SELECT rt0.c2, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c2, vt0.c0;
SELECT ALL rt0.c2, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c2, vt0.c0 HAVING AVG(MIN(rt0.c2)) UNION ALL SELECT ALL rt0.c2, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c2, vt0.c0 HAVING (NOT (AVG(MIN(rt0.c2)))) UNION ALL SELECT ALL rt0.c2, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c2, vt0.c0 HAVING ((AVG(MIN(rt0.c2))) ISNULL);
SELECT ALL vt0.c1, rt0.c2, rt0.c1, rt0.c0, vt0.c0 FROM vt0, rt0;
SELECT vt0.c1, rt0.c2, rt0.c1, rt0.c0, vt0.c0 FROM vt0, rt0 WHERE (((((((((CAST(1940276157 AS TEXT))OR(rt0.c2)))OR(vt0.c2 COLLATE BINARY)))OR(('153686366' IN ()))))OR(((vt0.c1) IS TRUE)))) UNION ALL SELECT vt0.c1, rt0.c2, rt0.c1, rt0.c0, vt0.c0 FROM vt0, rt0 WHERE ((NOT (((((((((CAST(1940276157 AS TEXT))OR(rt0.c2)))OR(vt0.c2 COLLATE BINARY)))OR(('153686366' IN ()))))OR(((vt0.c1) IS TRUE)))))) UNION ALL SELECT ALL vt0.c1, rt0.c2, rt0.c1, rt0.c0, vt0.c0 FROM vt0, rt0 WHERE (((((((((((CAST(1940276157 AS TEXT))OR(rt0.c2)))OR(vt0.c2 COLLATE BINARY)))OR(('153686366' IN ()))))OR(((vt0.c1) IS TRUE)))) ISNULL));
SELECT ALL vt0.c1, rt0.c2, rt0.c1, rt0.c0, vt0.c0 FROM vt0, rt0;
SELECT DISTINCT vt0.c0, rt0.c0, rt0.c1 FROM vt0, rt0;
SELECT DISTINCT vt0.c0, rt0.c0, rt0.c1 FROM vt0, rt0 WHERE (((rt0.c1)||(((rt0.c2)>(rt0.c1))))) UNION SELECT DISTINCT vt0.c0, rt0.c0, rt0.c1 FROM vt0, rt0 WHERE ((NOT (((rt0.c1)||(((rt0.c2)>(rt0.c1))))))) UNION SELECT DISTINCT vt0.c0, rt0.c0, rt0.c1 FROM vt0, rt0 WHERE (((((rt0.c1)||(((rt0.c2)>(rt0.c1))))) ISNULL));
SELECT DISTINCT vt0.c0, rt0.c0, rt0.c1 FROM vt0, rt0;
SELECT ALL vt0.c1, vt0.c2, vt0.c0, rt0.c2, rt0.c0 FROM vt0, rt0 GROUP BY vt0.c1, vt0.c2, vt0.c0, rt0.c2, rt0.c0;
SELECT ALL vt0.c1, vt0.c2, vt0.c0, rt0.c2, rt0.c0 FROM vt0, rt0 WHERE ((~ (((vt0.c2)||(rt0.c1))))) GROUP BY vt0.c1, vt0.c2, vt0.c0, rt0.c2, rt0.c0 UNION SELECT vt0.c1, vt0.c2, vt0.c0, rt0.c2, rt0.c0 FROM vt0, rt0 WHERE ((NOT ((~ (((vt0.c2)||(rt0.c1))))))) GROUP BY vt0.c1, vt0.c2, vt0.c0, rt0.c2, rt0.c0 UNION SELECT vt0.c1, vt0.c2, vt0.c0, rt0.c2, rt0.c0 FROM vt0, rt0 WHERE ((((~ (((vt0.c2)||(rt0.c1))))) ISNULL)) GROUP BY vt0.c1, vt0.c2, vt0.c0, rt0.c2, rt0.c0;
SELECT ALL vt0.c1, vt0.c2, vt0.c0, rt0.c2, rt0.c0 FROM vt0, rt0 GROUP BY vt0.c1, vt0.c2, vt0.c0, rt0.c2, rt0.c0;
SELECT ALL vt0.c2, vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c2, vt0.c0, vt0.c1;
SELECT ALL vt0.c2, vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c2, vt0.c0, vt0.c1 HAVING TOTAL(0xd454d2f) COLLATE NOCASE UNION ALL SELECT vt0.c2, vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c2, vt0.c0, vt0.c1 HAVING (NOT (TOTAL(0Xd454d2f) COLLATE NOCASE)) UNION ALL SELECT vt0.c2, vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c2, vt0.c0, vt0.c1 HAVING ((TOTAL(0xd454d2f) COLLATE NOCASE) ISNULL);
SELECT ALL vt0.c2, vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c2, vt0.c0, vt0.c1;
SELECT ALL vt0.c2, vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c2, vt0.c0, vt0.c1 HAVING TOTAL(0xd454d2f) COLLATE NOCASE UNION ALL SELECT vt0.c2, vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c2, vt0.c0, vt0.c1 HAVING (NOT (TOTAL(0Xd454d2f) COLLATE NOCASE)) UNION ALL SELECT vt0.c2, vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c2, vt0.c0, vt0.c1 HAVING ((TOTAL(0xd454d2f) COLLATE NOCASE) ISNULL);
SELECT ALL vt0.c2, vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c2, vt0.c0, vt0.c1;
SELECT rt0.c2 FROM rt0;
SELECT ALL rt0.c2 FROM rt0 WHERE (CASE WHEN ((rt0.c0) NOTNULL) THEN (- (rt0.c1)) END) UNION ALL SELECT rt0.c2 FROM rt0 WHERE ((NOT (CASE WHEN ((rt0.c0) NOTNULL) THEN (- (rt0.c1)) END))) UNION ALL SELECT ALL rt0.c2 FROM rt0 WHERE (((CASE WHEN ((rt0.c0) NOTNULL) THEN (- (rt0.c1)) END) ISNULL));
SELECT rt0.c2 FROM rt0;
SELECT DISTINCT * FROM vt0, rt0;
SELECT DISTINCT * FROM vt0, rt0 WHERE (0xdb150c2) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE ((NOT (0Xdb150c2))) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE (((0Xdb150c2) ISNULL));
SELECT DISTINCT * FROM vt0, rt0;
SELECT rt0.c1, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c1, vt0.c0;
SELECT rt0.c1, vt0.c0 FROM vt0, rt0 WHERE (json_quote((- ('0.6828155816105946')))) GROUP BY rt0.c1, vt0.c0 UNION SELECT ALL rt0.c1, vt0.c0 FROM vt0, rt0 WHERE ((NOT (json_quote((- ('0.6828155816105946')))))) GROUP BY rt0.c1, vt0.c0 UNION SELECT rt0.c1, vt0.c0 FROM vt0, rt0 WHERE (((json_quote((- ('0.6828155816105946')))) ISNULL)) GROUP BY rt0.c1, vt0.c0;
SELECT rt0.c1, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c1, vt0.c0;
SELECT rt0.c1, vt0.c0, rt0.c2, vt0.c1 FROM rt0 NATURAL JOIN vt0 GROUP BY rt0.c1, vt0.c0, rt0.c2, vt0.c1;
SELECT ALL rt0.c1, vt0.c0, rt0.c2, vt0.c1 FROM rt0 NATURAL JOIN vt0 GROUP BY rt0.c1, vt0.c0, rt0.c2, vt0.c1 HAVING CAST(COUNT(*) AS REAL) UNION ALL SELECT rt0.c1, vt0.c0, rt0.c2, vt0.c1 FROM rt0 NATURAL JOIN vt0 GROUP BY rt0.c1, vt0.c0, rt0.c2, vt0.c1 HAVING (NOT (CAST(COUNT(*) AS REAL))) UNION ALL SELECT ALL rt0.c1, vt0.c0, rt0.c2, vt0.c1 FROM rt0 NATURAL JOIN vt0 GROUP BY rt0.c1, vt0.c0, rt0.c2, vt0.c1 HAVING ((CAST(COUNT(*) AS REAL)) ISNULL);
SELECT rt0.c1, vt0.c0, rt0.c2, vt0.c1 FROM rt0 NATURAL JOIN vt0 GROUP BY rt0.c1, vt0.c0, rt0.c2, vt0.c1;
SELECT ALL rt0.c1, vt0.c0, rt0.c2, vt0.c1 FROM rt0 NATURAL JOIN vt0 GROUP BY rt0.c1, vt0.c0, rt0.c2, vt0.c1 HAVING CAST(COUNT(*) AS REAL) UNION ALL SELECT rt0.c1, vt0.c0, rt0.c2, vt0.c1 FROM rt0 NATURAL JOIN vt0 GROUP BY rt0.c1, vt0.c0, rt0.c2, vt0.c1 HAVING (NOT (CAST(COUNT(*) AS REAL))) UNION ALL SELECT ALL rt0.c1, vt0.c0, rt0.c2, vt0.c1 FROM rt0 NATURAL JOIN vt0 GROUP BY rt0.c1, vt0.c0, rt0.c2, vt0.c1 HAVING ((CAST(COUNT(*) AS REAL)) ISNULL);
SELECT rt0.c1, vt0.c0, rt0.c2, vt0.c1 FROM rt0 NATURAL JOIN vt0 GROUP BY rt0.c1, vt0.c0, rt0.c2, vt0.c1;
SELECT vt0.c1, rt0.c0, vt0.c0, vt0.c2, rt0.c2, rt0.c1 FROM vt0, rt0;
SELECT ALL vt0.c1, rt0.c0, vt0.c0, vt0.c2, rt0.c2, rt0.c1 FROM vt0, rt0 WHERE (CAST(vt0.c1 COLLATE NOCASE AS INTEGER)) UNION ALL SELECT vt0.c1, rt0.c0, vt0.c0, vt0.c2, rt0.c2, rt0.c1 FROM vt0, rt0 WHERE ((NOT (CAST(vt0.c1 COLLATE NOCASE AS INTEGER)))) UNION ALL SELECT vt0.c1, rt0.c0, vt0.c0, vt0.c2, rt0.c2, rt0.c1 FROM vt0, rt0 WHERE (((CAST(vt0.c1 COLLATE NOCASE AS INTEGER)) ISNULL));
SELECT vt0.c1, rt0.c0, vt0.c0, vt0.c2, rt0.c2, rt0.c1 FROM vt0, rt0;
SELECT DISTINCT vt0.c2, vt0.c1, vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c2, vt0.c1, vt0.c0 FROM vt0 WHERE (((((vt0.c2)LIKE(vt0.c0)))<>((+ (NULL))))) UNION SELECT DISTINCT vt0.c2, vt0.c1, vt0.c0 FROM vt0 WHERE ((NOT (((((vt0.c2)LIKE(vt0.c0)))!=((+ (NULL))))))) UNION SELECT DISTINCT vt0.c2, vt0.c1, vt0.c0 FROM vt0 WHERE (((((((vt0.c2)LIKE(vt0.c0)))!=((+ (NULL))))) ISNULL));
SELECT DISTINCT vt0.c2, vt0.c1, vt0.c0 FROM vt0;
SELECT vt0.c2, rt0.c2, rt0.c1, vt0.c0 FROM vt0, rt0 GROUP BY vt0.c2, rt0.c2, rt0.c1, vt0.c0;
SELECT vt0.c2, rt0.c2, rt0.c1, vt0.c0 FROM vt0, rt0 WHERE (CASE WHEN ((((rt0.c2)AND(rt0.c2)))AND(rt0.c2)) THEN ((rt0.c1)IS NOT(vt0.c2)) WHEN rt0.c0 COLLATE NOCASE THEN CAST(rt0.c0 AS REAL) WHEN (+ (vt0.c1)) THEN (((vt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((vt0.c0))) WHEN (((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2))) THEN ((rt0.c1)-(vt0.c0)) WHEN (((vt0.c0)) NOT BETWEEN ((NULL)) AND ((rt0.c0))) THEN NULL END) GROUP BY vt0.c2, rt0.c2, rt0.c1, vt0.c0 UNION SELECT vt0.c2, rt0.c2, rt0.c1, vt0.c0 FROM vt0, rt0 WHERE ((NOT (CASE WHEN ((((rt0.c2)AND(rt0.c2)))AND(rt0.c2)) THEN ((rt0.c1)IS NOT(vt0.c2)) WHEN rt0.c0 COLLATE NOCASE THEN CAST(rt0.c0 AS REAL) WHEN (+ (vt0.c1)) THEN (((vt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((vt0.c0))) WHEN (((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2))) THEN ((rt0.c1)-(vt0.c0)) WHEN (((vt0.c0)) NOT BETWEEN ((NULL)) AND ((rt0.c0))) THEN NULL END))) GROUP BY vt0.c2, rt0.c2, rt0.c1, vt0.c0 UNION SELECT vt0.c2, rt0.c2, rt0.c1, vt0.c0 FROM vt0, rt0 WHERE (((CASE WHEN ((((rt0.c2)AND(rt0.c2)))AND(rt0.c2)) THEN ((rt0.c1)IS NOT(vt0.c2)) WHEN rt0.c0 COLLATE NOCASE THEN CAST(rt0.c0 AS REAL) WHEN (+ (vt0.c1)) THEN (((vt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((vt0.c0))) WHEN (((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2))) THEN ((rt0.c1)-(vt0.c0)) WHEN (((vt0.c0)) NOT BETWEEN ((NULL)) AND ((rt0.c0))) THEN NULL END) ISNULL)) GROUP BY vt0.c2, rt0.c2, rt0.c1, vt0.c0;
SELECT vt0.c2, rt0.c2, rt0.c1, vt0.c0 FROM vt0, rt0 GROUP BY vt0.c2, rt0.c2, rt0.c1, vt0.c0;
SELECT ALL vt0.c0 FROM rt0, vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM rt0, vt0 GROUP BY vt0.c0 HAVING ((((rt0.c2)%(vt0.c1))) BETWEEN (MAX(AVG(GROUP_CONCAT(rt0.c0)))) AND ((~ (vt0.c2)))) UNION ALL SELECT ALL vt0.c0 FROM rt0, vt0 GROUP BY vt0.c0 HAVING (NOT (((((rt0.c2)%(vt0.c1))) BETWEEN (MAX(AVG(GROUP_CONCAT(rt0.c0)))) AND ((~ (vt0.c2)))))) UNION ALL SELECT vt0.c0 FROM rt0, vt0 GROUP BY vt0.c0 HAVING ((((((rt0.c2)%(vt0.c1))) BETWEEN (MAX(AVG(GROUP_CONCAT(rt0.c0)))) AND ((~ (vt0.c2))))) ISNULL);
SELECT ALL * FROM rt0, vt0;
SELECT ALL * FROM rt0, vt0 WHERE (CAST((NOT (vt0.c2)) AS BLOB)) UNION ALL SELECT * FROM rt0, vt0 WHERE ((NOT (CAST((NOT (vt0.c2)) AS BLOB)))) UNION ALL SELECT ALL * FROM rt0, vt0 WHERE (((CAST((NOT (vt0.c2)) AS BLOB)) ISNULL));
SELECT ALL * FROM rt0, vt0;
SELECT DISTINCT rt0.c2, vt0.c2, vt0.c0 FROM rt0, vt0;
SELECT DISTINCT rt0.c2, vt0.c2, vt0.c0 FROM rt0, vt0 WHERE ((('3(' COLLATE RTRIM)<>(LIKELIHOOD(vt0.c1, 0.6006164272541017)))) UNION SELECT DISTINCT rt0.c2, vt0.c2, vt0.c0 FROM rt0, vt0 WHERE ((NOT ((('3(' COLLATE RTRIM)<>(LIKELIHOOD(vt0.c1, 0.6006164272541017)))))) UNION SELECT DISTINCT rt0.c2, vt0.c2, vt0.c0 FROM rt0, vt0 WHERE ((((('3(' COLLATE RTRIM)<>(LIKELIHOOD(vt0.c1, 0.6006164272541017)))) ISNULL));
SELECT DISTINCT rt0.c2, vt0.c2, vt0.c0 FROM rt0, vt0;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 WHERE (CAST(LIKELY(0.23910386287998842) AS TEXT)) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0 WHERE ((NOT (CAST(LIKELY(0.23910386287998842) AS TEXT)))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0 WHERE (((CAST(LIKELY(0.23910386287998842) AS TEXT)) ISNULL)) GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING ((COUNT(*))!=(TOTAL(GROUP_CONCAT(vt0.c2)))) UNION ALL SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING (NOT (((COUNT(*))<>(TOTAL(GROUP_CONCAT(vt0.c2)))))) UNION ALL SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING ((((COUNT(*))<>(TOTAL(GROUP_CONCAT(vt0.c2))))) ISNULL);
SELECT ALL rt0.c0, vt0.c1 FROM rt0, vt0;
SELECT ALL rt0.c0, vt0.c1 FROM rt0, vt0 WHERE (CASE WHEN rt0.c2 THEN rt0.c0 WHEN vt0.c0 THEN rt0.c2 WHEN vt0.c2 THEN rt0.c1 ELSE rt0.c0 END COLLATE BINARY) UNION ALL SELECT rt0.c0, vt0.c1 FROM rt0, vt0 WHERE ((NOT (CASE WHEN rt0.c2 THEN rt0.c0 WHEN vt0.c0 THEN rt0.c2 WHEN vt0.c2 THEN rt0.c1 ELSE rt0.c0 END COLLATE BINARY))) UNION ALL SELECT ALL rt0.c0, vt0.c1 FROM rt0, vt0 WHERE (((CASE WHEN rt0.c2 THEN rt0.c0 WHEN vt0.c0 THEN rt0.c2 WHEN vt0.c2 THEN rt0.c1 ELSE rt0.c0 END COLLATE BINARY) ISNULL));
SELECT ALL rt0.c0, vt0.c1 FROM rt0, vt0;
SELECT DISTINCT * FROM rt0 RIGHT OUTER JOIN vt0 ON (- (CASE vt0.c1  WHEN rt0.c0 THEN vt0.c1 END));
SELECT DISTINCT * FROM rt0 RIGHT OUTER JOIN vt0 ON (- (CASE vt0.c1  WHEN rt0.c0 THEN vt0.c1 END)) WHERE (((((vt0.c0)&(rt0.c0))) NOTNULL)) UNION SELECT DISTINCT * FROM rt0 RIGHT OUTER JOIN vt0 ON (- (CASE vt0.c1  WHEN rt0.c0 THEN vt0.c1 END)) WHERE ((NOT (((((vt0.c0)&(rt0.c0))) NOTNULL)))) UNION SELECT DISTINCT * FROM rt0 RIGHT OUTER JOIN vt0 ON (- (CASE vt0.c1  WHEN rt0.c0 THEN vt0.c1 END)) WHERE (((((((vt0.c0)&(rt0.c0))) NOTNULL)) ISNULL));
SELECT DISTINCT * FROM rt0 RIGHT OUTER JOIN vt0 ON (- (CASE vt0.c1  WHEN rt0.c0 THEN vt0.c1 END));
SELECT vt0.c1, vt0.c2, rt0.c0, rt0.c1, rt0.c2 FROM rt0, vt0 GROUP BY vt0.c1, vt0.c2, rt0.c0, rt0.c1, rt0.c2;
SELECT vt0.c1, vt0.c2, rt0.c0, rt0.c1, rt0.c2 FROM rt0, vt0 WHERE ((((vt0.c0) BETWEEN (rt0.c1) AND (vt0.c0)) IN ())) GROUP BY vt0.c1, vt0.c2, rt0.c0, rt0.c1, rt0.c2 UNION SELECT vt0.c1, vt0.c2, rt0.c0, rt0.c1, rt0.c2 FROM rt0, vt0 WHERE ((NOT ((((vt0.c0) BETWEEN (rt0.c1) AND (vt0.c0)) IN ())))) GROUP BY vt0.c1, vt0.c2, rt0.c0, rt0.c1, rt0.c2 UNION SELECT vt0.c1, vt0.c2, rt0.c0, rt0.c1, rt0.c2 FROM rt0, vt0 WHERE ((((((vt0.c0) BETWEEN (rt0.c1) AND (vt0.c0)) IN ())) ISNULL)) GROUP BY vt0.c1, vt0.c2, rt0.c0, rt0.c1, rt0.c2;
SELECT vt0.c1, vt0.c2, rt0.c0, rt0.c1, rt0.c2 FROM rt0, vt0 GROUP BY vt0.c1, vt0.c2, rt0.c0, rt0.c1, rt0.c2;
SELECT ALL vt0.c1, vt0.c0, rt0.c2, rt0.c0, rt0.c1 FROM rt0, vt0 GROUP BY vt0.c1, vt0.c0, rt0.c2, rt0.c0, rt0.c1;
SELECT ALL vt0.c1, vt0.c0, rt0.c2, rt0.c0, rt0.c1 FROM rt0, vt0 GROUP BY vt0.c1, vt0.c0, rt0.c2, rt0.c0, rt0.c1 HAVING MIN('') UNION ALL SELECT vt0.c1, vt0.c0, rt0.c2, rt0.c0, rt0.c1 FROM rt0, vt0 GROUP BY vt0.c1, vt0.c0, rt0.c2, rt0.c0, rt0.c1 HAVING (NOT (MIN(''))) UNION ALL SELECT vt0.c1, vt0.c0, rt0.c2, rt0.c0, rt0.c1 FROM rt0, vt0 GROUP BY vt0.c1, vt0.c0, rt0.c2, rt0.c0, rt0.c1 HAVING ((MIN('')) ISNULL);
SELECT ALL vt0.c1, vt0.c0, rt0.c2, rt0.c0, rt0.c1 FROM rt0, vt0 GROUP BY vt0.c1, vt0.c0, rt0.c2, rt0.c0, rt0.c1;
SELECT ALL vt0.c1, vt0.c0, rt0.c2, rt0.c0, rt0.c1 FROM rt0, vt0 GROUP BY vt0.c1, vt0.c0, rt0.c2, rt0.c0, rt0.c1 HAVING MIN('') UNION ALL SELECT vt0.c1, vt0.c0, rt0.c2, rt0.c0, rt0.c1 FROM rt0, vt0 GROUP BY vt0.c1, vt0.c0, rt0.c2, rt0.c0, rt0.c1 HAVING (NOT (MIN(''))) UNION ALL SELECT vt0.c1, vt0.c0, rt0.c2, rt0.c0, rt0.c1 FROM rt0, vt0 GROUP BY vt0.c1, vt0.c0, rt0.c2, rt0.c0, rt0.c1 HAVING ((MIN('')) ISNULL);
SELECT ALL vt0.c1, vt0.c0, rt0.c2, rt0.c0, rt0.c1 FROM rt0, vt0 GROUP BY vt0.c1, vt0.c0, rt0.c2, rt0.c0, rt0.c1;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE (((((((rt0.c2)OR(rt0.c1)))OR(rt0.c1))) IS TRUE)) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (((((((rt0.c2)OR(rt0.c1)))OR(rt0.c1))) IS TRUE)))) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE (((((((((rt0.c2)OR(rt0.c1)))OR(rt0.c1))) IS TRUE)) ISNULL));
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0;
SELECT DISTINCT * FROM rt0, vt0;
SELECT DISTINCT * FROM rt0, vt0 WHERE ((((((((((((vt0.c0))!=((vt0.c0))))AND((((rt0.c1, vt0.c2, rt0.c2)) BETWEEN ((vt0.c1, rt0.c0, vt0.c1)) AND ((rt0.c0, vt0.c2, vt0.c1))))))AND(CAST(rt0.c1 AS BLOB))))OR((('1')<<(rt0.c0)))))OR(CAST(vt0.c1 AS NUMERIC)))) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE ((NOT ((((((((((((vt0.c0))!=((vt0.c0))))AND((((rt0.c1, vt0.c2, rt0.c2)) BETWEEN ((vt0.c1, rt0.c0, vt0.c1)) AND ((rt0.c0, vt0.c2, vt0.c1))))))AND(CAST(rt0.c1 AS BLOB))))OR((('1')<<(rt0.c0)))))OR(CAST(vt0.c1 AS NUMERIC)))))) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE ((((((((((((((vt0.c0))<>((vt0.c0))))AND((((rt0.c1, vt0.c2, rt0.c2)) BETWEEN ((vt0.c1, rt0.c0, vt0.c1)) AND ((rt0.c0, vt0.c2, vt0.c1))))))AND(CAST(rt0.c1 AS BLOB))))OR((('1')<<(rt0.c0)))))OR(CAST(vt0.c1 AS NUMERIC)))) ISNULL));
SELECT DISTINCT * FROM rt0, vt0;
SELECT ALL vt0.c0 FROM rt0, vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM rt0, vt0 WHERE ((('0.40361109509800386') ISNULL)) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM rt0, vt0 WHERE ((NOT ((('0.40361109509800386') ISNULL)))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM rt0, vt0 WHERE ((((('0.40361109509800386') ISNULL)) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM rt0, vt0 GROUP BY vt0.c0;
SELECT vt0.c1 FROM rt0, vt0 GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM rt0, vt0 GROUP BY vt0.c1 HAVING COUNT(*) UNION ALL SELECT ALL vt0.c1 FROM rt0, vt0 GROUP BY vt0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt0.c1 FROM rt0, vt0 GROUP BY vt0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT vt0.c1 FROM rt0, vt0 GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM rt0, vt0 GROUP BY vt0.c1 HAVING COUNT(*) UNION ALL SELECT ALL vt0.c1 FROM rt0, vt0 GROUP BY vt0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt0.c1 FROM rt0, vt0 GROUP BY vt0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT vt0.c1 FROM rt0, vt0 GROUP BY vt0.c1;
SELECT TOTAL(((((((vt0.c2)-(vt0.c0)))OR(((NULL) IS FALSE))))AND(CASE rt0.c1  WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN 2.74564658E8 WHEN vt0.c0 THEN vt0.c2 ELSE vt0.c0 END))) FROM vt0, rt0;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ('781552751') UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT ('781552751'))) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((('781552751') ISNULL));
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2, vt0.c0 FROM vt0, rt0;
SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2, vt0.c0 FROM vt0, rt0 WHERE (((rt0.c0) BETWEEN ((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((vt0.c0)))) AND (((((((((rt0.c0)OR(rt0.c2)))AND(vt0.c2)))OR(vt0.c0)))OR(rt0.c2))))) UNION SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2, vt0.c0 FROM vt0, rt0 WHERE ((NOT (((rt0.c0) BETWEEN ((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((vt0.c0)))) AND (((((((((rt0.c0)OR(rt0.c2)))AND(vt0.c2)))OR(vt0.c0)))OR(rt0.c2))))))) UNION SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2, vt0.c0 FROM vt0, rt0 WHERE (((((rt0.c0) BETWEEN ((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((vt0.c0)))) AND (((((((((rt0.c0)OR(rt0.c2)))AND(vt0.c2)))OR(vt0.c0)))OR(rt0.c2))))) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2, vt0.c0 FROM vt0, rt0;
SELECT vt0.c2, vt0.c0, rt0.c0, vt0.c1 FROM vt0, rt0 GROUP BY vt0.c2, vt0.c0, rt0.c0, vt0.c1;
SELECT ALL vt0.c2, vt0.c0, rt0.c0, vt0.c1 FROM vt0, rt0 WHERE (CAST(((vt0.c2) NOTNULL) AS NUMERIC)) GROUP BY vt0.c2, vt0.c0, rt0.c0, vt0.c1 UNION SELECT vt0.c2, vt0.c0, rt0.c0, vt0.c1 FROM vt0, rt0 WHERE ((NOT (CAST(((vt0.c2) NOTNULL) AS NUMERIC)))) GROUP BY vt0.c2, vt0.c0, rt0.c0, vt0.c1 UNION SELECT ALL vt0.c2, vt0.c0, rt0.c0, vt0.c1 FROM vt0, rt0 WHERE (((CAST(((vt0.c2) NOTNULL) AS NUMERIC)) ISNULL)) GROUP BY vt0.c2, vt0.c0, rt0.c0, vt0.c1;
SELECT vt0.c2, vt0.c0, rt0.c0, vt0.c1 FROM vt0, rt0 GROUP BY vt0.c2, vt0.c0, rt0.c0, vt0.c1;
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING ((MAX(vt0.c0))AND(SUM(GROUP_CONCAT(AVG(COUNT(GROUP_CONCAT(SUM(vt0.c1)))))))) UNION ALL SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING (NOT (((MAX(vt0.c0))AND(SUM(GROUP_CONCAT(AVG(COUNT(GROUP_CONCAT(SUM(vt0.c1)))))))))) UNION ALL SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING ((((MAX(vt0.c0))AND(SUM(GROUP_CONCAT(AVG(COUNT(GROUP_CONCAT(SUM(vt0.c1))))))))) ISNULL);
SELECT ALL * FROM rt0 LEFT OUTER JOIN vt0 ON CASE x''  WHEN ((vt0.c0) ISNULL) THEN (~ (rt0.c2)) END;
SELECT * FROM rt0 LEFT OUTER JOIN vt0 ON CASE x''  WHEN ((vt0.c0) ISNULL) THEN (~ (rt0.c2)) END WHERE (rt0.c0) UNION ALL SELECT ALL * FROM rt0 LEFT OUTER JOIN vt0 ON CASE x''  WHEN ((vt0.c0) ISNULL) THEN (~ (rt0.c2)) END WHERE ((NOT (rt0.c0))) UNION ALL SELECT ALL * FROM rt0 LEFT OUTER JOIN vt0 ON CASE x''  WHEN ((vt0.c0) ISNULL) THEN (~ (rt0.c2)) END WHERE (((rt0.c0) ISNULL));
SELECT ALL * FROM rt0 LEFT OUTER JOIN vt0 ON CASE x''  WHEN ((vt0.c0) ISNULL) THEN (~ (rt0.c2)) END;
SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE (((x'01ee490f' COLLATE NOCASE)GLOB(((rt0.c0)AND(rt0.c1))))) UNION SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (((x'01ee490f' COLLATE NOCASE)GLOB(((rt0.c0)AND(rt0.c1))))))) UNION SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE (((((x'01ee490f' COLLATE NOCASE)GLOB(((rt0.c0)AND(rt0.c1))))) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1 FROM rt0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 WHERE (CAST(CAST(rt0.c2 AS INTEGER) AS NUMERIC)) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM rt0 WHERE ((NOT (CAST(CAST(rt0.c2 AS INTEGER) AS NUMERIC)))) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM rt0 WHERE (((CAST(CAST(rt0.c2 AS INTEGER) AS NUMERIC)) ISNULL)) GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING TOTAL(MIN(TOTAL(rt0.c0))) UNION ALL SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING (NOT (TOTAL(MIN(TOTAL(rt0.c0))))) UNION ALL SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING ((TOTAL(MIN(TOTAL(rt0.c0)))) ISNULL);
SELECT vt0.c1, vt0.c2 FROM vt0;
SELECT vt0.c1, vt0.c2 FROM vt0 WHERE (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((0x3fb18ab7))) IN ())) UNION ALL SELECT ALL vt0.c1, vt0.c2 FROM vt0 WHERE ((NOT (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((0X3fb18ab7))) IN ())))) UNION ALL SELECT vt0.c1, vt0.c2 FROM vt0 WHERE (((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((0x3fb18ab7))) IN ())) ISNULL));
SELECT vt0.c1, vt0.c2 FROM vt0;
SELECT DISTINCT rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c2 FROM rt0 NOT INDEXED WHERE (((((rt0.c0) IS FALSE)) NOT BETWEEN ((((rt0.c1, rt0.c2, rt0.c0)) NOT BETWEEN ((rt0.c1, rt0.c0, rt0.c2)) AND ((rt0.c0, rt0.c1, rt0.c2)))) AND ((((rt0.c2, rt0.c2, rt0.c1)) BETWEEN ((rt0.c2, rt0.c1, 0.35983097263257824)) AND ((rt0.c0, rt0.c1, rt0.c1)))))) UNION SELECT DISTINCT rt0.c2 FROM rt0 WHERE ((NOT (((((rt0.c0) IS FALSE)) NOT BETWEEN ((((rt0.c1, rt0.c2, rt0.c0)) NOT BETWEEN ((rt0.c1, rt0.c0, rt0.c2)) AND ((rt0.c0, rt0.c1, rt0.c2)))) AND ((((rt0.c2, rt0.c2, rt0.c1)) BETWEEN ((rt0.c2, rt0.c1, 0.35983097263257824)) AND ((rt0.c0, rt0.c1, rt0.c1)))))))) UNION SELECT DISTINCT rt0.c2 FROM rt0 WHERE (((((((rt0.c0) IS FALSE)) NOT BETWEEN ((((rt0.c1, rt0.c2, rt0.c0)) NOT BETWEEN ((rt0.c1, rt0.c0, rt0.c2)) AND ((rt0.c0, rt0.c1, rt0.c2)))) AND ((((rt0.c2, rt0.c2, rt0.c1)) BETWEEN ((rt0.c2, rt0.c1, 0.35983097263257824)) AND ((rt0.c0, rt0.c1, rt0.c1)))))) ISNULL));
SELECT DISTINCT rt0.c2 FROM rt0;
SELECT rt0.c1, vt0.c1 FROM rt0, vt0 GROUP BY rt0.c1, vt0.c1;
SELECT rt0.c1, vt0.c1 FROM rt0, vt0 WHERE (((CAST(vt0.c1 AS INTEGER))<(((rt0.c0)AND(vt0.c1))))) GROUP BY rt0.c1, vt0.c1 UNION SELECT ALL rt0.c1, vt0.c1 FROM rt0, vt0 WHERE ((NOT (((CAST(vt0.c1 AS INTEGER))<(((rt0.c0)AND(vt0.c1))))))) GROUP BY rt0.c1, vt0.c1 UNION SELECT ALL rt0.c1, vt0.c1 FROM rt0, vt0 WHERE (((((CAST(vt0.c1 AS INTEGER))<(((rt0.c0)AND(vt0.c1))))) ISNULL)) GROUP BY rt0.c1, vt0.c1;
SELECT rt0.c1, vt0.c1 FROM rt0, vt0 GROUP BY rt0.c1, vt0.c1;
SELECT ALL rt0.c1, vt0.c2, rt0.c2, vt0.c1, rt0.c0, vt0.c0 FROM vt0 INNER JOIN rt0 ON (((vt0.c2 IN ())) NOT NULL) GROUP BY rt0.c1, vt0.c2, rt0.c2, vt0.c1, rt0.c0, vt0.c0;
SELECT rt0.c1, vt0.c2, rt0.c2, vt0.c1, rt0.c0, vt0.c0 FROM vt0 INNER JOIN rt0 ON (((vt0.c2 IN ())) NOT NULL) GROUP BY rt0.c1, vt0.c2, rt0.c2, vt0.c1, rt0.c0, vt0.c0 HAVING (+ (((MIN('{}')) BETWEEN (AVG(vt0.c2)) AND (rt0.c2)))) UNION ALL SELECT rt0.c1, vt0.c2, rt0.c2, vt0.c1, rt0.c0, vt0.c0 FROM vt0 INNER JOIN rt0 ON (((vt0.c2 IN ())) NOT NULL) GROUP BY rt0.c1, vt0.c2, rt0.c2, vt0.c1, rt0.c0, vt0.c0 HAVING (NOT ((+ (((MIN('{}')) BETWEEN (AVG(vt0.c2)) AND (rt0.c2)))))) UNION ALL SELECT rt0.c1, vt0.c2, rt0.c2, vt0.c1, rt0.c0, vt0.c0 FROM vt0 INNER JOIN rt0 ON (((vt0.c2 IN ())) NOT NULL) GROUP BY rt0.c1, vt0.c2, rt0.c2, vt0.c1, rt0.c0, vt0.c0 HAVING (((+ (((MIN('{}')) BETWEEN (AVG(vt0.c2)) AND (rt0.c2))))) ISNULL);
SELECT ALL rt0.c1, vt0.c2, rt0.c2, vt0.c1, rt0.c0, vt0.c0 FROM vt0 INNER JOIN rt0 ON (((vt0.c2 IN ())) NOT NULL) GROUP BY rt0.c1, vt0.c2, rt0.c2, vt0.c1, rt0.c0, vt0.c0;
SELECT rt0.c1, vt0.c2, rt0.c2, vt0.c1, rt0.c0, vt0.c0 FROM vt0 INNER JOIN rt0 ON (((vt0.c2 IN ())) NOT NULL) GROUP BY rt0.c1, vt0.c2, rt0.c2, vt0.c1, rt0.c0, vt0.c0 HAVING (+ (((MIN('{}')) BETWEEN (AVG(vt0.c2)) AND (rt0.c2)))) UNION ALL SELECT rt0.c1, vt0.c2, rt0.c2, vt0.c1, rt0.c0, vt0.c0 FROM vt0 INNER JOIN rt0 ON (((vt0.c2 IN ())) NOT NULL) GROUP BY rt0.c1, vt0.c2, rt0.c2, vt0.c1, rt0.c0, vt0.c0 HAVING (NOT ((+ (((MIN('{}')) BETWEEN (AVG(vt0.c2)) AND (rt0.c2)))))) UNION ALL SELECT rt0.c1, vt0.c2, rt0.c2, vt0.c1, rt0.c0, vt0.c0 FROM vt0 INNER JOIN rt0 ON (((vt0.c2 IN ())) NOT NULL) GROUP BY rt0.c1, vt0.c2, rt0.c2, vt0.c1, rt0.c0, vt0.c0 HAVING (((+ (((MIN('{}')) BETWEEN (AVG(vt0.c2)) AND (rt0.c2))))) ISNULL);
SELECT ALL rt0.c1, vt0.c2, rt0.c2, vt0.c1, rt0.c0, vt0.c0 FROM vt0 INNER JOIN rt0 ON (((vt0.c2 IN ())) NOT NULL) GROUP BY rt0.c1, vt0.c2, rt0.c2, vt0.c1, rt0.c0, vt0.c0;
SELECT ALL vt0.c1, vt0.c2, vt0.c0 FROM vt0;
SELECT ALL vt0.c1, vt0.c2, vt0.c0 FROM vt0 WHERE (((CAST(vt0.c2 AS TEXT)) IS FALSE)) UNION ALL SELECT vt0.c1, vt0.c2, vt0.c0 FROM vt0 WHERE ((NOT (((CAST(vt0.c2 AS TEXT)) IS FALSE)))) UNION ALL SELECT vt0.c1, vt0.c2, vt0.c0 FROM vt0 WHERE (((((CAST(vt0.c2 AS TEXT)) IS FALSE)) ISNULL));
SELECT ALL vt0.c1, vt0.c2, vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c2, vt0.c1 FROM rt0, vt0;
SELECT DISTINCT vt0.c2, vt0.c1 FROM rt0, vt0 WHERE ((~ (vt0.c2)) COLLATE NOCASE) UNION SELECT DISTINCT vt0.c2, vt0.c1 FROM rt0, vt0 WHERE ((NOT ((~ (vt0.c2)) COLLATE NOCASE))) UNION SELECT DISTINCT vt0.c2, vt0.c1 FROM rt0, vt0 WHERE ((((~ (vt0.c2)) COLLATE NOCASE) ISNULL));
SELECT DISTINCT vt0.c2, vt0.c1 FROM rt0, vt0;
SELECT vt0.c0, rt0.c0, vt0.c2, rt0.c2, vt0.c1 FROM vt0, rt0 GROUP BY vt0.c0, rt0.c0, vt0.c2, rt0.c2, vt0.c1;
SELECT vt0.c0, rt0.c0, vt0.c2, rt0.c2, vt0.c1 FROM vt0, rt0 WHERE (CAST(((vt0.c2)+(rt0.c2)) AS NUMERIC)) GROUP BY vt0.c0, rt0.c0, vt0.c2, rt0.c2, vt0.c1 UNION SELECT vt0.c0, rt0.c0, vt0.c2, rt0.c2, vt0.c1 FROM vt0, rt0 WHERE ((NOT (CAST(((vt0.c2)+(rt0.c2)) AS NUMERIC)))) GROUP BY vt0.c0, rt0.c0, vt0.c2, rt0.c2, vt0.c1 UNION SELECT ALL vt0.c0, rt0.c0, vt0.c2, rt0.c2, vt0.c1 FROM vt0, rt0 WHERE (((CAST(((vt0.c2)+(rt0.c2)) AS NUMERIC)) ISNULL)) GROUP BY vt0.c0, rt0.c0, vt0.c2, rt0.c2, vt0.c1;
SELECT vt0.c0, rt0.c0, vt0.c2, rt0.c2, vt0.c1 FROM vt0, rt0 GROUP BY vt0.c0, rt0.c0, vt0.c2, rt0.c2, vt0.c1;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING (IFNULL(DISTINCT vt0.c0, SUM(AVG(vt0.c2))) IN ()) UNION ALL SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING (NOT ((IFNULL(DISTINCT vt0.c0, SUM(AVG(vt0.c2))) IN ()))) UNION ALL SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING (((IFNULL(DISTINCT vt0.c0, SUM(AVG(vt0.c2))) IN ())) ISNULL);
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING (IFNULL(DISTINCT vt0.c0, SUM(AVG(vt0.c2))) IN ()) UNION ALL SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING (NOT ((IFNULL(DISTINCT vt0.c0, SUM(AVG(vt0.c2))) IN ()))) UNION ALL SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING (((IFNULL(DISTINCT vt0.c0, SUM(AVG(vt0.c2))) IN ())) ISNULL);
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT vt0.c2, rt0.c1, vt0.c0 FROM vt0 FULL OUTER JOIN rt0 ON (((((0.7639904648683499, vt0.c1, rt0.c2, vt0.c1, 0xffffffff84c5bc4e))!=((rt0.c2, vt0.c1, rt0.c0, rt0.c1, 'lEz툨2[]xc')))) NOT BETWEEN (CASE WHEN vt0.c1 THEN vt0.c1 END) AND (((vt0.c1)|(rt0.c1))));
SELECT ALL vt0.c2, rt0.c1, vt0.c0 FROM vt0 FULL OUTER JOIN rt0 ON (((((0.7639904648683499, vt0.c1, rt0.c2, vt0.c1, 0xffffffff84c5bc4e))!=((rt0.c2, vt0.c1, rt0.c0, rt0.c1, 'lEz툨2[]xc')))) NOT BETWEEN (CASE WHEN vt0.c1 THEN vt0.c1 END) AND (((vt0.c1)|(rt0.c1)))) WHERE ((+ (vt0.c1 COLLATE RTRIM))) UNION ALL SELECT ALL vt0.c2, rt0.c1, vt0.c0 FROM vt0 FULL OUTER JOIN rt0 ON (((((0.7639904648683499, vt0.c1, rt0.c2, vt0.c1, 0xffffffff84c5bc4e))<>((rt0.c2, vt0.c1, rt0.c0, rt0.c1, 'lEz툨2[]xc')))) NOT BETWEEN (CASE WHEN vt0.c1 THEN vt0.c1 END) AND (((vt0.c1)|(rt0.c1)))) WHERE ((NOT ((+ (vt0.c1 COLLATE RTRIM))))) UNION ALL SELECT ALL vt0.c2, rt0.c1, vt0.c0 FROM vt0 FULL OUTER JOIN rt0 ON (((((0.7639904648683499, vt0.c1, rt0.c2, vt0.c1, 0Xffffffff84c5bc4e))<>((rt0.c2, vt0.c1, rt0.c0, rt0.c1, 'lEz툨2[]xc')))) NOT BETWEEN (CASE WHEN vt0.c1 THEN vt0.c1 END) AND (((vt0.c1)|(rt0.c1)))) WHERE ((((+ (vt0.c1 COLLATE RTRIM))) ISNULL));
SELECT vt0.c2, rt0.c1, vt0.c0 FROM vt0 FULL OUTER JOIN rt0 ON (((((0.7639904648683499, vt0.c1, rt0.c2, vt0.c1, 0xffffffff84c5bc4e))!=((rt0.c2, vt0.c1, rt0.c0, rt0.c1, 'lEz툨2[]xc')))) NOT BETWEEN (CASE WHEN vt0.c1 THEN vt0.c1 END) AND (((vt0.c1)|(rt0.c1))));
SELECT DISTINCT vt0.c2 FROM vt0;
SELECT DISTINCT vt0.c2 FROM vt0 WHERE ('') UNION SELECT DISTINCT vt0.c2 FROM vt0 WHERE ((NOT (''))) UNION SELECT DISTINCT vt0.c2 FROM vt0 WHERE ((('') ISNULL));
SELECT DISTINCT vt0.c2 FROM vt0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 WHERE ((((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND (((((rt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c0))))))) GROUP BY rt0.c2, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT ((((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND (((((rt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c0))))))))) GROUP BY rt0.c2, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c0 FROM rt0 WHERE ((((((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND (((((rt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c0))))))) ISNULL)) GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING ((((rt0.c0) IS TRUE))%(GROUP_CONCAT(rt0.c2))) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING (NOT (((((rt0.c0) IS TRUE))%(GROUP_CONCAT(rt0.c2))))) UNION ALL SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING ((((((rt0.c0) IS TRUE))%(GROUP_CONCAT(rt0.c2)))) ISNULL);
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING ((((rt0.c0) IS TRUE))%(GROUP_CONCAT(rt0.c2))) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING (NOT (((((rt0.c0) IS TRUE))%(GROUP_CONCAT(rt0.c2))))) UNION ALL SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING ((((((rt0.c0) IS TRUE))%(GROUP_CONCAT(rt0.c2)))) ISNULL);
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT vt0.c1, vt0.c2 FROM vt0;
SELECT vt0.c1, vt0.c2 FROM vt0 WHERE ((((LTRIM(vt0.c0, vt0.c0), (- (vt0.c0)), ((vt0.c2)<<(vt0.c1))))!=((CASE vt0.c1  WHEN vt0.c0 THEN vt0.c2 ELSE 0Xffffffffe65cd284 END, (+ (vt0.c1)), ((vt0.c1)IS NOT(vt0.c1)))))) UNION ALL SELECT ALL vt0.c1, vt0.c2 FROM vt0 WHERE ((NOT ((((LTRIM(vt0.c0, vt0.c0), (- (vt0.c0)), ((vt0.c2)<<(vt0.c1))))!=((CASE vt0.c1  WHEN vt0.c0 THEN vt0.c2 ELSE 0Xffffffffe65cd284 END, (+ (vt0.c1)), ((vt0.c1)IS NOT(vt0.c1)))))))) UNION ALL SELECT ALL vt0.c1, vt0.c2 FROM vt0 WHERE ((((((LTRIM(vt0.c0, vt0.c0), (- (vt0.c0)), ((vt0.c2)<<(vt0.c1))))!=((CASE vt0.c1  WHEN vt0.c0 THEN vt0.c2 ELSE 0Xffffffffe65cd284 END, (+ (vt0.c1)), ((vt0.c1)IS NOT(vt0.c1)))))) ISNULL));
SELECT vt0.c1, vt0.c2 FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (CASE WHEN ((((vt0.c2)OR(vt0.c0)))OR(vt0.c1)) THEN ((2119482975) BETWEEN (vt0.c0) AND (vt0.c0)) WHEN CAST(vt0.c1 AS TEXT) THEN NULLIF(vt0.c1, vt0.c2) WHEN ((((((((vt0.c1)AND(vt0.c2)))OR(vt0.c0)))AND(vt0.c1)))AND(vt0.c2)) THEN (vt0.c2 IN ()) END) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (CASE WHEN ((((vt0.c2)OR(vt0.c0)))OR(vt0.c1)) THEN ((2119482975) BETWEEN (vt0.c0) AND (vt0.c0)) WHEN CAST(vt0.c1 AS TEXT) THEN NULLIF(vt0.c1, vt0.c2) WHEN ((((((((vt0.c1)AND(vt0.c2)))OR(vt0.c0)))AND(vt0.c1)))AND(vt0.c2)) THEN (vt0.c2 IN ()) END))) UNION SELECT DISTINCT * FROM vt0 WHERE (((CASE WHEN ((((vt0.c2)OR(vt0.c0)))OR(vt0.c1)) THEN ((2119482975) BETWEEN (vt0.c0) AND (vt0.c0)) WHEN CAST(vt0.c1 AS TEXT) THEN NULLIF(vt0.c1, vt0.c2) WHEN ((((((((vt0.c1)AND(vt0.c2)))OR(vt0.c0)))AND(vt0.c1)))AND(vt0.c2)) THEN (vt0.c2 IN ()) END) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE (CAST(rt0.c1 AS TEXT)) GROUP BY rt0.c1, rt0.c2, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (CAST(rt0.c1 AS TEXT)))) GROUP BY rt0.c1, rt0.c2, rt0.c0 UNION SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE (((CAST(rt0.c1 AS TEXT)) ISNULL)) GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT ALL rt0.c0, rt0.c1 FROM rt0, vt0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0, vt0 GROUP BY rt0.c0, rt0.c1 HAVING MIN(COUNT(rt0.c2)) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM rt0, vt0 GROUP BY rt0.c0, rt0.c1 HAVING (NOT (MIN(COUNT(rt0.c2)))) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM rt0, vt0 GROUP BY rt0.c0, rt0.c1 HAVING ((MIN(COUNT(rt0.c2))) ISNULL);
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE (rt0.c2) UNION ALL SELECT * FROM rt0 WHERE ((NOT (rt0.c2))) UNION ALL SELECT * FROM rt0 WHERE (((rt0.c2) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT vt0.c2, vt0.c1, vt0.c0, rt0.c1, rt0.c0, rt0.c2 FROM rt0, vt0;
SELECT DISTINCT vt0.c2, vt0.c1, vt0.c0, rt0.c1, rt0.c0, rt0.c2 FROM rt0, vt0 WHERE ((- (((((vt0.c2)AND(vt0.c0)))OR(vt0.c2))))) UNION SELECT DISTINCT vt0.c2, vt0.c1, vt0.c0, rt0.c1, rt0.c0, rt0.c2 FROM rt0, vt0 WHERE ((NOT ((- (((((vt0.c2)AND(vt0.c0)))OR(vt0.c2))))))) UNION SELECT DISTINCT vt0.c2, vt0.c1, vt0.c0, rt0.c1, rt0.c0, rt0.c2 FROM rt0, vt0 WHERE ((((- (((((vt0.c2)AND(vt0.c0)))OR(vt0.c2))))) ISNULL));
SELECT DISTINCT vt0.c2, vt0.c1, vt0.c0, rt0.c1, rt0.c0, rt0.c2 FROM rt0, vt0;
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c1 FROM rt0 WHERE (rt0.c1 COLLATE RTRIM) GROUP BY rt0.c0, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (rt0.c1 COLLATE RTRIM))) GROUP BY rt0.c0, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c1 FROM rt0 WHERE (((rt0.c1 COLLATE RTRIM) ISNULL)) GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (((AVG(MAX(rt0.c1)) IN ()))<=(COUNT(rt0.c2))) UNION ALL SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (NOT ((((AVG(MAX(rt0.c1)) IN ()))<=(COUNT(rt0.c2))))) UNION ALL SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (((((AVG(MAX(rt0.c1)) IN ()))<=(COUNT(rt0.c2)))) ISNULL);
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (((AVG(MAX(rt0.c1)) IN ()))<=(COUNT(rt0.c2))) UNION ALL SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (NOT ((((AVG(MAX(rt0.c1)) IN ()))<=(COUNT(rt0.c2))))) UNION ALL SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (((((AVG(MAX(rt0.c1)) IN ()))<=(COUNT(rt0.c2)))) ISNULL);
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT * FROM vt0, rt0;
SELECT ALL * FROM vt0, rt0 WHERE ((((~ (vt0.c1))) NOT BETWEEN (((((((((((((NULL)OR(vt0.c1)))OR(vt0.c1)))OR(rt0.c0)))OR(vt0.c0)))AND(rt0.c2)))AND(rt0.c0))) AND ((rt0.c1 IN (vt0.c2))))) UNION ALL SELECT * FROM vt0, rt0 WHERE ((NOT ((((~ (vt0.c1))) NOT BETWEEN (((((((((((((NULL)OR(vt0.c1)))OR(vt0.c1)))OR(rt0.c0)))OR(vt0.c0)))AND(rt0.c2)))AND(rt0.c0))) AND ((rt0.c1 IN (vt0.c2))))))) UNION ALL SELECT ALL * FROM vt0, rt0 WHERE ((((((~ (vt0.c1))) NOT BETWEEN (((((((((((((NULL)OR(vt0.c1)))OR(vt0.c1)))OR(rt0.c0)))OR(vt0.c0)))AND(rt0.c2)))AND(rt0.c0))) AND ((rt0.c1 IN (vt0.c2))))) ISNULL));
SELECT * FROM vt0, rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (CAST((rt0.c2 IN ()) AS NUMERIC)) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (CAST((rt0.c2 IN ()) AS NUMERIC)))) UNION SELECT DISTINCT * FROM rt0 WHERE (((CAST((rt0.c2 IN ()) AS NUMERIC)) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c0, vt0.c2, rt0.c1, rt0.c2, vt0.c1 FROM rt0, vt0 GROUP BY rt0.c0, vt0.c2, rt0.c1, rt0.c2, vt0.c1;
SELECT rt0.c0, vt0.c2, rt0.c1, rt0.c2, vt0.c1 FROM rt0, vt0 WHERE ((NULL IN ())) GROUP BY rt0.c0, vt0.c2, rt0.c1, rt0.c2, vt0.c1 UNION SELECT rt0.c0, vt0.c2, rt0.c1, rt0.c2, vt0.c1 FROM rt0, vt0 WHERE ((NOT ((NULL IN ())))) GROUP BY rt0.c0, vt0.c2, rt0.c1, rt0.c2, vt0.c1 UNION SELECT ALL rt0.c0, vt0.c2, rt0.c1, rt0.c2, vt0.c1 FROM rt0, vt0 WHERE ((((NULL IN ())) ISNULL)) GROUP BY rt0.c0, vt0.c2, rt0.c1, rt0.c2, vt0.c1;
SELECT rt0.c0, vt0.c2, rt0.c1, rt0.c2, vt0.c1 FROM rt0, vt0 GROUP BY rt0.c0, vt0.c2, rt0.c1, rt0.c2, vt0.c1;
SELECT ALL vt0.c1, rt0.c2, rt0.c0, vt0.c2, rt0.c1, vt0.c0 FROM rt0 NATURAL JOIN vt0 GROUP BY vt0.c1, rt0.c2, rt0.c0, vt0.c2, rt0.c1, vt0.c0;
SELECT vt0.c1, rt0.c2, rt0.c0, vt0.c2, rt0.c1, vt0.c0 FROM rt0 NATURAL JOIN vt0 GROUP BY vt0.c1, rt0.c2, rt0.c0, vt0.c2, rt0.c1, vt0.c0 HAVING (((COUNT(*), (- (rt0.c1)), COUNT(MAX(COUNT(*)))))<=((-497077117, (((MIN(rt0.c2))) NOT BETWEEN (('龆\7Uhl7bU')) AND ((COUNT(*)))), ((SUM(vt0.c1)) ISNULL)))) UNION ALL SELECT ALL vt0.c1, rt0.c2, rt0.c0, vt0.c2, rt0.c1, vt0.c0 FROM rt0 NATURAL JOIN vt0 GROUP BY vt0.c1, rt0.c2, rt0.c0, vt0.c2, rt0.c1, vt0.c0 HAVING (NOT ((((COUNT(*), (- (rt0.c1)), COUNT(MAX(COUNT(*)))))<=((-497077117, (((MIN(rt0.c2))) NOT BETWEEN (('龆\7Uhl7bU')) AND ((COUNT(*)))), ((SUM(vt0.c1)) ISNULL)))))) UNION ALL SELECT ALL vt0.c1, rt0.c2, rt0.c0, vt0.c2, rt0.c1, vt0.c0 FROM rt0 NATURAL JOIN vt0 GROUP BY vt0.c1, rt0.c2, rt0.c0, vt0.c2, rt0.c1, vt0.c0 HAVING (((((COUNT(*), (- (rt0.c1)), COUNT(MAX(COUNT(*)))))<=((-497077117, (((MIN(rt0.c2))) NOT BETWEEN (('龆\7Uhl7bU')) AND ((COUNT(*)))), ((SUM(vt0.c1)) ISNULL))))) ISNULL);
SELECT ALL vt0.c0, vt0.c1 FROM vt0;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 WHERE (((((((((((((vt0.c1)OR(vt0.c2)))AND(CAST(vt0.c2 AS TEXT))))AND(NULL)))AND(((1420955906) NOTNULL))))AND((('190663933')=(vt0.c1)))))OR(((vt0.c2) NOT NULL)))) UNION ALL SELECT vt0.c0, vt0.c1 FROM vt0 WHERE ((NOT (((((((((((((vt0.c1)OR(vt0.c2)))AND(CAST(vt0.c2 AS TEXT))))AND(NULL)))AND(((1420955906) NOTNULL))))AND((('190663933')=(vt0.c1)))))OR(((vt0.c2) NOT NULL)))))) UNION ALL SELECT vt0.c0, vt0.c1 FROM vt0 WHERE (((((((((((((((vt0.c1)OR(vt0.c2)))AND(CAST(vt0.c2 AS TEXT))))AND(NULL)))AND(((1420955906) NOTNULL))))AND((('190663933')=(vt0.c1)))))OR(((vt0.c2) NOT NULL)))) ISNULL));
SELECT ALL vt0.c0, vt0.c1 FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE ((NOT (HEX(vt0.c1)))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT ((NOT (HEX(vt0.c1)))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((((NOT (HEX(vt0.c1)))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL rt0.c0, rt0.c1, vt0.c0, rt0.c2 FROM vt0 FULL OUTER JOIN rt0 ON HEX(NULL) GROUP BY rt0.c0, rt0.c1, vt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c1, vt0.c0, rt0.c2 FROM vt0 FULL OUTER JOIN rt0 ON HEX(NULL) WHERE (((((((vt0.c0)GLOB(vt0.c0)))AND((((rt0.c0))>=((rt0.c0))))))AND(0.5659487507662808))) GROUP BY rt0.c0, rt0.c1, vt0.c0, rt0.c2 UNION SELECT rt0.c0, rt0.c1, vt0.c0, rt0.c2 FROM vt0 FULL OUTER JOIN rt0 ON HEX(NULL) WHERE ((NOT (((((((vt0.c0)GLOB(vt0.c0)))AND((((rt0.c0))>=((rt0.c0))))))AND(0.5659487507662808))))) GROUP BY rt0.c0, rt0.c1, vt0.c0, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c1, vt0.c0, rt0.c2 FROM vt0 FULL OUTER JOIN rt0 ON HEX(NULL) WHERE (((((((((vt0.c0)GLOB(vt0.c0)))AND((((rt0.c0))>=((rt0.c0))))))AND(0.5659487507662808))) ISNULL)) GROUP BY rt0.c0, rt0.c1, vt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c1, vt0.c0, rt0.c2 FROM vt0 FULL OUTER JOIN rt0 ON HEX(NULL) GROUP BY rt0.c0, rt0.c1, vt0.c0, rt0.c2;
SELECT vt0.c2, rt0.c0, rt0.c2, vt0.c0 FROM vt0, rt0 GROUP BY vt0.c2, rt0.c0, rt0.c2, vt0.c0;
SELECT vt0.c2, rt0.c0, rt0.c2, vt0.c0 FROM vt0, rt0 GROUP BY vt0.c2, rt0.c0, rt0.c2, vt0.c0 HAVING MAX(CAST(vt0.c0 AS REAL)) UNION ALL SELECT vt0.c2, rt0.c0, rt0.c2, vt0.c0 FROM vt0, rt0 GROUP BY vt0.c2, rt0.c0, rt0.c2, vt0.c0 HAVING (NOT (MAX(CAST(vt0.c0 AS REAL)))) UNION ALL SELECT vt0.c2, rt0.c0, rt0.c2, vt0.c0 FROM vt0, rt0 GROUP BY vt0.c2, rt0.c0, rt0.c2, vt0.c0 HAVING ((MAX(CAST(vt0.c0 AS REAL))) ISNULL);
SELECT vt0.c2, rt0.c0, rt0.c2, vt0.c0 FROM vt0, rt0 GROUP BY vt0.c2, rt0.c0, rt0.c2, vt0.c0;
SELECT vt0.c2, rt0.c0, rt0.c2, vt0.c0 FROM vt0, rt0 GROUP BY vt0.c2, rt0.c0, rt0.c2, vt0.c0 HAVING MAX(CAST(vt0.c0 AS REAL)) UNION ALL SELECT vt0.c2, rt0.c0, rt0.c2, vt0.c0 FROM vt0, rt0 GROUP BY vt0.c2, rt0.c0, rt0.c2, vt0.c0 HAVING (NOT (MAX(CAST(vt0.c0 AS REAL)))) UNION ALL SELECT vt0.c2, rt0.c0, rt0.c2, vt0.c0 FROM vt0, rt0 GROUP BY vt0.c2, rt0.c0, rt0.c2, vt0.c0 HAVING ((MAX(CAST(vt0.c0 AS REAL))) ISNULL);
SELECT vt0.c2, rt0.c0, rt0.c2, vt0.c0 FROM vt0, rt0 GROUP BY vt0.c2, rt0.c0, rt0.c2, vt0.c0;
SELECT ALL * FROM vt0;
SELECT * FROM vt0 WHERE (((((vt0.c2)+(vt0.c2)))IS NOT(((vt0.c1)||(1360993027))))) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (((((vt0.c2)+(vt0.c2)))IS NOT(((vt0.c1)||(1360993027))))))) UNION ALL SELECT * FROM vt0 WHERE (((((((vt0.c2)+(vt0.c2)))IS NOT(((vt0.c1)||(1360993027))))) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (RTRIM((vt0.c2 IN ()))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (RTRIM((vt0.c2 IN ()))))) UNION SELECT DISTINCT * FROM vt0 WHERE (((RTRIM((vt0.c2 IN ()))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL vt0.c2, vt0.c0 FROM vt0 GROUP BY vt0.c2, vt0.c0;
SELECT ALL vt0.c2, vt0.c0 FROM vt0 WHERE (((((vt0.c0)/(vt0.c1)))GLOB(CAST(vt0.c0 AS TEXT)))) GROUP BY vt0.c2, vt0.c0 UNION SELECT vt0.c2, vt0.c0 FROM vt0 WHERE ((NOT (((((vt0.c0)/(vt0.c1)))GLOB(CAST(vt0.c0 AS TEXT)))))) GROUP BY vt0.c2, vt0.c0 UNION SELECT vt0.c2, vt0.c0 FROM vt0 WHERE (((((((vt0.c0)/(vt0.c1)))GLOB(CAST(vt0.c0 AS TEXT)))) ISNULL)) GROUP BY vt0.c2, vt0.c0;
SELECT ALL vt0.c2, vt0.c0 FROM vt0 GROUP BY vt0.c2, vt0.c0;
SELECT ALL rt0.c2, vt0.c0, vt0.c2, rt0.c1 FROM vt0 NATURAL JOIN rt0 GROUP BY rt0.c2, vt0.c0, vt0.c2, rt0.c1;
SELECT ALL rt0.c2, vt0.c0, vt0.c2, rt0.c1 FROM vt0 NATURAL JOIN rt0 GROUP BY rt0.c2, vt0.c0, vt0.c2, rt0.c1 HAVING CASE WHEN COUNT(vt0.c0) THEN (NOT (MAX(vt0.c2))) END UNION ALL SELECT rt0.c2, vt0.c0, vt0.c2, rt0.c1 FROM vt0 NATURAL JOIN rt0 GROUP BY rt0.c2, vt0.c0, vt0.c2, rt0.c1 HAVING (NOT (CASE WHEN COUNT(vt0.c0) THEN (NOT (MAX(vt0.c2))) END)) UNION ALL SELECT ALL rt0.c2, vt0.c0, vt0.c2, rt0.c1 FROM vt0 NATURAL JOIN rt0 GROUP BY rt0.c2, vt0.c0, vt0.c2, rt0.c1 HAVING ((CASE WHEN COUNT(vt0.c0) THEN (NOT (MAX(vt0.c2))) END) ISNULL);
SELECT ALL rt0.c2, vt0.c0, vt0.c2, rt0.c1 FROM vt0 NATURAL JOIN rt0 GROUP BY rt0.c2, vt0.c0, vt0.c2, rt0.c1;
SELECT ALL rt0.c2, vt0.c0, vt0.c2, rt0.c1 FROM vt0 NATURAL JOIN rt0 GROUP BY rt0.c2, vt0.c0, vt0.c2, rt0.c1 HAVING CASE WHEN COUNT(vt0.c0) THEN (NOT (MAX(vt0.c2))) END UNION ALL SELECT rt0.c2, vt0.c0, vt0.c2, rt0.c1 FROM vt0 NATURAL JOIN rt0 GROUP BY rt0.c2, vt0.c0, vt0.c2, rt0.c1 HAVING (NOT (CASE WHEN COUNT(vt0.c0) THEN (NOT (MAX(vt0.c2))) END)) UNION ALL SELECT ALL rt0.c2, vt0.c0, vt0.c2, rt0.c1 FROM vt0 NATURAL JOIN rt0 GROUP BY rt0.c2, vt0.c0, vt0.c2, rt0.c1 HAVING ((CASE WHEN COUNT(vt0.c0) THEN (NOT (MAX(vt0.c2))) END) ISNULL);
SELECT ALL rt0.c2, vt0.c0, vt0.c2, rt0.c1 FROM vt0 NATURAL JOIN rt0 GROUP BY rt0.c2, vt0.c0, vt0.c2, rt0.c1;
SELECT vt0.c1, vt0.c2 FROM vt0;
SELECT vt0.c1, vt0.c2 FROM vt0 WHERE (((((vt0.c1)!=(vt0.c2)))>=((((vt0.c0))>=((vt0.c0)))))) UNION ALL SELECT ALL vt0.c1, vt0.c2 FROM vt0 WHERE ((NOT (((((vt0.c1)!=(vt0.c2)))>=((((vt0.c0))>=((vt0.c0)))))))) UNION ALL SELECT ALL vt0.c1, vt0.c2 FROM vt0 WHERE (((((((vt0.c1)!=(vt0.c2)))>=((((vt0.c0))>=((vt0.c0)))))) ISNULL));
SELECT vt0.c1, vt0.c2 FROM vt0;
SELECT DISTINCT vt0.c2 FROM vt0;
SELECT DISTINCT vt0.c2 FROM vt0 WHERE (vt0.c2) UNION SELECT DISTINCT vt0.c2 FROM vt0 WHERE ((NOT (vt0.c2))) UNION SELECT DISTINCT vt0.c2 FROM vt0 WHERE (((vt0.c2) ISNULL));
SELECT DISTINCT vt0.c2 FROM vt0;
SELECT ALL vt0.c1, vt0.c0, rt0.c0 FROM vt0, rt0 GROUP BY vt0.c1, vt0.c0, rt0.c0;
SELECT ALL vt0.c1, vt0.c0, rt0.c0 FROM vt0, rt0 WHERE (((CAST(x'' AS TEXT))IS(((vt0.c1) BETWEEN (rt0.c2) AND (x'b824'))))) GROUP BY vt0.c1, vt0.c0, rt0.c0 UNION SELECT vt0.c1, vt0.c0, rt0.c0 FROM vt0, rt0 WHERE ((NOT (((CAST(x'' AS TEXT))IS(((vt0.c1) BETWEEN (rt0.c2) AND (x'b824'))))))) GROUP BY vt0.c1, vt0.c0, rt0.c0 UNION SELECT ALL vt0.c1, vt0.c0, rt0.c0 FROM vt0, rt0 WHERE (((((CAST(x'' AS TEXT))IS(((vt0.c1) BETWEEN (rt0.c2) AND (x'b824'))))) ISNULL)) GROUP BY vt0.c1, vt0.c0, rt0.c0;
SELECT ALL vt0.c1, vt0.c0, rt0.c0 FROM vt0, rt0 GROUP BY vt0.c1, vt0.c0, rt0.c0;
SELECT ALL vt0.c2, vt0.c1, rt0.c2, vt0.c0 FROM vt0, rt0 GROUP BY vt0.c2, vt0.c1, rt0.c2, vt0.c0;
SELECT ALL vt0.c2, vt0.c1, rt0.c2, vt0.c0 FROM vt0, rt0 GROUP BY vt0.c2, vt0.c1, rt0.c2, vt0.c0 HAVING TOTAL(MIN(rt0.c1)) UNION ALL SELECT ALL vt0.c2, vt0.c1, rt0.c2, vt0.c0 FROM vt0, rt0 GROUP BY vt0.c2, vt0.c1, rt0.c2, vt0.c0 HAVING (NOT (TOTAL(MIN(rt0.c1)))) UNION ALL SELECT vt0.c2, vt0.c1, rt0.c2, vt0.c0 FROM vt0, rt0 GROUP BY vt0.c2, vt0.c1, rt0.c2, vt0.c0 HAVING ((TOTAL(MIN(rt0.c1))) ISNULL);
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE (((((rt0.c0) NOT NULL)) ISNULL)) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (((((rt0.c0) NOT NULL)) ISNULL)))) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE (((((((rt0.c0) NOT NULL)) ISNULL)) ISNULL));
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0;
SELECT DISTINCT vt0.c2 FROM vt0;
SELECT DISTINCT vt0.c2 FROM vt0 WHERE (vt0.c1) UNION SELECT DISTINCT vt0.c2 FROM vt0 WHERE ((NOT (vt0.c1))) UNION SELECT DISTINCT vt0.c2 FROM vt0 WHERE (((vt0.c1) ISNULL));
SELECT DISTINCT vt0.c2 FROM vt0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE (((CAST(rt0.c0 AS BLOB))<=(CASE rt0.c1  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 END))) GROUP BY rt0.c2, rt0.c1, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (((CAST(rt0.c0 AS BLOB))<=(CASE rt0.c1  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 END))))) GROUP BY rt0.c2, rt0.c1, rt0.c0 UNION SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE (((((CAST(rt0.c0 AS BLOB))<=(CASE rt0.c1  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 END))) ISNULL)) GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT ALL rt0.c2, rt0.c1, vt0.c0 FROM vt0 CROSS JOIN rt0 ON ((((((vt0.c0)AND(vt0.c1)))AND(vt0.c2))) BETWEEN (CAST(vt0.c1 AS NUMERIC)) AND (LOWER(DISTINCT rt0.c1))) GROUP BY rt0.c2, rt0.c1, vt0.c0;
SELECT ALL rt0.c2, rt0.c1, vt0.c0 FROM vt0 CROSS JOIN rt0 ON ((((((vt0.c0)AND(vt0.c1)))AND(vt0.c2))) BETWEEN (CAST(vt0.c1 AS NUMERIC)) AND (LOWER(DISTINCT rt0.c1))) GROUP BY rt0.c2, rt0.c1, vt0.c0 HAVING AVG(MIN(AVG(rt0.c1))) UNION ALL SELECT ALL rt0.c2, rt0.c1, vt0.c0 FROM vt0 CROSS JOIN rt0 ON ((((((vt0.c0)AND(vt0.c1)))AND(vt0.c2))) BETWEEN (CAST(vt0.c1 AS NUMERIC)) AND (LOWER(DISTINCT rt0.c1))) GROUP BY rt0.c2, rt0.c1, vt0.c0 HAVING (NOT (AVG(MIN(AVG(rt0.c1))))) UNION ALL SELECT ALL rt0.c2, rt0.c1, vt0.c0 FROM vt0 CROSS JOIN rt0 ON ((((((vt0.c0)AND(vt0.c1)))AND(vt0.c2))) BETWEEN (CAST(vt0.c1 AS NUMERIC)) AND (LOWER(DISTINCT rt0.c1))) GROUP BY rt0.c2, rt0.c1, vt0.c0 HAVING ((AVG(MIN(AVG(rt0.c1)))) ISNULL);
SELECT ALL vt0.c1 FROM vt0 CROSS JOIN rt0 ON LIKELIHOOD(((vt0.c0)>(vt0.c2)), 0.19327003974822943);
SELECT vt0.c1 FROM vt0 CROSS JOIN rt0 ON LIKELIHOOD(((vt0.c0)>(vt0.c2)), 0.19327003974822943) WHERE ((0.1855356942634241 IN ())) UNION ALL SELECT vt0.c1 FROM vt0 CROSS JOIN rt0 ON LIKELIHOOD(((vt0.c0)>(vt0.c2)), 0.19327003974822943) WHERE ((NOT ((0.1855356942634241 IN ())))) UNION ALL SELECT vt0.c1 FROM vt0 CROSS JOIN rt0 ON LIKELIHOOD(((vt0.c0)>(vt0.c2)), 0.19327003974822943) WHERE ((((0.1855356942634241 IN ())) ISNULL));
SELECT ALL vt0.c1 FROM vt0 CROSS JOIN rt0 ON LIKELIHOOD(((vt0.c0)>(vt0.c2)), 0.19327003974822943);
SELECT DISTINCT vt0.c0, vt0.c1, vt0.c2 FROM vt0;
SELECT DISTINCT vt0.c0, vt0.c1, vt0.c2 FROM vt0 WHERE (((((((((((((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c2)))OR((NOT (vt0.c1)))))OR(((vt0.c2)*(x'')))))AND(vt0.c2)))OR(((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c2)))))OR((~ (vt0.c1)))))OR(json_type(vt0.c2)))) UNION SELECT DISTINCT vt0.c0, vt0.c1, vt0.c2 FROM vt0 WHERE ((NOT (((((((((((((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c2)))OR((NOT (vt0.c1)))))OR(((vt0.c2)*(x'')))))AND(vt0.c2)))OR(((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c2)))))OR((~ (vt0.c1)))))OR(json_type(vt0.c2)))))) UNION SELECT DISTINCT vt0.c0, vt0.c1, vt0.c2 FROM vt0 WHERE (((((((((((((((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c2)))OR((NOT (vt0.c1)))))OR(((vt0.c2)*(x'')))))AND(vt0.c2)))OR(((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c2)))))OR((~ (vt0.c1)))))OR(json_type(vt0.c2)))) ISNULL));
SELECT vt0.c0, rt0.c1, rt0.c2, rt0.c0, vt0.c1 FROM rt0 LEFT OUTER JOIN vt0 ON ((((((((((((((rt0.c0)||(vt0.c2)))AND((vt0.c1 IN ()))))AND(((vt0.c2) IS TRUE))))OR('')))AND(((rt0.c2)<<(rt0.c0)))))AND(((vt0.c2) NOTNULL))))AND(rt0.c2 COLLATE RTRIM)) GROUP BY vt0.c0, rt0.c1, rt0.c2, rt0.c0, vt0.c1;
SELECT ALL vt0.c0, rt0.c1, rt0.c2, rt0.c0, vt0.c1 FROM rt0 LEFT OUTER JOIN vt0 ON ((((((((((((((rt0.c0)||(vt0.c2)))AND((vt0.c1 IN ()))))AND(((vt0.c2) IS TRUE))))OR('')))AND(((rt0.c2)<<(rt0.c0)))))AND(((vt0.c2) NOTNULL))))AND(rt0.c2 COLLATE RTRIM)) WHERE (((CASE WHEN vt0.c0 THEN rt0.c0 END) NOTNULL)) GROUP BY vt0.c0, rt0.c1, rt0.c2, rt0.c0, vt0.c1 UNION SELECT ALL vt0.c0, rt0.c1, rt0.c2, rt0.c0, vt0.c1 FROM rt0 LEFT OUTER JOIN vt0 ON ((((((((((((((rt0.c0)||(vt0.c2)))AND((vt0.c1 IN ()))))AND(((vt0.c2) IS TRUE))))OR('')))AND(((rt0.c2)<<(rt0.c0)))))AND(((vt0.c2) NOTNULL))))AND(rt0.c2 COLLATE RTRIM)) WHERE ((NOT (((CASE WHEN vt0.c0 THEN rt0.c0 END) NOTNULL)))) GROUP BY vt0.c0, rt0.c1, rt0.c2, rt0.c0, vt0.c1 UNION SELECT ALL vt0.c0, rt0.c1, rt0.c2, rt0.c0, vt0.c1 FROM rt0 LEFT OUTER JOIN vt0 ON ((((((((((((((rt0.c0)||(vt0.c2)))AND((vt0.c1 IN ()))))AND(((vt0.c2) IS TRUE))))OR('')))AND(((rt0.c2)<<(rt0.c0)))))AND(((vt0.c2) NOTNULL))))AND(rt0.c2 COLLATE RTRIM)) WHERE (((((CASE WHEN vt0.c0 THEN rt0.c0 END) NOTNULL)) ISNULL)) GROUP BY vt0.c0, rt0.c1, rt0.c2, rt0.c0, vt0.c1;
SELECT vt0.c0, rt0.c1, rt0.c2, rt0.c0, vt0.c1 FROM rt0 LEFT OUTER JOIN vt0 ON ((((((((((((((rt0.c0)||(vt0.c2)))AND((vt0.c1 IN ()))))AND(((vt0.c2) IS TRUE))))OR('')))AND(((rt0.c2)<<(rt0.c0)))))AND(((vt0.c2) NOTNULL))))AND(rt0.c2 COLLATE RTRIM)) GROUP BY vt0.c0, rt0.c1, rt0.c2, rt0.c0, vt0.c1;
SELECT vt0.c0, vt0.c2, vt0.c1, rt0.c2, rt0.c1, rt0.c0 FROM vt0 NATURAL JOIN rt0 GROUP BY vt0.c0, vt0.c2, vt0.c1, rt0.c2, rt0.c1, rt0.c0;
SELECT vt0.c0, vt0.c2, vt0.c1, rt0.c2, rt0.c1, rt0.c0 FROM vt0 NATURAL JOIN rt0 GROUP BY vt0.c0, vt0.c2, vt0.c1, rt0.c2, rt0.c1, rt0.c0 HAVING COUNT(COUNT(*)) UNION ALL SELECT vt0.c0, vt0.c2, vt0.c1, rt0.c2, rt0.c1, rt0.c0 FROM vt0 NATURAL JOIN rt0 GROUP BY vt0.c0, vt0.c2, vt0.c1, rt0.c2, rt0.c1, rt0.c0 HAVING (NOT (COUNT(COUNT(*)))) UNION ALL SELECT vt0.c0, vt0.c2, vt0.c1, rt0.c2, rt0.c1, rt0.c0 FROM vt0 NATURAL JOIN rt0 GROUP BY vt0.c0, vt0.c2, vt0.c1, rt0.c2, rt0.c1, rt0.c0 HAVING ((COUNT(COUNT(*))) ISNULL);
SELECT ALL TOTAL((((rt0.c0, vt0.c1, vt0.c1)) NOT BETWEEN ((((rt0.c1) NOTNULL), (vt0.c0 IN ()), (NOT (vt0.c0)))) AND (((((-301122259, x'', vt0.c0, vt0.c2, rt0.c0))<=((rt0.c0, rt0.c1, 1648583541, vt0.c1, rt0.c1))), ((0.3947092364113167) BETWEEN (vt0.c0) AND (rt0.c0)), rt0.c1 COLLATE BINARY)))) FROM rt0, vt0 ORDER BY (((~ (NULL))) NOT BETWEEN ((- (rt0.c2))) AND (CAST(vt0.c2 AS REAL))) ASC;
SELECT ALL * FROM rt0 LEFT OUTER JOIN vt0 ON (((((~ (rt0.c2)))OR(vt0.c0)))AND(((rt0.c1)%(0.12536561827394332))));
SELECT ALL * FROM rt0 LEFT OUTER JOIN vt0 ON (((((~ (rt0.c2)))OR(vt0.c0)))AND(((rt0.c1)%(0.12536561827394332)))) WHERE (((((vt0.c2) BETWEEN (rt0.c0) AND (vt0.c1))) NOTNULL)) UNION ALL SELECT ALL * FROM rt0 LEFT OUTER JOIN vt0 ON (((((~ (rt0.c2)))OR(vt0.c0)))AND(((rt0.c1)%(0.12536561827394332)))) WHERE ((NOT (((((vt0.c2) BETWEEN (rt0.c0) AND (vt0.c1))) NOTNULL)))) UNION ALL SELECT * FROM rt0 LEFT OUTER JOIN vt0 ON (((((~ (rt0.c2)))OR(vt0.c0)))AND(((rt0.c1)%(0.12536561827394332)))) WHERE (((((((vt0.c2) BETWEEN (rt0.c0) AND (vt0.c1))) NOTNULL)) ISNULL));
SELECT ALL * FROM rt0 LEFT OUTER JOIN vt0 ON (((((~ (rt0.c2)))OR(vt0.c0)))AND(((rt0.c1)%(0.12536561827394332))));
SELECT DISTINCT * FROM rt0 NATURAL JOIN vt0;
SELECT DISTINCT * FROM rt0 NATURAL JOIN vt0 WHERE ((CASE vt0.c0  WHEN vt0.c1 THEN vt0.c2 END IN ())) UNION SELECT DISTINCT * FROM rt0 NATURAL JOIN vt0 WHERE ((NOT ((CASE vt0.c0  WHEN vt0.c1 THEN vt0.c2 END IN ())))) UNION SELECT DISTINCT * FROM rt0 NATURAL JOIN vt0 WHERE ((((CASE vt0.c0  WHEN vt0.c1 THEN vt0.c2 END IN ())) ISNULL));
SELECT DISTINCT * FROM rt0 NATURAL JOIN vt0;
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 WHERE (CAST((- (NULL)) AS TEXT)) GROUP BY vt0.c1, vt0.c0 UNION SELECT vt0.c1, vt0.c0 FROM vt0 WHERE ((NOT (CAST((- (NULL)) AS TEXT)))) GROUP BY vt0.c1, vt0.c0 UNION SELECT vt0.c1, vt0.c0 FROM vt0 WHERE (((CAST((- (NULL)) AS TEXT)) ISNULL)) GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM vt0, rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM vt0, rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING AVG(MAX(rt0.c1)) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0 FROM vt0, rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING (NOT (AVG(MAX(rt0.c1)))) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM vt0, rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING ((AVG(MAX(rt0.c1))) ISNULL);
SELECT ALL vt0.c2, vt0.c1, vt0.c0 FROM vt0;
SELECT vt0.c2, vt0.c1, vt0.c0 FROM vt0 WHERE (0.9037143734229973) UNION ALL SELECT vt0.c2, vt0.c1, vt0.c0 FROM vt0 WHERE ((NOT (0.9037143734229973))) UNION ALL SELECT ALL vt0.c2, vt0.c1, vt0.c0 FROM vt0 WHERE (((0.9037143734229973) ISNULL));
SELECT ALL vt0.c2, vt0.c1, vt0.c0 FROM vt0;
SELECT DISTINCT rt0.c2, vt0.c2, rt0.c1, vt0.c0, rt0.c0 FROM rt0, vt0;
SELECT DISTINCT rt0.c2, vt0.c2, rt0.c1, vt0.c0, rt0.c0 FROM rt0, vt0 WHERE (((((vt0.c1)>=(vt0.c2)))/(CAST(rt0.c0 AS INTEGER)))) UNION SELECT DISTINCT rt0.c2, vt0.c2, rt0.c1, vt0.c0, rt0.c0 FROM rt0, vt0 WHERE ((NOT (((((vt0.c1)>=(vt0.c2)))/(CAST(rt0.c0 AS INTEGER)))))) UNION SELECT DISTINCT rt0.c2, vt0.c2, rt0.c1, vt0.c0, rt0.c0 FROM rt0, vt0 WHERE (((((((vt0.c1)>=(vt0.c2)))/(CAST(rt0.c0 AS INTEGER)))) ISNULL));
SELECT DISTINCT rt0.c2, vt0.c2, rt0.c1, vt0.c0, rt0.c0 FROM rt0, vt0;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((((rt0.c0)) NOT BETWEEN ((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c0 END)) AND (((+ (rt0.c1)))))) GROUP BY rt0.c1, rt0.c0, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT ((((rt0.c0)) NOT BETWEEN ((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c0 END)) AND (((+ (rt0.c1)))))))) GROUP BY rt0.c1, rt0.c0, rt0.c2 UNION SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE ((((((rt0.c0)) NOT BETWEEN ((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c0 END)) AND (((+ (rt0.c1)))))) ISNULL)) GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT vt0.c1, vt0.c2, rt0.c0 FROM rt0, vt0 GROUP BY vt0.c1, vt0.c2, rt0.c0;
SELECT ALL vt0.c1, vt0.c2, rt0.c0 FROM rt0, vt0 GROUP BY vt0.c1, vt0.c2, rt0.c0 HAVING ((GROUP_CONCAT(COUNT(MAX(vt0.c2))))IS(rt0.c2)) COLLATE RTRIM UNION ALL SELECT ALL vt0.c1, vt0.c2, rt0.c0 FROM rt0, vt0 GROUP BY vt0.c1, vt0.c2, rt0.c0 HAVING (NOT (((GROUP_CONCAT(COUNT(MAX(vt0.c2))))IS(rt0.c2)) COLLATE RTRIM)) UNION ALL SELECT ALL vt0.c1, vt0.c2, rt0.c0 FROM rt0, vt0 GROUP BY vt0.c1, vt0.c2, rt0.c0 HAVING ((((GROUP_CONCAT(COUNT(MAX(vt0.c2))))IS(rt0.c2)) COLLATE RTRIM) ISNULL);
SELECT TOTAL((((+ (rt0.c1)))<(CAST('p.i좢EO)S' AS REAL)))) FROM rt0, vt0;
SELECT rt0.c0, rt0.c1 FROM rt0;
SELECT rt0.c0, rt0.c1 FROM rt0 WHERE (CASE WHEN (rt0.c1 IN (rt0.c2)) THEN x'6109a1d2' WHEN ((rt0.c0) IS TRUE) THEN NULLIF(rt0.c0, rt0.c2) WHEN CAST(rt0.c0 AS REAL) THEN CASE WHEN rt0.c1 THEN rt0.c2 WHEN 0.40594055343707103 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 END END) UNION ALL SELECT rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (CASE WHEN (rt0.c1 IN (rt0.c2)) THEN x'6109a1d2' WHEN ((rt0.c0) IS TRUE) THEN NULLIF(rt0.c0, rt0.c2) WHEN CAST(rt0.c0 AS REAL) THEN CASE WHEN rt0.c1 THEN rt0.c2 WHEN 0.40594055343707103 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 END END))) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM rt0 WHERE (((CASE WHEN (rt0.c1 IN (rt0.c2)) THEN x'6109a1d2' WHEN ((rt0.c0) IS TRUE) THEN NULLIF(rt0.c0, rt0.c2) WHEN CAST(rt0.c0 AS REAL) THEN CASE WHEN rt0.c1 THEN rt0.c2 WHEN 0.40594055343707103 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 END END) ISNULL));
SELECT rt0.c0, rt0.c1 FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((UPPER(rt0.c0)) BETWEEN ((~ (rt0.c2))) AND ((((rt0.c1))<=((rt0.c2)))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((UPPER(rt0.c0)) BETWEEN ((~ (rt0.c2))) AND ((((rt0.c1))<=((rt0.c2)))))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((UPPER(rt0.c0)) BETWEEN ((~ (rt0.c2))) AND ((((rt0.c1))<=((rt0.c2)))))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT vt0.c0, rt0.c1, rt0.c0, vt0.c2, vt0.c1 FROM vt0 FULL OUTER JOIN rt0 ON (- (((vt0.c2) IS TRUE))) GROUP BY vt0.c0, rt0.c1, rt0.c0, vt0.c2, vt0.c1;
SELECT ALL vt0.c0, rt0.c1, rt0.c0, vt0.c2, vt0.c1 FROM vt0 FULL OUTER JOIN rt0 ON (- (((vt0.c2) IS TRUE))) WHERE (((((((rt0.c1)AND(NULL)))OR(vt0.c0))) IS FALSE)) GROUP BY vt0.c0, rt0.c1, rt0.c0, vt0.c2, vt0.c1 UNION SELECT ALL vt0.c0, rt0.c1, rt0.c0, vt0.c2, vt0.c1 FROM vt0 FULL OUTER JOIN rt0 ON (- (((vt0.c2) IS TRUE))) WHERE ((NOT (((((((rt0.c1)AND(NULL)))OR(vt0.c0))) IS FALSE)))) GROUP BY vt0.c0, rt0.c1, rt0.c0, vt0.c2, vt0.c1 UNION SELECT ALL vt0.c0, rt0.c1, rt0.c0, vt0.c2, vt0.c1 FROM vt0 FULL OUTER JOIN rt0 ON (- (((vt0.c2) IS TRUE))) WHERE (((((((((rt0.c1)AND(NULL)))OR(vt0.c0))) IS FALSE)) ISNULL)) GROUP BY vt0.c0, rt0.c1, rt0.c0, vt0.c2, vt0.c1;
SELECT vt0.c0, rt0.c1, rt0.c0, vt0.c2, vt0.c1 FROM vt0 FULL OUTER JOIN rt0 ON (- (((vt0.c2) IS TRUE))) GROUP BY vt0.c0, rt0.c1, rt0.c0, vt0.c2, vt0.c1;
SELECT vt0.c0, vt0.c1, vt0.c2 FROM vt0 GROUP BY vt0.c0, vt0.c1, vt0.c2;
SELECT vt0.c0, vt0.c1, vt0.c2 FROM vt0 GROUP BY vt0.c0, vt0.c1, vt0.c2 HAVING ((((COUNT(*))AND(AVG(SUM(vt0.c1)))))OR(TOTAL(vt0.c2))) UNION ALL SELECT vt0.c0, vt0.c1, vt0.c2 FROM vt0 GROUP BY vt0.c0, vt0.c1, vt0.c2 HAVING (NOT (((((COUNT(*))AND(AVG(SUM(vt0.c1)))))OR(TOTAL(vt0.c2))))) UNION ALL SELECT vt0.c0, vt0.c1, vt0.c2 FROM vt0 GROUP BY vt0.c0, vt0.c1, vt0.c2 HAVING ((((((COUNT(*))AND(AVG(SUM(vt0.c1)))))OR(TOTAL(vt0.c2)))) ISNULL);
SELECT ALL vt0.c1, vt0.c2, vt0.c0 FROM vt0;
SELECT vt0.c1, vt0.c2, vt0.c0 FROM vt0 WHERE (CAST(vt0.c2 AS BLOB)) UNION ALL SELECT vt0.c1, vt0.c2, vt0.c0 FROM vt0 WHERE ((NOT (CAST(vt0.c2 AS BLOB)))) UNION ALL SELECT vt0.c1, vt0.c2, vt0.c0 FROM vt0 WHERE (((CAST(vt0.c2 AS BLOB)) ISNULL));
SELECT ALL vt0.c1, vt0.c2, vt0.c0 FROM vt0;
SELECT DISTINCT rt0.c2, rt0.c0, vt0.c1, vt0.c0, rt0.c1, vt0.c2 FROM vt0 RIGHT OUTER JOIN rt0 ON rt0.c2 COLLATE NOCASE;
SELECT DISTINCT rt0.c2, rt0.c0, vt0.c1, vt0.c0, rt0.c1, vt0.c2 FROM vt0 RIGHT OUTER JOIN rt0 ON rt0.c2 COLLATE NOCASE WHERE ((rt0.c0 IN ((((vt0.c1))<>((rt0.c1))), vt0.c0 COLLATE RTRIM, ((rt0.c1)<>(vt0.c0))))) UNION SELECT DISTINCT rt0.c2, rt0.c0, vt0.c1, vt0.c0, rt0.c1, vt0.c2 FROM vt0 RIGHT OUTER JOIN rt0 ON rt0.c2 COLLATE NOCASE WHERE ((NOT ((rt0.c0 IN ((((vt0.c1))!=((rt0.c1))), vt0.c0 COLLATE RTRIM, ((rt0.c1)!=(vt0.c0))))))) UNION SELECT DISTINCT rt0.c2, rt0.c0, vt0.c1, vt0.c0, rt0.c1, vt0.c2 FROM vt0 RIGHT OUTER JOIN rt0 ON rt0.c2 COLLATE NOCASE WHERE ((((rt0.c0 IN ((((vt0.c1))!=((rt0.c1))), vt0.c0 COLLATE RTRIM, ((rt0.c1)!=(vt0.c0))))) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c0, vt0.c1, vt0.c0, rt0.c1, vt0.c2 FROM vt0 RIGHT OUTER JOIN rt0 ON rt0.c2 COLLATE NOCASE;
SELECT ALL vt0.c2, rt0.c1, rt0.c0 FROM vt0 RIGHT OUTER JOIN rt0 ON CASE WHEN ((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1)) THEN (vt0.c2 IN ()) WHEN vt0.c0 THEN ((((rt0.c1)AND(rt0.c2)))OR(rt0.c0)) WHEN '0.5425922006727995' THEN ((((rt0.c0)OR(rt0.c2)))AND(rt0.c1)) ELSE (NULL IN ()) END GROUP BY vt0.c2, rt0.c1, rt0.c0;
SELECT vt0.c2, rt0.c1, rt0.c0 FROM vt0 RIGHT OUTER JOIN rt0 ON CASE WHEN ((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1)) THEN (vt0.c2 IN ()) WHEN vt0.c0 THEN ((((rt0.c1)AND(rt0.c2)))OR(rt0.c0)) WHEN '0.5425922006727995' THEN ((((rt0.c0)OR(rt0.c2)))AND(rt0.c1)) ELSE (NULL IN ()) END WHERE (0.8900087416913962 COLLATE RTRIM) GROUP BY vt0.c2, rt0.c1, rt0.c0 UNION SELECT vt0.c2, rt0.c1, rt0.c0 FROM vt0 RIGHT OUTER JOIN rt0 ON CASE WHEN ((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1)) THEN (vt0.c2 IN ()) WHEN vt0.c0 THEN ((((rt0.c1)AND(rt0.c2)))OR(rt0.c0)) WHEN '0.5425922006727995' THEN ((((rt0.c0)OR(rt0.c2)))AND(rt0.c1)) ELSE (NULL IN ()) END WHERE ((NOT (0.8900087416913962 COLLATE RTRIM))) GROUP BY vt0.c2, rt0.c1, rt0.c0 UNION SELECT vt0.c2, rt0.c1, rt0.c0 FROM vt0 RIGHT OUTER JOIN rt0 ON CASE WHEN ((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1)) THEN (vt0.c2 IN ()) WHEN vt0.c0 THEN ((((rt0.c1)AND(rt0.c2)))OR(rt0.c0)) WHEN '0.5425922006727995' THEN ((((rt0.c0)OR(rt0.c2)))AND(rt0.c1)) ELSE (NULL IN ()) END WHERE (((0.8900087416913962 COLLATE RTRIM) ISNULL)) GROUP BY vt0.c2, rt0.c1, rt0.c0;
SELECT ALL vt0.c2, rt0.c1, rt0.c0 FROM vt0 RIGHT OUTER JOIN rt0 ON CASE WHEN ((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1)) THEN (vt0.c2 IN ()) WHEN vt0.c0 THEN ((((rt0.c1)AND(rt0.c2)))OR(rt0.c0)) WHEN '0.5425922006727995' THEN ((((rt0.c0)OR(rt0.c2)))AND(rt0.c1)) ELSE (NULL IN ()) END GROUP BY vt0.c2, rt0.c1, rt0.c0;
SELECT rt0.c2, vt0.c1, rt0.c0 FROM rt0, vt0 GROUP BY rt0.c2, vt0.c1, rt0.c0;
SELECT rt0.c2, vt0.c1, rt0.c0 FROM rt0, vt0 GROUP BY rt0.c2, vt0.c1, rt0.c0 HAVING (((GROUP_CONCAT(vt0.c2))) BETWEEN (((+ (rt0.c0)))) AND ((json_array(vt0.c1, rt0.c0, COUNT(TOTAL(COUNT(*))), vt0.c1)))) UNION ALL SELECT ALL rt0.c2, vt0.c1, rt0.c0 FROM rt0, vt0 GROUP BY rt0.c2, vt0.c1, rt0.c0 HAVING (NOT ((((GROUP_CONCAT(vt0.c2))) BETWEEN (((+ (rt0.c0)))) AND ((json_array(vt0.c1, rt0.c0, COUNT(TOTAL(COUNT(*))), vt0.c1)))))) UNION ALL SELECT rt0.c2, vt0.c1, rt0.c0 FROM rt0, vt0 GROUP BY rt0.c2, vt0.c1, rt0.c0 HAVING (((((GROUP_CONCAT(vt0.c2))) BETWEEN (((+ (rt0.c0)))) AND ((json_array(vt0.c1, rt0.c0, COUNT(TOTAL(COUNT(*))), vt0.c1))))) ISNULL);
SELECT vt0.c0, vt0.c2, vt0.c1 FROM vt0;
SELECT ALL vt0.c0, vt0.c2, vt0.c1 FROM vt0 WHERE ('-1669021762') UNION ALL SELECT ALL vt0.c0, vt0.c2, vt0.c1 FROM vt0 WHERE ((NOT ('-1669021762'))) UNION ALL SELECT vt0.c0, vt0.c2, vt0.c1 FROM vt0 WHERE ((('-1669021762') ISNULL));
SELECT vt0.c0, vt0.c2, vt0.c1 FROM vt0;
SELECT DISTINCT rt0.c0, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c1 FROM rt0 WHERE ((((rt0.c1)) NOT BETWEEN ((((rt0.c2)%(rt0.c1)))) AND ((rt0.c1)))) UNION SELECT DISTINCT rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT ((((rt0.c1)) NOT BETWEEN ((((rt0.c2)%(rt0.c1)))) AND ((rt0.c1)))))) UNION SELECT DISTINCT rt0.c0, rt0.c1 FROM rt0 WHERE ((((((rt0.c1)) NOT BETWEEN ((((rt0.c2)%(rt0.c1)))) AND ((rt0.c1)))) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c1 FROM rt0;
SELECT ALL vt0.c1, vt0.c2, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c2, vt0.c0;
SELECT ALL vt0.c1, vt0.c2, vt0.c0 FROM vt0 WHERE (((((vt0.c1) ISNULL)) NOT BETWEEN (vt0.c1) AND (((vt0.c1) BETWEEN (0xfffffffff0a38d68) AND (vt0.c0))))) GROUP BY vt0.c1, vt0.c2, vt0.c0 UNION SELECT ALL vt0.c1, vt0.c2, vt0.c0 FROM vt0 WHERE ((NOT (((((vt0.c1) ISNULL)) NOT BETWEEN (vt0.c1) AND (((vt0.c1) BETWEEN (0xfffffffff0a38d68) AND (vt0.c0))))))) GROUP BY vt0.c1, vt0.c2, vt0.c0 UNION SELECT ALL vt0.c1, vt0.c2, vt0.c0 FROM vt0 WHERE (((((((vt0.c1) ISNULL)) NOT BETWEEN (vt0.c1) AND (((vt0.c1) BETWEEN (0xfffffffff0a38d68) AND (vt0.c0))))) ISNULL)) GROUP BY vt0.c1, vt0.c2, vt0.c0;
SELECT ALL vt0.c1, vt0.c2, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c2, vt0.c0;
SELECT ALL rt0.c1, rt0.c2 FROM vt0, rt0 GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c1, rt0.c2 FROM vt0, rt0 GROUP BY rt0.c1, rt0.c2 HAVING SUM(TOTAL(vt0.c2)) UNION ALL SELECT rt0.c1, rt0.c2 FROM vt0, rt0 GROUP BY rt0.c1, rt0.c2 HAVING (NOT (SUM(TOTAL(vt0.c2)))) UNION ALL SELECT ALL rt0.c1, rt0.c2 FROM vt0, rt0 GROUP BY rt0.c1, rt0.c2 HAVING ((SUM(TOTAL(vt0.c2))) ISNULL);
SELECT vt0.c0, vt0.c2, vt0.c1 FROM vt0;
SELECT ALL vt0.c0, vt0.c2, vt0.c1 FROM vt0 WHERE (((CAST(vt0.c2 AS REAL)) IS TRUE)) UNION ALL SELECT ALL vt0.c0, vt0.c2, vt0.c1 FROM vt0 WHERE ((NOT (((CAST(vt0.c2 AS REAL)) IS TRUE)))) UNION ALL SELECT vt0.c0, vt0.c2, vt0.c1 FROM vt0 WHERE (((((CAST(vt0.c2 AS REAL)) IS TRUE)) ISNULL));
SELECT vt0.c0, vt0.c2, vt0.c1 FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE ((~ (((vt0.c0)||(vt0.c1))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT ((~ (((vt0.c0)||(vt0.c1))))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((((~ (((vt0.c0)||(vt0.c1))))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 WHERE ((NULL IN (x''))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0 WHERE ((NOT ((NULL IN (x''))))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0 WHERE ((((NULL IN (x''))) ISNULL)) GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING '1570742069' COLLATE RTRIM UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT ('1570742069' COLLATE RTRIM)) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (('1570742069' COLLATE RTRIM) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING '1570742069' COLLATE RTRIM UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT ('1570742069' COLLATE RTRIM)) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (('1570742069' COLLATE RTRIM) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT * FROM vt0;
SELECT ALL * FROM vt0 WHERE (NULL) UNION ALL SELECT * FROM vt0 WHERE ((NOT (NULL))) UNION ALL SELECT * FROM vt0 WHERE (((NULL) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((((((((((rt0.c0) ISNULL))OR((((rt0.c0, rt0.c0, rt0.c1)) NOT BETWEEN ((rt0.c1, rt0.c1, rt0.c1)) AND ((x'330c', NULL, rt0.c1))))))OR(((rt0.c2) NOT NULL))))OR(rt0.c1)))AND(rt0.c1))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((((((((((rt0.c0) ISNULL))OR((((rt0.c0, rt0.c0, rt0.c1)) NOT BETWEEN ((rt0.c1, rt0.c1, rt0.c1)) AND ((x'330c', NULL, rt0.c1))))))OR(((rt0.c2) NOT NULL))))OR(rt0.c1)))AND(rt0.c1))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((((((((((rt0.c0) ISNULL))OR((((rt0.c0, rt0.c0, rt0.c1)) NOT BETWEEN ((rt0.c1, rt0.c1, rt0.c1)) AND ((x'330c', NULL, rt0.c1))))))OR(((rt0.c2) NOT NULL))))OR(rt0.c1)))AND(rt0.c1))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL vt0.c2, rt0.c0, rt0.c2 FROM rt0, vt0 GROUP BY vt0.c2, rt0.c0, rt0.c2;
SELECT ALL vt0.c2, rt0.c0, rt0.c2 FROM rt0, vt0 WHERE ((((vt0.c2)/(rt0.c1)) IN ())) GROUP BY vt0.c2, rt0.c0, rt0.c2 UNION SELECT vt0.c2, rt0.c0, rt0.c2 FROM rt0, vt0 WHERE ((NOT ((((vt0.c2)/(rt0.c1)) IN ())))) GROUP BY vt0.c2, rt0.c0, rt0.c2 UNION SELECT ALL vt0.c2, rt0.c0, rt0.c2 FROM rt0, vt0 WHERE ((((((vt0.c2)/(rt0.c1)) IN ())) ISNULL)) GROUP BY vt0.c2, rt0.c0, rt0.c2;
SELECT ALL vt0.c2, rt0.c0, rt0.c2 FROM rt0, vt0 GROUP BY vt0.c2, rt0.c0, rt0.c2;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING ((COUNT(*))%(MIN(rt0.c0))) UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT (((COUNT(*))%(MIN(rt0.c0))))) UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING ((((COUNT(*))%(MIN(rt0.c0)))) ISNULL);
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING ((COUNT(*))%(MIN(rt0.c0))) UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT (((COUNT(*))%(MIN(rt0.c0))))) UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING ((((COUNT(*))%(MIN(rt0.c0)))) ISNULL);
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c0, rt0.c2 FROM rt0;
SELECT rt0.c0, rt0.c2 FROM rt0 WHERE (CAST(((rt0.c2)AND(rt0.c0)) AS TEXT)) UNION ALL SELECT rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (CAST(((rt0.c2)AND(rt0.c0)) AS TEXT)))) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt0 WHERE (((CAST(((rt0.c2)AND(rt0.c0)) AS TEXT)) ISNULL));
SELECT ALL rt0.c0, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c2, vt0.c1, vt0.c0 FROM rt0, vt0;
SELECT DISTINCT rt0.c2, vt0.c1, vt0.c0 FROM rt0, vt0 WHERE (SQLITE_SOURCE_ID()) UNION SELECT DISTINCT rt0.c2, vt0.c1, vt0.c0 FROM rt0, vt0 WHERE ((NOT (SQLITE_SOURCE_ID()))) UNION SELECT DISTINCT rt0.c2, vt0.c1, vt0.c0 FROM rt0, vt0 WHERE (((SQLITE_SOURCE_ID()) ISNULL));
SELECT DISTINCT rt0.c2, vt0.c1, vt0.c0 FROM rt0, vt0;
SELECT rt0.c0, vt0.c1 FROM rt0, vt0 GROUP BY rt0.c0, vt0.c1;
SELECT ALL rt0.c0, vt0.c1 FROM rt0, vt0 WHERE ((((((vt0.c0) BETWEEN (rt0.c1) AND (vt0.c1)), (rt0.c0 IN (rt0.c0)), ((rt0.c2) NOT BETWEEN ('2006007904') AND (vt0.c2))))>=((rt0.c1, (vt0.c2 IN ('n2摵V뭗', rt0.c0)), x'')))) GROUP BY rt0.c0, vt0.c1 UNION SELECT rt0.c0, vt0.c1 FROM rt0, vt0 WHERE ((NOT ((((((vt0.c0) BETWEEN (rt0.c1) AND (vt0.c1)), (rt0.c0 IN (rt0.c0)), ((rt0.c2) NOT BETWEEN ('2006007904') AND (vt0.c2))))>=((rt0.c1, (vt0.c2 IN ('n2摵V뭗', rt0.c0)), x'')))))) GROUP BY rt0.c0, vt0.c1 UNION SELECT ALL rt0.c0, vt0.c1 FROM rt0, vt0 WHERE ((((((((vt0.c0) BETWEEN (rt0.c1) AND (vt0.c1)), (rt0.c0 IN (rt0.c0)), ((rt0.c2) NOT BETWEEN ('2006007904') AND (vt0.c2))))>=((rt0.c1, (vt0.c2 IN ('n2摵V뭗', rt0.c0)), x'')))) ISNULL)) GROUP BY rt0.c0, vt0.c1;
SELECT rt0.c0, vt0.c1 FROM rt0, vt0 GROUP BY rt0.c0, vt0.c1;
SELECT ALL vt0.c0, rt0.c0, rt0.c2, rt0.c1, vt0.c1 FROM rt0, vt0 GROUP BY vt0.c0, rt0.c0, rt0.c2, rt0.c1, vt0.c1;
SELECT vt0.c0, rt0.c0, rt0.c2, rt0.c1, vt0.c1 FROM rt0, vt0 GROUP BY vt0.c0, rt0.c0, rt0.c2, rt0.c1, vt0.c1 HAVING COUNT(((((MIN(rt0.c2))AND(vt0.c2)))AND(COUNT(GROUP_CONCAT(rt0.c1))))) UNION ALL SELECT vt0.c0, rt0.c0, rt0.c2, rt0.c1, vt0.c1 FROM rt0, vt0 GROUP BY vt0.c0, rt0.c0, rt0.c2, rt0.c1, vt0.c1 HAVING (NOT (COUNT(((((MIN(rt0.c2))AND(vt0.c2)))AND(COUNT(GROUP_CONCAT(rt0.c1))))))) UNION ALL SELECT ALL vt0.c0, rt0.c0, rt0.c2, rt0.c1, vt0.c1 FROM rt0, vt0 GROUP BY vt0.c0, rt0.c0, rt0.c2, rt0.c1, vt0.c1 HAVING ((COUNT(((((MIN(rt0.c2))AND(vt0.c2)))AND(COUNT(GROUP_CONCAT(rt0.c1)))))) ISNULL);
SELECT ALL MIN(((((vt0.c1) IS FALSE))LIKE(vt0.c2))) FROM vt0, rt0 ORDER BY LIKELIHOOD(vt0.c2, 0.6751318644660106) COLLATE RTRIM DESC  NULLS FIRST;
SELECT rt0.c0, rt0.c1 FROM rt0;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 WHERE (CAST(((rt0.c1) IS FALSE) AS REAL)) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (CAST(((rt0.c1) IS FALSE) AS REAL)))) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM rt0 WHERE (((CAST(((rt0.c1) IS FALSE) AS REAL)) ISNULL));
SELECT rt0.c0, rt0.c1 FROM rt0;
SELECT DISTINCT vt0.c2 FROM vt0;
SELECT DISTINCT vt0.c2 FROM vt0 WHERE (((json_array_length(549647084))OR((- (vt0.c2))))) UNION SELECT DISTINCT vt0.c2 FROM vt0 WHERE ((NOT (((json_array_length(549647084))OR((- (vt0.c2))))))) UNION SELECT DISTINCT vt0.c2 FROM vt0 WHERE (((((json_array_length(549647084))OR((- (vt0.c2))))) ISNULL));
SELECT DISTINCT vt0.c2 FROM vt0;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE (-1.260612678E9) GROUP BY rt0.c0, rt0.c1, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (-1.260612678E9))) GROUP BY rt0.c0, rt0.c1, rt0.c2 UNION SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE (((-1.260612678E9) ISNULL)) GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING -1.116400239E9 UNION ALL SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING (NOT (-1.116400239E9)) UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING ((-1.116400239E9) ISNULL);
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING -1.116400239E9 UNION ALL SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING (NOT (-1.116400239E9)) UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING ((-1.116400239E9) ISNULL);
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT ALL * FROM rt0;
SELECT * FROM rt0 WHERE ((- ((((rt0.c1, rt0.c1, rt0.c0)) NOT BETWEEN ((rt0.c0, rt0.c1, rt0.c1)) AND ((x'', rt0.c0, rt0.c0)))))) UNION ALL SELECT * FROM rt0 WHERE ((NOT ((- ((((rt0.c1, rt0.c1, rt0.c0)) NOT BETWEEN ((rt0.c0, rt0.c1, rt0.c1)) AND ((x'', rt0.c0, rt0.c0)))))))) UNION ALL SELECT * FROM rt0 WHERE ((((- ((((rt0.c1, rt0.c1, rt0.c0)) NOT BETWEEN ((rt0.c0, rt0.c1, rt0.c1)) AND ((x'', rt0.c0, rt0.c0)))))) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c2 FROM rt0 WHERE (CAST(CASE WHEN rt0.c1 THEN 0.6911118136003764 ELSE rt0.c2 END AS REAL)) UNION SELECT DISTINCT rt0.c2 FROM rt0 WHERE ((NOT (CAST(CASE WHEN rt0.c1 THEN 0.6911118136003764 ELSE rt0.c2 END AS REAL)))) UNION SELECT DISTINCT rt0.c2 FROM rt0 WHERE (((CAST(CASE WHEN rt0.c1 THEN 0.6911118136003764 ELSE rt0.c2 END AS REAL)) ISNULL));
SELECT DISTINCT rt0.c2 FROM rt0;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE (((MIN(rt0.c1, rt0.c0, 0.37829098189749055, rt0.c0)) IS FALSE)) GROUP BY rt0.c2, rt0.c0, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (((MIN(rt0.c1, rt0.c0, 0.37829098189749055, rt0.c0)) IS FALSE)))) GROUP BY rt0.c2, rt0.c0, rt0.c1 UNION SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE (((((MIN(rt0.c1, rt0.c0, 0.37829098189749055, rt0.c0)) IS FALSE)) ISNULL)) GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT vt0.c0, vt0.c2 FROM rt0 RIGHT OUTER JOIN vt0 ON 0.34325890443089657 GROUP BY vt0.c0, vt0.c2;
SELECT ALL vt0.c0, vt0.c2 FROM rt0 RIGHT OUTER JOIN vt0 ON 0.34325890443089657 GROUP BY vt0.c0, vt0.c2 HAVING COUNT(*) UNION ALL SELECT vt0.c0, vt0.c2 FROM rt0 RIGHT OUTER JOIN vt0 ON 0.34325890443089657 GROUP BY vt0.c0, vt0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt0.c0, vt0.c2 FROM rt0 RIGHT OUTER JOIN vt0 ON 0.34325890443089657 GROUP BY vt0.c0, vt0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT vt0.c0, vt0.c2 FROM rt0 RIGHT OUTER JOIN vt0 ON 0.34325890443089657 GROUP BY vt0.c0, vt0.c2;
SELECT ALL vt0.c0, vt0.c2 FROM rt0 RIGHT OUTER JOIN vt0 ON 0.34325890443089657 GROUP BY vt0.c0, vt0.c2 HAVING COUNT(*) UNION ALL SELECT vt0.c0, vt0.c2 FROM rt0 RIGHT OUTER JOIN vt0 ON 0.34325890443089657 GROUP BY vt0.c0, vt0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt0.c0, vt0.c2 FROM rt0 RIGHT OUTER JOIN vt0 ON 0.34325890443089657 GROUP BY vt0.c0, vt0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT vt0.c0, vt0.c2 FROM rt0 RIGHT OUTER JOIN vt0 ON 0.34325890443089657 GROUP BY vt0.c0, vt0.c2;
SELECT ALL vt0.c2, vt0.c1, rt0.c2, rt0.c0, rt0.c1, vt0.c0 FROM rt0, vt0;
SELECT ALL vt0.c2, vt0.c1, rt0.c2, rt0.c0, rt0.c1, vt0.c0 FROM rt0, vt0 WHERE (rt0.c2) UNION ALL SELECT vt0.c2, vt0.c1, rt0.c2, rt0.c0, rt0.c1, vt0.c0 FROM rt0, vt0 WHERE ((NOT (rt0.c2))) UNION ALL SELECT ALL vt0.c2, vt0.c1, rt0.c2, rt0.c0, rt0.c1, vt0.c0 FROM rt0, vt0 WHERE (((rt0.c2) ISNULL));
SELECT ALL vt0.c2, vt0.c1, rt0.c2, rt0.c0, rt0.c1, vt0.c0 FROM rt0, vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((((((((((vt0.c1) NOTNULL))OR((+ (vt0.c2)))))OR(((vt0.c2) NOT BETWEEN (vt0.c1) AND (vt0.c0)))))AND((((('57371969')OR(vt0.c1)))OR(vt0.c0)))))OR(((((((((vt0.c2)AND(vt0.c0)))OR(vt0.c1)))AND(vt0.c2)))OR(vt0.c2))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((((((((((vt0.c1) NOTNULL))OR((+ (vt0.c2)))))OR(((vt0.c2) NOT BETWEEN (vt0.c1) AND (vt0.c0)))))AND((((('57371969')OR(vt0.c1)))OR(vt0.c0)))))OR(((((((((vt0.c2)AND(vt0.c0)))OR(vt0.c1)))AND(vt0.c2)))OR(vt0.c2))))))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((((((((((vt0.c1) NOTNULL))OR((+ (vt0.c2)))))OR(((vt0.c2) NOT BETWEEN (vt0.c1) AND (vt0.c0)))))AND((((('57371969')OR(vt0.c1)))OR(vt0.c0)))))OR(((((((((vt0.c2)AND(vt0.c0)))OR(vt0.c1)))AND(vt0.c2)))OR(vt0.c2))))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE ((NOT (((vt0.c0)LIKE(vt0.c2))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT ((NOT (((vt0.c0)LIKE(vt0.c2))))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((((NOT (((vt0.c0)LIKE(vt0.c2))))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT rt0.c2 FROM rt0, vt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0, vt0 GROUP BY rt0.c2 HAVING AVG((+ (rt0.c1))) UNION ALL SELECT ALL rt0.c2 FROM rt0, vt0 GROUP BY rt0.c2 HAVING (NOT (AVG((+ (rt0.c1))))) UNION ALL SELECT rt0.c2 FROM rt0, vt0 GROUP BY rt0.c2 HAVING ((AVG((+ (rt0.c1)))) ISNULL);
SELECT rt0.c2 FROM rt0, vt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0, vt0 GROUP BY rt0.c2 HAVING AVG((+ (rt0.c1))) UNION ALL SELECT ALL rt0.c2 FROM rt0, vt0 GROUP BY rt0.c2 HAVING (NOT (AVG((+ (rt0.c1))))) UNION ALL SELECT rt0.c2 FROM rt0, vt0 GROUP BY rt0.c2 HAVING ((AVG((+ (rt0.c1)))) ISNULL);
SELECT rt0.c2 FROM rt0, vt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0;
SELECT rt0.c2 FROM rt0 WHERE ('0.19380897319294277' COLLATE NOCASE) UNION ALL SELECT rt0.c2 FROM rt0 WHERE ((NOT ('0.19380897319294277' COLLATE NOCASE))) UNION ALL SELECT rt0.c2 FROM rt0 WHERE ((('0.19380897319294277' COLLATE NOCASE) ISNULL));
SELECT rt0.c2 FROM rt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (NULL) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (NULL))) UNION SELECT DISTINCT * FROM vt0 WHERE (((NULL) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 WHERE (CASE rt0.c1  WHEN rt0.c1 THEN rt0.c1 END COLLATE RTRIM) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM rt0 WHERE ((NOT (CASE rt0.c1  WHEN rt0.c1 THEN rt0.c1 END COLLATE RTRIM))) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM rt0 WHERE (((CASE rt0.c1  WHEN rt0.c1 THEN rt0.c1 END COLLATE RTRIM) ISNULL)) GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c1, vt0.c0, rt0.c0, rt0.c2, vt0.c2, vt0.c1 FROM vt0, rt0 GROUP BY rt0.c1, vt0.c0, rt0.c0, rt0.c2, vt0.c2, vt0.c1;
SELECT rt0.c1, vt0.c0, rt0.c0, rt0.c2, vt0.c2, vt0.c1 FROM vt0, rt0 GROUP BY rt0.c1, vt0.c0, rt0.c0, rt0.c2, vt0.c2, vt0.c1 HAVING CASE WHEN TOTAL(COUNT(rt0.c1)) THEN MIN(GROUP_CONCAT(MIN(rt0.c0))) WHEN (~ (rt0.c1)) THEN (((vt0.c1))!=((vt0.c0))) WHEN TOTAL(AVG(MIN(vt0.c2))) THEN ((vt0.c1) NOT NULL) WHEN GROUP_CONCAT(COUNT(COUNT(TOTAL(rt0.c1)))) THEN COUNT(NULL) WHEN ((MAX(rt0.c0))>=(rt0.c0)) THEN GROUP_CONCAT(TOTAL(AVG('951431441'))) ELSE TOTAL(MIN(MAX(GROUP_CONCAT(SUM(MAX('3')))))) END UNION ALL SELECT rt0.c1, vt0.c0, rt0.c0, rt0.c2, vt0.c2, vt0.c1 FROM vt0, rt0 GROUP BY rt0.c1, vt0.c0, rt0.c0, rt0.c2, vt0.c2, vt0.c1 HAVING (NOT (CASE WHEN TOTAL(COUNT(rt0.c1)) THEN MIN(GROUP_CONCAT(MIN(rt0.c0))) WHEN (~ (rt0.c1)) THEN (((vt0.c1))!=((vt0.c0))) WHEN TOTAL(AVG(MIN(vt0.c2))) THEN ((vt0.c1) NOT NULL) WHEN GROUP_CONCAT(COUNT(COUNT(TOTAL(rt0.c1)))) THEN COUNT(NULL) WHEN ((MAX(rt0.c0))>=(rt0.c0)) THEN GROUP_CONCAT(TOTAL(AVG('951431441'))) ELSE TOTAL(MIN(MAX(GROUP_CONCAT(SUM(MAX('3')))))) END)) UNION ALL SELECT rt0.c1, vt0.c0, rt0.c0, rt0.c2, vt0.c2, vt0.c1 FROM vt0, rt0 GROUP BY rt0.c1, vt0.c0, rt0.c0, rt0.c2, vt0.c2, vt0.c1 HAVING ((CASE WHEN TOTAL(COUNT(rt0.c1)) THEN MIN(GROUP_CONCAT(MIN(rt0.c0))) WHEN (~ (rt0.c1)) THEN (((vt0.c1))<>((vt0.c0))) WHEN TOTAL(AVG(MIN(vt0.c2))) THEN ((vt0.c1) NOT NULL) WHEN GROUP_CONCAT(COUNT(COUNT(TOTAL(rt0.c1)))) THEN COUNT(NULL) WHEN ((MAX(rt0.c0))>=(rt0.c0)) THEN GROUP_CONCAT(TOTAL(AVG('951431441'))) ELSE TOTAL(MIN(MAX(GROUP_CONCAT(SUM(MAX('3')))))) END) ISNULL);
SELECT SUM((((((((vt0.c0, vt0.c1, '-382420077')) BETWEEN ((rt0.c0, '-1352126309', vt0.c2)) AND ((rt0.c0, vt0.c0, rt0.c0))))AND((rt0.c1 IN ()))))AND((rt0.c2 IN ())))) FROM rt0, vt0 ORDER BY ((CAST(NULL AS BLOB)) NOTNULL);
SELECT * FROM rt0 NATURAL JOIN vt0;
SELECT ALL * FROM rt0 NATURAL JOIN vt0 WHERE (CAST(CASE WHEN vt0.c0 THEN '-2004303610' END AS BLOB)) UNION ALL SELECT ALL * FROM rt0 NOT INDEXED NATURAL JOIN vt0 WHERE ((NOT (CAST(CASE WHEN vt0.c0 THEN '-2004303610' END AS BLOB)))) UNION ALL SELECT ALL * FROM rt0 NATURAL JOIN vt0 WHERE (((CAST(CASE WHEN vt0.c0 THEN '-2004303610' END AS BLOB)) ISNULL));
SELECT * FROM rt0 NATURAL JOIN vt0;
SELECT DISTINCT * FROM vt0, rt0;
SELECT DISTINCT * FROM vt0, rt0 WHERE ((('274564658')<(0Xffffffffa1d7faba))) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE ((NOT ((('274564658')<(0xffffffffa1d7faba))))) UNION SELECT DISTINCT * FROM vt0, rt0 WHERE ((((('274564658')<(0Xffffffffa1d7faba))) ISNULL));
SELECT DISTINCT * FROM vt0, rt0;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE (((((rt0.c2) IS FALSE)) NOTNULL)) GROUP BY rt0.c2, rt0.c1, rt0.c0 UNION SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (((((rt0.c2) IS FALSE)) NOTNULL)))) GROUP BY rt0.c2, rt0.c1, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE (((((((rt0.c2) IS FALSE)) NOTNULL)) ISNULL)) GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT vt0.c0, rt0.c2 FROM rt0, vt0 GROUP BY vt0.c0, rt0.c2;
SELECT vt0.c0, rt0.c2 FROM rt0, vt0 GROUP BY vt0.c0, rt0.c2 HAVING (- (COUNT(*))) UNION ALL SELECT ALL vt0.c0, rt0.c2 FROM rt0, vt0 GROUP BY vt0.c0, rt0.c2 HAVING (NOT ((- (COUNT(*))))) UNION ALL SELECT ALL vt0.c0, rt0.c2 FROM rt0, vt0 GROUP BY vt0.c0, rt0.c2 HAVING (((- (COUNT(*)))) ISNULL);
SELECT vt0.c0, rt0.c2 FROM rt0, vt0 GROUP BY vt0.c0, rt0.c2;
SELECT vt0.c0, rt0.c2 FROM rt0, vt0 GROUP BY vt0.c0, rt0.c2 HAVING (- (COUNT(*))) UNION ALL SELECT ALL vt0.c0, rt0.c2 FROM rt0, vt0 GROUP BY vt0.c0, rt0.c2 HAVING (NOT ((- (COUNT(*))))) UNION ALL SELECT ALL vt0.c0, rt0.c2 FROM rt0, vt0 GROUP BY vt0.c0, rt0.c2 HAVING (((- (COUNT(*)))) ISNULL);
SELECT vt0.c0, rt0.c2 FROM rt0, vt0 GROUP BY vt0.c0, rt0.c2;
SELECT rt0.c1 FROM rt0;
SELECT ALL rt0.c1 FROM rt0 WHERE ((((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c2))))-(CASE WHEN rt0.c0 THEN rt0.c1 ELSE -1587084067 END))) UNION ALL SELECT ALL rt0.c1 FROM rt0 WHERE ((NOT ((((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c2))))-(CASE WHEN rt0.c0 THEN rt0.c1 ELSE -1587084067 END))))) UNION ALL SELECT ALL rt0.c1 FROM rt0 WHERE ((((((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c2))))-(CASE WHEN rt0.c0 THEN rt0.c1 ELSE -1587084067 END))) ISNULL));
SELECT rt0.c1 FROM rt0;
SELECT DISTINCT * FROM rt0 CROSS JOIN vt0 ON '-969801528';
SELECT DISTINCT * FROM rt0 CROSS JOIN vt0 ON '-969801528' WHERE (CASE WHEN ((((rt0.c0)AND(rt0.c2)))OR(rt0.c2)) THEN (- (vt0.c0)) END) UNION SELECT DISTINCT * FROM rt0 CROSS JOIN vt0 ON '-969801528' WHERE ((NOT (CASE WHEN ((((rt0.c0)AND(rt0.c2)))OR(rt0.c2)) THEN (- (vt0.c0)) END))) UNION SELECT DISTINCT * FROM rt0 CROSS JOIN vt0 ON '-969801528' WHERE (((CASE WHEN ((((rt0.c0)AND(rt0.c2)))OR(rt0.c2)) THEN (- (vt0.c0)) END) ISNULL));
SELECT DISTINCT * FROM rt0 CROSS JOIN vt0 ON '-969801528';
SELECT rt0.c0 FROM rt0, vt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0, vt0 WHERE ((((((vt0.c0)GLOB(rt0.c2))))>((NULL)))) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM rt0, vt0 WHERE ((NOT ((((((vt0.c0)GLOB(rt0.c2))))>((NULL)))))) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM rt0, vt0 WHERE ((((((((vt0.c0)GLOB(rt0.c2))))>((NULL)))) ISNULL)) GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0, vt0 GROUP BY rt0.c0;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING MAX(SUM(vt0.c1) COLLATE BINARY) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING (NOT (MAX(SUM(vt0.c1) COLLATE BINARY))) UNION ALL SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING ((MAX(SUM(vt0.c1) COLLATE BINARY)) ISNULL);
SELECT * FROM vt0, rt0;
SELECT * FROM vt0, rt0 WHERE (((((((vt0.c2)>>(vt0.c2)))OR(CHAR(vt0.c1))))OR((+ ('1466933548'))))) UNION ALL SELECT ALL * FROM vt0, rt0 WHERE ((NOT (((((((vt0.c2)>>(vt0.c2)))OR(CHAR(vt0.c1))))OR((+ ('1466933548'))))))) UNION ALL SELECT ALL * FROM vt0, rt0 WHERE (((((((((vt0.c2)>>(vt0.c2)))OR(CHAR(vt0.c1))))OR((+ ('1466933548'))))) ISNULL));
SELECT * FROM vt0, rt0;
SELECT DISTINCT * FROM rt0, vt0;
SELECT DISTINCT * FROM rt0, vt0 WHERE ((~ (((rt0.c2) NOT NULL)))) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE ((NOT ((~ (((rt0.c2) NOT NULL)))))) UNION SELECT DISTINCT * FROM rt0, vt0 WHERE ((((~ (((rt0.c2) NOT NULL)))) ISNULL));
SELECT DISTINCT * FROM rt0, vt0;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 WHERE (CASE CASE rt0.c0  WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c1 END  WHEN (((rt0.c1))==((rt0.c1))) THEN rt0.c1 COLLATE NOCASE END) GROUP BY rt0.c0, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (CASE CASE rt0.c0  WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c1 END  WHEN (((rt0.c1))==((rt0.c1))) THEN rt0.c1 COLLATE NOCASE END))) GROUP BY rt0.c0, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c1 FROM rt0 WHERE (((CASE CASE rt0.c0  WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c1 END  WHEN (((rt0.c1))==((rt0.c1))) THEN rt0.c1 COLLATE NOCASE END) ISNULL)) GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c0, vt0.c0, rt0.c2, vt0.c2, vt0.c1, rt0.c1 FROM rt0 INNER JOIN vt0 ON (((((- (vt0.c2)))AND(CAST(vt0.c2 AS TEXT))))OR(CAST(NULL AS REAL))) GROUP BY rt0.c0, vt0.c0, rt0.c2, vt0.c2, vt0.c1, rt0.c1;
SELECT ALL rt0.c0, vt0.c0, rt0.c2, vt0.c2, vt0.c1, rt0.c1 FROM rt0 INNER JOIN vt0 ON (((((- (vt0.c2)))AND(CAST(vt0.c2 AS TEXT))))OR(CAST(NULL AS REAL))) GROUP BY rt0.c0, vt0.c0, rt0.c2, vt0.c2, vt0.c1, rt0.c1 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c0, vt0.c0, rt0.c2, vt0.c2, vt0.c1, rt0.c1 FROM rt0 INNER JOIN vt0 ON (((((- (vt0.c2)))AND(CAST(vt0.c2 AS TEXT))))OR(CAST(NULL AS REAL))) GROUP BY rt0.c0, vt0.c0, rt0.c2, vt0.c2, vt0.c1, rt0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c0, vt0.c0, rt0.c2, vt0.c2, vt0.c1, rt0.c1 FROM rt0 INNER JOIN vt0 ON (((((- (vt0.c2)))AND(CAST(vt0.c2 AS TEXT))))OR(CAST(NULL AS REAL))) GROUP BY rt0.c0, vt0.c0, rt0.c2, vt0.c2, vt0.c1, rt0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c0, vt0.c0, rt0.c2, vt0.c2, vt0.c1, rt0.c1 FROM rt0 INNER JOIN vt0 ON (((((- (vt0.c2)))AND(CAST(vt0.c2 AS TEXT))))OR(CAST(NULL AS REAL))) GROUP BY rt0.c0, vt0.c0, rt0.c2, vt0.c2, vt0.c1, rt0.c1;
SELECT ALL rt0.c0, vt0.c0, rt0.c2, vt0.c2, vt0.c1, rt0.c1 FROM rt0 INNER JOIN vt0 ON (((((- (vt0.c2)))AND(CAST(vt0.c2 AS TEXT))))OR(CAST(NULL AS REAL))) GROUP BY rt0.c0, vt0.c0, rt0.c2, vt0.c2, vt0.c1, rt0.c1 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c0, vt0.c0, rt0.c2, vt0.c2, vt0.c1, rt0.c1 FROM rt0 INNER JOIN vt0 ON (((((- (vt0.c2)))AND(CAST(vt0.c2 AS TEXT))))OR(CAST(NULL AS REAL))) GROUP BY rt0.c0, vt0.c0, rt0.c2, vt0.c2, vt0.c1, rt0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c0, vt0.c0, rt0.c2, vt0.c2, vt0.c1, rt0.c1 FROM rt0 INNER JOIN vt0 ON (((((- (vt0.c2)))AND(CAST(vt0.c2 AS TEXT))))OR(CAST(NULL AS REAL))) GROUP BY rt0.c0, vt0.c0, rt0.c2, vt0.c2, vt0.c1, rt0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c0, vt0.c0, rt0.c2, vt0.c2, vt0.c1, rt0.c1 FROM rt0 INNER JOIN vt0 ON (((((- (vt0.c2)))AND(CAST(vt0.c2 AS TEXT))))OR(CAST(NULL AS REAL))) GROUP BY rt0.c0, vt0.c0, rt0.c2, vt0.c2, vt0.c1, rt0.c1;
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE (CAST(((((rt0.c1)OR(rt0.c2)))AND(rt0.c1)) AS REAL)) UNION ALL SELECT * FROM rt0 WHERE ((NOT (CAST(((((rt0.c1)OR(rt0.c2)))AND(rt0.c1)) AS REAL)))) UNION ALL SELECT * FROM rt0 WHERE (((CAST(((((rt0.c1)OR(rt0.c2)))AND(rt0.c1)) AS REAL)) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT rt0.c0, vt0.c2, rt0.c1, rt0.c2, vt0.c0, vt0.c1 FROM vt0, rt0;
SELECT DISTINCT rt0.c0, vt0.c2, rt0.c1, rt0.c2, vt0.c0, vt0.c1 FROM vt0, rt0 WHERE ((((('')OR(rt0.c2)))IS NOT(LIKELIHOOD(DISTINCT rt0.c0, 0.3043314648379305)))) UNION SELECT DISTINCT rt0.c0, vt0.c2, rt0.c1, rt0.c2, vt0.c0, vt0.c1 FROM vt0, rt0 WHERE ((NOT ((((('')OR(rt0.c2)))IS NOT(LIKELIHOOD(DISTINCT rt0.c0, 0.3043314648379305)))))) UNION SELECT DISTINCT rt0.c0, vt0.c2, rt0.c1, rt0.c2, vt0.c0, vt0.c1 FROM vt0, rt0 WHERE ((((((('')OR(rt0.c2)))IS NOT(LIKELIHOOD(DISTINCT rt0.c0, 0.3043314648379305)))) ISNULL));
SELECT DISTINCT rt0.c0, vt0.c2, rt0.c1, rt0.c2, vt0.c0, vt0.c1 FROM vt0, rt0;
SELECT rt0.c2, vt0.c2, rt0.c0, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c2, vt0.c2, rt0.c0, vt0.c0;
SELECT ALL rt0.c2, vt0.c2, rt0.c0, vt0.c0 FROM rt0, vt0 WHERE (((((((rt0.c1)OR(vt0.c2)))AND(0.9361049868244042)))||(COALESCE(DISTINCT rt0.c1, rt0.c1)))) GROUP BY rt0.c2, vt0.c2, rt0.c0, vt0.c0 UNION SELECT ALL rt0.c2, vt0.c2, rt0.c0, vt0.c0 FROM rt0, vt0 WHERE ((NOT (((((((rt0.c1)OR(vt0.c2)))AND(0.9361049868244042)))||(COALESCE(DISTINCT rt0.c1, rt0.c1)))))) GROUP BY rt0.c2, vt0.c2, rt0.c0, vt0.c0 UNION SELECT ALL rt0.c2, vt0.c2, rt0.c0, vt0.c0 FROM rt0, vt0 WHERE (((((((((rt0.c1)OR(vt0.c2)))AND(0.9361049868244042)))||(COALESCE(DISTINCT rt0.c1, rt0.c1)))) ISNULL)) GROUP BY rt0.c2, vt0.c2, rt0.c0, vt0.c0;
SELECT rt0.c2, vt0.c2, rt0.c0, vt0.c0 FROM rt0, vt0 GROUP BY rt0.c2, vt0.c2, rt0.c0, vt0.c0;
SELECT ALL rt0.c2, vt0.c2, rt0.c0, rt0.c1 FROM vt0, rt0 GROUP BY rt0.c2, vt0.c2, rt0.c0, rt0.c1;
SELECT rt0.c2, vt0.c2, rt0.c0, rt0.c1 FROM vt0, rt0 GROUP BY rt0.c2, vt0.c2, rt0.c0, rt0.c1 HAVING MIN(CAST(COUNT(rt0.c1) AS REAL)) UNION ALL SELECT ALL rt0.c2, vt0.c2, rt0.c0, rt0.c1 FROM vt0, rt0 GROUP BY rt0.c2, vt0.c2, rt0.c0, rt0.c1 HAVING (NOT (MIN(CAST(COUNT(rt0.c1) AS REAL)))) UNION ALL SELECT ALL rt0.c2, vt0.c2, rt0.c0, rt0.c1 FROM vt0, rt0 GROUP BY rt0.c2, vt0.c2, rt0.c0, rt0.c1 HAVING ((MIN(CAST(COUNT(rt0.c1) AS REAL))) ISNULL);
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE (((((((((((((((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0)))OR(json_type(rt0.c1))))OR((((rt0.c1, rt0.c1, '0.3848565475824679'))<=((rt0.c1, rt0.c2, rt0.c2))))))OR(((rt0.c2) NOT NULL))))AND(CAST(rt0.c1 AS NUMERIC))))AND(rt0.c1)))OR(rt0.c1 COLLATE BINARY))) UNION ALL SELECT * FROM rt0 WHERE ((NOT (((((((((((((((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0)))OR(json_type(rt0.c1))))OR((((rt0.c1, rt0.c1, '0.3848565475824679'))<=((rt0.c1, rt0.c2, rt0.c2))))))OR(((rt0.c2) NOT NULL))))AND(CAST(rt0.c1 AS NUMERIC))))AND(rt0.c1)))OR(rt0.c1 COLLATE BINARY))))) UNION ALL SELECT ALL * FROM rt0 WHERE (((((((((((((((((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0)))OR(json_type(rt0.c1))))OR((((rt0.c1, rt0.c1, '0.3848565475824679'))<=((rt0.c1, rt0.c2, rt0.c2))))))OR(((rt0.c2) NOT NULL))))AND(CAST(rt0.c1 AS NUMERIC))))AND(rt0.c1)))OR(rt0.c1 COLLATE BINARY))) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (vt0.c0) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (vt0.c0))) UNION SELECT DISTINCT * FROM vt0 WHERE (((vt0.c0) ISNULL));
SELECT DISTINCT * FROM vt0;
