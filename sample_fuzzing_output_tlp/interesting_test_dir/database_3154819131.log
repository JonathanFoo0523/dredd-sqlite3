-- Time: 2024/06/08 22:12:24
-- Database: database31
-- Database version: 3.40.0
-- seed value: 3154819131
PRAGMA cache_size = 50000; -- 11ms;
PRAGMA temp_store=MEMORY; -- 1ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA case_sensitive_like=ON; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts5(c0, c1, c2 UNINDEXED, detail=full); -- 1ms;
CREATE VIRTUAL TABLE vt1 USING fts4(c0 UNINDEXED, matchinfo=fts3); -- 1ms;
INSERT OR ABORT INTO vt0(c2, c1, c0) VALUES (x'', x'52f3', NULL), (0.5016918912484903, NULL, 726242993), ('AF', x'', 0.2599157026377227); -- 0ms;
UPDATE vt1 SET c0=x''; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 8); -- 0ms;
UPDATE OR FAIL vt1 SET (c0, c0, c0)=(x'9a48', x'', 0.5593148752098285) WHERE 0.9265490966734896; -- 0ms;
UPDATE OR ROLLBACK vt1 SET c0=x'bbc6'; -- 0ms;
UPDATE vt0 SET c1='be'; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
END; -- 0ms;
CREATE TEMP VIEW v0(c0) AS SELECT (((vt0.c0 IN ())) IS TRUE) FROM vt1 WHERE (CAST(x'' AS TEXT) COLLATE BINARY) LIMIT 726242993 OFFSET 726242993; -- 1ms;
COMMIT TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO vt0(c2) VALUES (0.5103548672556982); -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
UPDATE OR IGNORE vt0 SET c1=0.9326331461410956, c1=NULL WHERE ((CAST(vt0.c0 AS TEXT)) BETWEEN (((((vt0.c2)AND(vt0.c2)))OR(vt0.c0))) AND ((((vt0.c0))>=((vt0.c2))))); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('usermerge', 13); -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=2'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=8'); -- 0ms;
INSERT INTO vt1(vt1) VALUES('automerge=8'); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
CREATE VIRTUAL TABLE vt2 USING fts4(c0); -- 0ms;
UPDATE OR IGNORE vt2 SET c0=NULL; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
INSERT INTO vt2(vt2, rank) VALUES('pgsz', '44015'); -- 0ms;
INSERT INTO vt1(vt1) VALUES('rebuild'); -- 0ms;
UPDATE OR ABORT vt2 SET (c0)=(NULL); -- 1ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 1ms;
END; -- 0ms;
INSERT INTO vt2(vt2, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt1(vt1) VALUES('integrity-check'); -- 0ms;
VACUUM main; -- 1ms;
INSERT INTO vt1(vt1, rank) VALUES('usermerge', 9); -- 0ms;
INSERT INTO vt1(vt1) VALUES('optimize'); -- 0ms;
VACUUM; -- 1ms;
REINDEX BINARY; -- 1ms;
ANALYZE sqlite_master; -- 1ms;
UPDATE vt1 SET c0='726242993' WHERE CASE WHEN NULL THEN CASE WHEN '1733746070' THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END ELSE x'' END; -- 0ms;
INSERT OR IGNORE INTO vt1 VALUES (0.3087905489515478); -- 0ms;
REINDEX; -- 0ms;
UPDATE OR IGNORE vt1 SET c0=x''; -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=15'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
INSERT INTO vt2(vt2, rank) VALUES('merge', 1733746070);\n; -- 0ms;
INSERT INTO vt2(vt2, rank) VALUES('merge', -1727256285);\n; -- 0ms;
INSERT INTO vt2(vt2, rank) VALUES('usermerge', 10); -- 0ms;
INSERT INTO vt2(vt2, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('usermerge', 13); -- 0ms;
INSERT INTO vt2(vt2, rank) VALUES('pgsz', '9955'); -- 0ms;
INSERT INTO vt2(vt2, rank) VALUES('pgsz', '35765'); -- 0ms;
INSERT INTO vt2(vt2, rank) VALUES('crisismerge', 1765284848); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('usermerge', 8); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
UPDATE vt2 SET c0='-1365027518', c0='Tqxgឱmno?' WHERE LOWER(CASE WHEN vt2.c0 THEN vt2.c0 WHEN vt2.c0 THEN vt2.c0 WHEN vt2.c0 THEN vt2.c0 END); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 7); -- 1ms;
UPDATE OR IGNORE vt1 SET c0=x'' WHERE (~ (vt1.c0)) COLLATE NOCASE; -- 0ms;
INSERT OR ROLLBACK INTO vt2(c0) VALUES (NULL); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 585759726); -- 0ms;
REINDEX; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR FAIL INTO vt0(c2, c1) VALUES (NULL, -1.727256285E9); -- 0ms;
UPDATE OR FAIL vt1 SET c0='-1365027518' WHERE x'eef1'; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
UPDATE OR IGNORE vt1 SET c0=NULL, c0=0.2599157026377227; -- 0ms;
ANALYZE v0; -- 1ms;
UPDATE vt1 SET c0=1.73374607E9; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 1ms;
UPDATE vt2 SET (c0)=('9\r'); -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
INSERT INTO vt2(vt2) VALUES('optimize'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 15); -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree_i32(c0, c1, c2); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 13); -- 1ms;
UPDATE vt2 SET (c0, c0, c0)=(-1727256285, NULL, x'') WHERE (((+ (vt2.c0)))>(((vt2.c0)=(vt2.c0)))); -- 0ms;
ANALYZE temp; -- 0ms;
INSERT INTO vt2(vt2, rank) VALUES('pgsz', '4469'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('usermerge', 6); -- 0ms;
INSERT INTO vt2(vt2, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt2(vt2) VALUES('integrity-check'); -- 0ms;
UPDATE vt2 SET (c0, c0)=('-1727256285', '-1867373437'); -- 1ms;
UPDATE vt2 SET (c0, c0, c0)=(0X15d470f1, 0.4344741554659065, '') WHERE ((((vt2.c0)OR(vt2.c0)))OR(vt2.c0)) COLLATE RTRIM; -- 0ms;
INSERT OR REPLACE INTO vt2 VALUES (x''); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '35957'); -- 1ms;
INSERT INTO vt2(vt2, rank) VALUES('crisismerge', 934383574); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
UPDATE OR ROLLBACK vt1 SET (c0)=(x''); -- 1ms;
INSERT INTO vt1(vt1) VALUES('optimize'); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
ANALYZE temp; -- 0ms;
INSERT INTO vt2(vt2) VALUES('integrity-check'); -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
ANALYZE main; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt2(vt2, rank) VALUES('usermerge', 11); -- 0ms;
INSERT INTO vt2(vt2) VALUES('merge=1159984227,4');\n; -- 1ms;
END; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 212137834); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('crisismerge', 403892966); -- 0ms;
INSERT INTO vt2(vt2, rank) VALUES('usermerge', 14); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 1ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
UPDATE vt2 SET c0=0.9163465795617145; -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
END TRANSACTION; -- 0ms;
UPDATE vt2 SET (c0)=('{j') WHERE CASE WHEN CASE vt2.c0  WHEN vt2.c0 THEN vt2.c0 END THEN load_extension(vt2.c0) ELSE x'' END; -- 0ms;
UPDATE vt0 SET (c1, c2, c1)=('-1365027518', NULL, x''); -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
BEGIN  TRANSACTION; -- 1ms;
INSERT OR ABORT INTO vt0(c0) VALUES (0.01825420215359519); -- 0ms;
UPDATE OR IGNORE vt0 SET c1=0.7587228003844076; -- 0ms;
ANALYZE main; -- 0ms;
UPDATE OR IGNORE vt2 SET (c0)=('-945510229'); -- 0ms;
REINDEX  vt2; -- 0ms;
END; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT ALL v0.c0, vt1.c0 FROM vt1, v0;
SELECT v0.c0, vt1.c0 FROM vt1, v0 WHERE (COALESCE(DISTINCT ((vt1.c0) ISNULL), ((v0.c0) NOTNULL), CAST(v0.c0 AS REAL), NULL)) UNION ALL SELECT ALL v0.c0, vt1.c0 FROM vt1, v0 WHERE ((NOT (COALESCE(DISTINCT ((vt1.c0) ISNULL), ((v0.c0) NOTNULL), CAST(v0.c0 AS REAL), NULL)))) UNION ALL SELECT ALL v0.c0, vt1.c0 FROM vt1, v0 WHERE (((COALESCE(DISTINCT ((vt1.c0) ISNULL), ((v0.c0) NOTNULL), CAST(v0.c0 AS REAL), NULL)) ISNULL));
SELECT ALL v0.c0, vt1.c0 FROM vt1, v0;
SELECT DISTINCT v0.c0, vt0.c1, vt0.c0, vt0.c2, vt1.c0, vt2.c0 FROM vt2, vt1, vt0, v0;
SELECT DISTINCT v0.c0, vt0.c1, vt0.c0, vt0.c2, vt1.c0, vt2.c0 FROM vt2, vt1, vt0, v0 WHERE (0.5507425529213771) UNION SELECT DISTINCT v0.c0, vt0.c1, vt0.c0, vt0.c2, vt1.c0, vt2.c0 FROM vt2, vt1, vt0, v0 WHERE ((NOT (0.5507425529213771))) UNION SELECT DISTINCT v0.c0, vt0.c1, vt0.c0, vt0.c2, vt1.c0, vt2.c0 FROM vt2, vt1, vt0, v0 WHERE (((0.5507425529213771) ISNULL));
SELECT DISTINCT v0.c0, vt0.c1, vt0.c0, vt0.c2, vt1.c0, vt2.c0 FROM vt2, vt1, vt0, v0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE ((NOT (vt1.c0)) COLLATE RTRIM) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT ((NOT (vt1.c0)) COLLATE RTRIM))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((((NOT (vt1.c0)) COLLATE RTRIM) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING ((x'' IN ()) IN (vt2.c0)) UNION ALL SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING (NOT (((x'' IN ()) IN (vt2.c0)))) UNION ALL SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING ((((x'' IN ()) IN (vt2.c0))) ISNULL);
SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING ((x'' IN ()) IN (vt2.c0)) UNION ALL SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING (NOT (((x'' IN ()) IN (vt2.c0)))) UNION ALL SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING ((((x'' IN ()) IN (vt2.c0))) ISNULL);
SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT ALL MIN(vt1.c0) FROM vt1 NOT INDEXED, vt2, vt0;
SELECT ALL * FROM vt0, vt1, vt2 LEFT OUTER JOIN v0 ON (((((vt1.c0 IN ()))AND(LOWER(DISTINCT vt0.c1))))AND(vt2.c0 COLLATE BINARY));
SELECT ALL * FROM vt0, vt1, vt2 LEFT OUTER JOIN v0 ON (((((vt1.c0 IN ()))AND(LOWER(DISTINCT vt0.c1))))AND(vt2.c0 COLLATE BINARY)) WHERE ((vt1.c0 COLLATE NOCASE IN ())) UNION ALL SELECT * FROM vt0, vt1, vt2 LEFT OUTER JOIN v0 ON (((((vt1.c0 IN ()))AND(LOWER(DISTINCT vt0.c1))))AND(vt2.c0 COLLATE BINARY)) WHERE ((NOT ((vt1.c0 COLLATE NOCASE IN ())))) UNION ALL SELECT ALL * FROM vt0, vt1, vt2 LEFT OUTER JOIN v0 ON (((((vt1.c0 IN ()))AND(LOWER(DISTINCT vt0.c1))))AND(vt2.c0 COLLATE BINARY)) WHERE ((((vt1.c0 COLLATE NOCASE IN ())) ISNULL));
SELECT ALL * FROM vt0, vt1, vt2 LEFT OUTER JOIN v0 ON (((((vt1.c0 IN ()))AND(LOWER(DISTINCT vt0.c1))))AND(vt2.c0 COLLATE BINARY));
SELECT DISTINCT vt0.c0, vt0.c1, vt0.c2, vt2.c0, vt1.c0 FROM vt1, vt2, vt0;
SELECT DISTINCT vt0.c0, vt0.c1, vt0.c2, vt2.c0, vt1.c0 FROM vt1, vt2 NOT INDEXED, vt0 WHERE (vt2.c0) UNION SELECT DISTINCT vt0.c0, vt0.c1, vt0.c2, vt2.c0, vt1.c0 FROM vt1, vt2, vt0 WHERE ((NOT (vt2.c0))) UNION SELECT DISTINCT vt0.c0, vt0.c1, vt0.c2, vt2.c0, vt1.c0 FROM vt1, vt2, vt0 WHERE (((vt2.c0) ISNULL));
SELECT DISTINCT vt0.c0, vt0.c1, vt0.c2, vt2.c0, vt1.c0 FROM vt1, vt2, vt0;
SELECT ALL vt0.c1, vt0.c2 FROM v0, vt0, vt2, vt1 GROUP BY vt0.c1, vt0.c2;
SELECT vt0.c1, vt0.c2 FROM v0, vt0, vt2, vt1 WHERE (((((v0.c0)IS NOT(NULL))) ISNULL)) GROUP BY vt0.c1, vt0.c2 UNION SELECT vt0.c1, vt0.c2 FROM v0, vt0, vt2, vt1 WHERE ((NOT (((((v0.c0)IS NOT(NULL))) ISNULL)))) GROUP BY vt0.c1, vt0.c2 UNION SELECT ALL vt0.c1, vt0.c2 FROM v0, vt0, vt2, vt1 WHERE (((((((v0.c0)IS NOT(NULL))) ISNULL)) ISNULL)) GROUP BY vt0.c1, vt0.c2;
SELECT ALL vt0.c1, vt0.c2 FROM v0, vt0, vt2, vt1 GROUP BY vt0.c1, vt0.c2;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING MIN(SUM('-51980816')) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (MIN(SUM('-51980816')))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((MIN(SUM('-51980816'))) ISNULL);
SELECT vt1.c0 FROM vt2 LEFT OUTER JOIN vt0 ON ((((((((vt2.c0)OR(v0.c0)))AND(vt0.c2)))OR(((vt0.c2) NOTNULL))))AND(vt0.c1 COLLATE RTRIM)) LEFT OUTER JOIN vt1 ON CAST(CAST(vt2.c0 AS REAL) AS REAL) RIGHT OUTER JOIN v0 ON CASE (((0.11262173574036638)) BETWEEN ((vt2.c0)) AND ((vt1.c0)))  WHEN CASE WHEN '-1365027518' THEN vt0.c1 ELSE vt0.c1 END THEN 0.5507425529213771 END;
SELECT DISTINCT vt2.c0, v0.c0, vt1.c0 FROM vt1, v0, vt0 NOT INDEXED, vt2;
SELECT DISTINCT vt2.c0, v0.c0, vt1.c0 FROM vt1, v0, vt0, vt2 WHERE (vt0.c2) UNION SELECT DISTINCT vt2.c0, v0.c0, vt1.c0 FROM vt1, v0, vt0, vt2 WHERE ((NOT (vt0.c2))) UNION SELECT DISTINCT vt2.c0, v0.c0, vt1.c0 FROM vt1, v0, vt0, vt2 WHERE (((vt0.c2) ISNULL));
SELECT DISTINCT vt2.c0, v0.c0, vt1.c0 FROM vt1, v0, vt0 NOT INDEXED, vt2;
SELECT vt2.c0 FROM vt2 INNER JOIN vt1 ON (((vt0.c1)) NOT BETWEEN ((-126315321)) AND ((vt2.c0 COLLATE BINARY))) CROSS JOIN vt0 ON (((vt2.c0)) BETWEEN ((((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt2.c0)))) AND ((CASE WHEN vt2.c0 THEN vt2.c0 END))) GROUP BY vt2.c0;
SELECT ALL vt2.c0 FROM vt2 INNER JOIN vt1 ON (((vt0.c1)) NOT BETWEEN ((-126315321)) AND ((vt2.c0 COLLATE BINARY))) CROSS JOIN vt0 ON (((vt2.c0)) BETWEEN ((((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt2.c0)))) AND ((CASE WHEN vt2.c0 THEN vt2.c0 END))) WHERE ((UPPER(vt0.c0) IN (INSTR(vt0.c2, 0Xffffffffb4ce73eb)))) GROUP BY vt2.c0 UNION SELECT ALL vt2.c0 FROM vt2 INNER JOIN vt1 ON (((vt0.c1)) NOT BETWEEN ((-126315321)) AND ((vt2.c0 COLLATE BINARY))) CROSS JOIN vt0 ON (((vt2.c0)) BETWEEN ((((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt2.c0)))) AND ((CASE WHEN vt2.c0 THEN vt2.c0 END))) WHERE ((NOT ((UPPER(vt0.c0) IN (INSTR(vt0.c2, 0Xffffffffb4ce73eb)))))) GROUP BY vt2.c0 UNION SELECT ALL vt2.c0 FROM vt2 INNER JOIN vt1 ON (((vt0.c1)) NOT BETWEEN ((-126315321)) AND ((vt2.c0 COLLATE BINARY))) CROSS JOIN vt0 ON (((vt2.c0)) BETWEEN ((((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt2.c0)))) AND ((CASE WHEN vt2.c0 THEN vt2.c0 END))) WHERE ((((UPPER(vt0.c0) IN (INSTR(vt0.c2, 0xffffffffb4ce73eb)))) ISNULL)) GROUP BY vt2.c0;
SELECT vt2.c0 FROM vt2 INNER JOIN vt1 ON (((vt0.c1)) NOT BETWEEN ((-126315321)) AND ((vt2.c0 COLLATE BINARY))) CROSS JOIN vt0 ON (((vt2.c0)) BETWEEN ((((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt2.c0)))) AND ((CASE WHEN vt2.c0 THEN vt2.c0 END))) GROUP BY vt2.c0;
SELECT ALL vt2.c0, vt0.c2 FROM vt0, v0 FULL OUTER JOIN vt1 ON (((- (vt2.c0)))>>(((vt0.c2)<=(vt1.c0)))) FULL OUTER JOIN vt2 ON ((((vt0.c1)!=(vt1.c0))) ISNULL) GROUP BY vt2.c0, vt0.c2;
SELECT ALL vt0.c2 FROM vt0, v0;
SELECT ALL vt0.c2 FROM vt0, v0 WHERE (CAST(((vt0.c1) NOTNULL) AS TEXT)) UNION ALL SELECT ALL vt0.c2 FROM vt0, v0 WHERE ((NOT (CAST(((vt0.c1) NOTNULL) AS TEXT)))) UNION ALL SELECT vt0.c2 FROM vt0, v0 WHERE (((CAST(((vt0.c1) NOTNULL) AS TEXT)) ISNULL));
SELECT ALL vt0.c2 FROM vt0, v0;
SELECT DISTINCT * FROM vt2, v0, vt1;
SELECT DISTINCT * FROM vt2, v0, vt1 WHERE ((((((((((vt2.c0)AND(v0.c0)))OR(v0.c0)))OR(0.9039740500510874)))OR(vt1.c0)) IN ())) UNION SELECT DISTINCT * FROM vt2, v0, vt1 WHERE ((NOT ((((((((((vt2.c0)AND(v0.c0)))OR(v0.c0)))OR(0.9039740500510874)))OR(vt1.c0)) IN ())))) UNION SELECT DISTINCT * FROM vt2, v0, vt1 WHERE ((((((((((((vt2.c0)AND(v0.c0)))OR(v0.c0)))OR(0.9039740500510874)))OR(vt1.c0)) IN ())) ISNULL));
SELECT DISTINCT * FROM vt2, v0, vt1;
SELECT ALL vt2.c0, vt0.c2 FROM vt0, vt2, v0, vt1 GROUP BY vt2.c0, vt0.c2;
SELECT ALL vt2.c0, vt0.c2 FROM vt0, vt2, v0, vt1 WHERE (CAST(NULL AS REAL)) GROUP BY vt2.c0, vt0.c2 UNION SELECT vt2.c0, vt0.c2 FROM vt0, vt2, v0, vt1 WHERE ((NOT (CAST(NULL AS REAL)))) GROUP BY vt2.c0, vt0.c2 UNION SELECT vt2.c0, vt0.c2 FROM vt0, vt2, v0, vt1 WHERE (((CAST(NULL AS REAL)) ISNULL)) GROUP BY vt2.c0, vt0.c2;
SELECT ALL vt2.c0, vt0.c2 FROM vt0, vt2, v0, vt1 GROUP BY vt2.c0, vt0.c2;
SELECT vt0.c2, v0.c0, vt0.c1 FROM v0 RIGHT OUTER JOIN vt0 ON CAST(CASE WHEN 'WW*z' THEN vt0.c0 ELSE vt0.c2 END AS NUMERIC) GROUP BY vt0.c2, v0.c0, vt0.c1;
SELECT vt0.c2, v0.c0, vt0.c1 FROM v0 RIGHT OUTER JOIN vt0 ON CAST(CASE WHEN 'WW*z' THEN vt0.c0 ELSE vt0.c2 END AS NUMERIC) GROUP BY vt0.c2, v0.c0, vt0.c1 HAVING ((((TOTAL(vt0.c2))OR((vt0.c2 IN ()))))OR(MIN(NULL))) UNION ALL SELECT vt0.c2, v0.c0, vt0.c1 FROM v0 RIGHT OUTER JOIN vt0 ON CAST(CASE WHEN 'WW*z' THEN vt0.c0 ELSE vt0.c2 END AS NUMERIC) GROUP BY vt0.c2, v0.c0, vt0.c1 HAVING (NOT (((((TOTAL(vt0.c2))OR((vt0.c2 IN ()))))OR(MIN(NULL))))) UNION ALL SELECT ALL vt0.c2, v0.c0, vt0.c1 FROM v0 RIGHT OUTER JOIN vt0 ON CAST(CASE WHEN 'WW*z' THEN vt0.c0 ELSE vt0.c2 END AS NUMERIC) GROUP BY vt0.c2, v0.c0, vt0.c1 HAVING ((((((TOTAL(vt0.c2))OR((vt0.c2 IN ()))))OR(MIN(NULL)))) ISNULL);
SELECT vt0.c2, v0.c0, vt0.c1 FROM v0 RIGHT OUTER JOIN vt0 ON CAST(CASE WHEN 'WW*z' THEN vt0.c0 ELSE vt0.c2 END AS NUMERIC) GROUP BY vt0.c2, v0.c0, vt0.c1;
SELECT vt0.c2, v0.c0, vt0.c1 FROM v0 RIGHT OUTER JOIN vt0 ON CAST(CASE WHEN 'WW*z' THEN vt0.c0 ELSE vt0.c2 END AS NUMERIC) GROUP BY vt0.c2, v0.c0, vt0.c1 HAVING ((((TOTAL(vt0.c2))OR((vt0.c2 IN ()))))OR(MIN(NULL))) UNION ALL SELECT vt0.c2, v0.c0, vt0.c1 FROM v0 RIGHT OUTER JOIN vt0 ON CAST(CASE WHEN 'WW*z' THEN vt0.c0 ELSE vt0.c2 END AS NUMERIC) GROUP BY vt0.c2, v0.c0, vt0.c1 HAVING (NOT (((((TOTAL(vt0.c2))OR((vt0.c2 IN ()))))OR(MIN(NULL))))) UNION ALL SELECT ALL vt0.c2, v0.c0, vt0.c1 FROM v0 RIGHT OUTER JOIN vt0 ON CAST(CASE WHEN 'WW*z' THEN vt0.c0 ELSE vt0.c2 END AS NUMERIC) GROUP BY vt0.c2, v0.c0, vt0.c1 HAVING ((((((TOTAL(vt0.c2))OR((vt0.c2 IN ()))))OR(MIN(NULL)))) ISNULL);
SELECT vt0.c2, v0.c0, vt0.c1 FROM v0 RIGHT OUTER JOIN vt0 ON CAST(CASE WHEN 'WW*z' THEN vt0.c0 ELSE vt0.c2 END AS NUMERIC) GROUP BY vt0.c2, v0.c0, vt0.c1;
SELECT ALL * FROM v0, vt2;
SELECT ALL * FROM v0, vt2 WHERE (CAST(((vt2.c0) NOT NULL) AS BLOB)) UNION ALL SELECT ALL * FROM v0, vt2 WHERE ((NOT (CAST(((vt2.c0) NOT NULL) AS BLOB)))) UNION ALL SELECT ALL * FROM v0, vt2 WHERE (((CAST(((vt2.c0) NOT NULL) AS BLOB)) ISNULL));
SELECT ALL * FROM v0, vt2;
SELECT DISTINCT * FROM vt1, v0, vt0;
SELECT DISTINCT * FROM vt1, v0, vt0 WHERE (CASE WHEN CASE '621045989'  WHEN vt0.c0 THEN vt0.c0 END THEN vt0.c0 COLLATE RTRIM END) UNION SELECT DISTINCT * FROM vt1, v0, vt0 WHERE ((NOT (CASE WHEN CASE '621045989'  WHEN vt0.c0 THEN vt0.c0 END THEN vt0.c0 COLLATE RTRIM END))) UNION SELECT DISTINCT * FROM vt1, v0, vt0 WHERE (((CASE WHEN CASE '621045989'  WHEN vt0.c0 THEN vt0.c0 END THEN vt0.c0 COLLATE RTRIM END) ISNULL));
SELECT DISTINCT * FROM vt1, v0, vt0;
SELECT ALL vt0.c2, v0.c0, vt0.c1, vt1.c0, vt2.c0, vt0.c0 FROM vt2, v0, vt0, vt1 GROUP BY vt0.c2, v0.c0, vt0.c1, vt1.c0, vt2.c0, vt0.c0;
SELECT vt0.c2, v0.c0, vt0.c1, vt1.c0, vt2.c0, vt0.c0 FROM vt2, v0, vt0, vt1 WHERE ((((TRIM(vt2.c0)))<=((CASE WHEN vt2.c0 THEN vt0.c2 END)))) GROUP BY vt0.c2, v0.c0, vt0.c1, vt1.c0, vt2.c0, vt0.c0 UNION SELECT vt0.c2, v0.c0, vt0.c1, vt1.c0, vt2.c0, vt0.c0 FROM vt2, v0, vt0, vt1 WHERE ((NOT ((((TRIM(vt2.c0)))<=((CASE WHEN vt2.c0 THEN vt0.c2 END)))))) GROUP BY vt0.c2, v0.c0, vt0.c1, vt1.c0, vt2.c0, vt0.c0 UNION SELECT vt0.c2, v0.c0, vt0.c1, vt1.c0, vt2.c0, vt0.c0 FROM vt2, v0, vt0, vt1 WHERE ((((((TRIM(vt2.c0)))<=((CASE WHEN vt2.c0 THEN vt0.c2 END)))) ISNULL)) GROUP BY vt0.c2, v0.c0, vt0.c1, vt1.c0, vt2.c0, vt0.c0;
SELECT ALL vt0.c2, v0.c0, vt0.c1, vt1.c0, vt2.c0, vt0.c0 FROM vt2, v0, vt0, vt1 GROUP BY vt0.c2, v0.c0, vt0.c1, vt1.c0, vt2.c0, vt0.c0;
SELECT ALL vt2.c0 FROM vt1, vt2 GROUP BY vt2.c0;
SELECT ALL vt2.c0 FROM vt1, vt2 GROUP BY vt2.c0 HAVING ((((AVG(x''))OR(highlight(TOTAL(MAX(MIN(MAX(vt2.c0)))), SUM(vt2.c0), GROUP_CONCAT(vt2.c0), vt1.c0))))OR(MIN(COUNT(*)))) UNION ALL SELECT vt2.c0 FROM vt1, vt2 GROUP BY vt2.c0 HAVING (NOT (((((AVG(x''))OR(highlight(TOTAL(MAX(MIN(MAX(vt2.c0)))), SUM(vt2.c0), GROUP_CONCAT(vt2.c0), vt1.c0))))OR(MIN(COUNT(*)))))) UNION ALL SELECT vt2.c0 FROM vt1, vt2 GROUP BY vt2.c0 HAVING ((((((AVG(x''))OR(highlight(TOTAL(MAX(MIN(MAX(vt2.c0)))), SUM(vt2.c0), GROUP_CONCAT(vt2.c0), vt1.c0))))OR(MIN(COUNT(*))))) ISNULL);
SELECT ALL vt1.c0, vt2.c0 FROM vt2, v0, vt1;
SELECT vt1.c0, vt2.c0 FROM vt2, v0, vt1 WHERE (DATETIME((((vt2.c0, v0.c0, vt1.c0)) NOT BETWEEN ((vt2.c0, v0.c0, v0.c0)) AND ((vt1.c0, v0.c0, vt2.c0))), (((vt1.c0, v0.c0, vt1.c0))<>((v0.c0, vt2.c0, vt2.c0))), vt2.c0)) UNION ALL SELECT ALL vt1.c0, vt2.c0 FROM vt2, v0, vt1 WHERE ((NOT (DATETIME((((vt2.c0, v0.c0, vt1.c0)) NOT BETWEEN ((vt2.c0, v0.c0, v0.c0)) AND ((vt1.c0, v0.c0, vt2.c0))), (((vt1.c0, v0.c0, vt1.c0))<>((v0.c0, vt2.c0, vt2.c0))), vt2.c0)))) UNION ALL SELECT vt1.c0, vt2.c0 FROM vt2, v0, vt1 WHERE (((DATETIME((((vt2.c0, v0.c0, vt1.c0)) NOT BETWEEN ((vt2.c0, v0.c0, v0.c0)) AND ((vt1.c0, v0.c0, vt2.c0))), (((vt1.c0, v0.c0, vt1.c0))!=((v0.c0, vt2.c0, vt2.c0))), vt2.c0)) ISNULL));
SELECT ALL vt1.c0, vt2.c0 FROM vt2, v0, vt1;
SELECT DISTINCT vt2.c0, vt0.c2, vt1.c0 FROM vt2 NOT INDEXED, v0 INNER JOIN vt1 ON CAST(vt0.c2 AS NUMERIC) COLLATE BINARY COLLATE RTRIM RIGHT OUTER JOIN vt0 ON (- (vt0.c0 COLLATE RTRIM));
SELECT ALL vt0.c0 FROM vt0 LEFT OUTER JOIN v0 ON (((vt0.c2 IN ()))|(CAST(vt0.c1 AS REAL))) LEFT OUTER JOIN vt1 ON CAST(vt0.c2 AS INTEGER) COLLATE BINARY GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 LEFT OUTER JOIN v0 ON (((vt0.c2 IN ()))|(CAST(vt0.c1 AS REAL))) LEFT OUTER JOIN vt1 ON CAST(vt0.c2 AS INTEGER) COLLATE BINARY WHERE (NULL) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 LEFT OUTER JOIN v0 ON (((vt0.c2 IN ()))|(CAST(vt0.c1 AS REAL))) LEFT OUTER JOIN vt1 ON CAST(vt0.c2 AS INTEGER) COLLATE BINARY WHERE ((NOT (NULL))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 LEFT OUTER JOIN v0 ON (((vt0.c2 IN ()))|(CAST(vt0.c1 AS REAL))) LEFT OUTER JOIN vt1 ON CAST(vt0.c2 AS INTEGER) COLLATE BINARY WHERE (((NULL) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 LEFT OUTER JOIN v0 ON (((vt0.c2 IN ()))|(CAST(vt0.c1 AS REAL))) LEFT OUTER JOIN vt1 ON CAST(vt0.c2 AS INTEGER) COLLATE BINARY GROUP BY vt0.c0;
SELECT vt2.c0, vt0.c1 FROM vt1, vt2, vt0, v0 GROUP BY vt2.c0, vt0.c1;
SELECT vt2.c0, vt0.c1 FROM vt1, vt2, vt0, v0 GROUP BY vt2.c0, vt0.c1 HAVING MIN(AVG(vt2.c0)) UNION ALL SELECT ALL vt2.c0, vt0.c1 FROM vt1, vt2, vt0, v0 GROUP BY vt2.c0, vt0.c1 HAVING (NOT (MIN(AVG(vt2.c0)))) UNION ALL SELECT vt2.c0, vt0.c1 FROM vt1, vt2, vt0, v0 GROUP BY vt2.c0, vt0.c1 HAVING ((MIN(AVG(vt2.c0))) ISNULL);
SELECT vt1.c0, vt2.c0 FROM vt1, v0, vt2;
SELECT ALL vt1.c0, vt2.c0 FROM vt1, v0, vt2 WHERE (load_extension(x'', json_array_length(vt1.c0))) UNION ALL SELECT vt1.c0, vt2.c0 FROM vt1, v0, vt2 WHERE ((NOT (load_extension(x'', json_array_length(vt1.c0))))) UNION ALL SELECT vt1.c0, vt2.c0 FROM vt1, v0, vt2 WHERE (((load_extension(x'', json_array_length(vt1.c0))) ISNULL));
SELECT DISTINCT vt0.c2, vt0.c0, vt0.c1 FROM vt2, vt0, v0;
SELECT DISTINCT vt0.c2, vt0.c0, vt0.c1 FROM vt2, vt0, v0 WHERE (CAST((('Cz') NOT NULL) AS NUMERIC)) UNION SELECT DISTINCT vt0.c2, vt0.c0, vt0.c1 FROM vt2, vt0, v0 WHERE ((NOT (CAST((('Cz') NOT NULL) AS NUMERIC)))) UNION SELECT DISTINCT vt0.c2, vt0.c0, vt0.c1 FROM vt2, vt0, v0 WHERE (((CAST((('Cz') NOT NULL) AS NUMERIC)) ISNULL));
SELECT DISTINCT vt0.c2, vt0.c0, vt0.c1 FROM vt2, vt0, v0;
SELECT ALL vt0.c0, v0.c0, vt0.c2, vt2.c0, vt1.c0, vt0.c1 FROM vt0, vt2, v0, vt1 GROUP BY vt0.c0, v0.c0, vt0.c2, vt2.c0, vt1.c0, vt0.c1;
SELECT ALL vt0.c0, v0.c0, vt0.c2, vt2.c0, vt1.c0, vt0.c1 FROM vt0, vt2, v0, vt1 WHERE ((('') NOTNULL) COLLATE NOCASE) GROUP BY vt0.c0, v0.c0, vt0.c2, vt2.c0, vt1.c0, vt0.c1 UNION SELECT ALL vt0.c0, v0.c0, vt0.c2, vt2.c0, vt1.c0, vt0.c1 FROM vt0, vt2, v0, vt1 WHERE ((NOT ((('') NOTNULL) COLLATE NOCASE))) GROUP BY vt0.c0, v0.c0, vt0.c2, vt2.c0, vt1.c0, vt0.c1 UNION SELECT vt0.c0, v0.c0, vt0.c2, vt2.c0, vt1.c0, vt0.c1 FROM vt0, vt2, v0, vt1 WHERE ((((('') NOTNULL) COLLATE NOCASE) ISNULL)) GROUP BY vt0.c0, v0.c0, vt0.c2, vt2.c0, vt1.c0, vt0.c1;
SELECT ALL vt0.c0, v0.c0, vt0.c2, vt2.c0, vt1.c0, vt0.c1 FROM vt0, vt2, v0, vt1 GROUP BY vt0.c0, v0.c0, vt0.c2, vt2.c0, vt1.c0, vt0.c1;
SELECT v0.c0 FROM v0, vt0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0, vt0 GROUP BY v0.c0 HAVING COUNT(MAX(TOTAL(COUNT(AVG(vt0.c0))))) UNION ALL SELECT v0.c0 FROM v0, vt0 GROUP BY v0.c0 HAVING (NOT (COUNT(MAX(TOTAL(COUNT(AVG(vt0.c0))))))) UNION ALL SELECT v0.c0 FROM v0, vt0 GROUP BY v0.c0 HAVING ((COUNT(MAX(TOTAL(COUNT(AVG(vt0.c0)))))) ISNULL);
SELECT vt0.c2, vt0.c0 FROM vt2, vt0 CROSS JOIN vt1 ON DATETIME(((v0.c0) NOT BETWEEN (vt2.c0) AND (vt0.c2)), ((vt0.c1) ISNULL), TRIM(vt2.c0, vt1.c0)) INNER JOIN v0 ON ((((v0.c0 IN ())))>=(((vt0.c2 IN ()))));
SELECT ALL vt0.c2, vt0.c0 FROM vt2, vt0 CROSS JOIN vt1 ON DATETIME(((v0.c0) NOT BETWEEN (vt2.c0) AND (vt0.c2)), ((vt0.c1) ISNULL), TRIM(vt2.c0, vt1.c0)) INNER JOIN v0 ON ((((v0.c0 IN ())))>=(((vt0.c2 IN ())))) WHERE (((((vt0.c2) BETWEEN (NULL) AND (v0.c0)))||((+ (vt0.c1))))) UNION ALL SELECT ALL vt0.c2, vt0.c0 FROM vt2, vt0 CROSS JOIN vt1 ON DATETIME(((v0.c0) NOT BETWEEN (vt2.c0) AND (vt0.c2)), ((vt0.c1) ISNULL), TRIM(vt2.c0, vt1.c0)) INNER JOIN v0 ON ((((v0.c0 IN ())))>=(((vt0.c2 IN ())))) WHERE ((NOT (((((vt0.c2) BETWEEN (NULL) AND (v0.c0)))||((+ (vt0.c1))))))) UNION ALL SELECT vt0.c2, vt0.c0 FROM vt2, vt0 CROSS JOIN vt1 ON DATETIME(((v0.c0) NOT BETWEEN (vt2.c0) AND (vt0.c2)), ((vt0.c1) ISNULL), TRIM(vt2.c0, vt1.c0)) INNER JOIN v0 ON ((((v0.c0 IN ())))>=(((vt0.c2 IN ())))) WHERE (((((((vt0.c2) BETWEEN (NULL) AND (v0.c0)))||((+ (vt0.c1))))) ISNULL));
SELECT vt0.c2, vt0.c0 FROM vt2, vt0 CROSS JOIN vt1 ON DATETIME(((v0.c0) NOT BETWEEN (vt2.c0) AND (vt0.c2)), ((vt0.c1) ISNULL), TRIM(vt2.c0, vt1.c0)) INNER JOIN v0 ON ((((v0.c0 IN ())))>=(((vt0.c2 IN ()))));
SELECT DISTINCT v0.c0 FROM vt1 LEFT OUTER JOIN v0 ON (((((+ (vt1.c0)))OR(((v0.c0) BETWEEN (vt1.c0) AND (vt1.c0)))))AND(' '));
SELECT DISTINCT v0.c0 FROM vt1 LEFT OUTER JOIN v0 ON (((((+ (vt1.c0)))OR(((v0.c0) BETWEEN (vt1.c0) AND (vt1.c0)))))AND(' ')) WHERE (v0.c0) UNION SELECT DISTINCT v0.c0 FROM vt1 LEFT OUTER JOIN v0 ON (((((+ (vt1.c0)))OR(((v0.c0) BETWEEN (vt1.c0) AND (vt1.c0)))))AND(' ')) WHERE ((NOT (v0.c0))) UNION SELECT DISTINCT v0.c0 FROM vt1 LEFT OUTER JOIN v0 ON (((((+ (vt1.c0)))OR(((v0.c0) BETWEEN (vt1.c0) AND (vt1.c0)))))AND(' ')) WHERE (((v0.c0) ISNULL));
SELECT DISTINCT v0.c0 FROM vt1 LEFT OUTER JOIN v0 ON (((((+ (vt1.c0)))OR(((v0.c0) BETWEEN (vt1.c0) AND (vt1.c0)))))AND(' '));
SELECT ALL vt0.c0, vt0.c2, vt0.c1, vt2.c0 FROM vt0 INNER JOIN vt2 ON NULL COLLATE RTRIM GROUP BY vt0.c0, vt0.c2, vt0.c1, vt2.c0;
SELECT ALL vt0.c0, vt0.c2, vt0.c1, vt2.c0 FROM vt0 INNER JOIN vt2 ON NULL COLLATE RTRIM WHERE (((((vt0.c0)||(vt0.c0))) NOT NULL)) GROUP BY vt0.c0, vt0.c2, vt0.c1, vt2.c0 UNION SELECT vt0.c0, vt0.c2, vt0.c1, vt2.c0 FROM vt0 INNER JOIN vt2 ON NULL COLLATE RTRIM WHERE ((NOT (((((vt0.c0)||(vt0.c0))) NOT NULL)))) GROUP BY vt0.c0, vt0.c2, vt0.c1, vt2.c0 UNION SELECT ALL vt0.c0, vt0.c2, vt0.c1, vt2.c0 FROM vt0 INNER JOIN vt2 ON NULL COLLATE RTRIM WHERE (((((((vt0.c0)||(vt0.c0))) NOT NULL)) ISNULL)) GROUP BY vt0.c0, vt0.c2, vt0.c1, vt2.c0;
SELECT ALL vt0.c0, vt0.c2, vt0.c1, vt2.c0 FROM vt0 INNER JOIN vt2 ON NULL COLLATE RTRIM GROUP BY vt0.c0, vt0.c2, vt0.c1, vt2.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (+ ((((SUM(MIN(COUNT(*)))))>((vt1.c0))))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT ((+ ((((SUM(MIN(COUNT(*)))))>((vt1.c0))))))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (((+ ((((SUM(MIN(COUNT(*)))))>((vt1.c0)))))) ISNULL);
SELECT ALL * FROM vt1 FULL OUTER JOIN vt2 ON ((((vt2.c0)OR(vt2.c0)))>>((vt2.c0 IN ())));
SELECT ALL * FROM vt1 FULL OUTER JOIN vt2 ON ((((vt2.c0)OR(vt2.c0)))>>((vt2.c0 IN ()))) WHERE ((vt1.c0 COLLATE NOCASE IN ((NOT (vt1.c0))))) UNION ALL SELECT * FROM vt1 FULL OUTER JOIN vt2 ON ((((vt2.c0)OR(vt2.c0)))>>((vt2.c0 IN ()))) WHERE ((NOT ((vt1.c0 COLLATE NOCASE IN ((NOT (vt1.c0))))))) UNION ALL SELECT * FROM vt1 FULL OUTER JOIN vt2 ON ((((vt2.c0)OR(vt2.c0)))>>((vt2.c0 IN ()))) WHERE ((((vt1.c0 COLLATE NOCASE IN ((NOT (vt1.c0))))) ISNULL));
SELECT ALL * FROM vt1 FULL OUTER JOIN vt2 ON ((((vt2.c0)OR(vt2.c0)))>>((vt2.c0 IN ())));
SELECT DISTINCT v0.c0, vt0.c2, vt0.c0, vt2.c0, vt1.c0 FROM vt0, vt1, vt2, v0;
SELECT DISTINCT v0.c0, vt0.c2, vt0.c0, vt2.c0, vt1.c0 FROM vt0, vt1, vt2, v0 WHERE (((-1.365027518E9 COLLATE NOCASE) BETWEEN ((((vt1.c0, vt1.c0, vt2.c0)) BETWEEN ((vt1.c0, vt0.c0, vt0.c0)) AND ((NULL, 0.3157855189754373, vt2.c0)))) AND (NULL COLLATE NOCASE))) UNION SELECT DISTINCT v0.c0, vt0.c2, vt0.c0, vt2.c0, vt1.c0 FROM vt0, vt1, vt2, v0 WHERE ((NOT (((-1.365027518E9 COLLATE NOCASE) BETWEEN ((((vt1.c0, vt1.c0, vt2.c0)) BETWEEN ((vt1.c0, vt0.c0, vt0.c0)) AND ((NULL, 0.3157855189754373, vt2.c0)))) AND (NULL COLLATE NOCASE))))) UNION SELECT DISTINCT v0.c0, vt0.c2, vt0.c0, vt2.c0, vt1.c0 FROM vt0, vt1, vt2, v0 WHERE (((((-1.365027518E9 COLLATE NOCASE) BETWEEN ((((vt1.c0, vt1.c0, vt2.c0)) BETWEEN ((vt1.c0, vt0.c0, vt0.c0)) AND ((NULL, 0.3157855189754373, vt2.c0)))) AND (NULL COLLATE NOCASE))) ISNULL));
SELECT DISTINCT v0.c0, vt0.c2, vt0.c0, vt2.c0, vt1.c0 FROM vt0, vt1, vt2, v0;
SELECT ALL vt0.c0, vt0.c1, vt0.c2 FROM vt1, vt0, vt2 GROUP BY vt0.c0, vt0.c1, vt0.c2;
SELECT ALL vt0.c0, vt0.c1, vt0.c2 FROM vt1, vt0 NOT INDEXED, vt2 WHERE (vt1.c0) GROUP BY vt0.c0, vt0.c1, vt0.c2 UNION SELECT ALL vt0.c0, vt0.c1, vt0.c2 FROM vt1, vt0, vt2 WHERE ((NOT (vt1.c0))) GROUP BY vt0.c0, vt0.c1, vt0.c2 UNION SELECT vt0.c0, vt0.c1, vt0.c2 FROM vt1, vt0, vt2 WHERE (((vt1.c0) ISNULL)) GROUP BY vt0.c0, vt0.c1, vt0.c2;
SELECT ALL vt0.c0, vt0.c1, vt0.c2 FROM vt1, vt0, vt2 GROUP BY vt0.c0, vt0.c1, vt0.c2;
SELECT ALL vt2.c0 FROM vt0 FULL OUTER JOIN vt2 ON (((vt0.c0) BETWEEN (vt0.c0) AND (v0.c0)) IN (CASE vt0.c0  WHEN v0.c0 THEN vt0.c2 ELSE vt2.c0 END, ((v0.c0) BETWEEN (0.9004645205861377) AND (vt2.c0)))) CROSS JOIN v0 ON ((((vt0.c0)<<(vt2.c0))) BETWEEN (vt2.c0 COLLATE RTRIM) AND ('!\rJ')) GROUP BY vt2.c0;
SELECT ALL * FROM v0 NATURAL JOIN vt2;
SELECT ALL * FROM v0 NATURAL JOIN vt2 WHERE (((((v0.c0)AND(vt2.c0)))&((NOT (v0.c0))))) UNION ALL SELECT * FROM v0 NATURAL JOIN vt2 WHERE ((NOT (((((v0.c0)AND(vt2.c0)))&((NOT (v0.c0))))))) UNION ALL SELECT * FROM v0 NATURAL JOIN vt2 WHERE (((((((v0.c0)AND(vt2.c0)))&((NOT (v0.c0))))) ISNULL));
SELECT ALL * FROM v0 NATURAL JOIN vt2;
SELECT DISTINCT * FROM vt1 INNER JOIN vt0 ON NULL;
SELECT DISTINCT * FROM vt1 INNER JOIN vt0 ON NULL WHERE (((vt0.c1) NOT BETWEEN (LIKELIHOOD(DISTINCT vt0.c0, 0.13479230184197355)) AND (LTRIM(vt0.c2)))) UNION SELECT DISTINCT * FROM vt1 INNER JOIN vt0 ON NULL WHERE ((NOT (((vt0.c1) NOT BETWEEN (LIKELIHOOD(DISTINCT vt0.c0, 0.13479230184197355)) AND (LTRIM(vt0.c2)))))) UNION SELECT DISTINCT * FROM vt1 INNER JOIN vt0 ON NULL WHERE (((((vt0.c1) NOT BETWEEN (LIKELIHOOD(DISTINCT vt0.c0, 0.13479230184197355)) AND (LTRIM(vt0.c2)))) ISNULL));
SELECT DISTINCT * FROM vt1 INNER JOIN vt0 ON NULL;
SELECT ALL vt1.c0, vt0.c2, vt0.c1, vt0.c0, v0.c0, vt2.c0 FROM v0, vt1 RIGHT OUTER JOIN vt0 ON ((((1e500)<=(vt2.c0))) NOTNULL) CROSS JOIN vt2 ON (+ (vt2.c0)) GROUP BY vt1.c0, vt0.c2, vt0.c1, vt0.c0, v0.c0, vt2.c0;
SELECT ALL vt2.c0, vt1.c0, v0.c0, vt0.c1 FROM vt2, vt1, vt0, v0 GROUP BY vt2.c0, vt1.c0, v0.c0, vt0.c1;
SELECT ALL vt2.c0, vt1.c0, v0.c0, vt0.c1 FROM vt2, vt1, vt0, v0 GROUP BY vt2.c0, vt1.c0, v0.c0, vt0.c1 HAVING MIN(MIN(SUM(vt2.c0))) UNION ALL SELECT vt2.c0, vt1.c0, v0.c0, vt0.c1 FROM vt2, vt1, vt0, v0 GROUP BY vt2.c0, vt1.c0, v0.c0, vt0.c1 HAVING (NOT (MIN(MIN(SUM(vt2.c0))))) UNION ALL SELECT vt2.c0, vt1.c0, v0.c0, vt0.c1 FROM vt2, vt1, vt0, v0 GROUP BY vt2.c0, vt1.c0, v0.c0, vt0.c1 HAVING ((MIN(MIN(SUM(vt2.c0)))) ISNULL);
SELECT ALL vt2.c0 FROM vt2;
SELECT ALL vt2.c0 FROM vt2 WHERE (CASE ((vt2.c0)IS(vt2.c0))  WHEN x'' THEN '328978397' ELSE LIKELIHOOD(vt2.c0, 0.2696897266964188) END) UNION ALL SELECT ALL vt2.c0 FROM vt2 WHERE ((NOT (CASE ((vt2.c0)IS(vt2.c0))  WHEN x'' THEN '328978397' ELSE LIKELIHOOD(vt2.c0, 0.2696897266964188) END))) UNION ALL SELECT ALL vt2.c0 FROM vt2 WHERE (((CASE ((vt2.c0)IS(vt2.c0))  WHEN x'' THEN '328978397' ELSE LIKELIHOOD(vt2.c0, 0.2696897266964188) END) ISNULL));
SELECT ALL vt2.c0 FROM vt2;
SELECT DISTINCT * FROM vt0, vt2, v0;
SELECT DISTINCT * FROM vt0, vt2, v0 WHERE (((((TOTAL_CHANGES())AND(((vt0.c0)OR(v0.c0)))))OR(vt0.c0 COLLATE BINARY))) UNION SELECT DISTINCT * FROM vt0, vt2, v0 WHERE ((NOT (((((TOTAL_CHANGES())AND(((vt0.c0)OR(v0.c0)))))OR(vt0.c0 COLLATE BINARY))))) UNION SELECT DISTINCT * FROM vt0, vt2, v0 WHERE (((((((TOTAL_CHANGES())AND(((vt0.c0)OR(v0.c0)))))OR(vt0.c0 COLLATE BINARY))) ISNULL));
SELECT DISTINCT * FROM vt0, vt2, v0;
SELECT vt2.c0 FROM vt2 RIGHT OUTER JOIN v0 ON v0.c0 GROUP BY vt2.c0;
SELECT ALL vt2.c0 FROM vt2 RIGHT OUTER JOIN v0 ON v0.c0 WHERE ((((vt2.c0)) BETWEEN ((CASE WHEN vt2.c0 THEN vt2.c0 WHEN v0.c0 THEN v0.c0 WHEN vt2.c0 THEN x'5d1f' ELSE v0.c0 END)) AND (((- (v0.c0)))))) GROUP BY vt2.c0 UNION SELECT vt2.c0 FROM vt2 RIGHT OUTER JOIN v0 ON v0.c0 WHERE ((NOT ((((vt2.c0)) BETWEEN ((CASE WHEN vt2.c0 THEN vt2.c0 WHEN v0.c0 THEN v0.c0 WHEN vt2.c0 THEN x'5d1f' ELSE v0.c0 END)) AND (((- (v0.c0)))))))) GROUP BY vt2.c0 UNION SELECT vt2.c0 FROM vt2 RIGHT OUTER JOIN v0 ON v0.c0 WHERE ((((((vt2.c0)) BETWEEN ((CASE WHEN vt2.c0 THEN vt2.c0 WHEN v0.c0 THEN v0.c0 WHEN vt2.c0 THEN x'5d1f' ELSE v0.c0 END)) AND (((- (v0.c0)))))) ISNULL)) GROUP BY vt2.c0;
SELECT vt2.c0 FROM vt2 RIGHT OUTER JOIN v0 ON v0.c0 GROUP BY vt2.c0;
SELECT v0.c0, vt2.c0 FROM v0, vt1, vt0 NATURAL JOIN vt2 GROUP BY v0.c0, vt2.c0;
SELECT v0.c0, vt2.c0 FROM v0, vt1, vt0 NATURAL JOIN vt2 GROUP BY v0.c0, vt2.c0 HAVING TOTAL(((((vt1.c0)OR(vt1.c0)))AND(MIN(vt0.c0)))) UNION ALL SELECT v0.c0, vt2.c0 FROM v0, vt1, vt0 NATURAL JOIN vt2 GROUP BY v0.c0, vt2.c0 HAVING (NOT (TOTAL(((((vt1.c0)OR(vt1.c0)))AND(MIN(vt0.c0)))))) UNION ALL SELECT ALL v0.c0, vt2.c0 FROM v0, vt1, vt0 NATURAL JOIN vt2 GROUP BY v0.c0, vt2.c0 HAVING ((TOTAL(((((vt1.c0)OR(vt1.c0)))AND(MIN(vt0.c0))))) ISNULL);
SELECT vt1.c0, vt2.c0 FROM vt1, vt2;
SELECT vt1.c0, vt2.c0 FROM vt1, vt2 WHERE ((((('-1390263511') NOT BETWEEN ('-1935914955') AND (vt2.c0))) IS FALSE)) UNION ALL SELECT vt1.c0, vt2.c0 FROM vt1, vt2 WHERE ((NOT ((((('-1390263511') NOT BETWEEN ('-1935914955') AND (vt2.c0))) IS FALSE)))) UNION ALL SELECT ALL vt1.c0, vt2.c0 FROM vt1, vt2 NOT INDEXED WHERE ((((((('-1390263511') NOT BETWEEN ('-1935914955') AND (vt2.c0))) IS FALSE)) ISNULL));
SELECT vt1.c0, vt2.c0 FROM vt1, vt2;
SELECT DISTINCT v0.c0 FROM v0 NOT INDEXED, vt2;
SELECT DISTINCT v0.c0 FROM v0, vt2 WHERE ((- ((vt2.c0 IN ())))) UNION SELECT DISTINCT v0.c0 FROM v0, vt2 WHERE ((NOT ((- ((vt2.c0 IN ())))))) UNION SELECT DISTINCT v0.c0 FROM v0, vt2 WHERE ((((- ((vt2.c0 IN ())))) ISNULL));
SELECT DISTINCT v0.c0 FROM v0 NOT INDEXED, vt2;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (((((((((((v0.c0)OR(NULL)))OR(v0.c0)))OR(v0.c0)))AND(v0.c0)))>(((v0.c0)+(v0.c0))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT (((((((((((v0.c0)OR(NULL)))OR(v0.c0)))OR(v0.c0)))AND(v0.c0)))>(((v0.c0)+(v0.c0))))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((((((((((((v0.c0)OR(NULL)))OR(v0.c0)))OR(v0.c0)))AND(v0.c0)))>(((v0.c0)+(v0.c0))))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT vt0.c1, v0.c0, vt2.c0, vt0.c0 FROM v0, vt2, vt0 GROUP BY vt0.c1, v0.c0, vt2.c0, vt0.c0;
SELECT ALL vt0.c1, v0.c0, vt2.c0, vt0.c0 FROM v0, vt2, vt0 GROUP BY vt0.c1, v0.c0, vt2.c0, vt0.c0 HAVING SUM(UNLIKELY(DISTINCT vt0.c1)) UNION ALL SELECT ALL vt0.c1, v0.c0, vt2.c0, vt0.c0 FROM v0, vt2, vt0 GROUP BY vt0.c1, v0.c0, vt2.c0, vt0.c0 HAVING (NOT (SUM(UNLIKELY(DISTINCT vt0.c1)))) UNION ALL SELECT ALL vt0.c1, v0.c0, vt2.c0, vt0.c0 FROM v0, vt2, vt0 GROUP BY vt0.c1, v0.c0, vt2.c0, vt0.c0 HAVING ((SUM(UNLIKELY(DISTINCT vt0.c1))) ISNULL);
SELECT vt0.c1, v0.c0, vt2.c0, vt0.c0 FROM v0, vt2, vt0 GROUP BY vt0.c1, v0.c0, vt2.c0, vt0.c0;
SELECT ALL vt0.c1, v0.c0, vt2.c0, vt0.c0 FROM v0, vt2, vt0 GROUP BY vt0.c1, v0.c0, vt2.c0, vt0.c0 HAVING SUM(UNLIKELY(DISTINCT vt0.c1)) UNION ALL SELECT ALL vt0.c1, v0.c0, vt2.c0, vt0.c0 FROM v0, vt2, vt0 GROUP BY vt0.c1, v0.c0, vt2.c0, vt0.c0 HAVING (NOT (SUM(UNLIKELY(DISTINCT vt0.c1)))) UNION ALL SELECT ALL vt0.c1, v0.c0, vt2.c0, vt0.c0 FROM v0, vt2, vt0 GROUP BY vt0.c1, v0.c0, vt2.c0, vt0.c0 HAVING ((SUM(UNLIKELY(DISTINCT vt0.c1))) ISNULL);
SELECT vt0.c1, v0.c0, vt2.c0, vt0.c0 FROM v0, vt2, vt0 GROUP BY vt0.c1, v0.c0, vt2.c0, vt0.c0;
SELECT ALL * FROM v0;
SELECT ALL * FROM v0 WHERE (0.5593148752098285) UNION ALL SELECT ALL * FROM v0 WHERE ((NOT (0.5593148752098285))) UNION ALL SELECT ALL * FROM v0 WHERE (((0.5593148752098285) ISNULL));
SELECT ALL * FROM v0;
SELECT DISTINCT * FROM vt1, v0;
SELECT DISTINCT * FROM vt1, v0 WHERE (((((v0.c0) ISNULL)) ISNULL)) UNION SELECT DISTINCT * FROM vt1, v0 WHERE ((NOT (((((v0.c0) ISNULL)) ISNULL)))) UNION SELECT DISTINCT * FROM vt1, v0 WHERE (((((((v0.c0) ISNULL)) ISNULL)) ISNULL));
SELECT DISTINCT * FROM vt1, v0;
SELECT vt0.c2, vt0.c0, v0.c0, vt1.c0 FROM vt1, vt0, v0 GROUP BY vt0.c2, vt0.c0, v0.c0, vt1.c0;
SELECT vt0.c2, vt0.c0, v0.c0, vt1.c0 FROM vt1, vt0, v0 WHERE (CAST(((('	Xxl')) NOT BETWEEN ((vt0.c2)) AND ((vt0.c0))) AS TEXT)) GROUP BY vt0.c2, vt0.c0, v0.c0, vt1.c0 UNION SELECT vt0.c2, vt0.c0, v0.c0, vt1.c0 FROM vt1, vt0, v0 WHERE ((NOT (CAST(((('	Xxl')) NOT BETWEEN ((vt0.c2)) AND ((vt0.c0))) AS TEXT)))) GROUP BY vt0.c2, vt0.c0, v0.c0, vt1.c0 UNION SELECT ALL vt0.c2, vt0.c0, v0.c0, vt1.c0 FROM vt1, vt0, v0 WHERE (((CAST(((('	Xxl')) NOT BETWEEN ((vt0.c2)) AND ((vt0.c0))) AS TEXT)) ISNULL)) GROUP BY vt0.c2, vt0.c0, v0.c0, vt1.c0;
SELECT vt0.c2, vt0.c0, v0.c0, vt1.c0 FROM vt1, vt0, v0 GROUP BY vt0.c2, vt0.c0, v0.c0, vt1.c0;
SELECT ALL vt2.c0, v0.c0 FROM vt2, v0 GROUP BY vt2.c0, v0.c0;
SELECT ALL vt2.c0, v0.c0 FROM vt2, v0 GROUP BY vt2.c0, v0.c0 HAVING LOWER(DISTINCT COUNT(*)) UNION ALL SELECT vt2.c0, v0.c0 FROM vt2, v0 GROUP BY vt2.c0, v0.c0 HAVING (NOT (LOWER(DISTINCT COUNT(*)))) UNION ALL SELECT ALL vt2.c0, v0.c0 FROM vt2, v0 GROUP BY vt2.c0, v0.c0 HAVING ((LOWER(DISTINCT COUNT(*))) ISNULL);
SELECT ALL vt2.c0, v0.c0 FROM vt2, v0 GROUP BY vt2.c0, v0.c0;
SELECT ALL vt2.c0, v0.c0 FROM vt2, v0 GROUP BY vt2.c0, v0.c0 HAVING LOWER(DISTINCT COUNT(*)) UNION ALL SELECT vt2.c0, v0.c0 FROM vt2, v0 GROUP BY vt2.c0, v0.c0 HAVING (NOT (LOWER(DISTINCT COUNT(*)))) UNION ALL SELECT ALL vt2.c0, v0.c0 FROM vt2, v0 GROUP BY vt2.c0, v0.c0 HAVING ((LOWER(DISTINCT COUNT(*))) ISNULL);
SELECT ALL vt2.c0, v0.c0 FROM vt2, v0 GROUP BY vt2.c0, v0.c0;
SELECT ALL * FROM v0, vt1;
SELECT * FROM v0, vt1 WHERE (vt1.c0) UNION ALL SELECT ALL * FROM v0, vt1 WHERE ((NOT (vt1.c0))) UNION ALL SELECT ALL * FROM v0, vt1 WHERE (((vt1.c0) ISNULL));
SELECT ALL * FROM v0, vt1;
SELECT DISTINCT * FROM vt2, vt0 CROSS JOIN vt1 ON (((v0.c0) NOT NULL) IN ()) FULL OUTER JOIN v0 ON ((((vt1.c0)!=(vt0.c1)))LIKE(((vt0.c1) BETWEEN (vt0.c1) AND (vt1.c0))));
SELECT DISTINCT * FROM vt2, vt0 CROSS JOIN vt1 ON (((v0.c0) NOT NULL) IN ()) FULL OUTER JOIN v0 ON ((((vt1.c0)!=(vt0.c1)))LIKE(((vt0.c1) BETWEEN (vt0.c1) AND (vt1.c0)))) WHERE ((((((vt0.c2) NOT BETWEEN (vt0.c1) AND (vt0.c1)), vt0.c1, CAST(vt0.c1 AS TEXT)))<>(((('-1863184013')LIKE(vt2.c0)), (v0.c0 IN ()), ((((vt1.c0)AND(vt0.c1)))OR(v0.c0)))))) UNION SELECT DISTINCT * FROM vt2, vt0 CROSS JOIN vt1 ON (((v0.c0) NOT NULL) IN ()) FULL OUTER JOIN v0 ON ((((vt1.c0)<>(vt0.c1)))LIKE(((vt0.c1) BETWEEN (vt0.c1) AND (vt1.c0)))) WHERE ((NOT ((((((vt0.c2) NOT BETWEEN (vt0.c1) AND (vt0.c1)), vt0.c1, CAST(vt0.c1 AS TEXT)))!=(((('-1863184013')LIKE(vt2.c0)), (v0.c0 IN ()), ((((vt1.c0)AND(vt0.c1)))OR(v0.c0)))))))) UNION SELECT DISTINCT * FROM vt2, vt0 CROSS JOIN vt1 ON (((v0.c0) NOT NULL) IN ()) FULL OUTER JOIN v0 ON ((((vt1.c0)!=(vt0.c1)))LIKE(((vt0.c1) BETWEEN (vt0.c1) AND (vt1.c0)))) WHERE ((((((((vt0.c2) NOT BETWEEN (vt0.c1) AND (vt0.c1)), vt0.c1, CAST(vt0.c1 AS TEXT)))<>(((('-1863184013')LIKE(vt2.c0)), (v0.c0 IN ()), ((((vt1.c0)AND(vt0.c1)))OR(v0.c0)))))) ISNULL));
SELECT DISTINCT * FROM vt2, vt0 CROSS JOIN vt1 ON (((v0.c0) NOT NULL) IN ()) FULL OUTER JOIN v0 ON ((((vt1.c0)!=(vt0.c1)))LIKE(((vt0.c1) BETWEEN (vt0.c1) AND (vt1.c0))));
SELECT vt0.c1, vt0.c0, vt1.c0, vt2.c0, vt0.c2 FROM vt0, vt1 FULL OUTER JOIN vt2 ON vt1.c0 INNER JOIN v0 ON (+ (CASE vt0.c1  WHEN vt0.c2 THEN v0.c0 WHEN vt1.c0 THEN v0.c0 WHEN vt0.c1 THEN vt2.c0 END)) GROUP BY vt0.c1, vt0.c0, vt1.c0, vt2.c0, vt0.c2;
SELECT ALL vt0.c1, vt0.c0, vt1.c0, vt2.c0, vt0.c2 FROM vt0, vt1 FULL OUTER JOIN vt2 ON vt1.c0 INNER JOIN v0 ON (+ (CASE vt0.c1  WHEN vt0.c2 THEN v0.c0 WHEN vt1.c0 THEN v0.c0 WHEN vt0.c1 THEN vt2.c0 END)) WHERE (((vt0.c0 COLLATE BINARY) ISNULL)) GROUP BY vt0.c1, vt0.c0, vt1.c0, vt2.c0, vt0.c2 UNION SELECT vt0.c1, vt0.c0, vt1.c0, vt2.c0, vt0.c2 FROM vt0, vt1 FULL OUTER JOIN vt2 ON vt1.c0 INNER JOIN v0 ON (+ (CASE vt0.c1  WHEN vt0.c2 THEN v0.c0 WHEN vt1.c0 THEN v0.c0 WHEN vt0.c1 THEN vt2.c0 END)) WHERE ((NOT (((vt0.c0 COLLATE BINARY) ISNULL)))) GROUP BY vt0.c1, vt0.c0, vt1.c0, vt2.c0, vt0.c2 UNION SELECT ALL vt0.c1, vt0.c0, vt1.c0, vt2.c0, vt0.c2 FROM vt0, vt1 FULL OUTER JOIN vt2 ON vt1.c0 INNER JOIN v0 ON (+ (CASE vt0.c1  WHEN vt0.c2 THEN v0.c0 WHEN vt1.c0 THEN v0.c0 WHEN vt0.c1 THEN vt2.c0 END)) WHERE (((((vt0.c0 COLLATE BINARY) ISNULL)) ISNULL)) GROUP BY vt0.c1, vt0.c0, vt1.c0, vt2.c0, vt0.c2;
SELECT vt0.c1, vt0.c0, vt1.c0, vt2.c0, vt0.c2 FROM vt0, vt1 FULL OUTER JOIN vt2 ON vt1.c0 INNER JOIN v0 ON (+ (CASE vt0.c1  WHEN vt0.c2 THEN v0.c0 WHEN vt1.c0 THEN v0.c0 WHEN vt0.c1 THEN vt2.c0 END)) GROUP BY vt0.c1, vt0.c0, vt1.c0, vt2.c0, vt0.c2;
SELECT ALL vt0.c1 FROM vt0, vt1, vt2 GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0, vt1, vt2 GROUP BY vt0.c1 HAVING GROUP_CONCAT(TOTAL(MAX(vt2.c0)) COLLATE BINARY) UNION ALL SELECT ALL vt0.c1 FROM vt0 NOT INDEXED, vt1, vt2 GROUP BY vt0.c1 HAVING (NOT (GROUP_CONCAT(TOTAL(MAX(vt2.c0)) COLLATE BINARY))) UNION ALL SELECT ALL vt0.c1 FROM vt0, vt1, vt2 GROUP BY vt0.c1 HAVING ((GROUP_CONCAT(TOTAL(MAX(vt2.c0)) COLLATE BINARY)) ISNULL);
SELECT * FROM v0, vt2, vt1, vt0;
SELECT ALL * FROM v0, vt2, vt1, vt0 WHERE ((~ (((vt0.c2)<>(vt0.c1))))) UNION ALL SELECT ALL * FROM v0, vt2, vt1, vt0 WHERE ((NOT ((~ (((vt0.c2)<>(vt0.c1))))))) UNION ALL SELECT * FROM v0, vt2, vt1, vt0 WHERE ((((~ (((vt0.c2)<>(vt0.c1))))) ISNULL));
SELECT * FROM v0, vt2, vt1, vt0;
SELECT DISTINCT * FROM v0 FULL OUTER JOIN vt2 ON CASE vt1.c0 COLLATE RTRIM  WHEN CASE WHEN vt1.c0 THEN v0.c0 END THEN CAST(vt1.c0 AS NUMERIC) END LEFT OUTER JOIN vt1 ON ((((vt1.c0)+(vt2.c0)))-(MIN(0.7587228003844076, vt1.c0)));
SELECT vt1.c0, vt0.c1, vt0.c2, v0.c0, vt0.c0, vt2.c0 FROM vt1, vt2, v0, vt0 GROUP BY vt1.c0, vt0.c1, vt0.c2, v0.c0, vt0.c0, vt2.c0;
SELECT ALL vt1.c0, vt0.c1, vt0.c2, v0.c0, vt0.c0, vt2.c0 FROM vt1, vt2, v0, vt0 WHERE (((v0.c0 IN ()) IN (((((((((vt0.c1)OR(vt0.c1)))AND(x'')))AND(v0.c0)))OR(vt0.c0)), x''))) GROUP BY vt1.c0, vt0.c1, vt0.c2, v0.c0, vt0.c0, vt2.c0 UNION SELECT vt1.c0, vt0.c1, vt0.c2, v0.c0, vt0.c0, vt2.c0 FROM vt1, vt2, v0, vt0 NOT INDEXED WHERE ((NOT (((v0.c0 IN ()) IN (((((((((vt0.c1)OR(vt0.c1)))AND(x'')))AND(v0.c0)))OR(vt0.c0)), x''))))) GROUP BY vt1.c0, vt0.c1, vt0.c2, v0.c0, vt0.c0, vt2.c0 UNION SELECT vt1.c0, vt0.c1, vt0.c2, v0.c0, vt0.c0, vt2.c0 FROM vt1, vt2, v0, vt0 WHERE (((((v0.c0 IN ()) IN (((((((((vt0.c1)OR(vt0.c1)))AND(x'')))AND(v0.c0)))OR(vt0.c0)), x''))) ISNULL)) GROUP BY vt1.c0, vt0.c1, vt0.c2, v0.c0, vt0.c0, vt2.c0;
SELECT vt1.c0, vt0.c1, vt0.c2, v0.c0, vt0.c0, vt2.c0 FROM vt1, vt2, v0, vt0 GROUP BY vt1.c0, vt0.c1, vt0.c2, v0.c0, vt0.c0, vt2.c0;
SELECT vt1.c0 FROM vt2, vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt2, vt1 GROUP BY vt1.c0 HAVING COUNT(TOTAL(MIN(vt2.c0))) UNION ALL SELECT ALL vt1.c0 FROM vt2 NOT INDEXED, vt1 GROUP BY vt1.c0 HAVING (NOT (COUNT(TOTAL(MIN(vt2.c0))))) UNION ALL SELECT ALL vt1.c0 FROM vt2, vt1 GROUP BY vt1.c0 HAVING ((COUNT(TOTAL(MIN(vt2.c0)))) ISNULL);
SELECT ALL vt0.c1, vt0.c0, vt1.c0, vt0.c2 FROM vt0, vt1;
SELECT ALL vt0.c1, vt0.c0, vt1.c0, vt0.c2 FROM vt0, vt1 WHERE (((((vt1.c0)||(vt0.c2))) ISNULL)) UNION ALL SELECT vt0.c1, vt0.c0, vt1.c0, vt0.c2 FROM vt0, vt1 WHERE ((NOT (((((vt1.c0)||(vt0.c2))) ISNULL)))) UNION ALL SELECT vt0.c1, vt0.c0, vt1.c0, vt0.c2 FROM vt0, vt1 WHERE (((((((vt1.c0)||(vt0.c2))) ISNULL)) ISNULL));
SELECT ALL vt0.c1, vt0.c0, vt1.c0, vt0.c2 FROM vt0, vt1;
SELECT DISTINCT vt0.c1, vt1.c0, v0.c0, vt2.c0, vt0.c2, vt0.c0 FROM vt2, v0, vt1, vt0;
SELECT DISTINCT vt0.c1, vt1.c0, v0.c0, vt2.c0, vt0.c2, vt0.c0 FROM vt2, v0, vt1, vt0 WHERE ((((((((v0.c0, v0.c0, vt0.c0))!=((vt0.c2, vt0.c0, vt0.c0))))AND(((v0.c0)<>(0.2599157026377227)))))AND(((((vt2.c0)OR(0.1860671459382277)))OR(vt2.c0))))) UNION SELECT DISTINCT vt0.c1, vt1.c0, v0.c0, vt2.c0, vt0.c2, vt0.c0 FROM vt2, v0, vt1, vt0 WHERE ((NOT ((((((((v0.c0, v0.c0, vt0.c0))<>((vt0.c2, vt0.c0, vt0.c0))))AND(((v0.c0)!=(0.2599157026377227)))))AND(((((vt2.c0)OR(0.1860671459382277)))OR(vt2.c0))))))) UNION SELECT DISTINCT vt0.c1, vt1.c0, v0.c0, vt2.c0, vt0.c2, vt0.c0 FROM vt2, v0, vt1, vt0 WHERE ((((((((((v0.c0, v0.c0, vt0.c0))!=((vt0.c2, vt0.c0, vt0.c0))))AND(((v0.c0)<>(0.2599157026377227)))))AND(((((vt2.c0)OR(0.1860671459382277)))OR(vt2.c0))))) ISNULL));
SELECT DISTINCT vt0.c1, vt1.c0, v0.c0, vt2.c0, vt0.c2, vt0.c0 FROM vt2, v0, vt1, vt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE ((((UNLIKELY(DISTINCT vt0.c0)))==((CASE vt0.c2  WHEN vt0.c2 THEN vt0.c1 WHEN vt0.c2 THEN '' WHEN 0.4481702061210445 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c2 END)))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT ((((UNLIKELY(DISTINCT vt0.c0)))=((CASE vt0.c2  WHEN vt0.c2 THEN vt0.c1 WHEN vt0.c2 THEN '' WHEN 0.4481702061210445 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c2 END)))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((((((UNLIKELY(DISTINCT vt0.c0)))==((CASE vt0.c2  WHEN vt0.c2 THEN vt0.c1 WHEN vt0.c2 THEN '' WHEN 0.4481702061210445 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c2 END)))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c2 FROM v0, vt0 GROUP BY vt0.c2;
SELECT ALL vt0.c2 FROM v0, vt0 GROUP BY vt0.c2 HAVING GROUP_CONCAT(GROUP_CONCAT(vt0.c2) COLLATE BINARY) UNION ALL SELECT vt0.c2 FROM v0, vt0 GROUP BY vt0.c2 HAVING (NOT (GROUP_CONCAT(GROUP_CONCAT(vt0.c2) COLLATE BINARY))) UNION ALL SELECT ALL vt0.c2 FROM v0, vt0 GROUP BY vt0.c2 HAVING ((GROUP_CONCAT(GROUP_CONCAT(vt0.c2) COLLATE BINARY)) ISNULL);
SELECT * FROM vt0, vt1;
SELECT * FROM vt0, vt1 WHERE (((0.11421239626846791)+(((vt1.c0)IS(vt1.c0))))) UNION ALL SELECT * FROM vt0, vt1 WHERE ((NOT (((0.11421239626846791)+(((vt1.c0)IS(vt1.c0))))))) UNION ALL SELECT ALL * FROM vt0, vt1 WHERE (((((0.11421239626846791)+(((vt1.c0)IS(vt1.c0))))) ISNULL));
SELECT * FROM vt0, vt1;
SELECT DISTINCT vt0.c2 FROM vt1, vt0;
SELECT DISTINCT vt0.c2 FROM vt1, vt0 WHERE (((vt0.c0 COLLATE BINARY)>>(((vt0.c1)LIKE(vt0.c1))))) UNION SELECT DISTINCT vt0.c2 FROM vt1, vt0 WHERE ((NOT (((vt0.c0 COLLATE BINARY)>>(((vt0.c1)LIKE(vt0.c1))))))) UNION SELECT DISTINCT vt0.c2 FROM vt1, vt0 WHERE (((((vt0.c0 COLLATE BINARY)>>(((vt0.c1)LIKE(vt0.c1))))) ISNULL));
SELECT DISTINCT vt0.c2 FROM vt1, vt0;
SELECT vt0.c1 FROM vt0, v0, vt1 GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt0, v0, vt1 WHERE (0.8567457485258063) GROUP BY vt0.c1 UNION SELECT vt0.c1 FROM vt0, v0, vt1 WHERE ((NOT (0.8567457485258063))) GROUP BY vt0.c1 UNION SELECT ALL vt0.c1 FROM vt0, v0, vt1 WHERE (((0.8567457485258063) ISNULL)) GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0, v0, vt1 GROUP BY vt0.c1;
SELECT ALL vt0.c2, vt2.c0, vt0.c0 FROM v0, vt1 NOT INDEXED, vt2 LEFT OUTER JOIN vt0 ON ((((NULL) NOT BETWEEN (vt2.c0) AND ('497595857'))) NOT BETWEEN ((((vt0.c2, vt0.c1, vt1.c0))==((vt1.c0, vt0.c2, vt0.c1)))) AND (((x'58a8')>(v0.c0)))) GROUP BY vt0.c2, vt2.c0, vt0.c0;
SELECT ALL vt0.c2, vt2.c0, vt0.c0 FROM v0, vt1, vt2 LEFT OUTER JOIN vt0 ON ((((NULL) NOT BETWEEN (vt2.c0) AND ('497595857'))) NOT BETWEEN ((((vt0.c2, vt0.c1, vt1.c0))=((vt1.c0, vt0.c2, vt0.c1)))) AND (((x'58a8')>(v0.c0)))) GROUP BY vt0.c2, vt2.c0, vt0.c0 HAVING GROUP_CONCAT(AVG(COUNT(GROUP_CONCAT(vt2.c0)))) UNION ALL SELECT vt0.c2, vt2.c0, vt0.c0 FROM v0, vt1, vt2 LEFT OUTER JOIN vt0 ON ((((NULL) NOT BETWEEN (vt2.c0) AND ('497595857'))) NOT BETWEEN ((((vt0.c2, vt0.c1, vt1.c0))==((vt1.c0, vt0.c2, vt0.c1)))) AND (((x'58a8')>(v0.c0)))) GROUP BY vt0.c2, vt2.c0, vt0.c0 HAVING (NOT (GROUP_CONCAT(AVG(COUNT(GROUP_CONCAT(vt2.c0)))))) UNION ALL SELECT ALL vt0.c2, vt2.c0, vt0.c0 FROM v0, vt1, vt2 LEFT OUTER JOIN vt0 ON ((((NULL) NOT BETWEEN (vt2.c0) AND ('497595857'))) NOT BETWEEN ((((vt0.c2, vt0.c1, vt1.c0))=((vt1.c0, vt0.c2, vt0.c1)))) AND (((x'58a8')>(v0.c0)))) GROUP BY vt0.c2, vt2.c0, vt0.c0 HAVING ((GROUP_CONCAT(AVG(COUNT(GROUP_CONCAT(vt2.c0))))) ISNULL);
SELECT ALL vt0.c1, vt1.c0, vt0.c0 FROM vt1, v0 FULL OUTER JOIN vt2 ON ((vt0.c1 COLLATE BINARY)OR(((((vt0.c0)AND(vt0.c2)))OR(vt0.c0)))) INNER JOIN vt0 ON (+ (((((((((v0.c0)OR(vt0.c1)))AND('?⤣#hg6u蕖')))AND(vt0.c2)))OR(vt0.c0))));
SELECT DISTINCT * FROM vt1 NATURAL JOIN v0;
SELECT DISTINCT * FROM vt1 NATURAL JOIN v0 WHERE ((- (vt1.c0 COLLATE BINARY))) UNION SELECT DISTINCT * FROM vt1 NATURAL JOIN v0 WHERE ((NOT ((- (vt1.c0 COLLATE BINARY))))) UNION SELECT DISTINCT * FROM vt1 NATURAL JOIN v0 WHERE ((((- (vt1.c0 COLLATE BINARY))) ISNULL));
SELECT DISTINCT * FROM vt1 NATURAL JOIN v0;
SELECT ALL vt0.c1, vt1.c0, vt0.c2, v0.c0, vt0.c0 FROM vt0, vt1, v0 GROUP BY vt0.c1, vt1.c0, vt0.c2, v0.c0, vt0.c0;
SELECT vt0.c1, vt1.c0, vt0.c2, v0.c0, vt0.c0 FROM vt0, vt1, v0 WHERE (((((((((vt1.c0 COLLATE RTRIM)OR(((vt0.c1) IS FALSE))))OR((~ (vt1.c0)))))AND(CAST(vt0.c1 AS REAL))))OR(((((((((vt1.c0)AND(-0.0)))AND(vt0.c1)))AND(vt0.c0)))OR(vt0.c2))))) GROUP BY vt0.c1, vt1.c0, vt0.c2, v0.c0, vt0.c0 UNION SELECT vt0.c1, vt1.c0, vt0.c2, v0.c0, vt0.c0 FROM vt0, vt1, v0 WHERE ((NOT (((((((((vt1.c0 COLLATE RTRIM)OR(((vt0.c1) IS FALSE))))OR((~ (vt1.c0)))))AND(CAST(vt0.c1 AS REAL))))OR(((((((((vt1.c0)AND(-0.0)))AND(vt0.c1)))AND(vt0.c0)))OR(vt0.c2))))))) GROUP BY vt0.c1, vt1.c0, vt0.c2, v0.c0, vt0.c0 UNION SELECT ALL vt0.c1, vt1.c0, vt0.c2, v0.c0, vt0.c0 FROM vt0, vt1, v0 WHERE (((((((((((vt1.c0 COLLATE RTRIM)OR(((vt0.c1) IS FALSE))))OR((~ (vt1.c0)))))AND(CAST(vt0.c1 AS REAL))))OR(((((((((vt1.c0)AND(-0.0)))AND(vt0.c1)))AND(vt0.c0)))OR(vt0.c2))))) ISNULL)) GROUP BY vt0.c1, vt1.c0, vt0.c2, v0.c0, vt0.c0;
SELECT ALL vt0.c1, vt1.c0, vt0.c2, v0.c0, vt0.c0 FROM vt0, vt1, v0 GROUP BY vt0.c1, vt1.c0, vt0.c2, v0.c0, vt0.c0;
SELECT vt2.c0, vt0.c2, vt0.c1 FROM vt2, vt0 NOT INDEXED GROUP BY vt2.c0, vt0.c2, vt0.c1;
SELECT vt2.c0, vt0.c2, vt0.c1 FROM vt2, vt0 GROUP BY vt2.c0, vt0.c2, vt0.c1 HAVING ((NOT (vt2.c0)) IN ()) UNION ALL SELECT ALL vt2.c0, vt0.c2, vt0.c1 FROM vt2, vt0 GROUP BY vt2.c0, vt0.c2, vt0.c1 HAVING (NOT (((NOT (vt2.c0)) IN ()))) UNION ALL SELECT vt2.c0, vt0.c2, vt0.c1 FROM vt2 NOT INDEXED, vt0 GROUP BY vt2.c0, vt0.c2, vt0.c1 HAVING ((((NOT (vt2.c0)) IN ())) ISNULL);
SELECT vt2.c0, vt0.c2, vt0.c1 FROM vt2, vt0 NOT INDEXED GROUP BY vt2.c0, vt0.c2, vt0.c1;
SELECT vt2.c0, vt0.c2, vt0.c1 FROM vt2, vt0 GROUP BY vt2.c0, vt0.c2, vt0.c1 HAVING ((NOT (vt2.c0)) IN ()) UNION ALL SELECT ALL vt2.c0, vt0.c2, vt0.c1 FROM vt2, vt0 GROUP BY vt2.c0, vt0.c2, vt0.c1 HAVING (NOT (((NOT (vt2.c0)) IN ()))) UNION ALL SELECT vt2.c0, vt0.c2, vt0.c1 FROM vt2 NOT INDEXED, vt0 GROUP BY vt2.c0, vt0.c2, vt0.c1 HAVING ((((NOT (vt2.c0)) IN ())) ISNULL);
SELECT vt2.c0, vt0.c2, vt0.c1 FROM vt2, vt0 NOT INDEXED GROUP BY vt2.c0, vt0.c2, vt0.c1;
SELECT ALL vt2.c0, vt0.c1 FROM v0 LEFT OUTER JOIN vt0 ON PRINTF(((vt2.c0)/(vt0.c0))) FULL OUTER JOIN vt1 ON UPPER(v0.c0 COLLATE BINARY) INNER JOIN vt2 ON ((((vt2.c0) BETWEEN ('-1390263511') AND (v0.c0)))>=((((NULL, vt1.c0, vt0.c2))>=((vt0.c2, NULL, vt1.c0)))));
SELECT DISTINCT vt2.c0, vt0.c1, vt0.c0, v0.c0, vt0.c2 FROM vt0, vt2, v0;
SELECT DISTINCT vt2.c0, vt0.c1, vt0.c0, v0.c0, vt0.c2 FROM vt0, vt2, v0 WHERE ((~ (((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt2.c0))))) UNION SELECT DISTINCT vt2.c0, vt0.c1, vt0.c0, v0.c0, vt0.c2 FROM vt0, vt2, v0 WHERE ((NOT ((~ (((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt2.c0))))))) UNION SELECT DISTINCT vt2.c0, vt0.c1, vt0.c0, v0.c0, vt0.c2 FROM vt0, vt2, v0 WHERE ((((~ (((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt2.c0))))) ISNULL));
SELECT DISTINCT vt2.c0, vt0.c1, vt0.c0, v0.c0, vt0.c2 FROM vt0, vt2, v0;
SELECT vt2.c0 FROM vt1, vt2 GROUP BY vt2.c0;
SELECT ALL vt2.c0 FROM vt1, vt2 WHERE ((((vt2.c0)) BETWEEN ((((vt1.c0) NOT NULL))) AND ((((0.8304620693871597)==(vt2.c0)))))) GROUP BY vt2.c0 UNION SELECT ALL vt2.c0 FROM vt1, vt2 WHERE ((NOT ((((vt2.c0)) BETWEEN ((((vt1.c0) NOT NULL))) AND ((((0.8304620693871597)=(vt2.c0)))))))) GROUP BY vt2.c0 UNION SELECT vt2.c0 FROM vt1, vt2 WHERE ((((((vt2.c0)) BETWEEN ((((vt1.c0) NOT NULL))) AND ((((0.8304620693871597)==(vt2.c0)))))) ISNULL)) GROUP BY vt2.c0;
SELECT vt2.c0 FROM vt1, vt2 GROUP BY vt2.c0;
SELECT ALL vt2.c0 FROM v0, vt1 INNER JOIN vt2 ON CAST(vt1.c0 AS REAL) GROUP BY vt2.c0;
SELECT vt2.c0 FROM v0, vt1 INNER JOIN vt2 ON CAST(vt1.c0 AS REAL) GROUP BY vt2.c0 HAVING TOTAL(((((((((vt2.c0)OR(MIN(COUNT(*)))))AND(COUNT(v0.c0))))AND(vt2.c0)))OR(COUNT(*)))) UNION ALL SELECT vt2.c0 FROM v0, vt1 INNER JOIN vt2 ON CAST(vt1.c0 AS REAL) GROUP BY vt2.c0 HAVING (NOT (TOTAL(((((((((vt2.c0)OR(MIN(COUNT(*)))))AND(COUNT(v0.c0))))AND(vt2.c0)))OR(COUNT(*)))))) UNION ALL SELECT ALL vt2.c0 FROM v0, vt1 INNER JOIN vt2 ON CAST(vt1.c0 AS REAL) GROUP BY vt2.c0 HAVING ((TOTAL(((((((((vt2.c0)OR(MIN(COUNT(*)))))AND(COUNT(v0.c0))))AND(vt2.c0)))OR(COUNT(*))))) ISNULL);
SELECT * FROM vt0, v0, vt1;
SELECT * FROM vt0, v0, vt1 WHERE (CASE ((((((((((((vt1.c0)OR(NULL)))OR(vt1.c0)))AND(v0.c0)))AND('-1009854767')))AND(v0.c0)))AND(v0.c0))  WHEN CASE WHEN v0.c0 THEN vt0.c1 END THEN ((vt1.c0)<=(vt0.c2)) WHEN CAST(vt0.c0 AS REAL) THEN highlight(vt0.c1, '-1229155124', vt0.c0, x'') WHEN (v0.c0 IN (vt0.c1)) THEN CAST(vt0.c2 AS REAL) END) UNION ALL SELECT * FROM vt0, v0, vt1 WHERE ((NOT (CASE ((((((((((((vt1.c0)OR(NULL)))OR(vt1.c0)))AND(v0.c0)))AND('-1009854767')))AND(v0.c0)))AND(v0.c0))  WHEN CASE WHEN v0.c0 THEN vt0.c1 END THEN ((vt1.c0)<=(vt0.c2)) WHEN CAST(vt0.c0 AS REAL) THEN highlight(vt0.c1, '-1229155124', vt0.c0, x'') WHEN (v0.c0 IN (vt0.c1)) THEN CAST(vt0.c2 AS REAL) END))) UNION ALL SELECT ALL * FROM vt0, v0, vt1 WHERE (((CASE ((((((((((((vt1.c0)OR(NULL)))OR(vt1.c0)))AND(v0.c0)))AND('-1009854767')))AND(v0.c0)))AND(v0.c0))  WHEN CASE WHEN v0.c0 THEN vt0.c1 END THEN ((vt1.c0)<=(vt0.c2)) WHEN CAST(vt0.c0 AS REAL) THEN highlight(vt0.c1, '-1229155124', vt0.c0, x'') WHEN (v0.c0 IN (vt0.c1)) THEN CAST(vt0.c2 AS REAL) END) ISNULL));
SELECT * FROM vt0, v0, vt1;
SELECT DISTINCT * FROM vt0, v0;
SELECT DISTINCT * FROM vt0, v0 WHERE ((+ ((((v0.c0))<((vt0.c0)))))) UNION SELECT DISTINCT * FROM vt0, v0 WHERE ((NOT ((+ ((((v0.c0))<((vt0.c0)))))))) UNION SELECT DISTINCT * FROM vt0, v0 WHERE ((((+ ((((v0.c0))<((vt0.c0)))))) ISNULL));
SELECT DISTINCT * FROM vt0, v0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE ((~ (DATE(v0.c0, 0.9163465795617145, v0.c0, v0.c0, v0.c0)))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT ((~ (DATE(v0.c0, 0.9163465795617145, v0.c0, v0.c0, v0.c0)))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((((~ (DATE(v0.c0, 0.9163465795617145, v0.c0, v0.c0, v0.c0)))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT vt0.c0 FROM v0, vt2, vt1, vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM v0, vt2, vt1, vt0 GROUP BY vt0.c0 HAVING MAX(MAX(MAX(COUNT(vt0.c1)))) UNION ALL SELECT ALL vt0.c0 FROM v0, vt2, vt1, vt0 GROUP BY vt0.c0 HAVING (NOT (MAX(MAX(MAX(COUNT(vt0.c1)))))) UNION ALL SELECT vt0.c0 FROM v0, vt2, vt1, vt0 GROUP BY vt0.c0 HAVING ((MAX(MAX(MAX(COUNT(vt0.c1))))) ISNULL);
SELECT ALL * FROM vt0, v0 FULL OUTER JOIN vt2 ON ((((((((((vt2.c0) BETWEEN (vt0.c1) AND (v0.c0)))OR((vt0.c1 IN (vt0.c2)))))OR(((vt0.c0) BETWEEN ('1808830006') AND (vt2.c0)))))AND(((vt0.c0) IS TRUE))))OR(UNICODE(vt0.c2)));
SELECT * FROM vt0, v0 FULL OUTER JOIN vt2 ON ((((((((((vt2.c0) BETWEEN (vt0.c1) AND (v0.c0)))OR((vt0.c1 IN (vt0.c2)))))OR(((vt0.c0) BETWEEN ('1808830006') AND (vt2.c0)))))AND(((vt0.c0) IS TRUE))))OR(UNICODE(vt0.c2))) WHERE ((((((((((NOT (vt2.c0)))OR(((vt0.c2) NOT BETWEEN (v0.c0) AND (v0.c0)))))OR(CAST(vt0.c1 AS BLOB))))OR(0X1b8dd467)))AND(((((vt0.c1)AND(vt2.c0)))OR(vt2.c0))))) UNION ALL SELECT ALL * FROM vt0, v0 FULL OUTER JOIN vt2 ON ((((((((((vt2.c0) BETWEEN (vt0.c1) AND (v0.c0)))OR((vt0.c1 IN (vt0.c2)))))OR(((vt0.c0) BETWEEN ('1808830006') AND (vt2.c0)))))AND(((vt0.c0) IS TRUE))))OR(UNICODE(vt0.c2))) WHERE ((NOT ((((((((((NOT (vt2.c0)))OR(((vt0.c2) NOT BETWEEN (v0.c0) AND (v0.c0)))))OR(CAST(vt0.c1 AS BLOB))))OR(0X1b8dd467)))AND(((((vt0.c1)AND(vt2.c0)))OR(vt2.c0))))))) UNION ALL SELECT ALL * FROM vt0, v0 FULL OUTER JOIN vt2 ON ((((((((((vt2.c0) BETWEEN (vt0.c1) AND (v0.c0)))OR((vt0.c1 IN (vt0.c2)))))OR(((vt0.c0) BETWEEN ('1808830006') AND (vt2.c0)))))AND(((vt0.c0) IS TRUE))))OR(UNICODE(vt0.c2))) WHERE ((((((((((((NOT (vt2.c0)))OR(((vt0.c2) NOT BETWEEN (v0.c0) AND (v0.c0)))))OR(CAST(vt0.c1 AS BLOB))))OR(0X1b8dd467)))AND(((((vt0.c1)AND(vt2.c0)))OR(vt2.c0))))) ISNULL));
SELECT ALL * FROM vt0, v0 FULL OUTER JOIN vt2 ON ((((((((((vt2.c0) BETWEEN (vt0.c1) AND (v0.c0)))OR((vt0.c1 IN (vt0.c2)))))OR(((vt0.c0) BETWEEN ('1808830006') AND (vt2.c0)))))AND(((vt0.c0) IS TRUE))))OR(UNICODE(vt0.c2)));
SELECT DISTINCT vt2.c0, vt1.c0, v0.c0 FROM vt1 RIGHT OUTER JOIN vt2 ON LIKELY(((v0.c0)IS NOT(v0.c0))) LEFT OUTER JOIN v0 ON (v0.c0 IN ()) COLLATE RTRIM;
SELECT vt0.c2, vt0.c0, v0.c0, vt0.c1 FROM v0, vt0 GROUP BY vt0.c2, vt0.c0, v0.c0, vt0.c1;
SELECT ALL vt0.c2, vt0.c0, v0.c0, vt0.c1 FROM v0, vt0 WHERE ('' COLLATE RTRIM) GROUP BY vt0.c2, vt0.c0, v0.c0, vt0.c1 UNION SELECT vt0.c2, vt0.c0, v0.c0, vt0.c1 FROM v0, vt0 WHERE ((NOT ('' COLLATE RTRIM))) GROUP BY vt0.c2, vt0.c0, v0.c0, vt0.c1 UNION SELECT vt0.c2, vt0.c0, v0.c0, vt0.c1 FROM v0, vt0 WHERE ((('' COLLATE RTRIM) ISNULL)) GROUP BY vt0.c2, vt0.c0, v0.c0, vt0.c1;
SELECT vt0.c2, vt0.c0, v0.c0, vt0.c1 FROM v0, vt0 GROUP BY vt0.c2, vt0.c0, v0.c0, vt0.c1;
SELECT vt0.c1 FROM vt1, vt2, vt0 GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt1, vt2, vt0 GROUP BY vt0.c1 HAVING TYPEOF(x'201a') UNION ALL SELECT vt0.c1 FROM vt1, vt2, vt0 GROUP BY vt0.c1 HAVING (NOT (TYPEOF(x'201a'))) UNION ALL SELECT ALL vt0.c1 FROM vt1, vt2, vt0 GROUP BY vt0.c1 HAVING ((TYPEOF(x'201a')) ISNULL);
SELECT vt0.c1 FROM vt1, vt2, vt0 GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt1, vt2, vt0 GROUP BY vt0.c1 HAVING TYPEOF(x'201a') UNION ALL SELECT vt0.c1 FROM vt1, vt2, vt0 GROUP BY vt0.c1 HAVING (NOT (TYPEOF(x'201a'))) UNION ALL SELECT ALL vt0.c1 FROM vt1, vt2, vt0 GROUP BY vt0.c1 HAVING ((TYPEOF(x'201a')) ISNULL);
SELECT vt0.c1 FROM vt1, vt2, vt0 GROUP BY vt0.c1;
SELECT ALL * FROM vt2 INNER JOIN v0 ON CAST(v0.c0 AS TEXT) COLLATE RTRIM;
SELECT ALL * FROM vt2 INNER JOIN v0 ON CAST(v0.c0 AS TEXT) COLLATE RTRIM WHERE (DATETIME(((v0.c0)>>(vt2.c0)), ((vt2.c0) ISNULL), ((v0.c0)=(vt2.c0)))) UNION ALL SELECT ALL * FROM vt2 INNER JOIN v0 ON CAST(v0.c0 AS TEXT) COLLATE RTRIM WHERE ((NOT (DATETIME(((v0.c0)>>(vt2.c0)), ((vt2.c0) ISNULL), ((v0.c0)=(vt2.c0)))))) UNION ALL SELECT * FROM vt2 INNER JOIN v0 ON CAST(v0.c0 AS TEXT) COLLATE RTRIM WHERE (((DATETIME(((v0.c0)>>(vt2.c0)), ((vt2.c0) ISNULL), ((v0.c0)=(vt2.c0)))) ISNULL));
SELECT ALL * FROM vt2 INNER JOIN v0 ON CAST(v0.c0 AS TEXT) COLLATE RTRIM;
SELECT DISTINCT vt0.c1, vt0.c0, vt0.c2 FROM vt1 CROSS JOIN v0 ON '497595857' RIGHT OUTER JOIN vt0 ON v0.c0;
SELECT DISTINCT vt0.c1, vt0.c0, vt0.c2 FROM vt1 CROSS JOIN v0 ON '497595857' RIGHT OUTER JOIN vt0 ON v0.c0 WHERE (SQLITE_COMPILEOPTION_GET(((((vt0.c0)OR(vt0.c0)))OR(NULL)))) UNION SELECT DISTINCT vt0.c1, vt0.c0, vt0.c2 FROM vt1 CROSS JOIN v0 ON '497595857' RIGHT OUTER JOIN vt0 ON v0.c0 WHERE ((NOT (SQLITE_COMPILEOPTION_GET(((((vt0.c0)OR(vt0.c0)))OR(NULL)))))) UNION SELECT DISTINCT vt0.c1, vt0.c0, vt0.c2 FROM vt1 CROSS JOIN v0 ON '497595857' RIGHT OUTER JOIN vt0 ON v0.c0 WHERE (((SQLITE_COMPILEOPTION_GET(((((vt0.c0)OR(vt0.c0)))OR(NULL)))) ISNULL));
SELECT DISTINCT vt0.c1, vt0.c0, vt0.c2 FROM vt1 CROSS JOIN v0 ON '497595857' RIGHT OUTER JOIN vt0 ON v0.c0;
SELECT ALL vt0.c2 FROM vt0, v0 NOT INDEXED, vt1 GROUP BY vt0.c2;
SELECT ALL vt0.c2 FROM vt0, v0, vt1 WHERE (((((vt1.c0) NOTNULL)) BETWEEN (vt0.c1 COLLATE RTRIM) AND ((- (v0.c0))))) GROUP BY vt0.c2 UNION SELECT ALL vt0.c2 FROM vt0, v0, vt1 WHERE ((NOT (((((vt1.c0) NOTNULL)) BETWEEN (vt0.c1 COLLATE RTRIM) AND ((- (v0.c0))))))) GROUP BY vt0.c2 UNION SELECT vt0.c2 FROM vt0, v0, vt1 WHERE (((((((vt1.c0) NOTNULL)) BETWEEN (vt0.c1 COLLATE RTRIM) AND ((- (v0.c0))))) ISNULL)) GROUP BY vt0.c2;
SELECT ALL vt0.c2 FROM vt0, v0 NOT INDEXED, vt1 GROUP BY vt0.c2;
SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING AVG(((vt2.c0) NOT BETWEEN (vt2.c0) AND (vt2.c0))) UNION ALL SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING (NOT (AVG(((vt2.c0) NOT BETWEEN (vt2.c0) AND (vt2.c0))))) UNION ALL SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING ((AVG(((vt2.c0) NOT BETWEEN (vt2.c0) AND (vt2.c0)))) ISNULL);
SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING AVG(((vt2.c0) NOT BETWEEN (vt2.c0) AND (vt2.c0))) UNION ALL SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING (NOT (AVG(((vt2.c0) NOT BETWEEN (vt2.c0) AND (vt2.c0))))) UNION ALL SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING ((AVG(((vt2.c0) NOT BETWEEN (vt2.c0) AND (vt2.c0)))) ISNULL);
SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT ALL * FROM vt1;
SELECT ALL * FROM vt1 NOT INDEXED WHERE (((((vt1.c0) NOTNULL)) IS FALSE)) UNION ALL SELECT * FROM vt1 WHERE ((NOT (((((vt1.c0) NOTNULL)) IS FALSE)))) UNION ALL SELECT * FROM vt1 WHERE (((((((vt1.c0) NOTNULL)) IS FALSE)) ISNULL));
SELECT ALL * FROM vt1;
SELECT DISTINCT * FROM v0 FULL OUTER JOIN vt0 ON CAST(((vt2.c0)<=(vt0.c1)) AS INTEGER) RIGHT OUTER JOIN vt2 ON ((((HEX(vt2.c0))AND((((v0.c0, vt2.c0, vt2.c0))>=((vt0.c1, vt2.c0, vt0.c2))))))AND(vt0.c0));
SELECT ALL vt0.c2, vt1.c0, vt0.c1, v0.c0, vt0.c0, vt2.c0 FROM vt1 LEFT OUTER JOIN vt2 ON ((((((v0.c0)OR(0.1454628731343015)))AND(vt1.c0))) NOT BETWEEN (((vt0.c2) BETWEEN (vt0.c2) AND (vt2.c0))) AND ('1206820166')) CROSS JOIN v0 ON ((((NULL)-(vt0.c1))) NOTNULL) LEFT OUTER JOIN vt0 ON v0.c0 GROUP BY vt0.c2, vt1.c0, vt0.c1, v0.c0, vt0.c0, vt2.c0;
SELECT ALL v0.c0 FROM v0, vt2 GROUP BY v0.c0;
SELECT v0.c0 FROM v0, vt2 GROUP BY v0.c0 HAVING ((SUM(v0.c0))<<(COUNT(*))) UNION ALL SELECT ALL v0.c0 FROM v0, vt2 GROUP BY v0.c0 HAVING (NOT (((SUM(v0.c0))<<(COUNT(*))))) UNION ALL SELECT ALL v0.c0 FROM v0, vt2 GROUP BY v0.c0 HAVING ((((SUM(v0.c0))<<(COUNT(*)))) ISNULL);
SELECT ALL v0.c0 FROM v0, vt2 GROUP BY v0.c0;
SELECT v0.c0 FROM v0, vt2 GROUP BY v0.c0 HAVING ((SUM(v0.c0))<<(COUNT(*))) UNION ALL SELECT ALL v0.c0 FROM v0, vt2 GROUP BY v0.c0 HAVING (NOT (((SUM(v0.c0))<<(COUNT(*))))) UNION ALL SELECT ALL v0.c0 FROM v0, vt2 GROUP BY v0.c0 HAVING ((((SUM(v0.c0))<<(COUNT(*)))) ISNULL);
SELECT ALL v0.c0 FROM v0, vt2 GROUP BY v0.c0;
SELECT * FROM v0;
SELECT ALL * FROM v0 WHERE (((v0.c0)>(v0.c0)) COLLATE RTRIM) UNION ALL SELECT * FROM v0 WHERE ((NOT (((v0.c0)>(v0.c0)) COLLATE RTRIM))) UNION ALL SELECT * FROM v0 WHERE (((((v0.c0)>(v0.c0)) COLLATE RTRIM) ISNULL));
SELECT * FROM v0;
SELECT DISTINCT v0.c0 FROM vt1, vt2 INNER JOIN v0 ON vt2.c0 COLLATE RTRIM;
SELECT DISTINCT v0.c0 FROM vt1, vt2 INNER JOIN v0 ON vt2.c0 COLLATE RTRIM WHERE ((((vt1.c0 IN ()))-((((v0.c0, x'', v0.c0))<=((vt2.c0, v0.c0, vt2.c0)))))) UNION SELECT DISTINCT v0.c0 FROM vt1, vt2 INNER JOIN v0 ON vt2.c0 COLLATE RTRIM WHERE ((NOT ((((vt1.c0 IN ()))-((((v0.c0, x'', v0.c0))<=((vt2.c0, v0.c0, vt2.c0)))))))) UNION SELECT DISTINCT v0.c0 FROM vt1, vt2 INNER JOIN v0 ON vt2.c0 COLLATE RTRIM WHERE ((((((vt1.c0 IN ()))-((((v0.c0, x'', v0.c0))<=((vt2.c0, v0.c0, vt2.c0)))))) ISNULL));
SELECT DISTINCT v0.c0 FROM vt1, vt2 INNER JOIN v0 ON vt2.c0 COLLATE RTRIM;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE ((((((((v0.c0))<((v0.c0))))OR(v0.c0 COLLATE NOCASE)))OR((v0.c0 IN (v0.c0))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT ((((((((v0.c0))<((v0.c0))))OR(v0.c0 COLLATE NOCASE)))OR((v0.c0 IN (v0.c0))))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((((((((((v0.c0))<((v0.c0))))OR(v0.c0 COLLATE NOCASE)))OR((v0.c0 IN (v0.c0))))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL vt2.c0, v0.c0 FROM v0, vt0, vt2, vt1 GROUP BY vt2.c0, v0.c0;
SELECT ALL vt2.c0, v0.c0 FROM v0, vt0, vt2, vt1 GROUP BY vt2.c0, v0.c0 HAVING ((TOTAL(TOTAL(AVG(MAX(vt2.c0))))) NOT NULL) UNION ALL SELECT vt2.c0, v0.c0 FROM v0, vt0, vt2, vt1 GROUP BY vt2.c0, v0.c0 HAVING (NOT (((TOTAL(TOTAL(AVG(MAX(vt2.c0))))) NOT NULL))) UNION ALL SELECT ALL vt2.c0, v0.c0 FROM v0, vt0, vt2, vt1 GROUP BY vt2.c0, v0.c0 HAVING ((((TOTAL(TOTAL(AVG(MAX(vt2.c0))))) NOT NULL)) ISNULL);
SELECT vt0.c2 FROM vt0;
SELECT vt0.c2 FROM vt0 WHERE (((vt0.c2 COLLATE BINARY) BETWEEN (vt0.c1 COLLATE NOCASE) AND ((((vt0.c2)) BETWEEN ((NULL)) AND ((vt0.c1)))))) UNION ALL SELECT ALL vt0.c2 FROM vt0 WHERE ((NOT (((vt0.c2 COLLATE BINARY) BETWEEN (vt0.c1 COLLATE NOCASE) AND ((((vt0.c2)) BETWEEN ((NULL)) AND ((vt0.c1)))))))) UNION ALL SELECT vt0.c2 FROM vt0 WHERE (((((vt0.c2 COLLATE BINARY) BETWEEN (vt0.c1 COLLATE NOCASE) AND ((((vt0.c2)) BETWEEN ((NULL)) AND ((vt0.c1)))))) ISNULL));
SELECT vt0.c2 FROM vt0;
SELECT DISTINCT * FROM vt0, vt2;
SELECT DISTINCT * FROM vt0, vt2 WHERE (CASE ((((((((((((vt0.c1)AND(vt0.c0)))OR(vt2.c0)))OR(vt2.c0)))AND('')))AND(vt0.c0)))OR(vt0.c2))  WHEN (('#_')<=(vt0.c2)) THEN x'' ELSE ((vt2.c0)<(vt2.c0)) END) UNION SELECT DISTINCT * FROM vt0, vt2 WHERE ((NOT (CASE ((((((((((((vt0.c1)AND(vt0.c0)))OR(vt2.c0)))OR(vt2.c0)))AND('')))AND(vt0.c0)))OR(vt0.c2))  WHEN (('#_')<=(vt0.c2)) THEN x'' ELSE ((vt2.c0)<(vt2.c0)) END))) UNION SELECT DISTINCT * FROM vt0, vt2 WHERE (((CASE ((((((((((((vt0.c1)AND(vt0.c0)))OR(vt2.c0)))OR(vt2.c0)))AND('')))AND(vt0.c0)))OR(vt0.c2))  WHEN (('#_')<=(vt0.c2)) THEN x'' ELSE ((vt2.c0)<(vt2.c0)) END) ISNULL));
SELECT DISTINCT * FROM vt0, vt2;
SELECT ALL vt2.c0, v0.c0, vt1.c0 FROM vt1 RIGHT OUTER JOIN v0 ON CASE (((vt2.c0)) BETWEEN ((vt1.c0)) AND ((vt2.c0)))  WHEN x'ffcf' THEN (v0.c0 IN ()) WHEN '7?' THEN ((vt2.c0)<=(vt1.c0)) WHEN (vt1.c0 IN ()) THEN (- (vt2.c0)) END CROSS JOIN vt2 ON CAST(-421336144 AS REAL) GROUP BY vt2.c0, v0.c0, vt1.c0;
SELECT ALL v0.c0 FROM vt1, v0 RIGHT OUTER JOIN vt2 ON ((((((vt2.c0)OR(vt1.c0)))AND(vt2.c0))) IS FALSE) GROUP BY v0.c0;
SELECT v0.c0 FROM vt1, v0 RIGHT OUTER JOIN vt2 ON ((((((vt2.c0)OR(vt1.c0)))AND(vt2.c0))) IS FALSE) GROUP BY v0.c0 HAVING CAST(((AVG(TOTAL(COUNT(*))))<(v0.c0)) AS TEXT) UNION ALL SELECT v0.c0 FROM vt1, v0 RIGHT OUTER JOIN vt2 ON ((((((vt2.c0)OR(vt1.c0)))AND(vt2.c0))) IS FALSE) GROUP BY v0.c0 HAVING (NOT (CAST(((AVG(TOTAL(COUNT(*))))<(v0.c0)) AS TEXT))) UNION ALL SELECT ALL v0.c0 FROM vt1, v0 RIGHT OUTER JOIN vt2 ON ((((((vt2.c0)OR(vt1.c0)))AND(vt2.c0))) IS FALSE) GROUP BY v0.c0 HAVING ((CAST(((AVG(TOTAL(COUNT(*))))<(v0.c0)) AS TEXT)) ISNULL);
SELECT ALL MIN((- ((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0)))))) FROM vt1 ORDER BY ((((vt1.c0) NOT NULL)) NOT BETWEEN ((NOT (vt1.c0))) AND ((+ (vt1.c0))))  NULLS LAST, ((vt1.c0) NOT BETWEEN (((vt1.c0)-(vt1.c0))) AND ((NOT (vt1.c0)))) ASC;
SELECT vt2.c0 FROM vt2 INNER JOIN v0 ON vt2.c0;
SELECT ALL vt2.c0 FROM vt2 INNER JOIN v0 ON vt2.c0 WHERE (IFNULL(DISTINCT (vt2.c0 IN ()), ((v0.c0)AND(v0.c0)))) UNION ALL SELECT vt2.c0 FROM vt2 INNER JOIN v0 ON vt2.c0 WHERE ((NOT (IFNULL(DISTINCT (vt2.c0 IN ()), ((v0.c0)AND(v0.c0)))))) UNION ALL SELECT ALL vt2.c0 FROM vt2 INNER JOIN v0 ON vt2.c0 WHERE (((IFNULL(DISTINCT (vt2.c0 IN ()), ((v0.c0)AND(v0.c0)))) ISNULL));
SELECT vt2.c0 FROM vt2 INNER JOIN v0 ON vt2.c0;
SELECT DISTINCT * FROM vt0, v0, vt1;
SELECT DISTINCT * FROM vt0, v0, vt1 WHERE ((((((+ (vt1.c0)))OR(((vt0.c1) IS FALSE))))OR(('386101514' IN ())))) UNION SELECT DISTINCT * FROM vt0, v0, vt1 WHERE ((NOT ((((((+ (vt1.c0)))OR(((vt0.c1) IS FALSE))))OR(('386101514' IN ())))))) UNION SELECT DISTINCT * FROM vt0, v0, vt1 WHERE ((((((((+ (vt1.c0)))OR(((vt0.c1) IS FALSE))))OR(('386101514' IN ())))) ISNULL));
SELECT DISTINCT * FROM vt0, v0, vt1;
SELECT vt0.c2, vt0.c0 FROM vt0 GROUP BY vt0.c2, vt0.c0;
SELECT vt0.c2, vt0.c0 FROM vt0 WHERE (((((((vt0.c1)-(vt0.c2)))AND(((vt0.c0) BETWEEN (vt0.c2) AND (vt0.c1)))))AND(vt0.c2))) GROUP BY vt0.c2, vt0.c0 UNION SELECT ALL vt0.c2, vt0.c0 FROM vt0 WHERE ((NOT (((((((vt0.c1)-(vt0.c2)))AND(((vt0.c0) BETWEEN (vt0.c2) AND (vt0.c1)))))AND(vt0.c2))))) GROUP BY vt0.c2, vt0.c0 UNION SELECT vt0.c2, vt0.c0 FROM vt0 WHERE (((((((((vt0.c1)-(vt0.c2)))AND(((vt0.c0) BETWEEN (vt0.c2) AND (vt0.c1)))))AND(vt0.c2))) ISNULL)) GROUP BY vt0.c2, vt0.c0;
SELECT vt0.c2, vt0.c0 FROM vt0 GROUP BY vt0.c2, vt0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (COUNT(*) IN ()) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT ((COUNT(*) IN ()))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (((COUNT(*) IN ())) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (COUNT(*) IN ()) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT ((COUNT(*) IN ()))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (((COUNT(*) IN ())) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL vt2.c0 FROM v0, vt1, vt0 FULL OUTER JOIN vt2 ON CAST(vt0.c1 AS NUMERIC) COLLATE RTRIM;
SELECT ALL vt2.c0 FROM v0, vt1, vt0 FULL OUTER JOIN vt2 ON CAST(vt0.c1 AS NUMERIC) COLLATE RTRIM WHERE (((((((((vt2.c0)OR(v0.c0)))OR(v0.c0)))AND(v0.c0)))AND(vt0.c2)) COLLATE RTRIM) UNION ALL SELECT vt2.c0 FROM v0, vt1, vt0 FULL OUTER JOIN vt2 ON CAST(vt0.c1 AS NUMERIC) COLLATE RTRIM WHERE ((NOT (((((((((vt2.c0)OR(v0.c0)))OR(v0.c0)))AND(v0.c0)))AND(vt0.c2)) COLLATE RTRIM))) UNION ALL SELECT ALL vt2.c0 FROM v0, vt1, vt0 FULL OUTER JOIN vt2 ON CAST(vt0.c1 AS NUMERIC) COLLATE RTRIM WHERE (((((((((((vt2.c0)OR(v0.c0)))OR(v0.c0)))AND(v0.c0)))AND(vt0.c2)) COLLATE RTRIM) ISNULL));
SELECT ALL vt2.c0 FROM v0, vt1, vt0 FULL OUTER JOIN vt2 ON CAST(vt0.c1 AS NUMERIC) COLLATE RTRIM;
SELECT DISTINCT vt2.c0 FROM vt2;
SELECT DISTINCT vt2.c0 FROM vt2 WHERE ((('811448436' COLLATE BINARY) NOT NULL)) UNION SELECT DISTINCT vt2.c0 FROM vt2 WHERE ((NOT ((('811448436' COLLATE BINARY) NOT NULL)))) UNION SELECT DISTINCT vt2.c0 FROM vt2 WHERE ((((('811448436' COLLATE BINARY) NOT NULL)) ISNULL));
SELECT DISTINCT vt2.c0 FROM vt2;
SELECT ALL vt0.c2, vt1.c0, vt0.c0, vt2.c0 FROM vt1, vt0 FULL OUTER JOIN vt2 ON (+ ('-1261538325')) GROUP BY vt0.c2, vt1.c0, vt0.c0, vt2.c0;
SELECT ALL vt0.c2, vt1.c0, vt0.c0, vt2.c0 FROM vt1, vt0 FULL OUTER JOIN vt2 ON (+ ('-1261538325')) WHERE ('') GROUP BY vt0.c2, vt1.c0, vt0.c0, vt2.c0 UNION SELECT ALL vt0.c2, vt1.c0, vt0.c0, vt2.c0 FROM vt1, vt0 FULL OUTER JOIN vt2 ON (+ ('-1261538325')) WHERE ((NOT (''))) GROUP BY vt0.c2, vt1.c0, vt0.c0, vt2.c0 UNION SELECT vt0.c2, vt1.c0, vt0.c0, vt2.c0 FROM vt1, vt0 FULL OUTER JOIN vt2 ON (+ ('-1261538325')) WHERE ((('') ISNULL)) GROUP BY vt0.c2, vt1.c0, vt0.c0, vt2.c0;
SELECT ALL vt0.c2, vt1.c0, vt0.c0, vt2.c0 FROM vt1, vt0 FULL OUTER JOIN vt2 ON (+ ('-1261538325')) GROUP BY vt0.c2, vt1.c0, vt0.c0, vt2.c0;
SELECT ALL vt0.c1, vt0.c2 FROM v0, vt0 GROUP BY vt0.c1, vt0.c2;
SELECT vt0.c1, vt0.c2 FROM v0, vt0 GROUP BY vt0.c1, vt0.c2 HAVING ((GROUP_CONCAT(x''))|(CASE WHEN COUNT(COUNT(*)) THEN SUM(vt0.c2) END)) UNION ALL SELECT vt0.c1, vt0.c2 FROM v0, vt0 GROUP BY vt0.c1, vt0.c2 HAVING (NOT (((GROUP_CONCAT(x''))|(CASE WHEN COUNT(COUNT(*)) THEN SUM(vt0.c2) END)))) UNION ALL SELECT vt0.c1, vt0.c2 FROM v0, vt0 GROUP BY vt0.c1, vt0.c2 HAVING ((((GROUP_CONCAT(x''))|(CASE WHEN COUNT(COUNT(*)) THEN SUM(vt0.c2) END))) ISNULL);
SELECT * FROM vt0;
SELECT ALL * FROM vt0 WHERE (CASE WHEN json_object(vt0.c1, x'a8c9') THEN vt0.c0 END) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (CASE WHEN json_object(vt0.c1, x'a8c9') THEN vt0.c0 END))) UNION ALL SELECT * FROM vt0 WHERE (((CASE WHEN json_object(vt0.c1, x'a8c9') THEN vt0.c0 END) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (((CASE v0.c0  WHEN NULL THEN v0.c0 ELSE v0.c0 END) NOTNULL)) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (((CASE v0.c0  WHEN NULL THEN v0.c0 ELSE v0.c0 END) NOTNULL)))) UNION SELECT DISTINCT * FROM v0 WHERE (((((CASE v0.c0  WHEN NULL THEN v0.c0 ELSE v0.c0 END) NOTNULL)) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE ((((v0.c0)) NOT BETWEEN ((CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)) AND ((((v0.c0)+(v0.c0)))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT ((((v0.c0)) NOT BETWEEN ((CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)) AND ((((v0.c0)+(v0.c0)))))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((((((v0.c0)) NOT BETWEEN ((CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)) AND ((((v0.c0)+(v0.c0)))))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0, vt0.c0, vt0.c2, vt0.c1 FROM vt1, vt2, vt0, v0 GROUP BY v0.c0, vt0.c0, vt0.c2, vt0.c1;
SELECT v0.c0, vt0.c0, vt0.c2, vt0.c1 FROM vt1, vt2, vt0, v0 GROUP BY v0.c0, vt0.c0, vt0.c2, vt0.c1 HAVING ((COUNT(*))||(SUM(GROUP_CONCAT(v0.c0)))) UNION ALL SELECT ALL v0.c0, vt0.c0, vt0.c2, vt0.c1 FROM vt1, vt2, vt0, v0 GROUP BY v0.c0, vt0.c0, vt0.c2, vt0.c1 HAVING (NOT (((COUNT(*))||(SUM(GROUP_CONCAT(v0.c0)))))) UNION ALL SELECT v0.c0, vt0.c0, vt0.c2, vt0.c1 FROM vt1, vt2, vt0, v0 GROUP BY v0.c0, vt0.c0, vt0.c2, vt0.c1 HAVING ((((COUNT(*))||(SUM(GROUP_CONCAT(v0.c0))))) ISNULL);
SELECT ALL MAX(vt1.c0) FROM v0, vt1, vt2 ORDER BY (((((vt1.c0)=(v0.c0))))<=(((('')>=(vt1.c0)))))  NULLS FIRST;
SELECT vt1.c0 FROM vt1;
SELECT vt1.c0 FROM vt1 WHERE ((((((vt1.c0 IN ()))AND(CASE WHEN vt1.c0 THEN vt1.c0 END)))AND((('+UM\n귎/') NOT BETWEEN (NULL) AND (vt1.c0))))) UNION ALL SELECT vt1.c0 FROM vt1 WHERE ((NOT ((((((vt1.c0 IN ()))AND(CASE WHEN vt1.c0 THEN vt1.c0 END)))AND((('+UM\n귎/') NOT BETWEEN (NULL) AND (vt1.c0))))))) UNION ALL SELECT vt1.c0 FROM vt1 WHERE ((((((((vt1.c0 IN ()))AND(CASE WHEN vt1.c0 THEN vt1.c0 END)))AND((('+UM\n귎/') NOT BETWEEN (NULL) AND (vt1.c0))))) ISNULL));
SELECT vt1.c0 FROM vt1;
SELECT DISTINCT vt2.c0 FROM vt2;
SELECT DISTINCT vt2.c0 FROM vt2 WHERE (x'') UNION SELECT DISTINCT vt2.c0 FROM vt2 WHERE ((NOT (x''))) UNION SELECT DISTINCT vt2.c0 FROM vt2 WHERE (((x'') ISNULL));
SELECT DISTINCT vt2.c0 FROM vt2;
SELECT vt1.c0 FROM vt2, vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt2, vt1 WHERE (((-37114418)==(vt2.c0)) COLLATE NOCASE) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt2, vt1 WHERE ((NOT (((-37114418)==(vt2.c0)) COLLATE NOCASE))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt2, vt1 WHERE (((((-37114418)=(vt2.c0)) COLLATE NOCASE) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt2, vt1 GROUP BY vt1.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING COUNT((((NULL))>=((v0.c0)))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (COUNT((((NULL))>=((v0.c0)))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((COUNT((((NULL))>=((v0.c0))))) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING COUNT((((NULL))>=((v0.c0)))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (COUNT((((NULL))>=((v0.c0)))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((COUNT((((NULL))>=((v0.c0))))) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT vt2.c0, vt0.c2, vt1.c0, vt0.c0, vt0.c1 FROM vt2, v0, vt0, vt1;
SELECT vt2.c0, vt0.c2, vt1.c0, vt0.c0, vt0.c1 FROM vt2, v0, vt0, vt1 WHERE (((((0.5200636180412601 COLLATE NOCASE)AND(((vt0.c0)+('0.9163465795617145')))))AND(json_insert(0.45632918710599557, vt0.c0, x'')))) UNION ALL SELECT vt2.c0, vt0.c2, vt1.c0, vt0.c0, vt0.c1 FROM vt2, v0, vt0, vt1 WHERE ((NOT (((((0.5200636180412601 COLLATE NOCASE)AND(((vt0.c0)+('0.9163465795617145')))))AND(json_insert(0.45632918710599557, vt0.c0, x'')))))) UNION ALL SELECT ALL vt2.c0, vt0.c2, vt1.c0, vt0.c0, vt0.c1 FROM vt2, v0, vt0, vt1 WHERE (((((((0.5200636180412601 COLLATE NOCASE)AND(((vt0.c0)+('0.9163465795617145')))))AND(json_insert(0.45632918710599557, vt0.c0, x'')))) ISNULL));
SELECT DISTINCT * FROM v0, vt1, vt0;
SELECT DISTINCT * FROM v0, vt1, vt0 WHERE (((NOT (v0.c0)) IN ())) UNION SELECT DISTINCT * FROM v0, vt1, vt0 WHERE ((NOT (((NOT (v0.c0)) IN ())))) UNION SELECT DISTINCT * FROM v0, vt1, vt0 WHERE (((((NOT (v0.c0)) IN ())) ISNULL));
SELECT DISTINCT * FROM v0, vt1, vt0;
SELECT ALL vt0.c0 FROM vt2, vt0, v0, vt1 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt2, vt0, v0, vt1 WHERE (((((vt2.c0) IS FALSE)) NOT BETWEEN (((vt0.c1) BETWEEN ('ZHwfu2s''u') AND (vt1.c0))) AND (((((((((vt0.c2)OR(0.5507425529213771)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c2))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt2, vt0, v0, vt1 WHERE ((NOT (((((vt2.c0) IS FALSE)) NOT BETWEEN (((vt0.c1) BETWEEN ('ZHwfu2s''u') AND (vt1.c0))) AND (((((((((vt0.c2)OR(0.5507425529213771)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c2))))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt2, vt0, v0, vt1 WHERE (((((((vt2.c0) IS FALSE)) NOT BETWEEN (((vt0.c1) BETWEEN ('ZHwfu2s''u') AND (vt1.c0))) AND (((((((((vt0.c2)OR(0.5507425529213771)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c2))))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt2, vt0, v0, vt1 GROUP BY vt0.c0;
SELECT v0.c0, vt0.c2, vt2.c0, vt1.c0, vt0.c1 FROM vt0, v0, vt1, vt2 GROUP BY v0.c0, vt0.c2, vt2.c0, vt1.c0, vt0.c1;
SELECT ALL v0.c0, vt0.c2, vt2.c0, vt1.c0, vt0.c1 FROM vt0, v0, vt1, vt2 GROUP BY v0.c0, vt0.c2, vt2.c0, vt1.c0, vt0.c1 HAVING (((((MIN(vt0.c0)))<((GROUP_CONCAT(vt1.c0))))) BETWEEN (TOTAL(MIN(AVG(vt0.c2)))) AND ((+ (MIN(v0.c0))))) UNION ALL SELECT ALL v0.c0, vt0.c2, vt2.c0, vt1.c0, vt0.c1 FROM vt0, v0, vt1, vt2 GROUP BY v0.c0, vt0.c2, vt2.c0, vt1.c0, vt0.c1 HAVING (NOT ((((((MIN(vt0.c0)))<((GROUP_CONCAT(vt1.c0))))) BETWEEN (TOTAL(MIN(AVG(vt0.c2)))) AND ((+ (MIN(v0.c0))))))) UNION ALL SELECT v0.c0, vt0.c2, vt2.c0, vt1.c0, vt0.c1 FROM vt0, v0, vt1, vt2 GROUP BY v0.c0, vt0.c2, vt2.c0, vt1.c0, vt0.c1 HAVING (((((((MIN(vt0.c0)))<((GROUP_CONCAT(vt1.c0))))) BETWEEN (TOTAL(MIN(AVG(vt0.c2)))) AND ((+ (MIN(v0.c0)))))) ISNULL);
SELECT ALL vt0.c0, vt0.c2 FROM vt1, vt0;
SELECT ALL vt0.c0, vt0.c2 FROM vt1, vt0 WHERE (((CAST(vt0.c1 AS INTEGER)) IS FALSE)) UNION ALL SELECT ALL vt0.c0, vt0.c2 FROM vt1, vt0 WHERE ((NOT (((CAST(vt0.c1 AS INTEGER)) IS FALSE)))) UNION ALL SELECT vt0.c0, vt0.c2 FROM vt1, vt0 WHERE (((((CAST(vt0.c1 AS INTEGER)) IS FALSE)) ISNULL));
SELECT ALL vt0.c0, vt0.c2 FROM vt1, vt0;
SELECT DISTINCT * FROM vt0, vt2, vt1;
SELECT DISTINCT * FROM vt0, vt2, vt1 WHERE ((~ (CAST(vt2.c0 AS INTEGER)))) UNION SELECT DISTINCT * FROM vt0, vt2, vt1 WHERE ((NOT ((~ (CAST(vt2.c0 AS INTEGER)))))) UNION SELECT DISTINCT * FROM vt0, vt2, vt1 WHERE ((((~ (CAST(vt2.c0 AS INTEGER)))) ISNULL));
SELECT DISTINCT * FROM vt0, vt2, vt1;
SELECT vt1.c0, vt2.c0, vt0.c2, vt0.c0 FROM vt0, vt1, vt2 CROSS JOIN v0 ON (((vt0.c0))<=((v0.c0))) COLLATE BINARY COLLATE NOCASE GROUP BY vt1.c0, vt2.c0, vt0.c2, vt0.c0;
SELECT ALL vt1.c0, vt2.c0, vt0.c2, vt0.c0 FROM vt0, vt1, vt2 CROSS JOIN v0 ON (((vt0.c0))<=((v0.c0))) COLLATE BINARY COLLATE NOCASE WHERE ((TYPEOF(v0.c0) IN ())) GROUP BY vt1.c0, vt2.c0, vt0.c2, vt0.c0 UNION SELECT vt1.c0, vt2.c0, vt0.c2, vt0.c0 FROM vt0, vt1, vt2 CROSS JOIN v0 ON (((vt0.c0))<=((v0.c0))) COLLATE BINARY COLLATE NOCASE WHERE ((NOT ((TYPEOF(v0.c0) IN ())))) GROUP BY vt1.c0, vt2.c0, vt0.c2, vt0.c0 UNION SELECT vt1.c0, vt2.c0, vt0.c2, vt0.c0 FROM vt0, vt1, vt2 CROSS JOIN v0 ON (((vt0.c0))<=((v0.c0))) COLLATE BINARY COLLATE NOCASE WHERE ((((TYPEOF(v0.c0) IN ())) ISNULL)) GROUP BY vt1.c0, vt2.c0, vt0.c2, vt0.c0;
SELECT vt1.c0, vt2.c0, vt0.c2, vt0.c0 FROM vt0, vt1, vt2 CROSS JOIN v0 ON (((vt0.c0))<=((v0.c0))) COLLATE BINARY COLLATE NOCASE GROUP BY vt1.c0, vt2.c0, vt0.c2, vt0.c0;
SELECT vt1.c0 FROM vt1, v0 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1, v0 GROUP BY vt1.c0 HAVING COUNT(MAX(vt1.c0)) UNION ALL SELECT ALL vt1.c0 FROM vt1, v0 GROUP BY vt1.c0 HAVING (NOT (COUNT(MAX(vt1.c0)))) UNION ALL SELECT vt1.c0 FROM vt1, v0 GROUP BY vt1.c0 HAVING ((COUNT(MAX(vt1.c0))) ISNULL);
SELECT vt0.c2, vt0.c1, vt0.c0, vt2.c0 FROM vt2, vt0;
SELECT vt0.c2, vt0.c1, vt0.c0, vt2.c0 FROM vt2, vt0 WHERE (CAST(((vt0.c1) BETWEEN (vt0.c2) AND (vt0.c1)) AS REAL)) UNION ALL SELECT ALL vt0.c2, vt0.c1, vt0.c0, vt2.c0 FROM vt2, vt0 WHERE ((NOT (CAST(((vt0.c1) BETWEEN (vt0.c2) AND (vt0.c1)) AS REAL)))) UNION ALL SELECT vt0.c2, vt0.c1, vt0.c0, vt2.c0 FROM vt2, vt0 WHERE (((CAST(((vt0.c1) BETWEEN (vt0.c2) AND (vt0.c1)) AS REAL)) ISNULL));
SELECT vt0.c2, vt0.c1, vt0.c0, vt2.c0 FROM vt2, vt0;
SELECT DISTINCT vt2.c0, v0.c0 FROM vt2, v0;
SELECT DISTINCT vt2.c0, v0.c0 FROM vt2 NOT INDEXED, v0 WHERE (CAST((- (v0.c0)) AS NUMERIC)) UNION SELECT DISTINCT vt2.c0, v0.c0 FROM vt2, v0 WHERE ((NOT (CAST((- (v0.c0)) AS NUMERIC)))) UNION SELECT DISTINCT vt2.c0, v0.c0 FROM vt2, v0 WHERE (((CAST((- (v0.c0)) AS NUMERIC)) ISNULL));
SELECT DISTINCT vt2.c0, v0.c0 FROM vt2, v0;
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0 WHERE (vt0.c1) GROUP BY vt0.c1 UNION SELECT ALL vt0.c1 FROM vt0 WHERE ((NOT (vt0.c1))) GROUP BY vt0.c1 UNION SELECT vt0.c1 FROM vt0 WHERE (((vt0.c1) ISNULL)) GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT v0.c0 FROM v0 RIGHT OUTER JOIN vt2 ON ((json_extract(vt2.c0, vt2.c0, v0.c0, vt2.c0))%(((v0.c0)IS NOT(vt2.c0)))) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 RIGHT OUTER JOIN vt2 ON ((json_extract(vt2.c0, vt2.c0, v0.c0, vt2.c0))%(((v0.c0)IS NOT(vt2.c0)))) GROUP BY v0.c0 HAVING GROUP_CONCAT((vt2.c0 IN (TOTAL(TOTAL(SUM(AVG(SUM(vt2.c0)))))))) UNION ALL SELECT v0.c0 FROM v0 RIGHT OUTER JOIN vt2 ON ((json_extract(vt2.c0, vt2.c0, v0.c0, vt2.c0))%(((v0.c0)IS NOT(vt2.c0)))) GROUP BY v0.c0 HAVING (NOT (GROUP_CONCAT((vt2.c0 IN (TOTAL(TOTAL(SUM(AVG(SUM(vt2.c0)))))))))) UNION ALL SELECT ALL v0.c0 FROM v0 RIGHT OUTER JOIN vt2 ON ((json_extract(vt2.c0, vt2.c0, v0.c0, vt2.c0))%(((v0.c0)IS NOT(vt2.c0)))) GROUP BY v0.c0 HAVING ((GROUP_CONCAT((vt2.c0 IN (TOTAL(TOTAL(SUM(AVG(SUM(vt2.c0))))))))) ISNULL);
SELECT * FROM vt1, vt2, vt0, v0;
SELECT ALL * FROM vt1, vt2, vt0, v0 WHERE (CAST(((((0.05701998418504661)AND(0.6581849848703573)))OR(vt0.c1)) AS TEXT)) UNION ALL SELECT * FROM vt1, vt2, vt0, v0 WHERE ((NOT (CAST(((((0.05701998418504661)AND(0.6581849848703573)))OR(vt0.c1)) AS TEXT)))) UNION ALL SELECT * FROM vt1, vt2, vt0, v0 WHERE (((CAST(((((0.05701998418504661)AND(0.6581849848703573)))OR(vt0.c1)) AS TEXT)) ISNULL));
SELECT * FROM vt1, vt2, vt0, v0;
SELECT DISTINCT vt1.c0 FROM vt1 INNER JOIN vt2 ON HEX(((vt2.c0) BETWEEN (vt2.c0) AND (vt2.c0)));
SELECT DISTINCT vt1.c0 FROM vt1 INNER JOIN vt2 ON HEX(((vt2.c0) BETWEEN (vt2.c0) AND (vt2.c0))) WHERE (((vt2.c0)IS NOT(vt1.c0)) COLLATE RTRIM) UNION SELECT DISTINCT vt1.c0 FROM vt1 INNER JOIN vt2 ON HEX(((vt2.c0) BETWEEN (vt2.c0) AND (vt2.c0))) WHERE ((NOT (((vt2.c0)IS NOT(vt1.c0)) COLLATE RTRIM))) UNION SELECT DISTINCT vt1.c0 FROM vt1 INNER JOIN vt2 ON HEX(((vt2.c0) BETWEEN (vt2.c0) AND (vt2.c0))) WHERE (((((vt2.c0)IS NOT(vt1.c0)) COLLATE RTRIM) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1 INNER JOIN vt2 ON HEX(((vt2.c0) BETWEEN (vt2.c0) AND (vt2.c0)));
SELECT ALL vt2.c0 FROM v0, vt1, vt2 GROUP BY vt2.c0;
SELECT ALL vt2.c0 FROM v0, vt1, vt2 WHERE (CASE v0.c0  WHEN (- (-2074876159)) THEN CAST(vt2.c0 AS NUMERIC) WHEN CAST(v0.c0 AS INTEGER) THEN 0.36309586502484903 WHEN ((((v0.c0)AND(vt1.c0)))AND(vt2.c0)) THEN ((-1.365027518E9)||(v0.c0)) ELSE (v0.c0 IN (vt1.c0, vt2.c0)) END) GROUP BY vt2.c0 UNION SELECT ALL vt2.c0 FROM v0, vt1, vt2 WHERE ((NOT (CASE v0.c0  WHEN (- (-2074876159)) THEN CAST(vt2.c0 AS NUMERIC) WHEN CAST(v0.c0 AS INTEGER) THEN 0.36309586502484903 WHEN ((((v0.c0)AND(vt1.c0)))AND(vt2.c0)) THEN ((-1.365027518E9)||(v0.c0)) ELSE (v0.c0 IN (vt1.c0, vt2.c0)) END))) GROUP BY vt2.c0 UNION SELECT vt2.c0 FROM v0, vt1, vt2 WHERE (((CASE v0.c0  WHEN (- (-2074876159)) THEN CAST(vt2.c0 AS NUMERIC) WHEN CAST(v0.c0 AS INTEGER) THEN 0.36309586502484903 WHEN ((((v0.c0)AND(vt1.c0)))AND(vt2.c0)) THEN ((-1.365027518E9)||(v0.c0)) ELSE (v0.c0 IN (vt1.c0, vt2.c0)) END) ISNULL)) GROUP BY vt2.c0;
SELECT ALL vt2.c0 FROM v0, vt1, vt2 GROUP BY vt2.c0;
SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING ((AVG(MIN(SUM(vt2.c0)))) NOT NULL) UNION ALL SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING (NOT (((AVG(MIN(SUM(vt2.c0)))) NOT NULL))) UNION ALL SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING ((((AVG(MIN(SUM(vt2.c0)))) NOT NULL)) ISNULL);
SELECT * FROM vt2;
SELECT * FROM vt2 WHERE (((((vt2.c0) NOT BETWEEN (vt2.c0) AND (vt2.c0)))>>(vt2.c0))) UNION ALL SELECT * FROM vt2 WHERE ((NOT (((((vt2.c0) NOT BETWEEN (vt2.c0) AND (vt2.c0)))>>(vt2.c0))))) UNION ALL SELECT * FROM vt2 WHERE (((((((vt2.c0) NOT BETWEEN (vt2.c0) AND (vt2.c0)))>>(vt2.c0))) ISNULL));
SELECT * FROM vt2;
SELECT DISTINCT * FROM vt0, v0, vt2 CROSS JOIN vt1 ON (((vt2.c0, vt2.c0, vt0.c1)) NOT BETWEEN ((CASE WHEN 1648276108 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c1 THEN vt0.c1 ELSE vt1.c0 END, ((vt2.c0) BETWEEN (vt0.c1) AND (v0.c0)), (- (vt1.c0)))) AND ((vt0.c0, vt0.c0, (((((((('')AND(vt0.c2)))OR(v0.c0)))OR(vt0.c0)))OR(v0.c0)))));
SELECT DISTINCT * FROM vt0, v0, vt2 CROSS JOIN vt1 ON (((vt2.c0, vt2.c0, vt0.c1)) NOT BETWEEN ((CASE WHEN 1648276108 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c1 THEN vt0.c1 ELSE vt1.c0 END, ((vt2.c0) BETWEEN (vt0.c1) AND (v0.c0)), (- (vt1.c0)))) AND ((vt0.c0, vt0.c0, (((((((('')AND(vt0.c2)))OR(v0.c0)))OR(vt0.c0)))OR(v0.c0))))) WHERE ((((vt2.c0) NOT BETWEEN (vt0.c2) AND (v0.c0)) IN ())) UNION SELECT DISTINCT * FROM vt0, v0, vt2 CROSS JOIN vt1 ON (((vt2.c0, vt2.c0, vt0.c1)) NOT BETWEEN ((CASE WHEN 1648276108 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c1 THEN vt0.c1 ELSE vt1.c0 END, ((vt2.c0) BETWEEN (vt0.c1) AND (v0.c0)), (- (vt1.c0)))) AND ((vt0.c0, vt0.c0, (((((((('')AND(vt0.c2)))OR(v0.c0)))OR(vt0.c0)))OR(v0.c0))))) WHERE ((NOT ((((vt2.c0) NOT BETWEEN (vt0.c2) AND (v0.c0)) IN ())))) UNION SELECT DISTINCT * FROM vt0, v0, vt2 CROSS JOIN vt1 ON (((vt2.c0, vt2.c0, vt0.c1)) NOT BETWEEN ((CASE WHEN 1648276108 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c1 THEN vt0.c1 ELSE vt1.c0 END, ((vt2.c0) BETWEEN (vt0.c1) AND (v0.c0)), (- (vt1.c0)))) AND ((vt0.c0, vt0.c0, (((((((('')AND(vt0.c2)))OR(v0.c0)))OR(vt0.c0)))OR(v0.c0))))) WHERE ((((((vt2.c0) NOT BETWEEN (vt0.c2) AND (v0.c0)) IN ())) ISNULL));
SELECT DISTINCT * FROM vt0, v0, vt2 CROSS JOIN vt1 ON (((vt2.c0, vt2.c0, vt0.c1)) NOT BETWEEN ((CASE WHEN 1648276108 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c1 THEN vt0.c1 ELSE vt1.c0 END, ((vt2.c0) BETWEEN (vt0.c1) AND (v0.c0)), (- (vt1.c0)))) AND ((vt0.c0, vt0.c0, (((((((('')AND(vt0.c2)))OR(v0.c0)))OR(vt0.c0)))OR(v0.c0)))));
SELECT ALL vt0.c1 FROM vt0, v0 GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0, v0 WHERE (((LIKELY(DISTINCT vt0.c0)) IS FALSE)) GROUP BY vt0.c1 UNION SELECT ALL vt0.c1 FROM vt0, v0 WHERE ((NOT (((LIKELY(DISTINCT vt0.c0)) IS FALSE)))) GROUP BY vt0.c1 UNION SELECT ALL vt0.c1 FROM vt0, v0 WHERE (((((LIKELY(DISTINCT vt0.c0)) IS FALSE)) ISNULL)) GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt0, v0 GROUP BY vt0.c1;
SELECT v0.c0, vt0.c0, vt2.c0 FROM v0, vt0, vt2, vt1 GROUP BY v0.c0, vt0.c0, vt2.c0;
SELECT ALL v0.c0, vt0.c0, vt2.c0 FROM v0, vt0, vt2, vt1 GROUP BY v0.c0, vt0.c0, vt2.c0 HAVING COUNT(*) UNION ALL SELECT v0.c0, vt0.c0, vt2.c0 FROM v0, vt0, vt2, vt1 GROUP BY v0.c0, vt0.c0, vt2.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL v0.c0, vt0.c0, vt2.c0 FROM v0, vt0, vt2, vt1 GROUP BY v0.c0, vt0.c0, vt2.c0 HAVING ((COUNT(*)) ISNULL);
SELECT v0.c0, vt0.c0, vt2.c0 FROM v0, vt0, vt2, vt1 GROUP BY v0.c0, vt0.c0, vt2.c0;
SELECT ALL v0.c0, vt0.c0, vt2.c0 FROM v0, vt0, vt2, vt1 GROUP BY v0.c0, vt0.c0, vt2.c0 HAVING COUNT(*) UNION ALL SELECT v0.c0, vt0.c0, vt2.c0 FROM v0, vt0, vt2, vt1 GROUP BY v0.c0, vt0.c0, vt2.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL v0.c0, vt0.c0, vt2.c0 FROM v0, vt0, vt2, vt1 GROUP BY v0.c0, vt0.c0, vt2.c0 HAVING ((COUNT(*)) ISNULL);
SELECT v0.c0, vt0.c0, vt2.c0 FROM v0, vt0, vt2, vt1 GROUP BY v0.c0, vt0.c0, vt2.c0;
SELECT v0.c0, vt0.c2, vt0.c0, vt0.c1, vt1.c0, vt2.c0 FROM v0, vt2, vt0, vt1;
SELECT v0.c0, vt0.c2, vt0.c0, vt0.c1, vt1.c0, vt2.c0 FROM v0, vt2, vt0, vt1 WHERE (RTRIM(((v0.c0)&(vt1.c0)))) UNION ALL SELECT ALL v0.c0, vt0.c2, vt0.c0, vt0.c1, vt1.c0, vt2.c0 FROM v0, vt2, vt0, vt1 WHERE ((NOT (RTRIM(((v0.c0)&(vt1.c0)))))) UNION ALL SELECT v0.c0, vt0.c2, vt0.c0, vt0.c1, vt1.c0, vt2.c0 FROM v0, vt2, vt0, vt1 WHERE (((RTRIM(((v0.c0)&(vt1.c0)))) ISNULL));
SELECT v0.c0, vt0.c2, vt0.c0, vt0.c1, vt1.c0, vt2.c0 FROM v0, vt2, vt0, vt1;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((- (vt0.c2)) IN (CAST(vt0.c2 AS REAL)))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((- (vt0.c2)) IN (CAST(vt0.c2 AS REAL)))))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((- (vt0.c2)) IN (CAST(vt0.c2 AS REAL)))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL vt0.c1 FROM vt1 FULL OUTER JOIN vt0 ON (- ((((vt0.c1)) BETWEEN ((vt1.c0)) AND ((vt0.c1))))) LEFT OUTER JOIN vt2 ON CAST((vt2.c0 IN ()) AS BLOB) GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt1 FULL OUTER JOIN vt0 ON (- ((((vt0.c1)) BETWEEN ((vt1.c0)) AND ((vt0.c1))))) LEFT OUTER JOIN vt2 ON CAST((vt2.c0 IN ()) AS BLOB) WHERE (SQLITE_SOURCE_ID()) GROUP BY vt0.c1 UNION SELECT ALL vt0.c1 FROM vt1 FULL OUTER JOIN vt0 ON (- ((((vt0.c1)) BETWEEN ((vt1.c0)) AND ((vt0.c1))))) LEFT OUTER JOIN vt2 ON CAST((vt2.c0 IN ()) AS BLOB) WHERE ((NOT (SQLITE_SOURCE_ID()))) GROUP BY vt0.c1 UNION SELECT vt0.c1 FROM vt1 FULL OUTER JOIN vt0 ON (- ((((vt0.c1)) BETWEEN ((vt1.c0)) AND ((vt0.c1))))) LEFT OUTER JOIN vt2 ON CAST((vt2.c0 IN ()) AS BLOB) WHERE (((SQLITE_SOURCE_ID()) ISNULL)) GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt1 FULL OUTER JOIN vt0 ON (- ((((vt0.c1)) BETWEEN ((vt1.c0)) AND ((vt0.c1))))) LEFT OUTER JOIN vt2 ON CAST((vt2.c0 IN ()) AS BLOB) GROUP BY vt0.c1;
SELECT ALL vt0.c2, vt0.c0, vt2.c0, vt0.c1, vt1.c0 FROM vt2, vt1, vt0 GROUP BY vt0.c2, vt0.c0, vt2.c0, vt0.c1, vt1.c0;
SELECT ALL vt0.c2, vt0.c0, vt2.c0, vt0.c1, vt1.c0 FROM vt2, vt1, vt0 GROUP BY vt0.c2, vt0.c0, vt2.c0, vt0.c1, vt1.c0 HAVING CASE SUM(vt2.c0)  WHEN (+ (GROUP_CONCAT(vt0.c1))) THEN ((vt0.c0)IS(vt0.c1)) END UNION ALL SELECT ALL vt0.c2, vt0.c0, vt2.c0, vt0.c1, vt1.c0 FROM vt2, vt1, vt0 GROUP BY vt0.c2, vt0.c0, vt2.c0, vt0.c1, vt1.c0 HAVING (NOT (CASE SUM(vt2.c0)  WHEN (+ (GROUP_CONCAT(vt0.c1))) THEN ((vt0.c0)IS(vt0.c1)) END)) UNION ALL SELECT ALL vt0.c2, vt0.c0, vt2.c0, vt0.c1, vt1.c0 FROM vt2, vt1, vt0 GROUP BY vt0.c2, vt0.c0, vt2.c0, vt0.c1, vt1.c0 HAVING ((CASE SUM(vt2.c0)  WHEN (+ (GROUP_CONCAT(vt0.c1))) THEN ((vt0.c0)IS(vt0.c1)) END) ISNULL);
SELECT ALL vt0.c2, vt0.c0, vt2.c0, vt0.c1, vt1.c0 FROM vt2, vt1, vt0 GROUP BY vt0.c2, vt0.c0, vt2.c0, vt0.c1, vt1.c0;
SELECT ALL vt0.c2, vt0.c0, vt2.c0, vt0.c1, vt1.c0 FROM vt2, vt1, vt0 GROUP BY vt0.c2, vt0.c0, vt2.c0, vt0.c1, vt1.c0 HAVING CASE SUM(vt2.c0)  WHEN (+ (GROUP_CONCAT(vt0.c1))) THEN ((vt0.c0)IS(vt0.c1)) END UNION ALL SELECT ALL vt0.c2, vt0.c0, vt2.c0, vt0.c1, vt1.c0 FROM vt2, vt1, vt0 GROUP BY vt0.c2, vt0.c0, vt2.c0, vt0.c1, vt1.c0 HAVING (NOT (CASE SUM(vt2.c0)  WHEN (+ (GROUP_CONCAT(vt0.c1))) THEN ((vt0.c0)IS(vt0.c1)) END)) UNION ALL SELECT ALL vt0.c2, vt0.c0, vt2.c0, vt0.c1, vt1.c0 FROM vt2, vt1, vt0 GROUP BY vt0.c2, vt0.c0, vt2.c0, vt0.c1, vt1.c0 HAVING ((CASE SUM(vt2.c0)  WHEN (+ (GROUP_CONCAT(vt0.c1))) THEN ((vt0.c0)IS(vt0.c1)) END) ISNULL);
SELECT ALL vt0.c2, vt0.c0, vt2.c0, vt0.c1, vt1.c0 FROM vt2, vt1, vt0 GROUP BY vt0.c2, vt0.c0, vt2.c0, vt0.c1, vt1.c0;
SELECT ALL vt2.c0 FROM vt0, vt1, v0, vt2;
SELECT vt2.c0 FROM vt0, vt1, v0, vt2 WHERE (CAST(((vt0.c0)IS NOT(vt2.c0)) AS REAL)) UNION ALL SELECT vt2.c0 FROM vt0, vt1, v0, vt2 WHERE ((NOT (CAST(((vt0.c0)IS NOT(vt2.c0)) AS REAL)))) UNION ALL SELECT ALL vt2.c0 FROM vt0, vt1, v0, vt2 WHERE (((CAST(((vt0.c0)IS NOT(vt2.c0)) AS REAL)) ISNULL));
SELECT ALL vt2.c0 FROM vt0, vt1, v0, vt2;
SELECT DISTINCT vt0.c2, vt0.c0 FROM vt0, vt2;
SELECT DISTINCT vt0.c2, vt0.c0 FROM vt0, vt2 WHERE (NULL) UNION SELECT DISTINCT vt0.c2, vt0.c0 FROM vt0, vt2 WHERE ((NOT (NULL))) UNION SELECT DISTINCT vt0.c2, vt0.c0 FROM vt0, vt2 WHERE (((NULL) ISNULL));
SELECT DISTINCT vt0.c2, vt0.c0 FROM vt0, vt2;
SELECT ALL vt2.c0, vt1.c0, vt0.c2 FROM vt2, v0, vt1, vt0 GROUP BY vt2.c0, vt1.c0, vt0.c2;
SELECT vt2.c0, vt1.c0, vt0.c2 FROM vt2, v0, vt1, vt0 WHERE ((((vt2.c0)) NOT BETWEEN ((((NULL)%(vt0.c2)))) AND ((NULL)))) GROUP BY vt2.c0, vt1.c0, vt0.c2 UNION SELECT vt2.c0, vt1.c0, vt0.c2 FROM vt2, v0, vt1, vt0 WHERE ((NOT ((((vt2.c0)) NOT BETWEEN ((((NULL)%(vt0.c2)))) AND ((NULL)))))) GROUP BY vt2.c0, vt1.c0, vt0.c2 UNION SELECT ALL vt2.c0, vt1.c0, vt0.c2 FROM vt2, v0, vt1, vt0 WHERE ((((((vt2.c0)) NOT BETWEEN ((((NULL)%(vt0.c2)))) AND ((NULL)))) ISNULL)) GROUP BY vt2.c0, vt1.c0, vt0.c2;
SELECT ALL vt2.c0, vt1.c0, vt0.c2 FROM vt2, v0, vt1, vt0 GROUP BY vt2.c0, vt1.c0, vt0.c2;
SELECT vt0.c2, vt0.c1, vt2.c0 FROM v0, vt1, vt0 INNER JOIN vt2 ON ((((vt0.c0)>=(vt0.c1))) NOT BETWEEN ((vt0.c2 IN (vt0.c1))) AND (CASE v0.c0  WHEN vt1.c0 THEN v0.c0 ELSE vt2.c0 END)) GROUP BY vt0.c2, vt0.c1, vt2.c0;
SELECT vt0.c2, vt0.c1, vt2.c0 FROM v0, vt1, vt0 INNER JOIN vt2 ON ((((vt0.c0)>=(vt0.c1))) NOT BETWEEN ((vt0.c2 IN (vt0.c1))) AND (CASE v0.c0  WHEN vt1.c0 THEN v0.c0 ELSE vt2.c0 END)) GROUP BY vt0.c2, vt0.c1, vt2.c0 HAVING TOTAL(((vt0.c1)!=(vt0.c1))) UNION ALL SELECT vt0.c2, vt0.c1, vt2.c0 FROM v0, vt1 NOT INDEXED, vt0 INNER JOIN vt2 ON ((((vt0.c0)>=(vt0.c1))) NOT BETWEEN ((vt0.c2 IN (vt0.c1))) AND (CASE v0.c0  WHEN vt1.c0 THEN v0.c0 ELSE vt2.c0 END)) GROUP BY vt0.c2, vt0.c1, vt2.c0 HAVING (NOT (TOTAL(((vt0.c1)<>(vt0.c1))))) UNION ALL SELECT ALL vt0.c2, vt0.c1, vt2.c0 FROM v0, vt1, vt0 INNER JOIN vt2 ON ((((vt0.c0)>=(vt0.c1))) NOT BETWEEN ((vt0.c2 IN (vt0.c1))) AND (CASE v0.c0  WHEN vt1.c0 THEN v0.c0 ELSE vt2.c0 END)) GROUP BY vt0.c2, vt0.c1, vt2.c0 HAVING ((TOTAL(((vt0.c1)!=(vt0.c1)))) ISNULL);
SELECT vt0.c2, vt0.c1, vt2.c0 FROM v0, vt1, vt0 INNER JOIN vt2 ON ((((vt0.c0)>=(vt0.c1))) NOT BETWEEN ((vt0.c2 IN (vt0.c1))) AND (CASE v0.c0  WHEN vt1.c0 THEN v0.c0 ELSE vt2.c0 END)) GROUP BY vt0.c2, vt0.c1, vt2.c0;
SELECT vt0.c2, vt0.c1, vt2.c0 FROM v0, vt1, vt0 INNER JOIN vt2 ON ((((vt0.c0)>=(vt0.c1))) NOT BETWEEN ((vt0.c2 IN (vt0.c1))) AND (CASE v0.c0  WHEN vt1.c0 THEN v0.c0 ELSE vt2.c0 END)) GROUP BY vt0.c2, vt0.c1, vt2.c0 HAVING TOTAL(((vt0.c1)!=(vt0.c1))) UNION ALL SELECT vt0.c2, vt0.c1, vt2.c0 FROM v0, vt1 NOT INDEXED, vt0 INNER JOIN vt2 ON ((((vt0.c0)>=(vt0.c1))) NOT BETWEEN ((vt0.c2 IN (vt0.c1))) AND (CASE v0.c0  WHEN vt1.c0 THEN v0.c0 ELSE vt2.c0 END)) GROUP BY vt0.c2, vt0.c1, vt2.c0 HAVING (NOT (TOTAL(((vt0.c1)<>(vt0.c1))))) UNION ALL SELECT ALL vt0.c2, vt0.c1, vt2.c0 FROM v0, vt1, vt0 INNER JOIN vt2 ON ((((vt0.c0)>=(vt0.c1))) NOT BETWEEN ((vt0.c2 IN (vt0.c1))) AND (CASE v0.c0  WHEN vt1.c0 THEN v0.c0 ELSE vt2.c0 END)) GROUP BY vt0.c2, vt0.c1, vt2.c0 HAVING ((TOTAL(((vt0.c1)!=(vt0.c1)))) ISNULL);
SELECT vt0.c2, vt0.c1, vt2.c0 FROM v0, vt1, vt0 INNER JOIN vt2 ON ((((vt0.c0)>=(vt0.c1))) NOT BETWEEN ((vt0.c2 IN (vt0.c1))) AND (CASE v0.c0  WHEN vt1.c0 THEN v0.c0 ELSE vt2.c0 END)) GROUP BY vt0.c2, vt0.c1, vt2.c0;
SELECT ALL * FROM v0, vt0;
SELECT ALL * FROM v0, vt0 WHERE (vt0.c2) UNION ALL SELECT * FROM v0, vt0 WHERE ((NOT (vt0.c2))) UNION ALL SELECT ALL * FROM v0, vt0 WHERE (((vt0.c2) ISNULL));
SELECT ALL * FROM v0, vt0;
SELECT DISTINCT vt0.c0 FROM vt0 LEFT OUTER JOIN vt2 ON ((((vt0.c1)-(vt0.c1))) IS FALSE);
SELECT DISTINCT vt0.c0 FROM vt0 LEFT OUTER JOIN vt2 ON ((((vt0.c1)-(vt0.c1))) IS FALSE) WHERE ((CASE vt0.c1  WHEN vt2.c0 THEN vt0.c2 WHEN vt2.c0 THEN 557374289 WHEN 0.3157855189754373 THEN vt0.c1 END IN ())) UNION SELECT DISTINCT vt0.c0 FROM vt0 LEFT OUTER JOIN vt2 ON ((((vt0.c1)-(vt0.c1))) IS FALSE) WHERE ((NOT ((CASE vt0.c1  WHEN vt2.c0 THEN vt0.c2 WHEN vt2.c0 THEN 557374289 WHEN 0.3157855189754373 THEN vt0.c1 END IN ())))) UNION SELECT DISTINCT vt0.c0 FROM vt0 LEFT OUTER JOIN vt2 ON ((((vt0.c1)-(vt0.c1))) IS FALSE) WHERE ((((CASE vt0.c1  WHEN vt2.c0 THEN vt0.c2 WHEN vt2.c0 THEN 557374289 WHEN 0.3157855189754373 THEN vt0.c1 END IN ())) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0 LEFT OUTER JOIN vt2 ON ((((vt0.c1)-(vt0.c1))) IS FALSE);
SELECT vt0.c0 FROM vt2 LEFT OUTER JOIN vt0 ON vt0.c2 INNER JOIN v0 ON ((((vt0.c0)>(vt0.c1)))%(((vt0.c0)<<(vt2.c0)))) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt2 LEFT OUTER JOIN vt0 ON vt0.c2 INNER JOIN v0 ON ((((vt0.c0)>(vt0.c1)))%(((vt0.c0)<<(vt2.c0)))) WHERE (((v0.c0)>>(vt0.c1)) COLLATE RTRIM COLLATE BINARY) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt2 LEFT OUTER JOIN vt0 ON vt0.c2 INNER JOIN v0 ON ((((vt0.c0)>(vt0.c1)))%(((vt0.c0)<<(vt2.c0)))) WHERE ((NOT (((v0.c0)>>(vt0.c1)) COLLATE RTRIM COLLATE BINARY))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt2 LEFT OUTER JOIN vt0 ON vt0.c2 INNER JOIN v0 ON ((((vt0.c0)>(vt0.c1)))%(((vt0.c0)<<(vt2.c0)))) WHERE (((((v0.c0)>>(vt0.c1)) COLLATE RTRIM COLLATE BINARY) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt2 LEFT OUTER JOIN vt0 ON vt0.c2 INNER JOIN v0 ON ((((vt0.c0)>(vt0.c1)))%(((vt0.c0)<<(vt2.c0)))) GROUP BY vt0.c0;
SELECT vt1.c0, vt2.c0 FROM vt0 LEFT OUTER JOIN vt2 ON CASE (- (vt2.c0))  WHEN 0.2752186492095451 THEN (('1159984227') IS FALSE) ELSE ((vt0.c0)AND(v0.c0)) END INNER JOIN vt1 ON (((((((vt0.c2))!=((vt0.c0))))OR((((vt0.c2)) BETWEEN ((vt0.c2)) AND ((v0.c0))))))OR(((vt2.c0) NOT BETWEEN (v0.c0) AND (vt0.c2)))) LEFT OUTER JOIN v0 ON CASE WHEN ((vt2.c0)LIKE(vt1.c0)) THEN UNLIKELY(vt1.c0) WHEN (((((((('-640249505')AND(vt2.c0)))OR(vt0.c1)))OR(vt0.c2)))AND(0Xffffffffc3ced6d1)) THEN (('1132908567')GLOB(vt2.c0)) WHEN (v0.c0 IN (vt0.c2, vt0.c2)) THEN UPPER('-942650128') ELSE ((vt2.c0) IS TRUE) END GROUP BY vt1.c0, vt2.c0;
SELECT * FROM vt1, vt2;
SELECT ALL * FROM vt1, vt2 WHERE (CAST(CASE WHEN vt2.c0 THEN x'd0af' ELSE vt2.c0 END AS TEXT)) UNION ALL SELECT * FROM vt1, vt2 WHERE ((NOT (CAST(CASE WHEN vt2.c0 THEN x'd0af' ELSE vt2.c0 END AS TEXT)))) UNION ALL SELECT * FROM vt1, vt2 WHERE (((CAST(CASE WHEN vt2.c0 THEN x'd0af' ELSE vt2.c0 END AS TEXT)) ISNULL));
SELECT * FROM vt1, vt2;
SELECT DISTINCT vt2.c0, vt0.c1, vt0.c2, v0.c0, vt1.c0, vt0.c0 FROM vt1, vt2, vt0, v0;
SELECT DISTINCT vt2.c0, vt0.c1, vt0.c2, v0.c0, vt1.c0, vt0.c0 FROM vt1, vt2, vt0, v0 WHERE ('1206820166') UNION SELECT DISTINCT vt2.c0, vt0.c1, vt0.c2, v0.c0, vt1.c0, vt0.c0 FROM vt1, vt2, vt0, v0 WHERE ((NOT ('1206820166'))) UNION SELECT DISTINCT vt2.c0, vt0.c1, vt0.c2, v0.c0, vt1.c0, vt0.c0 FROM vt1, vt2, vt0, v0 WHERE ((('1206820166') ISNULL));
SELECT DISTINCT vt2.c0, vt0.c1, vt0.c2, v0.c0, vt1.c0, vt0.c0 FROM vt1, vt2, vt0, v0;
SELECT vt0.c2, vt0.c1, vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c2, vt0.c1, vt0.c0, v0.c0;
SELECT vt0.c2, vt0.c1, vt0.c0, v0.c0 FROM v0, vt0 WHERE (((((v0.c0 COLLATE NOCASE)AND(((v0.c0)OR(v0.c0)))))OR(((((vt0.c0)AND(vt0.c1)))AND(vt0.c0))))) GROUP BY vt0.c2, vt0.c1, vt0.c0, v0.c0 UNION SELECT ALL vt0.c2, vt0.c1, vt0.c0, v0.c0 FROM v0, vt0 WHERE ((NOT (((((v0.c0 COLLATE NOCASE)AND(((v0.c0)OR(v0.c0)))))OR(((((vt0.c0)AND(vt0.c1)))AND(vt0.c0))))))) GROUP BY vt0.c2, vt0.c1, vt0.c0, v0.c0 UNION SELECT ALL vt0.c2, vt0.c1, vt0.c0, v0.c0 FROM v0, vt0 WHERE (((((((v0.c0 COLLATE NOCASE)AND(((v0.c0)OR(v0.c0)))))OR(((((vt0.c0)AND(vt0.c1)))AND(vt0.c0))))) ISNULL)) GROUP BY vt0.c2, vt0.c1, vt0.c0, v0.c0;
SELECT vt0.c2, vt0.c1, vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c2, vt0.c1, vt0.c0, v0.c0;
SELECT vt1.c0 FROM vt1, v0 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1, v0 GROUP BY vt1.c0 HAVING v0.c0 UNION ALL SELECT ALL vt1.c0 FROM vt1, v0 GROUP BY vt1.c0 HAVING (NOT (v0.c0)) UNION ALL SELECT ALL vt1.c0 FROM vt1, v0 GROUP BY vt1.c0 HAVING ((v0.c0) ISNULL);
SELECT vt1.c0 FROM vt1, v0 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1, v0 GROUP BY vt1.c0 HAVING v0.c0 UNION ALL SELECT ALL vt1.c0 FROM vt1, v0 GROUP BY vt1.c0 HAVING (NOT (v0.c0)) UNION ALL SELECT ALL vt1.c0 FROM vt1, v0 GROUP BY vt1.c0 HAVING ((v0.c0) ISNULL);
SELECT vt1.c0 FROM vt1, v0 GROUP BY vt1.c0;
SELECT ALL vt2.c0 FROM v0 NOT INDEXED, vt2;
SELECT ALL vt2.c0 FROM v0, vt2 WHERE (HEX((((v0.c0)) BETWEEN ((vt2.c0)) AND ((v0.c0))))) UNION ALL SELECT ALL vt2.c0 FROM v0, vt2 WHERE ((NOT (HEX((((v0.c0)) BETWEEN ((vt2.c0)) AND ((v0.c0))))))) UNION ALL SELECT ALL vt2.c0 FROM v0, vt2 WHERE (((HEX((((v0.c0)) BETWEEN ((vt2.c0)) AND ((v0.c0))))) ISNULL));
SELECT ALL vt2.c0 FROM v0 NOT INDEXED, vt2;
SELECT DISTINCT * FROM vt1, vt0, vt2;
SELECT DISTINCT * FROM vt1, vt0, vt2 WHERE (((vt0.c2) ISNULL)) UNION SELECT DISTINCT * FROM vt1, vt0, vt2 WHERE ((NOT (((vt0.c2) ISNULL)))) UNION SELECT DISTINCT * FROM vt1, vt0, vt2 WHERE (((((vt0.c2) ISNULL)) ISNULL));
SELECT DISTINCT * FROM vt1, vt0, vt2;
SELECT ALL vt1.c0, v0.c0, vt2.c0, vt0.c1 FROM v0, vt0, vt1, vt2 GROUP BY vt1.c0, v0.c0, vt2.c0, vt0.c1;
SELECT ALL vt1.c0, v0.c0, vt2.c0, vt0.c1 FROM v0, vt0, vt1, vt2 WHERE (((CASE vt0.c1  WHEN vt0.c1 THEN v0.c0 ELSE vt1.c0 END) NOT BETWEEN (CASE vt0.c2  WHEN vt0.c0 THEN vt0.c2 WHEN vt1.c0 THEN vt0.c2 WHEN vt2.c0 THEN vt0.c2 END) AND ((v0.c0 IN (0.8628045317439036))))) GROUP BY vt1.c0, v0.c0, vt2.c0, vt0.c1 UNION SELECT vt1.c0, v0.c0, vt2.c0, vt0.c1 FROM v0, vt0, vt1, vt2 WHERE ((NOT (((CASE vt0.c1  WHEN vt0.c1 THEN v0.c0 ELSE vt1.c0 END) NOT BETWEEN (CASE vt0.c2  WHEN vt0.c0 THEN vt0.c2 WHEN vt1.c0 THEN vt0.c2 WHEN vt2.c0 THEN vt0.c2 END) AND ((v0.c0 IN (0.8628045317439036))))))) GROUP BY vt1.c0, v0.c0, vt2.c0, vt0.c1 UNION SELECT vt1.c0, v0.c0, vt2.c0, vt0.c1 FROM v0, vt0, vt1, vt2 WHERE (((((CASE vt0.c1  WHEN vt0.c1 THEN v0.c0 ELSE vt1.c0 END) NOT BETWEEN (CASE vt0.c2  WHEN vt0.c0 THEN vt0.c2 WHEN vt1.c0 THEN vt0.c2 WHEN vt2.c0 THEN vt0.c2 END) AND ((v0.c0 IN (0.8628045317439036))))) ISNULL)) GROUP BY vt1.c0, v0.c0, vt2.c0, vt0.c1;
SELECT ALL vt1.c0, v0.c0, vt2.c0, vt0.c1 FROM v0, vt0, vt1, vt2 GROUP BY vt1.c0, v0.c0, vt2.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c2, vt0.c1 FROM vt2, vt0, vt1 RIGHT OUTER JOIN v0 ON (((vt0.c2 IN ()))<>(((vt2.c0) NOT BETWEEN (vt0.c2) AND (vt0.c1)))) GROUP BY vt0.c0, vt0.c2, vt0.c1;
SELECT vt0.c0, vt0.c2, vt0.c1 FROM vt2, vt0, vt1 RIGHT OUTER JOIN v0 ON (((vt0.c2 IN ()))!=(((vt2.c0) NOT BETWEEN (vt0.c2) AND (vt0.c1)))) GROUP BY vt0.c0, vt0.c2, vt0.c1 HAVING COUNT(*) UNION ALL SELECT vt0.c0, vt0.c2, vt0.c1 FROM vt2, vt0, vt1 RIGHT OUTER JOIN v0 ON (((vt0.c2 IN ()))!=(((vt2.c0) NOT BETWEEN (vt0.c2) AND (vt0.c1)))) GROUP BY vt0.c0, vt0.c2, vt0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt0.c0, vt0.c2, vt0.c1 FROM vt2, vt0, vt1 RIGHT OUTER JOIN v0 ON (((vt0.c2 IN ()))!=(((vt2.c0) NOT BETWEEN (vt0.c2) AND (vt0.c1)))) GROUP BY vt0.c0, vt0.c2, vt0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt0.c0, vt0.c2, vt0.c1 FROM vt2, vt0, vt1 RIGHT OUTER JOIN v0 ON (((vt0.c2 IN ()))<>(((vt2.c0) NOT BETWEEN (vt0.c2) AND (vt0.c1)))) GROUP BY vt0.c0, vt0.c2, vt0.c1;
SELECT vt0.c0, vt0.c2, vt0.c1 FROM vt2, vt0, vt1 RIGHT OUTER JOIN v0 ON (((vt0.c2 IN ()))!=(((vt2.c0) NOT BETWEEN (vt0.c2) AND (vt0.c1)))) GROUP BY vt0.c0, vt0.c2, vt0.c1 HAVING COUNT(*) UNION ALL SELECT vt0.c0, vt0.c2, vt0.c1 FROM vt2, vt0, vt1 RIGHT OUTER JOIN v0 ON (((vt0.c2 IN ()))!=(((vt2.c0) NOT BETWEEN (vt0.c2) AND (vt0.c1)))) GROUP BY vt0.c0, vt0.c2, vt0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt0.c0, vt0.c2, vt0.c1 FROM vt2, vt0, vt1 RIGHT OUTER JOIN v0 ON (((vt0.c2 IN ()))!=(((vt2.c0) NOT BETWEEN (vt0.c2) AND (vt0.c1)))) GROUP BY vt0.c0, vt0.c2, vt0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt0.c0, vt0.c2, vt0.c1 FROM vt2, vt0, vt1 RIGHT OUTER JOIN v0 ON (((vt0.c2 IN ()))<>(((vt2.c0) NOT BETWEEN (vt0.c2) AND (vt0.c1)))) GROUP BY vt0.c0, vt0.c2, vt0.c1;
SELECT TOTAL(((((0.04499277520047096))>((vt2.c0))) IN ())) FROM vt2, v0 ORDER BY ((((v0.c0)|(vt2.c0))) IS TRUE)  NULLS LAST, CAST(x'' AS BLOB) DESC  NULLS FIRST, '' ASC;
SELECT * FROM vt2, vt1 FULL OUTER JOIN v0 ON CASE WHEN CAST(vt2.c0 AS TEXT) THEN (((vt0.c0))>=((vt0.c0))) END FULL OUTER JOIN vt0 ON CASE WHEN (vt0.c0 IN ()) THEN vt0.c2 ELSE (NOT (vt0.c1)) END;
SELECT DISTINCT * FROM vt2, vt1, v0, vt0;
SELECT DISTINCT * FROM vt2, vt1, v0, vt0 WHERE (NULL) UNION SELECT DISTINCT * FROM vt2, vt1, v0, vt0 WHERE ((NOT (NULL))) UNION SELECT DISTINCT * FROM vt2, vt1, v0, vt0 WHERE (((NULL) ISNULL));
SELECT DISTINCT * FROM vt2, vt1, v0, vt0;
SELECT vt0.c1, vt0.c0, vt0.c2 FROM vt0 GROUP BY vt0.c1, vt0.c0, vt0.c2;
SELECT ALL vt0.c1, vt0.c0, vt0.c2 FROM vt0 WHERE (CAST(CAST(vt0.c1 AS REAL) AS REAL)) GROUP BY vt0.c1, vt0.c0, vt0.c2 UNION SELECT ALL vt0.c1, vt0.c0, vt0.c2 FROM vt0 WHERE ((NOT (CAST(CAST(vt0.c1 AS REAL) AS REAL)))) GROUP BY vt0.c1, vt0.c0, vt0.c2 UNION SELECT vt0.c1, vt0.c0, vt0.c2 FROM vt0 WHERE (((CAST(CAST(vt0.c1 AS REAL) AS REAL)) ISNULL)) GROUP BY vt0.c1, vt0.c0, vt0.c2;
SELECT vt0.c1, vt0.c0, vt0.c2 FROM vt0 GROUP BY vt0.c1, vt0.c0, vt0.c2;
SELECT ALL v0.c0, vt2.c0 FROM vt2, v0 GROUP BY v0.c0, vt2.c0;
SELECT ALL v0.c0, vt2.c0 FROM vt2, v0 NOT INDEXED GROUP BY v0.c0, vt2.c0 HAVING TOTAL(((vt2.c0)AND(vt2.c0))) UNION ALL SELECT ALL v0.c0, vt2.c0 FROM vt2, v0 GROUP BY v0.c0, vt2.c0 HAVING (NOT (TOTAL(((vt2.c0)AND(vt2.c0))))) UNION ALL SELECT v0.c0, vt2.c0 FROM vt2, v0 GROUP BY v0.c0, vt2.c0 HAVING ((TOTAL(((vt2.c0)AND(vt2.c0)))) ISNULL);
SELECT ALL v0.c0, vt2.c0 FROM vt2, v0 GROUP BY v0.c0, vt2.c0;
SELECT ALL v0.c0, vt2.c0 FROM vt2, v0 NOT INDEXED GROUP BY v0.c0, vt2.c0 HAVING TOTAL(((vt2.c0)AND(vt2.c0))) UNION ALL SELECT ALL v0.c0, vt2.c0 FROM vt2, v0 GROUP BY v0.c0, vt2.c0 HAVING (NOT (TOTAL(((vt2.c0)AND(vt2.c0))))) UNION ALL SELECT v0.c0, vt2.c0 FROM vt2, v0 GROUP BY v0.c0, vt2.c0 HAVING ((TOTAL(((vt2.c0)AND(vt2.c0)))) ISNULL);
SELECT ALL v0.c0, vt2.c0 FROM vt2, v0 GROUP BY v0.c0, vt2.c0;
SELECT * FROM vt0;
SELECT ALL * FROM vt0 WHERE (vt0.c2) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (vt0.c2))) UNION ALL SELECT * FROM vt0 WHERE (((vt0.c2) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT vt0.c0, v0.c0, vt2.c0, vt0.c1, vt0.c2, vt1.c0 FROM vt2, v0 RIGHT OUTER JOIN vt1 ON ((((((0.4062360195930581)OR(NULL)))OR(vt0.c1))) ISNULL) CROSS JOIN vt0 ON CAST(CAST(vt0.c1 AS BLOB) AS BLOB);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (CASE ((NULL)==(v0.c0))  WHEN NULL THEN ((v0.c0) NOT NULL) END) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT (CASE ((NULL)=(v0.c0))  WHEN NULL THEN ((v0.c0) NOT NULL) END))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE (((CASE ((NULL)==(v0.c0))  WHEN NULL THEN ((v0.c0) NOT NULL) END) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT vt1.c0 FROM vt1, v0, vt0, vt2 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1, v0, vt0, vt2 GROUP BY vt1.c0 HAVING MAX(MIN(v0.c0)) UNION ALL SELECT vt1.c0 FROM vt1, v0, vt0, vt2 GROUP BY vt1.c0 HAVING (NOT (MAX(MIN(v0.c0)))) UNION ALL SELECT ALL vt1.c0 FROM vt1, v0, vt0, vt2 GROUP BY vt1.c0 HAVING ((MAX(MIN(v0.c0))) ISNULL);
SELECT v0.c0, vt0.c1, vt1.c0, vt0.c2 FROM vt1, vt0 RIGHT OUTER JOIN v0 ON ((vt0.c0) BETWEEN ('E+\rwF?') AND (((((vt2.c0)AND(vt0.c1)))AND(v0.c0)))) CROSS JOIN vt2 ON ((vt0.c0 IN (vt0.c0)) IN ());
SELECT v0.c0, vt0.c1, vt1.c0, vt0.c2 FROM vt1, vt0 RIGHT OUTER JOIN v0 ON ((vt0.c0) BETWEEN ('E+\rwF?') AND (((((vt2.c0)AND(vt0.c1)))AND(v0.c0)))) CROSS JOIN vt2 ON ((vt0.c0 IN (vt0.c0)) IN ()) WHERE ((((~ (v0.c0)))<<(CASE WHEN vt0.c1 THEN vt2.c0 ELSE v0.c0 END))) UNION ALL SELECT ALL v0.c0, vt0.c1, vt1.c0, vt0.c2 FROM vt1, vt0 RIGHT OUTER JOIN v0 ON ((vt0.c0) BETWEEN ('E+\rwF?') AND (((((vt2.c0)AND(vt0.c1)))AND(v0.c0)))) CROSS JOIN vt2 ON ((vt0.c0 IN (vt0.c0)) IN ()) WHERE ((NOT ((((~ (v0.c0)))<<(CASE WHEN vt0.c1 THEN vt2.c0 ELSE v0.c0 END))))) UNION ALL SELECT ALL v0.c0, vt0.c1, vt1.c0, vt0.c2 FROM vt1, vt0 RIGHT OUTER JOIN v0 ON ((vt0.c0) BETWEEN ('E+\rwF?') AND (((((vt2.c0)AND(vt0.c1)))AND(v0.c0)))) CROSS JOIN vt2 ON ((vt0.c0 IN (vt0.c0)) IN ()) WHERE ((((((~ (v0.c0)))<<(CASE WHEN vt0.c1 THEN vt2.c0 ELSE v0.c0 END))) ISNULL));
SELECT v0.c0, vt0.c1, vt1.c0, vt0.c2 FROM vt1, vt0 RIGHT OUTER JOIN v0 ON ((vt0.c0) BETWEEN ('E+\rwF?') AND (((((vt2.c0)AND(vt0.c1)))AND(v0.c0)))) CROSS JOIN vt2 ON ((vt0.c0 IN (vt0.c0)) IN ());
SELECT DISTINCT vt0.c2 FROM vt0, vt2;
SELECT DISTINCT vt0.c2 FROM vt0, vt2 WHERE (vt0.c0) UNION SELECT DISTINCT vt0.c2 FROM vt0, vt2 WHERE ((NOT (vt0.c0))) UNION SELECT DISTINCT vt0.c2 FROM vt0, vt2 WHERE (((vt0.c0) ISNULL));
SELECT DISTINCT vt0.c2 FROM vt0, vt2;
SELECT ALL v0.c0 FROM vt2 LEFT OUTER JOIN v0 ON (((((vt1.c0) IS FALSE)))!=((((vt1.c0) NOTNULL)))) CROSS JOIN vt1 ON ((ABS(vt2.c0)) BETWEEN ((~ (vt2.c0))) AND (((vt2.c0) ISNULL))) GROUP BY v0.c0;
SELECT ALL v0.c0, vt1.c0 FROM vt1, v0 GROUP BY v0.c0, vt1.c0;
SELECT ALL v0.c0, vt1.c0 FROM vt1, v0 GROUP BY v0.c0, vt1.c0 HAVING CASE vt1.c0  WHEN COUNT(COUNT(v0.c0)) THEN (((TOTAL(v0.c0)))=((v0.c0))) END UNION ALL SELECT ALL v0.c0, vt1.c0 FROM vt1, v0 GROUP BY v0.c0, vt1.c0 HAVING (NOT (CASE vt1.c0  WHEN COUNT(COUNT(v0.c0)) THEN (((TOTAL(v0.c0)))=((v0.c0))) END)) UNION ALL SELECT v0.c0, vt1.c0 FROM vt1, v0 GROUP BY v0.c0, vt1.c0 HAVING ((CASE vt1.c0  WHEN COUNT(COUNT(v0.c0)) THEN (((TOTAL(v0.c0)))=((v0.c0))) END) ISNULL);
SELECT ALL v0.c0, vt2.c0 FROM v0 RIGHT OUTER JOIN vt1 ON ((((vt1.c0) ISNULL)) NOT BETWEEN (vt1.c0) AND (vt2.c0)) LEFT OUTER JOIN vt2 ON (((+ (vt1.c0))) NOT BETWEEN ((((x''))>=((2121075611)))) AND ((((vt2.c0))<((v0.c0)))));
SELECT DISTINCT v0.c0, vt0.c1, vt0.c2, vt0.c0, vt2.c0 FROM v0, vt0, vt2;
SELECT DISTINCT v0.c0, vt0.c1, vt0.c2, vt0.c0, vt2.c0 FROM v0, vt0, vt2 WHERE (('T.ⱗE/4zl' IN ())) UNION SELECT DISTINCT v0.c0, vt0.c1, vt0.c2, vt0.c0, vt2.c0 FROM v0, vt0, vt2 WHERE ((NOT (('T.ⱗE/4zl' IN ())))) UNION SELECT DISTINCT v0.c0, vt0.c1, vt0.c2, vt0.c0, vt2.c0 FROM v0, vt0, vt2 WHERE (((('T.ⱗE/4zl' IN ())) ISNULL));
SELECT DISTINCT v0.c0, vt0.c1, vt0.c2, vt0.c0, vt2.c0 FROM v0, vt0, vt2;
SELECT vt0.c2, vt1.c0, v0.c0 FROM v0 CROSS JOIN vt2 ON (((NOT (vt0.c0))) NOTNULL) FULL OUTER JOIN vt1 ON HEX((vt1.c0 IN ())) INNER JOIN vt0 ON vt1.c0 GROUP BY vt0.c2, vt1.c0, v0.c0;
SELECT vt0.c0, vt0.c1 FROM vt0, v0 GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c0, vt0.c1 FROM vt0, v0 GROUP BY vt0.c0, vt0.c1 HAVING (CASE WHEN AVG(COUNT(*)) THEN SUM(GROUP_CONCAT(COUNT(MIN(vt0.c0)))) ELSE COUNT(AVG(vt0.c2)) END IN (((((vt0.c2)AND(COUNT(*))))OR(vt0.c1)))) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt0, v0 GROUP BY vt0.c0, vt0.c1 HAVING (NOT ((CASE WHEN AVG(COUNT(*)) THEN SUM(GROUP_CONCAT(COUNT(MIN(vt0.c0)))) ELSE COUNT(AVG(vt0.c2)) END IN (((((vt0.c2)AND(COUNT(*))))OR(vt0.c1)))))) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt0, v0 GROUP BY vt0.c0, vt0.c1 HAVING (((CASE WHEN AVG(COUNT(*)) THEN SUM(GROUP_CONCAT(COUNT(MIN(vt0.c0)))) ELSE COUNT(AVG(vt0.c2)) END IN (((((vt0.c2)AND(COUNT(*))))OR(vt0.c1))))) ISNULL);
SELECT ALL * FROM vt0, vt2;
SELECT * FROM vt0, vt2 WHERE (((((((vt2.c0)OR(vt0.c2)))OR(vt0.c2)))IS NOT(vt0.c0 COLLATE BINARY))) UNION ALL SELECT * FROM vt0, vt2 WHERE ((NOT (((((((vt2.c0)OR(vt0.c2)))OR(vt0.c2)))IS NOT(vt0.c0 COLLATE BINARY))))) UNION ALL SELECT * FROM vt0, vt2 WHERE (((((((((vt2.c0)OR(vt0.c2)))OR(vt0.c2)))IS NOT(vt0.c0 COLLATE BINARY))) ISNULL));
SELECT ALL * FROM vt0, vt2;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (((v0.c0 COLLATE NOCASE) NOTNULL)) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (((v0.c0 COLLATE NOCASE) NOTNULL)))) UNION SELECT DISTINCT v0.c0 FROM v0 NOT INDEXED WHERE (((((v0.c0 COLLATE NOCASE) NOTNULL)) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT v0.c0, vt0.c1, vt1.c0, vt2.c0 FROM vt1, vt0, vt2 INNER JOIN v0 ON ((((0.28906644283001026)OR(CAST(v0.c0 AS TEXT))))OR(CASE vt0.c2  WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN vt0.c2 ELSE vt0.c0 END)) GROUP BY v0.c0, vt0.c1, vt1.c0, vt2.c0;
SELECT v0.c0, vt0.c1, vt1.c0, vt2.c0 FROM vt1, vt0, vt2 INNER JOIN v0 ON ((((0.28906644283001026)OR(CAST(v0.c0 AS TEXT))))OR(CASE vt0.c2  WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN vt0.c2 ELSE vt0.c0 END)) WHERE (((((vt0.c1) NOTNULL)) NOT BETWEEN (((vt2.c0)<(vt0.c0))) AND (CAST(vt0.c0 AS BLOB)))) GROUP BY v0.c0, vt0.c1, vt1.c0, vt2.c0 UNION SELECT v0.c0, vt0.c1, vt1.c0, vt2.c0 FROM vt1, vt0, vt2 INNER JOIN v0 ON ((((0.28906644283001026)OR(CAST(v0.c0 AS TEXT))))OR(CASE vt0.c2  WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN vt0.c2 ELSE vt0.c0 END)) WHERE ((NOT (((((vt0.c1) NOTNULL)) NOT BETWEEN (((vt2.c0)<(vt0.c0))) AND (CAST(vt0.c0 AS BLOB)))))) GROUP BY v0.c0, vt0.c1, vt1.c0, vt2.c0 UNION SELECT v0.c0, vt0.c1, vt1.c0, vt2.c0 FROM vt1, vt0, vt2 INNER JOIN v0 ON ((((0.28906644283001026)OR(CAST(v0.c0 AS TEXT))))OR(CASE vt0.c2  WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN vt0.c2 ELSE vt0.c0 END)) WHERE (((((((vt0.c1) NOTNULL)) NOT BETWEEN (((vt2.c0)<(vt0.c0))) AND (CAST(vt0.c0 AS BLOB)))) ISNULL)) GROUP BY v0.c0, vt0.c1, vt1.c0, vt2.c0;
SELECT v0.c0, vt0.c1, vt1.c0, vt2.c0 FROM vt1, vt0, vt2 INNER JOIN v0 ON ((((0.28906644283001026)OR(CAST(v0.c0 AS TEXT))))OR(CASE vt0.c2  WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN vt0.c2 ELSE vt0.c0 END)) GROUP BY v0.c0, vt0.c1, vt1.c0, vt2.c0;
SELECT ALL vt0.c1 FROM vt0, vt1, v0, vt2 GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0, vt1, v0, vt2 GROUP BY vt0.c1 HAVING COUNT(*) UNION ALL SELECT ALL vt0.c1 FROM vt0, vt1, v0, vt2 GROUP BY vt0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt0.c1 FROM vt0, vt1, v0, vt2 GROUP BY vt0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt0.c1 FROM vt0, vt1, v0, vt2 GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0, vt1, v0, vt2 GROUP BY vt0.c1 HAVING COUNT(*) UNION ALL SELECT ALL vt0.c1 FROM vt0, vt1, v0, vt2 GROUP BY vt0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt0.c1 FROM vt0, vt1, v0, vt2 GROUP BY vt0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt0.c1 FROM vt0, vt1, v0, vt2 GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt2, v0 FULL OUTER JOIN vt0 ON ((vt0.c0)<=(vt0.c1)) COLLATE NOCASE;
SELECT ALL vt0.c1 FROM vt2, v0 FULL OUTER JOIN vt0 ON ((vt0.c0)<=(vt0.c1)) COLLATE NOCASE WHERE (CAST((~ (vt2.c0)) AS NUMERIC)) UNION ALL SELECT vt0.c1 FROM vt2, v0 FULL OUTER JOIN vt0 ON ((vt0.c0)<=(vt0.c1)) COLLATE NOCASE WHERE ((NOT (CAST((~ (vt2.c0)) AS NUMERIC)))) UNION ALL SELECT ALL vt0.c1 FROM vt2, v0 FULL OUTER JOIN vt0 ON ((vt0.c0)<=(vt0.c1)) COLLATE NOCASE WHERE (((CAST((~ (vt2.c0)) AS NUMERIC)) ISNULL));
SELECT vt0.c1 FROM vt2, v0 FULL OUTER JOIN vt0 ON ((vt0.c0)<=(vt0.c1)) COLLATE NOCASE;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (IFNULL(DISTINCT HEX(DISTINCT v0.c0), ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (IFNULL(DISTINCT HEX(DISTINCT v0.c0), ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((IFNULL(DISTINCT HEX(DISTINCT v0.c0), ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT v0.c0, vt2.c0 FROM vt2, v0 NOT INDEXED GROUP BY v0.c0, vt2.c0;
SELECT v0.c0, vt2.c0 FROM vt2, v0 WHERE (CASE WHEN vt2.c0 THEN ((v0.c0)IS(vt2.c0)) END) GROUP BY v0.c0, vt2.c0 UNION SELECT v0.c0, vt2.c0 FROM vt2, v0 WHERE ((NOT (CASE WHEN vt2.c0 THEN ((v0.c0)IS(vt2.c0)) END))) GROUP BY v0.c0, vt2.c0 UNION SELECT ALL v0.c0, vt2.c0 FROM vt2, v0 WHERE (((CASE WHEN vt2.c0 THEN ((v0.c0)IS(vt2.c0)) END) ISNULL)) GROUP BY v0.c0, vt2.c0;
SELECT v0.c0, vt2.c0 FROM vt2, v0 NOT INDEXED GROUP BY v0.c0, vt2.c0;
SELECT vt2.c0, vt1.c0 FROM vt1, vt2 GROUP BY vt2.c0, vt1.c0;
SELECT ALL vt2.c0, vt1.c0 FROM vt1, vt2 GROUP BY vt2.c0, vt1.c0 HAVING ((x'')/(COUNT(TOTAL(SUM(vt1.c0))))) COLLATE NOCASE UNION ALL SELECT vt2.c0, vt1.c0 FROM vt1, vt2 GROUP BY vt2.c0, vt1.c0 HAVING (NOT (((x'')/(COUNT(TOTAL(SUM(vt1.c0))))) COLLATE NOCASE)) UNION ALL SELECT vt2.c0, vt1.c0 FROM vt1, vt2 GROUP BY vt2.c0, vt1.c0 HAVING ((((x'')/(COUNT(TOTAL(SUM(vt1.c0))))) COLLATE NOCASE) ISNULL);
SELECT vt0.c0, vt0.c2, vt2.c0, vt0.c1 FROM vt2, vt0;
SELECT ALL vt0.c0, vt0.c2, vt2.c0, vt0.c1 FROM vt2, vt0 WHERE (CAST(vt0.c1 AS REAL)) UNION ALL SELECT vt0.c0, vt0.c2, vt2.c0, vt0.c1 FROM vt2, vt0 WHERE ((NOT (CAST(vt0.c1 AS REAL)))) UNION ALL SELECT vt0.c0, vt0.c2, vt2.c0, vt0.c1 FROM vt2, vt0 WHERE (((CAST(vt0.c1 AS REAL)) ISNULL));
SELECT vt0.c0, vt0.c2, vt2.c0, vt0.c1 FROM vt2, vt0;
SELECT DISTINCT vt0.c1 FROM vt2, vt1, vt0 INNER JOIN v0 ON ((((1.808830006E9) NOT NULL)) BETWEEN (((v0.c0)LIKE(vt2.c0))) AND (vt0.c0));
SELECT DISTINCT vt0.c1 FROM vt2, vt1, vt0 INNER JOIN v0 ON ((((1.808830006E9) NOT NULL)) BETWEEN (((v0.c0)LIKE(vt2.c0))) AND (vt0.c0)) WHERE (((((vt2.c0 COLLATE NOCASE)AND(((vt2.c0) BETWEEN (vt1.c0) AND (v0.c0)))))AND(CAST(NULL AS BLOB)))) UNION SELECT DISTINCT vt0.c1 FROM vt2, vt1, vt0 INNER JOIN v0 ON ((((1.808830006E9) NOT NULL)) BETWEEN (((v0.c0)LIKE(vt2.c0))) AND (vt0.c0)) WHERE ((NOT (((((vt2.c0 COLLATE NOCASE)AND(((vt2.c0) BETWEEN (vt1.c0) AND (v0.c0)))))AND(CAST(NULL AS BLOB)))))) UNION SELECT DISTINCT vt0.c1 FROM vt2, vt1, vt0 INNER JOIN v0 ON ((((1.808830006E9) NOT NULL)) BETWEEN (((v0.c0)LIKE(vt2.c0))) AND (vt0.c0)) WHERE (((((((vt2.c0 COLLATE NOCASE)AND(((vt2.c0) BETWEEN (vt1.c0) AND (v0.c0)))))AND(CAST(NULL AS BLOB)))) ISNULL));
SELECT DISTINCT vt0.c1 FROM vt2, vt1, vt0 INNER JOIN v0 ON ((((1.808830006E9) NOT NULL)) BETWEEN (((v0.c0)LIKE(vt2.c0))) AND (vt0.c0));
SELECT ALL vt1.c0 FROM vt0, vt2, vt1, v0 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt0, vt2, vt1, v0 WHERE (vt2.c0) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt0, vt2, vt1, v0 WHERE ((NOT (vt2.c0))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt0, vt2, vt1, v0 WHERE (((vt2.c0) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt0, vt2, vt1, v0 GROUP BY vt1.c0;
SELECT ALL vt0.c1, v0.c0, vt0.c2 FROM vt0, v0 GROUP BY vt0.c1, v0.c0, vt0.c2;
SELECT vt0.c1, v0.c0, vt0.c2 FROM vt0 NOT INDEXED, v0 GROUP BY vt0.c1, v0.c0, vt0.c2 HAVING ((SUM(x'74f1')) IS FALSE) UNION ALL SELECT vt0.c1, v0.c0, vt0.c2 FROM vt0, v0 GROUP BY vt0.c1, v0.c0, vt0.c2 HAVING (NOT (((SUM(x'74f1')) IS FALSE))) UNION ALL SELECT ALL vt0.c1, v0.c0, vt0.c2 FROM vt0, v0 NOT INDEXED GROUP BY vt0.c1, v0.c0, vt0.c2 HAVING ((((SUM(x'74f1')) IS FALSE)) ISNULL);
SELECT ALL vt0.c1, v0.c0, vt0.c2 FROM vt0, v0 GROUP BY vt0.c1, v0.c0, vt0.c2;
SELECT vt0.c1, v0.c0, vt0.c2 FROM vt0 NOT INDEXED, v0 GROUP BY vt0.c1, v0.c0, vt0.c2 HAVING ((SUM(x'74f1')) IS FALSE) UNION ALL SELECT vt0.c1, v0.c0, vt0.c2 FROM vt0, v0 GROUP BY vt0.c1, v0.c0, vt0.c2 HAVING (NOT (((SUM(x'74f1')) IS FALSE))) UNION ALL SELECT ALL vt0.c1, v0.c0, vt0.c2 FROM vt0, v0 NOT INDEXED GROUP BY vt0.c1, v0.c0, vt0.c2 HAVING ((((SUM(x'74f1')) IS FALSE)) ISNULL);
SELECT ALL vt0.c1, v0.c0, vt0.c2 FROM vt0, v0 GROUP BY vt0.c1, v0.c0, vt0.c2;
SELECT vt2.c0, v0.c0, vt1.c0, vt0.c1 FROM v0, vt1, vt0, vt2;
SELECT ALL vt2.c0, v0.c0, vt1.c0, vt0.c1 FROM v0, vt1, vt0, vt2 WHERE (((((NULL) NOT NULL))IS NOT((~ (vt1.c0))))) UNION ALL SELECT ALL vt2.c0, v0.c0, vt1.c0, vt0.c1 FROM v0, vt1, vt0, vt2 WHERE ((NOT (((((NULL) NOT NULL))IS NOT((~ (vt1.c0))))))) UNION ALL SELECT vt2.c0, v0.c0, vt1.c0, vt0.c1 FROM v0, vt1, vt0, vt2 WHERE (((((((NULL) NOT NULL))IS NOT((~ (vt1.c0))))) ISNULL));
SELECT vt2.c0, v0.c0, vt1.c0, vt0.c1 FROM v0, vt1, vt0, vt2;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE ((((vt0.c1)!=(vt0.c2)) IN ())) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT ((((vt0.c1)<>(vt0.c2)) IN ())))) UNION SELECT DISTINCT * FROM vt0 WHERE ((((((vt0.c1)!=(vt0.c2)) IN ())) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL vt1.c0, vt2.c0 FROM v0, vt2, vt1 GROUP BY vt1.c0, vt2.c0;
SELECT vt1.c0, vt2.c0 FROM v0, vt2, vt1 WHERE (((((vt1.c0)AND(x'' COLLATE NOCASE)))AND(CAST(vt1.c0 AS NUMERIC)))) GROUP BY vt1.c0, vt2.c0 UNION SELECT ALL vt1.c0, vt2.c0 FROM v0, vt2, vt1 WHERE ((NOT (((((vt1.c0)AND(x'' COLLATE NOCASE)))AND(CAST(vt1.c0 AS NUMERIC)))))) GROUP BY vt1.c0, vt2.c0 UNION SELECT vt1.c0, vt2.c0 FROM v0, vt2 NOT INDEXED, vt1 WHERE (((((((vt1.c0)AND(x'' COLLATE NOCASE)))AND(CAST(vt1.c0 AS NUMERIC)))) ISNULL)) GROUP BY vt1.c0, vt2.c0;
SELECT ALL vt1.c0, vt2.c0 FROM v0, vt2, vt1 GROUP BY vt1.c0, vt2.c0;
SELECT vt0.c0 FROM vt2, vt1, vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt2, vt1, vt0 GROUP BY vt0.c0 HAVING CASE WHEN COUNT(TOTAL(TOTAL(AVG(vt0.c0)))) THEN x'6199' END UNION ALL SELECT vt0.c0 FROM vt2, vt1, vt0 GROUP BY vt0.c0 HAVING (NOT (CASE WHEN COUNT(TOTAL(TOTAL(AVG(vt0.c0)))) THEN x'6199' END)) UNION ALL SELECT ALL vt0.c0 FROM vt2, vt1, vt0 GROUP BY vt0.c0 HAVING ((CASE WHEN COUNT(TOTAL(TOTAL(AVG(vt0.c0)))) THEN x'6199' END) ISNULL);
SELECT ALL vt0.c2, vt1.c0, vt2.c0, v0.c0, vt0.c0, vt0.c1 FROM vt1, v0, vt0 LEFT OUTER JOIN vt2 ON ((v0.c0 COLLATE NOCASE)>>(LIKELY(DISTINCT v0.c0)));
SELECT vt0.c2, vt1.c0, vt2.c0, v0.c0, vt0.c0, vt0.c1 FROM vt1, v0, vt0 LEFT OUTER JOIN vt2 ON ((v0.c0 COLLATE NOCASE)>>(LIKELY(DISTINCT v0.c0))) WHERE ((CASE vt0.c1  WHEN vt0.c2 THEN x'' ELSE v0.c0 END IN ())) UNION ALL SELECT ALL vt0.c2, vt1.c0, vt2.c0, v0.c0, vt0.c0, vt0.c1 FROM vt1, v0, vt0 LEFT OUTER JOIN vt2 ON ((v0.c0 COLLATE NOCASE)>>(LIKELY(DISTINCT v0.c0))) WHERE ((NOT ((CASE vt0.c1  WHEN vt0.c2 THEN x'' ELSE v0.c0 END IN ())))) UNION ALL SELECT vt0.c2, vt1.c0, vt2.c0, v0.c0, vt0.c0, vt0.c1 FROM vt1, v0, vt0 LEFT OUTER JOIN vt2 ON ((v0.c0 COLLATE NOCASE)>>(LIKELY(DISTINCT v0.c0))) WHERE ((((CASE vt0.c1  WHEN vt0.c2 THEN x'' ELSE v0.c0 END IN ())) ISNULL));
SELECT ALL vt0.c2, vt1.c0, vt2.c0, v0.c0, vt0.c0, vt0.c1 FROM vt1, v0, vt0 LEFT OUTER JOIN vt2 ON ((v0.c0 COLLATE NOCASE)>>(LIKELY(DISTINCT v0.c0)));
SELECT DISTINCT * FROM vt1 RIGHT OUTER JOIN vt0 ON (NOT (((v0.c0) IS FALSE))) LEFT OUTER JOIN vt2 ON ((v0.c0)*(CAST(x'aa1c' AS TEXT))) CROSS JOIN v0 ON (((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c2)) IN (vt2.c0, (~ (vt1.c0))));
SELECT vt0.c2 FROM vt1, vt2, v0, vt0 GROUP BY vt0.c2;
SELECT vt0.c2 FROM vt1, vt2, v0, vt0 WHERE ((+ (vt0.c0 COLLATE NOCASE))) GROUP BY vt0.c2 UNION SELECT ALL vt0.c2 FROM vt1, vt2 NOT INDEXED, v0, vt0 WHERE ((NOT ((+ (vt0.c0 COLLATE NOCASE))))) GROUP BY vt0.c2 UNION SELECT vt0.c2 FROM vt1, vt2, v0, vt0 WHERE ((((+ (vt0.c0 COLLATE NOCASE))) ISNULL)) GROUP BY vt0.c2;
SELECT vt0.c2 FROM vt1, vt2, v0, vt0 GROUP BY vt0.c2;
SELECT vt1.c0, v0.c0 FROM v0, vt1 NOT INDEXED GROUP BY vt1.c0, v0.c0;
SELECT vt1.c0, v0.c0 FROM v0, vt1 GROUP BY vt1.c0, v0.c0 HAVING (((- (v0.c0))) NOT BETWEEN (COUNT(*)) AND (((TOTAL(GROUP_CONCAT(AVG(GROUP_CONCAT(MIN(v0.c0)))))) NOT BETWEEN (MIN(MAX(vt1.c0))) AND (vt1.c0)))) UNION ALL SELECT ALL vt1.c0, v0.c0 FROM v0, vt1 GROUP BY vt1.c0, v0.c0 HAVING (NOT ((((- (v0.c0))) NOT BETWEEN (COUNT(*)) AND (((TOTAL(GROUP_CONCAT(AVG(GROUP_CONCAT(MIN(v0.c0)))))) NOT BETWEEN (MIN(MAX(vt1.c0))) AND (vt1.c0)))))) UNION ALL SELECT ALL vt1.c0, v0.c0 FROM v0, vt1 GROUP BY vt1.c0, v0.c0 HAVING (((((- (v0.c0))) NOT BETWEEN (COUNT(*)) AND (((TOTAL(GROUP_CONCAT(AVG(GROUP_CONCAT(MIN(v0.c0)))))) NOT BETWEEN (MIN(MAX(vt1.c0))) AND (vt1.c0))))) ISNULL);
SELECT MAX(((0.39280009227883783)=(((v0.c0)IS NOT(v0.c0))))) FROM v0, vt0, vt1, vt2;
SELECT * FROM vt2, vt0, v0;
SELECT ALL * FROM vt2, vt0, v0 WHERE ((((CASE WHEN v0.c0 THEN v0.c0 ELSE vt2.c0 END, (((vt0.c2, vt0.c2, vt0.c0))<=((vt0.c1, vt2.c0, vt2.c0))), (vt0.c0 IN (v0.c0, vt2.c0))))>((((vt0.c2)AND(vt2.c0)), NULL, (NOT (0.11826067590238576)))))) UNION ALL SELECT ALL * FROM vt2, vt0, v0 WHERE ((NOT ((((CASE WHEN v0.c0 THEN v0.c0 ELSE vt2.c0 END, (((vt0.c2, vt0.c2, vt0.c0))<=((vt0.c1, vt2.c0, vt2.c0))), (vt0.c0 IN (v0.c0, vt2.c0))))>((((vt0.c2)AND(vt2.c0)), NULL, (NOT (0.11826067590238576)))))))) UNION ALL SELECT * FROM vt2, vt0, v0 WHERE ((((((CASE WHEN v0.c0 THEN v0.c0 ELSE vt2.c0 END, (((vt0.c2, vt0.c2, vt0.c0))<=((vt0.c1, vt2.c0, vt2.c0))), (vt0.c0 IN (v0.c0, vt2.c0))))>((((vt0.c2)AND(vt2.c0)), NULL, (NOT (0.11826067590238576)))))) ISNULL));
SELECT * FROM vt2, vt0, v0;
SELECT DISTINCT * FROM v0, vt0;
SELECT DISTINCT * FROM v0, vt0 WHERE ((((vt0.c0)<>('?')) IN ())) UNION SELECT DISTINCT * FROM v0, vt0 WHERE ((NOT ((((vt0.c0)!=('?')) IN ())))) UNION SELECT DISTINCT * FROM v0, vt0 WHERE ((((((vt0.c0)<>('?')) IN ())) ISNULL));
SELECT DISTINCT * FROM v0, vt0;
SELECT vt1.c0, vt0.c0, vt2.c0, v0.c0, vt0.c1, vt0.c2 FROM vt1, v0, vt2, vt0 GROUP BY vt1.c0, vt0.c0, vt2.c0, v0.c0, vt0.c1, vt0.c2;
SELECT vt1.c0, vt0.c0, vt2.c0, v0.c0, vt0.c1, vt0.c2 FROM vt1, v0, vt2, vt0 WHERE (((vt0.c0) IS TRUE) COLLATE RTRIM COLLATE RTRIM) GROUP BY vt1.c0, vt0.c0, vt2.c0, v0.c0, vt0.c1, vt0.c2 UNION SELECT ALL vt1.c0, vt0.c0, vt2.c0, v0.c0, vt0.c1, vt0.c2 FROM vt1, v0, vt2, vt0 WHERE ((NOT (((vt0.c0) IS TRUE) COLLATE RTRIM COLLATE RTRIM))) GROUP BY vt1.c0, vt0.c0, vt2.c0, v0.c0, vt0.c1, vt0.c2 UNION SELECT vt1.c0, vt0.c0, vt2.c0, v0.c0, vt0.c1, vt0.c2 FROM vt1, v0, vt2, vt0 WHERE (((((vt0.c0) IS TRUE) COLLATE RTRIM COLLATE RTRIM) ISNULL)) GROUP BY vt1.c0, vt0.c0, vt2.c0, v0.c0, vt0.c1, vt0.c2;
SELECT vt1.c0, vt0.c0, vt2.c0, v0.c0, vt0.c1, vt0.c2 FROM vt1, v0, vt2, vt0 GROUP BY vt1.c0, vt0.c0, vt2.c0, v0.c0, vt0.c1, vt0.c2;
SELECT ALL vt2.c0, vt1.c0 FROM vt1, vt2 GROUP BY vt2.c0, vt1.c0;
SELECT ALL vt2.c0, vt1.c0 FROM vt1, vt2 GROUP BY vt2.c0, vt1.c0 HAVING SUM('0.9004645205861377') UNION ALL SELECT ALL vt2.c0, vt1.c0 FROM vt1, vt2 GROUP BY vt2.c0, vt1.c0 HAVING (NOT (SUM('0.9004645205861377'))) UNION ALL SELECT ALL vt2.c0, vt1.c0 FROM vt1, vt2 GROUP BY vt2.c0, vt1.c0 HAVING ((SUM('0.9004645205861377')) ISNULL);
SELECT ALL vt2.c0, vt1.c0 FROM vt1, vt2 GROUP BY vt2.c0, vt1.c0;
SELECT ALL vt2.c0, vt1.c0 FROM vt1, vt2 GROUP BY vt2.c0, vt1.c0 HAVING SUM('0.9004645205861377') UNION ALL SELECT ALL vt2.c0, vt1.c0 FROM vt1, vt2 GROUP BY vt2.c0, vt1.c0 HAVING (NOT (SUM('0.9004645205861377'))) UNION ALL SELECT ALL vt2.c0, vt1.c0 FROM vt1, vt2 GROUP BY vt2.c0, vt1.c0 HAVING ((SUM('0.9004645205861377')) ISNULL);
SELECT ALL vt2.c0, vt1.c0 FROM vt1, vt2 GROUP BY vt2.c0, vt1.c0;
SELECT ALL vt1.c0 FROM vt1;
SELECT vt1.c0 FROM vt1 WHERE (CASE vt1.c0 COLLATE BINARY  WHEN vt1.c0 THEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) END) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (CASE vt1.c0 COLLATE BINARY  WHEN vt1.c0 THEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) END))) UNION ALL SELECT vt1.c0 FROM vt1 WHERE (((CASE vt1.c0 COLLATE BINARY  WHEN vt1.c0 THEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) END) ISNULL));
SELECT ALL vt1.c0 FROM vt1;
SELECT DISTINCT * FROM vt0 RIGHT OUTER JOIN vt2 ON ((CAST(vt0.c0 AS INTEGER)) NOT BETWEEN (((vt0.c2)<(vt0.c0))) AND (NULL)) CROSS JOIN vt1 ON (- (NULL));
SELECT DISTINCT * FROM vt0 RIGHT OUTER JOIN vt2 ON ((CAST(vt0.c0 AS INTEGER)) NOT BETWEEN (((vt0.c2)<(vt0.c0))) AND (NULL)) CROSS JOIN vt1 ON (- (NULL)) WHERE ((((((vt2.c0))<=((vt0.c2))))/(((vt0.c2) NOT BETWEEN (vt0.c0) AND (vt2.c0))))) UNION SELECT DISTINCT * FROM vt0 RIGHT OUTER JOIN vt2 ON ((CAST(vt0.c0 AS INTEGER)) NOT BETWEEN (((vt0.c2)<(vt0.c0))) AND (NULL)) CROSS JOIN vt1 ON (- (NULL)) WHERE ((NOT ((((((vt2.c0))<=((vt0.c2))))/(((vt0.c2) NOT BETWEEN (vt0.c0) AND (vt2.c0))))))) UNION SELECT DISTINCT * FROM vt0 RIGHT OUTER JOIN vt2 ON ((CAST(vt0.c0 AS INTEGER)) NOT BETWEEN (((vt0.c2)<(vt0.c0))) AND (NULL)) CROSS JOIN vt1 ON (- (NULL)) WHERE ((((((((vt2.c0))<=((vt0.c2))))/(((vt0.c2) NOT BETWEEN (vt0.c0) AND (vt2.c0))))) ISNULL));
SELECT DISTINCT * FROM vt0 RIGHT OUTER JOIN vt2 ON ((CAST(vt0.c0 AS INTEGER)) NOT BETWEEN (((vt0.c2)<(vt0.c0))) AND (NULL)) CROSS JOIN vt1 ON (- (NULL));
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt0 WHERE ((0.7059031821513572 COLLATE RTRIM IN ())) GROUP BY vt0.c1 UNION SELECT vt0.c1 FROM vt0 WHERE ((NOT ((0.7059031821513572 COLLATE RTRIM IN ())))) GROUP BY vt0.c1 UNION SELECT vt0.c1 FROM vt0 WHERE ((((0.7059031821513572 COLLATE RTRIM IN ())) ISNULL)) GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT ALL vt2.c0, vt0.c2, vt0.c1 FROM vt2, vt0 GROUP BY vt2.c0, vt0.c2, vt0.c1;
SELECT ALL vt2.c0, vt0.c2, vt0.c1 FROM vt2, vt0 GROUP BY vt2.c0, vt0.c2, vt0.c1 HAVING LIKELIHOOD('1024708292', 0.19049346468078954) UNION ALL SELECT vt2.c0, vt0.c2, vt0.c1 FROM vt2, vt0 GROUP BY vt2.c0, vt0.c2, vt0.c1 HAVING (NOT (LIKELIHOOD('1024708292', 0.19049346468078954))) UNION ALL SELECT vt2.c0, vt0.c2, vt0.c1 FROM vt2, vt0 GROUP BY vt2.c0, vt0.c2, vt0.c1 HAVING ((LIKELIHOOD('1024708292', 0.19049346468078954)) ISNULL);
SELECT ALL vt2.c0, vt0.c2, vt0.c1 FROM vt2, vt0 GROUP BY vt2.c0, vt0.c2, vt0.c1;
SELECT ALL vt2.c0, vt0.c2, vt0.c1 FROM vt2, vt0 GROUP BY vt2.c0, vt0.c2, vt0.c1 HAVING LIKELIHOOD('1024708292', 0.19049346468078954) UNION ALL SELECT vt2.c0, vt0.c2, vt0.c1 FROM vt2, vt0 GROUP BY vt2.c0, vt0.c2, vt0.c1 HAVING (NOT (LIKELIHOOD('1024708292', 0.19049346468078954))) UNION ALL SELECT vt2.c0, vt0.c2, vt0.c1 FROM vt2, vt0 GROUP BY vt2.c0, vt0.c2, vt0.c1 HAVING ((LIKELIHOOD('1024708292', 0.19049346468078954)) ISNULL);
SELECT ALL vt2.c0, vt0.c2, vt0.c1 FROM vt2, vt0 GROUP BY vt2.c0, vt0.c2, vt0.c1;
SELECT * FROM vt1;
SELECT * FROM vt1 WHERE ((((+ (vt1.c0))) IS FALSE)) UNION ALL SELECT * FROM vt1 WHERE ((NOT ((((+ (vt1.c0))) IS FALSE)))) UNION ALL SELECT * FROM vt1 WHERE ((((((+ (vt1.c0))) IS FALSE)) ISNULL));
SELECT * FROM vt1;
SELECT DISTINCT vt0.c2, v0.c0 FROM vt2 INNER JOIN vt1 ON v0.c0 INNER JOIN vt0 ON (((vt0.c2)) NOT BETWEEN ((vt2.c0 COLLATE BINARY)) AND (((((v0.c0))>((vt1.c0)))))) FULL OUTER JOIN v0 ON NULL;
SELECT ALL vt0.c1, vt2.c0, vt0.c2 FROM vt2, v0, vt0 NOT INDEXED GROUP BY vt0.c1, vt2.c0, vt0.c2;
SELECT vt0.c1, vt2.c0, vt0.c2 FROM vt2, v0, vt0 WHERE (CAST(((vt0.c0) NOTNULL) AS NUMERIC)) GROUP BY vt0.c1, vt2.c0, vt0.c2 UNION SELECT vt0.c1, vt2.c0, vt0.c2 FROM vt2, v0, vt0 NOT INDEXED WHERE ((NOT (CAST(((vt0.c0) NOTNULL) AS NUMERIC)))) GROUP BY vt0.c1, vt2.c0, vt0.c2 UNION SELECT vt0.c1, vt2.c0, vt0.c2 FROM vt2, v0, vt0 WHERE (((CAST(((vt0.c0) NOTNULL) AS NUMERIC)) ISNULL)) GROUP BY vt0.c1, vt2.c0, vt0.c2;
SELECT ALL vt0.c1, vt2.c0, vt0.c2 FROM vt2, v0, vt0 NOT INDEXED GROUP BY vt0.c1, vt2.c0, vt0.c2;
SELECT vt0.c0, vt2.c0, vt0.c1 FROM v0 INNER JOIN vt0 ON vt0.c0 FULL OUTER JOIN vt2 ON vt0.c1 GROUP BY vt0.c0, vt2.c0, vt0.c1;
SELECT ALL vt0.c0, vt2.c0, vt0.c1 FROM v0 INNER JOIN vt0 ON vt0.c0 FULL OUTER JOIN vt2 ON vt0.c1 GROUP BY vt0.c0, vt2.c0, vt0.c1 HAVING (((((((MAX(SUM(vt0.c1)), COUNT(*), MIN(TOTAL(vt0.c1))))<=((MAX(MAX(TOTAL(''))), COUNT(vt0.c0), SUM(vt0.c1)))))AND((((vt0.c1))!=((MAX(vt0.c1)))))))AND((((COUNT(*))) NOT BETWEEN ((COUNT(*))) AND ((MAX(vt2.c0)))))) UNION ALL SELECT vt0.c0, vt2.c0, vt0.c1 FROM v0 INNER JOIN vt0 ON vt0.c0 FULL OUTER JOIN vt2 ON vt0.c1 GROUP BY vt0.c0, vt2.c0, vt0.c1 HAVING (NOT ((((((((MAX(SUM(vt0.c1)), COUNT(*), MIN(TOTAL(vt0.c1))))<=((MAX(MAX(TOTAL(''))), COUNT(vt0.c0), SUM(vt0.c1)))))AND((((vt0.c1))!=((MAX(vt0.c1)))))))AND((((COUNT(*))) NOT BETWEEN ((COUNT(*))) AND ((MAX(vt2.c0)))))))) UNION ALL SELECT vt0.c0, vt2.c0, vt0.c1 FROM v0 NOT INDEXED INNER JOIN vt0 ON vt0.c0 FULL OUTER JOIN vt2 ON vt0.c1 GROUP BY vt0.c0, vt2.c0, vt0.c1 HAVING (((((((((MAX(SUM(vt0.c1)), COUNT(*), MIN(TOTAL(vt0.c1))))<=((MAX(MAX(TOTAL(''))), COUNT(vt0.c0), SUM(vt0.c1)))))AND((((vt0.c1))<>((MAX(vt0.c1)))))))AND((((COUNT(*))) NOT BETWEEN ((COUNT(*))) AND ((MAX(vt2.c0))))))) ISNULL);
SELECT ALL * FROM vt2, v0, vt0;
SELECT * FROM vt2, v0, vt0 WHERE (v0.c0) UNION ALL SELECT ALL * FROM vt2, v0, vt0 WHERE ((NOT (v0.c0))) UNION ALL SELECT ALL * FROM vt2, v0, vt0 WHERE (((v0.c0) ISNULL));
SELECT ALL * FROM vt2, v0, vt0;
SELECT DISTINCT vt0.c2, vt0.c1 FROM vt0, vt1;
SELECT DISTINCT vt0.c2, vt0.c1 FROM vt0, vt1 WHERE ((((((vt0.c0)) BETWEEN ((vt0.c2)) AND ((vt0.c0))))<=(vt0.c2 COLLATE BINARY))) UNION SELECT DISTINCT vt0.c2, vt0.c1 FROM vt0, vt1 WHERE ((NOT ((((((vt0.c0)) BETWEEN ((vt0.c2)) AND ((vt0.c0))))<=(vt0.c2 COLLATE BINARY))))) UNION SELECT DISTINCT vt0.c2, vt0.c1 FROM vt0, vt1 WHERE ((((((((vt0.c0)) BETWEEN ((vt0.c2)) AND ((vt0.c0))))<=(vt0.c2 COLLATE BINARY))) ISNULL));
SELECT DISTINCT vt0.c2, vt0.c1 FROM vt0, vt1;
SELECT ALL v0.c0, vt0.c0, vt2.c0, vt0.c1, vt1.c0, vt0.c2 FROM vt1, vt0 LEFT OUTER JOIN v0 ON CASE WHEN (~ (vt2.c0)) THEN v0.c0 COLLATE BINARY WHEN (vt0.c0 IN ()) THEN COALESCE(DISTINCT vt1.c0, vt0.c2, vt0.c1, vt1.c0) WHEN json_object(vt0.c0, vt0.c2) THEN vt1.c0 COLLATE RTRIM ELSE ((vt2.c0) NOT NULL) END LEFT OUTER JOIN vt2 ON CAST((- (vt2.c0)) AS NUMERIC) GROUP BY v0.c0, vt0.c0, vt2.c0, vt0.c1, vt1.c0, vt0.c2;
SELECT ALL vt0.c2, v0.c0, vt2.c0 FROM vt0, v0, vt2 GROUP BY vt0.c2, v0.c0, vt2.c0;
SELECT vt0.c2, v0.c0, vt2.c0 FROM vt0, v0, vt2 GROUP BY vt0.c2, v0.c0, vt2.c0 HAVING COUNT(((vt2.c0) NOT NULL)) UNION ALL SELECT vt0.c2, v0.c0, vt2.c0 FROM vt0, v0, vt2 GROUP BY vt0.c2, v0.c0, vt2.c0 HAVING (NOT (COUNT(((vt2.c0) NOT NULL)))) UNION ALL SELECT ALL vt0.c2, v0.c0, vt2.c0 FROM vt0, v0, vt2 GROUP BY vt0.c2, v0.c0, vt2.c0 HAVING ((COUNT(((vt2.c0) NOT NULL))) ISNULL);
SELECT ALL vt0.c2, v0.c0, vt2.c0 FROM vt0, v0, vt2 GROUP BY vt0.c2, v0.c0, vt2.c0;
SELECT vt0.c2, v0.c0, vt2.c0 FROM vt0, v0, vt2 GROUP BY vt0.c2, v0.c0, vt2.c0 HAVING COUNT(((vt2.c0) NOT NULL)) UNION ALL SELECT vt0.c2, v0.c0, vt2.c0 FROM vt0, v0, vt2 GROUP BY vt0.c2, v0.c0, vt2.c0 HAVING (NOT (COUNT(((vt2.c0) NOT NULL)))) UNION ALL SELECT ALL vt0.c2, v0.c0, vt2.c0 FROM vt0, v0, vt2 GROUP BY vt0.c2, v0.c0, vt2.c0 HAVING ((COUNT(((vt2.c0) NOT NULL))) ISNULL);
SELECT ALL vt0.c2, v0.c0, vt2.c0 FROM vt0, v0, vt2 GROUP BY vt0.c2, v0.c0, vt2.c0;
SELECT vt1.c0 FROM v0, vt1, vt2;
SELECT ALL vt1.c0 FROM v0, vt1, vt2 WHERE ('셖*G.lM渀1') UNION ALL SELECT ALL vt1.c0 FROM v0, vt1, vt2 WHERE ((NOT ('셖*G.lM渀1'))) UNION ALL SELECT vt1.c0 FROM v0, vt1, vt2 WHERE ((('셖*G.lM渀1') ISNULL));
SELECT vt1.c0 FROM v0, vt1, vt2;
SELECT DISTINCT * FROM vt1, v0 INNER JOIN vt2 ON ((((vt2.c0) NOT BETWEEN (vt0.c1) AND (vt0.c2))) NOT BETWEEN ((((vt2.c0)) BETWEEN ((x'dbad')) AND ((vt1.c0)))) AND (((vt2.c0) BETWEEN (vt0.c1) AND (vt1.c0)))) INNER JOIN vt0 ON (vt0.c1 COLLATE RTRIM IN ());
SELECT DISTINCT * FROM vt1, v0 INNER JOIN vt2 ON ((((vt2.c0) NOT BETWEEN (vt0.c1) AND (vt0.c2))) NOT BETWEEN ((((vt2.c0)) BETWEEN ((x'dbad')) AND ((vt1.c0)))) AND (((vt2.c0) BETWEEN (vt0.c1) AND (vt1.c0)))) INNER JOIN vt0 ON (vt0.c1 COLLATE RTRIM IN ()) WHERE (((((+ (vt2.c0))))==((UNLIKELY(DISTINCT vt0.c0))))) UNION SELECT DISTINCT * FROM vt1, v0 INNER JOIN vt2 ON ((((vt2.c0) NOT BETWEEN (vt0.c1) AND (vt0.c2))) NOT BETWEEN ((((vt2.c0)) BETWEEN ((x'dbad')) AND ((vt1.c0)))) AND (((vt2.c0) BETWEEN (vt0.c1) AND (vt1.c0)))) INNER JOIN vt0 ON (vt0.c1 COLLATE RTRIM IN ()) WHERE ((NOT (((((+ (vt2.c0))))==((UNLIKELY(DISTINCT vt0.c0))))))) UNION SELECT DISTINCT * FROM vt1, v0 INNER JOIN vt2 ON ((((vt2.c0) NOT BETWEEN (vt0.c1) AND (vt0.c2))) NOT BETWEEN ((((vt2.c0)) BETWEEN ((x'dbad')) AND ((vt1.c0)))) AND (((vt2.c0) BETWEEN (vt0.c1) AND (vt1.c0)))) INNER JOIN vt0 ON (vt0.c1 COLLATE RTRIM IN ()) WHERE (((((((+ (vt2.c0))))==((UNLIKELY(DISTINCT vt0.c0))))) ISNULL));
SELECT DISTINCT * FROM vt1, v0 INNER JOIN vt2 ON ((((vt2.c0) NOT BETWEEN (vt0.c1) AND (vt0.c2))) NOT BETWEEN ((((vt2.c0)) BETWEEN ((x'dbad')) AND ((vt1.c0)))) AND (((vt2.c0) BETWEEN (vt0.c1) AND (vt1.c0)))) INNER JOIN vt0 ON (vt0.c1 COLLATE RTRIM IN ());
SELECT ALL vt1.c0, vt2.c0 FROM vt1 INNER JOIN vt2 ON CAST('{j' AS NUMERIC) GROUP BY vt1.c0, vt2.c0;
SELECT ALL vt1.c0, vt2.c0 FROM vt1 INNER JOIN vt2 ON CAST('{j' AS NUMERIC) WHERE ((+ (vt1.c0))) GROUP BY vt1.c0, vt2.c0 UNION SELECT ALL vt1.c0, vt2.c0 FROM vt1 INNER JOIN vt2 ON CAST('{j' AS NUMERIC) WHERE ((NOT ((+ (vt1.c0))))) GROUP BY vt1.c0, vt2.c0 UNION SELECT vt1.c0, vt2.c0 FROM vt1 INNER JOIN vt2 ON CAST('{j' AS NUMERIC) WHERE ((((+ (vt1.c0))) ISNULL)) GROUP BY vt1.c0, vt2.c0;
SELECT ALL vt1.c0, vt2.c0 FROM vt1 INNER JOIN vt2 ON CAST('{j' AS NUMERIC) GROUP BY vt1.c0, vt2.c0;
SELECT vt0.c2 FROM vt0 GROUP BY vt0.c2;
SELECT ALL vt0.c2 FROM vt0 GROUP BY vt0.c2 HAVING MAX(AVG(vt0.c2)) UNION ALL SELECT ALL vt0.c2 FROM vt0 GROUP BY vt0.c2 HAVING (NOT (MAX(AVG(vt0.c2)))) UNION ALL SELECT ALL vt0.c2 FROM vt0 GROUP BY vt0.c2 HAVING ((MAX(AVG(vt0.c2))) ISNULL);
SELECT SUM(((vt1.c0)<(vt0.c0)) COLLATE BINARY) FROM vt1, vt0, vt2, v0 ORDER BY ((((((vt0.c0)OR(vt2.c0)))OR(vt1.c0))) ISNULL) ASC;
SELECT ALL v0.c0 FROM v0;
SELECT ALL v0.c0 FROM v0 WHERE (LTRIM(v0.c0, 0.3788023261648188) COLLATE BINARY) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE ((NOT (LTRIM(v0.c0, 0.3788023261648188) COLLATE BINARY))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE (((LTRIM(v0.c0, 0.3788023261648188) COLLATE BINARY) ISNULL));
SELECT ALL v0.c0 FROM v0;
SELECT DISTINCT * FROM vt0, vt1;
SELECT DISTINCT * FROM vt0, vt1 WHERE (((CAST(vt0.c2 AS INTEGER))<>(LIKELY(DISTINCT vt1.c0)))) UNION SELECT DISTINCT * FROM vt0, vt1 WHERE ((NOT (((CAST(vt0.c2 AS INTEGER))!=(LIKELY(DISTINCT vt1.c0)))))) UNION SELECT DISTINCT * FROM vt0, vt1 WHERE (((((CAST(vt0.c2 AS INTEGER))<>(LIKELY(DISTINCT vt1.c0)))) ISNULL));
SELECT DISTINCT * FROM vt0, vt1;
SELECT vt0.c1, vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c1, vt0.c0, v0.c0;
SELECT vt0.c1, vt0.c0, v0.c0 FROM vt0, v0 WHERE (((((v0.c0) IS TRUE)) BETWEEN (CASE vt0.c2  WHEN vt0.c1 THEN vt0.c2 ELSE v0.c0 END) AND (HEX(DISTINCT vt0.c1)))) GROUP BY vt0.c1, vt0.c0, v0.c0 UNION SELECT vt0.c1, vt0.c0, v0.c0 FROM vt0, v0 WHERE ((NOT (((((v0.c0) IS TRUE)) BETWEEN (CASE vt0.c2  WHEN vt0.c1 THEN vt0.c2 ELSE v0.c0 END) AND (HEX(DISTINCT vt0.c1)))))) GROUP BY vt0.c1, vt0.c0, v0.c0 UNION SELECT ALL vt0.c1, vt0.c0, v0.c0 FROM vt0, v0 WHERE (((((((v0.c0) IS TRUE)) BETWEEN (CASE vt0.c2  WHEN vt0.c1 THEN vt0.c2 ELSE v0.c0 END) AND (HEX(DISTINCT vt0.c1)))) ISNULL)) GROUP BY vt0.c1, vt0.c0, v0.c0;
SELECT vt0.c1, vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c1, vt0.c0, v0.c0;
SELECT vt0.c0, vt1.c0 FROM vt1, v0, vt0, vt2 GROUP BY vt0.c0, vt1.c0;
SELECT vt0.c0, vt1.c0 FROM vt1, v0, vt0, vt2 GROUP BY vt0.c0, vt1.c0 HAVING ((TOTAL(vt0.c1)) NOT BETWEEN (((((vt0.c0)AND(vt0.c2)))AND(NULL))) AND (((vt0.c2)GLOB(vt0.c1)))) UNION ALL SELECT ALL vt0.c0, vt1.c0 FROM vt1, v0, vt0, vt2 GROUP BY vt0.c0, vt1.c0 HAVING (NOT (((TOTAL(vt0.c1)) NOT BETWEEN (((((vt0.c0)AND(vt0.c2)))AND(NULL))) AND (((vt0.c2)GLOB(vt0.c1)))))) UNION ALL SELECT ALL vt0.c0, vt1.c0 FROM vt1, v0, vt0, vt2 GROUP BY vt0.c0, vt1.c0 HAVING ((((TOTAL(vt0.c1)) NOT BETWEEN (((((vt0.c0)AND(vt0.c2)))AND(NULL))) AND (((vt0.c2)GLOB(vt0.c1))))) ISNULL);
SELECT vt0.c0, vt1.c0 FROM vt1, v0, vt0, vt2 GROUP BY vt0.c0, vt1.c0;
SELECT vt0.c0, vt1.c0 FROM vt1, v0, vt0, vt2 GROUP BY vt0.c0, vt1.c0 HAVING ((TOTAL(vt0.c1)) NOT BETWEEN (((((vt0.c0)AND(vt0.c2)))AND(NULL))) AND (((vt0.c2)GLOB(vt0.c1)))) UNION ALL SELECT ALL vt0.c0, vt1.c0 FROM vt1, v0, vt0, vt2 GROUP BY vt0.c0, vt1.c0 HAVING (NOT (((TOTAL(vt0.c1)) NOT BETWEEN (((((vt0.c0)AND(vt0.c2)))AND(NULL))) AND (((vt0.c2)GLOB(vt0.c1)))))) UNION ALL SELECT ALL vt0.c0, vt1.c0 FROM vt1, v0, vt0, vt2 GROUP BY vt0.c0, vt1.c0 HAVING ((((TOTAL(vt0.c1)) NOT BETWEEN (((((vt0.c0)AND(vt0.c2)))AND(NULL))) AND (((vt0.c2)GLOB(vt0.c1))))) ISNULL);
SELECT vt0.c0, vt1.c0 FROM vt1, v0, vt0, vt2 GROUP BY vt0.c0, vt1.c0;
SELECT v0.c0 FROM v0;
SELECT ALL v0.c0 FROM v0 WHERE ('') UNION ALL SELECT v0.c0 FROM v0 WHERE ((NOT (''))) UNION ALL SELECT v0.c0 FROM v0 WHERE ((('') ISNULL));
SELECT v0.c0 FROM v0;
SELECT DISTINCT vt2.c0 FROM vt2;
SELECT DISTINCT vt2.c0 FROM vt2 WHERE ((((vt2.c0)) NOT BETWEEN (((~ (vt2.c0)))) AND ((((vt2.c0) ISNULL))))) UNION SELECT DISTINCT vt2.c0 FROM vt2 WHERE ((NOT ((((vt2.c0)) NOT BETWEEN (((~ (vt2.c0)))) AND ((((vt2.c0) ISNULL))))))) UNION SELECT DISTINCT vt2.c0 FROM vt2 WHERE ((((((vt2.c0)) NOT BETWEEN (((~ (vt2.c0)))) AND ((((vt2.c0) ISNULL))))) ISNULL));
SELECT DISTINCT vt2.c0 FROM vt2;
SELECT vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0;
SELECT vt0.c0, v0.c0 FROM vt0, v0 WHERE (((((vt0.c0)&('w')))>=((vt0.c2 IN ())))) GROUP BY vt0.c0, v0.c0 UNION SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 WHERE ((NOT (((((vt0.c0)&('w')))>=((vt0.c2 IN ())))))) GROUP BY vt0.c0, v0.c0 UNION SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 WHERE (((((((vt0.c0)&('w')))>=((vt0.c2 IN ())))) ISNULL)) GROUP BY vt0.c0, v0.c0;
SELECT vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0;
SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING TOTAL(AVG(MIN(GROUP_CONCAT(vt2.c0)))) UNION ALL SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING (NOT (TOTAL(AVG(MIN(GROUP_CONCAT(vt2.c0)))))) UNION ALL SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING ((TOTAL(AVG(MIN(GROUP_CONCAT(vt2.c0))))) ISNULL);
SELECT vt0.c2 FROM vt0, vt2, v0;
SELECT ALL vt0.c2 FROM vt0, vt2, v0 WHERE (((vt0.c0 IN ()) IN ())) UNION ALL SELECT vt0.c2 FROM vt0, vt2, v0 WHERE ((NOT (((vt0.c0 IN ()) IN ())))) UNION ALL SELECT vt0.c2 FROM vt0, vt2, v0 WHERE (((((vt0.c0 IN ()) IN ())) ISNULL));
SELECT vt0.c2 FROM vt0, vt2, v0;
SELECT DISTINCT * FROM vt2 INNER JOIN vt0 ON LIKELIHOOD(DISTINCT (vt0.c1 IN ()), 0.9046289816145194) RIGHT OUTER JOIN v0 ON CASE WHEN vt0.c1 COLLATE NOCASE THEN CAST('-1921577223' AS TEXT) END FULL OUTER JOIN vt1 ON CASE WHEN vt2.c0 THEN vt1.c0 END COLLATE NOCASE;
SELECT DISTINCT * FROM vt2 INNER JOIN vt0 ON LIKELIHOOD(DISTINCT (vt0.c1 IN ()), 0.9046289816145194) RIGHT OUTER JOIN v0 ON CASE WHEN vt0.c1 COLLATE NOCASE THEN CAST('-1921577223' AS TEXT) END FULL OUTER JOIN vt1 ON CASE WHEN vt2.c0 THEN vt1.c0 END COLLATE NOCASE WHERE ((- (((vt0.c0)/(vt0.c2))))) UNION SELECT DISTINCT * FROM vt2 INNER JOIN vt0 ON LIKELIHOOD(DISTINCT (vt0.c1 IN ()), 0.9046289816145194) RIGHT OUTER JOIN v0 ON CASE WHEN vt0.c1 COLLATE NOCASE THEN CAST('-1921577223' AS TEXT) END FULL OUTER JOIN vt1 ON CASE WHEN vt2.c0 THEN vt1.c0 END COLLATE NOCASE WHERE ((NOT ((- (((vt0.c0)/(vt0.c2))))))) UNION SELECT DISTINCT * FROM vt2 INNER JOIN vt0 ON LIKELIHOOD(DISTINCT (vt0.c1 IN ()), 0.9046289816145194) RIGHT OUTER JOIN v0 ON CASE WHEN vt0.c1 COLLATE NOCASE THEN CAST('-1921577223' AS TEXT) END FULL OUTER JOIN vt1 ON CASE WHEN vt2.c0 THEN vt1.c0 END COLLATE NOCASE WHERE ((((- (((vt0.c0)/(vt0.c2))))) ISNULL));
SELECT DISTINCT * FROM vt2 INNER JOIN vt0 ON LIKELIHOOD(DISTINCT (vt0.c1 IN ()), 0.9046289816145194) RIGHT OUTER JOIN v0 ON CASE WHEN vt0.c1 COLLATE NOCASE THEN CAST('-1921577223' AS TEXT) END FULL OUTER JOIN vt1 ON CASE WHEN vt2.c0 THEN vt1.c0 END COLLATE NOCASE;
SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT ALL vt2.c0 FROM vt2 WHERE ((((((((((vt2.c0)OR(vt2.c0)))AND(vt2.c0)))OR(vt2.c0)))OR(vt2.c0)) IN (vt2.c0))) GROUP BY vt2.c0 UNION SELECT vt2.c0 FROM vt2 WHERE ((NOT ((((((((((vt2.c0)OR(vt2.c0)))AND(vt2.c0)))OR(vt2.c0)))OR(vt2.c0)) IN (vt2.c0))))) GROUP BY vt2.c0 UNION SELECT vt2.c0 FROM vt2 WHERE ((((((((((((vt2.c0)OR(vt2.c0)))AND(vt2.c0)))OR(vt2.c0)))OR(vt2.c0)) IN (vt2.c0))) ISNULL)) GROUP BY vt2.c0;
SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT ALL vt0.c1, vt0.c2, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c2, vt0.c0;
SELECT vt0.c1, vt0.c2, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c2, vt0.c0 HAVING LIKELY(DISTINCT MAX(GROUP_CONCAT(GROUP_CONCAT(MAX(vt0.c2))))) UNION ALL SELECT ALL vt0.c1, vt0.c2, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c2, vt0.c0 HAVING (NOT (LIKELY(DISTINCT MAX(GROUP_CONCAT(GROUP_CONCAT(MAX(vt0.c2))))))) UNION ALL SELECT vt0.c1, vt0.c2, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c2, vt0.c0 HAVING ((LIKELY(DISTINCT MAX(GROUP_CONCAT(GROUP_CONCAT(MAX(vt0.c2)))))) ISNULL);
SELECT ALL MAX((((((((x'')AND(0x7fcd6868)))OR(vt1.c0))))<=((((vt0.c2)LIKE(vt0.c1)))))) FROM v0, vt1, vt0, vt2;
SELECT * FROM vt1;
SELECT ALL * FROM vt1 WHERE (((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))<=(CAST(vt1.c0 AS BLOB)))) UNION ALL SELECT ALL * FROM vt1 WHERE ((NOT (((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))<=(CAST(vt1.c0 AS BLOB)))))) UNION ALL SELECT ALL * FROM vt1 WHERE (((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))<=(CAST(vt1.c0 AS BLOB)))) ISNULL));
SELECT * FROM vt1;
SELECT DISTINCT vt0.c2, vt0.c1 FROM vt0;
SELECT DISTINCT vt0.c2, vt0.c1 FROM vt0 WHERE ((vt0.c2 IN (CASE vt0.c1  WHEN vt0.c0 THEN vt0.c2 ELSE vt0.c1 END))) UNION SELECT DISTINCT vt0.c2, vt0.c1 FROM vt0 WHERE ((NOT ((vt0.c2 IN (CASE vt0.c1  WHEN vt0.c0 THEN vt0.c2 ELSE vt0.c1 END))))) UNION SELECT DISTINCT vt0.c2, vt0.c1 FROM vt0 WHERE ((((vt0.c2 IN (CASE vt0.c1  WHEN vt0.c0 THEN vt0.c2 ELSE vt0.c1 END))) ISNULL));
SELECT DISTINCT vt0.c2, vt0.c1 FROM vt0;
SELECT ALL vt0.c1, v0.c0, vt2.c0, vt1.c0, vt0.c2, vt0.c0 FROM vt0, v0, vt1 FULL OUTER JOIN vt2 ON (((vt0.c0)+('iJ')) IN ()) GROUP BY vt0.c1, v0.c0, vt2.c0, vt1.c0, vt0.c2, vt0.c0;
SELECT vt0.c1, v0.c0, vt2.c0, vt1.c0, vt0.c2, vt0.c0 FROM vt0, v0, vt1 FULL OUTER JOIN vt2 ON (((vt0.c0)+('iJ')) IN ()) WHERE (x'') GROUP BY vt0.c1, v0.c0, vt2.c0, vt1.c0, vt0.c2, vt0.c0 UNION SELECT ALL vt0.c1, v0.c0, vt2.c0, vt1.c0, vt0.c2, vt0.c0 FROM vt0, v0, vt1 FULL OUTER JOIN vt2 ON (((vt0.c0)+('iJ')) IN ()) WHERE ((NOT (x''))) GROUP BY vt0.c1, v0.c0, vt2.c0, vt1.c0, vt0.c2, vt0.c0 UNION SELECT vt0.c1, v0.c0, vt2.c0, vt1.c0, vt0.c2, vt0.c0 FROM vt0, v0, vt1 FULL OUTER JOIN vt2 ON (((vt0.c0)+('iJ')) IN ()) WHERE (((x'') ISNULL)) GROUP BY vt0.c1, v0.c0, vt2.c0, vt1.c0, vt0.c2, vt0.c0;
SELECT ALL vt0.c1, v0.c0, vt2.c0, vt1.c0, vt0.c2, vt0.c0 FROM vt0, v0, vt1 FULL OUTER JOIN vt2 ON (((vt0.c0)+('iJ')) IN ()) GROUP BY vt0.c1, v0.c0, vt2.c0, vt1.c0, vt0.c2, vt0.c0;
SELECT vt0.c0, vt0.c2, v0.c0 FROM v0, vt0, vt2 GROUP BY vt0.c0, vt0.c2, v0.c0;
SELECT ALL vt0.c0, vt0.c2, v0.c0 FROM v0, vt0, vt2 GROUP BY vt0.c0, vt0.c2, v0.c0 HAVING MAX(COUNT(*)) UNION ALL SELECT ALL vt0.c0, vt0.c2, v0.c0 FROM v0, vt0, vt2 GROUP BY vt0.c0, vt0.c2, v0.c0 HAVING (NOT (MAX(COUNT(*)))) UNION ALL SELECT ALL vt0.c0, vt0.c2, v0.c0 FROM v0, vt0, vt2 GROUP BY vt0.c0, vt0.c2, v0.c0 HAVING ((MAX(COUNT(*))) ISNULL);
SELECT ALL v0.c0 FROM v0;
SELECT v0.c0 FROM v0 WHERE (CASE (v0.c0 IN ())  WHEN ((((v0.c0)OR(v0.c0)))AND(v0.c0)) THEN (v0.c0 IN ()) WHEN ((((v0.c0)AND(v0.c0)))OR(v0.c0)) THEN ABS(DISTINCT v0.c0) WHEN ((v0.c0) BETWEEN (x'') AND (v0.c0)) THEN (+ (0.07413039872359428)) END) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE ((NOT (CASE (v0.c0 IN ())  WHEN ((((v0.c0)OR(v0.c0)))AND(v0.c0)) THEN (v0.c0 IN ()) WHEN ((((v0.c0)AND(v0.c0)))OR(v0.c0)) THEN ABS(DISTINCT v0.c0) WHEN ((v0.c0) BETWEEN (x'') AND (v0.c0)) THEN (+ (0.07413039872359428)) END))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE (((CASE (v0.c0 IN ())  WHEN ((((v0.c0)OR(v0.c0)))AND(v0.c0)) THEN (v0.c0 IN ()) WHEN ((((v0.c0)AND(v0.c0)))OR(v0.c0)) THEN ABS(DISTINCT v0.c0) WHEN ((v0.c0) BETWEEN (x'') AND (v0.c0)) THEN (+ (0.07413039872359428)) END) ISNULL));
SELECT ALL v0.c0 FROM v0;
SELECT DISTINCT vt2.c0, v0.c0 FROM vt1, v0, vt2;
SELECT DISTINCT vt2.c0, v0.c0 FROM vt1, v0, vt2 WHERE (0.9466828229238753) UNION SELECT DISTINCT vt2.c0, v0.c0 FROM vt1, v0, vt2 WHERE ((NOT (0.9466828229238753))) UNION SELECT DISTINCT vt2.c0, v0.c0 FROM vt1, v0, vt2 WHERE (((0.9466828229238753) ISNULL));
SELECT DISTINCT vt2.c0, v0.c0 FROM vt1, v0, vt2;
SELECT v0.c0 FROM v0, vt1, vt2, vt0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0, vt1, vt2, vt0 WHERE ((+ (vt0.c2)) COLLATE BINARY) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0, vt1, vt2, vt0 WHERE ((NOT ((+ (vt0.c2)) COLLATE BINARY))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0, vt1, vt2, vt0 WHERE ((((+ (vt0.c2)) COLLATE BINARY) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0, vt1, vt2, vt0 GROUP BY v0.c0;
SELECT vt2.c0, v0.c0 FROM v0, vt2 GROUP BY vt2.c0, v0.c0;
SELECT ALL vt2.c0, v0.c0 FROM v0, vt2 GROUP BY vt2.c0, v0.c0 HAVING ((((((((MIN(v0.c0))OR(load_extension(v0.c0, MIN(TOTAL(vt2.c0))))))AND(SUM(vt2.c0))))OR(((COUNT(*)) BETWEEN (v0.c0) AND (COUNT(*))))))AND(AVG(vt2.c0))) UNION ALL SELECT vt2.c0, v0.c0 FROM v0, vt2 GROUP BY vt2.c0, v0.c0 HAVING (NOT (((((((((MIN(v0.c0))OR(load_extension(v0.c0, MIN(TOTAL(vt2.c0))))))AND(SUM(vt2.c0))))OR(((COUNT(*)) BETWEEN (v0.c0) AND (COUNT(*))))))AND(AVG(vt2.c0))))) UNION ALL SELECT vt2.c0, v0.c0 FROM v0, vt2 GROUP BY vt2.c0, v0.c0 HAVING ((((((((((MIN(v0.c0))OR(load_extension(v0.c0, MIN(TOTAL(vt2.c0))))))AND(SUM(vt2.c0))))OR(((COUNT(*)) BETWEEN (v0.c0) AND (COUNT(*))))))AND(AVG(vt2.c0)))) ISNULL);
SELECT * FROM vt1, v0, vt0;
SELECT ALL * FROM vt1, v0, vt0 WHERE (((vt0.c1)=(vt0.c2)) COLLATE NOCASE) UNION ALL SELECT * FROM vt1, v0, vt0 WHERE ((NOT (((vt0.c1)==(vt0.c2)) COLLATE NOCASE))) UNION ALL SELECT * FROM vt1, v0, vt0 WHERE (((((vt0.c1)=(vt0.c2)) COLLATE NOCASE) ISNULL));
SELECT * FROM vt1, v0, vt0;
SELECT DISTINCT * FROM vt2, vt1;
SELECT DISTINCT * FROM vt2, vt1 WHERE ((((((vt2.c0) BETWEEN (vt2.c0) AND (vt1.c0))))!=((((vt2.c0) ISNULL))))) UNION SELECT DISTINCT * FROM vt2, vt1 WHERE ((NOT ((((((vt2.c0) BETWEEN (vt2.c0) AND (vt1.c0))))<>((((vt2.c0) ISNULL))))))) UNION SELECT DISTINCT * FROM vt2, vt1 WHERE ((((((((vt2.c0) BETWEEN (vt2.c0) AND (vt1.c0))))<>((((vt2.c0) ISNULL))))) ISNULL));
SELECT DISTINCT * FROM vt2, vt1;
SELECT ALL vt2.c0 FROM vt1, vt2 GROUP BY vt2.c0;
SELECT vt2.c0 FROM vt1, vt2 WHERE (((((vt2.c0) NOT BETWEEN (vt2.c0) AND (vt2.c0))) NOT BETWEEN (vt1.c0 COLLATE NOCASE) AND (((vt2.c0)||(vt2.c0))))) GROUP BY vt2.c0 UNION SELECT ALL vt2.c0 FROM vt1, vt2 WHERE ((NOT (((((vt2.c0) NOT BETWEEN (vt2.c0) AND (vt2.c0))) NOT BETWEEN (vt1.c0 COLLATE NOCASE) AND (((vt2.c0)||(vt2.c0))))))) GROUP BY vt2.c0 UNION SELECT ALL vt2.c0 FROM vt1, vt2 WHERE (((((((vt2.c0) NOT BETWEEN (vt2.c0) AND (vt2.c0))) NOT BETWEEN (vt1.c0 COLLATE NOCASE) AND (((vt2.c0)||(vt2.c0))))) ISNULL)) GROUP BY vt2.c0;
SELECT ALL vt2.c0 FROM vt1, vt2 GROUP BY vt2.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING CASE WHEN COUNT(v0.c0) THEN MIN(MIN(MIN(v0.c0))) ELSE MAX(MAX(GROUP_CONCAT(GROUP_CONCAT(COUNT(*))))) END UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (CASE WHEN COUNT(v0.c0) THEN MIN(MIN(MIN(v0.c0))) ELSE MAX(MAX(GROUP_CONCAT(GROUP_CONCAT(COUNT(*))))) END)) UNION ALL SELECT v0.c0 FROM v0 NOT INDEXED GROUP BY v0.c0 HAVING ((CASE WHEN COUNT(v0.c0) THEN MIN(MIN(MIN(v0.c0))) ELSE MAX(MAX(GROUP_CONCAT(GROUP_CONCAT(COUNT(*))))) END) ISNULL);
SELECT TOTAL(vt0.c0) FROM vt2, vt0 ORDER BY (((vt0.c1 IN ())) IS TRUE);
SELECT vt2.c0, vt0.c2, vt1.c0, vt0.c0, vt0.c1 FROM vt1, vt2, v0, vt0;
SELECT vt2.c0, vt0.c2, vt1.c0, vt0.c0, vt0.c1 FROM vt1, vt2, v0, vt0 WHERE ((((NULL)) BETWEEN (((+ (vt0.c1)))) AND ((((vt2.c0) NOT BETWEEN (vt0.c2) AND (vt0.c2)))))) UNION ALL SELECT vt2.c0, vt0.c2, vt1.c0, vt0.c0, vt0.c1 FROM vt1, vt2, v0, vt0 WHERE ((NOT ((((NULL)) BETWEEN (((+ (vt0.c1)))) AND ((((vt2.c0) NOT BETWEEN (vt0.c2) AND (vt0.c2)))))))) UNION ALL SELECT vt2.c0, vt0.c2, vt1.c0, vt0.c0, vt0.c1 FROM vt1, vt2, v0, vt0 WHERE ((((((NULL)) BETWEEN (((+ (vt0.c1)))) AND ((((vt2.c0) NOT BETWEEN (vt0.c2) AND (vt0.c2)))))) ISNULL));
SELECT vt2.c0, vt0.c2, vt1.c0, vt0.c0, vt0.c1 FROM vt1, vt2, v0, vt0;
SELECT DISTINCT * FROM vt2, vt0, v0, vt1;
SELECT DISTINCT * FROM vt2, vt0, v0, vt1 WHERE (((vt0.c1) IS TRUE) COLLATE BINARY) UNION SELECT DISTINCT * FROM vt2, vt0, v0, vt1 WHERE ((NOT (((vt0.c1) IS TRUE) COLLATE BINARY))) UNION SELECT DISTINCT * FROM vt2, vt0, v0, vt1 WHERE (((((vt0.c1) IS TRUE) COLLATE BINARY) ISNULL));
SELECT DISTINCT * FROM vt2, vt0, v0, vt1;
SELECT ALL vt0.c0 FROM vt0, v0, vt2, vt1 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, v0, vt2, vt1 WHERE (vt0.c1) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0, v0, vt2, vt1 WHERE ((NOT (vt0.c1))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0, v0, vt2, vt1 WHERE (((vt0.c1) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, v0, vt2, vt1 GROUP BY vt0.c0;
SELECT ALL vt2.c0, vt0.c0 FROM vt0, vt2 GROUP BY vt2.c0, vt0.c0;
SELECT ALL vt2.c0, vt0.c0 FROM vt0, vt2 GROUP BY vt2.c0, vt0.c0 HAVING ((((vt2.c0) NOTNULL)) NOT NULL) UNION ALL SELECT ALL vt2.c0, vt0.c0 FROM vt0, vt2 GROUP BY vt2.c0, vt0.c0 HAVING (NOT (((((vt2.c0) NOTNULL)) NOT NULL))) UNION ALL SELECT ALL vt2.c0, vt0.c0 FROM vt0, vt2 GROUP BY vt2.c0, vt0.c0 HAVING ((((((vt2.c0) NOTNULL)) NOT NULL)) ISNULL);
SELECT ALL vt2.c0, vt0.c0 FROM vt0, vt2 GROUP BY vt2.c0, vt0.c0;
SELECT ALL vt2.c0, vt0.c0 FROM vt0, vt2 GROUP BY vt2.c0, vt0.c0 HAVING ((((vt2.c0) NOTNULL)) NOT NULL) UNION ALL SELECT ALL vt2.c0, vt0.c0 FROM vt0, vt2 GROUP BY vt2.c0, vt0.c0 HAVING (NOT (((((vt2.c0) NOTNULL)) NOT NULL))) UNION ALL SELECT ALL vt2.c0, vt0.c0 FROM vt0, vt2 GROUP BY vt2.c0, vt0.c0 HAVING ((((((vt2.c0) NOTNULL)) NOT NULL)) ISNULL);
SELECT ALL vt2.c0, vt0.c0 FROM vt0, vt2 GROUP BY vt2.c0, vt0.c0;
SELECT ALL MAX(((HEX(DISTINCT vt2.c0))/(v0.c0))) FROM vt1, v0, vt2 ORDER BY ((((((v0.c0)AND(v0.c0)))AND(v0.c0))) NOT NULL) DESC;
SELECT * FROM vt0;
SELECT ALL * FROM vt0 WHERE (x'f1b0') UNION ALL SELECT * FROM vt0 WHERE ((NOT (x'f1b0'))) UNION ALL SELECT * FROM vt0 WHERE (((x'f1b0') ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT * FROM v0, vt1 NATURAL JOIN vt0;
SELECT DISTINCT * FROM v0, vt1 NATURAL JOIN vt0 WHERE ((NOT ((~ (112374274))))) UNION SELECT DISTINCT * FROM v0, vt1 NATURAL JOIN vt0 WHERE ((NOT ((NOT ((~ (112374274))))))) UNION SELECT DISTINCT * FROM v0, vt1 NATURAL JOIN vt0 WHERE ((((NOT ((~ (112374274))))) ISNULL));
SELECT DISTINCT * FROM v0, vt1 NATURAL JOIN vt0;
SELECT ALL vt1.c0 FROM vt1 INNER JOIN vt2 ON json_quote(CASE WHEN vt2.c0 THEN vt2.c0 WHEN '|}' THEN vt2.c0 WHEN vt1.c0 THEN vt2.c0 WHEN vt1.c0 THEN vt1.c0 WHEN 'yRte[' THEN vt1.c0 WHEN vt2.c0 THEN vt2.c0 WHEN vt2.c0 THEN vt1.c0 END) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 INNER JOIN vt2 ON json_quote(CASE WHEN vt2.c0 THEN vt2.c0 WHEN '|}' THEN vt2.c0 WHEN vt1.c0 THEN vt2.c0 WHEN vt1.c0 THEN vt1.c0 WHEN 'yRte[' THEN vt1.c0 WHEN vt2.c0 THEN vt2.c0 WHEN vt2.c0 THEN vt1.c0 END) WHERE (NULL) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 INNER JOIN vt2 ON json_quote(CASE WHEN vt2.c0 THEN vt2.c0 WHEN '|}' THEN vt2.c0 WHEN vt1.c0 THEN vt2.c0 WHEN vt1.c0 THEN vt1.c0 WHEN 'yRte[' THEN vt1.c0 WHEN vt2.c0 THEN vt2.c0 WHEN vt2.c0 THEN vt1.c0 END) WHERE ((NOT (NULL))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 INNER JOIN vt2 ON json_quote(CASE WHEN vt2.c0 THEN vt2.c0 WHEN '|}' THEN vt2.c0 WHEN vt1.c0 THEN vt2.c0 WHEN vt1.c0 THEN vt1.c0 WHEN 'yRte[' THEN vt1.c0 WHEN vt2.c0 THEN vt2.c0 WHEN vt2.c0 THEN vt1.c0 END) WHERE (((NULL) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 INNER JOIN vt2 ON json_quote(CASE WHEN vt2.c0 THEN vt2.c0 WHEN '|}' THEN vt2.c0 WHEN vt1.c0 THEN vt2.c0 WHEN vt1.c0 THEN vt1.c0 WHEN 'yRte[' THEN vt1.c0 WHEN vt2.c0 THEN vt2.c0 WHEN vt2.c0 THEN vt1.c0 END) GROUP BY vt1.c0;
SELECT vt0.c1, vt0.c0, vt0.c2 FROM vt0 GROUP BY vt0.c1, vt0.c0, vt0.c2;
SELECT ALL vt0.c1, vt0.c0, vt0.c2 FROM vt0 GROUP BY vt0.c1, vt0.c0, vt0.c2 HAVING SUM(((((vt0.c2)AND(vt0.c2)))OR(vt0.c1))) UNION ALL SELECT ALL vt0.c1, vt0.c0, vt0.c2 FROM vt0 GROUP BY vt0.c1, vt0.c0, vt0.c2 HAVING (NOT (SUM(((((vt0.c2)AND(vt0.c2)))OR(vt0.c1))))) UNION ALL SELECT vt0.c1, vt0.c0, vt0.c2 FROM vt0 GROUP BY vt0.c1, vt0.c0, vt0.c2 HAVING ((SUM(((((vt0.c2)AND(vt0.c2)))OR(vt0.c1)))) ISNULL);
SELECT vt0.c1, vt0.c0, vt0.c2 FROM vt0 GROUP BY vt0.c1, vt0.c0, vt0.c2;
SELECT ALL vt0.c1, vt0.c0, vt0.c2 FROM vt0 GROUP BY vt0.c1, vt0.c0, vt0.c2 HAVING SUM(((((vt0.c2)AND(vt0.c2)))OR(vt0.c1))) UNION ALL SELECT ALL vt0.c1, vt0.c0, vt0.c2 FROM vt0 GROUP BY vt0.c1, vt0.c0, vt0.c2 HAVING (NOT (SUM(((((vt0.c2)AND(vt0.c2)))OR(vt0.c1))))) UNION ALL SELECT vt0.c1, vt0.c0, vt0.c2 FROM vt0 GROUP BY vt0.c1, vt0.c0, vt0.c2 HAVING ((SUM(((((vt0.c2)AND(vt0.c2)))OR(vt0.c1)))) ISNULL);
SELECT vt0.c1, vt0.c0, vt0.c2 FROM vt0 GROUP BY vt0.c1, vt0.c0, vt0.c2;
SELECT MIN(x'') FROM vt2, vt0, v0;
SELECT ALL vt0.c0, vt0.c1, v0.c0, vt1.c0, vt0.c2 FROM vt0, v0, vt1;
SELECT vt0.c0, vt0.c1, v0.c0, vt1.c0, vt0.c2 FROM vt0, v0, vt1 WHERE ((((((((((vt0.c0)OR(vt1.c0)))AND(vt0.c1)))AND(0.3087905489515478)))AND(vt0.c1)) IN ())) UNION ALL SELECT vt0.c0, vt0.c1, v0.c0, vt1.c0, vt0.c2 FROM vt0, v0, vt1 WHERE ((NOT ((((((((((vt0.c0)OR(vt1.c0)))AND(vt0.c1)))AND(0.3087905489515478)))AND(vt0.c1)) IN ())))) UNION ALL SELECT vt0.c0, vt0.c1, v0.c0, vt1.c0, vt0.c2 FROM vt0, v0, vt1 WHERE ((((((((((((vt0.c0)OR(vt1.c0)))AND(vt0.c1)))AND(0.3087905489515478)))AND(vt0.c1)) IN ())) ISNULL));
SELECT ALL vt0.c0, vt0.c1, v0.c0, vt1.c0, vt0.c2 FROM vt0, v0, vt1;
SELECT DISTINCT vt2.c0, vt0.c2, vt0.c0 FROM vt2, vt0, v0;
SELECT DISTINCT vt2.c0, vt0.c2, vt0.c0 FROM vt2, vt0, v0 WHERE (((((((((((vt2.c0)OR(vt0.c2)))AND(vt0.c0)))AND(vt2.c0)))OR(vt2.c0)))-((((v0.c0))<>((vt0.c1)))))) UNION SELECT DISTINCT vt2.c0, vt0.c2, vt0.c0 FROM vt2, vt0, v0 WHERE ((NOT (((((((((((vt2.c0)OR(vt0.c2)))AND(vt0.c0)))AND(vt2.c0)))OR(vt2.c0)))-((((v0.c0))!=((vt0.c1)))))))) UNION SELECT DISTINCT vt2.c0, vt0.c2, vt0.c0 FROM vt2, vt0, v0 WHERE (((((((((((((vt2.c0)OR(vt0.c2)))AND(vt0.c0)))AND(vt2.c0)))OR(vt2.c0)))-((((v0.c0))!=((vt0.c1)))))) ISNULL));
SELECT DISTINCT vt2.c0, vt0.c2, vt0.c0 FROM vt2, vt0, v0;
SELECT ALL vt1.c0, vt0.c1, vt0.c2 FROM vt0 RIGHT OUTER JOIN vt1 ON CAST(vt0.c0 AS NUMERIC) GROUP BY vt1.c0, vt0.c1, vt0.c2;
SELECT vt1.c0, vt0.c1, vt0.c2 FROM vt0 RIGHT OUTER JOIN vt1 ON CAST(vt0.c0 AS NUMERIC) WHERE (CASE (vt0.c0 IN ())  WHEN vt0.c0 COLLATE RTRIM THEN (- (vt0.c0)) END) GROUP BY vt1.c0, vt0.c1, vt0.c2 UNION SELECT ALL vt1.c0, vt0.c1, vt0.c2 FROM vt0 RIGHT OUTER JOIN vt1 ON CAST(vt0.c0 AS NUMERIC) WHERE ((NOT (CASE (vt0.c0 IN ())  WHEN vt0.c0 COLLATE RTRIM THEN (- (vt0.c0)) END))) GROUP BY vt1.c0, vt0.c1, vt0.c2 UNION SELECT ALL vt1.c0, vt0.c1, vt0.c2 FROM vt0 RIGHT OUTER JOIN vt1 ON CAST(vt0.c0 AS NUMERIC) WHERE (((CASE (vt0.c0 IN ())  WHEN vt0.c0 COLLATE RTRIM THEN (- (vt0.c0)) END) ISNULL)) GROUP BY vt1.c0, vt0.c1, vt0.c2;
SELECT ALL vt1.c0, vt0.c1, vt0.c2 FROM vt0 RIGHT OUTER JOIN vt1 ON CAST(vt0.c0 AS NUMERIC) GROUP BY vt1.c0, vt0.c1, vt0.c2;
SELECT v0.c0, vt1.c0 FROM vt1, v0 GROUP BY v0.c0, vt1.c0;
SELECT ALL v0.c0, vt1.c0 FROM vt1, v0 GROUP BY v0.c0, vt1.c0 HAVING GROUP_CONCAT(((v0.c0)&(AVG(MIN(COUNT(*)))))) UNION ALL SELECT ALL v0.c0, vt1.c0 FROM vt1, v0 GROUP BY v0.c0, vt1.c0 HAVING (NOT (GROUP_CONCAT(((v0.c0)&(AVG(MIN(COUNT(*)))))))) UNION ALL SELECT ALL v0.c0, vt1.c0 FROM vt1, v0 GROUP BY v0.c0, vt1.c0 HAVING ((GROUP_CONCAT(((v0.c0)&(AVG(MIN(COUNT(*))))))) ISNULL);
SELECT ALL TOTAL(vt1.c0) FROM vt1, v0;
SELECT vt0.c0, vt0.c1, vt0.c2, vt1.c0 FROM vt1, vt0;
SELECT vt0.c0, vt0.c1, vt0.c2, vt1.c0 FROM vt1, vt0 WHERE (((vt0.c2 COLLATE RTRIM)<(CAST(vt0.c2 AS INTEGER)))) UNION ALL SELECT vt0.c0, vt0.c1, vt0.c2, vt1.c0 FROM vt1, vt0 WHERE ((NOT (((vt0.c2 COLLATE RTRIM)<(CAST(vt0.c2 AS INTEGER)))))) UNION ALL SELECT vt0.c0, vt0.c1, vt0.c2, vt1.c0 FROM vt1, vt0 WHERE (((((vt0.c2 COLLATE RTRIM)<(CAST(vt0.c2 AS INTEGER)))) ISNULL));
SELECT vt0.c0, vt0.c1, vt0.c2, vt1.c0 FROM vt1, vt0;
SELECT DISTINCT * FROM vt1 INNER JOIN v0 ON (((vt2.c0 IN ())) IS FALSE) INNER JOIN vt0 ON vt0.c1 FULL OUTER JOIN vt2 ON ((json_valid(vt2.c0))-(((v0.c0) BETWEEN (0.8661690245795407) AND (vt2.c0))));
SELECT DISTINCT * FROM vt1 INNER JOIN v0 ON (((vt2.c0 IN ())) IS FALSE) INNER JOIN vt0 ON vt0.c1 FULL OUTER JOIN vt2 ON ((json_valid(vt2.c0))-(((v0.c0) BETWEEN (0.8661690245795407) AND (vt2.c0)))) WHERE (CASE WHEN vt0.c2 THEN ((vt1.c0) BETWEEN (2033296036) AND (vt2.c0)) END) UNION SELECT DISTINCT * FROM vt1 INNER JOIN v0 ON (((vt2.c0 IN ())) IS FALSE) INNER JOIN vt0 ON vt0.c1 FULL OUTER JOIN vt2 ON ((json_valid(vt2.c0))-(((v0.c0) BETWEEN (0.8661690245795407) AND (vt2.c0)))) WHERE ((NOT (CASE WHEN vt0.c2 THEN ((vt1.c0) BETWEEN (2033296036) AND (vt2.c0)) END))) UNION SELECT DISTINCT * FROM vt1 INNER JOIN v0 ON (((vt2.c0 IN ())) IS FALSE) INNER JOIN vt0 ON vt0.c1 FULL OUTER JOIN vt2 ON ((json_valid(vt2.c0))-(((v0.c0) BETWEEN (0.8661690245795407) AND (vt2.c0)))) WHERE (((CASE WHEN vt0.c2 THEN ((vt1.c0) BETWEEN (2033296036) AND (vt2.c0)) END) ISNULL));
SELECT DISTINCT * FROM vt1 INNER JOIN v0 ON (((vt2.c0 IN ())) IS FALSE) INNER JOIN vt0 ON vt0.c1 FULL OUTER JOIN vt2 ON ((json_valid(vt2.c0))-(((v0.c0) BETWEEN (0.8661690245795407) AND (vt2.c0))));
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE (vt1.c0) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT (vt1.c0))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE (((vt1.c0) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt0.c1, vt0.c2 FROM vt2, vt0 GROUP BY vt0.c1, vt0.c2;
SELECT vt0.c1, vt0.c2 FROM vt2, vt0 GROUP BY vt0.c1, vt0.c2 HAVING (CAST(vt0.c1 AS TEXT) IN ()) UNION ALL SELECT ALL vt0.c1, vt0.c2 FROM vt2, vt0 GROUP BY vt0.c1, vt0.c2 HAVING (NOT ((CAST(vt0.c1 AS TEXT) IN ()))) UNION ALL SELECT vt0.c1, vt0.c2 FROM vt2, vt0 GROUP BY vt0.c1, vt0.c2 HAVING (((CAST(vt0.c1 AS TEXT) IN ())) ISNULL);
SELECT vt0.c1, vt0.c2 FROM vt2, vt0 GROUP BY vt0.c1, vt0.c2;
SELECT vt0.c1, vt0.c2 FROM vt2, vt0 GROUP BY vt0.c1, vt0.c2 HAVING (CAST(vt0.c1 AS TEXT) IN ()) UNION ALL SELECT ALL vt0.c1, vt0.c2 FROM vt2, vt0 GROUP BY vt0.c1, vt0.c2 HAVING (NOT ((CAST(vt0.c1 AS TEXT) IN ()))) UNION ALL SELECT vt0.c1, vt0.c2 FROM vt2, vt0 GROUP BY vt0.c1, vt0.c2 HAVING (((CAST(vt0.c1 AS TEXT) IN ())) ISNULL);
SELECT vt0.c1, vt0.c2 FROM vt2, vt0 GROUP BY vt0.c1, vt0.c2;
SELECT * FROM vt1, vt2, v0;
SELECT * FROM vt1, vt2, v0 WHERE (((x'5d2f') IS TRUE)) UNION ALL SELECT * FROM vt1, vt2, v0 WHERE ((NOT (((x'5d2f') IS TRUE)))) UNION ALL SELECT ALL * FROM vt1, vt2, v0 WHERE (((((x'5d2f') IS TRUE)) ISNULL));
SELECT * FROM vt1, vt2, v0;
SELECT DISTINCT * FROM v0, vt0, vt2 INNER JOIN vt1 ON ((((-1.229155124E9) IS TRUE))OR(vt2.c0));
SELECT DISTINCT * FROM v0, vt0, vt2 INNER JOIN vt1 ON ((((-1.229155124E9) IS TRUE))OR(vt2.c0)) WHERE ((((((vt0.c2)OR(vt0.c0)))AND(v0.c0)) IN (((vt0.c1)-(vt2.c0)), ((vt2.c0)LIKE(vt0.c2))))) UNION SELECT DISTINCT * FROM v0, vt0, vt2 INNER JOIN vt1 ON ((((-1.229155124E9) IS TRUE))OR(vt2.c0)) WHERE ((NOT ((((((vt0.c2)OR(vt0.c0)))AND(v0.c0)) IN (((vt0.c1)-(vt2.c0)), ((vt2.c0)LIKE(vt0.c2))))))) UNION SELECT DISTINCT * FROM v0, vt0, vt2 INNER JOIN vt1 ON ((((-1.229155124E9) IS TRUE))OR(vt2.c0)) WHERE ((((((((vt0.c2)OR(vt0.c0)))AND(v0.c0)) IN (((vt0.c1)-(vt2.c0)), ((vt2.c0)LIKE(vt0.c2))))) ISNULL));
SELECT DISTINCT * FROM v0, vt0, vt2 INNER JOIN vt1 ON ((((-1.229155124E9) IS TRUE))OR(vt2.c0));
SELECT ALL vt0.c1, v0.c0, vt0.c2, vt0.c0 FROM vt2, vt0, vt1, v0 GROUP BY vt0.c1, v0.c0, vt0.c2, vt0.c0;
SELECT ALL vt0.c1, v0.c0, vt0.c2, vt0.c0 FROM vt2, vt0, vt1, v0 WHERE (vt1.c0) GROUP BY vt0.c1, v0.c0, vt0.c2, vt0.c0 UNION SELECT vt0.c1, v0.c0, vt0.c2, vt0.c0 FROM vt2, vt0, vt1, v0 WHERE ((NOT (vt1.c0))) GROUP BY vt0.c1, v0.c0, vt0.c2, vt0.c0 UNION SELECT vt0.c1, v0.c0, vt0.c2, vt0.c0 FROM vt2, vt0, vt1, v0 WHERE (((vt1.c0) ISNULL)) GROUP BY vt0.c1, v0.c0, vt0.c2, vt0.c0;
SELECT ALL vt0.c1, v0.c0, vt0.c2, vt0.c0 FROM vt2, vt0, vt1, v0 GROUP BY vt0.c1, v0.c0, vt0.c2, vt0.c0;
SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING GROUP_CONCAT(0.30280228991897584 COLLATE BINARY) UNION ALL SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING (NOT (GROUP_CONCAT(0.30280228991897584 COLLATE BINARY))) UNION ALL SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING ((GROUP_CONCAT(0.30280228991897584 COLLATE BINARY)) ISNULL);
SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING GROUP_CONCAT(0.30280228991897584 COLLATE BINARY) UNION ALL SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING (NOT (GROUP_CONCAT(0.30280228991897584 COLLATE BINARY))) UNION ALL SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING ((GROUP_CONCAT(0.30280228991897584 COLLATE BINARY)) ISNULL);
SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT vt1.c0 FROM vt2, vt1;
SELECT vt1.c0 FROM vt2, vt1 WHERE (vt2.c0) UNION ALL SELECT ALL vt1.c0 FROM vt2, vt1 WHERE ((NOT (vt2.c0))) UNION ALL SELECT vt1.c0 FROM vt2, vt1 WHERE (((vt2.c0) ISNULL));
SELECT vt1.c0 FROM vt2, vt1;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (LENGTH(((((v0.c0)AND(v0.c0)))OR(v0.c0)))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (LENGTH(((((v0.c0)AND(v0.c0)))OR(v0.c0)))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((LENGTH(((((v0.c0)AND(v0.c0)))OR(v0.c0)))) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT ALL vt0.c2, vt0.c0 FROM vt0 GROUP BY vt0.c2, vt0.c0;
SELECT ALL vt0.c2, vt0.c0 FROM vt0 WHERE (CASE vt0.c0  WHEN vt0.c2 THEN vt0.c1 ELSE vt0.c1 END COLLATE NOCASE) GROUP BY vt0.c2, vt0.c0 UNION SELECT vt0.c2, vt0.c0 FROM vt0 WHERE ((NOT (CASE vt0.c0  WHEN vt0.c2 THEN vt0.c1 ELSE vt0.c1 END COLLATE NOCASE))) GROUP BY vt0.c2, vt0.c0 UNION SELECT ALL vt0.c2, vt0.c0 FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c2 THEN vt0.c1 ELSE vt0.c1 END COLLATE NOCASE) ISNULL)) GROUP BY vt0.c2, vt0.c0;
SELECT ALL vt0.c2, vt0.c0 FROM vt0 GROUP BY vt0.c2, vt0.c0;
SELECT ALL vt1.c0, vt0.c0, vt0.c2, vt0.c1 FROM vt1, vt0, v0 GROUP BY vt1.c0, vt0.c0, vt0.c2, vt0.c1;
SELECT ALL vt1.c0, vt0.c0, vt0.c2, vt0.c1 FROM vt1, vt0, v0 GROUP BY vt1.c0, vt0.c0, vt0.c2, vt0.c1 HAVING AVG(SUM(SUM(vt0.c2))) UNION ALL SELECT ALL vt1.c0, vt0.c0, vt0.c2, vt0.c1 FROM vt1, vt0, v0 GROUP BY vt1.c0, vt0.c0, vt0.c2, vt0.c1 HAVING (NOT (AVG(SUM(SUM(vt0.c2))))) UNION ALL SELECT vt1.c0, vt0.c0, vt0.c2, vt0.c1 FROM vt1, vt0, v0 GROUP BY vt1.c0, vt0.c0, vt0.c2, vt0.c1 HAVING ((AVG(SUM(SUM(vt0.c2)))) ISNULL);
SELECT vt1.c0 FROM vt1;
SELECT ALL vt1.c0 FROM vt1 WHERE (((vt1.c0)IS NOT(vt1.c0)) COLLATE NOCASE) UNION ALL SELECT vt1.c0 FROM vt1 WHERE ((NOT (((vt1.c0)IS NOT(vt1.c0)) COLLATE NOCASE))) UNION ALL SELECT vt1.c0 FROM vt1 WHERE (((((vt1.c0)IS NOT(vt1.c0)) COLLATE NOCASE) ISNULL));
SELECT vt1.c0 FROM vt1;
SELECT DISTINCT * FROM vt0, vt1, vt2;
SELECT DISTINCT * FROM vt0, vt1, vt2 WHERE (((vt0.c2)AND(vt1.c0)) COLLATE RTRIM) UNION SELECT DISTINCT * FROM vt0, vt1, vt2 WHERE ((NOT (((vt0.c2)AND(vt1.c0)) COLLATE RTRIM))) UNION SELECT DISTINCT * FROM vt0, vt1, vt2 WHERE (((((vt0.c2)AND(vt1.c0)) COLLATE RTRIM) ISNULL));
SELECT DISTINCT * FROM vt0, vt1, vt2;
SELECT vt2.c0, v0.c0, vt1.c0, vt0.c1, vt0.c2 FROM v0, vt1, vt2, vt0 GROUP BY vt2.c0, v0.c0, vt1.c0, vt0.c1, vt0.c2;
SELECT vt2.c0, v0.c0, vt1.c0, vt0.c1, vt0.c2 FROM v0, vt1, vt2, vt0 WHERE (CAST((x'' IN ()) AS REAL)) GROUP BY vt2.c0, v0.c0, vt1.c0, vt0.c1, vt0.c2 UNION SELECT vt2.c0, v0.c0, vt1.c0, vt0.c1, vt0.c2 FROM v0, vt1, vt2, vt0 WHERE ((NOT (CAST((x'' IN ()) AS REAL)))) GROUP BY vt2.c0, v0.c0, vt1.c0, vt0.c1, vt0.c2 UNION SELECT vt2.c0, v0.c0, vt1.c0, vt0.c1, vt0.c2 FROM v0, vt1, vt2, vt0 WHERE (((CAST((x'' IN ()) AS REAL)) ISNULL)) GROUP BY vt2.c0, v0.c0, vt1.c0, vt0.c1, vt0.c2;
SELECT vt2.c0, v0.c0, vt1.c0, vt0.c1, vt0.c2 FROM v0, vt1, vt2, vt0 GROUP BY vt2.c0, v0.c0, vt1.c0, vt0.c1, vt0.c2;
SELECT ALL v0.c0, vt0.c1, vt0.c0 FROM vt2, vt0, v0, vt1 GROUP BY v0.c0, vt0.c1, vt0.c0;
SELECT v0.c0, vt0.c1, vt0.c0 FROM vt2, vt0, v0, vt1 GROUP BY v0.c0, vt0.c1, vt0.c0 HAVING (vt0.c2 IN (AVG(SUM(vt0.c0)))) UNION ALL SELECT v0.c0, vt0.c1, vt0.c0 FROM vt2, vt0, v0, vt1 GROUP BY v0.c0, vt0.c1, vt0.c0 HAVING (NOT ((vt0.c2 IN (AVG(SUM(vt0.c0)))))) UNION ALL SELECT ALL v0.c0, vt0.c1, vt0.c0 FROM vt2, vt0, v0, vt1 GROUP BY v0.c0, vt0.c1, vt0.c0 HAVING (((vt0.c2 IN (AVG(SUM(vt0.c0))))) ISNULL);
SELECT * FROM v0, vt0, vt1;
SELECT ALL * FROM v0, vt0, vt1 WHERE (((vt0.c0) BETWEEN (vt0.c0) AND (v0.c0)) COLLATE NOCASE) UNION ALL SELECT * FROM v0, vt0, vt1 WHERE ((NOT (((vt0.c0) BETWEEN (vt0.c0) AND (v0.c0)) COLLATE NOCASE))) UNION ALL SELECT * FROM v0, vt0, vt1 WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND (v0.c0)) COLLATE NOCASE) ISNULL));
SELECT * FROM v0, vt0, vt1;
SELECT DISTINCT vt0.c2, vt1.c0 FROM vt0, vt1, v0;
SELECT DISTINCT vt0.c2, vt1.c0 FROM vt0, vt1, v0 WHERE (CAST(v0.c0 COLLATE NOCASE AS REAL)) UNION SELECT DISTINCT vt0.c2, vt1.c0 FROM vt0, vt1, v0 WHERE ((NOT (CAST(v0.c0 COLLATE NOCASE AS REAL)))) UNION SELECT DISTINCT vt0.c2, vt1.c0 FROM vt0, vt1, v0 WHERE (((CAST(v0.c0 COLLATE NOCASE AS REAL)) ISNULL));
SELECT DISTINCT vt0.c2, vt1.c0 FROM vt0, vt1, v0;
SELECT v0.c0, vt2.c0 FROM vt2, v0 GROUP BY v0.c0, vt2.c0;
SELECT ALL v0.c0, vt2.c0 FROM vt2, v0 WHERE (((((NULL)||(vt2.c0))) NOT BETWEEN (((v0.c0)>=(v0.c0))) AND ((((v0.c0))>((v0.c0)))))) GROUP BY v0.c0, vt2.c0 UNION SELECT ALL v0.c0, vt2.c0 FROM vt2, v0 WHERE ((NOT (((((NULL)||(vt2.c0))) NOT BETWEEN (((v0.c0)>=(v0.c0))) AND ((((v0.c0))>((v0.c0)))))))) GROUP BY v0.c0, vt2.c0 UNION SELECT v0.c0, vt2.c0 FROM vt2, v0 WHERE (((((((NULL)||(vt2.c0))) NOT BETWEEN (((v0.c0)>=(v0.c0))) AND ((((v0.c0))>((v0.c0)))))) ISNULL)) GROUP BY v0.c0, vt2.c0;
SELECT v0.c0, vt2.c0 FROM vt2, v0 GROUP BY v0.c0, vt2.c0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING TOTAL(MAX(vt0.c0)) UNION ALL SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING (NOT (TOTAL(MAX(vt0.c0)))) UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING ((TOTAL(MAX(vt0.c0))) ISNULL);
SELECT ALL v0.c0 FROM v0;
SELECT v0.c0 FROM v0 WHERE (v0.c0 COLLATE RTRIM) UNION ALL SELECT v0.c0 FROM v0 WHERE ((NOT (v0.c0 COLLATE RTRIM))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE (((v0.c0 COLLATE RTRIM) ISNULL));
SELECT ALL v0.c0 FROM v0;
SELECT DISTINCT * FROM vt0, vt2, v0;
SELECT DISTINCT * FROM vt0, vt2, v0 WHERE (CASE ((((vt0.c2)AND(v0.c0)))OR(v0.c0))  WHEN (- ('-2005806100')) THEN NULL ELSE CASE WHEN NULL THEN v0.c0 ELSE vt0.c0 END END) UNION SELECT DISTINCT * FROM vt0, vt2, v0 WHERE ((NOT (CASE ((((vt0.c2)AND(v0.c0)))OR(v0.c0))  WHEN (- ('-2005806100')) THEN NULL ELSE CASE WHEN NULL THEN v0.c0 ELSE vt0.c0 END END))) UNION SELECT DISTINCT * FROM vt0, vt2, v0 WHERE (((CASE ((((vt0.c2)AND(v0.c0)))OR(v0.c0))  WHEN (- ('-2005806100')) THEN NULL ELSE CASE WHEN NULL THEN v0.c0 ELSE vt0.c0 END END) ISNULL));
SELECT DISTINCT * FROM vt0, vt2, v0;
SELECT ALL vt2.c0, vt1.c0 FROM vt1, vt2, v0 GROUP BY vt2.c0, vt1.c0;
SELECT ALL vt2.c0, vt1.c0 FROM vt1, vt2, v0 WHERE (TRIM(DISTINCT CAST(vt1.c0 AS BLOB), ((vt1.c0) NOT BETWEEN (vt2.c0) AND (vt1.c0)))) GROUP BY vt2.c0, vt1.c0 UNION SELECT vt2.c0, vt1.c0 FROM vt1, vt2, v0 WHERE ((NOT (TRIM(DISTINCT CAST(vt1.c0 AS BLOB), ((vt1.c0) NOT BETWEEN (vt2.c0) AND (vt1.c0)))))) GROUP BY vt2.c0, vt1.c0 UNION SELECT ALL vt2.c0, vt1.c0 FROM vt1, vt2, v0 WHERE (((TRIM(DISTINCT CAST(vt1.c0 AS BLOB), ((vt1.c0) NOT BETWEEN (vt2.c0) AND (vt1.c0)))) ISNULL)) GROUP BY vt2.c0, vt1.c0;
SELECT ALL vt2.c0, vt1.c0 FROM vt1, vt2, v0 GROUP BY vt2.c0, vt1.c0;
SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING GROUP_CONCAT(MIN(vt2.c0)) UNION ALL SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING (NOT (GROUP_CONCAT(MIN(vt2.c0)))) UNION ALL SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING ((GROUP_CONCAT(MIN(vt2.c0))) ISNULL);
SELECT ALL vt1.c0 FROM vt1;
SELECT ALL vt1.c0 FROM vt1 WHERE ((((((vt1.c0) IS TRUE), ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)), ((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0))))<((vt1.c0 COLLATE RTRIM, CASE WHEN vt1.c0 THEN vt1.c0 END, '-640249505')))) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT ((((((vt1.c0) IS TRUE), ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)), ((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0))))<((vt1.c0 COLLATE RTRIM, CASE WHEN vt1.c0 THEN vt1.c0 END, '-640249505')))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE ((((((((vt1.c0) IS TRUE), ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)), ((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0))))<((vt1.c0 COLLATE RTRIM, CASE WHEN vt1.c0 THEN vt1.c0 END, '-640249505')))) ISNULL));
SELECT ALL vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1, vt2;
SELECT DISTINCT vt1.c0 FROM vt1, vt2 WHERE ((((vt2.c0)) BETWEEN ((vt1.c0)) AND ((vt2.c0))) COLLATE RTRIM) UNION SELECT DISTINCT vt1.c0 FROM vt1, vt2 WHERE ((NOT ((((vt2.c0)) BETWEEN ((vt1.c0)) AND ((vt2.c0))) COLLATE RTRIM))) UNION SELECT DISTINCT vt1.c0 FROM vt1, vt2 WHERE ((((((vt2.c0)) BETWEEN ((vt1.c0)) AND ((vt2.c0))) COLLATE RTRIM) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1, vt2;
SELECT ALL vt2.c0 FROM v0, vt0, vt1 INNER JOIN vt2 ON NULL GROUP BY vt2.c0;
SELECT ALL vt2.c0 FROM v0, vt0, vt1 NOT INDEXED INNER JOIN vt2 ON NULL WHERE ((NOT (CAST(vt0.c0 AS TEXT)))) GROUP BY vt2.c0 UNION SELECT vt2.c0 FROM v0, vt0, vt1 INNER JOIN vt2 ON NULL WHERE ((NOT ((NOT (CAST(vt0.c0 AS TEXT)))))) GROUP BY vt2.c0 UNION SELECT vt2.c0 FROM v0, vt0, vt1 INNER JOIN vt2 ON NULL WHERE ((((NOT (CAST(vt0.c0 AS TEXT)))) ISNULL)) GROUP BY vt2.c0;
SELECT ALL vt2.c0 FROM v0, vt0, vt1 INNER JOIN vt2 ON NULL GROUP BY vt2.c0;
SELECT ALL v0.c0, vt0.c1, vt0.c2 FROM vt0, v0 GROUP BY v0.c0, vt0.c1, vt0.c2;
SELECT ALL v0.c0, vt0.c1, vt0.c2 FROM vt0, v0 GROUP BY v0.c0, vt0.c1, vt0.c2 HAVING CAST(TOTAL(vt0.c1) AS TEXT) UNION ALL SELECT ALL v0.c0, vt0.c1, vt0.c2 FROM vt0, v0 GROUP BY v0.c0, vt0.c1, vt0.c2 HAVING (NOT (CAST(TOTAL(vt0.c1) AS TEXT))) UNION ALL SELECT ALL v0.c0, vt0.c1, vt0.c2 FROM vt0, v0 GROUP BY v0.c0, vt0.c1, vt0.c2 HAVING ((CAST(TOTAL(vt0.c1) AS TEXT)) ISNULL);
SELECT ALL v0.c0, vt0.c1, vt0.c2 FROM vt0, v0 GROUP BY v0.c0, vt0.c1, vt0.c2;
SELECT ALL v0.c0, vt0.c1, vt0.c2 FROM vt0, v0 GROUP BY v0.c0, vt0.c1, vt0.c2 HAVING CAST(TOTAL(vt0.c1) AS TEXT) UNION ALL SELECT ALL v0.c0, vt0.c1, vt0.c2 FROM vt0, v0 GROUP BY v0.c0, vt0.c1, vt0.c2 HAVING (NOT (CAST(TOTAL(vt0.c1) AS TEXT))) UNION ALL SELECT ALL v0.c0, vt0.c1, vt0.c2 FROM vt0, v0 GROUP BY v0.c0, vt0.c1, vt0.c2 HAVING ((CAST(TOTAL(vt0.c1) AS TEXT)) ISNULL);
SELECT ALL v0.c0, vt0.c1, vt0.c2 FROM vt0, v0 GROUP BY v0.c0, vt0.c1, vt0.c2;
SELECT ALL vt2.c0 FROM v0, vt2, vt1;
SELECT ALL vt2.c0 FROM v0, vt2, vt1 WHERE ('l+nAkHW') UNION ALL SELECT ALL vt2.c0 FROM v0, vt2, vt1 WHERE ((NOT ('l+nAkHW'))) UNION ALL SELECT ALL vt2.c0 FROM v0, vt2, vt1 WHERE ((('l+nAkHW') ISNULL));
SELECT ALL vt2.c0 FROM v0, vt2, vt1;
SELECT DISTINCT vt0.c0, vt2.c0, vt1.c0, v0.c0 FROM vt2, vt0 RIGHT OUTER JOIN vt1 ON 0.39852925389091043 COLLATE RTRIM LEFT OUTER JOIN v0 ON ((CAST(vt0.c1 AS BLOB)) NOT BETWEEN (((vt1.c0)%(v0.c0))) AND (vt0.c0));
SELECT DISTINCT vt0.c0, vt2.c0, vt1.c0, v0.c0 FROM vt2, vt0 RIGHT OUTER JOIN vt1 ON 0.39852925389091043 COLLATE RTRIM LEFT OUTER JOIN v0 ON ((CAST(vt0.c1 AS BLOB)) NOT BETWEEN (((vt1.c0)%(v0.c0))) AND (vt0.c0)) WHERE ((((vt2.c0)) NOT BETWEEN ((CASE WHEN vt2.c0 THEN v0.c0 ELSE vt2.c0 END)) AND ((((NULL) IS TRUE))))) UNION SELECT DISTINCT vt0.c0, vt2.c0, vt1.c0, v0.c0 FROM vt2, vt0 RIGHT OUTER JOIN vt1 ON 0.39852925389091043 COLLATE RTRIM LEFT OUTER JOIN v0 ON ((CAST(vt0.c1 AS BLOB)) NOT BETWEEN (((vt1.c0)%(v0.c0))) AND (vt0.c0)) WHERE ((NOT ((((vt2.c0)) NOT BETWEEN ((CASE WHEN vt2.c0 THEN v0.c0 ELSE vt2.c0 END)) AND ((((NULL) IS TRUE))))))) UNION SELECT DISTINCT vt0.c0, vt2.c0, vt1.c0, v0.c0 FROM vt2, vt0 RIGHT OUTER JOIN vt1 ON 0.39852925389091043 COLLATE RTRIM LEFT OUTER JOIN v0 ON ((CAST(vt0.c1 AS BLOB)) NOT BETWEEN (((vt1.c0)%(v0.c0))) AND (vt0.c0)) WHERE ((((((vt2.c0)) NOT BETWEEN ((CASE WHEN vt2.c0 THEN v0.c0 ELSE vt2.c0 END)) AND ((((NULL) IS TRUE))))) ISNULL));
SELECT DISTINCT vt0.c0, vt2.c0, vt1.c0, v0.c0 FROM vt2, vt0 RIGHT OUTER JOIN vt1 ON 0.39852925389091043 COLLATE RTRIM LEFT OUTER JOIN v0 ON ((CAST(vt0.c1 AS BLOB)) NOT BETWEEN (((vt1.c0)%(v0.c0))) AND (vt0.c0));
SELECT ALL vt0.c0, vt2.c0, vt0.c2, vt0.c1 FROM vt2, vt0 GROUP BY vt0.c0, vt2.c0, vt0.c2, vt0.c1;
SELECT ALL vt0.c0, vt2.c0, vt0.c2, vt0.c1 FROM vt2, vt0 WHERE (0.6772092543829147) GROUP BY vt0.c0, vt2.c0, vt0.c2, vt0.c1 UNION SELECT ALL vt0.c0, vt2.c0, vt0.c2, vt0.c1 FROM vt2, vt0 WHERE ((NOT (0.6772092543829147))) GROUP BY vt0.c0, vt2.c0, vt0.c2, vt0.c1 UNION SELECT ALL vt0.c0, vt2.c0, vt0.c2, vt0.c1 FROM vt2, vt0 WHERE (((0.6772092543829147) ISNULL)) GROUP BY vt0.c0, vt2.c0, vt0.c2, vt0.c1;
SELECT ALL vt0.c0, vt2.c0, vt0.c2, vt0.c1 FROM vt2, vt0 GROUP BY vt0.c0, vt2.c0, vt0.c2, vt0.c1;
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING ((COUNT(*))&((((vt0.c2))=((vt0.c1))))) UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING (NOT (((COUNT(*))&((((vt0.c2))=((vt0.c1))))))) UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING ((((COUNT(*))&((((vt0.c2))=((vt0.c1)))))) ISNULL);
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING ((COUNT(*))&((((vt0.c2))=((vt0.c1))))) UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING (NOT (((COUNT(*))&((((vt0.c2))=((vt0.c1))))))) UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING ((((COUNT(*))&((((vt0.c2))=((vt0.c1)))))) ISNULL);
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT ALL MAX(((((vt2.c0) BETWEEN (v0.c0) AND (v0.c0)))>(CASE vt2.c0  WHEN v0.c0 THEN vt2.c0 ELSE vt2.c0 END))) FROM vt2, v0;
SELECT ALL vt0.c0, vt2.c0, vt0.c1 FROM v0, vt1, vt2, vt0;
SELECT vt0.c0, vt2.c0, vt0.c1 FROM v0, vt1, vt2, vt0 WHERE (0.10560139894130216) UNION ALL SELECT vt0.c0, vt2.c0, vt0.c1 FROM v0, vt1, vt2, vt0 WHERE ((NOT (0.10560139894130216))) UNION ALL SELECT ALL vt0.c0, vt2.c0, vt0.c1 FROM v0, vt1, vt2, vt0 WHERE (((0.10560139894130216) ISNULL));
SELECT ALL vt0.c0, vt2.c0, vt0.c1 FROM v0, vt1, vt2, vt0;
SELECT DISTINCT vt0.c1 FROM vt1 FULL OUTER JOIN vt0 ON ((vt0.c1)>>(((((((((vt0.c2)AND(v0.c0)))AND(v0.c0)))AND(vt1.c0)))AND(vt1.c0)))) LEFT OUTER JOIN v0 ON HEX(DISTINCT ((x'')-(vt1.c0)));
SELECT vt0.c2 FROM vt0 GROUP BY vt0.c2;
SELECT vt0.c2 FROM vt0 WHERE (((CAST(vt0.c0 AS NUMERIC)) IS FALSE)) GROUP BY vt0.c2 UNION SELECT ALL vt0.c2 FROM vt0 WHERE ((NOT (((CAST(vt0.c0 AS NUMERIC)) IS FALSE)))) GROUP BY vt0.c2 UNION SELECT ALL vt0.c2 FROM vt0 WHERE (((((CAST(vt0.c0 AS NUMERIC)) IS FALSE)) ISNULL)) GROUP BY vt0.c2;
SELECT vt0.c2 FROM vt0 GROUP BY vt0.c2;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (((GROUP_CONCAT(vt1.c0), COUNT(*), SUM(COUNT(*)), SUM(AVG(vt1.c0)), vt1.c0)) NOT BETWEEN ((SUM(vt1.c0), ((COUNT(*)) IS FALSE), MIN(MAX(vt1.c0)), SUM(vt1.c0), SQLITE_COMPILEOPTION_GET(AVG(MAX(AVG(GROUP_CONCAT(vt1.c0))))))) AND ((vt1.c0, SUM(MIN(vt1.c0)), GROUP_CONCAT(TOTAL(SUM(GROUP_CONCAT(vt1.c0)))), UNLIKELY(vt1.c0), ((vt1.c0)<=(vt1.c0))))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT ((((GROUP_CONCAT(vt1.c0), COUNT(*), SUM(COUNT(*)), SUM(AVG(vt1.c0)), vt1.c0)) NOT BETWEEN ((SUM(vt1.c0), ((COUNT(*)) IS FALSE), MIN(MAX(vt1.c0)), SUM(vt1.c0), SQLITE_COMPILEOPTION_GET(AVG(MAX(AVG(GROUP_CONCAT(vt1.c0))))))) AND ((vt1.c0, SUM(MIN(vt1.c0)), GROUP_CONCAT(TOTAL(SUM(GROUP_CONCAT(vt1.c0)))), UNLIKELY(vt1.c0), ((vt1.c0)<=(vt1.c0))))))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (((((GROUP_CONCAT(vt1.c0), COUNT(*), SUM(COUNT(*)), SUM(AVG(vt1.c0)), vt1.c0)) NOT BETWEEN ((SUM(vt1.c0), ((COUNT(*)) IS FALSE), MIN(MAX(vt1.c0)), SUM(vt1.c0), SQLITE_COMPILEOPTION_GET(AVG(MAX(AVG(GROUP_CONCAT(vt1.c0))))))) AND ((vt1.c0, SUM(MIN(vt1.c0)), GROUP_CONCAT(TOTAL(SUM(GROUP_CONCAT(vt1.c0)))), UNLIKELY(vt1.c0), ((vt1.c0)<=(vt1.c0)))))) ISNULL);
SELECT vt0.c1, vt0.c2, vt0.c0 FROM vt0;
SELECT ALL vt0.c1, vt0.c2, vt0.c0 FROM vt0 WHERE (COALESCE(((vt0.c1) BETWEEN (x'') AND (vt0.c0)), UPPER(vt0.c2), (((('㴲nGe쩐+')OR(vt0.c2)))OR(vt0.c2)), NULL)) UNION ALL SELECT ALL vt0.c1, vt0.c2, vt0.c0 FROM vt0 WHERE ((NOT (COALESCE(((vt0.c1) BETWEEN (x'') AND (vt0.c0)), UPPER(vt0.c2), (((('㴲nGe쩐+')OR(vt0.c2)))OR(vt0.c2)), NULL)))) UNION ALL SELECT vt0.c1, vt0.c2, vt0.c0 FROM vt0 WHERE (((COALESCE(((vt0.c1) BETWEEN (x'') AND (vt0.c0)), UPPER(vt0.c2), (((('㴲nGe쩐+')OR(vt0.c2)))OR(vt0.c2)), NULL)) ISNULL));
SELECT vt0.c1, vt0.c2, vt0.c0 FROM vt0;
SELECT DISTINCT vt1.c0, v0.c0, vt2.c0 FROM vt2, vt1 CROSS JOIN v0 ON ((- (vt2.c0)) IN ());
SELECT DISTINCT vt1.c0, v0.c0, vt2.c0 FROM vt2, vt1 CROSS JOIN v0 ON ((- (vt2.c0)) IN ()) WHERE ((((- (vt1.c0)))-((~ (vt2.c0))))) UNION SELECT DISTINCT vt1.c0, v0.c0, vt2.c0 FROM vt2, vt1 CROSS JOIN v0 ON ((- (vt2.c0)) IN ()) WHERE ((NOT ((((- (vt1.c0)))-((~ (vt2.c0))))))) UNION SELECT DISTINCT vt1.c0, v0.c0, vt2.c0 FROM vt2, vt1 CROSS JOIN v0 ON ((- (vt2.c0)) IN ()) WHERE ((((((- (vt1.c0)))-((~ (vt2.c0))))) ISNULL));
SELECT DISTINCT vt1.c0, v0.c0, vt2.c0 FROM vt2, vt1 CROSS JOIN v0 ON ((- (vt2.c0)) IN ());
SELECT ALL vt0.c0 FROM vt1, v0, vt0 CROSS JOIN vt2 ON ((vt1.c0)/(vt0.c0)) COLLATE RTRIM GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt1, v0, vt0 CROSS JOIN vt2 ON ((vt1.c0)/(vt0.c0)) COLLATE RTRIM WHERE (((((((((vt0.c1 COLLATE NOCASE)OR(((vt0.c1) IS TRUE))))OR((- (vt0.c1)))))AND(((vt0.c2) BETWEEN (0.271310215541097) AND (vt0.c0)))))AND((- (vt0.c0))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt1, v0, vt0 CROSS JOIN vt2 ON ((vt1.c0)/(vt0.c0)) COLLATE RTRIM WHERE ((NOT (((((((((vt0.c1 COLLATE NOCASE)OR(((vt0.c1) IS TRUE))))OR((- (vt0.c1)))))AND(((vt0.c2) BETWEEN (0.271310215541097) AND (vt0.c0)))))AND((- (vt0.c0))))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt1, v0, vt0 CROSS JOIN vt2 ON ((vt1.c0)/(vt0.c0)) COLLATE RTRIM WHERE (((((((((((vt0.c1 COLLATE NOCASE)OR(((vt0.c1) IS TRUE))))OR((- (vt0.c1)))))AND(((vt0.c2) BETWEEN (0.271310215541097) AND (vt0.c0)))))AND((- (vt0.c0))))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt1, v0, vt0 CROSS JOIN vt2 ON ((vt1.c0)/(vt0.c0)) COLLATE RTRIM GROUP BY vt0.c0;
SELECT ALL vt1.c0, v0.c0 FROM vt1, v0 GROUP BY vt1.c0, v0.c0;
SELECT vt1.c0, v0.c0 FROM vt1, v0 GROUP BY vt1.c0, v0.c0 HAVING SUM(((AVG(SUM(vt1.c0))) BETWEEN (TOTAL(AVG(AVG(v0.c0)))) AND (v0.c0))) UNION ALL SELECT ALL vt1.c0, v0.c0 FROM vt1, v0 GROUP BY vt1.c0, v0.c0 HAVING (NOT (SUM(((AVG(SUM(vt1.c0))) BETWEEN (TOTAL(AVG(AVG(v0.c0)))) AND (v0.c0))))) UNION ALL SELECT ALL vt1.c0, v0.c0 FROM vt1, v0 GROUP BY vt1.c0, v0.c0 HAVING ((SUM(((AVG(SUM(vt1.c0))) BETWEEN (TOTAL(AVG(AVG(v0.c0)))) AND (v0.c0)))) ISNULL);
SELECT vt0.c2, vt0.c0, vt0.c1 FROM vt0;
SELECT ALL vt0.c2, vt0.c0, vt0.c1 FROM vt0 WHERE (CAST(((vt0.c0)/(vt0.c2)) AS REAL)) UNION ALL SELECT vt0.c2, vt0.c0, vt0.c1 FROM vt0 WHERE ((NOT (CAST(((vt0.c0)/(vt0.c2)) AS REAL)))) UNION ALL SELECT ALL vt0.c2, vt0.c0, vt0.c1 FROM vt0 WHERE (((CAST(((vt0.c0)/(vt0.c2)) AS REAL)) ISNULL));
SELECT vt0.c2, vt0.c0, vt0.c1 FROM vt0;
SELECT DISTINCT v0.c0, vt2.c0 FROM vt0, v0, vt2;
SELECT DISTINCT v0.c0, vt2.c0 FROM vt0, v0, vt2 WHERE ((((vt0.c2, vt0.c2, vt0.c0)) NOT BETWEEN ((CAST(vt0.c0 AS REAL), (vt0.c0 IN (v0.c0)), (v0.c0 IN ()))) AND ((((vt2.c0)AND(vt0.c0)), (~ (vt2.c0)), ((vt0.c1) NOT NULL))))) UNION SELECT DISTINCT v0.c0, vt2.c0 FROM vt0, v0, vt2 WHERE ((NOT ((((vt0.c2, vt0.c2, vt0.c0)) NOT BETWEEN ((CAST(vt0.c0 AS REAL), (vt0.c0 IN (v0.c0)), (v0.c0 IN ()))) AND ((((vt2.c0)AND(vt0.c0)), (~ (vt2.c0)), ((vt0.c1) NOT NULL))))))) UNION SELECT DISTINCT v0.c0, vt2.c0 FROM vt0, v0, vt2 WHERE ((((((vt0.c2, vt0.c2, vt0.c0)) NOT BETWEEN ((CAST(vt0.c0 AS REAL), (vt0.c0 IN (v0.c0)), (v0.c0 IN ()))) AND ((((vt2.c0)AND(vt0.c0)), (~ (vt2.c0)), ((vt0.c1) NOT NULL))))) ISNULL));
SELECT DISTINCT v0.c0, vt2.c0 FROM vt0, v0, vt2;
SELECT v0.c0 FROM vt0, vt2 LEFT OUTER JOIN v0 ON (((((((((((('hj~4')AND(CASE WHEN vt2.c0 THEN vt0.c2 WHEN vt0.c0 THEN vt0.c1 WHEN v0.c0 THEN vt0.c1 END)))AND(((vt2.c0) BETWEEN (vt0.c1) AND (vt2.c0)))))OR(vt0.c2)))AND(CAST(vt0.c2 AS BLOB))))AND(vt0.c0 COLLATE NOCASE)))AND((vt0.c2 IN ()))) GROUP BY v0.c0;
SELECT v0.c0 FROM vt0, vt2 LEFT OUTER JOIN v0 ON (((((((((((('hj~4')AND(CASE WHEN vt2.c0 THEN vt0.c2 WHEN vt0.c0 THEN vt0.c1 WHEN v0.c0 THEN vt0.c1 END)))AND(((vt2.c0) BETWEEN (vt0.c1) AND (vt2.c0)))))OR(vt0.c2)))AND(CAST(vt0.c2 AS BLOB))))AND(vt0.c0 COLLATE NOCASE)))AND((vt0.c2 IN ()))) WHERE (v0.c0) GROUP BY v0.c0 UNION SELECT v0.c0 FROM vt0, vt2 LEFT OUTER JOIN v0 ON (((((((((((('hj~4')AND(CASE WHEN vt2.c0 THEN vt0.c2 WHEN vt0.c0 THEN vt0.c1 WHEN v0.c0 THEN vt0.c1 END)))AND(((vt2.c0) BETWEEN (vt0.c1) AND (vt2.c0)))))OR(vt0.c2)))AND(CAST(vt0.c2 AS BLOB))))AND(vt0.c0 COLLATE NOCASE)))AND((vt0.c2 IN ()))) WHERE ((NOT (v0.c0))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM vt0, vt2 LEFT OUTER JOIN v0 ON (((((((((((('hj~4')AND(CASE WHEN vt2.c0 THEN vt0.c2 WHEN vt0.c0 THEN vt0.c1 WHEN v0.c0 THEN vt0.c1 END)))AND(((vt2.c0) BETWEEN (vt0.c1) AND (vt2.c0)))))OR(vt0.c2)))AND(CAST(vt0.c2 AS BLOB))))AND(vt0.c0 COLLATE NOCASE)))AND((vt0.c2 IN ()))) WHERE (((v0.c0) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM vt0, vt2 LEFT OUTER JOIN v0 ON (((((((((((('hj~4')AND(CASE WHEN vt2.c0 THEN vt0.c2 WHEN vt0.c0 THEN vt0.c1 WHEN v0.c0 THEN vt0.c1 END)))AND(((vt2.c0) BETWEEN (vt0.c1) AND (vt2.c0)))))OR(vt0.c2)))AND(CAST(vt0.c2 AS BLOB))))AND(vt0.c0 COLLATE NOCASE)))AND((vt0.c2 IN ()))) GROUP BY v0.c0;
SELECT vt2.c0 FROM vt1, vt2 INNER JOIN v0 ON 'W-y\n3W+' GROUP BY vt2.c0;
SELECT ALL vt2.c0 FROM vt1, vt2 INNER JOIN v0 ON 'W-y\n3W+' GROUP BY vt2.c0 HAVING MAX(MAX(COUNT(*))) UNION ALL SELECT ALL vt2.c0 FROM vt1, vt2 INNER JOIN v0 ON 'W-y\n3W+' GROUP BY vt2.c0 HAVING (NOT (MAX(MAX(COUNT(*))))) UNION ALL SELECT vt2.c0 FROM vt1, vt2 INNER JOIN v0 ON 'W-y\n3W+' GROUP BY vt2.c0 HAVING ((MAX(MAX(COUNT(*)))) ISNULL);
SELECT * FROM vt2, v0, vt0, vt1;
SELECT * FROM vt2, v0, vt0, vt1 WHERE ((CAST(vt0.c1 AS REAL) IN ())) UNION ALL SELECT * FROM vt2, v0, vt0, vt1 WHERE ((NOT ((CAST(vt0.c1 AS REAL) IN ())))) UNION ALL SELECT ALL * FROM vt2, v0, vt0, vt1 WHERE ((((CAST(vt0.c1 AS REAL) IN ())) ISNULL));
SELECT * FROM vt2, v0, vt0, vt1;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (((((((((((((((v0.c0)>(v0.c0)))AND(json_valid(v0.c0))))AND(((v0.c0)<(v0.c0)))))AND(CAST(v0.c0 AS NUMERIC))))OR(CAST('-1242473410' AS NUMERIC))))OR(((v0.c0) IS FALSE))))OR(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (((((((((((((((v0.c0)>(v0.c0)))AND(json_valid(v0.c0))))AND(((v0.c0)<(v0.c0)))))AND(CAST(v0.c0 AS NUMERIC))))OR(CAST('-1242473410' AS NUMERIC))))OR(((v0.c0) IS FALSE))))OR(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((((((((((((((((v0.c0)>(v0.c0)))AND(json_valid(v0.c0))))AND(((v0.c0)<(v0.c0)))))AND(CAST(v0.c0 AS NUMERIC))))OR(CAST('-1242473410' AS NUMERIC))))OR(((v0.c0) IS FALSE))))OR(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT ALL v0.c0, vt2.c0 FROM vt2, v0 RIGHT OUTER JOIN vt1 ON ((TRIM(DISTINCT v0.c0, vt1.c0))<<(CAST(x'' AS BLOB))) GROUP BY v0.c0, vt2.c0;
SELECT ALL v0.c0, vt2.c0 FROM vt2, v0 RIGHT OUTER JOIN vt1 ON ((TRIM(DISTINCT v0.c0, vt1.c0))<<(CAST(x'' AS BLOB))) WHERE (LIKELIHOOD(((vt1.c0) ISNULL), 0.14545025422122648)) GROUP BY v0.c0, vt2.c0 UNION SELECT ALL v0.c0, vt2.c0 FROM vt2, v0 RIGHT OUTER JOIN vt1 ON ((TRIM(DISTINCT v0.c0, vt1.c0))<<(CAST(x'' AS BLOB))) WHERE ((NOT (LIKELIHOOD(((vt1.c0) ISNULL), 0.14545025422122648)))) GROUP BY v0.c0, vt2.c0 UNION SELECT ALL v0.c0, vt2.c0 FROM vt2, v0 RIGHT OUTER JOIN vt1 ON ((TRIM(DISTINCT v0.c0, vt1.c0))<<(CAST(x'' AS BLOB))) WHERE (((LIKELIHOOD(((vt1.c0) ISNULL), 0.14545025422122648)) ISNULL)) GROUP BY v0.c0, vt2.c0;
SELECT ALL v0.c0, vt2.c0 FROM vt2, v0 RIGHT OUTER JOIN vt1 ON ((TRIM(DISTINCT v0.c0, vt1.c0))<<(CAST(x'' AS BLOB))) GROUP BY v0.c0, vt2.c0;
SELECT ALL vt0.c1, vt1.c0, vt0.c0, v0.c0, vt0.c2 FROM v0, vt1, vt0 GROUP BY vt0.c1, vt1.c0, vt0.c0, v0.c0, vt0.c2;
SELECT ALL vt0.c1, vt1.c0, vt0.c0, v0.c0, vt0.c2 FROM v0, vt1, vt0 GROUP BY vt0.c1, vt1.c0, vt0.c0, v0.c0, vt0.c2 HAVING ((((TOTAL(AVG(TOTAL(vt0.c2))))AND(COUNT(COUNT(vt0.c0)))))OR(((((((((TOTAL(COUNT(v0.c0)))AND(MAX(vt0.c1))))AND(COUNT(*))))AND(vt0.c1)))AND(MIN(COUNT(GROUP_CONCAT(TOTAL(TOTAL(GROUP_CONCAT(GROUP_CONCAT(vt0.c1))))))))))) UNION ALL SELECT ALL vt0.c1, vt1.c0, vt0.c0, v0.c0, vt0.c2 FROM v0, vt1, vt0 GROUP BY vt0.c1, vt1.c0, vt0.c0, v0.c0, vt0.c2 HAVING (NOT (((((TOTAL(AVG(TOTAL(vt0.c2))))AND(COUNT(COUNT(vt0.c0)))))OR(((((((((TOTAL(COUNT(v0.c0)))AND(MAX(vt0.c1))))AND(COUNT(*))))AND(vt0.c1)))AND(MIN(COUNT(GROUP_CONCAT(TOTAL(TOTAL(GROUP_CONCAT(GROUP_CONCAT(vt0.c1))))))))))))) UNION ALL SELECT vt0.c1, vt1.c0, vt0.c0, v0.c0, vt0.c2 FROM v0, vt1, vt0 GROUP BY vt0.c1, vt1.c0, vt0.c0, v0.c0, vt0.c2 HAVING ((((((TOTAL(AVG(TOTAL(vt0.c2))))AND(COUNT(COUNT(vt0.c0)))))OR(((((((((TOTAL(COUNT(v0.c0)))AND(MAX(vt0.c1))))AND(COUNT(*))))AND(vt0.c1)))AND(MIN(COUNT(GROUP_CONCAT(TOTAL(TOTAL(GROUP_CONCAT(GROUP_CONCAT(vt0.c1)))))))))))) ISNULL);
SELECT vt0.c1, vt0.c0, vt2.c0 FROM vt0, vt2;
SELECT vt0.c1, vt0.c0, vt2.c0 FROM vt0, vt2 WHERE (((((((x'')AND(vt0.c1)))OR(vt0.c0))) NOT NULL)) UNION ALL SELECT vt0.c1, vt0.c0, vt2.c0 FROM vt0, vt2 WHERE ((NOT (((((((x'')AND(vt0.c1)))OR(vt0.c0))) NOT NULL)))) UNION ALL SELECT vt0.c1, vt0.c0, vt2.c0 FROM vt0, vt2 WHERE (((((((((x'')AND(vt0.c1)))OR(vt0.c0))) NOT NULL)) ISNULL));
SELECT vt0.c1, vt0.c0, vt2.c0 FROM vt0, vt2;
SELECT DISTINCT * FROM vt0 CROSS JOIN vt2 ON (MIN(vt0.c0, x'e8ad') IN ()) FULL OUTER JOIN vt1 ON ((((((('574406082')AND(vt0.c1)))OR(vt0.c0)), (vt0.c0 IN (vt1.c0)), ((NULL)%(vt0.c2))))<=((((vt0.c0)|(vt1.c0)), (((vt1.c0))=((vt2.c0))), ((vt1.c0)LIKE(vt0.c0)))));
SELECT DISTINCT * FROM vt0 CROSS JOIN vt2 ON (MIN(vt0.c0, x'e8ad') IN ()) FULL OUTER JOIN vt1 ON ((((((('574406082')AND(vt0.c1)))OR(vt0.c0)), (vt0.c0 IN (vt1.c0)), ((NULL)%(vt0.c2))))<=((((vt0.c0)|(vt1.c0)), (((vt1.c0))==((vt2.c0))), ((vt1.c0)LIKE(vt0.c0))))) WHERE ((((vt0.c1 IN (vt1.c0))) NOT BETWEEN (((vt0.c1)!=(vt1.c0))) AND (CASE vt0.c1  WHEN vt2.c0 THEN vt0.c2 ELSE vt1.c0 END))) UNION SELECT DISTINCT * FROM vt0 CROSS JOIN vt2 ON (MIN(vt0.c0, x'e8ad') IN ()) FULL OUTER JOIN vt1 ON ((((((('574406082')AND(vt0.c1)))OR(vt0.c0)), (vt0.c0 IN (vt1.c0)), ((NULL)%(vt0.c2))))<=((((vt0.c0)|(vt1.c0)), (((vt1.c0))=((vt2.c0))), ((vt1.c0)LIKE(vt0.c0))))) WHERE ((NOT ((((vt0.c1 IN (vt1.c0))) NOT BETWEEN (((vt0.c1)!=(vt1.c0))) AND (CASE vt0.c1  WHEN vt2.c0 THEN vt0.c2 ELSE vt1.c0 END))))) UNION SELECT DISTINCT * FROM vt0 CROSS JOIN vt2 ON (MIN(vt0.c0, x'e8ad') IN ()) FULL OUTER JOIN vt1 ON ((((((('574406082')AND(vt0.c1)))OR(vt0.c0)), (vt0.c0 IN (vt1.c0)), ((NULL)%(vt0.c2))))<=((((vt0.c0)|(vt1.c0)), (((vt1.c0))=((vt2.c0))), ((vt1.c0)LIKE(vt0.c0))))) WHERE ((((((vt0.c1 IN (vt1.c0))) NOT BETWEEN (((vt0.c1)<>(vt1.c0))) AND (CASE vt0.c1  WHEN vt2.c0 THEN vt0.c2 ELSE vt1.c0 END))) ISNULL));
SELECT DISTINCT * FROM vt0 CROSS JOIN vt2 ON (MIN(vt0.c0, x'e8ad') IN ()) FULL OUTER JOIN vt1 ON ((((((('574406082')AND(vt0.c1)))OR(vt0.c0)), (vt0.c0 IN (vt1.c0)), ((NULL)%(vt0.c2))))<=((((vt0.c0)|(vt1.c0)), (((vt1.c0))=((vt2.c0))), ((vt1.c0)LIKE(vt0.c0)))));
SELECT vt0.c1, vt0.c2, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c2, vt0.c0;
SELECT ALL vt0.c1, vt0.c2, vt0.c0 FROM vt0 WHERE (vt0.c1) GROUP BY vt0.c1, vt0.c2, vt0.c0 UNION SELECT ALL vt0.c1, vt0.c2, vt0.c0 FROM vt0 WHERE ((NOT (vt0.c1))) GROUP BY vt0.c1, vt0.c2, vt0.c0 UNION SELECT vt0.c1, vt0.c2, vt0.c0 FROM vt0 WHERE (((vt0.c1) ISNULL)) GROUP BY vt0.c1, vt0.c2, vt0.c0;
SELECT vt0.c1, vt0.c2, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c2, vt0.c0;
SELECT vt0.c1, vt1.c0, v0.c0, vt0.c0, vt0.c2 FROM v0, vt1 INNER JOIN vt0 ON (ABS(v0.c0) IN ()) GROUP BY vt0.c1, vt1.c0, v0.c0, vt0.c0, vt0.c2;
SELECT vt0.c1, vt1.c0, v0.c0, vt0.c0, vt0.c2 FROM v0, vt1 INNER JOIN vt0 ON (ABS(v0.c0) IN ()) GROUP BY vt0.c1, vt1.c0, v0.c0, vt0.c0, vt0.c2 HAVING COUNT(*) UNION ALL SELECT vt0.c1, vt1.c0, v0.c0, vt0.c0, vt0.c2 FROM v0, vt1 INNER JOIN vt0 ON (ABS(v0.c0) IN ()) GROUP BY vt0.c1, vt1.c0, v0.c0, vt0.c0, vt0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt0.c1, vt1.c0, v0.c0, vt0.c0, vt0.c2 FROM v0, vt1 INNER JOIN vt0 ON (ABS(v0.c0) IN ()) GROUP BY vt0.c1, vt1.c0, v0.c0, vt0.c0, vt0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT vt0.c1, vt1.c0, v0.c0, vt0.c0, vt0.c2 FROM v0, vt1 INNER JOIN vt0 ON (ABS(v0.c0) IN ()) GROUP BY vt0.c1, vt1.c0, v0.c0, vt0.c0, vt0.c2;
SELECT vt0.c1, vt1.c0, v0.c0, vt0.c0, vt0.c2 FROM v0, vt1 INNER JOIN vt0 ON (ABS(v0.c0) IN ()) GROUP BY vt0.c1, vt1.c0, v0.c0, vt0.c0, vt0.c2 HAVING COUNT(*) UNION ALL SELECT vt0.c1, vt1.c0, v0.c0, vt0.c0, vt0.c2 FROM v0, vt1 INNER JOIN vt0 ON (ABS(v0.c0) IN ()) GROUP BY vt0.c1, vt1.c0, v0.c0, vt0.c0, vt0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt0.c1, vt1.c0, v0.c0, vt0.c0, vt0.c2 FROM v0, vt1 INNER JOIN vt0 ON (ABS(v0.c0) IN ()) GROUP BY vt0.c1, vt1.c0, v0.c0, vt0.c0, vt0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT vt0.c1, vt1.c0, v0.c0, vt0.c0, vt0.c2 FROM v0, vt1 INNER JOIN vt0 ON (ABS(v0.c0) IN ()) GROUP BY vt0.c1, vt1.c0, v0.c0, vt0.c0, vt0.c2;
SELECT * FROM vt1;
SELECT ALL * FROM vt1 WHERE (CASE ((vt1.c0) IS TRUE)  WHEN (+ (vt1.c0)) THEN (+ (vt1.c0)) WHEN CAST(0.2588314930114344 AS NUMERIC) THEN IFNULL(DISTINCT vt1.c0, vt1.c0) WHEN ((vt1.c0)!=(vt1.c0)) THEN vt1.c0 ELSE ((NULL) ISNULL) END) UNION ALL SELECT ALL * FROM vt1 WHERE ((NOT (CASE ((vt1.c0) IS TRUE)  WHEN (+ (vt1.c0)) THEN (+ (vt1.c0)) WHEN CAST(0.2588314930114344 AS NUMERIC) THEN IFNULL(DISTINCT vt1.c0, vt1.c0) WHEN ((vt1.c0)<>(vt1.c0)) THEN vt1.c0 ELSE ((NULL) ISNULL) END))) UNION ALL SELECT * FROM vt1 WHERE (((CASE ((vt1.c0) IS TRUE)  WHEN (+ (vt1.c0)) THEN (+ (vt1.c0)) WHEN CAST(0.2588314930114344 AS NUMERIC) THEN IFNULL(DISTINCT vt1.c0, vt1.c0) WHEN ((vt1.c0)<>(vt1.c0)) THEN vt1.c0 ELSE ((NULL) ISNULL) END) ISNULL));
SELECT * FROM vt1;
SELECT DISTINCT * FROM vt2, vt1, vt0 LEFT OUTER JOIN v0 ON ((v0.c0 COLLATE NOCASE)IS(((((vt1.c0)AND(vt0.c2)))OR(vt0.c1))));
SELECT DISTINCT * FROM vt2, vt1, vt0 LEFT OUTER JOIN v0 ON ((v0.c0 COLLATE NOCASE)IS(((((vt1.c0)AND(vt0.c2)))OR(vt0.c1)))) WHERE (CAST((((vt0.c0))<>((vt2.c0))) AS TEXT)) UNION SELECT DISTINCT * FROM vt2, vt1, vt0 LEFT OUTER JOIN v0 ON ((v0.c0 COLLATE NOCASE)IS(((((vt1.c0)AND(vt0.c2)))OR(vt0.c1)))) WHERE ((NOT (CAST((((vt0.c0))!=((vt2.c0))) AS TEXT)))) UNION SELECT DISTINCT * FROM vt2, vt1, vt0 LEFT OUTER JOIN v0 ON ((v0.c0 COLLATE NOCASE)IS(((((vt1.c0)AND(vt0.c2)))OR(vt0.c1)))) WHERE (((CAST((((vt0.c0))!=((vt2.c0))) AS TEXT)) ISNULL));
SELECT DISTINCT * FROM vt2, vt1, vt0 LEFT OUTER JOIN v0 ON ((v0.c0 COLLATE NOCASE)IS(((((vt1.c0)AND(vt0.c2)))OR(vt0.c1))));
SELECT ALL vt0.c0 FROM vt1, vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt1, vt0 WHERE (((~ (vt0.c1)) IN ())) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt1, vt0 WHERE ((NOT (((~ (vt0.c1)) IN ())))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt1, vt0 WHERE (((((~ (vt0.c1)) IN ())) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt1, vt0 GROUP BY vt0.c0;
SELECT vt1.c0, v0.c0 FROM vt1, v0 GROUP BY vt1.c0, v0.c0;
SELECT vt1.c0, v0.c0 FROM vt1, v0 GROUP BY vt1.c0, v0.c0 HAVING NULL UNION ALL SELECT vt1.c0, v0.c0 FROM vt1, v0 GROUP BY vt1.c0, v0.c0 HAVING (NOT (NULL)) UNION ALL SELECT ALL vt1.c0, v0.c0 FROM vt1, v0 GROUP BY vt1.c0, v0.c0 HAVING ((NULL) ISNULL);
SELECT vt1.c0, v0.c0 FROM vt1, v0 GROUP BY vt1.c0, v0.c0;
SELECT vt1.c0, v0.c0 FROM vt1, v0 GROUP BY vt1.c0, v0.c0 HAVING NULL UNION ALL SELECT vt1.c0, v0.c0 FROM vt1, v0 GROUP BY vt1.c0, v0.c0 HAVING (NOT (NULL)) UNION ALL SELECT ALL vt1.c0, v0.c0 FROM vt1, v0 GROUP BY vt1.c0, v0.c0 HAVING ((NULL) ISNULL);
SELECT vt1.c0, v0.c0 FROM vt1, v0 GROUP BY vt1.c0, v0.c0;
SELECT ALL MAX((CASE WHEN vt2.c0 THEN vt2.c0 ELSE 0.15672097509975347 END IN ())) FROM vt2;
SELECT * FROM vt2, vt1;
SELECT * FROM vt2, vt1 WHERE ((NOT (CAST(vt2.c0 AS INTEGER)))) UNION ALL SELECT * FROM vt2, vt1 WHERE ((NOT ((NOT (CAST(vt2.c0 AS INTEGER)))))) UNION ALL SELECT * FROM vt2, vt1 WHERE ((((NOT (CAST(vt2.c0 AS INTEGER)))) ISNULL));
SELECT * FROM vt2, vt1;
SELECT DISTINCT * FROM vt2 CROSS JOIN vt0 ON ((vt0.c0)*(vt0.c0)) COLLATE RTRIM;
SELECT DISTINCT * FROM vt2 CROSS JOIN vt0 ON ((vt0.c0)*(vt0.c0)) COLLATE RTRIM WHERE ((((((vt0.c0)) NOT BETWEEN ((vt0.c2)) AND ((0.30943190021864))))>>(((vt0.c2)>>(vt0.c0))))) UNION SELECT DISTINCT * FROM vt2 CROSS JOIN vt0 ON ((vt0.c0)*(vt0.c0)) COLLATE RTRIM WHERE ((NOT ((((((vt0.c0)) NOT BETWEEN ((vt0.c2)) AND ((0.30943190021864))))>>(((vt0.c2)>>(vt0.c0))))))) UNION SELECT DISTINCT * FROM vt2 CROSS JOIN vt0 ON ((vt0.c0)*(vt0.c0)) COLLATE RTRIM WHERE ((((((((vt0.c0)) NOT BETWEEN ((vt0.c2)) AND ((0.30943190021864))))>>(((vt0.c2)>>(vt0.c0))))) ISNULL));
SELECT DISTINCT * FROM vt2 CROSS JOIN vt0 ON ((vt0.c0)*(vt0.c0)) COLLATE RTRIM;
SELECT ALL vt2.c0, vt1.c0, v0.c0 FROM vt2 CROSS JOIN v0 ON (((vt2.c0) ISNULL) IN ()) CROSS JOIN vt1 ON CASE WHEN (NOT ('')) THEN CAST(vt1.c0 AS INTEGER) ELSE ((v0.c0) ISNULL) END GROUP BY vt2.c0, vt1.c0, v0.c0;
SELECT ALL vt2.c0, vt1.c0, v0.c0 FROM vt2 CROSS JOIN v0 ON (((vt2.c0) ISNULL) IN ()) CROSS JOIN vt1 ON CASE WHEN (NOT ('')) THEN CAST(vt1.c0 AS INTEGER) ELSE ((v0.c0) ISNULL) END WHERE (vt2.c0) GROUP BY vt2.c0, vt1.c0, v0.c0 UNION SELECT ALL vt2.c0, vt1.c0, v0.c0 FROM vt2 CROSS JOIN v0 ON (((vt2.c0) ISNULL) IN ()) CROSS JOIN vt1 ON CASE WHEN (NOT ('')) THEN CAST(vt1.c0 AS INTEGER) ELSE ((v0.c0) ISNULL) END WHERE ((NOT (vt2.c0))) GROUP BY vt2.c0, vt1.c0, v0.c0 UNION SELECT ALL vt2.c0, vt1.c0, v0.c0 FROM vt2 CROSS JOIN v0 ON (((vt2.c0) ISNULL) IN ()) CROSS JOIN vt1 ON CASE WHEN (NOT ('')) THEN CAST(vt1.c0 AS INTEGER) ELSE ((v0.c0) ISNULL) END WHERE (((vt2.c0) ISNULL)) GROUP BY vt2.c0, vt1.c0, v0.c0;
SELECT ALL vt2.c0, vt1.c0, v0.c0 FROM vt2 CROSS JOIN v0 ON (((vt2.c0) ISNULL) IN ()) CROSS JOIN vt1 ON CASE WHEN (NOT ('')) THEN CAST(vt1.c0 AS INTEGER) ELSE ((v0.c0) ISNULL) END GROUP BY vt2.c0, vt1.c0, v0.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING TOTAL(CASE WHEN MAX(vt1.c0) THEN COUNT(*) END) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (TOTAL(CASE WHEN MAX(vt1.c0) THEN COUNT(*) END))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((TOTAL(CASE WHEN MAX(vt1.c0) THEN COUNT(*) END)) ISNULL);
SELECT ALL * FROM vt2, v0;
SELECT * FROM vt2, v0 NOT INDEXED WHERE (((((('-45673621', vt2.c0, v0.c0)) BETWEEN ((vt2.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, vt2.c0))))/(((vt2.c0) ISNULL)))) UNION ALL SELECT ALL * FROM vt2, v0 WHERE ((NOT (((((('-45673621', vt2.c0, v0.c0)) BETWEEN ((vt2.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, vt2.c0))))/(((vt2.c0) ISNULL)))))) UNION ALL SELECT ALL * FROM vt2, v0 WHERE (((((((('-45673621', vt2.c0, v0.c0)) BETWEEN ((vt2.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, vt2.c0))))/(((vt2.c0) ISNULL)))) ISNULL));
SELECT ALL * FROM vt2, v0;
SELECT DISTINCT vt2.c0 FROM vt2;
SELECT DISTINCT vt2.c0 FROM vt2 WHERE (vt2.c0) UNION SELECT DISTINCT vt2.c0 FROM vt2 WHERE ((NOT (vt2.c0))) UNION SELECT DISTINCT vt2.c0 FROM vt2 WHERE (((vt2.c0) ISNULL));
SELECT DISTINCT vt2.c0 FROM vt2;
SELECT ALL vt0.c1, vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c1, vt0.c0, v0.c0;
SELECT ALL vt0.c1, vt0.c0, v0.c0 FROM vt0, v0 WHERE (vt0.c0) GROUP BY vt0.c1, vt0.c0, v0.c0 UNION SELECT ALL vt0.c1, vt0.c0, v0.c0 FROM vt0, v0 WHERE ((NOT (vt0.c0))) GROUP BY vt0.c1, vt0.c0, v0.c0 UNION SELECT ALL vt0.c1, vt0.c0, v0.c0 FROM vt0, v0 WHERE (((vt0.c0) ISNULL)) GROUP BY vt0.c1, vt0.c0, v0.c0;
SELECT ALL vt0.c1, vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c1, vt0.c0, v0.c0;
SELECT vt0.c0 FROM v0, vt1, vt0, vt2 GROUP BY vt0.c0;
SELECT vt0.c0 FROM v0, vt1, vt0, vt2 GROUP BY vt0.c0 HAVING MIN((((vt1.c0)) BETWEEN ((vt0.c1)) AND ((AVG(v0.c0))))) UNION ALL SELECT ALL vt0.c0 FROM v0, vt1, vt0, vt2 GROUP BY vt0.c0 HAVING (NOT (MIN((((vt1.c0)) BETWEEN ((vt0.c1)) AND ((AVG(v0.c0))))))) UNION ALL SELECT vt0.c0 FROM v0, vt1, vt0, vt2 GROUP BY vt0.c0 HAVING ((MIN((((vt1.c0)) BETWEEN ((vt0.c1)) AND ((AVG(v0.c0)))))) ISNULL);
SELECT MAX((- (v0.c0)) COLLATE NOCASE) FROM v0, vt2, vt1 ORDER BY (((vt1.c0))!=((vt1.c0))) COLLATE NOCASE ASC  NULLS FIRST;
SELECT v0.c0 FROM v0;
SELECT v0.c0 FROM v0 WHERE (((((((v0.c0)&(' ')))AND(CAST(v0.c0 AS INTEGER))))OR(((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE ((NOT (((((((v0.c0)&(' ')))AND(CAST(v0.c0 AS INTEGER))))OR(((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))))) UNION ALL SELECT v0.c0 FROM v0 WHERE (((((((((v0.c0)&(' ')))AND(CAST(v0.c0 AS INTEGER))))OR(((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))) ISNULL));
SELECT v0.c0 FROM v0;
SELECT DISTINCT vt1.c0, v0.c0 FROM vt1, v0;
SELECT DISTINCT vt1.c0, v0.c0 FROM vt1, v0 WHERE (((CASE v0.c0  WHEN vt1.c0 THEN v0.c0 END)GLOB((vt1.c0 IN ())))) UNION SELECT DISTINCT vt1.c0, v0.c0 FROM vt1, v0 WHERE ((NOT (((CASE v0.c0  WHEN vt1.c0 THEN v0.c0 END)GLOB((vt1.c0 IN ())))))) UNION SELECT DISTINCT vt1.c0, v0.c0 FROM vt1, v0 WHERE (((((CASE v0.c0  WHEN vt1.c0 THEN v0.c0 END)GLOB((vt1.c0 IN ())))) ISNULL));
SELECT DISTINCT vt1.c0, v0.c0 FROM vt1, v0;
SELECT vt1.c0, v0.c0 FROM vt1, v0 GROUP BY vt1.c0, v0.c0;
SELECT vt1.c0, v0.c0 FROM vt1, v0 WHERE (CAST(CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN v0.c0 ELSE v0.c0 END AS REAL)) GROUP BY vt1.c0, v0.c0 UNION SELECT vt1.c0, v0.c0 FROM vt1, v0 WHERE ((NOT (CAST(CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN v0.c0 ELSE v0.c0 END AS REAL)))) GROUP BY vt1.c0, v0.c0 UNION SELECT ALL vt1.c0, v0.c0 FROM vt1, v0 WHERE (((CAST(CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN v0.c0 ELSE v0.c0 END AS REAL)) ISNULL)) GROUP BY vt1.c0, v0.c0;
SELECT vt1.c0, v0.c0 FROM vt1, v0 GROUP BY vt1.c0, v0.c0;
SELECT vt0.c1, vt0.c0, v0.c0, vt0.c2 FROM vt0, v0, vt1 GROUP BY vt0.c1, vt0.c0, v0.c0, vt0.c2;
SELECT ALL vt0.c1, vt0.c0, v0.c0, vt0.c2 FROM vt0, v0, vt1 GROUP BY vt0.c1, vt0.c0, v0.c0, vt0.c2 HAVING json_type(((MAX(MAX(GROUP_CONCAT(MIN(NULL))))) NOT BETWEEN (vt0.c0) AND (COUNT(*)))) UNION ALL SELECT vt0.c1, vt0.c0, v0.c0, vt0.c2 FROM vt0, v0, vt1 GROUP BY vt0.c1, vt0.c0, v0.c0, vt0.c2 HAVING (NOT (json_type(((MAX(MAX(GROUP_CONCAT(MIN(NULL))))) NOT BETWEEN (vt0.c0) AND (COUNT(*)))))) UNION ALL SELECT vt0.c1, vt0.c0, v0.c0, vt0.c2 FROM vt0, v0, vt1 GROUP BY vt0.c1, vt0.c0, v0.c0, vt0.c2 HAVING ((json_type(((MAX(MAX(GROUP_CONCAT(MIN(NULL))))) NOT BETWEEN (vt0.c0) AND (COUNT(*))))) ISNULL);
SELECT ALL * FROM vt0;
SELECT ALL * FROM vt0 WHERE (CASE WHEN '-850369460' THEN CAST(vt0.c2 AS NUMERIC) END) UNION ALL SELECT * FROM vt0 WHERE ((NOT (CASE WHEN '-850369460' THEN CAST(vt0.c2 AS NUMERIC) END))) UNION ALL SELECT * FROM vt0 WHERE (((CASE WHEN '-850369460' THEN CAST(vt0.c2 AS NUMERIC) END) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT vt2.c0 FROM v0, vt0, vt2;
SELECT DISTINCT vt2.c0 FROM v0, vt0, vt2 WHERE (((vt0.c0 COLLATE BINARY)==(((((((((v0.c0)OR(vt0.c2)))AND(vt0.c0)))AND(vt0.c1)))AND(v0.c0))))) UNION SELECT DISTINCT vt2.c0 FROM v0, vt0, vt2 WHERE ((NOT (((vt0.c0 COLLATE BINARY)=(((((((((v0.c0)OR(vt0.c2)))AND(vt0.c0)))AND(vt0.c1)))AND(v0.c0))))))) UNION SELECT DISTINCT vt2.c0 FROM v0, vt0, vt2 WHERE (((((vt0.c0 COLLATE BINARY)==(((((((((v0.c0)OR(vt0.c2)))AND(vt0.c0)))AND(vt0.c1)))AND(v0.c0))))) ISNULL));
SELECT DISTINCT vt2.c0 FROM v0, vt0, vt2;
SELECT ALL vt1.c0, v0.c0, vt2.c0 FROM vt1, vt2, vt0, v0 GROUP BY vt1.c0, v0.c0, vt2.c0;
SELECT ALL vt1.c0, v0.c0, vt2.c0 FROM vt1, vt2, vt0, v0 WHERE ((((vt0.c2))>((vt0.c2))) COLLATE BINARY) GROUP BY vt1.c0, v0.c0, vt2.c0 UNION SELECT ALL vt1.c0, v0.c0, vt2.c0 FROM vt1 NOT INDEXED, vt2, vt0, v0 WHERE ((NOT ((((vt0.c2))>((vt0.c2))) COLLATE BINARY))) GROUP BY vt1.c0, v0.c0, vt2.c0 UNION SELECT ALL vt1.c0, v0.c0, vt2.c0 FROM vt1, vt2, vt0, v0 WHERE ((((((vt0.c2))>((vt0.c2))) COLLATE BINARY) ISNULL)) GROUP BY vt1.c0, v0.c0, vt2.c0;
SELECT ALL vt1.c0, v0.c0, vt2.c0 FROM vt1, vt2, vt0, v0 GROUP BY vt1.c0, v0.c0, vt2.c0;
SELECT ALL vt0.c0, vt0.c1 FROM vt0, vt2 GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0, vt2 GROUP BY vt0.c0, vt0.c1 HAVING (((MAX(TOTAL(GROUP_CONCAT(vt0.c0)))) NOTNULL) IN (((AVG(MAX(vt0.c2))) BETWEEN (COUNT(*)) AND (vt0.c0)))) UNION ALL SELECT vt0.c0, vt0.c1 FROM vt0, vt2 GROUP BY vt0.c0, vt0.c1 HAVING (NOT ((((MAX(TOTAL(GROUP_CONCAT(vt0.c0)))) NOTNULL) IN (((AVG(MAX(vt0.c2))) BETWEEN (COUNT(*)) AND (vt0.c0)))))) UNION ALL SELECT vt0.c0, vt0.c1 FROM vt0, vt2 GROUP BY vt0.c0, vt0.c1 HAVING (((((MAX(TOTAL(GROUP_CONCAT(vt0.c0)))) NOTNULL) IN (((AVG(MAX(vt0.c2))) BETWEEN (COUNT(*)) AND (vt0.c0))))) ISNULL);
SELECT ALL * FROM vt0, vt2, vt1, v0;
SELECT * FROM vt0, vt2, vt1, v0 WHERE ((((vt0.c0, v0.c0, vt2.c0)) NOT BETWEEN ((vt2.c0, ((vt0.c2) BETWEEN (vt1.c0) AND (vt2.c0)), CAST(vt0.c0 AS TEXT))) AND ((vt0.c2, (- (vt0.c1)), x'')))) UNION ALL SELECT ALL * FROM vt0, vt2, vt1, v0 WHERE ((NOT ((((vt0.c0, v0.c0, vt2.c0)) NOT BETWEEN ((vt2.c0, ((vt0.c2) BETWEEN (vt1.c0) AND (vt2.c0)), CAST(vt0.c0 AS TEXT))) AND ((vt0.c2, (- (vt0.c1)), x'')))))) UNION ALL SELECT ALL * FROM vt0, vt2, vt1, v0 WHERE ((((((vt0.c0, v0.c0, vt2.c0)) NOT BETWEEN ((vt2.c0, ((vt0.c2) BETWEEN (vt1.c0) AND (vt2.c0)), CAST(vt0.c0 AS TEXT))) AND ((vt0.c2, (- (vt0.c1)), x'')))) ISNULL));
SELECT ALL * FROM vt0, vt2, vt1, v0;
SELECT DISTINCT vt0.c2, vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c2, vt0.c0 FROM vt0 WHERE (CASE WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN vt0.c2 ELSE CASE WHEN vt0.c2 THEN vt0.c2 ELSE vt0.c1 END END) UNION SELECT DISTINCT vt0.c2, vt0.c0 FROM vt0 WHERE ((NOT (CASE WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN vt0.c2 ELSE CASE WHEN vt0.c2 THEN vt0.c2 ELSE vt0.c1 END END))) UNION SELECT DISTINCT vt0.c2, vt0.c0 FROM vt0 WHERE (((CASE WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN vt0.c2 ELSE CASE WHEN vt0.c2 THEN vt0.c2 ELSE vt0.c1 END END) ISNULL));
SELECT DISTINCT vt0.c2, vt0.c0 FROM vt0;
SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT vt2.c0 FROM vt2 WHERE ((+ ((NOT (vt2.c0))))) GROUP BY vt2.c0 UNION SELECT ALL vt2.c0 FROM vt2 WHERE ((NOT ((+ ((NOT (vt2.c0))))))) GROUP BY vt2.c0 UNION SELECT ALL vt2.c0 FROM vt2 WHERE ((((+ ((NOT (vt2.c0))))) ISNULL)) GROUP BY vt2.c0;
SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT ALL vt0.c2, vt0.c0, vt2.c0, v0.c0 FROM vt0, v0, vt2, vt1 GROUP BY vt0.c2, vt0.c0, vt2.c0, v0.c0;
SELECT ALL vt0.c2, vt0.c0, vt2.c0, v0.c0 FROM vt0, v0, vt2, vt1 GROUP BY vt0.c2, vt0.c0, vt2.c0, v0.c0 HAVING COUNT(CAST(AVG(vt2.c0) AS INTEGER)) UNION ALL SELECT vt0.c2, vt0.c0, vt2.c0, v0.c0 FROM vt0, v0, vt2, vt1 GROUP BY vt0.c2, vt0.c0, vt2.c0, v0.c0 HAVING (NOT (COUNT(CAST(AVG(vt2.c0) AS INTEGER)))) UNION ALL SELECT ALL vt0.c2, vt0.c0, vt2.c0, v0.c0 FROM vt0, v0, vt2, vt1 GROUP BY vt0.c2, vt0.c0, vt2.c0, v0.c0 HAVING ((COUNT(CAST(AVG(vt2.c0) AS INTEGER))) ISNULL);
SELECT ALL vt2.c0, v0.c0 FROM v0, vt2;
SELECT ALL vt2.c0, v0.c0 FROM v0, vt2 WHERE (vt2.c0) UNION ALL SELECT ALL vt2.c0, v0.c0 FROM v0, vt2 WHERE ((NOT (vt2.c0))) UNION ALL SELECT ALL vt2.c0, v0.c0 FROM v0, vt2 WHERE (((vt2.c0) ISNULL));
SELECT ALL vt2.c0, v0.c0 FROM v0, vt2;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (((((vt1.c0)OR(vt1.c0))) IS FALSE)) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (((((vt1.c0)OR(vt1.c0))) IS FALSE)))) UNION SELECT DISTINCT * FROM vt1 WHERE (((((((vt1.c0)OR(vt1.c0))) IS FALSE)) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (-1009854767) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT (-1009854767))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE (((-1009854767) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL vt2.c0, v0.c0, vt0.c0 FROM vt2, vt0, v0 GROUP BY vt2.c0, v0.c0, vt0.c0;
SELECT vt2.c0, v0.c0, vt0.c0 FROM vt2, vt0, v0 GROUP BY vt2.c0, v0.c0, vt0.c0 HAVING ((COUNT(x''))GLOB(MAX(vt0.c2))) COLLATE RTRIM UNION ALL SELECT vt2.c0, v0.c0, vt0.c0 FROM vt2, vt0, v0 GROUP BY vt2.c0, v0.c0, vt0.c0 HAVING (NOT (((COUNT(x''))GLOB(MAX(vt0.c2))) COLLATE RTRIM)) UNION ALL SELECT vt2.c0, v0.c0, vt0.c0 FROM vt2, vt0, v0 GROUP BY vt2.c0, v0.c0, vt0.c0 HAVING ((((COUNT(x''))GLOB(MAX(vt0.c2))) COLLATE RTRIM) ISNULL);
SELECT ALL vt2.c0, v0.c0, vt0.c0 FROM vt2, vt0, v0 GROUP BY vt2.c0, v0.c0, vt0.c0;
SELECT vt2.c0, v0.c0, vt0.c0 FROM vt2, vt0, v0 GROUP BY vt2.c0, v0.c0, vt0.c0 HAVING ((COUNT(x''))GLOB(MAX(vt0.c2))) COLLATE RTRIM UNION ALL SELECT vt2.c0, v0.c0, vt0.c0 FROM vt2, vt0, v0 GROUP BY vt2.c0, v0.c0, vt0.c0 HAVING (NOT (((COUNT(x''))GLOB(MAX(vt0.c2))) COLLATE RTRIM)) UNION ALL SELECT vt2.c0, v0.c0, vt0.c0 FROM vt2, vt0, v0 GROUP BY vt2.c0, v0.c0, vt0.c0 HAVING ((((COUNT(x''))GLOB(MAX(vt0.c2))) COLLATE RTRIM) ISNULL);
SELECT ALL vt2.c0, v0.c0, vt0.c0 FROM vt2, vt0, v0 GROUP BY vt2.c0, v0.c0, vt0.c0;
SELECT ALL vt1.c0 FROM vt1;
SELECT ALL vt1.c0 FROM vt1 WHERE (CASE WHEN ((vt1.c0)<(vt1.c0)) THEN LIKELIHOOD(vt1.c0, 0.6615613886629665) END) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (CASE WHEN ((vt1.c0)<(vt1.c0)) THEN LIKELIHOOD(vt1.c0, 0.6615613886629665) END))) UNION ALL SELECT vt1.c0 FROM vt1 WHERE (((CASE WHEN ((vt1.c0)<(vt1.c0)) THEN LIKELIHOOD(vt1.c0, 0.6615613886629665) END) ISNULL));
SELECT ALL vt1.c0 FROM vt1;
SELECT DISTINCT vt0.c0, vt2.c0, vt1.c0, v0.c0 FROM vt1, v0, vt2, vt0;
SELECT DISTINCT vt0.c0, vt2.c0, vt1.c0, v0.c0 FROM vt1, v0, vt2, vt0 WHERE ((((v0.c0)|(v0.c0)) IN ())) UNION SELECT DISTINCT vt0.c0, vt2.c0, vt1.c0, v0.c0 FROM vt1, v0, vt2, vt0 WHERE ((NOT ((((v0.c0)|(v0.c0)) IN ())))) UNION SELECT DISTINCT vt0.c0, vt2.c0, vt1.c0, v0.c0 FROM vt1, v0, vt2, vt0 WHERE ((((((v0.c0)|(v0.c0)) IN ())) ISNULL));
SELECT DISTINCT vt0.c0, vt2.c0, vt1.c0, v0.c0 FROM vt1, v0, vt2, vt0;
SELECT vt2.c0, vt0.c2, vt0.c1, vt0.c0 FROM vt2, vt0 GROUP BY vt2.c0, vt0.c2, vt0.c1, vt0.c0;
SELECT vt2.c0, vt0.c2, vt0.c1, vt0.c0 FROM vt2, vt0 WHERE (CASE WHEN ((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c2)) THEN ((vt0.c1)&(vt2.c0)) END) GROUP BY vt2.c0, vt0.c2, vt0.c1, vt0.c0 UNION SELECT ALL vt2.c0, vt0.c2, vt0.c1, vt0.c0 FROM vt2, vt0 WHERE ((NOT (CASE WHEN ((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c2)) THEN ((vt0.c1)&(vt2.c0)) END))) GROUP BY vt2.c0, vt0.c2, vt0.c1, vt0.c0 UNION SELECT ALL vt2.c0, vt0.c2, vt0.c1, vt0.c0 FROM vt2, vt0 WHERE (((CASE WHEN ((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c2)) THEN ((vt0.c1)&(vt2.c0)) END) ISNULL)) GROUP BY vt2.c0, vt0.c2, vt0.c1, vt0.c0;
SELECT vt2.c0, vt0.c2, vt0.c1, vt0.c0 FROM vt2, vt0 GROUP BY vt2.c0, vt0.c2, vt0.c1, vt0.c0;
SELECT vt2.c0 FROM vt0, vt2, vt1 GROUP BY vt2.c0;
SELECT ALL vt2.c0 FROM vt0, vt2, vt1 GROUP BY vt2.c0 HAVING SUM(TOTAL(GROUP_CONCAT(COUNT(MIN(MAX(GROUP_CONCAT(vt1.c0))))))) UNION ALL SELECT ALL vt2.c0 FROM vt0, vt2, vt1 GROUP BY vt2.c0 HAVING (NOT (SUM(TOTAL(GROUP_CONCAT(COUNT(MIN(MAX(GROUP_CONCAT(vt1.c0))))))))) UNION ALL SELECT vt2.c0 FROM vt0, vt2, vt1 GROUP BY vt2.c0 HAVING ((SUM(TOTAL(GROUP_CONCAT(COUNT(MIN(MAX(GROUP_CONCAT(vt1.c0)))))))) ISNULL);
SELECT * FROM v0, vt2, vt1, vt0;
SELECT * FROM v0, vt2, vt1, vt0 WHERE ((((vt2.c0)IS(vt1.c0)) IN (vt0.c2 COLLATE NOCASE, (- (0Xca55bb5))))) UNION ALL SELECT ALL * FROM v0, vt2, vt1, vt0 WHERE ((NOT ((((vt2.c0)IS(vt1.c0)) IN (vt0.c2 COLLATE NOCASE, (- (0Xca55bb5))))))) UNION ALL SELECT ALL * FROM v0, vt2, vt1, vt0 WHERE ((((((vt2.c0)IS(vt1.c0)) IN (vt0.c2 COLLATE NOCASE, (- (0Xca55bb5))))) ISNULL));
SELECT * FROM v0, vt2, vt1, vt0;
SELECT DISTINCT vt1.c0, vt0.c1, v0.c0, vt0.c0, vt0.c2 FROM vt0, vt1, vt2, v0;
SELECT DISTINCT vt1.c0, vt0.c1, v0.c0, vt0.c0, vt0.c2 FROM vt0, vt1, vt2, v0 WHERE (LIKELY((+ (vt0.c2)))) UNION SELECT DISTINCT vt1.c0, vt0.c1, v0.c0, vt0.c0, vt0.c2 FROM vt0, vt1, vt2, v0 WHERE ((NOT (LIKELY((+ (vt0.c2)))))) UNION SELECT DISTINCT vt1.c0, vt0.c1, v0.c0, vt0.c0, vt0.c2 FROM vt0, vt1, vt2, v0 WHERE (((LIKELY((+ (vt0.c2)))) ISNULL));
SELECT DISTINCT vt1.c0, vt0.c1, v0.c0, vt0.c0, vt0.c2 FROM vt0, vt1, vt2, v0;
SELECT ALL vt2.c0, v0.c0, vt1.c0, vt0.c2, vt0.c1 FROM vt1, vt2, v0, vt0 GROUP BY vt2.c0, v0.c0, vt1.c0, vt0.c2, vt0.c1;
SELECT vt2.c0, v0.c0, vt1.c0, vt0.c2, vt0.c1 FROM vt1, vt2, v0, vt0 WHERE (CASE WHEN ((v0.c0)AND(v0.c0)) THEN ((vt1.c0) NOTNULL) ELSE ((vt1.c0) IS TRUE) END) GROUP BY vt2.c0, v0.c0, vt1.c0, vt0.c2, vt0.c1 UNION SELECT vt2.c0, v0.c0, vt1.c0, vt0.c2, vt0.c1 FROM vt1, vt2, v0, vt0 WHERE ((NOT (CASE WHEN ((v0.c0)AND(v0.c0)) THEN ((vt1.c0) NOTNULL) ELSE ((vt1.c0) IS TRUE) END))) GROUP BY vt2.c0, v0.c0, vt1.c0, vt0.c2, vt0.c1 UNION SELECT vt2.c0, v0.c0, vt1.c0, vt0.c2, vt0.c1 FROM vt1 NOT INDEXED, vt2, v0, vt0 WHERE (((CASE WHEN ((v0.c0)AND(v0.c0)) THEN ((vt1.c0) NOTNULL) ELSE ((vt1.c0) IS TRUE) END) ISNULL)) GROUP BY vt2.c0, v0.c0, vt1.c0, vt0.c2, vt0.c1;
SELECT ALL vt2.c0, v0.c0, vt1.c0, vt0.c2, vt0.c1 FROM vt1, vt2, v0, vt0 GROUP BY vt2.c0, v0.c0, vt1.c0, vt0.c2, vt0.c1;
SELECT vt2.c0, vt0.c2, vt0.c1 FROM vt0, vt2 CROSS JOIN vt1 ON ((NULL)OR(UNLIKELY(vt2.c0))) GROUP BY vt2.c0, vt0.c2, vt0.c1;
SELECT ALL vt2.c0, vt0.c2, vt0.c1 FROM vt0, vt2 CROSS JOIN vt1 ON ((NULL)OR(UNLIKELY(vt2.c0))) GROUP BY vt2.c0, vt0.c2, vt0.c1 HAVING ((((SUM(AVG(TOTAL(MIN(vt2.c0))))) NOT BETWEEN (vt0.c1) AND (vt1.c0)))%(((((GROUP_CONCAT(MIN(GROUP_CONCAT(vt0.c2))))OR(vt2.c0)))OR(COUNT(*))))) UNION ALL SELECT vt2.c0, vt0.c2, vt0.c1 FROM vt0, vt2 CROSS JOIN vt1 ON ((NULL)OR(UNLIKELY(vt2.c0))) GROUP BY vt2.c0, vt0.c2, vt0.c1 HAVING (NOT (((((SUM(AVG(TOTAL(MIN(vt2.c0))))) NOT BETWEEN (vt0.c1) AND (vt1.c0)))%(((((GROUP_CONCAT(MIN(GROUP_CONCAT(vt0.c2))))OR(vt2.c0)))OR(COUNT(*))))))) UNION ALL SELECT ALL vt2.c0, vt0.c2, vt0.c1 FROM vt0, vt2 CROSS JOIN vt1 ON ((NULL)OR(UNLIKELY(vt2.c0))) GROUP BY vt2.c0, vt0.c2, vt0.c1 HAVING ((((((SUM(AVG(TOTAL(MIN(vt2.c0))))) NOT BETWEEN (vt0.c1) AND (vt1.c0)))%(((((GROUP_CONCAT(MIN(GROUP_CONCAT(vt0.c2))))OR(vt2.c0)))OR(COUNT(*)))))) ISNULL);
SELECT v0.c0 FROM vt2 RIGHT OUTER JOIN v0 ON CAST(LTRIM(v0.c0, vt2.c0) AS BLOB);
SELECT v0.c0 FROM vt2 RIGHT OUTER JOIN v0 ON CAST(LTRIM(v0.c0, vt2.c0) AS BLOB) WHERE ((v0.c0 IN ())) UNION ALL SELECT v0.c0 FROM vt2 RIGHT OUTER JOIN v0 ON CAST(LTRIM(v0.c0, vt2.c0) AS BLOB) WHERE ((NOT ((v0.c0 IN ())))) UNION ALL SELECT ALL v0.c0 FROM vt2 RIGHT OUTER JOIN v0 ON CAST(LTRIM(v0.c0, vt2.c0) AS BLOB) WHERE ((((v0.c0 IN ())) ISNULL));
SELECT v0.c0 FROM vt2 RIGHT OUTER JOIN v0 ON CAST(LTRIM(v0.c0, vt2.c0) AS BLOB);
SELECT DISTINCT vt0.c1, vt0.c2, vt1.c0 FROM vt0 NATURAL JOIN vt1;
SELECT DISTINCT vt0.c1, vt0.c2, vt1.c0 FROM vt0 NATURAL JOIN vt1 WHERE (NULL) UNION SELECT DISTINCT vt0.c1, vt0.c2, vt1.c0 FROM vt0 NATURAL JOIN vt1 WHERE ((NOT (NULL))) UNION SELECT DISTINCT vt0.c1, vt0.c2, vt1.c0 FROM vt0 NATURAL JOIN vt1 WHERE (((NULL) ISNULL));
SELECT DISTINCT vt0.c1, vt0.c2, vt1.c0 FROM vt0 NATURAL JOIN vt1;
SELECT vt1.c0, v0.c0, vt0.c0, vt0.c2 FROM v0, vt2, vt1, vt0 GROUP BY vt1.c0, v0.c0, vt0.c0, vt0.c2;
SELECT ALL vt1.c0, v0.c0, vt0.c0, vt0.c2 FROM v0, vt2, vt1, vt0 WHERE (((((vt1.c0)OR(vt1.c0))) NOT BETWEEN (TRIM(DISTINCT vt1.c0, v0.c0)) AND (((((vt0.c0)AND(vt2.c0)))AND(vt0.c1))))) GROUP BY vt1.c0, v0.c0, vt0.c0, vt0.c2 UNION SELECT ALL vt1.c0, v0.c0, vt0.c0, vt0.c2 FROM v0, vt2, vt1, vt0 WHERE ((NOT (((((vt1.c0)OR(vt1.c0))) NOT BETWEEN (TRIM(DISTINCT vt1.c0, v0.c0)) AND (((((vt0.c0)AND(vt2.c0)))AND(vt0.c1))))))) GROUP BY vt1.c0, v0.c0, vt0.c0, vt0.c2 UNION SELECT ALL vt1.c0, v0.c0, vt0.c0, vt0.c2 FROM v0, vt2, vt1, vt0 WHERE (((((((vt1.c0)OR(vt1.c0))) NOT BETWEEN (TRIM(DISTINCT vt1.c0, v0.c0)) AND (((((vt0.c0)AND(vt2.c0)))AND(vt0.c1))))) ISNULL)) GROUP BY vt1.c0, v0.c0, vt0.c0, vt0.c2;
SELECT vt1.c0, v0.c0, vt0.c0, vt0.c2 FROM v0, vt2, vt1, vt0 GROUP BY vt1.c0, v0.c0, vt0.c0, vt0.c2;
SELECT vt1.c0, vt0.c1, vt0.c0, v0.c0, vt0.c2, vt2.c0 FROM vt0, vt2 LEFT OUTER JOIN v0 ON vt2.c0 CROSS JOIN vt1 ON ((((vt0.c2)+(v0.c0)))|(vt1.c0 COLLATE RTRIM)) GROUP BY vt1.c0, vt0.c1, vt0.c0, v0.c0, vt0.c2, vt2.c0;
SELECT ALL vt1.c0, vt0.c1, vt0.c0, v0.c0, vt0.c2, vt2.c0 FROM vt0, vt2 LEFT OUTER JOIN v0 ON vt2.c0 CROSS JOIN vt1 ON ((((vt0.c2)+(v0.c0)))|(vt1.c0 COLLATE RTRIM)) GROUP BY vt1.c0, vt0.c1, vt0.c0, v0.c0, vt0.c2, vt2.c0 HAVING CAST((NOT (vt0.c2)) AS BLOB) UNION ALL SELECT vt1.c0, vt0.c1, vt0.c0, v0.c0, vt0.c2, vt2.c0 FROM vt0, vt2 LEFT OUTER JOIN v0 ON vt2.c0 CROSS JOIN vt1 ON ((((vt0.c2)+(v0.c0)))|(vt1.c0 COLLATE RTRIM)) GROUP BY vt1.c0, vt0.c1, vt0.c0, v0.c0, vt0.c2, vt2.c0 HAVING (NOT (CAST((NOT (vt0.c2)) AS BLOB))) UNION ALL SELECT vt1.c0, vt0.c1, vt0.c0, v0.c0, vt0.c2, vt2.c0 FROM vt0, vt2 LEFT OUTER JOIN v0 ON vt2.c0 CROSS JOIN vt1 ON ((((vt0.c2)+(v0.c0)))|(vt1.c0 COLLATE RTRIM)) GROUP BY vt1.c0, vt0.c1, vt0.c0, v0.c0, vt0.c2, vt2.c0 HAVING ((CAST((NOT (vt0.c2)) AS BLOB)) ISNULL);
SELECT vt1.c0, vt0.c1, vt0.c0, v0.c0, vt0.c2, vt2.c0 FROM vt0, vt2 LEFT OUTER JOIN v0 ON vt2.c0 CROSS JOIN vt1 ON ((((vt0.c2)+(v0.c0)))|(vt1.c0 COLLATE RTRIM)) GROUP BY vt1.c0, vt0.c1, vt0.c0, v0.c0, vt0.c2, vt2.c0;
SELECT ALL vt1.c0, vt0.c1, vt0.c0, v0.c0, vt0.c2, vt2.c0 FROM vt0, vt2 LEFT OUTER JOIN v0 ON vt2.c0 CROSS JOIN vt1 ON ((((vt0.c2)+(v0.c0)))|(vt1.c0 COLLATE RTRIM)) GROUP BY vt1.c0, vt0.c1, vt0.c0, v0.c0, vt0.c2, vt2.c0 HAVING CAST((NOT (vt0.c2)) AS BLOB) UNION ALL SELECT vt1.c0, vt0.c1, vt0.c0, v0.c0, vt0.c2, vt2.c0 FROM vt0, vt2 LEFT OUTER JOIN v0 ON vt2.c0 CROSS JOIN vt1 ON ((((vt0.c2)+(v0.c0)))|(vt1.c0 COLLATE RTRIM)) GROUP BY vt1.c0, vt0.c1, vt0.c0, v0.c0, vt0.c2, vt2.c0 HAVING (NOT (CAST((NOT (vt0.c2)) AS BLOB))) UNION ALL SELECT vt1.c0, vt0.c1, vt0.c0, v0.c0, vt0.c2, vt2.c0 FROM vt0, vt2 LEFT OUTER JOIN v0 ON vt2.c0 CROSS JOIN vt1 ON ((((vt0.c2)+(v0.c0)))|(vt1.c0 COLLATE RTRIM)) GROUP BY vt1.c0, vt0.c1, vt0.c0, v0.c0, vt0.c2, vt2.c0 HAVING ((CAST((NOT (vt0.c2)) AS BLOB)) ISNULL);
SELECT vt1.c0, vt0.c1, vt0.c0, v0.c0, vt0.c2, vt2.c0 FROM vt0, vt2 LEFT OUTER JOIN v0 ON vt2.c0 CROSS JOIN vt1 ON ((((vt0.c2)+(v0.c0)))|(vt1.c0 COLLATE RTRIM)) GROUP BY vt1.c0, vt0.c1, vt0.c0, v0.c0, vt0.c2, vt2.c0;
SELECT ALL * FROM vt1 NATURAL JOIN vt2;
SELECT * FROM vt1 NATURAL JOIN vt2 WHERE (vt1.c0) UNION ALL SELECT * FROM vt1 NATURAL JOIN vt2 WHERE ((NOT (vt1.c0))) UNION ALL SELECT ALL * FROM vt1 NATURAL JOIN vt2 WHERE (((vt1.c0) ISNULL));
SELECT ALL * FROM vt1 NATURAL JOIN vt2;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (CAST(((((((((vt0.c2)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c1)))AND(vt0.c2)) AS NUMERIC)) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (CAST(((((((((vt0.c2)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c1)))AND(vt0.c2)) AS NUMERIC)))) UNION SELECT DISTINCT * FROM vt0 WHERE (((CAST(((((((((vt0.c2)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c1)))AND(vt0.c2)) AS NUMERIC)) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT vt2.c0, vt0.c1, vt0.c0, vt1.c0 FROM vt1, vt0, vt2 NOT INDEXED GROUP BY vt2.c0, vt0.c1, vt0.c0, vt1.c0;
SELECT vt2.c0, vt0.c1, vt0.c0, vt1.c0 FROM vt1, vt0, vt2 WHERE (vt0.c2) GROUP BY vt2.c0, vt0.c1, vt0.c0, vt1.c0 UNION SELECT ALL vt2.c0, vt0.c1, vt0.c0, vt1.c0 FROM vt1, vt0, vt2 WHERE ((NOT (vt0.c2))) GROUP BY vt2.c0, vt0.c1, vt0.c0, vt1.c0 UNION SELECT vt2.c0, vt0.c1, vt0.c0, vt1.c0 FROM vt1, vt0, vt2 WHERE (((vt0.c2) ISNULL)) GROUP BY vt2.c0, vt0.c1, vt0.c0, vt1.c0;
SELECT vt2.c0, vt0.c1, vt0.c0, vt1.c0 FROM vt1, vt0, vt2 NOT INDEXED GROUP BY vt2.c0, vt0.c1, vt0.c0, vt1.c0;
SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING ((SUM(vt2.c0))*(MAX(vt2.c0))) UNION ALL SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING (NOT (((SUM(vt2.c0))*(MAX(vt2.c0))))) UNION ALL SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING ((((SUM(vt2.c0))*(MAX(vt2.c0)))) ISNULL);
SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING ((SUM(vt2.c0))*(MAX(vt2.c0))) UNION ALL SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING (NOT (((SUM(vt2.c0))*(MAX(vt2.c0))))) UNION ALL SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING ((((SUM(vt2.c0))*(MAX(vt2.c0)))) ISNULL);
SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT ALL vt1.c0 FROM vt2, vt0, vt1, v0;
SELECT ALL vt1.c0 FROM vt2, vt0, vt1, v0 WHERE (((((vt2.c0)OR(vt2.c0)))OR(vt1.c0)) COLLATE BINARY COLLATE BINARY) UNION ALL SELECT ALL vt1.c0 FROM vt2, vt0, vt1, v0 WHERE ((NOT (((((vt2.c0)OR(vt2.c0)))OR(vt1.c0)) COLLATE BINARY COLLATE BINARY))) UNION ALL SELECT ALL vt1.c0 FROM vt2, vt0, vt1, v0 WHERE (((((((vt2.c0)OR(vt2.c0)))OR(vt1.c0)) COLLATE BINARY COLLATE BINARY) ISNULL));
SELECT ALL vt1.c0 FROM vt2, vt0, vt1, v0;
SELECT DISTINCT * FROM vt1, vt0 CROSS JOIN vt2 ON CAST((((''))>=(('0.2752186492095451'))) AS BLOB);
SELECT DISTINCT * FROM vt1, vt0 CROSS JOIN vt2 ON CAST((((''))>=(('0.2752186492095451'))) AS BLOB) WHERE (CAST(vt0.c1 COLLATE NOCASE AS TEXT)) UNION SELECT DISTINCT * FROM vt1, vt0 CROSS JOIN vt2 ON CAST((((''))>=(('0.2752186492095451'))) AS BLOB) WHERE ((NOT (CAST(vt0.c1 COLLATE NOCASE AS TEXT)))) UNION SELECT DISTINCT * FROM vt1, vt0 CROSS JOIN vt2 ON CAST((((''))>=(('0.2752186492095451'))) AS BLOB) WHERE (((CAST(vt0.c1 COLLATE NOCASE AS TEXT)) ISNULL));
SELECT DISTINCT * FROM vt1, vt0 CROSS JOIN vt2 ON CAST((((''))>=(('0.2752186492095451'))) AS BLOB);
SELECT vt1.c0, vt0.c1, vt2.c0, vt0.c0, v0.c0 FROM vt1, v0, vt0, vt2 GROUP BY vt1.c0, vt0.c1, vt2.c0, vt0.c0, v0.c0;
SELECT vt1.c0, vt0.c1, vt2.c0, vt0.c0, v0.c0 FROM vt1, v0, vt0, vt2 WHERE ((((CHAR(vt2.c0)))>((((((v0.c0)OR(vt1.c0)))OR(v0.c0)))))) GROUP BY vt1.c0, vt0.c1, vt2.c0, vt0.c0, v0.c0 UNION SELECT vt1.c0, vt0.c1, vt2.c0, vt0.c0, v0.c0 FROM vt1, v0, vt0, vt2 WHERE ((NOT ((((CHAR(vt2.c0)))>((((((v0.c0)OR(vt1.c0)))OR(v0.c0)))))))) GROUP BY vt1.c0, vt0.c1, vt2.c0, vt0.c0, v0.c0 UNION SELECT ALL vt1.c0, vt0.c1, vt2.c0, vt0.c0, v0.c0 FROM vt1, v0, vt0, vt2 WHERE ((((((CHAR(vt2.c0)))>((((((v0.c0)OR(vt1.c0)))OR(v0.c0)))))) ISNULL)) GROUP BY vt1.c0, vt0.c1, vt2.c0, vt0.c0, v0.c0;
SELECT vt1.c0, vt0.c1, vt2.c0, vt0.c0, v0.c0 FROM vt1, v0, vt0, vt2 GROUP BY vt1.c0, vt0.c1, vt2.c0, vt0.c0, v0.c0;
SELECT vt2.c0 FROM v0, vt1 RIGHT OUTER JOIN vt2 ON ((((vt1.c0, vt2.c0, vt2.c0)) BETWEEN ((vt1.c0, vt1.c0, vt2.c0)) AND ((v0.c0, vt1.c0, vt1.c0))) IN (((0xffffffffe50ce141) IS TRUE))) GROUP BY vt2.c0;
SELECT ALL vt2.c0 FROM v0, vt1 RIGHT OUTER JOIN vt2 ON ((((vt1.c0, vt2.c0, vt2.c0)) BETWEEN ((vt1.c0, vt1.c0, vt2.c0)) AND ((v0.c0, vt1.c0, vt1.c0))) IN (((0xffffffffe50ce141) IS TRUE))) GROUP BY vt2.c0 HAVING (((COUNT(*) IN (COUNT(vt1.c0), MAX(AVG(v0.c0))))) BETWEEN (COUNT(*)) AND (MAX(MIN(COUNT(x''))))) UNION ALL SELECT vt2.c0 FROM v0, vt1 RIGHT OUTER JOIN vt2 ON ((((vt1.c0, vt2.c0, vt2.c0)) BETWEEN ((vt1.c0, vt1.c0, vt2.c0)) AND ((v0.c0, vt1.c0, vt1.c0))) IN (((0xffffffffe50ce141) IS TRUE))) GROUP BY vt2.c0 HAVING (NOT ((((COUNT(*) IN (COUNT(vt1.c0), MAX(AVG(v0.c0))))) BETWEEN (COUNT(*)) AND (MAX(MIN(COUNT(x''))))))) UNION ALL SELECT vt2.c0 FROM v0, vt1 RIGHT OUTER JOIN vt2 ON ((((vt1.c0, vt2.c0, vt2.c0)) BETWEEN ((vt1.c0, vt1.c0, vt2.c0)) AND ((v0.c0, vt1.c0, vt1.c0))) IN (((0Xffffffffe50ce141) IS TRUE))) GROUP BY vt2.c0 HAVING (((((COUNT(*) IN (COUNT(vt1.c0), MAX(AVG(v0.c0))))) BETWEEN (COUNT(*)) AND (MAX(MIN(COUNT(x'')))))) ISNULL);
SELECT vt2.c0, vt1.c0, v0.c0, vt0.c1 FROM vt0, vt1, v0, vt2;
SELECT ALL vt2.c0, vt1.c0, v0.c0, vt0.c1 FROM vt0, vt1, v0, vt2 WHERE (vt0.c0) UNION ALL SELECT vt2.c0, vt1.c0, v0.c0, vt0.c1 FROM vt0, vt1, v0, vt2 WHERE ((NOT (vt0.c0))) UNION ALL SELECT vt2.c0, vt1.c0, v0.c0, vt0.c1 FROM vt0, vt1, v0, vt2 WHERE (((vt0.c0) ISNULL));
SELECT vt2.c0, vt1.c0, v0.c0, vt0.c1 FROM vt0, vt1, v0, vt2;
SELECT DISTINCT vt1.c0, vt0.c0, vt2.c0 FROM vt0, vt2, v0 NATURAL JOIN vt1;
SELECT DISTINCT vt1.c0, vt0.c0, vt2.c0 FROM vt0, vt2, v0 NATURAL JOIN vt1 WHERE (TYPEOF(DISTINCT v0.c0) COLLATE NOCASE) UNION SELECT DISTINCT vt1.c0, vt0.c0, vt2.c0 FROM vt0, vt2, v0 NATURAL JOIN vt1 WHERE ((NOT (TYPEOF(DISTINCT v0.c0) COLLATE NOCASE))) UNION SELECT DISTINCT vt1.c0, vt0.c0, vt2.c0 FROM vt0, vt2, v0 NATURAL JOIN vt1 WHERE (((TYPEOF(DISTINCT v0.c0) COLLATE NOCASE) ISNULL));
SELECT DISTINCT vt1.c0, vt0.c0, vt2.c0 FROM vt0, vt2, v0 NATURAL JOIN vt1;
SELECT vt2.c0 FROM v0, vt2 FULL OUTER JOIN vt1 ON CASE WHEN CAST(v0.c0 AS NUMERIC) THEN CASE WHEN vt0.c2 THEN vt0.c1 END END FULL OUTER JOIN vt0 ON ((vt0.c2 COLLATE BINARY)&(CASE vt2.c0  WHEN vt0.c2 THEN v0.c0 END)) GROUP BY vt2.c0;
SELECT ALL v0.c0, vt2.c0, vt1.c0 FROM vt1, vt2, v0 GROUP BY v0.c0, vt2.c0, vt1.c0;
SELECT v0.c0, vt2.c0, vt1.c0 FROM vt1, vt2, v0 GROUP BY v0.c0, vt2.c0, vt1.c0 HAVING ((IFNULL(MIN(vt2.c0), GROUP_CONCAT(vt1.c0))) NOT BETWEEN ((((MIN(v0.c0)))>((SUM(MAX(COUNT(*))))))) AND (AVG(AVG(COUNT(*))))) UNION ALL SELECT ALL v0.c0, vt2.c0, vt1.c0 FROM vt1, vt2, v0 GROUP BY v0.c0, vt2.c0, vt1.c0 HAVING (NOT (((IFNULL(MIN(vt2.c0), GROUP_CONCAT(vt1.c0))) NOT BETWEEN ((((MIN(v0.c0)))>((SUM(MAX(COUNT(*))))))) AND (AVG(AVG(COUNT(*))))))) UNION ALL SELECT v0.c0, vt2.c0, vt1.c0 FROM vt1, vt2, v0 GROUP BY v0.c0, vt2.c0, vt1.c0 HAVING ((((IFNULL(MIN(vt2.c0), GROUP_CONCAT(vt1.c0))) NOT BETWEEN ((((MIN(v0.c0)))>((SUM(MAX(COUNT(*))))))) AND (AVG(AVG(COUNT(*)))))) ISNULL);
SELECT ALL * FROM vt1, v0 LEFT OUTER JOIN vt0 ON CAST((vt0.c2 IN ()) AS INTEGER);
SELECT ALL * FROM vt1, v0 LEFT OUTER JOIN vt0 ON CAST((vt0.c2 IN ()) AS INTEGER) WHERE (json_array_length(vt0.c2) COLLATE RTRIM) UNION ALL SELECT * FROM vt1, v0 LEFT OUTER JOIN vt0 ON CAST((vt0.c2 IN ()) AS INTEGER) WHERE ((NOT (json_array_length(vt0.c2) COLLATE RTRIM))) UNION ALL SELECT * FROM vt1, v0 LEFT OUTER JOIN vt0 ON CAST((vt0.c2 IN ()) AS INTEGER) WHERE (((json_array_length(vt0.c2) COLLATE RTRIM) ISNULL));
SELECT ALL * FROM vt1, v0 LEFT OUTER JOIN vt0 ON CAST((vt0.c2 IN ()) AS INTEGER);
SELECT DISTINCT vt0.c1, vt0.c0, vt2.c0 FROM vt0, vt2;
SELECT DISTINCT vt0.c1, vt0.c0, vt2.c0 FROM vt0, vt2 WHERE (CASE (((vt2.c0)) BETWEEN ((vt0.c1)) AND ((vt2.c0)))  WHEN ((vt0.c2) NOT BETWEEN (vt0.c2) AND (vt2.c0)) THEN CASE vt0.c2  WHEN vt0.c0 THEN vt0.c2 END WHEN ((vt2.c0)*(vt0.c0)) THEN vt0.c2 COLLATE RTRIM WHEN '' THEN ((vt0.c2)+(vt0.c1)) END) UNION SELECT DISTINCT vt0.c1, vt0.c0, vt2.c0 FROM vt0, vt2 WHERE ((NOT (CASE (((vt2.c0)) BETWEEN ((vt0.c1)) AND ((vt2.c0)))  WHEN ((vt0.c2) NOT BETWEEN (vt0.c2) AND (vt2.c0)) THEN CASE vt0.c2  WHEN vt0.c0 THEN vt0.c2 END WHEN ((vt2.c0)*(vt0.c0)) THEN vt0.c2 COLLATE RTRIM WHEN '' THEN ((vt0.c2)+(vt0.c1)) END))) UNION SELECT DISTINCT vt0.c1, vt0.c0, vt2.c0 FROM vt0, vt2 WHERE (((CASE (((vt2.c0)) BETWEEN ((vt0.c1)) AND ((vt2.c0)))  WHEN ((vt0.c2) NOT BETWEEN (vt0.c2) AND (vt2.c0)) THEN CASE vt0.c2  WHEN vt0.c0 THEN vt0.c2 END WHEN ((vt2.c0)*(vt0.c0)) THEN vt0.c2 COLLATE RTRIM WHEN '' THEN ((vt0.c2)+(vt0.c1)) END) ISNULL));
SELECT DISTINCT vt0.c1, vt0.c0, vt2.c0 FROM vt0, vt2;
SELECT vt0.c0, vt1.c0, vt0.c1, vt0.c2, v0.c0 FROM vt1, v0, vt0 GROUP BY vt0.c0, vt1.c0, vt0.c1, vt0.c2, v0.c0;
SELECT ALL vt0.c0, vt1.c0, vt0.c1, vt0.c2, v0.c0 FROM vt1 NOT INDEXED, v0, vt0 WHERE ((('') ISNULL)) GROUP BY vt0.c0, vt1.c0, vt0.c1, vt0.c2, v0.c0 UNION SELECT ALL vt0.c0, vt1.c0, vt0.c1, vt0.c2, v0.c0 FROM vt1, v0, vt0 WHERE ((NOT ((('') ISNULL)))) GROUP BY vt0.c0, vt1.c0, vt0.c1, vt0.c2, v0.c0 UNION SELECT vt0.c0, vt1.c0, vt0.c1, vt0.c2, v0.c0 FROM vt1, v0, vt0 WHERE ((((('') ISNULL)) ISNULL)) GROUP BY vt0.c0, vt1.c0, vt0.c1, vt0.c2, v0.c0;
SELECT vt0.c0, vt1.c0, vt0.c1, vt0.c2, v0.c0 FROM vt1, v0, vt0 GROUP BY vt0.c0, vt1.c0, vt0.c1, vt0.c2, v0.c0;
SELECT ALL vt0.c2, vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c2, vt0.c1, vt0.c0;
SELECT vt0.c2, vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c2, vt0.c1, vt0.c0 HAVING MIN(COUNT(vt0.c1)) UNION ALL SELECT vt0.c2, vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c2, vt0.c1, vt0.c0 HAVING (NOT (MIN(COUNT(vt0.c1)))) UNION ALL SELECT ALL vt0.c2, vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c2, vt0.c1, vt0.c0 HAVING ((MIN(COUNT(vt0.c1))) ISNULL);
SELECT ALL vt0.c1, v0.c0 FROM vt0, v0;
SELECT ALL vt0.c1, v0.c0 FROM vt0, v0 WHERE (CAST(vt0.c1 COLLATE BINARY AS NUMERIC)) UNION ALL SELECT vt0.c1, v0.c0 FROM vt0, v0 WHERE ((NOT (CAST(vt0.c1 COLLATE BINARY AS NUMERIC)))) UNION ALL SELECT vt0.c1, v0.c0 FROM vt0 NOT INDEXED, v0 WHERE (((CAST(vt0.c1 COLLATE BINARY AS NUMERIC)) ISNULL));
SELECT ALL vt0.c1, v0.c0 FROM vt0, v0;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 NOT INDEXED WHERE (CAST(vt1.c0 AS REAL)) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT (CAST(vt1.c0 AS REAL)))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((CAST(vt1.c0 AS REAL)) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT ALL vt1.c0, v0.c0 FROM v0, vt1, vt2 GROUP BY vt1.c0, v0.c0;
SELECT ALL vt1.c0, v0.c0 FROM v0, vt1, vt2 WHERE (((TRIM(DISTINCT vt1.c0, vt1.c0))/(((v0.c0) ISNULL)))) GROUP BY vt1.c0, v0.c0 UNION SELECT ALL vt1.c0, v0.c0 FROM v0, vt1, vt2 WHERE ((NOT (((TRIM(DISTINCT vt1.c0, vt1.c0))/(((v0.c0) ISNULL)))))) GROUP BY vt1.c0, v0.c0 UNION SELECT vt1.c0, v0.c0 FROM v0, vt1, vt2 WHERE (((((TRIM(DISTINCT vt1.c0, vt1.c0))/(((v0.c0) ISNULL)))) ISNULL)) GROUP BY vt1.c0, v0.c0;
SELECT ALL vt1.c0, v0.c0 FROM v0, vt1, vt2 GROUP BY vt1.c0, v0.c0;
SELECT ALL vt0.c0, vt0.c2, vt2.c0, vt0.c1, vt1.c0 FROM vt0, v0, vt1, vt2 GROUP BY vt0.c0, vt0.c2, vt2.c0, vt0.c1, vt1.c0;
SELECT ALL vt0.c0, vt0.c2, vt2.c0, vt0.c1, vt1.c0 FROM vt0, v0, vt1, vt2 GROUP BY vt0.c0, vt0.c2, vt2.c0, vt0.c1, vt1.c0 HAVING (UPPER(MAX(COUNT(*))) IN ()) UNION ALL SELECT ALL vt0.c0, vt0.c2, vt2.c0, vt0.c1, vt1.c0 FROM vt0, v0, vt1, vt2 GROUP BY vt0.c0, vt0.c2, vt2.c0, vt0.c1, vt1.c0 HAVING (NOT ((UPPER(MAX(COUNT(*))) IN ()))) UNION ALL SELECT ALL vt0.c0, vt0.c2, vt2.c0, vt0.c1, vt1.c0 FROM vt0, v0, vt1, vt2 GROUP BY vt0.c0, vt0.c2, vt2.c0, vt0.c1, vt1.c0 HAVING (((UPPER(MAX(COUNT(*))) IN ())) ISNULL);
SELECT ALL vt0.c0, vt0.c2, vt2.c0, vt0.c1, vt1.c0 FROM vt0, v0, vt1, vt2 GROUP BY vt0.c0, vt0.c2, vt2.c0, vt0.c1, vt1.c0;
SELECT ALL vt0.c0, vt0.c2, vt2.c0, vt0.c1, vt1.c0 FROM vt0, v0, vt1, vt2 GROUP BY vt0.c0, vt0.c2, vt2.c0, vt0.c1, vt1.c0 HAVING (UPPER(MAX(COUNT(*))) IN ()) UNION ALL SELECT ALL vt0.c0, vt0.c2, vt2.c0, vt0.c1, vt1.c0 FROM vt0, v0, vt1, vt2 GROUP BY vt0.c0, vt0.c2, vt2.c0, vt0.c1, vt1.c0 HAVING (NOT ((UPPER(MAX(COUNT(*))) IN ()))) UNION ALL SELECT ALL vt0.c0, vt0.c2, vt2.c0, vt0.c1, vt1.c0 FROM vt0, v0, vt1, vt2 GROUP BY vt0.c0, vt0.c2, vt2.c0, vt0.c1, vt1.c0 HAVING (((UPPER(MAX(COUNT(*))) IN ())) ISNULL);
SELECT ALL vt0.c0, vt0.c2, vt2.c0, vt0.c1, vt1.c0 FROM vt0, v0, vt1, vt2 GROUP BY vt0.c0, vt0.c2, vt2.c0, vt0.c1, vt1.c0;
SELECT ALL MAX(CASE '-588654378'  WHEN ((vt1.c0)*(vt1.c0)) THEN (((vt1.c0, NULL, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))) WHEN CAST(-455630286 AS REAL) THEN vt1.c0 COLLATE RTRIM WHEN (+ (vt1.c0)) THEN ((vt1.c0)!=('')) END) FROM vt1;
SELECT v0.c0, vt1.c0 FROM v0, vt1;
SELECT v0.c0, vt1.c0 FROM v0, vt1 WHERE ((~ (((((vt1.c0)AND(vt1.c0)))AND(v0.c0))))) UNION ALL SELECT v0.c0, vt1.c0 FROM v0, vt1 WHERE ((NOT ((~ (((((vt1.c0)AND(vt1.c0)))AND(v0.c0))))))) UNION ALL SELECT v0.c0, vt1.c0 FROM v0, vt1 WHERE ((((~ (((((vt1.c0)AND(vt1.c0)))AND(v0.c0))))) ISNULL));
SELECT v0.c0, vt1.c0 FROM v0, vt1;
SELECT DISTINCT v0.c0, vt2.c0 FROM vt2 INNER JOIN v0 ON ((v0.c0)/(vt2.c0)) COLLATE RTRIM;
SELECT DISTINCT v0.c0, vt2.c0 FROM vt2 INNER JOIN v0 ON ((v0.c0)/(vt2.c0)) COLLATE RTRIM WHERE (((((v0.c0) NOT NULL)) NOT BETWEEN ((((v0.c0))>=((vt2.c0)))) AND (((v0.c0) BETWEEN (vt2.c0) AND (1.13107211E8))))) UNION SELECT DISTINCT v0.c0, vt2.c0 FROM vt2 INNER JOIN v0 ON ((v0.c0)/(vt2.c0)) COLLATE RTRIM WHERE ((NOT (((((v0.c0) NOT NULL)) NOT BETWEEN ((((v0.c0))>=((vt2.c0)))) AND (((v0.c0) BETWEEN (vt2.c0) AND (1.13107211E8))))))) UNION SELECT DISTINCT v0.c0, vt2.c0 FROM vt2 INNER JOIN v0 ON ((v0.c0)/(vt2.c0)) COLLATE RTRIM WHERE (((((((v0.c0) NOT NULL)) NOT BETWEEN ((((v0.c0))>=((vt2.c0)))) AND (((v0.c0) BETWEEN (vt2.c0) AND (1.13107211E8))))) ISNULL));
SELECT DISTINCT v0.c0, vt2.c0 FROM vt2 INNER JOIN v0 ON ((v0.c0)/(vt2.c0)) COLLATE RTRIM;
SELECT vt1.c0, vt0.c2 FROM vt0, vt2, v0, vt1 GROUP BY vt1.c0, vt0.c2;
SELECT vt1.c0, vt0.c2 FROM vt0, vt2, v0, vt1 WHERE (((((v0.c0)>=(vt1.c0))) IS FALSE)) GROUP BY vt1.c0, vt0.c2 UNION SELECT vt1.c0, vt0.c2 FROM vt0, vt2, v0, vt1 WHERE ((NOT (((((v0.c0)>=(vt1.c0))) IS FALSE)))) GROUP BY vt1.c0, vt0.c2 UNION SELECT vt1.c0, vt0.c2 FROM vt0, vt2, v0, vt1 WHERE (((((((v0.c0)>=(vt1.c0))) IS FALSE)) ISNULL)) GROUP BY vt1.c0, vt0.c2;
SELECT vt1.c0, vt0.c2 FROM vt0, vt2, v0, vt1 GROUP BY vt1.c0, vt0.c2;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING AVG(MAX(v0.c0)) COLLATE RTRIM UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (AVG(MAX(v0.c0)) COLLATE RTRIM)) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((AVG(MAX(v0.c0)) COLLATE RTRIM) ISNULL);
SELECT ALL * FROM v0;
SELECT ALL * FROM v0 WHERE (((rtreenode(v0.c0, v0.c0)) NOT BETWEEN (((v0.c0)IS(v0.c0))) AND (TYPEOF(DISTINCT v0.c0)))) UNION ALL SELECT * FROM v0 WHERE ((NOT (((rtreenode(v0.c0, v0.c0)) NOT BETWEEN (((v0.c0)IS(v0.c0))) AND (TYPEOF(DISTINCT v0.c0)))))) UNION ALL SELECT * FROM v0 WHERE (((((rtreenode(v0.c0, v0.c0)) NOT BETWEEN (((v0.c0)IS(v0.c0))) AND (TYPEOF(DISTINCT v0.c0)))) ISNULL));
SELECT ALL * FROM v0;
SELECT DISTINCT * FROM v0, vt1;
SELECT DISTINCT * FROM v0, vt1 WHERE (CAST(x'' COLLATE NOCASE AS TEXT)) UNION SELECT DISTINCT * FROM v0, vt1 WHERE ((NOT (CAST(x'' COLLATE NOCASE AS TEXT)))) UNION SELECT DISTINCT * FROM v0, vt1 WHERE (((CAST(x'' COLLATE NOCASE AS TEXT)) ISNULL));
SELECT DISTINCT * FROM v0, vt1;
SELECT ALL vt0.c0, vt0.c2, vt2.c0, vt0.c1 FROM vt0 FULL OUTER JOIN vt2 ON TRIM(DISTINCT ((vt0.c0)%(0.05173503484298736)), CAST(vt0.c2 AS NUMERIC)) GROUP BY vt0.c0, vt0.c2, vt2.c0, vt0.c1;
SELECT vt0.c0, vt0.c2, vt2.c0, vt0.c1 FROM vt0 FULL OUTER JOIN vt2 ON TRIM(DISTINCT ((vt0.c0)%(0.05173503484298736)), CAST(vt0.c2 AS NUMERIC)) WHERE (CAST(CAST(vt0.c1 AS INTEGER) AS TEXT)) GROUP BY vt0.c0, vt0.c2, vt2.c0, vt0.c1 UNION SELECT vt0.c0, vt0.c2, vt2.c0, vt0.c1 FROM vt0 FULL OUTER JOIN vt2 ON TRIM(DISTINCT ((vt0.c0)%(0.05173503484298736)), CAST(vt0.c2 AS NUMERIC)) WHERE ((NOT (CAST(CAST(vt0.c1 AS INTEGER) AS TEXT)))) GROUP BY vt0.c0, vt0.c2, vt2.c0, vt0.c1 UNION SELECT ALL vt0.c0, vt0.c2, vt2.c0, vt0.c1 FROM vt0 FULL OUTER JOIN vt2 ON TRIM(DISTINCT ((vt0.c0)%(0.05173503484298736)), CAST(vt0.c2 AS NUMERIC)) WHERE (((CAST(CAST(vt0.c1 AS INTEGER) AS TEXT)) ISNULL)) GROUP BY vt0.c0, vt0.c2, vt2.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c2, vt2.c0, vt0.c1 FROM vt0 FULL OUTER JOIN vt2 ON TRIM(DISTINCT ((vt0.c0)%(0.05173503484298736)), CAST(vt0.c2 AS NUMERIC)) GROUP BY vt0.c0, vt0.c2, vt2.c0, vt0.c1;
SELECT ALL v0.c0, vt0.c2, vt0.c0, vt2.c0 FROM vt2, vt1, vt0, v0 GROUP BY v0.c0, vt0.c2, vt0.c0, vt2.c0;
SELECT ALL v0.c0, vt0.c2, vt0.c0, vt2.c0 FROM vt2, vt1, vt0, v0 GROUP BY v0.c0, vt0.c2, vt0.c0, vt2.c0 HAVING GROUP_CONCAT(vt0.c0 COLLATE NOCASE) UNION ALL SELECT ALL v0.c0, vt0.c2, vt0.c0, vt2.c0 FROM vt2, vt1, vt0, v0 NOT INDEXED GROUP BY v0.c0, vt0.c2, vt0.c0, vt2.c0 HAVING (NOT (GROUP_CONCAT(vt0.c0 COLLATE NOCASE))) UNION ALL SELECT ALL v0.c0, vt0.c2, vt0.c0, vt2.c0 FROM vt2, vt1, vt0, v0 GROUP BY v0.c0, vt0.c2, vt0.c0, vt2.c0 HAVING ((GROUP_CONCAT(vt0.c0 COLLATE NOCASE)) ISNULL);
SELECT ALL v0.c0, vt0.c2, vt0.c0, vt2.c0 FROM vt2, vt1, vt0, v0 GROUP BY v0.c0, vt0.c2, vt0.c0, vt2.c0;
SELECT ALL v0.c0, vt0.c2, vt0.c0, vt2.c0 FROM vt2, vt1, vt0, v0 GROUP BY v0.c0, vt0.c2, vt0.c0, vt2.c0 HAVING GROUP_CONCAT(vt0.c0 COLLATE NOCASE) UNION ALL SELECT ALL v0.c0, vt0.c2, vt0.c0, vt2.c0 FROM vt2, vt1, vt0, v0 NOT INDEXED GROUP BY v0.c0, vt0.c2, vt0.c0, vt2.c0 HAVING (NOT (GROUP_CONCAT(vt0.c0 COLLATE NOCASE))) UNION ALL SELECT ALL v0.c0, vt0.c2, vt0.c0, vt2.c0 FROM vt2, vt1, vt0, v0 GROUP BY v0.c0, vt0.c2, vt0.c0, vt2.c0 HAVING ((GROUP_CONCAT(vt0.c0 COLLATE NOCASE)) ISNULL);
SELECT ALL v0.c0, vt0.c2, vt0.c0, vt2.c0 FROM vt2, vt1, vt0, v0 GROUP BY v0.c0, vt0.c2, vt0.c0, vt2.c0;
SELECT * FROM vt0;
SELECT * FROM vt0 WHERE (((((vt0.c1)>(vt0.c1)))&(TRIM(DISTINCT vt0.c2)))) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (((((vt0.c1)>(vt0.c1)))&(TRIM(DISTINCT vt0.c2)))))) UNION ALL SELECT * FROM vt0 WHERE (((((((vt0.c1)>(vt0.c1)))&(TRIM(DISTINCT vt0.c2)))) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT * FROM vt0 LEFT OUTER JOIN v0 ON (((x'' IN ()))>=('')) LEFT OUTER JOIN vt2 ON ((CASE WHEN vt2.c0 THEN vt2.c0 WHEN vt0.c0 THEN vt0.c2 WHEN v0.c0 THEN vt0.c0 ELSE vt0.c2 END)<=(json_array_length(vt0.c0)));
SELECT DISTINCT * FROM vt0 LEFT OUTER JOIN v0 ON (((x'' IN ()))>=('')) LEFT OUTER JOIN vt2 ON ((CASE WHEN vt2.c0 THEN vt2.c0 WHEN vt0.c0 THEN vt0.c2 WHEN v0.c0 THEN vt0.c0 ELSE vt0.c2 END)<=(json_array_length(vt0.c0))) WHERE (((((vt0.c2)*('釃蝤'))) ISNULL)) UNION SELECT DISTINCT * FROM vt0 LEFT OUTER JOIN v0 ON (((x'' IN ()))>=('')) LEFT OUTER JOIN vt2 ON ((CASE WHEN vt2.c0 THEN vt2.c0 WHEN vt0.c0 THEN vt0.c2 WHEN v0.c0 THEN vt0.c0 ELSE vt0.c2 END)<=(json_array_length(vt0.c0))) WHERE ((NOT (((((vt0.c2)*('釃蝤'))) ISNULL)))) UNION SELECT DISTINCT * FROM vt0 LEFT OUTER JOIN v0 ON (((x'' IN ()))>=('')) LEFT OUTER JOIN vt2 ON ((CASE WHEN vt2.c0 THEN vt2.c0 WHEN vt0.c0 THEN vt0.c2 WHEN v0.c0 THEN vt0.c0 ELSE vt0.c2 END)<=(json_array_length(vt0.c0))) WHERE (((((((vt0.c2)*('釃蝤'))) ISNULL)) ISNULL));
SELECT DISTINCT * FROM vt0 LEFT OUTER JOIN v0 ON (((x'' IN ()))>=('')) LEFT OUTER JOIN vt2 ON ((CASE WHEN vt2.c0 THEN vt2.c0 WHEN vt0.c0 THEN vt0.c2 WHEN v0.c0 THEN vt0.c0 ELSE vt0.c2 END)<=(json_array_length(vt0.c0)));
SELECT ALL v0.c0, vt0.c0, vt1.c0, vt0.c1 FROM vt0, vt1 RIGHT OUTER JOIN v0 ON (((((((((((((((v0.c0)) BETWEEN ((vt0.c2)) AND ((vt0.c2))))AND(v0.c0 COLLATE NOCASE)))AND((~ (vt0.c1)))))AND('-51980816')))AND(vt1.c0 COLLATE NOCASE)))AND(((vt0.c0) NOT BETWEEN (vt0.c1) AND (1112003582)))))OR(0.7190520220471301)) GROUP BY v0.c0, vt0.c0, vt1.c0, vt0.c1;
SELECT ALL v0.c0, vt0.c0, vt1.c0, vt0.c1 FROM vt0, vt1 RIGHT OUTER JOIN v0 ON (((((((((((((((v0.c0)) BETWEEN ((vt0.c2)) AND ((vt0.c2))))AND(v0.c0 COLLATE NOCASE)))AND((~ (vt0.c1)))))AND('-51980816')))AND(vt1.c0 COLLATE NOCASE)))AND(((vt0.c0) NOT BETWEEN (vt0.c1) AND (1112003582)))))OR(0.7190520220471301)) WHERE (LIKE(vt0.c1, CASE WHEN v0.c0 THEN v0.c0 WHEN vt0.c1 THEN vt1.c0 WHEN vt0.c1 THEN vt0.c1 ELSE -1.727256285E9 END, '3')) GROUP BY v0.c0, vt0.c0, vt1.c0, vt0.c1 UNION SELECT v0.c0, vt0.c0, vt1.c0, vt0.c1 FROM vt0, vt1 RIGHT OUTER JOIN v0 ON (((((((((((((((v0.c0)) BETWEEN ((vt0.c2)) AND ((vt0.c2))))AND(v0.c0 COLLATE NOCASE)))AND((~ (vt0.c1)))))AND('-51980816')))AND(vt1.c0 COLLATE NOCASE)))AND(((vt0.c0) NOT BETWEEN (vt0.c1) AND (1112003582)))))OR(0.7190520220471301)) WHERE ((NOT (LIKE(vt0.c1, CASE WHEN v0.c0 THEN v0.c0 WHEN vt0.c1 THEN vt1.c0 WHEN vt0.c1 THEN vt0.c1 ELSE -1.727256285E9 END, '3')))) GROUP BY v0.c0, vt0.c0, vt1.c0, vt0.c1 UNION SELECT v0.c0, vt0.c0, vt1.c0, vt0.c1 FROM vt0, vt1 RIGHT OUTER JOIN v0 ON (((((((((((((((v0.c0)) BETWEEN ((vt0.c2)) AND ((vt0.c2))))AND(v0.c0 COLLATE NOCASE)))AND((~ (vt0.c1)))))AND('-51980816')))AND(vt1.c0 COLLATE NOCASE)))AND(((vt0.c0) NOT BETWEEN (vt0.c1) AND (1112003582)))))OR(0.7190520220471301)) WHERE (((LIKE(vt0.c1, CASE WHEN v0.c0 THEN v0.c0 WHEN vt0.c1 THEN vt1.c0 WHEN vt0.c1 THEN vt0.c1 ELSE -1.727256285E9 END, '3')) ISNULL)) GROUP BY v0.c0, vt0.c0, vt1.c0, vt0.c1;
SELECT ALL v0.c0, vt0.c0, vt1.c0, vt0.c1 FROM vt0, vt1 RIGHT OUTER JOIN v0 ON (((((((((((((((v0.c0)) BETWEEN ((vt0.c2)) AND ((vt0.c2))))AND(v0.c0 COLLATE NOCASE)))AND((~ (vt0.c1)))))AND('-51980816')))AND(vt1.c0 COLLATE NOCASE)))AND(((vt0.c0) NOT BETWEEN (vt0.c1) AND (1112003582)))))OR(0.7190520220471301)) GROUP BY v0.c0, vt0.c0, vt1.c0, vt0.c1;
SELECT ALL vt1.c0, v0.c0 FROM v0 LEFT OUTER JOIN vt1 ON CAST(v0.c0 COLLATE RTRIM AS TEXT) GROUP BY vt1.c0, v0.c0;
SELECT ALL vt1.c0, v0.c0 FROM v0 LEFT OUTER JOIN vt1 ON CAST(v0.c0 COLLATE RTRIM AS TEXT) GROUP BY vt1.c0, v0.c0 HAVING TYPEOF(DISTINCT v0.c0) UNION ALL SELECT ALL vt1.c0, v0.c0 FROM v0 LEFT OUTER JOIN vt1 ON CAST(v0.c0 COLLATE RTRIM AS TEXT) GROUP BY vt1.c0, v0.c0 HAVING (NOT (TYPEOF(DISTINCT v0.c0))) UNION ALL SELECT ALL vt1.c0, v0.c0 FROM v0 LEFT OUTER JOIN vt1 ON CAST(v0.c0 COLLATE RTRIM AS TEXT) GROUP BY vt1.c0, v0.c0 HAVING ((TYPEOF(DISTINCT v0.c0)) ISNULL);
SELECT ALL vt1.c0, v0.c0 FROM v0 LEFT OUTER JOIN vt1 ON CAST(v0.c0 COLLATE RTRIM AS TEXT) GROUP BY vt1.c0, v0.c0;
SELECT ALL vt1.c0, v0.c0 FROM v0 LEFT OUTER JOIN vt1 ON CAST(v0.c0 COLLATE RTRIM AS TEXT) GROUP BY vt1.c0, v0.c0 HAVING TYPEOF(DISTINCT v0.c0) UNION ALL SELECT ALL vt1.c0, v0.c0 FROM v0 LEFT OUTER JOIN vt1 ON CAST(v0.c0 COLLATE RTRIM AS TEXT) GROUP BY vt1.c0, v0.c0 HAVING (NOT (TYPEOF(DISTINCT v0.c0))) UNION ALL SELECT ALL vt1.c0, v0.c0 FROM v0 LEFT OUTER JOIN vt1 ON CAST(v0.c0 COLLATE RTRIM AS TEXT) GROUP BY vt1.c0, v0.c0 HAVING ((TYPEOF(DISTINCT v0.c0)) ISNULL);
SELECT ALL vt1.c0, v0.c0 FROM v0 LEFT OUTER JOIN vt1 ON CAST(v0.c0 COLLATE RTRIM AS TEXT) GROUP BY vt1.c0, v0.c0;
SELECT vt0.c1 FROM vt0 INNER JOIN vt1 ON ((((vt0.c1)>=(vt0.c1))) NOTNULL) LEFT OUTER JOIN v0 ON vt2.c0 CROSS JOIN vt2 ON vt0.c1;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (CAST(LOWER(DISTINCT v0.c0) AS NUMERIC)) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (CAST(LOWER(DISTINCT v0.c0) AS NUMERIC)))) UNION SELECT DISTINCT * FROM v0 WHERE (((CAST(LOWER(DISTINCT v0.c0) AS NUMERIC)) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT ALL v0.c0 FROM vt0, v0, vt1 CROSS JOIN vt2 ON (((vt0.c1 IN (vt2.c0)))*((NOT (vt0.c2)))) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM vt0, v0, vt1 CROSS JOIN vt2 ON (((vt0.c1 IN (vt2.c0)))*((NOT (vt0.c2)))) WHERE ((((x'')OR(vt0.c2)) IN (CASE WHEN vt1.c0 THEN vt0.c1 WHEN vt1.c0 THEN v0.c0 WHEN vt2.c0 THEN vt2.c0 END, '8cno'))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM vt0, v0, vt1 CROSS JOIN vt2 ON (((vt0.c1 IN (vt2.c0)))*((NOT (vt0.c2)))) WHERE ((NOT ((((x'')OR(vt0.c2)) IN (CASE WHEN vt1.c0 THEN vt0.c1 WHEN vt1.c0 THEN v0.c0 WHEN vt2.c0 THEN vt2.c0 END, '8cno'))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM vt0, v0, vt1 CROSS JOIN vt2 ON (((vt0.c1 IN (vt2.c0)))*((NOT (vt0.c2)))) WHERE ((((((x'')OR(vt0.c2)) IN (CASE WHEN vt1.c0 THEN vt0.c1 WHEN vt1.c0 THEN v0.c0 WHEN vt2.c0 THEN vt2.c0 END, '8cno'))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM vt0, v0, vt1 CROSS JOIN vt2 ON (((vt0.c1 IN (vt2.c0)))*((NOT (vt0.c2)))) GROUP BY v0.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING SUM(COUNT(vt1.c0)) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (SUM(COUNT(vt1.c0)))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((SUM(COUNT(vt1.c0))) ISNULL);
SELECT ALL vt2.c0, vt1.c0 FROM vt1, vt2;
SELECT ALL vt2.c0, vt1.c0 FROM vt1, vt2 WHERE (((('ɎF\4')) BETWEEN ((CAST(vt1.c0 AS INTEGER))) AND ((((vt2.c0)*(vt1.c0)))))) UNION ALL SELECT vt2.c0, vt1.c0 FROM vt1 NOT INDEXED, vt2 WHERE ((NOT (((('ɎF\4')) BETWEEN ((CAST(vt1.c0 AS INTEGER))) AND ((((vt2.c0)*(vt1.c0)))))))) UNION ALL SELECT ALL vt2.c0, vt1.c0 FROM vt1, vt2 WHERE (((((('ɎF\4')) BETWEEN ((CAST(vt1.c0 AS INTEGER))) AND ((((vt2.c0)*(vt1.c0)))))) ISNULL));
SELECT ALL vt2.c0, vt1.c0 FROM vt1, vt2;
SELECT DISTINCT vt2.c0 FROM vt0, vt2;
SELECT DISTINCT vt2.c0 FROM vt0, vt2 WHERE ((- (((((vt0.c2)OR(vt0.c1)))AND(vt2.c0))))) UNION SELECT DISTINCT vt2.c0 FROM vt0, vt2 WHERE ((NOT ((- (((((vt0.c2)OR(vt0.c1)))AND(vt2.c0))))))) UNION SELECT DISTINCT vt2.c0 FROM vt0, vt2 WHERE ((((- (((((vt0.c2)OR(vt0.c1)))AND(vt2.c0))))) ISNULL));
SELECT DISTINCT vt2.c0 FROM vt0, vt2;
SELECT ALL vt0.c1, vt0.c2 FROM vt0 GROUP BY vt0.c1, vt0.c2;
SELECT vt0.c1, vt0.c2 FROM vt0 WHERE (vt0.c0) GROUP BY vt0.c1, vt0.c2 UNION SELECT vt0.c1, vt0.c2 FROM vt0 WHERE ((NOT (vt0.c0))) GROUP BY vt0.c1, vt0.c2 UNION SELECT vt0.c1, vt0.c2 FROM vt0 WHERE (((vt0.c0) ISNULL)) GROUP BY vt0.c1, vt0.c2;
SELECT ALL vt0.c1, vt0.c2 FROM vt0 GROUP BY vt0.c1, vt0.c2;
SELECT vt1.c0, vt0.c1, v0.c0, vt0.c2, vt0.c0 FROM v0 FULL OUTER JOIN vt2 ON ((((- (v0.c0))))==((vt1.c0))) FULL OUTER JOIN vt1 ON LTRIM((((vt1.c0, vt1.c0, vt1.c0))=((vt0.c1, vt0.c1, v0.c0)))) RIGHT OUTER JOIN vt0 ON (NOT ((- (0.21930911147909093)))) GROUP BY vt1.c0, vt0.c1, v0.c0, vt0.c2, vt0.c0;
SELECT ALL vt0.c2 FROM vt1, vt2 NATURAL JOIN vt0;
SELECT ALL vt0.c2 FROM vt1, vt2 NATURAL JOIN vt0 WHERE (((NULL)%(((vt1.c0)%(vt0.c1))))) ORDER BY (((~ (vt0.c2))) ISNULL) DESC;
SELECT ALL vt0.c2 FROM vt1, vt2 NATURAL JOIN vt0 WHERE ((NOT (((NULL)%(((vt1.c0)%(vt0.c1))))))) ORDER BY (((~ (vt0.c2))) ISNULL) DESC;
SELECT ALL vt0.c2 FROM vt1, vt2 NATURAL JOIN vt0 WHERE (((((NULL)%(((vt1.c0)%(vt0.c1))))) ISNULL)) ORDER BY (((~ (vt0.c2))) ISNULL) DESC;
SELECT ALL vt0.c2 FROM vt1, vt2 NATURAL JOIN vt0;
SELECT DISTINCT * FROM vt2, vt1, vt0;
SELECT DISTINCT * FROM vt2, vt1, vt0 WHERE ('Zpj{l') UNION SELECT DISTINCT * FROM vt2, vt1, vt0 WHERE ((NOT ('Zpj{l'))) UNION SELECT DISTINCT * FROM vt2, vt1, vt0 WHERE ((('Zpj{l') ISNULL));
SELECT DISTINCT * FROM vt2, vt1, vt0;
SELECT vt2.c0 FROM vt1, vt2, vt0 GROUP BY vt2.c0;
SELECT ALL vt2.c0 FROM vt1, vt2, vt0 WHERE (load_extension(GLOB(0X7fcd6868, vt2.c0))) GROUP BY vt2.c0 UNION SELECT vt2.c0 FROM vt1, vt2, vt0 WHERE ((NOT (load_extension(GLOB(0x7fcd6868, vt2.c0))))) GROUP BY vt2.c0 UNION SELECT vt2.c0 FROM vt1, vt2, vt0 WHERE (((load_extension(GLOB(0x7fcd6868, vt2.c0))) ISNULL)) GROUP BY vt2.c0;
SELECT ALL vt0.c2 FROM vt0 GROUP BY vt0.c2;
SELECT vt0.c2 FROM vt0 GROUP BY vt0.c2 HAVING AVG(((vt0.c0) NOTNULL)) UNION ALL SELECT ALL vt0.c2 FROM vt0 GROUP BY vt0.c2 HAVING (NOT (AVG(((vt0.c0) NOTNULL)))) UNION ALL SELECT vt0.c2 FROM vt0 GROUP BY vt0.c2 HAVING ((AVG(((vt0.c0) NOTNULL))) ISNULL);
SELECT ALL vt0.c2 FROM vt0 GROUP BY vt0.c2;
SELECT vt0.c2 FROM vt0 GROUP BY vt0.c2 HAVING AVG(((vt0.c0) NOTNULL)) UNION ALL SELECT ALL vt0.c2 FROM vt0 GROUP BY vt0.c2 HAVING (NOT (AVG(((vt0.c0) NOTNULL)))) UNION ALL SELECT vt0.c2 FROM vt0 GROUP BY vt0.c2 HAVING ((AVG(((vt0.c0) NOTNULL))) ISNULL);
SELECT ALL vt0.c2 FROM vt0 GROUP BY vt0.c2;
SELECT v0.c0, vt0.c2, vt1.c0, vt0.c0 FROM vt1, v0, vt0;
SELECT v0.c0, vt0.c2, vt1.c0, vt0.c0 FROM vt1, v0, vt0 WHERE (((SQLITE_SOURCE_ID()) IS TRUE)) UNION ALL SELECT v0.c0, vt0.c2, vt1.c0, vt0.c0 FROM vt1, v0, vt0 WHERE ((NOT (((SQLITE_SOURCE_ID()) IS TRUE)))) UNION ALL SELECT v0.c0, vt0.c2, vt1.c0, vt0.c0 FROM vt1, v0, vt0 WHERE (((((SQLITE_SOURCE_ID()) IS TRUE)) ISNULL));
SELECT v0.c0, vt0.c2, vt1.c0, vt0.c0 FROM vt1, v0, vt0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (LOWER(DISTINCT (v0.c0 IN ()))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (LOWER(DISTINCT (v0.c0 IN ()))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((LOWER(DISTINCT (v0.c0 IN ()))) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT ALL vt0.c1, v0.c0 FROM vt1, vt2, vt0, v0 GROUP BY vt0.c1, v0.c0;
SELECT vt0.c1, v0.c0 FROM vt1, vt2, vt0, v0 WHERE ((((vt0.c2)) NOT BETWEEN ((((vt1.c0) BETWEEN (v0.c0) AND (vt0.c1)))) AND ((CASE vt2.c0  WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt2.c0 THEN vt1.c0 END)))) GROUP BY vt0.c1, v0.c0 UNION SELECT vt0.c1, v0.c0 FROM vt1, vt2 NOT INDEXED, vt0, v0 WHERE ((NOT ((((vt0.c2)) NOT BETWEEN ((((vt1.c0) BETWEEN (v0.c0) AND (vt0.c1)))) AND ((CASE vt2.c0  WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt2.c0 THEN vt1.c0 END)))))) GROUP BY vt0.c1, v0.c0 UNION SELECT vt0.c1, v0.c0 FROM vt1, vt2, vt0, v0 WHERE ((((((vt0.c2)) NOT BETWEEN ((((vt1.c0) BETWEEN (v0.c0) AND (vt0.c1)))) AND ((CASE vt2.c0  WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt2.c0 THEN vt1.c0 END)))) ISNULL)) GROUP BY vt0.c1, v0.c0;
SELECT ALL vt0.c1, v0.c0 FROM vt1, vt2, vt0, v0 GROUP BY vt0.c1, v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 NOT INDEXED GROUP BY v0.c0 HAVING (((((- (MAX(v0.c0))))AND(TOTAL(TOTAL(v0.c0)))))AND(MIN(GROUP_CONCAT('KEBSs#')))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT ((((((- (MAX(v0.c0))))AND(TOTAL(TOTAL(v0.c0)))))AND(MIN(GROUP_CONCAT('KEBSs#')))))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (((((((- (MAX(v0.c0))))AND(TOTAL(TOTAL(v0.c0)))))AND(MIN(GROUP_CONCAT('KEBSs#'))))) ISNULL);
SELECT vt2.c0 FROM vt2, vt1 CROSS JOIN vt0 ON (((((vt0.c2)IS(vt0.c1))))<((x'')));
SELECT vt2.c0 FROM vt2, vt1 CROSS JOIN vt0 ON (((((vt0.c2)IS(vt0.c1))))<((x''))) WHERE (((vt1.c0)<>(vt0.c1)) COLLATE RTRIM) UNION ALL SELECT ALL vt2.c0 FROM vt2, vt1 CROSS JOIN vt0 ON (((((vt0.c2)IS(vt0.c1))))<((x''))) WHERE ((NOT (((vt1.c0)!=(vt0.c1)) COLLATE RTRIM))) UNION ALL SELECT ALL vt2.c0 FROM vt2, vt1 CROSS JOIN vt0 ON (((((vt0.c2)IS(vt0.c1))))<((x''))) WHERE (((((vt1.c0)<>(vt0.c1)) COLLATE RTRIM) ISNULL));
SELECT vt2.c0 FROM vt2, vt1 CROSS JOIN vt0 ON (((((vt0.c2)IS(vt0.c1))))<((x'')));
SELECT DISTINCT * FROM vt2, vt1;
SELECT DISTINCT * FROM vt2, vt1 WHERE ((+ (vt2.c0))) UNION SELECT DISTINCT * FROM vt2, vt1 WHERE ((NOT ((+ (vt2.c0))))) UNION SELECT DISTINCT * FROM vt2, vt1 WHERE ((((+ (vt2.c0))) ISNULL));
SELECT DISTINCT * FROM vt2, vt1;
SELECT vt0.c1 FROM vt0, vt1, vt2 GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0, vt1, vt2 WHERE ((~ (((vt0.c2)<<(vt0.c1))))) GROUP BY vt0.c1 UNION SELECT vt0.c1 FROM vt0, vt1, vt2 WHERE ((NOT ((~ (((vt0.c2)<<(vt0.c1))))))) GROUP BY vt0.c1 UNION SELECT ALL vt0.c1 FROM vt0, vt1, vt2 WHERE ((((~ (((vt0.c2)<<(vt0.c1))))) ISNULL)) GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0, vt1, vt2 GROUP BY vt0.c1;
SELECT vt0.c2, v0.c0, vt0.c1, vt0.c0 FROM vt1 RIGHT OUTER JOIN vt0 ON (NOT ((- (']1425-6558772260297482557T1119466212224403693-201T7116578826154529593--6517503897270240560--4365977195885140357T1235:a')))) INNER JOIN v0 ON CAST(CAST(vt1.c0 AS REAL) AS BLOB) GROUP BY vt0.c2, v0.c0, vt0.c1, vt0.c0;
SELECT vt0.c2, v0.c0, vt0.c1, vt0.c0 FROM vt1 RIGHT OUTER JOIN vt0 ON (NOT ((- (']1425-6558772260297482557T1119466212224403693-201T7116578826154529593--6517503897270240560--4365977195885140357T1235:a')))) INNER JOIN v0 ON CAST(CAST(vt1.c0 AS REAL) AS BLOB) GROUP BY vt0.c2, v0.c0, vt0.c1, vt0.c0 HAVING ((vt1.c0 COLLATE RTRIM) IS FALSE) UNION ALL SELECT vt0.c2, v0.c0, vt0.c1, vt0.c0 FROM vt1 RIGHT OUTER JOIN vt0 ON (NOT ((- (']1425-6558772260297482557T1119466212224403693-201T7116578826154529593--6517503897270240560--4365977195885140357T1235:a')))) INNER JOIN v0 ON CAST(CAST(vt1.c0 AS REAL) AS BLOB) GROUP BY vt0.c2, v0.c0, vt0.c1, vt0.c0 HAVING (NOT (((vt1.c0 COLLATE RTRIM) IS FALSE))) UNION ALL SELECT ALL vt0.c2, v0.c0, vt0.c1, vt0.c0 FROM vt1 RIGHT OUTER JOIN vt0 ON (NOT ((- (']1425-6558772260297482557T1119466212224403693-201T7116578826154529593--6517503897270240560--4365977195885140357T1235:a')))) INNER JOIN v0 ON CAST(CAST(vt1.c0 AS REAL) AS BLOB) GROUP BY vt0.c2, v0.c0, vt0.c1, vt0.c0 HAVING ((((vt1.c0 COLLATE RTRIM) IS FALSE)) ISNULL);
SELECT vt0.c2, v0.c0, vt0.c1, vt0.c0 FROM vt1 RIGHT OUTER JOIN vt0 ON (NOT ((- (']1425-6558772260297482557T1119466212224403693-201T7116578826154529593--6517503897270240560--4365977195885140357T1235:a')))) INNER JOIN v0 ON CAST(CAST(vt1.c0 AS REAL) AS BLOB) GROUP BY vt0.c2, v0.c0, vt0.c1, vt0.c0;
SELECT vt0.c2, v0.c0, vt0.c1, vt0.c0 FROM vt1 RIGHT OUTER JOIN vt0 ON (NOT ((- (']1425-6558772260297482557T1119466212224403693-201T7116578826154529593--6517503897270240560--4365977195885140357T1235:a')))) INNER JOIN v0 ON CAST(CAST(vt1.c0 AS REAL) AS BLOB) GROUP BY vt0.c2, v0.c0, vt0.c1, vt0.c0 HAVING ((vt1.c0 COLLATE RTRIM) IS FALSE) UNION ALL SELECT vt0.c2, v0.c0, vt0.c1, vt0.c0 FROM vt1 RIGHT OUTER JOIN vt0 ON (NOT ((- (']1425-6558772260297482557T1119466212224403693-201T7116578826154529593--6517503897270240560--4365977195885140357T1235:a')))) INNER JOIN v0 ON CAST(CAST(vt1.c0 AS REAL) AS BLOB) GROUP BY vt0.c2, v0.c0, vt0.c1, vt0.c0 HAVING (NOT (((vt1.c0 COLLATE RTRIM) IS FALSE))) UNION ALL SELECT ALL vt0.c2, v0.c0, vt0.c1, vt0.c0 FROM vt1 RIGHT OUTER JOIN vt0 ON (NOT ((- (']1425-6558772260297482557T1119466212224403693-201T7116578826154529593--6517503897270240560--4365977195885140357T1235:a')))) INNER JOIN v0 ON CAST(CAST(vt1.c0 AS REAL) AS BLOB) GROUP BY vt0.c2, v0.c0, vt0.c1, vt0.c0 HAVING ((((vt1.c0 COLLATE RTRIM) IS FALSE)) ISNULL);
SELECT vt0.c2, v0.c0, vt0.c1, vt0.c0 FROM vt1 RIGHT OUTER JOIN vt0 ON (NOT ((- (']1425-6558772260297482557T1119466212224403693-201T7116578826154529593--6517503897270240560--4365977195885140357T1235:a')))) INNER JOIN v0 ON CAST(CAST(vt1.c0 AS REAL) AS BLOB) GROUP BY vt0.c2, v0.c0, vt0.c1, vt0.c0;
SELECT SUM((((vt1.c0)) NOT BETWEEN ((v0.c0 COLLATE NOCASE)) AND ((vt2.c0)))) FROM vt2, v0 NOT INDEXED, vt1;
SELECT ALL * FROM vt0;
SELECT * FROM vt0 WHERE ((((vt0.c1 IN ())) IS TRUE)) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT ((((vt0.c1 IN ())) IS TRUE)))) UNION ALL SELECT * FROM vt0 WHERE ((((((vt0.c1 IN ())) IS TRUE)) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT vt2.c0, v0.c0 FROM v0 CROSS JOIN vt1 ON CAST(NULL AS REAL) COLLATE NOCASE FULL OUTER JOIN vt2 ON (vt2.c0 IN ()) COLLATE NOCASE COLLATE BINARY;
SELECT DISTINCT vt2.c0, v0.c0 FROM v0 CROSS JOIN vt1 ON CAST(NULL AS REAL) COLLATE NOCASE FULL OUTER JOIN vt2 ON (vt2.c0 IN ()) COLLATE NOCASE COLLATE BINARY WHERE (((((0.3082454131924701)OR(((vt2.c0)-(v0.c0)))))AND((NOT (v0.c0))))) UNION SELECT DISTINCT vt2.c0, v0.c0 FROM v0 CROSS JOIN vt1 ON CAST(NULL AS REAL) COLLATE NOCASE FULL OUTER JOIN vt2 ON (vt2.c0 IN ()) COLLATE NOCASE COLLATE BINARY WHERE ((NOT (((((0.3082454131924701)OR(((vt2.c0)-(v0.c0)))))AND((NOT (v0.c0))))))) UNION SELECT DISTINCT vt2.c0, v0.c0 FROM v0 CROSS JOIN vt1 ON CAST(NULL AS REAL) COLLATE NOCASE FULL OUTER JOIN vt2 ON (vt2.c0 IN ()) COLLATE NOCASE COLLATE BINARY WHERE (((((((0.3082454131924701)OR(((vt2.c0)-(v0.c0)))))AND((NOT (v0.c0))))) ISNULL));
SELECT DISTINCT vt2.c0, v0.c0 FROM v0 CROSS JOIN vt1 ON CAST(NULL AS REAL) COLLATE NOCASE FULL OUTER JOIN vt2 ON (vt2.c0 IN ()) COLLATE NOCASE COLLATE BINARY;
SELECT ALL vt0.c0, vt0.c1, vt0.c2 FROM vt0 GROUP BY vt0.c0, vt0.c1, vt0.c2;
SELECT ALL vt0.c0, vt0.c1, vt0.c2 FROM vt0 WHERE ((~ (((vt0.c0)!=(vt0.c1))))) GROUP BY vt0.c0, vt0.c1, vt0.c2 UNION SELECT ALL vt0.c0, vt0.c1, vt0.c2 FROM vt0 WHERE ((NOT ((~ (((vt0.c0)<>(vt0.c1))))))) GROUP BY vt0.c0, vt0.c1, vt0.c2 UNION SELECT vt0.c0, vt0.c1, vt0.c2 FROM vt0 WHERE ((((~ (((vt0.c0)!=(vt0.c1))))) ISNULL)) GROUP BY vt0.c0, vt0.c1, vt0.c2;
SELECT ALL vt0.c0, vt0.c1, vt0.c2 FROM vt0 GROUP BY vt0.c0, vt0.c1, vt0.c2;
SELECT vt0.c0, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c0;
SELECT vt0.c0, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c0 HAVING CAST(vt0.c0 AS BLOB) COLLATE BINARY UNION ALL SELECT vt0.c0, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c0 HAVING (NOT (CAST(vt0.c0 AS BLOB) COLLATE BINARY)) UNION ALL SELECT vt0.c0, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c0 HAVING ((CAST(vt0.c0 AS BLOB) COLLATE BINARY) ISNULL);
SELECT vt0.c0, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c0;
SELECT vt0.c0, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c0 HAVING CAST(vt0.c0 AS BLOB) COLLATE BINARY UNION ALL SELECT vt0.c0, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c0 HAVING (NOT (CAST(vt0.c0 AS BLOB) COLLATE BINARY)) UNION ALL SELECT vt0.c0, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c0 HAVING ((CAST(vt0.c0 AS BLOB) COLLATE BINARY) ISNULL);
SELECT vt0.c0, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c0;
SELECT vt2.c0 FROM vt2;
SELECT ALL vt2.c0 FROM vt2 WHERE (CASE WHEN 287467280 THEN IFNULL(vt2.c0, vt2.c0) ELSE (vt2.c0 IN ()) END) UNION ALL SELECT vt2.c0 FROM vt2 WHERE ((NOT (CASE WHEN 287467280 THEN IFNULL(vt2.c0, vt2.c0) ELSE (vt2.c0 IN ()) END))) UNION ALL SELECT vt2.c0 FROM vt2 WHERE (((CASE WHEN 287467280 THEN IFNULL(vt2.c0, vt2.c0) ELSE (vt2.c0 IN ()) END) ISNULL));
SELECT vt2.c0 FROM vt2;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE ((vt1.c0 IN ()) COLLATE BINARY) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT ((vt1.c0 IN ()) COLLATE BINARY))) UNION SELECT DISTINCT * FROM vt1 WHERE ((((vt1.c0 IN ()) COLLATE BINARY) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT ALL vt0.c1, vt0.c2, vt2.c0, vt1.c0, v0.c0 FROM vt0, v0, vt1, vt2 GROUP BY vt0.c1, vt0.c2, vt2.c0, vt1.c0, v0.c0;
SELECT vt0.c1, vt0.c2, vt2.c0, vt1.c0, v0.c0 FROM vt0, v0, vt1, vt2 WHERE ((((((((vt0.c1, vt0.c1, vt0.c2)) NOT BETWEEN ((vt0.c0, vt0.c0, vt2.c0)) AND ((vt0.c1, vt1.c0, v0.c0))))OR(((vt0.c1) IS FALSE))))OR(LIKELIHOOD(vt0.c0, 0.844952943196267)))) GROUP BY vt0.c1, vt0.c2, vt2.c0, vt1.c0, v0.c0 UNION SELECT vt0.c1, vt0.c2, vt2.c0, vt1.c0, v0.c0 FROM vt0, v0, vt1, vt2 WHERE ((NOT ((((((((vt0.c1, vt0.c1, vt0.c2)) NOT BETWEEN ((vt0.c0, vt0.c0, vt2.c0)) AND ((vt0.c1, vt1.c0, v0.c0))))OR(((vt0.c1) IS FALSE))))OR(LIKELIHOOD(vt0.c0, 0.844952943196267)))))) GROUP BY vt0.c1, vt0.c2, vt2.c0, vt1.c0, v0.c0 UNION SELECT vt0.c1, vt0.c2, vt2.c0, vt1.c0, v0.c0 FROM vt0, v0, vt1, vt2 WHERE ((((((((((vt0.c1, vt0.c1, vt0.c2)) NOT BETWEEN ((vt0.c0, vt0.c0, vt2.c0)) AND ((vt0.c1, vt1.c0, v0.c0))))OR(((vt0.c1) IS FALSE))))OR(LIKELIHOOD(vt0.c0, 0.844952943196267)))) ISNULL)) GROUP BY vt0.c1, vt0.c2, vt2.c0, vt1.c0, v0.c0;
SELECT ALL vt0.c1, vt0.c2, vt2.c0, vt1.c0, v0.c0 FROM vt0, v0, vt1, vt2 GROUP BY vt0.c1, vt0.c2, vt2.c0, vt1.c0, v0.c0;
SELECT vt1.c0 FROM vt1, vt2 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1, vt2 GROUP BY vt1.c0 HAVING COUNT(*) UNION ALL SELECT vt1.c0 FROM vt1, vt2 GROUP BY vt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt1.c0 FROM vt1, vt2 GROUP BY vt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt1.c0 FROM vt1, vt2 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1, vt2 GROUP BY vt1.c0 HAVING COUNT(*) UNION ALL SELECT vt1.c0 FROM vt1, vt2 GROUP BY vt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt1.c0 FROM vt1, vt2 GROUP BY vt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt1.c0 FROM vt1, vt2 GROUP BY vt1.c0;
SELECT ALL vt2.c0 FROM vt2 LEFT OUTER JOIN vt0 ON (+ (((vt0.c1) NOT NULL))) FULL OUTER JOIN v0 ON ((((((((((vt0.c0) IS FALSE))OR(((vt0.c0)GLOB(vt0.c2)))))AND(((vt0.c2) IS FALSE))))OR((vt0.c1 IN ()))))AND(((((x'884b')OR(vt0.c1)))OR(vt2.c0))));
SELECT ALL vt2.c0 FROM vt2 LEFT OUTER JOIN vt0 ON (+ (((vt0.c1) NOT NULL))) FULL OUTER JOIN v0 ON ((((((((((vt0.c0) IS FALSE))OR(((vt0.c0)GLOB(vt0.c2)))))AND(((vt0.c2) IS FALSE))))OR((vt0.c1 IN ()))))AND(((((x'884b')OR(vt0.c1)))OR(vt2.c0)))) WHERE (((((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)))OR(((vt2.c0) IS TRUE))))OR(CASE WHEN v0.c0 THEN v0.c0 ELSE vt0.c1 END))) UNION ALL SELECT vt2.c0 FROM vt2 LEFT OUTER JOIN vt0 ON (+ (((vt0.c1) NOT NULL))) FULL OUTER JOIN v0 ON ((((((((((vt0.c0) IS FALSE))OR(((vt0.c0)GLOB(vt0.c2)))))AND(((vt0.c2) IS FALSE))))OR((vt0.c1 IN ()))))AND(((((x'884b')OR(vt0.c1)))OR(vt2.c0)))) WHERE ((NOT (((((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)))OR(((vt2.c0) IS TRUE))))OR(CASE WHEN v0.c0 THEN v0.c0 ELSE vt0.c1 END))))) UNION ALL SELECT vt2.c0 FROM vt2 LEFT OUTER JOIN vt0 ON (+ (((vt0.c1) NOT NULL))) FULL OUTER JOIN v0 ON ((((((((((vt0.c0) IS FALSE))OR(((vt0.c0)GLOB(vt0.c2)))))AND(((vt0.c2) IS FALSE))))OR((vt0.c1 IN ()))))AND(((((x'884b')OR(vt0.c1)))OR(vt2.c0)))) WHERE (((((((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)))OR(((vt2.c0) IS TRUE))))OR(CASE WHEN v0.c0 THEN v0.c0 ELSE vt0.c1 END))) ISNULL));
SELECT ALL vt2.c0 FROM vt2 LEFT OUTER JOIN vt0 ON (+ (((vt0.c1) NOT NULL))) FULL OUTER JOIN v0 ON ((((((((((vt0.c0) IS FALSE))OR(((vt0.c0)GLOB(vt0.c2)))))AND(((vt0.c2) IS FALSE))))OR((vt0.c1 IN ()))))AND(((((x'884b')OR(vt0.c1)))OR(vt2.c0))));
SELECT DISTINCT vt0.c2, vt0.c1 FROM v0, vt0, vt1;
SELECT DISTINCT vt0.c2, vt0.c1 FROM v0, vt0, vt1 WHERE (0.9407546341772226) UNION SELECT DISTINCT vt0.c2, vt0.c1 FROM v0, vt0, vt1 WHERE ((NOT (0.9407546341772226))) UNION SELECT DISTINCT vt0.c2, vt0.c1 FROM v0, vt0, vt1 WHERE (((0.9407546341772226) ISNULL));
SELECT DISTINCT vt0.c2, vt0.c1 FROM v0, vt0, vt1;
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c0, vt0.c1 FROM vt0 WHERE ('') GROUP BY vt0.c0, vt0.c1 UNION SELECT vt0.c0, vt0.c1 FROM vt0 WHERE ((NOT (''))) GROUP BY vt0.c0, vt0.c1 UNION SELECT vt0.c0, vt0.c1 FROM vt0 WHERE ((('') ISNULL)) GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c1, vt0.c0, v0.c0, vt0.c2 FROM v0, vt0 GROUP BY vt0.c1, vt0.c0, v0.c0, vt0.c2;
SELECT ALL vt0.c1, vt0.c0, v0.c0, vt0.c2 FROM v0, vt0 GROUP BY vt0.c1, vt0.c0, v0.c0, vt0.c2 HAVING (+ (MAX(v0.c0))) UNION ALL SELECT ALL vt0.c1, vt0.c0, v0.c0, vt0.c2 FROM v0, vt0 GROUP BY vt0.c1, vt0.c0, v0.c0, vt0.c2 HAVING (NOT ((+ (MAX(v0.c0))))) UNION ALL SELECT vt0.c1, vt0.c0, v0.c0, vt0.c2 FROM v0, vt0 GROUP BY vt0.c1, vt0.c0, v0.c0, vt0.c2 HAVING (((+ (MAX(v0.c0)))) ISNULL);
SELECT vt0.c1, vt0.c0, v0.c0, vt0.c2 FROM v0, vt0 GROUP BY vt0.c1, vt0.c0, v0.c0, vt0.c2;
SELECT ALL vt0.c1, vt0.c0, v0.c0, vt0.c2 FROM v0, vt0 GROUP BY vt0.c1, vt0.c0, v0.c0, vt0.c2 HAVING (+ (MAX(v0.c0))) UNION ALL SELECT ALL vt0.c1, vt0.c0, v0.c0, vt0.c2 FROM v0, vt0 GROUP BY vt0.c1, vt0.c0, v0.c0, vt0.c2 HAVING (NOT ((+ (MAX(v0.c0))))) UNION ALL SELECT vt0.c1, vt0.c0, v0.c0, vt0.c2 FROM v0, vt0 GROUP BY vt0.c1, vt0.c0, v0.c0, vt0.c2 HAVING (((+ (MAX(v0.c0)))) ISNULL);
SELECT vt0.c1, vt0.c0, v0.c0, vt0.c2 FROM v0, vt0 GROUP BY vt0.c1, vt0.c0, v0.c0, vt0.c2;
SELECT ALL * FROM vt2;
SELECT ALL * FROM vt2 WHERE (((((vt2.c0) NOTNULL)) NOT BETWEEN ((+ (vt2.c0))) AND (((vt2.c0)IS NOT(vt2.c0))))) UNION ALL SELECT * FROM vt2 WHERE ((NOT (((((vt2.c0) NOTNULL)) NOT BETWEEN ((+ (vt2.c0))) AND (((vt2.c0)IS NOT(vt2.c0))))))) UNION ALL SELECT * FROM vt2 WHERE (((((((vt2.c0) NOTNULL)) NOT BETWEEN ((+ (vt2.c0))) AND (((vt2.c0)IS NOT(vt2.c0))))) ISNULL));
SELECT ALL * FROM vt2;
SELECT DISTINCT * FROM v0, vt2;
SELECT DISTINCT * FROM v0, vt2 WHERE (CASE (('*CpaU+r') BETWEEN (vt2.c0) AND (v0.c0))  WHEN ((vt2.c0)*(v0.c0)) THEN x'' END) UNION SELECT DISTINCT * FROM v0, vt2 WHERE ((NOT (CASE (('*CpaU+r') BETWEEN (vt2.c0) AND (v0.c0))  WHEN ((vt2.c0)*(v0.c0)) THEN x'' END))) UNION SELECT DISTINCT * FROM v0, vt2 WHERE (((CASE (('*CpaU+r') BETWEEN (vt2.c0) AND (v0.c0))  WHEN ((vt2.c0)*(v0.c0)) THEN x'' END) ISNULL));
SELECT DISTINCT * FROM v0, vt2;
SELECT vt0.c0, vt1.c0, vt0.c1, vt0.c2 FROM v0, vt0, vt2, vt1 GROUP BY vt0.c0, vt1.c0, vt0.c1, vt0.c2;
SELECT ALL vt0.c0, vt1.c0, vt0.c1, vt0.c2 FROM v0, vt0, vt2, vt1 WHERE ((NOT (((vt0.c2) ISNULL)))) GROUP BY vt0.c0, vt1.c0, vt0.c1, vt0.c2 UNION SELECT vt0.c0, vt1.c0, vt0.c1, vt0.c2 FROM v0, vt0, vt2, vt1 WHERE ((NOT ((NOT (((vt0.c2) ISNULL)))))) GROUP BY vt0.c0, vt1.c0, vt0.c1, vt0.c2 UNION SELECT ALL vt0.c0, vt1.c0, vt0.c1, vt0.c2 FROM v0, vt0, vt2, vt1 WHERE ((((NOT (((vt0.c2) ISNULL)))) ISNULL)) GROUP BY vt0.c0, vt1.c0, vt0.c1, vt0.c2;
SELECT vt0.c0, vt1.c0, vt0.c1, vt0.c2 FROM v0, vt0, vt2, vt1 GROUP BY vt0.c0, vt1.c0, vt0.c1, vt0.c2;
SELECT v0.c0, vt2.c0 FROM v0, vt2 GROUP BY v0.c0, vt2.c0;
SELECT v0.c0, vt2.c0 FROM v0, vt2 GROUP BY v0.c0, vt2.c0 HAVING GROUP_CONCAT(COUNT(*)) UNION ALL SELECT ALL v0.c0, vt2.c0 FROM v0, vt2 GROUP BY v0.c0, vt2.c0 HAVING (NOT (GROUP_CONCAT(COUNT(*)))) UNION ALL SELECT ALL v0.c0, vt2.c0 FROM v0, vt2 GROUP BY v0.c0, vt2.c0 HAVING ((GROUP_CONCAT(COUNT(*))) ISNULL);
SELECT ALL vt1.c0, v0.c0 FROM v0, vt1;
SELECT vt1.c0, v0.c0 FROM v0, vt1 WHERE (1733746070) UNION ALL SELECT vt1.c0, v0.c0 FROM v0, vt1 WHERE ((NOT (1733746070))) UNION ALL SELECT vt1.c0, v0.c0 FROM v0, vt1 WHERE (((1733746070) ISNULL));
SELECT ALL vt1.c0, v0.c0 FROM v0, vt1;
SELECT DISTINCT vt2.c0, vt0.c0, v0.c0 FROM vt0, vt2, v0;
SELECT DISTINCT vt2.c0, vt0.c0, v0.c0 FROM vt0, vt2, v0 WHERE ((vt0.c0 COLLATE NOCASE IN (vt0.c1 COLLATE NOCASE))) UNION SELECT DISTINCT vt2.c0, vt0.c0, v0.c0 FROM vt0, vt2, v0 WHERE ((NOT ((vt0.c0 COLLATE NOCASE IN (vt0.c1 COLLATE NOCASE))))) UNION SELECT DISTINCT vt2.c0, vt0.c0, v0.c0 FROM vt0, vt2, v0 WHERE ((((vt0.c0 COLLATE NOCASE IN (vt0.c1 COLLATE NOCASE))) ISNULL));
SELECT DISTINCT vt2.c0, vt0.c0, v0.c0 FROM vt0, vt2, v0;
SELECT ALL vt0.c0 FROM vt0, vt2, vt1 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, vt2, vt1 WHERE (((0.307620416156549 COLLATE NOCASE)<>(CAST(vt2.c0 AS REAL)))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0, vt2, vt1 WHERE ((NOT (((0.307620416156549 COLLATE NOCASE)!=(CAST(vt2.c0 AS REAL)))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0, vt2, vt1 WHERE (((((0.307620416156549 COLLATE NOCASE)!=(CAST(vt2.c0 AS REAL)))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, vt2, vt1 GROUP BY vt0.c0;
SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING ((x'c92c')+(CAST(vt2.c0 AS NUMERIC))) UNION ALL SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING (NOT (((x'c92c')+(CAST(vt2.c0 AS NUMERIC))))) UNION ALL SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING ((((x'c92c')+(CAST(vt2.c0 AS NUMERIC)))) ISNULL);
SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING ((x'c92c')+(CAST(vt2.c0 AS NUMERIC))) UNION ALL SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING (NOT (((x'c92c')+(CAST(vt2.c0 AS NUMERIC))))) UNION ALL SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING ((((x'c92c')+(CAST(vt2.c0 AS NUMERIC)))) ISNULL);
SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT v0.c0, vt0.c2 FROM vt1, v0 FULL OUTER JOIN vt0 ON ((CAST(v0.c0 AS BLOB)) BETWEEN (vt0.c1 COLLATE RTRIM) AND (ROUND(x'25ec', vt0.c0)));
SELECT v0.c0, vt0.c2 FROM vt1, v0 FULL OUTER JOIN vt0 ON ((CAST(v0.c0 AS BLOB)) BETWEEN (vt0.c1 COLLATE RTRIM) AND (ROUND(x'25ec', vt0.c0))) WHERE (vt0.c1) UNION ALL SELECT ALL v0.c0, vt0.c2 FROM vt1, v0 FULL OUTER JOIN vt0 ON ((CAST(v0.c0 AS BLOB)) BETWEEN (vt0.c1 COLLATE RTRIM) AND (ROUND(x'25ec', vt0.c0))) WHERE ((NOT (vt0.c1))) UNION ALL SELECT v0.c0, vt0.c2 FROM vt1, v0 FULL OUTER JOIN vt0 ON ((CAST(v0.c0 AS BLOB)) BETWEEN (vt0.c1 COLLATE RTRIM) AND (ROUND(x'25ec', vt0.c0))) WHERE (((vt0.c1) ISNULL));
SELECT v0.c0, vt0.c2 FROM vt1, v0 FULL OUTER JOIN vt0 ON ((CAST(v0.c0 AS BLOB)) BETWEEN (vt0.c1 COLLATE RTRIM) AND (ROUND(x'25ec', vt0.c0)));
SELECT DISTINCT * FROM vt1, vt2;
SELECT DISTINCT * FROM vt1, vt2 NOT INDEXED WHERE ((((vt2.c0))<=((((vt1.c0)>=(vt1.c0)))))) UNION SELECT DISTINCT * FROM vt1, vt2 WHERE ((NOT ((((vt2.c0))<=((((vt1.c0)>=(vt1.c0)))))))) UNION SELECT DISTINCT * FROM vt1, vt2 WHERE ((((((vt2.c0))<=((((vt1.c0)>=(vt1.c0)))))) ISNULL));
SELECT DISTINCT * FROM vt1, vt2;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE (json_array(CAST(vt1.c0 AS TEXT), (vt1.c0 IN ()))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT (json_array(CAST(vt1.c0 AS TEXT), (vt1.c0 IN ()))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE (((json_array(CAST(vt1.c0 AS TEXT), (vt1.c0 IN ()))) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt0.c2, vt0.c0 FROM vt0 NATURAL JOIN v0 GROUP BY vt0.c2, vt0.c0;
SELECT vt0.c2, vt0.c0 FROM vt0 NATURAL JOIN v0 GROUP BY vt0.c2, vt0.c0 HAVING TOTAL(((vt0.c2) NOTNULL)) UNION ALL SELECT ALL vt0.c2, vt0.c0 FROM vt0 NATURAL JOIN v0 GROUP BY vt0.c2, vt0.c0 HAVING (NOT (TOTAL(((vt0.c2) NOTNULL)))) UNION ALL SELECT vt0.c2, vt0.c0 FROM vt0 NATURAL JOIN v0 GROUP BY vt0.c2, vt0.c0 HAVING ((TOTAL(((vt0.c2) NOTNULL))) ISNULL);
SELECT vt0.c2, vt0.c0 FROM vt0 NATURAL JOIN v0 GROUP BY vt0.c2, vt0.c0;
SELECT vt0.c2, vt0.c0 FROM vt0 NATURAL JOIN v0 GROUP BY vt0.c2, vt0.c0 HAVING TOTAL(((vt0.c2) NOTNULL)) UNION ALL SELECT ALL vt0.c2, vt0.c0 FROM vt0 NATURAL JOIN v0 GROUP BY vt0.c2, vt0.c0 HAVING (NOT (TOTAL(((vt0.c2) NOTNULL)))) UNION ALL SELECT vt0.c2, vt0.c0 FROM vt0 NATURAL JOIN v0 GROUP BY vt0.c2, vt0.c0 HAVING ((TOTAL(((vt0.c2) NOTNULL))) ISNULL);
SELECT vt0.c2, vt0.c0 FROM vt0 NATURAL JOIN v0 GROUP BY vt0.c2, vt0.c0;
SELECT vt1.c0 FROM vt2 LEFT OUTER JOIN v0 ON vt0.c2 RIGHT OUTER JOIN vt1 ON (((((((((('5\nX*')OR(vt0.c0)))OR(vt0.c1)))AND(NULL)))AND(vt0.c0))) NOTNULL) CROSS JOIN vt0 ON ((vt0.c1 IN (vt2.c0, vt2.c0)) IN ());
SELECT vt1.c0 FROM vt2 LEFT OUTER JOIN v0 ON vt0.c2 RIGHT OUTER JOIN vt1 ON (((((((((('5\nX*')OR(vt0.c0)))OR(vt0.c1)))AND(NULL)))AND(vt0.c0))) NOTNULL) CROSS JOIN vt0 ON ((vt0.c1 IN (vt2.c0, vt2.c0)) IN ()) WHERE (((((((((((((((((((((229248214)AND(vt2.c0)))AND(v0.c0)))AND(vt0.c0)))AND(vt0.c2)))OR((((vt0.c2, vt0.c2, vt1.c0))<>((vt0.c1, v0.c0, vt0.c0))))))AND(((vt0.c1) BETWEEN (vt2.c0) AND (vt0.c1)))))AND(CASE vt0.c0  WHEN vt1.c0 THEN vt0.c1 ELSE vt2.c0 END)))AND(((vt2.c0) ISNULL))))AND(((vt0.c0) NOT BETWEEN (vt0.c2) AND (vt0.c1)))))OR(vt1.c0 COLLATE RTRIM))) UNION ALL SELECT ALL vt1.c0 FROM vt2 LEFT OUTER JOIN v0 ON vt0.c2 RIGHT OUTER JOIN vt1 ON (((((((((('5\nX*')OR(vt0.c0)))OR(vt0.c1)))AND(NULL)))AND(vt0.c0))) NOTNULL) CROSS JOIN vt0 ON ((vt0.c1 IN (vt2.c0, vt2.c0)) IN ()) WHERE ((NOT (((((((((((((((((((((229248214)AND(vt2.c0)))AND(v0.c0)))AND(vt0.c0)))AND(vt0.c2)))OR((((vt0.c2, vt0.c2, vt1.c0))!=((vt0.c1, v0.c0, vt0.c0))))))AND(((vt0.c1) BETWEEN (vt2.c0) AND (vt0.c1)))))AND(CASE vt0.c0  WHEN vt1.c0 THEN vt0.c1 ELSE vt2.c0 END)))AND(((vt2.c0) ISNULL))))AND(((vt0.c0) NOT BETWEEN (vt0.c2) AND (vt0.c1)))))OR(vt1.c0 COLLATE RTRIM))))) UNION ALL SELECT vt1.c0 FROM vt2 LEFT OUTER JOIN v0 ON vt0.c2 RIGHT OUTER JOIN vt1 ON (((((((((('5\nX*')OR(vt0.c0)))OR(vt0.c1)))AND(NULL)))AND(vt0.c0))) NOTNULL) CROSS JOIN vt0 ON ((vt0.c1 IN (vt2.c0, vt2.c0)) IN ()) WHERE (((((((((((((((((((((((229248214)AND(vt2.c0)))AND(v0.c0)))AND(vt0.c0)))AND(vt0.c2)))OR((((vt0.c2, vt0.c2, vt1.c0))<>((vt0.c1, v0.c0, vt0.c0))))))AND(((vt0.c1) BETWEEN (vt2.c0) AND (vt0.c1)))))AND(CASE vt0.c0  WHEN vt1.c0 THEN vt0.c1 ELSE vt2.c0 END)))AND(((vt2.c0) ISNULL))))AND(((vt0.c0) NOT BETWEEN (vt0.c2) AND (vt0.c1)))))OR(vt1.c0 COLLATE RTRIM))) ISNULL));
SELECT vt1.c0 FROM vt2 LEFT OUTER JOIN v0 ON vt0.c2 RIGHT OUTER JOIN vt1 ON (((((((((('5\nX*')OR(vt0.c0)))OR(vt0.c1)))AND(NULL)))AND(vt0.c0))) NOTNULL) CROSS JOIN vt0 ON ((vt0.c1 IN (vt2.c0, vt2.c0)) IN ());
SELECT DISTINCT * FROM vt2, v0;
SELECT DISTINCT * FROM vt2, v0 WHERE (((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))<((~ (v0.c0))))) UNION SELECT DISTINCT * FROM vt2, v0 WHERE ((NOT (((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))<((~ (v0.c0))))))) UNION SELECT DISTINCT * FROM vt2, v0 WHERE (((((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))<((~ (v0.c0))))) ISNULL));
SELECT DISTINCT * FROM vt2, v0;
SELECT ALL vt0.c0, v0.c0, vt0.c1, vt0.c2 FROM vt0 RIGHT OUTER JOIN vt2 ON IFNULL(CAST(vt0.c1 AS NUMERIC), vt0.c0) RIGHT OUTER JOIN v0 ON ((vt2.c0)IS NOT(vt0.c0)) COLLATE NOCASE CROSS JOIN vt1 ON (+ (((vt0.c2) NOT BETWEEN (vt0.c0) AND (v0.c0)))) GROUP BY vt0.c0, v0.c0, vt0.c1, vt0.c2;
SELECT vt0.c0, v0.c0, vt0.c1, vt0.c2 FROM vt0 RIGHT OUTER JOIN vt2 ON IFNULL(CAST(vt0.c1 AS NUMERIC), vt0.c0) RIGHT OUTER JOIN v0 ON ((vt2.c0)IS NOT(vt0.c0)) COLLATE NOCASE CROSS JOIN vt1 ON (+ (((vt0.c2) NOT BETWEEN (vt0.c0) AND (v0.c0)))) WHERE (((DATETIME(vt0.c0, vt1.c0, vt2.c0))<=(((v0.c0)*(vt0.c0))))) GROUP BY vt0.c0, v0.c0, vt0.c1, vt0.c2 UNION SELECT ALL vt0.c0, v0.c0, vt0.c1, vt0.c2 FROM vt0 RIGHT OUTER JOIN vt2 ON IFNULL(CAST(vt0.c1 AS NUMERIC), vt0.c0) RIGHT OUTER JOIN v0 ON ((vt2.c0)IS NOT(vt0.c0)) COLLATE NOCASE CROSS JOIN vt1 ON (+ (((vt0.c2) NOT BETWEEN (vt0.c0) AND (v0.c0)))) WHERE ((NOT (((DATETIME(vt0.c0, vt1.c0, vt2.c0))<=(((v0.c0)*(vt0.c0))))))) GROUP BY vt0.c0, v0.c0, vt0.c1, vt0.c2 UNION SELECT ALL vt0.c0, v0.c0, vt0.c1, vt0.c2 FROM vt0 RIGHT OUTER JOIN vt2 ON IFNULL(CAST(vt0.c1 AS NUMERIC), vt0.c0) RIGHT OUTER JOIN v0 ON ((vt2.c0)IS NOT(vt0.c0)) COLLATE NOCASE CROSS JOIN vt1 ON (+ (((vt0.c2) NOT BETWEEN (vt0.c0) AND (v0.c0)))) WHERE (((((DATETIME(vt0.c0, vt1.c0, vt2.c0))<=(((v0.c0)*(vt0.c0))))) ISNULL)) GROUP BY vt0.c0, v0.c0, vt0.c1, vt0.c2;
SELECT ALL vt0.c0, v0.c0, vt0.c1, vt0.c2 FROM vt0 RIGHT OUTER JOIN vt2 ON IFNULL(CAST(vt0.c1 AS NUMERIC), vt0.c0) RIGHT OUTER JOIN v0 ON ((vt2.c0)IS NOT(vt0.c0)) COLLATE NOCASE CROSS JOIN vt1 ON (+ (((vt0.c2) NOT BETWEEN (vt0.c0) AND (v0.c0)))) GROUP BY vt0.c0, v0.c0, vt0.c1, vt0.c2;
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING COALESCE(DISTINCT MIN(COUNT(vt0.c2)), (vt0.c0 IN (vt0.c0)), COUNT(SUM(SUM(MAX(GROUP_CONCAT(vt0.c2))))), GLOB(TOTAL(MAX(MAX(vt0.c2))), vt0.c1)) UNION ALL SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING (NOT (COALESCE(DISTINCT MIN(COUNT(vt0.c2)), (vt0.c0 IN (vt0.c0)), COUNT(SUM(SUM(MAX(GROUP_CONCAT(vt0.c2))))), GLOB(TOTAL(MAX(MAX(vt0.c2))), vt0.c1)))) UNION ALL SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING ((COALESCE(DISTINCT MIN(COUNT(vt0.c2)), (vt0.c0 IN (vt0.c0)), COUNT(SUM(SUM(MAX(GROUP_CONCAT(vt0.c2))))), GLOB(TOTAL(MAX(MAX(vt0.c2))), vt0.c1))) ISNULL);
SELECT * FROM vt1, vt2, vt0, v0;
SELECT ALL * FROM vt1, vt2, vt0, v0 WHERE (json_array_length((vt0.c1 IN ()), ((vt0.c1) NOT BETWEEN (vt2.c0) AND (vt0.c0)))) UNION ALL SELECT ALL * FROM vt1, vt2, vt0, v0 WHERE ((NOT (json_array_length((vt0.c1 IN ()), ((vt0.c1) NOT BETWEEN (vt2.c0) AND (vt0.c0)))))) UNION ALL SELECT ALL * FROM vt1, vt2, vt0, v0 WHERE (((json_array_length((vt0.c1 IN ()), ((vt0.c1) NOT BETWEEN (vt2.c0) AND (vt0.c0)))) ISNULL));
SELECT DISTINCT v0.c0 FROM vt1 RIGHT OUTER JOIN v0 ON v0.c0;
SELECT DISTINCT v0.c0 FROM vt1 RIGHT OUTER JOIN v0 ON v0.c0 WHERE ((((UNLIKELY(v0.c0)))<=((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN v0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN 0xffffffffd1ae5816 THEN v0.c0 ELSE 0.6622802715379245 END)))) UNION SELECT DISTINCT v0.c0 FROM vt1 RIGHT OUTER JOIN v0 ON v0.c0 WHERE ((NOT ((((UNLIKELY(v0.c0)))<=((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN v0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN 0Xffffffffd1ae5816 THEN v0.c0 ELSE 0.6622802715379245 END)))))) UNION SELECT DISTINCT v0.c0 FROM vt1 RIGHT OUTER JOIN v0 ON v0.c0 WHERE ((((((UNLIKELY(v0.c0)))<=((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN v0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN 0Xffffffffd1ae5816 THEN v0.c0 ELSE 0.6622802715379245 END)))) ISNULL));
SELECT DISTINCT v0.c0 FROM vt1 RIGHT OUTER JOIN v0 ON v0.c0;
SELECT vt2.c0, vt1.c0 FROM vt1, vt2 GROUP BY vt2.c0, vt1.c0;
SELECT vt2.c0, vt1.c0 FROM vt1, vt2 WHERE ((NOT (vt1.c0))) GROUP BY vt2.c0, vt1.c0 UNION SELECT vt2.c0, vt1.c0 FROM vt1, vt2 WHERE ((NOT ((NOT (vt1.c0))))) GROUP BY vt2.c0, vt1.c0 UNION SELECT vt2.c0, vt1.c0 FROM vt1, vt2 WHERE ((((NOT (vt1.c0))) ISNULL)) GROUP BY vt2.c0, vt1.c0;
SELECT vt2.c0, vt1.c0 FROM vt1, vt2 GROUP BY vt2.c0, vt1.c0;
SELECT ALL v0.c0, vt0.c2, vt1.c0, vt2.c0, vt0.c0 FROM v0, vt1, vt2, vt0 GROUP BY v0.c0, vt0.c2, vt1.c0, vt2.c0, vt0.c0;
SELECT ALL v0.c0, vt0.c2, vt1.c0, vt2.c0, vt0.c0 FROM v0, vt1, vt2, vt0 GROUP BY v0.c0, vt0.c2, vt1.c0, vt2.c0, vt0.c0 HAVING ((TOTAL(vt0.c1)) IS FALSE) UNION ALL SELECT ALL v0.c0, vt0.c2, vt1.c0, vt2.c0, vt0.c0 FROM v0, vt1, vt2, vt0 GROUP BY v0.c0, vt0.c2, vt1.c0, vt2.c0, vt0.c0 HAVING (NOT (((TOTAL(vt0.c1)) IS FALSE))) UNION ALL SELECT v0.c0, vt0.c2, vt1.c0, vt2.c0, vt0.c0 FROM v0, vt1, vt2, vt0 GROUP BY v0.c0, vt0.c2, vt1.c0, vt2.c0, vt0.c0 HAVING ((((TOTAL(vt0.c1)) IS FALSE)) ISNULL);
SELECT ALL v0.c0, vt0.c2, vt1.c0, vt2.c0, vt0.c0 FROM v0, vt1, vt2, vt0 GROUP BY v0.c0, vt0.c2, vt1.c0, vt2.c0, vt0.c0;
SELECT ALL v0.c0, vt0.c2, vt1.c0, vt2.c0, vt0.c0 FROM v0, vt1, vt2, vt0 GROUP BY v0.c0, vt0.c2, vt1.c0, vt2.c0, vt0.c0 HAVING ((TOTAL(vt0.c1)) IS FALSE) UNION ALL SELECT ALL v0.c0, vt0.c2, vt1.c0, vt2.c0, vt0.c0 FROM v0, vt1, vt2, vt0 GROUP BY v0.c0, vt0.c2, vt1.c0, vt2.c0, vt0.c0 HAVING (NOT (((TOTAL(vt0.c1)) IS FALSE))) UNION ALL SELECT v0.c0, vt0.c2, vt1.c0, vt2.c0, vt0.c0 FROM v0, vt1, vt2, vt0 GROUP BY v0.c0, vt0.c2, vt1.c0, vt2.c0, vt0.c0 HAVING ((((TOTAL(vt0.c1)) IS FALSE)) ISNULL);
SELECT ALL v0.c0, vt0.c2, vt1.c0, vt2.c0, vt0.c0 FROM v0, vt1, vt2, vt0 GROUP BY v0.c0, vt0.c2, vt1.c0, vt2.c0, vt0.c0;
SELECT vt0.c2, vt0.c1 FROM v0, vt0, vt2;
SELECT vt0.c2, vt0.c1 FROM v0, vt0, vt2 WHERE (((((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))AND(vt2.c0)))OR(vt2.c0))) ISNULL)) UNION ALL SELECT vt0.c2, vt0.c1 FROM v0, vt0, vt2 WHERE ((NOT (((((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))AND(vt2.c0)))OR(vt2.c0))) ISNULL)))) UNION ALL SELECT vt0.c2, vt0.c1 FROM v0, vt0, vt2 NOT INDEXED WHERE (((((((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))AND(vt2.c0)))OR(vt2.c0))) ISNULL)) ISNULL));
SELECT vt0.c2, vt0.c1 FROM v0, vt0, vt2;
SELECT DISTINCT vt1.c0 FROM vt1 NOT INDEXED;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE (CAST(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) AS NUMERIC)) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT (CAST(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) AS NUMERIC)))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((CAST(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) AS NUMERIC)) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1 NOT INDEXED;
SELECT ALL vt2.c0, vt0.c2, v0.c0, vt0.c0 FROM v0, vt2, vt0, vt1 GROUP BY vt2.c0, vt0.c2, v0.c0, vt0.c0;
SELECT vt2.c0, vt0.c2, v0.c0, vt0.c0 FROM v0 NOT INDEXED, vt2, vt0, vt1 WHERE ((((('') NOTNULL))OR(((((vt2.c0)AND(v0.c0)))AND(vt0.c0))))) GROUP BY vt2.c0, vt0.c2, v0.c0, vt0.c0 UNION SELECT vt2.c0, vt0.c2, v0.c0, vt0.c0 FROM v0, vt2, vt0, vt1 WHERE ((NOT ((((('') NOTNULL))OR(((((vt2.c0)AND(v0.c0)))AND(vt0.c0))))))) GROUP BY vt2.c0, vt0.c2, v0.c0, vt0.c0 UNION SELECT ALL vt2.c0, vt0.c2, v0.c0, vt0.c0 FROM v0, vt2, vt0, vt1 WHERE ((((((('') NOTNULL))OR(((((vt2.c0)AND(v0.c0)))AND(vt0.c0))))) ISNULL)) GROUP BY vt2.c0, vt0.c2, v0.c0, vt0.c0;
SELECT ALL vt2.c0, vt0.c2, v0.c0, vt0.c0 FROM v0, vt2, vt0, vt1 GROUP BY vt2.c0, vt0.c2, v0.c0, vt0.c0;
SELECT ALL vt0.c0, vt0.c2, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c2, vt0.c1;
SELECT ALL vt0.c0, vt0.c2, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c2, vt0.c1 HAVING CASE WHEN COUNT(*) THEN MIN(COUNT(MIN(vt0.c0))) WHEN AVG(vt0.c1) THEN ((vt0.c1) ISNULL) WHEN ((GROUP_CONCAT(AVG(COUNT(x'0270'))))/(vt0.c2)) THEN ((AVG(vt0.c2)) NOT BETWEEN (vt0.c2) AND (vt0.c1)) WHEN GROUP_CONCAT(AVG(MIN(vt0.c2))) THEN SUM(vt0.c0) WHEN 0.7502458359096184 THEN GROUP_CONCAT(vt0.c1) END UNION ALL SELECT ALL vt0.c0, vt0.c2, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c2, vt0.c1 HAVING (NOT (CASE WHEN COUNT(*) THEN MIN(COUNT(MIN(vt0.c0))) WHEN AVG(vt0.c1) THEN ((vt0.c1) ISNULL) WHEN ((GROUP_CONCAT(AVG(COUNT(x'0270'))))/(vt0.c2)) THEN ((AVG(vt0.c2)) NOT BETWEEN (vt0.c2) AND (vt0.c1)) WHEN GROUP_CONCAT(AVG(MIN(vt0.c2))) THEN SUM(vt0.c0) WHEN 0.7502458359096184 THEN GROUP_CONCAT(vt0.c1) END)) UNION ALL SELECT ALL vt0.c0, vt0.c2, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c2, vt0.c1 HAVING ((CASE WHEN COUNT(*) THEN MIN(COUNT(MIN(vt0.c0))) WHEN AVG(vt0.c1) THEN ((vt0.c1) ISNULL) WHEN ((GROUP_CONCAT(AVG(COUNT(x'0270'))))/(vt0.c2)) THEN ((AVG(vt0.c2)) NOT BETWEEN (vt0.c2) AND (vt0.c1)) WHEN GROUP_CONCAT(AVG(MIN(vt0.c2))) THEN SUM(vt0.c0) WHEN 0.7502458359096184 THEN GROUP_CONCAT(vt0.c1) END) ISNULL);
SELECT ALL vt2.c0, v0.c0 FROM vt1, vt2, v0;
SELECT vt2.c0, v0.c0 FROM vt1, vt2, v0 WHERE (((CAST(vt2.c0 AS TEXT)) BETWEEN (((v0.c0) BETWEEN (v0.c0) AND (v0.c0))) AND (((vt2.c0) BETWEEN (vt1.c0) AND (vt1.c0))))) UNION ALL SELECT vt2.c0, v0.c0 FROM vt1, vt2, v0 WHERE ((NOT (((CAST(vt2.c0 AS TEXT)) BETWEEN (((v0.c0) BETWEEN (v0.c0) AND (v0.c0))) AND (((vt2.c0) BETWEEN (vt1.c0) AND (vt1.c0))))))) UNION ALL SELECT ALL vt2.c0, v0.c0 FROM vt1, vt2, v0 WHERE (((((CAST(vt2.c0 AS TEXT)) BETWEEN (((v0.c0) BETWEEN (v0.c0) AND (v0.c0))) AND (((vt2.c0) BETWEEN (vt1.c0) AND (vt1.c0))))) ISNULL));
SELECT ALL vt2.c0, v0.c0 FROM vt1, vt2, v0;
SELECT DISTINCT * FROM v0, vt1;
SELECT DISTINCT * FROM v0, vt1 WHERE (((((-682276148)<=(vt1.c0)))>=(0.13992770767263396))) UNION SELECT DISTINCT * FROM v0, vt1 WHERE ((NOT (((((-682276148)<=(vt1.c0)))>=(0.13992770767263396))))) UNION SELECT DISTINCT * FROM v0, vt1 WHERE (((((((-682276148)<=(vt1.c0)))>=(0.13992770767263396))) ISNULL));
SELECT DISTINCT * FROM v0, vt1;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))AND(NULL)))OR(CASE WHEN v0.c0 THEN v0.c0 END))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT (((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))AND(NULL)))OR(CASE WHEN v0.c0 THEN v0.c0 END))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))AND(NULL)))OR(CASE WHEN v0.c0 THEN v0.c0 END))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING SUM(SUM(GROUP_CONCAT(vt2.c0))) UNION ALL SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING (NOT (SUM(SUM(GROUP_CONCAT(vt2.c0))))) UNION ALL SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING ((SUM(SUM(GROUP_CONCAT(vt2.c0)))) ISNULL);
SELECT * FROM vt0, vt1, vt2;
SELECT ALL * FROM vt0, vt1, vt2 WHERE (x'') UNION ALL SELECT * FROM vt0, vt1 NOT INDEXED, vt2 WHERE ((NOT (x''))) UNION ALL SELECT ALL * FROM vt0, vt1, vt2 WHERE (((x'') ISNULL));
SELECT * FROM vt0, vt1, vt2;
SELECT DISTINCT * FROM vt2, vt0, v0;
SELECT DISTINCT * FROM vt2, vt0, v0 WHERE (((v0.c0 COLLATE NOCASE) BETWEEN (vt0.c0) AND ((- (vt2.c0))))) UNION SELECT DISTINCT * FROM vt2, vt0, v0 WHERE ((NOT (((v0.c0 COLLATE NOCASE) BETWEEN (vt0.c0) AND ((- (vt2.c0))))))) UNION SELECT DISTINCT * FROM vt2, vt0, v0 WHERE (((((v0.c0 COLLATE NOCASE) BETWEEN (vt0.c0) AND ((- (vt2.c0))))) ISNULL));
SELECT DISTINCT * FROM vt2, vt0, v0;
SELECT ALL v0.c0, vt1.c0, vt0.c1, vt2.c0, vt0.c2, vt0.c0 FROM v0, vt0, vt2, vt1 GROUP BY v0.c0, vt1.c0, vt0.c1, vt2.c0, vt0.c2, vt0.c0;
SELECT ALL v0.c0, vt1.c0, vt0.c1, vt2.c0, vt0.c2, vt0.c0 FROM v0, vt0, vt2, vt1 WHERE (LIKELIHOOD(CAST(vt1.c0 AS NUMERIC), 0.712501129895069)) GROUP BY v0.c0, vt1.c0, vt0.c1, vt2.c0, vt0.c2, vt0.c0 UNION SELECT v0.c0, vt1.c0, vt0.c1, vt2.c0, vt0.c2, vt0.c0 FROM v0, vt0, vt2, vt1 WHERE ((NOT (LIKELIHOOD(CAST(vt1.c0 AS NUMERIC), 0.712501129895069)))) GROUP BY v0.c0, vt1.c0, vt0.c1, vt2.c0, vt0.c2, vt0.c0 UNION SELECT v0.c0, vt1.c0, vt0.c1, vt2.c0, vt0.c2, vt0.c0 FROM v0, vt0, vt2, vt1 WHERE (((LIKELIHOOD(CAST(vt1.c0 AS NUMERIC), 0.712501129895069)) ISNULL)) GROUP BY v0.c0, vt1.c0, vt0.c1, vt2.c0, vt0.c2, vt0.c0;
SELECT ALL v0.c0, vt1.c0, vt0.c1, vt2.c0, vt0.c2, vt0.c0 FROM v0, vt0, vt2, vt1 GROUP BY v0.c0, vt1.c0, vt0.c1, vt2.c0, vt0.c2, vt0.c0;
SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING (AVG(vt2.c0) IN ()) UNION ALL SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING (NOT ((AVG(vt2.c0) IN ()))) UNION ALL SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING (((AVG(vt2.c0) IN ())) ISNULL);
SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING (AVG(vt2.c0) IN ()) UNION ALL SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING (NOT ((AVG(vt2.c0) IN ()))) UNION ALL SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING (((AVG(vt2.c0) IN ())) ISNULL);
SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT ALL vt2.c0, vt0.c1, v0.c0, vt1.c0 FROM vt0, vt2 FULL OUTER JOIN vt1 ON (vt1.c0 COLLATE BINARY IN (((((vt0.c1)AND(vt0.c1)))AND(vt0.c2)))) RIGHT OUTER JOIN v0 ON (NOT (vt0.c0 COLLATE BINARY));
SELECT vt2.c0, vt0.c1, v0.c0, vt1.c0 FROM vt0, vt2 FULL OUTER JOIN vt1 ON (vt1.c0 COLLATE BINARY IN (((((vt0.c1)AND(vt0.c1)))AND(vt0.c2)))) RIGHT OUTER JOIN v0 ON (NOT (vt0.c0 COLLATE BINARY)) WHERE ((((CAST(vt1.c0 AS BLOB)))<(('-1921577223' COLLATE BINARY)))) UNION ALL SELECT ALL vt2.c0, vt0.c1, v0.c0, vt1.c0 FROM vt0, vt2 FULL OUTER JOIN vt1 ON (vt1.c0 COLLATE BINARY IN (((((vt0.c1)AND(vt0.c1)))AND(vt0.c2)))) RIGHT OUTER JOIN v0 ON (NOT (vt0.c0 COLLATE BINARY)) WHERE ((NOT ((((CAST(vt1.c0 AS BLOB)))<(('-1921577223' COLLATE BINARY)))))) UNION ALL SELECT vt2.c0, vt0.c1, v0.c0, vt1.c0 FROM vt0, vt2 FULL OUTER JOIN vt1 ON (vt1.c0 COLLATE BINARY IN (((((vt0.c1)AND(vt0.c1)))AND(vt0.c2)))) RIGHT OUTER JOIN v0 ON (NOT (vt0.c0 COLLATE BINARY)) WHERE ((((((CAST(vt1.c0 AS BLOB)))<(('-1921577223' COLLATE BINARY)))) ISNULL));
SELECT ALL vt2.c0, vt0.c1, v0.c0, vt1.c0 FROM vt0, vt2 FULL OUTER JOIN vt1 ON (vt1.c0 COLLATE BINARY IN (((((vt0.c1)AND(vt0.c1)))AND(vt0.c2)))) RIGHT OUTER JOIN v0 ON (NOT (vt0.c0 COLLATE BINARY));
SELECT DISTINCT * FROM vt2, v0, vt0, vt1;
SELECT DISTINCT * FROM vt2, v0, vt0, vt1 WHERE (vt2.c0) UNION SELECT DISTINCT * FROM vt2, v0, vt0, vt1 WHERE ((NOT (vt2.c0))) UNION SELECT DISTINCT * FROM vt2, v0, vt0, vt1 WHERE (((vt2.c0) ISNULL));
SELECT DISTINCT * FROM vt2, v0, vt0, vt1;
SELECT vt0.c0 FROM v0, vt1, vt0, vt2 GROUP BY vt0.c0;
SELECT vt0.c0 FROM v0, vt1, vt0, vt2 WHERE (((((vt0.c2)||(vt0.c2))) NOT NULL)) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM v0, vt1, vt0, vt2 WHERE ((NOT (((((vt0.c2)||(vt0.c2))) NOT NULL)))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM v0, vt1, vt0, vt2 WHERE (((((((vt0.c2)||(vt0.c2))) NOT NULL)) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM v0, vt1, vt0, vt2 GROUP BY vt0.c0;
SELECT ALL vt1.c0, vt0.c1, vt0.c0, vt0.c2, v0.c0 FROM v0, vt0, vt1 GROUP BY vt1.c0, vt0.c1, vt0.c0, vt0.c2, v0.c0;
SELECT ALL vt1.c0, vt0.c1, vt0.c0, vt0.c2, v0.c0 FROM v0, vt0, vt1 GROUP BY vt1.c0, vt0.c1, vt0.c0, vt0.c2, v0.c0 HAVING 'A,\n~yV-' UNION ALL SELECT ALL vt1.c0, vt0.c1, vt0.c0, vt0.c2, v0.c0 FROM v0, vt0, vt1 GROUP BY vt1.c0, vt0.c1, vt0.c0, vt0.c2, v0.c0 HAVING (NOT ('A,\n~yV-')) UNION ALL SELECT vt1.c0, vt0.c1, vt0.c0, vt0.c2, v0.c0 FROM v0, vt0, vt1 GROUP BY vt1.c0, vt0.c1, vt0.c0, vt0.c2, v0.c0 HAVING (('A,\n~yV-') ISNULL);
SELECT ALL vt1.c0, vt0.c1, vt0.c0, vt0.c2, v0.c0 FROM v0, vt0, vt1 GROUP BY vt1.c0, vt0.c1, vt0.c0, vt0.c2, v0.c0;
SELECT ALL vt1.c0, vt0.c1, vt0.c0, vt0.c2, v0.c0 FROM v0, vt0, vt1 GROUP BY vt1.c0, vt0.c1, vt0.c0, vt0.c2, v0.c0 HAVING 'A,\n~yV-' UNION ALL SELECT ALL vt1.c0, vt0.c1, vt0.c0, vt0.c2, v0.c0 FROM v0, vt0, vt1 GROUP BY vt1.c0, vt0.c1, vt0.c0, vt0.c2, v0.c0 HAVING (NOT ('A,\n~yV-')) UNION ALL SELECT vt1.c0, vt0.c1, vt0.c0, vt0.c2, v0.c0 FROM v0, vt0, vt1 GROUP BY vt1.c0, vt0.c1, vt0.c0, vt0.c2, v0.c0 HAVING (('A,\n~yV-') ISNULL);
SELECT ALL vt1.c0, vt0.c1, vt0.c0, vt0.c2, v0.c0 FROM v0, vt0, vt1 GROUP BY vt1.c0, vt0.c1, vt0.c0, vt0.c2, v0.c0;
SELECT v0.c0 FROM v0, vt1, vt2;
SELECT v0.c0 FROM v0, vt1, vt2 WHERE (CAST(v0.c0 COLLATE BINARY AS REAL)) UNION ALL SELECT ALL v0.c0 FROM v0 NOT INDEXED, vt1, vt2 WHERE ((NOT (CAST(v0.c0 COLLATE BINARY AS REAL)))) UNION ALL SELECT v0.c0 FROM v0, vt1, vt2 WHERE (((CAST(v0.c0 COLLATE BINARY AS REAL)) ISNULL));
SELECT v0.c0 FROM v0, vt1, vt2;
SELECT DISTINCT * FROM vt2, vt1;
SELECT DISTINCT * FROM vt2, vt1 WHERE (((vt1.c0)>((((vt1.c0))<>((vt2.c0)))))) UNION SELECT DISTINCT * FROM vt2, vt1 WHERE ((NOT (((vt1.c0)>((((vt1.c0))!=((vt2.c0)))))))) UNION SELECT DISTINCT * FROM vt2, vt1 WHERE (((((vt1.c0)>((((vt1.c0))<>((vt2.c0)))))) ISNULL));
SELECT DISTINCT * FROM vt2, vt1;
SELECT ALL v0.c0 FROM vt1, v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM vt1, v0 WHERE (CAST(CASE vt1.c0  WHEN v0.c0 THEN v0.c0 WHEN vt1.c0 THEN NULL WHEN vt1.c0 THEN x'' END AS TEXT)) GROUP BY v0.c0 UNION SELECT v0.c0 FROM vt1, v0 WHERE ((NOT (CAST(CASE vt1.c0  WHEN v0.c0 THEN v0.c0 WHEN vt1.c0 THEN NULL WHEN vt1.c0 THEN x'' END AS TEXT)))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM vt1, v0 WHERE (((CAST(CASE vt1.c0  WHEN v0.c0 THEN v0.c0 WHEN vt1.c0 THEN NULL WHEN vt1.c0 THEN x'' END AS TEXT)) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM vt1, v0 GROUP BY v0.c0;
SELECT ALL vt2.c0 FROM vt1 FULL OUTER JOIN vt2 ON (~ (CASE vt1.c0  WHEN vt2.c0 THEN vt2.c0 WHEN v0.c0 THEN v0.c0 WHEN vt2.c0 THEN 0X78352656 ELSE vt2.c0 END)) LEFT OUTER JOIN v0 ON ((((NULL)>=(vt1.c0))) BETWEEN (DATE(vt1.c0, vt1.c0, v0.c0, vt2.c0, '1363762645')) AND (CASE WHEN vt1.c0 THEN vt2.c0 WHEN vt2.c0 THEN v0.c0 WHEN vt1.c0 THEN v0.c0 END)) GROUP BY vt2.c0;
SELECT ALL vt1.c0, vt0.c1, vt0.c2, vt0.c0 FROM vt1, vt0;
SELECT ALL vt1.c0, vt0.c1, vt0.c2, vt0.c0 FROM vt1, vt0 WHERE (((LOWER(DISTINCT vt0.c1))||(CASE WHEN '727768236' THEN vt0.c2 END))) UNION ALL SELECT vt1.c0, vt0.c1, vt0.c2, vt0.c0 FROM vt1, vt0 WHERE ((NOT (((LOWER(DISTINCT vt0.c1))||(CASE WHEN '727768236' THEN vt0.c2 END))))) UNION ALL SELECT ALL vt1.c0, vt0.c1, vt0.c2, vt0.c0 FROM vt1, vt0 WHERE (((((LOWER(DISTINCT vt0.c1))||(CASE WHEN '727768236' THEN vt0.c2 END))) ISNULL));
SELECT ALL vt1.c0, vt0.c1, vt0.c2, vt0.c0 FROM vt1, vt0;
SELECT DISTINCT vt0.c0, v0.c0 FROM vt1, vt0 CROSS JOIN vt2 ON (NOT (CASE v0.c0  WHEN '-670810278' THEN vt1.c0 ELSE vt0.c1 END)) CROSS JOIN v0 ON (((vt2.c0 IN ())) NOTNULL);
SELECT DISTINCT vt0.c0, v0.c0 FROM vt1, vt0 CROSS JOIN vt2 ON (NOT (CASE v0.c0  WHEN '-670810278' THEN vt1.c0 ELSE vt0.c1 END)) CROSS JOIN v0 ON (((vt2.c0 IN ())) NOTNULL) WHERE ((((((vt0.c1)LIKE(vt2.c0))))>((LOWER(vt0.c2))))) UNION SELECT DISTINCT vt0.c0, v0.c0 FROM vt1, vt0 CROSS JOIN vt2 ON (NOT (CASE v0.c0  WHEN '-670810278' THEN vt1.c0 ELSE vt0.c1 END)) CROSS JOIN v0 ON (((vt2.c0 IN ())) NOTNULL) WHERE ((NOT ((((((vt0.c1)LIKE(vt2.c0))))>((LOWER(vt0.c2))))))) UNION SELECT DISTINCT vt0.c0, v0.c0 FROM vt1, vt0 CROSS JOIN vt2 ON (NOT (CASE v0.c0  WHEN '-670810278' THEN vt1.c0 ELSE vt0.c1 END)) CROSS JOIN v0 ON (((vt2.c0 IN ())) NOTNULL) WHERE ((((((((vt0.c1)LIKE(vt2.c0))))>((LOWER(vt0.c2))))) ISNULL));
SELECT DISTINCT vt0.c0, v0.c0 FROM vt1, vt0 CROSS JOIN vt2 ON (NOT (CASE v0.c0  WHEN '-670810278' THEN vt1.c0 ELSE vt0.c1 END)) CROSS JOIN v0 ON (((vt2.c0 IN ())) NOTNULL);
SELECT vt1.c0, vt2.c0, vt0.c2, vt0.c0, v0.c0 FROM vt1, vt0, vt2, v0 GROUP BY vt1.c0, vt2.c0, vt0.c2, vt0.c0, v0.c0;
SELECT vt1.c0, vt2.c0, vt0.c2, vt0.c0, v0.c0 FROM vt1, vt0, vt2, v0 WHERE (((((((v0.c0)AND(vt0.c1)))OR(v0.c0))) BETWEEN ((((vt0.c0))=((vt1.c0)))) AND (((((((((vt2.c0)OR(vt2.c0)))OR(vt0.c1)))OR(vt0.c1)))OR(v0.c0))))) GROUP BY vt1.c0, vt2.c0, vt0.c2, vt0.c0, v0.c0 UNION SELECT ALL vt1.c0, vt2.c0, vt0.c2, vt0.c0, v0.c0 FROM vt1, vt0, vt2, v0 WHERE ((NOT (((((((v0.c0)AND(vt0.c1)))OR(v0.c0))) BETWEEN ((((vt0.c0))=((vt1.c0)))) AND (((((((((vt2.c0)OR(vt2.c0)))OR(vt0.c1)))OR(vt0.c1)))OR(v0.c0))))))) GROUP BY vt1.c0, vt2.c0, vt0.c2, vt0.c0, v0.c0 UNION SELECT vt1.c0, vt2.c0, vt0.c2, vt0.c0, v0.c0 FROM vt1, vt0, vt2, v0 WHERE (((((((((v0.c0)AND(vt0.c1)))OR(v0.c0))) BETWEEN ((((vt0.c0))=((vt1.c0)))) AND (((((((((vt2.c0)OR(vt2.c0)))OR(vt0.c1)))OR(vt0.c1)))OR(v0.c0))))) ISNULL)) GROUP BY vt1.c0, vt2.c0, vt0.c2, vt0.c0, v0.c0;
SELECT vt1.c0, vt2.c0, vt0.c2, vt0.c0, v0.c0 FROM vt1, vt0, vt2, v0 GROUP BY vt1.c0, vt2.c0, vt0.c2, vt0.c0, v0.c0;
SELECT ALL vt0.c0, vt0.c1 FROM vt2, vt0 GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c0, vt0.c1 FROM vt2, vt0 GROUP BY vt0.c0, vt0.c1 HAVING MAX('1380913521') UNION ALL SELECT vt0.c0, vt0.c1 FROM vt2, vt0 NOT INDEXED GROUP BY vt0.c0, vt0.c1 HAVING (NOT (MAX('1380913521'))) UNION ALL SELECT vt0.c0, vt0.c1 FROM vt2, vt0 GROUP BY vt0.c0, vt0.c1 HAVING ((MAX('1380913521')) ISNULL);
SELECT ALL vt0.c0, vt0.c1 FROM vt2, vt0 GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c0, vt0.c1 FROM vt2, vt0 GROUP BY vt0.c0, vt0.c1 HAVING MAX('1380913521') UNION ALL SELECT vt0.c0, vt0.c1 FROM vt2, vt0 NOT INDEXED GROUP BY vt0.c0, vt0.c1 HAVING (NOT (MAX('1380913521'))) UNION ALL SELECT vt0.c0, vt0.c1 FROM vt2, vt0 GROUP BY vt0.c0, vt0.c1 HAVING ((MAX('1380913521')) ISNULL);
SELECT ALL vt0.c0, vt0.c1 FROM vt2, vt0 GROUP BY vt0.c0, vt0.c1;
SELECT * FROM vt0, v0, vt1, vt2;
SELECT * FROM vt0, v0, vt1, vt2 WHERE (vt0.c0) UNION ALL SELECT * FROM vt0, v0, vt1, vt2 WHERE ((NOT (vt0.c0))) UNION ALL SELECT * FROM vt0, v0, vt1, vt2 WHERE (((vt0.c0) ISNULL));
SELECT * FROM vt0, v0, vt1, vt2;
SELECT DISTINCT * FROM v0, vt1;
SELECT DISTINCT * FROM v0, vt1 WHERE ((((((vt1.c0) IS FALSE), (- (vt1.c0)), ((v0.c0)!=(v0.c0))))!=((vt1.c0 COLLATE NOCASE, CAST(vt1.c0 AS TEXT), (+ (vt1.c0)))))) UNION SELECT DISTINCT * FROM v0, vt1 WHERE ((NOT ((((((vt1.c0) IS FALSE), (- (vt1.c0)), ((v0.c0)!=(v0.c0))))!=((vt1.c0 COLLATE NOCASE, CAST(vt1.c0 AS TEXT), (+ (vt1.c0)))))))) UNION SELECT DISTINCT * FROM v0, vt1 WHERE ((((((((vt1.c0) IS FALSE), (- (vt1.c0)), ((v0.c0)<>(v0.c0))))!=((vt1.c0 COLLATE NOCASE, CAST(vt1.c0 AS TEXT), (+ (vt1.c0)))))) ISNULL));
SELECT DISTINCT * FROM v0, vt1;
SELECT vt1.c0, vt0.c2, vt0.c1, vt0.c0 FROM vt0, vt2, vt1, v0 GROUP BY vt1.c0, vt0.c2, vt0.c1, vt0.c0;
SELECT ALL vt1.c0, vt0.c2, vt0.c1, vt0.c0 FROM vt0, vt2, vt1, v0 WHERE ((NOT (((vt0.c0)=(vt0.c1))))) GROUP BY vt1.c0, vt0.c2, vt0.c1, vt0.c0 UNION SELECT vt1.c0, vt0.c2, vt0.c1, vt0.c0 FROM vt0, vt2, vt1, v0 WHERE ((NOT ((NOT (((vt0.c0)==(vt0.c1))))))) GROUP BY vt1.c0, vt0.c2, vt0.c1, vt0.c0 UNION SELECT ALL vt1.c0, vt0.c2, vt0.c1, vt0.c0 FROM vt0, vt2, vt1, v0 WHERE ((((NOT (((vt0.c0)=(vt0.c1))))) ISNULL)) GROUP BY vt1.c0, vt0.c2, vt0.c1, vt0.c0;
SELECT vt1.c0, vt0.c2, vt0.c1, vt0.c0 FROM vt0, vt2, vt1, v0 GROUP BY vt1.c0, vt0.c2, vt0.c1, vt0.c0;
SELECT vt1.c0, vt0.c0, vt2.c0, vt0.c2, v0.c0, vt0.c1 FROM vt1, v0, vt2, vt0 GROUP BY vt1.c0, vt0.c0, vt2.c0, vt0.c2, v0.c0, vt0.c1;
SELECT vt1.c0, vt0.c0, vt2.c0, vt0.c2, v0.c0, vt0.c1 FROM vt1, v0, vt2, vt0 GROUP BY vt1.c0, vt0.c0, vt2.c0, vt0.c2, v0.c0, vt0.c1 HAVING (NOT (v0.c0)) UNION ALL SELECT ALL vt1.c0, vt0.c0, vt2.c0, vt0.c2, v0.c0, vt0.c1 FROM vt1, v0, vt2, vt0 GROUP BY vt1.c0, vt0.c0, vt2.c0, vt0.c2, v0.c0, vt0.c1 HAVING (NOT ((NOT (v0.c0)))) UNION ALL SELECT vt1.c0, vt0.c0, vt2.c0, vt0.c2, v0.c0, vt0.c1 FROM vt1, v0, vt2, vt0 GROUP BY vt1.c0, vt0.c0, vt2.c0, vt0.c2, v0.c0, vt0.c1 HAVING (((NOT (v0.c0))) ISNULL);
SELECT vt1.c0, vt0.c0, vt2.c0, vt0.c2, v0.c0, vt0.c1 FROM vt1, v0, vt2, vt0 GROUP BY vt1.c0, vt0.c0, vt2.c0, vt0.c2, v0.c0, vt0.c1;
SELECT vt1.c0, vt0.c0, vt2.c0, vt0.c2, v0.c0, vt0.c1 FROM vt1, v0, vt2, vt0 GROUP BY vt1.c0, vt0.c0, vt2.c0, vt0.c2, v0.c0, vt0.c1 HAVING (NOT (v0.c0)) UNION ALL SELECT ALL vt1.c0, vt0.c0, vt2.c0, vt0.c2, v0.c0, vt0.c1 FROM vt1, v0, vt2, vt0 GROUP BY vt1.c0, vt0.c0, vt2.c0, vt0.c2, v0.c0, vt0.c1 HAVING (NOT ((NOT (v0.c0)))) UNION ALL SELECT vt1.c0, vt0.c0, vt2.c0, vt0.c2, v0.c0, vt0.c1 FROM vt1, v0, vt2, vt0 GROUP BY vt1.c0, vt0.c0, vt2.c0, vt0.c2, v0.c0, vt0.c1 HAVING (((NOT (v0.c0))) ISNULL);
SELECT vt1.c0, vt0.c0, vt2.c0, vt0.c2, v0.c0, vt0.c1 FROM vt1, v0, vt2, vt0 GROUP BY vt1.c0, vt0.c0, vt2.c0, vt0.c2, v0.c0, vt0.c1;
SELECT * FROM v0 LEFT OUTER JOIN vt0 ON NULL FULL OUTER JOIN vt1 ON (((((vt1.c0)) BETWEEN ((vt0.c1)) AND ((vt1.c0))))>(((vt1.c0) BETWEEN (v0.c0) AND (vt1.c0))));
SELECT * FROM v0 LEFT OUTER JOIN vt0 ON NULL FULL OUTER JOIN vt1 ON (((((vt1.c0)) BETWEEN ((vt0.c1)) AND ((vt1.c0))))>(((vt1.c0) BETWEEN (v0.c0) AND (vt1.c0)))) WHERE (0.14834876393031693) UNION ALL SELECT ALL * FROM v0 LEFT OUTER JOIN vt0 ON NULL FULL OUTER JOIN vt1 ON (((((vt1.c0)) BETWEEN ((vt0.c1)) AND ((vt1.c0))))>(((vt1.c0) BETWEEN (v0.c0) AND (vt1.c0)))) WHERE ((NOT (0.14834876393031693))) UNION ALL SELECT ALL * FROM v0 LEFT OUTER JOIN vt0 ON NULL FULL OUTER JOIN vt1 ON (((((vt1.c0)) BETWEEN ((vt0.c1)) AND ((vt1.c0))))>(((vt1.c0) BETWEEN (v0.c0) AND (vt1.c0)))) WHERE (((0.14834876393031693) ISNULL));
SELECT * FROM v0 LEFT OUTER JOIN vt0 ON NULL FULL OUTER JOIN vt1 ON (((((vt1.c0)) BETWEEN ((vt0.c1)) AND ((vt1.c0))))>(((vt1.c0) BETWEEN (v0.c0) AND (vt1.c0))));
SELECT DISTINCT * FROM vt1, v0, vt2, vt0;
SELECT DISTINCT * FROM vt1, v0, vt2, vt0 WHERE (CAST(x'461c' AS NUMERIC)) UNION SELECT DISTINCT * FROM vt1, v0, vt2, vt0 WHERE ((NOT (CAST(x'461c' AS NUMERIC)))) UNION SELECT DISTINCT * FROM vt1, v0 NOT INDEXED, vt2, vt0 WHERE (((CAST(x'461c' AS NUMERIC)) ISNULL));
SELECT DISTINCT * FROM vt1, v0, vt2, vt0;
SELECT v0.c0, vt0.c0, vt1.c0 FROM vt0, vt1, vt2 NATURAL JOIN v0 GROUP BY v0.c0, vt0.c0, vt1.c0;
SELECT ALL v0.c0, vt0.c0, vt1.c0 FROM vt0, vt1, vt2 NATURAL JOIN v0 WHERE ((- (TRIM(DISTINCT vt2.c0)))) GROUP BY v0.c0, vt0.c0, vt1.c0 UNION SELECT v0.c0, vt0.c0, vt1.c0 FROM vt0, vt1, vt2 NATURAL JOIN v0 WHERE ((NOT ((- (TRIM(DISTINCT vt2.c0)))))) GROUP BY v0.c0, vt0.c0, vt1.c0 UNION SELECT ALL v0.c0, vt0.c0, vt1.c0 FROM vt0, vt1, vt2 NATURAL JOIN v0 WHERE ((((- (TRIM(DISTINCT vt2.c0)))) ISNULL)) GROUP BY v0.c0, vt0.c0, vt1.c0;
SELECT v0.c0, vt0.c0, vt1.c0 FROM vt0, vt1, vt2 NATURAL JOIN v0 GROUP BY v0.c0, vt0.c0, vt1.c0;
SELECT vt0.c2 FROM vt0 RIGHT OUTER JOIN v0 ON ((((((vt0.c1)OR(vt0.c1)))OR(vt0.c2))) NOT NULL) GROUP BY vt0.c2;
SELECT vt0.c2 FROM vt0 RIGHT OUTER JOIN v0 ON ((((((vt0.c1)OR(vt0.c1)))OR(vt0.c2))) NOT NULL) GROUP BY vt0.c2 HAVING COUNT(*) UNION ALL SELECT vt0.c2 FROM vt0 RIGHT OUTER JOIN v0 ON ((((((vt0.c1)OR(vt0.c1)))OR(vt0.c2))) NOT NULL) GROUP BY vt0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt0.c2 FROM vt0 RIGHT OUTER JOIN v0 ON ((((((vt0.c1)OR(vt0.c1)))OR(vt0.c2))) NOT NULL) GROUP BY vt0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT vt0.c2 FROM vt0 RIGHT OUTER JOIN v0 ON ((((((vt0.c1)OR(vt0.c1)))OR(vt0.c2))) NOT NULL) GROUP BY vt0.c2;
SELECT vt0.c2 FROM vt0 RIGHT OUTER JOIN v0 ON ((((((vt0.c1)OR(vt0.c1)))OR(vt0.c2))) NOT NULL) GROUP BY vt0.c2 HAVING COUNT(*) UNION ALL SELECT vt0.c2 FROM vt0 RIGHT OUTER JOIN v0 ON ((((((vt0.c1)OR(vt0.c1)))OR(vt0.c2))) NOT NULL) GROUP BY vt0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt0.c2 FROM vt0 RIGHT OUTER JOIN v0 ON ((((((vt0.c1)OR(vt0.c1)))OR(vt0.c2))) NOT NULL) GROUP BY vt0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT vt0.c2 FROM vt0 RIGHT OUTER JOIN v0 ON ((((((vt0.c1)OR(vt0.c1)))OR(vt0.c2))) NOT NULL) GROUP BY vt0.c2;
SELECT ALL vt1.c0, vt0.c0, vt0.c1, vt0.c2 FROM vt0 LEFT OUTER JOIN vt2 ON (((vt0.c0 IN ())) NOT NULL) RIGHT OUTER JOIN vt1 ON (((((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c2)))) NOT BETWEEN (vt0.c2) AND (((vt2.c0)<<(vt1.c0))));
SELECT vt1.c0, vt0.c0, vt0.c1, vt0.c2 FROM vt0 LEFT OUTER JOIN vt2 ON (((vt0.c0 IN ())) NOT NULL) RIGHT OUTER JOIN vt1 ON (((((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c2)))) NOT BETWEEN (vt0.c2) AND (((vt2.c0)<<(vt1.c0)))) WHERE (((CASE WHEN vt0.c0 THEN vt0.c2 END) ISNULL)) UNION ALL SELECT vt1.c0, vt0.c0, vt0.c1, vt0.c2 FROM vt0 LEFT OUTER JOIN vt2 ON (((vt0.c0 IN ())) NOT NULL) RIGHT OUTER JOIN vt1 ON (((((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c2)))) NOT BETWEEN (vt0.c2) AND (((vt2.c0)<<(vt1.c0)))) WHERE ((NOT (((CASE WHEN vt0.c0 THEN vt0.c2 END) ISNULL)))) UNION ALL SELECT ALL vt1.c0, vt0.c0, vt0.c1, vt0.c2 FROM vt0 LEFT OUTER JOIN vt2 ON (((vt0.c0 IN ())) NOT NULL) RIGHT OUTER JOIN vt1 ON (((((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c2)))) NOT BETWEEN (vt0.c2) AND (((vt2.c0)<<(vt1.c0)))) WHERE (((((CASE WHEN vt0.c0 THEN vt0.c2 END) ISNULL)) ISNULL));
SELECT ALL vt1.c0, vt0.c0, vt0.c1, vt0.c2 FROM vt0 LEFT OUTER JOIN vt2 ON (((vt0.c0 IN ())) NOT NULL) RIGHT OUTER JOIN vt1 ON (((((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c2)))) NOT BETWEEN (vt0.c2) AND (((vt2.c0)<<(vt1.c0))));
SELECT DISTINCT vt2.c0 FROM vt2;
SELECT DISTINCT vt2.c0 FROM vt2 WHERE (((((((vt2.c0)OR('0.5103548672556982')))AND(vt2.c0))) BETWEEN (0.6746894935121199) AND (x'b44a'))) UNION SELECT DISTINCT vt2.c0 FROM vt2 WHERE ((NOT (((((((vt2.c0)OR('0.5103548672556982')))AND(vt2.c0))) BETWEEN (0.6746894935121199) AND (x'b44a'))))) UNION SELECT DISTINCT vt2.c0 FROM vt2 WHERE (((((((((vt2.c0)OR('0.5103548672556982')))AND(vt2.c0))) BETWEEN (0.6746894935121199) AND (x'b44a'))) ISNULL));
SELECT DISTINCT vt2.c0 FROM vt2;
SELECT vt2.c0, vt0.c1, vt1.c0 FROM v0, vt2 RIGHT OUTER JOIN vt1 ON ((v0.c0) NOT NULL) LEFT OUTER JOIN vt0 ON (((vt0.c2))<>((((vt0.c1)>(v0.c0))))) GROUP BY vt2.c0, vt0.c1, vt1.c0;
SELECT ALL vt2.c0, vt0.c1, vt1.c0 FROM v0, vt2 RIGHT OUTER JOIN vt1 ON ((v0.c0) NOT NULL) LEFT OUTER JOIN vt0 ON (((vt0.c2))!=((((vt0.c1)>(v0.c0))))) WHERE ((+ (CAST(v0.c0 AS INTEGER)))) GROUP BY vt2.c0, vt0.c1, vt1.c0 UNION SELECT vt2.c0, vt0.c1, vt1.c0 FROM v0, vt2 RIGHT OUTER JOIN vt1 ON ((v0.c0) NOT NULL) LEFT OUTER JOIN vt0 ON (((vt0.c2))<>((((vt0.c1)>(v0.c0))))) WHERE ((NOT ((+ (CAST(v0.c0 AS INTEGER)))))) GROUP BY vt2.c0, vt0.c1, vt1.c0 UNION SELECT vt2.c0, vt0.c1, vt1.c0 FROM v0, vt2 RIGHT OUTER JOIN vt1 ON ((v0.c0) NOT NULL) LEFT OUTER JOIN vt0 ON (((vt0.c2))<>((((vt0.c1)>(v0.c0))))) WHERE ((((+ (CAST(v0.c0 AS INTEGER)))) ISNULL)) GROUP BY vt2.c0, vt0.c1, vt1.c0;
SELECT vt2.c0, vt0.c1, vt1.c0 FROM v0, vt2 RIGHT OUTER JOIN vt1 ON ((v0.c0) NOT NULL) LEFT OUTER JOIN vt0 ON (((vt0.c2))<>((((vt0.c1)>(v0.c0))))) GROUP BY vt2.c0, vt0.c1, vt1.c0;
SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING GROUP_CONCAT(CAST(AVG(vt2.c0) AS NUMERIC)) UNION ALL SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING (NOT (GROUP_CONCAT(CAST(AVG(vt2.c0) AS NUMERIC)))) UNION ALL SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING ((GROUP_CONCAT(CAST(AVG(vt2.c0) AS NUMERIC))) ISNULL);
SELECT ALL * FROM vt0;
SELECT ALL * FROM vt0 WHERE ((NULL IN ())) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT ((NULL IN ())))) UNION ALL SELECT ALL * FROM vt0 NOT INDEXED WHERE ((((NULL IN ())) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT * FROM vt0 FULL OUTER JOIN vt1 ON (+ ((vt0.c2 IN ())));
SELECT DISTINCT * FROM vt0 FULL OUTER JOIN vt1 ON (+ ((vt0.c2 IN ()))) WHERE ((+ (CASE WHEN vt0.c0 THEN vt0.c0 END))) UNION SELECT DISTINCT * FROM vt0 FULL OUTER JOIN vt1 ON (+ ((vt0.c2 IN ()))) WHERE ((NOT ((+ (CASE WHEN vt0.c0 THEN vt0.c0 END))))) UNION SELECT DISTINCT * FROM vt0 FULL OUTER JOIN vt1 ON (+ ((vt0.c2 IN ()))) WHERE ((((+ (CASE WHEN vt0.c0 THEN vt0.c0 END))) ISNULL));
SELECT DISTINCT * FROM vt0 FULL OUTER JOIN vt1 ON (+ ((vt0.c2 IN ())));
SELECT vt0.c1, vt0.c2, vt2.c0 FROM vt0 LEFT OUTER JOIN vt2 ON (- (((vt0.c1) NOT BETWEEN ('-421336144') AND (vt0.c2)))) GROUP BY vt0.c1, vt0.c2, vt2.c0;
SELECT ALL vt0.c1, vt0.c2, vt2.c0 FROM vt0 LEFT OUTER JOIN vt2 ON (- (((vt0.c1) NOT BETWEEN ('-421336144') AND (vt0.c2)))) WHERE (CAST(((x'') BETWEEN (vt2.c0) AND (NULL)) AS BLOB)) GROUP BY vt0.c1, vt0.c2, vt2.c0 UNION SELECT vt0.c1, vt0.c2, vt2.c0 FROM vt0 LEFT OUTER JOIN vt2 ON (- (((vt0.c1) NOT BETWEEN ('-421336144') AND (vt0.c2)))) WHERE ((NOT (CAST(((x'') BETWEEN (vt2.c0) AND (NULL)) AS BLOB)))) GROUP BY vt0.c1, vt0.c2, vt2.c0 UNION SELECT vt0.c1, vt0.c2, vt2.c0 FROM vt0 LEFT OUTER JOIN vt2 ON (- (((vt0.c1) NOT BETWEEN ('-421336144') AND (vt0.c2)))) WHERE (((CAST(((x'') BETWEEN (vt2.c0) AND (NULL)) AS BLOB)) ISNULL)) GROUP BY vt0.c1, vt0.c2, vt2.c0;
SELECT vt0.c1, vt0.c2, vt2.c0 FROM vt0 LEFT OUTER JOIN vt2 ON (- (((vt0.c1) NOT BETWEEN ('-421336144') AND (vt0.c2)))) GROUP BY vt0.c1, vt0.c2, vt2.c0;
SELECT vt0.c2, v0.c0, vt2.c0 FROM v0, vt0, vt2 GROUP BY vt0.c2, v0.c0, vt2.c0;
SELECT ALL vt0.c2, v0.c0, vt2.c0 FROM v0, vt0, vt2 GROUP BY vt0.c2, v0.c0, vt2.c0 HAVING v0.c0 UNION ALL SELECT ALL vt0.c2, v0.c0, vt2.c0 FROM v0, vt0, vt2 GROUP BY vt0.c2, v0.c0, vt2.c0 HAVING (NOT (v0.c0)) UNION ALL SELECT vt0.c2, v0.c0, vt2.c0 FROM v0, vt0, vt2 GROUP BY vt0.c2, v0.c0, vt2.c0 HAVING ((v0.c0) ISNULL);
SELECT vt0.c2, v0.c0, vt2.c0 FROM v0, vt0, vt2 GROUP BY vt0.c2, v0.c0, vt2.c0;
SELECT ALL vt0.c2, v0.c0, vt2.c0 FROM v0, vt0, vt2 GROUP BY vt0.c2, v0.c0, vt2.c0 HAVING v0.c0 UNION ALL SELECT ALL vt0.c2, v0.c0, vt2.c0 FROM v0, vt0, vt2 GROUP BY vt0.c2, v0.c0, vt2.c0 HAVING (NOT (v0.c0)) UNION ALL SELECT vt0.c2, v0.c0, vt2.c0 FROM v0, vt0, vt2 GROUP BY vt0.c2, v0.c0, vt2.c0 HAVING ((v0.c0) ISNULL);
SELECT vt0.c2, v0.c0, vt2.c0 FROM v0, vt0, vt2 GROUP BY vt0.c2, v0.c0, vt2.c0;
SELECT ALL * FROM v0 INNER JOIN vt2 ON x'd7fc' RIGHT OUTER JOIN vt1 ON NULL;
SELECT * FROM v0 INNER JOIN vt2 ON x'd7fc' RIGHT OUTER JOIN vt1 ON NULL WHERE ((- (vt1.c0))) UNION ALL SELECT ALL * FROM v0 INNER JOIN vt2 ON x'd7fc' RIGHT OUTER JOIN vt1 ON NULL WHERE ((NOT ((- (vt1.c0))))) UNION ALL SELECT * FROM v0 INNER JOIN vt2 ON x'd7fc' RIGHT OUTER JOIN vt1 ON NULL WHERE ((((- (vt1.c0))) ISNULL));
SELECT ALL * FROM v0 INNER JOIN vt2 ON x'd7fc' RIGHT OUTER JOIN vt1 ON NULL;
SELECT DISTINCT vt0.c1, vt1.c0 FROM vt1, vt2, v0, vt0;
SELECT DISTINCT vt0.c1, vt1.c0 FROM vt1, vt2, v0, vt0 WHERE ((((v0.c0)+(vt2.c0)) IN (CAST(vt2.c0 AS NUMERIC), CASE v0.c0  WHEN x'e2ac' THEN v0.c0 END))) UNION SELECT DISTINCT vt0.c1, vt1.c0 FROM vt1, vt2, v0, vt0 WHERE ((NOT ((((v0.c0)+(vt2.c0)) IN (CAST(vt2.c0 AS NUMERIC), CASE v0.c0  WHEN x'e2ac' THEN v0.c0 END))))) UNION SELECT DISTINCT vt0.c1, vt1.c0 FROM vt1, vt2, v0, vt0 WHERE ((((((v0.c0)+(vt2.c0)) IN (CAST(vt2.c0 AS NUMERIC), CASE v0.c0  WHEN x'e2ac' THEN v0.c0 END))) ISNULL));
SELECT DISTINCT vt0.c1, vt1.c0 FROM vt1, vt2, v0, vt0;
SELECT v0.c0, vt2.c0 FROM vt0, v0, vt2, vt1 GROUP BY v0.c0, vt2.c0;
SELECT ALL v0.c0, vt2.c0 FROM vt0, v0, vt2, vt1 WHERE (UNLIKELY(((vt0.c2) BETWEEN (vt1.c0) AND (vt2.c0)))) GROUP BY v0.c0, vt2.c0 UNION SELECT ALL v0.c0, vt2.c0 FROM vt0, v0, vt2, vt1 WHERE ((NOT (UNLIKELY(((vt0.c2) BETWEEN (vt1.c0) AND (vt2.c0)))))) GROUP BY v0.c0, vt2.c0 UNION SELECT ALL v0.c0, vt2.c0 FROM vt0, v0, vt2, vt1 WHERE (((UNLIKELY(((vt0.c2) BETWEEN (vt1.c0) AND (vt2.c0)))) ISNULL)) GROUP BY v0.c0, vt2.c0;
SELECT v0.c0, vt2.c0 FROM vt0, v0, vt2, vt1 GROUP BY v0.c0, vt2.c0;
SELECT vt0.c0, vt0.c2, v0.c0, vt2.c0, vt1.c0, vt0.c1 FROM vt0, vt2, v0, vt1 GROUP BY vt0.c0, vt0.c2, v0.c0, vt2.c0, vt1.c0, vt0.c1;
SELECT vt0.c0, vt0.c2, v0.c0, vt2.c0, vt1.c0, vt0.c1 FROM vt0, vt2, v0, vt1 GROUP BY vt0.c0, vt0.c2, v0.c0, vt2.c0, vt1.c0, vt0.c1 HAVING GROUP_CONCAT(MIN(vt0.c0)) UNION ALL SELECT ALL vt0.c0, vt0.c2, v0.c0, vt2.c0, vt1.c0, vt0.c1 FROM vt0, vt2, v0, vt1 GROUP BY vt0.c0, vt0.c2, v0.c0, vt2.c0, vt1.c0, vt0.c1 HAVING (NOT (GROUP_CONCAT(MIN(vt0.c0)))) UNION ALL SELECT vt0.c0, vt0.c2, v0.c0, vt2.c0, vt1.c0, vt0.c1 FROM vt0, vt2, v0, vt1 GROUP BY vt0.c0, vt0.c2, v0.c0, vt2.c0, vt1.c0, vt0.c1 HAVING ((GROUP_CONCAT(MIN(vt0.c0))) ISNULL);
SELECT vt2.c0, vt1.c0 FROM vt1, vt2;
SELECT vt2.c0, vt1.c0 FROM vt1 NOT INDEXED, vt2 WHERE (1.25819335E8) UNION ALL SELECT vt2.c0, vt1.c0 FROM vt1, vt2 WHERE ((NOT (1.25819335E8))) UNION ALL SELECT ALL vt2.c0, vt1.c0 FROM vt1, vt2 WHERE (((1.25819335E8) ISNULL));
SELECT vt2.c0, vt1.c0 FROM vt1, vt2;
SELECT DISTINCT * FROM vt2, v0, vt1, vt0;
SELECT DISTINCT * FROM vt2, v0, vt1, vt0 WHERE ((NOT (((vt2.c0)IS NOT(vt2.c0))))) UNION SELECT DISTINCT * FROM vt2, v0, vt1, vt0 WHERE ((NOT ((NOT (((vt2.c0)IS NOT(vt2.c0))))))) UNION SELECT DISTINCT * FROM vt2, v0, vt1, vt0 WHERE ((((NOT (((vt2.c0)IS NOT(vt2.c0))))) ISNULL));
SELECT DISTINCT * FROM vt2, v0, vt1, vt0;
SELECT vt0.c2, vt2.c0, vt0.c0, vt0.c1, v0.c0 FROM vt0, vt2, v0, vt1 GROUP BY vt0.c2, vt2.c0, vt0.c0, vt0.c1, v0.c0;
SELECT ALL vt0.c2, vt2.c0, vt0.c0, vt0.c1, v0.c0 FROM vt0, vt2, v0, vt1 WHERE (((((NOT ('-1856364841'))))<=((((((v0.c0)OR(vt1.c0)))OR(v0.c0)))))) GROUP BY vt0.c2, vt2.c0, vt0.c0, vt0.c1, v0.c0 UNION SELECT vt0.c2, vt2.c0, vt0.c0, vt0.c1, v0.c0 FROM vt0, vt2, v0, vt1 WHERE ((NOT (((((NOT ('-1856364841'))))<=((((((v0.c0)OR(vt1.c0)))OR(v0.c0)))))))) GROUP BY vt0.c2, vt2.c0, vt0.c0, vt0.c1, v0.c0 UNION SELECT vt0.c2, vt2.c0, vt0.c0, vt0.c1, v0.c0 FROM vt0, vt2, v0, vt1 WHERE (((((((NOT ('-1856364841'))))<=((((((v0.c0)OR(vt1.c0)))OR(v0.c0)))))) ISNULL)) GROUP BY vt0.c2, vt2.c0, vt0.c0, vt0.c1, v0.c0;
SELECT vt0.c2, vt2.c0, vt0.c0, vt0.c1, v0.c0 FROM vt0, vt2, v0, vt1 GROUP BY vt0.c2, vt2.c0, vt0.c0, vt0.c1, v0.c0;
SELECT v0.c0, vt0.c2 FROM vt2, vt0, v0, vt1 GROUP BY v0.c0, vt0.c2;
SELECT v0.c0, vt0.c2 FROM vt2, vt0, v0, vt1 GROUP BY v0.c0, vt0.c2 HAVING ((((COUNT(*))AND(GROUP_CONCAT(vt2.c0))))OR(CAST(TOTAL(GROUP_CONCAT(COUNT(*))) AS TEXT))) UNION ALL SELECT ALL v0.c0, vt0.c2 FROM vt2, vt0, v0, vt1 GROUP BY v0.c0, vt0.c2 HAVING (NOT (((((COUNT(*))AND(GROUP_CONCAT(vt2.c0))))OR(CAST(TOTAL(GROUP_CONCAT(COUNT(*))) AS TEXT))))) UNION ALL SELECT ALL v0.c0, vt0.c2 FROM vt2, vt0, v0, vt1 GROUP BY v0.c0, vt0.c2 HAVING ((((((COUNT(*))AND(GROUP_CONCAT(vt2.c0))))OR(CAST(TOTAL(GROUP_CONCAT(COUNT(*))) AS TEXT)))) ISNULL);
SELECT TOTAL((vt2.c0 IN ())) FROM vt2 ORDER BY CASE (vt2.c0 IN ())  WHEN -1386225064 THEN (((vt2.c0))>((vt2.c0))) WHEN ((vt2.c0) BETWEEN (vt2.c0) AND (vt2.c0)) THEN CASE WHEN vt2.c0 THEN 0.31083209513976584 WHEN vt2.c0 THEN vt2.c0 WHEN vt2.c0 THEN vt2.c0 END WHEN 0X6bde10b THEN CAST(vt2.c0 AS BLOB) ELSE ((vt2.c0) ISNULL) END  NULLS FIRST;
SELECT * FROM vt2;
SELECT * FROM vt2 WHERE ((+ (((0.9272865843377451)OR(vt2.c0))))) UNION ALL SELECT * FROM vt2 WHERE ((NOT ((+ (((0.9272865843377451)OR(vt2.c0))))))) UNION ALL SELECT * FROM vt2 WHERE ((((+ (((0.9272865843377451)OR(vt2.c0))))) ISNULL));
SELECT * FROM vt2;
SELECT DISTINCT vt0.c1, vt0.c2, vt0.c0, vt1.c0 FROM vt1, vt0;
SELECT DISTINCT vt0.c1, vt0.c2, vt0.c0, vt1.c0 FROM vt1, vt0 WHERE (((((vt1.c0)AND((('')<=(vt0.c0)))))OR(vt0.c2))) UNION SELECT DISTINCT vt0.c1, vt0.c2, vt0.c0, vt1.c0 FROM vt1, vt0 WHERE ((NOT (((((vt1.c0)AND((('')<=(vt0.c0)))))OR(vt0.c2))))) UNION SELECT DISTINCT vt0.c1, vt0.c2, vt0.c0, vt1.c0 FROM vt1, vt0 WHERE (((((((vt1.c0)AND((('')<=(vt0.c0)))))OR(vt0.c2))) ISNULL));
SELECT DISTINCT vt0.c1, vt0.c2, vt0.c0, vt1.c0 FROM vt1, vt0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE ((CAST(vt1.c0 AS BLOB) IN ())) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT ((CAST(vt1.c0 AS BLOB) IN ())))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((((CAST(vt1.c0 AS BLOB) IN ())) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING MAX(COUNT(*)) UNION ALL SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING (NOT (MAX(COUNT(*)))) UNION ALL SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING ((MAX(COUNT(*))) ISNULL);
SELECT vt0.c2 FROM vt2, v0 LEFT OUTER JOIN vt0 ON ((((((v0.c0) IS FALSE))OR((NOT (vt0.c1)))))AND((((vt0.c2))<((vt0.c2)))));
SELECT vt0.c2 FROM vt2, v0 LEFT OUTER JOIN vt0 ON ((((((v0.c0) IS FALSE))OR((NOT (vt0.c1)))))AND((((vt0.c2))<((vt0.c2))))) WHERE (vt0.c1) UNION ALL SELECT vt0.c2 FROM vt2, v0 LEFT OUTER JOIN vt0 ON ((((((v0.c0) IS FALSE))OR((NOT (vt0.c1)))))AND((((vt0.c2))<((vt0.c2))))) WHERE ((NOT (vt0.c1))) UNION ALL SELECT vt0.c2 FROM vt2, v0 LEFT OUTER JOIN vt0 ON ((((((v0.c0) IS FALSE))OR((NOT (vt0.c1)))))AND((((vt0.c2))<((vt0.c2))))) WHERE (((vt0.c1) ISNULL));
SELECT vt0.c2 FROM vt2, v0 LEFT OUTER JOIN vt0 ON ((((((v0.c0) IS FALSE))OR((NOT (vt0.c1)))))AND((((vt0.c2))<((vt0.c2)))));
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (CASE ((vt1.c0)+(vt1.c0))  WHEN (vt1.c0 IN ()) THEN ((vt1.c0)||(NULL)) ELSE ((219582915) ISNULL) END) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (CASE ((vt1.c0)+(vt1.c0))  WHEN (vt1.c0 IN ()) THEN ((vt1.c0)||(NULL)) ELSE ((219582915) ISNULL) END))) UNION SELECT DISTINCT * FROM vt1 WHERE (((CASE ((vt1.c0)+(vt1.c0))  WHEN (vt1.c0 IN ()) THEN ((vt1.c0)||(NULL)) ELSE ((219582915) ISNULL) END) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT vt0.c2, vt0.c1 FROM vt0 GROUP BY vt0.c2, vt0.c1;
SELECT ALL vt0.c2, vt0.c1 FROM vt0 WHERE ((~ (((((((((vt0.c2)AND(vt0.c1)))OR(vt0.c0)))OR(vt0.c2)))AND(vt0.c0))))) GROUP BY vt0.c2, vt0.c1 UNION SELECT vt0.c2, vt0.c1 FROM vt0 WHERE ((NOT ((~ (((((((((vt0.c2)AND(vt0.c1)))OR(vt0.c0)))OR(vt0.c2)))AND(vt0.c0))))))) GROUP BY vt0.c2, vt0.c1 UNION SELECT vt0.c2, vt0.c1 FROM vt0 WHERE ((((~ (((((((((vt0.c2)AND(vt0.c1)))OR(vt0.c0)))OR(vt0.c2)))AND(vt0.c0))))) ISNULL)) GROUP BY vt0.c2, vt0.c1;
SELECT vt0.c2, vt0.c1 FROM vt0 GROUP BY vt0.c2, vt0.c1;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING v0.c0 UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (v0.c0)) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((v0.c0) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING v0.c0 UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (v0.c0)) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((v0.c0) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0;
SELECT v0.c0 FROM v0 WHERE (((v0.c0 COLLATE BINARY)OR((0.05701998418504661 IN ())))) UNION ALL SELECT v0.c0 FROM v0 WHERE ((NOT (((v0.c0 COLLATE BINARY)OR((0.05701998418504661 IN ())))))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE (((((v0.c0 COLLATE BINARY)OR((0.05701998418504661 IN ())))) ISNULL));
SELECT ALL v0.c0 FROM v0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((((CASE vt0.c2  WHEN vt0.c1 THEN vt0.c2 END)OR(((vt0.c2)>=(vt0.c1)))))AND(CASE WHEN vt0.c1 THEN vt0.c2 ELSE vt0.c0 END))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((((CASE vt0.c2  WHEN vt0.c1 THEN vt0.c2 END)OR(((vt0.c2)>=(vt0.c1)))))AND(CASE WHEN vt0.c1 THEN vt0.c2 ELSE vt0.c0 END))))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((((CASE vt0.c2  WHEN vt0.c1 THEN vt0.c2 END)OR(((vt0.c2)>=(vt0.c1)))))AND(CASE WHEN vt0.c1 THEN vt0.c2 ELSE vt0.c0 END))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE (((vt1.c0 COLLATE RTRIM) IS TRUE)) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 NOT INDEXED WHERE ((NOT (((vt1.c0 COLLATE RTRIM) IS TRUE)))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE (((((vt1.c0 COLLATE RTRIM) IS TRUE)) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt0.c1, v0.c0, vt0.c0, vt2.c0, vt0.c2, vt1.c0 FROM v0 INNER JOIN vt0 ON ((('-1009854767'))>((vt0.c1 COLLATE RTRIM))) INNER JOIN vt1 ON (- (vt0.c1)) COLLATE BINARY RIGHT OUTER JOIN vt2 ON DATE(NULL, 'V*gD?aNm', vt2.c0) COLLATE NOCASE GROUP BY vt0.c1, v0.c0, vt0.c0, vt2.c0, vt0.c2, vt1.c0;
SELECT ALL vt0.c1, v0.c0, vt0.c0, vt2.c0, vt0.c2, vt1.c0 FROM v0 INNER JOIN vt0 ON ((('-1009854767'))>((vt0.c1 COLLATE RTRIM))) INNER JOIN vt1 ON (- (vt0.c1)) COLLATE BINARY RIGHT OUTER JOIN vt2 ON DATE(NULL, 'V*gD?aNm', vt2.c0) COLLATE NOCASE GROUP BY vt0.c1, v0.c0, vt0.c0, vt2.c0, vt0.c2, vt1.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt0.c1, v0.c0, vt0.c0, vt2.c0, vt0.c2, vt1.c0 FROM v0 INNER JOIN vt0 ON ((('-1009854767'))>((vt0.c1 COLLATE RTRIM))) INNER JOIN vt1 ON (- (vt0.c1)) COLLATE BINARY RIGHT OUTER JOIN vt2 ON DATE(NULL, 'V*gD?aNm', vt2.c0) COLLATE NOCASE GROUP BY vt0.c1, v0.c0, vt0.c0, vt2.c0, vt0.c2, vt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt0.c1, v0.c0, vt0.c0, vt2.c0, vt0.c2, vt1.c0 FROM v0 INNER JOIN vt0 ON ((('-1009854767'))>((vt0.c1 COLLATE RTRIM))) INNER JOIN vt1 ON (- (vt0.c1)) COLLATE BINARY RIGHT OUTER JOIN vt2 ON DATE(NULL, 'V*gD?aNm', vt2.c0) COLLATE NOCASE GROUP BY vt0.c1, v0.c0, vt0.c0, vt2.c0, vt0.c2, vt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt0.c1, v0.c0, vt0.c0, vt2.c0, vt0.c2, vt1.c0 FROM v0 INNER JOIN vt0 ON ((('-1009854767'))>((vt0.c1 COLLATE RTRIM))) INNER JOIN vt1 ON (- (vt0.c1)) COLLATE BINARY RIGHT OUTER JOIN vt2 ON DATE(NULL, 'V*gD?aNm', vt2.c0) COLLATE NOCASE GROUP BY vt0.c1, v0.c0, vt0.c0, vt2.c0, vt0.c2, vt1.c0;
SELECT ALL vt0.c1, v0.c0, vt0.c0, vt2.c0, vt0.c2, vt1.c0 FROM v0 INNER JOIN vt0 ON ((('-1009854767'))>((vt0.c1 COLLATE RTRIM))) INNER JOIN vt1 ON (- (vt0.c1)) COLLATE BINARY RIGHT OUTER JOIN vt2 ON DATE(NULL, 'V*gD?aNm', vt2.c0) COLLATE NOCASE GROUP BY vt0.c1, v0.c0, vt0.c0, vt2.c0, vt0.c2, vt1.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt0.c1, v0.c0, vt0.c0, vt2.c0, vt0.c2, vt1.c0 FROM v0 INNER JOIN vt0 ON ((('-1009854767'))>((vt0.c1 COLLATE RTRIM))) INNER JOIN vt1 ON (- (vt0.c1)) COLLATE BINARY RIGHT OUTER JOIN vt2 ON DATE(NULL, 'V*gD?aNm', vt2.c0) COLLATE NOCASE GROUP BY vt0.c1, v0.c0, vt0.c0, vt2.c0, vt0.c2, vt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt0.c1, v0.c0, vt0.c0, vt2.c0, vt0.c2, vt1.c0 FROM v0 INNER JOIN vt0 ON ((('-1009854767'))>((vt0.c1 COLLATE RTRIM))) INNER JOIN vt1 ON (- (vt0.c1)) COLLATE BINARY RIGHT OUTER JOIN vt2 ON DATE(NULL, 'V*gD?aNm', vt2.c0) COLLATE NOCASE GROUP BY vt0.c1, v0.c0, vt0.c0, vt2.c0, vt0.c2, vt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt0.c1, v0.c0, vt0.c0, vt2.c0, vt0.c2, vt1.c0 FROM v0 INNER JOIN vt0 ON ((('-1009854767'))>((vt0.c1 COLLATE RTRIM))) INNER JOIN vt1 ON (- (vt0.c1)) COLLATE BINARY RIGHT OUTER JOIN vt2 ON DATE(NULL, 'V*gD?aNm', vt2.c0) COLLATE NOCASE GROUP BY vt0.c1, v0.c0, vt0.c0, vt2.c0, vt0.c2, vt1.c0;
SELECT ALL vt2.c0, vt0.c2, vt0.c0 FROM v0 RIGHT OUTER JOIN vt1 ON (((vt2.c0, vt0.c0, vt2.c0)) BETWEEN ((((vt0.c1)||(v0.c0)), vt1.c0 COLLATE BINARY, CASE WHEN vt0.c0 THEN v0.c0 ELSE vt0.c1 END)) AND ((vt0.c2, ((vt0.c1) BETWEEN (vt0.c0) AND (NULL)), CASE NULL  WHEN 0.13708940002967762 THEN vt0.c0 END))) LEFT OUTER JOIN vt0 ON NULL LEFT OUTER JOIN vt2 ON CAST(((((v0.c0)OR(vt0.c2)))OR(0.19290858532101995)) AS NUMERIC);
SELECT DISTINCT * FROM vt2, vt0;
SELECT DISTINCT * FROM vt2, vt0 WHERE (UNLIKELY((vt2.c0 IN ()))) UNION SELECT DISTINCT * FROM vt2, vt0 WHERE ((NOT (UNLIKELY((vt2.c0 IN ()))))) UNION SELECT DISTINCT * FROM vt2, vt0 WHERE (((UNLIKELY((vt2.c0 IN ()))) ISNULL));
SELECT DISTINCT * FROM vt2, vt0;
SELECT v0.c0 FROM v0, vt2, vt1 GROUP BY v0.c0;
SELECT v0.c0 FROM v0, vt2, vt1 WHERE (TRIM(DISTINCT ((v0.c0) NOT BETWEEN (vt2.c0) AND (v0.c0)))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0, vt2, vt1 WHERE ((NOT (TRIM(DISTINCT ((v0.c0) NOT BETWEEN (vt2.c0) AND (v0.c0)))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0, vt2, vt1 WHERE (((TRIM(DISTINCT ((v0.c0) NOT BETWEEN (vt2.c0) AND (v0.c0)))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0, vt2, vt1 GROUP BY v0.c0;
SELECT vt2.c0, vt0.c0, vt0.c2, vt0.c1, v0.c0, vt1.c0 FROM v0, vt1 NOT INDEXED, vt0 NATURAL JOIN vt2 GROUP BY vt2.c0, vt0.c0, vt0.c2, vt0.c1, v0.c0, vt1.c0;
SELECT vt2.c0, vt0.c0, vt0.c2, vt0.c1, v0.c0, vt1.c0 FROM v0, vt1, vt0 NATURAL JOIN vt2 GROUP BY vt2.c0, vt0.c0, vt0.c2, vt0.c1, v0.c0, vt1.c0 HAVING SUM(COUNT(*)) UNION ALL SELECT vt2.c0, vt0.c0, vt0.c2, vt0.c1, v0.c0, vt1.c0 FROM v0, vt1, vt0 NATURAL JOIN vt2 GROUP BY vt2.c0, vt0.c0, vt0.c2, vt0.c1, v0.c0, vt1.c0 HAVING (NOT (SUM(COUNT(*)))) UNION ALL SELECT vt2.c0, vt0.c0, vt0.c2, vt0.c1, v0.c0, vt1.c0 FROM v0, vt1, vt0 NATURAL JOIN vt2 GROUP BY vt2.c0, vt0.c0, vt0.c2, vt0.c1, v0.c0, vt1.c0 HAVING ((SUM(COUNT(*))) ISNULL);
SELECT vt1.c0, vt0.c2, vt0.c0 FROM vt0 RIGHT OUTER JOIN vt1 ON CAST(((vt0.c2)*(vt0.c2)) AS NUMERIC);
SELECT ALL vt1.c0, vt0.c2, vt0.c0 FROM vt0 RIGHT OUTER JOIN vt1 ON CAST(((vt0.c2)*(vt0.c2)) AS NUMERIC) WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1))) ISNULL)) UNION ALL SELECT vt1.c0, vt0.c2, vt0.c0 FROM vt0 RIGHT OUTER JOIN vt1 ON CAST(((vt0.c2)*(vt0.c2)) AS NUMERIC) WHERE ((NOT (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1))) ISNULL)))) UNION ALL SELECT ALL vt1.c0, vt0.c2, vt0.c0 FROM vt0 RIGHT OUTER JOIN vt1 ON CAST(((vt0.c2)*(vt0.c2)) AS NUMERIC) WHERE (((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1))) ISNULL)) ISNULL));
SELECT vt1.c0, vt0.c2, vt0.c0 FROM vt0 RIGHT OUTER JOIN vt1 ON CAST(((vt0.c2)*(vt0.c2)) AS NUMERIC);
SELECT DISTINCT * FROM vt1, vt0;
SELECT DISTINCT * FROM vt1, vt0 WHERE ((+ (vt1.c0 COLLATE NOCASE))) UNION SELECT DISTINCT * FROM vt1, vt0 WHERE ((NOT ((+ (vt1.c0 COLLATE NOCASE))))) UNION SELECT DISTINCT * FROM vt1, vt0 WHERE ((((+ (vt1.c0 COLLATE NOCASE))) ISNULL));
SELECT DISTINCT * FROM vt1, vt0;
SELECT v0.c0, vt0.c0, vt0.c1 FROM v0, vt1, vt0 GROUP BY v0.c0, vt0.c0, vt0.c1;
SELECT ALL v0.c0, vt0.c0, vt0.c1 FROM v0, vt1, vt0 WHERE (CASE WHEN ((((((((((((vt1.c0)AND(vt1.c0)))AND(vt0.c0)))OR(v0.c0)))AND(vt0.c2)))AND('Gq!')))AND(v0.c0)) THEN ((('-1192340418')) BETWEEN ((vt0.c2)) AND ((vt0.c0))) ELSE ((v0.c0)-(vt0.c0)) END) GROUP BY v0.c0, vt0.c0, vt0.c1 UNION SELECT v0.c0, vt0.c0, vt0.c1 FROM v0, vt1, vt0 WHERE ((NOT (CASE WHEN ((((((((((((vt1.c0)AND(vt1.c0)))AND(vt0.c0)))OR(v0.c0)))AND(vt0.c2)))AND('Gq!')))AND(v0.c0)) THEN ((('-1192340418')) BETWEEN ((vt0.c2)) AND ((vt0.c0))) ELSE ((v0.c0)-(vt0.c0)) END))) GROUP BY v0.c0, vt0.c0, vt0.c1 UNION SELECT v0.c0, vt0.c0, vt0.c1 FROM v0, vt1, vt0 WHERE (((CASE WHEN ((((((((((((vt1.c0)AND(vt1.c0)))AND(vt0.c0)))OR(v0.c0)))AND(vt0.c2)))AND('Gq!')))AND(v0.c0)) THEN ((('-1192340418')) BETWEEN ((vt0.c2)) AND ((vt0.c0))) ELSE ((v0.c0)-(vt0.c0)) END) ISNULL)) GROUP BY v0.c0, vt0.c0, vt0.c1;
SELECT v0.c0, vt0.c0, vt0.c1 FROM v0, vt1, vt0 GROUP BY v0.c0, vt0.c0, vt0.c1;
SELECT vt1.c0, vt2.c0, v0.c0 FROM v0, vt1 RIGHT OUTER JOIN vt2 ON SQLITE_COMPILEOPTION_GET(CASE v0.c0  WHEN vt1.c0 THEN vt2.c0 ELSE vt1.c0 END) GROUP BY vt1.c0, vt2.c0, v0.c0;
SELECT ALL vt1.c0, vt2.c0, v0.c0 FROM v0 NOT INDEXED, vt1 RIGHT OUTER JOIN vt2 ON SQLITE_COMPILEOPTION_GET(CASE v0.c0  WHEN vt1.c0 THEN vt2.c0 ELSE vt1.c0 END) GROUP BY vt1.c0, vt2.c0, v0.c0 HAVING GROUP_CONCAT('468085629') UNION ALL SELECT ALL vt1.c0, vt2.c0, v0.c0 FROM v0, vt1 RIGHT OUTER JOIN vt2 ON SQLITE_COMPILEOPTION_GET(CASE v0.c0  WHEN vt1.c0 THEN vt2.c0 ELSE vt1.c0 END) GROUP BY vt1.c0, vt2.c0, v0.c0 HAVING (NOT (GROUP_CONCAT('468085629'))) UNION ALL SELECT ALL vt1.c0, vt2.c0, v0.c0 FROM v0, vt1 RIGHT OUTER JOIN vt2 ON SQLITE_COMPILEOPTION_GET(CASE v0.c0  WHEN vt1.c0 THEN vt2.c0 ELSE vt1.c0 END) GROUP BY vt1.c0, vt2.c0, v0.c0 HAVING ((GROUP_CONCAT('468085629')) ISNULL);
SELECT vt1.c0, vt2.c0, v0.c0 FROM v0, vt1 RIGHT OUTER JOIN vt2 ON SQLITE_COMPILEOPTION_GET(CASE v0.c0  WHEN vt1.c0 THEN vt2.c0 ELSE vt1.c0 END) GROUP BY vt1.c0, vt2.c0, v0.c0;
SELECT ALL vt1.c0, vt2.c0, v0.c0 FROM v0 NOT INDEXED, vt1 RIGHT OUTER JOIN vt2 ON SQLITE_COMPILEOPTION_GET(CASE v0.c0  WHEN vt1.c0 THEN vt2.c0 ELSE vt1.c0 END) GROUP BY vt1.c0, vt2.c0, v0.c0 HAVING GROUP_CONCAT('468085629') UNION ALL SELECT ALL vt1.c0, vt2.c0, v0.c0 FROM v0, vt1 RIGHT OUTER JOIN vt2 ON SQLITE_COMPILEOPTION_GET(CASE v0.c0  WHEN vt1.c0 THEN vt2.c0 ELSE vt1.c0 END) GROUP BY vt1.c0, vt2.c0, v0.c0 HAVING (NOT (GROUP_CONCAT('468085629'))) UNION ALL SELECT ALL vt1.c0, vt2.c0, v0.c0 FROM v0, vt1 RIGHT OUTER JOIN vt2 ON SQLITE_COMPILEOPTION_GET(CASE v0.c0  WHEN vt1.c0 THEN vt2.c0 ELSE vt1.c0 END) GROUP BY vt1.c0, vt2.c0, v0.c0 HAVING ((GROUP_CONCAT('468085629')) ISNULL);
SELECT vt1.c0, vt2.c0, v0.c0 FROM v0, vt1 RIGHT OUTER JOIN vt2 ON SQLITE_COMPILEOPTION_GET(CASE v0.c0  WHEN vt1.c0 THEN vt2.c0 ELSE vt1.c0 END) GROUP BY vt1.c0, vt2.c0, v0.c0;
SELECT ALL vt0.c2 FROM vt2, vt0 INNER JOIN v0 ON CASE WHEN CASE WHEN vt2.c0 THEN vt2.c0 WHEN vt2.c0 THEN vt0.c2 WHEN vt0.c0 THEN vt2.c0 END THEN (NOT (NULL)) ELSE (((('-196162857')OR(vt0.c0)))OR(vt0.c0)) END;
SELECT vt0.c2 FROM vt2, vt0 INNER JOIN v0 ON CASE WHEN CASE WHEN vt2.c0 THEN vt2.c0 WHEN vt2.c0 THEN vt0.c2 WHEN vt0.c0 THEN vt2.c0 END THEN (NOT (NULL)) ELSE (((('-196162857')OR(vt0.c0)))OR(vt0.c0)) END WHERE (vt0.c1) UNION ALL SELECT vt0.c2 FROM vt2 NOT INDEXED, vt0 INNER JOIN v0 ON CASE WHEN CASE WHEN vt2.c0 THEN vt2.c0 WHEN vt2.c0 THEN vt0.c2 WHEN vt0.c0 THEN vt2.c0 END THEN (NOT (NULL)) ELSE (((('-196162857')OR(vt0.c0)))OR(vt0.c0)) END WHERE ((NOT (vt0.c1))) UNION ALL SELECT vt0.c2 FROM vt2, vt0 INNER JOIN v0 ON CASE WHEN CASE WHEN vt2.c0 THEN vt2.c0 WHEN vt2.c0 THEN vt0.c2 WHEN vt0.c0 THEN vt2.c0 END THEN (NOT (NULL)) ELSE (((('-196162857')OR(vt0.c0)))OR(vt0.c0)) END WHERE (((vt0.c1) ISNULL));
SELECT ALL vt0.c2 FROM vt2, vt0 INNER JOIN v0 ON CASE WHEN CASE WHEN vt2.c0 THEN vt2.c0 WHEN vt2.c0 THEN vt0.c2 WHEN vt0.c0 THEN vt2.c0 END THEN (NOT (NULL)) ELSE (((('-196162857')OR(vt0.c0)))OR(vt0.c0)) END;
SELECT DISTINCT vt0.c2, vt0.c1, vt0.c0 FROM vt0, vt2;
SELECT DISTINCT vt0.c2, vt0.c1, vt0.c0 FROM vt0, vt2 WHERE (vt2.c0) UNION SELECT DISTINCT vt0.c2, vt0.c1, vt0.c0 FROM vt0, vt2 WHERE ((NOT (vt2.c0))) UNION SELECT DISTINCT vt0.c2, vt0.c1, vt0.c0 FROM vt0, vt2 WHERE (((vt2.c0) ISNULL));
SELECT DISTINCT vt0.c2, vt0.c1, vt0.c0 FROM vt0, vt2;
SELECT vt0.c1, vt2.c0, vt1.c0, vt0.c2, vt0.c0 FROM vt2, vt0, v0, vt1 GROUP BY vt0.c1, vt2.c0, vt1.c0, vt0.c2, vt0.c0;
SELECT vt0.c1, vt2.c0, vt1.c0, vt0.c2, vt0.c0 FROM vt2, vt0, v0, vt1 WHERE (((((vt1.c0)&(vt2.c0))) NOT BETWEEN ((~ (0.3015883872025986))) AND (CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN 0.058521651621334714 WHEN vt0.c1 THEN vt1.c0 WHEN vt1.c0 THEN vt2.c0 WHEN vt0.c2 THEN vt2.c0 END))) GROUP BY vt0.c1, vt2.c0, vt1.c0, vt0.c2, vt0.c0 UNION SELECT ALL vt0.c1, vt2.c0, vt1.c0, vt0.c2, vt0.c0 FROM vt2, vt0, v0, vt1 WHERE ((NOT (((((vt1.c0)&(vt2.c0))) NOT BETWEEN ((~ (0.3015883872025986))) AND (CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN 0.058521651621334714 WHEN vt0.c1 THEN vt1.c0 WHEN vt1.c0 THEN vt2.c0 WHEN vt0.c2 THEN vt2.c0 END))))) GROUP BY vt0.c1, vt2.c0, vt1.c0, vt0.c2, vt0.c0 UNION SELECT vt0.c1, vt2.c0, vt1.c0, vt0.c2, vt0.c0 FROM vt2, vt0, v0, vt1 WHERE (((((((vt1.c0)&(vt2.c0))) NOT BETWEEN ((~ (0.3015883872025986))) AND (CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN 0.058521651621334714 WHEN vt0.c1 THEN vt1.c0 WHEN vt1.c0 THEN vt2.c0 WHEN vt0.c2 THEN vt2.c0 END))) ISNULL)) GROUP BY vt0.c1, vt2.c0, vt1.c0, vt0.c2, vt0.c0;
SELECT vt0.c1, vt2.c0, vt1.c0, vt0.c2, vt0.c0 FROM vt2, vt0, v0, vt1 GROUP BY vt0.c1, vt2.c0, vt1.c0, vt0.c2, vt0.c0;
SELECT ALL vt2.c0, vt0.c1, vt0.c0, v0.c0 FROM vt0, vt2, v0 GROUP BY vt2.c0, vt0.c1, vt0.c0, v0.c0;
SELECT vt2.c0, vt0.c1, vt0.c0, v0.c0 FROM vt0, vt2, v0 GROUP BY vt2.c0, vt0.c1, vt0.c0, v0.c0 HAVING TOTAL(COUNT(*)) UNION ALL SELECT vt2.c0, vt0.c1, vt0.c0, v0.c0 FROM vt0, vt2, v0 GROUP BY vt2.c0, vt0.c1, vt0.c0, v0.c0 HAVING (NOT (TOTAL(COUNT(*)))) UNION ALL SELECT ALL vt2.c0, vt0.c1, vt0.c0, v0.c0 FROM vt0, vt2, v0 GROUP BY vt2.c0, vt0.c1, vt0.c0, v0.c0 HAVING ((TOTAL(COUNT(*))) ISNULL);
SELECT ALL * FROM vt0, v0, vt2;
SELECT ALL * FROM vt0, v0, vt2 WHERE (vt0.c2) UNION ALL SELECT ALL * FROM vt0, v0, vt2 WHERE ((NOT (vt0.c2))) UNION ALL SELECT * FROM vt0, v0, vt2 WHERE (((vt0.c2) ISNULL));
SELECT ALL * FROM vt0, v0, vt2;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((((vt1.c0) IS TRUE))<(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT (((((vt1.c0) IS TRUE))<(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((((((vt1.c0) IS TRUE))<(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT v0.c0, vt0.c1 FROM vt0, v0, vt2 GROUP BY v0.c0, vt0.c1;
SELECT v0.c0, vt0.c1 FROM vt0, v0, vt2 WHERE (((((v0.c0)/(vt2.c0)))OR(CAST(vt2.c0 AS REAL)))) GROUP BY v0.c0, vt0.c1 UNION SELECT ALL v0.c0, vt0.c1 FROM vt0, v0, vt2 WHERE ((NOT (((((v0.c0)/(vt2.c0)))OR(CAST(vt2.c0 AS REAL)))))) GROUP BY v0.c0, vt0.c1 UNION SELECT ALL v0.c0, vt0.c1 FROM vt0, v0, vt2 WHERE (((((((v0.c0)/(vt2.c0)))OR(CAST(vt2.c0 AS REAL)))) ISNULL)) GROUP BY v0.c0, vt0.c1;
SELECT v0.c0, vt0.c1 FROM vt0, v0, vt2 GROUP BY v0.c0, vt0.c1;
SELECT ALL vt0.c1, vt0.c2, vt0.c0 FROM vt0, vt2 GROUP BY vt0.c1, vt0.c2, vt0.c0;
SELECT vt0.c1, vt0.c2, vt0.c0 FROM vt0, vt2 GROUP BY vt0.c1, vt0.c2, vt0.c0 HAVING TOTAL(TOTAL(MAX(MAX(vt2.c0)))) UNION ALL SELECT vt0.c1, vt0.c2, vt0.c0 FROM vt0, vt2 GROUP BY vt0.c1, vt0.c2, vt0.c0 HAVING (NOT (TOTAL(TOTAL(MAX(MAX(vt2.c0)))))) UNION ALL SELECT vt0.c1, vt0.c2, vt0.c0 FROM vt0, vt2 GROUP BY vt0.c1, vt0.c2, vt0.c0 HAVING ((TOTAL(TOTAL(MAX(MAX(vt2.c0))))) ISNULL);
SELECT ALL SUM((((vt0.c1))!=((CASE WHEN vt1.c0 THEN vt0.c0 END)))) FROM vt1, vt0;
SELECT ALL * FROM vt2;
SELECT ALL * FROM vt2 WHERE (((((MAX(vt2.c0, vt2.c0))AND('-1807979450' COLLATE NOCASE)))AND(((x'')IS NOT(vt2.c0))))) UNION ALL SELECT * FROM vt2 WHERE ((NOT (((((MAX(vt2.c0, vt2.c0))AND('-1807979450' COLLATE NOCASE)))AND(((x'')IS NOT(vt2.c0))))))) UNION ALL SELECT ALL * FROM vt2 WHERE (((((((MAX(vt2.c0, vt2.c0))AND('-1807979450' COLLATE NOCASE)))AND(((x'')IS NOT(vt2.c0))))) ISNULL));
SELECT ALL * FROM vt2;
SELECT DISTINCT * FROM vt1 RIGHT OUTER JOIN vt0 ON CAST(((vt0.c1) IS TRUE) AS NUMERIC) INNER JOIN v0 ON ((vt1.c0) BETWEEN (0.4968292762516623) AND (vt2.c0)) COLLATE RTRIM FULL OUTER JOIN vt2 ON (vt1.c0 IN ()) COLLATE BINARY;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE (vt1.c0) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT (vt1.c0))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE (((vt1.c0) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt0, v0, vt1 CROSS JOIN vt2 ON CAST(v0.c0 COLLATE BINARY AS NUMERIC) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt0, v0, vt1 CROSS JOIN vt2 ON CAST(v0.c0 COLLATE BINARY AS NUMERIC) GROUP BY vt1.c0 HAVING (((vt1.c0)) NOT BETWEEN ((((vt1.c0)>(v0.c0)))) AND ((TOTAL(GROUP_CONCAT(MAX(vt0.c1)))))) UNION ALL SELECT vt1.c0 FROM vt0, v0, vt1 CROSS JOIN vt2 ON CAST(v0.c0 COLLATE BINARY AS NUMERIC) GROUP BY vt1.c0 HAVING (NOT ((((vt1.c0)) NOT BETWEEN ((((vt1.c0)>(v0.c0)))) AND ((TOTAL(GROUP_CONCAT(MAX(vt0.c1)))))))) UNION ALL SELECT ALL vt1.c0 FROM vt0, v0, vt1 CROSS JOIN vt2 ON CAST(v0.c0 COLLATE BINARY AS NUMERIC) GROUP BY vt1.c0 HAVING (((((vt1.c0)) NOT BETWEEN ((((vt1.c0)>(v0.c0)))) AND ((TOTAL(GROUP_CONCAT(MAX(vt0.c1))))))) ISNULL);
SELECT vt0.c0, v0.c0 FROM vt1, v0, vt0;
SELECT vt0.c0, v0.c0 FROM vt1, v0, vt0 WHERE (((CASE vt1.c0  WHEN vt0.c1 THEN vt0.c1 WHEN v0.c0 THEN vt0.c0 WHEN NULL THEN vt0.c1 END)<((v0.c0 IN ())))) UNION ALL SELECT ALL vt0.c0, v0.c0 FROM vt1, v0, vt0 WHERE ((NOT (((CASE vt1.c0  WHEN vt0.c1 THEN vt0.c1 WHEN v0.c0 THEN vt0.c0 WHEN NULL THEN vt0.c1 END)<((v0.c0 IN ())))))) UNION ALL SELECT ALL vt0.c0, v0.c0 FROM vt1, v0, vt0 WHERE (((((CASE vt1.c0  WHEN vt0.c1 THEN vt0.c1 WHEN v0.c0 THEN vt0.c0 WHEN NULL THEN vt0.c1 END)<((v0.c0 IN ())))) ISNULL));
SELECT vt0.c0, v0.c0 FROM vt1, v0, vt0;
SELECT DISTINCT vt0.c2, vt0.c1 FROM v0, vt2, vt1, vt0;
SELECT DISTINCT vt0.c2, vt0.c1 FROM v0, vt2, vt1, vt0 WHERE (((((vt0.c0)IS(vt0.c0)))IS NOT(CASE x''  WHEN vt2.c0 THEN v0.c0 ELSE vt2.c0 END))) UNION SELECT DISTINCT vt0.c2, vt0.c1 FROM v0, vt2, vt1, vt0 WHERE ((NOT (((((vt0.c0)IS(vt0.c0)))IS NOT(CASE x''  WHEN vt2.c0 THEN v0.c0 ELSE vt2.c0 END))))) UNION SELECT DISTINCT vt0.c2, vt0.c1 FROM v0, vt2, vt1, vt0 WHERE (((((((vt0.c0)IS(vt0.c0)))IS NOT(CASE x''  WHEN vt2.c0 THEN v0.c0 ELSE vt2.c0 END))) ISNULL));
SELECT DISTINCT vt0.c2, vt0.c1 FROM v0, vt2, vt1, vt0;
SELECT ALL vt1.c0 FROM vt1, vt2 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1, vt2 WHERE (CAST(vt2.c0 AS REAL)) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1, vt2 WHERE ((NOT (CAST(vt2.c0 AS REAL)))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1, vt2 WHERE (((CAST(vt2.c0 AS REAL)) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1, vt2 GROUP BY vt1.c0;
SELECT vt0.c1, vt0.c0, vt1.c0, vt0.c2 FROM vt0, vt1 GROUP BY vt0.c1, vt0.c0, vt1.c0, vt0.c2;
SELECT vt0.c1, vt0.c0, vt1.c0, vt0.c2 FROM vt0, vt1 GROUP BY vt0.c1, vt0.c0, vt1.c0, vt0.c2 HAVING COUNT(*) UNION ALL SELECT vt0.c1, vt0.c0, vt1.c0, vt0.c2 FROM vt0, vt1 GROUP BY vt0.c1, vt0.c0, vt1.c0, vt0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt0.c1, vt0.c0, vt1.c0, vt0.c2 FROM vt0, vt1 GROUP BY vt0.c1, vt0.c0, vt1.c0, vt0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT vt0.c1, vt0.c0, vt1.c0, vt0.c2 FROM vt0, vt1 GROUP BY vt0.c1, vt0.c0, vt1.c0, vt0.c2;
SELECT vt0.c1, vt0.c0, vt1.c0, vt0.c2 FROM vt0, vt1 GROUP BY vt0.c1, vt0.c0, vt1.c0, vt0.c2 HAVING COUNT(*) UNION ALL SELECT vt0.c1, vt0.c0, vt1.c0, vt0.c2 FROM vt0, vt1 GROUP BY vt0.c1, vt0.c0, vt1.c0, vt0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt0.c1, vt0.c0, vt1.c0, vt0.c2 FROM vt0, vt1 GROUP BY vt0.c1, vt0.c0, vt1.c0, vt0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT vt0.c1, vt0.c0, vt1.c0, vt0.c2 FROM vt0, vt1 GROUP BY vt0.c1, vt0.c0, vt1.c0, vt0.c2;
SELECT ALL * FROM vt2 LEFT OUTER JOIN vt0 ON UNLIKELY(((((vt0.c1)OR(vt0.c1)))OR(vt2.c0))) FULL OUTER JOIN vt1 ON CASE WHEN vt2.c0 THEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c2)) WHEN NULL THEN (((vt0.c0, vt0.c1, vt2.c0))==((vt0.c1, vt0.c1, vt0.c1))) WHEN ((('CB'))>((vt2.c0))) THEN CASE vt0.c2  WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c1 THEN vt0.c2 ELSE vt0.c2 END ELSE CASE vt0.c0  WHEN vt0.c2 THEN vt0.c0 END END;
SELECT ALL * FROM vt2 LEFT OUTER JOIN vt0 ON UNLIKELY(((((vt0.c1)OR(vt0.c1)))OR(vt2.c0))) FULL OUTER JOIN vt1 ON CASE WHEN vt2.c0 THEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c2)) WHEN NULL THEN (((vt0.c0, vt0.c1, vt2.c0))==((vt0.c1, vt0.c1, vt0.c1))) WHEN ((('CB'))>((vt2.c0))) THEN CASE vt0.c2  WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c1 THEN vt0.c2 ELSE vt0.c2 END ELSE CASE vt0.c0  WHEN vt0.c2 THEN vt0.c0 END END WHERE ((((vt2.c0)) NOT BETWEEN (((((vt0.c0))>=((vt0.c2))))) AND ((((vt0.c0) ISNULL))))) UNION ALL SELECT * FROM vt2 LEFT OUTER JOIN vt0 ON UNLIKELY(((((vt0.c1)OR(vt0.c1)))OR(vt2.c0))) FULL OUTER JOIN vt1 ON CASE WHEN vt2.c0 THEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c2)) WHEN NULL THEN (((vt0.c0, vt0.c1, vt2.c0))==((vt0.c1, vt0.c1, vt0.c1))) WHEN ((('CB'))>((vt2.c0))) THEN CASE vt0.c2  WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c1 THEN vt0.c2 ELSE vt0.c2 END ELSE CASE vt0.c0  WHEN vt0.c2 THEN vt0.c0 END END WHERE ((NOT ((((vt2.c0)) NOT BETWEEN (((((vt0.c0))>=((vt0.c2))))) AND ((((vt0.c0) ISNULL))))))) UNION ALL SELECT * FROM vt2 LEFT OUTER JOIN vt0 ON UNLIKELY(((((vt0.c1)OR(vt0.c1)))OR(vt2.c0))) FULL OUTER JOIN vt1 ON CASE WHEN vt2.c0 THEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c2)) WHEN NULL THEN (((vt0.c0, vt0.c1, vt2.c0))=((vt0.c1, vt0.c1, vt0.c1))) WHEN ((('CB'))>((vt2.c0))) THEN CASE vt0.c2  WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c1 THEN vt0.c2 ELSE vt0.c2 END ELSE CASE vt0.c0  WHEN vt0.c2 THEN vt0.c0 END END WHERE ((((((vt2.c0)) NOT BETWEEN (((((vt0.c0))>=((vt0.c2))))) AND ((((vt0.c0) ISNULL))))) ISNULL));
SELECT ALL * FROM vt2 LEFT OUTER JOIN vt0 ON UNLIKELY(((((vt0.c1)OR(vt0.c1)))OR(vt2.c0))) FULL OUTER JOIN vt1 ON CASE WHEN vt2.c0 THEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c2)) WHEN NULL THEN (((vt0.c0, vt0.c1, vt2.c0))==((vt0.c1, vt0.c1, vt0.c1))) WHEN ((('CB'))>((vt2.c0))) THEN CASE vt0.c2  WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c1 THEN vt0.c2 ELSE vt0.c2 END ELSE CASE vt0.c0  WHEN vt0.c2 THEN vt0.c0 END END;
SELECT DISTINCT * FROM vt2, vt0, vt1;
SELECT DISTINCT * FROM vt2, vt0, vt1 WHERE (((((CASE WHEN vt2.c0 THEN vt0.c0 WHEN vt2.c0 THEN vt0.c2 WHEN vt0.c1 THEN vt0.c0 ELSE vt1.c0 END)OR(QUOTE(vt0.c0))))OR(((vt0.c2)&(vt0.c2))))) UNION SELECT DISTINCT * FROM vt2, vt0, vt1 WHERE ((NOT (((((CASE WHEN vt2.c0 THEN vt0.c0 WHEN vt2.c0 THEN vt0.c2 WHEN vt0.c1 THEN vt0.c0 ELSE vt1.c0 END)OR(QUOTE(vt0.c0))))OR(((vt0.c2)&(vt0.c2))))))) UNION SELECT DISTINCT * FROM vt2, vt0, vt1 WHERE (((((((CASE WHEN vt2.c0 THEN vt0.c0 WHEN vt2.c0 THEN vt0.c2 WHEN vt0.c1 THEN vt0.c0 ELSE vt1.c0 END)OR(QUOTE(vt0.c0))))OR(((vt0.c2)&(vt0.c2))))) ISNULL));
SELECT DISTINCT * FROM vt2, vt0, vt1;
SELECT ALL vt0.c0, vt0.c1, vt0.c2, v0.c0, vt2.c0 FROM vt2, v0 RIGHT OUTER JOIN vt0 ON vt0.c1 GROUP BY vt0.c0, vt0.c1, vt0.c2, v0.c0, vt2.c0;
SELECT ALL vt0.c0, vt0.c1, vt0.c2, v0.c0, vt2.c0 FROM vt2, v0 RIGHT OUTER JOIN vt0 ON vt0.c1 WHERE (CAST(v0.c0 AS INTEGER)) GROUP BY vt0.c0, vt0.c1, vt0.c2, v0.c0, vt2.c0 UNION SELECT ALL vt0.c0, vt0.c1, vt0.c2, v0.c0, vt2.c0 FROM vt2, v0 RIGHT OUTER JOIN vt0 ON vt0.c1 WHERE ((NOT (CAST(v0.c0 AS INTEGER)))) GROUP BY vt0.c0, vt0.c1, vt0.c2, v0.c0, vt2.c0 UNION SELECT vt0.c0, vt0.c1, vt0.c2, v0.c0, vt2.c0 FROM vt2, v0 RIGHT OUTER JOIN vt0 ON vt0.c1 WHERE (((CAST(v0.c0 AS INTEGER)) ISNULL)) GROUP BY vt0.c0, vt0.c1, vt0.c2, v0.c0, vt2.c0;
SELECT ALL vt0.c0, vt0.c1, vt0.c2, v0.c0, vt2.c0 FROM vt2, v0 RIGHT OUTER JOIN vt0 ON vt0.c1 GROUP BY vt0.c0, vt0.c1, vt0.c2, v0.c0, vt2.c0;
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING (GROUP_CONCAT(AVG(COUNT(*))) IN (TOTAL(vt0.c1), CAST(vt0.c0 AS REAL))) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING (NOT ((GROUP_CONCAT(AVG(COUNT(*))) IN (TOTAL(vt0.c1), CAST(vt0.c0 AS REAL))))) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING (((GROUP_CONCAT(AVG(COUNT(*))) IN (TOTAL(vt0.c1), CAST(vt0.c0 AS REAL)))) ISNULL);
SELECT * FROM v0, vt2 INNER JOIN vt1 ON ((((vt2.c0) NOT BETWEEN (v0.c0) AND (vt1.c0))) BETWEEN (CASE '\n)'  WHEN vt1.c0 THEN vt1.c0 ELSE vt2.c0 END) AND (((vt2.c0) NOTNULL)));
SELECT * FROM v0, vt2 INNER JOIN vt1 ON ((((vt2.c0) NOT BETWEEN (v0.c0) AND (vt1.c0))) BETWEEN (CASE '\n)'  WHEN vt1.c0 THEN vt1.c0 ELSE vt2.c0 END) AND (((vt2.c0) NOTNULL))) WHERE (((NULL) BETWEEN (((vt2.c0) BETWEEN (v0.c0) AND (v0.c0))) AND (((vt2.c0) IS TRUE)))) UNION ALL SELECT * FROM v0, vt2 INNER JOIN vt1 ON ((((vt2.c0) NOT BETWEEN (v0.c0) AND (vt1.c0))) BETWEEN (CASE '\n)'  WHEN vt1.c0 THEN vt1.c0 ELSE vt2.c0 END) AND (((vt2.c0) NOTNULL))) WHERE ((NOT (((NULL) BETWEEN (((vt2.c0) BETWEEN (v0.c0) AND (v0.c0))) AND (((vt2.c0) IS TRUE)))))) UNION ALL SELECT * FROM v0, vt2 INNER JOIN vt1 ON ((((vt2.c0) NOT BETWEEN (v0.c0) AND (vt1.c0))) BETWEEN (CASE '\n)'  WHEN vt1.c0 THEN vt1.c0 ELSE vt2.c0 END) AND (((vt2.c0) NOTNULL))) WHERE (((((NULL) BETWEEN (((vt2.c0) BETWEEN (v0.c0) AND (v0.c0))) AND (((vt2.c0) IS TRUE)))) ISNULL));
SELECT * FROM v0, vt2 INNER JOIN vt1 ON ((((vt2.c0) NOT BETWEEN (v0.c0) AND (vt1.c0))) BETWEEN (CASE '\n)'  WHEN vt1.c0 THEN vt1.c0 ELSE vt2.c0 END) AND (((vt2.c0) NOTNULL)));
SELECT DISTINCT vt0.c2, v0.c0 FROM v0, vt0;
SELECT DISTINCT vt0.c2, v0.c0 FROM v0, vt0 WHERE (CAST(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) AS BLOB)) UNION SELECT DISTINCT vt0.c2, v0.c0 FROM v0, vt0 WHERE ((NOT (CAST(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) AS BLOB)))) UNION SELECT DISTINCT vt0.c2, v0.c0 FROM v0, vt0 WHERE (((CAST(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) AS BLOB)) ISNULL));
SELECT DISTINCT vt0.c2, v0.c0 FROM v0, vt0;
SELECT vt0.c0 FROM v0 CROSS JOIN vt0 ON ((((v0.c0 COLLATE NOCASE)OR(((vt0.c1) BETWEEN (vt0.c2) AND (v0.c0)))))OR(CASE WHEN vt0.c0 THEN vt0.c0 END)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM v0 CROSS JOIN vt0 ON ((((v0.c0 COLLATE NOCASE)OR(((vt0.c1) BETWEEN (vt0.c2) AND (v0.c0)))))OR(CASE WHEN vt0.c0 THEN vt0.c0 END)) WHERE ((((((vt0.c1)OR(vt0.c2)))AND(vt0.c2)) IN ())) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM v0 CROSS JOIN vt0 ON ((((v0.c0 COLLATE NOCASE)OR(((vt0.c1) BETWEEN (vt0.c2) AND (v0.c0)))))OR(CASE WHEN vt0.c0 THEN vt0.c0 END)) WHERE ((NOT ((((((vt0.c1)OR(vt0.c2)))AND(vt0.c2)) IN ())))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM v0 CROSS JOIN vt0 ON ((((v0.c0 COLLATE NOCASE)OR(((vt0.c1) BETWEEN (vt0.c2) AND (v0.c0)))))OR(CASE WHEN vt0.c0 THEN vt0.c0 END)) WHERE ((((((((vt0.c1)OR(vt0.c2)))AND(vt0.c2)) IN ())) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM v0 CROSS JOIN vt0 ON ((((v0.c0 COLLATE NOCASE)OR(((vt0.c1) BETWEEN (vt0.c2) AND (v0.c0)))))OR(CASE WHEN vt0.c0 THEN vt0.c0 END)) GROUP BY vt0.c0;
SELECT ALL vt2.c0 FROM vt2, vt1 GROUP BY vt2.c0;
SELECT ALL vt2.c0 FROM vt2, vt1 GROUP BY vt2.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt2.c0 FROM vt2, vt1 GROUP BY vt2.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt2.c0 FROM vt2, vt1 GROUP BY vt2.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt2.c0 FROM vt2, vt1 GROUP BY vt2.c0;
SELECT ALL vt2.c0 FROM vt2, vt1 GROUP BY vt2.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt2.c0 FROM vt2, vt1 GROUP BY vt2.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt2.c0 FROM vt2, vt1 GROUP BY vt2.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt2.c0 FROM vt2, vt1 GROUP BY vt2.c0;
SELECT ALL MAX(vt1.c0) FROM v0, vt1, vt0, vt2;
SELECT * FROM vt0, v0, vt1;
SELECT * FROM vt0, v0, vt1 WHERE ((((v0.c0 IN ()))-(vt0.c2 COLLATE RTRIM))) UNION ALL SELECT * FROM vt0, v0, vt1 WHERE ((NOT ((((v0.c0 IN ()))-(vt0.c2 COLLATE RTRIM))))) UNION ALL SELECT ALL * FROM vt0, v0, vt1 WHERE ((((((v0.c0 IN ()))-(vt0.c2 COLLATE RTRIM))) ISNULL));
SELECT * FROM vt0, v0, vt1;
SELECT DISTINCT vt0.c0, vt1.c0, v0.c0, vt0.c2, vt0.c1, vt2.c0 FROM vt1 FULL OUTER JOIN v0 ON ((vt1.c0)>=(vt1.c0)) COLLATE BINARY INNER JOIN vt2 ON SUBSTR(vt1.c0, vt0.c0) COLLATE NOCASE RIGHT OUTER JOIN vt0 ON IFNULL(CAST(v0.c0 AS TEXT), CASE vt0.c1  WHEN vt1.c0 THEN vt0.c1 END);
SELECT ALL vt0.c2, vt0.c0 FROM v0, vt0 GROUP BY vt0.c2, vt0.c0;
SELECT vt0.c2, vt0.c0 FROM v0, vt0 WHERE (x'') GROUP BY vt0.c2, vt0.c0 UNION SELECT vt0.c2, vt0.c0 FROM v0, vt0 WHERE ((NOT (x''))) GROUP BY vt0.c2, vt0.c0 UNION SELECT ALL vt0.c2, vt0.c0 FROM v0, vt0 WHERE (((x'') ISNULL)) GROUP BY vt0.c2, vt0.c0;
SELECT ALL vt0.c2, vt0.c0 FROM v0, vt0 GROUP BY vt0.c2, vt0.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING GROUP_CONCAT(AVG(GROUP_CONCAT(vt1.c0))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (GROUP_CONCAT(AVG(GROUP_CONCAT(vt1.c0))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((GROUP_CONCAT(AVG(GROUP_CONCAT(vt1.c0)))) ISNULL);
SELECT v0.c0 FROM v0;
SELECT v0.c0 FROM v0 WHERE ((((v0.c0 IN (v0.c0))) IS FALSE)) UNION ALL SELECT v0.c0 FROM v0 WHERE ((NOT ((((v0.c0 IN (v0.c0))) IS FALSE)))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE ((((((v0.c0 IN (v0.c0))) IS FALSE)) ISNULL));
SELECT v0.c0 FROM v0;
SELECT DISTINCT * FROM vt1, vt0;
SELECT DISTINCT * FROM vt1, vt0 WHERE (CASE vt0.c1 COLLATE BINARY  WHEN (((NULL, vt0.c1, vt0.c0))>((vt0.c2, 'sH', vt0.c2))) THEN ((vt0.c0) NOTNULL) END) UNION SELECT DISTINCT * FROM vt1, vt0 WHERE ((NOT (CASE vt0.c1 COLLATE BINARY  WHEN (((NULL, vt0.c1, vt0.c0))>((vt0.c2, 'sH', vt0.c2))) THEN ((vt0.c0) NOTNULL) END))) UNION SELECT DISTINCT * FROM vt1, vt0 WHERE (((CASE vt0.c1 COLLATE BINARY  WHEN (((NULL, vt0.c1, vt0.c0))>((vt0.c2, 'sH', vt0.c2))) THEN ((vt0.c0) NOTNULL) END) ISNULL));
SELECT DISTINCT * FROM vt1, vt0;
SELECT ALL vt0.c0, vt1.c0, vt0.c2 FROM v0, vt1, vt0 GROUP BY vt0.c0, vt1.c0, vt0.c2;
SELECT vt0.c0, vt1.c0, vt0.c2 FROM v0, vt1, vt0 WHERE (IFNULL(DISTINCT ((vt1.c0)>=(vt0.c1)), (+ (v0.c0)))) GROUP BY vt0.c0, vt1.c0, vt0.c2 UNION SELECT vt0.c0, vt1.c0, vt0.c2 FROM v0, vt1, vt0 WHERE ((NOT (IFNULL(DISTINCT ((vt1.c0)>=(vt0.c1)), (+ (v0.c0)))))) GROUP BY vt0.c0, vt1.c0, vt0.c2 UNION SELECT vt0.c0, vt1.c0, vt0.c2 FROM v0, vt1, vt0 WHERE (((IFNULL(DISTINCT ((vt1.c0)>=(vt0.c1)), (+ (v0.c0)))) ISNULL)) GROUP BY vt0.c0, vt1.c0, vt0.c2;
SELECT ALL vt0.c0, vt1.c0, vt0.c2 FROM v0, vt1, vt0 GROUP BY vt0.c0, vt1.c0, vt0.c2;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING COUNT(*) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING COUNT(*) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT * FROM v0, vt1;
SELECT * FROM v0, vt1 WHERE ((- (v0.c0 COLLATE BINARY))) UNION ALL SELECT ALL * FROM v0, vt1 WHERE ((NOT ((- (v0.c0 COLLATE BINARY))))) UNION ALL SELECT * FROM v0, vt1 WHERE ((((- (v0.c0 COLLATE BINARY))) ISNULL));
SELECT * FROM v0, vt1;
SELECT DISTINCT * FROM vt0 RIGHT OUTER JOIN vt1 ON CASE ((vt2.c0) NOT NULL)  WHEN (('') BETWEEN (vt0.c2) AND (vt2.c0)) THEN LOWER(vt1.c0) WHEN vt2.c0 COLLATE BINARY THEN (vt0.c1 IN (vt0.c2)) WHEN CAST(vt2.c0 AS NUMERIC) THEN (~ (vt0.c0)) ELSE CASE WHEN vt1.c0 THEN vt2.c0 WHEN vt0.c1 THEN vt2.c0 WHEN -4.933481E8 THEN vt1.c0 ELSE vt0.c2 END END LEFT OUTER JOIN vt2 ON (((vt0.c2, vt0.c2, vt2.c0)) NOT BETWEEN ((((vt1.c0) NOT BETWEEN (vt0.c2) AND (vt2.c0)), ((((vt0.c2)AND(vt2.c0)))AND(vt1.c0)), (- (vt0.c0)))) AND ((json_object(vt0.c1, vt0.c1), ((vt0.c2) IS FALSE), CASE vt0.c0  WHEN vt0.c0 THEN vt2.c0 ELSE vt2.c0 END)));
SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT ALL vt2.c0 FROM vt2 WHERE (CASE vt2.c0  WHEN 0Xffffffffc2be8d79 THEN vt2.c0 END COLLATE RTRIM) GROUP BY vt2.c0 UNION SELECT ALL vt2.c0 FROM vt2 WHERE ((NOT (CASE vt2.c0  WHEN 0Xffffffffc2be8d79 THEN vt2.c0 END COLLATE RTRIM))) GROUP BY vt2.c0 UNION SELECT ALL vt2.c0 FROM vt2 WHERE (((CASE vt2.c0  WHEN 0Xffffffffc2be8d79 THEN vt2.c0 END COLLATE RTRIM) ISNULL)) GROUP BY vt2.c0;
SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT ALL vt0.c0, vt0.c1, vt2.c0 FROM vt0 RIGHT OUTER JOIN v0 ON ((TYPEOF(vt2.c0)) NOT NULL) FULL OUTER JOIN vt1 ON ((vt0.c1) NOTNULL) INNER JOIN vt2 ON (((((- (vt0.c2)))AND(((vt0.c2) NOT NULL))))OR('1333697573')) GROUP BY vt0.c0, vt0.c1, vt2.c0;
SELECT MIN(CAST(SQLITE_SOURCE_ID() AS TEXT)) FROM vt1;
SELECT * FROM v0, vt1, vt0;
SELECT * FROM v0, vt1, vt0 WHERE ((NOT ((vt0.c0 IN ())))) UNION ALL SELECT ALL * FROM v0, vt1, vt0 WHERE ((NOT ((NOT ((vt0.c0 IN ())))))) UNION ALL SELECT * FROM v0, vt1, vt0 WHERE ((((NOT ((vt0.c0 IN ())))) ISNULL));
SELECT * FROM v0, vt1, vt0;
SELECT DISTINCT * FROM vt0, v0, vt2, vt1;
SELECT DISTINCT * FROM vt0, v0, vt2, vt1 NOT INDEXED WHERE (vt0.c1) UNION SELECT DISTINCT * FROM vt0, v0, vt2, vt1 WHERE ((NOT (vt0.c1))) UNION SELECT DISTINCT * FROM vt0, v0, vt2, vt1 WHERE (((vt0.c1) ISNULL));
SELECT DISTINCT * FROM vt0, v0, vt2, vt1;
SELECT ALL vt2.c0, vt1.c0 FROM vt2, vt1 GROUP BY vt2.c0, vt1.c0;
SELECT ALL vt2.c0, vt1.c0 FROM vt2, vt1 WHERE (vt2.c0) GROUP BY vt2.c0, vt1.c0 UNION SELECT ALL vt2.c0, vt1.c0 FROM vt2, vt1 WHERE ((NOT (vt2.c0))) GROUP BY vt2.c0, vt1.c0 UNION SELECT ALL vt2.c0, vt1.c0 FROM vt2, vt1 WHERE (((vt2.c0) ISNULL)) GROUP BY vt2.c0, vt1.c0;
SELECT ALL vt2.c0, vt1.c0 FROM vt2, vt1 GROUP BY vt2.c0, vt1.c0;
SELECT ALL vt1.c0 FROM vt1, v0 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1, v0 GROUP BY vt1.c0 HAVING AVG(MAX(COUNT('.^f7%8J?d'))) UNION ALL SELECT vt1.c0 FROM vt1, v0 GROUP BY vt1.c0 HAVING (NOT (AVG(MAX(COUNT('.^f7%8J?d'))))) UNION ALL SELECT vt1.c0 FROM vt1, v0 GROUP BY vt1.c0 HAVING ((AVG(MAX(COUNT('.^f7%8J?d')))) ISNULL);
SELECT v0.c0, vt0.c0 FROM v0, vt0, vt1;
SELECT v0.c0, vt0.c0 FROM v0, vt0, vt1 WHERE (((ABS(v0.c0))>(x''))) UNION ALL SELECT v0.c0, vt0.c0 FROM v0, vt0, vt1 WHERE ((NOT (((ABS(v0.c0))>(x''))))) UNION ALL SELECT ALL v0.c0, vt0.c0 FROM v0, vt0, vt1 WHERE (((((ABS(v0.c0))>(x''))) ISNULL));
SELECT v0.c0, vt0.c0 FROM v0, vt0, vt1;
SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0, vt2, v0, vt1;
SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0, vt2, v0, vt1 WHERE (CAST(json_array(v0.c0, vt0.c1) AS INTEGER)) UNION SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0, vt2, v0, vt1 WHERE ((NOT (CAST(json_array(v0.c0, vt0.c1) AS INTEGER)))) UNION SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0, vt2, v0, vt1 WHERE (((CAST(json_array(v0.c0, vt0.c1) AS INTEGER)) ISNULL));
SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0, vt2, v0, vt1;
SELECT ALL vt1.c0 FROM vt2 FULL OUTER JOIN vt1 ON ((((((((CAST(vt1.c0 AS NUMERIC))OR(((vt1.c0)<<(vt2.c0)))))AND((((x'')) NOT BETWEEN ((vt2.c0)) AND ((vt1.c0))))))OR((- (vt1.c0)))))OR((((NULL)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt2 FULL OUTER JOIN vt1 ON ((((((((CAST(vt1.c0 AS NUMERIC))OR(((vt1.c0)<<(vt2.c0)))))AND((((x'')) NOT BETWEEN ((vt2.c0)) AND ((vt1.c0))))))OR((- (vt1.c0)))))OR((((NULL)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))) WHERE (((((UPPER(vt1.c0))AND((vt2.c0 IN (vt1.c0)))))OR((((vt2.c0))!=((vt2.c0)))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt2 FULL OUTER JOIN vt1 ON ((((((((CAST(vt1.c0 AS NUMERIC))OR(((vt1.c0)<<(vt2.c0)))))AND((((x'')) NOT BETWEEN ((vt2.c0)) AND ((vt1.c0))))))OR((- (vt1.c0)))))OR((((NULL)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))) WHERE ((NOT (((((UPPER(vt1.c0))AND((vt2.c0 IN (vt1.c0)))))OR((((vt2.c0))!=((vt2.c0)))))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt2 FULL OUTER JOIN vt1 ON ((((((((CAST(vt1.c0 AS NUMERIC))OR(((vt1.c0)<<(vt2.c0)))))AND((((x'')) NOT BETWEEN ((vt2.c0)) AND ((vt1.c0))))))OR((- (vt1.c0)))))OR((((NULL)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))) WHERE (((((((UPPER(vt1.c0))AND((vt2.c0 IN (vt1.c0)))))OR((((vt2.c0))<>((vt2.c0)))))) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt2 FULL OUTER JOIN vt1 ON ((((((((CAST(vt1.c0 AS NUMERIC))OR(((vt1.c0)<<(vt2.c0)))))AND((((x'')) NOT BETWEEN ((vt2.c0)) AND ((vt1.c0))))))OR((- (vt1.c0)))))OR((((NULL)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))) GROUP BY vt1.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING 0.09912540032542794 UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (0.09912540032542794)) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((0.09912540032542794) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING 0.09912540032542794 UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (0.09912540032542794)) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((0.09912540032542794) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT * FROM vt1, v0 NOT INDEXED, vt0, vt2;
SELECT * FROM vt1, v0, vt0, vt2 WHERE (((((((v0.c0) IS TRUE))OR(((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)))))AND(vt2.c0 COLLATE NOCASE))) UNION ALL SELECT * FROM vt1, v0, vt0, vt2 WHERE ((NOT (((((((v0.c0) IS TRUE))OR(((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)))))AND(vt2.c0 COLLATE NOCASE))))) UNION ALL SELECT * FROM vt1, v0, vt0, vt2 WHERE (((((((((v0.c0) IS TRUE))OR(((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)))))AND(vt2.c0 COLLATE NOCASE))) ISNULL));
SELECT * FROM vt1, v0 NOT INDEXED, vt0, vt2;
SELECT DISTINCT vt2.c0 FROM vt2;
SELECT DISTINCT vt2.c0 FROM vt2 WHERE (((((((vt2.c0)AND(vt2.c0)))AND(0.7542515594074916)))AND((vt2.c0 IN ())))) UNION SELECT DISTINCT vt2.c0 FROM vt2 WHERE ((NOT (((((((vt2.c0)AND(vt2.c0)))AND(0.7542515594074916)))AND((vt2.c0 IN ())))))) UNION SELECT DISTINCT vt2.c0 FROM vt2 WHERE (((((((((vt2.c0)AND(vt2.c0)))AND(0.7542515594074916)))AND((vt2.c0 IN ())))) ISNULL));
SELECT DISTINCT vt2.c0 FROM vt2;
SELECT ALL v0.c0, vt0.c0, vt0.c2, vt1.c0, vt0.c1, vt2.c0 FROM vt0, v0, vt2 NATURAL JOIN vt1 GROUP BY v0.c0, vt0.c0, vt0.c2, vt1.c0, vt0.c1, vt2.c0;
SELECT v0.c0, vt0.c0, vt0.c2, vt1.c0, vt0.c1, vt2.c0 FROM vt0, v0, vt2 NATURAL JOIN vt1 WHERE (((((vt2.c0)%(vt1.c0))) NOT BETWEEN (CAST(vt0.c1 AS REAL)) AND (CAST(vt1.c0 AS INTEGER)))) GROUP BY v0.c0, vt0.c0, vt0.c2, vt1.c0, vt0.c1, vt2.c0 UNION SELECT v0.c0, vt0.c0, vt0.c2, vt1.c0, vt0.c1, vt2.c0 FROM vt0, v0, vt2 NATURAL JOIN vt1 WHERE ((NOT (((((vt2.c0)%(vt1.c0))) NOT BETWEEN (CAST(vt0.c1 AS REAL)) AND (CAST(vt1.c0 AS INTEGER)))))) GROUP BY v0.c0, vt0.c0, vt0.c2, vt1.c0, vt0.c1, vt2.c0 UNION SELECT ALL v0.c0, vt0.c0, vt0.c2, vt1.c0, vt0.c1, vt2.c0 FROM vt0, v0, vt2 NOT INDEXED NATURAL JOIN vt1 WHERE (((((((vt2.c0)%(vt1.c0))) NOT BETWEEN (CAST(vt0.c1 AS REAL)) AND (CAST(vt1.c0 AS INTEGER)))) ISNULL)) GROUP BY v0.c0, vt0.c0, vt0.c2, vt1.c0, vt0.c1, vt2.c0;
SELECT ALL v0.c0, vt0.c0, vt0.c2, vt1.c0, vt0.c1, vt2.c0 FROM vt0, v0, vt2 NATURAL JOIN vt1 GROUP BY v0.c0, vt0.c0, vt0.c2, vt1.c0, vt0.c1, vt2.c0;
SELECT v0.c0 FROM v0, vt2 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0, vt2 GROUP BY v0.c0 HAVING CAST(COUNT(MAX(COUNT(v0.c0))) AS TEXT) UNION ALL SELECT ALL v0.c0 FROM v0, vt2 GROUP BY v0.c0 HAVING (NOT (CAST(COUNT(MAX(COUNT(v0.c0))) AS TEXT))) UNION ALL SELECT ALL v0.c0 FROM v0, vt2 GROUP BY v0.c0 HAVING ((CAST(COUNT(MAX(COUNT(v0.c0))) AS TEXT)) ISNULL);
SELECT ALL vt1.c0 FROM vt1;
SELECT vt1.c0 FROM vt1 WHERE ((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN (((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))), ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)), (((vt1.c0))<>((vt1.c0))))) AND ((((vt1.c0) NOT NULL), (+ (vt1.c0)), ((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))))) UNION ALL SELECT vt1.c0 FROM vt1 WHERE ((NOT ((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN (((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))), ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)), (((vt1.c0))<>((vt1.c0))))) AND ((((vt1.c0) NOT NULL), (+ (vt1.c0)), ((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE ((((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN (((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))), ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)), (((vt1.c0))!=((vt1.c0))))) AND ((((vt1.c0) NOT NULL), (+ (vt1.c0)), ((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))))) ISNULL));
SELECT ALL vt1.c0 FROM vt1;
SELECT DISTINCT vt2.c0 FROM vt2;
SELECT DISTINCT vt2.c0 FROM vt2 WHERE (((((vt2.c0) NOT BETWEEN (vt2.c0) AND (vt2.c0)))IS(((vt2.c0)|(vt2.c0))))) UNION SELECT DISTINCT vt2.c0 FROM vt2 WHERE ((NOT (((((vt2.c0) NOT BETWEEN (vt2.c0) AND (vt2.c0)))IS(((vt2.c0)|(vt2.c0))))))) UNION SELECT DISTINCT vt2.c0 FROM vt2 WHERE (((((((vt2.c0) NOT BETWEEN (vt2.c0) AND (vt2.c0)))IS(((vt2.c0)|(vt2.c0))))) ISNULL));
SELECT DISTINCT vt2.c0 FROM vt2;
SELECT ALL vt2.c0 FROM vt2, vt1, v0 GROUP BY vt2.c0;
SELECT ALL vt2.c0 FROM vt2, vt1, v0 WHERE ((LIKELY(vt1.c0) IN ())) GROUP BY vt2.c0 UNION SELECT vt2.c0 FROM vt2, vt1, v0 WHERE ((NOT ((LIKELY(vt1.c0) IN ())))) GROUP BY vt2.c0 UNION SELECT vt2.c0 FROM vt2, vt1, v0 WHERE ((((LIKELY(vt1.c0) IN ())) ISNULL)) GROUP BY vt2.c0;
SELECT ALL vt2.c0 FROM vt2, vt1, v0 GROUP BY vt2.c0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING CAST(((vt0.c1)>=(MAX(MIN(SUM(vt0.c1))))) AS NUMERIC) UNION ALL SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING (NOT (CAST(((vt0.c1)>=(MAX(MIN(SUM(vt0.c1))))) AS NUMERIC))) UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING ((CAST(((vt0.c1)>=(MAX(MIN(SUM(vt0.c1))))) AS NUMERIC)) ISNULL);
SELECT ALL MIN((((((vt2.c0, v0.c0, v0.c0))==((v0.c0, v0.c0, vt2.c0))))<>(x''))) FROM vt0, v0, vt2, vt1;
SELECT vt0.c2, vt0.c1, vt2.c0 FROM vt0, vt1, vt2;
SELECT vt0.c2, vt0.c1, vt2.c0 FROM vt0, vt1, vt2 WHERE ((((vt0.c0, vt0.c1, vt0.c2)) BETWEEN ((CASE vt0.c1  WHEN vt2.c0 THEN vt0.c2 END, (- (vt0.c1)), ((vt2.c0)>>(vt2.c0)))) AND (((('摆2|C鴎Y0TZ')IS(vt0.c1)), ((vt2.c0) NOTNULL), ((NULL) NOT BETWEEN (vt0.c0) AND (vt0.c1)))))) UNION ALL SELECT vt0.c2, vt0.c1, vt2.c0 FROM vt0, vt1, vt2 WHERE ((NOT ((((vt0.c0, vt0.c1, vt0.c2)) BETWEEN ((CASE vt0.c1  WHEN vt2.c0 THEN vt0.c2 END, (- (vt0.c1)), ((vt2.c0)>>(vt2.c0)))) AND (((('摆2|C鴎Y0TZ')IS(vt0.c1)), ((vt2.c0) NOTNULL), ((NULL) NOT BETWEEN (vt0.c0) AND (vt0.c1)))))))) UNION ALL SELECT vt0.c2, vt0.c1, vt2.c0 FROM vt0, vt1, vt2 WHERE ((((((vt0.c0, vt0.c1, vt0.c2)) BETWEEN ((CASE vt0.c1  WHEN vt2.c0 THEN vt0.c2 END, (- (vt0.c1)), ((vt2.c0)>>(vt2.c0)))) AND (((('摆2|C鴎Y0TZ')IS(vt0.c1)), ((vt2.c0) NOTNULL), ((NULL) NOT BETWEEN (vt0.c0) AND (vt0.c1)))))) ISNULL));
SELECT vt0.c2, vt0.c1, vt2.c0 FROM vt0, vt1, vt2;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE ((+ (vt0.c2 COLLATE BINARY))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT ((+ (vt0.c2 COLLATE BINARY))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((((+ (vt0.c2 COLLATE BINARY))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT v0.c0 FROM v0, vt1, vt2 NOT INDEXED GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0, vt1, vt2 WHERE (COALESCE(DISTINCT (v0.c0 IN ()), ((vt1.c0) BETWEEN (vt1.c0) AND (v0.c0)))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0, vt1, vt2 WHERE ((NOT (COALESCE(DISTINCT (v0.c0 IN ()), ((vt1.c0) BETWEEN (vt1.c0) AND (v0.c0)))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0, vt1, vt2 WHERE (((COALESCE(DISTINCT (v0.c0 IN ()), ((vt1.c0) BETWEEN (vt1.c0) AND (v0.c0)))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0, vt1, vt2 NOT INDEXED GROUP BY v0.c0;
SELECT v0.c0 FROM vt1, vt0, vt2, v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM vt1, vt0, vt2, v0 GROUP BY v0.c0 HAVING ((4.62279783E8) BETWEEN (((vt2.c0)OR(vt1.c0))) AND (COUNT(SUM(vt1.c0)))) UNION ALL SELECT ALL v0.c0 FROM vt1, vt0, vt2, v0 GROUP BY v0.c0 HAVING (NOT (((4.62279783E8) BETWEEN (((vt2.c0)OR(vt1.c0))) AND (COUNT(SUM(vt1.c0)))))) UNION ALL SELECT ALL v0.c0 FROM vt1, vt0, vt2, v0 GROUP BY v0.c0 HAVING ((((4.62279783E8) BETWEEN (((vt2.c0)OR(vt1.c0))) AND (COUNT(SUM(vt1.c0))))) ISNULL);
SELECT ALL vt0.c0, vt2.c0 FROM vt2, vt1, v0, vt0;
SELECT ALL vt0.c0, vt2.c0 FROM vt2, vt1, v0, vt0 WHERE ((((+ (v0.c0))) NOT BETWEEN (CAST(x'' AS INTEGER)) AND ((+ (v0.c0))))) UNION ALL SELECT vt0.c0, vt2.c0 FROM vt2, vt1, v0, vt0 WHERE ((NOT ((((+ (v0.c0))) NOT BETWEEN (CAST(x'' AS INTEGER)) AND ((+ (v0.c0))))))) UNION ALL SELECT vt0.c0, vt2.c0 FROM vt2, vt1, v0, vt0 WHERE ((((((+ (v0.c0))) NOT BETWEEN (CAST(x'' AS INTEGER)) AND ((+ (v0.c0))))) ISNULL));
SELECT ALL vt0.c0, vt2.c0 FROM vt2, vt1, v0, vt0;
SELECT DISTINCT vt0.c1 FROM v0, vt2, vt0;
SELECT DISTINCT vt0.c1 FROM v0, vt2, vt0 WHERE (CAST(((vt0.c2) BETWEEN (vt2.c0) AND (x'')) AS REAL)) UNION SELECT DISTINCT vt0.c1 FROM v0, vt2, vt0 WHERE ((NOT (CAST(((vt0.c2) BETWEEN (vt2.c0) AND (x'')) AS REAL)))) UNION SELECT DISTINCT vt0.c1 FROM v0, vt2, vt0 WHERE (((CAST(((vt0.c2) BETWEEN (vt2.c0) AND (x'')) AS REAL)) ISNULL));
SELECT DISTINCT vt0.c1 FROM v0, vt2, vt0;
SELECT ALL vt0.c0, vt1.c0, vt2.c0, v0.c0, vt0.c2 FROM vt0 FULL OUTER JOIN v0 ON (((v0.c0) NOTNULL) IN ()) FULL OUTER JOIN vt1 ON ((CAST(vt1.c0 AS TEXT)) IS FALSE) FULL OUTER JOIN vt2 ON ((vt0.c2) BETWEEN (((vt2.c0)/(vt0.c0))) AND (CASE vt0.c2  WHEN vt2.c0 THEN vt0.c2 ELSE vt0.c1 END)) GROUP BY vt0.c0, vt1.c0, vt2.c0, v0.c0, vt0.c2;
SELECT vt0.c0, vt1.c0, vt2.c0, v0.c0, vt0.c2 FROM vt0 FULL OUTER JOIN v0 ON (((v0.c0) NOTNULL) IN ()) FULL OUTER JOIN vt1 ON ((CAST(vt1.c0 AS TEXT)) IS FALSE) FULL OUTER JOIN vt2 ON ((vt0.c2) BETWEEN (((vt2.c0)/(vt0.c0))) AND (CASE vt0.c2  WHEN vt2.c0 THEN vt0.c2 ELSE vt0.c1 END)) WHERE (('1055237572' IN ())) GROUP BY vt0.c0, vt1.c0, vt2.c0, v0.c0, vt0.c2 UNION SELECT ALL vt0.c0, vt1.c0, vt2.c0, v0.c0, vt0.c2 FROM vt0 FULL OUTER JOIN v0 ON (((v0.c0) NOTNULL) IN ()) FULL OUTER JOIN vt1 ON ((CAST(vt1.c0 AS TEXT)) IS FALSE) FULL OUTER JOIN vt2 ON ((vt0.c2) BETWEEN (((vt2.c0)/(vt0.c0))) AND (CASE vt0.c2  WHEN vt2.c0 THEN vt0.c2 ELSE vt0.c1 END)) WHERE ((NOT (('1055237572' IN ())))) GROUP BY vt0.c0, vt1.c0, vt2.c0, v0.c0, vt0.c2 UNION SELECT ALL vt0.c0, vt1.c0, vt2.c0, v0.c0, vt0.c2 FROM vt0 FULL OUTER JOIN v0 ON (((v0.c0) NOTNULL) IN ()) FULL OUTER JOIN vt1 ON ((CAST(vt1.c0 AS TEXT)) IS FALSE) FULL OUTER JOIN vt2 ON ((vt0.c2) BETWEEN (((vt2.c0)/(vt0.c0))) AND (CASE vt0.c2  WHEN vt2.c0 THEN vt0.c2 ELSE vt0.c1 END)) WHERE (((('1055237572' IN ())) ISNULL)) GROUP BY vt0.c0, vt1.c0, vt2.c0, v0.c0, vt0.c2;
SELECT ALL vt0.c0, vt1.c0, vt2.c0, v0.c0, vt0.c2 FROM vt0 FULL OUTER JOIN v0 ON (((v0.c0) NOTNULL) IN ()) FULL OUTER JOIN vt1 ON ((CAST(vt1.c0 AS TEXT)) IS FALSE) FULL OUTER JOIN vt2 ON ((vt0.c2) BETWEEN (((vt2.c0)/(vt0.c0))) AND (CASE vt0.c2  WHEN vt2.c0 THEN vt0.c2 ELSE vt0.c1 END)) GROUP BY vt0.c0, vt1.c0, vt2.c0, v0.c0, vt0.c2;
SELECT v0.c0 FROM vt0, v0 GROUP BY v0.c0;
SELECT v0.c0 FROM vt0, v0 GROUP BY v0.c0 HAVING MAX(vt0.c2 COLLATE BINARY) UNION ALL SELECT v0.c0 FROM vt0, v0 GROUP BY v0.c0 HAVING (NOT (MAX(vt0.c2 COLLATE BINARY))) UNION ALL SELECT v0.c0 FROM vt0, v0 GROUP BY v0.c0 HAVING ((MAX(vt0.c2 COLLATE BINARY)) ISNULL);
SELECT v0.c0 FROM vt0, v0 GROUP BY v0.c0;
SELECT v0.c0 FROM vt0, v0 GROUP BY v0.c0 HAVING MAX(vt0.c2 COLLATE BINARY) UNION ALL SELECT v0.c0 FROM vt0, v0 GROUP BY v0.c0 HAVING (NOT (MAX(vt0.c2 COLLATE BINARY))) UNION ALL SELECT v0.c0 FROM vt0, v0 GROUP BY v0.c0 HAVING ((MAX(vt0.c2 COLLATE BINARY)) ISNULL);
SELECT v0.c0 FROM vt0, v0 GROUP BY v0.c0;
SELECT ALL * FROM v0, vt1, vt0;
SELECT ALL * FROM v0, vt1, vt0 WHERE (vt0.c1) UNION ALL SELECT * FROM v0, vt1, vt0 WHERE ((NOT (vt0.c1))) UNION ALL SELECT ALL * FROM v0, vt1, vt0 WHERE (((vt0.c1) ISNULL));
SELECT ALL * FROM v0, vt1, vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (x'') AND (vt0.c0))) NOT BETWEEN (vt0.c1 COLLATE NOCASE) AND ((~ (vt0.c1))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((((vt0.c0) NOT BETWEEN (x'') AND (vt0.c0))) NOT BETWEEN (vt0.c1 COLLATE NOCASE) AND ((~ (vt0.c1))))))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((((vt0.c0) NOT BETWEEN (x'') AND (vt0.c0))) NOT BETWEEN (vt0.c1 COLLATE NOCASE) AND ((~ (vt0.c1))))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (((((v0.c0)LIKE(v0.c0))) BETWEEN ('-2005806100') AND (CAST(v0.c0 AS REAL)))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT (((((v0.c0)LIKE(v0.c0))) BETWEEN ('-2005806100') AND (CAST(v0.c0 AS REAL)))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((((((v0.c0)LIKE(v0.c0))) BETWEEN ('-2005806100') AND (CAST(v0.c0 AS REAL)))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL vt0.c0, vt0.c2, vt2.c0, vt1.c0, vt0.c1 FROM vt0, vt1, vt2 RIGHT OUTER JOIN v0 ON COALESCE(DISTINCT '883392679', CASE vt0.c2  WHEN vt0.c1 THEN 0.7597887682377746 END, ((vt0.c0)||(vt0.c0)), ((2144168040) BETWEEN (vt0.c1) AND (vt0.c0))) GROUP BY vt0.c0, vt0.c2, vt2.c0, vt1.c0, vt0.c1;
SELECT vt0.c0, vt0.c2, vt2.c0, vt1.c0, vt0.c1 FROM vt0, vt1, vt2 RIGHT OUTER JOIN v0 ON COALESCE(DISTINCT '883392679', CASE vt0.c2  WHEN vt0.c1 THEN 0.7597887682377746 END, ((vt0.c0)||(vt0.c0)), ((2144168040) BETWEEN (vt0.c1) AND (vt0.c0))) GROUP BY vt0.c0, vt0.c2, vt2.c0, vt1.c0, vt0.c1 HAVING CASE ((((((((MIN(vt0.c0))AND(vt1.c0)))OR(vt0.c1)))AND(v0.c0)))OR(vt0.c1))  WHEN SUM(COUNT(AVG(COUNT(*)))) THEN MAX(COUNT(*)) END UNION ALL SELECT vt0.c0, vt0.c2, vt2.c0, vt1.c0, vt0.c1 FROM vt0, vt1, vt2 RIGHT OUTER JOIN v0 ON COALESCE(DISTINCT '883392679', CASE vt0.c2  WHEN vt0.c1 THEN 0.7597887682377746 END, ((vt0.c0)||(vt0.c0)), ((2144168040) BETWEEN (vt0.c1) AND (vt0.c0))) GROUP BY vt0.c0, vt0.c2, vt2.c0, vt1.c0, vt0.c1 HAVING (NOT (CASE ((((((((MIN(vt0.c0))AND(vt1.c0)))OR(vt0.c1)))AND(v0.c0)))OR(vt0.c1))  WHEN SUM(COUNT(AVG(COUNT(*)))) THEN MAX(COUNT(*)) END)) UNION ALL SELECT ALL vt0.c0, vt0.c2, vt2.c0, vt1.c0, vt0.c1 FROM vt0, vt1, vt2 RIGHT OUTER JOIN v0 ON COALESCE(DISTINCT '883392679', CASE vt0.c2  WHEN vt0.c1 THEN 0.7597887682377746 END, ((vt0.c0)||(vt0.c0)), ((2144168040) BETWEEN (vt0.c1) AND (vt0.c0))) GROUP BY vt0.c0, vt0.c2, vt2.c0, vt1.c0, vt0.c1 HAVING ((CASE ((((((((MIN(vt0.c0))AND(vt1.c0)))OR(vt0.c1)))AND(v0.c0)))OR(vt0.c1))  WHEN SUM(COUNT(AVG(COUNT(*)))) THEN MAX(COUNT(*)) END) ISNULL);
SELECT ALL vt1.c0, vt0.c0 FROM vt2, vt1 RIGHT OUTER JOIN vt0 ON vt2.c0;
SELECT vt1.c0, vt0.c0 FROM vt2, vt1 RIGHT OUTER JOIN vt0 ON vt2.c0 WHERE (((LENGTH(-2.26004809E8))IS(x'a420'))) UNION ALL SELECT ALL vt1.c0, vt0.c0 FROM vt2, vt1 RIGHT OUTER JOIN vt0 ON vt2.c0 WHERE ((NOT (((LENGTH(-2.26004809E8))IS(x'a420'))))) UNION ALL SELECT vt1.c0, vt0.c0 FROM vt2, vt1 RIGHT OUTER JOIN vt0 ON vt2.c0 WHERE (((((LENGTH(-2.26004809E8))IS(x'a420'))) ISNULL));
SELECT ALL vt1.c0, vt0.c0 FROM vt2, vt1 RIGHT OUTER JOIN vt0 ON vt2.c0;
SELECT DISTINCT * FROM vt2;
SELECT DISTINCT * FROM vt2 WHERE (vt2.c0 COLLATE RTRIM) UNION SELECT DISTINCT * FROM vt2 WHERE ((NOT (vt2.c0 COLLATE RTRIM))) UNION SELECT DISTINCT * FROM vt2 WHERE (((vt2.c0 COLLATE RTRIM) ISNULL));
SELECT DISTINCT * FROM vt2;
SELECT ALL vt0.c1 FROM v0, vt1, vt2, vt0 GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM v0, vt1, vt2, vt0 WHERE (((((((vt1.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)))OR((NOT (vt0.c0)))))OR(COALESCE(vt0.c1, 0.2559252113369316, v0.c0, v0.c0)))) GROUP BY vt0.c1 UNION SELECT vt0.c1 FROM v0, vt1, vt2, vt0 WHERE ((NOT (((((((vt1.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)))OR((NOT (vt0.c0)))))OR(COALESCE(vt0.c1, 0.2559252113369316, v0.c0, v0.c0)))))) GROUP BY vt0.c1 UNION SELECT vt0.c1 FROM v0, vt1, vt2, vt0 WHERE (((((((((vt1.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)))OR((NOT (vt0.c0)))))OR(COALESCE(vt0.c1, 0.2559252113369316, v0.c0, v0.c0)))) ISNULL)) GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM v0, vt1, vt2, vt0 GROUP BY vt0.c1;
SELECT vt0.c0, vt0.c1, vt0.c2, v0.c0 FROM v0 CROSS JOIN vt0 ON vt0.c1 GROUP BY vt0.c0, vt0.c1, vt0.c2, v0.c0;
SELECT ALL vt0.c0, vt0.c1, vt0.c2, v0.c0 FROM v0 CROSS JOIN vt0 ON vt0.c1 GROUP BY vt0.c0, vt0.c1, vt0.c2, v0.c0 HAVING CAST((v0.c0 IN ()) AS TEXT) UNION ALL SELECT ALL vt0.c0, vt0.c1, vt0.c2, v0.c0 FROM v0 CROSS JOIN vt0 ON vt0.c1 GROUP BY vt0.c0, vt0.c1, vt0.c2, v0.c0 HAVING (NOT (CAST((v0.c0 IN ()) AS TEXT))) UNION ALL SELECT ALL vt0.c0, vt0.c1, vt0.c2, v0.c0 FROM v0 CROSS JOIN vt0 ON vt0.c1 GROUP BY vt0.c0, vt0.c1, vt0.c2, v0.c0 HAVING ((CAST((v0.c0 IN ()) AS TEXT)) ISNULL);
SELECT vt0.c0, vt0.c1, vt0.c2, v0.c0 FROM v0 CROSS JOIN vt0 ON vt0.c1 GROUP BY vt0.c0, vt0.c1, vt0.c2, v0.c0;
SELECT ALL vt0.c0, vt0.c1, vt0.c2, v0.c0 FROM v0 CROSS JOIN vt0 ON vt0.c1 GROUP BY vt0.c0, vt0.c1, vt0.c2, v0.c0 HAVING CAST((v0.c0 IN ()) AS TEXT) UNION ALL SELECT ALL vt0.c0, vt0.c1, vt0.c2, v0.c0 FROM v0 CROSS JOIN vt0 ON vt0.c1 GROUP BY vt0.c0, vt0.c1, vt0.c2, v0.c0 HAVING (NOT (CAST((v0.c0 IN ()) AS TEXT))) UNION ALL SELECT ALL vt0.c0, vt0.c1, vt0.c2, v0.c0 FROM v0 CROSS JOIN vt0 ON vt0.c1 GROUP BY vt0.c0, vt0.c1, vt0.c2, v0.c0 HAVING ((CAST((v0.c0 IN ()) AS TEXT)) ISNULL);
SELECT vt0.c0, vt0.c1, vt0.c2, v0.c0 FROM v0 CROSS JOIN vt0 ON vt0.c1 GROUP BY vt0.c0, vt0.c1, vt0.c2, v0.c0;
SELECT ALL vt1.c0, vt0.c1, vt0.c2, v0.c0, vt2.c0, vt0.c0 FROM v0, vt0, vt1, vt2;
SELECT vt1.c0, vt0.c1, vt0.c2, v0.c0, vt2.c0, vt0.c0 FROM v0, vt0, vt1, vt2 WHERE ((((((NULL, vt1.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt2.c0, v0.c0)) AND ((vt0.c0, 0.19043381062705833, vt2.c0)))) NOT BETWEEN (((vt0.c1) ISNULL)) AND (((vt1.c0) IS FALSE)))) UNION ALL SELECT ALL vt1.c0, vt0.c1, vt0.c2, v0.c0, vt2.c0, vt0.c0 FROM v0, vt0, vt1, vt2 WHERE ((NOT ((((((NULL, vt1.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt2.c0, v0.c0)) AND ((vt0.c0, 0.19043381062705833, vt2.c0)))) NOT BETWEEN (((vt0.c1) ISNULL)) AND (((vt1.c0) IS FALSE)))))) UNION ALL SELECT vt1.c0, vt0.c1, vt0.c2, v0.c0, vt2.c0, vt0.c0 FROM v0, vt0, vt1, vt2 WHERE ((((((((NULL, vt1.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt2.c0, v0.c0)) AND ((vt0.c0, 0.19043381062705833, vt2.c0)))) NOT BETWEEN (((vt0.c1) ISNULL)) AND (((vt1.c0) IS FALSE)))) ISNULL));
SELECT ALL vt1.c0, vt0.c1, vt0.c2, v0.c0, vt2.c0, vt0.c0 FROM v0, vt0, vt1, vt2;
SELECT DISTINCT * FROM vt2;
SELECT DISTINCT * FROM vt2 WHERE (CAST(TRIM(vt2.c0, vt2.c0) AS NUMERIC)) UNION SELECT DISTINCT * FROM vt2 WHERE ((NOT (CAST(TRIM(vt2.c0, vt2.c0) AS NUMERIC)))) UNION SELECT DISTINCT * FROM vt2 WHERE (((CAST(TRIM(vt2.c0, vt2.c0) AS NUMERIC)) ISNULL));
SELECT DISTINCT * FROM vt2;
SELECT ALL vt2.c0, vt1.c0 FROM vt1, vt2 GROUP BY vt2.c0, vt1.c0;
SELECT vt2.c0, vt1.c0 FROM vt1, vt2 WHERE (CAST('1206820166' AS INTEGER)) GROUP BY vt2.c0, vt1.c0 UNION SELECT vt2.c0, vt1.c0 FROM vt1, vt2 WHERE ((NOT (CAST('1206820166' AS INTEGER)))) GROUP BY vt2.c0, vt1.c0 UNION SELECT vt2.c0, vt1.c0 FROM vt1, vt2 WHERE (((CAST('1206820166' AS INTEGER)) ISNULL)) GROUP BY vt2.c0, vt1.c0;
SELECT ALL vt2.c0, vt1.c0 FROM vt1, vt2 GROUP BY vt2.c0, vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((((vt1.c0)>=(vt1.c0)))AND(COUNT(vt1.c0))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (((((vt1.c0)>=(vt1.c0)))AND(COUNT(vt1.c0))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((((((vt1.c0)>=(vt1.c0)))AND(COUNT(vt1.c0)))) ISNULL);
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((((vt1.c0)>=(vt1.c0)))AND(COUNT(vt1.c0))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (((((vt1.c0)>=(vt1.c0)))AND(COUNT(vt1.c0))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((((((vt1.c0)>=(vt1.c0)))AND(COUNT(vt1.c0)))) ISNULL);
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT * FROM vt0, vt2, v0;
SELECT * FROM vt0, vt2, v0 WHERE (((((((vt2.c0)>(vt0.c1)))OR(v0.c0 COLLATE NOCASE)))AND(((vt0.c2) IS TRUE)))) UNION ALL SELECT * FROM vt0, vt2, v0 WHERE ((NOT (((((((vt2.c0)>(vt0.c1)))OR(v0.c0 COLLATE NOCASE)))AND(((vt0.c2) IS TRUE)))))) UNION ALL SELECT ALL * FROM vt0, vt2, v0 WHERE (((((((((vt2.c0)>(vt0.c1)))OR(v0.c0 COLLATE NOCASE)))AND(((vt0.c2) IS TRUE)))) ISNULL));
SELECT * FROM vt0, vt2, v0;
SELECT DISTINCT * FROM vt2;
SELECT DISTINCT * FROM vt2 WHERE ((((vt2.c0)) NOT BETWEEN ((LIKELY(DISTINCT vt2.c0))) AND ((vt2.c0 COLLATE RTRIM)))) UNION SELECT DISTINCT * FROM vt2 WHERE ((NOT ((((vt2.c0)) NOT BETWEEN ((LIKELY(DISTINCT vt2.c0))) AND ((vt2.c0 COLLATE RTRIM)))))) UNION SELECT DISTINCT * FROM vt2 WHERE ((((((vt2.c0)) NOT BETWEEN ((LIKELY(DISTINCT vt2.c0))) AND ((vt2.c0 COLLATE RTRIM)))) ISNULL));
SELECT DISTINCT * FROM vt2;
SELECT vt0.c2 FROM vt0, vt2, v0 GROUP BY vt0.c2;
SELECT vt0.c2 FROM vt0, vt2, v0 WHERE (v0.c0) GROUP BY vt0.c2 UNION SELECT vt0.c2 FROM vt0, vt2, v0 WHERE ((NOT (v0.c0))) GROUP BY vt0.c2 UNION SELECT vt0.c2 FROM vt0, vt2, v0 WHERE (((v0.c0) ISNULL)) GROUP BY vt0.c2;
SELECT vt0.c2 FROM vt0, vt2, v0 GROUP BY vt0.c2;
SELECT ALL vt1.c0 FROM v0, vt1, vt2 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM v0, vt1, vt2 GROUP BY vt1.c0 HAVING SUM(((COUNT(*))GLOB(SUM(MIN(TOTAL(v0.c0)))))) UNION ALL SELECT vt1.c0 FROM v0, vt1, vt2 GROUP BY vt1.c0 HAVING (NOT (SUM(((COUNT(*))GLOB(SUM(MIN(TOTAL(v0.c0)))))))) UNION ALL SELECT vt1.c0 FROM v0, vt1, vt2 GROUP BY vt1.c0 HAVING ((SUM(((COUNT(*))GLOB(SUM(MIN(TOTAL(v0.c0))))))) ISNULL);
SELECT ALL vt0.c0 FROM v0, vt0;
SELECT ALL vt0.c0 FROM v0, vt0 WHERE ((+ ((('-1727256285') NOT BETWEEN (vt0.c1) AND (v0.c0))))) UNION ALL SELECT ALL vt0.c0 FROM v0, vt0 WHERE ((NOT ((+ ((('-1727256285') NOT BETWEEN (vt0.c1) AND (v0.c0))))))) UNION ALL SELECT vt0.c0 FROM v0, vt0 WHERE ((((+ ((('-1727256285') NOT BETWEEN (vt0.c1) AND (v0.c0))))) ISNULL));
SELECT ALL vt0.c0 FROM v0, vt0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 NOT INDEXED WHERE (((((v0.c0)<<(v0.c0)))!=(((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (((((v0.c0)<<(v0.c0)))<>(((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))))) UNION SELECT DISTINCT * FROM v0 WHERE (((((((v0.c0)<<(v0.c0)))<>(((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT ALL vt2.c0 FROM vt2 WHERE (((((((vt2.c0)AND(vt2.c0)))AND(vt2.c0)))OR(((vt2.c0) NOTNULL)))) GROUP BY vt2.c0 UNION SELECT vt2.c0 FROM vt2 WHERE ((NOT (((((((vt2.c0)AND(vt2.c0)))AND(vt2.c0)))OR(((vt2.c0) NOTNULL)))))) GROUP BY vt2.c0 UNION SELECT vt2.c0 FROM vt2 WHERE (((((((((vt2.c0)AND(vt2.c0)))AND(vt2.c0)))OR(((vt2.c0) NOTNULL)))) ISNULL)) GROUP BY vt2.c0;
SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT v0.c0, vt1.c0 FROM vt1, v0 GROUP BY v0.c0, vt1.c0;
SELECT v0.c0, vt1.c0 FROM vt1, v0 GROUP BY v0.c0, vt1.c0 HAVING COUNT(TOTAL(vt1.c0)) UNION ALL SELECT ALL v0.c0, vt1.c0 FROM vt1, v0 GROUP BY v0.c0, vt1.c0 HAVING (NOT (COUNT(TOTAL(vt1.c0)))) UNION ALL SELECT ALL v0.c0, vt1.c0 FROM vt1, v0 GROUP BY v0.c0, vt1.c0 HAVING ((COUNT(TOTAL(vt1.c0))) ISNULL);
SELECT ALL v0.c0, vt2.c0 FROM vt2, v0;
SELECT v0.c0, vt2.c0 FROM vt2, v0 WHERE (CASE WHEN (v0.c0 IN ()) THEN (v0.c0 IN ()) END) UNION ALL SELECT ALL v0.c0, vt2.c0 FROM vt2, v0 WHERE ((NOT (CASE WHEN (v0.c0 IN ()) THEN (v0.c0 IN ()) END))) UNION ALL SELECT ALL v0.c0, vt2.c0 FROM vt2, v0 WHERE (((CASE WHEN (v0.c0 IN ()) THEN (v0.c0 IN ()) END) ISNULL));
SELECT ALL v0.c0, vt2.c0 FROM vt2, v0;
SELECT DISTINCT vt0.c2, vt2.c0, vt0.c0, v0.c0, vt1.c0, vt0.c1 FROM vt2, vt1, v0 RIGHT OUTER JOIN vt0 ON ((((vt0.c2)IS(vt0.c2)))==(vt0.c0 COLLATE NOCASE));
SELECT DISTINCT vt0.c2, vt2.c0, vt0.c0, v0.c0, vt1.c0, vt0.c1 FROM vt2, vt1, v0 RIGHT OUTER JOIN vt0 ON ((((vt0.c2)IS(vt0.c2)))=(vt0.c0 COLLATE NOCASE)) WHERE (((v0.c0 COLLATE BINARY) NOT NULL)) UNION SELECT DISTINCT vt0.c2, vt2.c0, vt0.c0, v0.c0, vt1.c0, vt0.c1 FROM vt2, vt1, v0 RIGHT OUTER JOIN vt0 ON ((((vt0.c2)IS(vt0.c2)))==(vt0.c0 COLLATE NOCASE)) WHERE ((NOT (((v0.c0 COLLATE BINARY) NOT NULL)))) UNION SELECT DISTINCT vt0.c2, vt2.c0, vt0.c0, v0.c0, vt1.c0, vt0.c1 FROM vt2 NOT INDEXED, vt1, v0 RIGHT OUTER JOIN vt0 ON ((((vt0.c2)IS(vt0.c2)))==(vt0.c0 COLLATE NOCASE)) WHERE (((((v0.c0 COLLATE BINARY) NOT NULL)) ISNULL));
SELECT DISTINCT vt0.c2, vt2.c0, vt0.c0, v0.c0, vt1.c0, vt0.c1 FROM vt2, vt1, v0 RIGHT OUTER JOIN vt0 ON ((((vt0.c2)IS(vt0.c2)))==(vt0.c0 COLLATE NOCASE));
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (v0.c0) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT (v0.c0))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((v0.c0) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING MIN(CAST(COUNT(v0.c0) AS NUMERIC)) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (MIN(CAST(COUNT(v0.c0) AS NUMERIC)))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((MIN(CAST(COUNT(v0.c0) AS NUMERIC))) ISNULL);
SELECT * FROM vt2, vt0, vt1;
SELECT * FROM vt2, vt0, vt1 WHERE (0.13980903799722533) UNION ALL SELECT ALL * FROM vt2, vt0, vt1 WHERE ((NOT (0.13980903799722533))) UNION ALL SELECT * FROM vt2, vt0, vt1 WHERE (((0.13980903799722533) ISNULL));
SELECT * FROM vt2, vt0, vt1;
SELECT DISTINCT v0.c0, vt1.c0 FROM v0, vt1;
SELECT DISTINCT v0.c0, vt1.c0 FROM v0, vt1 WHERE ((((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))))%((v0.c0 IN ())))) UNION SELECT DISTINCT v0.c0, vt1.c0 FROM v0, vt1 WHERE ((NOT ((((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))))%((v0.c0 IN ())))))) UNION SELECT DISTINCT v0.c0, vt1.c0 FROM v0, vt1 WHERE ((((((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))))%((v0.c0 IN ())))) ISNULL));
SELECT DISTINCT v0.c0, vt1.c0 FROM v0, vt1;
SELECT ALL v0.c0, vt2.c0, vt0.c0 FROM v0, vt1 RIGHT OUTER JOIN vt0 ON SQLITE_COMPILEOPTION_GET(CASE vt2.c0  WHEN vt1.c0 THEN vt0.c0 ELSE v0.c0 END) FULL OUTER JOIN vt2 ON (((((v0.c0))!=((vt1.c0))))-(COALESCE(DISTINCT vt1.c0, vt2.c0))) GROUP BY v0.c0, vt2.c0, vt0.c0;
SELECT vt0.c2, vt1.c0 FROM vt1, v0 FULL OUTER JOIN vt0 ON CASE LIKELY(vt0.c2)  WHEN ((v0.c0)GLOB(vt1.c0)) THEN ((((vt0.c0)OR(vt0.c1)))OR(vt0.c1)) ELSE (('-1277764771')>>(vt0.c1)) END GROUP BY vt0.c2, vt1.c0;
SELECT ALL vt0.c2, vt1.c0 FROM vt1, v0 FULL OUTER JOIN vt0 ON CASE LIKELY(vt0.c2)  WHEN ((v0.c0)GLOB(vt1.c0)) THEN ((((vt0.c0)OR(vt0.c1)))OR(vt0.c1)) ELSE (('-1277764771')>>(vt0.c1)) END GROUP BY vt0.c2, vt1.c0 HAVING SUM(COUNT(v0.c0)) COLLATE BINARY UNION ALL SELECT ALL vt0.c2, vt1.c0 FROM vt1, v0 FULL OUTER JOIN vt0 ON CASE LIKELY(vt0.c2)  WHEN ((v0.c0)GLOB(vt1.c0)) THEN ((((vt0.c0)OR(vt0.c1)))OR(vt0.c1)) ELSE (('-1277764771')>>(vt0.c1)) END GROUP BY vt0.c2, vt1.c0 HAVING (NOT (SUM(COUNT(v0.c0)) COLLATE BINARY)) UNION ALL SELECT vt0.c2, vt1.c0 FROM vt1, v0 FULL OUTER JOIN vt0 ON CASE LIKELY(vt0.c2)  WHEN ((v0.c0)GLOB(vt1.c0)) THEN ((((vt0.c0)OR(vt0.c1)))OR(vt0.c1)) ELSE (('-1277764771')>>(vt0.c1)) END GROUP BY vt0.c2, vt1.c0 HAVING ((SUM(COUNT(v0.c0)) COLLATE BINARY) ISNULL);
SELECT vt0.c2, vt0.c1, vt1.c0, v0.c0 FROM v0, vt0, vt1;
SELECT vt0.c2, vt0.c1, vt1.c0, v0.c0 FROM v0, vt0, vt1 WHERE ((NULL IN ())) UNION ALL SELECT vt0.c2, vt0.c1, vt1.c0, v0.c0 FROM v0, vt0, vt1 WHERE ((NOT ((NULL IN ())))) UNION ALL SELECT vt0.c2, vt0.c1, vt1.c0, v0.c0 FROM v0, vt0, vt1 WHERE ((((NULL IN ())) ISNULL));
SELECT vt0.c2, vt0.c1, vt1.c0, v0.c0 FROM v0, vt0, vt1;
SELECT DISTINCT v0.c0, vt0.c0 FROM vt0, v0;
SELECT DISTINCT v0.c0, vt0.c0 FROM vt0, v0 WHERE (x'') UNION SELECT DISTINCT v0.c0, vt0.c0 FROM vt0, v0 WHERE ((NOT (x''))) UNION SELECT DISTINCT v0.c0, vt0.c0 FROM vt0, v0 WHERE (((x'') ISNULL));
SELECT DISTINCT v0.c0, vt0.c0 FROM vt0, v0;
SELECT vt1.c0, v0.c0 FROM vt1 LEFT OUTER JOIN v0 ON (((v0.c0, v0.c0, vt1.c0)) BETWEEN (((+ (v0.c0)), v0.c0 COLLATE RTRIM, ((vt1.c0)-(vt1.c0)))) AND (((~ (NULL)), 0.11005486841719969, vt1.c0 COLLATE NOCASE))) GROUP BY vt1.c0, v0.c0;
SELECT vt1.c0, v0.c0 FROM vt1 LEFT OUTER JOIN v0 ON (((v0.c0, v0.c0, vt1.c0)) BETWEEN (((+ (v0.c0)), v0.c0 COLLATE RTRIM, ((vt1.c0)-(vt1.c0)))) AND (((~ (NULL)), 0.11005486841719969, vt1.c0 COLLATE NOCASE))) WHERE ((((v0.c0)&(v0.c0)) IN ())) GROUP BY vt1.c0, v0.c0 UNION SELECT vt1.c0, v0.c0 FROM vt1 LEFT OUTER JOIN v0 ON (((v0.c0, v0.c0, vt1.c0)) BETWEEN (((+ (v0.c0)), v0.c0 COLLATE RTRIM, ((vt1.c0)-(vt1.c0)))) AND (((~ (NULL)), 0.11005486841719969, vt1.c0 COLLATE NOCASE))) WHERE ((NOT ((((v0.c0)&(v0.c0)) IN ())))) GROUP BY vt1.c0, v0.c0 UNION SELECT ALL vt1.c0, v0.c0 FROM vt1 LEFT OUTER JOIN v0 ON (((v0.c0, v0.c0, vt1.c0)) BETWEEN (((+ (v0.c0)), v0.c0 COLLATE RTRIM, ((vt1.c0)-(vt1.c0)))) AND (((~ (NULL)), 0.11005486841719969, vt1.c0 COLLATE NOCASE))) WHERE ((((((v0.c0)&(v0.c0)) IN ())) ISNULL)) GROUP BY vt1.c0, v0.c0;
SELECT vt1.c0, v0.c0 FROM vt1 LEFT OUTER JOIN v0 ON (((v0.c0, v0.c0, vt1.c0)) BETWEEN (((+ (v0.c0)), v0.c0 COLLATE RTRIM, ((vt1.c0)-(vt1.c0)))) AND (((~ (NULL)), 0.11005486841719969, vt1.c0 COLLATE NOCASE))) GROUP BY vt1.c0, v0.c0;
SELECT vt1.c0, vt0.c0, vt0.c2, v0.c0 FROM v0, vt0, vt1 GROUP BY vt1.c0, vt0.c0, vt0.c2, v0.c0;
SELECT vt1.c0, vt0.c0, vt0.c2, v0.c0 FROM v0, vt0, vt1 GROUP BY vt1.c0, vt0.c0, vt0.c2, v0.c0 HAVING ((((((((((((MIN(TOTAL(vt0.c2)))AND(MIN(vt1.c0))))OR(SUM(vt1.c0))))OR(vt1.c0)))OR(GROUP_CONCAT(vt1.c0))))AND(MAX(v0.c0))))AND(SUM(GROUP_CONCAT(GROUP_CONCAT(v0.c0))))) UNION ALL SELECT vt1.c0, vt0.c0, vt0.c2, v0.c0 FROM v0, vt0, vt1 GROUP BY vt1.c0, vt0.c0, vt0.c2, v0.c0 HAVING (NOT (((((((((((((MIN(TOTAL(vt0.c2)))AND(MIN(vt1.c0))))OR(SUM(vt1.c0))))OR(vt1.c0)))OR(GROUP_CONCAT(vt1.c0))))AND(MAX(v0.c0))))AND(SUM(GROUP_CONCAT(GROUP_CONCAT(v0.c0))))))) UNION ALL SELECT ALL vt1.c0, vt0.c0, vt0.c2, v0.c0 FROM v0, vt0, vt1 GROUP BY vt1.c0, vt0.c0, vt0.c2, v0.c0 HAVING ((((((((((((((MIN(TOTAL(vt0.c2)))AND(MIN(vt1.c0))))OR(SUM(vt1.c0))))OR(vt1.c0)))OR(GROUP_CONCAT(vt1.c0))))AND(MAX(v0.c0))))AND(SUM(GROUP_CONCAT(GROUP_CONCAT(v0.c0)))))) ISNULL);
SELECT ALL * FROM v0, vt0, vt2, vt1;
SELECT * FROM v0, vt0, vt2, vt1 WHERE (((((LENGTH(vt2.c0))AND(((((((((vt0.c2)OR(vt2.c0)))AND(v0.c0)))OR(vt0.c1)))OR(vt1.c0)))))OR(CASE v0.c0  WHEN v0.c0 THEN vt2.c0 ELSE vt0.c1 END))) UNION ALL SELECT * FROM v0, vt0, vt2, vt1 WHERE ((NOT (((((LENGTH(vt2.c0))AND(((((((((vt0.c2)OR(vt2.c0)))AND(v0.c0)))OR(vt0.c1)))OR(vt1.c0)))))OR(CASE v0.c0  WHEN v0.c0 THEN vt2.c0 ELSE vt0.c1 END))))) UNION ALL SELECT ALL * FROM v0, vt0, vt2, vt1 WHERE (((((((LENGTH(vt2.c0))AND(((((((((vt0.c2)OR(vt2.c0)))AND(v0.c0)))OR(vt0.c1)))OR(vt1.c0)))))OR(CASE v0.c0  WHEN v0.c0 THEN vt2.c0 ELSE vt0.c1 END))) ISNULL));
SELECT ALL * FROM v0, vt0, vt2, vt1;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (((((((((((((((v0.c0)OR(x'd0fbf6c6')))OR(v0.c0)))AND(v0.c0)))AND(v0.c0)))OR(v0.c0)))AND('1521138160'))) NOTNULL)) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (((((((((((((((v0.c0)OR(x'd0fbf6c6')))OR(v0.c0)))AND(v0.c0)))AND(v0.c0)))OR(v0.c0)))AND('1521138160'))) NOTNULL)))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((((((((((((((((v0.c0)OR(x'd0fbf6c6')))OR(v0.c0)))AND(v0.c0)))AND(v0.c0)))OR(v0.c0)))AND('1521138160'))) NOTNULL)) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT vt1.c0, vt0.c0, vt0.c1, vt2.c0, vt0.c2 FROM vt1, vt0, vt2 GROUP BY vt1.c0, vt0.c0, vt0.c1, vt2.c0, vt0.c2;
SELECT ALL vt1.c0, vt0.c0, vt0.c1, vt2.c0, vt0.c2 FROM vt1, vt0, vt2 WHERE (((((((((vt1.c0 COLLATE NOCASE)OR(((((vt1.c0)OR(vt0.c2)))AND(vt0.c1)))))OR(((vt0.c0)AND(vt1.c0)))))OR('0.07413039872359428')))OR(vt1.c0 COLLATE BINARY))) GROUP BY vt1.c0, vt0.c0, vt0.c1, vt2.c0, vt0.c2 UNION SELECT vt1.c0, vt0.c0, vt0.c1, vt2.c0, vt0.c2 FROM vt1, vt0, vt2 NOT INDEXED WHERE ((NOT (((((((((vt1.c0 COLLATE NOCASE)OR(((((vt1.c0)OR(vt0.c2)))AND(vt0.c1)))))OR(((vt0.c0)AND(vt1.c0)))))OR('0.07413039872359428')))OR(vt1.c0 COLLATE BINARY))))) GROUP BY vt1.c0, vt0.c0, vt0.c1, vt2.c0, vt0.c2 UNION SELECT vt1.c0, vt0.c0, vt0.c1, vt2.c0, vt0.c2 FROM vt1, vt0, vt2 WHERE (((((((((((vt1.c0 COLLATE NOCASE)OR(((((vt1.c0)OR(vt0.c2)))AND(vt0.c1)))))OR(((vt0.c0)AND(vt1.c0)))))OR('0.07413039872359428')))OR(vt1.c0 COLLATE BINARY))) ISNULL)) GROUP BY vt1.c0, vt0.c0, vt0.c1, vt2.c0, vt0.c2;
SELECT vt1.c0, vt0.c0, vt0.c1, vt2.c0, vt0.c2 FROM vt1, vt0, vt2 GROUP BY vt1.c0, vt0.c0, vt0.c1, vt2.c0, vt0.c2;
SELECT vt0.c0, vt1.c0 FROM vt2 CROSS JOIN vt0 ON CAST(((vt0.c2)<>(vt2.c0)) AS NUMERIC) LEFT OUTER JOIN vt1 ON '1692076752' GROUP BY vt0.c0, vt1.c0;
SELECT ALL vt0.c0, vt1.c0 FROM vt2 CROSS JOIN vt0 ON CAST(((vt0.c2)!=(vt2.c0)) AS NUMERIC) LEFT OUTER JOIN vt1 ON '1692076752' GROUP BY vt0.c0, vt1.c0 HAVING x'2c06' UNION ALL SELECT vt0.c0, vt1.c0 FROM vt2 CROSS JOIN vt0 ON CAST(((vt0.c2)<>(vt2.c0)) AS NUMERIC) LEFT OUTER JOIN vt1 ON '1692076752' GROUP BY vt0.c0, vt1.c0 HAVING (NOT (x'2c06')) UNION ALL SELECT ALL vt0.c0, vt1.c0 FROM vt2 CROSS JOIN vt0 ON CAST(((vt0.c2)<>(vt2.c0)) AS NUMERIC) LEFT OUTER JOIN vt1 ON '1692076752' GROUP BY vt0.c0, vt1.c0 HAVING ((x'2c06') ISNULL);
SELECT vt0.c0, vt1.c0 FROM vt2 CROSS JOIN vt0 ON CAST(((vt0.c2)<>(vt2.c0)) AS NUMERIC) LEFT OUTER JOIN vt1 ON '1692076752' GROUP BY vt0.c0, vt1.c0;
SELECT ALL vt0.c0, vt1.c0 FROM vt2 CROSS JOIN vt0 ON CAST(((vt0.c2)!=(vt2.c0)) AS NUMERIC) LEFT OUTER JOIN vt1 ON '1692076752' GROUP BY vt0.c0, vt1.c0 HAVING x'2c06' UNION ALL SELECT vt0.c0, vt1.c0 FROM vt2 CROSS JOIN vt0 ON CAST(((vt0.c2)<>(vt2.c0)) AS NUMERIC) LEFT OUTER JOIN vt1 ON '1692076752' GROUP BY vt0.c0, vt1.c0 HAVING (NOT (x'2c06')) UNION ALL SELECT ALL vt0.c0, vt1.c0 FROM vt2 CROSS JOIN vt0 ON CAST(((vt0.c2)<>(vt2.c0)) AS NUMERIC) LEFT OUTER JOIN vt1 ON '1692076752' GROUP BY vt0.c0, vt1.c0 HAVING ((x'2c06') ISNULL);
SELECT vt0.c0, vt1.c0 FROM vt2 CROSS JOIN vt0 ON CAST(((vt0.c2)<>(vt2.c0)) AS NUMERIC) LEFT OUTER JOIN vt1 ON '1692076752' GROUP BY vt0.c0, vt1.c0;
SELECT MAX(((vt2.c0 COLLATE BINARY) IS TRUE)) FROM vt2, vt0 ORDER BY vt0.c1;
SELECT ALL * FROM vt0, vt1;
SELECT * FROM vt0, vt1 WHERE (vt0.c2) UNION ALL SELECT * FROM vt0, vt1 WHERE ((NOT (vt0.c2))) UNION ALL SELECT * FROM vt0, vt1 WHERE (((vt0.c2) ISNULL));
SELECT ALL * FROM vt0, vt1;
SELECT DISTINCT * FROM vt0, v0, vt2, vt1;
SELECT DISTINCT * FROM vt0, v0, vt2, vt1 WHERE (IFNULL(json_array(vt1.c0, vt1.c0), ((v0.c0)-(vt0.c0)))) UNION SELECT DISTINCT * FROM vt0, v0, vt2, vt1 WHERE ((NOT (IFNULL(json_array(vt1.c0, vt1.c0), ((v0.c0)-(vt0.c0)))))) UNION SELECT DISTINCT * FROM vt0, v0, vt2, vt1 WHERE (((IFNULL(json_array(vt1.c0, vt1.c0), ((v0.c0)-(vt0.c0)))) ISNULL));
SELECT DISTINCT * FROM vt0, v0, vt2, vt1;
SELECT ALL v0.c0 FROM v0, vt2 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0, vt2 WHERE ((((~ (v0.c0)))GLOB((((v0.c0, vt2.c0, v0.c0)) NOT BETWEEN ((vt2.c0, 0.16754137612974285, v0.c0)) AND ((vt2.c0, vt2.c0, 0.78876166801595)))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0, vt2 WHERE ((NOT ((((~ (v0.c0)))GLOB((((v0.c0, vt2.c0, v0.c0)) NOT BETWEEN ((vt2.c0, 0.16754137612974285, v0.c0)) AND ((vt2.c0, vt2.c0, 0.78876166801595)))))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0, vt2 WHERE ((((((~ (v0.c0)))GLOB((((v0.c0, vt2.c0, v0.c0)) NOT BETWEEN ((vt2.c0, 0.16754137612974285, v0.c0)) AND ((vt2.c0, vt2.c0, 0.78876166801595)))))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0, vt2 GROUP BY v0.c0;
SELECT vt2.c0, vt0.c1 FROM vt1 CROSS JOIN vt2 ON TOTAL_CHANGES() LEFT OUTER JOIN vt0 ON 0x248c8247 GROUP BY vt2.c0, vt0.c1;
SELECT vt2.c0, vt0.c1 FROM vt1 CROSS JOIN vt2 ON TOTAL_CHANGES() LEFT OUTER JOIN vt0 ON 0x248c8247 GROUP BY vt2.c0, vt0.c1 HAVING MAX(COUNT(*)) UNION ALL SELECT ALL vt2.c0, vt0.c1 FROM vt1 CROSS JOIN vt2 ON TOTAL_CHANGES() LEFT OUTER JOIN vt0 ON 0x248c8247 GROUP BY vt2.c0, vt0.c1 HAVING (NOT (MAX(COUNT(*)))) UNION ALL SELECT ALL vt2.c0, vt0.c1 FROM vt1 CROSS JOIN vt2 ON TOTAL_CHANGES() LEFT OUTER JOIN vt0 ON 0X248c8247 GROUP BY vt2.c0, vt0.c1 HAVING ((MAX(COUNT(*))) ISNULL);
SELECT vt2.c0 FROM v0, vt1, vt2;
SELECT vt2.c0 FROM v0, vt1, vt2 WHERE ((((vt2.c0)) BETWEEN (((v0.c0 IN (vt1.c0, vt2.c0)))) AND ((((vt2.c0)>>(v0.c0)))))) UNION ALL SELECT vt2.c0 FROM v0, vt1, vt2 WHERE ((NOT ((((vt2.c0)) BETWEEN (((v0.c0 IN (vt1.c0, vt2.c0)))) AND ((((vt2.c0)>>(v0.c0)))))))) UNION ALL SELECT ALL vt2.c0 FROM v0, vt1, vt2 WHERE ((((((vt2.c0)) BETWEEN (((v0.c0 IN (vt1.c0, vt2.c0)))) AND ((((vt2.c0)>>(v0.c0)))))) ISNULL));
SELECT vt2.c0 FROM v0, vt1, vt2;
SELECT DISTINCT * FROM vt2 LEFT OUTER JOIN vt0 ON TRIM(((vt0.c1)*(vt1.c0))) LEFT OUTER JOIN v0 ON (((~ (vt0.c1))) NOT BETWEEN (((vt0.c1) NOT NULL)) AND (0.11909149441751654)) LEFT OUTER JOIN vt1 ON CASE vt2.c0  WHEN vt2.c0 THEN vt0.c0 END COLLATE NOCASE;
SELECT vt2.c0, vt1.c0, vt0.c0 FROM vt1, vt2, v0, vt0 GROUP BY vt2.c0, vt1.c0, vt0.c0;
SELECT vt2.c0, vt1.c0, vt0.c0 FROM vt1, vt2, v0, vt0 WHERE (((vt0.c1)*(vt1.c0)) COLLATE RTRIM) GROUP BY vt2.c0, vt1.c0, vt0.c0 UNION SELECT ALL vt2.c0, vt1.c0, vt0.c0 FROM vt1, vt2, v0, vt0 WHERE ((NOT (((vt0.c1)*(vt1.c0)) COLLATE RTRIM))) GROUP BY vt2.c0, vt1.c0, vt0.c0 UNION SELECT ALL vt2.c0, vt1.c0, vt0.c0 FROM vt1, vt2, v0, vt0 WHERE (((((vt0.c1)*(vt1.c0)) COLLATE RTRIM) ISNULL)) GROUP BY vt2.c0, vt1.c0, vt0.c0;
SELECT vt2.c0, vt1.c0, vt0.c0 FROM vt1, vt2, v0, vt0 GROUP BY vt2.c0, vt1.c0, vt0.c0;
SELECT ALL vt0.c1, vt2.c0, vt0.c2, vt0.c0, vt1.c0 FROM vt1, vt0, vt2 GROUP BY vt0.c1, vt2.c0, vt0.c2, vt0.c0, vt1.c0;
SELECT vt0.c1, vt2.c0, vt0.c2, vt0.c0, vt1.c0 FROM vt1, vt0 NOT INDEXED, vt2 GROUP BY vt0.c1, vt2.c0, vt0.c2, vt0.c0, vt1.c0 HAVING COUNT(GROUP_CONCAT(MIN(COUNT(*)))) UNION ALL SELECT ALL vt0.c1, vt2.c0, vt0.c2, vt0.c0, vt1.c0 FROM vt1, vt0, vt2 GROUP BY vt0.c1, vt2.c0, vt0.c2, vt0.c0, vt1.c0 HAVING (NOT (COUNT(GROUP_CONCAT(MIN(COUNT(*)))))) UNION ALL SELECT ALL vt0.c1, vt2.c0, vt0.c2, vt0.c0, vt1.c0 FROM vt1, vt0, vt2 GROUP BY vt0.c1, vt2.c0, vt0.c2, vt0.c0, vt1.c0 HAVING ((COUNT(GROUP_CONCAT(MIN(COUNT(*))))) ISNULL);
SELECT vt0.c1, vt2.c0 FROM vt1, vt0, vt2, v0;
SELECT ALL vt0.c1, vt2.c0 FROM vt1, vt0, vt2, v0 WHERE (((vt0.c1)*(vt2.c0)) COLLATE BINARY) UNION ALL SELECT vt0.c1, vt2.c0 FROM vt1, vt0, vt2, v0 WHERE ((NOT (((vt0.c1)*(vt2.c0)) COLLATE BINARY))) UNION ALL SELECT vt0.c1, vt2.c0 FROM vt1, vt0, vt2, v0 WHERE (((((vt0.c1)*(vt2.c0)) COLLATE BINARY) ISNULL));
SELECT vt0.c1, vt2.c0 FROM vt1, vt0, vt2, v0;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE (CAST(((vt1.c0) IS TRUE) AS INTEGER)) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT (CAST(((vt1.c0) IS TRUE) AS INTEGER)))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((CAST(((vt1.c0) IS TRUE) AS INTEGER)) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
