-- Time: 2024/06/10 21:05:37
-- Database: database60
-- Database version: 3.40.0
-- seed value: 445540560
PRAGMA cache_size = 50000; -- 0ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
CREATE TABLE IF NOT EXISTS t0 (c0 INTEGER ); -- 0ms;
CREATE TABLE t1 (c0 TEXT ); -- 1ms;
INSERT OR ROLLBACK INTO t0(c0) VALUES (0.958098558364479); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE t0 SET c0=-1054335923, c0='1519980338' WHERE (((((((((t0.c0)OR(NULL)))AND(t0.c0)))AND(t0.c0)))AND(t0.c0)) IN ()); -- 0ms;
PRAGMA main.recursive_triggers = true; -- 0ms;
INSERT OR ROLLBACK INTO t1 VALUES ('{}'); -- 7ms;
INSERT OR IGNORE INTO t1 VALUES (x''), (x'64f6631b'), (x''); -- 1ms;
INSERT OR IGNORE INTO t1 VALUES (NULL); -- 7ms;
INSERT OR IGNORE INTO t0 VALUES (0.958098558364479), (0.958098558364479), (x'1efd'); -- 0ms;
END TRANSACTION; -- 0ms;
PRAGMA main.short_column_names; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
PRAGMA threads; -- 0ms;
INSERT OR ABORT INTO t0(c0) VALUES ('{}'), (NULL), ('0.958098558364479'); -- 0ms;
INSERT OR REPLACE INTO t1(c0) VALUES ('-431591293'); -- 0ms;
REINDEX RTRIM; -- 0ms;
ALTER TABLE t0 ADD COLUMN c56 BLOB; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ' sz=805054958 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'a6a5') NOTNULL))>>(((x'') ISNULL))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (HEX(DISTINCT x''))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('{}')IS('Ly')))IS(((NULL)==('/考/䉡r')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '1469947195 sz=-586056746 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=2130585631'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE json_type(((((2144348757)AND('')))AND(x''))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN UNLIKELY(DISTINCT NULL) THEN '/KQ' COLLATE BINARY WHEN (NOT (-1014726653)) THEN ((((NULL)OR(NULL)))OR(0X210ba6fb)) WHEN '-836565915' COLLATE RTRIM THEN GLOB(-8.36565915E8, x'ffef') END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE 2.130585631E9  WHEN NULL THEN x'45c7' ELSE '0.958098558364479' END) NOT BETWEEN ((('641104803')>(0.958098558364479))) AND (NULL COLLATE BINARY)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((x'', x'', '0.958098558364479'))<=(('805054958', 0xffffffffc3848003, '0.958098558364479'))))&(((0.6300078352913008)/(0.46322522038462544)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ' sz=-944758805 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((0.34945284902062146)<(NULL))  WHEN ((((-9.44758805E8)AND(0.0)))OR(0.958098558364479)) THEN (('now') IS TRUE) WHEN ((x'')IS(x'')) THEN ((2.130585631E9)/(x'')) WHEN (('-1014726653')OR(0x40791489)) THEN (('') ISNULL) ELSE (('1463470539') BETWEEN (NULL) AND (0.961779268794806)) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ' sz=-2106585021 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ' sz=-1763219844 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'')) BETWEEN ((((NULL) NOT BETWEEN (0.05768250021345678) AND ('mk^*')))) AND ((((((((((x'd467')OR(0.5704584642809486)))OR(0.12512733019298838)))OR(NULL)))OR(''))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '759540133 2 sz=-586056746 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-285017421 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (((360271426) IS FALSE))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ' sz=2130585631 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('z1qeo95o!' IN ()))>=(((x'fc13') BETWEEN (0.5290123782669782) AND (NULL)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE COALESCE(DISTINCT CASE NULL  WHEN 0.6395453848791509 THEN NULL WHEN 0.05931461881326461 THEN 0X5f1d7ef7 WHEN x'' THEN 0Xfffffffff2887b20 WHEN x'' THEN 0.12512733019298838 WHEN 0.5851268026623774 THEN 463194601 ELSE 0.1926244386703806 END, ((((0.958098558364479)AND(1.595768567E9)))AND(x''))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(NULL AS INTEGER); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((0.7173125854878131)OR('0.5704584642809486')))OR((((('1106321981')OR(NULL)))OR(0.035782813445374484)))))OR((((0.6019578470796054, 0.7859535733010028, 0X2ffc29ee)) BETWEEN ((x'', NULL, x'')) AND ((NULL, NULL, '짩D꛻8/NyV'))))))AND(2.144348757E9)))AND(MIN(x'29de342d', NULL))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((245842529) BETWEEN (0.12512733019298838) AND ('-225936608'))) NOTNULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'') BETWEEN ('RW1W~sHW\n') AND (NULL))) IS TRUE); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '0 sz=1405107043 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '0'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'' IN ())) BETWEEN ((NULL IN ())) AND (x'4e36')); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', '0 -285017421 sz=759540133 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0Xffffffffaf16852a) IS FALSE) IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((CAST('' AS TEXT))AND(SQLITE_COMPILEOPTION_USED(0.1926244386703806))))OR(((x'')AND(NULL)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '2 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', '238172738 2 sz=554411771 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((- (NULL)))GLOB(((360271426) IS FALSE))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE COALESCE(((NULL) BETWEEN (0.10495667881708626) AND (0xffffffffa0dd8bf6)), (~ (0.5985412412728212))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=-329839895 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=970485190 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=1709822780 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=-225936608'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-431591293 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((x'')AND(0.916856139749092)))AND(NULL)))<(1605953994 COLLATE NOCASE)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.8791478568302971)<(1.081676937E9)) IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((1.595768567E9)IS('')))/(NULL)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '-2041307766 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (('}z')&('1605953994')) THEN (('-431591293')=('0.035782813445374484')) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((0.9427059311843573) BETWEEN (NULL) AND (x'')) THEN ((((0X53c03b63)OR(2.45842529E8)))OR(0.22345679953499298)) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE -944758805  WHEN 0x7efe281f THEN x'' WHEN '' THEN NULL WHEN 0.7362452324555794 THEN '/' ELSE '<' END)&((('0.7173125854878131') NOT BETWEEN (NULL) AND (NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '2 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((-1431062123, '^ ', '2130585631'))<(('', '0.10495667881708626', 0.991423509609584))))+(((((((((NULL)AND(NULL)))OR('1709822780')))OR(NULL)))AND('蔪k')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '0 2 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (((NULL) NOTNULL))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ ((x'' IN ()))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.3289884578504062, x'', NULL)) BETWEEN ((((((0x573ac9cb)OR(x'')))AND(0.7800519127217762)), '-285017421', json_patch(NULL, NULL))) AND ((TRIM(DISTINCT x''), (x'' IN ()), ((NULL) NOT BETWEEN ('') AND (x''))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE SQLITE_SOURCE_ID(); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=1106321981 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=251039920 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=-2041307766 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN PRINTF(x'') THEN ((0.5851268026623774) NOTNULL) WHEN (('-944758805') BETWEEN ('-329839895') AND (NULL)) THEN TRIM(x'') WHEN 154210993 THEN (((('-1431062123')OR('1605953994')))OR('1605953994')) ELSE LIKELIHOOD(0.5704584642809486, 0.19808318974049677) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((x''))<>((1.519980338E9))))<<(((0X6601b61b) ISNULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-10971492 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE TOTAL_CHANGES(); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('')AND(NULL)))OR(x'78a3'))) BETWEEN ((('0.1926244386703806')/(x''))) AND (NULL COLLATE RTRIM)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL)) BETWEEN ((0.9853091218719036)) AND (('2100760440'))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=805054958 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.14454505635509296) IS TRUE) COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE COALESCE(((1.605953994E9) BETWEEN (x'32a8') AND (2.10076044E9)), (NULL IN ('381532468'))); -- 0ms;
DELETE FROM sqlite_stat1; -- 3ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', '0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE HEX(CASE ''  WHEN NULL THEN '1029053999' WHEN NULL THEN x'' WHEN x'' THEN '' ELSE '0.958098558364479' END); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((x'') BETWEEN (1844732669) AND (x'')) AS INTEGER); -- 0ms;
DELETE FROM sqlite_stat1 WHERE LOWER(DISTINCT 0.4455066326613354); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ' unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=376369441 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL)/(x'')); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'b6c2')OR('2}[SZ')))OR(NULL)) COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ' sz=-1831523476 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE NULL  WHEN 0.9760202973303688 THEN '2' WHEN 1.463470539E9 THEN '6⮃V^GiP)n' WHEN 0.3601388176769704 THEN 0xffffffff91d2acf5 ELSE 0.5912291389229304 END)>>(NULL COLLATE NOCASE)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '-1009412651 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=-900013698'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.43014593998663486, 1.469947195E9, 1.519980338E9, '641104803', '783034675')) NOT BETWEEN ((x'd52a117d', NULL, x'5cea', x'', x'03832727')) AND ((1068987626, NULL, NULL, 1.029053999E9, 0Xffffffffc8363ab8))) IN (CAST(NULL AS BLOB))); -- 0ms;
DELETE FROM sqlite_stat1; -- 3ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '1590129620'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE UPPER(DISTINCT ((-97500139)>>(0.1409958288733607))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE LIKELY(DISTINCT (((0.8793635062986389))>((NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((CASE 0.06794676487379114  WHEN '-431591293' THEN 2102052642 END)AND(CASE WHEN x'' THEN NULL WHEN 'Ly' THEN 0.21202775423389075 WHEN -1163397200 THEN '-1009412651' END)))OR(((0xffffffffafe20d39) IS FALSE))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-1259935586 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=-1550779726 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '-1054335923 0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=759540133'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL) IS FALSE) COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', '0 0 sz=747573164 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'' IN ()))==(CASE WHEN 2144348757 THEN NULL WHEN NULL THEN 0.5673882483400472 WHEN 0Xaf519c4 THEN x'' WHEN 'y4' THEN -9.7500139E7 WHEN NULL THEN x'' ELSE x'eb4e' END)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-836565915 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '0 sz=-2144348254'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((SQLITE_COMPILEOPTION_USED(NULL))OR(('z[쯌O' IN ()))))AND(((((NULL)AND('417949497')))AND(2144348757)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('376369441')>=(x''))))<=((1924981563))); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE CAST(CASE WHEN '554411771' THEN '251039920' ELSE '1713819345' END AS TEXT); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '245842529 sz=1952598006 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=1463470539'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ''); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=1434746691'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE UPPER(DISTINCT (NULL IN ())); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (((x'')<=('nK')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '2 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '-1931866319 sz=-1848464139 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((-1494010462) IS TRUE) IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((NULL)) NOT BETWEEN ((NULL)) AND ((0Xffffffff94e62b83))))%((((x'')) NOT BETWEEN ((x'ae4a')) AND ((NULL))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ' sz=-1172152780'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '-1891817721 sz=1487139795 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '2143731810 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (CAST('-1857033969' AS REAL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ' sz=-279582334 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)>>(x'')))|((NULL IN ()))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=1002826377 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-2012140769 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((NULL) IS TRUE)  WHEN ((x'a0e3')|(x'')) THEN (0x166ef121 IN (0.26303920599892117, 0xef690b0)) WHEN ((((x'')OR(0.24484395614121712)))AND('K2E,VUWj')) THEN (('-2144348254')>>(NULL)) WHEN (((x''))<=((-4.31591293E8))) THEN (NOT ('-2012140769')) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '0 sz=-2040524729 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=381532468'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ' sz=1924981563 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '0'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '-329839895 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '747573164 sz=-564747850 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', '867665184 sz=-1 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=2143731810 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE LIKELIHOOD(CASE WHEN '*?zACri' THEN 0.8989263224346495 ELSE 'Ka' END, 0.14230916376356317); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((CAST(' [쯌M' AS INTEGER))OR(x'')))AND(x'' COLLATE BINARY)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '0 0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', '0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '0 0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (('I!LO}G') BETWEEN ('-935124129') AND (NULL)) THEN (~ ('-944758805')) ELSE UNLIKELY(NULL) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '1847851670 2 sz=718177989 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'')OR('-1848464139'))) NOT NULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '2 -976180435'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.2860758135840137) NOT NULL)) NOT BETWEEN (3.81532468E8 COLLATE NOCASE) AND (((x'c2a8085e')-('-1163397200')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=1262904085'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((9.7048519E8 IN (NULL))) BETWEEN ((((('!b')OR(0.08726819169292643)))AND(x''))) AND (((0.2254929008111759) NOT BETWEEN (154210993) AND (0x5386ec8d)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (x'' COLLATE NOCASE IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '4 294976036 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', '0 sz=-1014726653 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ('-225936608' COLLATE NOCASE IN (CASE WHEN '1敕' THEN '-1884369548' ELSE '' END, (('149682497') ISNULL), (((((((('')OR(0.6249759451590805)))AND(0.07637164881204095)))AND(NULL)))AND(0.5436992144973717)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', '0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=463194601 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '0 sz=871823936 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', '1166219470 0 sz=126130377'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', '2 sz=-252116271 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ' sz=1405107043 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=2081421043 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'8541' COLLATE NOCASE)*((('')%(0.6300078352913008)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.05400943008918502) ISNULL) IN (((x'') IS TRUE))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL)) BETWEEN ((CASE '-976180435'  WHEN '' THEN x'' WHEN '' THEN 0.6395453848791509 WHEN 0.20889776147645212 THEN NULL END)) AND ((NULL COLLATE BINARY))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '2 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '2 sz=802235847 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '2144348757 -2135751724 sz=258993976 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '554411771 -1521576714 sz=1491625815 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '1253692800'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', '0 sz=1658595410 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-675409274 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((-2.135751724E9)||((NULL IN ()))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE x'' COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=-1158007972 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-580472465 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'') BETWEEN (0Xffffffffed17caa3) AND (NULL)) IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'10b0923a', 0.30786128686187597, NULL)) NOT BETWEEN ((2140370301, '6', 1.7976931348623157E308)) AND ((0.7012425024794121, -5.86056746E8, NULL))) IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'' IN (NULL, 0.21643101695995248)))IS NOT(HEX(DISTINCT NULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ' sz=-1931866319 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-2012140769 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '-279686299 0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '1762401132 2 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ ((+ (0.4237926343773989)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ' sz=2143731810'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE TRIM(DISTINCT '726295893', (('-1044394279')>(0Xffffffffe6467083))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ' sz=805054958 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=1487139795'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=777388569 noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((((((x'')) NOT BETWEEN (('1401351309')) AND ((0.6123134062198156))))OR('0.6249759451590805' COLLATE BINARY)))OR(CAST('vR' AS NUMERIC))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('' COLLATE BINARY)>=((+ (NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '-58505684'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CASE WHEN 0.8687130627644342 THEN '' ELSE 0.3250281774970213 END AS REAL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (((x'')+('0.7012425024794121')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '1270541845 sz=2136267467 unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ' sz=2034170570 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '0 sz=-1286053449 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '-1371413081 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '-3111986 0 sz=1029053999'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((NULL)AND(NULL)))AND('n挕笠UH>')))OR(892339323)))AND(x'')) COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '1780017985 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN 0.10638067698455067 THEN '871926466' ELSE '' END)<=((('')+(NULL)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE IFNULL(DISTINCT NULL, ('-1431062123' IN ())); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ' sz=-1494010462 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE UPPER('180075955'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE IFNULL(((x'0070') ISNULL), ((NULL)>(x''))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((((((((0xfffffffff5ad39a0)) BETWEEN (('-935970120')) AND ((0.1660366772348758))))OR(CASE NULL  WHEN 0.1499868945512095 THEN 0.5126243266808016 ELSE NULL END)))AND((+ (0.7173125854878131)))))AND(((x'ccb5899d') BETWEEN (NULL) AND ('(G)L')))))AND((NULL IN (-1163397200)))))OR((x'' IN ()))))OR((('1487139795')<<(0.6305097530346235)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL IN ()))<<(NULLIF('442567502', NULL))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN 9.7048519E8 THEN ((NULL) NOT BETWEEN (0.8159721943610285) AND ('뤴')) WHEN ('1096108933' IN (NULL, x'')) THEN x'' COLLATE RTRIM WHEN (((x'3e32f64a')) BETWEEN (('#Bqyq')) AND ((-287663495))) THEN ((1719166896) NOT BETWEEN (0xffffffffc862a1c1) AND (0.3051282138858554)) ELSE '~죅' END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=805054958 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=-360299142 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('')<<('1083987701')))AND(CAST(0.05768250021345678 AS INTEGER))))OR(0Xffffffffffffffff)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('-1431062123')AND(x'0d46')))AND(x'')))<>(((NULL) NOT NULL))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE UPPER(DISTINCT CASE NULL  WHEN '0.10638067698455067' THEN x'b09157b6' WHEN x'' THEN 0.7157621013910427 WHEN x'' THEN 0.2254929008111759 ELSE 0.0560109983157584 END); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=1161732181 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=847583092'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('896235855')) BETWEEN ((((((((((((((0.09919783812535976)AND(NULL)))AND('')))AND('gGK)''')))OR(x'e976d44c')))OR('澀0')))OR(x'6d04810c')))) AND ((CASE WHEN 0Xfffffffff6096da5 THEN x'' ELSE 0.9853091218719036 END))); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '1659288432 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE LIKELIHOOD(0.012714905554312539, 0.8573251437941601) COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(x'70e7' COLLATE NOCASE AS REAL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '2 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-117543725 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ' sz=2045385187 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((CASE WHEN x'' THEN -586056746 END)OR(((NULL) IS FALSE))))OR((('y|1\n3')>=(NULL)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-282879625'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT ('1952598006')) COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((NULL)AND(NULL)))AND(NULL)))AND('')))OR(NULL))) IS TRUE); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0xef690b0) NOTNULL))<(((x'6153')<<('')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=871823936 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=1480428719 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (((NULL) BETWEEN (0.5126243266808016) AND (0X7db197d0)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((NULL)) BETWEEN ((1.83835076E8)) AND ((1334910102))))LIKE(((NULL)LIKE(x'')))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', '149682497 0 sz=6302856'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '2 2 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=2119640885 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ('-1936965531' COLLATE BINARY IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ''; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((NULL) NOTNULL) AS TEXT); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('') BETWEEN (0.21202775423389075) AND (x''))))<((((x'') NOTNULL)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (0.3289884578504062 IN (((((((((((((1.469947195E9)OR(NULL)))OR(463194601)))OR('1811127661')))OR('0.0')))AND(0xffffffffc8d227aa)))AND(0.13960480360419159)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=-946428183 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '0 1844897822 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ' sz=2131334379 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('1431109351')) NOT BETWEEN ((((NULL) NOT BETWEEN (0.853324955505454) AND ('{eml')))) AND ((((0.11583350521757818)&('!b8}HGkM'))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((x'0ce0')OR('0mK''BN횠')))AND(NULL))) BETWEEN ((NOT (x''))) AND (((0.7432412739134447) NOT BETWEEN (NULL) AND (x'')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('-813881440')%('251039920')))>=(x'' COLLATE NOCASE)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=-1009412651 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('샏{mqma')<(0.32732123008879643)) COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'14a7') IS FALSE))-(((NULL) NOTNULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '1671117504 unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '0 sz=-1009412651'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '0 sz=-2144348254 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=-74389823'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '4 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'')AND((('')<(NULL)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '-1014726653 sz=-672457072 unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE CASE (NULL IN ())  WHEN ((0x68c6180f)-(x'53e7')) THEN UNLIKELY(DISTINCT 0.4137801089166394) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.537714270260255) IS FALSE) COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('-1550779726')IS(NULL)) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', '-1035630134 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=-66832866 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '1677528946 sz=676978941 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', '0 sz=-1679747459 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) NOT BETWEEN ('') AND (x'')))IS NOT((0.7590162140245847 IN ('0.21643101695995248')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '2 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((('-1521576714')OR(x'')))AND(CAST(x'' AS BLOB))))AND((- (NULL)))))OR(((x'204faabe')OR(NULL)))))OR(CAST('1847851670' AS BLOB))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '0 sz=-1014726653 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '1146979617 2 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'a901') NOT BETWEEN (LTRIM('802235847')) AND (0.0675701125588174)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.41250248640826137 IN ()))<=(CASE NULL  WHEN x'19c7' THEN x'fe01' WHEN -1431062123 THEN 0x248cd1ad WHEN x'231b' THEN '1487139795' ELSE NULL END)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '2 sz=-1105888877 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'') NOT NULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.5378317478862514) ISNULL))IS((((('1862409686')OR(NULL)))AND(x'16f9')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=206347018'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((NULL IN ()) AS INTEGER); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ' sz=1232186619 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ' sz=3423613 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CASE ''  WHEN '1469947195' THEN x'' END AS REAL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=238172738 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.024798082733213933)%(-9.7500139E7)) IN ((NULL IN (0.11971903532569927)), (x'8566' IN ('-564747850')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=134785634'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '0 sz=2104444738'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=-639857293'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.3051282138858554 IN ()))GLOB((0X591b8bc9 IN ()))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '-1769817426 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '1711388187 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((NULL)OR(NULL)))OR(-9.00013698E8)))LIKE((((('258993976')OR(NULL)))OR(NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=2102052642'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN -89543649 THEN '' END)<=((('787800223') BETWEEN ('') AND (x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ' sz=554411771 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) NOTNULL)) BETWEEN (((((0.6437271278276195)OR('2074430473')))AND(''))) AND (x'' COLLATE NOCASE)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '-1444079007 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '-747168979 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=417949497 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('%')==(((0.3156467907729352) NOTNULL))); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '-1799909129 sz=805054958 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((-1054335923)) BETWEEN (('+B_[')) AND (('')))) NOTNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ' sz=1186801360 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('LY') NOT NULL), ((NULL) NOT BETWEEN (0X62171d49) AND (0x93112b1)), ((x'')=(x'')), ((x'') IS TRUE), CASE WHEN '4sT2\r9⤳''' THEN '-870099121' ELSE NULL END, (NULL IN ()), CAST('#Bqyq' AS TEXT)))<(((0.11808013757380553 IN ()), (('Fჹ') NOTNULL), (('1390880887')IS NOT(0.6601254232108267)), ((((-1.884369548E9)OR(NULL)))OR(0.38352735940566984)), ((NULL) IS FALSE), CAST(x'' AS INTEGER), CASE ''  WHEN '1106321981' THEN x'' END))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE UPPER(CASE x''  WHEN 0.41230543305947176 THEN 0.6598719170219955 WHEN 0.6682657374629313 THEN 0Xffffffffc1281c4d WHEN x'cc708e75' THEN '' ELSE NULL END); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '0 sz=-1831523476'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '0 0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '973314514 -1202816450 sz=-703418040 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ' sz=-1163397200 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (('805054958') NOT NULL) THEN ((x'') NOTNULL) WHEN (+ (0.5816239857646794)) THEN '-151529881' WHEN x'a5da' COLLATE BINARY THEN x'' ELSE ('1398075222' IN (0X7efe281f, x'ef99')) END; -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((('881017325' IN ())) NOT NULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '718177989 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '663960595 sz=1205326913 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ' sz=439966607 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '0 -1557225099 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ' sz=1924047460 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CASE '-1344139975'  WHEN 'now' THEN 0.4221705191186338 ELSE NULL END AS INTEGER); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '463338144 2 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('183835076')-(CASE 0x4d15c343  WHEN '' THEN NULL ELSE '-1290818271' END)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-1891817721 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '0 sz=-1263229305 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '0 -1222053854 sz=1154382893 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE LIKELY(CAST(x'' AS BLOB)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '1489686144 sz=1799669582 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)GLOB(2015019957))) IS TRUE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '0 sz=1296902407'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=-1431062123'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-813322786 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((((('rVdA*'))>((0.8494699248552764)))) NOT BETWEEN (TYPEOF(DISTINCT x'')) AND ((0x305bb819 IN ()))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '-1489763053 sz=2019874070 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ' sz=-413702968 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '-2019295406 sz=-97500139'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '-1286121134 sz=15242342 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', '498291730 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '0 2144348757 sz=-1884369548 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', '-935124129 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '0 1709822780 sz=-757816055'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '2 sz=1401351309 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '0 sz=871823936 noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '2 sz=1068987626 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '0 sz=154859731 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((0X6bdb70e4 IN ('-1684277758')))OR((('-395207509') NOT BETWEEN (0xffffffffa4ecd73b) AND (x'')))))AND('!b8}HGkM')))AND(CASE WHEN NULL THEN '376369441' ELSE 0.7858069144438702 END)))AND(CASE 1.106321981E9  WHEN '-836565915' THEN 0.928578986991624 END)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) ISNULL)) IS TRUE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '747840375 sz=710155826'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'')) NOT BETWEEN (((('릕[>WW3]')>=(x'4013')))) AND ((((('1847851670', -1931866319, x'')) BETWEEN (('oU㖢GN1s', NULL, -1051247407)) AND ((0.793176032715653, 0.11808013757380553, 0.2144487102797924)))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ' sz=-1414347182'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('AD0\nFo', '-1388207893', '睂+''Z5w')) BETWEEN ((TYPEOF(DISTINCT x''), '1192167379', (('')-(-1.17215278E9)))) AND (('-1226387189', ((1772134511)<=('샏{mq*a')), CAST(0.3293350382556265 AS INTEGER)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE json_quote(NULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE COALESCE(DISTINCT (NOT (x'')), ((0.1660366772348758)+(x''))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=-1467756601'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', '2 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-1172152780 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', '2 0 sz=-257879141 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', '0 -97500139 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CAST('1878257633' AS TEXT) AS NUMERIC); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '-982107694 0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.5050036923074387)) NOT BETWEEN ((((((x'')OR(x'')))OR(x'')))) AND ((((('0.035782813445374484')) NOT BETWEEN ((x'')) AND ((x'')))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT ((((('T5 [Pj0')OR('1234485136')))OR(x'11d2')))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '1892118414 sz=219430178 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '0 sz=783034675'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-560440504 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=1348750611 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (json_array('\r|', '-285017421'))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '0 2'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '-1519963358 sz=1595768567 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('219377257') NOT BETWEEN (-1662964190) AND ('b&/-7#')))AND((('-1355624495') NOT BETWEEN (0.4424963706094408) AND ('0.7362452324555794')))))OR(((1.26130377E8) IS TRUE))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE TRIM(DISTINCT NULL, 0.990130395262014) COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=-179124614'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((SQLITE_SOURCE_ID())OR(NULL COLLATE NOCASE)))AND(('E^/' IN ('-1344139975')))))OR(((NULL) BETWEEN (NULL) AND (0.5275265249616642)))))OR((((x'9e96')) NOT BETWEEN ((NULL)) AND ((x''))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((1952598006 IN ()))AND((('.UFMqpOB⥋') BETWEEN (0.6602662869406631) AND (2011709324)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((NULL)<<(0.02463326743608485)))AND(0Xffffffffad8fcbcc COLLATE BINARY)))OR(CASE NULL  WHEN '417949497' THEN '1166219470' END)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((UNICODE('-811851994')) BETWEEN (load_extension('805054958')) AND (CAST(NULL AS NUMERIC))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '2 sz=-1983127037'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('-1431062123' IN ()))=(((((0.6722852645138079)AND(NULL)))OR('7|')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((NULL) BETWEEN (NULL) AND (NULL)))OR(((NULL)&('2144348757')))))OR(CASE WHEN '' THEN -450410612 WHEN NULL THEN NULL WHEN NULL THEN '5e⫴J9e|' WHEN '' THEN -1.857033969E9 WHEN x'' THEN 0xffffffff96e7667c END)))OR(((((((((NULL)OR(x'')))OR(NULL)))AND(1.106321981E9)))AND(0.7928038890251469)))))AND((NULL IN ()))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', '-836565915 sz=417949497 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE '-605430501' COLLATE RTRIM  WHEN (0x2fd125c7 IN ()) THEN x'' COLLATE BINARY END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=412280231 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-1809752660 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '-1533846990 2102052642 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '1058684853 sz=183835076 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-1892692401 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ' sz=1695382142 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((-673980264) BETWEEN (x'') AND ('-1521576714')))LIKE(((('-231742472'))>=((NULL))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (((NULL)&('1709822780')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '0 sz=1751510853'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ' sz=-2032537716 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ' sz=0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', '1924981563 -599436275 sz=-1304050276 noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '2 867665184 sz=2143731810'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ' sz=-586056746 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE HEX(DISTINCT ((((((((0xffffffffaf078384)OR(x'8648')))OR('jJi.G')))AND(NULL)))AND(NULL))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '1029053999 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((0.4448140267449985, NULL, NULL))!=((NULL, 0.4921831344280083, '')))) BETWEEN (1082564670) AND (CASE 'M-'  WHEN NULL THEN NULL ELSE NULL END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=-2143024281 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=-2067830324'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((NULL)<(0.11583350521757818)) THEN 0.2955437971738053 COLLATE BINARY WHEN (('32荒SM') IS TRUE) THEN TOTAL_CHANGES() WHEN ((NULL)*('m+0<	')) THEN (((x'')) BETWEEN (('')) AND ((x''))) ELSE (('-1560311540')>=('*X<xCW41G')) END; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '1730678920 sz=-1871592049 unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=1784486177 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=-1494010462'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ' sz=1405107043 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL COLLATE RTRIM)<<((('-1857033969')||(x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', '-453641248 sz=1896799773 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-976180435'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '0 -1521576714 sz=-1857033969'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '-1519123472 -586056746 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-2012140769 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-10971492'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '0 0 sz=-1280737869'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('-564747850')IS NOT('867665184'))))=(((- (x''))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('-1306824530')) NOT BETWEEN (('(G)L')) AND (('-2053656455')))) NOT BETWEEN (((('-2029363891')) BETWEEN ((x'')) AND (('1487139795')))) AND (CAST(x'' AS NUMERIC))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', '-1165663436 sz=1261844897'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('831763394')OR('\r|')))AND(NULL)))/(CASE WHEN x'' THEN x'' END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN 0.13767434947009483 THEN 1969369078 ELSE x'f2f5' END COLLATE RTRIM; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '0 sz=-1322695603 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ' sz=417949497 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=747573164 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((NULL) NOTNULL)  WHEN ('Lj' IN (NULL)) THEN ((0.7173125854878131) NOT BETWEEN (210588468) AND (1095851415)) WHEN (0.43014593998663486 IN ()) THEN NULLIF(0.40737382746912765, '瓪\n7H') WHEN x'' COLLATE NOCASE THEN '1701965628' COLLATE NOCASE WHEN (- (-2.52116271E8)) THEN (~ (581733521)) WHEN ((871823936) NOT BETWEEN (0.45847791927374903) AND (NULL)) THEN (NOT (0.7943593802445742)) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ' sz=-400222525 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((- (NULL)))LIKE((+ ('.#')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE SQLITE_COMPILEOPTION_GET(((NULL)>=(x''))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=1176128571 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '951470268 0 sz=-1942197227 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-976180435'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((IFNULL(x'', '-1176370708'))OR('876336117')))OR(0.5232381219969225)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('-498910716')&('&&'))) BETWEEN (('' IN (NULL, 0.21436370202669985))) AND ((('bE)#5aj\r')|('-938806551')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ' sz=2081421043 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE LIKELIHOOD(DISTINCT (('-1088326251')AND('1 ^[')), 0.001200959395739054); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '0 sz=-1207274575 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((NULL)LIKE('T')))AND((('') BETWEEN ('Z[') AND (0.012714905554312539)))))AND('')))OR(CASE WHEN 0.42929072478814734 THEN 0X3fb774ea ELSE 0.18196650803922443 END)))AND((((0.195236120180995)) NOT BETWEEN ((NULL)) AND (('1605953994'))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((('[]y<') BETWEEN ('0.43014593998663486') AND (0X1a924c63)) AS BLOB); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL)||('')) COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '4 -1703670855 sz=-2135751724 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((-2.25936608E8)) NOT BETWEEN (('2TU[m\nH>')) AND (('1519980338')))) ISNULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '-126625760 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('718177989' COLLATE RTRIM) NOT NULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE TYPEOF((('1643979922')GLOB(0x2c9d8ad3))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-182680480 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE LTRIM(LIKELIHOOD(NULL, 0.5113016306949988), CASE WHEN '*)' THEN x'' END); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0Xffffffffe2907e6e)) NOT BETWEEN ((CAST('MQ[M' AS BLOB))) AND ((((((NULL)OR(x'50a2')))OR(0.42409704597454434))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=1952598006'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '0 0'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0xffffffffde56a1b6) NOTNULL)) BETWEEN (0x347b3009) AND (((((((((x'')OR(-1.857033969E9)))OR(-228010015)))AND(x'b289')))OR('02EnzO')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', '2 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=400763718 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CAST(x'' AS INTEGER) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ' sz=1 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-2144348254 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=1140686125 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('a^OꈬB䉡Bh')IS(x'')))>(((NULL) NOT NULL))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((('I', 'z_3v옹,', '', NULL, x'')) BETWEEN ((0xffffffffd27b55c1, '0.5290123782669782', '', 0X543e0cfc, '353868163')) AND ((NULL, x'', NULL, NULL, '-1364395800'))) THEN CAST(x'71c5' AS TEXT) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ' sz=-2106585021 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ' sz=1106321981'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '2'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=-2135751724 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', '2 1817649466 sz=314231027 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((+ (NULL)))>=(NULL)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (('-1796854909')&('!S?'))  WHEN (('245842529') ISNULL) THEN ((0.853324955505454) BETWEEN ('') AND (NULL)) ELSE CAST(0.33765475410501267 AS TEXT) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '2 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST('-186412780' AS REAL) COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((-900013698)GLOB(x'82e7'))) ISNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((0x1b9997f6) BETWEEN (NULL) AND (0.6621682961052848))  WHEN x'58a3c48f' THEN CASE WHEN 'mT5ce&?' THEN NULL ELSE 'Fჹ' END ELSE CAST(NULL AS INTEGER) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=115662913 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-1796854909'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=376369441 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.6019578470796054) ISNULL))!=(((0.4137801089166394) NOT NULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '435616759 sz=655992998 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-2106585021 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '-384282043 sz=2057139875 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=774693236 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '0 sz=-900013698 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '1471706512 0 sz=718177989 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-1368187430 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '0'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=1319709264 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=1713819345 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=865746947 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 2ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=-1578223279 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-446256348 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '0 -2140433198 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', '-225936608 2 sz=2081421043'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE LOWER((x'' IN (0.49856077026960677))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((0.9741044674045164 IN (x'b51d')))AND(CASE WHEN NULL THEN 1.262904085E9 ELSE '7354108' END)))AND(((NULL) BETWEEN ('5e⫴J9e|') AND (x'')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '-285017421'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (UPPER(NULL) IN (highlight(970485190, 0.6682657374629313, 0.10210481075654454, '-1873516730'))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '4 sz=2107167341 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=1469947195 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN '-1763219844' THEN x'' END) ISNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ' sz=-1315487695 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (x'')); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0xea74261, NULL, '-1571255622'))>=((x'e533', x'', NULL))) COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '-878688186 -795475191 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-1891406494 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((0.8929113879472709) NOTNULL) AS NUMERIC); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (((0.668388809766073) NOT NULL))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN '1952598006' THEN x'' ELSE 0.2144487102797924 END) NOT BETWEEN (((NULL) ISNULL)) AND (((0.19457345524008218)&(0X2ffc29ee)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=-252116271'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((('[考'))==(('-1113728981'))))OR((((NULL, 0x58a3f3d3, -1296938390)) NOT BETWEEN (('HlOK', x'd4c9', '')) AND (('641104803', '', 0.8989263224346495))))))OR(CASE WHEN -9.35124129E8 THEN x'bcefaabc' ELSE 0X450a4680 END)))AND('1350769662')))AND(((NULL) BETWEEN ('') AND (x'27f4')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.8500669060762156) IS TRUE))<=((((('!b8}hgkm')AND('')))OR('#W2')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((DATE('-0.0', 'q', '2062177216', 0.8055145020276444, 0.6654833753721169))OR(((x'')-('-922389399')))))AND((~ (x'')))))AND((((('睂+''Z5w')OR(x'')))AND(954696035)))))AND(((x'81fd')>>('4^')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '948612954 sz=251039920'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE x''  WHEN 0.21716845594466738 THEN 0.1515016884779522 ELSE NULL END COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '396461613 sz=339035299 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE LOWER(((x'e0a7ffb6') ISNULL)); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '-275442394 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-1079860568 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=381532468'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-101946243 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '2 2 sz=852899408 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=-237981400 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'')) NOT BETWEEN ((x'')) AND ((NULL))) COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=572246265 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.09415555018825794)+(x'')) IN (CAST(NULL AS NUMERIC))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0X33941d0f) NOT NULL) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=1081676937 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '-1851350777 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE NULL  WHEN '586435373' THEN NULL END) ISNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ' sz=1729752618 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((-1955247582)-('')) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', '0 4 sz=131661354 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ' sz=-1383085108 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-384071599'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (((0.1499868945512095) NOT BETWEEN (NULL) AND (0.3609892642985876)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=958993207 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', '-406083786 1519980338 sz=1849766446'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=-1942495804 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((x'', '-1388195402', x'')) NOT BETWEEN ((x'', '阞&(', 0.454899544637573)) AND ((NULL, -925600190, 'lj\')))) IS TRUE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-1926805237'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((NULL) IS FALSE) THEN (('749028220') NOT BETWEEN (NULL) AND ('238172738')) ELSE (('-683612892') NOT BETWEEN (NULL) AND (0X21b3bd11)) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT ((+ (x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.6795780100339968 IN (0.9427059311843573, x'')))AND(x'c6bd')); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', '2 1459317828 noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '-900013698 -944182061 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'') BETWEEN (1183360569) AND ('-1552243543')) COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('641104803')) NOT BETWEEN ((CAST(0.5836652380055672 AS REAL))) AND ((NULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '245842529 0 sz=-1464916639 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE json(((NULL) NOT BETWEEN (-2.85017421E8) AND (NULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', ''); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', '0 sz=1081676937 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=726295893 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=557549382 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((+ (NULL)))AND((((('0.6123134062198156')AND('-2090027527')))OR('1266612331')))))AND(COALESCE('g4H8B7tzX', x'a96b'))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=898398560 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ' sz=-431591293 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=-1660309516 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((NULL))<>((x''))), CAST(-0.0 AS TEXT), ((((0.7943187244126386)OR(0.14454505635509296)))OR(NULL))))!=((1995343761 COLLATE BINARY, TYPEOF('a懲 UY><A0'), ((x'5ea2bf5d')IS(-1.59609345E9))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '-329839895 sz=1108805833 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '-1393449607'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('-529905793')&(NULL))) NOTNULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CAST(x'' AS BLOB) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=1277392096 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', '-944758805 sz=-2053482930'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=554411771'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '-198640643 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((2130585631 COLLATE NOCASE) NOT BETWEEN (CASE WHEN '-88750546' THEN x'' WHEN '0.8989263224346495' THEN NULL WHEN '471330695' THEN 1.713819345E9 END) AND (CASE x''  WHEN '35561419' THEN 0.318493138655502 WHEN x'' THEN NULL WHEN '867665184' THEN '-1357478614' ELSE x'8cb0' END)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=-872016622 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ' sz=1814267363 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ ('s_')); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.5816239857646794; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((NULL) IS TRUE))AND(((0x5a1551c5) NOT NULL))))OR(((x'') NOT NULL))))OR('f᭫NVoZ쵴')))OR((((x'2c03', NULL, 0.9327742235336847, '1234152794', '')) BETWEEN (('6⮃v^gip)n', 0.19220212220504784, 1.924981563E9, NULL, x'34ba')) AND (('', NULL, '0.5436992144973717', 0.8899022690425876, '585285018'))))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=2081421043 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('681826564')AND('1995738759')))AND(NULL)))&((((('0\n\nHj')OR(0.583874502051119)))AND(NULL)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((+ (''))) NOT BETWEEN ((((0.990130395262014))<=((0.7432412739134447)))) AND ((~ ('783034675')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '0 -285017421 sz=1621476338 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CAST(0.4526746438131357 AS TEXT) AS TEXT); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0xffffffffa28fc7d6))>((NULL))) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-84472031 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL COLLATE BINARY)IS NOT((((NULL))<=((-1677456204))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULLIF(HEX(DISTINCT ''), (x'' IN ())); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=183835076 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '4 sz=353028857 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (LIKELY(DISTINCT 0.8800295405267512) IN ((('Za*\0') BETWEEN ('i?}>c#') AND ('-900013698')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '672121680 sz=1590129620 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NULL IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 'R'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't1', '1222939253 sz=2088278556 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=-1097761601 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '2 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((1238855963)OR(0.4590017955264063)))AND(0X45921b06)))|(((NULL) NOT BETWEEN ('1238383078') AND (0.5673882483400472)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((0.3405933824545736) NOT BETWEEN (135420298) AND (x'')) AS REAL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=1721141227 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'')<(UPPER(x'8fc9'))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't0', '-336836147 unordered noskipscan'); -- 0ms;
INSERT OR ABORT INTO t1 VALUES (0.7432412739134447); -- 0ms;
PRAGMA stats; -- 0ms;
PRAGMA cache_spill; -- 0ms;
UPDATE OR ABORT t1 SET c0=NULL, c0=1691658198; -- 0ms;
UPDATE OR IGNORE t1 SET (c0)=(''); -- 0ms;
INSERT OR ABORT INTO t0 VALUES ('%-]', 0.7776928438609461); -- 0ms;
ANALYZE; -- 1ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT OR ABORT INTO t0(c56) VALUES (0Xffffffff89b854e3); -- 0ms;
INSERT OR IGNORE INTO t1(c0) VALUES (NULL) ON CONFLICT(c0) DO NOTHING; -- 0ms;
INSERT OR ROLLBACK INTO t1(c0) VALUES (0.8494699248552764); -- 0ms;
ROLLBACK TRANSACTION; -- 3ms;
INSERT OR IGNORE INTO t1(c0) VALUES (-9.44758805E8), (2.38172738E8), (''); -- 2ms;
INSERT OR FAIL INTO t1 VALUES ('ayQr'), (x''), (0.2618425416727119); -- 0ms;
ANALYZE; -- 0ms;
COMMIT; -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (NULL); -- 6ms;
COMMIT TRANSACTION; -- 0ms;
INSERT OR ROLLBACK INTO t0(c0) VALUES (NULL), (0.6341305296217731), (-935124129); -- 22ms;
UPDATE OR IGNORE t1 SET c0=x'' WHERE ((((((t1.c0)OR(t1.c0)))AND(0X2c8f0fac)))>>(NULL COLLATE NOCASE)); -- 0ms;
PRAGMA main.application_id; -- 0ms;
REINDEX; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '0 -945710060 unordered'); -- 0ms;
UPDATE OR IGNORE t0 SET (c0)=(NULL) WHERE -1.59609345E9; -- 0ms;
CREATE TEMP TABLE t2 (c0 INTEGER , FOREIGN KEY(c0) REFERENCES t2(c0) ON DELETE CASCADE ON UPDATE RESTRICT); -- 0ms;
END; -- 0ms;
PRAGMA wal_checkpoint(PASSIVE); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES ('(UhE*0)'), ('31964824'), (0.7157621013910427); -- 0ms;
INSERT OR IGNORE INTO t2 VALUES ('-252116271'); -- 0ms;
ANALYZE sqlite_master; -- 1ms;
PRAGMA temp.recursive_triggers; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
END; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT OR FAIL INTO t1(c0) VALUES (x''); -- 9ms;
INSERT OR ABORT INTO t0(c0) VALUES (-0.0), (x''), ('0.6395453848791509'); -- 0ms;
UPDATE t0 SET (c0)=(0.3293350382556265) WHERE CAST(((t0.c0)OR(t0.c0)) AS NUMERIC); -- 0ms;
PRAGMA journal_mode = DELETE; -- 0ms;
INSERT OR REPLACE INTO t2 VALUES (0X25f9a995); -- 0ms;
PRAGMA cache_spill = false; -- 0ms;
UPDATE OR IGNORE t0 SET (c0, c0)=('0.07637164881204095', -2106585021) WHERE (+ ((((t0.c0)) NOT BETWEEN ((t0.c0)) AND (('-1210970852'))))); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES (0.7996878327009459), (-2104575278), (0.00629072604436931); -- 0ms;
INSERT OR ABORT INTO t0 VALUES (0.5855538184506586); -- 0ms;
DELETE FROM t1; -- 0ms;
END TRANSACTION; -- 9ms;
END; -- 0ms;
PRAGMA legacy_file_format = true; -- 1ms;
UPDATE t0 SET c0=x'' WHERE ((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))) IS FALSE); -- 0ms;
INSERT OR IGNORE INTO t2 VALUES (0.018490389361977), (NULL), ('1711388187'), ('0.41250248640826137'), (0.18646478778304643); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
COMMIT; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR ABORT t1 SET c0='1363717480'; -- 0ms;
INSERT OR IGNORE INTO t2 VALUES (0.29805804648143597); -- 0ms;
INSERT OR FAIL INTO t0 VALUES (0.6477469213207854); -- 0ms;
INSERT OR IGNORE INTO t2(c0) VALUES (NULL); -- 0ms;
CREATE UNIQUE INDEX IF NOT EXISTS i28 ON t1(((((c0 IN (c0, c0))))>=((((c0) NOTNULL)))) COLLATE NOCASE ASC); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA temp.legacy_file_format = true; -- 0ms;
ANALYZE sqlite_master; -- 0ms;
ANALYZE; -- 1ms;
COMMIT; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT * FROM t0 CROSS JOIN t2 ON (+ (TRIM(t0.c0, t2.c0)));
SELECT ALL * FROM t0 CROSS JOIN t2 ON (+ (TRIM(t0.c0, t2.c0))) WHERE ((~ (((t2.c0)OR(t2.c0))))) UNION ALL SELECT ALL * FROM t0 CROSS JOIN t2 ON (+ (TRIM(t0.c0, t2.c0))) WHERE ((NOT ((~ (((t2.c0)OR(t2.c0))))))) UNION ALL SELECT * FROM t0 CROSS JOIN t2 ON (+ (TRIM(t0.c0, t2.c0))) WHERE ((((~ (((t2.c0)OR(t2.c0))))) ISNULL));
SELECT * FROM t0 CROSS JOIN t2 ON (+ (TRIM(t0.c0, t2.c0)));
SELECT DISTINCT t2.c0, t1.c0 FROM t0, t1, t2;
SELECT DISTINCT t2.c0, t1.c0 FROM t0, t1, t2 WHERE (t0.c0 COLLATE NOCASE) UNION SELECT DISTINCT t2.c0, t1.c0 FROM t0, t1, t2 WHERE ((NOT (t0.c0 COLLATE NOCASE))) UNION SELECT DISTINCT t2.c0, t1.c0 FROM t0, t1, t2 WHERE (((t0.c0 COLLATE NOCASE) ISNULL));
SELECT DISTINCT t2.c0, t1.c0 FROM t0, t1, t2;
SELECT t0.c0 FROM t1, t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t1, t0 WHERE (t1.c0) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t1, t0 WHERE ((NOT (t1.c0))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t1, t0 WHERE (((t1.c0) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t1, t0 GROUP BY t0.c0;
SELECT t1.c0, t0.c0 FROM t1, t2, t0 GROUP BY t1.c0, t0.c0;
SELECT ALL t1.c0, t0.c0 FROM t1, t2 NOT INDEXED, t0 GROUP BY t1.c0, t0.c0 HAVING (((t2.c0 IN ()))LIKE(TOTAL(t1.c0))) UNION ALL SELECT ALL t1.c0, t0.c0 FROM t1, t2, t0 GROUP BY t1.c0, t0.c0 HAVING (NOT ((((t2.c0 IN ()))LIKE(TOTAL(t1.c0))))) UNION ALL SELECT t1.c0, t0.c0 FROM t1, t2, t0 GROUP BY t1.c0, t0.c0 HAVING (((((t2.c0 IN ()))LIKE(TOTAL(t1.c0)))) ISNULL);
SELECT t1.c0, t0.c0 FROM t1, t2, t0 GROUP BY t1.c0, t0.c0;
SELECT ALL t1.c0, t0.c0 FROM t1, t2 NOT INDEXED, t0 GROUP BY t1.c0, t0.c0 HAVING (((t2.c0 IN ()))LIKE(TOTAL(t1.c0))) UNION ALL SELECT ALL t1.c0, t0.c0 FROM t1, t2, t0 GROUP BY t1.c0, t0.c0 HAVING (NOT ((((t2.c0 IN ()))LIKE(TOTAL(t1.c0))))) UNION ALL SELECT t1.c0, t0.c0 FROM t1, t2, t0 GROUP BY t1.c0, t0.c0 HAVING (((((t2.c0 IN ()))LIKE(TOTAL(t1.c0)))) ISNULL);
SELECT t1.c0, t0.c0 FROM t1, t2, t0 GROUP BY t1.c0, t0.c0;
SELECT ALL t2.c0 FROM t2;
SELECT t2.c0 FROM t2 WHERE (CAST('' COLLATE BINARY AS INTEGER)) UNION ALL SELECT t2.c0 FROM t2 WHERE ((NOT (CAST('' COLLATE BINARY AS INTEGER)))) UNION ALL SELECT t2.c0 FROM t2 WHERE (((CAST('' COLLATE BINARY AS INTEGER)) ISNULL));
SELECT ALL t2.c0 FROM t2;
SELECT DISTINCT t2.c0 FROM t2;
SELECT DISTINCT t2.c0 FROM t2 WHERE ((((0.4332994729732844)) NOT BETWEEN ((t2.c0)) AND (((t2.c0 IN ()))))) UNION SELECT DISTINCT t2.c0 FROM t2 WHERE ((NOT ((((0.4332994729732844)) NOT BETWEEN ((t2.c0)) AND (((t2.c0 IN ()))))))) UNION SELECT DISTINCT t2.c0 FROM t2 WHERE ((((((0.4332994729732844)) NOT BETWEEN ((t2.c0)) AND (((t2.c0 IN ()))))) ISNULL));
SELECT DISTINCT t2.c0 FROM t2;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t1.c0 FROM t1 WHERE (CASE WHEN (((0.10972898409472698)) NOT BETWEEN ((t1.c0)) AND ((t1.c0))) THEN ABS(t1.c0) ELSE json_object(t1.c0, t1.c0) END) GROUP BY t1.c0 UNION SELECT t1.c0 FROM t1 WHERE ((NOT (CASE WHEN (((0.10972898409472698)) NOT BETWEEN ((t1.c0)) AND ((t1.c0))) THEN ABS(t1.c0) ELSE json_object(t1.c0, t1.c0) END))) GROUP BY t1.c0 UNION SELECT ALL t1.c0 FROM t1 WHERE (((CASE WHEN (((0.10972898409472698)) NOT BETWEEN ((t1.c0)) AND ((t1.c0))) THEN ABS(t1.c0) ELSE json_object(t1.c0, t1.c0) END) ISNULL)) GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (((AVG(MIN(0.13960480360419159))) ISNULL) IN (COUNT(TOTAL(t0.c0)), COUNT(*))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT ((((AVG(MIN(0.13960480360419159))) ISNULL) IN (COUNT(TOTAL(t0.c0)), COUNT(*))))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (((((AVG(MIN(0.13960480360419159))) ISNULL) IN (COUNT(TOTAL(t0.c0)), COUNT(*)))) ISNULL);
SELECT t2.c0 FROM t2;
SELECT ALL t2.c0 FROM t2 WHERE ((((t2.c0)) BETWEEN ((t2.c0 COLLATE RTRIM)) AND ((((t2.c0)LIKE(t2.c0)))))) ORDER BY t2.c0  NULLS LAST;
SELECT t2.c0 FROM t2 WHERE ((NOT ((((t2.c0)) BETWEEN ((t2.c0 COLLATE RTRIM)) AND ((((t2.c0)LIKE(t2.c0)))))))) ORDER BY t2.c0  NULLS LAST;
SELECT t2.c0 FROM t2 WHERE ((((((t2.c0)) BETWEEN ((t2.c0 COLLATE RTRIM)) AND ((((t2.c0)LIKE(t2.c0)))))) ISNULL)) ORDER BY t2.c0  NULLS LAST;
SELECT t2.c0 FROM t2;
SELECT DISTINCT t2.c0, t1.c0 FROM t1, t0, t2;
SELECT DISTINCT t2.c0, t1.c0 FROM t1, t0, t2 WHERE (t2.c0) UNION SELECT DISTINCT t2.c0, t1.c0 FROM t1, t0, t2 WHERE ((NOT (t2.c0))) UNION SELECT DISTINCT t2.c0, t1.c0 FROM t1, t0, t2 WHERE (((t2.c0) ISNULL));
SELECT DISTINCT t2.c0, t1.c0 FROM t1, t0, t2;
SELECT t0.c0 FROM t2 NATURAL JOIN t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t2 NATURAL JOIN t0 WHERE ((((t0.c0, t2.c0, t0.c0)) NOT BETWEEN ((((t0.c0) NOT BETWEEN (t2.c0) AND (t0.c0)), ((t0.c0)AND(t0.c0)), ((t0.c0)GLOB(t2.c0)))) AND ((((t2.c0)IS NOT(t2.c0)), ((t2.c0) IS TRUE), ((((t2.c0)OR(t0.c0)))OR(t2.c0)))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t2 NATURAL JOIN t0 WHERE ((NOT ((((t0.c0, t2.c0, t0.c0)) NOT BETWEEN ((((t0.c0) NOT BETWEEN (t2.c0) AND (t0.c0)), ((t0.c0)AND(t0.c0)), ((t0.c0)GLOB(t2.c0)))) AND ((((t2.c0)IS NOT(t2.c0)), ((t2.c0) IS TRUE), ((((t2.c0)OR(t0.c0)))OR(t2.c0)))))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t2 NATURAL JOIN t0 WHERE ((((((t0.c0, t2.c0, t0.c0)) NOT BETWEEN ((((t0.c0) NOT BETWEEN (t2.c0) AND (t0.c0)), ((t0.c0)AND(t0.c0)), ((t0.c0)GLOB(t2.c0)))) AND ((((t2.c0)IS NOT(t2.c0)), ((t2.c0) IS TRUE), ((((t2.c0)OR(t0.c0)))OR(t2.c0)))))) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t2 NATURAL JOIN t0 GROUP BY t0.c0;
SELECT ALL t2.c0, t0.c0 FROM t0, t2 GROUP BY t2.c0, t0.c0;
SELECT t2.c0, t0.c0 FROM t0, t2 GROUP BY t2.c0, t0.c0 HAVING MAX(((((((((t0.c0)AND(t2.c0)))OR(t2.c0)))AND(t0.c0)))AND(t0.c0))) UNION ALL SELECT t2.c0, t0.c0 FROM t0, t2 GROUP BY t2.c0, t0.c0 HAVING (NOT (MAX(((((((((t0.c0)AND(t2.c0)))OR(t2.c0)))AND(t0.c0)))AND(t0.c0))))) UNION ALL SELECT ALL t2.c0, t0.c0 FROM t0, t2 GROUP BY t2.c0, t0.c0 HAVING ((MAX(((((((((t0.c0)AND(t2.c0)))OR(t2.c0)))AND(t0.c0)))AND(t0.c0)))) ISNULL);
SELECT ALL t2.c0, t0.c0 FROM t0, t2 GROUP BY t2.c0, t0.c0;
SELECT t2.c0, t0.c0 FROM t0, t2 GROUP BY t2.c0, t0.c0 HAVING MAX(((((((((t0.c0)AND(t2.c0)))OR(t2.c0)))AND(t0.c0)))AND(t0.c0))) UNION ALL SELECT t2.c0, t0.c0 FROM t0, t2 GROUP BY t2.c0, t0.c0 HAVING (NOT (MAX(((((((((t0.c0)AND(t2.c0)))OR(t2.c0)))AND(t0.c0)))AND(t0.c0))))) UNION ALL SELECT ALL t2.c0, t0.c0 FROM t0, t2 GROUP BY t2.c0, t0.c0 HAVING ((MAX(((((((((t0.c0)AND(t2.c0)))OR(t2.c0)))AND(t0.c0)))AND(t0.c0)))) ISNULL);
SELECT ALL t2.c0, t0.c0 FROM t0, t2 GROUP BY t2.c0, t0.c0;
SELECT MAX((((NOT (t2.c0)))AND(t2.c0))) FROM t2;
SELECT ALL t0.c0 FROM t0;
SELECT t0.c0 FROM t0 WHERE (UNLIKELY(CAST(t0.c0 AS NUMERIC))) UNION ALL SELECT t0.c0 FROM t0 WHERE ((NOT (UNLIKELY(CAST(t0.c0 AS NUMERIC))))) UNION ALL SELECT t0.c0 FROM t0 WHERE (((UNLIKELY(CAST(t0.c0 AS NUMERIC))) ISNULL));
SELECT ALL t0.c0 FROM t0;
SELECT DISTINCT * FROM t0, t2;
SELECT DISTINCT * FROM t0, t2 WHERE (CASE WHEN CAST(t2.c0 AS INTEGER) THEN ((((t2.c0)AND(t2.c0)))AND(t0.c0)) WHEN (t0.c0 IN (t0.c0, t2.c0)) THEN ((t2.c0)<<(t2.c0)) WHEN ((((((((((((t2.c0)AND(t0.c0)))AND(t2.c0)))AND(t2.c0)))OR(NULL)))OR(t0.c0)))AND(t2.c0)) THEN ((((((((((((t0.c0)OR(t2.c0)))AND(t2.c0)))AND(t0.c0)))AND(t2.c0)))AND(0xffffffffaf16852a)))AND(t0.c0)) END) UNION SELECT DISTINCT * FROM t0, t2 WHERE ((NOT (CASE WHEN CAST(t2.c0 AS INTEGER) THEN ((((t2.c0)AND(t2.c0)))AND(t0.c0)) WHEN (t0.c0 IN (t0.c0, t2.c0)) THEN ((t2.c0)<<(t2.c0)) WHEN ((((((((((((t2.c0)AND(t0.c0)))AND(t2.c0)))AND(t2.c0)))OR(NULL)))OR(t0.c0)))AND(t2.c0)) THEN ((((((((((((t0.c0)OR(t2.c0)))AND(t2.c0)))AND(t0.c0)))AND(t2.c0)))AND(0xffffffffaf16852a)))AND(t0.c0)) END))) UNION SELECT DISTINCT * FROM t0, t2 NOT INDEXED WHERE (((CASE WHEN CAST(t2.c0 AS INTEGER) THEN ((((t2.c0)AND(t2.c0)))AND(t0.c0)) WHEN (t0.c0 IN (t0.c0, t2.c0)) THEN ((t2.c0)<<(t2.c0)) WHEN ((((((((((((t2.c0)AND(t0.c0)))AND(t2.c0)))AND(t2.c0)))OR(NULL)))OR(t0.c0)))AND(t2.c0)) THEN ((((((((((((t0.c0)OR(t2.c0)))AND(t2.c0)))AND(t0.c0)))AND(t2.c0)))AND(0Xffffffffaf16852a)))AND(t0.c0)) END) ISNULL));
SELECT DISTINCT * FROM t0, t2;
SELECT ALL t2.c0, t0.c0 FROM t0 INDEXED BY i28, t2 GROUP BY t2.c0, t0.c0;
SELECT ALL t0.c0 FROM t1, t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t1, t0 GROUP BY t0.c0 HAVING t1.c0 UNION ALL SELECT t0.c0 FROM t1, t0 NOT INDEXED GROUP BY t0.c0 HAVING (NOT (t1.c0)) UNION ALL SELECT ALL t0.c0 FROM t1, t0 GROUP BY t0.c0 HAVING ((t1.c0) ISNULL);
SELECT ALL t0.c0 FROM t1, t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t1, t0 GROUP BY t0.c0 HAVING t1.c0 UNION ALL SELECT t0.c0 FROM t1, t0 NOT INDEXED GROUP BY t0.c0 HAVING (NOT (t1.c0)) UNION ALL SELECT ALL t0.c0 FROM t1, t0 GROUP BY t0.c0 HAVING ((t1.c0) ISNULL);
SELECT ALL t0.c0 FROM t1, t0 GROUP BY t0.c0;
SELECT * FROM t0;
SELECT * FROM t0 WHERE (((HEX(t0.c0)) IS FALSE)) UNION ALL SELECT ALL * FROM t0 WHERE ((NOT (((HEX(t0.c0)) IS FALSE)))) UNION ALL SELECT * FROM t0 WHERE (((((HEX(t0.c0)) IS FALSE)) ISNULL));
SELECT * FROM t0;
SELECT DISTINCT t1.c0, t0.c0 FROM t2, t0, t1;
SELECT DISTINCT t1.c0, t0.c0 FROM t2, t0, t1 WHERE ((CAST(t2.c0 AS TEXT) IN (((NULL)GLOB(t1.c0)), (NOT (t0.c0))))) UNION SELECT DISTINCT t1.c0, t0.c0 FROM t2, t0, t1 WHERE ((NOT ((CAST(t2.c0 AS TEXT) IN (((NULL)GLOB(t1.c0)), (NOT (t0.c0))))))) UNION SELECT DISTINCT t1.c0, t0.c0 FROM t2, t0, t1 WHERE ((((CAST(t2.c0 AS TEXT) IN (((NULL)GLOB(t1.c0)), (NOT (t0.c0))))) ISNULL));
SELECT DISTINCT t1.c0, t0.c0 FROM t2, t0, t1;
SELECT t2.c0 FROM t2 GROUP BY t2.c0;
SELECT t2.c0 FROM t2 WHERE (UPPER(((t2.c0) IS TRUE))) GROUP BY t2.c0 UNION SELECT t2.c0 FROM t2 WHERE ((NOT (UPPER(((t2.c0) IS TRUE))))) GROUP BY t2.c0 UNION SELECT ALL t2.c0 FROM t2 WHERE (((UPPER(((t2.c0) IS TRUE))) ISNULL)) GROUP BY t2.c0;
SELECT t2.c0 FROM t2 GROUP BY t2.c0;
SELECT t2.c0, t1.c0 FROM t1, t2 GROUP BY t2.c0, t1.c0;
SELECT t2.c0, t1.c0 FROM t1, t2 GROUP BY t2.c0, t1.c0 HAVING SUM(COUNT(MIN(AVG(SUM(SUM(t2.c0)))))) UNION ALL SELECT ALL t2.c0, t1.c0 FROM t1, t2 GROUP BY t2.c0, t1.c0 HAVING (NOT (SUM(COUNT(MIN(AVG(SUM(SUM(t2.c0)))))))) UNION ALL SELECT t2.c0, t1.c0 FROM t1, t2 GROUP BY t2.c0, t1.c0 HAVING ((SUM(COUNT(MIN(AVG(SUM(SUM(t2.c0))))))) ISNULL);
SELECT * FROM t0 INDEXED BY i28, t2, t1;
SELECT DISTINCT * FROM t1, t0;
SELECT DISTINCT * FROM t1, t0 WHERE (((t1.c0)||((((t1.c0))<>((t0.c0)))))) UNION SELECT DISTINCT * FROM t1, t0 WHERE ((NOT (((t1.c0)||((((t1.c0))!=((t0.c0)))))))) UNION SELECT DISTINCT * FROM t1, t0 WHERE (((((t1.c0)||((((t1.c0))!=((t0.c0)))))) ISNULL));
SELECT DISTINCT * FROM t1, t0;
SELECT t0.c0 FROM t0 NOT INDEXED GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE (UNLIKELY(DISTINCT NULL)) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT (UNLIKELY(DISTINCT NULL)))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE (((UNLIKELY(DISTINCT NULL)) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 NOT INDEXED GROUP BY t0.c0;
SELECT t2.c0, t1.c0 FROM t1 NATURAL JOIN t2 GROUP BY t2.c0, t1.c0;
SELECT ALL t2.c0, t1.c0 FROM t1 NATURAL JOIN t2 GROUP BY t2.c0, t1.c0 HAVING UNICODE(t2.c0 COLLATE RTRIM) UNION ALL SELECT t2.c0, t1.c0 FROM t1 NATURAL JOIN t2 GROUP BY t2.c0, t1.c0 HAVING (NOT (UNICODE(t2.c0 COLLATE RTRIM))) UNION ALL SELECT ALL t2.c0, t1.c0 FROM t1 NATURAL JOIN t2 GROUP BY t2.c0, t1.c0 HAVING ((UNICODE(t2.c0 COLLATE RTRIM)) ISNULL);
SELECT t2.c0, t1.c0 FROM t1 NATURAL JOIN t2 GROUP BY t2.c0, t1.c0;
SELECT ALL t2.c0, t1.c0 FROM t1 NATURAL JOIN t2 GROUP BY t2.c0, t1.c0 HAVING UNICODE(t2.c0 COLLATE RTRIM) UNION ALL SELECT t2.c0, t1.c0 FROM t1 NATURAL JOIN t2 GROUP BY t2.c0, t1.c0 HAVING (NOT (UNICODE(t2.c0 COLLATE RTRIM))) UNION ALL SELECT ALL t2.c0, t1.c0 FROM t1 NATURAL JOIN t2 GROUP BY t2.c0, t1.c0 HAVING ((UNICODE(t2.c0 COLLATE RTRIM)) ISNULL);
SELECT t2.c0, t1.c0 FROM t1 NATURAL JOIN t2 GROUP BY t2.c0, t1.c0;
SELECT ALL * FROM t0;
SELECT * FROM t0 WHERE (NULLIF(t0.c0, t0.c0) COLLATE BINARY) UNION ALL SELECT ALL * FROM t0 WHERE ((NOT (NULLIF(t0.c0, t0.c0) COLLATE BINARY))) UNION ALL SELECT * FROM t0 WHERE (((NULLIF(t0.c0, t0.c0) COLLATE BINARY) ISNULL));
SELECT ALL * FROM t0;
SELECT DISTINCT t1.c0 FROM t1;
SELECT DISTINCT t1.c0 FROM t1 WHERE (CAST(json_remove(t1.c0, t1.c0) AS INTEGER)) UNION SELECT DISTINCT t1.c0 FROM t1 WHERE ((NOT (CAST(json_remove(t1.c0, t1.c0) AS INTEGER)))) UNION SELECT DISTINCT t1.c0 FROM t1 WHERE (((CAST(json_remove(t1.c0, t1.c0) AS INTEGER)) ISNULL));
SELECT DISTINCT t1.c0 FROM t1;
SELECT t0.c0 FROM t2, t1, t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t2, t1, t0 WHERE ((((t2.c0)) NOT BETWEEN ((ABS(t0.c0))) AND ((((t2.c0) IS TRUE))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t2, t1, t0 WHERE ((NOT ((((t2.c0)) NOT BETWEEN ((ABS(t0.c0))) AND ((((t2.c0) IS TRUE))))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t2, t1, t0 WHERE ((((((t2.c0)) NOT BETWEEN ((ABS(t0.c0))) AND ((((t2.c0) IS TRUE))))) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t2, t1, t0 GROUP BY t0.c0;
SELECT t0.c0, t2.c0, t1.c0 FROM t2, t1 LEFT OUTER JOIN t0 ON SQLITE_VERSION() GROUP BY t0.c0, t2.c0, t1.c0;
SELECT t0.c0, t2.c0, t1.c0 FROM t2, t1 LEFT OUTER JOIN t0 ON SQLITE_VERSION() GROUP BY t0.c0, t2.c0, t1.c0 HAVING TOTAL(SUM(TOTAL(t0.c0))) UNION ALL SELECT t0.c0, t2.c0, t1.c0 FROM t2, t1 LEFT OUTER JOIN t0 ON SQLITE_VERSION() GROUP BY t0.c0, t2.c0, t1.c0 HAVING (NOT (TOTAL(SUM(TOTAL(t0.c0))))) UNION ALL SELECT ALL t0.c0, t2.c0, t1.c0 FROM t2, t1 LEFT OUTER JOIN t0 ON SQLITE_VERSION() GROUP BY t0.c0, t2.c0, t1.c0 HAVING ((TOTAL(SUM(TOTAL(t0.c0)))) ISNULL);
SELECT ALL * FROM t1, t2, t0;
SELECT * FROM t1, t2, t0 WHERE ((((+ (t0.c0)))<>(MAX(t2.c0, '	^', t0.c0, t0.c0)))) UNION ALL SELECT * FROM t1, t2, t0 WHERE ((NOT ((((+ (t0.c0)))<>(MAX(t2.c0, '	^', t0.c0, t0.c0)))))) UNION ALL SELECT ALL * FROM t1, t2, t0 WHERE ((((((+ (t0.c0)))!=(MAX(t2.c0, '	^', t0.c0, t0.c0)))) ISNULL));
SELECT ALL * FROM t1, t2, t0;
SELECT DISTINCT t1.c0 FROM t1 NOT INDEXED, t2;
SELECT DISTINCT t1.c0 FROM t1, t2 WHERE (((((t1.c0) BETWEEN ('') AND (t2.c0)))<=(t2.c0 COLLATE RTRIM))) UNION SELECT DISTINCT t1.c0 FROM t1, t2 WHERE ((NOT (((((t1.c0) BETWEEN ('') AND (t2.c0)))<=(t2.c0 COLLATE RTRIM))))) UNION SELECT DISTINCT t1.c0 FROM t1, t2 WHERE (((((((t1.c0) BETWEEN ('') AND (t2.c0)))<=(t2.c0 COLLATE RTRIM))) ISNULL));
SELECT DISTINCT t1.c0 FROM t1 NOT INDEXED, t2;
SELECT t2.c0 FROM t2 GROUP BY t2.c0;
SELECT ALL t2.c0 FROM t2 WHERE ((- (((t2.c0)IS(t2.c0))))) GROUP BY t2.c0 UNION SELECT ALL t2.c0 FROM t2 WHERE ((NOT ((- (((t2.c0)IS(t2.c0))))))) GROUP BY t2.c0 UNION SELECT t2.c0 FROM t2 WHERE ((((- (((t2.c0)IS(t2.c0))))) ISNULL)) GROUP BY t2.c0;
SELECT t2.c0 FROM t2 GROUP BY t2.c0;
SELECT t1.c0, t2.c0 FROM t1 LEFT OUTER JOIN t2 ON CAST(CASE t2.c0  WHEN t0.c0 THEN t0.c0 WHEN t1.c0 THEN t1.c0 WHEN t2.c0 THEN t1.c0 END AS NUMERIC) CROSS JOIN t0 ON (((((((((t0.c0 IN (t2.c0)))OR((~ (t2.c0)))))OR(CAST(t0.c0 AS NUMERIC))))OR(((t2.c0) BETWEEN (t1.c0) AND (t1.c0)))))AND(((t2.c0) NOT BETWEEN (t1.c0) AND (t2.c0)))) GROUP BY t1.c0, t2.c0;
SELECT ALL t1.c0, t2.c0 FROM t1 LEFT OUTER JOIN t2 ON CAST(CASE t2.c0  WHEN t0.c0 THEN t0.c0 WHEN t1.c0 THEN t1.c0 WHEN t2.c0 THEN t1.c0 END AS NUMERIC) CROSS JOIN t0 ON (((((((((t0.c0 IN (t2.c0)))OR((~ (t2.c0)))))OR(CAST(t0.c0 AS NUMERIC))))OR(((t2.c0) BETWEEN (t1.c0) AND (t1.c0)))))AND(((t2.c0) NOT BETWEEN (t1.c0) AND (t2.c0)))) GROUP BY t1.c0, t2.c0 HAVING GROUP_CONCAT(CAST(COUNT(*) AS INTEGER)) UNION ALL SELECT ALL t1.c0, t2.c0 FROM t1 LEFT OUTER JOIN t2 ON CAST(CASE t2.c0  WHEN t0.c0 THEN t0.c0 WHEN t1.c0 THEN t1.c0 WHEN t2.c0 THEN t1.c0 END AS NUMERIC) CROSS JOIN t0 ON (((((((((t0.c0 IN (t2.c0)))OR((~ (t2.c0)))))OR(CAST(t0.c0 AS NUMERIC))))OR(((t2.c0) BETWEEN (t1.c0) AND (t1.c0)))))AND(((t2.c0) NOT BETWEEN (t1.c0) AND (t2.c0)))) GROUP BY t1.c0, t2.c0 HAVING (NOT (GROUP_CONCAT(CAST(COUNT(*) AS INTEGER)))) UNION ALL SELECT t1.c0, t2.c0 FROM t1 LEFT OUTER JOIN t2 ON CAST(CASE t2.c0  WHEN t0.c0 THEN t0.c0 WHEN t1.c0 THEN t1.c0 WHEN t2.c0 THEN t1.c0 END AS NUMERIC) CROSS JOIN t0 ON (((((((((t0.c0 IN (t2.c0)))OR((~ (t2.c0)))))OR(CAST(t0.c0 AS NUMERIC))))OR(((t2.c0) BETWEEN (t1.c0) AND (t1.c0)))))AND(((t2.c0) NOT BETWEEN (t1.c0) AND (t2.c0)))) GROUP BY t1.c0, t2.c0 HAVING ((GROUP_CONCAT(CAST(COUNT(*) AS INTEGER))) ISNULL);
SELECT t2.c0 FROM t2, t1;
SELECT t2.c0 FROM t2, t1 WHERE (t2.c0) UNION ALL SELECT t2.c0 FROM t2, t1 WHERE ((NOT (t2.c0))) UNION ALL SELECT t2.c0 FROM t2, t1 WHERE (((t2.c0) ISNULL));
SELECT t2.c0 FROM t2, t1;
SELECT DISTINCT * FROM t0, t1;
SELECT DISTINCT * FROM t0, t1 WHERE (t1.c0) UNION SELECT DISTINCT * FROM t0, t1 WHERE ((NOT (t1.c0))) UNION SELECT DISTINCT * FROM t0, t1 WHERE (((t1.c0) ISNULL));
SELECT DISTINCT * FROM t0, t1;
SELECT ALL t2.c0 FROM t0 FULL OUTER JOIN t2 ON (((TRIM(DISTINCT t0.c0)))>=(((((t0.c0, 0.2302419907603671, t0.c0))<=((t2.c0, -683785124, 0.44364848706576954)))))) GROUP BY t2.c0;
SELECT t2.c0 FROM t0 FULL OUTER JOIN t2 ON (((TRIM(DISTINCT t0.c0)))>=(((((t0.c0, 0.2302419907603671, t0.c0))<=((t2.c0, -683785124, 0.44364848706576954)))))) WHERE (CASE (- (t2.c0))  WHEN 0.035782813445374484 THEN x'' END) GROUP BY t2.c0 UNION SELECT ALL t2.c0 FROM t0 FULL OUTER JOIN t2 ON (((TRIM(DISTINCT t0.c0)))>=(((((t0.c0, 0.2302419907603671, t0.c0))<=((t2.c0, -683785124, 0.44364848706576954)))))) WHERE ((NOT (CASE (- (t2.c0))  WHEN 0.035782813445374484 THEN x'' END))) GROUP BY t2.c0 UNION SELECT ALL t2.c0 FROM t0 FULL OUTER JOIN t2 ON (((TRIM(DISTINCT t0.c0)))>=(((((t0.c0, 0.2302419907603671, t0.c0))<=((t2.c0, -683785124, 0.44364848706576954)))))) WHERE (((CASE (- (t2.c0))  WHEN 0.035782813445374484 THEN x'' END) ISNULL)) GROUP BY t2.c0;
SELECT ALL t2.c0 FROM t0 FULL OUTER JOIN t2 ON (((TRIM(DISTINCT t0.c0)))>=(((((t0.c0, 0.2302419907603671, t0.c0))<=((t2.c0, -683785124, 0.44364848706576954)))))) GROUP BY t2.c0;
SELECT ALL t0.c0 FROM t0 INNER JOIN t2 ON ((t2.c0 COLLATE BINARY) BETWEEN (((t0.c0) NOT NULL)) AND (t0.c0)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 INNER JOIN t2 ON ((t2.c0 COLLATE BINARY) BETWEEN (((t0.c0) NOT NULL)) AND (t0.c0)) GROUP BY t0.c0 HAVING NULLIF((x'13c2' IN (t0.c0, t2.c0)), NULL) UNION ALL SELECT ALL t0.c0 FROM t0 INNER JOIN t2 ON ((t2.c0 COLLATE BINARY) BETWEEN (((t0.c0) NOT NULL)) AND (t0.c0)) GROUP BY t0.c0 HAVING (NOT (NULLIF((x'13c2' IN (t0.c0, t2.c0)), NULL))) UNION ALL SELECT t0.c0 FROM t0 INNER JOIN t2 ON ((t2.c0 COLLATE BINARY) BETWEEN (((t0.c0) NOT NULL)) AND (t0.c0)) GROUP BY t0.c0 HAVING ((NULLIF((x'13c2' IN (t0.c0, t2.c0)), NULL)) ISNULL);
SELECT ALL t0.c0 FROM t0 INNER JOIN t2 ON ((t2.c0 COLLATE BINARY) BETWEEN (((t0.c0) NOT NULL)) AND (t0.c0)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 INNER JOIN t2 ON ((t2.c0 COLLATE BINARY) BETWEEN (((t0.c0) NOT NULL)) AND (t0.c0)) GROUP BY t0.c0 HAVING NULLIF((x'13c2' IN (t0.c0, t2.c0)), NULL) UNION ALL SELECT ALL t0.c0 FROM t0 INNER JOIN t2 ON ((t2.c0 COLLATE BINARY) BETWEEN (((t0.c0) NOT NULL)) AND (t0.c0)) GROUP BY t0.c0 HAVING (NOT (NULLIF((x'13c2' IN (t0.c0, t2.c0)), NULL))) UNION ALL SELECT t0.c0 FROM t0 INNER JOIN t2 ON ((t2.c0 COLLATE BINARY) BETWEEN (((t0.c0) NOT NULL)) AND (t0.c0)) GROUP BY t0.c0 HAVING ((NULLIF((x'13c2' IN (t0.c0, t2.c0)), NULL)) ISNULL);
SELECT ALL t0.c0 FROM t0 INNER JOIN t2 ON ((t2.c0 COLLATE BINARY) BETWEEN (((t0.c0) NOT NULL)) AND (t0.c0)) GROUP BY t0.c0;
SELECT * FROM t2, t0;
SELECT * FROM t2, t0 WHERE ((((t0.c0, t0.c0, t2.c0))<=((HEX(t2.c0), ((((t2.c0)OR(t2.c0)))AND(t0.c0)), (((t2.c0, t0.c0, t0.c0))==((t2.c0, t2.c0, t2.c0))))))) UNION ALL SELECT * FROM t2, t0 WHERE ((NOT ((((t0.c0, t0.c0, t2.c0))<=((HEX(t2.c0), ((((t2.c0)OR(t2.c0)))AND(t0.c0)), (((t2.c0, t0.c0, t0.c0))==((t2.c0, t2.c0, t2.c0))))))))) UNION ALL SELECT ALL * FROM t2, t0 WHERE ((((((t0.c0, t0.c0, t2.c0))<=((HEX(t2.c0), ((((t2.c0)OR(t2.c0)))AND(t0.c0)), (((t2.c0, t0.c0, t0.c0))=((t2.c0, t2.c0, t2.c0))))))) ISNULL));
SELECT * FROM t2, t0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (((((t0.c0)/(t0.c0))) BETWEEN (((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))) AND (((((t0.c0)OR(t0.c0)))AND(t0.c0))))) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (((((t0.c0)/(t0.c0))) BETWEEN (((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))) AND (((((t0.c0)OR(t0.c0)))AND(t0.c0))))))) UNION SELECT DISTINCT * FROM t0 WHERE (((((((t0.c0)/(t0.c0))) BETWEEN (((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))) AND (((((t0.c0)OR(t0.c0)))AND(t0.c0))))) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT t1.c0, t0.c0 FROM t1, t0, t2 GROUP BY t1.c0, t0.c0;
SELECT t1.c0, t0.c0 FROM t1, t0 NOT INDEXED, t2 WHERE (LOWER(DISTINCT ((t2.c0)!=(t2.c0)))) GROUP BY t1.c0, t0.c0 UNION SELECT ALL t1.c0, t0.c0 FROM t1, t0, t2 WHERE ((NOT (LOWER(DISTINCT ((t2.c0)!=(t2.c0)))))) GROUP BY t1.c0, t0.c0 UNION SELECT t1.c0, t0.c0 FROM t1, t0, t2 WHERE (((LOWER(DISTINCT ((t2.c0)!=(t2.c0)))) ISNULL)) GROUP BY t1.c0, t0.c0;
SELECT t1.c0, t0.c0 FROM t1, t0, t2 GROUP BY t1.c0, t0.c0;
SELECT ALL t1.c0, t0.c0 FROM t1, t0 GROUP BY t1.c0, t0.c0;
SELECT ALL t1.c0, t0.c0 FROM t1, t0 GROUP BY t1.c0, t0.c0 HAVING MIN(MIN(t0.c0)) UNION ALL SELECT t1.c0, t0.c0 FROM t1, t0 GROUP BY t1.c0, t0.c0 HAVING (NOT (MIN(MIN(t0.c0)))) UNION ALL SELECT t1.c0, t0.c0 FROM t1, t0 GROUP BY t1.c0, t0.c0 HAVING ((MIN(MIN(t0.c0))) ISNULL);
SELECT t0.c0 FROM t0;
SELECT ALL t0.c0 FROM t0 WHERE (((((t0.c0) NOTNULL))AND(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))) UNION ALL SELECT ALL t0.c0 FROM t0 WHERE ((NOT (((((t0.c0) NOTNULL))AND(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))))) UNION ALL SELECT ALL t0.c0 FROM t0 WHERE (((((((t0.c0) NOTNULL))AND(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))) ISNULL));
SELECT t0.c0 FROM t0;
SELECT DISTINCT t1.c0, t2.c0, t0.c0 FROM t2 CROSS JOIN t0 ON CAST((~ (t2.c0)) AS REAL) RIGHT OUTER JOIN t1 ON (((CAST(t2.c0 AS INTEGER), (t1.c0 IN ()), ((t2.c0) NOTNULL)))>=((CASE WHEN x'c09b' THEN t2.c0 WHEN t0.c0 THEN t2.c0 WHEN t1.c0 THEN t2.c0 ELSE t1.c0 END, CASE WHEN t0.c0 THEN t1.c0 WHEN t0.c0 THEN t1.c0 WHEN t0.c0 THEN t2.c0 ELSE t2.c0 END, ((t1.c0) BETWEEN (t0.c0) AND (t2.c0)))));
SELECT DISTINCT t1.c0, t2.c0, t0.c0 FROM t2 CROSS JOIN t0 ON CAST((~ (t2.c0)) AS REAL) RIGHT OUTER JOIN t1 ON (((CAST(t2.c0 AS INTEGER), (t1.c0 IN ()), ((t2.c0) NOTNULL)))>=((CASE WHEN x'c09b' THEN t2.c0 WHEN t0.c0 THEN t2.c0 WHEN t1.c0 THEN t2.c0 ELSE t1.c0 END, CASE WHEN t0.c0 THEN t1.c0 WHEN t0.c0 THEN t1.c0 WHEN t0.c0 THEN t2.c0 ELSE t2.c0 END, ((t1.c0) BETWEEN (t0.c0) AND (t2.c0))))) WHERE ((((t0.c0 IN ())) IS FALSE)) UNION SELECT DISTINCT t1.c0, t2.c0, t0.c0 FROM t2 CROSS JOIN t0 ON CAST((~ (t2.c0)) AS REAL) RIGHT OUTER JOIN t1 ON (((CAST(t2.c0 AS INTEGER), (t1.c0 IN ()), ((t2.c0) NOTNULL)))>=((CASE WHEN x'c09b' THEN t2.c0 WHEN t0.c0 THEN t2.c0 WHEN t1.c0 THEN t2.c0 ELSE t1.c0 END, CASE WHEN t0.c0 THEN t1.c0 WHEN t0.c0 THEN t1.c0 WHEN t0.c0 THEN t2.c0 ELSE t2.c0 END, ((t1.c0) BETWEEN (t0.c0) AND (t2.c0))))) WHERE ((NOT ((((t0.c0 IN ())) IS FALSE)))) UNION SELECT DISTINCT t1.c0, t2.c0, t0.c0 FROM t2 CROSS JOIN t0 ON CAST((~ (t2.c0)) AS REAL) RIGHT OUTER JOIN t1 ON (((CAST(t2.c0 AS INTEGER), (t1.c0 IN ()), ((t2.c0) NOTNULL)))>=((CASE WHEN x'c09b' THEN t2.c0 WHEN t0.c0 THEN t2.c0 WHEN t1.c0 THEN t2.c0 ELSE t1.c0 END, CASE WHEN t0.c0 THEN t1.c0 WHEN t0.c0 THEN t1.c0 WHEN t0.c0 THEN t2.c0 ELSE t2.c0 END, ((t1.c0) BETWEEN (t0.c0) AND (t2.c0))))) WHERE ((((((t0.c0 IN ())) IS FALSE)) ISNULL));
SELECT DISTINCT t1.c0, t2.c0, t0.c0 FROM t2 CROSS JOIN t0 ON CAST((~ (t2.c0)) AS REAL) RIGHT OUTER JOIN t1 ON (((CAST(t2.c0 AS INTEGER), (t1.c0 IN ()), ((t2.c0) NOTNULL)))>=((CASE WHEN x'c09b' THEN t2.c0 WHEN t0.c0 THEN t2.c0 WHEN t1.c0 THEN t2.c0 ELSE t1.c0 END, CASE WHEN t0.c0 THEN t1.c0 WHEN t0.c0 THEN t1.c0 WHEN t0.c0 THEN t2.c0 ELSE t2.c0 END, ((t1.c0) BETWEEN (t0.c0) AND (t2.c0)))));
SELECT ALL t0.c0, t2.c0 FROM t0, t1, t2 GROUP BY t0.c0, t2.c0;
SELECT t0.c0, t2.c0 FROM t0, t1, t2 WHERE (0Xffffffffc1281c4d) GROUP BY t0.c0, t2.c0 UNION SELECT ALL t0.c0, t2.c0 FROM t0, t1, t2 WHERE ((NOT (0xffffffffc1281c4d))) GROUP BY t0.c0, t2.c0 UNION SELECT ALL t0.c0, t2.c0 FROM t0, t1, t2 WHERE (((0Xffffffffc1281c4d) ISNULL)) GROUP BY t0.c0, t2.c0;
SELECT ALL t0.c0, t2.c0 FROM t0, t1, t2 GROUP BY t0.c0, t2.c0;
SELECT ALL t0.c0 FROM t0, t2 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0, t2 GROUP BY t0.c0 HAVING GROUP_CONCAT(SUM(t2.c0)) UNION ALL SELECT t0.c0 FROM t0, t2 GROUP BY t0.c0 HAVING (NOT (GROUP_CONCAT(SUM(t2.c0)))) UNION ALL SELECT ALL t0.c0 FROM t0, t2 GROUP BY t0.c0 HAVING ((GROUP_CONCAT(SUM(t2.c0))) ISNULL);
SELECT MIN((((t2.c0)) BETWEEN ((((t2.c0) BETWEEN (t0.c0) AND (t0.c0)))) AND ((((t2.c0) NOT BETWEEN (t0.c0) AND ('&&')))))) FROM t2, t0 ORDER BY (((t2.c0)GLOB(t0.c0)) IN ()) ASC  NULLS LAST;
SELECT * FROM t1;
SELECT * FROM t1 WHERE ((((t1.c0)) NOT BETWEEN ((((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)))) AND ((UPPER(DISTINCT t1.c0))))) UNION ALL SELECT ALL * FROM t1 WHERE ((NOT ((((t1.c0)) NOT BETWEEN ((((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)))) AND ((UPPER(DISTINCT t1.c0))))))) UNION ALL SELECT ALL * FROM t1 WHERE ((((((t1.c0)) NOT BETWEEN ((((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)))) AND ((UPPER(DISTINCT t1.c0))))) ISNULL));
SELECT * FROM t1;
SELECT DISTINCT t1.c0 FROM t1, t0;
SELECT DISTINCT t1.c0 FROM t1, t0 WHERE (NULL) UNION SELECT DISTINCT t1.c0 FROM t1, t0 WHERE ((NOT (NULL))) UNION SELECT DISTINCT t1.c0 FROM t1, t0 WHERE (((NULL) ISNULL));
SELECT DISTINCT t1.c0 FROM t1, t0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 WHERE ((((((((((((NULL)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))))AND(((t0.c0) BETWEEN (x'') AND (t0.c0)))))OR(NULL)))AND(((t0.c0)>>(t0.c0)))))AND(IFNULL(DISTINCT t0.c0, x'9e14')))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT ((((((((((((NULL)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))))AND(((t0.c0) BETWEEN (x'') AND (t0.c0)))))OR(NULL)))AND(((t0.c0)>>(t0.c0)))))AND(IFNULL(DISTINCT t0.c0, x'9e14')))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((((((((((((((NULL)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))))AND(((t0.c0) BETWEEN (x'') AND (t0.c0)))))OR(NULL)))AND(((t0.c0)>>(t0.c0)))))AND(IFNULL(DISTINCT t0.c0, x'9e14')))) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t1.c0, t0.c0 FROM t0, t1 GROUP BY t1.c0, t0.c0;
SELECT ALL t1.c0, t0.c0 FROM t0, t1 GROUP BY t1.c0, t0.c0 HAVING MAX(((COUNT(*)) NOT BETWEEN (MAX(AVG(t0.c0))) AND (t1.c0))) UNION ALL SELECT ALL t1.c0, t0.c0 FROM t0, t1 GROUP BY t1.c0, t0.c0 HAVING (NOT (MAX(((COUNT(*)) NOT BETWEEN (MAX(AVG(t0.c0))) AND (t1.c0))))) UNION ALL SELECT ALL t1.c0, t0.c0 FROM t0, t1 GROUP BY t1.c0, t0.c0 HAVING ((MAX(((COUNT(*)) NOT BETWEEN (MAX(AVG(t0.c0))) AND (t1.c0)))) ISNULL);
SELECT ALL SUM(((CASE t1.c0  WHEN t1.c0 THEN t2.c0 ELSE t2.c0 END) NOT BETWEEN ((- (t2.c0))) AND ((((t2.c0, t1.c0, t2.c0))!=((t1.c0, t1.c0, t2.c0)))))) FROM t2, t1;
SELECT t1.c0, t0.c0 FROM t0 RIGHT OUTER JOIN t1 ON ((CASE '駑+ik^9N蛅'  WHEN NULL THEN t0.c0 END)&((+ (t2.c0)))) RIGHT OUTER JOIN t2 ON ((CAST(t2.c0 AS INTEGER))/(t1.c0));
SELECT DISTINCT t2.c0, t1.c0 FROM t1, t2;
SELECT DISTINCT t2.c0, t1.c0 FROM t1, t2 WHERE (0.804031496936918) UNION SELECT DISTINCT t2.c0, t1.c0 FROM t1, t2 WHERE ((NOT (0.804031496936918))) UNION SELECT DISTINCT t2.c0, t1.c0 FROM t1, t2 WHERE (((0.804031496936918) ISNULL));
SELECT DISTINCT t2.c0, t1.c0 FROM t1, t2;
SELECT ALL t1.c0 FROM t2, t0, t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t2, t0, t1 WHERE (t2.c0) GROUP BY t1.c0 UNION SELECT t1.c0 FROM t2, t0, t1 WHERE ((NOT (t2.c0))) GROUP BY t1.c0 UNION SELECT ALL t1.c0 FROM t2, t0, t1 WHERE (((t2.c0) ISNULL)) GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t2, t0, t1 GROUP BY t1.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING MIN(COUNT(*)) UNION ALL SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING (NOT (MIN(COUNT(*)))) UNION ALL SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING ((MIN(COUNT(*))) ISNULL);
SELECT ALL t2.c0, t1.c0 FROM t0, t2, t1;
SELECT ALL t2.c0, t1.c0 FROM t0, t2, t1 WHERE ((CAST(t2.c0 AS NUMERIC) IN ((+ (x'')), t1.c0))) UNION ALL SELECT t2.c0, t1.c0 FROM t0, t2, t1 WHERE ((NOT ((CAST(t2.c0 AS NUMERIC) IN ((+ (x'')), t1.c0))))) UNION ALL SELECT t2.c0, t1.c0 FROM t0, t2, t1 WHERE ((((CAST(t2.c0 AS NUMERIC) IN ((+ (x'')), t1.c0))) ISNULL));
SELECT ALL t2.c0, t1.c0 FROM t0, t2, t1;
SELECT DISTINCT * FROM t2, t1;
SELECT DISTINCT * FROM t2, t1 WHERE (CAST(((((t1.c0)OR(t2.c0)))AND(t2.c0)) AS TEXT)) UNION SELECT DISTINCT * FROM t2 NOT INDEXED, t1 WHERE ((NOT (CAST(((((t1.c0)OR(t2.c0)))AND(t2.c0)) AS TEXT)))) UNION SELECT DISTINCT * FROM t2, t1 WHERE (((CAST(((((t1.c0)OR(t2.c0)))AND(t2.c0)) AS TEXT)) ISNULL));
SELECT DISTINCT * FROM t2, t1;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 WHERE (0.11193310889767527) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT (0.11193310889767527))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE (((0.11193310889767527) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((GROUP_CONCAT(t0.c0)) NOTNULL) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (((GROUP_CONCAT(t0.c0)) NOTNULL))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((((GROUP_CONCAT(t0.c0)) NOTNULL)) ISNULL);
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((GROUP_CONCAT(t0.c0)) NOTNULL) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (((GROUP_CONCAT(t0.c0)) NOTNULL))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((((GROUP_CONCAT(t0.c0)) NOTNULL)) ISNULL);
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL * FROM t2, t1, t0;
SELECT ALL * FROM t2, t1, t0 WHERE (highlight((((t0.c0)) NOT BETWEEN ((t1.c0)) AND ((t0.c0))), t1.c0, ((t0.c0) BETWEEN (t1.c0) AND (t2.c0)), CASE WHEN t2.c0 THEN t2.c0 ELSE t2.c0 END)) UNION ALL SELECT ALL * FROM t2, t1, t0 WHERE ((NOT (highlight((((t0.c0)) NOT BETWEEN ((t1.c0)) AND ((t0.c0))), t1.c0, ((t0.c0) BETWEEN (t1.c0) AND (t2.c0)), CASE WHEN t2.c0 THEN t2.c0 ELSE t2.c0 END)))) UNION ALL SELECT * FROM t2, t1, t0 WHERE (((highlight((((t0.c0)) NOT BETWEEN ((t1.c0)) AND ((t0.c0))), t1.c0, ((t0.c0) BETWEEN (t1.c0) AND (t2.c0)), CASE WHEN t2.c0 THEN t2.c0 ELSE t2.c0 END)) ISNULL));
SELECT ALL * FROM t2, t1, t0;
SELECT DISTINCT * FROM t2;
SELECT DISTINCT * FROM t2 WHERE (json_array(((((((((t2.c0)AND(t2.c0)))AND(t2.c0)))OR(t2.c0)))AND(t2.c0)), json_array_length(t2.c0, ''))) UNION SELECT DISTINCT * FROM t2 WHERE ((NOT (json_array(((((((((t2.c0)AND(t2.c0)))AND(t2.c0)))OR(t2.c0)))AND(t2.c0)), json_array_length(t2.c0, ''))))) UNION SELECT DISTINCT * FROM t2 WHERE (((json_array(((((((((t2.c0)AND(t2.c0)))AND(t2.c0)))OR(t2.c0)))AND(t2.c0)), json_array_length(t2.c0, ''))) ISNULL));
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 WHERE (CAST(CAST(t0.c0 AS REAL) AS BLOB)) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT (CAST(CAST(t0.c0 AS REAL) AS BLOB)))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE (((CAST(CAST(t0.c0 AS REAL) AS BLOB)) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t2.c0, t1.c0, t0.c0 FROM t1, t2 FULL OUTER JOIN t0 ON ((((t0.c0)>=(t2.c0))) BETWEEN (t2.c0 COLLATE BINARY) AND (TYPEOF(DISTINCT t2.c0))) GROUP BY t2.c0, t1.c0, t0.c0;
SELECT t2.c0, t1.c0, t0.c0 FROM t1, t2 FULL OUTER JOIN t0 ON ((((t0.c0)>=(t2.c0))) BETWEEN (t2.c0 COLLATE BINARY) AND (TYPEOF(DISTINCT t2.c0))) GROUP BY t2.c0, t1.c0, t0.c0 HAVING ((((((COUNT(*))OR(TOTAL(MIN(SUM(t0.c0))))))OR(MAX(x''))))+(GROUP_CONCAT(0.05768250021345678))) UNION ALL SELECT ALL t2.c0, t1.c0, t0.c0 FROM t1, t2 FULL OUTER JOIN t0 ON ((((t0.c0)>=(t2.c0))) BETWEEN (t2.c0 COLLATE BINARY) AND (TYPEOF(DISTINCT t2.c0))) GROUP BY t2.c0, t1.c0, t0.c0 HAVING (NOT (((((((COUNT(*))OR(TOTAL(MIN(SUM(t0.c0))))))OR(MAX(x''))))+(GROUP_CONCAT(0.05768250021345678))))) UNION ALL SELECT t2.c0, t1.c0, t0.c0 FROM t1, t2 FULL OUTER JOIN t0 ON ((((t0.c0)>=(t2.c0))) BETWEEN (t2.c0 COLLATE BINARY) AND (TYPEOF(DISTINCT t2.c0))) GROUP BY t2.c0, t1.c0, t0.c0 HAVING ((((((((COUNT(*))OR(TOTAL(MIN(SUM(t0.c0))))))OR(MAX(x''))))+(GROUP_CONCAT(0.05768250021345678)))) ISNULL);
SELECT t1.c0 FROM t1, t0;
SELECT t1.c0 FROM t1, t0 WHERE ((LTRIM(t0.c0, t0.c0) IN ())) UNION ALL SELECT t1.c0 FROM t1, t0 WHERE ((NOT ((LTRIM(t0.c0, t0.c0) IN ())))) UNION ALL SELECT t1.c0 FROM t1, t0 WHERE ((((LTRIM(t0.c0, t0.c0) IN ())) ISNULL));
SELECT t1.c0 FROM t1, t0;
SELECT DISTINCT t0.c0, t1.c0 FROM t1, t0;
SELECT DISTINCT t0.c0, t1.c0 FROM t1, t0 WHERE ((((t0.c0 IN (t0.c0, t0.c0)))>=(((((t0.c0)AND(t1.c0)))OR(t1.c0))))) UNION SELECT DISTINCT t0.c0, t1.c0 FROM t1, t0 WHERE ((NOT ((((t0.c0 IN (t0.c0, t0.c0)))>=(((((t0.c0)AND(t1.c0)))OR(t1.c0))))))) UNION SELECT DISTINCT t0.c0, t1.c0 FROM t1, t0 WHERE ((((((t0.c0 IN (t0.c0, t0.c0)))>=(((((t0.c0)AND(t1.c0)))OR(t1.c0))))) ISNULL));
SELECT DISTINCT t0.c0, t1.c0 FROM t1, t0;
SELECT ALL t2.c0 FROM t2, t1 GROUP BY t2.c0;
SELECT ALL t2.c0 FROM t2, t1 WHERE ((- ((- (t1.c0))))) GROUP BY t2.c0 UNION SELECT t2.c0 FROM t2, t1 WHERE ((NOT ((- ((- (t1.c0))))))) GROUP BY t2.c0 UNION SELECT ALL t2.c0 FROM t2, t1 WHERE ((((- ((- (t1.c0))))) ISNULL)) GROUP BY t2.c0;
SELECT ALL t2.c0 FROM t2, t1 GROUP BY t2.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING GROUP_CONCAT(((MAX(MAX(t0.c0))) BETWEEN (MAX(t0.c0)) AND (t0.c0))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (GROUP_CONCAT(((MAX(MAX(t0.c0))) BETWEEN (MAX(t0.c0)) AND (t0.c0))))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((GROUP_CONCAT(((MAX(MAX(t0.c0))) BETWEEN (MAX(t0.c0)) AND (t0.c0)))) ISNULL);
SELECT ALL SUM(((t2.c0)=(t2.c0)) COLLATE NOCASE) FROM t2, t0;
SELECT * FROM t0 CROSS JOIN t1 ON ((CASE WHEN t1.c0 THEN x'58f6' END) NOT NULL) FULL OUTER JOIN t2 ON CASE WHEN ((t1.c0) BETWEEN (t0.c0) AND (t1.c0)) THEN ((t1.c0) BETWEEN (t1.c0) AND (t0.c0)) END;
SELECT ALL * FROM t0 CROSS JOIN t1 ON ((CASE WHEN t1.c0 THEN x'58f6' END) NOT NULL) FULL OUTER JOIN t2 ON CASE WHEN ((t1.c0) BETWEEN (t0.c0) AND (t1.c0)) THEN ((t1.c0) BETWEEN (t1.c0) AND (t0.c0)) END WHERE ((((t2.c0) NOT BETWEEN (t1.c0) AND (1970361806)) IN ())) UNION ALL SELECT ALL * FROM t0 CROSS JOIN t1 ON ((CASE WHEN t1.c0 THEN x'58f6' END) NOT NULL) FULL OUTER JOIN t2 ON CASE WHEN ((t1.c0) BETWEEN (t0.c0) AND (t1.c0)) THEN ((t1.c0) BETWEEN (t1.c0) AND (t0.c0)) END WHERE ((NOT ((((t2.c0) NOT BETWEEN (t1.c0) AND (1970361806)) IN ())))) UNION ALL SELECT * FROM t0 CROSS JOIN t1 ON ((CASE WHEN t1.c0 THEN x'58f6' END) NOT NULL) FULL OUTER JOIN t2 ON CASE WHEN ((t1.c0) BETWEEN (t0.c0) AND (t1.c0)) THEN ((t1.c0) BETWEEN (t1.c0) AND (t0.c0)) END WHERE ((((((t2.c0) NOT BETWEEN (t1.c0) AND (1970361806)) IN ())) ISNULL));
SELECT * FROM t0 CROSS JOIN t1 ON ((CASE WHEN t1.c0 THEN x'58f6' END) NOT NULL) FULL OUTER JOIN t2 ON CASE WHEN ((t1.c0) BETWEEN (t0.c0) AND (t1.c0)) THEN ((t1.c0) BETWEEN (t1.c0) AND (t0.c0)) END;
SELECT DISTINCT * FROM t0, t2, t1;
SELECT DISTINCT * FROM t0, t2, t1 WHERE (TRIM(((t1.c0)<<('-900013698')), t1.c0)) UNION SELECT DISTINCT * FROM t0, t2, t1 WHERE ((NOT (TRIM(((t1.c0)<<('-900013698')), t1.c0)))) UNION SELECT DISTINCT * FROM t0, t2, t1 WHERE (((TRIM(((t1.c0)<<('-900013698')), t1.c0)) ISNULL));
SELECT DISTINCT * FROM t0, t2, t1;
SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0;
SELECT t2.c0 FROM t2 WHERE (CAST(0.18980550242215577 AS INTEGER)) GROUP BY t2.c0 UNION SELECT t2.c0 FROM t2 WHERE ((NOT (CAST(0.18980550242215577 AS INTEGER)))) GROUP BY t2.c0 UNION SELECT t2.c0 FROM t2 WHERE (((CAST(0.18980550242215577 AS INTEGER)) ISNULL)) GROUP BY t2.c0;
SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING AVG((COUNT(t0.c0) IN ())) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (AVG((COUNT(t0.c0) IN ())))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((AVG((COUNT(t0.c0) IN ()))) ISNULL);
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING AVG((COUNT(t0.c0) IN ())) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (AVG((COUNT(t0.c0) IN ())))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((AVG((COUNT(t0.c0) IN ()))) ISNULL);
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL * FROM t0, t2, t1;
SELECT * FROM t0, t2, t1 WHERE (CAST(CAST(t0.c0 AS INTEGER) AS REAL)) ORDER BY (+ (CASE t2.c0  WHEN t1.c0 THEN t1.c0 END))  NULLS FIRST;
SELECT ALL * FROM t0, t2, t1 WHERE ((NOT (CAST(CAST(t0.c0 AS INTEGER) AS REAL)))) ORDER BY (+ (CASE t2.c0  WHEN t1.c0 THEN t1.c0 END))  NULLS FIRST;
SELECT * FROM t0, t2, t1 WHERE (((CAST(CAST(t0.c0 AS INTEGER) AS REAL)) ISNULL)) ORDER BY (+ (CASE t2.c0  WHEN t1.c0 THEN t1.c0 END))  NULLS FIRST;
SELECT ALL * FROM t0, t2, t1;
SELECT DISTINCT t1.c0 FROM t1;
SELECT DISTINCT t1.c0 FROM t1 WHERE (((CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 END) BETWEEN ((~ (NULL))) AND ((((t1.c0, t1.c0, t1.c0))>=((t1.c0, t1.c0, t1.c0)))))) UNION SELECT DISTINCT t1.c0 FROM t1 WHERE ((NOT (((CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 END) BETWEEN ((~ (NULL))) AND ((((t1.c0, t1.c0, t1.c0))>=((t1.c0, t1.c0, t1.c0)))))))) UNION SELECT DISTINCT t1.c0 FROM t1 WHERE (((((CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 END) BETWEEN ((~ (NULL))) AND ((((t1.c0, t1.c0, t1.c0))>=((t1.c0, t1.c0, t1.c0)))))) ISNULL));
SELECT DISTINCT t1.c0 FROM t1;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 WHERE (t0.c0) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT (t0.c0))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE (((t0.c0) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t1.c0, t2.c0 FROM t1, t2, t0 GROUP BY t1.c0, t2.c0;
SELECT t1.c0, t2.c0 FROM t1, t2, t0 GROUP BY t1.c0, t2.c0 HAVING (NOT (((AVG(2.130585631E9)) BETWEEN (0.949989533045702) AND (t2.c0)))) UNION ALL SELECT t1.c0, t2.c0 FROM t1, t2, t0 GROUP BY t1.c0, t2.c0 HAVING (NOT ((NOT (((AVG(2.130585631E9)) BETWEEN (0.949989533045702) AND (t2.c0)))))) UNION ALL SELECT ALL t1.c0, t2.c0 FROM t1, t2, t0 GROUP BY t1.c0, t2.c0 HAVING (((NOT (((AVG(2.130585631E9)) BETWEEN (0.949989533045702) AND (t2.c0))))) ISNULL);
SELECT ALL t1.c0, t2.c0 FROM t1, t2, t0 GROUP BY t1.c0, t2.c0;
SELECT t1.c0, t2.c0 FROM t1, t2, t0 GROUP BY t1.c0, t2.c0 HAVING (NOT (((AVG(2.130585631E9)) BETWEEN (0.949989533045702) AND (t2.c0)))) UNION ALL SELECT t1.c0, t2.c0 FROM t1, t2, t0 GROUP BY t1.c0, t2.c0 HAVING (NOT ((NOT (((AVG(2.130585631E9)) BETWEEN (0.949989533045702) AND (t2.c0)))))) UNION ALL SELECT ALL t1.c0, t2.c0 FROM t1, t2, t0 GROUP BY t1.c0, t2.c0 HAVING (((NOT (((AVG(2.130585631E9)) BETWEEN (0.949989533045702) AND (t2.c0))))) ISNULL);
SELECT ALL t1.c0, t2.c0 FROM t1, t2, t0 GROUP BY t1.c0, t2.c0;
SELECT SUM(((x'') BETWEEN (t1.c0) AND (0.988040138028478)) COLLATE BINARY) FROM t1, t0 ORDER BY (((((((((((t1.c0))>=((t1.c0))))OR(((t0.c0)>(t0.c0)))))AND(NULLIF(DISTINCT t1.c0, t1.c0))))OR((t1.c0 IN ()))))AND(((t1.c0) NOT NULL)))  NULLS LAST;
SELECT ALL * FROM t1;
SELECT ALL * FROM t1 WHERE ((t1.c0 IN ()) COLLATE NOCASE) UNION ALL SELECT * FROM t1 WHERE ((NOT ((t1.c0 IN ()) COLLATE NOCASE))) UNION ALL SELECT ALL * FROM t1 WHERE ((((t1.c0 IN ()) COLLATE NOCASE) ISNULL));
SELECT ALL * FROM t1;
SELECT DISTINCT * FROM t1 NATURAL JOIN t2;
SELECT DISTINCT * FROM t1 NATURAL JOIN t2 WHERE (CASE t2.c0  WHEN ((t1.c0) BETWEEN (t2.c0) AND ('2106456098')) THEN CAST(t1.c0 AS NUMERIC) END) UNION SELECT DISTINCT * FROM t1 NATURAL JOIN t2 WHERE ((NOT (CASE t2.c0  WHEN ((t1.c0) BETWEEN (t2.c0) AND ('2106456098')) THEN CAST(t1.c0 AS NUMERIC) END))) UNION SELECT DISTINCT * FROM t1 NATURAL JOIN t2 WHERE (((CASE t2.c0  WHEN ((t1.c0) BETWEEN (t2.c0) AND ('2106456098')) THEN CAST(t1.c0 AS NUMERIC) END) ISNULL));
SELECT DISTINCT * FROM t1 NATURAL JOIN t2;
SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0;
SELECT t2.c0 FROM t2 WHERE (SQLITE_COMPILEOPTION_USED(TRIM(DISTINCT t2.c0))) GROUP BY t2.c0 UNION SELECT ALL t2.c0 FROM t2 WHERE ((NOT (SQLITE_COMPILEOPTION_USED(TRIM(DISTINCT t2.c0))))) GROUP BY t2.c0 UNION SELECT t2.c0 FROM t2 WHERE (((SQLITE_COMPILEOPTION_USED(TRIM(DISTINCT t2.c0))) ISNULL)) GROUP BY t2.c0;
SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING (~ (TOTAL(t1.c0))) UNION ALL SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING (NOT ((~ (TOTAL(t1.c0))))) UNION ALL SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING (((~ (TOTAL(t1.c0)))) ISNULL);
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING (~ (TOTAL(t1.c0))) UNION ALL SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING (NOT ((~ (TOTAL(t1.c0))))) UNION ALL SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING (((~ (TOTAL(t1.c0)))) ISNULL);
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t0.c0, t1.c0 FROM t0, t1 CROSS JOIN t2 ON (((t1.c0)) BETWEEN (((~ (t1.c0)))) AND ((((0X5a990f32)<=(t2.c0)))));
SELECT t0.c0, t1.c0 FROM t0, t1 CROSS JOIN t2 ON (((t1.c0)) BETWEEN (((~ (t1.c0)))) AND ((((0x5a990f32)<=(t2.c0))))) WHERE ((+ (((t2.c0)||(t1.c0))))) UNION ALL SELECT ALL t0.c0, t1.c0 FROM t0, t1 CROSS JOIN t2 ON (((t1.c0)) BETWEEN (((~ (t1.c0)))) AND ((((0X5a990f32)<=(t2.c0))))) WHERE ((NOT ((+ (((t2.c0)||(t1.c0))))))) UNION ALL SELECT ALL t0.c0, t1.c0 FROM t0, t1 CROSS JOIN t2 ON (((t1.c0)) BETWEEN (((~ (t1.c0)))) AND ((((0x5a990f32)<=(t2.c0))))) WHERE ((((+ (((t2.c0)||(t1.c0))))) ISNULL));
SELECT t0.c0, t1.c0 FROM t0, t1 CROSS JOIN t2 ON (((t1.c0)) BETWEEN (((~ (t1.c0)))) AND ((((0X5a990f32)<=(t2.c0)))));
SELECT DISTINCT * FROM t0 CROSS JOIN t1 ON (~ (t1.c0));
SELECT DISTINCT * FROM t0 CROSS JOIN t1 ON (~ (t1.c0)) WHERE (CAST((((t1.c0)) NOT BETWEEN ((t1.c0)) AND ((t0.c0))) AS NUMERIC)) UNION SELECT DISTINCT * FROM t0 CROSS JOIN t1 ON (~ (t1.c0)) WHERE ((NOT (CAST((((t1.c0)) NOT BETWEEN ((t1.c0)) AND ((t0.c0))) AS NUMERIC)))) UNION SELECT DISTINCT * FROM t0 CROSS JOIN t1 ON (~ (t1.c0)) WHERE (((CAST((((t1.c0)) NOT BETWEEN ((t1.c0)) AND ((t0.c0))) AS NUMERIC)) ISNULL));
SELECT DISTINCT * FROM t0 CROSS JOIN t1 ON (~ (t1.c0));
SELECT t0.c0 FROM t0, t1, t2 GROUP BY t0.c0;
SELECT t0.c0 FROM t0, t1, t2 WHERE (((((((t2.c0)OR(t1.c0)))OR(t2.c0)))==(t0.c0 COLLATE BINARY))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0, t1, t2 NOT INDEXED WHERE ((NOT (((((((t2.c0)OR(t1.c0)))OR(t2.c0)))==(t0.c0 COLLATE BINARY))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0, t1, t2 WHERE (((((((((t2.c0)OR(t1.c0)))OR(t2.c0)))==(t0.c0 COLLATE BINARY))) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0, t1, t2 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0, t1 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0, t1 GROUP BY t0.c0 HAVING CAST(GROUP_CONCAT(SUM(t1.c0)) AS TEXT) UNION ALL SELECT ALL t0.c0 FROM t0, t1 GROUP BY t0.c0 HAVING (NOT (CAST(GROUP_CONCAT(SUM(t1.c0)) AS TEXT))) UNION ALL SELECT ALL t0.c0 FROM t0, t1 GROUP BY t0.c0 HAVING ((CAST(GROUP_CONCAT(SUM(t1.c0)) AS TEXT)) ISNULL);
SELECT ALL * FROM t2, t0;
SELECT ALL * FROM t2, t0 WHERE ((((t0.c0) IS FALSE) IN ())) UNION ALL SELECT * FROM t2, t0 WHERE ((NOT ((((t0.c0) IS FALSE) IN ())))) UNION ALL SELECT ALL * FROM t2 NOT INDEXED, t0 WHERE ((((((t0.c0) IS FALSE) IN ())) ISNULL));
SELECT ALL * FROM t2, t0;
SELECT DISTINCT t2.c0 FROM t2;
SELECT DISTINCT t2.c0 FROM t2 WHERE (t2.c0) UNION SELECT DISTINCT t2.c0 FROM t2 WHERE ((NOT (t2.c0))) UNION SELECT DISTINCT t2.c0 FROM t2 WHERE (((t2.c0) ISNULL));
SELECT DISTINCT t2.c0 FROM t2;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t1.c0 FROM t1 WHERE (load_extension((((t1.c0))>((t1.c0))), ((t1.c0)<>(t1.c0)))) GROUP BY t1.c0 UNION SELECT ALL t1.c0 FROM t1 WHERE ((NOT (load_extension((((t1.c0))>((t1.c0))), ((t1.c0)!=(t1.c0)))))) GROUP BY t1.c0 UNION SELECT ALL t1.c0 FROM t1 WHERE (((load_extension((((t1.c0))>((t1.c0))), ((t1.c0)<>(t1.c0)))) ISNULL)) GROUP BY t1.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t0.c0 FROM t0, t1 GROUP BY t0.c0;
SELECT t0.c0 FROM t0, t1 GROUP BY t0.c0 HAVING SUM(t1.c0) COLLATE BINARY UNION ALL SELECT t0.c0 FROM t0, t1 GROUP BY t0.c0 HAVING (NOT (SUM(t1.c0) COLLATE BINARY)) UNION ALL SELECT t0.c0 FROM t0, t1 GROUP BY t0.c0 HAVING ((SUM(t1.c0) COLLATE BINARY) ISNULL);
SELECT t0.c0 FROM t0, t1 GROUP BY t0.c0;
SELECT t0.c0 FROM t0, t1 GROUP BY t0.c0 HAVING SUM(t1.c0) COLLATE BINARY UNION ALL SELECT t0.c0 FROM t0, t1 GROUP BY t0.c0 HAVING (NOT (SUM(t1.c0) COLLATE BINARY)) UNION ALL SELECT t0.c0 FROM t0, t1 GROUP BY t0.c0 HAVING ((SUM(t1.c0) COLLATE BINARY) ISNULL);
SELECT t0.c0 FROM t0, t1 GROUP BY t0.c0;
SELECT ALL SUM(((((((((t1.c0)OR(t1.c0)))OR(t1.c0)))AND((~ (t1.c0)))))AND(CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END))) FROM t1;
SELECT ALL t2.c0 FROM t2;
SELECT ALL t2.c0 FROM t2 WHERE (CASE WHEN (((t2.c0, t2.c0, t2.c0)) NOT BETWEEN ((t2.c0, t2.c0, t2.c0)) AND ((t2.c0, t2.c0, t2.c0))) THEN ((((((((((((t2.c0)AND(t2.c0)))OR(t2.c0)))OR(t2.c0)))AND(NULL)))AND(t2.c0)))OR(t2.c0)) ELSE t2.c0 END) UNION ALL SELECT ALL t2.c0 FROM t2 WHERE ((NOT (CASE WHEN (((t2.c0, t2.c0, t2.c0)) NOT BETWEEN ((t2.c0, t2.c0, t2.c0)) AND ((t2.c0, t2.c0, t2.c0))) THEN ((((((((((((t2.c0)AND(t2.c0)))OR(t2.c0)))OR(t2.c0)))AND(NULL)))AND(t2.c0)))OR(t2.c0)) ELSE t2.c0 END))) UNION ALL SELECT ALL t2.c0 FROM t2 WHERE (((CASE WHEN (((t2.c0, t2.c0, t2.c0)) NOT BETWEEN ((t2.c0, t2.c0, t2.c0)) AND ((t2.c0, t2.c0, t2.c0))) THEN ((((((((((((t2.c0)AND(t2.c0)))OR(t2.c0)))OR(t2.c0)))AND(NULL)))AND(t2.c0)))OR(t2.c0)) ELSE t2.c0 END) ISNULL));
SELECT ALL t2.c0 FROM t2;
SELECT DISTINCT t1.c0 FROM t2, t1;
SELECT DISTINCT t1.c0 FROM t2, t1 WHERE (((((LIKE(t1.c0, t2.c0))OR(((t2.c0) NOT NULL))))AND(TRIM(DISTINCT t2.c0, t1.c0)))) UNION SELECT DISTINCT t1.c0 FROM t2, t1 WHERE ((NOT (((((LIKE(t1.c0, t2.c0))OR(((t2.c0) NOT NULL))))AND(TRIM(DISTINCT t2.c0, t1.c0)))))) UNION SELECT DISTINCT t1.c0 FROM t2, t1 WHERE (((((((LIKE(t1.c0, t2.c0))OR(((t2.c0) NOT NULL))))AND(TRIM(DISTINCT t2.c0, t1.c0)))) ISNULL));
SELECT DISTINCT t1.c0 FROM t2, t1;
SELECT ALL t1.c0, t2.c0 FROM t2 NATURAL JOIN t1 GROUP BY t1.c0, t2.c0;
SELECT t1.c0, t2.c0 FROM t2 NATURAL JOIN t1 WHERE ((((t1.c0, t2.c0, t2.c0)) NOT BETWEEN ((t1.c0, t2.c0, t1.c0)) AND ((t1.c0, t2.c0, t2.c0))) COLLATE BINARY) GROUP BY t1.c0, t2.c0 UNION SELECT t1.c0, t2.c0 FROM t2 NATURAL JOIN t1 WHERE ((NOT ((((t1.c0, t2.c0, t2.c0)) NOT BETWEEN ((t1.c0, t2.c0, t1.c0)) AND ((t1.c0, t2.c0, t2.c0))) COLLATE BINARY))) GROUP BY t1.c0, t2.c0 UNION SELECT ALL t1.c0, t2.c0 FROM t2 NATURAL JOIN t1 WHERE ((((((t1.c0, t2.c0, t2.c0)) NOT BETWEEN ((t1.c0, t2.c0, t1.c0)) AND ((t1.c0, t2.c0, t2.c0))) COLLATE BINARY) ISNULL)) GROUP BY t1.c0, t2.c0;
SELECT ALL t1.c0, t2.c0 FROM t2 NATURAL JOIN t1 GROUP BY t1.c0, t2.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING t0.c0 UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (t0.c0)) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((t0.c0) ISNULL);
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING t0.c0 UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (t0.c0)) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((t0.c0) ISNULL);
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL * FROM t0, t1;
SELECT * FROM t0, t1 WHERE (RTRIM(CASE t1.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t1.c0 END)) UNION ALL SELECT * FROM t0, t1 WHERE ((NOT (RTRIM(CASE t1.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t1.c0 END)))) UNION ALL SELECT * FROM t0, t1 NOT INDEXED WHERE (((RTRIM(CASE t1.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t1.c0 END)) ISNULL));
SELECT ALL * FROM t0, t1;
SELECT DISTINCT t2.c0 FROM t2;
SELECT DISTINCT t2.c0 FROM t2 WHERE (CAST(t2.c0 AS REAL) COLLATE RTRIM) UNION SELECT DISTINCT t2.c0 FROM t2 WHERE ((NOT (CAST(t2.c0 AS REAL) COLLATE RTRIM))) UNION SELECT DISTINCT t2.c0 FROM t2 WHERE (((CAST(t2.c0 AS REAL) COLLATE RTRIM) ISNULL));
SELECT DISTINCT t2.c0 FROM t2;
SELECT ALL t1.c0, t2.c0 FROM t1, t2 GROUP BY t1.c0, t2.c0;
SELECT ALL t1.c0, t2.c0 FROM t1, t2 WHERE ((((t1.c0 IN ()))!=(CAST(t1.c0 AS NUMERIC)))) GROUP BY t1.c0, t2.c0 UNION SELECT ALL t1.c0, t2.c0 FROM t1, t2 WHERE ((NOT ((((t1.c0 IN ()))<>(CAST(t1.c0 AS NUMERIC)))))) GROUP BY t1.c0, t2.c0 UNION SELECT ALL t1.c0, t2.c0 FROM t1, t2 WHERE ((((((t1.c0 IN ()))<>(CAST(t1.c0 AS NUMERIC)))) ISNULL)) GROUP BY t1.c0, t2.c0;
SELECT ALL t1.c0, t2.c0 FROM t1, t2 GROUP BY t1.c0, t2.c0;
SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0;
SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0 HAVING (((((t2.c0) IS TRUE)))<((SUM(COUNT(COUNT(t2.c0)))))) UNION ALL SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0 HAVING (NOT ((((((t2.c0) IS TRUE)))<((SUM(COUNT(COUNT(t2.c0)))))))) UNION ALL SELECT t2.c0 FROM t2 GROUP BY t2.c0 HAVING (((((((t2.c0) IS TRUE)))<((SUM(COUNT(COUNT(t2.c0))))))) ISNULL);
SELECT ALL t1.c0, t2.c0 FROM t2 NATURAL JOIN t1;
SELECT t1.c0, t2.c0 FROM t2 NATURAL JOIN t1 WHERE (CAST(CAST(t1.c0 AS NUMERIC) AS INTEGER)) UNION ALL SELECT t1.c0, t2.c0 FROM t2 NATURAL JOIN t1 WHERE ((NOT (CAST(CAST(t1.c0 AS NUMERIC) AS INTEGER)))) UNION ALL SELECT t1.c0, t2.c0 FROM t2 NATURAL JOIN t1 WHERE (((CAST(CAST(t1.c0 AS NUMERIC) AS INTEGER)) ISNULL));
SELECT ALL t1.c0, t2.c0 FROM t2 NATURAL JOIN t1;
SELECT DISTINCT * FROM t2, t1, t0;
SELECT DISTINCT * FROM t2, t1, t0 WHERE ((~ (NULL))) UNION SELECT DISTINCT * FROM t2, t1, t0 WHERE ((NOT ((~ (NULL))))) UNION SELECT DISTINCT * FROM t2, t1, t0 WHERE ((((~ (NULL))) ISNULL));
SELECT DISTINCT * FROM t2, t1, t0;
SELECT t1.c0, t0.c0 FROM t1, t0, t2 GROUP BY t1.c0, t0.c0;
SELECT t1.c0, t0.c0 FROM t1, t0, t2 WHERE (CASE WHEN CASE -685007534  WHEN t1.c0 THEN t0.c0 ELSE t1.c0 END THEN (('747573164')AND(t2.c0)) ELSE SQLITE_COMPILEOPTION_USED(t0.c0) END) GROUP BY t1.c0, t0.c0 UNION SELECT t1.c0, t0.c0 FROM t1, t0, t2 WHERE ((NOT (CASE WHEN CASE -685007534  WHEN t1.c0 THEN t0.c0 ELSE t1.c0 END THEN (('747573164')AND(t2.c0)) ELSE SQLITE_COMPILEOPTION_USED(t0.c0) END))) GROUP BY t1.c0, t0.c0 UNION SELECT t1.c0, t0.c0 FROM t1, t0, t2 WHERE (((CASE WHEN CASE -685007534  WHEN t1.c0 THEN t0.c0 ELSE t1.c0 END THEN (('747573164')AND(t2.c0)) ELSE SQLITE_COMPILEOPTION_USED(t0.c0) END) ISNULL)) GROUP BY t1.c0, t0.c0;
SELECT t1.c0, t0.c0 FROM t1, t0, t2 GROUP BY t1.c0, t0.c0;
SELECT t2.c0 FROM t2 LEFT OUTER JOIN t1 ON (('2.') NOT NULL) GROUP BY t2.c0;
SELECT t2.c0 FROM t2 LEFT OUTER JOIN t1 ON (('2.') NOT NULL) GROUP BY t2.c0 HAVING MIN(((t1.c0)OR(MIN(t2.c0)))) UNION ALL SELECT ALL t2.c0 FROM t2 LEFT OUTER JOIN t1 ON (('2.') NOT NULL) GROUP BY t2.c0 HAVING (NOT (MIN(((t1.c0)OR(MIN(t2.c0)))))) UNION ALL SELECT ALL t2.c0 FROM t2 LEFT OUTER JOIN t1 ON (('2.') NOT NULL) GROUP BY t2.c0 HAVING ((MIN(((t1.c0)OR(MIN(t2.c0))))) ISNULL);
SELECT * FROM t0;
SELECT * FROM t0 WHERE ((((NULL)) BETWEEN ((NULL)) AND ((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))))) UNION ALL SELECT * FROM t0 WHERE ((NOT ((((NULL)) BETWEEN ((NULL)) AND ((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))))))) UNION ALL SELECT * FROM t0 WHERE ((((((NULL)) BETWEEN ((NULL)) AND ((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))))) ISNULL));
SELECT * FROM t0;
SELECT DISTINCT * FROM t1, t0;
SELECT DISTINCT * FROM t1, t0 WHERE (((t0.c0) BETWEEN ((NULL IN (t0.c0))) AND (CASE WHEN NULL THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t1.c0 THEN t0.c0 ELSE t1.c0 END))) UNION SELECT DISTINCT * FROM t1, t0 WHERE ((NOT (((t0.c0) BETWEEN ((NULL IN (t0.c0))) AND (CASE WHEN NULL THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t1.c0 THEN t0.c0 ELSE t1.c0 END))))) UNION SELECT DISTINCT * FROM t1, t0 WHERE (((((t0.c0) BETWEEN ((NULL IN (t0.c0))) AND (CASE WHEN NULL THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t1.c0 THEN t0.c0 ELSE t1.c0 END))) ISNULL));
SELECT DISTINCT * FROM t1, t0;
SELECT t1.c0, t0.c0 FROM t0, t1, t2 GROUP BY t1.c0, t0.c0;
SELECT t1.c0, t0.c0 FROM t0, t1, t2 WHERE (t0.c0 COLLATE BINARY) GROUP BY t1.c0, t0.c0 UNION SELECT ALL t1.c0, t0.c0 FROM t0, t1, t2 WHERE ((NOT (t0.c0 COLLATE BINARY))) GROUP BY t1.c0, t0.c0 UNION SELECT t1.c0, t0.c0 FROM t0, t1, t2 WHERE (((t0.c0 COLLATE BINARY) ISNULL)) GROUP BY t1.c0, t0.c0;
SELECT t1.c0, t0.c0 FROM t0, t1, t2 GROUP BY t1.c0, t0.c0;
SELECT ALL t0.c0, t1.c0, t2.c0 FROM t2, t1, t0 GROUP BY t0.c0, t1.c0, t2.c0;
SELECT ALL t0.c0, t1.c0, t2.c0 FROM t2, t1, t0 GROUP BY t0.c0, t1.c0, t2.c0 HAVING IFNULL(CAST(MAX(t2.c0) AS REAL), MIN(t1.c0)) UNION ALL SELECT ALL t0.c0, t1.c0, t2.c0 FROM t2, t1, t0 GROUP BY t0.c0, t1.c0, t2.c0 HAVING (NOT (IFNULL(CAST(MAX(t2.c0) AS REAL), MIN(t1.c0)))) UNION ALL SELECT t0.c0, t1.c0, t2.c0 FROM t2, t1, t0 GROUP BY t0.c0, t1.c0, t2.c0 HAVING ((IFNULL(CAST(MAX(t2.c0) AS REAL), MIN(t1.c0))) ISNULL);
SELECT ALL t0.c0, t1.c0, t2.c0 FROM t2, t1, t0 GROUP BY t0.c0, t1.c0, t2.c0;
SELECT ALL t0.c0, t1.c0, t2.c0 FROM t2, t1, t0 GROUP BY t0.c0, t1.c0, t2.c0 HAVING IFNULL(CAST(MAX(t2.c0) AS REAL), MIN(t1.c0)) UNION ALL SELECT ALL t0.c0, t1.c0, t2.c0 FROM t2, t1, t0 GROUP BY t0.c0, t1.c0, t2.c0 HAVING (NOT (IFNULL(CAST(MAX(t2.c0) AS REAL), MIN(t1.c0)))) UNION ALL SELECT t0.c0, t1.c0, t2.c0 FROM t2, t1, t0 GROUP BY t0.c0, t1.c0, t2.c0 HAVING ((IFNULL(CAST(MAX(t2.c0) AS REAL), MIN(t1.c0))) ISNULL);
SELECT ALL t0.c0, t1.c0, t2.c0 FROM t2, t1, t0 GROUP BY t0.c0, t1.c0, t2.c0;
SELECT t1.c0, t0.c0, t2.c0 FROM t2, t0, t1;
SELECT ALL t1.c0, t0.c0, t2.c0 FROM t2, t0, t1 WHERE (COALESCE(((((t2.c0)AND(t1.c0)))OR(t1.c0)), CAST(t2.c0 AS REAL), NULL, CASE 0.8393640033822192  WHEN t2.c0 THEN t2.c0 END)) UNION ALL SELECT ALL t1.c0, t0.c0, t2.c0 FROM t2, t0, t1 WHERE ((NOT (COALESCE(((((t2.c0)AND(t1.c0)))OR(t1.c0)), CAST(t2.c0 AS REAL), NULL, CASE 0.8393640033822192  WHEN t2.c0 THEN t2.c0 END)))) UNION ALL SELECT t1.c0, t0.c0, t2.c0 FROM t2, t0, t1 WHERE (((COALESCE(((((t2.c0)AND(t1.c0)))OR(t1.c0)), CAST(t2.c0 AS REAL), NULL, CASE 0.8393640033822192  WHEN t2.c0 THEN t2.c0 END)) ISNULL));
SELECT t1.c0, t0.c0, t2.c0 FROM t2, t0, t1;
SELECT DISTINCT * FROM t1, t0, t2;
SELECT DISTINCT * FROM t1, t0, t2 WHERE (((((t2.c0)<<(t0.c0))) NOTNULL)) UNION SELECT DISTINCT * FROM t1, t0, t2 WHERE ((NOT (((((t2.c0)<<(t0.c0))) NOTNULL)))) UNION SELECT DISTINCT * FROM t1, t0, t2 NOT INDEXED WHERE (((((((t2.c0)<<(t0.c0))) NOTNULL)) ISNULL));
SELECT DISTINCT * FROM t1, t0, t2;
SELECT t2.c0 FROM t0, t1, t2 GROUP BY t2.c0;
SELECT ALL t2.c0 FROM t0, t1, t2 WHERE (CASE (NOT (t0.c0))  WHEN t1.c0 COLLATE RTRIM THEN ((1.924981563E9) BETWEEN (t2.c0) AND (x'a0254252')) END) GROUP BY t2.c0 UNION SELECT t2.c0 FROM t0, t1 NOT INDEXED, t2 WHERE ((NOT (CASE (NOT (t0.c0))  WHEN t1.c0 COLLATE RTRIM THEN ((1.924981563E9) BETWEEN (t2.c0) AND (x'a0254252')) END))) GROUP BY t2.c0 UNION SELECT t2.c0 FROM t0, t1, t2 WHERE (((CASE (NOT (t0.c0))  WHEN t1.c0 COLLATE RTRIM THEN ((1.924981563E9) BETWEEN (t2.c0) AND (x'a0254252')) END) ISNULL)) GROUP BY t2.c0;
SELECT t2.c0 FROM t0, t1, t2 GROUP BY t2.c0;
SELECT ALL t2.c0, t0.c0, t1.c0 FROM t1 NOT INDEXED, t0, t2 GROUP BY t2.c0, t0.c0, t1.c0;
SELECT ALL t2.c0, t0.c0, t1.c0 FROM t1, t0, t2 GROUP BY t2.c0, t0.c0, t1.c0 HAVING COUNT(MIN(t2.c0)) UNION ALL SELECT t2.c0, t0.c0, t1.c0 FROM t1, t0, t2 GROUP BY t2.c0, t0.c0, t1.c0 HAVING (NOT (COUNT(MIN(t2.c0)))) UNION ALL SELECT t2.c0, t0.c0, t1.c0 FROM t1, t0, t2 GROUP BY t2.c0, t0.c0, t1.c0 HAVING ((COUNT(MIN(t2.c0))) ISNULL);
SELECT * FROM t0 RIGHT OUTER JOIN t2 ON (+ ((t2.c0 IN (t2.c0))));
SELECT ALL * FROM t0 RIGHT OUTER JOIN t2 ON (+ ((t2.c0 IN (t2.c0)))) WHERE ((((t0.c0 IN (t2.c0, t2.c0)))<(((t2.c0)||(t0.c0))))) UNION ALL SELECT ALL * FROM t0 RIGHT OUTER JOIN t2 ON (+ ((t2.c0 IN (t2.c0)))) WHERE ((NOT ((((t0.c0 IN (t2.c0, t2.c0)))<(((t2.c0)||(t0.c0))))))) UNION ALL SELECT * FROM t0 RIGHT OUTER JOIN t2 ON (+ ((t2.c0 IN (t2.c0)))) WHERE ((((((t0.c0 IN (t2.c0, t2.c0)))<(((t2.c0)||(t0.c0))))) ISNULL));
SELECT * FROM t0 RIGHT OUTER JOIN t2 ON (+ ((t2.c0 IN (t2.c0))));
SELECT DISTINCT t0.c0, t1.c0, t2.c0 FROM t1, t0, t2;
SELECT DISTINCT t0.c0, t1.c0, t2.c0 FROM t1, t0, t2 WHERE ((- (CAST(t1.c0 AS INTEGER)))) UNION SELECT DISTINCT t0.c0, t1.c0, t2.c0 FROM t1, t0, t2 WHERE ((NOT ((- (CAST(t1.c0 AS INTEGER)))))) UNION SELECT DISTINCT t0.c0, t1.c0, t2.c0 FROM t1, t0, t2 WHERE ((((- (CAST(t1.c0 AS INTEGER)))) ISNULL));
SELECT DISTINCT t0.c0, t1.c0, t2.c0 FROM t1, t0, t2;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 WHERE ((((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)) IN ())) GROUP BY t1.c0 UNION SELECT ALL t1.c0 FROM t1 WHERE ((NOT ((((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)) IN ())))) GROUP BY t1.c0 UNION SELECT t1.c0 FROM t1 WHERE ((((((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)) IN ())) ISNULL)) GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING COUNT(*) COLLATE NOCASE UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (COUNT(*) COLLATE NOCASE)) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((COUNT(*) COLLATE NOCASE) ISNULL);
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING COUNT(*) COLLATE NOCASE UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (COUNT(*) COLLATE NOCASE)) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((COUNT(*) COLLATE NOCASE) ISNULL);
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t2.c0 FROM t2;
SELECT t2.c0 FROM t2 WHERE (((t2.c0 IN ()) IN ())) UNION ALL SELECT ALL t2.c0 FROM t2 WHERE ((NOT (((t2.c0 IN ()) IN ())))) UNION ALL SELECT t2.c0 FROM t2 WHERE (((((t2.c0 IN ()) IN ())) ISNULL));
SELECT ALL t2.c0 FROM t2;
SELECT DISTINCT * FROM t1, t2;
SELECT DISTINCT * FROM t1, t2 WHERE (((CASE WHEN t1.c0 THEN t2.c0 WHEN t2.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t2.c0 THEN t2.c0 WHEN t1.c0 THEN '0.08726819169292643' END)GLOB((NOT (t1.c0))))) UNION SELECT DISTINCT * FROM t1, t2 WHERE ((NOT (((CASE WHEN t1.c0 THEN t2.c0 WHEN t2.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t2.c0 THEN t2.c0 WHEN t1.c0 THEN '0.08726819169292643' END)GLOB((NOT (t1.c0))))))) UNION SELECT DISTINCT * FROM t1, t2 WHERE (((((CASE WHEN t1.c0 THEN t2.c0 WHEN t2.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t2.c0 THEN t2.c0 WHEN t1.c0 THEN '0.08726819169292643' END)GLOB((NOT (t1.c0))))) ISNULL));
SELECT DISTINCT * FROM t1, t2;
SELECT t0.c0 FROM t0, t1 GROUP BY t0.c0;
SELECT t0.c0 FROM t0, t1 WHERE (CAST((((t0.c0))>=(('U8'))) AS REAL)) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0, t1 WHERE ((NOT (CAST((((t0.c0))>=(('U8'))) AS REAL)))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0, t1 WHERE (((CAST((((t0.c0))>=(('U8'))) AS REAL)) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0, t1 GROUP BY t0.c0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING (((CASE WHEN TOTAL(MAX(COUNT(AVG(t1.c0)))) THEN t1.c0 WHEN t1.c0 THEN SUM(SUM(TOTAL(t1.c0))) WHEN t1.c0 THEN COUNT(t1.c0) ELSE t1.c0 END, SUM(COUNT(*)), COUNT(t1.c0)))>=((GROUP_CONCAT(t1.c0), NULL, (+ (t1.c0))))) UNION ALL SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING (NOT ((((CASE WHEN TOTAL(MAX(COUNT(AVG(t1.c0)))) THEN t1.c0 WHEN t1.c0 THEN SUM(SUM(TOTAL(t1.c0))) WHEN t1.c0 THEN COUNT(t1.c0) ELSE t1.c0 END, SUM(COUNT(*)), COUNT(t1.c0)))>=((GROUP_CONCAT(t1.c0), NULL, (+ (t1.c0))))))) UNION ALL SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING (((((CASE WHEN TOTAL(MAX(COUNT(AVG(t1.c0)))) THEN t1.c0 WHEN t1.c0 THEN SUM(SUM(TOTAL(t1.c0))) WHEN t1.c0 THEN COUNT(t1.c0) ELSE t1.c0 END, SUM(COUNT(*)), COUNT(t1.c0)))>=((GROUP_CONCAT(t1.c0), NULL, (+ (t1.c0)))))) ISNULL);
SELECT ALL * FROM t2, t1;
SELECT ALL * FROM t2, t1 WHERE (json_type((t1.c0 IN ()))) UNION ALL SELECT * FROM t2, t1 WHERE ((NOT (json_type((t1.c0 IN ()))))) UNION ALL SELECT ALL * FROM t2, t1 WHERE (((json_type((t1.c0 IN ()))) ISNULL));
SELECT ALL * FROM t2, t1;
SELECT DISTINCT t2.c0 FROM t2;
SELECT DISTINCT t2.c0 FROM t2 WHERE ((((t2.c0, CAST(t2.c0 AS INTEGER), '1859492514'))<=((((((((((((((t2.c0)OR(t2.c0)))OR(t2.c0)))AND(t2.c0)))AND(t2.c0)))OR(t2.c0)))AND(t2.c0)), (((t2.c0))>((t2.c0))), '366703284')))) UNION SELECT DISTINCT t2.c0 FROM t2 WHERE ((NOT ((((t2.c0, CAST(t2.c0 AS INTEGER), '1859492514'))<=((((((((((((((t2.c0)OR(t2.c0)))OR(t2.c0)))AND(t2.c0)))AND(t2.c0)))OR(t2.c0)))AND(t2.c0)), (((t2.c0))>((t2.c0))), '366703284')))))) UNION SELECT DISTINCT t2.c0 FROM t2 WHERE ((((((t2.c0, CAST(t2.c0 AS INTEGER), '1859492514'))<=((((((((((((((t2.c0)OR(t2.c0)))OR(t2.c0)))AND(t2.c0)))AND(t2.c0)))OR(t2.c0)))AND(t2.c0)), (((t2.c0))>((t2.c0))), '366703284')))) ISNULL));
SELECT DISTINCT t2.c0 FROM t2;
SELECT ALL t1.c0 FROM t1, t2, t0 GROUP BY t1.c0;
SELECT t1.c0 FROM t1, t2, t0 WHERE (x'') GROUP BY t1.c0 UNION SELECT ALL t1.c0 FROM t1, t2, t0 WHERE ((NOT (x''))) GROUP BY t1.c0 UNION SELECT ALL t1.c0 FROM t1, t2, t0 WHERE (((x'') ISNULL)) GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1, t2, t0 GROUP BY t1.c0;
SELECT t2.c0 FROM t2 GROUP BY t2.c0;
SELECT t2.c0 FROM t2 GROUP BY t2.c0 HAVING ((GROUP_CONCAT(NULL))||((245842529 IN ()))) UNION ALL SELECT t2.c0 FROM t2 GROUP BY t2.c0 HAVING (NOT (((GROUP_CONCAT(NULL))||((245842529 IN ()))))) UNION ALL SELECT t2.c0 FROM t2 GROUP BY t2.c0 HAVING ((((GROUP_CONCAT(NULL))||((245842529 IN ())))) ISNULL);
SELECT t2.c0 FROM t2 GROUP BY t2.c0;
SELECT t2.c0 FROM t2 GROUP BY t2.c0 HAVING ((GROUP_CONCAT(NULL))||((245842529 IN ()))) UNION ALL SELECT t2.c0 FROM t2 GROUP BY t2.c0 HAVING (NOT (((GROUP_CONCAT(NULL))||((245842529 IN ()))))) UNION ALL SELECT t2.c0 FROM t2 GROUP BY t2.c0 HAVING ((((GROUP_CONCAT(NULL))||((245842529 IN ())))) ISNULL);
SELECT t2.c0 FROM t2 GROUP BY t2.c0;
SELECT * FROM t0;
SELECT * FROM t0 WHERE (((((((((CAST(t0.c0 AS BLOB))OR(((t0.c0) NOTNULL))))OR(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))))OR(t0.c0 COLLATE NOCASE)))AND(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))) UNION ALL SELECT ALL * FROM t0 WHERE ((NOT (((((((((CAST(t0.c0 AS BLOB))OR(((t0.c0) NOTNULL))))OR(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))))OR(t0.c0 COLLATE NOCASE)))AND(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))))) UNION ALL SELECT ALL * FROM t0 WHERE (((((((((((CAST(t0.c0 AS BLOB))OR(((t0.c0) NOTNULL))))OR(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))))OR(t0.c0 COLLATE NOCASE)))AND(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))) ISNULL));
SELECT * FROM t0;
SELECT DISTINCT t2.c0, t1.c0, t0.c0 FROM t0, t1, t2;
SELECT DISTINCT t2.c0, t1.c0, t0.c0 FROM t0, t1, t2 WHERE ('-90047120') UNION SELECT DISTINCT t2.c0, t1.c0, t0.c0 FROM t0, t1, t2 WHERE ((NOT ('-90047120'))) UNION SELECT DISTINCT t2.c0, t1.c0, t0.c0 FROM t0, t1, t2 WHERE ((('-90047120') ISNULL));
SELECT DISTINCT t2.c0, t1.c0, t0.c0 FROM t0, t1, t2;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 WHERE (0.9862537636494787) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT (0.9862537636494787))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE (((0.9862537636494787) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0;
SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0 HAVING COUNT(*) UNION ALL SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0;
SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0 HAVING COUNT(*) UNION ALL SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0;
SELECT ALL * FROM t0, t1;
SELECT ALL * FROM t0, t1 WHERE (((((t1.c0) ISNULL)) NOT BETWEEN (((t1.c0)>(t0.c0))) AND (t1.c0))) UNION ALL SELECT ALL * FROM t0, t1 WHERE ((NOT (((((t1.c0) ISNULL)) NOT BETWEEN (((t1.c0)>(t0.c0))) AND (t1.c0))))) UNION ALL SELECT * FROM t0, t1 WHERE (((((((t1.c0) ISNULL)) NOT BETWEEN (((t1.c0)>(t0.c0))) AND (t1.c0))) ISNULL));
SELECT ALL * FROM t0, t1;
SELECT DISTINCT t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0 WHERE (((TYPEOF(DISTINCT t0.c0)) IS FALSE)) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((NOT (((TYPEOF(DISTINCT t0.c0)) IS FALSE)))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE (((((TYPEOF(DISTINCT t0.c0)) IS FALSE)) ISNULL));
SELECT DISTINCT t0.c0 FROM t0;
SELECT t1.c0, t2.c0, t0.c0 FROM t1, t2, t0 GROUP BY t1.c0, t2.c0, t0.c0;
SELECT t1.c0, t2.c0, t0.c0 FROM t1, t2, t0 WHERE ((((-1.891817721E9))>=(('')))) GROUP BY t1.c0, t2.c0, t0.c0 UNION SELECT t1.c0, t2.c0, t0.c0 FROM t1, t2, t0 WHERE ((NOT ((((-1.891817721E9))>=(('')))))) GROUP BY t1.c0, t2.c0, t0.c0 UNION SELECT t1.c0, t2.c0, t0.c0 FROM t1, t2, t0 WHERE ((((((-1.891817721E9))>=(('')))) ISNULL)) GROUP BY t1.c0, t2.c0, t0.c0;
SELECT t1.c0, t2.c0, t0.c0 FROM t1, t2, t0 GROUP BY t1.c0, t2.c0, t0.c0;
SELECT t2.c0 FROM t2 GROUP BY t2.c0;
SELECT t2.c0 FROM t2 GROUP BY t2.c0 HAVING ((COUNT(AVG(GROUP_CONCAT(COUNT(*))))) BETWEEN (SUM(t2.c0)) AND (0.10495667881708626)) UNION ALL SELECT t2.c0 FROM t2 GROUP BY t2.c0 HAVING (NOT (((COUNT(AVG(GROUP_CONCAT(COUNT(*))))) BETWEEN (SUM(t2.c0)) AND (0.10495667881708626)))) UNION ALL SELECT t2.c0 FROM t2 GROUP BY t2.c0 HAVING ((((COUNT(AVG(GROUP_CONCAT(COUNT(*))))) BETWEEN (SUM(t2.c0)) AND (0.10495667881708626))) ISNULL);
SELECT ALL t2.c0 FROM t2;
SELECT t2.c0 FROM t2 WHERE (CAST(((((t2.c0)OR(t2.c0)))OR(t2.c0)) AS REAL)) UNION ALL SELECT t2.c0 FROM t2 WHERE ((NOT (CAST(((((t2.c0)OR(t2.c0)))OR(t2.c0)) AS REAL)))) UNION ALL SELECT ALL t2.c0 FROM t2 WHERE (((CAST(((((t2.c0)OR(t2.c0)))OR(t2.c0)) AS REAL)) ISNULL));
SELECT ALL t2.c0 FROM t2;
SELECT DISTINCT * FROM t2, t1, t0;
SELECT DISTINCT * FROM t2, t1, t0 WHERE (TRIM(((t2.c0)&(t1.c0)))) UNION SELECT DISTINCT * FROM t2, t1, t0 WHERE ((NOT (TRIM(((t2.c0)&(t1.c0)))))) UNION SELECT DISTINCT * FROM t2, t1, t0 WHERE (((TRIM(((t2.c0)&(t1.c0)))) ISNULL));
SELECT DISTINCT * FROM t2, t1, t0;
SELECT ALL t2.c0 FROM t1, t2 GROUP BY t2.c0;
SELECT ALL t2.c0 FROM t1, t2 WHERE (t2.c0) GROUP BY t2.c0 UNION SELECT t2.c0 FROM t1, t2 WHERE ((NOT (t2.c0))) GROUP BY t2.c0 UNION SELECT ALL t2.c0 FROM t1, t2 WHERE (((t2.c0) ISNULL)) GROUP BY t2.c0;
SELECT ALL t2.c0 FROM t1, t2 GROUP BY t2.c0;
SELECT t2.c0, t1.c0 FROM t1, t2 GROUP BY t2.c0, t1.c0;
SELECT t2.c0, t1.c0 FROM t1, t2 GROUP BY t2.c0, t1.c0 HAVING '-279582334' UNION ALL SELECT ALL t2.c0, t1.c0 FROM t1, t2 GROUP BY t2.c0, t1.c0 HAVING (NOT ('-279582334')) UNION ALL SELECT t2.c0, t1.c0 FROM t1, t2 GROUP BY t2.c0, t1.c0 HAVING (('-279582334') ISNULL);
SELECT t2.c0, t1.c0 FROM t1, t2 GROUP BY t2.c0, t1.c0;
SELECT t2.c0, t1.c0 FROM t1, t2 GROUP BY t2.c0, t1.c0 HAVING '-279582334' UNION ALL SELECT ALL t2.c0, t1.c0 FROM t1, t2 GROUP BY t2.c0, t1.c0 HAVING (NOT ('-279582334')) UNION ALL SELECT t2.c0, t1.c0 FROM t1, t2 GROUP BY t2.c0, t1.c0 HAVING (('-279582334') ISNULL);
SELECT t2.c0, t1.c0 FROM t1, t2 GROUP BY t2.c0, t1.c0;
SELECT t2.c0, t1.c0 FROM t2 INDEXED BY i28, t0, t1;
SELECT DISTINCT t2.c0, t1.c0 FROM t1, t2;
SELECT DISTINCT t2.c0, t1.c0 FROM t1, t2 WHERE ((~ ((t2.c0 IN ())))) UNION SELECT DISTINCT t2.c0, t1.c0 FROM t1, t2 WHERE ((NOT ((~ ((t2.c0 IN ())))))) UNION SELECT DISTINCT t2.c0, t1.c0 FROM t1, t2 WHERE ((((~ ((t2.c0 IN ())))) ISNULL));
SELECT DISTINCT t2.c0, t1.c0 FROM t1, t2;
SELECT ALL t0.c0 FROM t2, t0, t1 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t2, t0, t1 WHERE ((((t2.c0 IN (0.4701004005218572)))LIKE((t2.c0 IN ())))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t2, t0, t1 WHERE ((NOT ((((t2.c0 IN (0.4701004005218572)))LIKE((t2.c0 IN ())))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t2, t0, t1 WHERE ((((((t2.c0 IN (0.4701004005218572)))LIKE((t2.c0 IN ())))) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t2, t0, t1 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING MAX(MAX(-1.7976931348623157E308)) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (MAX(MAX(-1.7976931348623157E308)))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((MAX(MAX(-1.7976931348623157E308))) ISNULL);
SELECT * FROM t1, t2, t0;
SELECT * FROM t1, t2, t0 WHERE (((t1.c0 COLLATE RTRIM)|(((t2.c0)<<(t2.c0))))) UNION ALL SELECT * FROM t1, t2, t0 WHERE ((NOT (((t1.c0 COLLATE RTRIM)|(((t2.c0)<<(t2.c0))))))) UNION ALL SELECT * FROM t1, t2, t0 WHERE (((((t1.c0 COLLATE RTRIM)|(((t2.c0)<<(t2.c0))))) ISNULL));
SELECT * FROM t1, t2, t0;
SELECT DISTINCT * FROM t2;
SELECT DISTINCT * FROM t2 WHERE (((((((((((((t2.c0)OR(t2.c0)))OR(t2.c0)))AND(((t2.c0) NOT BETWEEN (t2.c0) AND (t2.c0)))))OR(CASE t2.c0  WHEN t2.c0 THEN t2.c0 ELSE t2.c0 END)))OR(t2.c0 COLLATE RTRIM)))AND(((t2.c0) NOTNULL)))) UNION SELECT DISTINCT * FROM t2 WHERE ((NOT (((((((((((((t2.c0)OR(t2.c0)))OR(t2.c0)))AND(((t2.c0) NOT BETWEEN (t2.c0) AND (t2.c0)))))OR(CASE t2.c0  WHEN t2.c0 THEN t2.c0 ELSE t2.c0 END)))OR(t2.c0 COLLATE RTRIM)))AND(((t2.c0) NOTNULL)))))) UNION SELECT DISTINCT * FROM t2 WHERE (((((((((((((((t2.c0)OR(t2.c0)))OR(t2.c0)))AND(((t2.c0) NOT BETWEEN (t2.c0) AND (t2.c0)))))OR(CASE t2.c0  WHEN t2.c0 THEN t2.c0 ELSE t2.c0 END)))OR(t2.c0 COLLATE RTRIM)))AND(((t2.c0) NOTNULL)))) ISNULL));
SELECT DISTINCT * FROM t2;
SELECT t2.c0 FROM t2 GROUP BY t2.c0;
SELECT t2.c0 FROM t2 WHERE (((t2.c0)OR((t2.c0 IN (t2.c0))))) GROUP BY t2.c0 UNION SELECT ALL t2.c0 FROM t2 WHERE ((NOT (((t2.c0)OR((t2.c0 IN (t2.c0))))))) GROUP BY t2.c0 UNION SELECT t2.c0 FROM t2 WHERE (((((t2.c0)OR((t2.c0 IN (t2.c0))))) ISNULL)) GROUP BY t2.c0;
SELECT t2.c0 FROM t2 GROUP BY t2.c0;
SELECT t1.c0, t2.c0, t0.c0 FROM t1, t2, t0 GROUP BY t1.c0, t2.c0, t0.c0;
SELECT ALL t1.c0, t2.c0, t0.c0 FROM t1, t2, t0 GROUP BY t1.c0, t2.c0, t0.c0 HAVING GROUP_CONCAT(CASE WHEN t2.c0 THEN t2.c0 WHEN GROUP_CONCAT(t1.c0) THEN COUNT(AVG(TOTAL(TOTAL(MIN(t2.c0))))) WHEN GROUP_CONCAT(SUM(COUNT(t1.c0))) THEN t1.c0 ELSE MIN(t1.c0) END) UNION ALL SELECT ALL t1.c0, t2.c0, t0.c0 FROM t1, t2, t0 GROUP BY t1.c0, t2.c0, t0.c0 HAVING (NOT (GROUP_CONCAT(CASE WHEN t2.c0 THEN t2.c0 WHEN GROUP_CONCAT(t1.c0) THEN COUNT(AVG(TOTAL(TOTAL(MIN(t2.c0))))) WHEN GROUP_CONCAT(SUM(COUNT(t1.c0))) THEN t1.c0 ELSE MIN(t1.c0) END))) UNION ALL SELECT t1.c0, t2.c0, t0.c0 FROM t1, t2, t0 GROUP BY t1.c0, t2.c0, t0.c0 HAVING ((GROUP_CONCAT(CASE WHEN t2.c0 THEN t2.c0 WHEN GROUP_CONCAT(t1.c0) THEN COUNT(AVG(TOTAL(TOTAL(MIN(t2.c0))))) WHEN GROUP_CONCAT(SUM(COUNT(t1.c0))) THEN t1.c0 ELSE MIN(t1.c0) END)) ISNULL);
SELECT t1.c0, t2.c0 FROM t2, t0, t1;
SELECT t1.c0, t2.c0 FROM t2, t0, t1 WHERE ((t2.c0 IN (CAST(t2.c0 AS BLOB)))) UNION ALL SELECT ALL t1.c0, t2.c0 FROM t2, t0, t1 WHERE ((NOT ((t2.c0 IN (CAST(t2.c0 AS BLOB)))))) UNION ALL SELECT t1.c0, t2.c0 FROM t2, t0, t1 WHERE ((((t2.c0 IN (CAST(t2.c0 AS BLOB)))) ISNULL));
SELECT t1.c0, t2.c0 FROM t2, t0, t1;
SELECT DISTINCT * FROM t2, t0;
SELECT DISTINCT * FROM t2, t0 WHERE ((((((t0.c0, t2.c0, t2.c0, t0.c0, t2.c0))<((t2.c0, t0.c0, t0.c0, t2.c0, NULL)))) IS TRUE)) UNION SELECT DISTINCT * FROM t2, t0 WHERE ((NOT ((((((t0.c0, t2.c0, t2.c0, t0.c0, t2.c0))<((t2.c0, t0.c0, t0.c0, t2.c0, NULL)))) IS TRUE)))) UNION SELECT DISTINCT * FROM t2, t0 WHERE ((((((((t0.c0, t2.c0, t2.c0, t0.c0, t2.c0))<((t2.c0, t0.c0, t0.c0, t2.c0, NULL)))) IS TRUE)) ISNULL));
SELECT DISTINCT * FROM t2, t0;
SELECT ALL t2.c0, t0.c0 FROM t2, t1, t0 GROUP BY t2.c0, t0.c0;
SELECT t2.c0, t0.c0 FROM t2, t1, t0 WHERE (CAST(((t2.c0)GLOB(0xffffffff9dea96bd)) AS BLOB)) GROUP BY t2.c0, t0.c0 UNION SELECT ALL t2.c0, t0.c0 FROM t2, t1, t0 WHERE ((NOT (CAST(((t2.c0)GLOB(0Xffffffff9dea96bd)) AS BLOB)))) GROUP BY t2.c0, t0.c0 UNION SELECT ALL t2.c0, t0.c0 FROM t2, t1, t0 WHERE (((CAST(((t2.c0)GLOB(0xffffffff9dea96bd)) AS BLOB)) ISNULL)) GROUP BY t2.c0, t0.c0;
SELECT ALL t2.c0, t0.c0 FROM t2, t1, t0 GROUP BY t2.c0, t0.c0;
SELECT t2.c0 FROM t2 GROUP BY t2.c0;
SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0 HAVING MAX(CASE t2.c0  WHEN t2.c0 THEN SUM(COUNT(*)) WHEN MAX(t2.c0) THEN t2.c0 WHEN t2.c0 THEN COUNT(*) ELSE SUM(t2.c0) END) UNION ALL SELECT ALL t2.c0 FROM t2 NOT INDEXED GROUP BY t2.c0 HAVING (NOT (MAX(CASE t2.c0  WHEN t2.c0 THEN SUM(COUNT(*)) WHEN MAX(t2.c0) THEN t2.c0 WHEN t2.c0 THEN COUNT(*) ELSE SUM(t2.c0) END))) UNION ALL SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0 HAVING ((MAX(CASE t2.c0  WHEN t2.c0 THEN SUM(COUNT(*)) WHEN MAX(t2.c0) THEN t2.c0 WHEN t2.c0 THEN COUNT(*) ELSE SUM(t2.c0) END)) ISNULL);
SELECT SUM(SQLITE_SOURCE_ID()) FROM t0, t1, t2 ORDER BY (LIKELY(DISTINCT t1.c0) IN ()) DESC, ((((((((t0.c0)AND(NULL)))AND(((t0.c0) NOT NULL))))OR(((t2.c0)+(t2.c0)))))OR(CAST(t0.c0 AS REAL)));
SELECT ALL * FROM t2;
SELECT ALL * FROM t2 WHERE (((((((((COALESCE(t2.c0, NULL, x'', t2.c0))OR(CHAR(t2.c0))))AND(CAST(t2.c0 AS TEXT))))OR(CASE t2.c0  WHEN t2.c0 THEN t2.c0 END)))OR(GLOB(t2.c0, t2.c0)))) UNION ALL SELECT * FROM t2 WHERE ((NOT (((((((((COALESCE(t2.c0, NULL, x'', t2.c0))OR(CHAR(t2.c0))))AND(CAST(t2.c0 AS TEXT))))OR(CASE t2.c0  WHEN t2.c0 THEN t2.c0 END)))OR(GLOB(t2.c0, t2.c0)))))) UNION ALL SELECT * FROM t2 WHERE (((((((((((COALESCE(t2.c0, NULL, x'', t2.c0))OR(CHAR(t2.c0))))AND(CAST(t2.c0 AS TEXT))))OR(CASE t2.c0  WHEN t2.c0 THEN t2.c0 END)))OR(GLOB(t2.c0, t2.c0)))) ISNULL));
SELECT ALL * FROM t2;
SELECT DISTINCT t2.c0 FROM t0 LEFT OUTER JOIN t1 ON CAST((- (t2.c0)) AS INTEGER) LEFT OUTER JOIN t2 ON ((((CAST(t0.c0 AS INTEGER))AND((((t2.c0))>=((t2.c0))))))AND(((((t0.c0)AND(t2.c0)))AND(t2.c0))));
SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0;
SELECT t2.c0 FROM t2 WHERE (LOWER((~ (t2.c0)))) GROUP BY t2.c0 UNION SELECT t2.c0 FROM t2 WHERE ((NOT (LOWER((~ (t2.c0)))))) GROUP BY t2.c0 UNION SELECT ALL t2.c0 FROM t2 WHERE (((LOWER((~ (t2.c0)))) ISNULL)) GROUP BY t2.c0;
SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0;
SELECT ALL t2.c0 FROM t2 FULL OUTER JOIN t0 ON (UPPER(DISTINCT t0.c0) IN ()) RIGHT OUTER JOIN t1 ON ((('-1097374030')LIKE(t2.c0)) IN ()) GROUP BY t2.c0;
SELECT t2.c0 FROM t2 FULL OUTER JOIN t0 ON (UPPER(DISTINCT t0.c0) IN ()) RIGHT OUTER JOIN t1 ON ((('-1097374030')LIKE(t2.c0)) IN ()) GROUP BY t2.c0 HAVING (COUNT(*) IN ()) UNION ALL SELECT ALL t2.c0 FROM t2 FULL OUTER JOIN t0 ON (UPPER(DISTINCT t0.c0) IN ()) RIGHT OUTER JOIN t1 ON ((('-1097374030')LIKE(t2.c0)) IN ()) GROUP BY t2.c0 HAVING (NOT ((COUNT(*) IN ()))) UNION ALL SELECT ALL t2.c0 FROM t2 FULL OUTER JOIN t0 ON (UPPER(DISTINCT t0.c0) IN ()) RIGHT OUTER JOIN t1 ON ((('-1097374030')LIKE(t2.c0)) IN ()) GROUP BY t2.c0 HAVING (((COUNT(*) IN ())) ISNULL);
SELECT ALL t2.c0 FROM t2 FULL OUTER JOIN t0 ON (UPPER(DISTINCT t0.c0) IN ()) RIGHT OUTER JOIN t1 ON ((('-1097374030')LIKE(t2.c0)) IN ()) GROUP BY t2.c0;
SELECT t2.c0 FROM t2 FULL OUTER JOIN t0 ON (UPPER(DISTINCT t0.c0) IN ()) RIGHT OUTER JOIN t1 ON ((('-1097374030')LIKE(t2.c0)) IN ()) GROUP BY t2.c0 HAVING (COUNT(*) IN ()) UNION ALL SELECT ALL t2.c0 FROM t2 FULL OUTER JOIN t0 ON (UPPER(DISTINCT t0.c0) IN ()) RIGHT OUTER JOIN t1 ON ((('-1097374030')LIKE(t2.c0)) IN ()) GROUP BY t2.c0 HAVING (NOT ((COUNT(*) IN ()))) UNION ALL SELECT ALL t2.c0 FROM t2 FULL OUTER JOIN t0 ON (UPPER(DISTINCT t0.c0) IN ()) RIGHT OUTER JOIN t1 ON ((('-1097374030')LIKE(t2.c0)) IN ()) GROUP BY t2.c0 HAVING (((COUNT(*) IN ())) ISNULL);
SELECT ALL t2.c0 FROM t2 FULL OUTER JOIN t0 ON (UPPER(DISTINCT t0.c0) IN ()) RIGHT OUTER JOIN t1 ON ((('-1097374030')LIKE(t2.c0)) IN ()) GROUP BY t2.c0;
SELECT ALL * FROM t2;
SELECT * FROM t2 WHERE (((((((((((t2.c0)/(t2.c0)))OR(((((0.7167104366179117)AND(t2.c0)))OR(t2.c0)))))OR(CASE WHEN t2.c0 THEN t2.c0 ELSE t2.c0 END)))OR(CAST(t2.c0 AS BLOB))))AND(NULL))) UNION ALL SELECT ALL * FROM t2 WHERE ((NOT (((((((((((t2.c0)/(t2.c0)))OR(((((0.7167104366179117)AND(t2.c0)))OR(t2.c0)))))OR(CASE WHEN t2.c0 THEN t2.c0 ELSE t2.c0 END)))OR(CAST(t2.c0 AS BLOB))))AND(NULL))))) UNION ALL SELECT ALL * FROM t2 WHERE (((((((((((((t2.c0)/(t2.c0)))OR(((((0.7167104366179117)AND(t2.c0)))OR(t2.c0)))))OR(CASE WHEN t2.c0 THEN t2.c0 ELSE t2.c0 END)))OR(CAST(t2.c0 AS BLOB))))AND(NULL))) ISNULL));
SELECT ALL * FROM t2;
SELECT DISTINCT * FROM t1, t2;
SELECT DISTINCT * FROM t1, t2 WHERE ((((t1.c0, t1.c0, t1.c0, t2.c0, t1.c0)) NOT BETWEEN ((((t2.c0)*(t1.c0)), ((t2.c0) IS TRUE), CASE WHEN NULL THEN t2.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 END, (((t2.c0))<((t1.c0))), t2.c0 COLLATE RTRIM)) AND ((((((t1.c0)OR(t1.c0)))OR(t2.c0)), ((t1.c0)+(t2.c0)), t2.c0 COLLATE NOCASE, ((NULL)LIKE('-1230234947')), 0.7012425024794121)))) UNION SELECT DISTINCT * FROM t1, t2 WHERE ((NOT ((((t1.c0, t1.c0, t1.c0, t2.c0, t1.c0)) NOT BETWEEN ((((t2.c0)*(t1.c0)), ((t2.c0) IS TRUE), CASE WHEN NULL THEN t2.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 END, (((t2.c0))<((t1.c0))), t2.c0 COLLATE RTRIM)) AND ((((((t1.c0)OR(t1.c0)))OR(t2.c0)), ((t1.c0)+(t2.c0)), t2.c0 COLLATE NOCASE, ((NULL)LIKE('-1230234947')), 0.7012425024794121)))))) UNION SELECT DISTINCT * FROM t1, t2 WHERE ((((((t1.c0, t1.c0, t1.c0, t2.c0, t1.c0)) NOT BETWEEN ((((t2.c0)*(t1.c0)), ((t2.c0) IS TRUE), CASE WHEN NULL THEN t2.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 END, (((t2.c0))<((t1.c0))), t2.c0 COLLATE RTRIM)) AND ((((((t1.c0)OR(t1.c0)))OR(t2.c0)), ((t1.c0)+(t2.c0)), t2.c0 COLLATE NOCASE, ((NULL)LIKE('-1230234947')), 0.7012425024794121)))) ISNULL));
SELECT DISTINCT * FROM t1, t2;
SELECT ALL t0.c0 FROM t0 NATURAL JOIN t2 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 NATURAL JOIN t2 WHERE ((~ (((t0.c0) NOT BETWEEN (t2.c0) AND (t2.c0))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 NATURAL JOIN t2 WHERE ((NOT ((~ (((t0.c0) NOT BETWEEN (t2.c0) AND (t2.c0))))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 NATURAL JOIN t2 WHERE ((((~ (((t0.c0) NOT BETWEEN (t2.c0) AND (t2.c0))))) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 NATURAL JOIN t2 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING COUNT(COUNT(*)) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (COUNT(COUNT(*)))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((COUNT(COUNT(*))) ISNULL);
SELECT * FROM t1;
SELECT * FROM t1 WHERE ((+ (CAST(t1.c0 AS REAL)))) UNION ALL SELECT ALL * FROM t1 WHERE ((NOT ((+ (CAST(t1.c0 AS REAL)))))) UNION ALL SELECT ALL * FROM t1 WHERE ((((+ (CAST(t1.c0 AS REAL)))) ISNULL));
SELECT * FROM t1;
SELECT DISTINCT * FROM t2 FULL OUTER JOIN t0 ON (((- (t1.c0)))%(((t1.c0) IS FALSE))) CROSS JOIN t1 ON (((((((t1.c0, t2.c0, t0.c0)) NOT BETWEEN ((NULL, -1581101271, t2.c0)) AND ((t2.c0, t0.c0, t2.c0))))OR((t1.c0 IN ()))))OR(((((t2.c0)OR(t2.c0)))AND(t1.c0))));
SELECT ALL t0.c0, t1.c0 FROM t1 NATURAL JOIN t0 GROUP BY t0.c0, t1.c0;
SELECT ALL t0.c0, t1.c0 FROM t1 NATURAL JOIN t0 WHERE (LOWER(((((((((t1.c0)OR(t1.c0)))OR(t0.c0)))AND(x'')))OR(t1.c0)))) GROUP BY t0.c0, t1.c0 UNION SELECT ALL t0.c0, t1.c0 FROM t1 NATURAL JOIN t0 WHERE ((NOT (LOWER(((((((((t1.c0)OR(t1.c0)))OR(t0.c0)))AND(x'')))OR(t1.c0)))))) GROUP BY t0.c0, t1.c0 UNION SELECT t0.c0, t1.c0 FROM t1 NATURAL JOIN t0 WHERE (((LOWER(((((((((t1.c0)OR(t1.c0)))OR(t0.c0)))AND(x'')))OR(t1.c0)))) ISNULL)) GROUP BY t0.c0, t1.c0;
SELECT ALL t0.c0, t1.c0 FROM t1 NATURAL JOIN t0 GROUP BY t0.c0, t1.c0;
SELECT t2.c0 FROM t2 GROUP BY t2.c0;
SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0 HAVING MAX(AVG(t2.c0)) UNION ALL SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0 HAVING (NOT (MAX(AVG(t2.c0)))) UNION ALL SELECT t2.c0 FROM t2 GROUP BY t2.c0 HAVING ((MAX(AVG(t2.c0))) ISNULL);
SELECT t0.c0, t2.c0, t1.c0 FROM t1, t2, t0;
SELECT ALL t0.c0, t2.c0, t1.c0 FROM t1, t2, t0 WHERE (t1.c0) UNION ALL SELECT ALL t0.c0, t2.c0, t1.c0 FROM t1 NOT INDEXED, t2, t0 WHERE ((NOT (t1.c0))) UNION ALL SELECT ALL t0.c0, t2.c0, t1.c0 FROM t1, t2, t0 WHERE (((t1.c0) ISNULL));
SELECT t0.c0, t2.c0, t1.c0 FROM t1, t2, t0;
SELECT DISTINCT t2.c0, t1.c0 FROM t2, t1;
SELECT DISTINCT t2.c0, t1.c0 FROM t2, t1 WHERE (826649913) UNION SELECT DISTINCT t2.c0, t1.c0 FROM t2, t1 WHERE ((NOT (826649913))) UNION SELECT DISTINCT t2.c0, t1.c0 FROM t2, t1 WHERE (((826649913) ISNULL));
SELECT DISTINCT t2.c0, t1.c0 FROM t2, t1;
SELECT t0.c0, t2.c0 FROM t2, t0 GROUP BY t0.c0, t2.c0;
SELECT t0.c0, t2.c0 FROM t2, t0 WHERE (((((t0.c0) BETWEEN (t0.c0) AND (t2.c0))) BETWEEN ((t2.c0 IN (t2.c0, t0.c0))) AND (t2.c0))) GROUP BY t0.c0, t2.c0 UNION SELECT ALL t0.c0, t2.c0 FROM t2, t0 WHERE ((NOT (((((t0.c0) BETWEEN (t0.c0) AND (t2.c0))) BETWEEN ((t2.c0 IN (t2.c0, t0.c0))) AND (t2.c0))))) GROUP BY t0.c0, t2.c0 UNION SELECT ALL t0.c0, t2.c0 FROM t2, t0 WHERE (((((((t0.c0) BETWEEN (t0.c0) AND (t2.c0))) BETWEEN ((t2.c0 IN (t2.c0, t0.c0))) AND (t2.c0))) ISNULL)) GROUP BY t0.c0, t2.c0;
SELECT t0.c0, t2.c0 FROM t2, t0 GROUP BY t0.c0, t2.c0;
SELECT t2.c0, t0.c0 FROM t1, t0, t2 GROUP BY t2.c0, t0.c0;
SELECT ALL t2.c0, t0.c0 FROM t1, t0, t2 GROUP BY t2.c0, t0.c0 HAVING (COUNT(t2.c0) IN ()) UNION ALL SELECT t2.c0, t0.c0 FROM t1, t0, t2 GROUP BY t2.c0, t0.c0 HAVING (NOT ((COUNT(t2.c0) IN ()))) UNION ALL SELECT ALL t2.c0, t0.c0 FROM t1, t0, t2 GROUP BY t2.c0, t0.c0 HAVING (((COUNT(t2.c0) IN ())) ISNULL);
SELECT t2.c0, t0.c0 FROM t1, t0, t2 GROUP BY t2.c0, t0.c0;
SELECT ALL t2.c0, t0.c0 FROM t1, t0, t2 GROUP BY t2.c0, t0.c0 HAVING (COUNT(t2.c0) IN ()) UNION ALL SELECT t2.c0, t0.c0 FROM t1, t0, t2 GROUP BY t2.c0, t0.c0 HAVING (NOT ((COUNT(t2.c0) IN ()))) UNION ALL SELECT ALL t2.c0, t0.c0 FROM t1, t0, t2 GROUP BY t2.c0, t0.c0 HAVING (((COUNT(t2.c0) IN ())) ISNULL);
SELECT t2.c0, t0.c0 FROM t1, t0, t2 GROUP BY t2.c0, t0.c0;
SELECT ALL * FROM t0, t2, t1;
SELECT ALL * FROM t0, t2, t1 WHERE (CAST(((t2.c0)+(t2.c0)) AS BLOB)) UNION ALL SELECT ALL * FROM t0, t2, t1 WHERE ((NOT (CAST(((t2.c0)+(t2.c0)) AS BLOB)))) UNION ALL SELECT * FROM t0, t2, t1 WHERE (((CAST(((t2.c0)+(t2.c0)) AS BLOB)) ISNULL));
SELECT ALL * FROM t0, t2, t1;
SELECT DISTINCT * FROM t1, t2, t0;
SELECT DISTINCT * FROM t1, t2, t0 WHERE (((CAST(t1.c0 AS NUMERIC)) ISNULL)) UNION SELECT DISTINCT * FROM t1, t2, t0 WHERE ((NOT (((CAST(t1.c0 AS NUMERIC)) ISNULL)))) UNION SELECT DISTINCT * FROM t1, t2, t0 WHERE (((((CAST(t1.c0 AS NUMERIC)) ISNULL)) ISNULL));
SELECT DISTINCT * FROM t1, t2, t0;
SELECT ALL t2.c0 FROM t1, t2 FULL OUTER JOIN t0 ON (x'fdca1aa9' IN (CASE t0.c0  WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t2.c0 WHEN t0.c0 THEN t2.c0 END)) GROUP BY t2.c0;
SELECT t2.c0 FROM t1, t2 FULL OUTER JOIN t0 ON (x'fdca1aa9' IN (CASE t0.c0  WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t2.c0 WHEN t0.c0 THEN t2.c0 END)) WHERE ((((((t0.c0)) BETWEEN ((t2.c0)) AND ((t1.c0)))) ISNULL)) GROUP BY t2.c0 UNION SELECT t2.c0 FROM t1, t2 FULL OUTER JOIN t0 ON (x'fdca1aa9' IN (CASE t0.c0  WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t2.c0 WHEN t0.c0 THEN t2.c0 END)) WHERE ((NOT ((((((t0.c0)) BETWEEN ((t2.c0)) AND ((t1.c0)))) ISNULL)))) GROUP BY t2.c0 UNION SELECT ALL t2.c0 FROM t1, t2 FULL OUTER JOIN t0 ON (x'fdca1aa9' IN (CASE t0.c0  WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t2.c0 WHEN t0.c0 THEN t2.c0 END)) WHERE ((((((((t0.c0)) BETWEEN ((t2.c0)) AND ((t1.c0)))) ISNULL)) ISNULL)) GROUP BY t2.c0;
SELECT ALL t2.c0 FROM t1, t2 FULL OUTER JOIN t0 ON (x'fdca1aa9' IN (CASE t0.c0  WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t2.c0 WHEN t0.c0 THEN t2.c0 END)) GROUP BY t2.c0;
SELECT t2.c0 FROM t2 GROUP BY t2.c0;
SELECT t2.c0 FROM t2 GROUP BY t2.c0 HAVING TOTAL((NOT (COUNT(*)))) UNION ALL SELECT t2.c0 FROM t2 GROUP BY t2.c0 HAVING (NOT (TOTAL((NOT (COUNT(*)))))) UNION ALL SELECT t2.c0 FROM t2 GROUP BY t2.c0 HAVING ((TOTAL((NOT (COUNT(*))))) ISNULL);
SELECT ALL * FROM t2;
SELECT ALL * FROM t2 WHERE (((((((((t2.c0)AND(t2.c0)))OR(t2.c0)))AND(t2.c0)))OR(t2.c0)) COLLATE BINARY) UNION ALL SELECT * FROM t2 WHERE ((NOT (((((((((t2.c0)AND(t2.c0)))OR(t2.c0)))AND(t2.c0)))OR(t2.c0)) COLLATE BINARY))) UNION ALL SELECT ALL * FROM t2 WHERE (((((((((((t2.c0)AND(t2.c0)))OR(t2.c0)))AND(t2.c0)))OR(t2.c0)) COLLATE BINARY) ISNULL));
SELECT ALL * FROM t2;
SELECT DISTINCT * FROM t2, t1, t0;
SELECT DISTINCT * FROM t2, t1, t0 WHERE (((x'') BETWEEN (t0.c0) AND (t1.c0)) COLLATE NOCASE) UNION SELECT DISTINCT * FROM t2, t1, t0 WHERE ((NOT (((x'') BETWEEN (t0.c0) AND (t1.c0)) COLLATE NOCASE))) UNION SELECT DISTINCT * FROM t2, t1, t0 WHERE (((((x'') BETWEEN (t0.c0) AND (t1.c0)) COLLATE NOCASE) ISNULL));
SELECT DISTINCT * FROM t2, t1, t0;
SELECT t1.c0, t2.c0, t0.c0 FROM t1, t0 LEFT OUTER JOIN t2 ON ((((t1.c0) NOTNULL)) ISNULL) GROUP BY t1.c0, t2.c0, t0.c0;
SELECT ALL t1.c0, t2.c0, t0.c0 FROM t1, t0 NOT INDEXED LEFT OUTER JOIN t2 ON ((((t1.c0) NOTNULL)) ISNULL) WHERE (((((NULL) NOT BETWEEN (t1.c0) AND (t0.c0))) IS FALSE)) GROUP BY t1.c0, t2.c0, t0.c0 UNION SELECT ALL t1.c0, t2.c0, t0.c0 FROM t1, t0 LEFT OUTER JOIN t2 ON ((((t1.c0) NOTNULL)) ISNULL) WHERE ((NOT (((((NULL) NOT BETWEEN (t1.c0) AND (t0.c0))) IS FALSE)))) GROUP BY t1.c0, t2.c0, t0.c0 UNION SELECT ALL t1.c0, t2.c0, t0.c0 FROM t1, t0 LEFT OUTER JOIN t2 ON ((((t1.c0) NOTNULL)) ISNULL) WHERE (((((((NULL) NOT BETWEEN (t1.c0) AND (t0.c0))) IS FALSE)) ISNULL)) GROUP BY t1.c0, t2.c0, t0.c0;
SELECT t1.c0, t2.c0, t0.c0 FROM t1, t0 LEFT OUTER JOIN t2 ON ((((t1.c0) NOTNULL)) ISNULL) GROUP BY t1.c0, t2.c0, t0.c0;
SELECT ALL t0.c0 FROM t1, t0, t2 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t1, t0, t2 GROUP BY t0.c0 HAVING (~ (TIME(t0.c0, t0.c0, t1.c0))) UNION ALL SELECT t0.c0 FROM t1, t0, t2 GROUP BY t0.c0 HAVING (NOT ((~ (TIME(t0.c0, t0.c0, t1.c0))))) UNION ALL SELECT ALL t0.c0 FROM t1, t0, t2 GROUP BY t0.c0 HAVING (((~ (TIME(t0.c0, t0.c0, t1.c0)))) ISNULL);
SELECT ALL t0.c0 FROM t1, t0, t2 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t1, t0, t2 GROUP BY t0.c0 HAVING (~ (TIME(t0.c0, t0.c0, t1.c0))) UNION ALL SELECT t0.c0 FROM t1, t0, t2 GROUP BY t0.c0 HAVING (NOT ((~ (TIME(t0.c0, t0.c0, t1.c0))))) UNION ALL SELECT ALL t0.c0 FROM t1, t0, t2 GROUP BY t0.c0 HAVING (((~ (TIME(t0.c0, t0.c0, t1.c0)))) ISNULL);
SELECT ALL t0.c0 FROM t1, t0, t2 GROUP BY t0.c0;
SELECT t2.c0 FROM t2;
SELECT t2.c0 FROM t2 WHERE (INSTR(t2.c0, t2.c0) COLLATE RTRIM) UNION ALL SELECT t2.c0 FROM t2 WHERE ((NOT (INSTR(t2.c0, t2.c0) COLLATE RTRIM))) UNION ALL SELECT t2.c0 FROM t2 WHERE (((INSTR(t2.c0, t2.c0) COLLATE RTRIM) ISNULL));
SELECT t2.c0 FROM t2;
SELECT DISTINCT t1.c0, t0.c0 FROM t1, t0 INDEXED BY i28;
SELECT t1.c0, t0.c0 FROM t2, t1 FULL OUTER JOIN t0 ON (- (UNLIKELY(t0.c0))) GROUP BY t1.c0, t0.c0;
SELECT t1.c0, t0.c0 FROM t2, t1 FULL OUTER JOIN t0 ON (- (UNLIKELY(t0.c0))) WHERE (((((((((t1.c0 COLLATE NOCASE)AND(((t2.c0) ISNULL))))AND(t0.c0 COLLATE NOCASE)))AND(-2.106585021E9)))AND('1405107043'))) GROUP BY t1.c0, t0.c0 UNION SELECT t1.c0, t0.c0 FROM t2, t1 FULL OUTER JOIN t0 ON (- (UNLIKELY(t0.c0))) WHERE ((NOT (((((((((t1.c0 COLLATE NOCASE)AND(((t2.c0) ISNULL))))AND(t0.c0 COLLATE NOCASE)))AND(-2.106585021E9)))AND('1405107043'))))) GROUP BY t1.c0, t0.c0 UNION SELECT ALL t1.c0, t0.c0 FROM t2, t1 FULL OUTER JOIN t0 ON (- (UNLIKELY(t0.c0))) WHERE (((((((((((t1.c0 COLLATE NOCASE)AND(((t2.c0) ISNULL))))AND(t0.c0 COLLATE NOCASE)))AND(-2.106585021E9)))AND('1405107043'))) ISNULL)) GROUP BY t1.c0, t0.c0;
SELECT t1.c0, t0.c0 FROM t2, t1 FULL OUTER JOIN t0 ON (- (UNLIKELY(t0.c0))) GROUP BY t1.c0, t0.c0;
SELECT ALL t2.c0 FROM t0, t1 LEFT OUTER JOIN t2 ON CASE WHEN t0.c0 COLLATE NOCASE THEN (t0.c0 IN (t0.c0)) END GROUP BY t2.c0;
SELECT ALL t2.c0 FROM t0, t1 NOT INDEXED LEFT OUTER JOIN t2 ON CASE WHEN t0.c0 COLLATE NOCASE THEN (t0.c0 IN (t0.c0)) END GROUP BY t2.c0 HAVING '-900013698' UNION ALL SELECT ALL t2.c0 FROM t0, t1 LEFT OUTER JOIN t2 ON CASE WHEN t0.c0 COLLATE NOCASE THEN (t0.c0 IN (t0.c0)) END GROUP BY t2.c0 HAVING (NOT ('-900013698')) UNION ALL SELECT ALL t2.c0 FROM t0, t1 LEFT OUTER JOIN t2 ON CASE WHEN t0.c0 COLLATE NOCASE THEN (t0.c0 IN (t0.c0)) END GROUP BY t2.c0 HAVING (('-900013698') ISNULL);
SELECT ALL t2.c0 FROM t0, t1 LEFT OUTER JOIN t2 ON CASE WHEN t0.c0 COLLATE NOCASE THEN (t0.c0 IN (t0.c0)) END GROUP BY t2.c0;
SELECT ALL t2.c0 FROM t0, t1 NOT INDEXED LEFT OUTER JOIN t2 ON CASE WHEN t0.c0 COLLATE NOCASE THEN (t0.c0 IN (t0.c0)) END GROUP BY t2.c0 HAVING '-900013698' UNION ALL SELECT ALL t2.c0 FROM t0, t1 LEFT OUTER JOIN t2 ON CASE WHEN t0.c0 COLLATE NOCASE THEN (t0.c0 IN (t0.c0)) END GROUP BY t2.c0 HAVING (NOT ('-900013698')) UNION ALL SELECT ALL t2.c0 FROM t0, t1 LEFT OUTER JOIN t2 ON CASE WHEN t0.c0 COLLATE NOCASE THEN (t0.c0 IN (t0.c0)) END GROUP BY t2.c0 HAVING (('-900013698') ISNULL);
SELECT ALL t2.c0 FROM t0, t1 LEFT OUTER JOIN t2 ON CASE WHEN t0.c0 COLLATE NOCASE THEN (t0.c0 IN (t0.c0)) END GROUP BY t2.c0;
SELECT ALL t1.c0 FROM t1 CROSS JOIN t2 ON NULL;
SELECT t1.c0 FROM t1 CROSS JOIN t2 ON NULL WHERE (x'a487') UNION ALL SELECT t1.c0 FROM t1 CROSS JOIN t2 ON NULL WHERE ((NOT (x'a487'))) UNION ALL SELECT ALL t1.c0 FROM t1 CROSS JOIN t2 ON NULL WHERE (((x'a487') ISNULL));
SELECT ALL t1.c0 FROM t1 CROSS JOIN t2 ON NULL;
SELECT DISTINCT * FROM t0 FULL OUTER JOIN t2 ON -769595658 INNER JOIN t1 ON (t2.c0 COLLATE BINARY IN ());
SELECT DISTINCT * FROM t0 FULL OUTER JOIN t2 ON -769595658 INNER JOIN t1 ON (t2.c0 COLLATE BINARY IN ()) WHERE (((CASE t2.c0  WHEN t2.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t1.c0 THEN t0.c0 ELSE t2.c0 END) NOTNULL)) UNION SELECT DISTINCT * FROM t0 FULL OUTER JOIN t2 ON -769595658 INNER JOIN t1 ON (t2.c0 COLLATE BINARY IN ()) WHERE ((NOT (((CASE t2.c0  WHEN t2.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t1.c0 THEN t0.c0 ELSE t2.c0 END) NOTNULL)))) UNION SELECT DISTINCT * FROM t0 FULL OUTER JOIN t2 ON -769595658 INNER JOIN t1 ON (t2.c0 COLLATE BINARY IN ()) WHERE (((((CASE t2.c0  WHEN t2.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t1.c0 THEN t0.c0 ELSE t2.c0 END) NOTNULL)) ISNULL));
SELECT DISTINCT * FROM t0 FULL OUTER JOIN t2 ON -769595658 INNER JOIN t1 ON (t2.c0 COLLATE BINARY IN ());
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 WHERE (((x'') ISNULL)) GROUP BY t1.c0 UNION SELECT ALL t1.c0 FROM t1 WHERE ((NOT (((x'') ISNULL)))) GROUP BY t1.c0 UNION SELECT ALL t1.c0 FROM t1 WHERE (((((x'') ISNULL)) ISNULL)) GROUP BY t1.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t0.c0 FROM t1 INNER JOIN t2 ON CAST((t0.c0 IN (t0.c0, t2.c0)) AS TEXT) CROSS JOIN t0 ON (+ (((t2.c0)>(t2.c0)))) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t1 INNER JOIN t2 ON CAST((t0.c0 IN (t0.c0, t2.c0)) AS TEXT) CROSS JOIN t0 ON (+ (((t2.c0)>(t2.c0)))) GROUP BY t0.c0 HAVING AVG(AVG(t1.c0)) UNION ALL SELECT t0.c0 FROM t1 INNER JOIN t2 ON CAST((t0.c0 IN (t0.c0, t2.c0)) AS TEXT) CROSS JOIN t0 ON (+ (((t2.c0)>(t2.c0)))) GROUP BY t0.c0 HAVING (NOT (AVG(AVG(t1.c0)))) UNION ALL SELECT ALL t0.c0 FROM t1 INNER JOIN t2 ON CAST((t0.c0 IN (t0.c0, t2.c0)) AS TEXT) CROSS JOIN t0 ON (+ (((t2.c0)>(t2.c0)))) GROUP BY t0.c0 HAVING ((AVG(AVG(t1.c0))) ISNULL);
SELECT * FROM t2, t0 RIGHT OUTER JOIN t1 ON NULL;
SELECT ALL * FROM t2, t0 RIGHT OUTER JOIN t1 ON NULL WHERE ((((+ (t1.c0))) NOT BETWEEN ((NOT (t1.c0))) AND (((t0.c0)*(t2.c0))))) UNION ALL SELECT ALL * FROM t2, t0 RIGHT OUTER JOIN t1 ON NULL WHERE ((NOT ((((+ (t1.c0))) NOT BETWEEN ((NOT (t1.c0))) AND (((t0.c0)*(t2.c0))))))) UNION ALL SELECT ALL * FROM t2, t0 RIGHT OUTER JOIN t1 ON NULL WHERE ((((((+ (t1.c0))) NOT BETWEEN ((NOT (t1.c0))) AND (((t0.c0)*(t2.c0))))) ISNULL));
SELECT * FROM t2, t0 RIGHT OUTER JOIN t1 ON NULL;
SELECT DISTINCT t1.c0 FROM t1;
SELECT DISTINCT t1.c0 FROM t1 WHERE (t1.c0 COLLATE BINARY) UNION SELECT DISTINCT t1.c0 FROM t1 WHERE ((NOT (t1.c0 COLLATE BINARY))) UNION SELECT DISTINCT t1.c0 FROM t1 WHERE (((t1.c0 COLLATE BINARY) ISNULL));
SELECT DISTINCT t1.c0 FROM t1;
SELECT ALL t0.c0, t1.c0, t2.c0 FROM t0, t1 CROSS JOIN t2 ON 0.09390713879097268 GROUP BY t0.c0, t1.c0, t2.c0;
SELECT ALL t0.c0, t1.c0, t2.c0 FROM t0, t1 CROSS JOIN t2 ON 0.09390713879097268 WHERE (t1.c0) GROUP BY t0.c0, t1.c0, t2.c0 UNION SELECT t0.c0, t1.c0, t2.c0 FROM t0, t1 CROSS JOIN t2 ON 0.09390713879097268 WHERE ((NOT (t1.c0))) GROUP BY t0.c0, t1.c0, t2.c0 UNION SELECT t0.c0, t1.c0, t2.c0 FROM t0, t1 CROSS JOIN t2 ON 0.09390713879097268 WHERE (((t1.c0) ISNULL)) GROUP BY t0.c0, t1.c0, t2.c0;
SELECT ALL t0.c0, t1.c0, t2.c0 FROM t0, t1 CROSS JOIN t2 ON 0.09390713879097268 GROUP BY t0.c0, t1.c0, t2.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING AVG(COUNT(t0.c0)) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (AVG(COUNT(t0.c0)))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((AVG(COUNT(t0.c0))) ISNULL);
SELECT ALL * FROM t0;
SELECT ALL * FROM t0 WHERE ((+ ((NOT (t0.c0))))) UNION ALL SELECT ALL * FROM t0 WHERE ((NOT ((+ ((NOT (t0.c0))))))) UNION ALL SELECT * FROM t0 WHERE ((((+ ((NOT (t0.c0))))) ISNULL));
SELECT ALL * FROM t0;
SELECT DISTINCT * FROM t1, t2;
SELECT DISTINCT * FROM t1, t2 WHERE ((- (CASE t1.c0  WHEN t2.c0 THEN t2.c0 ELSE t2.c0 END))) UNION SELECT DISTINCT * FROM t1, t2 WHERE ((NOT ((- (CASE t1.c0  WHEN t2.c0 THEN t2.c0 ELSE t2.c0 END))))) UNION SELECT DISTINCT * FROM t1, t2 WHERE ((((- (CASE t1.c0  WHEN t2.c0 THEN t2.c0 ELSE t2.c0 END))) ISNULL));
SELECT DISTINCT * FROM t1, t2;
SELECT ALL t2.c0, t1.c0 FROM t2, t1 GROUP BY t2.c0, t1.c0;
SELECT ALL t2.c0, t1.c0 FROM t2, t1 WHERE (((((t1.c0)>=(t2.c0)))&(t1.c0 COLLATE NOCASE))) GROUP BY t2.c0, t1.c0 UNION SELECT ALL t2.c0, t1.c0 FROM t2, t1 WHERE ((NOT (((((t1.c0)>=(t2.c0)))&(t1.c0 COLLATE NOCASE))))) GROUP BY t2.c0, t1.c0 UNION SELECT ALL t2.c0, t1.c0 FROM t2, t1 WHERE (((((((t1.c0)>=(t2.c0)))&(t1.c0 COLLATE NOCASE))) ISNULL)) GROUP BY t2.c0, t1.c0;
SELECT ALL t2.c0, t1.c0 FROM t2, t1 GROUP BY t2.c0, t1.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING SUM(COUNT(GROUP_CONCAT(AVG(t0.c0)))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (SUM(COUNT(GROUP_CONCAT(AVG(t0.c0)))))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((SUM(COUNT(GROUP_CONCAT(AVG(t0.c0))))) ISNULL);
SELECT ALL * FROM t1 NATURAL JOIN t2;
SELECT ALL * FROM t1 NATURAL JOIN t2 WHERE ((CAST(t2.c0 AS BLOB) IN ())) UNION ALL SELECT ALL * FROM t1 NATURAL JOIN t2 WHERE ((NOT ((CAST(t2.c0 AS BLOB) IN ())))) UNION ALL SELECT * FROM t1 NATURAL JOIN t2 WHERE ((((CAST(t2.c0 AS BLOB) IN ())) ISNULL));
SELECT ALL * FROM t1 NATURAL JOIN t2;
SELECT DISTINCT t2.c0 FROM t0 FULL OUTER JOIN t1 ON '0.12512733019298838' LEFT OUTER JOIN t2 ON (((t0.c0) NOT BETWEEN (t0.c0) AND (t1.c0)) IN ());
SELECT DISTINCT t2.c0 FROM t0 FULL OUTER JOIN t1 ON '0.12512733019298838' LEFT OUTER JOIN t2 ON (((t0.c0) NOT BETWEEN (t0.c0) AND (t1.c0)) IN ()) WHERE (((t0.c0 COLLATE BINARY) ISNULL)) UNION SELECT DISTINCT t2.c0 FROM t0 FULL OUTER JOIN t1 ON '0.12512733019298838' LEFT OUTER JOIN t2 ON (((t0.c0) NOT BETWEEN (t0.c0) AND (t1.c0)) IN ()) WHERE ((NOT (((t0.c0 COLLATE BINARY) ISNULL)))) UNION SELECT DISTINCT t2.c0 FROM t0 FULL OUTER JOIN t1 ON '0.12512733019298838' LEFT OUTER JOIN t2 ON (((t0.c0) NOT BETWEEN (t0.c0) AND (t1.c0)) IN ()) WHERE (((((t0.c0 COLLATE BINARY) ISNULL)) ISNULL));
SELECT DISTINCT t2.c0 FROM t0 FULL OUTER JOIN t1 ON '0.12512733019298838' LEFT OUTER JOIN t2 ON (((t0.c0) NOT BETWEEN (t0.c0) AND (t1.c0)) IN ());
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t1.c0 FROM t1 WHERE (CASE (((t1.c0)) BETWEEN ((t1.c0)) AND ((t1.c0)))  WHEN (t1.c0 IN (t1.c0)) THEN ((t1.c0)||(t1.c0)) ELSE (('')OR(t1.c0)) END) GROUP BY t1.c0 UNION SELECT t1.c0 FROM t1 WHERE ((NOT (CASE (((t1.c0)) BETWEEN ((t1.c0)) AND ((t1.c0)))  WHEN (t1.c0 IN (t1.c0)) THEN ((t1.c0)||(t1.c0)) ELSE (('')OR(t1.c0)) END))) GROUP BY t1.c0 UNION SELECT ALL t1.c0 FROM t1 WHERE (((CASE (((t1.c0)) BETWEEN ((t1.c0)) AND ((t1.c0)))  WHEN (t1.c0 IN (t1.c0)) THEN ((t1.c0)||(t1.c0)) ELSE (('')OR(t1.c0)) END) ISNULL)) GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t2.c0 FROM t0, t2 GROUP BY t2.c0;
SELECT t2.c0 FROM t0, t2 GROUP BY t2.c0 HAVING ((~ (AVG(NULL))) IN (SUM(TOTAL(COUNT(AVG(GROUP_CONCAT(GROUP_CONCAT(t2.c0)))))))) UNION ALL SELECT t2.c0 FROM t0, t2 GROUP BY t2.c0 HAVING (NOT (((~ (AVG(NULL))) IN (SUM(TOTAL(COUNT(AVG(GROUP_CONCAT(GROUP_CONCAT(t2.c0)))))))))) UNION ALL SELECT t2.c0 FROM t0, t2 GROUP BY t2.c0 HAVING ((((~ (AVG(NULL))) IN (SUM(TOTAL(COUNT(AVG(GROUP_CONCAT(GROUP_CONCAT(t2.c0))))))))) ISNULL);
SELECT ALL t0.c0, t1.c0 FROM t2, t1, t0;
SELECT t0.c0, t1.c0 FROM t2, t1, t0 WHERE (((((t1.c0) NOT BETWEEN (t2.c0) AND (t1.c0)))<>(LIKELIHOOD(t0.c0, 0.08012089154800484)))) UNION ALL SELECT t0.c0, t1.c0 FROM t2, t1, t0 WHERE ((NOT (((((t1.c0) NOT BETWEEN (t2.c0) AND (t1.c0)))<>(LIKELIHOOD(t0.c0, 0.08012089154800484)))))) UNION ALL SELECT t0.c0, t1.c0 FROM t2, t1, t0 WHERE (((((((t1.c0) NOT BETWEEN (t2.c0) AND (t1.c0)))!=(LIKELIHOOD(t0.c0, 0.08012089154800484)))) ISNULL));
SELECT ALL t0.c0, t1.c0 FROM t2, t1, t0;
SELECT DISTINCT t2.c0 FROM t1, t0, t2;
SELECT DISTINCT t2.c0 FROM t1, t0, t2 WHERE (((((((((CAST(t1.c0 AS BLOB))AND(((t1.c0)IS NOT(t1.c0)))))OR(((((t0.c0)OR(NULL)))AND(t2.c0)))))OR(((t2.c0) IS TRUE))))OR(SUBSTR(t1.c0, t1.c0)))) UNION SELECT DISTINCT t2.c0 FROM t1, t0, t2 WHERE ((NOT (((((((((CAST(t1.c0 AS BLOB))AND(((t1.c0)IS NOT(t1.c0)))))OR(((((t0.c0)OR(NULL)))AND(t2.c0)))))OR(((t2.c0) IS TRUE))))OR(SUBSTR(t1.c0, t1.c0)))))) UNION SELECT DISTINCT t2.c0 FROM t1, t0, t2 WHERE (((((((((((CAST(t1.c0 AS BLOB))AND(((t1.c0)IS NOT(t1.c0)))))OR(((((t0.c0)OR(NULL)))AND(t2.c0)))))OR(((t2.c0) IS TRUE))))OR(SUBSTR(t1.c0, t1.c0)))) ISNULL));
SELECT DISTINCT t2.c0 FROM t1, t0, t2;
SELECT ALL t1.c0 FROM t2, t0 RIGHT OUTER JOIN t1 ON CAST(CAST('85Ni' AS INTEGER) AS INTEGER) GROUP BY t1.c0;
SELECT t1.c0 FROM t2, t0 RIGHT OUTER JOIN t1 ON CAST(CAST('85Ni' AS INTEGER) AS INTEGER) WHERE (t1.c0) GROUP BY t1.c0 UNION SELECT ALL t1.c0 FROM t2, t0 RIGHT OUTER JOIN t1 ON CAST(CAST('85Ni' AS INTEGER) AS INTEGER) WHERE ((NOT (t1.c0))) GROUP BY t1.c0 UNION SELECT ALL t1.c0 FROM t2, t0 RIGHT OUTER JOIN t1 ON CAST(CAST('85Ni' AS INTEGER) AS INTEGER) WHERE (((t1.c0) ISNULL)) GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t2, t0 RIGHT OUTER JOIN t1 ON CAST(CAST('85Ni' AS INTEGER) AS INTEGER) GROUP BY t1.c0;
SELECT t2.c0, t1.c0 FROM t2, t1 GROUP BY t2.c0, t1.c0;
SELECT t2.c0, t1.c0 FROM t2, t1 GROUP BY t2.c0, t1.c0 HAVING COUNT(*) UNION ALL SELECT ALL t2.c0, t1.c0 FROM t2, t1 GROUP BY t2.c0, t1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT t2.c0, t1.c0 FROM t2, t1 GROUP BY t2.c0, t1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT t2.c0, t1.c0 FROM t2, t1 GROUP BY t2.c0, t1.c0;
SELECT t2.c0, t1.c0 FROM t2, t1 GROUP BY t2.c0, t1.c0 HAVING COUNT(*) UNION ALL SELECT ALL t2.c0, t1.c0 FROM t2, t1 GROUP BY t2.c0, t1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT t2.c0, t1.c0 FROM t2, t1 GROUP BY t2.c0, t1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT t2.c0, t1.c0 FROM t2, t1 GROUP BY t2.c0, t1.c0;
SELECT ALL * FROM t2;
SELECT ALL * FROM t2 WHERE (CASE (- (t2.c0))  WHEN (((t2.c0, t2.c0, t2.c0)) BETWEEN ((t2.c0, t2.c0, t2.c0)) AND ((t2.c0, t2.c0, t2.c0))) THEN NULL END) UNION ALL SELECT * FROM t2 WHERE ((NOT (CASE (- (t2.c0))  WHEN (((t2.c0, t2.c0, t2.c0)) BETWEEN ((t2.c0, t2.c0, t2.c0)) AND ((t2.c0, t2.c0, t2.c0))) THEN NULL END))) UNION ALL SELECT ALL * FROM t2 WHERE (((CASE (- (t2.c0))  WHEN (((t2.c0, t2.c0, t2.c0)) BETWEEN ((t2.c0, t2.c0, t2.c0)) AND ((t2.c0, t2.c0, t2.c0))) THEN NULL END) ISNULL));
SELECT ALL * FROM t2;
SELECT DISTINCT * FROM t0, t2;
SELECT DISTINCT * FROM t0, t2 WHERE (t2.c0) UNION SELECT DISTINCT * FROM t0, t2 WHERE ((NOT (t2.c0))) UNION SELECT DISTINCT * FROM t0, t2 WHERE (((t2.c0) ISNULL));
SELECT DISTINCT * FROM t0, t2;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 NOT INDEXED WHERE (2143731810) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT (2143731810))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE (((2143731810) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0;
SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0 HAVING CASE GROUP_CONCAT(t2.c0)  WHEN ((t2.c0) IS TRUE) THEN ((t2.c0)%(t2.c0)) END UNION ALL SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0 HAVING (NOT (CASE GROUP_CONCAT(t2.c0)  WHEN ((t2.c0) IS TRUE) THEN ((t2.c0)%(t2.c0)) END)) UNION ALL SELECT t2.c0 FROM t2 GROUP BY t2.c0 HAVING ((CASE GROUP_CONCAT(t2.c0)  WHEN ((t2.c0) IS TRUE) THEN ((t2.c0)%(t2.c0)) END) ISNULL);
SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0;
SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0 HAVING CASE GROUP_CONCAT(t2.c0)  WHEN ((t2.c0) IS TRUE) THEN ((t2.c0)%(t2.c0)) END UNION ALL SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0 HAVING (NOT (CASE GROUP_CONCAT(t2.c0)  WHEN ((t2.c0) IS TRUE) THEN ((t2.c0)%(t2.c0)) END)) UNION ALL SELECT t2.c0 FROM t2 GROUP BY t2.c0 HAVING ((CASE GROUP_CONCAT(t2.c0)  WHEN ((t2.c0) IS TRUE) THEN ((t2.c0)%(t2.c0)) END) ISNULL);
SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0;
SELECT t0.c0 FROM t0;
SELECT t0.c0 FROM t0 WHERE ((((((- (t0.c0)))OR(CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)))OR(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))) UNION ALL SELECT t0.c0 FROM t0 WHERE ((NOT ((((((- (t0.c0)))OR(CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)))OR(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))))) UNION ALL SELECT ALL t0.c0 FROM t0 WHERE ((((((((- (t0.c0)))OR(CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)))OR(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))) ISNULL));
SELECT t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0 WHERE (STRFTIME((((t0.c0))>((0.5736843404608679))), ((t0.c0)<(t0.c0)), CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END, ((t0.c0) NOT BETWEEN (NULL) AND (t0.c0)), ((((t0.c0)OR(t0.c0)))OR(t0.c0)))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((NOT (STRFTIME((((t0.c0))>((0.5736843404608679))), ((t0.c0)<(t0.c0)), CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END, ((t0.c0) NOT BETWEEN (NULL) AND (t0.c0)), ((((t0.c0)OR(t0.c0)))OR(t0.c0)))))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE (((STRFTIME((((t0.c0))>((0.5736843404608679))), ((t0.c0)<(t0.c0)), CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END, ((t0.c0) NOT BETWEEN (NULL) AND (t0.c0)), ((((t0.c0)OR(t0.c0)))OR(t0.c0)))) ISNULL));
SELECT DISTINCT t0.c0 FROM t0;
SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0;
SELECT ALL t2.c0 FROM t2 WHERE (x'') GROUP BY t2.c0 UNION SELECT ALL t2.c0 FROM t2 WHERE ((NOT (x''))) GROUP BY t2.c0 UNION SELECT t2.c0 FROM t2 WHERE (((x'') ISNULL)) GROUP BY t2.c0;
SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0;
SELECT ALL t0.c0, t1.c0, t2.c0 FROM t2, t0 RIGHT OUTER JOIN t1 ON ((((((((((t0.c0)IS NOT(t0.c0)))AND(((t1.c0) NOT BETWEEN (t0.c0) AND ('-976180435')))))OR(CASE t2.c0  WHEN t2.c0 THEN t0.c0 WHEN t2.c0 THEN t2.c0 WHEN t0.c0 THEN t2.c0 ELSE t0.c0 END)))OR((NOT (t1.c0)))))OR(((t0.c0)*(t1.c0)))) GROUP BY t0.c0, t1.c0, t2.c0;
SELECT ALL t0.c0, t1.c0, t2.c0 FROM t2, t0 RIGHT OUTER JOIN t1 ON ((((((((((t0.c0)IS NOT(t0.c0)))AND(((t1.c0) NOT BETWEEN (t0.c0) AND ('-976180435')))))OR(CASE t2.c0  WHEN t2.c0 THEN t0.c0 WHEN t2.c0 THEN t2.c0 WHEN t0.c0 THEN t2.c0 ELSE t0.c0 END)))OR((NOT (t1.c0)))))OR(((t0.c0)*(t1.c0)))) GROUP BY t0.c0, t1.c0, t2.c0 HAVING GROUP_CONCAT(CAST(t1.c0 AS INTEGER)) UNION ALL SELECT t0.c0, t1.c0, t2.c0 FROM t2, t0 RIGHT OUTER JOIN t1 ON ((((((((((t0.c0)IS NOT(t0.c0)))AND(((t1.c0) NOT BETWEEN (t0.c0) AND ('-976180435')))))OR(CASE t2.c0  WHEN t2.c0 THEN t0.c0 WHEN t2.c0 THEN t2.c0 WHEN t0.c0 THEN t2.c0 ELSE t0.c0 END)))OR((NOT (t1.c0)))))OR(((t0.c0)*(t1.c0)))) GROUP BY t0.c0, t1.c0, t2.c0 HAVING (NOT (GROUP_CONCAT(CAST(t1.c0 AS INTEGER)))) UNION ALL SELECT ALL t0.c0, t1.c0, t2.c0 FROM t2, t0 RIGHT OUTER JOIN t1 ON ((((((((((t0.c0)IS NOT(t0.c0)))AND(((t1.c0) NOT BETWEEN (t0.c0) AND ('-976180435')))))OR(CASE t2.c0  WHEN t2.c0 THEN t0.c0 WHEN t2.c0 THEN t2.c0 WHEN t0.c0 THEN t2.c0 ELSE t0.c0 END)))OR((NOT (t1.c0)))))OR(((t0.c0)*(t1.c0)))) GROUP BY t0.c0, t1.c0, t2.c0 HAVING ((GROUP_CONCAT(CAST(t1.c0 AS INTEGER))) ISNULL);
SELECT ALL t0.c0, t1.c0, t2.c0 FROM t2, t0 RIGHT OUTER JOIN t1 ON ((((((((((t0.c0)IS NOT(t0.c0)))AND(((t1.c0) NOT BETWEEN (t0.c0) AND ('-976180435')))))OR(CASE t2.c0  WHEN t2.c0 THEN t0.c0 WHEN t2.c0 THEN t2.c0 WHEN t0.c0 THEN t2.c0 ELSE t0.c0 END)))OR((NOT (t1.c0)))))OR(((t0.c0)*(t1.c0)))) GROUP BY t0.c0, t1.c0, t2.c0;
SELECT ALL t0.c0, t1.c0, t2.c0 FROM t2, t0 RIGHT OUTER JOIN t1 ON ((((((((((t0.c0)IS NOT(t0.c0)))AND(((t1.c0) NOT BETWEEN (t0.c0) AND ('-976180435')))))OR(CASE t2.c0  WHEN t2.c0 THEN t0.c0 WHEN t2.c0 THEN t2.c0 WHEN t0.c0 THEN t2.c0 ELSE t0.c0 END)))OR((NOT (t1.c0)))))OR(((t0.c0)*(t1.c0)))) GROUP BY t0.c0, t1.c0, t2.c0 HAVING GROUP_CONCAT(CAST(t1.c0 AS INTEGER)) UNION ALL SELECT t0.c0, t1.c0, t2.c0 FROM t2, t0 RIGHT OUTER JOIN t1 ON ((((((((((t0.c0)IS NOT(t0.c0)))AND(((t1.c0) NOT BETWEEN (t0.c0) AND ('-976180435')))))OR(CASE t2.c0  WHEN t2.c0 THEN t0.c0 WHEN t2.c0 THEN t2.c0 WHEN t0.c0 THEN t2.c0 ELSE t0.c0 END)))OR((NOT (t1.c0)))))OR(((t0.c0)*(t1.c0)))) GROUP BY t0.c0, t1.c0, t2.c0 HAVING (NOT (GROUP_CONCAT(CAST(t1.c0 AS INTEGER)))) UNION ALL SELECT ALL t0.c0, t1.c0, t2.c0 FROM t2, t0 RIGHT OUTER JOIN t1 ON ((((((((((t0.c0)IS NOT(t0.c0)))AND(((t1.c0) NOT BETWEEN (t0.c0) AND ('-976180435')))))OR(CASE t2.c0  WHEN t2.c0 THEN t0.c0 WHEN t2.c0 THEN t2.c0 WHEN t0.c0 THEN t2.c0 ELSE t0.c0 END)))OR((NOT (t1.c0)))))OR(((t0.c0)*(t1.c0)))) GROUP BY t0.c0, t1.c0, t2.c0 HAVING ((GROUP_CONCAT(CAST(t1.c0 AS INTEGER))) ISNULL);
SELECT ALL t0.c0, t1.c0, t2.c0 FROM t2, t0 RIGHT OUTER JOIN t1 ON ((((((((((t0.c0)IS NOT(t0.c0)))AND(((t1.c0) NOT BETWEEN (t0.c0) AND ('-976180435')))))OR(CASE t2.c0  WHEN t2.c0 THEN t0.c0 WHEN t2.c0 THEN t2.c0 WHEN t0.c0 THEN t2.c0 ELSE t0.c0 END)))OR((NOT (t1.c0)))))OR(((t0.c0)*(t1.c0)))) GROUP BY t0.c0, t1.c0, t2.c0;
SELECT t2.c0 FROM t2;
SELECT t2.c0 FROM t2 WHERE (((t2.c0 IN (t2.c0)) IN ())) UNION ALL SELECT t2.c0 FROM t2 WHERE ((NOT (((t2.c0 IN (t2.c0)) IN ())))) UNION ALL SELECT t2.c0 FROM t2 WHERE (((((t2.c0 IN (t2.c0)) IN ())) ISNULL));
SELECT t2.c0 FROM t2;
SELECT DISTINCT * FROM t1 RIGHT OUTER JOIN t2 ON (((t0.c0 IN (t1.c0))) NOTNULL) CROSS JOIN t0 ON (NOT (((t1.c0) NOT BETWEEN (0Xffffffffec570ae9) AND (t0.c0))));
SELECT ALL t2.c0, t0.c0 FROM t2, t1, t0 GROUP BY t2.c0, t0.c0;
SELECT ALL t2.c0, t0.c0 FROM t2, t1, t0 WHERE (((t0.c0)<=(t1.c0)) COLLATE BINARY) GROUP BY t2.c0, t0.c0 UNION SELECT t2.c0, t0.c0 FROM t2, t1, t0 WHERE ((NOT (((t0.c0)<=(t1.c0)) COLLATE BINARY))) GROUP BY t2.c0, t0.c0 UNION SELECT t2.c0, t0.c0 FROM t2, t1, t0 WHERE (((((t0.c0)<=(t1.c0)) COLLATE BINARY) ISNULL)) GROUP BY t2.c0, t0.c0;
SELECT ALL t2.c0, t0.c0 FROM t2, t1, t0 GROUP BY t2.c0, t0.c0;
SELECT t1.c0 FROM t0, t2, t1 GROUP BY t1.c0;
SELECT t1.c0 FROM t0, t2, t1 GROUP BY t1.c0 HAVING x'' UNION ALL SELECT ALL t1.c0 FROM t0, t2, t1 GROUP BY t1.c0 HAVING (NOT (x'')) UNION ALL SELECT ALL t1.c0 FROM t0, t2, t1 GROUP BY t1.c0 HAVING ((x'') ISNULL);
SELECT t1.c0 FROM t0, t2, t1 GROUP BY t1.c0;
SELECT t1.c0 FROM t0, t2, t1 GROUP BY t1.c0 HAVING x'' UNION ALL SELECT ALL t1.c0 FROM t0, t2, t1 GROUP BY t1.c0 HAVING (NOT (x'')) UNION ALL SELECT ALL t1.c0 FROM t0, t2, t1 GROUP BY t1.c0 HAVING ((x'') ISNULL);
SELECT t1.c0 FROM t0, t2, t1 GROUP BY t1.c0;
SELECT ALL * FROM t0 FULL OUTER JOIN t2 ON ((t0.c0)>=((NOT (t0.c0))));
SELECT * FROM t0 FULL OUTER JOIN t2 ON ((t0.c0)>=((NOT (t0.c0)))) WHERE (((((t2.c0)OR(t2.c0))) NOT BETWEEN (((t0.c0)|(t0.c0))) AND (((((t2.c0)OR(t2.c0)))OR(t2.c0))))) UNION ALL SELECT ALL * FROM t0 FULL OUTER JOIN t2 ON ((t0.c0)>=((NOT (t0.c0)))) WHERE ((NOT (((((t2.c0)OR(t2.c0))) NOT BETWEEN (((t0.c0)|(t0.c0))) AND (((((t2.c0)OR(t2.c0)))OR(t2.c0))))))) UNION ALL SELECT ALL * FROM t0 FULL OUTER JOIN t2 ON ((t0.c0)>=((NOT (t0.c0)))) WHERE (((((((t2.c0)OR(t2.c0))) NOT BETWEEN (((t0.c0)|(t0.c0))) AND (((((t2.c0)OR(t2.c0)))OR(t2.c0))))) ISNULL));
SELECT ALL * FROM t0 FULL OUTER JOIN t2 ON ((t0.c0)>=((NOT (t0.c0))));
SELECT DISTINCT t1.c0 FROM t1;
SELECT DISTINCT t1.c0 FROM t1 WHERE ((+ (t1.c0 COLLATE BINARY))) UNION SELECT DISTINCT t1.c0 FROM t1 WHERE ((NOT ((+ (t1.c0 COLLATE BINARY))))) UNION SELECT DISTINCT t1.c0 FROM t1 WHERE ((((+ (t1.c0 COLLATE BINARY))) ISNULL));
SELECT DISTINCT t1.c0 FROM t1;
SELECT t2.c0, t0.c0, t1.c0 FROM t1, t0 NOT INDEXED, t2 GROUP BY t2.c0, t0.c0, t1.c0;
SELECT ALL t2.c0, t0.c0, t1.c0 FROM t1, t0, t2 WHERE (0.13979862406827992) GROUP BY t2.c0, t0.c0, t1.c0 UNION SELECT t2.c0, t0.c0, t1.c0 FROM t1, t0, t2 WHERE ((NOT (0.13979862406827992))) GROUP BY t2.c0, t0.c0, t1.c0 UNION SELECT ALL t2.c0, t0.c0, t1.c0 FROM t1, t0, t2 WHERE (((0.13979862406827992) ISNULL)) GROUP BY t2.c0, t0.c0, t1.c0;
SELECT t2.c0, t0.c0, t1.c0 FROM t1, t0 NOT INDEXED, t2 GROUP BY t2.c0, t0.c0, t1.c0;
SELECT ALL t2.c0, t0.c0 FROM t2, t0 GROUP BY t2.c0, t0.c0;
SELECT t2.c0, t0.c0 FROM t2, t0 GROUP BY t2.c0, t0.c0 HAVING ((GROUP_CONCAT(GROUP_CONCAT(t0.c0)))<=(((TOTAL(COUNT(*)))+(MIN(t0.c0))))) UNION ALL SELECT t2.c0, t0.c0 FROM t2, t0 GROUP BY t2.c0, t0.c0 HAVING (NOT (((GROUP_CONCAT(GROUP_CONCAT(t0.c0)))<=(((TOTAL(COUNT(*)))+(MIN(t0.c0))))))) UNION ALL SELECT t2.c0, t0.c0 FROM t2, t0 GROUP BY t2.c0, t0.c0 HAVING ((((GROUP_CONCAT(GROUP_CONCAT(t0.c0)))<=(((TOTAL(COUNT(*)))+(MIN(t0.c0)))))) ISNULL);
SELECT * FROM t0;
SELECT * FROM t0 WHERE (CAST((t0.c0 IN ()) AS TEXT)) UNION ALL SELECT * FROM t0 WHERE ((NOT (CAST((t0.c0 IN ()) AS TEXT)))) UNION ALL SELECT ALL * FROM t0 WHERE (((CAST((t0.c0 IN ()) AS TEXT)) ISNULL));
SELECT * FROM t0;
SELECT DISTINCT t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0 WHERE (((CASE WHEN t0.c0 THEN t0.c0 END) NOTNULL)) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((NOT (((CASE WHEN t0.c0 THEN t0.c0 END) NOTNULL)))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE (((((CASE WHEN t0.c0 THEN t0.c0 END) NOTNULL)) ISNULL));
SELECT DISTINCT t0.c0 FROM t0;
SELECT t0.c0, t1.c0 FROM t1, t0 GROUP BY t0.c0, t1.c0;
SELECT t0.c0, t1.c0 FROM t1, t0 WHERE (t1.c0 COLLATE RTRIM) GROUP BY t0.c0, t1.c0 UNION SELECT t0.c0, t1.c0 FROM t1, t0 WHERE ((NOT (t1.c0 COLLATE RTRIM))) GROUP BY t0.c0, t1.c0 UNION SELECT ALL t0.c0, t1.c0 FROM t1, t0 WHERE (((t1.c0 COLLATE RTRIM) ISNULL)) GROUP BY t0.c0, t1.c0;
SELECT t0.c0, t1.c0 FROM t1, t0 GROUP BY t0.c0, t1.c0;
SELECT ALL t2.c0, t1.c0 FROM t1 LEFT OUTER JOIN t0 ON (~ ((((t0.c0))<=((t1.c0))))) INNER JOIN t2 ON ((((t1.c0) BETWEEN (t0.c0) AND (t2.c0)))IS(t1.c0 COLLATE BINARY)) GROUP BY t2.c0, t1.c0;
SELECT t2.c0, t1.c0 FROM t1 LEFT OUTER JOIN t0 ON (~ ((((t0.c0))<=((t1.c0))))) INNER JOIN t2 ON ((((t1.c0) BETWEEN (t0.c0) AND (t2.c0)))IS(t1.c0 COLLATE BINARY)) GROUP BY t2.c0, t1.c0 HAVING COUNT(*) UNION ALL SELECT ALL t2.c0, t1.c0 FROM t1 LEFT OUTER JOIN t0 ON (~ ((((t0.c0))<=((t1.c0))))) INNER JOIN t2 ON ((((t1.c0) BETWEEN (t0.c0) AND (t2.c0)))IS(t1.c0 COLLATE BINARY)) GROUP BY t2.c0, t1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL t2.c0, t1.c0 FROM t1 LEFT OUTER JOIN t0 ON (~ ((((t0.c0))<=((t1.c0))))) INNER JOIN t2 ON ((((t1.c0) BETWEEN (t0.c0) AND (t2.c0)))IS(t1.c0 COLLATE BINARY)) GROUP BY t2.c0, t1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL t2.c0, t1.c0 FROM t1 LEFT OUTER JOIN t0 ON (~ ((((t0.c0))<=((t1.c0))))) INNER JOIN t2 ON ((((t1.c0) BETWEEN (t0.c0) AND (t2.c0)))IS(t1.c0 COLLATE BINARY)) GROUP BY t2.c0, t1.c0;
SELECT t2.c0, t1.c0 FROM t1 LEFT OUTER JOIN t0 ON (~ ((((t0.c0))<=((t1.c0))))) INNER JOIN t2 ON ((((t1.c0) BETWEEN (t0.c0) AND (t2.c0)))IS(t1.c0 COLLATE BINARY)) GROUP BY t2.c0, t1.c0 HAVING COUNT(*) UNION ALL SELECT ALL t2.c0, t1.c0 FROM t1 LEFT OUTER JOIN t0 ON (~ ((((t0.c0))<=((t1.c0))))) INNER JOIN t2 ON ((((t1.c0) BETWEEN (t0.c0) AND (t2.c0)))IS(t1.c0 COLLATE BINARY)) GROUP BY t2.c0, t1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL t2.c0, t1.c0 FROM t1 LEFT OUTER JOIN t0 ON (~ ((((t0.c0))<=((t1.c0))))) INNER JOIN t2 ON ((((t1.c0) BETWEEN (t0.c0) AND (t2.c0)))IS(t1.c0 COLLATE BINARY)) GROUP BY t2.c0, t1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL t2.c0, t1.c0 FROM t1 LEFT OUTER JOIN t0 ON (~ ((((t0.c0))<=((t1.c0))))) INNER JOIN t2 ON ((((t1.c0) BETWEEN (t0.c0) AND (t2.c0)))IS(t1.c0 COLLATE BINARY)) GROUP BY t2.c0, t1.c0;
SELECT ALL TOTAL((((t2.c0, t0.c0, t2.c0, t2.c0, t0.c0)) BETWEEN (((- (t0.c0)), CASE WHEN NULL THEN t0.c0 END, (t0.c0 IN ()), CASE t0.c0  WHEN t2.c0 THEN t2.c0 WHEN t0.c0 THEN t2.c0 WHEN 0.5682707860473868 THEN t0.c0 END, t0.c0 COLLATE BINARY)) AND ((((((t2.c0)OR(t2.c0)))OR(t0.c0)), LIKELY(t2.c0), ((t0.c0)GLOB(t2.c0)), ((t2.c0) BETWEEN (t0.c0) AND (t2.c0)), ((t2.c0) IS FALSE))))) FROM t0, t2;
SELECT t0.c0, t1.c0 FROM t0, t1;
SELECT ALL t0.c0, t1.c0 FROM t0, t1 WHERE ((((((t1.c0)) BETWEEN ((t0.c0)) AND ((t1.c0)))) NOT BETWEEN (CAST(t0.c0 AS NUMERIC)) AND (((t0.c0) BETWEEN (t1.c0) AND (t1.c0))))) UNION ALL SELECT ALL t0.c0, t1.c0 FROM t0, t1 WHERE ((NOT ((((((t1.c0)) BETWEEN ((t0.c0)) AND ((t1.c0)))) NOT BETWEEN (CAST(t0.c0 AS NUMERIC)) AND (((t0.c0) BETWEEN (t1.c0) AND (t1.c0))))))) UNION ALL SELECT ALL t0.c0, t1.c0 FROM t0, t1 WHERE ((((((((t1.c0)) BETWEEN ((t0.c0)) AND ((t1.c0)))) NOT BETWEEN (CAST(t0.c0 AS NUMERIC)) AND (((t0.c0) BETWEEN (t1.c0) AND (t1.c0))))) ISNULL));
SELECT t0.c0, t1.c0 FROM t0, t1;
SELECT DISTINCT * FROM t2 NATURAL JOIN t0;
SELECT DISTINCT * FROM t2 NATURAL JOIN t0 WHERE (MAX(json_object(t0.c0, t0.c0), ((t0.c0)/(t2.c0)), (+ (t0.c0)), (- (t0.c0)))) UNION SELECT DISTINCT * FROM t2 NATURAL JOIN t0 WHERE ((NOT (MAX(json_object(t0.c0, t0.c0), ((t0.c0)/(t2.c0)), (+ (t0.c0)), (- (t0.c0)))))) UNION SELECT DISTINCT * FROM t2 NATURAL JOIN t0 WHERE (((MAX(json_object(t0.c0, t0.c0), ((t0.c0)/(t2.c0)), (+ (t0.c0)), (- (t0.c0)))) ISNULL));
SELECT DISTINCT * FROM t2 NATURAL JOIN t0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE ((0.2860758135840137 IN ('183835076'))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT ((0.2860758135840137 IN ('183835076'))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((((0.2860758135840137 IN ('183835076'))) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING MIN(((t0.c0)||(AVG(AVG(AVG(t0.c0)))))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (MIN(((t0.c0)||(AVG(AVG(AVG(t0.c0)))))))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((MIN(((t0.c0)||(AVG(AVG(AVG(t0.c0))))))) ISNULL);
SELECT t1.c0 FROM t1;
SELECT t1.c0 FROM t1 WHERE ((NOT ((((NULL)) NOT BETWEEN ((t1.c0)) AND ((t1.c0)))))) UNION ALL SELECT t1.c0 FROM t1 WHERE ((NOT ((NOT ((((NULL)) NOT BETWEEN ((t1.c0)) AND ((t1.c0)))))))) UNION ALL SELECT ALL t1.c0 FROM t1 WHERE ((((NOT ((((NULL)) NOT BETWEEN ((t1.c0)) AND ((t1.c0)))))) ISNULL));
SELECT t1.c0 FROM t1;
SELECT DISTINCT * FROM t0 INNER JOIN t1 ON NULLIF(DISTINCT ((t1.c0)AND(t1.c0)), ((t0.c0) IS TRUE));
SELECT DISTINCT * FROM t0 INNER JOIN t1 ON NULLIF(DISTINCT ((t1.c0)AND(t1.c0)), ((t0.c0) IS TRUE)) WHERE (((((((t1.c0)OR(x'd8ee')))AND(t0.c0)))<=(((((t1.c0)AND(t1.c0)))AND(t1.c0))))) UNION SELECT DISTINCT * FROM t0 INNER JOIN t1 ON NULLIF(DISTINCT ((t1.c0)AND(t1.c0)), ((t0.c0) IS TRUE)) WHERE ((NOT (((((((t1.c0)OR(x'd8ee')))AND(t0.c0)))<=(((((t1.c0)AND(t1.c0)))AND(t1.c0))))))) UNION SELECT DISTINCT * FROM t0 INNER JOIN t1 ON NULLIF(DISTINCT ((t1.c0)AND(t1.c0)), ((t0.c0) IS TRUE)) WHERE (((((((((t1.c0)OR(x'd8ee')))AND(t0.c0)))<=(((((t1.c0)AND(t1.c0)))AND(t1.c0))))) ISNULL));
SELECT DISTINCT * FROM t0 INNER JOIN t1 ON NULLIF(DISTINCT ((t1.c0)AND(t1.c0)), ((t0.c0) IS TRUE));
SELECT t0.c0, t2.c0 FROM t2, t0 GROUP BY t0.c0, t2.c0;
SELECT t0.c0, t2.c0 FROM t2, t0 WHERE (((LIKELIHOOD(t0.c0, 0.061073016184365)) NOT NULL)) GROUP BY t0.c0, t2.c0 UNION SELECT ALL t0.c0, t2.c0 FROM t2, t0 WHERE ((NOT (((LIKELIHOOD(t0.c0, 0.061073016184365)) NOT NULL)))) GROUP BY t0.c0, t2.c0 UNION SELECT ALL t0.c0, t2.c0 FROM t2, t0 WHERE (((((LIKELIHOOD(t0.c0, 0.061073016184365)) NOT NULL)) ISNULL)) GROUP BY t0.c0, t2.c0;
SELECT t0.c0, t2.c0 FROM t2, t0 GROUP BY t0.c0, t2.c0;
SELECT t0.c0 FROM t0, t1 GROUP BY t0.c0;
SELECT t0.c0 FROM t0, t1 GROUP BY t0.c0 HAVING t0.c0 UNION ALL SELECT ALL t0.c0 FROM t0, t1 GROUP BY t0.c0 HAVING (NOT (t0.c0)) UNION ALL SELECT t0.c0 FROM t0, t1 GROUP BY t0.c0 HAVING ((t0.c0) ISNULL);
SELECT t0.c0 FROM t0, t1 GROUP BY t0.c0;
SELECT t0.c0 FROM t0, t1 GROUP BY t0.c0 HAVING t0.c0 UNION ALL SELECT ALL t0.c0 FROM t0, t1 GROUP BY t0.c0 HAVING (NOT (t0.c0)) UNION ALL SELECT t0.c0 FROM t0, t1 GROUP BY t0.c0 HAVING ((t0.c0) ISNULL);
SELECT t0.c0 FROM t0, t1 GROUP BY t0.c0;
SELECT * FROM t1, t0, t2;
SELECT ALL * FROM t1, t0, t2 WHERE (((CAST(t2.c0 AS NUMERIC)) IS FALSE)) UNION ALL SELECT * FROM t1, t0, t2 WHERE ((NOT (((CAST(t2.c0 AS NUMERIC)) IS FALSE)))) UNION ALL SELECT * FROM t1, t0, t2 WHERE (((((CAST(t2.c0 AS NUMERIC)) IS FALSE)) ISNULL));
SELECT * FROM t1, t0, t2;
SELECT DISTINCT t1.c0, t0.c0 FROM t0, t1;
SELECT DISTINCT t1.c0, t0.c0 FROM t0, t1 WHERE (((x'')>(json_array(t0.c0, t0.c0, t0.c0, t1.c0)))) UNION SELECT DISTINCT t1.c0, t0.c0 FROM t0, t1 WHERE ((NOT (((x'')>(json_array(t0.c0, t0.c0, t0.c0, t1.c0)))))) UNION SELECT DISTINCT t1.c0, t0.c0 FROM t0, t1 WHERE (((((x'')>(json_array(t0.c0, t0.c0, t0.c0, t1.c0)))) ISNULL));
SELECT DISTINCT t1.c0, t0.c0 FROM t0, t1;
SELECT t0.c0 FROM t0 INDEXED BY i28 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING json_quote(COUNT(*)) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (json_quote(COUNT(*)))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((json_quote(COUNT(*))) ISNULL);
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING json_quote(COUNT(*)) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (json_quote(COUNT(*)))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((json_quote(COUNT(*))) ISNULL);
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT * FROM t0;
SELECT * FROM t0 WHERE ((- (t0.c0))) UNION ALL SELECT ALL * FROM t0 WHERE ((NOT ((- (t0.c0))))) UNION ALL SELECT * FROM t0 WHERE ((((- (t0.c0))) ISNULL));
SELECT * FROM t0;
SELECT DISTINCT * FROM t0, t2;
SELECT DISTINCT * FROM t0, t2 WHERE (((((t2.c0) IS FALSE)) IS FALSE)) UNION SELECT DISTINCT * FROM t0, t2 WHERE ((NOT (((((t2.c0) IS FALSE)) IS FALSE)))) UNION SELECT DISTINCT * FROM t0, t2 WHERE (((((((t2.c0) IS FALSE)) IS FALSE)) ISNULL));
SELECT DISTINCT * FROM t0, t2;
SELECT t1.c0, t2.c0 FROM t2, t1, t0 GROUP BY t1.c0, t2.c0;
SELECT t1.c0, t2.c0 FROM t2, t1, t0 WHERE ((CAST(t1.c0 AS TEXT) IN ())) GROUP BY t1.c0, t2.c0 UNION SELECT t1.c0, t2.c0 FROM t2, t1, t0 WHERE ((NOT ((CAST(t1.c0 AS TEXT) IN ())))) GROUP BY t1.c0, t2.c0 UNION SELECT ALL t1.c0, t2.c0 FROM t2, t1, t0 WHERE ((((CAST(t1.c0 AS TEXT) IN ())) ISNULL)) GROUP BY t1.c0, t2.c0;
SELECT t1.c0, t2.c0 FROM t2, t1, t0 GROUP BY t1.c0, t2.c0;
SELECT ALL t2.c0, t1.c0, t0.c0 FROM t0, t1, t2 GROUP BY t2.c0, t1.c0, t0.c0;
SELECT ALL t2.c0, t1.c0, t0.c0 FROM t0, t1, t2 GROUP BY t2.c0, t1.c0, t0.c0 HAVING COUNT(CAST(GROUP_CONCAT(t2.c0) AS REAL)) UNION ALL SELECT t2.c0, t1.c0, t0.c0 FROM t0, t1, t2 GROUP BY t2.c0, t1.c0, t0.c0 HAVING (NOT (COUNT(CAST(GROUP_CONCAT(t2.c0) AS REAL)))) UNION ALL SELECT ALL t2.c0, t1.c0, t0.c0 FROM t0, t1, t2 GROUP BY t2.c0, t1.c0, t0.c0 HAVING ((COUNT(CAST(GROUP_CONCAT(t2.c0) AS REAL))) ISNULL);
SELECT ALL * FROM t1, t0;
SELECT * FROM t1, t0 WHERE (((t0.c0)/(CASE t1.c0  WHEN t0.c0 THEN t0.c0 END))) UNION ALL SELECT * FROM t1, t0 WHERE ((NOT (((t0.c0)/(CASE t1.c0  WHEN t0.c0 THEN t0.c0 END))))) UNION ALL SELECT ALL * FROM t1, t0 WHERE (((((t0.c0)/(CASE t1.c0  WHEN t0.c0 THEN t0.c0 END))) ISNULL));
SELECT ALL * FROM t1, t0;
SELECT DISTINCT t0.c0, t2.c0, t1.c0 FROM t1, t0, t2;
SELECT DISTINCT t0.c0, t2.c0, t1.c0 FROM t1, t0, t2 WHERE (((((t0.c0) BETWEEN (t1.c0) AND (t0.c0))) NOT NULL)) UNION SELECT DISTINCT t0.c0, t2.c0, t1.c0 FROM t1, t0, t2 WHERE ((NOT (((((t0.c0) BETWEEN (t1.c0) AND (t0.c0))) NOT NULL)))) UNION SELECT DISTINCT t0.c0, t2.c0, t1.c0 FROM t1, t0, t2 WHERE (((((((t0.c0) BETWEEN (t1.c0) AND (t0.c0))) NOT NULL)) ISNULL));
SELECT DISTINCT t0.c0, t2.c0, t1.c0 FROM t1, t0, t2;
SELECT ALL t2.c0, t0.c0 FROM t1, t2, t0 GROUP BY t2.c0, t0.c0;
SELECT t2.c0, t0.c0 FROM t1, t2, t0 WHERE (((((CAST(t1.c0 AS TEXT))OR(CASE t2.c0  WHEN t2.c0 THEN 0.6043223534688471 END)))OR(((t0.c0) NOTNULL)))) GROUP BY t2.c0, t0.c0 UNION SELECT ALL t2.c0, t0.c0 FROM t1, t2, t0 WHERE ((NOT (((((CAST(t1.c0 AS TEXT))OR(CASE t2.c0  WHEN t2.c0 THEN 0.6043223534688471 END)))OR(((t0.c0) NOTNULL)))))) GROUP BY t2.c0, t0.c0 UNION SELECT t2.c0, t0.c0 FROM t1, t2, t0 WHERE (((((((CAST(t1.c0 AS TEXT))OR(CASE t2.c0  WHEN t2.c0 THEN 0.6043223534688471 END)))OR(((t0.c0) NOTNULL)))) ISNULL)) GROUP BY t2.c0, t0.c0;
SELECT ALL t2.c0, t0.c0 FROM t1, t2, t0 GROUP BY t2.c0, t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING GROUP_CONCAT(SUM(COUNT(*))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (GROUP_CONCAT(SUM(COUNT(*))))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((GROUP_CONCAT(SUM(COUNT(*)))) ISNULL);
SELECT ALL t2.c0, t0.c0 FROM t2, t0;
SELECT t2.c0, t0.c0 FROM t2, t0 WHERE ((+ ((+ (t0.c0))))) UNION ALL SELECT ALL t2.c0, t0.c0 FROM t2, t0 WHERE ((NOT ((+ ((+ (t0.c0))))))) UNION ALL SELECT ALL t2.c0, t0.c0 FROM t2, t0 WHERE ((((+ ((+ (t0.c0))))) ISNULL));
SELECT ALL t2.c0, t0.c0 FROM t2, t0;
SELECT DISTINCT t2.c0 FROM t2;
SELECT DISTINCT t2.c0 FROM t2 WHERE ((((t2.c0)) BETWEEN ((((((t2.c0)AND(t2.c0)))AND(t2.c0)))) AND ((RTRIM(t2.c0))))) UNION SELECT DISTINCT t2.c0 FROM t2 WHERE ((NOT ((((t2.c0)) BETWEEN ((((((t2.c0)AND(t2.c0)))AND(t2.c0)))) AND ((RTRIM(t2.c0))))))) UNION SELECT DISTINCT t2.c0 FROM t2 WHERE ((((((t2.c0)) BETWEEN ((((((t2.c0)AND(t2.c0)))AND(t2.c0)))) AND ((RTRIM(t2.c0))))) ISNULL));
SELECT DISTINCT t2.c0 FROM t2;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE (((((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))AND(((t0.c0)>>(t0.c0)))))OR(x''))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT (((((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))AND(((t0.c0)>>(t0.c0)))))OR(x''))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE (((((((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))AND(((t0.c0)>>(t0.c0)))))OR(x''))) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t2.c0, t1.c0 FROM t2, t1 GROUP BY t2.c0, t1.c0;
SELECT ALL t2.c0, t1.c0 FROM t2, t1 GROUP BY t2.c0, t1.c0 HAVING CASE MIN(t1.c0)  WHEN ((MIN(MAX(x''))) NOT BETWEEN (t2.c0) AND (x'')) THEN COUNT(*) ELSE ((t2.c0)&(GROUP_CONCAT(t2.c0))) END UNION ALL SELECT ALL t2.c0, t1.c0 FROM t2, t1 GROUP BY t2.c0, t1.c0 HAVING (NOT (CASE MIN(t1.c0)  WHEN ((MIN(MAX(x''))) NOT BETWEEN (t2.c0) AND (x'')) THEN COUNT(*) ELSE ((t2.c0)&(GROUP_CONCAT(t2.c0))) END)) UNION ALL SELECT t2.c0, t1.c0 FROM t2, t1 GROUP BY t2.c0, t1.c0 HAVING ((CASE MIN(t1.c0)  WHEN ((MIN(MAX(x''))) NOT BETWEEN (t2.c0) AND (x'')) THEN COUNT(*) ELSE ((t2.c0)&(GROUP_CONCAT(t2.c0))) END) ISNULL);
SELECT MAX(((((((t2.c0)AND(t2.c0)))OR(t2.c0))) NOT BETWEEN (CAST(t0.c0 AS NUMERIC)) AND (((t1.c0)IS NOT(t2.c0))))) FROM t2, t1, t0;
SELECT * FROM t1, t2, t0;
SELECT * FROM t1, t2, t0 WHERE (CHANGES()) UNION ALL SELECT * FROM t1, t2, t0 WHERE ((NOT (CHANGES()))) UNION ALL SELECT * FROM t1, t2, t0 WHERE (((CHANGES()) ISNULL));
SELECT * FROM t1, t2, t0;
SELECT DISTINCT * FROM t2;
SELECT DISTINCT * FROM t2 WHERE (((TRIM(DISTINCT t2.c0, t2.c0))>>(((t2.c0)<(t2.c0))))) UNION SELECT DISTINCT * FROM t2 WHERE ((NOT (((TRIM(DISTINCT t2.c0, t2.c0))>>(((t2.c0)<(t2.c0))))))) UNION SELECT DISTINCT * FROM t2 WHERE (((((TRIM(DISTINCT t2.c0, t2.c0))>>(((t2.c0)<(t2.c0))))) ISNULL));
SELECT DISTINCT * FROM t2;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 WHERE (t0.c0) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT (t0.c0))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE (((t0.c0) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0, t2.c0 FROM t0, t2, t1 GROUP BY t0.c0, t2.c0;
SELECT ALL t0.c0, t2.c0 FROM t0, t2, t1 GROUP BY t0.c0, t2.c0 HAVING ((t0.c0)==(GLOB(SUM(t1.c0), '172953103'))) UNION ALL SELECT ALL t0.c0, t2.c0 FROM t0, t2, t1 GROUP BY t0.c0, t2.c0 HAVING (NOT (((t0.c0)=(GLOB(SUM(t1.c0), '172953103'))))) UNION ALL SELECT ALL t0.c0, t2.c0 FROM t0, t2, t1 GROUP BY t0.c0, t2.c0 HAVING ((((t0.c0)==(GLOB(SUM(t1.c0), '172953103')))) ISNULL);
SELECT t0.c0, t2.c0 FROM t0, t2, t1 GROUP BY t0.c0, t2.c0;
SELECT ALL t0.c0, t2.c0 FROM t0, t2, t1 GROUP BY t0.c0, t2.c0 HAVING ((t0.c0)==(GLOB(SUM(t1.c0), '172953103'))) UNION ALL SELECT ALL t0.c0, t2.c0 FROM t0, t2, t1 GROUP BY t0.c0, t2.c0 HAVING (NOT (((t0.c0)=(GLOB(SUM(t1.c0), '172953103'))))) UNION ALL SELECT ALL t0.c0, t2.c0 FROM t0, t2, t1 GROUP BY t0.c0, t2.c0 HAVING ((((t0.c0)==(GLOB(SUM(t1.c0), '172953103')))) ISNULL);
SELECT t0.c0, t2.c0 FROM t0, t2, t1 GROUP BY t0.c0, t2.c0;
SELECT * FROM t0 CROSS JOIN t2 ON ((((CASE t0.c0  WHEN t2.c0 THEN t2.c0 WHEN t2.c0 THEN t0.c0 WHEN t0.c0 THEN t2.c0 END)AND((~ (t2.c0)))))OR(((t2.c0)<>(t2.c0))));
SELECT ALL * FROM t0 CROSS JOIN t2 ON ((((CASE t0.c0  WHEN t2.c0 THEN t2.c0 WHEN t2.c0 THEN t0.c0 WHEN t0.c0 THEN t2.c0 END)AND((~ (t2.c0)))))OR(((t2.c0)<>(t2.c0)))) WHERE (CASE ((t2.c0)LIKE(t0.c0))  WHEN ((t2.c0)>>(t2.c0)) THEN ((t2.c0)IS NOT(t2.c0)) END) UNION ALL SELECT ALL * FROM t0 CROSS JOIN t2 ON ((((CASE t0.c0  WHEN t2.c0 THEN t2.c0 WHEN t2.c0 THEN t0.c0 WHEN t0.c0 THEN t2.c0 END)AND((~ (t2.c0)))))OR(((t2.c0)!=(t2.c0)))) WHERE ((NOT (CASE ((t2.c0)LIKE(t0.c0))  WHEN ((t2.c0)>>(t2.c0)) THEN ((t2.c0)IS NOT(t2.c0)) END))) UNION ALL SELECT * FROM t0 NOT INDEXED CROSS JOIN t2 ON ((((CASE t0.c0  WHEN t2.c0 THEN t2.c0 WHEN t2.c0 THEN t0.c0 WHEN t0.c0 THEN t2.c0 END)AND((~ (t2.c0)))))OR(((t2.c0)<>(t2.c0)))) WHERE (((CASE ((t2.c0)LIKE(t0.c0))  WHEN ((t2.c0)>>(t2.c0)) THEN ((t2.c0)IS NOT(t2.c0)) END) ISNULL));
SELECT * FROM t0 CROSS JOIN t2 ON ((((CASE t0.c0  WHEN t2.c0 THEN t2.c0 WHEN t2.c0 THEN t0.c0 WHEN t0.c0 THEN t2.c0 END)AND((~ (t2.c0)))))OR(((t2.c0)<>(t2.c0))));
SELECT DISTINCT * FROM t2;
SELECT DISTINCT * FROM t2 WHERE (((((t2.c0) NOT BETWEEN (t2.c0) AND (t2.c0))) IS TRUE)) UNION SELECT DISTINCT * FROM t2 WHERE ((NOT (((((t2.c0) NOT BETWEEN (t2.c0) AND (t2.c0))) IS TRUE)))) UNION SELECT DISTINCT * FROM t2 WHERE (((((((t2.c0) NOT BETWEEN (t2.c0) AND (t2.c0))) IS TRUE)) ISNULL));
SELECT DISTINCT * FROM t2;
SELECT ALL t1.c0, t0.c0 FROM t1 FULL OUTER JOIN t0 ON ((((DATETIME(t0.c0, t0.c0, t1.c0))AND(t0.c0)))AND(CAST(t0.c0 AS REAL))) GROUP BY t1.c0, t0.c0;
SELECT t1.c0, t0.c0 FROM t1 FULL OUTER JOIN t0 ON ((((DATETIME(t0.c0, t0.c0, t1.c0))AND(t0.c0)))AND(CAST(t0.c0 AS REAL))) WHERE (((0x5fb8e9ca)=((('') NOT NULL)))) GROUP BY t1.c0, t0.c0 UNION SELECT ALL t1.c0, t0.c0 FROM t1 FULL OUTER JOIN t0 ON ((((DATETIME(t0.c0, t0.c0, t1.c0))AND(t0.c0)))AND(CAST(t0.c0 AS REAL))) WHERE ((NOT (((0X5fb8e9ca)=((('') NOT NULL)))))) GROUP BY t1.c0, t0.c0 UNION SELECT t1.c0, t0.c0 FROM t1 FULL OUTER JOIN t0 ON ((((DATETIME(t0.c0, t0.c0, t1.c0))AND(t0.c0)))AND(CAST(t0.c0 AS REAL))) WHERE (((((0x5fb8e9ca)==((('') NOT NULL)))) ISNULL)) GROUP BY t1.c0, t0.c0;
SELECT ALL t1.c0, t0.c0 FROM t1 FULL OUTER JOIN t0 ON ((((DATETIME(t0.c0, t0.c0, t1.c0))AND(t0.c0)))AND(CAST(t0.c0 AS REAL))) GROUP BY t1.c0, t0.c0;
SELECT t2.c0 FROM t2, t1 GROUP BY t2.c0;
SELECT t2.c0 FROM t2, t1 GROUP BY t2.c0 HAVING MAX(SUM(MIN(COUNT(t2.c0)))) UNION ALL SELECT ALL t2.c0 FROM t2, t1 GROUP BY t2.c0 HAVING (NOT (MAX(SUM(MIN(COUNT(t2.c0)))))) UNION ALL SELECT ALL t2.c0 FROM t2, t1 GROUP BY t2.c0 HAVING ((MAX(SUM(MIN(COUNT(t2.c0))))) ISNULL);
SELECT MIN((SQLITE_COMPILEOPTION_GET(x'') IN ())) FROM t1 ORDER BY CASE t1.c0 COLLATE NOCASE  WHEN 0.9870708841205527 THEN t1.c0 COLLATE NOCASE ELSE (t1.c0 IN ()) END ASC, (t1.c0 IN ()) DESC  NULLS LAST;
SELECT ALL * FROM t1;
SELECT ALL * FROM t1 WHERE (CASE t1.c0  WHEN CASE t1.c0  WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 ELSE NULL END THEN (t1.c0 IN ()) END) UNION ALL SELECT ALL * FROM t1 WHERE ((NOT (CASE t1.c0  WHEN CASE t1.c0  WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 ELSE NULL END THEN (t1.c0 IN ()) END))) UNION ALL SELECT * FROM t1 WHERE (((CASE t1.c0  WHEN CASE t1.c0  WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 ELSE NULL END THEN (t1.c0 IN ()) END) ISNULL));
SELECT ALL * FROM t1;
SELECT DISTINCT t0.c0, t1.c0 FROM t1, t2, t0;
SELECT DISTINCT t0.c0, t1.c0 FROM t1, t2, t0 WHERE (((t2.c0)GLOB(t1.c0)) COLLATE RTRIM) UNION SELECT DISTINCT t0.c0, t1.c0 FROM t1, t2, t0 WHERE ((NOT (((t2.c0)GLOB(t1.c0)) COLLATE RTRIM))) UNION SELECT DISTINCT t0.c0, t1.c0 FROM t1, t2, t0 WHERE (((((t2.c0)GLOB(t1.c0)) COLLATE RTRIM) ISNULL));
SELECT DISTINCT t0.c0, t1.c0 FROM t1, t2, t0;
SELECT t1.c0 FROM t0, t1, t2 GROUP BY t1.c0;
SELECT t1.c0 FROM t0, t1, t2 WHERE (CASE CASE WHEN t1.c0 THEN t0.c0 ELSE t1.c0 END  WHEN NULL THEN CAST('245842529' AS BLOB) ELSE CAST(t2.c0 AS INTEGER) END) GROUP BY t1.c0 UNION SELECT t1.c0 FROM t0, t1, t2 WHERE ((NOT (CASE CASE WHEN t1.c0 THEN t0.c0 ELSE t1.c0 END  WHEN NULL THEN CAST('245842529' AS BLOB) ELSE CAST(t2.c0 AS INTEGER) END))) GROUP BY t1.c0 UNION SELECT ALL t1.c0 FROM t0, t1, t2 WHERE (((CASE CASE WHEN t1.c0 THEN t0.c0 ELSE t1.c0 END  WHEN NULL THEN CAST('245842529' AS BLOB) ELSE CAST(t2.c0 AS INTEGER) END) ISNULL)) GROUP BY t1.c0;
SELECT t1.c0 FROM t0, t1, t2 GROUP BY t1.c0;
SELECT ALL t0.c0, t2.c0 FROM t0, t2 CROSS JOIN t1 ON ((((((('-976180435', t1.c0, t0.c0))<((t1.c0, t2.c0, t2.c0))))AND(UNLIKELY(t2.c0))))AND(CAST(t0.c0 AS NUMERIC))) GROUP BY t0.c0, t2.c0;
SELECT t0.c0, t2.c0 FROM t0, t2 CROSS JOIN t1 ON ((((((('-976180435', t1.c0, t0.c0))<((t1.c0, t2.c0, t2.c0))))AND(UNLIKELY(t2.c0))))AND(CAST(t0.c0 AS NUMERIC))) GROUP BY t0.c0, t2.c0 HAVING COUNT(*) UNION ALL SELECT ALL t0.c0, t2.c0 FROM t0, t2 CROSS JOIN t1 ON ((((((('-976180435', t1.c0, t0.c0))<((t1.c0, t2.c0, t2.c0))))AND(UNLIKELY(t2.c0))))AND(CAST(t0.c0 AS NUMERIC))) GROUP BY t0.c0, t2.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT t0.c0, t2.c0 FROM t0, t2 CROSS JOIN t1 ON ((((((('-976180435', t1.c0, t0.c0))<((t1.c0, t2.c0, t2.c0))))AND(UNLIKELY(t2.c0))))AND(CAST(t0.c0 AS NUMERIC))) GROUP BY t0.c0, t2.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL t0.c0, t2.c0 FROM t0, t2 CROSS JOIN t1 ON ((((((('-976180435', t1.c0, t0.c0))<((t1.c0, t2.c0, t2.c0))))AND(UNLIKELY(t2.c0))))AND(CAST(t0.c0 AS NUMERIC))) GROUP BY t0.c0, t2.c0;
SELECT t0.c0, t2.c0 FROM t0, t2 CROSS JOIN t1 ON ((((((('-976180435', t1.c0, t0.c0))<((t1.c0, t2.c0, t2.c0))))AND(UNLIKELY(t2.c0))))AND(CAST(t0.c0 AS NUMERIC))) GROUP BY t0.c0, t2.c0 HAVING COUNT(*) UNION ALL SELECT ALL t0.c0, t2.c0 FROM t0, t2 CROSS JOIN t1 ON ((((((('-976180435', t1.c0, t0.c0))<((t1.c0, t2.c0, t2.c0))))AND(UNLIKELY(t2.c0))))AND(CAST(t0.c0 AS NUMERIC))) GROUP BY t0.c0, t2.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT t0.c0, t2.c0 FROM t0, t2 CROSS JOIN t1 ON ((((((('-976180435', t1.c0, t0.c0))<((t1.c0, t2.c0, t2.c0))))AND(UNLIKELY(t2.c0))))AND(CAST(t0.c0 AS NUMERIC))) GROUP BY t0.c0, t2.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL t0.c0, t2.c0 FROM t0, t2 CROSS JOIN t1 ON ((((((('-976180435', t1.c0, t0.c0))<((t1.c0, t2.c0, t2.c0))))AND(UNLIKELY(t2.c0))))AND(CAST(t0.c0 AS NUMERIC))) GROUP BY t0.c0, t2.c0;
SELECT ALL MIN(UNLIKELY(DISTINCT CASE t0.c0  WHEN '-1436454594' THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END)) FROM t0;
SELECT ALL * FROM t2;
SELECT * FROM t2 WHERE ((((t2.c0) BETWEEN (x'') AND (t2.c0)) IN ())) UNION ALL SELECT ALL * FROM t2 WHERE ((NOT ((((t2.c0) BETWEEN (x'') AND (t2.c0)) IN ())))) UNION ALL SELECT ALL * FROM t2 WHERE ((((((t2.c0) BETWEEN (x'') AND (t2.c0)) IN ())) ISNULL));
SELECT ALL * FROM t2;
SELECT DISTINCT * FROM t1;
SELECT DISTINCT * FROM t1 WHERE (t1.c0) UNION SELECT DISTINCT * FROM t1 WHERE ((NOT (t1.c0))) UNION SELECT DISTINCT * FROM t1 WHERE (((t1.c0) ISNULL));
SELECT DISTINCT * FROM t1;
SELECT t0.c0, t1.c0 FROM t0, t1 GROUP BY t0.c0, t1.c0;
SELECT t0.c0, t1.c0 FROM t0, t1 WHERE (((NULL) BETWEEN (((('ࡅ'))<>((t1.c0)))) AND (x''))) GROUP BY t0.c0, t1.c0 UNION SELECT ALL t0.c0, t1.c0 FROM t0, t1 WHERE ((NOT (((NULL) BETWEEN (((('ࡅ'))!=((t1.c0)))) AND (x''))))) GROUP BY t0.c0, t1.c0 UNION SELECT ALL t0.c0, t1.c0 FROM t0, t1 WHERE (((((NULL) BETWEEN (((('ࡅ'))<>((t1.c0)))) AND (x''))) ISNULL)) GROUP BY t0.c0, t1.c0;
SELECT t0.c0, t1.c0 FROM t0, t1 GROUP BY t0.c0, t1.c0;
SELECT t0.c0, t2.c0 FROM t2, t0 GROUP BY t0.c0, t2.c0;
SELECT ALL t0.c0, t2.c0 FROM t2, t0 GROUP BY t0.c0, t2.c0 HAVING COUNT(*) UNION ALL SELECT t0.c0, t2.c0 FROM t2, t0 GROUP BY t0.c0, t2.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT t0.c0, t2.c0 FROM t2, t0 GROUP BY t0.c0, t2.c0 HAVING ((COUNT(*)) ISNULL);
SELECT t0.c0, t2.c0 FROM t2, t0 GROUP BY t0.c0, t2.c0;
SELECT ALL t0.c0, t2.c0 FROM t2, t0 GROUP BY t0.c0, t2.c0 HAVING COUNT(*) UNION ALL SELECT t0.c0, t2.c0 FROM t2, t0 GROUP BY t0.c0, t2.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT t0.c0, t2.c0 FROM t2, t0 GROUP BY t0.c0, t2.c0 HAVING ((COUNT(*)) ISNULL);
SELECT t0.c0, t2.c0 FROM t2, t0 GROUP BY t0.c0, t2.c0;
SELECT t0.c0 FROM t1, t2, t0;
SELECT ALL t0.c0 FROM t1, t2, t0 WHERE (NULL) UNION ALL SELECT ALL t0.c0 FROM t1, t2, t0 WHERE ((NOT (NULL))) UNION ALL SELECT ALL t0.c0 FROM t1, t2, t0 WHERE (((NULL) ISNULL));
SELECT t0.c0 FROM t1, t2, t0;
SELECT DISTINCT * FROM t0, t1, t2 NOT INDEXED;
SELECT DISTINCT * FROM t0, t1, t2 WHERE (t2.c0) UNION SELECT DISTINCT * FROM t0, t1, t2 WHERE ((NOT (t2.c0))) UNION SELECT DISTINCT * FROM t0, t1, t2 WHERE (((t2.c0) ISNULL));
SELECT DISTINCT * FROM t0, t1, t2 NOT INDEXED;
SELECT t2.c0, t1.c0 FROM t2, t1 GROUP BY t2.c0, t1.c0;
SELECT t2.c0, t1.c0 FROM t2, t1 WHERE (CASE t1.c0  WHEN CAST(t2.c0 AS TEXT) THEN ((((t2.c0)OR(t2.c0)))OR(t1.c0)) END) GROUP BY t2.c0, t1.c0 UNION SELECT t2.c0, t1.c0 FROM t2, t1 WHERE ((NOT (CASE t1.c0  WHEN CAST(t2.c0 AS TEXT) THEN ((((t2.c0)OR(t2.c0)))OR(t1.c0)) END))) GROUP BY t2.c0, t1.c0 UNION SELECT t2.c0, t1.c0 FROM t2, t1 WHERE (((CASE t1.c0  WHEN CAST(t2.c0 AS TEXT) THEN ((((t2.c0)OR(t2.c0)))OR(t1.c0)) END) ISNULL)) GROUP BY t2.c0, t1.c0;
SELECT t2.c0, t1.c0 FROM t2, t1 GROUP BY t2.c0, t1.c0;
SELECT t2.c0 FROM t2 GROUP BY t2.c0;
SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0 HAVING (((COUNT(*))) BETWEEN ((LOWER(t2.c0))) AND (((+ (SUM(t2.c0)))))) UNION ALL SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0 HAVING (NOT ((((COUNT(*))) BETWEEN ((LOWER(t2.c0))) AND (((+ (SUM(t2.c0)))))))) UNION ALL SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0 HAVING (((((COUNT(*))) BETWEEN ((LOWER(t2.c0))) AND (((+ (SUM(t2.c0))))))) ISNULL);
SELECT t2.c0 FROM t2 GROUP BY t2.c0;
SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0 HAVING (((COUNT(*))) BETWEEN ((LOWER(t2.c0))) AND (((+ (SUM(t2.c0)))))) UNION ALL SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0 HAVING (NOT ((((COUNT(*))) BETWEEN ((LOWER(t2.c0))) AND (((+ (SUM(t2.c0)))))))) UNION ALL SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0 HAVING (((((COUNT(*))) BETWEEN ((LOWER(t2.c0))) AND (((+ (SUM(t2.c0))))))) ISNULL);
SELECT t2.c0 FROM t2 GROUP BY t2.c0;
SELECT ALL * FROM t2;
SELECT * FROM t2 WHERE (CASE t2.c0  WHEN t2.c0 THEN t2.c0 WHEN t2.c0 THEN t2.c0 WHEN t2.c0 THEN t2.c0 END COLLATE NOCASE) UNION ALL SELECT ALL * FROM t2 WHERE ((NOT (CASE t2.c0  WHEN t2.c0 THEN t2.c0 WHEN t2.c0 THEN t2.c0 WHEN t2.c0 THEN t2.c0 END COLLATE NOCASE))) UNION ALL SELECT ALL * FROM t2 WHERE (((CASE t2.c0  WHEN t2.c0 THEN t2.c0 WHEN t2.c0 THEN t2.c0 WHEN t2.c0 THEN t2.c0 END COLLATE NOCASE) ISNULL));
SELECT ALL * FROM t2;
SELECT DISTINCT * FROM t2, t0 INNER JOIN t1 ON CASE t1.c0 COLLATE RTRIM  WHEN ((((((((t0.c0)OR(t0.c0)))AND(t2.c0)))AND(t2.c0)))AND(t2.c0)) THEN ((t1.c0)/(t0.c0)) WHEN ((t2.c0) NOTNULL) THEN ((t2.c0) BETWEEN (t1.c0) AND (t2.c0)) WHEN NULL THEN ((((x'')AND(x'')))OR(t2.c0)) END;
SELECT DISTINCT * FROM t2, t0 INNER JOIN t1 ON CASE t1.c0 COLLATE RTRIM  WHEN ((((((((t0.c0)OR(t0.c0)))AND(t2.c0)))AND(t2.c0)))AND(t2.c0)) THEN ((t1.c0)/(t0.c0)) WHEN ((t2.c0) NOTNULL) THEN ((t2.c0) BETWEEN (t1.c0) AND (t2.c0)) WHEN NULL THEN ((((x'')AND(x'')))OR(t2.c0)) END WHERE (((((((((CAST(t1.c0 AS NUMERIC))OR(x'')))OR(x'e05b537d')))OR(JULIANDAY(t1.c0, t0.c0, t0.c0))))OR((t2.c0 IN ())))) UNION SELECT DISTINCT * FROM t2 NOT INDEXED, t0 INNER JOIN t1 ON CASE t1.c0 COLLATE RTRIM  WHEN ((((((((t0.c0)OR(t0.c0)))AND(t2.c0)))AND(t2.c0)))AND(t2.c0)) THEN ((t1.c0)/(t0.c0)) WHEN ((t2.c0) NOTNULL) THEN ((t2.c0) BETWEEN (t1.c0) AND (t2.c0)) WHEN NULL THEN ((((x'')AND(x'')))OR(t2.c0)) END WHERE ((NOT (((((((((CAST(t1.c0 AS NUMERIC))OR(x'')))OR(x'e05b537d')))OR(JULIANDAY(t1.c0, t0.c0, t0.c0))))OR((t2.c0 IN ())))))) UNION SELECT DISTINCT * FROM t2, t0 INNER JOIN t1 ON CASE t1.c0 COLLATE RTRIM  WHEN ((((((((t0.c0)OR(t0.c0)))AND(t2.c0)))AND(t2.c0)))AND(t2.c0)) THEN ((t1.c0)/(t0.c0)) WHEN ((t2.c0) NOTNULL) THEN ((t2.c0) BETWEEN (t1.c0) AND (t2.c0)) WHEN NULL THEN ((((x'')AND(x'')))OR(t2.c0)) END WHERE (((((((((((CAST(t1.c0 AS NUMERIC))OR(x'')))OR(x'e05b537d')))OR(JULIANDAY(t1.c0, t0.c0, t0.c0))))OR((t2.c0 IN ())))) ISNULL));
SELECT DISTINCT * FROM t2, t0 INNER JOIN t1 ON CASE t1.c0 COLLATE RTRIM  WHEN ((((((((t0.c0)OR(t0.c0)))AND(t2.c0)))AND(t2.c0)))AND(t2.c0)) THEN ((t1.c0)/(t0.c0)) WHEN ((t2.c0) NOTNULL) THEN ((t2.c0) BETWEEN (t1.c0) AND (t2.c0)) WHEN NULL THEN ((((x'')AND(x'')))OR(t2.c0)) END;
SELECT t1.c0, t0.c0, t2.c0 FROM t2, t0, t1 GROUP BY t1.c0, t0.c0, t2.c0;
SELECT ALL t1.c0, t0.c0, t2.c0 FROM t2, t0, t1 WHERE (((((t0.c0)OR(t2.c0)))OR(CASE WHEN t0.c0 THEN t0.c0 ELSE t1.c0 END))) GROUP BY t1.c0, t0.c0, t2.c0 UNION SELECT ALL t1.c0, t0.c0, t2.c0 FROM t2, t0, t1 WHERE ((NOT (((((t0.c0)OR(t2.c0)))OR(CASE WHEN t0.c0 THEN t0.c0 ELSE t1.c0 END))))) GROUP BY t1.c0, t0.c0, t2.c0 UNION SELECT ALL t1.c0, t0.c0, t2.c0 FROM t2, t0, t1 WHERE (((((((t0.c0)OR(t2.c0)))OR(CASE WHEN t0.c0 THEN t0.c0 ELSE t1.c0 END))) ISNULL)) GROUP BY t1.c0, t0.c0, t2.c0;
SELECT t1.c0, t0.c0, t2.c0 FROM t2, t0, t1 GROUP BY t1.c0, t0.c0, t2.c0;
SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0;
SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0 HAVING CASE WHEN MIN(MAX(COUNT(*))) THEN MIN(TOTAL(t2.c0)) WHEN t2.c0 THEN GROUP_CONCAT(NULL) WHEN MAX(COUNT(*)) THEN COUNT(t2.c0) WHEN ((t2.c0) BETWEEN (AVG(SUM(GROUP_CONCAT(SUM(MAX(SUM(MAX(COUNT(*))))))))) AND (COUNT(AVG(MIN(t2.c0))))) THEN ((t2.c0) NOT NULL) WHEN load_extension(MAX(COUNT(*)), MAX(t2.c0)) THEN GROUP_CONCAT(COUNT(*)) WHEN AVG(t2.c0) COLLATE RTRIM THEN AVG(x'341c35d4') COLLATE RTRIM WHEN COUNT(t2.c0) THEN MAX(t2.c0) ELSE MAX(TOTAL(TOTAL(t2.c0))) END UNION ALL SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0 HAVING (NOT (CASE WHEN MIN(MAX(COUNT(*))) THEN MIN(TOTAL(t2.c0)) WHEN t2.c0 THEN GROUP_CONCAT(NULL) WHEN MAX(COUNT(*)) THEN COUNT(t2.c0) WHEN ((t2.c0) BETWEEN (AVG(SUM(GROUP_CONCAT(SUM(MAX(SUM(MAX(COUNT(*))))))))) AND (COUNT(AVG(MIN(t2.c0))))) THEN ((t2.c0) NOT NULL) WHEN load_extension(MAX(COUNT(*)), MAX(t2.c0)) THEN GROUP_CONCAT(COUNT(*)) WHEN AVG(t2.c0) COLLATE RTRIM THEN AVG(x'341c35d4') COLLATE RTRIM WHEN COUNT(t2.c0) THEN MAX(t2.c0) ELSE MAX(TOTAL(TOTAL(t2.c0))) END)) UNION ALL SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0 HAVING ((CASE WHEN MIN(MAX(COUNT(*))) THEN MIN(TOTAL(t2.c0)) WHEN t2.c0 THEN GROUP_CONCAT(NULL) WHEN MAX(COUNT(*)) THEN COUNT(t2.c0) WHEN ((t2.c0) BETWEEN (AVG(SUM(GROUP_CONCAT(SUM(MAX(SUM(MAX(COUNT(*))))))))) AND (COUNT(AVG(MIN(t2.c0))))) THEN ((t2.c0) NOT NULL) WHEN load_extension(MAX(COUNT(*)), MAX(t2.c0)) THEN GROUP_CONCAT(COUNT(*)) WHEN AVG(t2.c0) COLLATE RTRIM THEN AVG(x'341c35d4') COLLATE RTRIM WHEN COUNT(t2.c0) THEN MAX(t2.c0) ELSE MAX(TOTAL(TOTAL(t2.c0))) END) ISNULL);
SELECT ALL * FROM t2, t0, t1;
SELECT ALL * FROM t2, t0, t1 WHERE (((((t2.c0)>>(t2.c0)))||(SQLITE_COMPILEOPTION_GET(t1.c0)))) UNION ALL SELECT * FROM t2, t0, t1 WHERE ((NOT (((((t2.c0)>>(t2.c0)))||(SQLITE_COMPILEOPTION_GET(t1.c0)))))) UNION ALL SELECT * FROM t2, t0, t1 WHERE (((((((t2.c0)>>(t2.c0)))||(SQLITE_COMPILEOPTION_GET(t1.c0)))) ISNULL));
SELECT ALL * FROM t2, t0, t1;
SELECT DISTINCT t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0 WHERE ((~ (((((t0.c0)AND(t0.c0)))AND(t0.c0))))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((NOT ((~ (((((t0.c0)AND(t0.c0)))AND(t0.c0))))))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((((~ (((((t0.c0)AND(t0.c0)))AND(t0.c0))))) ISNULL));
SELECT DISTINCT t0.c0 FROM t0;
SELECT ALL t2.c0 FROM t0 RIGHT OUTER JOIN t2 ON '1434746691' GROUP BY t2.c0;
SELECT t2.c0 FROM t0 RIGHT OUTER JOIN t2 ON '1434746691' WHERE ((((t2.c0) IS TRUE) IN ())) GROUP BY t2.c0 UNION SELECT ALL t2.c0 FROM t0 RIGHT OUTER JOIN t2 ON '1434746691' WHERE ((NOT ((((t2.c0) IS TRUE) IN ())))) GROUP BY t2.c0 UNION SELECT ALL t2.c0 FROM t0 RIGHT OUTER JOIN t2 ON '1434746691' WHERE ((((((t2.c0) IS TRUE) IN ())) ISNULL)) GROUP BY t2.c0;
SELECT ALL t2.c0 FROM t0 RIGHT OUTER JOIN t2 ON '1434746691' GROUP BY t2.c0;
SELECT ALL t2.c0 FROM t2 RIGHT OUTER JOIN t0 ON t0.c0 GROUP BY t2.c0;
SELECT ALL t2.c0 FROM t2 RIGHT OUTER JOIN t0 ON t0.c0 GROUP BY t2.c0 HAVING (((MIN(t2.c0), (((MAX(t2.c0)))>=((t2.c0))), (- (t2.c0))))<((MAX(t2.c0), TOTAL(t0.c0), GROUP_CONCAT(MIN(MIN(AVG(MIN(t0.c0)))))))) UNION ALL SELECT ALL t2.c0 FROM t2 RIGHT OUTER JOIN t0 ON t0.c0 GROUP BY t2.c0 HAVING (NOT ((((MIN(t2.c0), (((MAX(t2.c0)))>=((t2.c0))), (- (t2.c0))))<((MAX(t2.c0), TOTAL(t0.c0), GROUP_CONCAT(MIN(MIN(AVG(MIN(t0.c0)))))))))) UNION ALL SELECT ALL t2.c0 FROM t2 RIGHT OUTER JOIN t0 ON t0.c0 GROUP BY t2.c0 HAVING (((((MIN(t2.c0), (((MAX(t2.c0)))>=((t2.c0))), (- (t2.c0))))<((MAX(t2.c0), TOTAL(t0.c0), GROUP_CONCAT(MIN(MIN(AVG(MIN(t0.c0))))))))) ISNULL);
SELECT ALL * FROM t2, t1, t0;
SELECT ALL * FROM t2, t1, t0 WHERE (CASE t1.c0  WHEN ((t2.c0)LIKE(t0.c0)) THEN t1.c0 COLLATE BINARY ELSE NULL END) UNION ALL SELECT * FROM t2, t1, t0 WHERE ((NOT (CASE t1.c0  WHEN ((t2.c0)LIKE(t0.c0)) THEN t1.c0 COLLATE BINARY ELSE NULL END))) UNION ALL SELECT ALL * FROM t2, t1, t0 WHERE (((CASE t1.c0  WHEN ((t2.c0)LIKE(t0.c0)) THEN t1.c0 COLLATE BINARY ELSE NULL END) ISNULL));
SELECT ALL * FROM t2, t1, t0;
SELECT DISTINCT * FROM t2, t1 NOT INDEXED;
SELECT DISTINCT * FROM t2, t1 WHERE (((((t2.c0)IS(t2.c0)))<>((t1.c0 IN (t2.c0))))) UNION SELECT DISTINCT * FROM t2, t1 WHERE ((NOT (((((t2.c0)IS(t2.c0)))!=((t1.c0 IN (t2.c0))))))) UNION SELECT DISTINCT * FROM t2, t1 WHERE (((((((t2.c0)IS(t2.c0)))<>((t1.c0 IN (t2.c0))))) ISNULL));
SELECT DISTINCT * FROM t2, t1 NOT INDEXED;
SELECT ALL t2.c0, t1.c0 FROM t1, t0, t2 GROUP BY t2.c0, t1.c0;
SELECT t2.c0, t1.c0 FROM t1, t0, t2 WHERE ((NOT (CAST(t0.c0 AS BLOB)))) GROUP BY t2.c0, t1.c0 UNION SELECT ALL t2.c0, t1.c0 FROM t1 NOT INDEXED, t0, t2 WHERE ((NOT ((NOT (CAST(t0.c0 AS BLOB)))))) GROUP BY t2.c0, t1.c0 UNION SELECT t2.c0, t1.c0 FROM t1, t0, t2 WHERE ((((NOT (CAST(t0.c0 AS BLOB)))) ISNULL)) GROUP BY t2.c0, t1.c0;
SELECT ALL t2.c0, t1.c0 FROM t1, t0, t2 GROUP BY t2.c0, t1.c0;
SELECT t1.c0, t2.c0 FROM t2, t0 RIGHT OUTER JOIN t1 ON t0.c0 COLLATE NOCASE GROUP BY t1.c0, t2.c0;
SELECT ALL t1.c0, t2.c0 FROM t2, t0 RIGHT OUTER JOIN t1 ON t0.c0 COLLATE NOCASE GROUP BY t1.c0, t2.c0 HAVING ((COUNT(*)) NOT NULL) UNION ALL SELECT ALL t1.c0, t2.c0 FROM t2, t0 RIGHT OUTER JOIN t1 ON t0.c0 COLLATE NOCASE GROUP BY t1.c0, t2.c0 HAVING (NOT (((COUNT(*)) NOT NULL))) UNION ALL SELECT ALL t1.c0, t2.c0 FROM t2, t0 RIGHT OUTER JOIN t1 ON t0.c0 COLLATE NOCASE GROUP BY t1.c0, t2.c0 HAVING ((((COUNT(*)) NOT NULL)) ISNULL);
SELECT t1.c0, t2.c0 FROM t2, t0 RIGHT OUTER JOIN t1 ON t0.c0 COLLATE NOCASE GROUP BY t1.c0, t2.c0;
SELECT ALL t1.c0, t2.c0 FROM t2, t0 RIGHT OUTER JOIN t1 ON t0.c0 COLLATE NOCASE GROUP BY t1.c0, t2.c0 HAVING ((COUNT(*)) NOT NULL) UNION ALL SELECT ALL t1.c0, t2.c0 FROM t2, t0 RIGHT OUTER JOIN t1 ON t0.c0 COLLATE NOCASE GROUP BY t1.c0, t2.c0 HAVING (NOT (((COUNT(*)) NOT NULL))) UNION ALL SELECT ALL t1.c0, t2.c0 FROM t2, t0 RIGHT OUTER JOIN t1 ON t0.c0 COLLATE NOCASE GROUP BY t1.c0, t2.c0 HAVING ((((COUNT(*)) NOT NULL)) ISNULL);
SELECT t1.c0, t2.c0 FROM t2, t0 RIGHT OUTER JOIN t1 ON t0.c0 COLLATE NOCASE GROUP BY t1.c0, t2.c0;
SELECT * FROM t1 INNER JOIN t0 ON (((((t1.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))))LIKE((+ (t1.c0))));
SELECT * FROM t1 INNER JOIN t0 ON (((((t1.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))))LIKE((+ (t1.c0)))) WHERE ((((t1.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) IN (CAST(t1.c0 AS INTEGER), t1.c0 COLLATE RTRIM))) UNION ALL SELECT ALL * FROM t1 INNER JOIN t0 ON (((((t1.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))))LIKE((+ (t1.c0)))) WHERE ((NOT ((((t1.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) IN (CAST(t1.c0 AS INTEGER), t1.c0 COLLATE RTRIM))))) UNION ALL SELECT * FROM t1 INNER JOIN t0 ON (((((t1.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))))LIKE((+ (t1.c0)))) WHERE ((((((t1.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) IN (CAST(t1.c0 AS INTEGER), t1.c0 COLLATE RTRIM))) ISNULL));
SELECT * FROM t1 INNER JOIN t0 ON (((((t1.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))))LIKE((+ (t1.c0))));
SELECT DISTINCT t1.c0 FROM t1 FULL OUTER JOIN t0 ON (((NULL, CASE WHEN t1.c0 THEN t1.c0 END, (+ (t0.c0))))<>((CAST(t0.c0 AS REAL), NULL, ((t0.c0) NOT BETWEEN (t1.c0) AND (t1.c0)))));
SELECT DISTINCT t1.c0 FROM t1 FULL OUTER JOIN t0 ON (((NULL, CASE WHEN t1.c0 THEN t1.c0 END, (+ (t0.c0))))!=((CAST(t0.c0 AS REAL), NULL, ((t0.c0) NOT BETWEEN (t1.c0) AND (t1.c0))))) WHERE (((CASE t0.c0  WHEN t0.c0 THEN t1.c0 END) NOT BETWEEN ((((t0.c0))>=((t1.c0)))) AND (ABS(DISTINCT t0.c0)))) UNION SELECT DISTINCT t1.c0 FROM t1 FULL OUTER JOIN t0 ON (((NULL, CASE WHEN t1.c0 THEN t1.c0 END, (+ (t0.c0))))<>((CAST(t0.c0 AS REAL), NULL, ((t0.c0) NOT BETWEEN (t1.c0) AND (t1.c0))))) WHERE ((NOT (((CASE t0.c0  WHEN t0.c0 THEN t1.c0 END) NOT BETWEEN ((((t0.c0))>=((t1.c0)))) AND (ABS(DISTINCT t0.c0)))))) UNION SELECT DISTINCT t1.c0 FROM t1 FULL OUTER JOIN t0 ON (((NULL, CASE WHEN t1.c0 THEN t1.c0 END, (+ (t0.c0))))!=((CAST(t0.c0 AS REAL), NULL, ((t0.c0) NOT BETWEEN (t1.c0) AND (t1.c0))))) WHERE (((((CASE t0.c0  WHEN t0.c0 THEN t1.c0 END) NOT BETWEEN ((((t0.c0))>=((t1.c0)))) AND (ABS(DISTINCT t0.c0)))) ISNULL));
SELECT DISTINCT t1.c0 FROM t1 FULL OUTER JOIN t0 ON (((NULL, CASE WHEN t1.c0 THEN t1.c0 END, (+ (t0.c0))))<>((CAST(t0.c0 AS REAL), NULL, ((t0.c0) NOT BETWEEN (t1.c0) AND (t1.c0)))));
SELECT t2.c0, t0.c0 FROM t2, t0 GROUP BY t2.c0, t0.c0;
SELECT ALL t2.c0, t0.c0 FROM t2, t0 WHERE (LIKELIHOOD(DISTINCT CAST(t0.c0 AS INTEGER), 0.1302260164788035)) GROUP BY t2.c0, t0.c0 UNION SELECT t2.c0, t0.c0 FROM t2, t0 WHERE ((NOT (LIKELIHOOD(DISTINCT CAST(t0.c0 AS INTEGER), 0.1302260164788035)))) GROUP BY t2.c0, t0.c0 UNION SELECT t2.c0, t0.c0 FROM t2, t0 WHERE (((LIKELIHOOD(DISTINCT CAST(t0.c0 AS INTEGER), 0.1302260164788035)) ISNULL)) GROUP BY t2.c0, t0.c0;
SELECT t2.c0, t0.c0 FROM t2, t0 GROUP BY t2.c0, t0.c0;
SELECT ALL t1.c0, t2.c0 FROM t1, t2 GROUP BY t1.c0, t2.c0;
SELECT ALL t1.c0, t2.c0 FROM t1, t2 GROUP BY t1.c0, t2.c0 HAVING GROUP_CONCAT(t1.c0) UNION ALL SELECT t1.c0, t2.c0 FROM t1, t2 GROUP BY t1.c0, t2.c0 HAVING (NOT (GROUP_CONCAT(t1.c0))) UNION ALL SELECT ALL t1.c0, t2.c0 FROM t1, t2 GROUP BY t1.c0, t2.c0 HAVING ((GROUP_CONCAT(t1.c0)) ISNULL);
SELECT ALL t1.c0, t2.c0 FROM t1, t2 GROUP BY t1.c0, t2.c0;
SELECT ALL t1.c0, t2.c0 FROM t1, t2 GROUP BY t1.c0, t2.c0 HAVING GROUP_CONCAT(t1.c0) UNION ALL SELECT t1.c0, t2.c0 FROM t1, t2 GROUP BY t1.c0, t2.c0 HAVING (NOT (GROUP_CONCAT(t1.c0))) UNION ALL SELECT ALL t1.c0, t2.c0 FROM t1, t2 GROUP BY t1.c0, t2.c0 HAVING ((GROUP_CONCAT(t1.c0)) ISNULL);
SELECT ALL t1.c0, t2.c0 FROM t1, t2 GROUP BY t1.c0, t2.c0;
SELECT ALL SUM(x'') FROM t0, t2;
SELECT t2.c0 FROM t2;
SELECT ALL t2.c0 FROM t2 WHERE (((CAST(NULL AS REAL)) NOT BETWEEN (rtreenode(t2.c0, t2.c0)) AND (((((t2.c0)OR(t2.c0)))AND(t2.c0))))) UNION ALL SELECT t2.c0 FROM t2 WHERE ((NOT (((CAST(NULL AS REAL)) NOT BETWEEN (rtreenode(t2.c0, t2.c0)) AND (((((t2.c0)OR(t2.c0)))AND(t2.c0))))))) UNION ALL SELECT t2.c0 FROM t2 WHERE (((((CAST(NULL AS REAL)) NOT BETWEEN (rtreenode(t2.c0, t2.c0)) AND (((((t2.c0)OR(t2.c0)))AND(t2.c0))))) ISNULL));
SELECT t2.c0 FROM t2;
SELECT DISTINCT * FROM t0 INDEXED BY i28 CROSS JOIN t2 ON CAST(((t0.c0)LIKE(0.9042698035671359)) AS INTEGER) INNER JOIN t1 ON (NOT (CASE WHEN t1.c0 THEN t2.c0 END));
SELECT t0.c0, t2.c0 FROM t2 CROSS JOIN t0 ON CAST(((t2.c0) BETWEEN (t2.c0) AND (t0.c0)) AS INTEGER) GROUP BY t0.c0, t2.c0;
SELECT t0.c0, t2.c0 FROM t2 CROSS JOIN t0 ON CAST(((t2.c0) BETWEEN (t2.c0) AND (t0.c0)) AS INTEGER) WHERE ((((t2.c0, t2.c0, NULL)) NOT BETWEEN ((NULLIF(DISTINCT t0.c0, t2.c0), t2.c0 COLLATE NOCASE, ((t0.c0)||(t0.c0)))) AND ((((((t0.c0)OR(t0.c0)))AND(t0.c0)), ((t0.c0)LIKE(t0.c0)), CASE WHEN NULL THEN t0.c0 WHEN t2.c0 THEN t0.c0 WHEN t2.c0 THEN t0.c0 ELSE t0.c0 END)))) GROUP BY t0.c0, t2.c0 UNION SELECT t0.c0, t2.c0 FROM t2 CROSS JOIN t0 ON CAST(((t2.c0) BETWEEN (t2.c0) AND (t0.c0)) AS INTEGER) WHERE ((NOT ((((t2.c0, t2.c0, NULL)) NOT BETWEEN ((NULLIF(DISTINCT t0.c0, t2.c0), t2.c0 COLLATE NOCASE, ((t0.c0)||(t0.c0)))) AND ((((((t0.c0)OR(t0.c0)))AND(t0.c0)), ((t0.c0)LIKE(t0.c0)), CASE WHEN NULL THEN t0.c0 WHEN t2.c0 THEN t0.c0 WHEN t2.c0 THEN t0.c0 ELSE t0.c0 END)))))) GROUP BY t0.c0, t2.c0 UNION SELECT t0.c0, t2.c0 FROM t2 CROSS JOIN t0 ON CAST(((t2.c0) BETWEEN (t2.c0) AND (t0.c0)) AS INTEGER) WHERE ((((((t2.c0, t2.c0, NULL)) NOT BETWEEN ((NULLIF(DISTINCT t0.c0, t2.c0), t2.c0 COLLATE NOCASE, ((t0.c0)||(t0.c0)))) AND ((((((t0.c0)OR(t0.c0)))AND(t0.c0)), ((t0.c0)LIKE(t0.c0)), CASE WHEN NULL THEN t0.c0 WHEN t2.c0 THEN t0.c0 WHEN t2.c0 THEN t0.c0 ELSE t0.c0 END)))) ISNULL)) GROUP BY t0.c0, t2.c0;
SELECT t0.c0, t2.c0 FROM t2 CROSS JOIN t0 ON CAST(((t2.c0) BETWEEN (t2.c0) AND (t0.c0)) AS INTEGER) GROUP BY t0.c0, t2.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING (+ (CASE WHEN t1.c0 THEN MAX(t1.c0) ELSE TOTAL(TOTAL(t1.c0)) END)) UNION ALL SELECT ALL t1.c0 FROM t1 NOT INDEXED GROUP BY t1.c0 HAVING (NOT ((+ (CASE WHEN t1.c0 THEN MAX(t1.c0) ELSE TOTAL(TOTAL(t1.c0)) END)))) UNION ALL SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING (((+ (CASE WHEN t1.c0 THEN MAX(t1.c0) ELSE TOTAL(TOTAL(t1.c0)) END))) ISNULL);
SELECT ALL TOTAL(json_array(0X5fb8e9ca, t2.c0) COLLATE NOCASE) FROM t1, t2 ORDER BY t2.c0 DESC;
SELECT ALL * FROM t0;
SELECT * FROM t0 WHERE (0.619655023588613) UNION ALL SELECT ALL * FROM t0 WHERE ((NOT (0.619655023588613))) UNION ALL SELECT * FROM t0 WHERE (((0.619655023588613) ISNULL));
SELECT ALL * FROM t0;
SELECT DISTINCT t1.c0, t2.c0 FROM t2, t0, t1;
SELECT DISTINCT t1.c0, t2.c0 FROM t2, t0, t1 WHERE ('-1609980884') UNION SELECT DISTINCT t1.c0, t2.c0 FROM t2, t0, t1 WHERE ((NOT ('-1609980884'))) UNION SELECT DISTINCT t1.c0, t2.c0 FROM t2, t0, t1 WHERE ((('-1609980884') ISNULL));
SELECT DISTINCT t1.c0, t2.c0 FROM t2, t0, t1;
SELECT ALL t2.c0 FROM t1, t2 GROUP BY t2.c0;
SELECT ALL t2.c0 FROM t1, t2 WHERE (CASE WHEN t1.c0 THEN t1.c0 END COLLATE BINARY) GROUP BY t2.c0 UNION SELECT ALL t2.c0 FROM t1, t2 WHERE ((NOT (CASE WHEN t1.c0 THEN t1.c0 END COLLATE BINARY))) GROUP BY t2.c0 UNION SELECT ALL t2.c0 FROM t1, t2 WHERE (((CASE WHEN t1.c0 THEN t1.c0 END COLLATE BINARY) ISNULL)) GROUP BY t2.c0;
SELECT ALL t2.c0 FROM t1, t2 GROUP BY t2.c0;
SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0;
SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0 HAVING COUNT(*) UNION ALL SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0;
SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0 HAVING COUNT(*) UNION ALL SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0;
SELECT ALL t2.c0 FROM t2;
SELECT ALL t2.c0 FROM t2 WHERE (t2.c0) UNION ALL SELECT t2.c0 FROM t2 WHERE ((NOT (t2.c0))) UNION ALL SELECT ALL t2.c0 FROM t2 WHERE (((t2.c0) ISNULL));
SELECT ALL t2.c0 FROM t2;
SELECT DISTINCT t0.c0 FROM t2, t0;
SELECT DISTINCT t0.c0 FROM t2, t0 WHERE (((CASE t0.c0  WHEN t2.c0 THEN t0.c0 ELSE t2.c0 END)-('1491441670'))) UNION SELECT DISTINCT t0.c0 FROM t2, t0 WHERE ((NOT (((CASE t0.c0  WHEN t2.c0 THEN t0.c0 ELSE t2.c0 END)-('1491441670'))))) UNION SELECT DISTINCT t0.c0 FROM t2, t0 WHERE (((((CASE t0.c0  WHEN t2.c0 THEN t0.c0 ELSE t2.c0 END)-('1491441670'))) ISNULL));
SELECT DISTINCT t0.c0 FROM t2, t0;
SELECT ALL t1.c0, t2.c0, t0.c0 FROM t1, t0 CROSS JOIN t2 ON ((((t1.c0)<>(t2.c0))) NOT BETWEEN (t2.c0 COLLATE BINARY) AND ('')) GROUP BY t1.c0, t2.c0, t0.c0;
SELECT t1.c0, t2.c0, t0.c0 FROM t1, t0 CROSS JOIN t2 ON ((((t1.c0)!=(t2.c0))) NOT BETWEEN (t2.c0 COLLATE BINARY) AND ('')) WHERE ('251039920') GROUP BY t1.c0, t2.c0, t0.c0 UNION SELECT ALL t1.c0, t2.c0, t0.c0 FROM t1, t0 CROSS JOIN t2 ON ((((t1.c0)!=(t2.c0))) NOT BETWEEN (t2.c0 COLLATE BINARY) AND ('')) WHERE ((NOT ('251039920'))) GROUP BY t1.c0, t2.c0, t0.c0 UNION SELECT t1.c0, t2.c0, t0.c0 FROM t1, t0 CROSS JOIN t2 ON ((((t1.c0)!=(t2.c0))) NOT BETWEEN (t2.c0 COLLATE BINARY) AND ('')) WHERE ((('251039920') ISNULL)) GROUP BY t1.c0, t2.c0, t0.c0;
SELECT ALL t1.c0, t2.c0, t0.c0 FROM t1, t0 CROSS JOIN t2 ON ((((t1.c0)<>(t2.c0))) NOT BETWEEN (t2.c0 COLLATE BINARY) AND ('')) GROUP BY t1.c0, t2.c0, t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING AVG('1924981563') UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (AVG('1924981563'))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((AVG('1924981563')) ISNULL);
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING AVG('1924981563') UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (AVG('1924981563'))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((AVG('1924981563')) ISNULL);
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t2, t1 NOT INDEXED, t0;
SELECT ALL t0.c0 FROM t2, t1, t0 WHERE (((((t1.c0) NOT BETWEEN (t0.c0) AND (t0.c0))) BETWEEN (t1.c0 COLLATE NOCASE) AND ((t2.c0 IN ())))) UNION ALL SELECT t0.c0 FROM t2, t1, t0 WHERE ((NOT (((((t1.c0) NOT BETWEEN (t0.c0) AND (t0.c0))) BETWEEN (t1.c0 COLLATE NOCASE) AND ((t2.c0 IN ())))))) UNION ALL SELECT ALL t0.c0 FROM t2, t1, t0 WHERE (((((((t1.c0) NOT BETWEEN (t0.c0) AND (t0.c0))) BETWEEN (t1.c0 COLLATE NOCASE) AND ((t2.c0 IN ())))) ISNULL));
SELECT ALL t0.c0 FROM t2, t1 NOT INDEXED, t0;
SELECT DISTINCT t0.c0, t1.c0, t2.c0 FROM t2 LEFT OUTER JOIN t0 ON ((((t0.c0) BETWEEN (t0.c0) AND (t2.c0)))+(('-1344139975' IN ()))) LEFT OUTER JOIN t1 ON t1.c0 COLLATE BINARY;
SELECT DISTINCT t0.c0, t1.c0, t2.c0 FROM t2 LEFT OUTER JOIN t0 ON ((((t0.c0) BETWEEN (t0.c0) AND (t2.c0)))+(('-1344139975' IN ()))) LEFT OUTER JOIN t1 ON t1.c0 COLLATE BINARY WHERE (UNLIKELY(DISTINCT t1.c0) COLLATE RTRIM) UNION SELECT DISTINCT t0.c0, t1.c0, t2.c0 FROM t2 LEFT OUTER JOIN t0 ON ((((t0.c0) BETWEEN (t0.c0) AND (t2.c0)))+(('-1344139975' IN ()))) LEFT OUTER JOIN t1 ON t1.c0 COLLATE BINARY WHERE ((NOT (UNLIKELY(DISTINCT t1.c0) COLLATE RTRIM))) UNION SELECT DISTINCT t0.c0, t1.c0, t2.c0 FROM t2 LEFT OUTER JOIN t0 ON ((((t0.c0) BETWEEN (t0.c0) AND (t2.c0)))+(('-1344139975' IN ()))) LEFT OUTER JOIN t1 ON t1.c0 COLLATE BINARY WHERE (((UNLIKELY(DISTINCT t1.c0) COLLATE RTRIM) ISNULL));
SELECT DISTINCT t0.c0, t1.c0, t2.c0 FROM t2 LEFT OUTER JOIN t0 ON ((((t0.c0) BETWEEN (t0.c0) AND (t2.c0)))+(('-1344139975' IN ()))) LEFT OUTER JOIN t1 ON t1.c0 COLLATE BINARY;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t1.c0 FROM t1 WHERE (((CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 END) BETWEEN (CAST(t1.c0 AS NUMERIC)) AND (NULL))) GROUP BY t1.c0 UNION SELECT t1.c0 FROM t1 WHERE ((NOT (((CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 END) BETWEEN (CAST(t1.c0 AS NUMERIC)) AND (NULL))))) GROUP BY t1.c0 UNION SELECT ALL t1.c0 FROM t1 WHERE (((((CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 END) BETWEEN (CAST(t1.c0 AS NUMERIC)) AND (NULL))) ISNULL)) GROUP BY t1.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t0.c0, t1.c0, t2.c0 FROM t1 LEFT OUTER JOIN t0 ON ((IFNULL(t1.c0, t2.c0))OR((t1.c0 IN ()))) CROSS JOIN t2 ON NULL COLLATE BINARY GROUP BY t0.c0, t1.c0, t2.c0;
SELECT ALL * FROM t1, t2, t0;
SELECT * FROM t1, t2, t0 WHERE (SQLITE_COMPILEOPTION_GET(((t1.c0) NOT BETWEEN (x'') AND (t0.c0)))) UNION ALL SELECT * FROM t1, t2, t0 WHERE ((NOT (SQLITE_COMPILEOPTION_GET(((t1.c0) NOT BETWEEN (x'') AND (t0.c0)))))) UNION ALL SELECT ALL * FROM t1, t2, t0 WHERE (((SQLITE_COMPILEOPTION_GET(((t1.c0) NOT BETWEEN (x'') AND (t0.c0)))) ISNULL));
SELECT ALL * FROM t1, t2, t0;
SELECT DISTINCT t1.c0 FROM t1;
SELECT DISTINCT t1.c0 FROM t1 WHERE (((((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0))) NOT NULL)) UNION SELECT DISTINCT t1.c0 FROM t1 WHERE ((NOT (((((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0))) NOT NULL)))) UNION SELECT DISTINCT t1.c0 FROM t1 WHERE (((((((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0))) NOT NULL)) ISNULL));
SELECT DISTINCT t1.c0 FROM t1;
SELECT t1.c0, t0.c0 FROM t0 FULL OUTER JOIN t1 ON (- (((t0.c0)+(t1.c0)))) FULL OUTER JOIN t2 ON NULL GROUP BY t1.c0, t0.c0;
SELECT t1.c0, t0.c0 FROM t0 FULL OUTER JOIN t1 ON (- (((t0.c0)+(t1.c0)))) FULL OUTER JOIN t2 ON NULL WHERE ((((((t0.c0)) BETWEEN ((t2.c0)) AND ((t2.c0))))<>('-1596093450'))) GROUP BY t1.c0, t0.c0 UNION SELECT ALL t1.c0, t0.c0 FROM t0 FULL OUTER JOIN t1 ON (- (((t0.c0)+(t1.c0)))) FULL OUTER JOIN t2 ON NULL WHERE ((NOT ((((((t0.c0)) BETWEEN ((t2.c0)) AND ((t2.c0))))!=('-1596093450'))))) GROUP BY t1.c0, t0.c0 UNION SELECT t1.c0, t0.c0 FROM t0 FULL OUTER JOIN t1 ON (- (((t0.c0)+(t1.c0)))) FULL OUTER JOIN t2 ON NULL WHERE ((((((((t0.c0)) BETWEEN ((t2.c0)) AND ((t2.c0))))!=('-1596093450'))) ISNULL)) GROUP BY t1.c0, t0.c0;
SELECT t1.c0, t0.c0 FROM t0 FULL OUTER JOIN t1 ON (- (((t0.c0)+(t1.c0)))) FULL OUTER JOIN t2 ON NULL GROUP BY t1.c0, t0.c0;
SELECT ALL t2.c0, t1.c0 FROM t0, t1 FULL OUTER JOIN t2 ON (((t0.c0)) NOT BETWEEN (((- (t1.c0)))) AND (((((t1.c0)) BETWEEN ((t0.c0)) AND ((t1.c0)))))) GROUP BY t2.c0, t1.c0;
SELECT t2.c0, t1.c0 FROM t0, t1 FULL OUTER JOIN t2 ON (((t0.c0)) NOT BETWEEN (((- (t1.c0)))) AND (((((t1.c0)) BETWEEN ((t0.c0)) AND ((t1.c0)))))) GROUP BY t2.c0, t1.c0 HAVING AVG(((x'311fa529f574')==(x''))) UNION ALL SELECT t2.c0, t1.c0 FROM t0, t1 FULL OUTER JOIN t2 ON (((t0.c0)) NOT BETWEEN (((- (t1.c0)))) AND (((((t1.c0)) BETWEEN ((t0.c0)) AND ((t1.c0)))))) GROUP BY t2.c0, t1.c0 HAVING (NOT (AVG(((x'311fa529f574')==(x''))))) UNION ALL SELECT t2.c0, t1.c0 FROM t0, t1 FULL OUTER JOIN t2 ON (((t0.c0)) NOT BETWEEN (((- (t1.c0)))) AND (((((t1.c0)) BETWEEN ((t0.c0)) AND ((t1.c0)))))) GROUP BY t2.c0, t1.c0 HAVING ((AVG(((x'311fa529f574')=(x'')))) ISNULL);
SELECT ALL t2.c0, t1.c0 FROM t0, t1 FULL OUTER JOIN t2 ON (((t0.c0)) NOT BETWEEN (((- (t1.c0)))) AND (((((t1.c0)) BETWEEN ((t0.c0)) AND ((t1.c0)))))) GROUP BY t2.c0, t1.c0;
SELECT t2.c0, t1.c0 FROM t0, t1 FULL OUTER JOIN t2 ON (((t0.c0)) NOT BETWEEN (((- (t1.c0)))) AND (((((t1.c0)) BETWEEN ((t0.c0)) AND ((t1.c0)))))) GROUP BY t2.c0, t1.c0 HAVING AVG(((x'311fa529f574')==(x''))) UNION ALL SELECT t2.c0, t1.c0 FROM t0, t1 FULL OUTER JOIN t2 ON (((t0.c0)) NOT BETWEEN (((- (t1.c0)))) AND (((((t1.c0)) BETWEEN ((t0.c0)) AND ((t1.c0)))))) GROUP BY t2.c0, t1.c0 HAVING (NOT (AVG(((x'311fa529f574')==(x''))))) UNION ALL SELECT t2.c0, t1.c0 FROM t0, t1 FULL OUTER JOIN t2 ON (((t0.c0)) NOT BETWEEN (((- (t1.c0)))) AND (((((t1.c0)) BETWEEN ((t0.c0)) AND ((t1.c0)))))) GROUP BY t2.c0, t1.c0 HAVING ((AVG(((x'311fa529f574')=(x'')))) ISNULL);
SELECT ALL t2.c0, t1.c0 FROM t0, t1 FULL OUTER JOIN t2 ON (((t0.c0)) NOT BETWEEN (((- (t1.c0)))) AND (((((t1.c0)) BETWEEN ((t0.c0)) AND ((t1.c0)))))) GROUP BY t2.c0, t1.c0;
SELECT ALL * FROM t0, t1, t2;
SELECT * FROM t0, t1, t2 WHERE (((((t1.c0)OR(t0.c0)))IS NOT(t0.c0))) UNION ALL SELECT * FROM t0, t1, t2 WHERE ((NOT (((((t1.c0)OR(t0.c0)))IS NOT(t0.c0))))) UNION ALL SELECT ALL * FROM t0, t1, t2 WHERE (((((((t1.c0)OR(t0.c0)))IS NOT(t0.c0))) ISNULL));
SELECT ALL * FROM t0, t1, t2;
SELECT DISTINCT * FROM t2, t0;
SELECT DISTINCT * FROM t2, t0 WHERE (((t2.c0) NOT NULL)) UNION SELECT DISTINCT * FROM t2, t0 WHERE ((NOT (((t2.c0) NOT NULL)))) UNION SELECT DISTINCT * FROM t2, t0 WHERE (((((t2.c0) NOT NULL)) ISNULL));
SELECT DISTINCT * FROM t2, t0;
SELECT ALL t1.c0 FROM t1, t2 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1, t2 WHERE ((((t2.c0)) NOT BETWEEN ((CAST(t2.c0 AS BLOB))) AND ((((x'4622')<<(t2.c0)))))) GROUP BY t1.c0 UNION SELECT t1.c0 FROM t1, t2 WHERE ((NOT ((((t2.c0)) NOT BETWEEN ((CAST(t2.c0 AS BLOB))) AND ((((x'4622')<<(t2.c0)))))))) GROUP BY t1.c0 UNION SELECT t1.c0 FROM t1, t2 WHERE ((((((t2.c0)) NOT BETWEEN ((CAST(t2.c0 AS BLOB))) AND ((((x'4622')<<(t2.c0)))))) ISNULL)) GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1, t2 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t0 CROSS JOIN t2 ON ((CASE t1.c0  WHEN t0.c0 THEN t1.c0 ELSE t1.c0 END)>>(CAST(t0.c0 AS TEXT))) RIGHT OUTER JOIN t1 ON ((t1.c0)*(t0.c0)) COLLATE BINARY GROUP BY t1.c0;
SELECT ALL t2.c0, t0.c0 FROM t0, t2;
SELECT ALL t2.c0, t0.c0 FROM t0, t2 WHERE (CAST(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) AS TEXT)) UNION ALL SELECT ALL t2.c0, t0.c0 FROM t0, t2 WHERE ((NOT (CAST(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) AS TEXT)))) UNION ALL SELECT ALL t2.c0, t0.c0 FROM t0, t2 WHERE (((CAST(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) AS TEXT)) ISNULL));
SELECT ALL t2.c0, t0.c0 FROM t0, t2;
SELECT DISTINCT * FROM t1;
SELECT DISTINCT * FROM t1 WHERE ((((((t1.c0 IN ()))AND(CASE WHEN t1.c0 THEN t1.c0 WHEN 0.8072367025741706 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN NULL THEN t1.c0 END)))AND(((t1.c0)+(t1.c0))))) UNION SELECT DISTINCT * FROM t1 WHERE ((NOT ((((((t1.c0 IN ()))AND(CASE WHEN t1.c0 THEN t1.c0 WHEN 0.8072367025741706 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN NULL THEN t1.c0 END)))AND(((t1.c0)+(t1.c0))))))) UNION SELECT DISTINCT * FROM t1 WHERE ((((((((t1.c0 IN ()))AND(CASE WHEN t1.c0 THEN t1.c0 WHEN 0.8072367025741706 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN NULL THEN t1.c0 END)))AND(((t1.c0)+(t1.c0))))) ISNULL));
SELECT DISTINCT * FROM t1;
SELECT ALL t0.c0 FROM t2 RIGHT OUTER JOIN t0 ON ' u' GROUP BY t0.c0;
SELECT t0.c0 FROM t2 RIGHT OUTER JOIN t0 ON ' u' WHERE ('1938661770') GROUP BY t0.c0 UNION SELECT t0.c0 FROM t2 RIGHT OUTER JOIN t0 ON ' u' WHERE ((NOT ('1938661770'))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t2 RIGHT OUTER JOIN t0 ON ' u' WHERE ((('1938661770') ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t2 RIGHT OUTER JOIN t0 ON ' u' GROUP BY t0.c0;
SELECT ALL t1.c0 FROM t0, t1, t2 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t0, t1, t2 GROUP BY t1.c0 HAVING (((((t1.c0))<=((TOTAL(1.405107043E9)))))|(AVG(t1.c0))) UNION ALL SELECT t1.c0 FROM t0 NOT INDEXED, t1, t2 GROUP BY t1.c0 HAVING (NOT ((((((t1.c0))<=((TOTAL(1.405107043E9)))))|(AVG(t1.c0))))) UNION ALL SELECT ALL t1.c0 FROM t0, t1, t2 GROUP BY t1.c0 HAVING (((((((t1.c0))<=((TOTAL(1.405107043E9)))))|(AVG(t1.c0)))) ISNULL);
SELECT ALL t1.c0 FROM t0, t1, t2 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t0, t1, t2 GROUP BY t1.c0 HAVING (((((t1.c0))<=((TOTAL(1.405107043E9)))))|(AVG(t1.c0))) UNION ALL SELECT t1.c0 FROM t0 NOT INDEXED, t1, t2 GROUP BY t1.c0 HAVING (NOT ((((((t1.c0))<=((TOTAL(1.405107043E9)))))|(AVG(t1.c0))))) UNION ALL SELECT ALL t1.c0 FROM t0, t1, t2 GROUP BY t1.c0 HAVING (((((((t1.c0))<=((TOTAL(1.405107043E9)))))|(AVG(t1.c0)))) ISNULL);
SELECT ALL t1.c0 FROM t0, t1, t2 GROUP BY t1.c0;
SELECT t2.c0, t1.c0 FROM t2, t0 NATURAL JOIN t1;
SELECT t2.c0, t1.c0 FROM t2, t0 NATURAL JOIN t1 WHERE (LTRIM(UNLIKELY(t1.c0))) UNION ALL SELECT t2.c0, t1.c0 FROM t2, t0 NATURAL JOIN t1 WHERE ((NOT (LTRIM(UNLIKELY(t1.c0))))) UNION ALL SELECT t2.c0, t1.c0 FROM t2, t0 NATURAL JOIN t1 WHERE (((LTRIM(UNLIKELY(t1.c0))) ISNULL));
SELECT t2.c0, t1.c0 FROM t2, t0 NATURAL JOIN t1;
SELECT DISTINCT * FROM t1, t0;
SELECT DISTINCT * FROM t1, t0 WHERE ((((t1.c0) BETWEEN (t1.c0) AND (t0.c0)) IN ())) UNION SELECT DISTINCT * FROM t1, t0 WHERE ((NOT ((((t1.c0) BETWEEN (t1.c0) AND (t0.c0)) IN ())))) UNION SELECT DISTINCT * FROM t1, t0 WHERE ((((((t1.c0) BETWEEN (t1.c0) AND (t0.c0)) IN ())) ISNULL));
SELECT DISTINCT * FROM t1, t0;
SELECT ALL t0.c0, t2.c0 FROM t0, t2 GROUP BY t0.c0, t2.c0;
SELECT ALL t0.c0, t2.c0 FROM t0, t2 WHERE ((((('')|(t0.c0))) BETWEEN (((t0.c0) NOT NULL)) AND (0Xffffffffc5d0ab2d))) GROUP BY t0.c0, t2.c0 UNION SELECT t0.c0, t2.c0 FROM t0, t2 WHERE ((NOT ((((('')|(t0.c0))) BETWEEN (((t0.c0) NOT NULL)) AND (0Xffffffffc5d0ab2d))))) GROUP BY t0.c0, t2.c0 UNION SELECT t0.c0, t2.c0 FROM t0, t2 WHERE ((((((('')|(t0.c0))) BETWEEN (((t0.c0) NOT NULL)) AND (0Xffffffffc5d0ab2d))) ISNULL)) GROUP BY t0.c0, t2.c0;
SELECT ALL t0.c0, t2.c0 FROM t0, t2 GROUP BY t0.c0, t2.c0;
SELECT t2.c0 FROM t2 NATURAL JOIN t1 GROUP BY t2.c0;
SELECT ALL t2.c0 FROM t2 NATURAL JOIN t1 GROUP BY t2.c0 HAVING COUNT(SUM(t1.c0)) UNION ALL SELECT ALL t2.c0 FROM t2 NATURAL JOIN t1 GROUP BY t2.c0 HAVING (NOT (COUNT(SUM(t1.c0)))) UNION ALL SELECT ALL t2.c0 FROM t2 NATURAL JOIN t1 GROUP BY t2.c0 HAVING ((COUNT(SUM(t1.c0))) ISNULL);
SELECT ALL * FROM t2, t1, t0;
SELECT * FROM t2, t1, t0 WHERE ((((((t2.c0, t0.c0, t1.c0)) BETWEEN ((t0.c0, t2.c0, t0.c0)) AND ((t0.c0, t1.c0, t0.c0))))IS(json_insert(t0.c0, t2.c0, t2.c0, t2.c0, t0.c0)))) UNION ALL SELECT ALL * FROM t2 NOT INDEXED, t1, t0 WHERE ((NOT ((((((t2.c0, t0.c0, t1.c0)) BETWEEN ((t0.c0, t2.c0, t0.c0)) AND ((t0.c0, t1.c0, t0.c0))))IS(json_insert(t0.c0, t2.c0, t2.c0, t2.c0, t0.c0)))))) UNION ALL SELECT * FROM t2, t1, t0 WHERE ((((((((t2.c0, t0.c0, t1.c0)) BETWEEN ((t0.c0, t2.c0, t0.c0)) AND ((t0.c0, t1.c0, t0.c0))))IS(json_insert(t0.c0, t2.c0, t2.c0, t2.c0, t0.c0)))) ISNULL));
SELECT ALL * FROM t2, t1, t0;
SELECT DISTINCT t0.c0, t2.c0 FROM t2, t1, t0;
SELECT DISTINCT t0.c0, t2.c0 FROM t2, t1, t0 WHERE (t1.c0) UNION SELECT DISTINCT t0.c0, t2.c0 FROM t2, t1, t0 WHERE ((NOT (t1.c0))) UNION SELECT DISTINCT t0.c0, t2.c0 FROM t2, t1, t0 WHERE (((t1.c0) ISNULL));
SELECT DISTINCT t0.c0, t2.c0 FROM t2, t1, t0;
SELECT t1.c0 FROM t0, t1 GROUP BY t1.c0;
SELECT t1.c0 FROM t0, t1 WHERE ((((t0.c0, t1.c0, t0.c0)) NOT BETWEEN (('\!j[an%%R', json_object(t1.c0, t1.c0), CAST(t0.c0 AS NUMERIC))) AND ((CASE t1.c0  WHEN 1513207366 THEN 3.60271426E8 ELSE t1.c0 END, COALESCE(DISTINCT t0.c0, t1.c0), t1.c0 COLLATE NOCASE)))) GROUP BY t1.c0 UNION SELECT ALL t1.c0 FROM t0, t1 WHERE ((NOT ((((t0.c0, t1.c0, t0.c0)) NOT BETWEEN (('\!j[an%%R', json_object(t1.c0, t1.c0), CAST(t0.c0 AS NUMERIC))) AND ((CASE t1.c0  WHEN 1513207366 THEN 3.60271426E8 ELSE t1.c0 END, COALESCE(DISTINCT t0.c0, t1.c0), t1.c0 COLLATE NOCASE)))))) GROUP BY t1.c0 UNION SELECT t1.c0 FROM t0, t1 WHERE ((((((t0.c0, t1.c0, t0.c0)) NOT BETWEEN (('\!j[an%%R', json_object(t1.c0, t1.c0), CAST(t0.c0 AS NUMERIC))) AND ((CASE t1.c0  WHEN 1513207366 THEN 3.60271426E8 ELSE t1.c0 END, COALESCE(DISTINCT t0.c0, t1.c0), t1.c0 COLLATE NOCASE)))) ISNULL)) GROUP BY t1.c0;
SELECT t1.c0 FROM t0, t1 GROUP BY t1.c0;
SELECT ALL t0.c0 FROM t0, t1, t2 GROUP BY t0.c0;
SELECT t0.c0 FROM t0, t1, t2 GROUP BY t0.c0 HAVING load_extension(MIN(t1.c0)) UNION ALL SELECT ALL t0.c0 FROM t0, t1, t2 GROUP BY t0.c0 HAVING (NOT (load_extension(MIN(t1.c0)))) UNION ALL SELECT t0.c0 FROM t0, t1, t2 GROUP BY t0.c0 HAVING ((load_extension(MIN(t1.c0))) ISNULL);
SELECT ALL t0.c0 FROM t0, t1, t2 GROUP BY t0.c0;
SELECT t0.c0 FROM t0, t1, t2 GROUP BY t0.c0 HAVING load_extension(MIN(t1.c0)) UNION ALL SELECT ALL t0.c0 FROM t0, t1, t2 GROUP BY t0.c0 HAVING (NOT (load_extension(MIN(t1.c0)))) UNION ALL SELECT t0.c0 FROM t0, t1, t2 GROUP BY t0.c0 HAVING ((load_extension(MIN(t1.c0))) ISNULL);
SELECT ALL t0.c0 FROM t0, t1, t2 GROUP BY t0.c0;
SELECT ALL * FROM t2, t0 INDEXED BY i28, t1;
SELECT DISTINCT t2.c0, t1.c0 FROM t0 FULL OUTER JOIN t1 ON CASE WHEN (t0.c0 IN ()) THEN t1.c0 COLLATE BINARY ELSE ((t1.c0)/(t1.c0)) END RIGHT OUTER JOIN t2 ON CASE (t0.c0 IN ())  WHEN (t2.c0 IN (t0.c0)) THEN load_extension(t1.c0) ELSE ((t0.c0) NOTNULL) END;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE (x'') GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT (x''))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE (((x'') ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING COUNT(*) UNION ALL SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING COUNT(*) UNION ALL SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL * FROM t0, t2, t1;
SELECT * FROM t0, t2, t1 WHERE (((t2.c0)+(((t1.c0) NOT BETWEEN (t2.c0) AND (t0.c0))))) UNION ALL SELECT * FROM t0, t2, t1 WHERE ((NOT (((t2.c0)+(((t1.c0) NOT BETWEEN (t2.c0) AND (t0.c0))))))) UNION ALL SELECT * FROM t0, t2, t1 WHERE (((((t2.c0)+(((t1.c0) NOT BETWEEN (t2.c0) AND (t0.c0))))) ISNULL));
SELECT ALL * FROM t0, t2, t1;
SELECT DISTINCT * FROM t1;
SELECT DISTINCT * FROM t1 WHERE (((((t1.c0)<(t1.c0))) NOT NULL)) UNION SELECT DISTINCT * FROM t1 NOT INDEXED WHERE ((NOT (((((t1.c0)<(t1.c0))) NOT NULL)))) UNION SELECT DISTINCT * FROM t1 WHERE (((((((t1.c0)<(t1.c0))) NOT NULL)) ISNULL));
SELECT DISTINCT * FROM t1;
SELECT ALL t2.c0 FROM t1, t2 GROUP BY t2.c0;
SELECT ALL t2.c0 FROM t1, t2 WHERE (CASE WHEN JULIANDAY('-1163397200', t2.c0, t2.c0) THEN ((t2.c0) NOT BETWEEN ('-1673567041') AND (t1.c0)) WHEN ((t2.c0)IS(t2.c0)) THEN t2.c0 COLLATE RTRIM WHEN ((((t1.c0)OR(x'')))AND(t2.c0)) THEN t1.c0 COLLATE NOCASE ELSE ((t1.c0)%(t2.c0)) END) GROUP BY t2.c0 UNION SELECT ALL t2.c0 FROM t1, t2 WHERE ((NOT (CASE WHEN JULIANDAY('-1163397200', t2.c0, t2.c0) THEN ((t2.c0) NOT BETWEEN ('-1673567041') AND (t1.c0)) WHEN ((t2.c0)IS(t2.c0)) THEN t2.c0 COLLATE RTRIM WHEN ((((t1.c0)OR(x'')))AND(t2.c0)) THEN t1.c0 COLLATE NOCASE ELSE ((t1.c0)%(t2.c0)) END))) GROUP BY t2.c0 UNION SELECT ALL t2.c0 FROM t1, t2 WHERE (((CASE WHEN JULIANDAY('-1163397200', t2.c0, t2.c0) THEN ((t2.c0) NOT BETWEEN ('-1673567041') AND (t1.c0)) WHEN ((t2.c0)IS(t2.c0)) THEN t2.c0 COLLATE RTRIM WHEN ((((t1.c0)OR(x'')))AND(t2.c0)) THEN t1.c0 COLLATE NOCASE ELSE ((t1.c0)%(t2.c0)) END) ISNULL)) GROUP BY t2.c0;
SELECT ALL t2.c0 FROM t1, t2 GROUP BY t2.c0;
SELECT ALL t2.c0 FROM t2 RIGHT OUTER JOIN t1 ON 0.468117760237147 GROUP BY t2.c0;
SELECT ALL t2.c0 FROM t2 RIGHT OUTER JOIN t1 ON 0.468117760237147 GROUP BY t2.c0 HAVING MIN(AVG(AVG(COUNT(COUNT(*))))) UNION ALL SELECT ALL t2.c0 FROM t2 RIGHT OUTER JOIN t1 ON 0.468117760237147 GROUP BY t2.c0 HAVING (NOT (MIN(AVG(AVG(COUNT(COUNT(*))))))) UNION ALL SELECT ALL t2.c0 FROM t2 RIGHT OUTER JOIN t1 ON 0.468117760237147 GROUP BY t2.c0 HAVING ((MIN(AVG(AVG(COUNT(COUNT(*)))))) ISNULL);
SELECT ALL t0.c0 FROM t0 INDEXED BY i28;
SELECT DISTINCT t2.c0 FROM t2;
SELECT DISTINCT t2.c0 FROM t2 WHERE (((((t2.c0)AND(t2.c0)))AND(t2.c0)) COLLATE NOCASE) UNION SELECT DISTINCT t2.c0 FROM t2 WHERE ((NOT (((((t2.c0)AND(t2.c0)))AND(t2.c0)) COLLATE NOCASE))) UNION SELECT DISTINCT t2.c0 FROM t2 WHERE (((((((t2.c0)AND(t2.c0)))AND(t2.c0)) COLLATE NOCASE) ISNULL));
SELECT DISTINCT t2.c0 FROM t2;
SELECT t0.c0 FROM t2, t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t2, t0 WHERE ((CAST(t2.c0 AS BLOB) IN ())) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t2, t0 WHERE ((NOT ((CAST(t2.c0 AS BLOB) IN ())))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t2, t0 WHERE ((((CAST(t2.c0 AS BLOB) IN ())) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t2, t0 GROUP BY t0.c0;
SELECT ALL t2.c0, t0.c0 FROM t0 LEFT OUTER JOIN t2 ON COALESCE(DISTINCT ((t0.c0) NOT BETWEEN (t0.c0) AND (t2.c0)), CASE t2.c0  WHEN x'de39' THEN t2.c0 WHEN t2.c0 THEN t0.c0 WHEN t2.c0 THEN NULL END, ((t2.c0)<<(x'')), CASE t0.c0  WHEN t2.c0 THEN t2.c0 END) GROUP BY t2.c0, t0.c0;
SELECT ALL t2.c0, t0.c0 FROM t0 LEFT OUTER JOIN t2 ON COALESCE(DISTINCT ((t0.c0) NOT BETWEEN (t0.c0) AND (t2.c0)), CASE t2.c0  WHEN x'de39' THEN t2.c0 WHEN t2.c0 THEN t0.c0 WHEN t2.c0 THEN NULL END, ((t2.c0)<<(x'')), CASE t0.c0  WHEN t2.c0 THEN t2.c0 END) GROUP BY t2.c0, t0.c0 HAVING ((SUM(t2.c0))IS NOT(CASE WHEN SUM(t0.c0) THEN AVG(SUM(AVG(MAX(GROUP_CONCAT(MIN(t2.c0)))))) END)) UNION ALL SELECT t2.c0, t0.c0 FROM t0 LEFT OUTER JOIN t2 ON COALESCE(DISTINCT ((t0.c0) NOT BETWEEN (t0.c0) AND (t2.c0)), CASE t2.c0  WHEN x'de39' THEN t2.c0 WHEN t2.c0 THEN t0.c0 WHEN t2.c0 THEN NULL END, ((t2.c0)<<(x'')), CASE t0.c0  WHEN t2.c0 THEN t2.c0 END) GROUP BY t2.c0, t0.c0 HAVING (NOT (((SUM(t2.c0))IS NOT(CASE WHEN SUM(t0.c0) THEN AVG(SUM(AVG(MAX(GROUP_CONCAT(MIN(t2.c0)))))) END)))) UNION ALL SELECT t2.c0, t0.c0 FROM t0 LEFT OUTER JOIN t2 ON COALESCE(DISTINCT ((t0.c0) NOT BETWEEN (t0.c0) AND (t2.c0)), CASE t2.c0  WHEN x'de39' THEN t2.c0 WHEN t2.c0 THEN t0.c0 WHEN t2.c0 THEN NULL END, ((t2.c0)<<(x'')), CASE t0.c0  WHEN t2.c0 THEN t2.c0 END) GROUP BY t2.c0, t0.c0 HAVING ((((SUM(t2.c0))IS NOT(CASE WHEN SUM(t0.c0) THEN AVG(SUM(AVG(MAX(GROUP_CONCAT(MIN(t2.c0)))))) END))) ISNULL);
SELECT * FROM t0, t1;
SELECT * FROM t0, t1 WHERE ((('912826879')>=(((t1.c0) BETWEEN (t0.c0) AND (t1.c0))))) UNION ALL SELECT * FROM t0, t1 WHERE ((NOT ((('912826879')>=(((t1.c0) BETWEEN (t0.c0) AND (t1.c0))))))) UNION ALL SELECT * FROM t0, t1 WHERE ((((('912826879')>=(((t1.c0) BETWEEN (t0.c0) AND (t1.c0))))) ISNULL));
SELECT * FROM t0, t1;
SELECT DISTINCT * FROM t2;
SELECT DISTINCT * FROM t2 WHERE ((json_extract(0x4550135f, t2.c0) IN (x''))) UNION SELECT DISTINCT * FROM t2 WHERE ((NOT ((json_extract(0X4550135f, t2.c0) IN (x''))))) UNION SELECT DISTINCT * FROM t2 WHERE ((((json_extract(0x4550135f, t2.c0) IN (x''))) ISNULL));
SELECT ALL t0.c0, t2.c0 FROM t2, t0, t1 GROUP BY t0.c0, t2.c0;
SELECT ALL t0.c0, t2.c0 FROM t2, t0, t1 WHERE (((CAST(t1.c0 AS REAL)) ISNULL)) GROUP BY t0.c0, t2.c0 UNION SELECT t0.c0, t2.c0 FROM t2, t0, t1 WHERE ((NOT (((CAST(t1.c0 AS REAL)) ISNULL)))) GROUP BY t0.c0, t2.c0 UNION SELECT ALL t0.c0, t2.c0 FROM t2, t0, t1 WHERE (((((CAST(t1.c0 AS REAL)) ISNULL)) ISNULL)) GROUP BY t0.c0, t2.c0;
SELECT ALL t0.c0, t2.c0 FROM t2, t0, t1 GROUP BY t0.c0, t2.c0;
SELECT t0.c0 FROM t2 RIGHT OUTER JOIN t0 ON ((((((((t2.c0)OR(((t2.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))))OR(x'')))OR(CAST(t0.c0 AS BLOB))))OR(json_patch(t2.c0, t2.c0))) GROUP BY t0.c0;
SELECT t0.c0 FROM t2 RIGHT OUTER JOIN t0 ON ((((((((t2.c0)OR(((t2.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))))OR(x'')))OR(CAST(t0.c0 AS BLOB))))OR(json_patch(t2.c0, t2.c0))) GROUP BY t0.c0 HAVING MIN((t0.c0 IN ())) UNION ALL SELECT ALL t0.c0 FROM t2 RIGHT OUTER JOIN t0 ON ((((((((t2.c0)OR(((t2.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))))OR(x'')))OR(CAST(t0.c0 AS BLOB))))OR(json_patch(t2.c0, t2.c0))) GROUP BY t0.c0 HAVING (NOT (MIN((t0.c0 IN ())))) UNION ALL SELECT ALL t0.c0 FROM t2 RIGHT OUTER JOIN t0 ON ((((((((t2.c0)OR(((t2.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))))OR(x'')))OR(CAST(t0.c0 AS BLOB))))OR(json_patch(t2.c0, t2.c0))) GROUP BY t0.c0 HAVING ((MIN((t0.c0 IN ()))) ISNULL);
SELECT t0.c0 FROM t2 RIGHT OUTER JOIN t0 ON ((((((((t2.c0)OR(((t2.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))))OR(x'')))OR(CAST(t0.c0 AS BLOB))))OR(json_patch(t2.c0, t2.c0))) GROUP BY t0.c0;
SELECT t0.c0 FROM t2 RIGHT OUTER JOIN t0 ON ((((((((t2.c0)OR(((t2.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))))OR(x'')))OR(CAST(t0.c0 AS BLOB))))OR(json_patch(t2.c0, t2.c0))) GROUP BY t0.c0 HAVING MIN((t0.c0 IN ())) UNION ALL SELECT ALL t0.c0 FROM t2 RIGHT OUTER JOIN t0 ON ((((((((t2.c0)OR(((t2.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))))OR(x'')))OR(CAST(t0.c0 AS BLOB))))OR(json_patch(t2.c0, t2.c0))) GROUP BY t0.c0 HAVING (NOT (MIN((t0.c0 IN ())))) UNION ALL SELECT ALL t0.c0 FROM t2 RIGHT OUTER JOIN t0 ON ((((((((t2.c0)OR(((t2.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))))OR(x'')))OR(CAST(t0.c0 AS BLOB))))OR(json_patch(t2.c0, t2.c0))) GROUP BY t0.c0 HAVING ((MIN((t0.c0 IN ()))) ISNULL);
SELECT t0.c0 FROM t2 RIGHT OUTER JOIN t0 ON ((((((((t2.c0)OR(((t2.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))))OR(x'')))OR(CAST(t0.c0 AS BLOB))))OR(json_patch(t2.c0, t2.c0))) GROUP BY t0.c0;
SELECT * FROM t1, t2;
SELECT ALL * FROM t1, t2 WHERE (((t1.c0)IS NOT(t1.c0)) COLLATE NOCASE) UNION ALL SELECT * FROM t1, t2 WHERE ((NOT (((t1.c0)IS NOT(t1.c0)) COLLATE NOCASE))) UNION ALL SELECT * FROM t1, t2 WHERE (((((t1.c0)IS NOT(t1.c0)) COLLATE NOCASE) ISNULL));
SELECT * FROM t1, t2;
SELECT DISTINCT t0.c0, t1.c0 FROM t1, t0;
SELECT DISTINCT t0.c0, t1.c0 FROM t1, t0 WHERE (((((t0.c0)AND(t0.c0)))AND(t0.c0)) COLLATE NOCASE) UNION SELECT DISTINCT t0.c0, t1.c0 FROM t1, t0 WHERE ((NOT (((((t0.c0)AND(t0.c0)))AND(t0.c0)) COLLATE NOCASE))) UNION SELECT DISTINCT t0.c0, t1.c0 FROM t1, t0 WHERE (((((((t0.c0)AND(t0.c0)))AND(t0.c0)) COLLATE NOCASE) ISNULL));
SELECT DISTINCT t0.c0, t1.c0 FROM t1, t0;
SELECT t1.c0, t0.c0 FROM t1 INNER JOIN t0 ON t1.c0 GROUP BY t1.c0, t0.c0;
SELECT ALL t1.c0, t0.c0 FROM t1 INNER JOIN t0 ON t1.c0 WHERE (CAST(((t0.c0)||(t0.c0)) AS NUMERIC)) GROUP BY t1.c0, t0.c0 UNION SELECT t1.c0, t0.c0 FROM t1 INNER JOIN t0 ON t1.c0 WHERE ((NOT (CAST(((t0.c0)||(t0.c0)) AS NUMERIC)))) GROUP BY t1.c0, t0.c0 UNION SELECT ALL t1.c0, t0.c0 FROM t1 INNER JOIN t0 ON t1.c0 WHERE (((CAST(((t0.c0)||(t0.c0)) AS NUMERIC)) ISNULL)) GROUP BY t1.c0, t0.c0;
SELECT t1.c0, t0.c0 FROM t1 INNER JOIN t0 ON t1.c0 GROUP BY t1.c0, t0.c0;
SELECT ALL t1.c0 FROM t1, t2 GROUP BY t1.c0;
SELECT t1.c0 FROM t1, t2 GROUP BY t1.c0 HAVING MAX(COUNT(TOTAL(t2.c0))) UNION ALL SELECT ALL t1.c0 FROM t1, t2 GROUP BY t1.c0 HAVING (NOT (MAX(COUNT(TOTAL(t2.c0))))) UNION ALL SELECT t1.c0 FROM t1, t2 GROUP BY t1.c0 HAVING ((MAX(COUNT(TOTAL(t2.c0)))) ISNULL);
SELECT * FROM t2, t1;
SELECT ALL * FROM t2, t1 WHERE (((((t1.c0)IS NOT(t1.c0)))IS(CASE WHEN t2.c0 THEN t1.c0 ELSE t1.c0 END))) UNION ALL SELECT * FROM t2, t1 WHERE ((NOT (((((t1.c0)IS NOT(t1.c0)))IS(CASE WHEN t2.c0 THEN t1.c0 ELSE t1.c0 END))))) UNION ALL SELECT * FROM t2, t1 WHERE (((((((t1.c0)IS NOT(t1.c0)))IS(CASE WHEN t2.c0 THEN t1.c0 ELSE t1.c0 END))) ISNULL));
SELECT * FROM t2, t1;
SELECT DISTINCT * FROM t1;
SELECT DISTINCT * FROM t1 WHERE (NULLIF(DISTINCT NULL, ((t1.c0) BETWEEN (t1.c0) AND (t1.c0)))) UNION SELECT DISTINCT * FROM t1 WHERE ((NOT (NULLIF(DISTINCT NULL, ((t1.c0) BETWEEN (t1.c0) AND (t1.c0)))))) UNION SELECT DISTINCT * FROM t1 WHERE (((NULLIF(DISTINCT NULL, ((t1.c0) BETWEEN (t1.c0) AND (t1.c0)))) ISNULL));
SELECT DISTINCT * FROM t1;
SELECT ALL t0.c0 FROM t1, t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t1, t0 WHERE (((((((t1.c0)|(t0.c0)))AND(t1.c0 COLLATE BINARY)))AND(CAST(t0.c0 AS REAL)))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t1, t0 WHERE ((NOT (((((((t1.c0)|(t0.c0)))AND(t1.c0 COLLATE BINARY)))AND(CAST(t0.c0 AS REAL)))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t1, t0 WHERE (((((((((t1.c0)|(t0.c0)))AND(t1.c0 COLLATE BINARY)))AND(CAST(t0.c0 AS REAL)))) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t1, t0 GROUP BY t0.c0;
SELECT t1.c0 FROM t1, t0 GROUP BY t1.c0;
SELECT t1.c0 FROM t1, t0 GROUP BY t1.c0 HAVING GROUP_CONCAT(TOTAL(SUM(MIN(t0.c0)))) UNION ALL SELECT t1.c0 FROM t1, t0 GROUP BY t1.c0 HAVING (NOT (GROUP_CONCAT(TOTAL(SUM(MIN(t0.c0)))))) UNION ALL SELECT ALL t1.c0 FROM t1, t0 GROUP BY t1.c0 HAVING ((GROUP_CONCAT(TOTAL(SUM(MIN(t0.c0))))) ISNULL);
SELECT ALL * FROM t1 NATURAL JOIN t0;
SELECT * FROM t1 NATURAL JOIN t0 WHERE (CAST(((NULL)<=(t0.c0)) AS REAL)) UNION ALL SELECT * FROM t1 NATURAL JOIN t0 WHERE ((NOT (CAST(((NULL)<=(t0.c0)) AS REAL)))) UNION ALL SELECT ALL * FROM t1 NATURAL JOIN t0 WHERE (((CAST(((NULL)<=(t0.c0)) AS REAL)) ISNULL));
SELECT ALL * FROM t1 NATURAL JOIN t0;
SELECT DISTINCT t2.c0 FROM t2;
SELECT DISTINCT t2.c0 FROM t2 WHERE ((((((t2.c0))<((t2.c0)))) NOT BETWEEN (((t2.c0)AND(t2.c0))) AND ((- (t2.c0))))) UNION SELECT DISTINCT t2.c0 FROM t2 WHERE ((NOT ((((((t2.c0))<((t2.c0)))) NOT BETWEEN (((t2.c0)AND(t2.c0))) AND ((- (t2.c0))))))) UNION SELECT DISTINCT t2.c0 FROM t2 WHERE ((((((((t2.c0))<((t2.c0)))) NOT BETWEEN (((t2.c0)AND(t2.c0))) AND ((- (t2.c0))))) ISNULL));
SELECT DISTINCT t2.c0 FROM t2;
SELECT t2.c0 FROM t2 GROUP BY t2.c0;
SELECT t2.c0 FROM t2 WHERE (CAST(CAST(t2.c0 AS INTEGER) AS REAL)) GROUP BY t2.c0 UNION SELECT t2.c0 FROM t2 WHERE ((NOT (CAST(CAST(t2.c0 AS INTEGER) AS REAL)))) GROUP BY t2.c0 UNION SELECT t2.c0 FROM t2 WHERE (((CAST(CAST(t2.c0 AS INTEGER) AS REAL)) ISNULL)) GROUP BY t2.c0;
SELECT t2.c0 FROM t2 GROUP BY t2.c0;
SELECT t0.c0 FROM t0 FULL OUTER JOIN t2 ON ((-208781928)!=(((t2.c0) NOTNULL))) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 FULL OUTER JOIN t2 ON ((-208781928)!=(((t2.c0) NOTNULL))) GROUP BY t0.c0 HAVING COUNT(CAST(t0.c0 AS REAL)) UNION ALL SELECT t0.c0 FROM t0 FULL OUTER JOIN t2 ON ((-208781928)!=(((t2.c0) NOTNULL))) GROUP BY t0.c0 HAVING (NOT (COUNT(CAST(t0.c0 AS REAL)))) UNION ALL SELECT t0.c0 FROM t0 FULL OUTER JOIN t2 ON ((-208781928)<>(((t2.c0) NOTNULL))) GROUP BY t0.c0 HAVING ((COUNT(CAST(t0.c0 AS REAL))) ISNULL);
SELECT t0.c0 FROM t0 FULL OUTER JOIN t2 ON ((-208781928)!=(((t2.c0) NOTNULL))) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 FULL OUTER JOIN t2 ON ((-208781928)!=(((t2.c0) NOTNULL))) GROUP BY t0.c0 HAVING COUNT(CAST(t0.c0 AS REAL)) UNION ALL SELECT t0.c0 FROM t0 FULL OUTER JOIN t2 ON ((-208781928)!=(((t2.c0) NOTNULL))) GROUP BY t0.c0 HAVING (NOT (COUNT(CAST(t0.c0 AS REAL)))) UNION ALL SELECT t0.c0 FROM t0 FULL OUTER JOIN t2 ON ((-208781928)<>(((t2.c0) NOTNULL))) GROUP BY t0.c0 HAVING ((COUNT(CAST(t0.c0 AS REAL))) ISNULL);
SELECT t0.c0 FROM t0 FULL OUTER JOIN t2 ON ((-208781928)!=(((t2.c0) NOTNULL))) GROUP BY t0.c0;
SELECT SUM((((+ (t2.c0)))LIKE(SQLITE_VERSION()))) FROM t2 ORDER BY ((t2.c0) NOT BETWEEN (t2.c0) AND (t2.c0)) COLLATE RTRIM, t2.c0;
SELECT * FROM t0;
SELECT * FROM t0 WHERE ((t0.c0 IN ()) COLLATE NOCASE) UNION ALL SELECT ALL * FROM t0 WHERE ((NOT ((t0.c0 IN ()) COLLATE NOCASE))) UNION ALL SELECT * FROM t0 WHERE ((((t0.c0 IN ()) COLLATE NOCASE) ISNULL));
SELECT * FROM t0;
SELECT DISTINCT t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0 WHERE (((((((t0.c0) IS TRUE))AND((~ (t0.c0)))))OR(x''))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((NOT (((((((t0.c0) IS TRUE))AND((~ (t0.c0)))))OR(x''))))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE (((((((((t0.c0) IS TRUE))AND((~ (t0.c0)))))OR(x''))) ISNULL));
SELECT DISTINCT t0.c0 FROM t0;
SELECT ALL t0.c0, t2.c0 FROM t2, t0 GROUP BY t0.c0, t2.c0;
SELECT ALL t0.c0, t2.c0 FROM t2, t0 WHERE (CASE (- (t2.c0))  WHEN CASE WHEN t2.c0 THEN t2.c0 END THEN (((t2.c0, t0.c0, t0.c0)) NOT BETWEEN ((t2.c0, t0.c0, t0.c0)) AND ((t2.c0, t2.c0, t0.c0))) ELSE (t0.c0 IN ()) END) GROUP BY t0.c0, t2.c0 UNION SELECT t0.c0, t2.c0 FROM t2, t0 WHERE ((NOT (CASE (- (t2.c0))  WHEN CASE WHEN t2.c0 THEN t2.c0 END THEN (((t2.c0, t0.c0, t0.c0)) NOT BETWEEN ((t2.c0, t0.c0, t0.c0)) AND ((t2.c0, t2.c0, t0.c0))) ELSE (t0.c0 IN ()) END))) GROUP BY t0.c0, t2.c0 UNION SELECT t0.c0, t2.c0 FROM t2, t0 WHERE (((CASE (- (t2.c0))  WHEN CASE WHEN t2.c0 THEN t2.c0 END THEN (((t2.c0, t0.c0, t0.c0)) NOT BETWEEN ((t2.c0, t0.c0, t0.c0)) AND ((t2.c0, t2.c0, t0.c0))) ELSE (t0.c0 IN ()) END) ISNULL)) GROUP BY t0.c0, t2.c0;
SELECT ALL t0.c0, t2.c0 FROM t2, t0 GROUP BY t0.c0, t2.c0;
SELECT ALL t1.c0 FROM t2, t1 GROUP BY t1.c0;
SELECT t1.c0 FROM t2, t1 GROUP BY t1.c0 HAVING COUNT(*) UNION ALL SELECT ALL t1.c0 FROM t2, t1 GROUP BY t1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL t1.c0 FROM t2, t1 GROUP BY t1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL t1.c0 FROM t2, t1 GROUP BY t1.c0;
SELECT t1.c0 FROM t2, t1 GROUP BY t1.c0 HAVING COUNT(*) UNION ALL SELECT ALL t1.c0 FROM t2, t1 GROUP BY t1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL t1.c0 FROM t2, t1 GROUP BY t1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL t1.c0 FROM t2, t1 GROUP BY t1.c0;
SELECT t2.c0 FROM t2;
SELECT t2.c0 FROM t2 WHERE ((NOT (t2.c0)) COLLATE BINARY) UNION ALL SELECT t2.c0 FROM t2 WHERE ((NOT ((NOT (t2.c0)) COLLATE BINARY))) UNION ALL SELECT t2.c0 FROM t2 WHERE ((((NOT (t2.c0)) COLLATE BINARY) ISNULL));
SELECT t2.c0 FROM t2;
SELECT DISTINCT t0.c0 FROM t0 INDEXED BY i28;
SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0;
SELECT t2.c0 FROM t2 WHERE (t2.c0) GROUP BY t2.c0 UNION SELECT ALL t2.c0 FROM t2 WHERE ((NOT (t2.c0))) GROUP BY t2.c0 UNION SELECT t2.c0 FROM t2 WHERE (((t2.c0) ISNULL)) GROUP BY t2.c0;
SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0;
SELECT t0.c0 FROM t2, t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t2, t0 GROUP BY t0.c0 HAVING ((((TOTAL(TOTAL(MAX(MAX(t0.c0))))) NOT BETWEEN (COUNT(*)) AND (MAX(9.7048519E8)))) NOTNULL) UNION ALL SELECT ALL t0.c0 FROM t2, t0 GROUP BY t0.c0 HAVING (NOT (((((TOTAL(TOTAL(MAX(MAX(t0.c0))))) NOT BETWEEN (COUNT(*)) AND (MAX(9.7048519E8)))) NOTNULL))) UNION ALL SELECT t0.c0 FROM t2, t0 GROUP BY t0.c0 HAVING ((((((TOTAL(TOTAL(MAX(MAX(t0.c0))))) NOT BETWEEN (COUNT(*)) AND (MAX(9.7048519E8)))) NOTNULL)) ISNULL);
SELECT ALL MAX((+ (((t2.c0) NOT BETWEEN (t0.c0) AND (t2.c0))))) FROM t0, t2;
SELECT * FROM t1, t0;
SELECT ALL * FROM t1, t0 WHERE (((((((x'3741') NOT BETWEEN (t1.c0) AND (t0.c0)))AND(CAST(t1.c0 AS INTEGER))))AND((+ (t1.c0))))) UNION ALL SELECT * FROM t1, t0 WHERE ((NOT (((((((x'3741') NOT BETWEEN (t1.c0) AND (t0.c0)))AND(CAST(t1.c0 AS INTEGER))))AND((+ (t1.c0))))))) UNION ALL SELECT * FROM t1, t0 WHERE (((((((((x'3741') NOT BETWEEN (t1.c0) AND (t0.c0)))AND(CAST(t1.c0 AS INTEGER))))AND((+ (t1.c0))))) ISNULL));
SELECT * FROM t1, t0;
SELECT DISTINCT t1.c0 FROM t1;
SELECT DISTINCT t1.c0 FROM t1 WHERE ((- (t1.c0 COLLATE BINARY))) UNION SELECT DISTINCT t1.c0 FROM t1 WHERE ((NOT ((- (t1.c0 COLLATE BINARY))))) UNION SELECT DISTINCT t1.c0 FROM t1 WHERE ((((- (t1.c0 COLLATE BINARY))) ISNULL));
SELECT DISTINCT t1.c0 FROM t1;
SELECT ALL t2.c0 FROM t2 INNER JOIN t1 ON (((((t1.c0)AND(0Xffffffff91d2acf5)))AND(t1.c0)) IN ()) LEFT OUTER JOIN t0 ON CAST(0.8380581889029947 AS BLOB) GROUP BY t2.c0;
SELECT ALL t2.c0 FROM t2 INNER JOIN t1 ON (((((t1.c0)AND(0Xffffffff91d2acf5)))AND(t1.c0)) IN ()) LEFT OUTER JOIN t0 ON CAST(0.8380581889029947 AS BLOB) WHERE ((((t1.c0 IN ())) NOT NULL)) GROUP BY t2.c0 UNION SELECT ALL t2.c0 FROM t2 INNER JOIN t1 ON (((((t1.c0)AND(0Xffffffff91d2acf5)))AND(t1.c0)) IN ()) LEFT OUTER JOIN t0 ON CAST(0.8380581889029947 AS BLOB) WHERE ((NOT ((((t1.c0 IN ())) NOT NULL)))) GROUP BY t2.c0 UNION SELECT t2.c0 FROM t2 INNER JOIN t1 ON (((((t1.c0)AND(0xffffffff91d2acf5)))AND(t1.c0)) IN ()) LEFT OUTER JOIN t0 ON CAST(0.8380581889029947 AS BLOB) WHERE ((((((t1.c0 IN ())) NOT NULL)) ISNULL)) GROUP BY t2.c0;
SELECT ALL t2.c0 FROM t2 INNER JOIN t1 ON (((((t1.c0)AND(0Xffffffff91d2acf5)))AND(t1.c0)) IN ()) LEFT OUTER JOIN t0 ON CAST(0.8380581889029947 AS BLOB) GROUP BY t2.c0;
SELECT t0.c0, t2.c0, t1.c0 FROM t1 CROSS JOIN t2 ON CASE ((((t1.c0)OR(t2.c0)))AND(t1.c0))  WHEN CASE WHEN t1.c0 THEN t0.c0 WHEN t0.c0 THEN t2.c0 WHEN t0.c0 THEN t2.c0 ELSE t1.c0 END THEN t1.c0 COLLATE RTRIM WHEN TYPEOF(t0.c0) THEN ((t2.c0)LIKE(t1.c0)) WHEN ((t1.c0) BETWEEN (t0.c0) AND (t2.c0)) THEN (t2.c0 IN ()) ELSE t1.c0 END RIGHT OUTER JOIN t0 ON (((CASE t2.c0  WHEN '1967141133' THEN t0.c0 WHEN t0.c0 THEN t2.c0 WHEN t0.c0 THEN t0.c0 ELSE t2.c0 END))>=((((t0.c0)||(''))))) GROUP BY t0.c0, t2.c0, t1.c0;
SELECT ALL t0.c0 FROM t0, t1;
SELECT ALL t0.c0 FROM t0, t1 WHERE (t0.c0) UNION ALL SELECT ALL t0.c0 FROM t0, t1 WHERE ((NOT (t0.c0))) UNION ALL SELECT t0.c0 FROM t0, t1 WHERE (((t0.c0) ISNULL));
SELECT ALL t0.c0 FROM t0, t1;
SELECT DISTINCT * FROM t1 CROSS JOIN t0 ON 73351881;
SELECT DISTINCT * FROM t1 CROSS JOIN t0 ON 73351881 WHERE (t0.c0) UNION SELECT DISTINCT * FROM t1 CROSS JOIN t0 ON 73351881 WHERE ((NOT (t0.c0))) UNION SELECT DISTINCT * FROM t1 CROSS JOIN t0 ON 73351881 WHERE (((t0.c0) ISNULL));
SELECT DISTINCT * FROM t1 CROSS JOIN t0 ON 73351881;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE (CASE t0.c0  WHEN t0.c0 COLLATE RTRIM THEN ((t0.c0)<=(t0.c0)) WHEN ((t0.c0)==(t0.c0)) THEN ((t0.c0)IS(t0.c0)) WHEN ((t0.c0) NOT NULL) THEN ((t0.c0) NOTNULL) END) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT (CASE t0.c0  WHEN t0.c0 COLLATE RTRIM THEN ((t0.c0)<=(t0.c0)) WHEN ((t0.c0)==(t0.c0)) THEN ((t0.c0)IS(t0.c0)) WHEN ((t0.c0) NOT NULL) THEN ((t0.c0) NOTNULL) END))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE (((CASE t0.c0  WHEN t0.c0 COLLATE RTRIM THEN ((t0.c0)<=(t0.c0)) WHEN ((t0.c0)==(t0.c0)) THEN ((t0.c0)IS(t0.c0)) WHEN ((t0.c0) NOT NULL) THEN ((t0.c0) NOTNULL) END) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t2.c0, t1.c0 FROM t0, t1 NATURAL JOIN t2 GROUP BY t2.c0, t1.c0;
SELECT ALL t2.c0, t1.c0 FROM t0, t1 NATURAL JOIN t2 GROUP BY t2.c0, t1.c0 HAVING MAX(((((((((MAX(t1.c0))OR(AVG(COUNT(*)))))AND(t0.c0)))OR(SUM(AVG(COUNT(MAX(NULL)))))))OR(GROUP_CONCAT(TOTAL(t1.c0))))) UNION ALL SELECT ALL t2.c0, t1.c0 FROM t0, t1 NATURAL JOIN t2 GROUP BY t2.c0, t1.c0 HAVING (NOT (MAX(((((((((MAX(t1.c0))OR(AVG(COUNT(*)))))AND(t0.c0)))OR(SUM(AVG(COUNT(MAX(NULL)))))))OR(GROUP_CONCAT(TOTAL(t1.c0))))))) UNION ALL SELECT t2.c0, t1.c0 FROM t0, t1 NATURAL JOIN t2 GROUP BY t2.c0, t1.c0 HAVING ((MAX(((((((((MAX(t1.c0))OR(AVG(COUNT(*)))))AND(t0.c0)))OR(SUM(AVG(COUNT(MAX(NULL)))))))OR(GROUP_CONCAT(TOTAL(t1.c0)))))) ISNULL);
SELECT * FROM t1;
SELECT ALL * FROM t1 WHERE ((((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)) IN ())) UNION ALL SELECT * FROM t1 WHERE ((NOT ((((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)) IN ())))) UNION ALL SELECT ALL * FROM t1 WHERE ((((((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0)) IN ())) ISNULL));
SELECT * FROM t1;
SELECT DISTINCT t2.c0, t0.c0 FROM t2 INDEXED BY i28, t0;
SELECT ALL t1.c0 FROM t0, t1 GROUP BY t1.c0;
SELECT t1.c0 FROM t0, t1 WHERE ((+ (t0.c0 COLLATE RTRIM))) GROUP BY t1.c0 UNION SELECT ALL t1.c0 FROM t0, t1 WHERE ((NOT ((+ (t0.c0 COLLATE RTRIM))))) GROUP BY t1.c0 UNION SELECT ALL t1.c0 FROM t0, t1 NOT INDEXED WHERE ((((+ (t0.c0 COLLATE RTRIM))) ISNULL)) GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t0, t1 GROUP BY t1.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING CASE WHEN ((MAX(t0.c0)) NOTNULL) THEN COUNT(AVG(t0.c0)) ELSE ((AVG(MAX(TOTAL(SUM(t0.c0)))))OR(GROUP_CONCAT(NULL))) END UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (CASE WHEN ((MAX(t0.c0)) NOTNULL) THEN COUNT(AVG(t0.c0)) ELSE ((AVG(MAX(TOTAL(SUM(t0.c0)))))OR(GROUP_CONCAT(NULL))) END)) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((CASE WHEN ((MAX(t0.c0)) NOTNULL) THEN COUNT(AVG(t0.c0)) ELSE ((AVG(MAX(TOTAL(SUM(t0.c0)))))OR(GROUP_CONCAT(NULL))) END) ISNULL);
SELECT t2.c0 FROM t1, t2;
SELECT t2.c0 FROM t1, t2 WHERE ((((t1.c0 IN ())) NOT NULL)) UNION ALL SELECT t2.c0 FROM t1, t2 WHERE ((NOT ((((t1.c0 IN ())) NOT NULL)))) UNION ALL SELECT t2.c0 FROM t1, t2 WHERE ((((((t1.c0 IN ())) NOT NULL)) ISNULL));
SELECT t2.c0 FROM t1, t2;
SELECT DISTINCT * FROM t0, t2, t1;
SELECT DISTINCT * FROM t0, t2, t1 WHERE (((~ (t1.c0)) IN ())) UNION SELECT DISTINCT * FROM t0, t2, t1 WHERE ((NOT (((~ (t1.c0)) IN ())))) UNION SELECT DISTINCT * FROM t0, t2, t1 WHERE (((((~ (t1.c0)) IN ())) ISNULL));
SELECT DISTINCT * FROM t0, t2, t1;
SELECT t0.c0, t1.c0, t2.c0 FROM t2, t0 INDEXED BY i28, t1 GROUP BY t0.c0, t1.c0, t2.c0;
SELECT t1.c0, t0.c0 FROM t1, t2, t0 GROUP BY t1.c0, t0.c0;
SELECT t1.c0, t0.c0 FROM t1, t2 NOT INDEXED, t0 GROUP BY t1.c0, t0.c0 HAVING '#Bqyq' UNION ALL SELECT ALL t1.c0, t0.c0 FROM t1, t2, t0 GROUP BY t1.c0, t0.c0 HAVING (NOT ('#Bqyq')) UNION ALL SELECT ALL t1.c0, t0.c0 FROM t1, t2, t0 GROUP BY t1.c0, t0.c0 HAVING (('#Bqyq') ISNULL);
SELECT t1.c0, t0.c0 FROM t1, t2, t0 GROUP BY t1.c0, t0.c0;
SELECT t1.c0, t0.c0 FROM t1, t2 NOT INDEXED, t0 GROUP BY t1.c0, t0.c0 HAVING '#Bqyq' UNION ALL SELECT ALL t1.c0, t0.c0 FROM t1, t2, t0 GROUP BY t1.c0, t0.c0 HAVING (NOT ('#Bqyq')) UNION ALL SELECT ALL t1.c0, t0.c0 FROM t1, t2, t0 GROUP BY t1.c0, t0.c0 HAVING (('#Bqyq') ISNULL);
SELECT t1.c0, t0.c0 FROM t1, t2, t0 GROUP BY t1.c0, t0.c0;
SELECT ALL t2.c0 FROM t1, t2;
SELECT t2.c0 FROM t1, t2 WHERE ((((- (t2.c0)))IS NOT(0x3954b044))) UNION ALL SELECT t2.c0 FROM t1, t2 WHERE ((NOT ((((- (t2.c0)))IS NOT(0x3954b044))))) UNION ALL SELECT ALL t2.c0 FROM t1, t2 WHERE ((((((- (t2.c0)))IS NOT(0X3954b044))) ISNULL));
SELECT ALL t2.c0 FROM t1, t2;
SELECT DISTINCT * FROM t0 NATURAL JOIN t2;
SELECT DISTINCT * FROM t0 NATURAL JOIN t2 WHERE (t0.c0) UNION SELECT DISTINCT * FROM t0 NATURAL JOIN t2 WHERE ((NOT (t0.c0))) UNION SELECT DISTINCT * FROM t0 NATURAL JOIN t2 WHERE (((t0.c0) ISNULL));
SELECT DISTINCT * FROM t0 NATURAL JOIN t2;
SELECT t1.c0 FROM t1, t0 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1, t0 WHERE ((((~ (t1.c0)))IS(t0.c0 COLLATE RTRIM))) GROUP BY t1.c0 UNION SELECT t1.c0 FROM t1, t0 WHERE ((NOT ((((~ (t1.c0)))IS(t0.c0 COLLATE RTRIM))))) GROUP BY t1.c0 UNION SELECT t1.c0 FROM t1, t0 WHERE ((((((~ (t1.c0)))IS(t0.c0 COLLATE RTRIM))) ISNULL)) GROUP BY t1.c0;
SELECT t1.c0 FROM t1, t0 GROUP BY t1.c0;
SELECT t2.c0 FROM t2 GROUP BY t2.c0;
SELECT t2.c0 FROM t2 GROUP BY t2.c0 HAVING MAX(COUNT(SUM(MAX(AVG(GROUP_CONCAT(t2.c0))))), ((MAX(SUM(TOTAL(t2.c0)))) NOT BETWEEN (t2.c0) AND (TOTAL(t2.c0))), (~ (TOTAL(t2.c0))), SUM(COUNT(*))) UNION ALL SELECT t2.c0 FROM t2 GROUP BY t2.c0 HAVING (NOT (MAX(COUNT(SUM(MAX(AVG(GROUP_CONCAT(t2.c0))))), ((MAX(SUM(TOTAL(t2.c0)))) NOT BETWEEN (t2.c0) AND (TOTAL(t2.c0))), (~ (TOTAL(t2.c0))), SUM(COUNT(*))))) UNION ALL SELECT t2.c0 FROM t2 GROUP BY t2.c0 HAVING ((MAX(COUNT(SUM(MAX(AVG(GROUP_CONCAT(t2.c0))))), ((MAX(SUM(TOTAL(t2.c0)))) NOT BETWEEN (t2.c0) AND (TOTAL(t2.c0))), (~ (TOTAL(t2.c0))), SUM(COUNT(*)))) ISNULL);
SELECT * FROM t0 FULL OUTER JOIN t2 ON (((((((((+ (t0.c0)))OR((((t2.c0, t0.c0, t2.c0))<>((t2.c0, t2.c0, t2.c0))))))OR(((t0.c0)>=(t0.c0)))))OR(((t2.c0)>=(t0.c0)))))OR(CASE WHEN t2.c0 THEN t2.c0 ELSE t0.c0 END));
SELECT * FROM t0 FULL OUTER JOIN t2 ON (((((((((+ (t0.c0)))OR((((t2.c0, t0.c0, t2.c0))<>((t2.c0, t2.c0, t2.c0))))))OR(((t0.c0)>=(t0.c0)))))OR(((t2.c0)>=(t0.c0)))))OR(CASE WHEN t2.c0 THEN t2.c0 ELSE t0.c0 END)) WHERE (((t0.c0 COLLATE BINARY) IS TRUE)) UNION ALL SELECT ALL * FROM t0 FULL OUTER JOIN t2 ON (((((((((+ (t0.c0)))OR((((t2.c0, t0.c0, t2.c0))<>((t2.c0, t2.c0, t2.c0))))))OR(((t0.c0)>=(t0.c0)))))OR(((t2.c0)>=(t0.c0)))))OR(CASE WHEN t2.c0 THEN t2.c0 ELSE t0.c0 END)) WHERE ((NOT (((t0.c0 COLLATE BINARY) IS TRUE)))) UNION ALL SELECT ALL * FROM t0 FULL OUTER JOIN t2 ON (((((((((+ (t0.c0)))OR((((t2.c0, t0.c0, t2.c0))!=((t2.c0, t2.c0, t2.c0))))))OR(((t0.c0)>=(t0.c0)))))OR(((t2.c0)>=(t0.c0)))))OR(CASE WHEN t2.c0 THEN t2.c0 ELSE t0.c0 END)) WHERE (((((t0.c0 COLLATE BINARY) IS TRUE)) ISNULL));
SELECT * FROM t0 FULL OUTER JOIN t2 ON (((((((((+ (t0.c0)))OR((((t2.c0, t0.c0, t2.c0))<>((t2.c0, t2.c0, t2.c0))))))OR(((t0.c0)>=(t0.c0)))))OR(((t2.c0)>=(t0.c0)))))OR(CASE WHEN t2.c0 THEN t2.c0 ELSE t0.c0 END));
SELECT DISTINCT t1.c0, t2.c0 FROM t1, t0, t2;
SELECT DISTINCT t1.c0, t2.c0 FROM t1, t0, t2 WHERE ((t1.c0 COLLATE NOCASE IN ())) UNION SELECT DISTINCT t1.c0, t2.c0 FROM t1, t0, t2 WHERE ((NOT ((t1.c0 COLLATE NOCASE IN ())))) UNION SELECT DISTINCT t1.c0, t2.c0 FROM t1 NOT INDEXED, t0, t2 WHERE ((((t1.c0 COLLATE NOCASE IN ())) ISNULL));
SELECT DISTINCT t1.c0, t2.c0 FROM t1, t0, t2;
SELECT ALL t1.c0 FROM t1, t0 GROUP BY t1.c0;
SELECT t1.c0 FROM t1, t0 WHERE (CASE CAST(t0.c0 AS TEXT)  WHEN ((x'75f9')<=(0.2696166597552936)) THEN (t1.c0 IN (t1.c0, t1.c0)) END) GROUP BY t1.c0 UNION SELECT t1.c0 FROM t1, t0 WHERE ((NOT (CASE CAST(t0.c0 AS TEXT)  WHEN ((x'75f9')<=(0.2696166597552936)) THEN (t1.c0 IN (t1.c0, t1.c0)) END))) GROUP BY t1.c0 UNION SELECT ALL t1.c0 FROM t1, t0 WHERE (((CASE CAST(t0.c0 AS TEXT)  WHEN ((x'75f9')<=(0.2696166597552936)) THEN (t1.c0 IN (t1.c0, t1.c0)) END) ISNULL)) GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1, t0 GROUP BY t1.c0;
SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0;
SELECT t2.c0 FROM t2 GROUP BY t2.c0 HAVING CASE MIN(MIN(t2.c0))  WHEN ((((t2.c0)OR(COUNT(MIN(t2.c0)))))OR(MIN(TOTAL(t2.c0)))) THEN (((TOTAL(SUM(MIN(t2.c0))))) NOT BETWEEN ((MAX(SUM(t2.c0)))) AND ((t2.c0))) ELSE CASE GROUP_CONCAT(GROUP_CONCAT(AVG(TOTAL(COUNT(t2.c0)))))  WHEN t2.c0 THEN t2.c0 WHEN 'o렁' THEN AVG(COUNT(*)) WHEN t2.c0 THEN t2.c0 WHEN TOTAL(SUM(COUNT(t2.c0))) THEN SUM(MIN(t2.c0)) WHEN t2.c0 THEN COUNT(*) END END UNION ALL SELECT t2.c0 FROM t2 GROUP BY t2.c0 HAVING (NOT (CASE MIN(MIN(t2.c0))  WHEN ((((t2.c0)OR(COUNT(MIN(t2.c0)))))OR(MIN(TOTAL(t2.c0)))) THEN (((TOTAL(SUM(MIN(t2.c0))))) NOT BETWEEN ((MAX(SUM(t2.c0)))) AND ((t2.c0))) ELSE CASE GROUP_CONCAT(GROUP_CONCAT(AVG(TOTAL(COUNT(t2.c0)))))  WHEN t2.c0 THEN t2.c0 WHEN 'o렁' THEN AVG(COUNT(*)) WHEN t2.c0 THEN t2.c0 WHEN TOTAL(SUM(COUNT(t2.c0))) THEN SUM(MIN(t2.c0)) WHEN t2.c0 THEN COUNT(*) END END)) UNION ALL SELECT t2.c0 FROM t2 GROUP BY t2.c0 HAVING ((CASE MIN(MIN(t2.c0))  WHEN ((((t2.c0)OR(COUNT(MIN(t2.c0)))))OR(MIN(TOTAL(t2.c0)))) THEN (((TOTAL(SUM(MIN(t2.c0))))) NOT BETWEEN ((MAX(SUM(t2.c0)))) AND ((t2.c0))) ELSE CASE GROUP_CONCAT(GROUP_CONCAT(AVG(TOTAL(COUNT(t2.c0)))))  WHEN t2.c0 THEN t2.c0 WHEN 'o렁' THEN AVG(COUNT(*)) WHEN t2.c0 THEN t2.c0 WHEN TOTAL(SUM(COUNT(t2.c0))) THEN SUM(MIN(t2.c0)) WHEN t2.c0 THEN COUNT(*) END END) ISNULL);
SELECT ALL t1.c0, t0.c0 FROM t1, t0;
SELECT ALL t1.c0, t0.c0 FROM t1, t0 WHERE (((((t0.c0)<=(t0.c0)))|(((t0.c0) NOTNULL)))) UNION ALL SELECT t1.c0, t0.c0 FROM t1, t0 WHERE ((NOT (((((t0.c0)<=(t0.c0)))|(((t0.c0) NOTNULL)))))) UNION ALL SELECT ALL t1.c0, t0.c0 FROM t1, t0 WHERE (((((((t0.c0)<=(t0.c0)))|(((t0.c0) NOTNULL)))) ISNULL));
SELECT ALL t1.c0, t0.c0 FROM t1, t0;
SELECT DISTINCT t1.c0 FROM t1, t2;
SELECT DISTINCT t1.c0 FROM t1, t2 WHERE (((t1.c0) BETWEEN (((((((((t1.c0)AND(t1.c0)))AND(x'')))OR(t2.c0)))OR(t2.c0))) AND (json_array(t1.c0, x'fbb7', t2.c0, t2.c0)))) UNION SELECT DISTINCT t1.c0 FROM t1, t2 WHERE ((NOT (((t1.c0) BETWEEN (((((((((t1.c0)AND(t1.c0)))AND(x'')))OR(t2.c0)))OR(t2.c0))) AND (json_array(t1.c0, x'fbb7', t2.c0, t2.c0)))))) UNION SELECT DISTINCT t1.c0 FROM t1, t2 WHERE (((((t1.c0) BETWEEN (((((((((t1.c0)AND(t1.c0)))AND(x'')))OR(t2.c0)))OR(t2.c0))) AND (json_array(t1.c0, x'fbb7', t2.c0, t2.c0)))) ISNULL));
SELECT DISTINCT t1.c0 FROM t1, t2;
SELECT t1.c0 FROM t1, t0 GROUP BY t1.c0;
SELECT t1.c0 FROM t1, t0 WHERE (ABS(((t0.c0)LIKE(t0.c0)))) GROUP BY t1.c0 UNION SELECT t1.c0 FROM t1, t0 WHERE ((NOT (ABS(((t0.c0)LIKE(t0.c0)))))) GROUP BY t1.c0 UNION SELECT ALL t1.c0 FROM t1, t0 WHERE (((ABS(((t0.c0)LIKE(t0.c0)))) ISNULL)) GROUP BY t1.c0;
SELECT t1.c0 FROM t1, t0 GROUP BY t1.c0;
SELECT ALL t0.c0 FROM t0, t1 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0, t1 GROUP BY t0.c0 HAVING COUNT(((('B.0'))>=((MIN('볗Z'))))) UNION ALL SELECT t0.c0 FROM t0, t1 GROUP BY t0.c0 HAVING (NOT (COUNT(((('B.0'))>=((MIN('볗Z'))))))) UNION ALL SELECT t0.c0 FROM t0, t1 GROUP BY t0.c0 HAVING ((COUNT(((('B.0'))>=((MIN('볗Z')))))) ISNULL);
SELECT ALL * FROM t1, t0;
SELECT * FROM t1, t0 WHERE (ABS(CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t1.c0 END)) ORDER BY (((t1.c0)) BETWEEN ((CAST(t0.c0 AS NUMERIC))) AND ((((((t0.c0)OR(t1.c0)))OR(t1.c0)))));
SELECT ALL * FROM t1, t0 WHERE ((NOT (ABS(CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t1.c0 END)))) ORDER BY (((t1.c0)) BETWEEN ((CAST(t0.c0 AS NUMERIC))) AND ((((((t0.c0)OR(t1.c0)))OR(t1.c0)))));
SELECT * FROM t1, t0 WHERE (((ABS(CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t1.c0 END)) ISNULL)) ORDER BY (((t1.c0)) BETWEEN ((CAST(t0.c0 AS NUMERIC))) AND ((((((t0.c0)OR(t1.c0)))OR(t1.c0)))));
SELECT ALL * FROM t1, t0;
SELECT DISTINCT * FROM t0, t2;
SELECT DISTINCT * FROM t0, t2 WHERE (((x'2a3e') IS FALSE)) UNION SELECT DISTINCT * FROM t0, t2 WHERE ((NOT (((x'2a3e') IS FALSE)))) UNION SELECT DISTINCT * FROM t0, t2 WHERE (((((x'2a3e') IS FALSE)) ISNULL));
SELECT DISTINCT * FROM t0, t2;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE (((((t0.c0)OR(((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))AND('2028027556')))OR(t0.c0)))))OR((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0)))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT (((((t0.c0)OR(((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))AND('2028027556')))OR(t0.c0)))))OR((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0)))))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE (((((((t0.c0)OR(((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))AND('2028027556')))OR(t0.c0)))))OR((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0)))))) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t2.c0 FROM t2 GROUP BY t2.c0;
SELECT t2.c0 FROM t2 GROUP BY t2.c0 HAVING ((t2.c0 COLLATE BINARY)|(IFNULL(DISTINCT MAX(GROUP_CONCAT(t2.c0)), SUM(MAX(MIN(t2.c0)))))) UNION ALL SELECT t2.c0 FROM t2 GROUP BY t2.c0 HAVING (NOT (((t2.c0 COLLATE BINARY)|(IFNULL(DISTINCT MAX(GROUP_CONCAT(t2.c0)), SUM(MAX(MIN(t2.c0)))))))) UNION ALL SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0 HAVING ((((t2.c0 COLLATE BINARY)|(IFNULL(DISTINCT MAX(GROUP_CONCAT(t2.c0)), SUM(MAX(MIN(t2.c0))))))) ISNULL);
SELECT ALL TOTAL(NULL COLLATE BINARY) FROM t1;
SELECT t0.c0 FROM t0, t1;
SELECT ALL t0.c0 FROM t0, t1 WHERE ((((((t1.c0, t0.c0, t0.c0)) NOT BETWEEN ((t1.c0, t1.c0, t1.c0)) AND ((t1.c0, t0.c0, t1.c0))))IS((t0.c0 IN ())))) UNION ALL SELECT ALL t0.c0 FROM t0, t1 WHERE ((NOT ((((((t1.c0, t0.c0, t0.c0)) NOT BETWEEN ((t1.c0, t1.c0, t1.c0)) AND ((t1.c0, t0.c0, t1.c0))))IS((t0.c0 IN ())))))) UNION ALL SELECT t0.c0 FROM t0, t1 WHERE ((((((((t1.c0, t0.c0, t0.c0)) NOT BETWEEN ((t1.c0, t1.c0, t1.c0)) AND ((t1.c0, t0.c0, t1.c0))))IS((t0.c0 IN ())))) ISNULL));
SELECT t0.c0 FROM t0, t1;
SELECT DISTINCT t0.c0, t1.c0 FROM t0, t1;
SELECT DISTINCT t0.c0, t1.c0 FROM t0, t1 WHERE (CASE WHEN CAST(t1.c0 AS REAL) THEN (((x'')) NOT BETWEEN ((t0.c0)) AND ((t1.c0))) WHEN ((t1.c0)<=(t0.c0)) THEN ((t1.c0) BETWEEN (t0.c0) AND (t0.c0)) WHEN (x'' IN (t0.c0, t0.c0)) THEN (((t1.c0))>((t1.c0))) END) UNION SELECT DISTINCT t0.c0, t1.c0 FROM t0, t1 WHERE ((NOT (CASE WHEN CAST(t1.c0 AS REAL) THEN (((x'')) NOT BETWEEN ((t0.c0)) AND ((t1.c0))) WHEN ((t1.c0)<=(t0.c0)) THEN ((t1.c0) BETWEEN (t0.c0) AND (t0.c0)) WHEN (x'' IN (t0.c0, t0.c0)) THEN (((t1.c0))>((t1.c0))) END))) UNION SELECT DISTINCT t0.c0, t1.c0 FROM t0, t1 WHERE (((CASE WHEN CAST(t1.c0 AS REAL) THEN (((x'')) NOT BETWEEN ((t0.c0)) AND ((t1.c0))) WHEN ((t1.c0)<=(t0.c0)) THEN ((t1.c0) BETWEEN (t0.c0) AND (t0.c0)) WHEN (x'' IN (t0.c0, t0.c0)) THEN (((t1.c0))>((t1.c0))) END) ISNULL));
SELECT DISTINCT t0.c0, t1.c0 FROM t0, t1;
SELECT t2.c0 FROM t2 GROUP BY t2.c0;
SELECT ALL t2.c0 FROM t2 WHERE (((((t2.c0)OR(t2.c0)))OR(t2.c0)) COLLATE NOCASE) GROUP BY t2.c0 UNION SELECT ALL t2.c0 FROM t2 WHERE ((NOT (((((t2.c0)OR(t2.c0)))OR(t2.c0)) COLLATE NOCASE))) GROUP BY t2.c0 UNION SELECT t2.c0 FROM t2 WHERE (((((((t2.c0)OR(t2.c0)))OR(t2.c0)) COLLATE NOCASE) ISNULL)) GROUP BY t2.c0;
SELECT t2.c0 FROM t2 GROUP BY t2.c0;
SELECT t2.c0 FROM t2 GROUP BY t2.c0;
SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0 HAVING (((- (COUNT(t2.c0)))) BETWEEN ((t2.c0 IN ())) AND (COUNT(*))) UNION ALL SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0 HAVING (NOT ((((- (COUNT(t2.c0)))) BETWEEN ((t2.c0 IN ())) AND (COUNT(*))))) UNION ALL SELECT t2.c0 FROM t2 GROUP BY t2.c0 HAVING (((((- (COUNT(t2.c0)))) BETWEEN ((t2.c0 IN ())) AND (COUNT(*)))) ISNULL);
SELECT t2.c0 FROM t2 GROUP BY t2.c0;
SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0 HAVING (((- (COUNT(t2.c0)))) BETWEEN ((t2.c0 IN ())) AND (COUNT(*))) UNION ALL SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0 HAVING (NOT ((((- (COUNT(t2.c0)))) BETWEEN ((t2.c0 IN ())) AND (COUNT(*))))) UNION ALL SELECT t2.c0 FROM t2 GROUP BY t2.c0 HAVING (((((- (COUNT(t2.c0)))) BETWEEN ((t2.c0 IN ())) AND (COUNT(*)))) ISNULL);
SELECT t2.c0 FROM t2 GROUP BY t2.c0;
SELECT ALL * FROM t2, t0;
SELECT ALL * FROM t2, t0 WHERE (CASE CASE t0.c0  WHEN t0.c0 THEN t2.c0 ELSE t0.c0 END  WHEN ((t2.c0) NOT BETWEEN (t2.c0) AND (t2.c0)) THEN (t0.c0 IN (t2.c0, t0.c0)) ELSE ((t0.c0) BETWEEN (t0.c0) AND ('-1054335923')) END) UNION ALL SELECT * FROM t2, t0 WHERE ((NOT (CASE CASE t0.c0  WHEN t0.c0 THEN t2.c0 ELSE t0.c0 END  WHEN ((t2.c0) NOT BETWEEN (t2.c0) AND (t2.c0)) THEN (t0.c0 IN (t2.c0, t0.c0)) ELSE ((t0.c0) BETWEEN (t0.c0) AND ('-1054335923')) END))) UNION ALL SELECT * FROM t2, t0 WHERE (((CASE CASE t0.c0  WHEN t0.c0 THEN t2.c0 ELSE t0.c0 END  WHEN ((t2.c0) NOT BETWEEN (t2.c0) AND (t2.c0)) THEN (t0.c0 IN (t2.c0, t0.c0)) ELSE ((t0.c0) BETWEEN (t0.c0) AND ('-1054335923')) END) ISNULL));
SELECT ALL * FROM t2, t0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (json(((t0.c0) IS TRUE))) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (json(((t0.c0) IS TRUE))))) UNION SELECT DISTINCT * FROM t0 WHERE (((json(((t0.c0) IS TRUE))) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT t2.c0 FROM t2 INNER JOIN t0 ON (NULL IN (t2.c0)) COLLATE BINARY GROUP BY t2.c0;
SELECT t2.c0 FROM t2 INNER JOIN t0 ON (NULL IN (t2.c0)) COLLATE BINARY WHERE (NULL) GROUP BY t2.c0 UNION SELECT ALL t2.c0 FROM t2 INNER JOIN t0 ON (NULL IN (t2.c0)) COLLATE BINARY WHERE ((NOT (NULL))) GROUP BY t2.c0 UNION SELECT t2.c0 FROM t2 INNER JOIN t0 ON (NULL IN (t2.c0)) COLLATE BINARY WHERE (((NULL) ISNULL)) GROUP BY t2.c0;
SELECT t2.c0 FROM t2 INNER JOIN t0 ON (NULL IN (t2.c0)) COLLATE BINARY GROUP BY t2.c0;
SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0;
SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0 HAVING MAX(CAST(t2.c0 AS REAL)) UNION ALL SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0 HAVING (NOT (MAX(CAST(t2.c0 AS REAL)))) UNION ALL SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0 HAVING ((MAX(CAST(t2.c0 AS REAL))) ISNULL);
SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0;
SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0 HAVING MAX(CAST(t2.c0 AS REAL)) UNION ALL SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0 HAVING (NOT (MAX(CAST(t2.c0 AS REAL)))) UNION ALL SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0 HAVING ((MAX(CAST(t2.c0 AS REAL))) ISNULL);
SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0;
SELECT ALL t1.c0 FROM t1;
SELECT t1.c0 FROM t1 WHERE ((NOT ((((t1.c0)) BETWEEN ((t1.c0)) AND (('3ro')))))) UNION ALL SELECT ALL t1.c0 FROM t1 WHERE ((NOT ((NOT ((((t1.c0)) BETWEEN ((t1.c0)) AND (('3ro')))))))) UNION ALL SELECT t1.c0 FROM t1 WHERE ((((NOT ((((t1.c0)) BETWEEN ((t1.c0)) AND (('3ro')))))) ISNULL));
SELECT ALL t1.c0 FROM t1;
SELECT DISTINCT * FROM t1, t0 FULL OUTER JOIN t2 ON ((((DATETIME(t2.c0, t0.c0, t1.c0))OR(((t2.c0)IS(t0.c0)))))OR(((t2.c0) IS TRUE)));
SELECT DISTINCT * FROM t1, t0 FULL OUTER JOIN t2 ON ((((DATETIME(t2.c0, t0.c0, t1.c0))OR(((t2.c0)IS(t0.c0)))))OR(((t2.c0) IS TRUE))) WHERE ((((~ (t0.c0))) BETWEEN ('') AND (0.9853091218719036))) UNION SELECT DISTINCT * FROM t1, t0 FULL OUTER JOIN t2 ON ((((DATETIME(t2.c0, t0.c0, t1.c0))OR(((t2.c0)IS(t0.c0)))))OR(((t2.c0) IS TRUE))) WHERE ((NOT ((((~ (t0.c0))) BETWEEN ('') AND (0.9853091218719036))))) UNION SELECT DISTINCT * FROM t1, t0 FULL OUTER JOIN t2 ON ((((DATETIME(t2.c0, t0.c0, t1.c0))OR(((t2.c0)IS(t0.c0)))))OR(((t2.c0) IS TRUE))) WHERE ((((((~ (t0.c0))) BETWEEN ('') AND (0.9853091218719036))) ISNULL));
SELECT DISTINCT * FROM t1, t0 FULL OUTER JOIN t2 ON ((((DATETIME(t2.c0, t0.c0, t1.c0))OR(((t2.c0)IS(t0.c0)))))OR(((t2.c0) IS TRUE)));
SELECT t0.c0 FROM t0, t1 GROUP BY t0.c0;
SELECT t0.c0 FROM t0, t1 WHERE (CASE t1.c0  WHEN UNLIKELY(DISTINCT t1.c0) THEN IFNULL(NULL, t0.c0) END) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0, t1 WHERE ((NOT (CASE t1.c0  WHEN UNLIKELY(DISTINCT t1.c0) THEN IFNULL(NULL, t0.c0) END))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0, t1 WHERE (((CASE t1.c0  WHEN UNLIKELY(DISTINCT t1.c0) THEN IFNULL(NULL, t0.c0) END) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0, t1 GROUP BY t0.c0;
SELECT ALL t2.c0 FROM t1, t0, t2 GROUP BY t2.c0;
SELECT ALL t2.c0 FROM t1, t0, t2 GROUP BY t2.c0 HAVING (((TRIM(DISTINCT t0.c0, ''), MAX(t0.c0), AVG(t0.c0)))<=((((TOTAL(MAX(MIN(COUNT(t1.c0))))) BETWEEN (SUM(GROUP_CONCAT(t1.c0))) AND (MIN(x'f4eb'))), COUNT(AVG(COUNT(*))), GROUP_CONCAT(t0.c0)))) UNION ALL SELECT ALL t2.c0 FROM t1, t0, t2 GROUP BY t2.c0 HAVING (NOT ((((TRIM(DISTINCT t0.c0, ''), MAX(t0.c0), AVG(t0.c0)))<=((((TOTAL(MAX(MIN(COUNT(t1.c0))))) BETWEEN (SUM(GROUP_CONCAT(t1.c0))) AND (MIN(x'f4eb'))), COUNT(AVG(COUNT(*))), GROUP_CONCAT(t0.c0)))))) UNION ALL SELECT t2.c0 FROM t1, t0, t2 GROUP BY t2.c0 HAVING (((((TRIM(DISTINCT t0.c0, ''), MAX(t0.c0), AVG(t0.c0)))<=((((TOTAL(MAX(MIN(COUNT(t1.c0))))) BETWEEN (SUM(GROUP_CONCAT(t1.c0))) AND (MIN(x'f4eb'))), COUNT(AVG(COUNT(*))), GROUP_CONCAT(t0.c0))))) ISNULL);
SELECT * FROM t2 RIGHT OUTER JOIN t0 ON ((((((t1.c0))>=(('飉!1Q')))))<=((CASE WHEN t2.c0 THEN t1.c0 END))) CROSS JOIN t1 ON (+ ((t0.c0 IN (t1.c0, NULL))));
SELECT DISTINCT * FROM t0, t1, t2;
SELECT DISTINCT * FROM t0, t1, t2 WHERE ((((t0.c0, t2.c0, t1.c0)) NOT BETWEEN ((CAST(t2.c0 AS REAL), (t2.c0 IN ()), ((t1.c0)<=('1974499940')))) AND (((- (t2.c0)), ((((((((t1.c0)OR(t2.c0)))AND(t0.c0)))AND(t0.c0)))OR(t1.c0)), ((t2.c0) NOT BETWEEN (t2.c0) AND (t0.c0)))))) UNION SELECT DISTINCT * FROM t0, t1, t2 WHERE ((NOT ((((t0.c0, t2.c0, t1.c0)) NOT BETWEEN ((CAST(t2.c0 AS REAL), (t2.c0 IN ()), ((t1.c0)<=('1974499940')))) AND (((- (t2.c0)), ((((((((t1.c0)OR(t2.c0)))AND(t0.c0)))AND(t0.c0)))OR(t1.c0)), ((t2.c0) NOT BETWEEN (t2.c0) AND (t0.c0)))))))) UNION SELECT DISTINCT * FROM t0, t1, t2 WHERE ((((((t0.c0, t2.c0, t1.c0)) NOT BETWEEN ((CAST(t2.c0 AS REAL), (t2.c0 IN ()), ((t1.c0)<=('1974499940')))) AND (((- (t2.c0)), ((((((((t1.c0)OR(t2.c0)))AND(t0.c0)))AND(t0.c0)))OR(t1.c0)), ((t2.c0) NOT BETWEEN (t2.c0) AND (t0.c0)))))) ISNULL));
SELECT DISTINCT * FROM t0, t1, t2;
SELECT t1.c0, t2.c0 FROM t2, t1 GROUP BY t1.c0, t2.c0;
SELECT t1.c0, t2.c0 FROM t2, t1 WHERE (DATETIME(((t1.c0)!=(t1.c0)), (((t2.c0, t1.c0, t1.c0, t2.c0, NULL)) NOT BETWEEN ((t1.c0, t2.c0, t1.c0, t2.c0, t2.c0)) AND ((t1.c0, t1.c0, t2.c0, t2.c0, t2.c0))), NULL)) GROUP BY t1.c0, t2.c0 UNION SELECT ALL t1.c0, t2.c0 FROM t2, t1 WHERE ((NOT (DATETIME(((t1.c0)<>(t1.c0)), (((t2.c0, t1.c0, t1.c0, t2.c0, NULL)) NOT BETWEEN ((t1.c0, t2.c0, t1.c0, t2.c0, t2.c0)) AND ((t1.c0, t1.c0, t2.c0, t2.c0, t2.c0))), NULL)))) GROUP BY t1.c0, t2.c0 UNION SELECT t1.c0, t2.c0 FROM t2, t1 WHERE (((DATETIME(((t1.c0)!=(t1.c0)), (((t2.c0, t1.c0, t1.c0, t2.c0, NULL)) NOT BETWEEN ((t1.c0, t2.c0, t1.c0, t2.c0, t2.c0)) AND ((t1.c0, t1.c0, t2.c0, t2.c0, t2.c0))), NULL)) ISNULL)) GROUP BY t1.c0, t2.c0;
SELECT t1.c0, t2.c0 FROM t2, t1 GROUP BY t1.c0, t2.c0;
SELECT ALL t2.c0 FROM t2, t1 GROUP BY t2.c0;
SELECT t2.c0 FROM t2, t1 GROUP BY t2.c0 HAVING 'XR{e' UNION ALL SELECT ALL t2.c0 FROM t2, t1 GROUP BY t2.c0 HAVING (NOT ('XR{e')) UNION ALL SELECT ALL t2.c0 FROM t2, t1 GROUP BY t2.c0 HAVING (('XR{e') ISNULL);
SELECT ALL t2.c0 FROM t2, t1 GROUP BY t2.c0;
SELECT t2.c0 FROM t2, t1 GROUP BY t2.c0 HAVING 'XR{e' UNION ALL SELECT ALL t2.c0 FROM t2, t1 GROUP BY t2.c0 HAVING (NOT ('XR{e')) UNION ALL SELECT ALL t2.c0 FROM t2, t1 GROUP BY t2.c0 HAVING (('XR{e') ISNULL);
SELECT ALL t2.c0 FROM t2, t1 GROUP BY t2.c0;
SELECT ALL t1.c0 FROM t2, t1;
SELECT t1.c0 FROM t2, t1 WHERE (((((t2.c0) BETWEEN (t1.c0) AND (NULL))) BETWEEN (LIKE(t1.c0, t2.c0)) AND (((t1.c0) IS TRUE)))) UNION ALL SELECT t1.c0 FROM t2, t1 WHERE ((NOT (((((t2.c0) BETWEEN (t1.c0) AND (NULL))) BETWEEN (LIKE(t1.c0, t2.c0)) AND (((t1.c0) IS TRUE)))))) UNION ALL SELECT ALL t1.c0 FROM t2, t1 WHERE (((((((t2.c0) BETWEEN (t1.c0) AND (NULL))) BETWEEN (LIKE(t1.c0, t2.c0)) AND (((t1.c0) IS TRUE)))) ISNULL));
SELECT ALL t1.c0 FROM t2, t1;
SELECT DISTINCT * FROM t2;
SELECT DISTINCT * FROM t2 WHERE (((CAST(t2.c0 AS INTEGER)) NOT BETWEEN (((0x1d3d567) IS TRUE)) AND ((t2.c0 IN ())))) UNION SELECT DISTINCT * FROM t2 WHERE ((NOT (((CAST(t2.c0 AS INTEGER)) NOT BETWEEN (((0x1d3d567) IS TRUE)) AND ((t2.c0 IN ())))))) UNION SELECT DISTINCT * FROM t2 WHERE (((((CAST(t2.c0 AS INTEGER)) NOT BETWEEN (((0x1d3d567) IS TRUE)) AND ((t2.c0 IN ())))) ISNULL));
SELECT DISTINCT * FROM t2;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t1.c0 FROM t1 WHERE ((((t1.c0))>=((t1.c0))) COLLATE RTRIM) GROUP BY t1.c0 UNION SELECT ALL t1.c0 FROM t1 WHERE ((NOT ((((t1.c0))>=((t1.c0))) COLLATE RTRIM))) GROUP BY t1.c0 UNION SELECT t1.c0 FROM t1 WHERE ((((((t1.c0))>=((t1.c0))) COLLATE RTRIM) ISNULL)) GROUP BY t1.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t2.c0, t0.c0 FROM t2 FULL OUTER JOIN t1 ON CASE WHEN (+ (t1.c0)) THEN x'' END CROSS JOIN t0 ON (((((t1.c0, x'', t2.c0))<>((t0.c0, t2.c0, t2.c0))))||((- (t2.c0)))) GROUP BY t2.c0, t0.c0;
SELECT t2.c0, t0.c0 FROM t2 FULL OUTER JOIN t1 ON CASE WHEN (+ (t1.c0)) THEN x'' END CROSS JOIN t0 ON (((((t1.c0, x'', t2.c0))<>((t0.c0, t2.c0, t2.c0))))||((- (t2.c0)))) GROUP BY t2.c0, t0.c0 HAVING TOTAL(SUM(t2.c0)) UNION ALL SELECT t2.c0, t0.c0 FROM t2 FULL OUTER JOIN t1 ON CASE WHEN (+ (t1.c0)) THEN x'' END CROSS JOIN t0 ON (((((t1.c0, x'', t2.c0))!=((t0.c0, t2.c0, t2.c0))))||((- (t2.c0)))) GROUP BY t2.c0, t0.c0 HAVING (NOT (TOTAL(SUM(t2.c0)))) UNION ALL SELECT ALL t2.c0, t0.c0 FROM t2 FULL OUTER JOIN t1 ON CASE WHEN (+ (t1.c0)) THEN x'' END CROSS JOIN t0 ON (((((t1.c0, x'', t2.c0))<>((t0.c0, t2.c0, t2.c0))))||((- (t2.c0)))) GROUP BY t2.c0, t0.c0 HAVING ((TOTAL(SUM(t2.c0))) ISNULL);
SELECT t0.c0 FROM t0, t2, t1;
SELECT t0.c0 FROM t0, t2, t1 WHERE (((((t0.c0)>(x''))) NOT NULL)) UNION ALL SELECT t0.c0 FROM t0, t2, t1 WHERE ((NOT (((((t0.c0)>(x''))) NOT NULL)))) UNION ALL SELECT t0.c0 FROM t0, t2, t1 WHERE (((((((t0.c0)>(x''))) NOT NULL)) ISNULL));
SELECT t0.c0 FROM t0, t2, t1;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE ('-1163397200') UNION SELECT DISTINCT * FROM t0 WHERE ((NOT ('-1163397200'))) UNION SELECT DISTINCT * FROM t0 WHERE ((('-1163397200') ISNULL));
SELECT DISTINCT * FROM t0;
SELECT ALL t0.c0, t1.c0 FROM t1 INDEXED BY i28, t0 GROUP BY t0.c0, t1.c0;
SELECT ALL t0.c0, t1.c0 FROM t1 INDEXED BY i28, t0 WHERE ((CAST(t0.c0 AS INTEGER) IN (((t1.c0) NOTNULL)))) GROUP BY t0.c0, t1.c0 UNION SELECT ALL t0.c0, t1.c0 FROM t1 INDEXED BY i28, t0 WHERE ((NOT ((CAST(t0.c0 AS INTEGER) IN (((t1.c0) NOTNULL)))))) GROUP BY t0.c0, t1.c0 UNION SELECT ALL t0.c0, t1.c0 FROM t1 INDEXED BY i28, t0 WHERE ((((CAST(t0.c0 AS INTEGER) IN (((t1.c0) NOTNULL)))) ISNULL)) GROUP BY t0.c0, t1.c0;
SELECT ALL t0.c0, t1.c0 FROM t1 INDEXED BY i28, t0 GROUP BY t0.c0, t1.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT ((+ (MAX(t0.c0))))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT ((NOT ((+ (MAX(t0.c0))))))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (((NOT ((+ (MAX(t0.c0)))))) ISNULL);
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT ((+ (MAX(t0.c0))))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT ((NOT ((+ (MAX(t0.c0))))))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (((NOT ((+ (MAX(t0.c0)))))) ISNULL);
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT * FROM t2, t0;
SELECT * FROM t2, t0 WHERE ((t0.c0 IN (t0.c0, t0.c0)) COLLATE RTRIM) UNION ALL SELECT * FROM t2, t0 WHERE ((NOT ((t0.c0 IN (t0.c0, t0.c0)) COLLATE RTRIM))) UNION ALL SELECT * FROM t2, t0 WHERE ((((t0.c0 IN (t0.c0, t0.c0)) COLLATE RTRIM) ISNULL));
SELECT * FROM t2, t0;
SELECT DISTINCT * FROM t1;
SELECT DISTINCT * FROM t1 WHERE (CASE WHEN CAST(t1.c0 AS BLOB) THEN CASE t1.c0  WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END ELSE ((t1.c0) BETWEEN (t1.c0) AND (t1.c0)) END) UNION SELECT DISTINCT * FROM t1 WHERE ((NOT (CASE WHEN CAST(t1.c0 AS BLOB) THEN CASE t1.c0  WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END ELSE ((t1.c0) BETWEEN (t1.c0) AND (t1.c0)) END))) UNION SELECT DISTINCT * FROM t1 WHERE (((CASE WHEN CAST(t1.c0 AS BLOB) THEN CASE t1.c0  WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END ELSE ((t1.c0) BETWEEN (t1.c0) AND (t1.c0)) END) ISNULL));
SELECT DISTINCT * FROM t1;
SELECT ALL t0.c0 FROM t0, t2 GROUP BY t0.c0;
SELECT t0.c0 FROM t0, t2 WHERE (CAST(t2.c0 COLLATE RTRIM AS BLOB)) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0, t2 WHERE ((NOT (CAST(t2.c0 COLLATE RTRIM AS BLOB)))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0, t2 WHERE (((CAST(t2.c0 COLLATE RTRIM AS BLOB)) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0, t2 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING t0.c0 UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (t0.c0)) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((t0.c0) ISNULL);
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING t0.c0 UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (t0.c0)) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((t0.c0) ISNULL);
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT * FROM t0 INNER JOIN t1 ON (((t1.c0) BETWEEN (t0.c0) AND (t1.c0)) IN ());
SELECT ALL * FROM t0 INNER JOIN t1 ON (((t1.c0) BETWEEN (t0.c0) AND (t1.c0)) IN ()) WHERE ((x'daa564ca' IN (t0.c0))) UNION ALL SELECT ALL * FROM t0 INNER JOIN t1 ON (((t1.c0) BETWEEN (t0.c0) AND (t1.c0)) IN ()) WHERE ((NOT ((x'daa564ca' IN (t0.c0))))) UNION ALL SELECT ALL * FROM t0 INNER JOIN t1 ON (((t1.c0) BETWEEN (t0.c0) AND (t1.c0)) IN ()) WHERE ((((x'daa564ca' IN (t0.c0))) ISNULL));
SELECT * FROM t0 INNER JOIN t1 ON (((t1.c0) BETWEEN (t0.c0) AND (t1.c0)) IN ());
SELECT DISTINCT * FROM t1 RIGHT OUTER JOIN t0 ON (((t0.c0 IN (t2.c0)))*(CAST(t1.c0 AS BLOB))) CROSS JOIN t2 ON ((((((((((x'd978') NOTNULL))OR(((t1.c0)GLOB(t2.c0)))))OR(((t0.c0)*(t0.c0)))))AND(CAST(t1.c0 AS BLOB))))OR(((t2.c0)GLOB(t2.c0))));
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE ((t0.c0 COLLATE NOCASE IN ())) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT ((t0.c0 COLLATE NOCASE IN ())))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((((t0.c0 COLLATE NOCASE IN ())) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING MAX(((MAX(t0.c0))<<(t0.c0))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (MAX(((MAX(t0.c0))<<(t0.c0))))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((MAX(((MAX(t0.c0))<<(t0.c0)))) ISNULL);
SELECT ALL * FROM t1;
SELECT ALL * FROM t1 WHERE ('') UNION ALL SELECT * FROM t1 WHERE ((NOT (''))) UNION ALL SELECT * FROM t1 WHERE ((('') ISNULL));
SELECT ALL * FROM t1;
SELECT DISTINCT * FROM t2, t0;
SELECT DISTINCT * FROM t2, t0 WHERE (((CASE t2.c0  WHEN t2.c0 THEN t0.c0 END) NOT BETWEEN ('867665184') AND ((((t2.c0))>=(('-279582334')))))) UNION SELECT DISTINCT * FROM t2, t0 WHERE ((NOT (((CASE t2.c0  WHEN t2.c0 THEN t0.c0 END) NOT BETWEEN ('867665184') AND ((((t2.c0))>=(('-279582334')))))))) UNION SELECT DISTINCT * FROM t2, t0 WHERE (((((CASE t2.c0  WHEN t2.c0 THEN t0.c0 END) NOT BETWEEN ('867665184') AND ((((t2.c0))>=(('-279582334')))))) ISNULL));
SELECT DISTINCT * FROM t2, t0;
SELECT ALL t0.c0, t1.c0 FROM t0 INNER JOIN t1 ON (((((t1.c0) IS TRUE)))<((0.07722299828686763 COLLATE BINARY))) GROUP BY t0.c0, t1.c0;
SELECT ALL t0.c0, t1.c0 FROM t0 INNER JOIN t1 ON (((((t1.c0) IS TRUE)))<((0.07722299828686763 COLLATE BINARY))) WHERE (CAST(UPPER(t0.c0) AS INTEGER)) GROUP BY t0.c0, t1.c0 UNION SELECT t0.c0, t1.c0 FROM t0 INNER JOIN t1 ON (((((t1.c0) IS TRUE)))<((0.07722299828686763 COLLATE BINARY))) WHERE ((NOT (CAST(UPPER(t0.c0) AS INTEGER)))) GROUP BY t0.c0, t1.c0 UNION SELECT t0.c0, t1.c0 FROM t0 INNER JOIN t1 ON (((((t1.c0) IS TRUE)))<((0.07722299828686763 COLLATE BINARY))) WHERE (((CAST(UPPER(t0.c0) AS INTEGER)) ISNULL)) GROUP BY t0.c0, t1.c0;
SELECT ALL t0.c0, t1.c0 FROM t0 INNER JOIN t1 ON (((((t1.c0) IS TRUE)))<((0.07722299828686763 COLLATE BINARY))) GROUP BY t0.c0, t1.c0;
SELECT t0.c0 FROM t1, t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t1, t0 GROUP BY t0.c0 HAVING ((((((((((AVG(t1.c0))AND(t0.c0)))AND(t0.c0)))AND(COUNT(*))))OR(t0.c0))) NOT BETWEEN (CASE MIN(SUM(MAX(SUM(MIN(SUM(t0.c0))))))  WHEN GROUP_CONCAT(0xffffffffc11c3a77) THEN t0.c0 END) AND (TOTAL(t0.c0))) UNION ALL SELECT t0.c0 FROM t1, t0 GROUP BY t0.c0 HAVING (NOT (((((((((((AVG(t1.c0))AND(t0.c0)))AND(t0.c0)))AND(COUNT(*))))OR(t0.c0))) NOT BETWEEN (CASE MIN(SUM(MAX(SUM(MIN(SUM(t0.c0))))))  WHEN GROUP_CONCAT(0xffffffffc11c3a77) THEN t0.c0 END) AND (TOTAL(t0.c0))))) UNION ALL SELECT t0.c0 FROM t1, t0 GROUP BY t0.c0 HAVING ((((((((((((AVG(t1.c0))AND(t0.c0)))AND(t0.c0)))AND(COUNT(*))))OR(t0.c0))) NOT BETWEEN (CASE MIN(SUM(MAX(SUM(MIN(SUM(t0.c0))))))  WHEN GROUP_CONCAT(0Xffffffffc11c3a77) THEN t0.c0 END) AND (TOTAL(t0.c0)))) ISNULL);
SELECT t2.c0, t1.c0 FROM t2 CROSS JOIN t1 ON (+ ('-2066131617'));
SELECT t2.c0, t1.c0 FROM t2 CROSS JOIN t1 ON (+ ('-2066131617')) WHERE (((((((((((t1.c0)IS NOT(t2.c0)))OR(t1.c0 COLLATE NOCASE)))AND(CAST(t2.c0 AS NUMERIC))))AND(((t1.c0)/(t2.c0)))))OR(((((t2.c0)OR(t2.c0)))OR(t2.c0))))) UNION ALL SELECT ALL t2.c0, t1.c0 FROM t2 CROSS JOIN t1 ON (+ ('-2066131617')) WHERE ((NOT (((((((((((t1.c0)IS NOT(t2.c0)))OR(t1.c0 COLLATE NOCASE)))AND(CAST(t2.c0 AS NUMERIC))))AND(((t1.c0)/(t2.c0)))))OR(((((t2.c0)OR(t2.c0)))OR(t2.c0))))))) UNION ALL SELECT ALL t2.c0, t1.c0 FROM t2 CROSS JOIN t1 ON (+ ('-2066131617')) WHERE (((((((((((((t1.c0)IS NOT(t2.c0)))OR(t1.c0 COLLATE NOCASE)))AND(CAST(t2.c0 AS NUMERIC))))AND(((t1.c0)/(t2.c0)))))OR(((((t2.c0)OR(t2.c0)))OR(t2.c0))))) ISNULL));
SELECT t2.c0, t1.c0 FROM t2 CROSS JOIN t1 ON (+ ('-2066131617'));
SELECT DISTINCT * FROM t2, t1, t0;
SELECT DISTINCT * FROM t2, t1, t0 WHERE ((((CAST('' AS NUMERIC)))<=((((((0Xffffffffe44a1f0c)AND(t0.c0)))AND('H2{JScz\nb')))))) UNION SELECT DISTINCT * FROM t2, t1, t0 WHERE ((NOT ((((CAST('' AS NUMERIC)))<=((((((0xffffffffe44a1f0c)AND(t0.c0)))AND('H2{JScz\nb')))))))) UNION SELECT DISTINCT * FROM t2, t1 NOT INDEXED, t0 WHERE ((((((CAST('' AS NUMERIC)))<=((((((0xffffffffe44a1f0c)AND(t0.c0)))AND('H2{JScz\nb')))))) ISNULL));
SELECT DISTINCT * FROM t2, t1, t0;
SELECT t1.c0, t0.c0 FROM t0, t1 GROUP BY t1.c0, t0.c0;
SELECT ALL t1.c0, t0.c0 FROM t0, t1 WHERE ((((t0.c0)) NOT BETWEEN ((CAST(t0.c0 AS REAL))) AND ((((t1.c0) IS FALSE))))) GROUP BY t1.c0, t0.c0 UNION SELECT ALL t1.c0, t0.c0 FROM t0, t1 WHERE ((NOT ((((t0.c0)) NOT BETWEEN ((CAST(t0.c0 AS REAL))) AND ((((t1.c0) IS FALSE))))))) GROUP BY t1.c0, t0.c0 UNION SELECT t1.c0, t0.c0 FROM t0, t1 WHERE ((((((t0.c0)) NOT BETWEEN ((CAST(t0.c0 AS REAL))) AND ((((t1.c0) IS FALSE))))) ISNULL)) GROUP BY t1.c0, t0.c0;
SELECT t1.c0, t0.c0 FROM t0, t1 GROUP BY t1.c0, t0.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING json_extract(((t1.c0)>=(t1.c0)), COUNT(*)) UNION ALL SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING (NOT (json_extract(((t1.c0)>=(t1.c0)), COUNT(*)))) UNION ALL SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING ((json_extract(((t1.c0)>=(t1.c0)), COUNT(*))) ISNULL);
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING json_extract(((t1.c0)>=(t1.c0)), COUNT(*)) UNION ALL SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING (NOT (json_extract(((t1.c0)>=(t1.c0)), COUNT(*)))) UNION ALL SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING ((json_extract(((t1.c0)>=(t1.c0)), COUNT(*))) ISNULL);
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL * FROM t2, t1 INDEXED BY i28;
SELECT ALL * FROM t2, t1 INDEXED BY i28 WHERE ((((~ (t1.c0)))OR(((((((((t1.c0)AND(t1.c0)))OR(t1.c0)))AND(t1.c0)))OR(t1.c0))))) UNION ALL SELECT ALL * FROM t2, t1 INDEXED BY i28 WHERE ((NOT ((((~ (t1.c0)))OR(((((((((t1.c0)AND(t1.c0)))OR(t1.c0)))AND(t1.c0)))OR(t1.c0))))))) UNION ALL SELECT ALL * FROM t2, t1 INDEXED BY i28 WHERE ((((((~ (t1.c0)))OR(((((((((t1.c0)AND(t1.c0)))OR(t1.c0)))AND(t1.c0)))OR(t1.c0))))) ISNULL));
SELECT ALL * FROM t2, t1 INDEXED BY i28;
SELECT DISTINCT * FROM t0 INNER JOIN t2 ON (((t0.c0 IN ()))LIKE(CASE t2.c0  WHEN t2.c0 THEN t2.c0 WHEN t2.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END));
SELECT DISTINCT * FROM t0 INNER JOIN t2 ON (((t0.c0 IN ()))LIKE(CASE t2.c0  WHEN t2.c0 THEN t2.c0 WHEN t2.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END)) WHERE ((+ ((t2.c0 IN ())))) UNION SELECT DISTINCT * FROM t0 INNER JOIN t2 ON (((t0.c0 IN ()))LIKE(CASE t2.c0  WHEN t2.c0 THEN t2.c0 WHEN t2.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END)) WHERE ((NOT ((+ ((t2.c0 IN ())))))) UNION SELECT DISTINCT * FROM t0 INNER JOIN t2 ON (((t0.c0 IN ()))LIKE(CASE t2.c0  WHEN t2.c0 THEN t2.c0 WHEN t2.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END)) WHERE ((((+ ((t2.c0 IN ())))) ISNULL));
SELECT DISTINCT * FROM t0 INNER JOIN t2 ON (((t0.c0 IN ()))LIKE(CASE t2.c0  WHEN t2.c0 THEN t2.c0 WHEN t2.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END));
SELECT t1.c0 FROM t1, t2, t0 GROUP BY t1.c0;
SELECT t1.c0 FROM t1, t2, t0 WHERE (((((((((t1.c0)OR(t2.c0)))AND(t0.c0)))AND(((t0.c0)<(t2.c0)))))OR(t1.c0 COLLATE NOCASE))) GROUP BY t1.c0 UNION SELECT ALL t1.c0 FROM t1, t2, t0 WHERE ((NOT (((((((((t1.c0)OR(t2.c0)))AND(t0.c0)))AND(((t0.c0)<(t2.c0)))))OR(t1.c0 COLLATE NOCASE))))) GROUP BY t1.c0 UNION SELECT t1.c0 FROM t1, t2, t0 WHERE (((((((((((t1.c0)OR(t2.c0)))AND(t0.c0)))AND(((t0.c0)<(t2.c0)))))OR(t1.c0 COLLATE NOCASE))) ISNULL)) GROUP BY t1.c0;
SELECT t1.c0 FROM t1, t2, t0 GROUP BY t1.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING ((((AVG(AVG(t1.c0)))OR(SUM(TOTAL(MAX(t1.c0))))))AND(COUNT(t1.c0))) UNION ALL SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING (NOT (((((AVG(AVG(t1.c0)))OR(SUM(TOTAL(MAX(t1.c0))))))AND(COUNT(t1.c0))))) UNION ALL SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING ((((((AVG(AVG(t1.c0)))OR(SUM(TOTAL(MAX(t1.c0))))))AND(COUNT(t1.c0)))) ISNULL);
SELECT ALL t2.c0, t1.c0 FROM t2, t1;
SELECT t2.c0, t1.c0 FROM t2, t1 WHERE ((((((t1.c0)) NOT BETWEEN ((t1.c0)) AND ((t1.c0))))&(t1.c0 COLLATE NOCASE))) UNION ALL SELECT ALL t2.c0, t1.c0 FROM t2, t1 WHERE ((NOT ((((((t1.c0)) NOT BETWEEN ((t1.c0)) AND ((t1.c0))))&(t1.c0 COLLATE NOCASE))))) UNION ALL SELECT ALL t2.c0, t1.c0 FROM t2, t1 WHERE ((((((((t1.c0)) NOT BETWEEN ((t1.c0)) AND ((t1.c0))))&(t1.c0 COLLATE NOCASE))) ISNULL));
SELECT ALL t2.c0, t1.c0 FROM t2, t1;
SELECT DISTINCT t0.c0, t2.c0 FROM t1 RIGHT OUTER JOIN t2 ON ((LIKE(t2.c0, t2.c0)) BETWEEN ((~ (t1.c0))) AND (CASE WHEN 238172738 THEN t0.c0 ELSE t2.c0 END)) FULL OUTER JOIN t0 ON LOWER(DISTINCT (((t2.c0))>=((t2.c0))));
SELECT t0.c0 FROM t1, t2, t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t1, t2, t0 WHERE (((CAST(t2.c0 AS BLOB)) IS TRUE)) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t1, t2, t0 WHERE ((NOT (((CAST(t2.c0 AS BLOB)) IS TRUE)))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t1, t2, t0 WHERE (((((CAST(t2.c0 AS BLOB)) IS TRUE)) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t1, t2, t0 GROUP BY t0.c0;
SELECT ALL t2.c0 FROM t1, t2 GROUP BY t2.c0;
SELECT t2.c0 FROM t1, t2 GROUP BY t2.c0 HAVING CASE WHEN MAX(t1.c0) THEN TRIM(AVG(MAX(t1.c0))) WHEN GROUP_CONCAT(MAX(t1.c0)) THEN TOTAL(GROUP_CONCAT(t1.c0)) WHEN UPPER(t2.c0) THEN COUNT(TOTAL(t2.c0)) ELSE MIN('-1054335923') END UNION ALL SELECT t2.c0 FROM t1, t2 GROUP BY t2.c0 HAVING (NOT (CASE WHEN MAX(t1.c0) THEN TRIM(AVG(MAX(t1.c0))) WHEN GROUP_CONCAT(MAX(t1.c0)) THEN TOTAL(GROUP_CONCAT(t1.c0)) WHEN UPPER(t2.c0) THEN COUNT(TOTAL(t2.c0)) ELSE MIN('-1054335923') END)) UNION ALL SELECT t2.c0 FROM t1, t2 GROUP BY t2.c0 HAVING ((CASE WHEN MAX(t1.c0) THEN TRIM(AVG(MAX(t1.c0))) WHEN GROUP_CONCAT(MAX(t1.c0)) THEN TOTAL(GROUP_CONCAT(t1.c0)) WHEN UPPER(t2.c0) THEN COUNT(TOTAL(t2.c0)) ELSE MIN('-1054335923') END) ISNULL);
SELECT * FROM t2;
SELECT * FROM t2 WHERE ('19827803') UNION ALL SELECT ALL * FROM t2 WHERE ((NOT ('19827803'))) UNION ALL SELECT ALL * FROM t2 WHERE ((('19827803') ISNULL));
SELECT * FROM t2;
SELECT DISTINCT * FROM t0, t2;
SELECT DISTINCT * FROM t0, t2 WHERE (((t0.c0)<<(((t2.c0)||(t0.c0))))) UNION SELECT DISTINCT * FROM t0, t2 WHERE ((NOT (((t0.c0)<<(((t2.c0)||(t0.c0))))))) UNION SELECT DISTINCT * FROM t0, t2 WHERE (((((t0.c0)<<(((t2.c0)||(t0.c0))))) ISNULL));
SELECT DISTINCT * FROM t0, t2;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 WHERE (NULL COLLATE NOCASE) GROUP BY t1.c0 UNION SELECT t1.c0 FROM t1 WHERE ((NOT (NULL COLLATE NOCASE))) GROUP BY t1.c0 UNION SELECT ALL t1.c0 FROM t1 WHERE (((NULL COLLATE NOCASE) ISNULL)) GROUP BY t1.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t1.c0 FROM t1, t2 GROUP BY t1.c0;
SELECT t1.c0 FROM t1, t2 GROUP BY t1.c0 HAVING ((MIN(COUNT(AVG(AVG(t2.c0)))))>(CAST(0.16171847238818038 AS REAL))) UNION ALL SELECT t1.c0 FROM t1, t2 GROUP BY t1.c0 HAVING (NOT (((MIN(COUNT(AVG(AVG(t2.c0)))))>(CAST(0.16171847238818038 AS REAL))))) UNION ALL SELECT ALL t1.c0 FROM t1, t2 GROUP BY t1.c0 HAVING ((((MIN(COUNT(AVG(AVG(t2.c0)))))>(CAST(0.16171847238818038 AS REAL)))) ISNULL);
SELECT ALL * FROM t1;
SELECT ALL * FROM t1 WHERE ((NOT (0.7758767527378453))) UNION ALL SELECT * FROM t1 WHERE ((NOT ((NOT (0.7758767527378453))))) UNION ALL SELECT ALL * FROM t1 WHERE ((((NOT (0.7758767527378453))) ISNULL));
SELECT ALL * FROM t1;
SELECT DISTINCT * FROM t2;
SELECT DISTINCT * FROM t2 WHERE (PRINTF(((t2.c0)&(t2.c0)))) UNION SELECT DISTINCT * FROM t2 WHERE ((NOT (PRINTF(((t2.c0)&(t2.c0)))))) UNION SELECT DISTINCT * FROM t2 WHERE (((PRINTF(((t2.c0)&(t2.c0)))) ISNULL));
SELECT DISTINCT * FROM t2;
SELECT ALL t2.c0, t0.c0 FROM t2, t0 GROUP BY t2.c0, t0.c0;
SELECT ALL t2.c0, t0.c0 FROM t2, t0 WHERE (((((t0.c0)IS NOT('*N'))) ISNULL)) GROUP BY t2.c0, t0.c0 UNION SELECT t2.c0, t0.c0 FROM t2, t0 WHERE ((NOT (((((t0.c0)IS NOT('*N'))) ISNULL)))) GROUP BY t2.c0, t0.c0 UNION SELECT ALL t2.c0, t0.c0 FROM t2, t0 WHERE (((((((t0.c0)IS NOT('*N'))) ISNULL)) ISNULL)) GROUP BY t2.c0, t0.c0;
SELECT ALL t2.c0, t0.c0 FROM t2, t0 GROUP BY t2.c0, t0.c0;
SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0;
SELECT t2.c0 FROM t2 GROUP BY t2.c0 HAVING TYPEOF(DISTINCT TOTAL(t2.c0)) UNION ALL SELECT t2.c0 FROM t2 GROUP BY t2.c0 HAVING (NOT (TYPEOF(DISTINCT TOTAL(t2.c0)))) UNION ALL SELECT t2.c0 FROM t2 GROUP BY t2.c0 HAVING ((TYPEOF(DISTINCT TOTAL(t2.c0))) ISNULL);
SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0;
SELECT t2.c0 FROM t2 GROUP BY t2.c0 HAVING TYPEOF(DISTINCT TOTAL(t2.c0)) UNION ALL SELECT t2.c0 FROM t2 GROUP BY t2.c0 HAVING (NOT (TYPEOF(DISTINCT TOTAL(t2.c0)))) UNION ALL SELECT t2.c0 FROM t2 GROUP BY t2.c0 HAVING ((TYPEOF(DISTINCT TOTAL(t2.c0))) ISNULL);
SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0;
SELECT ALL SUM((- (CASE t2.c0  WHEN x'c310' THEN t2.c0 ELSE t2.c0 END))) FROM t2;
SELECT ALL * FROM t2, t0 FULL OUTER JOIN t1 ON TYPEOF(DISTINCT t0.c0 COLLATE RTRIM);
SELECT ALL * FROM t2, t0 FULL OUTER JOIN t1 ON TYPEOF(DISTINCT t0.c0 COLLATE RTRIM) WHERE (((t1.c0) IS FALSE) COLLATE BINARY) UNION ALL SELECT * FROM t2, t0 FULL OUTER JOIN t1 ON TYPEOF(DISTINCT t0.c0 COLLATE RTRIM) WHERE ((NOT (((t1.c0) IS FALSE) COLLATE BINARY))) UNION ALL SELECT * FROM t2, t0 FULL OUTER JOIN t1 ON TYPEOF(DISTINCT t0.c0 COLLATE RTRIM) WHERE (((((t1.c0) IS FALSE) COLLATE BINARY) ISNULL));
SELECT ALL * FROM t2, t0 FULL OUTER JOIN t1 ON TYPEOF(DISTINCT t0.c0 COLLATE RTRIM);
SELECT DISTINCT * FROM t0 INNER JOIN t2 ON (TIME(t0.c0, t2.c0, '') IN ());
SELECT DISTINCT * FROM t0 INNER JOIN t2 ON (TIME(t0.c0, t2.c0, '') IN ()) WHERE (CAST(((t0.c0)!=(t0.c0)) AS INTEGER)) UNION SELECT DISTINCT * FROM t0 INNER JOIN t2 ON (TIME(t0.c0, t2.c0, '') IN ()) WHERE ((NOT (CAST(((t0.c0)!=(t0.c0)) AS INTEGER)))) UNION SELECT DISTINCT * FROM t0 INNER JOIN t2 ON (TIME(t0.c0, t2.c0, '') IN ()) WHERE (((CAST(((t0.c0)<>(t0.c0)) AS INTEGER)) ISNULL));
SELECT DISTINCT * FROM t0 INNER JOIN t2 ON (TIME(t0.c0, t2.c0, '') IN ());
SELECT t0.c0 FROM t1, t0, t2 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t1, t0, t2 WHERE (((((t2.c0) BETWEEN (t0.c0) AND (t2.c0)))IS NOT(CAST(t2.c0 AS NUMERIC)))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t1, t0, t2 WHERE ((NOT (((((t2.c0) BETWEEN (t0.c0) AND (t2.c0)))IS NOT(CAST(t2.c0 AS NUMERIC)))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t1, t0, t2 WHERE (((((((t2.c0) BETWEEN (t0.c0) AND (t2.c0)))IS NOT(CAST(t2.c0 AS NUMERIC)))) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t1, t0, t2 GROUP BY t0.c0;
SELECT t2.c0 FROM t2, t1 GROUP BY t2.c0;
SELECT ALL t2.c0 FROM t2, t1 GROUP BY t2.c0 HAVING COUNT(*) UNION ALL SELECT t2.c0 FROM t2, t1 GROUP BY t2.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL t2.c0 FROM t2, t1 GROUP BY t2.c0 HAVING ((COUNT(*)) ISNULL);
SELECT t2.c0 FROM t2, t1 GROUP BY t2.c0;
SELECT ALL t2.c0 FROM t2, t1 GROUP BY t2.c0 HAVING COUNT(*) UNION ALL SELECT t2.c0 FROM t2, t1 GROUP BY t2.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL t2.c0 FROM t2, t1 GROUP BY t2.c0 HAVING ((COUNT(*)) ISNULL);
SELECT t2.c0 FROM t2, t1 GROUP BY t2.c0;
SELECT t0.c0, t2.c0 FROM t2, t0;
SELECT ALL t0.c0, t2.c0 FROM t2, t0 WHERE (NULL) UNION ALL SELECT t0.c0, t2.c0 FROM t2, t0 WHERE ((NOT (NULL))) UNION ALL SELECT ALL t0.c0, t2.c0 FROM t2, t0 WHERE (((NULL) ISNULL));
SELECT t0.c0, t2.c0 FROM t2, t0;
SELECT DISTINCT t0.c0, t2.c0 FROM t0 INNER JOIN t2 ON 1.401351309E9 COLLATE RTRIM;
SELECT DISTINCT t0.c0, t2.c0 FROM t0 INNER JOIN t2 ON 1.401351309E9 COLLATE RTRIM WHERE ((((+ (t0.c0)))AND(1.262904085E9))) UNION SELECT DISTINCT t0.c0, t2.c0 FROM t0 INNER JOIN t2 ON 1.401351309E9 COLLATE RTRIM WHERE ((NOT ((((+ (t0.c0)))AND(1.262904085E9))))) UNION SELECT DISTINCT t0.c0, t2.c0 FROM t0 INNER JOIN t2 ON 1.401351309E9 COLLATE RTRIM WHERE ((((((+ (t0.c0)))AND(1.262904085E9))) ISNULL));
SELECT DISTINCT t0.c0, t2.c0 FROM t0 INNER JOIN t2 ON 1.401351309E9 COLLATE RTRIM;
SELECT t2.c0, t1.c0 FROM t1, t2 GROUP BY t2.c0, t1.c0;
SELECT ALL t2.c0, t1.c0 FROM t1, t2 WHERE (((((NULL)OR((t1.c0 IN (0.12512733019298838)))))OR(((((t2.c0)AND(t2.c0)))OR(t1.c0))))) GROUP BY t2.c0, t1.c0 UNION SELECT t2.c0, t1.c0 FROM t1, t2 WHERE ((NOT (((((NULL)OR((t1.c0 IN (0.12512733019298838)))))OR(((((t2.c0)AND(t2.c0)))OR(t1.c0))))))) GROUP BY t2.c0, t1.c0 UNION SELECT ALL t2.c0, t1.c0 FROM t1, t2 WHERE (((((((NULL)OR((t1.c0 IN (0.12512733019298838)))))OR(((((t2.c0)AND(t2.c0)))OR(t1.c0))))) ISNULL)) GROUP BY t2.c0, t1.c0;
SELECT t2.c0, t1.c0 FROM t1, t2 GROUP BY t2.c0, t1.c0;
SELECT ALL t1.c0 FROM t1, t0 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1, t0 GROUP BY t1.c0 HAVING t1.c0 UNION ALL SELECT t1.c0 FROM t1, t0 GROUP BY t1.c0 HAVING (NOT (t1.c0)) UNION ALL SELECT t1.c0 FROM t1, t0 GROUP BY t1.c0 HAVING ((t1.c0) ISNULL);
SELECT ALL t1.c0 FROM t1, t0 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1, t0 GROUP BY t1.c0 HAVING t1.c0 UNION ALL SELECT t1.c0 FROM t1, t0 GROUP BY t1.c0 HAVING (NOT (t1.c0)) UNION ALL SELECT t1.c0 FROM t1, t0 GROUP BY t1.c0 HAVING ((t1.c0) ISNULL);
SELECT ALL t1.c0 FROM t1, t0 GROUP BY t1.c0;
SELECT ALL t0.c0 FROM t0;
SELECT ALL t0.c0 FROM t0 WHERE (HEX(DISTINCT ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))) UNION ALL SELECT t0.c0 FROM t0 WHERE ((NOT (HEX(DISTINCT ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))))) UNION ALL SELECT t0.c0 FROM t0 WHERE (((HEX(DISTINCT ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))) ISNULL));
SELECT ALL t0.c0 FROM t0;
SELECT DISTINCT t1.c0 FROM t1;
SELECT DISTINCT t1.c0 FROM t1 WHERE (((((x'')GLOB(t1.c0))) BETWEEN (0.12660542649119255) AND ((t1.c0 IN ())))) UNION SELECT DISTINCT t1.c0 FROM t1 WHERE ((NOT (((((x'')GLOB(t1.c0))) BETWEEN (0.12660542649119255) AND ((t1.c0 IN ())))))) UNION SELECT DISTINCT t1.c0 FROM t1 WHERE (((((((x'')GLOB(t1.c0))) BETWEEN (0.12660542649119255) AND ((t1.c0 IN ())))) ISNULL));
SELECT DISTINCT t1.c0 FROM t1;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 WHERE (t1.c0 COLLATE NOCASE) GROUP BY t1.c0 UNION SELECT ALL t1.c0 FROM t1 WHERE ((NOT (t1.c0 COLLATE NOCASE))) GROUP BY t1.c0 UNION SELECT t1.c0 FROM t1 WHERE (((t1.c0 COLLATE NOCASE) ISNULL)) GROUP BY t1.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING AVG(MIN(COUNT(*))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (AVG(MIN(COUNT(*))))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((AVG(MIN(COUNT(*)))) ISNULL);
SELECT t1.c0 FROM t0, t1 LEFT OUTER JOIN t2 ON CAST(((t2.c0)GLOB(t0.c0)) AS BLOB);
SELECT ALL t1.c0 FROM t0, t1 LEFT OUTER JOIN t2 ON CAST(((t2.c0)GLOB(t0.c0)) AS BLOB) WHERE ((~ (t2.c0))) UNION ALL SELECT t1.c0 FROM t0, t1 LEFT OUTER JOIN t2 ON CAST(((t2.c0)GLOB(t0.c0)) AS BLOB) WHERE ((NOT ((~ (t2.c0))))) UNION ALL SELECT ALL t1.c0 FROM t0, t1 LEFT OUTER JOIN t2 ON CAST(((t2.c0)GLOB(t0.c0)) AS BLOB) WHERE ((((~ (t2.c0))) ISNULL));
SELECT t1.c0 FROM t0, t1 LEFT OUTER JOIN t2 ON CAST(((t2.c0)GLOB(t0.c0)) AS BLOB);
SELECT DISTINCT * FROM t2;
SELECT DISTINCT * FROM t2 WHERE (((((t2.c0 COLLATE NOCASE)AND(t2.c0)))OR(CASE WHEN t2.c0 THEN t2.c0 END))) UNION SELECT DISTINCT * FROM t2 WHERE ((NOT (((((t2.c0 COLLATE NOCASE)AND(t2.c0)))OR(CASE WHEN t2.c0 THEN t2.c0 END))))) UNION SELECT DISTINCT * FROM t2 WHERE (((((((t2.c0 COLLATE NOCASE)AND(t2.c0)))OR(CASE WHEN t2.c0 THEN t2.c0 END))) ISNULL));
SELECT DISTINCT * FROM t2;
SELECT ALL t2.c0 FROM t1 FULL OUTER JOIN t2 ON ((((t1.c0)||(t1.c0))) BETWEEN ((~ (t2.c0))) AND (((t2.c0)>(t2.c0)))) GROUP BY t2.c0;
SELECT ALL t2.c0 FROM t1 FULL OUTER JOIN t2 ON ((((t1.c0)||(t1.c0))) BETWEEN ((~ (t2.c0))) AND (((t2.c0)>(t2.c0)))) WHERE (((((NOT (t1.c0))))==((((x'ada4')GLOB(t1.c0)))))) GROUP BY t2.c0 UNION SELECT t2.c0 FROM t1 FULL OUTER JOIN t2 ON ((((t1.c0)||(t1.c0))) BETWEEN ((~ (t2.c0))) AND (((t2.c0)>(t2.c0)))) WHERE ((NOT (((((NOT (t1.c0))))==((((x'ada4')GLOB(t1.c0)))))))) GROUP BY t2.c0 UNION SELECT ALL t2.c0 FROM t1 FULL OUTER JOIN t2 ON ((((t1.c0)||(t1.c0))) BETWEEN ((~ (t2.c0))) AND (((t2.c0)>(t2.c0)))) WHERE (((((((NOT (t1.c0))))==((((x'ada4')GLOB(t1.c0)))))) ISNULL)) GROUP BY t2.c0;
SELECT ALL t2.c0 FROM t1 FULL OUTER JOIN t2 ON ((((t1.c0)||(t1.c0))) BETWEEN ((~ (t2.c0))) AND (((t2.c0)>(t2.c0)))) GROUP BY t2.c0;
SELECT ALL t1.c0 FROM t2 FULL OUTER JOIN t0 ON ((((((((((NULL) NOT BETWEEN (t0.c0) AND (t1.c0)))OR((((t1.c0)) BETWEEN ((t0.c0)) AND ((t1.c0))))))OR((NOT (t0.c0)))))AND(((t2.c0)LIKE(t1.c0)))))AND(((t1.c0) ISNULL))) FULL OUTER JOIN t1 ON t0.c0 GROUP BY t1.c0;
SELECT t1.c0 FROM t0, t1;
SELECT ALL t1.c0 FROM t0, t1 WHERE (((((((t0.c0)OR(t0.c0)))OR('}7V_kG*')))<=((t1.c0 IN (t1.c0))))) UNION ALL SELECT t1.c0 FROM t0, t1 WHERE ((NOT (((((((t0.c0)OR(t0.c0)))OR('}7V_kG*')))<=((t1.c0 IN (t1.c0))))))) UNION ALL SELECT ALL t1.c0 FROM t0, t1 WHERE (((((((((t0.c0)OR(t0.c0)))OR('}7V_kG*')))<=((t1.c0 IN (t1.c0))))) ISNULL));
SELECT t1.c0 FROM t0, t1;
SELECT DISTINCT t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0 WHERE ((((t0.c0 COLLATE BINARY))==((t0.c0 COLLATE NOCASE)))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((NOT ((((t0.c0 COLLATE BINARY))==((t0.c0 COLLATE NOCASE)))))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((((((t0.c0 COLLATE BINARY))==((t0.c0 COLLATE NOCASE)))) ISNULL));
SELECT DISTINCT t0.c0 FROM t0;
SELECT t0.c0, t2.c0 FROM t0 FULL OUTER JOIN t2 ON (((t2.c0)) BETWEEN ((((t0.c0) NOTNULL))) AND ((x''))) GROUP BY t0.c0, t2.c0;
SELECT ALL t0.c0, t2.c0 FROM t0 FULL OUTER JOIN t2 ON (((t2.c0)) BETWEEN ((((t0.c0) NOTNULL))) AND ((x''))) WHERE ((((+ (t0.c0)))<=(x'0151'))) GROUP BY t0.c0, t2.c0 UNION SELECT t0.c0, t2.c0 FROM t0 FULL OUTER JOIN t2 ON (((t2.c0)) BETWEEN ((((t0.c0) NOTNULL))) AND ((x''))) WHERE ((NOT ((((+ (t0.c0)))<=(x'0151'))))) GROUP BY t0.c0, t2.c0 UNION SELECT ALL t0.c0, t2.c0 FROM t0 FULL OUTER JOIN t2 ON (((t2.c0)) BETWEEN ((((t0.c0) NOTNULL))) AND ((x''))) WHERE ((((((+ (t0.c0)))<=(x'0151'))) ISNULL)) GROUP BY t0.c0, t2.c0;
SELECT t0.c0, t2.c0 FROM t0 FULL OUTER JOIN t2 ON (((t2.c0)) BETWEEN ((((t0.c0) NOTNULL))) AND ((x''))) GROUP BY t0.c0, t2.c0;
SELECT ALL t0.c0, t2.c0 FROM t0 RIGHT OUTER JOIN t2 ON ((TYPEOF(DISTINCT t0.c0)) IS FALSE) GROUP BY t0.c0, t2.c0;
SELECT t0.c0, t2.c0 FROM t0 RIGHT OUTER JOIN t2 ON ((TYPEOF(DISTINCT t0.c0)) IS FALSE) GROUP BY t0.c0, t2.c0 HAVING (CAST(COUNT(*) AS REAL) IN ()) UNION ALL SELECT ALL t0.c0, t2.c0 FROM t0 RIGHT OUTER JOIN t2 ON ((TYPEOF(DISTINCT t0.c0)) IS FALSE) GROUP BY t0.c0, t2.c0 HAVING (NOT ((CAST(COUNT(*) AS REAL) IN ()))) UNION ALL SELECT t0.c0, t2.c0 FROM t0 RIGHT OUTER JOIN t2 ON ((TYPEOF(DISTINCT t0.c0)) IS FALSE) GROUP BY t0.c0, t2.c0 HAVING (((CAST(COUNT(*) AS REAL) IN ())) ISNULL);
SELECT ALL t0.c0, t2.c0 FROM t0 RIGHT OUTER JOIN t2 ON ((TYPEOF(DISTINCT t0.c0)) IS FALSE) GROUP BY t0.c0, t2.c0;
SELECT t0.c0, t2.c0 FROM t0 RIGHT OUTER JOIN t2 ON ((TYPEOF(DISTINCT t0.c0)) IS FALSE) GROUP BY t0.c0, t2.c0 HAVING (CAST(COUNT(*) AS REAL) IN ()) UNION ALL SELECT ALL t0.c0, t2.c0 FROM t0 RIGHT OUTER JOIN t2 ON ((TYPEOF(DISTINCT t0.c0)) IS FALSE) GROUP BY t0.c0, t2.c0 HAVING (NOT ((CAST(COUNT(*) AS REAL) IN ()))) UNION ALL SELECT t0.c0, t2.c0 FROM t0 RIGHT OUTER JOIN t2 ON ((TYPEOF(DISTINCT t0.c0)) IS FALSE) GROUP BY t0.c0, t2.c0 HAVING (((CAST(COUNT(*) AS REAL) IN ())) ISNULL);
SELECT ALL t0.c0, t2.c0 FROM t0 RIGHT OUTER JOIN t2 ON ((TYPEOF(DISTINCT t0.c0)) IS FALSE) GROUP BY t0.c0, t2.c0;
SELECT t1.c0 FROM t0, t1, t2;
SELECT t1.c0 FROM t0, t1, t2 WHERE ((CAST(t2.c0 AS INTEGER) IN ())) UNION ALL SELECT t1.c0 FROM t0, t1, t2 WHERE ((NOT ((CAST(t2.c0 AS INTEGER) IN ())))) UNION ALL SELECT ALL t1.c0 FROM t0, t1, t2 WHERE ((((CAST(t2.c0 AS INTEGER) IN ())) ISNULL));
SELECT t1.c0 FROM t0, t1, t2;
SELECT DISTINCT t2.c0, t0.c0, t1.c0 FROM t1, t2 LEFT OUTER JOIN t0 ON ((((t0.c0)<>(t0.c0)))=(CASE t1.c0  WHEN t1.c0 THEN t0.c0 WHEN t2.c0 THEN t0.c0 WHEN t1.c0 THEN t0.c0 END));
SELECT DISTINCT t2.c0, t0.c0, t1.c0 FROM t1, t2 LEFT OUTER JOIN t0 ON ((((t0.c0)<>(t0.c0)))==(CASE t1.c0  WHEN t1.c0 THEN t0.c0 WHEN t2.c0 THEN t0.c0 WHEN t1.c0 THEN t0.c0 END)) WHERE ((((((((t1.c0)) BETWEEN ((t2.c0)) AND ((t2.c0))))OR(((t0.c0)IS(t1.c0)))))OR(CASE 0.006210866781399815  WHEN t0.c0 THEN t1.c0 WHEN t0.c0 THEN t0.c0 WHEN 0.6483417531753792 THEN t1.c0 END))) UNION SELECT DISTINCT t2.c0, t0.c0, t1.c0 FROM t1, t2 LEFT OUTER JOIN t0 ON ((((t0.c0)!=(t0.c0)))=(CASE t1.c0  WHEN t1.c0 THEN t0.c0 WHEN t2.c0 THEN t0.c0 WHEN t1.c0 THEN t0.c0 END)) WHERE ((NOT ((((((((t1.c0)) BETWEEN ((t2.c0)) AND ((t2.c0))))OR(((t0.c0)IS(t1.c0)))))OR(CASE 0.006210866781399815  WHEN t0.c0 THEN t1.c0 WHEN t0.c0 THEN t0.c0 WHEN 0.6483417531753792 THEN t1.c0 END))))) UNION SELECT DISTINCT t2.c0, t0.c0, t1.c0 FROM t1, t2 LEFT OUTER JOIN t0 ON ((((t0.c0)!=(t0.c0)))=(CASE t1.c0  WHEN t1.c0 THEN t0.c0 WHEN t2.c0 THEN t0.c0 WHEN t1.c0 THEN t0.c0 END)) WHERE ((((((((((t1.c0)) BETWEEN ((t2.c0)) AND ((t2.c0))))OR(((t0.c0)IS(t1.c0)))))OR(CASE 0.006210866781399815  WHEN t0.c0 THEN t1.c0 WHEN t0.c0 THEN t0.c0 WHEN 0.6483417531753792 THEN t1.c0 END))) ISNULL));
SELECT DISTINCT t2.c0, t0.c0, t1.c0 FROM t1, t2 LEFT OUTER JOIN t0 ON ((((t0.c0)<>(t0.c0)))=(CASE t1.c0  WHEN t1.c0 THEN t0.c0 WHEN t2.c0 THEN t0.c0 WHEN t1.c0 THEN t0.c0 END));
SELECT ALL t0.c0, t1.c0 FROM t0, t1, t2 GROUP BY t0.c0, t1.c0;
SELECT t0.c0, t1.c0 FROM t0, t1, t2 WHERE (CAST('+y&|' AS NUMERIC)) GROUP BY t0.c0, t1.c0 UNION SELECT ALL t0.c0, t1.c0 FROM t0, t1, t2 WHERE ((NOT (CAST('+y&|' AS NUMERIC)))) GROUP BY t0.c0, t1.c0 UNION SELECT t0.c0, t1.c0 FROM t0, t1, t2 WHERE (((CAST('+y&|' AS NUMERIC)) ISNULL)) GROUP BY t0.c0, t1.c0;
SELECT ALL t0.c0, t1.c0 FROM t0, t1, t2 GROUP BY t0.c0, t1.c0;
SELECT t1.c0, t2.c0 FROM t2, t1 GROUP BY t1.c0, t2.c0;
SELECT t1.c0, t2.c0 FROM t2, t1 GROUP BY t1.c0, t2.c0 HAVING COUNT(t1.c0) UNION ALL SELECT t1.c0, t2.c0 FROM t2, t1 GROUP BY t1.c0, t2.c0 HAVING (NOT (COUNT(t1.c0))) UNION ALL SELECT t1.c0, t2.c0 FROM t2, t1 GROUP BY t1.c0, t2.c0 HAVING ((COUNT(t1.c0)) ISNULL);
SELECT t1.c0, t2.c0 FROM t2, t1 GROUP BY t1.c0, t2.c0;
SELECT t1.c0, t2.c0 FROM t2, t1 GROUP BY t1.c0, t2.c0 HAVING COUNT(t1.c0) UNION ALL SELECT t1.c0, t2.c0 FROM t2, t1 GROUP BY t1.c0, t2.c0 HAVING (NOT (COUNT(t1.c0))) UNION ALL SELECT t1.c0, t2.c0 FROM t2, t1 GROUP BY t1.c0, t2.c0 HAVING ((COUNT(t1.c0)) ISNULL);
SELECT t1.c0, t2.c0 FROM t2, t1 GROUP BY t1.c0, t2.c0;
SELECT ALL MAX(t1.c0) FROM t1 ORDER BY (+ (LENGTH(t1.c0)))  NULLS FIRST;
SELECT ALL t0.c0, t1.c0 FROM t1, t0;
SELECT t0.c0, t1.c0 FROM t1, t0 WHERE (((+ (t1.c0)) IN ())) UNION ALL SELECT t0.c0, t1.c0 FROM t1, t0 WHERE ((NOT (((+ (t1.c0)) IN ())))) UNION ALL SELECT t0.c0, t1.c0 FROM t1, t0 WHERE (((((+ (t1.c0)) IN ())) ISNULL));
SELECT ALL t0.c0, t1.c0 FROM t1, t0;
SELECT DISTINCT * FROM t1, t2;
SELECT DISTINCT * FROM t1, t2 WHERE ((((t1.c0)>(t2.c0)) IN ())) UNION SELECT DISTINCT * FROM t1, t2 WHERE ((NOT ((((t1.c0)>(t2.c0)) IN ())))) UNION SELECT DISTINCT * FROM t1, t2 WHERE ((((((t1.c0)>(t2.c0)) IN ())) ISNULL));
SELECT DISTINCT * FROM t1, t2;
SELECT t1.c0, t0.c0 FROM t1, t0 GROUP BY t1.c0, t0.c0;
SELECT t1.c0, t0.c0 FROM t1, t0 WHERE (CAST(NULL AS TEXT)) GROUP BY t1.c0, t0.c0 UNION SELECT ALL t1.c0, t0.c0 FROM t1, t0 WHERE ((NOT (CAST(NULL AS TEXT)))) GROUP BY t1.c0, t0.c0 UNION SELECT ALL t1.c0, t0.c0 FROM t1, t0 WHERE (((CAST(NULL AS TEXT)) ISNULL)) GROUP BY t1.c0, t0.c0;
SELECT t1.c0, t0.c0 FROM t1, t0 GROUP BY t1.c0, t0.c0;
SELECT t1.c0, t0.c0 FROM t0, t1, t2 GROUP BY t1.c0, t0.c0;
SELECT ALL t1.c0, t0.c0 FROM t0, t1, t2 GROUP BY t1.c0, t0.c0 HAVING NULL UNION ALL SELECT t1.c0, t0.c0 FROM t0, t1, t2 GROUP BY t1.c0, t0.c0 HAVING (NOT (NULL)) UNION ALL SELECT ALL t1.c0, t0.c0 FROM t0, t1, t2 GROUP BY t1.c0, t0.c0 HAVING ((NULL) ISNULL);
SELECT t1.c0, t0.c0 FROM t0, t1, t2 GROUP BY t1.c0, t0.c0;
SELECT ALL t1.c0, t0.c0 FROM t0, t1, t2 GROUP BY t1.c0, t0.c0 HAVING NULL UNION ALL SELECT t1.c0, t0.c0 FROM t0, t1, t2 GROUP BY t1.c0, t0.c0 HAVING (NOT (NULL)) UNION ALL SELECT ALL t1.c0, t0.c0 FROM t0, t1, t2 GROUP BY t1.c0, t0.c0 HAVING ((NULL) ISNULL);
SELECT t1.c0, t0.c0 FROM t0, t1, t2 GROUP BY t1.c0, t0.c0;
SELECT t2.c0, t1.c0 FROM t1, t2;
SELECT ALL t2.c0, t1.c0 FROM t1, t2 WHERE (CHANGES()) UNION ALL SELECT t2.c0, t1.c0 FROM t1, t2 WHERE ((NOT (CHANGES()))) UNION ALL SELECT ALL t2.c0, t1.c0 FROM t1, t2 WHERE (((CHANGES()) ISNULL));
SELECT t2.c0, t1.c0 FROM t1, t2;
SELECT DISTINCT t1.c0, t0.c0 FROM t1 RIGHT OUTER JOIN t0 ON json_array_length(((t0.c0)OR(t1.c0)));
SELECT DISTINCT t1.c0, t0.c0 FROM t1 RIGHT OUTER JOIN t0 ON json_array_length(((t0.c0)OR(t1.c0))) WHERE (805054958) UNION SELECT DISTINCT t1.c0, t0.c0 FROM t1 RIGHT OUTER JOIN t0 ON json_array_length(((t0.c0)OR(t1.c0))) WHERE ((NOT (805054958))) UNION SELECT DISTINCT t1.c0, t0.c0 FROM t1 RIGHT OUTER JOIN t0 ON json_array_length(((t0.c0)OR(t1.c0))) WHERE (((805054958) ISNULL));
SELECT DISTINCT t1.c0, t0.c0 FROM t1 RIGHT OUTER JOIN t0 ON json_array_length(((t0.c0)OR(t1.c0)));
SELECT t1.c0 FROM t0, t2, t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t0, t2, t1 WHERE (0.6825972740553112) GROUP BY t1.c0 UNION SELECT ALL t1.c0 FROM t0, t2, t1 WHERE ((NOT (0.6825972740553112))) GROUP BY t1.c0 UNION SELECT ALL t1.c0 FROM t0, t2, t1 WHERE (((0.6825972740553112) ISNULL)) GROUP BY t1.c0;
SELECT t1.c0 FROM t0, t2, t1 GROUP BY t1.c0;
SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0;
SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0 HAVING ((SUM(t2.c0)) ISNULL) UNION ALL SELECT t2.c0 FROM t2 GROUP BY t2.c0 HAVING (NOT (((SUM(t2.c0)) ISNULL))) UNION ALL SELECT t2.c0 FROM t2 GROUP BY t2.c0 HAVING ((((SUM(t2.c0)) ISNULL)) ISNULL);
SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0;
SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0 HAVING ((SUM(t2.c0)) ISNULL) UNION ALL SELECT t2.c0 FROM t2 GROUP BY t2.c0 HAVING (NOT (((SUM(t2.c0)) ISNULL))) UNION ALL SELECT t2.c0 FROM t2 GROUP BY t2.c0 HAVING ((((SUM(t2.c0)) ISNULL)) ISNULL);
SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0;
SELECT * FROM t2 INNER JOIN t0 ON CASE '*m'  WHEN ((t2.c0) NOT NULL) THEN ((((NULL)OR(t2.c0)))AND(t2.c0)) ELSE ((t2.c0) BETWEEN (t0.c0) AND (t2.c0)) END;
SELECT * FROM t2 INNER JOIN t0 ON CASE '*m'  WHEN ((t2.c0) NOT NULL) THEN ((((NULL)OR(t2.c0)))AND(t2.c0)) ELSE ((t2.c0) BETWEEN (t0.c0) AND (t2.c0)) END WHERE ('-2056740464') UNION ALL SELECT ALL * FROM t2 INNER JOIN t0 ON CASE '*m'  WHEN ((t2.c0) NOT NULL) THEN ((((NULL)OR(t2.c0)))AND(t2.c0)) ELSE ((t2.c0) BETWEEN (t0.c0) AND (t2.c0)) END WHERE ((NOT ('-2056740464'))) UNION ALL SELECT ALL * FROM t2 INNER JOIN t0 ON CASE '*m'  WHEN ((t2.c0) NOT NULL) THEN ((((NULL)OR(t2.c0)))AND(t2.c0)) ELSE ((t2.c0) BETWEEN (t0.c0) AND (t2.c0)) END WHERE ((('-2056740464') ISNULL));
SELECT * FROM t2 INNER JOIN t0 ON CASE '*m'  WHEN ((t2.c0) NOT NULL) THEN ((((NULL)OR(t2.c0)))AND(t2.c0)) ELSE ((t2.c0) BETWEEN (t0.c0) AND (t2.c0)) END;
SELECT DISTINCT * FROM t2, t0 INDEXED BY i28;
SELECT ALL t1.c0, t0.c0, t2.c0 FROM t2, t0 RIGHT OUTER JOIN t1 ON (((t2.c0) NOT BETWEEN (t0.c0) AND (t1.c0)) IN ()) GROUP BY t1.c0, t0.c0, t2.c0;
SELECT ALL t1.c0, t0.c0, t2.c0 FROM t2, t0 RIGHT OUTER JOIN t1 ON (((t2.c0) NOT BETWEEN (t0.c0) AND (t1.c0)) IN ()) WHERE (x'9795') GROUP BY t1.c0, t0.c0, t2.c0 UNION SELECT ALL t1.c0, t0.c0, t2.c0 FROM t2, t0 RIGHT OUTER JOIN t1 ON (((t2.c0) NOT BETWEEN (t0.c0) AND (t1.c0)) IN ()) WHERE ((NOT (x'9795'))) GROUP BY t1.c0, t0.c0, t2.c0 UNION SELECT t1.c0, t0.c0, t2.c0 FROM t2, t0 RIGHT OUTER JOIN t1 ON (((t2.c0) NOT BETWEEN (t0.c0) AND (t1.c0)) IN ()) WHERE (((x'9795') ISNULL)) GROUP BY t1.c0, t0.c0, t2.c0;
SELECT ALL t1.c0, t0.c0, t2.c0 FROM t2, t0 RIGHT OUTER JOIN t1 ON (((t2.c0) NOT BETWEEN (t0.c0) AND (t1.c0)) IN ()) GROUP BY t1.c0, t0.c0, t2.c0;
SELECT t2.c0 FROM t2 GROUP BY t2.c0;
SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0 HAVING AVG(COUNT(t2.c0)) UNION ALL SELECT t2.c0 FROM t2 GROUP BY t2.c0 HAVING (NOT (AVG(COUNT(t2.c0)))) UNION ALL SELECT t2.c0 FROM t2 GROUP BY t2.c0 HAVING ((AVG(COUNT(t2.c0))) ISNULL);
SELECT t1.c0 FROM t1;
SELECT ALL t1.c0 FROM t1 WHERE (0X166ef121) UNION ALL SELECT ALL t1.c0 FROM t1 WHERE ((NOT (0x166ef121))) UNION ALL SELECT t1.c0 FROM t1 WHERE (((0x166ef121) ISNULL));
SELECT t1.c0 FROM t1;
SELECT DISTINCT t1.c0, t0.c0 FROM t2, t0, t1;
SELECT DISTINCT t1.c0, t0.c0 FROM t2, t0, t1 WHERE (t1.c0) UNION SELECT DISTINCT t1.c0, t0.c0 FROM t2, t0, t1 WHERE ((NOT (t1.c0))) UNION SELECT DISTINCT t1.c0, t0.c0 FROM t2, t0, t1 WHERE (((t1.c0) ISNULL));
SELECT DISTINCT t1.c0, t0.c0 FROM t2, t0, t1;
SELECT t2.c0 FROM t2 GROUP BY t2.c0;
SELECT ALL t2.c0 FROM t2 WHERE (t2.c0) GROUP BY t2.c0 UNION SELECT ALL t2.c0 FROM t2 WHERE ((NOT (t2.c0))) GROUP BY t2.c0 UNION SELECT t2.c0 FROM t2 WHERE (((t2.c0) ISNULL)) GROUP BY t2.c0;
SELECT t2.c0 FROM t2 GROUP BY t2.c0;
SELECT ALL t0.c0, t1.c0 FROM t0 LEFT OUTER JOIN t1 ON ((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))/(t0.c0 COLLATE RTRIM)) GROUP BY t0.c0, t1.c0;
SELECT t0.c0, t1.c0 FROM t0 LEFT OUTER JOIN t1 ON ((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))/(t0.c0 COLLATE RTRIM)) GROUP BY t0.c0, t1.c0 HAVING ((((GROUP_CONCAT(t1.c0))%(MAX(COUNT(SUM(COUNT(x'')))))))||(TOTAL(t0.c0))) UNION ALL SELECT t0.c0, t1.c0 FROM t0 LEFT OUTER JOIN t1 ON ((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))/(t0.c0 COLLATE RTRIM)) GROUP BY t0.c0, t1.c0 HAVING (NOT (((((GROUP_CONCAT(t1.c0))%(MAX(COUNT(SUM(COUNT(x'')))))))||(TOTAL(t0.c0))))) UNION ALL SELECT ALL t0.c0, t1.c0 FROM t0 LEFT OUTER JOIN t1 ON ((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))/(t0.c0 COLLATE RTRIM)) GROUP BY t0.c0, t1.c0 HAVING ((((((GROUP_CONCAT(t1.c0))%(MAX(COUNT(SUM(COUNT(x'')))))))||(TOTAL(t0.c0)))) ISNULL);
SELECT SUM((((x'deaa')*(t0.c0)) IN ())) FROM t0 ORDER BY LOWER(NULL);
SELECT * FROM t2, t0, t1;
SELECT ALL * FROM t2, t0, t1 WHERE (t2.c0) UNION ALL SELECT ALL * FROM t2, t0, t1 WHERE ((NOT (t2.c0))) UNION ALL SELECT ALL * FROM t2, t0, t1 WHERE (((t2.c0) ISNULL));
SELECT * FROM t2, t0, t1;
SELECT DISTINCT t1.c0 FROM t1;
SELECT DISTINCT t1.c0 FROM t1 WHERE (((x'') BETWEEN (CASE t1.c0  WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END) AND ((t1.c0 IN ())))) UNION SELECT DISTINCT t1.c0 FROM t1 WHERE ((NOT (((x'') BETWEEN (CASE t1.c0  WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END) AND ((t1.c0 IN ())))))) UNION SELECT DISTINCT t1.c0 FROM t1 WHERE (((((x'') BETWEEN (CASE t1.c0  WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END) AND ((t1.c0 IN ())))) ISNULL));
SELECT DISTINCT t1.c0 FROM t1;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 WHERE (((t1.c0)>=(t1.c0)) COLLATE NOCASE) GROUP BY t1.c0 UNION SELECT ALL t1.c0 FROM t1 WHERE ((NOT (((t1.c0)>=(t1.c0)) COLLATE NOCASE))) GROUP BY t1.c0 UNION SELECT t1.c0 FROM t1 WHERE (((((t1.c0)>=(t1.c0)) COLLATE NOCASE) ISNULL)) GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t2.c0, t1.c0 FROM t2, t1, t0 GROUP BY t2.c0, t1.c0;
SELECT t2.c0, t1.c0 FROM t2, t1, t0 GROUP BY t2.c0, t1.c0 HAVING t1.c0 UNION ALL SELECT t2.c0, t1.c0 FROM t2, t1, t0 GROUP BY t2.c0, t1.c0 HAVING (NOT (t1.c0)) UNION ALL SELECT ALL t2.c0, t1.c0 FROM t2, t1, t0 GROUP BY t2.c0, t1.c0 HAVING ((t1.c0) ISNULL);
SELECT t2.c0, t1.c0 FROM t2, t1, t0 GROUP BY t2.c0, t1.c0;
SELECT t2.c0, t1.c0 FROM t2, t1, t0 GROUP BY t2.c0, t1.c0 HAVING t1.c0 UNION ALL SELECT t2.c0, t1.c0 FROM t2, t1, t0 GROUP BY t2.c0, t1.c0 HAVING (NOT (t1.c0)) UNION ALL SELECT ALL t2.c0, t1.c0 FROM t2, t1, t0 GROUP BY t2.c0, t1.c0 HAVING ((t1.c0) ISNULL);
SELECT t2.c0, t1.c0 FROM t2, t1, t0 GROUP BY t2.c0, t1.c0;
SELECT ALL MAX(CASE (t2.c0 IN ())  WHEN ((t0.c0)GLOB('-171354455')) THEN ((t2.c0)*(t1.c0)) WHEN CASE t2.c0  WHEN t2.c0 THEN 0Xffffffffae221c15 END THEN 0x4023dd49 WHEN ((((t0.c0)OR(t2.c0)))OR(t1.c0)) THEN t1.c0 ELSE t2.c0 END) FROM t1, t2, t0;
SELECT * FROM t1 LEFT OUTER JOIN t0 ON t1.c0 COLLATE RTRIM;
SELECT * FROM t1 LEFT OUTER JOIN t0 ON t1.c0 COLLATE RTRIM WHERE ((NOT (((t1.c0) NOT NULL)))) ORDER BY CAST(((t1.c0)<=(t0.c0)) AS BLOB) ASC;
SELECT ALL * FROM t1 LEFT OUTER JOIN t0 ON t1.c0 COLLATE RTRIM WHERE ((NOT ((NOT (((t1.c0) NOT NULL)))))) ORDER BY CAST(((t1.c0)<=(t0.c0)) AS BLOB) ASC;
SELECT * FROM t1 LEFT OUTER JOIN t0 ON t1.c0 COLLATE RTRIM WHERE ((((NOT (((t1.c0) NOT NULL)))) ISNULL)) ORDER BY CAST(((t1.c0)<=(t0.c0)) AS BLOB) ASC;
SELECT * FROM t1 LEFT OUTER JOIN t0 ON t1.c0 COLLATE RTRIM;
SELECT DISTINCT t2.c0, t1.c0, t0.c0 FROM t2 LEFT OUTER JOIN t0 ON CAST(CAST(t0.c0 AS INTEGER) AS BLOB) RIGHT OUTER JOIN t1 ON ((((((('', t0.c0, t0.c0))<>((t0.c0, t2.c0, t1.c0))))AND(((0.2461253895315546) NOT BETWEEN (t2.c0) AND (t1.c0)))))AND(CAST(t1.c0 AS NUMERIC)));
SELECT DISTINCT t2.c0, t1.c0, t0.c0 FROM t2 LEFT OUTER JOIN t0 ON CAST(CAST(t0.c0 AS INTEGER) AS BLOB) RIGHT OUTER JOIN t1 ON ((((((('', t0.c0, t0.c0))<>((t0.c0, t2.c0, t1.c0))))AND(((0.2461253895315546) NOT BETWEEN (t2.c0) AND (t1.c0)))))AND(CAST(t1.c0 AS NUMERIC))) WHERE (((t0.c0) ISNULL)) UNION SELECT DISTINCT t2.c0, t1.c0, t0.c0 FROM t2 LEFT OUTER JOIN t0 ON CAST(CAST(t0.c0 AS INTEGER) AS BLOB) RIGHT OUTER JOIN t1 ON ((((((('', t0.c0, t0.c0))<>((t0.c0, t2.c0, t1.c0))))AND(((0.2461253895315546) NOT BETWEEN (t2.c0) AND (t1.c0)))))AND(CAST(t1.c0 AS NUMERIC))) WHERE ((NOT (((t0.c0) ISNULL)))) UNION SELECT DISTINCT t2.c0, t1.c0, t0.c0 FROM t2 LEFT OUTER JOIN t0 ON CAST(CAST(t0.c0 AS INTEGER) AS BLOB) RIGHT OUTER JOIN t1 ON ((((((('', t0.c0, t0.c0))!=((t0.c0, t2.c0, t1.c0))))AND(((0.2461253895315546) NOT BETWEEN (t2.c0) AND (t1.c0)))))AND(CAST(t1.c0 AS NUMERIC))) WHERE (((((t0.c0) ISNULL)) ISNULL));
SELECT DISTINCT t2.c0, t1.c0, t0.c0 FROM t2 LEFT OUTER JOIN t0 ON CAST(CAST(t0.c0 AS INTEGER) AS BLOB) RIGHT OUTER JOIN t1 ON ((((((('', t0.c0, t0.c0))<>((t0.c0, t2.c0, t1.c0))))AND(((0.2461253895315546) NOT BETWEEN (t2.c0) AND (t1.c0)))))AND(CAST(t1.c0 AS NUMERIC)));
SELECT ALL t1.c0, t0.c0 FROM t1, t2, t0 GROUP BY t1.c0, t0.c0;
SELECT ALL t1.c0, t0.c0 FROM t1, t2, t0 WHERE ((((t2.c0 IN (t1.c0, t0.c0))) ISNULL)) GROUP BY t1.c0, t0.c0 UNION SELECT t1.c0, t0.c0 FROM t1, t2, t0 WHERE ((NOT ((((t2.c0 IN (t1.c0, t0.c0))) ISNULL)))) GROUP BY t1.c0, t0.c0 UNION SELECT t1.c0, t0.c0 FROM t1, t2, t0 WHERE ((((((t2.c0 IN (t1.c0, t0.c0))) ISNULL)) ISNULL)) GROUP BY t1.c0, t0.c0;
SELECT ALL t1.c0, t0.c0 FROM t1, t2, t0 GROUP BY t1.c0, t0.c0;
SELECT ALL t2.c0 FROM t1, t0, t2 GROUP BY t2.c0;
SELECT ALL t2.c0 FROM t1, t0, t2 GROUP BY t2.c0 HAVING ((((((((((GROUP_CONCAT(MIN(t1.c0))) BETWEEN (t2.c0) AND (MIN(AVG(SUM(0xffffffffed79c064))))))OR(MAX(MAX(t0.c0)))))OR(TOTAL(GROUP_CONCAT(t0.c0)))))AND(((AVG(t1.c0)) ISNULL))))AND(GROUP_CONCAT(t2.c0))) UNION ALL SELECT t2.c0 FROM t1, t0, t2 GROUP BY t2.c0 HAVING (NOT (((((((((((GROUP_CONCAT(MIN(t1.c0))) BETWEEN (t2.c0) AND (MIN(AVG(SUM(0Xffffffffed79c064))))))OR(MAX(MAX(t0.c0)))))OR(TOTAL(GROUP_CONCAT(t0.c0)))))AND(((AVG(t1.c0)) ISNULL))))AND(GROUP_CONCAT(t2.c0))))) UNION ALL SELECT t2.c0 FROM t1, t0, t2 GROUP BY t2.c0 HAVING ((((((((((((GROUP_CONCAT(MIN(t1.c0))) BETWEEN (t2.c0) AND (MIN(AVG(SUM(0xffffffffed79c064))))))OR(MAX(MAX(t0.c0)))))OR(TOTAL(GROUP_CONCAT(t0.c0)))))AND(((AVG(t1.c0)) ISNULL))))AND(GROUP_CONCAT(t2.c0)))) ISNULL);
SELECT MAX(((t1.c0 COLLATE BINARY) BETWEEN (CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 ELSE t1.c0 END) AND (NULL))) FROM t1;
SELECT * FROM t0, t1;
SELECT * FROM t0, t1 WHERE (((((t0.c0)+(t1.c0)))%(((t0.c0)-(t0.c0))))) UNION ALL SELECT ALL * FROM t0, t1 WHERE ((NOT (((((t0.c0)+(t1.c0)))%(((t0.c0)-(t0.c0))))))) UNION ALL SELECT * FROM t0, t1 WHERE (((((((t0.c0)+(t1.c0)))%(((t0.c0)-(t0.c0))))) ISNULL));
SELECT * FROM t0, t1;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (json_object(((t0.c0)<=(t0.c0)), NULL)) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (json_object(((t0.c0)<=(t0.c0)), NULL)))) UNION SELECT DISTINCT * FROM t0 WHERE (((json_object(((t0.c0)<=(t0.c0)), NULL)) ISNULL));
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 WHERE (((((t1.c0)>(t1.c0))) NOTNULL)) GROUP BY t1.c0 UNION SELECT ALL t1.c0 FROM t1 WHERE ((NOT (((((t1.c0)>(t1.c0))) NOTNULL)))) GROUP BY t1.c0 UNION SELECT t1.c0 FROM t1 WHERE (((((((t1.c0)>(t1.c0))) NOTNULL)) ISNULL)) GROUP BY t1.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t2.c0 FROM t0, t2 GROUP BY t2.c0;
SELECT ALL t2.c0 FROM t0, t2 GROUP BY t2.c0 HAVING 0xd8332e6 UNION ALL SELECT ALL t2.c0 FROM t0, t2 GROUP BY t2.c0 HAVING (NOT (0xd8332e6)) UNION ALL SELECT ALL t2.c0 FROM t0, t2 GROUP BY t2.c0 HAVING ((0xd8332e6) ISNULL);
SELECT t2.c0 FROM t0, t2 GROUP BY t2.c0;
SELECT ALL t2.c0 FROM t0, t2 GROUP BY t2.c0 HAVING 0xd8332e6 UNION ALL SELECT ALL t2.c0 FROM t0, t2 GROUP BY t2.c0 HAVING (NOT (0xd8332e6)) UNION ALL SELECT ALL t2.c0 FROM t0, t2 GROUP BY t2.c0 HAVING ((0xd8332e6) ISNULL);
SELECT t2.c0 FROM t0, t2 GROUP BY t2.c0;
SELECT * FROM t2 INNER JOIN t1 ON ((((((t2.c0)==(t2.c0)))AND(t2.c0 COLLATE BINARY)))OR(CAST(t2.c0 AS REAL)));
SELECT * FROM t2 INNER JOIN t1 ON ((((((t2.c0)==(t2.c0)))AND(t2.c0 COLLATE BINARY)))OR(CAST(t2.c0 AS REAL))) WHERE (LENGTH(load_extension(t2.c0))) UNION ALL SELECT * FROM t2 INNER JOIN t1 ON ((((((t2.c0)=(t2.c0)))AND(t2.c0 COLLATE BINARY)))OR(CAST(t2.c0 AS REAL))) WHERE ((NOT (LENGTH(load_extension(t2.c0))))) UNION ALL SELECT * FROM t2 INNER JOIN t1 ON ((((((t2.c0)==(t2.c0)))AND(t2.c0 COLLATE BINARY)))OR(CAST(t2.c0 AS REAL))) WHERE (((LENGTH(load_extension(t2.c0))) ISNULL));
SELECT DISTINCT * FROM t1, t2, t0;
SELECT DISTINCT * FROM t1, t2, t0 WHERE (((+ (t2.c0)) IN ())) UNION SELECT DISTINCT * FROM t1, t2, t0 WHERE ((NOT (((+ (t2.c0)) IN ())))) UNION SELECT DISTINCT * FROM t1, t2, t0 WHERE (((((+ (t2.c0)) IN ())) ISNULL));
SELECT DISTINCT * FROM t1, t2, t0;
SELECT t0.c0 FROM t2 CROSS JOIN t0 ON (~ (((t2.c0) NOT BETWEEN (t0.c0) AND (x'')))) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t2 CROSS JOIN t0 ON (~ (((t2.c0) NOT BETWEEN (t0.c0) AND (x'')))) WHERE (COALESCE(DATE(t2.c0, t0.c0, t2.c0), ((((((((t0.c0)OR(t2.c0)))OR(t0.c0)))OR(t2.c0)))AND(t0.c0)), ((t2.c0) IS FALSE), TRIM(DISTINCT t0.c0, t0.c0))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t2 CROSS JOIN t0 ON (~ (((t2.c0) NOT BETWEEN (t0.c0) AND (x'')))) WHERE ((NOT (COALESCE(DATE(t2.c0, t0.c0, t2.c0), ((((((((t0.c0)OR(t2.c0)))OR(t0.c0)))OR(t2.c0)))AND(t0.c0)), ((t2.c0) IS FALSE), TRIM(DISTINCT t0.c0, t0.c0))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t2 CROSS JOIN t0 ON (~ (((t2.c0) NOT BETWEEN (t0.c0) AND (x'')))) WHERE (((COALESCE(DATE(t2.c0, t0.c0, t2.c0), ((((((((t0.c0)OR(t2.c0)))OR(t0.c0)))OR(t2.c0)))AND(t0.c0)), ((t2.c0) IS FALSE), TRIM(DISTINCT t0.c0, t0.c0))) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t2 CROSS JOIN t0 ON (~ (((t2.c0) NOT BETWEEN (t0.c0) AND (x'')))) GROUP BY t0.c0;
SELECT t2.c0 FROM t2 CROSS JOIN t1 ON t1.c0 GROUP BY t2.c0;
SELECT ALL t2.c0 FROM t2 CROSS JOIN t1 ON t1.c0 GROUP BY t2.c0 HAVING ABS(DISTINCT ((MIN(MAX(COUNT(MAX(t1.c0)))))LIKE(t2.c0))) UNION ALL SELECT t2.c0 FROM t2 CROSS JOIN t1 ON t1.c0 GROUP BY t2.c0 HAVING (NOT (ABS(DISTINCT ((MIN(MAX(COUNT(MAX(t1.c0)))))LIKE(t2.c0))))) UNION ALL SELECT ALL t2.c0 FROM t2 CROSS JOIN t1 ON t1.c0 GROUP BY t2.c0 HAVING ((ABS(DISTINCT ((MIN(MAX(COUNT(MAX(t1.c0)))))LIKE(t2.c0)))) ISNULL);
SELECT * FROM t0, t2, t1;
SELECT * FROM t0, t2, t1 WHERE ((CAST(t2.c0 AS BLOB) IN ())) UNION ALL SELECT * FROM t0, t2, t1 WHERE ((NOT ((CAST(t2.c0 AS BLOB) IN ())))) UNION ALL SELECT * FROM t0, t2, t1 WHERE ((((CAST(t2.c0 AS BLOB) IN ())) ISNULL));
SELECT * FROM t0, t2, t1;
SELECT DISTINCT t1.c0, t2.c0, t0.c0 FROM t0, t2, t1;
SELECT DISTINCT t1.c0, t2.c0, t0.c0 FROM t0, t2, t1 WHERE ((json_quote(t2.c0) IN ())) UNION SELECT DISTINCT t1.c0, t2.c0, t0.c0 FROM t0, t2, t1 WHERE ((NOT ((json_quote(t2.c0) IN ())))) UNION SELECT DISTINCT t1.c0, t2.c0, t0.c0 FROM t0, t2, t1 WHERE ((((json_quote(t2.c0) IN ())) ISNULL));
SELECT DISTINCT t1.c0, t2.c0, t0.c0 FROM t0, t2, t1;
SELECT ALL t2.c0 FROM t2, t1 GROUP BY t2.c0;
SELECT t2.c0 FROM t2, t1 WHERE (t2.c0 COLLATE BINARY) GROUP BY t2.c0 UNION SELECT ALL t2.c0 FROM t2, t1 WHERE ((NOT (t2.c0 COLLATE BINARY))) GROUP BY t2.c0 UNION SELECT ALL t2.c0 FROM t2, t1 WHERE (((t2.c0 COLLATE BINARY) ISNULL)) GROUP BY t2.c0;
SELECT ALL t2.c0 FROM t2, t1 GROUP BY t2.c0;
SELECT ALL t2.c0 FROM t2, t0 GROUP BY t2.c0;
SELECT ALL t2.c0 FROM t2, t0 GROUP BY t2.c0 HAVING NULL UNION ALL SELECT ALL t2.c0 FROM t2, t0 GROUP BY t2.c0 HAVING (NOT (NULL)) UNION ALL SELECT ALL t2.c0 FROM t2, t0 GROUP BY t2.c0 HAVING ((NULL) ISNULL);
SELECT ALL t2.c0 FROM t2, t0 GROUP BY t2.c0;
SELECT ALL t2.c0 FROM t2, t0 GROUP BY t2.c0 HAVING NULL UNION ALL SELECT ALL t2.c0 FROM t2, t0 GROUP BY t2.c0 HAVING (NOT (NULL)) UNION ALL SELECT ALL t2.c0 FROM t2, t0 GROUP BY t2.c0 HAVING ((NULL) ISNULL);
SELECT ALL t2.c0 FROM t2, t0 GROUP BY t2.c0;
SELECT ALL MAX(((((t2.c0) NOT BETWEEN (t1.c0) AND (t1.c0))) ISNULL)) FROM t2, t1;
SELECT * FROM t2, t0;
SELECT * FROM t2, t0 WHERE ('1015983137') UNION ALL SELECT * FROM t2, t0 NOT INDEXED WHERE ((NOT ('1015983137'))) UNION ALL SELECT ALL * FROM t2, t0 WHERE ((('1015983137') ISNULL));
SELECT * FROM t2, t0;
SELECT DISTINCT t2.c0, t1.c0, t0.c0 FROM t0, t1 INNER JOIN t2 ON ((((((t1.c0)GLOB(t2.c0)))OR(((t1.c0) IS FALSE))))OR(((NULL)LIKE(t1.c0))));
SELECT DISTINCT t2.c0, t1.c0, t0.c0 FROM t0, t1 INNER JOIN t2 ON ((((((t1.c0)GLOB(t2.c0)))OR(((t1.c0) IS FALSE))))OR(((NULL)LIKE(t1.c0)))) WHERE (CASE CASE t0.c0  WHEN t1.c0 THEN t2.c0 END  WHEN (t1.c0 IN ()) THEN (((t1.c0, t0.c0, t0.c0))<=((t2.c0, NULL, t2.c0))) WHEN ((t2.c0)*('瓪\n7	')) THEN CAST(t0.c0 AS REAL) WHEN MIN(t0.c0, t0.c0) THEN t0.c0 COLLATE NOCASE END) UNION SELECT DISTINCT t2.c0, t1.c0, t0.c0 FROM t0, t1 INNER JOIN t2 ON ((((((t1.c0)GLOB(t2.c0)))OR(((t1.c0) IS FALSE))))OR(((NULL)LIKE(t1.c0)))) WHERE ((NOT (CASE CASE t0.c0  WHEN t1.c0 THEN t2.c0 END  WHEN (t1.c0 IN ()) THEN (((t1.c0, t0.c0, t0.c0))<=((t2.c0, NULL, t2.c0))) WHEN ((t2.c0)*('瓪\n7	')) THEN CAST(t0.c0 AS REAL) WHEN MIN(t0.c0, t0.c0) THEN t0.c0 COLLATE NOCASE END))) UNION SELECT DISTINCT t2.c0, t1.c0, t0.c0 FROM t0, t1 INNER JOIN t2 ON ((((((t1.c0)GLOB(t2.c0)))OR(((t1.c0) IS FALSE))))OR(((NULL)LIKE(t1.c0)))) WHERE (((CASE CASE t0.c0  WHEN t1.c0 THEN t2.c0 END  WHEN (t1.c0 IN ()) THEN (((t1.c0, t0.c0, t0.c0))<=((t2.c0, NULL, t2.c0))) WHEN ((t2.c0)*('瓪\n7	')) THEN CAST(t0.c0 AS REAL) WHEN MIN(t0.c0, t0.c0) THEN t0.c0 COLLATE NOCASE END) ISNULL));
SELECT DISTINCT t2.c0, t1.c0, t0.c0 FROM t0, t1 INNER JOIN t2 ON ((((((t1.c0)GLOB(t2.c0)))OR(((t1.c0) IS FALSE))))OR(((NULL)LIKE(t1.c0))));
SELECT ALL t1.c0 FROM t0, t1, t2 GROUP BY t1.c0;
SELECT t1.c0 FROM t0, t1, t2 WHERE (CASE CAST(t2.c0 AS REAL)  WHEN t0.c0 THEN ((((t2.c0)OR(t1.c0)))AND(t0.c0)) WHEN (((t0.c0, t1.c0, t2.c0)) NOT BETWEEN ((t0.c0, t2.c0, t2.c0)) AND ((t2.c0, t1.c0, t1.c0))) THEN ((t2.c0) NOT NULL) WHEN load_extension(t0.c0) THEN (t0.c0 IN ()) ELSE (((t2.c0)) NOT BETWEEN ((t1.c0)) AND ((t1.c0))) END) GROUP BY t1.c0 UNION SELECT ALL t1.c0 FROM t0, t1, t2 WHERE ((NOT (CASE CAST(t2.c0 AS REAL)  WHEN t0.c0 THEN ((((t2.c0)OR(t1.c0)))AND(t0.c0)) WHEN (((t0.c0, t1.c0, t2.c0)) NOT BETWEEN ((t0.c0, t2.c0, t2.c0)) AND ((t2.c0, t1.c0, t1.c0))) THEN ((t2.c0) NOT NULL) WHEN load_extension(t0.c0) THEN (t0.c0 IN ()) ELSE (((t2.c0)) NOT BETWEEN ((t1.c0)) AND ((t1.c0))) END))) GROUP BY t1.c0 UNION SELECT t1.c0 FROM t0, t1, t2 WHERE (((CASE CAST(t2.c0 AS REAL)  WHEN t0.c0 THEN ((((t2.c0)OR(t1.c0)))AND(t0.c0)) WHEN (((t0.c0, t1.c0, t2.c0)) NOT BETWEEN ((t0.c0, t2.c0, t2.c0)) AND ((t2.c0, t1.c0, t1.c0))) THEN ((t2.c0) NOT NULL) WHEN load_extension(t0.c0) THEN (t0.c0 IN ()) ELSE (((t2.c0)) NOT BETWEEN ((t1.c0)) AND ((t1.c0))) END) ISNULL)) GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t0, t1, t2 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 CROSS JOIN t0 ON (((((3.81532468E8) ISNULL), CAST(t1.c0 AS INTEGER), ((((t0.c0)OR(t0.c0)))AND(t0.c0)), ((((t0.c0)OR(t1.c0)))AND(t1.c0)), ((t0.c0) NOTNULL)))<=((((t0.c0) ISNULL), CASE WHEN t1.c0 THEN t0.c0 END, ((t1.c0)>>(t1.c0)), CASE ''  WHEN t1.c0 THEN t0.c0 ELSE t0.c0 END, ((t1.c0)>=(t1.c0))))) GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 CROSS JOIN t0 ON (((((3.81532468E8) ISNULL), CAST(t1.c0 AS INTEGER), ((((t0.c0)OR(t0.c0)))AND(t0.c0)), ((((t0.c0)OR(t1.c0)))AND(t1.c0)), ((t0.c0) NOTNULL)))<=((((t0.c0) ISNULL), CASE WHEN t1.c0 THEN t0.c0 END, ((t1.c0)>>(t1.c0)), CASE ''  WHEN t1.c0 THEN t0.c0 ELSE t0.c0 END, ((t1.c0)>=(t1.c0))))) GROUP BY t1.c0 HAVING GROUP_CONCAT(COUNT(t0.c0)) UNION ALL SELECT ALL t1.c0 FROM t1 CROSS JOIN t0 ON (((((3.81532468E8) ISNULL), CAST(t1.c0 AS INTEGER), ((((t0.c0)OR(t0.c0)))AND(t0.c0)), ((((t0.c0)OR(t1.c0)))AND(t1.c0)), ((t0.c0) NOTNULL)))<=((((t0.c0) ISNULL), CASE WHEN t1.c0 THEN t0.c0 END, ((t1.c0)>>(t1.c0)), CASE ''  WHEN t1.c0 THEN t0.c0 ELSE t0.c0 END, ((t1.c0)>=(t1.c0))))) GROUP BY t1.c0 HAVING (NOT (GROUP_CONCAT(COUNT(t0.c0)))) UNION ALL SELECT ALL t1.c0 FROM t1 CROSS JOIN t0 ON (((((3.81532468E8) ISNULL), CAST(t1.c0 AS INTEGER), ((((t0.c0)OR(t0.c0)))AND(t0.c0)), ((((t0.c0)OR(t1.c0)))AND(t1.c0)), ((t0.c0) NOTNULL)))<=((((t0.c0) ISNULL), CASE WHEN t1.c0 THEN t0.c0 END, ((t1.c0)>>(t1.c0)), CASE ''  WHEN t1.c0 THEN t0.c0 ELSE t0.c0 END, ((t1.c0)>=(t1.c0))))) GROUP BY t1.c0 HAVING ((GROUP_CONCAT(COUNT(t0.c0))) ISNULL);
SELECT ALL t0.c0 FROM t0;
SELECT ALL t0.c0 FROM t0 WHERE (CASE WHEN t0.c0 THEN (~ (t0.c0)) END) UNION ALL SELECT t0.c0 FROM t0 WHERE ((NOT (CASE WHEN t0.c0 THEN (~ (t0.c0)) END))) UNION ALL SELECT ALL t0.c0 FROM t0 WHERE (((CASE WHEN t0.c0 THEN (~ (t0.c0)) END) ISNULL));
SELECT ALL t0.c0 FROM t0;
SELECT DISTINCT t0.c0, t1.c0, t2.c0 FROM t2, t1, t0;
SELECT DISTINCT t0.c0, t1.c0, t2.c0 FROM t2, t1, t0 WHERE (((((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0))) NOT BETWEEN ((x'3989' IN (t2.c0))) AND (CASE WHEN t0.c0 THEN t1.c0 ELSE t2.c0 END))) UNION SELECT DISTINCT t0.c0, t1.c0, t2.c0 FROM t2, t1, t0 WHERE ((NOT (((((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0))) NOT BETWEEN ((x'3989' IN (t2.c0))) AND (CASE WHEN t0.c0 THEN t1.c0 ELSE t2.c0 END))))) UNION SELECT DISTINCT t0.c0, t1.c0, t2.c0 FROM t2, t1, t0 WHERE (((((((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c0))) NOT BETWEEN ((x'3989' IN (t2.c0))) AND (CASE WHEN t0.c0 THEN t1.c0 ELSE t2.c0 END))) ISNULL));
SELECT DISTINCT t0.c0, t1.c0, t2.c0 FROM t2, t1, t0;
SELECT t1.c0, t0.c0 FROM t1, t0 GROUP BY t1.c0, t0.c0;
SELECT ALL t1.c0, t0.c0 FROM t1, t0 WHERE (CASE ((t1.c0) BETWEEN (t1.c0) AND (t1.c0))  WHEN ((((((((t1.c0)OR('1116562627')))OR(t1.c0)))OR(t0.c0)))AND(x'')) THEN ((((((((t0.c0)AND(t0.c0)))AND(0.03847466149763068)))AND(t0.c0)))OR(t0.c0)) ELSE CASE t1.c0  WHEN t0.c0 THEN t1.c0 ELSE t1.c0 END END) GROUP BY t1.c0, t0.c0 UNION SELECT t1.c0, t0.c0 FROM t1, t0 WHERE ((NOT (CASE ((t1.c0) BETWEEN (t1.c0) AND (t1.c0))  WHEN ((((((((t1.c0)OR('1116562627')))OR(t1.c0)))OR(t0.c0)))AND(x'')) THEN ((((((((t0.c0)AND(t0.c0)))AND(0.03847466149763068)))AND(t0.c0)))OR(t0.c0)) ELSE CASE t1.c0  WHEN t0.c0 THEN t1.c0 ELSE t1.c0 END END))) GROUP BY t1.c0, t0.c0 UNION SELECT ALL t1.c0, t0.c0 FROM t1, t0 WHERE (((CASE ((t1.c0) BETWEEN (t1.c0) AND (t1.c0))  WHEN ((((((((t1.c0)OR('1116562627')))OR(t1.c0)))OR(t0.c0)))AND(x'')) THEN ((((((((t0.c0)AND(t0.c0)))AND(0.03847466149763068)))AND(t0.c0)))OR(t0.c0)) ELSE CASE t1.c0  WHEN t0.c0 THEN t1.c0 ELSE t1.c0 END END) ISNULL)) GROUP BY t1.c0, t0.c0;
SELECT t1.c0, t0.c0 FROM t1, t0 GROUP BY t1.c0, t0.c0;
SELECT t1.c0 FROM t1, t2 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1, t2 GROUP BY t1.c0 HAVING MAX(GROUP_CONCAT(t1.c0)) UNION ALL SELECT t1.c0 FROM t1, t2 GROUP BY t1.c0 HAVING (NOT (MAX(GROUP_CONCAT(t1.c0)))) UNION ALL SELECT ALL t1.c0 FROM t1, t2 GROUP BY t1.c0 HAVING ((MAX(GROUP_CONCAT(t1.c0))) ISNULL);
SELECT ALL * FROM t2, t0, t1;
SELECT ALL * FROM t2, t0, t1 WHERE (t1.c0) UNION ALL SELECT ALL * FROM t2, t0, t1 WHERE ((NOT (t1.c0))) UNION ALL SELECT * FROM t2, t0, t1 WHERE (((t1.c0) ISNULL));
SELECT ALL * FROM t2, t0, t1;
SELECT DISTINCT * FROM t1;
SELECT DISTINCT * FROM t1 WHERE (((((t1.c0) NOT BETWEEN (t1.c0) AND (NULL)))IS(NULL))) UNION SELECT DISTINCT * FROM t1 WHERE ((NOT (((((t1.c0) NOT BETWEEN (t1.c0) AND (NULL)))IS(NULL))))) UNION SELECT DISTINCT * FROM t1 WHERE (((((((t1.c0) NOT BETWEEN (t1.c0) AND (NULL)))IS(NULL))) ISNULL));
SELECT DISTINCT * FROM t1;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 WHERE (((((t1.c0)-(t1.c0))) NOTNULL)) GROUP BY t1.c0 UNION SELECT t1.c0 FROM t1 WHERE ((NOT (((((t1.c0)-(t1.c0))) NOTNULL)))) GROUP BY t1.c0 UNION SELECT ALL t1.c0 FROM t1 WHERE (((((((t1.c0)-(t1.c0))) NOTNULL)) ISNULL)) GROUP BY t1.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t1.c0, t0.c0, t2.c0 FROM t1, t0, t2 GROUP BY t1.c0, t0.c0, t2.c0;
SELECT t1.c0, t0.c0, t2.c0 FROM t1, t0, t2 GROUP BY t1.c0, t0.c0, t2.c0 HAVING AVG(MAX(t2.c0)) UNION ALL SELECT ALL t1.c0, t0.c0, t2.c0 FROM t1, t0, t2 GROUP BY t1.c0, t0.c0, t2.c0 HAVING (NOT (AVG(MAX(t2.c0)))) UNION ALL SELECT ALL t1.c0, t0.c0, t2.c0 FROM t1, t0, t2 GROUP BY t1.c0, t0.c0, t2.c0 HAVING ((AVG(MAX(t2.c0))) ISNULL);
SELECT ALL * FROM t1, t0;
SELECT * FROM t1, t0 WHERE ((t1.c0 COLLATE NOCASE IN ((t0.c0 IN ())))) UNION ALL SELECT ALL * FROM t1, t0 WHERE ((NOT ((t1.c0 COLLATE NOCASE IN ((t0.c0 IN ())))))) UNION ALL SELECT * FROM t1, t0 WHERE ((((t1.c0 COLLATE NOCASE IN ((t0.c0 IN ())))) ISNULL));
SELECT ALL * FROM t1, t0;
SELECT DISTINCT t0.c0 FROM t0, t1;
SELECT DISTINCT t0.c0 FROM t0, t1 WHERE (t0.c0) UNION SELECT DISTINCT t0.c0 FROM t0, t1 WHERE ((NOT (t0.c0))) UNION SELECT DISTINCT t0.c0 FROM t0, t1 WHERE (((t0.c0) ISNULL));
SELECT DISTINCT t0.c0 FROM t0, t1;
SELECT ALL t1.c0, t0.c0 FROM t1, t0 GROUP BY t1.c0, t0.c0;
SELECT t1.c0, t0.c0 FROM t1, t0 WHERE (((0.792196117748063)IS(t1.c0))) GROUP BY t1.c0, t0.c0 UNION SELECT t1.c0, t0.c0 FROM t1, t0 WHERE ((NOT (((0.792196117748063)IS(t1.c0))))) GROUP BY t1.c0, t0.c0 UNION SELECT t1.c0, t0.c0 FROM t1, t0 WHERE (((((0.792196117748063)IS(t1.c0))) ISNULL)) GROUP BY t1.c0, t0.c0;
SELECT ALL t1.c0, t0.c0 FROM t1, t0 GROUP BY t1.c0, t0.c0;
SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0;
SELECT t2.c0 FROM t2 GROUP BY t2.c0 HAVING TOTAL(((MAX(t2.c0)) NOT BETWEEN (t2.c0) AND (t2.c0))) UNION ALL SELECT t2.c0 FROM t2 GROUP BY t2.c0 HAVING (NOT (TOTAL(((MAX(t2.c0)) NOT BETWEEN (t2.c0) AND (t2.c0))))) UNION ALL SELECT t2.c0 FROM t2 GROUP BY t2.c0 HAVING ((TOTAL(((MAX(t2.c0)) NOT BETWEEN (t2.c0) AND (t2.c0)))) ISNULL);
SELECT ALL t1.c0 FROM t1;
SELECT t1.c0 FROM t1 WHERE ((((((((((t1.c0)AND(-1.344139975E9)))AND(NULL)))AND(t1.c0)))OR(t1.c0)) IN ())) UNION ALL SELECT t1.c0 FROM t1 WHERE ((NOT ((((((((((t1.c0)AND(-1.344139975E9)))AND(NULL)))AND(t1.c0)))OR(t1.c0)) IN ())))) UNION ALL SELECT t1.c0 FROM t1 WHERE ((((((((((((t1.c0)AND(-1.344139975E9)))AND(NULL)))AND(t1.c0)))OR(t1.c0)) IN ())) ISNULL));
SELECT ALL t1.c0 FROM t1;
SELECT DISTINCT t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0 WHERE ((t0.c0 IN ()) COLLATE RTRIM) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((NOT ((t0.c0 IN ()) COLLATE RTRIM))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((((t0.c0 IN ()) COLLATE RTRIM) ISNULL));
SELECT DISTINCT t0.c0 FROM t0;
SELECT t0.c0, t2.c0 FROM t0 INNER JOIN t2 ON CAST(((t2.c0)<<(t2.c0)) AS BLOB) GROUP BY t0.c0, t2.c0;
SELECT ALL t0.c0, t2.c0 FROM t0 INNER JOIN t2 ON CAST(((t2.c0)<<(t2.c0)) AS BLOB) WHERE ((~ ('-1891817721'))) GROUP BY t0.c0, t2.c0 UNION SELECT t0.c0, t2.c0 FROM t0 INNER JOIN t2 ON CAST(((t2.c0)<<(t2.c0)) AS BLOB) WHERE ((NOT ((~ ('-1891817721'))))) GROUP BY t0.c0, t2.c0 UNION SELECT t0.c0, t2.c0 FROM t0 INNER JOIN t2 ON CAST(((t2.c0)<<(t2.c0)) AS BLOB) WHERE ((((~ ('-1891817721'))) ISNULL)) GROUP BY t0.c0, t2.c0;
SELECT t0.c0, t2.c0 FROM t0 INNER JOIN t2 ON CAST(((t2.c0)<<(t2.c0)) AS BLOB) GROUP BY t0.c0, t2.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((MIN(AVG(TOTAL(TOTAL(t0.c0)))) IN ()) IN (MAX(t0.c0), TOTAL(t0.c0))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (((MIN(AVG(TOTAL(TOTAL(t0.c0)))) IN ()) IN (MAX(t0.c0), TOTAL(t0.c0))))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((((MIN(AVG(TOTAL(TOTAL(t0.c0)))) IN ()) IN (MAX(t0.c0), TOTAL(t0.c0)))) ISNULL);
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((MIN(AVG(TOTAL(TOTAL(t0.c0)))) IN ()) IN (MAX(t0.c0), TOTAL(t0.c0))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (((MIN(AVG(TOTAL(TOTAL(t0.c0)))) IN ()) IN (MAX(t0.c0), TOTAL(t0.c0))))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((((MIN(AVG(TOTAL(TOTAL(t0.c0)))) IN ()) IN (MAX(t0.c0), TOTAL(t0.c0)))) ISNULL);
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT * FROM t2, t0;
SELECT * FROM t2, t0 WHERE (COALESCE(DISTINCT (((t0.c0, t2.c0, t2.c0)) NOT BETWEEN (('-1497939679', t0.c0, t2.c0)) AND ((t2.c0, t0.c0, t0.c0))), ((t0.c0)<=(t2.c0)))) UNION ALL SELECT ALL * FROM t2, t0 WHERE ((NOT (COALESCE(DISTINCT (((t0.c0, t2.c0, t2.c0)) NOT BETWEEN (('-1497939679', t0.c0, t2.c0)) AND ((t2.c0, t0.c0, t0.c0))), ((t0.c0)<=(t2.c0)))))) UNION ALL SELECT ALL * FROM t2, t0 WHERE (((COALESCE(DISTINCT (((t0.c0, t2.c0, t2.c0)) NOT BETWEEN (('-1497939679', t0.c0, t2.c0)) AND ((t2.c0, t0.c0, t0.c0))), ((t0.c0)<=(t2.c0)))) ISNULL));
SELECT * FROM t2, t0;
SELECT DISTINCT t2.c0, t0.c0 FROM t2 CROSS JOIN t1 ON ((0.8394085671783904)%((t0.c0 IN ()))) LEFT OUTER JOIN t0 ON t0.c0;
SELECT DISTINCT t2.c0, t0.c0 FROM t2 CROSS JOIN t1 ON ((0.8394085671783904)%((t0.c0 IN ()))) LEFT OUTER JOIN t0 ON t0.c0 WHERE (((((t2.c0)<=(t0.c0)))==((((t1.c0))>=(('I!LO}G')))))) UNION SELECT DISTINCT t2.c0, t0.c0 FROM t2 CROSS JOIN t1 ON ((0.8394085671783904)%((t0.c0 IN ()))) LEFT OUTER JOIN t0 ON t0.c0 WHERE ((NOT (((((t2.c0)<=(t0.c0)))=((((t1.c0))>=(('I!LO}G')))))))) UNION SELECT DISTINCT t2.c0, t0.c0 FROM t2 CROSS JOIN t1 ON ((0.8394085671783904)%((t0.c0 IN ()))) LEFT OUTER JOIN t0 ON t0.c0 WHERE (((((((t2.c0)<=(t0.c0)))==((((t1.c0))>=(('I!LO}G')))))) ISNULL));
SELECT DISTINCT t2.c0, t0.c0 FROM t2 CROSS JOIN t1 ON ((0.8394085671783904)%((t0.c0 IN ()))) LEFT OUTER JOIN t0 ON t0.c0;
SELECT ALL t1.c0 FROM t2 INNER JOIN t1 ON t0.c0 RIGHT OUTER JOIN t0 ON 867665184 GROUP BY t1.c0;
SELECT t2.c0 FROM t2 GROUP BY t2.c0;
SELECT t2.c0 FROM t2 GROUP BY t2.c0 HAVING AVG(t2.c0) UNION ALL SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0 HAVING (NOT (AVG(t2.c0))) UNION ALL SELECT t2.c0 FROM t2 GROUP BY t2.c0 HAVING ((AVG(t2.c0)) ISNULL);
SELECT t2.c0 FROM t2 GROUP BY t2.c0;
SELECT t2.c0 FROM t2 GROUP BY t2.c0 HAVING AVG(t2.c0) UNION ALL SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0 HAVING (NOT (AVG(t2.c0))) UNION ALL SELECT t2.c0 FROM t2 GROUP BY t2.c0 HAVING ((AVG(t2.c0)) ISNULL);
SELECT t2.c0 FROM t2 GROUP BY t2.c0;
SELECT t0.c0 FROM t0, t1;
SELECT ALL t0.c0 FROM t0, t1 WHERE (((t1.c0)IS(((t1.c0)>>(0.8793635062986389))))) UNION ALL SELECT ALL t0.c0 FROM t0, t1 WHERE ((NOT (((t1.c0)IS(((t1.c0)>>(0.8793635062986389))))))) UNION ALL SELECT ALL t0.c0 FROM t0, t1 NOT INDEXED WHERE (((((t1.c0)IS(((t1.c0)>>(0.8793635062986389))))) ISNULL));
SELECT t0.c0 FROM t0, t1;
SELECT DISTINCT t1.c0 FROM t1;
SELECT DISTINCT t1.c0 FROM t1 WHERE (t1.c0) UNION SELECT DISTINCT t1.c0 FROM t1 WHERE ((NOT (t1.c0))) UNION SELECT DISTINCT t1.c0 FROM t1 WHERE (((t1.c0) ISNULL));
SELECT DISTINCT t1.c0 FROM t1;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE (IFNULL(t0.c0, ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT (IFNULL(t0.c0, ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE (((IFNULL(t0.c0, ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (((('783034675') IS TRUE)) NOTNULL) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT ((((('783034675') IS TRUE)) NOTNULL))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (((((('783034675') IS TRUE)) NOTNULL)) ISNULL);
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (((('783034675') IS TRUE)) NOTNULL) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT ((((('783034675') IS TRUE)) NOTNULL))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (((((('783034675') IS TRUE)) NOTNULL)) ISNULL);
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t2.c0 FROM t2;
SELECT t2.c0 FROM t2 WHERE (((((((((((t2.c0)OR(t2.c0)))AND(t2.c0)))OR(t2.c0)))AND(t2.c0))) NOT BETWEEN (((t2.c0) BETWEEN (t2.c0) AND (t2.c0))) AND (CAST(t2.c0 AS BLOB)))) UNION ALL SELECT t2.c0 FROM t2 WHERE ((NOT (((((((((((t2.c0)OR(t2.c0)))AND(t2.c0)))OR(t2.c0)))AND(t2.c0))) NOT BETWEEN (((t2.c0) BETWEEN (t2.c0) AND (t2.c0))) AND (CAST(t2.c0 AS BLOB)))))) UNION ALL SELECT t2.c0 FROM t2 WHERE (((((((((((((t2.c0)OR(t2.c0)))AND(t2.c0)))OR(t2.c0)))AND(t2.c0))) NOT BETWEEN (((t2.c0) BETWEEN (t2.c0) AND (t2.c0))) AND (CAST(t2.c0 AS BLOB)))) ISNULL));
SELECT ALL t2.c0 FROM t2;
SELECT DISTINCT * FROM t0, t1;
SELECT DISTINCT * FROM t0, t1 WHERE ((((((t0.c0)<<(t1.c0))))!=((CASE WHEN t0.c0 THEN t1.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END)))) UNION SELECT DISTINCT * FROM t0, t1 WHERE ((NOT ((((((t0.c0)<<(t1.c0))))<>((CASE WHEN t0.c0 THEN t1.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END)))))) UNION SELECT DISTINCT * FROM t0, t1 WHERE ((((((((t0.c0)<<(t1.c0))))<>((CASE WHEN t0.c0 THEN t1.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END)))) ISNULL));
SELECT DISTINCT * FROM t0, t1;
SELECT ALL t0.c0 FROM t1, t0 INNER JOIN t2 ON CASE ((t1.c0)AND(t0.c0))  WHEN t2.c0 COLLATE BINARY THEN ((t1.c0)IS NOT(t1.c0)) WHEN ((t2.c0) BETWEEN (t0.c0) AND (t2.c0)) THEN (((0x623106a0, t2.c0, t1.c0))<=((t2.c0, t2.c0, t0.c0))) WHEN CAST(t0.c0 AS INTEGER) THEN ((t0.c0) NOT BETWEEN (t1.c0) AND (t0.c0)) WHEN (+ (t2.c0)) THEN ((((t1.c0)OR(t0.c0)))AND(t1.c0)) WHEN (((t0.c0))=((t0.c0))) THEN ((t1.c0) BETWEEN ('藨m') AND (t1.c0)) END GROUP BY t0.c0;
SELECT t0.c0 FROM t1, t0 INNER JOIN t2 ON CASE ((t1.c0)AND(t0.c0))  WHEN t2.c0 COLLATE BINARY THEN ((t1.c0)IS NOT(t1.c0)) WHEN ((t2.c0) BETWEEN (t0.c0) AND (t2.c0)) THEN (((0x623106a0, t2.c0, t1.c0))<=((t2.c0, t2.c0, t0.c0))) WHEN CAST(t0.c0 AS INTEGER) THEN ((t0.c0) NOT BETWEEN (t1.c0) AND (t0.c0)) WHEN (+ (t2.c0)) THEN ((((t1.c0)OR(t0.c0)))AND(t1.c0)) WHEN (((t0.c0))=((t0.c0))) THEN ((t1.c0) BETWEEN ('藨m') AND (t1.c0)) END WHERE (CASE t2.c0  WHEN ((t1.c0) BETWEEN (t0.c0) AND (t2.c0)) THEN CASE WHEN t2.c0 THEN t1.c0 END ELSE CASE t1.c0  WHEN t0.c0 THEN x'' ELSE t1.c0 END END) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t1, t0 INNER JOIN t2 ON CASE ((t1.c0)AND(t0.c0))  WHEN t2.c0 COLLATE BINARY THEN ((t1.c0)IS NOT(t1.c0)) WHEN ((t2.c0) BETWEEN (t0.c0) AND (t2.c0)) THEN (((0X623106a0, t2.c0, t1.c0))<=((t2.c0, t2.c0, t0.c0))) WHEN CAST(t0.c0 AS INTEGER) THEN ((t0.c0) NOT BETWEEN (t1.c0) AND (t0.c0)) WHEN (+ (t2.c0)) THEN ((((t1.c0)OR(t0.c0)))AND(t1.c0)) WHEN (((t0.c0))=((t0.c0))) THEN ((t1.c0) BETWEEN ('藨m') AND (t1.c0)) END WHERE ((NOT (CASE t2.c0  WHEN ((t1.c0) BETWEEN (t0.c0) AND (t2.c0)) THEN CASE WHEN t2.c0 THEN t1.c0 END ELSE CASE t1.c0  WHEN t0.c0 THEN x'' ELSE t1.c0 END END))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t1, t0 INNER JOIN t2 ON CASE ((t1.c0)AND(t0.c0))  WHEN t2.c0 COLLATE BINARY THEN ((t1.c0)IS NOT(t1.c0)) WHEN ((t2.c0) BETWEEN (t0.c0) AND (t2.c0)) THEN (((0x623106a0, t2.c0, t1.c0))<=((t2.c0, t2.c0, t0.c0))) WHEN CAST(t0.c0 AS INTEGER) THEN ((t0.c0) NOT BETWEEN (t1.c0) AND (t0.c0)) WHEN (+ (t2.c0)) THEN ((((t1.c0)OR(t0.c0)))AND(t1.c0)) WHEN (((t0.c0))==((t0.c0))) THEN ((t1.c0) BETWEEN ('藨m') AND (t1.c0)) END WHERE (((CASE t2.c0  WHEN ((t1.c0) BETWEEN (t0.c0) AND (t2.c0)) THEN CASE WHEN t2.c0 THEN t1.c0 END ELSE CASE t1.c0  WHEN t0.c0 THEN x'' ELSE t1.c0 END END) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t1, t0 INNER JOIN t2 ON CASE ((t1.c0)AND(t0.c0))  WHEN t2.c0 COLLATE BINARY THEN ((t1.c0)IS NOT(t1.c0)) WHEN ((t2.c0) BETWEEN (t0.c0) AND (t2.c0)) THEN (((0x623106a0, t2.c0, t1.c0))<=((t2.c0, t2.c0, t0.c0))) WHEN CAST(t0.c0 AS INTEGER) THEN ((t0.c0) NOT BETWEEN (t1.c0) AND (t0.c0)) WHEN (+ (t2.c0)) THEN ((((t1.c0)OR(t0.c0)))AND(t1.c0)) WHEN (((t0.c0))=((t0.c0))) THEN ((t1.c0) BETWEEN ('藨m') AND (t1.c0)) END GROUP BY t0.c0;
SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0;
SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0 HAVING ((COUNT(*))IS NOT(MAX(COUNT(GROUP_CONCAT(MIN(t2.c0)))))) UNION ALL SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0 HAVING (NOT (((COUNT(*))IS NOT(MAX(COUNT(GROUP_CONCAT(MIN(t2.c0)))))))) UNION ALL SELECT t2.c0 FROM t2 GROUP BY t2.c0 HAVING ((((COUNT(*))IS NOT(MAX(COUNT(GROUP_CONCAT(MIN(t2.c0))))))) ISNULL);
SELECT ALL t2.c0 FROM t2;
SELECT ALL t2.c0 FROM t2 WHERE (((((((((((((((((183835076)OR(CAST(t2.c0 AS REAL))))OR(((t2.c0)>=(t2.c0)))))AND(((t2.c0)==(x'')))))AND((NOT (t2.c0)))))AND(((t2.c0) BETWEEN (t2.c0) AND (NULL)))))AND((((t2.c0))!=((t2.c0))))))AND(t2.c0)))AND(((t2.c0) BETWEEN (t2.c0) AND (t2.c0))))) UNION ALL SELECT t2.c0 FROM t2 WHERE ((NOT (((((((((((((((((183835076)OR(CAST(t2.c0 AS REAL))))OR(((t2.c0)>=(t2.c0)))))AND(((t2.c0)=(x'')))))AND((NOT (t2.c0)))))AND(((t2.c0) BETWEEN (t2.c0) AND (NULL)))))AND((((t2.c0))<>((t2.c0))))))AND(t2.c0)))AND(((t2.c0) BETWEEN (t2.c0) AND (t2.c0))))))) UNION ALL SELECT ALL t2.c0 FROM t2 WHERE (((((((((((((((((((183835076)OR(CAST(t2.c0 AS REAL))))OR(((t2.c0)>=(t2.c0)))))AND(((t2.c0)==(x'')))))AND((NOT (t2.c0)))))AND(((t2.c0) BETWEEN (t2.c0) AND (NULL)))))AND((((t2.c0))!=((t2.c0))))))AND(t2.c0)))AND(((t2.c0) BETWEEN (t2.c0) AND (t2.c0))))) ISNULL));
SELECT ALL t2.c0 FROM t2;
SELECT DISTINCT t0.c0, t1.c0 FROM t0 FULL OUTER JOIN t1 ON ((((t1.c0)>(t1.c0)))<(t1.c0 COLLATE BINARY));
SELECT DISTINCT t0.c0, t1.c0 FROM t0 FULL OUTER JOIN t1 ON ((((t1.c0)>(t1.c0)))<(t1.c0 COLLATE BINARY)) WHERE ((((((t0.c0))<((t1.c0))))IS(((t0.c0)=(t1.c0))))) UNION SELECT DISTINCT t0.c0, t1.c0 FROM t0 FULL OUTER JOIN t1 ON ((((t1.c0)>(t1.c0)))<(t1.c0 COLLATE BINARY)) WHERE ((NOT ((((((t0.c0))<((t1.c0))))IS(((t0.c0)==(t1.c0))))))) UNION SELECT DISTINCT t0.c0, t1.c0 FROM t0 FULL OUTER JOIN t1 ON ((((t1.c0)>(t1.c0)))<(t1.c0 COLLATE BINARY)) WHERE ((((((((t0.c0))<((t1.c0))))IS(((t0.c0)=(t1.c0))))) ISNULL));
SELECT DISTINCT t0.c0, t1.c0 FROM t0 FULL OUTER JOIN t1 ON ((((t1.c0)>(t1.c0)))<(t1.c0 COLLATE BINARY));
SELECT ALL t2.c0 FROM t0, t2, t1 GROUP BY t2.c0;
SELECT ALL t2.c0 FROM t0, t2, t1 WHERE (t0.c0) GROUP BY t2.c0 UNION SELECT t2.c0 FROM t0, t2, t1 WHERE ((NOT (t0.c0))) GROUP BY t2.c0 UNION SELECT t2.c0 FROM t0, t2, t1 WHERE (((t0.c0) ISNULL)) GROUP BY t2.c0;
SELECT ALL t2.c0 FROM t0, t2, t1 GROUP BY t2.c0;
SELECT ALL t0.c0, t1.c0 FROM t1, t0 GROUP BY t0.c0, t1.c0;
SELECT ALL t0.c0, t1.c0 FROM t1, t0 GROUP BY t0.c0, t1.c0 HAVING GROUP_CONCAT(((AVG(t0.c0)) NOT BETWEEN (t0.c0) AND (MIN(COUNT(t1.c0))))) UNION ALL SELECT t0.c0, t1.c0 FROM t1, t0 GROUP BY t0.c0, t1.c0 HAVING (NOT (GROUP_CONCAT(((AVG(t0.c0)) NOT BETWEEN (t0.c0) AND (MIN(COUNT(t1.c0))))))) UNION ALL SELECT ALL t0.c0, t1.c0 FROM t1, t0 GROUP BY t0.c0, t1.c0 HAVING ((GROUP_CONCAT(((AVG(t0.c0)) NOT BETWEEN (t0.c0) AND (MIN(COUNT(t1.c0)))))) ISNULL);
SELECT ALL * FROM t1, t2;
SELECT * FROM t1, t2 WHERE (((CASE WHEN t2.c0 THEN t1.c0 ELSE t2.c0 END) NOTNULL)) UNION ALL SELECT * FROM t1, t2 WHERE ((NOT (((CASE WHEN t2.c0 THEN t1.c0 ELSE t2.c0 END) NOTNULL)))) UNION ALL SELECT ALL * FROM t1, t2 WHERE (((((CASE WHEN t2.c0 THEN t1.c0 ELSE t2.c0 END) NOTNULL)) ISNULL));
SELECT ALL * FROM t1, t2;
SELECT DISTINCT t0.c0, t1.c0 FROM t1, t2 CROSS JOIN t0 ON CAST(CAST(t2.c0 AS NUMERIC) AS INTEGER);
SELECT DISTINCT t0.c0, t1.c0 FROM t1, t2 CROSS JOIN t0 ON CAST(CAST(t2.c0 AS NUMERIC) AS INTEGER) WHERE (CAST(((((((((t0.c0)OR(t0.c0)))AND(x'')))OR(t1.c0)))AND(t0.c0)) AS BLOB)) UNION SELECT DISTINCT t0.c0, t1.c0 FROM t1, t2 CROSS JOIN t0 ON CAST(CAST(t2.c0 AS NUMERIC) AS INTEGER) WHERE ((NOT (CAST(((((((((t0.c0)OR(t0.c0)))AND(x'')))OR(t1.c0)))AND(t0.c0)) AS BLOB)))) UNION SELECT DISTINCT t0.c0, t1.c0 FROM t1, t2 CROSS JOIN t0 ON CAST(CAST(t2.c0 AS NUMERIC) AS INTEGER) WHERE (((CAST(((((((((t0.c0)OR(t0.c0)))AND(x'')))OR(t1.c0)))AND(t0.c0)) AS BLOB)) ISNULL));
SELECT DISTINCT t0.c0, t1.c0 FROM t1, t2 CROSS JOIN t0 ON CAST(CAST(t2.c0 AS NUMERIC) AS INTEGER);
SELECT t2.c0, t0.c0, t1.c0 FROM t2, t0, t1 GROUP BY t2.c0, t0.c0, t1.c0;
SELECT t2.c0, t0.c0, t1.c0 FROM t2, t0, t1 WHERE (((CAST(t0.c0 AS TEXT))/((t1.c0 IN ())))) GROUP BY t2.c0, t0.c0, t1.c0 UNION SELECT t2.c0, t0.c0, t1.c0 FROM t2, t0, t1 WHERE ((NOT (((CAST(t0.c0 AS TEXT))/((t1.c0 IN ())))))) GROUP BY t2.c0, t0.c0, t1.c0 UNION SELECT t2.c0, t0.c0, t1.c0 FROM t2, t0, t1 WHERE (((((CAST(t0.c0 AS TEXT))/((t1.c0 IN ())))) ISNULL)) GROUP BY t2.c0, t0.c0, t1.c0;
SELECT t2.c0, t0.c0, t1.c0 FROM t2, t0, t1 GROUP BY t2.c0, t0.c0, t1.c0;
SELECT ALL t2.c0, t1.c0 FROM t2 RIGHT OUTER JOIN t1 ON t0.c0 RIGHT OUTER JOIN t0 ON (((~ (t2.c0)))OR(((t2.c0)<=(t1.c0)))) GROUP BY t2.c0, t1.c0;
SELECT ALL * FROM t2, t1, t0;
SELECT ALL * FROM t2, t1, t0 WHERE (((CASE x''  WHEN -725916902 THEN t2.c0 END) IS TRUE)) UNION ALL SELECT * FROM t2, t1, t0 WHERE ((NOT (((CASE x''  WHEN -725916902 THEN t2.c0 END) IS TRUE)))) UNION ALL SELECT ALL * FROM t2, t1, t0 WHERE (((((CASE x''  WHEN -725916902 THEN t2.c0 END) IS TRUE)) ISNULL));
SELECT ALL * FROM t2, t1, t0;
SELECT DISTINCT * FROM t0, t2 LEFT OUTER JOIN t1 ON (~ (((t2.c0) NOT BETWEEN (t1.c0) AND (t2.c0))));
SELECT DISTINCT * FROM t0, t2 LEFT OUTER JOIN t1 ON (~ (((t2.c0) NOT BETWEEN (t1.c0) AND (t2.c0)))) WHERE (((((0x7250b23f)+(t2.c0)))-((((t0.c0, t1.c0, t2.c0)) BETWEEN ((t2.c0, t2.c0, t2.c0)) AND ((t1.c0, t1.c0, t0.c0)))))) UNION SELECT DISTINCT * FROM t0, t2 LEFT OUTER JOIN t1 ON (~ (((t2.c0) NOT BETWEEN (t1.c0) AND (t2.c0)))) WHERE ((NOT (((((0x7250b23f)+(t2.c0)))-((((t0.c0, t1.c0, t2.c0)) BETWEEN ((t2.c0, t2.c0, t2.c0)) AND ((t1.c0, t1.c0, t0.c0)))))))) UNION SELECT DISTINCT * FROM t0, t2 LEFT OUTER JOIN t1 ON (~ (((t2.c0) NOT BETWEEN (t1.c0) AND (t2.c0)))) WHERE (((((((0x7250b23f)+(t2.c0)))-((((t0.c0, t1.c0, t2.c0)) BETWEEN ((t2.c0, t2.c0, t2.c0)) AND ((t1.c0, t1.c0, t0.c0)))))) ISNULL));
SELECT DISTINCT * FROM t0, t2 LEFT OUTER JOIN t1 ON (~ (((t2.c0) NOT BETWEEN (t1.c0) AND (t2.c0))));
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 WHERE (((~ (t0.c0)) IN ('-1999396252'))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT (((~ (t0.c0)) IN ('-1999396252'))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE (((((~ (t0.c0)) IN ('-1999396252'))) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t2.c0 FROM t2, t0, t1 GROUP BY t2.c0;
SELECT t2.c0 FROM t2, t0, t1 GROUP BY t2.c0 HAVING TOTAL(t1.c0) UNION ALL SELECT t2.c0 FROM t2, t0, t1 GROUP BY t2.c0 HAVING (NOT (TOTAL(t1.c0))) UNION ALL SELECT ALL t2.c0 FROM t2, t0, t1 GROUP BY t2.c0 HAVING ((TOTAL(t1.c0)) ISNULL);
SELECT t2.c0 FROM t2, t0, t1 GROUP BY t2.c0;
SELECT t2.c0 FROM t2, t0, t1 GROUP BY t2.c0 HAVING TOTAL(t1.c0) UNION ALL SELECT t2.c0 FROM t2, t0, t1 GROUP BY t2.c0 HAVING (NOT (TOTAL(t1.c0))) UNION ALL SELECT ALL t2.c0 FROM t2, t0, t1 GROUP BY t2.c0 HAVING ((TOTAL(t1.c0)) ISNULL);
SELECT t2.c0 FROM t2, t0, t1 GROUP BY t2.c0;
SELECT ALL * FROM t1, t2, t0;
SELECT * FROM t1, t2, t0 WHERE (t2.c0) UNION ALL SELECT ALL * FROM t1, t2, t0 WHERE ((NOT (t2.c0))) UNION ALL SELECT * FROM t1, t2, t0 WHERE (((t2.c0) ISNULL));
SELECT ALL * FROM t1, t2, t0;
SELECT DISTINCT * FROM t2 LEFT OUTER JOIN t1 ON t1.c0 FULL OUTER JOIN t0 ON CASE WHEN CAST(t0.c0 AS INTEGER) THEN CASE WHEN t2.c0 THEN NULL END END;
SELECT DISTINCT * FROM t2 LEFT OUTER JOIN t1 ON t1.c0 FULL OUTER JOIN t0 ON CASE WHEN CAST(t0.c0 AS INTEGER) THEN CASE WHEN t2.c0 THEN NULL END END WHERE ((x'' IN (CAST(0.976923882177064 AS TEXT), (('615301528')<(t2.c0))))) UNION SELECT DISTINCT * FROM t2 LEFT OUTER JOIN t1 ON t1.c0 FULL OUTER JOIN t0 ON CASE WHEN CAST(t0.c0 AS INTEGER) THEN CASE WHEN t2.c0 THEN NULL END END WHERE ((NOT ((x'' IN (CAST(0.976923882177064 AS TEXT), (('615301528')<(t2.c0))))))) UNION SELECT DISTINCT * FROM t2 LEFT OUTER JOIN t1 ON t1.c0 FULL OUTER JOIN t0 ON CASE WHEN CAST(t0.c0 AS INTEGER) THEN CASE WHEN t2.c0 THEN NULL END END WHERE ((((x'' IN (CAST(0.976923882177064 AS TEXT), (('615301528')<(t2.c0))))) ISNULL));
SELECT DISTINCT * FROM t2 LEFT OUTER JOIN t1 ON t1.c0 FULL OUTER JOIN t0 ON CASE WHEN CAST(t0.c0 AS INTEGER) THEN CASE WHEN t2.c0 THEN NULL END END;
SELECT t0.c0 FROM t1, t0, t2 GROUP BY t0.c0;
SELECT t0.c0 FROM t1, t0, t2 WHERE (154210993) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t1, t0, t2 WHERE ((NOT (154210993))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t1, t0, t2 WHERE (((154210993) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t1, t0, t2 GROUP BY t0.c0;
SELECT ALL t1.c0, t0.c0 FROM t1, t0 GROUP BY t1.c0, t0.c0;
SELECT t1.c0, t0.c0 FROM t1, t0 GROUP BY t1.c0, t0.c0 HAVING GROUP_CONCAT(((((MIN(AVG(COUNT(*))))AND(COUNT(AVG(MIN(t1.c0))))))AND(TOTAL(t1.c0)))) UNION ALL SELECT ALL t1.c0, t0.c0 FROM t1, t0 GROUP BY t1.c0, t0.c0 HAVING (NOT (GROUP_CONCAT(((((MIN(AVG(COUNT(*))))AND(COUNT(AVG(MIN(t1.c0))))))AND(TOTAL(t1.c0)))))) UNION ALL SELECT ALL t1.c0, t0.c0 FROM t1, t0 GROUP BY t1.c0, t0.c0 HAVING ((GROUP_CONCAT(((((MIN(AVG(COUNT(*))))AND(COUNT(AVG(MIN(t1.c0))))))AND(TOTAL(t1.c0))))) ISNULL);
SELECT * FROM t1, t2;
SELECT * FROM t1, t2 WHERE (t1.c0) UNION ALL SELECT ALL * FROM t1, t2 WHERE ((NOT (t1.c0))) UNION ALL SELECT * FROM t1, t2 WHERE (((t1.c0) ISNULL));
SELECT * FROM t1, t2;
SELECT DISTINCT * FROM t2, t0, t1;
SELECT DISTINCT * FROM t2, t0, t1 WHERE ((NOT ('1482404626'))) UNION SELECT DISTINCT * FROM t2, t0, t1 WHERE ((NOT ((NOT ('1482404626'))))) UNION SELECT DISTINCT * FROM t2, t0, t1 WHERE ((((NOT ('1482404626'))) ISNULL));
SELECT DISTINCT * FROM t2, t0, t1;
SELECT t1.c0, t0.c0, t2.c0 FROM t1, t2 NATURAL JOIN t0 GROUP BY t1.c0, t0.c0, t2.c0;
SELECT ALL t1.c0, t0.c0, t2.c0 FROM t1, t2 NATURAL JOIN t0 WHERE (((((t2.c0))<((0.6970675638895605))) IN (((((t1.c0)OR(t2.c0)))AND(t1.c0))))) GROUP BY t1.c0, t0.c0, t2.c0 UNION SELECT ALL t1.c0, t0.c0, t2.c0 FROM t1, t2 NATURAL JOIN t0 WHERE ((NOT (((((t2.c0))<((0.6970675638895605))) IN (((((t1.c0)OR(t2.c0)))AND(t1.c0))))))) GROUP BY t1.c0, t0.c0, t2.c0 UNION SELECT t1.c0, t0.c0, t2.c0 FROM t1, t2 NATURAL JOIN t0 WHERE (((((((t2.c0))<((0.6970675638895605))) IN (((((t1.c0)OR(t2.c0)))AND(t1.c0))))) ISNULL)) GROUP BY t1.c0, t0.c0, t2.c0;
SELECT t1.c0, t0.c0, t2.c0 FROM t1, t2 NATURAL JOIN t0 GROUP BY t1.c0, t0.c0, t2.c0;
SELECT t0.c0, t1.c0 FROM t1, t0 GROUP BY t0.c0, t1.c0;
SELECT ALL t0.c0, t1.c0 FROM t1, t0 GROUP BY t0.c0, t1.c0 HAVING MIN(MIN(GROUP_CONCAT(MIN(COUNT(t0.c0))))) UNION ALL SELECT ALL t0.c0, t1.c0 FROM t1, t0 GROUP BY t0.c0, t1.c0 HAVING (NOT (MIN(MIN(GROUP_CONCAT(MIN(COUNT(t0.c0))))))) UNION ALL SELECT t0.c0, t1.c0 FROM t1, t0 GROUP BY t0.c0, t1.c0 HAVING ((MIN(MIN(GROUP_CONCAT(MIN(COUNT(t0.c0)))))) ISNULL);
SELECT ALL * FROM t2, t0;
SELECT * FROM t2, t0 WHERE (((((((t2.c0)) NOT BETWEEN ((t0.c0)) AND ((t2.c0))), CASE WHEN t0.c0 THEN t0.c0 END, ((t0.c0) ISNULL)))>((CASE t2.c0  WHEN t0.c0 THEN t2.c0 END, ((NULL)!=(t0.c0)), (((x'')) NOT BETWEEN ((t2.c0)) AND ((t0.c0))))))) UNION ALL SELECT ALL * FROM t2, t0 WHERE ((NOT (((((((t2.c0)) NOT BETWEEN ((t0.c0)) AND ((t2.c0))), CASE WHEN t0.c0 THEN t0.c0 END, ((t0.c0) ISNULL)))>((CASE t2.c0  WHEN t0.c0 THEN t2.c0 END, ((NULL)!=(t0.c0)), (((x'')) NOT BETWEEN ((t2.c0)) AND ((t0.c0))))))))) UNION ALL SELECT ALL * FROM t2, t0 WHERE (((((((((t2.c0)) NOT BETWEEN ((t0.c0)) AND ((t2.c0))), CASE WHEN t0.c0 THEN t0.c0 END, ((t0.c0) ISNULL)))>((CASE t2.c0  WHEN t0.c0 THEN t2.c0 END, ((NULL)!=(t0.c0)), (((x'')) NOT BETWEEN ((t2.c0)) AND ((t0.c0))))))) ISNULL));
SELECT ALL * FROM t2, t0;
SELECT DISTINCT * FROM t2, t0, t1;
SELECT DISTINCT * FROM t2, t0, t1 WHERE (CAST((~ (t2.c0)) AS REAL)) UNION SELECT DISTINCT * FROM t2, t0, t1 WHERE ((NOT (CAST((~ (t2.c0)) AS REAL)))) UNION SELECT DISTINCT * FROM t2 NOT INDEXED, t0, t1 WHERE (((CAST((~ (t2.c0)) AS REAL)) ISNULL));
SELECT DISTINCT * FROM t2, t0, t1;
SELECT t1.c0, t2.c0 FROM t1, t2 GROUP BY t1.c0, t2.c0;
SELECT ALL t1.c0, t2.c0 FROM t1, t2 WHERE ((((LIKE(t1.c0, t1.c0, '-')))<=(((((t2.c0)) NOT BETWEEN ((t2.c0)) AND ((t1.c0))))))) GROUP BY t1.c0, t2.c0 UNION SELECT ALL t1.c0, t2.c0 FROM t1, t2 WHERE ((NOT ((((LIKE(t1.c0, t1.c0, '-')))<=(((((t2.c0)) NOT BETWEEN ((t2.c0)) AND ((t1.c0))))))))) GROUP BY t1.c0, t2.c0 UNION SELECT ALL t1.c0, t2.c0 FROM t1, t2 WHERE ((((((LIKE(t1.c0, t1.c0, '-')))<=(((((t2.c0)) NOT BETWEEN ((t2.c0)) AND ((t1.c0))))))) ISNULL)) GROUP BY t1.c0, t2.c0;
SELECT t1.c0, t2.c0 FROM t1, t2 GROUP BY t1.c0, t2.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((COUNT(*)) BETWEEN (MAX(t0.c0)) AND (COUNT(t0.c0))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (((COUNT(*)) BETWEEN (MAX(t0.c0)) AND (COUNT(t0.c0))))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((((COUNT(*)) BETWEEN (MAX(t0.c0)) AND (COUNT(t0.c0)))) ISNULL);
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((COUNT(*)) BETWEEN (MAX(t0.c0)) AND (COUNT(t0.c0))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (((COUNT(*)) BETWEEN (MAX(t0.c0)) AND (COUNT(t0.c0))))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((((COUNT(*)) BETWEEN (MAX(t0.c0)) AND (COUNT(t0.c0)))) ISNULL);
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL * FROM t1;
SELECT ALL * FROM t1 WHERE (((((t1.c0) IS TRUE))<<(((t1.c0) NOTNULL)))) UNION ALL SELECT ALL * FROM t1 WHERE ((NOT (((((t1.c0) IS TRUE))<<(((t1.c0) NOTNULL)))))) UNION ALL SELECT ALL * FROM t1 WHERE (((((((t1.c0) IS TRUE))<<(((t1.c0) NOTNULL)))) ISNULL));
SELECT ALL * FROM t1;
SELECT DISTINCT * FROM t1, t0, t2;
SELECT DISTINCT * FROM t1, t0, t2 WHERE ((((+ (x'0cc9')))+((t2.c0 IN ())))) UNION SELECT DISTINCT * FROM t1, t0, t2 WHERE ((NOT ((((+ (x'0cc9')))+((t2.c0 IN ())))))) UNION SELECT DISTINCT * FROM t1, t0, t2 WHERE ((((((+ (x'0cc9')))+((t2.c0 IN ())))) ISNULL));
SELECT DISTINCT * FROM t1, t0, t2;
SELECT t0.c0, t2.c0 FROM t0, t2 GROUP BY t0.c0, t2.c0;
SELECT t0.c0, t2.c0 FROM t0, t2 WHERE ((((t2.c0)) BETWEEN ((((((((((t0.c0)AND(t2.c0)))AND(t2.c0)))OR(t0.c0)))AND(t2.c0)))) AND ((((t0.c0) IS FALSE))))) GROUP BY t0.c0, t2.c0 UNION SELECT ALL t0.c0, t2.c0 FROM t0, t2 WHERE ((NOT ((((t2.c0)) BETWEEN ((((((((((t0.c0)AND(t2.c0)))AND(t2.c0)))OR(t0.c0)))AND(t2.c0)))) AND ((((t0.c0) IS FALSE))))))) GROUP BY t0.c0, t2.c0 UNION SELECT t0.c0, t2.c0 FROM t0, t2 WHERE ((((((t2.c0)) BETWEEN ((((((((((t0.c0)AND(t2.c0)))AND(t2.c0)))OR(t0.c0)))AND(t2.c0)))) AND ((((t0.c0) IS FALSE))))) ISNULL)) GROUP BY t0.c0, t2.c0;
SELECT t0.c0, t2.c0 FROM t0, t2 GROUP BY t0.c0, t2.c0;
SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0;
SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0 HAVING t2.c0 UNION ALL SELECT t2.c0 FROM t2 GROUP BY t2.c0 HAVING (NOT (t2.c0)) UNION ALL SELECT t2.c0 FROM t2 GROUP BY t2.c0 HAVING ((t2.c0) ISNULL);
SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0;
SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0 HAVING t2.c0 UNION ALL SELECT t2.c0 FROM t2 GROUP BY t2.c0 HAVING (NOT (t2.c0)) UNION ALL SELECT t2.c0 FROM t2 GROUP BY t2.c0 HAVING ((t2.c0) ISNULL);
SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0;
SELECT t2.c0, t1.c0 FROM t1, t2, t0;
SELECT ALL t2.c0, t1.c0 FROM t1, t2, t0 WHERE (((((t0.c0) NOT BETWEEN (t1.c0) AND (t0.c0))) IS FALSE)) UNION ALL SELECT t2.c0, t1.c0 FROM t1, t2, t0 NOT INDEXED WHERE ((NOT (((((t0.c0) NOT BETWEEN (t1.c0) AND (t0.c0))) IS FALSE)))) UNION ALL SELECT ALL t2.c0, t1.c0 FROM t1, t2, t0 WHERE (((((((t0.c0) NOT BETWEEN (t1.c0) AND (t0.c0))) IS FALSE)) ISNULL));
SELECT t2.c0, t1.c0 FROM t1, t2, t0;
SELECT DISTINCT * FROM t2, t0;
SELECT DISTINCT * FROM t2, t0 WHERE (((((t2.c0) NOT BETWEEN (t2.c0) AND (NULL))) IS FALSE)) UNION SELECT DISTINCT * FROM t2, t0 WHERE ((NOT (((((t2.c0) NOT BETWEEN (t2.c0) AND (NULL))) IS FALSE)))) UNION SELECT DISTINCT * FROM t2, t0 WHERE (((((((t2.c0) NOT BETWEEN (t2.c0) AND (NULL))) IS FALSE)) ISNULL));
SELECT DISTINCT * FROM t2, t0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 WHERE (((CAST(t0.c0 AS TEXT)) NOT BETWEEN (t0.c0 COLLATE BINARY) AND ((0X297c87a IN ())))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT (((CAST(t0.c0 AS TEXT)) NOT BETWEEN (t0.c0 COLLATE BINARY) AND ((0x297c87a IN ())))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE (((((CAST(t0.c0 AS TEXT)) NOT BETWEEN (t0.c0 COLLATE BINARY) AND ((0x297c87a IN ())))) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING MIN(COUNT(*)) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (MIN(COUNT(*)))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((MIN(COUNT(*))) ISNULL);
SELECT t2.c0, t1.c0 FROM t2, t1;
SELECT t2.c0, t1.c0 FROM t2, t1 WHERE ((((t1.c0, t1.c0, t1.c0, t2.c0, t1.c0)) BETWEEN ((t1.c0, t1.c0, t2.c0, t1.c0, t2.c0)) AND ((t1.c0, t1.c0, t1.c0, t1.c0, 'Ḭk'))) COLLATE NOCASE) UNION ALL SELECT ALL t2.c0, t1.c0 FROM t2, t1 WHERE ((NOT ((((t1.c0, t1.c0, t1.c0, t2.c0, t1.c0)) BETWEEN ((t1.c0, t1.c0, t2.c0, t1.c0, t2.c0)) AND ((t1.c0, t1.c0, t1.c0, t1.c0, 'Ḭk'))) COLLATE NOCASE))) UNION ALL SELECT ALL t2.c0, t1.c0 FROM t2, t1 WHERE ((((((t1.c0, t1.c0, t1.c0, t2.c0, t1.c0)) BETWEEN ((t1.c0, t1.c0, t2.c0, t1.c0, t2.c0)) AND ((t1.c0, t1.c0, t1.c0, t1.c0, 'Ḭk'))) COLLATE NOCASE) ISNULL));
SELECT t2.c0, t1.c0 FROM t2, t1;
SELECT DISTINCT * FROM t1;
SELECT DISTINCT * FROM t1 WHERE (CAST((NOT (t1.c0)) AS TEXT)) UNION SELECT DISTINCT * FROM t1 WHERE ((NOT (CAST((NOT (t1.c0)) AS TEXT)))) UNION SELECT DISTINCT * FROM t1 WHERE (((CAST((NOT (t1.c0)) AS TEXT)) ISNULL));
SELECT DISTINCT * FROM t1;
SELECT ALL t1.c0, t2.c0 FROM t2, t1 GROUP BY t1.c0, t2.c0;
SELECT t1.c0, t2.c0 FROM t2, t1 WHERE (((((t1.c0) IS FALSE))&(t2.c0))) GROUP BY t1.c0, t2.c0 UNION SELECT ALL t1.c0, t2.c0 FROM t2, t1 WHERE ((NOT (((((t1.c0) IS FALSE))&(t2.c0))))) GROUP BY t1.c0, t2.c0 UNION SELECT t1.c0, t2.c0 FROM t2, t1 WHERE (((((((t1.c0) IS FALSE))&(t2.c0))) ISNULL)) GROUP BY t1.c0, t2.c0;
SELECT ALL t1.c0, t2.c0 FROM t2, t1 GROUP BY t1.c0, t2.c0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING (MIN(MAX(AVG(COUNT(COUNT(t1.c0))))) IN ()) UNION ALL SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING (NOT ((MIN(MAX(AVG(COUNT(COUNT(t1.c0))))) IN ()))) UNION ALL SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING (((MIN(MAX(AVG(COUNT(COUNT(t1.c0))))) IN ())) ISNULL);
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t1.c0 FROM t1 GROUP BY t1.c0 HAVING (MIN(MAX(AVG(COUNT(COUNT(t1.c0))))) IN ()) UNION ALL SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING (NOT ((MIN(MAX(AVG(COUNT(COUNT(t1.c0))))) IN ()))) UNION ALL SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0 HAVING (((MIN(MAX(AVG(COUNT(COUNT(t1.c0))))) IN ())) ISNULL);
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL * FROM t2, t1, t0;
SELECT ALL * FROM t2, t1, t0 WHERE (CAST(CASE WHEN t0.c0 THEN t2.c0 ELSE t0.c0 END AS NUMERIC)) UNION ALL SELECT * FROM t2, t1, t0 WHERE ((NOT (CAST(CASE WHEN t0.c0 THEN t2.c0 ELSE t0.c0 END AS NUMERIC)))) UNION ALL SELECT ALL * FROM t2, t1, t0 WHERE (((CAST(CASE WHEN t0.c0 THEN t2.c0 ELSE t0.c0 END AS NUMERIC)) ISNULL));
SELECT ALL * FROM t2, t1, t0;
SELECT DISTINCT * FROM t0 LEFT OUTER JOIN t2 ON ((((t2.c0) IS TRUE))AND(((((((((t0.c0)OR(t2.c0)))AND(t2.c0)))OR(t0.c0)))OR(t0.c0))));
SELECT DISTINCT * FROM t0 LEFT OUTER JOIN t2 ON ((((t2.c0) IS TRUE))AND(((((((((t0.c0)OR(t2.c0)))AND(t2.c0)))OR(t0.c0)))OR(t0.c0)))) WHERE (TRIM(t0.c0, CASE WHEN t0.c0 THEN t0.c0 ELSE t2.c0 END)) UNION SELECT DISTINCT * FROM t0 LEFT OUTER JOIN t2 ON ((((t2.c0) IS TRUE))AND(((((((((t0.c0)OR(t2.c0)))AND(t2.c0)))OR(t0.c0)))OR(t0.c0)))) WHERE ((NOT (TRIM(t0.c0, CASE WHEN t0.c0 THEN t0.c0 ELSE t2.c0 END)))) UNION SELECT DISTINCT * FROM t0 LEFT OUTER JOIN t2 ON ((((t2.c0) IS TRUE))AND(((((((((t0.c0)OR(t2.c0)))AND(t2.c0)))OR(t0.c0)))OR(t0.c0)))) WHERE (((TRIM(t0.c0, CASE WHEN t0.c0 THEN t0.c0 ELSE t2.c0 END)) ISNULL));
SELECT DISTINCT * FROM t0 LEFT OUTER JOIN t2 ON ((((t2.c0) IS TRUE))AND(((((((((t0.c0)OR(t2.c0)))AND(t2.c0)))OR(t0.c0)))OR(t0.c0))));
SELECT t0.c0, t1.c0 FROM t0 CROSS JOIN t1 ON t1.c0 COLLATE RTRIM GROUP BY t0.c0, t1.c0;
SELECT t0.c0, t1.c0 FROM t0 NOT INDEXED CROSS JOIN t1 ON t1.c0 COLLATE RTRIM WHERE ((0.9717804627154786 IN ()) COLLATE NOCASE) GROUP BY t0.c0, t1.c0 UNION SELECT ALL t0.c0, t1.c0 FROM t0 CROSS JOIN t1 ON t1.c0 COLLATE RTRIM WHERE ((NOT ((0.9717804627154786 IN ()) COLLATE NOCASE))) GROUP BY t0.c0, t1.c0 UNION SELECT ALL t0.c0, t1.c0 FROM t0 CROSS JOIN t1 ON t1.c0 COLLATE RTRIM WHERE ((((0.9717804627154786 IN ()) COLLATE NOCASE) ISNULL)) GROUP BY t0.c0, t1.c0;
SELECT t0.c0, t1.c0 FROM t0 CROSS JOIN t1 ON t1.c0 COLLATE RTRIM GROUP BY t0.c0, t1.c0;
SELECT ALL t1.c0, t0.c0 FROM t1, t0 INDEXED BY i28 GROUP BY t1.c0, t0.c0;
SELECT ALL MIN(CAST(((t0.c0) BETWEEN (t0.c0) AND (0.9819675678385802)) AS NUMERIC)) FROM t0 ORDER BY ((CASE t0.c0  WHEN t0.c0 THEN t0.c0 END) BETWEEN ((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0)))) AND (PRINTF(t0.c0, '348349364', t0.c0)))  NULLS FIRST;
SELECT ALL t2.c0 FROM t2;
SELECT t2.c0 FROM t2 WHERE (((t2.c0)IS NOT(NULL)) COLLATE RTRIM) UNION ALL SELECT ALL t2.c0 FROM t2 WHERE ((NOT (((t2.c0)IS NOT(NULL)) COLLATE RTRIM))) UNION ALL SELECT t2.c0 FROM t2 WHERE (((((t2.c0)IS NOT(NULL)) COLLATE RTRIM) ISNULL));
SELECT ALL t2.c0 FROM t2;
SELECT DISTINCT t2.c0, t0.c0 FROM t0, t2;
SELECT DISTINCT t2.c0, t0.c0 FROM t0, t2 WHERE (t2.c0 COLLATE RTRIM) UNION SELECT DISTINCT t2.c0, t0.c0 FROM t0, t2 WHERE ((NOT (t2.c0 COLLATE RTRIM))) UNION SELECT DISTINCT t2.c0, t0.c0 FROM t0, t2 WHERE (((t2.c0 COLLATE RTRIM) ISNULL));
SELECT DISTINCT t2.c0, t0.c0 FROM t0, t2;
SELECT ALL t1.c0, t0.c0 FROM t2, t1, t0 GROUP BY t1.c0, t0.c0;
SELECT t1.c0, t0.c0 FROM t2, t1, t0 WHERE (((((t2.c0) NOT BETWEEN (-2.85017421E8) AND (t0.c0)))<(t0.c0 COLLATE BINARY))) GROUP BY t1.c0, t0.c0 UNION SELECT t1.c0, t0.c0 FROM t2, t1, t0 WHERE ((NOT (((((t2.c0) NOT BETWEEN (-2.85017421E8) AND (t0.c0)))<(t0.c0 COLLATE BINARY))))) GROUP BY t1.c0, t0.c0 UNION SELECT ALL t1.c0, t0.c0 FROM t2, t1, t0 WHERE (((((((t2.c0) NOT BETWEEN (-2.85017421E8) AND (t0.c0)))<(t0.c0 COLLATE BINARY))) ISNULL)) GROUP BY t1.c0, t0.c0;
SELECT ALL t1.c0, t0.c0 FROM t2, t1, t0 GROUP BY t1.c0, t0.c0;
SELECT ALL t2.c0, t1.c0 FROM t1, t0, t2 GROUP BY t2.c0, t1.c0;
SELECT t2.c0, t1.c0 FROM t1, t0, t2 GROUP BY t2.c0, t1.c0 HAVING ((COUNT(t1.c0))&(((MIN(t0.c0)) NOT BETWEEN (COUNT(*)) AND (t0.c0)))) UNION ALL SELECT ALL t2.c0, t1.c0 FROM t1, t0, t2 GROUP BY t2.c0, t1.c0 HAVING (NOT (((COUNT(t1.c0))&(((MIN(t0.c0)) NOT BETWEEN (COUNT(*)) AND (t0.c0)))))) UNION ALL SELECT t2.c0, t1.c0 FROM t1, t0, t2 GROUP BY t2.c0, t1.c0 HAVING ((((COUNT(t1.c0))&(((MIN(t0.c0)) NOT BETWEEN (COUNT(*)) AND (t0.c0))))) ISNULL);
SELECT ALL t2.c0, t1.c0 FROM t1, t0, t2 GROUP BY t2.c0, t1.c0;
SELECT t2.c0, t1.c0 FROM t1, t0, t2 GROUP BY t2.c0, t1.c0 HAVING ((COUNT(t1.c0))&(((MIN(t0.c0)) NOT BETWEEN (COUNT(*)) AND (t0.c0)))) UNION ALL SELECT ALL t2.c0, t1.c0 FROM t1, t0, t2 GROUP BY t2.c0, t1.c0 HAVING (NOT (((COUNT(t1.c0))&(((MIN(t0.c0)) NOT BETWEEN (COUNT(*)) AND (t0.c0)))))) UNION ALL SELECT t2.c0, t1.c0 FROM t1, t0, t2 GROUP BY t2.c0, t1.c0 HAVING ((((COUNT(t1.c0))&(((MIN(t0.c0)) NOT BETWEEN (COUNT(*)) AND (t0.c0))))) ISNULL);
SELECT ALL t2.c0, t1.c0 FROM t1, t0, t2 GROUP BY t2.c0, t1.c0;
SELECT ALL t1.c0 FROM t1;
SELECT ALL t1.c0 FROM t1 WHERE ((((+ (t1.c0)))||((NOT (t1.c0))))) UNION ALL SELECT t1.c0 FROM t1 WHERE ((NOT ((((+ (t1.c0)))||((NOT (t1.c0))))))) UNION ALL SELECT t1.c0 FROM t1 WHERE ((((((+ (t1.c0)))||((NOT (t1.c0))))) ISNULL));
SELECT ALL t1.c0 FROM t1;
SELECT DISTINCT * FROM t1, t0;
SELECT DISTINCT * FROM t1, t0 WHERE (((t0.c0)==(t1.c0)) COLLATE BINARY) UNION SELECT DISTINCT * FROM t1, t0 WHERE ((NOT (((t0.c0)==(t1.c0)) COLLATE BINARY))) UNION SELECT DISTINCT * FROM t1, t0 WHERE (((((t0.c0)=(t1.c0)) COLLATE BINARY) ISNULL));
SELECT DISTINCT * FROM t1, t0;
SELECT t2.c0 FROM t2 GROUP BY t2.c0;
SELECT t2.c0 FROM t2 WHERE (json_extract(((((((((452224717)AND(t2.c0)))AND(t2.c0)))AND(t2.c0)))AND(t2.c0)), ((t2.c0) NOT BETWEEN (t2.c0) AND (t2.c0)))) GROUP BY t2.c0 UNION SELECT t2.c0 FROM t2 WHERE ((NOT (json_extract(((((((((452224717)AND(t2.c0)))AND(t2.c0)))AND(t2.c0)))AND(t2.c0)), ((t2.c0) NOT BETWEEN (t2.c0) AND (t2.c0)))))) GROUP BY t2.c0 UNION SELECT ALL t2.c0 FROM t2 WHERE (((json_extract(((((((((452224717)AND(t2.c0)))AND(t2.c0)))AND(t2.c0)))AND(t2.c0)), ((t2.c0) NOT BETWEEN (t2.c0) AND (t2.c0)))) ISNULL)) GROUP BY t2.c0;
SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0;
SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0 HAVING TOTAL(COUNT(*)) UNION ALL SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0 HAVING (NOT (TOTAL(COUNT(*)))) UNION ALL SELECT t2.c0 FROM t2 GROUP BY t2.c0 HAVING ((TOTAL(COUNT(*))) ISNULL);
SELECT ALL * FROM t1;
SELECT * FROM t1 WHERE ((t1.c0 IN ()) COLLATE RTRIM) UNION ALL SELECT ALL * FROM t1 WHERE ((NOT ((t1.c0 IN ()) COLLATE RTRIM))) UNION ALL SELECT ALL * FROM t1 WHERE ((((t1.c0 IN ()) COLLATE RTRIM) ISNULL));
SELECT ALL * FROM t1;
SELECT DISTINCT * FROM t1 FULL OUTER JOIN t0 ON (((CAST(0.47471997027341106 AS REAL)))<=((t2.c0 COLLATE RTRIM))) RIGHT OUTER JOIN t2 ON (((((((((((t1.c0, t0.c0, t1.c0))>((t1.c0, t2.c0, t2.c0))))OR((t2.c0 IN ()))))OR(((t0.c0) NOT NULL))))OR(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))))OR(CASE t1.c0  WHEN t1.c0 THEN t1.c0 WHEN t2.c0 THEN '' WHEN t1.c0 THEN t2.c0 END));
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT t1.c0 FROM t1 WHERE (JULIANDAY(t1.c0, t1.c0, t1.c0) COLLATE NOCASE) GROUP BY t1.c0 UNION SELECT t1.c0 FROM t1 WHERE ((NOT (JULIANDAY(t1.c0, t1.c0, t1.c0) COLLATE NOCASE))) GROUP BY t1.c0 UNION SELECT t1.c0 FROM t1 WHERE (((JULIANDAY(t1.c0, t1.c0, t1.c0) COLLATE NOCASE) ISNULL)) GROUP BY t1.c0;
SELECT ALL t1.c0 FROM t1 GROUP BY t1.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING t0.c0 UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (t0.c0)) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((t0.c0) ISNULL);
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING t0.c0 UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (t0.c0)) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((t0.c0) ISNULL);
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT * FROM t1 FULL OUTER JOIN t0 ON (0.8093714164858745 IN ());
SELECT ALL * FROM t1 FULL OUTER JOIN t0 ON (0.8093714164858745 IN ()) WHERE (t0.c0) UNION ALL SELECT ALL * FROM t1 FULL OUTER JOIN t0 ON (0.8093714164858745 IN ()) WHERE ((NOT (t0.c0))) UNION ALL SELECT * FROM t1 FULL OUTER JOIN t0 ON (0.8093714164858745 IN ()) WHERE (((t0.c0) ISNULL));
SELECT * FROM t1 FULL OUTER JOIN t0 ON (0.8093714164858745 IN ());
SELECT DISTINCT * FROM t0, t1;
SELECT DISTINCT * FROM t0, t1 WHERE ((((t1.c0)||(t0.c0)) IN ())) UNION SELECT DISTINCT * FROM t0, t1 WHERE ((NOT ((((t1.c0)||(t0.c0)) IN ())))) UNION SELECT DISTINCT * FROM t0, t1 WHERE ((((((t1.c0)||(t0.c0)) IN ())) ISNULL));
SELECT DISTINCT * FROM t0, t1;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE (CAST(x'' AS BLOB)) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE ((NOT (CAST(x'' AS BLOB)))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 WHERE (((CAST(x'' AS BLOB)) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t2.c0, t1.c0, t0.c0 FROM t0, t1, t2 INDEXED BY i28 GROUP BY t2.c0, t1.c0, t0.c0;
SELECT * FROM t2;
SELECT ALL * FROM t2 WHERE (LIKE(t2.c0, t2.c0, 'l') COLLATE RTRIM) UNION ALL SELECT * FROM t2 WHERE ((NOT (LIKE(t2.c0, t2.c0, 'l') COLLATE RTRIM))) UNION ALL SELECT ALL * FROM t2 WHERE (((LIKE(t2.c0, t2.c0, 'l') COLLATE RTRIM) ISNULL));
SELECT * FROM t2;
SELECT DISTINCT * FROM t0, t2;
SELECT DISTINCT * FROM t0, t2 WHERE ((~ (((t0.c0)-(t2.c0))))) UNION SELECT DISTINCT * FROM t0, t2 WHERE ((NOT ((~ (((t0.c0)-(t2.c0))))))) UNION SELECT DISTINCT * FROM t0, t2 WHERE ((((~ (((t0.c0)-(t2.c0))))) ISNULL));
SELECT DISTINCT * FROM t0, t2;
SELECT t2.c0, t0.c0 FROM t2, t0 GROUP BY t2.c0, t0.c0;
SELECT t2.c0, t0.c0 FROM t2, t0 WHERE ((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((((t2.c0)<('h9k')))))) GROUP BY t2.c0, t0.c0 UNION SELECT t2.c0, t0.c0 FROM t2, t0 WHERE ((NOT ((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((((t2.c0)<('h9k')))))))) GROUP BY t2.c0, t0.c0 UNION SELECT t2.c0, t0.c0 FROM t2, t0 WHERE ((((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((((t2.c0)<('h9k')))))) ISNULL)) GROUP BY t2.c0, t0.c0;
SELECT t2.c0, t0.c0 FROM t2, t0 GROUP BY t2.c0, t0.c0;
SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0;
SELECT t2.c0 FROM t2 GROUP BY t2.c0 HAVING MIN(GROUP_CONCAT(MIN(t2.c0))) UNION ALL SELECT t2.c0 FROM t2 GROUP BY t2.c0 HAVING (NOT (MIN(GROUP_CONCAT(MIN(t2.c0))))) UNION ALL SELECT ALL t2.c0 FROM t2 GROUP BY t2.c0 HAVING ((MIN(GROUP_CONCAT(MIN(t2.c0)))) ISNULL);
SELECT t2.c0, t1.c0 FROM t2, t0, t1;
SELECT ALL t2.c0, t1.c0 FROM t2, t0, t1 WHERE (((((t1.c0) IS TRUE))IS NOT(CASE WHEN t0.c0 THEN t2.c0 ELSE t1.c0 END))) UNION ALL SELECT t2.c0, t1.c0 FROM t2, t0, t1 WHERE ((NOT (((((t1.c0) IS TRUE))IS NOT(CASE WHEN t0.c0 THEN t2.c0 ELSE t1.c0 END))))) UNION ALL SELECT ALL t2.c0, t1.c0 FROM t2, t0, t1 WHERE (((((((t1.c0) IS TRUE))IS NOT(CASE WHEN t0.c0 THEN t2.c0 ELSE t1.c0 END))) ISNULL));
SELECT t2.c0, t1.c0 FROM t2, t0, t1;
