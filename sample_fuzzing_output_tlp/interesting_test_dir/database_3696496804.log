-- Time: 2024/06/12 07:00:40
-- Database: database4
-- Database version: 3.40.0
-- seed value: 3696496804
PRAGMA cache_size = 50000; -- 7ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA case_sensitive_like=ON; -- 0ms;
PRAGMA encoding = 'UTF-16be'; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts5(c0 UNINDEXED, c1, ); -- 1ms;
ROLLBACK TRANSACTION; -- 4ms;
INSERT OR ABORT INTO vt0(c0, c1) VALUES ('', ''); -- 0ms;
INSERT OR IGNORE INTO vt0(c1) VALUES (0.9210320037352244); -- 1ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
UPDATE vt0 SET (c1, c0)=('', 0.35422954222458514) WHERE CASE ((vt0.c0) IS FALSE)  WHEN ((((vt0.c1)AND(vt0.c0)))OR(vt0.c1)) THEN (((vt0.c0))=((vt0.c0))) WHEN (+ (NULL)) THEN ((vt0.c1)IS(vt0.c1)) WHEN ((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1)) THEN ((((vt0.c1)AND(vt0.c1)))OR(vt0.c1)) END; -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
END; -- 0ms;
ROLLBACK TRANSACTION; -- 1ms;
PRAGMA mmap_size = 682782798789702627; -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 1ms;
UPDATE OR IGNORE vt0 SET (c0)=(0x7fffffffffffffff); -- 0ms;
UPDATE OR IGNORE vt0 SET c1='-2021502719' WHERE (vt0.c0 IN (((vt0.c1)IS NOT(vt0.c0)), CASE ''  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END)); -- 8ms;
CREATE TEMPORARY VIEW  IF NOT EXISTS v0(c0, c1, c2) AS SELECT DISTINCT (CAST(vt0.c1 AS TEXT) IN (TOTAL(vt0.c1))), TOTAL(vt0.c1), ((((vt0.c0) IS TRUE)) IS TRUE) FROM vt0 WHERE ((((((('-2021502719')OR(0.1955866747842624)))OR('-2021502719'))) BETWEEN ((((((((('-370204710')AND(0X4ab6f762)))AND(NULL)))AND(0.7842317960330423)))OR(x''))) AND (((0.7842317960330423) BETWEEN (0.19424308730452433) AND (x'6c01'))))) ORDER BY ((((CAST(vt0.c1 AS INTEGER))OR(((vt0.c0) NOT NULL))))OR(CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END)); -- 3ms;
VACUUM; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=4'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
UPDATE vt0 SET (c0)=('z^k!'); -- 1ms;
COMMIT; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '38907'); -- 0ms;
UPDATE vt0 SET (c1)=(-3.7020471E8) WHERE 'jh谠5儁Ὶd'; -- 0ms;
UPDATE OR IGNORE vt0 SET (c1)=(''); -- 1ms;
ANALYZE sqlite_master; -- 1ms;
INSERT OR ROLLBACK INTO vt0(c0, c1) VALUES (NULL, x'b43a09d5'); -- 1ms;
PRAGMA auto_vacuum; -- 0ms;
PRAGMA integrity_check; -- 0ms;
CREATE TRIGGER IF NOT EXISTS tr0 INSTEAD OF UPDATE OF c1 ON v0 FOR EACH ROW  WHEN LIKELY((+ (v0.c2))) BEGIN DELETE FROM vt0;END; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
END TRANSACTION; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
PRAGMA temp.checkpoint_fullfsync; -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES ('务7'); -- 1ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 2ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 7); -- 0ms;
END; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', 520563342);\n; -- 0ms;
UPDATE OR REPLACE vt0 SET c1='TUrzJ'; -- 5ms;
PRAGMA journal_mode; -- 0ms;
END; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 150806673); -- 0ms;
UPDATE OR IGNORE vt0 SET c1=NULL; -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 1ms;
END; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 2ms;
PRAGMA main.stats; -- 0ms;
DELETE FROM vt0 WHERE (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1))))IS(((((vt0.c0)OR(vt0.c1)))OR(vt0.c1)))); -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '62204'); -- 1ms;
PRAGMA temp.journal_mode = DELETE; -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree(c0, c1, c2, c3, c4); -- 1ms;
INSERT OR IGNORE INTO rt0(c2) VALUES (x'bb87'); -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES (x'fe42', 0.056168477662123295), (0.6030031248785837, -1010560495), (x'', x''); -- 6ms;
INSERT OR REPLACE INTO vt0(c1) VALUES (NULL), ('-542028072'), (0.24605524618681496); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO vt0(c1) VALUES (x''), (5.20563342E8), (0.5644545929040485), ('TUrzJ'), (0Xffffffffc600a839); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', -542028072);\n; -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
PRAGMA foreign_keys; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 8); -- 0ms;
CREATE TEMPORARY TABLE IF NOT EXISTS t0 (c0 INT , PRIMARY KEY (c0 DESC)); -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
ALTER TABLE t0 ADD COLUMN c2 INTEGER; -- 0ms;
INSERT OR REPLACE INTO vt0(c1) VALUES (x'8d6f'), (0.2634906466040351), (NULL); -- 0ms;
COMMIT; -- 0ms;
END TRANSACTION; -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 1ms;
INSERT INTO vt0(vt0) VALUES('automerge=8'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 8); -- 0ms;
PRAGMA default_cache_size = -370204710; -- 0ms;
PRAGMA application_id = -2569370113831479320; -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
UPDATE OR IGNORE vt0 SET c0=0Xffffffff935464f3; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO rt0(c4) VALUES (x'9531'), (NULL), (0.897068606527818), ('H'), (NULL); -- 1ms;
END TRANSACTION; -- 2ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT * FROM vt0 INNER JOIN v0 ON ((TRIM(v0.c2)) IS TRUE) CROSS JOIN t0 ON (((((+ (vt0.c1)))OR(((vt0.c1)/(t0.c0)))))AND(json(t0.c2)));
SELECT * FROM vt0 INNER JOIN v0 ON ((TRIM(v0.c2)) IS TRUE) CROSS JOIN t0 ON (((((+ (vt0.c1)))OR(((vt0.c1)/(t0.c0)))))AND(json(t0.c2))) WHERE ((0.8060927551116226 IN ())) UNION ALL SELECT * FROM vt0 INNER JOIN v0 ON ((TRIM(v0.c2)) IS TRUE) CROSS JOIN t0 ON (((((+ (vt0.c1)))OR(((vt0.c1)/(t0.c0)))))AND(json(t0.c2))) WHERE ((NOT ((0.8060927551116226 IN ())))) UNION ALL SELECT * FROM vt0 INNER JOIN v0 ON ((TRIM(v0.c2)) IS TRUE) CROSS JOIN t0 ON (((((+ (vt0.c1)))OR(((vt0.c1)/(t0.c0)))))AND(json(t0.c2))) WHERE ((((0.8060927551116226 IN ())) ISNULL));
SELECT * FROM vt0 INNER JOIN v0 ON ((TRIM(v0.c2)) IS TRUE) CROSS JOIN t0 ON (((((+ (vt0.c1)))OR(((vt0.c1)/(t0.c0)))))AND(json(t0.c2)));
SELECT DISTINCT * FROM t0, v0, rt0;
SELECT DISTINCT * FROM t0, v0, rt0 WHERE (((((NULL)GLOB(v0.c0))) NOT NULL)) UNION SELECT DISTINCT * FROM t0, v0, rt0 WHERE ((NOT (((((NULL)GLOB(v0.c0))) NOT NULL)))) UNION SELECT DISTINCT * FROM t0, v0, rt0 WHERE (((((((NULL)GLOB(v0.c0))) NOT NULL)) ISNULL));
SELECT DISTINCT * FROM t0, v0, rt0;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 WHERE (CAST(((('1256436408')) BETWEEN ((vt0.c1)) AND ((vt0.c0))) AS TEXT)) GROUP BY vt0.c0, vt0.c1 UNION SELECT ALL vt0.c0, vt0.c1 FROM vt0 WHERE ((NOT (CAST(((('1256436408')) BETWEEN ((vt0.c1)) AND ((vt0.c0))) AS TEXT)))) GROUP BY vt0.c0, vt0.c1 UNION SELECT ALL vt0.c0, vt0.c1 FROM vt0 WHERE (((CAST(((('1256436408')) BETWEEN ((vt0.c1)) AND ((vt0.c0))) AS TEXT)) ISNULL)) GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c0 FROM vt0, rt0 CROSS JOIN t0 ON (((v0.c2)) NOT BETWEEN (((((v0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))))) AND ((((rt0.c4)+(0.36194114617361794))))) FULL OUTER JOIN v0 ON (((NOT (t0.c2)))<>((((vt0.c1)) NOT BETWEEN (('D}4|y8)')) AND ((rt0.c4))))) GROUP BY vt0.c0;
SELECT * FROM v0, t0, vt0, rt0;
SELECT ALL * FROM v0, t0, vt0, rt0 WHERE (rt0.c0) UNION ALL SELECT ALL * FROM v0, t0, vt0, rt0 WHERE ((NOT (rt0.c0))) UNION ALL SELECT * FROM v0, t0, vt0, rt0 WHERE (((rt0.c0) ISNULL));
SELECT * FROM v0, t0, vt0, rt0;
SELECT DISTINCT rt0.c2, v0.c1, t0.c2 FROM rt0, vt0 CROSS JOIN v0 ON rt0.c0 RIGHT OUTER JOIN t0 ON ((((((((HEX(rt0.c2))OR((- (rt0.c4)))))AND(CASE v0.c2  WHEN t0.c0 THEN v0.c2 ELSE rt0.c3 END)))AND(rt0.c1)))AND((+ (v0.c1))));
SELECT DISTINCT rt0.c2, v0.c1, t0.c2 FROM rt0, vt0 CROSS JOIN v0 ON rt0.c0 RIGHT OUTER JOIN t0 ON ((((((((HEX(rt0.c2))OR((- (rt0.c4)))))AND(CASE v0.c2  WHEN t0.c0 THEN v0.c2 ELSE rt0.c3 END)))AND(rt0.c1)))AND((+ (v0.c1)))) WHERE ((((((t0.c2)&(rt0.c3)), rt0.c3 COLLATE BINARY, ((v0.c1)*(rt0.c1)), TRIM(rt0.c1), rt0.c3))<=((t0.c2, ((rt0.c2) NOT BETWEEN (rt0.c0) AND (t0.c0)), (- (v0.c1)), ((-155198399)GLOB(rt0.c1)), vt0.c0)))) UNION SELECT DISTINCT rt0.c2, v0.c1, t0.c2 FROM rt0, vt0 CROSS JOIN v0 ON rt0.c0 RIGHT OUTER JOIN t0 ON ((((((((HEX(rt0.c2))OR((- (rt0.c4)))))AND(CASE v0.c2  WHEN t0.c0 THEN v0.c2 ELSE rt0.c3 END)))AND(rt0.c1)))AND((+ (v0.c1)))) WHERE ((NOT ((((((t0.c2)&(rt0.c3)), rt0.c3 COLLATE BINARY, ((v0.c1)*(rt0.c1)), TRIM(rt0.c1), rt0.c3))<=((t0.c2, ((rt0.c2) NOT BETWEEN (rt0.c0) AND (t0.c0)), (- (v0.c1)), ((-155198399)GLOB(rt0.c1)), vt0.c0)))))) UNION SELECT DISTINCT rt0.c2, v0.c1, t0.c2 FROM rt0, vt0 CROSS JOIN v0 ON rt0.c0 RIGHT OUTER JOIN t0 ON ((((((((HEX(rt0.c2))OR((- (rt0.c4)))))AND(CASE v0.c2  WHEN t0.c0 THEN v0.c2 ELSE rt0.c3 END)))AND(rt0.c1)))AND((+ (v0.c1)))) WHERE ((((((((t0.c2)&(rt0.c3)), rt0.c3 COLLATE BINARY, ((v0.c1)*(rt0.c1)), TRIM(rt0.c1), rt0.c3))<=((t0.c2, ((rt0.c2) NOT BETWEEN (rt0.c0) AND (t0.c0)), (- (v0.c1)), ((-155198399)GLOB(rt0.c1)), vt0.c0)))) ISNULL));
SELECT DISTINCT rt0.c2, v0.c1, t0.c2 FROM rt0, vt0 CROSS JOIN v0 ON rt0.c0 RIGHT OUTER JOIN t0 ON ((((((((HEX(rt0.c2))OR((- (rt0.c4)))))AND(CASE v0.c2  WHEN t0.c0 THEN v0.c2 ELSE rt0.c3 END)))AND(rt0.c1)))AND((+ (v0.c1))));
SELECT vt0.c1 FROM vt0, rt0, t0 GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0, rt0, t0 WHERE ((((rt0.c0)) NOT BETWEEN ((CAST(rt0.c3 AS REAL))) AND ((CAST(t0.c0 AS INTEGER))))) GROUP BY vt0.c1 UNION SELECT vt0.c1 FROM vt0, rt0, t0 WHERE ((NOT ((((rt0.c0)) NOT BETWEEN ((CAST(rt0.c3 AS REAL))) AND ((CAST(t0.c0 AS INTEGER))))))) GROUP BY vt0.c1 UNION SELECT ALL vt0.c1 FROM vt0, rt0, t0 WHERE ((((((rt0.c0)) NOT BETWEEN ((CAST(rt0.c3 AS REAL))) AND ((CAST(t0.c0 AS INTEGER))))) ISNULL)) GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0, rt0, t0 GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0 NOT INDEXED, t0 GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt0, t0 GROUP BY vt0.c1 HAVING COUNT(MAX(COUNT(*))) UNION ALL SELECT ALL vt0.c1 FROM vt0, t0 GROUP BY vt0.c1 HAVING (NOT (COUNT(MAX(COUNT(*))))) UNION ALL SELECT ALL vt0.c1 FROM vt0, t0 GROUP BY vt0.c1 HAVING ((COUNT(MAX(COUNT(*)))) ISNULL);
SELECT ALL rt0.c0, rt0.c4, v0.c2, rt0.c2, rt0.c1, vt0.c0 FROM rt0, t0, v0, vt0;
SELECT ALL rt0.c0, rt0.c4, v0.c2, rt0.c2, rt0.c1, vt0.c0 FROM rt0, t0, v0, vt0 WHERE ((- (((rt0.c0) BETWEEN (rt0.c3) AND (t0.c0))))) UNION ALL SELECT rt0.c0, rt0.c4, v0.c2, rt0.c2, rt0.c1, vt0.c0 FROM rt0, t0, v0, vt0 WHERE ((NOT ((- (((rt0.c0) BETWEEN (rt0.c3) AND (t0.c0))))))) UNION ALL SELECT ALL rt0.c0, rt0.c4, v0.c2, rt0.c2, rt0.c1, vt0.c0 FROM rt0, t0, v0, vt0 WHERE ((((- (((rt0.c0) BETWEEN (rt0.c3) AND (t0.c0))))) ISNULL));
SELECT ALL rt0.c0, rt0.c4, v0.c2, rt0.c2, rt0.c1, vt0.c0 FROM rt0, t0, v0, vt0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 NOT INDEXED WHERE (((((((0xffffffffdfb14ed8)AND(v0.c0)))OR(v0.c1))) NOT BETWEEN ((((v0.c2))!=((v0.c1)))) AND (((v0.c0) BETWEEN (v0.c1) AND (v0.c2))))) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (((((((0Xffffffffdfb14ed8)AND(v0.c0)))OR(v0.c1))) NOT BETWEEN ((((v0.c2))<>((v0.c1)))) AND (((v0.c0) BETWEEN (v0.c1) AND (v0.c2))))))) UNION SELECT DISTINCT * FROM v0 WHERE (((((((((0Xffffffffdfb14ed8)AND(v0.c0)))OR(v0.c1))) NOT BETWEEN ((((v0.c2))!=((v0.c1)))) AND (((v0.c0) BETWEEN (v0.c1) AND (v0.c2))))) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT v0.c2, vt0.c0, vt0.c1, v0.c0 FROM vt0, v0 GROUP BY v0.c2, vt0.c0, vt0.c1, v0.c0;
SELECT v0.c2, vt0.c0, vt0.c1, v0.c0 FROM vt0, v0 WHERE (ABS(DISTINCT ((v0.c2) BETWEEN (vt0.c1) AND (v0.c1)))) GROUP BY v0.c2, vt0.c0, vt0.c1, v0.c0 UNION SELECT ALL v0.c2, vt0.c0, vt0.c1, v0.c0 FROM vt0, v0 WHERE ((NOT (ABS(DISTINCT ((v0.c2) BETWEEN (vt0.c1) AND (v0.c1)))))) GROUP BY v0.c2, vt0.c0, vt0.c1, v0.c0 UNION SELECT v0.c2, vt0.c0, vt0.c1, v0.c0 FROM vt0, v0 WHERE (((ABS(DISTINCT ((v0.c2) BETWEEN (vt0.c1) AND (v0.c1)))) ISNULL)) GROUP BY v0.c2, vt0.c0, vt0.c1, v0.c0;
SELECT v0.c2, vt0.c0, vt0.c1, v0.c0 FROM vt0, v0 GROUP BY v0.c2, vt0.c0, vt0.c1, v0.c0;
SELECT ALL vt0.c0, t0.c0, t0.c2, vt0.c1 FROM t0 RIGHT OUTER JOIN vt0 ON (((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c1))) COLLATE RTRIM GROUP BY vt0.c0, t0.c0, t0.c2, vt0.c1;
SELECT ALL vt0.c0, t0.c0, t0.c2, vt0.c1 FROM t0 RIGHT OUTER JOIN vt0 ON (((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c1))) COLLATE RTRIM GROUP BY vt0.c0, t0.c0, t0.c2, vt0.c1 HAVING (((AVG(GROUP_CONCAT(TOTAL(vt0.c0)))))<=((GROUP_CONCAT(MAX(SUM(GROUP_CONCAT(t0.c2))))))) UNION ALL SELECT ALL vt0.c0, t0.c0, t0.c2, vt0.c1 FROM t0 RIGHT OUTER JOIN vt0 ON (((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c1))) COLLATE RTRIM GROUP BY vt0.c0, t0.c0, t0.c2, vt0.c1 HAVING (NOT ((((AVG(GROUP_CONCAT(TOTAL(vt0.c0)))))<=((GROUP_CONCAT(MAX(SUM(GROUP_CONCAT(t0.c2))))))))) UNION ALL SELECT ALL vt0.c0, t0.c0, t0.c2, vt0.c1 FROM t0 RIGHT OUTER JOIN vt0 ON (((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c1))) COLLATE RTRIM GROUP BY vt0.c0, t0.c0, t0.c2, vt0.c1 HAVING (((((AVG(GROUP_CONCAT(TOTAL(vt0.c0)))))<=((GROUP_CONCAT(MAX(SUM(GROUP_CONCAT(t0.c2)))))))) ISNULL);
SELECT MAX(LIKELIHOOD(x'4687', 0.060869019669018365)) FROM v0, rt0, vt0;
SELECT vt0.c0, rt0.c4, rt0.c1, v0.c2, v0.c1, v0.c0 FROM vt0 CROSS JOIN rt0 ON -3.03461344E8 CROSS JOIN v0 ON CASE WHEN rt0.c0 THEN 1840380902 END CROSS JOIN t0 ON COALESCE(DISTINCT ((v0.c2)<>(x'')), ((0.37452732496215557)>(-5.42028072E8)));
SELECT vt0.c0, rt0.c4, rt0.c1, v0.c2, v0.c1, v0.c0 FROM vt0 CROSS JOIN rt0 ON -3.03461344E8 CROSS JOIN v0 ON CASE WHEN rt0.c0 THEN 1840380902 END CROSS JOIN t0 ON COALESCE(DISTINCT ((v0.c2)<>(x'')), ((0.37452732496215557)>(-5.42028072E8))) WHERE ((((rt0.c1) NOTNULL) IN ())) UNION ALL SELECT vt0.c0, rt0.c4, rt0.c1, v0.c2, v0.c1, v0.c0 FROM vt0 CROSS JOIN rt0 ON -3.03461344E8 CROSS JOIN v0 ON CASE WHEN rt0.c0 THEN 1840380902 END CROSS JOIN t0 ON COALESCE(DISTINCT ((v0.c2)!=(x'')), ((0.37452732496215557)>(-5.42028072E8))) WHERE ((NOT ((((rt0.c1) NOTNULL) IN ())))) UNION ALL SELECT ALL vt0.c0, rt0.c4, rt0.c1, v0.c2, v0.c1, v0.c0 FROM vt0 CROSS JOIN rt0 ON -3.03461344E8 CROSS JOIN v0 ON CASE WHEN rt0.c0 THEN 1840380902 END CROSS JOIN t0 ON COALESCE(DISTINCT ((v0.c2)<>(x'')), ((0.37452732496215557)>(-5.42028072E8))) WHERE ((((((rt0.c1) NOTNULL) IN ())) ISNULL));
SELECT vt0.c0, rt0.c4, rt0.c1, v0.c2, v0.c1, v0.c0 FROM vt0 CROSS JOIN rt0 ON -3.03461344E8 CROSS JOIN v0 ON CASE WHEN rt0.c0 THEN 1840380902 END CROSS JOIN t0 ON COALESCE(DISTINCT ((v0.c2)<>(x'')), ((0.37452732496215557)>(-5.42028072E8)));
SELECT DISTINCT * FROM v0, rt0, t0, vt0;
SELECT DISTINCT * FROM v0, rt0, t0, vt0 WHERE ((((((rt0.c2)%(t0.c0)), ((t0.c2)!=(v0.c0)), CASE WHEN rt0.c4 THEN v0.c1 WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c2 THEN v0.c2 END, ((((((((v0.c1)OR(v0.c2)))AND(vt0.c0)))AND(t0.c2)))AND(x'')), ((rt0.c3)IS(rt0.c4))))>=((CASE t0.c2  WHEN t0.c0 THEN x'' WHEN vt0.c1 THEN vt0.c1 WHEN t0.c0 THEN v0.c2 END, (- (v0.c2)), CASE rt0.c3  WHEN rt0.c4 THEN rt0.c3 WHEN v0.c1 THEN t0.c0 WHEN t0.c2 THEN rt0.c0 WHEN '!L&~s2^?' THEN rt0.c0 WHEN vt0.c1 THEN t0.c0 WHEN rt0.c4 THEN t0.c0 WHEN rt0.c4 THEN vt0.c0 ELSE rt0.c0 END, CASE t0.c2  WHEN t0.c2 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c0 WHEN vt0.c0 THEN NULL END, 0xfffffffffd6628e3)))) UNION SELECT DISTINCT * FROM v0, rt0, t0, vt0 WHERE ((NOT ((((((rt0.c2)%(t0.c0)), ((t0.c2)!=(v0.c0)), CASE WHEN rt0.c4 THEN v0.c1 WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c2 THEN v0.c2 END, ((((((((v0.c1)OR(v0.c2)))AND(vt0.c0)))AND(t0.c2)))AND(x'')), ((rt0.c3)IS(rt0.c4))))>=((CASE t0.c2  WHEN t0.c0 THEN x'' WHEN vt0.c1 THEN vt0.c1 WHEN t0.c0 THEN v0.c2 END, (- (v0.c2)), CASE rt0.c3  WHEN rt0.c4 THEN rt0.c3 WHEN v0.c1 THEN t0.c0 WHEN t0.c2 THEN rt0.c0 WHEN '!L&~s2^?' THEN rt0.c0 WHEN vt0.c1 THEN t0.c0 WHEN rt0.c4 THEN t0.c0 WHEN rt0.c4 THEN vt0.c0 ELSE rt0.c0 END, CASE t0.c2  WHEN t0.c2 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c0 WHEN vt0.c0 THEN NULL END, 0xfffffffffd6628e3)))))) UNION SELECT DISTINCT * FROM v0, rt0, t0, vt0 WHERE ((((((((rt0.c2)%(t0.c0)), ((t0.c2)<>(v0.c0)), CASE WHEN rt0.c4 THEN v0.c1 WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c2 THEN v0.c2 END, ((((((((v0.c1)OR(v0.c2)))AND(vt0.c0)))AND(t0.c2)))AND(x'')), ((rt0.c3)IS(rt0.c4))))>=((CASE t0.c2  WHEN t0.c0 THEN x'' WHEN vt0.c1 THEN vt0.c1 WHEN t0.c0 THEN v0.c2 END, (- (v0.c2)), CASE rt0.c3  WHEN rt0.c4 THEN rt0.c3 WHEN v0.c1 THEN t0.c0 WHEN t0.c2 THEN rt0.c0 WHEN '!L&~s2^?' THEN rt0.c0 WHEN vt0.c1 THEN t0.c0 WHEN rt0.c4 THEN t0.c0 WHEN rt0.c4 THEN vt0.c0 ELSE rt0.c0 END, CASE t0.c2  WHEN t0.c2 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c0 WHEN vt0.c0 THEN NULL END, 0Xfffffffffd6628e3)))) ISNULL));
SELECT DISTINCT * FROM v0, rt0, t0, vt0;
SELECT ALL rt0.c0, v0.c1, rt0.c3, rt0.c1, v0.c0, rt0.c2, v0.c2 FROM v0, t0 INNER JOIN rt0 ON ((((((((v0.c2)AND(0xfffffffffa572336)))OR(rt0.c1)))AND(CAST(t0.c0 AS NUMERIC))))AND(((t0.c2) ISNULL))) GROUP BY rt0.c0, v0.c1, rt0.c3, rt0.c1, v0.c0, rt0.c2, v0.c2;
SELECT ALL rt0.c0, v0.c1, rt0.c3, rt0.c1, v0.c0, rt0.c2, v0.c2 FROM v0, t0 INNER JOIN rt0 ON ((((((((v0.c2)AND(0xfffffffffa572336)))OR(rt0.c1)))AND(CAST(t0.c0 AS NUMERIC))))AND(((t0.c2) ISNULL))) WHERE (COALESCE((- (NULL)), ((((t0.c0)AND(v0.c0)))OR(v0.c1)))) GROUP BY rt0.c0, v0.c1, rt0.c3, rt0.c1, v0.c0, rt0.c2, v0.c2 UNION SELECT rt0.c0, v0.c1, rt0.c3, rt0.c1, v0.c0, rt0.c2, v0.c2 FROM v0, t0 INNER JOIN rt0 ON ((((((((v0.c2)AND(0xfffffffffa572336)))OR(rt0.c1)))AND(CAST(t0.c0 AS NUMERIC))))AND(((t0.c2) ISNULL))) WHERE ((NOT (COALESCE((- (NULL)), ((((t0.c0)AND(v0.c0)))OR(v0.c1)))))) GROUP BY rt0.c0, v0.c1, rt0.c3, rt0.c1, v0.c0, rt0.c2, v0.c2 UNION SELECT ALL rt0.c0, v0.c1, rt0.c3, rt0.c1, v0.c0, rt0.c2, v0.c2 FROM v0, t0 INNER JOIN rt0 ON ((((((((v0.c2)AND(0Xfffffffffa572336)))OR(rt0.c1)))AND(CAST(t0.c0 AS NUMERIC))))AND(((t0.c2) ISNULL))) WHERE (((COALESCE((- (NULL)), ((((t0.c0)AND(v0.c0)))OR(v0.c1)))) ISNULL)) GROUP BY rt0.c0, v0.c1, rt0.c3, rt0.c1, v0.c0, rt0.c2, v0.c2;
SELECT ALL rt0.c0, v0.c1, rt0.c3, rt0.c1, v0.c0, rt0.c2, v0.c2 FROM v0, t0 INNER JOIN rt0 ON ((((((((v0.c2)AND(0xfffffffffa572336)))OR(rt0.c1)))AND(CAST(t0.c0 AS NUMERIC))))AND(((t0.c2) ISNULL))) GROUP BY rt0.c0, v0.c1, rt0.c3, rt0.c1, v0.c0, rt0.c2, v0.c2;
SELECT ALL t0.c0, v0.c2, t0.c2 FROM t0 NATURAL JOIN v0 GROUP BY t0.c0, v0.c2, t0.c2;
SELECT ALL t0.c0, v0.c2, t0.c2 FROM t0 NATURAL JOIN v0 GROUP BY t0.c0, v0.c2, t0.c2 HAVING TOTAL(MIN(GROUP_CONCAT(v0.c1))) UNION ALL SELECT ALL t0.c0, v0.c2, t0.c2 FROM t0 NATURAL JOIN v0 GROUP BY t0.c0, v0.c2, t0.c2 HAVING (NOT (TOTAL(MIN(GROUP_CONCAT(v0.c1))))) UNION ALL SELECT ALL t0.c0, v0.c2, t0.c2 FROM t0 NATURAL JOIN v0 GROUP BY t0.c0, v0.c2, t0.c2 HAVING ((TOTAL(MIN(GROUP_CONCAT(v0.c1)))) ISNULL);
SELECT ALL rt0.c1 FROM rt0, v0;
SELECT rt0.c1 FROM rt0, v0 WHERE (TOTAL_CHANGES()) UNION ALL SELECT ALL rt0.c1 FROM rt0, v0 WHERE ((NOT (TOTAL_CHANGES()))) UNION ALL SELECT ALL rt0.c1 FROM rt0, v0 WHERE (((TOTAL_CHANGES()) ISNULL));
SELECT ALL rt0.c1 FROM rt0, v0;
SELECT DISTINCT v0.c1, v0.c0, vt0.c1 FROM v0, t0, vt0;
SELECT DISTINCT v0.c1, v0.c0, vt0.c1 FROM v0, t0, vt0 WHERE (((((v0.c2) NOT NULL)) IS FALSE)) UNION SELECT DISTINCT v0.c1, v0.c0, vt0.c1 FROM v0, t0, vt0 WHERE ((NOT (((((v0.c2) NOT NULL)) IS FALSE)))) UNION SELECT DISTINCT v0.c1, v0.c0, vt0.c1 FROM v0, t0, vt0 WHERE (((((((v0.c2) NOT NULL)) IS FALSE)) ISNULL));
SELECT DISTINCT v0.c1, v0.c0, vt0.c1 FROM v0, t0, vt0;
SELECT v0.c0, v0.c1, v0.c2 FROM v0 GROUP BY v0.c0, v0.c1, v0.c2;
SELECT ALL v0.c0, v0.c1, v0.c2 FROM v0 WHERE (((load_extension(v0.c2, v0.c0))|(CAST(v0.c0 AS REAL)))) GROUP BY v0.c0, v0.c1, v0.c2 UNION SELECT ALL v0.c0, v0.c1, v0.c2 FROM v0 WHERE ((NOT (((load_extension(v0.c2, v0.c0))|(CAST(v0.c0 AS REAL)))))) GROUP BY v0.c0, v0.c1, v0.c2 UNION SELECT ALL v0.c0, v0.c1, v0.c2 FROM v0 WHERE (((((load_extension(v0.c2, v0.c0))|(CAST(v0.c0 AS REAL)))) ISNULL)) GROUP BY v0.c0, v0.c1, v0.c2;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING COUNT(SUM(t0.c0)) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (COUNT(SUM(t0.c0)))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((COUNT(SUM(t0.c0))) ISNULL);
SELECT v0.c2, v0.c0, t0.c2, t0.c0 FROM t0 RIGHT OUTER JOIN v0 ON ((((t0.c0)<(NULL)))%(TRIM(DISTINCT v0.c2, v0.c1)));
SELECT v0.c2, v0.c0, t0.c2, t0.c0 FROM t0 RIGHT OUTER JOIN v0 ON ((((t0.c0)<(NULL)))%(TRIM(DISTINCT v0.c2, v0.c1))) WHERE (load_extension(((0.7232911170794333) IS FALSE))) UNION ALL SELECT v0.c2, v0.c0, t0.c2, t0.c0 FROM t0 RIGHT OUTER JOIN v0 ON ((((t0.c0)<(NULL)))%(TRIM(DISTINCT v0.c2, v0.c1))) WHERE ((NOT (load_extension(((0.7232911170794333) IS FALSE))))) UNION ALL SELECT ALL v0.c2, v0.c0, t0.c2, t0.c0 FROM t0 RIGHT OUTER JOIN v0 ON ((((t0.c0)<(NULL)))%(TRIM(DISTINCT v0.c2, v0.c1))) WHERE (((load_extension(((0.7232911170794333) IS FALSE))) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 NOT INDEXED WHERE (((t0.c2 COLLATE BINARY) NOT NULL)) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (((t0.c2 COLLATE BINARY) NOT NULL)))) UNION SELECT DISTINCT * FROM t0 WHERE (((((t0.c2 COLLATE BINARY) NOT NULL)) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT ALL vt0.c1 FROM rt0 FULL OUTER JOIN vt0 ON ((((HEX(DISTINCT vt0.c0))OR('T')))AND(((vt0.c1) BETWEEN (rt0.c4) AND (rt0.c1)))) GROUP BY vt0.c1;
SELECT vt0.c1 FROM rt0 FULL OUTER JOIN vt0 ON ((((HEX(DISTINCT vt0.c0))OR('T')))AND(((vt0.c1) BETWEEN (rt0.c4) AND (rt0.c1)))) WHERE (((CAST(rt0.c2 AS BLOB)) BETWEEN ((((rt0.c0)) NOT BETWEEN ((rt0.c3)) AND ((vt0.c1)))) AND (((rt0.c2) NOT NULL)))) GROUP BY vt0.c1 UNION SELECT vt0.c1 FROM rt0 FULL OUTER JOIN vt0 ON ((((HEX(DISTINCT vt0.c0))OR('T')))AND(((vt0.c1) BETWEEN (rt0.c4) AND (rt0.c1)))) WHERE ((NOT (((CAST(rt0.c2 AS BLOB)) BETWEEN ((((rt0.c0)) NOT BETWEEN ((rt0.c3)) AND ((vt0.c1)))) AND (((rt0.c2) NOT NULL)))))) GROUP BY vt0.c1 UNION SELECT vt0.c1 FROM rt0 FULL OUTER JOIN vt0 ON ((((HEX(DISTINCT vt0.c0))OR('T')))AND(((vt0.c1) BETWEEN (rt0.c4) AND (rt0.c1)))) WHERE (((((CAST(rt0.c2 AS BLOB)) BETWEEN ((((rt0.c0)) NOT BETWEEN ((rt0.c3)) AND ((vt0.c1)))) AND (((rt0.c2) NOT NULL)))) ISNULL)) GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM rt0 FULL OUTER JOIN vt0 ON ((((HEX(DISTINCT vt0.c0))OR('T')))AND(((vt0.c1) BETWEEN (rt0.c4) AND (rt0.c1)))) GROUP BY vt0.c1;
SELECT t0.c2, t0.c0 FROM t0 GROUP BY t0.c2, t0.c0;
SELECT t0.c2, t0.c0 FROM t0 GROUP BY t0.c2, t0.c0 HAVING (((CHAR(COUNT(MIN(MAX(0x217c9c9))))))>=((CAST(GROUP_CONCAT(t0.c0) AS BLOB)))) UNION ALL SELECT ALL t0.c2, t0.c0 FROM t0 GROUP BY t0.c2, t0.c0 HAVING (NOT ((((CHAR(COUNT(MIN(MAX(0x217c9c9))))))>=((CAST(GROUP_CONCAT(t0.c0) AS BLOB)))))) UNION ALL SELECT ALL t0.c2, t0.c0 FROM t0 GROUP BY t0.c2, t0.c0 HAVING (((((CHAR(COUNT(MIN(MAX(0X217c9c9))))))>=((CAST(GROUP_CONCAT(t0.c0) AS BLOB))))) ISNULL);
SELECT * FROM vt0, v0, t0, rt0;
SELECT * FROM vt0, v0, t0, rt0 WHERE (((((((rt0.c1)AND(vt0.c1)))OR(v0.c0))) NOT NULL)) UNION ALL SELECT ALL * FROM vt0, v0, t0, rt0 WHERE ((NOT (((((((rt0.c1)AND(vt0.c1)))OR(v0.c0))) NOT NULL)))) UNION ALL SELECT ALL * FROM vt0, v0, t0, rt0 WHERE (((((((((rt0.c1)AND(vt0.c1)))OR(v0.c0))) NOT NULL)) ISNULL));
SELECT * FROM vt0, v0, t0, rt0;
SELECT DISTINCT * FROM rt0, vt0, t0;
SELECT DISTINCT * FROM rt0, vt0, t0 WHERE ((~ (rt0.c2))) UNION SELECT DISTINCT * FROM rt0, vt0, t0 WHERE ((NOT ((~ (rt0.c2))))) UNION SELECT DISTINCT * FROM rt0, vt0, t0 WHERE ((((~ (rt0.c2))) ISNULL));
SELECT DISTINCT * FROM rt0, vt0, t0;
SELECT ALL vt0.c0, t0.c2, t0.c0 FROM vt0, t0 GROUP BY vt0.c0, t0.c2, t0.c0;
SELECT ALL vt0.c0, t0.c2, t0.c0 FROM vt0, t0 WHERE (t0.c2) GROUP BY vt0.c0, t0.c2, t0.c0 UNION SELECT ALL vt0.c0, t0.c2, t0.c0 FROM vt0, t0 WHERE ((NOT (t0.c2))) GROUP BY vt0.c0, t0.c2, t0.c0 UNION SELECT vt0.c0, t0.c2, t0.c0 FROM vt0, t0 WHERE (((t0.c2) ISNULL)) GROUP BY vt0.c0, t0.c2, t0.c0;
SELECT ALL vt0.c0, t0.c2, t0.c0 FROM vt0, t0 GROUP BY vt0.c0, t0.c2, t0.c0;
SELECT ALL v0.c2, t0.c0 FROM v0, rt0, vt0, t0 GROUP BY v0.c2, t0.c0;
SELECT v0.c2, t0.c0 FROM v0, rt0, vt0, t0 GROUP BY v0.c2, t0.c0 HAVING (((highlight(v0.c0, COUNT(vt0.c0), t0.c2, rt0.c1), MIN(vt0.c0), ((v0.c1) NOT BETWEEN (rt0.c0) AND (v0.c2))))<((((((TOTAL(MIN(MIN(rt0.c1))))OR(v0.c2)))AND(v0.c0)), CAST(COUNT(v0.c1) AS REAL), ((rt0.c3) NOT NULL)))) UNION ALL SELECT v0.c2, t0.c0 FROM v0, rt0, vt0, t0 GROUP BY v0.c2, t0.c0 HAVING (NOT ((((highlight(v0.c0, COUNT(vt0.c0), t0.c2, rt0.c1), MIN(vt0.c0), ((v0.c1) NOT BETWEEN (rt0.c0) AND (v0.c2))))<((((((TOTAL(MIN(MIN(rt0.c1))))OR(v0.c2)))AND(v0.c0)), CAST(COUNT(v0.c1) AS REAL), ((rt0.c3) NOT NULL)))))) UNION ALL SELECT ALL v0.c2, t0.c0 FROM v0, rt0, vt0, t0 GROUP BY v0.c2, t0.c0 HAVING (((((highlight(v0.c0, COUNT(vt0.c0), t0.c2, rt0.c1), MIN(vt0.c0), ((v0.c1) NOT BETWEEN (rt0.c0) AND (v0.c2))))<((((((TOTAL(MIN(MIN(rt0.c1))))OR(v0.c2)))AND(v0.c0)), CAST(COUNT(v0.c1) AS REAL), ((rt0.c3) NOT NULL))))) ISNULL);
SELECT vt0.c1, rt0.c2, rt0.c3, v0.c2, v0.c1, rt0.c1 FROM vt0, v0, rt0, t0;
SELECT ALL vt0.c1, rt0.c2, rt0.c3, v0.c2, v0.c1, rt0.c1 FROM vt0, v0, rt0, t0 WHERE (CAST((t0.c0 IN ()) AS BLOB)) UNION ALL SELECT vt0.c1, rt0.c2, rt0.c3, v0.c2, v0.c1, rt0.c1 FROM vt0, v0, rt0, t0 WHERE ((NOT (CAST((t0.c0 IN ()) AS BLOB)))) UNION ALL SELECT ALL vt0.c1, rt0.c2, rt0.c3, v0.c2, v0.c1, rt0.c1 FROM vt0, v0, rt0, t0 WHERE (((CAST((t0.c0 IN ()) AS BLOB)) ISNULL));
SELECT vt0.c1, rt0.c2, rt0.c3, v0.c2, v0.c1, rt0.c1 FROM vt0, v0, rt0, t0;
SELECT DISTINCT v0.c0, rt0.c2, v0.c1, vt0.c0, rt0.c0, rt0.c4, vt0.c1, v0.c2 FROM rt0, t0, vt0 RIGHT OUTER JOIN v0 ON ((((((((((((CAST(0.9628140078021044 AS BLOB))AND(rt0.c2 COLLATE NOCASE)))OR((NOT (rt0.c3)))))AND(t0.c2)))AND(CASE rt0.c3  WHEN rt0.c1 THEN rt0.c4 END)))OR(((t0.c2) IS TRUE))))AND((((v0.c0))<=((rt0.c2)))));
SELECT DISTINCT v0.c0, rt0.c2, v0.c1, vt0.c0, rt0.c0, rt0.c4, vt0.c1, v0.c2 FROM rt0, t0, vt0 RIGHT OUTER JOIN v0 ON ((((((((((((CAST(0.9628140078021044 AS BLOB))AND(rt0.c2 COLLATE NOCASE)))OR((NOT (rt0.c3)))))AND(t0.c2)))AND(CASE rt0.c3  WHEN rt0.c1 THEN rt0.c4 END)))OR(((t0.c2) IS TRUE))))AND((((v0.c0))<=((rt0.c2))))) WHERE (PRINTF(((t0.c0)<(rt0.c4)), rt0.c1, 0Xffffffffe82dec7b COLLATE BINARY)) UNION SELECT DISTINCT v0.c0, rt0.c2, v0.c1, vt0.c0, rt0.c0, rt0.c4, vt0.c1, v0.c2 FROM rt0, t0, vt0 RIGHT OUTER JOIN v0 ON ((((((((((((CAST(0.9628140078021044 AS BLOB))AND(rt0.c2 COLLATE NOCASE)))OR((NOT (rt0.c3)))))AND(t0.c2)))AND(CASE rt0.c3  WHEN rt0.c1 THEN rt0.c4 END)))OR(((t0.c2) IS TRUE))))AND((((v0.c0))<=((rt0.c2))))) WHERE ((NOT (PRINTF(((t0.c0)<(rt0.c4)), rt0.c1, 0Xffffffffe82dec7b COLLATE BINARY)))) UNION SELECT DISTINCT v0.c0, rt0.c2, v0.c1, vt0.c0, rt0.c0, rt0.c4, vt0.c1, v0.c2 FROM rt0, t0, vt0 RIGHT OUTER JOIN v0 ON ((((((((((((CAST(0.9628140078021044 AS BLOB))AND(rt0.c2 COLLATE NOCASE)))OR((NOT (rt0.c3)))))AND(t0.c2)))AND(CASE rt0.c3  WHEN rt0.c1 THEN rt0.c4 END)))OR(((t0.c2) IS TRUE))))AND((((v0.c0))<=((rt0.c2))))) WHERE (((PRINTF(((t0.c0)<(rt0.c4)), rt0.c1, 0xffffffffe82dec7b COLLATE BINARY)) ISNULL));
SELECT DISTINCT v0.c0, rt0.c2, v0.c1, vt0.c0, rt0.c0, rt0.c4, vt0.c1, v0.c2 FROM rt0, t0, vt0 RIGHT OUTER JOIN v0 ON ((((((((((((CAST(0.9628140078021044 AS BLOB))AND(rt0.c2 COLLATE NOCASE)))OR((NOT (rt0.c3)))))AND(t0.c2)))AND(CASE rt0.c3  WHEN rt0.c1 THEN rt0.c4 END)))OR(((t0.c2) IS TRUE))))AND((((v0.c0))<=((rt0.c2)))));
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 NOT INDEXED WHERE (((CAST(x'' AS NUMERIC))&(CASE v0.c2  WHEN NULL THEN v0.c2 WHEN v0.c1 THEN v0.c2 WHEN v0.c2 THEN v0.c2 END))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (((CAST(x'' AS NUMERIC))&(CASE v0.c2  WHEN NULL THEN v0.c2 WHEN v0.c1 THEN v0.c2 WHEN v0.c2 THEN v0.c2 END))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((((CAST(x'' AS NUMERIC))&(CASE v0.c2  WHEN NULL THEN v0.c2 WHEN v0.c1 THEN v0.c2 WHEN v0.c2 THEN v0.c2 END))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c1, rt0.c4, rt0.c2 FROM rt0, v0, vt0 GROUP BY v0.c1, rt0.c4, rt0.c2;
SELECT ALL v0.c1, rt0.c4, rt0.c2 FROM rt0, v0, vt0 GROUP BY v0.c1, rt0.c4, rt0.c2 HAVING MIN(COUNT(*)) UNION ALL SELECT v0.c1, rt0.c4, rt0.c2 FROM rt0, v0, vt0 GROUP BY v0.c1, rt0.c4, rt0.c2 HAVING (NOT (MIN(COUNT(*)))) UNION ALL SELECT v0.c1, rt0.c4, rt0.c2 FROM rt0, v0, vt0 GROUP BY v0.c1, rt0.c4, rt0.c2 HAVING ((MIN(COUNT(*))) ISNULL);
SELECT ALL * FROM v0;
SELECT * FROM v0 WHERE (CHAR(((v0.c0)<>(v0.c2)))) UNION ALL SELECT * FROM v0 WHERE ((NOT (CHAR(((v0.c0)<>(v0.c2)))))) UNION ALL SELECT ALL * FROM v0 WHERE (((CHAR(((v0.c0)!=(v0.c2)))) ISNULL));
SELECT ALL * FROM v0;
SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0 WHERE (rt0.c0) UNION SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (rt0.c0))) UNION SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0 WHERE (((rt0.c0) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0;
SELECT ALL rt0.c2, v0.c1, rt0.c1, vt0.c1, rt0.c3, v0.c2, v0.c0, rt0.c0 FROM vt0, t0, v0, rt0 GROUP BY rt0.c2, v0.c1, rt0.c1, vt0.c1, rt0.c3, v0.c2, v0.c0, rt0.c0;
SELECT rt0.c2, v0.c1, rt0.c1, vt0.c1, rt0.c3, v0.c2, v0.c0, rt0.c0 FROM vt0, t0, v0, rt0 WHERE (COALESCE(DISTINCT rt0.c3, ((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c0)), LIKELY(DISTINCT rt0.c1), rt0.c2, (rt0.c2 IN (rt0.c1)), (NOT (vt0.c1)))) GROUP BY rt0.c2, v0.c1, rt0.c1, vt0.c1, rt0.c3, v0.c2, v0.c0, rt0.c0 UNION SELECT ALL rt0.c2, v0.c1, rt0.c1, vt0.c1, rt0.c3, v0.c2, v0.c0, rt0.c0 FROM vt0, t0, v0, rt0 WHERE ((NOT (COALESCE(DISTINCT rt0.c3, ((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c0)), LIKELY(DISTINCT rt0.c1), rt0.c2, (rt0.c2 IN (rt0.c1)), (NOT (vt0.c1)))))) GROUP BY rt0.c2, v0.c1, rt0.c1, vt0.c1, rt0.c3, v0.c2, v0.c0, rt0.c0 UNION SELECT rt0.c2, v0.c1, rt0.c1, vt0.c1, rt0.c3, v0.c2, v0.c0, rt0.c0 FROM vt0, t0, v0, rt0 WHERE (((COALESCE(DISTINCT rt0.c3, ((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c0)), LIKELY(DISTINCT rt0.c1), rt0.c2, (rt0.c2 IN (rt0.c1)), (NOT (vt0.c1)))) ISNULL)) GROUP BY rt0.c2, v0.c1, rt0.c1, vt0.c1, rt0.c3, v0.c2, v0.c0, rt0.c0;
SELECT ALL rt0.c2, v0.c1, rt0.c1, vt0.c1, rt0.c3, v0.c2, v0.c0, rt0.c0 FROM vt0, t0, v0, rt0 GROUP BY rt0.c2, v0.c1, rt0.c1, vt0.c1, rt0.c3, v0.c2, v0.c0, rt0.c0;
SELECT ALL rt0.c1, rt0.c2, v0.c1, rt0.c3, rt0.c4 FROM vt0, v0, rt0 GROUP BY rt0.c1, rt0.c2, v0.c1, rt0.c3, rt0.c4;
SELECT rt0.c1, rt0.c2, v0.c1, rt0.c3, rt0.c4 FROM vt0, v0, rt0 GROUP BY rt0.c1, rt0.c2, v0.c1, rt0.c3, rt0.c4 HAVING ((SUM(AVG(vt0.c0)))%(AVG(v0.c0))) UNION ALL SELECT rt0.c1, rt0.c2, v0.c1, rt0.c3, rt0.c4 FROM vt0, v0, rt0 GROUP BY rt0.c1, rt0.c2, v0.c1, rt0.c3, rt0.c4 HAVING (NOT (((SUM(AVG(vt0.c0)))%(AVG(v0.c0))))) UNION ALL SELECT rt0.c1, rt0.c2, v0.c1, rt0.c3, rt0.c4 FROM vt0, v0, rt0 GROUP BY rt0.c1, rt0.c2, v0.c1, rt0.c3, rt0.c4 HAVING ((((SUM(AVG(vt0.c0)))%(AVG(v0.c0)))) ISNULL);
SELECT ALL v0.c0, v0.c2, v0.c1 FROM v0;
SELECT v0.c0, v0.c2, v0.c1 FROM v0 WHERE ((((v0.c1, v0.c2, v0.c2)) NOT BETWEEN ((CAST(v0.c1 AS TEXT), CAST(v0.c0 AS TEXT), CAST(v0.c1 AS BLOB))) AND ((((v0.c2) NOT BETWEEN (v0.c2) AND (v0.c1)), NULL, ((v0.c2) NOT BETWEEN (v0.c2) AND (v0.c0)))))) UNION ALL SELECT v0.c0, v0.c2, v0.c1 FROM v0 WHERE ((NOT ((((v0.c1, v0.c2, v0.c2)) NOT BETWEEN ((CAST(v0.c1 AS TEXT), CAST(v0.c0 AS TEXT), CAST(v0.c1 AS BLOB))) AND ((((v0.c2) NOT BETWEEN (v0.c2) AND (v0.c1)), NULL, ((v0.c2) NOT BETWEEN (v0.c2) AND (v0.c0)))))))) UNION ALL SELECT v0.c0, v0.c2, v0.c1 FROM v0 WHERE ((((((v0.c1, v0.c2, v0.c2)) NOT BETWEEN ((CAST(v0.c1 AS TEXT), CAST(v0.c0 AS TEXT), CAST(v0.c1 AS BLOB))) AND ((((v0.c2) NOT BETWEEN (v0.c2) AND (v0.c1)), NULL, ((v0.c2) NOT BETWEEN (v0.c2) AND (v0.c0)))))) ISNULL));
SELECT ALL v0.c0, v0.c2, v0.c1 FROM v0;
SELECT DISTINCT * FROM rt0, vt0, v0 INNER JOIN t0 ON ((LIKELY(v0.c2))>((((rt0.c3))==((rt0.c4)))));
SELECT DISTINCT * FROM rt0, vt0, v0 INNER JOIN t0 ON ((LIKELY(v0.c2))>((((rt0.c3))==((rt0.c4))))) WHERE (-1.240945553E9) UNION SELECT DISTINCT * FROM rt0, vt0, v0 INNER JOIN t0 ON ((LIKELY(v0.c2))>((((rt0.c3))==((rt0.c4))))) WHERE ((NOT (-1.240945553E9))) UNION SELECT DISTINCT * FROM rt0, vt0, v0 INNER JOIN t0 ON ((LIKELY(v0.c2))>((((rt0.c3))=((rt0.c4))))) WHERE (((-1.240945553E9) ISNULL));
SELECT DISTINCT * FROM rt0, vt0, v0 INNER JOIN t0 ON ((LIKELY(v0.c2))>((((rt0.c3))==((rt0.c4)))));
SELECT v0.c1 FROM v0 GROUP BY v0.c1;
SELECT v0.c1 FROM v0 WHERE (((((UNLIKELY(v0.c0))OR(CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c1 THEN v0.c1 WHEN v0.c2 THEN v0.c1 ELSE v0.c2 END)))AND(CAST(v0.c0 AS REAL)))) GROUP BY v0.c1 UNION SELECT v0.c1 FROM v0 WHERE ((NOT (((((UNLIKELY(v0.c0))OR(CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c1 THEN v0.c1 WHEN v0.c2 THEN v0.c1 ELSE v0.c2 END)))AND(CAST(v0.c0 AS REAL)))))) GROUP BY v0.c1 UNION SELECT v0.c1 FROM v0 WHERE (((((((UNLIKELY(v0.c0))OR(CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c1 THEN v0.c1 WHEN v0.c2 THEN v0.c1 ELSE v0.c2 END)))AND(CAST(v0.c0 AS REAL)))) ISNULL)) GROUP BY v0.c1;
SELECT v0.c1 FROM v0 GROUP BY v0.c1;
SELECT ALL vt0.c0, rt0.c4, vt0.c1, v0.c0, t0.c0, v0.c2, v0.c1, rt0.c0, rt0.c1, t0.c2, rt0.c2 FROM rt0 FULL OUTER JOIN vt0 ON (~ (vt0.c0)) FULL OUTER JOIN t0 ON ((~ (t0.c0)) IN ()) LEFT OUTER JOIN v0 ON ((~ (t0.c0)) IN ()) GROUP BY vt0.c0, rt0.c4, vt0.c1, v0.c0, t0.c0, v0.c2, v0.c1, rt0.c0, rt0.c1, t0.c2, rt0.c2;
SELECT vt0.c0, rt0.c4, vt0.c1, v0.c0, t0.c0, v0.c2, v0.c1, rt0.c0, rt0.c1, t0.c2, rt0.c2 FROM rt0 FULL OUTER JOIN vt0 ON (~ (vt0.c0)) FULL OUTER JOIN t0 ON ((~ (t0.c0)) IN ()) LEFT OUTER JOIN v0 ON ((~ (t0.c0)) IN ()) GROUP BY vt0.c0, rt0.c4, vt0.c1, v0.c0, t0.c0, v0.c2, v0.c1, rt0.c0, rt0.c1, t0.c2, rt0.c2 HAVING TOTAL(CASE WHEN GROUP_CONCAT(rt0.c2) THEN COUNT(*) WHEN rt0.c3 THEN MAX(TOTAL(rt0.c4)) WHEN COUNT(AVG(rt0.c1)) THEN COUNT(COUNT(*)) ELSE rt0.c0 END) UNION ALL SELECT ALL vt0.c0, rt0.c4, vt0.c1, v0.c0, t0.c0, v0.c2, v0.c1, rt0.c0, rt0.c1, t0.c2, rt0.c2 FROM rt0 FULL OUTER JOIN vt0 ON (~ (vt0.c0)) FULL OUTER JOIN t0 ON ((~ (t0.c0)) IN ()) LEFT OUTER JOIN v0 ON ((~ (t0.c0)) IN ()) GROUP BY vt0.c0, rt0.c4, vt0.c1, v0.c0, t0.c0, v0.c2, v0.c1, rt0.c0, rt0.c1, t0.c2, rt0.c2 HAVING (NOT (TOTAL(CASE WHEN GROUP_CONCAT(rt0.c2) THEN COUNT(*) WHEN rt0.c3 THEN MAX(TOTAL(rt0.c4)) WHEN COUNT(AVG(rt0.c1)) THEN COUNT(COUNT(*)) ELSE rt0.c0 END))) UNION ALL SELECT vt0.c0, rt0.c4, vt0.c1, v0.c0, t0.c0, v0.c2, v0.c1, rt0.c0, rt0.c1, t0.c2, rt0.c2 FROM rt0 FULL OUTER JOIN vt0 ON (~ (vt0.c0)) FULL OUTER JOIN t0 ON ((~ (t0.c0)) IN ()) LEFT OUTER JOIN v0 ON ((~ (t0.c0)) IN ()) GROUP BY vt0.c0, rt0.c4, vt0.c1, v0.c0, t0.c0, v0.c2, v0.c1, rt0.c0, rt0.c1, t0.c2, rt0.c2 HAVING ((TOTAL(CASE WHEN GROUP_CONCAT(rt0.c2) THEN COUNT(*) WHEN rt0.c3 THEN MAX(TOTAL(rt0.c4)) WHEN COUNT(AVG(rt0.c1)) THEN COUNT(COUNT(*)) ELSE rt0.c0 END)) ISNULL);
SELECT * FROM v0, t0;
SELECT ALL * FROM v0, t0 WHERE (CAST(CAST(v0.c1 AS NUMERIC) AS NUMERIC)) UNION ALL SELECT ALL * FROM v0, t0 WHERE ((NOT (CAST(CAST(v0.c1 AS NUMERIC) AS NUMERIC)))) UNION ALL SELECT ALL * FROM v0, t0 WHERE (((CAST(CAST(v0.c1 AS NUMERIC) AS NUMERIC)) ISNULL));
SELECT * FROM v0, t0;
SELECT DISTINCT * FROM rt0, v0, t0;
SELECT DISTINCT * FROM rt0, v0, t0 WHERE (((((rt0.c3) NOTNULL)) NOT BETWEEN (((NULL) BETWEEN (t0.c0) AND (rt0.c4))) AND (rt0.c2))) UNION SELECT DISTINCT * FROM rt0, v0, t0 WHERE ((NOT (((((rt0.c3) NOTNULL)) NOT BETWEEN (((NULL) BETWEEN (t0.c0) AND (rt0.c4))) AND (rt0.c2))))) UNION SELECT DISTINCT * FROM rt0, v0, t0 WHERE (((((((rt0.c3) NOTNULL)) NOT BETWEEN (((NULL) BETWEEN (t0.c0) AND (rt0.c4))) AND (rt0.c2))) ISNULL));
SELECT DISTINCT * FROM rt0, v0, t0;
SELECT ALL rt0.c3, rt0.c4, rt0.c2 FROM rt0 GROUP BY rt0.c3, rt0.c4, rt0.c2;
SELECT ALL rt0.c3, rt0.c4, rt0.c2 FROM rt0 WHERE (((((rt0.c3) BETWEEN (rt0.c4) AND (rt0.c3)))LIKE(((rt0.c4)<<(rt0.c4))))) GROUP BY rt0.c3, rt0.c4, rt0.c2 UNION SELECT ALL rt0.c3, rt0.c4, rt0.c2 FROM rt0 WHERE ((NOT (((((rt0.c3) BETWEEN (rt0.c4) AND (rt0.c3)))LIKE(((rt0.c4)<<(rt0.c4))))))) GROUP BY rt0.c3, rt0.c4, rt0.c2 UNION SELECT rt0.c3, rt0.c4, rt0.c2 FROM rt0 WHERE (((((((rt0.c3) BETWEEN (rt0.c4) AND (rt0.c3)))LIKE(((rt0.c4)<<(rt0.c4))))) ISNULL)) GROUP BY rt0.c3, rt0.c4, rt0.c2;
SELECT ALL rt0.c3, rt0.c4, rt0.c2 FROM rt0 GROUP BY rt0.c3, rt0.c4, rt0.c2;
SELECT ALL rt0.c0, v0.c2, v0.c1, rt0.c3, rt0.c1, rt0.c4, v0.c0 FROM v0 INNER JOIN rt0 ON ((((((((rt0.c0)AND(CASE v0.c2  WHEN NULL THEN rt0.c3 ELSE rt0.c0 END)))OR(rt0.c2)))OR(CAST(rt0.c3 AS BLOB))))OR((rt0.c3 IN ()))) GROUP BY rt0.c0, v0.c2, v0.c1, rt0.c3, rt0.c1, rt0.c4, v0.c0;
SELECT rt0.c0, v0.c2, v0.c1, rt0.c3, rt0.c1, rt0.c4, v0.c0 FROM v0 INNER JOIN rt0 ON ((((((((rt0.c0)AND(CASE v0.c2  WHEN NULL THEN rt0.c3 ELSE rt0.c0 END)))OR(rt0.c2)))OR(CAST(rt0.c3 AS BLOB))))OR((rt0.c3 IN ()))) GROUP BY rt0.c0, v0.c2, v0.c1, rt0.c3, rt0.c1, rt0.c4, v0.c0 HAVING GROUP_CONCAT(CASE WHEN COUNT(MAX(GROUP_CONCAT(COUNT(*)))) THEN COUNT(v0.c1) WHEN rt0.c1 THEN TOTAL(rt0.c2) WHEN rt0.c3 THEN rt0.c1 ELSE COUNT(*) END) UNION ALL SELECT ALL rt0.c0, v0.c2, v0.c1, rt0.c3, rt0.c1, rt0.c4, v0.c0 FROM v0 INNER JOIN rt0 ON ((((((((rt0.c0)AND(CASE v0.c2  WHEN NULL THEN rt0.c3 ELSE rt0.c0 END)))OR(rt0.c2)))OR(CAST(rt0.c3 AS BLOB))))OR((rt0.c3 IN ()))) GROUP BY rt0.c0, v0.c2, v0.c1, rt0.c3, rt0.c1, rt0.c4, v0.c0 HAVING (NOT (GROUP_CONCAT(CASE WHEN COUNT(MAX(GROUP_CONCAT(COUNT(*)))) THEN COUNT(v0.c1) WHEN rt0.c1 THEN TOTAL(rt0.c2) WHEN rt0.c3 THEN rt0.c1 ELSE COUNT(*) END))) UNION ALL SELECT rt0.c0, v0.c2, v0.c1, rt0.c3, rt0.c1, rt0.c4, v0.c0 FROM v0 INNER JOIN rt0 ON ((((((((rt0.c0)AND(CASE v0.c2  WHEN NULL THEN rt0.c3 ELSE rt0.c0 END)))OR(rt0.c2)))OR(CAST(rt0.c3 AS BLOB))))OR((rt0.c3 IN ()))) GROUP BY rt0.c0, v0.c2, v0.c1, rt0.c3, rt0.c1, rt0.c4, v0.c0 HAVING ((GROUP_CONCAT(CASE WHEN COUNT(MAX(GROUP_CONCAT(COUNT(*)))) THEN COUNT(v0.c1) WHEN rt0.c1 THEN TOTAL(rt0.c2) WHEN rt0.c3 THEN rt0.c1 ELSE COUNT(*) END)) ISNULL);
SELECT ALL v0.c0, v0.c2, v0.c1 FROM v0;
SELECT v0.c0, v0.c2, v0.c1 FROM v0 WHERE ((((v0.c2 IN ()))==(v0.c0))) UNION ALL SELECT v0.c0, v0.c2, v0.c1 FROM v0 WHERE ((NOT ((((v0.c2 IN ()))=(v0.c0))))) UNION ALL SELECT v0.c0, v0.c2, v0.c1 FROM v0 WHERE ((((((v0.c2 IN ()))==(v0.c0))) ISNULL));
SELECT ALL v0.c0, v0.c2, v0.c1 FROM v0;
SELECT DISTINCT * FROM rt0, t0 INNER JOIN v0 ON JULIANDAY((v0.c0 IN ()), COALESCE(DISTINCT v0.c1, '-1240945553', rt0.c2, v0.c1), ((((rt0.c1)OR(0.24750697042354752)))OR(t0.c2)), (~ ('-204569503')), CASE rt0.c2  WHEN v0.c2 THEN rt0.c1 END);
SELECT DISTINCT * FROM rt0, t0 INNER JOIN v0 ON JULIANDAY((v0.c0 IN ()), COALESCE(DISTINCT v0.c1, '-1240945553', rt0.c2, v0.c1), ((((rt0.c1)OR(0.24750697042354752)))OR(t0.c2)), (~ ('-204569503')), CASE rt0.c2  WHEN v0.c2 THEN rt0.c1 END) WHERE (((('', ((t0.c0)GLOB(rt0.c2)), 0.6312247052137434))<((CASE rt0.c4  WHEN v0.c2 THEN rt0.c2 WHEN t0.c2 THEN t0.c0 WHEN t0.c0 THEN rt0.c0 END, CASE WHEN rt0.c1 THEN 0.4968553662285212 END, ((v0.c1)>>(NULL)))))) UNION SELECT DISTINCT * FROM rt0, t0 INNER JOIN v0 ON JULIANDAY((v0.c0 IN ()), COALESCE(DISTINCT v0.c1, '-1240945553', rt0.c2, v0.c1), ((((rt0.c1)OR(0.24750697042354752)))OR(t0.c2)), (~ ('-204569503')), CASE rt0.c2  WHEN v0.c2 THEN rt0.c1 END) WHERE ((NOT (((('', ((t0.c0)GLOB(rt0.c2)), 0.6312247052137434))<((CASE rt0.c4  WHEN v0.c2 THEN rt0.c2 WHEN t0.c2 THEN t0.c0 WHEN t0.c0 THEN rt0.c0 END, CASE WHEN rt0.c1 THEN 0.4968553662285212 END, ((v0.c1)>>(NULL)))))))) UNION SELECT DISTINCT * FROM rt0, t0 INNER JOIN v0 ON JULIANDAY((v0.c0 IN ()), COALESCE(DISTINCT v0.c1, '-1240945553', rt0.c2, v0.c1), ((((rt0.c1)OR(0.24750697042354752)))OR(t0.c2)), (~ ('-204569503')), CASE rt0.c2  WHEN v0.c2 THEN rt0.c1 END) WHERE (((((('', ((t0.c0)GLOB(rt0.c2)), 0.6312247052137434))<((CASE rt0.c4  WHEN v0.c2 THEN rt0.c2 WHEN t0.c2 THEN t0.c0 WHEN t0.c0 THEN rt0.c0 END, CASE WHEN rt0.c1 THEN 0.4968553662285212 END, ((v0.c1)>>(NULL)))))) ISNULL));
SELECT DISTINCT * FROM rt0, t0 INNER JOIN v0 ON JULIANDAY((v0.c0 IN ()), COALESCE(DISTINCT v0.c1, '-1240945553', rt0.c2, v0.c1), ((((rt0.c1)OR(0.24750697042354752)))OR(t0.c2)), (~ ('-204569503')), CASE rt0.c2  WHEN v0.c2 THEN rt0.c1 END);
SELECT ALL rt0.c4, rt0.c3, v0.c1, v0.c0, rt0.c1, rt0.c0, rt0.c2 FROM v0, rt0 GROUP BY rt0.c4, rt0.c3, v0.c1, v0.c0, rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c4, rt0.c3, v0.c1, v0.c0, rt0.c1, rt0.c0, rt0.c2 FROM v0, rt0 WHERE (((CAST(rt0.c0 AS INTEGER))OR(rt0.c4 COLLATE BINARY))) GROUP BY rt0.c4, rt0.c3, v0.c1, v0.c0, rt0.c1, rt0.c0, rt0.c2 UNION SELECT ALL rt0.c4, rt0.c3, v0.c1, v0.c0, rt0.c1, rt0.c0, rt0.c2 FROM v0, rt0 WHERE ((NOT (((CAST(rt0.c0 AS INTEGER))OR(rt0.c4 COLLATE BINARY))))) GROUP BY rt0.c4, rt0.c3, v0.c1, v0.c0, rt0.c1, rt0.c0, rt0.c2 UNION SELECT rt0.c4, rt0.c3, v0.c1, v0.c0, rt0.c1, rt0.c0, rt0.c2 FROM v0, rt0 WHERE (((((CAST(rt0.c0 AS INTEGER))OR(rt0.c4 COLLATE BINARY))) ISNULL)) GROUP BY rt0.c4, rt0.c3, v0.c1, v0.c0, rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c4, rt0.c3, v0.c1, v0.c0, rt0.c1, rt0.c0, rt0.c2 FROM v0, rt0 GROUP BY rt0.c4, rt0.c3, v0.c1, v0.c0, rt0.c1, rt0.c0, rt0.c2;
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING ((GROUP_CONCAT(vt0.c1)) BETWEEN (((TOTAL('})fh'))!=(vt0.c0))) AND (((MIN(vt0.c0)) NOT NULL))) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING (NOT (((GROUP_CONCAT(vt0.c1)) BETWEEN (((TOTAL('})fh'))<>(vt0.c0))) AND (((MIN(vt0.c0)) NOT NULL))))) UNION ALL SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING ((((GROUP_CONCAT(vt0.c1)) BETWEEN (((TOTAL('})fh'))!=(vt0.c0))) AND (((MIN(vt0.c0)) NOT NULL)))) ISNULL);
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING ((GROUP_CONCAT(vt0.c1)) BETWEEN (((TOTAL('})fh'))!=(vt0.c0))) AND (((MIN(vt0.c0)) NOT NULL))) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING (NOT (((GROUP_CONCAT(vt0.c1)) BETWEEN (((TOTAL('})fh'))<>(vt0.c0))) AND (((MIN(vt0.c0)) NOT NULL))))) UNION ALL SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING ((((GROUP_CONCAT(vt0.c1)) BETWEEN (((TOTAL('})fh'))!=(vt0.c0))) AND (((MIN(vt0.c0)) NOT NULL)))) ISNULL);
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT v0.c2, t0.c2, vt0.c0, rt0.c2, t0.c0, rt0.c0, rt0.c1 FROM rt0, vt0, t0, v0;
SELECT v0.c2, t0.c2, vt0.c0, rt0.c2, t0.c0, rt0.c0, rt0.c1 FROM rt0, vt0, t0, v0 WHERE (vt0.c0) UNION ALL SELECT ALL v0.c2, t0.c2, vt0.c0, rt0.c2, t0.c0, rt0.c0, rt0.c1 FROM rt0, vt0, t0, v0 WHERE ((NOT (vt0.c0))) UNION ALL SELECT v0.c2, t0.c2, vt0.c0, rt0.c2, t0.c0, rt0.c0, rt0.c1 FROM rt0, vt0, t0, v0 WHERE (((vt0.c0) ISNULL));
SELECT v0.c2, t0.c2, vt0.c0, rt0.c2, t0.c0, rt0.c0, rt0.c1 FROM rt0, vt0, t0, v0;
SELECT DISTINCT v0.c1, v0.c0, t0.c2, t0.c0, v0.c2 FROM v0, t0;
SELECT DISTINCT v0.c1, v0.c0, t0.c2, t0.c0, v0.c2 FROM v0, t0 WHERE (CAST(((v0.c0) IS TRUE) AS TEXT)) UNION SELECT DISTINCT v0.c1, v0.c0, t0.c2, t0.c0, v0.c2 FROM v0, t0 WHERE ((NOT (CAST(((v0.c0) IS TRUE) AS TEXT)))) UNION SELECT DISTINCT v0.c1, v0.c0, t0.c2, t0.c0, v0.c2 FROM v0, t0 WHERE (((CAST(((v0.c0) IS TRUE) AS TEXT)) ISNULL));
SELECT DISTINCT v0.c1, v0.c0, t0.c2, t0.c0, v0.c2 FROM v0, t0;
SELECT rt0.c2, rt0.c4, rt0.c1, v0.c1, rt0.c0, v0.c0, vt0.c0, vt0.c1 FROM vt0, v0, rt0 GROUP BY rt0.c2, rt0.c4, rt0.c1, v0.c1, rt0.c0, v0.c0, vt0.c0, vt0.c1;
SELECT ALL rt0.c2, rt0.c4, rt0.c1, v0.c1, rt0.c0, v0.c0, vt0.c0, vt0.c1 FROM vt0, v0, rt0 WHERE (LIKELY(DISTINCT (- (rt0.c3)))) GROUP BY rt0.c2, rt0.c4, rt0.c1, v0.c1, rt0.c0, v0.c0, vt0.c0, vt0.c1 UNION SELECT rt0.c2, rt0.c4, rt0.c1, v0.c1, rt0.c0, v0.c0, vt0.c0, vt0.c1 FROM vt0, v0, rt0 WHERE ((NOT (LIKELY(DISTINCT (- (rt0.c3)))))) GROUP BY rt0.c2, rt0.c4, rt0.c1, v0.c1, rt0.c0, v0.c0, vt0.c0, vt0.c1 UNION SELECT ALL rt0.c2, rt0.c4, rt0.c1, v0.c1, rt0.c0, v0.c0, vt0.c0, vt0.c1 FROM vt0, v0, rt0 WHERE (((LIKELY(DISTINCT (- (rt0.c3)))) ISNULL)) GROUP BY rt0.c2, rt0.c4, rt0.c1, v0.c1, rt0.c0, v0.c0, vt0.c0, vt0.c1;
SELECT rt0.c2, rt0.c4, rt0.c1, v0.c1, rt0.c0, v0.c0, vt0.c0, vt0.c1 FROM vt0, v0, rt0 GROUP BY rt0.c2, rt0.c4, rt0.c1, v0.c1, rt0.c0, v0.c0, vt0.c0, vt0.c1;
SELECT rt0.c4, rt0.c3 FROM rt0, vt0 GROUP BY rt0.c4, rt0.c3;
SELECT ALL rt0.c4, rt0.c3 FROM rt0, vt0 GROUP BY rt0.c4, rt0.c3 HAVING CASE WHEN TOTAL(vt0.c1) THEN (rt0.c2 IN ()) END UNION ALL SELECT rt0.c4, rt0.c3 FROM rt0, vt0 GROUP BY rt0.c4, rt0.c3 HAVING (NOT (CASE WHEN TOTAL(vt0.c1) THEN (rt0.c2 IN ()) END)) UNION ALL SELECT rt0.c4, rt0.c3 FROM rt0, vt0 GROUP BY rt0.c4, rt0.c3 HAVING ((CASE WHEN TOTAL(vt0.c1) THEN (rt0.c2 IN ()) END) ISNULL);
SELECT rt0.c4, rt0.c3 FROM rt0, vt0 GROUP BY rt0.c4, rt0.c3;
SELECT ALL rt0.c4, rt0.c3 FROM rt0, vt0 GROUP BY rt0.c4, rt0.c3 HAVING CASE WHEN TOTAL(vt0.c1) THEN (rt0.c2 IN ()) END UNION ALL SELECT rt0.c4, rt0.c3 FROM rt0, vt0 GROUP BY rt0.c4, rt0.c3 HAVING (NOT (CASE WHEN TOTAL(vt0.c1) THEN (rt0.c2 IN ()) END)) UNION ALL SELECT rt0.c4, rt0.c3 FROM rt0, vt0 GROUP BY rt0.c4, rt0.c3 HAVING ((CASE WHEN TOTAL(vt0.c1) THEN (rt0.c2 IN ()) END) ISNULL);
SELECT rt0.c4, rt0.c3 FROM rt0, vt0 GROUP BY rt0.c4, rt0.c3;
SELECT rt0.c4, v0.c1, rt0.c2, rt0.c3, t0.c2 FROM t0, rt0, v0;
SELECT ALL rt0.c4, v0.c1, rt0.c2, rt0.c3, t0.c2 FROM t0, rt0, v0 WHERE (0.6942191920675908) ORDER BY ((((rt0.c0)GLOB(rt0.c2)))<(t0.c0 COLLATE BINARY))  NULLS LAST, CAST(json_object(rt0.c3, rt0.c1) AS NUMERIC) ASC, CASE MIN(rt0.c4, t0.c0)  WHEN ((v0.c1)IS(rt0.c0)) THEN CASE WHEN rt0.c1 THEN rt0.c4 WHEN rt0.c0 THEN t0.c0 WHEN v0.c0 THEN t0.c2 END END  NULLS FIRST;
SELECT ALL rt0.c4, v0.c1, rt0.c2, rt0.c3, t0.c2 FROM t0, rt0, v0 WHERE ((NOT (0.6942191920675908))) ORDER BY ((((rt0.c0)GLOB(rt0.c2)))<(t0.c0 COLLATE BINARY))  NULLS LAST, CAST(json_object(rt0.c3, rt0.c1) AS NUMERIC) ASC, CASE MIN(rt0.c4, t0.c0)  WHEN ((v0.c1)IS(rt0.c0)) THEN CASE WHEN rt0.c1 THEN rt0.c4 WHEN rt0.c0 THEN t0.c0 WHEN v0.c0 THEN t0.c2 END END  NULLS FIRST;
SELECT rt0.c4, v0.c1, rt0.c2, rt0.c3, t0.c2 FROM t0, rt0, v0 WHERE (((0.6942191920675908) ISNULL)) ORDER BY ((((rt0.c0)GLOB(rt0.c2)))<(t0.c0 COLLATE BINARY))  NULLS LAST, CAST(json_object(rt0.c3, rt0.c1) AS NUMERIC) ASC, CASE MIN(rt0.c4, t0.c0)  WHEN ((v0.c1)IS(rt0.c0)) THEN CASE WHEN rt0.c1 THEN rt0.c4 WHEN rt0.c0 THEN t0.c0 WHEN v0.c0 THEN t0.c2 END END  NULLS FIRST;
SELECT rt0.c4, v0.c1, rt0.c2, rt0.c3, t0.c2 FROM t0, rt0, v0;
SELECT DISTINCT * FROM rt0, v0;
SELECT DISTINCT * FROM rt0, v0 WHERE ((((rt0.c2)) BETWEEN ((((rt0.c2) BETWEEN (rt0.c4) AND (rt0.c2)))) AND (((rt0.c4 IN ()))))) UNION SELECT DISTINCT * FROM rt0, v0 WHERE ((NOT ((((rt0.c2)) BETWEEN ((((rt0.c2) BETWEEN (rt0.c4) AND (rt0.c2)))) AND (((rt0.c4 IN ()))))))) UNION SELECT DISTINCT * FROM rt0, v0 WHERE ((((((rt0.c2)) BETWEEN ((((rt0.c2) BETWEEN (rt0.c4) AND (rt0.c2)))) AND (((rt0.c4 IN ()))))) ISNULL));
SELECT DISTINCT * FROM rt0, v0;
SELECT ALL v0.c2, v0.c0, vt0.c1, vt0.c0, t0.c2 FROM v0, vt0, t0 GROUP BY v0.c2, v0.c0, vt0.c1, vt0.c0, t0.c2;
SELECT ALL v0.c2, v0.c0, vt0.c1, vt0.c0, t0.c2 FROM v0, vt0, t0 WHERE (TRIM(DISTINCT ((v0.c2)>(v0.c2)), ((v0.c0)&(t0.c0)))) GROUP BY v0.c2, v0.c0, vt0.c1, vt0.c0, t0.c2 UNION SELECT v0.c2, v0.c0, vt0.c1, vt0.c0, t0.c2 FROM v0, vt0, t0 WHERE ((NOT (TRIM(DISTINCT ((v0.c2)>(v0.c2)), ((v0.c0)&(t0.c0)))))) GROUP BY v0.c2, v0.c0, vt0.c1, vt0.c0, t0.c2 UNION SELECT ALL v0.c2, v0.c0, vt0.c1, vt0.c0, t0.c2 FROM v0, vt0, t0 WHERE (((TRIM(DISTINCT ((v0.c2)>(v0.c2)), ((v0.c0)&(t0.c0)))) ISNULL)) GROUP BY v0.c2, v0.c0, vt0.c1, vt0.c0, t0.c2;
SELECT ALL v0.c2, v0.c0, vt0.c1, vt0.c0, t0.c2 FROM v0, vt0, t0 GROUP BY v0.c2, v0.c0, vt0.c1, vt0.c0, t0.c2;
SELECT t0.c2 FROM t0 GROUP BY t0.c2;
SELECT ALL t0.c2 FROM t0 GROUP BY t0.c2 HAVING NULL UNION ALL SELECT ALL t0.c2 FROM t0 GROUP BY t0.c2 HAVING (NOT (NULL)) UNION ALL SELECT ALL t0.c2 FROM t0 GROUP BY t0.c2 HAVING ((NULL) ISNULL);
SELECT t0.c2 FROM t0 GROUP BY t0.c2;
SELECT ALL t0.c2 FROM t0 GROUP BY t0.c2 HAVING NULL UNION ALL SELECT ALL t0.c2 FROM t0 GROUP BY t0.c2 HAVING (NOT (NULL)) UNION ALL SELECT ALL t0.c2 FROM t0 GROUP BY t0.c2 HAVING ((NULL) ISNULL);
SELECT t0.c2 FROM t0 GROUP BY t0.c2;
SELECT t0.c2 FROM t0;
SELECT t0.c2 FROM t0 WHERE (((((t0.c2))>((t0.c0))) IN ())) UNION ALL SELECT t0.c2 FROM t0 WHERE ((NOT (((((t0.c2))>((t0.c0))) IN ())))) UNION ALL SELECT t0.c2 FROM t0 WHERE (((((((t0.c2))>((t0.c0))) IN ())) ISNULL));
SELECT t0.c2 FROM t0;
SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0;
SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0 WHERE ((((('0.6383012269942009') BETWEEN (vt0.c0) AND (vt0.c1))) IS FALSE)) UNION SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0 WHERE ((NOT ((((('0.6383012269942009') BETWEEN (vt0.c0) AND (vt0.c1))) IS FALSE)))) UNION SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0 WHERE ((((((('0.6383012269942009') BETWEEN (vt0.c0) AND (vt0.c1))) IS FALSE)) ISNULL));
SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0;
SELECT rt0.c3 FROM rt0 RIGHT OUTER JOIN v0 ON CAST(vt0.c1 AS TEXT) COLLATE RTRIM COLLATE RTRIM FULL OUTER JOIN t0 ON ((UNLIKELY(DISTINCT vt0.c0)) BETWEEN (((((v0.c0)AND('1480938052')))AND(rt0.c2))) AND (((rt0.c2) IS FALSE))) CROSS JOIN vt0 ON t0.c0 GROUP BY rt0.c3;
SELECT v0.c0, v0.c2 FROM v0 INNER JOIN vt0 ON ((((v0.c0)OR(vt0.c1)))AND(((0.3900042410514254)LIKE(rt0.c1)))) CROSS JOIN rt0 ON ((vt0.c0 IN (vt0.c0)) IN ()) GROUP BY v0.c0, v0.c2;
SELECT ALL v0.c0, v0.c2 FROM v0 INNER JOIN vt0 ON ((((v0.c0)OR(vt0.c1)))AND(((0.3900042410514254)LIKE(rt0.c1)))) CROSS JOIN rt0 ON ((vt0.c0 IN (vt0.c0)) IN ()) GROUP BY v0.c0, v0.c2 HAVING rt0.c2 UNION ALL SELECT ALL v0.c0, v0.c2 FROM v0 INNER JOIN vt0 ON ((((v0.c0)OR(vt0.c1)))AND(((0.3900042410514254)LIKE(rt0.c1)))) CROSS JOIN rt0 ON ((vt0.c0 IN (vt0.c0)) IN ()) GROUP BY v0.c0, v0.c2 HAVING (NOT (rt0.c2)) UNION ALL SELECT ALL v0.c0, v0.c2 FROM v0 INNER JOIN vt0 ON ((((v0.c0)OR(vt0.c1)))AND(((0.3900042410514254)LIKE(rt0.c1)))) CROSS JOIN rt0 ON ((vt0.c0 IN (vt0.c0)) IN ()) GROUP BY v0.c0, v0.c2 HAVING ((rt0.c2) ISNULL);
SELECT v0.c0, v0.c2 FROM v0 INNER JOIN vt0 ON ((((v0.c0)OR(vt0.c1)))AND(((0.3900042410514254)LIKE(rt0.c1)))) CROSS JOIN rt0 ON ((vt0.c0 IN (vt0.c0)) IN ()) GROUP BY v0.c0, v0.c2;
SELECT ALL v0.c0, v0.c2 FROM v0 INNER JOIN vt0 ON ((((v0.c0)OR(vt0.c1)))AND(((0.3900042410514254)LIKE(rt0.c1)))) CROSS JOIN rt0 ON ((vt0.c0 IN (vt0.c0)) IN ()) GROUP BY v0.c0, v0.c2 HAVING rt0.c2 UNION ALL SELECT ALL v0.c0, v0.c2 FROM v0 INNER JOIN vt0 ON ((((v0.c0)OR(vt0.c1)))AND(((0.3900042410514254)LIKE(rt0.c1)))) CROSS JOIN rt0 ON ((vt0.c0 IN (vt0.c0)) IN ()) GROUP BY v0.c0, v0.c2 HAVING (NOT (rt0.c2)) UNION ALL SELECT ALL v0.c0, v0.c2 FROM v0 INNER JOIN vt0 ON ((((v0.c0)OR(vt0.c1)))AND(((0.3900042410514254)LIKE(rt0.c1)))) CROSS JOIN rt0 ON ((vt0.c0 IN (vt0.c0)) IN ()) GROUP BY v0.c0, v0.c2 HAVING ((rt0.c2) ISNULL);
SELECT v0.c0, v0.c2 FROM v0 INNER JOIN vt0 ON ((((v0.c0)OR(vt0.c1)))AND(((0.3900042410514254)LIKE(rt0.c1)))) CROSS JOIN rt0 ON ((vt0.c0 IN (vt0.c0)) IN ()) GROUP BY v0.c0, v0.c2;
SELECT vt0.c0, vt0.c1, t0.c2 FROM t0, vt0;
SELECT ALL vt0.c0, vt0.c1, t0.c2 FROM t0, vt0 WHERE ((CAST(t0.c0 AS TEXT) IN ())) UNION ALL SELECT vt0.c0, vt0.c1, t0.c2 FROM t0, vt0 WHERE ((NOT ((CAST(t0.c0 AS TEXT) IN ())))) UNION ALL SELECT ALL vt0.c0, vt0.c1, t0.c2 FROM t0, vt0 WHERE ((((CAST(t0.c0 AS TEXT) IN ())) ISNULL));
SELECT vt0.c0, vt0.c1, t0.c2 FROM t0, vt0;
SELECT DISTINCT t0.c0, v0.c0, rt0.c4, v0.c1, rt0.c2, rt0.c3 FROM rt0, t0, v0;
SELECT DISTINCT t0.c0, v0.c0, rt0.c4, v0.c1, rt0.c2, rt0.c3 FROM rt0, t0, v0 WHERE (1.480938052E9) UNION SELECT DISTINCT t0.c0, v0.c0, rt0.c4, v0.c1, rt0.c2, rt0.c3 FROM rt0, t0, v0 WHERE ((NOT (1.480938052E9))) UNION SELECT DISTINCT t0.c0, v0.c0, rt0.c4, v0.c1, rt0.c2, rt0.c3 FROM rt0, t0, v0 WHERE (((1.480938052E9) ISNULL));
SELECT DISTINCT t0.c0, v0.c0, rt0.c4, v0.c1, rt0.c2, rt0.c3 FROM rt0, t0, v0;
SELECT rt0.c3, rt0.c4, v0.c0, vt0.c1, vt0.c0, v0.c1, rt0.c0, v0.c2 FROM v0, vt0, rt0 GROUP BY rt0.c3, rt0.c4, v0.c0, vt0.c1, vt0.c0, v0.c1, rt0.c0, v0.c2;
SELECT ALL rt0.c3, rt0.c4, v0.c0, vt0.c1, vt0.c0, v0.c1, rt0.c0, v0.c2 FROM v0, vt0, rt0 WHERE ((NOT (LTRIM(rt0.c3, v0.c2)))) GROUP BY rt0.c3, rt0.c4, v0.c0, vt0.c1, vt0.c0, v0.c1, rt0.c0, v0.c2 UNION SELECT ALL rt0.c3, rt0.c4, v0.c0, vt0.c1, vt0.c0, v0.c1, rt0.c0, v0.c2 FROM v0, vt0, rt0 WHERE ((NOT ((NOT (LTRIM(rt0.c3, v0.c2)))))) GROUP BY rt0.c3, rt0.c4, v0.c0, vt0.c1, vt0.c0, v0.c1, rt0.c0, v0.c2 UNION SELECT ALL rt0.c3, rt0.c4, v0.c0, vt0.c1, vt0.c0, v0.c1, rt0.c0, v0.c2 FROM v0, vt0, rt0 WHERE ((((NOT (LTRIM(rt0.c3, v0.c2)))) ISNULL)) GROUP BY rt0.c3, rt0.c4, v0.c0, vt0.c1, vt0.c0, v0.c1, rt0.c0, v0.c2;
SELECT rt0.c3, rt0.c4, v0.c0, vt0.c1, vt0.c0, v0.c1, rt0.c0, v0.c2 FROM v0, vt0, rt0 GROUP BY rt0.c3, rt0.c4, v0.c0, vt0.c1, vt0.c0, v0.c1, rt0.c0, v0.c2;
SELECT ALL v0.c1, t0.c2, v0.c2 FROM vt0, v0, t0 GROUP BY v0.c1, t0.c2, v0.c2;
SELECT v0.c1, t0.c2, v0.c2 FROM vt0, v0, t0 GROUP BY v0.c1, t0.c2, v0.c2 HAVING CAST(SUM(COUNT(v0.c0)) AS INTEGER) UNION ALL SELECT v0.c1, t0.c2, v0.c2 FROM vt0, v0, t0 GROUP BY v0.c1, t0.c2, v0.c2 HAVING (NOT (CAST(SUM(COUNT(v0.c0)) AS INTEGER))) UNION ALL SELECT v0.c1, t0.c2, v0.c2 FROM vt0, v0, t0 GROUP BY v0.c1, t0.c2, v0.c2 HAVING ((CAST(SUM(COUNT(v0.c0)) AS INTEGER)) ISNULL);
SELECT ALL v0.c0, rt0.c3, rt0.c2, rt0.c4, v0.c1, t0.c2, rt0.c1, vt0.c0, v0.c2, rt0.c0, vt0.c1, t0.c0 FROM t0, v0, vt0, rt0;
SELECT v0.c0, rt0.c3, rt0.c2, rt0.c4, v0.c1, t0.c2, rt0.c1, vt0.c0, v0.c2, rt0.c0, vt0.c1, t0.c0 FROM t0, v0, vt0, rt0 WHERE (((((((((NULL)AND(TIME(-1674618424, v0.c2, rt0.c0, v0.c2, v0.c1))))OR(t0.c0 COLLATE NOCASE)))OR((- (v0.c2)))))AND(CAST(v0.c2 AS TEXT)))) UNION ALL SELECT ALL v0.c0, rt0.c3, rt0.c2, rt0.c4, v0.c1, t0.c2, rt0.c1, vt0.c0, v0.c2, rt0.c0, vt0.c1, t0.c0 FROM t0, v0, vt0, rt0 NOT INDEXED WHERE ((NOT (((((((((NULL)AND(TIME(-1674618424, v0.c2, rt0.c0, v0.c2, v0.c1))))OR(t0.c0 COLLATE NOCASE)))OR((- (v0.c2)))))AND(CAST(v0.c2 AS TEXT)))))) UNION ALL SELECT ALL v0.c0, rt0.c3, rt0.c2, rt0.c4, v0.c1, t0.c2, rt0.c1, vt0.c0, v0.c2, rt0.c0, vt0.c1, t0.c0 FROM t0, v0, vt0, rt0 WHERE (((((((((((NULL)AND(TIME(-1674618424, v0.c2, rt0.c0, v0.c2, v0.c1))))OR(t0.c0 COLLATE NOCASE)))OR((- (v0.c2)))))AND(CAST(v0.c2 AS TEXT)))) ISNULL));
SELECT ALL v0.c0, rt0.c3, rt0.c2, rt0.c4, v0.c1, t0.c2, rt0.c1, vt0.c0, v0.c2, rt0.c0, vt0.c1, t0.c0 FROM t0, v0, vt0, rt0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (CASE CASE t0.c0  WHEN t0.c0 THEN '-303461344' WHEN 0.22552123324494378 THEN t0.c0 WHEN t0.c0 THEN t0.c2 ELSE t0.c2 END  WHEN CAST(t0.c2 AS REAL) THEN ((t0.c2) NOT NULL) WHEN CASE t0.c0  WHEN t0.c2 THEN t0.c2 WHEN t0.c2 THEN t0.c2 WHEN t0.c0 THEN t0.c0 WHEN '7cy' THEN t0.c0 WHEN t0.c0 THEN t0.c2 ELSE t0.c0 END THEN t0.c2 COLLATE BINARY WHEN t0.c0 THEN CASE t0.c2  WHEN t0.c0 THEN t0.c2 ELSE t0.c0 END ELSE t0.c2 END) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (CASE CASE t0.c0  WHEN t0.c0 THEN '-303461344' WHEN 0.22552123324494378 THEN t0.c0 WHEN t0.c0 THEN t0.c2 ELSE t0.c2 END  WHEN CAST(t0.c2 AS REAL) THEN ((t0.c2) NOT NULL) WHEN CASE t0.c0  WHEN t0.c2 THEN t0.c2 WHEN t0.c2 THEN t0.c2 WHEN t0.c0 THEN t0.c0 WHEN '7cy' THEN t0.c0 WHEN t0.c0 THEN t0.c2 ELSE t0.c0 END THEN t0.c2 COLLATE BINARY WHEN t0.c0 THEN CASE t0.c2  WHEN t0.c0 THEN t0.c2 ELSE t0.c0 END ELSE t0.c2 END))) UNION SELECT DISTINCT * FROM t0 WHERE (((CASE CASE t0.c0  WHEN t0.c0 THEN '-303461344' WHEN 0.22552123324494378 THEN t0.c0 WHEN t0.c0 THEN t0.c2 ELSE t0.c2 END  WHEN CAST(t0.c2 AS REAL) THEN ((t0.c2) NOT NULL) WHEN CASE t0.c0  WHEN t0.c2 THEN t0.c2 WHEN t0.c2 THEN t0.c2 WHEN t0.c0 THEN t0.c0 WHEN '7cy' THEN t0.c0 WHEN t0.c0 THEN t0.c2 ELSE t0.c0 END THEN t0.c2 COLLATE BINARY WHEN t0.c0 THEN CASE t0.c2  WHEN t0.c0 THEN t0.c2 ELSE t0.c0 END ELSE t0.c2 END) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT ALL rt0.c0, v0.c0, v0.c2, rt0.c4, vt0.c0, rt0.c2, rt0.c1 FROM t0, v0 FULL OUTER JOIN vt0 ON (- ((((rt0.c0))>((rt0.c2))))) INNER JOIN rt0 ON ((((rt0.c2)<>(rt0.c1)))%(((vt0.c1) BETWEEN (-1010560495) AND (v0.c2)))) GROUP BY rt0.c0, v0.c0, v0.c2, rt0.c4, vt0.c0, rt0.c2, rt0.c1;
SELECT t0.c2, t0.c0 FROM t0 CROSS JOIN v0 ON ((((((v0.c0)OR(v0.c2)))AND(NULL))) IS FALSE) GROUP BY t0.c2, t0.c0;
SELECT ALL t0.c2, t0.c0 FROM t0 CROSS JOIN v0 ON ((((((v0.c0)OR(v0.c2)))AND(NULL))) IS FALSE) GROUP BY t0.c2, t0.c0 HAVING MIN(COUNT(v0.c0)) UNION ALL SELECT ALL t0.c2, t0.c0 FROM t0 CROSS JOIN v0 ON ((((((v0.c0)OR(v0.c2)))AND(NULL))) IS FALSE) GROUP BY t0.c2, t0.c0 HAVING (NOT (MIN(COUNT(v0.c0)))) UNION ALL SELECT t0.c2, t0.c0 FROM t0 CROSS JOIN v0 ON ((((((v0.c0)OR(v0.c2)))AND(NULL))) IS FALSE) GROUP BY t0.c2, t0.c0 HAVING ((MIN(COUNT(v0.c0))) ISNULL);
SELECT * FROM v0, vt0, t0 CROSS JOIN rt0 ON ((((t0.c2)IS('1801791245'))) IS TRUE);
SELECT ALL * FROM v0, vt0, t0 CROSS JOIN rt0 ON ((((t0.c2)IS('1801791245'))) IS TRUE) WHERE (NULL) UNION ALL SELECT * FROM v0, vt0, t0 CROSS JOIN rt0 ON ((((t0.c2)IS('1801791245'))) IS TRUE) WHERE ((NOT (NULL))) UNION ALL SELECT * FROM v0, vt0, t0 CROSS JOIN rt0 ON ((((t0.c2)IS('1801791245'))) IS TRUE) WHERE (((NULL) ISNULL));
SELECT * FROM v0, vt0, t0 CROSS JOIN rt0 ON ((((t0.c2)IS('1801791245'))) IS TRUE);
SELECT DISTINCT vt0.c1, v0.c1, rt0.c3, v0.c0, vt0.c0, rt0.c2, v0.c2 FROM vt0, rt0 INNER JOIN v0 ON (vt0.c0 COLLATE RTRIM IN (((v0.c2) BETWEEN (rt0.c4) AND (rt0.c1)), CAST(rt0.c1 AS INTEGER)));
SELECT DISTINCT vt0.c1, v0.c1, rt0.c3, v0.c0, vt0.c0, rt0.c2, v0.c2 FROM vt0, rt0 INNER JOIN v0 ON (vt0.c0 COLLATE RTRIM IN (((v0.c2) BETWEEN (rt0.c4) AND (rt0.c1)), CAST(rt0.c1 AS INTEGER))) WHERE (((v0.c1 COLLATE NOCASE)=((((v0.c2))=((rt0.c2)))))) UNION SELECT DISTINCT vt0.c1, v0.c1, rt0.c3, v0.c0, vt0.c0, rt0.c2, v0.c2 FROM vt0, rt0 INNER JOIN v0 ON (vt0.c0 COLLATE RTRIM IN (((v0.c2) BETWEEN (rt0.c4) AND (rt0.c1)), CAST(rt0.c1 AS INTEGER))) WHERE ((NOT (((v0.c1 COLLATE NOCASE)==((((v0.c2))=((rt0.c2)))))))) UNION SELECT DISTINCT vt0.c1, v0.c1, rt0.c3, v0.c0, vt0.c0, rt0.c2, v0.c2 FROM vt0, rt0 INNER JOIN v0 ON (vt0.c0 COLLATE RTRIM IN (((v0.c2) BETWEEN (rt0.c4) AND (rt0.c1)), CAST(rt0.c1 AS INTEGER))) WHERE (((((v0.c1 COLLATE NOCASE)==((((v0.c2))=((rt0.c2)))))) ISNULL));
SELECT DISTINCT vt0.c1, v0.c1, rt0.c3, v0.c0, vt0.c0, rt0.c2, v0.c2 FROM vt0, rt0 INNER JOIN v0 ON (vt0.c0 COLLATE RTRIM IN (((v0.c2) BETWEEN (rt0.c4) AND (rt0.c1)), CAST(rt0.c1 AS INTEGER)));
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (((((v0.c2) IS TRUE))|(((v0.c1)|(NULL))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (((((v0.c2) IS TRUE))|(((v0.c1)|(NULL))))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((((((v0.c2) IS TRUE))|(((v0.c1)|(NULL))))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT vt0.c1, t0.c0 FROM t0, vt0 GROUP BY vt0.c1, t0.c0;
SELECT vt0.c1, t0.c0 FROM t0, vt0 GROUP BY vt0.c1, t0.c0 HAVING TOTAL(MAX(TOTAL(vt0.c0))) UNION ALL SELECT vt0.c1, t0.c0 FROM t0, vt0 GROUP BY vt0.c1, t0.c0 HAVING (NOT (TOTAL(MAX(TOTAL(vt0.c0))))) UNION ALL SELECT vt0.c1, t0.c0 FROM t0, vt0 GROUP BY vt0.c1, t0.c0 HAVING ((TOTAL(MAX(TOTAL(vt0.c0)))) ISNULL);
SELECT * FROM rt0, vt0;
SELECT ALL * FROM rt0, vt0 WHERE (0.2672621072872734) UNION ALL SELECT * FROM rt0, vt0 WHERE ((NOT (0.2672621072872734))) UNION ALL SELECT * FROM rt0, vt0 WHERE (((0.2672621072872734) ISNULL));
SELECT * FROM rt0, vt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (UNLIKELY(DISTINCT rt0.c1) COLLATE RTRIM) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (UNLIKELY(DISTINCT rt0.c1) COLLATE RTRIM))) UNION SELECT DISTINCT * FROM rt0 WHERE (((UNLIKELY(DISTINCT rt0.c1) COLLATE RTRIM) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c4, vt0.c1, vt0.c0, v0.c2, rt0.c0, rt0.c3, t0.c2 FROM vt0, rt0, v0, t0 GROUP BY rt0.c4, vt0.c1, vt0.c0, v0.c2, rt0.c0, rt0.c3, t0.c2;
SELECT ALL rt0.c4, vt0.c1, vt0.c0, v0.c2, rt0.c0, rt0.c3, t0.c2 FROM vt0, rt0, v0, t0 WHERE ((((0.16069999886688213) NOT BETWEEN (rt0.c0) AND (v0.c1)) IN ())) GROUP BY rt0.c4, vt0.c1, vt0.c0, v0.c2, rt0.c0, rt0.c3, t0.c2 UNION SELECT ALL rt0.c4, vt0.c1, vt0.c0, v0.c2, rt0.c0, rt0.c3, t0.c2 FROM vt0, rt0 NOT INDEXED, v0, t0 WHERE ((NOT ((((0.16069999886688213) NOT BETWEEN (rt0.c0) AND (v0.c1)) IN ())))) GROUP BY rt0.c4, vt0.c1, vt0.c0, v0.c2, rt0.c0, rt0.c3, t0.c2 UNION SELECT ALL rt0.c4, vt0.c1, vt0.c0, v0.c2, rt0.c0, rt0.c3, t0.c2 FROM vt0, rt0, v0, t0 WHERE ((((((0.16069999886688213) NOT BETWEEN (rt0.c0) AND (v0.c1)) IN ())) ISNULL)) GROUP BY rt0.c4, vt0.c1, vt0.c0, v0.c2, rt0.c0, rt0.c3, t0.c2;
SELECT ALL rt0.c4, vt0.c1, vt0.c0, v0.c2, rt0.c0, rt0.c3, t0.c2 FROM vt0, rt0, v0, t0 GROUP BY rt0.c4, vt0.c1, vt0.c0, v0.c2, rt0.c0, rt0.c3, t0.c2;
SELECT v0.c2, rt0.c4, t0.c0, t0.c2, rt0.c3, rt0.c2 FROM t0, rt0, v0 GROUP BY v0.c2, rt0.c4, t0.c0, t0.c2, rt0.c3, rt0.c2;
SELECT ALL v0.c2, rt0.c4, t0.c0, t0.c2, rt0.c3, rt0.c2 FROM t0, rt0, v0 GROUP BY v0.c2, rt0.c4, t0.c0, t0.c2, rt0.c3, rt0.c2 HAVING rt0.c0 UNION ALL SELECT v0.c2, rt0.c4, t0.c0, t0.c2, rt0.c3, rt0.c2 FROM t0, rt0, v0 GROUP BY v0.c2, rt0.c4, t0.c0, t0.c2, rt0.c3, rt0.c2 HAVING (NOT (rt0.c0)) UNION ALL SELECT v0.c2, rt0.c4, t0.c0, t0.c2, rt0.c3, rt0.c2 FROM t0, rt0, v0 GROUP BY v0.c2, rt0.c4, t0.c0, t0.c2, rt0.c3, rt0.c2 HAVING ((rt0.c0) ISNULL);
SELECT v0.c2, rt0.c4, t0.c0, t0.c2, rt0.c3, rt0.c2 FROM t0, rt0, v0 GROUP BY v0.c2, rt0.c4, t0.c0, t0.c2, rt0.c3, rt0.c2;
SELECT ALL v0.c2, rt0.c4, t0.c0, t0.c2, rt0.c3, rt0.c2 FROM t0, rt0, v0 GROUP BY v0.c2, rt0.c4, t0.c0, t0.c2, rt0.c3, rt0.c2 HAVING rt0.c0 UNION ALL SELECT v0.c2, rt0.c4, t0.c0, t0.c2, rt0.c3, rt0.c2 FROM t0, rt0, v0 GROUP BY v0.c2, rt0.c4, t0.c0, t0.c2, rt0.c3, rt0.c2 HAVING (NOT (rt0.c0)) UNION ALL SELECT v0.c2, rt0.c4, t0.c0, t0.c2, rt0.c3, rt0.c2 FROM t0, rt0, v0 GROUP BY v0.c2, rt0.c4, t0.c0, t0.c2, rt0.c3, rt0.c2 HAVING ((rt0.c0) ISNULL);
SELECT v0.c2, rt0.c4, t0.c0, t0.c2, rt0.c3, rt0.c2 FROM t0, rt0, v0 GROUP BY v0.c2, rt0.c4, t0.c0, t0.c2, rt0.c3, rt0.c2;
SELECT * FROM rt0, vt0;
SELECT ALL * FROM rt0, vt0 WHERE ((NOT (rt0.c2)) COLLATE RTRIM) UNION ALL SELECT ALL * FROM rt0, vt0 WHERE ((NOT ((NOT (rt0.c2)) COLLATE RTRIM))) UNION ALL SELECT * FROM rt0, vt0 WHERE ((((NOT (rt0.c2)) COLLATE RTRIM) ISNULL));
SELECT * FROM rt0, vt0;
SELECT DISTINCT rt0.c3, rt0.c4 FROM t0, rt0;
SELECT DISTINCT rt0.c3, rt0.c4 FROM t0, rt0 WHERE ((NOT (CAST(rt0.c2 AS NUMERIC)))) UNION SELECT DISTINCT rt0.c3, rt0.c4 FROM t0, rt0 WHERE ((NOT ((NOT (CAST(rt0.c2 AS NUMERIC)))))) UNION SELECT DISTINCT rt0.c3, rt0.c4 FROM t0, rt0 WHERE ((((NOT (CAST(rt0.c2 AS NUMERIC)))) ISNULL));
SELECT DISTINCT rt0.c3, rt0.c4 FROM t0, rt0;
SELECT rt0.c4, t0.c2 FROM v0, rt0, t0 GROUP BY rt0.c4, t0.c2;
SELECT ALL rt0.c4, t0.c2 FROM v0, rt0, t0 WHERE ((NOT ((rt0.c2 IN (rt0.c0, t0.c0))))) GROUP BY rt0.c4, t0.c2 UNION SELECT ALL rt0.c4, t0.c2 FROM v0, rt0, t0 WHERE ((NOT ((NOT ((rt0.c2 IN (rt0.c0, t0.c0))))))) GROUP BY rt0.c4, t0.c2 UNION SELECT rt0.c4, t0.c2 FROM v0, rt0, t0 WHERE ((((NOT ((rt0.c2 IN (rt0.c0, t0.c0))))) ISNULL)) GROUP BY rt0.c4, t0.c2;
SELECT rt0.c4, t0.c2 FROM v0, rt0, t0 GROUP BY rt0.c4, t0.c2;
SELECT v0.c2, vt0.c1 FROM v0, t0, rt0, vt0 GROUP BY v0.c2, vt0.c1;
SELECT ALL v0.c2, vt0.c1 FROM v0, t0, rt0, vt0 GROUP BY v0.c2, vt0.c1 HAVING (((vt0.c1, v0.c0, SUM(GROUP_CONCAT(TOTAL(rt0.c4))))) NOT BETWEEN ((NULL, COUNT(*), SUM(v0.c2))) AND ((COUNT(rt0.c3), ((SUM(COUNT(v0.c0)))OR(t0.c0)), CASE MAX(AVG(v0.c0))  WHEN MIN(MAX(SUM(GROUP_CONCAT(t0.c2)))) THEN GROUP_CONCAT(GROUP_CONCAT(COUNT(*))) ELSE GROUP_CONCAT(GROUP_CONCAT(vt0.c0)) END))) UNION ALL SELECT ALL v0.c2, vt0.c1 FROM v0, t0, rt0, vt0 GROUP BY v0.c2, vt0.c1 HAVING (NOT ((((vt0.c1, v0.c0, SUM(GROUP_CONCAT(TOTAL(rt0.c4))))) NOT BETWEEN ((NULL, COUNT(*), SUM(v0.c2))) AND ((COUNT(rt0.c3), ((SUM(COUNT(v0.c0)))OR(t0.c0)), CASE MAX(AVG(v0.c0))  WHEN MIN(MAX(SUM(GROUP_CONCAT(t0.c2)))) THEN GROUP_CONCAT(GROUP_CONCAT(COUNT(*))) ELSE GROUP_CONCAT(GROUP_CONCAT(vt0.c0)) END))))) UNION ALL SELECT v0.c2, vt0.c1 FROM v0, t0, rt0, vt0 GROUP BY v0.c2, vt0.c1 HAVING (((((vt0.c1, v0.c0, SUM(GROUP_CONCAT(TOTAL(rt0.c4))))) NOT BETWEEN ((NULL, COUNT(*), SUM(v0.c2))) AND ((COUNT(rt0.c3), ((SUM(COUNT(v0.c0)))OR(t0.c0)), CASE MAX(AVG(v0.c0))  WHEN MIN(MAX(SUM(GROUP_CONCAT(t0.c2)))) THEN GROUP_CONCAT(GROUP_CONCAT(COUNT(*))) ELSE GROUP_CONCAT(GROUP_CONCAT(vt0.c0)) END)))) ISNULL);
SELECT ALL TOTAL((~ (((vt0.c1) ISNULL)))) FROM v0 NOT INDEXED, vt0, rt0 NOT INDEXED, t0 ORDER BY ((((v0.c0) BETWEEN (vt0.c1) AND (v0.c0)))=(highlight(t0.c0, rt0.c1, vt0.c0, rt0.c2)))  NULLS LAST, ((((v0.c0) NOT NULL)) NOTNULL)  NULLS LAST;
SELECT ALL * FROM t0, rt0;
SELECT ALL * FROM t0, rt0 WHERE (((CAST(rt0.c2 AS NUMERIC)) IS TRUE)) UNION ALL SELECT * FROM t0, rt0 WHERE ((NOT (((CAST(rt0.c2 AS NUMERIC)) IS TRUE)))) UNION ALL SELECT * FROM t0, rt0 WHERE (((((CAST(rt0.c2 AS NUMERIC)) IS TRUE)) ISNULL));
SELECT ALL * FROM t0, rt0;
SELECT DISTINCT * FROM v0 RIGHT OUTER JOIN rt0 ON ((((v0.c1) NOT BETWEEN (t0.c2) AND (rt0.c3))) ISNULL) CROSS JOIN vt0 ON (CASE rt0.c3  WHEN v0.c0 THEN rt0.c4 END IN ()) INNER JOIN t0 ON CAST(((rt0.c2)%(rt0.c3)) AS REAL);
SELECT DISTINCT * FROM v0 RIGHT OUTER JOIN rt0 ON ((((v0.c1) NOT BETWEEN (t0.c2) AND (rt0.c3))) ISNULL) CROSS JOIN vt0 ON (CASE rt0.c3  WHEN v0.c0 THEN rt0.c4 END IN ()) INNER JOIN t0 ON CAST(((rt0.c2)%(rt0.c3)) AS REAL) WHERE (((((((rt0.c3) BETWEEN (rt0.c4) AND (v0.c1)))OR(((((t0.c2)OR(rt0.c2)))AND(t0.c2)))))AND(((rt0.c1) BETWEEN (t0.c0) AND (rt0.c1))))) UNION SELECT DISTINCT * FROM v0 RIGHT OUTER JOIN rt0 ON ((((v0.c1) NOT BETWEEN (t0.c2) AND (rt0.c3))) ISNULL) CROSS JOIN vt0 ON (CASE rt0.c3  WHEN v0.c0 THEN rt0.c4 END IN ()) INNER JOIN t0 ON CAST(((rt0.c2)%(rt0.c3)) AS REAL) WHERE ((NOT (((((((rt0.c3) BETWEEN (rt0.c4) AND (v0.c1)))OR(((((t0.c2)OR(rt0.c2)))AND(t0.c2)))))AND(((rt0.c1) BETWEEN (t0.c0) AND (rt0.c1))))))) UNION SELECT DISTINCT * FROM v0 RIGHT OUTER JOIN rt0 ON ((((v0.c1) NOT BETWEEN (t0.c2) AND (rt0.c3))) ISNULL) CROSS JOIN vt0 ON (CASE rt0.c3  WHEN v0.c0 THEN rt0.c4 END IN ()) INNER JOIN t0 ON CAST(((rt0.c2)%(rt0.c3)) AS REAL) WHERE (((((((((rt0.c3) BETWEEN (rt0.c4) AND (v0.c1)))OR(((((t0.c2)OR(rt0.c2)))AND(t0.c2)))))AND(((rt0.c1) BETWEEN (t0.c0) AND (rt0.c1))))) ISNULL));
SELECT DISTINCT * FROM v0 RIGHT OUTER JOIN rt0 ON ((((v0.c1) NOT BETWEEN (t0.c2) AND (rt0.c3))) ISNULL) CROSS JOIN vt0 ON (CASE rt0.c3  WHEN v0.c0 THEN rt0.c4 END IN ()) INNER JOIN t0 ON CAST(((rt0.c2)%(rt0.c3)) AS REAL);
SELECT v0.c2, v0.c0, vt0.c0, t0.c2, t0.c0, vt0.c1, v0.c1 FROM vt0 RIGHT OUTER JOIN t0 ON ((v0.c2)&(t0.c2)) COLLATE NOCASE INNER JOIN v0 ON (+ ((((NULL))>((vt0.c1))))) GROUP BY v0.c2, v0.c0, vt0.c0, t0.c2, t0.c0, vt0.c1, v0.c1;
SELECT v0.c1 FROM v0 GROUP BY v0.c1;
SELECT ALL v0.c1 FROM v0 GROUP BY v0.c1 HAVING SUM(v0.c0) UNION ALL SELECT ALL v0.c1 FROM v0 GROUP BY v0.c1 HAVING (NOT (SUM(v0.c0))) UNION ALL SELECT v0.c1 FROM v0 GROUP BY v0.c1 HAVING ((SUM(v0.c0)) ISNULL);
SELECT v0.c1 FROM v0 GROUP BY v0.c1;
SELECT ALL v0.c1 FROM v0 GROUP BY v0.c1 HAVING SUM(v0.c0) UNION ALL SELECT ALL v0.c1 FROM v0 GROUP BY v0.c1 HAVING (NOT (SUM(v0.c0))) UNION ALL SELECT v0.c1 FROM v0 GROUP BY v0.c1 HAVING ((SUM(v0.c0)) ISNULL);
SELECT v0.c1 FROM v0 GROUP BY v0.c1;
SELECT ALL t0.c0, rt0.c1, rt0.c0, t0.c2 FROM t0, vt0 FULL OUTER JOIN rt0 ON ((rtreenode('', vt0.c1))*((rt0.c0 IN ())));
SELECT t0.c0, rt0.c1, rt0.c0, t0.c2 FROM t0, vt0 FULL OUTER JOIN rt0 ON ((rtreenode('', vt0.c1))*((rt0.c0 IN ()))) WHERE ((((((((t0.c0))>((vt0.c1))))AND((NOT (vt0.c0)))))AND(((rt0.c4) BETWEEN (-2.04569503E8) AND (vt0.c1))))) UNION ALL SELECT ALL t0.c0, rt0.c1, rt0.c0, t0.c2 FROM t0, vt0 FULL OUTER JOIN rt0 ON ((rtreenode('', vt0.c1))*((rt0.c0 IN ()))) WHERE ((NOT ((((((((t0.c0))>((vt0.c1))))AND((NOT (vt0.c0)))))AND(((rt0.c4) BETWEEN (-2.04569503E8) AND (vt0.c1))))))) UNION ALL SELECT ALL t0.c0, rt0.c1, rt0.c0, t0.c2 FROM t0, vt0 FULL OUTER JOIN rt0 ON ((rtreenode('', vt0.c1))*((rt0.c0 IN ()))) WHERE ((((((((((t0.c0))>((vt0.c1))))AND((NOT (vt0.c0)))))AND(((rt0.c4) BETWEEN (-2.04569503E8) AND (vt0.c1))))) ISNULL));
SELECT ALL t0.c0, rt0.c1, rt0.c0, t0.c2 FROM t0, vt0 FULL OUTER JOIN rt0 ON ((rtreenode('', vt0.c1))*((rt0.c0 IN ())));
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (t0.c0) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (t0.c0))) UNION SELECT DISTINCT * FROM t0 WHERE (((t0.c0) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT vt0.c0, v0.c1, t0.c2, vt0.c1, rt0.c4, rt0.c1, rt0.c0, v0.c2, t0.c0 FROM rt0, t0, v0, vt0 GROUP BY vt0.c0, v0.c1, t0.c2, vt0.c1, rt0.c4, rt0.c1, rt0.c0, v0.c2, t0.c0;
SELECT ALL vt0.c0, v0.c1, t0.c2, vt0.c1, rt0.c4, rt0.c1, rt0.c0, v0.c2, t0.c0 FROM rt0, t0, v0, vt0 WHERE (LIKE(CAST(rt0.c2 AS TEXT), ((((rt0.c2)OR(v0.c0)))OR(rt0.c3)))) GROUP BY vt0.c0, v0.c1, t0.c2, vt0.c1, rt0.c4, rt0.c1, rt0.c0, v0.c2, t0.c0 UNION SELECT ALL vt0.c0, v0.c1, t0.c2, vt0.c1, rt0.c4, rt0.c1, rt0.c0, v0.c2, t0.c0 FROM rt0, t0, v0, vt0 WHERE ((NOT (LIKE(CAST(rt0.c2 AS TEXT), ((((rt0.c2)OR(v0.c0)))OR(rt0.c3)))))) GROUP BY vt0.c0, v0.c1, t0.c2, vt0.c1, rt0.c4, rt0.c1, rt0.c0, v0.c2, t0.c0 UNION SELECT vt0.c0, v0.c1, t0.c2, vt0.c1, rt0.c4, rt0.c1, rt0.c0, v0.c2, t0.c0 FROM rt0, t0, v0, vt0 WHERE (((LIKE(CAST(rt0.c2 AS TEXT), ((((rt0.c2)OR(v0.c0)))OR(rt0.c3)))) ISNULL)) GROUP BY vt0.c0, v0.c1, t0.c2, vt0.c1, rt0.c4, rt0.c1, rt0.c0, v0.c2, t0.c0;
SELECT vt0.c0, v0.c1, t0.c2, vt0.c1, rt0.c4, rt0.c1, rt0.c0, v0.c2, t0.c0 FROM rt0, t0, v0, vt0 GROUP BY vt0.c0, v0.c1, t0.c2, vt0.c1, rt0.c4, rt0.c1, rt0.c0, v0.c2, t0.c0;
SELECT v0.c1 FROM v0 GROUP BY v0.c1;
SELECT v0.c1 FROM v0 GROUP BY v0.c1 HAVING TOTAL(TOTAL(v0.c1)) UNION ALL SELECT v0.c1 FROM v0 GROUP BY v0.c1 HAVING (NOT (TOTAL(TOTAL(v0.c1)))) UNION ALL SELECT ALL v0.c1 FROM v0 GROUP BY v0.c1 HAVING ((TOTAL(TOTAL(v0.c1))) ISNULL);
SELECT ALL * FROM t0 FULL OUTER JOIN v0 ON (x'' IN ()) INNER JOIN rt0 ON CAST(TRIM(rt0.c2) AS INTEGER);
SELECT * FROM t0 FULL OUTER JOIN v0 ON (x'' IN ()) INNER JOIN rt0 ON CAST(TRIM(rt0.c2) AS INTEGER) WHERE (((((((v0.c0)OR(rt0.c2)))OR(rt0.c3))) IS TRUE)) UNION ALL SELECT * FROM t0 FULL OUTER JOIN v0 ON (x'' IN ()) INNER JOIN rt0 ON CAST(TRIM(rt0.c2) AS INTEGER) WHERE ((NOT (((((((v0.c0)OR(rt0.c2)))OR(rt0.c3))) IS TRUE)))) UNION ALL SELECT ALL * FROM t0 FULL OUTER JOIN v0 ON (x'' IN ()) INNER JOIN rt0 ON CAST(TRIM(rt0.c2) AS INTEGER) WHERE (((((((((v0.c0)OR(rt0.c2)))OR(rt0.c3))) IS TRUE)) ISNULL));
SELECT ALL * FROM t0 FULL OUTER JOIN v0 ON (x'' IN ()) INNER JOIN rt0 ON CAST(TRIM(rt0.c2) AS INTEGER);
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (CAST(((t0.c0)==('0.7232911170794333')) AS INTEGER)) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (CAST(((t0.c0)=('0.7232911170794333')) AS INTEGER)))) UNION SELECT DISTINCT * FROM t0 WHERE (((CAST(((t0.c0)==('0.7232911170794333')) AS INTEGER)) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT rt0.c2, rt0.c4, rt0.c3, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c4, rt0.c3, rt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c4, rt0.c3, rt0.c0, rt0.c1 FROM rt0 WHERE ((((((rt0.c1, rt0.c3, rt0.c4)) NOT BETWEEN ((rt0.c4, rt0.c4, rt0.c4)) AND ((rt0.c1, rt0.c3, rt0.c0))))!=((((rt0.c3))=((rt0.c1)))))) GROUP BY rt0.c2, rt0.c4, rt0.c3, rt0.c0, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c4, rt0.c3, rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT ((((((rt0.c1, rt0.c3, rt0.c4)) NOT BETWEEN ((rt0.c4, rt0.c4, rt0.c4)) AND ((rt0.c1, rt0.c3, rt0.c0))))<>((((rt0.c3))=((rt0.c1)))))))) GROUP BY rt0.c2, rt0.c4, rt0.c3, rt0.c0, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c4, rt0.c3, rt0.c0, rt0.c1 FROM rt0 WHERE ((((((((rt0.c1, rt0.c3, rt0.c4)) NOT BETWEEN ((rt0.c4, rt0.c4, rt0.c4)) AND ((rt0.c1, rt0.c3, rt0.c0))))<>((((rt0.c3))==((rt0.c1)))))) ISNULL)) GROUP BY rt0.c2, rt0.c4, rt0.c3, rt0.c0, rt0.c1;
SELECT rt0.c2, rt0.c4, rt0.c3, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c4, rt0.c3, rt0.c0, rt0.c1;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING COUNT(*) UNION ALL SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING COUNT(*) UNION ALL SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT * FROM rt0, v0;
SELECT * FROM rt0, v0 WHERE (CAST(((rt0.c3)*(rt0.c4)) AS NUMERIC)) UNION ALL SELECT * FROM rt0, v0 WHERE ((NOT (CAST(((rt0.c3)*(rt0.c4)) AS NUMERIC)))) UNION ALL SELECT * FROM rt0, v0 WHERE (((CAST(((rt0.c3)*(rt0.c4)) AS NUMERIC)) ISNULL));
SELECT * FROM rt0, v0;
SELECT DISTINCT t0.c2, rt0.c0 FROM rt0, t0, v0, vt0;
SELECT DISTINCT t0.c2, rt0.c0 FROM rt0, t0, v0, vt0 WHERE (((CAST(rt0.c1 AS BLOB)) NOT BETWEEN ((~ (vt0.c1))) AND (MIN(vt0.c0, vt0.c1)))) UNION SELECT DISTINCT t0.c2, rt0.c0 FROM rt0, t0, v0, vt0 WHERE ((NOT (((CAST(rt0.c1 AS BLOB)) NOT BETWEEN ((~ (vt0.c1))) AND (MIN(vt0.c0, vt0.c1)))))) UNION SELECT DISTINCT t0.c2, rt0.c0 FROM rt0, t0, v0, vt0 WHERE (((((CAST(rt0.c1 AS BLOB)) NOT BETWEEN ((~ (vt0.c1))) AND (MIN(vt0.c0, vt0.c1)))) ISNULL));
SELECT DISTINCT t0.c2, rt0.c0 FROM rt0, t0, v0, vt0;
SELECT ALL vt0.c0, t0.c0, vt0.c1, v0.c0 FROM t0, v0, vt0 GROUP BY vt0.c0, t0.c0, vt0.c1, v0.c0;
SELECT ALL vt0.c0, t0.c0, vt0.c1, v0.c0 FROM t0, v0, vt0 WHERE ((((v0.c1, (+ (v0.c0)), ((vt0.c0)<<(t0.c2))))<((((v0.c2) ISNULL), TYPEOF(v0.c2), ((t0.c2)/(vt0.c0)))))) GROUP BY vt0.c0, t0.c0, vt0.c1, v0.c0 UNION SELECT vt0.c0, t0.c0, vt0.c1, v0.c0 FROM t0, v0, vt0 WHERE ((NOT ((((v0.c1, (+ (v0.c0)), ((vt0.c0)<<(t0.c2))))<((((v0.c2) ISNULL), TYPEOF(v0.c2), ((t0.c2)/(vt0.c0)))))))) GROUP BY vt0.c0, t0.c0, vt0.c1, v0.c0 UNION SELECT vt0.c0, t0.c0, vt0.c1, v0.c0 FROM t0, v0, vt0 WHERE ((((((v0.c1, (+ (v0.c0)), ((vt0.c0)<<(t0.c2))))<((((v0.c2) ISNULL), TYPEOF(v0.c2), ((t0.c2)/(vt0.c0)))))) ISNULL)) GROUP BY vt0.c0, t0.c0, vt0.c1, v0.c0;
SELECT ALL vt0.c0, t0.c0, vt0.c1, v0.c0 FROM t0, v0, vt0 GROUP BY vt0.c0, t0.c0, vt0.c1, v0.c0;
SELECT v0.c2, v0.c1, t0.c2 FROM t0 RIGHT OUTER JOIN v0 ON ((((v0.c2) BETWEEN ('157390857') AND (v0.c1))) NOT BETWEEN ((- (v0.c0))) AND (v0.c0 COLLATE BINARY)) GROUP BY v0.c2, v0.c1, t0.c2;
SELECT ALL v0.c2, v0.c1, t0.c2 FROM t0 RIGHT OUTER JOIN v0 ON ((((v0.c2) BETWEEN ('157390857') AND (v0.c1))) NOT BETWEEN ((- (v0.c0))) AND (v0.c0 COLLATE BINARY)) GROUP BY v0.c2, v0.c1, t0.c2 HAVING (+ (GROUP_CONCAT(COUNT(*)))) UNION ALL SELECT ALL v0.c2, v0.c1, t0.c2 FROM t0 RIGHT OUTER JOIN v0 ON ((((v0.c2) BETWEEN ('157390857') AND (v0.c1))) NOT BETWEEN ((- (v0.c0))) AND (v0.c0 COLLATE BINARY)) GROUP BY v0.c2, v0.c1, t0.c2 HAVING (NOT ((+ (GROUP_CONCAT(COUNT(*)))))) UNION ALL SELECT v0.c2, v0.c1, t0.c2 FROM t0 RIGHT OUTER JOIN v0 ON ((((v0.c2) BETWEEN ('157390857') AND (v0.c1))) NOT BETWEEN ((- (v0.c0))) AND (v0.c0 COLLATE BINARY)) GROUP BY v0.c2, v0.c1, t0.c2 HAVING (((+ (GROUP_CONCAT(COUNT(*))))) ISNULL);
SELECT ALL v0.c1, v0.c0, rt0.c1, t0.c0 FROM vt0, v0, rt0, t0;
SELECT v0.c1, v0.c0, rt0.c1, t0.c0 FROM vt0, v0, rt0, t0 WHERE ((((('-165812165')IS NOT(rt0.c0))) ISNULL)) UNION ALL SELECT v0.c1, v0.c0, rt0.c1, t0.c0 FROM vt0, v0, rt0, t0 WHERE ((NOT ((((('-165812165')IS NOT(rt0.c0))) ISNULL)))) UNION ALL SELECT ALL v0.c1, v0.c0, rt0.c1, t0.c0 FROM vt0, v0, rt0, t0 WHERE ((((((('-165812165')IS NOT(rt0.c0))) ISNULL)) ISNULL));
SELECT ALL v0.c1, v0.c0, rt0.c1, t0.c0 FROM vt0, v0, rt0, t0;
SELECT DISTINCT v0.c0, v0.c1 FROM v0;
SELECT DISTINCT v0.c0, v0.c1 FROM v0 WHERE ((((v0.c0)) BETWEEN ((1.802754699E9)) AND ((v0.c1)))) UNION SELECT DISTINCT v0.c0, v0.c1 FROM v0 WHERE ((NOT ((((v0.c0)) BETWEEN ((1.802754699E9)) AND ((v0.c1)))))) UNION SELECT DISTINCT v0.c0, v0.c1 FROM v0 WHERE ((((((v0.c0)) BETWEEN ((1.802754699E9)) AND ((v0.c1)))) ISNULL));
SELECT DISTINCT v0.c0, v0.c1 FROM v0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (((((((((((vt0.c0) BETWEEN (vt0.c1) AND (NULL)))AND(((x'60b2')||(vt0.c0)))))AND('-1027487128')))OR(((vt0.c0)<=(vt0.c0)))))OR(LIKE(vt0.c1, vt0.c0)))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (((((((((((vt0.c0) BETWEEN (vt0.c1) AND (NULL)))AND(((x'60b2')||(vt0.c0)))))AND('-1027487128')))OR(((vt0.c0)<=(vt0.c0)))))OR(LIKE(vt0.c1, vt0.c0)))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((((((((((((vt0.c0) BETWEEN (vt0.c1) AND (NULL)))AND(((x'60b2')||(vt0.c0)))))AND('-1027487128')))OR(((vt0.c0)<=(vt0.c0)))))OR(LIKE(vt0.c1, vt0.c0)))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL v0.c2, rt0.c0, v0.c0, v0.c1, vt0.c1, rt0.c2, rt0.c4, rt0.c3, rt0.c1, vt0.c0 FROM rt0 LEFT OUTER JOIN vt0 ON (((((vt0.c0)OR(0.39839704897369843)))OR(vt0.c1)) IN (CASE WHEN v0.c0 THEN vt0.c1 WHEN v0.c1 THEN v0.c0 WHEN rt0.c0 THEN vt0.c0 END)) FULL OUTER JOIN v0 ON TRIM(DISTINCT vt0.c1, vt0.c1 COLLATE BINARY) GROUP BY v0.c2, rt0.c0, v0.c0, v0.c1, vt0.c1, rt0.c2, rt0.c4, rt0.c3, rt0.c1, vt0.c0;
SELECT ALL MIN((+ (((rt0.c0)/(NULL))))) FROM v0, rt0, t0;
SELECT ALL * FROM rt0, v0, vt0;
SELECT ALL * FROM rt0, v0, vt0 WHERE ((~ (CAST(v0.c2 AS REAL)))) UNION ALL SELECT * FROM rt0, v0, vt0 WHERE ((NOT ((~ (CAST(v0.c2 AS REAL)))))) UNION ALL SELECT ALL * FROM rt0, v0, vt0 WHERE ((((~ (CAST(v0.c2 AS REAL)))) ISNULL));
SELECT ALL * FROM rt0, v0, vt0;
SELECT DISTINCT * FROM v0, rt0;
SELECT DISTINCT * FROM v0, rt0 WHERE (((rt0.c1)<(rt0.c2)) COLLATE BINARY) UNION SELECT DISTINCT * FROM v0, rt0 WHERE ((NOT (((rt0.c1)<(rt0.c2)) COLLATE BINARY))) UNION SELECT DISTINCT * FROM v0, rt0 WHERE (((((rt0.c1)<(rt0.c2)) COLLATE BINARY) ISNULL));
SELECT DISTINCT * FROM v0, rt0;
SELECT ALL vt0.c1, t0.c0, vt0.c0, rt0.c2, rt0.c4, t0.c2, v0.c0, rt0.c3, rt0.c0, v0.c1, rt0.c1 FROM t0, v0, vt0, rt0 GROUP BY vt0.c1, t0.c0, vt0.c0, rt0.c2, rt0.c4, t0.c2, v0.c0, rt0.c3, rt0.c0, v0.c1, rt0.c1;
SELECT ALL vt0.c1, t0.c0, vt0.c0, rt0.c2, rt0.c4, t0.c2, v0.c0, rt0.c3, rt0.c0, v0.c1, rt0.c1 FROM t0, v0, vt0, rt0 WHERE (((((rt0.c0)/(t0.c0))) NOT BETWEEN (LIKELIHOOD(rt0.c4, 0.751009617887888)) AND (((((rt0.c3)AND(rt0.c1)))AND(rt0.c1))))) GROUP BY vt0.c1, t0.c0, vt0.c0, rt0.c2, rt0.c4, t0.c2, v0.c0, rt0.c3, rt0.c0, v0.c1, rt0.c1 UNION SELECT ALL vt0.c1, t0.c0, vt0.c0, rt0.c2, rt0.c4, t0.c2, v0.c0, rt0.c3, rt0.c0, v0.c1, rt0.c1 FROM t0, v0, vt0, rt0 WHERE ((NOT (((((rt0.c0)/(t0.c0))) NOT BETWEEN (LIKELIHOOD(rt0.c4, 0.751009617887888)) AND (((((rt0.c3)AND(rt0.c1)))AND(rt0.c1))))))) GROUP BY vt0.c1, t0.c0, vt0.c0, rt0.c2, rt0.c4, t0.c2, v0.c0, rt0.c3, rt0.c0, v0.c1, rt0.c1 UNION SELECT vt0.c1, t0.c0, vt0.c0, rt0.c2, rt0.c4, t0.c2, v0.c0, rt0.c3, rt0.c0, v0.c1, rt0.c1 FROM t0, v0, vt0, rt0 WHERE (((((((rt0.c0)/(t0.c0))) NOT BETWEEN (LIKELIHOOD(rt0.c4, 0.751009617887888)) AND (((((rt0.c3)AND(rt0.c1)))AND(rt0.c1))))) ISNULL)) GROUP BY vt0.c1, t0.c0, vt0.c0, rt0.c2, rt0.c4, t0.c2, v0.c0, rt0.c3, rt0.c0, v0.c1, rt0.c1;
SELECT ALL vt0.c1, t0.c0, vt0.c0, rt0.c2, rt0.c4, t0.c2, v0.c0, rt0.c3, rt0.c0, v0.c1, rt0.c1 FROM t0, v0, vt0, rt0 GROUP BY vt0.c1, t0.c0, vt0.c0, rt0.c2, rt0.c4, t0.c2, v0.c0, rt0.c3, rt0.c0, v0.c1, rt0.c1;
SELECT ALL v0.c0, v0.c2, rt0.c1, rt0.c0, rt0.c3, rt0.c2 FROM v0, rt0 GROUP BY v0.c0, v0.c2, rt0.c1, rt0.c0, rt0.c3, rt0.c2;
SELECT ALL v0.c0, v0.c2, rt0.c1, rt0.c0, rt0.c3, rt0.c2 FROM v0, rt0 GROUP BY v0.c0, v0.c2, rt0.c1, rt0.c0, rt0.c3, rt0.c2 HAVING CASE v0.c2  WHEN TOTAL(rt0.c2) THEN TRIM(DISTINCT v0.c1, COUNT(*)) END UNION ALL SELECT v0.c0, v0.c2, rt0.c1, rt0.c0, rt0.c3, rt0.c2 FROM v0, rt0 GROUP BY v0.c0, v0.c2, rt0.c1, rt0.c0, rt0.c3, rt0.c2 HAVING (NOT (CASE v0.c2  WHEN TOTAL(rt0.c2) THEN TRIM(DISTINCT v0.c1, COUNT(*)) END)) UNION ALL SELECT v0.c0, v0.c2, rt0.c1, rt0.c0, rt0.c3, rt0.c2 FROM v0, rt0 GROUP BY v0.c0, v0.c2, rt0.c1, rt0.c0, rt0.c3, rt0.c2 HAVING ((CASE v0.c2  WHEN TOTAL(rt0.c2) THEN TRIM(DISTINCT v0.c1, COUNT(*)) END) ISNULL);
SELECT ALL v0.c0, v0.c2, rt0.c1, rt0.c0, rt0.c3, rt0.c2 FROM v0, rt0 GROUP BY v0.c0, v0.c2, rt0.c1, rt0.c0, rt0.c3, rt0.c2;
SELECT ALL v0.c0, v0.c2, rt0.c1, rt0.c0, rt0.c3, rt0.c2 FROM v0, rt0 GROUP BY v0.c0, v0.c2, rt0.c1, rt0.c0, rt0.c3, rt0.c2 HAVING CASE v0.c2  WHEN TOTAL(rt0.c2) THEN TRIM(DISTINCT v0.c1, COUNT(*)) END UNION ALL SELECT v0.c0, v0.c2, rt0.c1, rt0.c0, rt0.c3, rt0.c2 FROM v0, rt0 GROUP BY v0.c0, v0.c2, rt0.c1, rt0.c0, rt0.c3, rt0.c2 HAVING (NOT (CASE v0.c2  WHEN TOTAL(rt0.c2) THEN TRIM(DISTINCT v0.c1, COUNT(*)) END)) UNION ALL SELECT v0.c0, v0.c2, rt0.c1, rt0.c0, rt0.c3, rt0.c2 FROM v0, rt0 GROUP BY v0.c0, v0.c2, rt0.c1, rt0.c0, rt0.c3, rt0.c2 HAVING ((CASE v0.c2  WHEN TOTAL(rt0.c2) THEN TRIM(DISTINCT v0.c1, COUNT(*)) END) ISNULL);
SELECT ALL v0.c0, v0.c2, rt0.c1, rt0.c0, rt0.c3, rt0.c2 FROM v0, rt0 GROUP BY v0.c0, v0.c2, rt0.c1, rt0.c0, rt0.c3, rt0.c2;
SELECT rt0.c2 FROM rt0, vt0, v0;
SELECT rt0.c2 FROM rt0, vt0, v0 WHERE (CAST(CAST(rt0.c0 AS NUMERIC) AS TEXT)) UNION ALL SELECT rt0.c2 FROM rt0, vt0, v0 WHERE ((NOT (CAST(CAST(rt0.c0 AS NUMERIC) AS TEXT)))) UNION ALL SELECT rt0.c2 FROM rt0, vt0, v0 WHERE (((CAST(CAST(rt0.c0 AS NUMERIC) AS TEXT)) ISNULL));
SELECT rt0.c2 FROM rt0, vt0, v0;
SELECT DISTINCT * FROM vt0, t0, v0, rt0;
SELECT DISTINCT * FROM vt0, t0, v0, rt0 WHERE (((CASE WHEN rt0.c0 THEN t0.c0 ELSE v0.c2 END)AND(CAST(v0.c1 AS INTEGER)))) UNION SELECT DISTINCT * FROM vt0, t0, v0, rt0 WHERE ((NOT (((CASE WHEN rt0.c0 THEN t0.c0 ELSE v0.c2 END)AND(CAST(v0.c1 AS INTEGER)))))) UNION SELECT DISTINCT * FROM vt0, t0, v0, rt0 WHERE (((((CASE WHEN rt0.c0 THEN t0.c0 ELSE v0.c2 END)AND(CAST(v0.c1 AS INTEGER)))) ISNULL));
SELECT DISTINCT * FROM vt0, t0, v0, rt0;
SELECT ALL vt0.c1, rt0.c3, rt0.c4 FROM t0, v0, vt0, rt0 GROUP BY vt0.c1, rt0.c3, rt0.c4;
SELECT vt0.c1, rt0.c3, rt0.c4 FROM t0, v0, vt0, rt0 WHERE ((((((x'')<=(rt0.c2))))<((((v0.c1)%(-155198399)))))) GROUP BY vt0.c1, rt0.c3, rt0.c4 UNION SELECT vt0.c1, rt0.c3, rt0.c4 FROM t0, v0, vt0, rt0 WHERE ((NOT ((((((x'')<=(rt0.c2))))<((((v0.c1)%(-155198399)))))))) GROUP BY vt0.c1, rt0.c3, rt0.c4 UNION SELECT ALL vt0.c1, rt0.c3, rt0.c4 FROM t0, v0, vt0, rt0 WHERE ((((((((x'')<=(rt0.c2))))<((((v0.c1)%(-155198399)))))) ISNULL)) GROUP BY vt0.c1, rt0.c3, rt0.c4;
SELECT ALL vt0.c1, rt0.c3, rt0.c4 FROM t0, v0, vt0, rt0 GROUP BY vt0.c1, rt0.c3, rt0.c4;
SELECT v0.c2, vt0.c1, v0.c0, rt0.c0, rt0.c4, v0.c1, rt0.c1, rt0.c2, vt0.c0 FROM t0, rt0 CROSS JOIN vt0 ON ((TYPEOF(DISTINCT v0.c0))!=(CAST(rt0.c4 AS TEXT))) LEFT OUTER JOIN v0 ON CASE vt0.c1  WHEN (('-2130400944') IS TRUE) THEN (NOT (v0.c0)) ELSE (rt0.c4 IN ()) END GROUP BY v0.c2, vt0.c1, v0.c0, rt0.c0, rt0.c4, v0.c1, rt0.c1, rt0.c2, vt0.c0;
SELECT v0.c2, vt0.c1, v0.c0, rt0.c0, rt0.c4, v0.c1, rt0.c1, rt0.c2, vt0.c0 FROM t0, rt0 CROSS JOIN vt0 ON ((TYPEOF(DISTINCT v0.c0))<>(CAST(rt0.c4 AS TEXT))) LEFT OUTER JOIN v0 ON CASE vt0.c1  WHEN (('-2130400944') IS TRUE) THEN (NOT (v0.c0)) ELSE (rt0.c4 IN ()) END GROUP BY v0.c2, vt0.c1, v0.c0, rt0.c0, rt0.c4, v0.c1, rt0.c1, rt0.c2, vt0.c0 HAVING COALESCE(MAX(MAX(t0.c2)), TOTAL(rt0.c1)) UNION ALL SELECT v0.c2, vt0.c1, v0.c0, rt0.c0, rt0.c4, v0.c1, rt0.c1, rt0.c2, vt0.c0 FROM t0, rt0 CROSS JOIN vt0 ON ((TYPEOF(DISTINCT v0.c0))!=(CAST(rt0.c4 AS TEXT))) LEFT OUTER JOIN v0 ON CASE vt0.c1  WHEN (('-2130400944') IS TRUE) THEN (NOT (v0.c0)) ELSE (rt0.c4 IN ()) END GROUP BY v0.c2, vt0.c1, v0.c0, rt0.c0, rt0.c4, v0.c1, rt0.c1, rt0.c2, vt0.c0 HAVING (NOT (COALESCE(MAX(MAX(t0.c2)), TOTAL(rt0.c1)))) UNION ALL SELECT v0.c2, vt0.c1, v0.c0, rt0.c0, rt0.c4, v0.c1, rt0.c1, rt0.c2, vt0.c0 FROM t0, rt0 CROSS JOIN vt0 ON ((TYPEOF(DISTINCT v0.c0))<>(CAST(rt0.c4 AS TEXT))) LEFT OUTER JOIN v0 ON CASE vt0.c1  WHEN (('-2130400944') IS TRUE) THEN (NOT (v0.c0)) ELSE (rt0.c4 IN ()) END GROUP BY v0.c2, vt0.c1, v0.c0, rt0.c0, rt0.c4, v0.c1, rt0.c1, rt0.c2, vt0.c0 HAVING ((COALESCE(MAX(MAX(t0.c2)), TOTAL(rt0.c1))) ISNULL);
SELECT ALL MAX((((NULL, vt0.c1, '1198877371')) BETWEEN ((CAST('384090347' AS BLOB), ((v0.c2) BETWEEN (t0.c2) AND (rt0.c2)), (NOT (t0.c2)))) AND ((CAST(rt0.c0 AS BLOB), CAST(rt0.c0 AS NUMERIC), ((vt0.c0)||(rt0.c3)))))) FROM rt0, v0, t0, vt0 ORDER BY x'5438'  NULLS LAST;
SELECT * FROM rt0, vt0 CROSS JOIN v0 ON CAST(CAST(rt0.c2 AS BLOB) AS INTEGER);
SELECT * FROM rt0, vt0 CROSS JOIN v0 ON CAST(CAST(rt0.c2 AS BLOB) AS INTEGER) WHERE ((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((x''))) COLLATE BINARY COLLATE RTRIM) UNION ALL SELECT ALL * FROM rt0, vt0 CROSS JOIN v0 ON CAST(CAST(rt0.c2 AS BLOB) AS INTEGER) WHERE ((NOT ((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((x''))) COLLATE BINARY COLLATE RTRIM))) UNION ALL SELECT ALL * FROM rt0, vt0 CROSS JOIN v0 ON CAST(CAST(rt0.c2 AS BLOB) AS INTEGER) WHERE ((((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((x''))) COLLATE BINARY COLLATE RTRIM) ISNULL));
SELECT * FROM rt0, vt0 CROSS JOIN v0 ON CAST(CAST(rt0.c2 AS BLOB) AS INTEGER);
SELECT DISTINCT * FROM v0, t0;
SELECT DISTINCT * FROM v0, t0 WHERE (NULL) UNION SELECT DISTINCT * FROM v0, t0 WHERE ((NOT (NULL))) UNION SELECT DISTINCT * FROM v0, t0 WHERE (((NULL) ISNULL));
SELECT DISTINCT * FROM v0, t0;
SELECT ALL vt0.c1, rt0.c2, rt0.c3, rt0.c4 FROM vt0, rt0 GROUP BY vt0.c1, rt0.c2, rt0.c3, rt0.c4;
SELECT vt0.c1, rt0.c2, rt0.c3, rt0.c4 FROM vt0, rt0 WHERE ((((vt0.c1)) NOT BETWEEN ((((rt0.c3) NOT BETWEEN (rt0.c0) AND (rt0.c4)))) AND (((rt0.c2 IN ()))))) GROUP BY vt0.c1, rt0.c2, rt0.c3, rt0.c4 UNION SELECT vt0.c1, rt0.c2, rt0.c3, rt0.c4 FROM vt0, rt0 WHERE ((NOT ((((vt0.c1)) NOT BETWEEN ((((rt0.c3) NOT BETWEEN (rt0.c0) AND (rt0.c4)))) AND (((rt0.c2 IN ()))))))) GROUP BY vt0.c1, rt0.c2, rt0.c3, rt0.c4 UNION SELECT vt0.c1, rt0.c2, rt0.c3, rt0.c4 FROM vt0, rt0 WHERE ((((((vt0.c1)) NOT BETWEEN ((((rt0.c3) NOT BETWEEN (rt0.c0) AND (rt0.c4)))) AND (((rt0.c2 IN ()))))) ISNULL)) GROUP BY vt0.c1, rt0.c2, rt0.c3, rt0.c4;
SELECT ALL vt0.c1, rt0.c2, rt0.c3, rt0.c4 FROM vt0, rt0 GROUP BY vt0.c1, rt0.c2, rt0.c3, rt0.c4;
SELECT ALL rt0.c1, v0.c0, rt0.c3, rt0.c4 FROM rt0, v0, vt0, t0 GROUP BY rt0.c1, v0.c0, rt0.c3, rt0.c4;
SELECT ALL rt0.c1, v0.c0, rt0.c3, rt0.c4 FROM rt0, v0, vt0, t0 GROUP BY rt0.c1, v0.c0, rt0.c3, rt0.c4 HAVING CAST((((v0.c2))>=((rt0.c2))) AS INTEGER) UNION ALL SELECT rt0.c1, v0.c0, rt0.c3, rt0.c4 FROM rt0, v0, vt0, t0 GROUP BY rt0.c1, v0.c0, rt0.c3, rt0.c4 HAVING (NOT (CAST((((v0.c2))>=((rt0.c2))) AS INTEGER))) UNION ALL SELECT rt0.c1, v0.c0, rt0.c3, rt0.c4 FROM rt0, v0, vt0, t0 GROUP BY rt0.c1, v0.c0, rt0.c3, rt0.c4 HAVING ((CAST((((v0.c2))>=((rt0.c2))) AS INTEGER)) ISNULL);
SELECT ALL rt0.c1, v0.c0, rt0.c3, rt0.c4 FROM rt0, v0, vt0, t0 GROUP BY rt0.c1, v0.c0, rt0.c3, rt0.c4;
SELECT ALL rt0.c1, v0.c0, rt0.c3, rt0.c4 FROM rt0, v0, vt0, t0 GROUP BY rt0.c1, v0.c0, rt0.c3, rt0.c4 HAVING CAST((((v0.c2))>=((rt0.c2))) AS INTEGER) UNION ALL SELECT rt0.c1, v0.c0, rt0.c3, rt0.c4 FROM rt0, v0, vt0, t0 GROUP BY rt0.c1, v0.c0, rt0.c3, rt0.c4 HAVING (NOT (CAST((((v0.c2))>=((rt0.c2))) AS INTEGER))) UNION ALL SELECT rt0.c1, v0.c0, rt0.c3, rt0.c4 FROM rt0, v0, vt0, t0 GROUP BY rt0.c1, v0.c0, rt0.c3, rt0.c4 HAVING ((CAST((((v0.c2))>=((rt0.c2))) AS INTEGER)) ISNULL);
SELECT ALL rt0.c1, v0.c0, rt0.c3, rt0.c4 FROM rt0, v0, vt0, t0 GROUP BY rt0.c1, v0.c0, rt0.c3, rt0.c4;
SELECT MIN((((- (vt0.c1)))*((vt0.c1 IN (rt0.c4, v0.c2))))) FROM t0, rt0, vt0, v0 ORDER BY ((((vt0.c1) NOT BETWEEN (x'') AND (x'a684')))<>((+ (v0.c0)))) ASC;
SELECT * FROM v0, vt0;
SELECT ALL * FROM v0, vt0 WHERE (((((v0.c2) NOT BETWEEN (v0.c0) AND (vt0.c1))) BETWEEN ('?s') AND (v0.c1 COLLATE NOCASE))) UNION ALL SELECT ALL * FROM v0, vt0 WHERE ((NOT (((((v0.c2) NOT BETWEEN (v0.c0) AND (vt0.c1))) BETWEEN ('?s') AND (v0.c1 COLLATE NOCASE))))) UNION ALL SELECT * FROM v0, vt0 WHERE (((((((v0.c2) NOT BETWEEN (v0.c0) AND (vt0.c1))) BETWEEN ('?s') AND (v0.c1 COLLATE NOCASE))) ISNULL));
SELECT * FROM v0, vt0;
SELECT DISTINCT rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c2 FROM rt0 WHERE ((NOT (-1.027487128E9))) UNION SELECT DISTINCT rt0.c2 FROM rt0 WHERE ((NOT ((NOT (-1.027487128E9))))) UNION SELECT DISTINCT rt0.c2 FROM rt0 WHERE ((((NOT (-1.027487128E9))) ISNULL));
SELECT DISTINCT rt0.c2 FROM rt0;
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0 WHERE (((((vt0.c0 COLLATE RTRIM)OR(((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)))))AND(0.5052691080544697))) GROUP BY vt0.c1, vt0.c0 UNION SELECT ALL vt0.c1, vt0.c0 FROM vt0 WHERE ((NOT (((((vt0.c0 COLLATE RTRIM)OR(((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)))))AND(0.5052691080544697))))) GROUP BY vt0.c1, vt0.c0 UNION SELECT ALL vt0.c1, vt0.c0 FROM vt0 WHERE (((((((vt0.c0 COLLATE RTRIM)OR(((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)))))AND(0.5052691080544697))) ISNULL)) GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT(*)) BETWEEN (SUM(TOTAL(vt0.c0))) AND (TOTAL(vt0.c0))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (((COUNT(*)) BETWEEN (SUM(TOTAL(vt0.c0))) AND (TOTAL(vt0.c0))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((COUNT(*)) BETWEEN (SUM(TOTAL(vt0.c0))) AND (TOTAL(vt0.c0)))) ISNULL);
SELECT ALL * FROM v0, vt0;
SELECT ALL * FROM v0, vt0 WHERE (((((vt0.c1) NOT BETWEEN (0.4806275785739246) AND (vt0.c1))) NOT BETWEEN (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END) AND ((((vt0.c1))<=((vt0.c1)))))) UNION ALL SELECT * FROM v0, vt0 WHERE ((NOT (((((vt0.c1) NOT BETWEEN (0.4806275785739246) AND (vt0.c1))) NOT BETWEEN (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END) AND ((((vt0.c1))<=((vt0.c1)))))))) UNION ALL SELECT * FROM v0, vt0 WHERE (((((((vt0.c1) NOT BETWEEN (0.4806275785739246) AND (vt0.c1))) NOT BETWEEN (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END) AND ((((vt0.c1))<=((vt0.c1)))))) ISNULL));
SELECT ALL * FROM v0, vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (CASE ((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c1)))AND(vt0.c0)))AND(vt0.c1))  WHEN CASE WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END THEN vt0.c1 COLLATE BINARY WHEN UNLIKELY(DISTINCT vt0.c0) THEN ((vt0.c1) IS TRUE) WHEN (((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c1))) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)) ELSE ((vt0.c1)==(vt0.c1)) END) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (CASE ((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c1)))AND(vt0.c0)))AND(vt0.c1))  WHEN CASE WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END THEN vt0.c1 COLLATE BINARY WHEN UNLIKELY(DISTINCT vt0.c0) THEN ((vt0.c1) IS TRUE) WHEN (((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c1))) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)) ELSE ((vt0.c1)=(vt0.c1)) END))) UNION SELECT DISTINCT * FROM vt0 WHERE (((CASE ((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c1)))AND(vt0.c0)))AND(vt0.c1))  WHEN CASE WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END THEN vt0.c1 COLLATE BINARY WHEN UNLIKELY(DISTINCT vt0.c0) THEN ((vt0.c1) IS TRUE) WHEN (((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c1))) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)) ELSE ((vt0.c1)==(vt0.c1)) END) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL rt0.c2, t0.c2, rt0.c3, rt0.c4, t0.c0, rt0.c1, rt0.c0 FROM rt0, t0 GROUP BY rt0.c2, t0.c2, rt0.c3, rt0.c4, t0.c0, rt0.c1, rt0.c0;
SELECT ALL rt0.c2, t0.c2, rt0.c3, rt0.c4, t0.c0, rt0.c1, rt0.c0 FROM rt0, t0 WHERE ((+ ((((rt0.c4, rt0.c0, rt0.c2)) BETWEEN ((rt0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c2, rt0.c4)))))) GROUP BY rt0.c2, t0.c2, rt0.c3, rt0.c4, t0.c0, rt0.c1, rt0.c0 UNION SELECT rt0.c2, t0.c2, rt0.c3, rt0.c4, t0.c0, rt0.c1, rt0.c0 FROM rt0, t0 WHERE ((NOT ((+ ((((rt0.c4, rt0.c0, rt0.c2)) BETWEEN ((rt0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c2, rt0.c4)))))))) GROUP BY rt0.c2, t0.c2, rt0.c3, rt0.c4, t0.c0, rt0.c1, rt0.c0 UNION SELECT ALL rt0.c2, t0.c2, rt0.c3, rt0.c4, t0.c0, rt0.c1, rt0.c0 FROM rt0, t0 WHERE ((((+ ((((rt0.c4, rt0.c0, rt0.c2)) BETWEEN ((rt0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c2, rt0.c4)))))) ISNULL)) GROUP BY rt0.c2, t0.c2, rt0.c3, rt0.c4, t0.c0, rt0.c1, rt0.c0;
SELECT ALL rt0.c2, t0.c2, rt0.c3, rt0.c4, t0.c0, rt0.c1, rt0.c0 FROM rt0, t0 GROUP BY rt0.c2, t0.c2, rt0.c3, rt0.c4, t0.c0, rt0.c1, rt0.c0;
SELECT v0.c0, v0.c2, v0.c1, t0.c2, t0.c0 FROM v0, t0 GROUP BY v0.c0, v0.c2, v0.c1, t0.c2, t0.c0;
SELECT ALL v0.c0, v0.c2, v0.c1, t0.c2, t0.c0 FROM v0, t0 GROUP BY v0.c0, v0.c2, v0.c1, t0.c2, t0.c0 HAVING GROUP_CONCAT(GROUP_CONCAT(x'')) COLLATE NOCASE UNION ALL SELECT ALL v0.c0, v0.c2, v0.c1, t0.c2, t0.c0 FROM v0, t0 GROUP BY v0.c0, v0.c2, v0.c1, t0.c2, t0.c0 HAVING (NOT (GROUP_CONCAT(GROUP_CONCAT(x'')) COLLATE NOCASE)) UNION ALL SELECT ALL v0.c0, v0.c2, v0.c1, t0.c2, t0.c0 FROM v0, t0 GROUP BY v0.c0, v0.c2, v0.c1, t0.c2, t0.c0 HAVING ((GROUP_CONCAT(GROUP_CONCAT(x'')) COLLATE NOCASE) ISNULL);
SELECT ALL t0.c2, t0.c0 FROM t0;
SELECT t0.c2, t0.c0 FROM t0 WHERE (t0.c0) UNION ALL SELECT ALL t0.c2, t0.c0 FROM t0 WHERE ((NOT (t0.c0))) UNION ALL SELECT ALL t0.c2, t0.c0 FROM t0 WHERE (((t0.c0) ISNULL));
SELECT ALL t0.c2, t0.c0 FROM t0;
SELECT DISTINCT rt0.c0, vt0.c0, rt0.c4 FROM t0 INNER JOIN vt0 ON (CAST(rt0.c2 AS TEXT) IN ()) RIGHT OUTER JOIN rt0 ON rt0.c1 LEFT OUTER JOIN v0 ON ((CASE v0.c1  WHEN vt0.c0 THEN v0.c1 ELSE rt0.c2 END) IS TRUE);
SELECT DISTINCT rt0.c0, vt0.c0, rt0.c4 FROM t0 INNER JOIN vt0 ON (CAST(rt0.c2 AS TEXT) IN ()) RIGHT OUTER JOIN rt0 ON rt0.c1 LEFT OUTER JOIN v0 ON ((CASE v0.c1  WHEN vt0.c0 THEN v0.c1 ELSE rt0.c2 END) IS TRUE) WHERE ((~ ((((t0.c0)) BETWEEN ((rt0.c3)) AND ((v0.c0)))))) UNION SELECT DISTINCT rt0.c0, vt0.c0, rt0.c4 FROM t0 INNER JOIN vt0 ON (CAST(rt0.c2 AS TEXT) IN ()) RIGHT OUTER JOIN rt0 ON rt0.c1 LEFT OUTER JOIN v0 ON ((CASE v0.c1  WHEN vt0.c0 THEN v0.c1 ELSE rt0.c2 END) IS TRUE) WHERE ((NOT ((~ ((((t0.c0)) BETWEEN ((rt0.c3)) AND ((v0.c0)))))))) UNION SELECT DISTINCT rt0.c0, vt0.c0, rt0.c4 FROM t0 INNER JOIN vt0 ON (CAST(rt0.c2 AS TEXT) IN ()) RIGHT OUTER JOIN rt0 ON rt0.c1 LEFT OUTER JOIN v0 ON ((CASE v0.c1  WHEN vt0.c0 THEN v0.c1 ELSE rt0.c2 END) IS TRUE) WHERE ((((~ ((((t0.c0)) BETWEEN ((rt0.c3)) AND ((v0.c0)))))) ISNULL));
SELECT DISTINCT rt0.c0, vt0.c0, rt0.c4 FROM t0 INNER JOIN vt0 ON (CAST(rt0.c2 AS TEXT) IN ()) RIGHT OUTER JOIN rt0 ON rt0.c1 LEFT OUTER JOIN v0 ON ((CASE v0.c1  WHEN vt0.c0 THEN v0.c1 ELSE rt0.c2 END) IS TRUE);
SELECT ALL rt0.c2, rt0.c3, t0.c0, rt0.c4, rt0.c0, v0.c0, vt0.c0 FROM vt0 NOT INDEXED, rt0, v0, t0 GROUP BY rt0.c2, rt0.c3, t0.c0, rt0.c4, rt0.c0, v0.c0, vt0.c0;
SELECT ALL rt0.c2, rt0.c3, t0.c0, rt0.c4, rt0.c0, v0.c0, vt0.c0 FROM vt0, rt0, v0, t0 WHERE ((((((rt0.c2)AND(v0.c2))))<=((CASE WHEN vt0.c1 THEN t0.c2 WHEN t0.c0 THEN v0.c0 WHEN rt0.c4 THEN v0.c1 END)))) GROUP BY rt0.c2, rt0.c3, t0.c0, rt0.c4, rt0.c0, v0.c0, vt0.c0 UNION SELECT rt0.c2, rt0.c3, t0.c0, rt0.c4, rt0.c0, v0.c0, vt0.c0 FROM vt0, rt0, v0, t0 WHERE ((NOT ((((((rt0.c2)AND(v0.c2))))<=((CASE WHEN vt0.c1 THEN t0.c2 WHEN t0.c0 THEN v0.c0 WHEN rt0.c4 THEN v0.c1 END)))))) GROUP BY rt0.c2, rt0.c3, t0.c0, rt0.c4, rt0.c0, v0.c0, vt0.c0 UNION SELECT ALL rt0.c2, rt0.c3, t0.c0, rt0.c4, rt0.c0, v0.c0, vt0.c0 FROM vt0, rt0, v0, t0 WHERE ((((((((rt0.c2)AND(v0.c2))))<=((CASE WHEN vt0.c1 THEN t0.c2 WHEN t0.c0 THEN v0.c0 WHEN rt0.c4 THEN v0.c1 END)))) ISNULL)) GROUP BY rt0.c2, rt0.c3, t0.c0, rt0.c4, rt0.c0, v0.c0, vt0.c0;
SELECT ALL rt0.c2, rt0.c3, t0.c0, rt0.c4, rt0.c0, v0.c0, vt0.c0 FROM vt0 NOT INDEXED, rt0, v0, t0 GROUP BY rt0.c2, rt0.c3, t0.c0, rt0.c4, rt0.c0, v0.c0, vt0.c0;
SELECT ALL rt0.c0, rt0.c2, rt0.c3, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c3, rt0.c1;
SELECT rt0.c0, rt0.c2, rt0.c3, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c3, rt0.c1 HAVING MAX(((GROUP_CONCAT(rt0.c2))-(rt0.c2))) UNION ALL SELECT rt0.c0, rt0.c2, rt0.c3, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c3, rt0.c1 HAVING (NOT (MAX(((GROUP_CONCAT(rt0.c2))-(rt0.c2))))) UNION ALL SELECT ALL rt0.c0, rt0.c2, rt0.c3, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c3, rt0.c1 HAVING ((MAX(((GROUP_CONCAT(rt0.c2))-(rt0.c2)))) ISNULL);
SELECT MAX(((t0.c2 IN ()) IN ())) FROM t0 ORDER BY ((((t0.c0 COLLATE BINARY)OR(((t0.c2) BETWEEN (t0.c2) AND (t0.c0)))))AND(((t0.c2)/(t0.c0))))  NULLS LAST;
SELECT ALL * FROM v0, t0, vt0, rt0;
SELECT ALL * FROM v0, t0, vt0, rt0 WHERE ((~ (CASE rt0.c2  WHEN x'' THEN rt0.c2 END))) UNION ALL SELECT ALL * FROM v0, t0, vt0, rt0 WHERE ((NOT ((~ (CASE rt0.c2  WHEN x'' THEN rt0.c2 END))))) UNION ALL SELECT ALL * FROM v0, t0, vt0, rt0 WHERE ((((~ (CASE rt0.c2  WHEN x'' THEN rt0.c2 END))) ISNULL));
SELECT ALL * FROM v0, t0, vt0, rt0;
SELECT DISTINCT * FROM t0, vt0 RIGHT OUTER JOIN rt0 ON '2071853991';
SELECT DISTINCT * FROM t0, vt0 RIGHT OUTER JOIN rt0 ON '2071853991' WHERE (((((((t0.c2) NOT BETWEEN (rt0.c3) AND (vt0.c0)))AND('-935487631')))AND(x'09ad'))) UNION SELECT DISTINCT * FROM t0, vt0 RIGHT OUTER JOIN rt0 ON '2071853991' WHERE ((NOT (((((((t0.c2) NOT BETWEEN (rt0.c3) AND (vt0.c0)))AND('-935487631')))AND(x'09ad'))))) UNION SELECT DISTINCT * FROM t0, vt0 RIGHT OUTER JOIN rt0 ON '2071853991' WHERE (((((((((t0.c2) NOT BETWEEN (rt0.c3) AND (vt0.c0)))AND('-935487631')))AND(x'09ad'))) ISNULL));
SELECT DISTINCT * FROM t0, vt0 RIGHT OUTER JOIN rt0 ON '2071853991';
SELECT ALL vt0.c0, t0.c0 FROM t0, vt0 GROUP BY vt0.c0, t0.c0;
SELECT ALL vt0.c0, t0.c0 FROM t0, vt0 WHERE (((((((t0.c0)>=(NULL)))AND(vt0.c1)))OR(((((((((vt0.c0)AND(t0.c2)))OR(vt0.c0)))OR(t0.c0)))OR(vt0.c0))))) GROUP BY vt0.c0, t0.c0 UNION SELECT ALL vt0.c0, t0.c0 FROM t0, vt0 WHERE ((NOT (((((((t0.c0)>=(NULL)))AND(vt0.c1)))OR(((((((((vt0.c0)AND(t0.c2)))OR(vt0.c0)))OR(t0.c0)))OR(vt0.c0))))))) GROUP BY vt0.c0, t0.c0 UNION SELECT ALL vt0.c0, t0.c0 FROM t0, vt0 WHERE (((((((((t0.c0)>=(NULL)))AND(vt0.c1)))OR(((((((((vt0.c0)AND(t0.c2)))OR(vt0.c0)))OR(t0.c0)))OR(vt0.c0))))) ISNULL)) GROUP BY vt0.c0, t0.c0;
SELECT ALL vt0.c0, t0.c0 FROM t0, vt0 GROUP BY vt0.c0, t0.c0;
SELECT t0.c0, rt0.c1, vt0.c1, rt0.c4, t0.c2 FROM rt0 CROSS JOIN t0 ON t0.c0 LEFT OUTER JOIN vt0 ON MIN(rt0.c2 COLLATE NOCASE, ((vt0.c0)+(t0.c0)), '|6b7_iKT', rt0.c4 COLLATE BINARY) GROUP BY t0.c0, rt0.c1, vt0.c1, rt0.c4, t0.c2;
SELECT t0.c0, rt0.c1, vt0.c1, rt0.c4, t0.c2 FROM rt0 CROSS JOIN t0 ON t0.c0 LEFT OUTER JOIN vt0 ON MIN(rt0.c2 COLLATE NOCASE, ((vt0.c0)+(t0.c0)), '|6b7_iKT', rt0.c4 COLLATE BINARY) GROUP BY t0.c0, rt0.c1, vt0.c1, rt0.c4, t0.c2 HAVING 0.6701422215557965 UNION ALL SELECT ALL t0.c0, rt0.c1, vt0.c1, rt0.c4, t0.c2 FROM rt0 CROSS JOIN t0 ON t0.c0 LEFT OUTER JOIN vt0 ON MIN(rt0.c2 COLLATE NOCASE, ((vt0.c0)+(t0.c0)), '|6b7_iKT', rt0.c4 COLLATE BINARY) GROUP BY t0.c0, rt0.c1, vt0.c1, rt0.c4, t0.c2 HAVING (NOT (0.6701422215557965)) UNION ALL SELECT ALL t0.c0, rt0.c1, vt0.c1, rt0.c4, t0.c2 FROM rt0 CROSS JOIN t0 ON t0.c0 LEFT OUTER JOIN vt0 ON MIN(rt0.c2 COLLATE NOCASE, ((vt0.c0)+(t0.c0)), '|6b7_iKT', rt0.c4 COLLATE BINARY) GROUP BY t0.c0, rt0.c1, vt0.c1, rt0.c4, t0.c2 HAVING ((0.6701422215557965) ISNULL);
SELECT t0.c0, rt0.c1, vt0.c1, rt0.c4, t0.c2 FROM rt0 CROSS JOIN t0 ON t0.c0 LEFT OUTER JOIN vt0 ON MIN(rt0.c2 COLLATE NOCASE, ((vt0.c0)+(t0.c0)), '|6b7_iKT', rt0.c4 COLLATE BINARY) GROUP BY t0.c0, rt0.c1, vt0.c1, rt0.c4, t0.c2;
SELECT t0.c0, rt0.c1, vt0.c1, rt0.c4, t0.c2 FROM rt0 CROSS JOIN t0 ON t0.c0 LEFT OUTER JOIN vt0 ON MIN(rt0.c2 COLLATE NOCASE, ((vt0.c0)+(t0.c0)), '|6b7_iKT', rt0.c4 COLLATE BINARY) GROUP BY t0.c0, rt0.c1, vt0.c1, rt0.c4, t0.c2 HAVING 0.6701422215557965 UNION ALL SELECT ALL t0.c0, rt0.c1, vt0.c1, rt0.c4, t0.c2 FROM rt0 CROSS JOIN t0 ON t0.c0 LEFT OUTER JOIN vt0 ON MIN(rt0.c2 COLLATE NOCASE, ((vt0.c0)+(t0.c0)), '|6b7_iKT', rt0.c4 COLLATE BINARY) GROUP BY t0.c0, rt0.c1, vt0.c1, rt0.c4, t0.c2 HAVING (NOT (0.6701422215557965)) UNION ALL SELECT ALL t0.c0, rt0.c1, vt0.c1, rt0.c4, t0.c2 FROM rt0 CROSS JOIN t0 ON t0.c0 LEFT OUTER JOIN vt0 ON MIN(rt0.c2 COLLATE NOCASE, ((vt0.c0)+(t0.c0)), '|6b7_iKT', rt0.c4 COLLATE BINARY) GROUP BY t0.c0, rt0.c1, vt0.c1, rt0.c4, t0.c2 HAVING ((0.6701422215557965) ISNULL);
SELECT t0.c0, rt0.c1, vt0.c1, rt0.c4, t0.c2 FROM rt0 CROSS JOIN t0 ON t0.c0 LEFT OUTER JOIN vt0 ON MIN(rt0.c2 COLLATE NOCASE, ((vt0.c0)+(t0.c0)), '|6b7_iKT', rt0.c4 COLLATE BINARY) GROUP BY t0.c0, rt0.c1, vt0.c1, rt0.c4, t0.c2;
SELECT ALL SUM((NOT (CASE rt0.c0  WHEN rt0.c1 THEN '-973035463' END))) FROM rt0, vt0;
SELECT ALL * FROM vt0;
SELECT * FROM vt0 WHERE (-1074132029) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (-1074132029))) UNION ALL SELECT ALL * FROM vt0 WHERE (((-1074132029) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT v0.c2, vt0.c1, rt0.c2, vt0.c0, rt0.c1, rt0.c4, v0.c0, rt0.c0 FROM vt0, rt0 LEFT OUTER JOIN v0 ON CAST(((v0.c1) NOT NULL) AS REAL);
SELECT DISTINCT v0.c2, vt0.c1, rt0.c2, vt0.c0, rt0.c1, rt0.c4, v0.c0, rt0.c0 FROM vt0, rt0 LEFT OUTER JOIN v0 ON CAST(((v0.c1) NOT NULL) AS REAL) WHERE (CASE WHEN CASE WHEN v0.c0 THEN v0.c2 END THEN (~ (v0.c0)) ELSE CASE rt0.c2  WHEN rt0.c4 THEN v0.c0 WHEN NULL THEN 'R]&' WHEN NULL THEN vt0.c0 ELSE x'' END END) UNION SELECT DISTINCT v0.c2, vt0.c1, rt0.c2, vt0.c0, rt0.c1, rt0.c4, v0.c0, rt0.c0 FROM vt0, rt0 LEFT OUTER JOIN v0 ON CAST(((v0.c1) NOT NULL) AS REAL) WHERE ((NOT (CASE WHEN CASE WHEN v0.c0 THEN v0.c2 END THEN (~ (v0.c0)) ELSE CASE rt0.c2  WHEN rt0.c4 THEN v0.c0 WHEN NULL THEN 'R]&' WHEN NULL THEN vt0.c0 ELSE x'' END END))) UNION SELECT DISTINCT v0.c2, vt0.c1, rt0.c2, vt0.c0, rt0.c1, rt0.c4, v0.c0, rt0.c0 FROM vt0, rt0 LEFT OUTER JOIN v0 ON CAST(((v0.c1) NOT NULL) AS REAL) WHERE (((CASE WHEN CASE WHEN v0.c0 THEN v0.c2 END THEN (~ (v0.c0)) ELSE CASE rt0.c2  WHEN rt0.c4 THEN v0.c0 WHEN NULL THEN 'R]&' WHEN NULL THEN vt0.c0 ELSE x'' END END) ISNULL));
SELECT DISTINCT v0.c2, vt0.c1, rt0.c2, vt0.c0, rt0.c1, rt0.c4, v0.c0, rt0.c0 FROM vt0, rt0 LEFT OUTER JOIN v0 ON CAST(((v0.c1) NOT NULL) AS REAL);
SELECT ALL t0.c0, t0.c2 FROM t0 GROUP BY t0.c0, t0.c2;
SELECT ALL t0.c0, t0.c2 FROM t0 WHERE (x'') GROUP BY t0.c0, t0.c2 UNION SELECT ALL t0.c0, t0.c2 FROM t0 WHERE ((NOT (x''))) GROUP BY t0.c0, t0.c2 UNION SELECT t0.c0, t0.c2 FROM t0 WHERE (((x'') ISNULL)) GROUP BY t0.c0, t0.c2;
SELECT ALL t0.c0, t0.c2 FROM t0 GROUP BY t0.c0, t0.c2;
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING COUNT(*) COLLATE RTRIM UNION ALL SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING (NOT (COUNT(*) COLLATE RTRIM)) UNION ALL SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING ((COUNT(*) COLLATE RTRIM) ISNULL);
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING COUNT(*) COLLATE RTRIM UNION ALL SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING (NOT (COUNT(*) COLLATE RTRIM)) UNION ALL SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING ((COUNT(*) COLLATE RTRIM) ISNULL);
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT ALL * FROM vt0 NATURAL JOIN rt0;
SELECT * FROM vt0 NATURAL JOIN rt0 WHERE ((((rt0.c4)) NOT BETWEEN (((rt0.c1 IN (rt0.c3)))) AND ((CAST(rt0.c1 AS BLOB))))) UNION ALL SELECT * FROM vt0 NATURAL JOIN rt0 WHERE ((NOT ((((rt0.c4)) NOT BETWEEN (((rt0.c1 IN (rt0.c3)))) AND ((CAST(rt0.c1 AS BLOB))))))) UNION ALL SELECT * FROM vt0 NATURAL JOIN rt0 WHERE ((((((rt0.c4)) NOT BETWEEN (((rt0.c1 IN (rt0.c3)))) AND ((CAST(rt0.c1 AS BLOB))))) ISNULL));
SELECT ALL * FROM vt0 NATURAL JOIN rt0;
SELECT DISTINCT * FROM v0, vt0;
SELECT DISTINCT * FROM v0, vt0 WHERE (LIKELIHOOD(((v0.c1)<=(vt0.c1)), 0.7794376921565037)) UNION SELECT DISTINCT * FROM v0, vt0 WHERE ((NOT (LIKELIHOOD(((v0.c1)<=(vt0.c1)), 0.7794376921565037)))) UNION SELECT DISTINCT * FROM v0, vt0 WHERE (((LIKELIHOOD(((v0.c1)<=(vt0.c1)), 0.7794376921565037)) ISNULL));
SELECT DISTINCT * FROM v0, vt0;
SELECT ALL v0.c1, v0.c2, rt0.c2, vt0.c0, vt0.c1, v0.c0, rt0.c1, rt0.c3 FROM v0, rt0, vt0 GROUP BY v0.c1, v0.c2, rt0.c2, vt0.c0, vt0.c1, v0.c0, rt0.c1, rt0.c3;
SELECT ALL v0.c1, v0.c2, rt0.c2, vt0.c0, vt0.c1, v0.c0, rt0.c1, rt0.c3 FROM v0, rt0, vt0 WHERE (((((((((((((((rt0.c1)AND(rt0.c4)))AND(NULL)))AND(rt0.c2)))OR(v0.c1)))AND(rt0.c1)))AND(-1635361674))) BETWEEN (((rt0.c4)OR(rt0.c1))) AND (TYPEOF(rt0.c3)))) GROUP BY v0.c1, v0.c2, rt0.c2, vt0.c0, vt0.c1, v0.c0, rt0.c1, rt0.c3 UNION SELECT v0.c1, v0.c2, rt0.c2, vt0.c0, vt0.c1, v0.c0, rt0.c1, rt0.c3 FROM v0, rt0 NOT INDEXED, vt0 WHERE ((NOT (((((((((((((((rt0.c1)AND(rt0.c4)))AND(NULL)))AND(rt0.c2)))OR(v0.c1)))AND(rt0.c1)))AND(-1635361674))) BETWEEN (((rt0.c4)OR(rt0.c1))) AND (TYPEOF(rt0.c3)))))) GROUP BY v0.c1, v0.c2, rt0.c2, vt0.c0, vt0.c1, v0.c0, rt0.c1, rt0.c3 UNION SELECT v0.c1, v0.c2, rt0.c2, vt0.c0, vt0.c1, v0.c0, rt0.c1, rt0.c3 FROM v0, rt0, vt0 WHERE (((((((((((((((((rt0.c1)AND(rt0.c4)))AND(NULL)))AND(rt0.c2)))OR(v0.c1)))AND(rt0.c1)))AND(-1635361674))) BETWEEN (((rt0.c4)OR(rt0.c1))) AND (TYPEOF(rt0.c3)))) ISNULL)) GROUP BY v0.c1, v0.c2, rt0.c2, vt0.c0, vt0.c1, v0.c0, rt0.c1, rt0.c3;
SELECT ALL v0.c1, v0.c2, rt0.c2, vt0.c0, vt0.c1, v0.c0, rt0.c1, rt0.c3 FROM v0, rt0, vt0 GROUP BY v0.c1, v0.c2, rt0.c2, vt0.c0, vt0.c1, v0.c0, rt0.c1, rt0.c3;
SELECT ALL t0.c2, rt0.c2, v0.c2, rt0.c4, rt0.c0 FROM t0, vt0, rt0, v0 GROUP BY t0.c2, rt0.c2, v0.c2, rt0.c4, rt0.c0;
SELECT ALL t0.c2, rt0.c2, v0.c2, rt0.c4, rt0.c0 FROM t0, vt0, rt0, v0 GROUP BY t0.c2, rt0.c2, v0.c2, rt0.c4, rt0.c0 HAVING ((rt0.c0) NOT BETWEEN (MIN(rt0.c3)) AND (((((0.20702579487646133)AND(COUNT(*))))AND(MIN(COUNT(*)))))) UNION ALL SELECT t0.c2, rt0.c2, v0.c2, rt0.c4, rt0.c0 FROM t0, vt0, rt0, v0 GROUP BY t0.c2, rt0.c2, v0.c2, rt0.c4, rt0.c0 HAVING (NOT (((rt0.c0) NOT BETWEEN (MIN(rt0.c3)) AND (((((0.20702579487646133)AND(COUNT(*))))AND(MIN(COUNT(*)))))))) UNION ALL SELECT t0.c2, rt0.c2, v0.c2, rt0.c4, rt0.c0 FROM t0, vt0, rt0, v0 GROUP BY t0.c2, rt0.c2, v0.c2, rt0.c4, rt0.c0 HAVING ((((rt0.c0) NOT BETWEEN (MIN(rt0.c3)) AND (((((0.20702579487646133)AND(COUNT(*))))AND(MIN(COUNT(*))))))) ISNULL);
SELECT * FROM t0, v0, vt0;
SELECT * FROM t0, v0, vt0 WHERE (IFNULL(CASE WHEN NULL THEN vt0.c1 WHEN vt0.c1 THEN v0.c1 WHEN NULL THEN v0.c2 ELSE v0.c0 END, json_object(NULL, v0.c0, v0.c2, v0.c0))) UNION ALL SELECT * FROM t0, v0, vt0 WHERE ((NOT (IFNULL(CASE WHEN NULL THEN vt0.c1 WHEN vt0.c1 THEN v0.c1 WHEN NULL THEN v0.c2 ELSE v0.c0 END, json_object(NULL, v0.c0, v0.c2, v0.c0))))) UNION ALL SELECT ALL * FROM t0, v0, vt0 WHERE (((IFNULL(CASE WHEN NULL THEN vt0.c1 WHEN vt0.c1 THEN v0.c1 WHEN NULL THEN v0.c2 ELSE v0.c0 END, json_object(NULL, v0.c0, v0.c2, v0.c0))) ISNULL));
SELECT DISTINCT t0.c0, vt0.c0, v0.c0, vt0.c1 FROM v0, vt0, t0;
SELECT DISTINCT t0.c0, vt0.c0, v0.c0, vt0.c1 FROM v0, vt0, t0 WHERE (vt0.c1) UNION SELECT DISTINCT t0.c0, vt0.c0, v0.c0, vt0.c1 FROM v0, vt0, t0 WHERE ((NOT (vt0.c1))) UNION SELECT DISTINCT t0.c0, vt0.c0, v0.c0, vt0.c1 FROM v0, vt0, t0 WHERE (((vt0.c1) ISNULL));
SELECT DISTINCT t0.c0, vt0.c0, v0.c0, vt0.c1 FROM v0, vt0, t0;
SELECT v0.c0, t0.c2, rt0.c2, rt0.c4, rt0.c0, t0.c0, v0.c2, rt0.c1, rt0.c3 FROM t0, v0, rt0 GROUP BY v0.c0, t0.c2, rt0.c2, rt0.c4, rt0.c0, t0.c0, v0.c2, rt0.c1, rt0.c3;
SELECT v0.c0, t0.c2, rt0.c2, rt0.c4, rt0.c0, t0.c0, v0.c2, rt0.c1, rt0.c3 FROM t0, v0, rt0 WHERE (((LOWER(DISTINCT t0.c2))IS NOT(((rt0.c3) NOT NULL)))) GROUP BY v0.c0, t0.c2, rt0.c2, rt0.c4, rt0.c0, t0.c0, v0.c2, rt0.c1, rt0.c3 UNION SELECT v0.c0, t0.c2, rt0.c2, rt0.c4, rt0.c0, t0.c0, v0.c2, rt0.c1, rt0.c3 FROM t0, v0, rt0 WHERE ((NOT (((LOWER(DISTINCT t0.c2))IS NOT(((rt0.c3) NOT NULL)))))) GROUP BY v0.c0, t0.c2, rt0.c2, rt0.c4, rt0.c0, t0.c0, v0.c2, rt0.c1, rt0.c3 UNION SELECT v0.c0, t0.c2, rt0.c2, rt0.c4, rt0.c0, t0.c0, v0.c2, rt0.c1, rt0.c3 FROM t0, v0, rt0 WHERE (((((LOWER(DISTINCT t0.c2))IS NOT(((rt0.c3) NOT NULL)))) ISNULL)) GROUP BY v0.c0, t0.c2, rt0.c2, rt0.c4, rt0.c0, t0.c0, v0.c2, rt0.c1, rt0.c3;
SELECT v0.c0, t0.c2, rt0.c2, rt0.c4, rt0.c0, t0.c0, v0.c2, rt0.c1, rt0.c3 FROM t0, v0, rt0 GROUP BY v0.c0, t0.c2, rt0.c2, rt0.c4, rt0.c0, t0.c0, v0.c2, rt0.c1, rt0.c3;
SELECT rt0.c2, rt0.c1 FROM t0, rt0 GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM t0, rt0 GROUP BY rt0.c2, rt0.c1 HAVING rt0.c2 UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM t0, rt0 GROUP BY rt0.c2, rt0.c1 HAVING (NOT (rt0.c2)) UNION ALL SELECT rt0.c2, rt0.c1 FROM t0, rt0 GROUP BY rt0.c2, rt0.c1 HAVING ((rt0.c2) ISNULL);
SELECT rt0.c2, rt0.c1 FROM t0, rt0 GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM t0, rt0 GROUP BY rt0.c2, rt0.c1 HAVING rt0.c2 UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM t0, rt0 GROUP BY rt0.c2, rt0.c1 HAVING (NOT (rt0.c2)) UNION ALL SELECT rt0.c2, rt0.c1 FROM t0, rt0 GROUP BY rt0.c2, rt0.c1 HAVING ((rt0.c2) ISNULL);
SELECT rt0.c2, rt0.c1 FROM t0, rt0 GROUP BY rt0.c2, rt0.c1;
SELECT * FROM v0 CROSS JOIN vt0 ON '-1801610277';
SELECT * FROM v0 CROSS JOIN vt0 ON '-1801610277' WHERE (((((((((v0.c2)OR(v0.c2)))OR(v0.c0)))OR(0.6383012269942009)))AND(vt0.c0)) COLLATE BINARY) UNION ALL SELECT ALL * FROM v0 CROSS JOIN vt0 ON '-1801610277' WHERE ((NOT (((((((((v0.c2)OR(v0.c2)))OR(v0.c0)))OR(0.6383012269942009)))AND(vt0.c0)) COLLATE BINARY))) UNION ALL SELECT * FROM v0 CROSS JOIN vt0 ON '-1801610277' WHERE (((((((((((v0.c2)OR(v0.c2)))OR(v0.c0)))OR(0.6383012269942009)))AND(vt0.c0)) COLLATE BINARY) ISNULL));
SELECT * FROM v0 CROSS JOIN vt0 ON '-1801610277';
SELECT DISTINCT rt0.c0, v0.c2, t0.c0, rt0.c1 FROM v0 LEFT OUTER JOIN t0 ON (('643922919')==(rt0.c0)) COLLATE BINARY LEFT OUTER JOIN rt0 ON ((0.81620317864163 IN (t0.c0, rt0.c1)) IN ());
SELECT t0.c2, t0.c0 FROM t0 GROUP BY t0.c2, t0.c0;
SELECT t0.c2, t0.c0 FROM t0 WHERE ((((t0.c2) NOT BETWEEN (t0.c2) AND (t0.c2)) IN ())) GROUP BY t0.c2, t0.c0 UNION SELECT t0.c2, t0.c0 FROM t0 WHERE ((NOT ((((t0.c2) NOT BETWEEN (t0.c2) AND (t0.c2)) IN ())))) GROUP BY t0.c2, t0.c0 UNION SELECT t0.c2, t0.c0 FROM t0 WHERE ((((((t0.c2) NOT BETWEEN (t0.c2) AND (t0.c2)) IN ())) ISNULL)) GROUP BY t0.c2, t0.c0;
SELECT t0.c2, t0.c0 FROM t0 GROUP BY t0.c2, t0.c0;
SELECT ALL rt0.c2, v0.c1, vt0.c0, t0.c0, rt0.c0, v0.c2, rt0.c4, rt0.c3, v0.c0, rt0.c1 FROM v0, t0, vt0, rt0 GROUP BY rt0.c2, v0.c1, vt0.c0, t0.c0, rt0.c0, v0.c2, rt0.c4, rt0.c3, v0.c0, rt0.c1;
SELECT rt0.c2, v0.c1, vt0.c0, t0.c0, rt0.c0, v0.c2, rt0.c4, rt0.c3, v0.c0, rt0.c1 FROM v0, t0, vt0, rt0 GROUP BY rt0.c2, v0.c1, vt0.c0, t0.c0, rt0.c0, v0.c2, rt0.c4, rt0.c3, v0.c0, rt0.c1 HAVING AVG((rt0.c3 IN ())) UNION ALL SELECT rt0.c2, v0.c1, vt0.c0, t0.c0, rt0.c0, v0.c2, rt0.c4, rt0.c3, v0.c0, rt0.c1 FROM v0, t0, vt0, rt0 GROUP BY rt0.c2, v0.c1, vt0.c0, t0.c0, rt0.c0, v0.c2, rt0.c4, rt0.c3, v0.c0, rt0.c1 HAVING (NOT (AVG((rt0.c3 IN ())))) UNION ALL SELECT rt0.c2, v0.c1, vt0.c0, t0.c0, rt0.c0, v0.c2, rt0.c4, rt0.c3, v0.c0, rt0.c1 FROM v0, t0, vt0, rt0 GROUP BY rt0.c2, v0.c1, vt0.c0, t0.c0, rt0.c0, v0.c2, rt0.c4, rt0.c3, v0.c0, rt0.c1 HAVING ((AVG((rt0.c3 IN ()))) ISNULL);
SELECT ALL rt0.c2, v0.c1, vt0.c0, t0.c0, rt0.c0, v0.c2, rt0.c4, rt0.c3, v0.c0, rt0.c1 FROM v0, t0, vt0, rt0 GROUP BY rt0.c2, v0.c1, vt0.c0, t0.c0, rt0.c0, v0.c2, rt0.c4, rt0.c3, v0.c0, rt0.c1;
SELECT rt0.c2, v0.c1, vt0.c0, t0.c0, rt0.c0, v0.c2, rt0.c4, rt0.c3, v0.c0, rt0.c1 FROM v0, t0, vt0, rt0 GROUP BY rt0.c2, v0.c1, vt0.c0, t0.c0, rt0.c0, v0.c2, rt0.c4, rt0.c3, v0.c0, rt0.c1 HAVING AVG((rt0.c3 IN ())) UNION ALL SELECT rt0.c2, v0.c1, vt0.c0, t0.c0, rt0.c0, v0.c2, rt0.c4, rt0.c3, v0.c0, rt0.c1 FROM v0, t0, vt0, rt0 GROUP BY rt0.c2, v0.c1, vt0.c0, t0.c0, rt0.c0, v0.c2, rt0.c4, rt0.c3, v0.c0, rt0.c1 HAVING (NOT (AVG((rt0.c3 IN ())))) UNION ALL SELECT rt0.c2, v0.c1, vt0.c0, t0.c0, rt0.c0, v0.c2, rt0.c4, rt0.c3, v0.c0, rt0.c1 FROM v0, t0, vt0, rt0 GROUP BY rt0.c2, v0.c1, vt0.c0, t0.c0, rt0.c0, v0.c2, rt0.c4, rt0.c3, v0.c0, rt0.c1 HAVING ((AVG((rt0.c3 IN ()))) ISNULL);
SELECT ALL rt0.c2, v0.c1, vt0.c0, t0.c0, rt0.c0, v0.c2, rt0.c4, rt0.c3, v0.c0, rt0.c1 FROM v0, t0, vt0, rt0 GROUP BY rt0.c2, v0.c1, vt0.c0, t0.c0, rt0.c0, v0.c2, rt0.c4, rt0.c3, v0.c0, rt0.c1;
SELECT ALL * FROM v0;
SELECT * FROM v0 NOT INDEXED WHERE (((((v0.c1)<<(v0.c1)))>((- (x''))))) UNION ALL SELECT ALL * FROM v0 WHERE ((NOT (((((v0.c1)<<(v0.c1)))>((- (x''))))))) UNION ALL SELECT ALL * FROM v0 WHERE (((((((v0.c1)<<(v0.c1)))>((- (x''))))) ISNULL));
SELECT ALL * FROM v0;
SELECT DISTINCT rt0.c4 FROM rt0;
SELECT DISTINCT rt0.c4 FROM rt0 WHERE ((rt0.c4 IN (rt0.c1, rt0.c3)) COLLATE RTRIM) UNION SELECT DISTINCT rt0.c4 FROM rt0 WHERE ((NOT ((rt0.c4 IN (rt0.c1, rt0.c3)) COLLATE RTRIM))) UNION SELECT DISTINCT rt0.c4 FROM rt0 WHERE ((((rt0.c4 IN (rt0.c1, rt0.c3)) COLLATE RTRIM) ISNULL));
SELECT DISTINCT rt0.c4 FROM rt0;
SELECT ALL v0.c0, vt0.c1 FROM v0, t0, vt0 GROUP BY v0.c0, vt0.c1;
SELECT v0.c0, vt0.c1 FROM v0 NOT INDEXED, t0, vt0 WHERE (((t0.c2)>>(CASE t0.c2  WHEN v0.c1 THEN v0.c1 WHEN t0.c2 THEN v0.c0 WHEN vt0.c0 THEN v0.c2 END))) GROUP BY v0.c0, vt0.c1 UNION SELECT ALL v0.c0, vt0.c1 FROM v0, t0, vt0 WHERE ((NOT (((t0.c2)>>(CASE t0.c2  WHEN v0.c1 THEN v0.c1 WHEN t0.c2 THEN v0.c0 WHEN vt0.c0 THEN v0.c2 END))))) GROUP BY v0.c0, vt0.c1 UNION SELECT ALL v0.c0, vt0.c1 FROM v0, t0, vt0 WHERE (((((t0.c2)>>(CASE t0.c2  WHEN v0.c1 THEN v0.c1 WHEN t0.c2 THEN v0.c0 WHEN vt0.c0 THEN v0.c2 END))) ISNULL)) GROUP BY v0.c0, vt0.c1;
SELECT ALL v0.c0, vt0.c1 FROM v0, t0, vt0 GROUP BY v0.c0, vt0.c1;
SELECT ALL t0.c2, rt0.c3, rt0.c4 FROM rt0 NATURAL JOIN t0 GROUP BY t0.c2, rt0.c3, rt0.c4;
SELECT ALL t0.c2, rt0.c3, rt0.c4 FROM rt0 NATURAL JOIN t0 GROUP BY t0.c2, rt0.c3, rt0.c4 HAVING ((((MIN(rt0.c3))OR((- (rt0.c0)))))OR(COUNT(*))) UNION ALL SELECT t0.c2, rt0.c3, rt0.c4 FROM rt0 NATURAL JOIN t0 GROUP BY t0.c2, rt0.c3, rt0.c4 HAVING (NOT (((((MIN(rt0.c3))OR((- (rt0.c0)))))OR(COUNT(*))))) UNION ALL SELECT ALL t0.c2, rt0.c3, rt0.c4 FROM rt0 NATURAL JOIN t0 GROUP BY t0.c2, rt0.c3, rt0.c4 HAVING ((((((MIN(rt0.c3))OR((- (rt0.c0)))))OR(COUNT(*)))) ISNULL);
SELECT ALL t0.c2, rt0.c3, rt0.c4 FROM rt0 NATURAL JOIN t0 GROUP BY t0.c2, rt0.c3, rt0.c4;
SELECT ALL t0.c2, rt0.c3, rt0.c4 FROM rt0 NATURAL JOIN t0 GROUP BY t0.c2, rt0.c3, rt0.c4 HAVING ((((MIN(rt0.c3))OR((- (rt0.c0)))))OR(COUNT(*))) UNION ALL SELECT t0.c2, rt0.c3, rt0.c4 FROM rt0 NATURAL JOIN t0 GROUP BY t0.c2, rt0.c3, rt0.c4 HAVING (NOT (((((MIN(rt0.c3))OR((- (rt0.c0)))))OR(COUNT(*))))) UNION ALL SELECT ALL t0.c2, rt0.c3, rt0.c4 FROM rt0 NATURAL JOIN t0 GROUP BY t0.c2, rt0.c3, rt0.c4 HAVING ((((((MIN(rt0.c3))OR((- (rt0.c0)))))OR(COUNT(*)))) ISNULL);
SELECT ALL t0.c2, rt0.c3, rt0.c4 FROM rt0 NATURAL JOIN t0 GROUP BY t0.c2, rt0.c3, rt0.c4;
SELECT v0.c2, v0.c0 FROM v0;
SELECT v0.c2, v0.c0 FROM v0 WHERE (((((v0.c1) BETWEEN (v0.c2) AND (v0.c2)))<>((((v0.c1))=((v0.c2)))))) UNION ALL SELECT v0.c2, v0.c0 FROM v0 WHERE ((NOT (((((v0.c1) BETWEEN (v0.c2) AND (v0.c2)))<>((((v0.c1))=((v0.c2)))))))) UNION ALL SELECT v0.c2, v0.c0 FROM v0 WHERE (((((((v0.c1) BETWEEN (v0.c2) AND (v0.c2)))!=((((v0.c1))==((v0.c2)))))) ISNULL));
SELECT v0.c2, v0.c0 FROM v0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (vt0.c0) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (vt0.c0))) UNION SELECT DISTINCT * FROM vt0 WHERE (((vt0.c0) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT rt0.c3, rt0.c4, rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c3, rt0.c4, rt0.c1, rt0.c2, rt0.c0;
SELECT ALL rt0.c3, rt0.c4, rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE (((+ (rt0.c0)) IN ((rt0.c1 IN ())))) GROUP BY rt0.c3, rt0.c4, rt0.c1, rt0.c2, rt0.c0 UNION SELECT rt0.c3, rt0.c4, rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (((+ (rt0.c0)) IN ((rt0.c1 IN ())))))) GROUP BY rt0.c3, rt0.c4, rt0.c1, rt0.c2, rt0.c0 UNION SELECT rt0.c3, rt0.c4, rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE (((((+ (rt0.c0)) IN ((rt0.c1 IN ())))) ISNULL)) GROUP BY rt0.c3, rt0.c4, rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c3, rt0.c4, rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c3, rt0.c4, rt0.c1, rt0.c2, rt0.c0;
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING AVG(COUNT(*)) UNION ALL SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING (NOT (AVG(COUNT(*)))) UNION ALL SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING ((AVG(COUNT(*))) ISNULL);
SELECT TOTAL(CASE ((rt0.c2) NOT BETWEEN (NULL) AND (vt0.c1))  WHEN UNICODE(x'') THEN vt0.c0 WHEN vt0.c0 THEN ((0.5864096688804551) BETWEEN (-1.801610277E9) AND (vt0.c0)) WHEN ((vt0.c1)>>(rt0.c1)) THEN (((rt0.c3)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c3))) ELSE CAST(vt0.c0 AS BLOB) END) FROM vt0, rt0 ORDER BY ((((rt0.c4) NOT BETWEEN (rt0.c3) AND (vt0.c1)))>>((((-1027487128, rt0.c2, rt0.c0)) NOT BETWEEN ((0.5664795788370024, rt0.c3, rt0.c4)) AND ((rt0.c3, rt0.c2, 0Xffffffffe8f9068b)))))  NULLS FIRST, 6.87833004E8 DESC, rt0.c4  NULLS FIRST, '-1e500'  NULLS LAST;
SELECT ALL v0.c0, v0.c1 FROM v0;
SELECT v0.c0, v0.c1 FROM v0 WHERE (x'907d') UNION ALL SELECT ALL v0.c0, v0.c1 FROM v0 WHERE ((NOT (x'907d'))) UNION ALL SELECT ALL v0.c0, v0.c1 FROM v0 WHERE (((x'907d') ISNULL));
SELECT ALL v0.c0, v0.c1 FROM v0;
SELECT DISTINCT * FROM rt0, vt0, v0, t0;
SELECT DISTINCT * FROM rt0, vt0, v0, t0 WHERE (((((((t0.c2)AND(t0.c0)))OR(rt0.c1)))>=(rt0.c0))) UNION SELECT DISTINCT * FROM rt0, vt0, v0, t0 WHERE ((NOT (((((((t0.c2)AND(t0.c0)))OR(rt0.c1)))>=(rt0.c0))))) UNION SELECT DISTINCT * FROM rt0, vt0, v0, t0 WHERE (((((((((t0.c2)AND(t0.c0)))OR(rt0.c1)))>=(rt0.c0))) ISNULL));
SELECT DISTINCT * FROM rt0, vt0, v0, t0;
SELECT ALL v0.c1, t0.c2, t0.c0 FROM vt0, v0, t0 GROUP BY v0.c1, t0.c2, t0.c0;
SELECT v0.c1, t0.c2, t0.c0 FROM vt0, v0, t0 WHERE (CAST(v0.c2 COLLATE BINARY AS REAL)) GROUP BY v0.c1, t0.c2, t0.c0 UNION SELECT ALL v0.c1, t0.c2, t0.c0 FROM vt0, v0, t0 WHERE ((NOT (CAST(v0.c2 COLLATE BINARY AS REAL)))) GROUP BY v0.c1, t0.c2, t0.c0 UNION SELECT v0.c1, t0.c2, t0.c0 FROM vt0, v0, t0 WHERE (((CAST(v0.c2 COLLATE BINARY AS REAL)) ISNULL)) GROUP BY v0.c1, t0.c2, t0.c0;
SELECT ALL v0.c1, t0.c2, t0.c0 FROM vt0, v0, t0 GROUP BY v0.c1, t0.c2, t0.c0;
SELECT v0.c1, vt0.c0, t0.c0, t0.c2, rt0.c2, rt0.c3, rt0.c0, rt0.c4 FROM v0, vt0, rt0, t0 GROUP BY v0.c1, vt0.c0, t0.c0, t0.c2, rt0.c2, rt0.c3, rt0.c0, rt0.c4;
SELECT v0.c1, vt0.c0, t0.c0, t0.c2, rt0.c2, rt0.c3, rt0.c0, rt0.c4 FROM v0, vt0, rt0, t0 GROUP BY v0.c1, vt0.c0, t0.c0, t0.c2, rt0.c2, rt0.c3, rt0.c0, rt0.c4 HAVING AVG(x'') UNION ALL SELECT v0.c1, vt0.c0, t0.c0, t0.c2, rt0.c2, rt0.c3, rt0.c0, rt0.c4 FROM v0, vt0, rt0, t0 GROUP BY v0.c1, vt0.c0, t0.c0, t0.c2, rt0.c2, rt0.c3, rt0.c0, rt0.c4 HAVING (NOT (AVG(x''))) UNION ALL SELECT v0.c1, vt0.c0, t0.c0, t0.c2, rt0.c2, rt0.c3, rt0.c0, rt0.c4 FROM v0, vt0, rt0, t0 GROUP BY v0.c1, vt0.c0, t0.c0, t0.c2, rt0.c2, rt0.c3, rt0.c0, rt0.c4 HAVING ((AVG(x'')) ISNULL);
SELECT v0.c1, vt0.c0, t0.c0, t0.c2, rt0.c2, rt0.c3, rt0.c0, rt0.c4 FROM v0, vt0, rt0, t0 GROUP BY v0.c1, vt0.c0, t0.c0, t0.c2, rt0.c2, rt0.c3, rt0.c0, rt0.c4;
SELECT v0.c1, vt0.c0, t0.c0, t0.c2, rt0.c2, rt0.c3, rt0.c0, rt0.c4 FROM v0, vt0, rt0, t0 GROUP BY v0.c1, vt0.c0, t0.c0, t0.c2, rt0.c2, rt0.c3, rt0.c0, rt0.c4 HAVING AVG(x'') UNION ALL SELECT v0.c1, vt0.c0, t0.c0, t0.c2, rt0.c2, rt0.c3, rt0.c0, rt0.c4 FROM v0, vt0, rt0, t0 GROUP BY v0.c1, vt0.c0, t0.c0, t0.c2, rt0.c2, rt0.c3, rt0.c0, rt0.c4 HAVING (NOT (AVG(x''))) UNION ALL SELECT v0.c1, vt0.c0, t0.c0, t0.c2, rt0.c2, rt0.c3, rt0.c0, rt0.c4 FROM v0, vt0, rt0, t0 GROUP BY v0.c1, vt0.c0, t0.c0, t0.c2, rt0.c2, rt0.c3, rt0.c0, rt0.c4 HAVING ((AVG(x'')) ISNULL);
SELECT v0.c1, vt0.c0, t0.c0, t0.c2, rt0.c2, rt0.c3, rt0.c0, rt0.c4 FROM v0, vt0, rt0, t0 GROUP BY v0.c1, vt0.c0, t0.c0, t0.c2, rt0.c2, rt0.c3, rt0.c0, rt0.c4;
SELECT * FROM vt0, t0, rt0, v0;
SELECT ALL * FROM vt0, t0, rt0, v0 WHERE (0.16069999886688213) UNION ALL SELECT * FROM vt0, t0, rt0, v0 WHERE ((NOT (0.16069999886688213))) UNION ALL SELECT * FROM vt0, t0, rt0, v0 WHERE (((0.16069999886688213) ISNULL));
SELECT * FROM vt0, t0, rt0, v0;
SELECT DISTINCT rt0.c2, rt0.c0, rt0.c4 FROM rt0 INNER JOIN vt0 ON (('\''')LIKE(LOWER(rt0.c3)));
SELECT DISTINCT rt0.c2, rt0.c0, rt0.c4 FROM rt0 INNER JOIN vt0 ON (('\''')LIKE(LOWER(rt0.c3))) WHERE ((((+ (rt0.c0)))<=(CASE WHEN rt0.c1 THEN rt0.c0 WHEN vt0.c1 THEN rt0.c4 WHEN rt0.c1 THEN rt0.c0 END))) UNION SELECT DISTINCT rt0.c2, rt0.c0, rt0.c4 FROM rt0 INNER JOIN vt0 ON (('\''')LIKE(LOWER(rt0.c3))) WHERE ((NOT ((((+ (rt0.c0)))<=(CASE WHEN rt0.c1 THEN rt0.c0 WHEN vt0.c1 THEN rt0.c4 WHEN rt0.c1 THEN rt0.c0 END))))) UNION SELECT DISTINCT rt0.c2, rt0.c0, rt0.c4 FROM rt0 INNER JOIN vt0 ON (('\''')LIKE(LOWER(rt0.c3))) WHERE ((((((+ (rt0.c0)))<=(CASE WHEN rt0.c1 THEN rt0.c0 WHEN vt0.c1 THEN rt0.c4 WHEN rt0.c1 THEN rt0.c0 END))) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c0, rt0.c4 FROM rt0 INNER JOIN vt0 ON (('\''')LIKE(LOWER(rt0.c3)));
SELECT t0.c2, t0.c0 FROM t0 GROUP BY t0.c2, t0.c0;
SELECT t0.c2, t0.c0 FROM t0 WHERE (((x'') IS FALSE)) GROUP BY t0.c2, t0.c0 UNION SELECT ALL t0.c2, t0.c0 FROM t0 WHERE ((NOT (((x'') IS FALSE)))) GROUP BY t0.c2, t0.c0 UNION SELECT t0.c2, t0.c0 FROM t0 WHERE (((((x'') IS FALSE)) ISNULL)) GROUP BY t0.c2, t0.c0;
SELECT t0.c2, t0.c0 FROM t0 GROUP BY t0.c2, t0.c0;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING ((NULLIF(DISTINCT TOTAL(COUNT(GROUP_CONCAT(vt0.c1))), vt0.c0))GLOB(((((((((vt0.c0)AND(COUNT(*))))OR(vt0.c1)))OR(vt0.c0)))OR(AVG(MAX(vt0.c0)))))) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING (NOT (((NULLIF(DISTINCT TOTAL(COUNT(GROUP_CONCAT(vt0.c1))), vt0.c0))GLOB(((((((((vt0.c0)AND(COUNT(*))))OR(vt0.c1)))OR(vt0.c0)))OR(AVG(MAX(vt0.c0)))))))) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING ((((NULLIF(DISTINCT TOTAL(COUNT(GROUP_CONCAT(vt0.c1))), vt0.c0))GLOB(((((((((vt0.c0)AND(COUNT(*))))OR(vt0.c1)))OR(vt0.c0)))OR(AVG(MAX(vt0.c0))))))) ISNULL);
SELECT t0.c0, rt0.c2, rt0.c1, vt0.c0, t0.c2, rt0.c0 FROM t0, vt0 FULL OUTER JOIN rt0 ON (((CASE WHEN t0.c2 THEN vt0.c0 ELSE t0.c0 END))<>((CASE rt0.c2  WHEN t0.c2 THEN t0.c2 END)));
SELECT ALL t0.c0, rt0.c2, rt0.c1, vt0.c0, t0.c2, rt0.c0 FROM t0, vt0 NOT INDEXED FULL OUTER JOIN rt0 ON (((CASE WHEN t0.c2 THEN vt0.c0 ELSE t0.c0 END))!=((CASE rt0.c2  WHEN t0.c2 THEN t0.c2 END))) WHERE (CAST(json_patch(rt0.c0, t0.c2) AS REAL)) UNION ALL SELECT ALL t0.c0, rt0.c2, rt0.c1, vt0.c0, t0.c2, rt0.c0 FROM t0, vt0 FULL OUTER JOIN rt0 ON (((CASE WHEN t0.c2 THEN vt0.c0 ELSE t0.c0 END))!=((CASE rt0.c2  WHEN t0.c2 THEN t0.c2 END))) WHERE ((NOT (CAST(json_patch(rt0.c0, t0.c2) AS REAL)))) UNION ALL SELECT ALL t0.c0, rt0.c2, rt0.c1, vt0.c0, t0.c2, rt0.c0 FROM t0, vt0 FULL OUTER JOIN rt0 ON (((CASE WHEN t0.c2 THEN vt0.c0 ELSE t0.c0 END))!=((CASE rt0.c2  WHEN t0.c2 THEN t0.c2 END))) WHERE (((CAST(json_patch(rt0.c0, t0.c2) AS REAL)) ISNULL));
SELECT t0.c0, rt0.c2, rt0.c1, vt0.c0, t0.c2, rt0.c0 FROM t0, vt0 FULL OUTER JOIN rt0 ON (((CASE WHEN t0.c2 THEN vt0.c0 ELSE t0.c0 END))<>((CASE rt0.c2  WHEN t0.c2 THEN t0.c2 END)));
SELECT DISTINCT * FROM t0 FULL OUTER JOIN vt0 ON x'' FULL OUTER JOIN rt0 ON ((rt0.c1)IS(v0.c1)) COLLATE BINARY LEFT OUTER JOIN v0 ON (NULL IN (((((((((rt0.c1)OR(rt0.c2)))AND(v0.c2)))AND(vt0.c1)))AND(v0.c0))));
SELECT v0.c1, v0.c2 FROM v0 GROUP BY v0.c1, v0.c2;
SELECT v0.c1, v0.c2 FROM v0 WHERE ((((((v0.c0)OR(v0.c1)))AND(v0.c2)) IN ())) GROUP BY v0.c1, v0.c2 UNION SELECT ALL v0.c1, v0.c2 FROM v0 WHERE ((NOT ((((((v0.c0)OR(v0.c1)))AND(v0.c2)) IN ())))) GROUP BY v0.c1, v0.c2 UNION SELECT ALL v0.c1, v0.c2 FROM v0 WHERE ((((((((v0.c0)OR(v0.c1)))AND(v0.c2)) IN ())) ISNULL)) GROUP BY v0.c1, v0.c2;
SELECT v0.c1, v0.c2 FROM v0 GROUP BY v0.c1, v0.c2;
SELECT ALL rt0.c4 FROM rt0, t0 GROUP BY rt0.c4;
SELECT ALL rt0.c4 FROM rt0, t0 GROUP BY rt0.c4 HAVING (((((((((+ (MIN(MIN(COUNT(AVG(rt0.c4)))))))OR(((((((((MIN(MIN(MIN(SUM(rt0.c0)))))OR(rt0.c0)))AND(TOTAL(rt0.c0))))OR(COUNT(*))))OR(MIN(MIN(COUNT(t0.c0))))))))OR(COUNT(rt0.c2))))OR((((rt0.c4))>=((rt0.c0))))))OR(GROUP_CONCAT(TOTAL(t0.c0)))) UNION ALL SELECT ALL rt0.c4 FROM rt0, t0 GROUP BY rt0.c4 HAVING (NOT ((((((((((+ (MIN(MIN(COUNT(AVG(rt0.c4)))))))OR(((((((((MIN(MIN(MIN(SUM(rt0.c0)))))OR(rt0.c0)))AND(TOTAL(rt0.c0))))OR(COUNT(*))))OR(MIN(MIN(COUNT(t0.c0))))))))OR(COUNT(rt0.c2))))OR((((rt0.c4))>=((rt0.c0))))))OR(GROUP_CONCAT(TOTAL(t0.c0)))))) UNION ALL SELECT rt0.c4 FROM rt0, t0 GROUP BY rt0.c4 HAVING (((((((((((+ (MIN(MIN(COUNT(AVG(rt0.c4)))))))OR(((((((((MIN(MIN(MIN(SUM(rt0.c0)))))OR(rt0.c0)))AND(TOTAL(rt0.c0))))OR(COUNT(*))))OR(MIN(MIN(COUNT(t0.c0))))))))OR(COUNT(rt0.c2))))OR((((rt0.c4))>=((rt0.c0))))))OR(GROUP_CONCAT(TOTAL(t0.c0))))) ISNULL);
SELECT ALL vt0.c1, v0.c2, v0.c1, t0.c0 FROM vt0 LEFT OUTER JOIN v0 ON v0.c1 CROSS JOIN t0 ON vt0.c1;
SELECT ALL vt0.c1, v0.c2, v0.c1, t0.c0 FROM vt0 LEFT OUTER JOIN v0 ON v0.c1 CROSS JOIN t0 ON vt0.c1 WHERE (CAST(((t0.c2)||(v0.c2)) AS NUMERIC)) UNION ALL SELECT vt0.c1, v0.c2, v0.c1, t0.c0 FROM vt0 LEFT OUTER JOIN v0 ON v0.c1 CROSS JOIN t0 ON vt0.c1 WHERE ((NOT (CAST(((t0.c2)||(v0.c2)) AS NUMERIC)))) UNION ALL SELECT ALL vt0.c1, v0.c2, v0.c1, t0.c0 FROM vt0 LEFT OUTER JOIN v0 ON v0.c1 CROSS JOIN t0 ON vt0.c1 WHERE (((CAST(((t0.c2)||(v0.c2)) AS NUMERIC)) ISNULL));
SELECT ALL vt0.c1, v0.c2, v0.c1, t0.c0 FROM vt0 LEFT OUTER JOIN v0 ON v0.c1 CROSS JOIN t0 ON vt0.c1;
SELECT DISTINCT * FROM vt0 CROSS JOIN rt0 ON ((((rt0.c2) NOTNULL)) IS TRUE);
SELECT DISTINCT * FROM vt0 CROSS JOIN rt0 ON ((((rt0.c2) NOTNULL)) IS TRUE) WHERE (CAST(((vt0.c1) BETWEEN (rt0.c4) AND (vt0.c0)) AS TEXT)) UNION SELECT DISTINCT * FROM vt0 CROSS JOIN rt0 ON ((((rt0.c2) NOTNULL)) IS TRUE) WHERE ((NOT (CAST(((vt0.c1) BETWEEN (rt0.c4) AND (vt0.c0)) AS TEXT)))) UNION SELECT DISTINCT * FROM vt0 CROSS JOIN rt0 ON ((((rt0.c2) NOTNULL)) IS TRUE) WHERE (((CAST(((vt0.c1) BETWEEN (rt0.c4) AND (vt0.c0)) AS TEXT)) ISNULL));
SELECT DISTINCT * FROM vt0 CROSS JOIN rt0 ON ((((rt0.c2) NOTNULL)) IS TRUE);
SELECT ALL t0.c2 FROM t0 GROUP BY t0.c2;
SELECT ALL t0.c2 FROM t0 WHERE (LIKELY(DISTINCT CAST(t0.c2 AS INTEGER))) GROUP BY t0.c2 UNION SELECT t0.c2 FROM t0 WHERE ((NOT (LIKELY(DISTINCT CAST(t0.c2 AS INTEGER))))) GROUP BY t0.c2 UNION SELECT t0.c2 FROM t0 WHERE (((LIKELY(DISTINCT CAST(t0.c2 AS INTEGER))) ISNULL)) GROUP BY t0.c2;
SELECT ALL t0.c2 FROM t0 GROUP BY t0.c2;
SELECT rt0.c4, t0.c0, rt0.c0, rt0.c3, vt0.c0, t0.c2, rt0.c2, rt0.c1, vt0.c1 FROM vt0, rt0 LEFT OUTER JOIN t0 ON ((rt0.c0)>=(((((rt0.c0)AND(rt0.c2)))OR(rt0.c4)))) GROUP BY rt0.c4, t0.c0, rt0.c0, rt0.c3, vt0.c0, t0.c2, rt0.c2, rt0.c1, vt0.c1;
SELECT rt0.c4, t0.c0, rt0.c0, rt0.c3, vt0.c0, t0.c2, rt0.c2, rt0.c1, vt0.c1 FROM vt0, rt0 LEFT OUTER JOIN t0 ON ((rt0.c0)>=(((((rt0.c0)AND(rt0.c2)))OR(rt0.c4)))) GROUP BY rt0.c4, t0.c0, rt0.c0, rt0.c3, vt0.c0, t0.c2, rt0.c2, rt0.c1, vt0.c1 HAVING (((AVG(GROUP_CONCAT(rt0.c3)))IS(GROUP_CONCAT(COUNT(*)))) IN ()) UNION ALL SELECT ALL rt0.c4, t0.c0, rt0.c0, rt0.c3, vt0.c0, t0.c2, rt0.c2, rt0.c1, vt0.c1 FROM vt0, rt0 LEFT OUTER JOIN t0 ON ((rt0.c0)>=(((((rt0.c0)AND(rt0.c2)))OR(rt0.c4)))) GROUP BY rt0.c4, t0.c0, rt0.c0, rt0.c3, vt0.c0, t0.c2, rt0.c2, rt0.c1, vt0.c1 HAVING (NOT ((((AVG(GROUP_CONCAT(rt0.c3)))IS(GROUP_CONCAT(COUNT(*)))) IN ()))) UNION ALL SELECT ALL rt0.c4, t0.c0, rt0.c0, rt0.c3, vt0.c0, t0.c2, rt0.c2, rt0.c1, vt0.c1 FROM vt0, rt0 LEFT OUTER JOIN t0 ON ((rt0.c0)>=(((((rt0.c0)AND(rt0.c2)))OR(rt0.c4)))) GROUP BY rt0.c4, t0.c0, rt0.c0, rt0.c3, vt0.c0, t0.c2, rt0.c2, rt0.c1, vt0.c1 HAVING (((((AVG(GROUP_CONCAT(rt0.c3)))IS(GROUP_CONCAT(COUNT(*)))) IN ())) ISNULL);
SELECT rt0.c4, t0.c0, rt0.c0, rt0.c3, vt0.c0, t0.c2, rt0.c2, rt0.c1, vt0.c1 FROM vt0, rt0 LEFT OUTER JOIN t0 ON ((rt0.c0)>=(((((rt0.c0)AND(rt0.c2)))OR(rt0.c4)))) GROUP BY rt0.c4, t0.c0, rt0.c0, rt0.c3, vt0.c0, t0.c2, rt0.c2, rt0.c1, vt0.c1;
SELECT rt0.c4, t0.c0, rt0.c0, rt0.c3, vt0.c0, t0.c2, rt0.c2, rt0.c1, vt0.c1 FROM vt0, rt0 LEFT OUTER JOIN t0 ON ((rt0.c0)>=(((((rt0.c0)AND(rt0.c2)))OR(rt0.c4)))) GROUP BY rt0.c4, t0.c0, rt0.c0, rt0.c3, vt0.c0, t0.c2, rt0.c2, rt0.c1, vt0.c1 HAVING (((AVG(GROUP_CONCAT(rt0.c3)))IS(GROUP_CONCAT(COUNT(*)))) IN ()) UNION ALL SELECT ALL rt0.c4, t0.c0, rt0.c0, rt0.c3, vt0.c0, t0.c2, rt0.c2, rt0.c1, vt0.c1 FROM vt0, rt0 LEFT OUTER JOIN t0 ON ((rt0.c0)>=(((((rt0.c0)AND(rt0.c2)))OR(rt0.c4)))) GROUP BY rt0.c4, t0.c0, rt0.c0, rt0.c3, vt0.c0, t0.c2, rt0.c2, rt0.c1, vt0.c1 HAVING (NOT ((((AVG(GROUP_CONCAT(rt0.c3)))IS(GROUP_CONCAT(COUNT(*)))) IN ()))) UNION ALL SELECT ALL rt0.c4, t0.c0, rt0.c0, rt0.c3, vt0.c0, t0.c2, rt0.c2, rt0.c1, vt0.c1 FROM vt0, rt0 LEFT OUTER JOIN t0 ON ((rt0.c0)>=(((((rt0.c0)AND(rt0.c2)))OR(rt0.c4)))) GROUP BY rt0.c4, t0.c0, rt0.c0, rt0.c3, vt0.c0, t0.c2, rt0.c2, rt0.c1, vt0.c1 HAVING (((((AVG(GROUP_CONCAT(rt0.c3)))IS(GROUP_CONCAT(COUNT(*)))) IN ())) ISNULL);
SELECT rt0.c4, t0.c0, rt0.c0, rt0.c3, vt0.c0, t0.c2, rt0.c2, rt0.c1, vt0.c1 FROM vt0, rt0 LEFT OUTER JOIN t0 ON ((rt0.c0)>=(((((rt0.c0)AND(rt0.c2)))OR(rt0.c4)))) GROUP BY rt0.c4, t0.c0, rt0.c0, rt0.c3, vt0.c0, t0.c2, rt0.c2, rt0.c1, vt0.c1;
SELECT ALL rt0.c1, rt0.c4, rt0.c2, rt0.c0 FROM rt0;
SELECT rt0.c1, rt0.c4, rt0.c2, rt0.c0 FROM rt0 WHERE ((((((rt0.c2) IS TRUE)))<((NULL)))) UNION ALL SELECT ALL rt0.c1, rt0.c4, rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT ((((((rt0.c2) IS TRUE)))<((NULL)))))) UNION ALL SELECT ALL rt0.c1, rt0.c4, rt0.c2, rt0.c0 FROM rt0 WHERE ((((((((rt0.c2) IS TRUE)))<((NULL)))) ISNULL));
SELECT ALL rt0.c1, rt0.c4, rt0.c2, rt0.c0 FROM rt0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE ((CASE WHEN t0.c2 THEN t0.c0 ELSE t0.c2 END IN ())) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT ((CASE WHEN t0.c2 THEN t0.c0 ELSE t0.c2 END IN ())))) UNION SELECT DISTINCT * FROM t0 WHERE ((((CASE WHEN t0.c2 THEN t0.c0 ELSE t0.c2 END IN ())) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT ALL t0.c0, vt0.c1 FROM v0, t0, vt0 GROUP BY t0.c0, vt0.c1;
SELECT t0.c0, vt0.c1 FROM v0, t0, vt0 WHERE ('400356755') GROUP BY t0.c0, vt0.c1 UNION SELECT ALL t0.c0, vt0.c1 FROM v0, t0, vt0 WHERE ((NOT ('400356755'))) GROUP BY t0.c0, vt0.c1 UNION SELECT t0.c0, vt0.c1 FROM v0, t0, vt0 WHERE ((('400356755') ISNULL)) GROUP BY t0.c0, vt0.c1;
SELECT ALL t0.c0, vt0.c1 FROM v0, t0, vt0 GROUP BY t0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING MIN(COUNT(*)) UNION ALL SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING (NOT (MIN(COUNT(*)))) UNION ALL SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING ((MIN(COUNT(*))) ISNULL);
SELECT MIN(((((t0.c2)OR((t0.c2 IN ()))))AND(((vt0.c0)<(vt0.c0))))) FROM t0, vt0;
SELECT * FROM t0;
SELECT ALL * FROM t0 WHERE (((t0.c2)+(CAST(t0.c2 AS REAL)))) UNION ALL SELECT ALL * FROM t0 WHERE ((NOT (((t0.c2)+(CAST(t0.c2 AS REAL)))))) UNION ALL SELECT ALL * FROM t0 WHERE (((((t0.c2)+(CAST(t0.c2 AS REAL)))) ISNULL));
SELECT * FROM t0;
SELECT DISTINCT rt0.c3, rt0.c0 FROM vt0, v0, rt0;
SELECT DISTINCT rt0.c3, rt0.c0 FROM vt0, v0, rt0 WHERE (CASE WHEN rt0.c0 THEN v0.c2 END COLLATE BINARY) UNION SELECT DISTINCT rt0.c3, rt0.c0 FROM vt0, v0, rt0 WHERE ((NOT (CASE WHEN rt0.c0 THEN v0.c2 END COLLATE BINARY))) UNION SELECT DISTINCT rt0.c3, rt0.c0 FROM vt0, v0, rt0 WHERE (((CASE WHEN rt0.c0 THEN v0.c2 END COLLATE BINARY) ISNULL));
SELECT DISTINCT rt0.c3, rt0.c0 FROM vt0, v0, rt0;
SELECT t0.c2 FROM t0, rt0 GROUP BY t0.c2;
SELECT ALL t0.c2 FROM t0, rt0 WHERE ((((t0.c2)==(rt0.c2)) IN ())) GROUP BY t0.c2 UNION SELECT ALL t0.c2 FROM t0, rt0 WHERE ((NOT ((((t0.c2)==(rt0.c2)) IN ())))) GROUP BY t0.c2 UNION SELECT t0.c2 FROM t0, rt0 WHERE ((((((t0.c2)==(rt0.c2)) IN ())) ISNULL)) GROUP BY t0.c2;
SELECT t0.c2 FROM t0, rt0 GROUP BY t0.c2;
SELECT ALL v0.c1, v0.c2 FROM v0 GROUP BY v0.c1, v0.c2;
SELECT v0.c1, v0.c2 FROM v0 GROUP BY v0.c1, v0.c2 HAVING (~ (MIN(AVG(SUM(NULL))))) UNION ALL SELECT ALL v0.c1, v0.c2 FROM v0 GROUP BY v0.c1, v0.c2 HAVING (NOT ((~ (MIN(AVG(SUM(NULL))))))) UNION ALL SELECT v0.c1, v0.c2 FROM v0 GROUP BY v0.c1, v0.c2 HAVING (((~ (MIN(AVG(SUM(NULL)))))) ISNULL);
SELECT * FROM v0, rt0, t0, vt0;
SELECT ALL * FROM v0, rt0, t0, vt0 WHERE (rt0.c4) UNION ALL SELECT * FROM v0, rt0, t0, vt0 WHERE ((NOT (rt0.c4))) UNION ALL SELECT * FROM v0, rt0, t0, vt0 WHERE (((rt0.c4) ISNULL));
SELECT * FROM v0, rt0, t0, vt0;
SELECT DISTINCT rt0.c1, rt0.c0, v0.c2, vt0.c1, v0.c0, vt0.c0 FROM v0, rt0, vt0;
SELECT DISTINCT rt0.c1, rt0.c0, v0.c2, vt0.c1, v0.c0, vt0.c0 FROM v0, rt0, vt0 WHERE (CASE ((vt0.c1) NOT NULL)  WHEN '1371734389' THEN v0.c1 ELSE ROUND(rt0.c0, rt0.c3) END) UNION SELECT DISTINCT rt0.c1, rt0.c0, v0.c2, vt0.c1, v0.c0, vt0.c0 FROM v0, rt0, vt0 WHERE ((NOT (CASE ((vt0.c1) NOT NULL)  WHEN '1371734389' THEN v0.c1 ELSE ROUND(rt0.c0, rt0.c3) END))) UNION SELECT DISTINCT rt0.c1, rt0.c0, v0.c2, vt0.c1, v0.c0, vt0.c0 FROM v0, rt0, vt0 WHERE (((CASE ((vt0.c1) NOT NULL)  WHEN '1371734389' THEN v0.c1 ELSE ROUND(rt0.c0, rt0.c3) END) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c0, v0.c2, vt0.c1, v0.c0, vt0.c0 FROM v0, rt0, vt0;
SELECT v0.c1, v0.c0 FROM v0 GROUP BY v0.c1, v0.c0;
SELECT v0.c1, v0.c0 FROM v0 WHERE (((((CASE WHEN v0.c2 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c2 ELSE v0.c1 END)OR(CASE v0.c2  WHEN v0.c0 THEN v0.c0 END)))AND(((v0.c2)LIKE(v0.c2))))) GROUP BY v0.c1, v0.c0 UNION SELECT v0.c1, v0.c0 FROM v0 WHERE ((NOT (((((CASE WHEN v0.c2 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c2 ELSE v0.c1 END)OR(CASE v0.c2  WHEN v0.c0 THEN v0.c0 END)))AND(((v0.c2)LIKE(v0.c2))))))) GROUP BY v0.c1, v0.c0 UNION SELECT ALL v0.c1, v0.c0 FROM v0 WHERE (((((((CASE WHEN v0.c2 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c2 ELSE v0.c1 END)OR(CASE v0.c2  WHEN v0.c0 THEN v0.c0 END)))AND(((v0.c2)LIKE(v0.c2))))) ISNULL)) GROUP BY v0.c1, v0.c0;
SELECT v0.c1, v0.c0 FROM v0 GROUP BY v0.c1, v0.c0;
SELECT v0.c1, rt0.c4, rt0.c0 FROM rt0 INNER JOIN v0 ON CASE WHEN ((vt0.c0) NOT BETWEEN (rt0.c1) AND (v0.c2)) THEN (~ (rt0.c0)) END RIGHT OUTER JOIN vt0 ON ((((((((((rt0.c0)*(rt0.c3)))OR('391457779')))AND(((((vt0.c0)OR(x'')))AND(rt0.c4)))))OR(((((rt0.c4)OR(rt0.c2)))AND(0.9281895276977787)))))AND(CAST(v0.c1 AS TEXT))) GROUP BY v0.c1, rt0.c4, rt0.c0;
SELECT ALL * FROM rt0 FULL OUTER JOIN vt0 ON CASE CASE WHEN rt0.c3 THEN t0.c2 WHEN v0.c2 THEN vt0.c1 WHEN v0.c0 THEN rt0.c1 ELSE t0.c0 END  WHEN (0.3228993914754583 IN ()) THEN NULL END LEFT OUTER JOIN v0 ON ((((('辅iTJ~\rkC', rt0.c4, rt0.c0, 0.9037072237608185, rt0.c0)) NOT BETWEEN ((rt0.c0, v0.c1, rt0.c4, v0.c2, vt0.c0)) AND ((v0.c2, t0.c2, rt0.c3, rt0.c0, vt0.c1)))) ISNULL) INNER JOIN t0 ON ((((v0.c2) BETWEEN (rt0.c4) AND (vt0.c1))) IS FALSE);
SELECT DISTINCT * FROM rt0, vt0, t0, v0;
SELECT DISTINCT * FROM rt0, vt0, t0, v0 WHERE (CAST(v0.c2 AS TEXT) COLLATE BINARY COLLATE RTRIM) UNION SELECT DISTINCT * FROM rt0, vt0, t0, v0 WHERE ((NOT (CAST(v0.c2 AS TEXT) COLLATE BINARY COLLATE RTRIM))) UNION SELECT DISTINCT * FROM rt0, vt0, t0, v0 WHERE (((CAST(v0.c2 AS TEXT) COLLATE BINARY COLLATE RTRIM) ISNULL));
SELECT DISTINCT * FROM rt0, vt0, t0, v0;
SELECT ALL rt0.c4, rt0.c3, t0.c2, rt0.c1 FROM t0 FULL OUTER JOIN rt0 ON '-1348466384' GROUP BY rt0.c4, rt0.c3, t0.c2, rt0.c1;
SELECT ALL rt0.c4, rt0.c3, t0.c2, rt0.c1 FROM t0 FULL OUTER JOIN rt0 ON '-1348466384' WHERE (CASE WHEN (- (t0.c0)) THEN t0.c2 WHEN ((0.2634906466040351)>=(rt0.c3)) THEN CAST(t0.c2 AS BLOB) WHEN (rt0.c0 IN ()) THEN load_extension(rt0.c2, rt0.c2) ELSE rt0.c4 END) GROUP BY rt0.c4, rt0.c3, t0.c2, rt0.c1 UNION SELECT rt0.c4, rt0.c3, t0.c2, rt0.c1 FROM t0 FULL OUTER JOIN rt0 ON '-1348466384' WHERE ((NOT (CASE WHEN (- (t0.c0)) THEN t0.c2 WHEN ((0.2634906466040351)>=(rt0.c3)) THEN CAST(t0.c2 AS BLOB) WHEN (rt0.c0 IN ()) THEN load_extension(rt0.c2, rt0.c2) ELSE rt0.c4 END))) GROUP BY rt0.c4, rt0.c3, t0.c2, rt0.c1 UNION SELECT rt0.c4, rt0.c3, t0.c2, rt0.c1 FROM t0 FULL OUTER JOIN rt0 ON '-1348466384' WHERE (((CASE WHEN (- (t0.c0)) THEN t0.c2 WHEN ((0.2634906466040351)>=(rt0.c3)) THEN CAST(t0.c2 AS BLOB) WHEN (rt0.c0 IN ()) THEN load_extension(rt0.c2, rt0.c2) ELSE rt0.c4 END) ISNULL)) GROUP BY rt0.c4, rt0.c3, t0.c2, rt0.c1;
SELECT ALL rt0.c4, rt0.c3, t0.c2, rt0.c1 FROM t0 FULL OUTER JOIN rt0 ON '-1348466384' GROUP BY rt0.c4, rt0.c3, t0.c2, rt0.c1;
SELECT ALL v0.c0, rt0.c3, t0.c2, v0.c1, rt0.c2, rt0.c0, t0.c0, vt0.c1, rt0.c4, vt0.c0 FROM v0, vt0 FULL OUTER JOIN t0 ON (((rt0.c4, rt0.c3, rt0.c1)) NOT BETWEEN ((t0.c2, vt0.c1, rt0.c3)) AND ((rt0.c0, rt0.c4, v0.c1))) COLLATE BINARY INNER JOIN rt0 ON ((((rt0.c1) NOT NULL)) NOT BETWEEN (0.003915838530815896) AND (((vt0.c0)<=(vt0.c1)))) GROUP BY v0.c0, rt0.c3, t0.c2, v0.c1, rt0.c2, rt0.c0, t0.c0, vt0.c1, rt0.c4, vt0.c0;
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE (NULL COLLATE NOCASE) UNION ALL SELECT * FROM rt0 WHERE ((NOT (NULL COLLATE NOCASE))) UNION ALL SELECT * FROM rt0 WHERE (((NULL COLLATE NOCASE) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT vt0.c1, v0.c2, t0.c0, rt0.c0, rt0.c4, rt0.c1 FROM t0, v0, vt0, rt0;
SELECT DISTINCT vt0.c1, v0.c2, t0.c0, rt0.c0, rt0.c4, rt0.c1 FROM t0, v0, vt0, rt0 WHERE (CAST(((((((((t0.c0)OR(rt0.c3)))OR(vt0.c1)))OR('742866976')))AND(0.44363706159937166)) AS INTEGER)) UNION SELECT DISTINCT vt0.c1, v0.c2, t0.c0, rt0.c0, rt0.c4, rt0.c1 FROM t0, v0, vt0, rt0 WHERE ((NOT (CAST(((((((((t0.c0)OR(rt0.c3)))OR(vt0.c1)))OR('742866976')))AND(0.44363706159937166)) AS INTEGER)))) UNION SELECT DISTINCT vt0.c1, v0.c2, t0.c0, rt0.c0, rt0.c4, rt0.c1 FROM t0, v0, vt0, rt0 WHERE (((CAST(((((((((t0.c0)OR(rt0.c3)))OR(vt0.c1)))OR('742866976')))AND(0.44363706159937166)) AS INTEGER)) ISNULL));
SELECT DISTINCT vt0.c1, v0.c2, t0.c0, rt0.c0, rt0.c4, rt0.c1 FROM t0, v0, vt0, rt0;
SELECT rt0.c1, vt0.c1, t0.c0, rt0.c4, rt0.c0, v0.c1 FROM rt0, t0, v0, vt0 GROUP BY rt0.c1, vt0.c1, t0.c0, rt0.c4, rt0.c0, v0.c1;
SELECT rt0.c1, vt0.c1, t0.c0, rt0.c4, rt0.c0, v0.c1 FROM rt0, t0, v0, vt0 WHERE ((((((rt0.c1) BETWEEN (v0.c1) AND (vt0.c1))))==((IFNULL(rt0.c2, rt0.c1))))) GROUP BY rt0.c1, vt0.c1, t0.c0, rt0.c4, rt0.c0, v0.c1 UNION SELECT ALL rt0.c1, vt0.c1, t0.c0, rt0.c4, rt0.c0, v0.c1 FROM rt0, t0, v0, vt0 WHERE ((NOT ((((((rt0.c1) BETWEEN (v0.c1) AND (vt0.c1))))=((IFNULL(rt0.c2, rt0.c1))))))) GROUP BY rt0.c1, vt0.c1, t0.c0, rt0.c4, rt0.c0, v0.c1 UNION SELECT rt0.c1, vt0.c1, t0.c0, rt0.c4, rt0.c0, v0.c1 FROM rt0, t0, v0, vt0 WHERE ((((((((rt0.c1) BETWEEN (v0.c1) AND (vt0.c1))))==((IFNULL(rt0.c2, rt0.c1))))) ISNULL)) GROUP BY rt0.c1, vt0.c1, t0.c0, rt0.c4, rt0.c0, v0.c1;
SELECT rt0.c1, vt0.c1, t0.c0, rt0.c4, rt0.c0, v0.c1 FROM rt0, t0, v0, vt0 GROUP BY rt0.c1, vt0.c1, t0.c0, rt0.c4, rt0.c0, v0.c1;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING GROUP_CONCAT(TOTAL(COUNT(TOTAL(vt0.c0)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (GROUP_CONCAT(TOTAL(COUNT(TOTAL(vt0.c0)))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((GROUP_CONCAT(TOTAL(COUNT(TOTAL(vt0.c0))))) ISNULL);
SELECT ALL * FROM rt0, t0, vt0;
SELECT ALL * FROM rt0, t0, vt0 WHERE (rt0.c3) UNION ALL SELECT ALL * FROM rt0, t0, vt0 WHERE ((NOT (rt0.c3))) UNION ALL SELECT * FROM rt0, t0, vt0 WHERE (((rt0.c3) ISNULL));
SELECT ALL * FROM rt0, t0, vt0;
SELECT DISTINCT rt0.c1, v0.c0, t0.c0, vt0.c1, rt0.c0, v0.c2, rt0.c3, vt0.c0, t0.c2, rt0.c4 FROM vt0, rt0, t0 LEFT OUTER JOIN v0 ON CAST(HEX(t0.c0) AS TEXT);
SELECT DISTINCT rt0.c1, v0.c0, t0.c0, vt0.c1, rt0.c0, v0.c2, rt0.c3, vt0.c0, t0.c2, rt0.c4 FROM vt0, rt0, t0 LEFT OUTER JOIN v0 ON CAST(HEX(t0.c0) AS TEXT) WHERE (CAST(0.04600885580494585 AS INTEGER)) UNION SELECT DISTINCT rt0.c1, v0.c0, t0.c0, vt0.c1, rt0.c0, v0.c2, rt0.c3, vt0.c0, t0.c2, rt0.c4 FROM vt0 NOT INDEXED, rt0, t0 LEFT OUTER JOIN v0 ON CAST(HEX(t0.c0) AS TEXT) WHERE ((NOT (CAST(0.04600885580494585 AS INTEGER)))) UNION SELECT DISTINCT rt0.c1, v0.c0, t0.c0, vt0.c1, rt0.c0, v0.c2, rt0.c3, vt0.c0, t0.c2, rt0.c4 FROM vt0, rt0, t0 LEFT OUTER JOIN v0 ON CAST(HEX(t0.c0) AS TEXT) WHERE (((CAST(0.04600885580494585 AS INTEGER)) ISNULL));
SELECT DISTINCT rt0.c1, v0.c0, t0.c0, vt0.c1, rt0.c0, v0.c2, rt0.c3, vt0.c0, t0.c2, rt0.c4 FROM vt0, rt0, t0 LEFT OUTER JOIN v0 ON CAST(HEX(t0.c0) AS TEXT);
SELECT rt0.c0, rt0.c3, t0.c0, rt0.c2, t0.c2, rt0.c1 FROM t0, rt0 GROUP BY rt0.c0, rt0.c3, t0.c0, rt0.c2, t0.c2, rt0.c1;
SELECT rt0.c0, rt0.c3, t0.c0, rt0.c2, t0.c2, rt0.c1 FROM t0, rt0 WHERE ((NOT ((((rt0.c3)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c0)))))) GROUP BY rt0.c0, rt0.c3, t0.c0, rt0.c2, t0.c2, rt0.c1 UNION SELECT rt0.c0, rt0.c3, t0.c0, rt0.c2, t0.c2, rt0.c1 FROM t0, rt0 WHERE ((NOT ((NOT ((((rt0.c3)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c0)))))))) GROUP BY rt0.c0, rt0.c3, t0.c0, rt0.c2, t0.c2, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c3, t0.c0, rt0.c2, t0.c2, rt0.c1 FROM t0, rt0 WHERE ((((NOT ((((rt0.c3)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c0)))))) ISNULL)) GROUP BY rt0.c0, rt0.c3, t0.c0, rt0.c2, t0.c2, rt0.c1;
SELECT rt0.c0, rt0.c3, t0.c0, rt0.c2, t0.c2, rt0.c1 FROM t0, rt0 GROUP BY rt0.c0, rt0.c3, t0.c0, rt0.c2, t0.c2, rt0.c1;
SELECT ALL v0.c1 FROM v0 GROUP BY v0.c1;
SELECT v0.c1 FROM v0 GROUP BY v0.c1 HAVING (~ (((((COUNT(v0.c1))OR(v0.c2)))AND(MAX(v0.c2))))) UNION ALL SELECT ALL v0.c1 FROM v0 GROUP BY v0.c1 HAVING (NOT ((~ (((((COUNT(v0.c1))OR(v0.c2)))AND(MAX(v0.c2))))))) UNION ALL SELECT v0.c1 FROM v0 GROUP BY v0.c1 HAVING (((~ (((((COUNT(v0.c1))OR(v0.c2)))AND(MAX(v0.c2)))))) ISNULL);
SELECT ALL v0.c1 FROM v0 GROUP BY v0.c1;
SELECT v0.c1 FROM v0 GROUP BY v0.c1 HAVING (~ (((((COUNT(v0.c1))OR(v0.c2)))AND(MAX(v0.c2))))) UNION ALL SELECT ALL v0.c1 FROM v0 GROUP BY v0.c1 HAVING (NOT ((~ (((((COUNT(v0.c1))OR(v0.c2)))AND(MAX(v0.c2))))))) UNION ALL SELECT v0.c1 FROM v0 GROUP BY v0.c1 HAVING (((~ (((((COUNT(v0.c1))OR(v0.c2)))AND(MAX(v0.c2)))))) ISNULL);
SELECT ALL v0.c1 FROM v0 GROUP BY v0.c1;
SELECT * FROM vt0, rt0, v0, t0;
SELECT ALL * FROM vt0, rt0, v0, t0 WHERE (UNLIKELY(((v0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0)))) UNION ALL SELECT ALL * FROM vt0, rt0, v0, t0 WHERE ((NOT (UNLIKELY(((v0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0)))))) UNION ALL SELECT ALL * FROM vt0, rt0, v0, t0 WHERE (((UNLIKELY(((v0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0)))) ISNULL));
SELECT * FROM vt0, rt0, v0, t0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (-1.348466384E9) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (-1.348466384E9))) UNION SELECT DISTINCT * FROM v0 WHERE (((-1.348466384E9) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT ALL vt0.c1, rt0.c3, vt0.c0, v0.c0, rt0.c4, rt0.c0 FROM v0, rt0, vt0 GROUP BY vt0.c1, rt0.c3, vt0.c0, v0.c0, rt0.c4, rt0.c0;
SELECT ALL vt0.c1, rt0.c3, vt0.c0, v0.c0, rt0.c4, rt0.c0 FROM v0, rt0, vt0 NOT INDEXED WHERE (LIKELY(rt0.c0)) GROUP BY vt0.c1, rt0.c3, vt0.c0, v0.c0, rt0.c4, rt0.c0 UNION SELECT ALL vt0.c1, rt0.c3, vt0.c0, v0.c0, rt0.c4, rt0.c0 FROM v0, rt0, vt0 WHERE ((NOT (LIKELY(rt0.c0)))) GROUP BY vt0.c1, rt0.c3, vt0.c0, v0.c0, rt0.c4, rt0.c0 UNION SELECT ALL vt0.c1, rt0.c3, vt0.c0, v0.c0, rt0.c4, rt0.c0 FROM v0, rt0, vt0 WHERE (((LIKELY(rt0.c0)) ISNULL)) GROUP BY vt0.c1, rt0.c3, vt0.c0, v0.c0, rt0.c4, rt0.c0;
SELECT ALL vt0.c1, rt0.c3, vt0.c0, v0.c0, rt0.c4, rt0.c0 FROM v0, rt0, vt0 GROUP BY vt0.c1, rt0.c3, vt0.c0, v0.c0, rt0.c4, rt0.c0;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING SUM(GROUP_CONCAT(vt0.c0)) UNION ALL SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING (NOT (SUM(GROUP_CONCAT(vt0.c0)))) UNION ALL SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING ((SUM(GROUP_CONCAT(vt0.c0))) ISNULL);
SELECT ALL MIN(CAST(((((((((NULL)OR(v0.c1)))AND(rt0.c1)))AND(NULL)))OR(v0.c0)) AS BLOB)) FROM t0, v0, rt0, vt0 ORDER BY CASE WHEN (t0.c0 IN ()) THEN ((rt0.c4) NOTNULL) END ASC;
SELECT ALL t0.c2 FROM t0;
SELECT t0.c2 FROM t0 WHERE (((t0.c2 COLLATE NOCASE)GLOB(CASE '820830135'  WHEN t0.c0 THEN t0.c0 ELSE NULL END))) UNION ALL SELECT t0.c2 FROM t0 WHERE ((NOT (((t0.c2 COLLATE NOCASE)GLOB(CASE '820830135'  WHEN t0.c0 THEN t0.c0 ELSE NULL END))))) UNION ALL SELECT t0.c2 FROM t0 WHERE (((((t0.c2 COLLATE NOCASE)GLOB(CASE '820830135'  WHEN t0.c0 THEN t0.c0 ELSE NULL END))) ISNULL));
SELECT ALL t0.c2 FROM t0;
SELECT DISTINCT rt0.c2, rt0.c3, rt0.c4, rt0.c0, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c3, rt0.c4, rt0.c0, rt0.c1 FROM rt0 WHERE (CASE WHEN (~ (rt0.c4)) THEN ((rt0.c0)||(rt0.c4)) WHEN CASE WHEN rt0.c4 THEN rt0.c0 END THEN ((rt0.c1) IS FALSE) WHEN rt0.c1 THEN ((rt0.c4) NOT BETWEEN (rt0.c4) AND (x'5407')) END) UNION SELECT DISTINCT rt0.c2, rt0.c3, rt0.c4, rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (CASE WHEN (~ (rt0.c4)) THEN ((rt0.c0)||(rt0.c4)) WHEN CASE WHEN rt0.c4 THEN rt0.c0 END THEN ((rt0.c1) IS FALSE) WHEN rt0.c1 THEN ((rt0.c4) NOT BETWEEN (rt0.c4) AND (x'5407')) END))) UNION SELECT DISTINCT rt0.c2, rt0.c3, rt0.c4, rt0.c0, rt0.c1 FROM rt0 WHERE (((CASE WHEN (~ (rt0.c4)) THEN ((rt0.c0)||(rt0.c4)) WHEN CASE WHEN rt0.c4 THEN rt0.c0 END THEN ((rt0.c1) IS FALSE) WHEN rt0.c1 THEN ((rt0.c4) NOT BETWEEN (rt0.c4) AND (x'5407')) END) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c3, rt0.c4, rt0.c0, rt0.c1 FROM rt0;
SELECT ALL rt0.c3, vt0.c0, vt0.c1, v0.c0, rt0.c2, rt0.c4 FROM rt0, vt0, t0, v0 GROUP BY rt0.c3, vt0.c0, vt0.c1, v0.c0, rt0.c2, rt0.c4;
SELECT ALL rt0.c3, vt0.c0, vt0.c1, v0.c0, rt0.c2, rt0.c4 FROM rt0, vt0, t0, v0 WHERE (CASE WHEN rt0.c0 THEN ((((rt0.c0)AND(x'')))OR(rt0.c3)) END) GROUP BY rt0.c3, vt0.c0, vt0.c1, v0.c0, rt0.c2, rt0.c4 UNION SELECT ALL rt0.c3, vt0.c0, vt0.c1, v0.c0, rt0.c2, rt0.c4 FROM rt0, vt0, t0, v0 WHERE ((NOT (CASE WHEN rt0.c0 THEN ((((rt0.c0)AND(x'')))OR(rt0.c3)) END))) GROUP BY rt0.c3, vt0.c0, vt0.c1, v0.c0, rt0.c2, rt0.c4 UNION SELECT ALL rt0.c3, vt0.c0, vt0.c1, v0.c0, rt0.c2, rt0.c4 FROM rt0, vt0, t0, v0 WHERE (((CASE WHEN rt0.c0 THEN ((((rt0.c0)AND(x'')))OR(rt0.c3)) END) ISNULL)) GROUP BY rt0.c3, vt0.c0, vt0.c1, v0.c0, rt0.c2, rt0.c4;
SELECT ALL rt0.c3, vt0.c0, vt0.c1, v0.c0, rt0.c2, rt0.c4 FROM rt0, vt0, t0, v0 GROUP BY rt0.c3, vt0.c0, vt0.c1, v0.c0, rt0.c2, rt0.c4;
SELECT t0.c2 FROM t0 GROUP BY t0.c2;
SELECT t0.c2 FROM t0 GROUP BY t0.c2 HAVING COUNT(MAX(t0.c2)) UNION ALL SELECT ALL t0.c2 FROM t0 GROUP BY t0.c2 HAVING (NOT (COUNT(MAX(t0.c2)))) UNION ALL SELECT t0.c2 FROM t0 GROUP BY t0.c2 HAVING ((COUNT(MAX(t0.c2))) ISNULL);
SELECT ALL * FROM v0, vt0, t0;
SELECT * FROM v0, vt0, t0 WHERE (TYPEOF(((v0.c1)LIKE(v0.c1)))) UNION ALL SELECT * FROM v0, vt0, t0 WHERE ((NOT (TYPEOF(((v0.c1)LIKE(v0.c1)))))) UNION ALL SELECT ALL * FROM v0, vt0, t0 WHERE (((TYPEOF(((v0.c1)LIKE(v0.c1)))) ISNULL));
SELECT ALL * FROM v0, vt0, t0;
SELECT DISTINCT vt0.c1, v0.c2, t0.c0 FROM v0, vt0 RIGHT OUTER JOIN t0 ON ((NOT (vt0.c0)) IN ((((v0.c0)) NOT BETWEEN ((vt0.c1)) AND ((t0.c2))), (NOT (vt0.c0))));
SELECT DISTINCT vt0.c1, v0.c2, t0.c0 FROM v0, vt0 RIGHT OUTER JOIN t0 ON ((NOT (vt0.c0)) IN ((((v0.c0)) NOT BETWEEN ((vt0.c1)) AND ((t0.c2))), (NOT (vt0.c0)))) WHERE (CAST(((v0.c1) NOT BETWEEN (vt0.c0) AND (t0.c0)) AS NUMERIC)) UNION SELECT DISTINCT vt0.c1, v0.c2, t0.c0 FROM v0, vt0 RIGHT OUTER JOIN t0 ON ((NOT (vt0.c0)) IN ((((v0.c0)) NOT BETWEEN ((vt0.c1)) AND ((t0.c2))), (NOT (vt0.c0)))) WHERE ((NOT (CAST(((v0.c1) NOT BETWEEN (vt0.c0) AND (t0.c0)) AS NUMERIC)))) UNION SELECT DISTINCT vt0.c1, v0.c2, t0.c0 FROM v0, vt0 RIGHT OUTER JOIN t0 ON ((NOT (vt0.c0)) IN ((((v0.c0)) NOT BETWEEN ((vt0.c1)) AND ((t0.c2))), (NOT (vt0.c0)))) WHERE (((CAST(((v0.c1) NOT BETWEEN (vt0.c0) AND (t0.c0)) AS NUMERIC)) ISNULL));
SELECT DISTINCT vt0.c1, v0.c2, t0.c0 FROM v0, vt0 RIGHT OUTER JOIN t0 ON ((NOT (vt0.c0)) IN ((((v0.c0)) NOT BETWEEN ((vt0.c1)) AND ((t0.c2))), (NOT (vt0.c0))));
SELECT ALL v0.c1, rt0.c0, rt0.c3, rt0.c2, v0.c0, t0.c0, vt0.c0, rt0.c4 FROM t0 INNER JOIN v0 ON rt0.c0 RIGHT OUTER JOIN rt0 ON ((((CASE WHEN t0.c0 THEN vt0.c0 WHEN v0.c0 THEN rt0.c1 WHEN vt0.c1 THEN rt0.c3 ELSE v0.c0 END)OR(CAST('83777189' AS NUMERIC))))AND(((rt0.c2)%(rt0.c4)))) FULL OUTER JOIN vt0 ON ((((((((((NULL)OR(rt0.c3)))AND(vt0.c1)))OR(t0.c0)))OR(rt0.c0))) ISNULL) GROUP BY v0.c1, rt0.c0, rt0.c3, rt0.c2, v0.c0, t0.c0, vt0.c0, rt0.c4;
SELECT ALL t0.c0, t0.c2 FROM t0 GROUP BY t0.c0, t0.c2;
SELECT t0.c0, t0.c2 FROM t0 GROUP BY t0.c0, t0.c2 HAVING (((((MIN(t0.c2)) NOT BETWEEN (t0.c0) AND (t0.c0))))!=((MAX(t0.c2)))) UNION ALL SELECT t0.c0, t0.c2 FROM t0 GROUP BY t0.c0, t0.c2 HAVING (NOT ((((((MIN(t0.c2)) NOT BETWEEN (t0.c0) AND (t0.c0))))!=((MAX(t0.c2)))))) UNION ALL SELECT ALL t0.c0, t0.c2 FROM t0 GROUP BY t0.c0, t0.c2 HAVING (((((((MIN(t0.c2)) NOT BETWEEN (t0.c0) AND (t0.c0))))<>((MAX(t0.c2))))) ISNULL);
SELECT ALL t0.c0, t0.c2 FROM t0 GROUP BY t0.c0, t0.c2;
SELECT t0.c0, t0.c2 FROM t0 GROUP BY t0.c0, t0.c2 HAVING (((((MIN(t0.c2)) NOT BETWEEN (t0.c0) AND (t0.c0))))!=((MAX(t0.c2)))) UNION ALL SELECT t0.c0, t0.c2 FROM t0 GROUP BY t0.c0, t0.c2 HAVING (NOT ((((((MIN(t0.c2)) NOT BETWEEN (t0.c0) AND (t0.c0))))!=((MAX(t0.c2)))))) UNION ALL SELECT ALL t0.c0, t0.c2 FROM t0 GROUP BY t0.c0, t0.c2 HAVING (((((((MIN(t0.c2)) NOT BETWEEN (t0.c0) AND (t0.c0))))<>((MAX(t0.c2))))) ISNULL);
SELECT ALL t0.c0, t0.c2 FROM t0 GROUP BY t0.c0, t0.c2;
SELECT * FROM v0;
SELECT ALL * FROM v0 WHERE (v0.c1) UNION ALL SELECT ALL * FROM v0 WHERE ((NOT (v0.c1))) UNION ALL SELECT ALL * FROM v0 WHERE (((v0.c1) ISNULL));
SELECT * FROM v0;
SELECT DISTINCT * FROM v0, rt0;
SELECT DISTINCT * FROM v0, rt0 WHERE (v0.c2) UNION SELECT DISTINCT * FROM v0, rt0 WHERE ((NOT (v0.c2))) UNION SELECT DISTINCT * FROM v0, rt0 WHERE (((v0.c2) ISNULL));
SELECT DISTINCT * FROM v0, rt0;
SELECT ALL v0.c1, rt0.c4, v0.c2, vt0.c0, t0.c2, rt0.c2, rt0.c3, t0.c0 FROM t0, vt0, rt0, v0 GROUP BY v0.c1, rt0.c4, v0.c2, vt0.c0, t0.c2, rt0.c2, rt0.c3, t0.c0;
SELECT v0.c1, rt0.c4, v0.c2, vt0.c0, t0.c2, rt0.c2, rt0.c3, t0.c0 FROM t0, vt0, rt0, v0 WHERE ((CAST(x'' AS TEXT) IN ())) GROUP BY v0.c1, rt0.c4, v0.c2, vt0.c0, t0.c2, rt0.c2, rt0.c3, t0.c0 UNION SELECT v0.c1, rt0.c4, v0.c2, vt0.c0, t0.c2, rt0.c2, rt0.c3, t0.c0 FROM t0, vt0, rt0, v0 WHERE ((NOT ((CAST(x'' AS TEXT) IN ())))) GROUP BY v0.c1, rt0.c4, v0.c2, vt0.c0, t0.c2, rt0.c2, rt0.c3, t0.c0 UNION SELECT v0.c1, rt0.c4, v0.c2, vt0.c0, t0.c2, rt0.c2, rt0.c3, t0.c0 FROM t0, vt0, rt0, v0 WHERE ((((CAST(x'' AS TEXT) IN ())) ISNULL)) GROUP BY v0.c1, rt0.c4, v0.c2, vt0.c0, t0.c2, rt0.c2, rt0.c3, t0.c0;
SELECT ALL v0.c1, rt0.c4, v0.c2, vt0.c0, t0.c2, rt0.c2, rt0.c3, t0.c0 FROM t0, vt0, rt0, v0 GROUP BY v0.c1, rt0.c4, v0.c2, vt0.c0, t0.c2, rt0.c2, rt0.c3, t0.c0;
SELECT ALL t0.c0, rt0.c2, v0.c0, rt0.c0, rt0.c1 FROM t0, vt0, v0, rt0 GROUP BY t0.c0, rt0.c2, v0.c0, rt0.c0, rt0.c1;
SELECT t0.c0, rt0.c2, v0.c0, rt0.c0, rt0.c1 FROM t0, vt0, v0, rt0 GROUP BY t0.c0, rt0.c2, v0.c0, rt0.c0, rt0.c1 HAVING COUNT(*) UNION ALL SELECT t0.c0, rt0.c2, v0.c0, rt0.c0, rt0.c1 FROM t0, vt0, v0, rt0 GROUP BY t0.c0, rt0.c2, v0.c0, rt0.c0, rt0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT t0.c0, rt0.c2, v0.c0, rt0.c0, rt0.c1 FROM t0, vt0, v0, rt0 GROUP BY t0.c0, rt0.c2, v0.c0, rt0.c0, rt0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT ALL t0.c0, rt0.c2, v0.c0, rt0.c0, rt0.c1 FROM t0, vt0, v0, rt0 GROUP BY t0.c0, rt0.c2, v0.c0, rt0.c0, rt0.c1;
SELECT t0.c0, rt0.c2, v0.c0, rt0.c0, rt0.c1 FROM t0, vt0, v0, rt0 GROUP BY t0.c0, rt0.c2, v0.c0, rt0.c0, rt0.c1 HAVING COUNT(*) UNION ALL SELECT t0.c0, rt0.c2, v0.c0, rt0.c0, rt0.c1 FROM t0, vt0, v0, rt0 GROUP BY t0.c0, rt0.c2, v0.c0, rt0.c0, rt0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT t0.c0, rt0.c2, v0.c0, rt0.c0, rt0.c1 FROM t0, vt0, v0, rt0 GROUP BY t0.c0, rt0.c2, v0.c0, rt0.c0, rt0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT ALL t0.c0, rt0.c2, v0.c0, rt0.c0, rt0.c1 FROM t0, vt0, v0, rt0 GROUP BY t0.c0, rt0.c2, v0.c0, rt0.c0, rt0.c1;
SELECT rt0.c3, rt0.c1 FROM rt0;
SELECT ALL rt0.c3, rt0.c1 FROM rt0 WHERE (CAST((((rt0.c2, rt0.c4, rt0.c2))>((rt0.c3, rt0.c3, rt0.c1))) AS INTEGER)) UNION ALL SELECT rt0.c3, rt0.c1 FROM rt0 WHERE ((NOT (CAST((((rt0.c2, rt0.c4, rt0.c2))>((rt0.c3, rt0.c3, rt0.c1))) AS INTEGER)))) UNION ALL SELECT ALL rt0.c3, rt0.c1 FROM rt0 WHERE (((CAST((((rt0.c2, rt0.c4, rt0.c2))>((rt0.c3, rt0.c3, rt0.c1))) AS INTEGER)) ISNULL));
SELECT rt0.c3, rt0.c1 FROM rt0;
SELECT DISTINCT * FROM vt0, t0, rt0;
SELECT DISTINCT * FROM vt0, t0, rt0 WHERE (json_type(CAST(rt0.c0 AS REAL))) UNION SELECT DISTINCT * FROM vt0, t0, rt0 WHERE ((NOT (json_type(CAST(rt0.c0 AS REAL))))) UNION SELECT DISTINCT * FROM vt0, t0, rt0 WHERE (((json_type(CAST(rt0.c0 AS REAL))) ISNULL));
SELECT DISTINCT * FROM vt0, t0, rt0;
SELECT ALL t0.c2, t0.c0, v0.c0 FROM v0, t0 GROUP BY t0.c2, t0.c0, v0.c0;
SELECT ALL t0.c2, t0.c0, v0.c0 FROM v0, t0 WHERE (((t0.c0) NOTNULL) COLLATE BINARY) GROUP BY t0.c2, t0.c0, v0.c0 UNION SELECT ALL t0.c2, t0.c0, v0.c0 FROM v0, t0 WHERE ((NOT (((t0.c0) NOTNULL) COLLATE BINARY))) GROUP BY t0.c2, t0.c0, v0.c0 UNION SELECT ALL t0.c2, t0.c0, v0.c0 FROM v0, t0 WHERE (((((t0.c0) NOTNULL) COLLATE BINARY) ISNULL)) GROUP BY t0.c2, t0.c0, v0.c0;
SELECT ALL t0.c2, t0.c0, v0.c0 FROM v0, t0 GROUP BY t0.c2, t0.c0, v0.c0;
SELECT ALL vt0.c0 FROM rt0 FULL OUTER JOIN vt0 ON ((vt0.c0)GLOB(((rt0.c3) NOT BETWEEN (rt0.c1) AND (vt0.c1)))) GROUP BY vt0.c0;
SELECT vt0.c0 FROM rt0 FULL OUTER JOIN vt0 ON ((vt0.c0)GLOB(((rt0.c3) NOT BETWEEN (rt0.c1) AND (vt0.c1)))) GROUP BY vt0.c0 HAVING ((('', vt0.c0, GROUP_CONCAT(MIN(NULL))))<=((COUNT(vt0.c0), CASE rt0.c4  WHEN rt0.c2 THEN vt0.c1 ELSE COUNT(rt0.c2) END, COUNT(*)))) UNION ALL SELECT vt0.c0 FROM rt0 FULL OUTER JOIN vt0 ON ((vt0.c0)GLOB(((rt0.c3) NOT BETWEEN (rt0.c1) AND (vt0.c1)))) GROUP BY vt0.c0 HAVING (NOT (((('', vt0.c0, GROUP_CONCAT(MIN(NULL))))<=((COUNT(vt0.c0), CASE rt0.c4  WHEN rt0.c2 THEN vt0.c1 ELSE COUNT(rt0.c2) END, COUNT(*)))))) UNION ALL SELECT ALL vt0.c0 FROM rt0 FULL OUTER JOIN vt0 ON ((vt0.c0)GLOB(((rt0.c3) NOT BETWEEN (rt0.c1) AND (vt0.c1)))) GROUP BY vt0.c0 HAVING ((((('', vt0.c0, GROUP_CONCAT(MIN(NULL))))<=((COUNT(vt0.c0), CASE rt0.c4  WHEN rt0.c2 THEN vt0.c1 ELSE COUNT(rt0.c2) END, COUNT(*))))) ISNULL);
SELECT ALL v0.c0, rt0.c1, rt0.c4, rt0.c2, t0.c2, v0.c2, t0.c0 FROM rt0, t0, v0;
SELECT v0.c0, rt0.c1, rt0.c4, rt0.c2, t0.c2, v0.c2, t0.c0 FROM rt0, t0, v0 WHERE ((((((t0.c0) IS FALSE)))==((CAST(t0.c2 AS REAL))))) UNION ALL SELECT ALL v0.c0, rt0.c1, rt0.c4, rt0.c2, t0.c2, v0.c2, t0.c0 FROM rt0, t0, v0 WHERE ((NOT ((((((t0.c0) IS FALSE)))=((CAST(t0.c2 AS REAL))))))) UNION ALL SELECT ALL v0.c0, rt0.c1, rt0.c4, rt0.c2, t0.c2, v0.c2, t0.c0 FROM rt0, t0, v0 WHERE ((((((((t0.c0) IS FALSE)))=((CAST(t0.c2 AS REAL))))) ISNULL));
SELECT ALL v0.c0, rt0.c1, rt0.c4, rt0.c2, t0.c2, v0.c2, t0.c0 FROM rt0, t0, v0;
SELECT DISTINCT * FROM rt0 LEFT OUTER JOIN v0 ON 0.10897637622839418 INNER JOIN vt0 ON 0.29323926761722685 LEFT OUTER JOIN t0 ON ((((rt0.c0) IS FALSE)) NOTNULL);
SELECT DISTINCT * FROM rt0 LEFT OUTER JOIN v0 ON 0.10897637622839418 INNER JOIN vt0 ON 0.29323926761722685 LEFT OUTER JOIN t0 ON ((((rt0.c0) IS FALSE)) NOTNULL) WHERE (TRIM(DISTINCT vt0.c0 COLLATE RTRIM, CASE WHEN rt0.c0 THEN rt0.c1 END)) UNION SELECT DISTINCT * FROM rt0 LEFT OUTER JOIN v0 ON 0.10897637622839418 INNER JOIN vt0 ON 0.29323926761722685 LEFT OUTER JOIN t0 ON ((((rt0.c0) IS FALSE)) NOTNULL) WHERE ((NOT (TRIM(DISTINCT vt0.c0 COLLATE RTRIM, CASE WHEN rt0.c0 THEN rt0.c1 END)))) UNION SELECT DISTINCT * FROM rt0 LEFT OUTER JOIN v0 ON 0.10897637622839418 INNER JOIN vt0 ON 0.29323926761722685 LEFT OUTER JOIN t0 ON ((((rt0.c0) IS FALSE)) NOTNULL) WHERE (((TRIM(DISTINCT vt0.c0 COLLATE RTRIM, CASE WHEN rt0.c0 THEN rt0.c1 END)) ISNULL));
SELECT DISTINCT * FROM rt0 LEFT OUTER JOIN v0 ON 0.10897637622839418 INNER JOIN vt0 ON 0.29323926761722685 LEFT OUTER JOIN t0 ON ((((rt0.c0) IS FALSE)) NOTNULL);
SELECT ALL rt0.c3, rt0.c1, rt0.c0, v0.c1, rt0.c4, v0.c0, v0.c2 FROM v0, vt0 RIGHT OUTER JOIN rt0 ON (((vt0.c1, v0.c0, rt0.c1, rt0.c2, v0.c1)) BETWEEN (((((rt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c2))), ((((-1898815686)AND(vt0.c0)))AND(0X6f1321ef)), (NOT ('0.81620317864163')), vt0.c0, rt0.c0 COLLATE NOCASE)) AND ((CASE v0.c1  WHEN x'b9d2' THEN rt0.c1 WHEN vt0.c0 THEN rt0.c2 WHEN v0.c2 THEN rt0.c0 ELSE rt0.c0 END, rt0.c0 COLLATE RTRIM, rt0.c2, CASE v0.c0  WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c0 END, (~ (rt0.c0))))) GROUP BY rt0.c3, rt0.c1, rt0.c0, v0.c1, rt0.c4, v0.c0, v0.c2;
SELECT ALL rt0.c3, rt0.c1, rt0.c0, v0.c1, rt0.c4, v0.c0, v0.c2 FROM v0, vt0 RIGHT OUTER JOIN rt0 ON (((vt0.c1, v0.c0, rt0.c1, rt0.c2, v0.c1)) BETWEEN (((((rt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c2))), ((((-1898815686)AND(vt0.c0)))AND(0x6f1321ef)), (NOT ('0.81620317864163')), vt0.c0, rt0.c0 COLLATE NOCASE)) AND ((CASE v0.c1  WHEN x'b9d2' THEN rt0.c1 WHEN vt0.c0 THEN rt0.c2 WHEN v0.c2 THEN rt0.c0 ELSE rt0.c0 END, rt0.c0 COLLATE RTRIM, rt0.c2, CASE v0.c0  WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c0 END, (~ (rt0.c0))))) WHERE (CAST((((rt0.c3))<=((rt0.c1))) AS BLOB)) GROUP BY rt0.c3, rt0.c1, rt0.c0, v0.c1, rt0.c4, v0.c0, v0.c2 UNION SELECT ALL rt0.c3, rt0.c1, rt0.c0, v0.c1, rt0.c4, v0.c0, v0.c2 FROM v0, vt0 RIGHT OUTER JOIN rt0 ON (((vt0.c1, v0.c0, rt0.c1, rt0.c2, v0.c1)) BETWEEN (((((rt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c2))), ((((-1898815686)AND(vt0.c0)))AND(0x6f1321ef)), (NOT ('0.81620317864163')), vt0.c0, rt0.c0 COLLATE NOCASE)) AND ((CASE v0.c1  WHEN x'b9d2' THEN rt0.c1 WHEN vt0.c0 THEN rt0.c2 WHEN v0.c2 THEN rt0.c0 ELSE rt0.c0 END, rt0.c0 COLLATE RTRIM, rt0.c2, CASE v0.c0  WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c0 END, (~ (rt0.c0))))) WHERE ((NOT (CAST((((rt0.c3))<=((rt0.c1))) AS BLOB)))) GROUP BY rt0.c3, rt0.c1, rt0.c0, v0.c1, rt0.c4, v0.c0, v0.c2 UNION SELECT rt0.c3, rt0.c1, rt0.c0, v0.c1, rt0.c4, v0.c0, v0.c2 FROM v0, vt0 RIGHT OUTER JOIN rt0 ON (((vt0.c1, v0.c0, rt0.c1, rt0.c2, v0.c1)) BETWEEN (((((rt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c2))), ((((-1898815686)AND(vt0.c0)))AND(0x6f1321ef)), (NOT ('0.81620317864163')), vt0.c0, rt0.c0 COLLATE NOCASE)) AND ((CASE v0.c1  WHEN x'b9d2' THEN rt0.c1 WHEN vt0.c0 THEN rt0.c2 WHEN v0.c2 THEN rt0.c0 ELSE rt0.c0 END, rt0.c0 COLLATE RTRIM, rt0.c2, CASE v0.c0  WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c0 END, (~ (rt0.c0))))) WHERE (((CAST((((rt0.c3))<=((rt0.c1))) AS BLOB)) ISNULL)) GROUP BY rt0.c3, rt0.c1, rt0.c0, v0.c1, rt0.c4, v0.c0, v0.c2;
SELECT ALL rt0.c3, rt0.c1, rt0.c0, v0.c1, rt0.c4, v0.c0, v0.c2 FROM v0, vt0 RIGHT OUTER JOIN rt0 ON (((vt0.c1, v0.c0, rt0.c1, rt0.c2, v0.c1)) BETWEEN (((((rt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c2))), ((((-1898815686)AND(vt0.c0)))AND(0X6f1321ef)), (NOT ('0.81620317864163')), vt0.c0, rt0.c0 COLLATE NOCASE)) AND ((CASE v0.c1  WHEN x'b9d2' THEN rt0.c1 WHEN vt0.c0 THEN rt0.c2 WHEN v0.c2 THEN rt0.c0 ELSE rt0.c0 END, rt0.c0 COLLATE RTRIM, rt0.c2, CASE v0.c0  WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c0 END, (~ (rt0.c0))))) GROUP BY rt0.c3, rt0.c1, rt0.c0, v0.c1, rt0.c4, v0.c0, v0.c2;
SELECT ALL rt0.c1, v0.c1, t0.c2, v0.c2, rt0.c0, rt0.c3, rt0.c2, v0.c0, rt0.c4 FROM t0 CROSS JOIN v0 ON json_array((NOT (v0.c1)), x'cd67') FULL OUTER JOIN rt0 ON ((((t0.c2, t0.c2, v0.c2, v0.c1, rt0.c3))>((t0.c0, rt0.c0, rt0.c2, rt0.c2, rt0.c0))) IN (CAST(rt0.c4 AS INTEGER), (v0.c0 IN (v0.c1)))) GROUP BY rt0.c1, v0.c1, t0.c2, v0.c2, rt0.c0, rt0.c3, rt0.c2, v0.c0, rt0.c4;
SELECT rt0.c1, v0.c1, t0.c2, v0.c2, rt0.c0, rt0.c3, rt0.c2, v0.c0, rt0.c4 FROM t0 NOT INDEXED CROSS JOIN v0 ON json_array((NOT (v0.c1)), x'cd67') FULL OUTER JOIN rt0 ON ((((t0.c2, t0.c2, v0.c2, v0.c1, rt0.c3))>((t0.c0, rt0.c0, rt0.c2, rt0.c2, rt0.c0))) IN (CAST(rt0.c4 AS INTEGER), (v0.c0 IN (v0.c1)))) GROUP BY rt0.c1, v0.c1, t0.c2, v0.c2, rt0.c0, rt0.c3, rt0.c2, v0.c0, rt0.c4 HAVING CASE v0.c1  WHEN SUM(GROUP_CONCAT(rt0.c1)) THEN COUNT(*) WHEN TOTAL(COUNT(t0.c0)) THEN ((COUNT(*))LIKE(v0.c1)) WHEN ((((v0.c1)AND(MAX(GROUP_CONCAT(rt0.c1)))))OR(t0.c2)) THEN COUNT(SUM(COUNT(*))) WHEN ((((((((GROUP_CONCAT(TOTAL(rt0.c3)))OR(v0.c1)))OR(rt0.c4)))OR(COUNT(*))))AND(rt0.c0)) THEN (((AVG(rt0.c2), AVG(COUNT(*)), AVG(t0.c2))) NOT BETWEEN ((rt0.c1, v0.c1, v0.c1)) AND ((v0.c0, MAX(v0.c2), MAX(rt0.c1)))) WHEN CAST(v0.c1 AS REAL) THEN COUNT(*) END UNION ALL SELECT ALL rt0.c1, v0.c1, t0.c2, v0.c2, rt0.c0, rt0.c3, rt0.c2, v0.c0, rt0.c4 FROM t0 CROSS JOIN v0 ON json_array((NOT (v0.c1)), x'cd67') FULL OUTER JOIN rt0 ON ((((t0.c2, t0.c2, v0.c2, v0.c1, rt0.c3))>((t0.c0, rt0.c0, rt0.c2, rt0.c2, rt0.c0))) IN (CAST(rt0.c4 AS INTEGER), (v0.c0 IN (v0.c1)))) GROUP BY rt0.c1, v0.c1, t0.c2, v0.c2, rt0.c0, rt0.c3, rt0.c2, v0.c0, rt0.c4 HAVING (NOT (CASE v0.c1  WHEN SUM(GROUP_CONCAT(rt0.c1)) THEN COUNT(*) WHEN TOTAL(COUNT(t0.c0)) THEN ((COUNT(*))LIKE(v0.c1)) WHEN ((((v0.c1)AND(MAX(GROUP_CONCAT(rt0.c1)))))OR(t0.c2)) THEN COUNT(SUM(COUNT(*))) WHEN ((((((((GROUP_CONCAT(TOTAL(rt0.c3)))OR(v0.c1)))OR(rt0.c4)))OR(COUNT(*))))AND(rt0.c0)) THEN (((AVG(rt0.c2), AVG(COUNT(*)), AVG(t0.c2))) NOT BETWEEN ((rt0.c1, v0.c1, v0.c1)) AND ((v0.c0, MAX(v0.c2), MAX(rt0.c1)))) WHEN CAST(v0.c1 AS REAL) THEN COUNT(*) END)) UNION ALL SELECT rt0.c1, v0.c1, t0.c2, v0.c2, rt0.c0, rt0.c3, rt0.c2, v0.c0, rt0.c4 FROM t0 CROSS JOIN v0 ON json_array((NOT (v0.c1)), x'cd67') FULL OUTER JOIN rt0 ON ((((t0.c2, t0.c2, v0.c2, v0.c1, rt0.c3))>((t0.c0, rt0.c0, rt0.c2, rt0.c2, rt0.c0))) IN (CAST(rt0.c4 AS INTEGER), (v0.c0 IN (v0.c1)))) GROUP BY rt0.c1, v0.c1, t0.c2, v0.c2, rt0.c0, rt0.c3, rt0.c2, v0.c0, rt0.c4 HAVING ((CASE v0.c1  WHEN SUM(GROUP_CONCAT(rt0.c1)) THEN COUNT(*) WHEN TOTAL(COUNT(t0.c0)) THEN ((COUNT(*))LIKE(v0.c1)) WHEN ((((v0.c1)AND(MAX(GROUP_CONCAT(rt0.c1)))))OR(t0.c2)) THEN COUNT(SUM(COUNT(*))) WHEN ((((((((GROUP_CONCAT(TOTAL(rt0.c3)))OR(v0.c1)))OR(rt0.c4)))OR(COUNT(*))))AND(rt0.c0)) THEN (((AVG(rt0.c2), AVG(COUNT(*)), AVG(t0.c2))) NOT BETWEEN ((rt0.c1, v0.c1, v0.c1)) AND ((v0.c0, MAX(v0.c2), MAX(rt0.c1)))) WHEN CAST(v0.c1 AS REAL) THEN COUNT(*) END) ISNULL);
SELECT * FROM t0, rt0;
SELECT * FROM t0, rt0 WHERE ((((t0.c2 IN (t0.c0)))|(((t0.c2)AND(rt0.c0))))) UNION ALL SELECT * FROM t0, rt0 WHERE ((NOT ((((t0.c2 IN (t0.c0)))|(((t0.c2)AND(rt0.c0))))))) UNION ALL SELECT ALL * FROM t0, rt0 WHERE ((((((t0.c2 IN (t0.c0)))|(((t0.c2)AND(rt0.c0))))) ISNULL));
SELECT * FROM t0, rt0;
SELECT DISTINCT vt0.c1, v0.c1, t0.c2, v0.c2, vt0.c0 FROM vt0 CROSS JOIN t0 ON (((((((((((((vt0.c0 IN ()))OR(CASE t0.c0  WHEN t0.c0 THEN v0.c2 ELSE v0.c2 END)))OR(0.7727982339540868)))AND(v0.c0)))AND((- (v0.c0)))))AND(((vt0.c0)|(t0.c2)))))OR(((t0.c2)>(v0.c0)))) INNER JOIN v0 ON ((((((((((((vt0.c1)OR(t0.c0)))AND(vt0.c1)))AND(((v0.c1) NOT BETWEEN (x'') AND (t0.c0)))))AND(((t0.c0) BETWEEN (t0.c0) AND (t0.c2)))))OR(((vt0.c0) ISNULL))))OR(v0.c2 COLLATE BINARY));
SELECT DISTINCT vt0.c1, v0.c1, t0.c2, v0.c2, vt0.c0 FROM vt0 CROSS JOIN t0 ON (((((((((((((vt0.c0 IN ()))OR(CASE t0.c0  WHEN t0.c0 THEN v0.c2 ELSE v0.c2 END)))OR(0.7727982339540868)))AND(v0.c0)))AND((- (v0.c0)))))AND(((vt0.c0)|(t0.c2)))))OR(((t0.c2)>(v0.c0)))) INNER JOIN v0 ON ((((((((((((vt0.c1)OR(t0.c0)))AND(vt0.c1)))AND(((v0.c1) NOT BETWEEN (x'') AND (t0.c0)))))AND(((t0.c0) BETWEEN (t0.c0) AND (t0.c2)))))OR(((vt0.c0) ISNULL))))OR(v0.c2 COLLATE BINARY)) WHERE (CASE WHEN vt0.c0 THEN '-209405383' ELSE v0.c1 END COLLATE RTRIM) UNION SELECT DISTINCT vt0.c1, v0.c1, t0.c2, v0.c2, vt0.c0 FROM vt0 CROSS JOIN t0 ON (((((((((((((vt0.c0 IN ()))OR(CASE t0.c0  WHEN t0.c0 THEN v0.c2 ELSE v0.c2 END)))OR(0.7727982339540868)))AND(v0.c0)))AND((- (v0.c0)))))AND(((vt0.c0)|(t0.c2)))))OR(((t0.c2)>(v0.c0)))) INNER JOIN v0 ON ((((((((((((vt0.c1)OR(t0.c0)))AND(vt0.c1)))AND(((v0.c1) NOT BETWEEN (x'') AND (t0.c0)))))AND(((t0.c0) BETWEEN (t0.c0) AND (t0.c2)))))OR(((vt0.c0) ISNULL))))OR(v0.c2 COLLATE BINARY)) WHERE ((NOT (CASE WHEN vt0.c0 THEN '-209405383' ELSE v0.c1 END COLLATE RTRIM))) UNION SELECT DISTINCT vt0.c1, v0.c1, t0.c2, v0.c2, vt0.c0 FROM vt0 CROSS JOIN t0 ON (((((((((((((vt0.c0 IN ()))OR(CASE t0.c0  WHEN t0.c0 THEN v0.c2 ELSE v0.c2 END)))OR(0.7727982339540868)))AND(v0.c0)))AND((- (v0.c0)))))AND(((vt0.c0)|(t0.c2)))))OR(((t0.c2)>(v0.c0)))) INNER JOIN v0 ON ((((((((((((vt0.c1)OR(t0.c0)))AND(vt0.c1)))AND(((v0.c1) NOT BETWEEN (x'') AND (t0.c0)))))AND(((t0.c0) BETWEEN (t0.c0) AND (t0.c2)))))OR(((vt0.c0) ISNULL))))OR(v0.c2 COLLATE BINARY)) WHERE (((CASE WHEN vt0.c0 THEN '-209405383' ELSE v0.c1 END COLLATE RTRIM) ISNULL));
SELECT DISTINCT vt0.c1, v0.c1, t0.c2, v0.c2, vt0.c0 FROM vt0 CROSS JOIN t0 ON (((((((((((((vt0.c0 IN ()))OR(CASE t0.c0  WHEN t0.c0 THEN v0.c2 ELSE v0.c2 END)))OR(0.7727982339540868)))AND(v0.c0)))AND((- (v0.c0)))))AND(((vt0.c0)|(t0.c2)))))OR(((t0.c2)>(v0.c0)))) INNER JOIN v0 ON ((((((((((((vt0.c1)OR(t0.c0)))AND(vt0.c1)))AND(((v0.c1) NOT BETWEEN (x'') AND (t0.c0)))))AND(((t0.c0) BETWEEN (t0.c0) AND (t0.c2)))))OR(((vt0.c0) ISNULL))))OR(v0.c2 COLLATE BINARY));
SELECT ALL t0.c0, v0.c2 FROM v0, t0 GROUP BY t0.c0, v0.c2;
SELECT t0.c0, v0.c2 FROM v0, t0 WHERE ('391457779') GROUP BY t0.c0, v0.c2 UNION SELECT ALL t0.c0, v0.c2 FROM v0, t0 WHERE ((NOT ('391457779'))) GROUP BY t0.c0, v0.c2 UNION SELECT ALL t0.c0, v0.c2 FROM v0, t0 WHERE ((('391457779') ISNULL)) GROUP BY t0.c0, v0.c2;
SELECT ALL t0.c0, v0.c2 FROM v0, t0 GROUP BY t0.c0, v0.c2;
SELECT v0.c1, vt0.c0, v0.c0, t0.c0 FROM v0, vt0, t0 GROUP BY v0.c1, vt0.c0, v0.c0, t0.c0;
SELECT v0.c1, vt0.c0, v0.c0, t0.c0 FROM v0, vt0, t0 GROUP BY v0.c1, vt0.c0, v0.c0, t0.c0 HAVING json_array(vt0.c1, GROUP_CONCAT(v0.c0), TRIM(t0.c2, SUM(0.957291046426142)), ((TOTAL(0.43258974424109153)) ISNULL)) UNION ALL SELECT ALL v0.c1, vt0.c0, v0.c0, t0.c0 FROM v0, vt0, t0 GROUP BY v0.c1, vt0.c0, v0.c0, t0.c0 HAVING (NOT (json_array(vt0.c1, GROUP_CONCAT(v0.c0), TRIM(t0.c2, SUM(0.957291046426142)), ((TOTAL(0.43258974424109153)) ISNULL)))) UNION ALL SELECT ALL v0.c1, vt0.c0, v0.c0, t0.c0 FROM v0, vt0, t0 GROUP BY v0.c1, vt0.c0, v0.c0, t0.c0 HAVING ((json_array(vt0.c1, GROUP_CONCAT(v0.c0), TRIM(t0.c2, SUM(0.957291046426142)), ((TOTAL(0.43258974424109153)) ISNULL))) ISNULL);
SELECT v0.c1, vt0.c0, v0.c0, t0.c0 FROM v0, vt0, t0 GROUP BY v0.c1, vt0.c0, v0.c0, t0.c0;
SELECT v0.c1, vt0.c0, v0.c0, t0.c0 FROM v0, vt0, t0 GROUP BY v0.c1, vt0.c0, v0.c0, t0.c0 HAVING json_array(vt0.c1, GROUP_CONCAT(v0.c0), TRIM(t0.c2, SUM(0.957291046426142)), ((TOTAL(0.43258974424109153)) ISNULL)) UNION ALL SELECT ALL v0.c1, vt0.c0, v0.c0, t0.c0 FROM v0, vt0, t0 GROUP BY v0.c1, vt0.c0, v0.c0, t0.c0 HAVING (NOT (json_array(vt0.c1, GROUP_CONCAT(v0.c0), TRIM(t0.c2, SUM(0.957291046426142)), ((TOTAL(0.43258974424109153)) ISNULL)))) UNION ALL SELECT ALL v0.c1, vt0.c0, v0.c0, t0.c0 FROM v0, vt0, t0 GROUP BY v0.c1, vt0.c0, v0.c0, t0.c0 HAVING ((json_array(vt0.c1, GROUP_CONCAT(v0.c0), TRIM(t0.c2, SUM(0.957291046426142)), ((TOTAL(0.43258974424109153)) ISNULL))) ISNULL);
SELECT v0.c1, vt0.c0, v0.c0, t0.c0 FROM v0, vt0, t0 GROUP BY v0.c1, vt0.c0, v0.c0, t0.c0;
SELECT ALL t0.c0, t0.c2 FROM t0;
SELECT t0.c0, t0.c2 FROM t0 WHERE (((CAST(t0.c2 AS BLOB)) IS TRUE)) UNION ALL SELECT ALL t0.c0, t0.c2 FROM t0 WHERE ((NOT (((CAST(t0.c2 AS BLOB)) IS TRUE)))) UNION ALL SELECT ALL t0.c0, t0.c2 FROM t0 WHERE (((((CAST(t0.c2 AS BLOB)) IS TRUE)) ISNULL));
SELECT ALL t0.c0, t0.c2 FROM t0;
SELECT DISTINCT * FROM vt0, v0 LEFT OUTER JOIN t0 ON (((rt0.c1 IN ())) BETWEEN ((NOT (NULL))) AND ((((v0.c0)) NOT BETWEEN ((x'')) AND ((rt0.c0))))) LEFT OUTER JOIN rt0 ON ((t0.c0 COLLATE NOCASE) BETWEEN (((t0.c0) NOT BETWEEN (rt0.c1) AND (vt0.c0))) AND (((vt0.c0) NOTNULL)));
SELECT ALL rt0.c2, vt0.c1, rt0.c4, vt0.c0, rt0.c3, t0.c2, rt0.c0, v0.c0, v0.c1, t0.c0, rt0.c1, v0.c2 FROM v0, vt0, t0, rt0 GROUP BY rt0.c2, vt0.c1, rt0.c4, vt0.c0, rt0.c3, t0.c2, rt0.c0, v0.c0, v0.c1, t0.c0, rt0.c1, v0.c2;
SELECT rt0.c2, vt0.c1, rt0.c4, vt0.c0, rt0.c3, t0.c2, rt0.c0, v0.c0, v0.c1, t0.c0, rt0.c1, v0.c2 FROM v0, vt0, t0, rt0 WHERE (((((rt0.c3)OR(vt0.c0)))AND(rt0.c2)) COLLATE NOCASE) GROUP BY rt0.c2, vt0.c1, rt0.c4, vt0.c0, rt0.c3, t0.c2, rt0.c0, v0.c0, v0.c1, t0.c0, rt0.c1, v0.c2 UNION SELECT ALL rt0.c2, vt0.c1, rt0.c4, vt0.c0, rt0.c3, t0.c2, rt0.c0, v0.c0, v0.c1, t0.c0, rt0.c1, v0.c2 FROM v0, vt0, t0, rt0 WHERE ((NOT (((((rt0.c3)OR(vt0.c0)))AND(rt0.c2)) COLLATE NOCASE))) GROUP BY rt0.c2, vt0.c1, rt0.c4, vt0.c0, rt0.c3, t0.c2, rt0.c0, v0.c0, v0.c1, t0.c0, rt0.c1, v0.c2 UNION SELECT ALL rt0.c2, vt0.c1, rt0.c4, vt0.c0, rt0.c3, t0.c2, rt0.c0, v0.c0, v0.c1, t0.c0, rt0.c1, v0.c2 FROM v0, vt0, t0, rt0 WHERE (((((((rt0.c3)OR(vt0.c0)))AND(rt0.c2)) COLLATE NOCASE) ISNULL)) GROUP BY rt0.c2, vt0.c1, rt0.c4, vt0.c0, rt0.c3, t0.c2, rt0.c0, v0.c0, v0.c1, t0.c0, rt0.c1, v0.c2;
SELECT ALL rt0.c2, vt0.c1, rt0.c4, vt0.c0, rt0.c3, t0.c2, rt0.c0, v0.c0, v0.c1, t0.c0, rt0.c1, v0.c2 FROM v0, vt0, t0, rt0 GROUP BY rt0.c2, vt0.c1, rt0.c4, vt0.c0, rt0.c3, t0.c2, rt0.c0, v0.c0, v0.c1, t0.c0, rt0.c1, v0.c2;
SELECT ALL t0.c0 FROM t0, v0 NATURAL JOIN vt0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0, v0 NATURAL JOIN vt0 GROUP BY t0.c0 HAVING ((((((t0.c2)==(SUM(MIN(t0.c2)))))AND((NOT (t0.c0)))))OR(AVG(v0.c1))) UNION ALL SELECT ALL t0.c0 FROM t0, v0 NATURAL JOIN vt0 GROUP BY t0.c0 HAVING (NOT (((((((t0.c2)=(SUM(MIN(t0.c2)))))AND((NOT (t0.c0)))))OR(AVG(v0.c1))))) UNION ALL SELECT ALL t0.c0 FROM t0, v0 NATURAL JOIN vt0 GROUP BY t0.c0 HAVING ((((((((t0.c2)==(SUM(MIN(t0.c2)))))AND((NOT (t0.c0)))))OR(AVG(v0.c1)))) ISNULL);
SELECT ALL * FROM v0;
SELECT * FROM v0 WHERE (CASE WHEN 0.16852112761267046 THEN (((v0.c1))>=((v0.c2))) ELSE ((-1287759961)||(v0.c2)) END) UNION ALL SELECT * FROM v0 WHERE ((NOT (CASE WHEN 0.16852112761267046 THEN (((v0.c1))>=((v0.c2))) ELSE ((-1287759961)||(v0.c2)) END))) UNION ALL SELECT * FROM v0 WHERE (((CASE WHEN 0.16852112761267046 THEN (((v0.c1))>=((v0.c2))) ELSE ((-1287759961)||(v0.c2)) END) ISNULL));
SELECT ALL * FROM v0;
SELECT DISTINCT v0.c1, rt0.c4, v0.c2 FROM rt0 NATURAL JOIN v0;
SELECT DISTINCT v0.c1, rt0.c4, v0.c2 FROM rt0 NATURAL JOIN v0 WHERE (0.5644545929040485) UNION SELECT DISTINCT v0.c1, rt0.c4, v0.c2 FROM rt0 NATURAL JOIN v0 WHERE ((NOT (0.5644545929040485))) UNION SELECT DISTINCT v0.c1, rt0.c4, v0.c2 FROM rt0 NATURAL JOIN v0 WHERE (((0.5644545929040485) ISNULL));
SELECT DISTINCT v0.c1, rt0.c4, v0.c2 FROM rt0 NATURAL JOIN v0;
SELECT rt0.c1, rt0.c3, rt0.c4, vt0.c0, v0.c1 FROM v0 INNER JOIN rt0 ON ((UPPER(DISTINCT vt0.c1))<=(((vt0.c1)*(vt0.c0)))) RIGHT OUTER JOIN vt0 ON ((vt0.c1 COLLATE NOCASE) IS FALSE) GROUP BY rt0.c1, rt0.c3, rt0.c4, vt0.c0, v0.c1;
SELECT ALL rt0.c0, v0.c0, vt0.c0, vt0.c1, rt0.c1, t0.c2 FROM v0, rt0, vt0 FULL OUTER JOIN t0 ON ((((((rt0.c4)AND(v0.c0)))AND(vt0.c0))) IS FALSE) GROUP BY rt0.c0, v0.c0, vt0.c0, vt0.c1, rt0.c1, t0.c2;
SELECT rt0.c0, v0.c0, vt0.c0, vt0.c1, rt0.c1, t0.c2 FROM v0, rt0, vt0 FULL OUTER JOIN t0 ON ((((((rt0.c4)AND(v0.c0)))AND(vt0.c0))) IS FALSE) GROUP BY rt0.c0, v0.c0, vt0.c0, vt0.c1, rt0.c1, t0.c2 HAVING rt0.c4 UNION ALL SELECT ALL rt0.c0, v0.c0, vt0.c0, vt0.c1, rt0.c1, t0.c2 FROM v0, rt0, vt0 FULL OUTER JOIN t0 ON ((((((rt0.c4)AND(v0.c0)))AND(vt0.c0))) IS FALSE) GROUP BY rt0.c0, v0.c0, vt0.c0, vt0.c1, rt0.c1, t0.c2 HAVING (NOT (rt0.c4)) UNION ALL SELECT ALL rt0.c0, v0.c0, vt0.c0, vt0.c1, rt0.c1, t0.c2 FROM v0, rt0, vt0 FULL OUTER JOIN t0 ON ((((((rt0.c4)AND(v0.c0)))AND(vt0.c0))) IS FALSE) GROUP BY rt0.c0, v0.c0, vt0.c0, vt0.c1, rt0.c1, t0.c2 HAVING ((rt0.c4) ISNULL);
SELECT ALL rt0.c0, v0.c0, vt0.c0, vt0.c1, rt0.c1, t0.c2 FROM v0, rt0, vt0 FULL OUTER JOIN t0 ON ((((((rt0.c4)AND(v0.c0)))AND(vt0.c0))) IS FALSE) GROUP BY rt0.c0, v0.c0, vt0.c0, vt0.c1, rt0.c1, t0.c2;
SELECT rt0.c0, v0.c0, vt0.c0, vt0.c1, rt0.c1, t0.c2 FROM v0, rt0, vt0 FULL OUTER JOIN t0 ON ((((((rt0.c4)AND(v0.c0)))AND(vt0.c0))) IS FALSE) GROUP BY rt0.c0, v0.c0, vt0.c0, vt0.c1, rt0.c1, t0.c2 HAVING rt0.c4 UNION ALL SELECT ALL rt0.c0, v0.c0, vt0.c0, vt0.c1, rt0.c1, t0.c2 FROM v0, rt0, vt0 FULL OUTER JOIN t0 ON ((((((rt0.c4)AND(v0.c0)))AND(vt0.c0))) IS FALSE) GROUP BY rt0.c0, v0.c0, vt0.c0, vt0.c1, rt0.c1, t0.c2 HAVING (NOT (rt0.c4)) UNION ALL SELECT ALL rt0.c0, v0.c0, vt0.c0, vt0.c1, rt0.c1, t0.c2 FROM v0, rt0, vt0 FULL OUTER JOIN t0 ON ((((((rt0.c4)AND(v0.c0)))AND(vt0.c0))) IS FALSE) GROUP BY rt0.c0, v0.c0, vt0.c0, vt0.c1, rt0.c1, t0.c2 HAVING ((rt0.c4) ISNULL);
SELECT ALL rt0.c0, v0.c0, vt0.c0, vt0.c1, rt0.c1, t0.c2 FROM v0, rt0, vt0 FULL OUTER JOIN t0 ON ((((((rt0.c4)AND(v0.c0)))AND(vt0.c0))) IS FALSE) GROUP BY rt0.c0, v0.c0, vt0.c0, vt0.c1, rt0.c1, t0.c2;
SELECT ALL MAX(rt0.c3) FROM v0, rt0, vt0 ORDER BY NULL ASC  NULLS LAST;
SELECT * FROM v0, rt0, t0, vt0;
SELECT ALL * FROM v0, rt0, t0, vt0 WHERE (((((rt0.c3)AND(0.8842946011593606)))OR((((v0.c1, rt0.c4, v0.c2)) NOT BETWEEN ((v0.c2, v0.c2, v0.c0)) AND ((vt0.c1, rt0.c2, v0.c2)))))) UNION ALL SELECT ALL * FROM v0, rt0, t0 NOT INDEXED, vt0 WHERE ((NOT (((((rt0.c3)AND(0.8842946011593606)))OR((((v0.c1, rt0.c4, v0.c2)) NOT BETWEEN ((v0.c2, v0.c2, v0.c0)) AND ((vt0.c1, rt0.c2, v0.c2)))))))) UNION ALL SELECT ALL * FROM v0, rt0, t0, vt0 WHERE (((((((rt0.c3)AND(0.8842946011593606)))OR((((v0.c1, rt0.c4, v0.c2)) NOT BETWEEN ((v0.c2, v0.c2, v0.c0)) AND ((vt0.c1, rt0.c2, v0.c2)))))) ISNULL));
SELECT * FROM v0, rt0, t0, vt0;
SELECT DISTINCT v0.c0, v0.c1 FROM v0;
SELECT DISTINCT v0.c0, v0.c1 FROM v0 WHERE (((((v0.c0) BETWEEN (v0.c1) AND (v0.c1)))/((((v0.c0)) NOT BETWEEN ((NULL)) AND ((v0.c2)))))) UNION SELECT DISTINCT v0.c0, v0.c1 FROM v0 WHERE ((NOT (((((v0.c0) BETWEEN (v0.c1) AND (v0.c1)))/((((v0.c0)) NOT BETWEEN ((NULL)) AND ((v0.c2)))))))) UNION SELECT DISTINCT v0.c0, v0.c1 FROM v0 WHERE (((((((v0.c0) BETWEEN (v0.c1) AND (v0.c1)))/((((v0.c0)) NOT BETWEEN ((NULL)) AND ((v0.c2)))))) ISNULL));
SELECT DISTINCT v0.c0, v0.c1 FROM v0;
SELECT ALL rt0.c3, rt0.c1, rt0.c4, rt0.c2 FROM rt0 NOT INDEXED GROUP BY rt0.c3, rt0.c1, rt0.c4, rt0.c2;
SELECT ALL rt0.c3, rt0.c1, rt0.c4, rt0.c2 FROM rt0 WHERE (rt0.c1) GROUP BY rt0.c3, rt0.c1, rt0.c4, rt0.c2 UNION SELECT ALL rt0.c3, rt0.c1, rt0.c4, rt0.c2 FROM rt0 WHERE ((NOT (rt0.c1))) GROUP BY rt0.c3, rt0.c1, rt0.c4, rt0.c2 UNION SELECT rt0.c3, rt0.c1, rt0.c4, rt0.c2 FROM rt0 WHERE (((rt0.c1) ISNULL)) GROUP BY rt0.c3, rt0.c1, rt0.c4, rt0.c2;
SELECT ALL rt0.c3, rt0.c1, rt0.c4, rt0.c2 FROM rt0 NOT INDEXED GROUP BY rt0.c3, rt0.c1, rt0.c4, rt0.c2;
SELECT ALL rt0.c3, rt0.c4, rt0.c0, v0.c2, rt0.c1, t0.c0 FROM rt0, t0, vt0, v0 GROUP BY rt0.c3, rt0.c4, rt0.c0, v0.c2, rt0.c1, t0.c0;
SELECT rt0.c3, rt0.c4, rt0.c0, v0.c2, rt0.c1, t0.c0 FROM rt0, t0, vt0, v0 GROUP BY rt0.c3, rt0.c4, rt0.c0, v0.c2, rt0.c1, t0.c0 HAVING SUM(COUNT(*)) UNION ALL SELECT rt0.c3, rt0.c4, rt0.c0, v0.c2, rt0.c1, t0.c0 FROM rt0, t0, vt0, v0 GROUP BY rt0.c3, rt0.c4, rt0.c0, v0.c2, rt0.c1, t0.c0 HAVING (NOT (SUM(COUNT(*)))) UNION ALL SELECT rt0.c3, rt0.c4, rt0.c0, v0.c2, rt0.c1, t0.c0 FROM rt0, t0, vt0, v0 GROUP BY rt0.c3, rt0.c4, rt0.c0, v0.c2, rt0.c1, t0.c0 HAVING ((SUM(COUNT(*))) ISNULL);
SELECT ALL * FROM vt0;
SELECT * FROM vt0 WHERE (0.339063214522467 COLLATE NOCASE) UNION ALL SELECT * FROM vt0 WHERE ((NOT (0.339063214522467 COLLATE NOCASE))) UNION ALL SELECT ALL * FROM vt0 WHERE (((0.339063214522467 COLLATE NOCASE) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT * FROM t0, v0, vt0, rt0;
SELECT DISTINCT * FROM t0, v0, vt0, rt0 WHERE ((((((vt0.c1) ISNULL)))>=((CAST(t0.c0 AS REAL))))) UNION SELECT DISTINCT * FROM t0, v0, vt0, rt0 WHERE ((NOT ((((((vt0.c1) ISNULL)))>=((CAST(t0.c0 AS REAL))))))) UNION SELECT DISTINCT * FROM t0, v0, vt0, rt0 WHERE ((((((((vt0.c1) ISNULL)))>=((CAST(t0.c0 AS REAL))))) ISNULL));
SELECT DISTINCT * FROM t0, v0, vt0, rt0;
SELECT ALL rt0.c1, v0.c2, v0.c0, rt0.c2, t0.c2, t0.c0, rt0.c4, rt0.c3, rt0.c0, v0.c1 FROM v0, rt0 FULL OUTER JOIN t0 ON ((CAST(t0.c0 AS BLOB)) BETWEEN (((((((((rt0.c4)AND(rt0.c2)))OR(rt0.c3)))AND(rt0.c0)))AND(rt0.c0))) AND (t0.c0 COLLATE RTRIM)) GROUP BY rt0.c1, v0.c2, v0.c0, rt0.c2, t0.c2, t0.c0, rt0.c4, rt0.c3, rt0.c0, v0.c1;
SELECT ALL rt0.c1, v0.c2, v0.c0, rt0.c2, t0.c2, t0.c0, rt0.c4, rt0.c3, rt0.c0, v0.c1 FROM v0, rt0 FULL OUTER JOIN t0 ON ((CAST(t0.c0 AS BLOB)) BETWEEN (((((((((rt0.c4)AND(rt0.c2)))OR(rt0.c3)))AND(rt0.c0)))AND(rt0.c0))) AND (t0.c0 COLLATE RTRIM)) WHERE (0xffffffffa5fc1eeb) GROUP BY rt0.c1, v0.c2, v0.c0, rt0.c2, t0.c2, t0.c0, rt0.c4, rt0.c3, rt0.c0, v0.c1 UNION SELECT ALL rt0.c1, v0.c2, v0.c0, rt0.c2, t0.c2, t0.c0, rt0.c4, rt0.c3, rt0.c0, v0.c1 FROM v0, rt0 FULL OUTER JOIN t0 ON ((CAST(t0.c0 AS BLOB)) BETWEEN (((((((((rt0.c4)AND(rt0.c2)))OR(rt0.c3)))AND(rt0.c0)))AND(rt0.c0))) AND (t0.c0 COLLATE RTRIM)) WHERE ((NOT (0xffffffffa5fc1eeb))) GROUP BY rt0.c1, v0.c2, v0.c0, rt0.c2, t0.c2, t0.c0, rt0.c4, rt0.c3, rt0.c0, v0.c1 UNION SELECT ALL rt0.c1, v0.c2, v0.c0, rt0.c2, t0.c2, t0.c0, rt0.c4, rt0.c3, rt0.c0, v0.c1 FROM v0, rt0 FULL OUTER JOIN t0 ON ((CAST(t0.c0 AS BLOB)) BETWEEN (((((((((rt0.c4)AND(rt0.c2)))OR(rt0.c3)))AND(rt0.c0)))AND(rt0.c0))) AND (t0.c0 COLLATE RTRIM)) WHERE (((0Xffffffffa5fc1eeb) ISNULL)) GROUP BY rt0.c1, v0.c2, v0.c0, rt0.c2, t0.c2, t0.c0, rt0.c4, rt0.c3, rt0.c0, v0.c1;
SELECT ALL rt0.c1, v0.c2, v0.c0, rt0.c2, t0.c2, t0.c0, rt0.c4, rt0.c3, rt0.c0, v0.c1 FROM v0, rt0 FULL OUTER JOIN t0 ON ((CAST(t0.c0 AS BLOB)) BETWEEN (((((((((rt0.c4)AND(rt0.c2)))OR(rt0.c3)))AND(rt0.c0)))AND(rt0.c0))) AND (t0.c0 COLLATE RTRIM)) GROUP BY rt0.c1, v0.c2, v0.c0, rt0.c2, t0.c2, t0.c0, rt0.c4, rt0.c3, rt0.c0, v0.c1;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING COUNT(*) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING COUNT(*) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0, v0.c1, v0.c0, v0.c2, vt0.c1, vt0.c0, t0.c2 FROM t0, vt0, v0;
SELECT t0.c0, v0.c1, v0.c0, v0.c2, vt0.c1, vt0.c0, t0.c2 FROM t0, vt0, v0 WHERE (CAST(t0.c2 AS TEXT)) UNION ALL SELECT t0.c0, v0.c1, v0.c0, v0.c2, vt0.c1, vt0.c0, t0.c2 FROM t0, vt0, v0 WHERE ((NOT (CAST(t0.c2 AS TEXT)))) UNION ALL SELECT t0.c0, v0.c1, v0.c0, v0.c2, vt0.c1, vt0.c0, t0.c2 FROM t0, vt0, v0 WHERE (((CAST(t0.c2 AS TEXT)) ISNULL));
SELECT t0.c0, v0.c1, v0.c0, v0.c2, vt0.c1, vt0.c0, t0.c2 FROM t0, vt0, v0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (t0.c2) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (t0.c2))) UNION SELECT DISTINCT * FROM t0 WHERE (((t0.c2) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT rt0.c4, rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c4, rt0.c2, rt0.c1, rt0.c0;
SELECT ALL rt0.c4, rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE (((((rt0.c2))>((rt0.c4))) IN ())) GROUP BY rt0.c4, rt0.c2, rt0.c1, rt0.c0 UNION SELECT rt0.c4, rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (((((rt0.c2))>((rt0.c4))) IN ())))) GROUP BY rt0.c4, rt0.c2, rt0.c1, rt0.c0 UNION SELECT ALL rt0.c4, rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE (((((((rt0.c2))>((rt0.c4))) IN ())) ISNULL)) GROUP BY rt0.c4, rt0.c2, rt0.c1, rt0.c0;
SELECT rt0.c4, rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c4, rt0.c2, rt0.c1, rt0.c0;
SELECT ALL rt0.c0, v0.c2, rt0.c4, t0.c0, v0.c1, vt0.c0, vt0.c1, rt0.c1, rt0.c3, v0.c0, t0.c2 FROM v0, rt0, t0, vt0 GROUP BY rt0.c0, v0.c2, rt0.c4, t0.c0, v0.c1, vt0.c0, vt0.c1, rt0.c1, rt0.c3, v0.c0, t0.c2;
SELECT rt0.c0, v0.c2, rt0.c4, t0.c0, v0.c1, vt0.c0, vt0.c1, rt0.c1, rt0.c3, v0.c0, t0.c2 FROM v0, rt0, t0, vt0 GROUP BY rt0.c0, v0.c2, rt0.c4, t0.c0, v0.c1, vt0.c0, vt0.c1, rt0.c1, rt0.c3, v0.c0, t0.c2 HAVING rt0.c2 UNION ALL SELECT rt0.c0, v0.c2, rt0.c4, t0.c0, v0.c1, vt0.c0, vt0.c1, rt0.c1, rt0.c3, v0.c0, t0.c2 FROM v0, rt0, t0, vt0 GROUP BY rt0.c0, v0.c2, rt0.c4, t0.c0, v0.c1, vt0.c0, vt0.c1, rt0.c1, rt0.c3, v0.c0, t0.c2 HAVING (NOT (rt0.c2)) UNION ALL SELECT rt0.c0, v0.c2, rt0.c4, t0.c0, v0.c1, vt0.c0, vt0.c1, rt0.c1, rt0.c3, v0.c0, t0.c2 FROM v0, rt0, t0, vt0 GROUP BY rt0.c0, v0.c2, rt0.c4, t0.c0, v0.c1, vt0.c0, vt0.c1, rt0.c1, rt0.c3, v0.c0, t0.c2 HAVING ((rt0.c2) ISNULL);
SELECT ALL rt0.c0, v0.c2, rt0.c4, t0.c0, v0.c1, vt0.c0, vt0.c1, rt0.c1, rt0.c3, v0.c0, t0.c2 FROM v0, rt0, t0, vt0 GROUP BY rt0.c0, v0.c2, rt0.c4, t0.c0, v0.c1, vt0.c0, vt0.c1, rt0.c1, rt0.c3, v0.c0, t0.c2;
SELECT rt0.c0, v0.c2, rt0.c4, t0.c0, v0.c1, vt0.c0, vt0.c1, rt0.c1, rt0.c3, v0.c0, t0.c2 FROM v0, rt0, t0, vt0 GROUP BY rt0.c0, v0.c2, rt0.c4, t0.c0, v0.c1, vt0.c0, vt0.c1, rt0.c1, rt0.c3, v0.c0, t0.c2 HAVING rt0.c2 UNION ALL SELECT rt0.c0, v0.c2, rt0.c4, t0.c0, v0.c1, vt0.c0, vt0.c1, rt0.c1, rt0.c3, v0.c0, t0.c2 FROM v0, rt0, t0, vt0 GROUP BY rt0.c0, v0.c2, rt0.c4, t0.c0, v0.c1, vt0.c0, vt0.c1, rt0.c1, rt0.c3, v0.c0, t0.c2 HAVING (NOT (rt0.c2)) UNION ALL SELECT rt0.c0, v0.c2, rt0.c4, t0.c0, v0.c1, vt0.c0, vt0.c1, rt0.c1, rt0.c3, v0.c0, t0.c2 FROM v0, rt0, t0, vt0 GROUP BY rt0.c0, v0.c2, rt0.c4, t0.c0, v0.c1, vt0.c0, vt0.c1, rt0.c1, rt0.c3, v0.c0, t0.c2 HAVING ((rt0.c2) ISNULL);
SELECT ALL rt0.c0, v0.c2, rt0.c4, t0.c0, v0.c1, vt0.c0, vt0.c1, rt0.c1, rt0.c3, v0.c0, t0.c2 FROM v0, rt0, t0, vt0 GROUP BY rt0.c0, v0.c2, rt0.c4, t0.c0, v0.c1, vt0.c0, vt0.c1, rt0.c1, rt0.c3, v0.c0, t0.c2;
SELECT ALL v0.c1, t0.c0, vt0.c1, v0.c0, rt0.c1, t0.c2, rt0.c2, v0.c2 FROM rt0, v0, t0, vt0;
SELECT v0.c1, t0.c0, vt0.c1, v0.c0, rt0.c1, t0.c2, rt0.c2, v0.c2 FROM rt0, v0, t0, vt0 WHERE (CASE t0.c0 COLLATE RTRIM  WHEN rt0.c0 THEN (t0.c0 IN ()) WHEN (NOT (vt0.c0)) THEN CAST(t0.c0 AS BLOB) WHEN ((v0.c1)%(vt0.c1)) THEN TRIM(DISTINCT vt0.c0, x'40a4') ELSE ((rt0.c0)&(rt0.c2)) END) UNION ALL SELECT v0.c1, t0.c0, vt0.c1, v0.c0, rt0.c1, t0.c2, rt0.c2, v0.c2 FROM rt0, v0, t0, vt0 WHERE ((NOT (CASE t0.c0 COLLATE RTRIM  WHEN rt0.c0 THEN (t0.c0 IN ()) WHEN (NOT (vt0.c0)) THEN CAST(t0.c0 AS BLOB) WHEN ((v0.c1)%(vt0.c1)) THEN TRIM(DISTINCT vt0.c0, x'40a4') ELSE ((rt0.c0)&(rt0.c2)) END))) UNION ALL SELECT ALL v0.c1, t0.c0, vt0.c1, v0.c0, rt0.c1, t0.c2, rt0.c2, v0.c2 FROM rt0, v0, t0, vt0 WHERE (((CASE t0.c0 COLLATE RTRIM  WHEN rt0.c0 THEN (t0.c0 IN ()) WHEN (NOT (vt0.c0)) THEN CAST(t0.c0 AS BLOB) WHEN ((v0.c1)%(vt0.c1)) THEN TRIM(DISTINCT vt0.c0, x'40a4') ELSE ((rt0.c0)&(rt0.c2)) END) ISNULL));
SELECT ALL v0.c1, t0.c0, vt0.c1, v0.c0, rt0.c1, t0.c2, rt0.c2, v0.c2 FROM rt0, v0, t0, vt0;
SELECT DISTINCT * FROM vt0 NATURAL JOIN t0;
SELECT DISTINCT * FROM vt0 NATURAL JOIN t0 WHERE (CAST(x'' AS INTEGER)) UNION SELECT DISTINCT * FROM vt0 NATURAL JOIN t0 WHERE ((NOT (CAST(x'' AS INTEGER)))) UNION SELECT DISTINCT * FROM vt0 NATURAL JOIN t0 WHERE (((CAST(x'' AS INTEGER)) ISNULL));
SELECT DISTINCT * FROM vt0 NATURAL JOIN t0;
SELECT ALL v0.c1, v0.c2, v0.c0, t0.c0 FROM vt0, v0, t0, rt0 GROUP BY v0.c1, v0.c2, v0.c0, t0.c0;
SELECT ALL v0.c1, v0.c2, v0.c0, t0.c0 FROM vt0 NOT INDEXED, v0, t0, rt0 WHERE ((((((((((NOT (t0.c2)))AND(((v0.c2)OR(rt0.c1)))))AND((- (v0.c0)))))OR(CAST(rt0.c3 AS TEXT))))AND((+ (v0.c2))))) GROUP BY v0.c1, v0.c2, v0.c0, t0.c0 UNION SELECT v0.c1, v0.c2, v0.c0, t0.c0 FROM vt0 NOT INDEXED, v0, t0, rt0 WHERE ((NOT ((((((((((NOT (t0.c2)))AND(((v0.c2)OR(rt0.c1)))))AND((- (v0.c0)))))OR(CAST(rt0.c3 AS TEXT))))AND((+ (v0.c2))))))) GROUP BY v0.c1, v0.c2, v0.c0, t0.c0 UNION SELECT ALL v0.c1, v0.c2, v0.c0, t0.c0 FROM vt0, v0, t0, rt0 WHERE ((((((((((((NOT (t0.c2)))AND(((v0.c2)OR(rt0.c1)))))AND((- (v0.c0)))))OR(CAST(rt0.c3 AS TEXT))))AND((+ (v0.c2))))) ISNULL)) GROUP BY v0.c1, v0.c2, v0.c0, t0.c0;
SELECT ALL v0.c1, v0.c2, v0.c0, t0.c0 FROM vt0, v0, t0, rt0 GROUP BY v0.c1, v0.c2, v0.c0, t0.c0;
SELECT ALL v0.c1 FROM v0 GROUP BY v0.c1;
SELECT ALL v0.c1 FROM v0 GROUP BY v0.c1 HAVING TOTAL(0xffffffffede98c20) UNION ALL SELECT v0.c1 FROM v0 GROUP BY v0.c1 HAVING (NOT (TOTAL(0xffffffffede98c20))) UNION ALL SELECT ALL v0.c1 FROM v0 GROUP BY v0.c1 HAVING ((TOTAL(0Xffffffffede98c20)) ISNULL);
SELECT ALL v0.c1 FROM v0 GROUP BY v0.c1;
SELECT ALL v0.c1 FROM v0 GROUP BY v0.c1 HAVING TOTAL(0xffffffffede98c20) UNION ALL SELECT v0.c1 FROM v0 GROUP BY v0.c1 HAVING (NOT (TOTAL(0xffffffffede98c20))) UNION ALL SELECT ALL v0.c1 FROM v0 GROUP BY v0.c1 HAVING ((TOTAL(0Xffffffffede98c20)) ISNULL);
SELECT ALL v0.c1 FROM v0 GROUP BY v0.c1;
SELECT t0.c2, v0.c1, v0.c0, t0.c0 FROM t0, v0;
SELECT ALL t0.c2, v0.c1, v0.c0, t0.c0 FROM t0, v0 WHERE ((((CAST(t0.c2 AS INTEGER)))!=(((t0.c0 IN (v0.c0, '1253504866', v0.c1)))))) UNION ALL SELECT ALL t0.c2, v0.c1, v0.c0, t0.c0 FROM t0, v0 WHERE ((NOT ((((CAST(t0.c2 AS INTEGER)))<>(((t0.c0 IN (v0.c0, '1253504866', v0.c1)))))))) UNION ALL SELECT t0.c2, v0.c1, v0.c0, t0.c0 FROM t0, v0 WHERE ((((((CAST(t0.c2 AS INTEGER)))<>(((t0.c0 IN (v0.c0, '1253504866', v0.c1)))))) ISNULL));
SELECT t0.c2, v0.c1, v0.c0, t0.c0 FROM t0, v0;
SELECT DISTINCT * FROM rt0, vt0 INNER JOIN t0 ON ((((((((((rt0.c0)OR(v0.c2)))OR(rt0.c0)))AND(rt0.c1)))AND(rt0.c2))) BETWEEN (((vt0.c1)>=(vt0.c1))) AND (CASE WHEN rt0.c2 THEN v0.c0 ELSE x'' END)) FULL OUTER JOIN v0 ON ((((rt0.c0)IS NOT(v0.c1)))>>(((v0.c1) IS FALSE)));
SELECT ALL rt0.c3, t0.c2 FROM rt0, t0, v0, vt0 GROUP BY rt0.c3, t0.c2;
SELECT ALL rt0.c3, t0.c2 FROM rt0, t0, v0, vt0 WHERE (CASE WHEN ((vt0.c1)>=(rt0.c3)) THEN x'' ELSE ((x'') NOTNULL) END) GROUP BY rt0.c3, t0.c2 UNION SELECT ALL rt0.c3, t0.c2 FROM rt0, t0, v0, vt0 WHERE ((NOT (CASE WHEN ((vt0.c1)>=(rt0.c3)) THEN x'' ELSE ((x'') NOTNULL) END))) GROUP BY rt0.c3, t0.c2 UNION SELECT ALL rt0.c3, t0.c2 FROM rt0, t0, v0, vt0 WHERE (((CASE WHEN ((vt0.c1)>=(rt0.c3)) THEN x'' ELSE ((x'') NOTNULL) END) ISNULL)) GROUP BY rt0.c3, t0.c2;
SELECT ALL rt0.c3, t0.c2 FROM rt0, t0, v0, vt0 GROUP BY rt0.c3, t0.c2;
SELECT ALL rt0.c2 FROM rt0, t0, v0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0, t0, v0 GROUP BY rt0.c2 HAVING rt0.c4 UNION ALL SELECT rt0.c2 FROM rt0, t0, v0 GROUP BY rt0.c2 HAVING (NOT (rt0.c4)) UNION ALL SELECT rt0.c2 FROM rt0, t0, v0 GROUP BY rt0.c2 HAVING ((rt0.c4) ISNULL);
SELECT ALL rt0.c2 FROM rt0, t0, v0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0, t0, v0 GROUP BY rt0.c2 HAVING rt0.c4 UNION ALL SELECT rt0.c2 FROM rt0, t0, v0 GROUP BY rt0.c2 HAVING (NOT (rt0.c4)) UNION ALL SELECT rt0.c2 FROM rt0, t0, v0 GROUP BY rt0.c2 HAVING ((rt0.c4) ISNULL);
SELECT ALL rt0.c2 FROM rt0, t0, v0 GROUP BY rt0.c2;
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE (x'5644') UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (x'5644'))) UNION ALL SELECT ALL * FROM rt0 WHERE (((x'5644') ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (rt0.c4) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (rt0.c4))) UNION SELECT DISTINCT * FROM rt0 WHERE (((rt0.c4) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT v0.c0, rt0.c3, t0.c0, v0.c2, v0.c1, rt0.c0, rt0.c1, rt0.c4, rt0.c2 FROM t0, rt0, v0 GROUP BY v0.c0, rt0.c3, t0.c0, v0.c2, v0.c1, rt0.c0, rt0.c1, rt0.c4, rt0.c2;
SELECT ALL v0.c0, rt0.c3, t0.c0, v0.c2, v0.c1, rt0.c0, rt0.c1, rt0.c4, rt0.c2 FROM t0, rt0, v0 WHERE (CAST(((t0.c0)&('')) AS REAL)) GROUP BY v0.c0, rt0.c3, t0.c0, v0.c2, v0.c1, rt0.c0, rt0.c1, rt0.c4, rt0.c2 UNION SELECT v0.c0, rt0.c3, t0.c0, v0.c2, v0.c1, rt0.c0, rt0.c1, rt0.c4, rt0.c2 FROM t0, rt0, v0 WHERE ((NOT (CAST(((t0.c0)&('')) AS REAL)))) GROUP BY v0.c0, rt0.c3, t0.c0, v0.c2, v0.c1, rt0.c0, rt0.c1, rt0.c4, rt0.c2 UNION SELECT ALL v0.c0, rt0.c3, t0.c0, v0.c2, v0.c1, rt0.c0, rt0.c1, rt0.c4, rt0.c2 FROM t0 NOT INDEXED, rt0, v0 WHERE (((CAST(((t0.c0)&('')) AS REAL)) ISNULL)) GROUP BY v0.c0, rt0.c3, t0.c0, v0.c2, v0.c1, rt0.c0, rt0.c1, rt0.c4, rt0.c2;
SELECT v0.c0, rt0.c3, t0.c0, v0.c2, v0.c1, rt0.c0, rt0.c1, rt0.c4, rt0.c2 FROM t0, rt0, v0 GROUP BY v0.c0, rt0.c3, t0.c0, v0.c2, v0.c1, rt0.c0, rt0.c1, rt0.c4, rt0.c2;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING ((TOTAL(COUNT('E& xca/'))) NOT NULL) UNION ALL SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING (NOT (((TOTAL(COUNT('E& xca/'))) NOT NULL))) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING ((((TOTAL(COUNT('E& xca/'))) NOT NULL)) ISNULL);
SELECT ALL vt0.c0, vt0.c1 FROM vt0;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 WHERE (((ABS(DISTINCT vt0.c0)) NOT BETWEEN (((vt0.c0)|('A(3FS|'))) AND (((((((((vt0.c0)OR(vt0.c1)))OR(vt0.c0)))OR('')))AND(vt0.c0))))) UNION ALL SELECT vt0.c0, vt0.c1 FROM vt0 WHERE ((NOT (((ABS(DISTINCT vt0.c0)) NOT BETWEEN (((vt0.c0)|('A(3FS|'))) AND (((((((((vt0.c0)OR(vt0.c1)))OR(vt0.c0)))OR('')))AND(vt0.c0))))))) UNION ALL SELECT vt0.c0, vt0.c1 FROM vt0 WHERE (((((ABS(DISTINCT vt0.c0)) NOT BETWEEN (((vt0.c0)|('A(3FS|'))) AND (((((((((vt0.c0)OR(vt0.c1)))OR(vt0.c0)))OR('')))AND(vt0.c0))))) ISNULL));
SELECT ALL vt0.c0, vt0.c1 FROM vt0;
SELECT DISTINCT v0.c1, v0.c0, rt0.c3, t0.c2, v0.c2, rt0.c4 FROM rt0 NOT INDEXED FULL OUTER JOIN v0 ON ((((rt0.c3)IS(v0.c0))) NOT NULL) LEFT OUTER JOIN vt0 ON NULL FULL OUTER JOIN t0 ON ((((IFNULL(DISTINCT t0.c0, t0.c2))OR(v0.c1 COLLATE NOCASE)))OR((~ (t0.c2))));
SELECT DISTINCT v0.c1, v0.c0, rt0.c3, t0.c2, v0.c2, rt0.c4 FROM rt0 FULL OUTER JOIN v0 ON ((((rt0.c3)IS(v0.c0))) NOT NULL) LEFT OUTER JOIN vt0 ON NULL FULL OUTER JOIN t0 ON ((((IFNULL(DISTINCT t0.c0, t0.c2))OR(v0.c1 COLLATE NOCASE)))OR((~ (t0.c2)))) WHERE (0.9280257595238883) UNION SELECT DISTINCT v0.c1, v0.c0, rt0.c3, t0.c2, v0.c2, rt0.c4 FROM rt0 FULL OUTER JOIN v0 ON ((((rt0.c3)IS(v0.c0))) NOT NULL) LEFT OUTER JOIN vt0 ON NULL FULL OUTER JOIN t0 ON ((((IFNULL(DISTINCT t0.c0, t0.c2))OR(v0.c1 COLLATE NOCASE)))OR((~ (t0.c2)))) WHERE ((NOT (0.9280257595238883))) UNION SELECT DISTINCT v0.c1, v0.c0, rt0.c3, t0.c2, v0.c2, rt0.c4 FROM rt0 FULL OUTER JOIN v0 ON ((((rt0.c3)IS(v0.c0))) NOT NULL) LEFT OUTER JOIN vt0 ON NULL FULL OUTER JOIN t0 ON ((((IFNULL(DISTINCT t0.c0, t0.c2))OR(v0.c1 COLLATE NOCASE)))OR((~ (t0.c2)))) WHERE (((0.9280257595238883) ISNULL));
SELECT DISTINCT v0.c1, v0.c0, rt0.c3, t0.c2, v0.c2, rt0.c4 FROM rt0 NOT INDEXED FULL OUTER JOIN v0 ON ((((rt0.c3)IS(v0.c0))) NOT NULL) LEFT OUTER JOIN vt0 ON NULL FULL OUTER JOIN t0 ON ((((IFNULL(DISTINCT t0.c0, t0.c2))OR(v0.c1 COLLATE NOCASE)))OR((~ (t0.c2))));
SELECT ALL vt0.c0, v0.c2, v0.c0, vt0.c1, v0.c1 FROM vt0, v0 GROUP BY vt0.c0, v0.c2, v0.c0, vt0.c1, v0.c1;
SELECT vt0.c0, v0.c2, v0.c0, vt0.c1, v0.c1 FROM vt0, v0 WHERE (((0.4423373833539228) NOT BETWEEN ((NOT (vt0.c0))) AND (CAST(v0.c0 AS TEXT)))) GROUP BY vt0.c0, v0.c2, v0.c0, vt0.c1, v0.c1 UNION SELECT ALL vt0.c0, v0.c2, v0.c0, vt0.c1, v0.c1 FROM vt0, v0 WHERE ((NOT (((0.4423373833539228) NOT BETWEEN ((NOT (vt0.c0))) AND (CAST(v0.c0 AS TEXT)))))) GROUP BY vt0.c0, v0.c2, v0.c0, vt0.c1, v0.c1 UNION SELECT ALL vt0.c0, v0.c2, v0.c0, vt0.c1, v0.c1 FROM vt0, v0 WHERE (((((0.4423373833539228) NOT BETWEEN ((NOT (vt0.c0))) AND (CAST(v0.c0 AS TEXT)))) ISNULL)) GROUP BY vt0.c0, v0.c2, v0.c0, vt0.c1, v0.c1;
SELECT ALL vt0.c0, v0.c2, v0.c0, vt0.c1, v0.c1 FROM vt0, v0 GROUP BY vt0.c0, v0.c2, v0.c0, vt0.c1, v0.c1;
SELECT vt0.c0, rt0.c3, rt0.c0, rt0.c2, v0.c0 FROM t0, v0, rt0, vt0 GROUP BY vt0.c0, rt0.c3, rt0.c0, rt0.c2, v0.c0;
SELECT ALL vt0.c0, rt0.c3, rt0.c0, rt0.c2, v0.c0 FROM t0, v0, rt0, vt0 GROUP BY vt0.c0, rt0.c3, rt0.c0, rt0.c2, v0.c0 HAVING AVG(x'') UNION ALL SELECT vt0.c0, rt0.c3, rt0.c0, rt0.c2, v0.c0 FROM t0, v0, rt0, vt0 GROUP BY vt0.c0, rt0.c3, rt0.c0, rt0.c2, v0.c0 HAVING (NOT (AVG(x''))) UNION ALL SELECT ALL vt0.c0, rt0.c3, rt0.c0, rt0.c2, v0.c0 FROM t0, v0, rt0, vt0 GROUP BY vt0.c0, rt0.c3, rt0.c0, rt0.c2, v0.c0 HAVING ((AVG(x'')) ISNULL);
SELECT vt0.c0, rt0.c3, rt0.c0, rt0.c2, v0.c0 FROM t0, v0, rt0, vt0 GROUP BY vt0.c0, rt0.c3, rt0.c0, rt0.c2, v0.c0;
SELECT ALL vt0.c0, rt0.c3, rt0.c0, rt0.c2, v0.c0 FROM t0, v0, rt0, vt0 GROUP BY vt0.c0, rt0.c3, rt0.c0, rt0.c2, v0.c0 HAVING AVG(x'') UNION ALL SELECT vt0.c0, rt0.c3, rt0.c0, rt0.c2, v0.c0 FROM t0, v0, rt0, vt0 GROUP BY vt0.c0, rt0.c3, rt0.c0, rt0.c2, v0.c0 HAVING (NOT (AVG(x''))) UNION ALL SELECT ALL vt0.c0, rt0.c3, rt0.c0, rt0.c2, v0.c0 FROM t0, v0, rt0, vt0 GROUP BY vt0.c0, rt0.c3, rt0.c0, rt0.c2, v0.c0 HAVING ((AVG(x'')) ISNULL);
SELECT vt0.c0, rt0.c3, rt0.c0, rt0.c2, v0.c0 FROM t0, v0, rt0, vt0 GROUP BY vt0.c0, rt0.c3, rt0.c0, rt0.c2, v0.c0;
SELECT rt0.c0, v0.c1, t0.c0 FROM vt0, rt0, t0, v0;
SELECT rt0.c0, v0.c1, t0.c0 FROM vt0, rt0, t0, v0 WHERE (rt0.c2) UNION ALL SELECT ALL rt0.c0, v0.c1, t0.c0 FROM vt0, rt0, t0, v0 WHERE ((NOT (rt0.c2))) UNION ALL SELECT rt0.c0, v0.c1, t0.c0 FROM vt0, rt0, t0, v0 WHERE (((rt0.c2) ISNULL));
SELECT rt0.c0, v0.c1, t0.c0 FROM vt0, rt0, t0, v0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (0.47611315472486115) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (0.47611315472486115))) UNION SELECT DISTINCT * FROM v0 WHERE (((0.47611315472486115) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT ALL rt0.c1, v0.c2, rt0.c3 FROM t0, rt0, v0 GROUP BY rt0.c1, v0.c2, rt0.c3;
SELECT ALL rt0.c1, v0.c2, rt0.c3 FROM t0, rt0, v0 WHERE (((IFNULL(DISTINCT v0.c2, v0.c0)) NOT BETWEEN (CASE t0.c2  WHEN v0.c2 THEN rt0.c0 ELSE v0.c0 END) AND (v0.c1 COLLATE BINARY))) GROUP BY rt0.c1, v0.c2, rt0.c3 UNION SELECT ALL rt0.c1, v0.c2, rt0.c3 FROM t0, rt0, v0 WHERE ((NOT (((IFNULL(DISTINCT v0.c2, v0.c0)) NOT BETWEEN (CASE t0.c2  WHEN v0.c2 THEN rt0.c0 ELSE v0.c0 END) AND (v0.c1 COLLATE BINARY))))) GROUP BY rt0.c1, v0.c2, rt0.c3 UNION SELECT ALL rt0.c1, v0.c2, rt0.c3 FROM t0, rt0, v0 WHERE (((((IFNULL(DISTINCT v0.c2, v0.c0)) NOT BETWEEN (CASE t0.c2  WHEN v0.c2 THEN rt0.c0 ELSE v0.c0 END) AND (v0.c1 COLLATE BINARY))) ISNULL)) GROUP BY rt0.c1, v0.c2, rt0.c3;
SELECT ALL rt0.c1, v0.c2, rt0.c3 FROM t0, rt0, v0 GROUP BY rt0.c1, v0.c2, rt0.c3;
SELECT t0.c0, rt0.c3, rt0.c4, v0.c0, rt0.c2, rt0.c1, t0.c2, rt0.c0, v0.c2, vt0.c1 FROM vt0, t0, rt0, v0 GROUP BY t0.c0, rt0.c3, rt0.c4, v0.c0, rt0.c2, rt0.c1, t0.c2, rt0.c0, v0.c2, vt0.c1;
SELECT ALL t0.c0, rt0.c3, rt0.c4, v0.c0, rt0.c2, rt0.c1, t0.c2, rt0.c0, v0.c2, vt0.c1 FROM vt0, t0, rt0, v0 GROUP BY t0.c0, rt0.c3, rt0.c4, v0.c0, rt0.c2, rt0.c1, t0.c2, rt0.c0, v0.c2, vt0.c1 HAVING GROUP_CONCAT(MIN(COUNT(*))) UNION ALL SELECT ALL t0.c0, rt0.c3, rt0.c4, v0.c0, rt0.c2, rt0.c1, t0.c2, rt0.c0, v0.c2, vt0.c1 FROM vt0, t0, rt0, v0 GROUP BY t0.c0, rt0.c3, rt0.c4, v0.c0, rt0.c2, rt0.c1, t0.c2, rt0.c0, v0.c2, vt0.c1 HAVING (NOT (GROUP_CONCAT(MIN(COUNT(*))))) UNION ALL SELECT t0.c0, rt0.c3, rt0.c4, v0.c0, rt0.c2, rt0.c1, t0.c2, rt0.c0, v0.c2, vt0.c1 FROM vt0, t0, rt0, v0 GROUP BY t0.c0, rt0.c3, rt0.c4, v0.c0, rt0.c2, rt0.c1, t0.c2, rt0.c0, v0.c2, vt0.c1 HAVING ((GROUP_CONCAT(MIN(COUNT(*)))) ISNULL);
SELECT ALL * FROM v0, t0, vt0, rt0;
SELECT * FROM v0, t0, vt0, rt0 WHERE (NULL) UNION ALL SELECT ALL * FROM v0, t0, vt0, rt0 WHERE ((NOT (NULL))) UNION ALL SELECT ALL * FROM v0, t0, vt0, rt0 WHERE (((NULL) ISNULL));
SELECT ALL * FROM v0, t0, vt0, rt0;
SELECT DISTINCT v0.c1, rt0.c1, rt0.c4, rt0.c3, t0.c2, rt0.c0 FROM rt0, t0, v0;
SELECT DISTINCT v0.c1, rt0.c1, rt0.c4, rt0.c3, t0.c2, rt0.c0 FROM rt0, t0, v0 WHERE (CAST((x'' IN (rt0.c1)) AS TEXT)) UNION SELECT DISTINCT v0.c1, rt0.c1, rt0.c4, rt0.c3, t0.c2, rt0.c0 FROM rt0, t0, v0 WHERE ((NOT (CAST((x'' IN (rt0.c1)) AS TEXT)))) UNION SELECT DISTINCT v0.c1, rt0.c1, rt0.c4, rt0.c3, t0.c2, rt0.c0 FROM rt0, t0, v0 WHERE (((CAST((x'' IN (rt0.c1)) AS TEXT)) ISNULL));
SELECT DISTINCT v0.c1, rt0.c1, rt0.c4, rt0.c3, t0.c2, rt0.c0 FROM rt0, t0, v0;
SELECT v0.c0, rt0.c4, rt0.c1, rt0.c3, rt0.c0 FROM v0, t0, rt0, vt0 GROUP BY v0.c0, rt0.c4, rt0.c1, rt0.c3, rt0.c0;
SELECT v0.c0, rt0.c4, rt0.c1, rt0.c3, rt0.c0 FROM v0, t0, rt0, vt0 WHERE (UPPER(((t0.c0)AND(v0.c1)))) GROUP BY v0.c0, rt0.c4, rt0.c1, rt0.c3, rt0.c0 UNION SELECT ALL v0.c0, rt0.c4, rt0.c1, rt0.c3, rt0.c0 FROM v0, t0, rt0, vt0 WHERE ((NOT (UPPER(((t0.c0)AND(v0.c1)))))) GROUP BY v0.c0, rt0.c4, rt0.c1, rt0.c3, rt0.c0 UNION SELECT v0.c0, rt0.c4, rt0.c1, rt0.c3, rt0.c0 FROM v0, t0, rt0, vt0 WHERE (((UPPER(((t0.c0)AND(v0.c1)))) ISNULL)) GROUP BY v0.c0, rt0.c4, rt0.c1, rt0.c3, rt0.c0;
SELECT v0.c0, rt0.c4, rt0.c1, rt0.c3, rt0.c0 FROM v0, t0, rt0, vt0 GROUP BY v0.c0, rt0.c4, rt0.c1, rt0.c3, rt0.c0;
SELECT t0.c2, t0.c0 FROM t0 GROUP BY t0.c2, t0.c0;
SELECT t0.c2, t0.c0 FROM t0 GROUP BY t0.c2, t0.c0 HAVING COUNT(*) UNION ALL SELECT t0.c2, t0.c0 FROM t0 GROUP BY t0.c2, t0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT t0.c2, t0.c0 FROM t0 GROUP BY t0.c2, t0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT t0.c2, t0.c0 FROM t0 GROUP BY t0.c2, t0.c0;
SELECT t0.c2, t0.c0 FROM t0 GROUP BY t0.c2, t0.c0 HAVING COUNT(*) UNION ALL SELECT t0.c2, t0.c0 FROM t0 GROUP BY t0.c2, t0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT t0.c2, t0.c0 FROM t0 GROUP BY t0.c2, t0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT t0.c2, t0.c0 FROM t0 GROUP BY t0.c2, t0.c0;
SELECT ALL * FROM vt0 CROSS JOIN rt0 ON (((((vt0.c1)OR(rt0.c4)))AND(rt0.c4)) IN ());
SELECT ALL * FROM vt0 CROSS JOIN rt0 ON (((((vt0.c1)OR(rt0.c4)))AND(rt0.c4)) IN ()) WHERE ((~ (((((rt0.c0)OR(x'')))AND(rt0.c1))))) UNION ALL SELECT ALL * FROM vt0 CROSS JOIN rt0 ON (((((vt0.c1)OR(rt0.c4)))AND(rt0.c4)) IN ()) WHERE ((NOT ((~ (((((rt0.c0)OR(x'')))AND(rt0.c1))))))) UNION ALL SELECT ALL * FROM vt0 CROSS JOIN rt0 ON (((((vt0.c1)OR(rt0.c4)))AND(rt0.c4)) IN ()) WHERE ((((~ (((((rt0.c0)OR(x'')))AND(rt0.c1))))) ISNULL));
SELECT ALL * FROM vt0 CROSS JOIN rt0 ON (((((vt0.c1)OR(rt0.c4)))AND(rt0.c4)) IN ());
SELECT DISTINCT rt0.c1, v0.c2, rt0.c0, v0.c0, t0.c2, rt0.c4, rt0.c3, rt0.c2, t0.c0, v0.c1 FROM rt0, v0 NOT INDEXED RIGHT OUTER JOIN t0 ON (((((((((rt0.c3)OR(rt0.c2)))AND(rt0.c1)))AND(rt0.c1)))OR(v0.c1)) IN (((rt0.c1) IS TRUE), ((v0.c0)+(rt0.c4)), NULL));
SELECT DISTINCT rt0.c1, v0.c2, rt0.c0, v0.c0, t0.c2, rt0.c4, rt0.c3, rt0.c2, t0.c0, v0.c1 FROM rt0, v0 RIGHT OUTER JOIN t0 ON (((((((((rt0.c3)OR(rt0.c2)))AND(rt0.c1)))AND(rt0.c1)))OR(v0.c1)) IN (((rt0.c1) IS TRUE), ((v0.c0)+(rt0.c4)), NULL)) WHERE (((- (rt0.c0)) IN ())) UNION SELECT DISTINCT rt0.c1, v0.c2, rt0.c0, v0.c0, t0.c2, rt0.c4, rt0.c3, rt0.c2, t0.c0, v0.c1 FROM rt0, v0 RIGHT OUTER JOIN t0 ON (((((((((rt0.c3)OR(rt0.c2)))AND(rt0.c1)))AND(rt0.c1)))OR(v0.c1)) IN (((rt0.c1) IS TRUE), ((v0.c0)+(rt0.c4)), NULL)) WHERE ((NOT (((- (rt0.c0)) IN ())))) UNION SELECT DISTINCT rt0.c1, v0.c2, rt0.c0, v0.c0, t0.c2, rt0.c4, rt0.c3, rt0.c2, t0.c0, v0.c1 FROM rt0, v0 RIGHT OUTER JOIN t0 ON (((((((((rt0.c3)OR(rt0.c2)))AND(rt0.c1)))AND(rt0.c1)))OR(v0.c1)) IN (((rt0.c1) IS TRUE), ((v0.c0)+(rt0.c4)), NULL)) WHERE (((((- (rt0.c0)) IN ())) ISNULL));
SELECT DISTINCT rt0.c1, v0.c2, rt0.c0, v0.c0, t0.c2, rt0.c4, rt0.c3, rt0.c2, t0.c0, v0.c1 FROM rt0, v0 NOT INDEXED RIGHT OUTER JOIN t0 ON (((((((((rt0.c3)OR(rt0.c2)))AND(rt0.c1)))AND(rt0.c1)))OR(v0.c1)) IN (((rt0.c1) IS TRUE), ((v0.c0)+(rt0.c4)), NULL));
SELECT t0.c2, t0.c0, v0.c1, v0.c2, v0.c0 FROM v0 RIGHT OUTER JOIN t0 ON (~ (((t0.c2) BETWEEN (t0.c0) AND (t0.c0)))) GROUP BY t0.c2, t0.c0, v0.c1, v0.c2, v0.c0;
SELECT ALL t0.c2, t0.c0, v0.c1, v0.c2, v0.c0 FROM v0 RIGHT OUTER JOIN t0 ON (~ (((t0.c2) BETWEEN (t0.c0) AND (t0.c0)))) WHERE (NULL) GROUP BY t0.c2, t0.c0, v0.c1, v0.c2, v0.c0 UNION SELECT t0.c2, t0.c0, v0.c1, v0.c2, v0.c0 FROM v0 RIGHT OUTER JOIN t0 ON (~ (((t0.c2) BETWEEN (t0.c0) AND (t0.c0)))) WHERE ((NOT (NULL))) GROUP BY t0.c2, t0.c0, v0.c1, v0.c2, v0.c0 UNION SELECT ALL t0.c2, t0.c0, v0.c1, v0.c2, v0.c0 FROM v0 RIGHT OUTER JOIN t0 ON (~ (((t0.c2) BETWEEN (t0.c0) AND (t0.c0)))) WHERE (((NULL) ISNULL)) GROUP BY t0.c2, t0.c0, v0.c1, v0.c2, v0.c0;
SELECT t0.c2, t0.c0, v0.c1, v0.c2, v0.c0 FROM v0 RIGHT OUTER JOIN t0 ON (~ (((t0.c2) BETWEEN (t0.c0) AND (t0.c0)))) GROUP BY t0.c2, t0.c0, v0.c1, v0.c2, v0.c0;
SELECT ALL t0.c2, v0.c2, t0.c0, v0.c1, v0.c0 FROM t0, v0 GROUP BY t0.c2, v0.c2, t0.c0, v0.c1, v0.c0;
SELECT t0.c2, v0.c2, t0.c0, v0.c1, v0.c0 FROM t0, v0 GROUP BY t0.c2, v0.c2, t0.c0, v0.c1, v0.c0 HAVING COUNT(MIN(v0.c1)) UNION ALL SELECT t0.c2, v0.c2, t0.c0, v0.c1, v0.c0 FROM t0, v0 GROUP BY t0.c2, v0.c2, t0.c0, v0.c1, v0.c0 HAVING (NOT (COUNT(MIN(v0.c1)))) UNION ALL SELECT ALL t0.c2, v0.c2, t0.c0, v0.c1, v0.c0 FROM t0, v0 GROUP BY t0.c2, v0.c2, t0.c0, v0.c1, v0.c0 HAVING ((COUNT(MIN(v0.c1))) ISNULL);
SELECT ALL t0.c2, t0.c0, rt0.c0, rt0.c4, v0.c1, vt0.c1, v0.c2, rt0.c3, vt0.c0 FROM rt0, v0, vt0, t0;
SELECT ALL t0.c2, t0.c0, rt0.c0, rt0.c4, v0.c1, vt0.c1, v0.c2, rt0.c3, vt0.c0 FROM rt0, v0, vt0, t0 WHERE (CAST(vt0.c1 COLLATE NOCASE AS TEXT)) UNION ALL SELECT ALL t0.c2, t0.c0, rt0.c0, rt0.c4, v0.c1, vt0.c1, v0.c2, rt0.c3, vt0.c0 FROM rt0, v0, vt0, t0 WHERE ((NOT (CAST(vt0.c1 COLLATE NOCASE AS TEXT)))) UNION ALL SELECT t0.c2, t0.c0, rt0.c0, rt0.c4, v0.c1, vt0.c1, v0.c2, rt0.c3, vt0.c0 FROM rt0, v0, vt0, t0 WHERE (((CAST(vt0.c1 COLLATE NOCASE AS TEXT)) ISNULL));
SELECT ALL t0.c2, t0.c0, rt0.c0, rt0.c4, v0.c1, vt0.c1, v0.c2, rt0.c3, vt0.c0 FROM rt0, v0, vt0, t0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (rt0.c2) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (rt0.c2))) UNION SELECT DISTINCT * FROM rt0 WHERE (((rt0.c2) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL t0.c2 FROM vt0 FULL OUTER JOIN t0 ON ((((t0.c0) NOT BETWEEN (t0.c2) AND (t0.c2)))OR(vt0.c0 COLLATE RTRIM)) GROUP BY t0.c2;
SELECT ALL t0.c2 FROM vt0 FULL OUTER JOIN t0 ON ((((t0.c0) NOT BETWEEN (t0.c2) AND (t0.c2)))OR(vt0.c0 COLLATE RTRIM)) WHERE (((((vt0.c1)OR(t0.c2))) NOT BETWEEN ((+ (t0.c0))) AND (((vt0.c1)&(vt0.c1))))) GROUP BY t0.c2 UNION SELECT t0.c2 FROM vt0 FULL OUTER JOIN t0 ON ((((t0.c0) NOT BETWEEN (t0.c2) AND (t0.c2)))OR(vt0.c0 COLLATE RTRIM)) WHERE ((NOT (((((vt0.c1)OR(t0.c2))) NOT BETWEEN ((+ (t0.c0))) AND (((vt0.c1)&(vt0.c1))))))) GROUP BY t0.c2 UNION SELECT ALL t0.c2 FROM vt0 FULL OUTER JOIN t0 ON ((((t0.c0) NOT BETWEEN (t0.c2) AND (t0.c2)))OR(vt0.c0 COLLATE RTRIM)) WHERE (((((((vt0.c1)OR(t0.c2))) NOT BETWEEN ((+ (t0.c0))) AND (((vt0.c1)&(vt0.c1))))) ISNULL)) GROUP BY t0.c2;
SELECT ALL t0.c2 FROM vt0 FULL OUTER JOIN t0 ON ((((t0.c0) NOT BETWEEN (t0.c2) AND (t0.c2)))OR(vt0.c0 COLLATE RTRIM)) GROUP BY t0.c2;
SELECT ALL rt0.c1, rt0.c4, rt0.c3, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c4, rt0.c3, rt0.c0;
SELECT ALL rt0.c1, rt0.c4, rt0.c3, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c4, rt0.c3, rt0.c0 HAVING (~ (((((COUNT(MIN(rt0.c2)))AND(SUM(MAX(rt0.c3)))))OR(0.9026557326598905)))) UNION ALL SELECT ALL rt0.c1, rt0.c4, rt0.c3, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c4, rt0.c3, rt0.c0 HAVING (NOT ((~ (((((COUNT(MIN(rt0.c2)))AND(SUM(MAX(rt0.c3)))))OR(0.9026557326598905)))))) UNION ALL SELECT ALL rt0.c1, rt0.c4, rt0.c3, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c4, rt0.c3, rt0.c0 HAVING (((~ (((((COUNT(MIN(rt0.c2)))AND(SUM(MAX(rt0.c3)))))OR(0.9026557326598905))))) ISNULL);
SELECT v0.c1 FROM v0;
SELECT v0.c1 FROM v0 WHERE ((('SH' IN ()) IN ())) UNION ALL SELECT v0.c1 FROM v0 WHERE ((NOT ((('SH' IN ()) IN ())))) UNION ALL SELECT ALL v0.c1 FROM v0 WHERE ((((('SH' IN ()) IN ())) ISNULL));
SELECT v0.c1 FROM v0;
SELECT DISTINCT * FROM t0 INNER JOIN rt0 ON NULL;
SELECT DISTINCT * FROM t0 INNER JOIN rt0 ON NULL WHERE (rt0.c3 COLLATE NOCASE) UNION SELECT DISTINCT * FROM t0 INNER JOIN rt0 ON NULL WHERE ((NOT (rt0.c3 COLLATE NOCASE))) UNION SELECT DISTINCT * FROM t0 INNER JOIN rt0 ON NULL WHERE (((rt0.c3 COLLATE NOCASE) ISNULL));
SELECT DISTINCT * FROM t0 INNER JOIN rt0 ON NULL;
SELECT ALL vt0.c0, rt0.c4, t0.c2, rt0.c2, v0.c1, rt0.c3, vt0.c1, rt0.c0, t0.c0 FROM t0, rt0, v0, vt0 GROUP BY vt0.c0, rt0.c4, t0.c2, rt0.c2, v0.c1, rt0.c3, vt0.c1, rt0.c0, t0.c0;
SELECT vt0.c0, rt0.c4, t0.c2, rt0.c2, v0.c1, rt0.c3, vt0.c1, rt0.c0, t0.c0 FROM t0, rt0, v0, vt0 WHERE (NULL COLLATE RTRIM) GROUP BY vt0.c0, rt0.c4, t0.c2, rt0.c2, v0.c1, rt0.c3, vt0.c1, rt0.c0, t0.c0 UNION SELECT vt0.c0, rt0.c4, t0.c2, rt0.c2, v0.c1, rt0.c3, vt0.c1, rt0.c0, t0.c0 FROM t0, rt0, v0, vt0 WHERE ((NOT (NULL COLLATE RTRIM))) GROUP BY vt0.c0, rt0.c4, t0.c2, rt0.c2, v0.c1, rt0.c3, vt0.c1, rt0.c0, t0.c0 UNION SELECT vt0.c0, rt0.c4, t0.c2, rt0.c2, v0.c1, rt0.c3, vt0.c1, rt0.c0, t0.c0 FROM t0, rt0, v0, vt0 WHERE (((NULL COLLATE RTRIM) ISNULL)) GROUP BY vt0.c0, rt0.c4, t0.c2, rt0.c2, v0.c1, rt0.c3, vt0.c1, rt0.c0, t0.c0;
SELECT ALL vt0.c0, rt0.c4, t0.c2, rt0.c2, v0.c1, rt0.c3, vt0.c1, rt0.c0, t0.c0 FROM t0, rt0, v0, vt0 GROUP BY vt0.c0, rt0.c4, t0.c2, rt0.c2, v0.c1, rt0.c3, vt0.c1, rt0.c0, t0.c0;
SELECT ALL v0.c1, rt0.c4, rt0.c3, v0.c0, rt0.c0, vt0.c0, v0.c2, t0.c0 FROM rt0, t0, v0, vt0 GROUP BY v0.c1, rt0.c4, rt0.c3, v0.c0, rt0.c0, vt0.c0, v0.c2, t0.c0;
SELECT v0.c1, rt0.c4, rt0.c3, v0.c0, rt0.c0, vt0.c0, v0.c2, t0.c0 FROM rt0, t0, v0, vt0 GROUP BY v0.c1, rt0.c4, rt0.c3, v0.c0, rt0.c0, vt0.c0, v0.c2, t0.c0 HAVING AVG(ABS(rt0.c3)) UNION ALL SELECT v0.c1, rt0.c4, rt0.c3, v0.c0, rt0.c0, vt0.c0, v0.c2, t0.c0 FROM rt0, t0, v0, vt0 GROUP BY v0.c1, rt0.c4, rt0.c3, v0.c0, rt0.c0, vt0.c0, v0.c2, t0.c0 HAVING (NOT (AVG(ABS(rt0.c3)))) UNION ALL SELECT ALL v0.c1, rt0.c4, rt0.c3, v0.c0, rt0.c0, vt0.c0, v0.c2, t0.c0 FROM rt0, t0, v0, vt0 GROUP BY v0.c1, rt0.c4, rt0.c3, v0.c0, rt0.c0, vt0.c0, v0.c2, t0.c0 HAVING ((AVG(ABS(rt0.c3))) ISNULL);
SELECT ALL v0.c1, rt0.c4, rt0.c3, v0.c0, rt0.c0, vt0.c0, v0.c2, t0.c0 FROM rt0, t0, v0, vt0 GROUP BY v0.c1, rt0.c4, rt0.c3, v0.c0, rt0.c0, vt0.c0, v0.c2, t0.c0;
SELECT v0.c1, rt0.c4, rt0.c3, v0.c0, rt0.c0, vt0.c0, v0.c2, t0.c0 FROM rt0, t0, v0, vt0 GROUP BY v0.c1, rt0.c4, rt0.c3, v0.c0, rt0.c0, vt0.c0, v0.c2, t0.c0 HAVING AVG(ABS(rt0.c3)) UNION ALL SELECT v0.c1, rt0.c4, rt0.c3, v0.c0, rt0.c0, vt0.c0, v0.c2, t0.c0 FROM rt0, t0, v0, vt0 GROUP BY v0.c1, rt0.c4, rt0.c3, v0.c0, rt0.c0, vt0.c0, v0.c2, t0.c0 HAVING (NOT (AVG(ABS(rt0.c3)))) UNION ALL SELECT ALL v0.c1, rt0.c4, rt0.c3, v0.c0, rt0.c0, vt0.c0, v0.c2, t0.c0 FROM rt0, t0, v0, vt0 GROUP BY v0.c1, rt0.c4, rt0.c3, v0.c0, rt0.c0, vt0.c0, v0.c2, t0.c0 HAVING ((AVG(ABS(rt0.c3))) ISNULL);
SELECT ALL v0.c1, rt0.c4, rt0.c3, v0.c0, rt0.c0, vt0.c0, v0.c2, t0.c0 FROM rt0, t0, v0, vt0 GROUP BY v0.c1, rt0.c4, rt0.c3, v0.c0, rt0.c0, vt0.c0, v0.c2, t0.c0;
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE (((((LOWER(0.4021219274134069))AND((rt0.c0 IN ()))))AND((((rt0.c4, rt0.c3, rt0.c1)) NOT BETWEEN ((rt0.c0, rt0.c4, rt0.c1)) AND ((rt0.c3, rt0.c0, rt0.c2)))))) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (((((LOWER(0.4021219274134069))AND((rt0.c0 IN ()))))AND((((rt0.c4, rt0.c3, rt0.c1)) NOT BETWEEN ((rt0.c0, rt0.c4, rt0.c1)) AND ((rt0.c3, rt0.c0, rt0.c2)))))))) UNION ALL SELECT * FROM rt0 WHERE (((((((LOWER(0.4021219274134069))AND((rt0.c0 IN ()))))AND((((rt0.c4, rt0.c3, rt0.c1)) NOT BETWEEN ((rt0.c0, rt0.c4, rt0.c1)) AND ((rt0.c3, rt0.c0, rt0.c2)))))) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT v0.c2, rt0.c4, rt0.c3 FROM v0, t0, vt0 NOT INDEXED, rt0;
SELECT DISTINCT v0.c2, rt0.c4, rt0.c3 FROM v0, t0, vt0, rt0 WHERE ((('') NOTNULL)) UNION SELECT DISTINCT v0.c2, rt0.c4, rt0.c3 FROM v0, t0, vt0, rt0 WHERE ((NOT ((('') NOTNULL)))) UNION SELECT DISTINCT v0.c2, rt0.c4, rt0.c3 FROM v0, t0, vt0, rt0 WHERE ((((('') NOTNULL)) ISNULL));
SELECT DISTINCT v0.c2, rt0.c4, rt0.c3 FROM v0, t0, vt0 NOT INDEXED, rt0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0 WHERE (((vt0.c0)GLOB(((vt0.c0)*(vt0.c1))))) GROUP BY vt0.c1, vt0.c0 UNION SELECT vt0.c1, vt0.c0 FROM vt0 WHERE ((NOT (((vt0.c0)GLOB(((vt0.c0)*(vt0.c1))))))) GROUP BY vt0.c1, vt0.c0 UNION SELECT vt0.c1, vt0.c0 FROM vt0 WHERE (((((vt0.c0)GLOB(((vt0.c0)*(vt0.c1))))) ISNULL)) GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0, t0.c2, vt0.c1, v0.c2, v0.c1, t0.c0, rt0.c4, v0.c0 FROM vt0, t0, v0, rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0, t0.c2, vt0.c1, v0.c2, v0.c1, t0.c0, rt0.c4, v0.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0, t0.c2, vt0.c1, v0.c2, v0.c1, t0.c0, rt0.c4, v0.c0 FROM vt0, t0, v0, rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0, t0.c2, vt0.c1, v0.c2, v0.c1, t0.c0, rt0.c4, v0.c0 HAVING CASE WHEN v0.c0 COLLATE BINARY THEN COUNT(*) ELSE MIN(v0.c0) END UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0, t0.c2, vt0.c1, v0.c2, v0.c1, t0.c0, rt0.c4, v0.c0 FROM vt0, t0, v0, rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0, t0.c2, vt0.c1, v0.c2, v0.c1, t0.c0, rt0.c4, v0.c0 HAVING (NOT (CASE WHEN v0.c0 COLLATE BINARY THEN COUNT(*) ELSE MIN(v0.c0) END)) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c0, t0.c2, vt0.c1, v0.c2, v0.c1, t0.c0, rt0.c4, v0.c0 FROM vt0, t0, v0 NOT INDEXED, rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0, t0.c2, vt0.c1, v0.c2, v0.c1, t0.c0, rt0.c4, v0.c0 HAVING ((CASE WHEN v0.c0 COLLATE BINARY THEN COUNT(*) ELSE MIN(v0.c0) END) ISNULL);
SELECT ALL rt0.c1, rt0.c2, rt0.c0, t0.c2, vt0.c1, v0.c2, v0.c1, t0.c0, rt0.c4, v0.c0 FROM vt0, t0, v0, rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0, t0.c2, vt0.c1, v0.c2, v0.c1, t0.c0, rt0.c4, v0.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0, t0.c2, vt0.c1, v0.c2, v0.c1, t0.c0, rt0.c4, v0.c0 FROM vt0, t0, v0, rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0, t0.c2, vt0.c1, v0.c2, v0.c1, t0.c0, rt0.c4, v0.c0 HAVING CASE WHEN v0.c0 COLLATE BINARY THEN COUNT(*) ELSE MIN(v0.c0) END UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0, t0.c2, vt0.c1, v0.c2, v0.c1, t0.c0, rt0.c4, v0.c0 FROM vt0, t0, v0, rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0, t0.c2, vt0.c1, v0.c2, v0.c1, t0.c0, rt0.c4, v0.c0 HAVING (NOT (CASE WHEN v0.c0 COLLATE BINARY THEN COUNT(*) ELSE MIN(v0.c0) END)) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c0, t0.c2, vt0.c1, v0.c2, v0.c1, t0.c0, rt0.c4, v0.c0 FROM vt0, t0, v0 NOT INDEXED, rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0, t0.c2, vt0.c1, v0.c2, v0.c1, t0.c0, rt0.c4, v0.c0 HAVING ((CASE WHEN v0.c0 COLLATE BINARY THEN COUNT(*) ELSE MIN(v0.c0) END) ISNULL);
SELECT ALL rt0.c1, rt0.c2, rt0.c0, t0.c2, vt0.c1, v0.c2, v0.c1, t0.c0, rt0.c4, v0.c0 FROM vt0, t0, v0, rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0, t0.c2, vt0.c1, v0.c2, v0.c1, t0.c0, rt0.c4, v0.c0;
SELECT ALL t0.c2, rt0.c2 FROM v0, rt0 INNER JOIN t0 ON x'';
SELECT t0.c2, rt0.c2 FROM v0, rt0 INNER JOIN t0 ON x'' WHERE (((rt0.c4 COLLATE BINARY) BETWEEN (((((v0.c1)AND(rt0.c3)))OR(rt0.c2))) AND (json_array(rt0.c2, rt0.c0)))) UNION ALL SELECT ALL t0.c2, rt0.c2 FROM v0, rt0 INNER JOIN t0 ON x'' WHERE ((NOT (((rt0.c4 COLLATE BINARY) BETWEEN (((((v0.c1)AND(rt0.c3)))OR(rt0.c2))) AND (json_array(rt0.c2, rt0.c0)))))) UNION ALL SELECT t0.c2, rt0.c2 FROM v0, rt0 INNER JOIN t0 ON x'' WHERE (((((rt0.c4 COLLATE BINARY) BETWEEN (((((v0.c1)AND(rt0.c3)))OR(rt0.c2))) AND (json_array(rt0.c2, rt0.c0)))) ISNULL));
SELECT ALL t0.c2, rt0.c2 FROM v0, rt0 INNER JOIN t0 ON x'';
SELECT DISTINCT vt0.c1 FROM vt0;
SELECT DISTINCT vt0.c1 FROM vt0 WHERE (((((vt0.c0)<=(vt0.c1))) IS FALSE)) UNION SELECT DISTINCT vt0.c1 FROM vt0 WHERE ((NOT (((((vt0.c0)<=(vt0.c1))) IS FALSE)))) UNION SELECT DISTINCT vt0.c1 FROM vt0 WHERE (((((((vt0.c0)<=(vt0.c1))) IS FALSE)) ISNULL));
SELECT DISTINCT vt0.c1 FROM vt0;
SELECT ALL rt0.c3 FROM t0 INNER JOIN rt0 ON CAST(rt0.c3 AS INTEGER) COLLATE RTRIM GROUP BY rt0.c3;
SELECT rt0.c3 FROM t0 INNER JOIN rt0 ON CAST(rt0.c3 AS INTEGER) COLLATE RTRIM WHERE (((((rt0.c1)||(rt0.c2))) BETWEEN (rt0.c0) AND (((((t0.c2)OR(rt0.c4)))AND(t0.c2))))) GROUP BY rt0.c3 UNION SELECT ALL rt0.c3 FROM t0 INNER JOIN rt0 ON CAST(rt0.c3 AS INTEGER) COLLATE RTRIM WHERE ((NOT (((((rt0.c1)||(rt0.c2))) BETWEEN (rt0.c0) AND (((((t0.c2)OR(rt0.c4)))AND(t0.c2))))))) GROUP BY rt0.c3 UNION SELECT rt0.c3 FROM t0 INNER JOIN rt0 ON CAST(rt0.c3 AS INTEGER) COLLATE RTRIM WHERE (((((((rt0.c1)||(rt0.c2))) BETWEEN (rt0.c0) AND (((((t0.c2)OR(rt0.c4)))AND(t0.c2))))) ISNULL)) GROUP BY rt0.c3;
SELECT ALL rt0.c3 FROM t0 INNER JOIN rt0 ON CAST(rt0.c3 AS INTEGER) COLLATE RTRIM GROUP BY rt0.c3;
SELECT ALL v0.c2, v0.c1, v0.c0 FROM v0 GROUP BY v0.c2, v0.c1, v0.c0;
SELECT v0.c2, v0.c1, v0.c0 FROM v0 GROUP BY v0.c2, v0.c1, v0.c0 HAVING TOTAL(((SUM(COUNT(*))) NOT BETWEEN (TOTAL(COUNT(COUNT(*)))) AND (COUNT(v0.c1)))) UNION ALL SELECT ALL v0.c2, v0.c1, v0.c0 FROM v0 GROUP BY v0.c2, v0.c1, v0.c0 HAVING (NOT (TOTAL(((SUM(COUNT(*))) NOT BETWEEN (TOTAL(COUNT(COUNT(*)))) AND (COUNT(v0.c1)))))) UNION ALL SELECT v0.c2, v0.c1, v0.c0 FROM v0 GROUP BY v0.c2, v0.c1, v0.c0 HAVING ((TOTAL(((SUM(COUNT(*))) NOT BETWEEN (TOTAL(COUNT(COUNT(*)))) AND (COUNT(v0.c1))))) ISNULL);
SELECT rt0.c3, v0.c0, v0.c1, rt0.c0, v0.c2, rt0.c1 FROM v0 NATURAL JOIN rt0;
SELECT ALL rt0.c3, v0.c0, v0.c1, rt0.c0, v0.c2, rt0.c1 FROM v0 NATURAL JOIN rt0 WHERE (((v0.c2) IS FALSE)) UNION ALL SELECT rt0.c3, v0.c0, v0.c1, rt0.c0, v0.c2, rt0.c1 FROM v0 NATURAL JOIN rt0 WHERE ((NOT (((v0.c2) IS FALSE)))) UNION ALL SELECT ALL rt0.c3, v0.c0, v0.c1, rt0.c0, v0.c2, rt0.c1 FROM v0 NATURAL JOIN rt0 WHERE (((((v0.c2) IS FALSE)) ISNULL));
SELECT rt0.c3, v0.c0, v0.c1, rt0.c0, v0.c2, rt0.c1 FROM v0 NATURAL JOIN rt0;
SELECT DISTINCT rt0.c2, t0.c2, t0.c0 FROM rt0, vt0, t0;
SELECT DISTINCT rt0.c2, t0.c2, t0.c0 FROM rt0, vt0, t0 WHERE (((((((rt0.c0)*(t0.c0)))AND(((rt0.c1)>=(vt0.c1)))))OR(TRIM(vt0.c0, t0.c0)))) UNION SELECT DISTINCT rt0.c2, t0.c2, t0.c0 FROM rt0, vt0, t0 WHERE ((NOT (((((((rt0.c0)*(t0.c0)))AND(((rt0.c1)>=(vt0.c1)))))OR(TRIM(vt0.c0, t0.c0)))))) UNION SELECT DISTINCT rt0.c2, t0.c2, t0.c0 FROM rt0, vt0, t0 WHERE (((((((((rt0.c0)*(t0.c0)))AND(((rt0.c1)>=(vt0.c1)))))OR(TRIM(vt0.c0, t0.c0)))) ISNULL));
SELECT DISTINCT rt0.c2, t0.c2, t0.c0 FROM rt0, vt0, t0;
SELECT ALL vt0.c0, v0.c2, t0.c0, rt0.c3, rt0.c0, rt0.c1 FROM rt0 CROSS JOIN vt0 ON ((rt0.c3 COLLATE BINARY)=((- (v0.c0)))) INNER JOIN v0 ON (('￿*sNoyb') BETWEEN (rt0.c0) AND (rt0.c1)) COLLATE NOCASE LEFT OUTER JOIN t0 ON ((((vt0.c0 COLLATE NOCASE)AND((((v0.c2, rt0.c3, vt0.c1))<=((rt0.c1, v0.c1, t0.c0))))))AND(CAST(x'' AS NUMERIC))) GROUP BY vt0.c0, v0.c2, t0.c0, rt0.c3, rt0.c0, rt0.c1;
SELECT ALL vt0.c0, v0.c2, t0.c0, rt0.c3, rt0.c0, rt0.c1 FROM rt0 CROSS JOIN vt0 ON ((rt0.c3 COLLATE BINARY)==((- (v0.c0)))) INNER JOIN v0 ON (('￿*sNoyb') BETWEEN (rt0.c0) AND (rt0.c1)) COLLATE NOCASE LEFT OUTER JOIN t0 ON ((((vt0.c0 COLLATE NOCASE)AND((((v0.c2, rt0.c3, vt0.c1))<=((rt0.c1, v0.c1, t0.c0))))))AND(CAST(x'' AS NUMERIC))) WHERE (x'') GROUP BY vt0.c0, v0.c2, t0.c0, rt0.c3, rt0.c0, rt0.c1 UNION SELECT vt0.c0, v0.c2, t0.c0, rt0.c3, rt0.c0, rt0.c1 FROM rt0 CROSS JOIN vt0 ON ((rt0.c3 COLLATE BINARY)==((- (v0.c0)))) INNER JOIN v0 ON (('￿*sNoyb') BETWEEN (rt0.c0) AND (rt0.c1)) COLLATE NOCASE LEFT OUTER JOIN t0 ON ((((vt0.c0 COLLATE NOCASE)AND((((v0.c2, rt0.c3, vt0.c1))<=((rt0.c1, v0.c1, t0.c0))))))AND(CAST(x'' AS NUMERIC))) WHERE ((NOT (x''))) GROUP BY vt0.c0, v0.c2, t0.c0, rt0.c3, rt0.c0, rt0.c1 UNION SELECT vt0.c0, v0.c2, t0.c0, rt0.c3, rt0.c0, rt0.c1 FROM rt0 CROSS JOIN vt0 ON ((rt0.c3 COLLATE BINARY)==((- (v0.c0)))) INNER JOIN v0 ON (('￿*sNoyb') BETWEEN (rt0.c0) AND (rt0.c1)) COLLATE NOCASE LEFT OUTER JOIN t0 ON ((((vt0.c0 COLLATE NOCASE)AND((((v0.c2, rt0.c3, vt0.c1))<=((rt0.c1, v0.c1, t0.c0))))))AND(CAST(x'' AS NUMERIC))) WHERE (((x'') ISNULL)) GROUP BY vt0.c0, v0.c2, t0.c0, rt0.c3, rt0.c0, rt0.c1;
SELECT ALL vt0.c0, v0.c2, t0.c0, rt0.c3, rt0.c0, rt0.c1 FROM rt0 CROSS JOIN vt0 ON ((rt0.c3 COLLATE BINARY)=((- (v0.c0)))) INNER JOIN v0 ON (('￿*sNoyb') BETWEEN (rt0.c0) AND (rt0.c1)) COLLATE NOCASE LEFT OUTER JOIN t0 ON ((((vt0.c0 COLLATE NOCASE)AND((((v0.c2, rt0.c3, vt0.c1))<=((rt0.c1, v0.c1, t0.c0))))))AND(CAST(x'' AS NUMERIC))) GROUP BY vt0.c0, v0.c2, t0.c0, rt0.c3, rt0.c0, rt0.c1;
SELECT ALL vt0.c1, vt0.c0, v0.c1, t0.c0, rt0.c1, rt0.c2, rt0.c4, rt0.c0, v0.c2 FROM t0, v0, rt0, vt0 GROUP BY vt0.c1, vt0.c0, v0.c1, t0.c0, rt0.c1, rt0.c2, rt0.c4, rt0.c0, v0.c2;
SELECT vt0.c1, vt0.c0, v0.c1, t0.c0, rt0.c1, rt0.c2, rt0.c4, rt0.c0, v0.c2 FROM t0, v0, rt0, vt0 GROUP BY vt0.c1, vt0.c0, v0.c1, t0.c0, rt0.c1, rt0.c2, rt0.c4, rt0.c0, v0.c2 HAVING AVG(AVG(SUM(AVG(vt0.c1)))) UNION ALL SELECT vt0.c1, vt0.c0, v0.c1, t0.c0, rt0.c1, rt0.c2, rt0.c4, rt0.c0, v0.c2 FROM t0, v0, rt0, vt0 GROUP BY vt0.c1, vt0.c0, v0.c1, t0.c0, rt0.c1, rt0.c2, rt0.c4, rt0.c0, v0.c2 HAVING (NOT (AVG(AVG(SUM(AVG(vt0.c1)))))) UNION ALL SELECT ALL vt0.c1, vt0.c0, v0.c1, t0.c0, rt0.c1, rt0.c2, rt0.c4, rt0.c0, v0.c2 FROM t0, v0, rt0, vt0 GROUP BY vt0.c1, vt0.c0, v0.c1, t0.c0, rt0.c1, rt0.c2, rt0.c4, rt0.c0, v0.c2 HAVING ((AVG(AVG(SUM(AVG(vt0.c1))))) ISNULL);
SELECT rt0.c3, rt0.c1, v0.c0, rt0.c0, rt0.c4, vt0.c0, t0.c0, v0.c1 FROM t0, rt0 FULL OUTER JOIN vt0 ON -1082673538 INNER JOIN v0 ON CASE ((NULL)IS NOT(rt0.c4))  WHEN CAST(v0.c0 AS REAL) THEN LOWER(DISTINCT v0.c1) WHEN LTRIM(v0.c2) THEN ((((((((rt0.c1)AND(rt0.c1)))AND(vt0.c1)))OR(rt0.c2)))OR(rt0.c3)) WHEN ((vt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1)) THEN (vt0.c1 IN ()) END;
SELECT ALL rt0.c3, rt0.c1, v0.c0, rt0.c0, rt0.c4, vt0.c0, t0.c0, v0.c1 FROM t0, rt0 FULL OUTER JOIN vt0 ON -1082673538 INNER JOIN v0 ON CASE ((NULL)IS NOT(rt0.c4))  WHEN CAST(v0.c0 AS REAL) THEN LOWER(DISTINCT v0.c1) WHEN LTRIM(v0.c2) THEN ((((((((rt0.c1)AND(rt0.c1)))AND(vt0.c1)))OR(rt0.c2)))OR(rt0.c3)) WHEN ((vt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1)) THEN (vt0.c1 IN ()) END WHERE ((- (v0.c0))) UNION ALL SELECT rt0.c3, rt0.c1, v0.c0, rt0.c0, rt0.c4, vt0.c0, t0.c0, v0.c1 FROM t0, rt0 FULL OUTER JOIN vt0 ON -1082673538 INNER JOIN v0 ON CASE ((NULL)IS NOT(rt0.c4))  WHEN CAST(v0.c0 AS REAL) THEN LOWER(DISTINCT v0.c1) WHEN LTRIM(v0.c2) THEN ((((((((rt0.c1)AND(rt0.c1)))AND(vt0.c1)))OR(rt0.c2)))OR(rt0.c3)) WHEN ((vt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1)) THEN (vt0.c1 IN ()) END WHERE ((NOT ((- (v0.c0))))) UNION ALL SELECT ALL rt0.c3, rt0.c1, v0.c0, rt0.c0, rt0.c4, vt0.c0, t0.c0, v0.c1 FROM t0, rt0 FULL OUTER JOIN vt0 ON -1082673538 INNER JOIN v0 ON CASE ((NULL)IS NOT(rt0.c4))  WHEN CAST(v0.c0 AS REAL) THEN LOWER(DISTINCT v0.c1) WHEN LTRIM(v0.c2) THEN ((((((((rt0.c1)AND(rt0.c1)))AND(vt0.c1)))OR(rt0.c2)))OR(rt0.c3)) WHEN ((vt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1)) THEN (vt0.c1 IN ()) END WHERE ((((- (v0.c0))) ISNULL));
SELECT rt0.c3, rt0.c1, v0.c0, rt0.c0, rt0.c4, vt0.c0, t0.c0, v0.c1 FROM t0, rt0 FULL OUTER JOIN vt0 ON -1082673538 INNER JOIN v0 ON CASE ((NULL)IS NOT(rt0.c4))  WHEN CAST(v0.c0 AS REAL) THEN LOWER(DISTINCT v0.c1) WHEN LTRIM(v0.c2) THEN ((((((((rt0.c1)AND(rt0.c1)))AND(vt0.c1)))OR(rt0.c2)))OR(rt0.c3)) WHEN ((vt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1)) THEN (vt0.c1 IN ()) END;
SELECT DISTINCT * FROM rt0, t0 CROSS JOIN vt0 ON ((vt0.c1) NOT BETWEEN (vt0.c1) AND (0.9157467251262075)) COLLATE NOCASE;
SELECT DISTINCT * FROM rt0, t0 CROSS JOIN vt0 ON ((vt0.c1) NOT BETWEEN (vt0.c1) AND (0.9157467251262075)) COLLATE NOCASE WHERE (((((((((((((vt0.c0)OR(t0.c2)))OR(rt0.c2)))AND(TYPEOF(NULL))))AND(UPPER(DISTINCT vt0.c1))))AND(((vt0.c1)|(rt0.c0)))))AND(((t0.c2) IS FALSE)))) UNION SELECT DISTINCT * FROM rt0, t0 CROSS JOIN vt0 ON ((vt0.c1) NOT BETWEEN (vt0.c1) AND (0.9157467251262075)) COLLATE NOCASE WHERE ((NOT (((((((((((((vt0.c0)OR(t0.c2)))OR(rt0.c2)))AND(TYPEOF(NULL))))AND(UPPER(DISTINCT vt0.c1))))AND(((vt0.c1)|(rt0.c0)))))AND(((t0.c2) IS FALSE)))))) UNION SELECT DISTINCT * FROM rt0, t0 CROSS JOIN vt0 ON ((vt0.c1) NOT BETWEEN (vt0.c1) AND (0.9157467251262075)) COLLATE NOCASE WHERE (((((((((((((((vt0.c0)OR(t0.c2)))OR(rt0.c2)))AND(TYPEOF(NULL))))AND(UPPER(DISTINCT vt0.c1))))AND(((vt0.c1)|(rt0.c0)))))AND(((t0.c2) IS FALSE)))) ISNULL));
SELECT DISTINCT * FROM rt0, t0 CROSS JOIN vt0 ON ((vt0.c1) NOT BETWEEN (vt0.c1) AND (0.9157467251262075)) COLLATE NOCASE;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 WHERE ((+ (LTRIM('J!', t0.c0)))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT ((+ (LTRIM('J!', t0.c0)))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((((+ (LTRIM('J!', t0.c0)))) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL rt0.c3, vt0.c1, vt0.c0, rt0.c2, rt0.c4, rt0.c0, t0.c2, v0.c0, v0.c2, rt0.c1 FROM t0, v0, rt0 LEFT OUTER JOIN vt0 ON (- ('1014602580')) GROUP BY rt0.c3, vt0.c1, vt0.c0, rt0.c2, rt0.c4, rt0.c0, t0.c2, v0.c0, v0.c2, rt0.c1;
SELECT ALL rt0.c3, vt0.c1, vt0.c0, rt0.c2, rt0.c4, rt0.c0, t0.c2, v0.c0, v0.c2, rt0.c1 FROM t0, v0, rt0 LEFT OUTER JOIN vt0 ON (- ('1014602580')) GROUP BY rt0.c3, vt0.c1, vt0.c0, rt0.c2, rt0.c4, rt0.c0, t0.c2, v0.c0, v0.c2, rt0.c1 HAVING v0.c1 UNION ALL SELECT rt0.c3, vt0.c1, vt0.c0, rt0.c2, rt0.c4, rt0.c0, t0.c2, v0.c0, v0.c2, rt0.c1 FROM t0, v0, rt0 LEFT OUTER JOIN vt0 ON (- ('1014602580')) GROUP BY rt0.c3, vt0.c1, vt0.c0, rt0.c2, rt0.c4, rt0.c0, t0.c2, v0.c0, v0.c2, rt0.c1 HAVING (NOT (v0.c1)) UNION ALL SELECT rt0.c3, vt0.c1, vt0.c0, rt0.c2, rt0.c4, rt0.c0, t0.c2, v0.c0, v0.c2, rt0.c1 FROM t0, v0, rt0 LEFT OUTER JOIN vt0 ON (- ('1014602580')) GROUP BY rt0.c3, vt0.c1, vt0.c0, rt0.c2, rt0.c4, rt0.c0, t0.c2, v0.c0, v0.c2, rt0.c1 HAVING ((v0.c1) ISNULL);
SELECT ALL rt0.c3, vt0.c1, vt0.c0, rt0.c2, rt0.c4, rt0.c0, t0.c2, v0.c0, v0.c2, rt0.c1 FROM t0, v0, rt0 LEFT OUTER JOIN vt0 ON (- ('1014602580')) GROUP BY rt0.c3, vt0.c1, vt0.c0, rt0.c2, rt0.c4, rt0.c0, t0.c2, v0.c0, v0.c2, rt0.c1;
SELECT ALL rt0.c3, vt0.c1, vt0.c0, rt0.c2, rt0.c4, rt0.c0, t0.c2, v0.c0, v0.c2, rt0.c1 FROM t0, v0, rt0 LEFT OUTER JOIN vt0 ON (- ('1014602580')) GROUP BY rt0.c3, vt0.c1, vt0.c0, rt0.c2, rt0.c4, rt0.c0, t0.c2, v0.c0, v0.c2, rt0.c1 HAVING v0.c1 UNION ALL SELECT rt0.c3, vt0.c1, vt0.c0, rt0.c2, rt0.c4, rt0.c0, t0.c2, v0.c0, v0.c2, rt0.c1 FROM t0, v0, rt0 LEFT OUTER JOIN vt0 ON (- ('1014602580')) GROUP BY rt0.c3, vt0.c1, vt0.c0, rt0.c2, rt0.c4, rt0.c0, t0.c2, v0.c0, v0.c2, rt0.c1 HAVING (NOT (v0.c1)) UNION ALL SELECT rt0.c3, vt0.c1, vt0.c0, rt0.c2, rt0.c4, rt0.c0, t0.c2, v0.c0, v0.c2, rt0.c1 FROM t0, v0, rt0 LEFT OUTER JOIN vt0 ON (- ('1014602580')) GROUP BY rt0.c3, vt0.c1, vt0.c0, rt0.c2, rt0.c4, rt0.c0, t0.c2, v0.c0, v0.c2, rt0.c1 HAVING ((v0.c1) ISNULL);
SELECT ALL rt0.c3, vt0.c1, vt0.c0, rt0.c2, rt0.c4, rt0.c0, t0.c2, v0.c0, v0.c2, rt0.c1 FROM t0, v0, rt0 LEFT OUTER JOIN vt0 ON (- ('1014602580')) GROUP BY rt0.c3, vt0.c1, vt0.c0, rt0.c2, rt0.c4, rt0.c0, t0.c2, v0.c0, v0.c2, rt0.c1;
SELECT v0.c1, t0.c2, v0.c2, v0.c0, t0.c0 FROM v0, t0;
SELECT v0.c1, t0.c2, v0.c2, v0.c0, t0.c0 FROM v0, t0 WHERE (((v0.c0 COLLATE RTRIM)IS((- (v0.c2))))) UNION ALL SELECT ALL v0.c1, t0.c2, v0.c2, v0.c0, t0.c0 FROM v0, t0 WHERE ((NOT (((v0.c0 COLLATE RTRIM)IS((- (v0.c2))))))) UNION ALL SELECT ALL v0.c1, t0.c2, v0.c2, v0.c0, t0.c0 FROM v0, t0 WHERE (((((v0.c0 COLLATE RTRIM)IS((- (v0.c2))))) ISNULL));
SELECT v0.c1, t0.c2, v0.c2, v0.c0, t0.c0 FROM v0, t0;
SELECT DISTINCT * FROM t0, vt0, v0, rt0;
SELECT DISTINCT * FROM t0, vt0, v0, rt0 WHERE ((- (CASE rt0.c4  WHEN rt0.c1 THEN rt0.c4 END))) UNION SELECT DISTINCT * FROM t0, vt0, v0, rt0 WHERE ((NOT ((- (CASE rt0.c4  WHEN rt0.c1 THEN rt0.c4 END))))) UNION SELECT DISTINCT * FROM t0, vt0, v0, rt0 WHERE ((((- (CASE rt0.c4  WHEN rt0.c1 THEN rt0.c4 END))) ISNULL));
SELECT DISTINCT * FROM t0, vt0, v0, rt0;
SELECT ALL v0.c1, rt0.c0, rt0.c4, vt0.c1, vt0.c0, v0.c2, v0.c0, rt0.c3, rt0.c1 FROM v0, rt0, vt0 GROUP BY v0.c1, rt0.c0, rt0.c4, vt0.c1, vt0.c0, v0.c2, v0.c0, rt0.c3, rt0.c1;
SELECT v0.c1, rt0.c0, rt0.c4, vt0.c1, vt0.c0, v0.c2, v0.c0, rt0.c3, rt0.c1 FROM v0, rt0, vt0 WHERE ((NOT ((+ (rt0.c4))))) GROUP BY v0.c1, rt0.c0, rt0.c4, vt0.c1, vt0.c0, v0.c2, v0.c0, rt0.c3, rt0.c1 UNION SELECT v0.c1, rt0.c0, rt0.c4, vt0.c1, vt0.c0, v0.c2, v0.c0, rt0.c3, rt0.c1 FROM v0, rt0, vt0 NOT INDEXED WHERE ((NOT ((NOT ((+ (rt0.c4))))))) GROUP BY v0.c1, rt0.c0, rt0.c4, vt0.c1, vt0.c0, v0.c2, v0.c0, rt0.c3, rt0.c1 UNION SELECT ALL v0.c1, rt0.c0, rt0.c4, vt0.c1, vt0.c0, v0.c2, v0.c0, rt0.c3, rt0.c1 FROM v0, rt0, vt0 WHERE ((((NOT ((+ (rt0.c4))))) ISNULL)) GROUP BY v0.c1, rt0.c0, rt0.c4, vt0.c1, vt0.c0, v0.c2, v0.c0, rt0.c3, rt0.c1;
SELECT ALL v0.c1, rt0.c0, rt0.c4, vt0.c1, vt0.c0, v0.c2, v0.c0, rt0.c3, rt0.c1 FROM v0, rt0, vt0 GROUP BY v0.c1, rt0.c0, rt0.c4, vt0.c1, vt0.c0, v0.c2, v0.c0, rt0.c3, rt0.c1;
SELECT rt0.c0, t0.c0 FROM t0, rt0 GROUP BY rt0.c0, t0.c0;
SELECT rt0.c0, t0.c0 FROM t0, rt0 NOT INDEXED GROUP BY rt0.c0, t0.c0 HAVING COUNT(CASE WHEN MAX(t0.c0) THEN rt0.c3 WHEN t0.c0 THEN GROUP_CONCAT(rt0.c1) WHEN MIN(0xffffffffc2ffb0b6) THEN TOTAL(rt0.c4) END) UNION ALL SELECT rt0.c0, t0.c0 FROM t0, rt0 GROUP BY rt0.c0, t0.c0 HAVING (NOT (COUNT(CASE WHEN MAX(t0.c0) THEN rt0.c3 WHEN t0.c0 THEN GROUP_CONCAT(rt0.c1) WHEN MIN(0Xffffffffc2ffb0b6) THEN TOTAL(rt0.c4) END))) UNION ALL SELECT rt0.c0, t0.c0 FROM t0, rt0 GROUP BY rt0.c0, t0.c0 HAVING ((COUNT(CASE WHEN MAX(t0.c0) THEN rt0.c3 WHEN t0.c0 THEN GROUP_CONCAT(rt0.c1) WHEN MIN(0xffffffffc2ffb0b6) THEN TOTAL(rt0.c4) END)) ISNULL);
SELECT * FROM vt0, v0, t0;
SELECT * FROM vt0, v0, t0 WHERE (CASE ((vt0.c1) NOTNULL)  WHEN COALESCE(DISTINCT vt0.c0, '-973035463') THEN CASE WHEN t0.c2 THEN t0.c0 ELSE v0.c1 END WHEN (v0.c1 IN ()) THEN ((v0.c0) BETWEEN ('') AND (v0.c1)) WHEN (~ (v0.c0)) THEN ((v0.c2) BETWEEN (v0.c0) AND (v0.c0)) ELSE CASE vt0.c1  WHEN vt0.c1 THEN NULL ELSE v0.c0 END END) UNION ALL SELECT * FROM vt0, v0, t0 WHERE ((NOT (CASE ((vt0.c1) NOTNULL)  WHEN COALESCE(DISTINCT vt0.c0, '-973035463') THEN CASE WHEN t0.c2 THEN t0.c0 ELSE v0.c1 END WHEN (v0.c1 IN ()) THEN ((v0.c0) BETWEEN ('') AND (v0.c1)) WHEN (~ (v0.c0)) THEN ((v0.c2) BETWEEN (v0.c0) AND (v0.c0)) ELSE CASE vt0.c1  WHEN vt0.c1 THEN NULL ELSE v0.c0 END END))) UNION ALL SELECT * FROM vt0, v0, t0 WHERE (((CASE ((vt0.c1) NOTNULL)  WHEN COALESCE(DISTINCT vt0.c0, '-973035463') THEN CASE WHEN t0.c2 THEN t0.c0 ELSE v0.c1 END WHEN (v0.c1 IN ()) THEN ((v0.c0) BETWEEN ('') AND (v0.c1)) WHEN (~ (v0.c0)) THEN ((v0.c2) BETWEEN (v0.c0) AND (v0.c0)) ELSE CASE vt0.c1  WHEN vt0.c1 THEN NULL ELSE v0.c0 END END) ISNULL));
SELECT * FROM vt0, v0, t0;
SELECT DISTINCT vt0.c0 FROM vt0, t0;
SELECT DISTINCT vt0.c0 FROM vt0, t0 WHERE (((((t0.c0)AND(LOWER(DISTINCT vt0.c1))))AND(((t0.c2)<(vt0.c0))))) UNION SELECT DISTINCT vt0.c0 FROM vt0, t0 WHERE ((NOT (((((t0.c0)AND(LOWER(DISTINCT vt0.c1))))AND(((t0.c2)<(vt0.c0))))))) UNION SELECT DISTINCT vt0.c0 FROM vt0, t0 WHERE (((((((t0.c0)AND(LOWER(DISTINCT vt0.c1))))AND(((t0.c2)<(vt0.c0))))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0, t0;
SELECT v0.c1, v0.c0, v0.c2 FROM v0 GROUP BY v0.c1, v0.c0, v0.c2;
SELECT v0.c1, v0.c0, v0.c2 FROM v0 WHERE ((- (((0.6939317870685133) ISNULL)))) GROUP BY v0.c1, v0.c0, v0.c2 UNION SELECT v0.c1, v0.c0, v0.c2 FROM v0 WHERE ((NOT ((- (((0.6939317870685133) ISNULL)))))) GROUP BY v0.c1, v0.c0, v0.c2 UNION SELECT v0.c1, v0.c0, v0.c2 FROM v0 WHERE ((((- (((0.6939317870685133) ISNULL)))) ISNULL)) GROUP BY v0.c1, v0.c0, v0.c2;
SELECT v0.c1, v0.c0, v0.c2 FROM v0 GROUP BY v0.c1, v0.c0, v0.c2;
SELECT ALL v0.c2, v0.c0, v0.c1 FROM v0 GROUP BY v0.c2, v0.c0, v0.c1;
SELECT v0.c2, v0.c0, v0.c1 FROM v0 GROUP BY v0.c2, v0.c0, v0.c1 HAVING CASE WHEN v0.c0 THEN SUM(MAX(SUM(v0.c0))) WHEN x'568f' THEN v0.c2 WHEN AVG(GROUP_CONCAT(MIN(v0.c1))) THEN COUNT(v0.c0) ELSE NULL END COLLATE RTRIM UNION ALL SELECT ALL v0.c2, v0.c0, v0.c1 FROM v0 GROUP BY v0.c2, v0.c0, v0.c1 HAVING (NOT (CASE WHEN v0.c0 THEN SUM(MAX(SUM(v0.c0))) WHEN x'568f' THEN v0.c2 WHEN AVG(GROUP_CONCAT(MIN(v0.c1))) THEN COUNT(v0.c0) ELSE NULL END COLLATE RTRIM)) UNION ALL SELECT v0.c2, v0.c0, v0.c1 FROM v0 GROUP BY v0.c2, v0.c0, v0.c1 HAVING ((CASE WHEN v0.c0 THEN SUM(MAX(SUM(v0.c0))) WHEN x'568f' THEN v0.c2 WHEN AVG(GROUP_CONCAT(MIN(v0.c1))) THEN COUNT(v0.c0) ELSE NULL END COLLATE RTRIM) ISNULL);
SELECT rt0.c2, rt0.c1, vt0.c1, rt0.c3, t0.c2, t0.c0, rt0.c4, vt0.c0, v0.c0, v0.c2, v0.c1 FROM t0, vt0, rt0, v0;
SELECT ALL rt0.c2, rt0.c1, vt0.c1, rt0.c3, t0.c2, t0.c0, rt0.c4, vt0.c0, v0.c0, v0.c2, v0.c1 FROM t0, vt0, rt0, v0 WHERE ('7N9 DN 7t') UNION ALL SELECT rt0.c2, rt0.c1, vt0.c1, rt0.c3, t0.c2, t0.c0, rt0.c4, vt0.c0, v0.c0, v0.c2, v0.c1 FROM t0, vt0, rt0, v0 WHERE ((NOT ('7N9 DN 7t'))) UNION ALL SELECT ALL rt0.c2, rt0.c1, vt0.c1, rt0.c3, t0.c2, t0.c0, rt0.c4, vt0.c0, v0.c0, v0.c2, v0.c1 FROM t0, vt0, rt0, v0 WHERE ((('7N9 DN 7t') ISNULL));
SELECT rt0.c2, rt0.c1, vt0.c1, rt0.c3, t0.c2, t0.c0, rt0.c4, vt0.c0, v0.c0, v0.c2, v0.c1 FROM t0, vt0, rt0, v0;
SELECT DISTINCT rt0.c4, rt0.c0 FROM rt0, v0;
SELECT DISTINCT rt0.c4, rt0.c0 FROM rt0, v0 WHERE ((((rt0.c2) IS FALSE) IN ())) UNION SELECT DISTINCT rt0.c4, rt0.c0 FROM rt0, v0 WHERE ((NOT ((((rt0.c2) IS FALSE) IN ())))) UNION SELECT DISTINCT rt0.c4, rt0.c0 FROM rt0, v0 WHERE ((((((rt0.c2) IS FALSE) IN ())) ISNULL));
SELECT DISTINCT rt0.c4, rt0.c0 FROM rt0, v0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE ((- ((- (vt0.c0))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT ((- ((- (vt0.c0))))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((((- ((- (vt0.c0))))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT rt0.c3, v0.c0, rt0.c2 FROM vt0, rt0, v0 GROUP BY rt0.c3, v0.c0, rt0.c2;
SELECT rt0.c3, v0.c0, rt0.c2 FROM vt0, rt0, v0 GROUP BY rt0.c3, v0.c0, rt0.c2 HAVING COUNT(COUNT(*)) UNION ALL SELECT rt0.c3, v0.c0, rt0.c2 FROM vt0, rt0, v0 GROUP BY rt0.c3, v0.c0, rt0.c2 HAVING (NOT (COUNT(COUNT(*)))) UNION ALL SELECT ALL rt0.c3, v0.c0, rt0.c2 FROM vt0, rt0, v0 GROUP BY rt0.c3, v0.c0, rt0.c2 HAVING ((COUNT(COUNT(*))) ISNULL);
SELECT v0.c1, rt0.c1, v0.c0, t0.c0, rt0.c4 FROM vt0, v0 CROSS JOIN rt0 ON ((vt0.c1 IN ()) IN ()) FULL OUTER JOIN t0 ON (~ (LTRIM(v0.c2)));
SELECT ALL v0.c1, rt0.c1, v0.c0, t0.c0, rt0.c4 FROM vt0, v0 CROSS JOIN rt0 ON ((vt0.c1 IN ()) IN ()) FULL OUTER JOIN t0 ON (~ (LTRIM(v0.c2))) WHERE (CASE WHEN (- (rt0.c2)) THEN ((vt0.c1)>=(vt0.c0)) ELSE (((rt0.c0, t0.c2, v0.c2)) NOT BETWEEN ((rt0.c1, v0.c1, rt0.c3)) AND ((vt0.c1, vt0.c0, rt0.c4))) END) UNION ALL SELECT v0.c1, rt0.c1, v0.c0, t0.c0, rt0.c4 FROM vt0, v0 CROSS JOIN rt0 ON ((vt0.c1 IN ()) IN ()) FULL OUTER JOIN t0 ON (~ (LTRIM(v0.c2))) WHERE ((NOT (CASE WHEN (- (rt0.c2)) THEN ((vt0.c1)>=(vt0.c0)) ELSE (((rt0.c0, t0.c2, v0.c2)) NOT BETWEEN ((rt0.c1, v0.c1, rt0.c3)) AND ((vt0.c1, vt0.c0, rt0.c4))) END))) UNION ALL SELECT ALL v0.c1, rt0.c1, v0.c0, t0.c0, rt0.c4 FROM vt0, v0 CROSS JOIN rt0 ON ((vt0.c1 IN ()) IN ()) FULL OUTER JOIN t0 ON (~ (LTRIM(v0.c2))) WHERE (((CASE WHEN (- (rt0.c2)) THEN ((vt0.c1)>=(vt0.c0)) ELSE (((rt0.c0, t0.c2, v0.c2)) NOT BETWEEN ((rt0.c1, v0.c1, rt0.c3)) AND ((vt0.c1, vt0.c0, rt0.c4))) END) ISNULL));
SELECT v0.c1, rt0.c1, v0.c0, t0.c0, rt0.c4 FROM vt0, v0 CROSS JOIN rt0 ON ((vt0.c1 IN ()) IN ()) FULL OUTER JOIN t0 ON (~ (LTRIM(v0.c2)));
SELECT DISTINCT rt0.c1, rt0.c4, v0.c2, rt0.c0, rt0.c2, rt0.c3, v0.c0 FROM v0, rt0;
SELECT DISTINCT rt0.c1, rt0.c4, v0.c2, rt0.c0, rt0.c2, rt0.c3, v0.c0 FROM v0, rt0 WHERE ((((NOT (rt0.c1))) IS TRUE)) UNION SELECT DISTINCT rt0.c1, rt0.c4, v0.c2, rt0.c0, rt0.c2, rt0.c3, v0.c0 FROM v0, rt0 WHERE ((NOT ((((NOT (rt0.c1))) IS TRUE)))) UNION SELECT DISTINCT rt0.c1, rt0.c4, v0.c2, rt0.c0, rt0.c2, rt0.c3, v0.c0 FROM v0, rt0 WHERE ((((((NOT (rt0.c1))) IS TRUE)) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c4, v0.c2, rt0.c0, rt0.c2, rt0.c3, v0.c0 FROM v0, rt0;
SELECT rt0.c4, t0.c2, rt0.c1 FROM rt0, v0, t0, vt0 GROUP BY rt0.c4, t0.c2, rt0.c1;
SELECT rt0.c4, t0.c2, rt0.c1 FROM rt0, v0, t0, vt0 WHERE (((((v0.c1) ISNULL))=(NULL))) GROUP BY rt0.c4, t0.c2, rt0.c1 UNION SELECT rt0.c4, t0.c2, rt0.c1 FROM rt0, v0, t0, vt0 WHERE ((NOT (((((v0.c1) ISNULL))=(NULL))))) GROUP BY rt0.c4, t0.c2, rt0.c1 UNION SELECT rt0.c4, t0.c2, rt0.c1 FROM rt0, v0, t0, vt0 WHERE (((((((v0.c1) ISNULL))=(NULL))) ISNULL)) GROUP BY rt0.c4, t0.c2, rt0.c1;
SELECT rt0.c4, t0.c2, rt0.c1 FROM rt0, v0, t0, vt0 GROUP BY rt0.c4, t0.c2, rt0.c1;
SELECT ALL v0.c2 FROM rt0 INNER JOIN v0 ON ((CAST(v0.c2 AS TEXT))||(((rt0.c4)|(v0.c0)))) LEFT OUTER JOIN t0 ON ((CASE rt0.c4  WHEN v0.c2 THEN rt0.c2 ELSE rt0.c3 END) BETWEEN (((rt0.c2) BETWEEN (vt0.c1) AND (t0.c2))) AND ('0.6766381900831683')) CROSS JOIN vt0 ON ((json_valid(t0.c0))AND(((t0.c0) ISNULL))) GROUP BY v0.c2;
SELECT vt0.c1, rt0.c1 FROM rt0, vt0;
SELECT ALL vt0.c1, rt0.c1 FROM rt0, vt0 WHERE (TYPEOF(CAST(vt0.c1 AS TEXT))) UNION ALL SELECT ALL vt0.c1, rt0.c1 FROM rt0, vt0 WHERE ((NOT (TYPEOF(CAST(vt0.c1 AS TEXT))))) UNION ALL SELECT ALL vt0.c1, rt0.c1 FROM rt0, vt0 WHERE (((TYPEOF(CAST(vt0.c1 AS TEXT))) ISNULL));
SELECT vt0.c1, rt0.c1 FROM rt0, vt0;
SELECT DISTINCT rt0.c4, t0.c2, t0.c0, vt0.c1, rt0.c2, vt0.c0, rt0.c3 FROM t0 INNER JOIN rt0 ON ((STRFTIME(rt0.c3, vt0.c0, v0.c2, v0.c2, v0.c2, rt0.c2, t0.c0))AND(((rt0.c0) BETWEEN (v0.c0) AND (vt0.c1)))) FULL OUTER JOIN vt0 ON (((((x''))=((v0.c0)))) BETWEEN (CAST(t0.c2 AS NUMERIC)) AND (0.6383012269942009)) CROSS JOIN v0 ON (((rt0.c1)) BETWEEN (((vt0.c1 IN ()))) AND (((t0.c2 IN ()))));
SELECT ALL t0.c0, t0.c2 FROM t0 GROUP BY t0.c0, t0.c2;
SELECT ALL t0.c0, t0.c2 FROM t0 WHERE (((CAST(t0.c0 AS BLOB)) NOT NULL)) GROUP BY t0.c0, t0.c2 UNION SELECT t0.c0, t0.c2 FROM t0 WHERE ((NOT (((CAST(t0.c0 AS BLOB)) NOT NULL)))) GROUP BY t0.c0, t0.c2 UNION SELECT t0.c0, t0.c2 FROM t0 WHERE (((((CAST(t0.c0 AS BLOB)) NOT NULL)) ISNULL)) GROUP BY t0.c0, t0.c2;
SELECT ALL t0.c0, t0.c2 FROM t0 GROUP BY t0.c0, t0.c2;
SELECT v0.c0, vt0.c1, v0.c1, vt0.c0, t0.c0 FROM vt0, t0 CROSS JOIN v0 ON ((((((((((vt0.c1)%(vt0.c1)))OR(TRIM(vt0.c0, v0.c2))))OR(((vt0.c0) NOTNULL))))OR((vt0.c0 IN ('k')))))OR((t0.c0 IN (v0.c0, v0.c0)))) GROUP BY v0.c0, vt0.c1, v0.c1, vt0.c0, t0.c0;
SELECT v0.c0, vt0.c1, v0.c1, vt0.c0, t0.c0 FROM vt0, t0 CROSS JOIN v0 ON ((((((((((vt0.c1)%(vt0.c1)))OR(TRIM(vt0.c0, v0.c2))))OR(((vt0.c0) NOTNULL))))OR((vt0.c0 IN ('k')))))OR((t0.c0 IN (v0.c0, v0.c0)))) GROUP BY v0.c0, vt0.c1, v0.c1, vt0.c0, t0.c0 HAVING ((IFNULL(MIN(COUNT(vt0.c0)), '-1635361674'))<=(COUNT(*))) UNION ALL SELECT ALL v0.c0, vt0.c1, v0.c1, vt0.c0, t0.c0 FROM vt0, t0 CROSS JOIN v0 ON ((((((((((vt0.c1)%(vt0.c1)))OR(TRIM(vt0.c0, v0.c2))))OR(((vt0.c0) NOTNULL))))OR((vt0.c0 IN ('k')))))OR((t0.c0 IN (v0.c0, v0.c0)))) GROUP BY v0.c0, vt0.c1, v0.c1, vt0.c0, t0.c0 HAVING (NOT (((IFNULL(MIN(COUNT(vt0.c0)), '-1635361674'))<=(COUNT(*))))) UNION ALL SELECT ALL v0.c0, vt0.c1, v0.c1, vt0.c0, t0.c0 FROM vt0, t0 CROSS JOIN v0 ON ((((((((((vt0.c1)%(vt0.c1)))OR(TRIM(vt0.c0, v0.c2))))OR(((vt0.c0) NOTNULL))))OR((vt0.c0 IN ('k')))))OR((t0.c0 IN (v0.c0, v0.c0)))) GROUP BY v0.c0, vt0.c1, v0.c1, vt0.c0, t0.c0 HAVING ((((IFNULL(MIN(COUNT(vt0.c0)), '-1635361674'))<=(COUNT(*)))) ISNULL);
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE ((((rt0.c2) BETWEEN (rt0.c4) AND (rt0.c1)) IN ())) UNION ALL SELECT * FROM rt0 WHERE ((NOT ((((rt0.c2) BETWEEN (rt0.c4) AND (rt0.c1)) IN ())))) UNION ALL SELECT ALL * FROM rt0 WHERE ((((((rt0.c2) BETWEEN (rt0.c4) AND (rt0.c1)) IN ())) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT t0.c2, t0.c0, rt0.c4, vt0.c0, rt0.c3 FROM vt0, t0, rt0;
SELECT DISTINCT t0.c2, t0.c0, rt0.c4, vt0.c0, rt0.c3 FROM vt0, t0, rt0 WHERE (((((((((((vt0.c1) NOT BETWEEN (vt0.c1) AND (rt0.c4)))OR(((rt0.c3) IS FALSE))))AND((~ (t0.c2)))))AND((((t0.c0)) NOT BETWEEN ((t0.c2)) AND ((0.31558458123490785))))))AND(((((rt0.c3)AND(rt0.c3)))OR(vt0.c1))))) UNION SELECT DISTINCT t0.c2, t0.c0, rt0.c4, vt0.c0, rt0.c3 FROM vt0, t0, rt0 WHERE ((NOT (((((((((((vt0.c1) NOT BETWEEN (vt0.c1) AND (rt0.c4)))OR(((rt0.c3) IS FALSE))))AND((~ (t0.c2)))))AND((((t0.c0)) NOT BETWEEN ((t0.c2)) AND ((0.31558458123490785))))))AND(((((rt0.c3)AND(rt0.c3)))OR(vt0.c1))))))) UNION SELECT DISTINCT t0.c2, t0.c0, rt0.c4, vt0.c0, rt0.c3 FROM vt0, t0, rt0 WHERE (((((((((((((vt0.c1) NOT BETWEEN (vt0.c1) AND (rt0.c4)))OR(((rt0.c3) IS FALSE))))AND((~ (t0.c2)))))AND((((t0.c0)) NOT BETWEEN ((t0.c2)) AND ((0.31558458123490785))))))AND(((((rt0.c3)AND(rt0.c3)))OR(vt0.c1))))) ISNULL));
SELECT DISTINCT t0.c2, t0.c0, rt0.c4, vt0.c0, rt0.c3 FROM vt0, t0, rt0;
SELECT ALL t0.c0, v0.c0, rt0.c2, t0.c2, rt0.c1, v0.c1, v0.c2, vt0.c1, rt0.c3, vt0.c0 FROM v0, vt0, rt0 CROSS JOIN t0 ON ((LIKELIHOOD(t0.c0, 0.8328153198308895))<<(t0.c2 COLLATE BINARY)) GROUP BY t0.c0, v0.c0, rt0.c2, t0.c2, rt0.c1, v0.c1, v0.c2, vt0.c1, rt0.c3, vt0.c0;
SELECT ALL t0.c0, v0.c0, rt0.c2, t0.c2, rt0.c1, v0.c1, v0.c2, vt0.c1, rt0.c3, vt0.c0 FROM v0, vt0, rt0 CROSS JOIN t0 ON ((LIKELIHOOD(t0.c0, 0.8328153198308895))<<(t0.c2 COLLATE BINARY)) WHERE (CASE WHEN ((((t0.c0)AND(rt0.c2)))OR(v0.c0)) THEN ((rt0.c1) NOTNULL) END) GROUP BY t0.c0, v0.c0, rt0.c2, t0.c2, rt0.c1, v0.c1, v0.c2, vt0.c1, rt0.c3, vt0.c0 UNION SELECT ALL t0.c0, v0.c0, rt0.c2, t0.c2, rt0.c1, v0.c1, v0.c2, vt0.c1, rt0.c3, vt0.c0 FROM v0, vt0, rt0 CROSS JOIN t0 ON ((LIKELIHOOD(t0.c0, 0.8328153198308895))<<(t0.c2 COLLATE BINARY)) WHERE ((NOT (CASE WHEN ((((t0.c0)AND(rt0.c2)))OR(v0.c0)) THEN ((rt0.c1) NOTNULL) END))) GROUP BY t0.c0, v0.c0, rt0.c2, t0.c2, rt0.c1, v0.c1, v0.c2, vt0.c1, rt0.c3, vt0.c0 UNION SELECT ALL t0.c0, v0.c0, rt0.c2, t0.c2, rt0.c1, v0.c1, v0.c2, vt0.c1, rt0.c3, vt0.c0 FROM v0, vt0, rt0 CROSS JOIN t0 ON ((LIKELIHOOD(t0.c0, 0.8328153198308895))<<(t0.c2 COLLATE BINARY)) WHERE (((CASE WHEN ((((t0.c0)AND(rt0.c2)))OR(v0.c0)) THEN ((rt0.c1) NOTNULL) END) ISNULL)) GROUP BY t0.c0, v0.c0, rt0.c2, t0.c2, rt0.c1, v0.c1, v0.c2, vt0.c1, rt0.c3, vt0.c0;
SELECT ALL t0.c0, v0.c0, rt0.c2, t0.c2, rt0.c1, v0.c1, v0.c2, vt0.c1, rt0.c3, vt0.c0 FROM v0, vt0, rt0 CROSS JOIN t0 ON ((LIKELIHOOD(t0.c0, 0.8328153198308895))<<(t0.c2 COLLATE BINARY)) GROUP BY t0.c0, v0.c0, rt0.c2, t0.c2, rt0.c1, v0.c1, v0.c2, vt0.c1, rt0.c3, vt0.c0;
SELECT rt0.c0, vt0.c0, t0.c0, v0.c2 FROM v0, t0 INNER JOIN vt0 ON (rt0.c0 COLLATE BINARY IN ()) RIGHT OUTER JOIN rt0 ON x'' GROUP BY rt0.c0, vt0.c0, t0.c0, v0.c2;
SELECT rt0.c0, vt0.c0, t0.c0, v0.c2 FROM v0, t0 INNER JOIN vt0 ON (rt0.c0 COLLATE BINARY IN ()) RIGHT OUTER JOIN rt0 ON x'' GROUP BY rt0.c0, vt0.c0, t0.c0, v0.c2 HAVING AVG(MAX(TOTAL(t0.c2))) UNION ALL SELECT ALL rt0.c0, vt0.c0, t0.c0, v0.c2 FROM v0, t0 INNER JOIN vt0 ON (rt0.c0 COLLATE BINARY IN ()) RIGHT OUTER JOIN rt0 ON x'' GROUP BY rt0.c0, vt0.c0, t0.c0, v0.c2 HAVING (NOT (AVG(MAX(TOTAL(t0.c2))))) UNION ALL SELECT rt0.c0, vt0.c0, t0.c0, v0.c2 FROM v0, t0 INNER JOIN vt0 ON (rt0.c0 COLLATE BINARY IN ()) RIGHT OUTER JOIN rt0 ON x'' GROUP BY rt0.c0, vt0.c0, t0.c0, v0.c2 HAVING ((AVG(MAX(TOTAL(t0.c2)))) ISNULL);
SELECT ALL rt0.c0, v0.c2, vt0.c0, rt0.c1, rt0.c3, rt0.c2, rt0.c4 FROM vt0, v0, rt0;
SELECT rt0.c0, v0.c2, vt0.c0, rt0.c1, rt0.c3, rt0.c2, rt0.c4 FROM vt0, v0, rt0 WHERE (TYPEOF(CASE v0.c1  WHEN rt0.c3 THEN 0.011127591896111122 WHEN x'' THEN rt0.c0 WHEN rt0.c3 THEN rt0.c3 WHEN v0.c0 THEN v0.c0 WHEN rt0.c2 THEN v0.c2 END)) UNION ALL SELECT rt0.c0, v0.c2, vt0.c0, rt0.c1, rt0.c3, rt0.c2, rt0.c4 FROM vt0, v0, rt0 WHERE ((NOT (TYPEOF(CASE v0.c1  WHEN rt0.c3 THEN 0.011127591896111122 WHEN x'' THEN rt0.c0 WHEN rt0.c3 THEN rt0.c3 WHEN v0.c0 THEN v0.c0 WHEN rt0.c2 THEN v0.c2 END)))) UNION ALL SELECT ALL rt0.c0, v0.c2, vt0.c0, rt0.c1, rt0.c3, rt0.c2, rt0.c4 FROM vt0, v0, rt0 WHERE (((TYPEOF(CASE v0.c1  WHEN rt0.c3 THEN 0.011127591896111122 WHEN x'' THEN rt0.c0 WHEN rt0.c3 THEN rt0.c3 WHEN v0.c0 THEN v0.c0 WHEN rt0.c2 THEN v0.c2 END)) ISNULL));
SELECT ALL rt0.c0, v0.c2, vt0.c0, rt0.c1, rt0.c3, rt0.c2, rt0.c4 FROM vt0, v0, rt0;
SELECT DISTINCT * FROM v0, vt0 RIGHT OUTER JOIN rt0 ON ((((v0.c1)<=(v0.c2)))/(NULL COLLATE NOCASE));
SELECT DISTINCT * FROM v0, vt0 RIGHT OUTER JOIN rt0 ON ((((v0.c1)<=(v0.c2)))/(NULL COLLATE NOCASE)) WHERE (CAST(LENGTH(rt0.c3) AS TEXT)) UNION SELECT DISTINCT * FROM v0, vt0 RIGHT OUTER JOIN rt0 ON ((((v0.c1)<=(v0.c2)))/(NULL COLLATE NOCASE)) WHERE ((NOT (CAST(LENGTH(rt0.c3) AS TEXT)))) UNION SELECT DISTINCT * FROM v0, vt0 RIGHT OUTER JOIN rt0 ON ((((v0.c1)<=(v0.c2)))/(NULL COLLATE NOCASE)) WHERE (((CAST(LENGTH(rt0.c3) AS TEXT)) ISNULL));
SELECT DISTINCT * FROM v0, vt0 RIGHT OUTER JOIN rt0 ON ((((v0.c1)<=(v0.c2)))/(NULL COLLATE NOCASE));
SELECT v0.c0 FROM v0, t0, vt0, rt0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0, t0, vt0, rt0 WHERE (((((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c4)))AND(((v0.c0) BETWEEN (rt0.c3) AND (x'febdd2f6')))))AND(rt0.c2))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0, t0, vt0, rt0 WHERE ((NOT (((((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c4)))AND(((v0.c0) BETWEEN (rt0.c3) AND (x'febdd2f6')))))AND(rt0.c2))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0, t0, vt0, rt0 WHERE (((((((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c4)))AND(((v0.c0) BETWEEN (rt0.c3) AND (x'febdd2f6')))))AND(rt0.c2))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0, t0, vt0, rt0 GROUP BY v0.c0;
SELECT v0.c2, vt0.c1 FROM v0, vt0 GROUP BY v0.c2, vt0.c1;
SELECT v0.c2, vt0.c1 FROM v0, vt0 GROUP BY v0.c2, vt0.c1 HAVING '0.6030031248785837' UNION ALL SELECT ALL v0.c2, vt0.c1 FROM v0, vt0 GROUP BY v0.c2, vt0.c1 HAVING (NOT ('0.6030031248785837')) UNION ALL SELECT ALL v0.c2, vt0.c1 FROM v0, vt0 GROUP BY v0.c2, vt0.c1 HAVING (('0.6030031248785837') ISNULL);
SELECT v0.c2, vt0.c1 FROM v0, vt0 GROUP BY v0.c2, vt0.c1;
SELECT v0.c2, vt0.c1 FROM v0, vt0 GROUP BY v0.c2, vt0.c1 HAVING '0.6030031248785837' UNION ALL SELECT ALL v0.c2, vt0.c1 FROM v0, vt0 GROUP BY v0.c2, vt0.c1 HAVING (NOT ('0.6030031248785837')) UNION ALL SELECT ALL v0.c2, vt0.c1 FROM v0, vt0 GROUP BY v0.c2, vt0.c1 HAVING (('0.6030031248785837') ISNULL);
SELECT v0.c2, vt0.c1 FROM v0, vt0 GROUP BY v0.c2, vt0.c1;
SELECT ALL t0.c2, rt0.c2, rt0.c1, v0.c2, rt0.c3, vt0.c1, v0.c0, rt0.c4, t0.c0, rt0.c0 FROM t0, vt0, v0, rt0;
SELECT t0.c2, rt0.c2, rt0.c1, v0.c2, rt0.c3, vt0.c1, v0.c0, rt0.c4, t0.c0, rt0.c0 FROM t0, vt0, v0, rt0 WHERE (((vt0.c1)>(rt0.c1)) COLLATE BINARY) UNION ALL SELECT ALL t0.c2, rt0.c2, rt0.c1, v0.c2, rt0.c3, vt0.c1, v0.c0, rt0.c4, t0.c0, rt0.c0 FROM t0, vt0, v0, rt0 WHERE ((NOT (((vt0.c1)>(rt0.c1)) COLLATE BINARY))) UNION ALL SELECT t0.c2, rt0.c2, rt0.c1, v0.c2, rt0.c3, vt0.c1, v0.c0, rt0.c4, t0.c0, rt0.c0 FROM t0, vt0, v0, rt0 WHERE (((((vt0.c1)>(rt0.c1)) COLLATE BINARY) ISNULL));
SELECT ALL t0.c2, rt0.c2, rt0.c1, v0.c2, rt0.c3, vt0.c1, v0.c0, rt0.c4, t0.c0, rt0.c0 FROM t0, vt0, v0, rt0;
SELECT DISTINCT * FROM vt0, rt0, t0;
SELECT DISTINCT * FROM vt0, rt0, t0 WHERE (((vt0.c1) NOT BETWEEN (((((rt0.c2)AND(rt0.c1)))AND(vt0.c0))) AND (CAST(t0.c2 AS INTEGER)))) UNION SELECT DISTINCT * FROM vt0, rt0, t0 WHERE ((NOT (((vt0.c1) NOT BETWEEN (((((rt0.c2)AND(rt0.c1)))AND(vt0.c0))) AND (CAST(t0.c2 AS INTEGER)))))) UNION SELECT DISTINCT * FROM vt0, rt0, t0 WHERE (((((vt0.c1) NOT BETWEEN (((((rt0.c2)AND(rt0.c1)))AND(vt0.c0))) AND (CAST(t0.c2 AS INTEGER)))) ISNULL));
SELECT DISTINCT * FROM vt0, rt0, t0;
SELECT rt0.c4, rt0.c0, rt0.c3, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c4, rt0.c0, rt0.c3, rt0.c2, rt0.c1;
SELECT rt0.c4, rt0.c0, rt0.c3, rt0.c2, rt0.c1 FROM rt0 WHERE ((((rt0.c0 IN ())) BETWEEN (((rt0.c2)<>(rt0.c2))) AND (rt0.c4 COLLATE RTRIM))) GROUP BY rt0.c4, rt0.c0, rt0.c3, rt0.c2, rt0.c1 UNION SELECT ALL rt0.c4, rt0.c0, rt0.c3, rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT ((((rt0.c0 IN ())) BETWEEN (((rt0.c2)!=(rt0.c2))) AND (rt0.c4 COLLATE RTRIM))))) GROUP BY rt0.c4, rt0.c0, rt0.c3, rt0.c2, rt0.c1 UNION SELECT ALL rt0.c4, rt0.c0, rt0.c3, rt0.c2, rt0.c1 FROM rt0 WHERE ((((((rt0.c0 IN ())) BETWEEN (((rt0.c2)!=(rt0.c2))) AND (rt0.c4 COLLATE RTRIM))) ISNULL)) GROUP BY rt0.c4, rt0.c0, rt0.c3, rt0.c2, rt0.c1;
SELECT rt0.c4, rt0.c0, rt0.c3, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c4, rt0.c0, rt0.c3, rt0.c2, rt0.c1;
SELECT vt0.c0, v0.c0, t0.c0, vt0.c1, v0.c1, t0.c2 FROM v0, t0 CROSS JOIN vt0 ON ((((((v0.c2) NOT NULL))OR(((vt0.c0) BETWEEN (t0.c0) AND (v0.c0)))))OR('-165812165')) GROUP BY vt0.c0, v0.c0, t0.c0, vt0.c1, v0.c1, t0.c2;
SELECT vt0.c0, v0.c0, t0.c0, vt0.c1, v0.c1, t0.c2 FROM v0, t0 CROSS JOIN vt0 ON ((((((v0.c2) NOT NULL))OR(((vt0.c0) BETWEEN (t0.c0) AND (v0.c0)))))OR('-165812165')) GROUP BY vt0.c0, v0.c0, t0.c0, vt0.c1, v0.c1, t0.c2 HAVING COUNT(*) UNION ALL SELECT ALL vt0.c0, v0.c0, t0.c0, vt0.c1, v0.c1, t0.c2 FROM v0, t0 CROSS JOIN vt0 ON ((((((v0.c2) NOT NULL))OR(((vt0.c0) BETWEEN (t0.c0) AND (v0.c0)))))OR('-165812165')) GROUP BY vt0.c0, v0.c0, t0.c0, vt0.c1, v0.c1, t0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt0.c0, v0.c0, t0.c0, vt0.c1, v0.c1, t0.c2 FROM v0, t0 CROSS JOIN vt0 ON ((((((v0.c2) NOT NULL))OR(((vt0.c0) BETWEEN (t0.c0) AND (v0.c0)))))OR('-165812165')) GROUP BY vt0.c0, v0.c0, t0.c0, vt0.c1, v0.c1, t0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT vt0.c0, v0.c0, t0.c0, vt0.c1, v0.c1, t0.c2 FROM v0, t0 CROSS JOIN vt0 ON ((((((v0.c2) NOT NULL))OR(((vt0.c0) BETWEEN (t0.c0) AND (v0.c0)))))OR('-165812165')) GROUP BY vt0.c0, v0.c0, t0.c0, vt0.c1, v0.c1, t0.c2;
SELECT vt0.c0, v0.c0, t0.c0, vt0.c1, v0.c1, t0.c2 FROM v0, t0 CROSS JOIN vt0 ON ((((((v0.c2) NOT NULL))OR(((vt0.c0) BETWEEN (t0.c0) AND (v0.c0)))))OR('-165812165')) GROUP BY vt0.c0, v0.c0, t0.c0, vt0.c1, v0.c1, t0.c2 HAVING COUNT(*) UNION ALL SELECT ALL vt0.c0, v0.c0, t0.c0, vt0.c1, v0.c1, t0.c2 FROM v0, t0 CROSS JOIN vt0 ON ((((((v0.c2) NOT NULL))OR(((vt0.c0) BETWEEN (t0.c0) AND (v0.c0)))))OR('-165812165')) GROUP BY vt0.c0, v0.c0, t0.c0, vt0.c1, v0.c1, t0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt0.c0, v0.c0, t0.c0, vt0.c1, v0.c1, t0.c2 FROM v0, t0 CROSS JOIN vt0 ON ((((((v0.c2) NOT NULL))OR(((vt0.c0) BETWEEN (t0.c0) AND (v0.c0)))))OR('-165812165')) GROUP BY vt0.c0, v0.c0, t0.c0, vt0.c1, v0.c1, t0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT vt0.c0, v0.c0, t0.c0, vt0.c1, v0.c1, t0.c2 FROM v0, t0 CROSS JOIN vt0 ON ((((((v0.c2) NOT NULL))OR(((vt0.c0) BETWEEN (t0.c0) AND (v0.c0)))))OR('-165812165')) GROUP BY vt0.c0, v0.c0, t0.c0, vt0.c1, v0.c1, t0.c2;
SELECT ALL * FROM vt0 LEFT OUTER JOIN v0 ON v0.c0 INNER JOIN rt0 ON ((v0.c0)IS NOT((~ (vt0.c0))));
SELECT ALL * FROM vt0 LEFT OUTER JOIN v0 ON v0.c0 INNER JOIN rt0 ON ((v0.c0)IS NOT((~ (vt0.c0)))) WHERE (CAST(json_patch(v0.c1, v0.c1) AS BLOB)) UNION ALL SELECT * FROM vt0 LEFT OUTER JOIN v0 ON v0.c0 INNER JOIN rt0 ON ((v0.c0)IS NOT((~ (vt0.c0)))) WHERE ((NOT (CAST(json_patch(v0.c1, v0.c1) AS BLOB)))) UNION ALL SELECT * FROM vt0 LEFT OUTER JOIN v0 ON v0.c0 INNER JOIN rt0 ON ((v0.c0)IS NOT((~ (vt0.c0)))) WHERE (((CAST(json_patch(v0.c1, v0.c1) AS BLOB)) ISNULL));
SELECT ALL * FROM vt0 LEFT OUTER JOIN v0 ON v0.c0 INNER JOIN rt0 ON ((v0.c0)IS NOT((~ (vt0.c0))));
SELECT DISTINCT * FROM t0, rt0;
SELECT DISTINCT * FROM t0, rt0 WHERE (HEX(json_array_length(rt0.c1, t0.c2))) UNION SELECT DISTINCT * FROM t0, rt0 WHERE ((NOT (HEX(json_array_length(rt0.c1, t0.c2))))) UNION SELECT DISTINCT * FROM t0, rt0 WHERE (((HEX(json_array_length(rt0.c1, t0.c2))) ISNULL));
SELECT DISTINCT * FROM t0, rt0;
SELECT ALL v0.c1, v0.c2, t0.c2 FROM t0, v0 GROUP BY v0.c1, v0.c2, t0.c2;
SELECT ALL v0.c1, v0.c2, t0.c2 FROM t0, v0 WHERE (((((v0.c2) ISNULL)) BETWEEN (((v0.c2) IS TRUE)) AND (v0.c0 COLLATE BINARY))) GROUP BY v0.c1, v0.c2, t0.c2 UNION SELECT v0.c1, v0.c2, t0.c2 FROM t0, v0 WHERE ((NOT (((((v0.c2) ISNULL)) BETWEEN (((v0.c2) IS TRUE)) AND (v0.c0 COLLATE BINARY))))) GROUP BY v0.c1, v0.c2, t0.c2 UNION SELECT ALL v0.c1, v0.c2, t0.c2 FROM t0, v0 WHERE (((((((v0.c2) ISNULL)) BETWEEN (((v0.c2) IS TRUE)) AND (v0.c0 COLLATE BINARY))) ISNULL)) GROUP BY v0.c1, v0.c2, t0.c2;
SELECT ALL v0.c1, v0.c2, t0.c2 FROM t0, v0 GROUP BY v0.c1, v0.c2, t0.c2;
SELECT rt0.c3, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c3, rt0.c2, rt0.c1;
SELECT ALL rt0.c3, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c3, rt0.c2, rt0.c1 HAVING COUNT(*) UNION ALL SELECT rt0.c3, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c3, rt0.c2, rt0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c3, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c3, rt0.c2, rt0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c3, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c3, rt0.c2, rt0.c1;
SELECT ALL rt0.c3, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c3, rt0.c2, rt0.c1 HAVING COUNT(*) UNION ALL SELECT rt0.c3, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c3, rt0.c2, rt0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c3, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c3, rt0.c2, rt0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c3, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c3, rt0.c2, rt0.c1;
SELECT ALL * FROM rt0, v0;
SELECT * FROM rt0, v0 WHERE (0.2387235763233625) UNION ALL SELECT ALL * FROM rt0, v0 WHERE ((NOT (0.2387235763233625))) UNION ALL SELECT * FROM rt0, v0 WHERE (((0.2387235763233625) ISNULL));
SELECT ALL * FROM rt0, v0;
SELECT DISTINCT t0.c2, rt0.c3, v0.c2, v0.c0, v0.c1, rt0.c2, t0.c0, rt0.c0, rt0.c1, vt0.c0, rt0.c4 FROM rt0, t0, v0 NOT INDEXED NATURAL JOIN vt0;
SELECT DISTINCT t0.c2, rt0.c3, v0.c2, v0.c0, v0.c1, rt0.c2, t0.c0, rt0.c0, rt0.c1, vt0.c0, rt0.c4 FROM rt0, t0, v0 NATURAL JOIN vt0 WHERE (((((rt0.c4)AND(rt0.c2)))GLOB(CAST(v0.c2 AS REAL)))) UNION SELECT DISTINCT t0.c2, rt0.c3, v0.c2, v0.c0, v0.c1, rt0.c2, t0.c0, rt0.c0, rt0.c1, vt0.c0, rt0.c4 FROM rt0, t0, v0 NATURAL JOIN vt0 WHERE ((NOT (((((rt0.c4)AND(rt0.c2)))GLOB(CAST(v0.c2 AS REAL)))))) UNION SELECT DISTINCT t0.c2, rt0.c3, v0.c2, v0.c0, v0.c1, rt0.c2, t0.c0, rt0.c0, rt0.c1, vt0.c0, rt0.c4 FROM rt0, t0, v0 NATURAL JOIN vt0 WHERE (((((((rt0.c4)AND(rt0.c2)))GLOB(CAST(v0.c2 AS REAL)))) ISNULL));
SELECT DISTINCT t0.c2, rt0.c3, v0.c2, v0.c0, v0.c1, rt0.c2, t0.c0, rt0.c0, rt0.c1, vt0.c0, rt0.c4 FROM rt0, t0, v0 NOT INDEXED NATURAL JOIN vt0;
SELECT rt0.c2, v0.c2, t0.c0, rt0.c1, rt0.c4, v0.c0, rt0.c3, vt0.c1, vt0.c0, v0.c1 FROM rt0 LEFT OUTER JOIN v0 ON (~ (((v0.c1)!=(v0.c0)))) INNER JOIN vt0 ON -1.027487128E9 COLLATE RTRIM FULL OUTER JOIN t0 ON ((((rt0.c1)LIKE(t0.c2))) ISNULL) GROUP BY rt0.c2, v0.c2, t0.c0, rt0.c1, rt0.c4, v0.c0, rt0.c3, vt0.c1, vt0.c0, v0.c1;
SELECT rt0.c2, v0.c2, t0.c0, rt0.c1, rt0.c4, v0.c0, rt0.c3, vt0.c1, vt0.c0, v0.c1 FROM rt0 LEFT OUTER JOIN v0 ON (~ (((v0.c1)<>(v0.c0)))) INNER JOIN vt0 ON -1.027487128E9 COLLATE RTRIM FULL OUTER JOIN t0 ON ((((rt0.c1)LIKE(t0.c2))) ISNULL) WHERE (((HEX(DISTINCT vt0.c1)) NOT BETWEEN (rt0.c1 COLLATE BINARY) AND (((t0.c2)!=(rt0.c3))))) GROUP BY rt0.c2, v0.c2, t0.c0, rt0.c1, rt0.c4, v0.c0, rt0.c3, vt0.c1, vt0.c0, v0.c1 UNION SELECT rt0.c2, v0.c2, t0.c0, rt0.c1, rt0.c4, v0.c0, rt0.c3, vt0.c1, vt0.c0, v0.c1 FROM rt0 LEFT OUTER JOIN v0 ON (~ (((v0.c1)<>(v0.c0)))) INNER JOIN vt0 ON -1.027487128E9 COLLATE RTRIM FULL OUTER JOIN t0 ON ((((rt0.c1)LIKE(t0.c2))) ISNULL) WHERE ((NOT (((HEX(DISTINCT vt0.c1)) NOT BETWEEN (rt0.c1 COLLATE BINARY) AND (((t0.c2)!=(rt0.c3))))))) GROUP BY rt0.c2, v0.c2, t0.c0, rt0.c1, rt0.c4, v0.c0, rt0.c3, vt0.c1, vt0.c0, v0.c1 UNION SELECT rt0.c2, v0.c2, t0.c0, rt0.c1, rt0.c4, v0.c0, rt0.c3, vt0.c1, vt0.c0, v0.c1 FROM rt0 LEFT OUTER JOIN v0 ON (~ (((v0.c1)<>(v0.c0)))) INNER JOIN vt0 ON -1.027487128E9 COLLATE RTRIM FULL OUTER JOIN t0 ON ((((rt0.c1)LIKE(t0.c2))) ISNULL) WHERE (((((HEX(DISTINCT vt0.c1)) NOT BETWEEN (rt0.c1 COLLATE BINARY) AND (((t0.c2)!=(rt0.c3))))) ISNULL)) GROUP BY rt0.c2, v0.c2, t0.c0, rt0.c1, rt0.c4, v0.c0, rt0.c3, vt0.c1, vt0.c0, v0.c1;
SELECT rt0.c2, v0.c2, t0.c0, rt0.c1, rt0.c4, v0.c0, rt0.c3, vt0.c1, vt0.c0, v0.c1 FROM rt0 LEFT OUTER JOIN v0 ON (~ (((v0.c1)!=(v0.c0)))) INNER JOIN vt0 ON -1.027487128E9 COLLATE RTRIM FULL OUTER JOIN t0 ON ((((rt0.c1)LIKE(t0.c2))) ISNULL) GROUP BY rt0.c2, v0.c2, t0.c0, rt0.c1, rt0.c4, v0.c0, rt0.c3, vt0.c1, vt0.c0, v0.c1;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING COUNT(CAST(AVG(COUNT(*)) AS TEXT)) UNION ALL SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT (COUNT(CAST(AVG(COUNT(*)) AS TEXT)))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING ((COUNT(CAST(AVG(COUNT(*)) AS TEXT))) ISNULL);
SELECT rt0.c3, t0.c0, rt0.c1, rt0.c2, v0.c0, t0.c2, rt0.c0, rt0.c4 FROM rt0 FULL OUTER JOIN v0 ON (- ((((vt0.c0))<=((vt0.c0))))) LEFT OUTER JOIN t0 ON ((CASE WHEN rt0.c2 THEN rt0.c4 WHEN rt0.c2 THEN t0.c2 WHEN rt0.c0 THEN 0xffffffff87825101 END) NOT NULL) INNER JOIN vt0 ON ((0.16020494316355138) IS FALSE);
SELECT DISTINCT * FROM t0, vt0, rt0;
SELECT DISTINCT * FROM t0, vt0, rt0 WHERE (UNLIKELY(((rt0.c1) BETWEEN (t0.c2) AND (rt0.c2)))) UNION SELECT DISTINCT * FROM t0, vt0, rt0 WHERE ((NOT (UNLIKELY(((rt0.c1) BETWEEN (t0.c2) AND (rt0.c2)))))) UNION SELECT DISTINCT * FROM t0, vt0, rt0 WHERE (((UNLIKELY(((rt0.c1) BETWEEN (t0.c2) AND (rt0.c2)))) ISNULL));
SELECT DISTINCT * FROM t0, vt0, rt0;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c0, vt0.c1 FROM vt0 WHERE (((652997205) NOT BETWEEN (((vt0.c1)<(vt0.c0))) AND (vt0.c1))) GROUP BY vt0.c0, vt0.c1 UNION SELECT ALL vt0.c0, vt0.c1 FROM vt0 WHERE ((NOT (((652997205) NOT BETWEEN (((vt0.c1)<(vt0.c0))) AND (vt0.c1))))) GROUP BY vt0.c0, vt0.c1 UNION SELECT vt0.c0, vt0.c1 FROM vt0 WHERE (((((652997205) NOT BETWEEN (((vt0.c1)<(vt0.c0))) AND (vt0.c1))) ISNULL)) GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, t0.c0, rt0.c4, v0.c0, v0.c2, rt0.c1, t0.c2 FROM vt0, t0, rt0, v0 GROUP BY vt0.c0, t0.c0, rt0.c4, v0.c0, v0.c2, rt0.c1, t0.c2;
SELECT ALL vt0.c0, t0.c0, rt0.c4, v0.c0, v0.c2, rt0.c1, t0.c2 FROM vt0, t0, rt0, v0 GROUP BY vt0.c0, t0.c0, rt0.c4, v0.c0, v0.c2, rt0.c1, t0.c2 HAVING COUNT(*) UNION ALL SELECT vt0.c0, t0.c0, rt0.c4, v0.c0, v0.c2, rt0.c1, t0.c2 FROM vt0, t0, rt0, v0 GROUP BY vt0.c0, t0.c0, rt0.c4, v0.c0, v0.c2, rt0.c1, t0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt0.c0, t0.c0, rt0.c4, v0.c0, v0.c2, rt0.c1, t0.c2 FROM vt0, t0, rt0, v0 GROUP BY vt0.c0, t0.c0, rt0.c4, v0.c0, v0.c2, rt0.c1, t0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt0.c0, t0.c0, rt0.c4, v0.c0, v0.c2, rt0.c1, t0.c2 FROM vt0, t0, rt0, v0 GROUP BY vt0.c0, t0.c0, rt0.c4, v0.c0, v0.c2, rt0.c1, t0.c2;
SELECT ALL vt0.c0, t0.c0, rt0.c4, v0.c0, v0.c2, rt0.c1, t0.c2 FROM vt0, t0, rt0, v0 GROUP BY vt0.c0, t0.c0, rt0.c4, v0.c0, v0.c2, rt0.c1, t0.c2 HAVING COUNT(*) UNION ALL SELECT vt0.c0, t0.c0, rt0.c4, v0.c0, v0.c2, rt0.c1, t0.c2 FROM vt0, t0, rt0, v0 GROUP BY vt0.c0, t0.c0, rt0.c4, v0.c0, v0.c2, rt0.c1, t0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt0.c0, t0.c0, rt0.c4, v0.c0, v0.c2, rt0.c1, t0.c2 FROM vt0, t0, rt0, v0 GROUP BY vt0.c0, t0.c0, rt0.c4, v0.c0, v0.c2, rt0.c1, t0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt0.c0, t0.c0, rt0.c4, v0.c0, v0.c2, rt0.c1, t0.c2 FROM vt0, t0, rt0, v0 GROUP BY vt0.c0, t0.c0, rt0.c4, v0.c0, v0.c2, rt0.c1, t0.c2;
SELECT v0.c1 FROM t0, rt0, v0;
SELECT v0.c1 FROM t0, rt0, v0 WHERE (rt0.c4) UNION ALL SELECT v0.c1 FROM t0, rt0 NOT INDEXED, v0 WHERE ((NOT (rt0.c4))) UNION ALL SELECT ALL v0.c1 FROM t0, rt0, v0 WHERE (((rt0.c4) ISNULL));
SELECT v0.c1 FROM t0, rt0, v0;
SELECT DISTINCT rt0.c1, rt0.c4, rt0.c2, rt0.c0, rt0.c3 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c4, rt0.c2, rt0.c0, rt0.c3 FROM rt0 WHERE (NULL) UNION SELECT DISTINCT rt0.c1, rt0.c4, rt0.c2, rt0.c0, rt0.c3 FROM rt0 WHERE ((NOT (NULL))) UNION SELECT DISTINCT rt0.c1, rt0.c4, rt0.c2, rt0.c0, rt0.c3 FROM rt0 WHERE (((NULL) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c4, rt0.c2, rt0.c0, rt0.c3 FROM rt0;
SELECT ALL rt0.c1, t0.c0, rt0.c0, rt0.c3, rt0.c4, rt0.c2, vt0.c1, t0.c2, vt0.c0 FROM rt0, vt0 LEFT OUTER JOIN t0 ON (- (t0.c2)) COLLATE RTRIM GROUP BY rt0.c1, t0.c0, rt0.c0, rt0.c3, rt0.c4, rt0.c2, vt0.c1, t0.c2, vt0.c0;
SELECT ALL rt0.c1, t0.c0, rt0.c0, rt0.c3, rt0.c4, rt0.c2, vt0.c1, t0.c2, vt0.c0 FROM rt0, vt0 LEFT OUTER JOIN t0 ON (- (t0.c2)) COLLATE RTRIM WHERE ((((~ (rt0.c4)))!=(((((vt0.c0)OR(vt0.c1)))AND(rt0.c0))))) GROUP BY rt0.c1, t0.c0, rt0.c0, rt0.c3, rt0.c4, rt0.c2, vt0.c1, t0.c2, vt0.c0 UNION SELECT ALL rt0.c1, t0.c0, rt0.c0, rt0.c3, rt0.c4, rt0.c2, vt0.c1, t0.c2, vt0.c0 FROM rt0, vt0 LEFT OUTER JOIN t0 ON (- (t0.c2)) COLLATE RTRIM WHERE ((NOT ((((~ (rt0.c4)))<>(((((vt0.c0)OR(vt0.c1)))AND(rt0.c0))))))) GROUP BY rt0.c1, t0.c0, rt0.c0, rt0.c3, rt0.c4, rt0.c2, vt0.c1, t0.c2, vt0.c0 UNION SELECT rt0.c1, t0.c0, rt0.c0, rt0.c3, rt0.c4, rt0.c2, vt0.c1, t0.c2, vt0.c0 FROM rt0, vt0 LEFT OUTER JOIN t0 ON (- (t0.c2)) COLLATE RTRIM WHERE ((((((~ (rt0.c4)))<>(((((vt0.c0)OR(vt0.c1)))AND(rt0.c0))))) ISNULL)) GROUP BY rt0.c1, t0.c0, rt0.c0, rt0.c3, rt0.c4, rt0.c2, vt0.c1, t0.c2, vt0.c0;
SELECT ALL rt0.c1, t0.c0, rt0.c0, rt0.c3, rt0.c4, rt0.c2, vt0.c1, t0.c2, vt0.c0 FROM rt0, vt0 LEFT OUTER JOIN t0 ON (- (t0.c2)) COLLATE RTRIM GROUP BY rt0.c1, t0.c0, rt0.c0, rt0.c3, rt0.c4, rt0.c2, vt0.c1, t0.c2, vt0.c0;
SELECT rt0.c4 FROM t0, rt0, vt0 GROUP BY rt0.c4;
SELECT rt0.c4 FROM t0, rt0, vt0 GROUP BY rt0.c4 HAVING COUNT(GROUP_CONCAT(NULL)) UNION ALL SELECT rt0.c4 FROM t0, rt0, vt0 GROUP BY rt0.c4 HAVING (NOT (COUNT(GROUP_CONCAT(NULL)))) UNION ALL SELECT ALL rt0.c4 FROM t0, rt0 NOT INDEXED, vt0 GROUP BY rt0.c4 HAVING ((COUNT(GROUP_CONCAT(NULL))) ISNULL);
SELECT SUM(((((rt0.c2)!=(rt0.c2)))!=(NULL))) FROM vt0, v0, rt0;
SELECT * FROM v0 INNER JOIN rt0 ON (((rt0.c3))<=((((v0.c0) BETWEEN (vt0.c0) AND (rt0.c3))))) RIGHT OUTER JOIN vt0 ON ((vt0.c1) NOTNULL);
SELECT DISTINCT * FROM t0 NATURAL JOIN vt0;
SELECT DISTINCT * FROM t0 NATURAL JOIN vt0 WHERE (((((t0.c2) NOTNULL)) NOT BETWEEN ((- (NULL))) AND (((t0.c2) NOTNULL)))) UNION SELECT DISTINCT * FROM t0 NATURAL JOIN vt0 WHERE ((NOT (((((t0.c2) NOTNULL)) NOT BETWEEN ((- (NULL))) AND (((t0.c2) NOTNULL)))))) UNION SELECT DISTINCT * FROM t0 NATURAL JOIN vt0 WHERE (((((((t0.c2) NOTNULL)) NOT BETWEEN ((- (NULL))) AND (((t0.c2) NOTNULL)))) ISNULL));
SELECT DISTINCT * FROM t0 NATURAL JOIN vt0;
SELECT v0.c1, vt0.c1, t0.c0, v0.c2 FROM t0, v0, vt0 GROUP BY v0.c1, vt0.c1, t0.c0, v0.c2;
SELECT ALL v0.c1, vt0.c1, t0.c0, v0.c2 FROM t0, v0, vt0 WHERE ((((CASE WHEN v0.c1 THEN vt0.c1 END))<=((((t0.c0)|(v0.c2)))))) GROUP BY v0.c1, vt0.c1, t0.c0, v0.c2 UNION SELECT v0.c1, vt0.c1, t0.c0, v0.c2 FROM t0 NOT INDEXED, v0, vt0 WHERE ((NOT ((((CASE WHEN v0.c1 THEN vt0.c1 END))<=((((t0.c0)|(v0.c2)))))))) GROUP BY v0.c1, vt0.c1, t0.c0, v0.c2 UNION SELECT v0.c1, vt0.c1, t0.c0, v0.c2 FROM t0, v0, vt0 WHERE ((((((CASE WHEN v0.c1 THEN vt0.c1 END))<=((((t0.c0)|(v0.c2)))))) ISNULL)) GROUP BY v0.c1, vt0.c1, t0.c0, v0.c2;
SELECT v0.c1, vt0.c1, t0.c0, v0.c2 FROM t0, v0, vt0 GROUP BY v0.c1, vt0.c1, t0.c0, v0.c2;
SELECT ALL t0.c2, v0.c0, rt0.c2, rt0.c0, t0.c0, rt0.c3 FROM v0, rt0, t0 GROUP BY t0.c2, v0.c0, rt0.c2, rt0.c0, t0.c0, rt0.c3;
SELECT t0.c2, v0.c0, rt0.c2, rt0.c0, t0.c0, rt0.c3 FROM v0, rt0, t0 GROUP BY t0.c2, v0.c0, rt0.c2, rt0.c0, t0.c0, rt0.c3 HAVING COUNT(*) UNION ALL SELECT ALL t0.c2, v0.c0, rt0.c2, rt0.c0, t0.c0, rt0.c3 FROM v0, rt0, t0 GROUP BY t0.c2, v0.c0, rt0.c2, rt0.c0, t0.c0, rt0.c3 HAVING (NOT (COUNT(*))) UNION ALL SELECT t0.c2, v0.c0, rt0.c2, rt0.c0, t0.c0, rt0.c3 FROM v0, rt0, t0 GROUP BY t0.c2, v0.c0, rt0.c2, rt0.c0, t0.c0, rt0.c3 HAVING ((COUNT(*)) ISNULL);
SELECT ALL t0.c2, v0.c0, rt0.c2, rt0.c0, t0.c0, rt0.c3 FROM v0, rt0, t0 GROUP BY t0.c2, v0.c0, rt0.c2, rt0.c0, t0.c0, rt0.c3;
SELECT t0.c2, v0.c0, rt0.c2, rt0.c0, t0.c0, rt0.c3 FROM v0, rt0, t0 GROUP BY t0.c2, v0.c0, rt0.c2, rt0.c0, t0.c0, rt0.c3 HAVING COUNT(*) UNION ALL SELECT ALL t0.c2, v0.c0, rt0.c2, rt0.c0, t0.c0, rt0.c3 FROM v0, rt0, t0 GROUP BY t0.c2, v0.c0, rt0.c2, rt0.c0, t0.c0, rt0.c3 HAVING (NOT (COUNT(*))) UNION ALL SELECT t0.c2, v0.c0, rt0.c2, rt0.c0, t0.c0, rt0.c3 FROM v0, rt0, t0 GROUP BY t0.c2, v0.c0, rt0.c2, rt0.c0, t0.c0, rt0.c3 HAVING ((COUNT(*)) ISNULL);
SELECT ALL t0.c2, v0.c0, rt0.c2, rt0.c0, t0.c0, rt0.c3 FROM v0, rt0, t0 GROUP BY t0.c2, v0.c0, rt0.c2, rt0.c0, t0.c0, rt0.c3;
SELECT * FROM v0;
SELECT ALL * FROM v0 WHERE (TRIM(DISTINCT ((v0.c2)>(v0.c0)))) UNION ALL SELECT ALL * FROM v0 WHERE ((NOT (TRIM(DISTINCT ((v0.c2)>(v0.c0)))))) UNION ALL SELECT * FROM v0 WHERE (((TRIM(DISTINCT ((v0.c2)>(v0.c0)))) ISNULL));
SELECT * FROM v0;
SELECT DISTINCT rt0.c3, v0.c0, rt0.c4, rt0.c0, vt0.c0, rt0.c1, v0.c1, rt0.c2, t0.c0, v0.c2, t0.c2 FROM v0, t0, rt0, vt0;
SELECT DISTINCT rt0.c3, v0.c0, rt0.c4, rt0.c0, vt0.c0, rt0.c1, v0.c1, rt0.c2, t0.c0, v0.c2, t0.c2 FROM v0, t0, rt0, vt0 WHERE ((((rt0.c1 IN (vt0.c1)))AND((- (0x42aadfdf))))) UNION SELECT DISTINCT rt0.c3, v0.c0, rt0.c4, rt0.c0, vt0.c0, rt0.c1, v0.c1, rt0.c2, t0.c0, v0.c2, t0.c2 FROM v0, t0, rt0, vt0 WHERE ((NOT ((((rt0.c1 IN (vt0.c1)))AND((- (0x42aadfdf))))))) UNION SELECT DISTINCT rt0.c3, v0.c0, rt0.c4, rt0.c0, vt0.c0, rt0.c1, v0.c1, rt0.c2, t0.c0, v0.c2, t0.c2 FROM v0, t0, rt0, vt0 WHERE ((((((rt0.c1 IN (vt0.c1)))AND((- (0x42aadfdf))))) ISNULL));
SELECT DISTINCT rt0.c3, v0.c0, rt0.c4, rt0.c0, vt0.c0, rt0.c1, v0.c1, rt0.c2, t0.c0, v0.c2, t0.c2 FROM v0, t0, rt0, vt0;
SELECT vt0.c0, rt0.c1, v0.c2, t0.c0, v0.c1, rt0.c2, rt0.c3, vt0.c1, t0.c2, rt0.c0, rt0.c4 FROM vt0, t0, v0, rt0 GROUP BY vt0.c0, rt0.c1, v0.c2, t0.c0, v0.c1, rt0.c2, rt0.c3, vt0.c1, t0.c2, rt0.c0, rt0.c4;
SELECT vt0.c0, rt0.c1, v0.c2, t0.c0, v0.c1, rt0.c2, rt0.c3, vt0.c1, t0.c2, rt0.c0, rt0.c4 FROM vt0, t0, v0, rt0 WHERE (((((v0.c0) BETWEEN (rt0.c0) AND (rt0.c1))) NOTNULL)) GROUP BY vt0.c0, rt0.c1, v0.c2, t0.c0, v0.c1, rt0.c2, rt0.c3, vt0.c1, t0.c2, rt0.c0, rt0.c4 UNION SELECT ALL vt0.c0, rt0.c1, v0.c2, t0.c0, v0.c1, rt0.c2, rt0.c3, vt0.c1, t0.c2, rt0.c0, rt0.c4 FROM vt0, t0, v0, rt0 WHERE ((NOT (((((v0.c0) BETWEEN (rt0.c0) AND (rt0.c1))) NOTNULL)))) GROUP BY vt0.c0, rt0.c1, v0.c2, t0.c0, v0.c1, rt0.c2, rt0.c3, vt0.c1, t0.c2, rt0.c0, rt0.c4 UNION SELECT vt0.c0, rt0.c1, v0.c2, t0.c0, v0.c1, rt0.c2, rt0.c3, vt0.c1, t0.c2, rt0.c0, rt0.c4 FROM vt0, t0, v0, rt0 WHERE (((((((v0.c0) BETWEEN (rt0.c0) AND (rt0.c1))) NOTNULL)) ISNULL)) GROUP BY vt0.c0, rt0.c1, v0.c2, t0.c0, v0.c1, rt0.c2, rt0.c3, vt0.c1, t0.c2, rt0.c0, rt0.c4;
SELECT vt0.c0, rt0.c1, v0.c2, t0.c0, v0.c1, rt0.c2, rt0.c3, vt0.c1, t0.c2, rt0.c0, rt0.c4 FROM vt0, t0, v0, rt0 GROUP BY vt0.c0, rt0.c1, v0.c2, t0.c0, v0.c1, rt0.c2, rt0.c3, vt0.c1, t0.c2, rt0.c0, rt0.c4;
SELECT ALL rt0.c3, rt0.c1, vt0.c1, v0.c1 FROM t0, vt0 LEFT OUTER JOIN v0 ON ((((t0.c2, vt0.c0, t0.c2))=((rt0.c2, '-481568025', rt0.c0))) IN ()) LEFT OUTER JOIN rt0 ON (+ ((((NULL))<((x'a642'))))) GROUP BY rt0.c3, rt0.c1, vt0.c1, v0.c1;
SELECT ALL rt0.c3, rt0.c1, vt0.c1, v0.c1 FROM t0, vt0 LEFT OUTER JOIN v0 ON ((((t0.c2, vt0.c0, t0.c2))=((rt0.c2, '-481568025', rt0.c0))) IN ()) LEFT OUTER JOIN rt0 ON (+ ((((NULL))<((x'a642'))))) GROUP BY rt0.c3, rt0.c1, vt0.c1, v0.c1 HAVING TOTAL(SUM(rt0.c4)) UNION ALL SELECT ALL rt0.c3, rt0.c1, vt0.c1, v0.c1 FROM t0, vt0 LEFT OUTER JOIN v0 ON ((((t0.c2, vt0.c0, t0.c2))=((rt0.c2, '-481568025', rt0.c0))) IN ()) LEFT OUTER JOIN rt0 ON (+ ((((NULL))<((x'a642'))))) GROUP BY rt0.c3, rt0.c1, vt0.c1, v0.c1 HAVING (NOT (TOTAL(SUM(rt0.c4)))) UNION ALL SELECT ALL rt0.c3, rt0.c1, vt0.c1, v0.c1 FROM t0, vt0 LEFT OUTER JOIN v0 ON ((((t0.c2, vt0.c0, t0.c2))==((rt0.c2, '-481568025', rt0.c0))) IN ()) LEFT OUTER JOIN rt0 ON (+ ((((NULL))<((x'a642'))))) GROUP BY rt0.c3, rt0.c1, vt0.c1, v0.c1 HAVING ((TOTAL(SUM(rt0.c4))) ISNULL);
SELECT * FROM v0;
SELECT * FROM v0 WHERE (v0.c1 COLLATE BINARY) UNION ALL SELECT ALL * FROM v0 WHERE ((NOT (v0.c1 COLLATE BINARY))) UNION ALL SELECT ALL * FROM v0 WHERE (((v0.c1 COLLATE BINARY) ISNULL));
SELECT * FROM v0;
SELECT DISTINCT * FROM v0, rt0;
SELECT DISTINCT * FROM v0, rt0 WHERE (CASE ((0xffffffff935464f3)*(v0.c2))  WHEN ((rt0.c0)-(rt0.c4)) THEN ((rt0.c4) NOTNULL) END) UNION SELECT DISTINCT * FROM v0, rt0 WHERE ((NOT (CASE ((0Xffffffff935464f3)*(v0.c2))  WHEN ((rt0.c0)-(rt0.c4)) THEN ((rt0.c4) NOTNULL) END))) UNION SELECT DISTINCT * FROM v0, rt0 WHERE (((CASE ((0xffffffff935464f3)*(v0.c2))  WHEN ((rt0.c0)-(rt0.c4)) THEN ((rt0.c4) NOTNULL) END) ISNULL));
SELECT DISTINCT * FROM v0, rt0;
SELECT t0.c0, t0.c2, vt0.c0 FROM t0 NATURAL JOIN vt0 GROUP BY t0.c0, t0.c2, vt0.c0;
SELECT ALL t0.c0, t0.c2, vt0.c0 FROM t0 NATURAL JOIN vt0 WHERE (t0.c2) GROUP BY t0.c0, t0.c2, vt0.c0 UNION SELECT t0.c0, t0.c2, vt0.c0 FROM t0 NATURAL JOIN vt0 WHERE ((NOT (t0.c2))) GROUP BY t0.c0, t0.c2, vt0.c0 UNION SELECT ALL t0.c0, t0.c2, vt0.c0 FROM t0 NATURAL JOIN vt0 WHERE (((t0.c2) ISNULL)) GROUP BY t0.c0, t0.c2, vt0.c0;
SELECT t0.c0, t0.c2, vt0.c0 FROM t0 NATURAL JOIN vt0 GROUP BY t0.c0, t0.c2, vt0.c0;
SELECT rt0.c0, v0.c0, rt0.c1, rt0.c3, rt0.c4, vt0.c1 FROM rt0 INNER JOIN vt0 ON LOWER(((NULL)>(v0.c1))) RIGHT OUTER JOIN v0 ON ((((((((NULL)OR(((rt0.c0)OR('g')))))AND(vt0.c0 COLLATE BINARY)))AND(((rt0.c1)/(rt0.c4)))))AND(LIKELY(v0.c1))) GROUP BY rt0.c0, v0.c0, rt0.c1, rt0.c3, rt0.c4, vt0.c1;
SELECT t0.c0, t0.c2 FROM t0;
SELECT t0.c0, t0.c2 FROM t0 WHERE (NULLIF(DISTINCT ((t0.c0)<(t0.c2)), ((t0.c2)<>(NULL)))) UNION ALL SELECT t0.c0, t0.c2 FROM t0 WHERE ((NOT (NULLIF(DISTINCT ((t0.c0)<(t0.c2)), ((t0.c2)<>(NULL)))))) UNION ALL SELECT t0.c0, t0.c2 FROM t0 WHERE (((NULLIF(DISTINCT ((t0.c0)<(t0.c2)), ((t0.c2)!=(NULL)))) ISNULL));
SELECT t0.c0, t0.c2 FROM t0;
SELECT DISTINCT * FROM t0, rt0;
SELECT DISTINCT * FROM t0, rt0 WHERE ('ky	ye(' COLLATE BINARY) UNION SELECT DISTINCT * FROM t0, rt0 WHERE ((NOT ('ky	ye(' COLLATE BINARY))) UNION SELECT DISTINCT * FROM t0, rt0 WHERE ((('ky	ye(' COLLATE BINARY) ISNULL));
SELECT DISTINCT * FROM t0, rt0;
SELECT vt0.c1, v0.c1 FROM vt0 NATURAL JOIN v0 GROUP BY vt0.c1, v0.c1;
SELECT ALL vt0.c1, v0.c1 FROM vt0 NATURAL JOIN v0 WHERE ((~ (((v0.c2) IS FALSE)))) GROUP BY vt0.c1, v0.c1 UNION SELECT vt0.c1, v0.c1 FROM vt0 NATURAL JOIN v0 WHERE ((NOT ((~ (((v0.c2) IS FALSE)))))) GROUP BY vt0.c1, v0.c1 UNION SELECT ALL vt0.c1, v0.c1 FROM vt0 NATURAL JOIN v0 WHERE ((((~ (((v0.c2) IS FALSE)))) ISNULL)) GROUP BY vt0.c1, v0.c1;
SELECT vt0.c1, v0.c1 FROM vt0 NATURAL JOIN v0 GROUP BY vt0.c1, v0.c1;
SELECT ALL v0.c2, t0.c0 FROM rt0, t0, v0 GROUP BY v0.c2, t0.c0;
SELECT v0.c2, t0.c0 FROM rt0, t0, v0 GROUP BY v0.c2, t0.c0 HAVING ((MIN(rt0.c3)) BETWEEN (MIN(rt0.c0)) AND (((COUNT(rt0.c1))<=(SUM(COUNT(MIN(v0.c1))))))) UNION ALL SELECT ALL v0.c2, t0.c0 FROM rt0, t0, v0 GROUP BY v0.c2, t0.c0 HAVING (NOT (((MIN(rt0.c3)) BETWEEN (MIN(rt0.c0)) AND (((COUNT(rt0.c1))<=(SUM(COUNT(MIN(v0.c1))))))))) UNION ALL SELECT v0.c2, t0.c0 FROM rt0, t0, v0 GROUP BY v0.c2, t0.c0 HAVING ((((MIN(rt0.c3)) BETWEEN (MIN(rt0.c0)) AND (((COUNT(rt0.c1))<=(SUM(COUNT(MIN(v0.c1)))))))) ISNULL);
SELECT v0.c2, vt0.c0 FROM vt0, v0;
SELECT ALL v0.c2, vt0.c0 FROM vt0, v0 WHERE (((((((((((v0.c0) ISNULL))AND(((((((((v0.c0)AND(vt0.c0)))AND(0.5492147122839545)))AND(v0.c0)))OR(v0.c2)))))OR(((vt0.c1) IS TRUE))))OR((((('1701655265')OR(v0.c2)))AND(v0.c1)))))OR(((v0.c1)<(vt0.c0))))) UNION ALL SELECT v0.c2, vt0.c0 FROM vt0, v0 WHERE ((NOT (((((((((((v0.c0) ISNULL))AND(((((((((v0.c0)AND(vt0.c0)))AND(0.5492147122839545)))AND(v0.c0)))OR(v0.c2)))))OR(((vt0.c1) IS TRUE))))OR((((('1701655265')OR(v0.c2)))AND(v0.c1)))))OR(((v0.c1)<(vt0.c0))))))) UNION ALL SELECT ALL v0.c2, vt0.c0 FROM vt0, v0 WHERE (((((((((((((v0.c0) ISNULL))AND(((((((((v0.c0)AND(vt0.c0)))AND(0.5492147122839545)))AND(v0.c0)))OR(v0.c2)))))OR(((vt0.c1) IS TRUE))))OR((((('1701655265')OR(v0.c2)))AND(v0.c1)))))OR(((v0.c1)<(vt0.c0))))) ISNULL));
SELECT v0.c2, vt0.c0 FROM vt0, v0;
SELECT DISTINCT * FROM rt0, t0, vt0;
SELECT DISTINCT * FROM rt0, t0, vt0 WHERE (CAST((~ (rt0.c1)) AS TEXT)) UNION SELECT DISTINCT * FROM rt0, t0, vt0 WHERE ((NOT (CAST((~ (rt0.c1)) AS TEXT)))) UNION SELECT DISTINCT * FROM rt0, t0, vt0 WHERE (((CAST((~ (rt0.c1)) AS TEXT)) ISNULL));
SELECT DISTINCT * FROM rt0, t0, vt0;
SELECT v0.c0, v0.c1, v0.c2 FROM v0 GROUP BY v0.c0, v0.c1, v0.c2;
SELECT v0.c0, v0.c1, v0.c2 FROM v0 WHERE (CASE WHEN NULLIF(DISTINCT '1525283994', v0.c1) THEN ((v0.c0) IS FALSE) ELSE ((((((((v0.c0)OR(v0.c2)))OR(v0.c2)))AND(v0.c1)))OR(v0.c2)) END) GROUP BY v0.c0, v0.c1, v0.c2 UNION SELECT v0.c0, v0.c1, v0.c2 FROM v0 WHERE ((NOT (CASE WHEN NULLIF(DISTINCT '1525283994', v0.c1) THEN ((v0.c0) IS FALSE) ELSE ((((((((v0.c0)OR(v0.c2)))OR(v0.c2)))AND(v0.c1)))OR(v0.c2)) END))) GROUP BY v0.c0, v0.c1, v0.c2 UNION SELECT v0.c0, v0.c1, v0.c2 FROM v0 WHERE (((CASE WHEN NULLIF(DISTINCT '1525283994', v0.c1) THEN ((v0.c0) IS FALSE) ELSE ((((((((v0.c0)OR(v0.c2)))OR(v0.c2)))AND(v0.c1)))OR(v0.c2)) END) ISNULL)) GROUP BY v0.c0, v0.c1, v0.c2;
SELECT v0.c0, v0.c1, v0.c2 FROM v0 GROUP BY v0.c0, v0.c1, v0.c2;
SELECT ALL rt0.c0 FROM vt0, rt0, v0, t0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM vt0, rt0, v0, t0 GROUP BY rt0.c0 HAVING (((AVG(t0.c0) IN (rt0.c0, MIN(SUM(MIN(TOTAL(v0.c2)))))))<=(GROUP_CONCAT(rt0.c0))) UNION ALL SELECT ALL rt0.c0 FROM vt0, rt0, v0, t0 GROUP BY rt0.c0 HAVING (NOT ((((AVG(t0.c0) IN (rt0.c0, MIN(SUM(MIN(TOTAL(v0.c2)))))))<=(GROUP_CONCAT(rt0.c0))))) UNION ALL SELECT rt0.c0 FROM vt0, rt0, v0, t0 GROUP BY rt0.c0 HAVING (((((AVG(t0.c0) IN (rt0.c0, MIN(SUM(MIN(TOTAL(v0.c2)))))))<=(GROUP_CONCAT(rt0.c0)))) ISNULL);
SELECT * FROM vt0 INNER JOIN v0 ON (((((v0.c1)) NOT BETWEEN ((v0.c1)) AND ((v0.c1))))|((v0.c1 IN ())));
SELECT ALL * FROM vt0 INNER JOIN v0 ON (((((v0.c1)) NOT BETWEEN ((v0.c1)) AND ((v0.c1))))|((v0.c1 IN ()))) WHERE (ABS(CAST(v0.c1 AS REAL))) UNION ALL SELECT ALL * FROM vt0 INNER JOIN v0 ON (((((v0.c1)) NOT BETWEEN ((v0.c1)) AND ((v0.c1))))|((v0.c1 IN ()))) WHERE ((NOT (ABS(CAST(v0.c1 AS REAL))))) UNION ALL SELECT * FROM vt0 INNER JOIN v0 ON (((((v0.c1)) NOT BETWEEN ((v0.c1)) AND ((v0.c1))))|((v0.c1 IN ()))) WHERE (((ABS(CAST(v0.c1 AS REAL))) ISNULL));
SELECT * FROM vt0 INNER JOIN v0 ON (((((v0.c1)) NOT BETWEEN ((v0.c1)) AND ((v0.c1))))|((v0.c1 IN ())));
SELECT DISTINCT * FROM rt0, vt0, v0, t0;
SELECT DISTINCT * FROM rt0, vt0, v0, t0 WHERE ((v0.c1 IN ()) COLLATE RTRIM) UNION SELECT DISTINCT * FROM rt0, vt0, v0, t0 WHERE ((NOT ((v0.c1 IN ()) COLLATE RTRIM))) UNION SELECT DISTINCT * FROM rt0, vt0, v0, t0 WHERE ((((v0.c1 IN ()) COLLATE RTRIM) ISNULL));
SELECT DISTINCT * FROM rt0, vt0, v0, t0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 WHERE ((NOT (t0.c0 COLLATE RTRIM))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT ((NOT (t0.c0 COLLATE RTRIM))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((((NOT (t0.c0 COLLATE RTRIM))) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0 HAVING (((((COUNT(t0.c0) IN (TOTAL(MAX(COUNT(t0.c0))))))AND((- (GROUP_CONCAT(t0.c2))))))AND(MIN(t0.c0))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (NOT ((((((COUNT(t0.c0) IN (TOTAL(MAX(COUNT(t0.c0))))))AND((- (GROUP_CONCAT(t0.c2))))))AND(MIN(t0.c0))))) UNION ALL SELECT t0.c0 FROM t0 GROUP BY t0.c0 HAVING (((((((COUNT(t0.c0) IN (TOTAL(MAX(COUNT(t0.c0))))))AND((- (GROUP_CONCAT(t0.c2))))))AND(MIN(t0.c0)))) ISNULL);
SELECT vt0.c0, t0.c2, vt0.c1, rt0.c0, rt0.c1, t0.c0, rt0.c2, rt0.c4, rt0.c3 FROM t0, rt0, vt0;
SELECT ALL vt0.c0, t0.c2, vt0.c1, rt0.c0, rt0.c1, t0.c0, rt0.c2, rt0.c4, rt0.c3 FROM t0, rt0, vt0 WHERE (((((CAST(t0.c2 AS REAL))AND(CAST(rt0.c0 AS NUMERIC))))AND((NOT (rt0.c4))))) UNION ALL SELECT vt0.c0, t0.c2, vt0.c1, rt0.c0, rt0.c1, t0.c0, rt0.c2, rt0.c4, rt0.c3 FROM t0, rt0, vt0 WHERE ((NOT (((((CAST(t0.c2 AS REAL))AND(CAST(rt0.c0 AS NUMERIC))))AND((NOT (rt0.c4))))))) UNION ALL SELECT ALL vt0.c0, t0.c2, vt0.c1, rt0.c0, rt0.c1, t0.c0, rt0.c2, rt0.c4, rt0.c3 FROM t0, rt0, vt0 WHERE (((((((CAST(t0.c2 AS REAL))AND(CAST(rt0.c0 AS NUMERIC))))AND((NOT (rt0.c4))))) ISNULL));
SELECT vt0.c0, t0.c2, vt0.c1, rt0.c0, rt0.c1, t0.c0, rt0.c2, rt0.c4, rt0.c3 FROM t0, rt0, vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((((vt0.c1) ISNULL)) NOT BETWEEN (((((vt0.c0)OR(vt0.c1)))AND(vt0.c1))) AND (vt0.c0 COLLATE BINARY))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((((vt0.c1) ISNULL)) NOT BETWEEN (((((vt0.c0)OR(vt0.c1)))AND(vt0.c1))) AND (vt0.c0 COLLATE BINARY))))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((((vt0.c1) ISNULL)) NOT BETWEEN (((((vt0.c0)OR(vt0.c1)))AND(vt0.c1))) AND (vt0.c0 COLLATE BINARY))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0 WHERE (((((vt0.c0)%(vt0.c0))) BETWEEN (UNLIKELY(DISTINCT vt0.c1)) AND (CAST(vt0.c1 AS INTEGER)))) GROUP BY vt0.c1 UNION SELECT ALL vt0.c1 FROM vt0 WHERE ((NOT (((((vt0.c0)%(vt0.c0))) BETWEEN (UNLIKELY(DISTINCT vt0.c1)) AND (CAST(vt0.c1 AS INTEGER)))))) GROUP BY vt0.c1 UNION SELECT vt0.c1 FROM vt0 WHERE (((((((vt0.c0)%(vt0.c0))) BETWEEN (UNLIKELY(DISTINCT vt0.c1)) AND (CAST(vt0.c1 AS INTEGER)))) ISNULL)) GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT vt0.c1, v0.c1, t0.c0, v0.c2, vt0.c0 FROM vt0, v0 INNER JOIN t0 ON ((LIKE(vt0.c1, vt0.c1, '0')) NOT BETWEEN ((vt0.c1 IN (v0.c1))) AND (CASE vt0.c0  WHEN v0.c1 THEN vt0.c0 ELSE t0.c2 END)) GROUP BY vt0.c1, v0.c1, t0.c0, v0.c2, vt0.c0;
SELECT ALL vt0.c1, v0.c1, t0.c0, v0.c2, vt0.c0 FROM vt0, v0 INNER JOIN t0 ON ((LIKE(vt0.c1, vt0.c1, '0')) NOT BETWEEN ((vt0.c1 IN (v0.c1))) AND (CASE vt0.c0  WHEN v0.c1 THEN vt0.c0 ELSE t0.c2 END)) GROUP BY vt0.c1, v0.c1, t0.c0, v0.c2, vt0.c0 HAVING GROUP_CONCAT(((SUM(SUM(vt0.c0)))%(t0.c0))) UNION ALL SELECT vt0.c1, v0.c1, t0.c0, v0.c2, vt0.c0 FROM vt0, v0 INNER JOIN t0 ON ((LIKE(vt0.c1, vt0.c1, '0')) NOT BETWEEN ((vt0.c1 IN (v0.c1))) AND (CASE vt0.c0  WHEN v0.c1 THEN vt0.c0 ELSE t0.c2 END)) GROUP BY vt0.c1, v0.c1, t0.c0, v0.c2, vt0.c0 HAVING (NOT (GROUP_CONCAT(((SUM(SUM(vt0.c0)))%(t0.c0))))) UNION ALL SELECT vt0.c1, v0.c1, t0.c0, v0.c2, vt0.c0 FROM vt0, v0 INNER JOIN t0 ON ((LIKE(vt0.c1, vt0.c1, '0')) NOT BETWEEN ((vt0.c1 IN (v0.c1))) AND (CASE vt0.c0  WHEN v0.c1 THEN vt0.c0 ELSE t0.c2 END)) GROUP BY vt0.c1, v0.c1, t0.c0, v0.c2, vt0.c0 HAVING ((GROUP_CONCAT(((SUM(SUM(vt0.c0)))%(t0.c0)))) ISNULL);
SELECT ALL * FROM vt0, rt0;
SELECT * FROM vt0, rt0 WHERE ((((rt0.c0)+(NULL)) IN ())) UNION ALL SELECT ALL * FROM vt0, rt0 WHERE ((NOT ((((rt0.c0)+(NULL)) IN ())))) UNION ALL SELECT ALL * FROM vt0, rt0 WHERE ((((((rt0.c0)+(NULL)) IN ())) ISNULL));
SELECT ALL * FROM vt0, rt0;
SELECT DISTINCT vt0.c0, t0.c0, v0.c0, vt0.c1 FROM v0, vt0, t0;
SELECT DISTINCT vt0.c0, t0.c0, v0.c0, vt0.c1 FROM v0, vt0, t0 WHERE (((((((vt0.c0)OR(v0.c1)))AND(t0.c0))) NOT NULL)) UNION SELECT DISTINCT vt0.c0, t0.c0, v0.c0, vt0.c1 FROM v0, vt0, t0 WHERE ((NOT (((((((vt0.c0)OR(v0.c1)))AND(t0.c0))) NOT NULL)))) UNION SELECT DISTINCT vt0.c0, t0.c0, v0.c0, vt0.c1 FROM v0, vt0, t0 WHERE (((((((((vt0.c0)OR(v0.c1)))AND(t0.c0))) NOT NULL)) ISNULL));
SELECT DISTINCT vt0.c0, t0.c0, v0.c0, vt0.c1 FROM v0, vt0, t0;
SELECT ALL rt0.c0, v0.c2, rt0.c4, vt0.c1, rt0.c2, vt0.c0, t0.c2, v0.c1 FROM vt0, v0, t0, rt0 GROUP BY rt0.c0, v0.c2, rt0.c4, vt0.c1, rt0.c2, vt0.c0, t0.c2, v0.c1;
SELECT ALL rt0.c0, v0.c2, rt0.c4, vt0.c1, rt0.c2, vt0.c0, t0.c2, v0.c1 FROM vt0, v0, t0, rt0 WHERE (NULL) GROUP BY rt0.c0, v0.c2, rt0.c4, vt0.c1, rt0.c2, vt0.c0, t0.c2, v0.c1 UNION SELECT ALL rt0.c0, v0.c2, rt0.c4, vt0.c1, rt0.c2, vt0.c0, t0.c2, v0.c1 FROM vt0, v0, t0, rt0 WHERE ((NOT (NULL))) GROUP BY rt0.c0, v0.c2, rt0.c4, vt0.c1, rt0.c2, vt0.c0, t0.c2, v0.c1 UNION SELECT ALL rt0.c0, v0.c2, rt0.c4, vt0.c1, rt0.c2, vt0.c0, t0.c2, v0.c1 FROM vt0, v0, t0, rt0 WHERE (((NULL) ISNULL)) GROUP BY rt0.c0, v0.c2, rt0.c4, vt0.c1, rt0.c2, vt0.c0, t0.c2, v0.c1;
SELECT ALL rt0.c0, v0.c2, rt0.c4, vt0.c1, rt0.c2, vt0.c0, t0.c2, v0.c1 FROM vt0, v0, t0, rt0 GROUP BY rt0.c0, v0.c2, rt0.c4, vt0.c1, rt0.c2, vt0.c0, t0.c2, v0.c1;
SELECT rt0.c1, rt0.c0 FROM v0, vt0 LEFT OUTER JOIN t0 ON JULIANDAY(((vt0.c0) BETWEEN (rt0.c2) AND (v0.c1)), CAST(rt0.c2 AS REAL), '5\r<w', ((t0.c2) BETWEEN (rt0.c2) AND (v0.c1)), ((rt0.c2) NOT NULL)) RIGHT OUTER JOIN rt0 ON ((((v0.c1)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c2))) IN ()) GROUP BY rt0.c1, rt0.c0;
SELECT rt0.c2, rt0.c4, rt0.c0 FROM rt0 LEFT OUTER JOIN t0 ON CASE '-1769376074'  WHEN (~ (x'')) THEN LIKELIHOOD(rt0.c4, 0.7696543376213633) WHEN (t0.c2 IN ()) THEN CAST(rt0.c3 AS INTEGER) WHEN ((t0.c0)=(rt0.c1)) THEN ((t0.c0) IS FALSE) WHEN ((rt0.c2)IS(t0.c0)) THEN ((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c2)) WHEN RTRIM(NULL) THEN ((((((((rt0.c2)OR(rt0.c2)))OR(rt0.c0)))AND(x'')))AND(rt0.c0)) ELSE ((rt0.c0)<=(rt0.c0)) END;
SELECT ALL rt0.c2, rt0.c4, rt0.c0 FROM rt0 LEFT OUTER JOIN t0 ON CASE '-1769376074'  WHEN (~ (x'')) THEN LIKELIHOOD(rt0.c4, 0.7696543376213633) WHEN (t0.c2 IN ()) THEN CAST(rt0.c3 AS INTEGER) WHEN ((t0.c0)==(rt0.c1)) THEN ((t0.c0) IS FALSE) WHEN ((rt0.c2)IS(t0.c0)) THEN ((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c2)) WHEN RTRIM(NULL) THEN ((((((((rt0.c2)OR(rt0.c2)))OR(rt0.c0)))AND(x'')))AND(rt0.c0)) ELSE ((rt0.c0)<=(rt0.c0)) END WHERE (CAST(((rt0.c3)*(rt0.c4)) AS BLOB)) UNION ALL SELECT ALL rt0.c2, rt0.c4, rt0.c0 FROM rt0 LEFT OUTER JOIN t0 ON CASE '-1769376074'  WHEN (~ (x'')) THEN LIKELIHOOD(rt0.c4, 0.7696543376213633) WHEN (t0.c2 IN ()) THEN CAST(rt0.c3 AS INTEGER) WHEN ((t0.c0)==(rt0.c1)) THEN ((t0.c0) IS FALSE) WHEN ((rt0.c2)IS(t0.c0)) THEN ((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c2)) WHEN RTRIM(NULL) THEN ((((((((rt0.c2)OR(rt0.c2)))OR(rt0.c0)))AND(x'')))AND(rt0.c0)) ELSE ((rt0.c0)<=(rt0.c0)) END WHERE ((NOT (CAST(((rt0.c3)*(rt0.c4)) AS BLOB)))) UNION ALL SELECT rt0.c2, rt0.c4, rt0.c0 FROM rt0 LEFT OUTER JOIN t0 ON CASE '-1769376074'  WHEN (~ (x'')) THEN LIKELIHOOD(rt0.c4, 0.7696543376213633) WHEN (t0.c2 IN ()) THEN CAST(rt0.c3 AS INTEGER) WHEN ((t0.c0)=(rt0.c1)) THEN ((t0.c0) IS FALSE) WHEN ((rt0.c2)IS(t0.c0)) THEN ((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c2)) WHEN RTRIM(NULL) THEN ((((((((rt0.c2)OR(rt0.c2)))OR(rt0.c0)))AND(x'')))AND(rt0.c0)) ELSE ((rt0.c0)<=(rt0.c0)) END WHERE (((CAST(((rt0.c3)*(rt0.c4)) AS BLOB)) ISNULL));
SELECT rt0.c2, rt0.c4, rt0.c0 FROM rt0 LEFT OUTER JOIN t0 ON CASE '-1769376074'  WHEN (~ (x'')) THEN LIKELIHOOD(rt0.c4, 0.7696543376213633) WHEN (t0.c2 IN ()) THEN CAST(rt0.c3 AS INTEGER) WHEN ((t0.c0)=(rt0.c1)) THEN ((t0.c0) IS FALSE) WHEN ((rt0.c2)IS(t0.c0)) THEN ((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c2)) WHEN RTRIM(NULL) THEN ((((((((rt0.c2)OR(rt0.c2)))OR(rt0.c0)))AND(x'')))AND(rt0.c0)) ELSE ((rt0.c0)<=(rt0.c0)) END;
SELECT DISTINCT vt0.c1, rt0.c0 FROM v0, rt0, vt0;
SELECT DISTINCT vt0.c1, rt0.c0 FROM v0, rt0, vt0 WHERE (((vt0.c0 COLLATE NOCASE)||(((rt0.c4) NOTNULL)))) UNION SELECT DISTINCT vt0.c1, rt0.c0 FROM v0, rt0, vt0 WHERE ((NOT (((vt0.c0 COLLATE NOCASE)||(((rt0.c4) NOTNULL)))))) UNION SELECT DISTINCT vt0.c1, rt0.c0 FROM v0, rt0, vt0 WHERE (((((vt0.c0 COLLATE NOCASE)||(((rt0.c4) NOTNULL)))) ISNULL));
SELECT DISTINCT vt0.c1, rt0.c0 FROM v0, rt0, vt0;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt0 WHERE (vt0.c1) GROUP BY vt0.c1 UNION SELECT vt0.c1 FROM vt0 WHERE ((NOT (vt0.c1))) GROUP BY vt0.c1 UNION SELECT vt0.c1 FROM vt0 WHERE (((vt0.c1) ISNULL)) GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING ((((((((((COUNT(vt0.c1)) IS FALSE))AND(vt0.c1 COLLATE NOCASE)))AND(SUM(COUNT(*)))))OR(COUNT(*))))AND((- ('17532642')))) UNION ALL SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING (NOT (((((((((((COUNT(vt0.c1)) IS FALSE))AND(vt0.c1 COLLATE NOCASE)))AND(SUM(COUNT(*)))))OR(COUNT(*))))AND((- ('17532642')))))) UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING ((((((((((((COUNT(vt0.c1)) IS FALSE))AND(vt0.c1 COLLATE NOCASE)))AND(SUM(COUNT(*)))))OR(COUNT(*))))AND((- ('17532642'))))) ISNULL);
SELECT ALL * FROM vt0, t0;
SELECT ALL * FROM vt0, t0 WHERE (CASE WHEN IFNULL(t0.c0, t0.c0) THEN x'b5f1' END) UNION ALL SELECT ALL * FROM vt0, t0 WHERE ((NOT (CASE WHEN IFNULL(t0.c0, t0.c0) THEN x'b5f1' END))) UNION ALL SELECT ALL * FROM vt0, t0 WHERE (((CASE WHEN IFNULL(t0.c0, t0.c0) THEN x'b5f1' END) ISNULL));
SELECT ALL * FROM vt0, t0;
SELECT DISTINCT vt0.c1, t0.c0 FROM t0, vt0;
SELECT DISTINCT vt0.c1, t0.c0 FROM t0, vt0 WHERE (CAST(CAST(t0.c0 AS NUMERIC) AS REAL)) UNION SELECT DISTINCT vt0.c1, t0.c0 FROM t0, vt0 WHERE ((NOT (CAST(CAST(t0.c0 AS NUMERIC) AS REAL)))) UNION SELECT DISTINCT vt0.c1, t0.c0 FROM t0, vt0 WHERE (((CAST(CAST(t0.c0 AS NUMERIC) AS REAL)) ISNULL));
SELECT DISTINCT vt0.c1, t0.c0 FROM t0, vt0;
SELECT v0.c2, t0.c0, vt0.c1, v0.c1, vt0.c0, v0.c0 FROM vt0, v0 CROSS JOIN t0 ON v0.c2 GROUP BY v0.c2, t0.c0, vt0.c1, v0.c1, vt0.c0, v0.c0;
SELECT v0.c2, t0.c0, vt0.c1, v0.c1, vt0.c0, v0.c0 FROM vt0, v0 CROSS JOIN t0 ON v0.c2 WHERE ((NOT (CASE vt0.c0  WHEN v0.c1 THEN vt0.c0 END))) GROUP BY v0.c2, t0.c0, vt0.c1, v0.c1, vt0.c0, v0.c0 UNION SELECT ALL v0.c2, t0.c0, vt0.c1, v0.c1, vt0.c0, v0.c0 FROM vt0, v0 CROSS JOIN t0 ON v0.c2 WHERE ((NOT ((NOT (CASE vt0.c0  WHEN v0.c1 THEN vt0.c0 END))))) GROUP BY v0.c2, t0.c0, vt0.c1, v0.c1, vt0.c0, v0.c0 UNION SELECT v0.c2, t0.c0, vt0.c1, v0.c1, vt0.c0, v0.c0 FROM vt0, v0 CROSS JOIN t0 ON v0.c2 WHERE ((((NOT (CASE vt0.c0  WHEN v0.c1 THEN vt0.c0 END))) ISNULL)) GROUP BY v0.c2, t0.c0, vt0.c1, v0.c1, vt0.c0, v0.c0;
SELECT v0.c2, t0.c0, vt0.c1, v0.c1, vt0.c0, v0.c0 FROM vt0, v0 CROSS JOIN t0 ON v0.c2 GROUP BY v0.c2, t0.c0, vt0.c1, v0.c1, vt0.c0, v0.c0;
SELECT ALL v0.c0, rt0.c2, rt0.c4, v0.c2, v0.c1, rt0.c0, rt0.c3, vt0.c1, rt0.c1 FROM vt0, v0, rt0 GROUP BY v0.c0, rt0.c2, rt0.c4, v0.c2, v0.c1, rt0.c0, rt0.c3, vt0.c1, rt0.c1;
SELECT v0.c0, rt0.c2, rt0.c4, v0.c2, v0.c1, rt0.c0, rt0.c3, vt0.c1, rt0.c1 FROM vt0, v0, rt0 GROUP BY v0.c0, rt0.c2, rt0.c4, v0.c2, v0.c1, rt0.c0, rt0.c3, vt0.c1, rt0.c1 HAVING COUNT(*) UNION ALL SELECT ALL v0.c0, rt0.c2, rt0.c4, v0.c2, v0.c1, rt0.c0, rt0.c3, vt0.c1, rt0.c1 FROM vt0, v0, rt0 GROUP BY v0.c0, rt0.c2, rt0.c4, v0.c2, v0.c1, rt0.c0, rt0.c3, vt0.c1, rt0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT v0.c0, rt0.c2, rt0.c4, v0.c2, v0.c1, rt0.c0, rt0.c3, vt0.c1, rt0.c1 FROM vt0, v0, rt0 GROUP BY v0.c0, rt0.c2, rt0.c4, v0.c2, v0.c1, rt0.c0, rt0.c3, vt0.c1, rt0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT ALL v0.c0, rt0.c2, rt0.c4, v0.c2, v0.c1, rt0.c0, rt0.c3, vt0.c1, rt0.c1 FROM vt0, v0, rt0 GROUP BY v0.c0, rt0.c2, rt0.c4, v0.c2, v0.c1, rt0.c0, rt0.c3, vt0.c1, rt0.c1;
SELECT v0.c0, rt0.c2, rt0.c4, v0.c2, v0.c1, rt0.c0, rt0.c3, vt0.c1, rt0.c1 FROM vt0, v0, rt0 GROUP BY v0.c0, rt0.c2, rt0.c4, v0.c2, v0.c1, rt0.c0, rt0.c3, vt0.c1, rt0.c1 HAVING COUNT(*) UNION ALL SELECT ALL v0.c0, rt0.c2, rt0.c4, v0.c2, v0.c1, rt0.c0, rt0.c3, vt0.c1, rt0.c1 FROM vt0, v0, rt0 GROUP BY v0.c0, rt0.c2, rt0.c4, v0.c2, v0.c1, rt0.c0, rt0.c3, vt0.c1, rt0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT v0.c0, rt0.c2, rt0.c4, v0.c2, v0.c1, rt0.c0, rt0.c3, vt0.c1, rt0.c1 FROM vt0, v0, rt0 GROUP BY v0.c0, rt0.c2, rt0.c4, v0.c2, v0.c1, rt0.c0, rt0.c3, vt0.c1, rt0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT ALL v0.c0, rt0.c2, rt0.c4, v0.c2, v0.c1, rt0.c0, rt0.c3, vt0.c1, rt0.c1 FROM vt0, v0, rt0 GROUP BY v0.c0, rt0.c2, rt0.c4, v0.c2, v0.c1, rt0.c0, rt0.c3, vt0.c1, rt0.c1;
SELECT rt0.c1 FROM rt0;
SELECT rt0.c1 FROM rt0 WHERE (((((((((((rt0.c1)||(rt0.c2)))AND((((rt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c2))))))AND(((rt0.c4)-(rt0.c1)))))OR((NOT (rt0.c2)))))AND(((((rt0.c0)AND(rt0.c2)))AND(rt0.c0))))) UNION ALL SELECT ALL rt0.c1 FROM rt0 WHERE ((NOT (((((((((((rt0.c1)||(rt0.c2)))AND((((rt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c2))))))AND(((rt0.c4)-(rt0.c1)))))OR((NOT (rt0.c2)))))AND(((((rt0.c0)AND(rt0.c2)))AND(rt0.c0))))))) UNION ALL SELECT ALL rt0.c1 FROM rt0 WHERE (((((((((((((rt0.c1)||(rt0.c2)))AND((((rt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c2))))))AND(((rt0.c4)-(rt0.c1)))))OR((NOT (rt0.c2)))))AND(((((rt0.c0)AND(rt0.c2)))AND(rt0.c0))))) ISNULL));
SELECT rt0.c1 FROM rt0;
SELECT DISTINCT * FROM vt0 INNER JOIN t0 ON (((t0.c2 IN ()))LIKE(((vt0.c1) BETWEEN (t0.c0) AND (vt0.c1))));
SELECT DISTINCT * FROM vt0 INNER JOIN t0 ON (((t0.c2 IN ()))LIKE(((vt0.c1) BETWEEN (t0.c0) AND (vt0.c1)))) WHERE ((((((('-94952650') BETWEEN (t0.c0) AND ('Xu')))OR(((((vt0.c1)OR(t0.c2)))AND(t0.c0)))))OR(((x'')IS NOT(vt0.c1))))) UNION SELECT DISTINCT * FROM vt0 INNER JOIN t0 ON (((t0.c2 IN ()))LIKE(((vt0.c1) BETWEEN (t0.c0) AND (vt0.c1)))) WHERE ((NOT ((((((('-94952650') BETWEEN (t0.c0) AND ('Xu')))OR(((((vt0.c1)OR(t0.c2)))AND(t0.c0)))))OR(((x'')IS NOT(vt0.c1))))))) UNION SELECT DISTINCT * FROM vt0 INNER JOIN t0 ON (((t0.c2 IN ()))LIKE(((vt0.c1) BETWEEN (t0.c0) AND (vt0.c1)))) WHERE ((((((((('-94952650') BETWEEN (t0.c0) AND ('Xu')))OR(((((vt0.c1)OR(t0.c2)))AND(t0.c0)))))OR(((x'')IS NOT(vt0.c1))))) ISNULL));
SELECT DISTINCT * FROM vt0 INNER JOIN t0 ON (((t0.c2 IN ()))LIKE(((vt0.c1) BETWEEN (t0.c0) AND (vt0.c1))));
SELECT rt0.c1 FROM t0 LEFT OUTER JOIN rt0 ON CAST((((rt0.c4)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1))) AS REAL) GROUP BY rt0.c1;
SELECT rt0.c1 FROM t0 LEFT OUTER JOIN rt0 ON CAST((((rt0.c4)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1))) AS REAL) WHERE (((rt0.c3 COLLATE NOCASE)>(COALESCE(rt0.c0, t0.c0)))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM t0 LEFT OUTER JOIN rt0 ON CAST((((rt0.c4)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1))) AS REAL) WHERE ((NOT (((rt0.c3 COLLATE NOCASE)>(COALESCE(rt0.c0, t0.c0)))))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM t0 LEFT OUTER JOIN rt0 ON CAST((((rt0.c4)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1))) AS REAL) WHERE (((((rt0.c3 COLLATE NOCASE)>(COALESCE(rt0.c0, t0.c0)))) ISNULL)) GROUP BY rt0.c1;
SELECT rt0.c1 FROM t0 LEFT OUTER JOIN rt0 ON CAST((((rt0.c4)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1))) AS REAL) GROUP BY rt0.c1;
SELECT ALL rt0.c0, rt0.c1, rt0.c4, rt0.c2, t0.c0, vt0.c1, rt0.c3, vt0.c0, v0.c0 FROM v0, vt0, rt0 RIGHT OUTER JOIN t0 ON ((('258132078' COLLATE RTRIM))<((((rt0.c0) BETWEEN (v0.c0) AND (rt0.c2))))) GROUP BY rt0.c0, rt0.c1, rt0.c4, rt0.c2, t0.c0, vt0.c1, rt0.c3, vt0.c0, v0.c0;
SELECT rt0.c0, rt0.c1, rt0.c4, rt0.c2, t0.c0, vt0.c1, rt0.c3, vt0.c0, v0.c0 FROM v0, vt0, rt0 RIGHT OUTER JOIN t0 ON ((('258132078' COLLATE RTRIM))<((((rt0.c0) BETWEEN (v0.c0) AND (rt0.c2))))) GROUP BY rt0.c0, rt0.c1, rt0.c4, rt0.c2, t0.c0, vt0.c1, rt0.c3, vt0.c0, v0.c0 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c4, rt0.c2, t0.c0, vt0.c1, rt0.c3, vt0.c0, v0.c0 FROM v0, vt0, rt0 RIGHT OUTER JOIN t0 ON ((('258132078' COLLATE RTRIM))<((((rt0.c0) BETWEEN (v0.c0) AND (rt0.c2))))) GROUP BY rt0.c0, rt0.c1, rt0.c4, rt0.c2, t0.c0, vt0.c1, rt0.c3, vt0.c0, v0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c4, rt0.c2, t0.c0, vt0.c1, rt0.c3, vt0.c0, v0.c0 FROM v0, vt0, rt0 RIGHT OUTER JOIN t0 ON ((('258132078' COLLATE RTRIM))<((((rt0.c0) BETWEEN (v0.c0) AND (rt0.c2))))) GROUP BY rt0.c0, rt0.c1, rt0.c4, rt0.c2, t0.c0, vt0.c1, rt0.c3, vt0.c0, v0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c0, rt0.c1, rt0.c4, rt0.c2, t0.c0, vt0.c1, rt0.c3, vt0.c0, v0.c0 FROM v0, vt0, rt0 RIGHT OUTER JOIN t0 ON ((('258132078' COLLATE RTRIM))<((((rt0.c0) BETWEEN (v0.c0) AND (rt0.c2))))) GROUP BY rt0.c0, rt0.c1, rt0.c4, rt0.c2, t0.c0, vt0.c1, rt0.c3, vt0.c0, v0.c0;
SELECT rt0.c0, rt0.c1, rt0.c4, rt0.c2, t0.c0, vt0.c1, rt0.c3, vt0.c0, v0.c0 FROM v0, vt0, rt0 RIGHT OUTER JOIN t0 ON ((('258132078' COLLATE RTRIM))<((((rt0.c0) BETWEEN (v0.c0) AND (rt0.c2))))) GROUP BY rt0.c0, rt0.c1, rt0.c4, rt0.c2, t0.c0, vt0.c1, rt0.c3, vt0.c0, v0.c0 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c4, rt0.c2, t0.c0, vt0.c1, rt0.c3, vt0.c0, v0.c0 FROM v0, vt0, rt0 RIGHT OUTER JOIN t0 ON ((('258132078' COLLATE RTRIM))<((((rt0.c0) BETWEEN (v0.c0) AND (rt0.c2))))) GROUP BY rt0.c0, rt0.c1, rt0.c4, rt0.c2, t0.c0, vt0.c1, rt0.c3, vt0.c0, v0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c4, rt0.c2, t0.c0, vt0.c1, rt0.c3, vt0.c0, v0.c0 FROM v0, vt0, rt0 RIGHT OUTER JOIN t0 ON ((('258132078' COLLATE RTRIM))<((((rt0.c0) BETWEEN (v0.c0) AND (rt0.c2))))) GROUP BY rt0.c0, rt0.c1, rt0.c4, rt0.c2, t0.c0, vt0.c1, rt0.c3, vt0.c0, v0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c0, rt0.c1, rt0.c4, rt0.c2, t0.c0, vt0.c1, rt0.c3, vt0.c0, v0.c0 FROM v0, vt0, rt0 RIGHT OUTER JOIN t0 ON ((('258132078' COLLATE RTRIM))<((((rt0.c0) BETWEEN (v0.c0) AND (rt0.c2))))) GROUP BY rt0.c0, rt0.c1, rt0.c4, rt0.c2, t0.c0, vt0.c1, rt0.c3, vt0.c0, v0.c0;
SELECT ALL t0.c0, vt0.c1, rt0.c0, rt0.c2 FROM t0, rt0, vt0;
SELECT t0.c0, vt0.c1, rt0.c0, rt0.c2 FROM t0, rt0, vt0 WHERE (TRIM(DISTINCT LIKELIHOOD(DISTINCT rt0.c4, 0.9519537711687872), ((rt0.c0)==(vt0.c1)))) UNION ALL SELECT ALL t0.c0, vt0.c1, rt0.c0, rt0.c2 FROM t0, rt0, vt0 WHERE ((NOT (TRIM(DISTINCT LIKELIHOOD(DISTINCT rt0.c4, 0.9519537711687872), ((rt0.c0)==(vt0.c1)))))) UNION ALL SELECT t0.c0, vt0.c1, rt0.c0, rt0.c2 FROM t0, rt0, vt0 WHERE (((TRIM(DISTINCT LIKELIHOOD(DISTINCT rt0.c4, 0.9519537711687872), ((rt0.c0)==(vt0.c1)))) ISNULL));
SELECT ALL t0.c0, vt0.c1, rt0.c0, rt0.c2 FROM t0, rt0, vt0;
SELECT DISTINCT rt0.c3, vt0.c0, rt0.c4, rt0.c0 FROM rt0, vt0;
SELECT DISTINCT rt0.c3, vt0.c0, rt0.c4, rt0.c0 FROM rt0, vt0 WHERE (CAST(((((vt0.c1)AND(vt0.c1)))AND(rt0.c4)) AS BLOB)) UNION SELECT DISTINCT rt0.c3, vt0.c0, rt0.c4, rt0.c0 FROM rt0, vt0 WHERE ((NOT (CAST(((((vt0.c1)AND(vt0.c1)))AND(rt0.c4)) AS BLOB)))) UNION SELECT DISTINCT rt0.c3, vt0.c0, rt0.c4, rt0.c0 FROM rt0, vt0 WHERE (((CAST(((((vt0.c1)AND(vt0.c1)))AND(rt0.c4)) AS BLOB)) ISNULL));
SELECT DISTINCT rt0.c3, vt0.c0, rt0.c4, rt0.c0 FROM rt0, vt0;
SELECT t0.c2, t0.c0 FROM t0 GROUP BY t0.c2, t0.c0;
SELECT ALL t0.c2, t0.c0 FROM t0 WHERE ((NULL IN (CASE WHEN t0.c2 THEN x'' END))) GROUP BY t0.c2, t0.c0 UNION SELECT t0.c2, t0.c0 FROM t0 WHERE ((NOT ((NULL IN (CASE WHEN t0.c2 THEN x'' END))))) GROUP BY t0.c2, t0.c0 UNION SELECT ALL t0.c2, t0.c0 FROM t0 WHERE ((((NULL IN (CASE WHEN t0.c2 THEN x'' END))) ISNULL)) GROUP BY t0.c2, t0.c0;
SELECT t0.c2, t0.c0 FROM t0 GROUP BY t0.c2, t0.c0;
SELECT ALL v0.c1, vt0.c0, vt0.c1, t0.c0, v0.c0, t0.c2, v0.c2 FROM t0, v0 NOT INDEXED, vt0 GROUP BY v0.c1, vt0.c0, vt0.c1, t0.c0, v0.c0, t0.c2, v0.c2;
SELECT ALL v0.c1, vt0.c0, vt0.c1, t0.c0, v0.c0, t0.c2, v0.c2 FROM t0, v0, vt0 GROUP BY v0.c1, vt0.c0, vt0.c1, t0.c0, v0.c0, t0.c2, v0.c2 HAVING AVG(GROUP_CONCAT(vt0.c0)) UNION ALL SELECT ALL v0.c1, vt0.c0, vt0.c1, t0.c0, v0.c0, t0.c2, v0.c2 FROM t0, v0, vt0 GROUP BY v0.c1, vt0.c0, vt0.c1, t0.c0, v0.c0, t0.c2, v0.c2 HAVING (NOT (AVG(GROUP_CONCAT(vt0.c0)))) UNION ALL SELECT v0.c1, vt0.c0, vt0.c1, t0.c0, v0.c0, t0.c2, v0.c2 FROM t0, v0 NOT INDEXED, vt0 GROUP BY v0.c1, vt0.c0, vt0.c1, t0.c0, v0.c0, t0.c2, v0.c2 HAVING ((AVG(GROUP_CONCAT(vt0.c0))) ISNULL);
SELECT ALL MIN((((rt0.c3)) NOT BETWEEN ((((((t0.c2)OR('-1579387998')))AND(t0.c2)))) AND ((rt0.c2 COLLATE RTRIM)))) FROM t0, v0, vt0, rt0;
SELECT * FROM vt0, t0, v0 RIGHT OUTER JOIN rt0 ON CAST(vt0.c1 COLLATE NOCASE AS BLOB);
SELECT * FROM vt0, t0, v0 RIGHT OUTER JOIN rt0 ON CAST(vt0.c1 COLLATE NOCASE AS BLOB) WHERE (((CASE WHEN NULL THEN t0.c2 WHEN v0.c2 THEN rt0.c4 WHEN v0.c2 THEN rt0.c3 END) IS FALSE)) UNION ALL SELECT * FROM vt0, t0, v0 RIGHT OUTER JOIN rt0 ON CAST(vt0.c1 COLLATE NOCASE AS BLOB) WHERE ((NOT (((CASE WHEN NULL THEN t0.c2 WHEN v0.c2 THEN rt0.c4 WHEN v0.c2 THEN rt0.c3 END) IS FALSE)))) UNION ALL SELECT ALL * FROM vt0, t0, v0 RIGHT OUTER JOIN rt0 ON CAST(vt0.c1 COLLATE NOCASE AS BLOB) WHERE (((((CASE WHEN NULL THEN t0.c2 WHEN v0.c2 THEN rt0.c4 WHEN v0.c2 THEN rt0.c3 END) IS FALSE)) ISNULL));
SELECT * FROM vt0, t0, v0 RIGHT OUTER JOIN rt0 ON CAST(vt0.c1 COLLATE NOCASE AS BLOB);
SELECT DISTINCT * FROM rt0 FULL OUTER JOIN t0 ON ((((rt0.c0)<=(rt0.c0))) BETWEEN (((((t0.c0)OR(t0.c0)))OR(0xffffffffa8856696))) AND (t0.c2));
SELECT DISTINCT * FROM rt0 FULL OUTER JOIN t0 ON ((((rt0.c0)<=(rt0.c0))) BETWEEN (((((t0.c0)OR(t0.c0)))OR(0xffffffffa8856696))) AND (t0.c2)) WHERE ((- ((- (t0.c0))))) UNION SELECT DISTINCT * FROM rt0 FULL OUTER JOIN t0 ON ((((rt0.c0)<=(rt0.c0))) BETWEEN (((((t0.c0)OR(t0.c0)))OR(0xffffffffa8856696))) AND (t0.c2)) WHERE ((NOT ((- ((- (t0.c0))))))) UNION SELECT DISTINCT * FROM rt0 FULL OUTER JOIN t0 ON ((((rt0.c0)<=(rt0.c0))) BETWEEN (((((t0.c0)OR(t0.c0)))OR(0Xffffffffa8856696))) AND (t0.c2)) WHERE ((((- ((- (t0.c0))))) ISNULL));
SELECT DISTINCT * FROM rt0 FULL OUTER JOIN t0 ON ((((rt0.c0)<=(rt0.c0))) BETWEEN (((((t0.c0)OR(t0.c0)))OR(0xffffffffa8856696))) AND (t0.c2));
SELECT rt0.c1, v0.c1, rt0.c3, rt0.c2, rt0.c0, v0.c2, t0.c2, vt0.c1, t0.c0 FROM t0, rt0 FULL OUTER JOIN v0 ON (((rt0.c1 IN ())) NOT BETWEEN (CASE rt0.c4  WHEN t0.c2 THEN v0.c0 ELSE t0.c2 END) AND ((v0.c2 IN ()))) CROSS JOIN vt0 ON (((rt0.c1 IN ())) BETWEEN (0.15114999738365253) AND (((rt0.c2)>>(rt0.c4)))) GROUP BY rt0.c1, v0.c1, rt0.c3, rt0.c2, rt0.c0, v0.c2, t0.c2, vt0.c1, t0.c0;
SELECT ALL rt0.c1, v0.c1, rt0.c3, rt0.c2, rt0.c0, v0.c2, t0.c2, vt0.c1, t0.c0 FROM t0, rt0 FULL OUTER JOIN v0 ON (((rt0.c1 IN ())) NOT BETWEEN (CASE rt0.c4  WHEN t0.c2 THEN v0.c0 ELSE t0.c2 END) AND ((v0.c2 IN ()))) CROSS JOIN vt0 ON (((rt0.c1 IN ())) BETWEEN (0.15114999738365253) AND (((rt0.c2)>>(rt0.c4)))) WHERE ((((v0.c2, t0.c0, vt0.c1)) NOT BETWEEN ((v0.c2 COLLATE BINARY, (((vt0.c1, rt0.c1, v0.c0))<>((t0.c2, v0.c0, rt0.c3))), ((rt0.c0)*(t0.c2)))) AND ((CASE vt0.c1  WHEN v0.c1 THEN vt0.c0 END, (((0.9026557326598905))>((x'40e6'))), rt0.c0 COLLATE NOCASE)))) GROUP BY rt0.c1, v0.c1, rt0.c3, rt0.c2, rt0.c0, v0.c2, t0.c2, vt0.c1, t0.c0 UNION SELECT ALL rt0.c1, v0.c1, rt0.c3, rt0.c2, rt0.c0, v0.c2, t0.c2, vt0.c1, t0.c0 FROM t0, rt0 FULL OUTER JOIN v0 ON (((rt0.c1 IN ())) NOT BETWEEN (CASE rt0.c4  WHEN t0.c2 THEN v0.c0 ELSE t0.c2 END) AND ((v0.c2 IN ()))) CROSS JOIN vt0 ON (((rt0.c1 IN ())) BETWEEN (0.15114999738365253) AND (((rt0.c2)>>(rt0.c4)))) WHERE ((NOT ((((v0.c2, t0.c0, vt0.c1)) NOT BETWEEN ((v0.c2 COLLATE BINARY, (((vt0.c1, rt0.c1, v0.c0))<>((t0.c2, v0.c0, rt0.c3))), ((rt0.c0)*(t0.c2)))) AND ((CASE vt0.c1  WHEN v0.c1 THEN vt0.c0 END, (((0.9026557326598905))>((x'40e6'))), rt0.c0 COLLATE NOCASE)))))) GROUP BY rt0.c1, v0.c1, rt0.c3, rt0.c2, rt0.c0, v0.c2, t0.c2, vt0.c1, t0.c0 UNION SELECT rt0.c1, v0.c1, rt0.c3, rt0.c2, rt0.c0, v0.c2, t0.c2, vt0.c1, t0.c0 FROM t0, rt0 FULL OUTER JOIN v0 ON (((rt0.c1 IN ())) NOT BETWEEN (CASE rt0.c4  WHEN t0.c2 THEN v0.c0 ELSE t0.c2 END) AND ((v0.c2 IN ()))) CROSS JOIN vt0 ON (((rt0.c1 IN ())) BETWEEN (0.15114999738365253) AND (((rt0.c2)>>(rt0.c4)))) WHERE ((((((v0.c2, t0.c0, vt0.c1)) NOT BETWEEN ((v0.c2 COLLATE BINARY, (((vt0.c1, rt0.c1, v0.c0))<>((t0.c2, v0.c0, rt0.c3))), ((rt0.c0)*(t0.c2)))) AND ((CASE vt0.c1  WHEN v0.c1 THEN vt0.c0 END, (((0.9026557326598905))>((x'40e6'))), rt0.c0 COLLATE NOCASE)))) ISNULL)) GROUP BY rt0.c1, v0.c1, rt0.c3, rt0.c2, rt0.c0, v0.c2, t0.c2, vt0.c1, t0.c0;
SELECT rt0.c1, v0.c1, rt0.c3, rt0.c2, rt0.c0, v0.c2, t0.c2, vt0.c1, t0.c0 FROM t0, rt0 FULL OUTER JOIN v0 ON (((rt0.c1 IN ())) NOT BETWEEN (CASE rt0.c4  WHEN t0.c2 THEN v0.c0 ELSE t0.c2 END) AND ((v0.c2 IN ()))) CROSS JOIN vt0 ON (((rt0.c1 IN ())) BETWEEN (0.15114999738365253) AND (((rt0.c2)>>(rt0.c4)))) GROUP BY rt0.c1, v0.c1, rt0.c3, rt0.c2, rt0.c0, v0.c2, t0.c2, vt0.c1, t0.c0;
SELECT t0.c2 FROM t0 GROUP BY t0.c2;
SELECT ALL t0.c2 FROM t0 GROUP BY t0.c2 HAVING SUM((~ (COUNT(*)))) UNION ALL SELECT t0.c2 FROM t0 GROUP BY t0.c2 HAVING (NOT (SUM((~ (COUNT(*)))))) UNION ALL SELECT ALL t0.c2 FROM t0 GROUP BY t0.c2 HAVING ((SUM((~ (COUNT(*))))) ISNULL);
SELECT ALL * FROM rt0, vt0;
SELECT * FROM rt0, vt0 WHERE (CAST((((rt0.c3, vt0.c0, 0.5416919711169419))==((rt0.c1, rt0.c2, 0.37452732496215557))) AS REAL)) UNION ALL SELECT * FROM rt0, vt0 WHERE ((NOT (CAST((((rt0.c3, vt0.c0, 0.5416919711169419))=((rt0.c1, rt0.c2, 0.37452732496215557))) AS REAL)))) UNION ALL SELECT ALL * FROM rt0, vt0 WHERE (((CAST((((rt0.c3, vt0.c0, 0.5416919711169419))=((rt0.c1, rt0.c2, 0.37452732496215557))) AS REAL)) ISNULL));
SELECT ALL * FROM rt0, vt0;
SELECT DISTINCT rt0.c0, rt0.c2, rt0.c4, v0.c2, t0.c0, vt0.c1 FROM t0, rt0 LEFT OUTER JOIN vt0 ON ((((t0.c0) NOT NULL))+(CASE WHEN v0.c0 THEN v0.c1 END)) INNER JOIN v0 ON COALESCE(((((vt0.c0)AND(t0.c0)))AND('520563342')), ((t0.c2)IS NOT(rt0.c1)));
SELECT ALL v0.c2, v0.c0, v0.c1, t0.c0, vt0.c1, vt0.c0, t0.c2 FROM vt0 FULL OUTER JOIN v0 ON ((CHANGES()) BETWEEN (v0.c0 COLLATE BINARY) AND ('+[ni')) INNER JOIN t0 ON ((CAST(t0.c2 AS TEXT)) NOT BETWEEN (v0.c0 COLLATE RTRIM) AND (((v0.c1)>>(t0.c2)))) GROUP BY v0.c2, v0.c0, v0.c1, t0.c0, vt0.c1, vt0.c0, t0.c2;
SELECT v0.c2, v0.c0, v0.c1, t0.c0, vt0.c1, vt0.c0, t0.c2 FROM vt0 FULL OUTER JOIN v0 ON ((CHANGES()) BETWEEN (v0.c0 COLLATE BINARY) AND ('+[ni')) INNER JOIN t0 ON ((CAST(t0.c2 AS TEXT)) NOT BETWEEN (v0.c0 COLLATE RTRIM) AND (((v0.c1)>>(t0.c2)))) WHERE (vt0.c1) GROUP BY v0.c2, v0.c0, v0.c1, t0.c0, vt0.c1, vt0.c0, t0.c2 UNION SELECT ALL v0.c2, v0.c0, v0.c1, t0.c0, vt0.c1, vt0.c0, t0.c2 FROM vt0 FULL OUTER JOIN v0 ON ((CHANGES()) BETWEEN (v0.c0 COLLATE BINARY) AND ('+[ni')) INNER JOIN t0 ON ((CAST(t0.c2 AS TEXT)) NOT BETWEEN (v0.c0 COLLATE RTRIM) AND (((v0.c1)>>(t0.c2)))) WHERE ((NOT (vt0.c1))) GROUP BY v0.c2, v0.c0, v0.c1, t0.c0, vt0.c1, vt0.c0, t0.c2 UNION SELECT ALL v0.c2, v0.c0, v0.c1, t0.c0, vt0.c1, vt0.c0, t0.c2 FROM vt0 FULL OUTER JOIN v0 ON ((CHANGES()) BETWEEN (v0.c0 COLLATE BINARY) AND ('+[ni')) INNER JOIN t0 ON ((CAST(t0.c2 AS TEXT)) NOT BETWEEN (v0.c0 COLLATE RTRIM) AND (((v0.c1)>>(t0.c2)))) WHERE (((vt0.c1) ISNULL)) GROUP BY v0.c2, v0.c0, v0.c1, t0.c0, vt0.c1, vt0.c0, t0.c2;
SELECT ALL v0.c2, v0.c0, v0.c1, t0.c0, vt0.c1, vt0.c0, t0.c2 FROM vt0 FULL OUTER JOIN v0 ON ((CHANGES()) BETWEEN (v0.c0 COLLATE BINARY) AND ('+[ni')) INNER JOIN t0 ON ((CAST(t0.c2 AS TEXT)) NOT BETWEEN (v0.c0 COLLATE RTRIM) AND (((v0.c1)>>(t0.c2)))) GROUP BY v0.c2, v0.c0, v0.c1, t0.c0, vt0.c1, vt0.c0, t0.c2;
SELECT ALL v0.c1, rt0.c2, rt0.c0, v0.c2, v0.c0, rt0.c4 FROM v0 CROSS JOIN rt0 ON LIKELY(DISTINCT ((rt0.c0)>=(rt0.c2))) GROUP BY v0.c1, rt0.c2, rt0.c0, v0.c2, v0.c0, rt0.c4;
SELECT ALL v0.c1, rt0.c2, rt0.c0, v0.c2, v0.c0, rt0.c4 FROM v0 CROSS JOIN rt0 ON LIKELY(DISTINCT ((rt0.c0)>=(rt0.c2))) GROUP BY v0.c1, rt0.c2, rt0.c0, v0.c2, v0.c0, rt0.c4 HAVING SUM(v0.c2) UNION ALL SELECT v0.c1, rt0.c2, rt0.c0, v0.c2, v0.c0, rt0.c4 FROM v0 CROSS JOIN rt0 ON LIKELY(DISTINCT ((rt0.c0)>=(rt0.c2))) GROUP BY v0.c1, rt0.c2, rt0.c0, v0.c2, v0.c0, rt0.c4 HAVING (NOT (SUM(v0.c2))) UNION ALL SELECT v0.c1, rt0.c2, rt0.c0, v0.c2, v0.c0, rt0.c4 FROM v0 CROSS JOIN rt0 ON LIKELY(DISTINCT ((rt0.c0)>=(rt0.c2))) GROUP BY v0.c1, rt0.c2, rt0.c0, v0.c2, v0.c0, rt0.c4 HAVING ((SUM(v0.c2)) ISNULL);
SELECT ALL v0.c1, rt0.c2, rt0.c0, v0.c2, v0.c0, rt0.c4 FROM v0 CROSS JOIN rt0 ON LIKELY(DISTINCT ((rt0.c0)>=(rt0.c2))) GROUP BY v0.c1, rt0.c2, rt0.c0, v0.c2, v0.c0, rt0.c4;
SELECT ALL v0.c1, rt0.c2, rt0.c0, v0.c2, v0.c0, rt0.c4 FROM v0 CROSS JOIN rt0 ON LIKELY(DISTINCT ((rt0.c0)>=(rt0.c2))) GROUP BY v0.c1, rt0.c2, rt0.c0, v0.c2, v0.c0, rt0.c4 HAVING SUM(v0.c2) UNION ALL SELECT v0.c1, rt0.c2, rt0.c0, v0.c2, v0.c0, rt0.c4 FROM v0 CROSS JOIN rt0 ON LIKELY(DISTINCT ((rt0.c0)>=(rt0.c2))) GROUP BY v0.c1, rt0.c2, rt0.c0, v0.c2, v0.c0, rt0.c4 HAVING (NOT (SUM(v0.c2))) UNION ALL SELECT v0.c1, rt0.c2, rt0.c0, v0.c2, v0.c0, rt0.c4 FROM v0 CROSS JOIN rt0 ON LIKELY(DISTINCT ((rt0.c0)>=(rt0.c2))) GROUP BY v0.c1, rt0.c2, rt0.c0, v0.c2, v0.c0, rt0.c4 HAVING ((SUM(v0.c2)) ISNULL);
SELECT ALL v0.c1, rt0.c2, rt0.c0, v0.c2, v0.c0, rt0.c4 FROM v0 CROSS JOIN rt0 ON LIKELY(DISTINCT ((rt0.c0)>=(rt0.c2))) GROUP BY v0.c1, rt0.c2, rt0.c0, v0.c2, v0.c0, rt0.c4;
SELECT * FROM rt0, vt0, t0;
SELECT * FROM rt0, vt0, t0 WHERE (rt0.c2 COLLATE NOCASE) UNION ALL SELECT ALL * FROM rt0, vt0, t0 WHERE ((NOT (rt0.c2 COLLATE NOCASE))) UNION ALL SELECT * FROM rt0, vt0, t0 WHERE (((rt0.c2 COLLATE NOCASE) ISNULL));
SELECT * FROM rt0, vt0, t0;
SELECT DISTINCT vt0.c1, rt0.c2, rt0.c0, vt0.c0, rt0.c3, rt0.c1 FROM rt0 RIGHT OUTER JOIN vt0 ON (((rt0.c3 IN ())) BETWEEN (TRIM(DISTINCT vt0.c0, rt0.c2)) AND (((rt0.c0) BETWEEN (x'3053') AND (rt0.c3))));
SELECT DISTINCT vt0.c1, rt0.c2, rt0.c0, vt0.c0, rt0.c3, rt0.c1 FROM rt0 RIGHT OUTER JOIN vt0 ON (((rt0.c3 IN ())) BETWEEN (TRIM(DISTINCT vt0.c0, rt0.c2)) AND (((rt0.c0) BETWEEN (x'3053') AND (rt0.c3)))) WHERE (((((rt0.c4)<<(vt0.c1)))||(((vt0.c1) IS FALSE)))) UNION SELECT DISTINCT vt0.c1, rt0.c2, rt0.c0, vt0.c0, rt0.c3, rt0.c1 FROM rt0 RIGHT OUTER JOIN vt0 ON (((rt0.c3 IN ())) BETWEEN (TRIM(DISTINCT vt0.c0, rt0.c2)) AND (((rt0.c0) BETWEEN (x'3053') AND (rt0.c3)))) WHERE ((NOT (((((rt0.c4)<<(vt0.c1)))||(((vt0.c1) IS FALSE)))))) UNION SELECT DISTINCT vt0.c1, rt0.c2, rt0.c0, vt0.c0, rt0.c3, rt0.c1 FROM rt0 RIGHT OUTER JOIN vt0 ON (((rt0.c3 IN ())) BETWEEN (TRIM(DISTINCT vt0.c0, rt0.c2)) AND (((rt0.c0) BETWEEN (x'3053') AND (rt0.c3)))) WHERE (((((((rt0.c4)<<(vt0.c1)))||(((vt0.c1) IS FALSE)))) ISNULL));
SELECT DISTINCT vt0.c1, rt0.c2, rt0.c0, vt0.c0, rt0.c3, rt0.c1 FROM rt0 RIGHT OUTER JOIN vt0 ON (((rt0.c3 IN ())) BETWEEN (TRIM(DISTINCT vt0.c0, rt0.c2)) AND (((rt0.c0) BETWEEN (x'3053') AND (rt0.c3))));
SELECT ALL vt0.c1 FROM rt0, v0, t0, vt0 GROUP BY vt0.c1;
SELECT vt0.c1 FROM rt0, v0, t0, vt0 WHERE (((CASE rt0.c3  WHEN vt0.c1 THEN rt0.c0 ELSE rt0.c0 END)&(rt0.c2))) GROUP BY vt0.c1 UNION SELECT ALL vt0.c1 FROM rt0, v0, t0, vt0 WHERE ((NOT (((CASE rt0.c3  WHEN vt0.c1 THEN rt0.c0 ELSE rt0.c0 END)&(rt0.c2))))) GROUP BY vt0.c1 UNION SELECT vt0.c1 FROM rt0, v0, t0, vt0 WHERE (((((CASE rt0.c3  WHEN vt0.c1 THEN rt0.c0 ELSE rt0.c0 END)&(rt0.c2))) ISNULL)) GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM rt0, v0, t0, vt0 GROUP BY vt0.c1;
SELECT ALL t0.c0, v0.c0, rt0.c1, vt0.c1, rt0.c4, t0.c2, rt0.c0 FROM vt0, v0, t0, rt0 GROUP BY t0.c0, v0.c0, rt0.c1, vt0.c1, rt0.c4, t0.c2, rt0.c0;
SELECT t0.c0, v0.c0, rt0.c1, vt0.c1, rt0.c4, t0.c2, rt0.c0 FROM vt0, v0, t0, rt0 GROUP BY t0.c0, v0.c0, rt0.c1, vt0.c1, rt0.c4, t0.c2, rt0.c0 HAVING (((rt0.c3)IS NOT(SUM(v0.c1))) IN ()) UNION ALL SELECT ALL t0.c0, v0.c0, rt0.c1, vt0.c1, rt0.c4, t0.c2, rt0.c0 FROM vt0, v0, t0, rt0 GROUP BY t0.c0, v0.c0, rt0.c1, vt0.c1, rt0.c4, t0.c2, rt0.c0 HAVING (NOT ((((rt0.c3)IS NOT(SUM(v0.c1))) IN ()))) UNION ALL SELECT t0.c0, v0.c0, rt0.c1, vt0.c1, rt0.c4, t0.c2, rt0.c0 FROM vt0, v0, t0, rt0 GROUP BY t0.c0, v0.c0, rt0.c1, vt0.c1, rt0.c4, t0.c2, rt0.c0 HAVING (((((rt0.c3)IS NOT(SUM(v0.c1))) IN ())) ISNULL);
SELECT ALL t0.c0, v0.c0, rt0.c1, vt0.c1, rt0.c4, t0.c2, rt0.c0 FROM vt0, v0, t0, rt0 GROUP BY t0.c0, v0.c0, rt0.c1, vt0.c1, rt0.c4, t0.c2, rt0.c0;
SELECT t0.c0, v0.c0, rt0.c1, vt0.c1, rt0.c4, t0.c2, rt0.c0 FROM vt0, v0, t0, rt0 GROUP BY t0.c0, v0.c0, rt0.c1, vt0.c1, rt0.c4, t0.c2, rt0.c0 HAVING (((rt0.c3)IS NOT(SUM(v0.c1))) IN ()) UNION ALL SELECT ALL t0.c0, v0.c0, rt0.c1, vt0.c1, rt0.c4, t0.c2, rt0.c0 FROM vt0, v0, t0, rt0 GROUP BY t0.c0, v0.c0, rt0.c1, vt0.c1, rt0.c4, t0.c2, rt0.c0 HAVING (NOT ((((rt0.c3)IS NOT(SUM(v0.c1))) IN ()))) UNION ALL SELECT t0.c0, v0.c0, rt0.c1, vt0.c1, rt0.c4, t0.c2, rt0.c0 FROM vt0, v0, t0, rt0 GROUP BY t0.c0, v0.c0, rt0.c1, vt0.c1, rt0.c4, t0.c2, rt0.c0 HAVING (((((rt0.c3)IS NOT(SUM(v0.c1))) IN ())) ISNULL);
SELECT ALL t0.c0, v0.c0, rt0.c1, vt0.c1, rt0.c4, t0.c2, rt0.c0 FROM vt0, v0, t0, rt0 GROUP BY t0.c0, v0.c0, rt0.c1, vt0.c1, rt0.c4, t0.c2, rt0.c0;
SELECT ALL v0.c0, v0.c2, rt0.c1, rt0.c2, v0.c1, rt0.c3, rt0.c4, rt0.c0 FROM rt0, v0;
SELECT ALL v0.c0, v0.c2, rt0.c1, rt0.c2, v0.c1, rt0.c3, rt0.c4, rt0.c0 FROM rt0, v0 WHERE (rt0.c0) UNION ALL SELECT ALL v0.c0, v0.c2, rt0.c1, rt0.c2, v0.c1, rt0.c3, rt0.c4, rt0.c0 FROM rt0, v0 WHERE ((NOT (rt0.c0))) UNION ALL SELECT ALL v0.c0, v0.c2, rt0.c1, rt0.c2, v0.c1, rt0.c3, rt0.c4, rt0.c0 FROM rt0, v0 WHERE (((rt0.c0) ISNULL));
SELECT ALL v0.c0, v0.c2, rt0.c1, rt0.c2, v0.c1, rt0.c3, rt0.c4, rt0.c0 FROM rt0, v0;
SELECT DISTINCT t0.c0, t0.c2 FROM t0 NOT INDEXED;
SELECT DISTINCT t0.c0, t0.c2 FROM t0 WHERE ((((+ (t0.c2))) NOTNULL)) UNION SELECT DISTINCT t0.c0, t0.c2 FROM t0 WHERE ((NOT ((((+ (t0.c2))) NOTNULL)))) UNION SELECT DISTINCT t0.c0, t0.c2 FROM t0 WHERE ((((((+ (t0.c2))) NOTNULL)) ISNULL));
SELECT DISTINCT t0.c0, t0.c2 FROM t0 NOT INDEXED;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (CAST(((((((((vt0.c0)OR(vt0.c1)))AND(vt0.c1)))AND(vt0.c1)))OR(vt0.c0)) AS INTEGER)) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (CAST(((((((((vt0.c0)OR(vt0.c1)))AND(vt0.c1)))AND(vt0.c1)))OR(vt0.c0)) AS INTEGER)))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((CAST(((((((((vt0.c0)OR(vt0.c1)))AND(vt0.c1)))AND(vt0.c1)))OR(vt0.c0)) AS INTEGER)) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL t0.c2, rt0.c2, vt0.c0, vt0.c1, rt0.c0, rt0.c1, rt0.c3, v0.c2, v0.c1, t0.c0, rt0.c4, v0.c0 FROM rt0, v0, vt0, t0 GROUP BY t0.c2, rt0.c2, vt0.c0, vt0.c1, rt0.c0, rt0.c1, rt0.c3, v0.c2, v0.c1, t0.c0, rt0.c4, v0.c0;
SELECT t0.c2, rt0.c2, vt0.c0, vt0.c1, rt0.c0, rt0.c1, rt0.c3, v0.c2, v0.c1, t0.c0, rt0.c4, v0.c0 FROM rt0, v0, vt0, t0 GROUP BY t0.c2, rt0.c2, vt0.c0, vt0.c1, rt0.c0, rt0.c1, rt0.c3, v0.c2, v0.c1, t0.c0, rt0.c4, v0.c0 HAVING GLOB(vt0.c1, TOTAL(vt0.c0)) UNION ALL SELECT ALL t0.c2, rt0.c2, vt0.c0, vt0.c1, rt0.c0, rt0.c1, rt0.c3, v0.c2, v0.c1, t0.c0, rt0.c4, v0.c0 FROM rt0, v0, vt0, t0 GROUP BY t0.c2, rt0.c2, vt0.c0, vt0.c1, rt0.c0, rt0.c1, rt0.c3, v0.c2, v0.c1, t0.c0, rt0.c4, v0.c0 HAVING (NOT (GLOB(vt0.c1, TOTAL(vt0.c0)))) UNION ALL SELECT t0.c2, rt0.c2, vt0.c0, vt0.c1, rt0.c0, rt0.c1, rt0.c3, v0.c2, v0.c1, t0.c0, rt0.c4, v0.c0 FROM rt0, v0, vt0, t0 GROUP BY t0.c2, rt0.c2, vt0.c0, vt0.c1, rt0.c0, rt0.c1, rt0.c3, v0.c2, v0.c1, t0.c0, rt0.c4, v0.c0 HAVING ((GLOB(vt0.c1, TOTAL(vt0.c0))) ISNULL);
SELECT ALL t0.c2, rt0.c2, vt0.c0, vt0.c1, rt0.c0, rt0.c1, rt0.c3, v0.c2, v0.c1, t0.c0, rt0.c4, v0.c0 FROM rt0, v0, vt0, t0 GROUP BY t0.c2, rt0.c2, vt0.c0, vt0.c1, rt0.c0, rt0.c1, rt0.c3, v0.c2, v0.c1, t0.c0, rt0.c4, v0.c0;
SELECT t0.c2, rt0.c2, vt0.c0, vt0.c1, rt0.c0, rt0.c1, rt0.c3, v0.c2, v0.c1, t0.c0, rt0.c4, v0.c0 FROM rt0, v0, vt0, t0 GROUP BY t0.c2, rt0.c2, vt0.c0, vt0.c1, rt0.c0, rt0.c1, rt0.c3, v0.c2, v0.c1, t0.c0, rt0.c4, v0.c0 HAVING GLOB(vt0.c1, TOTAL(vt0.c0)) UNION ALL SELECT ALL t0.c2, rt0.c2, vt0.c0, vt0.c1, rt0.c0, rt0.c1, rt0.c3, v0.c2, v0.c1, t0.c0, rt0.c4, v0.c0 FROM rt0, v0, vt0, t0 GROUP BY t0.c2, rt0.c2, vt0.c0, vt0.c1, rt0.c0, rt0.c1, rt0.c3, v0.c2, v0.c1, t0.c0, rt0.c4, v0.c0 HAVING (NOT (GLOB(vt0.c1, TOTAL(vt0.c0)))) UNION ALL SELECT t0.c2, rt0.c2, vt0.c0, vt0.c1, rt0.c0, rt0.c1, rt0.c3, v0.c2, v0.c1, t0.c0, rt0.c4, v0.c0 FROM rt0, v0, vt0, t0 GROUP BY t0.c2, rt0.c2, vt0.c0, vt0.c1, rt0.c0, rt0.c1, rt0.c3, v0.c2, v0.c1, t0.c0, rt0.c4, v0.c0 HAVING ((GLOB(vt0.c1, TOTAL(vt0.c0))) ISNULL);
SELECT ALL t0.c2, rt0.c2, vt0.c0, vt0.c1, rt0.c0, rt0.c1, rt0.c3, v0.c2, v0.c1, t0.c0, rt0.c4, v0.c0 FROM rt0, v0, vt0, t0 GROUP BY t0.c2, rt0.c2, vt0.c0, vt0.c1, rt0.c0, rt0.c1, rt0.c3, v0.c2, v0.c1, t0.c0, rt0.c4, v0.c0;
SELECT rt0.c0, rt0.c4, v0.c1, v0.c2, rt0.c2, t0.c0, vt0.c1, v0.c0 FROM vt0, rt0, t0, v0;
SELECT ALL rt0.c0, rt0.c4, v0.c1, v0.c2, rt0.c2, t0.c0, vt0.c1, v0.c0 FROM vt0, rt0, t0, v0 WHERE (CAST(((v0.c2)|(rt0.c0)) AS NUMERIC)) UNION ALL SELECT rt0.c0, rt0.c4, v0.c1, v0.c2, rt0.c2, t0.c0, vt0.c1, v0.c0 FROM vt0, rt0, t0, v0 WHERE ((NOT (CAST(((v0.c2)|(rt0.c0)) AS NUMERIC)))) UNION ALL SELECT rt0.c0, rt0.c4, v0.c1, v0.c2, rt0.c2, t0.c0, vt0.c1, v0.c0 FROM vt0, rt0, t0, v0 WHERE (((CAST(((v0.c2)|(rt0.c0)) AS NUMERIC)) ISNULL));
SELECT rt0.c0, rt0.c4, v0.c1, v0.c2, rt0.c2, t0.c0, vt0.c1, v0.c0 FROM vt0, rt0, t0, v0;
SELECT DISTINCT t0.c0 FROM rt0 FULL OUTER JOIN t0 ON ((((rt0.c1)<(t0.c2)))>=(NULL));
SELECT DISTINCT t0.c0 FROM rt0 FULL OUTER JOIN t0 ON ((((rt0.c1)<(t0.c2)))>=(NULL)) WHERE (((rt0.c3)*(rt0.c1)) COLLATE BINARY) UNION SELECT DISTINCT t0.c0 FROM rt0 FULL OUTER JOIN t0 ON ((((rt0.c1)<(t0.c2)))>=(NULL)) WHERE ((NOT (((rt0.c3)*(rt0.c1)) COLLATE BINARY))) UNION SELECT DISTINCT t0.c0 FROM rt0 FULL OUTER JOIN t0 ON ((((rt0.c1)<(t0.c2)))>=(NULL)) WHERE (((((rt0.c3)*(rt0.c1)) COLLATE BINARY) ISNULL));
SELECT DISTINCT t0.c0 FROM rt0 FULL OUTER JOIN t0 ON ((((rt0.c1)<(t0.c2)))>=(NULL));
SELECT v0.c2, v0.c0, rt0.c1, vt0.c1, rt0.c0, v0.c1 FROM rt0, v0 RIGHT OUTER JOIN vt0 ON (+ (v0.c2)) COLLATE RTRIM FULL OUTER JOIN t0 ON IFNULL(rt0.c0, rt0.c1) COLLATE RTRIM GROUP BY v0.c2, v0.c0, rt0.c1, vt0.c1, rt0.c0, v0.c1;
SELECT v0.c2, v0.c0, rt0.c1, vt0.c1, rt0.c0, v0.c1 FROM rt0, v0 RIGHT OUTER JOIN vt0 ON (+ (v0.c2)) COLLATE RTRIM FULL OUTER JOIN t0 ON IFNULL(rt0.c0, rt0.c1) COLLATE RTRIM WHERE (0xffffffffb3106965) GROUP BY v0.c2, v0.c0, rt0.c1, vt0.c1, rt0.c0, v0.c1 UNION SELECT v0.c2, v0.c0, rt0.c1, vt0.c1, rt0.c0, v0.c1 FROM rt0, v0 RIGHT OUTER JOIN vt0 ON (+ (v0.c2)) COLLATE RTRIM FULL OUTER JOIN t0 ON IFNULL(rt0.c0, rt0.c1) COLLATE RTRIM WHERE ((NOT (0Xffffffffb3106965))) GROUP BY v0.c2, v0.c0, rt0.c1, vt0.c1, rt0.c0, v0.c1 UNION SELECT v0.c2, v0.c0, rt0.c1, vt0.c1, rt0.c0, v0.c1 FROM rt0, v0 RIGHT OUTER JOIN vt0 ON (+ (v0.c2)) COLLATE RTRIM FULL OUTER JOIN t0 ON IFNULL(rt0.c0, rt0.c1) COLLATE RTRIM WHERE (((0xffffffffb3106965) ISNULL)) GROUP BY v0.c2, v0.c0, rt0.c1, vt0.c1, rt0.c0, v0.c1;
SELECT v0.c2, v0.c0, rt0.c1, vt0.c1, rt0.c0, v0.c1 FROM rt0, v0 RIGHT OUTER JOIN vt0 ON (+ (v0.c2)) COLLATE RTRIM FULL OUTER JOIN t0 ON IFNULL(rt0.c0, rt0.c1) COLLATE RTRIM GROUP BY v0.c2, v0.c0, rt0.c1, vt0.c1, rt0.c0, v0.c1;
SELECT ALL v0.c0, vt0.c1, t0.c2, v0.c1, v0.c2 FROM vt0 LEFT OUTER JOIN t0 ON (((((((((((((vt0.c1)AND(v0.c1)))OR(v0.c2)))AND(t0.c2)))OR('-386333045')))OR(v0.c2)))AND(v0.c0)) IN ()) INNER JOIN v0 ON (- (((v0.c1)<<(v0.c0)))) GROUP BY v0.c0, vt0.c1, t0.c2, v0.c1, v0.c2;
SELECT v0.c0, vt0.c1, t0.c2, v0.c1, v0.c2 FROM vt0 LEFT OUTER JOIN t0 ON (((((((((((((vt0.c1)AND(v0.c1)))OR(v0.c2)))AND(t0.c2)))OR('-386333045')))OR(v0.c2)))AND(v0.c0)) IN ()) INNER JOIN v0 ON (- (((v0.c1)<<(v0.c0)))) GROUP BY v0.c0, vt0.c1, t0.c2, v0.c1, v0.c2 HAVING t0.c0 UNION ALL SELECT v0.c0, vt0.c1, t0.c2, v0.c1, v0.c2 FROM vt0 LEFT OUTER JOIN t0 ON (((((((((((((vt0.c1)AND(v0.c1)))OR(v0.c2)))AND(t0.c2)))OR('-386333045')))OR(v0.c2)))AND(v0.c0)) IN ()) INNER JOIN v0 ON (- (((v0.c1)<<(v0.c0)))) GROUP BY v0.c0, vt0.c1, t0.c2, v0.c1, v0.c2 HAVING (NOT (t0.c0)) UNION ALL SELECT ALL v0.c0, vt0.c1, t0.c2, v0.c1, v0.c2 FROM vt0 LEFT OUTER JOIN t0 ON (((((((((((((vt0.c1)AND(v0.c1)))OR(v0.c2)))AND(t0.c2)))OR('-386333045')))OR(v0.c2)))AND(v0.c0)) IN ()) INNER JOIN v0 ON (- (((v0.c1)<<(v0.c0)))) GROUP BY v0.c0, vt0.c1, t0.c2, v0.c1, v0.c2 HAVING ((t0.c0) ISNULL);
SELECT ALL v0.c0, vt0.c1, t0.c2, v0.c1, v0.c2 FROM vt0 LEFT OUTER JOIN t0 ON (((((((((((((vt0.c1)AND(v0.c1)))OR(v0.c2)))AND(t0.c2)))OR('-386333045')))OR(v0.c2)))AND(v0.c0)) IN ()) INNER JOIN v0 ON (- (((v0.c1)<<(v0.c0)))) GROUP BY v0.c0, vt0.c1, t0.c2, v0.c1, v0.c2;
SELECT v0.c0, vt0.c1, t0.c2, v0.c1, v0.c2 FROM vt0 LEFT OUTER JOIN t0 ON (((((((((((((vt0.c1)AND(v0.c1)))OR(v0.c2)))AND(t0.c2)))OR('-386333045')))OR(v0.c2)))AND(v0.c0)) IN ()) INNER JOIN v0 ON (- (((v0.c1)<<(v0.c0)))) GROUP BY v0.c0, vt0.c1, t0.c2, v0.c1, v0.c2 HAVING t0.c0 UNION ALL SELECT v0.c0, vt0.c1, t0.c2, v0.c1, v0.c2 FROM vt0 LEFT OUTER JOIN t0 ON (((((((((((((vt0.c1)AND(v0.c1)))OR(v0.c2)))AND(t0.c2)))OR('-386333045')))OR(v0.c2)))AND(v0.c0)) IN ()) INNER JOIN v0 ON (- (((v0.c1)<<(v0.c0)))) GROUP BY v0.c0, vt0.c1, t0.c2, v0.c1, v0.c2 HAVING (NOT (t0.c0)) UNION ALL SELECT ALL v0.c0, vt0.c1, t0.c2, v0.c1, v0.c2 FROM vt0 LEFT OUTER JOIN t0 ON (((((((((((((vt0.c1)AND(v0.c1)))OR(v0.c2)))AND(t0.c2)))OR('-386333045')))OR(v0.c2)))AND(v0.c0)) IN ()) INNER JOIN v0 ON (- (((v0.c1)<<(v0.c0)))) GROUP BY v0.c0, vt0.c1, t0.c2, v0.c1, v0.c2 HAVING ((t0.c0) ISNULL);
SELECT ALL v0.c0, vt0.c1, t0.c2, v0.c1, v0.c2 FROM vt0 LEFT OUTER JOIN t0 ON (((((((((((((vt0.c1)AND(v0.c1)))OR(v0.c2)))AND(t0.c2)))OR('-386333045')))OR(v0.c2)))AND(v0.c0)) IN ()) INNER JOIN v0 ON (- (((v0.c1)<<(v0.c0)))) GROUP BY v0.c0, vt0.c1, t0.c2, v0.c1, v0.c2;
SELECT * FROM t0, vt0, rt0;
SELECT ALL * FROM t0, vt0, rt0 WHERE ((~ (UPPER(DISTINCT t0.c0)))) UNION ALL SELECT ALL * FROM t0, vt0, rt0 WHERE ((NOT ((~ (UPPER(DISTINCT t0.c0)))))) UNION ALL SELECT * FROM t0, vt0, rt0 WHERE ((((~ (UPPER(DISTINCT t0.c0)))) ISNULL));
SELECT * FROM t0, vt0, rt0;
SELECT DISTINCT t0.c2, rt0.c3, vt0.c0, v0.c0, rt0.c0, v0.c1, t0.c0, vt0.c1, rt0.c1, rt0.c4, v0.c2 FROM vt0, v0, t0, rt0;
SELECT DISTINCT t0.c2, rt0.c3, vt0.c0, v0.c0, rt0.c0, v0.c1, t0.c0, vt0.c1, rt0.c1, rt0.c4, v0.c2 FROM vt0, v0, t0, rt0 WHERE ((- ('Xcᎎa'))) UNION SELECT DISTINCT t0.c2, rt0.c3, vt0.c0, v0.c0, rt0.c0, v0.c1, t0.c0, vt0.c1, rt0.c1, rt0.c4, v0.c2 FROM vt0, v0, t0, rt0 WHERE ((NOT ((- ('Xcᎎa'))))) UNION SELECT DISTINCT t0.c2, rt0.c3, vt0.c0, v0.c0, rt0.c0, v0.c1, t0.c0, vt0.c1, rt0.c1, rt0.c4, v0.c2 FROM vt0, v0, t0, rt0 WHERE ((((- ('Xcᎎa'))) ISNULL));
SELECT DISTINCT t0.c2, rt0.c3, vt0.c0, v0.c0, rt0.c0, v0.c1, t0.c0, vt0.c1, rt0.c1, rt0.c4, v0.c2 FROM vt0, v0, t0, rt0;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 WHERE (CAST(rt0.c0 COLLATE RTRIM AS BLOB)) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0 WHERE ((NOT (CAST(rt0.c0 COLLATE RTRIM AS BLOB)))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0 WHERE (((CAST(rt0.c0 COLLATE RTRIM AS BLOB)) ISNULL)) GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL vt0.c0, vt0.c1, v0.c2 FROM v0, vt0 GROUP BY vt0.c0, vt0.c1, v0.c2;
SELECT ALL vt0.c0, vt0.c1, v0.c2 FROM v0, vt0 GROUP BY vt0.c0, vt0.c1, v0.c2 HAVING TOTAL((((COUNT(*)))>=((v0.c0)))) UNION ALL SELECT ALL vt0.c0, vt0.c1, v0.c2 FROM v0, vt0 GROUP BY vt0.c0, vt0.c1, v0.c2 HAVING (NOT (TOTAL((((COUNT(*)))>=((v0.c0)))))) UNION ALL SELECT vt0.c0, vt0.c1, v0.c2 FROM v0, vt0 GROUP BY vt0.c0, vt0.c1, v0.c2 HAVING ((TOTAL((((COUNT(*)))>=((v0.c0))))) ISNULL);
SELECT * FROM v0, rt0;
SELECT ALL * FROM v0, rt0 WHERE ((CASE v0.c2  WHEN rt0.c1 THEN v0.c0 WHEN rt0.c1 THEN v0.c0 WHEN v0.c2 THEN rt0.c3 END IN ())) UNION ALL SELECT ALL * FROM v0, rt0 WHERE ((NOT ((CASE v0.c2  WHEN rt0.c1 THEN v0.c0 WHEN rt0.c1 THEN v0.c0 WHEN v0.c2 THEN rt0.c3 END IN ())))) UNION ALL SELECT ALL * FROM v0, rt0 WHERE ((((CASE v0.c2  WHEN rt0.c1 THEN v0.c0 WHEN rt0.c1 THEN v0.c0 WHEN v0.c2 THEN rt0.c3 END IN ())) ISNULL));
SELECT * FROM v0, rt0;
SELECT DISTINCT v0.c1, v0.c0, t0.c2, v0.c2 FROM rt0 FULL OUTER JOIN t0 ON (((v0.c1 COLLATE NOCASE, CASE vt0.c1  WHEN t0.c2 THEN NULL END, rt0.c1 COLLATE BINARY))!=((rt0.c1 COLLATE RTRIM, v0.c2 COLLATE NOCASE, ((vt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c4))))) LEFT OUTER JOIN vt0 ON (- (((rt0.c4)<=(rt0.c4)))) INNER JOIN v0 ON (((- (v0.c2))) IS FALSE);
SELECT ALL rt0.c2 FROM rt0, vt0 LEFT OUTER JOIN t0 ON t0.c0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0, vt0 LEFT OUTER JOIN t0 ON t0.c0 WHERE (((((((((((((x'')OR(rt0.c2)))AND(vt0.c1)))OR(t0.c0)))OR(rt0.c4)))OR(((t0.c0)LIKE(rt0.c2)))))OR((rt0.c1 IN ())))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0, vt0 LEFT OUTER JOIN t0 ON t0.c0 WHERE ((NOT (((((((((((((x'')OR(rt0.c2)))AND(vt0.c1)))OR(t0.c0)))OR(rt0.c4)))OR(((t0.c0)LIKE(rt0.c2)))))OR((rt0.c1 IN ())))))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0, vt0 LEFT OUTER JOIN t0 ON t0.c0 WHERE (((((((((((((((x'')OR(rt0.c2)))AND(vt0.c1)))OR(t0.c0)))OR(rt0.c4)))OR(((t0.c0)LIKE(rt0.c2)))))OR((rt0.c1 IN ())))) ISNULL)) GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0, vt0 LEFT OUTER JOIN t0 ON t0.c0 GROUP BY rt0.c2;
SELECT rt0.c1, vt0.c1, t0.c2, v0.c2, v0.c0, v0.c1, rt0.c3, rt0.c0, rt0.c2, t0.c0 FROM v0, t0, vt0 NATURAL JOIN rt0 GROUP BY rt0.c1, vt0.c1, t0.c2, v0.c2, v0.c0, v0.c1, rt0.c3, rt0.c0, rt0.c2, t0.c0;
SELECT ALL rt0.c1, vt0.c1, t0.c2, v0.c2, v0.c0, v0.c1, rt0.c3, rt0.c0, rt0.c2, t0.c0 FROM v0, t0, vt0 NATURAL JOIN rt0 GROUP BY rt0.c1, vt0.c1, t0.c2, v0.c2, v0.c0, v0.c1, rt0.c3, rt0.c0, rt0.c2, t0.c0 HAVING SUM(CASE MIN(t0.c2)  WHEN SUM(MIN(COUNT(*))) THEN GROUP_CONCAT(GROUP_CONCAT(v0.c2)) ELSE vt0.c1 END) UNION ALL SELECT rt0.c1, vt0.c1, t0.c2, v0.c2, v0.c0, v0.c1, rt0.c3, rt0.c0, rt0.c2, t0.c0 FROM v0, t0, vt0 NATURAL JOIN rt0 GROUP BY rt0.c1, vt0.c1, t0.c2, v0.c2, v0.c0, v0.c1, rt0.c3, rt0.c0, rt0.c2, t0.c0 HAVING (NOT (SUM(CASE MIN(t0.c2)  WHEN SUM(MIN(COUNT(*))) THEN GROUP_CONCAT(GROUP_CONCAT(v0.c2)) ELSE vt0.c1 END))) UNION ALL SELECT ALL rt0.c1, vt0.c1, t0.c2, v0.c2, v0.c0, v0.c1, rt0.c3, rt0.c0, rt0.c2, t0.c0 FROM v0, t0, vt0 NATURAL JOIN rt0 GROUP BY rt0.c1, vt0.c1, t0.c2, v0.c2, v0.c0, v0.c1, rt0.c3, rt0.c0, rt0.c2, t0.c0 HAVING ((SUM(CASE MIN(t0.c2)  WHEN SUM(MIN(COUNT(*))) THEN GROUP_CONCAT(GROUP_CONCAT(v0.c2)) ELSE vt0.c1 END)) ISNULL);
SELECT ALL v0.c2 FROM v0, t0, vt0;
SELECT v0.c2 FROM v0, t0, vt0 WHERE ((((((('sh')OR(vt0.c0)))AND(t0.c2))) NOT BETWEEN ((vt0.c0 IN ())) AND (((v0.c0)==(v0.c2))))) UNION ALL SELECT v0.c2 FROM v0, t0, vt0 WHERE ((NOT ((((((('sh')OR(vt0.c0)))AND(t0.c2))) NOT BETWEEN ((vt0.c0 IN ())) AND (((v0.c0)=(v0.c2))))))) UNION ALL SELECT ALL v0.c2 FROM v0, t0, vt0 WHERE ((((((((('sh')OR(vt0.c0)))AND(t0.c2))) NOT BETWEEN ((vt0.c0 IN ())) AND (((v0.c0)=(v0.c2))))) ISNULL));
SELECT ALL v0.c2 FROM v0, t0, vt0;
SELECT DISTINCT v0.c1 FROM v0;
SELECT DISTINCT v0.c1 FROM v0 WHERE (((((v0.c1)AND(v0.c0)))>(((v0.c1) NOT NULL)))) UNION SELECT DISTINCT v0.c1 FROM v0 WHERE ((NOT (((((v0.c1)AND(v0.c0)))>(((v0.c1) NOT NULL)))))) UNION SELECT DISTINCT v0.c1 FROM v0 WHERE (((((((v0.c1)AND(v0.c0)))>(((v0.c1) NOT NULL)))) ISNULL));
SELECT DISTINCT v0.c1 FROM v0;
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0 WHERE (((vt0.c0) NOTNULL)) GROUP BY vt0.c1, vt0.c0 UNION SELECT ALL vt0.c1, vt0.c0 FROM vt0 WHERE ((NOT (((vt0.c0) NOTNULL)))) GROUP BY vt0.c1, vt0.c0 UNION SELECT vt0.c1, vt0.c0 FROM vt0 WHERE (((((vt0.c0) NOTNULL)) ISNULL)) GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT ALL v0.c2, rt0.c1, t0.c0, rt0.c4, rt0.c0, t0.c2, rt0.c2, v0.c0, rt0.c3, v0.c1 FROM v0, rt0 NATURAL JOIN t0 GROUP BY v0.c2, rt0.c1, t0.c0, rt0.c4, rt0.c0, t0.c2, rt0.c2, v0.c0, rt0.c3, v0.c1;
SELECT ALL v0.c2, rt0.c1, t0.c0, rt0.c4, rt0.c0, t0.c2, rt0.c2, v0.c0, rt0.c3, v0.c1 FROM v0, rt0 NATURAL JOIN t0 GROUP BY v0.c2, rt0.c1, t0.c0, rt0.c4, rt0.c0, t0.c2, rt0.c2, v0.c0, rt0.c3, v0.c1 HAVING ((TOTAL(MAX(MAX(rt0.c2)))) NOT BETWEEN (CASE x''  WHEN t0.c0 THEN SUM(AVG(t0.c2)) ELSE GROUP_CONCAT(rt0.c4) END) AND ((- (rt0.c2)))) UNION ALL SELECT v0.c2, rt0.c1, t0.c0, rt0.c4, rt0.c0, t0.c2, rt0.c2, v0.c0, rt0.c3, v0.c1 FROM v0, rt0 NATURAL JOIN t0 GROUP BY v0.c2, rt0.c1, t0.c0, rt0.c4, rt0.c0, t0.c2, rt0.c2, v0.c0, rt0.c3, v0.c1 HAVING (NOT (((TOTAL(MAX(MAX(rt0.c2)))) NOT BETWEEN (CASE x''  WHEN t0.c0 THEN SUM(AVG(t0.c2)) ELSE GROUP_CONCAT(rt0.c4) END) AND ((- (rt0.c2)))))) UNION ALL SELECT v0.c2, rt0.c1, t0.c0, rt0.c4, rt0.c0, t0.c2, rt0.c2, v0.c0, rt0.c3, v0.c1 FROM v0, rt0 NATURAL JOIN t0 GROUP BY v0.c2, rt0.c1, t0.c0, rt0.c4, rt0.c0, t0.c2, rt0.c2, v0.c0, rt0.c3, v0.c1 HAVING ((((TOTAL(MAX(MAX(rt0.c2)))) NOT BETWEEN (CASE x''  WHEN t0.c0 THEN SUM(AVG(t0.c2)) ELSE GROUP_CONCAT(rt0.c4) END) AND ((- (rt0.c2))))) ISNULL);
SELECT ALL MAX(((rt0.c2)>=(rt0.c2)) COLLATE BINARY) FROM rt0, vt0;
SELECT * FROM v0;
SELECT ALL * FROM v0 WHERE (v0.c1) UNION ALL SELECT * FROM v0 WHERE ((NOT (v0.c1))) UNION ALL SELECT ALL * FROM v0 WHERE (((v0.c1) ISNULL));
SELECT * FROM v0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE ((+ (((((v0.c2)AND(v0.c1)))OR(v0.c0))))) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT ((+ (((((v0.c2)AND(v0.c1)))OR(v0.c0))))))) UNION SELECT DISTINCT * FROM v0 WHERE ((((+ (((((v0.c2)AND(v0.c1)))OR(v0.c0))))) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT t0.c2, t0.c0, vt0.c0, vt0.c1 FROM vt0, t0 GROUP BY t0.c2, t0.c0, vt0.c0, vt0.c1;
SELECT ALL t0.c2, t0.c0, vt0.c0, vt0.c1 FROM vt0, t0 WHERE (CASE (((t0.c2))==((vt0.c1)))  WHEN CASE WHEN vt0.c1 THEN vt0.c0 ELSE t0.c0 END THEN (((vt0.c1, t0.c2, t0.c0))<((t0.c0, t0.c2, '688936021'))) END) GROUP BY t0.c2, t0.c0, vt0.c0, vt0.c1 UNION SELECT ALL t0.c2, t0.c0, vt0.c0, vt0.c1 FROM vt0, t0 WHERE ((NOT (CASE (((t0.c2))==((vt0.c1)))  WHEN CASE WHEN vt0.c1 THEN vt0.c0 ELSE t0.c0 END THEN (((vt0.c1, t0.c2, t0.c0))<((t0.c0, t0.c2, '688936021'))) END))) GROUP BY t0.c2, t0.c0, vt0.c0, vt0.c1 UNION SELECT ALL t0.c2, t0.c0, vt0.c0, vt0.c1 FROM vt0, t0 WHERE (((CASE (((t0.c2))==((vt0.c1)))  WHEN CASE WHEN vt0.c1 THEN vt0.c0 ELSE t0.c0 END THEN (((vt0.c1, t0.c2, t0.c0))<((t0.c0, t0.c2, '688936021'))) END) ISNULL)) GROUP BY t0.c2, t0.c0, vt0.c0, vt0.c1;
SELECT t0.c2, t0.c0, vt0.c0, vt0.c1 FROM vt0, t0 GROUP BY t0.c2, t0.c0, vt0.c0, vt0.c1;
SELECT v0.c2, v0.c0 FROM v0 GROUP BY v0.c2, v0.c0;
SELECT ALL v0.c2, v0.c0 FROM v0 GROUP BY v0.c2, v0.c0 HAVING ((((GROUP_CONCAT(v0.c1))AND(v0.c1)))AND(AVG(v0.c2))) UNION ALL SELECT v0.c2, v0.c0 FROM v0 GROUP BY v0.c2, v0.c0 HAVING (NOT (((((GROUP_CONCAT(v0.c1))AND(v0.c1)))AND(AVG(v0.c2))))) UNION ALL SELECT ALL v0.c2, v0.c0 FROM v0 GROUP BY v0.c2, v0.c0 HAVING ((((((GROUP_CONCAT(v0.c1))AND(v0.c1)))AND(AVG(v0.c2)))) ISNULL);
SELECT v0.c2, v0.c0 FROM v0 GROUP BY v0.c2, v0.c0;
SELECT ALL v0.c2, v0.c0 FROM v0 GROUP BY v0.c2, v0.c0 HAVING ((((GROUP_CONCAT(v0.c1))AND(v0.c1)))AND(AVG(v0.c2))) UNION ALL SELECT v0.c2, v0.c0 FROM v0 GROUP BY v0.c2, v0.c0 HAVING (NOT (((((GROUP_CONCAT(v0.c1))AND(v0.c1)))AND(AVG(v0.c2))))) UNION ALL SELECT ALL v0.c2, v0.c0 FROM v0 GROUP BY v0.c2, v0.c0 HAVING ((((((GROUP_CONCAT(v0.c1))AND(v0.c1)))AND(AVG(v0.c2)))) ISNULL);
SELECT v0.c2, v0.c0 FROM v0 GROUP BY v0.c2, v0.c0;
SELECT ALL * FROM vt0;
SELECT * FROM vt0 WHERE (CASE CAST(NULL AS INTEGER)  WHEN vt0.c1 THEN vt0.c0 END) UNION ALL SELECT * FROM vt0 NOT INDEXED WHERE ((NOT (CASE CAST(NULL AS INTEGER)  WHEN vt0.c1 THEN vt0.c0 END))) UNION ALL SELECT ALL * FROM vt0 WHERE (((CASE CAST(NULL AS INTEGER)  WHEN vt0.c1 THEN vt0.c0 END) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT * FROM vt0, rt0, v0;
SELECT DISTINCT * FROM vt0, rt0, v0 WHERE (((((rt0.c1) NOT NULL))+(rt0.c4 COLLATE NOCASE))) UNION SELECT DISTINCT * FROM vt0, rt0, v0 WHERE ((NOT (((((rt0.c1) NOT NULL))+(rt0.c4 COLLATE NOCASE))))) UNION SELECT DISTINCT * FROM vt0, rt0 NOT INDEXED, v0 WHERE (((((((rt0.c1) NOT NULL))+(rt0.c4 COLLATE NOCASE))) ISNULL));
SELECT DISTINCT * FROM vt0, rt0, v0;
SELECT v0.c0, v0.c2 FROM v0 GROUP BY v0.c0, v0.c2;
SELECT v0.c0, v0.c2 FROM v0 WHERE (((((((v0.c0)OR('')))OR(v0.c1))) NOT BETWEEN (((((((((((((v0.c2)AND(v0.c2)))OR(v0.c1)))AND(v0.c2)))AND(v0.c2)))OR('-1660076632')))AND(v0.c2))) AND ('-155198399'))) GROUP BY v0.c0, v0.c2 UNION SELECT v0.c0, v0.c2 FROM v0 WHERE ((NOT (((((((v0.c0)OR('')))OR(v0.c1))) NOT BETWEEN (((((((((((((v0.c2)AND(v0.c2)))OR(v0.c1)))AND(v0.c2)))AND(v0.c2)))OR('-1660076632')))AND(v0.c2))) AND ('-155198399'))))) GROUP BY v0.c0, v0.c2 UNION SELECT v0.c0, v0.c2 FROM v0 WHERE (((((((((v0.c0)OR('')))OR(v0.c1))) NOT BETWEEN (((((((((((((v0.c2)AND(v0.c2)))OR(v0.c1)))AND(v0.c2)))AND(v0.c2)))OR('-1660076632')))AND(v0.c2))) AND ('-155198399'))) ISNULL)) GROUP BY v0.c0, v0.c2;
SELECT v0.c0, v0.c2 FROM v0 GROUP BY v0.c0, v0.c2;
SELECT t0.c2 FROM vt0, t0 GROUP BY t0.c2;
SELECT ALL t0.c2 FROM vt0, t0 GROUP BY t0.c2 HAVING COUNT(*) UNION ALL SELECT t0.c2 FROM vt0, t0 GROUP BY t0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL t0.c2 FROM vt0, t0 GROUP BY t0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT t0.c2 FROM vt0, t0 GROUP BY t0.c2;
SELECT ALL t0.c2 FROM vt0, t0 GROUP BY t0.c2 HAVING COUNT(*) UNION ALL SELECT t0.c2 FROM vt0, t0 GROUP BY t0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL t0.c2 FROM vt0, t0 GROUP BY t0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT t0.c2 FROM vt0, t0 GROUP BY t0.c2;
SELECT ALL rt0.c0, rt0.c1, vt0.c1, rt0.c4, t0.c2, rt0.c2 FROM t0 INNER JOIN vt0 ON (((((rt0.c0))=(('-1823185677')))) NOT BETWEEN (rt0.c0) AND (json_insert(vt0.c1, rt0.c2, t0.c0))) LEFT OUTER JOIN rt0 ON (((((rt0.c3 IN ()))AND(t0.c2 COLLATE NOCASE)))OR((vt0.c0 IN ())));
SELECT rt0.c0, rt0.c1, vt0.c1, rt0.c4, t0.c2, rt0.c2 FROM t0 INNER JOIN vt0 ON (((((rt0.c0))=(('-1823185677')))) NOT BETWEEN (rt0.c0) AND (json_insert(vt0.c1, rt0.c2, t0.c0))) LEFT OUTER JOIN rt0 ON (((((rt0.c3 IN ()))AND(t0.c2 COLLATE NOCASE)))OR((vt0.c0 IN ()))) WHERE (rt0.c4) UNION ALL SELECT rt0.c0, rt0.c1, vt0.c1, rt0.c4, t0.c2, rt0.c2 FROM t0 INNER JOIN vt0 ON (((((rt0.c0))=(('-1823185677')))) NOT BETWEEN (rt0.c0) AND (json_insert(vt0.c1, rt0.c2, t0.c0))) LEFT OUTER JOIN rt0 ON (((((rt0.c3 IN ()))AND(t0.c2 COLLATE NOCASE)))OR((vt0.c0 IN ()))) WHERE ((NOT (rt0.c4))) UNION ALL SELECT ALL rt0.c0, rt0.c1, vt0.c1, rt0.c4, t0.c2, rt0.c2 FROM t0 INNER JOIN vt0 ON (((((rt0.c0))==(('-1823185677')))) NOT BETWEEN (rt0.c0) AND (json_insert(vt0.c1, rt0.c2, t0.c0))) LEFT OUTER JOIN rt0 ON (((((rt0.c3 IN ()))AND(t0.c2 COLLATE NOCASE)))OR((vt0.c0 IN ()))) WHERE (((rt0.c4) ISNULL));
SELECT ALL rt0.c0, rt0.c1, vt0.c1, rt0.c4, t0.c2, rt0.c2 FROM t0 INNER JOIN vt0 ON (((((rt0.c0))=(('-1823185677')))) NOT BETWEEN (rt0.c0) AND (json_insert(vt0.c1, rt0.c2, t0.c0))) LEFT OUTER JOIN rt0 ON (((((rt0.c3 IN ()))AND(t0.c2 COLLATE NOCASE)))OR((vt0.c0 IN ())));
SELECT DISTINCT rt0.c1, rt0.c4, t0.c0, t0.c2, rt0.c3, v0.c0 FROM t0, rt0, v0 NOT INDEXED, vt0;
SELECT DISTINCT rt0.c1, rt0.c4, t0.c0, t0.c2, rt0.c3, v0.c0 FROM t0, rt0, v0, vt0 WHERE (NULL) UNION SELECT DISTINCT rt0.c1, rt0.c4, t0.c0, t0.c2, rt0.c3, v0.c0 FROM t0, rt0, v0, vt0 WHERE ((NOT (NULL))) UNION SELECT DISTINCT rt0.c1, rt0.c4, t0.c0, t0.c2, rt0.c3, v0.c0 FROM t0, rt0, v0, vt0 WHERE (((NULL) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c4, t0.c0, t0.c2, rt0.c3, v0.c0 FROM t0, rt0, v0 NOT INDEXED, vt0;
SELECT ALL rt0.c1, v0.c2, vt0.c0, v0.c1, rt0.c0 FROM vt0, v0, rt0 GROUP BY rt0.c1, v0.c2, vt0.c0, v0.c1, rt0.c0;
SELECT rt0.c1, v0.c2, vt0.c0, v0.c1, rt0.c0 FROM vt0, v0, rt0 WHERE (CASE WHEN (((rt0.c4, v0.c0, rt0.c3))<=((rt0.c0, rt0.c0, v0.c2))) THEN ((v0.c2)<(v0.c2)) ELSE (rt0.c3 IN ()) END) GROUP BY rt0.c1, v0.c2, vt0.c0, v0.c1, rt0.c0 UNION SELECT rt0.c1, v0.c2, vt0.c0, v0.c1, rt0.c0 FROM vt0, v0, rt0 WHERE ((NOT (CASE WHEN (((rt0.c4, v0.c0, rt0.c3))<=((rt0.c0, rt0.c0, v0.c2))) THEN ((v0.c2)<(v0.c2)) ELSE (rt0.c3 IN ()) END))) GROUP BY rt0.c1, v0.c2, vt0.c0, v0.c1, rt0.c0 UNION SELECT rt0.c1, v0.c2, vt0.c0, v0.c1, rt0.c0 FROM vt0, v0, rt0 WHERE (((CASE WHEN (((rt0.c4, v0.c0, rt0.c3))<=((rt0.c0, rt0.c0, v0.c2))) THEN ((v0.c2)<(v0.c2)) ELSE (rt0.c3 IN ()) END) ISNULL)) GROUP BY rt0.c1, v0.c2, vt0.c0, v0.c1, rt0.c0;
SELECT ALL rt0.c1, v0.c2, vt0.c0, v0.c1, rt0.c0 FROM vt0, v0, rt0 GROUP BY rt0.c1, v0.c2, vt0.c0, v0.c1, rt0.c0;
SELECT ALL vt0.c1, v0.c1, vt0.c0, v0.c2 FROM v0, vt0, rt0 GROUP BY vt0.c1, v0.c1, vt0.c0, v0.c2;
SELECT vt0.c1, v0.c1, vt0.c0, v0.c2 FROM v0, vt0, rt0 GROUP BY vt0.c1, v0.c1, vt0.c0, v0.c2 HAVING TOTAL(TOTAL(MAX(MAX(TOTAL(rt0.c0))))) UNION ALL SELECT vt0.c1, v0.c1, vt0.c0, v0.c2 FROM v0, vt0, rt0 GROUP BY vt0.c1, v0.c1, vt0.c0, v0.c2 HAVING (NOT (TOTAL(TOTAL(MAX(MAX(TOTAL(rt0.c0))))))) UNION ALL SELECT ALL vt0.c1, v0.c1, vt0.c0, v0.c2 FROM v0, vt0, rt0 GROUP BY vt0.c1, v0.c1, vt0.c0, v0.c2 HAVING ((TOTAL(TOTAL(MAX(MAX(TOTAL(rt0.c0)))))) ISNULL);
SELECT ALL * FROM v0, rt0, vt0, t0;
SELECT * FROM v0, rt0, vt0, t0 WHERE (((v0.c2)IS NOT(CASE WHEN v0.c0 THEN -1247908677 END))) UNION ALL SELECT * FROM v0, rt0, vt0, t0 WHERE ((NOT (((v0.c2)IS NOT(CASE WHEN v0.c0 THEN -1247908677 END))))) UNION ALL SELECT ALL * FROM v0, rt0, vt0, t0 WHERE (((((v0.c2)IS NOT(CASE WHEN v0.c0 THEN -1247908677 END))) ISNULL));
SELECT ALL * FROM v0, rt0, vt0, t0;
SELECT DISTINCT * FROM t0 RIGHT OUTER JOIN rt0 ON ((CASE WHEN rt0.c1 THEN t0.c0 END) NOT NULL);
SELECT DISTINCT * FROM t0 RIGHT OUTER JOIN rt0 ON ((CASE WHEN rt0.c1 THEN t0.c0 END) NOT NULL) WHERE (((TIME(rt0.c0, NULL, rt0.c4)) BETWEEN (rt0.c2) AND (COALESCE(DISTINCT rt0.c0, rt0.c0)))) UNION SELECT DISTINCT * FROM t0 RIGHT OUTER JOIN rt0 ON ((CASE WHEN rt0.c1 THEN t0.c0 END) NOT NULL) WHERE ((NOT (((TIME(rt0.c0, NULL, rt0.c4)) BETWEEN (rt0.c2) AND (COALESCE(DISTINCT rt0.c0, rt0.c0)))))) UNION SELECT DISTINCT * FROM t0 RIGHT OUTER JOIN rt0 ON ((CASE WHEN rt0.c1 THEN t0.c0 END) NOT NULL) WHERE (((((TIME(rt0.c0, NULL, rt0.c4)) BETWEEN (rt0.c2) AND (COALESCE(DISTINCT rt0.c0, rt0.c0)))) ISNULL));
SELECT DISTINCT * FROM t0 RIGHT OUTER JOIN rt0 ON ((CASE WHEN rt0.c1 THEN t0.c0 END) NOT NULL);
SELECT rt0.c1, rt0.c0, v0.c1, t0.c2, vt0.c1, v0.c2 FROM t0, vt0, rt0, v0 GROUP BY rt0.c1, rt0.c0, v0.c1, t0.c2, vt0.c1, v0.c2;
SELECT ALL rt0.c1, rt0.c0, v0.c1, t0.c2, vt0.c1, v0.c2 FROM t0, vt0, rt0, v0 WHERE (((((x'fb19')OR(((((((((rt0.c2)OR(vt0.c1)))OR(v0.c0)))OR(rt0.c1)))OR(NULL)))))AND(0.21959660465884434))) GROUP BY rt0.c1, rt0.c0, v0.c1, t0.c2, vt0.c1, v0.c2 UNION SELECT rt0.c1, rt0.c0, v0.c1, t0.c2, vt0.c1, v0.c2 FROM t0, vt0, rt0, v0 WHERE ((NOT (((((x'fb19')OR(((((((((rt0.c2)OR(vt0.c1)))OR(v0.c0)))OR(rt0.c1)))OR(NULL)))))AND(0.21959660465884434))))) GROUP BY rt0.c1, rt0.c0, v0.c1, t0.c2, vt0.c1, v0.c2 UNION SELECT ALL rt0.c1, rt0.c0, v0.c1, t0.c2, vt0.c1, v0.c2 FROM t0, vt0, rt0, v0 WHERE (((((((x'fb19')OR(((((((((rt0.c2)OR(vt0.c1)))OR(v0.c0)))OR(rt0.c1)))OR(NULL)))))AND(0.21959660465884434))) ISNULL)) GROUP BY rt0.c1, rt0.c0, v0.c1, t0.c2, vt0.c1, v0.c2;
SELECT rt0.c1, rt0.c0, v0.c1, t0.c2, vt0.c1, v0.c2 FROM t0, vt0, rt0, v0 GROUP BY rt0.c1, rt0.c0, v0.c1, t0.c2, vt0.c1, v0.c2;
SELECT rt0.c0, rt0.c4, rt0.c3 FROM rt0 GROUP BY rt0.c0, rt0.c4, rt0.c3;
SELECT ALL rt0.c0, rt0.c4, rt0.c3 FROM rt0 GROUP BY rt0.c0, rt0.c4, rt0.c3 HAVING '1897512416' UNION ALL SELECT rt0.c0, rt0.c4, rt0.c3 FROM rt0 GROUP BY rt0.c0, rt0.c4, rt0.c3 HAVING (NOT ('1897512416')) UNION ALL SELECT ALL rt0.c0, rt0.c4, rt0.c3 FROM rt0 GROUP BY rt0.c0, rt0.c4, rt0.c3 HAVING (('1897512416') ISNULL);
SELECT rt0.c0, rt0.c4, rt0.c3 FROM rt0 GROUP BY rt0.c0, rt0.c4, rt0.c3;
SELECT ALL rt0.c0, rt0.c4, rt0.c3 FROM rt0 GROUP BY rt0.c0, rt0.c4, rt0.c3 HAVING '1897512416' UNION ALL SELECT rt0.c0, rt0.c4, rt0.c3 FROM rt0 GROUP BY rt0.c0, rt0.c4, rt0.c3 HAVING (NOT ('1897512416')) UNION ALL SELECT ALL rt0.c0, rt0.c4, rt0.c3 FROM rt0 GROUP BY rt0.c0, rt0.c4, rt0.c3 HAVING (('1897512416') ISNULL);
SELECT rt0.c0, rt0.c4, rt0.c3 FROM rt0 GROUP BY rt0.c0, rt0.c4, rt0.c3;
SELECT rt0.c4, rt0.c1 FROM v0, rt0;
SELECT rt0.c4, rt0.c1 FROM v0, rt0 WHERE (((v0.c2) IS FALSE) COLLATE RTRIM) UNION ALL SELECT rt0.c4, rt0.c1 FROM v0, rt0 WHERE ((NOT (((v0.c2) IS FALSE) COLLATE RTRIM))) UNION ALL SELECT rt0.c4, rt0.c1 FROM v0, rt0 WHERE (((((v0.c2) IS FALSE) COLLATE RTRIM) ISNULL));
SELECT rt0.c4, rt0.c1 FROM v0, rt0;
SELECT DISTINCT * FROM vt0 FULL OUTER JOIN rt0 ON ((((vt0.c1 COLLATE RTRIM)AND(((vt0.c1)*(vt0.c0)))))AND((rt0.c2 IN (rt0.c2))));
SELECT DISTINCT * FROM vt0 FULL OUTER JOIN rt0 ON ((((vt0.c1 COLLATE RTRIM)AND(((vt0.c1)*(vt0.c0)))))AND((rt0.c2 IN (rt0.c2)))) WHERE ((('-640370485') NOT BETWEEN (((((((((vt0.c0)AND(rt0.c3)))OR(rt0.c1)))OR(vt0.c0)))AND('0.7727982339540868'))) AND (vt0.c1 COLLATE RTRIM))) UNION SELECT DISTINCT * FROM vt0 FULL OUTER JOIN rt0 ON ((((vt0.c1 COLLATE RTRIM)AND(((vt0.c1)*(vt0.c0)))))AND((rt0.c2 IN (rt0.c2)))) WHERE ((NOT ((('-640370485') NOT BETWEEN (((((((((vt0.c0)AND(rt0.c3)))OR(rt0.c1)))OR(vt0.c0)))AND('0.7727982339540868'))) AND (vt0.c1 COLLATE RTRIM))))) UNION SELECT DISTINCT * FROM vt0 FULL OUTER JOIN rt0 ON ((((vt0.c1 COLLATE RTRIM)AND(((vt0.c1)*(vt0.c0)))))AND((rt0.c2 IN (rt0.c2)))) WHERE ((((('-640370485') NOT BETWEEN (((((((((vt0.c0)AND(rt0.c3)))OR(rt0.c1)))OR(vt0.c0)))AND('0.7727982339540868'))) AND (vt0.c1 COLLATE RTRIM))) ISNULL));
SELECT DISTINCT * FROM vt0 FULL OUTER JOIN rt0 ON ((((vt0.c1 COLLATE RTRIM)AND(((vt0.c1)*(vt0.c0)))))AND((rt0.c2 IN (rt0.c2))));
SELECT ALL t0.c0, t0.c2 FROM t0 GROUP BY t0.c0, t0.c2;
SELECT ALL t0.c0, t0.c2 FROM t0 WHERE (((((((((t0.c2)AND(((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))OR(t0.c2)))AND(t0.c2)))))OR((- (t0.c2)))))OR((- (t0.c0)))))OR(((t0.c2) IS FALSE)))) GROUP BY t0.c0, t0.c2 UNION SELECT t0.c0, t0.c2 FROM t0 WHERE ((NOT (((((((((t0.c2)AND(((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))OR(t0.c2)))AND(t0.c2)))))OR((- (t0.c2)))))OR((- (t0.c0)))))OR(((t0.c2) IS FALSE)))))) GROUP BY t0.c0, t0.c2 UNION SELECT ALL t0.c0, t0.c2 FROM t0 WHERE (((((((((((t0.c2)AND(((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))OR(t0.c2)))AND(t0.c2)))))OR((- (t0.c2)))))OR((- (t0.c0)))))OR(((t0.c2) IS FALSE)))) ISNULL)) GROUP BY t0.c0, t0.c2;
SELECT ALL t0.c0, t0.c2 FROM t0 GROUP BY t0.c0, t0.c2;
SELECT v0.c2, v0.c1, v0.c0 FROM v0 GROUP BY v0.c2, v0.c1, v0.c0;
SELECT ALL v0.c2, v0.c1, v0.c0 FROM v0 GROUP BY v0.c2, v0.c1, v0.c0 HAVING ((SUM(v0.c0)) ISNULL) UNION ALL SELECT ALL v0.c2, v0.c1, v0.c0 FROM v0 GROUP BY v0.c2, v0.c1, v0.c0 HAVING (NOT (((SUM(v0.c0)) ISNULL))) UNION ALL SELECT ALL v0.c2, v0.c1, v0.c0 FROM v0 GROUP BY v0.c2, v0.c1, v0.c0 HAVING ((((SUM(v0.c0)) ISNULL)) ISNULL);
SELECT v0.c2, v0.c1, v0.c0 FROM v0 GROUP BY v0.c2, v0.c1, v0.c0;
SELECT ALL v0.c2, v0.c1, v0.c0 FROM v0 GROUP BY v0.c2, v0.c1, v0.c0 HAVING ((SUM(v0.c0)) ISNULL) UNION ALL SELECT ALL v0.c2, v0.c1, v0.c0 FROM v0 GROUP BY v0.c2, v0.c1, v0.c0 HAVING (NOT (((SUM(v0.c0)) ISNULL))) UNION ALL SELECT ALL v0.c2, v0.c1, v0.c0 FROM v0 GROUP BY v0.c2, v0.c1, v0.c0 HAVING ((((SUM(v0.c0)) ISNULL)) ISNULL);
SELECT v0.c2, v0.c1, v0.c0 FROM v0 GROUP BY v0.c2, v0.c1, v0.c0;
SELECT ALL rt0.c3 FROM rt0, v0 RIGHT OUTER JOIN t0 ON -532042082;
SELECT ALL rt0.c3 FROM rt0, v0 RIGHT OUTER JOIN t0 ON -532042082 WHERE (((((t0.c0)<>(NULL))) IS FALSE)) UNION ALL SELECT rt0.c3 FROM rt0, v0 RIGHT OUTER JOIN t0 ON -532042082 WHERE ((NOT (((((t0.c0)<>(NULL))) IS FALSE)))) UNION ALL SELECT ALL rt0.c3 FROM rt0, v0 RIGHT OUTER JOIN t0 ON -532042082 WHERE (((((((t0.c0)!=(NULL))) IS FALSE)) ISNULL));
SELECT ALL rt0.c3 FROM rt0, v0 RIGHT OUTER JOIN t0 ON -532042082;
SELECT DISTINCT t0.c2 FROM t0;
SELECT DISTINCT t0.c2 FROM t0 WHERE (((((t0.c2) IS FALSE)) BETWEEN (CASE t0.c2  WHEN t0.c2 THEN t0.c2 END) AND (CAST('' AS BLOB)))) UNION SELECT DISTINCT t0.c2 FROM t0 WHERE ((NOT (((((t0.c2) IS FALSE)) BETWEEN (CASE t0.c2  WHEN t0.c2 THEN t0.c2 END) AND (CAST('' AS BLOB)))))) UNION SELECT DISTINCT t0.c2 FROM t0 WHERE (((((((t0.c2) IS FALSE)) BETWEEN (CASE t0.c2  WHEN t0.c2 THEN t0.c2 END) AND (CAST('' AS BLOB)))) ISNULL));
SELECT DISTINCT t0.c2 FROM t0;
SELECT rt0.c2, rt0.c4, rt0.c3, v0.c0, t0.c0, v0.c1, rt0.c1, t0.c2, rt0.c0, v0.c2 FROM rt0, v0, t0 GROUP BY rt0.c2, rt0.c4, rt0.c3, v0.c0, t0.c0, v0.c1, rt0.c1, t0.c2, rt0.c0, v0.c2;
SELECT ALL rt0.c2, rt0.c4, rt0.c3, v0.c0, t0.c0, v0.c1, rt0.c1, t0.c2, rt0.c0, v0.c2 FROM rt0, v0, t0 WHERE (TYPEOF(DISTINCT ((rt0.c1)<<(t0.c0)))) GROUP BY rt0.c2, rt0.c4, rt0.c3, v0.c0, t0.c0, v0.c1, rt0.c1, t0.c2, rt0.c0, v0.c2 UNION SELECT ALL rt0.c2, rt0.c4, rt0.c3, v0.c0, t0.c0, v0.c1, rt0.c1, t0.c2, rt0.c0, v0.c2 FROM rt0, v0, t0 WHERE ((NOT (TYPEOF(DISTINCT ((rt0.c1)<<(t0.c0)))))) GROUP BY rt0.c2, rt0.c4, rt0.c3, v0.c0, t0.c0, v0.c1, rt0.c1, t0.c2, rt0.c0, v0.c2 UNION SELECT ALL rt0.c2, rt0.c4, rt0.c3, v0.c0, t0.c0, v0.c1, rt0.c1, t0.c2, rt0.c0, v0.c2 FROM rt0, v0 NOT INDEXED, t0 WHERE (((TYPEOF(DISTINCT ((rt0.c1)<<(t0.c0)))) ISNULL)) GROUP BY rt0.c2, rt0.c4, rt0.c3, v0.c0, t0.c0, v0.c1, rt0.c1, t0.c2, rt0.c0, v0.c2;
SELECT rt0.c2, rt0.c4, rt0.c3, v0.c0, t0.c0, v0.c1, rt0.c1, t0.c2, rt0.c0, v0.c2 FROM rt0, v0, t0 GROUP BY rt0.c2, rt0.c4, rt0.c3, v0.c0, t0.c0, v0.c1, rt0.c1, t0.c2, rt0.c0, v0.c2;
SELECT ALL t0.c2, vt0.c0, v0.c2, t0.c0, v0.c0, v0.c1, vt0.c1 FROM v0, vt0, t0 GROUP BY t0.c2, vt0.c0, v0.c2, t0.c0, v0.c0, v0.c1, vt0.c1;
SELECT t0.c2, vt0.c0, v0.c2, t0.c0, v0.c0, v0.c1, vt0.c1 FROM v0, vt0, t0 GROUP BY t0.c2, vt0.c0, v0.c2, t0.c0, v0.c0, v0.c1, vt0.c1 HAVING AVG(MIN(COUNT(v0.c1))) UNION ALL SELECT ALL t0.c2, vt0.c0, v0.c2, t0.c0, v0.c0, v0.c1, vt0.c1 FROM v0, vt0, t0 GROUP BY t0.c2, vt0.c0, v0.c2, t0.c0, v0.c0, v0.c1, vt0.c1 HAVING (NOT (AVG(MIN(COUNT(v0.c1))))) UNION ALL SELECT ALL t0.c2, vt0.c0, v0.c2, t0.c0, v0.c0, v0.c1, vt0.c1 FROM v0, vt0, t0 GROUP BY t0.c2, vt0.c0, v0.c2, t0.c0, v0.c0, v0.c1, vt0.c1 HAVING ((AVG(MIN(COUNT(v0.c1)))) ISNULL);
SELECT ALL * FROM t0;
SELECT * FROM t0 WHERE (LIKE(((t0.c0) ISNULL), ((t0.c2) NOT BETWEEN (t0.c0) AND ('-949152156')), 't')) UNION ALL SELECT ALL * FROM t0 WHERE ((NOT (LIKE(((t0.c0) ISNULL), ((t0.c2) NOT BETWEEN (t0.c0) AND ('-949152156')), 't')))) UNION ALL SELECT ALL * FROM t0 WHERE (((LIKE(((t0.c0) ISNULL), ((t0.c2) NOT BETWEEN (t0.c0) AND ('-949152156')), 't')) ISNULL));
SELECT ALL * FROM t0;
SELECT DISTINCT v0.c2, v0.c1, v0.c0 FROM v0;
SELECT DISTINCT v0.c2, v0.c1, v0.c0 FROM v0 WHERE (CAST(((v0.c0)<=(v0.c0)) AS NUMERIC)) UNION SELECT DISTINCT v0.c2, v0.c1, v0.c0 FROM v0 WHERE ((NOT (CAST(((v0.c0)<=(v0.c0)) AS NUMERIC)))) UNION SELECT DISTINCT v0.c2, v0.c1, v0.c0 FROM v0 WHERE (((CAST(((v0.c0)<=(v0.c0)) AS NUMERIC)) ISNULL));
SELECT DISTINCT v0.c2, v0.c1, v0.c0 FROM v0;
SELECT t0.c0 FROM t0 FULL OUTER JOIN v0 ON (((((v0.c1 IN ()))AND(CASE t0.c0  WHEN t0.c2 THEN t0.c2 ELSE v0.c1 END)))AND(v0.c2 COLLATE BINARY)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 FULL OUTER JOIN v0 ON (((((v0.c1 IN ()))AND(CASE t0.c0  WHEN t0.c2 THEN t0.c2 ELSE v0.c1 END)))AND(v0.c2 COLLATE BINARY)) WHERE ((((((+ (t0.c2)))OR(CASE WHEN 3.84090347E8 THEN v0.c1 ELSE v0.c2 END)))AND((v0.c2 IN ())))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 FULL OUTER JOIN v0 ON (((((v0.c1 IN ()))AND(CASE t0.c0  WHEN t0.c2 THEN t0.c2 ELSE v0.c1 END)))AND(v0.c2 COLLATE BINARY)) WHERE ((NOT ((((((+ (t0.c2)))OR(CASE WHEN 3.84090347E8 THEN v0.c1 ELSE v0.c2 END)))AND((v0.c2 IN ())))))) GROUP BY t0.c0 UNION SELECT t0.c0 FROM t0 FULL OUTER JOIN v0 ON (((((v0.c1 IN ()))AND(CASE t0.c0  WHEN t0.c2 THEN t0.c2 ELSE v0.c1 END)))AND(v0.c2 COLLATE BINARY)) WHERE ((((((((+ (t0.c2)))OR(CASE WHEN 3.84090347E8 THEN v0.c1 ELSE v0.c2 END)))AND((v0.c2 IN ())))) ISNULL)) GROUP BY t0.c0;
SELECT t0.c0 FROM t0 FULL OUTER JOIN v0 ON (((((v0.c1 IN ()))AND(CASE t0.c0  WHEN t0.c2 THEN t0.c2 ELSE v0.c1 END)))AND(v0.c2 COLLATE BINARY)) GROUP BY t0.c0;
SELECT rt0.c3, rt0.c2, rt0.c0, vt0.c0, t0.c2 FROM rt0, vt0 INNER JOIN t0 ON (+ ((((x'')) NOT BETWEEN ((rt0.c3)) AND ((rt0.c4))))) GROUP BY rt0.c3, rt0.c2, rt0.c0, vt0.c0, t0.c2;
SELECT ALL rt0.c3, rt0.c2, rt0.c0, vt0.c0, t0.c2 FROM rt0, vt0 INNER JOIN t0 ON (+ ((((x'')) NOT BETWEEN ((rt0.c3)) AND ((rt0.c4))))) GROUP BY rt0.c3, rt0.c2, rt0.c0, vt0.c0, t0.c2 HAVING (~ (COUNT(*))) UNION ALL SELECT rt0.c3, rt0.c2, rt0.c0, vt0.c0, t0.c2 FROM rt0, vt0 INNER JOIN t0 ON (+ ((((x'')) NOT BETWEEN ((rt0.c3)) AND ((rt0.c4))))) GROUP BY rt0.c3, rt0.c2, rt0.c0, vt0.c0, t0.c2 HAVING (NOT ((~ (COUNT(*))))) UNION ALL SELECT rt0.c3, rt0.c2, rt0.c0, vt0.c0, t0.c2 FROM rt0, vt0 INNER JOIN t0 ON (+ ((((x'')) NOT BETWEEN ((rt0.c3)) AND ((rt0.c4))))) GROUP BY rt0.c3, rt0.c2, rt0.c0, vt0.c0, t0.c2 HAVING (((~ (COUNT(*)))) ISNULL);
SELECT rt0.c3, rt0.c2, rt0.c0, vt0.c0, t0.c2 FROM rt0, vt0 INNER JOIN t0 ON (+ ((((x'')) NOT BETWEEN ((rt0.c3)) AND ((rt0.c4))))) GROUP BY rt0.c3, rt0.c2, rt0.c0, vt0.c0, t0.c2;
SELECT ALL rt0.c3, rt0.c2, rt0.c0, vt0.c0, t0.c2 FROM rt0, vt0 INNER JOIN t0 ON (+ ((((x'')) NOT BETWEEN ((rt0.c3)) AND ((rt0.c4))))) GROUP BY rt0.c3, rt0.c2, rt0.c0, vt0.c0, t0.c2 HAVING (~ (COUNT(*))) UNION ALL SELECT rt0.c3, rt0.c2, rt0.c0, vt0.c0, t0.c2 FROM rt0, vt0 INNER JOIN t0 ON (+ ((((x'')) NOT BETWEEN ((rt0.c3)) AND ((rt0.c4))))) GROUP BY rt0.c3, rt0.c2, rt0.c0, vt0.c0, t0.c2 HAVING (NOT ((~ (COUNT(*))))) UNION ALL SELECT rt0.c3, rt0.c2, rt0.c0, vt0.c0, t0.c2 FROM rt0, vt0 INNER JOIN t0 ON (+ ((((x'')) NOT BETWEEN ((rt0.c3)) AND ((rt0.c4))))) GROUP BY rt0.c3, rt0.c2, rt0.c0, vt0.c0, t0.c2 HAVING (((~ (COUNT(*)))) ISNULL);
SELECT rt0.c3, rt0.c2, rt0.c0, vt0.c0, t0.c2 FROM rt0, vt0 INNER JOIN t0 ON (+ ((((x'')) NOT BETWEEN ((rt0.c3)) AND ((rt0.c4))))) GROUP BY rt0.c3, rt0.c2, rt0.c0, vt0.c0, t0.c2;
SELECT ALL t0.c2, vt0.c0, v0.c1 FROM rt0, t0, v0, vt0;
SELECT t0.c2, vt0.c0, v0.c1 FROM rt0, t0, v0, vt0 WHERE ((CAST(rt0.c2 AS INTEGER) IN ())) UNION ALL SELECT ALL t0.c2, vt0.c0, v0.c1 FROM rt0, t0, v0, vt0 WHERE ((NOT ((CAST(rt0.c2 AS INTEGER) IN ())))) UNION ALL SELECT ALL t0.c2, vt0.c0, v0.c1 FROM rt0, t0, v0, vt0 WHERE ((((CAST(rt0.c2 AS INTEGER) IN ())) ISNULL));
SELECT ALL t0.c2, vt0.c0, v0.c1 FROM rt0, t0, v0, vt0;
SELECT DISTINCT rt0.c0, v0.c1, rt0.c3, rt0.c4, v0.c2, rt0.c2, rt0.c1 FROM rt0 INNER JOIN v0 ON x'';
SELECT DISTINCT rt0.c0, v0.c1, rt0.c3, rt0.c4, v0.c2, rt0.c2, rt0.c1 FROM rt0 INNER JOIN v0 ON x'' WHERE (((CASE WHEN NULL THEN rt0.c0 ELSE x'' END)LIKE(v0.c1))) UNION SELECT DISTINCT rt0.c0, v0.c1, rt0.c3, rt0.c4, v0.c2, rt0.c2, rt0.c1 FROM rt0 INNER JOIN v0 ON x'' WHERE ((NOT (((CASE WHEN NULL THEN rt0.c0 ELSE x'' END)LIKE(v0.c1))))) UNION SELECT DISTINCT rt0.c0, v0.c1, rt0.c3, rt0.c4, v0.c2, rt0.c2, rt0.c1 FROM rt0 INNER JOIN v0 ON x'' WHERE (((((CASE WHEN NULL THEN rt0.c0 ELSE x'' END)LIKE(v0.c1))) ISNULL));
SELECT DISTINCT rt0.c0, v0.c1, rt0.c3, rt0.c4, v0.c2, rt0.c2, rt0.c1 FROM rt0 INNER JOIN v0 ON x'';
SELECT v0.c2 FROM v0 GROUP BY v0.c2;
SELECT v0.c2 FROM v0 WHERE ((((((~ ('-1562050674')))AND(((v0.c0) NOT BETWEEN (v0.c1) AND (v0.c1)))))AND(CAST(v0.c0 AS BLOB)))) GROUP BY v0.c2 UNION SELECT v0.c2 FROM v0 WHERE ((NOT ((((((~ ('-1562050674')))AND(((v0.c0) NOT BETWEEN (v0.c1) AND (v0.c1)))))AND(CAST(v0.c0 AS BLOB)))))) GROUP BY v0.c2 UNION SELECT ALL v0.c2 FROM v0 WHERE ((((((((~ ('-1562050674')))AND(((v0.c0) NOT BETWEEN (v0.c1) AND (v0.c1)))))AND(CAST(v0.c0 AS BLOB)))) ISNULL)) GROUP BY v0.c2;
SELECT v0.c2 FROM v0 GROUP BY v0.c2;
SELECT rt0.c3 FROM rt0, t0, v0, vt0 GROUP BY rt0.c3;
SELECT ALL rt0.c3 FROM rt0, t0, v0, vt0 GROUP BY rt0.c3 HAVING ((GROUP_CONCAT(rt0.c2) COLLATE BINARY)=(((AVG(COUNT(rt0.c4))) BETWEEN (MAX(COUNT(*))) AND (t0.c2)))) UNION ALL SELECT rt0.c3 FROM rt0, t0, v0, vt0 GROUP BY rt0.c3 HAVING (NOT (((GROUP_CONCAT(rt0.c2) COLLATE BINARY)==(((AVG(COUNT(rt0.c4))) BETWEEN (MAX(COUNT(*))) AND (t0.c2)))))) UNION ALL SELECT rt0.c3 FROM rt0, t0, v0, vt0 GROUP BY rt0.c3 HAVING ((((GROUP_CONCAT(rt0.c2) COLLATE BINARY)==(((AVG(COUNT(rt0.c4))) BETWEEN (MAX(COUNT(*))) AND (t0.c2))))) ISNULL);
SELECT ALL v0.c2, v0.c1, v0.c0, t0.c0, rt0.c2, rt0.c1 FROM t0, v0, rt0;
SELECT v0.c2, v0.c1, v0.c0, t0.c0, rt0.c2, rt0.c1 FROM t0, v0, rt0 WHERE ((((v0.c2 IN ()))&(CASE WHEN t0.c2 THEN t0.c0 WHEN rt0.c4 THEN v0.c0 WHEN rt0.c3 THEN rt0.c3 END))) UNION ALL SELECT v0.c2, v0.c1, v0.c0, t0.c0, rt0.c2, rt0.c1 FROM t0, v0, rt0 WHERE ((NOT ((((v0.c2 IN ()))&(CASE WHEN t0.c2 THEN t0.c0 WHEN rt0.c4 THEN v0.c0 WHEN rt0.c3 THEN rt0.c3 END))))) UNION ALL SELECT ALL v0.c2, v0.c1, v0.c0, t0.c0, rt0.c2, rt0.c1 FROM t0, v0, rt0 WHERE ((((((v0.c2 IN ()))&(CASE WHEN t0.c2 THEN t0.c0 WHEN rt0.c4 THEN v0.c0 WHEN rt0.c3 THEN rt0.c3 END))) ISNULL));
SELECT ALL v0.c2, v0.c1, v0.c0, t0.c0, rt0.c2, rt0.c1 FROM t0, v0, rt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (CAST(vt0.c0 COLLATE NOCASE AS INTEGER)) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (CAST(vt0.c0 COLLATE NOCASE AS INTEGER)))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((CAST(vt0.c0 COLLATE NOCASE AS INTEGER)) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT v0.c1, v0.c0, v0.c2 FROM v0 GROUP BY v0.c1, v0.c0, v0.c2;
SELECT ALL v0.c1, v0.c0, v0.c2 FROM v0 WHERE ((((((v0.c2, v0.c2, v0.c0, v0.c1, v0.c0)) BETWEEN ((v0.c0, 0.23401255501048168, v0.c2, v0.c2, v0.c2)) AND ((v0.c1, v0.c2, v0.c1, v0.c2, v0.c0))))==(((v0.c2) NOT BETWEEN (v0.c0) AND (v0.c2))))) GROUP BY v0.c1, v0.c0, v0.c2 UNION SELECT v0.c1, v0.c0, v0.c2 FROM v0 WHERE ((NOT ((((((v0.c2, v0.c2, v0.c0, v0.c1, v0.c0)) BETWEEN ((v0.c0, 0.23401255501048168, v0.c2, v0.c2, v0.c2)) AND ((v0.c1, v0.c2, v0.c1, v0.c2, v0.c0))))==(((v0.c2) NOT BETWEEN (v0.c0) AND (v0.c2))))))) GROUP BY v0.c1, v0.c0, v0.c2 UNION SELECT ALL v0.c1, v0.c0, v0.c2 FROM v0 WHERE ((((((((v0.c2, v0.c2, v0.c0, v0.c1, v0.c0)) BETWEEN ((v0.c0, 0.23401255501048168, v0.c2, v0.c2, v0.c2)) AND ((v0.c1, v0.c2, v0.c1, v0.c2, v0.c0))))==(((v0.c2) NOT BETWEEN (v0.c0) AND (v0.c2))))) ISNULL)) GROUP BY v0.c1, v0.c0, v0.c2;
SELECT v0.c1, v0.c0, v0.c2 FROM v0 GROUP BY v0.c1, v0.c0, v0.c2;
SELECT ALL rt0.c1, rt0.c3 FROM rt0 INNER JOIN vt0 ON (((((rt0.c3 IN ()))AND(((((vt0.c0)OR(rt0.c2)))OR(v0.c0)))))OR(COALESCE(DISTINCT NULL, '-1792900039'))) LEFT OUTER JOIN v0 ON x'175c' GROUP BY rt0.c1, rt0.c3;
SELECT rt0.c1, rt0.c3 FROM rt0 INNER JOIN vt0 ON (((((rt0.c3 IN ()))AND(((((vt0.c0)OR(rt0.c2)))OR(v0.c0)))))OR(COALESCE(DISTINCT NULL, '-1792900039'))) LEFT OUTER JOIN v0 ON x'175c' GROUP BY rt0.c1, rt0.c3 HAVING MAX(COUNT(v0.c2)) UNION ALL SELECT rt0.c1, rt0.c3 FROM rt0 INNER JOIN vt0 ON (((((rt0.c3 IN ()))AND(((((vt0.c0)OR(rt0.c2)))OR(v0.c0)))))OR(COALESCE(DISTINCT NULL, '-1792900039'))) LEFT OUTER JOIN v0 ON x'175c' GROUP BY rt0.c1, rt0.c3 HAVING (NOT (MAX(COUNT(v0.c2)))) UNION ALL SELECT ALL rt0.c1, rt0.c3 FROM rt0 INNER JOIN vt0 ON (((((rt0.c3 IN ()))AND(((((vt0.c0)OR(rt0.c2)))OR(v0.c0)))))OR(COALESCE(DISTINCT NULL, '-1792900039'))) LEFT OUTER JOIN v0 ON x'175c' GROUP BY rt0.c1, rt0.c3 HAVING ((MAX(COUNT(v0.c2))) ISNULL);
SELECT ALL t0.c2, rt0.c1, t0.c0, rt0.c2, rt0.c3, rt0.c4, rt0.c0 FROM t0, rt0;
SELECT ALL t0.c2, rt0.c1, t0.c0, rt0.c2, rt0.c3, rt0.c4, rt0.c0 FROM t0, rt0 WHERE ((t0.c2 IN ()) COLLATE NOCASE) UNION ALL SELECT ALL t0.c2, rt0.c1, t0.c0, rt0.c2, rt0.c3, rt0.c4, rt0.c0 FROM t0, rt0 WHERE ((NOT ((t0.c2 IN ()) COLLATE NOCASE))) UNION ALL SELECT ALL t0.c2, rt0.c1, t0.c0, rt0.c2, rt0.c3, rt0.c4, rt0.c0 FROM t0, rt0 WHERE ((((t0.c2 IN ()) COLLATE NOCASE) ISNULL));
SELECT ALL t0.c2, rt0.c1, t0.c0, rt0.c2, rt0.c3, rt0.c4, rt0.c0 FROM t0, rt0;
SELECT DISTINCT * FROM vt0, rt0, t0;
SELECT DISTINCT * FROM vt0, rt0, t0 WHERE (rt0.c1) UNION SELECT DISTINCT * FROM vt0, rt0, t0 WHERE ((NOT (rt0.c1))) UNION SELECT DISTINCT * FROM vt0, rt0, t0 WHERE (((rt0.c1) ISNULL));
SELECT DISTINCT * FROM vt0, rt0, t0;
SELECT ALL rt0.c3, rt0.c1, rt0.c2, rt0.c0, rt0.c4 FROM rt0 GROUP BY rt0.c3, rt0.c1, rt0.c2, rt0.c0, rt0.c4;
SELECT rt0.c3, rt0.c1, rt0.c2, rt0.c0, rt0.c4 FROM rt0 WHERE (((CAST(rt0.c2 AS TEXT))>>(CASE WHEN rt0.c3 THEN rt0.c3 WHEN -382804220 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c3 END))) GROUP BY rt0.c3, rt0.c1, rt0.c2, rt0.c0, rt0.c4 UNION SELECT rt0.c3, rt0.c1, rt0.c2, rt0.c0, rt0.c4 FROM rt0 WHERE ((NOT (((CAST(rt0.c2 AS TEXT))>>(CASE WHEN rt0.c3 THEN rt0.c3 WHEN -382804220 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c3 END))))) GROUP BY rt0.c3, rt0.c1, rt0.c2, rt0.c0, rt0.c4 UNION SELECT ALL rt0.c3, rt0.c1, rt0.c2, rt0.c0, rt0.c4 FROM rt0 WHERE (((((CAST(rt0.c2 AS TEXT))>>(CASE WHEN rt0.c3 THEN rt0.c3 WHEN -382804220 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c3 END))) ISNULL)) GROUP BY rt0.c3, rt0.c1, rt0.c2, rt0.c0, rt0.c4;
SELECT ALL rt0.c3, rt0.c1, rt0.c2, rt0.c0, rt0.c4 FROM rt0 GROUP BY rt0.c3, rt0.c1, rt0.c2, rt0.c0, rt0.c4;
SELECT t0.c0, vt0.c1, vt0.c0 FROM t0, vt0 GROUP BY t0.c0, vt0.c1, vt0.c0;
SELECT t0.c0, vt0.c1, vt0.c0 FROM t0, vt0 GROUP BY t0.c0, vt0.c1, vt0.c0 HAVING COUNT(COUNT(t0.c2)) UNION ALL SELECT ALL t0.c0, vt0.c1, vt0.c0 FROM t0, vt0 GROUP BY t0.c0, vt0.c1, vt0.c0 HAVING (NOT (COUNT(COUNT(t0.c2)))) UNION ALL SELECT ALL t0.c0, vt0.c1, vt0.c0 FROM t0, vt0 GROUP BY t0.c0, vt0.c1, vt0.c0 HAVING ((COUNT(COUNT(t0.c2))) ISNULL);
SELECT ALL * FROM rt0, v0;
SELECT * FROM rt0, v0 WHERE (CASE WHEN (rt0.c1 IN (rt0.c3, -1228041391)) THEN (((rt0.c0)) BETWEEN ((v0.c1)) AND ((v0.c0))) WHEN ((rt0.c2)-(rt0.c3)) THEN ((rt0.c0) NOT BETWEEN (v0.c2) AND (v0.c0)) WHEN CAST(rt0.c2 AS TEXT) THEN (((1241329483, rt0.c2, rt0.c1)) BETWEEN ((v0.c0, x'', v0.c0)) AND ((rt0.c1, rt0.c2, rt0.c2))) END) UNION ALL SELECT ALL * FROM rt0, v0 WHERE ((NOT (CASE WHEN (rt0.c1 IN (rt0.c3, -1228041391)) THEN (((rt0.c0)) BETWEEN ((v0.c1)) AND ((v0.c0))) WHEN ((rt0.c2)-(rt0.c3)) THEN ((rt0.c0) NOT BETWEEN (v0.c2) AND (v0.c0)) WHEN CAST(rt0.c2 AS TEXT) THEN (((1241329483, rt0.c2, rt0.c1)) BETWEEN ((v0.c0, x'', v0.c0)) AND ((rt0.c1, rt0.c2, rt0.c2))) END))) UNION ALL SELECT * FROM rt0, v0 WHERE (((CASE WHEN (rt0.c1 IN (rt0.c3, -1228041391)) THEN (((rt0.c0)) BETWEEN ((v0.c1)) AND ((v0.c0))) WHEN ((rt0.c2)-(rt0.c3)) THEN ((rt0.c0) NOT BETWEEN (v0.c2) AND (v0.c0)) WHEN CAST(rt0.c2 AS TEXT) THEN (((1241329483, rt0.c2, rt0.c1)) BETWEEN ((v0.c0, x'', v0.c0)) AND ((rt0.c1, rt0.c2, rt0.c2))) END) ISNULL));
SELECT ALL * FROM rt0, v0;
SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2, rt0.c3, rt0.c4 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2, rt0.c3, rt0.c4 FROM rt0 WHERE ((CAST(rt0.c1 AS TEXT) IN ())) UNION SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2, rt0.c3, rt0.c4 FROM rt0 WHERE ((NOT ((CAST(rt0.c1 AS TEXT) IN ())))) UNION SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2, rt0.c3, rt0.c4 FROM rt0 WHERE ((((CAST(rt0.c1 AS TEXT) IN ())) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2, rt0.c3, rt0.c4 FROM rt0;
SELECT ALL v0.c2 FROM t0, v0, vt0 GROUP BY v0.c2;
SELECT v0.c2 FROM t0, v0, vt0 WHERE (((((((t0.c2)AND(t0.c0)))OR(t0.c2))) IS TRUE)) GROUP BY v0.c2 UNION SELECT ALL v0.c2 FROM t0, v0, vt0 WHERE ((NOT (((((((t0.c2)AND(t0.c0)))OR(t0.c2))) IS TRUE)))) GROUP BY v0.c2 UNION SELECT v0.c2 FROM t0, v0, vt0 WHERE (((((((((t0.c2)AND(t0.c0)))OR(t0.c2))) IS TRUE)) ISNULL)) GROUP BY v0.c2;
SELECT ALL v0.c2 FROM t0, v0, vt0 GROUP BY v0.c2;
SELECT ALL v0.c1, rt0.c0, rt0.c1, v0.c2, rt0.c2, rt0.c4 FROM v0, rt0 GROUP BY v0.c1, rt0.c0, rt0.c1, v0.c2, rt0.c2, rt0.c4;
SELECT ALL v0.c1, rt0.c0, rt0.c1, v0.c2, rt0.c2, rt0.c4 FROM v0, rt0 GROUP BY v0.c1, rt0.c0, rt0.c1, v0.c2, rt0.c2, rt0.c4 HAVING COUNT((((rt0.c0)) BETWEEN ((COUNT(*))) AND ((COUNT(*))))) UNION ALL SELECT v0.c1, rt0.c0, rt0.c1, v0.c2, rt0.c2, rt0.c4 FROM v0, rt0 GROUP BY v0.c1, rt0.c0, rt0.c1, v0.c2, rt0.c2, rt0.c4 HAVING (NOT (COUNT((((rt0.c0)) BETWEEN ((COUNT(*))) AND ((COUNT(*))))))) UNION ALL SELECT v0.c1, rt0.c0, rt0.c1, v0.c2, rt0.c2, rt0.c4 FROM v0, rt0 GROUP BY v0.c1, rt0.c0, rt0.c1, v0.c2, rt0.c2, rt0.c4 HAVING ((COUNT((((rt0.c0)) BETWEEN ((COUNT(*))) AND ((COUNT(*)))))) ISNULL);
SELECT ALL rt0.c4, v0.c0, rt0.c3 FROM rt0, v0 RIGHT OUTER JOIN vt0 ON (((vt0.c1) IS TRUE) IN ()) LEFT OUTER JOIN t0 ON ((CAST('-34756461' AS TEXT)) NOT NULL);
SELECT rt0.c4, v0.c0, rt0.c3 FROM rt0, v0 RIGHT OUTER JOIN vt0 ON (((vt0.c1) IS TRUE) IN ()) LEFT OUTER JOIN t0 ON ((CAST('-34756461' AS TEXT)) NOT NULL) WHERE (0.29323926761722685) UNION ALL SELECT rt0.c4, v0.c0, rt0.c3 FROM rt0, v0 RIGHT OUTER JOIN vt0 ON (((vt0.c1) IS TRUE) IN ()) LEFT OUTER JOIN t0 ON ((CAST('-34756461' AS TEXT)) NOT NULL) WHERE ((NOT (0.29323926761722685))) UNION ALL SELECT ALL rt0.c4, v0.c0, rt0.c3 FROM rt0, v0 RIGHT OUTER JOIN vt0 ON (((vt0.c1) IS TRUE) IN ()) LEFT OUTER JOIN t0 ON ((CAST('-34756461' AS TEXT)) NOT NULL) WHERE (((0.29323926761722685) ISNULL));
SELECT ALL rt0.c4, v0.c0, rt0.c3 FROM rt0, v0 RIGHT OUTER JOIN vt0 ON (((vt0.c1) IS TRUE) IN ()) LEFT OUTER JOIN t0 ON ((CAST('-34756461' AS TEXT)) NOT NULL);
SELECT DISTINCT t0.c2, vt0.c1 FROM vt0, t0;
SELECT DISTINCT t0.c2, vt0.c1 FROM vt0, t0 WHERE (x'') UNION SELECT DISTINCT t0.c2, vt0.c1 FROM vt0, t0 WHERE ((NOT (x''))) UNION SELECT DISTINCT t0.c2, vt0.c1 FROM vt0, t0 WHERE (((x'') ISNULL));
SELECT DISTINCT t0.c2, vt0.c1 FROM vt0, t0;
SELECT ALL v0.c1, v0.c2, v0.c0 FROM v0 GROUP BY v0.c1, v0.c2, v0.c0;
SELECT v0.c1, v0.c2, v0.c0 FROM v0 WHERE (((((((v0.c1)+(v0.c2)))OR(v0.c2 COLLATE BINARY)))AND(((((v0.c1)AND(v0.c2)))AND(''))))) GROUP BY v0.c1, v0.c2, v0.c0 UNION SELECT v0.c1, v0.c2, v0.c0 FROM v0 WHERE ((NOT (((((((v0.c1)+(v0.c2)))OR(v0.c2 COLLATE BINARY)))AND(((((v0.c1)AND(v0.c2)))AND(''))))))) GROUP BY v0.c1, v0.c2, v0.c0 UNION SELECT ALL v0.c1, v0.c2, v0.c0 FROM v0 WHERE (((((((((v0.c1)+(v0.c2)))OR(v0.c2 COLLATE BINARY)))AND(((((v0.c1)AND(v0.c2)))AND(''))))) ISNULL)) GROUP BY v0.c1, v0.c2, v0.c0;
SELECT ALL v0.c1, v0.c2, v0.c0 FROM v0 GROUP BY v0.c1, v0.c2, v0.c0;
SELECT ALL t0.c2, t0.c0 FROM t0 GROUP BY t0.c2, t0.c0;
SELECT t0.c2, t0.c0 FROM t0 GROUP BY t0.c2, t0.c0 HAVING COUNT(*) UNION ALL SELECT ALL t0.c2, t0.c0 FROM t0 GROUP BY t0.c2, t0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT t0.c2, t0.c0 FROM t0 GROUP BY t0.c2, t0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL t0.c2, t0.c0 FROM t0 GROUP BY t0.c2, t0.c0;
SELECT t0.c2, t0.c0 FROM t0 GROUP BY t0.c2, t0.c0 HAVING COUNT(*) UNION ALL SELECT ALL t0.c2, t0.c0 FROM t0 GROUP BY t0.c2, t0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT t0.c2, t0.c0 FROM t0 GROUP BY t0.c2, t0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL t0.c2, t0.c0 FROM t0 GROUP BY t0.c2, t0.c0;
SELECT * FROM t0;
SELECT * FROM t0 WHERE (t0.c0) UNION ALL SELECT ALL * FROM t0 WHERE ((NOT (t0.c0))) UNION ALL SELECT ALL * FROM t0 WHERE (((t0.c0) ISNULL));
SELECT * FROM t0;
SELECT DISTINCT * FROM v0, t0, vt0 NATURAL JOIN rt0;
SELECT DISTINCT * FROM v0, t0, vt0 NATURAL JOIN rt0 WHERE ((((((v0.c0))>((v0.c2)))) IS TRUE)) UNION SELECT DISTINCT * FROM v0, t0, vt0 NATURAL JOIN rt0 WHERE ((NOT ((((((v0.c0))>((v0.c2)))) IS TRUE)))) UNION SELECT DISTINCT * FROM v0, t0, vt0 NATURAL JOIN rt0 WHERE ((((((((v0.c0))>((v0.c2)))) IS TRUE)) ISNULL));
SELECT DISTINCT * FROM v0, t0, vt0 NATURAL JOIN rt0;
SELECT ALL t0.c2, vt0.c1, t0.c0 FROM v0, rt0, vt0 LEFT OUTER JOIN t0 ON (((x'', ((v0.c2)>=(vt0.c0)), x'' COLLATE NOCASE))<=((((rt0.c4)-(t0.c0)), ((rt0.c0)<=(vt0.c0)), ((((vt0.c0)AND(v0.c0)))OR('-509672184'))))) GROUP BY t0.c2, vt0.c1, t0.c0;
SELECT ALL t0.c2, vt0.c1, t0.c0 FROM v0, rt0, vt0 LEFT OUTER JOIN t0 ON (((x'', ((v0.c2)>=(vt0.c0)), x'' COLLATE NOCASE))<=((((rt0.c4)-(t0.c0)), ((rt0.c0)<=(vt0.c0)), ((((vt0.c0)AND(v0.c0)))OR('-509672184'))))) WHERE (0.9758298122116714) GROUP BY t0.c2, vt0.c1, t0.c0 UNION SELECT ALL t0.c2, vt0.c1, t0.c0 FROM v0, rt0, vt0 LEFT OUTER JOIN t0 ON (((x'', ((v0.c2)>=(vt0.c0)), x'' COLLATE NOCASE))<=((((rt0.c4)-(t0.c0)), ((rt0.c0)<=(vt0.c0)), ((((vt0.c0)AND(v0.c0)))OR('-509672184'))))) WHERE ((NOT (0.9758298122116714))) GROUP BY t0.c2, vt0.c1, t0.c0 UNION SELECT ALL t0.c2, vt0.c1, t0.c0 FROM v0, rt0, vt0 LEFT OUTER JOIN t0 ON (((x'', ((v0.c2)>=(vt0.c0)), x'' COLLATE NOCASE))<=((((rt0.c4)-(t0.c0)), ((rt0.c0)<=(vt0.c0)), ((((vt0.c0)AND(v0.c0)))OR('-509672184'))))) WHERE (((0.9758298122116714) ISNULL)) GROUP BY t0.c2, vt0.c1, t0.c0;
SELECT ALL t0.c2, vt0.c1, t0.c0 FROM v0, rt0, vt0 LEFT OUTER JOIN t0 ON (((x'', ((v0.c2)>=(vt0.c0)), x'' COLLATE NOCASE))<=((((rt0.c4)-(t0.c0)), ((rt0.c0)<=(vt0.c0)), ((((vt0.c0)AND(v0.c0)))OR('-509672184'))))) GROUP BY t0.c2, vt0.c1, t0.c0;
SELECT rt0.c1, rt0.c4, rt0.c0, rt0.c2, rt0.c3 FROM rt0 GROUP BY rt0.c1, rt0.c4, rt0.c0, rt0.c2, rt0.c3;
SELECT ALL rt0.c1, rt0.c4, rt0.c0, rt0.c2, rt0.c3 FROM rt0 GROUP BY rt0.c1, rt0.c4, rt0.c0, rt0.c2, rt0.c3 HAVING MAX(rt0.c3 COLLATE RTRIM) UNION ALL SELECT ALL rt0.c1, rt0.c4, rt0.c0, rt0.c2, rt0.c3 FROM rt0 GROUP BY rt0.c1, rt0.c4, rt0.c0, rt0.c2, rt0.c3 HAVING (NOT (MAX(rt0.c3 COLLATE RTRIM))) UNION ALL SELECT ALL rt0.c1, rt0.c4, rt0.c0, rt0.c2, rt0.c3 FROM rt0 GROUP BY rt0.c1, rt0.c4, rt0.c0, rt0.c2, rt0.c3 HAVING ((MAX(rt0.c3 COLLATE RTRIM)) ISNULL);
SELECT rt0.c1, rt0.c4, rt0.c0, rt0.c2, rt0.c3 FROM rt0 GROUP BY rt0.c1, rt0.c4, rt0.c0, rt0.c2, rt0.c3;
SELECT ALL rt0.c1, rt0.c4, rt0.c0, rt0.c2, rt0.c3 FROM rt0 GROUP BY rt0.c1, rt0.c4, rt0.c0, rt0.c2, rt0.c3 HAVING MAX(rt0.c3 COLLATE RTRIM) UNION ALL SELECT ALL rt0.c1, rt0.c4, rt0.c0, rt0.c2, rt0.c3 FROM rt0 GROUP BY rt0.c1, rt0.c4, rt0.c0, rt0.c2, rt0.c3 HAVING (NOT (MAX(rt0.c3 COLLATE RTRIM))) UNION ALL SELECT ALL rt0.c1, rt0.c4, rt0.c0, rt0.c2, rt0.c3 FROM rt0 GROUP BY rt0.c1, rt0.c4, rt0.c0, rt0.c2, rt0.c3 HAVING ((MAX(rt0.c3 COLLATE RTRIM)) ISNULL);
SELECT rt0.c1, rt0.c4, rt0.c0, rt0.c2, rt0.c3 FROM rt0 GROUP BY rt0.c1, rt0.c4, rt0.c0, rt0.c2, rt0.c3;
SELECT ALL SUM((+ (v0.c1))) FROM vt0, v0;
SELECT ALL rt0.c3, t0.c0, rt0.c4, vt0.c1, rt0.c2 FROM t0 INNER JOIN rt0 ON LTRIM(((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c1))) INNER JOIN vt0 ON CASE t0.c2  WHEN vt0.c1 THEN 0.14663159572540474 WHEN rt0.c4 THEN t0.c0 WHEN vt0.c0 THEN t0.c0 WHEN rt0.c2 THEN rt0.c4 WHEN rt0.c3 THEN x'' ELSE vt0.c1 END COLLATE NOCASE;
SELECT rt0.c3, t0.c0, rt0.c4, vt0.c1, rt0.c2 FROM t0 INNER JOIN rt0 ON LTRIM(((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c1))) INNER JOIN vt0 ON CASE t0.c2  WHEN vt0.c1 THEN 0.14663159572540474 WHEN rt0.c4 THEN t0.c0 WHEN vt0.c0 THEN t0.c0 WHEN rt0.c2 THEN rt0.c4 WHEN rt0.c3 THEN x'' ELSE vt0.c1 END COLLATE NOCASE WHERE ((NOT (NULL))) UNION ALL SELECT rt0.c3, t0.c0, rt0.c4, vt0.c1, rt0.c2 FROM t0 INNER JOIN rt0 ON LTRIM(((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c1))) INNER JOIN vt0 ON CASE t0.c2  WHEN vt0.c1 THEN 0.14663159572540474 WHEN rt0.c4 THEN t0.c0 WHEN vt0.c0 THEN t0.c0 WHEN rt0.c2 THEN rt0.c4 WHEN rt0.c3 THEN x'' ELSE vt0.c1 END COLLATE NOCASE WHERE ((NOT ((NOT (NULL))))) UNION ALL SELECT ALL rt0.c3, t0.c0, rt0.c4, vt0.c1, rt0.c2 FROM t0 INNER JOIN rt0 ON LTRIM(((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c1))) INNER JOIN vt0 ON CASE t0.c2  WHEN vt0.c1 THEN 0.14663159572540474 WHEN rt0.c4 THEN t0.c0 WHEN vt0.c0 THEN t0.c0 WHEN rt0.c2 THEN rt0.c4 WHEN rt0.c3 THEN x'' ELSE vt0.c1 END COLLATE NOCASE WHERE ((((NOT (NULL))) ISNULL));
SELECT ALL rt0.c3, t0.c0, rt0.c4, vt0.c1, rt0.c2 FROM t0 INNER JOIN rt0 ON LTRIM(((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c1))) INNER JOIN vt0 ON CASE t0.c2  WHEN vt0.c1 THEN 0.14663159572540474 WHEN rt0.c4 THEN t0.c0 WHEN vt0.c0 THEN t0.c0 WHEN rt0.c2 THEN rt0.c4 WHEN rt0.c3 THEN x'' ELSE vt0.c1 END COLLATE NOCASE;
SELECT DISTINCT v0.c1, rt0.c2, v0.c2, vt0.c1, v0.c0, t0.c0, vt0.c0, rt0.c4 FROM vt0, t0, v0, rt0;
SELECT DISTINCT v0.c1, rt0.c2, v0.c2, vt0.c1, v0.c0, t0.c0, vt0.c0, rt0.c4 FROM vt0, t0, v0, rt0 WHERE ((CAST(v0.c1 AS NUMERIC) IN ())) UNION SELECT DISTINCT v0.c1, rt0.c2, v0.c2, vt0.c1, v0.c0, t0.c0, vt0.c0, rt0.c4 FROM vt0, t0, v0, rt0 WHERE ((NOT ((CAST(v0.c1 AS NUMERIC) IN ())))) UNION SELECT DISTINCT v0.c1, rt0.c2, v0.c2, vt0.c1, v0.c0, t0.c0, vt0.c0, rt0.c4 FROM vt0, t0, v0, rt0 WHERE ((((CAST(v0.c1 AS NUMERIC) IN ())) ISNULL));
SELECT DISTINCT v0.c1, rt0.c2, v0.c2, vt0.c1, v0.c0, t0.c0, vt0.c0, rt0.c4 FROM vt0, t0, v0, rt0;
SELECT rt0.c4, rt0.c3, vt0.c1, rt0.c2, rt0.c1 FROM rt0, vt0 GROUP BY rt0.c4, rt0.c3, vt0.c1, rt0.c2, rt0.c1;
SELECT rt0.c4, rt0.c3, vt0.c1, rt0.c2, rt0.c1 FROM rt0, vt0 WHERE (MIN(CAST(rt0.c4 AS BLOB), ((rt0.c0) BETWEEN (rt0.c4) AND (rt0.c1)))) GROUP BY rt0.c4, rt0.c3, vt0.c1, rt0.c2, rt0.c1 UNION SELECT rt0.c4, rt0.c3, vt0.c1, rt0.c2, rt0.c1 FROM rt0, vt0 WHERE ((NOT (MIN(CAST(rt0.c4 AS BLOB), ((rt0.c0) BETWEEN (rt0.c4) AND (rt0.c1)))))) GROUP BY rt0.c4, rt0.c3, vt0.c1, rt0.c2, rt0.c1 UNION SELECT rt0.c4, rt0.c3, vt0.c1, rt0.c2, rt0.c1 FROM rt0, vt0 WHERE (((MIN(CAST(rt0.c4 AS BLOB), ((rt0.c0) BETWEEN (rt0.c4) AND (rt0.c1)))) ISNULL)) GROUP BY rt0.c4, rt0.c3, vt0.c1, rt0.c2, rt0.c1;
SELECT rt0.c4, rt0.c3, vt0.c1, rt0.c2, rt0.c1 FROM rt0, vt0 GROUP BY rt0.c4, rt0.c3, vt0.c1, rt0.c2, rt0.c1;
SELECT v0.c1, v0.c0, rt0.c3, v0.c2, rt0.c4 FROM rt0, t0, v0 GROUP BY v0.c1, v0.c0, rt0.c3, v0.c2, rt0.c4;
SELECT v0.c1, v0.c0, rt0.c3, v0.c2, rt0.c4 FROM rt0, t0, v0 GROUP BY v0.c1, v0.c0, rt0.c3, v0.c2, rt0.c4 HAVING (~ (((TOTAL(MIN(COUNT(COUNT(*))))) IS FALSE))) UNION ALL SELECT ALL v0.c1, v0.c0, rt0.c3, v0.c2, rt0.c4 FROM rt0, t0, v0 GROUP BY v0.c1, v0.c0, rt0.c3, v0.c2, rt0.c4 HAVING (NOT ((~ (((TOTAL(MIN(COUNT(COUNT(*))))) IS FALSE))))) UNION ALL SELECT v0.c1, v0.c0, rt0.c3, v0.c2, rt0.c4 FROM rt0, t0, v0 GROUP BY v0.c1, v0.c0, rt0.c3, v0.c2, rt0.c4 HAVING (((~ (((TOTAL(MIN(COUNT(COUNT(*))))) IS FALSE)))) ISNULL);
SELECT ALL rt0.c1, rt0.c2, t0.c0, t0.c2, rt0.c3, rt0.c4, rt0.c0 FROM t0, rt0;
SELECT ALL rt0.c1, rt0.c2, t0.c0, t0.c2, rt0.c3, rt0.c4, rt0.c0 FROM t0, rt0 WHERE ('') UNION ALL SELECT rt0.c1, rt0.c2, t0.c0, t0.c2, rt0.c3, rt0.c4, rt0.c0 FROM t0, rt0 WHERE ((NOT (''))) UNION ALL SELECT rt0.c1, rt0.c2, t0.c0, t0.c2, rt0.c3, rt0.c4, rt0.c0 FROM t0, rt0 WHERE ((('') ISNULL));
SELECT ALL rt0.c1, rt0.c2, t0.c0, t0.c2, rt0.c3, rt0.c4, rt0.c0 FROM t0, rt0;
SELECT DISTINCT rt0.c1, rt0.c2, rt0.c3 FROM rt0, v0;
SELECT DISTINCT rt0.c1, rt0.c2, rt0.c3 FROM rt0, v0 WHERE (CASE WHEN (((v0.c1, rt0.c4, v0.c2, v0.c0, v0.c2)) BETWEEN ((rt0.c4, rt0.c0, rt0.c4, rt0.c4, v0.c1)) AND ((rt0.c2, v0.c0, rt0.c3, v0.c2, v0.c2))) THEN '' WHEN ((((v0.c2)OR(v0.c2)))AND(v0.c0)) THEN (NOT (rt0.c3)) WHEN ((rt0.c2)OR(rt0.c4)) THEN CAST(v0.c1 AS REAL) ELSE ((((rt0.c4)AND(v0.c2)))OR(v0.c0)) END) UNION SELECT DISTINCT rt0.c1, rt0.c2, rt0.c3 FROM rt0, v0 WHERE ((NOT (CASE WHEN (((v0.c1, rt0.c4, v0.c2, v0.c0, v0.c2)) BETWEEN ((rt0.c4, rt0.c0, rt0.c4, rt0.c4, v0.c1)) AND ((rt0.c2, v0.c0, rt0.c3, v0.c2, v0.c2))) THEN '' WHEN ((((v0.c2)OR(v0.c2)))AND(v0.c0)) THEN (NOT (rt0.c3)) WHEN ((rt0.c2)OR(rt0.c4)) THEN CAST(v0.c1 AS REAL) ELSE ((((rt0.c4)AND(v0.c2)))OR(v0.c0)) END))) UNION SELECT DISTINCT rt0.c1, rt0.c2, rt0.c3 FROM rt0, v0 WHERE (((CASE WHEN (((v0.c1, rt0.c4, v0.c2, v0.c0, v0.c2)) BETWEEN ((rt0.c4, rt0.c0, rt0.c4, rt0.c4, v0.c1)) AND ((rt0.c2, v0.c0, rt0.c3, v0.c2, v0.c2))) THEN '' WHEN ((((v0.c2)OR(v0.c2)))AND(v0.c0)) THEN (NOT (rt0.c3)) WHEN ((rt0.c2)OR(rt0.c4)) THEN CAST(v0.c1 AS REAL) ELSE ((((rt0.c4)AND(v0.c2)))OR(v0.c0)) END) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c2, rt0.c3 FROM rt0, v0;
SELECT ALL t0.c0, v0.c2, rt0.c3, vt0.c1, rt0.c4 FROM vt0, t0, rt0 FULL OUTER JOIN v0 ON (((((v0.c1) NOT NULL)))<=((((rt0.c4)<<(NULL))))) GROUP BY t0.c0, v0.c2, rt0.c3, vt0.c1, rt0.c4;
SELECT ALL t0.c0, v0.c2, rt0.c3, vt0.c1, rt0.c4 FROM vt0, t0, rt0 FULL OUTER JOIN v0 ON (((((v0.c1) NOT NULL)))<=((((rt0.c4)<<(NULL))))) WHERE (((((v0.c1) BETWEEN (rt0.c2) AND ('-209405383')))%(((v0.c2) IS TRUE)))) GROUP BY t0.c0, v0.c2, rt0.c3, vt0.c1, rt0.c4 UNION SELECT t0.c0, v0.c2, rt0.c3, vt0.c1, rt0.c4 FROM vt0, t0, rt0 FULL OUTER JOIN v0 ON (((((v0.c1) NOT NULL)))<=((((rt0.c4)<<(NULL))))) WHERE ((NOT (((((v0.c1) BETWEEN (rt0.c2) AND ('-209405383')))%(((v0.c2) IS TRUE)))))) GROUP BY t0.c0, v0.c2, rt0.c3, vt0.c1, rt0.c4 UNION SELECT ALL t0.c0, v0.c2, rt0.c3, vt0.c1, rt0.c4 FROM vt0, t0, rt0 FULL OUTER JOIN v0 ON (((((v0.c1) NOT NULL)))<=((((rt0.c4)<<(NULL))))) WHERE (((((((v0.c1) BETWEEN (rt0.c2) AND ('-209405383')))%(((v0.c2) IS TRUE)))) ISNULL)) GROUP BY t0.c0, v0.c2, rt0.c3, vt0.c1, rt0.c4;
SELECT ALL t0.c0, v0.c2, rt0.c3, vt0.c1, rt0.c4 FROM vt0, t0, rt0 FULL OUTER JOIN v0 ON (((((v0.c1) NOT NULL)))<=((((rt0.c4)<<(NULL))))) GROUP BY t0.c0, v0.c2, rt0.c3, vt0.c1, rt0.c4;
SELECT ALL v0.c0 FROM vt0, rt0, t0 LEFT OUTER JOIN v0 ON LENGTH(((rt0.c0)||(NULL))) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM vt0, rt0, t0 LEFT OUTER JOIN v0 ON LENGTH(((rt0.c0)||(NULL))) GROUP BY v0.c0 HAVING ((((TOTAL(SUM(AVG(GROUP_CONCAT(AVG(v0.c1))))))+(AVG(t0.c0))))IS(CAST(NULL AS BLOB))) UNION ALL SELECT ALL v0.c0 FROM vt0, rt0, t0 LEFT OUTER JOIN v0 ON LENGTH(((rt0.c0)||(NULL))) GROUP BY v0.c0 HAVING (NOT (((((TOTAL(SUM(AVG(GROUP_CONCAT(AVG(v0.c1))))))+(AVG(t0.c0))))IS(CAST(NULL AS BLOB))))) UNION ALL SELECT v0.c0 FROM vt0, rt0, t0 LEFT OUTER JOIN v0 ON LENGTH(((rt0.c0)||(NULL))) GROUP BY v0.c0 HAVING ((((((TOTAL(SUM(AVG(GROUP_CONCAT(AVG(v0.c1))))))+(AVG(t0.c0))))IS(CAST(NULL AS BLOB)))) ISNULL);
SELECT MIN(json_array_length(((vt0.c1)<<(t0.c0)))) FROM vt0, rt0, t0;
SELECT ALL t0.c2, v0.c1, v0.c0 FROM t0, v0;
SELECT ALL t0.c2, v0.c1, v0.c0 FROM t0, v0 WHERE (v0.c1) UNION ALL SELECT ALL t0.c2, v0.c1, v0.c0 FROM t0, v0 WHERE ((NOT (v0.c1))) UNION ALL SELECT t0.c2, v0.c1, v0.c0 FROM t0, v0 WHERE (((v0.c1) ISNULL));
SELECT ALL t0.c2, v0.c1, v0.c0 FROM t0, v0;
SELECT DISTINCT t0.c2, t0.c0, vt0.c0 FROM vt0, t0;
SELECT DISTINCT t0.c2, t0.c0, vt0.c0 FROM vt0, t0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1))) BETWEEN (((t0.c0)/(''))) AND (CASE 0.5060144011032479  WHEN x'' THEN t0.c0 ELSE vt0.c0 END))) UNION SELECT DISTINCT t0.c2, t0.c0, vt0.c0 FROM vt0, t0 WHERE ((NOT (((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1))) BETWEEN (((t0.c0)/(''))) AND (CASE 0.5060144011032479  WHEN x'' THEN t0.c0 ELSE vt0.c0 END))))) UNION SELECT DISTINCT t0.c2, t0.c0, vt0.c0 FROM vt0, t0 WHERE (((((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1))) BETWEEN (((t0.c0)/(''))) AND (CASE 0.5060144011032479  WHEN x'' THEN t0.c0 ELSE vt0.c0 END))) ISNULL));
SELECT DISTINCT t0.c2, t0.c0, vt0.c0 FROM vt0, t0;
SELECT ALL vt0.c0, rt0.c2, rt0.c1, rt0.c0, rt0.c4, rt0.c3 FROM t0, rt0, vt0 GROUP BY vt0.c0, rt0.c2, rt0.c1, rt0.c0, rt0.c4, rt0.c3;
SELECT vt0.c0, rt0.c2, rt0.c1, rt0.c0, rt0.c4, rt0.c3 FROM t0, rt0, vt0 WHERE (((((((rt0.c0)AND(rt0.c2)))OR(rt0.c1))) BETWEEN (((((vt0.c0)AND(vt0.c1)))OR(rt0.c4))) AND (((((((((t0.c0)AND(rt0.c4)))OR(rt0.c3)))OR(rt0.c0)))OR(vt0.c1))))) GROUP BY vt0.c0, rt0.c2, rt0.c1, rt0.c0, rt0.c4, rt0.c3 UNION SELECT ALL vt0.c0, rt0.c2, rt0.c1, rt0.c0, rt0.c4, rt0.c3 FROM t0, rt0, vt0 WHERE ((NOT (((((((rt0.c0)AND(rt0.c2)))OR(rt0.c1))) BETWEEN (((((vt0.c0)AND(vt0.c1)))OR(rt0.c4))) AND (((((((((t0.c0)AND(rt0.c4)))OR(rt0.c3)))OR(rt0.c0)))OR(vt0.c1))))))) GROUP BY vt0.c0, rt0.c2, rt0.c1, rt0.c0, rt0.c4, rt0.c3 UNION SELECT ALL vt0.c0, rt0.c2, rt0.c1, rt0.c0, rt0.c4, rt0.c3 FROM t0, rt0, vt0 WHERE (((((((((rt0.c0)AND(rt0.c2)))OR(rt0.c1))) BETWEEN (((((vt0.c0)AND(vt0.c1)))OR(rt0.c4))) AND (((((((((t0.c0)AND(rt0.c4)))OR(rt0.c3)))OR(rt0.c0)))OR(vt0.c1))))) ISNULL)) GROUP BY vt0.c0, rt0.c2, rt0.c1, rt0.c0, rt0.c4, rt0.c3;
SELECT ALL vt0.c0, rt0.c2, rt0.c1, rt0.c0, rt0.c4, rt0.c3 FROM t0, rt0, vt0 GROUP BY vt0.c0, rt0.c2, rt0.c1, rt0.c0, rt0.c4, rt0.c3;
SELECT ALL rt0.c3, rt0.c2, v0.c0, v0.c2, vt0.c0, rt0.c0, rt0.c1, v0.c1, vt0.c1, rt0.c4 FROM v0, rt0, vt0 GROUP BY rt0.c3, rt0.c2, v0.c0, v0.c2, vt0.c0, rt0.c0, rt0.c1, v0.c1, vt0.c1, rt0.c4;
SELECT rt0.c3, rt0.c2, v0.c0, v0.c2, vt0.c0, rt0.c0, rt0.c1, v0.c1, vt0.c1, rt0.c4 FROM v0, rt0, vt0 GROUP BY rt0.c3, rt0.c2, v0.c0, v0.c2, vt0.c0, rt0.c0, rt0.c1, v0.c1, vt0.c1, rt0.c4 HAVING SUM(TOTAL(v0.c1)) UNION ALL SELECT rt0.c3, rt0.c2, v0.c0, v0.c2, vt0.c0, rt0.c0, rt0.c1, v0.c1, vt0.c1, rt0.c4 FROM v0, rt0, vt0 GROUP BY rt0.c3, rt0.c2, v0.c0, v0.c2, vt0.c0, rt0.c0, rt0.c1, v0.c1, vt0.c1, rt0.c4 HAVING (NOT (SUM(TOTAL(v0.c1)))) UNION ALL SELECT rt0.c3, rt0.c2, v0.c0, v0.c2, vt0.c0, rt0.c0, rt0.c1, v0.c1, vt0.c1, rt0.c4 FROM v0, rt0, vt0 GROUP BY rt0.c3, rt0.c2, v0.c0, v0.c2, vt0.c0, rt0.c0, rt0.c1, v0.c1, vt0.c1, rt0.c4 HAVING ((SUM(TOTAL(v0.c1))) ISNULL);
SELECT ALL t0.c0, t0.c2 FROM t0;
SELECT t0.c0, t0.c2 FROM t0 WHERE (((((CASE t0.c2  WHEN t0.c2 THEN t0.c2 ELSE t0.c0 END)AND(CASE WHEN t0.c2 THEN t0.c2 END)))OR(CASE WHEN t0.c0 THEN t0.c0 END))) UNION ALL SELECT t0.c0, t0.c2 FROM t0 WHERE ((NOT (((((CASE t0.c2  WHEN t0.c2 THEN t0.c2 ELSE t0.c0 END)AND(CASE WHEN t0.c2 THEN t0.c2 END)))OR(CASE WHEN t0.c0 THEN t0.c0 END))))) UNION ALL SELECT t0.c0, t0.c2 FROM t0 WHERE (((((((CASE t0.c2  WHEN t0.c2 THEN t0.c2 ELSE t0.c0 END)AND(CASE WHEN t0.c2 THEN t0.c2 END)))OR(CASE WHEN t0.c0 THEN t0.c0 END))) ISNULL));
SELECT ALL t0.c0, t0.c2 FROM t0;
SELECT DISTINCT t0.c0, vt0.c0, rt0.c1, t0.c2, vt0.c1, rt0.c4, v0.c2, rt0.c3, rt0.c2, v0.c1 FROM t0, v0, vt0, rt0 NOT INDEXED;
SELECT DISTINCT t0.c0, vt0.c0, rt0.c1, t0.c2, vt0.c1, rt0.c4, v0.c2, rt0.c3, rt0.c2, v0.c1 FROM t0, v0, vt0, rt0 WHERE (JULIANDAY(((rt0.c4)!=(t0.c2)), 1.446775347E9, ((v0.c1) NOT NULL), ((t0.c2)|(v0.c0)), rt0.c3 COLLATE NOCASE, ((vt0.c1) NOT NULL), ((NULL)GLOB(rt0.c0)))) UNION SELECT DISTINCT t0.c0, vt0.c0, rt0.c1, t0.c2, vt0.c1, rt0.c4, v0.c2, rt0.c3, rt0.c2, v0.c1 FROM t0, v0, vt0, rt0 WHERE ((NOT (JULIANDAY(((rt0.c4)<>(t0.c2)), 1.446775347E9, ((v0.c1) NOT NULL), ((t0.c2)|(v0.c0)), rt0.c3 COLLATE NOCASE, ((vt0.c1) NOT NULL), ((NULL)GLOB(rt0.c0)))))) UNION SELECT DISTINCT t0.c0, vt0.c0, rt0.c1, t0.c2, vt0.c1, rt0.c4, v0.c2, rt0.c3, rt0.c2, v0.c1 FROM t0, v0, vt0, rt0 WHERE (((JULIANDAY(((rt0.c4)<>(t0.c2)), 1.446775347E9, ((v0.c1) NOT NULL), ((t0.c2)|(v0.c0)), rt0.c3 COLLATE NOCASE, ((vt0.c1) NOT NULL), ((NULL)GLOB(rt0.c0)))) ISNULL));
SELECT DISTINCT t0.c0, vt0.c0, rt0.c1, t0.c2, vt0.c1, rt0.c4, v0.c2, rt0.c3, rt0.c2, v0.c1 FROM t0, v0, vt0, rt0 NOT INDEXED;
SELECT rt0.c4, rt0.c1, rt0.c2, rt0.c0 FROM rt0, t0 GROUP BY rt0.c4, rt0.c1, rt0.c2, rt0.c0;
SELECT ALL rt0.c4, rt0.c1, rt0.c2, rt0.c0 FROM rt0, t0 WHERE (((((rt0.c0, 0.5664795788370024, rt0.c2, t0.c2, rt0.c0)) BETWEEN ((rt0.c4, rt0.c1, rt0.c2, 0.2200989502987878, rt0.c4)) AND ((t0.c2, rt0.c0, rt0.c4, t0.c2, rt0.c3))) IN ())) GROUP BY rt0.c4, rt0.c1, rt0.c2, rt0.c0 UNION SELECT ALL rt0.c4, rt0.c1, rt0.c2, rt0.c0 FROM rt0, t0 WHERE ((NOT (((((rt0.c0, 0.5664795788370024, rt0.c2, t0.c2, rt0.c0)) BETWEEN ((rt0.c4, rt0.c1, rt0.c2, 0.2200989502987878, rt0.c4)) AND ((t0.c2, rt0.c0, rt0.c4, t0.c2, rt0.c3))) IN ())))) GROUP BY rt0.c4, rt0.c1, rt0.c2, rt0.c0 UNION SELECT rt0.c4, rt0.c1, rt0.c2, rt0.c0 FROM rt0, t0 WHERE (((((((rt0.c0, 0.5664795788370024, rt0.c2, t0.c2, rt0.c0)) BETWEEN ((rt0.c4, rt0.c1, rt0.c2, 0.2200989502987878, rt0.c4)) AND ((t0.c2, rt0.c0, rt0.c4, t0.c2, rt0.c3))) IN ())) ISNULL)) GROUP BY rt0.c4, rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c4, rt0.c1, rt0.c2, rt0.c0 FROM rt0, t0 GROUP BY rt0.c4, rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c3, rt0.c0, rt0.c4 FROM vt0, rt0 GROUP BY rt0.c3, rt0.c0, rt0.c4;
SELECT ALL rt0.c3, rt0.c0, rt0.c4 FROM vt0, rt0 GROUP BY rt0.c3, rt0.c0, rt0.c4 HAVING MIN(GROUP_CONCAT(GROUP_CONCAT(COUNT(*)))) UNION ALL SELECT rt0.c3, rt0.c0, rt0.c4 FROM vt0, rt0 GROUP BY rt0.c3, rt0.c0, rt0.c4 HAVING (NOT (MIN(GROUP_CONCAT(GROUP_CONCAT(COUNT(*)))))) UNION ALL SELECT ALL rt0.c3, rt0.c0, rt0.c4 FROM vt0, rt0 GROUP BY rt0.c3, rt0.c0, rt0.c4 HAVING ((MIN(GROUP_CONCAT(GROUP_CONCAT(COUNT(*))))) ISNULL);
SELECT v0.c2, rt0.c4, vt0.c0, vt0.c1, v0.c1, rt0.c2, rt0.c3, rt0.c1 FROM rt0, v0, vt0, t0;
SELECT v0.c2, rt0.c4, vt0.c0, vt0.c1, v0.c1, rt0.c2, rt0.c3, rt0.c1 FROM rt0, v0, vt0, t0 WHERE (json_valid((t0.c0 IN ()))) UNION ALL SELECT v0.c2, rt0.c4, vt0.c0, vt0.c1, v0.c1, rt0.c2, rt0.c3, rt0.c1 FROM rt0, v0, vt0, t0 WHERE ((NOT (json_valid((t0.c0 IN ()))))) UNION ALL SELECT v0.c2, rt0.c4, vt0.c0, vt0.c1, v0.c1, rt0.c2, rt0.c3, rt0.c1 FROM rt0, v0, vt0, t0 WHERE (((json_valid((t0.c0 IN ()))) ISNULL));
SELECT v0.c2, rt0.c4, vt0.c0, vt0.c1, v0.c1, rt0.c2, rt0.c3, rt0.c1 FROM rt0, v0, vt0, t0;
SELECT DISTINCT v0.c1, rt0.c1, rt0.c0, rt0.c2, vt0.c0, t0.c0, v0.c0, t0.c2, vt0.c1, rt0.c4, rt0.c3 FROM t0, v0, vt0, rt0;
SELECT DISTINCT v0.c1, rt0.c1, rt0.c0, rt0.c2, vt0.c0, t0.c0, v0.c0, t0.c2, vt0.c1, rt0.c4, rt0.c3 FROM t0, v0, vt0 NOT INDEXED, rt0 WHERE (v0.c2) UNION SELECT DISTINCT v0.c1, rt0.c1, rt0.c0, rt0.c2, vt0.c0, t0.c0, v0.c0, t0.c2, vt0.c1, rt0.c4, rt0.c3 FROM t0, v0, vt0, rt0 WHERE ((NOT (v0.c2))) UNION SELECT DISTINCT v0.c1, rt0.c1, rt0.c0, rt0.c2, vt0.c0, t0.c0, v0.c0, t0.c2, vt0.c1, rt0.c4, rt0.c3 FROM t0, v0, vt0, rt0 WHERE (((v0.c2) ISNULL));
SELECT DISTINCT v0.c1, rt0.c1, rt0.c0, rt0.c2, vt0.c0, t0.c0, v0.c0, t0.c2, vt0.c1, rt0.c4, rt0.c3 FROM t0, v0, vt0, rt0;
SELECT vt0.c0, t0.c2, vt0.c1 FROM vt0, t0 GROUP BY vt0.c0, t0.c2, vt0.c1;
SELECT vt0.c0, t0.c2, vt0.c1 FROM vt0, t0 WHERE ((((~ (vt0.c0)))=((- (vt0.c1))))) GROUP BY vt0.c0, t0.c2, vt0.c1 UNION SELECT vt0.c0, t0.c2, vt0.c1 FROM vt0, t0 WHERE ((NOT ((((~ (vt0.c0)))==((- (vt0.c1))))))) GROUP BY vt0.c0, t0.c2, vt0.c1 UNION SELECT ALL vt0.c0, t0.c2, vt0.c1 FROM vt0, t0 WHERE ((((((~ (vt0.c0)))=((- (vt0.c1))))) ISNULL)) GROUP BY vt0.c0, t0.c2, vt0.c1;
SELECT vt0.c0, t0.c2, vt0.c1 FROM vt0, t0 GROUP BY vt0.c0, t0.c2, vt0.c1;
SELECT vt0.c0, rt0.c4, v0.c2, rt0.c3 FROM v0, t0, vt0, rt0 GROUP BY vt0.c0, rt0.c4, v0.c2, rt0.c3;
SELECT ALL vt0.c0, rt0.c4, v0.c2, rt0.c3 FROM v0, t0, vt0, rt0 GROUP BY vt0.c0, rt0.c4, v0.c2, rt0.c3 HAVING GROUP_CONCAT(COUNT(*)) UNION ALL SELECT vt0.c0, rt0.c4, v0.c2, rt0.c3 FROM v0, t0, vt0, rt0 GROUP BY vt0.c0, rt0.c4, v0.c2, rt0.c3 HAVING (NOT (GROUP_CONCAT(COUNT(*)))) UNION ALL SELECT ALL vt0.c0, rt0.c4, v0.c2, rt0.c3 FROM v0, t0, vt0, rt0 GROUP BY vt0.c0, rt0.c4, v0.c2, rt0.c3 HAVING ((GROUP_CONCAT(COUNT(*))) ISNULL);
SELECT ALL rt0.c0 FROM rt0;
SELECT rt0.c0 FROM rt0 WHERE (CASE ((((((((rt0.c0)OR(rt0.c1)))AND(rt0.c0)))OR(rt0.c1)))OR(rt0.c3))  WHEN ((((rt0.c0)OR(rt0.c3)))AND(0.6414934224014284)) THEN (((rt0.c2, rt0.c3, rt0.c0))==((rt0.c0, rt0.c2, rt0.c2))) WHEN rt0.c0 COLLATE BINARY THEN NULL WHEN ((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c1)) THEN ((rt0.c0)&(rt0.c0)) END) UNION ALL SELECT rt0.c0 FROM rt0 WHERE ((NOT (CASE ((((((((rt0.c0)OR(rt0.c1)))AND(rt0.c0)))OR(rt0.c1)))OR(rt0.c3))  WHEN ((((rt0.c0)OR(rt0.c3)))AND(0.6414934224014284)) THEN (((rt0.c2, rt0.c3, rt0.c0))=((rt0.c0, rt0.c2, rt0.c2))) WHEN rt0.c0 COLLATE BINARY THEN NULL WHEN ((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c1)) THEN ((rt0.c0)&(rt0.c0)) END))) UNION ALL SELECT rt0.c0 FROM rt0 WHERE (((CASE ((((((((rt0.c0)OR(rt0.c1)))AND(rt0.c0)))OR(rt0.c1)))OR(rt0.c3))  WHEN ((((rt0.c0)OR(rt0.c3)))AND(0.6414934224014284)) THEN (((rt0.c2, rt0.c3, rt0.c0))=((rt0.c0, rt0.c2, rt0.c2))) WHEN rt0.c0 COLLATE BINARY THEN NULL WHEN ((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c1)) THEN ((rt0.c0)&(rt0.c0)) END) ISNULL));
SELECT ALL rt0.c0 FROM rt0;
SELECT DISTINCT * FROM t0, v0, rt0, vt0;
SELECT DISTINCT * FROM t0, v0, rt0, vt0 WHERE (CAST(((t0.c0) NOT BETWEEN (vt0.c0) AND ('')) AS NUMERIC)) UNION SELECT DISTINCT * FROM t0, v0, rt0, vt0 WHERE ((NOT (CAST(((t0.c0) NOT BETWEEN (vt0.c0) AND ('')) AS NUMERIC)))) UNION SELECT DISTINCT * FROM t0, v0, rt0, vt0 WHERE (((CAST(((t0.c0) NOT BETWEEN (vt0.c0) AND ('')) AS NUMERIC)) ISNULL));
SELECT DISTINCT * FROM t0, v0, rt0, vt0;
SELECT v0.c0, v0.c2, t0.c0, v0.c1, vt0.c0, vt0.c1 FROM v0, vt0, t0 GROUP BY v0.c0, v0.c2, t0.c0, v0.c1, vt0.c0, vt0.c1;
SELECT ALL v0.c0, v0.c2, t0.c0, v0.c1, vt0.c0, vt0.c1 FROM v0, vt0, t0 WHERE (CASE WHEN 0x4f91c55d THEN CAST(v0.c2 AS INTEGER) END) GROUP BY v0.c0, v0.c2, t0.c0, v0.c1, vt0.c0, vt0.c1 UNION SELECT ALL v0.c0, v0.c2, t0.c0, v0.c1, vt0.c0, vt0.c1 FROM v0, vt0, t0 WHERE ((NOT (CASE WHEN 0x4f91c55d THEN CAST(v0.c2 AS INTEGER) END))) GROUP BY v0.c0, v0.c2, t0.c0, v0.c1, vt0.c0, vt0.c1 UNION SELECT v0.c0, v0.c2, t0.c0, v0.c1, vt0.c0, vt0.c1 FROM v0, vt0, t0 WHERE (((CASE WHEN 0X4f91c55d THEN CAST(v0.c2 AS INTEGER) END) ISNULL)) GROUP BY v0.c0, v0.c2, t0.c0, v0.c1, vt0.c0, vt0.c1;
SELECT v0.c0, v0.c2, t0.c0, v0.c1, vt0.c0, vt0.c1 FROM v0, vt0, t0 GROUP BY v0.c0, v0.c2, t0.c0, v0.c1, vt0.c0, vt0.c1;
SELECT ALL t0.c2 FROM vt0 LEFT OUTER JOIN t0 ON (((t0.c0)) NOT BETWEEN ((json_insert(vt0.c1, vt0.c1, vt0.c0))) AND ((((((vt0.c1)OR(vt0.c1)))AND(vt0.c0))))) GROUP BY t0.c2;
SELECT ALL t0.c2 FROM vt0 LEFT OUTER JOIN t0 ON (((t0.c0)) NOT BETWEEN ((json_insert(vt0.c1, vt0.c1, vt0.c0))) AND ((((((vt0.c1)OR(vt0.c1)))AND(vt0.c0))))) GROUP BY t0.c2 HAVING CAST(SUM(GROUP_CONCAT(MIN(COUNT(*)))) AS TEXT) UNION ALL SELECT t0.c2 FROM vt0 LEFT OUTER JOIN t0 ON (((t0.c0)) NOT BETWEEN ((json_insert(vt0.c1, vt0.c1, vt0.c0))) AND ((((((vt0.c1)OR(vt0.c1)))AND(vt0.c0))))) GROUP BY t0.c2 HAVING (NOT (CAST(SUM(GROUP_CONCAT(MIN(COUNT(*)))) AS TEXT))) UNION ALL SELECT t0.c2 FROM vt0 LEFT OUTER JOIN t0 ON (((t0.c0)) NOT BETWEEN ((json_insert(vt0.c1, vt0.c1, vt0.c0))) AND ((((((vt0.c1)OR(vt0.c1)))AND(vt0.c0))))) GROUP BY t0.c2 HAVING ((CAST(SUM(GROUP_CONCAT(MIN(COUNT(*)))) AS TEXT)) ISNULL);
SELECT ALL rt0.c1, v0.c2, rt0.c4, v0.c1 FROM t0, v0, rt0;
SELECT ALL rt0.c1, v0.c2, rt0.c4, v0.c1 FROM t0, v0, rt0 WHERE ('|w9f') UNION ALL SELECT ALL rt0.c1, v0.c2, rt0.c4, v0.c1 FROM t0, v0, rt0 WHERE ((NOT ('|w9f'))) UNION ALL SELECT ALL rt0.c1, v0.c2, rt0.c4, v0.c1 FROM t0, v0, rt0 WHERE ((('|w9f') ISNULL));
SELECT ALL rt0.c1, v0.c2, rt0.c4, v0.c1 FROM t0, v0, rt0;
SELECT DISTINCT v0.c1, v0.c2 FROM v0;
SELECT DISTINCT v0.c1, v0.c2 FROM v0 WHERE (((((v0.c0 IN (NULL, v0.c2))))<(((v0.c0 IN ()))))) UNION SELECT DISTINCT v0.c1, v0.c2 FROM v0 WHERE ((NOT (((((v0.c0 IN (NULL, v0.c2))))<(((v0.c0 IN ()))))))) UNION SELECT DISTINCT v0.c1, v0.c2 FROM v0 WHERE (((((((v0.c0 IN (NULL, v0.c2))))<(((v0.c0 IN ()))))) ISNULL));
SELECT DISTINCT v0.c1, v0.c2 FROM v0;
SELECT ALL rt0.c4, rt0.c2 FROM rt0 LEFT OUTER JOIN vt0 ON (((((((((vt0.c1)OR(rt0.c0)))AND(rt0.c3)))OR(vt0.c1)))OR(rt0.c2)) IN ()) GROUP BY rt0.c4, rt0.c2;
SELECT rt0.c4, rt0.c2 FROM rt0 NOT INDEXED LEFT OUTER JOIN vt0 ON (((((((((vt0.c1)OR(rt0.c0)))AND(rt0.c3)))OR(vt0.c1)))OR(rt0.c2)) IN ()) WHERE ((((rt0.c3 IN ()))/(LAST_INSERT_ROWID()))) GROUP BY rt0.c4, rt0.c2 UNION SELECT rt0.c4, rt0.c2 FROM rt0 NOT INDEXED LEFT OUTER JOIN vt0 ON (((((((((vt0.c1)OR(rt0.c0)))AND(rt0.c3)))OR(vt0.c1)))OR(rt0.c2)) IN ()) WHERE ((NOT ((((rt0.c3 IN ()))/(LAST_INSERT_ROWID()))))) GROUP BY rt0.c4, rt0.c2 UNION SELECT ALL rt0.c4, rt0.c2 FROM rt0 LEFT OUTER JOIN vt0 ON (((((((((vt0.c1)OR(rt0.c0)))AND(rt0.c3)))OR(vt0.c1)))OR(rt0.c2)) IN ()) WHERE ((((((rt0.c3 IN ()))/(LAST_INSERT_ROWID()))) ISNULL)) GROUP BY rt0.c4, rt0.c2;
SELECT ALL rt0.c4, rt0.c2 FROM rt0 LEFT OUTER JOIN vt0 ON (((((((((vt0.c1)OR(rt0.c0)))AND(rt0.c3)))OR(vt0.c1)))OR(rt0.c2)) IN ()) GROUP BY rt0.c4, rt0.c2;
SELECT ALL v0.c0, vt0.c0, v0.c2, rt0.c2 FROM v0, rt0, vt0 GROUP BY v0.c0, vt0.c0, v0.c2, rt0.c2;
SELECT ALL v0.c0, vt0.c0, v0.c2, rt0.c2 FROM v0, rt0, vt0 GROUP BY v0.c0, vt0.c0, v0.c2, rt0.c2 HAVING COUNT(((((((((vt0.c0)OR(AVG(SUM(SUM(AVG(TOTAL(v0.c1))))))))OR(rt0.c4)))OR(rt0.c2)))OR(rt0.c4))) UNION ALL SELECT v0.c0, vt0.c0, v0.c2, rt0.c2 FROM v0, rt0, vt0 GROUP BY v0.c0, vt0.c0, v0.c2, rt0.c2 HAVING (NOT (COUNT(((((((((vt0.c0)OR(AVG(SUM(SUM(AVG(TOTAL(v0.c1))))))))OR(rt0.c4)))OR(rt0.c2)))OR(rt0.c4))))) UNION ALL SELECT ALL v0.c0, vt0.c0, v0.c2, rt0.c2 FROM v0, rt0, vt0 GROUP BY v0.c0, vt0.c0, v0.c2, rt0.c2 HAVING ((COUNT(((((((((vt0.c0)OR(AVG(SUM(SUM(AVG(TOTAL(v0.c1))))))))OR(rt0.c4)))OR(rt0.c2)))OR(rt0.c4)))) ISNULL);
SELECT * FROM vt0 CROSS JOIN v0 ON ((CASE v0.c1  WHEN rt0.c0 THEN v0.c1 WHEN t0.c2 THEN t0.c0 WHEN rt0.c3 THEN rt0.c0 END) NOT NULL) FULL OUTER JOIN t0 ON HEX((((t0.c0)) BETWEEN ((t0.c2)) AND (('L㝢')))) FULL OUTER JOIN rt0 ON (((+ (vt0.c0)))<>(((rt0.c3) NOT BETWEEN (t0.c0) AND (rt0.c0))));
SELECT DISTINCT * FROM v0, t0 CROSS JOIN rt0 ON ((rt0.c4) IS FALSE) COLLATE BINARY;
SELECT DISTINCT * FROM v0, t0 CROSS JOIN rt0 ON ((rt0.c4) IS FALSE) COLLATE BINARY WHERE (CASE WHEN HEX(rt0.c2) THEN CAST(x'' AS BLOB) END) UNION SELECT DISTINCT * FROM v0, t0 CROSS JOIN rt0 ON ((rt0.c4) IS FALSE) COLLATE BINARY WHERE ((NOT (CASE WHEN HEX(rt0.c2) THEN CAST(x'' AS BLOB) END))) UNION SELECT DISTINCT * FROM v0, t0 CROSS JOIN rt0 ON ((rt0.c4) IS FALSE) COLLATE BINARY WHERE (((CASE WHEN HEX(rt0.c2) THEN CAST(x'' AS BLOB) END) ISNULL));
SELECT DISTINCT * FROM v0, t0 CROSS JOIN rt0 ON ((rt0.c4) IS FALSE) COLLATE BINARY;
SELECT ALL rt0.c1, rt0.c2, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c1, rt0.c2, vt0.c0;
SELECT ALL rt0.c1, rt0.c2, vt0.c0 FROM vt0, rt0 WHERE (((((((((rt0.c0)OR(rt0.c4)))AND(vt0.c1)))OR(x'')))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c3))))) GROUP BY rt0.c1, rt0.c2, vt0.c0 UNION SELECT rt0.c1, rt0.c2, vt0.c0 FROM vt0, rt0 WHERE ((NOT (((((((((rt0.c0)OR(rt0.c4)))AND(vt0.c1)))OR(x'')))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c3))))))) GROUP BY rt0.c1, rt0.c2, vt0.c0 UNION SELECT rt0.c1, rt0.c2, vt0.c0 FROM vt0, rt0 WHERE (((((((((((rt0.c0)OR(rt0.c4)))AND(vt0.c1)))OR(x'')))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c3))))) ISNULL)) GROUP BY rt0.c1, rt0.c2, vt0.c0;
SELECT ALL rt0.c1, rt0.c2, vt0.c0 FROM vt0, rt0 GROUP BY rt0.c1, rt0.c2, vt0.c0;
SELECT v0.c0, rt0.c0, t0.c2, vt0.c1, rt0.c2, rt0.c4, rt0.c3, v0.c1, rt0.c1, t0.c0, vt0.c0 FROM v0, vt0, t0, rt0 GROUP BY v0.c0, rt0.c0, t0.c2, vt0.c1, rt0.c2, rt0.c4, rt0.c3, v0.c1, rt0.c1, t0.c0, vt0.c0;
SELECT v0.c0, rt0.c0, t0.c2, vt0.c1, rt0.c2, rt0.c4, rt0.c3, v0.c1, rt0.c1, t0.c0, vt0.c0 FROM v0, vt0, t0, rt0 GROUP BY v0.c0, rt0.c0, t0.c2, vt0.c1, rt0.c2, rt0.c4, rt0.c3, v0.c1, rt0.c1, t0.c0, vt0.c0 HAVING x'76d3' UNION ALL SELECT v0.c0, rt0.c0, t0.c2, vt0.c1, rt0.c2, rt0.c4, rt0.c3, v0.c1, rt0.c1, t0.c0, vt0.c0 FROM v0, vt0, t0, rt0 GROUP BY v0.c0, rt0.c0, t0.c2, vt0.c1, rt0.c2, rt0.c4, rt0.c3, v0.c1, rt0.c1, t0.c0, vt0.c0 HAVING (NOT (x'76d3')) UNION ALL SELECT ALL v0.c0, rt0.c0, t0.c2, vt0.c1, rt0.c2, rt0.c4, rt0.c3, v0.c1, rt0.c1, t0.c0, vt0.c0 FROM v0, vt0, t0, rt0 GROUP BY v0.c0, rt0.c0, t0.c2, vt0.c1, rt0.c2, rt0.c4, rt0.c3, v0.c1, rt0.c1, t0.c0, vt0.c0 HAVING ((x'76d3') ISNULL);
SELECT v0.c0, rt0.c0, t0.c2, vt0.c1, rt0.c2, rt0.c4, rt0.c3, v0.c1, rt0.c1, t0.c0, vt0.c0 FROM v0, vt0, t0, rt0 GROUP BY v0.c0, rt0.c0, t0.c2, vt0.c1, rt0.c2, rt0.c4, rt0.c3, v0.c1, rt0.c1, t0.c0, vt0.c0;
SELECT v0.c0, rt0.c0, t0.c2, vt0.c1, rt0.c2, rt0.c4, rt0.c3, v0.c1, rt0.c1, t0.c0, vt0.c0 FROM v0, vt0, t0, rt0 GROUP BY v0.c0, rt0.c0, t0.c2, vt0.c1, rt0.c2, rt0.c4, rt0.c3, v0.c1, rt0.c1, t0.c0, vt0.c0 HAVING x'76d3' UNION ALL SELECT v0.c0, rt0.c0, t0.c2, vt0.c1, rt0.c2, rt0.c4, rt0.c3, v0.c1, rt0.c1, t0.c0, vt0.c0 FROM v0, vt0, t0, rt0 GROUP BY v0.c0, rt0.c0, t0.c2, vt0.c1, rt0.c2, rt0.c4, rt0.c3, v0.c1, rt0.c1, t0.c0, vt0.c0 HAVING (NOT (x'76d3')) UNION ALL SELECT ALL v0.c0, rt0.c0, t0.c2, vt0.c1, rt0.c2, rt0.c4, rt0.c3, v0.c1, rt0.c1, t0.c0, vt0.c0 FROM v0, vt0, t0, rt0 GROUP BY v0.c0, rt0.c0, t0.c2, vt0.c1, rt0.c2, rt0.c4, rt0.c3, v0.c1, rt0.c1, t0.c0, vt0.c0 HAVING ((x'76d3') ISNULL);
SELECT v0.c0, rt0.c0, t0.c2, vt0.c1, rt0.c2, rt0.c4, rt0.c3, v0.c1, rt0.c1, t0.c0, vt0.c0 FROM v0, vt0, t0, rt0 GROUP BY v0.c0, rt0.c0, t0.c2, vt0.c1, rt0.c2, rt0.c4, rt0.c3, v0.c1, rt0.c1, t0.c0, vt0.c0;
SELECT ALL rt0.c3, vt0.c1, vt0.c0, rt0.c4, v0.c2, rt0.c1, rt0.c2, rt0.c0, v0.c0 FROM rt0, v0, vt0;
SELECT rt0.c3, vt0.c1, vt0.c0, rt0.c4, v0.c2, rt0.c1, rt0.c2, rt0.c0, v0.c0 FROM rt0, v0, vt0 WHERE (((((rt0.c0) ISNULL))IS NOT((((rt0.c0)) BETWEEN ((v0.c0)) AND ((x'')))))) UNION ALL SELECT ALL rt0.c3, vt0.c1, vt0.c0, rt0.c4, v0.c2, rt0.c1, rt0.c2, rt0.c0, v0.c0 FROM rt0, v0, vt0 WHERE ((NOT (((((rt0.c0) ISNULL))IS NOT((((rt0.c0)) BETWEEN ((v0.c0)) AND ((x'')))))))) UNION ALL SELECT ALL rt0.c3, vt0.c1, vt0.c0, rt0.c4, v0.c2, rt0.c1, rt0.c2, rt0.c0, v0.c0 FROM rt0, v0, vt0 WHERE (((((((rt0.c0) ISNULL))IS NOT((((rt0.c0)) BETWEEN ((v0.c0)) AND ((x'')))))) ISNULL));
SELECT ALL rt0.c3, vt0.c1, vt0.c0, rt0.c4, v0.c2, rt0.c1, rt0.c2, rt0.c0, v0.c0 FROM rt0, v0, vt0;
SELECT DISTINCT rt0.c3, vt0.c1, v0.c0, rt0.c4, vt0.c0, rt0.c2, rt0.c0, t0.c2 FROM t0, v0, vt0, rt0;
SELECT DISTINCT rt0.c3, vt0.c1, v0.c0, rt0.c4, vt0.c0, rt0.c2, rt0.c0, t0.c2 FROM t0, v0, vt0, rt0 WHERE (LOWER(DISTINCT ((t0.c2)AND(t0.c2)))) UNION SELECT DISTINCT rt0.c3, vt0.c1, v0.c0, rt0.c4, vt0.c0, rt0.c2, rt0.c0, t0.c2 FROM t0, v0, vt0, rt0 WHERE ((NOT (LOWER(DISTINCT ((t0.c2)AND(t0.c2)))))) UNION SELECT DISTINCT rt0.c3, vt0.c1, v0.c0, rt0.c4, vt0.c0, rt0.c2, rt0.c0, t0.c2 FROM t0, v0, vt0, rt0 WHERE (((LOWER(DISTINCT ((t0.c2)AND(t0.c2)))) ISNULL));
SELECT DISTINCT rt0.c3, vt0.c1, v0.c0, rt0.c4, vt0.c0, rt0.c2, rt0.c0, t0.c2 FROM t0, v0, vt0, rt0;
SELECT ALL rt0.c0, rt0.c4, rt0.c3, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c4, rt0.c3, rt0.c2;
SELECT rt0.c0, rt0.c4, rt0.c3, rt0.c2 FROM rt0 WHERE ((((rt0.c3, rt0.c3, rt0.c3)) NOT BETWEEN ((UPPER(rt0.c0), rt0.c0, ((0.8540815894567915)*(rt0.c1)))) AND ((((rt0.c1) NOTNULL), (~ (rt0.c4)), ((rt0.c3) IS FALSE))))) GROUP BY rt0.c0, rt0.c4, rt0.c3, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c4, rt0.c3, rt0.c2 FROM rt0 NOT INDEXED WHERE ((NOT ((((rt0.c3, rt0.c3, rt0.c3)) NOT BETWEEN ((UPPER(rt0.c0), rt0.c0, ((0.8540815894567915)*(rt0.c1)))) AND ((((rt0.c1) NOTNULL), (~ (rt0.c4)), ((rt0.c3) IS FALSE))))))) GROUP BY rt0.c0, rt0.c4, rt0.c3, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c4, rt0.c3, rt0.c2 FROM rt0 WHERE ((((((rt0.c3, rt0.c3, rt0.c3)) NOT BETWEEN ((UPPER(rt0.c0), rt0.c0, ((0.8540815894567915)*(rt0.c1)))) AND ((((rt0.c1) NOTNULL), (~ (rt0.c4)), ((rt0.c3) IS FALSE))))) ISNULL)) GROUP BY rt0.c0, rt0.c4, rt0.c3, rt0.c2;
SELECT ALL rt0.c0, rt0.c4, rt0.c3, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c4, rt0.c3, rt0.c2;
SELECT rt0.c1, rt0.c3, rt0.c2, v0.c0, rt0.c4, rt0.c0, v0.c1, vt0.c0, v0.c2 FROM vt0, v0, rt0 GROUP BY rt0.c1, rt0.c3, rt0.c2, v0.c0, rt0.c4, rt0.c0, v0.c1, vt0.c0, v0.c2;
SELECT rt0.c1, rt0.c3, rt0.c2, v0.c0, rt0.c4, rt0.c0, v0.c1, vt0.c0, v0.c2 FROM vt0, v0, rt0 GROUP BY rt0.c1, rt0.c3, rt0.c2, v0.c0, rt0.c4, rt0.c0, v0.c1, vt0.c0, v0.c2 HAVING MIN((- (MAX(v0.c1)))) UNION ALL SELECT ALL rt0.c1, rt0.c3, rt0.c2, v0.c0, rt0.c4, rt0.c0, v0.c1, vt0.c0, v0.c2 FROM vt0, v0, rt0 GROUP BY rt0.c1, rt0.c3, rt0.c2, v0.c0, rt0.c4, rt0.c0, v0.c1, vt0.c0, v0.c2 HAVING (NOT (MIN((- (MAX(v0.c1)))))) UNION ALL SELECT ALL rt0.c1, rt0.c3, rt0.c2, v0.c0, rt0.c4, rt0.c0, v0.c1, vt0.c0, v0.c2 FROM vt0, v0, rt0 GROUP BY rt0.c1, rt0.c3, rt0.c2, v0.c0, rt0.c4, rt0.c0, v0.c1, vt0.c0, v0.c2 HAVING ((MIN((- (MAX(v0.c1))))) ISNULL);
SELECT v0.c0, t0.c2, rt0.c1, rt0.c0, v0.c1 FROM rt0, t0, v0;
SELECT v0.c0, t0.c2, rt0.c1, rt0.c0, v0.c1 FROM rt0, t0, v0 WHERE (((((t0.c0)||(rt0.c4))) IS FALSE)) UNION ALL SELECT ALL v0.c0, t0.c2, rt0.c1, rt0.c0, v0.c1 FROM rt0, t0, v0 WHERE ((NOT (((((t0.c0)||(rt0.c4))) IS FALSE)))) UNION ALL SELECT v0.c0, t0.c2, rt0.c1, rt0.c0, v0.c1 FROM rt0, t0, v0 WHERE (((((((t0.c0)||(rt0.c4))) IS FALSE)) ISNULL));
SELECT v0.c0, t0.c2, rt0.c1, rt0.c0, v0.c1 FROM rt0, t0, v0;
SELECT DISTINCT * FROM rt0 NATURAL JOIN t0;
SELECT DISTINCT * FROM rt0 NATURAL JOIN t0 WHERE (CASE WHEN ((((((((rt0.c1)OR(1.842853685E9)))OR(rt0.c1)))OR(rt0.c0)))OR(t0.c2)) THEN rt0.c3 COLLATE RTRIM END) UNION SELECT DISTINCT * FROM rt0 NATURAL JOIN t0 WHERE ((NOT (CASE WHEN ((((((((rt0.c1)OR(1.842853685E9)))OR(rt0.c1)))OR(rt0.c0)))OR(t0.c2)) THEN rt0.c3 COLLATE RTRIM END))) UNION SELECT DISTINCT * FROM rt0 NATURAL JOIN t0 WHERE (((CASE WHEN ((((((((rt0.c1)OR(1.842853685E9)))OR(rt0.c1)))OR(rt0.c0)))OR(t0.c2)) THEN rt0.c3 COLLATE RTRIM END) ISNULL));
SELECT DISTINCT * FROM rt0 NATURAL JOIN t0;
SELECT rt0.c3 FROM rt0 GROUP BY rt0.c3;
SELECT rt0.c3 FROM rt0 WHERE (((((rt0.c2) IS FALSE))&((((rt0.c4)) BETWEEN ((rt0.c1)) AND ((rt0.c1)))))) GROUP BY rt0.c3 UNION SELECT rt0.c3 FROM rt0 WHERE ((NOT (((((rt0.c2) IS FALSE))&((((rt0.c4)) BETWEEN ((rt0.c1)) AND ((rt0.c1)))))))) GROUP BY rt0.c3 UNION SELECT ALL rt0.c3 FROM rt0 WHERE (((((((rt0.c2) IS FALSE))&((((rt0.c4)) BETWEEN ((rt0.c1)) AND ((rt0.c1)))))) ISNULL)) GROUP BY rt0.c3;
SELECT rt0.c3 FROM rt0 GROUP BY rt0.c3;
SELECT rt0.c3, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c3, rt0.c2, rt0.c1;
SELECT ALL rt0.c3, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c3, rt0.c2, rt0.c1 HAVING MAX(((rt0.c4)GLOB(rt0.c2))) UNION ALL SELECT rt0.c3, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c3, rt0.c2, rt0.c1 HAVING (NOT (MAX(((rt0.c4)GLOB(rt0.c2))))) UNION ALL SELECT ALL rt0.c3, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c3, rt0.c2, rt0.c1 HAVING ((MAX(((rt0.c4)GLOB(rt0.c2)))) ISNULL);
SELECT rt0.c3, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c3, rt0.c2, rt0.c1;
SELECT ALL rt0.c3, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c3, rt0.c2, rt0.c1 HAVING MAX(((rt0.c4)GLOB(rt0.c2))) UNION ALL SELECT rt0.c3, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c3, rt0.c2, rt0.c1 HAVING (NOT (MAX(((rt0.c4)GLOB(rt0.c2))))) UNION ALL SELECT ALL rt0.c3, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c3, rt0.c2, rt0.c1 HAVING ((MAX(((rt0.c4)GLOB(rt0.c2)))) ISNULL);
SELECT rt0.c3, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c3, rt0.c2, rt0.c1;
SELECT * FROM t0, vt0, rt0, v0;
SELECT ALL * FROM t0, vt0, rt0, v0 WHERE (v0.c0) UNION ALL SELECT ALL * FROM t0, vt0, rt0, v0 WHERE ((NOT (v0.c0))) UNION ALL SELECT * FROM t0, vt0, rt0, v0 WHERE (((v0.c0) ISNULL));
SELECT * FROM t0, vt0, rt0, v0;
SELECT DISTINCT rt0.c2, rt0.c0, vt0.c1, rt0.c3 FROM vt0, rt0, v0, t0 NOT INDEXED;
SELECT DISTINCT rt0.c2, rt0.c0, vt0.c1, rt0.c3 FROM vt0, rt0, v0, t0 WHERE (((((v0.c2)|(v0.c1))) NOT BETWEEN (((((v0.c0)AND(v0.c2)))OR(vt0.c0))) AND (vt0.c0 COLLATE BINARY))) UNION SELECT DISTINCT rt0.c2, rt0.c0, vt0.c1, rt0.c3 FROM vt0, rt0, v0, t0 WHERE ((NOT (((((v0.c2)|(v0.c1))) NOT BETWEEN (((((v0.c0)AND(v0.c2)))OR(vt0.c0))) AND (vt0.c0 COLLATE BINARY))))) UNION SELECT DISTINCT rt0.c2, rt0.c0, vt0.c1, rt0.c3 FROM vt0, rt0 NOT INDEXED, v0, t0 WHERE (((((((v0.c2)|(v0.c1))) NOT BETWEEN (((((v0.c0)AND(v0.c2)))OR(vt0.c0))) AND (vt0.c0 COLLATE BINARY))) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c0, vt0.c1, rt0.c3 FROM vt0, rt0, v0, t0 NOT INDEXED;
SELECT ALL t0.c2, rt0.c3, rt0.c4, rt0.c2 FROM vt0, t0, rt0 GROUP BY t0.c2, rt0.c3, rt0.c4, rt0.c2;
SELECT t0.c2, rt0.c3, rt0.c4, rt0.c2 FROM vt0, t0, rt0 WHERE ((((((((NULL))<=((t0.c0))))AND(((vt0.c1)+(rt0.c1)))))OR((NOT (vt0.c1))))) GROUP BY t0.c2, rt0.c3, rt0.c4, rt0.c2 UNION SELECT ALL t0.c2, rt0.c3, rt0.c4, rt0.c2 FROM vt0, t0, rt0 WHERE ((NOT ((((((((NULL))<=((t0.c0))))AND(((vt0.c1)+(rt0.c1)))))OR((NOT (vt0.c1))))))) GROUP BY t0.c2, rt0.c3, rt0.c4, rt0.c2 UNION SELECT t0.c2, rt0.c3, rt0.c4, rt0.c2 FROM vt0, t0, rt0 WHERE ((((((((((NULL))<=((t0.c0))))AND(((vt0.c1)+(rt0.c1)))))OR((NOT (vt0.c1))))) ISNULL)) GROUP BY t0.c2, rt0.c3, rt0.c4, rt0.c2;
SELECT ALL t0.c2, rt0.c3, rt0.c4, rt0.c2 FROM vt0, t0, rt0 GROUP BY t0.c2, rt0.c3, rt0.c4, rt0.c2;
SELECT ALL vt0.c1, v0.c2, vt0.c0 FROM vt0, v0 GROUP BY vt0.c1, v0.c2, vt0.c0;
SELECT vt0.c1, v0.c2, vt0.c0 FROM vt0, v0 GROUP BY vt0.c1, v0.c2, vt0.c0 HAVING (~ (AVG(0.16335869006558468))) UNION ALL SELECT ALL vt0.c1, v0.c2, vt0.c0 FROM vt0, v0 GROUP BY vt0.c1, v0.c2, vt0.c0 HAVING (NOT ((~ (AVG(0.16335869006558468))))) UNION ALL SELECT ALL vt0.c1, v0.c2, vt0.c0 FROM vt0, v0 GROUP BY vt0.c1, v0.c2, vt0.c0 HAVING (((~ (AVG(0.16335869006558468)))) ISNULL);
SELECT ALL vt0.c1, v0.c2, vt0.c0 FROM vt0, v0 GROUP BY vt0.c1, v0.c2, vt0.c0;
SELECT vt0.c1, v0.c2, vt0.c0 FROM vt0, v0 GROUP BY vt0.c1, v0.c2, vt0.c0 HAVING (~ (AVG(0.16335869006558468))) UNION ALL SELECT ALL vt0.c1, v0.c2, vt0.c0 FROM vt0, v0 GROUP BY vt0.c1, v0.c2, vt0.c0 HAVING (NOT ((~ (AVG(0.16335869006558468))))) UNION ALL SELECT ALL vt0.c1, v0.c2, vt0.c0 FROM vt0, v0 GROUP BY vt0.c1, v0.c2, vt0.c0 HAVING (((~ (AVG(0.16335869006558468)))) ISNULL);
SELECT ALL vt0.c1, v0.c2, vt0.c0 FROM vt0, v0 GROUP BY vt0.c1, v0.c2, vt0.c0;
SELECT vt0.c1 FROM vt0, t0;
SELECT vt0.c1 FROM vt0, t0 WHERE (CAST((+ (t0.c2)) AS NUMERIC)) UNION ALL SELECT vt0.c1 FROM vt0, t0 WHERE ((NOT (CAST((+ (t0.c2)) AS NUMERIC)))) UNION ALL SELECT vt0.c1 FROM vt0, t0 WHERE (((CAST((+ (t0.c2)) AS NUMERIC)) ISNULL));
SELECT vt0.c1 FROM vt0, t0;
SELECT DISTINCT v0.c1, t0.c2, v0.c0, t0.c0 FROM v0, t0;
SELECT DISTINCT v0.c1, t0.c2, v0.c0, t0.c0 FROM v0, t0 WHERE (CAST(((v0.c2) IS FALSE) AS TEXT)) UNION SELECT DISTINCT v0.c1, t0.c2, v0.c0, t0.c0 FROM v0, t0 WHERE ((NOT (CAST(((v0.c2) IS FALSE) AS TEXT)))) UNION SELECT DISTINCT v0.c1, t0.c2, v0.c0, t0.c0 FROM v0, t0 WHERE (((CAST(((v0.c2) IS FALSE) AS TEXT)) ISNULL));
SELECT DISTINCT v0.c1, t0.c2, v0.c0, t0.c0 FROM v0, t0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 NOT INDEXED WHERE (UNICODE(((t0.c2)IS NOT(t0.c2)))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE ((NOT (UNICODE(((t0.c2)IS NOT(t0.c2)))))) GROUP BY t0.c0 UNION SELECT ALL t0.c0 FROM t0 WHERE (((UNICODE(((t0.c2)IS NOT(t0.c2)))) ISNULL)) GROUP BY t0.c0;
SELECT ALL t0.c0 FROM t0 GROUP BY t0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING ((((COUNT(*))OR(MAX(COUNT(*)))))AND(SUM(vt0.c1))) UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING (NOT (((((COUNT(*))OR(MAX(COUNT(*)))))AND(SUM(vt0.c1))))) UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING ((((((COUNT(*))OR(MAX(COUNT(*)))))AND(SUM(vt0.c1)))) ISNULL);
SELECT ALL * FROM vt0, rt0;
SELECT ALL * FROM vt0, rt0 WHERE (CASE WHEN CASE WHEN x'' THEN rt0.c0 END THEN (vt0.c1 IN ()) END) UNION ALL SELECT * FROM vt0, rt0 WHERE ((NOT (CASE WHEN CASE WHEN x'' THEN rt0.c0 END THEN (vt0.c1 IN ()) END))) UNION ALL SELECT ALL * FROM vt0, rt0 WHERE (((CASE WHEN CASE WHEN x'' THEN rt0.c0 END THEN (vt0.c1 IN ()) END) ISNULL));
SELECT ALL * FROM vt0, rt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (CASE ((vt0.c0) IS FALSE)  WHEN ((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)) THEN vt0.c0 END) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (CASE ((vt0.c0) IS FALSE)  WHEN ((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)) THEN vt0.c0 END))) UNION SELECT DISTINCT * FROM vt0 WHERE (((CASE ((vt0.c0) IS FALSE)  WHEN ((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)) THEN vt0.c0 END) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT rt0.c3, v0.c2 FROM v0 CROSS JOIN t0 ON CASE x''  WHEN CASE 0.17112997581546596  WHEN rt0.c0 THEN v0.c0 ELSE v0.c1 END THEN LIKELY(DISTINCT v0.c1) ELSE (('')/(t0.c0)) END RIGHT OUTER JOIN rt0 ON ((vt0.c0 COLLATE BINARY) NOTNULL) FULL OUTER JOIN vt0 ON ((((((rt0.c3)<<(rt0.c3)))OR(0X277fa3eb)))AND((- (t0.c0)))) GROUP BY rt0.c3, v0.c2;
SELECT ALL rt0.c1, rt0.c4, t0.c2, rt0.c0, t0.c0, rt0.c2, vt0.c0, v0.c1, v0.c0, rt0.c3, vt0.c1 FROM t0, rt0, v0, vt0 GROUP BY rt0.c1, rt0.c4, t0.c2, rt0.c0, t0.c0, rt0.c2, vt0.c0, v0.c1, v0.c0, rt0.c3, vt0.c1;
SELECT ALL rt0.c1, rt0.c4, t0.c2, rt0.c0, t0.c0, rt0.c2, vt0.c0, v0.c1, v0.c0, rt0.c3, vt0.c1 FROM t0, rt0, v0, vt0 GROUP BY rt0.c1, rt0.c4, t0.c2, rt0.c0, t0.c0, rt0.c2, vt0.c0, v0.c1, v0.c0, rt0.c3, vt0.c1 HAVING MAX(COUNT(vt0.c1)) UNION ALL SELECT rt0.c1, rt0.c4, t0.c2, rt0.c0, t0.c0, rt0.c2, vt0.c0, v0.c1, v0.c0, rt0.c3, vt0.c1 FROM t0, rt0, v0, vt0 GROUP BY rt0.c1, rt0.c4, t0.c2, rt0.c0, t0.c0, rt0.c2, vt0.c0, v0.c1, v0.c0, rt0.c3, vt0.c1 HAVING (NOT (MAX(COUNT(vt0.c1)))) UNION ALL SELECT rt0.c1, rt0.c4, t0.c2, rt0.c0, t0.c0, rt0.c2, vt0.c0, v0.c1, v0.c0, rt0.c3, vt0.c1 FROM t0, rt0, v0, vt0 GROUP BY rt0.c1, rt0.c4, t0.c2, rt0.c0, t0.c0, rt0.c2, vt0.c0, v0.c1, v0.c0, rt0.c3, vt0.c1 HAVING ((MAX(COUNT(vt0.c1))) ISNULL);
SELECT ALL MIN(CAST(vt0.c1 AS NUMERIC)) FROM vt0 ORDER BY CAST(CAST(vt0.c1 AS BLOB) AS REAL)  NULLS FIRST;
SELECT ALL v0.c2 FROM v0;
SELECT ALL v0.c2 FROM v0 WHERE (0.8566991805118677) UNION ALL SELECT ALL v0.c2 FROM v0 NOT INDEXED WHERE ((NOT (0.8566991805118677))) UNION ALL SELECT ALL v0.c2 FROM v0 NOT INDEXED WHERE (((0.8566991805118677) ISNULL));
SELECT ALL v0.c2 FROM v0;
SELECT DISTINCT v0.c1, t0.c2, v0.c0, t0.c0, v0.c2 FROM v0, t0;
SELECT DISTINCT v0.c1, t0.c2, v0.c0, t0.c0, v0.c2 FROM v0, t0 WHERE (((((0x14ae7929)OR(v0.c1 COLLATE NOCASE)))AND(((t0.c2) NOTNULL)))) UNION SELECT DISTINCT v0.c1, t0.c2, v0.c0, t0.c0, v0.c2 FROM v0, t0 WHERE ((NOT (((((0x14ae7929)OR(v0.c1 COLLATE NOCASE)))AND(((t0.c2) NOTNULL)))))) UNION SELECT DISTINCT v0.c1, t0.c2, v0.c0, t0.c0, v0.c2 FROM v0, t0 WHERE (((((((0X14ae7929)OR(v0.c1 COLLATE NOCASE)))AND(((t0.c2) NOTNULL)))) ISNULL));
SELECT DISTINCT v0.c1, t0.c2, v0.c0, t0.c0, v0.c2 FROM v0, t0;
SELECT ALL v0.c0, t0.c0, vt0.c1, vt0.c0, t0.c2, v0.c2, v0.c1, rt0.c2 FROM v0, vt0, t0, rt0 GROUP BY v0.c0, t0.c0, vt0.c1, vt0.c0, t0.c2, v0.c2, v0.c1, rt0.c2;
SELECT ALL v0.c0, t0.c0, vt0.c1, vt0.c0, t0.c2, v0.c2, v0.c1, rt0.c2 FROM v0, vt0, t0, rt0 WHERE (CASE v0.c1  WHEN ((t0.c2) NOT BETWEEN (rt0.c1) AND (v0.c1)) THEN -1.7976931348623157E308 END) GROUP BY v0.c0, t0.c0, vt0.c1, vt0.c0, t0.c2, v0.c2, v0.c1, rt0.c2 UNION SELECT ALL v0.c0, t0.c0, vt0.c1, vt0.c0, t0.c2, v0.c2, v0.c1, rt0.c2 FROM v0, vt0, t0, rt0 WHERE ((NOT (CASE v0.c1  WHEN ((t0.c2) NOT BETWEEN (rt0.c1) AND (v0.c1)) THEN -1.7976931348623157E308 END))) GROUP BY v0.c0, t0.c0, vt0.c1, vt0.c0, t0.c2, v0.c2, v0.c1, rt0.c2 UNION SELECT ALL v0.c0, t0.c0, vt0.c1, vt0.c0, t0.c2, v0.c2, v0.c1, rt0.c2 FROM v0, vt0, t0, rt0 WHERE (((CASE v0.c1  WHEN ((t0.c2) NOT BETWEEN (rt0.c1) AND (v0.c1)) THEN -1.7976931348623157E308 END) ISNULL)) GROUP BY v0.c0, t0.c0, vt0.c1, vt0.c0, t0.c2, v0.c2, v0.c1, rt0.c2;
SELECT ALL v0.c0, t0.c0, vt0.c1, vt0.c0, t0.c2, v0.c2, v0.c1, rt0.c2 FROM v0, vt0, t0, rt0 GROUP BY v0.c0, t0.c0, vt0.c1, vt0.c0, t0.c2, v0.c2, v0.c1, rt0.c2;
SELECT vt0.c0, v0.c0, vt0.c1, v0.c1, v0.c2 FROM t0, v0, vt0 GROUP BY vt0.c0, v0.c0, vt0.c1, v0.c1, v0.c2;
SELECT vt0.c0, v0.c0, vt0.c1, v0.c1, v0.c2 FROM t0, v0, vt0 GROUP BY vt0.c0, v0.c0, vt0.c1, v0.c1, v0.c2 HAVING ((GROUP_CONCAT(vt0.c1)) NOT BETWEEN (CASE MAX(GROUP_CONCAT(COUNT(GROUP_CONCAT(AVG(v0.c1)))))  WHEN vt0.c0 THEN v0.c2 WHEN '-591628599' THEN v0.c1 WHEN COUNT(*) THEN AVG(t0.c2) END) AND (COUNT(*))) UNION ALL SELECT ALL vt0.c0, v0.c0, vt0.c1, v0.c1, v0.c2 FROM t0, v0, vt0 GROUP BY vt0.c0, v0.c0, vt0.c1, v0.c1, v0.c2 HAVING (NOT (((GROUP_CONCAT(vt0.c1)) NOT BETWEEN (CASE MAX(GROUP_CONCAT(COUNT(GROUP_CONCAT(AVG(v0.c1)))))  WHEN vt0.c0 THEN v0.c2 WHEN '-591628599' THEN v0.c1 WHEN COUNT(*) THEN AVG(t0.c2) END) AND (COUNT(*))))) UNION ALL SELECT ALL vt0.c0, v0.c0, vt0.c1, v0.c1, v0.c2 FROM t0, v0, vt0 GROUP BY vt0.c0, v0.c0, vt0.c1, v0.c1, v0.c2 HAVING ((((GROUP_CONCAT(vt0.c1)) NOT BETWEEN (CASE MAX(GROUP_CONCAT(COUNT(GROUP_CONCAT(AVG(v0.c1)))))  WHEN vt0.c0 THEN v0.c2 WHEN '-591628599' THEN v0.c1 WHEN COUNT(*) THEN AVG(t0.c2) END) AND (COUNT(*)))) ISNULL);
SELECT ALL * FROM rt0 FULL OUTER JOIN vt0 ON ((rt0.c3) BETWEEN (vt0.c1) AND (vt0.c1)) COLLATE NOCASE;
SELECT ALL * FROM rt0 FULL OUTER JOIN vt0 ON ((rt0.c3) BETWEEN (vt0.c1) AND (vt0.c1)) COLLATE NOCASE WHERE ('') UNION ALL SELECT * FROM rt0 FULL OUTER JOIN vt0 ON ((rt0.c3) BETWEEN (vt0.c1) AND (vt0.c1)) COLLATE NOCASE WHERE ((NOT (''))) UNION ALL SELECT * FROM rt0 FULL OUTER JOIN vt0 ON ((rt0.c3) BETWEEN (vt0.c1) AND (vt0.c1)) COLLATE NOCASE WHERE ((('') ISNULL));
SELECT ALL * FROM rt0 FULL OUTER JOIN vt0 ON ((rt0.c3) BETWEEN (vt0.c1) AND (vt0.c1)) COLLATE NOCASE;
SELECT DISTINCT t0.c0 FROM t0;
SELECT DISTINCT t0.c0 FROM t0 WHERE (((((t0.c2)+(t0.c0)))OR(((NULL) ISNULL)))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE ((NOT (((((t0.c2)+(t0.c0)))OR(((NULL) ISNULL)))))) UNION SELECT DISTINCT t0.c0 FROM t0 WHERE (((((((t0.c2)+(t0.c0)))OR(((NULL) ISNULL)))) ISNULL));
SELECT DISTINCT t0.c0 FROM t0;
SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c2, rt0.c1 FROM rt0 WHERE (((((((((((rt0.c3)OR(rt0.c1)))OR(rt0.c4)))OR(rt0.c4)))OR(rt0.c4)))IS NOT(rt0.c1))) GROUP BY rt0.c2, rt0.c1 UNION SELECT rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (((((((((((rt0.c3)OR(rt0.c1)))OR(rt0.c4)))OR(rt0.c4)))OR(rt0.c4)))IS NOT(rt0.c1))))) GROUP BY rt0.c2, rt0.c1 UNION SELECT rt0.c2, rt0.c1 FROM rt0 WHERE (((((((((((((rt0.c3)OR(rt0.c1)))OR(rt0.c4)))OR(rt0.c4)))OR(rt0.c4)))IS NOT(rt0.c1))) ISNULL)) GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING DATE(COUNT(*), MIN(vt0.c1), MAX(COUNT(vt0.c0)), GROUP_CONCAT(vt0.c0), AVG(MIN(vt0.c0)), COUNT(*), SUM(vt0.c1)) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING (NOT (DATE(COUNT(*), MIN(vt0.c1), MAX(COUNT(vt0.c0)), GROUP_CONCAT(vt0.c0), AVG(MIN(vt0.c0)), COUNT(*), SUM(vt0.c1)))) UNION ALL SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING ((DATE(COUNT(*), MIN(vt0.c1), MAX(COUNT(vt0.c0)), GROUP_CONCAT(vt0.c0), AVG(MIN(vt0.c0)), COUNT(*), SUM(vt0.c1))) ISNULL);
SELECT ALL rt0.c4 FROM rt0, vt0;
SELECT ALL rt0.c4 FROM rt0, vt0 WHERE ((((rt0.c2)IS(rt0.c0)) IN ())) UNION ALL SELECT rt0.c4 FROM rt0, vt0 WHERE ((NOT ((((rt0.c2)IS(rt0.c0)) IN ())))) UNION ALL SELECT rt0.c4 FROM rt0, vt0 WHERE ((((((rt0.c2)IS(rt0.c0)) IN ())) ISNULL));
SELECT ALL rt0.c4 FROM rt0, vt0;
SELECT DISTINCT rt0.c2, v0.c1, rt0.c0, v0.c2, rt0.c4 FROM v0, rt0 FULL OUTER JOIN t0 ON ((((rt0.c2)&(v0.c2)))AND(ABS(DISTINCT NULL)));
SELECT DISTINCT rt0.c2, v0.c1, rt0.c0, v0.c2, rt0.c4 FROM v0, rt0 FULL OUTER JOIN t0 ON ((((rt0.c2)&(v0.c2)))AND(ABS(DISTINCT NULL))) WHERE (((((rt0.c4)<<(v0.c1))) ISNULL)) UNION SELECT DISTINCT rt0.c2, v0.c1, rt0.c0, v0.c2, rt0.c4 FROM v0, rt0 FULL OUTER JOIN t0 ON ((((rt0.c2)&(v0.c2)))AND(ABS(DISTINCT NULL))) WHERE ((NOT (((((rt0.c4)<<(v0.c1))) ISNULL)))) UNION SELECT DISTINCT rt0.c2, v0.c1, rt0.c0, v0.c2, rt0.c4 FROM v0, rt0 FULL OUTER JOIN t0 ON ((((rt0.c2)&(v0.c2)))AND(ABS(DISTINCT NULL))) WHERE (((((((rt0.c4)<<(v0.c1))) ISNULL)) ISNULL));
SELECT DISTINCT rt0.c2, v0.c1, rt0.c0, v0.c2, rt0.c4 FROM v0, rt0 FULL OUTER JOIN t0 ON ((((rt0.c2)&(v0.c2)))AND(ABS(DISTINCT NULL)));
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0 WHERE ((((((('') BETWEEN (vt0.c1) AND (vt0.c0)))OR(CAST(NULL AS NUMERIC))))AND(((((((((((((vt0.c1)AND(vt0.c0)))AND(vt0.c1)))AND(vt0.c1)))AND(vt0.c0)))OR(NULL)))AND(vt0.c1))))) GROUP BY vt0.c1 UNION SELECT ALL vt0.c1 FROM vt0 WHERE ((NOT ((((((('') BETWEEN (vt0.c1) AND (vt0.c0)))OR(CAST(NULL AS NUMERIC))))AND(((((((((((((vt0.c1)AND(vt0.c0)))AND(vt0.c1)))AND(vt0.c1)))AND(vt0.c0)))OR(NULL)))AND(vt0.c1))))))) GROUP BY vt0.c1 UNION SELECT ALL vt0.c1 FROM vt0 WHERE ((((((((('') BETWEEN (vt0.c1) AND (vt0.c0)))OR(CAST(NULL AS NUMERIC))))AND(((((((((((((vt0.c1)AND(vt0.c0)))AND(vt0.c1)))AND(vt0.c1)))AND(vt0.c0)))OR(NULL)))AND(vt0.c1))))) ISNULL)) GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT rt0.c0, rt0.c3, vt0.c1, rt0.c2, t0.c0, vt0.c0, rt0.c4, t0.c2 FROM t0, vt0, rt0 GROUP BY rt0.c0, rt0.c3, vt0.c1, rt0.c2, t0.c0, vt0.c0, rt0.c4, t0.c2;
SELECT ALL rt0.c0, rt0.c3, vt0.c1, rt0.c2, t0.c0, vt0.c0, rt0.c4, t0.c2 FROM t0, vt0, rt0 GROUP BY rt0.c0, rt0.c3, vt0.c1, rt0.c2, t0.c0, vt0.c0, rt0.c4, t0.c2 HAVING COUNT(*) UNION ALL SELECT rt0.c0, rt0.c3, vt0.c1, rt0.c2, t0.c0, vt0.c0, rt0.c4, t0.c2 FROM t0, vt0, rt0 GROUP BY rt0.c0, rt0.c3, vt0.c1, rt0.c2, t0.c0, vt0.c0, rt0.c4, t0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c0, rt0.c3, vt0.c1, rt0.c2, t0.c0, vt0.c0, rt0.c4, t0.c2 FROM t0, vt0, rt0 NOT INDEXED GROUP BY rt0.c0, rt0.c3, vt0.c1, rt0.c2, t0.c0, vt0.c0, rt0.c4, t0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c0, rt0.c3, vt0.c1, rt0.c2, t0.c0, vt0.c0, rt0.c4, t0.c2 FROM t0, vt0, rt0 GROUP BY rt0.c0, rt0.c3, vt0.c1, rt0.c2, t0.c0, vt0.c0, rt0.c4, t0.c2;
SELECT ALL rt0.c0, rt0.c3, vt0.c1, rt0.c2, t0.c0, vt0.c0, rt0.c4, t0.c2 FROM t0, vt0, rt0 GROUP BY rt0.c0, rt0.c3, vt0.c1, rt0.c2, t0.c0, vt0.c0, rt0.c4, t0.c2 HAVING COUNT(*) UNION ALL SELECT rt0.c0, rt0.c3, vt0.c1, rt0.c2, t0.c0, vt0.c0, rt0.c4, t0.c2 FROM t0, vt0, rt0 GROUP BY rt0.c0, rt0.c3, vt0.c1, rt0.c2, t0.c0, vt0.c0, rt0.c4, t0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c0, rt0.c3, vt0.c1, rt0.c2, t0.c0, vt0.c0, rt0.c4, t0.c2 FROM t0, vt0, rt0 NOT INDEXED GROUP BY rt0.c0, rt0.c3, vt0.c1, rt0.c2, t0.c0, vt0.c0, rt0.c4, t0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c0, rt0.c3, vt0.c1, rt0.c2, t0.c0, vt0.c0, rt0.c4, t0.c2 FROM t0, vt0, rt0 GROUP BY rt0.c0, rt0.c3, vt0.c1, rt0.c2, t0.c0, vt0.c0, rt0.c4, t0.c2;
SELECT ALL vt0.c0, vt0.c1, rt0.c0, rt0.c4, rt0.c2, rt0.c1, rt0.c3 FROM rt0, vt0;
SELECT vt0.c0, vt0.c1, rt0.c0, rt0.c4, rt0.c2, rt0.c1, rt0.c3 FROM rt0, vt0 WHERE ((((rt0.c1 IN ()))>=((((vt0.c1, rt0.c2, vt0.c1)) BETWEEN ((rt0.c4, rt0.c4, rt0.c3)) AND ((rt0.c4, rt0.c1, vt0.c0)))))) UNION ALL SELECT vt0.c0, vt0.c1, rt0.c0, rt0.c4, rt0.c2, rt0.c1, rt0.c3 FROM rt0, vt0 WHERE ((NOT ((((rt0.c1 IN ()))>=((((vt0.c1, rt0.c2, vt0.c1)) BETWEEN ((rt0.c4, rt0.c4, rt0.c3)) AND ((rt0.c4, rt0.c1, vt0.c0)))))))) UNION ALL SELECT ALL vt0.c0, vt0.c1, rt0.c0, rt0.c4, rt0.c2, rt0.c1, rt0.c3 FROM rt0, vt0 WHERE ((((((rt0.c1 IN ()))>=((((vt0.c1, rt0.c2, vt0.c1)) BETWEEN ((rt0.c4, rt0.c4, rt0.c3)) AND ((rt0.c4, rt0.c1, vt0.c0)))))) ISNULL));
SELECT ALL vt0.c0, vt0.c1, rt0.c0, rt0.c4, rt0.c2, rt0.c1, rt0.c3 FROM rt0, vt0;
SELECT DISTINCT v0.c1, rt0.c0, rt0.c3, v0.c2, t0.c0, t0.c2, rt0.c4 FROM t0, vt0, rt0, v0;
SELECT DISTINCT v0.c1, rt0.c0, rt0.c3, v0.c2, t0.c0, t0.c2, rt0.c4 FROM t0, vt0, rt0, v0 WHERE ((((vt0.c1)) BETWEEN ((0.4423373833539228)) AND ((((((v0.c0)OR(v0.c1)))OR(vt0.c0)))))) UNION SELECT DISTINCT v0.c1, rt0.c0, rt0.c3, v0.c2, t0.c0, t0.c2, rt0.c4 FROM t0, vt0 NOT INDEXED, rt0, v0 WHERE ((NOT ((((vt0.c1)) BETWEEN ((0.4423373833539228)) AND ((((((v0.c0)OR(v0.c1)))OR(vt0.c0)))))))) UNION SELECT DISTINCT v0.c1, rt0.c0, rt0.c3, v0.c2, t0.c0, t0.c2, rt0.c4 FROM t0, vt0, rt0, v0 WHERE ((((((vt0.c1)) BETWEEN ((0.4423373833539228)) AND ((((((v0.c0)OR(v0.c1)))OR(vt0.c0)))))) ISNULL));
SELECT DISTINCT v0.c1, rt0.c0, rt0.c3, v0.c2, t0.c0, t0.c2, rt0.c4 FROM t0, vt0, rt0, v0;
SELECT ALL v0.c2, rt0.c1, rt0.c2, t0.c0, rt0.c3, t0.c2, v0.c0, v0.c1, rt0.c4, rt0.c0 FROM t0, rt0, v0 GROUP BY v0.c2, rt0.c1, rt0.c2, t0.c0, rt0.c3, t0.c2, v0.c0, v0.c1, rt0.c4, rt0.c0;
SELECT ALL v0.c2, rt0.c1, rt0.c2, t0.c0, rt0.c3, t0.c2, v0.c0, v0.c1, rt0.c4, rt0.c0 FROM t0, rt0, v0 WHERE (((((((rt0.c0)OR(rt0.c0)))OR(rt0.c2)))+(CASE WHEN t0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN t0.c2 END))) GROUP BY v0.c2, rt0.c1, rt0.c2, t0.c0, rt0.c3, t0.c2, v0.c0, v0.c1, rt0.c4, rt0.c0 UNION SELECT ALL v0.c2, rt0.c1, rt0.c2, t0.c0, rt0.c3, t0.c2, v0.c0, v0.c1, rt0.c4, rt0.c0 FROM t0, rt0, v0 WHERE ((NOT (((((((rt0.c0)OR(rt0.c0)))OR(rt0.c2)))+(CASE WHEN t0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN t0.c2 END))))) GROUP BY v0.c2, rt0.c1, rt0.c2, t0.c0, rt0.c3, t0.c2, v0.c0, v0.c1, rt0.c4, rt0.c0 UNION SELECT v0.c2, rt0.c1, rt0.c2, t0.c0, rt0.c3, t0.c2, v0.c0, v0.c1, rt0.c4, rt0.c0 FROM t0, rt0, v0 WHERE (((((((((rt0.c0)OR(rt0.c0)))OR(rt0.c2)))+(CASE WHEN t0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN t0.c2 END))) ISNULL)) GROUP BY v0.c2, rt0.c1, rt0.c2, t0.c0, rt0.c3, t0.c2, v0.c0, v0.c1, rt0.c4, rt0.c0;
SELECT ALL v0.c2, rt0.c1, rt0.c2, t0.c0, rt0.c3, t0.c2, v0.c0, v0.c1, rt0.c4, rt0.c0 FROM t0, rt0, v0 GROUP BY v0.c2, rt0.c1, rt0.c2, t0.c0, rt0.c3, t0.c2, v0.c0, v0.c1, rt0.c4, rt0.c0;
SELECT t0.c2, v0.c1, rt0.c2, rt0.c4, rt0.c0, vt0.c0, v0.c2, rt0.c1, t0.c0, vt0.c1, rt0.c3 FROM v0, rt0, vt0, t0 GROUP BY t0.c2, v0.c1, rt0.c2, rt0.c4, rt0.c0, vt0.c0, v0.c2, rt0.c1, t0.c0, vt0.c1, rt0.c3;
SELECT t0.c2, v0.c1, rt0.c2, rt0.c4, rt0.c0, vt0.c0, v0.c2, rt0.c1, t0.c0, vt0.c1, rt0.c3 FROM v0, rt0, vt0, t0 GROUP BY t0.c2, v0.c1, rt0.c2, rt0.c4, rt0.c0, vt0.c0, v0.c2, rt0.c1, t0.c0, vt0.c1, rt0.c3 HAVING AVG(CASE WHEN v0.c2 THEN MIN(AVG(rt0.c0)) END) UNION ALL SELECT t0.c2, v0.c1, rt0.c2, rt0.c4, rt0.c0, vt0.c0, v0.c2, rt0.c1, t0.c0, vt0.c1, rt0.c3 FROM v0, rt0, vt0, t0 GROUP BY t0.c2, v0.c1, rt0.c2, rt0.c4, rt0.c0, vt0.c0, v0.c2, rt0.c1, t0.c0, vt0.c1, rt0.c3 HAVING (NOT (AVG(CASE WHEN v0.c2 THEN MIN(AVG(rt0.c0)) END))) UNION ALL SELECT t0.c2, v0.c1, rt0.c2, rt0.c4, rt0.c0, vt0.c0, v0.c2, rt0.c1, t0.c0, vt0.c1, rt0.c3 FROM v0, rt0, vt0, t0 GROUP BY t0.c2, v0.c1, rt0.c2, rt0.c4, rt0.c0, vt0.c0, v0.c2, rt0.c1, t0.c0, vt0.c1, rt0.c3 HAVING ((AVG(CASE WHEN v0.c2 THEN MIN(AVG(rt0.c0)) END)) ISNULL);
SELECT * FROM t0 RIGHT OUTER JOIN vt0 ON (((vt0.c0)) NOT BETWEEN (((rt0.c4 IN ()))) AND ((((rt0.c4)==(rt0.c0))))) LEFT OUTER JOIN v0 ON (((((rt0.c4)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c2)))) IS FALSE) FULL OUTER JOIN rt0 ON (~ ((+ (v0.c1))));
SELECT DISTINCT rt0.c1, rt0.c4, rt0.c0, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c4, rt0.c0, rt0.c2 FROM rt0 WHERE (NULL) UNION SELECT DISTINCT rt0.c1, rt0.c4, rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (NULL))) UNION SELECT DISTINCT rt0.c1, rt0.c4, rt0.c0, rt0.c2 FROM rt0 WHERE (((NULL) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c4, rt0.c0, rt0.c2 FROM rt0;
SELECT ALL t0.c0, vt0.c0, t0.c2 FROM vt0, t0 GROUP BY t0.c0, vt0.c0, t0.c2;
SELECT ALL t0.c0, vt0.c0, t0.c2 FROM vt0, t0 WHERE (((((((((t0.c0)OR(0.47605842293190637)))OR(vt0.c0)))AND(CAST(vt0.c0 AS TEXT))))OR(((t0.c0) NOT BETWEEN (t0.c2) AND (t0.c0))))) GROUP BY t0.c0, vt0.c0, t0.c2 UNION SELECT t0.c0, vt0.c0, t0.c2 FROM vt0, t0 WHERE ((NOT (((((((((t0.c0)OR(0.47605842293190637)))OR(vt0.c0)))AND(CAST(vt0.c0 AS TEXT))))OR(((t0.c0) NOT BETWEEN (t0.c2) AND (t0.c0))))))) GROUP BY t0.c0, vt0.c0, t0.c2 UNION SELECT t0.c0, vt0.c0, t0.c2 FROM vt0, t0 WHERE (((((((((((t0.c0)OR(0.47605842293190637)))OR(vt0.c0)))AND(CAST(vt0.c0 AS TEXT))))OR(((t0.c0) NOT BETWEEN (t0.c2) AND (t0.c0))))) ISNULL)) GROUP BY t0.c0, vt0.c0, t0.c2;
SELECT ALL t0.c0, vt0.c0, t0.c2 FROM vt0, t0 GROUP BY t0.c0, vt0.c0, t0.c2;
SELECT v0.c0, v0.c1 FROM v0 GROUP BY v0.c0, v0.c1;
SELECT v0.c0, v0.c1 FROM v0 GROUP BY v0.c0, v0.c1 HAVING GROUP_CONCAT(COUNT(*)) UNION ALL SELECT v0.c0, v0.c1 FROM v0 GROUP BY v0.c0, v0.c1 HAVING (NOT (GROUP_CONCAT(COUNT(*)))) UNION ALL SELECT v0.c0, v0.c1 FROM v0 GROUP BY v0.c0, v0.c1 HAVING ((GROUP_CONCAT(COUNT(*))) ISNULL);
SELECT ALL MIN((~ (rt0.c2 COLLATE RTRIM))) FROM t0, rt0 ORDER BY ((CASE WHEN t0.c0 THEN rt0.c4 WHEN t0.c0 THEN '' WHEN t0.c0 THEN rt0.c4 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 END) BETWEEN (((rt0.c1)>(rt0.c1))) AND (((t0.c2)%(rt0.c4))))  NULLS FIRST, CASE (t0.c0 IN ())  WHEN TIME('E篧8', t0.c2, rt0.c2, rt0.c1, rt0.c3) THEN (('-1355654990') ISNULL) ELSE ((x'') BETWEEN (t0.c2) AND (rt0.c3)) END;
SELECT * FROM vt0, rt0, t0, v0;
SELECT ALL * FROM vt0, rt0, t0, v0 WHERE (NULLIF(json_array(v0.c1, rt0.c4), v0.c2 COLLATE NOCASE)) UNION ALL SELECT * FROM vt0, rt0, t0, v0 WHERE ((NOT (NULLIF(json_array(v0.c1, rt0.c4), v0.c2 COLLATE NOCASE)))) UNION ALL SELECT * FROM vt0, rt0, t0, v0 WHERE (((NULLIF(json_array(v0.c1, rt0.c4), v0.c2 COLLATE NOCASE)) ISNULL));
SELECT * FROM vt0, rt0, t0, v0;
SELECT DISTINCT vt0.c1 FROM rt0, t0, vt0;
SELECT DISTINCT vt0.c1 FROM rt0, t0, vt0 WHERE (CASE WHEN CAST(rt0.c3 AS BLOB) THEN vt0.c1 WHEN vt0.c0 THEN LIKE(NULL, t0.c0) WHEN (~ (rt0.c0)) THEN ((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c4)) END) UNION SELECT DISTINCT vt0.c1 FROM rt0, t0, vt0 WHERE ((NOT (CASE WHEN CAST(rt0.c3 AS BLOB) THEN vt0.c1 WHEN vt0.c0 THEN LIKE(NULL, t0.c0) WHEN (~ (rt0.c0)) THEN ((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c4)) END))) UNION SELECT DISTINCT vt0.c1 FROM rt0, t0, vt0 WHERE (((CASE WHEN CAST(rt0.c3 AS BLOB) THEN vt0.c1 WHEN vt0.c0 THEN LIKE(NULL, t0.c0) WHEN (~ (rt0.c0)) THEN ((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c4)) END) ISNULL));
SELECT DISTINCT vt0.c1 FROM rt0, t0, vt0;
SELECT ALL v0.c0, v0.c2, rt0.c0, rt0.c3, vt0.c0, rt0.c1, t0.c0, v0.c1, rt0.c2, vt0.c1, rt0.c4 FROM vt0, rt0, t0, v0 GROUP BY v0.c0, v0.c2, rt0.c0, rt0.c3, vt0.c0, rt0.c1, t0.c0, v0.c1, rt0.c2, vt0.c1, rt0.c4;
SELECT v0.c0, v0.c2, rt0.c0, rt0.c3, vt0.c0, rt0.c1, t0.c0, v0.c1, rt0.c2, vt0.c1, rt0.c4 FROM vt0 NOT INDEXED, rt0, t0, v0 WHERE ((((- (0.6726286427260049)))AND((((x''))<=((rt0.c2)))))) GROUP BY v0.c0, v0.c2, rt0.c0, rt0.c3, vt0.c0, rt0.c1, t0.c0, v0.c1, rt0.c2, vt0.c1, rt0.c4 UNION SELECT v0.c0, v0.c2, rt0.c0, rt0.c3, vt0.c0, rt0.c1, t0.c0, v0.c1, rt0.c2, vt0.c1, rt0.c4 FROM vt0, rt0, t0, v0 WHERE ((NOT ((((- (0.6726286427260049)))AND((((x''))<=((rt0.c2)))))))) GROUP BY v0.c0, v0.c2, rt0.c0, rt0.c3, vt0.c0, rt0.c1, t0.c0, v0.c1, rt0.c2, vt0.c1, rt0.c4 UNION SELECT ALL v0.c0, v0.c2, rt0.c0, rt0.c3, vt0.c0, rt0.c1, t0.c0, v0.c1, rt0.c2, vt0.c1, rt0.c4 FROM vt0, rt0, t0, v0 WHERE ((((((- (0.6726286427260049)))AND((((x''))<=((rt0.c2)))))) ISNULL)) GROUP BY v0.c0, v0.c2, rt0.c0, rt0.c3, vt0.c0, rt0.c1, t0.c0, v0.c1, rt0.c2, vt0.c1, rt0.c4;
SELECT ALL v0.c0, v0.c2, rt0.c0, rt0.c3, vt0.c0, rt0.c1, t0.c0, v0.c1, rt0.c2, vt0.c1, rt0.c4 FROM vt0, rt0, t0, v0 GROUP BY v0.c0, v0.c2, rt0.c0, rt0.c3, vt0.c0, rt0.c1, t0.c0, v0.c1, rt0.c2, vt0.c1, rt0.c4;
SELECT rt0.c3, t0.c2, t0.c0, rt0.c2, vt0.c0, vt0.c1, rt0.c4, rt0.c0 FROM rt0, t0, vt0 GROUP BY rt0.c3, t0.c2, t0.c0, rt0.c2, vt0.c0, vt0.c1, rt0.c4, rt0.c0;
SELECT rt0.c3, t0.c2, t0.c0, rt0.c2, vt0.c0, vt0.c1, rt0.c4, rt0.c0 FROM rt0, t0, vt0 GROUP BY rt0.c3, t0.c2, t0.c0, rt0.c2, vt0.c0, vt0.c1, rt0.c4, rt0.c0 HAVING TOTAL(MIN(AVG(COUNT(*)))) UNION ALL SELECT rt0.c3, t0.c2, t0.c0, rt0.c2, vt0.c0, vt0.c1, rt0.c4, rt0.c0 FROM rt0, t0, vt0 GROUP BY rt0.c3, t0.c2, t0.c0, rt0.c2, vt0.c0, vt0.c1, rt0.c4, rt0.c0 HAVING (NOT (TOTAL(MIN(AVG(COUNT(*)))))) UNION ALL SELECT rt0.c3, t0.c2, t0.c0, rt0.c2, vt0.c0, vt0.c1, rt0.c4, rt0.c0 FROM rt0, t0, vt0 GROUP BY rt0.c3, t0.c2, t0.c0, rt0.c2, vt0.c0, vt0.c1, rt0.c4, rt0.c0 HAVING ((TOTAL(MIN(AVG(COUNT(*))))) ISNULL);
SELECT * FROM v0, vt0, rt0, t0;
SELECT ALL * FROM v0, vt0, rt0, t0 WHERE (((((((((((t0.c2)+(rt0.c1)))OR(((v0.c0) ISNULL))))AND(COALESCE(rt0.c3, rt0.c2))))OR(((v0.c1) NOT BETWEEN ('') AND (vt0.c0)))))OR(UNLIKELY(rt0.c0)))) UNION ALL SELECT * FROM v0, vt0 NOT INDEXED, rt0, t0 WHERE ((NOT (((((((((((t0.c2)+(rt0.c1)))OR(((v0.c0) ISNULL))))AND(COALESCE(rt0.c3, rt0.c2))))OR(((v0.c1) NOT BETWEEN ('') AND (vt0.c0)))))OR(UNLIKELY(rt0.c0)))))) UNION ALL SELECT ALL * FROM v0, vt0, rt0, t0 WHERE (((((((((((((t0.c2)+(rt0.c1)))OR(((v0.c0) ISNULL))))AND(COALESCE(rt0.c3, rt0.c2))))OR(((v0.c1) NOT BETWEEN ('') AND (vt0.c0)))))OR(UNLIKELY(rt0.c0)))) ISNULL));
SELECT * FROM v0, vt0, rt0, t0;
SELECT DISTINCT v0.c1, rt0.c1, rt0.c3, rt0.c0, v0.c0, rt0.c2, rt0.c4, v0.c2 FROM rt0 RIGHT OUTER JOIN v0 ON ((((v0.c2) NOTNULL))>>((rt0.c0 IN (rt0.c4))));
SELECT DISTINCT v0.c1, rt0.c1, rt0.c3, rt0.c0, v0.c0, rt0.c2, rt0.c4, v0.c2 FROM rt0 RIGHT OUTER JOIN v0 ON ((((v0.c2) NOTNULL))>>((rt0.c0 IN (rt0.c4)))) WHERE ((~ ((((v0.c1))<((rt0.c4)))))) UNION SELECT DISTINCT v0.c1, rt0.c1, rt0.c3, rt0.c0, v0.c0, rt0.c2, rt0.c4, v0.c2 FROM rt0 RIGHT OUTER JOIN v0 ON ((((v0.c2) NOTNULL))>>((rt0.c0 IN (rt0.c4)))) WHERE ((NOT ((~ ((((v0.c1))<((rt0.c4)))))))) UNION SELECT DISTINCT v0.c1, rt0.c1, rt0.c3, rt0.c0, v0.c0, rt0.c2, rt0.c4, v0.c2 FROM rt0 RIGHT OUTER JOIN v0 ON ((((v0.c2) NOTNULL))>>((rt0.c0 IN (rt0.c4)))) WHERE ((((~ ((((v0.c1))<((rt0.c4)))))) ISNULL));
SELECT DISTINCT v0.c1, rt0.c1, rt0.c3, rt0.c0, v0.c0, rt0.c2, rt0.c4, v0.c2 FROM rt0 RIGHT OUTER JOIN v0 ON ((((v0.c2) NOTNULL))>>((rt0.c0 IN (rt0.c4))));
SELECT ALL v0.c2 FROM rt0, v0, t0 GROUP BY v0.c2;
SELECT ALL v0.c2 FROM rt0, v0, t0 WHERE (v0.c2) GROUP BY v0.c2 UNION SELECT v0.c2 FROM rt0, v0, t0 WHERE ((NOT (v0.c2))) GROUP BY v0.c2 UNION SELECT v0.c2 FROM rt0, v0, t0 WHERE (((v0.c2) ISNULL)) GROUP BY v0.c2;
SELECT ALL v0.c2 FROM rt0, v0, t0 GROUP BY v0.c2;
SELECT ALL t0.c2, rt0.c3, rt0.c1 FROM v0 NOT INDEXED, rt0 INNER JOIN t0 ON (('20438558') ISNULL) COLLATE RTRIM GROUP BY t0.c2, rt0.c3, rt0.c1;
SELECT ALL t0.c2, rt0.c3, rt0.c1 FROM v0, rt0 INNER JOIN t0 ON (('20438558') ISNULL) COLLATE RTRIM GROUP BY t0.c2, rt0.c3, rt0.c1 HAVING (NOT (SUM(rt0.c2))) UNION ALL SELECT t0.c2, rt0.c3, rt0.c1 FROM v0, rt0 INNER JOIN t0 ON (('20438558') ISNULL) COLLATE RTRIM GROUP BY t0.c2, rt0.c3, rt0.c1 HAVING (NOT ((NOT (SUM(rt0.c2))))) UNION ALL SELECT ALL t0.c2, rt0.c3, rt0.c1 FROM v0, rt0 INNER JOIN t0 ON (('20438558') ISNULL) COLLATE RTRIM GROUP BY t0.c2, rt0.c3, rt0.c1 HAVING (((NOT (SUM(rt0.c2)))) ISNULL);
SELECT ALL t0.c2, rt0.c3, rt0.c1 FROM v0 NOT INDEXED, rt0 INNER JOIN t0 ON (('20438558') ISNULL) COLLATE RTRIM GROUP BY t0.c2, rt0.c3, rt0.c1;
SELECT ALL t0.c2, rt0.c3, rt0.c1 FROM v0, rt0 INNER JOIN t0 ON (('20438558') ISNULL) COLLATE RTRIM GROUP BY t0.c2, rt0.c3, rt0.c1 HAVING (NOT (SUM(rt0.c2))) UNION ALL SELECT t0.c2, rt0.c3, rt0.c1 FROM v0, rt0 INNER JOIN t0 ON (('20438558') ISNULL) COLLATE RTRIM GROUP BY t0.c2, rt0.c3, rt0.c1 HAVING (NOT ((NOT (SUM(rt0.c2))))) UNION ALL SELECT ALL t0.c2, rt0.c3, rt0.c1 FROM v0, rt0 INNER JOIN t0 ON (('20438558') ISNULL) COLLATE RTRIM GROUP BY t0.c2, rt0.c3, rt0.c1 HAVING (((NOT (SUM(rt0.c2)))) ISNULL);
SELECT ALL t0.c2, rt0.c3, rt0.c1 FROM v0 NOT INDEXED, rt0 INNER JOIN t0 ON (('20438558') ISNULL) COLLATE RTRIM GROUP BY t0.c2, rt0.c3, rt0.c1;
SELECT ALL t0.c0, rt0.c2 FROM t0, v0 CROSS JOIN vt0 ON ((((CAST(rt0.c3 AS TEXT))OR(((rt0.c1) NOT NULL))))AND(COALESCE(v0.c0, rt0.c1, rt0.c3, v0.c1, vt0.c0, x''))) CROSS JOIN rt0 ON CASE (+ (rt0.c3))  WHEN (+ (x'')) THEN TYPEOF(t0.c0) END;
SELECT t0.c0, rt0.c2 FROM t0, v0 CROSS JOIN vt0 ON ((((CAST(rt0.c3 AS TEXT))OR(((rt0.c1) NOT NULL))))AND(COALESCE(v0.c0, rt0.c1, rt0.c3, v0.c1, vt0.c0, x''))) CROSS JOIN rt0 ON CASE (+ (rt0.c3))  WHEN (+ (x'')) THEN TYPEOF(t0.c0) END WHERE (CASE WHEN ((rt0.c3)>>(t0.c2)) THEN ((rt0.c2)%(rt0.c1)) END) UNION ALL SELECT ALL t0.c0, rt0.c2 FROM t0, v0 CROSS JOIN vt0 ON ((((CAST(rt0.c3 AS TEXT))OR(((rt0.c1) NOT NULL))))AND(COALESCE(v0.c0, rt0.c1, rt0.c3, v0.c1, vt0.c0, x''))) CROSS JOIN rt0 ON CASE (+ (rt0.c3))  WHEN (+ (x'')) THEN TYPEOF(t0.c0) END WHERE ((NOT (CASE WHEN ((rt0.c3)>>(t0.c2)) THEN ((rt0.c2)%(rt0.c1)) END))) UNION ALL SELECT t0.c0, rt0.c2 FROM t0, v0 CROSS JOIN vt0 ON ((((CAST(rt0.c3 AS TEXT))OR(((rt0.c1) NOT NULL))))AND(COALESCE(v0.c0, rt0.c1, rt0.c3, v0.c1, vt0.c0, x''))) CROSS JOIN rt0 ON CASE (+ (rt0.c3))  WHEN (+ (x'')) THEN TYPEOF(t0.c0) END WHERE (((CASE WHEN ((rt0.c3)>>(t0.c2)) THEN ((rt0.c2)%(rt0.c1)) END) ISNULL));
SELECT ALL t0.c0, rt0.c2 FROM t0, v0 CROSS JOIN vt0 ON ((((CAST(rt0.c3 AS TEXT))OR(((rt0.c1) NOT NULL))))AND(COALESCE(v0.c0, rt0.c1, rt0.c3, v0.c1, vt0.c0, x''))) CROSS JOIN rt0 ON CASE (+ (rt0.c3))  WHEN (+ (x'')) THEN TYPEOF(t0.c0) END;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE ((+ (v0.c2)) COLLATE RTRIM COLLATE RTRIM) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT ((+ (v0.c2)) COLLATE RTRIM COLLATE RTRIM))) UNION SELECT DISTINCT * FROM v0 WHERE ((((+ (v0.c2)) COLLATE RTRIM COLLATE RTRIM) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT v0.c0, v0.c1, vt0.c0, vt0.c1, v0.c2 FROM vt0, v0 GROUP BY v0.c0, v0.c1, vt0.c0, vt0.c1, v0.c2;
SELECT v0.c0, v0.c1, vt0.c0, vt0.c1, v0.c2 FROM vt0, v0 WHERE ((((((v0.c2) ISNULL)))<(('' COLLATE NOCASE)))) GROUP BY v0.c0, v0.c1, vt0.c0, vt0.c1, v0.c2 UNION SELECT v0.c0, v0.c1, vt0.c0, vt0.c1, v0.c2 FROM vt0, v0 WHERE ((NOT ((((((v0.c2) ISNULL)))<(('' COLLATE NOCASE)))))) GROUP BY v0.c0, v0.c1, vt0.c0, vt0.c1, v0.c2 UNION SELECT v0.c0, v0.c1, vt0.c0, vt0.c1, v0.c2 FROM vt0, v0 WHERE ((((((((v0.c2) ISNULL)))<(('' COLLATE NOCASE)))) ISNULL)) GROUP BY v0.c0, v0.c1, vt0.c0, vt0.c1, v0.c2;
SELECT v0.c0, v0.c1, vt0.c0, vt0.c1, v0.c2 FROM vt0, v0 GROUP BY v0.c0, v0.c1, vt0.c0, vt0.c1, v0.c2;
SELECT t0.c2, rt0.c3, rt0.c2, v0.c2, t0.c0, rt0.c4 FROM t0, v0, rt0, vt0 GROUP BY t0.c2, rt0.c3, rt0.c2, v0.c2, t0.c0, rt0.c4;
SELECT t0.c2, rt0.c3, rt0.c2, v0.c2, t0.c0, rt0.c4 FROM t0, v0, rt0, vt0 GROUP BY t0.c2, rt0.c3, rt0.c2, v0.c2, t0.c0, rt0.c4 HAVING TOTAL(v0.c1) UNION ALL SELECT ALL t0.c2, rt0.c3, rt0.c2, v0.c2, t0.c0, rt0.c4 FROM t0, v0, rt0, vt0 GROUP BY t0.c2, rt0.c3, rt0.c2, v0.c2, t0.c0, rt0.c4 HAVING (NOT (TOTAL(v0.c1))) UNION ALL SELECT t0.c2, rt0.c3, rt0.c2, v0.c2, t0.c0, rt0.c4 FROM t0, v0, rt0, vt0 GROUP BY t0.c2, rt0.c3, rt0.c2, v0.c2, t0.c0, rt0.c4 HAVING ((TOTAL(v0.c1)) ISNULL);
SELECT t0.c2, rt0.c3, rt0.c2, v0.c2, t0.c0, rt0.c4 FROM t0, v0, rt0, vt0 GROUP BY t0.c2, rt0.c3, rt0.c2, v0.c2, t0.c0, rt0.c4;
SELECT t0.c2, rt0.c3, rt0.c2, v0.c2, t0.c0, rt0.c4 FROM t0, v0, rt0, vt0 GROUP BY t0.c2, rt0.c3, rt0.c2, v0.c2, t0.c0, rt0.c4 HAVING TOTAL(v0.c1) UNION ALL SELECT ALL t0.c2, rt0.c3, rt0.c2, v0.c2, t0.c0, rt0.c4 FROM t0, v0, rt0, vt0 GROUP BY t0.c2, rt0.c3, rt0.c2, v0.c2, t0.c0, rt0.c4 HAVING (NOT (TOTAL(v0.c1))) UNION ALL SELECT t0.c2, rt0.c3, rt0.c2, v0.c2, t0.c0, rt0.c4 FROM t0, v0, rt0, vt0 GROUP BY t0.c2, rt0.c3, rt0.c2, v0.c2, t0.c0, rt0.c4 HAVING ((TOTAL(v0.c1)) ISNULL);
SELECT t0.c2, rt0.c3, rt0.c2, v0.c2, t0.c0, rt0.c4 FROM t0, v0, rt0, vt0 GROUP BY t0.c2, rt0.c3, rt0.c2, v0.c2, t0.c0, rt0.c4;
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE ((rt0.c0 IN ()) COLLATE NOCASE) UNION ALL SELECT * FROM rt0 WHERE ((NOT ((rt0.c0 IN ()) COLLATE NOCASE))) UNION ALL SELECT ALL * FROM rt0 WHERE ((((rt0.c0 IN ()) COLLATE NOCASE) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT vt0.c1, rt0.c2, rt0.c0, rt0.c4, vt0.c0, rt0.c3, rt0.c1 FROM vt0, rt0;
SELECT DISTINCT vt0.c1, rt0.c2, rt0.c0, rt0.c4, vt0.c0, rt0.c3, rt0.c1 FROM vt0, rt0 WHERE (((rt0.c0 COLLATE BINARY)LIKE((((0.9026557326598905))=((rt0.c4)))))) UNION SELECT DISTINCT vt0.c1, rt0.c2, rt0.c0, rt0.c4, vt0.c0, rt0.c3, rt0.c1 FROM vt0, rt0 WHERE ((NOT (((rt0.c0 COLLATE BINARY)LIKE((((0.9026557326598905))==((rt0.c4)))))))) UNION SELECT DISTINCT vt0.c1, rt0.c2, rt0.c0, rt0.c4, vt0.c0, rt0.c3, rt0.c1 FROM vt0, rt0 WHERE (((((rt0.c0 COLLATE BINARY)LIKE((((0.9026557326598905))=((rt0.c4)))))) ISNULL));
SELECT DISTINCT vt0.c1, rt0.c2, rt0.c0, rt0.c4, vt0.c0, rt0.c3, rt0.c1 FROM vt0, rt0;
SELECT rt0.c2 FROM t0, rt0, vt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM t0, rt0, vt0 WHERE ((((rt0.c1, rt0.c3, rt0.c3)) BETWEEN (('1905319206', (('150788185') BETWEEN (rt0.c0) AND (t0.c0)), vt0.c1 COLLATE BINARY)) AND ((CAST(rt0.c0 AS NUMERIC), ((rt0.c1) IS TRUE), (- (rt0.c2)))))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM t0, rt0, vt0 WHERE ((NOT ((((rt0.c1, rt0.c3, rt0.c3)) BETWEEN (('1905319206', (('150788185') BETWEEN (rt0.c0) AND (t0.c0)), vt0.c1 COLLATE BINARY)) AND ((CAST(rt0.c0 AS NUMERIC), ((rt0.c1) IS TRUE), (- (rt0.c2)))))))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM t0, rt0, vt0 WHERE ((((((rt0.c1, rt0.c3, rt0.c3)) BETWEEN (('1905319206', (('150788185') BETWEEN (rt0.c0) AND (t0.c0)), vt0.c1 COLLATE BINARY)) AND ((CAST(rt0.c0 AS NUMERIC), ((rt0.c1) IS TRUE), (- (rt0.c2)))))) ISNULL)) GROUP BY rt0.c2;
SELECT rt0.c2 FROM t0, rt0, vt0 GROUP BY rt0.c2;
SELECT rt0.c0, rt0.c4, rt0.c3, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c4, rt0.c3, rt0.c2, rt0.c1;
SELECT ALL rt0.c0, rt0.c4, rt0.c3, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c4, rt0.c3, rt0.c2, rt0.c1 HAVING COUNT(COUNT(*)) UNION ALL SELECT ALL rt0.c0, rt0.c4, rt0.c3, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c4, rt0.c3, rt0.c2, rt0.c1 HAVING (NOT (COUNT(COUNT(*)))) UNION ALL SELECT rt0.c0, rt0.c4, rt0.c3, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c4, rt0.c3, rt0.c2, rt0.c1 HAVING ((COUNT(COUNT(*))) ISNULL);
SELECT * FROM rt0, t0, v0, vt0;
SELECT ALL * FROM rt0, t0, v0, vt0 WHERE (rtreenode(((((vt0.c1)AND(rt0.c1)))OR(-1231731705)), (((v0.c1)) NOT BETWEEN ((t0.c2)) AND ((0.1410631213153074))))) UNION ALL SELECT ALL * FROM rt0, t0, v0 NOT INDEXED, vt0 WHERE ((NOT (rtreenode(((((vt0.c1)AND(rt0.c1)))OR(-1231731705)), (((v0.c1)) NOT BETWEEN ((t0.c2)) AND ((0.1410631213153074))))))) UNION ALL SELECT * FROM rt0, t0, v0, vt0 WHERE (((rtreenode(((((vt0.c1)AND(rt0.c1)))OR(-1231731705)), (((v0.c1)) NOT BETWEEN ((t0.c2)) AND ((0.1410631213153074))))) ISNULL));
SELECT * FROM rt0, t0, v0, vt0;
SELECT DISTINCT * FROM v0 NOT INDEXED, t0, vt0, rt0;
SELECT DISTINCT * FROM v0, t0, vt0, rt0 WHERE (((CAST(v0.c0 AS REAL))AND(((((((((v0.c2)OR('j,')))AND(vt0.c1)))OR(t0.c0)))AND(rt0.c0))))) UNION SELECT DISTINCT * FROM v0, t0, vt0, rt0 WHERE ((NOT (((CAST(v0.c0 AS REAL))AND(((((((((v0.c2)OR('j,')))AND(vt0.c1)))OR(t0.c0)))AND(rt0.c0))))))) UNION SELECT DISTINCT * FROM v0, t0, vt0, rt0 WHERE (((((CAST(v0.c0 AS REAL))AND(((((((((v0.c2)OR('j,')))AND(vt0.c1)))OR(t0.c0)))AND(rt0.c0))))) ISNULL));
SELECT DISTINCT * FROM v0 NOT INDEXED, t0, vt0, rt0;
SELECT vt0.c0, vt0.c1, rt0.c0, rt0.c3, v0.c0 FROM rt0, vt0, v0, t0 GROUP BY vt0.c0, vt0.c1, rt0.c0, rt0.c3, v0.c0;
SELECT vt0.c0, vt0.c1, rt0.c0, rt0.c3, v0.c0 FROM rt0, vt0, v0, t0 WHERE ((rt0.c0 COLLATE BINARY IN ())) GROUP BY vt0.c0, vt0.c1, rt0.c0, rt0.c3, v0.c0 UNION SELECT vt0.c0, vt0.c1, rt0.c0, rt0.c3, v0.c0 FROM rt0, vt0, v0, t0 WHERE ((NOT ((rt0.c0 COLLATE BINARY IN ())))) GROUP BY vt0.c0, vt0.c1, rt0.c0, rt0.c3, v0.c0 UNION SELECT ALL vt0.c0, vt0.c1, rt0.c0, rt0.c3, v0.c0 FROM rt0, vt0, v0, t0 WHERE ((((rt0.c0 COLLATE BINARY IN ())) ISNULL)) GROUP BY vt0.c0, vt0.c1, rt0.c0, rt0.c3, v0.c0;
SELECT vt0.c0, vt0.c1, rt0.c0, rt0.c3, v0.c0 FROM rt0, vt0, v0, t0 GROUP BY vt0.c0, vt0.c1, rt0.c0, rt0.c3, v0.c0;
SELECT v0.c0 FROM v0, vt0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0, vt0 GROUP BY v0.c0 HAVING MIN(((v0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0))) UNION ALL SELECT ALL v0.c0 FROM v0, vt0 GROUP BY v0.c0 HAVING (NOT (MIN(((v0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0))))) UNION ALL SELECT ALL v0.c0 FROM v0, vt0 GROUP BY v0.c0 HAVING ((MIN(((v0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0)))) ISNULL);
SELECT v0.c0 FROM v0, vt0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0, vt0 GROUP BY v0.c0 HAVING MIN(((v0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0))) UNION ALL SELECT ALL v0.c0 FROM v0, vt0 GROUP BY v0.c0 HAVING (NOT (MIN(((v0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0))))) UNION ALL SELECT ALL v0.c0 FROM v0, vt0 GROUP BY v0.c0 HAVING ((MIN(((v0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0)))) ISNULL);
SELECT v0.c0 FROM v0, vt0 GROUP BY v0.c0;
SELECT ALL v0.c1, v0.c0 FROM v0;
SELECT v0.c1, v0.c0 FROM v0 WHERE (((NULL)>=(v0.c1 COLLATE BINARY))) UNION ALL SELECT ALL v0.c1, v0.c0 FROM v0 WHERE ((NOT (((NULL)>=(v0.c1 COLLATE BINARY))))) UNION ALL SELECT ALL v0.c1, v0.c0 FROM v0 WHERE (((((NULL)>=(v0.c1 COLLATE BINARY))) ISNULL));
SELECT ALL v0.c1, v0.c0 FROM v0;
SELECT DISTINCT * FROM t0 CROSS JOIN rt0 ON (((t0.c2)) BETWEEN ((((rt0.c4) NOT NULL))) AND ((rt0.c2)));
SELECT DISTINCT * FROM t0 CROSS JOIN rt0 ON (((t0.c2)) BETWEEN ((((rt0.c4) NOT NULL))) AND ((rt0.c2))) WHERE (CAST(CASE WHEN rt0.c3 THEN t0.c0 ELSE t0.c2 END AS REAL)) UNION SELECT DISTINCT * FROM t0 CROSS JOIN rt0 ON (((t0.c2)) BETWEEN ((((rt0.c4) NOT NULL))) AND ((rt0.c2))) WHERE ((NOT (CAST(CASE WHEN rt0.c3 THEN t0.c0 ELSE t0.c2 END AS REAL)))) UNION SELECT DISTINCT * FROM t0 CROSS JOIN rt0 ON (((t0.c2)) BETWEEN ((((rt0.c4) NOT NULL))) AND ((rt0.c2))) WHERE (((CAST(CASE WHEN rt0.c3 THEN t0.c0 ELSE t0.c2 END AS REAL)) ISNULL));
SELECT DISTINCT * FROM t0 CROSS JOIN rt0 ON (((t0.c2)) BETWEEN ((((rt0.c4) NOT NULL))) AND ((rt0.c2)));
SELECT vt0.c0, rt0.c1, rt0.c4 FROM rt0 CROSS JOIN vt0 ON CASE (NOT (rt0.c4))  WHEN (- (rt0.c2)) THEN (rt0.c2 IN ()) ELSE CASE WHEN vt0.c0 THEN rt0.c2 ELSE rt0.c2 END END GROUP BY vt0.c0, rt0.c1, rt0.c4;
SELECT vt0.c0, rt0.c1, rt0.c4 FROM rt0 CROSS JOIN vt0 ON CASE (NOT (rt0.c4))  WHEN (- (rt0.c2)) THEN (rt0.c2 IN ()) ELSE CASE WHEN vt0.c0 THEN rt0.c2 ELSE rt0.c2 END END WHERE (CASE 0X4a332434  WHEN (rt0.c0 IN (rt0.c3)) THEN (NULL IN (rt0.c0)) ELSE rt0.c0 END) GROUP BY vt0.c0, rt0.c1, rt0.c4 UNION SELECT ALL vt0.c0, rt0.c1, rt0.c4 FROM rt0 CROSS JOIN vt0 ON CASE (NOT (rt0.c4))  WHEN (- (rt0.c2)) THEN (rt0.c2 IN ()) ELSE CASE WHEN vt0.c0 THEN rt0.c2 ELSE rt0.c2 END END WHERE ((NOT (CASE 0X4a332434  WHEN (rt0.c0 IN (rt0.c3)) THEN (NULL IN (rt0.c0)) ELSE rt0.c0 END))) GROUP BY vt0.c0, rt0.c1, rt0.c4 UNION SELECT ALL vt0.c0, rt0.c1, rt0.c4 FROM rt0 CROSS JOIN vt0 ON CASE (NOT (rt0.c4))  WHEN (- (rt0.c2)) THEN (rt0.c2 IN ()) ELSE CASE WHEN vt0.c0 THEN rt0.c2 ELSE rt0.c2 END END WHERE (((CASE 0X4a332434  WHEN (rt0.c0 IN (rt0.c3)) THEN (NULL IN (rt0.c0)) ELSE rt0.c0 END) ISNULL)) GROUP BY vt0.c0, rt0.c1, rt0.c4;
SELECT vt0.c0, rt0.c1, rt0.c4 FROM rt0 CROSS JOIN vt0 ON CASE (NOT (rt0.c4))  WHEN (- (rt0.c2)) THEN (rt0.c2 IN ()) ELSE CASE WHEN vt0.c0 THEN rt0.c2 ELSE rt0.c2 END END GROUP BY vt0.c0, rt0.c1, rt0.c4;
SELECT v0.c2, rt0.c3, rt0.c0, rt0.c2, rt0.c4, v0.c1, rt0.c1 FROM rt0, v0 GROUP BY v0.c2, rt0.c3, rt0.c0, rt0.c2, rt0.c4, v0.c1, rt0.c1;
SELECT ALL v0.c2, rt0.c3, rt0.c0, rt0.c2, rt0.c4, v0.c1, rt0.c1 FROM rt0, v0 GROUP BY v0.c2, rt0.c3, rt0.c0, rt0.c2, rt0.c4, v0.c1, rt0.c1 HAVING GROUP_CONCAT(((rt0.c2)-(rt0.c4))) UNION ALL SELECT ALL v0.c2, rt0.c3, rt0.c0, rt0.c2, rt0.c4, v0.c1, rt0.c1 FROM rt0, v0 GROUP BY v0.c2, rt0.c3, rt0.c0, rt0.c2, rt0.c4, v0.c1, rt0.c1 HAVING (NOT (GROUP_CONCAT(((rt0.c2)-(rt0.c4))))) UNION ALL SELECT v0.c2, rt0.c3, rt0.c0, rt0.c2, rt0.c4, v0.c1, rt0.c1 FROM rt0, v0 GROUP BY v0.c2, rt0.c3, rt0.c0, rt0.c2, rt0.c4, v0.c1, rt0.c1 HAVING ((GROUP_CONCAT(((rt0.c2)-(rt0.c4)))) ISNULL);
SELECT v0.c2, rt0.c3, rt0.c0, rt0.c2, rt0.c4, v0.c1, rt0.c1 FROM rt0, v0 GROUP BY v0.c2, rt0.c3, rt0.c0, rt0.c2, rt0.c4, v0.c1, rt0.c1;
SELECT ALL v0.c2, rt0.c3, rt0.c0, rt0.c2, rt0.c4, v0.c1, rt0.c1 FROM rt0, v0 GROUP BY v0.c2, rt0.c3, rt0.c0, rt0.c2, rt0.c4, v0.c1, rt0.c1 HAVING GROUP_CONCAT(((rt0.c2)-(rt0.c4))) UNION ALL SELECT ALL v0.c2, rt0.c3, rt0.c0, rt0.c2, rt0.c4, v0.c1, rt0.c1 FROM rt0, v0 GROUP BY v0.c2, rt0.c3, rt0.c0, rt0.c2, rt0.c4, v0.c1, rt0.c1 HAVING (NOT (GROUP_CONCAT(((rt0.c2)-(rt0.c4))))) UNION ALL SELECT v0.c2, rt0.c3, rt0.c0, rt0.c2, rt0.c4, v0.c1, rt0.c1 FROM rt0, v0 GROUP BY v0.c2, rt0.c3, rt0.c0, rt0.c2, rt0.c4, v0.c1, rt0.c1 HAVING ((GROUP_CONCAT(((rt0.c2)-(rt0.c4)))) ISNULL);
SELECT v0.c2, rt0.c3, rt0.c0, rt0.c2, rt0.c4, v0.c1, rt0.c1 FROM rt0, v0 GROUP BY v0.c2, rt0.c3, rt0.c0, rt0.c2, rt0.c4, v0.c1, rt0.c1;
SELECT ALL vt0.c0, v0.c2, v0.c1 FROM v0, vt0;
SELECT vt0.c0, v0.c2, v0.c1 FROM v0, vt0 WHERE ((NOT (((((((((((((vt0.c0)AND(v0.c0)))AND(v0.c0)))OR(vt0.c0)))AND(v0.c1)))OR(vt0.c0)))AND(v0.c1))))) UNION ALL SELECT ALL vt0.c0, v0.c2, v0.c1 FROM v0, vt0 WHERE ((NOT ((NOT (((((((((((((vt0.c0)AND(v0.c0)))AND(v0.c0)))OR(vt0.c0)))AND(v0.c1)))OR(vt0.c0)))AND(v0.c1))))))) UNION ALL SELECT vt0.c0, v0.c2, v0.c1 FROM v0, vt0 WHERE ((((NOT (((((((((((((vt0.c0)AND(v0.c0)))AND(v0.c0)))OR(vt0.c0)))AND(v0.c1)))OR(vt0.c0)))AND(v0.c1))))) ISNULL));
SELECT ALL vt0.c0, v0.c2, v0.c1 FROM v0, vt0;
SELECT DISTINCT * FROM t0, rt0 FULL OUTER JOIN v0 ON v0.c0 RIGHT OUTER JOIN vt0 ON ((((((((((vt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0)))AND((NOT (rt0.c2)))))AND((((rt0.c3))<=((rt0.c0))))))AND((t0.c2 IN ()))))OR(rt0.c1 COLLATE NOCASE));
SELECT DISTINCT * FROM t0, rt0 FULL OUTER JOIN v0 ON v0.c0 RIGHT OUTER JOIN vt0 ON ((((((((((vt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0)))AND((NOT (rt0.c2)))))AND((((rt0.c3))<=((rt0.c0))))))AND((t0.c2 IN ()))))OR(rt0.c1 COLLATE NOCASE)) WHERE (((rt0.c1) IS TRUE)) UNION SELECT DISTINCT * FROM t0, rt0 FULL OUTER JOIN v0 ON v0.c0 RIGHT OUTER JOIN vt0 ON ((((((((((vt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0)))AND((NOT (rt0.c2)))))AND((((rt0.c3))<=((rt0.c0))))))AND((t0.c2 IN ()))))OR(rt0.c1 COLLATE NOCASE)) WHERE ((NOT (((rt0.c1) IS TRUE)))) UNION SELECT DISTINCT * FROM t0, rt0 FULL OUTER JOIN v0 ON v0.c0 RIGHT OUTER JOIN vt0 ON ((((((((((vt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0)))AND((NOT (rt0.c2)))))AND((((rt0.c3))<=((rt0.c0))))))AND((t0.c2 IN ()))))OR(rt0.c1 COLLATE NOCASE)) WHERE (((((rt0.c1) IS TRUE)) ISNULL));
SELECT DISTINCT * FROM t0, rt0 FULL OUTER JOIN v0 ON v0.c0 RIGHT OUTER JOIN vt0 ON ((((((((((vt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0)))AND((NOT (rt0.c2)))))AND((((rt0.c3))<=((rt0.c0))))))AND((t0.c2 IN ()))))OR(rt0.c1 COLLATE NOCASE));
SELECT ALL v0.c1, rt0.c4, t0.c2, rt0.c0, v0.c0 FROM v0 CROSS JOIN vt0 ON CAST(x'' AS INTEGER) FULL OUTER JOIN t0 ON ((((rt0.c0) NOTNULL)) NOT BETWEEN (CASE rt0.c4  WHEN v0.c1 THEN rt0.c0 ELSE rt0.c3 END) AND (CAST(rt0.c4 AS NUMERIC))) INNER JOIN rt0 ON ((v0.c2 COLLATE NOCASE)|(CASE WHEN v0.c1 THEN v0.c1 WHEN vt0.c0 THEN v0.c0 WHEN vt0.c1 THEN t0.c2 ELSE vt0.c1 END)) GROUP BY v0.c1, rt0.c4, t0.c2, rt0.c0, v0.c0;
SELECT rt0.c4, vt0.c0, t0.c0 FROM t0, rt0, vt0 GROUP BY rt0.c4, vt0.c0, t0.c0;
SELECT rt0.c4, vt0.c0, t0.c0 FROM t0, rt0, vt0 GROUP BY rt0.c4, vt0.c0, t0.c0 HAVING CAST(SUM(vt0.c0) COLLATE RTRIM AS REAL) UNION ALL SELECT ALL rt0.c4, vt0.c0, t0.c0 FROM t0, rt0, vt0 GROUP BY rt0.c4, vt0.c0, t0.c0 HAVING (NOT (CAST(SUM(vt0.c0) COLLATE RTRIM AS REAL))) UNION ALL SELECT rt0.c4, vt0.c0, t0.c0 FROM t0, rt0, vt0 GROUP BY rt0.c4, vt0.c0, t0.c0 HAVING ((CAST(SUM(vt0.c0) COLLATE RTRIM AS REAL)) ISNULL);
SELECT rt0.c4, vt0.c0, t0.c0 FROM t0, rt0, vt0 GROUP BY rt0.c4, vt0.c0, t0.c0;
SELECT rt0.c4, vt0.c0, t0.c0 FROM t0, rt0, vt0 GROUP BY rt0.c4, vt0.c0, t0.c0 HAVING CAST(SUM(vt0.c0) COLLATE RTRIM AS REAL) UNION ALL SELECT ALL rt0.c4, vt0.c0, t0.c0 FROM t0, rt0, vt0 GROUP BY rt0.c4, vt0.c0, t0.c0 HAVING (NOT (CAST(SUM(vt0.c0) COLLATE RTRIM AS REAL))) UNION ALL SELECT rt0.c4, vt0.c0, t0.c0 FROM t0, rt0, vt0 GROUP BY rt0.c4, vt0.c0, t0.c0 HAVING ((CAST(SUM(vt0.c0) COLLATE RTRIM AS REAL)) ISNULL);
SELECT rt0.c4, vt0.c0, t0.c0 FROM t0, rt0, vt0 GROUP BY rt0.c4, vt0.c0, t0.c0;
SELECT ALL rt0.c3, rt0.c2, rt0.c0, rt0.c1, rt0.c4 FROM rt0;
SELECT ALL rt0.c3, rt0.c2, rt0.c0, rt0.c1, rt0.c4 FROM rt0 WHERE (((((rt0.c1) NOT NULL)) NOTNULL)) UNION ALL SELECT ALL rt0.c3, rt0.c2, rt0.c0, rt0.c1, rt0.c4 FROM rt0 WHERE ((NOT (((((rt0.c1) NOT NULL)) NOTNULL)))) UNION ALL SELECT rt0.c3, rt0.c2, rt0.c0, rt0.c1, rt0.c4 FROM rt0 WHERE (((((((rt0.c1) NOT NULL)) NOTNULL)) ISNULL));
SELECT ALL rt0.c3, rt0.c2, rt0.c0, rt0.c1, rt0.c4 FROM rt0;
SELECT DISTINCT rt0.c3, v0.c0, rt0.c2, vt0.c0, v0.c2 FROM vt0, v0, rt0, t0;
SELECT DISTINCT rt0.c3, v0.c0, rt0.c2, vt0.c0, v0.c2 FROM vt0, v0, rt0, t0 WHERE ((LOWER(rt0.c0) IN (((rt0.c2)|(v0.c2))))) UNION SELECT DISTINCT rt0.c3, v0.c0, rt0.c2, vt0.c0, v0.c2 FROM vt0, v0, rt0, t0 WHERE ((NOT ((LOWER(rt0.c0) IN (((rt0.c2)|(v0.c2))))))) UNION SELECT DISTINCT rt0.c3, v0.c0, rt0.c2, vt0.c0, v0.c2 FROM vt0, v0, rt0, t0 WHERE ((((LOWER(rt0.c0) IN (((rt0.c2)|(v0.c2))))) ISNULL));
SELECT DISTINCT rt0.c3, v0.c0, rt0.c2, vt0.c0, v0.c2 FROM vt0, v0, rt0, t0;
SELECT rt0.c0 FROM rt0 RIGHT OUTER JOIN t0 ON (((((((((((v0.c2))>=((vt0.c1))))OR(rt0.c0)))AND(MAX(rt0.c4, rt0.c4, rt0.c4, vt0.c0))))OR((rt0.c4 IN ()))))OR(((v0.c0) IS FALSE))) INNER JOIN v0 ON LENGTH(t0.c2) RIGHT OUTER JOIN vt0 ON ((('0.10897637622839418') IS FALSE) IN ()) GROUP BY rt0.c0;
SELECT v0.c1, v0.c2, rt0.c3, rt0.c1, v0.c0, rt0.c4, rt0.c2, rt0.c0 FROM rt0, v0 GROUP BY v0.c1, v0.c2, rt0.c3, rt0.c1, v0.c0, rt0.c4, rt0.c2, rt0.c0;
SELECT v0.c1, v0.c2, rt0.c3, rt0.c1, v0.c0, rt0.c4, rt0.c2, rt0.c0 FROM rt0, v0 GROUP BY v0.c1, v0.c2, rt0.c3, rt0.c1, v0.c0, rt0.c4, rt0.c2, rt0.c0 HAVING ((AVG(MAX(SUM(MIN('1840380902')))))%(rt0.c4 COLLATE BINARY)) UNION ALL SELECT v0.c1, v0.c2, rt0.c3, rt0.c1, v0.c0, rt0.c4, rt0.c2, rt0.c0 FROM rt0, v0 GROUP BY v0.c1, v0.c2, rt0.c3, rt0.c1, v0.c0, rt0.c4, rt0.c2, rt0.c0 HAVING (NOT (((AVG(MAX(SUM(MIN('1840380902')))))%(rt0.c4 COLLATE BINARY)))) UNION ALL SELECT ALL v0.c1, v0.c2, rt0.c3, rt0.c1, v0.c0, rt0.c4, rt0.c2, rt0.c0 FROM rt0, v0 GROUP BY v0.c1, v0.c2, rt0.c3, rt0.c1, v0.c0, rt0.c4, rt0.c2, rt0.c0 HAVING ((((AVG(MAX(SUM(MIN('1840380902')))))%(rt0.c4 COLLATE BINARY))) ISNULL);
SELECT t0.c2, vt0.c1 FROM t0, vt0;
SELECT ALL t0.c2, vt0.c1 FROM t0, vt0 WHERE (CAST(CAST(vt0.c0 AS NUMERIC) AS TEXT)) UNION ALL SELECT t0.c2, vt0.c1 FROM t0, vt0 WHERE ((NOT (CAST(CAST(vt0.c0 AS NUMERIC) AS TEXT)))) UNION ALL SELECT ALL t0.c2, vt0.c1 FROM t0, vt0 WHERE (((CAST(CAST(vt0.c0 AS NUMERIC) AS TEXT)) ISNULL));
SELECT t0.c2, vt0.c1 FROM t0, vt0;
SELECT DISTINCT v0.c1 FROM v0, t0, vt0;
SELECT DISTINCT v0.c1 FROM v0, t0, vt0 WHERE (((((((v0.c1)&(v0.c0)))AND((vt0.c0 IN ()))))AND(v0.c0))) UNION SELECT DISTINCT v0.c1 FROM v0, t0, vt0 WHERE ((NOT (((((((v0.c1)&(v0.c0)))AND((vt0.c0 IN ()))))AND(v0.c0))))) UNION SELECT DISTINCT v0.c1 FROM v0, t0, vt0 WHERE (((((((((v0.c1)&(v0.c0)))AND((vt0.c0 IN ()))))AND(v0.c0))) ISNULL));
SELECT DISTINCT v0.c1 FROM v0, t0, vt0;
SELECT ALL v0.c0, rt0.c1, v0.c1, rt0.c4 FROM v0, rt0 GROUP BY v0.c0, rt0.c1, v0.c1, rt0.c4;
SELECT v0.c0, rt0.c1, v0.c1, rt0.c4 FROM v0, rt0 WHERE ('-911173953') GROUP BY v0.c0, rt0.c1, v0.c1, rt0.c4 UNION SELECT ALL v0.c0, rt0.c1, v0.c1, rt0.c4 FROM v0, rt0 WHERE ((NOT ('-911173953'))) GROUP BY v0.c0, rt0.c1, v0.c1, rt0.c4 UNION SELECT ALL v0.c0, rt0.c1, v0.c1, rt0.c4 FROM v0, rt0 WHERE ((('-911173953') ISNULL)) GROUP BY v0.c0, rt0.c1, v0.c1, rt0.c4;
SELECT ALL v0.c0, rt0.c1, v0.c1, rt0.c4 FROM v0, rt0 GROUP BY v0.c0, rt0.c1, v0.c1, rt0.c4;
SELECT rt0.c0, vt0.c0, rt0.c3, t0.c0 FROM rt0, v0, t0, vt0 NOT INDEXED GROUP BY rt0.c0, vt0.c0, rt0.c3, t0.c0;
SELECT rt0.c0, vt0.c0, rt0.c3, t0.c0 FROM rt0, v0, t0, vt0 GROUP BY rt0.c0, vt0.c0, rt0.c3, t0.c0 HAVING 0X2c317c46 UNION ALL SELECT ALL rt0.c0, vt0.c0, rt0.c3, t0.c0 FROM rt0, v0, t0, vt0 GROUP BY rt0.c0, vt0.c0, rt0.c3, t0.c0 HAVING (NOT (0X2c317c46)) UNION ALL SELECT ALL rt0.c0, vt0.c0, rt0.c3, t0.c0 FROM rt0, v0, t0, vt0 GROUP BY rt0.c0, vt0.c0, rt0.c3, t0.c0 HAVING ((0x2c317c46) ISNULL);
SELECT rt0.c0, vt0.c0, rt0.c3, t0.c0 FROM rt0, v0, t0, vt0 NOT INDEXED GROUP BY rt0.c0, vt0.c0, rt0.c3, t0.c0;
SELECT rt0.c0, vt0.c0, rt0.c3, t0.c0 FROM rt0, v0, t0, vt0 GROUP BY rt0.c0, vt0.c0, rt0.c3, t0.c0 HAVING 0X2c317c46 UNION ALL SELECT ALL rt0.c0, vt0.c0, rt0.c3, t0.c0 FROM rt0, v0, t0, vt0 GROUP BY rt0.c0, vt0.c0, rt0.c3, t0.c0 HAVING (NOT (0X2c317c46)) UNION ALL SELECT ALL rt0.c0, vt0.c0, rt0.c3, t0.c0 FROM rt0, v0, t0, vt0 GROUP BY rt0.c0, vt0.c0, rt0.c3, t0.c0 HAVING ((0x2c317c46) ISNULL);
SELECT rt0.c0, vt0.c0, rt0.c3, t0.c0 FROM rt0, v0, t0, vt0 NOT INDEXED GROUP BY rt0.c0, vt0.c0, rt0.c3, t0.c0;
SELECT * FROM vt0 FULL OUTER JOIN v0 ON '';
SELECT * FROM vt0 FULL OUTER JOIN v0 ON '' WHERE (CASE WHEN (((vt0.c1, v0.c0, v0.c2)) BETWEEN ((v0.c1, vt0.c0, vt0.c0)) AND ((vt0.c1, vt0.c0, vt0.c0))) THEN ((v0.c0) BETWEEN (vt0.c1) AND (vt0.c1)) ELSE vt0.c0 COLLATE BINARY END) UNION ALL SELECT * FROM vt0 FULL OUTER JOIN v0 ON '' WHERE ((NOT (CASE WHEN (((vt0.c1, v0.c0, v0.c2)) BETWEEN ((v0.c1, vt0.c0, vt0.c0)) AND ((vt0.c1, vt0.c0, vt0.c0))) THEN ((v0.c0) BETWEEN (vt0.c1) AND (vt0.c1)) ELSE vt0.c0 COLLATE BINARY END))) UNION ALL SELECT * FROM vt0 FULL OUTER JOIN v0 ON '' WHERE (((CASE WHEN (((vt0.c1, v0.c0, v0.c2)) BETWEEN ((v0.c1, vt0.c0, vt0.c0)) AND ((vt0.c1, vt0.c0, vt0.c0))) THEN ((v0.c0) BETWEEN (vt0.c1) AND (vt0.c1)) ELSE vt0.c0 COLLATE BINARY END) ISNULL));
SELECT * FROM vt0 FULL OUTER JOIN v0 ON '';
SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0;
SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0 WHERE (((((vt0.c1)GLOB(vt0.c1))) IS TRUE)) UNION SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0 WHERE ((NOT (((((vt0.c1)GLOB(vt0.c1))) IS TRUE)))) UNION SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0 WHERE (((((((vt0.c1)GLOB(vt0.c1))) IS TRUE)) ISNULL));
SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0;
SELECT ALL rt0.c2, rt0.c4, v0.c1 FROM rt0, v0 GROUP BY rt0.c2, rt0.c4, v0.c1;
SELECT rt0.c2, rt0.c4, v0.c1 FROM rt0, v0 WHERE (CAST(v0.c0 COLLATE RTRIM AS INTEGER)) GROUP BY rt0.c2, rt0.c4, v0.c1 UNION SELECT ALL rt0.c2, rt0.c4, v0.c1 FROM rt0, v0 WHERE ((NOT (CAST(v0.c0 COLLATE RTRIM AS INTEGER)))) GROUP BY rt0.c2, rt0.c4, v0.c1 UNION SELECT rt0.c2, rt0.c4, v0.c1 FROM rt0, v0 WHERE (((CAST(v0.c0 COLLATE RTRIM AS INTEGER)) ISNULL)) GROUP BY rt0.c2, rt0.c4, v0.c1;
SELECT ALL rt0.c2, rt0.c4, v0.c1 FROM rt0, v0 GROUP BY rt0.c2, rt0.c4, v0.c1;
SELECT ALL t0.c0, rt0.c2, rt0.c0 FROM t0, rt0 GROUP BY t0.c0, rt0.c2, rt0.c0;
SELECT t0.c0, rt0.c2, rt0.c0 FROM t0, rt0 GROUP BY t0.c0, rt0.c2, rt0.c0 HAVING 0.23097368692385134 UNION ALL SELECT t0.c0, rt0.c2, rt0.c0 FROM t0, rt0 GROUP BY t0.c0, rt0.c2, rt0.c0 HAVING (NOT (0.23097368692385134)) UNION ALL SELECT ALL t0.c0, rt0.c2, rt0.c0 FROM t0, rt0 GROUP BY t0.c0, rt0.c2, rt0.c0 HAVING ((0.23097368692385134) ISNULL);
SELECT ALL t0.c0, rt0.c2, rt0.c0 FROM t0, rt0 GROUP BY t0.c0, rt0.c2, rt0.c0;
SELECT t0.c0, rt0.c2, rt0.c0 FROM t0, rt0 GROUP BY t0.c0, rt0.c2, rt0.c0 HAVING 0.23097368692385134 UNION ALL SELECT t0.c0, rt0.c2, rt0.c0 FROM t0, rt0 GROUP BY t0.c0, rt0.c2, rt0.c0 HAVING (NOT (0.23097368692385134)) UNION ALL SELECT ALL t0.c0, rt0.c2, rt0.c0 FROM t0, rt0 GROUP BY t0.c0, rt0.c2, rt0.c0 HAVING ((0.23097368692385134) ISNULL);
SELECT ALL t0.c0, rt0.c2, rt0.c0 FROM t0, rt0 GROUP BY t0.c0, rt0.c2, rt0.c0;
SELECT vt0.c0, vt0.c1 FROM vt0;
SELECT vt0.c0, vt0.c1 FROM vt0 WHERE (CHANGES()) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt0 WHERE ((NOT (CHANGES()))) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt0 WHERE (((CHANGES()) ISNULL));
SELECT vt0.c0, vt0.c1 FROM vt0;
SELECT DISTINCT * FROM rt0, vt0, t0, v0;
SELECT DISTINCT * FROM rt0, vt0, t0, v0 WHERE (((((x'20a1')AND(CASE rt0.c2  WHEN vt0.c1 THEN rt0.c2 WHEN 0.1524599685918504 THEN t0.c0 WHEN v0.c1 THEN rt0.c0 ELSE t0.c2 END)))AND(((0.4045447945636449) NOT BETWEEN (rt0.c3) AND (vt0.c0))))) UNION SELECT DISTINCT * FROM rt0, vt0, t0, v0 WHERE ((NOT (((((x'20a1')AND(CASE rt0.c2  WHEN vt0.c1 THEN rt0.c2 WHEN 0.1524599685918504 THEN t0.c0 WHEN v0.c1 THEN rt0.c0 ELSE t0.c2 END)))AND(((0.4045447945636449) NOT BETWEEN (rt0.c3) AND (vt0.c0))))))) UNION SELECT DISTINCT * FROM rt0, vt0, t0, v0 WHERE (((((((x'20a1')AND(CASE rt0.c2  WHEN vt0.c1 THEN rt0.c2 WHEN 0.1524599685918504 THEN t0.c0 WHEN v0.c1 THEN rt0.c0 ELSE t0.c2 END)))AND(((0.4045447945636449) NOT BETWEEN (rt0.c3) AND (vt0.c0))))) ISNULL));
SELECT DISTINCT * FROM rt0, vt0, t0, v0;
SELECT rt0.c2 FROM vt0, v0 INNER JOIN rt0 ON (NOT ((rt0.c3 IN (-9.35487631E8)))) LEFT OUTER JOIN t0 ON ((CASE vt0.c1  WHEN t0.c0 THEN rt0.c1 ELSE t0.c2 END) BETWEEN (v0.c1 COLLATE NOCASE) AND (((((v0.c0)AND(rt0.c4)))OR(v0.c2)))) GROUP BY rt0.c2;
SELECT rt0.c2 FROM vt0, v0 INNER JOIN rt0 ON (NOT ((rt0.c3 IN (-9.35487631E8)))) LEFT OUTER JOIN t0 ON ((CASE vt0.c1  WHEN t0.c0 THEN rt0.c1 ELSE t0.c2 END) BETWEEN (v0.c1 COLLATE NOCASE) AND (((((v0.c0)AND(rt0.c4)))OR(v0.c2)))) WHERE (CASE (- (vt0.c0))  WHEN ((((rt0.c2)AND(t0.c0)))AND(rt0.c4)) THEN (((vt0.c1))<((v0.c2))) END) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM vt0, v0 INNER JOIN rt0 ON (NOT ((rt0.c3 IN (-9.35487631E8)))) LEFT OUTER JOIN t0 ON ((CASE vt0.c1  WHEN t0.c0 THEN rt0.c1 ELSE t0.c2 END) BETWEEN (v0.c1 COLLATE NOCASE) AND (((((v0.c0)AND(rt0.c4)))OR(v0.c2)))) WHERE ((NOT (CASE (- (vt0.c0))  WHEN ((((rt0.c2)AND(t0.c0)))AND(rt0.c4)) THEN (((vt0.c1))<((v0.c2))) END))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM vt0, v0 INNER JOIN rt0 ON (NOT ((rt0.c3 IN (-9.35487631E8)))) LEFT OUTER JOIN t0 ON ((CASE vt0.c1  WHEN t0.c0 THEN rt0.c1 ELSE t0.c2 END) BETWEEN (v0.c1 COLLATE NOCASE) AND (((((v0.c0)AND(rt0.c4)))OR(v0.c2)))) WHERE (((CASE (- (vt0.c0))  WHEN ((((rt0.c2)AND(t0.c0)))AND(rt0.c4)) THEN (((vt0.c1))<((v0.c2))) END) ISNULL)) GROUP BY rt0.c2;
SELECT rt0.c2 FROM vt0, v0 INNER JOIN rt0 ON (NOT ((rt0.c3 IN (-9.35487631E8)))) LEFT OUTER JOIN t0 ON ((CASE vt0.c1  WHEN t0.c0 THEN rt0.c1 ELSE t0.c2 END) BETWEEN (v0.c1 COLLATE NOCASE) AND (((((v0.c0)AND(rt0.c4)))OR(v0.c2)))) GROUP BY rt0.c2;
SELECT ALL v0.c0, v0.c2 FROM v0 GROUP BY v0.c0, v0.c2;
SELECT v0.c0, v0.c2 FROM v0 GROUP BY v0.c0, v0.c2 HAVING CAST(((MAX(v0.c2)) BETWEEN (GROUP_CONCAT(MIN(AVG(v0.c1)))) AND (COUNT(TOTAL(COUNT(*))))) AS BLOB) UNION ALL SELECT v0.c0, v0.c2 FROM v0 GROUP BY v0.c0, v0.c2 HAVING (NOT (CAST(((MAX(v0.c2)) BETWEEN (GROUP_CONCAT(MIN(AVG(v0.c1)))) AND (COUNT(TOTAL(COUNT(*))))) AS BLOB))) UNION ALL SELECT ALL v0.c0, v0.c2 FROM v0 GROUP BY v0.c0, v0.c2 HAVING ((CAST(((MAX(v0.c2)) BETWEEN (GROUP_CONCAT(MIN(AVG(v0.c1)))) AND (COUNT(TOTAL(COUNT(*))))) AS BLOB)) ISNULL);
SELECT ALL t0.c2, t0.c0, rt0.c0, rt0.c4, rt0.c2, rt0.c1, vt0.c1, vt0.c0, rt0.c3 FROM rt0, vt0, t0;
SELECT ALL t0.c2, t0.c0, rt0.c0, rt0.c4, rt0.c2, rt0.c1, vt0.c1, vt0.c0, rt0.c3 FROM rt0, vt0, t0 WHERE (((((rt0.c0)IS NOT(vt0.c1))) NOT BETWEEN ((((rt0.c1)) BETWEEN ((rt0.c0)) AND ((vt0.c1)))) AND (t0.c0 COLLATE NOCASE))) UNION ALL SELECT ALL t0.c2, t0.c0, rt0.c0, rt0.c4, rt0.c2, rt0.c1, vt0.c1, vt0.c0, rt0.c3 FROM rt0, vt0, t0 WHERE ((NOT (((((rt0.c0)IS NOT(vt0.c1))) NOT BETWEEN ((((rt0.c1)) BETWEEN ((rt0.c0)) AND ((vt0.c1)))) AND (t0.c0 COLLATE NOCASE))))) UNION ALL SELECT t0.c2, t0.c0, rt0.c0, rt0.c4, rt0.c2, rt0.c1, vt0.c1, vt0.c0, rt0.c3 FROM rt0, vt0, t0 WHERE (((((((rt0.c0)IS NOT(vt0.c1))) NOT BETWEEN ((((rt0.c1)) BETWEEN ((rt0.c0)) AND ((vt0.c1)))) AND (t0.c0 COLLATE NOCASE))) ISNULL));
SELECT ALL t0.c2, t0.c0, rt0.c0, rt0.c4, rt0.c2, rt0.c1, vt0.c1, vt0.c0, rt0.c3 FROM rt0, vt0, t0;
SELECT DISTINCT * FROM t0, rt0, vt0;
SELECT DISTINCT * FROM t0, rt0, vt0 WHERE (vt0.c1) UNION SELECT DISTINCT * FROM t0, rt0, vt0 WHERE ((NOT (vt0.c1))) UNION SELECT DISTINCT * FROM t0, rt0, vt0 WHERE (((vt0.c1) ISNULL));
SELECT DISTINCT * FROM t0, rt0, vt0;
SELECT rt0.c1, rt0.c4, rt0.c2, t0.c0 FROM t0, rt0 GROUP BY rt0.c1, rt0.c4, rt0.c2, t0.c0;
SELECT ALL rt0.c1, rt0.c4, rt0.c2, t0.c0 FROM t0, rt0 WHERE ((NOT ((- (t0.c0))))) GROUP BY rt0.c1, rt0.c4, rt0.c2, t0.c0 UNION SELECT ALL rt0.c1, rt0.c4, rt0.c2, t0.c0 FROM t0, rt0 WHERE ((NOT ((NOT ((- (t0.c0))))))) GROUP BY rt0.c1, rt0.c4, rt0.c2, t0.c0 UNION SELECT rt0.c1, rt0.c4, rt0.c2, t0.c0 FROM t0, rt0 WHERE ((((NOT ((- (t0.c0))))) ISNULL)) GROUP BY rt0.c1, rt0.c4, rt0.c2, t0.c0;
SELECT rt0.c1, rt0.c4, rt0.c2, t0.c0 FROM t0, rt0 GROUP BY rt0.c1, rt0.c4, rt0.c2, t0.c0;
SELECT rt0.c3, vt0.c1, t0.c2, t0.c0 FROM t0 CROSS JOIN rt0 ON CASE ((vt0.c1)|(rt0.c2))  WHEN ((x'')GLOB(vt0.c1)) THEN ((t0.c0) NOT BETWEEN (rt0.c4) AND (v0.c0)) END CROSS JOIN vt0 ON CAST(((t0.c0) BETWEEN (v0.c2) AND (t0.c2)) AS INTEGER) LEFT OUTER JOIN v0 ON vt0.c1 GROUP BY rt0.c3, vt0.c1, t0.c2, t0.c0;
SELECT ALL rt0.c3, vt0.c1, t0.c2, t0.c0 FROM t0 CROSS JOIN rt0 ON CASE ((vt0.c1)|(rt0.c2))  WHEN ((x'')GLOB(vt0.c1)) THEN ((t0.c0) NOT BETWEEN (rt0.c4) AND (v0.c0)) END CROSS JOIN vt0 ON CAST(((t0.c0) BETWEEN (v0.c2) AND (t0.c2)) AS INTEGER) LEFT OUTER JOIN v0 ON vt0.c1 GROUP BY rt0.c3, vt0.c1, t0.c2, t0.c0 HAVING MIN(COUNT(v0.c0)) UNION ALL SELECT rt0.c3, vt0.c1, t0.c2, t0.c0 FROM t0 CROSS JOIN rt0 ON CASE ((vt0.c1)|(rt0.c2))  WHEN ((x'')GLOB(vt0.c1)) THEN ((t0.c0) NOT BETWEEN (rt0.c4) AND (v0.c0)) END CROSS JOIN vt0 ON CAST(((t0.c0) BETWEEN (v0.c2) AND (t0.c2)) AS INTEGER) LEFT OUTER JOIN v0 ON vt0.c1 GROUP BY rt0.c3, vt0.c1, t0.c2, t0.c0 HAVING (NOT (MIN(COUNT(v0.c0)))) UNION ALL SELECT rt0.c3, vt0.c1, t0.c2, t0.c0 FROM t0 CROSS JOIN rt0 ON CASE ((vt0.c1)|(rt0.c2))  WHEN ((x'')GLOB(vt0.c1)) THEN ((t0.c0) NOT BETWEEN (rt0.c4) AND (v0.c0)) END CROSS JOIN vt0 ON CAST(((t0.c0) BETWEEN (v0.c2) AND (t0.c2)) AS INTEGER) LEFT OUTER JOIN v0 ON vt0.c1 GROUP BY rt0.c3, vt0.c1, t0.c2, t0.c0 HAVING ((MIN(COUNT(v0.c0))) ISNULL);
SELECT ALL * FROM t0, rt0, v0;
SELECT ALL * FROM t0, rt0, v0 WHERE (ABS(DISTINCT ((0.5664795788370024)AND(t0.c0)))) UNION ALL SELECT * FROM t0, rt0, v0 WHERE ((NOT (ABS(DISTINCT ((0.5664795788370024)AND(t0.c0)))))) UNION ALL SELECT * FROM t0, rt0, v0 WHERE (((ABS(DISTINCT ((0.5664795788370024)AND(t0.c0)))) ISNULL));
SELECT ALL * FROM t0, rt0, v0;
SELECT DISTINCT rt0.c0, v0.c1, rt0.c2, t0.c0, vt0.c1, t0.c2, vt0.c0 FROM rt0, vt0, t0, v0;
SELECT DISTINCT rt0.c0, v0.c1, rt0.c2, t0.c0, vt0.c1, t0.c2, vt0.c0 FROM rt0, vt0, t0, v0 WHERE ((rt0.c3 IN (CASE WHEN v0.c0 THEN rt0.c2 WHEN rt0.c0 THEN '-495568521' WHEN rt0.c1 THEN rt0.c2 ELSE vt0.c1 END))) UNION SELECT DISTINCT rt0.c0, v0.c1, rt0.c2, t0.c0, vt0.c1, t0.c2, vt0.c0 FROM rt0, vt0, t0, v0 WHERE ((NOT ((rt0.c3 IN (CASE WHEN v0.c0 THEN rt0.c2 WHEN rt0.c0 THEN '-495568521' WHEN rt0.c1 THEN rt0.c2 ELSE vt0.c1 END))))) UNION SELECT DISTINCT rt0.c0, v0.c1, rt0.c2, t0.c0, vt0.c1, t0.c2, vt0.c0 FROM rt0, vt0, t0, v0 WHERE ((((rt0.c3 IN (CASE WHEN v0.c0 THEN rt0.c2 WHEN rt0.c0 THEN '-495568521' WHEN rt0.c1 THEN rt0.c2 ELSE vt0.c1 END))) ISNULL));
SELECT DISTINCT rt0.c0, v0.c1, rt0.c2, t0.c0, vt0.c1, t0.c2, vt0.c0 FROM rt0, vt0, t0, v0;
