-- Time: 2024/06/10 21:05:37
-- Database: database59
-- Database version: 3.40.0
-- seed value: 445540559
PRAGMA cache_size = 50000; -- 7ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA encoding = 'UTF-8'; -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree_i32(c0, c1, c2); -- 0ms;
CREATE VIRTUAL TABLE vt1 USING fts5(c0); -- 1ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
ANALYZE main; -- 1ms;
INSERT INTO vt1(vt1) VALUES('integrity-check'); -- 0ms;
INSERT OR FAIL INTO rt0 VALUES (x'', '771628738', NULL); -- 0ms;
INSERT OR IGNORE INTO rt0 VALUES (0xfffffffffe840b29, NULL, NULL); -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
PRAGMA temp.journal_mode; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts4(c0 UNINDEXED); -- 1ms;
ANALYZE; -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
INSERT OR REPLACE INTO rt0(c1, c2) VALUES (0.37103672334642734, x''), (0Xffffffffad2d74a6, '<*C}'), (x'', x''); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR IGNORE rt0 SET (c1)=(x''); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('merge', 2103832914);\n; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
INSERT INTO vt1(vt1) VALUES('integrity-check'); -- 0ms;
REINDEX; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('automerge', 11); -- 0ms;
REINDEX; -- 13ms;
ANALYZE; -- 0ms;
SELECT rtreecheck('rt0'); -- 0ms;
INSERT INTO vt1(vt1) VALUES('integrity-check'); -- 0ms;
INSERT INTO vt1(vt1) VALUES('optimize'); -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
PRAGMA temp.stats; -- 0ms;
INSERT OR IGNORE INTO rt0(c2) VALUES (-1453066484); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
UPDATE OR REPLACE vt1 SET c0='771628738'; -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO vt1 VALUES (NULL), (0.37103672334642734), (0.37103672334642734); -- 5ms;
BEGIN  TRANSACTION; -- 0ms;
END; -- 0ms;
UPDATE OR IGNORE vt1 SET (c0, c0)=(NULL, '-24900823') WHERE ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))) IS FALSE); -- 2ms;
INSERT INTO vt1(vt1) VALUES('integrity-check'); -- 0ms;
PRAGMA cell_size_check = true; -- 0ms;
DELETE FROM sqlite_stat1; -- 14ms;
ROLLBACK TRANSACTION; -- 0ms;
END; -- 0ms;
VACUUM temp; -- 0ms;
UPDATE rt0 SET c0=x'' WHERE (rt0.c0 IN ()); -- 0ms;
REINDEX; -- 0ms;
INSERT INTO vt1(vt1) VALUES('rebuild'); -- 1ms;
REINDEX RTRIM; -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR ROLLBACK rt0 SET (c1)=(0.38894443251780253); -- 0ms;
DELETE FROM vt1 WHERE vt1.c0; -- 1ms;
COMMIT; -- 1ms;
INSERT INTO vt1(vt1) VALUES('rebuild'); -- 7ms;
ROLLBACK TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
END; -- 0ms;
END; -- 4ms;
INSERT OR FAIL INTO rt0(c1, c0) VALUES (0.9170997894740125, NULL); -- 0ms;
REINDEX; -- 0ms;
PRAGMA main.journal_mode = WAL; -- 0ms;
INSERT OR IGNORE INTO vt1 VALUES ('<*C}'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '38623666 sz=2103832914'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) BETWEEN (0.39070726965911107) AND (7.71628738E8))) NOT BETWEEN (CASE WHEN 0.19918012515228 THEN NULL WHEN '-1765375244' THEN -1.453066484E9 WHEN NULL THEN '' ELSE 'gb(mIv(+ ' END) AND (CASE WHEN NULL THEN '-1453066484' ELSE '-1267686471' END)); -- 0ms;
INSERT INTO vt1(vt1) VALUES('merge=-310292900,5');\n; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('pgsz', '13556'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
UPDATE OR FAIL vt1 SET c0='38623666', c0='tG'; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
ANALYZE rt0; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE rt0 SET c0='-1267686471', c2=0X24d59b2 WHERE ((CASE rt0.c0  WHEN rt0.c1 THEN rt0.c2 END)/(((rt0.c1)/(rt0.c0)))); -- 0ms;
INSERT OR ABORT INTO vt1 VALUES ('-1603127573'), (NULL), ('ꎹPM'); -- 1ms;
VACUUM main; -- 5ms;
INSERT INTO vt1(vt1) VALUES('optimize'); -- 0ms;
UPDATE rt0 SET (c1)=(0.39070726965911107) WHERE rt0.c2; -- 0ms;
PRAGMA main.ignore_check_constraints; -- 0ms;
INSERT INTO vt1(vt1) VALUES('rebuild'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('crisismerge', 1847894667); -- 0ms;
INSERT OR IGNORE INTO vt1 VALUES ('zyG觡8P'), (x''), ('189843315'); -- 1ms;
BEGIN  TRANSACTION; -- 0ms;
CREATE TEMP TABLE IF NOT EXISTS t0 (c0 REAL , FOREIGN KEY(c0) REFERENCES t0(c0) ON UPDATE NO ACTION); -- 4ms;
ALTER TABLE t0 ADD COLUMN c25 TEXT; -- 0ms;
ROLLBACK TRANSACTION; -- 1ms;
REINDEX  rt0; -- 0ms;
INSERT INTO vt1(vt1) VALUES('optimize'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
ANALYZE main; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
ANALYZE; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE (((((((rt0.c1) IS TRUE))AND(rt0.c2 COLLATE RTRIM)))AND(((((((((rt0.c0)AND(rt0.c2)))AND(x'0dd9')))OR(rt0.c1)))AND(rt0.c2))))) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (((((((rt0.c1) IS TRUE))AND(rt0.c2 COLLATE RTRIM)))AND(((((((((rt0.c0)AND(rt0.c2)))AND(x'0dd9')))OR(rt0.c1)))AND(rt0.c2))))))) UNION ALL SELECT * FROM rt0 WHERE (((((((((rt0.c1) IS TRUE))AND(rt0.c2 COLLATE RTRIM)))AND(((((((((rt0.c0)AND(rt0.c2)))AND(x'0dd9')))OR(rt0.c1)))AND(rt0.c2))))) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT rt0.c1 FROM vt1, rt0;
SELECT DISTINCT rt0.c1 FROM vt1, rt0 WHERE ((((rt0.c0))>=(((rt0.c2 IN ()))))) UNION SELECT DISTINCT rt0.c1 FROM vt1, rt0 WHERE ((NOT ((((rt0.c0))>=(((rt0.c2 IN ()))))))) UNION SELECT DISTINCT rt0.c1 FROM vt1, rt0 WHERE ((((((rt0.c0))>=(((rt0.c2 IN ()))))) ISNULL));
SELECT DISTINCT rt0.c1 FROM vt1, rt0;
SELECT rt0.c1, rt0.c2 FROM vt1, rt0 GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c1, rt0.c2 FROM vt1, rt0 WHERE ((((((('663307425') NOT NULL))AND(x'')))OR('-310292900'))) GROUP BY rt0.c1, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c2 FROM vt1, rt0 WHERE ((NOT ((((((('663307425') NOT NULL))AND(x'')))OR('-310292900'))))) GROUP BY rt0.c1, rt0.c2 UNION SELECT rt0.c1, rt0.c2 FROM vt1, rt0 WHERE ((((((((('663307425') NOT NULL))AND(x'')))OR('-310292900'))) ISNULL)) GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c1, rt0.c2 FROM vt1, rt0 GROUP BY rt0.c1, rt0.c2;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((((MAX(TOTAL(vt1.c0)))AND(TOTAL('38623666'))))OR(COUNT(vt1.c0))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (((((MAX(TOTAL(vt1.c0)))AND(TOTAL('38623666'))))OR(COUNT(vt1.c0))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((((((MAX(TOTAL(vt1.c0)))AND(TOTAL('38623666'))))OR(COUNT(vt1.c0)))) ISNULL);
SELECT vt1.c0, rt0.c1, rt0.c2 FROM vt1, rt0;
SELECT vt1.c0, rt0.c1, rt0.c2 FROM vt1, rt0 WHERE (((((rt0.c0) IS TRUE)) IS TRUE)) UNION ALL SELECT vt1.c0, rt0.c1, rt0.c2 FROM vt1, rt0 WHERE ((NOT (((((rt0.c0) IS TRUE)) IS TRUE)))) UNION ALL SELECT vt1.c0, rt0.c1, rt0.c2 FROM vt1, rt0 WHERE (((((((rt0.c0) IS TRUE)) IS TRUE)) ISNULL));
SELECT vt1.c0, rt0.c1, rt0.c2 FROM vt1, rt0;
SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0 WHERE (rt0.c0 COLLATE RTRIM COLLATE RTRIM COLLATE RTRIM) UNION SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (rt0.c0 COLLATE RTRIM COLLATE RTRIM COLLATE RTRIM))) UNION SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0 WHERE (((rt0.c0 COLLATE RTRIM COLLATE RTRIM COLLATE RTRIM) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0, vt1 GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0, vt1 WHERE ('0.19918012515228') GROUP BY rt0.c2, rt0.c0 UNION SELECT rt0.c2, rt0.c0 FROM rt0, vt1 WHERE ((NOT ('0.19918012515228'))) GROUP BY rt0.c2, rt0.c0 UNION SELECT rt0.c2, rt0.c0 FROM rt0, vt1 WHERE ((('0.19918012515228') ISNULL)) GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0, vt1 GROUP BY rt0.c2, rt0.c0;
SELECT vt1.c0, rt0.c2, rt0.c1 FROM vt1 LEFT OUTER JOIN rt0 ON COALESCE(rt0.c2, rt0.c0, rt0.c1, vt1.c0) COLLATE RTRIM GROUP BY vt1.c0, rt0.c2, rt0.c1;
SELECT ALL vt1.c0, rt0.c2, rt0.c1 FROM vt1 LEFT OUTER JOIN rt0 ON COALESCE(rt0.c2, rt0.c0, rt0.c1, vt1.c0) COLLATE RTRIM GROUP BY vt1.c0, rt0.c2, rt0.c1 HAVING ((((CASE WHEN rt0.c1 THEN COUNT(*) END)OR(GROUP_CONCAT(MIN(rt0.c1)))))OR(((TOTAL(AVG(NULL))) NOT BETWEEN (AVG(rt0.c0)) AND (COUNT(*))))) UNION ALL SELECT vt1.c0, rt0.c2, rt0.c1 FROM vt1 LEFT OUTER JOIN rt0 ON COALESCE(rt0.c2, rt0.c0, rt0.c1, vt1.c0) COLLATE RTRIM GROUP BY vt1.c0, rt0.c2, rt0.c1 HAVING (NOT (((((CASE WHEN rt0.c1 THEN COUNT(*) END)OR(GROUP_CONCAT(MIN(rt0.c1)))))OR(((TOTAL(AVG(NULL))) NOT BETWEEN (AVG(rt0.c0)) AND (COUNT(*))))))) UNION ALL SELECT vt1.c0, rt0.c2, rt0.c1 FROM vt1 LEFT OUTER JOIN rt0 ON COALESCE(rt0.c2, rt0.c0, rt0.c1, vt1.c0) COLLATE RTRIM GROUP BY vt1.c0, rt0.c2, rt0.c1 HAVING ((((((CASE WHEN rt0.c1 THEN COUNT(*) END)OR(GROUP_CONCAT(MIN(rt0.c1)))))OR(((TOTAL(AVG(NULL))) NOT BETWEEN (AVG(rt0.c0)) AND (COUNT(*)))))) ISNULL);
SELECT ALL TOTAL(((CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)LIKE(((vt1.c0) NOTNULL)))) FROM vt1 ORDER BY TOTAL_CHANGES()  NULLS FIRST, ((CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END) NOT NULL)  NULLS FIRST;
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE ((+ (((((rt0.c0)OR(rt0.c1)))AND(rt0.c2))))) UNION ALL SELECT * FROM rt0 WHERE ((NOT ((+ (((((rt0.c0)OR(rt0.c1)))AND(rt0.c2))))))) UNION ALL SELECT ALL * FROM rt0 WHERE ((((+ (((((rt0.c0)OR(rt0.c1)))AND(rt0.c2))))) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT rt0.c0, vt1.c0, rt0.c2, rt0.c1 FROM rt0 INNER JOIN vt1 ON ((((((rt0.c2) NOT BETWEEN (rt0.c0) AND (vt1.c0)))OR((NOT (rt0.c1)))))AND(((NULL)=(rt0.c1))));
SELECT DISTINCT rt0.c0, vt1.c0, rt0.c2, rt0.c1 FROM rt0 INNER JOIN vt1 ON ((((((rt0.c2) NOT BETWEEN (rt0.c0) AND (vt1.c0)))OR((NOT (rt0.c1)))))AND(((NULL)==(rt0.c1)))) WHERE (((((((rt0.c1) NOT BETWEEN (rt0.c0) AND (NULL)))AND((rt0.c1 IN (rt0.c0)))))OR(CAST(rt0.c1 AS TEXT)))) UNION SELECT DISTINCT rt0.c0, vt1.c0, rt0.c2, rt0.c1 FROM rt0 INNER JOIN vt1 ON ((((((rt0.c2) NOT BETWEEN (rt0.c0) AND (vt1.c0)))OR((NOT (rt0.c1)))))AND(((NULL)=(rt0.c1)))) WHERE ((NOT (((((((rt0.c1) NOT BETWEEN (rt0.c0) AND (NULL)))AND((rt0.c1 IN (rt0.c0)))))OR(CAST(rt0.c1 AS TEXT)))))) UNION SELECT DISTINCT rt0.c0, vt1.c0, rt0.c2, rt0.c1 FROM rt0 INNER JOIN vt1 ON ((((((rt0.c2) NOT BETWEEN (rt0.c0) AND (vt1.c0)))OR((NOT (rt0.c1)))))AND(((NULL)=(rt0.c1)))) WHERE (((((((((rt0.c1) NOT BETWEEN (rt0.c0) AND (NULL)))AND((rt0.c1 IN (rt0.c0)))))OR(CAST(rt0.c1 AS TEXT)))) ISNULL));
SELECT DISTINCT rt0.c0, vt1.c0, rt0.c2, rt0.c1 FROM rt0 INNER JOIN vt1 ON ((((((rt0.c2) NOT BETWEEN (rt0.c0) AND (vt1.c0)))OR((NOT (rt0.c1)))))AND(((NULL)=(rt0.c1))));
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE ((- (CAST(vt1.c0 AS INTEGER)))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT ((- (CAST(vt1.c0 AS INTEGER)))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((((- (CAST(vt1.c0 AS INTEGER)))) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (((CAST(COUNT(vt1.c0) AS NUMERIC)))<((COUNT(TOTAL(GROUP_CONCAT(vt1.c0)))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT ((((CAST(COUNT(vt1.c0) AS NUMERIC)))<((COUNT(TOTAL(GROUP_CONCAT(vt1.c0)))))))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (((((CAST(COUNT(vt1.c0) AS NUMERIC)))<((COUNT(TOTAL(GROUP_CONCAT(vt1.c0))))))) ISNULL);
SELECT rt0.c2, vt1.c0, rt0.c1 FROM vt1, rt0;
SELECT ALL rt0.c2, vt1.c0, rt0.c1 FROM vt1, rt0 WHERE (NULLIF(((rt0.c1) NOT BETWEEN (x'dbab') AND (rt0.c2)), CAST(rt0.c1 AS INTEGER))) UNION ALL SELECT ALL rt0.c2, vt1.c0, rt0.c1 FROM vt1, rt0 WHERE ((NOT (NULLIF(((rt0.c1) NOT BETWEEN (x'dbab') AND (rt0.c2)), CAST(rt0.c1 AS INTEGER))))) UNION ALL SELECT rt0.c2, vt1.c0, rt0.c1 FROM vt1, rt0 WHERE (((NULLIF(((rt0.c1) NOT BETWEEN (x'dbab') AND (rt0.c2)), CAST(rt0.c1 AS INTEGER))) ISNULL));
SELECT rt0.c2, vt1.c0, rt0.c1 FROM vt1, rt0;
SELECT DISTINCT rt0.c2, rt0.c1 FROM vt1, rt0;
SELECT DISTINCT rt0.c2, rt0.c1 FROM vt1, rt0 WHERE ((NOT (NULL))) UNION SELECT DISTINCT rt0.c2, rt0.c1 FROM vt1, rt0 WHERE ((NOT ((NOT (NULL))))) UNION SELECT DISTINCT rt0.c2, rt0.c1 FROM vt1, rt0 WHERE ((((NOT (NULL))) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c1 FROM vt1, rt0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE (CASE vt1.c0 COLLATE BINARY  WHEN vt1.c0 COLLATE BINARY THEN (- (vt1.c0)) WHEN ((vt1.c0) IS TRUE) THEN CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END WHEN vt1.c0 COLLATE NOCASE THEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) END) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT (CASE vt1.c0 COLLATE BINARY  WHEN vt1.c0 COLLATE BINARY THEN (- (vt1.c0)) WHEN ((vt1.c0) IS TRUE) THEN CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END WHEN vt1.c0 COLLATE NOCASE THEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) END))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE (((CASE vt1.c0 COLLATE BINARY  WHEN vt1.c0 COLLATE BINARY THEN (- (vt1.c0)) WHEN ((vt1.c0) IS TRUE) THEN CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END WHEN vt1.c0 COLLATE NOCASE THEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) END) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0, rt0.c0, rt0.c1, rt0.c2 FROM rt0, vt1 GROUP BY vt1.c0, rt0.c0, rt0.c1, rt0.c2;
SELECT ALL vt1.c0, rt0.c0, rt0.c1, rt0.c2 FROM rt0, vt1 GROUP BY vt1.c0, rt0.c0, rt0.c1, rt0.c2 HAVING GROUP_CONCAT(((MIN(GROUP_CONCAT(AVG(vt1.c0)))) NOT BETWEEN (AVG(SUM(vt1.c0))) AND (vt1.c0))) UNION ALL SELECT ALL vt1.c0, rt0.c0, rt0.c1, rt0.c2 FROM rt0, vt1 GROUP BY vt1.c0, rt0.c0, rt0.c1, rt0.c2 HAVING (NOT (GROUP_CONCAT(((MIN(GROUP_CONCAT(AVG(vt1.c0)))) NOT BETWEEN (AVG(SUM(vt1.c0))) AND (vt1.c0))))) UNION ALL SELECT ALL vt1.c0, rt0.c0, rt0.c1, rt0.c2 FROM rt0, vt1 GROUP BY vt1.c0, rt0.c0, rt0.c1, rt0.c2 HAVING ((GROUP_CONCAT(((MIN(GROUP_CONCAT(AVG(vt1.c0)))) NOT BETWEEN (AVG(SUM(vt1.c0))) AND (vt1.c0)))) ISNULL);
SELECT ALL * FROM rt0, vt1;
SELECT * FROM rt0, vt1 WHERE ((((~ (rt0.c2))) NOTNULL)) UNION ALL SELECT * FROM rt0, vt1 WHERE ((NOT ((((~ (rt0.c2))) NOTNULL)))) UNION ALL SELECT * FROM rt0, vt1 WHERE ((((((~ (rt0.c2))) NOTNULL)) ISNULL));
SELECT ALL * FROM rt0, vt1;
SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1, vt1.c0 FROM rt0, vt1;
SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1, vt1.c0 FROM rt0, vt1 WHERE (0.42534953431427147) UNION SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1, vt1.c0 FROM rt0, vt1 WHERE ((NOT (0.42534953431427147))) UNION SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1, vt1.c0 FROM rt0, vt1 WHERE (((0.42534953431427147) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1, vt1.c0 FROM rt0, vt1;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE (CASE ((vt1.c0)GLOB(vt1.c0))  WHEN CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END THEN (+ (vt1.c0)) ELSE ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) END) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT (CASE ((vt1.c0)GLOB(vt1.c0))  WHEN CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END THEN (+ (vt1.c0)) ELSE ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) END))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE (((CASE ((vt1.c0)GLOB(vt1.c0))  WHEN CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END THEN (+ (vt1.c0)) ELSE ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) END) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT rt0.c0, rt0.c1 FROM rt0, vt1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0, vt1 WHERE (((((x'')AND(CAST(rt0.c2 AS REAL))))AND(('-1313762425' IN ())))) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM rt0, vt1 WHERE ((NOT (((((x'')AND(CAST(rt0.c2 AS REAL))))AND(('-1313762425' IN ())))))) UNION ALL SELECT rt0.c0, rt0.c1 FROM rt0, vt1 WHERE (((((((x'')AND(CAST(rt0.c2 AS REAL))))AND(('-1313762425' IN ())))) ISNULL));
SELECT rt0.c0, rt0.c1 FROM rt0, vt1;
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2, vt1.c0 FROM rt0, vt1;
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2, vt1.c0 FROM rt0, vt1 WHERE (LAST_INSERT_ROWID()) UNION SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2, vt1.c0 FROM rt0, vt1 WHERE ((NOT (LAST_INSERT_ROWID()))) UNION SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2, vt1.c0 FROM rt0, vt1 WHERE (((LAST_INSERT_ROWID()) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2, vt1.c0 FROM rt0, vt1;
SELECT ALL rt0.c2, vt1.c0, rt0.c1, rt0.c0 FROM rt0, vt1 GROUP BY rt0.c2, vt1.c0, rt0.c1, rt0.c0;
SELECT rt0.c2, vt1.c0, rt0.c1, rt0.c0 FROM rt0, vt1 WHERE (((rt0.c2 IN ()) IN ())) GROUP BY rt0.c2, vt1.c0, rt0.c1, rt0.c0 UNION SELECT rt0.c2, vt1.c0, rt0.c1, rt0.c0 FROM rt0, vt1 WHERE ((NOT (((rt0.c2 IN ()) IN ())))) GROUP BY rt0.c2, vt1.c0, rt0.c1, rt0.c0 UNION SELECT rt0.c2, vt1.c0, rt0.c1, rt0.c0 FROM rt0, vt1 WHERE (((((rt0.c2 IN ()) IN ())) ISNULL)) GROUP BY rt0.c2, vt1.c0, rt0.c1, rt0.c0;
SELECT ALL rt0.c2, vt1.c0, rt0.c1, rt0.c0 FROM rt0, vt1 GROUP BY rt0.c2, vt1.c0, rt0.c1, rt0.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING vt1.c0 UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (vt1.c0)) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((vt1.c0) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING vt1.c0 UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (vt1.c0)) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((vt1.c0) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT * FROM rt0, vt1;
SELECT ALL * FROM rt0, vt1 WHERE ((((((rt0.c1)OR(vt1.c0)))OR(vt1.c0)) IN ())) UNION ALL SELECT * FROM rt0, vt1 WHERE ((NOT ((((((rt0.c1)OR(vt1.c0)))OR(vt1.c0)) IN ())))) UNION ALL SELECT * FROM rt0, vt1 WHERE ((((((((rt0.c1)OR(vt1.c0)))OR(vt1.c0)) IN ())) ISNULL));
SELECT * FROM rt0, vt1;
SELECT DISTINCT vt1.c0, rt0.c0, rt0.c1 FROM rt0, vt1;
SELECT DISTINCT vt1.c0, rt0.c0, rt0.c1 FROM rt0, vt1 WHERE ((((rt0.c1))<=((rt0.c1))) COLLATE BINARY) UNION SELECT DISTINCT vt1.c0, rt0.c0, rt0.c1 FROM rt0, vt1 WHERE ((NOT ((((rt0.c1))<=((rt0.c1))) COLLATE BINARY))) UNION SELECT DISTINCT vt1.c0, rt0.c0, rt0.c1 FROM rt0, vt1 WHERE ((((((rt0.c1))<=((rt0.c1))) COLLATE BINARY) ISNULL));
SELECT DISTINCT vt1.c0, rt0.c0, rt0.c1 FROM rt0, vt1;
SELECT vt1.c0, rt0.c2 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c2;
SELECT vt1.c0, rt0.c2 FROM vt1 NOT INDEXED, rt0 WHERE (rt0.c2) GROUP BY vt1.c0, rt0.c2 UNION SELECT ALL vt1.c0, rt0.c2 FROM vt1, rt0 WHERE ((NOT (rt0.c2))) GROUP BY vt1.c0, rt0.c2 UNION SELECT vt1.c0, rt0.c2 FROM vt1, rt0 WHERE (((rt0.c2) ISNULL)) GROUP BY vt1.c0, rt0.c2;
SELECT vt1.c0, rt0.c2 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c2;
SELECT ALL vt1.c0, rt0.c1, rt0.c2 FROM rt0, vt1 GROUP BY vt1.c0, rt0.c1, rt0.c2;
SELECT ALL vt1.c0, rt0.c1, rt0.c2 FROM rt0, vt1 GROUP BY vt1.c0, rt0.c1, rt0.c2 HAVING (((MIN(rt0.c0) IN ()))GLOB(CAST(vt1.c0 AS INTEGER))) UNION ALL SELECT ALL vt1.c0, rt0.c1, rt0.c2 FROM rt0, vt1 GROUP BY vt1.c0, rt0.c1, rt0.c2 HAVING (NOT ((((MIN(rt0.c0) IN ()))GLOB(CAST(vt1.c0 AS INTEGER))))) UNION ALL SELECT ALL vt1.c0, rt0.c1, rt0.c2 FROM rt0, vt1 GROUP BY vt1.c0, rt0.c1, rt0.c2 HAVING (((((MIN(rt0.c0) IN ()))GLOB(CAST(vt1.c0 AS INTEGER)))) ISNULL);
SELECT ALL vt1.c0, rt0.c1, rt0.c2 FROM rt0, vt1 GROUP BY vt1.c0, rt0.c1, rt0.c2;
SELECT ALL vt1.c0, rt0.c1, rt0.c2 FROM rt0, vt1 GROUP BY vt1.c0, rt0.c1, rt0.c2 HAVING (((MIN(rt0.c0) IN ()))GLOB(CAST(vt1.c0 AS INTEGER))) UNION ALL SELECT ALL vt1.c0, rt0.c1, rt0.c2 FROM rt0, vt1 GROUP BY vt1.c0, rt0.c1, rt0.c2 HAVING (NOT ((((MIN(rt0.c0) IN ()))GLOB(CAST(vt1.c0 AS INTEGER))))) UNION ALL SELECT ALL vt1.c0, rt0.c1, rt0.c2 FROM rt0, vt1 GROUP BY vt1.c0, rt0.c1, rt0.c2 HAVING (((((MIN(rt0.c0) IN ()))GLOB(CAST(vt1.c0 AS INTEGER)))) ISNULL);
SELECT ALL vt1.c0, rt0.c1, rt0.c2 FROM rt0, vt1 GROUP BY vt1.c0, rt0.c1, rt0.c2;
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE (rt0.c0) UNION ALL SELECT * FROM rt0 WHERE ((NOT (rt0.c0))) UNION ALL SELECT * FROM rt0 WHERE (((rt0.c0) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT * FROM vt1 CROSS JOIN rt0 ON ((LIKELIHOOD(rt0.c1, 0.6141877487790665)) ISNULL);
SELECT DISTINCT * FROM vt1 CROSS JOIN rt0 ON ((LIKELIHOOD(rt0.c1, 0.6141877487790665)) ISNULL) WHERE (((((rt0.c2, vt1.c0, rt0.c2)) NOT BETWEEN ((rt0.c2, vt1.c0, rt0.c2)) AND ((rt0.c2, rt0.c0, vt1.c0))) IN ())) UNION SELECT DISTINCT * FROM vt1 CROSS JOIN rt0 ON ((LIKELIHOOD(rt0.c1, 0.6141877487790665)) ISNULL) WHERE ((NOT (((((rt0.c2, vt1.c0, rt0.c2)) NOT BETWEEN ((rt0.c2, vt1.c0, rt0.c2)) AND ((rt0.c2, rt0.c0, vt1.c0))) IN ())))) UNION SELECT DISTINCT * FROM vt1 CROSS JOIN rt0 ON ((LIKELIHOOD(rt0.c1, 0.6141877487790665)) ISNULL) WHERE (((((((rt0.c2, vt1.c0, rt0.c2)) NOT BETWEEN ((rt0.c2, vt1.c0, rt0.c2)) AND ((rt0.c2, rt0.c0, vt1.c0))) IN ())) ISNULL));
SELECT DISTINCT * FROM vt1 CROSS JOIN rt0 ON ((LIKELIHOOD(rt0.c1, 0.6141877487790665)) ISNULL);
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (((((((((rt0.c1)OR(rt0.c2)))OR(rt0.c1)))OR(rt0.c2)))OR(rt0.c0))))) GROUP BY rt0.c2, rt0.c1, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT ((NOT (((((((((rt0.c1)OR(rt0.c2)))OR(rt0.c1)))OR(rt0.c2)))OR(rt0.c0))))))) GROUP BY rt0.c2, rt0.c1, rt0.c0 UNION SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((((NOT (((((((((rt0.c1)OR(rt0.c2)))OR(rt0.c1)))OR(rt0.c2)))OR(rt0.c0))))) ISNULL)) GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING COUNT(*) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING COUNT(*) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT rt0.c0, rt0.c1 FROM rt0;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 WHERE (CAST(((rt0.c0) ISNULL) AS TEXT)) UNION ALL SELECT rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (CAST(((rt0.c0) ISNULL) AS TEXT)))) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM rt0 WHERE (((CAST(((rt0.c0) ISNULL) AS TEXT)) ISNULL));
SELECT rt0.c0, rt0.c1 FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (0Xfffffffffe840b29) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (0xfffffffffe840b29))) UNION SELECT DISTINCT * FROM rt0 WHERE (((0Xfffffffffe840b29) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE ('') GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (''))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((('') ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING SUM(AVG(COUNT(*))) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING (NOT (SUM(AVG(COUNT(*))))) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING ((SUM(AVG(COUNT(*)))) ISNULL);
SELECT ALL rt0.c0 FROM rt0;
SELECT ALL rt0.c0 FROM rt0 WHERE (UPPER(0.8814470799142796) COLLATE RTRIM) UNION ALL SELECT rt0.c0 FROM rt0 WHERE ((NOT (UPPER(0.8814470799142796) COLLATE RTRIM))) UNION ALL SELECT ALL rt0.c0 FROM rt0 WHERE (((UPPER(0.8814470799142796) COLLATE RTRIM) ISNULL));
SELECT ALL rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c0 FROM rt0 LEFT OUTER JOIN vt1 ON rt0.c1;
SELECT DISTINCT rt0.c0 FROM rt0 LEFT OUTER JOIN vt1 ON rt0.c1 WHERE (CAST((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c1))) AS TEXT)) UNION SELECT DISTINCT rt0.c0 FROM rt0 LEFT OUTER JOIN vt1 ON rt0.c1 WHERE ((NOT (CAST((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c1))) AS TEXT)))) UNION SELECT DISTINCT rt0.c0 FROM rt0 LEFT OUTER JOIN vt1 ON rt0.c1 WHERE (((CAST((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c1))) AS TEXT)) ISNULL));
SELECT DISTINCT rt0.c0 FROM rt0 LEFT OUTER JOIN vt1 ON rt0.c1;
SELECT vt1.c0 FROM rt0, vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM rt0, vt1 WHERE ((NOT (((((rt0.c2)OR(rt0.c0)))OR(rt0.c2))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM rt0, vt1 WHERE ((NOT ((NOT (((((rt0.c2)OR(rt0.c0)))OR(rt0.c2))))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM rt0, vt1 WHERE ((((NOT (((((rt0.c2)OR(rt0.c0)))OR(rt0.c2))))) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM rt0, vt1 GROUP BY vt1.c0;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING TOTAL(((rt0.c2) BETWEEN (GROUP_CONCAT(x'')) AND (rt0.c1))) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT (TOTAL(((rt0.c2) BETWEEN (GROUP_CONCAT(x'')) AND (rt0.c1))))) UNION ALL SELECT ALL rt0.c2 FROM rt0 NOT INDEXED GROUP BY rt0.c2 HAVING ((TOTAL(((rt0.c2) BETWEEN (GROUP_CONCAT(x'')) AND (rt0.c1)))) ISNULL);
SELECT ALL * FROM rt0;
SELECT * FROM rt0 WHERE (((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c1)) COLLATE NOCASE) UNION ALL SELECT * FROM rt0 WHERE ((NOT (((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c1)) COLLATE NOCASE))) UNION ALL SELECT ALL * FROM rt0 WHERE (((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c1)) COLLATE NOCASE) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((((((((((((vt1.c0)) NOT BETWEEN ((-1.389529946E9)) AND ((vt1.c0))))OR(vt1.c0 COLLATE BINARY)))AND(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN 0.9642185100542138 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END)))OR(COALESCE(DISTINCT vt1.c0, vt1.c0))))OR(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT ((((((((((((vt1.c0)) NOT BETWEEN ((-1.389529946E9)) AND ((vt1.c0))))OR(vt1.c0 COLLATE BINARY)))AND(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN 0.9642185100542138 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END)))OR(COALESCE(DISTINCT vt1.c0, vt1.c0))))OR(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END))))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((((((((((((((vt1.c0)) NOT BETWEEN ((-1.389529946E9)) AND ((vt1.c0))))OR(vt1.c0 COLLATE BINARY)))AND(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN 0.9642185100542138 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END)))OR(COALESCE(DISTINCT vt1.c0, vt1.c0))))OR(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END))) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 WHERE ((- (''))) GROUP BY rt0.c1, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT ((- (''))))) GROUP BY rt0.c1, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c0 FROM rt0 WHERE ((((- (''))) ISNULL)) GROUP BY rt0.c1, rt0.c0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT ALL vt1.c0, rt0.c0, rt0.c1, rt0.c2 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c0, rt0.c1, rt0.c2;
SELECT ALL vt1.c0, rt0.c0, rt0.c1, rt0.c2 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c0, rt0.c1, rt0.c2 HAVING AVG(MAX(AVG(AVG(GROUP_CONCAT(GROUP_CONCAT(vt1.c0)))))) UNION ALL SELECT vt1.c0, rt0.c0, rt0.c1, rt0.c2 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c0, rt0.c1, rt0.c2 HAVING (NOT (AVG(MAX(AVG(AVG(GROUP_CONCAT(GROUP_CONCAT(vt1.c0)))))))) UNION ALL SELECT vt1.c0, rt0.c0, rt0.c1, rt0.c2 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c0, rt0.c1, rt0.c2 HAVING ((AVG(MAX(AVG(AVG(GROUP_CONCAT(GROUP_CONCAT(vt1.c0))))))) ISNULL);
SELECT MIN(LOWER(DISTINCT ((vt1.c0) BETWEEN (x'') AND (vt1.c0)))) FROM vt1 NOT INDEXED ORDER BY CASE CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END  WHEN ((vt1.c0)|(vt1.c0)) THEN vt1.c0 COLLATE NOCASE ELSE (NOT (vt1.c0)) END DESC  NULLS LAST;
SELECT ALL vt1.c0, rt0.c1, rt0.c2, rt0.c0 FROM rt0, vt1;
SELECT vt1.c0, rt0.c1, rt0.c2, rt0.c0 FROM rt0, vt1 WHERE (CAST(CAST(rt0.c0 AS NUMERIC) AS NUMERIC)) ORDER BY ((((NULL)AND((vt1.c0 IN ()))))OR(x'b4ce'));
SELECT ALL vt1.c0, rt0.c1, rt0.c2, rt0.c0 FROM rt0, vt1 WHERE ((NOT (CAST(CAST(rt0.c0 AS NUMERIC) AS NUMERIC)))) ORDER BY ((((NULL)AND((vt1.c0 IN ()))))OR(x'b4ce'));
SELECT vt1.c0, rt0.c1, rt0.c2, rt0.c0 FROM rt0, vt1 WHERE (((CAST(CAST(rt0.c0 AS NUMERIC) AS NUMERIC)) ISNULL)) ORDER BY ((((NULL)AND((vt1.c0 IN ()))))OR(x'b4ce'));
SELECT ALL vt1.c0, rt0.c1, rt0.c2, rt0.c0 FROM rt0, vt1;
SELECT DISTINCT * FROM rt0, vt1;
SELECT DISTINCT * FROM rt0, vt1 WHERE ((((((rt0.c2))>=((rt0.c0)))) NOT BETWEEN (((rt0.c0) NOT NULL)) AND ((NOT (rt0.c1))))) UNION SELECT DISTINCT * FROM rt0, vt1 WHERE ((NOT ((((((rt0.c2))>=((rt0.c0)))) NOT BETWEEN (((rt0.c0) NOT NULL)) AND ((NOT (rt0.c1))))))) UNION SELECT DISTINCT * FROM rt0, vt1 WHERE ((((((((rt0.c2))>=((rt0.c0)))) NOT BETWEEN (((rt0.c0) NOT NULL)) AND ((NOT (rt0.c1))))) ISNULL));
SELECT DISTINCT * FROM rt0, vt1;
SELECT vt1.c0, rt0.c2 FROM rt0, vt1 GROUP BY vt1.c0, rt0.c2;
SELECT vt1.c0, rt0.c2 FROM rt0, vt1 WHERE (((((((((((rt0.c1)>=(x'')))OR(CASE rt0.c1  WHEN 0.5630229880383987 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 END)))OR(CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 WHEN vt1.c0 THEN rt0.c2 ELSE vt1.c0 END)))AND(rt0.c1 COLLATE NOCASE)))AND(((vt1.c0)>>(rt0.c0))))) GROUP BY vt1.c0, rt0.c2 UNION SELECT vt1.c0, rt0.c2 FROM rt0, vt1 WHERE ((NOT (((((((((((rt0.c1)>=(x'')))OR(CASE rt0.c1  WHEN 0.5630229880383987 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 END)))OR(CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 WHEN vt1.c0 THEN rt0.c2 ELSE vt1.c0 END)))AND(rt0.c1 COLLATE NOCASE)))AND(((vt1.c0)>>(rt0.c0))))))) GROUP BY vt1.c0, rt0.c2 UNION SELECT vt1.c0, rt0.c2 FROM rt0, vt1 WHERE (((((((((((((rt0.c1)>=(x'')))OR(CASE rt0.c1  WHEN 0.5630229880383987 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 END)))OR(CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 WHEN vt1.c0 THEN rt0.c2 ELSE vt1.c0 END)))AND(rt0.c1 COLLATE NOCASE)))AND(((vt1.c0)>>(rt0.c0))))) ISNULL)) GROUP BY vt1.c0, rt0.c2;
SELECT vt1.c0, rt0.c2 FROM rt0, vt1 GROUP BY vt1.c0, rt0.c2;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING MIN(MIN(MIN(AVG(SUM(GROUP_CONCAT(MAX(MIN(COUNT(*))))))))) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING (NOT (MIN(MIN(MIN(AVG(SUM(GROUP_CONCAT(MAX(MIN(COUNT(*))))))))))) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING ((MIN(MIN(MIN(AVG(SUM(GROUP_CONCAT(MAX(MIN(COUNT(*)))))))))) ISNULL);
SELECT ALL * FROM vt1;
SELECT * FROM vt1 WHERE (CAST(((vt1.c0) IS FALSE) AS BLOB)) UNION ALL SELECT ALL * FROM vt1 WHERE ((NOT (CAST(((vt1.c0) IS FALSE) AS BLOB)))) UNION ALL SELECT * FROM vt1 WHERE (((CAST(((vt1.c0) IS FALSE) AS BLOB)) ISNULL));
SELECT ALL * FROM vt1;
SELECT DISTINCT * FROM vt1, rt0;
SELECT DISTINCT * FROM vt1, rt0 WHERE (CAST(((rt0.c0)|(vt1.c0)) AS REAL)) UNION SELECT DISTINCT * FROM vt1, rt0 WHERE ((NOT (CAST(((rt0.c0)|(vt1.c0)) AS REAL)))) UNION SELECT DISTINCT * FROM vt1, rt0 WHERE (((CAST(((rt0.c0)|(vt1.c0)) AS REAL)) ISNULL));
SELECT DISTINCT * FROM vt1, rt0;
SELECT ALL rt0.c0, rt0.c1 FROM vt1, rt0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM vt1, rt0 WHERE (((((rt0.c2))>((rt0.c1))) IN ((((vt1.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2))), ((rt0.c2) IS FALSE)))) GROUP BY rt0.c0, rt0.c1 UNION SELECT rt0.c0, rt0.c1 FROM vt1, rt0 WHERE ((NOT (((((rt0.c2))>((rt0.c1))) IN ((((vt1.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2))), ((rt0.c2) IS FALSE)))))) GROUP BY rt0.c0, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c1 FROM vt1, rt0 WHERE (((((((rt0.c2))>((rt0.c1))) IN ((((vt1.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2))), ((rt0.c2) IS FALSE)))) ISNULL)) GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM vt1, rt0 GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING rt0.c2 UNION ALL SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING (NOT (rt0.c2)) UNION ALL SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING ((rt0.c2) ISNULL);
SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING rt0.c2 UNION ALL SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING (NOT (rt0.c2)) UNION ALL SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING ((rt0.c2) ISNULL);
SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE (rt0.c0) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (rt0.c0))) UNION ALL SELECT * FROM rt0 WHERE (((rt0.c0) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT vt1.c0, rt0.c2, rt0.c0 FROM vt1, rt0;
SELECT DISTINCT vt1.c0, rt0.c2, rt0.c0 FROM vt1, rt0 WHERE (((((((rt0.c2)OR(rt0.c2)))AND(rt0.c1)))>>(x'f885'))) UNION SELECT DISTINCT vt1.c0, rt0.c2, rt0.c0 FROM vt1, rt0 WHERE ((NOT (((((((rt0.c2)OR(rt0.c2)))AND(rt0.c1)))>>(x'f885'))))) UNION SELECT DISTINCT vt1.c0, rt0.c2, rt0.c0 FROM vt1, rt0 WHERE (((((((((rt0.c2)OR(rt0.c2)))AND(rt0.c1)))>>(x'f885'))) ISNULL));
SELECT DISTINCT vt1.c0, rt0.c2, rt0.c0 FROM vt1, rt0;
SELECT ALL rt0.c2 FROM rt0, vt1 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0, vt1 WHERE (((((((((CASE rt0.c1  WHEN vt1.c0 THEN rt0.c0 END)OR(((((rt0.c0)OR(rt0.c0)))AND(rt0.c1)))))OR(((vt1.c0)>>(vt1.c0)))))OR(vt1.c0 COLLATE NOCASE)))AND(CASE WHEN vt1.c0 THEN rt0.c1 WHEN vt1.c0 THEN rt0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN vt1.c0 END))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0, vt1 WHERE ((NOT (((((((((CASE rt0.c1  WHEN vt1.c0 THEN rt0.c0 END)OR(((((rt0.c0)OR(rt0.c0)))AND(rt0.c1)))))OR(((vt1.c0)>>(vt1.c0)))))OR(vt1.c0 COLLATE NOCASE)))AND(CASE WHEN vt1.c0 THEN rt0.c1 WHEN vt1.c0 THEN rt0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN vt1.c0 END))))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0, vt1 WHERE (((((((((((CASE rt0.c1  WHEN vt1.c0 THEN rt0.c0 END)OR(((((rt0.c0)OR(rt0.c0)))AND(rt0.c1)))))OR(((vt1.c0)>>(vt1.c0)))))OR(vt1.c0 COLLATE NOCASE)))AND(CASE WHEN vt1.c0 THEN rt0.c1 WHEN vt1.c0 THEN rt0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN vt1.c0 END))) ISNULL)) GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0, vt1 GROUP BY rt0.c2;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 CROSS JOIN vt1 ON '' GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 CROSS JOIN vt1 ON '' GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING GROUP_CONCAT(rt0.c2 COLLATE BINARY) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 CROSS JOIN vt1 ON '' GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING (NOT (GROUP_CONCAT(rt0.c2 COLLATE BINARY))) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 CROSS JOIN vt1 ON '' GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING ((GROUP_CONCAT(rt0.c2 COLLATE BINARY)) ISNULL);
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 CROSS JOIN vt1 ON '' GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 CROSS JOIN vt1 ON '' GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING GROUP_CONCAT(rt0.c2 COLLATE BINARY) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 CROSS JOIN vt1 ON '' GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING (NOT (GROUP_CONCAT(rt0.c2 COLLATE BINARY))) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 CROSS JOIN vt1 ON '' GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING ((GROUP_CONCAT(rt0.c2 COLLATE BINARY)) ISNULL);
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 CROSS JOIN vt1 ON '' GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE (CAST((NOT (rt0.c0)) AS BLOB)) UNION ALL SELECT * FROM rt0 WHERE ((NOT (CAST((NOT (rt0.c0)) AS BLOB)))) UNION ALL SELECT * FROM rt0 WHERE (((CAST((NOT (rt0.c0)) AS BLOB)) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT rt0.c2 FROM rt0, vt1;
SELECT DISTINCT rt0.c2 FROM rt0, vt1 WHERE (CAST(NULL AS REAL) COLLATE BINARY) UNION SELECT DISTINCT rt0.c2 FROM rt0, vt1 WHERE ((NOT (CAST(NULL AS REAL) COLLATE BINARY))) UNION SELECT DISTINCT rt0.c2 FROM rt0, vt1 WHERE (((CAST(NULL AS REAL) COLLATE BINARY) ISNULL));
SELECT DISTINCT rt0.c2 FROM rt0, vt1;
SELECT vt1.c0, rt0.c2, rt0.c1, rt0.c0 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c2, rt0.c1, rt0.c0;
SELECT vt1.c0, rt0.c2, rt0.c1, rt0.c0 FROM vt1, rt0 WHERE (((((rt0.c0)OR(((rt0.c0)%(rt0.c1)))))AND(((rt0.c2)LIKE(rt0.c2))))) GROUP BY vt1.c0, rt0.c2, rt0.c1, rt0.c0 UNION SELECT ALL vt1.c0, rt0.c2, rt0.c1, rt0.c0 FROM vt1, rt0 WHERE ((NOT (((((rt0.c0)OR(((rt0.c0)%(rt0.c1)))))AND(((rt0.c2)LIKE(rt0.c2))))))) GROUP BY vt1.c0, rt0.c2, rt0.c1, rt0.c0 UNION SELECT ALL vt1.c0, rt0.c2, rt0.c1, rt0.c0 FROM vt1 NOT INDEXED, rt0 WHERE (((((((rt0.c0)OR(((rt0.c0)%(rt0.c1)))))AND(((rt0.c2)LIKE(rt0.c2))))) ISNULL)) GROUP BY vt1.c0, rt0.c2, rt0.c1, rt0.c0;
SELECT vt1.c0, rt0.c2, rt0.c1, rt0.c0 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c2, rt0.c1, rt0.c0;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING COUNT(COUNT(*)) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT (COUNT(COUNT(*)))) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((COUNT(COUNT(*))) ISNULL);
SELECT ALL rt0.c0, rt0.c2 FROM rt0, vt1;
SELECT rt0.c0, rt0.c2 FROM rt0, vt1 WHERE ((((SUBSTR(vt1.c0, rt0.c0), (rt0.c1 IN ()), ((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c0)), (- (0.896589728900099)), ABS(rt0.c0)))<(((vt1.c0 IN (vt1.c0)), rt0.c1, ((rt0.c0) NOT NULL), (rt0.c1 IN ()), x'')))) UNION ALL SELECT rt0.c0, rt0.c2 FROM rt0, vt1 WHERE ((NOT ((((SUBSTR(vt1.c0, rt0.c0), (rt0.c1 IN ()), ((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c0)), (- (0.896589728900099)), ABS(rt0.c0)))<(((vt1.c0 IN (vt1.c0)), rt0.c1, ((rt0.c0) NOT NULL), (rt0.c1 IN ()), x'')))))) UNION ALL SELECT rt0.c0, rt0.c2 FROM rt0, vt1 WHERE ((((((SUBSTR(vt1.c0, rt0.c0), (rt0.c1 IN ()), ((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c0)), (- (0.896589728900099)), ABS(rt0.c0)))<(((vt1.c0 IN (vt1.c0)), rt0.c1, ((rt0.c0) NOT NULL), (rt0.c1 IN ()), x'')))) ISNULL));
SELECT ALL rt0.c0, rt0.c2 FROM rt0, vt1;
SELECT DISTINCT * FROM rt0, vt1;
SELECT DISTINCT * FROM rt0, vt1 WHERE (rt0.c0) UNION SELECT DISTINCT * FROM rt0, vt1 WHERE ((NOT (rt0.c0))) UNION SELECT DISTINCT * FROM rt0, vt1 WHERE (((rt0.c0) ISNULL));
SELECT DISTINCT * FROM rt0, vt1;
SELECT ALL vt1.c0, rt0.c0, rt0.c2, rt0.c1 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c0, rt0.c2, rt0.c1;
SELECT vt1.c0, rt0.c0, rt0.c2, rt0.c1 FROM vt1, rt0 WHERE ((((rt0.c1)) NOT BETWEEN (((+ (rt0.c1)))) AND ((((vt1.c0)IS(0.5281821915544557)))))) GROUP BY vt1.c0, rt0.c0, rt0.c2, rt0.c1 UNION SELECT ALL vt1.c0, rt0.c0, rt0.c2, rt0.c1 FROM vt1, rt0 WHERE ((NOT ((((rt0.c1)) NOT BETWEEN (((+ (rt0.c1)))) AND ((((vt1.c0)IS(0.5281821915544557)))))))) GROUP BY vt1.c0, rt0.c0, rt0.c2, rt0.c1 UNION SELECT ALL vt1.c0, rt0.c0, rt0.c2, rt0.c1 FROM vt1, rt0 WHERE ((((((rt0.c1)) NOT BETWEEN (((+ (rt0.c1)))) AND ((((vt1.c0)IS(0.5281821915544557)))))) ISNULL)) GROUP BY vt1.c0, rt0.c0, rt0.c2, rt0.c1;
SELECT ALL vt1.c0, rt0.c0, rt0.c2, rt0.c1 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c0, rt0.c2, rt0.c1;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING MAX(x'') UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (MAX(x''))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((MAX(x'')) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING MAX(x'') UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (MAX(x''))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((MAX(x'')) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT rt0.c0 FROM rt0;
SELECT ALL rt0.c0 FROM rt0 WHERE (((((rt0.c1) IS TRUE)) NOT BETWEEN (((rt0.c2)AND(rt0.c0))) AND (1578153427))) UNION ALL SELECT rt0.c0 FROM rt0 WHERE ((NOT (((((rt0.c1) IS TRUE)) NOT BETWEEN (((rt0.c2)AND(rt0.c0))) AND (1578153427))))) UNION ALL SELECT ALL rt0.c0 FROM rt0 WHERE (((((((rt0.c1) IS TRUE)) NOT BETWEEN (((rt0.c2)AND(rt0.c0))) AND (1578153427))) ISNULL));
SELECT rt0.c0 FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((- (((((((((((((rt0.c1)AND(rt0.c0)))AND(rt0.c0)))OR('')))OR(rt0.c2)))OR(rt0.c2)))AND(rt0.c2))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((- (((((((((((((rt0.c1)AND(rt0.c0)))AND(rt0.c0)))OR('')))OR(rt0.c2)))OR(rt0.c2)))AND(rt0.c2))))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((- (((((((((((((rt0.c1)AND(rt0.c0)))AND(rt0.c0)))OR('')))OR(rt0.c2)))OR(rt0.c2)))AND(rt0.c2))))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE ((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0))))<((((x'') IS TRUE))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT ((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0))))<((((x'') IS TRUE))))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0))))<((((x'') IS TRUE))))) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((MIN(GROUP_CONCAT(vt1.c0))) NOT BETWEEN (vt1.c0) AND (DATETIME(vt1.c0, 0.19918012515228, COUNT(vt1.c0)))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (((MIN(GROUP_CONCAT(vt1.c0))) NOT BETWEEN (vt1.c0) AND (DATETIME(vt1.c0, 0.19918012515228, COUNT(vt1.c0)))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((((MIN(GROUP_CONCAT(vt1.c0))) NOT BETWEEN (vt1.c0) AND (DATETIME(vt1.c0, 0.19918012515228, COUNT(vt1.c0))))) ISNULL);
SELECT vt1.c0, rt0.c0 FROM vt1 NATURAL JOIN rt0;
SELECT vt1.c0, rt0.c0 FROM vt1 NATURAL JOIN rt0 WHERE (((ABS(DISTINCT vt1.c0))>=(-1305485799))) UNION ALL SELECT ALL vt1.c0, rt0.c0 FROM vt1 NATURAL JOIN rt0 WHERE ((NOT (((ABS(DISTINCT vt1.c0))>=(-1305485799))))) UNION ALL SELECT ALL vt1.c0, rt0.c0 FROM vt1 NATURAL JOIN rt0 WHERE (((((ABS(DISTINCT vt1.c0))>=(-1305485799))) ISNULL));
SELECT vt1.c0, rt0.c0 FROM vt1 NATURAL JOIN rt0;
SELECT DISTINCT rt0.c2, vt1.c0 FROM rt0 RIGHT OUTER JOIN vt1 ON (((vt1.c0 IN ())) NOT NULL);
SELECT DISTINCT rt0.c2, vt1.c0 FROM rt0 RIGHT OUTER JOIN vt1 ON (((vt1.c0 IN ())) NOT NULL) WHERE (((((rt0.c0)) BETWEEN ((rt0.c1)) AND (('-397306490'))) IN (rt0.c0 COLLATE NOCASE, NULL))) UNION SELECT DISTINCT rt0.c2, vt1.c0 FROM rt0 RIGHT OUTER JOIN vt1 ON (((vt1.c0 IN ())) NOT NULL) WHERE ((NOT (((((rt0.c0)) BETWEEN ((rt0.c1)) AND (('-397306490'))) IN (rt0.c0 COLLATE NOCASE, NULL))))) UNION SELECT DISTINCT rt0.c2, vt1.c0 FROM rt0 RIGHT OUTER JOIN vt1 ON (((vt1.c0 IN ())) NOT NULL) WHERE (((((((rt0.c0)) BETWEEN ((rt0.c1)) AND (('-397306490'))) IN (rt0.c0 COLLATE NOCASE, NULL))) ISNULL));
SELECT DISTINCT rt0.c2, vt1.c0 FROM rt0 RIGHT OUTER JOIN vt1 ON (((vt1.c0 IN ())) NOT NULL);
SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 WHERE (CASE WHEN (rt0.c2 IN ()) THEN ((rt0.c2)||(rt0.c2)) WHEN ((((rt0.c1)OR(rt0.c0)))OR(rt0.c0)) THEN (NOT (rt0.c1)) WHEN CASE WHEN x'40fd' THEN rt0.c1 ELSE rt0.c1 END THEN (((rt0.c0)) BETWEEN ((x'')) AND ((rt0.c2))) ELSE ((((rt0.c2)OR(rt0.c2)))OR(x'')) END) GROUP BY rt0.c2, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (CASE WHEN (rt0.c2 IN ()) THEN ((rt0.c2)||(rt0.c2)) WHEN ((((rt0.c1)OR(rt0.c0)))OR(rt0.c0)) THEN (NOT (rt0.c1)) WHEN CASE WHEN x'40fd' THEN rt0.c1 ELSE rt0.c1 END THEN (((rt0.c0)) BETWEEN ((x'')) AND ((rt0.c2))) ELSE ((((rt0.c2)OR(rt0.c2)))OR(x'')) END))) GROUP BY rt0.c2, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c1 FROM rt0 WHERE (((CASE WHEN (rt0.c2 IN ()) THEN ((rt0.c2)||(rt0.c2)) WHEN ((((rt0.c1)OR(rt0.c0)))OR(rt0.c0)) THEN (NOT (rt0.c1)) WHEN CASE WHEN x'40fd' THEN rt0.c1 ELSE rt0.c1 END THEN (((rt0.c0)) BETWEEN ((x'')) AND ((rt0.c2))) ELSE ((((rt0.c2)OR(rt0.c2)))OR(x'')) END) ISNULL)) GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT ALL vt1.c0, rt0.c1, rt0.c0 FROM rt0, vt1 GROUP BY vt1.c0, rt0.c1, rt0.c0;
SELECT vt1.c0, rt0.c1, rt0.c0 FROM rt0, vt1 GROUP BY vt1.c0, rt0.c1, rt0.c0 HAVING '|tsB_M' UNION ALL SELECT ALL vt1.c0, rt0.c1, rt0.c0 FROM rt0, vt1 GROUP BY vt1.c0, rt0.c1, rt0.c0 HAVING (NOT ('|tsB_M')) UNION ALL SELECT ALL vt1.c0, rt0.c1, rt0.c0 FROM rt0, vt1 GROUP BY vt1.c0, rt0.c1, rt0.c0 HAVING (('|tsB_M') ISNULL);
SELECT ALL vt1.c0, rt0.c1, rt0.c0 FROM rt0, vt1 GROUP BY vt1.c0, rt0.c1, rt0.c0;
SELECT vt1.c0, rt0.c1, rt0.c0 FROM rt0, vt1 GROUP BY vt1.c0, rt0.c1, rt0.c0 HAVING '|tsB_M' UNION ALL SELECT ALL vt1.c0, rt0.c1, rt0.c0 FROM rt0, vt1 GROUP BY vt1.c0, rt0.c1, rt0.c0 HAVING (NOT ('|tsB_M')) UNION ALL SELECT ALL vt1.c0, rt0.c1, rt0.c0 FROM rt0, vt1 GROUP BY vt1.c0, rt0.c1, rt0.c0 HAVING (('|tsB_M') ISNULL);
SELECT ALL vt1.c0, rt0.c1, rt0.c0 FROM rt0, vt1 GROUP BY vt1.c0, rt0.c1, rt0.c0;
SELECT rt0.c2 FROM rt0 INNER JOIN vt1 ON ((TRIM(DISTINCT vt1.c0))>>(CAST(vt1.c0 AS REAL)));
SELECT rt0.c2 FROM rt0 INNER JOIN vt1 ON ((TRIM(DISTINCT vt1.c0))>>(CAST(vt1.c0 AS REAL))) WHERE (CASE WHEN vt1.c0 THEN (((rt0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c1))) ELSE ((rt0.c0)OR(rt0.c0)) END) UNION ALL SELECT ALL rt0.c2 FROM rt0 INNER JOIN vt1 ON ((TRIM(DISTINCT vt1.c0))>>(CAST(vt1.c0 AS REAL))) WHERE ((NOT (CASE WHEN vt1.c0 THEN (((rt0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c1))) ELSE ((rt0.c0)OR(rt0.c0)) END))) UNION ALL SELECT rt0.c2 FROM rt0 INNER JOIN vt1 ON ((TRIM(DISTINCT vt1.c0))>>(CAST(vt1.c0 AS REAL))) WHERE (((CASE WHEN vt1.c0 THEN (((rt0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c1))) ELSE ((rt0.c0)OR(rt0.c0)) END) ISNULL));
SELECT rt0.c2 FROM rt0 INNER JOIN vt1 ON ((TRIM(DISTINCT vt1.c0))>>(CAST(vt1.c0 AS REAL)));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((0.8306048337812513 IN ())) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT ((0.8306048337812513 IN ())))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((((0.8306048337812513 IN ())) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT vt1.c0, rt0.c0 FROM rt0, vt1 GROUP BY vt1.c0, rt0.c0;
SELECT ALL vt1.c0, rt0.c0 FROM rt0, vt1 WHERE ((((vt1.c0))<((771628738))) COLLATE BINARY COLLATE NOCASE) GROUP BY vt1.c0, rt0.c0 UNION SELECT vt1.c0, rt0.c0 FROM rt0, vt1 WHERE ((NOT ((((vt1.c0))<((771628738))) COLLATE BINARY COLLATE NOCASE))) GROUP BY vt1.c0, rt0.c0 UNION SELECT vt1.c0, rt0.c0 FROM rt0, vt1 WHERE ((((((vt1.c0))<((771628738))) COLLATE BINARY COLLATE NOCASE) ISNULL)) GROUP BY vt1.c0, rt0.c0;
SELECT vt1.c0, rt0.c0 FROM rt0, vt1 GROUP BY vt1.c0, rt0.c0;
SELECT rt0.c0, rt0.c1 FROM vt1, rt0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM vt1, rt0 GROUP BY rt0.c0, rt0.c1 HAVING GROUP_CONCAT(rt0.c0 COLLATE NOCASE) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM vt1, rt0 GROUP BY rt0.c0, rt0.c1 HAVING (NOT (GROUP_CONCAT(rt0.c0 COLLATE NOCASE))) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM vt1, rt0 GROUP BY rt0.c0, rt0.c1 HAVING ((GROUP_CONCAT(rt0.c0 COLLATE NOCASE)) ISNULL);
SELECT rt0.c0, rt0.c1 FROM vt1, rt0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM vt1, rt0 GROUP BY rt0.c0, rt0.c1 HAVING GROUP_CONCAT(rt0.c0 COLLATE NOCASE) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM vt1, rt0 GROUP BY rt0.c0, rt0.c1 HAVING (NOT (GROUP_CONCAT(rt0.c0 COLLATE NOCASE))) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM vt1, rt0 GROUP BY rt0.c0, rt0.c1 HAVING ((GROUP_CONCAT(rt0.c0 COLLATE NOCASE)) ISNULL);
SELECT rt0.c0, rt0.c1 FROM vt1, rt0 GROUP BY rt0.c0, rt0.c1;
SELECT * FROM rt0, vt1;
SELECT * FROM rt0, vt1 WHERE (((((rt0.c0)OR(((vt1.c0)&(rt0.c0)))))AND(CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 END))) UNION ALL SELECT * FROM rt0, vt1 WHERE ((NOT (((((rt0.c0)OR(((vt1.c0)&(rt0.c0)))))AND(CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 END))))) UNION ALL SELECT * FROM rt0, vt1 WHERE (((((((rt0.c0)OR(((vt1.c0)&(rt0.c0)))))AND(CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 END))) ISNULL));
SELECT * FROM rt0, vt1;
SELECT DISTINCT rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c2 FROM rt0 WHERE (((rt0.c0 COLLATE BINARY) IS FALSE)) UNION SELECT DISTINCT rt0.c2 FROM rt0 WHERE ((NOT (((rt0.c0 COLLATE BINARY) IS FALSE)))) UNION SELECT DISTINCT rt0.c2 FROM rt0 WHERE (((((rt0.c0 COLLATE BINARY) IS FALSE)) ISNULL));
SELECT DISTINCT rt0.c2 FROM rt0;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 WHERE (rt0.c2) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0 WHERE ((NOT (rt0.c2))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0 WHERE (((rt0.c2) ISNULL)) GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING MIN((NOT (MIN(vt1.c0)))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (MIN((NOT (MIN(vt1.c0)))))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((MIN((NOT (MIN(vt1.c0))))) ISNULL);
SELECT ALL TOTAL(((rt0.c1 IN (rt0.c2, rt0.c0)) IN (((((((((rt0.c1)AND(0.4954260218081522)))AND(rt0.c0)))OR(rt0.c0)))OR(x'9147')), CAST(rt0.c2 AS TEXT)))) FROM rt0 ORDER BY CAST(((rt0.c1) BETWEEN (0X5e10b5d3) AND (0Xffffffff8e038f24)) AS INTEGER) DESC  NULLS FIRST, (+ ((rt0.c2 IN ()))) DESC  NULLS FIRST, ((((rt0.c2)>=(rt0.c2))) IS TRUE);
SELECT ALL rt0.c1 FROM vt1, rt0;
SELECT rt0.c1 FROM vt1, rt0 WHERE (((((rt0.c1)OR(vt1.c0)))*((((rt0.c1, rt0.c0, rt0.c0))<=((vt1.c0, rt0.c0, '.+')))))) UNION ALL SELECT ALL rt0.c1 FROM vt1, rt0 WHERE ((NOT (((((rt0.c1)OR(vt1.c0)))*((((rt0.c1, rt0.c0, rt0.c0))<=((vt1.c0, rt0.c0, '.+')))))))) UNION ALL SELECT ALL rt0.c1 FROM vt1, rt0 WHERE (((((((rt0.c1)OR(vt1.c0)))*((((rt0.c1, rt0.c0, rt0.c0))<=((vt1.c0, rt0.c0, '.+')))))) ISNULL));
SELECT ALL rt0.c1 FROM vt1, rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((json_extract(rt0.c1, rt0.c0)) NOT BETWEEN (CASE rt0.c2  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c0 END) AND (((rt0.c2) IS FALSE)))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((json_extract(rt0.c1, rt0.c0)) NOT BETWEEN (CASE rt0.c2  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c0 END) AND (((rt0.c2) IS FALSE)))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((json_extract(rt0.c1, rt0.c0)) NOT BETWEEN (CASE rt0.c2  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c0 END) AND (((rt0.c2) IS FALSE)))) ISNULL));
SELECT rt0.c2, rt0.c0 FROM vt1 FULL OUTER JOIN rt0 ON ((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c1)) COLLATE BINARY GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM vt1 FULL OUTER JOIN rt0 ON ((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c1)) COLLATE BINARY WHERE (((rt0.c2)IS(rt0.c0)) COLLATE BINARY) GROUP BY rt0.c2, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c0 FROM vt1 FULL OUTER JOIN rt0 ON ((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c1)) COLLATE BINARY WHERE ((NOT (((rt0.c2)IS(rt0.c0)) COLLATE BINARY))) GROUP BY rt0.c2, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c0 FROM vt1 FULL OUTER JOIN rt0 ON ((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c1)) COLLATE BINARY WHERE (((((rt0.c2)IS(rt0.c0)) COLLATE BINARY) ISNULL)) GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM vt1 FULL OUTER JOIN rt0 ON ((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c1)) COLLATE BINARY GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c0, vt1.c0, rt0.c1 FROM rt0, vt1 GROUP BY rt0.c0, vt1.c0, rt0.c1;
SELECT rt0.c0, vt1.c0, rt0.c1 FROM rt0, vt1 GROUP BY rt0.c0, vt1.c0, rt0.c1 HAVING CAST(vt1.c0 AS BLOB) COLLATE RTRIM UNION ALL SELECT ALL rt0.c0, vt1.c0, rt0.c1 FROM rt0, vt1 GROUP BY rt0.c0, vt1.c0, rt0.c1 HAVING (NOT (CAST(vt1.c0 AS BLOB) COLLATE RTRIM)) UNION ALL SELECT ALL rt0.c0, vt1.c0, rt0.c1 FROM rt0, vt1 GROUP BY rt0.c0, vt1.c0, rt0.c1 HAVING ((CAST(vt1.c0 AS BLOB) COLLATE RTRIM) ISNULL);
SELECT ALL rt0.c0, vt1.c0, rt0.c1 FROM rt0, vt1 GROUP BY rt0.c0, vt1.c0, rt0.c1;
SELECT rt0.c0, vt1.c0, rt0.c1 FROM rt0, vt1 GROUP BY rt0.c0, vt1.c0, rt0.c1 HAVING CAST(vt1.c0 AS BLOB) COLLATE RTRIM UNION ALL SELECT ALL rt0.c0, vt1.c0, rt0.c1 FROM rt0, vt1 GROUP BY rt0.c0, vt1.c0, rt0.c1 HAVING (NOT (CAST(vt1.c0 AS BLOB) COLLATE RTRIM)) UNION ALL SELECT ALL rt0.c0, vt1.c0, rt0.c1 FROM rt0, vt1 GROUP BY rt0.c0, vt1.c0, rt0.c1 HAVING ((CAST(vt1.c0 AS BLOB) COLLATE RTRIM) ISNULL);
SELECT ALL rt0.c0, vt1.c0, rt0.c1 FROM rt0, vt1 GROUP BY rt0.c0, vt1.c0, rt0.c1;
SELECT rt0.c1, rt0.c0, vt1.c0 FROM vt1, rt0;
SELECT rt0.c1, rt0.c0, vt1.c0 FROM vt1, rt0 WHERE (x'd020') UNION ALL SELECT rt0.c1, rt0.c0, vt1.c0 FROM vt1, rt0 WHERE ((NOT (x'd020'))) UNION ALL SELECT rt0.c1, rt0.c0, vt1.c0 FROM vt1, rt0 WHERE (((x'd020') ISNULL));
SELECT rt0.c1, rt0.c0, vt1.c0 FROM vt1, rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((((rt0.c2)<=(rt0.c2))) NOT BETWEEN ((((rt0.c1, rt0.c1, rt0.c2)) NOT BETWEEN ((rt0.c0, rt0.c0, rt0.c0)) AND ((0.15136644487515538, rt0.c0, rt0.c0)))) AND (0X59956125))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((((rt0.c2)<=(rt0.c2))) NOT BETWEEN ((((rt0.c1, rt0.c1, rt0.c2)) NOT BETWEEN ((rt0.c0, rt0.c0, rt0.c0)) AND ((0.15136644487515538, rt0.c0, rt0.c0)))) AND (0x59956125))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((((rt0.c2)<=(rt0.c2))) NOT BETWEEN ((((rt0.c1, rt0.c1, rt0.c2)) NOT BETWEEN ((rt0.c0, rt0.c0, rt0.c0)) AND ((0.15136644487515538, rt0.c0, rt0.c0)))) AND (0X59956125))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE (CASE WHEN vt1.c0 THEN ((vt1.c0)+(vt1.c0)) WHEN ((vt1.c0)/(x'')) THEN CAST(vt1.c0 AS NUMERIC) WHEN NULL THEN ((((vt1.c0)AND(vt1.c0)))OR(NULL)) ELSE (((vt1.c0)) BETWEEN ((NULL)) AND ((vt1.c0))) END) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (CASE WHEN vt1.c0 THEN ((vt1.c0)+(vt1.c0)) WHEN ((vt1.c0)/(x'')) THEN CAST(vt1.c0 AS NUMERIC) WHEN NULL THEN ((((vt1.c0)AND(vt1.c0)))OR(NULL)) ELSE (((vt1.c0)) BETWEEN ((NULL)) AND ((vt1.c0))) END))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE (((CASE WHEN vt1.c0 THEN ((vt1.c0)+(vt1.c0)) WHEN ((vt1.c0)/(x'')) THEN CAST(vt1.c0 AS NUMERIC) WHEN NULL THEN ((((vt1.c0)AND(vt1.c0)))OR(NULL)) ELSE (((vt1.c0)) BETWEEN ((NULL)) AND ((vt1.c0))) END) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING ((((rt0.c2) BETWEEN (COUNT(*)) AND (rt0.c2))) BETWEEN (TOTAL(TOTAL(AVG(rt0.c0)))) AND (TOTAL(rt0.c1))) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING (NOT (((((rt0.c2) BETWEEN (COUNT(*)) AND (rt0.c2))) BETWEEN (TOTAL(TOTAL(AVG(rt0.c0)))) AND (TOTAL(rt0.c1))))) UNION ALL SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING ((((((rt0.c2) BETWEEN (COUNT(*)) AND (rt0.c2))) BETWEEN (TOTAL(TOTAL(AVG(rt0.c0)))) AND (TOTAL(rt0.c1)))) ISNULL);
SELECT TOTAL((rt0.c0 IN ()) COLLATE BINARY) FROM rt0, vt1 ORDER BY ((0.9388584982181754) BETWEEN ((- (vt1.c0))) AND (((rt0.c1)*(NULL)))) DESC;
SELECT ALL rt0.c2, rt0.c0, rt0.c1, vt1.c0 FROM vt1 INNER JOIN rt0 ON CAST(rt0.c0 COLLATE BINARY AS TEXT);
SELECT rt0.c2, rt0.c0, rt0.c1, vt1.c0 FROM vt1 INNER JOIN rt0 ON CAST(rt0.c0 COLLATE BINARY AS TEXT) WHERE (x'') UNION ALL SELECT rt0.c2, rt0.c0, rt0.c1, vt1.c0 FROM vt1 INNER JOIN rt0 ON CAST(rt0.c0 COLLATE BINARY AS TEXT) WHERE ((NOT (x''))) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c1, vt1.c0 FROM vt1 INNER JOIN rt0 ON CAST(rt0.c0 COLLATE BINARY AS TEXT) WHERE (((x'') ISNULL));
SELECT ALL rt0.c2, rt0.c0, rt0.c1, vt1.c0 FROM vt1 INNER JOIN rt0 ON CAST(rt0.c0 COLLATE BINARY AS TEXT);
SELECT DISTINCT rt0.c1 FROM vt1, rt0;
SELECT DISTINCT rt0.c1 FROM vt1, rt0 WHERE ((((+ (vt1.c0))) IS TRUE)) UNION SELECT DISTINCT rt0.c1 FROM vt1, rt0 WHERE ((NOT ((((+ (vt1.c0))) IS TRUE)))) UNION SELECT DISTINCT rt0.c1 FROM vt1, rt0 WHERE ((((((+ (vt1.c0))) IS TRUE)) ISNULL));
SELECT DISTINCT rt0.c1 FROM vt1, rt0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE (CASE CASE WHEN vt1.c0 THEN vt1.c0 END  WHEN LTRIM(vt1.c0) THEN HEX(DISTINCT vt1.c0) WHEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE 0.6970230868651421 END THEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (0x41c42775)) WHEN CAST(vt1.c0 AS BLOB) THEN CAST(vt1.c0 AS REAL) END) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT (CASE CASE WHEN vt1.c0 THEN vt1.c0 END  WHEN LTRIM(vt1.c0) THEN HEX(DISTINCT vt1.c0) WHEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE 0.6970230868651421 END THEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (0x41c42775)) WHEN CAST(vt1.c0 AS BLOB) THEN CAST(vt1.c0 AS REAL) END))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE (((CASE CASE WHEN vt1.c0 THEN vt1.c0 END  WHEN LTRIM(vt1.c0) THEN HEX(DISTINCT vt1.c0) WHEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE 0.6970230868651421 END THEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (0X41c42775)) WHEN CAST(vt1.c0 AS BLOB) THEN CAST(vt1.c0 AS REAL) END) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING TOTAL(COUNT(COUNT(COUNT(TOTAL(rt0.c1))))) UNION ALL SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING (NOT (TOTAL(COUNT(COUNT(COUNT(TOTAL(rt0.c1))))))) UNION ALL SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING ((TOTAL(COUNT(COUNT(COUNT(TOTAL(rt0.c1)))))) ISNULL);
SELECT ALL rt0.c0, rt0.c1 FROM rt0;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 WHERE (CAST(((((rt0.c2)AND(rt0.c0)))AND(rt0.c1)) AS NUMERIC)) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (CAST(((((rt0.c2)AND(rt0.c0)))AND(rt0.c1)) AS NUMERIC)))) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM rt0 WHERE (((CAST(((((rt0.c2)AND(rt0.c0)))AND(rt0.c1)) AS NUMERIC)) ISNULL));
SELECT ALL rt0.c0, rt0.c1 FROM rt0;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((((vt1.c0) NOT BETWEEN (NULL) AND (vt1.c0)))==(((vt1.c0)>=(vt1.c0))))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT (((((vt1.c0) NOT BETWEEN (NULL) AND (vt1.c0)))==(((vt1.c0)>=(vt1.c0))))))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((((((vt1.c0) NOT BETWEEN (NULL) AND (vt1.c0)))=(((vt1.c0)>=(vt1.c0))))) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE (')-') GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT (')-'))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE (((')-') ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0, rt0.c2, rt0.c1, rt0.c0 FROM rt0 NOT INDEXED, vt1 GROUP BY vt1.c0, rt0.c2, rt0.c1, rt0.c0;
SELECT vt1.c0, rt0.c2, rt0.c1, rt0.c0 FROM rt0, vt1 GROUP BY vt1.c0, rt0.c2, rt0.c1, rt0.c0 HAVING ((COUNT(*))-((NOT (GROUP_CONCAT(rt0.c1))))) UNION ALL SELECT vt1.c0, rt0.c2, rt0.c1, rt0.c0 FROM rt0, vt1 GROUP BY vt1.c0, rt0.c2, rt0.c1, rt0.c0 HAVING (NOT (((COUNT(*))-((NOT (GROUP_CONCAT(rt0.c1))))))) UNION ALL SELECT vt1.c0, rt0.c2, rt0.c1, rt0.c0 FROM rt0, vt1 GROUP BY vt1.c0, rt0.c2, rt0.c1, rt0.c0 HAVING ((((COUNT(*))-((NOT (GROUP_CONCAT(rt0.c1)))))) ISNULL);
SELECT ALL vt1.c0, rt0.c2, rt0.c1, rt0.c0 FROM rt0 NOT INDEXED, vt1 GROUP BY vt1.c0, rt0.c2, rt0.c1, rt0.c0;
SELECT vt1.c0, rt0.c2, rt0.c1, rt0.c0 FROM rt0, vt1 GROUP BY vt1.c0, rt0.c2, rt0.c1, rt0.c0 HAVING ((COUNT(*))-((NOT (GROUP_CONCAT(rt0.c1))))) UNION ALL SELECT vt1.c0, rt0.c2, rt0.c1, rt0.c0 FROM rt0, vt1 GROUP BY vt1.c0, rt0.c2, rt0.c1, rt0.c0 HAVING (NOT (((COUNT(*))-((NOT (GROUP_CONCAT(rt0.c1))))))) UNION ALL SELECT vt1.c0, rt0.c2, rt0.c1, rt0.c0 FROM rt0, vt1 GROUP BY vt1.c0, rt0.c2, rt0.c1, rt0.c0 HAVING ((((COUNT(*))-((NOT (GROUP_CONCAT(rt0.c1)))))) ISNULL);
SELECT ALL vt1.c0, rt0.c2, rt0.c1, rt0.c0 FROM rt0 NOT INDEXED, vt1 GROUP BY vt1.c0, rt0.c2, rt0.c1, rt0.c0;
SELECT ALL * FROM rt0, vt1;
SELECT * FROM rt0, vt1 WHERE ((((((vt1.c0)OR(rt0.c0)))AND(vt1.c0)) IN (((rt0.c1) BETWEEN ('247577505') AND (rt0.c1))))) UNION ALL SELECT ALL * FROM rt0, vt1 WHERE ((NOT ((((((vt1.c0)OR(rt0.c0)))AND(vt1.c0)) IN (((rt0.c1) BETWEEN ('247577505') AND (rt0.c1))))))) UNION ALL SELECT ALL * FROM rt0, vt1 WHERE ((((((((vt1.c0)OR(rt0.c0)))AND(vt1.c0)) IN (((rt0.c1) BETWEEN ('247577505') AND (rt0.c1))))) ISNULL));
SELECT ALL * FROM rt0, vt1;
SELECT DISTINCT * FROM rt0, vt1;
SELECT DISTINCT * FROM rt0, vt1 WHERE (vt1.c0) UNION SELECT DISTINCT * FROM rt0, vt1 WHERE ((NOT (vt1.c0))) UNION SELECT DISTINCT * FROM rt0, vt1 WHERE (((vt1.c0) ISNULL));
SELECT DISTINCT * FROM rt0, vt1;
SELECT ALL vt1.c0, rt0.c0, rt0.c2 FROM rt0, vt1 GROUP BY vt1.c0, rt0.c0, rt0.c2;
SELECT ALL vt1.c0, rt0.c0, rt0.c2 FROM rt0, vt1 WHERE ((((rt0.c2, rt0.c2, rt0.c0)) BETWEEN ((((rt0.c1) NOT BETWEEN (vt1.c0) AND (vt1.c0)), ((rt0.c2)<<(rt0.c0)), CAST(rt0.c0 AS REAL))) AND ((vt1.c0, CASE rt0.c2  WHEN 1420125829 THEN rt0.c2 ELSE rt0.c2 END, ((rt0.c1) IS FALSE))))) GROUP BY vt1.c0, rt0.c0, rt0.c2 UNION SELECT ALL vt1.c0, rt0.c0, rt0.c2 FROM rt0, vt1 WHERE ((NOT ((((rt0.c2, rt0.c2, rt0.c0)) BETWEEN ((((rt0.c1) NOT BETWEEN (vt1.c0) AND (vt1.c0)), ((rt0.c2)<<(rt0.c0)), CAST(rt0.c0 AS REAL))) AND ((vt1.c0, CASE rt0.c2  WHEN 1420125829 THEN rt0.c2 ELSE rt0.c2 END, ((rt0.c1) IS FALSE))))))) GROUP BY vt1.c0, rt0.c0, rt0.c2 UNION SELECT ALL vt1.c0, rt0.c0, rt0.c2 FROM rt0, vt1 WHERE ((((((rt0.c2, rt0.c2, rt0.c0)) BETWEEN ((((rt0.c1) NOT BETWEEN (vt1.c0) AND (vt1.c0)), ((rt0.c2)<<(rt0.c0)), CAST(rt0.c0 AS REAL))) AND ((vt1.c0, CASE rt0.c2  WHEN 1420125829 THEN rt0.c2 ELSE rt0.c2 END, ((rt0.c1) IS FALSE))))) ISNULL)) GROUP BY vt1.c0, rt0.c0, rt0.c2;
SELECT ALL vt1.c0, rt0.c0, rt0.c2 FROM rt0, vt1 GROUP BY vt1.c0, rt0.c0, rt0.c2;
SELECT rt0.c2, rt0.c0 FROM vt1, rt0 GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM vt1, rt0 GROUP BY rt0.c2, rt0.c0 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM vt1, rt0 GROUP BY rt0.c2, rt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c2, rt0.c0 FROM vt1 NOT INDEXED, rt0 GROUP BY rt0.c2, rt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c2, rt0.c0 FROM vt1, rt0 GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM vt1, rt0 GROUP BY rt0.c2, rt0.c0 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM vt1, rt0 GROUP BY rt0.c2, rt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c2, rt0.c0 FROM vt1 NOT INDEXED, rt0 GROUP BY rt0.c2, rt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c2, rt0.c0 FROM vt1, rt0 GROUP BY rt0.c2, rt0.c0;
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE ((CAST(rt0.c0 AS TEXT) IN ())) UNION ALL SELECT * FROM rt0 WHERE ((NOT ((CAST(rt0.c0 AS TEXT) IN ())))) UNION ALL SELECT * FROM rt0 WHERE ((((CAST(rt0.c0 AS TEXT) IN ())) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((((vt1.c0)!=(vt1.c0)))AND(((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0))))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT (((((vt1.c0)!=(vt1.c0)))AND(((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0))))))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((((((vt1.c0)!=(vt1.c0)))AND(((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0))))) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c1 FROM rt0 WHERE (((rt0.c0 COLLATE BINARY) ISNULL)) GROUP BY rt0.c0, rt0.c1 UNION SELECT rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (((rt0.c0 COLLATE BINARY) ISNULL)))) GROUP BY rt0.c0, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c1 FROM rt0 WHERE (((((rt0.c0 COLLATE BINARY) ISNULL)) ISNULL)) GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 NOT INDEXED GROUP BY rt0.c0 HAVING SUM(MIN(MIN(rt0.c1)) COLLATE BINARY) UNION ALL SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (NOT (SUM(MIN(MIN(rt0.c1)) COLLATE BINARY))) UNION ALL SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING ((SUM(MIN(MIN(rt0.c1)) COLLATE BINARY)) ISNULL);
SELECT ALL TOTAL((CAST(rt0.c1 AS REAL) IN ())) FROM rt0 ORDER BY CAST(((rt0.c0) ISNULL) AS NUMERIC) DESC  NULLS FIRST;
SELECT ALL vt1.c0 FROM rt0, vt1;
SELECT vt1.c0 FROM rt0, vt1 WHERE (CASE (+ (rt0.c0))  WHEN rtreenode(vt1.c0, vt1.c0) THEN ((rt0.c2)GLOB(rt0.c1)) WHEN x'' THEN '-330398886' WHEN CASE vt1.c0  WHEN rt0.c1 THEN rt0.c0 END THEN ((rt0.c0)OR(vt1.c0)) ELSE ((rt0.c2) NOTNULL) END) UNION ALL SELECT ALL vt1.c0 FROM rt0, vt1 WHERE ((NOT (CASE (+ (rt0.c0))  WHEN rtreenode(vt1.c0, vt1.c0) THEN ((rt0.c2)GLOB(rt0.c1)) WHEN x'' THEN '-330398886' WHEN CASE vt1.c0  WHEN rt0.c1 THEN rt0.c0 END THEN ((rt0.c0)OR(vt1.c0)) ELSE ((rt0.c2) NOTNULL) END))) UNION ALL SELECT ALL vt1.c0 FROM rt0, vt1 WHERE (((CASE (+ (rt0.c0))  WHEN rtreenode(vt1.c0, vt1.c0) THEN ((rt0.c2)GLOB(rt0.c1)) WHEN x'' THEN '-330398886' WHEN CASE vt1.c0  WHEN rt0.c1 THEN rt0.c0 END THEN ((rt0.c0)OR(vt1.c0)) ELSE ((rt0.c2) NOTNULL) END) ISNULL));
SELECT ALL vt1.c0 FROM rt0, vt1;
SELECT DISTINCT * FROM rt0, vt1;
SELECT DISTINCT * FROM rt0, vt1 WHERE (-1714203281) UNION SELECT DISTINCT * FROM rt0, vt1 WHERE ((NOT (-1714203281))) UNION SELECT DISTINCT * FROM rt0, vt1 WHERE (((-1714203281) ISNULL));
SELECT DISTINCT * FROM rt0, vt1;
SELECT ALL rt0.c1 FROM vt1, rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM vt1, rt0 WHERE (((((rt0.c0) BETWEEN (rt0.c0) AND (vt1.c0)))OR(vt1.c0 COLLATE BINARY))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM vt1, rt0 WHERE ((NOT (((((rt0.c0) BETWEEN (rt0.c0) AND (vt1.c0)))OR(vt1.c0 COLLATE BINARY))))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM vt1, rt0 WHERE (((((((rt0.c0) BETWEEN (rt0.c0) AND (vt1.c0)))OR(vt1.c0 COLLATE BINARY))) ISNULL)) GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM vt1, rt0 GROUP BY rt0.c1;
SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING ((COUNT(MAX(COUNT(*)))) NOT NULL) UNION ALL SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING (NOT (((COUNT(MAX(COUNT(*)))) NOT NULL))) UNION ALL SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING ((((COUNT(MAX(COUNT(*)))) NOT NULL)) ISNULL);
SELECT SUM(((((rt0.c0) NOT NULL)) BETWEEN (((rt0.c2)||(rt0.c2))) AND (((0.4682762578599069)||(rt0.c1))))) FROM vt1, rt0 ORDER BY (((('8&tv[')AND(((rt0.c1) IS TRUE))))AND(((rt0.c1) NOT NULL)))  NULLS LAST;
SELECT ALL vt1.c0 FROM vt1;
SELECT vt1.c0 FROM vt1 WHERE (((((vt1.c0)&(vt1.c0)))-(((vt1.c0)<=(vt1.c0))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (((((vt1.c0)&(vt1.c0)))-(((vt1.c0)<=(vt1.c0))))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE (((((((vt1.c0)&(vt1.c0)))-(((vt1.c0)<=(vt1.c0))))) ISNULL));
SELECT ALL vt1.c0 FROM vt1;
SELECT DISTINCT rt0.c2 FROM rt0, vt1;
SELECT DISTINCT rt0.c2 FROM rt0, vt1 WHERE (vt1.c0) UNION SELECT DISTINCT rt0.c2 FROM rt0, vt1 WHERE ((NOT (vt1.c0))) UNION SELECT DISTINCT rt0.c2 FROM rt0, vt1 WHERE (((vt1.c0) ISNULL));
SELECT DISTINCT rt0.c2 FROM rt0, vt1;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE ((((NOT (vt1.c0)))>((1468051466 IN (vt1.c0, vt1.c0, vt1.c0))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT ((((NOT (vt1.c0)))>((1468051466 IN (vt1.c0, vt1.c0, vt1.c0))))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((((((NOT (vt1.c0)))>((1468051466 IN (vt1.c0, vt1.c0, vt1.c0))))) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT rt0.c2, vt1.c0, rt0.c0, rt0.c1 FROM vt1, rt0 GROUP BY rt0.c2, vt1.c0, rt0.c0, rt0.c1;
SELECT rt0.c2, vt1.c0, rt0.c0, rt0.c1 FROM vt1, rt0 GROUP BY rt0.c2, vt1.c0, rt0.c0, rt0.c1 HAVING MAX(COUNT(rt0.c2)) UNION ALL SELECT rt0.c2, vt1.c0, rt0.c0, rt0.c1 FROM vt1, rt0 GROUP BY rt0.c2, vt1.c0, rt0.c0, rt0.c1 HAVING (NOT (MAX(COUNT(rt0.c2)))) UNION ALL SELECT rt0.c2, vt1.c0, rt0.c0, rt0.c1 FROM vt1, rt0 GROUP BY rt0.c2, vt1.c0, rt0.c0, rt0.c1 HAVING ((MAX(COUNT(rt0.c2))) ISNULL);
SELECT ALL rt0.c2 FROM rt0;
SELECT rt0.c2 FROM rt0 WHERE (((((((((rt0.c1)AND((rt0.c2 IN ()))))OR((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c1))))))OR(((rt0.c1) NOT BETWEEN (rt0.c0) AND (0.3961366631248443)))))OR(rt0.c1))) UNION ALL SELECT ALL rt0.c2 FROM rt0 WHERE ((NOT (((((((((rt0.c1)AND((rt0.c2 IN ()))))OR((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c1))))))OR(((rt0.c1) NOT BETWEEN (rt0.c0) AND (0.3961366631248443)))))OR(rt0.c1))))) UNION ALL SELECT rt0.c2 FROM rt0 WHERE (((((((((((rt0.c1)AND((rt0.c2 IN ()))))OR((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c1))))))OR(((rt0.c1) NOT BETWEEN (rt0.c0) AND (0.3961366631248443)))))OR(rt0.c1))) ISNULL));
SELECT ALL rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM vt1, rt0;
SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM vt1, rt0 WHERE (((rt0.c1 COLLATE BINARY) IS FALSE)) UNION SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM vt1, rt0 WHERE ((NOT (((rt0.c1 COLLATE BINARY) IS FALSE)))) UNION SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM vt1, rt0 WHERE (((((rt0.c1 COLLATE BINARY) IS FALSE)) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM vt1, rt0;
SELECT rt0.c1 FROM rt0 INNER JOIN vt1 ON (((rt0.c2)>('-413431327')) IN ()) GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 INNER JOIN vt1 ON (((rt0.c2)>('-413431327')) IN ()) WHERE (json_array_length(rt0.c2 COLLATE NOCASE)) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0 INNER JOIN vt1 ON (((rt0.c2)>('-413431327')) IN ()) WHERE ((NOT (json_array_length(rt0.c2 COLLATE NOCASE)))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0 INNER JOIN vt1 ON (((rt0.c2)>('-413431327')) IN ()) WHERE (((json_array_length(rt0.c2 COLLATE NOCASE)) ISNULL)) GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 INNER JOIN vt1 ON (((rt0.c2)>('-413431327')) IN ()) GROUP BY rt0.c1;
SELECT ALL rt0.c2, vt1.c0 FROM vt1, rt0 GROUP BY rt0.c2, vt1.c0;
SELECT ALL rt0.c2, vt1.c0 FROM vt1, rt0 GROUP BY rt0.c2, vt1.c0 HAVING (((GROUP_CONCAT(COUNT(COUNT(*))))) BETWEEN ((TOTAL(GROUP_CONCAT(MIN(vt1.c0))))) AND ((TOTAL(rt0.c0)))) UNION ALL SELECT rt0.c2, vt1.c0 FROM vt1, rt0 GROUP BY rt0.c2, vt1.c0 HAVING (NOT ((((GROUP_CONCAT(COUNT(COUNT(*))))) BETWEEN ((TOTAL(GROUP_CONCAT(MIN(vt1.c0))))) AND ((TOTAL(rt0.c0)))))) UNION ALL SELECT ALL rt0.c2, vt1.c0 FROM vt1, rt0 GROUP BY rt0.c2, vt1.c0 HAVING (((((GROUP_CONCAT(COUNT(COUNT(*))))) BETWEEN ((TOTAL(GROUP_CONCAT(MIN(vt1.c0))))) AND ((TOTAL(rt0.c0))))) ISNULL);
SELECT rt0.c1, vt1.c0, rt0.c0 FROM rt0, vt1;
SELECT ALL rt0.c1, vt1.c0, rt0.c0 FROM rt0, vt1 WHERE (((UPPER(vt1.c0))!=(CASE x''  WHEN vt1.c0 THEN rt0.c2 END))) UNION ALL SELECT ALL rt0.c1, vt1.c0, rt0.c0 FROM rt0, vt1 WHERE ((NOT (((UPPER(vt1.c0))!=(CASE x''  WHEN vt1.c0 THEN rt0.c2 END))))) UNION ALL SELECT rt0.c1, vt1.c0, rt0.c0 FROM rt0, vt1 WHERE (((((UPPER(vt1.c0))!=(CASE x''  WHEN vt1.c0 THEN rt0.c2 END))) ISNULL));
SELECT rt0.c1, vt1.c0, rt0.c0 FROM rt0, vt1;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (CASE WHEN ((rt0.c1) NOT BETWEEN (rt0.c1) AND (0.9428932545323836)) THEN CASE WHEN rt0.c2 THEN rt0.c0 END ELSE ((rt0.c1)>=(rt0.c2)) END) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (CASE WHEN ((rt0.c1) NOT BETWEEN (rt0.c1) AND (0.9428932545323836)) THEN CASE WHEN rt0.c2 THEN rt0.c0 END ELSE ((rt0.c1)>=(rt0.c2)) END))) UNION SELECT DISTINCT * FROM rt0 WHERE (((CASE WHEN ((rt0.c1) NOT BETWEEN (rt0.c1) AND (0.9428932545323836)) THEN CASE WHEN rt0.c2 THEN rt0.c0 END ELSE ((rt0.c1)>=(rt0.c2)) END) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 WHERE (((((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c1)))!=(rt0.c2))) GROUP BY rt0.c0, rt0.c2 UNION SELECT rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (((((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c1)))<>(rt0.c2))))) GROUP BY rt0.c0, rt0.c2 UNION SELECT rt0.c0, rt0.c2 FROM rt0 WHERE (((((((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c1)))<>(rt0.c2))) ISNULL)) GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, vt1.c0, rt0.c2 FROM rt0, vt1 GROUP BY rt0.c1, rt0.c0, vt1.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, vt1.c0, rt0.c2 FROM rt0, vt1 GROUP BY rt0.c1, rt0.c0, vt1.c0, rt0.c2 HAVING MIN(((rt0.c2)*(SUM(vt1.c0)))) UNION ALL SELECT rt0.c1, rt0.c0, vt1.c0, rt0.c2 FROM rt0, vt1 NOT INDEXED GROUP BY rt0.c1, rt0.c0, vt1.c0, rt0.c2 HAVING (NOT (MIN(((rt0.c2)*(SUM(vt1.c0)))))) UNION ALL SELECT ALL rt0.c1, rt0.c0, vt1.c0, rt0.c2 FROM rt0, vt1 GROUP BY rt0.c1, rt0.c0, vt1.c0, rt0.c2 HAVING ((MIN(((rt0.c2)*(SUM(vt1.c0))))) ISNULL);
SELECT ALL rt0.c0, vt1.c0, rt0.c1 FROM rt0, vt1;
SELECT ALL rt0.c0, vt1.c0, rt0.c1 FROM rt0, vt1 WHERE (((vt1.c0)<<(((((((((((((rt0.c1)AND(rt0.c1)))AND(rt0.c0)))OR(vt1.c0)))AND(-1.389529946E9)))AND(0.8256067075715385)))AND(rt0.c2))))) UNION ALL SELECT rt0.c0, vt1.c0, rt0.c1 FROM rt0, vt1 WHERE ((NOT (((vt1.c0)<<(((((((((((((rt0.c1)AND(rt0.c1)))AND(rt0.c0)))OR(vt1.c0)))AND(-1.389529946E9)))AND(0.8256067075715385)))AND(rt0.c2))))))) UNION ALL SELECT rt0.c0, vt1.c0, rt0.c1 FROM rt0, vt1 WHERE (((((vt1.c0)<<(((((((((((((rt0.c1)AND(rt0.c1)))AND(rt0.c0)))OR(vt1.c0)))AND(-1.389529946E9)))AND(0.8256067075715385)))AND(rt0.c2))))) ISNULL));
SELECT ALL rt0.c0, vt1.c0, rt0.c1 FROM rt0, vt1;
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (((rtreenode(rt0.c0, rt0.c0)) NOT BETWEEN (rt0.c2) AND ((rt0.c0 IN (rt0.c1, rt0.c1))))) UNION SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0 NOT INDEXED WHERE ((NOT (((rtreenode(rt0.c0, rt0.c0)) NOT BETWEEN (rt0.c2) AND ((rt0.c0 IN (rt0.c1, rt0.c1))))))) UNION SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0 WHERE (((((rtreenode(rt0.c0, rt0.c0)) NOT BETWEEN (rt0.c2) AND ((rt0.c0 IN (rt0.c1, rt0.c1))))) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c2 FROM rt0;
SELECT ALL vt1.c0 FROM vt1 NATURAL JOIN rt0 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 NATURAL JOIN rt0 WHERE (IFNULL((rt0.c2 IN ()), rt0.c1 COLLATE NOCASE)) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 NATURAL JOIN rt0 WHERE ((NOT (IFNULL((rt0.c2 IN ()), rt0.c1 COLLATE NOCASE)))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 NATURAL JOIN rt0 WHERE (((IFNULL((rt0.c2 IN ()), rt0.c1 COLLATE NOCASE)) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 NATURAL JOIN rt0 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1, rt0 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1, rt0 GROUP BY vt1.c0 HAVING ((((rt0.c1)AND(((rt0.c0) NOT BETWEEN (TOTAL(vt1.c0)) AND (MAX(rt0.c0))))))OR((rt0.c0 IN (TOTAL(rt0.c1), rt0.c1)))) UNION ALL SELECT vt1.c0 FROM vt1, rt0 GROUP BY vt1.c0 HAVING (NOT (((((rt0.c1)AND(((rt0.c0) NOT BETWEEN (TOTAL(vt1.c0)) AND (MAX(rt0.c0))))))OR((rt0.c0 IN (TOTAL(rt0.c1), rt0.c1)))))) UNION ALL SELECT ALL vt1.c0 FROM vt1, rt0 GROUP BY vt1.c0 HAVING ((((((rt0.c1)AND(((rt0.c0) NOT BETWEEN (TOTAL(vt1.c0)) AND (MAX(rt0.c0))))))OR((rt0.c0 IN (TOTAL(rt0.c1), rt0.c1))))) ISNULL);
SELECT ALL vt1.c0 FROM vt1, rt0 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1, rt0 GROUP BY vt1.c0 HAVING ((((rt0.c1)AND(((rt0.c0) NOT BETWEEN (TOTAL(vt1.c0)) AND (MAX(rt0.c0))))))OR((rt0.c0 IN (TOTAL(rt0.c1), rt0.c1)))) UNION ALL SELECT vt1.c0 FROM vt1, rt0 GROUP BY vt1.c0 HAVING (NOT (((((rt0.c1)AND(((rt0.c0) NOT BETWEEN (TOTAL(vt1.c0)) AND (MAX(rt0.c0))))))OR((rt0.c0 IN (TOTAL(rt0.c1), rt0.c1)))))) UNION ALL SELECT ALL vt1.c0 FROM vt1, rt0 GROUP BY vt1.c0 HAVING ((((((rt0.c1)AND(((rt0.c0) NOT BETWEEN (TOTAL(vt1.c0)) AND (MAX(rt0.c0))))))OR((rt0.c0 IN (TOTAL(rt0.c1), rt0.c1))))) ISNULL);
SELECT ALL vt1.c0 FROM vt1, rt0 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1;
SELECT vt1.c0 FROM vt1 WHERE ((((((((((+ (vt1.c0)))OR((vt1.c0 IN (vt1.c0)))))AND(((vt1.c0) NOTNULL))))AND((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))))AND(((vt1.c0) ISNULL)))) UNION ALL SELECT vt1.c0 FROM vt1 WHERE ((NOT ((((((((((+ (vt1.c0)))OR((vt1.c0 IN (vt1.c0)))))AND(((vt1.c0) NOTNULL))))AND((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))))AND(((vt1.c0) ISNULL)))))) UNION ALL SELECT vt1.c0 FROM vt1 WHERE ((((((((((((+ (vt1.c0)))OR((vt1.c0 IN (vt1.c0)))))AND(((vt1.c0) NOTNULL))))AND((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))))AND(((vt1.c0) ISNULL)))) ISNULL));
SELECT vt1.c0 FROM vt1;
SELECT DISTINCT * FROM rt0, vt1;
SELECT DISTINCT * FROM rt0, vt1 WHERE (((((rt0.c1) ISNULL))&(CAST(rt0.c2 AS INTEGER)))) UNION SELECT DISTINCT * FROM rt0, vt1 WHERE ((NOT (((((rt0.c1) ISNULL))&(CAST(rt0.c2 AS INTEGER)))))) UNION SELECT DISTINCT * FROM rt0, vt1 WHERE (((((((rt0.c1) ISNULL))&(CAST(rt0.c2 AS INTEGER)))) ISNULL));
SELECT DISTINCT * FROM rt0, vt1;
SELECT rt0.c2, rt0.c1, rt0.c0, vt1.c0 FROM vt1, rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0, vt1.c0;
SELECT rt0.c2, rt0.c1, rt0.c0, vt1.c0 FROM vt1, rt0 WHERE ((((rt0.c2)) NOT BETWEEN ((((0Xffffffffbf6315af) BETWEEN (rt0.c2) AND (rt0.c2)))) AND ((((rt0.c0)OR(rt0.c1)))))) GROUP BY rt0.c2, rt0.c1, rt0.c0, vt1.c0 UNION SELECT rt0.c2, rt0.c1, rt0.c0, vt1.c0 FROM vt1, rt0 WHERE ((NOT ((((rt0.c2)) NOT BETWEEN ((((0xffffffffbf6315af) BETWEEN (rt0.c2) AND (rt0.c2)))) AND ((((rt0.c0)OR(rt0.c1)))))))) GROUP BY rt0.c2, rt0.c1, rt0.c0, vt1.c0 UNION SELECT rt0.c2, rt0.c1, rt0.c0, vt1.c0 FROM vt1, rt0 WHERE ((((((rt0.c2)) NOT BETWEEN ((((0Xffffffffbf6315af) BETWEEN (rt0.c2) AND (rt0.c2)))) AND ((((rt0.c0)OR(rt0.c1)))))) ISNULL)) GROUP BY rt0.c2, rt0.c1, rt0.c0, vt1.c0;
SELECT rt0.c2, rt0.c1, rt0.c0, vt1.c0 FROM vt1, rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0, vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((((((vt1.c0) ISNULL))OR((((vt1.c0)) BETWEEN ((SUM(vt1.c0))) AND ((vt1.c0))))))AND(TOTAL(vt1.c0))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (((((((vt1.c0) ISNULL))OR((((vt1.c0)) BETWEEN ((SUM(vt1.c0))) AND ((vt1.c0))))))AND(TOTAL(vt1.c0))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((((((((vt1.c0) ISNULL))OR((((vt1.c0)) BETWEEN ((SUM(vt1.c0))) AND ((vt1.c0))))))AND(TOTAL(vt1.c0)))) ISNULL);
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((((((vt1.c0) ISNULL))OR((((vt1.c0)) BETWEEN ((SUM(vt1.c0))) AND ((vt1.c0))))))AND(TOTAL(vt1.c0))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (((((((vt1.c0) ISNULL))OR((((vt1.c0)) BETWEEN ((SUM(vt1.c0))) AND ((vt1.c0))))))AND(TOTAL(vt1.c0))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((((((((vt1.c0) ISNULL))OR((((vt1.c0)) BETWEEN ((SUM(vt1.c0))) AND ((vt1.c0))))))AND(TOTAL(vt1.c0)))) ISNULL);
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL * FROM vt1, rt0;
SELECT ALL * FROM vt1, rt0 WHERE (((NULL) BETWEEN (rt0.c1 COLLATE NOCASE) AND (CAST(rt0.c0 AS BLOB)))) UNION ALL SELECT ALL * FROM vt1, rt0 WHERE ((NOT (((NULL) BETWEEN (rt0.c1 COLLATE NOCASE) AND (CAST(rt0.c0 AS BLOB)))))) UNION ALL SELECT * FROM vt1, rt0 WHERE (((((NULL) BETWEEN (rt0.c1 COLLATE NOCASE) AND (CAST(rt0.c0 AS BLOB)))) ISNULL));
SELECT ALL * FROM vt1, rt0;
SELECT DISTINCT * FROM rt0, vt1;
SELECT DISTINCT * FROM rt0, vt1 WHERE ((((rt0.c1 IN ())) NOT BETWEEN (x'') AND (((rt0.c2) NOTNULL)))) UNION SELECT DISTINCT * FROM rt0, vt1 WHERE ((NOT ((((rt0.c1 IN ())) NOT BETWEEN (x'') AND (((rt0.c2) NOTNULL)))))) UNION SELECT DISTINCT * FROM rt0, vt1 WHERE ((((((rt0.c1 IN ())) NOT BETWEEN (x'') AND (((rt0.c2) NOTNULL)))) ISNULL));
SELECT DISTINCT * FROM rt0, vt1;
SELECT rt0.c0, rt0.c2, vt1.c0, rt0.c1 FROM rt0, vt1 GROUP BY rt0.c0, rt0.c2, vt1.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c2, vt1.c0, rt0.c1 FROM rt0, vt1 WHERE (0.8000733121410329) GROUP BY rt0.c0, rt0.c2, vt1.c0, rt0.c1 UNION SELECT rt0.c0, rt0.c2, vt1.c0, rt0.c1 FROM rt0, vt1 WHERE ((NOT (0.8000733121410329))) GROUP BY rt0.c0, rt0.c2, vt1.c0, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c2, vt1.c0, rt0.c1 FROM rt0, vt1 WHERE (((0.8000733121410329) ISNULL)) GROUP BY rt0.c0, rt0.c2, vt1.c0, rt0.c1;
SELECT rt0.c0, rt0.c2, vt1.c0, rt0.c1 FROM rt0, vt1 GROUP BY rt0.c0, rt0.c2, vt1.c0, rt0.c1;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING vt1.c0 UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (vt1.c0)) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((vt1.c0) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING vt1.c0 UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (vt1.c0)) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((vt1.c0) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT * FROM rt0, vt1;
SELECT ALL * FROM rt0, vt1 WHERE (((((rt0.c2)/(rt0.c2))) ISNULL)) UNION ALL SELECT * FROM rt0, vt1 WHERE ((NOT (((((rt0.c2)/(rt0.c2))) ISNULL)))) UNION ALL SELECT ALL * FROM rt0, vt1 WHERE (((((((rt0.c2)/(rt0.c2))) ISNULL)) ISNULL));
SELECT * FROM rt0, vt1;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((rt0.c2) NOTNULL)) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((rt0.c2) NOTNULL)))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((rt0.c2) NOTNULL)) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c0 FROM vt1, rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM vt1, rt0 WHERE ((~ (TRIM(rt0.c1)))) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM vt1, rt0 WHERE ((NOT ((~ (TRIM(rt0.c1)))))) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM vt1, rt0 WHERE ((((~ (TRIM(rt0.c1)))) ISNULL)) GROUP BY rt0.c0;
SELECT rt0.c0 FROM vt1, rt0 GROUP BY rt0.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING MAX(((MIN(SUM(vt1.c0)))|(vt1.c0))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (MAX(((MIN(SUM(vt1.c0)))|(vt1.c0))))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((MAX(((MIN(SUM(vt1.c0)))|(vt1.c0)))) ISNULL);
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE (NULL) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (NULL))) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE (((NULL) ISNULL));
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c0, vt1.c0, rt0.c1 FROM vt1, rt0;
SELECT DISTINCT rt0.c0, vt1.c0, rt0.c1 FROM vt1, rt0 WHERE (((((((0Xffffffff9c616ef3) IS FALSE))AND(rt0.c0)))OR(CAST(rt0.c0 AS TEXT)))) UNION SELECT DISTINCT rt0.c0, vt1.c0, rt0.c1 FROM vt1, rt0 WHERE ((NOT (((((((0Xffffffff9c616ef3) IS FALSE))AND(rt0.c0)))OR(CAST(rt0.c0 AS TEXT)))))) UNION SELECT DISTINCT rt0.c0, vt1.c0, rt0.c1 FROM vt1, rt0 WHERE (((((((((0xffffffff9c616ef3) IS FALSE))AND(rt0.c0)))OR(CAST(rt0.c0 AS TEXT)))) ISNULL));
SELECT DISTINCT rt0.c0, vt1.c0, rt0.c1 FROM vt1, rt0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE (vt1.c0) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (vt1.c0))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE (((vt1.c0) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM rt0, vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM rt0, vt1 GROUP BY vt1.c0 HAVING COUNT(((((-1.704396847E9)AND(MAX(rt0.c0))))OR(MIN(rt0.c0)))) UNION ALL SELECT ALL vt1.c0 FROM rt0, vt1 GROUP BY vt1.c0 HAVING (NOT (COUNT(((((-1.704396847E9)AND(MAX(rt0.c0))))OR(MIN(rt0.c0)))))) UNION ALL SELECT vt1.c0 FROM rt0, vt1 GROUP BY vt1.c0 HAVING ((COUNT(((((-1.704396847E9)AND(MAX(rt0.c0))))OR(MIN(rt0.c0))))) ISNULL);
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE (((rt0.c0 IN ()) IN (((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1))))) ORDER BY ((((((((CAST(rt0.c2 AS REAL))OR(((rt0.c1) ISNULL))))OR(rt0.c0)))AND(TRIM(DISTINCT rt0.c0))))OR(((0X404473fe) NOT BETWEEN (rt0.c2) AND (rt0.c0)))) ASC;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (((rt0.c0 IN ()) IN (((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1))))))) ORDER BY ((((((((CAST(rt0.c2 AS REAL))OR(((rt0.c1) ISNULL))))OR(rt0.c0)))AND(TRIM(DISTINCT rt0.c0))))OR(((0X404473fe) NOT BETWEEN (rt0.c2) AND (rt0.c0)))) ASC;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE (((((rt0.c0 IN ()) IN (((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1))))) ISNULL)) ORDER BY ((((((((CAST(rt0.c2 AS REAL))OR(((rt0.c1) ISNULL))))OR(rt0.c0)))AND(TRIM(DISTINCT rt0.c0))))OR(((0x404473fe) NOT BETWEEN (rt0.c2) AND (rt0.c0)))) ASC;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0;
SELECT DISTINCT * FROM vt1, rt0;
SELECT DISTINCT * FROM vt1, rt0 WHERE ((((rt0.c0 IN ()))IS NOT((rt0.c1 IN (rt0.c2, vt1.c0))))) UNION SELECT DISTINCT * FROM vt1, rt0 WHERE ((NOT ((((rt0.c0 IN ()))IS NOT((rt0.c1 IN (rt0.c2, vt1.c0))))))) UNION SELECT DISTINCT * FROM vt1, rt0 WHERE ((((((rt0.c0 IN ()))IS NOT((rt0.c1 IN (rt0.c2, vt1.c0))))) ISNULL));
SELECT DISTINCT * FROM vt1, rt0;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM vt1, rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM vt1, rt0 WHERE (rt0.c0) GROUP BY rt0.c2, rt0.c0, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM vt1, rt0 WHERE ((NOT (rt0.c0))) GROUP BY rt0.c2, rt0.c0, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM vt1, rt0 WHERE (((rt0.c0) ISNULL)) GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM vt1, rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING GROUP_CONCAT(MAX(rt0.c1)) UNION ALL SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING (NOT (GROUP_CONCAT(MAX(rt0.c1)))) UNION ALL SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING ((GROUP_CONCAT(MAX(rt0.c1))) ISNULL);
SELECT ALL vt1.c0 FROM vt1 NATURAL JOIN rt0;
SELECT vt1.c0 FROM vt1 NATURAL JOIN rt0 WHERE (((((rt0.c2)==(vt1.c0))) NOT BETWEEN (NULL) AND (ROUND(rt0.c1, rt0.c0)))) UNION ALL SELECT vt1.c0 FROM vt1 NATURAL JOIN rt0 WHERE ((NOT (((((rt0.c2)==(vt1.c0))) NOT BETWEEN (NULL) AND (ROUND(rt0.c1, rt0.c0)))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 NATURAL JOIN rt0 WHERE (((((((rt0.c2)==(vt1.c0))) NOT BETWEEN (NULL) AND (ROUND(rt0.c1, rt0.c0)))) ISNULL));
SELECT ALL vt1.c0 FROM vt1 NATURAL JOIN rt0;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (CAST('S' AS NUMERIC)) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (CAST('S' AS NUMERIC)))) UNION SELECT DISTINCT * FROM vt1 WHERE (((CAST('S' AS NUMERIC)) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM vt1 LEFT OUTER JOIN rt0 ON vt1.c0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM vt1 LEFT OUTER JOIN rt0 ON vt1.c0 WHERE (rt0.c0) GROUP BY rt0.c2, rt0.c1, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM vt1 LEFT OUTER JOIN rt0 ON vt1.c0 WHERE ((NOT (rt0.c0))) GROUP BY rt0.c2, rt0.c1, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM vt1 LEFT OUTER JOIN rt0 ON vt1.c0 WHERE (((rt0.c0) ISNULL)) GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM vt1 LEFT OUTER JOIN rt0 ON vt1.c0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0, vt1 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0, vt1 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING (((COUNT(*))) NOT BETWEEN ((((((((((rt0.c2)AND(rt0.c2)))OR(SUM(COUNT(SUM(MAX(MIN(rt0.c0))))))))OR(MIN(AVG(vt1.c0)))))OR(rt0.c2)))) AND ((((SUM(rt0.c1)) IS TRUE)))) UNION ALL SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0, vt1 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING (NOT ((((COUNT(*))) NOT BETWEEN ((((((((((rt0.c2)AND(rt0.c2)))OR(SUM(COUNT(SUM(MAX(MIN(rt0.c0))))))))OR(MIN(AVG(vt1.c0)))))OR(rt0.c2)))) AND ((((SUM(rt0.c1)) IS TRUE)))))) UNION ALL SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0, vt1 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING (((((COUNT(*))) NOT BETWEEN ((((((((((rt0.c2)AND(rt0.c2)))OR(SUM(COUNT(SUM(MAX(MIN(rt0.c0))))))))OR(MIN(AVG(vt1.c0)))))OR(rt0.c2)))) AND ((((SUM(rt0.c1)) IS TRUE))))) ISNULL);
SELECT ALL MIN(((((CASE rt0.c2  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c0 END)OR(((((vt1.c0)AND(0.0)))OR(rt0.c1)))))OR(((((rt0.c0)AND(rt0.c2)))OR(rt0.c0))))) FROM rt0, vt1;
SELECT * FROM vt1;
SELECT * FROM vt1 WHERE (CAST(((vt1.c0)&(vt1.c0)) AS TEXT)) UNION ALL SELECT ALL * FROM vt1 WHERE ((NOT (CAST(((vt1.c0)&(vt1.c0)) AS TEXT)))) UNION ALL SELECT ALL * FROM vt1 WHERE (((CAST(((vt1.c0)&(vt1.c0)) AS TEXT)) ISNULL));
SELECT * FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(x'')) COLLATE NOCASE) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT (((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(x'')) COLLATE NOCASE))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(x'')) COLLATE NOCASE) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT ALL rt0.c0, rt0.c2 FROM rt0, vt1 GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM rt0, vt1 WHERE ((((rt0.c0)) BETWEEN ((((rt0.c2)+(rt0.c1)))) AND (((('1632095952')IS NOT(vt1.c0)))))) GROUP BY rt0.c0, rt0.c2 UNION SELECT rt0.c0, rt0.c2 FROM rt0, vt1 WHERE ((NOT ((((rt0.c0)) BETWEEN ((((rt0.c2)+(rt0.c1)))) AND (((('1632095952')IS NOT(vt1.c0)))))))) GROUP BY rt0.c0, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c2 FROM rt0, vt1 WHERE ((((((rt0.c0)) BETWEEN ((((rt0.c2)+(rt0.c1)))) AND (((('1632095952')IS NOT(vt1.c0)))))) ISNULL)) GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM rt0, vt1 GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 NOT INDEXED GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING (((((rt0.c1) NOT BETWEEN (COUNT(NULL)) AND (MIN(rt0.c0)))))=((rt0.c1))) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING (NOT ((((((rt0.c1) NOT BETWEEN (COUNT(NULL)) AND (MIN(rt0.c0)))))==((rt0.c1))))) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING (((((((rt0.c1) NOT BETWEEN (COUNT(NULL)) AND (MIN(rt0.c0)))))=((rt0.c1)))) ISNULL);
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 NOT INDEXED GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING (((((rt0.c1) NOT BETWEEN (COUNT(NULL)) AND (MIN(rt0.c0)))))=((rt0.c1))) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING (NOT ((((((rt0.c1) NOT BETWEEN (COUNT(NULL)) AND (MIN(rt0.c0)))))==((rt0.c1))))) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING (((((((rt0.c1) NOT BETWEEN (COUNT(NULL)) AND (MIN(rt0.c0)))))=((rt0.c1)))) ISNULL);
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 NOT INDEXED GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL * FROM rt0, vt1;
SELECT ALL * FROM rt0, vt1 WHERE (((((rt0.c2)<(vt1.c0))) NOT BETWEEN (((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c0))) AND (((rt0.c1)<(vt1.c0))))) UNION ALL SELECT * FROM rt0, vt1 WHERE ((NOT (((((rt0.c2)<(vt1.c0))) NOT BETWEEN (((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c0))) AND (((rt0.c1)<(vt1.c0))))))) UNION ALL SELECT ALL * FROM rt0, vt1 WHERE (((((((rt0.c2)<(vt1.c0))) NOT BETWEEN (((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c0))) AND (((rt0.c1)<(vt1.c0))))) ISNULL));
SELECT ALL * FROM rt0, vt1;
SELECT DISTINCT * FROM vt1 INNER JOIN rt0 ON rt0.c2;
SELECT DISTINCT * FROM vt1 INNER JOIN rt0 ON rt0.c2 WHERE (((((rt0.c2) NOT NULL)) BETWEEN (((rt0.c2)!=(rt0.c1))) AND (((rt0.c0)<=(vt1.c0))))) UNION SELECT DISTINCT * FROM vt1 INNER JOIN rt0 ON rt0.c2 WHERE ((NOT (((((rt0.c2) NOT NULL)) BETWEEN (((rt0.c2)<>(rt0.c1))) AND (((rt0.c0)<=(vt1.c0))))))) UNION SELECT DISTINCT * FROM vt1 INNER JOIN rt0 ON rt0.c2 WHERE (((((((rt0.c2) NOT NULL)) BETWEEN (((rt0.c2)!=(rt0.c1))) AND (((rt0.c0)<=(vt1.c0))))) ISNULL));
SELECT DISTINCT * FROM vt1 INNER JOIN rt0 ON rt0.c2;
SELECT vt1.c0, rt0.c2, rt0.c0 FROM rt0, vt1 GROUP BY vt1.c0, rt0.c2, rt0.c0;
SELECT vt1.c0, rt0.c2, rt0.c0 FROM rt0, vt1 WHERE (0X1f88d6c9) GROUP BY vt1.c0, rt0.c2, rt0.c0 UNION SELECT vt1.c0, rt0.c2, rt0.c0 FROM rt0, vt1 WHERE ((NOT (0X1f88d6c9))) GROUP BY vt1.c0, rt0.c2, rt0.c0 UNION SELECT ALL vt1.c0, rt0.c2, rt0.c0 FROM rt0, vt1 WHERE (((0X1f88d6c9) ISNULL)) GROUP BY vt1.c0, rt0.c2, rt0.c0;
SELECT vt1.c0, rt0.c2, rt0.c0 FROM rt0, vt1 GROUP BY vt1.c0, rt0.c2, rt0.c0;
SELECT ALL rt0.c2 FROM rt0 FULL OUTER JOIN vt1 ON CASE WHEN rt0.c0 COLLATE NOCASE THEN ((((rt0.c0)AND(rt0.c2)))OR(rt0.c0)) ELSE rt0.c2 END GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 FULL OUTER JOIN vt1 ON CASE WHEN rt0.c0 COLLATE NOCASE THEN ((((rt0.c0)AND(rt0.c2)))OR(rt0.c0)) ELSE rt0.c2 END GROUP BY rt0.c2 HAVING (- (AVG(AVG(rt0.c2)) COLLATE NOCASE)) UNION ALL SELECT ALL rt0.c2 FROM rt0 FULL OUTER JOIN vt1 ON CASE WHEN rt0.c0 COLLATE NOCASE THEN ((((rt0.c0)AND(rt0.c2)))OR(rt0.c0)) ELSE rt0.c2 END GROUP BY rt0.c2 HAVING (NOT ((- (AVG(AVG(rt0.c2)) COLLATE NOCASE)))) UNION ALL SELECT ALL rt0.c2 FROM rt0 FULL OUTER JOIN vt1 ON CASE WHEN rt0.c0 COLLATE NOCASE THEN ((((rt0.c0)AND(rt0.c2)))OR(rt0.c0)) ELSE rt0.c2 END GROUP BY rt0.c2 HAVING (((- (AVG(AVG(rt0.c2)) COLLATE NOCASE))) ISNULL);
SELECT rt0.c1, rt0.c0, rt0.c2 FROM vt1, rt0;
SELECT rt0.c1, rt0.c0, rt0.c2 FROM vt1, rt0 WHERE (((NOT (rt0.c2)) IN ())) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c2 FROM vt1, rt0 WHERE ((NOT (((NOT (rt0.c2)) IN ())))) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM vt1, rt0 WHERE (((((NOT (rt0.c2)) IN ())) ISNULL));
SELECT rt0.c1, rt0.c0, rt0.c2 FROM vt1, rt0;
SELECT DISTINCT rt0.c1 FROM vt1, rt0;
SELECT DISTINCT rt0.c1 FROM vt1, rt0 WHERE (CASE rt0.c1  WHEN rt0.c2 THEN rt0.c0 WHEN '-1908488757' THEN vt1.c0 WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c2 END COLLATE NOCASE) UNION SELECT DISTINCT rt0.c1 FROM vt1, rt0 WHERE ((NOT (CASE rt0.c1  WHEN rt0.c2 THEN rt0.c0 WHEN '-1908488757' THEN vt1.c0 WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c2 END COLLATE NOCASE))) UNION SELECT DISTINCT rt0.c1 FROM vt1, rt0 WHERE (((CASE rt0.c1  WHEN rt0.c2 THEN rt0.c0 WHEN '-1908488757' THEN vt1.c0 WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c2 END COLLATE NOCASE) ISNULL));
SELECT DISTINCT rt0.c1 FROM vt1, rt0;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 WHERE (CASE WHEN ((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0)) THEN ((-398368762) IS TRUE) END) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0 WHERE ((NOT (CASE WHEN ((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0)) THEN ((-398368762) IS TRUE) END))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0 WHERE (((CASE WHEN ((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0)) THEN ((-398368762) IS TRUE) END) ISNULL)) GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL vt1.c0, rt0.c2, rt0.c1 FROM vt1 INNER JOIN rt0 ON CAST(CASE WHEN rt0.c0 THEN vt1.c0 END AS TEXT) GROUP BY vt1.c0, rt0.c2, rt0.c1;
SELECT ALL vt1.c0, rt0.c2, rt0.c1 FROM vt1 INNER JOIN rt0 ON CAST(CASE WHEN rt0.c0 THEN vt1.c0 END AS TEXT) GROUP BY vt1.c0, rt0.c2, rt0.c1 HAVING ((MIN(GROUP_CONCAT(COUNT(MIN(TOTAL(rt0.c0))))))=(SUM(rt0.c0))) UNION ALL SELECT ALL vt1.c0, rt0.c2, rt0.c1 FROM vt1 INNER JOIN rt0 ON CAST(CASE WHEN rt0.c0 THEN vt1.c0 END AS TEXT) GROUP BY vt1.c0, rt0.c2, rt0.c1 HAVING (NOT (((MIN(GROUP_CONCAT(COUNT(MIN(TOTAL(rt0.c0))))))=(SUM(rt0.c0))))) UNION ALL SELECT ALL vt1.c0, rt0.c2, rt0.c1 FROM vt1 INNER JOIN rt0 ON CAST(CASE WHEN rt0.c0 THEN vt1.c0 END AS TEXT) GROUP BY vt1.c0, rt0.c2, rt0.c1 HAVING ((((MIN(GROUP_CONCAT(COUNT(MIN(TOTAL(rt0.c0))))))==(SUM(rt0.c0)))) ISNULL);
SELECT ALL vt1.c0 FROM vt1;
SELECT vt1.c0 FROM vt1 WHERE (CAST(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) AS REAL)) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (CAST(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) AS REAL)))) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE (((CAST(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) AS REAL)) ISNULL));
SELECT ALL vt1.c0 FROM vt1;
SELECT DISTINCT rt0.c1, vt1.c0, rt0.c0, rt0.c2 FROM vt1, rt0;
SELECT DISTINCT rt0.c1, vt1.c0, rt0.c0, rt0.c2 FROM vt1, rt0 WHERE ((((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c1)) IN ())) UNION SELECT DISTINCT rt0.c1, vt1.c0, rt0.c0, rt0.c2 FROM vt1, rt0 WHERE ((NOT ((((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c1)) IN ())))) UNION SELECT DISTINCT rt0.c1, vt1.c0, rt0.c0, rt0.c2 FROM vt1, rt0 WHERE ((((((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c1)) IN ())) ISNULL));
SELECT DISTINCT rt0.c1, vt1.c0, rt0.c0, rt0.c2 FROM vt1, rt0;
SELECT ALL rt0.c1, rt0.c2 FROM rt0, vt1 GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c1, rt0.c2 FROM rt0, vt1 WHERE (CAST(LOWER(0.9908189765704483) AS INTEGER)) GROUP BY rt0.c1, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c2 FROM rt0, vt1 WHERE ((NOT (CAST(LOWER(0.9908189765704483) AS INTEGER)))) GROUP BY rt0.c1, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c2 FROM rt0, vt1 WHERE (((CAST(LOWER(0.9908189765704483) AS INTEGER)) ISNULL)) GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM rt0, vt1 GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c2, vt1.c0 FROM vt1, rt0 GROUP BY rt0.c2, vt1.c0;
SELECT ALL rt0.c2, vt1.c0 FROM vt1, rt0 GROUP BY rt0.c2, vt1.c0 HAVING ((COUNT(rt0.c0)) NOT BETWEEN (((GROUP_CONCAT(GROUP_CONCAT(vt1.c0)))+(AVG(COUNT(TOTAL(vt1.c0)))))) AND (MAX(TOTAL(AVG(rt0.c2))) COLLATE BINARY)) UNION ALL SELECT rt0.c2, vt1.c0 FROM vt1, rt0 GROUP BY rt0.c2, vt1.c0 HAVING (NOT (((COUNT(rt0.c0)) NOT BETWEEN (((GROUP_CONCAT(GROUP_CONCAT(vt1.c0)))+(AVG(COUNT(TOTAL(vt1.c0)))))) AND (MAX(TOTAL(AVG(rt0.c2))) COLLATE BINARY)))) UNION ALL SELECT rt0.c2, vt1.c0 FROM vt1, rt0 GROUP BY rt0.c2, vt1.c0 HAVING ((((COUNT(rt0.c0)) NOT BETWEEN (((GROUP_CONCAT(GROUP_CONCAT(vt1.c0)))+(AVG(COUNT(TOTAL(vt1.c0)))))) AND (MAX(TOTAL(AVG(rt0.c2))) COLLATE BINARY))) ISNULL);
SELECT rt0.c2, rt0.c0 FROM vt1, rt0;
SELECT rt0.c2, rt0.c0 FROM vt1, rt0 WHERE (CASE WHEN ((rt0.c1)IS(rt0.c0)) THEN ((rt0.c2) BETWEEN (rt0.c2) AND (vt1.c0)) ELSE (((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c2))) END) UNION ALL SELECT rt0.c2, rt0.c0 FROM vt1, rt0 WHERE ((NOT (CASE WHEN ((rt0.c1)IS(rt0.c0)) THEN ((rt0.c2) BETWEEN (rt0.c2) AND (vt1.c0)) ELSE (((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c2))) END))) UNION ALL SELECT rt0.c2, rt0.c0 FROM vt1, rt0 WHERE (((CASE WHEN ((rt0.c1)IS(rt0.c0)) THEN ((rt0.c2) BETWEEN (rt0.c2) AND (vt1.c0)) ELSE (((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c2))) END) ISNULL));
SELECT rt0.c2, rt0.c0 FROM vt1, rt0;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE ((((vt1.c0)) NOT BETWEEN (((~ (vt1.c0)))) AND ((CAST(vt1.c0 AS REAL))))) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT ((((vt1.c0)) NOT BETWEEN (((~ (vt1.c0)))) AND ((CAST(vt1.c0 AS REAL))))))) UNION SELECT DISTINCT * FROM vt1 WHERE ((((((vt1.c0)) NOT BETWEEN (((~ (vt1.c0)))) AND ((CAST(vt1.c0 AS REAL))))) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT ALL rt0.c0, vt1.c0, rt0.c2 FROM rt0, vt1 GROUP BY rt0.c0, vt1.c0, rt0.c2;
SELECT ALL rt0.c0, vt1.c0, rt0.c2 FROM rt0, vt1 WHERE ((vt1.c0 IN ()) COLLATE BINARY) GROUP BY rt0.c0, vt1.c0, rt0.c2 UNION SELECT rt0.c0, vt1.c0, rt0.c2 FROM rt0, vt1 WHERE ((NOT ((vt1.c0 IN ()) COLLATE BINARY))) GROUP BY rt0.c0, vt1.c0, rt0.c2 UNION SELECT ALL rt0.c0, vt1.c0, rt0.c2 FROM rt0, vt1 WHERE ((((vt1.c0 IN ()) COLLATE BINARY) ISNULL)) GROUP BY rt0.c0, vt1.c0, rt0.c2;
SELECT ALL rt0.c0, vt1.c0, rt0.c2 FROM rt0, vt1 GROUP BY rt0.c0, vt1.c0, rt0.c2;
SELECT ALL rt0.c0 FROM rt0 FULL OUTER JOIN vt1 ON CAST(rt0.c0 AS TEXT) GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 FULL OUTER JOIN vt1 ON CAST(rt0.c0 AS TEXT) GROUP BY rt0.c0 HAVING rt0.c0 UNION ALL SELECT ALL rt0.c0 FROM rt0 FULL OUTER JOIN vt1 ON CAST(rt0.c0 AS TEXT) GROUP BY rt0.c0 HAVING (NOT (rt0.c0)) UNION ALL SELECT rt0.c0 FROM rt0 FULL OUTER JOIN vt1 ON CAST(rt0.c0 AS TEXT) GROUP BY rt0.c0 HAVING ((rt0.c0) ISNULL);
SELECT ALL rt0.c0 FROM rt0 FULL OUTER JOIN vt1 ON CAST(rt0.c0 AS TEXT) GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 FULL OUTER JOIN vt1 ON CAST(rt0.c0 AS TEXT) GROUP BY rt0.c0 HAVING rt0.c0 UNION ALL SELECT ALL rt0.c0 FROM rt0 FULL OUTER JOIN vt1 ON CAST(rt0.c0 AS TEXT) GROUP BY rt0.c0 HAVING (NOT (rt0.c0)) UNION ALL SELECT rt0.c0 FROM rt0 FULL OUTER JOIN vt1 ON CAST(rt0.c0 AS TEXT) GROUP BY rt0.c0 HAVING ((rt0.c0) ISNULL);
SELECT ALL rt0.c0 FROM rt0 FULL OUTER JOIN vt1 ON CAST(rt0.c0 AS TEXT) GROUP BY rt0.c0;
SELECT ALL * FROM vt1, rt0;
SELECT ALL * FROM vt1, rt0 WHERE (x'') UNION ALL SELECT ALL * FROM vt1, rt0 WHERE ((NOT (x''))) UNION ALL SELECT ALL * FROM vt1, rt0 WHERE (((x'') ISNULL));
SELECT ALL * FROM vt1, rt0;
SELECT DISTINCT * FROM rt0 LEFT OUTER JOIN vt1 ON ((rt0.c1)>=(0.7172361801478869)) COLLATE RTRIM;
SELECT DISTINCT * FROM rt0 LEFT OUTER JOIN vt1 ON ((rt0.c1)>=(0.7172361801478869)) COLLATE RTRIM WHERE ((- (CASE WHEN x'' THEN rt0.c2 END))) UNION SELECT DISTINCT * FROM rt0 LEFT OUTER JOIN vt1 ON ((rt0.c1)>=(0.7172361801478869)) COLLATE RTRIM WHERE ((NOT ((- (CASE WHEN x'' THEN rt0.c2 END))))) UNION SELECT DISTINCT * FROM rt0 LEFT OUTER JOIN vt1 ON ((rt0.c1)>=(0.7172361801478869)) COLLATE RTRIM WHERE ((((- (CASE WHEN x'' THEN rt0.c2 END))) ISNULL));
SELECT DISTINCT * FROM rt0 LEFT OUTER JOIN vt1 ON ((rt0.c1)>=(0.7172361801478869)) COLLATE RTRIM;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE (((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))|(((vt1.c0)IS NOT(vt1.c0))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT (((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))|(((vt1.c0)IS NOT(vt1.c0))))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE (((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))|(((vt1.c0)IS NOT(vt1.c0))))) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 FULL OUTER JOIN vt1 ON 0Xffffffffe0036c81 COLLATE RTRIM GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 FULL OUTER JOIN vt1 ON 0Xffffffffe0036c81 COLLATE RTRIM GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING UNLIKELY(DISTINCT ((vt1.c0) BETWEEN (rt0.c1) AND (rt0.c0))) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 FULL OUTER JOIN vt1 ON 0xffffffffe0036c81 COLLATE RTRIM GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING (NOT (UNLIKELY(DISTINCT ((vt1.c0) BETWEEN (rt0.c1) AND (rt0.c0))))) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 FULL OUTER JOIN vt1 ON 0Xffffffffe0036c81 COLLATE RTRIM GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING ((UNLIKELY(DISTINCT ((vt1.c0) BETWEEN (rt0.c1) AND (rt0.c0)))) ISNULL);
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 FULL OUTER JOIN vt1 ON 0Xffffffffe0036c81 COLLATE RTRIM GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 FULL OUTER JOIN vt1 ON 0Xffffffffe0036c81 COLLATE RTRIM GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING UNLIKELY(DISTINCT ((vt1.c0) BETWEEN (rt0.c1) AND (rt0.c0))) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 FULL OUTER JOIN vt1 ON 0xffffffffe0036c81 COLLATE RTRIM GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING (NOT (UNLIKELY(DISTINCT ((vt1.c0) BETWEEN (rt0.c1) AND (rt0.c0))))) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 FULL OUTER JOIN vt1 ON 0Xffffffffe0036c81 COLLATE RTRIM GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING ((UNLIKELY(DISTINCT ((vt1.c0) BETWEEN (rt0.c1) AND (rt0.c0)))) ISNULL);
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 FULL OUTER JOIN vt1 ON 0Xffffffffe0036c81 COLLATE RTRIM GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT * FROM vt1;
SELECT * FROM vt1 WHERE (NULL) UNION ALL SELECT * FROM vt1 WHERE ((NOT (NULL))) UNION ALL SELECT * FROM vt1 WHERE (((NULL) ISNULL));
SELECT * FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0)))) NOT BETWEEN (((vt1.c0) NOT NULL)) AND (vt1.c0 COLLATE NOCASE))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT ((((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0)))) NOT BETWEEN (((vt1.c0) NOT NULL)) AND (vt1.c0 COLLATE NOCASE))))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((((((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0)))) NOT BETWEEN (((vt1.c0) NOT NULL)) AND (vt1.c0 COLLATE NOCASE))) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT ALL rt0.c2, rt0.c0, vt1.c0, rt0.c1 FROM rt0, vt1 GROUP BY rt0.c2, rt0.c0, vt1.c0, rt0.c1;
SELECT rt0.c2, rt0.c0, vt1.c0, rt0.c1 FROM rt0, vt1 WHERE ((((vt1.c0)-(rt0.c1)) IN ())) GROUP BY rt0.c2, rt0.c0, vt1.c0, rt0.c1 UNION SELECT rt0.c2, rt0.c0, vt1.c0, rt0.c1 FROM rt0, vt1 WHERE ((NOT ((((vt1.c0)-(rt0.c1)) IN ())))) GROUP BY rt0.c2, rt0.c0, vt1.c0, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c0, vt1.c0, rt0.c1 FROM rt0, vt1 WHERE ((((((vt1.c0)-(rt0.c1)) IN ())) ISNULL)) GROUP BY rt0.c2, rt0.c0, vt1.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c0, vt1.c0, rt0.c1 FROM rt0, vt1 GROUP BY rt0.c2, rt0.c0, vt1.c0, rt0.c1;
SELECT ALL rt0.c1, rt0.c0 FROM vt1 FULL OUTER JOIN rt0 ON ((((((rt0.c0) IS TRUE))OR(0.21919185023140075)))AND(rt0.c2)) GROUP BY rt0.c1, rt0.c0;
SELECT ALL rt0.c1, rt0.c0 FROM vt1 FULL OUTER JOIN rt0 ON ((((((rt0.c0) IS TRUE))OR(0.21919185023140075)))AND(rt0.c2)) GROUP BY rt0.c1, rt0.c0 HAVING (((MIN(COUNT(*)))) NOT BETWEEN ((((((((((COUNT(vt1.c0))AND(rt0.c0)))AND(SUM(COUNT(*)))))AND(vt1.c0)))OR(COUNT(*))))) AND ((MAX(MAX(rt0.c0))))) UNION ALL SELECT ALL rt0.c1, rt0.c0 FROM vt1 FULL OUTER JOIN rt0 ON ((((((rt0.c0) IS TRUE))OR(0.21919185023140075)))AND(rt0.c2)) GROUP BY rt0.c1, rt0.c0 HAVING (NOT ((((MIN(COUNT(*)))) NOT BETWEEN ((((((((((COUNT(vt1.c0))AND(rt0.c0)))AND(SUM(COUNT(*)))))AND(vt1.c0)))OR(COUNT(*))))) AND ((MAX(MAX(rt0.c0))))))) UNION ALL SELECT rt0.c1, rt0.c0 FROM vt1 FULL OUTER JOIN rt0 ON ((((((rt0.c0) IS TRUE))OR(0.21919185023140075)))AND(rt0.c2)) GROUP BY rt0.c1, rt0.c0 HAVING (((((MIN(COUNT(*)))) NOT BETWEEN ((((((((((COUNT(vt1.c0))AND(rt0.c0)))AND(SUM(COUNT(*)))))AND(vt1.c0)))OR(COUNT(*))))) AND ((MAX(MAX(rt0.c0)))))) ISNULL);
SELECT ALL * FROM rt0, vt1;
SELECT * FROM rt0, vt1 WHERE (CAST(CASE WHEN vt1.c0 THEN rt0.c0 END AS REAL)) UNION ALL SELECT ALL * FROM rt0, vt1 WHERE ((NOT (CAST(CASE WHEN vt1.c0 THEN rt0.c0 END AS REAL)))) UNION ALL SELECT * FROM rt0, vt1 WHERE (((CAST(CASE WHEN vt1.c0 THEN rt0.c0 END AS REAL)) ISNULL));
SELECT ALL * FROM rt0, vt1;
SELECT DISTINCT * FROM vt1, rt0;
SELECT DISTINCT * FROM vt1, rt0 WHERE ((~ (CASE 'VS䵜n'  WHEN rt0.c1 THEN vt1.c0 END))) UNION SELECT DISTINCT * FROM vt1, rt0 WHERE ((NOT ((~ (CASE 'VS䵜n'  WHEN rt0.c1 THEN vt1.c0 END))))) UNION SELECT DISTINCT * FROM vt1, rt0 WHERE ((((~ (CASE 'VS䵜n'  WHEN rt0.c1 THEN vt1.c0 END))) ISNULL));
SELECT DISTINCT * FROM vt1, rt0;
SELECT vt1.c0, rt0.c1, rt0.c0 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c1, rt0.c0;
SELECT vt1.c0, rt0.c1, rt0.c0 FROM vt1, rt0 WHERE (CAST(CASE rt0.c2  WHEN rt0.c2 THEN vt1.c0 ELSE rt0.c2 END AS REAL)) GROUP BY vt1.c0, rt0.c1, rt0.c0 UNION SELECT ALL vt1.c0, rt0.c1, rt0.c0 FROM vt1, rt0 WHERE ((NOT (CAST(CASE rt0.c2  WHEN rt0.c2 THEN vt1.c0 ELSE rt0.c2 END AS REAL)))) GROUP BY vt1.c0, rt0.c1, rt0.c0 UNION SELECT ALL vt1.c0, rt0.c1, rt0.c0 FROM vt1, rt0 WHERE (((CAST(CASE rt0.c2  WHEN rt0.c2 THEN vt1.c0 ELSE rt0.c2 END AS REAL)) ISNULL)) GROUP BY vt1.c0, rt0.c1, rt0.c0;
SELECT vt1.c0, rt0.c1, rt0.c0 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c1, rt0.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING TOTAL(MIN(COUNT(*))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (TOTAL(MIN(COUNT(*))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((TOTAL(MIN(COUNT(*)))) ISNULL);
SELECT * FROM vt1 NOT INDEXED;
SELECT ALL * FROM vt1 WHERE ((((vt1.c0)=(0Xffffffffec4e835a)) IN ())) UNION ALL SELECT * FROM vt1 WHERE ((NOT ((((vt1.c0)==(0xffffffffec4e835a)) IN ())))) UNION ALL SELECT ALL * FROM vt1 WHERE ((((((vt1.c0)==(0xffffffffec4e835a)) IN ())) ISNULL));
SELECT * FROM vt1 NOT INDEXED;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((rt0.c0 COLLATE RTRIM) NOT BETWEEN (((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c1))) AND (rt0.c0 COLLATE RTRIM))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((rt0.c0 COLLATE RTRIM) NOT BETWEEN (((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c1))) AND (rt0.c0 COLLATE RTRIM))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((rt0.c0 COLLATE RTRIM) NOT BETWEEN (((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c1))) AND (rt0.c0 COLLATE RTRIM))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c2, rt0.c0 FROM vt1 RIGHT OUTER JOIN rt0 ON (((CAST(vt1.c0 AS BLOB)))!=((CASE vt1.c0  WHEN rt0.c0 THEN vt1.c0 ELSE rt0.c0 END))) GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM vt1 RIGHT OUTER JOIN rt0 ON (((CAST(vt1.c0 AS BLOB)))!=((CASE vt1.c0  WHEN rt0.c0 THEN vt1.c0 ELSE rt0.c0 END))) WHERE ('1632095952') GROUP BY rt0.c2, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c0 FROM vt1 RIGHT OUTER JOIN rt0 ON (((CAST(vt1.c0 AS BLOB)))!=((CASE vt1.c0  WHEN rt0.c0 THEN vt1.c0 ELSE rt0.c0 END))) WHERE ((NOT ('1632095952'))) GROUP BY rt0.c2, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c0 FROM vt1 RIGHT OUTER JOIN rt0 ON (((CAST(vt1.c0 AS BLOB)))!=((CASE vt1.c0  WHEN rt0.c0 THEN vt1.c0 ELSE rt0.c0 END))) WHERE ((('1632095952') ISNULL)) GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM vt1 RIGHT OUTER JOIN rt0 ON (((CAST(vt1.c0 AS BLOB)))!=((CASE vt1.c0  WHEN rt0.c0 THEN vt1.c0 ELSE rt0.c0 END))) GROUP BY rt0.c2, rt0.c0;
SELECT vt1.c0, rt0.c0 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c0;
SELECT vt1.c0, rt0.c0 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c0 HAVING (((rt0.c1, TOTAL(x'c970'), rt0.c1)) BETWEEN ((((AVG(rt0.c0)) IS TRUE), SUM(vt1.c0), x'804c')) AND ((COUNT('-1453066484'), MAX(TOTAL(MIN(rt0.c2))), (((GROUP_CONCAT(GROUP_CONCAT(MAX(COUNT(*)))))) BETWEEN ((TOTAL(vt1.c0))) AND ((TOTAL(SUM(AVG(vt1.c0))))))))) UNION ALL SELECT ALL vt1.c0, rt0.c0 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c0 HAVING (NOT ((((rt0.c1, TOTAL(x'c970'), rt0.c1)) BETWEEN ((((AVG(rt0.c0)) IS TRUE), SUM(vt1.c0), x'804c')) AND ((COUNT('-1453066484'), MAX(TOTAL(MIN(rt0.c2))), (((GROUP_CONCAT(GROUP_CONCAT(MAX(COUNT(*)))))) BETWEEN ((TOTAL(vt1.c0))) AND ((TOTAL(SUM(AVG(vt1.c0))))))))))) UNION ALL SELECT ALL vt1.c0, rt0.c0 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c0 HAVING (((((rt0.c1, TOTAL(x'c970'), rt0.c1)) BETWEEN ((((AVG(rt0.c0)) IS TRUE), SUM(vt1.c0), x'804c')) AND ((COUNT('-1453066484'), MAX(TOTAL(MIN(rt0.c2))), (((GROUP_CONCAT(GROUP_CONCAT(MAX(COUNT(*)))))) BETWEEN ((TOTAL(vt1.c0))) AND ((TOTAL(SUM(AVG(vt1.c0)))))))))) ISNULL);
SELECT ALL * FROM rt0, vt1;
SELECT * FROM rt0, vt1 WHERE (((((rt0.c2)<(NULL))) IS TRUE)) UNION ALL SELECT * FROM rt0, vt1 WHERE ((NOT (((((rt0.c2)<(NULL))) IS TRUE)))) UNION ALL SELECT * FROM rt0, vt1 WHERE (((((((rt0.c2)<(NULL))) IS TRUE)) ISNULL));
SELECT ALL * FROM rt0, vt1;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((TRIM(vt1.c0) IN ())) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT ((TRIM(vt1.c0) IN ())))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((((TRIM(vt1.c0) IN ())) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((((rt0.c1)OR(rt0.c2)) IN ())) GROUP BY rt0.c2, rt0.c0, rt0.c1 UNION SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT ((((rt0.c1)OR(rt0.c2)) IN ())))) GROUP BY rt0.c2, rt0.c0, rt0.c1 UNION SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((((((rt0.c1)OR(rt0.c2)) IN ())) ISNULL)) GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING COUNT(*) UNION ALL SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING COUNT(*) UNION ALL SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT ALL vt1.c0 FROM vt1;
SELECT ALL vt1.c0 FROM vt1 WHERE (UPPER(((vt1.c0)GLOB(vt1.c0)))) UNION ALL SELECT vt1.c0 FROM vt1 WHERE ((NOT (UPPER(((vt1.c0)GLOB(vt1.c0)))))) UNION ALL SELECT vt1.c0 FROM vt1 WHERE (((UPPER(((vt1.c0)GLOB(vt1.c0)))) ISNULL));
SELECT ALL vt1.c0 FROM vt1;
SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((~ (((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c2))))) UNION SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT ((~ (((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c2))))))) UNION SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((((~ (((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c2))))) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0 FROM rt0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE ((((((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))OR(0.8256067075715385)))OR(TRIM(DISTINCT vt1.c0)))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT ((((((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))OR(0.8256067075715385)))OR(TRIM(DISTINCT vt1.c0)))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((((((((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))OR(0.8256067075715385)))OR(TRIM(DISTINCT vt1.c0)))) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0, rt0.c0, rt0.c2, rt0.c1 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c0, rt0.c2, rt0.c1;
SELECT ALL vt1.c0, rt0.c0, rt0.c2, rt0.c1 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c0, rt0.c2, rt0.c1 HAVING COUNT(*) UNION ALL SELECT ALL vt1.c0, rt0.c0, rt0.c2, rt0.c1 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c0, rt0.c2, rt0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt1.c0, rt0.c0, rt0.c2, rt0.c1 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c0, rt0.c2, rt0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT vt1.c0, rt0.c0, rt0.c2, rt0.c1 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c0, rt0.c2, rt0.c1;
SELECT ALL vt1.c0, rt0.c0, rt0.c2, rt0.c1 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c0, rt0.c2, rt0.c1 HAVING COUNT(*) UNION ALL SELECT ALL vt1.c0, rt0.c0, rt0.c2, rt0.c1 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c0, rt0.c2, rt0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt1.c0, rt0.c0, rt0.c2, rt0.c1 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c0, rt0.c2, rt0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT vt1.c0, rt0.c0, rt0.c2, rt0.c1 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c0, rt0.c1, vt1.c0, rt0.c2 FROM vt1, rt0;
SELECT ALL rt0.c0, rt0.c1, vt1.c0, rt0.c2 FROM vt1, rt0 WHERE ((((NOT (rt0.c2))) NOTNULL)) UNION ALL SELECT rt0.c0, rt0.c1, vt1.c0, rt0.c2 FROM vt1, rt0 WHERE ((NOT ((((NOT (rt0.c2))) NOTNULL)))) UNION ALL SELECT rt0.c0, rt0.c1, vt1.c0, rt0.c2 FROM vt1, rt0 WHERE ((((((NOT (rt0.c2))) NOTNULL)) ISNULL));
SELECT rt0.c0, rt0.c1, vt1.c0, rt0.c2 FROM vt1, rt0;
SELECT DISTINCT * FROM vt1, rt0;
SELECT DISTINCT * FROM vt1, rt0 WHERE ((+ (LIKELIHOOD(rt0.c0, 0.8135804967515825)))) UNION SELECT DISTINCT * FROM vt1, rt0 WHERE ((NOT ((+ (LIKELIHOOD(rt0.c0, 0.8135804967515825)))))) UNION SELECT DISTINCT * FROM vt1, rt0 WHERE ((((+ (LIKELIHOOD(rt0.c0, 0.8135804967515825)))) ISNULL));
SELECT DISTINCT * FROM vt1, rt0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE (1.319206257E9) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (1.319206257E9))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE (((1.319206257E9) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL rt0.c0 FROM vt1 RIGHT OUTER JOIN rt0 ON (((rt0.c2)IS NOT(rt0.c2)) IN ()) GROUP BY rt0.c0;
SELECT rt0.c0 FROM vt1 RIGHT OUTER JOIN rt0 ON (((rt0.c2)IS NOT(rt0.c2)) IN ()) GROUP BY rt0.c0 HAVING MIN(((rt0.c2) NOTNULL)) UNION ALL SELECT ALL rt0.c0 FROM vt1 RIGHT OUTER JOIN rt0 ON (((rt0.c2)IS NOT(rt0.c2)) IN ()) GROUP BY rt0.c0 HAVING (NOT (MIN(((rt0.c2) NOTNULL)))) UNION ALL SELECT rt0.c0 FROM vt1 RIGHT OUTER JOIN rt0 ON (((rt0.c2)IS NOT(rt0.c2)) IN ()) GROUP BY rt0.c0 HAVING ((MIN(((rt0.c2) NOTNULL))) ISNULL);
SELECT ALL rt0.c0 FROM vt1 RIGHT OUTER JOIN rt0 ON (((rt0.c2)IS NOT(rt0.c2)) IN ()) GROUP BY rt0.c0;
SELECT rt0.c0 FROM vt1 RIGHT OUTER JOIN rt0 ON (((rt0.c2)IS NOT(rt0.c2)) IN ()) GROUP BY rt0.c0 HAVING MIN(((rt0.c2) NOTNULL)) UNION ALL SELECT ALL rt0.c0 FROM vt1 RIGHT OUTER JOIN rt0 ON (((rt0.c2)IS NOT(rt0.c2)) IN ()) GROUP BY rt0.c0 HAVING (NOT (MIN(((rt0.c2) NOTNULL)))) UNION ALL SELECT rt0.c0 FROM vt1 RIGHT OUTER JOIN rt0 ON (((rt0.c2)IS NOT(rt0.c2)) IN ()) GROUP BY rt0.c0 HAVING ((MIN(((rt0.c2) NOTNULL))) ISNULL);
SELECT ALL rt0.c0 FROM vt1 RIGHT OUTER JOIN rt0 ON (((rt0.c2)IS NOT(rt0.c2)) IN ()) GROUP BY rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM vt1, rt0;
SELECT rt0.c2, rt0.c0 FROM vt1, rt0 WHERE (((((((((((rt0.c2) IS FALSE))AND((rt0.c1 IN (rt0.c2)))))AND(0.03685449660125939)))OR(CAST(rt0.c0 AS REAL))))OR((vt1.c0 IN (rt0.c1, rt0.c0))))) UNION ALL SELECT rt0.c2, rt0.c0 FROM vt1, rt0 WHERE ((NOT (((((((((((rt0.c2) IS FALSE))AND((rt0.c1 IN (rt0.c2)))))AND(0.03685449660125939)))OR(CAST(rt0.c0 AS REAL))))OR((vt1.c0 IN (rt0.c1, rt0.c0))))))) UNION ALL SELECT rt0.c2, rt0.c0 FROM vt1, rt0 WHERE (((((((((((((rt0.c2) IS FALSE))AND((rt0.c1 IN (rt0.c2)))))AND(0.03685449660125939)))OR(CAST(rt0.c0 AS REAL))))OR((vt1.c0 IN (rt0.c1, rt0.c0))))) ISNULL));
SELECT ALL rt0.c2, rt0.c0 FROM vt1, rt0;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE ((((vt1.c0 IN ())) IS FALSE)) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT ((((vt1.c0 IN ())) IS FALSE)))) UNION SELECT DISTINCT * FROM vt1 WHERE ((((((vt1.c0 IN ())) IS FALSE)) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT vt1.c0, rt0.c0 FROM rt0 FULL OUTER JOIN vt1 ON '' GROUP BY vt1.c0, rt0.c0;
SELECT ALL vt1.c0, rt0.c0 FROM rt0 FULL OUTER JOIN vt1 ON '' WHERE (UPPER(DISTINCT vt1.c0) COLLATE BINARY) GROUP BY vt1.c0, rt0.c0 UNION SELECT ALL vt1.c0, rt0.c0 FROM rt0 FULL OUTER JOIN vt1 ON '' WHERE ((NOT (UPPER(DISTINCT vt1.c0) COLLATE BINARY))) GROUP BY vt1.c0, rt0.c0 UNION SELECT vt1.c0, rt0.c0 FROM rt0 FULL OUTER JOIN vt1 ON '' WHERE (((UPPER(DISTINCT vt1.c0) COLLATE BINARY) ISNULL)) GROUP BY vt1.c0, rt0.c0;
SELECT vt1.c0, rt0.c0 FROM rt0 FULL OUTER JOIN vt1 ON '' GROUP BY vt1.c0, rt0.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (+ (0.6829327739253344)) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT ((+ (0.6829327739253344)))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (((+ (0.6829327739253344))) ISNULL);
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (+ (0.6829327739253344)) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT ((+ (0.6829327739253344)))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (((+ (0.6829327739253344))) ISNULL);
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL rt0.c2 FROM rt0;
SELECT ALL rt0.c2 FROM rt0 WHERE (((rt0.c2)-(((rt0.c2) IS FALSE)))) UNION ALL SELECT rt0.c2 FROM rt0 WHERE ((NOT (((rt0.c2)-(((rt0.c2) IS FALSE)))))) UNION ALL SELECT ALL rt0.c2 FROM rt0 WHERE (((((rt0.c2)-(((rt0.c2) IS FALSE)))) ISNULL));
SELECT ALL rt0.c2 FROM rt0;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (((((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN -988699762 THEN vt1.c0 WHEN NULL THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)AND(((vt1.c0)IS(vt1.c0)))))OR(((((NULL)AND(vt1.c0)))OR(vt1.c0))))) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (((((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN -988699762 THEN vt1.c0 WHEN NULL THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)AND(((vt1.c0)IS(vt1.c0)))))OR(((((NULL)AND(vt1.c0)))OR(vt1.c0))))))) UNION SELECT DISTINCT * FROM vt1 WHERE (((((((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN -988699762 THEN vt1.c0 WHEN NULL THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)AND(((vt1.c0)IS(vt1.c0)))))OR(((((NULL)AND(vt1.c0)))OR(vt1.c0))))) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT ALL rt0.c2 FROM vt1, rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM vt1, rt0 WHERE (((CAST(rt0.c2 AS REAL)) NOT NULL)) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM vt1, rt0 WHERE ((NOT (((CAST(rt0.c2 AS REAL)) NOT NULL)))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM vt1, rt0 WHERE (((((CAST(rt0.c2 AS REAL)) NOT NULL)) ISNULL)) GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM vt1, rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c0 FROM vt1, rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM vt1, rt0 GROUP BY rt0.c0 HAVING (- (TOTAL(rt0.c1))) UNION ALL SELECT rt0.c0 FROM vt1, rt0 GROUP BY rt0.c0 HAVING (NOT ((- (TOTAL(rt0.c1))))) UNION ALL SELECT rt0.c0 FROM vt1, rt0 GROUP BY rt0.c0 HAVING (((- (TOTAL(rt0.c1)))) ISNULL);
SELECT ALL rt0.c0 FROM vt1, rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM vt1, rt0 GROUP BY rt0.c0 HAVING (- (TOTAL(rt0.c1))) UNION ALL SELECT rt0.c0 FROM vt1, rt0 GROUP BY rt0.c0 HAVING (NOT ((- (TOTAL(rt0.c1))))) UNION ALL SELECT rt0.c0 FROM vt1, rt0 GROUP BY rt0.c0 HAVING (((- (TOTAL(rt0.c1)))) ISNULL);
SELECT ALL rt0.c0 FROM vt1, rt0 GROUP BY rt0.c0;
SELECT ALL * FROM rt0, vt1;
SELECT ALL * FROM rt0, vt1 WHERE (CASE (((rt0.c0)) BETWEEN ((vt1.c0)) AND ((rt0.c1)))  WHEN (+ (rt0.c0)) THEN NULL WHEN CASE WHEN rt0.c1 THEN -3.9730649E8 END THEN CAST(rt0.c1 AS TEXT) WHEN (((rt0.c1, vt1.c0, rt0.c0))<((rt0.c0, rt0.c0, rt0.c0))) THEN (NOT (rt0.c2)) ELSE (NULL IN ()) END) UNION ALL SELECT ALL * FROM rt0, vt1 WHERE ((NOT (CASE (((rt0.c0)) BETWEEN ((vt1.c0)) AND ((rt0.c1)))  WHEN (+ (rt0.c0)) THEN NULL WHEN CASE WHEN rt0.c1 THEN -3.9730649E8 END THEN CAST(rt0.c1 AS TEXT) WHEN (((rt0.c1, vt1.c0, rt0.c0))<((rt0.c0, rt0.c0, rt0.c0))) THEN (NOT (rt0.c2)) ELSE (NULL IN ()) END))) UNION ALL SELECT * FROM rt0, vt1 WHERE (((CASE (((rt0.c0)) BETWEEN ((vt1.c0)) AND ((rt0.c1)))  WHEN (+ (rt0.c0)) THEN NULL WHEN CASE WHEN rt0.c1 THEN -3.9730649E8 END THEN CAST(rt0.c1 AS TEXT) WHEN (((rt0.c1, vt1.c0, rt0.c0))<((rt0.c0, rt0.c0, rt0.c0))) THEN (NOT (rt0.c2)) ELSE (NULL IN ()) END) ISNULL));
SELECT ALL * FROM rt0, vt1;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (UPPER(DISTINCT vt1.c0 COLLATE NOCASE)) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (UPPER(DISTINCT vt1.c0 COLLATE NOCASE)))) UNION SELECT DISTINCT * FROM vt1 WHERE (((UPPER(DISTINCT vt1.c0 COLLATE NOCASE)) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE (json_array((vt1.c0 IN (vt1.c0)), (((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND (('-1389529946', vt1.c0, vt1.c0))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT (json_array((vt1.c0 IN (vt1.c0)), (((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND (('-1389529946', vt1.c0, vt1.c0))))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE (((json_array((vt1.c0 IN (vt1.c0)), (((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND (('-1389529946', vt1.c0, vt1.c0))))) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0, vt1 GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM rt0, vt1 GROUP BY rt0.c2, rt0.c0 HAVING (- (((rt0.c1) ISNULL))) UNION ALL SELECT rt0.c2, rt0.c0 FROM rt0, vt1 GROUP BY rt0.c2, rt0.c0 HAVING (NOT ((- (((rt0.c1) ISNULL))))) UNION ALL SELECT rt0.c2, rt0.c0 FROM rt0, vt1 GROUP BY rt0.c2, rt0.c0 HAVING (((- (((rt0.c1) ISNULL)))) ISNULL);
SELECT ALL rt0.c2, rt0.c0 FROM rt0, vt1 GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM rt0, vt1 GROUP BY rt0.c2, rt0.c0 HAVING (- (((rt0.c1) ISNULL))) UNION ALL SELECT rt0.c2, rt0.c0 FROM rt0, vt1 GROUP BY rt0.c2, rt0.c0 HAVING (NOT ((- (((rt0.c1) ISNULL))))) UNION ALL SELECT rt0.c2, rt0.c0 FROM rt0, vt1 GROUP BY rt0.c2, rt0.c0 HAVING (((- (((rt0.c1) ISNULL)))) ISNULL);
SELECT ALL rt0.c2, rt0.c0 FROM rt0, vt1 GROUP BY rt0.c2, rt0.c0;
SELECT SUM(JULIANDAY(((rt0.c2) NOTNULL), (~ (NULL)), ((vt1.c0)-(rt0.c0)), CAST(vt1.c0 AS NUMERIC), CAST(rt0.c2 AS NUMERIC))) FROM rt0, vt1;
SELECT * FROM vt1, rt0;
SELECT ALL * FROM vt1, rt0 WHERE (((((((rt0.c2)GLOB(NULL)))AND((((rt0.c2))<>((vt1.c0))))))OR((+ (rt0.c2))))) UNION ALL SELECT * FROM vt1, rt0 WHERE ((NOT (((((((rt0.c2)GLOB(NULL)))AND((((rt0.c2))!=((vt1.c0))))))OR((+ (rt0.c2))))))) UNION ALL SELECT * FROM vt1, rt0 WHERE (((((((((rt0.c2)GLOB(NULL)))AND((((rt0.c2))!=((vt1.c0))))))OR((+ (rt0.c2))))) ISNULL));
SELECT * FROM vt1, rt0;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE (vt1.c0) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT (vt1.c0))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((vt1.c0) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE (((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)AND(NULL))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)AND(NULL))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE (((((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)AND(NULL))) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL rt0.c0, rt0.c1, vt1.c0 FROM vt1 LEFT OUTER JOIN rt0 ON ((- (rt0.c0)) IN ((((rt0.c0, rt0.c2, vt1.c0)) NOT BETWEEN ((vt1.c0, rt0.c1, vt1.c0)) AND ((vt1.c0, rt0.c0, rt0.c1))), ('-397306490' IN (rt0.c0, rt0.c1)))) GROUP BY rt0.c0, rt0.c1, vt1.c0;
SELECT rt0.c0, rt0.c1, vt1.c0 FROM vt1 LEFT OUTER JOIN rt0 ON ((- (rt0.c0)) IN ((((rt0.c0, rt0.c2, vt1.c0)) NOT BETWEEN ((vt1.c0, rt0.c1, vt1.c0)) AND ((vt1.c0, rt0.c0, rt0.c1))), ('-397306490' IN (rt0.c0, rt0.c1)))) GROUP BY rt0.c0, rt0.c1, vt1.c0 HAVING CASE WHEN '336780496' THEN (+ (rt0.c1)) WHEN ((MAX(SUM(rt0.c0)))<>(SUM(rt0.c2))) THEN TOTAL(MAX(MIN(rt0.c1))) WHEN COUNT(*) THEN (+ (rt0.c0)) END UNION ALL SELECT ALL rt0.c0, rt0.c1, vt1.c0 FROM vt1 LEFT OUTER JOIN rt0 ON ((- (rt0.c0)) IN ((((rt0.c0, rt0.c2, vt1.c0)) NOT BETWEEN ((vt1.c0, rt0.c1, vt1.c0)) AND ((vt1.c0, rt0.c0, rt0.c1))), ('-397306490' IN (rt0.c0, rt0.c1)))) GROUP BY rt0.c0, rt0.c1, vt1.c0 HAVING (NOT (CASE WHEN '336780496' THEN (+ (rt0.c1)) WHEN ((MAX(SUM(rt0.c0)))!=(SUM(rt0.c2))) THEN TOTAL(MAX(MIN(rt0.c1))) WHEN COUNT(*) THEN (+ (rt0.c0)) END)) UNION ALL SELECT ALL rt0.c0, rt0.c1, vt1.c0 FROM vt1 LEFT OUTER JOIN rt0 ON ((- (rt0.c0)) IN ((((rt0.c0, rt0.c2, vt1.c0)) NOT BETWEEN ((vt1.c0, rt0.c1, vt1.c0)) AND ((vt1.c0, rt0.c0, rt0.c1))), ('-397306490' IN (rt0.c0, rt0.c1)))) GROUP BY rt0.c0, rt0.c1, vt1.c0 HAVING ((CASE WHEN '336780496' THEN (+ (rt0.c1)) WHEN ((MAX(SUM(rt0.c0)))<>(SUM(rt0.c2))) THEN TOTAL(MAX(MIN(rt0.c1))) WHEN COUNT(*) THEN (+ (rt0.c0)) END) ISNULL);
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE (rt0.c0) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (rt0.c0))) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE (((rt0.c0) ISNULL));
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c0 FROM rt0 WHERE (((((((((((rt0.c1) IS FALSE))OR('-1898190886' COLLATE NOCASE)))OR(CASE WHEN rt0.c1 THEN rt0.c1 END)))OR(LIKELIHOOD(DISTINCT rt0.c2, 0.3012673975188144))))AND((~ (rt0.c1))))) UNION SELECT DISTINCT rt0.c0 FROM rt0 WHERE ((NOT (((((((((((rt0.c1) IS FALSE))OR('-1898190886' COLLATE NOCASE)))OR(CASE WHEN rt0.c1 THEN rt0.c1 END)))OR(LIKELIHOOD(DISTINCT rt0.c2, 0.3012673975188144))))AND((~ (rt0.c1))))))) UNION SELECT DISTINCT rt0.c0 FROM rt0 WHERE (((((((((((((rt0.c1) IS FALSE))OR('-1898190886' COLLATE NOCASE)))OR(CASE WHEN rt0.c1 THEN rt0.c1 END)))OR(LIKELIHOOD(DISTINCT rt0.c2, 0.3012673975188144))))AND((~ (rt0.c1))))) ISNULL));
SELECT DISTINCT rt0.c0 FROM rt0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE ((((- (vt1.c0))) BETWEEN (((vt1.c0)<=(vt1.c0))) AND (((vt1.c0) NOT NULL)))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT ((((- (vt1.c0))) BETWEEN (((vt1.c0)<=(vt1.c0))) AND (((vt1.c0) NOT NULL)))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((((((- (vt1.c0))) BETWEEN (((vt1.c0)<=(vt1.c0))) AND (((vt1.c0) NOT NULL)))) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING ((((rt0.c2) NOT BETWEEN (rt0.c1) AND (COUNT(*))))-(MAX(MIN(rt0.c0)))) UNION ALL SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 NOT INDEXED GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING (NOT (((((rt0.c2) NOT BETWEEN (rt0.c1) AND (COUNT(*))))-(MAX(MIN(rt0.c0)))))) UNION ALL SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING ((((((rt0.c2) NOT BETWEEN (rt0.c1) AND (COUNT(*))))-(MAX(MIN(rt0.c0))))) ISNULL);
SELECT * FROM vt1;
SELECT ALL * FROM vt1 WHERE (CAST(((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)) AS TEXT)) ORDER BY 0X3be61c28 DESC;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((CAST(rt0.c2 AS REAL)) NOTNULL)) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((CAST(rt0.c2 AS REAL)) NOTNULL)))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((CAST(rt0.c2 AS REAL)) NOTNULL)) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c1 FROM rt0, vt1 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0, vt1 WHERE (TYPEOF(((((vt1.c0)OR(rt0.c0)))AND('-2047681018')))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0, vt1 WHERE ((NOT (TYPEOF(((((vt1.c0)OR(rt0.c0)))AND('-2047681018')))))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0, vt1 WHERE (((TYPEOF(((((vt1.c0)OR(rt0.c0)))AND('-2047681018')))) ISNULL)) GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0, vt1 GROUP BY rt0.c1;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING CAST(CAST(vt1.c0 AS NUMERIC) AS TEXT) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (CAST(CAST(vt1.c0 AS NUMERIC) AS TEXT))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((CAST(CAST(vt1.c0 AS NUMERIC) AS TEXT)) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING CAST(CAST(vt1.c0 AS NUMERIC) AS TEXT) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (CAST(CAST(vt1.c0 AS NUMERIC) AS TEXT))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((CAST(CAST(vt1.c0 AS NUMERIC) AS TEXT)) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT TOTAL(((((vt1.c0)>=(rt0.c1))) ISNULL)) FROM vt1, rt0;
SELECT ALL rt0.c0 FROM rt0, vt1;
SELECT rt0.c0 FROM rt0, vt1 WHERE (((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2))) IS TRUE)) UNION ALL SELECT ALL rt0.c0 FROM rt0, vt1 WHERE ((NOT (((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2))) IS TRUE)))) UNION ALL SELECT rt0.c0 FROM rt0, vt1 WHERE (((((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2))) IS TRUE)) ISNULL));
SELECT ALL rt0.c0 FROM rt0, vt1;
SELECT DISTINCT vt1.c0, rt0.c2 FROM rt0, vt1;
SELECT DISTINCT vt1.c0, rt0.c2 FROM rt0, vt1 WHERE (x'') UNION SELECT DISTINCT vt1.c0, rt0.c2 FROM rt0, vt1 WHERE ((NOT (x''))) UNION SELECT DISTINCT vt1.c0, rt0.c2 FROM rt0, vt1 WHERE (((x'') ISNULL));
SELECT DISTINCT vt1.c0, rt0.c2 FROM rt0, vt1;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE (CAST(1.643555933E9 AS BLOB)) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT (CAST(1.643555933E9 AS BLOB)))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE (((CAST(1.643555933E9 AS BLOB)) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 NOT INDEXED GROUP BY vt1.c0 HAVING ((MIN(vt1.c0)) ISNULL) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (((MIN(vt1.c0)) ISNULL))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((((MIN(vt1.c0)) ISNULL)) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 NOT INDEXED GROUP BY vt1.c0 HAVING ((MIN(vt1.c0)) ISNULL) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (((MIN(vt1.c0)) ISNULL))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((((MIN(vt1.c0)) ISNULL)) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL rt0.c2 FROM rt0, vt1;
SELECT rt0.c2 FROM rt0, vt1 WHERE (((vt1.c0)GLOB(((((vt1.c0)OR(vt1.c0)))OR(rt0.c0))))) UNION ALL SELECT rt0.c2 FROM rt0, vt1 WHERE ((NOT (((vt1.c0)GLOB(((((vt1.c0)OR(vt1.c0)))OR(rt0.c0))))))) UNION ALL SELECT rt0.c2 FROM rt0, vt1 WHERE (((((vt1.c0)GLOB(((((vt1.c0)OR(vt1.c0)))OR(rt0.c0))))) ISNULL));
SELECT ALL rt0.c2 FROM rt0, vt1;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((CAST(rt0.c2 AS BLOB))&((rt0.c1 IN (rt0.c0))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((CAST(rt0.c2 AS BLOB))&((rt0.c1 IN (rt0.c0))))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((CAST(rt0.c2 AS BLOB))&((rt0.c1 IN (rt0.c0))))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE (((vt1.c0 COLLATE NOCASE)%(((vt1.c0)*(vt1.c0))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (((vt1.c0 COLLATE NOCASE)%(((vt1.c0)*(vt1.c0))))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE (((((vt1.c0 COLLATE NOCASE)%(((vt1.c0)*(vt1.c0))))) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0, rt0.c2, rt0.c0, rt0.c1 FROM rt0 FULL OUTER JOIN vt1 ON ((((0X698e6866)/(rt0.c2)))+(rt0.c0 COLLATE RTRIM)) GROUP BY vt1.c0, rt0.c2, rt0.c0, rt0.c1;
SELECT vt1.c0, rt0.c2, rt0.c0, rt0.c1 FROM rt0 FULL OUTER JOIN vt1 ON ((((0X698e6866)/(rt0.c2)))+(rt0.c0 COLLATE RTRIM)) GROUP BY vt1.c0, rt0.c2, rt0.c0, rt0.c1 HAVING ((MIN(rt0.c0)) NOT BETWEEN (MIN(MIN(GROUP_CONCAT(rt0.c0)))) AND (TRIM(AVG(TOTAL(TOTAL(MAX(COUNT(*))))), vt1.c0))) UNION ALL SELECT vt1.c0, rt0.c2, rt0.c0, rt0.c1 FROM rt0 FULL OUTER JOIN vt1 ON ((((0X698e6866)/(rt0.c2)))+(rt0.c0 COLLATE RTRIM)) GROUP BY vt1.c0, rt0.c2, rt0.c0, rt0.c1 HAVING (NOT (((MIN(rt0.c0)) NOT BETWEEN (MIN(MIN(GROUP_CONCAT(rt0.c0)))) AND (TRIM(AVG(TOTAL(TOTAL(MAX(COUNT(*))))), vt1.c0))))) UNION ALL SELECT vt1.c0, rt0.c2, rt0.c0, rt0.c1 FROM rt0 FULL OUTER JOIN vt1 ON ((((0X698e6866)/(rt0.c2)))+(rt0.c0 COLLATE RTRIM)) GROUP BY vt1.c0, rt0.c2, rt0.c0, rt0.c1 HAVING ((((MIN(rt0.c0)) NOT BETWEEN (MIN(MIN(GROUP_CONCAT(rt0.c0)))) AND (TRIM(AVG(TOTAL(TOTAL(MAX(COUNT(*))))), vt1.c0)))) ISNULL);
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE (((CAST(rt0.c1 AS BLOB))!=((~ (rt0.c2))))) UNION ALL SELECT * FROM rt0 WHERE ((NOT (((CAST(rt0.c1 AS BLOB))<>((~ (rt0.c2))))))) UNION ALL SELECT * FROM rt0 WHERE (((((CAST(rt0.c1 AS BLOB))<>((~ (rt0.c2))))) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c0, vt1.c0, rt0.c1 FROM rt0 CROSS JOIN vt1 ON ((((((((((rt0.c2)<<(rt0.c1)))AND(CAST(rt0.c2 AS TEXT))))OR(((rt0.c0)=(rt0.c2)))))AND(CASE rt0.c0  WHEN vt1.c0 THEN NULL WHEN rt0.c2 THEN x'cbb8' WHEN rt0.c1 THEN vt1.c0 END)))AND(CAST(rt0.c2 AS REAL)));
SELECT DISTINCT rt0.c2, rt0.c0, vt1.c0, rt0.c1 FROM rt0 CROSS JOIN vt1 ON ((((((((((rt0.c2)<<(rt0.c1)))AND(CAST(rt0.c2 AS TEXT))))OR(((rt0.c0)=(rt0.c2)))))AND(CASE rt0.c0  WHEN vt1.c0 THEN NULL WHEN rt0.c2 THEN x'cbb8' WHEN rt0.c1 THEN vt1.c0 END)))AND(CAST(rt0.c2 AS REAL))) WHERE ((json_type(vt1.c0) IN ())) UNION SELECT DISTINCT rt0.c2, rt0.c0, vt1.c0, rt0.c1 FROM rt0 CROSS JOIN vt1 ON ((((((((((rt0.c2)<<(rt0.c1)))AND(CAST(rt0.c2 AS TEXT))))OR(((rt0.c0)==(rt0.c2)))))AND(CASE rt0.c0  WHEN vt1.c0 THEN NULL WHEN rt0.c2 THEN x'cbb8' WHEN rt0.c1 THEN vt1.c0 END)))AND(CAST(rt0.c2 AS REAL))) WHERE ((NOT ((json_type(vt1.c0) IN ())))) UNION SELECT DISTINCT rt0.c2, rt0.c0, vt1.c0, rt0.c1 FROM rt0 CROSS JOIN vt1 ON ((((((((((rt0.c2)<<(rt0.c1)))AND(CAST(rt0.c2 AS TEXT))))OR(((rt0.c0)==(rt0.c2)))))AND(CASE rt0.c0  WHEN vt1.c0 THEN NULL WHEN rt0.c2 THEN x'cbb8' WHEN rt0.c1 THEN vt1.c0 END)))AND(CAST(rt0.c2 AS REAL))) WHERE ((((json_type(vt1.c0) IN ())) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c0, vt1.c0, rt0.c1 FROM rt0 CROSS JOIN vt1 ON ((((((((((rt0.c2)<<(rt0.c1)))AND(CAST(rt0.c2 AS TEXT))))OR(((rt0.c0)=(rt0.c2)))))AND(CASE rt0.c0  WHEN vt1.c0 THEN NULL WHEN rt0.c2 THEN x'cbb8' WHEN rt0.c1 THEN vt1.c0 END)))AND(CAST(rt0.c2 AS REAL)));
SELECT rt0.c0, rt0.c1, rt0.c2, vt1.c0 FROM vt1 INNER JOIN rt0 ON ((((rt0.c0)>(rt0.c0))) IS FALSE) GROUP BY rt0.c0, rt0.c1, rt0.c2, vt1.c0;
SELECT ALL rt0.c0, rt0.c1, rt0.c2, vt1.c0 FROM vt1 INNER JOIN rt0 ON ((((rt0.c0)>(rt0.c0))) IS FALSE) WHERE (((rt0.c2) NOT BETWEEN (rt0.c0) AND (vt1.c0)) COLLATE BINARY) GROUP BY rt0.c0, rt0.c1, rt0.c2, vt1.c0 UNION SELECT ALL rt0.c0, rt0.c1, rt0.c2, vt1.c0 FROM vt1 INNER JOIN rt0 ON ((((rt0.c0)>(rt0.c0))) IS FALSE) WHERE ((NOT (((rt0.c2) NOT BETWEEN (rt0.c0) AND (vt1.c0)) COLLATE BINARY))) GROUP BY rt0.c0, rt0.c1, rt0.c2, vt1.c0 UNION SELECT ALL rt0.c0, rt0.c1, rt0.c2, vt1.c0 FROM vt1 INNER JOIN rt0 ON ((((rt0.c0)>(rt0.c0))) IS FALSE) WHERE (((((rt0.c2) NOT BETWEEN (rt0.c0) AND (vt1.c0)) COLLATE BINARY) ISNULL)) GROUP BY rt0.c0, rt0.c1, rt0.c2, vt1.c0;
SELECT rt0.c0, rt0.c1, rt0.c2, vt1.c0 FROM vt1 INNER JOIN rt0 ON ((((rt0.c0)>(rt0.c0))) IS FALSE) GROUP BY rt0.c0, rt0.c1, rt0.c2, vt1.c0;
SELECT ALL rt0.c2, vt1.c0, rt0.c1, rt0.c0 FROM vt1, rt0 GROUP BY rt0.c2, vt1.c0, rt0.c1, rt0.c0;
SELECT ALL rt0.c2, vt1.c0, rt0.c1, rt0.c0 FROM vt1, rt0 GROUP BY rt0.c2, vt1.c0, rt0.c1, rt0.c0 HAVING MIN((rt0.c0 IN (GROUP_CONCAT(AVG(rt0.c1))))) UNION ALL SELECT rt0.c2, vt1.c0, rt0.c1, rt0.c0 FROM vt1, rt0 GROUP BY rt0.c2, vt1.c0, rt0.c1, rt0.c0 HAVING (NOT (MIN((rt0.c0 IN (GROUP_CONCAT(AVG(rt0.c1))))))) UNION ALL SELECT rt0.c2, vt1.c0, rt0.c1, rt0.c0 FROM vt1, rt0 GROUP BY rt0.c2, vt1.c0, rt0.c1, rt0.c0 HAVING ((MIN((rt0.c0 IN (GROUP_CONCAT(AVG(rt0.c1)))))) ISNULL);
SELECT MIN(CASE WHEN (rt0.c0 IN (rt0.c1, rt0.c1)) THEN IFNULL(DISTINCT vt1.c0, rt0.c1) WHEN ((rt0.c2) IS FALSE) THEN ((vt1.c0)IS NOT(rt0.c1)) WHEN ((rt0.c1) BETWEEN (vt1.c0) AND (vt1.c0)) THEN CAST(rt0.c2 AS TEXT) END) FROM rt0, vt1;
SELECT ALL * FROM rt0;
SELECT * FROM rt0 WHERE ((((((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0))))GLOB(rt0.c0))) UNION ALL SELECT * FROM rt0 WHERE ((NOT ((((((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0))))GLOB(rt0.c0))))) UNION ALL SELECT ALL * FROM rt0 WHERE ((((((((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0))))GLOB(rt0.c0))) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT * FROM rt0, vt1;
SELECT DISTINCT * FROM rt0, vt1 WHERE (((0.7959423186393383) NOT NULL)) UNION SELECT DISTINCT * FROM rt0, vt1 WHERE ((NOT (((0.7959423186393383) NOT NULL)))) UNION SELECT DISTINCT * FROM rt0, vt1 WHERE (((((0.7959423186393383) NOT NULL)) ISNULL));
SELECT DISTINCT * FROM rt0, vt1;
SELECT rt0.c2, vt1.c0, rt0.c1 FROM vt1, rt0 GROUP BY rt0.c2, vt1.c0, rt0.c1;
SELECT ALL rt0.c2, vt1.c0, rt0.c1 FROM vt1, rt0 WHERE (CASE WHEN (- (rt0.c0)) THEN ((rt0.c1) NOT NULL) ELSE rt0.c1 END) GROUP BY rt0.c2, vt1.c0, rt0.c1 UNION SELECT rt0.c2, vt1.c0, rt0.c1 FROM vt1, rt0 WHERE ((NOT (CASE WHEN (- (rt0.c0)) THEN ((rt0.c1) NOT NULL) ELSE rt0.c1 END))) GROUP BY rt0.c2, vt1.c0, rt0.c1 UNION SELECT ALL rt0.c2, vt1.c0, rt0.c1 FROM vt1, rt0 WHERE (((CASE WHEN (- (rt0.c0)) THEN ((rt0.c1) NOT NULL) ELSE rt0.c1 END) ISNULL)) GROUP BY rt0.c2, vt1.c0, rt0.c1;
SELECT rt0.c2, vt1.c0, rt0.c1 FROM vt1, rt0 GROUP BY rt0.c2, vt1.c0, rt0.c1;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING LENGTH(NULL) UNION ALL SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (NOT (LENGTH(NULL))) UNION ALL SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING ((LENGTH(NULL)) ISNULL);
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING LENGTH(NULL) UNION ALL SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (NOT (LENGTH(NULL))) UNION ALL SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING ((LENGTH(NULL)) ISNULL);
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0, vt1;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0, vt1 WHERE (ABS(DISTINCT CASE rt0.c0  WHEN rt0.c1 THEN rt0.c0 WHEN vt1.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c2 END)) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0, vt1 WHERE ((NOT (ABS(DISTINCT CASE rt0.c0  WHEN rt0.c1 THEN rt0.c0 WHEN vt1.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c2 END)))) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0, vt1 WHERE (((ABS(DISTINCT CASE rt0.c0  WHEN rt0.c1 THEN rt0.c0 WHEN vt1.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c2 END)) ISNULL));
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0, vt1;
SELECT DISTINCT * FROM rt0, vt1;
SELECT DISTINCT * FROM rt0, vt1 WHERE ((- (((rt0.c0)<(rt0.c2))))) UNION SELECT DISTINCT * FROM rt0, vt1 WHERE ((NOT ((- (((rt0.c0)<(rt0.c2))))))) UNION SELECT DISTINCT * FROM rt0, vt1 WHERE ((((- (((rt0.c0)<(rt0.c2))))) ISNULL));
SELECT DISTINCT * FROM rt0, vt1;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE (rtreenode((('0.9908189765704483') NOT BETWEEN (vt1.c0) AND (vt1.c0)), UNLIKELY(DISTINCT vt1.c0))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (rtreenode((('0.9908189765704483') NOT BETWEEN (vt1.c0) AND (vt1.c0)), UNLIKELY(DISTINCT vt1.c0))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE (((rtreenode((('0.9908189765704483') NOT BETWEEN (vt1.c0) AND (vt1.c0)), UNLIKELY(DISTINCT vt1.c0))) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING (((rt0.c1)) NOT BETWEEN ((AVG(COUNT(rt0.c1)))) AND ((SUM(rt0.c1)))) UNION ALL SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING (NOT ((((rt0.c1)) NOT BETWEEN ((AVG(COUNT(rt0.c1)))) AND ((SUM(rt0.c1)))))) UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING (((((rt0.c1)) NOT BETWEEN ((AVG(COUNT(rt0.c1)))) AND ((SUM(rt0.c1))))) ISNULL);
SELECT ALL rt0.c0, rt0.c2, vt1.c0, rt0.c1 FROM rt0, vt1;
SELECT ALL rt0.c0, rt0.c2, vt1.c0, rt0.c1 FROM rt0, vt1 WHERE (((((rt0.c2) NOTNULL))+((((vt1.c0, rt0.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, rt0.c0, rt0.c0)) AND ((rt0.c1, vt1.c0, rt0.c0)))))) UNION ALL SELECT rt0.c0, rt0.c2, vt1.c0, rt0.c1 FROM rt0, vt1 WHERE ((NOT (((((rt0.c2) NOTNULL))+((((vt1.c0, rt0.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, rt0.c0, rt0.c0)) AND ((rt0.c1, vt1.c0, rt0.c0)))))))) UNION ALL SELECT rt0.c0, rt0.c2, vt1.c0, rt0.c1 FROM rt0, vt1 WHERE (((((((rt0.c2) NOTNULL))+((((vt1.c0, rt0.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, rt0.c0, rt0.c0)) AND ((rt0.c1, vt1.c0, rt0.c0)))))) ISNULL));
SELECT ALL rt0.c0, rt0.c2, vt1.c0, rt0.c1 FROM rt0, vt1;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2 COLLATE BINARY))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2 COLLATE BINARY))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2 COLLATE BINARY))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE (((((vt1.c0)|(vt1.c0)))LIKE(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (((((vt1.c0)|(vt1.c0)))LIKE(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE (((((((vt1.c0)|(vt1.c0)))LIKE(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0, rt0.c0, rt0.c2, rt0.c1 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c0, rt0.c2, rt0.c1;
SELECT ALL vt1.c0, rt0.c0, rt0.c2, rt0.c1 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c0, rt0.c2, rt0.c1 HAVING SUM(AVG(rt0.c2) COLLATE RTRIM) UNION ALL SELECT vt1.c0, rt0.c0, rt0.c2, rt0.c1 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c0, rt0.c2, rt0.c1 HAVING (NOT (SUM(AVG(rt0.c2) COLLATE RTRIM))) UNION ALL SELECT ALL vt1.c0, rt0.c0, rt0.c2, rt0.c1 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c0, rt0.c2, rt0.c1 HAVING ((SUM(AVG(rt0.c2) COLLATE RTRIM)) ISNULL);
SELECT ALL * FROM vt1;
SELECT * FROM vt1 WHERE ((((vt1.c0) NOTNULL) IN ())) UNION ALL SELECT * FROM vt1 WHERE ((NOT ((((vt1.c0) NOTNULL) IN ())))) UNION ALL SELECT * FROM vt1 WHERE ((((((vt1.c0) NOTNULL) IN ())) ISNULL));
SELECT ALL * FROM vt1;
SELECT DISTINCT rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c2 FROM rt0 WHERE (rt0.c2) UNION SELECT DISTINCT rt0.c2 FROM rt0 WHERE ((NOT (rt0.c2))) UNION SELECT DISTINCT rt0.c2 FROM rt0 WHERE (((rt0.c2) ISNULL));
SELECT DISTINCT rt0.c2 FROM rt0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE ((((((vt1.c0))<>((vt1.c0))))<((((vt1.c0))>=((vt1.c0)))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT ((((((vt1.c0))!=((vt1.c0))))<((((vt1.c0))>=((vt1.c0)))))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((((((((vt1.c0))<>((vt1.c0))))<((((vt1.c0))>=((vt1.c0)))))) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING MIN((((MAX('}%'))) BETWEEN ((COUNT(rt0.c0))) AND ((rt0.c2)))) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT (MIN((((MAX('}%'))) BETWEEN ((COUNT(rt0.c0))) AND ((rt0.c2)))))) UNION ALL SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((MIN((((MAX('}%'))) BETWEEN ((COUNT(rt0.c0))) AND ((rt0.c2))))) ISNULL);
SELECT ALL * FROM rt0, vt1;
SELECT * FROM rt0, vt1 WHERE ((x'' IN ())) UNION ALL SELECT * FROM rt0, vt1 WHERE ((NOT ((x'' IN ())))) UNION ALL SELECT ALL * FROM rt0, vt1 WHERE ((((x'' IN ())) ISNULL));
SELECT ALL * FROM rt0, vt1;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (0xffffffffa462230f) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (0xffffffffa462230f))) UNION SELECT DISTINCT * FROM vt1 WHERE (((0Xffffffffa462230f) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE ((~ (((vt1.c0) NOTNULL)))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT ((~ (((vt1.c0) NOTNULL)))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((((~ (((vt1.c0) NOTNULL)))) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING (NOT (TOTAL(rt0.c0))) UNION ALL SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING (NOT ((NOT (TOTAL(rt0.c0))))) UNION ALL SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING (((NOT (TOTAL(rt0.c0)))) ISNULL);
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING (NOT (TOTAL(rt0.c0))) UNION ALL SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING (NOT ((NOT (TOTAL(rt0.c0))))) UNION ALL SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING (((NOT (TOTAL(rt0.c0)))) ISNULL);
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((((((rt0.c2)AND(rt0.c0)))OR(rt0.c2)) IN ())) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT ((((((rt0.c2)AND(rt0.c0)))OR(rt0.c2)) IN ())))) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((((((((rt0.c2)AND(rt0.c0)))OR(rt0.c2)) IN ())) ISNULL));
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((rt0.c1)<=(((((rt0.c0)OR(rt0.c1)))AND(rt0.c2))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((rt0.c1)<=(((((rt0.c0)OR(rt0.c1)))AND(rt0.c2))))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((rt0.c1)<=(((((rt0.c0)OR(rt0.c1)))AND(rt0.c2))))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE ('F/W') GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT ('F/W'))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 NOT INDEXED WHERE ((('F/W') ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL rt0.c2, vt1.c0, rt0.c1, rt0.c0 FROM vt1 NATURAL JOIN rt0 GROUP BY rt0.c2, vt1.c0, rt0.c1, rt0.c0;
SELECT rt0.c2, vt1.c0, rt0.c1, rt0.c0 FROM vt1 NATURAL JOIN rt0 GROUP BY rt0.c2, vt1.c0, rt0.c1, rt0.c0 HAVING MAX(COUNT(rt0.c2)) UNION ALL SELECT ALL rt0.c2, vt1.c0, rt0.c1, rt0.c0 FROM vt1 NATURAL JOIN rt0 GROUP BY rt0.c2, vt1.c0, rt0.c1, rt0.c0 HAVING (NOT (MAX(COUNT(rt0.c2)))) UNION ALL SELECT rt0.c2, vt1.c0, rt0.c1, rt0.c0 FROM vt1 NATURAL JOIN rt0 GROUP BY rt0.c2, vt1.c0, rt0.c1, rt0.c0 HAVING ((MAX(COUNT(rt0.c2))) ISNULL);
SELECT rt0.c1, rt0.c2, vt1.c0, rt0.c0 FROM rt0, vt1;
SELECT ALL rt0.c1, rt0.c2, vt1.c0, rt0.c0 FROM rt0, vt1 WHERE (((rt0.c1 COLLATE BINARY) NOT BETWEEN (CASE WHEN vt1.c0 THEN vt1.c0 ELSE NULL END) AND (((rt0.c1) BETWEEN (vt1.c0) AND (rt0.c1))))) UNION ALL SELECT rt0.c1, rt0.c2, vt1.c0, rt0.c0 FROM rt0, vt1 WHERE ((NOT (((rt0.c1 COLLATE BINARY) NOT BETWEEN (CASE WHEN vt1.c0 THEN vt1.c0 ELSE NULL END) AND (((rt0.c1) BETWEEN (vt1.c0) AND (rt0.c1))))))) UNION ALL SELECT rt0.c1, rt0.c2, vt1.c0, rt0.c0 FROM rt0, vt1 WHERE (((((rt0.c1 COLLATE BINARY) NOT BETWEEN (CASE WHEN vt1.c0 THEN vt1.c0 ELSE NULL END) AND (((rt0.c1) BETWEEN (vt1.c0) AND (rt0.c1))))) ISNULL));
SELECT rt0.c1, rt0.c2, vt1.c0, rt0.c0 FROM rt0, vt1;
SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0 WHERE (((((((((CASE rt0.c1  WHEN rt0.c0 THEN 0.042183736028411634 END)OR(((x'')OR(rt0.c0)))))AND(CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 END)))OR(CAST(rt0.c0 AS REAL))))OR((('')&(rt0.c1))))) UNION SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (((((((((CASE rt0.c1  WHEN rt0.c0 THEN 0.042183736028411634 END)OR(((x'')OR(rt0.c0)))))AND(CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 END)))OR(CAST(rt0.c0 AS REAL))))OR((('')&(rt0.c1))))))) UNION SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0 WHERE (((((((((((CASE rt0.c1  WHEN rt0.c0 THEN 0.042183736028411634 END)OR(((x'')OR(rt0.c0)))))AND(CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 END)))OR(CAST(rt0.c0 AS REAL))))OR((('')&(rt0.c1))))) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE ((vt1.c0 COLLATE NOCASE IN (((vt1.c0)IS NOT(vt1.c0))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT ((vt1.c0 COLLATE NOCASE IN (((vt1.c0)IS NOT(vt1.c0))))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((((vt1.c0 COLLATE NOCASE IN (((vt1.c0)IS NOT(vt1.c0))))) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING MAX(vt1.c0) COLLATE BINARY UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (MAX(vt1.c0) COLLATE BINARY)) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((MAX(vt1.c0) COLLATE BINARY) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING MAX(vt1.c0) COLLATE BINARY UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (MAX(vt1.c0) COLLATE BINARY)) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((MAX(vt1.c0) COLLATE BINARY) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL rt0.c0, rt0.c1, rt0.c2, vt1.c0 FROM rt0 NOT INDEXED, vt1;
SELECT rt0.c0, rt0.c1, rt0.c2, vt1.c0 FROM rt0, vt1 WHERE (CAST(rt0.c1 AS INTEGER)) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2, vt1.c0 FROM rt0, vt1 WHERE ((NOT (CAST(rt0.c1 AS INTEGER)))) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2, vt1.c0 FROM rt0, vt1 WHERE (((CAST(rt0.c1 AS INTEGER)) ISNULL));
SELECT ALL rt0.c0, rt0.c1, rt0.c2, vt1.c0 FROM rt0 NOT INDEXED, vt1;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE ((CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN '' THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END IN ())) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT ((CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN '' THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END IN ())))) UNION SELECT DISTINCT * FROM vt1 WHERE ((((CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN '' THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END IN ())) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE (((rt0.c0)>>(rt0.c2)) COLLATE BINARY) GROUP BY rt0.c2, rt0.c1, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (((rt0.c0)>>(rt0.c2)) COLLATE BINARY))) GROUP BY rt0.c2, rt0.c1, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE (((((rt0.c0)>>(rt0.c2)) COLLATE BINARY) ISNULL)) GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (((((NOT (SUM(MAX(rt0.c1)))))AND(((((SUM(COUNT(*)))AND(COUNT(rt0.c0))))OR(rt0.c1)))))AND(TOTAL(rt0.c1))) UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT ((((((NOT (SUM(MAX(rt0.c1)))))AND(((((SUM(COUNT(*)))AND(COUNT(rt0.c0))))OR(rt0.c1)))))AND(TOTAL(rt0.c1))))) UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (((((((NOT (SUM(MAX(rt0.c1)))))AND(((((SUM(COUNT(*)))AND(COUNT(rt0.c0))))OR(rt0.c1)))))AND(TOTAL(rt0.c1)))) ISNULL);
SELECT rt0.c1, rt0.c0, vt1.c0, rt0.c2 FROM vt1, rt0;
SELECT rt0.c1, rt0.c0, vt1.c0, rt0.c2 FROM vt1, rt0 WHERE (CASE WHEN ((rt0.c0)OR(rt0.c0)) THEN ((vt1.c0)<(rt0.c1)) ELSE CASE rt0.c1  WHEN rt0.c0 THEN vt1.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN vt1.c0 ELSE rt0.c2 END END) UNION ALL SELECT rt0.c1, rt0.c0, vt1.c0, rt0.c2 FROM vt1, rt0 WHERE ((NOT (CASE WHEN ((rt0.c0)OR(rt0.c0)) THEN ((vt1.c0)<(rt0.c1)) ELSE CASE rt0.c1  WHEN rt0.c0 THEN vt1.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN vt1.c0 ELSE rt0.c2 END END))) UNION ALL SELECT ALL rt0.c1, rt0.c0, vt1.c0, rt0.c2 FROM vt1, rt0 WHERE (((CASE WHEN ((rt0.c0)OR(rt0.c0)) THEN ((vt1.c0)<(rt0.c1)) ELSE CASE rt0.c1  WHEN rt0.c0 THEN vt1.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN vt1.c0 ELSE rt0.c2 END END) ISNULL));
SELECT rt0.c1, rt0.c0, vt1.c0, rt0.c2 FROM vt1, rt0;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE (TYPEOF(CASE WHEN vt1.c0 THEN 0.4305185670304864 ELSE -1.678288641E9 END)) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT (TYPEOF(CASE WHEN vt1.c0 THEN 0.4305185670304864 ELSE -1.678288641E9 END)))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((TYPEOF(CASE WHEN vt1.c0 THEN 0.4305185670304864 ELSE -1.678288641E9 END)) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE (CAST((~ (vt1.c0)) AS REAL)) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT (CAST((~ (vt1.c0)) AS REAL)))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE (((CAST((~ (vt1.c0)) AS REAL)) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING json_extract(GROUP_CONCAT(COUNT(rt0.c2)), rt0.c2) UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING (NOT (json_extract(GROUP_CONCAT(COUNT(rt0.c2)), rt0.c2))) UNION ALL SELECT rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0 HAVING ((json_extract(GROUP_CONCAT(COUNT(rt0.c2)), rt0.c2)) ISNULL);
SELECT ALL * FROM vt1;
SELECT ALL * FROM vt1 WHERE (((((((((CAST(vt1.c0 AS INTEGER))AND((vt1.c0 IN ()))))AND(QUOTE(vt1.c0))))AND(CAST(vt1.c0 AS INTEGER))))AND(vt1.c0))) UNION ALL SELECT * FROM vt1 WHERE ((NOT (((((((((CAST(vt1.c0 AS INTEGER))AND((vt1.c0 IN ()))))AND(QUOTE(vt1.c0))))AND(CAST(vt1.c0 AS INTEGER))))AND(vt1.c0))))) UNION ALL SELECT * FROM vt1 WHERE (((((((((((CAST(vt1.c0 AS INTEGER))AND((vt1.c0 IN ()))))AND(QUOTE(vt1.c0))))AND(CAST(vt1.c0 AS INTEGER))))AND(vt1.c0))) ISNULL));
SELECT ALL * FROM vt1;
SELECT DISTINCT * FROM rt0, vt1;
SELECT DISTINCT * FROM rt0, vt1 WHERE (NULL) UNION SELECT DISTINCT * FROM rt0, vt1 WHERE ((NOT (NULL))) UNION SELECT DISTINCT * FROM rt0, vt1 WHERE (((NULL) ISNULL));
SELECT DISTINCT * FROM rt0, vt1;
SELECT rt0.c1, rt0.c2, vt1.c0, rt0.c0 FROM rt0, vt1 GROUP BY rt0.c1, rt0.c2, vt1.c0, rt0.c0;
SELECT ALL rt0.c1, rt0.c2, vt1.c0, rt0.c0 FROM rt0, vt1 WHERE (HEX(TYPEOF(DISTINCT '8B엋C'))) GROUP BY rt0.c1, rt0.c2, vt1.c0, rt0.c0 UNION SELECT rt0.c1, rt0.c2, vt1.c0, rt0.c0 FROM rt0, vt1 WHERE ((NOT (HEX(TYPEOF(DISTINCT '8B엋C'))))) GROUP BY rt0.c1, rt0.c2, vt1.c0, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c2, vt1.c0, rt0.c0 FROM rt0, vt1 WHERE (((HEX(TYPEOF(DISTINCT '8B엋C'))) ISNULL)) GROUP BY rt0.c1, rt0.c2, vt1.c0, rt0.c0;
SELECT rt0.c1, rt0.c2, vt1.c0, rt0.c0 FROM rt0, vt1 GROUP BY rt0.c1, rt0.c2, vt1.c0, rt0.c0;
SELECT ALL vt1.c0 FROM vt1, rt0 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1, rt0 GROUP BY vt1.c0 HAVING MAX(COUNT(COUNT(vt1.c0))) UNION ALL SELECT vt1.c0 FROM vt1, rt0 GROUP BY vt1.c0 HAVING (NOT (MAX(COUNT(COUNT(vt1.c0))))) UNION ALL SELECT vt1.c0 FROM vt1, rt0 GROUP BY vt1.c0 HAVING ((MAX(COUNT(COUNT(vt1.c0)))) ISNULL);
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE (LTRIM(CAST(rt0.c1 AS REAL))) UNION ALL SELECT * FROM rt0 WHERE ((NOT (LTRIM(CAST(rt0.c1 AS REAL))))) UNION ALL SELECT ALL * FROM rt0 WHERE (((LTRIM(CAST(rt0.c1 AS REAL))) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (CAST((((rt0.c0, rt0.c2, rt0.c2))!=((rt0.c1, rt0.c2, rt0.c0))) AS REAL)) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (CAST((((rt0.c0, rt0.c2, rt0.c2))<>((rt0.c1, rt0.c2, rt0.c0))) AS REAL)))) UNION SELECT DISTINCT * FROM rt0 WHERE (((CAST((((rt0.c0, rt0.c2, rt0.c2))!=((rt0.c1, rt0.c2, rt0.c0))) AS REAL)) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c2, rt0.c1, vt1.c0 FROM vt1, rt0 GROUP BY rt0.c2, rt0.c1, vt1.c0;
SELECT rt0.c2, rt0.c1, vt1.c0 FROM vt1, rt0 WHERE (((((vt1.c0)%(rt0.c1))) ISNULL)) GROUP BY rt0.c2, rt0.c1, vt1.c0 UNION SELECT rt0.c2, rt0.c1, vt1.c0 FROM vt1, rt0 WHERE ((NOT (((((vt1.c0)%(rt0.c1))) ISNULL)))) GROUP BY rt0.c2, rt0.c1, vt1.c0 UNION SELECT rt0.c2, rt0.c1, vt1.c0 FROM vt1 NOT INDEXED, rt0 WHERE (((((((vt1.c0)%(rt0.c1))) ISNULL)) ISNULL)) GROUP BY rt0.c2, rt0.c1, vt1.c0;
SELECT ALL rt0.c2, rt0.c1, vt1.c0 FROM vt1, rt0 GROUP BY rt0.c2, rt0.c1, vt1.c0;
SELECT vt1.c0 FROM rt0, vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM rt0, vt1 GROUP BY vt1.c0 HAVING SUM(MIN(rt0.c0)) UNION ALL SELECT vt1.c0 FROM rt0, vt1 GROUP BY vt1.c0 HAVING (NOT (SUM(MIN(rt0.c0)))) UNION ALL SELECT ALL vt1.c0 FROM rt0, vt1 GROUP BY vt1.c0 HAVING ((SUM(MIN(rt0.c0))) ISNULL);
SELECT ALL rt0.c1, vt1.c0 FROM rt0, vt1;
SELECT ALL rt0.c1, vt1.c0 FROM rt0, vt1 WHERE ((((~ (vt1.c0))) BETWEEN ((- (rt0.c2))) AND (CAST(rt0.c1 AS NUMERIC)))) UNION ALL SELECT ALL rt0.c1, vt1.c0 FROM rt0, vt1 WHERE ((NOT ((((~ (vt1.c0))) BETWEEN ((- (rt0.c2))) AND (CAST(rt0.c1 AS NUMERIC)))))) UNION ALL SELECT ALL rt0.c1, vt1.c0 FROM rt0, vt1 WHERE ((((((~ (vt1.c0))) BETWEEN ((- (rt0.c2))) AND (CAST(rt0.c1 AS NUMERIC)))) ISNULL));
SELECT ALL rt0.c1, vt1.c0 FROM rt0, vt1;
SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0, vt1;
SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0, vt1 WHERE (((CAST(vt1.c0 AS NUMERIC)) NOT BETWEEN (IFNULL(DISTINCT rt0.c2, rt0.c0)) AND (UNLIKELY(rt0.c0)))) UNION SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0, vt1 WHERE ((NOT (((CAST(vt1.c0 AS NUMERIC)) NOT BETWEEN (IFNULL(DISTINCT rt0.c2, rt0.c0)) AND (UNLIKELY(rt0.c0)))))) UNION SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0, vt1 WHERE (((((CAST(vt1.c0 AS NUMERIC)) NOT BETWEEN (IFNULL(DISTINCT rt0.c2, rt0.c0)) AND (UNLIKELY(rt0.c0)))) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0, vt1;
SELECT ALL rt0.c1, rt0.c2 FROM rt0, vt1 GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c1, rt0.c2 FROM rt0, vt1 WHERE (CASE ((rt0.c2)*(vt1.c0))  WHEN rt0.c0 COLLATE BINARY THEN '336780496' END) GROUP BY rt0.c1, rt0.c2 UNION SELECT rt0.c1, rt0.c2 FROM rt0, vt1 WHERE ((NOT (CASE ((rt0.c2)*(vt1.c0))  WHEN rt0.c0 COLLATE BINARY THEN '336780496' END))) GROUP BY rt0.c1, rt0.c2 UNION SELECT rt0.c1, rt0.c2 FROM rt0, vt1 WHERE (((CASE ((rt0.c2)*(vt1.c0))  WHEN rt0.c0 COLLATE BINARY THEN '336780496' END) ISNULL)) GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM rt0, vt1 GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c0, vt1.c0 FROM rt0, vt1 GROUP BY rt0.c0, vt1.c0;
SELECT rt0.c0, vt1.c0 FROM rt0, vt1 GROUP BY rt0.c0, vt1.c0 HAVING '1423270486' UNION ALL SELECT rt0.c0, vt1.c0 FROM rt0, vt1 GROUP BY rt0.c0, vt1.c0 HAVING (NOT ('1423270486')) UNION ALL SELECT ALL rt0.c0, vt1.c0 FROM rt0, vt1 GROUP BY rt0.c0, vt1.c0 HAVING (('1423270486') ISNULL);
SELECT rt0.c0, vt1.c0 FROM rt0, vt1 GROUP BY rt0.c0, vt1.c0;
SELECT rt0.c0, vt1.c0 FROM rt0, vt1 GROUP BY rt0.c0, vt1.c0 HAVING '1423270486' UNION ALL SELECT rt0.c0, vt1.c0 FROM rt0, vt1 GROUP BY rt0.c0, vt1.c0 HAVING (NOT ('1423270486')) UNION ALL SELECT ALL rt0.c0, vt1.c0 FROM rt0, vt1 GROUP BY rt0.c0, vt1.c0 HAVING (('1423270486') ISNULL);
SELECT rt0.c0, vt1.c0 FROM rt0, vt1 GROUP BY rt0.c0, vt1.c0;
SELECT ALL * FROM vt1, rt0;
SELECT * FROM vt1, rt0 WHERE ((- (((vt1.c0) NOTNULL)))) UNION ALL SELECT ALL * FROM vt1, rt0 WHERE ((NOT ((- (((vt1.c0) NOTNULL)))))) UNION ALL SELECT ALL * FROM vt1, rt0 WHERE ((((- (((vt1.c0) NOTNULL)))) ISNULL));
SELECT ALL * FROM vt1, rt0;
SELECT DISTINCT * FROM vt1 NATURAL JOIN rt0;
SELECT DISTINCT * FROM vt1 NATURAL JOIN rt0 WHERE (NULL) UNION SELECT DISTINCT * FROM vt1 NATURAL JOIN rt0 WHERE ((NOT (NULL))) UNION SELECT DISTINCT * FROM vt1 NATURAL JOIN rt0 WHERE (((NULL) ISNULL));
SELECT DISTINCT * FROM vt1 NATURAL JOIN rt0;
SELECT rt0.c1, rt0.c0, rt0.c2, vt1.c0 FROM vt1, rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2, vt1.c0;
SELECT rt0.c1, rt0.c0, rt0.c2, vt1.c0 FROM vt1, rt0 WHERE ('384917248') GROUP BY rt0.c1, rt0.c0, rt0.c2, vt1.c0 UNION SELECT rt0.c1, rt0.c0, rt0.c2, vt1.c0 FROM vt1, rt0 WHERE ((NOT ('384917248'))) GROUP BY rt0.c1, rt0.c0, rt0.c2, vt1.c0 UNION SELECT rt0.c1, rt0.c0, rt0.c2, vt1.c0 FROM vt1, rt0 WHERE ((('384917248') ISNULL)) GROUP BY rt0.c1, rt0.c0, rt0.c2, vt1.c0;
SELECT rt0.c1, rt0.c0, rt0.c2, vt1.c0 FROM vt1, rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2, vt1.c0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM vt1 FULL OUTER JOIN rt0 ON TRIM(((((((((rt0.c0)AND(vt1.c0)))OR(rt0.c2)))OR(vt1.c0)))AND(NULL)), CAST(vt1.c0 AS NUMERIC)) GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM vt1 FULL OUTER JOIN rt0 ON TRIM(((((((((rt0.c0)AND(vt1.c0)))OR(rt0.c2)))OR(vt1.c0)))AND(NULL)), CAST(vt1.c0 AS NUMERIC)) GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING MAX(((rt0.c1) IS FALSE)) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM vt1 FULL OUTER JOIN rt0 ON TRIM(((((((((rt0.c0)AND(vt1.c0)))OR(rt0.c2)))OR(vt1.c0)))AND(NULL)), CAST(vt1.c0 AS NUMERIC)) GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING (NOT (MAX(((rt0.c1) IS FALSE)))) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM vt1 FULL OUTER JOIN rt0 ON TRIM(((((((((rt0.c0)AND(vt1.c0)))OR(rt0.c2)))OR(vt1.c0)))AND(NULL)), CAST(vt1.c0 AS NUMERIC)) GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING ((MAX(((rt0.c1) IS FALSE))) ISNULL);
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM vt1 FULL OUTER JOIN rt0 ON TRIM(((((((((rt0.c0)AND(vt1.c0)))OR(rt0.c2)))OR(vt1.c0)))AND(NULL)), CAST(vt1.c0 AS NUMERIC)) GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM vt1 FULL OUTER JOIN rt0 ON TRIM(((((((((rt0.c0)AND(vt1.c0)))OR(rt0.c2)))OR(vt1.c0)))AND(NULL)), CAST(vt1.c0 AS NUMERIC)) GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING MAX(((rt0.c1) IS FALSE)) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM vt1 FULL OUTER JOIN rt0 ON TRIM(((((((((rt0.c0)AND(vt1.c0)))OR(rt0.c2)))OR(vt1.c0)))AND(NULL)), CAST(vt1.c0 AS NUMERIC)) GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING (NOT (MAX(((rt0.c1) IS FALSE)))) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM vt1 FULL OUTER JOIN rt0 ON TRIM(((((((((rt0.c0)AND(vt1.c0)))OR(rt0.c2)))OR(vt1.c0)))AND(NULL)), CAST(vt1.c0 AS NUMERIC)) GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING ((MAX(((rt0.c1) IS FALSE))) ISNULL);
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM vt1 FULL OUTER JOIN rt0 ON TRIM(((((((((rt0.c0)AND(vt1.c0)))OR(rt0.c2)))OR(vt1.c0)))AND(NULL)), CAST(vt1.c0 AS NUMERIC)) GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT ALL rt0.c2, vt1.c0, rt0.c0, rt0.c1 FROM vt1, rt0;
SELECT ALL rt0.c2, vt1.c0, rt0.c0, rt0.c1 FROM vt1, rt0 WHERE ((((+ (rt0.c1))) ISNULL)) UNION ALL SELECT rt0.c2, vt1.c0, rt0.c0, rt0.c1 FROM vt1, rt0 WHERE ((NOT ((((+ (rt0.c1))) ISNULL)))) UNION ALL SELECT rt0.c2, vt1.c0, rt0.c0, rt0.c1 FROM vt1, rt0 WHERE ((((((+ (rt0.c1))) ISNULL)) ISNULL));
SELECT ALL rt0.c2, vt1.c0, rt0.c0, rt0.c1 FROM vt1, rt0;
SELECT DISTINCT rt0.c2, rt0.c1, vt1.c0 FROM vt1 LEFT OUTER JOIN rt0 ON ((rt0.c0) IS FALSE) COLLATE RTRIM;
SELECT DISTINCT rt0.c2, rt0.c1, vt1.c0 FROM vt1 LEFT OUTER JOIN rt0 ON ((rt0.c0) IS FALSE) COLLATE RTRIM WHERE (HEX(DISTINCT rt0.c0 COLLATE BINARY)) UNION SELECT DISTINCT rt0.c2, rt0.c1, vt1.c0 FROM vt1 LEFT OUTER JOIN rt0 ON ((rt0.c0) IS FALSE) COLLATE RTRIM WHERE ((NOT (HEX(DISTINCT rt0.c0 COLLATE BINARY)))) UNION SELECT DISTINCT rt0.c2, rt0.c1, vt1.c0 FROM vt1 LEFT OUTER JOIN rt0 ON ((rt0.c0) IS FALSE) COLLATE RTRIM WHERE (((HEX(DISTINCT rt0.c0 COLLATE BINARY)) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c1, vt1.c0 FROM vt1 LEFT OUTER JOIN rt0 ON ((rt0.c0) IS FALSE) COLLATE RTRIM;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 WHERE (JULIANDAY(((rt0.c0)||(rt0.c2)), (NULL IN ()), rt0.c1, CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c2 END, ((((rt0.c0)AND(rt0.c0)))OR(rt0.c2)))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0 WHERE ((NOT (JULIANDAY(((rt0.c0)||(rt0.c2)), (NULL IN ()), rt0.c1, CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c2 END, ((((rt0.c0)AND(rt0.c0)))OR(rt0.c2)))))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0 WHERE (((JULIANDAY(((rt0.c0)||(rt0.c2)), (NULL IN ()), rt0.c1, CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c2 END, ((((rt0.c0)AND(rt0.c0)))OR(rt0.c2)))) ISNULL)) GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT vt1.c0 FROM rt0, vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM rt0, vt1 GROUP BY vt1.c0 HAVING '-1635607612' UNION ALL SELECT vt1.c0 FROM rt0, vt1 GROUP BY vt1.c0 HAVING (NOT ('-1635607612')) UNION ALL SELECT vt1.c0 FROM rt0, vt1 GROUP BY vt1.c0 HAVING (('-1635607612') ISNULL);
SELECT vt1.c0 FROM rt0, vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM rt0, vt1 GROUP BY vt1.c0 HAVING '-1635607612' UNION ALL SELECT vt1.c0 FROM rt0, vt1 GROUP BY vt1.c0 HAVING (NOT ('-1635607612')) UNION ALL SELECT vt1.c0 FROM rt0, vt1 GROUP BY vt1.c0 HAVING (('-1635607612') ISNULL);
SELECT vt1.c0 FROM rt0, vt1 GROUP BY vt1.c0;
SELECT ALL rt0.c0, rt0.c1 FROM rt0;
SELECT rt0.c0, rt0.c1 FROM rt0 WHERE (TRIM(rt0.c0 COLLATE BINARY)) UNION ALL SELECT rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (TRIM(rt0.c0 COLLATE BINARY)))) UNION ALL SELECT rt0.c0, rt0.c1 FROM rt0 WHERE (((TRIM(rt0.c0 COLLATE BINARY)) ISNULL));
SELECT ALL rt0.c0, rt0.c1 FROM rt0;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE (NULL) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT (NULL))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((NULL) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((rt0.c1 IN (rt0.c0)) COLLATE NOCASE) GROUP BY rt0.c2, rt0.c1, rt0.c0 UNION SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT ((rt0.c1 IN (rt0.c0)) COLLATE NOCASE))) GROUP BY rt0.c2, rt0.c1, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((((rt0.c1 IN (rt0.c0)) COLLATE NOCASE) ISNULL)) GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM vt1 INNER JOIN rt0 ON ((((rt0.c0)%(rt0.c0))) IS TRUE) GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM vt1 INNER JOIN rt0 ON ((((rt0.c0)%(rt0.c0))) IS TRUE) GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING COUNT(*) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c0 FROM vt1 INNER JOIN rt0 ON ((((rt0.c0)%(rt0.c0))) IS TRUE) GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM vt1 INNER JOIN rt0 ON ((((rt0.c0)%(rt0.c0))) IS TRUE) GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c1, rt0.c2, rt0.c0 FROM vt1 INNER JOIN rt0 ON ((((rt0.c0)%(rt0.c0))) IS TRUE) GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM vt1 INNER JOIN rt0 ON ((((rt0.c0)%(rt0.c0))) IS TRUE) GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING COUNT(*) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c0 FROM vt1 INNER JOIN rt0 ON ((((rt0.c0)%(rt0.c0))) IS TRUE) GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM vt1 INNER JOIN rt0 ON ((((rt0.c0)%(rt0.c0))) IS TRUE) GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c1, rt0.c2, rt0.c0 FROM vt1 INNER JOIN rt0 ON ((((rt0.c0)%(rt0.c0))) IS TRUE) GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c1, rt0.c0, vt1.c0 FROM rt0 FULL OUTER JOIN vt1 ON (('793922580')<=(((rt0.c0) IS TRUE)));
SELECT ALL rt0.c2, rt0.c1, rt0.c0, vt1.c0 FROM rt0 FULL OUTER JOIN vt1 ON (('793922580')<=(((rt0.c0) IS TRUE))) WHERE (rt0.c0) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0, vt1.c0 FROM rt0 FULL OUTER JOIN vt1 ON (('793922580')<=(((rt0.c0) IS TRUE))) WHERE ((NOT (rt0.c0))) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0, vt1.c0 FROM rt0 FULL OUTER JOIN vt1 ON (('793922580')<=(((rt0.c0) IS TRUE))) WHERE (((rt0.c0) ISNULL));
SELECT rt0.c2, rt0.c1, rt0.c0, vt1.c0 FROM rt0 FULL OUTER JOIN vt1 ON (('793922580')<=(((rt0.c0) IS TRUE)));
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((((rt0.c1) IS FALSE))IS(CASE WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 END))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((((rt0.c1) IS FALSE))IS(CASE WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 END))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((((rt0.c1) IS FALSE))IS(CASE WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 END))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c2, vt1.c0, rt0.c1, rt0.c0 FROM vt1, rt0 GROUP BY rt0.c2, vt1.c0, rt0.c1, rt0.c0;
SELECT ALL rt0.c2, vt1.c0, rt0.c1, rt0.c0 FROM vt1, rt0 WHERE (((vt1.c0 COLLATE BINARY)+(NULL))) GROUP BY rt0.c2, vt1.c0, rt0.c1, rt0.c0 UNION SELECT rt0.c2, vt1.c0, rt0.c1, rt0.c0 FROM vt1, rt0 WHERE ((NOT (((vt1.c0 COLLATE BINARY)+(NULL))))) GROUP BY rt0.c2, vt1.c0, rt0.c1, rt0.c0 UNION SELECT ALL rt0.c2, vt1.c0, rt0.c1, rt0.c0 FROM vt1, rt0 WHERE (((((vt1.c0 COLLATE BINARY)+(NULL))) ISNULL)) GROUP BY rt0.c2, vt1.c0, rt0.c1, rt0.c0;
SELECT rt0.c2, vt1.c0, rt0.c1, rt0.c0 FROM vt1, rt0 GROUP BY rt0.c2, vt1.c0, rt0.c1, rt0.c0;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING CASE ((GROUP_CONCAT(GROUP_CONCAT(COUNT(*))))<=(AVG(AVG(MAX(rt0.c0)))))  WHEN MAX(rt0.c0) THEN COUNT(rt0.c0) WHEN COUNT(rt0.c2) THEN LIKELIHOOD(rt0.c1, 0.9316916266923044) WHEN COUNT(TOTAL(AVG(rt0.c2))) THEN MAX(TOTAL(rt0.c1)) ELSE MIN(x'') END UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING (NOT (CASE ((GROUP_CONCAT(GROUP_CONCAT(COUNT(*))))<=(AVG(AVG(MAX(rt0.c0)))))  WHEN MAX(rt0.c0) THEN COUNT(rt0.c0) WHEN COUNT(rt0.c2) THEN LIKELIHOOD(rt0.c1, 0.9316916266923044) WHEN COUNT(TOTAL(AVG(rt0.c2))) THEN MAX(TOTAL(rt0.c1)) ELSE MIN(x'') END)) UNION ALL SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING ((CASE ((GROUP_CONCAT(GROUP_CONCAT(COUNT(*))))<=(AVG(AVG(MAX(rt0.c0)))))  WHEN MAX(rt0.c0) THEN COUNT(rt0.c0) WHEN COUNT(rt0.c2) THEN LIKELIHOOD(rt0.c1, 0.9316916266923044) WHEN COUNT(TOTAL(AVG(rt0.c2))) THEN MAX(TOTAL(rt0.c1)) ELSE MIN(x'') END) ISNULL);
SELECT * FROM vt1, rt0;
SELECT ALL * FROM vt1, rt0 WHERE ((((UPPER(NULL)))!=((((((((((rt0.c2)OR(rt0.c0)))OR(rt0.c0)))AND(rt0.c0)))OR(vt1.c0)))))) UNION ALL SELECT ALL * FROM vt1, rt0 WHERE ((NOT ((((UPPER(NULL)))<>((((((((((rt0.c2)OR(rt0.c0)))OR(rt0.c0)))AND(rt0.c0)))OR(vt1.c0)))))))) UNION ALL SELECT ALL * FROM vt1, rt0 WHERE ((((((UPPER(NULL)))<>((((((((((rt0.c2)OR(rt0.c0)))OR(rt0.c0)))AND(rt0.c0)))OR(vt1.c0)))))) ISNULL));
SELECT * FROM vt1, rt0;
SELECT DISTINCT rt0.c0, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c1 FROM rt0 WHERE (((rt0.c0 COLLATE RTRIM)<(x'e0ed'))) UNION SELECT DISTINCT rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (((rt0.c0 COLLATE RTRIM)<(x'e0ed'))))) UNION SELECT DISTINCT rt0.c0, rt0.c1 FROM rt0 WHERE (((((rt0.c0 COLLATE RTRIM)<(x'e0ed'))) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c1 FROM rt0;
SELECT rt0.c1, vt1.c0 FROM rt0, vt1 GROUP BY rt0.c1, vt1.c0;
SELECT ALL rt0.c1, vt1.c0 FROM rt0, vt1 WHERE (((((NULL IN ()), ((x'7a09') NOT BETWEEN (rt0.c0) AND (rt0.c2)), TRIM(DISTINCT rt0.c2, vt1.c0)))<(((('-31271744') NOTNULL), (vt1.c0 IN ()), rt0.c0)))) GROUP BY rt0.c1, vt1.c0 UNION SELECT ALL rt0.c1, vt1.c0 FROM rt0, vt1 WHERE ((NOT (((((NULL IN ()), ((x'7a09') NOT BETWEEN (rt0.c0) AND (rt0.c2)), TRIM(DISTINCT rt0.c2, vt1.c0)))<(((('-31271744') NOTNULL), (vt1.c0 IN ()), rt0.c0)))))) GROUP BY rt0.c1, vt1.c0 UNION SELECT rt0.c1, vt1.c0 FROM rt0, vt1 WHERE (((((((NULL IN ()), ((x'7a09') NOT BETWEEN (rt0.c0) AND (rt0.c2)), TRIM(DISTINCT rt0.c2, vt1.c0)))<(((('-31271744') NOTNULL), (vt1.c0 IN ()), rt0.c0)))) ISNULL)) GROUP BY rt0.c1, vt1.c0;
SELECT rt0.c1, vt1.c0 FROM rt0, vt1 GROUP BY rt0.c1, vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING IFNULL('-1586543144', TOTAL(-2.32885386E8)) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (IFNULL('-1586543144', TOTAL(-2.32885386E8)))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((IFNULL('-1586543144', TOTAL(-2.32885386E8))) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING IFNULL('-1586543144', TOTAL(-2.32885386E8)) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (IFNULL('-1586543144', TOTAL(-2.32885386E8)))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((IFNULL('-1586543144', TOTAL(-2.32885386E8))) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE (IFNULL(rt0.c2, rt0.c0) COLLATE NOCASE) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (IFNULL(rt0.c2, rt0.c0) COLLATE NOCASE))) UNION ALL SELECT * FROM rt0 WHERE (((IFNULL(rt0.c2, rt0.c0) COLLATE NOCASE) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT vt1.c0 FROM vt1 LEFT OUTER JOIN rt0 ON (((rt0.c1 IN ())) NOTNULL);
SELECT DISTINCT vt1.c0 FROM vt1 LEFT OUTER JOIN rt0 ON (((rt0.c1 IN ())) NOTNULL) WHERE (((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2)))IS(vt1.c0 COLLATE RTRIM))) UNION SELECT DISTINCT vt1.c0 FROM vt1 LEFT OUTER JOIN rt0 ON (((rt0.c1 IN ())) NOTNULL) WHERE ((NOT (((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2)))IS(vt1.c0 COLLATE RTRIM))))) UNION SELECT DISTINCT vt1.c0 FROM vt1 LEFT OUTER JOIN rt0 ON (((rt0.c1 IN ())) NOTNULL) WHERE (((((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2)))IS(vt1.c0 COLLATE RTRIM))) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1 LEFT OUTER JOIN rt0 ON (((rt0.c1 IN ())) NOTNULL);
SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 WHERE (((CAST(rt0.c0 AS REAL))LIKE(((rt0.c2)/(-4.13431327E8))))) GROUP BY rt0.c2, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (((CAST(rt0.c0 AS REAL))LIKE(((rt0.c2)/(-4.13431327E8))))))) GROUP BY rt0.c2, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c1 FROM rt0 WHERE (((((CAST(rt0.c0 AS REAL))LIKE(((rt0.c2)/(-4.13431327E8))))) ISNULL)) GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT vt1.c0 FROM vt1, rt0 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1, rt0 GROUP BY vt1.c0 HAVING COUNT(COUNT(*)) COLLATE NOCASE UNION ALL SELECT ALL vt1.c0 FROM vt1, rt0 GROUP BY vt1.c0 HAVING (NOT (COUNT(COUNT(*)) COLLATE NOCASE)) UNION ALL SELECT vt1.c0 FROM vt1, rt0 GROUP BY vt1.c0 HAVING ((COUNT(COUNT(*)) COLLATE NOCASE) ISNULL);
SELECT ALL * FROM vt1;
SELECT * FROM vt1 WHERE (CASE WHEN (~ (vt1.c0)) THEN ((((vt1.c0)OR(x'')))AND(vt1.c0)) ELSE (vt1.c0 IN ()) END) UNION ALL SELECT ALL * FROM vt1 WHERE ((NOT (CASE WHEN (~ (vt1.c0)) THEN ((((vt1.c0)OR(x'')))AND(vt1.c0)) ELSE (vt1.c0 IN ()) END))) UNION ALL SELECT ALL * FROM vt1 WHERE (((CASE WHEN (~ (vt1.c0)) THEN ((((vt1.c0)OR(x'')))AND(vt1.c0)) ELSE (vt1.c0 IN ()) END) ISNULL));
SELECT ALL * FROM vt1;
SELECT DISTINCT rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c2 FROM rt0 WHERE (((((rt0.c1, rt0.c1, rt0.c0, rt0.c0, rt0.c2)) NOT BETWEEN ((rt0.c2, x'', rt0.c2, rt0.c1, rt0.c1)) AND ((rt0.c2, rt0.c1, rt0.c2, rt0.c1, rt0.c1))) IN ())) UNION SELECT DISTINCT rt0.c2 FROM rt0 WHERE ((NOT (((((rt0.c1, rt0.c1, rt0.c0, rt0.c0, rt0.c2)) NOT BETWEEN ((rt0.c2, x'', rt0.c2, rt0.c1, rt0.c1)) AND ((rt0.c2, rt0.c1, rt0.c2, rt0.c1, rt0.c1))) IN ())))) UNION SELECT DISTINCT rt0.c2 FROM rt0 WHERE (((((((rt0.c1, rt0.c1, rt0.c0, rt0.c0, rt0.c2)) NOT BETWEEN ((rt0.c2, x'', rt0.c2, rt0.c1, rt0.c1)) AND ((rt0.c2, rt0.c1, rt0.c2, rt0.c1, rt0.c1))) IN ())) ISNULL));
SELECT DISTINCT rt0.c2 FROM rt0;
SELECT rt0.c1, rt0.c2 FROM rt0, vt1 GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM rt0, vt1 WHERE (PRINTF(((rt0.c1) NOTNULL), ((rt0.c1) IS FALSE), ((rt0.c1)<>(rt0.c2)))) GROUP BY rt0.c1, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c2 FROM rt0, vt1 WHERE ((NOT (PRINTF(((rt0.c1) NOTNULL), ((rt0.c1) IS FALSE), ((rt0.c1)!=(rt0.c2)))))) GROUP BY rt0.c1, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c2 FROM rt0, vt1 WHERE (((PRINTF(((rt0.c1) NOTNULL), ((rt0.c1) IS FALSE), ((rt0.c1)<>(rt0.c2)))) ISNULL)) GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c1, rt0.c2 FROM rt0, vt1 GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0, vt1 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0, vt1 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING CAST(((vt1.c0) BETWEEN (GROUP_CONCAT(rt0.c0)) AND (rt0.c0)) AS NUMERIC) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0, vt1 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING (NOT (CAST(((vt1.c0) BETWEEN (GROUP_CONCAT(rt0.c0)) AND (rt0.c0)) AS NUMERIC))) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0, vt1 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING ((CAST(((vt1.c0) BETWEEN (GROUP_CONCAT(rt0.c0)) AND (rt0.c0)) AS NUMERIC)) ISNULL);
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0, vt1 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0, vt1 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING CAST(((vt1.c0) BETWEEN (GROUP_CONCAT(rt0.c0)) AND (rt0.c0)) AS NUMERIC) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0, vt1 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING (NOT (CAST(((vt1.c0) BETWEEN (GROUP_CONCAT(rt0.c0)) AND (rt0.c0)) AS NUMERIC))) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0, vt1 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING ((CAST(((vt1.c0) BETWEEN (GROUP_CONCAT(rt0.c0)) AND (rt0.c0)) AS NUMERIC)) ISNULL);
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0, vt1 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE (((((((((UPPER(rt0.c0))AND(rt0.c1)))AND(rt0.c1 COLLATE BINARY)))AND(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c1)))))OR(CASE WHEN rt0.c2 THEN rt0.c2 END))) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (((((((((UPPER(rt0.c0))AND(rt0.c1)))AND(rt0.c1 COLLATE BINARY)))AND(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c1)))))OR(CASE WHEN rt0.c2 THEN rt0.c2 END))))) UNION ALL SELECT ALL * FROM rt0 WHERE (((((((((((UPPER(rt0.c0))AND(rt0.c1)))AND(rt0.c1 COLLATE BINARY)))AND(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c1)))))OR(CASE WHEN rt0.c2 THEN rt0.c2 END))) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((((x'1003') ISNULL) IN (CAST(vt1.c0 AS BLOB)))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT ((((x'1003') ISNULL) IN (CAST(vt1.c0 AS BLOB)))))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((((((x'1003') ISNULL) IN (CAST(vt1.c0 AS BLOB)))) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((json_type(rt0.c1) IN ())) GROUP BY rt0.c2, rt0.c0, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT ((json_type(rt0.c1) IN ())))) GROUP BY rt0.c2, rt0.c0, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((((json_type(rt0.c1) IN ())) ISNULL)) GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING COUNT(CASE WHEN vt1.c0 THEN GROUP_CONCAT('-316654351') END) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (COUNT(CASE WHEN vt1.c0 THEN GROUP_CONCAT('-316654351') END))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((COUNT(CASE WHEN vt1.c0 THEN GROUP_CONCAT('-316654351') END)) ISNULL);
SELECT ALL vt1.c0, rt0.c0 FROM rt0 NATURAL JOIN vt1;
SELECT vt1.c0, rt0.c0 FROM rt0 NATURAL JOIN vt1 WHERE (((vt1.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2)) COLLATE RTRIM) UNION ALL SELECT vt1.c0, rt0.c0 FROM rt0 NATURAL JOIN vt1 WHERE ((NOT (((vt1.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2)) COLLATE RTRIM))) UNION ALL SELECT ALL vt1.c0, rt0.c0 FROM rt0 NATURAL JOIN vt1 WHERE (((((vt1.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2)) COLLATE RTRIM) ISNULL));
SELECT ALL vt1.c0, rt0.c0 FROM rt0 NATURAL JOIN vt1;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE (CASE (~ (vt1.c0))  WHEN ((vt1.c0)<=(vt1.c0)) THEN ((vt1.c0)LIKE(vt1.c0)) ELSE CAST(vt1.c0 AS REAL) END) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT (CASE (~ (vt1.c0))  WHEN ((vt1.c0)<=(vt1.c0)) THEN ((vt1.c0)LIKE(vt1.c0)) ELSE CAST(vt1.c0 AS REAL) END))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((CASE (~ (vt1.c0))  WHEN ((vt1.c0)<=(vt1.c0)) THEN ((vt1.c0)LIKE(vt1.c0)) ELSE CAST(vt1.c0 AS REAL) END) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT rt0.c0 FROM vt1 RIGHT OUTER JOIN rt0 ON (((((rt0.c0)!=(rt0.c2)), ((vt1.c0)<(rt0.c1)), (rt0.c2 IN ())))<=((rt0.c2, vt1.c0 COLLATE RTRIM, ((rt0.c0)+(rt0.c1))))) GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM vt1 RIGHT OUTER JOIN rt0 ON (((((rt0.c0)<>(rt0.c2)), ((vt1.c0)<(rt0.c1)), (rt0.c2 IN ())))<=((rt0.c2, vt1.c0 COLLATE RTRIM, ((rt0.c0)+(rt0.c1))))) WHERE (x'44b5' COLLATE RTRIM) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM vt1 NOT INDEXED RIGHT OUTER JOIN rt0 ON (((((rt0.c0)<>(rt0.c2)), ((vt1.c0)<(rt0.c1)), (rt0.c2 IN ())))<=((rt0.c2, vt1.c0 COLLATE RTRIM, ((rt0.c0)+(rt0.c1))))) WHERE ((NOT (x'44b5' COLLATE RTRIM))) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM vt1 RIGHT OUTER JOIN rt0 ON (((((rt0.c0)!=(rt0.c2)), ((vt1.c0)<(rt0.c1)), (rt0.c2 IN ())))<=((rt0.c2, vt1.c0 COLLATE RTRIM, ((rt0.c0)+(rt0.c1))))) WHERE (((x'44b5' COLLATE RTRIM) ISNULL)) GROUP BY rt0.c0;
SELECT rt0.c0 FROM vt1 RIGHT OUTER JOIN rt0 ON (((((rt0.c0)!=(rt0.c2)), ((vt1.c0)<(rt0.c1)), (rt0.c2 IN ())))<=((rt0.c2, vt1.c0 COLLATE RTRIM, ((rt0.c0)+(rt0.c1))))) GROUP BY rt0.c0;
SELECT ALL rt0.c2, rt0.c1 FROM rt0, vt1 GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c2, rt0.c1 FROM rt0, vt1 GROUP BY rt0.c2, rt0.c1 HAVING (~ (CAST(COUNT(*) AS REAL))) UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM rt0, vt1 GROUP BY rt0.c2, rt0.c1 HAVING (NOT ((~ (CAST(COUNT(*) AS REAL))))) UNION ALL SELECT rt0.c2, rt0.c1 FROM rt0, vt1 GROUP BY rt0.c2, rt0.c1 HAVING (((~ (CAST(COUNT(*) AS REAL)))) ISNULL);
SELECT ALL rt0.c2, rt0.c1 FROM rt0, vt1 GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c2, rt0.c1 FROM rt0, vt1 GROUP BY rt0.c2, rt0.c1 HAVING (~ (CAST(COUNT(*) AS REAL))) UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM rt0, vt1 GROUP BY rt0.c2, rt0.c1 HAVING (NOT ((~ (CAST(COUNT(*) AS REAL))))) UNION ALL SELECT rt0.c2, rt0.c1 FROM rt0, vt1 GROUP BY rt0.c2, rt0.c1 HAVING (((~ (CAST(COUNT(*) AS REAL)))) ISNULL);
SELECT ALL rt0.c2, rt0.c1 FROM rt0, vt1 GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c2, rt0.c1 FROM rt0;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 WHERE (((rt0.c0)|(((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c1))))) UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (((rt0.c0)|(((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c1))))))) UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM rt0 WHERE (((((rt0.c0)|(((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c1))))) ISNULL));
SELECT rt0.c2, rt0.c1 FROM rt0;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (CAST(CAST(vt1.c0 AS INTEGER) AS INTEGER)) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (CAST(CAST(vt1.c0 AS INTEGER) AS INTEGER)))) UNION SELECT DISTINCT * FROM vt1 WHERE (((CAST(CAST(vt1.c0 AS INTEGER) AS INTEGER)) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 WHERE (CASE WHEN rt0.c0 THEN IFNULL(rt0.c0, rt0.c0) END) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0 WHERE ((NOT (CASE WHEN rt0.c0 THEN IFNULL(rt0.c0, rt0.c0) END))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0 WHERE (((CASE WHEN rt0.c0 THEN IFNULL(rt0.c0, rt0.c0) END) ISNULL)) GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT vt1.c0, rt0.c1, rt0.c0, rt0.c2 FROM rt0, vt1 GROUP BY vt1.c0, rt0.c1, rt0.c0, rt0.c2;
SELECT vt1.c0, rt0.c1, rt0.c0, rt0.c2 FROM rt0, vt1 GROUP BY vt1.c0, rt0.c1, rt0.c0, rt0.c2 HAVING vt1.c0 COLLATE RTRIM UNION ALL SELECT ALL vt1.c0, rt0.c1, rt0.c0, rt0.c2 FROM rt0 NOT INDEXED, vt1 GROUP BY vt1.c0, rt0.c1, rt0.c0, rt0.c2 HAVING (NOT (vt1.c0 COLLATE RTRIM)) UNION ALL SELECT ALL vt1.c0, rt0.c1, rt0.c0, rt0.c2 FROM rt0, vt1 GROUP BY vt1.c0, rt0.c1, rt0.c0, rt0.c2 HAVING ((vt1.c0 COLLATE RTRIM) ISNULL);
SELECT vt1.c0, rt0.c1, rt0.c0, rt0.c2 FROM rt0, vt1 GROUP BY vt1.c0, rt0.c1, rt0.c0, rt0.c2;
SELECT vt1.c0, rt0.c1, rt0.c0, rt0.c2 FROM rt0, vt1 GROUP BY vt1.c0, rt0.c1, rt0.c0, rt0.c2 HAVING vt1.c0 COLLATE RTRIM UNION ALL SELECT ALL vt1.c0, rt0.c1, rt0.c0, rt0.c2 FROM rt0 NOT INDEXED, vt1 GROUP BY vt1.c0, rt0.c1, rt0.c0, rt0.c2 HAVING (NOT (vt1.c0 COLLATE RTRIM)) UNION ALL SELECT ALL vt1.c0, rt0.c1, rt0.c0, rt0.c2 FROM rt0, vt1 GROUP BY vt1.c0, rt0.c1, rt0.c0, rt0.c2 HAVING ((vt1.c0 COLLATE RTRIM) ISNULL);
SELECT vt1.c0, rt0.c1, rt0.c0, rt0.c2 FROM rt0, vt1 GROUP BY vt1.c0, rt0.c1, rt0.c0, rt0.c2;
SELECT ALL vt1.c0 FROM vt1;
SELECT vt1.c0 FROM vt1 NOT INDEXED WHERE ((((((((((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))))OR((('ꎹpm') IS TRUE))))AND(CAST(vt1.c0 AS NUMERIC))))OR(CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)))AND(((vt1.c0)OR(0xffffffffd39d31bc))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT ((((((((((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))))OR((('ꎹpm') IS TRUE))))AND(CAST(vt1.c0 AS NUMERIC))))OR(CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)))AND(((vt1.c0)OR(0Xffffffffd39d31bc))))))) UNION ALL SELECT vt1.c0 FROM vt1 WHERE ((((((((((((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))))OR((('ꎹpm') IS TRUE))))AND(CAST(vt1.c0 AS NUMERIC))))OR(CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)))AND(((vt1.c0)OR(0Xffffffffd39d31bc))))) ISNULL));
SELECT ALL vt1.c0 FROM vt1;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 NOT INDEXED WHERE ((((CASE rt0.c0  WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 END))==((CAST(x'' AS NUMERIC))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((((CASE rt0.c0  WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 END))=((CAST(x'' AS NUMERIC))))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((((CASE rt0.c0  WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 END))=((CAST(x'' AS NUMERIC))))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT ((NOT (vt1.c0))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT ((NOT ((NOT (vt1.c0))))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((((NOT ((NOT (vt1.c0))))) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0, vt1.c0 FROM rt0, vt1 GROUP BY rt0.c1, rt0.c2, rt0.c0, vt1.c0;
SELECT rt0.c1, rt0.c2, rt0.c0, vt1.c0 FROM rt0, vt1 GROUP BY rt0.c1, rt0.c2, rt0.c0, vt1.c0 HAVING GROUP_CONCAT(((vt1.c0) NOTNULL)) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0, vt1.c0 FROM rt0, vt1 GROUP BY rt0.c1, rt0.c2, rt0.c0, vt1.c0 HAVING (NOT (GROUP_CONCAT(((vt1.c0) NOTNULL)))) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0, vt1.c0 FROM rt0, vt1 GROUP BY rt0.c1, rt0.c2, rt0.c0, vt1.c0 HAVING ((GROUP_CONCAT(((vt1.c0) NOTNULL))) ISNULL);
SELECT ALL rt0.c1, rt0.c2, rt0.c0, vt1.c0 FROM rt0, vt1 GROUP BY rt0.c1, rt0.c2, rt0.c0, vt1.c0;
SELECT rt0.c1, rt0.c2, rt0.c0, vt1.c0 FROM rt0, vt1 GROUP BY rt0.c1, rt0.c2, rt0.c0, vt1.c0 HAVING GROUP_CONCAT(((vt1.c0) NOTNULL)) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0, vt1.c0 FROM rt0, vt1 GROUP BY rt0.c1, rt0.c2, rt0.c0, vt1.c0 HAVING (NOT (GROUP_CONCAT(((vt1.c0) NOTNULL)))) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0, vt1.c0 FROM rt0, vt1 GROUP BY rt0.c1, rt0.c2, rt0.c0, vt1.c0 HAVING ((GROUP_CONCAT(((vt1.c0) NOTNULL))) ISNULL);
SELECT ALL rt0.c1, rt0.c2, rt0.c0, vt1.c0 FROM rt0, vt1 GROUP BY rt0.c1, rt0.c2, rt0.c0, vt1.c0;
SELECT ALL rt0.c0, rt0.c2 FROM vt1, rt0;
SELECT rt0.c0, rt0.c2 FROM vt1, rt0 WHERE ((((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c0)))) BETWEEN (MIN('530463900', rt0.c2, rt0.c2, rt0.c0, rt0.c0, rt0.c2)) AND (vt1.c0 COLLATE BINARY))) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM vt1, rt0 WHERE ((NOT ((((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c0)))) BETWEEN (MIN('530463900', rt0.c2, rt0.c2, rt0.c0, rt0.c0, rt0.c2)) AND (vt1.c0 COLLATE BINARY))))) UNION ALL SELECT rt0.c0, rt0.c2 FROM vt1, rt0 WHERE ((((((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c0)))) BETWEEN (MIN('530463900', rt0.c2, rt0.c2, rt0.c0, rt0.c0, rt0.c2)) AND (vt1.c0 COLLATE BINARY))) ISNULL));
SELECT ALL rt0.c0, rt0.c2 FROM vt1, rt0;
SELECT DISTINCT rt0.c2, vt1.c0, rt0.c1 FROM vt1, rt0;
SELECT DISTINCT rt0.c2, vt1.c0, rt0.c1 FROM vt1, rt0 WHERE (((vt1.c0 COLLATE RTRIM)=(((rt0.c0)OR(rt0.c2))))) UNION SELECT DISTINCT rt0.c2, vt1.c0, rt0.c1 FROM vt1, rt0 WHERE ((NOT (((vt1.c0 COLLATE RTRIM)=(((rt0.c0)OR(rt0.c2))))))) UNION SELECT DISTINCT rt0.c2, vt1.c0, rt0.c1 FROM vt1, rt0 WHERE (((((vt1.c0 COLLATE RTRIM)=(((rt0.c0)OR(rt0.c2))))) ISNULL));
SELECT DISTINCT rt0.c2, vt1.c0, rt0.c1 FROM vt1, rt0;
SELECT vt1.c0 FROM rt0, vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM rt0, vt1 WHERE (CASE rt0.c1  WHEN (+ (rt0.c0)) THEN (((vt1.c0)) BETWEEN ((-744672836)) AND ((rt0.c0))) WHEN (~ (rt0.c2)) THEN rt0.c1 WHEN ((vt1.c0)<(rt0.c1)) THEN CASE WHEN vt1.c0 THEN rt0.c1 ELSE rt0.c2 END WHEN ((rt0.c2) BETWEEN (rt0.c1) AND (vt1.c0)) THEN x'9dec90df' WHEN ((((((((rt0.c1)AND(rt0.c2)))OR(rt0.c1)))OR(rt0.c2)))AND(rt0.c0)) THEN (('-2112336850') NOTNULL) END) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM rt0, vt1 WHERE ((NOT (CASE rt0.c1  WHEN (+ (rt0.c0)) THEN (((vt1.c0)) BETWEEN ((-744672836)) AND ((rt0.c0))) WHEN (~ (rt0.c2)) THEN rt0.c1 WHEN ((vt1.c0)<(rt0.c1)) THEN CASE WHEN vt1.c0 THEN rt0.c1 ELSE rt0.c2 END WHEN ((rt0.c2) BETWEEN (rt0.c1) AND (vt1.c0)) THEN x'9dec90df' WHEN ((((((((rt0.c1)AND(rt0.c2)))OR(rt0.c1)))OR(rt0.c2)))AND(rt0.c0)) THEN (('-2112336850') NOTNULL) END))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM rt0, vt1 WHERE (((CASE rt0.c1  WHEN (+ (rt0.c0)) THEN (((vt1.c0)) BETWEEN ((-744672836)) AND ((rt0.c0))) WHEN (~ (rt0.c2)) THEN rt0.c1 WHEN ((vt1.c0)<(rt0.c1)) THEN CASE WHEN vt1.c0 THEN rt0.c1 ELSE rt0.c2 END WHEN ((rt0.c2) BETWEEN (rt0.c1) AND (vt1.c0)) THEN x'9dec90df' WHEN ((((((((rt0.c1)AND(rt0.c2)))OR(rt0.c1)))OR(rt0.c2)))AND(rt0.c0)) THEN (('-2112336850') NOTNULL) END) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM rt0, vt1 GROUP BY vt1.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING ((((COUNT(*))OR(COUNT(*))))OR(MAX(COUNT(*)))) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING (NOT (((((COUNT(*))OR(COUNT(*))))OR(MAX(COUNT(*)))))) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING ((((((COUNT(*))OR(COUNT(*))))OR(MAX(COUNT(*))))) ISNULL);
SELECT ALL rt0.c0, rt0.c2, vt1.c0, rt0.c1 FROM vt1 CROSS JOIN rt0 ON CAST((- (vt1.c0)) AS REAL);
SELECT rt0.c0, rt0.c2, vt1.c0, rt0.c1 FROM vt1 CROSS JOIN rt0 ON CAST((- (vt1.c0)) AS REAL) WHERE (LIKELY('u''')) UNION ALL SELECT ALL rt0.c0, rt0.c2, vt1.c0, rt0.c1 FROM vt1 CROSS JOIN rt0 ON CAST((- (vt1.c0)) AS REAL) WHERE ((NOT (LIKELY('u''')))) UNION ALL SELECT ALL rt0.c0, rt0.c2, vt1.c0, rt0.c1 FROM vt1 CROSS JOIN rt0 ON CAST((- (vt1.c0)) AS REAL) WHERE (((LIKELY('u''')) ISNULL));
SELECT ALL rt0.c0, rt0.c2, vt1.c0, rt0.c1 FROM vt1 CROSS JOIN rt0 ON CAST((- (vt1.c0)) AS REAL);
SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1, vt1.c0 FROM rt0, vt1;
SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1, vt1.c0 FROM rt0, vt1 WHERE ((+ (rt0.c1)) COLLATE BINARY) UNION SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1, vt1.c0 FROM rt0, vt1 WHERE ((NOT ((+ (rt0.c1)) COLLATE BINARY))) UNION SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1, vt1.c0 FROM rt0, vt1 NOT INDEXED WHERE ((((+ (rt0.c1)) COLLATE BINARY) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1, vt1.c0 FROM rt0, vt1;
SELECT rt0.c1, rt0.c2, vt1.c0, rt0.c0 FROM vt1, rt0 GROUP BY rt0.c1, rt0.c2, vt1.c0, rt0.c0;
SELECT rt0.c1, rt0.c2, vt1.c0, rt0.c0 FROM vt1, rt0 WHERE ((((rt0.c0, vt1.c0, rt0.c0))<>((vt1.c0, rt0.c0, vt1.c0))) COLLATE NOCASE) GROUP BY rt0.c1, rt0.c2, vt1.c0, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c2, vt1.c0, rt0.c0 FROM vt1, rt0 WHERE ((NOT ((((rt0.c0, vt1.c0, rt0.c0))<>((vt1.c0, rt0.c0, vt1.c0))) COLLATE NOCASE))) GROUP BY rt0.c1, rt0.c2, vt1.c0, rt0.c0 UNION SELECT rt0.c1, rt0.c2, vt1.c0, rt0.c0 FROM vt1, rt0 WHERE ((((((rt0.c0, vt1.c0, rt0.c0))<>((vt1.c0, rt0.c0, vt1.c0))) COLLATE NOCASE) ISNULL)) GROUP BY rt0.c1, rt0.c2, vt1.c0, rt0.c0;
SELECT rt0.c1, rt0.c2, vt1.c0, rt0.c0 FROM vt1, rt0 GROUP BY rt0.c1, rt0.c2, vt1.c0, rt0.c0;
SELECT ALL vt1.c0 FROM rt0, vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM rt0, vt1 GROUP BY vt1.c0 HAVING CAST((((rt0.c0, GROUP_CONCAT(SUM(rt0.c0)), AVG(AVG(AVG(AVG(SUM(GROUP_CONCAT(SUM(rt0.c1)))))))))=((MAX(MAX(rt0.c1)), vt1.c0, GROUP_CONCAT(rt0.c2)))) AS REAL) UNION ALL SELECT ALL vt1.c0 FROM rt0, vt1 GROUP BY vt1.c0 HAVING (NOT (CAST((((rt0.c0, GROUP_CONCAT(SUM(rt0.c0)), AVG(AVG(AVG(AVG(SUM(GROUP_CONCAT(SUM(rt0.c1)))))))))=((MAX(MAX(rt0.c1)), vt1.c0, GROUP_CONCAT(rt0.c2)))) AS REAL))) UNION ALL SELECT ALL vt1.c0 FROM rt0, vt1 GROUP BY vt1.c0 HAVING ((CAST((((rt0.c0, GROUP_CONCAT(SUM(rt0.c0)), AVG(AVG(AVG(AVG(SUM(GROUP_CONCAT(SUM(rt0.c1)))))))))=((MAX(MAX(rt0.c1)), vt1.c0, GROUP_CONCAT(rt0.c2)))) AS REAL)) ISNULL);
SELECT ALL vt1.c0 FROM vt1;
SELECT ALL vt1.c0 FROM vt1 NOT INDEXED WHERE (x'') UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (x''))) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE (((x'') ISNULL));
SELECT ALL vt1.c0 FROM vt1;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE ((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN (((vt1.c0 IN ()), (vt1.c0 IN ()), ((vt1.c0) BETWEEN (vt1.c0) AND ('-753356053')))) AND ((((vt1.c0)<=(vt1.c0)), ((vt1.c0)*(vt1.c0)), vt1.c0)))) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT ((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN (((vt1.c0 IN ()), (vt1.c0 IN ()), ((vt1.c0) BETWEEN (vt1.c0) AND ('-753356053')))) AND ((((vt1.c0)<=(vt1.c0)), ((vt1.c0)*(vt1.c0)), vt1.c0)))))) UNION SELECT DISTINCT * FROM vt1 WHERE ((((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN (((vt1.c0 IN ()), (vt1.c0 IN ()), ((vt1.c0) BETWEEN (vt1.c0) AND ('-753356053')))) AND ((((vt1.c0)<=(vt1.c0)), ((vt1.c0)*(vt1.c0)), vt1.c0)))) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT vt1.c0, rt0.c2, rt0.c1 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c2, rt0.c1;
SELECT ALL vt1.c0, rt0.c2, rt0.c1 FROM vt1, rt0 WHERE (((((vt1.c0)>=(rt0.c0)))IS NOT(((rt0.c0) IS TRUE)))) GROUP BY vt1.c0, rt0.c2, rt0.c1 UNION SELECT vt1.c0, rt0.c2, rt0.c1 FROM vt1, rt0 WHERE ((NOT (((((vt1.c0)>=(rt0.c0)))IS NOT(((rt0.c0) IS TRUE)))))) GROUP BY vt1.c0, rt0.c2, rt0.c1 UNION SELECT vt1.c0, rt0.c2, rt0.c1 FROM vt1, rt0 WHERE (((((((vt1.c0)>=(rt0.c0)))IS NOT(((rt0.c0) IS TRUE)))) ISNULL)) GROUP BY vt1.c0, rt0.c2, rt0.c1;
SELECT vt1.c0, rt0.c2, rt0.c1 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((0.8111386555210984)IS NOT(MIN(COUNT(*)))) UNION ALL SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT (((0.8111386555210984)IS NOT(MIN(COUNT(*)))))) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((((0.8111386555210984)IS NOT(MIN(COUNT(*))))) ISNULL);
SELECT * FROM vt1 NOT INDEXED, rt0;
SELECT * FROM vt1, rt0 WHERE (((rt0.c1 COLLATE NOCASE) NOT BETWEEN (((((rt0.c1)OR(rt0.c1)))OR(rt0.c1))) AND (NULL))) UNION ALL SELECT * FROM vt1, rt0 WHERE ((NOT (((rt0.c1 COLLATE NOCASE) NOT BETWEEN (((((rt0.c1)OR(rt0.c1)))OR(rt0.c1))) AND (NULL))))) UNION ALL SELECT * FROM vt1, rt0 WHERE (((((rt0.c1 COLLATE NOCASE) NOT BETWEEN (((((rt0.c1)OR(rt0.c1)))OR(rt0.c1))) AND (NULL))) ISNULL));
SELECT * FROM vt1 NOT INDEXED, rt0;
SELECT DISTINCT * FROM vt1, rt0;
SELECT DISTINCT * FROM vt1, rt0 WHERE (CAST(0.3533008635018493 AS REAL)) UNION SELECT DISTINCT * FROM vt1, rt0 WHERE ((NOT (CAST(0.3533008635018493 AS REAL)))) UNION SELECT DISTINCT * FROM vt1, rt0 WHERE (((CAST(0.3533008635018493 AS REAL)) ISNULL));
SELECT DISTINCT * FROM vt1, rt0;
SELECT rt0.c2, rt0.c1 FROM vt1, rt0 GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM vt1, rt0 WHERE ((NOT (rt0.c1))) GROUP BY rt0.c2, rt0.c1 UNION SELECT rt0.c2, rt0.c1 FROM vt1, rt0 WHERE ((NOT ((NOT (rt0.c1))))) GROUP BY rt0.c2, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c1 FROM vt1, rt0 WHERE ((((NOT (rt0.c1))) ISNULL)) GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c2, rt0.c1 FROM vt1, rt0 GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING AVG(MAX(rt0.c0)) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING (NOT (AVG(MAX(rt0.c0)))) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING ((AVG(MAX(rt0.c0))) ISNULL);
SELECT vt1.c0 FROM vt1;
SELECT ALL vt1.c0 FROM vt1 WHERE (CASE WHEN ((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)) THEN CAST(vt1.c0 AS BLOB) ELSE ((vt1.c0)&(vt1.c0)) END) UNION ALL SELECT vt1.c0 FROM vt1 WHERE ((NOT (CASE WHEN ((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)) THEN CAST(vt1.c0 AS BLOB) ELSE ((vt1.c0)&(vt1.c0)) END))) UNION ALL SELECT vt1.c0 FROM vt1 WHERE (((CASE WHEN ((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)) THEN CAST(vt1.c0 AS BLOB) ELSE ((vt1.c0)&(vt1.c0)) END) ISNULL));
SELECT vt1.c0 FROM vt1;
SELECT DISTINCT * FROM rt0, vt1;
SELECT DISTINCT * FROM rt0, vt1 WHERE (((((((rt0.c2, NULL, rt0.c2)) NOT BETWEEN ((rt0.c1, rt0.c1, rt0.c2)) AND ((rt0.c1, rt0.c1, vt1.c0)))))<((((rt0.c1)||(rt0.c2)))))) UNION SELECT DISTINCT * FROM rt0, vt1 WHERE ((NOT (((((((rt0.c2, NULL, rt0.c2)) NOT BETWEEN ((rt0.c1, rt0.c1, rt0.c2)) AND ((rt0.c1, rt0.c1, vt1.c0)))))<((((rt0.c1)||(rt0.c2)))))))) UNION SELECT DISTINCT * FROM rt0, vt1 WHERE (((((((((rt0.c2, NULL, rt0.c2)) NOT BETWEEN ((rt0.c1, rt0.c1, rt0.c2)) AND ((rt0.c1, rt0.c1, vt1.c0)))))<((((rt0.c1)||(rt0.c2)))))) ISNULL));
SELECT DISTINCT * FROM rt0, vt1;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0, vt1 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0, vt1 WHERE (CASE WHEN UPPER(rt0.c2) THEN ((rt0.c0)<>(rt0.c2)) WHEN rt0.c1 COLLATE BINARY THEN COALESCE(DISTINCT vt1.c0, rt0.c0, vt1.c0, rt0.c2) WHEN ((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c1)) THEN CASE WHEN 0.11180369791585221 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c2 END ELSE ((vt1.c0)>>(rt0.c2)) END) GROUP BY rt0.c2, rt0.c0, rt0.c1 UNION SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0, vt1 WHERE ((NOT (CASE WHEN UPPER(rt0.c2) THEN ((rt0.c0)<>(rt0.c2)) WHEN rt0.c1 COLLATE BINARY THEN COALESCE(DISTINCT vt1.c0, rt0.c0, vt1.c0, rt0.c2) WHEN ((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c1)) THEN CASE WHEN 0.11180369791585221 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c2 END ELSE ((vt1.c0)>>(rt0.c2)) END))) GROUP BY rt0.c2, rt0.c0, rt0.c1 UNION SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0, vt1 WHERE (((CASE WHEN UPPER(rt0.c2) THEN ((rt0.c0)<>(rt0.c2)) WHEN rt0.c1 COLLATE BINARY THEN COALESCE(DISTINCT vt1.c0, rt0.c0, vt1.c0, rt0.c2) WHEN ((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c1)) THEN CASE WHEN 0.11180369791585221 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c2 END ELSE ((vt1.c0)>>(rt0.c2)) END) ISNULL)) GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0, vt1 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING GROUP_CONCAT(CAST(MIN(rt0.c0) AS TEXT)) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING (NOT (GROUP_CONCAT(CAST(MIN(rt0.c0) AS TEXT)))) UNION ALL SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING ((GROUP_CONCAT(CAST(MIN(rt0.c0) AS TEXT))) ISNULL);
SELECT * FROM vt1, rt0;
SELECT ALL * FROM vt1, rt0 WHERE (CAST(rt0.c0 AS TEXT) COLLATE RTRIM) UNION ALL SELECT * FROM vt1, rt0 WHERE ((NOT (CAST(rt0.c0 AS TEXT) COLLATE RTRIM))) UNION ALL SELECT * FROM vt1, rt0 WHERE (((CAST(rt0.c0 AS TEXT) COLLATE RTRIM) ISNULL));
SELECT * FROM vt1, rt0;
SELECT DISTINCT vt1.c0, rt0.c0 FROM rt0, vt1;
SELECT DISTINCT vt1.c0, rt0.c0 FROM rt0, vt1 WHERE (((((load_extension(rt0.c2, rt0.c1))AND(CAST(vt1.c0 AS INTEGER))))AND(rt0.c2 COLLATE RTRIM))) UNION SELECT DISTINCT vt1.c0, rt0.c0 FROM rt0, vt1 WHERE ((NOT (((((load_extension(rt0.c2, rt0.c1))AND(CAST(vt1.c0 AS INTEGER))))AND(rt0.c2 COLLATE RTRIM))))) UNION SELECT DISTINCT vt1.c0, rt0.c0 FROM rt0, vt1 WHERE (((((((load_extension(rt0.c2, rt0.c1))AND(CAST(vt1.c0 AS INTEGER))))AND(rt0.c2 COLLATE RTRIM))) ISNULL));
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 WHERE ((((((((rt0.c0)OR(rt0.c2)))AND(rt0.c2))))>=((-267781285)))) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM rt0 WHERE ((NOT ((((((((rt0.c0)OR(rt0.c2)))AND(rt0.c2))))>=((-267781285)))))) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM rt0 WHERE ((((((((((rt0.c0)OR(rt0.c2)))AND(rt0.c2))))>=((-267781285)))) ISNULL)) GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((((vt1.c0) ISNULL))&(COUNT(COUNT(vt1.c0)))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (((((vt1.c0) ISNULL))&(COUNT(COUNT(vt1.c0)))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((((((vt1.c0) ISNULL))&(COUNT(COUNT(vt1.c0))))) ISNULL);
SELECT rt0.c2, rt0.c0, vt1.c0 FROM rt0 LEFT OUTER JOIN vt1 ON (((~ (rt0.c0))) BETWEEN (DATETIME(x'd680', rt0.c2, rt0.c0)) AND (((((x'')OR(rt0.c2)))OR(rt0.c0))));
SELECT ALL rt0.c2, rt0.c0, vt1.c0 FROM rt0 LEFT OUTER JOIN vt1 ON (((~ (rt0.c0))) BETWEEN (DATETIME(x'd680', rt0.c2, rt0.c0)) AND (((((x'')OR(rt0.c2)))OR(rt0.c0)))) WHERE ('-1635607612' COLLATE RTRIM) UNION ALL SELECT rt0.c2, rt0.c0, vt1.c0 FROM rt0 LEFT OUTER JOIN vt1 ON (((~ (rt0.c0))) BETWEEN (DATETIME(x'd680', rt0.c2, rt0.c0)) AND (((((x'')OR(rt0.c2)))OR(rt0.c0)))) WHERE ((NOT ('-1635607612' COLLATE RTRIM))) UNION ALL SELECT ALL rt0.c2, rt0.c0, vt1.c0 FROM rt0 LEFT OUTER JOIN vt1 ON (((~ (rt0.c0))) BETWEEN (DATETIME(x'd680', rt0.c2, rt0.c0)) AND (((((x'')OR(rt0.c2)))OR(rt0.c0)))) WHERE ((('-1635607612' COLLATE RTRIM) ISNULL));
SELECT rt0.c2, rt0.c0, vt1.c0 FROM rt0 LEFT OUTER JOIN vt1 ON (((~ (rt0.c0))) BETWEEN (DATETIME(x'd680', rt0.c2, rt0.c0)) AND (((((x'')OR(rt0.c2)))OR(rt0.c0))));
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((((rt0.c1, 0.664403676308398, rt0.c0)) NOT BETWEEN (((rt0.c1 IN ()), rt0.c1 COLLATE BINARY, rt0.c0)) AND ((((rt0.c2)GLOB(rt0.c1)), ((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1)), rt0.c0 COLLATE RTRIM)))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((((rt0.c1, 0.664403676308398, rt0.c0)) NOT BETWEEN (((rt0.c1 IN ()), rt0.c1 COLLATE BINARY, rt0.c0)) AND ((((rt0.c2)GLOB(rt0.c1)), ((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1)), rt0.c0 COLLATE RTRIM)))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((((rt0.c1, 0.664403676308398, rt0.c0)) NOT BETWEEN (((rt0.c1 IN ()), rt0.c1 COLLATE BINARY, rt0.c0)) AND ((((rt0.c2)GLOB(rt0.c1)), ((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1)), rt0.c0 COLLATE RTRIM)))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c0, rt0.c2, rt0.c1, vt1.c0 FROM rt0, vt1 GROUP BY rt0.c0, rt0.c2, rt0.c1, vt1.c0;
SELECT ALL rt0.c0, rt0.c2, rt0.c1, vt1.c0 FROM rt0, vt1 WHERE ((((rt0.c0)) NOT BETWEEN ((((x'') NOT BETWEEN (rt0.c2) AND (rt0.c0)))) AND (((('') NOT BETWEEN (rt0.c1) AND (rt0.c0)))))) GROUP BY rt0.c0, rt0.c2, rt0.c1, vt1.c0 UNION SELECT ALL rt0.c0, rt0.c2, rt0.c1, vt1.c0 FROM rt0, vt1 WHERE ((NOT ((((rt0.c0)) NOT BETWEEN ((((x'') NOT BETWEEN (rt0.c2) AND (rt0.c0)))) AND (((('') NOT BETWEEN (rt0.c1) AND (rt0.c0)))))))) GROUP BY rt0.c0, rt0.c2, rt0.c1, vt1.c0 UNION SELECT rt0.c0, rt0.c2, rt0.c1, vt1.c0 FROM rt0, vt1 WHERE ((((((rt0.c0)) NOT BETWEEN ((((x'') NOT BETWEEN (rt0.c2) AND (rt0.c0)))) AND (((('') NOT BETWEEN (rt0.c1) AND (rt0.c0)))))) ISNULL)) GROUP BY rt0.c0, rt0.c2, rt0.c1, vt1.c0;
SELECT rt0.c0, rt0.c2, rt0.c1, vt1.c0 FROM rt0, vt1 GROUP BY rt0.c0, rt0.c2, rt0.c1, vt1.c0;
SELECT ALL rt0.c0, rt0.c2, vt1.c0, rt0.c1 FROM vt1, rt0 GROUP BY rt0.c0, rt0.c2, vt1.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c2, vt1.c0, rt0.c1 FROM vt1, rt0 GROUP BY rt0.c0, rt0.c2, vt1.c0, rt0.c1 HAVING (COUNT(*) IN ()) UNION ALL SELECT rt0.c0, rt0.c2, vt1.c0, rt0.c1 FROM vt1, rt0 GROUP BY rt0.c0, rt0.c2, vt1.c0, rt0.c1 HAVING (NOT ((COUNT(*) IN ()))) UNION ALL SELECT rt0.c0, rt0.c2, vt1.c0, rt0.c1 FROM vt1, rt0 GROUP BY rt0.c0, rt0.c2, vt1.c0, rt0.c1 HAVING (((COUNT(*) IN ())) ISNULL);
SELECT ALL rt0.c0, rt0.c2, vt1.c0, rt0.c1 FROM vt1, rt0 GROUP BY rt0.c0, rt0.c2, vt1.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c2, vt1.c0, rt0.c1 FROM vt1, rt0 GROUP BY rt0.c0, rt0.c2, vt1.c0, rt0.c1 HAVING (COUNT(*) IN ()) UNION ALL SELECT rt0.c0, rt0.c2, vt1.c0, rt0.c1 FROM vt1, rt0 GROUP BY rt0.c0, rt0.c2, vt1.c0, rt0.c1 HAVING (NOT ((COUNT(*) IN ()))) UNION ALL SELECT rt0.c0, rt0.c2, vt1.c0, rt0.c1 FROM vt1, rt0 GROUP BY rt0.c0, rt0.c2, vt1.c0, rt0.c1 HAVING (((COUNT(*) IN ())) ISNULL);
SELECT ALL rt0.c0, rt0.c2, vt1.c0, rt0.c1 FROM vt1, rt0 GROUP BY rt0.c0, rt0.c2, vt1.c0, rt0.c1;
SELECT vt1.c0 FROM vt1;
SELECT ALL vt1.c0 FROM vt1 WHERE (((((vt1.c0)OR(((vt1.c0) IS TRUE))))OR(0.7426585261672959))) UNION ALL SELECT vt1.c0 FROM vt1 WHERE ((NOT (((((vt1.c0)OR(((vt1.c0) IS TRUE))))OR(0.7426585261672959))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE (((((((vt1.c0)OR(((vt1.c0) IS TRUE))))OR(0.7426585261672959))) ISNULL));
SELECT vt1.c0 FROM vt1;
SELECT DISTINCT * FROM rt0, vt1;
SELECT DISTINCT * FROM rt0, vt1 WHERE (x'6862') UNION SELECT DISTINCT * FROM rt0, vt1 WHERE ((NOT (x'6862'))) UNION SELECT DISTINCT * FROM rt0, vt1 WHERE (((x'6862') ISNULL));
SELECT DISTINCT * FROM rt0, vt1;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE (CASE ((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0))  WHEN ((vt1.c0) ISNULL) THEN NULLIF(DISTINCT vt1.c0, vt1.c0) END) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (CASE ((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0))  WHEN ((vt1.c0) ISNULL) THEN NULLIF(DISTINCT vt1.c0, vt1.c0) END))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE (((CASE ((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0))  WHEN ((vt1.c0) ISNULL) THEN NULLIF(DISTINCT vt1.c0, vt1.c0) END) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 CROSS JOIN vt1 ON (((~ (rt0.c2)))<((- (rt0.c2)))) GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 CROSS JOIN vt1 ON (((~ (rt0.c2)))<((- (rt0.c2)))) GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING (((COUNT(GROUP_CONCAT(GROUP_CONCAT(MIN(rt0.c2))))))>=((COUNT(MIN(SUM(rt0.c1)))))) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 CROSS JOIN vt1 ON (((~ (rt0.c2)))<((- (rt0.c2)))) GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING (NOT ((((COUNT(GROUP_CONCAT(GROUP_CONCAT(MIN(rt0.c2))))))>=((COUNT(MIN(SUM(rt0.c1)))))))) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 CROSS JOIN vt1 ON (((~ (rt0.c2)))<((- (rt0.c2)))) GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING (((((COUNT(GROUP_CONCAT(GROUP_CONCAT(MIN(rt0.c2))))))>=((COUNT(MIN(SUM(rt0.c1))))))) ISNULL);
SELECT ALL rt0.c1, rt0.c0, vt1.c0, rt0.c2 FROM vt1, rt0;
SELECT rt0.c1, rt0.c0, vt1.c0, rt0.c2 FROM vt1, rt0 WHERE (((((((((((((rt0.c0)AND(vt1.c0)))AND(rt0.c1)))AND(((rt0.c1) NOT BETWEEN (vt1.c0) AND (0.5527811039226248)))))AND(CAST(rt0.c0 AS BLOB))))OR(CASE WHEN rt0.c2 THEN rt0.c0 END)))AND((((rt0.c2)) BETWEEN ((0.24509357156881273)) AND ((rt0.c1)))))) UNION ALL SELECT ALL rt0.c1, rt0.c0, vt1.c0, rt0.c2 FROM vt1, rt0 WHERE ((NOT (((((((((((((rt0.c0)AND(vt1.c0)))AND(rt0.c1)))AND(((rt0.c1) NOT BETWEEN (vt1.c0) AND (0.5527811039226248)))))AND(CAST(rt0.c0 AS BLOB))))OR(CASE WHEN rt0.c2 THEN rt0.c0 END)))AND((((rt0.c2)) BETWEEN ((0.24509357156881273)) AND ((rt0.c1)))))))) UNION ALL SELECT ALL rt0.c1, rt0.c0, vt1.c0, rt0.c2 FROM vt1, rt0 WHERE (((((((((((((((rt0.c0)AND(vt1.c0)))AND(rt0.c1)))AND(((rt0.c1) NOT BETWEEN (vt1.c0) AND (0.5527811039226248)))))AND(CAST(rt0.c0 AS BLOB))))OR(CASE WHEN rt0.c2 THEN rt0.c0 END)))AND((((rt0.c2)) BETWEEN ((0.24509357156881273)) AND ((rt0.c1)))))) ISNULL));
SELECT ALL rt0.c1, rt0.c0, vt1.c0, rt0.c2 FROM vt1, rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((rt0.c0 COLLATE BINARY)GLOB(((rt0.c1) ISNULL)))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((rt0.c0 COLLATE BINARY)GLOB(((rt0.c1) ISNULL)))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((rt0.c0 COLLATE BINARY)GLOB(((rt0.c1) ISNULL)))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE (((CAST(vt1.c0 AS BLOB))||(CAST(vt1.c0 AS REAL)))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (((CAST(vt1.c0 AS BLOB))||(CAST(vt1.c0 AS REAL)))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE (((((CAST(vt1.c0 AS BLOB))||(CAST(vt1.c0 AS REAL)))) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT rt0.c2 FROM rt0 FULL OUTER JOIN vt1 ON ((CAST(rt0.c2 AS TEXT)) BETWEEN ((((rt0.c2))>((0.9243088572029818)))) AND (CASE rt0.c0  WHEN vt1.c0 THEN vt1.c0 END)) GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 FULL OUTER JOIN vt1 ON ((CAST(rt0.c2 AS TEXT)) BETWEEN ((((rt0.c2))>((0.9243088572029818)))) AND (CASE rt0.c0  WHEN vt1.c0 THEN vt1.c0 END)) GROUP BY rt0.c2 HAVING (((HEX(rt0.c0), ((rt0.c1) IS TRUE), CAST(COUNT(*) AS BLOB)))>((CAST(TOTAL(vt1.c0) AS BLOB), (TOTAL(rt0.c0) IN ()), (- (rt0.c2))))) UNION ALL SELECT rt0.c2 FROM rt0 FULL OUTER JOIN vt1 ON ((CAST(rt0.c2 AS TEXT)) BETWEEN ((((rt0.c2))>((0.9243088572029818)))) AND (CASE rt0.c0  WHEN vt1.c0 THEN vt1.c0 END)) GROUP BY rt0.c2 HAVING (NOT ((((HEX(rt0.c0), ((rt0.c1) IS TRUE), CAST(COUNT(*) AS BLOB)))>((CAST(TOTAL(vt1.c0) AS BLOB), (TOTAL(rt0.c0) IN ()), (- (rt0.c2))))))) UNION ALL SELECT ALL rt0.c2 FROM rt0 FULL OUTER JOIN vt1 ON ((CAST(rt0.c2 AS TEXT)) BETWEEN ((((rt0.c2))>((0.9243088572029818)))) AND (CASE rt0.c0  WHEN vt1.c0 THEN vt1.c0 END)) GROUP BY rt0.c2 HAVING (((((HEX(rt0.c0), ((rt0.c1) IS TRUE), CAST(COUNT(*) AS BLOB)))>((CAST(TOTAL(vt1.c0) AS BLOB), (TOTAL(rt0.c0) IN ()), (- (rt0.c2)))))) ISNULL);
SELECT rt0.c2 FROM rt0 FULL OUTER JOIN vt1 ON ((CAST(rt0.c2 AS TEXT)) BETWEEN ((((rt0.c2))>((0.9243088572029818)))) AND (CASE rt0.c0  WHEN vt1.c0 THEN vt1.c0 END)) GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 FULL OUTER JOIN vt1 ON ((CAST(rt0.c2 AS TEXT)) BETWEEN ((((rt0.c2))>((0.9243088572029818)))) AND (CASE rt0.c0  WHEN vt1.c0 THEN vt1.c0 END)) GROUP BY rt0.c2 HAVING (((HEX(rt0.c0), ((rt0.c1) IS TRUE), CAST(COUNT(*) AS BLOB)))>((CAST(TOTAL(vt1.c0) AS BLOB), (TOTAL(rt0.c0) IN ()), (- (rt0.c2))))) UNION ALL SELECT rt0.c2 FROM rt0 FULL OUTER JOIN vt1 ON ((CAST(rt0.c2 AS TEXT)) BETWEEN ((((rt0.c2))>((0.9243088572029818)))) AND (CASE rt0.c0  WHEN vt1.c0 THEN vt1.c0 END)) GROUP BY rt0.c2 HAVING (NOT ((((HEX(rt0.c0), ((rt0.c1) IS TRUE), CAST(COUNT(*) AS BLOB)))>((CAST(TOTAL(vt1.c0) AS BLOB), (TOTAL(rt0.c0) IN ()), (- (rt0.c2))))))) UNION ALL SELECT ALL rt0.c2 FROM rt0 FULL OUTER JOIN vt1 ON ((CAST(rt0.c2 AS TEXT)) BETWEEN ((((rt0.c2))>((0.9243088572029818)))) AND (CASE rt0.c0  WHEN vt1.c0 THEN vt1.c0 END)) GROUP BY rt0.c2 HAVING (((((HEX(rt0.c0), ((rt0.c1) IS TRUE), CAST(COUNT(*) AS BLOB)))>((CAST(TOTAL(vt1.c0) AS BLOB), (TOTAL(rt0.c0) IN ()), (- (rt0.c2)))))) ISNULL);
SELECT rt0.c2 FROM rt0 FULL OUTER JOIN vt1 ON ((CAST(rt0.c2 AS TEXT)) BETWEEN ((((rt0.c2))>((0.9243088572029818)))) AND (CASE rt0.c0  WHEN vt1.c0 THEN vt1.c0 END)) GROUP BY rt0.c2;
SELECT ALL * FROM vt1 NATURAL JOIN rt0;
SELECT ALL * FROM vt1 NATURAL JOIN rt0 WHERE (NULL) UNION ALL SELECT * FROM vt1 NATURAL JOIN rt0 WHERE ((NOT (NULL))) UNION ALL SELECT * FROM vt1 NATURAL JOIN rt0 WHERE (((NULL) ISNULL));
SELECT ALL * FROM vt1 NATURAL JOIN rt0;
SELECT DISTINCT * FROM rt0, vt1;
SELECT DISTINCT * FROM rt0, vt1 WHERE ((((LIKELIHOOD(rt0.c0, 0.04630533161278039)))==((rt0.c0)))) UNION SELECT DISTINCT * FROM rt0, vt1 WHERE ((NOT ((((LIKELIHOOD(rt0.c0, 0.04630533161278039)))=((rt0.c0)))))) UNION SELECT DISTINCT * FROM rt0, vt1 WHERE ((((((LIKELIHOOD(rt0.c0, 0.04630533161278039)))=((rt0.c0)))) ISNULL));
SELECT DISTINCT * FROM rt0, vt1;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 WHERE ((((((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1)))) BETWEEN ((((rt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c0)))) AND (CASE rt0.c0  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c0 END))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0 WHERE ((NOT ((((((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1)))) BETWEEN ((((rt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c0)))) AND (CASE rt0.c0  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c0 END))))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0 WHERE ((((((((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1)))) BETWEEN ((((rt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c0)))) AND (CASE rt0.c0  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c0 END))) ISNULL)) GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((MAX(x''))GLOB(LTRIM(COUNT(*)))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (((MAX(x''))GLOB(LTRIM(COUNT(*)))))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((((MAX(x''))GLOB(LTRIM(COUNT(*))))) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((MAX(x''))GLOB(LTRIM(COUNT(*)))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (((MAX(x''))GLOB(LTRIM(COUNT(*)))))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((((MAX(x''))GLOB(LTRIM(COUNT(*))))) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1;
SELECT vt1.c0 FROM vt1 WHERE (((((vt1.c0)>=(vt1.c0)))IS((('') BETWEEN (vt1.c0) AND (vt1.c0))))) UNION ALL SELECT vt1.c0 FROM vt1 WHERE ((NOT (((((vt1.c0)>=(vt1.c0)))IS((('') BETWEEN (vt1.c0) AND (vt1.c0))))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE (((((((vt1.c0)>=(vt1.c0)))IS((('') BETWEEN (vt1.c0) AND (vt1.c0))))) ISNULL));
SELECT vt1.c0 FROM vt1;
SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0 LEFT OUTER JOIN vt1 ON rt0.c0;
SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0 LEFT OUTER JOIN vt1 ON rt0.c0 WHERE ((+ (rt0.c2))) UNION SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0 LEFT OUTER JOIN vt1 ON rt0.c0 WHERE ((NOT ((+ (rt0.c2))))) UNION SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0 LEFT OUTER JOIN vt1 ON rt0.c0 WHERE ((((+ (rt0.c2))) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c2 FROM rt0 LEFT OUTER JOIN vt1 ON rt0.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE (((vt1.c0) IS TRUE)) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (((vt1.c0) IS TRUE)))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE (((((vt1.c0) IS TRUE)) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING (MAX(rt0.c2) IN ()) UNION ALL SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING (NOT ((MAX(rt0.c2) IN ()))) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING (((MAX(rt0.c2) IN ())) ISNULL);
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING (MAX(rt0.c2) IN ()) UNION ALL SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING (NOT ((MAX(rt0.c2) IN ()))) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2 HAVING (((MAX(rt0.c2) IN ())) ISNULL);
SELECT ALL rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2, vt1.c0 FROM vt1, rt0;
SELECT rt0.c0, rt0.c2, vt1.c0 FROM vt1, rt0 WHERE (rt0.c0) UNION ALL SELECT ALL rt0.c0, rt0.c2, vt1.c0 FROM vt1, rt0 WHERE ((NOT (rt0.c0))) UNION ALL SELECT ALL rt0.c0, rt0.c2, vt1.c0 FROM vt1, rt0 WHERE (((rt0.c0) ISNULL));
SELECT ALL rt0.c0, rt0.c2, vt1.c0 FROM vt1, rt0;
SELECT DISTINCT * FROM rt0 INNER JOIN vt1 ON (((vt1.c0 IN (rt0.c0, vt1.c0))) NOT BETWEEN (CASE WHEN rt0.c2 THEN rt0.c1 END) AND (CAST(rt0.c0 AS BLOB)));
SELECT DISTINCT * FROM rt0 INNER JOIN vt1 ON (((vt1.c0 IN (rt0.c0, vt1.c0))) NOT BETWEEN (CASE WHEN rt0.c2 THEN rt0.c1 END) AND (CAST(rt0.c0 AS BLOB))) WHERE (((CASE WHEN 'JwqY?~' THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c1 END) BETWEEN ((((rt0.c2))>((-1.586543144E9)))) AND (((vt1.c0) BETWEEN (-1302880959) AND (rt0.c0))))) UNION SELECT DISTINCT * FROM rt0 INNER JOIN vt1 ON (((vt1.c0 IN (rt0.c0, vt1.c0))) NOT BETWEEN (CASE WHEN rt0.c2 THEN rt0.c1 END) AND (CAST(rt0.c0 AS BLOB))) WHERE ((NOT (((CASE WHEN 'JwqY?~' THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c1 END) BETWEEN ((((rt0.c2))>((-1.586543144E9)))) AND (((vt1.c0) BETWEEN (-1302880959) AND (rt0.c0))))))) UNION SELECT DISTINCT * FROM rt0 INNER JOIN vt1 ON (((vt1.c0 IN (rt0.c0, vt1.c0))) NOT BETWEEN (CASE WHEN rt0.c2 THEN rt0.c1 END) AND (CAST(rt0.c0 AS BLOB))) WHERE (((((CASE WHEN 'JwqY?~' THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c1 END) BETWEEN ((((rt0.c2))>((-1.586543144E9)))) AND (((vt1.c0) BETWEEN (-1302880959) AND (rt0.c0))))) ISNULL));
SELECT DISTINCT * FROM rt0 INNER JOIN vt1 ON (((vt1.c0 IN (rt0.c0, vt1.c0))) NOT BETWEEN (CASE WHEN rt0.c2 THEN rt0.c1 END) AND (CAST(rt0.c0 AS BLOB)));
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE ((0.5219239846529778 IN ())) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT ((0.5219239846529778 IN ())))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((((0.5219239846529778 IN ())) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((((vt1.c0)<<(vt1.c0)))&((vt1.c0 IN (COUNT(*))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (((((vt1.c0)<<(vt1.c0)))&((vt1.c0 IN (COUNT(*))))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((((((vt1.c0)<<(vt1.c0)))&((vt1.c0 IN (COUNT(*)))))) ISNULL);
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((((vt1.c0)<<(vt1.c0)))&((vt1.c0 IN (COUNT(*))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (((((vt1.c0)<<(vt1.c0)))&((vt1.c0 IN (COUNT(*))))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((((((vt1.c0)<<(vt1.c0)))&((vt1.c0 IN (COUNT(*)))))) ISNULL);
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT * FROM vt1;
SELECT * FROM vt1 WHERE (((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))|(CAST(vt1.c0 AS INTEGER)))) UNION ALL SELECT * FROM vt1 WHERE ((NOT (((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))|(CAST(vt1.c0 AS INTEGER)))))) UNION ALL SELECT * FROM vt1 WHERE (((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))|(CAST(vt1.c0 AS INTEGER)))) ISNULL));
SELECT * FROM vt1;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((((rt0.c2 IN ())) NOTNULL)) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((((rt0.c2 IN ())) NOTNULL)))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((((rt0.c2 IN ())) NOTNULL)) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE (CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END COLLATE BINARY) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT (CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END COLLATE BINARY))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE (((CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END COLLATE BINARY) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT rt0.c0, rt0.c2, vt1.c0 FROM rt0, vt1 GROUP BY rt0.c0, rt0.c2, vt1.c0;
SELECT rt0.c0, rt0.c2, vt1.c0 FROM rt0, vt1 GROUP BY rt0.c0, rt0.c2, vt1.c0 HAVING rt0.c1 UNION ALL SELECT ALL rt0.c0, rt0.c2, vt1.c0 FROM rt0, vt1 GROUP BY rt0.c0, rt0.c2, vt1.c0 HAVING (NOT (rt0.c1)) UNION ALL SELECT ALL rt0.c0, rt0.c2, vt1.c0 FROM rt0 NOT INDEXED, vt1 GROUP BY rt0.c0, rt0.c2, vt1.c0 HAVING ((rt0.c1) ISNULL);
SELECT rt0.c0, rt0.c2, vt1.c0 FROM rt0, vt1 GROUP BY rt0.c0, rt0.c2, vt1.c0;
SELECT rt0.c0, rt0.c2, vt1.c0 FROM rt0, vt1 GROUP BY rt0.c0, rt0.c2, vt1.c0 HAVING rt0.c1 UNION ALL SELECT ALL rt0.c0, rt0.c2, vt1.c0 FROM rt0, vt1 GROUP BY rt0.c0, rt0.c2, vt1.c0 HAVING (NOT (rt0.c1)) UNION ALL SELECT ALL rt0.c0, rt0.c2, vt1.c0 FROM rt0 NOT INDEXED, vt1 GROUP BY rt0.c0, rt0.c2, vt1.c0 HAVING ((rt0.c1) ISNULL);
SELECT rt0.c0, rt0.c2, vt1.c0 FROM rt0, vt1 GROUP BY rt0.c0, rt0.c2, vt1.c0;
SELECT ALL * FROM rt0, vt1;
SELECT ALL * FROM rt0, vt1 WHERE (((((rt0.c2) IS TRUE)) IS FALSE)) UNION ALL SELECT * FROM rt0, vt1 WHERE ((NOT (((((rt0.c2) IS TRUE)) IS FALSE)))) UNION ALL SELECT * FROM rt0, vt1 WHERE (((((((rt0.c2) IS TRUE)) IS FALSE)) ISNULL));
SELECT ALL * FROM rt0, vt1;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (rt0.c1) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (rt0.c1))) UNION SELECT DISTINCT * FROM rt0 WHERE (((rt0.c1) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT vt1.c0, rt0.c1, rt0.c2, rt0.c0 FROM rt0, vt1 GROUP BY vt1.c0, rt0.c1, rt0.c2, rt0.c0;
SELECT vt1.c0, rt0.c1, rt0.c2, rt0.c0 FROM rt0, vt1 WHERE (CASE CAST(x'23f2' AS INTEGER)  WHEN json_array_length(rt0.c0, vt1.c0) THEN (((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))) ELSE ((vt1.c0)&(rt0.c0)) END) GROUP BY vt1.c0, rt0.c1, rt0.c2, rt0.c0 UNION SELECT vt1.c0, rt0.c1, rt0.c2, rt0.c0 FROM rt0, vt1 WHERE ((NOT (CASE CAST(x'23f2' AS INTEGER)  WHEN json_array_length(rt0.c0, vt1.c0) THEN (((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))) ELSE ((vt1.c0)&(rt0.c0)) END))) GROUP BY vt1.c0, rt0.c1, rt0.c2, rt0.c0 UNION SELECT vt1.c0, rt0.c1, rt0.c2, rt0.c0 FROM rt0, vt1 WHERE (((CASE CAST(x'23f2' AS INTEGER)  WHEN json_array_length(rt0.c0, vt1.c0) THEN (((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))) ELSE ((vt1.c0)&(rt0.c0)) END) ISNULL)) GROUP BY vt1.c0, rt0.c1, rt0.c2, rt0.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING GROUP_CONCAT(LIKELIHOOD(SUM(COUNT(*)), 0.3979795157224927)) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (GROUP_CONCAT(LIKELIHOOD(SUM(COUNT(*)), 0.3979795157224927)))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((GROUP_CONCAT(LIKELIHOOD(SUM(COUNT(*)), 0.3979795157224927))) ISNULL);
SELECT vt1.c0 FROM vt1;
SELECT ALL vt1.c0 FROM vt1 WHERE (CASE WHEN vt1.c0 THEN vt1.c0 COLLATE BINARY END) UNION ALL SELECT vt1.c0 FROM vt1 WHERE ((NOT (CASE WHEN vt1.c0 THEN vt1.c0 COLLATE BINARY END))) UNION ALL SELECT vt1.c0 FROM vt1 WHERE (((CASE WHEN vt1.c0 THEN vt1.c0 COLLATE BINARY END) ISNULL));
SELECT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0, rt0.c1 FROM vt1, rt0;
SELECT DISTINCT vt1.c0, rt0.c1 FROM vt1, rt0 WHERE (((((vt1.c0)OR(vt1.c0)))&(((rt0.c1) NOT NULL)))) UNION SELECT DISTINCT vt1.c0, rt0.c1 FROM vt1, rt0 WHERE ((NOT (((((vt1.c0)OR(vt1.c0)))&(((rt0.c1) NOT NULL)))))) UNION SELECT DISTINCT vt1.c0, rt0.c1 FROM vt1, rt0 WHERE (((((((vt1.c0)OR(vt1.c0)))&(((rt0.c1) NOT NULL)))) ISNULL));
SELECT DISTINCT vt1.c0, rt0.c1 FROM vt1, rt0;
SELECT ALL rt0.c1 FROM vt1, rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM vt1, rt0 WHERE (CAST(vt1.c0 AS TEXT)) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM vt1, rt0 WHERE ((NOT (CAST(vt1.c0 AS TEXT)))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM vt1, rt0 WHERE (((CAST(vt1.c0 AS TEXT)) ISNULL)) GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM vt1, rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (((SUM(rt0.c2)))<((CAST(GROUP_CONCAT(MIN(rt0.c0)) AS BLOB)))) UNION ALL SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (NOT ((((SUM(rt0.c2)))<((CAST(GROUP_CONCAT(MIN(rt0.c0)) AS BLOB)))))) UNION ALL SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (((((SUM(rt0.c2)))<((CAST(GROUP_CONCAT(MIN(rt0.c0)) AS BLOB))))) ISNULL);
SELECT ALL * FROM rt0;
SELECT * FROM rt0 WHERE ((+ (((((rt0.c0)AND(rt0.c2)))AND(rt0.c2))))) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT ((+ (((((rt0.c0)AND(rt0.c2)))AND(rt0.c2))))))) UNION ALL SELECT * FROM rt0 WHERE ((((+ (((((rt0.c0)AND(rt0.c2)))AND(rt0.c2))))) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((((vt1.c0)) BETWEEN ((json_valid(vt1.c0))) AND ((((vt1.c0) IS TRUE))))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT ((((vt1.c0)) BETWEEN ((json_valid(vt1.c0))) AND ((((vt1.c0) IS TRUE))))))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((((((vt1.c0)) BETWEEN ((json_valid(vt1.c0))) AND ((((vt1.c0) IS TRUE))))) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE (x'c117') GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT (x'c117'))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE (((x'c117') ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL rt0.c0, rt0.c2 FROM vt1, rt0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM vt1 NOT INDEXED, rt0 GROUP BY rt0.c0, rt0.c2 HAVING (+ (COUNT(rt0.c1))) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM vt1, rt0 GROUP BY rt0.c0, rt0.c2 HAVING (NOT ((+ (COUNT(rt0.c1))))) UNION ALL SELECT rt0.c0, rt0.c2 FROM vt1, rt0 GROUP BY rt0.c0, rt0.c2 HAVING (((+ (COUNT(rt0.c1)))) ISNULL);
SELECT ALL rt0.c0, rt0.c2 FROM vt1, rt0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM vt1 NOT INDEXED, rt0 GROUP BY rt0.c0, rt0.c2 HAVING (+ (COUNT(rt0.c1))) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM vt1, rt0 GROUP BY rt0.c0, rt0.c2 HAVING (NOT ((+ (COUNT(rt0.c1))))) UNION ALL SELECT rt0.c0, rt0.c2 FROM vt1, rt0 GROUP BY rt0.c0, rt0.c2 HAVING (((+ (COUNT(rt0.c1)))) ISNULL);
SELECT ALL rt0.c0, rt0.c2 FROM vt1, rt0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL * FROM vt1;
SELECT * FROM vt1 WHERE ((((vt1.c0, 0xffffffff99ae9f6d, vt1.c0)) NOT BETWEEN ((((vt1.c0) IS TRUE), CAST(vt1.c0 AS INTEGER), (((vt1.c0))<>((vt1.c0))))) AND ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)), ((vt1.c0) IS TRUE), (vt1.c0 IN ()))))) UNION ALL SELECT * FROM vt1 WHERE ((NOT ((((vt1.c0, 0xffffffff99ae9f6d, vt1.c0)) NOT BETWEEN ((((vt1.c0) IS TRUE), CAST(vt1.c0 AS INTEGER), (((vt1.c0))<>((vt1.c0))))) AND ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)), ((vt1.c0) IS TRUE), (vt1.c0 IN ()))))))) UNION ALL SELECT ALL * FROM vt1 WHERE ((((((vt1.c0, 0xffffffff99ae9f6d, vt1.c0)) NOT BETWEEN ((((vt1.c0) IS TRUE), CAST(vt1.c0 AS INTEGER), (((vt1.c0))!=((vt1.c0))))) AND ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)), ((vt1.c0) IS TRUE), (vt1.c0 IN ()))))) ISNULL));
SELECT ALL * FROM vt1;
SELECT DISTINCT * FROM vt1, rt0;
SELECT DISTINCT * FROM vt1, rt0 WHERE (x'2a80') UNION SELECT DISTINCT * FROM vt1, rt0 WHERE ((NOT (x'2a80'))) UNION SELECT DISTINCT * FROM vt1, rt0 WHERE (((x'2a80') ISNULL));
SELECT DISTINCT * FROM vt1, rt0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE (((vt1.c0 COLLATE NOCASE) BETWEEN (vt1.c0 COLLATE NOCASE) AND (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (((vt1.c0 COLLATE NOCASE) BETWEEN (vt1.c0 COLLATE NOCASE) AND (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE (((((vt1.c0 COLLATE NOCASE) BETWEEN (vt1.c0 COLLATE NOCASE) AND (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END))) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT rt0.c2, rt0.c0, vt1.c0, rt0.c1 FROM rt0 NOT INDEXED, vt1 GROUP BY rt0.c2, rt0.c0, vt1.c0, rt0.c1;
SELECT rt0.c2, rt0.c0, vt1.c0, rt0.c1 FROM rt0, vt1 GROUP BY rt0.c2, rt0.c0, vt1.c0, rt0.c1 HAVING (((rt0.c2, MIN(AVG(COUNT(AVG(vt1.c0)))), GROUP_CONCAT(rt0.c0))) NOT BETWEEN ((MIN(vt1.c0), MIN(TOTAL(SUM(COUNT(*)))), vt1.c0)) AND ((CAST(MIN(rt0.c2) AS NUMERIC), AVG(rt0.c0), AVG(rt0.c2)))) UNION ALL SELECT rt0.c2, rt0.c0, vt1.c0, rt0.c1 FROM rt0, vt1 GROUP BY rt0.c2, rt0.c0, vt1.c0, rt0.c1 HAVING (NOT ((((rt0.c2, MIN(AVG(COUNT(AVG(vt1.c0)))), GROUP_CONCAT(rt0.c0))) NOT BETWEEN ((MIN(vt1.c0), MIN(TOTAL(SUM(COUNT(*)))), vt1.c0)) AND ((CAST(MIN(rt0.c2) AS NUMERIC), AVG(rt0.c0), AVG(rt0.c2)))))) UNION ALL SELECT ALL rt0.c2, rt0.c0, vt1.c0, rt0.c1 FROM rt0, vt1 GROUP BY rt0.c2, rt0.c0, vt1.c0, rt0.c1 HAVING (((((rt0.c2, MIN(AVG(COUNT(AVG(vt1.c0)))), GROUP_CONCAT(rt0.c0))) NOT BETWEEN ((MIN(vt1.c0), MIN(TOTAL(SUM(COUNT(*)))), vt1.c0)) AND ((CAST(MIN(rt0.c2) AS NUMERIC), AVG(rt0.c0), AVG(rt0.c2))))) ISNULL);
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE (IFNULL(DISTINCT ((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0)), CAST(rt0.c2 AS INTEGER))) UNION ALL SELECT * FROM rt0 WHERE ((NOT (IFNULL(DISTINCT ((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0)), CAST(rt0.c2 AS INTEGER))))) UNION ALL SELECT * FROM rt0 WHERE (((IFNULL(DISTINCT ((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0)), CAST(rt0.c2 AS INTEGER))) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM vt1, rt0;
SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM vt1, rt0 WHERE ((((((rt0.c0) BETWEEN (rt0.c2) AND (vt1.c0))))<((CASE rt0.c0  WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c1 END)))) UNION SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM vt1, rt0 WHERE ((NOT ((((((rt0.c0) BETWEEN (rt0.c2) AND (vt1.c0))))<((CASE rt0.c0  WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c1 END)))))) UNION SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM vt1, rt0 WHERE ((((((((rt0.c0) BETWEEN (rt0.c2) AND (vt1.c0))))<((CASE rt0.c0  WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c1 END)))) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c2, rt0.c1 FROM vt1, rt0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE (((CAST(x'' AS REAL)) NOT BETWEEN (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END) AND (vt1.c0))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT (((CAST(x'' AS REAL)) NOT BETWEEN (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END) AND (vt1.c0))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE (((((CAST(x'' AS REAL)) NOT BETWEEN (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END) AND (vt1.c0))) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT rt0.c2, rt0.c0, vt1.c0, rt0.c1 FROM vt1, rt0 GROUP BY rt0.c2, rt0.c0, vt1.c0, rt0.c1;
SELECT rt0.c2, rt0.c0, vt1.c0, rt0.c1 FROM vt1, rt0 GROUP BY rt0.c2, rt0.c0, vt1.c0, rt0.c1 HAVING ((TOTAL(TOTAL(SUM(MAX(AVG(rt0.c1))))))+((NOT (rt0.c1)))) UNION ALL SELECT ALL rt0.c2, rt0.c0, vt1.c0, rt0.c1 FROM vt1, rt0 GROUP BY rt0.c2, rt0.c0, vt1.c0, rt0.c1 HAVING (NOT (((TOTAL(TOTAL(SUM(MAX(AVG(rt0.c1))))))+((NOT (rt0.c1)))))) UNION ALL SELECT ALL rt0.c2, rt0.c0, vt1.c0, rt0.c1 FROM vt1, rt0 GROUP BY rt0.c2, rt0.c0, vt1.c0, rt0.c1 HAVING ((((TOTAL(TOTAL(SUM(MAX(AVG(rt0.c1))))))+((NOT (rt0.c1))))) ISNULL);
SELECT * FROM vt1, rt0;
SELECT * FROM vt1, rt0 WHERE ((NULL IN ())) UNION ALL SELECT ALL * FROM vt1, rt0 WHERE ((NOT ((NULL IN ())))) UNION ALL SELECT ALL * FROM vt1, rt0 WHERE ((((NULL IN ())) ISNULL));
SELECT * FROM vt1, rt0;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE ((LOWER(DISTINCT vt1.c0) IN ())) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT ((LOWER(DISTINCT vt1.c0) IN ())))) UNION SELECT DISTINCT * FROM vt1 WHERE ((((LOWER(DISTINCT vt1.c0) IN ())) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c2, rt0.c1 FROM rt0 WHERE (((((rt0.c0)GLOB(rt0.c1))) NOT BETWEEN (((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c2))) AND (rt0.c1))) GROUP BY rt0.c2, rt0.c1 UNION SELECT rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (((((rt0.c0)GLOB(rt0.c1))) NOT BETWEEN (((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c2))) AND (rt0.c1))))) GROUP BY rt0.c2, rt0.c1 UNION SELECT rt0.c2, rt0.c1 FROM rt0 WHERE (((((((rt0.c0)GLOB(rt0.c1))) NOT BETWEEN (((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c2))) AND (rt0.c1))) ISNULL)) GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING AVG(rt0.c2) COLLATE BINARY UNION ALL SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING (NOT (AVG(rt0.c2) COLLATE BINARY)) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING ((AVG(rt0.c2) COLLATE BINARY) ISNULL);
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING AVG(rt0.c2) COLLATE BINARY UNION ALL SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING (NOT (AVG(rt0.c2) COLLATE BINARY)) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING ((AVG(rt0.c2) COLLATE BINARY) ISNULL);
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((((NULL)) NOT BETWEEN ((NULLIF(DISTINCT rt0.c2, rt0.c1))) AND ((((rt0.c2)<=(rt0.c2)))))) UNION ALL SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT ((((NULL)) NOT BETWEEN ((NULLIF(DISTINCT rt0.c2, rt0.c1))) AND ((((rt0.c2)<=(rt0.c2)))))))) UNION ALL SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((((((NULL)) NOT BETWEEN ((NULLIF(DISTINCT rt0.c2, rt0.c1))) AND ((((rt0.c2)<=(rt0.c2)))))) ISNULL));
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c2 FROM vt1, rt0;
SELECT DISTINCT rt0.c1, rt0.c2 FROM vt1, rt0 WHERE (CASE (- (rt0.c1))  WHEN ((rt0.c2)%(rt0.c0)) THEN rt0.c2 END) UNION SELECT DISTINCT rt0.c1, rt0.c2 FROM vt1, rt0 WHERE ((NOT (CASE (- (rt0.c1))  WHEN ((rt0.c2)%(rt0.c0)) THEN rt0.c2 END))) UNION SELECT DISTINCT rt0.c1, rt0.c2 FROM vt1, rt0 WHERE (((CASE (- (rt0.c1))  WHEN ((rt0.c2)%(rt0.c0)) THEN rt0.c2 END) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c2 FROM vt1, rt0;
SELECT ALL rt0.c0 FROM rt0, vt1 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0, vt1 WHERE (((CAST(rt0.c2 AS INTEGER)) NOTNULL)) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM rt0, vt1 WHERE ((NOT (((CAST(rt0.c2 AS INTEGER)) NOTNULL)))) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM rt0, vt1 WHERE (((((CAST(rt0.c2 AS INTEGER)) NOTNULL)) ISNULL)) GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0, vt1 GROUP BY rt0.c0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING GROUP_CONCAT(MIN(rt0.c1)) UNION ALL SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING (NOT (GROUP_CONCAT(MIN(rt0.c1)))) UNION ALL SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING ((GROUP_CONCAT(MIN(rt0.c1))) ISNULL);
SELECT * FROM vt1 RIGHT OUTER JOIN rt0 ON rt0.c1;
SELECT ALL * FROM vt1 RIGHT OUTER JOIN rt0 ON rt0.c1 WHERE ((+ (CAST(vt1.c0 AS BLOB)))) UNION ALL SELECT * FROM vt1 RIGHT OUTER JOIN rt0 ON rt0.c1 WHERE ((NOT ((+ (CAST(vt1.c0 AS BLOB)))))) UNION ALL SELECT * FROM vt1 RIGHT OUTER JOIN rt0 ON rt0.c1 WHERE ((((+ (CAST(vt1.c0 AS BLOB)))) ISNULL));
SELECT * FROM vt1 RIGHT OUTER JOIN rt0 ON rt0.c1;
SELECT DISTINCT rt0.c0, rt0.c2, vt1.c0, rt0.c1 FROM vt1, rt0;
SELECT DISTINCT rt0.c0, rt0.c2, vt1.c0, rt0.c1 FROM vt1, rt0 WHERE ((- (CASE rt0.c2  WHEN rt0.c0 THEN rt0.c1 END))) UNION SELECT DISTINCT rt0.c0, rt0.c2, vt1.c0, rt0.c1 FROM vt1, rt0 WHERE ((NOT ((- (CASE rt0.c2  WHEN rt0.c0 THEN rt0.c1 END))))) UNION SELECT DISTINCT rt0.c0, rt0.c2, vt1.c0, rt0.c1 FROM vt1, rt0 WHERE ((((- (CASE rt0.c2  WHEN rt0.c0 THEN rt0.c1 END))) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c2, vt1.c0, rt0.c1 FROM vt1, rt0;
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c2 FROM rt0 WHERE (((((rt0.c1) NOT NULL)) NOT NULL)) GROUP BY rt0.c0, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (((((rt0.c1) NOT NULL)) NOT NULL)))) GROUP BY rt0.c0, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c2 FROM rt0 WHERE (((((((rt0.c1) NOT NULL)) NOT NULL)) ISNULL)) GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (((SUM(COUNT(vt1.c0)))) NOT BETWEEN ((CAST(vt1.c0 AS INTEGER))) AND (((+ (vt1.c0))))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT ((((SUM(COUNT(vt1.c0)))) NOT BETWEEN ((CAST(vt1.c0 AS INTEGER))) AND (((+ (vt1.c0))))))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (((((SUM(COUNT(vt1.c0)))) NOT BETWEEN ((CAST(vt1.c0 AS INTEGER))) AND (((+ (vt1.c0)))))) ISNULL);
SELECT ALL * FROM vt1, rt0;
SELECT * FROM vt1, rt0 WHERE (((((((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c1)))AND(1831794121)))OR(((((((((rt0.c0)AND(rt0.c0)))AND(rt0.c1)))OR(rt0.c0)))AND(rt0.c0))))) UNION ALL SELECT ALL * FROM vt1, rt0 WHERE ((NOT (((((((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c1)))AND(1831794121)))OR(((((((((rt0.c0)AND(rt0.c0)))AND(rt0.c1)))OR(rt0.c0)))AND(rt0.c0))))))) UNION ALL SELECT ALL * FROM vt1, rt0 WHERE (((((((((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c1)))AND(1831794121)))OR(((((((((rt0.c0)AND(rt0.c0)))AND(rt0.c1)))OR(rt0.c0)))AND(rt0.c0))))) ISNULL));
SELECT ALL * FROM vt1, rt0;
SELECT DISTINCT vt1.c0 FROM vt1, rt0;
SELECT DISTINCT vt1.c0 FROM vt1, rt0 WHERE (CASE CASE rt0.c1  WHEN rt0.c2 THEN rt0.c1 END  WHEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (0.39070726965911107)) THEN CAST(vt1.c0 AS INTEGER) ELSE ((vt1.c0) NOT BETWEEN (rt0.c2) AND (vt1.c0)) END) UNION SELECT DISTINCT vt1.c0 FROM vt1, rt0 WHERE ((NOT (CASE CASE rt0.c1  WHEN rt0.c2 THEN rt0.c1 END  WHEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (0.39070726965911107)) THEN CAST(vt1.c0 AS INTEGER) ELSE ((vt1.c0) NOT BETWEEN (rt0.c2) AND (vt1.c0)) END))) UNION SELECT DISTINCT vt1.c0 FROM vt1, rt0 WHERE (((CASE CASE rt0.c1  WHEN rt0.c2 THEN rt0.c1 END  WHEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (0.39070726965911107)) THEN CAST(vt1.c0 AS INTEGER) ELSE ((vt1.c0) NOT BETWEEN (rt0.c2) AND (vt1.c0)) END) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1, rt0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (((vt1.c0) NOT NULL)))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT ((NOT (((vt1.c0) NOT NULL)))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((((NOT (((vt1.c0) NOT NULL)))) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING AVG(COUNT(*)) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (AVG(COUNT(*)))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((AVG(COUNT(*))) ISNULL);
SELECT vt1.c0 FROM vt1;
SELECT ALL vt1.c0 FROM vt1 WHERE (((((vt1.c0) NOTNULL)) NOTNULL)) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (((((vt1.c0) NOTNULL)) NOTNULL)))) UNION ALL SELECT vt1.c0 FROM vt1 WHERE (((((((vt1.c0) NOTNULL)) NOTNULL)) ISNULL));
SELECT vt1.c0 FROM vt1;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (SUBSTR(((rt0.c0)=(NULL)), ((rt0.c2) ISNULL))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (SUBSTR(((rt0.c0)==(NULL)), ((rt0.c2) ISNULL))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((SUBSTR(((rt0.c0)=(NULL)), ((rt0.c2) ISNULL))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 WHERE (TYPEOF(CAST(rt0.c0 AS INTEGER))) GROUP BY rt0.c1, rt0.c2 UNION SELECT rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (TYPEOF(CAST(rt0.c0 AS INTEGER))))) GROUP BY rt0.c1, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c2 FROM rt0 WHERE (((TYPEOF(CAST(rt0.c0 AS INTEGER))) ISNULL)) GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((0.46278964673474476)<>(TOTAL(vt1.c0))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (((0.46278964673474476)!=(TOTAL(vt1.c0))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((((0.46278964673474476)<>(TOTAL(vt1.c0)))) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((0.46278964673474476)<>(TOTAL(vt1.c0))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (((0.46278964673474476)!=(TOTAL(vt1.c0))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((((0.46278964673474476)<>(TOTAL(vt1.c0)))) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL * FROM vt1;
SELECT ALL * FROM vt1 WHERE (((vt1.c0)IS NOT(((NULL) NOT NULL)))) UNION ALL SELECT * FROM vt1 WHERE ((NOT (((vt1.c0)IS NOT(((NULL) NOT NULL)))))) UNION ALL SELECT * FROM vt1 WHERE (((((vt1.c0)IS NOT(((NULL) NOT NULL)))) ISNULL));
SELECT ALL * FROM vt1;
SELECT DISTINCT * FROM rt0 FULL OUTER JOIN vt1 ON ((vt1.c0 COLLATE RTRIM) NOT NULL);
SELECT DISTINCT * FROM rt0 FULL OUTER JOIN vt1 ON ((vt1.c0 COLLATE RTRIM) NOT NULL) WHERE ((((((((((((vt1.c0))<((rt0.c1))))AND(CASE rt0.c2  WHEN rt0.c0 THEN vt1.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN vt1.c0 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 END)))AND(((rt0.c0) NOT NULL))))AND((vt1.c0 IN (rt0.c0, rt0.c2)))))OR(((rt0.c1) NOT NULL)))) UNION SELECT DISTINCT * FROM rt0 FULL OUTER JOIN vt1 ON ((vt1.c0 COLLATE RTRIM) NOT NULL) WHERE ((NOT ((((((((((((vt1.c0))<((rt0.c1))))AND(CASE rt0.c2  WHEN rt0.c0 THEN vt1.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN vt1.c0 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 END)))AND(((rt0.c0) NOT NULL))))AND((vt1.c0 IN (rt0.c0, rt0.c2)))))OR(((rt0.c1) NOT NULL)))))) UNION SELECT DISTINCT * FROM rt0 FULL OUTER JOIN vt1 ON ((vt1.c0 COLLATE RTRIM) NOT NULL) WHERE ((((((((((((((vt1.c0))<((rt0.c1))))AND(CASE rt0.c2  WHEN rt0.c0 THEN vt1.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN vt1.c0 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 END)))AND(((rt0.c0) NOT NULL))))AND((vt1.c0 IN (rt0.c0, rt0.c2)))))OR(((rt0.c1) NOT NULL)))) ISNULL));
SELECT DISTINCT * FROM rt0 FULL OUTER JOIN vt1 ON ((vt1.c0 COLLATE RTRIM) NOT NULL);
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 WHERE ((((((rt0.c1, rt0.c1, rt0.c2))>=((NULL, rt0.c2, rt0.c0))))%(((0.2216490233271422) NOT BETWEEN (rt0.c0) AND (rt0.c1))))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0 WHERE ((NOT ((((((rt0.c1, rt0.c1, rt0.c2))>=((NULL, rt0.c2, rt0.c0))))%(((0.2216490233271422) NOT BETWEEN (rt0.c0) AND (rt0.c1))))))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0 WHERE ((((((((rt0.c1, rt0.c1, rt0.c2))>=((NULL, rt0.c2, rt0.c0))))%(((0.2216490233271422) NOT BETWEEN (rt0.c0) AND (rt0.c1))))) ISNULL)) GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c2, vt1.c0, rt0.c1, rt0.c0 FROM rt0, vt1 GROUP BY rt0.c2, vt1.c0, rt0.c1, rt0.c0;
SELECT rt0.c2, vt1.c0, rt0.c1, rt0.c0 FROM rt0, vt1 GROUP BY rt0.c2, vt1.c0, rt0.c1, rt0.c0 HAVING ((CAST(vt1.c0 AS INTEGER)) NOT BETWEEN (COUNT(AVG(rt0.c1))) AND (SUM(COUNT(*)))) UNION ALL SELECT rt0.c2, vt1.c0, rt0.c1, rt0.c0 FROM rt0, vt1 GROUP BY rt0.c2, vt1.c0, rt0.c1, rt0.c0 HAVING (NOT (((CAST(vt1.c0 AS INTEGER)) NOT BETWEEN (COUNT(AVG(rt0.c1))) AND (SUM(COUNT(*)))))) UNION ALL SELECT ALL rt0.c2, vt1.c0, rt0.c1, rt0.c0 FROM rt0, vt1 NOT INDEXED GROUP BY rt0.c2, vt1.c0, rt0.c1, rt0.c0 HAVING ((((CAST(vt1.c0 AS INTEGER)) NOT BETWEEN (COUNT(AVG(rt0.c1))) AND (SUM(COUNT(*))))) ISNULL);
SELECT ALL rt0.c0, vt1.c0, rt0.c1 FROM rt0, vt1;
SELECT ALL rt0.c0, vt1.c0, rt0.c1 FROM rt0, vt1 WHERE (NULL) UNION ALL SELECT ALL rt0.c0, vt1.c0, rt0.c1 FROM rt0, vt1 WHERE ((NOT (NULL))) UNION ALL SELECT rt0.c0, vt1.c0, rt0.c1 FROM rt0, vt1 WHERE (((NULL) ISNULL));
SELECT ALL rt0.c0, vt1.c0, rt0.c1 FROM rt0, vt1;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (CAST(rt0.c0 AS BLOB)) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (CAST(rt0.c0 AS BLOB)))) UNION SELECT DISTINCT * FROM rt0 WHERE (((CAST(rt0.c0 AS BLOB)) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c1, rt0.c2, rt0.c0, vt1.c0 FROM vt1, rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0, vt1.c0;
SELECT rt0.c1, rt0.c2, rt0.c0, vt1.c0 FROM vt1, rt0 WHERE ((~ (TYPEOF(1216505482)))) GROUP BY rt0.c1, rt0.c2, rt0.c0, vt1.c0 UNION SELECT ALL rt0.c1, rt0.c2, rt0.c0, vt1.c0 FROM vt1, rt0 WHERE ((NOT ((~ (TYPEOF(1216505482)))))) GROUP BY rt0.c1, rt0.c2, rt0.c0, vt1.c0 UNION SELECT ALL rt0.c1, rt0.c2, rt0.c0, vt1.c0 FROM vt1, rt0 WHERE ((((~ (TYPEOF(1216505482)))) ISNULL)) GROUP BY rt0.c1, rt0.c2, rt0.c0, vt1.c0;
SELECT rt0.c1, rt0.c2, rt0.c0, vt1.c0 FROM vt1, rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0, vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (+ (MAX(vt1.c0))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT ((+ (MAX(vt1.c0))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (((+ (MAX(vt1.c0)))) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (+ (MAX(vt1.c0))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT ((+ (MAX(vt1.c0))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (((+ (MAX(vt1.c0)))) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT * FROM vt1;
SELECT * FROM vt1 WHERE (CAST(vt1.c0 AS INTEGER)) UNION ALL SELECT ALL * FROM vt1 WHERE ((NOT (CAST(vt1.c0 AS INTEGER)))) UNION ALL SELECT * FROM vt1 WHERE (((CAST(vt1.c0 AS INTEGER)) ISNULL));
SELECT * FROM vt1;
SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0 WHERE ('-31271744') UNION SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT ('-31271744'))) UNION SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0 WHERE ((('-31271744') ISNULL));
SELECT DISTINCT rt0.c2, rt0.c1 FROM rt0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE (json_array(vt1.c0, vt1.c0, vt1.c0, vt1.c0) COLLATE NOCASE COLLATE NOCASE) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT (json_array(vt1.c0, vt1.c0, vt1.c0, vt1.c0) COLLATE NOCASE COLLATE NOCASE))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE (((json_array(vt1.c0, vt1.c0, vt1.c0, vt1.c0) COLLATE NOCASE COLLATE NOCASE) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING CASE COUNT(vt1.c0)  WHEN ((COUNT(TOTAL(NULL)))||(MAX(TOTAL(GROUP_CONCAT(vt1.c0))))) THEN GROUP_CONCAT(GROUP_CONCAT(MIN(COUNT(MIN(MAX(SUM(AVG(MIN(MIN(MAX(COUNT(COUNT(vt1.c0))))))))))))) ELSE GROUP_CONCAT(TOTAL(vt1.c0)) END UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (CASE COUNT(vt1.c0)  WHEN ((COUNT(TOTAL(NULL)))||(MAX(TOTAL(GROUP_CONCAT(vt1.c0))))) THEN GROUP_CONCAT(GROUP_CONCAT(MIN(COUNT(MIN(MAX(SUM(AVG(MIN(MIN(MAX(COUNT(COUNT(vt1.c0))))))))))))) ELSE GROUP_CONCAT(TOTAL(vt1.c0)) END)) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((CASE COUNT(vt1.c0)  WHEN ((COUNT(TOTAL(NULL)))||(MAX(TOTAL(GROUP_CONCAT(vt1.c0))))) THEN GROUP_CONCAT(GROUP_CONCAT(MIN(COUNT(MIN(MAX(SUM(AVG(MIN(MIN(MAX(COUNT(COUNT(vt1.c0))))))))))))) ELSE GROUP_CONCAT(TOTAL(vt1.c0)) END) ISNULL);
SELECT ALL rt0.c0, vt1.c0 FROM rt0, vt1;
SELECT ALL rt0.c0, vt1.c0 FROM rt0, vt1 WHERE (((((vt1.c0) NOTNULL))OR(NULL))) UNION ALL SELECT rt0.c0, vt1.c0 FROM rt0, vt1 WHERE ((NOT (((((vt1.c0) NOTNULL))OR(NULL))))) UNION ALL SELECT rt0.c0, vt1.c0 FROM rt0, vt1 WHERE (((((((vt1.c0) NOTNULL))OR(NULL))) ISNULL));
SELECT ALL rt0.c0, vt1.c0 FROM rt0, vt1;
SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1 FROM vt1, rt0;
SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1 FROM vt1, rt0 WHERE ((((rt0.c0 IN ())) NOT NULL)) UNION SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1 FROM vt1, rt0 WHERE ((NOT ((((rt0.c0 IN ())) NOT NULL)))) UNION SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1 FROM vt1, rt0 WHERE ((((((rt0.c0 IN ())) NOT NULL)) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1 FROM vt1, rt0;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 WHERE (CAST(CAST(rt0.c1 AS REAL) AS BLOB)) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0 WHERE ((NOT (CAST(CAST(rt0.c1 AS REAL) AS BLOB)))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0 WHERE (((CAST(CAST(rt0.c1 AS REAL) AS BLOB)) ISNULL)) GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1, rt0.c2 FROM vt1, rt0 GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c1, rt0.c2 FROM vt1, rt0 GROUP BY rt0.c1, rt0.c2 HAVING (((rt0.c0)) NOT BETWEEN ((TOTAL(AVG(rt0.c0)) COLLATE BINARY)) AND ((AVG(SUM(GROUP_CONCAT(COUNT(0.5717909667664087))))))) UNION ALL SELECT rt0.c1, rt0.c2 FROM vt1, rt0 GROUP BY rt0.c1, rt0.c2 HAVING (NOT ((((rt0.c0)) NOT BETWEEN ((TOTAL(AVG(rt0.c0)) COLLATE BINARY)) AND ((AVG(SUM(GROUP_CONCAT(COUNT(0.5717909667664087))))))))) UNION ALL SELECT rt0.c1, rt0.c2 FROM vt1, rt0 GROUP BY rt0.c1, rt0.c2 HAVING (((((rt0.c0)) NOT BETWEEN ((TOTAL(AVG(rt0.c0)) COLLATE BINARY)) AND ((AVG(SUM(GROUP_CONCAT(COUNT(0.5717909667664087)))))))) ISNULL);
SELECT * FROM vt1;
SELECT ALL * FROM vt1 WHERE (CAST((vt1.c0 IN ()) AS BLOB)) UNION ALL SELECT ALL * FROM vt1 WHERE ((NOT (CAST((vt1.c0 IN ()) AS BLOB)))) UNION ALL SELECT ALL * FROM vt1 WHERE (((CAST((vt1.c0 IN ()) AS BLOB)) ISNULL));
SELECT * FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE (CASE 0.3782447480329515  WHEN ((vt1.c0) NOT NULL) THEN vt1.c0 COLLATE BINARY ELSE (vt1.c0 IN ()) END) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT (CASE 0.3782447480329515  WHEN ((vt1.c0) NOT NULL) THEN vt1.c0 COLLATE BINARY ELSE (vt1.c0 IN ()) END))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((CASE 0.3782447480329515  WHEN ((vt1.c0) NOT NULL) THEN vt1.c0 COLLATE BINARY ELSE (vt1.c0 IN ()) END) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 WHERE ((((rt0.c0 IN (rt0.c2))) NOT BETWEEN ((NOT (rt0.c1))) AND ((~ (x''))))) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM rt0 WHERE ((NOT ((((rt0.c0 IN (rt0.c2))) NOT BETWEEN ((NOT (rt0.c1))) AND ((~ (x''))))))) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM rt0 WHERE ((((((rt0.c0 IN (rt0.c2))) NOT BETWEEN ((NOT (rt0.c1))) AND ((~ (x''))))) ISNULL)) GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (SUM(TOTAL(vt1.c0)) IN ()) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT ((SUM(TOTAL(vt1.c0)) IN ()))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (((SUM(TOTAL(vt1.c0)) IN ())) ISNULL);
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (SUM(TOTAL(vt1.c0)) IN ()) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT ((SUM(TOTAL(vt1.c0)) IN ()))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (((SUM(TOTAL(vt1.c0)) IN ())) ISNULL);
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM rt0, vt1;
SELECT vt1.c0 FROM rt0, vt1 WHERE (TYPEOF(DISTINCT rt0.c1)) UNION ALL SELECT ALL vt1.c0 FROM rt0, vt1 WHERE ((NOT (TYPEOF(DISTINCT rt0.c1)))) UNION ALL SELECT vt1.c0 FROM rt0, vt1 WHERE (((TYPEOF(DISTINCT rt0.c1)) ISNULL));
SELECT ALL vt1.c0 FROM rt0, vt1;
SELECT DISTINCT * FROM vt1, rt0;
SELECT DISTINCT * FROM vt1, rt0 WHERE (CASE ((x'5abf')IS NOT(vt1.c0))  WHEN ((((((((((((rt0.c0)AND(rt0.c2)))OR(rt0.c2)))AND(rt0.c2)))AND(x'')))OR(vt1.c0)))AND(rt0.c2)) THEN '-948132085' WHEN (rt0.c1 IN (rt0.c0)) THEN rt0.c2 WHEN (rt0.c0 IN ()) THEN ((rt0.c0)AND(vt1.c0)) END) UNION SELECT DISTINCT * FROM vt1, rt0 WHERE ((NOT (CASE ((x'5abf')IS NOT(vt1.c0))  WHEN ((((((((((((rt0.c0)AND(rt0.c2)))OR(rt0.c2)))AND(rt0.c2)))AND(x'')))OR(vt1.c0)))AND(rt0.c2)) THEN '-948132085' WHEN (rt0.c1 IN (rt0.c0)) THEN rt0.c2 WHEN (rt0.c0 IN ()) THEN ((rt0.c0)AND(vt1.c0)) END))) UNION SELECT DISTINCT * FROM vt1, rt0 WHERE (((CASE ((x'5abf')IS NOT(vt1.c0))  WHEN ((((((((((((rt0.c0)AND(rt0.c2)))OR(rt0.c2)))AND(rt0.c2)))AND(x'')))OR(vt1.c0)))AND(rt0.c2)) THEN '-948132085' WHEN (rt0.c1 IN (rt0.c0)) THEN rt0.c2 WHEN (rt0.c0 IN ()) THEN ((rt0.c0)AND(vt1.c0)) END) ISNULL));
SELECT DISTINCT * FROM vt1, rt0;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE (((((((((((rt0.c1)&(rt0.c2)))OR(((rt0.c1) ISNULL))))AND(rt0.c0)))AND((rt0.c2 IN ()))))AND(rt0.c0 COLLATE RTRIM))) GROUP BY rt0.c2, rt0.c1, rt0.c0 UNION SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (((((((((((rt0.c1)&(rt0.c2)))OR(((rt0.c1) ISNULL))))AND(rt0.c0)))AND((rt0.c2 IN ()))))AND(rt0.c0 COLLATE RTRIM))))) GROUP BY rt0.c2, rt0.c1, rt0.c0 UNION SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE (((((((((((((rt0.c1)&(rt0.c2)))OR(((rt0.c1) ISNULL))))AND(rt0.c0)))AND((rt0.c2 IN ()))))AND(rt0.c0 COLLATE RTRIM))) ISNULL)) GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT ALL rt0.c0 FROM rt0 CROSS JOIN vt1 ON ((((((((((vt1.c0)OR(rt0.c1)))AND(rt0.c2)))AND(rt0.c2)))AND(rt0.c2))) NOT NULL) GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 CROSS JOIN vt1 ON ((((((((((vt1.c0)OR(rt0.c1)))AND(rt0.c2)))AND(rt0.c2)))AND(rt0.c2))) NOT NULL) GROUP BY rt0.c0 HAVING TOTAL(CASE WHEN vt1.c0 THEN MIN(SUM(COUNT(TOTAL(rt0.c0)))) WHEN rt0.c0 THEN SUM(COUNT(rt0.c0)) WHEN rt0.c1 THEN GROUP_CONCAT(GROUP_CONCAT(0x4d9f9a13)) END) UNION ALL SELECT ALL rt0.c0 FROM rt0 CROSS JOIN vt1 ON ((((((((((vt1.c0)OR(rt0.c1)))AND(rt0.c2)))AND(rt0.c2)))AND(rt0.c2))) NOT NULL) GROUP BY rt0.c0 HAVING (NOT (TOTAL(CASE WHEN vt1.c0 THEN MIN(SUM(COUNT(TOTAL(rt0.c0)))) WHEN rt0.c0 THEN SUM(COUNT(rt0.c0)) WHEN rt0.c1 THEN GROUP_CONCAT(GROUP_CONCAT(0X4d9f9a13)) END))) UNION ALL SELECT rt0.c0 FROM rt0 CROSS JOIN vt1 ON ((((((((((vt1.c0)OR(rt0.c1)))AND(rt0.c2)))AND(rt0.c2)))AND(rt0.c2))) NOT NULL) GROUP BY rt0.c0 HAVING ((TOTAL(CASE WHEN vt1.c0 THEN MIN(SUM(COUNT(TOTAL(rt0.c0)))) WHEN rt0.c0 THEN SUM(COUNT(rt0.c0)) WHEN rt0.c1 THEN GROUP_CONCAT(GROUP_CONCAT(0X4d9f9a13)) END)) ISNULL);
SELECT * FROM vt1 INNER JOIN rt0 ON TYPEOF(DISTINCT rt0.c2) COLLATE BINARY;
SELECT ALL * FROM vt1 INNER JOIN rt0 ON TYPEOF(DISTINCT rt0.c2) COLLATE BINARY WHERE (vt1.c0 COLLATE BINARY COLLATE BINARY COLLATE RTRIM) UNION ALL SELECT ALL * FROM vt1 INNER JOIN rt0 ON TYPEOF(DISTINCT rt0.c2) COLLATE BINARY WHERE ((NOT (vt1.c0 COLLATE BINARY COLLATE BINARY COLLATE RTRIM))) UNION ALL SELECT ALL * FROM vt1 INNER JOIN rt0 ON TYPEOF(DISTINCT rt0.c2) COLLATE BINARY WHERE (((vt1.c0 COLLATE BINARY COLLATE BINARY COLLATE RTRIM) ISNULL));
SELECT * FROM vt1 INNER JOIN rt0 ON TYPEOF(DISTINCT rt0.c2) COLLATE BINARY;
SELECT DISTINCT rt0.c1, rt0.c2, vt1.c0, rt0.c0 FROM rt0, vt1;
SELECT DISTINCT rt0.c1, rt0.c2, vt1.c0, rt0.c0 FROM rt0, vt1 WHERE ((+ (((rt0.c2)IS NOT(rt0.c1))))) UNION SELECT DISTINCT rt0.c1, rt0.c2, vt1.c0, rt0.c0 FROM rt0, vt1 WHERE ((NOT ((+ (((rt0.c2)IS NOT(rt0.c1))))))) UNION SELECT DISTINCT rt0.c1, rt0.c2, vt1.c0, rt0.c0 FROM rt0, vt1 WHERE ((((+ (((rt0.c2)IS NOT(rt0.c1))))) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c2, vt1.c0, rt0.c0 FROM rt0, vt1;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 WHERE (CASE ((((rt0.c1)AND(rt0.c1)))OR(rt0.c2))  WHEN CAST(rt0.c2 AS TEXT) THEN ((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c1)) END) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0 WHERE ((NOT (CASE ((((rt0.c1)AND(rt0.c1)))OR(rt0.c2))  WHEN CAST(rt0.c2 AS TEXT) THEN ((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c1)) END))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM rt0 WHERE (((CASE ((((rt0.c1)AND(rt0.c1)))OR(rt0.c2))  WHEN CAST(rt0.c2 AS TEXT) THEN ((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c1)) END) ISNULL)) GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING SUM(MIN(vt1.c0)) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (SUM(MIN(vt1.c0)))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((SUM(MIN(vt1.c0))) ISNULL);
SELECT rt0.c0 FROM vt1, rt0;
SELECT ALL rt0.c0 FROM vt1, rt0 WHERE (rt0.c1) UNION ALL SELECT ALL rt0.c0 FROM vt1, rt0 WHERE ((NOT (rt0.c1))) UNION ALL SELECT rt0.c0 FROM vt1, rt0 WHERE (((rt0.c1) ISNULL));
SELECT rt0.c0 FROM vt1, rt0;
SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0 FROM rt0 CROSS JOIN vt1 ON ((- (rt0.c0)) IN ((rt0.c1 IN (rt0.c1))));
SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0 FROM rt0 CROSS JOIN vt1 ON ((- (rt0.c0)) IN ((rt0.c1 IN (rt0.c1)))) WHERE (CAST(CAST(vt1.c0 AS BLOB) AS INTEGER)) UNION SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0 FROM rt0 CROSS JOIN vt1 ON ((- (rt0.c0)) IN ((rt0.c1 IN (rt0.c1)))) WHERE ((NOT (CAST(CAST(vt1.c0 AS BLOB) AS INTEGER)))) UNION SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0 FROM rt0 CROSS JOIN vt1 ON ((- (rt0.c0)) IN ((rt0.c1 IN (rt0.c1)))) WHERE (((CAST(CAST(vt1.c0 AS BLOB) AS INTEGER)) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0 FROM rt0 CROSS JOIN vt1 ON ((- (rt0.c0)) IN ((rt0.c1 IN (rt0.c1))));
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE (((((((rt0.c1)AND(rt0.c0)))OR(rt0.c2)))IS(((rt0.c0)-(rt0.c0))))) GROUP BY rt0.c0, rt0.c1, rt0.c2 UNION SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (((((((rt0.c1)AND(rt0.c0)))OR(rt0.c2)))IS(((rt0.c0)-(rt0.c0))))))) GROUP BY rt0.c0, rt0.c1, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE (((((((((rt0.c1)AND(rt0.c0)))OR(rt0.c2)))IS(((rt0.c0)-(rt0.c0))))) ISNULL)) GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING (~ (MAX(rt0.c2))) UNION ALL SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING (NOT ((~ (MAX(rt0.c2))))) UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING (((~ (MAX(rt0.c2)))) ISNULL);
SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING (~ (MAX(rt0.c2))) UNION ALL SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING (NOT ((~ (MAX(rt0.c2))))) UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING (((~ (MAX(rt0.c2)))) ISNULL);
SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT * FROM vt1;
SELECT ALL * FROM vt1 WHERE (CAST(((vt1.c0) BETWEEN (vt1.c0) AND (x'd1cf89f2')) AS NUMERIC)) UNION ALL SELECT * FROM vt1 WHERE ((NOT (CAST(((vt1.c0) BETWEEN (vt1.c0) AND (x'd1cf89f2')) AS NUMERIC)))) UNION ALL SELECT * FROM vt1 WHERE (((CAST(((vt1.c0) BETWEEN (vt1.c0) AND (x'd1cf89f2')) AS NUMERIC)) ISNULL));
SELECT * FROM vt1;
SELECT DISTINCT vt1.c0 FROM rt0, vt1;
SELECT DISTINCT vt1.c0 FROM rt0, vt1 WHERE ((((((rt0.c1)) BETWEEN (('1886380547')) AND ((rt0.c1))))OR(rt0.c2 COLLATE NOCASE))) UNION SELECT DISTINCT vt1.c0 FROM rt0, vt1 WHERE ((NOT ((((((rt0.c1)) BETWEEN (('1886380547')) AND ((rt0.c1))))OR(rt0.c2 COLLATE NOCASE))))) UNION SELECT DISTINCT vt1.c0 FROM rt0, vt1 WHERE ((((((((rt0.c1)) BETWEEN (('1886380547')) AND ((rt0.c1))))OR(rt0.c2 COLLATE NOCASE))) ISNULL));
SELECT DISTINCT vt1.c0 FROM rt0, vt1;
SELECT rt0.c2, rt0.c0 FROM rt0, vt1 GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM rt0, vt1 WHERE ((((((((rt0.c0)) BETWEEN ((rt0.c1)) AND ((vt1.c0))))OR(((rt0.c2)-(vt1.c0)))))OR(((vt1.c0)AND(rt0.c1))))) GROUP BY rt0.c2, rt0.c0 UNION SELECT rt0.c2, rt0.c0 FROM rt0, vt1 WHERE ((NOT ((((((((rt0.c0)) BETWEEN ((rt0.c1)) AND ((vt1.c0))))OR(((rt0.c2)-(vt1.c0)))))OR(((vt1.c0)AND(rt0.c1))))))) GROUP BY rt0.c2, rt0.c0 UNION SELECT rt0.c2, rt0.c0 FROM rt0, vt1 WHERE ((((((((((rt0.c0)) BETWEEN ((rt0.c1)) AND ((vt1.c0))))OR(((rt0.c2)-(vt1.c0)))))OR(((vt1.c0)AND(rt0.c1))))) ISNULL)) GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM rt0, vt1 GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING TOTAL(rt0.c1) UNION ALL SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT (TOTAL(rt0.c1))) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((TOTAL(rt0.c1)) ISNULL);
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING TOTAL(rt0.c1) UNION ALL SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT (TOTAL(rt0.c1))) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((TOTAL(rt0.c1)) ISNULL);
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL * FROM vt1, rt0;
SELECT * FROM vt1, rt0 WHERE ((((NULL)) BETWEEN ((((rt0.c2)>=(rt0.c1)))) AND ((rt0.c2)))) UNION ALL SELECT ALL * FROM vt1 NOT INDEXED, rt0 WHERE ((NOT ((((NULL)) BETWEEN ((((rt0.c2)>=(rt0.c1)))) AND ((rt0.c2)))))) UNION ALL SELECT * FROM vt1, rt0 WHERE ((((((NULL)) BETWEEN ((((rt0.c2)>=(rt0.c1)))) AND ((rt0.c2)))) ISNULL));
SELECT ALL * FROM vt1, rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((rt0.c0)<<(CAST(rt0.c2 AS INTEGER)))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((rt0.c0)<<(CAST(rt0.c2 AS INTEGER)))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((rt0.c0)<<(CAST(rt0.c2 AS INTEGER)))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE (((CAST(vt1.c0 AS NUMERIC))<((NOT (vt1.c0))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (((CAST(vt1.c0 AS NUMERIC))<((NOT (vt1.c0))))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE (((((CAST(vt1.c0 AS NUMERIC))<((NOT (vt1.c0))))) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT rt0.c0 FROM rt0, vt1 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0, vt1 GROUP BY rt0.c0 HAVING TOTAL(MIN(rt0.c1)) UNION ALL SELECT rt0.c0 FROM rt0, vt1 GROUP BY rt0.c0 HAVING (NOT (TOTAL(MIN(rt0.c1)))) UNION ALL SELECT ALL rt0.c0 FROM rt0, vt1 GROUP BY rt0.c0 HAVING ((TOTAL(MIN(rt0.c1))) ISNULL);
SELECT ALL * FROM rt0;
SELECT * FROM rt0 WHERE ((NOT (SUBSTR(rt0.c1, rt0.c1)))) UNION ALL SELECT * FROM rt0 WHERE ((NOT ((NOT (SUBSTR(rt0.c1, rt0.c1)))))) UNION ALL SELECT ALL * FROM rt0 WHERE ((((NOT (SUBSTR(rt0.c1, rt0.c1)))) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (CAST(((rt0.c1)<(rt0.c1)) AS REAL)) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (CAST(((rt0.c1)<(rt0.c1)) AS REAL)))) UNION SELECT DISTINCT * FROM rt0 WHERE (((CAST(((rt0.c1)<(rt0.c1)) AS REAL)) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE (((TRIM(rt0.c1)) BETWEEN (-474928667) AND (CAST(rt0.c0 AS INTEGER)))) GROUP BY rt0.c2, rt0.c0, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (((TRIM(rt0.c1)) BETWEEN (-474928667) AND (CAST(rt0.c0 AS INTEGER)))))) GROUP BY rt0.c2, rt0.c0, rt0.c1 UNION SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE (((((TRIM(rt0.c1)) BETWEEN (-474928667) AND (CAST(rt0.c0 AS INTEGER)))) ISNULL)) GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING CAST(((COUNT(*)) NOT NULL) AS NUMERIC) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING (NOT (CAST(((COUNT(*)) NOT NULL) AS NUMERIC))) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING ((CAST(((COUNT(*)) NOT NULL) AS NUMERIC)) ISNULL);
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING CAST(((COUNT(*)) NOT NULL) AS NUMERIC) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING (NOT (CAST(((COUNT(*)) NOT NULL) AS NUMERIC))) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING ((CAST(((COUNT(*)) NOT NULL) AS NUMERIC)) ISNULL);
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL MAX(((((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1))), rt0.c0, x'03d6'))<((((((x'')OR(vt1.c0)))AND(rt0.c2)), TRIM(vt1.c0, '-518459533'), CASE WHEN vt1.c0 THEN 0.814261320807622 WHEN '' THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 END)))) FROM rt0, vt1;
SELECT ALL * FROM vt1 NOT INDEXED, rt0;
SELECT * FROM vt1, rt0 WHERE ((((rt0.c1)IS(vt1.c0)) IN (rt0.c2))) UNION ALL SELECT ALL * FROM vt1, rt0 WHERE ((NOT ((((rt0.c1)IS(vt1.c0)) IN (rt0.c2))))) UNION ALL SELECT ALL * FROM vt1, rt0 WHERE ((((((rt0.c1)IS(vt1.c0)) IN (rt0.c2))) ISNULL));
SELECT ALL * FROM vt1 NOT INDEXED, rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((((rt0.c1) NOTNULL))>(CASE rt0.c2  WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c0 END))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((((rt0.c1) NOTNULL))>(CASE rt0.c2  WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c0 END))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((((rt0.c1) NOTNULL))>(CASE rt0.c2  WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c0 END))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT vt1.c0, rt0.c0, rt0.c1 FROM rt0, vt1 GROUP BY vt1.c0, rt0.c0, rt0.c1;
SELECT ALL vt1.c0, rt0.c0, rt0.c1 FROM rt0, vt1 WHERE (CASE ((vt1.c0) IS FALSE)  WHEN SQLITE_VERSION() THEN ((((vt1.c0)OR(rt0.c1)))OR(rt0.c0)) WHEN (((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((vt1.c0))) THEN (((rt0.c2, vt1.c0, rt0.c1))<=((NULL, rt0.c1, rt0.c1))) WHEN ((rt0.c1) ISNULL) THEN (((rt0.c2)) BETWEEN ((vt1.c0)) AND ((rt0.c2))) ELSE ((rt0.c2)/(rt0.c0)) END) GROUP BY vt1.c0, rt0.c0, rt0.c1 UNION SELECT ALL vt1.c0, rt0.c0, rt0.c1 FROM rt0, vt1 WHERE ((NOT (CASE ((vt1.c0) IS FALSE)  WHEN SQLITE_VERSION() THEN ((((vt1.c0)OR(rt0.c1)))OR(rt0.c0)) WHEN (((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((vt1.c0))) THEN (((rt0.c2, vt1.c0, rt0.c1))<=((NULL, rt0.c1, rt0.c1))) WHEN ((rt0.c1) ISNULL) THEN (((rt0.c2)) BETWEEN ((vt1.c0)) AND ((rt0.c2))) ELSE ((rt0.c2)/(rt0.c0)) END))) GROUP BY vt1.c0, rt0.c0, rt0.c1 UNION SELECT ALL vt1.c0, rt0.c0, rt0.c1 FROM rt0, vt1 WHERE (((CASE ((vt1.c0) IS FALSE)  WHEN SQLITE_VERSION() THEN ((((vt1.c0)OR(rt0.c1)))OR(rt0.c0)) WHEN (((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((vt1.c0))) THEN (((rt0.c2, vt1.c0, rt0.c1))<=((NULL, rt0.c1, rt0.c1))) WHEN ((rt0.c1) ISNULL) THEN (((rt0.c2)) BETWEEN ((vt1.c0)) AND ((rt0.c2))) ELSE ((rt0.c2)/(rt0.c0)) END) ISNULL)) GROUP BY vt1.c0, rt0.c0, rt0.c1;
SELECT vt1.c0, rt0.c0, rt0.c1 FROM rt0, vt1 GROUP BY vt1.c0, rt0.c0, rt0.c1;
SELECT ALL vt1.c0, rt0.c2, rt0.c0 FROM rt0, vt1 GROUP BY vt1.c0, rt0.c2, rt0.c0;
SELECT vt1.c0, rt0.c2, rt0.c0 FROM rt0, vt1 GROUP BY vt1.c0, rt0.c2, rt0.c0 HAVING AVG(((COUNT(NULL)) NOT NULL)) UNION ALL SELECT vt1.c0, rt0.c2, rt0.c0 FROM rt0, vt1 GROUP BY vt1.c0, rt0.c2, rt0.c0 HAVING (NOT (AVG(((COUNT(NULL)) NOT NULL)))) UNION ALL SELECT ALL vt1.c0, rt0.c2, rt0.c0 FROM rt0, vt1 GROUP BY vt1.c0, rt0.c2, rt0.c0 HAVING ((AVG(((COUNT(NULL)) NOT NULL))) ISNULL);
SELECT rt0.c0, rt0.c1, vt1.c0 FROM vt1, rt0;
SELECT ALL rt0.c0, rt0.c1, vt1.c0 FROM vt1, rt0 WHERE ((('274068275') IS FALSE)) UNION ALL SELECT ALL rt0.c0, rt0.c1, vt1.c0 FROM vt1, rt0 WHERE ((NOT ((('274068275') IS FALSE)))) UNION ALL SELECT ALL rt0.c0, rt0.c1, vt1.c0 FROM vt1, rt0 WHERE ((((('274068275') IS FALSE)) ISNULL));
SELECT rt0.c0, rt0.c1, vt1.c0 FROM vt1, rt0;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((((vt1.c0)!=(vt1.c0)))*((((vt1.c0))>((vt1.c0)))))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT (((((vt1.c0)<>(vt1.c0)))*((((vt1.c0))>((vt1.c0)))))))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((((((vt1.c0)!=(vt1.c0)))*((((vt1.c0))>((vt1.c0)))))) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE (CASE WHEN json_array_length(vt1.c0) THEN ((vt1.c0)>=(0.9624866915867231)) WHEN ((vt1.c0)/(x'a215')) THEN (+ (vt1.c0)) WHEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) THEN ((vt1.c0) IS TRUE) WHEN ((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)) THEN '-1776066304' WHEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) THEN (vt1.c0 IN ()) END) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (CASE WHEN json_array_length(vt1.c0) THEN ((vt1.c0)>=(0.9624866915867231)) WHEN ((vt1.c0)/(x'a215')) THEN (+ (vt1.c0)) WHEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) THEN ((vt1.c0) IS TRUE) WHEN ((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)) THEN '-1776066304' WHEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) THEN (vt1.c0 IN ()) END))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE (((CASE WHEN json_array_length(vt1.c0) THEN ((vt1.c0)>=(0.9624866915867231)) WHEN ((vt1.c0)/(x'a215')) THEN (+ (vt1.c0)) WHEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) THEN ((vt1.c0) IS TRUE) WHEN ((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)) THEN '-1776066304' WHEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) THEN (vt1.c0 IN ()) END) ISNULL)) GROUP BY vt1.c0;
SELECT ALL rt0.c2, vt1.c0 FROM rt0, vt1 GROUP BY rt0.c2, vt1.c0;
SELECT rt0.c2, vt1.c0 FROM rt0, vt1 GROUP BY rt0.c2, vt1.c0 HAVING (+ (x'69aa')) UNION ALL SELECT rt0.c2, vt1.c0 FROM rt0, vt1 GROUP BY rt0.c2, vt1.c0 HAVING (NOT ((+ (x'69aa')))) UNION ALL SELECT ALL rt0.c2, vt1.c0 FROM rt0, vt1 GROUP BY rt0.c2, vt1.c0 HAVING (((+ (x'69aa'))) ISNULL);
SELECT ALL rt0.c2, vt1.c0 FROM rt0, vt1 GROUP BY rt0.c2, vt1.c0;
SELECT rt0.c2, vt1.c0 FROM rt0, vt1 GROUP BY rt0.c2, vt1.c0 HAVING (+ (x'69aa')) UNION ALL SELECT rt0.c2, vt1.c0 FROM rt0, vt1 GROUP BY rt0.c2, vt1.c0 HAVING (NOT ((+ (x'69aa')))) UNION ALL SELECT ALL rt0.c2, vt1.c0 FROM rt0, vt1 GROUP BY rt0.c2, vt1.c0 HAVING (((+ (x'69aa'))) ISNULL);
SELECT ALL rt0.c2, vt1.c0 FROM rt0, vt1 GROUP BY rt0.c2, vt1.c0;
SELECT ALL rt0.c0, rt0.c2 FROM rt0, vt1;
SELECT rt0.c0, rt0.c2 FROM rt0, vt1 WHERE ((((rt0.c0)) BETWEEN ((LIKE(rt0.c1, rt0.c0, 's'))) AND ((CAST(rt0.c1 AS TEXT))))) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt0, vt1 WHERE ((NOT ((((rt0.c0)) BETWEEN ((LIKE(rt0.c1, rt0.c0, 's'))) AND ((CAST(rt0.c1 AS TEXT))))))) UNION ALL SELECT rt0.c0, rt0.c2 FROM rt0, vt1 WHERE ((((((rt0.c0)) BETWEEN ((LIKE(rt0.c1, rt0.c0, 's'))) AND ((CAST(rt0.c1 AS TEXT))))) ISNULL));
SELECT ALL rt0.c0, rt0.c2 FROM rt0, vt1;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE (COALESCE(DISTINCT ((-744672836)+(vt1.c0)), (+ (vt1.c0)))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT (COALESCE(DISTINCT ((-744672836)+(vt1.c0)), (+ (vt1.c0)))))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((COALESCE(DISTINCT ((-744672836)+(vt1.c0)), (+ (vt1.c0)))) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT ALL rt0.c2, rt0.c0 FROM vt1, rt0 GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM vt1, rt0 WHERE (((((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2)))>=(CASE x''  WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END))) GROUP BY rt0.c2, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c0 FROM vt1, rt0 WHERE ((NOT (((((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2)))>=(CASE x''  WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END))))) GROUP BY rt0.c2, rt0.c0 UNION SELECT rt0.c2, rt0.c0 FROM vt1, rt0 WHERE (((((((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2)))>=(CASE x''  WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END))) ISNULL)) GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM vt1, rt0 GROUP BY rt0.c2, rt0.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((LTRIM(vt1.c0)) BETWEEN ((((MIN(vt1.c0))) NOT BETWEEN ((vt1.c0)) AND ((SUM(SUM(vt1.c0)))))) AND (AVG(AVG(TOTAL(vt1.c0))))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (((LTRIM(vt1.c0)) BETWEEN ((((MIN(vt1.c0))) NOT BETWEEN ((vt1.c0)) AND ((SUM(SUM(vt1.c0)))))) AND (AVG(AVG(TOTAL(vt1.c0))))))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((((LTRIM(vt1.c0)) BETWEEN ((((MIN(vt1.c0))) NOT BETWEEN ((vt1.c0)) AND ((SUM(SUM(vt1.c0)))))) AND (AVG(AVG(TOTAL(vt1.c0)))))) ISNULL);
SELECT * FROM rt0, vt1;
SELECT ALL * FROM rt0, vt1 WHERE (COALESCE('-2112336850' COLLATE NOCASE, rt0.c2)) UNION ALL SELECT ALL * FROM rt0, vt1 WHERE ((NOT (COALESCE('-2112336850' COLLATE NOCASE, rt0.c2)))) UNION ALL SELECT ALL * FROM rt0, vt1 WHERE (((COALESCE('-2112336850' COLLATE NOCASE, rt0.c2)) ISNULL));
SELECT * FROM rt0, vt1;
SELECT DISTINCT * FROM rt0, vt1;
SELECT DISTINCT * FROM rt0, vt1 WHERE ((+ (DATETIME('Ve', rt0.c2, rt0.c2)))) UNION SELECT DISTINCT * FROM rt0, vt1 WHERE ((NOT ((+ (DATETIME('Ve', rt0.c2, rt0.c2)))))) UNION SELECT DISTINCT * FROM rt0, vt1 WHERE ((((+ (DATETIME('Ve', rt0.c2, rt0.c2)))) ISNULL));
SELECT DISTINCT * FROM rt0, vt1;
SELECT ALL rt0.c1, rt0.c2, rt0.c0, vt1.c0 FROM vt1, rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0, vt1.c0;
SELECT rt0.c1, rt0.c2, rt0.c0, vt1.c0 FROM vt1, rt0 WHERE (((NULL COLLATE RTRIM)OR((('?2') NOT BETWEEN (rt0.c1) AND (rt0.c2))))) GROUP BY rt0.c1, rt0.c2, rt0.c0, vt1.c0 UNION SELECT rt0.c1, rt0.c2, rt0.c0, vt1.c0 FROM vt1, rt0 WHERE ((NOT (((NULL COLLATE RTRIM)OR((('?2') NOT BETWEEN (rt0.c1) AND (rt0.c2))))))) GROUP BY rt0.c1, rt0.c2, rt0.c0, vt1.c0 UNION SELECT rt0.c1, rt0.c2, rt0.c0, vt1.c0 FROM vt1, rt0 WHERE (((((NULL COLLATE RTRIM)OR((('?2') NOT BETWEEN (rt0.c1) AND (rt0.c2))))) ISNULL)) GROUP BY rt0.c1, rt0.c2, rt0.c0, vt1.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0, vt1.c0 FROM vt1, rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0, vt1.c0;
SELECT ALL rt0.c2 FROM vt1, rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM vt1, rt0 GROUP BY rt0.c2 HAVING (((rt0.c2)) BETWEEN ((COUNT(MIN(rt0.c0)))) AND ((rt0.c1))) UNION ALL SELECT rt0.c2 FROM vt1, rt0 GROUP BY rt0.c2 HAVING (NOT ((((rt0.c2)) BETWEEN ((COUNT(MIN(rt0.c0)))) AND ((rt0.c1))))) UNION ALL SELECT ALL rt0.c2 FROM vt1, rt0 GROUP BY rt0.c2 HAVING (((((rt0.c2)) BETWEEN ((COUNT(MIN(rt0.c0)))) AND ((rt0.c1)))) ISNULL);
SELECT rt0.c1, vt1.c0, rt0.c0, rt0.c2 FROM rt0, vt1;
SELECT ALL rt0.c1, vt1.c0, rt0.c0, rt0.c2 FROM rt0, vt1 WHERE (((CAST(vt1.c0 AS NUMERIC)) NOT BETWEEN ((NULL IN ())) AND (((rt0.c2) BETWEEN (rt0.c0) AND (vt1.c0))))) UNION ALL SELECT ALL rt0.c1, vt1.c0, rt0.c0, rt0.c2 FROM rt0, vt1 WHERE ((NOT (((CAST(vt1.c0 AS NUMERIC)) NOT BETWEEN ((NULL IN ())) AND (((rt0.c2) BETWEEN (rt0.c0) AND (vt1.c0))))))) UNION ALL SELECT ALL rt0.c1, vt1.c0, rt0.c0, rt0.c2 FROM rt0, vt1 WHERE (((((CAST(vt1.c0 AS NUMERIC)) NOT BETWEEN ((NULL IN ())) AND (((rt0.c2) BETWEEN (rt0.c0) AND (vt1.c0))))) ISNULL));
SELECT rt0.c1, vt1.c0, rt0.c0, rt0.c2 FROM rt0, vt1;
SELECT DISTINCT vt1.c0 FROM vt1 INNER JOIN rt0 ON COALESCE(DISTINCT COALESCE(rt0.c2, vt1.c0), (vt1.c0 IN ()), (rt0.c0 IN ()), ((((rt0.c0)AND(rt0.c1)))OR(rt0.c0)));
SELECT DISTINCT vt1.c0 FROM vt1 INNER JOIN rt0 ON COALESCE(DISTINCT COALESCE(rt0.c2, vt1.c0), (vt1.c0 IN ()), (rt0.c0 IN ()), ((((rt0.c0)AND(rt0.c1)))OR(rt0.c0))) WHERE (((((((((NULLIF(DISTINCT vt1.c0, rt0.c1))AND(((rt0.c0)GLOB(vt1.c0)))))OR(LIKELY(rt0.c2))))OR((+ (vt1.c0)))))AND(((vt1.c0)<(rt0.c0))))) UNION SELECT DISTINCT vt1.c0 FROM vt1 INNER JOIN rt0 ON COALESCE(DISTINCT COALESCE(rt0.c2, vt1.c0), (vt1.c0 IN ()), (rt0.c0 IN ()), ((((rt0.c0)AND(rt0.c1)))OR(rt0.c0))) WHERE ((NOT (((((((((NULLIF(DISTINCT vt1.c0, rt0.c1))AND(((rt0.c0)GLOB(vt1.c0)))))OR(LIKELY(rt0.c2))))OR((+ (vt1.c0)))))AND(((vt1.c0)<(rt0.c0))))))) UNION SELECT DISTINCT vt1.c0 FROM vt1 INNER JOIN rt0 ON COALESCE(DISTINCT COALESCE(rt0.c2, vt1.c0), (vt1.c0 IN ()), (rt0.c0 IN ()), ((((rt0.c0)AND(rt0.c1)))OR(rt0.c0))) WHERE (((((((((((NULLIF(DISTINCT vt1.c0, rt0.c1))AND(((rt0.c0)GLOB(vt1.c0)))))OR(LIKELY(rt0.c2))))OR((+ (vt1.c0)))))AND(((vt1.c0)<(rt0.c0))))) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1 INNER JOIN rt0 ON COALESCE(DISTINCT COALESCE(rt0.c2, vt1.c0), (vt1.c0 IN ()), (rt0.c0 IN ()), ((((rt0.c0)AND(rt0.c1)))OR(rt0.c0)));
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 NOT INDEXED WHERE ((((((0.017733372452545804, vt1.c0, vt1.c0))>((vt1.c0, vt1.c0, vt1.c0))))IS(((((vt1.c0)OR(vt1.c0)))OR(vt1.c0))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT ((((((0.017733372452545804, vt1.c0, vt1.c0))>((vt1.c0, vt1.c0, vt1.c0))))IS(((((vt1.c0)OR(vt1.c0)))OR(vt1.c0))))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((((((((0.017733372452545804, vt1.c0, vt1.c0))>((vt1.c0, vt1.c0, vt1.c0))))IS(((((vt1.c0)OR(vt1.c0)))OR(vt1.c0))))) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING GROUP_CONCAT(CAST(rt0.c0 AS NUMERIC)) UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT (GROUP_CONCAT(CAST(rt0.c0 AS NUMERIC)))) UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING ((GROUP_CONCAT(CAST(rt0.c0 AS NUMERIC))) ISNULL);
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING GROUP_CONCAT(CAST(rt0.c0 AS NUMERIC)) UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT (GROUP_CONCAT(CAST(rt0.c0 AS NUMERIC)))) UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING ((GROUP_CONCAT(CAST(rt0.c0 AS NUMERIC))) ISNULL);
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT * FROM vt1;
SELECT * FROM vt1 WHERE ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) IN (CAST(vt1.c0 AS NUMERIC)))) UNION ALL SELECT * FROM vt1 WHERE ((NOT ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) IN (CAST(vt1.c0 AS NUMERIC)))))) UNION ALL SELECT * FROM vt1 WHERE ((((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) IN (CAST(vt1.c0 AS NUMERIC)))) ISNULL));
SELECT * FROM vt1;
SELECT DISTINCT rt0.c0 FROM rt0, vt1;
SELECT DISTINCT rt0.c0 FROM rt0, vt1 WHERE (((((((((CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN vt1.c0 ELSE rt0.c0 END)OR(((rt0.c0) IS TRUE))))OR((~ (rt0.c0)))))AND(CASE WHEN vt1.c0 THEN rt0.c0 END)))AND((((rt0.c2))=((rt0.c2)))))) UNION SELECT DISTINCT rt0.c0 FROM rt0, vt1 WHERE ((NOT (((((((((CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN vt1.c0 ELSE rt0.c0 END)OR(((rt0.c0) IS TRUE))))OR((~ (rt0.c0)))))AND(CASE WHEN vt1.c0 THEN rt0.c0 END)))AND((((rt0.c2))==((rt0.c2)))))))) UNION SELECT DISTINCT rt0.c0 FROM rt0, vt1 WHERE (((((((((((CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN vt1.c0 ELSE rt0.c0 END)OR(((rt0.c0) IS TRUE))))OR((~ (rt0.c0)))))AND(CASE WHEN vt1.c0 THEN rt0.c0 END)))AND((((rt0.c2))==((rt0.c2)))))) ISNULL));
SELECT DISTINCT rt0.c0 FROM rt0, vt1;
SELECT ALL vt1.c0, rt0.c2 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c2;
SELECT ALL vt1.c0, rt0.c2 FROM vt1, rt0 WHERE (CASE WHEN vt1.c0 THEN rt0.c0 ELSE rt0.c2 END COLLATE RTRIM) GROUP BY vt1.c0, rt0.c2 UNION SELECT vt1.c0, rt0.c2 FROM vt1, rt0 WHERE ((NOT (CASE WHEN vt1.c0 THEN rt0.c0 ELSE rt0.c2 END COLLATE RTRIM))) GROUP BY vt1.c0, rt0.c2 UNION SELECT ALL vt1.c0, rt0.c2 FROM vt1, rt0 WHERE (((CASE WHEN vt1.c0 THEN rt0.c0 ELSE rt0.c2 END COLLATE RTRIM) ISNULL)) GROUP BY vt1.c0, rt0.c2;
SELECT ALL vt1.c0, rt0.c2 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c2;
SELECT ALL rt0.c2, rt0.c1 FROM rt0, vt1 GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c2, rt0.c1 FROM rt0, vt1 GROUP BY rt0.c2, rt0.c1 HAVING CASE WHEN ((((MIN(TOTAL(SUM(vt1.c0))))AND(GROUP_CONCAT(vt1.c0))))OR(rt0.c0)) THEN MIN(AVG(GROUP_CONCAT(rt0.c2))) END UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM rt0, vt1 GROUP BY rt0.c2, rt0.c1 HAVING (NOT (CASE WHEN ((((MIN(TOTAL(SUM(vt1.c0))))AND(GROUP_CONCAT(vt1.c0))))OR(rt0.c0)) THEN MIN(AVG(GROUP_CONCAT(rt0.c2))) END)) UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM rt0, vt1 GROUP BY rt0.c2, rt0.c1 HAVING ((CASE WHEN ((((MIN(TOTAL(SUM(vt1.c0))))AND(GROUP_CONCAT(vt1.c0))))OR(rt0.c0)) THEN MIN(AVG(GROUP_CONCAT(rt0.c2))) END) ISNULL);
SELECT ALL * FROM rt0 FULL OUTER JOIN vt1 ON IFNULL((vt1.c0 IN ()), CASE rt0.c1  WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 WHEN vt1.c0 THEN rt0.c2 ELSE rt0.c2 END);
SELECT * FROM rt0 FULL OUTER JOIN vt1 ON IFNULL((vt1.c0 IN ()), CASE rt0.c1  WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 WHEN vt1.c0 THEN rt0.c2 ELSE rt0.c2 END) WHERE ((vt1.c0 IN ()) COLLATE BINARY) UNION ALL SELECT * FROM rt0 FULL OUTER JOIN vt1 ON IFNULL((vt1.c0 IN ()), CASE rt0.c1  WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 WHEN vt1.c0 THEN rt0.c2 ELSE rt0.c2 END) WHERE ((NOT ((vt1.c0 IN ()) COLLATE BINARY))) UNION ALL SELECT ALL * FROM rt0 FULL OUTER JOIN vt1 ON IFNULL((vt1.c0 IN ()), CASE rt0.c1  WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 WHEN vt1.c0 THEN rt0.c2 ELSE rt0.c2 END) WHERE ((((vt1.c0 IN ()) COLLATE BINARY) ISNULL));
SELECT ALL * FROM rt0 FULL OUTER JOIN vt1 ON IFNULL((vt1.c0 IN ()), CASE rt0.c1  WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 WHEN vt1.c0 THEN rt0.c2 ELSE rt0.c2 END);
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((0.4176329152003848)<=((vt1.c0 IN ())))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT (((0.4176329152003848)<=((vt1.c0 IN ())))))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((((0.4176329152003848)<=((vt1.c0 IN ())))) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT rt0.c1 FROM rt0 NOT INDEXED GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 WHERE ('') GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0 WHERE ((NOT (''))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0 WHERE ((('') ISNULL)) GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 NOT INDEXED GROUP BY rt0.c1;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING COUNT(COUNT(TOTAL(MAX(AVG(MAX(vt1.c0)))))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (COUNT(COUNT(TOTAL(MAX(AVG(MAX(vt1.c0)))))))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((COUNT(COUNT(TOTAL(MAX(AVG(MAX(vt1.c0))))))) ISNULL);
SELECT rt0.c1 FROM rt0;
SELECT rt0.c1 FROM rt0 WHERE (((((rt0.c0)%(rt0.c0)))IS NOT((((rt0.c2, rt0.c2, rt0.c1, rt0.c2, rt0.c0)) NOT BETWEEN ((rt0.c1, rt0.c1, rt0.c1, rt0.c1, rt0.c1)) AND ((rt0.c0, rt0.c0, 'D''t', '533829872', rt0.c2)))))) UNION ALL SELECT ALL rt0.c1 FROM rt0 WHERE ((NOT (((((rt0.c0)%(rt0.c0)))IS NOT((((rt0.c2, rt0.c2, rt0.c1, rt0.c2, rt0.c0)) NOT BETWEEN ((rt0.c1, rt0.c1, rt0.c1, rt0.c1, rt0.c1)) AND ((rt0.c0, rt0.c0, 'D''t', '533829872', rt0.c2)))))))) UNION ALL SELECT rt0.c1 FROM rt0 WHERE (((((((rt0.c0)%(rt0.c0)))IS NOT((((rt0.c2, rt0.c2, rt0.c1, rt0.c2, rt0.c0)) NOT BETWEEN ((rt0.c1, rt0.c1, rt0.c1, rt0.c1, rt0.c1)) AND ((rt0.c0, rt0.c0, 'D''t', '533829872', rt0.c2)))))) ISNULL));
SELECT rt0.c1 FROM rt0;
SELECT DISTINCT vt1.c0 FROM rt0, vt1;
SELECT DISTINCT vt1.c0 FROM rt0, vt1 WHERE ((+ (vt1.c0 COLLATE RTRIM))) UNION SELECT DISTINCT vt1.c0 FROM rt0, vt1 WHERE ((NOT ((+ (vt1.c0 COLLATE RTRIM))))) UNION SELECT DISTINCT vt1.c0 FROM rt0, vt1 WHERE ((((+ (vt1.c0 COLLATE RTRIM))) ISNULL));
SELECT DISTINCT vt1.c0 FROM rt0, vt1;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE ((((vt1.c0)!=(NULL)) IN (CAST(vt1.c0 AS NUMERIC)))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT ((((vt1.c0)!=(NULL)) IN (CAST(vt1.c0 AS NUMERIC)))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((((((vt1.c0)!=(NULL)) IN (CAST(vt1.c0 AS NUMERIC)))) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING SUM(COUNT(*)) UNION ALL SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING (NOT (SUM(COUNT(*)))) UNION ALL SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING ((SUM(COUNT(*))) ISNULL);
SELECT ALL * FROM vt1;
SELECT ALL * FROM vt1 WHERE (0.5842886684328561) UNION ALL SELECT ALL * FROM vt1 WHERE ((NOT (0.5842886684328561))) UNION ALL SELECT ALL * FROM vt1 WHERE (((0.5842886684328561) ISNULL));
SELECT ALL * FROM vt1;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (CASE '姆qK+'  WHEN ((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)) THEN (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))) ELSE ((vt1.c0) ISNULL) END) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (CASE '姆qK+'  WHEN ((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)) THEN (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))) ELSE ((vt1.c0) ISNULL) END))) UNION SELECT DISTINCT * FROM vt1 WHERE (((CASE '姆qK+'  WHEN ((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)) THEN (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))) ELSE ((vt1.c0) ISNULL) END) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c1, rt0.c2 FROM rt0 WHERE (((((rt0.c0) IS FALSE))/(((((rt0.c1)OR(rt0.c2)))OR(rt0.c0))))) GROUP BY rt0.c1, rt0.c2 UNION SELECT rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (((((rt0.c0) IS FALSE))/(((((rt0.c1)OR(rt0.c2)))OR(rt0.c0))))))) GROUP BY rt0.c1, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c2 FROM rt0 WHERE (((((((rt0.c0) IS FALSE))/(((((rt0.c1)OR(rt0.c2)))OR(rt0.c0))))) ISNULL)) GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING AVG(COUNT(COUNT(SUM(vt1.c0)))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (AVG(COUNT(COUNT(SUM(vt1.c0)))))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((AVG(COUNT(COUNT(SUM(vt1.c0))))) ISNULL);
SELECT ALL * FROM vt1;
SELECT ALL * FROM vt1 WHERE (((((((vt1.c0)>(vt1.c0)))OR('-344917080')))AND(vt1.c0 COLLATE BINARY))) UNION ALL SELECT ALL * FROM vt1 WHERE ((NOT (((((((vt1.c0)>(vt1.c0)))OR('-344917080')))AND(vt1.c0 COLLATE BINARY))))) UNION ALL SELECT ALL * FROM vt1 WHERE (((((((((vt1.c0)>(vt1.c0)))OR('-344917080')))AND(vt1.c0 COLLATE BINARY))) ISNULL));
SELECT ALL * FROM vt1;
SELECT DISTINCT rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c0 FROM rt0 WHERE (((((((rt0.c0)AND(x'c15b')))OR(rt0.c2)))OR(json_type(rt0.c2)))) UNION SELECT DISTINCT rt0.c0 FROM rt0 WHERE ((NOT (((((((rt0.c0)AND(x'c15b')))OR(rt0.c2)))OR(json_type(rt0.c2)))))) UNION SELECT DISTINCT rt0.c0 FROM rt0 WHERE (((((((((rt0.c0)AND(x'c15b')))OR(rt0.c2)))OR(json_type(rt0.c2)))) ISNULL));
SELECT DISTINCT rt0.c0 FROM rt0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE ((CASE vt1.c0  WHEN vt1.c0 THEN x'3f8e' ELSE vt1.c0 END IN (CAST(vt1.c0 AS REAL)))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT ((CASE vt1.c0  WHEN vt1.c0 THEN x'3f8e' ELSE vt1.c0 END IN (CAST(vt1.c0 AS REAL)))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((((CASE vt1.c0  WHEN vt1.c0 THEN x'3f8e' ELSE vt1.c0 END IN (CAST(vt1.c0 AS REAL)))) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT rt0.c2, vt1.c0 FROM rt0, vt1 GROUP BY rt0.c2, vt1.c0;
SELECT ALL rt0.c2, vt1.c0 FROM rt0, vt1 GROUP BY rt0.c2, vt1.c0 HAVING SUM(GROUP_CONCAT(COUNT(*))) UNION ALL SELECT ALL rt0.c2, vt1.c0 FROM rt0, vt1 GROUP BY rt0.c2, vt1.c0 HAVING (NOT (SUM(GROUP_CONCAT(COUNT(*))))) UNION ALL SELECT ALL rt0.c2, vt1.c0 FROM rt0, vt1 GROUP BY rt0.c2, vt1.c0 HAVING ((SUM(GROUP_CONCAT(COUNT(*)))) ISNULL);
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE (((((((rt0.c0)AND(rt0.c2)))OR(rt0.c1)))+(0X2b478fb2))) UNION ALL SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (((((((rt0.c0)AND(rt0.c2)))OR(rt0.c1)))+(0x2b478fb2))))) UNION ALL SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE (((((((((rt0.c0)AND(rt0.c2)))OR(rt0.c1)))+(0x2b478fb2))) ISNULL));
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0 WHERE (((((ABS(DISTINCT rt0.c1))AND(NULL)))OR(rt0.c2))) UNION SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (((((ABS(DISTINCT rt0.c1))AND(NULL)))OR(rt0.c2))))) UNION SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0 WHERE (((((((ABS(DISTINCT rt0.c1))AND(NULL)))OR(rt0.c2))) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0;
SELECT ALL rt0.c0, rt0.c2 FROM vt1, rt0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM vt1, rt0 WHERE ((((rt0.c1, vt1.c0, rt0.c0)) BETWEEN ((CAST('g)8ZM+8_' AS BLOB), ((((rt0.c0)OR(rt0.c2)))OR(rt0.c1)), -16210468)) AND ((rtreenode(vt1.c0, rt0.c0), TIME(vt1.c0, rt0.c0, vt1.c0), rt0.c0 COLLATE NOCASE)))) GROUP BY rt0.c0, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c2 FROM vt1, rt0 WHERE ((NOT ((((rt0.c1, vt1.c0, rt0.c0)) BETWEEN ((CAST('g)8ZM+8_' AS BLOB), ((((rt0.c0)OR(rt0.c2)))OR(rt0.c1)), -16210468)) AND ((rtreenode(vt1.c0, rt0.c0), TIME(vt1.c0, rt0.c0, vt1.c0), rt0.c0 COLLATE NOCASE)))))) GROUP BY rt0.c0, rt0.c2 UNION SELECT rt0.c0, rt0.c2 FROM vt1, rt0 WHERE ((((((rt0.c1, vt1.c0, rt0.c0)) BETWEEN ((CAST('g)8ZM+8_' AS BLOB), ((((rt0.c0)OR(rt0.c2)))OR(rt0.c1)), -16210468)) AND ((rtreenode(vt1.c0, rt0.c0), TIME(vt1.c0, rt0.c0, vt1.c0), rt0.c0 COLLATE NOCASE)))) ISNULL)) GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM vt1, rt0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c2, rt0.c1, rt0.c0, vt1.c0 FROM vt1, rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0, vt1.c0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0, vt1.c0 FROM vt1, rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0, vt1.c0 HAVING (COUNT(AVG(rt0.c2)) IN ()) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0, vt1.c0 FROM vt1, rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0, vt1.c0 HAVING (NOT ((COUNT(AVG(rt0.c2)) IN ()))) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0, vt1.c0 FROM vt1, rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0, vt1.c0 HAVING (((COUNT(AVG(rt0.c2)) IN ())) ISNULL);
SELECT ALL rt0.c2, rt0.c1, rt0.c0, vt1.c0 FROM vt1, rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0, vt1.c0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0, vt1.c0 FROM vt1, rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0, vt1.c0 HAVING (COUNT(AVG(rt0.c2)) IN ()) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0, vt1.c0 FROM vt1, rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0, vt1.c0 HAVING (NOT ((COUNT(AVG(rt0.c2)) IN ()))) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c0, vt1.c0 FROM vt1, rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0, vt1.c0 HAVING (((COUNT(AVG(rt0.c2)) IN ())) ISNULL);
SELECT ALL rt0.c2, rt0.c1, rt0.c0, vt1.c0 FROM vt1, rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0, vt1.c0;
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE ((((rt0.c0)) NOT BETWEEN ((CAST(rt0.c1 AS INTEGER))) AND (((rt0.c0 IN ()))))) UNION ALL SELECT * FROM rt0 WHERE ((NOT ((((rt0.c0)) NOT BETWEEN ((CAST(rt0.c1 AS INTEGER))) AND (((rt0.c0 IN ()))))))) UNION ALL SELECT ALL * FROM rt0 WHERE ((((((rt0.c0)) NOT BETWEEN ((CAST(rt0.c1 AS INTEGER))) AND (((rt0.c0 IN ()))))) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE (x'df14' COLLATE NOCASE) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT (x'df14' COLLATE NOCASE))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((x'df14' COLLATE NOCASE) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE (((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))AND(((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))))AND((vt1.c0 IN ())))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))AND(((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))))AND((vt1.c0 IN ())))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE (((((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))AND(((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))))AND((vt1.c0 IN ())))) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 FULL OUTER JOIN vt1 ON ((((CASE WHEN rt0.c0 THEN rt0.c2 ELSE 0.9624866915867231 END)AND((vt1.c0 IN ()))))OR(vt1.c0)) GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM rt0 FULL OUTER JOIN vt1 ON ((((CASE WHEN rt0.c0 THEN rt0.c2 ELSE 0.9624866915867231 END)AND((vt1.c0 IN ()))))OR(vt1.c0)) GROUP BY rt0.c2, rt0.c0 HAVING MAX(TOTAL(rt0.c2)) UNION ALL SELECT rt0.c2, rt0.c0 FROM rt0 FULL OUTER JOIN vt1 ON ((((CASE WHEN rt0.c0 THEN rt0.c2 ELSE 0.9624866915867231 END)AND((vt1.c0 IN ()))))OR(vt1.c0)) GROUP BY rt0.c2, rt0.c0 HAVING (NOT (MAX(TOTAL(rt0.c2)))) UNION ALL SELECT rt0.c2, rt0.c0 FROM rt0 FULL OUTER JOIN vt1 ON ((((CASE WHEN rt0.c0 THEN rt0.c2 ELSE 0.9624866915867231 END)AND((vt1.c0 IN ()))))OR(vt1.c0)) GROUP BY rt0.c2, rt0.c0 HAVING ((MAX(TOTAL(rt0.c2))) ISNULL);
SELECT ALL * FROM vt1;
SELECT * FROM vt1 WHERE (CASE x'' COLLATE BINARY  WHEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END THEN (NOT (vt1.c0)) ELSE (((vt1.c0, vt1.c0, vt1.c0))<=((vt1.c0, vt1.c0, vt1.c0))) END) UNION ALL SELECT ALL * FROM vt1 WHERE ((NOT (CASE x'' COLLATE BINARY  WHEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END THEN (NOT (vt1.c0)) ELSE (((vt1.c0, vt1.c0, vt1.c0))<=((vt1.c0, vt1.c0, vt1.c0))) END))) UNION ALL SELECT * FROM vt1 WHERE (((CASE x'' COLLATE BINARY  WHEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END THEN (NOT (vt1.c0)) ELSE (((vt1.c0, vt1.c0, vt1.c0))<=((vt1.c0, vt1.c0, vt1.c0))) END) ISNULL));
SELECT ALL * FROM vt1;
SELECT DISTINCT * FROM vt1, rt0;
SELECT DISTINCT * FROM vt1, rt0 WHERE (0.45264166679172835) UNION SELECT DISTINCT * FROM vt1, rt0 WHERE ((NOT (0.45264166679172835))) UNION SELECT DISTINCT * FROM vt1, rt0 WHERE (((0.45264166679172835) ISNULL));
SELECT DISTINCT * FROM vt1, rt0;
SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT rt0.c1, rt0.c0 FROM rt0 WHERE (((((((rt0.c1)AND(rt0.c1)))OR(rt0.c1))) NOT BETWEEN ((rt0.c0 IN ())) AND (rt0.c1 COLLATE BINARY))) GROUP BY rt0.c1, rt0.c0 UNION SELECT rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (((((((rt0.c1)AND(rt0.c1)))OR(rt0.c1))) NOT BETWEEN ((rt0.c0 IN ())) AND (rt0.c1 COLLATE BINARY))))) GROUP BY rt0.c1, rt0.c0 UNION SELECT rt0.c1, rt0.c0 FROM rt0 WHERE (((((((((rt0.c1)AND(rt0.c1)))OR(rt0.c1))) NOT BETWEEN ((rt0.c0 IN ())) AND (rt0.c1 COLLATE BINARY))) ISNULL)) GROUP BY rt0.c1, rt0.c0;
SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING (((rt0.c2 IN ())) IS TRUE) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING (NOT ((((rt0.c2 IN ())) IS TRUE))) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING (((((rt0.c2 IN ())) IS TRUE)) ISNULL);
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING (((rt0.c2 IN ())) IS TRUE) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING (NOT ((((rt0.c2 IN ())) IS TRUE))) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1 HAVING (((((rt0.c2 IN ())) IS TRUE)) ISNULL);
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL * FROM vt1, rt0;
SELECT * FROM vt1, rt0 WHERE (CAST(((vt1.c0) NOT BETWEEN (rt0.c1) AND (vt1.c0)) AS REAL)) UNION ALL SELECT * FROM vt1, rt0 WHERE ((NOT (CAST(((vt1.c0) NOT BETWEEN (rt0.c1) AND (vt1.c0)) AS REAL)))) UNION ALL SELECT * FROM vt1, rt0 WHERE (((CAST(((vt1.c0) NOT BETWEEN (rt0.c1) AND (vt1.c0)) AS REAL)) ISNULL));
SELECT ALL * FROM vt1, rt0;
SELECT DISTINCT * FROM vt1, rt0;
SELECT DISTINCT * FROM vt1, rt0 WHERE (((((((((rt0.c2)OR(rt0.c2)))AND(rt0.c2)))AND(rt0.c0)))AND(rt0.c0)) COLLATE BINARY) UNION SELECT DISTINCT * FROM vt1, rt0 WHERE ((NOT (((((((((rt0.c2)OR(rt0.c2)))AND(rt0.c2)))AND(rt0.c0)))AND(rt0.c0)) COLLATE BINARY))) UNION SELECT DISTINCT * FROM vt1, rt0 WHERE (((((((((((rt0.c2)OR(rt0.c2)))AND(rt0.c2)))AND(rt0.c0)))AND(rt0.c0)) COLLATE BINARY) ISNULL));
SELECT DISTINCT * FROM vt1, rt0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE ((((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)), (vt1.c0 IN (vt1.c0)), (((vt1.c0))<=((vt1.c0)))))<=((vt1.c0 COLLATE NOCASE, ((vt1.c0)%(vt1.c0)), vt1.c0 COLLATE BINARY)))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT ((((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)), (vt1.c0 IN (vt1.c0)), (((vt1.c0))<=((vt1.c0)))))<=((vt1.c0 COLLATE NOCASE, ((vt1.c0)%(vt1.c0)), vt1.c0 COLLATE BINARY)))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((((((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)), (vt1.c0 IN (vt1.c0)), (((vt1.c0))<=((vt1.c0)))))<=((vt1.c0 COLLATE NOCASE, ((vt1.c0)%(vt1.c0)), vt1.c0 COLLATE BINARY)))) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING (AVG(rt0.c1) IN ((((AVG(COUNT(*)), rt0.c2, rt0.c0))<>((rt0.c0, rt0.c0, TOTAL(rt0.c1)))))) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING (NOT ((AVG(rt0.c1) IN ((((AVG(COUNT(*)), rt0.c2, rt0.c0))!=((rt0.c0, rt0.c0, TOTAL(rt0.c1)))))))) UNION ALL SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1 HAVING (((AVG(rt0.c1) IN ((((AVG(COUNT(*)), rt0.c2, rt0.c0))<>((rt0.c0, rt0.c0, TOTAL(rt0.c1))))))) ISNULL);
SELECT ALL vt1.c0 FROM vt1;
SELECT vt1.c0 FROM vt1 WHERE (((((vt1.c0) NOT NULL))||((~ ('1057373243'))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (((((vt1.c0) NOT NULL))||((~ ('1057373243'))))))) UNION ALL SELECT vt1.c0 FROM vt1 WHERE (((((((vt1.c0) NOT NULL))||((~ ('1057373243'))))) ISNULL));
SELECT ALL vt1.c0 FROM vt1;
SELECT DISTINCT * FROM vt1, rt0;
SELECT DISTINCT * FROM vt1, rt0 WHERE (((rt0.c2)IS(((rt0.c1)||(rt0.c0))))) UNION SELECT DISTINCT * FROM vt1, rt0 WHERE ((NOT (((rt0.c2)IS(((rt0.c1)||(rt0.c0))))))) UNION SELECT DISTINCT * FROM vt1, rt0 WHERE (((((rt0.c2)IS(((rt0.c1)||(rt0.c0))))) ISNULL));
SELECT DISTINCT * FROM vt1, rt0;
SELECT ALL rt0.c1 FROM rt0, vt1 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0, vt1 WHERE (((((rt0.c1) ISNULL))IS NOT(rt0.c0 COLLATE RTRIM))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0, vt1 WHERE ((NOT (((((rt0.c1) ISNULL))IS NOT(rt0.c0 COLLATE RTRIM))))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0, vt1 WHERE (((((((rt0.c1) ISNULL))IS NOT(rt0.c0 COLLATE RTRIM))) ISNULL)) GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0, vt1 GROUP BY rt0.c1;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((((vt1.c0)||(vt1.c0)))-(MIN(''))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (((((vt1.c0)||(vt1.c0)))-(MIN(''))))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((((((vt1.c0)||(vt1.c0)))-(MIN('')))) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((((vt1.c0)||(vt1.c0)))-(MIN(''))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (((((vt1.c0)||(vt1.c0)))-(MIN(''))))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((((((vt1.c0)||(vt1.c0)))-(MIN('')))) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT MAX(((CASE WHEN rt0.c2 THEN rt0.c1 END) NOTNULL)) FROM vt1, rt0 ORDER BY LOWER((rt0.c0 IN ())), ((rt0.c2) NOT BETWEEN (CASE rt0.c0  WHEN rt0.c1 THEN rt0.c0 END) AND (((rt0.c0) IS TRUE))) ASC;
SELECT ALL * FROM vt1, rt0;
SELECT ALL * FROM vt1, rt0 WHERE (((((vt1.c0) BETWEEN (vt1.c0) AND (rt0.c0))) BETWEEN (CASE WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN '-619451615' WHEN rt0.c2 THEN rt0.c0 END) AND (CAST(rt0.c1 AS REAL)))) UNION ALL SELECT * FROM vt1, rt0 WHERE ((NOT (((((vt1.c0) BETWEEN (vt1.c0) AND (rt0.c0))) BETWEEN (CASE WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN '-619451615' WHEN rt0.c2 THEN rt0.c0 END) AND (CAST(rt0.c1 AS REAL)))))) UNION ALL SELECT * FROM vt1, rt0 WHERE (((((((vt1.c0) BETWEEN (vt1.c0) AND (rt0.c0))) BETWEEN (CASE WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN '-619451615' WHEN rt0.c2 THEN rt0.c0 END) AND (CAST(rt0.c1 AS REAL)))) ISNULL));
SELECT ALL * FROM vt1, rt0;
SELECT DISTINCT vt1.c0, rt0.c0, rt0.c1 FROM vt1, rt0;
SELECT DISTINCT vt1.c0, rt0.c0, rt0.c1 FROM vt1, rt0 WHERE (((CASE rt0.c2  WHEN rt0.c0 THEN vt1.c0 WHEN '-400958515' THEN rt0.c2 WHEN rt0.c1 THEN vt1.c0 ELSE rt0.c0 END)LIKE(((rt0.c2)>=(rt0.c0))))) UNION SELECT DISTINCT vt1.c0, rt0.c0, rt0.c1 FROM vt1, rt0 WHERE ((NOT (((CASE rt0.c2  WHEN rt0.c0 THEN vt1.c0 WHEN '-400958515' THEN rt0.c2 WHEN rt0.c1 THEN vt1.c0 ELSE rt0.c0 END)LIKE(((rt0.c2)>=(rt0.c0))))))) UNION SELECT DISTINCT vt1.c0, rt0.c0, rt0.c1 FROM vt1, rt0 WHERE (((((CASE rt0.c2  WHEN rt0.c0 THEN vt1.c0 WHEN '-400958515' THEN rt0.c2 WHEN rt0.c1 THEN vt1.c0 ELSE rt0.c0 END)LIKE(((rt0.c2)>=(rt0.c0))))) ISNULL));
SELECT DISTINCT vt1.c0, rt0.c0, rt0.c1 FROM vt1, rt0;
SELECT vt1.c0, rt0.c0, rt0.c1 FROM rt0, vt1 GROUP BY vt1.c0, rt0.c0, rt0.c1;
SELECT vt1.c0, rt0.c0, rt0.c1 FROM rt0, vt1 WHERE ((((rt0.c1 IN ())) BETWEEN (((rt0.c2) NOTNULL)) AND ((vt1.c0 IN ())))) GROUP BY vt1.c0, rt0.c0, rt0.c1 UNION SELECT ALL vt1.c0, rt0.c0, rt0.c1 FROM rt0, vt1 WHERE ((NOT ((((rt0.c1 IN ())) BETWEEN (((rt0.c2) NOTNULL)) AND ((vt1.c0 IN ())))))) GROUP BY vt1.c0, rt0.c0, rt0.c1 UNION SELECT vt1.c0, rt0.c0, rt0.c1 FROM rt0, vt1 WHERE ((((((rt0.c1 IN ())) BETWEEN (((rt0.c2) NOTNULL)) AND ((vt1.c0 IN ())))) ISNULL)) GROUP BY vt1.c0, rt0.c0, rt0.c1;
SELECT vt1.c0, rt0.c0, rt0.c1 FROM rt0, vt1 GROUP BY vt1.c0, rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING ((((COUNT(MAX(MIN(rt0.c1))))OR(CASE WHEN rt0.c2 THEN rt0.c2 ELSE MAX(rt0.c0) END)))AND(UPPER(-1598282232))) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING (NOT (((((COUNT(MAX(MIN(rt0.c1))))OR(CASE WHEN rt0.c2 THEN rt0.c2 ELSE MAX(rt0.c0) END)))AND(UPPER(-1598282232))))) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING ((((((COUNT(MAX(MIN(rt0.c1))))OR(CASE WHEN rt0.c2 THEN rt0.c2 ELSE MAX(rt0.c0) END)))AND(UPPER(-1598282232)))) ISNULL);
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE (((CASE '1143577622'  WHEN rt0.c2 THEN rt0.c0 ELSE 'db' END)==((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1)))))) UNION ALL SELECT * FROM rt0 WHERE ((NOT (((CASE '1143577622'  WHEN rt0.c2 THEN rt0.c0 ELSE 'db' END)=((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1)))))))) UNION ALL SELECT * FROM rt0 WHERE (((((CASE '1143577622'  WHEN rt0.c2 THEN rt0.c0 ELSE 'db' END)=((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1)))))) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT vt1.c0, rt0.c1 FROM rt0 FULL OUTER JOIN vt1 ON (((rt0.c2)) NOT BETWEEN ((-421942006)) AND ((rt0.c1 COLLATE NOCASE)));
SELECT DISTINCT vt1.c0, rt0.c1 FROM rt0 FULL OUTER JOIN vt1 ON (((rt0.c2)) NOT BETWEEN ((-421942006)) AND ((rt0.c1 COLLATE NOCASE))) WHERE ((~ (rt0.c2 COLLATE RTRIM))) UNION SELECT DISTINCT vt1.c0, rt0.c1 FROM rt0 FULL OUTER JOIN vt1 ON (((rt0.c2)) NOT BETWEEN ((-421942006)) AND ((rt0.c1 COLLATE NOCASE))) WHERE ((NOT ((~ (rt0.c2 COLLATE RTRIM))))) UNION SELECT DISTINCT vt1.c0, rt0.c1 FROM rt0 FULL OUTER JOIN vt1 ON (((rt0.c2)) NOT BETWEEN ((-421942006)) AND ((rt0.c1 COLLATE NOCASE))) WHERE ((((~ (rt0.c2 COLLATE RTRIM))) ISNULL));
SELECT DISTINCT vt1.c0, rt0.c1 FROM rt0 FULL OUTER JOIN vt1 ON (((rt0.c2)) NOT BETWEEN ((-421942006)) AND ((rt0.c1 COLLATE NOCASE)));
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 NOT INDEXED WHERE ((((((((((((((vt1.c0 IN ()))OR(CASE WHEN NULL THEN vt1.c0 ELSE vt1.c0 END)))AND(ABS(vt1.c0))))OR(((vt1.c0) ISNULL))))AND('-548949319')))AND((vt1.c0 IN (vt1.c0)))))AND(vt1.c0))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT ((((((((((((((vt1.c0 IN ()))OR(CASE WHEN NULL THEN vt1.c0 ELSE vt1.c0 END)))AND(ABS(vt1.c0))))OR(((vt1.c0) ISNULL))))AND('-548949319')))AND((vt1.c0 IN (vt1.c0)))))AND(vt1.c0))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((((((((((((((((vt1.c0 IN ()))OR(CASE WHEN NULL THEN vt1.c0 ELSE vt1.c0 END)))AND(ABS(vt1.c0))))OR(((vt1.c0) ISNULL))))AND('-548949319')))AND((vt1.c0 IN (vt1.c0)))))AND(vt1.c0))) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL rt0.c1, vt1.c0, rt0.c2 FROM vt1, rt0 GROUP BY rt0.c1, vt1.c0, rt0.c2;
SELECT ALL rt0.c1, vt1.c0, rt0.c2 FROM vt1, rt0 GROUP BY rt0.c1, vt1.c0, rt0.c2 HAVING TOTAL(CASE WHEN COUNT(*) THEN rt0.c1 ELSE AVG(rt0.c0) END) UNION ALL SELECT ALL rt0.c1, vt1.c0, rt0.c2 FROM vt1, rt0 GROUP BY rt0.c1, vt1.c0, rt0.c2 HAVING (NOT (TOTAL(CASE WHEN COUNT(*) THEN rt0.c1 ELSE AVG(rt0.c0) END))) UNION ALL SELECT rt0.c1, vt1.c0, rt0.c2 FROM vt1, rt0 GROUP BY rt0.c1, vt1.c0, rt0.c2 HAVING ((TOTAL(CASE WHEN COUNT(*) THEN rt0.c1 ELSE AVG(rt0.c0) END)) ISNULL);
SELECT ALL * FROM vt1;
SELECT * FROM vt1 WHERE ((((((vt1.c0 IN ()))AND(((vt1.c0)==(0x4c4d6e1e)))))OR((((vt1.c0)) NOT BETWEEN ((0.25136668631037073)) AND ((vt1.c0)))))) UNION ALL SELECT ALL * FROM vt1 WHERE ((NOT ((((((vt1.c0 IN ()))AND(((vt1.c0)=(0x4c4d6e1e)))))OR((((vt1.c0)) NOT BETWEEN ((0.25136668631037073)) AND ((vt1.c0)))))))) UNION ALL SELECT * FROM vt1 WHERE ((((((((vt1.c0 IN ()))AND(((vt1.c0)=(0X4c4d6e1e)))))OR((((vt1.c0)) NOT BETWEEN ((0.25136668631037073)) AND ((vt1.c0)))))) ISNULL));
SELECT ALL * FROM vt1;
SELECT DISTINCT * FROM vt1, rt0;
SELECT DISTINCT * FROM vt1, rt0 WHERE ((+ (CAST(rt0.c2 AS INTEGER)))) UNION SELECT DISTINCT * FROM vt1, rt0 WHERE ((NOT ((+ (CAST(rt0.c2 AS INTEGER)))))) UNION SELECT DISTINCT * FROM vt1, rt0 WHERE ((((+ (CAST(rt0.c2 AS INTEGER)))) ISNULL));
SELECT DISTINCT * FROM vt1, rt0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE (COALESCE(DISTINCT ((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)), ((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT (COALESCE(DISTINCT ((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)), ((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE (((COALESCE(DISTINCT ((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)), ((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT rt0.c2 FROM vt1, rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM vt1, rt0 GROUP BY rt0.c2 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c2 FROM vt1, rt0 GROUP BY rt0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c2 FROM vt1, rt0 GROUP BY rt0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c2 FROM vt1, rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM vt1, rt0 GROUP BY rt0.c2 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c2 FROM vt1, rt0 GROUP BY rt0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c2 FROM vt1, rt0 GROUP BY rt0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c2 FROM vt1, rt0 GROUP BY rt0.c2;
SELECT rt0.c0, rt0.c2, vt1.c0, rt0.c1 FROM rt0, vt1;
SELECT rt0.c0, rt0.c2, vt1.c0, rt0.c1 FROM rt0, vt1 WHERE (CAST(rt0.c1 AS INTEGER) COLLATE RTRIM) UNION ALL SELECT ALL rt0.c0, rt0.c2, vt1.c0, rt0.c1 FROM rt0, vt1 WHERE ((NOT (CAST(rt0.c1 AS INTEGER) COLLATE RTRIM))) UNION ALL SELECT rt0.c0, rt0.c2, vt1.c0, rt0.c1 FROM rt0, vt1 WHERE (((CAST(rt0.c1 AS INTEGER) COLLATE RTRIM) ISNULL));
SELECT rt0.c0, rt0.c2, vt1.c0, rt0.c1 FROM rt0, vt1;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE (CASE WHEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END THEN CAST(vt1.c0 AS BLOB) WHEN ((NULL) IS TRUE) THEN CAST(vt1.c0 AS INTEGER) WHEN ((vt1.c0)-(vt1.c0)) THEN ((vt1.c0)>(vt1.c0)) END) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT (CASE WHEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END THEN CAST(vt1.c0 AS BLOB) WHEN ((NULL) IS TRUE) THEN CAST(vt1.c0 AS INTEGER) WHEN ((vt1.c0)-(vt1.c0)) THEN ((vt1.c0)>(vt1.c0)) END))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((CASE WHEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END THEN CAST(vt1.c0 AS BLOB) WHEN ((NULL) IS TRUE) THEN CAST(vt1.c0 AS INTEGER) WHEN ((vt1.c0)-(vt1.c0)) THEN ((vt1.c0)>(vt1.c0)) END) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 WHERE (((((rt0.c0)<=(rt0.c2))) BETWEEN ((rt0.c1 IN ())) AND (((rt0.c2)LIKE(rt0.c1))))) GROUP BY rt0.c2, rt0.c1 UNION SELECT rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (((((rt0.c0)<=(rt0.c2))) BETWEEN ((rt0.c1 IN ())) AND (((rt0.c2)LIKE(rt0.c1))))))) GROUP BY rt0.c2, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c1 FROM rt0 WHERE (((((((rt0.c0)<=(rt0.c2))) BETWEEN ((rt0.c1 IN ())) AND (((rt0.c2)LIKE(rt0.c1))))) ISNULL)) GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING (+ (MIN(rt0.c2))) UNION ALL SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING (NOT ((+ (MIN(rt0.c2))))) UNION ALL SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING (((+ (MIN(rt0.c2)))) ISNULL);
SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING (+ (MIN(rt0.c2))) UNION ALL SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING (NOT ((+ (MIN(rt0.c2))))) UNION ALL SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING (((+ (MIN(rt0.c2)))) ISNULL);
SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT rt0.c1, vt1.c0, rt0.c2 FROM vt1, rt0;
SELECT rt0.c1, vt1.c0, rt0.c2 FROM vt1, rt0 WHERE ((((CASE x''  WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 ELSE '?j' END, DATE(rt0.c1, rt0.c1, rt0.c0, rt0.c0, rt0.c2), CAST(NULL AS TEXT)))>(((+ (rt0.c2)), ((rt0.c1)|(x'')), HEX(DISTINCT vt1.c0))))) UNION ALL SELECT rt0.c1, vt1.c0, rt0.c2 FROM vt1, rt0 WHERE ((NOT ((((CASE x''  WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 ELSE '?j' END, DATE(rt0.c1, rt0.c1, rt0.c0, rt0.c0, rt0.c2), CAST(NULL AS TEXT)))>(((+ (rt0.c2)), ((rt0.c1)|(x'')), HEX(DISTINCT vt1.c0))))))) UNION ALL SELECT rt0.c1, vt1.c0, rt0.c2 FROM vt1, rt0 WHERE ((((((CASE x''  WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 ELSE '?j' END, DATE(rt0.c1, rt0.c1, rt0.c0, rt0.c0, rt0.c2), CAST(NULL AS TEXT)))>(((+ (rt0.c2)), ((rt0.c1)|(x'')), HEX(DISTINCT vt1.c0))))) ISNULL));
SELECT rt0.c1, vt1.c0, rt0.c2 FROM vt1, rt0;
SELECT DISTINCT * FROM vt1 FULL OUTER JOIN rt0 ON ((json_extract(rt0.c1, rt0.c0)) NOT BETWEEN (rt0.c0 COLLATE BINARY) AND ((rt0.c2 IN ())));
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 WHERE (((0.4612950869668363)<>(rt0.c0)) COLLATE RTRIM) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0 WHERE ((NOT (((0.4612950869668363)<>(rt0.c0)) COLLATE RTRIM))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0 WHERE (((((0.4612950869668363)<>(rt0.c0)) COLLATE RTRIM) ISNULL)) GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING (+ (rt0.c1)) UNION ALL SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING (NOT ((+ (rt0.c1)))) UNION ALL SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING (((+ (rt0.c1))) ISNULL);
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING (+ (rt0.c1)) UNION ALL SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING (NOT ((+ (rt0.c1)))) UNION ALL SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING (((+ (rt0.c1))) ISNULL);
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT ALL * FROM vt1, rt0;
SELECT ALL * FROM vt1, rt0 WHERE (rt0.c2) UNION ALL SELECT * FROM vt1, rt0 WHERE ((NOT (rt0.c2))) UNION ALL SELECT * FROM vt1, rt0 WHERE (((rt0.c2) ISNULL));
SELECT ALL * FROM vt1, rt0;
SELECT DISTINCT rt0.c0 FROM rt0 NOT INDEXED, vt1;
SELECT DISTINCT rt0.c0 FROM rt0, vt1 WHERE (((((json_array_length(0Xffffffffeae368b6))OR((- (rt0.c1)))))AND(((rt0.c0) NOTNULL)))) UNION SELECT DISTINCT rt0.c0 FROM rt0, vt1 WHERE ((NOT (((((json_array_length(0Xffffffffeae368b6))OR((- (rt0.c1)))))AND(((rt0.c0) NOTNULL)))))) UNION SELECT DISTINCT rt0.c0 FROM rt0, vt1 WHERE (((((((json_array_length(0xffffffffeae368b6))OR((- (rt0.c1)))))AND(((rt0.c0) NOTNULL)))) ISNULL));
SELECT DISTINCT rt0.c0 FROM rt0 NOT INDEXED, vt1;
SELECT ALL vt1.c0 FROM vt1, rt0 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1, rt0 WHERE (CAST(((rt0.c1) IS TRUE) AS INTEGER)) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1, rt0 WHERE ((NOT (CAST(((rt0.c1) IS TRUE) AS INTEGER)))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1, rt0 WHERE (((CAST(((rt0.c1) IS TRUE) AS INTEGER)) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1, rt0 GROUP BY vt1.c0;
SELECT ALL rt0.c1 FROM vt1, rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM vt1, rt0 GROUP BY rt0.c1 HAVING 0xffffffffffffffff UNION ALL SELECT rt0.c1 FROM vt1, rt0 GROUP BY rt0.c1 HAVING (NOT (0xffffffffffffffff)) UNION ALL SELECT rt0.c1 FROM vt1, rt0 GROUP BY rt0.c1 HAVING ((0Xffffffffffffffff) ISNULL);
SELECT ALL rt0.c1 FROM vt1, rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM vt1, rt0 GROUP BY rt0.c1 HAVING 0xffffffffffffffff UNION ALL SELECT rt0.c1 FROM vt1, rt0 GROUP BY rt0.c1 HAVING (NOT (0xffffffffffffffff)) UNION ALL SELECT rt0.c1 FROM vt1, rt0 GROUP BY rt0.c1 HAVING ((0Xffffffffffffffff) ISNULL);
SELECT ALL rt0.c1 FROM vt1, rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c2 FROM rt0;
SELECT rt0.c2 FROM rt0 WHERE ((((((rt0.c0, rt0.c2, rt0.c0))<(('', rt0.c2, rt0.c2)))) NOT BETWEEN ((((rt0.c2, x'', NULL))>=((rt0.c2, rt0.c2, rt0.c1)))) AND (((rt0.c1)AND(rt0.c0))))) UNION ALL SELECT ALL rt0.c2 FROM rt0 WHERE ((NOT ((((((rt0.c0, rt0.c2, rt0.c0))<(('', rt0.c2, rt0.c2)))) NOT BETWEEN ((((rt0.c2, x'', NULL))>=((rt0.c2, rt0.c2, rt0.c1)))) AND (((rt0.c1)AND(rt0.c0))))))) UNION ALL SELECT rt0.c2 FROM rt0 WHERE ((((((((rt0.c0, rt0.c2, rt0.c0))<(('', rt0.c2, rt0.c2)))) NOT BETWEEN ((((rt0.c2, x'', NULL))>=((rt0.c2, rt0.c2, rt0.c1)))) AND (((rt0.c1)AND(rt0.c0))))) ISNULL));
SELECT ALL rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c1 FROM rt0, vt1;
SELECT DISTINCT rt0.c1 FROM rt0, vt1 WHERE ((+ ((((rt0.c0))<=((rt0.c1)))))) UNION SELECT DISTINCT rt0.c1 FROM rt0, vt1 WHERE ((NOT ((+ ((((rt0.c0))<=((rt0.c1)))))))) UNION SELECT DISTINCT rt0.c1 FROM rt0, vt1 WHERE ((((+ ((((rt0.c0))<=((rt0.c1)))))) ISNULL));
SELECT DISTINCT rt0.c1 FROM rt0, vt1;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((((rt0.c0))<=((rt0.c2))) COLLATE RTRIM) GROUP BY rt0.c2, rt0.c1, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT ((((rt0.c0))<=((rt0.c2))) COLLATE RTRIM))) GROUP BY rt0.c2, rt0.c1, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((((((rt0.c0))<=((rt0.c2))) COLLATE RTRIM) ISNULL)) GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING MAX((NULL IN (SUM(rt0.c1), rt0.c2))) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING (NOT (MAX((NULL IN (SUM(rt0.c1), rt0.c2))))) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0 HAVING ((MAX((NULL IN (SUM(rt0.c1), rt0.c2)))) ISNULL);
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE ((((rt0.c0 IN ())) NOT BETWEEN (((rt0.c1) BETWEEN ('-1040351965') AND (rt0.c0))) AND (((rt0.c2) NOT NULL)))) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT ((((rt0.c0 IN ())) NOT BETWEEN (((rt0.c1) BETWEEN ('-1040351965') AND (rt0.c0))) AND (((rt0.c2) NOT NULL)))))) UNION ALL SELECT * FROM rt0 WHERE ((((((rt0.c0 IN ())) NOT BETWEEN (((rt0.c1) BETWEEN ('-1040351965') AND (rt0.c0))) AND (((rt0.c2) NOT NULL)))) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE (CASE ((vt1.c0) IS FALSE)  WHEN ((vt1.c0)OR(vt1.c0)) THEN CAST(vt1.c0 AS TEXT) WHEN vt1.c0 COLLATE NOCASE THEN vt1.c0 WHEN ((vt1.c0)/(vt1.c0)) THEN ((0.9840681198457047)>=(vt1.c0)) ELSE (+ (vt1.c0)) END) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT (CASE ((vt1.c0) IS FALSE)  WHEN ((vt1.c0)OR(vt1.c0)) THEN CAST(vt1.c0 AS TEXT) WHEN vt1.c0 COLLATE NOCASE THEN vt1.c0 WHEN ((vt1.c0)/(vt1.c0)) THEN ((0.9840681198457047)>=(vt1.c0)) ELSE (+ (vt1.c0)) END))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((CASE ((vt1.c0) IS FALSE)  WHEN ((vt1.c0)OR(vt1.c0)) THEN CAST(vt1.c0 AS TEXT) WHEN vt1.c0 COLLATE NOCASE THEN vt1.c0 WHEN ((vt1.c0)/(vt1.c0)) THEN ((0.9840681198457047)>=(vt1.c0)) ELSE (+ (vt1.c0)) END) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT rt0.c0, rt0.c2 FROM vt1 RIGHT OUTER JOIN rt0 ON CAST(TYPEOF(rt0.c2) AS NUMERIC) GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM vt1 RIGHT OUTER JOIN rt0 ON CAST(TYPEOF(rt0.c2) AS NUMERIC) WHERE (TRIM(DISTINCT 0Xffffffff9ffc534c COLLATE NOCASE, (((rt0.c0)) BETWEEN ((rt0.c2)) AND ((vt1.c0))))) GROUP BY rt0.c0, rt0.c2 UNION SELECT rt0.c0, rt0.c2 FROM vt1 RIGHT OUTER JOIN rt0 ON CAST(TYPEOF(rt0.c2) AS NUMERIC) WHERE ((NOT (TRIM(DISTINCT 0xffffffff9ffc534c COLLATE NOCASE, (((rt0.c0)) BETWEEN ((rt0.c2)) AND ((vt1.c0))))))) GROUP BY rt0.c0, rt0.c2 UNION SELECT rt0.c0, rt0.c2 FROM vt1 RIGHT OUTER JOIN rt0 ON CAST(TYPEOF(rt0.c2) AS NUMERIC) WHERE (((TRIM(DISTINCT 0Xffffffff9ffc534c COLLATE NOCASE, (((rt0.c0)) BETWEEN ((rt0.c2)) AND ((vt1.c0))))) ISNULL)) GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c2 FROM vt1 RIGHT OUTER JOIN rt0 ON CAST(TYPEOF(rt0.c2) AS NUMERIC) GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING GROUP_CONCAT(TRIM(DISTINCT COUNT(*), rt0.c0)) UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT (GROUP_CONCAT(TRIM(DISTINCT COUNT(*), rt0.c0)))) UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING ((GROUP_CONCAT(TRIM(DISTINCT COUNT(*), rt0.c0))) ISNULL);
SELECT ALL * FROM vt1;
SELECT ALL * FROM vt1 WHERE (0.061565102120218373) UNION ALL SELECT ALL * FROM vt1 WHERE ((NOT (0.061565102120218373))) UNION ALL SELECT ALL * FROM vt1 WHERE (((0.061565102120218373) ISNULL));
SELECT ALL * FROM vt1;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE ((((((vt1.c0))<((vt1.c0)))) IS FALSE)) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT ((((((vt1.c0))<((vt1.c0)))) IS FALSE)))) UNION SELECT DISTINCT * FROM vt1 WHERE ((((((((vt1.c0))<((vt1.c0)))) IS FALSE)) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE (((((vt1.c0)>(vt1.c0))) IS TRUE)) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT (((((vt1.c0)>(vt1.c0))) IS TRUE)))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE (((((((vt1.c0)>(vt1.c0))) IS TRUE)) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT rt0.c0, rt0.c1 FROM vt1, rt0 GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c1 FROM vt1, rt0 GROUP BY rt0.c0, rt0.c1 HAVING AVG(SUM(COUNT(*))) UNION ALL SELECT rt0.c0, rt0.c1 FROM vt1, rt0 GROUP BY rt0.c0, rt0.c1 HAVING (NOT (AVG(SUM(COUNT(*))))) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM vt1, rt0 GROUP BY rt0.c0, rt0.c1 HAVING ((AVG(SUM(COUNT(*)))) ISNULL);
SELECT rt0.c1, rt0.c2, vt1.c0 FROM rt0 CROSS JOIN vt1 ON ((((0.005018074760380409)>(rt0.c1)))<(CAST(rt0.c1 AS BLOB)));
SELECT ALL rt0.c1, rt0.c2, vt1.c0 FROM rt0 CROSS JOIN vt1 ON ((((0.005018074760380409)>(rt0.c1)))<(CAST(rt0.c1 AS BLOB))) WHERE (LIKE(0x7709858d, 0.017733372452545804 COLLATE NOCASE, 'S')) UNION ALL SELECT ALL rt0.c1, rt0.c2, vt1.c0 FROM rt0 CROSS JOIN vt1 ON ((((0.005018074760380409)>(rt0.c1)))<(CAST(rt0.c1 AS BLOB))) WHERE ((NOT (LIKE(0x7709858d, 0.017733372452545804 COLLATE NOCASE, 'S')))) UNION ALL SELECT rt0.c1, rt0.c2, vt1.c0 FROM rt0 CROSS JOIN vt1 ON ((((0.005018074760380409)>(rt0.c1)))<(CAST(rt0.c1 AS BLOB))) WHERE (((LIKE(0X7709858d, 0.017733372452545804 COLLATE NOCASE, 'S')) ISNULL));
SELECT rt0.c1, rt0.c2, vt1.c0 FROM rt0 CROSS JOIN vt1 ON ((((0.005018074760380409)>(rt0.c1)))<(CAST(rt0.c1 AS BLOB)));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE (TYPEOF(DISTINCT (+ ('-902196676')))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT (TYPEOF(DISTINCT (+ ('-902196676')))))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((TYPEOF(DISTINCT (+ ('-902196676')))) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE ((((((vt1.c0, vt1.c0, vt1.c0))!=((vt1.c0, vt1.c0, vt1.c0))))|(CAST(vt1.c0 AS INTEGER)))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT ((((((vt1.c0, vt1.c0, vt1.c0))<>((vt1.c0, vt1.c0, vt1.c0))))|(CAST(vt1.c0 AS INTEGER)))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((((((((vt1.c0, vt1.c0, vt1.c0))!=((vt1.c0, vt1.c0, vt1.c0))))|(CAST(vt1.c0 AS INTEGER)))) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING CAST(((vt1.c0)<<(COUNT(SUM(MIN(vt1.c0))))) AS TEXT) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (CAST(((vt1.c0)<<(COUNT(SUM(MIN(vt1.c0))))) AS TEXT))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((CAST(((vt1.c0)<<(COUNT(SUM(MIN(vt1.c0))))) AS TEXT)) ISNULL);
SELECT ALL vt1.c0 FROM vt1;
SELECT ALL vt1.c0 FROM vt1 WHERE (LAST_INSERT_ROWID()) UNION ALL SELECT vt1.c0 FROM vt1 WHERE ((NOT (LAST_INSERT_ROWID()))) UNION ALL SELECT vt1.c0 FROM vt1 WHERE (((LAST_INSERT_ROWID()) ISNULL));
SELECT ALL vt1.c0 FROM vt1;
SELECT DISTINCT * FROM rt0, vt1;
SELECT DISTINCT * FROM rt0, vt1 WHERE (CAST(rt0.c0 AS REAL) COLLATE NOCASE) UNION SELECT DISTINCT * FROM rt0, vt1 WHERE ((NOT (CAST(rt0.c0 AS REAL) COLLATE NOCASE))) UNION SELECT DISTINCT * FROM rt0, vt1 WHERE (((CAST(rt0.c0 AS REAL) COLLATE NOCASE) ISNULL));
SELECT DISTINCT * FROM rt0, vt1;
SELECT ALL vt1.c0, rt0.c1, rt0.c0, rt0.c2 FROM vt1 INNER JOIN rt0 ON CASE rt0.c1  WHEN vt1.c0 THEN '2106983912' ELSE rt0.c1 END COLLATE BINARY GROUP BY vt1.c0, rt0.c1, rt0.c0, rt0.c2;
SELECT ALL vt1.c0, rt0.c1, rt0.c0, rt0.c2 FROM vt1 INNER JOIN rt0 ON CASE rt0.c1  WHEN vt1.c0 THEN '2106983912' ELSE rt0.c1 END COLLATE BINARY WHERE (STRFTIME(rt0.c0 COLLATE NOCASE, (rt0.c0 IN ()), ((rt0.c1)LIKE(vt1.c0)))) GROUP BY vt1.c0, rt0.c1, rt0.c0, rt0.c2 UNION SELECT ALL vt1.c0, rt0.c1, rt0.c0, rt0.c2 FROM vt1 INNER JOIN rt0 ON CASE rt0.c1  WHEN vt1.c0 THEN '2106983912' ELSE rt0.c1 END COLLATE BINARY WHERE ((NOT (STRFTIME(rt0.c0 COLLATE NOCASE, (rt0.c0 IN ()), ((rt0.c1)LIKE(vt1.c0)))))) GROUP BY vt1.c0, rt0.c1, rt0.c0, rt0.c2 UNION SELECT vt1.c0, rt0.c1, rt0.c0, rt0.c2 FROM vt1 INNER JOIN rt0 ON CASE rt0.c1  WHEN vt1.c0 THEN '2106983912' ELSE rt0.c1 END COLLATE BINARY WHERE (((STRFTIME(rt0.c0 COLLATE NOCASE, (rt0.c0 IN ()), ((rt0.c1)LIKE(vt1.c0)))) ISNULL)) GROUP BY vt1.c0, rt0.c1, rt0.c0, rt0.c2;
SELECT ALL vt1.c0, rt0.c1, rt0.c0, rt0.c2 FROM vt1 INNER JOIN rt0 ON CASE rt0.c1  WHEN vt1.c0 THEN '2106983912' ELSE rt0.c1 END COLLATE BINARY GROUP BY vt1.c0, rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c2 FROM vt1, rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM vt1, rt0 GROUP BY rt0.c2 HAVING (((rt0.c0, TOTAL(vt1.c0), MIN(rt0.c1))) BETWEEN (((COUNT(*) IN (rt0.c0)), MAX(COUNT(*)), SUM(rt0.c0))) AND ((TOTAL(TOTAL(SUM(vt1.c0))), MAX(AVG(vt1.c0)), SUM(AVG(COUNT(*)))))) UNION ALL SELECT rt0.c2 FROM vt1, rt0 GROUP BY rt0.c2 HAVING (NOT ((((rt0.c0, TOTAL(vt1.c0), MIN(rt0.c1))) BETWEEN (((COUNT(*) IN (rt0.c0)), MAX(COUNT(*)), SUM(rt0.c0))) AND ((TOTAL(TOTAL(SUM(vt1.c0))), MAX(AVG(vt1.c0)), SUM(AVG(COUNT(*)))))))) UNION ALL SELECT ALL rt0.c2 FROM vt1, rt0 GROUP BY rt0.c2 HAVING (((((rt0.c0, TOTAL(vt1.c0), MIN(rt0.c1))) BETWEEN (((COUNT(*) IN (rt0.c0)), MAX(COUNT(*)), SUM(rt0.c0))) AND ((TOTAL(TOTAL(SUM(vt1.c0))), MAX(AVG(vt1.c0)), SUM(AVG(COUNT(*))))))) ISNULL);
SELECT TOTAL((~ (vt1.c0)) COLLATE RTRIM) FROM vt1;
SELECT rt0.c1, rt0.c2, vt1.c0 FROM vt1, rt0;
SELECT ALL rt0.c1, rt0.c2, vt1.c0 FROM vt1, rt0 WHERE ((+ (DATE('uN!J', x'', rt0.c2, 'ggs*''{u', vt1.c0)))) UNION ALL SELECT rt0.c1, rt0.c2, vt1.c0 FROM vt1, rt0 WHERE ((NOT ((+ (DATE('uN!J', x'', rt0.c2, 'ggs*''{u', vt1.c0)))))) UNION ALL SELECT ALL rt0.c1, rt0.c2, vt1.c0 FROM vt1, rt0 WHERE ((((+ (DATE('uN!J', x'', rt0.c2, 'ggs*''{u', vt1.c0)))) ISNULL));
SELECT rt0.c1, rt0.c2, vt1.c0 FROM vt1, rt0;
SELECT DISTINCT rt0.c0, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c1 FROM rt0 WHERE (((ROUND(NULL, rt0.c0))IS NOT(((rt0.c2)*(rt0.c2))))) UNION SELECT DISTINCT rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (((ROUND(NULL, rt0.c0))IS NOT(((rt0.c2)*(rt0.c2))))))) UNION SELECT DISTINCT rt0.c0, rt0.c1 FROM rt0 NOT INDEXED WHERE (((((ROUND(NULL, rt0.c0))IS NOT(((rt0.c2)*(rt0.c2))))) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c1 FROM rt0;
SELECT vt1.c0 FROM rt0, vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM rt0, vt1 WHERE (((vt1.c0) BETWEEN (rt0.c1) AND (rt0.c1)) COLLATE RTRIM COLLATE RTRIM) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM rt0, vt1 WHERE ((NOT (((vt1.c0) BETWEEN (rt0.c1) AND (rt0.c1)) COLLATE RTRIM COLLATE RTRIM))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM rt0, vt1 WHERE (((((vt1.c0) BETWEEN (rt0.c1) AND (rt0.c1)) COLLATE RTRIM COLLATE RTRIM) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM rt0, vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING SUM(((vt1.c0)%(TOTAL(vt1.c0)))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (SUM(((vt1.c0)%(TOTAL(vt1.c0)))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((SUM(((vt1.c0)%(TOTAL(vt1.c0))))) ISNULL);
SELECT rt0.c2 FROM rt0;
SELECT rt0.c2 FROM rt0 WHERE ((((0.18472435454913305))==((CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 END)))) UNION ALL SELECT rt0.c2 FROM rt0 WHERE ((NOT ((((0.18472435454913305))==((CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 END)))))) UNION ALL SELECT ALL rt0.c2 FROM rt0 WHERE ((((((0.18472435454913305))==((CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 END)))) ISNULL));
SELECT rt0.c2 FROM rt0;
SELECT DISTINCT * FROM vt1 LEFT OUTER JOIN rt0 ON (CAST('1459071482' AS REAL) IN (vt1.c0));
SELECT DISTINCT * FROM vt1 LEFT OUTER JOIN rt0 ON (CAST('1459071482' AS REAL) IN (vt1.c0)) WHERE (((rt0.c0 COLLATE RTRIM)=(TOTAL_CHANGES()))) UNION SELECT DISTINCT * FROM vt1 LEFT OUTER JOIN rt0 ON (CAST('1459071482' AS REAL) IN (vt1.c0)) WHERE ((NOT (((rt0.c0 COLLATE RTRIM)=(TOTAL_CHANGES()))))) UNION SELECT DISTINCT * FROM vt1 LEFT OUTER JOIN rt0 ON (CAST('1459071482' AS REAL) IN (vt1.c0)) WHERE (((((rt0.c0 COLLATE RTRIM)==(TOTAL_CHANGES()))) ISNULL));
SELECT DISTINCT * FROM vt1 LEFT OUTER JOIN rt0 ON (CAST('1459071482' AS REAL) IN (vt1.c0));
SELECT vt1.c0, rt0.c0 FROM rt0, vt1 GROUP BY vt1.c0, rt0.c0;
SELECT ALL vt1.c0, rt0.c0 FROM rt0, vt1 WHERE (((((rt0.c0) NOTNULL)) NOT BETWEEN (((rt0.c1)>>(rt0.c0))) AND (rt0.c1))) GROUP BY vt1.c0, rt0.c0 UNION SELECT ALL vt1.c0, rt0.c0 FROM rt0, vt1 WHERE ((NOT (((((rt0.c0) NOTNULL)) NOT BETWEEN (((rt0.c1)>>(rt0.c0))) AND (rt0.c1))))) GROUP BY vt1.c0, rt0.c0 UNION SELECT vt1.c0, rt0.c0 FROM rt0, vt1 WHERE (((((((rt0.c0) NOTNULL)) NOT BETWEEN (((rt0.c1)>>(rt0.c0))) AND (rt0.c1))) ISNULL)) GROUP BY vt1.c0, rt0.c0;
SELECT vt1.c0, rt0.c0 FROM rt0, vt1 GROUP BY vt1.c0, rt0.c0;
SELECT rt0.c0, vt1.c0, rt0.c2, rt0.c1 FROM rt0, vt1 GROUP BY rt0.c0, vt1.c0, rt0.c2, rt0.c1;
SELECT rt0.c0, vt1.c0, rt0.c2, rt0.c1 FROM rt0, vt1 GROUP BY rt0.c0, vt1.c0, rt0.c2, rt0.c1 HAVING COUNT(AVG(AVG(AVG(rt0.c0)))) UNION ALL SELECT ALL rt0.c0, vt1.c0, rt0.c2, rt0.c1 FROM rt0, vt1 GROUP BY rt0.c0, vt1.c0, rt0.c2, rt0.c1 HAVING (NOT (COUNT(AVG(AVG(AVG(rt0.c0)))))) UNION ALL SELECT ALL rt0.c0, vt1.c0, rt0.c2, rt0.c1 FROM rt0, vt1 GROUP BY rt0.c0, vt1.c0, rt0.c2, rt0.c1 HAVING ((COUNT(AVG(AVG(AVG(rt0.c0))))) ISNULL);
SELECT rt0.c0, rt0.c1, vt1.c0, rt0.c2 FROM rt0 NATURAL JOIN vt1;
SELECT rt0.c0, rt0.c1, vt1.c0, rt0.c2 FROM rt0 NATURAL JOIN vt1 WHERE (DATE(vt1.c0, rt0.c2, '0.13994327062449474') COLLATE NOCASE) UNION ALL SELECT ALL rt0.c0, rt0.c1, vt1.c0, rt0.c2 FROM rt0 NATURAL JOIN vt1 WHERE ((NOT (DATE(vt1.c0, rt0.c2, '0.13994327062449474') COLLATE NOCASE))) UNION ALL SELECT ALL rt0.c0, rt0.c1, vt1.c0, rt0.c2 FROM rt0 NATURAL JOIN vt1 WHERE (((DATE(vt1.c0, rt0.c2, '0.13994327062449474') COLLATE NOCASE) ISNULL));
SELECT rt0.c0, rt0.c1, vt1.c0, rt0.c2 FROM rt0 NATURAL JOIN vt1;
SELECT DISTINCT * FROM vt1, rt0;
SELECT DISTINCT * FROM vt1, rt0 WHERE (((((((((((vt1.c0)||(rt0.c0)))AND(((((((((rt0.c0)OR(rt0.c1)))AND(rt0.c0)))OR(rt0.c2)))OR(rt0.c2)))))AND(((rt0.c1) ISNULL))))OR(((rt0.c0) NOT NULL))))AND(((rt0.c0)/(vt1.c0))))) UNION SELECT DISTINCT * FROM vt1, rt0 WHERE ((NOT (((((((((((vt1.c0)||(rt0.c0)))AND(((((((((rt0.c0)OR(rt0.c1)))AND(rt0.c0)))OR(rt0.c2)))OR(rt0.c2)))))AND(((rt0.c1) ISNULL))))OR(((rt0.c0) NOT NULL))))AND(((rt0.c0)/(vt1.c0))))))) UNION SELECT DISTINCT * FROM vt1, rt0 WHERE (((((((((((((vt1.c0)||(rt0.c0)))AND(((((((((rt0.c0)OR(rt0.c1)))AND(rt0.c0)))OR(rt0.c2)))OR(rt0.c2)))))AND(((rt0.c1) ISNULL))))OR(((rt0.c0) NOT NULL))))AND(((rt0.c0)/(vt1.c0))))) ISNULL));
SELECT DISTINCT * FROM vt1, rt0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 WHERE (CASE ''  WHEN 0.21344799216423116 THEN ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)) ELSE (rt0.c0 IN ()) END) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM rt0 WHERE ((NOT (CASE ''  WHEN 0.21344799216423116 THEN ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)) ELSE (rt0.c0 IN ()) END))) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM rt0 WHERE (((CASE ''  WHEN 0.21344799216423116 THEN ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)) ELSE (rt0.c0 IN ()) END) ISNULL)) GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING MIN(((rt0.c0)+(COUNT(*)))) UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT (MIN(((rt0.c0)+(COUNT(*)))))) UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING ((MIN(((rt0.c0)+(COUNT(*))))) ISNULL);
SELECT ALL * FROM rt0, vt1;
SELECT * FROM rt0, vt1 WHERE (((CASE vt1.c0  WHEN vt1.c0 THEN rt0.c2 ELSE rt0.c1 END) NOT BETWEEN ((- (rt0.c0))) AND (((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c2))))) UNION ALL SELECT ALL * FROM rt0, vt1 WHERE ((NOT (((CASE vt1.c0  WHEN vt1.c0 THEN rt0.c2 ELSE rt0.c1 END) NOT BETWEEN ((- (rt0.c0))) AND (((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c2))))))) UNION ALL SELECT * FROM rt0, vt1 WHERE (((((CASE vt1.c0  WHEN vt1.c0 THEN rt0.c2 ELSE rt0.c1 END) NOT BETWEEN ((- (rt0.c0))) AND (((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c2))))) ISNULL));
SELECT ALL * FROM rt0, vt1;
