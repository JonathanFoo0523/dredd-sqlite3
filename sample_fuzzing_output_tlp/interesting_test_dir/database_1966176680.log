-- Time: 2024/06/10 05:28:54
-- Database: database80
-- Database version: 3.40.0
-- seed value: 1966176680
PRAGMA cache_size = 50000; -- 0ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA encoding = 'UTF-8'; -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree_i32(c0, c1, c2, +c3 INT , +c4 TEXT ); -- 1ms;
CREATE VIRTUAL TABLE vt1 USING fts5(c0); -- 0ms;
INSERT OR IGNORE INTO vt1(c0) VALUES (NULL); -- 6ms;
COMMIT; -- 0ms;
INSERT OR ROLLBACK INTO vt1(c0) VALUES (x''); -- 1ms;
PRAGMA optimize; -- 0ms;
ANALYZE; -- 0ms;
PRAGMA main.cache_spill; -- 0ms;
UPDATE OR IGNORE rt0 SET c3=x'738dbeef' WHERE ((CASE WHEN rt0.c3 THEN 0Xffffffffcecc7edd WHEN rt0.c1 THEN rt0.c4 WHEN rt0.c2 THEN rt0.c1 END)<(((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c4)))); -- 0ms;
INSERT INTO vt1(vt1) VALUES('merge=-825458979,13');\n; -- 0ms;
INSERT INTO vt1(vt1) VALUES('integrity-check'); -- 0ms;
UPDATE OR REPLACE vt1 SET c0=-1281148893; -- 2ms;
BEGIN  TRANSACTION; -- 0ms;
UPDATE OR ABORT vt1 SET c0=0xffffffffb3a33823 WHERE (((NULL IN (vt1.c0, vt1.c0))) BETWEEN (((((vt1.c0)OR(vt1.c0)))OR(vt1.c0))) AND (0.9764116784179382)); -- 0ms;
INSERT OR IGNORE INTO rt0(c2, c1, c3, c4) VALUES (x'', NULL, x'', -821977012); -- 5ms;
BEGIN  TRANSACTION; -- 0ms;
ANALYZE rt0; -- 0ms;
CREATE VIRTUAL TABLE rt1 USING rtree_i32(c0, c1, c2, +c3 BLOB , +c4 TEXT ); -- 1ms;
INSERT OR IGNORE INTO vt1 VALUES ('-1389414802'); -- 1ms;
INSERT OR IGNORE INTO rt1(c4) VALUES ('117123980'); -- 0ms;
INSERT INTO vt1(vt1) VALUES('automerge=13'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('merge', 1075451759);\n; -- 0ms;
INSERT INTO vt1(vt1) VALUES('optimize'); -- 0ms;
INSERT OR IGNORE INTO rt0 VALUES ('', 'xy_HꜦF㠣', -1729173314, 0.9764116784179382, 0X7fd71cd0); -- 0ms;
PRAGMA temp.auto_vacuum = NONE; -- 0ms;
CREATE TABLE t0 (c0 BLOB ); -- 1ms;
UPDATE OR IGNORE rt1 SET (c0, c4, c3)=('-1729173314', NULL, NULL) WHERE (NOT ((((rt1.c1)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c1))))); -- 0ms;
ALTER TABLE t0 ADD COLUMN c48 BLOB; -- 0ms;
ROLLBACK TRANSACTION; -- 6ms;
INSERT OR ROLLBACK INTO vt1 VALUES (''), (NULL), (x''); -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
PRAGMA main.reverse_unordered_selects = false; -- 0ms;
PRAGMA main.busy_timeout; -- 0ms;
INSERT OR FAIL INTO vt1(c0) VALUES (0.3623379807185615); -- 0ms;
PRAGMA main.stats; -- 0ms;
ROLLBACK TRANSACTION; -- 1ms;
PRAGMA temp.recursive_triggers = false; -- 0ms;
DELETE FROM rt0; -- 0ms;
UPDATE OR IGNORE vt1 SET c0='', c0=''; -- 0ms;
PRAGMA temp.integrity_check; -- 0ms;
PRAGMA default_cache_size = -2101982632; -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
INSERT OR FAIL INTO vt1 VALUES (0xffffffffee81014b); -- 0ms;
INSERT OR ROLLBACK INTO rt0(c0, c3) VALUES (NULL, ''), (x'', NULL), (x'4215', 'I<'), (NULL, (((('-1165483787')AND(NULL)))OR(0.5014467042474389)) COLLATE NOCASE), ('', '5/nM,'), (x'', 0.3592998103321091), ('n-fUX])wp', NULL); -- 0ms;
INSERT OR ABORT INTO vt1(c0) VALUES ((((NOT ('-825458979'))) NOTNULL)); -- 4ms;
INSERT INTO vt1(vt1, rank) VALUES('merge', -526083282);\n; -- 12ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
DELETE FROM sqlite_stat1; -- 2ms;
INSERT INTO vt1(vt1) VALUES('rebuild'); -- 0ms;
ANALYZE main; -- 0ms;
INSERT OR IGNORE INTO vt1 VALUES ('⸉*'); -- 0ms;
UPDATE OR IGNORE rt0 SET c3=0.9732767187926913 WHERE ((((((rt0.c1) ISNULL))AND(((((((((rt0.c1)OR(rt0.c0)))OR(rt0.c1)))AND(rt0.c0)))OR(rt0.c1)))))AND(CAST(rt0.c4 AS NUMERIC))); -- 0ms;
INSERT OR ABORT INTO vt1(c0) VALUES (0x642056b3); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts4(c0 UNINDEXED); -- 1ms;
INSERT INTO vt1(vt1) VALUES('automerge=4'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('merge', -831126678);\n; -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES (''); -- 0ms;
UPDATE vt0 SET (c0)=('-825458979') WHERE 0.3949297310630101; -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR IGNORE rt0 SET c0=0.1153107401646759, c0=x'', c4=x'', c2=0.22543058993024623; -- 0ms;
VACUUM main; -- 1ms;
VACUUM; -- 1ms;
INSERT INTO vt1(vt1) VALUES('automerge=3'); -- 0ms;
INSERT INTO vt1(vt1) VALUES('optimize'); -- 0ms;
PRAGMA short_column_names = true; -- 0ms;
INSERT OR IGNORE INTO rt0(c1, c4, c3, c0, c2) VALUES (x'', 0.7448130048078767, 'XY_HꜦF㠣', NULL, '471388099'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=378609309 unordered'); -- 1ms;
ANALYZE vt1; -- 0ms;
UPDATE rt0 SET (c3, c4, c0)=('n-fUX])wp', 0.5310978650122279, NULL) WHERE CAST(((((((((rt0.c1)AND(rt0.c2)))OR(rt0.c4)))AND(rt0.c1)))OR(rt0.c0)) AS INTEGER); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('usermerge', 6); -- 3ms;
UPDATE vt1 SET c0='''|'; -- 1ms;
UPDATE OR IGNORE vt1 SET (c0, c0)=('', -1389414802) WHERE (RTRIM(vt1.c0) IN ()); -- 0ms;
INSERT OR FAIL INTO vt1(c0) VALUES ('1991233700'); -- 24ms;
INSERT OR FAIL INTO rt0(c2, c3) VALUES ('0.9764116784179382', NULL); -- 0ms;
INSERT OR FAIL INTO vt1(c0) VALUES (NULL); -- 9ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO rt0(c4, c1, c2, c0, c3) VALUES (NULL, -8.31126678E8, NULL, x'705b', NULL); -- 3ms;
UPDATE OR REPLACE rt0 SET c1=0.6414543546024647 WHERE TRIM(DISTINCT (NOT (rt0.c4))); -- 0ms;
SELECT rtreecheck('rt0'); -- 0ms;
INSERT OR IGNORE INTO vt1 VALUES (0X16911e9d); -- 0ms;
INSERT INTO vt1(vt1) VALUES('optimize'); -- 1ms;
UPDATE OR ROLLBACK rt0 SET (c4)=(NULL); -- 0ms;
SELECT rtreecheck('rt0'); -- 0ms;
REINDEX BINARY; -- 0ms;
INSERT OR REPLACE INTO vt1(c0) VALUES (NULL); -- 0ms;
INSERT OR IGNORE INTO vt1 VALUES (''); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO vt1(c0) VALUES (x''); -- 1ms;
PRAGMA main.reverse_unordered_selects; -- 0ms;
PRAGMA main.optimize; -- 1ms;
UPDATE OR IGNORE rt0 SET (c1)=(NULL); -- 1ms;
END; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT ALL rt0.c2, rt0.c0, rt0.c1, rt0.c4 FROM rt0;
SELECT rt0.c2, rt0.c0, rt0.c1, rt0.c4 FROM rt0 WHERE (rt0.c0) UNION ALL SELECT rt0.c2, rt0.c0, rt0.c1, rt0.c4 FROM rt0 WHERE ((NOT (rt0.c0))) UNION ALL SELECT rt0.c2, rt0.c0, rt0.c1, rt0.c4 FROM rt0 WHERE (((rt0.c0) ISNULL));
SELECT ALL rt0.c2, rt0.c0, rt0.c1, rt0.c4 FROM rt0;
SELECT DISTINCT * FROM vt1, rt0;
SELECT DISTINCT * FROM vt1, rt0 NOT INDEXED WHERE (CASE WHEN CAST(rt0.c3 AS NUMERIC) THEN ((((((((3.78609309E8)OR(rt0.c2)))AND(rt0.c2)))AND(vt1.c0)))AND(NULL)) ELSE ((vt1.c0) IS FALSE) END) UNION SELECT DISTINCT * FROM vt1, rt0 WHERE ((NOT (CASE WHEN CAST(rt0.c3 AS NUMERIC) THEN ((((((((3.78609309E8)OR(rt0.c2)))AND(rt0.c2)))AND(vt1.c0)))AND(NULL)) ELSE ((vt1.c0) IS FALSE) END))) UNION SELECT DISTINCT * FROM vt1, rt0 WHERE (((CASE WHEN CAST(rt0.c3 AS NUMERIC) THEN ((((((((3.78609309E8)OR(rt0.c2)))AND(rt0.c2)))AND(vt1.c0)))AND(NULL)) ELSE ((vt1.c0) IS FALSE) END) ISNULL));
SELECT DISTINCT * FROM vt1, rt0;
SELECT rt0.c4, rt0.c3 FROM rt0 GROUP BY rt0.c4, rt0.c3;
SELECT ALL rt0.c4, rt0.c3 FROM rt0 WHERE (((((rt0.c3)|(rt0.c2))) NOTNULL)) GROUP BY rt0.c4, rt0.c3 UNION SELECT ALL rt0.c4, rt0.c3 FROM rt0 WHERE ((NOT (((((rt0.c3)|(rt0.c2))) NOTNULL)))) GROUP BY rt0.c4, rt0.c3 UNION SELECT rt0.c4, rt0.c3 FROM rt0 WHERE (((((((rt0.c3)|(rt0.c2))) NOTNULL)) ISNULL)) GROUP BY rt0.c4, rt0.c3;
SELECT rt0.c4, rt0.c3 FROM rt0 GROUP BY rt0.c4, rt0.c3;
SELECT ALL rt0.c1, rt0.c2, rt0.c4 FROM vt1 NOT INDEXED INNER JOIN rt0 ON ((rt0.c4) NOT BETWEEN (rt0.c0) AND (rt0.c4)) COLLATE RTRIM GROUP BY rt0.c1, rt0.c2, rt0.c4;
SELECT rt0.c1, rt0.c2, rt0.c4 FROM vt1 INNER JOIN rt0 ON ((rt0.c4) NOT BETWEEN (rt0.c0) AND (rt0.c4)) COLLATE RTRIM GROUP BY rt0.c1, rt0.c2, rt0.c4 HAVING CASE rt0.c2 COLLATE NOCASE  WHEN (NOT (rt0.c0)) THEN rt0.c1 WHEN ((GROUP_CONCAT(MIN(rt0.c1)))<(COUNT(vt1.c0))) THEN ((MIN(AVG(COUNT(*))))-(rt0.c4)) WHEN (~ (COUNT('-857665150'))) THEN ((((((((TOTAL(vt1.c0))OR(rt0.c4)))OR(rt0.c1)))AND(MAX(GROUP_CONCAT(MIN(rt0.c4))))))AND(rt0.c1)) ELSE ((rt0.c2) NOT NULL) END UNION ALL SELECT rt0.c1, rt0.c2, rt0.c4 FROM vt1 INNER JOIN rt0 ON ((rt0.c4) NOT BETWEEN (rt0.c0) AND (rt0.c4)) COLLATE RTRIM GROUP BY rt0.c1, rt0.c2, rt0.c4 HAVING (NOT (CASE rt0.c2 COLLATE NOCASE  WHEN (NOT (rt0.c0)) THEN rt0.c1 WHEN ((GROUP_CONCAT(MIN(rt0.c1)))<(COUNT(vt1.c0))) THEN ((MIN(AVG(COUNT(*))))-(rt0.c4)) WHEN (~ (COUNT('-857665150'))) THEN ((((((((TOTAL(vt1.c0))OR(rt0.c4)))OR(rt0.c1)))AND(MAX(GROUP_CONCAT(MIN(rt0.c4))))))AND(rt0.c1)) ELSE ((rt0.c2) NOT NULL) END)) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c4 FROM vt1 INNER JOIN rt0 ON ((rt0.c4) NOT BETWEEN (rt0.c0) AND (rt0.c4)) COLLATE RTRIM GROUP BY rt0.c1, rt0.c2, rt0.c4 HAVING ((CASE rt0.c2 COLLATE NOCASE  WHEN (NOT (rt0.c0)) THEN rt0.c1 WHEN ((GROUP_CONCAT(MIN(rt0.c1)))<(COUNT(vt1.c0))) THEN ((MIN(AVG(COUNT(*))))-(rt0.c4)) WHEN (~ (COUNT('-857665150'))) THEN ((((((((TOTAL(vt1.c0))OR(rt0.c4)))OR(rt0.c1)))AND(MAX(GROUP_CONCAT(MIN(rt0.c4))))))AND(rt0.c1)) ELSE ((rt0.c2) NOT NULL) END) ISNULL);
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE (((((rt0.c1)AND('2049865746'))) ISNULL)) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (((((rt0.c1)AND('2049865746'))) ISNULL)))) UNION ALL SELECT * FROM rt0 WHERE (((((((rt0.c1)AND('2049865746'))) ISNULL)) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (ABS(rt0.c4 COLLATE RTRIM)) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (ABS(rt0.c4 COLLATE RTRIM)))) UNION SELECT DISTINCT * FROM rt0 WHERE (((ABS(rt0.c4 COLLATE RTRIM)) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c1, rt0.c3, rt0.c4 FROM rt0 GROUP BY rt0.c1, rt0.c3, rt0.c4;
SELECT ALL rt0.c1, rt0.c3, rt0.c4 FROM rt0 WHERE ((((NOT (rt0.c4)))AND((('')/(rt0.c2))))) GROUP BY rt0.c1, rt0.c3, rt0.c4 UNION SELECT rt0.c1, rt0.c3, rt0.c4 FROM rt0 WHERE ((NOT ((((NOT (rt0.c4)))AND((('')/(rt0.c2))))))) GROUP BY rt0.c1, rt0.c3, rt0.c4 UNION SELECT ALL rt0.c1, rt0.c3, rt0.c4 FROM rt0 WHERE ((((((NOT (rt0.c4)))AND((('')/(rt0.c2))))) ISNULL)) GROUP BY rt0.c1, rt0.c3, rt0.c4;
SELECT rt0.c1, rt0.c3, rt0.c4 FROM rt0 GROUP BY rt0.c1, rt0.c3, rt0.c4;
SELECT rt0.c4, rt0.c0 FROM rt0 GROUP BY rt0.c4, rt0.c0;
SELECT ALL rt0.c4, rt0.c0 FROM rt0 GROUP BY rt0.c4, rt0.c0 HAVING CAST(load_extension(SUM(rt0.c3)) AS REAL) UNION ALL SELECT ALL rt0.c4, rt0.c0 FROM rt0 GROUP BY rt0.c4, rt0.c0 HAVING (NOT (CAST(load_extension(SUM(rt0.c3)) AS REAL))) UNION ALL SELECT rt0.c4, rt0.c0 FROM rt0 GROUP BY rt0.c4, rt0.c0 HAVING ((CAST(load_extension(SUM(rt0.c3)) AS REAL)) ISNULL);
SELECT ALL rt0.c3, rt0.c2, rt0.c4, rt0.c1, rt0.c0 FROM rt0;
SELECT ALL rt0.c3, rt0.c2, rt0.c4, rt0.c1, rt0.c0 FROM rt0 WHERE (rt0.c2) UNION ALL SELECT ALL rt0.c3, rt0.c2, rt0.c4, rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (rt0.c2))) UNION ALL SELECT rt0.c3, rt0.c2, rt0.c4, rt0.c1, rt0.c0 FROM rt0 WHERE (((rt0.c2) ISNULL));
SELECT ALL rt0.c3, rt0.c2, rt0.c4, rt0.c1, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c3, rt0.c4, rt0.c2, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c3, rt0.c4, rt0.c2, rt0.c1 FROM rt0 WHERE (CASE WHEN ((rt0.c1)OR(rt0.c1)) THEN ((rt0.c1)!=(rt0.c1)) WHEN CAST(rt0.c4 AS REAL) THEN rt0.c4 WHEN ((rt0.c4) NOT NULL) THEN '1991233700' END) UNION SELECT DISTINCT rt0.c3, rt0.c4, rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (CASE WHEN ((rt0.c1)OR(rt0.c1)) THEN ((rt0.c1)<>(rt0.c1)) WHEN CAST(rt0.c4 AS REAL) THEN rt0.c4 WHEN ((rt0.c4) NOT NULL) THEN '1991233700' END))) UNION SELECT DISTINCT rt0.c3, rt0.c4, rt0.c2, rt0.c1 FROM rt0 WHERE (((CASE WHEN ((rt0.c1)OR(rt0.c1)) THEN ((rt0.c1)!=(rt0.c1)) WHEN CAST(rt0.c4 AS REAL) THEN rt0.c4 WHEN ((rt0.c4) NOT NULL) THEN '1991233700' END) ISNULL));
SELECT DISTINCT rt0.c3, rt0.c4, rt0.c2, rt0.c1 FROM rt0;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 WHERE ((NOT ((((rt0.c1))>=((rt0.c0)))))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0 WHERE ((NOT ((NOT ((((rt0.c1))>=((rt0.c0)))))))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0 WHERE ((((NOT ((((rt0.c1))>=((rt0.c0)))))) ISNULL)) GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c2, vt1.c0, rt0.c0, rt0.c1, rt0.c3, rt0.c4 FROM rt0 LEFT OUTER JOIN vt1 ON 0.8167708250060598 GROUP BY rt0.c2, vt1.c0, rt0.c0, rt0.c1, rt0.c3, rt0.c4;
SELECT rt0.c2, vt1.c0, rt0.c0, rt0.c1, rt0.c3, rt0.c4 FROM rt0 LEFT OUTER JOIN vt1 ON 0.8167708250060598 GROUP BY rt0.c2, vt1.c0, rt0.c0, rt0.c1, rt0.c3, rt0.c4 HAVING AVG(rt0.c2) COLLATE NOCASE UNION ALL SELECT ALL rt0.c2, vt1.c0, rt0.c0, rt0.c1, rt0.c3, rt0.c4 FROM rt0 LEFT OUTER JOIN vt1 ON 0.8167708250060598 GROUP BY rt0.c2, vt1.c0, rt0.c0, rt0.c1, rt0.c3, rt0.c4 HAVING (NOT (AVG(rt0.c2) COLLATE NOCASE)) UNION ALL SELECT rt0.c2, vt1.c0, rt0.c0, rt0.c1, rt0.c3, rt0.c4 FROM rt0 LEFT OUTER JOIN vt1 ON 0.8167708250060598 GROUP BY rt0.c2, vt1.c0, rt0.c0, rt0.c1, rt0.c3, rt0.c4 HAVING ((AVG(rt0.c2) COLLATE NOCASE) ISNULL);
SELECT ALL rt0.c2, vt1.c0, rt0.c0, rt0.c1, rt0.c3, rt0.c4 FROM rt0 LEFT OUTER JOIN vt1 ON 0.8167708250060598 GROUP BY rt0.c2, vt1.c0, rt0.c0, rt0.c1, rt0.c3, rt0.c4;
SELECT rt0.c2, vt1.c0, rt0.c0, rt0.c1, rt0.c3, rt0.c4 FROM rt0 LEFT OUTER JOIN vt1 ON 0.8167708250060598 GROUP BY rt0.c2, vt1.c0, rt0.c0, rt0.c1, rt0.c3, rt0.c4 HAVING AVG(rt0.c2) COLLATE NOCASE UNION ALL SELECT ALL rt0.c2, vt1.c0, rt0.c0, rt0.c1, rt0.c3, rt0.c4 FROM rt0 LEFT OUTER JOIN vt1 ON 0.8167708250060598 GROUP BY rt0.c2, vt1.c0, rt0.c0, rt0.c1, rt0.c3, rt0.c4 HAVING (NOT (AVG(rt0.c2) COLLATE NOCASE)) UNION ALL SELECT rt0.c2, vt1.c0, rt0.c0, rt0.c1, rt0.c3, rt0.c4 FROM rt0 LEFT OUTER JOIN vt1 ON 0.8167708250060598 GROUP BY rt0.c2, vt1.c0, rt0.c0, rt0.c1, rt0.c3, rt0.c4 HAVING ((AVG(rt0.c2) COLLATE NOCASE) ISNULL);
SELECT ALL rt0.c2, vt1.c0, rt0.c0, rt0.c1, rt0.c3, rt0.c4 FROM rt0 LEFT OUTER JOIN vt1 ON 0.8167708250060598 GROUP BY rt0.c2, vt1.c0, rt0.c0, rt0.c1, rt0.c3, rt0.c4;
SELECT ALL vt1.c0, rt0.c2 FROM vt1, rt0;
SELECT vt1.c0, rt0.c2 FROM vt1, rt0 WHERE (((((0.7927531368182329)<<(vt1.c0))) BETWEEN (((rt0.c4)!=(rt0.c2))) AND (((rt0.c0)|(x''))))) UNION ALL SELECT vt1.c0, rt0.c2 FROM vt1, rt0 WHERE ((NOT (((((0.7927531368182329)<<(vt1.c0))) BETWEEN (((rt0.c4)<>(rt0.c2))) AND (((rt0.c0)|(x''))))))) UNION ALL SELECT ALL vt1.c0, rt0.c2 FROM vt1, rt0 WHERE (((((((0.7927531368182329)<<(vt1.c0))) BETWEEN (((rt0.c4)<>(rt0.c2))) AND (((rt0.c0)|(x''))))) ISNULL));
SELECT ALL vt1.c0, rt0.c2 FROM vt1, rt0;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE (NULL) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT (NULL))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((NULL) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE (((((vt1.c0 IN ())))<=((vt1.c0)))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT (((((vt1.c0 IN ())))<=((vt1.c0)))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE (((((((vt1.c0 IN ())))<=((vt1.c0)))) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL rt0.c0, rt0.c1 FROM rt0, vt1 GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0, vt1 GROUP BY rt0.c0, rt0.c1 HAVING SUM(MAX(GROUP_CONCAT(rt0.c1))) UNION ALL SELECT rt0.c0, rt0.c1 FROM rt0, vt1 GROUP BY rt0.c0, rt0.c1 HAVING (NOT (SUM(MAX(GROUP_CONCAT(rt0.c1))))) UNION ALL SELECT rt0.c0, rt0.c1 FROM rt0, vt1 GROUP BY rt0.c0, rt0.c1 HAVING ((SUM(MAX(GROUP_CONCAT(rt0.c1)))) ISNULL);
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE ((NOT (((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c0))))) UNION ALL SELECT * FROM rt0 WHERE ((NOT ((NOT (((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c0))))))) UNION ALL SELECT * FROM rt0 WHERE ((((NOT (((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c0))))) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT vt1.c0 FROM vt1, rt0;
SELECT DISTINCT vt1.c0 FROM vt1, rt0 WHERE (rt0.c0) UNION SELECT DISTINCT vt1.c0 FROM vt1, rt0 WHERE ((NOT (rt0.c0))) UNION SELECT DISTINCT vt1.c0 FROM vt1, rt0 WHERE (((rt0.c0) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1, rt0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE ((((vt1.c0)AND(0.7958592021260186)) IN (1991233700))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT ((((vt1.c0)AND(0.7958592021260186)) IN (1991233700))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((((((vt1.c0)AND(0.7958592021260186)) IN (1991233700))) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT rt0.c2 FROM vt1 CROSS JOIN rt0 ON ((CAST(vt1.c0 AS REAL))>(((((((((rt0.c1)OR(rt0.c4)))AND(rt0.c1)))OR(rt0.c2)))OR(rt0.c1)))) GROUP BY rt0.c2;
SELECT rt0.c2 FROM vt1 CROSS JOIN rt0 ON ((CAST(vt1.c0 AS REAL))>(((((((((rt0.c1)OR(rt0.c4)))AND(rt0.c1)))OR(rt0.c2)))OR(rt0.c1)))) GROUP BY rt0.c2 HAVING ((rt0.c4 COLLATE NOCASE) NOT BETWEEN (MIN(0.6423965149053087)) AND (CASE MIN(COUNT(*))  WHEN rt0.c1 THEN rt0.c0 WHEN TOTAL(MIN(rt0.c2)) THEN rt0.c2 WHEN AVG(rt0.c0) THEN rt0.c2 ELSE rt0.c2 END)) UNION ALL SELECT rt0.c2 FROM vt1 CROSS JOIN rt0 ON ((CAST(vt1.c0 AS REAL))>(((((((((rt0.c1)OR(rt0.c4)))AND(rt0.c1)))OR(rt0.c2)))OR(rt0.c1)))) GROUP BY rt0.c2 HAVING (NOT (((rt0.c4 COLLATE NOCASE) NOT BETWEEN (MIN(0.6423965149053087)) AND (CASE MIN(COUNT(*))  WHEN rt0.c1 THEN rt0.c0 WHEN TOTAL(MIN(rt0.c2)) THEN rt0.c2 WHEN AVG(rt0.c0) THEN rt0.c2 ELSE rt0.c2 END)))) UNION ALL SELECT rt0.c2 FROM vt1 CROSS JOIN rt0 ON ((CAST(vt1.c0 AS REAL))>(((((((((rt0.c1)OR(rt0.c4)))AND(rt0.c1)))OR(rt0.c2)))OR(rt0.c1)))) GROUP BY rt0.c2 HAVING ((((rt0.c4 COLLATE NOCASE) NOT BETWEEN (MIN(0.6423965149053087)) AND (CASE MIN(COUNT(*))  WHEN rt0.c1 THEN rt0.c0 WHEN TOTAL(MIN(rt0.c2)) THEN rt0.c2 WHEN AVG(rt0.c0) THEN rt0.c2 ELSE rt0.c2 END))) ISNULL);
SELECT ALL rt0.c0, rt0.c2, vt1.c0 FROM vt1 NOT INDEXED, rt0;
SELECT ALL rt0.c0, rt0.c2, vt1.c0 FROM vt1, rt0 WHERE (0.6893197064370188) UNION ALL SELECT rt0.c0, rt0.c2, vt1.c0 FROM vt1, rt0 WHERE ((NOT (0.6893197064370188))) UNION ALL SELECT ALL rt0.c0, rt0.c2, vt1.c0 FROM vt1, rt0 WHERE (((0.6893197064370188) ISNULL));
SELECT ALL rt0.c0, rt0.c2, vt1.c0 FROM vt1 NOT INDEXED, rt0;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE ((((vt1.c0)) NOT BETWEEN ((0.033736638562567256)) AND ((vt1.c0)))) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT ((((vt1.c0)) NOT BETWEEN ((0.033736638562567256)) AND ((vt1.c0)))))) UNION SELECT DISTINCT * FROM vt1 WHERE ((((((vt1.c0)) NOT BETWEEN ((0.033736638562567256)) AND ((vt1.c0)))) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE (((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0))) NOTNULL)) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0))) NOTNULL)))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE (((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0))) NOTNULL)) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL rt0.c4, rt0.c2 FROM rt0 GROUP BY rt0.c4, rt0.c2;
SELECT rt0.c4, rt0.c2 FROM rt0 GROUP BY rt0.c4, rt0.c2 HAVING MAX(((NULL)==(COUNT(rt0.c0)))) UNION ALL SELECT ALL rt0.c4, rt0.c2 FROM rt0 GROUP BY rt0.c4, rt0.c2 HAVING (NOT (MAX(((NULL)==(COUNT(rt0.c0)))))) UNION ALL SELECT ALL rt0.c4, rt0.c2 FROM rt0 GROUP BY rt0.c4, rt0.c2 HAVING ((MAX(((NULL)=(COUNT(rt0.c0))))) ISNULL);
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE (NULL) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (NULL))) UNION ALL SELECT * FROM rt0 WHERE (((NULL) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE ((~ (((((vt1.c0)OR(-1165483787)))OR(vt1.c0))))) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT ((~ (((((vt1.c0)OR(-1165483787)))OR(vt1.c0))))))) UNION SELECT DISTINCT * FROM vt1 WHERE ((((~ (((((vt1.c0)OR(-1165483787)))OR(vt1.c0))))) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT rt0.c2, vt1.c0 FROM rt0, vt1 GROUP BY rt0.c2, vt1.c0;
SELECT rt0.c2, vt1.c0 FROM rt0, vt1 WHERE (((rt0.c3 COLLATE NOCASE) BETWEEN (((rt0.c4)>=(rt0.c1))) AND (NULL))) GROUP BY rt0.c2, vt1.c0 UNION SELECT rt0.c2, vt1.c0 FROM rt0, vt1 WHERE ((NOT (((rt0.c3 COLLATE NOCASE) BETWEEN (((rt0.c4)>=(rt0.c1))) AND (NULL))))) GROUP BY rt0.c2, vt1.c0 UNION SELECT ALL rt0.c2, vt1.c0 FROM rt0 NOT INDEXED, vt1 WHERE (((((rt0.c3 COLLATE NOCASE) BETWEEN (((rt0.c4)>=(rt0.c1))) AND (NULL))) ISNULL)) GROUP BY rt0.c2, vt1.c0;
SELECT rt0.c2, vt1.c0 FROM rt0, vt1 GROUP BY rt0.c2, vt1.c0;
SELECT rt0.c2, rt0.c1, rt0.c4, rt0.c3, rt0.c0 FROM rt0 NOT INDEXED GROUP BY rt0.c2, rt0.c1, rt0.c4, rt0.c3, rt0.c0;
SELECT ALL rt0.c2, rt0.c1, rt0.c4, rt0.c3, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c4, rt0.c3, rt0.c0 HAVING COUNT(((AVG(rt0.c1)) NOTNULL)) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c4, rt0.c3, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c4, rt0.c3, rt0.c0 HAVING (NOT (COUNT(((AVG(rt0.c1)) NOTNULL)))) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c4, rt0.c3, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c4, rt0.c3, rt0.c0 HAVING ((COUNT(((AVG(rt0.c1)) NOTNULL))) ISNULL);
SELECT rt0.c2, rt0.c1, vt1.c0 FROM rt0, vt1;
SELECT ALL rt0.c2, rt0.c1, vt1.c0 FROM rt0, vt1 WHERE (((((rt0.c1)GLOB('')))*((- (vt1.c0))))) UNION ALL SELECT ALL rt0.c2, rt0.c1, vt1.c0 FROM rt0, vt1 WHERE ((NOT (((((rt0.c1)GLOB('')))*((- (vt1.c0))))))) UNION ALL SELECT ALL rt0.c2, rt0.c1, vt1.c0 FROM rt0, vt1 WHERE (((((((rt0.c1)GLOB('')))*((- (vt1.c0))))) ISNULL));
SELECT rt0.c2, rt0.c1, vt1.c0 FROM rt0, vt1;
SELECT DISTINCT rt0.c1, rt0.c4 FROM vt1, rt0;
SELECT DISTINCT rt0.c1, rt0.c4 FROM vt1, rt0 WHERE (((CASE WHEN rt0.c1 THEN vt1.c0 ELSE rt0.c1 END) BETWEEN (json_remove(rt0.c0, rt0.c0)) AND (((vt1.c0) BETWEEN (rt0.c1) AND (rt0.c1))))) UNION SELECT DISTINCT rt0.c1, rt0.c4 FROM vt1, rt0 WHERE ((NOT (((CASE WHEN rt0.c1 THEN vt1.c0 ELSE rt0.c1 END) BETWEEN (json_remove(rt0.c0, rt0.c0)) AND (((vt1.c0) BETWEEN (rt0.c1) AND (rt0.c1))))))) UNION SELECT DISTINCT rt0.c1, rt0.c4 FROM vt1, rt0 WHERE (((((CASE WHEN rt0.c1 THEN vt1.c0 ELSE rt0.c1 END) BETWEEN (json_remove(rt0.c0, rt0.c0)) AND (((vt1.c0) BETWEEN (rt0.c1) AND (rt0.c1))))) ISNULL));
SELECT ALL vt1.c0, rt0.c0, rt0.c1, rt0.c2, rt0.c4 FROM rt0, vt1 GROUP BY vt1.c0, rt0.c0, rt0.c1, rt0.c2, rt0.c4;
SELECT ALL vt1.c0, rt0.c0, rt0.c1, rt0.c2, rt0.c4 FROM rt0, vt1 WHERE (CASE ((rt0.c4)+(vt1.c0))  WHEN load_extension(rt0.c3) THEN (((NULL)) BETWEEN ((rt0.c4)) AND ((rt0.c2))) ELSE CASE WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c4 THEN 0.5658185663522308 WHEN rt0.c2 THEN rt0.c4 END END) GROUP BY vt1.c0, rt0.c0, rt0.c1, rt0.c2, rt0.c4 UNION SELECT vt1.c0, rt0.c0, rt0.c1, rt0.c2, rt0.c4 FROM rt0, vt1 WHERE ((NOT (CASE ((rt0.c4)+(vt1.c0))  WHEN load_extension(rt0.c3) THEN (((NULL)) BETWEEN ((rt0.c4)) AND ((rt0.c2))) ELSE CASE WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c4 THEN 0.5658185663522308 WHEN rt0.c2 THEN rt0.c4 END END))) GROUP BY vt1.c0, rt0.c0, rt0.c1, rt0.c2, rt0.c4 UNION SELECT ALL vt1.c0, rt0.c0, rt0.c1, rt0.c2, rt0.c4 FROM rt0, vt1 WHERE (((CASE ((rt0.c4)+(vt1.c0))  WHEN load_extension(rt0.c3) THEN (((NULL)) BETWEEN ((rt0.c4)) AND ((rt0.c2))) ELSE CASE WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c4 THEN 0.5658185663522308 WHEN rt0.c2 THEN rt0.c4 END END) ISNULL)) GROUP BY vt1.c0, rt0.c0, rt0.c1, rt0.c2, rt0.c4;
SELECT ALL rt0.c2, rt0.c0 FROM rt0, vt1 GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM rt0, vt1 GROUP BY rt0.c2, rt0.c0 HAVING ((rt0.c1 COLLATE NOCASE)!=(SUM(rt0.c0))) UNION ALL SELECT rt0.c2, rt0.c0 FROM rt0, vt1 GROUP BY rt0.c2, rt0.c0 HAVING (NOT (((rt0.c1 COLLATE NOCASE)<>(SUM(rt0.c0))))) UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM rt0, vt1 GROUP BY rt0.c2, rt0.c0 HAVING ((((rt0.c1 COLLATE NOCASE)!=(SUM(rt0.c0)))) ISNULL);
SELECT ALL rt0.c2, rt0.c0 FROM rt0, vt1 GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM rt0, vt1 GROUP BY rt0.c2, rt0.c0 HAVING ((rt0.c1 COLLATE NOCASE)!=(SUM(rt0.c0))) UNION ALL SELECT rt0.c2, rt0.c0 FROM rt0, vt1 GROUP BY rt0.c2, rt0.c0 HAVING (NOT (((rt0.c1 COLLATE NOCASE)<>(SUM(rt0.c0))))) UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM rt0, vt1 GROUP BY rt0.c2, rt0.c0 HAVING ((((rt0.c1 COLLATE NOCASE)!=(SUM(rt0.c0)))) ISNULL);
SELECT ALL rt0.c2, rt0.c0 FROM rt0, vt1 GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c1, vt1.c0, rt0.c2 FROM rt0 RIGHT OUTER JOIN vt1 ON CAST(CAST(rt0.c0 AS BLOB) AS INTEGER);
SELECT ALL rt0.c1, vt1.c0, rt0.c2 FROM rt0 RIGHT OUTER JOIN vt1 ON CAST(CAST(rt0.c0 AS BLOB) AS INTEGER) WHERE (CASE ((rt0.c4)<<(vt1.c0))  WHEN CAST(vt1.c0 AS REAL) THEN ABS(DISTINCT rt0.c1) WHEN rt0.c3 COLLATE RTRIM THEN CAST(rt0.c0 AS REAL) WHEN ((rt0.c3)!=(x'5935')) THEN LIKELY(DISTINCT rt0.c2) WHEN ((((((((rt0.c0)AND(rt0.c0)))OR(rt0.c1)))OR(rt0.c3)))AND(rt0.c3)) THEN (0.06264435585151829 IN ()) WHEN rt0.c4 THEN rt0.c0 END) UNION ALL SELECT rt0.c1, vt1.c0, rt0.c2 FROM rt0 RIGHT OUTER JOIN vt1 ON CAST(CAST(rt0.c0 AS BLOB) AS INTEGER) WHERE ((NOT (CASE ((rt0.c4)<<(vt1.c0))  WHEN CAST(vt1.c0 AS REAL) THEN ABS(DISTINCT rt0.c1) WHEN rt0.c3 COLLATE RTRIM THEN CAST(rt0.c0 AS REAL) WHEN ((rt0.c3)<>(x'5935')) THEN LIKELY(DISTINCT rt0.c2) WHEN ((((((((rt0.c0)AND(rt0.c0)))OR(rt0.c1)))OR(rt0.c3)))AND(rt0.c3)) THEN (0.06264435585151829 IN ()) WHEN rt0.c4 THEN rt0.c0 END))) UNION ALL SELECT rt0.c1, vt1.c0, rt0.c2 FROM rt0 RIGHT OUTER JOIN vt1 ON CAST(CAST(rt0.c0 AS BLOB) AS INTEGER) WHERE (((CASE ((rt0.c4)<<(vt1.c0))  WHEN CAST(vt1.c0 AS REAL) THEN ABS(DISTINCT rt0.c1) WHEN rt0.c3 COLLATE RTRIM THEN CAST(rt0.c0 AS REAL) WHEN ((rt0.c3)<>(x'5935')) THEN LIKELY(DISTINCT rt0.c2) WHEN ((((((((rt0.c0)AND(rt0.c0)))OR(rt0.c1)))OR(rt0.c3)))AND(rt0.c3)) THEN (0.06264435585151829 IN ()) WHEN rt0.c4 THEN rt0.c0 END) ISNULL));
SELECT rt0.c1, vt1.c0, rt0.c2 FROM rt0 RIGHT OUTER JOIN vt1 ON CAST(CAST(rt0.c0 AS BLOB) AS INTEGER);
SELECT DISTINCT * FROM rt0, vt1;
SELECT DISTINCT * FROM rt0, vt1 WHERE ((((rt0.c1)) NOT BETWEEN ((((((rt0.c0)OR(rt0.c4)))AND(rt0.c2)))) AND ((rt0.c4)))) UNION SELECT DISTINCT * FROM rt0, vt1 WHERE ((NOT ((((rt0.c1)) NOT BETWEEN ((((((rt0.c0)OR(rt0.c4)))AND(rt0.c2)))) AND ((rt0.c4)))))) UNION SELECT DISTINCT * FROM rt0, vt1 WHERE ((((((rt0.c1)) NOT BETWEEN ((((((rt0.c0)OR(rt0.c4)))AND(rt0.c2)))) AND ((rt0.c4)))) ISNULL));
SELECT DISTINCT * FROM rt0, vt1;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 WHERE ((- (((((rt0.c1)AND(rt0.c1)))AND('I17-	滮D'))))) GROUP BY rt0.c2, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT ((- (((((rt0.c1)AND(rt0.c1)))AND('I17-	滮D'))))))) GROUP BY rt0.c2, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c0 FROM rt0 WHERE ((((- (((((rt0.c1)AND(rt0.c1)))AND('I17-	滮D'))))) ISNULL)) GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, vt1.c0, rt0.c1, rt0.c3, rt0.c0 FROM rt0 LEFT OUTER JOIN vt1 ON (((((((((NOT (rt0.c2)))OR(((rt0.c0)%(rt0.c0)))))AND(CASE WHEN x'' THEN rt0.c1 WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 END)))AND(((rt0.c4)+(rt0.c1)))))OR((NULL IN ()))) GROUP BY rt0.c2, vt1.c0, rt0.c1, rt0.c3, rt0.c0;
SELECT ALL rt0.c2, vt1.c0, rt0.c1, rt0.c3, rt0.c0 FROM rt0 LEFT OUTER JOIN vt1 ON (((((((((NOT (rt0.c2)))OR(((rt0.c0)%(rt0.c0)))))AND(CASE WHEN x'' THEN rt0.c1 WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 END)))AND(((rt0.c4)+(rt0.c1)))))OR((NULL IN ()))) GROUP BY rt0.c2, vt1.c0, rt0.c1, rt0.c3, rt0.c0 HAVING GROUP_CONCAT(0.16061797443508297) UNION ALL SELECT ALL rt0.c2, vt1.c0, rt0.c1, rt0.c3, rt0.c0 FROM rt0 LEFT OUTER JOIN vt1 ON (((((((((NOT (rt0.c2)))OR(((rt0.c0)%(rt0.c0)))))AND(CASE WHEN x'' THEN rt0.c1 WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 END)))AND(((rt0.c4)+(rt0.c1)))))OR((NULL IN ()))) GROUP BY rt0.c2, vt1.c0, rt0.c1, rt0.c3, rt0.c0 HAVING (NOT (GROUP_CONCAT(0.16061797443508297))) UNION ALL SELECT rt0.c2, vt1.c0, rt0.c1, rt0.c3, rt0.c0 FROM rt0 LEFT OUTER JOIN vt1 ON (((((((((NOT (rt0.c2)))OR(((rt0.c0)%(rt0.c0)))))AND(CASE WHEN x'' THEN rt0.c1 WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 END)))AND(((rt0.c4)+(rt0.c1)))))OR((NULL IN ()))) GROUP BY rt0.c2, vt1.c0, rt0.c1, rt0.c3, rt0.c0 HAVING ((GROUP_CONCAT(0.16061797443508297)) ISNULL);
SELECT rt0.c2, vt1.c0, rt0.c1, rt0.c3, rt0.c0 FROM rt0 LEFT OUTER JOIN vt1 ON (((((((((NOT (rt0.c2)))OR(((rt0.c0)%(rt0.c0)))))AND(CASE WHEN x'' THEN rt0.c1 WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 END)))AND(((rt0.c4)+(rt0.c1)))))OR((NULL IN ()))) GROUP BY rt0.c2, vt1.c0, rt0.c1, rt0.c3, rt0.c0;
SELECT ALL rt0.c2, vt1.c0, rt0.c1, rt0.c3, rt0.c0 FROM rt0 LEFT OUTER JOIN vt1 ON (((((((((NOT (rt0.c2)))OR(((rt0.c0)%(rt0.c0)))))AND(CASE WHEN x'' THEN rt0.c1 WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 END)))AND(((rt0.c4)+(rt0.c1)))))OR((NULL IN ()))) GROUP BY rt0.c2, vt1.c0, rt0.c1, rt0.c3, rt0.c0 HAVING GROUP_CONCAT(0.16061797443508297) UNION ALL SELECT ALL rt0.c2, vt1.c0, rt0.c1, rt0.c3, rt0.c0 FROM rt0 LEFT OUTER JOIN vt1 ON (((((((((NOT (rt0.c2)))OR(((rt0.c0)%(rt0.c0)))))AND(CASE WHEN x'' THEN rt0.c1 WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 END)))AND(((rt0.c4)+(rt0.c1)))))OR((NULL IN ()))) GROUP BY rt0.c2, vt1.c0, rt0.c1, rt0.c3, rt0.c0 HAVING (NOT (GROUP_CONCAT(0.16061797443508297))) UNION ALL SELECT rt0.c2, vt1.c0, rt0.c1, rt0.c3, rt0.c0 FROM rt0 LEFT OUTER JOIN vt1 ON (((((((((NOT (rt0.c2)))OR(((rt0.c0)%(rt0.c0)))))AND(CASE WHEN x'' THEN rt0.c1 WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 END)))AND(((rt0.c4)+(rt0.c1)))))OR((NULL IN ()))) GROUP BY rt0.c2, vt1.c0, rt0.c1, rt0.c3, rt0.c0 HAVING ((GROUP_CONCAT(0.16061797443508297)) ISNULL);
SELECT rt0.c2, vt1.c0, rt0.c1, rt0.c3, rt0.c0 FROM rt0 LEFT OUTER JOIN vt1 ON (((((((((NOT (rt0.c2)))OR(((rt0.c0)%(rt0.c0)))))AND(CASE WHEN x'' THEN rt0.c1 WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 END)))AND(((rt0.c4)+(rt0.c1)))))OR((NULL IN ()))) GROUP BY rt0.c2, vt1.c0, rt0.c1, rt0.c3, rt0.c0;
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE ((LOWER(rt0.c2) IN ())) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT ((LOWER(rt0.c2) IN ())))) UNION ALL SELECT * FROM rt0 WHERE ((((LOWER(rt0.c2) IN ())) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT * FROM vt1, rt0;
SELECT DISTINCT * FROM vt1, rt0 WHERE (TRIM(DISTINCT (- (rt0.c4)))) UNION SELECT DISTINCT * FROM vt1, rt0 WHERE ((NOT (TRIM(DISTINCT (- (rt0.c4)))))) UNION SELECT DISTINCT * FROM vt1, rt0 WHERE (((TRIM(DISTINCT (- (rt0.c4)))) ISNULL));
SELECT DISTINCT * FROM vt1, rt0;
SELECT rt0.c4, vt1.c0 FROM vt1, rt0 GROUP BY rt0.c4, vt1.c0;
SELECT ALL rt0.c4, vt1.c0 FROM vt1, rt0 WHERE (((((NULL)AND(((rt0.c0) NOT BETWEEN (rt0.c4) AND (rt0.c0)))))OR(rt0.c3 COLLATE NOCASE))) GROUP BY rt0.c4, vt1.c0 UNION SELECT rt0.c4, vt1.c0 FROM vt1, rt0 WHERE ((NOT (((((NULL)AND(((rt0.c0) NOT BETWEEN (rt0.c4) AND (rt0.c0)))))OR(rt0.c3 COLLATE NOCASE))))) GROUP BY rt0.c4, vt1.c0 UNION SELECT rt0.c4, vt1.c0 FROM vt1, rt0 WHERE (((((((NULL)AND(((rt0.c0) NOT BETWEEN (rt0.c4) AND (rt0.c0)))))OR(rt0.c3 COLLATE NOCASE))) ISNULL)) GROUP BY rt0.c4, vt1.c0;
SELECT rt0.c4, vt1.c0 FROM vt1, rt0 GROUP BY rt0.c4, vt1.c0;
SELECT vt1.c0, rt0.c1 FROM rt0, vt1 GROUP BY vt1.c0, rt0.c1;
SELECT ALL vt1.c0, rt0.c1 FROM rt0, vt1 GROUP BY vt1.c0, rt0.c1 HAVING COUNT(*) UNION ALL SELECT ALL vt1.c0, rt0.c1 FROM rt0, vt1 GROUP BY vt1.c0, rt0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt1.c0, rt0.c1 FROM rt0, vt1 GROUP BY vt1.c0, rt0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT vt1.c0, rt0.c1 FROM rt0, vt1 GROUP BY vt1.c0, rt0.c1;
SELECT ALL vt1.c0, rt0.c1 FROM rt0, vt1 GROUP BY vt1.c0, rt0.c1 HAVING COUNT(*) UNION ALL SELECT ALL vt1.c0, rt0.c1 FROM rt0, vt1 GROUP BY vt1.c0, rt0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt1.c0, rt0.c1 FROM rt0, vt1 GROUP BY vt1.c0, rt0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT vt1.c0, rt0.c1 FROM rt0, vt1 GROUP BY vt1.c0, rt0.c1;
SELECT ALL rt0.c1 FROM vt1, rt0;
SELECT ALL rt0.c1 FROM vt1, rt0 WHERE (((((((((UNICODE(rt0.c0))OR(rt0.c0 COLLATE NOCASE)))OR(((rt0.c0) NOTNULL))))OR((((rt0.c4))<=((rt0.c1))))))OR(((rt0.c4)|(rt0.c2))))) UNION ALL SELECT ALL rt0.c1 FROM vt1, rt0 WHERE ((NOT (((((((((UNICODE(rt0.c0))OR(rt0.c0 COLLATE NOCASE)))OR(((rt0.c0) NOTNULL))))OR((((rt0.c4))<=((rt0.c1))))))OR(((rt0.c4)|(rt0.c2))))))) UNION ALL SELECT ALL rt0.c1 FROM vt1, rt0 WHERE (((((((((((UNICODE(rt0.c0))OR(rt0.c0 COLLATE NOCASE)))OR(((rt0.c0) NOTNULL))))OR((((rt0.c4))<=((rt0.c1))))))OR(((rt0.c4)|(rt0.c2))))) ISNULL));
SELECT ALL rt0.c1 FROM vt1, rt0;
SELECT DISTINCT rt0.c3, rt0.c0, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c3, rt0.c0, rt0.c1 FROM rt0 WHERE (((ABS(DISTINCT rt0.c0))AND(((rt0.c2)%(rt0.c1))))) UNION SELECT DISTINCT rt0.c3, rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (((ABS(DISTINCT rt0.c0))AND(((rt0.c2)%(rt0.c1))))))) UNION SELECT DISTINCT rt0.c3, rt0.c0, rt0.c1 FROM rt0 WHERE (((((ABS(DISTINCT rt0.c0))AND(((rt0.c2)%(rt0.c1))))) ISNULL));
SELECT DISTINCT rt0.c3, rt0.c0, rt0.c1 FROM rt0;
SELECT ALL rt0.c4, rt0.c3, vt1.c0, rt0.c1 FROM vt1 RIGHT OUTER JOIN rt0 ON (+ (((rt0.c4) NOT NULL))) GROUP BY rt0.c4, rt0.c3, vt1.c0, rt0.c1;
SELECT rt0.c4, rt0.c3, vt1.c0, rt0.c1 FROM vt1 RIGHT OUTER JOIN rt0 ON (+ (((rt0.c4) NOT NULL))) WHERE (NULL) GROUP BY rt0.c4, rt0.c3, vt1.c0, rt0.c1 UNION SELECT rt0.c4, rt0.c3, vt1.c0, rt0.c1 FROM vt1 RIGHT OUTER JOIN rt0 ON (+ (((rt0.c4) NOT NULL))) WHERE ((NOT (NULL))) GROUP BY rt0.c4, rt0.c3, vt1.c0, rt0.c1 UNION SELECT rt0.c4, rt0.c3, vt1.c0, rt0.c1 FROM vt1 RIGHT OUTER JOIN rt0 ON (+ (((rt0.c4) NOT NULL))) WHERE (((NULL) ISNULL)) GROUP BY rt0.c4, rt0.c3, vt1.c0, rt0.c1;
SELECT ALL rt0.c4, rt0.c3, vt1.c0, rt0.c1 FROM vt1 RIGHT OUTER JOIN rt0 ON (+ (((rt0.c4) NOT NULL))) GROUP BY rt0.c4, rt0.c3, vt1.c0, rt0.c1;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING COUNT((SUM(COUNT(NULL)) IN (vt1.c0, SUM(vt1.c0)))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (COUNT((SUM(COUNT(NULL)) IN (vt1.c0, SUM(vt1.c0)))))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((COUNT((SUM(COUNT(NULL)) IN (vt1.c0, SUM(vt1.c0))))) ISNULL);
SELECT vt1.c0 FROM vt1;
SELECT vt1.c0 FROM vt1 WHERE ((((vt1.c0 IN ())) NOT BETWEEN (vt1.c0) AND (((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))AND(x''))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT ((((vt1.c0 IN ())) NOT BETWEEN (vt1.c0) AND (((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))AND(x''))))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE ((((((vt1.c0 IN ())) NOT BETWEEN (vt1.c0) AND (((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))AND(x''))))) ISNULL));
SELECT vt1.c0 FROM vt1;
SELECT DISTINCT rt0.c1, vt1.c0, rt0.c2 FROM rt0, vt1;
SELECT DISTINCT rt0.c1, vt1.c0, rt0.c2 FROM rt0, vt1 WHERE (0.2781858380251635) UNION SELECT DISTINCT rt0.c1, vt1.c0, rt0.c2 FROM rt0, vt1 WHERE ((NOT (0.2781858380251635))) UNION SELECT DISTINCT rt0.c1, vt1.c0, rt0.c2 FROM rt0, vt1 WHERE (((0.2781858380251635) ISNULL));
SELECT DISTINCT rt0.c1, vt1.c0, rt0.c2 FROM rt0, vt1;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE ((~ (vt1.c0 COLLATE BINARY))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT ((~ (vt1.c0 COLLATE BINARY))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((((~ (vt1.c0 COLLATE BINARY))) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 NOT INDEXED GROUP BY vt1.c0 HAVING MIN(COUNT(*)) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (MIN(COUNT(*)))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((MIN(COUNT(*))) ISNULL);
SELECT ALL * FROM rt0;
SELECT * FROM rt0 WHERE (rt0.c3) UNION ALL SELECT * FROM rt0 WHERE ((NOT (rt0.c3))) UNION ALL SELECT * FROM rt0 WHERE (((rt0.c3) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT * FROM rt0 FULL OUTER JOIN vt1 ON NULL;
SELECT DISTINCT * FROM rt0 FULL OUTER JOIN vt1 ON NULL WHERE ('') UNION SELECT DISTINCT * FROM rt0 FULL OUTER JOIN vt1 ON NULL WHERE ((NOT (''))) UNION SELECT DISTINCT * FROM rt0 FULL OUTER JOIN vt1 ON NULL WHERE ((('') ISNULL));
SELECT DISTINCT * FROM rt0 FULL OUTER JOIN vt1 ON NULL;
SELECT ALL rt0.c3, rt0.c4, rt0.c2, rt0.c1, rt0.c0, vt1.c0 FROM rt0 LEFT OUTER JOIN vt1 ON (- (((vt1.c0)>(rt0.c3)))) GROUP BY rt0.c3, rt0.c4, rt0.c2, rt0.c1, rt0.c0, vt1.c0;
SELECT rt0.c3, rt0.c4, rt0.c2, rt0.c1, rt0.c0, vt1.c0 FROM rt0 LEFT OUTER JOIN vt1 ON (- (((vt1.c0)>(rt0.c3)))) WHERE (CAST(((rt0.c1) NOTNULL) AS BLOB)) GROUP BY rt0.c3, rt0.c4, rt0.c2, rt0.c1, rt0.c0, vt1.c0 UNION SELECT rt0.c3, rt0.c4, rt0.c2, rt0.c1, rt0.c0, vt1.c0 FROM rt0 LEFT OUTER JOIN vt1 ON (- (((vt1.c0)>(rt0.c3)))) WHERE ((NOT (CAST(((rt0.c1) NOTNULL) AS BLOB)))) GROUP BY rt0.c3, rt0.c4, rt0.c2, rt0.c1, rt0.c0, vt1.c0 UNION SELECT ALL rt0.c3, rt0.c4, rt0.c2, rt0.c1, rt0.c0, vt1.c0 FROM rt0 LEFT OUTER JOIN vt1 ON (- (((vt1.c0)>(rt0.c3)))) WHERE (((CAST(((rt0.c1) NOTNULL) AS BLOB)) ISNULL)) GROUP BY rt0.c3, rt0.c4, rt0.c2, rt0.c1, rt0.c0, vt1.c0;
SELECT ALL rt0.c3, rt0.c4, rt0.c2, rt0.c1, rt0.c0, vt1.c0 FROM rt0 LEFT OUTER JOIN vt1 ON (- (((vt1.c0)>(rt0.c3)))) GROUP BY rt0.c3, rt0.c4, rt0.c2, rt0.c1, rt0.c0, vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0, rt0.c1, rt0.c2 FROM rt0, vt1;
SELECT vt1.c0, rt0.c1, rt0.c2 FROM rt0, vt1 WHERE ((INSTR('1668218549', rt0.c0) IN ())) UNION ALL SELECT vt1.c0, rt0.c1, rt0.c2 FROM rt0, vt1 WHERE ((NOT ((INSTR('1668218549', rt0.c0) IN ())))) UNION ALL SELECT ALL vt1.c0, rt0.c1, rt0.c2 FROM rt0, vt1 WHERE ((((INSTR('1668218549', rt0.c0) IN ())) ISNULL));
SELECT ALL vt1.c0, rt0.c1, rt0.c2 FROM rt0, vt1;
SELECT DISTINCT rt0.c0, rt0.c1, rt0.c3, rt0.c4 FROM rt0, vt1;
SELECT DISTINCT rt0.c0, rt0.c1, rt0.c3, rt0.c4 FROM rt0, vt1 WHERE ((((rt0.c3 IN ()))%(rt0.c1 COLLATE NOCASE))) UNION SELECT DISTINCT rt0.c0, rt0.c1, rt0.c3, rt0.c4 FROM rt0, vt1 WHERE ((NOT ((((rt0.c3 IN ()))%(rt0.c1 COLLATE NOCASE))))) UNION SELECT DISTINCT rt0.c0, rt0.c1, rt0.c3, rt0.c4 FROM rt0, vt1 WHERE ((((((rt0.c3 IN ()))%(rt0.c1 COLLATE NOCASE))) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c1, rt0.c3, rt0.c4 FROM rt0, vt1;
SELECT rt0.c3, rt0.c4 FROM rt0 RIGHT OUTER JOIN vt1 ON CAST(((rt0.c4)||(vt1.c0)) AS TEXT) GROUP BY rt0.c3, rt0.c4;
SELECT ALL rt0.c3, rt0.c4 FROM rt0 RIGHT OUTER JOIN vt1 ON CAST(((rt0.c4)||(vt1.c0)) AS TEXT) WHERE (('-1729173314' IN ())) GROUP BY rt0.c3, rt0.c4 UNION SELECT ALL rt0.c3, rt0.c4 FROM rt0 RIGHT OUTER JOIN vt1 ON CAST(((rt0.c4)||(vt1.c0)) AS TEXT) WHERE ((NOT (('-1729173314' IN ())))) GROUP BY rt0.c3, rt0.c4 UNION SELECT rt0.c3, rt0.c4 FROM rt0 RIGHT OUTER JOIN vt1 ON CAST(((rt0.c4)||(vt1.c0)) AS TEXT) WHERE (((('-1729173314' IN ())) ISNULL)) GROUP BY rt0.c3, rt0.c4;
SELECT rt0.c3, rt0.c4 FROM rt0 RIGHT OUTER JOIN vt1 ON CAST(((rt0.c4)||(vt1.c0)) AS TEXT) GROUP BY rt0.c3, rt0.c4;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING CASE rt0.c2  WHEN (((AVG(rt0.c2))) NOT BETWEEN ((GROUP_CONCAT(rt0.c3))) AND ((rt0.c2))) THEN ((rt0.c1) BETWEEN (rt0.c1) AND (COUNT(TOTAL(COUNT(*))))) ELSE '-293535413' END UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT (CASE rt0.c2  WHEN (((AVG(rt0.c2))) NOT BETWEEN ((GROUP_CONCAT(rt0.c3))) AND ((rt0.c2))) THEN ((rt0.c1) BETWEEN (rt0.c1) AND (COUNT(TOTAL(COUNT(*))))) ELSE '-293535413' END)) UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING ((CASE rt0.c2  WHEN (((AVG(rt0.c2))) NOT BETWEEN ((GROUP_CONCAT(rt0.c3))) AND ((rt0.c2))) THEN ((rt0.c1) BETWEEN (rt0.c1) AND (COUNT(TOTAL(COUNT(*))))) ELSE '-293535413' END) ISNULL);
SELECT * FROM rt0, vt1;
SELECT * FROM rt0, vt1 WHERE ((((((((((('tJF8\n5E㠣') BETWEEN (rt0.c4) AND (vt1.c0)))OR(0Xffffffffa09fac92)))AND(((rt0.c4)/(rt0.c1)))))OR(CAST(rt0.c1 AS NUMERIC))))AND(rt0.c1 COLLATE BINARY))) UNION ALL SELECT * FROM rt0, vt1 WHERE ((NOT ((((((((((('tJF8\n5E㠣') BETWEEN (rt0.c4) AND (vt1.c0)))OR(0Xffffffffa09fac92)))AND(((rt0.c4)/(rt0.c1)))))OR(CAST(rt0.c1 AS NUMERIC))))AND(rt0.c1 COLLATE BINARY))))) UNION ALL SELECT * FROM rt0, vt1 WHERE ((((((((((((('tJF8\n5E㠣') BETWEEN (rt0.c4) AND (vt1.c0)))OR(0xffffffffa09fac92)))AND(((rt0.c4)/(rt0.c1)))))OR(CAST(rt0.c1 AS NUMERIC))))AND(rt0.c1 COLLATE BINARY))) ISNULL));
SELECT * FROM rt0, vt1;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (CAST(CAST(rt0.c3 AS TEXT) AS BLOB)) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (CAST(CAST(rt0.c3 AS TEXT) AS BLOB)))) UNION SELECT DISTINCT * FROM rt0 WHERE (((CAST(CAST(rt0.c3 AS TEXT) AS BLOB)) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c1, rt0.c2, rt0.c4, rt0.c0 FROM vt1 RIGHT OUTER JOIN rt0 ON ((rt0.c2)IS NOT(rt0.c4)) COLLATE NOCASE GROUP BY rt0.c1, rt0.c2, rt0.c4, rt0.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c4, rt0.c0 FROM vt1 RIGHT OUTER JOIN rt0 ON ((rt0.c2)IS NOT(rt0.c4)) COLLATE NOCASE WHERE (LIKELY(((rt0.c0) ISNULL))) GROUP BY rt0.c1, rt0.c2, rt0.c4, rt0.c0 UNION SELECT rt0.c1, rt0.c2, rt0.c4, rt0.c0 FROM vt1 RIGHT OUTER JOIN rt0 ON ((rt0.c2)IS NOT(rt0.c4)) COLLATE NOCASE WHERE ((NOT (LIKELY(((rt0.c0) ISNULL))))) GROUP BY rt0.c1, rt0.c2, rt0.c4, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c2, rt0.c4, rt0.c0 FROM vt1 RIGHT OUTER JOIN rt0 ON ((rt0.c2)IS NOT(rt0.c4)) COLLATE NOCASE WHERE (((LIKELY(((rt0.c0) ISNULL))) ISNULL)) GROUP BY rt0.c1, rt0.c2, rt0.c4, rt0.c0;
SELECT rt0.c1, rt0.c2, rt0.c4, rt0.c0 FROM vt1 RIGHT OUTER JOIN rt0 ON ((rt0.c2)IS NOT(rt0.c4)) COLLATE NOCASE GROUP BY rt0.c1, rt0.c2, rt0.c4, rt0.c0;
SELECT rt0.c1, rt0.c4, rt0.c3, rt0.c2, vt1.c0, rt0.c0 FROM rt0, vt1 GROUP BY rt0.c1, rt0.c4, rt0.c3, rt0.c2, vt1.c0, rt0.c0;
SELECT rt0.c1, rt0.c4, rt0.c3, rt0.c2, vt1.c0, rt0.c0 FROM rt0, vt1 GROUP BY rt0.c1, rt0.c4, rt0.c3, rt0.c2, vt1.c0, rt0.c0 HAVING SUM(0.5405696618393033) UNION ALL SELECT ALL rt0.c1, rt0.c4, rt0.c3, rt0.c2, vt1.c0, rt0.c0 FROM rt0, vt1 GROUP BY rt0.c1, rt0.c4, rt0.c3, rt0.c2, vt1.c0, rt0.c0 HAVING (NOT (SUM(0.5405696618393033))) UNION ALL SELECT rt0.c1, rt0.c4, rt0.c3, rt0.c2, vt1.c0, rt0.c0 FROM rt0, vt1 GROUP BY rt0.c1, rt0.c4, rt0.c3, rt0.c2, vt1.c0, rt0.c0 HAVING ((SUM(0.5405696618393033)) ISNULL);
SELECT rt0.c1, rt0.c4, rt0.c3, rt0.c2, vt1.c0, rt0.c0 FROM rt0, vt1 GROUP BY rt0.c1, rt0.c4, rt0.c3, rt0.c2, vt1.c0, rt0.c0;
SELECT rt0.c1, rt0.c4, rt0.c3, rt0.c2, vt1.c0, rt0.c0 FROM rt0, vt1 GROUP BY rt0.c1, rt0.c4, rt0.c3, rt0.c2, vt1.c0, rt0.c0 HAVING SUM(0.5405696618393033) UNION ALL SELECT ALL rt0.c1, rt0.c4, rt0.c3, rt0.c2, vt1.c0, rt0.c0 FROM rt0, vt1 GROUP BY rt0.c1, rt0.c4, rt0.c3, rt0.c2, vt1.c0, rt0.c0 HAVING (NOT (SUM(0.5405696618393033))) UNION ALL SELECT rt0.c1, rt0.c4, rt0.c3, rt0.c2, vt1.c0, rt0.c0 FROM rt0, vt1 GROUP BY rt0.c1, rt0.c4, rt0.c3, rt0.c2, vt1.c0, rt0.c0 HAVING ((SUM(0.5405696618393033)) ISNULL);
SELECT rt0.c1, rt0.c4, rt0.c3, rt0.c2, vt1.c0, rt0.c0 FROM rt0, vt1 GROUP BY rt0.c1, rt0.c4, rt0.c3, rt0.c2, vt1.c0, rt0.c0;
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE (0.4582526652522756) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (0.4582526652522756))) UNION ALL SELECT ALL * FROM rt0 WHERE (((0.4582526652522756) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT vt1.c0, rt0.c4 FROM vt1, rt0;
SELECT DISTINCT vt1.c0, rt0.c4 FROM vt1, rt0 WHERE (((CAST(rt0.c0 AS NUMERIC))>((((('-1165483787')AND(rt0.c4)))OR(x''))))) UNION SELECT DISTINCT vt1.c0, rt0.c4 FROM vt1, rt0 WHERE ((NOT (((CAST(rt0.c0 AS NUMERIC))>((((('-1165483787')AND(rt0.c4)))OR(x''))))))) UNION SELECT DISTINCT vt1.c0, rt0.c4 FROM vt1, rt0 WHERE (((((CAST(rt0.c0 AS NUMERIC))>((((('-1165483787')AND(rt0.c4)))OR(x''))))) ISNULL));
SELECT DISTINCT vt1.c0, rt0.c4 FROM vt1, rt0;
SELECT rt0.c2, rt0.c4, rt0.c0, vt1.c0, rt0.c3 FROM vt1, rt0 GROUP BY rt0.c2, rt0.c4, rt0.c0, vt1.c0, rt0.c3;
SELECT ALL rt0.c2, rt0.c4, rt0.c0, vt1.c0, rt0.c3 FROM vt1, rt0 WHERE ((((rt0.c0, vt1.c0, rt0.c3)) NOT BETWEEN (((('|c') IS FALSE), (((rt0.c4)) BETWEEN ((rt0.c0)) AND ((rt0.c2))), rt0.c0)) AND ((CASE rt0.c0  WHEN rt0.c2 THEN vt1.c0 ELSE rt0.c3 END, ((((rt0.c1)AND(vt1.c0)))AND(rt0.c2)), ((rt0.c4) IS TRUE))))) GROUP BY rt0.c2, rt0.c4, rt0.c0, vt1.c0, rt0.c3 UNION SELECT rt0.c2, rt0.c4, rt0.c0, vt1.c0, rt0.c3 FROM vt1, rt0 WHERE ((NOT ((((rt0.c0, vt1.c0, rt0.c3)) NOT BETWEEN (((('|c') IS FALSE), (((rt0.c4)) BETWEEN ((rt0.c0)) AND ((rt0.c2))), rt0.c0)) AND ((CASE rt0.c0  WHEN rt0.c2 THEN vt1.c0 ELSE rt0.c3 END, ((((rt0.c1)AND(vt1.c0)))AND(rt0.c2)), ((rt0.c4) IS TRUE))))))) GROUP BY rt0.c2, rt0.c4, rt0.c0, vt1.c0, rt0.c3 UNION SELECT ALL rt0.c2, rt0.c4, rt0.c0, vt1.c0, rt0.c3 FROM vt1, rt0 WHERE ((((((rt0.c0, vt1.c0, rt0.c3)) NOT BETWEEN (((('|c') IS FALSE), (((rt0.c4)) BETWEEN ((rt0.c0)) AND ((rt0.c2))), rt0.c0)) AND ((CASE rt0.c0  WHEN rt0.c2 THEN vt1.c0 ELSE rt0.c3 END, ((((rt0.c1)AND(vt1.c0)))AND(rt0.c2)), ((rt0.c4) IS TRUE))))) ISNULL)) GROUP BY rt0.c2, rt0.c4, rt0.c0, vt1.c0, rt0.c3;
SELECT rt0.c2, rt0.c4, rt0.c0, vt1.c0, rt0.c3 FROM vt1, rt0 GROUP BY rt0.c2, rt0.c4, rt0.c0, vt1.c0, rt0.c3;
SELECT rt0.c1, vt1.c0, rt0.c3 FROM rt0 CROSS JOIN vt1 ON rt0.c0 GROUP BY rt0.c1, vt1.c0, rt0.c3;
SELECT ALL rt0.c1, vt1.c0, rt0.c3 FROM rt0 CROSS JOIN vt1 ON rt0.c0 GROUP BY rt0.c1, vt1.c0, rt0.c3 HAVING ((((rt0.c1)-(MAX(rt0.c3)))) BETWEEN ((- (MAX(rt0.c1)))) AND (TOTAL('XY_HꜦF㠣'))) UNION ALL SELECT ALL rt0.c1, vt1.c0, rt0.c3 FROM rt0 CROSS JOIN vt1 ON rt0.c0 GROUP BY rt0.c1, vt1.c0, rt0.c3 HAVING (NOT (((((rt0.c1)-(MAX(rt0.c3)))) BETWEEN ((- (MAX(rt0.c1)))) AND (TOTAL('XY_HꜦF㠣'))))) UNION ALL SELECT rt0.c1, vt1.c0, rt0.c3 FROM rt0 CROSS JOIN vt1 ON rt0.c0 GROUP BY rt0.c1, vt1.c0, rt0.c3 HAVING ((((((rt0.c1)-(MAX(rt0.c3)))) BETWEEN ((- (MAX(rt0.c1)))) AND (TOTAL('XY_HꜦF㠣')))) ISNULL);
SELECT rt0.c1, vt1.c0, rt0.c3 FROM rt0 CROSS JOIN vt1 ON rt0.c0 GROUP BY rt0.c1, vt1.c0, rt0.c3;
SELECT ALL rt0.c1, vt1.c0, rt0.c3 FROM rt0 CROSS JOIN vt1 ON rt0.c0 GROUP BY rt0.c1, vt1.c0, rt0.c3 HAVING ((((rt0.c1)-(MAX(rt0.c3)))) BETWEEN ((- (MAX(rt0.c1)))) AND (TOTAL('XY_HꜦF㠣'))) UNION ALL SELECT ALL rt0.c1, vt1.c0, rt0.c3 FROM rt0 CROSS JOIN vt1 ON rt0.c0 GROUP BY rt0.c1, vt1.c0, rt0.c3 HAVING (NOT (((((rt0.c1)-(MAX(rt0.c3)))) BETWEEN ((- (MAX(rt0.c1)))) AND (TOTAL('XY_HꜦF㠣'))))) UNION ALL SELECT rt0.c1, vt1.c0, rt0.c3 FROM rt0 CROSS JOIN vt1 ON rt0.c0 GROUP BY rt0.c1, vt1.c0, rt0.c3 HAVING ((((((rt0.c1)-(MAX(rt0.c3)))) BETWEEN ((- (MAX(rt0.c1)))) AND (TOTAL('XY_HꜦF㠣')))) ISNULL);
SELECT rt0.c1, vt1.c0, rt0.c3 FROM rt0 CROSS JOIN vt1 ON rt0.c0 GROUP BY rt0.c1, vt1.c0, rt0.c3;
SELECT MIN(((((rt0.c0)-(rt0.c4))) BETWEEN (NULL) AND ('\nWw'))) FROM rt0 ORDER BY (((NOT (rt0.c4)))>=((rt0.c4 IN (rt0.c1)))) ASC  NULLS LAST;
SELECT ALL * FROM vt1 CROSS JOIN rt0 ON (((429484733) NOT NULL) IN ());
SELECT ALL * FROM vt1 CROSS JOIN rt0 ON (((429484733) NOT NULL) IN ()) WHERE (CAST(((rt0.c4)<<(rt0.c2)) AS REAL)) UNION ALL SELECT * FROM vt1 CROSS JOIN rt0 ON (((429484733) NOT NULL) IN ()) WHERE ((NOT (CAST(((rt0.c4)<<(rt0.c2)) AS REAL)))) UNION ALL SELECT ALL * FROM vt1 CROSS JOIN rt0 ON (((429484733) NOT NULL) IN ()) WHERE (((CAST(((rt0.c4)<<(rt0.c2)) AS REAL)) ISNULL));
SELECT ALL * FROM vt1 CROSS JOIN rt0 ON (((429484733) NOT NULL) IN ());
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((CASE rt0.c3  WHEN rt0.c4 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c4 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c4 THEN rt0.c1 END) BETWEEN (((x'3342')/(rt0.c1))) AND (CAST(rt0.c4 AS BLOB)))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((CASE rt0.c3  WHEN rt0.c4 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c4 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c4 THEN rt0.c1 END) BETWEEN (((x'3342')/(rt0.c1))) AND (CAST(rt0.c4 AS BLOB)))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((CASE rt0.c3  WHEN rt0.c4 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c4 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c4 THEN rt0.c1 END) BETWEEN (((x'3342')/(rt0.c1))) AND (CAST(rt0.c4 AS BLOB)))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 WHERE (-20452445) GROUP BY rt0.c2, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (-20452445))) GROUP BY rt0.c2, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c1 FROM rt0 WHERE (((-20452445) ISNULL)) GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c3, rt0.c4, rt0.c1, vt1.c0, rt0.c2, rt0.c0 FROM vt1, rt0 GROUP BY rt0.c3, rt0.c4, rt0.c1, vt1.c0, rt0.c2, rt0.c0;
SELECT rt0.c3, rt0.c4, rt0.c1, vt1.c0, rt0.c2, rt0.c0 FROM vt1, rt0 GROUP BY rt0.c3, rt0.c4, rt0.c1, vt1.c0, rt0.c2, rt0.c0 HAVING AVG(((SUM(x''))/(rt0.c2))) UNION ALL SELECT rt0.c3, rt0.c4, rt0.c1, vt1.c0, rt0.c2, rt0.c0 FROM vt1, rt0 GROUP BY rt0.c3, rt0.c4, rt0.c1, vt1.c0, rt0.c2, rt0.c0 HAVING (NOT (AVG(((SUM(x''))/(rt0.c2))))) UNION ALL SELECT ALL rt0.c3, rt0.c4, rt0.c1, vt1.c0, rt0.c2, rt0.c0 FROM vt1, rt0 GROUP BY rt0.c3, rt0.c4, rt0.c1, vt1.c0, rt0.c2, rt0.c0 HAVING ((AVG(((SUM(x''))/(rt0.c2)))) ISNULL);
SELECT ALL * FROM rt0 FULL OUTER JOIN vt1 ON (((+ (NULL))) BETWEEN ((- (rt0.c3))) AND (CASE vt1.c0  WHEN rt0.c2 THEN rt0.c2 WHEN vt1.c0 THEN rt0.c4 WHEN rt0.c0 THEN NULL END));
SELECT ALL * FROM rt0 FULL OUTER JOIN vt1 ON (((+ (NULL))) BETWEEN ((- (rt0.c3))) AND (CASE vt1.c0  WHEN rt0.c2 THEN rt0.c2 WHEN vt1.c0 THEN rt0.c4 WHEN rt0.c0 THEN NULL END)) WHERE ((((rt0.c1)&(rt0.c2)) IN (((((((((rt0.c1)AND(rt0.c3)))AND(rt0.c3)))AND(rt0.c3)))OR(vt1.c0))))) UNION ALL SELECT ALL * FROM rt0 FULL OUTER JOIN vt1 ON (((+ (NULL))) BETWEEN ((- (rt0.c3))) AND (CASE vt1.c0  WHEN rt0.c2 THEN rt0.c2 WHEN vt1.c0 THEN rt0.c4 WHEN rt0.c0 THEN NULL END)) WHERE ((NOT ((((rt0.c1)&(rt0.c2)) IN (((((((((rt0.c1)AND(rt0.c3)))AND(rt0.c3)))AND(rt0.c3)))OR(vt1.c0))))))) UNION ALL SELECT * FROM rt0 FULL OUTER JOIN vt1 ON (((+ (NULL))) BETWEEN ((- (rt0.c3))) AND (CASE vt1.c0  WHEN rt0.c2 THEN rt0.c2 WHEN vt1.c0 THEN rt0.c4 WHEN rt0.c0 THEN NULL END)) WHERE ((((((rt0.c1)&(rt0.c2)) IN (((((((((rt0.c1)AND(rt0.c3)))AND(rt0.c3)))AND(rt0.c3)))OR(vt1.c0))))) ISNULL));
SELECT ALL * FROM rt0 FULL OUTER JOIN vt1 ON (((+ (NULL))) BETWEEN ((- (rt0.c3))) AND (CASE vt1.c0  WHEN rt0.c2 THEN rt0.c2 WHEN vt1.c0 THEN rt0.c4 WHEN rt0.c0 THEN NULL END));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((CAST(vt1.c0 AS REAL))OR(vt1.c0 COLLATE BINARY))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT (((CAST(vt1.c0 AS REAL))OR(vt1.c0 COLLATE BINARY))))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((((CAST(vt1.c0 AS REAL))OR(vt1.c0 COLLATE BINARY))) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE (CASE WHEN x'' THEN ((vt1.c0)AND(vt1.c0)) ELSE IFNULL(DISTINCT vt1.c0, vt1.c0) END) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT (CASE WHEN x'' THEN ((vt1.c0)AND(vt1.c0)) ELSE IFNULL(DISTINCT vt1.c0, vt1.c0) END))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE (((CASE WHEN x'' THEN ((vt1.c0)AND(vt1.c0)) ELSE IFNULL(DISTINCT vt1.c0, vt1.c0) END) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c3, rt0.c4 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c3, rt0.c4;
SELECT ALL rt0.c1, rt0.c2, rt0.c3, rt0.c4 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c3, rt0.c4 HAVING ((((((TOTAL(rt0.c2))IS(rt0.c2)))AND((GROUP_CONCAT(rt0.c4) IN ()))))OR(rt0.c2)) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c3, rt0.c4 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c3, rt0.c4 HAVING (NOT (((((((TOTAL(rt0.c2))IS(rt0.c2)))AND((GROUP_CONCAT(rt0.c4) IN ()))))OR(rt0.c2)))) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c3, rt0.c4 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c3, rt0.c4 HAVING ((((((((TOTAL(rt0.c2))IS(rt0.c2)))AND((GROUP_CONCAT(rt0.c4) IN ()))))OR(rt0.c2))) ISNULL);
SELECT ALL rt0.c1, rt0.c2, rt0.c3, rt0.c4 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c3, rt0.c4;
SELECT ALL rt0.c1, rt0.c2, rt0.c3, rt0.c4 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c3, rt0.c4 HAVING ((((((TOTAL(rt0.c2))IS(rt0.c2)))AND((GROUP_CONCAT(rt0.c4) IN ()))))OR(rt0.c2)) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c3, rt0.c4 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c3, rt0.c4 HAVING (NOT (((((((TOTAL(rt0.c2))IS(rt0.c2)))AND((GROUP_CONCAT(rt0.c4) IN ()))))OR(rt0.c2)))) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c3, rt0.c4 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c3, rt0.c4 HAVING ((((((((TOTAL(rt0.c2))IS(rt0.c2)))AND((GROUP_CONCAT(rt0.c4) IN ()))))OR(rt0.c2))) ISNULL);
SELECT ALL rt0.c1, rt0.c2, rt0.c3, rt0.c4 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c3, rt0.c4;
SELECT rt0.c0, rt0.c3, vt1.c0, rt0.c2, rt0.c4 FROM rt0, vt1;
SELECT ALL rt0.c0, rt0.c3, vt1.c0, rt0.c2, rt0.c4 FROM rt0, vt1 WHERE ((- (((((((((((((vt1.c0)AND(x'')))OR(rt0.c2)))AND(rt0.c2)))OR(rt0.c3)))AND(rt0.c0)))OR(rt0.c2))))) UNION ALL SELECT ALL rt0.c0, rt0.c3, vt1.c0, rt0.c2, rt0.c4 FROM rt0, vt1 WHERE ((NOT ((- (((((((((((((vt1.c0)AND(x'')))OR(rt0.c2)))AND(rt0.c2)))OR(rt0.c3)))AND(rt0.c0)))OR(rt0.c2))))))) UNION ALL SELECT ALL rt0.c0, rt0.c3, vt1.c0, rt0.c2, rt0.c4 FROM rt0, vt1 WHERE ((((- (((((((((((((vt1.c0)AND(x'')))OR(rt0.c2)))AND(rt0.c2)))OR(rt0.c3)))AND(rt0.c0)))OR(rt0.c2))))) ISNULL));
SELECT rt0.c0, rt0.c3, vt1.c0, rt0.c2, rt0.c4 FROM rt0, vt1;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (CASE WHEN ((rt0.c2)/(rt0.c4)) THEN ((((rt0.c2)AND(rt0.c2)))AND(rt0.c0)) ELSE rt0.c1 COLLATE RTRIM END) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (CASE WHEN ((rt0.c2)/(rt0.c4)) THEN ((((rt0.c2)AND(rt0.c2)))AND(rt0.c0)) ELSE rt0.c1 COLLATE RTRIM END))) UNION SELECT DISTINCT * FROM rt0 WHERE (((CASE WHEN ((rt0.c2)/(rt0.c4)) THEN ((((rt0.c2)AND(rt0.c2)))AND(rt0.c0)) ELSE rt0.c1 COLLATE RTRIM END) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c2, rt0.c1, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c3;
SELECT ALL rt0.c2, rt0.c1, rt0.c3 FROM rt0 WHERE ((((rt0.c2 IN ()))=(((x'')/(rt0.c3))))) GROUP BY rt0.c2, rt0.c1, rt0.c3 UNION SELECT rt0.c2, rt0.c1, rt0.c3 FROM rt0 WHERE ((NOT ((((rt0.c2 IN ()))=(((x'')/(rt0.c3))))))) GROUP BY rt0.c2, rt0.c1, rt0.c3 UNION SELECT ALL rt0.c2, rt0.c1, rt0.c3 FROM rt0 WHERE ((((((rt0.c2 IN ()))==(((x'')/(rt0.c3))))) ISNULL)) GROUP BY rt0.c2, rt0.c1, rt0.c3;
SELECT ALL rt0.c2, rt0.c1, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c3;
SELECT ALL rt0.c2, rt0.c3, rt0.c1, vt1.c0, rt0.c4 FROM vt1, rt0 GROUP BY rt0.c2, rt0.c3, rt0.c1, vt1.c0, rt0.c4;
SELECT ALL rt0.c2, rt0.c3, rt0.c1, vt1.c0, rt0.c4 FROM vt1, rt0 GROUP BY rt0.c2, rt0.c3, rt0.c1, vt1.c0, rt0.c4 HAVING vt1.c0 UNION ALL SELECT rt0.c2, rt0.c3, rt0.c1, vt1.c0, rt0.c4 FROM vt1, rt0 GROUP BY rt0.c2, rt0.c3, rt0.c1, vt1.c0, rt0.c4 HAVING (NOT (vt1.c0)) UNION ALL SELECT ALL rt0.c2, rt0.c3, rt0.c1, vt1.c0, rt0.c4 FROM vt1, rt0 GROUP BY rt0.c2, rt0.c3, rt0.c1, vt1.c0, rt0.c4 HAVING ((vt1.c0) ISNULL);
SELECT ALL rt0.c2, rt0.c3, rt0.c1, vt1.c0, rt0.c4 FROM vt1, rt0 GROUP BY rt0.c2, rt0.c3, rt0.c1, vt1.c0, rt0.c4;
SELECT ALL rt0.c2, rt0.c3, rt0.c1, vt1.c0, rt0.c4 FROM vt1, rt0 GROUP BY rt0.c2, rt0.c3, rt0.c1, vt1.c0, rt0.c4 HAVING vt1.c0 UNION ALL SELECT rt0.c2, rt0.c3, rt0.c1, vt1.c0, rt0.c4 FROM vt1, rt0 GROUP BY rt0.c2, rt0.c3, rt0.c1, vt1.c0, rt0.c4 HAVING (NOT (vt1.c0)) UNION ALL SELECT ALL rt0.c2, rt0.c3, rt0.c1, vt1.c0, rt0.c4 FROM vt1, rt0 GROUP BY rt0.c2, rt0.c3, rt0.c1, vt1.c0, rt0.c4 HAVING ((vt1.c0) ISNULL);
SELECT ALL rt0.c2, rt0.c3, rt0.c1, vt1.c0, rt0.c4 FROM vt1, rt0 GROUP BY rt0.c2, rt0.c3, rt0.c1, vt1.c0, rt0.c4;
SELECT rt0.c4, rt0.c0, rt0.c2, rt0.c3 FROM rt0;
SELECT rt0.c4, rt0.c0, rt0.c2, rt0.c3 FROM rt0 WHERE (rt0.c4) UNION ALL SELECT ALL rt0.c4, rt0.c0, rt0.c2, rt0.c3 FROM rt0 WHERE ((NOT (rt0.c4))) UNION ALL SELECT ALL rt0.c4, rt0.c0, rt0.c2, rt0.c3 FROM rt0 WHERE (((rt0.c4) ISNULL));
SELECT rt0.c4, rt0.c0, rt0.c2, rt0.c3 FROM rt0;
SELECT DISTINCT rt0.c4, rt0.c2, rt0.c1 FROM vt1, rt0;
SELECT DISTINCT rt0.c4, rt0.c2, rt0.c1 FROM vt1, rt0 WHERE (((rt0.c0 COLLATE RTRIM) BETWEEN ((((rt0.c1))<=((rt0.c1)))) AND (((rt0.c1)|(vt1.c0))))) UNION SELECT DISTINCT rt0.c4, rt0.c2, rt0.c1 FROM vt1, rt0 WHERE ((NOT (((rt0.c0 COLLATE RTRIM) BETWEEN ((((rt0.c1))<=((rt0.c1)))) AND (((rt0.c1)|(vt1.c0))))))) UNION SELECT DISTINCT rt0.c4, rt0.c2, rt0.c1 FROM vt1, rt0 WHERE (((((rt0.c0 COLLATE RTRIM) BETWEEN ((((rt0.c1))<=((rt0.c1)))) AND (((rt0.c1)|(vt1.c0))))) ISNULL));
SELECT DISTINCT rt0.c4, rt0.c2, rt0.c1 FROM vt1, rt0;
SELECT ALL rt0.c1, rt0.c0, rt0.c3, rt0.c2, rt0.c4 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c3, rt0.c2, rt0.c4;
SELECT rt0.c1, rt0.c0, rt0.c3, rt0.c2, rt0.c4 FROM rt0 WHERE (NULL) GROUP BY rt0.c1, rt0.c0, rt0.c3, rt0.c2, rt0.c4 UNION SELECT ALL rt0.c1, rt0.c0, rt0.c3, rt0.c2, rt0.c4 FROM rt0 WHERE ((NOT (NULL))) GROUP BY rt0.c1, rt0.c0, rt0.c3, rt0.c2, rt0.c4 UNION SELECT rt0.c1, rt0.c0, rt0.c3, rt0.c2, rt0.c4 FROM rt0 WHERE (((NULL) ISNULL)) GROUP BY rt0.c1, rt0.c0, rt0.c3, rt0.c2, rt0.c4;
SELECT ALL rt0.c1, rt0.c0, rt0.c3, rt0.c2, rt0.c4 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c3, rt0.c2, rt0.c4;
SELECT ALL rt0.c1, rt0.c4, rt0.c2 FROM vt1, rt0 GROUP BY rt0.c1, rt0.c4, rt0.c2;
SELECT ALL rt0.c1, rt0.c4, rt0.c2 FROM vt1, rt0 GROUP BY rt0.c1, rt0.c4, rt0.c2 HAVING vt1.c0 UNION ALL SELECT rt0.c1, rt0.c4, rt0.c2 FROM vt1, rt0 GROUP BY rt0.c1, rt0.c4, rt0.c2 HAVING (NOT (vt1.c0)) UNION ALL SELECT ALL rt0.c1, rt0.c4, rt0.c2 FROM vt1, rt0 GROUP BY rt0.c1, rt0.c4, rt0.c2 HAVING ((vt1.c0) ISNULL);
SELECT ALL rt0.c1, rt0.c4, rt0.c2 FROM vt1, rt0 GROUP BY rt0.c1, rt0.c4, rt0.c2;
SELECT ALL rt0.c1, rt0.c4, rt0.c2 FROM vt1, rt0 GROUP BY rt0.c1, rt0.c4, rt0.c2 HAVING vt1.c0 UNION ALL SELECT rt0.c1, rt0.c4, rt0.c2 FROM vt1, rt0 GROUP BY rt0.c1, rt0.c4, rt0.c2 HAVING (NOT (vt1.c0)) UNION ALL SELECT ALL rt0.c1, rt0.c4, rt0.c2 FROM vt1, rt0 GROUP BY rt0.c1, rt0.c4, rt0.c2 HAVING ((vt1.c0) ISNULL);
SELECT ALL rt0.c1, rt0.c4, rt0.c2 FROM vt1, rt0 GROUP BY rt0.c1, rt0.c4, rt0.c2;
SELECT MAX(((((vt1.c0)AND(vt1.c0)))AND(NULL)) COLLATE BINARY) FROM vt1;
SELECT vt1.c0 FROM vt1;
SELECT vt1.c0 FROM vt1 WHERE ('1517131869' COLLATE RTRIM) UNION ALL SELECT vt1.c0 FROM vt1 WHERE ((NOT ('1517131869' COLLATE RTRIM))) UNION ALL SELECT vt1.c0 FROM vt1 WHERE ((('1517131869' COLLATE RTRIM) ISNULL));
SELECT vt1.c0 FROM vt1;
SELECT DISTINCT * FROM vt1 NATURAL JOIN rt0;
SELECT DISTINCT * FROM vt1 NATURAL JOIN rt0 WHERE (((rt0.c0) NOT NULL)) UNION SELECT DISTINCT * FROM vt1 NATURAL JOIN rt0 WHERE ((NOT (((rt0.c0) NOT NULL)))) UNION SELECT DISTINCT * FROM vt1 NATURAL JOIN rt0 WHERE (((((rt0.c0) NOT NULL)) ISNULL));
SELECT DISTINCT * FROM vt1 NATURAL JOIN rt0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE ((+ (((vt1.c0) ISNULL)))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT ((+ (((vt1.c0) ISNULL)))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((((+ (((vt1.c0) ISNULL)))) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (vt1.c0 IN ()) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT ((vt1.c0 IN ()))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (((vt1.c0 IN ())) ISNULL);
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (vt1.c0 IN ()) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT ((vt1.c0 IN ()))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (((vt1.c0 IN ())) ISNULL);
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL * FROM rt0, vt1;
SELECT * FROM rt0, vt1 WHERE (rt0.c4) UNION ALL SELECT ALL * FROM rt0, vt1 WHERE ((NOT (rt0.c4))) UNION ALL SELECT * FROM rt0, vt1 WHERE (((rt0.c4) ISNULL));
SELECT ALL * FROM rt0, vt1;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (COALESCE((vt1.c0 IN ()), TRIM(DISTINCT vt1.c0))) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (COALESCE((vt1.c0 IN ()), TRIM(DISTINCT vt1.c0))))) UNION SELECT DISTINCT * FROM vt1 WHERE (((COALESCE((vt1.c0 IN ()), TRIM(DISTINCT vt1.c0))) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE (((((x'' IN ()), ((vt1.c0) NOT NULL), (~ (vt1.c0))))>((TYPEOF(vt1.c0), CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END, (((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT (((((x'' IN ()), ((vt1.c0) NOT NULL), (~ (vt1.c0))))>((TYPEOF(vt1.c0), CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END, (((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))))))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE (((((((x'' IN ()), ((vt1.c0) NOT NULL), (~ (vt1.c0))))>((TYPEOF(vt1.c0), CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END, (((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))))))) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING ((MIN(rt0.c3))&(AVG(rt0.c4))) UNION ALL SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING (NOT (((MIN(rt0.c3))&(AVG(rt0.c4))))) UNION ALL SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING ((((MIN(rt0.c3))&(AVG(rt0.c4)))) ISNULL);
SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING ((MIN(rt0.c3))&(AVG(rt0.c4))) UNION ALL SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING (NOT (((MIN(rt0.c3))&(AVG(rt0.c4))))) UNION ALL SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING ((((MIN(rt0.c3))&(AVG(rt0.c4)))) ISNULL);
SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT rt0.c2, rt0.c3, rt0.c0 FROM vt1, rt0;
SELECT ALL rt0.c2, rt0.c3, rt0.c0 FROM vt1, rt0 WHERE (((((((((vt1.c0)OR(rt0.c3)))OR(rt0.c3)))OR(rt0.c4)))OR(rt0.c1)) COLLATE NOCASE) UNION ALL SELECT rt0.c2, rt0.c3, rt0.c0 FROM vt1, rt0 WHERE ((NOT (((((((((vt1.c0)OR(rt0.c3)))OR(rt0.c3)))OR(rt0.c4)))OR(rt0.c1)) COLLATE NOCASE))) UNION ALL SELECT ALL rt0.c2, rt0.c3, rt0.c0 FROM vt1, rt0 WHERE (((((((((((vt1.c0)OR(rt0.c3)))OR(rt0.c3)))OR(rt0.c4)))OR(rt0.c1)) COLLATE NOCASE) ISNULL));
SELECT rt0.c2, rt0.c3, rt0.c0 FROM vt1, rt0;
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c3, vt1.c0 FROM vt1, rt0;
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c3, vt1.c0 FROM vt1, rt0 WHERE (x'') UNION SELECT DISTINCT rt0.c1, rt0.c0, rt0.c3, vt1.c0 FROM vt1, rt0 WHERE ((NOT (x''))) UNION SELECT DISTINCT rt0.c1, rt0.c0, rt0.c3, vt1.c0 FROM vt1, rt0 WHERE (((x'') ISNULL));
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c3, vt1.c0 FROM vt1, rt0;
SELECT rt0.c1, rt0.c2 FROM vt1, rt0 GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c1, rt0.c2 FROM vt1, rt0 WHERE (((((rt0.c4)<=(rt0.c4)))/((((rt0.c4))<((rt0.c2)))))) GROUP BY rt0.c1, rt0.c2 UNION SELECT rt0.c1, rt0.c2 FROM vt1, rt0 WHERE ((NOT (((((rt0.c4)<=(rt0.c4)))/((((rt0.c4))<((rt0.c2)))))))) GROUP BY rt0.c1, rt0.c2 UNION SELECT rt0.c1, rt0.c2 FROM vt1, rt0 WHERE (((((((rt0.c4)<=(rt0.c4)))/((((rt0.c4))<((rt0.c2)))))) ISNULL)) GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c1, rt0.c2 FROM vt1, rt0 GROUP BY rt0.c1, rt0.c2;
SELECT ALL vt1.c0, rt0.c3, rt0.c0 FROM rt0, vt1 GROUP BY vt1.c0, rt0.c3, rt0.c0;
SELECT ALL vt1.c0, rt0.c3, rt0.c0 FROM rt0, vt1 GROUP BY vt1.c0, rt0.c3, rt0.c0 HAVING GROUP_CONCAT(CAST(MIN(COUNT(rt0.c1)) AS INTEGER)) UNION ALL SELECT ALL vt1.c0, rt0.c3, rt0.c0 FROM rt0, vt1 GROUP BY vt1.c0, rt0.c3, rt0.c0 HAVING (NOT (GROUP_CONCAT(CAST(MIN(COUNT(rt0.c1)) AS INTEGER)))) UNION ALL SELECT ALL vt1.c0, rt0.c3, rt0.c0 FROM rt0, vt1 GROUP BY vt1.c0, rt0.c3, rt0.c0 HAVING ((GROUP_CONCAT(CAST(MIN(COUNT(rt0.c1)) AS INTEGER))) ISNULL);
SELECT ALL rt0.c2, rt0.c4, rt0.c1, rt0.c3, rt0.c0, vt1.c0 FROM vt1, rt0;
SELECT ALL rt0.c2, rt0.c4, rt0.c1, rt0.c3, rt0.c0, vt1.c0 FROM vt1, rt0 WHERE (-1774280590) UNION ALL SELECT ALL rt0.c2, rt0.c4, rt0.c1, rt0.c3, rt0.c0, vt1.c0 FROM vt1, rt0 WHERE ((NOT (-1774280590))) UNION ALL SELECT ALL rt0.c2, rt0.c4, rt0.c1, rt0.c3, rt0.c0, vt1.c0 FROM vt1, rt0 WHERE (((-1774280590) ISNULL));
SELECT ALL rt0.c2, rt0.c4, rt0.c1, rt0.c3, rt0.c0, vt1.c0 FROM vt1, rt0;
SELECT DISTINCT rt0.c3, rt0.c1, rt0.c2, rt0.c4 FROM rt0;
SELECT DISTINCT rt0.c3, rt0.c1, rt0.c2, rt0.c4 FROM rt0 WHERE ((+ ((((rt0.c0, rt0.c2, rt0.c0, rt0.c1, rt0.c1))>=((rt0.c2, rt0.c1, rt0.c0, rt0.c3, rt0.c3)))))) UNION SELECT DISTINCT rt0.c3, rt0.c1, rt0.c2, rt0.c4 FROM rt0 WHERE ((NOT ((+ ((((rt0.c0, rt0.c2, rt0.c0, rt0.c1, rt0.c1))>=((rt0.c2, rt0.c1, rt0.c0, rt0.c3, rt0.c3)))))))) UNION SELECT DISTINCT rt0.c3, rt0.c1, rt0.c2, rt0.c4 FROM rt0 WHERE ((((+ ((((rt0.c0, rt0.c2, rt0.c0, rt0.c1, rt0.c1))>=((rt0.c2, rt0.c1, rt0.c0, rt0.c3, rt0.c3)))))) ISNULL));
SELECT DISTINCT rt0.c3, rt0.c1, rt0.c2, rt0.c4 FROM rt0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END COLLATE RTRIM) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END COLLATE RTRIM))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE (((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END COLLATE RTRIM) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL rt0.c1, rt0.c4, rt0.c3, rt0.c0, rt0.c2, vt1.c0 FROM vt1 NATURAL JOIN rt0 GROUP BY rt0.c1, rt0.c4, rt0.c3, rt0.c0, rt0.c2, vt1.c0;
SELECT ALL rt0.c1, rt0.c4, rt0.c3, rt0.c0, rt0.c2, vt1.c0 FROM vt1 NATURAL JOIN rt0 GROUP BY rt0.c1, rt0.c4, rt0.c3, rt0.c0, rt0.c2, vt1.c0 HAVING vt1.c0 UNION ALL SELECT rt0.c1, rt0.c4, rt0.c3, rt0.c0, rt0.c2, vt1.c0 FROM vt1 NATURAL JOIN rt0 GROUP BY rt0.c1, rt0.c4, rt0.c3, rt0.c0, rt0.c2, vt1.c0 HAVING (NOT (vt1.c0)) UNION ALL SELECT rt0.c1, rt0.c4, rt0.c3, rt0.c0, rt0.c2, vt1.c0 FROM vt1 NATURAL JOIN rt0 GROUP BY rt0.c1, rt0.c4, rt0.c3, rt0.c0, rt0.c2, vt1.c0 HAVING ((vt1.c0) ISNULL);
SELECT ALL rt0.c1, rt0.c4, rt0.c3, rt0.c0, rt0.c2, vt1.c0 FROM vt1 NATURAL JOIN rt0 GROUP BY rt0.c1, rt0.c4, rt0.c3, rt0.c0, rt0.c2, vt1.c0;
SELECT ALL rt0.c1, rt0.c4, rt0.c3, rt0.c0, rt0.c2, vt1.c0 FROM vt1 NATURAL JOIN rt0 GROUP BY rt0.c1, rt0.c4, rt0.c3, rt0.c0, rt0.c2, vt1.c0 HAVING vt1.c0 UNION ALL SELECT rt0.c1, rt0.c4, rt0.c3, rt0.c0, rt0.c2, vt1.c0 FROM vt1 NATURAL JOIN rt0 GROUP BY rt0.c1, rt0.c4, rt0.c3, rt0.c0, rt0.c2, vt1.c0 HAVING (NOT (vt1.c0)) UNION ALL SELECT rt0.c1, rt0.c4, rt0.c3, rt0.c0, rt0.c2, vt1.c0 FROM vt1 NATURAL JOIN rt0 GROUP BY rt0.c1, rt0.c4, rt0.c3, rt0.c0, rt0.c2, vt1.c0 HAVING ((vt1.c0) ISNULL);
SELECT ALL rt0.c1, rt0.c4, rt0.c3, rt0.c0, rt0.c2, vt1.c0 FROM vt1 NATURAL JOIN rt0 GROUP BY rt0.c1, rt0.c4, rt0.c3, rt0.c0, rt0.c2, vt1.c0;
SELECT ALL * FROM vt1;
SELECT ALL * FROM vt1 WHERE ((((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))) NOTNULL)) UNION ALL SELECT * FROM vt1 WHERE ((NOT ((((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))) NOTNULL)))) UNION ALL SELECT * FROM vt1 WHERE ((((((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))) NOTNULL)) ISNULL));
SELECT ALL * FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((((((vt1.c0, vt1.c0, vt1.c0))<=((vt1.c0, vt1.c0, vt1.c0))))>=(((vt1.c0) NOTNULL)))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT ((((((vt1.c0, vt1.c0, vt1.c0))<=((vt1.c0, vt1.c0, vt1.c0))))>=(((vt1.c0) NOTNULL)))))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((((((((vt1.c0, vt1.c0, vt1.c0))<=((vt1.c0, vt1.c0, vt1.c0))))>=(((vt1.c0) NOTNULL)))) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT ALL rt0.c2 FROM vt1, rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM vt1, rt0 WHERE (CASE WHEN 0x648179ef THEN rt0.c2 ELSE (x'a573' IN ()) END) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM vt1, rt0 WHERE ((NOT (CASE WHEN 0X648179ef THEN rt0.c2 ELSE (x'a573' IN ()) END))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM vt1, rt0 WHERE (((CASE WHEN 0X648179ef THEN rt0.c2 ELSE (x'a573' IN ()) END) ISNULL)) GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM vt1, rt0 GROUP BY rt0.c2;
SELECT rt0.c3, rt0.c0, rt0.c4, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c3, rt0.c0, rt0.c4, rt0.c1, rt0.c2;
SELECT rt0.c3, rt0.c0, rt0.c4, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c3, rt0.c0, rt0.c4, rt0.c1, rt0.c2 HAVING (((- (rt0.c0))) NOT NULL) UNION ALL SELECT rt0.c3, rt0.c0, rt0.c4, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c3, rt0.c0, rt0.c4, rt0.c1, rt0.c2 HAVING (NOT ((((- (rt0.c0))) NOT NULL))) UNION ALL SELECT rt0.c3, rt0.c0, rt0.c4, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c3, rt0.c0, rt0.c4, rt0.c1, rt0.c2 HAVING (((((- (rt0.c0))) NOT NULL)) ISNULL);
SELECT rt0.c3, rt0.c0, rt0.c4, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c3, rt0.c0, rt0.c4, rt0.c1, rt0.c2;
SELECT rt0.c3, rt0.c0, rt0.c4, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c3, rt0.c0, rt0.c4, rt0.c1, rt0.c2 HAVING (((- (rt0.c0))) NOT NULL) UNION ALL SELECT rt0.c3, rt0.c0, rt0.c4, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c3, rt0.c0, rt0.c4, rt0.c1, rt0.c2 HAVING (NOT ((((- (rt0.c0))) NOT NULL))) UNION ALL SELECT rt0.c3, rt0.c0, rt0.c4, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c3, rt0.c0, rt0.c4, rt0.c1, rt0.c2 HAVING (((((- (rt0.c0))) NOT NULL)) ISNULL);
SELECT rt0.c3, rt0.c0, rt0.c4, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c3, rt0.c0, rt0.c4, rt0.c1, rt0.c2;
SELECT ALL * FROM vt1;
SELECT ALL * FROM vt1 WHERE ((((- (vt1.c0)))AND(CAST(vt1.c0 AS NUMERIC)))) UNION ALL SELECT * FROM vt1 WHERE ((NOT ((((- (vt1.c0)))AND(CAST(vt1.c0 AS NUMERIC)))))) UNION ALL SELECT * FROM vt1 WHERE ((((((- (vt1.c0)))AND(CAST(vt1.c0 AS NUMERIC)))) ISNULL));
SELECT ALL * FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE (vt1.c0) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT (vt1.c0))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((vt1.c0) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE ((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((((vt1.c0) NOTNULL), ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)), (((vt1.c0))>((vt1.c0))))) AND ((((vt1.c0)LIKE(vt1.c0)), vt1.c0 COLLATE NOCASE, vt1.c0 COLLATE NOCASE)))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT ((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((((vt1.c0) NOTNULL), ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)), (((vt1.c0))>((vt1.c0))))) AND ((((vt1.c0)LIKE(vt1.c0)), vt1.c0 COLLATE NOCASE, vt1.c0 COLLATE NOCASE)))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((((vt1.c0) NOTNULL), ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)), (((vt1.c0))>((vt1.c0))))) AND ((((vt1.c0)LIKE(vt1.c0)), vt1.c0 COLLATE NOCASE, vt1.c0 COLLATE NOCASE)))) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((((COUNT(vt1.c0)) IS FALSE)) IS FALSE) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (((((COUNT(vt1.c0)) IS FALSE)) IS FALSE))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((((((COUNT(vt1.c0)) IS FALSE)) IS FALSE)) ISNULL);
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((((COUNT(vt1.c0)) IS FALSE)) IS FALSE) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (((((COUNT(vt1.c0)) IS FALSE)) IS FALSE))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((((((COUNT(vt1.c0)) IS FALSE)) IS FALSE)) ISNULL);
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT TOTAL(((rt0.c3) NOT NULL)) FROM vt1, rt0;
SELECT rt0.c0 FROM rt0;
SELECT ALL rt0.c0 FROM rt0 WHERE (CASE WHEN rt0.c2 THEN rt0.c2 END) UNION ALL SELECT ALL rt0.c0 FROM rt0 WHERE ((NOT (CASE WHEN rt0.c2 THEN rt0.c2 END))) UNION ALL SELECT rt0.c0 FROM rt0 WHERE (((CASE WHEN rt0.c2 THEN rt0.c2 END) ISNULL));
SELECT rt0.c0 FROM rt0;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))) IN ())) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT (((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))) IN ())))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))) IN ())) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT ALL vt1.c0, rt0.c0, rt0.c3, rt0.c1 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c0, rt0.c3, rt0.c1;
SELECT vt1.c0, rt0.c0, rt0.c3, rt0.c1 FROM vt1, rt0 WHERE (((((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1))) BETWEEN (((rt0.c3)<<(rt0.c4))) AND (vt1.c0))) GROUP BY vt1.c0, rt0.c0, rt0.c3, rt0.c1 UNION SELECT vt1.c0, rt0.c0, rt0.c3, rt0.c1 FROM vt1, rt0 WHERE ((NOT (((((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1))) BETWEEN (((rt0.c3)<<(rt0.c4))) AND (vt1.c0))))) GROUP BY vt1.c0, rt0.c0, rt0.c3, rt0.c1 UNION SELECT vt1.c0, rt0.c0, rt0.c3, rt0.c1 FROM vt1, rt0 WHERE (((((((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1))) BETWEEN (((rt0.c3)<<(rt0.c4))) AND (vt1.c0))) ISNULL)) GROUP BY vt1.c0, rt0.c0, rt0.c3, rt0.c1;
SELECT ALL vt1.c0, rt0.c0, rt0.c3, rt0.c1 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c0, rt0.c3, rt0.c1;
SELECT ALL rt0.c0, rt0.c1, rt0.c3 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c3;
SELECT rt0.c0, rt0.c1, rt0.c3 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c3 HAVING COUNT(SUM(rt0.c0)) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c3 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c3 HAVING (NOT (COUNT(SUM(rt0.c0)))) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c3 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c3 HAVING ((COUNT(SUM(rt0.c0))) ISNULL);
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE (CAST(((rt0.c4) NOT BETWEEN (rt0.c1) AND (rt0.c4)) AS REAL)) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (CAST(((rt0.c4) NOT BETWEEN (rt0.c1) AND (rt0.c4)) AS REAL)))) UNION ALL SELECT * FROM rt0 WHERE (((CAST(((rt0.c4) NOT BETWEEN (rt0.c1) AND (rt0.c4)) AS REAL)) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((x'1369') NOT NULL)) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT (((x'1369') NOT NULL)))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((((x'1369') NOT NULL)) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE (((TRIM(vt1.c0, vt1.c0)) BETWEEN (CASE WHEN 'I17-	滮D' THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END) AND (MAX(vt1.c0, vt1.c0)))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (((TRIM(vt1.c0, vt1.c0)) BETWEEN (CASE WHEN 'I17-	滮D' THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END) AND (MAX(vt1.c0, vt1.c0)))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE (((((TRIM(vt1.c0, vt1.c0)) BETWEEN (CASE WHEN 'I17-	滮D' THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END) AND (MAX(vt1.c0, vt1.c0)))) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT rt0.c3, rt0.c1, rt0.c4, rt0.c0, vt1.c0 FROM rt0, vt1 GROUP BY rt0.c3, rt0.c1, rt0.c4, rt0.c0, vt1.c0;
SELECT ALL rt0.c3, rt0.c1, rt0.c4, rt0.c0, vt1.c0 FROM rt0, vt1 GROUP BY rt0.c3, rt0.c1, rt0.c4, rt0.c0, vt1.c0 HAVING AVG(x'') UNION ALL SELECT rt0.c3, rt0.c1, rt0.c4, rt0.c0, vt1.c0 FROM rt0, vt1 GROUP BY rt0.c3, rt0.c1, rt0.c4, rt0.c0, vt1.c0 HAVING (NOT (AVG(x''))) UNION ALL SELECT rt0.c3, rt0.c1, rt0.c4, rt0.c0, vt1.c0 FROM rt0, vt1 GROUP BY rt0.c3, rt0.c1, rt0.c4, rt0.c0, vt1.c0 HAVING ((AVG(x'')) ISNULL);
SELECT rt0.c3, rt0.c1, rt0.c4, rt0.c0, vt1.c0 FROM rt0, vt1 GROUP BY rt0.c3, rt0.c1, rt0.c4, rt0.c0, vt1.c0;
SELECT ALL rt0.c3, rt0.c1, rt0.c4, rt0.c0, vt1.c0 FROM rt0, vt1 GROUP BY rt0.c3, rt0.c1, rt0.c4, rt0.c0, vt1.c0 HAVING AVG(x'') UNION ALL SELECT rt0.c3, rt0.c1, rt0.c4, rt0.c0, vt1.c0 FROM rt0, vt1 GROUP BY rt0.c3, rt0.c1, rt0.c4, rt0.c0, vt1.c0 HAVING (NOT (AVG(x''))) UNION ALL SELECT rt0.c3, rt0.c1, rt0.c4, rt0.c0, vt1.c0 FROM rt0, vt1 GROUP BY rt0.c3, rt0.c1, rt0.c4, rt0.c0, vt1.c0 HAVING ((AVG(x'')) ISNULL);
SELECT rt0.c3, rt0.c1, rt0.c4, rt0.c0, vt1.c0 FROM rt0, vt1 GROUP BY rt0.c3, rt0.c1, rt0.c4, rt0.c0, vt1.c0;
SELECT ALL * FROM vt1;
SELECT ALL * FROM vt1 WHERE (-0.0) UNION ALL SELECT * FROM vt1 WHERE ((NOT (-0.0))) UNION ALL SELECT * FROM vt1 WHERE (((-0.0) ISNULL));
SELECT ALL * FROM vt1;
SELECT DISTINCT rt0.c2, rt0.c0, rt0.c3, vt1.c0 FROM vt1 RIGHT OUTER JOIN rt0 ON (((((rt0.c0, rt0.c2, rt0.c2, rt0.c0, rt0.c2)) BETWEEN ((vt1.c0, rt0.c4, rt0.c1, rt0.c4, rt0.c3)) AND ((vt1.c0, rt0.c1, rt0.c4, rt0.c4, '0.5658185663522308'))))GLOB(((((((((rt0.c1)AND(rt0.c2)))OR(vt1.c0)))OR(0.8123792529156446)))AND(rt0.c2))));
SELECT DISTINCT rt0.c2, rt0.c0, rt0.c3, vt1.c0 FROM vt1 RIGHT OUTER JOIN rt0 ON (((((rt0.c0, rt0.c2, rt0.c2, rt0.c0, rt0.c2)) BETWEEN ((vt1.c0, rt0.c4, rt0.c1, rt0.c4, rt0.c3)) AND ((vt1.c0, rt0.c1, rt0.c4, rt0.c4, '0.5658185663522308'))))GLOB(((((((((rt0.c1)AND(rt0.c2)))OR(vt1.c0)))OR(0.8123792529156446)))AND(rt0.c2)))) WHERE (CASE WHEN ((rt0.c3) NOT BETWEEN (rt0.c4) AND (rt0.c3)) THEN rt0.c4 ELSE ((rt0.c2)=(rt0.c4)) END) UNION SELECT DISTINCT rt0.c2, rt0.c0, rt0.c3, vt1.c0 FROM vt1 RIGHT OUTER JOIN rt0 ON (((((rt0.c0, rt0.c2, rt0.c2, rt0.c0, rt0.c2)) BETWEEN ((vt1.c0, rt0.c4, rt0.c1, rt0.c4, rt0.c3)) AND ((vt1.c0, rt0.c1, rt0.c4, rt0.c4, '0.5658185663522308'))))GLOB(((((((((rt0.c1)AND(rt0.c2)))OR(vt1.c0)))OR(0.8123792529156446)))AND(rt0.c2)))) WHERE ((NOT (CASE WHEN ((rt0.c3) NOT BETWEEN (rt0.c4) AND (rt0.c3)) THEN rt0.c4 ELSE ((rt0.c2)=(rt0.c4)) END))) UNION SELECT DISTINCT rt0.c2, rt0.c0, rt0.c3, vt1.c0 FROM vt1 RIGHT OUTER JOIN rt0 ON (((((rt0.c0, rt0.c2, rt0.c2, rt0.c0, rt0.c2)) BETWEEN ((vt1.c0, rt0.c4, rt0.c1, rt0.c4, rt0.c3)) AND ((vt1.c0, rt0.c1, rt0.c4, rt0.c4, '0.5658185663522308'))))GLOB(((((((((rt0.c1)AND(rt0.c2)))OR(vt1.c0)))OR(0.8123792529156446)))AND(rt0.c2)))) WHERE (((CASE WHEN ((rt0.c3) NOT BETWEEN (rt0.c4) AND (rt0.c3)) THEN rt0.c4 ELSE ((rt0.c2)==(rt0.c4)) END) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c0, rt0.c3, vt1.c0 FROM vt1 RIGHT OUTER JOIN rt0 ON (((((rt0.c0, rt0.c2, rt0.c2, rt0.c0, rt0.c2)) BETWEEN ((vt1.c0, rt0.c4, rt0.c1, rt0.c4, rt0.c3)) AND ((vt1.c0, rt0.c1, rt0.c4, rt0.c4, '0.5658185663522308'))))GLOB(((((((((rt0.c1)AND(rt0.c2)))OR(vt1.c0)))OR(0.8123792529156446)))AND(rt0.c2))));
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 WHERE (CASE (rt0.c1 IN ())  WHEN ((rt0.c2) NOT NULL) THEN ((rt0.c3)/(rt0.c0)) ELSE (rt0.c4 IN (rt0.c2, rt0.c1)) END) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0 WHERE ((NOT (CASE (rt0.c1 IN ())  WHEN ((rt0.c2) NOT NULL) THEN ((rt0.c3)/(rt0.c0)) ELSE (rt0.c4 IN (rt0.c2, rt0.c1)) END))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0 WHERE (((CASE (rt0.c1 IN ())  WHEN ((rt0.c2) NOT NULL) THEN ((rt0.c3)/(rt0.c0)) ELSE (rt0.c4 IN (rt0.c2, rt0.c1)) END) ISNULL)) GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c0, rt0.c1, rt0.c3, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c3, rt0.c2;
SELECT rt0.c0, rt0.c1, rt0.c3, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c3, rt0.c2 HAVING TRIM((+ (MIN(COUNT(rt0.c3))))) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c3, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c3, rt0.c2 HAVING (NOT (TRIM((+ (MIN(COUNT(rt0.c3))))))) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c3, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c3, rt0.c2 HAVING ((TRIM((+ (MIN(COUNT(rt0.c3)))))) ISNULL);
SELECT ALL rt0.c1, rt0.c2, rt0.c4, rt0.c3 FROM rt0;
SELECT rt0.c1, rt0.c2, rt0.c4, rt0.c3 FROM rt0 WHERE ((NOT (rt0.c4))) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c4, rt0.c3 FROM rt0 WHERE ((NOT ((NOT (rt0.c4))))) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c4, rt0.c3 FROM rt0 WHERE ((((NOT (rt0.c4))) ISNULL));
SELECT ALL rt0.c1, rt0.c2, rt0.c4, rt0.c3 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c4, rt0.c1, rt0.c0, vt1.c0 FROM rt0, vt1;
SELECT DISTINCT rt0.c2, rt0.c4, rt0.c1, rt0.c0, vt1.c0 FROM rt0, vt1 WHERE (CASE WHEN ((rt0.c0) NOTNULL) THEN CAST(rt0.c0 AS INTEGER) END) UNION SELECT DISTINCT rt0.c2, rt0.c4, rt0.c1, rt0.c0, vt1.c0 FROM rt0, vt1 NOT INDEXED WHERE ((NOT (CASE WHEN ((rt0.c0) NOTNULL) THEN CAST(rt0.c0 AS INTEGER) END))) UNION SELECT DISTINCT rt0.c2, rt0.c4, rt0.c1, rt0.c0, vt1.c0 FROM rt0, vt1 WHERE (((CASE WHEN ((rt0.c0) NOTNULL) THEN CAST(rt0.c0 AS INTEGER) END) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c4, rt0.c1, rt0.c0, vt1.c0 FROM rt0, vt1;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE (CAST((~ (vt1.c0)) AS NUMERIC)) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (CAST((~ (vt1.c0)) AS NUMERIC)))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE (((CAST((~ (vt1.c0)) AS NUMERIC)) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0, rt0.c2, rt0.c4 FROM rt0, vt1 GROUP BY vt1.c0, rt0.c2, rt0.c4;
SELECT vt1.c0, rt0.c2, rt0.c4 FROM rt0, vt1 GROUP BY vt1.c0, rt0.c2, rt0.c4 HAVING ((COUNT(COUNT(*)))IS(vt1.c0 COLLATE RTRIM)) UNION ALL SELECT vt1.c0, rt0.c2, rt0.c4 FROM rt0, vt1 GROUP BY vt1.c0, rt0.c2, rt0.c4 HAVING (NOT (((COUNT(COUNT(*)))IS(vt1.c0 COLLATE RTRIM)))) UNION ALL SELECT ALL vt1.c0, rt0.c2, rt0.c4 FROM rt0, vt1 GROUP BY vt1.c0, rt0.c2, rt0.c4 HAVING ((((COUNT(COUNT(*)))IS(vt1.c0 COLLATE RTRIM))) ISNULL);
SELECT ALL * FROM rt0, vt1;
SELECT * FROM rt0, vt1 WHERE ((((((vt1.c0) NOT NULL)))<=((rt0.c4)))) UNION ALL SELECT ALL * FROM rt0, vt1 WHERE ((NOT ((((((vt1.c0) NOT NULL)))<=((rt0.c4)))))) UNION ALL SELECT ALL * FROM rt0, vt1 WHERE ((((((((vt1.c0) NOT NULL)))<=((rt0.c4)))) ISNULL));
SELECT ALL * FROM rt0, vt1;
SELECT DISTINCT rt0.c4, rt0.c3, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c4, rt0.c3, rt0.c1 FROM rt0 WHERE ((((+ (rt0.c2))) NOT NULL)) UNION SELECT DISTINCT rt0.c4, rt0.c3, rt0.c1 FROM rt0 WHERE ((NOT ((((+ (rt0.c2))) NOT NULL)))) UNION SELECT DISTINCT rt0.c4, rt0.c3, rt0.c1 FROM rt0 WHERE ((((((+ (rt0.c2))) NOT NULL)) ISNULL));
SELECT DISTINCT rt0.c4, rt0.c3, rt0.c1 FROM rt0;
SELECT ALL rt0.c0, rt0.c1, rt0.c4 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c4;
SELECT ALL rt0.c0, rt0.c1, rt0.c4 FROM rt0 WHERE (rt0.c0) GROUP BY rt0.c0, rt0.c1, rt0.c4 UNION SELECT rt0.c0, rt0.c1, rt0.c4 FROM rt0 WHERE ((NOT (rt0.c0))) GROUP BY rt0.c0, rt0.c1, rt0.c4 UNION SELECT ALL rt0.c0, rt0.c1, rt0.c4 FROM rt0 WHERE (((rt0.c0) ISNULL)) GROUP BY rt0.c0, rt0.c1, rt0.c4;
SELECT ALL rt0.c0, rt0.c1, rt0.c4 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c4;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING MIN(COUNT(*)) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (MIN(COUNT(*)))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((MIN(COUNT(*))) ISNULL);
SELECT MIN(HEX(DISTINCT 0xffffffffcf01a04c)) FROM rt0;
SELECT rt0.c2, rt0.c1 FROM rt0, vt1;
SELECT rt0.c2, rt0.c1 FROM rt0, vt1 WHERE (((((~ (rt0.c2))))<>((CAST(rt0.c1 AS REAL))))) UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM rt0, vt1 WHERE ((NOT (((((~ (rt0.c2))))!=((CAST(rt0.c1 AS REAL))))))) UNION ALL SELECT rt0.c2, rt0.c1 FROM rt0, vt1 WHERE (((((((~ (rt0.c2))))<>((CAST(rt0.c1 AS REAL))))) ISNULL));
SELECT rt0.c2, rt0.c1 FROM rt0, vt1;
SELECT DISTINCT * FROM vt1, rt0;
SELECT DISTINCT * FROM vt1, rt0 NOT INDEXED WHERE (((0.7499402684267351) NOT BETWEEN ((rt0.c1 IN ())) AND (HEX(DISTINCT rt0.c3)))) UNION SELECT DISTINCT * FROM vt1, rt0 WHERE ((NOT (((0.7499402684267351) NOT BETWEEN ((rt0.c1 IN ())) AND (HEX(DISTINCT rt0.c3)))))) UNION SELECT DISTINCT * FROM vt1, rt0 WHERE (((((0.7499402684267351) NOT BETWEEN ((rt0.c1 IN ())) AND (HEX(DISTINCT rt0.c3)))) ISNULL));
SELECT DISTINCT * FROM vt1, rt0;
SELECT rt0.c2, rt0.c1, rt0.c3, rt0.c4, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c3, rt0.c4, rt0.c0;
SELECT ALL rt0.c2, rt0.c1, rt0.c3, rt0.c4, rt0.c0 FROM rt0 WHERE ((('0.3949297310630101' COLLATE RTRIM)IS NOT((NOT (rt0.c3))))) GROUP BY rt0.c2, rt0.c1, rt0.c3, rt0.c4, rt0.c0 UNION SELECT rt0.c2, rt0.c1, rt0.c3, rt0.c4, rt0.c0 FROM rt0 WHERE ((NOT ((('0.3949297310630101' COLLATE RTRIM)IS NOT((NOT (rt0.c3))))))) GROUP BY rt0.c2, rt0.c1, rt0.c3, rt0.c4, rt0.c0 UNION SELECT rt0.c2, rt0.c1, rt0.c3, rt0.c4, rt0.c0 FROM rt0 WHERE ((((('0.3949297310630101' COLLATE RTRIM)IS NOT((NOT (rt0.c3))))) ISNULL)) GROUP BY rt0.c2, rt0.c1, rt0.c3, rt0.c4, rt0.c0;
SELECT rt0.c2, rt0.c1, rt0.c3, rt0.c4, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c3, rt0.c4, rt0.c0;
SELECT rt0.c0, vt1.c0, rt0.c2, rt0.c3, rt0.c1, rt0.c4 FROM rt0 CROSS JOIN vt1 ON ((((rt0.c0 IN (rt0.c1)), rt0.c0 COLLATE NOCASE, ((rt0.c1)/(rt0.c1))))>((((vt1.c0) IS TRUE), (((rt0.c3, vt1.c0, rt0.c0)) NOT BETWEEN ((0.33823654811790116, rt0.c4, '1668218549')) AND ((rt0.c1, rt0.c2, rt0.c0))), rt0.c0 COLLATE BINARY))) GROUP BY rt0.c0, vt1.c0, rt0.c2, rt0.c3, rt0.c1, rt0.c4;
SELECT ALL rt0.c0, vt1.c0, rt0.c2, rt0.c3, rt0.c1, rt0.c4 FROM rt0 CROSS JOIN vt1 ON ((((rt0.c0 IN (rt0.c1)), rt0.c0 COLLATE NOCASE, ((rt0.c1)/(rt0.c1))))>((((vt1.c0) IS TRUE), (((rt0.c3, vt1.c0, rt0.c0)) NOT BETWEEN ((0.33823654811790116, rt0.c4, '1668218549')) AND ((rt0.c1, rt0.c2, rt0.c0))), rt0.c0 COLLATE BINARY))) GROUP BY rt0.c0, vt1.c0, rt0.c2, rt0.c3, rt0.c1, rt0.c4 HAVING ((COUNT(vt1.c0))=(rt0.c2)) COLLATE RTRIM UNION ALL SELECT rt0.c0, vt1.c0, rt0.c2, rt0.c3, rt0.c1, rt0.c4 FROM rt0 CROSS JOIN vt1 ON ((((rt0.c0 IN (rt0.c1)), rt0.c0 COLLATE NOCASE, ((rt0.c1)/(rt0.c1))))>((((vt1.c0) IS TRUE), (((rt0.c3, vt1.c0, rt0.c0)) NOT BETWEEN ((0.33823654811790116, rt0.c4, '1668218549')) AND ((rt0.c1, rt0.c2, rt0.c0))), rt0.c0 COLLATE BINARY))) GROUP BY rt0.c0, vt1.c0, rt0.c2, rt0.c3, rt0.c1, rt0.c4 HAVING (NOT (((COUNT(vt1.c0))==(rt0.c2)) COLLATE RTRIM)) UNION ALL SELECT ALL rt0.c0, vt1.c0, rt0.c2, rt0.c3, rt0.c1, rt0.c4 FROM rt0 CROSS JOIN vt1 ON ((((rt0.c0 IN (rt0.c1)), rt0.c0 COLLATE NOCASE, ((rt0.c1)/(rt0.c1))))>((((vt1.c0) IS TRUE), (((rt0.c3, vt1.c0, rt0.c0)) NOT BETWEEN ((0.33823654811790116, rt0.c4, '1668218549')) AND ((rt0.c1, rt0.c2, rt0.c0))), rt0.c0 COLLATE BINARY))) GROUP BY rt0.c0, vt1.c0, rt0.c2, rt0.c3, rt0.c1, rt0.c4 HAVING ((((COUNT(vt1.c0))==(rt0.c2)) COLLATE RTRIM) ISNULL);
SELECT rt0.c0, vt1.c0, rt0.c2, rt0.c3, rt0.c1, rt0.c4 FROM rt0 CROSS JOIN vt1 ON ((((rt0.c0 IN (rt0.c1)), rt0.c0 COLLATE NOCASE, ((rt0.c1)/(rt0.c1))))>((((vt1.c0) IS TRUE), (((rt0.c3, vt1.c0, rt0.c0)) NOT BETWEEN ((0.33823654811790116, rt0.c4, '1668218549')) AND ((rt0.c1, rt0.c2, rt0.c0))), rt0.c0 COLLATE BINARY))) GROUP BY rt0.c0, vt1.c0, rt0.c2, rt0.c3, rt0.c1, rt0.c4;
SELECT ALL rt0.c0, vt1.c0, rt0.c2, rt0.c3, rt0.c1, rt0.c4 FROM rt0 CROSS JOIN vt1 ON ((((rt0.c0 IN (rt0.c1)), rt0.c0 COLLATE NOCASE, ((rt0.c1)/(rt0.c1))))>((((vt1.c0) IS TRUE), (((rt0.c3, vt1.c0, rt0.c0)) NOT BETWEEN ((0.33823654811790116, rt0.c4, '1668218549')) AND ((rt0.c1, rt0.c2, rt0.c0))), rt0.c0 COLLATE BINARY))) GROUP BY rt0.c0, vt1.c0, rt0.c2, rt0.c3, rt0.c1, rt0.c4 HAVING ((COUNT(vt1.c0))=(rt0.c2)) COLLATE RTRIM UNION ALL SELECT rt0.c0, vt1.c0, rt0.c2, rt0.c3, rt0.c1, rt0.c4 FROM rt0 CROSS JOIN vt1 ON ((((rt0.c0 IN (rt0.c1)), rt0.c0 COLLATE NOCASE, ((rt0.c1)/(rt0.c1))))>((((vt1.c0) IS TRUE), (((rt0.c3, vt1.c0, rt0.c0)) NOT BETWEEN ((0.33823654811790116, rt0.c4, '1668218549')) AND ((rt0.c1, rt0.c2, rt0.c0))), rt0.c0 COLLATE BINARY))) GROUP BY rt0.c0, vt1.c0, rt0.c2, rt0.c3, rt0.c1, rt0.c4 HAVING (NOT (((COUNT(vt1.c0))==(rt0.c2)) COLLATE RTRIM)) UNION ALL SELECT ALL rt0.c0, vt1.c0, rt0.c2, rt0.c3, rt0.c1, rt0.c4 FROM rt0 CROSS JOIN vt1 ON ((((rt0.c0 IN (rt0.c1)), rt0.c0 COLLATE NOCASE, ((rt0.c1)/(rt0.c1))))>((((vt1.c0) IS TRUE), (((rt0.c3, vt1.c0, rt0.c0)) NOT BETWEEN ((0.33823654811790116, rt0.c4, '1668218549')) AND ((rt0.c1, rt0.c2, rt0.c0))), rt0.c0 COLLATE BINARY))) GROUP BY rt0.c0, vt1.c0, rt0.c2, rt0.c3, rt0.c1, rt0.c4 HAVING ((((COUNT(vt1.c0))==(rt0.c2)) COLLATE RTRIM) ISNULL);
SELECT rt0.c0, vt1.c0, rt0.c2, rt0.c3, rt0.c1, rt0.c4 FROM rt0 CROSS JOIN vt1 ON ((((rt0.c0 IN (rt0.c1)), rt0.c0 COLLATE NOCASE, ((rt0.c1)/(rt0.c1))))>((((vt1.c0) IS TRUE), (((rt0.c3, vt1.c0, rt0.c0)) NOT BETWEEN ((0.33823654811790116, rt0.c4, '1668218549')) AND ((rt0.c1, rt0.c2, rt0.c0))), rt0.c0 COLLATE BINARY))) GROUP BY rt0.c0, vt1.c0, rt0.c2, rt0.c3, rt0.c1, rt0.c4;
SELECT rt0.c0, vt1.c0, rt0.c2, rt0.c4, rt0.c1 FROM vt1, rt0;
SELECT rt0.c0, vt1.c0, rt0.c2, rt0.c4, rt0.c1 FROM vt1, rt0 WHERE ((((~ (rt0.c2)))|(CAST(vt1.c0 AS REAL)))) UNION ALL SELECT ALL rt0.c0, vt1.c0, rt0.c2, rt0.c4, rt0.c1 FROM vt1, rt0 WHERE ((NOT ((((~ (rt0.c2)))|(CAST(vt1.c0 AS REAL)))))) UNION ALL SELECT rt0.c0, vt1.c0, rt0.c2, rt0.c4, rt0.c1 FROM vt1, rt0 WHERE ((((((~ (rt0.c2)))|(CAST(vt1.c0 AS REAL)))) ISNULL));
SELECT rt0.c0, vt1.c0, rt0.c2, rt0.c4, rt0.c1 FROM vt1, rt0;
SELECT DISTINCT rt0.c4, rt0.c2, vt1.c0 FROM rt0 NATURAL JOIN vt1;
SELECT DISTINCT rt0.c4, rt0.c2, vt1.c0 FROM rt0 NATURAL JOIN vt1 WHERE ((~ ((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c2)))))) UNION SELECT DISTINCT rt0.c4, rt0.c2, vt1.c0 FROM rt0 NATURAL JOIN vt1 WHERE ((NOT ((~ ((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c2)))))))) UNION SELECT DISTINCT rt0.c4, rt0.c2, vt1.c0 FROM rt0 NATURAL JOIN vt1 WHERE ((((~ ((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c2)))))) ISNULL));
SELECT DISTINCT rt0.c4, rt0.c2, vt1.c0 FROM rt0 NATURAL JOIN vt1;
SELECT ALL vt1.c0, rt0.c4, rt0.c3, rt0.c1, rt0.c2, rt0.c0 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c4, rt0.c3, rt0.c1, rt0.c2, rt0.c0;
SELECT ALL vt1.c0, rt0.c4, rt0.c3, rt0.c1, rt0.c2, rt0.c0 FROM vt1, rt0 WHERE (CASE WHEN rt0.c1 THEN CASE WHEN rt0.c4 THEN 0.011495398131247558 ELSE NULL END WHEN ((rt0.c2)+(rt0.c0)) THEN rt0.c3 WHEN CASE WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c4 THEN vt1.c0 WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c4 THEN rt0.c3 WHEN rt0.c4 THEN rt0.c3 ELSE rt0.c3 END THEN ((rt0.c3) ISNULL) END) GROUP BY vt1.c0, rt0.c4, rt0.c3, rt0.c1, rt0.c2, rt0.c0 UNION SELECT ALL vt1.c0, rt0.c4, rt0.c3, rt0.c1, rt0.c2, rt0.c0 FROM vt1, rt0 WHERE ((NOT (CASE WHEN rt0.c1 THEN CASE WHEN rt0.c4 THEN 0.011495398131247558 ELSE NULL END WHEN ((rt0.c2)+(rt0.c0)) THEN rt0.c3 WHEN CASE WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c4 THEN vt1.c0 WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c4 THEN rt0.c3 WHEN rt0.c4 THEN rt0.c3 ELSE rt0.c3 END THEN ((rt0.c3) ISNULL) END))) GROUP BY vt1.c0, rt0.c4, rt0.c3, rt0.c1, rt0.c2, rt0.c0 UNION SELECT vt1.c0, rt0.c4, rt0.c3, rt0.c1, rt0.c2, rt0.c0 FROM vt1, rt0 WHERE (((CASE WHEN rt0.c1 THEN CASE WHEN rt0.c4 THEN 0.011495398131247558 ELSE NULL END WHEN ((rt0.c2)+(rt0.c0)) THEN rt0.c3 WHEN CASE WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c4 THEN vt1.c0 WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c4 THEN rt0.c3 WHEN rt0.c4 THEN rt0.c3 ELSE rt0.c3 END THEN ((rt0.c3) ISNULL) END) ISNULL)) GROUP BY vt1.c0, rt0.c4, rt0.c3, rt0.c1, rt0.c2, rt0.c0;
SELECT ALL vt1.c0, rt0.c4, rt0.c3, rt0.c1, rt0.c2, rt0.c0 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c4, rt0.c3, rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c0 FROM rt0, vt1 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0, vt1 GROUP BY rt0.c0 HAVING (COUNT(COUNT(AVG(vt1.c0))) IN ()) UNION ALL SELECT ALL rt0.c0 FROM rt0, vt1 GROUP BY rt0.c0 HAVING (NOT ((COUNT(COUNT(AVG(vt1.c0))) IN ()))) UNION ALL SELECT ALL rt0.c0 FROM rt0, vt1 GROUP BY rt0.c0 HAVING (((COUNT(COUNT(AVG(vt1.c0))) IN ())) ISNULL);
SELECT rt0.c0 FROM rt0, vt1 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0, vt1 GROUP BY rt0.c0 HAVING (COUNT(COUNT(AVG(vt1.c0))) IN ()) UNION ALL SELECT ALL rt0.c0 FROM rt0, vt1 GROUP BY rt0.c0 HAVING (NOT ((COUNT(COUNT(AVG(vt1.c0))) IN ()))) UNION ALL SELECT ALL rt0.c0 FROM rt0, vt1 GROUP BY rt0.c0 HAVING (((COUNT(COUNT(AVG(vt1.c0))) IN ())) ISNULL);
SELECT rt0.c0 FROM rt0, vt1 GROUP BY rt0.c0;
SELECT * FROM vt1, rt0;
SELECT * FROM vt1, rt0 WHERE (TRIM(DISTINCT vt1.c0)) UNION ALL SELECT * FROM vt1, rt0 WHERE ((NOT (TRIM(DISTINCT vt1.c0)))) UNION ALL SELECT ALL * FROM vt1, rt0 WHERE (((TRIM(DISTINCT vt1.c0)) ISNULL));
SELECT * FROM vt1, rt0;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE ((CAST(vt1.c0 AS TEXT) IN ((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND (('9223372036854775807'))), (((vt1.c0))!=((vt1.c0)))))) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT ((CAST(vt1.c0 AS TEXT) IN ((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND (('9223372036854775807'))), (((vt1.c0))<>((vt1.c0)))))))) UNION SELECT DISTINCT * FROM vt1 WHERE ((((CAST(vt1.c0 AS TEXT) IN ((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND (('9223372036854775807'))), (((vt1.c0))<>((vt1.c0)))))) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE (((((vt1.c0)AND(CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)))AND(0.5546676804992696))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (((((vt1.c0)AND(CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)))AND(0.5546676804992696))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE (((((((vt1.c0)AND(CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)))AND(0.5546676804992696))) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING MIN(MAX(TOTAL(vt1.c0))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (MIN(MAX(TOTAL(vt1.c0))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((MIN(MAX(TOTAL(vt1.c0)))) ISNULL);
SELECT rt0.c4, rt0.c2 FROM rt0;
SELECT ALL rt0.c4, rt0.c2 FROM rt0 WHERE (((LIKELIHOOD(rt0.c2, 0.14693168702923864))*(((rt0.c4)|(rt0.c1))))) UNION ALL SELECT ALL rt0.c4, rt0.c2 FROM rt0 WHERE ((NOT (((LIKELIHOOD(rt0.c2, 0.14693168702923864))*(((rt0.c4)|(rt0.c1))))))) UNION ALL SELECT rt0.c4, rt0.c2 FROM rt0 WHERE (((((LIKELIHOOD(rt0.c2, 0.14693168702923864))*(((rt0.c4)|(rt0.c1))))) ISNULL));
SELECT rt0.c4, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c4, rt0.c2, rt0.c3, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c4, rt0.c2, rt0.c3, rt0.c1 FROM rt0 WHERE (CASE WHEN 0.8291714068517755 THEN CASE WHEN rt0.c4 THEN rt0.c2 ELSE rt0.c4 END END) UNION SELECT DISTINCT rt0.c0, rt0.c4, rt0.c2, rt0.c3, rt0.c1 FROM rt0 WHERE ((NOT (CASE WHEN 0.8291714068517755 THEN CASE WHEN rt0.c4 THEN rt0.c2 ELSE rt0.c4 END END))) UNION SELECT DISTINCT rt0.c0, rt0.c4, rt0.c2, rt0.c3, rt0.c1 FROM rt0 WHERE (((CASE WHEN 0.8291714068517755 THEN CASE WHEN rt0.c4 THEN rt0.c2 ELSE rt0.c4 END END) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c4, rt0.c2, rt0.c3, rt0.c1 FROM rt0;
SELECT rt0.c4, rt0.c2 FROM rt0 GROUP BY rt0.c4, rt0.c2;
SELECT rt0.c4, rt0.c2 FROM rt0 WHERE (CASE WHEN ((0.3949297310630101) IS TRUE) THEN (rt0.c3 IN ()) ELSE CASE rt0.c3  WHEN rt0.c0 THEN rt0.c4 ELSE NULL END END) GROUP BY rt0.c4, rt0.c2 UNION SELECT rt0.c4, rt0.c2 FROM rt0 WHERE ((NOT (CASE WHEN ((0.3949297310630101) IS TRUE) THEN (rt0.c3 IN ()) ELSE CASE rt0.c3  WHEN rt0.c0 THEN rt0.c4 ELSE NULL END END))) GROUP BY rt0.c4, rt0.c2 UNION SELECT ALL rt0.c4, rt0.c2 FROM rt0 WHERE (((CASE WHEN ((0.3949297310630101) IS TRUE) THEN (rt0.c3 IN ()) ELSE CASE rt0.c3  WHEN rt0.c0 THEN rt0.c4 ELSE NULL END END) ISNULL)) GROUP BY rt0.c4, rt0.c2;
SELECT rt0.c4, rt0.c2 FROM rt0 GROUP BY rt0.c4, rt0.c2;
SELECT rt0.c0, rt0.c3, rt0.c2, rt0.c1, rt0.c4 FROM rt0 GROUP BY rt0.c0, rt0.c3, rt0.c2, rt0.c1, rt0.c4;
SELECT rt0.c0, rt0.c3, rt0.c2, rt0.c1, rt0.c4 FROM rt0 GROUP BY rt0.c0, rt0.c3, rt0.c2, rt0.c1, rt0.c4 HAVING ABS((COUNT(MIN(rt0.c1)) IN ())) UNION ALL SELECT ALL rt0.c0, rt0.c3, rt0.c2, rt0.c1, rt0.c4 FROM rt0 GROUP BY rt0.c0, rt0.c3, rt0.c2, rt0.c1, rt0.c4 HAVING (NOT (ABS((COUNT(MIN(rt0.c1)) IN ())))) UNION ALL SELECT ALL rt0.c0, rt0.c3, rt0.c2, rt0.c1, rt0.c4 FROM rt0 GROUP BY rt0.c0, rt0.c3, rt0.c2, rt0.c1, rt0.c4 HAVING ((ABS((COUNT(MIN(rt0.c1)) IN ()))) ISNULL);
SELECT rt0.c0, rt0.c3, rt0.c2, rt0.c1, rt0.c4 FROM rt0 GROUP BY rt0.c0, rt0.c3, rt0.c2, rt0.c1, rt0.c4;
SELECT rt0.c0, rt0.c3, rt0.c2, rt0.c1, rt0.c4 FROM rt0 GROUP BY rt0.c0, rt0.c3, rt0.c2, rt0.c1, rt0.c4 HAVING ABS((COUNT(MIN(rt0.c1)) IN ())) UNION ALL SELECT ALL rt0.c0, rt0.c3, rt0.c2, rt0.c1, rt0.c4 FROM rt0 GROUP BY rt0.c0, rt0.c3, rt0.c2, rt0.c1, rt0.c4 HAVING (NOT (ABS((COUNT(MIN(rt0.c1)) IN ())))) UNION ALL SELECT ALL rt0.c0, rt0.c3, rt0.c2, rt0.c1, rt0.c4 FROM rt0 GROUP BY rt0.c0, rt0.c3, rt0.c2, rt0.c1, rt0.c4 HAVING ((ABS((COUNT(MIN(rt0.c1)) IN ()))) ISNULL);
SELECT rt0.c0, rt0.c3, rt0.c2, rt0.c1, rt0.c4 FROM rt0 GROUP BY rt0.c0, rt0.c3, rt0.c2, rt0.c1, rt0.c4;
SELECT ALL rt0.c0, rt0.c4, vt1.c0, rt0.c2 FROM vt1 RIGHT OUTER JOIN rt0 ON (((0.5182456224577696)) NOT BETWEEN ((CASE WHEN rt0.c3 THEN rt0.c1 END)) AND ((LIKELY(rt0.c2))));
SELECT ALL rt0.c0, rt0.c4, vt1.c0, rt0.c2 FROM vt1 RIGHT OUTER JOIN rt0 ON (((0.5182456224577696)) NOT BETWEEN ((CASE WHEN rt0.c3 THEN rt0.c1 END)) AND ((LIKELY(rt0.c2)))) WHERE (((((((0.6893197064370188)/(vt1.c0)))OR(((rt0.c0) BETWEEN (rt0.c3) AND (rt0.c3)))))OR(((vt1.c0)|(rt0.c2))))) UNION ALL SELECT rt0.c0, rt0.c4, vt1.c0, rt0.c2 FROM vt1 RIGHT OUTER JOIN rt0 ON (((0.5182456224577696)) NOT BETWEEN ((CASE WHEN rt0.c3 THEN rt0.c1 END)) AND ((LIKELY(rt0.c2)))) WHERE ((NOT (((((((0.6893197064370188)/(vt1.c0)))OR(((rt0.c0) BETWEEN (rt0.c3) AND (rt0.c3)))))OR(((vt1.c0)|(rt0.c2))))))) UNION ALL SELECT ALL rt0.c0, rt0.c4, vt1.c0, rt0.c2 FROM vt1 RIGHT OUTER JOIN rt0 ON (((0.5182456224577696)) NOT BETWEEN ((CASE WHEN rt0.c3 THEN rt0.c1 END)) AND ((LIKELY(rt0.c2)))) WHERE (((((((((0.6893197064370188)/(vt1.c0)))OR(((rt0.c0) BETWEEN (rt0.c3) AND (rt0.c3)))))OR(((vt1.c0)|(rt0.c2))))) ISNULL));
SELECT ALL rt0.c0, rt0.c4, vt1.c0, rt0.c2 FROM vt1 RIGHT OUTER JOIN rt0 ON (((0.5182456224577696)) NOT BETWEEN ((CASE WHEN rt0.c3 THEN rt0.c1 END)) AND ((LIKELY(rt0.c2))));
SELECT DISTINCT rt0.c0 FROM vt1, rt0;
SELECT DISTINCT rt0.c0 FROM vt1, rt0 WHERE ((NOT ((+ (rt0.c1))))) UNION SELECT DISTINCT rt0.c0 FROM vt1, rt0 WHERE ((NOT ((NOT ((+ (rt0.c1))))))) UNION SELECT DISTINCT rt0.c0 FROM vt1, rt0 WHERE ((((NOT ((+ (rt0.c1))))) ISNULL));
SELECT DISTINCT rt0.c0 FROM vt1, rt0;
SELECT ALL rt0.c4, rt0.c1, rt0.c0, rt0.c2 FROM vt1, rt0 GROUP BY rt0.c4, rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c4, rt0.c1, rt0.c0, rt0.c2 FROM vt1, rt0 WHERE ((((rt0.c2, rt0.c1, rt0.c0)) BETWEEN ((rt0.c0, ((vt1.c0) IS FALSE), rt0.c4 COLLATE BINARY)) AND ((SUBSTR(rt0.c0, rt0.c3), (rt0.c1 IN (vt1.c0, '')), ((rt0.c2) NOT NULL))))) GROUP BY rt0.c4, rt0.c1, rt0.c0, rt0.c2 UNION SELECT rt0.c4, rt0.c1, rt0.c0, rt0.c2 FROM vt1, rt0 WHERE ((NOT ((((rt0.c2, rt0.c1, rt0.c0)) BETWEEN ((rt0.c0, ((vt1.c0) IS FALSE), rt0.c4 COLLATE BINARY)) AND ((SUBSTR(rt0.c0, rt0.c3), (rt0.c1 IN (vt1.c0, '')), ((rt0.c2) NOT NULL))))))) GROUP BY rt0.c4, rt0.c1, rt0.c0, rt0.c2 UNION SELECT rt0.c4, rt0.c1, rt0.c0, rt0.c2 FROM vt1, rt0 WHERE ((((((rt0.c2, rt0.c1, rt0.c0)) BETWEEN ((rt0.c0, ((vt1.c0) IS FALSE), rt0.c4 COLLATE BINARY)) AND ((SUBSTR(rt0.c0, rt0.c3), (rt0.c1 IN (vt1.c0, '')), ((rt0.c2) NOT NULL))))) ISNULL)) GROUP BY rt0.c4, rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c4, rt0.c1, rt0.c0, rt0.c2 FROM vt1, rt0 GROUP BY rt0.c4, rt0.c1, rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c2 FROM vt1, rt0 GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c2 FROM vt1, rt0 GROUP BY rt0.c0, rt0.c2 HAVING rt0.c4 UNION ALL SELECT rt0.c0, rt0.c2 FROM vt1, rt0 GROUP BY rt0.c0, rt0.c2 HAVING (NOT (rt0.c4)) UNION ALL SELECT rt0.c0, rt0.c2 FROM vt1, rt0 GROUP BY rt0.c0, rt0.c2 HAVING ((rt0.c4) ISNULL);
SELECT rt0.c0, rt0.c2 FROM vt1, rt0 GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c2 FROM vt1, rt0 GROUP BY rt0.c0, rt0.c2 HAVING rt0.c4 UNION ALL SELECT rt0.c0, rt0.c2 FROM vt1, rt0 GROUP BY rt0.c0, rt0.c2 HAVING (NOT (rt0.c4)) UNION ALL SELECT rt0.c0, rt0.c2 FROM vt1, rt0 GROUP BY rt0.c0, rt0.c2 HAVING ((rt0.c4) ISNULL);
SELECT rt0.c0, rt0.c2 FROM vt1, rt0 GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c4, vt1.c0 FROM rt0, vt1;
SELECT rt0.c4, vt1.c0 FROM rt0, vt1 WHERE ((+ (CAST(rt0.c2 AS NUMERIC)))) UNION ALL SELECT ALL rt0.c4, vt1.c0 FROM rt0, vt1 WHERE ((NOT ((+ (CAST(rt0.c2 AS NUMERIC)))))) UNION ALL SELECT ALL rt0.c4, vt1.c0 FROM rt0, vt1 WHERE ((((+ (CAST(rt0.c2 AS NUMERIC)))) ISNULL));
SELECT rt0.c4, vt1.c0 FROM rt0, vt1;
SELECT DISTINCT * FROM rt0, vt1;
SELECT DISTINCT * FROM rt0, vt1 WHERE ((((vt1.c0 IN ()))+((- (rt0.c3))))) UNION SELECT DISTINCT * FROM rt0, vt1 WHERE ((NOT ((((vt1.c0 IN ()))+((- (rt0.c3))))))) UNION SELECT DISTINCT * FROM rt0, vt1 WHERE ((((((vt1.c0 IN ()))+((- (rt0.c3))))) ISNULL));
SELECT DISTINCT * FROM rt0, vt1;
SELECT ALL rt0.c3, rt0.c2, rt0.c4 FROM rt0 GROUP BY rt0.c3, rt0.c2, rt0.c4;
SELECT rt0.c3, rt0.c2, rt0.c4 FROM rt0 WHERE (x'9f04') GROUP BY rt0.c3, rt0.c2, rt0.c4 UNION SELECT rt0.c3, rt0.c2, rt0.c4 FROM rt0 WHERE ((NOT (x'9f04'))) GROUP BY rt0.c3, rt0.c2, rt0.c4 UNION SELECT ALL rt0.c3, rt0.c2, rt0.c4 FROM rt0 WHERE (((x'9f04') ISNULL)) GROUP BY rt0.c3, rt0.c2, rt0.c4;
SELECT ALL rt0.c3, rt0.c2, rt0.c4 FROM rt0 GROUP BY rt0.c3, rt0.c2, rt0.c4;
SELECT rt0.c2, rt0.c4 FROM rt0 GROUP BY rt0.c2, rt0.c4;
SELECT rt0.c2, rt0.c4 FROM rt0 GROUP BY rt0.c2, rt0.c4 HAVING GROUP_CONCAT(CAST(rt0.c3 AS TEXT)) UNION ALL SELECT ALL rt0.c2, rt0.c4 FROM rt0 GROUP BY rt0.c2, rt0.c4 HAVING (NOT (GROUP_CONCAT(CAST(rt0.c3 AS TEXT)))) UNION ALL SELECT ALL rt0.c2, rt0.c4 FROM rt0 GROUP BY rt0.c2, rt0.c4 HAVING ((GROUP_CONCAT(CAST(rt0.c3 AS TEXT))) ISNULL);
SELECT rt0.c2, rt0.c4 FROM rt0 GROUP BY rt0.c2, rt0.c4;
SELECT rt0.c2, rt0.c4 FROM rt0 GROUP BY rt0.c2, rt0.c4 HAVING GROUP_CONCAT(CAST(rt0.c3 AS TEXT)) UNION ALL SELECT ALL rt0.c2, rt0.c4 FROM rt0 GROUP BY rt0.c2, rt0.c4 HAVING (NOT (GROUP_CONCAT(CAST(rt0.c3 AS TEXT)))) UNION ALL SELECT ALL rt0.c2, rt0.c4 FROM rt0 GROUP BY rt0.c2, rt0.c4 HAVING ((GROUP_CONCAT(CAST(rt0.c3 AS TEXT))) ISNULL);
SELECT rt0.c2, rt0.c4 FROM rt0 GROUP BY rt0.c2, rt0.c4;
SELECT ALL rt0.c1, rt0.c4, rt0.c3, rt0.c0 FROM rt0, vt1;
SELECT ALL rt0.c1, rt0.c4, rt0.c3, rt0.c0 FROM rt0, vt1 WHERE (((((((rt0.c2)) BETWEEN (('138261781')) AND ((rt0.c4)))))<((((rt0.c2) NOT BETWEEN ('!c') AND (rt0.c3)))))) UNION ALL SELECT ALL rt0.c1, rt0.c4, rt0.c3, rt0.c0 FROM rt0, vt1 WHERE ((NOT (((((((rt0.c2)) BETWEEN (('138261781')) AND ((rt0.c4)))))<((((rt0.c2) NOT BETWEEN ('!c') AND (rt0.c3)))))))) UNION ALL SELECT rt0.c1, rt0.c4, rt0.c3, rt0.c0 FROM rt0, vt1 WHERE (((((((((rt0.c2)) BETWEEN (('138261781')) AND ((rt0.c4)))))<((((rt0.c2) NOT BETWEEN ('!c') AND (rt0.c3)))))) ISNULL));
SELECT ALL rt0.c1, rt0.c4, rt0.c3, rt0.c0 FROM rt0, vt1;
SELECT DISTINCT * FROM vt1 NATURAL JOIN rt0;
SELECT DISTINCT * FROM vt1 NATURAL JOIN rt0 WHERE (((((rt0.c0)IS(rt0.c0))) BETWEEN ((+ (rt0.c3))) AND (((rt0.c0)+(rt0.c2))))) UNION SELECT DISTINCT * FROM vt1 NATURAL JOIN rt0 WHERE ((NOT (((((rt0.c0)IS(rt0.c0))) BETWEEN ((+ (rt0.c3))) AND (((rt0.c0)+(rt0.c2))))))) UNION SELECT DISTINCT * FROM vt1 NATURAL JOIN rt0 WHERE (((((((rt0.c0)IS(rt0.c0))) BETWEEN ((+ (rt0.c3))) AND (((rt0.c0)+(rt0.c2))))) ISNULL));
SELECT DISTINCT * FROM vt1 NATURAL JOIN rt0;
SELECT ALL rt0.c0, rt0.c4, rt0.c3, rt0.c2, rt0.c1 FROM rt0 FULL OUTER JOIN vt1 ON (~ (((((rt0.c2)AND(rt0.c0)))OR(vt1.c0)))) GROUP BY rt0.c0, rt0.c4, rt0.c3, rt0.c2, rt0.c1;
SELECT rt0.c0, rt0.c4, rt0.c3, rt0.c2, rt0.c1 FROM rt0 FULL OUTER JOIN vt1 ON (~ (((((rt0.c2)AND(rt0.c0)))OR(vt1.c0)))) WHERE (CAST(((rt0.c1)-('0.1153107401646759')) AS REAL)) GROUP BY rt0.c0, rt0.c4, rt0.c3, rt0.c2, rt0.c1 UNION SELECT rt0.c0, rt0.c4, rt0.c3, rt0.c2, rt0.c1 FROM rt0 FULL OUTER JOIN vt1 ON (~ (((((rt0.c2)AND(rt0.c0)))OR(vt1.c0)))) WHERE ((NOT (CAST(((rt0.c1)-('0.1153107401646759')) AS REAL)))) GROUP BY rt0.c0, rt0.c4, rt0.c3, rt0.c2, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c4, rt0.c3, rt0.c2, rt0.c1 FROM rt0 FULL OUTER JOIN vt1 ON (~ (((((rt0.c2)AND(rt0.c0)))OR(vt1.c0)))) WHERE (((CAST(((rt0.c1)-('0.1153107401646759')) AS REAL)) ISNULL)) GROUP BY rt0.c0, rt0.c4, rt0.c3, rt0.c2, rt0.c1;
SELECT ALL rt0.c0, rt0.c4, rt0.c3, rt0.c2, rt0.c1 FROM rt0 FULL OUTER JOIN vt1 ON (~ (((((rt0.c2)AND(rt0.c0)))OR(vt1.c0)))) GROUP BY rt0.c0, rt0.c4, rt0.c3, rt0.c2, rt0.c1;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING COUNT(*) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING COUNT(*) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1;
SELECT ALL vt1.c0 FROM vt1 WHERE ((vt1.c0 IN (((vt1.c0)IS NOT(vt1.c0))))) UNION ALL SELECT vt1.c0 FROM vt1 WHERE ((NOT ((vt1.c0 IN (((vt1.c0)IS NOT(vt1.c0))))))) UNION ALL SELECT vt1.c0 FROM vt1 WHERE ((((vt1.c0 IN (((vt1.c0)IS NOT(vt1.c0))))) ISNULL));
SELECT ALL vt1.c0 FROM vt1;
SELECT DISTINCT rt0.c0, rt0.c3, rt0.c4, rt0.c1, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c3, rt0.c4, rt0.c1, rt0.c2 FROM rt0 WHERE (((((((rt0.c4)LIKE(rt0.c4)))OR((NOT (0.7926769743243116)))))OR(((rt0.c2)!=(rt0.c2))))) UNION SELECT DISTINCT rt0.c0, rt0.c3, rt0.c4, rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (((((((rt0.c4)LIKE(rt0.c4)))OR((NOT (0.7926769743243116)))))OR(((rt0.c2)<>(rt0.c2))))))) UNION SELECT DISTINCT rt0.c0, rt0.c3, rt0.c4, rt0.c1, rt0.c2 FROM rt0 WHERE (((((((((rt0.c4)LIKE(rt0.c4)))OR((NOT (0.7926769743243116)))))OR(((rt0.c2)!=(rt0.c2))))) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c3, rt0.c4, rt0.c1, rt0.c2 FROM rt0;
SELECT rt0.c0, vt1.c0, rt0.c3, rt0.c1, rt0.c2, rt0.c4 FROM vt1, rt0 GROUP BY rt0.c0, vt1.c0, rt0.c3, rt0.c1, rt0.c2, rt0.c4;
SELECT ALL rt0.c0, vt1.c0, rt0.c3, rt0.c1, rt0.c2, rt0.c4 FROM vt1, rt0 WHERE (rt0.c4) GROUP BY rt0.c0, vt1.c0, rt0.c3, rt0.c1, rt0.c2, rt0.c4 UNION SELECT rt0.c0, vt1.c0, rt0.c3, rt0.c1, rt0.c2, rt0.c4 FROM vt1, rt0 WHERE ((NOT (rt0.c4))) GROUP BY rt0.c0, vt1.c0, rt0.c3, rt0.c1, rt0.c2, rt0.c4 UNION SELECT ALL rt0.c0, vt1.c0, rt0.c3, rt0.c1, rt0.c2, rt0.c4 FROM vt1, rt0 WHERE (((rt0.c4) ISNULL)) GROUP BY rt0.c0, vt1.c0, rt0.c3, rt0.c1, rt0.c2, rt0.c4;
SELECT rt0.c0, vt1.c0, rt0.c3, rt0.c1, rt0.c2, rt0.c4 FROM vt1, rt0 GROUP BY rt0.c0, vt1.c0, rt0.c3, rt0.c1, rt0.c2, rt0.c4;
SELECT rt0.c4, rt0.c0, rt0.c1, rt0.c2 FROM vt1 NOT INDEXED, rt0 GROUP BY rt0.c4, rt0.c0, rt0.c1, rt0.c2;
SELECT ALL rt0.c4, rt0.c0, rt0.c1, rt0.c2 FROM vt1, rt0 GROUP BY rt0.c4, rt0.c0, rt0.c1, rt0.c2 HAVING CASE WHEN COUNT(GROUP_CONCAT(rt0.c3)) THEN (((vt1.c0, rt0.c3, rt0.c3))>=((x'b72b', rt0.c2, rt0.c1))) END UNION ALL SELECT ALL rt0.c4, rt0.c0, rt0.c1, rt0.c2 FROM vt1, rt0 GROUP BY rt0.c4, rt0.c0, rt0.c1, rt0.c2 HAVING (NOT (CASE WHEN COUNT(GROUP_CONCAT(rt0.c3)) THEN (((vt1.c0, rt0.c3, rt0.c3))>=((x'b72b', rt0.c2, rt0.c1))) END)) UNION ALL SELECT rt0.c4, rt0.c0, rt0.c1, rt0.c2 FROM vt1, rt0 GROUP BY rt0.c4, rt0.c0, rt0.c1, rt0.c2 HAVING ((CASE WHEN COUNT(GROUP_CONCAT(rt0.c3)) THEN (((vt1.c0, rt0.c3, rt0.c3))>=((x'b72b', rt0.c2, rt0.c1))) END) ISNULL);
SELECT rt0.c3, rt0.c2, rt0.c0, rt0.c4, rt0.c1 FROM rt0;
SELECT rt0.c3, rt0.c2, rt0.c0, rt0.c4, rt0.c1 FROM rt0 WHERE (((CAST(rt0.c4 AS TEXT)) IS TRUE)) UNION ALL SELECT ALL rt0.c3, rt0.c2, rt0.c0, rt0.c4, rt0.c1 FROM rt0 WHERE ((NOT (((CAST(rt0.c4 AS TEXT)) IS TRUE)))) UNION ALL SELECT rt0.c3, rt0.c2, rt0.c0, rt0.c4, rt0.c1 FROM rt0 WHERE (((((CAST(rt0.c4 AS TEXT)) IS TRUE)) ISNULL));
SELECT rt0.c3, rt0.c2, rt0.c0, rt0.c4, rt0.c1 FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((((rt0.c3)AND(CAST(rt0.c4 AS REAL))))AND((NOT (rt0.c3))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((((rt0.c3)AND(CAST(rt0.c4 AS REAL))))AND((NOT (rt0.c3))))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((((rt0.c3)AND(CAST(rt0.c4 AS REAL))))AND((NOT (rt0.c3))))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE (((((vt1.c0)IS NOT('-2093798946'))) BETWEEN (CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN ']' WHEN vt1.c0 THEN '' ELSE vt1.c0 END) AND (vt1.c0 COLLATE NOCASE))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT (((((vt1.c0)IS NOT('-2093798946'))) BETWEEN (CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN ']' WHEN vt1.c0 THEN '' ELSE vt1.c0 END) AND (vt1.c0 COLLATE NOCASE))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE (((((((vt1.c0)IS NOT('-2093798946'))) BETWEEN (CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN ']' WHEN vt1.c0 THEN '' ELSE vt1.c0 END) AND (vt1.c0 COLLATE NOCASE))) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT rt0.c2, rt0.c4 FROM rt0 GROUP BY rt0.c2, rt0.c4;
SELECT ALL rt0.c2, rt0.c4 FROM rt0 GROUP BY rt0.c2, rt0.c4 HAVING ((MIN(COUNT(AVG(rt0.c0)))) NOT BETWEEN (MIN(rt0.c1)) AND (GROUP_CONCAT(COUNT(rt0.c0)))) UNION ALL SELECT rt0.c2, rt0.c4 FROM rt0 GROUP BY rt0.c2, rt0.c4 HAVING (NOT (((MIN(COUNT(AVG(rt0.c0)))) NOT BETWEEN (MIN(rt0.c1)) AND (GROUP_CONCAT(COUNT(rt0.c0)))))) UNION ALL SELECT rt0.c2, rt0.c4 FROM rt0 GROUP BY rt0.c2, rt0.c4 HAVING ((((MIN(COUNT(AVG(rt0.c0)))) NOT BETWEEN (MIN(rt0.c1)) AND (GROUP_CONCAT(COUNT(rt0.c0))))) ISNULL);
SELECT ALL * FROM vt1, rt0;
SELECT * FROM vt1, rt0 WHERE ((NOT (((rt0.c0)<(rt0.c1))))) UNION ALL SELECT * FROM vt1, rt0 WHERE ((NOT ((NOT (((rt0.c0)<(rt0.c1))))))) UNION ALL SELECT ALL * FROM vt1, rt0 WHERE ((((NOT (((rt0.c0)<(rt0.c1))))) ISNULL));
SELECT ALL * FROM vt1, rt0;
SELECT DISTINCT * FROM vt1, rt0;
SELECT DISTINCT * FROM vt1, rt0 WHERE ((NOT ((((rt0.c4)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c3)))))) UNION SELECT DISTINCT * FROM vt1, rt0 WHERE ((NOT ((NOT ((((rt0.c4)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c3)))))))) UNION SELECT DISTINCT * FROM vt1, rt0 WHERE ((((NOT ((((rt0.c4)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c3)))))) ISNULL));
SELECT DISTINCT * FROM vt1, rt0;
SELECT rt0.c1, rt0.c4, vt1.c0, rt0.c3 FROM vt1 RIGHT OUTER JOIN rt0 ON ((CAST(rt0.c0 AS BLOB)) IS TRUE) GROUP BY rt0.c1, rt0.c4, vt1.c0, rt0.c3;
SELECT ALL rt0.c1, rt0.c4, vt1.c0, rt0.c3 FROM vt1 RIGHT OUTER JOIN rt0 ON ((CAST(rt0.c0 AS BLOB)) IS TRUE) WHERE ((NOT ((((vt1.c0, vt1.c0, rt0.c1)) BETWEEN ((rt0.c4, rt0.c0, rt0.c2)) AND ((NULL, '368545253', rt0.c0)))))) GROUP BY rt0.c1, rt0.c4, vt1.c0, rt0.c3 UNION SELECT rt0.c1, rt0.c4, vt1.c0, rt0.c3 FROM vt1 RIGHT OUTER JOIN rt0 ON ((CAST(rt0.c0 AS BLOB)) IS TRUE) WHERE ((NOT ((NOT ((((vt1.c0, vt1.c0, rt0.c1)) BETWEEN ((rt0.c4, rt0.c0, rt0.c2)) AND ((NULL, '368545253', rt0.c0)))))))) GROUP BY rt0.c1, rt0.c4, vt1.c0, rt0.c3 UNION SELECT ALL rt0.c1, rt0.c4, vt1.c0, rt0.c3 FROM vt1 RIGHT OUTER JOIN rt0 ON ((CAST(rt0.c0 AS BLOB)) IS TRUE) WHERE ((((NOT ((((vt1.c0, vt1.c0, rt0.c1)) BETWEEN ((rt0.c4, rt0.c0, rt0.c2)) AND ((NULL, '368545253', rt0.c0)))))) ISNULL)) GROUP BY rt0.c1, rt0.c4, vt1.c0, rt0.c3;
SELECT rt0.c1, rt0.c4, vt1.c0, rt0.c3 FROM vt1 RIGHT OUTER JOIN rt0 ON ((CAST(rt0.c0 AS BLOB)) IS TRUE) GROUP BY rt0.c1, rt0.c4, vt1.c0, rt0.c3;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING MIN(TOTAL(vt1.c0)) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (MIN(TOTAL(vt1.c0)))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((MIN(TOTAL(vt1.c0))) ISNULL);
SELECT ALL vt1.c0 FROM vt1;
SELECT ALL vt1.c0 FROM vt1 WHERE (LIKELY(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END)) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (LIKELY(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END)))) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE (((LIKELY(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END)) ISNULL));
SELECT ALL vt1.c0 FROM vt1;
SELECT DISTINCT rt0.c2, rt0.c0, rt0.c4 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c0, rt0.c4 FROM rt0 WHERE (((0.9303166119331813) NOT NULL)) UNION SELECT DISTINCT rt0.c2, rt0.c0, rt0.c4 FROM rt0 WHERE ((NOT (((0.9303166119331813) NOT NULL)))) UNION SELECT DISTINCT rt0.c2, rt0.c0, rt0.c4 FROM rt0 WHERE (((((0.9303166119331813) NOT NULL)) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c0, rt0.c4 FROM rt0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE (((vt1.c0) NOT BETWEEN ((~ (x'33d8'))) AND (vt1.c0))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT (((vt1.c0) NOT BETWEEN ((~ (x'33d8'))) AND (vt1.c0))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE (((((vt1.c0) NOT BETWEEN ((~ (x'33d8'))) AND (vt1.c0))) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0, rt0.c3, rt0.c1 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c3, rt0.c1;
SELECT vt1.c0, rt0.c3, rt0.c1 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c3, rt0.c1 HAVING ((((((((((((COUNT(rt0.c4))AND(SUM(rt0.c1))))OR(CASE WHEN COUNT(*) THEN '3guVQ!O' WHEN MIN(rt0.c1) THEN MAX(MIN(rt0.c1)) WHEN AVG(COUNT(MAX(rt0.c1))) THEN rt0.c0 ELSE rt0.c1 END)))AND(CASE AVG(vt1.c0)  WHEN MIN(vt1.c0) THEN rt0.c4 END)))OR(COUNT(*))))AND(GROUP_CONCAT(AVG(vt1.c0)))))AND(COUNT(rt0.c2))) UNION ALL SELECT ALL vt1.c0, rt0.c3, rt0.c1 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c3, rt0.c1 HAVING (NOT (((((((((((((COUNT(rt0.c4))AND(SUM(rt0.c1))))OR(CASE WHEN COUNT(*) THEN '3guVQ!O' WHEN MIN(rt0.c1) THEN MAX(MIN(rt0.c1)) WHEN AVG(COUNT(MAX(rt0.c1))) THEN rt0.c0 ELSE rt0.c1 END)))AND(CASE AVG(vt1.c0)  WHEN MIN(vt1.c0) THEN rt0.c4 END)))OR(COUNT(*))))AND(GROUP_CONCAT(AVG(vt1.c0)))))AND(COUNT(rt0.c2))))) UNION ALL SELECT vt1.c0, rt0.c3, rt0.c1 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c3, rt0.c1 HAVING ((((((((((((((COUNT(rt0.c4))AND(SUM(rt0.c1))))OR(CASE WHEN COUNT(*) THEN '3guVQ!O' WHEN MIN(rt0.c1) THEN MAX(MIN(rt0.c1)) WHEN AVG(COUNT(MAX(rt0.c1))) THEN rt0.c0 ELSE rt0.c1 END)))AND(CASE AVG(vt1.c0)  WHEN MIN(vt1.c0) THEN rt0.c4 END)))OR(COUNT(*))))AND(GROUP_CONCAT(AVG(vt1.c0)))))AND(COUNT(rt0.c2)))) ISNULL);
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE (json_remove(rt0.c1, rt0.c3) COLLATE BINARY) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (json_remove(rt0.c1, rt0.c3) COLLATE BINARY))) UNION ALL SELECT * FROM rt0 NOT INDEXED WHERE (((json_remove(rt0.c1, rt0.c3) COLLATE BINARY) ISNULL));
SELECT DISTINCT rt0.c3, rt0.c2 FROM vt1, rt0;
SELECT DISTINCT rt0.c3, rt0.c2 FROM vt1, rt0 WHERE (IFNULL(((rt0.c0)*(rt0.c1)), CAST(rt0.c4 AS INTEGER))) UNION SELECT DISTINCT rt0.c3, rt0.c2 FROM vt1, rt0 WHERE ((NOT (IFNULL(((rt0.c0)*(rt0.c1)), CAST(rt0.c4 AS INTEGER))))) UNION SELECT DISTINCT rt0.c3, rt0.c2 FROM vt1, rt0 WHERE (((IFNULL(((rt0.c0)*(rt0.c1)), CAST(rt0.c4 AS INTEGER))) ISNULL));
SELECT DISTINCT rt0.c3, rt0.c2 FROM vt1, rt0;
SELECT rt0.c0, rt0.c3, rt0.c1, rt0.c2, rt0.c4 FROM rt0 GROUP BY rt0.c0, rt0.c3, rt0.c1, rt0.c2, rt0.c4;
SELECT rt0.c0, rt0.c3, rt0.c1, rt0.c2, rt0.c4 FROM rt0 WHERE (((NULL) BETWEEN (rt0.c1) AND (rt0.c2)) COLLATE NOCASE) GROUP BY rt0.c0, rt0.c3, rt0.c1, rt0.c2, rt0.c4 UNION SELECT ALL rt0.c0, rt0.c3, rt0.c1, rt0.c2, rt0.c4 FROM rt0 WHERE ((NOT (((NULL) BETWEEN (rt0.c1) AND (rt0.c2)) COLLATE NOCASE))) GROUP BY rt0.c0, rt0.c3, rt0.c1, rt0.c2, rt0.c4 UNION SELECT rt0.c0, rt0.c3, rt0.c1, rt0.c2, rt0.c4 FROM rt0 WHERE (((((NULL) BETWEEN (rt0.c1) AND (rt0.c2)) COLLATE NOCASE) ISNULL)) GROUP BY rt0.c0, rt0.c3, rt0.c1, rt0.c2, rt0.c4;
SELECT rt0.c0, rt0.c3, rt0.c1, rt0.c2, rt0.c4 FROM rt0 GROUP BY rt0.c0, rt0.c3, rt0.c1, rt0.c2, rt0.c4;
SELECT ALL rt0.c4 FROM vt1, rt0 GROUP BY rt0.c4;
SELECT ALL rt0.c4 FROM vt1, rt0 GROUP BY rt0.c4 HAVING (rt0.c0 IN ()) UNION ALL SELECT rt0.c4 FROM vt1, rt0 GROUP BY rt0.c4 HAVING (NOT ((rt0.c0 IN ()))) UNION ALL SELECT ALL rt0.c4 FROM vt1, rt0 GROUP BY rt0.c4 HAVING (((rt0.c0 IN ())) ISNULL);
SELECT ALL rt0.c4 FROM vt1, rt0 GROUP BY rt0.c4;
SELECT ALL rt0.c4 FROM vt1, rt0 GROUP BY rt0.c4 HAVING (rt0.c0 IN ()) UNION ALL SELECT rt0.c4 FROM vt1, rt0 GROUP BY rt0.c4 HAVING (NOT ((rt0.c0 IN ()))) UNION ALL SELECT ALL rt0.c4 FROM vt1, rt0 GROUP BY rt0.c4 HAVING (((rt0.c0 IN ())) ISNULL);
SELECT ALL rt0.c4 FROM vt1, rt0 GROUP BY rt0.c4;
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE (rt0.c1) UNION ALL SELECT * FROM rt0 WHERE ((NOT (rt0.c1))) UNION ALL SELECT * FROM rt0 WHERE (((rt0.c1) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT rt0.c3, rt0.c0, rt0.c4, rt0.c2, vt1.c0, rt0.c1 FROM rt0 CROSS JOIN vt1 ON PRINTF((((rt0.c3)) NOT BETWEEN (('-1899364335')) AND ((vt1.c0))), (((rt0.c3)) BETWEEN ((rt0.c2)) AND ((vt1.c0))), -1.825149202E9);
SELECT DISTINCT rt0.c3, rt0.c0, rt0.c4, rt0.c2, vt1.c0, rt0.c1 FROM rt0 CROSS JOIN vt1 ON PRINTF((((rt0.c3)) NOT BETWEEN (('-1899364335')) AND ((vt1.c0))), (((rt0.c3)) BETWEEN ((rt0.c2)) AND ((vt1.c0))), -1.825149202E9) WHERE (0.8124308211206406) UNION SELECT DISTINCT rt0.c3, rt0.c0, rt0.c4, rt0.c2, vt1.c0, rt0.c1 FROM rt0 CROSS JOIN vt1 ON PRINTF((((rt0.c3)) NOT BETWEEN (('-1899364335')) AND ((vt1.c0))), (((rt0.c3)) BETWEEN ((rt0.c2)) AND ((vt1.c0))), -1.825149202E9) WHERE ((NOT (0.8124308211206406))) UNION SELECT DISTINCT rt0.c3, rt0.c0, rt0.c4, rt0.c2, vt1.c0, rt0.c1 FROM rt0 CROSS JOIN vt1 ON PRINTF((((rt0.c3)) NOT BETWEEN (('-1899364335')) AND ((vt1.c0))), (((rt0.c3)) BETWEEN ((rt0.c2)) AND ((vt1.c0))), -1.825149202E9) WHERE (((0.8124308211206406) ISNULL));
SELECT DISTINCT rt0.c3, rt0.c0, rt0.c4, rt0.c2, vt1.c0, rt0.c1 FROM rt0 CROSS JOIN vt1 ON PRINTF((((rt0.c3)) NOT BETWEEN (('-1899364335')) AND ((vt1.c0))), (((rt0.c3)) BETWEEN ((rt0.c2)) AND ((vt1.c0))), -1.825149202E9);
SELECT rt0.c1 FROM rt0 INNER JOIN vt1 ON ((((rt0.c4)/(rt0.c1)))LIKE(rt0.c0 COLLATE BINARY)) GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 INNER JOIN vt1 ON ((((rt0.c4)/(rt0.c1)))LIKE(rt0.c0 COLLATE BINARY)) WHERE (((rt0.c0 COLLATE BINARY)<=(((rt0.c2)!=(0.5736010499113896))))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0 INNER JOIN vt1 ON ((((rt0.c4)/(rt0.c1)))LIKE(rt0.c0 COLLATE BINARY)) WHERE ((NOT (((rt0.c0 COLLATE BINARY)<=(((rt0.c2)!=(0.5736010499113896))))))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0 INNER JOIN vt1 ON ((((rt0.c4)/(rt0.c1)))LIKE(rt0.c0 COLLATE BINARY)) WHERE (((((rt0.c0 COLLATE BINARY)<=(((rt0.c2)!=(0.5736010499113896))))) ISNULL)) GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 INNER JOIN vt1 ON ((((rt0.c4)/(rt0.c1)))LIKE(rt0.c0 COLLATE BINARY)) GROUP BY rt0.c1;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING MIN(COUNT(*)) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (MIN(COUNT(*)))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((MIN(COUNT(*))) ISNULL);
SELECT rt0.c3, rt0.c0, rt0.c4, rt0.c2 FROM vt1, rt0;
SELECT ALL rt0.c3, rt0.c0, rt0.c4, rt0.c2 FROM vt1, rt0 WHERE ((- (rt0.c2)) COLLATE NOCASE) UNION ALL SELECT ALL rt0.c3, rt0.c0, rt0.c4, rt0.c2 FROM vt1, rt0 NOT INDEXED WHERE ((NOT ((- (rt0.c2)) COLLATE NOCASE))) UNION ALL SELECT rt0.c3, rt0.c0, rt0.c4, rt0.c2 FROM vt1, rt0 WHERE ((((- (rt0.c2)) COLLATE NOCASE) ISNULL));
SELECT rt0.c3, rt0.c0, rt0.c4, rt0.c2 FROM vt1, rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (TIME(rt0.c3, COALESCE(rt0.c3, rt0.c1, rt0.c0, rt0.c3), '-857665150' COLLATE BINARY)) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (TIME(rt0.c3, COALESCE(rt0.c3, rt0.c1, rt0.c0, rt0.c3), '-857665150' COLLATE BINARY)))) UNION SELECT DISTINCT * FROM rt0 WHERE (((TIME(rt0.c3, COALESCE(rt0.c3, rt0.c1, rt0.c0, rt0.c3), '-857665150' COLLATE BINARY)) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE ((((x'' IN ())) NOTNULL)) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT ((((x'' IN ())) NOTNULL)))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((((((x'' IN ())) NOTNULL)) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL rt0.c2, rt0.c3, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c3, rt0.c1;
SELECT rt0.c2, rt0.c3, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c3, rt0.c1 HAVING (((rt0.c2, MAX(rt0.c4), rt0.c0)) NOT BETWEEN ((rt0.c4, TOTAL('302456202'), AVG(rt0.c4))) AND ((MAX(rt0.c4), COUNT(*), rt0.c0))) COLLATE RTRIM UNION ALL SELECT ALL rt0.c2, rt0.c3, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c3, rt0.c1 HAVING (NOT ((((rt0.c2, MAX(rt0.c4), rt0.c0)) NOT BETWEEN ((rt0.c4, TOTAL('302456202'), AVG(rt0.c4))) AND ((MAX(rt0.c4), COUNT(*), rt0.c0))) COLLATE RTRIM)) UNION ALL SELECT ALL rt0.c2, rt0.c3, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c3, rt0.c1 HAVING (((((rt0.c2, MAX(rt0.c4), rt0.c0)) NOT BETWEEN ((rt0.c4, TOTAL('302456202'), AVG(rt0.c4))) AND ((MAX(rt0.c4), COUNT(*), rt0.c0))) COLLATE RTRIM) ISNULL);
SELECT ALL rt0.c2, rt0.c3, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c3, rt0.c1;
SELECT rt0.c2, rt0.c3, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c3, rt0.c1 HAVING (((rt0.c2, MAX(rt0.c4), rt0.c0)) NOT BETWEEN ((rt0.c4, TOTAL('302456202'), AVG(rt0.c4))) AND ((MAX(rt0.c4), COUNT(*), rt0.c0))) COLLATE RTRIM UNION ALL SELECT ALL rt0.c2, rt0.c3, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c3, rt0.c1 HAVING (NOT ((((rt0.c2, MAX(rt0.c4), rt0.c0)) NOT BETWEEN ((rt0.c4, TOTAL('302456202'), AVG(rt0.c4))) AND ((MAX(rt0.c4), COUNT(*), rt0.c0))) COLLATE RTRIM)) UNION ALL SELECT ALL rt0.c2, rt0.c3, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c3, rt0.c1 HAVING (((((rt0.c2, MAX(rt0.c4), rt0.c0)) NOT BETWEEN ((rt0.c4, TOTAL('302456202'), AVG(rt0.c4))) AND ((MAX(rt0.c4), COUNT(*), rt0.c0))) COLLATE RTRIM) ISNULL);
SELECT ALL rt0.c2, rt0.c3, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c3, rt0.c1;
SELECT rt0.c1, rt0.c3, rt0.c4 FROM rt0;
SELECT ALL rt0.c1, rt0.c3, rt0.c4 FROM rt0 WHERE ((((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c3)) IN ())) UNION ALL SELECT ALL rt0.c1, rt0.c3, rt0.c4 FROM rt0 WHERE ((NOT ((((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c3)) IN ())))) UNION ALL SELECT ALL rt0.c1, rt0.c3, rt0.c4 FROM rt0 WHERE ((((((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c3)) IN ())) ISNULL));
SELECT rt0.c1, rt0.c3, rt0.c4 FROM rt0;
SELECT DISTINCT * FROM rt0 CROSS JOIN vt1 ON (((((rt0.c3)>(rt0.c3))))<(((rt0.c3 IN (rt0.c2, rt0.c1)))));
SELECT DISTINCT * FROM rt0 CROSS JOIN vt1 ON (((((rt0.c3)>(rt0.c3))))<(((rt0.c3 IN (rt0.c2, rt0.c1))))) WHERE (NULL COLLATE NOCASE) UNION SELECT DISTINCT * FROM rt0 CROSS JOIN vt1 ON (((((rt0.c3)>(rt0.c3))))<(((rt0.c3 IN (rt0.c2, rt0.c1))))) WHERE ((NOT (NULL COLLATE NOCASE))) UNION SELECT DISTINCT * FROM rt0 CROSS JOIN vt1 ON (((((rt0.c3)>(rt0.c3))))<(((rt0.c3 IN (rt0.c2, rt0.c1))))) WHERE (((NULL COLLATE NOCASE) ISNULL));
SELECT DISTINCT * FROM rt0 CROSS JOIN vt1 ON (((((rt0.c3)>(rt0.c3))))<(((rt0.c3 IN (rt0.c2, rt0.c1)))));
SELECT rt0.c1, vt1.c0, rt0.c3, rt0.c4, rt0.c2, rt0.c0 FROM rt0 RIGHT OUTER JOIN vt1 ON (NOT (((((rt0.c0)OR(rt0.c2)))AND(rt0.c4)))) GROUP BY rt0.c1, vt1.c0, rt0.c3, rt0.c4, rt0.c2, rt0.c0;
SELECT rt0.c1, vt1.c0, rt0.c3, rt0.c4, rt0.c2, rt0.c0 FROM rt0 RIGHT OUTER JOIN vt1 ON (NOT (((((rt0.c0)OR(rt0.c2)))AND(rt0.c4)))) WHERE (((CAST('46281209' AS INTEGER))IS(rt0.c3 COLLATE BINARY))) GROUP BY rt0.c1, vt1.c0, rt0.c3, rt0.c4, rt0.c2, rt0.c0 UNION SELECT rt0.c1, vt1.c0, rt0.c3, rt0.c4, rt0.c2, rt0.c0 FROM rt0 RIGHT OUTER JOIN vt1 ON (NOT (((((rt0.c0)OR(rt0.c2)))AND(rt0.c4)))) WHERE ((NOT (((CAST('46281209' AS INTEGER))IS(rt0.c3 COLLATE BINARY))))) GROUP BY rt0.c1, vt1.c0, rt0.c3, rt0.c4, rt0.c2, rt0.c0 UNION SELECT rt0.c1, vt1.c0, rt0.c3, rt0.c4, rt0.c2, rt0.c0 FROM rt0 RIGHT OUTER JOIN vt1 ON (NOT (((((rt0.c0)OR(rt0.c2)))AND(rt0.c4)))) WHERE (((((CAST('46281209' AS INTEGER))IS(rt0.c3 COLLATE BINARY))) ISNULL)) GROUP BY rt0.c1, vt1.c0, rt0.c3, rt0.c4, rt0.c2, rt0.c0;
SELECT rt0.c1, vt1.c0, rt0.c3, rt0.c4, rt0.c2, rt0.c0 FROM rt0 RIGHT OUTER JOIN vt1 ON (NOT (((((rt0.c0)OR(rt0.c2)))AND(rt0.c4)))) GROUP BY rt0.c1, vt1.c0, rt0.c3, rt0.c4, rt0.c2, rt0.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL TOTAL((((rt0.c2 IN ()))>=(rt0.c2 COLLATE RTRIM))) FROM rt0;
SELECT rt0.c4, rt0.c3 FROM rt0;
SELECT rt0.c4, rt0.c3 FROM rt0 WHERE ((rt0.c1 COLLATE BINARY IN (HEX(DISTINCT '1606631268'), (((x'', '-1848534713', rt0.c3))!=((0.39757769461851666, rt0.c0, rt0.c4)))))) UNION ALL SELECT rt0.c4, rt0.c3 FROM rt0 WHERE ((NOT ((rt0.c1 COLLATE BINARY IN (HEX(DISTINCT '1606631268'), (((x'', '-1848534713', rt0.c3))<>((0.39757769461851666, rt0.c0, rt0.c4)))))))) UNION ALL SELECT ALL rt0.c4, rt0.c3 FROM rt0 WHERE ((((rt0.c1 COLLATE BINARY IN (HEX(DISTINCT '1606631268'), (((x'', '-1848534713', rt0.c3))!=((0.39757769461851666, rt0.c0, rt0.c4)))))) ISNULL));
SELECT rt0.c4, rt0.c3 FROM rt0;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((((((vt1.c0))!=((vt1.c0)))) ISNULL)) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT ((((((vt1.c0))<>((vt1.c0)))) ISNULL)))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((((((((vt1.c0))<>((vt1.c0)))) ISNULL)) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 WHERE (((LIKELY(rt0.c4)) NOTNULL)) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM rt0 WHERE ((NOT (((LIKELY(rt0.c4)) NOTNULL)))) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM rt0 WHERE (((((LIKELY(rt0.c4)) NOTNULL)) ISNULL)) GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT * FROM rt0, vt1;
SELECT ALL * FROM rt0, vt1 WHERE ((~ (rt0.c4 COLLATE RTRIM))) UNION ALL SELECT * FROM rt0, vt1 WHERE ((NOT ((~ (rt0.c4 COLLATE RTRIM))))) UNION ALL SELECT * FROM rt0, vt1 WHERE ((((~ (rt0.c4 COLLATE RTRIM))) ISNULL));
SELECT * FROM rt0, vt1;
SELECT DISTINCT rt0.c4, rt0.c2, rt0.c3, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c4, rt0.c2, rt0.c3, rt0.c0 FROM rt0 WHERE (CAST(CAST(rt0.c1 AS INTEGER) AS NUMERIC)) UNION SELECT DISTINCT rt0.c4, rt0.c2, rt0.c3, rt0.c0 FROM rt0 WHERE ((NOT (CAST(CAST(rt0.c1 AS INTEGER) AS NUMERIC)))) UNION SELECT DISTINCT rt0.c4, rt0.c2, rt0.c3, rt0.c0 FROM rt0 WHERE (((CAST(CAST(rt0.c1 AS INTEGER) AS NUMERIC)) ISNULL));
SELECT DISTINCT rt0.c4, rt0.c2, rt0.c3, rt0.c0 FROM rt0;
SELECT ALL rt0.c0, rt0.c1, rt0.c3, rt0.c4 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c3, rt0.c4;
SELECT ALL rt0.c0, rt0.c1, rt0.c3, rt0.c4 FROM rt0 WHERE (((((0x72429fe7) NOT NULL)) BETWEEN ((((rt0.c4)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1)))) AND ((+ (rt0.c1))))) GROUP BY rt0.c0, rt0.c1, rt0.c3, rt0.c4 UNION SELECT ALL rt0.c0, rt0.c1, rt0.c3, rt0.c4 FROM rt0 WHERE ((NOT (((((0x72429fe7) NOT NULL)) BETWEEN ((((rt0.c4)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1)))) AND ((+ (rt0.c1))))))) GROUP BY rt0.c0, rt0.c1, rt0.c3, rt0.c4 UNION SELECT rt0.c0, rt0.c1, rt0.c3, rt0.c4 FROM rt0 WHERE (((((((0x72429fe7) NOT NULL)) BETWEEN ((((rt0.c4)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1)))) AND ((+ (rt0.c1))))) ISNULL)) GROUP BY rt0.c0, rt0.c1, rt0.c3, rt0.c4;
SELECT ALL rt0.c0, rt0.c1, rt0.c3, rt0.c4 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c3, rt0.c4;
SELECT ALL rt0.c0, rt0.c2, rt0.c1, rt0.c4 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1, rt0.c4;
SELECT rt0.c0, rt0.c2, rt0.c1, rt0.c4 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1, rt0.c4 HAVING ((MIN(TOTAL(x'b2eb'))) IS TRUE) UNION ALL SELECT rt0.c0, rt0.c2, rt0.c1, rt0.c4 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1, rt0.c4 HAVING (NOT (((MIN(TOTAL(x'b2eb'))) IS TRUE))) UNION ALL SELECT ALL rt0.c0, rt0.c2, rt0.c1, rt0.c4 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1, rt0.c4 HAVING ((((MIN(TOTAL(x'b2eb'))) IS TRUE)) ISNULL);
SELECT rt0.c1 FROM vt1, rt0;
SELECT ALL rt0.c1 FROM vt1, rt0 WHERE (((JULIANDAY(rt0.c0, rt0.c1, rt0.c1))=(((rt0.c0)&(rt0.c4))))) UNION ALL SELECT ALL rt0.c1 FROM vt1, rt0 WHERE ((NOT (((JULIANDAY(rt0.c0, rt0.c1, rt0.c1))=(((rt0.c0)&(rt0.c4))))))) UNION ALL SELECT ALL rt0.c1 FROM vt1, rt0 WHERE (((((JULIANDAY(rt0.c0, rt0.c1, rt0.c1))==(((rt0.c0)&(rt0.c4))))) ISNULL));
SELECT rt0.c1 FROM vt1, rt0;
SELECT DISTINCT vt1.c0, rt0.c4, rt0.c2, rt0.c3, rt0.c1, rt0.c0 FROM rt0, vt1;
SELECT DISTINCT vt1.c0, rt0.c4, rt0.c2, rt0.c3, rt0.c1, rt0.c0 FROM rt0, vt1 WHERE (((CASE WHEN rt0.c3 THEN rt0.c4 ELSE vt1.c0 END) NOT BETWEEN (CASE WHEN NULL THEN rt0.c4 WHEN x'' THEN rt0.c0 WHEN '-175210754' THEN rt0.c2 END) AND (((rt0.c4)<(rt0.c3))))) UNION SELECT DISTINCT vt1.c0, rt0.c4, rt0.c2, rt0.c3, rt0.c1, rt0.c0 FROM rt0, vt1 WHERE ((NOT (((CASE WHEN rt0.c3 THEN rt0.c4 ELSE vt1.c0 END) NOT BETWEEN (CASE WHEN NULL THEN rt0.c4 WHEN x'' THEN rt0.c0 WHEN '-175210754' THEN rt0.c2 END) AND (((rt0.c4)<(rt0.c3))))))) UNION SELECT DISTINCT vt1.c0, rt0.c4, rt0.c2, rt0.c3, rt0.c1, rt0.c0 FROM rt0, vt1 WHERE (((((CASE WHEN rt0.c3 THEN rt0.c4 ELSE vt1.c0 END) NOT BETWEEN (CASE WHEN NULL THEN rt0.c4 WHEN x'' THEN rt0.c0 WHEN '-175210754' THEN rt0.c2 END) AND (((rt0.c4)<(rt0.c3))))) ISNULL));
SELECT DISTINCT vt1.c0, rt0.c4, rt0.c2, rt0.c3, rt0.c1, rt0.c0 FROM rt0, vt1;
SELECT rt0.c4, rt0.c3, rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c4, rt0.c3, rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c4, rt0.c3, rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE (rt0.c0) GROUP BY rt0.c4, rt0.c3, rt0.c2, rt0.c0, rt0.c1 UNION SELECT ALL rt0.c4, rt0.c3, rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (rt0.c0))) GROUP BY rt0.c4, rt0.c3, rt0.c2, rt0.c0, rt0.c1 UNION SELECT rt0.c4, rt0.c3, rt0.c2, rt0.c0, rt0.c1 FROM rt0 WHERE (((rt0.c0) ISNULL)) GROUP BY rt0.c4, rt0.c3, rt0.c2, rt0.c0, rt0.c1;
SELECT rt0.c4, rt0.c3, rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c4, rt0.c3, rt0.c2, rt0.c0, rt0.c1;
SELECT rt0.c2, rt0.c1, rt0.c4, vt1.c0 FROM vt1, rt0 GROUP BY rt0.c2, rt0.c1, rt0.c4, vt1.c0;
SELECT rt0.c2, rt0.c1, rt0.c4, vt1.c0 FROM vt1, rt0 GROUP BY rt0.c2, rt0.c1, rt0.c4, vt1.c0 HAVING (TOTAL(rt0.c2) IN ()) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c4, vt1.c0 FROM vt1, rt0 GROUP BY rt0.c2, rt0.c1, rt0.c4, vt1.c0 HAVING (NOT ((TOTAL(rt0.c2) IN ()))) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c4, vt1.c0 FROM vt1, rt0 GROUP BY rt0.c2, rt0.c1, rt0.c4, vt1.c0 HAVING (((TOTAL(rt0.c2) IN ())) ISNULL);
SELECT rt0.c2, rt0.c1, rt0.c4, vt1.c0 FROM vt1, rt0 GROUP BY rt0.c2, rt0.c1, rt0.c4, vt1.c0;
SELECT rt0.c2, rt0.c1, rt0.c4, vt1.c0 FROM vt1, rt0 GROUP BY rt0.c2, rt0.c1, rt0.c4, vt1.c0 HAVING (TOTAL(rt0.c2) IN ()) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c4, vt1.c0 FROM vt1, rt0 GROUP BY rt0.c2, rt0.c1, rt0.c4, vt1.c0 HAVING (NOT ((TOTAL(rt0.c2) IN ()))) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c4, vt1.c0 FROM vt1, rt0 GROUP BY rt0.c2, rt0.c1, rt0.c4, vt1.c0 HAVING (((TOTAL(rt0.c2) IN ())) ISNULL);
SELECT rt0.c2, rt0.c1, rt0.c4, vt1.c0 FROM vt1, rt0 GROUP BY rt0.c2, rt0.c1, rt0.c4, vt1.c0;
SELECT ALL * FROM rt0;
SELECT * FROM rt0 WHERE ((((((rt0.c3)IS NOT('L 衲m!dy')), highlight(rt0.c3, rt0.c0, rt0.c4, rt0.c1), ((rt0.c3)IS NOT(rt0.c4))))<=((((rt0.c2)>>(rt0.c4)), rt0.c2, ((rt0.c4)<<(rt0.c0)))))) UNION ALL SELECT * FROM rt0 WHERE ((NOT ((((((rt0.c3)IS NOT('L 衲m!dy')), highlight(rt0.c3, rt0.c0, rt0.c4, rt0.c1), ((rt0.c3)IS NOT(rt0.c4))))<=((((rt0.c2)>>(rt0.c4)), rt0.c2, ((rt0.c4)<<(rt0.c0)))))))) UNION ALL SELECT ALL * FROM rt0 WHERE ((((((((rt0.c3)IS NOT('L 衲m!dy')), highlight(rt0.c3, rt0.c0, rt0.c4, rt0.c1), ((rt0.c3)IS NOT(rt0.c4))))<=((((rt0.c2)>>(rt0.c4)), rt0.c2, ((rt0.c4)<<(rt0.c0)))))) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1, vt1.c0, rt0.c3 FROM vt1, rt0;
SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1, vt1.c0, rt0.c3 FROM vt1, rt0 WHERE (((((rt0.c3)GLOB(rt0.c1)))IS NOT((((rt0.c4))<>((rt0.c0)))))) UNION SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1, vt1.c0, rt0.c3 FROM vt1, rt0 WHERE ((NOT (((((rt0.c3)GLOB(rt0.c1)))IS NOT((((rt0.c4))!=((rt0.c0)))))))) UNION SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1, vt1.c0, rt0.c3 FROM vt1, rt0 WHERE (((((((rt0.c3)GLOB(rt0.c1)))IS NOT((((rt0.c4))<>((rt0.c0)))))) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c0, rt0.c1, vt1.c0, rt0.c3 FROM vt1, rt0;
SELECT ALL rt0.c4, vt1.c0, rt0.c0, rt0.c1 FROM rt0, vt1 GROUP BY rt0.c4, vt1.c0, rt0.c0, rt0.c1;
SELECT rt0.c4, vt1.c0, rt0.c0, rt0.c1 FROM rt0, vt1 WHERE (CAST(((vt1.c0) BETWEEN (0Xffffffff8b91a70c) AND (NULL)) AS INTEGER)) GROUP BY rt0.c4, vt1.c0, rt0.c0, rt0.c1 UNION SELECT rt0.c4, vt1.c0, rt0.c0, rt0.c1 FROM rt0, vt1 WHERE ((NOT (CAST(((vt1.c0) BETWEEN (0Xffffffff8b91a70c) AND (NULL)) AS INTEGER)))) GROUP BY rt0.c4, vt1.c0, rt0.c0, rt0.c1 UNION SELECT rt0.c4, vt1.c0, rt0.c0, rt0.c1 FROM rt0, vt1 WHERE (((CAST(((vt1.c0) BETWEEN (0xffffffff8b91a70c) AND (NULL)) AS INTEGER)) ISNULL)) GROUP BY rt0.c4, vt1.c0, rt0.c0, rt0.c1;
SELECT ALL rt0.c4, vt1.c0, rt0.c0, rt0.c1 FROM rt0, vt1 GROUP BY rt0.c4, vt1.c0, rt0.c0, rt0.c1;
SELECT ALL rt0.c1, rt0.c0, vt1.c0, rt0.c3, rt0.c4, rt0.c2 FROM rt0, vt1 GROUP BY rt0.c1, rt0.c0, vt1.c0, rt0.c3, rt0.c4, rt0.c2;
SELECT rt0.c1, rt0.c0, vt1.c0, rt0.c3, rt0.c4, rt0.c2 FROM rt0, vt1 GROUP BY rt0.c1, rt0.c0, vt1.c0, rt0.c3, rt0.c4, rt0.c2 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c1, rt0.c0, vt1.c0, rt0.c3, rt0.c4, rt0.c2 FROM rt0, vt1 GROUP BY rt0.c1, rt0.c0, vt1.c0, rt0.c3, rt0.c4, rt0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c1, rt0.c0, vt1.c0, rt0.c3, rt0.c4, rt0.c2 FROM rt0, vt1 GROUP BY rt0.c1, rt0.c0, vt1.c0, rt0.c3, rt0.c4, rt0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c1, rt0.c0, vt1.c0, rt0.c3, rt0.c4, rt0.c2 FROM rt0, vt1 GROUP BY rt0.c1, rt0.c0, vt1.c0, rt0.c3, rt0.c4, rt0.c2;
SELECT rt0.c1, rt0.c0, vt1.c0, rt0.c3, rt0.c4, rt0.c2 FROM rt0, vt1 GROUP BY rt0.c1, rt0.c0, vt1.c0, rt0.c3, rt0.c4, rt0.c2 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c1, rt0.c0, vt1.c0, rt0.c3, rt0.c4, rt0.c2 FROM rt0, vt1 GROUP BY rt0.c1, rt0.c0, vt1.c0, rt0.c3, rt0.c4, rt0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c1, rt0.c0, vt1.c0, rt0.c3, rt0.c4, rt0.c2 FROM rt0, vt1 GROUP BY rt0.c1, rt0.c0, vt1.c0, rt0.c3, rt0.c4, rt0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c1, rt0.c0, vt1.c0, rt0.c3, rt0.c4, rt0.c2 FROM rt0, vt1 GROUP BY rt0.c1, rt0.c0, vt1.c0, rt0.c3, rt0.c4, rt0.c2;
SELECT ALL vt1.c0 FROM vt1;
SELECT vt1.c0 FROM vt1 WHERE (CAST(vt1.c0 COLLATE NOCASE AS TEXT)) UNION ALL SELECT vt1.c0 FROM vt1 WHERE ((NOT (CAST(vt1.c0 COLLATE NOCASE AS TEXT)))) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE (((CAST(vt1.c0 COLLATE NOCASE AS TEXT)) ISNULL));
SELECT ALL vt1.c0 FROM vt1;
SELECT DISTINCT * FROM rt0 INNER JOIN vt1 ON (rt0.c4 IN ());
SELECT DISTINCT * FROM rt0 INNER JOIN vt1 ON (rt0.c4 IN ()) WHERE (-1729173314) UNION SELECT DISTINCT * FROM rt0 NOT INDEXED INNER JOIN vt1 ON (rt0.c4 IN ()) WHERE ((NOT (-1729173314))) UNION SELECT DISTINCT * FROM rt0 INNER JOIN vt1 ON (rt0.c4 IN ()) WHERE (((-1729173314) ISNULL));
SELECT DISTINCT * FROM rt0 INNER JOIN vt1 ON (rt0.c4 IN ());
SELECT rt0.c3 FROM vt1, rt0 GROUP BY rt0.c3;
SELECT rt0.c3 FROM vt1, rt0 WHERE ((~ ((('2l')<>(rt0.c1))))) GROUP BY rt0.c3 UNION SELECT rt0.c3 FROM vt1, rt0 WHERE ((NOT ((~ ((('2l')!=(rt0.c1))))))) GROUP BY rt0.c3 UNION SELECT ALL rt0.c3 FROM vt1, rt0 WHERE ((((~ ((('2l')<>(rt0.c1))))) ISNULL)) GROUP BY rt0.c3;
SELECT rt0.c3 FROM vt1, rt0 GROUP BY rt0.c3;
SELECT rt0.c4 FROM rt0 GROUP BY rt0.c4;
SELECT rt0.c4 FROM rt0 GROUP BY rt0.c4 HAVING CAST(CAST(rt0.c2 AS BLOB) AS INTEGER) UNION ALL SELECT rt0.c4 FROM rt0 GROUP BY rt0.c4 HAVING (NOT (CAST(CAST(rt0.c2 AS BLOB) AS INTEGER))) UNION ALL SELECT ALL rt0.c4 FROM rt0 GROUP BY rt0.c4 HAVING ((CAST(CAST(rt0.c2 AS BLOB) AS INTEGER)) ISNULL);
SELECT rt0.c4 FROM rt0 GROUP BY rt0.c4;
SELECT rt0.c4 FROM rt0 GROUP BY rt0.c4 HAVING CAST(CAST(rt0.c2 AS BLOB) AS INTEGER) UNION ALL SELECT rt0.c4 FROM rt0 GROUP BY rt0.c4 HAVING (NOT (CAST(CAST(rt0.c2 AS BLOB) AS INTEGER))) UNION ALL SELECT ALL rt0.c4 FROM rt0 GROUP BY rt0.c4 HAVING ((CAST(CAST(rt0.c2 AS BLOB) AS INTEGER)) ISNULL);
SELECT rt0.c4 FROM rt0 GROUP BY rt0.c4;
SELECT rt0.c4, rt0.c0 FROM rt0;
SELECT ALL rt0.c4, rt0.c0 FROM rt0 WHERE (((((rt0.c3)>(rt0.c1))) NOT NULL)) UNION ALL SELECT rt0.c4, rt0.c0 FROM rt0 WHERE ((NOT (((((rt0.c3)>(rt0.c1))) NOT NULL)))) UNION ALL SELECT ALL rt0.c4, rt0.c0 FROM rt0 WHERE (((((((rt0.c3)>(rt0.c1))) NOT NULL)) ISNULL));
SELECT rt0.c4, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c0, rt0.c3, rt0.c4 FROM rt0, vt1;
SELECT DISTINCT rt0.c2, rt0.c0, rt0.c3, rt0.c4 FROM rt0, vt1 WHERE (SQLITE_COMPILEOPTION_GET(rt0.c1) COLLATE BINARY) UNION SELECT DISTINCT rt0.c2, rt0.c0, rt0.c3, rt0.c4 FROM rt0, vt1 WHERE ((NOT (SQLITE_COMPILEOPTION_GET(rt0.c1) COLLATE BINARY))) UNION SELECT DISTINCT rt0.c2, rt0.c0, rt0.c3, rt0.c4 FROM rt0, vt1 WHERE (((SQLITE_COMPILEOPTION_GET(rt0.c1) COLLATE BINARY) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c0, rt0.c3, rt0.c4 FROM rt0, vt1;
SELECT rt0.c1 FROM rt0, vt1 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0, vt1 WHERE ((((((vt1.c0))==((rt0.c4))))GLOB(0.22910278204686385))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0, vt1 WHERE ((NOT ((((((vt1.c0))==((rt0.c4))))GLOB(0.22910278204686385))))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0, vt1 WHERE ((((((((vt1.c0))==((rt0.c4))))GLOB(0.22910278204686385))) ISNULL)) GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0, vt1 GROUP BY rt0.c1;
SELECT ALL rt0.c4, rt0.c3, rt0.c1, vt1.c0, rt0.c0, rt0.c2 FROM vt1, rt0 GROUP BY rt0.c4, rt0.c3, rt0.c1, vt1.c0, rt0.c0, rt0.c2;
SELECT ALL rt0.c4, rt0.c3, rt0.c1, vt1.c0, rt0.c0, rt0.c2 FROM vt1, rt0 GROUP BY rt0.c4, rt0.c3, rt0.c1, vt1.c0, rt0.c0, rt0.c2 HAVING ((SUM(AVG(MIN(rt0.c1))))|(MAX(COUNT(x'')))) UNION ALL SELECT ALL rt0.c4, rt0.c3, rt0.c1, vt1.c0, rt0.c0, rt0.c2 FROM vt1, rt0 GROUP BY rt0.c4, rt0.c3, rt0.c1, vt1.c0, rt0.c0, rt0.c2 HAVING (NOT (((SUM(AVG(MIN(rt0.c1))))|(MAX(COUNT(x'')))))) UNION ALL SELECT ALL rt0.c4, rt0.c3, rt0.c1, vt1.c0, rt0.c0, rt0.c2 FROM vt1, rt0 GROUP BY rt0.c4, rt0.c3, rt0.c1, vt1.c0, rt0.c0, rt0.c2 HAVING ((((SUM(AVG(MIN(rt0.c1))))|(MAX(COUNT(x''))))) ISNULL);
SELECT * FROM rt0, vt1;
SELECT ALL * FROM rt0, vt1 WHERE (((((rt0.c3)|(rt0.c3)))IS NOT(rt0.c4 COLLATE RTRIM))) UNION ALL SELECT ALL * FROM rt0, vt1 WHERE ((NOT (((((rt0.c3)|(rt0.c3)))IS NOT(rt0.c4 COLLATE RTRIM))))) UNION ALL SELECT * FROM rt0, vt1 WHERE (((((((rt0.c3)|(rt0.c3)))IS NOT(rt0.c4 COLLATE RTRIM))) ISNULL));
SELECT * FROM rt0, vt1;
SELECT DISTINCT rt0.c3, rt0.c4 FROM vt1, rt0;
SELECT DISTINCT rt0.c3, rt0.c4 FROM vt1, rt0 WHERE ((((rt0.c1, rt0.c1, rt0.c0, rt0.c4, rt0.c4)) BETWEEN ((CAST(rt0.c0 AS REAL), ((rt0.c1)/(vt1.c0)), UPPER(DISTINCT vt1.c0), JULIANDAY(rt0.c1, rt0.c1, rt0.c2), (vt1.c0 IN ()))) AND (('1309979608', CASE rt0.c3  WHEN rt0.c0 THEN 0xffffffff9499deae WHEN vt1.c0 THEN rt0.c4 WHEN rt0.c4 THEN rt0.c1 END, ((rt0.c3) BETWEEN (NULL) AND (vt1.c0)), CASE vt1.c0  WHEN rt0.c1 THEN 'n' END, ((rt0.c2)>(-1.848534713E9)))))) UNION SELECT DISTINCT rt0.c3, rt0.c4 FROM vt1, rt0 WHERE ((NOT ((((rt0.c1, rt0.c1, rt0.c0, rt0.c4, rt0.c4)) BETWEEN ((CAST(rt0.c0 AS REAL), ((rt0.c1)/(vt1.c0)), UPPER(DISTINCT vt1.c0), JULIANDAY(rt0.c1, rt0.c1, rt0.c2), (vt1.c0 IN ()))) AND (('1309979608', CASE rt0.c3  WHEN rt0.c0 THEN 0xffffffff9499deae WHEN vt1.c0 THEN rt0.c4 WHEN rt0.c4 THEN rt0.c1 END, ((rt0.c3) BETWEEN (NULL) AND (vt1.c0)), CASE vt1.c0  WHEN rt0.c1 THEN 'n' END, ((rt0.c2)>(-1.848534713E9)))))))) UNION SELECT DISTINCT rt0.c3, rt0.c4 FROM vt1, rt0 WHERE ((((((rt0.c1, rt0.c1, rt0.c0, rt0.c4, rt0.c4)) BETWEEN ((CAST(rt0.c0 AS REAL), ((rt0.c1)/(vt1.c0)), UPPER(DISTINCT vt1.c0), JULIANDAY(rt0.c1, rt0.c1, rt0.c2), (vt1.c0 IN ()))) AND (('1309979608', CASE rt0.c3  WHEN rt0.c0 THEN 0xffffffff9499deae WHEN vt1.c0 THEN rt0.c4 WHEN rt0.c4 THEN rt0.c1 END, ((rt0.c3) BETWEEN (NULL) AND (vt1.c0)), CASE vt1.c0  WHEN rt0.c1 THEN 'n' END, ((rt0.c2)>(-1.848534713E9)))))) ISNULL));
SELECT DISTINCT rt0.c3, rt0.c4 FROM vt1, rt0;
SELECT ALL vt1.c0, rt0.c3, rt0.c1, rt0.c4 FROM rt0 NATURAL JOIN vt1 GROUP BY vt1.c0, rt0.c3, rt0.c1, rt0.c4;
SELECT vt1.c0, rt0.c3, rt0.c1, rt0.c4 FROM rt0 NATURAL JOIN vt1 WHERE (((LENGTH(rt0.c0))+(((rt0.c2)<=(rt0.c0))))) GROUP BY vt1.c0, rt0.c3, rt0.c1, rt0.c4 UNION SELECT vt1.c0, rt0.c3, rt0.c1, rt0.c4 FROM rt0 NATURAL JOIN vt1 WHERE ((NOT (((LENGTH(rt0.c0))+(((rt0.c2)<=(rt0.c0))))))) GROUP BY vt1.c0, rt0.c3, rt0.c1, rt0.c4 UNION SELECT vt1.c0, rt0.c3, rt0.c1, rt0.c4 FROM rt0 NATURAL JOIN vt1 WHERE (((((LENGTH(rt0.c0))+(((rt0.c2)<=(rt0.c0))))) ISNULL)) GROUP BY vt1.c0, rt0.c3, rt0.c1, rt0.c4;
SELECT ALL vt1.c0, rt0.c3, rt0.c1, rt0.c4 FROM rt0 NATURAL JOIN vt1 GROUP BY vt1.c0, rt0.c3, rt0.c1, rt0.c4;
SELECT rt0.c4, rt0.c2, vt1.c0, rt0.c0, rt0.c3 FROM vt1, rt0 GROUP BY rt0.c4, rt0.c2, vt1.c0, rt0.c0, rt0.c3;
SELECT ALL rt0.c4, rt0.c2, vt1.c0, rt0.c0, rt0.c3 FROM vt1, rt0 GROUP BY rt0.c4, rt0.c2, vt1.c0, rt0.c0, rt0.c3 HAVING rt0.c2 UNION ALL SELECT ALL rt0.c4, rt0.c2, vt1.c0, rt0.c0, rt0.c3 FROM vt1 NOT INDEXED, rt0 GROUP BY rt0.c4, rt0.c2, vt1.c0, rt0.c0, rt0.c3 HAVING (NOT (rt0.c2)) UNION ALL SELECT rt0.c4, rt0.c2, vt1.c0, rt0.c0, rt0.c3 FROM vt1, rt0 GROUP BY rt0.c4, rt0.c2, vt1.c0, rt0.c0, rt0.c3 HAVING ((rt0.c2) ISNULL);
SELECT rt0.c4, rt0.c2, vt1.c0, rt0.c0, rt0.c3 FROM vt1, rt0 GROUP BY rt0.c4, rt0.c2, vt1.c0, rt0.c0, rt0.c3;
SELECT ALL rt0.c4, rt0.c2, vt1.c0, rt0.c0, rt0.c3 FROM vt1, rt0 GROUP BY rt0.c4, rt0.c2, vt1.c0, rt0.c0, rt0.c3 HAVING rt0.c2 UNION ALL SELECT ALL rt0.c4, rt0.c2, vt1.c0, rt0.c0, rt0.c3 FROM vt1 NOT INDEXED, rt0 GROUP BY rt0.c4, rt0.c2, vt1.c0, rt0.c0, rt0.c3 HAVING (NOT (rt0.c2)) UNION ALL SELECT rt0.c4, rt0.c2, vt1.c0, rt0.c0, rt0.c3 FROM vt1, rt0 GROUP BY rt0.c4, rt0.c2, vt1.c0, rt0.c0, rt0.c3 HAVING ((rt0.c2) ISNULL);
SELECT rt0.c4, rt0.c2, vt1.c0, rt0.c0, rt0.c3 FROM vt1, rt0 GROUP BY rt0.c4, rt0.c2, vt1.c0, rt0.c0, rt0.c3;
SELECT ALL rt0.c0, rt0.c2 FROM rt0;
SELECT rt0.c0, rt0.c2 FROM rt0 WHERE ((((('0.07694756667992741')AND((((rt0.c2, rt0.c1, rt0.c4)) BETWEEN ((rt0.c4, rt0.c0, -1.538169807E9)) AND ((rt0.c1, rt0.c4, rt0.c4))))))AND(((((((((rt0.c3)OR(rt0.c1)))OR(rt0.c1)))AND(rt0.c4)))AND(rt0.c3))))) UNION ALL SELECT rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT ((((('0.07694756667992741')AND((((rt0.c2, rt0.c1, rt0.c4)) BETWEEN ((rt0.c4, rt0.c0, -1.538169807E9)) AND ((rt0.c1, rt0.c4, rt0.c4))))))AND(((((((((rt0.c3)OR(rt0.c1)))OR(rt0.c1)))AND(rt0.c4)))AND(rt0.c3))))))) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt0 WHERE ((((((('0.07694756667992741')AND((((rt0.c2, rt0.c1, rt0.c4)) BETWEEN ((rt0.c4, rt0.c0, -1.538169807E9)) AND ((rt0.c1, rt0.c4, rt0.c4))))))AND(((((((((rt0.c3)OR(rt0.c1)))OR(rt0.c1)))AND(rt0.c4)))AND(rt0.c3))))) ISNULL));
SELECT ALL rt0.c0, rt0.c2 FROM rt0;
SELECT DISTINCT * FROM rt0, vt1;
SELECT DISTINCT * FROM rt0, vt1 WHERE ((((('D-0O')) NOT BETWEEN ((vt1.c0)) AND ((rt0.c4))) IN (((rt0.c4) IS FALSE)))) UNION SELECT DISTINCT * FROM rt0, vt1 WHERE ((NOT ((((('D-0O')) NOT BETWEEN ((vt1.c0)) AND ((rt0.c4))) IN (((rt0.c4) IS FALSE)))))) UNION SELECT DISTINCT * FROM rt0, vt1 WHERE ((((((('D-0O')) NOT BETWEEN ((vt1.c0)) AND ((rt0.c4))) IN (((rt0.c4) IS FALSE)))) ISNULL));
SELECT DISTINCT * FROM rt0, vt1;
SELECT ALL rt0.c1, rt0.c2, rt0.c0, rt0.c3, rt0.c4, vt1.c0 FROM vt1 INNER JOIN rt0 ON (~ ((rt0.c4 IN (vt1.c0, rt0.c4)))) GROUP BY rt0.c1, rt0.c2, rt0.c0, rt0.c3, rt0.c4, vt1.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0, rt0.c3, rt0.c4, vt1.c0 FROM vt1 INNER JOIN rt0 ON (~ ((rt0.c4 IN (vt1.c0, rt0.c4)))) WHERE (((CAST(rt0.c3 AS TEXT)) ISNULL)) GROUP BY rt0.c1, rt0.c2, rt0.c0, rt0.c3, rt0.c4, vt1.c0 UNION SELECT rt0.c1, rt0.c2, rt0.c0, rt0.c3, rt0.c4, vt1.c0 FROM vt1 INNER JOIN rt0 ON (~ ((rt0.c4 IN (vt1.c0, rt0.c4)))) WHERE ((NOT (((CAST(rt0.c3 AS TEXT)) ISNULL)))) GROUP BY rt0.c1, rt0.c2, rt0.c0, rt0.c3, rt0.c4, vt1.c0 UNION SELECT rt0.c1, rt0.c2, rt0.c0, rt0.c3, rt0.c4, vt1.c0 FROM vt1 INNER JOIN rt0 ON (~ ((rt0.c4 IN (vt1.c0, rt0.c4)))) WHERE (((((CAST(rt0.c3 AS TEXT)) ISNULL)) ISNULL)) GROUP BY rt0.c1, rt0.c2, rt0.c0, rt0.c3, rt0.c4, vt1.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0, rt0.c3, rt0.c4, vt1.c0 FROM vt1 INNER JOIN rt0 ON (~ ((rt0.c4 IN (vt1.c0, rt0.c4)))) GROUP BY rt0.c1, rt0.c2, rt0.c0, rt0.c3, rt0.c4, vt1.c0;
SELECT ALL rt0.c0, rt0.c4, rt0.c1, vt1.c0, rt0.c2, rt0.c3 FROM vt1, rt0 GROUP BY rt0.c0, rt0.c4, rt0.c1, vt1.c0, rt0.c2, rt0.c3;
SELECT ALL rt0.c0, rt0.c4, rt0.c1, vt1.c0, rt0.c2, rt0.c3 FROM vt1, rt0 GROUP BY rt0.c0, rt0.c4, rt0.c1, vt1.c0, rt0.c2, rt0.c3 HAVING (((((TOTAL(COUNT(*)))) BETWEEN ((MIN(rt0.c1))) AND ((COUNT(COUNT(rt0.c1)))))) BETWEEN (MIN(COUNT(*))) AND (((COUNT(rt0.c3)) IS FALSE))) UNION ALL SELECT rt0.c0, rt0.c4, rt0.c1, vt1.c0, rt0.c2, rt0.c3 FROM vt1, rt0 GROUP BY rt0.c0, rt0.c4, rt0.c1, vt1.c0, rt0.c2, rt0.c3 HAVING (NOT ((((((TOTAL(COUNT(*)))) BETWEEN ((MIN(rt0.c1))) AND ((COUNT(COUNT(rt0.c1)))))) BETWEEN (MIN(COUNT(*))) AND (((COUNT(rt0.c3)) IS FALSE))))) UNION ALL SELECT rt0.c0, rt0.c4, rt0.c1, vt1.c0, rt0.c2, rt0.c3 FROM vt1, rt0 GROUP BY rt0.c0, rt0.c4, rt0.c1, vt1.c0, rt0.c2, rt0.c3 HAVING (((((((TOTAL(COUNT(*)))) BETWEEN ((MIN(rt0.c1))) AND ((COUNT(COUNT(rt0.c1)))))) BETWEEN (MIN(COUNT(*))) AND (((COUNT(rt0.c3)) IS FALSE)))) ISNULL);
SELECT * FROM vt1;
SELECT * FROM vt1 WHERE ((((((((((vt1.c0 IN (vt1.c0)))OR(CAST(vt1.c0 AS BLOB))))AND(LAST_INSERT_ROWID())))OR(TRIM(vt1.c0, vt1.c0))))AND((vt1.c0 IN ())))) UNION ALL SELECT * FROM vt1 WHERE ((NOT ((((((((((vt1.c0 IN (vt1.c0)))OR(CAST(vt1.c0 AS BLOB))))AND(LAST_INSERT_ROWID())))OR(TRIM(vt1.c0, vt1.c0))))AND((vt1.c0 IN ())))))) UNION ALL SELECT ALL * FROM vt1 WHERE ((((((((((((vt1.c0 IN (vt1.c0)))OR(CAST(vt1.c0 AS BLOB))))AND(LAST_INSERT_ROWID())))OR(TRIM(vt1.c0, vt1.c0))))AND((vt1.c0 IN ())))) ISNULL));
SELECT * FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE (vt1.c0) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT (vt1.c0))) UNION SELECT DISTINCT vt1.c0 FROM vt1 NOT INDEXED WHERE (((vt1.c0) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT ALL rt0.c1, rt0.c2, rt0.c3, rt0.c4 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c3, rt0.c4;
SELECT ALL rt0.c1, rt0.c2, rt0.c3, rt0.c4 FROM rt0 WHERE (((((rt0.c3)%(rt0.c3))) IS TRUE)) GROUP BY rt0.c1, rt0.c2, rt0.c3, rt0.c4 UNION SELECT ALL rt0.c1, rt0.c2, rt0.c3, rt0.c4 FROM rt0 WHERE ((NOT (((((rt0.c3)%(rt0.c3))) IS TRUE)))) GROUP BY rt0.c1, rt0.c2, rt0.c3, rt0.c4 UNION SELECT rt0.c1, rt0.c2, rt0.c3, rt0.c4 FROM rt0 WHERE (((((((rt0.c3)%(rt0.c3))) IS TRUE)) ISNULL)) GROUP BY rt0.c1, rt0.c2, rt0.c3, rt0.c4;
SELECT ALL rt0.c1, rt0.c2, rt0.c3, rt0.c4 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c3, rt0.c4;
SELECT ALL rt0.c2, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c3;
SELECT ALL rt0.c2, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c3 HAVING SUM(CASE AVG(rt0.c2)  WHEN rt0.c1 THEN SUM(rt0.c4) ELSE MAX(COUNT(0.2763167265202632)) END) UNION ALL SELECT ALL rt0.c2, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c3 HAVING (NOT (SUM(CASE AVG(rt0.c2)  WHEN rt0.c1 THEN SUM(rt0.c4) ELSE MAX(COUNT(0.2763167265202632)) END))) UNION ALL SELECT rt0.c2, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c3 HAVING ((SUM(CASE AVG(rt0.c2)  WHEN rt0.c1 THEN SUM(rt0.c4) ELSE MAX(COUNT(0.2763167265202632)) END)) ISNULL);
SELECT vt1.c0, rt0.c1, rt0.c0, rt0.c2 FROM rt0 CROSS JOIN vt1 ON 1.38261781E8;
SELECT vt1.c0, rt0.c1, rt0.c0, rt0.c2 FROM rt0 CROSS JOIN vt1 ON 1.38261781E8 WHERE (((CASE WHEN vt1.c0 THEN rt0.c0 END) BETWEEN ((rt0.c3 IN ())) AND (rt0.c4))) UNION ALL SELECT ALL vt1.c0, rt0.c1, rt0.c0, rt0.c2 FROM rt0 CROSS JOIN vt1 ON 1.38261781E8 WHERE ((NOT (((CASE WHEN vt1.c0 THEN rt0.c0 END) BETWEEN ((rt0.c3 IN ())) AND (rt0.c4))))) UNION ALL SELECT vt1.c0, rt0.c1, rt0.c0, rt0.c2 FROM rt0 CROSS JOIN vt1 ON 1.38261781E8 WHERE (((((CASE WHEN vt1.c0 THEN rt0.c0 END) BETWEEN ((rt0.c3 IN ())) AND (rt0.c4))) ISNULL));
SELECT vt1.c0, rt0.c1, rt0.c0, rt0.c2 FROM rt0 CROSS JOIN vt1 ON 1.38261781E8;
SELECT DISTINCT rt0.c4, vt1.c0 FROM rt0 RIGHT OUTER JOIN vt1 ON ((vt1.c0)LIKE(vt1.c0)) COLLATE NOCASE;
SELECT DISTINCT rt0.c4, vt1.c0 FROM rt0 RIGHT OUTER JOIN vt1 ON ((vt1.c0)LIKE(vt1.c0)) COLLATE NOCASE WHERE (rt0.c3) UNION SELECT DISTINCT rt0.c4, vt1.c0 FROM rt0 RIGHT OUTER JOIN vt1 ON ((vt1.c0)LIKE(vt1.c0)) COLLATE NOCASE WHERE ((NOT (rt0.c3))) UNION SELECT DISTINCT rt0.c4, vt1.c0 FROM rt0 RIGHT OUTER JOIN vt1 ON ((vt1.c0)LIKE(vt1.c0)) COLLATE NOCASE WHERE (((rt0.c3) ISNULL));
SELECT DISTINCT rt0.c4, vt1.c0 FROM rt0 RIGHT OUTER JOIN vt1 ON ((vt1.c0)LIKE(vt1.c0)) COLLATE NOCASE;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 WHERE (((((((((load_extension(rt0.c1, rt0.c3))OR(rt0.c4)))AND(rt0.c4 COLLATE RTRIM)))AND(((rt0.c0) NOT BETWEEN (rt0.c4) AND (rt0.c1)))))OR(CAST(rt0.c4 AS REAL)))) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM rt0 WHERE ((NOT (((((((((load_extension(rt0.c1, rt0.c3))OR(rt0.c4)))AND(rt0.c4 COLLATE RTRIM)))AND(((rt0.c0) NOT BETWEEN (rt0.c4) AND (rt0.c1)))))OR(CAST(rt0.c4 AS REAL)))))) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM rt0 WHERE (((((((((((load_extension(rt0.c1, rt0.c3))OR(rt0.c4)))AND(rt0.c4 COLLATE RTRIM)))AND(((rt0.c0) NOT BETWEEN (rt0.c4) AND (rt0.c1)))))OR(CAST(rt0.c4 AS REAL)))) ISNULL)) GROUP BY rt0.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (json_array(vt1.c0, SUM(COUNT(GROUP_CONCAT(SUM(SUM(vt1.c0)))))))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT ((NOT (json_array(vt1.c0, SUM(COUNT(GROUP_CONCAT(SUM(SUM(vt1.c0)))))))))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (((NOT (json_array(vt1.c0, SUM(COUNT(GROUP_CONCAT(SUM(SUM(vt1.c0))))))))) ISNULL);
SELECT * FROM vt1, rt0;
SELECT ALL * FROM vt1, rt0 WHERE (rt0.c3) UNION ALL SELECT ALL * FROM vt1, rt0 WHERE ((NOT (rt0.c3))) UNION ALL SELECT * FROM vt1, rt0 WHERE (((rt0.c3) ISNULL));
SELECT * FROM vt1, rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((CASE rt0.c3  WHEN rt0.c3 THEN rt0.c2 END) NOTNULL)) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((CASE rt0.c3  WHEN rt0.c3 THEN rt0.c2 END) NOTNULL)))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((CASE rt0.c3  WHEN rt0.c3 THEN rt0.c2 END) NOTNULL)) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c4, rt0.c0, rt0.c2, rt0.c1 FROM vt1 CROSS JOIN rt0 ON ((rt0.c1) ISNULL) GROUP BY rt0.c4, rt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c4, rt0.c0, rt0.c2, rt0.c1 FROM vt1 CROSS JOIN rt0 ON ((rt0.c1) ISNULL) WHERE (CAST(CAST(rt0.c4 AS INTEGER) AS TEXT)) GROUP BY rt0.c4, rt0.c0, rt0.c2, rt0.c1 UNION SELECT rt0.c4, rt0.c0, rt0.c2, rt0.c1 FROM vt1 CROSS JOIN rt0 ON ((rt0.c1) ISNULL) WHERE ((NOT (CAST(CAST(rt0.c4 AS INTEGER) AS TEXT)))) GROUP BY rt0.c4, rt0.c0, rt0.c2, rt0.c1 UNION SELECT rt0.c4, rt0.c0, rt0.c2, rt0.c1 FROM vt1 CROSS JOIN rt0 ON ((rt0.c1) ISNULL) WHERE (((CAST(CAST(rt0.c4 AS INTEGER) AS TEXT)) ISNULL)) GROUP BY rt0.c4, rt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c4, rt0.c0, rt0.c2, rt0.c1 FROM vt1 CROSS JOIN rt0 ON ((rt0.c1) ISNULL) GROUP BY rt0.c4, rt0.c0, rt0.c2, rt0.c1;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING TOTAL(MAX(NULL)) COLLATE RTRIM UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (TOTAL(MAX(NULL)) COLLATE RTRIM)) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((TOTAL(MAX(NULL)) COLLATE RTRIM) ISNULL);
SELECT rt0.c0 FROM rt0, vt1;
SELECT rt0.c0 FROM rt0, vt1 WHERE (((((rt0.c2)IS(rt0.c1))) IS FALSE)) UNION ALL SELECT ALL rt0.c0 FROM rt0, vt1 WHERE ((NOT (((((rt0.c2)IS(rt0.c1))) IS FALSE)))) UNION ALL SELECT ALL rt0.c0 FROM rt0, vt1 WHERE (((((((rt0.c2)IS(rt0.c1))) IS FALSE)) ISNULL));
SELECT rt0.c0 FROM rt0, vt1;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (((CAST(vt1.c0 AS BLOB))IS((+ (vt1.c0))))) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (((CAST(vt1.c0 AS BLOB))IS((+ (vt1.c0))))))) UNION SELECT DISTINCT * FROM vt1 WHERE (((((CAST(vt1.c0 AS BLOB))IS((+ (vt1.c0))))) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE ((- ('550916254'))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT ((- ('550916254'))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((((- ('550916254'))) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM rt0, vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM rt0, vt1 GROUP BY vt1.c0 HAVING AVG(COUNT(*)) UNION ALL SELECT ALL vt1.c0 FROM rt0, vt1 GROUP BY vt1.c0 HAVING (NOT (AVG(COUNT(*)))) UNION ALL SELECT ALL vt1.c0 FROM rt0, vt1 GROUP BY vt1.c0 HAVING ((AVG(COUNT(*))) ISNULL);
SELECT vt1.c0 FROM vt1;
SELECT vt1.c0 FROM vt1 WHERE (CAST(vt1.c0 AS TEXT)) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (CAST(vt1.c0 AS TEXT)))) UNION ALL SELECT vt1.c0 FROM vt1 WHERE (((CAST(vt1.c0 AS TEXT)) ISNULL));
SELECT vt1.c0 FROM vt1;
SELECT DISTINCT * FROM vt1, rt0;
SELECT DISTINCT * FROM vt1, rt0 WHERE ((((((((rt0.c0))=((vt1.c0))))OR((rt0.c1 IN ()))))OR(((rt0.c4)<=(rt0.c0))))) UNION SELECT DISTINCT * FROM vt1, rt0 WHERE ((NOT ((((((((rt0.c0))==((vt1.c0))))OR((rt0.c1 IN ()))))OR(((rt0.c4)<=(rt0.c0))))))) UNION SELECT DISTINCT * FROM vt1, rt0 WHERE ((((((((((rt0.c0))=((vt1.c0))))OR((rt0.c1 IN ()))))OR(((rt0.c4)<=(rt0.c0))))) ISNULL));
SELECT DISTINCT * FROM vt1, rt0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE ((((vt1.c0)) BETWEEN (((NOT (vt1.c0)))) AND ((((vt1.c0)>(vt1.c0)))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT ((((vt1.c0)) BETWEEN (((NOT (vt1.c0)))) AND ((((vt1.c0)>(vt1.c0)))))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((((((vt1.c0)) BETWEEN (((NOT (vt1.c0)))) AND ((((vt1.c0)>(vt1.c0)))))) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT rt0.c3, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c3, rt0.c2, rt0.c1;
SELECT ALL rt0.c3, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c3, rt0.c2, rt0.c1 HAVING TOTAL(MAX(rt0.c1)) UNION ALL SELECT rt0.c3, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c3, rt0.c2, rt0.c1 HAVING (NOT (TOTAL(MAX(rt0.c1)))) UNION ALL SELECT rt0.c3, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c3, rt0.c2, rt0.c1 HAVING ((TOTAL(MAX(rt0.c1))) ISNULL);
SELECT * FROM rt0 RIGHT OUTER JOIN vt1 ON ((((rt0.c0) NOTNULL))IS(NULL));
SELECT ALL * FROM rt0 RIGHT OUTER JOIN vt1 ON ((((rt0.c0) NOTNULL))IS(NULL)) WHERE (((((((0.8404679463115742)IS(rt0.c3)))AND((((rt0.c3))>=((rt0.c2))))))OR(LOWER(DISTINCT rt0.c4)))) UNION ALL SELECT ALL * FROM rt0 RIGHT OUTER JOIN vt1 ON ((((rt0.c0) NOTNULL))IS(NULL)) WHERE ((NOT (((((((0.8404679463115742)IS(rt0.c3)))AND((((rt0.c3))>=((rt0.c2))))))OR(LOWER(DISTINCT rt0.c4)))))) UNION ALL SELECT ALL * FROM rt0 RIGHT OUTER JOIN vt1 ON ((((rt0.c0) NOTNULL))IS(NULL)) WHERE (((((((((0.8404679463115742)IS(rt0.c3)))AND((((rt0.c3))>=((rt0.c2))))))OR(LOWER(DISTINCT rt0.c4)))) ISNULL));
SELECT * FROM rt0 RIGHT OUTER JOIN vt1 ON ((((rt0.c0) NOTNULL))IS(NULL));
SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0 FROM rt0 FULL OUTER JOIN vt1 ON CAST(CAST(rt0.c4 AS TEXT) AS REAL);
SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0 FROM rt0 FULL OUTER JOIN vt1 ON CAST(CAST(rt0.c4 AS TEXT) AS REAL) WHERE (((rt0.c3) IS FALSE) COLLATE BINARY) UNION SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0 FROM rt0 FULL OUTER JOIN vt1 ON CAST(CAST(rt0.c4 AS TEXT) AS REAL) WHERE ((NOT (((rt0.c3) IS FALSE) COLLATE BINARY))) UNION SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0 FROM rt0 FULL OUTER JOIN vt1 ON CAST(CAST(rt0.c4 AS TEXT) AS REAL) WHERE (((((rt0.c3) IS FALSE) COLLATE BINARY) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0 FROM rt0 FULL OUTER JOIN vt1 ON CAST(CAST(rt0.c4 AS TEXT) AS REAL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE ((((((((((vt1.c0)AND(vt1.c0)))OR(NULL)))OR(vt1.c0)))OR('')) IN ())) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT ((((((((((vt1.c0)AND(vt1.c0)))OR(NULL)))OR(vt1.c0)))OR('')) IN ())))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((((((((((((vt1.c0)AND(vt1.c0)))OR(NULL)))OR(vt1.c0)))OR('')) IN ())) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((COUNT(vt1.c0) COLLATE NOCASE) NOTNULL) UNION ALL SELECT ALL vt1.c0 FROM vt1 NOT INDEXED GROUP BY vt1.c0 HAVING (NOT (((COUNT(vt1.c0) COLLATE NOCASE) NOTNULL))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((((COUNT(vt1.c0) COLLATE NOCASE) NOTNULL)) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((COUNT(vt1.c0) COLLATE NOCASE) NOTNULL) UNION ALL SELECT ALL vt1.c0 FROM vt1 NOT INDEXED GROUP BY vt1.c0 HAVING (NOT (((COUNT(vt1.c0) COLLATE NOCASE) NOTNULL))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((((COUNT(vt1.c0) COLLATE NOCASE) NOTNULL)) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL rt0.c2, rt0.c3 FROM vt1, rt0;
SELECT rt0.c2, rt0.c3 FROM vt1, rt0 WHERE (CAST(0.9339398440718425 AS NUMERIC)) UNION ALL SELECT ALL rt0.c2, rt0.c3 FROM vt1, rt0 WHERE ((NOT (CAST(0.9339398440718425 AS NUMERIC)))) UNION ALL SELECT ALL rt0.c2, rt0.c3 FROM vt1, rt0 WHERE (((CAST(0.9339398440718425 AS NUMERIC)) ISNULL));
SELECT ALL rt0.c2, rt0.c3 FROM vt1, rt0;
SELECT DISTINCT rt0.c4, vt1.c0, rt0.c2, rt0.c3, rt0.c1 FROM vt1, rt0;
SELECT DISTINCT rt0.c4, vt1.c0, rt0.c2, rt0.c3, rt0.c1 FROM vt1, rt0 WHERE (((rt0.c2)>=(((rt0.c1)==(rt0.c3))))) UNION SELECT DISTINCT rt0.c4, vt1.c0, rt0.c2, rt0.c3, rt0.c1 FROM vt1, rt0 WHERE ((NOT (((rt0.c2)>=(((rt0.c1)=(rt0.c3))))))) UNION SELECT DISTINCT rt0.c4, vt1.c0, rt0.c2, rt0.c3, rt0.c1 FROM vt1, rt0 WHERE (((((rt0.c2)>=(((rt0.c1)==(rt0.c3))))) ISNULL));
SELECT DISTINCT rt0.c4, vt1.c0, rt0.c2, rt0.c3, rt0.c1 FROM vt1, rt0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE ((((vt1.c0) ISNULL) IN (((vt1.c0) NOTNULL), 0.169247587820883 COLLATE NOCASE))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT ((((vt1.c0) ISNULL) IN (((vt1.c0) NOTNULL), 0.169247587820883 COLLATE NOCASE))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((((((vt1.c0) ISNULL) IN (((vt1.c0) NOTNULL), 0.169247587820883 COLLATE NOCASE))) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL rt0.c1, rt0.c4, rt0.c2, rt0.c0 FROM vt1 RIGHT OUTER JOIN rt0 ON HEX(((rt0.c1)LIKE(rt0.c2))) GROUP BY rt0.c1, rt0.c4, rt0.c2, rt0.c0;
SELECT rt0.c1, rt0.c4, rt0.c2, rt0.c0 FROM vt1 RIGHT OUTER JOIN rt0 ON HEX(((rt0.c1)LIKE(rt0.c2))) GROUP BY rt0.c1, rt0.c4, rt0.c2, rt0.c0 HAVING LOWER(DISTINCT ((rt0.c2)-(SUM(rt0.c0)))) UNION ALL SELECT rt0.c1, rt0.c4, rt0.c2, rt0.c0 FROM vt1 RIGHT OUTER JOIN rt0 ON HEX(((rt0.c1)LIKE(rt0.c2))) GROUP BY rt0.c1, rt0.c4, rt0.c2, rt0.c0 HAVING (NOT (LOWER(DISTINCT ((rt0.c2)-(SUM(rt0.c0)))))) UNION ALL SELECT rt0.c1, rt0.c4, rt0.c2, rt0.c0 FROM vt1 RIGHT OUTER JOIN rt0 ON HEX(((rt0.c1)LIKE(rt0.c2))) GROUP BY rt0.c1, rt0.c4, rt0.c2, rt0.c0 HAVING ((LOWER(DISTINCT ((rt0.c2)-(SUM(rt0.c0))))) ISNULL);
SELECT ALL rt0.c1, rt0.c4, rt0.c2, rt0.c0 FROM vt1 RIGHT OUTER JOIN rt0 ON HEX(((rt0.c1)LIKE(rt0.c2))) GROUP BY rt0.c1, rt0.c4, rt0.c2, rt0.c0;
SELECT rt0.c1, rt0.c4, rt0.c2, rt0.c0 FROM vt1 RIGHT OUTER JOIN rt0 ON HEX(((rt0.c1)LIKE(rt0.c2))) GROUP BY rt0.c1, rt0.c4, rt0.c2, rt0.c0 HAVING LOWER(DISTINCT ((rt0.c2)-(SUM(rt0.c0)))) UNION ALL SELECT rt0.c1, rt0.c4, rt0.c2, rt0.c0 FROM vt1 RIGHT OUTER JOIN rt0 ON HEX(((rt0.c1)LIKE(rt0.c2))) GROUP BY rt0.c1, rt0.c4, rt0.c2, rt0.c0 HAVING (NOT (LOWER(DISTINCT ((rt0.c2)-(SUM(rt0.c0)))))) UNION ALL SELECT rt0.c1, rt0.c4, rt0.c2, rt0.c0 FROM vt1 RIGHT OUTER JOIN rt0 ON HEX(((rt0.c1)LIKE(rt0.c2))) GROUP BY rt0.c1, rt0.c4, rt0.c2, rt0.c0 HAVING ((LOWER(DISTINCT ((rt0.c2)-(SUM(rt0.c0))))) ISNULL);
SELECT ALL rt0.c1, rt0.c4, rt0.c2, rt0.c0 FROM vt1 RIGHT OUTER JOIN rt0 ON HEX(((rt0.c1)LIKE(rt0.c2))) GROUP BY rt0.c1, rt0.c4, rt0.c2, rt0.c0;
SELECT * FROM rt0, vt1;
SELECT ALL * FROM rt0, vt1 WHERE ((((((rt0.c2)AND(NULL)))AND(rt0.c1)) IN ())) UNION ALL SELECT ALL * FROM rt0, vt1 WHERE ((NOT ((((((rt0.c2)AND(NULL)))AND(rt0.c1)) IN ())))) UNION ALL SELECT ALL * FROM rt0, vt1 NOT INDEXED WHERE ((((((((rt0.c2)AND(NULL)))AND(rt0.c1)) IN ())) ISNULL));
SELECT * FROM rt0, vt1;
SELECT DISTINCT rt0.c2, vt1.c0, rt0.c3, rt0.c4, rt0.c1 FROM rt0, vt1;
SELECT DISTINCT rt0.c2, vt1.c0, rt0.c3, rt0.c4, rt0.c1 FROM rt0, vt1 WHERE (CASE WHEN (((rt0.c3, 0.8310250049167177, rt0.c4))!=((vt1.c0, rt0.c0, rt0.c2))) THEN ((rt0.c4) NOTNULL) END) UNION SELECT DISTINCT rt0.c2, vt1.c0, rt0.c3, rt0.c4, rt0.c1 FROM rt0, vt1 WHERE ((NOT (CASE WHEN (((rt0.c3, 0.8310250049167177, rt0.c4))<>((vt1.c0, rt0.c0, rt0.c2))) THEN ((rt0.c4) NOTNULL) END))) UNION SELECT DISTINCT rt0.c2, vt1.c0, rt0.c3, rt0.c4, rt0.c1 FROM rt0, vt1 WHERE (((CASE WHEN (((rt0.c3, 0.8310250049167177, rt0.c4))<>((vt1.c0, rt0.c0, rt0.c2))) THEN ((rt0.c4) NOTNULL) END) ISNULL));
SELECT DISTINCT rt0.c2, vt1.c0, rt0.c3, rt0.c4, rt0.c1 FROM rt0, vt1;
SELECT rt0.c0, vt1.c0, rt0.c2, rt0.c4, rt0.c3, rt0.c1 FROM vt1 FULL OUTER JOIN rt0 ON (rt0.c4 COLLATE BINARY IN ()) GROUP BY rt0.c0, vt1.c0, rt0.c2, rt0.c4, rt0.c3, rt0.c1;
SELECT ALL rt0.c0, vt1.c0, rt0.c2, rt0.c4, rt0.c3, rt0.c1 FROM vt1 FULL OUTER JOIN rt0 ON (rt0.c4 COLLATE BINARY IN ()) WHERE ((((((((rt0.c0)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c0))))OR(((rt0.c0)||(rt0.c3)))))OR((rt0.c3 IN ())))) GROUP BY rt0.c0, vt1.c0, rt0.c2, rt0.c4, rt0.c3, rt0.c1 UNION SELECT ALL rt0.c0, vt1.c0, rt0.c2, rt0.c4, rt0.c3, rt0.c1 FROM vt1 FULL OUTER JOIN rt0 ON (rt0.c4 COLLATE BINARY IN ()) WHERE ((NOT ((((((((rt0.c0)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c0))))OR(((rt0.c0)||(rt0.c3)))))OR((rt0.c3 IN ())))))) GROUP BY rt0.c0, vt1.c0, rt0.c2, rt0.c4, rt0.c3, rt0.c1 UNION SELECT rt0.c0, vt1.c0, rt0.c2, rt0.c4, rt0.c3, rt0.c1 FROM vt1 FULL OUTER JOIN rt0 ON (rt0.c4 COLLATE BINARY IN ()) WHERE ((((((((((rt0.c0)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c0))))OR(((rt0.c0)||(rt0.c3)))))OR((rt0.c3 IN ())))) ISNULL)) GROUP BY rt0.c0, vt1.c0, rt0.c2, rt0.c4, rt0.c3, rt0.c1;
SELECT rt0.c0, vt1.c0, rt0.c2, rt0.c4, rt0.c3, rt0.c1 FROM vt1 FULL OUTER JOIN rt0 ON (rt0.c4 COLLATE BINARY IN ()) GROUP BY rt0.c0, vt1.c0, rt0.c2, rt0.c4, rt0.c3, rt0.c1;
SELECT ALL rt0.c0, rt0.c1, rt0.c4, rt0.c3, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c4, rt0.c3, rt0.c2;
SELECT rt0.c0, rt0.c1, rt0.c4, rt0.c3, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c4, rt0.c3, rt0.c2 HAVING MAX(MIN(rt0.c0)) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c4, rt0.c3, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c4, rt0.c3, rt0.c2 HAVING (NOT (MAX(MIN(rt0.c0)))) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c4, rt0.c3, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c4, rt0.c3, rt0.c2 HAVING ((MAX(MIN(rt0.c0))) ISNULL);
SELECT vt1.c0 FROM vt1;
SELECT ALL vt1.c0 FROM vt1 WHERE (CAST(((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)) AS INTEGER)) UNION ALL SELECT vt1.c0 FROM vt1 WHERE ((NOT (CAST(((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)) AS INTEGER)))) UNION ALL SELECT vt1.c0 FROM vt1 WHERE (((CAST(((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)) AS INTEGER)) ISNULL));
SELECT vt1.c0 FROM vt1;
SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2, rt0.c4 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2, rt0.c4 FROM rt0 WHERE (((((((((rt0.c3)OR(rt0.c4)))AND(rt0.c1)))AND(CAST(rt0.c0 AS REAL))))OR(SQLITE_SOURCE_ID()))) UNION SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2, rt0.c4 FROM rt0 WHERE ((NOT (((((((((rt0.c3)OR(rt0.c4)))AND(rt0.c1)))AND(CAST(rt0.c0 AS REAL))))OR(SQLITE_SOURCE_ID()))))) UNION SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2, rt0.c4 FROM rt0 WHERE (((((((((((rt0.c3)OR(rt0.c4)))AND(rt0.c1)))AND(CAST(rt0.c0 AS REAL))))OR(SQLITE_SOURCE_ID()))) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2, rt0.c4 FROM rt0;
SELECT ALL rt0.c0, rt0.c2 FROM vt1, rt0 GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c2 FROM vt1, rt0 WHERE (rt0.c1) GROUP BY rt0.c0, rt0.c2 UNION SELECT rt0.c0, rt0.c2 FROM vt1, rt0 WHERE ((NOT (rt0.c1))) GROUP BY rt0.c0, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c2 FROM vt1, rt0 WHERE (((rt0.c1) ISNULL)) GROUP BY rt0.c0, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM vt1, rt0 GROUP BY rt0.c0, rt0.c2;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING COUNT(((COUNT(AVG(COUNT(*)))) NOTNULL)) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (COUNT(((COUNT(AVG(COUNT(*)))) NOTNULL)))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((COUNT(((COUNT(AVG(COUNT(*)))) NOTNULL))) ISNULL);
SELECT ALL MIN(vt1.c0) FROM vt1, rt0 ORDER BY 0.406782111028118;
SELECT ALL rt0.c2, rt0.c1, vt1.c0, rt0.c4, rt0.c0, rt0.c3 FROM vt1, rt0;
SELECT rt0.c2, rt0.c1, vt1.c0, rt0.c4, rt0.c0, rt0.c3 FROM vt1, rt0 WHERE ('-548824454') UNION ALL SELECT ALL rt0.c2, rt0.c1, vt1.c0, rt0.c4, rt0.c0, rt0.c3 FROM vt1, rt0 WHERE ((NOT ('-548824454'))) UNION ALL SELECT ALL rt0.c2, rt0.c1, vt1.c0, rt0.c4, rt0.c0, rt0.c3 FROM vt1, rt0 WHERE ((('-548824454') ISNULL));
SELECT ALL rt0.c2, rt0.c1, vt1.c0, rt0.c4, rt0.c0, rt0.c3 FROM vt1, rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((rt0.c3)LIKE(IFNULL(DISTINCT rt0.c3, rt0.c4)))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((rt0.c3)LIKE(IFNULL(DISTINCT rt0.c3, rt0.c4)))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((rt0.c3)LIKE(IFNULL(DISTINCT rt0.c3, rt0.c4)))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT vt1.c0, rt0.c2 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c2;
SELECT vt1.c0, rt0.c2 FROM vt1, rt0 WHERE ('' COLLATE BINARY) GROUP BY vt1.c0, rt0.c2 UNION SELECT ALL vt1.c0, rt0.c2 FROM vt1, rt0 WHERE ((NOT ('' COLLATE BINARY))) GROUP BY vt1.c0, rt0.c2 UNION SELECT ALL vt1.c0, rt0.c2 FROM vt1, rt0 WHERE ((('' COLLATE BINARY) ISNULL)) GROUP BY vt1.c0, rt0.c2;
SELECT vt1.c0, rt0.c2 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING MAX((+ (rt0.c1))) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING (NOT (MAX((+ (rt0.c1))))) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING ((MAX((+ (rt0.c1)))) ISNULL);
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING MAX((+ (rt0.c1))) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING (NOT (MAX((+ (rt0.c1))))) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2 HAVING ((MAX((+ (rt0.c1)))) ISNULL);
SELECT ALL rt0.c1, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2;
SELECT ALL * FROM vt1, rt0;
SELECT ALL * FROM vt1, rt0 WHERE ((((+ (rt0.c2))) NOT NULL)) UNION ALL SELECT ALL * FROM vt1, rt0 WHERE ((NOT ((((+ (rt0.c2))) NOT NULL)))) UNION ALL SELECT * FROM vt1, rt0 WHERE ((((((+ (rt0.c2))) NOT NULL)) ISNULL));
SELECT ALL * FROM vt1, rt0;
SELECT DISTINCT * FROM rt0 LEFT OUTER JOIN vt1 ON CAST(((rt0.c1) BETWEEN (rt0.c4) AND (rt0.c0)) AS INTEGER);
SELECT DISTINCT * FROM rt0 LEFT OUTER JOIN vt1 ON CAST(((rt0.c1) BETWEEN (rt0.c4) AND (rt0.c0)) AS INTEGER) WHERE ((((((((((('1624846676')&(rt0.c0)))OR((rt0.c3 IN (rt0.c4)))))OR(NULL)))OR((- (vt1.c0)))))OR((NOT (rt0.c1))))) UNION SELECT DISTINCT * FROM rt0 LEFT OUTER JOIN vt1 ON CAST(((rt0.c1) BETWEEN (rt0.c4) AND (rt0.c0)) AS INTEGER) WHERE ((NOT ((((((((((('1624846676')&(rt0.c0)))OR((rt0.c3 IN (rt0.c4)))))OR(NULL)))OR((- (vt1.c0)))))OR((NOT (rt0.c1))))))) UNION SELECT DISTINCT * FROM rt0 LEFT OUTER JOIN vt1 ON CAST(((rt0.c1) BETWEEN (rt0.c4) AND (rt0.c0)) AS INTEGER) WHERE ((((((((((((('1624846676')&(rt0.c0)))OR((rt0.c3 IN (rt0.c4)))))OR(NULL)))OR((- (vt1.c0)))))OR((NOT (rt0.c1))))) ISNULL));
SELECT DISTINCT * FROM rt0 LEFT OUTER JOIN vt1 ON CAST(((rt0.c1) BETWEEN (rt0.c4) AND (rt0.c0)) AS INTEGER);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE (CASE WHEN ((vt1.c0)>=(vt1.c0)) THEN json_remove('', vt1.c0, vt1.c0, vt1.c0) END) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (CASE WHEN ((vt1.c0)>=(vt1.c0)) THEN json_remove('', vt1.c0, vt1.c0, vt1.c0) END))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE (((CASE WHEN ((vt1.c0)>=(vt1.c0)) THEN json_remove('', vt1.c0, vt1.c0, vt1.c0) END) ISNULL)) GROUP BY vt1.c0;
SELECT ALL rt0.c4, rt0.c1, rt0.c3 FROM rt0 GROUP BY rt0.c4, rt0.c1, rt0.c3;
SELECT rt0.c4, rt0.c1, rt0.c3 FROM rt0 GROUP BY rt0.c4, rt0.c1, rt0.c3 HAVING AVG((rt0.c1 IN ())) UNION ALL SELECT rt0.c4, rt0.c1, rt0.c3 FROM rt0 GROUP BY rt0.c4, rt0.c1, rt0.c3 HAVING (NOT (AVG((rt0.c1 IN ())))) UNION ALL SELECT rt0.c4, rt0.c1, rt0.c3 FROM rt0 GROUP BY rt0.c4, rt0.c1, rt0.c3 HAVING ((AVG((rt0.c1 IN ()))) ISNULL);
SELECT ALL rt0.c4, rt0.c1, rt0.c3 FROM rt0 GROUP BY rt0.c4, rt0.c1, rt0.c3;
SELECT rt0.c4, rt0.c1, rt0.c3 FROM rt0 GROUP BY rt0.c4, rt0.c1, rt0.c3 HAVING AVG((rt0.c1 IN ())) UNION ALL SELECT rt0.c4, rt0.c1, rt0.c3 FROM rt0 GROUP BY rt0.c4, rt0.c1, rt0.c3 HAVING (NOT (AVG((rt0.c1 IN ())))) UNION ALL SELECT rt0.c4, rt0.c1, rt0.c3 FROM rt0 GROUP BY rt0.c4, rt0.c1, rt0.c3 HAVING ((AVG((rt0.c1 IN ()))) ISNULL);
SELECT ALL rt0.c4, rt0.c1, rt0.c3 FROM rt0 GROUP BY rt0.c4, rt0.c1, rt0.c3;
SELECT rt0.c0, rt0.c4, rt0.c3, vt1.c0 FROM vt1, rt0;
SELECT rt0.c0, rt0.c4, rt0.c3, vt1.c0 FROM vt1, rt0 WHERE ((((NOT (rt0.c1)))<<(((rt0.c4)*(rt0.c0))))) UNION ALL SELECT ALL rt0.c0, rt0.c4, rt0.c3, vt1.c0 FROM vt1, rt0 WHERE ((NOT ((((NOT (rt0.c1)))<<(((rt0.c4)*(rt0.c0))))))) UNION ALL SELECT rt0.c0, rt0.c4, rt0.c3, vt1.c0 FROM vt1, rt0 WHERE ((((((NOT (rt0.c1)))<<(((rt0.c4)*(rt0.c0))))) ISNULL));
SELECT rt0.c0, rt0.c4, rt0.c3, vt1.c0 FROM vt1, rt0;
SELECT DISTINCT * FROM rt0, vt1;
SELECT DISTINCT * FROM rt0, vt1 WHERE (CASE rt0.c2 COLLATE BINARY  WHEN (((rt0.c4)) BETWEEN ((rt0.c4)) AND (('0.5658185663522308'))) THEN (rt0.c2 IN (x'')) END) UNION SELECT DISTINCT * FROM rt0, vt1 WHERE ((NOT (CASE rt0.c2 COLLATE BINARY  WHEN (((rt0.c4)) BETWEEN ((rt0.c4)) AND (('0.5658185663522308'))) THEN (rt0.c2 IN (x'')) END))) UNION SELECT DISTINCT * FROM rt0, vt1 WHERE (((CASE rt0.c2 COLLATE BINARY  WHEN (((rt0.c4)) BETWEEN ((rt0.c4)) AND (('0.5658185663522308'))) THEN (rt0.c2 IN (x'')) END) ISNULL));
SELECT DISTINCT * FROM rt0, vt1;
SELECT rt0.c4, rt0.c0 FROM rt0 GROUP BY rt0.c4, rt0.c0;
SELECT rt0.c4, rt0.c0 FROM rt0 WHERE (LIKE(CASE rt0.c2  WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c4 THEN 0.5710024367649779 WHEN rt0.c3 THEN rt0.c4 ELSE rt0.c4 END, ((rt0.c3)>(0.2661584014002435)), '*')) GROUP BY rt0.c4, rt0.c0 UNION SELECT rt0.c4, rt0.c0 FROM rt0 WHERE ((NOT (LIKE(CASE rt0.c2  WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c4 THEN 0.5710024367649779 WHEN rt0.c3 THEN rt0.c4 ELSE rt0.c4 END, ((rt0.c3)>(0.2661584014002435)), '*')))) GROUP BY rt0.c4, rt0.c0 UNION SELECT rt0.c4, rt0.c0 FROM rt0 WHERE (((LIKE(CASE rt0.c2  WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c4 THEN 0.5710024367649779 WHEN rt0.c3 THEN rt0.c4 ELSE rt0.c4 END, ((rt0.c3)>(0.2661584014002435)), '*')) ISNULL)) GROUP BY rt0.c4, rt0.c0;
SELECT rt0.c4, rt0.c0 FROM rt0 GROUP BY rt0.c4, rt0.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING MAX(SUM(vt1.c0)) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (MAX(SUM(vt1.c0)))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((MAX(SUM(vt1.c0))) ISNULL);
SELECT * FROM vt1 FULL OUTER JOIN rt0 ON ((((rt0.c1)AND(rt0.c3)))>=(LIKELIHOOD(DISTINCT rt0.c2, 0.7064496926507065)));
SELECT * FROM vt1 FULL OUTER JOIN rt0 ON ((((rt0.c1)AND(rt0.c3)))>=(LIKELIHOOD(DISTINCT rt0.c2, 0.7064496926507065))) WHERE (((((rt0.c3) NOT NULL)) BETWEEN (((rt0.c4)/(rt0.c2))) AND (0Xffffffffd3c81538))) UNION ALL SELECT * FROM vt1 FULL OUTER JOIN rt0 ON ((((rt0.c1)AND(rt0.c3)))>=(LIKELIHOOD(DISTINCT rt0.c2, 0.7064496926507065))) WHERE ((NOT (((((rt0.c3) NOT NULL)) BETWEEN (((rt0.c4)/(rt0.c2))) AND (0xffffffffd3c81538))))) UNION ALL SELECT * FROM vt1 FULL OUTER JOIN rt0 ON ((((rt0.c1)AND(rt0.c3)))>=(LIKELIHOOD(DISTINCT rt0.c2, 0.7064496926507065))) WHERE (((((((rt0.c3) NOT NULL)) BETWEEN (((rt0.c4)/(rt0.c2))) AND (0xffffffffd3c81538))) ISNULL));
SELECT * FROM vt1 FULL OUTER JOIN rt0 ON ((((rt0.c1)AND(rt0.c3)))>=(LIKELIHOOD(DISTINCT rt0.c2, 0.7064496926507065)));
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (((((((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))AND(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)))OR((((vt1.c0))<((vt1.c0))))))AND(vt1.c0)))AND(((vt1.c0)>(vt1.c0))))) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (((((((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))AND(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)))OR((((vt1.c0))<((vt1.c0))))))AND(vt1.c0)))AND(((vt1.c0)>(vt1.c0))))))) UNION SELECT DISTINCT * FROM vt1 WHERE (((((((((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))AND(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)))OR((((vt1.c0))<((vt1.c0))))))AND(vt1.c0)))AND(((vt1.c0)>(vt1.c0))))) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT ALL rt0.c1, rt0.c2, rt0.c3, rt0.c0 FROM rt0 LEFT OUTER JOIN vt1 ON x'' GROUP BY rt0.c1, rt0.c2, rt0.c3, rt0.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c3, rt0.c0 FROM rt0 LEFT OUTER JOIN vt1 ON x'' WHERE ((+ (((rt0.c0) BETWEEN (rt0.c2) AND (vt1.c0))))) GROUP BY rt0.c1, rt0.c2, rt0.c3, rt0.c0 UNION SELECT rt0.c1, rt0.c2, rt0.c3, rt0.c0 FROM rt0 LEFT OUTER JOIN vt1 ON x'' WHERE ((NOT ((+ (((rt0.c0) BETWEEN (rt0.c2) AND (vt1.c0))))))) GROUP BY rt0.c1, rt0.c2, rt0.c3, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c2, rt0.c3, rt0.c0 FROM rt0 LEFT OUTER JOIN vt1 ON x'' WHERE ((((+ (((rt0.c0) BETWEEN (rt0.c2) AND (vt1.c0))))) ISNULL)) GROUP BY rt0.c1, rt0.c2, rt0.c3, rt0.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c3, rt0.c0 FROM rt0 LEFT OUTER JOIN vt1 ON x'' GROUP BY rt0.c1, rt0.c2, rt0.c3, rt0.c0;
SELECT rt0.c4, rt0.c2, vt1.c0, rt0.c3, rt0.c1 FROM vt1 NOT INDEXED, rt0 GROUP BY rt0.c4, rt0.c2, vt1.c0, rt0.c3, rt0.c1;
SELECT rt0.c4, rt0.c2, vt1.c0, rt0.c3, rt0.c1 FROM vt1, rt0 GROUP BY rt0.c4, rt0.c2, vt1.c0, rt0.c3, rt0.c1 HAVING ((MAX(rt0.c2)) NOT BETWEEN (TOTAL(MIN(COUNT(AVG(rt0.c4)))) COLLATE BINARY) AND (((MAX(rt0.c1)) BETWEEN (rt0.c1) AND (rt0.c4)))) UNION ALL SELECT rt0.c4, rt0.c2, vt1.c0, rt0.c3, rt0.c1 FROM vt1, rt0 GROUP BY rt0.c4, rt0.c2, vt1.c0, rt0.c3, rt0.c1 HAVING (NOT (((MAX(rt0.c2)) NOT BETWEEN (TOTAL(MIN(COUNT(AVG(rt0.c4)))) COLLATE BINARY) AND (((MAX(rt0.c1)) BETWEEN (rt0.c1) AND (rt0.c4)))))) UNION ALL SELECT ALL rt0.c4, rt0.c2, vt1.c0, rt0.c3, rt0.c1 FROM vt1, rt0 GROUP BY rt0.c4, rt0.c2, vt1.c0, rt0.c3, rt0.c1 HAVING ((((MAX(rt0.c2)) NOT BETWEEN (TOTAL(MIN(COUNT(AVG(rt0.c4)))) COLLATE BINARY) AND (((MAX(rt0.c1)) BETWEEN (rt0.c1) AND (rt0.c4))))) ISNULL);
SELECT ALL TOTAL(COALESCE((- (rt0.c4)), ((((rt0.c1)OR(rt0.c0)))OR(rt0.c2)), ((rt0.c3) IS FALSE), LOWER('Xb)R'))) FROM rt0, vt1 NOT INDEXED ORDER BY x'' DESC  NULLS LAST, vt1.c0;
SELECT rt0.c0 FROM rt0 LEFT OUTER JOIN vt1 ON rt0.c0;
SELECT rt0.c0 FROM rt0 LEFT OUTER JOIN vt1 ON rt0.c0 WHERE (rt0.c4) UNION ALL SELECT rt0.c0 FROM rt0 LEFT OUTER JOIN vt1 ON rt0.c0 WHERE ((NOT (rt0.c4))) UNION ALL SELECT rt0.c0 FROM rt0 LEFT OUTER JOIN vt1 ON rt0.c0 WHERE (((rt0.c4) ISNULL));
SELECT rt0.c0 FROM rt0 LEFT OUTER JOIN vt1 ON rt0.c0;
SELECT DISTINCT * FROM rt0 FULL OUTER JOIN vt1 ON ((((((rt0.c0)AND(vt1.c0)))OR(rt0.c1))) BETWEEN (((rt0.c0)OR(rt0.c4))) AND (CASE WHEN rt0.c1 THEN vt1.c0 END));
SELECT DISTINCT * FROM rt0 FULL OUTER JOIN vt1 ON ((((((rt0.c0)AND(vt1.c0)))OR(rt0.c1))) BETWEEN (((rt0.c0)OR(rt0.c4))) AND (CASE WHEN rt0.c1 THEN vt1.c0 END)) WHERE (((rt0.c0 COLLATE BINARY)IS(((rt0.c4)<>(rt0.c4))))) UNION SELECT DISTINCT * FROM rt0 FULL OUTER JOIN vt1 ON ((((((rt0.c0)AND(vt1.c0)))OR(rt0.c1))) BETWEEN (((rt0.c0)OR(rt0.c4))) AND (CASE WHEN rt0.c1 THEN vt1.c0 END)) WHERE ((NOT (((rt0.c0 COLLATE BINARY)IS(((rt0.c4)<>(rt0.c4))))))) UNION SELECT DISTINCT * FROM rt0 FULL OUTER JOIN vt1 ON ((((((rt0.c0)AND(vt1.c0)))OR(rt0.c1))) BETWEEN (((rt0.c0)OR(rt0.c4))) AND (CASE WHEN rt0.c1 THEN vt1.c0 END)) WHERE (((((rt0.c0 COLLATE BINARY)IS(((rt0.c4)<>(rt0.c4))))) ISNULL));
SELECT DISTINCT * FROM rt0 FULL OUTER JOIN vt1 ON ((((((rt0.c0)AND(vt1.c0)))OR(rt0.c1))) BETWEEN (((rt0.c0)OR(rt0.c4))) AND (CASE WHEN rt0.c1 THEN vt1.c0 END));
SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT rt0.c1, rt0.c0 FROM rt0 WHERE (((((rt0.c3) BETWEEN (rt0.c0) AND (rt0.c0)))|(((rt0.c0)>>(rt0.c3))))) GROUP BY rt0.c1, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (((((rt0.c3) BETWEEN (rt0.c0) AND (rt0.c0)))|(((rt0.c0)>>(rt0.c3))))))) GROUP BY rt0.c1, rt0.c0 UNION SELECT rt0.c1, rt0.c0 FROM rt0 WHERE (((((((rt0.c3) BETWEEN (rt0.c0) AND (rt0.c0)))|(((rt0.c0)>>(rt0.c3))))) ISNULL)) GROUP BY rt0.c1, rt0.c0;
SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING SUM(json_valid(MAX(vt1.c0))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (SUM(json_valid(MAX(vt1.c0))))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((SUM(json_valid(MAX(vt1.c0)))) ISNULL);
SELECT * FROM rt0, vt1;
SELECT ALL * FROM rt0, vt1 WHERE (NULL) UNION ALL SELECT ALL * FROM rt0, vt1 WHERE ((NOT (NULL))) UNION ALL SELECT ALL * FROM rt0, vt1 WHERE (((NULL) ISNULL));
SELECT * FROM rt0, vt1;
SELECT DISTINCT rt0.c4 FROM rt0 CROSS JOIN vt1 ON ((((vt1.c0)OR(rt0.c1)))OR(rt0.c2)) COLLATE BINARY;
SELECT DISTINCT rt0.c4 FROM rt0 CROSS JOIN vt1 ON ((((vt1.c0)OR(rt0.c1)))OR(rt0.c2)) COLLATE BINARY WHERE ((((((('-273446798')OR(-1694917767)))AND(0X69d7b9db))) IS TRUE)) UNION SELECT DISTINCT rt0.c4 FROM rt0 CROSS JOIN vt1 ON ((((vt1.c0)OR(rt0.c1)))OR(rt0.c2)) COLLATE BINARY WHERE ((NOT ((((((('-273446798')OR(-1694917767)))AND(0X69d7b9db))) IS TRUE)))) UNION SELECT DISTINCT rt0.c4 FROM rt0 CROSS JOIN vt1 ON ((((vt1.c0)OR(rt0.c1)))OR(rt0.c2)) COLLATE BINARY WHERE ((((((((('-273446798')OR(-1694917767)))AND(0X69d7b9db))) IS TRUE)) ISNULL));
SELECT DISTINCT rt0.c4 FROM rt0 CROSS JOIN vt1 ON ((((vt1.c0)OR(rt0.c1)))OR(rt0.c2)) COLLATE BINARY;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE ((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((-2.93535413E8, (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))), ((vt1.c0)<=(vt1.c0)))) AND ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END, CAST(vt1.c0 AS INTEGER), ((vt1.c0)/(vt1.c0)))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT ((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((-2.93535413E8, (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))), ((vt1.c0)<=(vt1.c0)))) AND ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END, CAST(vt1.c0 AS INTEGER), ((vt1.c0)/(vt1.c0)))))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((-2.93535413E8, (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))), ((vt1.c0)<=(vt1.c0)))) AND ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END, CAST(vt1.c0 AS INTEGER), ((vt1.c0)/(vt1.c0)))))) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT rt0.c0, vt1.c0 FROM rt0, vt1 GROUP BY rt0.c0, vt1.c0;
SELECT rt0.c0, vt1.c0 FROM rt0, vt1 GROUP BY rt0.c0, vt1.c0 HAVING (COUNT(*) IN ()) UNION ALL SELECT ALL rt0.c0, vt1.c0 FROM rt0, vt1 GROUP BY rt0.c0, vt1.c0 HAVING (NOT ((COUNT(*) IN ()))) UNION ALL SELECT rt0.c0, vt1.c0 FROM rt0, vt1 GROUP BY rt0.c0, vt1.c0 HAVING (((COUNT(*) IN ())) ISNULL);
SELECT rt0.c0, vt1.c0 FROM rt0, vt1 GROUP BY rt0.c0, vt1.c0;
SELECT rt0.c0, vt1.c0 FROM rt0, vt1 GROUP BY rt0.c0, vt1.c0 HAVING (COUNT(*) IN ()) UNION ALL SELECT ALL rt0.c0, vt1.c0 FROM rt0, vt1 GROUP BY rt0.c0, vt1.c0 HAVING (NOT ((COUNT(*) IN ()))) UNION ALL SELECT rt0.c0, vt1.c0 FROM rt0, vt1 GROUP BY rt0.c0, vt1.c0 HAVING (((COUNT(*) IN ())) ISNULL);
SELECT rt0.c0, vt1.c0 FROM rt0, vt1 GROUP BY rt0.c0, vt1.c0;
SELECT rt0.c0, rt0.c4, rt0.c1, rt0.c3, rt0.c2, vt1.c0 FROM rt0, vt1;
SELECT rt0.c0, rt0.c4, rt0.c1, rt0.c3, rt0.c2, vt1.c0 FROM rt0, vt1 WHERE (((rt0.c1)<=(vt1.c0)) COLLATE RTRIM) UNION ALL SELECT rt0.c0, rt0.c4, rt0.c1, rt0.c3, rt0.c2, vt1.c0 FROM rt0, vt1 WHERE ((NOT (((rt0.c1)<=(vt1.c0)) COLLATE RTRIM))) UNION ALL SELECT rt0.c0, rt0.c4, rt0.c1, rt0.c3, rt0.c2, vt1.c0 FROM rt0, vt1 WHERE (((((rt0.c1)<=(vt1.c0)) COLLATE RTRIM) ISNULL));
SELECT rt0.c0, rt0.c4, rt0.c1, rt0.c3, rt0.c2, vt1.c0 FROM rt0, vt1;
SELECT DISTINCT vt1.c0 FROM vt1 RIGHT OUTER JOIN rt0 ON (((rt0.c3)!=(rt0.c2)) IN ());
SELECT DISTINCT vt1.c0 FROM vt1 RIGHT OUTER JOIN rt0 ON (((rt0.c3)<>(rt0.c2)) IN ()) WHERE ((((rt0.c0) NOT BETWEEN ('') AND (rt0.c1)) IN ())) UNION SELECT DISTINCT vt1.c0 FROM vt1 RIGHT OUTER JOIN rt0 ON (((rt0.c3)<>(rt0.c2)) IN ()) WHERE ((NOT ((((rt0.c0) NOT BETWEEN ('') AND (rt0.c1)) IN ())))) UNION SELECT DISTINCT vt1.c0 FROM vt1 RIGHT OUTER JOIN rt0 ON (((rt0.c3)!=(rt0.c2)) IN ()) WHERE ((((((rt0.c0) NOT BETWEEN ('') AND (rt0.c1)) IN ())) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1 RIGHT OUTER JOIN rt0 ON (((rt0.c3)!=(rt0.c2)) IN ());
SELECT ALL rt0.c4, rt0.c0 FROM rt0 GROUP BY rt0.c4, rt0.c0;
SELECT ALL rt0.c4, rt0.c0 FROM rt0 WHERE (((CASE rt0.c1  WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 END) NOTNULL)) GROUP BY rt0.c4, rt0.c0 UNION SELECT ALL rt0.c4, rt0.c0 FROM rt0 WHERE ((NOT (((CASE rt0.c1  WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 END) NOTNULL)))) GROUP BY rt0.c4, rt0.c0 UNION SELECT rt0.c4, rt0.c0 FROM rt0 WHERE (((((CASE rt0.c1  WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 END) NOTNULL)) ISNULL)) GROUP BY rt0.c4, rt0.c0;
SELECT ALL rt0.c4, rt0.c0 FROM rt0 GROUP BY rt0.c4, rt0.c0;
SELECT ALL rt0.c1, rt0.c0, rt0.c4, rt0.c3, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c4, rt0.c3, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, rt0.c4, rt0.c3, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c4, rt0.c3, rt0.c2 HAVING (rt0.c1 IN ()) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c4, rt0.c3, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c4, rt0.c3, rt0.c2 HAVING (NOT ((rt0.c1 IN ()))) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c4, rt0.c3, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c4, rt0.c3, rt0.c2 HAVING (((rt0.c1 IN ())) ISNULL);
SELECT ALL rt0.c1, rt0.c0, rt0.c4, rt0.c3, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c4, rt0.c3, rt0.c2;
SELECT ALL rt0.c1, rt0.c0, rt0.c4, rt0.c3, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c4, rt0.c3, rt0.c2 HAVING (rt0.c1 IN ()) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c4, rt0.c3, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c4, rt0.c3, rt0.c2 HAVING (NOT ((rt0.c1 IN ()))) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c4, rt0.c3, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c4, rt0.c3, rt0.c2 HAVING (((rt0.c1 IN ())) ISNULL);
SELECT ALL rt0.c1, rt0.c0, rt0.c4, rt0.c3, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c4, rt0.c3, rt0.c2;
SELECT * FROM vt1 CROSS JOIN rt0 ON ((CAST(rt0.c3 AS TEXT))OR(((rt0.c0)||(rt0.c2))));
SELECT * FROM vt1 CROSS JOIN rt0 ON ((CAST(rt0.c3 AS TEXT))OR(((rt0.c0)||(rt0.c2)))) WHERE (CAST(((rt0.c3) NOT NULL) AS INTEGER)) UNION ALL SELECT * FROM vt1 CROSS JOIN rt0 ON ((CAST(rt0.c3 AS TEXT))OR(((rt0.c0)||(rt0.c2)))) WHERE ((NOT (CAST(((rt0.c3) NOT NULL) AS INTEGER)))) UNION ALL SELECT * FROM vt1 CROSS JOIN rt0 ON ((CAST(rt0.c3 AS TEXT))OR(((rt0.c0)||(rt0.c2)))) WHERE (((CAST(((rt0.c3) NOT NULL) AS INTEGER)) ISNULL));
SELECT * FROM vt1 CROSS JOIN rt0 ON ((CAST(rt0.c3 AS TEXT))OR(((rt0.c0)||(rt0.c2))));
SELECT DISTINCT * FROM rt0 FULL OUTER JOIN vt1 ON rt0.c4;
SELECT DISTINCT * FROM rt0 FULL OUTER JOIN vt1 ON rt0.c4 WHERE (((((vt1.c0) ISNULL)) NOT BETWEEN ((~ (rt0.c0))) AND (((rt0.c4)*(rt0.c2))))) UNION SELECT DISTINCT * FROM rt0 FULL OUTER JOIN vt1 ON rt0.c4 WHERE ((NOT (((((vt1.c0) ISNULL)) NOT BETWEEN ((~ (rt0.c0))) AND (((rt0.c4)*(rt0.c2))))))) UNION SELECT DISTINCT * FROM rt0 FULL OUTER JOIN vt1 ON rt0.c4 WHERE (((((((vt1.c0) ISNULL)) NOT BETWEEN ((~ (rt0.c0))) AND (((rt0.c4)*(rt0.c2))))) ISNULL));
SELECT DISTINCT * FROM rt0 FULL OUTER JOIN vt1 ON rt0.c4;
SELECT ALL rt0.c3 FROM rt0, vt1 GROUP BY rt0.c3;
SELECT rt0.c3 FROM rt0, vt1 WHERE (TRIM(((rt0.c1)%(rt0.c1)), ((rt0.c3) NOT NULL))) GROUP BY rt0.c3 UNION SELECT rt0.c3 FROM rt0, vt1 WHERE ((NOT (TRIM(((rt0.c1)%(rt0.c1)), ((rt0.c3) NOT NULL))))) GROUP BY rt0.c3 UNION SELECT rt0.c3 FROM rt0, vt1 WHERE (((TRIM(((rt0.c1)%(rt0.c1)), ((rt0.c3) NOT NULL))) ISNULL)) GROUP BY rt0.c3;
SELECT ALL rt0.c3 FROM rt0, vt1 GROUP BY rt0.c3;
SELECT ALL rt0.c1, rt0.c3 FROM rt0, vt1 GROUP BY rt0.c1, rt0.c3;
SELECT rt0.c1, rt0.c3 FROM rt0, vt1 GROUP BY rt0.c1, rt0.c3 HAVING UNLIKELY(((COUNT(*)) BETWEEN (TOTAL(GROUP_CONCAT(rt0.c0))) AND (rt0.c2))) UNION ALL SELECT rt0.c1, rt0.c3 FROM rt0, vt1 GROUP BY rt0.c1, rt0.c3 HAVING (NOT (UNLIKELY(((COUNT(*)) BETWEEN (TOTAL(GROUP_CONCAT(rt0.c0))) AND (rt0.c2))))) UNION ALL SELECT rt0.c1, rt0.c3 FROM rt0, vt1 GROUP BY rt0.c1, rt0.c3 HAVING ((UNLIKELY(((COUNT(*)) BETWEEN (TOTAL(GROUP_CONCAT(rt0.c0))) AND (rt0.c2)))) ISNULL);
SELECT ALL * FROM rt0, vt1;
SELECT * FROM rt0, vt1 NOT INDEXED WHERE ((((((vt1.c0)) BETWEEN ((368545253)) AND ((rt0.c4)))) BETWEEN (((NULL)AND(rt0.c4))) AND (rt0.c4))) UNION ALL SELECT ALL * FROM rt0, vt1 WHERE ((NOT ((((((vt1.c0)) BETWEEN ((368545253)) AND ((rt0.c4)))) BETWEEN (((NULL)AND(rt0.c4))) AND (rt0.c4))))) UNION ALL SELECT * FROM rt0, vt1 WHERE ((((((((vt1.c0)) BETWEEN ((368545253)) AND ((rt0.c4)))) BETWEEN (((NULL)AND(rt0.c4))) AND (rt0.c4))) ISNULL));
SELECT ALL * FROM rt0, vt1;
SELECT DISTINCT * FROM vt1 CROSS JOIN rt0 ON CAST(CASE WHEN rt0.c3 THEN rt0.c3 WHEN 0x2af495f0 THEN vt1.c0 WHEN rt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 ELSE vt1.c0 END AS REAL);
SELECT DISTINCT * FROM vt1 CROSS JOIN rt0 ON CAST(CASE WHEN rt0.c3 THEN rt0.c3 WHEN 0X2af495f0 THEN vt1.c0 WHEN rt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 ELSE vt1.c0 END AS REAL) WHERE (CAST(((rt0.c1)<>(x'')) AS BLOB)) UNION SELECT DISTINCT * FROM vt1 CROSS JOIN rt0 ON CAST(CASE WHEN rt0.c3 THEN rt0.c3 WHEN 0X2af495f0 THEN vt1.c0 WHEN rt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 ELSE vt1.c0 END AS REAL) WHERE ((NOT (CAST(((rt0.c1)<>(x'')) AS BLOB)))) UNION SELECT DISTINCT * FROM vt1 CROSS JOIN rt0 ON CAST(CASE WHEN rt0.c3 THEN rt0.c3 WHEN 0x2af495f0 THEN vt1.c0 WHEN rt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 ELSE vt1.c0 END AS REAL) WHERE (((CAST(((rt0.c1)!=(x'')) AS BLOB)) ISNULL));
SELECT DISTINCT * FROM vt1 CROSS JOIN rt0 ON CAST(CASE WHEN rt0.c3 THEN rt0.c3 WHEN 0x2af495f0 THEN vt1.c0 WHEN rt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 ELSE vt1.c0 END AS REAL);
SELECT ALL rt0.c3, rt0.c4 FROM rt0 GROUP BY rt0.c3, rt0.c4;
SELECT rt0.c3, rt0.c4 FROM rt0 WHERE (STRFTIME(CAST(rt0.c4 AS BLOB), 'tjf8\n5e㠣', x'')) GROUP BY rt0.c3, rt0.c4 UNION SELECT ALL rt0.c3, rt0.c4 FROM rt0 WHERE ((NOT (STRFTIME(CAST(rt0.c4 AS BLOB), 'tjf8\n5e㠣', x'')))) GROUP BY rt0.c3, rt0.c4 UNION SELECT ALL rt0.c3, rt0.c4 FROM rt0 WHERE (((STRFTIME(CAST(rt0.c4 AS BLOB), 'tjf8\n5e㠣', x'')) ISNULL)) GROUP BY rt0.c3, rt0.c4;
SELECT ALL rt0.c3, rt0.c4 FROM rt0 GROUP BY rt0.c3, rt0.c4;
SELECT rt0.c0, rt0.c4 FROM vt1 FULL OUTER JOIN rt0 ON (((((rt0.c1)) BETWEEN ((NULL)) AND ((rt0.c4))))&(rt0.c0)) GROUP BY rt0.c0, rt0.c4;
SELECT rt0.c0, rt0.c4 FROM vt1 FULL OUTER JOIN rt0 ON (((((rt0.c1)) BETWEEN ((NULL)) AND ((rt0.c4))))&(rt0.c0)) GROUP BY rt0.c0, rt0.c4 HAVING TOTAL(x'01ba') UNION ALL SELECT rt0.c0, rt0.c4 FROM vt1 FULL OUTER JOIN rt0 ON (((((rt0.c1)) BETWEEN ((NULL)) AND ((rt0.c4))))&(rt0.c0)) GROUP BY rt0.c0, rt0.c4 HAVING (NOT (TOTAL(x'01ba'))) UNION ALL SELECT rt0.c0, rt0.c4 FROM vt1 FULL OUTER JOIN rt0 ON (((((rt0.c1)) BETWEEN ((NULL)) AND ((rt0.c4))))&(rt0.c0)) GROUP BY rt0.c0, rt0.c4 HAVING ((TOTAL(x'01ba')) ISNULL);
SELECT rt0.c0, rt0.c4 FROM vt1 FULL OUTER JOIN rt0 ON (((((rt0.c1)) BETWEEN ((NULL)) AND ((rt0.c4))))&(rt0.c0)) GROUP BY rt0.c0, rt0.c4;
SELECT rt0.c0, rt0.c4 FROM vt1 FULL OUTER JOIN rt0 ON (((((rt0.c1)) BETWEEN ((NULL)) AND ((rt0.c4))))&(rt0.c0)) GROUP BY rt0.c0, rt0.c4 HAVING TOTAL(x'01ba') UNION ALL SELECT rt0.c0, rt0.c4 FROM vt1 FULL OUTER JOIN rt0 ON (((((rt0.c1)) BETWEEN ((NULL)) AND ((rt0.c4))))&(rt0.c0)) GROUP BY rt0.c0, rt0.c4 HAVING (NOT (TOTAL(x'01ba'))) UNION ALL SELECT rt0.c0, rt0.c4 FROM vt1 FULL OUTER JOIN rt0 ON (((((rt0.c1)) BETWEEN ((NULL)) AND ((rt0.c4))))&(rt0.c0)) GROUP BY rt0.c0, rt0.c4 HAVING ((TOTAL(x'01ba')) ISNULL);
SELECT rt0.c0, rt0.c4 FROM vt1 FULL OUTER JOIN rt0 ON (((((rt0.c1)) BETWEEN ((NULL)) AND ((rt0.c4))))&(rt0.c0)) GROUP BY rt0.c0, rt0.c4;
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE ((((rt0.c4)) BETWEEN ((((rt0.c2)+(rt0.c1)))) AND ((((rt0.c1)||(rt0.c0)))))) UNION ALL SELECT * FROM rt0 WHERE ((NOT ((((rt0.c4)) BETWEEN ((((rt0.c2)+(rt0.c1)))) AND ((((rt0.c1)||(rt0.c0)))))))) UNION ALL SELECT ALL * FROM rt0 WHERE ((((((rt0.c4)) BETWEEN ((((rt0.c2)+(rt0.c1)))) AND ((((rt0.c1)||(rt0.c0)))))) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT * FROM rt0, vt1;
SELECT DISTINCT * FROM rt0, vt1 WHERE (((((x'') BETWEEN (rt0.c4) AND (rt0.c3))) BETWEEN ((((x'')) BETWEEN ((vt1.c0)) AND ((rt0.c0)))) AND (vt1.c0))) UNION SELECT DISTINCT * FROM rt0, vt1 WHERE ((NOT (((((x'') BETWEEN (rt0.c4) AND (rt0.c3))) BETWEEN ((((x'')) BETWEEN ((vt1.c0)) AND ((rt0.c0)))) AND (vt1.c0))))) UNION SELECT DISTINCT * FROM rt0, vt1 WHERE (((((((x'') BETWEEN (rt0.c4) AND (rt0.c3))) BETWEEN ((((x'')) BETWEEN ((vt1.c0)) AND ((rt0.c0)))) AND (vt1.c0))) ISNULL));
SELECT DISTINCT * FROM rt0, vt1;
SELECT ALL rt0.c3, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c3, rt0.c0, rt0.c2;
SELECT ALL rt0.c3, rt0.c0, rt0.c2 FROM rt0 WHERE (((((rt0.c1)>(rt0.c2))) NOT BETWEEN (HEX(rt0.c2)) AND ((('892884587') ISNULL)))) GROUP BY rt0.c3, rt0.c0, rt0.c2 UNION SELECT ALL rt0.c3, rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT (((((rt0.c1)>(rt0.c2))) NOT BETWEEN (HEX(rt0.c2)) AND ((('892884587') ISNULL)))))) GROUP BY rt0.c3, rt0.c0, rt0.c2 UNION SELECT rt0.c3, rt0.c0, rt0.c2 FROM rt0 WHERE (((((((rt0.c1)>(rt0.c2))) NOT BETWEEN (HEX(rt0.c2)) AND ((('892884587') ISNULL)))) ISNULL)) GROUP BY rt0.c3, rt0.c0, rt0.c2;
SELECT ALL rt0.c3, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c3, rt0.c0, rt0.c2;
SELECT rt0.c4 FROM vt1 NATURAL JOIN rt0 GROUP BY rt0.c4;
SELECT rt0.c4 FROM vt1 NATURAL JOIN rt0 GROUP BY rt0.c4 HAVING (COUNT(*) IN ()) UNION ALL SELECT ALL rt0.c4 FROM vt1 NATURAL JOIN rt0 GROUP BY rt0.c4 HAVING (NOT ((COUNT(*) IN ()))) UNION ALL SELECT ALL rt0.c4 FROM vt1 NATURAL JOIN rt0 GROUP BY rt0.c4 HAVING (((COUNT(*) IN ())) ISNULL);
SELECT rt0.c4 FROM vt1 NATURAL JOIN rt0 GROUP BY rt0.c4;
SELECT rt0.c4 FROM vt1 NATURAL JOIN rt0 GROUP BY rt0.c4 HAVING (COUNT(*) IN ()) UNION ALL SELECT ALL rt0.c4 FROM vt1 NATURAL JOIN rt0 GROUP BY rt0.c4 HAVING (NOT ((COUNT(*) IN ()))) UNION ALL SELECT ALL rt0.c4 FROM vt1 NATURAL JOIN rt0 GROUP BY rt0.c4 HAVING (((COUNT(*) IN ())) ISNULL);
SELECT rt0.c4 FROM vt1 NATURAL JOIN rt0 GROUP BY rt0.c4;
SELECT ALL rt0.c2, rt0.c3, rt0.c0 FROM vt1 INNER JOIN rt0 ON CASE ((((((((rt0.c2)OR(rt0.c1)))OR(rt0.c4)))AND(rt0.c4)))AND(rt0.c2))  WHEN CASE rt0.c4  WHEN rt0.c2 THEN vt1.c0 ELSE rt0.c1 END THEN ((rt0.c4) BETWEEN (rt0.c2) AND ('5/nM-')) ELSE ']\rVTi3y!	' END;
SELECT rt0.c2, rt0.c3, rt0.c0 FROM vt1 INNER JOIN rt0 ON CASE ((((((((rt0.c2)OR(rt0.c1)))OR(rt0.c4)))AND(rt0.c4)))AND(rt0.c2))  WHEN CASE rt0.c4  WHEN rt0.c2 THEN vt1.c0 ELSE rt0.c1 END THEN ((rt0.c4) BETWEEN (rt0.c2) AND ('5/nM-')) ELSE ']\rVTi3y!	' END WHERE ((((((vt1.c0)) BETWEEN ((rt0.c4)) AND ((rt0.c4))))*((((rt0.c4)) BETWEEN ((0.19170618783962923)) AND (('2144804048')))))) UNION ALL SELECT rt0.c2, rt0.c3, rt0.c0 FROM vt1 INNER JOIN rt0 ON CASE ((((((((rt0.c2)OR(rt0.c1)))OR(rt0.c4)))AND(rt0.c4)))AND(rt0.c2))  WHEN CASE rt0.c4  WHEN rt0.c2 THEN vt1.c0 ELSE rt0.c1 END THEN ((rt0.c4) BETWEEN (rt0.c2) AND ('5/nM-')) ELSE ']\rVTi3y!	' END WHERE ((NOT ((((((vt1.c0)) BETWEEN ((rt0.c4)) AND ((rt0.c4))))*((((rt0.c4)) BETWEEN ((0.19170618783962923)) AND (('2144804048')))))))) UNION ALL SELECT rt0.c2, rt0.c3, rt0.c0 FROM vt1 INNER JOIN rt0 ON CASE ((((((((rt0.c2)OR(rt0.c1)))OR(rt0.c4)))AND(rt0.c4)))AND(rt0.c2))  WHEN CASE rt0.c4  WHEN rt0.c2 THEN vt1.c0 ELSE rt0.c1 END THEN ((rt0.c4) BETWEEN (rt0.c2) AND ('5/nM-')) ELSE ']\rVTi3y!	' END WHERE ((((((((vt1.c0)) BETWEEN ((rt0.c4)) AND ((rt0.c4))))*((((rt0.c4)) BETWEEN ((0.19170618783962923)) AND (('2144804048')))))) ISNULL));
SELECT ALL rt0.c2, rt0.c3, rt0.c0 FROM vt1 INNER JOIN rt0 ON CASE ((((((((rt0.c2)OR(rt0.c1)))OR(rt0.c4)))AND(rt0.c4)))AND(rt0.c2))  WHEN CASE rt0.c4  WHEN rt0.c2 THEN vt1.c0 ELSE rt0.c1 END THEN ((rt0.c4) BETWEEN (rt0.c2) AND ('5/nM-')) ELSE ']\rVTi3y!	' END;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (((((((((vt1.c0)AND(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))AND(((vt1.c0)&(vt1.c0)))))AND(x'')))AND(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (((((((((vt1.c0)AND(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))AND(((vt1.c0)&(vt1.c0)))))AND(x'')))AND(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))))) UNION SELECT DISTINCT * FROM vt1 WHERE (((((((((((vt1.c0)AND(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))AND(((vt1.c0)&(vt1.c0)))))AND(x'')))AND(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT ALL rt0.c0, vt1.c0 FROM rt0 RIGHT OUTER JOIN vt1 ON (((rt0.c3, rt0.c2, rt0.c2)) NOT BETWEEN ((rt0.c1, rt0.c0, NULL)) AND ((rt0.c3, rt0.c2, '790988979'))) COLLATE BINARY GROUP BY rt0.c0, vt1.c0;
SELECT ALL rt0.c0, vt1.c0 FROM rt0 RIGHT OUTER JOIN vt1 ON (((rt0.c3, rt0.c2, rt0.c2)) NOT BETWEEN ((rt0.c1, rt0.c0, NULL)) AND ((rt0.c3, rt0.c2, '790988979'))) COLLATE BINARY WHERE (rt0.c1) GROUP BY rt0.c0, vt1.c0 UNION SELECT rt0.c0, vt1.c0 FROM rt0 RIGHT OUTER JOIN vt1 ON (((rt0.c3, rt0.c2, rt0.c2)) NOT BETWEEN ((rt0.c1, rt0.c0, NULL)) AND ((rt0.c3, rt0.c2, '790988979'))) COLLATE BINARY WHERE ((NOT (rt0.c1))) GROUP BY rt0.c0, vt1.c0 UNION SELECT ALL rt0.c0, vt1.c0 FROM rt0 RIGHT OUTER JOIN vt1 ON (((rt0.c3, rt0.c2, rt0.c2)) NOT BETWEEN ((rt0.c1, rt0.c0, NULL)) AND ((rt0.c3, rt0.c2, '790988979'))) COLLATE BINARY WHERE (((rt0.c1) ISNULL)) GROUP BY rt0.c0, vt1.c0;
SELECT ALL rt0.c0, vt1.c0 FROM rt0 RIGHT OUTER JOIN vt1 ON (((rt0.c3, rt0.c2, rt0.c2)) NOT BETWEEN ((rt0.c1, rt0.c0, NULL)) AND ((rt0.c3, rt0.c2, '790988979'))) COLLATE BINARY GROUP BY rt0.c0, vt1.c0;
SELECT ALL rt0.c3, rt0.c0, rt0.c1, rt0.c4, rt0.c2 FROM rt0 GROUP BY rt0.c3, rt0.c0, rt0.c1, rt0.c4, rt0.c2;
SELECT ALL rt0.c3, rt0.c0, rt0.c1, rt0.c4, rt0.c2 FROM rt0 GROUP BY rt0.c3, rt0.c0, rt0.c1, rt0.c4, rt0.c2 HAVING GROUP_CONCAT(AVG(MAX(SUM(rt0.c1)))) UNION ALL SELECT ALL rt0.c3, rt0.c0, rt0.c1, rt0.c4, rt0.c2 FROM rt0 GROUP BY rt0.c3, rt0.c0, rt0.c1, rt0.c4, rt0.c2 HAVING (NOT (GROUP_CONCAT(AVG(MAX(SUM(rt0.c1)))))) UNION ALL SELECT ALL rt0.c3, rt0.c0, rt0.c1, rt0.c4, rt0.c2 FROM rt0 GROUP BY rt0.c3, rt0.c0, rt0.c1, rt0.c4, rt0.c2 HAVING ((GROUP_CONCAT(AVG(MAX(SUM(rt0.c1))))) ISNULL);
SELECT ALL * FROM rt0, vt1;
SELECT * FROM rt0, vt1 WHERE ((CAST(rt0.c1 AS BLOB) IN ())) UNION ALL SELECT * FROM rt0, vt1 WHERE ((NOT ((CAST(rt0.c1 AS BLOB) IN ())))) UNION ALL SELECT ALL * FROM rt0, vt1 WHERE ((((CAST(rt0.c1 AS BLOB) IN ())) ISNULL));
SELECT ALL * FROM rt0, vt1;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((CAST(x'' AS REAL))IS NOT(((rt0.c0)%(rt0.c4))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((CAST(x'' AS REAL))IS NOT(((rt0.c0)%(rt0.c4))))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((CAST(x'' AS REAL))IS NOT(((rt0.c0)%(rt0.c4))))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c4, rt0.c2, rt0.c3 FROM rt0 GROUP BY rt0.c4, rt0.c2, rt0.c3;
SELECT ALL rt0.c4, rt0.c2, rt0.c3 FROM rt0 WHERE (((((rt0.c4 COLLATE RTRIM)OR(NULL COLLATE NOCASE)))AND(CASE rt0.c3  WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END))) GROUP BY rt0.c4, rt0.c2, rt0.c3 UNION SELECT rt0.c4, rt0.c2, rt0.c3 FROM rt0 WHERE ((NOT (((((rt0.c4 COLLATE RTRIM)OR(NULL COLLATE NOCASE)))AND(CASE rt0.c3  WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END))))) GROUP BY rt0.c4, rt0.c2, rt0.c3 UNION SELECT rt0.c4, rt0.c2, rt0.c3 FROM rt0 WHERE (((((((rt0.c4 COLLATE RTRIM)OR(NULL COLLATE NOCASE)))AND(CASE rt0.c3  WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END))) ISNULL)) GROUP BY rt0.c4, rt0.c2, rt0.c3;
SELECT ALL rt0.c4, rt0.c2, rt0.c3 FROM rt0 GROUP BY rt0.c4, rt0.c2, rt0.c3;
SELECT rt0.c2, rt0.c4, rt0.c3 FROM vt1, rt0 GROUP BY rt0.c2, rt0.c4, rt0.c3;
SELECT rt0.c2, rt0.c4, rt0.c3 FROM vt1, rt0 GROUP BY rt0.c2, rt0.c4, rt0.c3 HAVING SUM(((rt0.c0)<=(GROUP_CONCAT(MAX(rt0.c2))))) UNION ALL SELECT rt0.c2, rt0.c4, rt0.c3 FROM vt1, rt0 GROUP BY rt0.c2, rt0.c4, rt0.c3 HAVING (NOT (SUM(((rt0.c0)<=(GROUP_CONCAT(MAX(rt0.c2))))))) UNION ALL SELECT rt0.c2, rt0.c4, rt0.c3 FROM vt1, rt0 GROUP BY rt0.c2, rt0.c4, rt0.c3 HAVING ((SUM(((rt0.c0)<=(GROUP_CONCAT(MAX(rt0.c2)))))) ISNULL);
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE (NULL) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (NULL))) UNION ALL SELECT * FROM rt0 WHERE (((NULL) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c1, rt0.c4 FROM rt0, vt1;
SELECT DISTINCT rt0.c2, rt0.c1, rt0.c4 FROM rt0, vt1 WHERE (UPPER(DISTINCT ((rt0.c4)%(rt0.c3)))) UNION SELECT DISTINCT rt0.c2, rt0.c1, rt0.c4 FROM rt0, vt1 WHERE ((NOT (UPPER(DISTINCT ((rt0.c4)%(rt0.c3)))))) UNION SELECT DISTINCT rt0.c2, rt0.c1, rt0.c4 FROM rt0, vt1 WHERE (((UPPER(DISTINCT ((rt0.c4)%(rt0.c3)))) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c1, rt0.c4 FROM rt0, vt1;
SELECT ALL rt0.c1, vt1.c0, rt0.c4, rt0.c3 FROM rt0, vt1 GROUP BY rt0.c1, vt1.c0, rt0.c4, rt0.c3;
SELECT rt0.c1, vt1.c0, rt0.c4, rt0.c3 FROM rt0, vt1 WHERE (((((rt0.c2)AND((rt0.c1 IN ()))))AND(((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c3))))) GROUP BY rt0.c1, vt1.c0, rt0.c4, rt0.c3 UNION SELECT rt0.c1, vt1.c0, rt0.c4, rt0.c3 FROM rt0, vt1 WHERE ((NOT (((((rt0.c2)AND((rt0.c1 IN ()))))AND(((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c3))))))) GROUP BY rt0.c1, vt1.c0, rt0.c4, rt0.c3 UNION SELECT rt0.c1, vt1.c0, rt0.c4, rt0.c3 FROM rt0, vt1 WHERE (((((((rt0.c2)AND((rt0.c1 IN ()))))AND(((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c3))))) ISNULL)) GROUP BY rt0.c1, vt1.c0, rt0.c4, rt0.c3;
SELECT ALL rt0.c1, vt1.c0, rt0.c4, rt0.c3 FROM rt0, vt1 GROUP BY rt0.c1, vt1.c0, rt0.c4, rt0.c3;
SELECT rt0.c4, rt0.c2 FROM rt0 GROUP BY rt0.c4, rt0.c2;
SELECT ALL rt0.c4, rt0.c2 FROM rt0 GROUP BY rt0.c4, rt0.c2 HAVING SUM(MIN(SUM(TOTAL(COUNT(rt0.c2))))) UNION ALL SELECT rt0.c4, rt0.c2 FROM rt0 GROUP BY rt0.c4, rt0.c2 HAVING (NOT (SUM(MIN(SUM(TOTAL(COUNT(rt0.c2))))))) UNION ALL SELECT rt0.c4, rt0.c2 FROM rt0 NOT INDEXED GROUP BY rt0.c4, rt0.c2 HAVING ((SUM(MIN(SUM(TOTAL(COUNT(rt0.c2)))))) ISNULL);
SELECT TOTAL((((rt0.c2 IN ())) NOT BETWEEN ('') AND (CAST(rt0.c1 AS NUMERIC)))) FROM rt0 ORDER BY (((rt0.c3)) NOT BETWEEN ((CAST(rt0.c3 AS TEXT))) AND ((((((((((rt0.c0)OR(rt0.c2)))OR(rt0.c3)))AND(rt0.c4)))AND(rt0.c3))))), (rt0.c0 IN (rt0.c3)) COLLATE RTRIM;
SELECT ALL * FROM rt0;
SELECT * FROM rt0 WHERE (((((NULL)AND(('+' IN ()))))AND(UPPER(rt0.c1)))) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (((((NULL)AND(('+' IN ()))))AND(UPPER(rt0.c1)))))) UNION ALL SELECT ALL * FROM rt0 WHERE (((((((NULL)AND(('+' IN ()))))AND(UPPER(rt0.c1)))) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((CAST(vt1.c0 AS TEXT) IN ())) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT ((CAST(vt1.c0 AS TEXT) IN ())))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((((CAST(vt1.c0 AS TEXT) IN ())) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT ALL rt0.c4, rt0.c0 FROM rt0 GROUP BY rt0.c4, rt0.c0;
SELECT ALL rt0.c4, rt0.c0 FROM rt0 WHERE ((((rt0.c2 IN ())) BETWEEN (json_extract(rt0.c2, rt0.c4, rt0.c0, rt0.c0)) AND (((rt0.c4)>(rt0.c2))))) GROUP BY rt0.c4, rt0.c0 UNION SELECT ALL rt0.c4, rt0.c0 FROM rt0 WHERE ((NOT ((((rt0.c2 IN ())) BETWEEN (json_extract(rt0.c2, rt0.c4, rt0.c0, rt0.c0)) AND (((rt0.c4)>(rt0.c2))))))) GROUP BY rt0.c4, rt0.c0 UNION SELECT ALL rt0.c4, rt0.c0 FROM rt0 WHERE ((((((rt0.c2 IN ())) BETWEEN (json_extract(rt0.c2, rt0.c4, rt0.c0, rt0.c0)) AND (((rt0.c4)>(rt0.c2))))) ISNULL)) GROUP BY rt0.c4, rt0.c0;
SELECT ALL rt0.c0, rt0.c2 FROM vt1, rt0 GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c2 FROM vt1, rt0 GROUP BY rt0.c0, rt0.c2 HAVING MAX(NULL) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM vt1 NOT INDEXED, rt0 GROUP BY rt0.c0, rt0.c2 HAVING (NOT (MAX(NULL))) UNION ALL SELECT rt0.c0, rt0.c2 FROM vt1, rt0 GROUP BY rt0.c0, rt0.c2 HAVING ((MAX(NULL)) ISNULL);
SELECT ALL rt0.c0, rt0.c2 FROM vt1, rt0 GROUP BY rt0.c0, rt0.c2;
SELECT rt0.c0, rt0.c2 FROM vt1, rt0 GROUP BY rt0.c0, rt0.c2 HAVING MAX(NULL) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM vt1 NOT INDEXED, rt0 GROUP BY rt0.c0, rt0.c2 HAVING (NOT (MAX(NULL))) UNION ALL SELECT rt0.c0, rt0.c2 FROM vt1, rt0 GROUP BY rt0.c0, rt0.c2 HAVING ((MAX(NULL)) ISNULL);
SELECT ALL rt0.c0, rt0.c2 FROM vt1, rt0 GROUP BY rt0.c0, rt0.c2;
SELECT * FROM vt1;
SELECT * FROM vt1 WHERE (json_patch((vt1.c0 IN (vt1.c0)), ((vt1.c0) NOT BETWEEN (x'') AND (vt1.c0)))) UNION ALL SELECT ALL * FROM vt1 WHERE ((NOT (json_patch((vt1.c0 IN (vt1.c0)), ((vt1.c0) NOT BETWEEN (x'') AND (vt1.c0)))))) UNION ALL SELECT ALL * FROM vt1 WHERE (((json_patch((vt1.c0 IN (vt1.c0)), ((vt1.c0) NOT BETWEEN (x'') AND (vt1.c0)))) ISNULL));
SELECT * FROM vt1;
SELECT DISTINCT * FROM vt1, rt0;
SELECT DISTINCT * FROM vt1, rt0 WHERE (((((((rt0.c2)AND(rt0.c4)))OR(rt0.c0))) IS TRUE)) UNION SELECT DISTINCT * FROM vt1, rt0 WHERE ((NOT (((((((rt0.c2)AND(rt0.c4)))OR(rt0.c0))) IS TRUE)))) UNION SELECT DISTINCT * FROM vt1, rt0 WHERE (((((((((rt0.c2)AND(rt0.c4)))OR(rt0.c0))) IS TRUE)) ISNULL));
SELECT DISTINCT * FROM vt1, rt0;
SELECT ALL rt0.c3, vt1.c0, rt0.c2, rt0.c0 FROM rt0, vt1 GROUP BY rt0.c3, vt1.c0, rt0.c2, rt0.c0;
SELECT rt0.c3, vt1.c0, rt0.c2, rt0.c0 FROM rt0, vt1 WHERE (((((((((((vt1.c0)AND(vt1.c0)))OR(rt0.c3)))OR(rt0.c4)))AND('1390083157'))) ISNULL)) GROUP BY rt0.c3, vt1.c0, rt0.c2, rt0.c0 UNION SELECT ALL rt0.c3, vt1.c0, rt0.c2, rt0.c0 FROM rt0 NOT INDEXED, vt1 WHERE ((NOT (((((((((((vt1.c0)AND(vt1.c0)))OR(rt0.c3)))OR(rt0.c4)))AND('1390083157'))) ISNULL)))) GROUP BY rt0.c3, vt1.c0, rt0.c2, rt0.c0 UNION SELECT rt0.c3, vt1.c0, rt0.c2, rt0.c0 FROM rt0, vt1 WHERE (((((((((((((vt1.c0)AND(vt1.c0)))OR(rt0.c3)))OR(rt0.c4)))AND('1390083157'))) ISNULL)) ISNULL)) GROUP BY rt0.c3, vt1.c0, rt0.c2, rt0.c0;
SELECT ALL rt0.c3, vt1.c0, rt0.c2, rt0.c0 FROM rt0, vt1 GROUP BY rt0.c3, vt1.c0, rt0.c2, rt0.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (((+ (MAX(0.8194423316050922))))=(TOTAL(MAX(vt1.c0)))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT ((((+ (MAX(0.8194423316050922))))==(TOTAL(MAX(vt1.c0)))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (((((+ (MAX(0.8194423316050922))))=(TOTAL(MAX(vt1.c0))))) ISNULL);
SELECT rt0.c2 FROM vt1, rt0;
SELECT rt0.c2 FROM vt1, rt0 WHERE ((~ (((vt1.c0) IS FALSE)))) UNION ALL SELECT rt0.c2 FROM vt1, rt0 WHERE ((NOT ((~ (((vt1.c0) IS FALSE)))))) UNION ALL SELECT rt0.c2 FROM vt1, rt0 WHERE ((((~ (((vt1.c0) IS FALSE)))) ISNULL));
SELECT rt0.c2 FROM vt1, rt0;
SELECT DISTINCT rt0.c4, rt0.c0 FROM rt0, vt1;
SELECT DISTINCT rt0.c4, rt0.c0 FROM rt0, vt1 WHERE (((((((vt1.c0)) BETWEEN ((rt0.c3)) AND ((rt0.c0)))))!=((((vt1.c0)<(vt1.c0)))))) UNION SELECT DISTINCT rt0.c4, rt0.c0 FROM rt0, vt1 WHERE ((NOT (((((((vt1.c0)) BETWEEN ((rt0.c3)) AND ((rt0.c0)))))!=((((vt1.c0)<(vt1.c0)))))))) UNION SELECT DISTINCT rt0.c4, rt0.c0 FROM rt0, vt1 WHERE (((((((((vt1.c0)) BETWEEN ((rt0.c3)) AND ((rt0.c0)))))!=((((vt1.c0)<(vt1.c0)))))) ISNULL));
SELECT DISTINCT rt0.c4, rt0.c0 FROM rt0, vt1;
SELECT ALL rt0.c2, rt0.c3, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c3, rt0.c0;
SELECT rt0.c2, rt0.c3, rt0.c0 FROM rt0 WHERE ((((NOT (rt0.c1)))<(((rt0.c3)>=('-91151428'))))) GROUP BY rt0.c2, rt0.c3, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c3, rt0.c0 FROM rt0 WHERE ((NOT ((((NOT (rt0.c1)))<(((rt0.c3)>=('-91151428'))))))) GROUP BY rt0.c2, rt0.c3, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c3, rt0.c0 FROM rt0 WHERE ((((((NOT (rt0.c1)))<(((rt0.c3)>=('-91151428'))))) ISNULL)) GROUP BY rt0.c2, rt0.c3, rt0.c0;
SELECT ALL rt0.c2, rt0.c3, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c3, rt0.c0;
SELECT ALL rt0.c0, rt0.c2, rt0.c4, rt0.c1, rt0.c3, vt1.c0 FROM vt1, rt0 GROUP BY rt0.c0, rt0.c2, rt0.c4, rt0.c1, rt0.c3, vt1.c0;
SELECT rt0.c0, rt0.c2, rt0.c4, rt0.c1, rt0.c3, vt1.c0 FROM vt1, rt0 GROUP BY rt0.c0, rt0.c2, rt0.c4, rt0.c1, rt0.c3, vt1.c0 HAVING (+ ((~ (rt0.c3)))) UNION ALL SELECT rt0.c0, rt0.c2, rt0.c4, rt0.c1, rt0.c3, vt1.c0 FROM vt1, rt0 GROUP BY rt0.c0, rt0.c2, rt0.c4, rt0.c1, rt0.c3, vt1.c0 HAVING (NOT ((+ ((~ (rt0.c3)))))) UNION ALL SELECT rt0.c0, rt0.c2, rt0.c4, rt0.c1, rt0.c3, vt1.c0 FROM vt1, rt0 GROUP BY rt0.c0, rt0.c2, rt0.c4, rt0.c1, rt0.c3, vt1.c0 HAVING (((+ ((~ (rt0.c3))))) ISNULL);
SELECT ALL rt0.c0, rt0.c2, rt0.c4, rt0.c1, rt0.c3, vt1.c0 FROM vt1, rt0 GROUP BY rt0.c0, rt0.c2, rt0.c4, rt0.c1, rt0.c3, vt1.c0;
SELECT rt0.c0, rt0.c2, rt0.c4, rt0.c1, rt0.c3, vt1.c0 FROM vt1, rt0 GROUP BY rt0.c0, rt0.c2, rt0.c4, rt0.c1, rt0.c3, vt1.c0 HAVING (+ ((~ (rt0.c3)))) UNION ALL SELECT rt0.c0, rt0.c2, rt0.c4, rt0.c1, rt0.c3, vt1.c0 FROM vt1, rt0 GROUP BY rt0.c0, rt0.c2, rt0.c4, rt0.c1, rt0.c3, vt1.c0 HAVING (NOT ((+ ((~ (rt0.c3)))))) UNION ALL SELECT rt0.c0, rt0.c2, rt0.c4, rt0.c1, rt0.c3, vt1.c0 FROM vt1, rt0 GROUP BY rt0.c0, rt0.c2, rt0.c4, rt0.c1, rt0.c3, vt1.c0 HAVING (((+ ((~ (rt0.c3))))) ISNULL);
SELECT ALL rt0.c0, rt0.c2, rt0.c4, rt0.c1, rt0.c3, vt1.c0 FROM vt1, rt0 GROUP BY rt0.c0, rt0.c2, rt0.c4, rt0.c1, rt0.c3, vt1.c0;
SELECT rt0.c2, rt0.c4, rt0.c0, rt0.c1 FROM rt0;
SELECT rt0.c2, rt0.c4, rt0.c0, rt0.c1 FROM rt0 NOT INDEXED WHERE (CAST(0.5375449572139761 COLLATE RTRIM AS TEXT)) UNION ALL SELECT ALL rt0.c2, rt0.c4, rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (CAST(0.5375449572139761 COLLATE RTRIM AS TEXT)))) UNION ALL SELECT ALL rt0.c2, rt0.c4, rt0.c0, rt0.c1 FROM rt0 WHERE (((CAST(0.5375449572139761 COLLATE RTRIM AS TEXT)) ISNULL));
SELECT rt0.c2, rt0.c4, rt0.c0, rt0.c1 FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((((rt0.c2)||(rt0.c1))) ISNULL)) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((((rt0.c2)||(rt0.c1))) ISNULL)))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((((rt0.c2)||(rt0.c1))) ISNULL)) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c0, rt0.c2, rt0.c4, vt1.c0, rt0.c1, rt0.c3 FROM vt1 LEFT OUTER JOIN rt0 ON '+8' COLLATE RTRIM GROUP BY rt0.c0, rt0.c2, rt0.c4, vt1.c0, rt0.c1, rt0.c3;
SELECT ALL rt0.c0, rt0.c2, rt0.c4, vt1.c0, rt0.c1, rt0.c3 FROM vt1 LEFT OUTER JOIN rt0 ON '+8' COLLATE RTRIM WHERE (0.9743535883966885) GROUP BY rt0.c0, rt0.c2, rt0.c4, vt1.c0, rt0.c1, rt0.c3 UNION SELECT rt0.c0, rt0.c2, rt0.c4, vt1.c0, rt0.c1, rt0.c3 FROM vt1 LEFT OUTER JOIN rt0 ON '+8' COLLATE RTRIM WHERE ((NOT (0.9743535883966885))) GROUP BY rt0.c0, rt0.c2, rt0.c4, vt1.c0, rt0.c1, rt0.c3 UNION SELECT rt0.c0, rt0.c2, rt0.c4, vt1.c0, rt0.c1, rt0.c3 FROM vt1 LEFT OUTER JOIN rt0 ON '+8' COLLATE RTRIM WHERE (((0.9743535883966885) ISNULL)) GROUP BY rt0.c0, rt0.c2, rt0.c4, vt1.c0, rt0.c1, rt0.c3;
SELECT rt0.c0, rt0.c2, rt0.c4, vt1.c0, rt0.c1, rt0.c3 FROM vt1 LEFT OUTER JOIN rt0 ON '+8' COLLATE RTRIM GROUP BY rt0.c0, rt0.c2, rt0.c4, vt1.c0, rt0.c1, rt0.c3;
SELECT rt0.c1, rt0.c4, rt0.c3, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c4, rt0.c3, rt0.c0;
SELECT rt0.c1, rt0.c4, rt0.c3, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c4, rt0.c3, rt0.c0 HAVING MIN(CAST(COUNT(rt0.c4) AS BLOB)) UNION ALL SELECT ALL rt0.c1, rt0.c4, rt0.c3, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c4, rt0.c3, rt0.c0 HAVING (NOT (MIN(CAST(COUNT(rt0.c4) AS BLOB)))) UNION ALL SELECT ALL rt0.c1, rt0.c4, rt0.c3, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c4, rt0.c3, rt0.c0 HAVING ((MIN(CAST(COUNT(rt0.c4) AS BLOB))) ISNULL);
SELECT * FROM vt1;
SELECT * FROM vt1 WHERE (((LIKELY(DISTINCT vt1.c0))IS(CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))) UNION ALL SELECT * FROM vt1 WHERE ((NOT (((LIKELY(DISTINCT vt1.c0))IS(CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))))) UNION ALL SELECT * FROM vt1 WHERE (((((LIKELY(DISTINCT vt1.c0))IS(CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))) ISNULL));
SELECT * FROM vt1;
SELECT DISTINCT * FROM vt1, rt0;
SELECT DISTINCT * FROM vt1, rt0 WHERE (((((NULL)OR(TRIM(vt1.c0, rt0.c0))))OR(((vt1.c0)!=(rt0.c2))))) UNION SELECT DISTINCT * FROM vt1, rt0 WHERE ((NOT (((((NULL)OR(TRIM(vt1.c0, rt0.c0))))OR(((vt1.c0)<>(rt0.c2))))))) UNION SELECT DISTINCT * FROM vt1, rt0 WHERE (((((((NULL)OR(TRIM(vt1.c0, rt0.c0))))OR(((vt1.c0)!=(rt0.c2))))) ISNULL));
SELECT DISTINCT * FROM vt1, rt0;
SELECT rt0.c0, rt0.c2, rt0.c1, rt0.c3 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1, rt0.c3;
SELECT rt0.c0, rt0.c2, rt0.c1, rt0.c3 FROM rt0 WHERE (((CASE rt0.c2  WHEN rt0.c3 THEN rt0.c4 ELSE rt0.c0 END) IS FALSE)) GROUP BY rt0.c0, rt0.c2, rt0.c1, rt0.c3 UNION SELECT rt0.c0, rt0.c2, rt0.c1, rt0.c3 FROM rt0 WHERE ((NOT (((CASE rt0.c2  WHEN rt0.c3 THEN rt0.c4 ELSE rt0.c0 END) IS FALSE)))) GROUP BY rt0.c0, rt0.c2, rt0.c1, rt0.c3 UNION SELECT rt0.c0, rt0.c2, rt0.c1, rt0.c3 FROM rt0 WHERE (((((CASE rt0.c2  WHEN rt0.c3 THEN rt0.c4 ELSE rt0.c0 END) IS FALSE)) ISNULL)) GROUP BY rt0.c0, rt0.c2, rt0.c1, rt0.c3;
SELECT rt0.c0, rt0.c2, rt0.c1, rt0.c3 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1, rt0.c3;
SELECT vt1.c0, rt0.c4, rt0.c1, rt0.c2 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c4, rt0.c1, rt0.c2;
SELECT ALL vt1.c0, rt0.c4, rt0.c1, rt0.c2 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c4, rt0.c1, rt0.c2 HAVING (~ (((TOTAL(rt0.c4)) NOT BETWEEN (SUM(GROUP_CONCAT(vt1.c0))) AND (COUNT(*))))) UNION ALL SELECT ALL vt1.c0, rt0.c4, rt0.c1, rt0.c2 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c4, rt0.c1, rt0.c2 HAVING (NOT ((~ (((TOTAL(rt0.c4)) NOT BETWEEN (SUM(GROUP_CONCAT(vt1.c0))) AND (COUNT(*))))))) UNION ALL SELECT vt1.c0, rt0.c4, rt0.c1, rt0.c2 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c4, rt0.c1, rt0.c2 HAVING (((~ (((TOTAL(rt0.c4)) NOT BETWEEN (SUM(GROUP_CONCAT(vt1.c0))) AND (COUNT(*)))))) ISNULL);
SELECT vt1.c0 FROM vt1;
SELECT vt1.c0 FROM vt1 WHERE (((((((vt1.c0)GLOB(vt1.c0)))AND(vt1.c0)))OR(vt1.c0))) UNION ALL SELECT vt1.c0 FROM vt1 WHERE ((NOT (((((((vt1.c0)GLOB(vt1.c0)))AND(vt1.c0)))OR(vt1.c0))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE (((((((((vt1.c0)GLOB(vt1.c0)))AND(vt1.c0)))OR(vt1.c0))) ISNULL));
SELECT vt1.c0 FROM vt1;
SELECT DISTINCT rt0.c3, rt0.c4 FROM rt0;
SELECT DISTINCT rt0.c3, rt0.c4 FROM rt0 WHERE (TRIM((rt0.c0 IN (rt0.c1, rt0.c2)), ((((rt0.c4)OR(rt0.c0)))AND(rt0.c0)))) UNION SELECT DISTINCT rt0.c3, rt0.c4 FROM rt0 WHERE ((NOT (TRIM((rt0.c0 IN (rt0.c1, rt0.c2)), ((((rt0.c4)OR(rt0.c0)))AND(rt0.c0)))))) UNION SELECT DISTINCT rt0.c3, rt0.c4 FROM rt0 WHERE (((TRIM((rt0.c0 IN (rt0.c1, rt0.c2)), ((((rt0.c4)OR(rt0.c0)))AND(rt0.c0)))) ISNULL));
SELECT DISTINCT rt0.c3, rt0.c4 FROM rt0;
SELECT rt0.c1, rt0.c3 FROM rt0 GROUP BY rt0.c1, rt0.c3;
SELECT ALL rt0.c1, rt0.c3 FROM rt0 WHERE (load_extension(CASE rt0.c3  WHEN rt0.c0 THEN rt0.c4 WHEN rt0.c2 THEN -1591003450 WHEN rt0.c4 THEN NULL WHEN rt0.c4 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c4 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c4 END, ((rt0.c2) IS FALSE))) GROUP BY rt0.c1, rt0.c3 UNION SELECT rt0.c1, rt0.c3 FROM rt0 WHERE ((NOT (load_extension(CASE rt0.c3  WHEN rt0.c0 THEN rt0.c4 WHEN rt0.c2 THEN -1591003450 WHEN rt0.c4 THEN NULL WHEN rt0.c4 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c4 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c4 END, ((rt0.c2) IS FALSE))))) GROUP BY rt0.c1, rt0.c3 UNION SELECT rt0.c1, rt0.c3 FROM rt0 WHERE (((load_extension(CASE rt0.c3  WHEN rt0.c0 THEN rt0.c4 WHEN rt0.c2 THEN -1591003450 WHEN rt0.c4 THEN NULL WHEN rt0.c4 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c4 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c4 END, ((rt0.c2) IS FALSE))) ISNULL)) GROUP BY rt0.c1, rt0.c3;
SELECT vt1.c0, rt0.c4, rt0.c3, rt0.c1 FROM rt0, vt1 GROUP BY vt1.c0, rt0.c4, rt0.c3, rt0.c1;
SELECT ALL vt1.c0, rt0.c4, rt0.c3, rt0.c1 FROM rt0, vt1 GROUP BY vt1.c0, rt0.c4, rt0.c3, rt0.c1 HAVING CAST(AVG(MAX(MAX(SUM(MIN(MAX(COUNT(*))))))) AS BLOB) UNION ALL SELECT vt1.c0, rt0.c4, rt0.c3, rt0.c1 FROM rt0, vt1 GROUP BY vt1.c0, rt0.c4, rt0.c3, rt0.c1 HAVING (NOT (CAST(AVG(MAX(MAX(SUM(MIN(MAX(COUNT(*))))))) AS BLOB))) UNION ALL SELECT vt1.c0, rt0.c4, rt0.c3, rt0.c1 FROM rt0, vt1 GROUP BY vt1.c0, rt0.c4, rt0.c3, rt0.c1 HAVING ((CAST(AVG(MAX(MAX(SUM(MIN(MAX(COUNT(*))))))) AS BLOB)) ISNULL);
SELECT rt0.c0, rt0.c4, rt0.c2, rt0.c1 FROM rt0;
SELECT rt0.c0, rt0.c4, rt0.c2, rt0.c1 FROM rt0 WHERE ('-857665150') UNION ALL SELECT rt0.c0, rt0.c4, rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT ('-857665150'))) UNION ALL SELECT ALL rt0.c0, rt0.c4, rt0.c2, rt0.c1 FROM rt0 WHERE ((('-857665150') ISNULL));
SELECT rt0.c0, rt0.c4, rt0.c2, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c0, vt1.c0, rt0.c1, rt0.c4 FROM vt1, rt0;
SELECT DISTINCT rt0.c0, vt1.c0, rt0.c1, rt0.c4 FROM vt1, rt0 WHERE (json_array_length(rt0.c2, CAST(rt0.c4 AS REAL))) UNION SELECT DISTINCT rt0.c0, vt1.c0, rt0.c1, rt0.c4 FROM vt1, rt0 WHERE ((NOT (json_array_length(rt0.c2, CAST(rt0.c4 AS REAL))))) UNION SELECT DISTINCT rt0.c0, vt1.c0, rt0.c1, rt0.c4 FROM vt1, rt0 WHERE (((json_array_length(rt0.c2, CAST(rt0.c4 AS REAL))) ISNULL));
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE ((~ ((vt1.c0 IN ())))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT ((~ ((vt1.c0 IN ())))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((((~ ((vt1.c0 IN ())))) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL rt0.c0, vt1.c0 FROM rt0 RIGHT OUTER JOIN vt1 ON ((rt0.c3) IS FALSE) GROUP BY rt0.c0, vt1.c0;
SELECT ALL rt0.c0, vt1.c0 FROM rt0 RIGHT OUTER JOIN vt1 ON ((rt0.c3) IS FALSE) GROUP BY rt0.c0, vt1.c0 HAVING SUM(MIN(rt0.c4)) UNION ALL SELECT ALL rt0.c0, vt1.c0 FROM rt0 RIGHT OUTER JOIN vt1 ON ((rt0.c3) IS FALSE) GROUP BY rt0.c0, vt1.c0 HAVING (NOT (SUM(MIN(rt0.c4)))) UNION ALL SELECT rt0.c0, vt1.c0 FROM rt0 RIGHT OUTER JOIN vt1 ON ((rt0.c3) IS FALSE) GROUP BY rt0.c0, vt1.c0 HAVING ((SUM(MIN(rt0.c4))) ISNULL);
SELECT * FROM rt0, vt1;
SELECT * FROM rt0, vt1 WHERE ((((rt0.c2))<((rt0.c4))) COLLATE NOCASE) UNION ALL SELECT ALL * FROM rt0, vt1 WHERE ((NOT ((((rt0.c2))<((rt0.c4))) COLLATE NOCASE))) UNION ALL SELECT * FROM rt0, vt1 WHERE ((((((rt0.c2))<((rt0.c4))) COLLATE NOCASE) ISNULL));
SELECT * FROM rt0, vt1;
SELECT DISTINCT rt0.c2, rt0.c4, vt1.c0 FROM rt0 NATURAL JOIN vt1;
SELECT DISTINCT rt0.c2, rt0.c4, vt1.c0 FROM rt0 NATURAL JOIN vt1 WHERE (((CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c4 END)&(((((vt1.c0)OR(vt1.c0)))OR(rt0.c4))))) UNION SELECT DISTINCT rt0.c2, rt0.c4, vt1.c0 FROM rt0 NATURAL JOIN vt1 WHERE ((NOT (((CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c4 END)&(((((vt1.c0)OR(vt1.c0)))OR(rt0.c4))))))) UNION SELECT DISTINCT rt0.c2, rt0.c4, vt1.c0 FROM rt0 NATURAL JOIN vt1 WHERE (((((CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c4 END)&(((((vt1.c0)OR(vt1.c0)))OR(rt0.c4))))) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c4, vt1.c0 FROM rt0 NATURAL JOIN vt1;
SELECT ALL rt0.c3, vt1.c0, rt0.c2, rt0.c0, rt0.c4 FROM vt1, rt0 GROUP BY rt0.c3, vt1.c0, rt0.c2, rt0.c0, rt0.c4;
SELECT ALL rt0.c3, vt1.c0, rt0.c2, rt0.c0, rt0.c4 FROM vt1, rt0 WHERE (((((NULL)AND(rt0.c4 COLLATE NOCASE)))OR(((vt1.c0)AND(rt0.c2))))) GROUP BY rt0.c3, vt1.c0, rt0.c2, rt0.c0, rt0.c4 UNION SELECT rt0.c3, vt1.c0, rt0.c2, rt0.c0, rt0.c4 FROM vt1, rt0 WHERE ((NOT (((((NULL)AND(rt0.c4 COLLATE NOCASE)))OR(((vt1.c0)AND(rt0.c2))))))) GROUP BY rt0.c3, vt1.c0, rt0.c2, rt0.c0, rt0.c4 UNION SELECT rt0.c3, vt1.c0, rt0.c2, rt0.c0, rt0.c4 FROM vt1, rt0 WHERE (((((((NULL)AND(rt0.c4 COLLATE NOCASE)))OR(((vt1.c0)AND(rt0.c2))))) ISNULL)) GROUP BY rt0.c3, vt1.c0, rt0.c2, rt0.c0, rt0.c4;
SELECT ALL rt0.c3, vt1.c0, rt0.c2, rt0.c0, rt0.c4 FROM vt1, rt0 GROUP BY rt0.c3, vt1.c0, rt0.c2, rt0.c0, rt0.c4;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING '⸉*' UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT ('⸉*')) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (('⸉*') ISNULL);
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING '⸉*' UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT ('⸉*')) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (('⸉*') ISNULL);
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT * FROM vt1;
SELECT ALL * FROM vt1 WHERE (vt1.c0) UNION ALL SELECT * FROM vt1 WHERE ((NOT (vt1.c0))) UNION ALL SELECT ALL * FROM vt1 WHERE (((vt1.c0) ISNULL));
SELECT * FROM vt1;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE ((((vt1.c0 IN ()))<>(((vt1.c0) NOT BETWEEN ('-1853899882') AND (vt1.c0))))) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT ((((vt1.c0 IN ()))!=(((vt1.c0) NOT BETWEEN ('-1853899882') AND (vt1.c0))))))) UNION SELECT DISTINCT * FROM vt1 WHERE ((((((vt1.c0 IN ()))!=(((vt1.c0) NOT BETWEEN ('-1853899882') AND (vt1.c0))))) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT ALL rt0.c3 FROM rt0 GROUP BY rt0.c3;
SELECT rt0.c3 FROM rt0 WHERE (rt0.c3) GROUP BY rt0.c3 UNION SELECT ALL rt0.c3 FROM rt0 WHERE ((NOT (rt0.c3))) GROUP BY rt0.c3 UNION SELECT rt0.c3 FROM rt0 WHERE (((rt0.c3) ISNULL)) GROUP BY rt0.c3;
SELECT ALL rt0.c3 FROM rt0 GROUP BY rt0.c3;
SELECT ALL rt0.c1, rt0.c3, rt0.c2 FROM vt1, rt0 GROUP BY rt0.c1, rt0.c3, rt0.c2;
SELECT ALL rt0.c1, rt0.c3, rt0.c2 FROM vt1, rt0 GROUP BY rt0.c1, rt0.c3, rt0.c2 HAVING GROUP_CONCAT(((rt0.c3) NOT BETWEEN (TOTAL(rt0.c2)) AND (MAX(COUNT(vt1.c0))))) UNION ALL SELECT rt0.c1, rt0.c3, rt0.c2 FROM vt1, rt0 GROUP BY rt0.c1, rt0.c3, rt0.c2 HAVING (NOT (GROUP_CONCAT(((rt0.c3) NOT BETWEEN (TOTAL(rt0.c2)) AND (MAX(COUNT(vt1.c0))))))) UNION ALL SELECT ALL rt0.c1, rt0.c3, rt0.c2 FROM vt1, rt0 GROUP BY rt0.c1, rt0.c3, rt0.c2 HAVING ((GROUP_CONCAT(((rt0.c3) NOT BETWEEN (TOTAL(rt0.c2)) AND (MAX(COUNT(vt1.c0)))))) ISNULL);
SELECT * FROM vt1;
SELECT ALL * FROM vt1 WHERE (json_array_length(vt1.c0 COLLATE RTRIM)) UNION ALL SELECT * FROM vt1 WHERE ((NOT (json_array_length(vt1.c0 COLLATE RTRIM)))) UNION ALL SELECT * FROM vt1 WHERE (((json_array_length(vt1.c0 COLLATE RTRIM)) ISNULL));
SELECT DISTINCT * FROM vt1, rt0;
SELECT DISTINCT * FROM vt1, rt0 WHERE ((((rt0.c2, rt0.c2, '')) NOT BETWEEN ((json_patch(rt0.c4, rt0.c0), ((rt0.c4) NOT BETWEEN (rt0.c0) AND (vt1.c0)), ((NULL) NOT BETWEEN (rt0.c1) AND (vt1.c0)))) AND ((x'', CASE vt1.c0  WHEN vt1.c0 THEN rt0.c2 ELSE rt0.c2 END, ((((rt0.c3)AND(rt0.c0)))OR(0.8848342596796)))))) UNION SELECT DISTINCT * FROM vt1, rt0 WHERE ((NOT ((((rt0.c2, rt0.c2, '')) NOT BETWEEN ((json_patch(rt0.c4, rt0.c0), ((rt0.c4) NOT BETWEEN (rt0.c0) AND (vt1.c0)), ((NULL) NOT BETWEEN (rt0.c1) AND (vt1.c0)))) AND ((x'', CASE vt1.c0  WHEN vt1.c0 THEN rt0.c2 ELSE rt0.c2 END, ((((rt0.c3)AND(rt0.c0)))OR(0.8848342596796)))))))) UNION SELECT DISTINCT * FROM vt1, rt0 WHERE ((((((rt0.c2, rt0.c2, '')) NOT BETWEEN ((json_patch(rt0.c4, rt0.c0), ((rt0.c4) NOT BETWEEN (rt0.c0) AND (vt1.c0)), ((NULL) NOT BETWEEN (rt0.c1) AND (vt1.c0)))) AND ((x'', CASE vt1.c0  WHEN vt1.c0 THEN rt0.c2 ELSE rt0.c2 END, ((((rt0.c3)AND(rt0.c0)))OR(0.8848342596796)))))) ISNULL));
SELECT DISTINCT * FROM vt1, rt0;
SELECT rt0.c2, rt0.c0 FROM rt0, vt1 GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0, vt1 WHERE (((rt0.c3) ISNULL) COLLATE RTRIM) GROUP BY rt0.c2, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c0 FROM rt0, vt1 WHERE ((NOT (((rt0.c3) ISNULL) COLLATE RTRIM))) GROUP BY rt0.c2, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c0 FROM rt0, vt1 WHERE (((((rt0.c3) ISNULL) COLLATE RTRIM) ISNULL)) GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM rt0, vt1 GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c0, vt1.c0, rt0.c2, rt0.c4, rt0.c1 FROM vt1, rt0 GROUP BY rt0.c0, vt1.c0, rt0.c2, rt0.c4, rt0.c1;
SELECT rt0.c0, vt1.c0, rt0.c2, rt0.c4, rt0.c1 FROM vt1, rt0 GROUP BY rt0.c0, vt1.c0, rt0.c2, rt0.c4, rt0.c1 HAVING ((GROUP_CONCAT(AVG(MIN(rt0.c0)))) NOT BETWEEN (CASE WHEN rt0.c2 THEN SUM(rt0.c1) WHEN TOTAL(MAX(TOTAL(rt0.c0))) THEN rt0.c0 WHEN rt0.c3 THEN AVG(x'') WHEN GROUP_CONCAT(rt0.c2) THEN rt0.c1 WHEN GROUP_CONCAT(vt1.c0) THEN vt1.c0 END) AND ((~ (0.12424322610414895)))) UNION ALL SELECT rt0.c0, vt1.c0, rt0.c2, rt0.c4, rt0.c1 FROM vt1, rt0 GROUP BY rt0.c0, vt1.c0, rt0.c2, rt0.c4, rt0.c1 HAVING (NOT (((GROUP_CONCAT(AVG(MIN(rt0.c0)))) NOT BETWEEN (CASE WHEN rt0.c2 THEN SUM(rt0.c1) WHEN TOTAL(MAX(TOTAL(rt0.c0))) THEN rt0.c0 WHEN rt0.c3 THEN AVG(x'') WHEN GROUP_CONCAT(rt0.c2) THEN rt0.c1 WHEN GROUP_CONCAT(vt1.c0) THEN vt1.c0 END) AND ((~ (0.12424322610414895)))))) UNION ALL SELECT rt0.c0, vt1.c0, rt0.c2, rt0.c4, rt0.c1 FROM vt1, rt0 GROUP BY rt0.c0, vt1.c0, rt0.c2, rt0.c4, rt0.c1 HAVING ((((GROUP_CONCAT(AVG(MIN(rt0.c0)))) NOT BETWEEN (CASE WHEN rt0.c2 THEN SUM(rt0.c1) WHEN TOTAL(MAX(TOTAL(rt0.c0))) THEN rt0.c0 WHEN rt0.c3 THEN AVG(x'') WHEN GROUP_CONCAT(rt0.c2) THEN rt0.c1 WHEN GROUP_CONCAT(vt1.c0) THEN vt1.c0 END) AND ((~ (0.12424322610414895))))) ISNULL);
SELECT rt0.c1 FROM rt0;
SELECT ALL rt0.c1 FROM rt0 WHERE ((NOT (((((((((1061872015)OR(rt0.c4)))OR(rt0.c0)))OR(rt0.c2)))OR(rt0.c4))))) UNION ALL SELECT ALL rt0.c1 FROM rt0 WHERE ((NOT ((NOT (((((((((1061872015)OR(rt0.c4)))OR(rt0.c0)))OR(rt0.c2)))OR(rt0.c4))))))) UNION ALL SELECT rt0.c1 FROM rt0 WHERE ((((NOT (((((((((1061872015)OR(rt0.c4)))OR(rt0.c0)))OR(rt0.c2)))OR(rt0.c4))))) ISNULL));
SELECT rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c0 FROM vt1 NATURAL JOIN rt0;
SELECT DISTINCT rt0.c0 FROM vt1 NATURAL JOIN rt0 WHERE ((((rt0.c1))=((rt0.c1))) COLLATE NOCASE) UNION SELECT DISTINCT rt0.c0 FROM vt1 NATURAL JOIN rt0 WHERE ((NOT ((((rt0.c1))=((rt0.c1))) COLLATE NOCASE))) UNION SELECT DISTINCT rt0.c0 FROM vt1 NATURAL JOIN rt0 WHERE ((((((rt0.c1))==((rt0.c1))) COLLATE NOCASE) ISNULL));
SELECT DISTINCT rt0.c0 FROM vt1 NATURAL JOIN rt0;
SELECT ALL vt1.c0, rt0.c0 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c0;
SELECT ALL vt1.c0, rt0.c0 FROM vt1, rt0 WHERE (((((rt0.c0) BETWEEN (rt0.c4) AND (rt0.c0))) IS TRUE)) GROUP BY vt1.c0, rt0.c0 UNION SELECT vt1.c0, rt0.c0 FROM vt1, rt0 WHERE ((NOT (((((rt0.c0) BETWEEN (rt0.c4) AND (rt0.c0))) IS TRUE)))) GROUP BY vt1.c0, rt0.c0 UNION SELECT ALL vt1.c0, rt0.c0 FROM vt1, rt0 WHERE (((((((rt0.c0) BETWEEN (rt0.c4) AND (rt0.c0))) IS TRUE)) ISNULL)) GROUP BY vt1.c0, rt0.c0;
SELECT ALL vt1.c0, rt0.c0 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c0;
SELECT rt0.c4, rt0.c3, rt0.c0 FROM rt0 NATURAL JOIN vt1 GROUP BY rt0.c4, rt0.c3, rt0.c0;
SELECT ALL rt0.c4, rt0.c3, rt0.c0 FROM rt0 NATURAL JOIN vt1 GROUP BY rt0.c4, rt0.c3, rt0.c0 HAVING (((MIN(COUNT(*)), CASE MIN(rt0.c4)  WHEN MIN(rt0.c2) THEN COUNT(*) END, CASE rt0.c1  WHEN MAX(MAX(0.011495398131247558)) THEN rt0.c3 END))>=((TOTAL(rt0.c0), CAST(0.7045573050089203 AS TEXT), AVG(rt0.c1)))) UNION ALL SELECT ALL rt0.c4, rt0.c3, rt0.c0 FROM rt0 NATURAL JOIN vt1 GROUP BY rt0.c4, rt0.c3, rt0.c0 HAVING (NOT ((((MIN(COUNT(*)), CASE MIN(rt0.c4)  WHEN MIN(rt0.c2) THEN COUNT(*) END, CASE rt0.c1  WHEN MAX(MAX(0.011495398131247558)) THEN rt0.c3 END))>=((TOTAL(rt0.c0), CAST(0.7045573050089203 AS TEXT), AVG(rt0.c1)))))) UNION ALL SELECT ALL rt0.c4, rt0.c3, rt0.c0 FROM rt0 NATURAL JOIN vt1 GROUP BY rt0.c4, rt0.c3, rt0.c0 HAVING (((((MIN(COUNT(*)), CASE MIN(rt0.c4)  WHEN MIN(rt0.c2) THEN COUNT(*) END, CASE rt0.c1  WHEN MAX(MAX(0.011495398131247558)) THEN rt0.c3 END))>=((TOTAL(rt0.c0), CAST(0.7045573050089203 AS TEXT), AVG(rt0.c1))))) ISNULL);
SELECT ALL * FROM rt0, vt1;
SELECT * FROM rt0, vt1 WHERE (CAST(CASE rt0.c0  WHEN rt0.c2 THEN rt0.c3 END AS TEXT)) UNION ALL SELECT * FROM rt0, vt1 WHERE ((NOT (CAST(CASE rt0.c0  WHEN rt0.c2 THEN rt0.c3 END AS TEXT)))) UNION ALL SELECT ALL * FROM rt0, vt1 WHERE (((CAST(CASE rt0.c0  WHEN rt0.c2 THEN rt0.c3 END AS TEXT)) ISNULL));
SELECT ALL * FROM rt0, vt1;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE ((((vt1.c0)) BETWEEN ((((vt1.c0) BETWEEN (' zbV-\n,(') AND (vt1.c0)))) AND ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)))) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT ((((vt1.c0)) BETWEEN ((((vt1.c0) BETWEEN (' zbV-\n,(') AND (vt1.c0)))) AND ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)))))) UNION SELECT DISTINCT * FROM vt1 WHERE ((((((vt1.c0)) BETWEEN ((((vt1.c0) BETWEEN (' zbV-\n,(') AND (vt1.c0)))) AND ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)))) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT ALL vt1.c0 FROM vt1, rt0 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1, rt0 WHERE (rt0.c3) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1, rt0 WHERE ((NOT (rt0.c3))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1, rt0 WHERE (((rt0.c3) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1, rt0 GROUP BY vt1.c0;
SELECT ALL rt0.c4, rt0.c3, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c4, rt0.c3, rt0.c0, rt0.c2;
SELECT rt0.c4, rt0.c3, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c4, rt0.c3, rt0.c0, rt0.c2 HAVING ((TOTAL(rt0.c2) COLLATE BINARY)IS(MAX(COUNT(MIN(MAX(MAX(rt0.c4))))))) UNION ALL SELECT rt0.c4, rt0.c3, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c4, rt0.c3, rt0.c0, rt0.c2 HAVING (NOT (((TOTAL(rt0.c2) COLLATE BINARY)IS(MAX(COUNT(MIN(MAX(MAX(rt0.c4))))))))) UNION ALL SELECT ALL rt0.c4, rt0.c3, rt0.c0, rt0.c2 FROM rt0 GROUP BY rt0.c4, rt0.c3, rt0.c0, rt0.c2 HAVING ((((TOTAL(rt0.c2) COLLATE BINARY)IS(MAX(COUNT(MIN(MAX(MAX(rt0.c4)))))))) ISNULL);
SELECT rt0.c1, rt0.c3, rt0.c2, rt0.c0, rt0.c4, vt1.c0 FROM vt1 RIGHT OUTER JOIN rt0 ON ((((vt1.c0)-(rt0.c2)))IS NOT((('-1281148893') NOT BETWEEN (rt0.c3) AND (rt0.c0))));
SELECT ALL rt0.c1, rt0.c3, rt0.c2, rt0.c0, rt0.c4, vt1.c0 FROM vt1 RIGHT OUTER JOIN rt0 ON ((((vt1.c0)-(rt0.c2)))IS NOT((('-1281148893') NOT BETWEEN (rt0.c3) AND (rt0.c0)))) WHERE (((((((((((rt0.c0)AND(rt0.c3)))OR(rt0.c0)))AND(rt0.c2)))AND(rt0.c0))) ISNULL)) UNION ALL SELECT ALL rt0.c1, rt0.c3, rt0.c2, rt0.c0, rt0.c4, vt1.c0 FROM vt1 RIGHT OUTER JOIN rt0 ON ((((vt1.c0)-(rt0.c2)))IS NOT((('-1281148893') NOT BETWEEN (rt0.c3) AND (rt0.c0)))) WHERE ((NOT (((((((((((rt0.c0)AND(rt0.c3)))OR(rt0.c0)))AND(rt0.c2)))AND(rt0.c0))) ISNULL)))) UNION ALL SELECT ALL rt0.c1, rt0.c3, rt0.c2, rt0.c0, rt0.c4, vt1.c0 FROM vt1 RIGHT OUTER JOIN rt0 ON ((((vt1.c0)-(rt0.c2)))IS NOT((('-1281148893') NOT BETWEEN (rt0.c3) AND (rt0.c0)))) WHERE (((((((((((((rt0.c0)AND(rt0.c3)))OR(rt0.c0)))AND(rt0.c2)))AND(rt0.c0))) ISNULL)) ISNULL));
SELECT rt0.c1, rt0.c3, rt0.c2, rt0.c0, rt0.c4, vt1.c0 FROM vt1 RIGHT OUTER JOIN rt0 ON ((((vt1.c0)-(rt0.c2)))IS NOT((('-1281148893') NOT BETWEEN (rt0.c3) AND (rt0.c0))));
SELECT DISTINCT rt0.c4, rt0.c1, rt0.c2, rt0.c3 FROM rt0, vt1;
SELECT DISTINCT rt0.c4, rt0.c1, rt0.c2, rt0.c3 FROM rt0, vt1 WHERE ((- (((((vt1.c0)OR(rt0.c4)))OR(rt0.c2))))) UNION SELECT DISTINCT rt0.c4, rt0.c1, rt0.c2, rt0.c3 FROM rt0, vt1 WHERE ((NOT ((- (((((vt1.c0)OR(rt0.c4)))OR(rt0.c2))))))) UNION SELECT DISTINCT rt0.c4, rt0.c1, rt0.c2, rt0.c3 FROM rt0, vt1 WHERE ((((- (((((vt1.c0)OR(rt0.c4)))OR(rt0.c2))))) ISNULL));
SELECT DISTINCT rt0.c4, rt0.c1, rt0.c2, rt0.c3 FROM rt0, vt1;
SELECT ALL rt0.c3, rt0.c1, rt0.c0, vt1.c0 FROM rt0, vt1 GROUP BY rt0.c3, rt0.c1, rt0.c0, vt1.c0;
SELECT ALL rt0.c3, rt0.c1, rt0.c0, vt1.c0 FROM rt0, vt1 WHERE (CASE x''  WHEN TRIM(DISTINCT rt0.c1, rt0.c3) THEN rt0.c1 END) GROUP BY rt0.c3, rt0.c1, rt0.c0, vt1.c0 UNION SELECT ALL rt0.c3, rt0.c1, rt0.c0, vt1.c0 FROM rt0, vt1 WHERE ((NOT (CASE x''  WHEN TRIM(DISTINCT rt0.c1, rt0.c3) THEN rt0.c1 END))) GROUP BY rt0.c3, rt0.c1, rt0.c0, vt1.c0 UNION SELECT ALL rt0.c3, rt0.c1, rt0.c0, vt1.c0 FROM rt0, vt1 WHERE (((CASE x''  WHEN TRIM(DISTINCT rt0.c1, rt0.c3) THEN rt0.c1 END) ISNULL)) GROUP BY rt0.c3, rt0.c1, rt0.c0, vt1.c0;
SELECT ALL rt0.c3, rt0.c1, rt0.c0, vt1.c0 FROM rt0, vt1 GROUP BY rt0.c3, rt0.c1, rt0.c0, vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0))) NOT BETWEEN (COUNT(COUNT(*))) AND (AVG(AVG(SUM(vt1.c0))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (((((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0))) NOT BETWEEN (COUNT(COUNT(*))) AND (AVG(AVG(SUM(vt1.c0))))))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((((((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0))) NOT BETWEEN (COUNT(COUNT(*))) AND (AVG(AVG(SUM(vt1.c0)))))) ISNULL);
SELECT MAX(((vt1.c0 IN ()) IN ())) FROM vt1, rt0;
SELECT rt0.c2, rt0.c0, vt1.c0, rt0.c4, rt0.c3 FROM vt1, rt0;
SELECT ALL rt0.c2, rt0.c0, vt1.c0, rt0.c4, rt0.c3 FROM vt1, rt0 WHERE (((rt0.c4) IS FALSE) COLLATE BINARY) UNION ALL SELECT ALL rt0.c2, rt0.c0, vt1.c0, rt0.c4, rt0.c3 FROM vt1, rt0 WHERE ((NOT (((rt0.c4) IS FALSE) COLLATE BINARY))) UNION ALL SELECT ALL rt0.c2, rt0.c0, vt1.c0, rt0.c4, rt0.c3 FROM vt1, rt0 WHERE (((((rt0.c4) IS FALSE) COLLATE BINARY) ISNULL));
SELECT rt0.c2, rt0.c0, vt1.c0, rt0.c4, rt0.c3 FROM vt1, rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((~ (CAST(rt0.c1 AS BLOB)))) UNION SELECT DISTINCT * FROM rt0 NOT INDEXED WHERE ((NOT ((~ (CAST(rt0.c1 AS BLOB)))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((~ (CAST(rt0.c1 AS BLOB)))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE (((((((((((vt1.c0)AND(vt1.c0)))AND('0.5182456224577696')))AND(vt1.c0)))OR(vt1.c0))) BETWEEN (vt1.c0) AND (((vt1.c0) NOT NULL)))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (((((((((((vt1.c0)AND(vt1.c0)))AND('0.5182456224577696')))AND(vt1.c0)))OR(vt1.c0))) BETWEEN (vt1.c0) AND (((vt1.c0) NOT NULL)))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE (((((((((((((vt1.c0)AND(vt1.c0)))AND('0.5182456224577696')))AND(vt1.c0)))OR(vt1.c0))) BETWEEN (vt1.c0) AND (((vt1.c0) NOT NULL)))) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL rt0.c3, rt0.c4 FROM rt0, vt1 GROUP BY rt0.c3, rt0.c4;
SELECT ALL rt0.c3, rt0.c4 FROM rt0, vt1 GROUP BY rt0.c3, rt0.c4 HAVING SQLITE_VERSION() UNION ALL SELECT rt0.c3, rt0.c4 FROM rt0, vt1 GROUP BY rt0.c3, rt0.c4 HAVING (NOT (SQLITE_VERSION())) UNION ALL SELECT ALL rt0.c3, rt0.c4 FROM rt0, vt1 GROUP BY rt0.c3, rt0.c4 HAVING ((SQLITE_VERSION()) ISNULL);
SELECT ALL rt0.c3, rt0.c4 FROM rt0, vt1 GROUP BY rt0.c3, rt0.c4;
SELECT ALL rt0.c3, rt0.c4 FROM rt0, vt1 GROUP BY rt0.c3, rt0.c4 HAVING SQLITE_VERSION() UNION ALL SELECT rt0.c3, rt0.c4 FROM rt0, vt1 GROUP BY rt0.c3, rt0.c4 HAVING (NOT (SQLITE_VERSION())) UNION ALL SELECT ALL rt0.c3, rt0.c4 FROM rt0, vt1 GROUP BY rt0.c3, rt0.c4 HAVING ((SQLITE_VERSION()) ISNULL);
SELECT ALL rt0.c3, rt0.c4 FROM rt0, vt1 GROUP BY rt0.c3, rt0.c4;
SELECT ALL vt1.c0 FROM vt1;
SELECT vt1.c0 FROM vt1 WHERE (((((CAST(vt1.c0 AS INTEGER))AND(((((((((((((vt1.c0)AND(0xffffffffad3c335a)))OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))))AND(vt1.c0))) UNION ALL SELECT vt1.c0 FROM vt1 WHERE ((NOT (((((CAST(vt1.c0 AS INTEGER))AND(((((((((((((vt1.c0)AND(0Xffffffffad3c335a)))OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))))AND(vt1.c0))))) UNION ALL SELECT vt1.c0 FROM vt1 WHERE (((((((CAST(vt1.c0 AS INTEGER))AND(((((((((((((vt1.c0)AND(0xffffffffad3c335a)))OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))))AND(vt1.c0))) ISNULL));
SELECT ALL vt1.c0 FROM vt1;
SELECT DISTINCT * FROM vt1, rt0;
SELECT DISTINCT * FROM vt1, rt0 WHERE (((((((((((((vt1.c0)OR(rt0.c0)))OR(rt0.c0)))OR(CAST(rt0.c3 AS REAL))))OR(((rt0.c1) IS FALSE))))AND(((vt1.c0) NOT NULL))))OR(LOWER(rt0.c1)))) UNION SELECT DISTINCT * FROM vt1, rt0 WHERE ((NOT (((((((((((((vt1.c0)OR(rt0.c0)))OR(rt0.c0)))OR(CAST(rt0.c3 AS REAL))))OR(((rt0.c1) IS FALSE))))AND(((vt1.c0) NOT NULL))))OR(LOWER(rt0.c1)))))) UNION SELECT DISTINCT * FROM vt1, rt0 WHERE (((((((((((((((vt1.c0)OR(rt0.c0)))OR(rt0.c0)))OR(CAST(rt0.c3 AS REAL))))OR(((rt0.c1) IS FALSE))))AND(((vt1.c0) NOT NULL))))OR(LOWER(rt0.c1)))) ISNULL));
SELECT DISTINCT * FROM vt1, rt0;
SELECT rt0.c4, vt1.c0, rt0.c1, rt0.c3 FROM rt0, vt1 GROUP BY rt0.c4, vt1.c0, rt0.c1, rt0.c3;
SELECT rt0.c4, vt1.c0, rt0.c1, rt0.c3 FROM rt0, vt1 WHERE (((((((((((rt0.c3)OR(rt0.c4)))OR(rt0.c0)))OR(NULL)))AND(rt0.c0)))<<(((vt1.c0)=(rt0.c0))))) GROUP BY rt0.c4, vt1.c0, rt0.c1, rt0.c3 UNION SELECT ALL rt0.c4, vt1.c0, rt0.c1, rt0.c3 FROM rt0, vt1 WHERE ((NOT (((((((((((rt0.c3)OR(rt0.c4)))OR(rt0.c0)))OR(NULL)))AND(rt0.c0)))<<(((vt1.c0)==(rt0.c0))))))) GROUP BY rt0.c4, vt1.c0, rt0.c1, rt0.c3 UNION SELECT ALL rt0.c4, vt1.c0, rt0.c1, rt0.c3 FROM rt0, vt1 WHERE (((((((((((((rt0.c3)OR(rt0.c4)))OR(rt0.c0)))OR(NULL)))AND(rt0.c0)))<<(((vt1.c0)=(rt0.c0))))) ISNULL)) GROUP BY rt0.c4, vt1.c0, rt0.c1, rt0.c3;
SELECT rt0.c4, vt1.c0, rt0.c1, rt0.c3 FROM rt0, vt1 GROUP BY rt0.c4, vt1.c0, rt0.c1, rt0.c3;
SELECT ALL rt0.c2, rt0.c4 FROM rt0 NOT INDEXED GROUP BY rt0.c2, rt0.c4;
SELECT rt0.c2, rt0.c4 FROM rt0 GROUP BY rt0.c2, rt0.c4 HAVING (((rt0.c1, COUNT(x''), rt0.c4, AVG(rt0.c2), rt0.c4, rt0.c3, rt0.c3)) NOT BETWEEN (((rt0.c3 IN ()), MIN(rt0.c4), MIN(GROUP_CONCAT(TOTAL(rt0.c4))), AVG(AVG(rt0.c2)), COUNT(*), ((COUNT(*))<>(rt0.c0)), COUNT(*))) AND ((MAX(rt0.c1), SUM(rt0.c1), ((((rt0.c4)OR(rt0.c3)))AND(rt0.c0)), ((((SUM(rt0.c2))AND(rt0.c0)))OR(rt0.c4)), TOTAL(AVG(COUNT(SUM(rt0.c3)))), ((COUNT(*))LIKE(rt0.c2)), CAST(AVG(GROUP_CONCAT(rt0.c3)) AS REAL)))) UNION ALL SELECT ALL rt0.c2, rt0.c4 FROM rt0 GROUP BY rt0.c2, rt0.c4 HAVING (NOT ((((rt0.c1, COUNT(x''), rt0.c4, AVG(rt0.c2), rt0.c4, rt0.c3, rt0.c3)) NOT BETWEEN (((rt0.c3 IN ()), MIN(rt0.c4), MIN(GROUP_CONCAT(TOTAL(rt0.c4))), AVG(AVG(rt0.c2)), COUNT(*), ((COUNT(*))<>(rt0.c0)), COUNT(*))) AND ((MAX(rt0.c1), SUM(rt0.c1), ((((rt0.c4)OR(rt0.c3)))AND(rt0.c0)), ((((SUM(rt0.c2))AND(rt0.c0)))OR(rt0.c4)), TOTAL(AVG(COUNT(SUM(rt0.c3)))), ((COUNT(*))LIKE(rt0.c2)), CAST(AVG(GROUP_CONCAT(rt0.c3)) AS REAL)))))) UNION ALL SELECT ALL rt0.c2, rt0.c4 FROM rt0 GROUP BY rt0.c2, rt0.c4 HAVING (((((rt0.c1, COUNT(x''), rt0.c4, AVG(rt0.c2), rt0.c4, rt0.c3, rt0.c3)) NOT BETWEEN (((rt0.c3 IN ()), MIN(rt0.c4), MIN(GROUP_CONCAT(TOTAL(rt0.c4))), AVG(AVG(rt0.c2)), COUNT(*), ((COUNT(*))!=(rt0.c0)), COUNT(*))) AND ((MAX(rt0.c1), SUM(rt0.c1), ((((rt0.c4)OR(rt0.c3)))AND(rt0.c0)), ((((SUM(rt0.c2))AND(rt0.c0)))OR(rt0.c4)), TOTAL(AVG(COUNT(SUM(rt0.c3)))), ((COUNT(*))LIKE(rt0.c2)), CAST(AVG(GROUP_CONCAT(rt0.c3)) AS REAL))))) ISNULL);
SELECT ALL MAX(TYPEOF(((rt0.c0) NOTNULL))) FROM rt0 ORDER BY rt0.c1  NULLS LAST;
SELECT ALL vt1.c0 FROM vt1;
SELECT vt1.c0 FROM vt1 WHERE ((((vt1.c0))<=((vt1.c0 COLLATE NOCASE)))) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT ((((vt1.c0))<=((vt1.c0 COLLATE NOCASE)))))) UNION ALL SELECT vt1.c0 FROM vt1 WHERE ((((((vt1.c0))<=((vt1.c0 COLLATE NOCASE)))) ISNULL));
SELECT ALL vt1.c0 FROM vt1;
SELECT DISTINCT rt0.c2, rt0.c3, rt0.c4 FROM vt1, rt0;
SELECT DISTINCT rt0.c2, rt0.c3, rt0.c4 FROM vt1, rt0 WHERE ((((vt1.c0 IN ()))OR(NULL COLLATE NOCASE))) UNION SELECT DISTINCT rt0.c2, rt0.c3, rt0.c4 FROM vt1, rt0 WHERE ((NOT ((((vt1.c0 IN ()))OR(NULL COLLATE NOCASE))))) UNION SELECT DISTINCT rt0.c2, rt0.c3, rt0.c4 FROM vt1, rt0 WHERE ((((((vt1.c0 IN ()))OR(NULL COLLATE NOCASE))) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c3, rt0.c4 FROM vt1, rt0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE (1686206959) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (1686206959))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE (((1686206959) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT rt0.c3, rt0.c0 FROM rt0 GROUP BY rt0.c3, rt0.c0;
SELECT ALL rt0.c3, rt0.c0 FROM rt0 GROUP BY rt0.c3, rt0.c0 HAVING (NOT (TOTAL(rt0.c4))) UNION ALL SELECT ALL rt0.c3, rt0.c0 FROM rt0 GROUP BY rt0.c3, rt0.c0 HAVING (NOT ((NOT (TOTAL(rt0.c4))))) UNION ALL SELECT rt0.c3, rt0.c0 FROM rt0 GROUP BY rt0.c3, rt0.c0 HAVING (((NOT (TOTAL(rt0.c4)))) ISNULL);
SELECT rt0.c3, rt0.c0 FROM rt0 GROUP BY rt0.c3, rt0.c0;
SELECT ALL rt0.c3, rt0.c0 FROM rt0 GROUP BY rt0.c3, rt0.c0 HAVING (NOT (TOTAL(rt0.c4))) UNION ALL SELECT ALL rt0.c3, rt0.c0 FROM rt0 GROUP BY rt0.c3, rt0.c0 HAVING (NOT ((NOT (TOTAL(rt0.c4))))) UNION ALL SELECT rt0.c3, rt0.c0 FROM rt0 GROUP BY rt0.c3, rt0.c0 HAVING (((NOT (TOTAL(rt0.c4)))) ISNULL);
SELECT rt0.c3, rt0.c0 FROM rt0 GROUP BY rt0.c3, rt0.c0;
SELECT * FROM vt1;
SELECT ALL * FROM vt1 WHERE (((vt1.c0) BETWEEN (CAST(vt1.c0 AS NUMERIC)) AND ((vt1.c0 IN ())))) UNION ALL SELECT ALL * FROM vt1 WHERE ((NOT (((vt1.c0) BETWEEN (CAST(vt1.c0 AS NUMERIC)) AND ((vt1.c0 IN ())))))) UNION ALL SELECT ALL * FROM vt1 WHERE (((((vt1.c0) BETWEEN (CAST(vt1.c0 AS NUMERIC)) AND ((vt1.c0 IN ())))) ISNULL));
SELECT * FROM vt1;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (UNICODE(rt0.c2) COLLATE NOCASE) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (UNICODE(rt0.c2) COLLATE NOCASE))) UNION SELECT DISTINCT * FROM rt0 WHERE (((UNICODE(rt0.c2) COLLATE NOCASE) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c0, rt0.c3 FROM rt0 GROUP BY rt0.c0, rt0.c3;
SELECT ALL rt0.c0, rt0.c3 FROM rt0 WHERE (TYPEOF(DISTINCT rt0.c2) COLLATE RTRIM) GROUP BY rt0.c0, rt0.c3 UNION SELECT rt0.c0, rt0.c3 FROM rt0 WHERE ((NOT (TYPEOF(DISTINCT rt0.c2) COLLATE RTRIM))) GROUP BY rt0.c0, rt0.c3 UNION SELECT ALL rt0.c0, rt0.c3 FROM rt0 WHERE (((TYPEOF(DISTINCT rt0.c2) COLLATE RTRIM) ISNULL)) GROUP BY rt0.c0, rt0.c3;
SELECT rt0.c0, rt0.c3 FROM rt0 GROUP BY rt0.c0, rt0.c3;
SELECT rt0.c2, rt0.c3, rt0.c1 FROM vt1 INNER JOIN rt0 ON rt0.c0 COLLATE NOCASE GROUP BY rt0.c2, rt0.c3, rt0.c1;
SELECT rt0.c2, rt0.c3, rt0.c1 FROM vt1 INNER JOIN rt0 ON rt0.c0 COLLATE NOCASE GROUP BY rt0.c2, rt0.c3, rt0.c1 HAVING SUM(vt1.c0) COLLATE RTRIM UNION ALL SELECT ALL rt0.c2, rt0.c3, rt0.c1 FROM vt1 INNER JOIN rt0 ON rt0.c0 COLLATE NOCASE GROUP BY rt0.c2, rt0.c3, rt0.c1 HAVING (NOT (SUM(vt1.c0) COLLATE RTRIM)) UNION ALL SELECT rt0.c2, rt0.c3, rt0.c1 FROM vt1 INNER JOIN rt0 ON rt0.c0 COLLATE NOCASE GROUP BY rt0.c2, rt0.c3, rt0.c1 HAVING ((SUM(vt1.c0) COLLATE RTRIM) ISNULL);
SELECT rt0.c2, rt0.c3, rt0.c1 FROM vt1 INNER JOIN rt0 ON rt0.c0 COLLATE NOCASE GROUP BY rt0.c2, rt0.c3, rt0.c1;
SELECT rt0.c2, rt0.c3, rt0.c1 FROM vt1 INNER JOIN rt0 ON rt0.c0 COLLATE NOCASE GROUP BY rt0.c2, rt0.c3, rt0.c1 HAVING SUM(vt1.c0) COLLATE RTRIM UNION ALL SELECT ALL rt0.c2, rt0.c3, rt0.c1 FROM vt1 INNER JOIN rt0 ON rt0.c0 COLLATE NOCASE GROUP BY rt0.c2, rt0.c3, rt0.c1 HAVING (NOT (SUM(vt1.c0) COLLATE RTRIM)) UNION ALL SELECT rt0.c2, rt0.c3, rt0.c1 FROM vt1 INNER JOIN rt0 ON rt0.c0 COLLATE NOCASE GROUP BY rt0.c2, rt0.c3, rt0.c1 HAVING ((SUM(vt1.c0) COLLATE RTRIM) ISNULL);
SELECT rt0.c2, rt0.c3, rt0.c1 FROM vt1 INNER JOIN rt0 ON rt0.c0 COLLATE NOCASE GROUP BY rt0.c2, rt0.c3, rt0.c1;
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE ((((rt0.c1)) BETWEEN (((((('1982913612')AND(rt0.c2)))OR(rt0.c0)))) AND (((((rt0.c3))<=((rt0.c1))))))) UNION ALL SELECT * FROM rt0 WHERE ((NOT ((((rt0.c1)) BETWEEN (((((('1982913612')AND(rt0.c2)))OR(rt0.c0)))) AND (((((rt0.c3))<=((rt0.c1))))))))) UNION ALL SELECT * FROM rt0 WHERE ((((((rt0.c1)) BETWEEN (((((('1982913612')AND(rt0.c2)))OR(rt0.c0)))) AND (((((rt0.c3))<=((rt0.c1))))))) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c4, rt0.c0, rt0.c2, rt0.c3 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c4, rt0.c0, rt0.c2, rt0.c3 FROM rt0 WHERE (((((rt0.c2)AND(rt0.c1)))AND(rt0.c0)) COLLATE RTRIM) UNION SELECT DISTINCT rt0.c1, rt0.c4, rt0.c0, rt0.c2, rt0.c3 FROM rt0 WHERE ((NOT (((((rt0.c2)AND(rt0.c1)))AND(rt0.c0)) COLLATE RTRIM))) UNION SELECT DISTINCT rt0.c1, rt0.c4, rt0.c0, rt0.c2, rt0.c3 FROM rt0 WHERE (((((((rt0.c2)AND(rt0.c1)))AND(rt0.c0)) COLLATE RTRIM) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c4, rt0.c0, rt0.c2, rt0.c3 FROM rt0;
SELECT ALL rt0.c3, rt0.c0, vt1.c0, rt0.c2, rt0.c4, rt0.c1 FROM rt0, vt1 GROUP BY rt0.c3, rt0.c0, vt1.c0, rt0.c2, rt0.c4, rt0.c1;
SELECT ALL rt0.c3, rt0.c0, vt1.c0, rt0.c2, rt0.c4, rt0.c1 FROM rt0, vt1 WHERE ((- (((rt0.c3) IS TRUE)))) GROUP BY rt0.c3, rt0.c0, vt1.c0, rt0.c2, rt0.c4, rt0.c1 UNION SELECT ALL rt0.c3, rt0.c0, vt1.c0, rt0.c2, rt0.c4, rt0.c1 FROM rt0, vt1 WHERE ((NOT ((- (((rt0.c3) IS TRUE)))))) GROUP BY rt0.c3, rt0.c0, vt1.c0, rt0.c2, rt0.c4, rt0.c1 UNION SELECT rt0.c3, rt0.c0, vt1.c0, rt0.c2, rt0.c4, rt0.c1 FROM rt0, vt1 WHERE ((((- (((rt0.c3) IS TRUE)))) ISNULL)) GROUP BY rt0.c3, rt0.c0, vt1.c0, rt0.c2, rt0.c4, rt0.c1;
SELECT ALL rt0.c3, rt0.c0, vt1.c0, rt0.c2, rt0.c4, rt0.c1 FROM rt0, vt1 GROUP BY rt0.c3, rt0.c0, vt1.c0, rt0.c2, rt0.c4, rt0.c1;
SELECT ALL vt1.c0, rt0.c2, rt0.c1, rt0.c4, rt0.c3 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c2, rt0.c1, rt0.c4, rt0.c3;
SELECT vt1.c0, rt0.c2, rt0.c1, rt0.c4, rt0.c3 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c2, rt0.c1, rt0.c4, rt0.c3 HAVING 'L3*' UNION ALL SELECT vt1.c0, rt0.c2, rt0.c1, rt0.c4, rt0.c3 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c2, rt0.c1, rt0.c4, rt0.c3 HAVING (NOT ('L3*')) UNION ALL SELECT vt1.c0, rt0.c2, rt0.c1, rt0.c4, rt0.c3 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c2, rt0.c1, rt0.c4, rt0.c3 HAVING (('L3*') ISNULL);
SELECT ALL vt1.c0, rt0.c2, rt0.c1, rt0.c4, rt0.c3 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c2, rt0.c1, rt0.c4, rt0.c3;
SELECT vt1.c0, rt0.c2, rt0.c1, rt0.c4, rt0.c3 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c2, rt0.c1, rt0.c4, rt0.c3 HAVING 'L3*' UNION ALL SELECT vt1.c0, rt0.c2, rt0.c1, rt0.c4, rt0.c3 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c2, rt0.c1, rt0.c4, rt0.c3 HAVING (NOT ('L3*')) UNION ALL SELECT vt1.c0, rt0.c2, rt0.c1, rt0.c4, rt0.c3 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c2, rt0.c1, rt0.c4, rt0.c3 HAVING (('L3*') ISNULL);
SELECT ALL vt1.c0, rt0.c2, rt0.c1, rt0.c4, rt0.c3 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c2, rt0.c1, rt0.c4, rt0.c3;
SELECT ALL * FROM vt1 RIGHT OUTER JOIN rt0 ON (~ (rt0.c2 COLLATE NOCASE));
SELECT ALL * FROM vt1 RIGHT OUTER JOIN rt0 ON (~ (rt0.c2 COLLATE NOCASE)) WHERE (rt0.c1) UNION ALL SELECT ALL * FROM vt1 RIGHT OUTER JOIN rt0 ON (~ (rt0.c2 COLLATE NOCASE)) WHERE ((NOT (rt0.c1))) UNION ALL SELECT * FROM vt1 RIGHT OUTER JOIN rt0 ON (~ (rt0.c2 COLLATE NOCASE)) WHERE (((rt0.c1) ISNULL));
SELECT ALL * FROM vt1 RIGHT OUTER JOIN rt0 ON (~ (rt0.c2 COLLATE NOCASE));
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (0.8733486825469495) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (0.8733486825469495))) UNION SELECT DISTINCT * FROM rt0 WHERE (((0.8733486825469495) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c3, rt0.c2, rt0.c1, vt1.c0, rt0.c4 FROM vt1, rt0 GROUP BY rt0.c3, rt0.c2, rt0.c1, vt1.c0, rt0.c4;
SELECT ALL rt0.c3, rt0.c2, rt0.c1, vt1.c0, rt0.c4 FROM vt1, rt0 WHERE (CASE WHEN rt0.c2 THEN rt0.c4 ELSE rt0.c1 END COLLATE NOCASE) GROUP BY rt0.c3, rt0.c2, rt0.c1, vt1.c0, rt0.c4 UNION SELECT ALL rt0.c3, rt0.c2, rt0.c1, vt1.c0, rt0.c4 FROM vt1, rt0 WHERE ((NOT (CASE WHEN rt0.c2 THEN rt0.c4 ELSE rt0.c1 END COLLATE NOCASE))) GROUP BY rt0.c3, rt0.c2, rt0.c1, vt1.c0, rt0.c4 UNION SELECT rt0.c3, rt0.c2, rt0.c1, vt1.c0, rt0.c4 FROM vt1, rt0 WHERE (((CASE WHEN rt0.c2 THEN rt0.c4 ELSE rt0.c1 END COLLATE NOCASE) ISNULL)) GROUP BY rt0.c3, rt0.c2, rt0.c1, vt1.c0, rt0.c4;
SELECT rt0.c3, rt0.c2, rt0.c1, vt1.c0, rt0.c4 FROM vt1, rt0 GROUP BY rt0.c3, rt0.c2, rt0.c1, vt1.c0, rt0.c4;
SELECT ALL rt0.c4, rt0.c3, rt0.c1 FROM vt1, rt0 GROUP BY rt0.c4, rt0.c3, rt0.c1;
SELECT ALL rt0.c4, rt0.c3, rt0.c1 FROM vt1, rt0 GROUP BY rt0.c4, rt0.c3, rt0.c1 HAVING TOTAL(GROUP_CONCAT(vt1.c0) COLLATE RTRIM) UNION ALL SELECT ALL rt0.c4, rt0.c3, rt0.c1 FROM vt1, rt0 GROUP BY rt0.c4, rt0.c3, rt0.c1 HAVING (NOT (TOTAL(GROUP_CONCAT(vt1.c0) COLLATE RTRIM))) UNION ALL SELECT ALL rt0.c4, rt0.c3, rt0.c1 FROM vt1, rt0 GROUP BY rt0.c4, rt0.c3, rt0.c1 HAVING ((TOTAL(GROUP_CONCAT(vt1.c0) COLLATE RTRIM)) ISNULL);
SELECT ALL vt1.c0 FROM vt1;
SELECT vt1.c0 FROM vt1 WHERE (CASE ((vt1.c0) BETWEEN (x'') AND (vt1.c0))  WHEN (('1*7G^3[')=(vt1.c0)) THEN CAST(vt1.c0 AS BLOB) ELSE ((vt1.c0) NOTNULL) END) UNION ALL SELECT vt1.c0 FROM vt1 WHERE ((NOT (CASE ((vt1.c0) BETWEEN (x'') AND (vt1.c0))  WHEN (('1*7G^3[')==(vt1.c0)) THEN CAST(vt1.c0 AS BLOB) ELSE ((vt1.c0) NOTNULL) END))) UNION ALL SELECT vt1.c0 FROM vt1 WHERE (((CASE ((vt1.c0) BETWEEN (x'') AND (vt1.c0))  WHEN (('1*7G^3[')==(vt1.c0)) THEN CAST(vt1.c0 AS BLOB) ELSE ((vt1.c0) NOTNULL) END) ISNULL));
SELECT ALL vt1.c0 FROM vt1;
SELECT DISTINCT rt0.c0, rt0.c3, rt0.c4, vt1.c0 FROM rt0, vt1;
SELECT DISTINCT rt0.c0, rt0.c3, rt0.c4, vt1.c0 FROM rt0, vt1 WHERE (CASE WHEN rt0.c1 COLLATE RTRIM THEN CASE rt0.c4  WHEN rt0.c3 THEN vt1.c0 END ELSE ((rt0.c1) NOTNULL) END) UNION SELECT DISTINCT rt0.c0, rt0.c3, rt0.c4, vt1.c0 FROM rt0, vt1 WHERE ((NOT (CASE WHEN rt0.c1 COLLATE RTRIM THEN CASE rt0.c4  WHEN rt0.c3 THEN vt1.c0 END ELSE ((rt0.c1) NOTNULL) END))) UNION SELECT DISTINCT rt0.c0, rt0.c3, rt0.c4, vt1.c0 FROM rt0, vt1 WHERE (((CASE WHEN rt0.c1 COLLATE RTRIM THEN CASE rt0.c4  WHEN rt0.c3 THEN vt1.c0 END ELSE ((rt0.c1) NOTNULL) END) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c3, rt0.c4, vt1.c0 FROM rt0, vt1;
SELECT rt0.c4, rt0.c3 FROM rt0 LEFT OUTER JOIN vt1 ON (CASE WHEN rt0.c1 THEN 0.7186552469131132 WHEN rt0.c4 THEN rt0.c0 WHEN rt0.c4 THEN vt1.c0 ELSE 0xffffffff9fe2b58b END IN ()) GROUP BY rt0.c4, rt0.c3;
SELECT rt0.c4, rt0.c3 FROM rt0 LEFT OUTER JOIN vt1 ON (CASE WHEN rt0.c1 THEN 0.7186552469131132 WHEN rt0.c4 THEN rt0.c0 WHEN rt0.c4 THEN vt1.c0 ELSE 0xffffffff9fe2b58b END IN ()) WHERE (rt0.c3) GROUP BY rt0.c4, rt0.c3 UNION SELECT rt0.c4, rt0.c3 FROM rt0 LEFT OUTER JOIN vt1 ON (CASE WHEN rt0.c1 THEN 0.7186552469131132 WHEN rt0.c4 THEN rt0.c0 WHEN rt0.c4 THEN vt1.c0 ELSE 0Xffffffff9fe2b58b END IN ()) WHERE ((NOT (rt0.c3))) GROUP BY rt0.c4, rt0.c3 UNION SELECT rt0.c4, rt0.c3 FROM rt0 LEFT OUTER JOIN vt1 ON (CASE WHEN rt0.c1 THEN 0.7186552469131132 WHEN rt0.c4 THEN rt0.c0 WHEN rt0.c4 THEN vt1.c0 ELSE 0Xffffffff9fe2b58b END IN ()) WHERE (((rt0.c3) ISNULL)) GROUP BY rt0.c4, rt0.c3;
SELECT rt0.c4, rt0.c3 FROM rt0 LEFT OUTER JOIN vt1 ON (CASE WHEN rt0.c1 THEN 0.7186552469131132 WHEN rt0.c4 THEN rt0.c0 WHEN rt0.c4 THEN vt1.c0 ELSE 0xffffffff9fe2b58b END IN ()) GROUP BY rt0.c4, rt0.c3;
SELECT rt0.c1, rt0.c3, rt0.c2 FROM vt1, rt0 GROUP BY rt0.c1, rt0.c3, rt0.c2;
SELECT rt0.c1, rt0.c3, rt0.c2 FROM vt1, rt0 GROUP BY rt0.c1, rt0.c3, rt0.c2 HAVING SUM(MAX(COUNT(*))) UNION ALL SELECT ALL rt0.c1, rt0.c3, rt0.c2 FROM vt1, rt0 GROUP BY rt0.c1, rt0.c3, rt0.c2 HAVING (NOT (SUM(MAX(COUNT(*))))) UNION ALL SELECT ALL rt0.c1, rt0.c3, rt0.c2 FROM vt1, rt0 GROUP BY rt0.c1, rt0.c3, rt0.c2 HAVING ((SUM(MAX(COUNT(*)))) ISNULL);
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE (((((((((CAST(rt0.c2 AS REAL))AND(TRIM(DISTINCT rt0.c0, rt0.c4))))AND('1351679992')))OR((rt0.c1 IN ()))))OR(((rt0.c1)IS NOT(rt0.c4))))) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (((((((((CAST(rt0.c2 AS REAL))AND(TRIM(DISTINCT rt0.c0, rt0.c4))))AND('1351679992')))OR((rt0.c1 IN ()))))OR(((rt0.c1)IS NOT(rt0.c4))))))) UNION ALL SELECT ALL * FROM rt0 WHERE (((((((((((CAST(rt0.c2 AS REAL))AND(TRIM(DISTINCT rt0.c0, rt0.c4))))AND('1351679992')))OR((rt0.c1 IN ()))))OR(((rt0.c1)IS NOT(rt0.c4))))) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c3 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c3 FROM rt0 WHERE (rt0.c4) UNION SELECT DISTINCT rt0.c1, rt0.c3 FROM rt0 WHERE ((NOT (rt0.c4))) UNION SELECT DISTINCT rt0.c1, rt0.c3 FROM rt0 WHERE (((rt0.c4) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c3 FROM rt0;
SELECT rt0.c1, vt1.c0, rt0.c4, rt0.c2, rt0.c0 FROM rt0, vt1 GROUP BY rt0.c1, vt1.c0, rt0.c4, rt0.c2, rt0.c0;
SELECT rt0.c1, vt1.c0, rt0.c4, rt0.c2, rt0.c0 FROM rt0, vt1 WHERE (((((rt0.c1)>(rt0.c4))) NOT BETWEEN (((rt0.c1)+(rt0.c4))) AND (CAST(rt0.c2 AS REAL)))) GROUP BY rt0.c1, vt1.c0, rt0.c4, rt0.c2, rt0.c0 UNION SELECT rt0.c1, vt1.c0, rt0.c4, rt0.c2, rt0.c0 FROM rt0, vt1 WHERE ((NOT (((((rt0.c1)>(rt0.c4))) NOT BETWEEN (((rt0.c1)+(rt0.c4))) AND (CAST(rt0.c2 AS REAL)))))) GROUP BY rt0.c1, vt1.c0, rt0.c4, rt0.c2, rt0.c0 UNION SELECT rt0.c1, vt1.c0, rt0.c4, rt0.c2, rt0.c0 FROM rt0, vt1 WHERE (((((((rt0.c1)>(rt0.c4))) NOT BETWEEN (((rt0.c1)+(rt0.c4))) AND (CAST(rt0.c2 AS REAL)))) ISNULL)) GROUP BY rt0.c1, vt1.c0, rt0.c4, rt0.c2, rt0.c0;
SELECT rt0.c1, vt1.c0, rt0.c4, rt0.c2, rt0.c0 FROM rt0, vt1 GROUP BY rt0.c1, vt1.c0, rt0.c4, rt0.c2, rt0.c0;
SELECT ALL rt0.c4, rt0.c1, rt0.c2, rt0.c3, rt0.c0 FROM rt0 GROUP BY rt0.c4, rt0.c1, rt0.c2, rt0.c3, rt0.c0;
SELECT rt0.c4, rt0.c1, rt0.c2, rt0.c3, rt0.c0 FROM rt0 GROUP BY rt0.c4, rt0.c1, rt0.c2, rt0.c3, rt0.c0 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c4, rt0.c1, rt0.c2, rt0.c3, rt0.c0 FROM rt0 GROUP BY rt0.c4, rt0.c1, rt0.c2, rt0.c3, rt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c4, rt0.c1, rt0.c2, rt0.c3, rt0.c0 FROM rt0 GROUP BY rt0.c4, rt0.c1, rt0.c2, rt0.c3, rt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c4, rt0.c1, rt0.c2, rt0.c3, rt0.c0 FROM rt0 GROUP BY rt0.c4, rt0.c1, rt0.c2, rt0.c3, rt0.c0;
SELECT rt0.c4, rt0.c1, rt0.c2, rt0.c3, rt0.c0 FROM rt0 GROUP BY rt0.c4, rt0.c1, rt0.c2, rt0.c3, rt0.c0 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c4, rt0.c1, rt0.c2, rt0.c3, rt0.c0 FROM rt0 GROUP BY rt0.c4, rt0.c1, rt0.c2, rt0.c3, rt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c4, rt0.c1, rt0.c2, rt0.c3, rt0.c0 FROM rt0 GROUP BY rt0.c4, rt0.c1, rt0.c2, rt0.c3, rt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c4, rt0.c1, rt0.c2, rt0.c3, rt0.c0 FROM rt0 GROUP BY rt0.c4, rt0.c1, rt0.c2, rt0.c3, rt0.c0;
SELECT ALL rt0.c2, rt0.c1, rt0.c4, rt0.c3, rt0.c0 FROM rt0;
SELECT ALL rt0.c2, rt0.c1, rt0.c4, rt0.c3, rt0.c0 FROM rt0 WHERE (rt0.c3) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c4, rt0.c3, rt0.c0 FROM rt0 WHERE ((NOT (rt0.c3))) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c4, rt0.c3, rt0.c0 FROM rt0 WHERE (((rt0.c3) ISNULL));
SELECT ALL rt0.c2, rt0.c1, rt0.c4, rt0.c3, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c3, rt0.c4, rt0.c2, rt0.c1, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c3, rt0.c4, rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE (CAST(CASE WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c2 END AS TEXT)) UNION SELECT DISTINCT rt0.c3, rt0.c4, rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (CAST(CASE WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c2 END AS TEXT)))) UNION SELECT DISTINCT rt0.c3, rt0.c4, rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE (((CAST(CASE WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c2 END AS TEXT)) ISNULL));
SELECT DISTINCT rt0.c3, rt0.c4, rt0.c2, rt0.c1, rt0.c0 FROM rt0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE (((vt1.c0 IN ()) IN ())) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (((vt1.c0 IN ()) IN ())))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE (((((vt1.c0 IN ()) IN ())) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL rt0.c2, rt0.c3, vt1.c0, rt0.c4, rt0.c1, rt0.c0 FROM rt0, vt1 GROUP BY rt0.c2, rt0.c3, vt1.c0, rt0.c4, rt0.c1, rt0.c0;
SELECT ALL rt0.c2, rt0.c3, vt1.c0, rt0.c4, rt0.c1, rt0.c0 FROM rt0, vt1 GROUP BY rt0.c2, rt0.c3, vt1.c0, rt0.c4, rt0.c1, rt0.c0 HAVING CAST(CASE MIN(TOTAL(COUNT(vt1.c0)))  WHEN rt0.c3 THEN MAX(rt0.c3) END AS TEXT) UNION ALL SELECT rt0.c2, rt0.c3, vt1.c0, rt0.c4, rt0.c1, rt0.c0 FROM rt0, vt1 GROUP BY rt0.c2, rt0.c3, vt1.c0, rt0.c4, rt0.c1, rt0.c0 HAVING (NOT (CAST(CASE MIN(TOTAL(COUNT(vt1.c0)))  WHEN rt0.c3 THEN MAX(rt0.c3) END AS TEXT))) UNION ALL SELECT ALL rt0.c2, rt0.c3, vt1.c0, rt0.c4, rt0.c1, rt0.c0 FROM rt0, vt1 GROUP BY rt0.c2, rt0.c3, vt1.c0, rt0.c4, rt0.c1, rt0.c0 HAVING ((CAST(CASE MIN(TOTAL(COUNT(vt1.c0)))  WHEN rt0.c3 THEN MAX(rt0.c3) END AS TEXT)) ISNULL);
SELECT ALL * FROM rt0 NATURAL JOIN vt1;
SELECT ALL * FROM rt0 NATURAL JOIN vt1 WHERE (CASE 0.24411557877062906  WHEN (- (rt0.c1)) THEN ((((((((((((rt0.c3)OR(rt0.c2)))AND(vt1.c0)))OR(rt0.c3)))AND(rt0.c1)))OR(rt0.c2)))AND(rt0.c1)) WHEN ((rt0.c4)GLOB(rt0.c0)) THEN rt0.c2 WHEN CAST(rt0.c1 AS NUMERIC) THEN (rt0.c4 IN ()) WHEN DATETIME(0.6328918070601709, rt0.c3, rt0.c3, rt0.c4, rt0.c4) THEN (((rt0.c1))<=((rt0.c1))) WHEN rt0.c4 COLLATE RTRIM THEN ((rt0.c1) IS TRUE) WHEN CAST(rt0.c2 AS NUMERIC) THEN rt0.c1 WHEN ((rt0.c1)/(rt0.c0)) THEN (- (rt0.c3)) END) UNION ALL SELECT * FROM rt0 NATURAL JOIN vt1 WHERE ((NOT (CASE 0.24411557877062906  WHEN (- (rt0.c1)) THEN ((((((((((((rt0.c3)OR(rt0.c2)))AND(vt1.c0)))OR(rt0.c3)))AND(rt0.c1)))OR(rt0.c2)))AND(rt0.c1)) WHEN ((rt0.c4)GLOB(rt0.c0)) THEN rt0.c2 WHEN CAST(rt0.c1 AS NUMERIC) THEN (rt0.c4 IN ()) WHEN DATETIME(0.6328918070601709, rt0.c3, rt0.c3, rt0.c4, rt0.c4) THEN (((rt0.c1))<=((rt0.c1))) WHEN rt0.c4 COLLATE RTRIM THEN ((rt0.c1) IS TRUE) WHEN CAST(rt0.c2 AS NUMERIC) THEN rt0.c1 WHEN ((rt0.c1)/(rt0.c0)) THEN (- (rt0.c3)) END))) UNION ALL SELECT ALL * FROM rt0 NATURAL JOIN vt1 WHERE (((CASE 0.24411557877062906  WHEN (- (rt0.c1)) THEN ((((((((((((rt0.c3)OR(rt0.c2)))AND(vt1.c0)))OR(rt0.c3)))AND(rt0.c1)))OR(rt0.c2)))AND(rt0.c1)) WHEN ((rt0.c4)GLOB(rt0.c0)) THEN rt0.c2 WHEN CAST(rt0.c1 AS NUMERIC) THEN (rt0.c4 IN ()) WHEN DATETIME(0.6328918070601709, rt0.c3, rt0.c3, rt0.c4, rt0.c4) THEN (((rt0.c1))<=((rt0.c1))) WHEN rt0.c4 COLLATE RTRIM THEN ((rt0.c1) IS TRUE) WHEN CAST(rt0.c2 AS NUMERIC) THEN rt0.c1 WHEN ((rt0.c1)/(rt0.c0)) THEN (- (rt0.c3)) END) ISNULL));
SELECT ALL * FROM rt0 NATURAL JOIN vt1;
SELECT DISTINCT * FROM rt0, vt1;
SELECT DISTINCT * FROM rt0, vt1 WHERE ((- (((((rt0.c1)AND(rt0.c2)))OR(rt0.c0))))) UNION SELECT DISTINCT * FROM rt0, vt1 WHERE ((NOT ((- (((((rt0.c1)AND(rt0.c2)))OR(rt0.c0))))))) UNION SELECT DISTINCT * FROM rt0, vt1 WHERE ((((- (((((rt0.c1)AND(rt0.c2)))OR(rt0.c0))))) ISNULL));
SELECT DISTINCT * FROM rt0, vt1;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE (((((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END)AND(((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))))OR((((vt1.c0))<((vt1.c0)))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT (((((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END)AND(((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))))OR((((vt1.c0))<((vt1.c0)))))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE (((((((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END)AND(((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))))OR((((vt1.c0))<((vt1.c0)))))) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL rt0.c1, vt1.c0, rt0.c3 FROM vt1, rt0 GROUP BY rt0.c1, vt1.c0, rt0.c3;
SELECT ALL rt0.c1, vt1.c0, rt0.c3 FROM vt1, rt0 GROUP BY rt0.c1, vt1.c0, rt0.c3 HAVING MAX(GROUP_CONCAT(COUNT(*))) UNION ALL SELECT rt0.c1, vt1.c0, rt0.c3 FROM vt1, rt0 GROUP BY rt0.c1, vt1.c0, rt0.c3 HAVING (NOT (MAX(GROUP_CONCAT(COUNT(*))))) UNION ALL SELECT ALL rt0.c1, vt1.c0, rt0.c3 FROM vt1, rt0 GROUP BY rt0.c1, vt1.c0, rt0.c3 HAVING ((MAX(GROUP_CONCAT(COUNT(*)))) ISNULL);
SELECT ALL * FROM vt1 CROSS JOIN rt0 ON (('')>>(((rt0.c0)<=(vt1.c0))));
SELECT ALL * FROM vt1 CROSS JOIN rt0 ON (('')>>(((rt0.c0)<=(vt1.c0)))) WHERE (rt0.c0) UNION ALL SELECT ALL * FROM vt1 CROSS JOIN rt0 ON (('')>>(((rt0.c0)<=(vt1.c0)))) WHERE ((NOT (rt0.c0))) UNION ALL SELECT * FROM vt1 CROSS JOIN rt0 ON (('')>>(((rt0.c0)<=(vt1.c0)))) WHERE (((rt0.c0) ISNULL));
SELECT ALL * FROM vt1 CROSS JOIN rt0 ON (('')>>(((rt0.c0)<=(vt1.c0))));
SELECT DISTINCT rt0.c4, rt0.c1, rt0.c2, rt0.c3 FROM rt0 LEFT OUTER JOIN vt1 ON rt0.c3;
SELECT DISTINCT rt0.c4, rt0.c1, rt0.c2, rt0.c3 FROM rt0 LEFT OUTER JOIN vt1 ON rt0.c3 WHERE ((((vt1.c0) IS TRUE) IN ())) UNION SELECT DISTINCT rt0.c4, rt0.c1, rt0.c2, rt0.c3 FROM rt0 LEFT OUTER JOIN vt1 ON rt0.c3 WHERE ((NOT ((((vt1.c0) IS TRUE) IN ())))) UNION SELECT DISTINCT rt0.c4, rt0.c1, rt0.c2, rt0.c3 FROM rt0 LEFT OUTER JOIN vt1 ON rt0.c3 WHERE ((((((vt1.c0) IS TRUE) IN ())) ISNULL));
SELECT DISTINCT rt0.c4, rt0.c1, rt0.c2, rt0.c3 FROM rt0 LEFT OUTER JOIN vt1 ON rt0.c3;
SELECT ALL rt0.c2, rt0.c1, rt0.c4 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c4;
SELECT ALL rt0.c2, rt0.c1, rt0.c4 FROM rt0 WHERE (((((rt0.c3)<>(rt0.c0))) BETWEEN (rt0.c0) AND (CAST(rt0.c3 AS NUMERIC)))) GROUP BY rt0.c2, rt0.c1, rt0.c4 UNION SELECT ALL rt0.c2, rt0.c1, rt0.c4 FROM rt0 WHERE ((NOT (((((rt0.c3)!=(rt0.c0))) BETWEEN (rt0.c0) AND (CAST(rt0.c3 AS NUMERIC)))))) GROUP BY rt0.c2, rt0.c1, rt0.c4 UNION SELECT ALL rt0.c2, rt0.c1, rt0.c4 FROM rt0 WHERE (((((((rt0.c3)!=(rt0.c0))) BETWEEN (rt0.c0) AND (CAST(rt0.c3 AS NUMERIC)))) ISNULL)) GROUP BY rt0.c2, rt0.c1, rt0.c4;
SELECT ALL rt0.c2, rt0.c1, rt0.c4 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c4;
SELECT ALL vt1.c0, rt0.c4 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c4;
SELECT ALL vt1.c0, rt0.c4 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c4 HAVING COUNT(CASE WHEN MIN(rt0.c4) THEN rt0.c3 END) UNION ALL SELECT vt1.c0, rt0.c4 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c4 HAVING (NOT (COUNT(CASE WHEN MIN(rt0.c4) THEN rt0.c3 END))) UNION ALL SELECT vt1.c0, rt0.c4 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c4 HAVING ((COUNT(CASE WHEN MIN(rt0.c4) THEN rt0.c3 END)) ISNULL);
SELECT vt1.c0 FROM vt1;
SELECT ALL vt1.c0 FROM vt1 WHERE (NULL) UNION ALL SELECT vt1.c0 FROM vt1 WHERE ((NOT (NULL))) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE (((NULL) ISNULL));
SELECT vt1.c0 FROM vt1;
SELECT DISTINCT * FROM vt1, rt0;
SELECT DISTINCT * FROM vt1, rt0 WHERE (CASE rt0.c3 COLLATE BINARY  WHEN x'7ca8' THEN ((rt0.c0)%(rt0.c0)) WHEN (rt0.c4 IN (rt0.c1)) THEN rt0.c4 COLLATE RTRIM WHEN CAST(rt0.c1 AS REAL) THEN ((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c4)) END) UNION SELECT DISTINCT * FROM vt1, rt0 WHERE ((NOT (CASE rt0.c3 COLLATE BINARY  WHEN x'7ca8' THEN ((rt0.c0)%(rt0.c0)) WHEN (rt0.c4 IN (rt0.c1)) THEN rt0.c4 COLLATE RTRIM WHEN CAST(rt0.c1 AS REAL) THEN ((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c4)) END))) UNION SELECT DISTINCT * FROM vt1, rt0 WHERE (((CASE rt0.c3 COLLATE BINARY  WHEN x'7ca8' THEN ((rt0.c0)%(rt0.c0)) WHEN (rt0.c4 IN (rt0.c1)) THEN rt0.c4 COLLATE RTRIM WHEN CAST(rt0.c1 AS REAL) THEN ((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c4)) END) ISNULL));
SELECT DISTINCT * FROM vt1, rt0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE (vt1.c0) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (vt1.c0))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE (((vt1.c0) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0, rt0.c0, rt0.c2, rt0.c3, rt0.c4 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c0, rt0.c2, rt0.c3, rt0.c4;
SELECT vt1.c0, rt0.c0, rt0.c2, rt0.c3, rt0.c4 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c0, rt0.c2, rt0.c3, rt0.c4 HAVING ((TOTAL(TOTAL(GROUP_CONCAT(rt0.c0))))OR(SUM(TOTAL(rt0.c0)))) UNION ALL SELECT vt1.c0, rt0.c0, rt0.c2, rt0.c3, rt0.c4 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c0, rt0.c2, rt0.c3, rt0.c4 HAVING (NOT (((TOTAL(TOTAL(GROUP_CONCAT(rt0.c0))))OR(SUM(TOTAL(rt0.c0)))))) UNION ALL SELECT ALL vt1.c0, rt0.c0, rt0.c2, rt0.c3, rt0.c4 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c0, rt0.c2, rt0.c3, rt0.c4 HAVING ((((TOTAL(TOTAL(GROUP_CONCAT(rt0.c0))))OR(SUM(TOTAL(rt0.c0))))) ISNULL);
SELECT MIN((NOT (-741862088))) FROM rt0, vt1 ORDER BY ((((((rt0.c0)OR(rt0.c3)))OR(rt0.c1)))!=(rt0.c4 COLLATE BINARY))  NULLS FIRST, CASE x'10c25a07'  WHEN CAST(rt0.c3 AS INTEGER) THEN 0x220a082b ELSE ((rt0.c2)OR(rt0.c4)) END;
SELECT ALL rt0.c0 FROM rt0;
SELECT rt0.c0 FROM rt0 WHERE ((((((rt0.c3) BETWEEN (rt0.c4) AND (rt0.c2))))<>((CASE WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c2 END)))) UNION ALL SELECT rt0.c0 FROM rt0 WHERE ((NOT ((((((rt0.c3) BETWEEN (rt0.c4) AND (rt0.c2))))!=((CASE WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c2 END)))))) UNION ALL SELECT rt0.c0 FROM rt0 WHERE ((((((((rt0.c3) BETWEEN (rt0.c4) AND (rt0.c2))))<>((CASE WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c2 END)))) ISNULL));
SELECT ALL rt0.c0 FROM rt0;
SELECT DISTINCT * FROM vt1 INNER JOIN rt0 ON CASE WHEN (rt0.c3 IN (rt0.c3)) THEN ((rt0.c3) BETWEEN (rt0.c2) AND (NULL)) WHEN CASE rt0.c0  WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c4 WHEN rt0.c1 THEN rt0.c1 END THEN CASE WHEN rt0.c2 THEN rt0.c1 ELSE 'XH' END WHEN 0.19643963045306545 THEN rt0.c4 COLLATE BINARY END;
SELECT DISTINCT * FROM vt1 INNER JOIN rt0 ON CASE WHEN (rt0.c3 IN (rt0.c3)) THEN ((rt0.c3) BETWEEN (rt0.c2) AND (NULL)) WHEN CASE rt0.c0  WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c4 WHEN rt0.c1 THEN rt0.c1 END THEN CASE WHEN rt0.c2 THEN rt0.c1 ELSE 'XH' END WHEN 0.19643963045306545 THEN rt0.c4 COLLATE BINARY END WHERE (CHAR(rt0.c3)) UNION SELECT DISTINCT * FROM vt1 INNER JOIN rt0 ON CASE WHEN (rt0.c3 IN (rt0.c3)) THEN ((rt0.c3) BETWEEN (rt0.c2) AND (NULL)) WHEN CASE rt0.c0  WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c4 WHEN rt0.c1 THEN rt0.c1 END THEN CASE WHEN rt0.c2 THEN rt0.c1 ELSE 'XH' END WHEN 0.19643963045306545 THEN rt0.c4 COLLATE BINARY END WHERE ((NOT (CHAR(rt0.c3)))) UNION SELECT DISTINCT * FROM vt1 INNER JOIN rt0 ON CASE WHEN (rt0.c3 IN (rt0.c3)) THEN ((rt0.c3) BETWEEN (rt0.c2) AND (NULL)) WHEN CASE rt0.c0  WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c4 WHEN rt0.c1 THEN rt0.c1 END THEN CASE WHEN rt0.c2 THEN rt0.c1 ELSE 'XH' END WHEN 0.19643963045306545 THEN rt0.c4 COLLATE BINARY END WHERE (((CHAR(rt0.c3)) ISNULL));
SELECT DISTINCT * FROM vt1 INNER JOIN rt0 ON CASE WHEN (rt0.c3 IN (rt0.c3)) THEN ((rt0.c3) BETWEEN (rt0.c2) AND (NULL)) WHEN CASE rt0.c0  WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c4 WHEN rt0.c1 THEN rt0.c1 END THEN CASE WHEN rt0.c2 THEN rt0.c1 ELSE 'XH' END WHEN 0.19643963045306545 THEN rt0.c4 COLLATE BINARY END;
SELECT ALL rt0.c3, rt0.c0, rt0.c1, rt0.c4 FROM rt0 GROUP BY rt0.c3, rt0.c0, rt0.c1, rt0.c4;
SELECT ALL rt0.c3, rt0.c0, rt0.c1, rt0.c4 FROM rt0 WHERE ((+ ((~ (rt0.c3))))) GROUP BY rt0.c3, rt0.c0, rt0.c1, rt0.c4 UNION SELECT rt0.c3, rt0.c0, rt0.c1, rt0.c4 FROM rt0 WHERE ((NOT ((+ ((~ (rt0.c3))))))) GROUP BY rt0.c3, rt0.c0, rt0.c1, rt0.c4 UNION SELECT rt0.c3, rt0.c0, rt0.c1, rt0.c4 FROM rt0 WHERE ((((+ ((~ (rt0.c3))))) ISNULL)) GROUP BY rt0.c3, rt0.c0, rt0.c1, rt0.c4;
SELECT ALL rt0.c3, rt0.c0, rt0.c1, rt0.c4 FROM rt0 GROUP BY rt0.c3, rt0.c0, rt0.c1, rt0.c4;
SELECT ALL rt0.c2, rt0.c0, rt0.c4, rt0.c1, rt0.c3 FROM rt0 NOT INDEXED LEFT OUTER JOIN vt1 ON NULL GROUP BY rt0.c2, rt0.c0, rt0.c4, rt0.c1, rt0.c3;
SELECT ALL rt0.c2, rt0.c0, rt0.c4, rt0.c1, rt0.c3 FROM rt0 LEFT OUTER JOIN vt1 ON NULL GROUP BY rt0.c2, rt0.c0, rt0.c4, rt0.c1, rt0.c3 HAVING (((rt0.c1)) NOT BETWEEN ((COUNT(*))) AND ((((((((((SUM(vt1.c0))AND(SUM(rt0.c0))))OR(vt1.c0)))AND(COUNT(*))))OR(TOTAL(rt0.c3)))))) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c4, rt0.c1, rt0.c3 FROM rt0 LEFT OUTER JOIN vt1 ON NULL GROUP BY rt0.c2, rt0.c0, rt0.c4, rt0.c1, rt0.c3 HAVING (NOT ((((rt0.c1)) NOT BETWEEN ((COUNT(*))) AND ((((((((((SUM(vt1.c0))AND(SUM(rt0.c0))))OR(vt1.c0)))AND(COUNT(*))))OR(TOTAL(rt0.c3)))))))) UNION ALL SELECT rt0.c2, rt0.c0, rt0.c4, rt0.c1, rt0.c3 FROM rt0 LEFT OUTER JOIN vt1 ON NULL GROUP BY rt0.c2, rt0.c0, rt0.c4, rt0.c1, rt0.c3 HAVING (((((rt0.c1)) NOT BETWEEN ((COUNT(*))) AND ((((((((((SUM(vt1.c0))AND(SUM(rt0.c0))))OR(vt1.c0)))AND(COUNT(*))))OR(TOTAL(rt0.c3))))))) ISNULL);
SELECT ALL rt0.c2, rt0.c0, rt0.c4, rt0.c1, rt0.c3 FROM rt0 NOT INDEXED LEFT OUTER JOIN vt1 ON NULL GROUP BY rt0.c2, rt0.c0, rt0.c4, rt0.c1, rt0.c3;
SELECT ALL rt0.c2, rt0.c0, rt0.c4, rt0.c1, rt0.c3 FROM rt0 LEFT OUTER JOIN vt1 ON NULL GROUP BY rt0.c2, rt0.c0, rt0.c4, rt0.c1, rt0.c3 HAVING (((rt0.c1)) NOT BETWEEN ((COUNT(*))) AND ((((((((((SUM(vt1.c0))AND(SUM(rt0.c0))))OR(vt1.c0)))AND(COUNT(*))))OR(TOTAL(rt0.c3)))))) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c4, rt0.c1, rt0.c3 FROM rt0 LEFT OUTER JOIN vt1 ON NULL GROUP BY rt0.c2, rt0.c0, rt0.c4, rt0.c1, rt0.c3 HAVING (NOT ((((rt0.c1)) NOT BETWEEN ((COUNT(*))) AND ((((((((((SUM(vt1.c0))AND(SUM(rt0.c0))))OR(vt1.c0)))AND(COUNT(*))))OR(TOTAL(rt0.c3)))))))) UNION ALL SELECT rt0.c2, rt0.c0, rt0.c4, rt0.c1, rt0.c3 FROM rt0 LEFT OUTER JOIN vt1 ON NULL GROUP BY rt0.c2, rt0.c0, rt0.c4, rt0.c1, rt0.c3 HAVING (((((rt0.c1)) NOT BETWEEN ((COUNT(*))) AND ((((((((((SUM(vt1.c0))AND(SUM(rt0.c0))))OR(vt1.c0)))AND(COUNT(*))))OR(TOTAL(rt0.c3))))))) ISNULL);
SELECT ALL rt0.c2, rt0.c0, rt0.c4, rt0.c1, rt0.c3 FROM rt0 NOT INDEXED LEFT OUTER JOIN vt1 ON NULL GROUP BY rt0.c2, rt0.c0, rt0.c4, rt0.c1, rt0.c3;
SELECT ALL vt1.c0 FROM vt1;
SELECT vt1.c0 FROM vt1 WHERE (CAST(vt1.c0 COLLATE RTRIM AS INTEGER)) UNION ALL SELECT vt1.c0 FROM vt1 WHERE ((NOT (CAST(vt1.c0 COLLATE RTRIM AS INTEGER)))) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE (((CAST(vt1.c0 COLLATE RTRIM AS INTEGER)) ISNULL));
SELECT ALL vt1.c0 FROM vt1;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ('ov' COLLATE BINARY COLLATE NOCASE) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ('ov' COLLATE BINARY COLLATE NOCASE))) UNION SELECT DISTINCT * FROM rt0 WHERE ((('ov' COLLATE BINARY COLLATE NOCASE) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c1, rt0.c0, rt0.c3 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c3;
SELECT ALL rt0.c1, rt0.c0, rt0.c3 FROM rt0 WHERE (CASE WHEN (rt0.c4 IN ()) THEN rt0.c1 COLLATE BINARY END) GROUP BY rt0.c1, rt0.c0, rt0.c3 UNION SELECT rt0.c1, rt0.c0, rt0.c3 FROM rt0 WHERE ((NOT (CASE WHEN (rt0.c4 IN ()) THEN rt0.c1 COLLATE BINARY END))) GROUP BY rt0.c1, rt0.c0, rt0.c3 UNION SELECT rt0.c1, rt0.c0, rt0.c3 FROM rt0 WHERE (((CASE WHEN (rt0.c4 IN ()) THEN rt0.c1 COLLATE BINARY END) ISNULL)) GROUP BY rt0.c1, rt0.c0, rt0.c3;
SELECT rt0.c1, rt0.c0, rt0.c3 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c3;
SELECT rt0.c2 FROM vt1, rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM vt1, rt0 GROUP BY rt0.c2 HAVING COUNT(TOTAL(rt0.c3)) UNION ALL SELECT ALL rt0.c2 FROM vt1, rt0 GROUP BY rt0.c2 HAVING (NOT (COUNT(TOTAL(rt0.c3)))) UNION ALL SELECT rt0.c2 FROM vt1, rt0 GROUP BY rt0.c2 HAVING ((COUNT(TOTAL(rt0.c3))) ISNULL);
SELECT ALL SUM(rt0.c0) FROM vt1, rt0;
SELECT ALL * FROM vt1;
SELECT ALL * FROM vt1 WHERE (((((vt1.c0) NOTNULL)) NOT BETWEEN (json_array_length(vt1.c0, vt1.c0)) AND ((vt1.c0 IN ())))) UNION ALL SELECT ALL * FROM vt1 WHERE ((NOT (((((vt1.c0) NOTNULL)) NOT BETWEEN (json_array_length(vt1.c0, vt1.c0)) AND ((vt1.c0 IN ())))))) UNION ALL SELECT ALL * FROM vt1 WHERE (((((((vt1.c0) NOTNULL)) NOT BETWEEN (json_array_length(vt1.c0, vt1.c0)) AND ((vt1.c0 IN ())))) ISNULL));
SELECT DISTINCT rt0.c1 FROM vt1, rt0;
SELECT DISTINCT rt0.c1 FROM vt1, rt0 WHERE (((((rt0.c2)/(vt1.c0)))IS NOT(NULL))) UNION SELECT DISTINCT rt0.c1 FROM vt1, rt0 WHERE ((NOT (((((rt0.c2)/(vt1.c0)))IS NOT(NULL))))) UNION SELECT DISTINCT rt0.c1 FROM vt1, rt0 WHERE (((((((rt0.c2)/(vt1.c0)))IS NOT(NULL))) ISNULL));
SELECT DISTINCT rt0.c1 FROM vt1, rt0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE ('0.8291714068517755') GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT ('0.8291714068517755'))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((('0.8291714068517755') ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0, rt0.c3 FROM vt1 LEFT OUTER JOIN rt0 ON (((~ (rt0.c1))) BETWEEN (((rt0.c1)/(rt0.c0))) AND (CAST(vt1.c0 AS BLOB))) GROUP BY vt1.c0, rt0.c3;
SELECT vt1.c0, rt0.c3 FROM vt1 LEFT OUTER JOIN rt0 ON (((~ (rt0.c1))) BETWEEN (((rt0.c1)/(rt0.c0))) AND (CAST(vt1.c0 AS BLOB))) GROUP BY vt1.c0, rt0.c3 HAVING (- (((rt0.c4)GLOB(vt1.c0)))) UNION ALL SELECT vt1.c0, rt0.c3 FROM vt1 LEFT OUTER JOIN rt0 ON (((~ (rt0.c1))) BETWEEN (((rt0.c1)/(rt0.c0))) AND (CAST(vt1.c0 AS BLOB))) GROUP BY vt1.c0, rt0.c3 HAVING (NOT ((- (((rt0.c4)GLOB(vt1.c0)))))) UNION ALL SELECT ALL vt1.c0, rt0.c3 FROM vt1 LEFT OUTER JOIN rt0 ON (((~ (rt0.c1))) BETWEEN (((rt0.c1)/(rt0.c0))) AND (CAST(vt1.c0 AS BLOB))) GROUP BY vt1.c0, rt0.c3 HAVING (((- (((rt0.c4)GLOB(vt1.c0))))) ISNULL);
SELECT ALL vt1.c0, rt0.c3 FROM vt1 LEFT OUTER JOIN rt0 ON (((~ (rt0.c1))) BETWEEN (((rt0.c1)/(rt0.c0))) AND (CAST(vt1.c0 AS BLOB))) GROUP BY vt1.c0, rt0.c3;
SELECT vt1.c0, rt0.c3 FROM vt1 LEFT OUTER JOIN rt0 ON (((~ (rt0.c1))) BETWEEN (((rt0.c1)/(rt0.c0))) AND (CAST(vt1.c0 AS BLOB))) GROUP BY vt1.c0, rt0.c3 HAVING (- (((rt0.c4)GLOB(vt1.c0)))) UNION ALL SELECT vt1.c0, rt0.c3 FROM vt1 LEFT OUTER JOIN rt0 ON (((~ (rt0.c1))) BETWEEN (((rt0.c1)/(rt0.c0))) AND (CAST(vt1.c0 AS BLOB))) GROUP BY vt1.c0, rt0.c3 HAVING (NOT ((- (((rt0.c4)GLOB(vt1.c0)))))) UNION ALL SELECT ALL vt1.c0, rt0.c3 FROM vt1 LEFT OUTER JOIN rt0 ON (((~ (rt0.c1))) BETWEEN (((rt0.c1)/(rt0.c0))) AND (CAST(vt1.c0 AS BLOB))) GROUP BY vt1.c0, rt0.c3 HAVING (((- (((rt0.c4)GLOB(vt1.c0))))) ISNULL);
SELECT ALL vt1.c0, rt0.c3 FROM vt1 LEFT OUTER JOIN rt0 ON (((~ (rt0.c1))) BETWEEN (((rt0.c1)/(rt0.c0))) AND (CAST(vt1.c0 AS BLOB))) GROUP BY vt1.c0, rt0.c3;
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE (((CASE rt0.c2  WHEN rt0.c1 THEN '_\n' END)!=((((rt0.c4))<((rt0.c3)))))) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (((CASE rt0.c2  WHEN rt0.c1 THEN '_\n' END)<>((((rt0.c4))<((rt0.c3)))))))) UNION ALL SELECT ALL * FROM rt0 WHERE (((((CASE rt0.c2  WHEN rt0.c1 THEN '_\n' END)!=((((rt0.c4))<((rt0.c3)))))) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((((((rt0.c4)OR(rt0.c2)))OR(x'')))LIKE(rt0.c1))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((((((rt0.c4)OR(rt0.c2)))OR(x'')))LIKE(rt0.c1))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((((((rt0.c4)OR(rt0.c2)))OR(x'')))LIKE(rt0.c1))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE (720672240) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (720672240))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE (((720672240) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT rt0.c0, rt0.c1 FROM rt0, vt1 GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0, vt1 GROUP BY rt0.c0, rt0.c1 HAVING ABS(MIN(COUNT(*))) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM rt0, vt1 GROUP BY rt0.c0, rt0.c1 HAVING (NOT (ABS(MIN(COUNT(*))))) UNION ALL SELECT rt0.c0, rt0.c1 FROM rt0, vt1 GROUP BY rt0.c0, rt0.c1 HAVING ((ABS(MIN(COUNT(*)))) ISNULL);
SELECT rt0.c3, rt0.c0, vt1.c0, rt0.c1, rt0.c2 FROM vt1, rt0;
SELECT rt0.c3, rt0.c0, vt1.c0, rt0.c1, rt0.c2 FROM vt1, rt0 WHERE (((('558119625')) NOT BETWEEN ((rt0.c2)) AND ((rt0.c3))) COLLATE NOCASE) UNION ALL SELECT rt0.c3, rt0.c0, vt1.c0, rt0.c1, rt0.c2 FROM vt1, rt0 WHERE ((NOT (((('558119625')) NOT BETWEEN ((rt0.c2)) AND ((rt0.c3))) COLLATE NOCASE))) UNION ALL SELECT rt0.c3, rt0.c0, vt1.c0, rt0.c1, rt0.c2 FROM vt1, rt0 WHERE (((((('558119625')) NOT BETWEEN ((rt0.c2)) AND ((rt0.c3))) COLLATE NOCASE) ISNULL));
SELECT rt0.c3, rt0.c0, vt1.c0, rt0.c1, rt0.c2 FROM vt1, rt0;
SELECT DISTINCT * FROM vt1, rt0;
SELECT DISTINCT * FROM vt1, rt0 WHERE ((- (CASE rt0.c1  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END))) UNION SELECT DISTINCT * FROM vt1, rt0 WHERE ((NOT ((- (CASE rt0.c1  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END))))) UNION SELECT DISTINCT * FROM vt1, rt0 WHERE ((((- (CASE rt0.c1  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END))) ISNULL));
SELECT DISTINCT * FROM vt1, rt0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0, rt0.c4 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0, rt0.c4;
SELECT ALL rt0.c1, rt0.c2, rt0.c0, rt0.c4 FROM rt0 WHERE ((((((rt0.c3 IN ()))OR((rt0.c3 IN ()))))OR(((rt0.c3)&(rt0.c1))))) GROUP BY rt0.c1, rt0.c2, rt0.c0, rt0.c4 UNION SELECT ALL rt0.c1, rt0.c2, rt0.c0, rt0.c4 FROM rt0 WHERE ((NOT ((((((rt0.c3 IN ()))OR((rt0.c3 IN ()))))OR(((rt0.c3)&(rt0.c1))))))) GROUP BY rt0.c1, rt0.c2, rt0.c0, rt0.c4 UNION SELECT ALL rt0.c1, rt0.c2, rt0.c0, rt0.c4 FROM rt0 WHERE ((((((((rt0.c3 IN ()))OR((rt0.c3 IN ()))))OR(((rt0.c3)&(rt0.c1))))) ISNULL)) GROUP BY rt0.c1, rt0.c2, rt0.c0, rt0.c4;
SELECT ALL rt0.c1, rt0.c2, rt0.c0, rt0.c4 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0, rt0.c4;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL rt0.c3, rt0.c1, rt0.c4, vt1.c0, rt0.c0, rt0.c2 FROM rt0, vt1;
SELECT rt0.c3, rt0.c1, rt0.c4, vt1.c0, rt0.c0, rt0.c2 FROM rt0, vt1 WHERE (CAST(((vt1.c0)+(rt0.c2)) AS INTEGER)) UNION ALL SELECT ALL rt0.c3, rt0.c1, rt0.c4, vt1.c0, rt0.c0, rt0.c2 FROM rt0, vt1 WHERE ((NOT (CAST(((vt1.c0)+(rt0.c2)) AS INTEGER)))) UNION ALL SELECT rt0.c3, rt0.c1, rt0.c4, vt1.c0, rt0.c0, rt0.c2 FROM rt0, vt1 WHERE (((CAST(((vt1.c0)+(rt0.c2)) AS INTEGER)) ISNULL));
SELECT ALL rt0.c3, rt0.c1, rt0.c4, vt1.c0, rt0.c0, rt0.c2 FROM rt0, vt1;
SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0, rt0.c3, vt1.c0 FROM rt0, vt1;
SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0, rt0.c3, vt1.c0 FROM rt0, vt1 WHERE (CAST((((rt0.c1)) BETWEEN ((rt0.c0)) AND ((vt1.c0))) AS BLOB)) UNION SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0, rt0.c3, vt1.c0 FROM rt0, vt1 WHERE ((NOT (CAST((((rt0.c1)) BETWEEN ((rt0.c0)) AND ((vt1.c0))) AS BLOB)))) UNION SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0, rt0.c3, vt1.c0 FROM rt0, vt1 WHERE (((CAST((((rt0.c1)) BETWEEN ((rt0.c0)) AND ((vt1.c0))) AS BLOB)) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0, rt0.c3, vt1.c0 FROM rt0, vt1;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE (((((rt0.c4)AND(rt0.c1))) NOT BETWEEN (x'') AND (((rt0.c0)<=(rt0.c2))))) GROUP BY rt0.c0, rt0.c2, rt0.c1 UNION SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (((((rt0.c4)AND(rt0.c1))) NOT BETWEEN (x'') AND (((rt0.c0)<=(rt0.c2))))))) GROUP BY rt0.c0, rt0.c2, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE (((((((rt0.c4)AND(rt0.c1))) NOT BETWEEN (x'') AND (((rt0.c0)<=(rt0.c2))))) ISNULL)) GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c1, rt0.c4, vt1.c0, rt0.c0, rt0.c3 FROM rt0, vt1 GROUP BY rt0.c1, rt0.c4, vt1.c0, rt0.c0, rt0.c3;
SELECT ALL rt0.c1, rt0.c4, vt1.c0, rt0.c0, rt0.c3 FROM rt0, vt1 GROUP BY rt0.c1, rt0.c4, vt1.c0, rt0.c0, rt0.c3 HAVING GROUP_CONCAT(COUNT(*)) UNION ALL SELECT rt0.c1, rt0.c4, vt1.c0, rt0.c0, rt0.c3 FROM rt0, vt1 GROUP BY rt0.c1, rt0.c4, vt1.c0, rt0.c0, rt0.c3 HAVING (NOT (GROUP_CONCAT(COUNT(*)))) UNION ALL SELECT ALL rt0.c1, rt0.c4, vt1.c0, rt0.c0, rt0.c3 FROM rt0, vt1 GROUP BY rt0.c1, rt0.c4, vt1.c0, rt0.c0, rt0.c3 HAVING ((GROUP_CONCAT(COUNT(*))) ISNULL);
SELECT ALL * FROM rt0, vt1;
SELECT * FROM rt0, vt1 WHERE (((((rt0.c0)<('ᦉM'))) NOT BETWEEN ((vt1.c0 IN ())) AND (892884587))) UNION ALL SELECT ALL * FROM rt0, vt1 WHERE ((NOT (((((rt0.c0)<('ᦉM'))) NOT BETWEEN ((vt1.c0 IN ())) AND (892884587))))) UNION ALL SELECT ALL * FROM rt0, vt1 WHERE (((((((rt0.c0)<('ᦉM'))) NOT BETWEEN ((vt1.c0 IN ())) AND (892884587))) ISNULL));
SELECT ALL * FROM rt0, vt1;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (CAST(CAST(rt0.c1 AS BLOB) AS REAL)) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (CAST(CAST(rt0.c1 AS BLOB) AS REAL)))) UNION SELECT DISTINCT * FROM rt0 WHERE (((CAST(CAST(rt0.c1 AS BLOB) AS REAL)) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c1 FROM rt0 WHERE (NULL) GROUP BY rt0.c0, rt0.c1 UNION SELECT rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (NULL))) GROUP BY rt0.c0, rt0.c1 UNION SELECT rt0.c0, rt0.c1 FROM rt0 WHERE (((NULL) ISNULL)) GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT vt1.c0, rt0.c2, rt0.c4, rt0.c3, rt0.c0, rt0.c1 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c2, rt0.c4, rt0.c3, rt0.c0, rt0.c1;
SELECT ALL vt1.c0, rt0.c2, rt0.c4, rt0.c3, rt0.c0, rt0.c1 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c2, rt0.c4, rt0.c3, rt0.c0, rt0.c1 HAVING ((NULLIF(DISTINCT '-293535413', SUM(COUNT(AVG(NULL)))))-(AVG(AVG(vt1.c0)))) UNION ALL SELECT vt1.c0, rt0.c2, rt0.c4, rt0.c3, rt0.c0, rt0.c1 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c2, rt0.c4, rt0.c3, rt0.c0, rt0.c1 HAVING (NOT (((NULLIF(DISTINCT '-293535413', SUM(COUNT(AVG(NULL)))))-(AVG(AVG(vt1.c0)))))) UNION ALL SELECT ALL vt1.c0, rt0.c2, rt0.c4, rt0.c3, rt0.c0, rt0.c1 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c2, rt0.c4, rt0.c3, rt0.c0, rt0.c1 HAVING ((((NULLIF(DISTINCT '-293535413', SUM(COUNT(AVG(NULL)))))-(AVG(AVG(vt1.c0))))) ISNULL);
SELECT rt0.c1, rt0.c3, rt0.c0, rt0.c4 FROM rt0 LEFT OUTER JOIN vt1 ON (((0.9507939690470272, CASE WHEN rt0.c0 THEN rt0.c4 ELSE rt0.c4 END, CAST(rt0.c1 AS REAL), vt1.c0 COLLATE RTRIM, ((rt0.c3) NOT BETWEEN (rt0.c2) AND (rt0.c4))))<=((UNLIKELY(DISTINCT vt1.c0), x'', ((rt0.c0) ISNULL), rt0.c3, ((((rt0.c4)AND(NULL)))OR(rt0.c4)))));
SELECT ALL rt0.c1, rt0.c3, rt0.c0, rt0.c4 FROM rt0 LEFT OUTER JOIN vt1 ON (((0.9507939690470272, CASE WHEN rt0.c0 THEN rt0.c4 ELSE rt0.c4 END, CAST(rt0.c1 AS REAL), vt1.c0 COLLATE RTRIM, ((rt0.c3) NOT BETWEEN (rt0.c2) AND (rt0.c4))))<=((UNLIKELY(DISTINCT vt1.c0), x'', ((rt0.c0) ISNULL), rt0.c3, ((((rt0.c4)AND(NULL)))OR(rt0.c4))))) WHERE ((- (((0.653132438157911) BETWEEN (rt0.c3) AND (vt1.c0))))) UNION ALL SELECT ALL rt0.c1, rt0.c3, rt0.c0, rt0.c4 FROM rt0 LEFT OUTER JOIN vt1 ON (((0.9507939690470272, CASE WHEN rt0.c0 THEN rt0.c4 ELSE rt0.c4 END, CAST(rt0.c1 AS REAL), vt1.c0 COLLATE RTRIM, ((rt0.c3) NOT BETWEEN (rt0.c2) AND (rt0.c4))))<=((UNLIKELY(DISTINCT vt1.c0), x'', ((rt0.c0) ISNULL), rt0.c3, ((((rt0.c4)AND(NULL)))OR(rt0.c4))))) WHERE ((NOT ((- (((0.653132438157911) BETWEEN (rt0.c3) AND (vt1.c0))))))) UNION ALL SELECT ALL rt0.c1, rt0.c3, rt0.c0, rt0.c4 FROM rt0 LEFT OUTER JOIN vt1 ON (((0.9507939690470272, CASE WHEN rt0.c0 THEN rt0.c4 ELSE rt0.c4 END, CAST(rt0.c1 AS REAL), vt1.c0 COLLATE RTRIM, ((rt0.c3) NOT BETWEEN (rt0.c2) AND (rt0.c4))))<=((UNLIKELY(DISTINCT vt1.c0), x'', ((rt0.c0) ISNULL), rt0.c3, ((((rt0.c4)AND(NULL)))OR(rt0.c4))))) WHERE ((((- (((0.653132438157911) BETWEEN (rt0.c3) AND (vt1.c0))))) ISNULL));
SELECT rt0.c1, rt0.c3, rt0.c0, rt0.c4 FROM rt0 LEFT OUTER JOIN vt1 ON (((0.9507939690470272, CASE WHEN rt0.c0 THEN rt0.c4 ELSE rt0.c4 END, CAST(rt0.c1 AS REAL), vt1.c0 COLLATE RTRIM, ((rt0.c3) NOT BETWEEN (rt0.c2) AND (rt0.c4))))<=((UNLIKELY(DISTINCT vt1.c0), x'', ((rt0.c0) ISNULL), rt0.c3, ((((rt0.c4)AND(NULL)))OR(rt0.c4)))));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((+ (vt1.c0))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT ((+ (vt1.c0))))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((((+ (vt1.c0))) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT rt0.c4 FROM rt0, vt1 GROUP BY rt0.c4;
SELECT ALL rt0.c4 FROM rt0, vt1 WHERE (CASE CASE -831126678  WHEN rt0.c4 THEN rt0.c2 WHEN rt0.c4 THEN vt1.c0 WHEN '' THEN rt0.c4 WHEN rt0.c3 THEN vt1.c0 WHEN rt0.c0 THEN rt0.c2 END  WHEN CAST(vt1.c0 AS REAL) THEN (((-1.063001635E9, vt1.c0, rt0.c3))<((rt0.c0, rt0.c3, vt1.c0))) END) GROUP BY rt0.c4 UNION SELECT rt0.c4 FROM rt0, vt1 WHERE ((NOT (CASE CASE -831126678  WHEN rt0.c4 THEN rt0.c2 WHEN rt0.c4 THEN vt1.c0 WHEN '' THEN rt0.c4 WHEN rt0.c3 THEN vt1.c0 WHEN rt0.c0 THEN rt0.c2 END  WHEN CAST(vt1.c0 AS REAL) THEN (((-1.063001635E9, vt1.c0, rt0.c3))<((rt0.c0, rt0.c3, vt1.c0))) END))) GROUP BY rt0.c4 UNION SELECT ALL rt0.c4 FROM rt0, vt1 WHERE (((CASE CASE -831126678  WHEN rt0.c4 THEN rt0.c2 WHEN rt0.c4 THEN vt1.c0 WHEN '' THEN rt0.c4 WHEN rt0.c3 THEN vt1.c0 WHEN rt0.c0 THEN rt0.c2 END  WHEN CAST(vt1.c0 AS REAL) THEN (((-1.063001635E9, vt1.c0, rt0.c3))<((rt0.c0, rt0.c3, vt1.c0))) END) ISNULL)) GROUP BY rt0.c4;
SELECT rt0.c4 FROM rt0, vt1 GROUP BY rt0.c4;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((((MAX(COUNT(SUM(vt1.c0)))) BETWEEN (vt1.c0) AND (MIN(vt1.c0)))) IS FALSE) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (((((MAX(COUNT(SUM(vt1.c0)))) BETWEEN (vt1.c0) AND (MIN(vt1.c0)))) IS FALSE))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((((((MAX(COUNT(SUM(vt1.c0)))) BETWEEN (vt1.c0) AND (MIN(vt1.c0)))) IS FALSE)) ISNULL);
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE (CASE WHEN CASE WHEN rt0.c3 THEN rt0.c0 END THEN UNLIKELY(DISTINCT rt0.c4) ELSE (+ (rt0.c1)) END) UNION ALL SELECT * FROM rt0 WHERE ((NOT (CASE WHEN CASE WHEN rt0.c3 THEN rt0.c0 END THEN UNLIKELY(DISTINCT rt0.c4) ELSE (+ (rt0.c1)) END))) UNION ALL SELECT ALL * FROM rt0 WHERE (((CASE WHEN CASE WHEN rt0.c3 THEN rt0.c0 END THEN UNLIKELY(DISTINCT rt0.c4) ELSE (+ (rt0.c1)) END) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT rt0.c4, rt0.c3, rt0.c0, vt1.c0, rt0.c1, rt0.c2 FROM vt1, rt0;
SELECT DISTINCT rt0.c4, rt0.c3, rt0.c0, vt1.c0, rt0.c1, rt0.c2 FROM vt1, rt0 WHERE (rt0.c0) UNION SELECT DISTINCT rt0.c4, rt0.c3, rt0.c0, vt1.c0, rt0.c1, rt0.c2 FROM vt1, rt0 WHERE ((NOT (rt0.c0))) UNION SELECT DISTINCT rt0.c4, rt0.c3, rt0.c0, vt1.c0, rt0.c1, rt0.c2 FROM vt1, rt0 WHERE (((rt0.c0) ISNULL));
SELECT DISTINCT rt0.c4, rt0.c3, rt0.c0, vt1.c0, rt0.c1, rt0.c2 FROM vt1, rt0;
SELECT rt0.c0, rt0.c4 FROM rt0 NATURAL JOIN vt1 GROUP BY rt0.c0, rt0.c4;
SELECT rt0.c0, rt0.c4 FROM rt0 NATURAL JOIN vt1 WHERE (((CAST(rt0.c2 AS REAL)) BETWEEN (rt0.c2 COLLATE RTRIM) AND (((((x'')AND(rt0.c1)))OR(rt0.c1))))) GROUP BY rt0.c0, rt0.c4 UNION SELECT rt0.c0, rt0.c4 FROM rt0 NATURAL JOIN vt1 WHERE ((NOT (((CAST(rt0.c2 AS REAL)) BETWEEN (rt0.c2 COLLATE RTRIM) AND (((((x'')AND(rt0.c1)))OR(rt0.c1))))))) GROUP BY rt0.c0, rt0.c4 UNION SELECT ALL rt0.c0, rt0.c4 FROM rt0 NATURAL JOIN vt1 WHERE (((((CAST(rt0.c2 AS REAL)) BETWEEN (rt0.c2 COLLATE RTRIM) AND (((((x'')AND(rt0.c1)))OR(rt0.c1))))) ISNULL)) GROUP BY rt0.c0, rt0.c4;
SELECT rt0.c0, rt0.c4 FROM rt0 NATURAL JOIN vt1 GROUP BY rt0.c0, rt0.c4;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING AVG((((GROUP_CONCAT(vt1.c0)))<=((COUNT(*))))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (AVG((((GROUP_CONCAT(vt1.c0)))<=((COUNT(*))))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((AVG((((GROUP_CONCAT(vt1.c0)))<=((COUNT(*)))))) ISNULL);
SELECT * FROM vt1, rt0;
SELECT ALL * FROM vt1, rt0 WHERE (UNLIKELY((rt0.c3 IN (rt0.c0, rt0.c3)))) UNION ALL SELECT * FROM vt1, rt0 WHERE ((NOT (UNLIKELY((rt0.c3 IN (rt0.c0, rt0.c3)))))) UNION ALL SELECT * FROM vt1, rt0 WHERE (((UNLIKELY((rt0.c3 IN (rt0.c0, rt0.c3)))) ISNULL));
SELECT * FROM vt1, rt0;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE (CASE vt1.c0 COLLATE NOCASE  WHEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) THEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) ELSE vt1.c0 COLLATE NOCASE END) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT (CASE vt1.c0 COLLATE NOCASE  WHEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) THEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) ELSE vt1.c0 COLLATE NOCASE END))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((CASE vt1.c0 COLLATE NOCASE  WHEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) THEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) ELSE vt1.c0 COLLATE NOCASE END) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT vt1.c0 FROM vt1 NOT INDEXED GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE (((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0))) NOT BETWEEN (((vt1.c0)AND(vt1.c0))) AND (vt1.c0 COLLATE NOCASE))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT (((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0))) NOT BETWEEN (((vt1.c0)AND(vt1.c0))) AND (vt1.c0 COLLATE NOCASE))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE (((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0))) NOT BETWEEN (((vt1.c0)AND(vt1.c0))) AND (vt1.c0 COLLATE NOCASE))) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 NOT INDEXED GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (((MAX(vt1.c0))) NOT BETWEEN ((COUNT(*))) AND ((MIN(vt1.c0)))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT ((((MAX(vt1.c0))) NOT BETWEEN ((COUNT(*))) AND ((MIN(vt1.c0)))))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (((((MAX(vt1.c0))) NOT BETWEEN ((COUNT(*))) AND ((MIN(vt1.c0))))) ISNULL);
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (((MAX(vt1.c0))) NOT BETWEEN ((COUNT(*))) AND ((MIN(vt1.c0)))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT ((((MAX(vt1.c0))) NOT BETWEEN ((COUNT(*))) AND ((MIN(vt1.c0)))))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (((((MAX(vt1.c0))) NOT BETWEEN ((COUNT(*))) AND ((MIN(vt1.c0))))) ISNULL);
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL rt0.c1, rt0.c0, rt0.c2, rt0.c3 FROM rt0, vt1;
SELECT rt0.c1, rt0.c0, rt0.c2, rt0.c3 FROM rt0, vt1 WHERE ('	o') UNION ALL SELECT rt0.c1, rt0.c0, rt0.c2, rt0.c3 FROM rt0, vt1 WHERE ((NOT ('	o'))) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c2, rt0.c3 FROM rt0, vt1 WHERE ((('	o') ISNULL));
SELECT ALL rt0.c1, rt0.c0, rt0.c2, rt0.c3 FROM rt0, vt1;
SELECT DISTINCT rt0.c3, rt0.c4, vt1.c0, rt0.c0, rt0.c1 FROM rt0, vt1;
SELECT DISTINCT rt0.c3, rt0.c4, vt1.c0, rt0.c0, rt0.c1 FROM rt0, vt1 WHERE (((NULLIF(vt1.c0, rt0.c4))%((rt0.c2 IN ())))) UNION SELECT DISTINCT rt0.c3, rt0.c4, vt1.c0, rt0.c0, rt0.c1 FROM rt0, vt1 WHERE ((NOT (((NULLIF(vt1.c0, rt0.c4))%((rt0.c2 IN ())))))) UNION SELECT DISTINCT rt0.c3, rt0.c4, vt1.c0, rt0.c0, rt0.c1 FROM rt0, vt1 WHERE (((((NULLIF(vt1.c0, rt0.c4))%((rt0.c2 IN ())))) ISNULL));
SELECT DISTINCT rt0.c3, rt0.c4, vt1.c0, rt0.c0, rt0.c1 FROM rt0, vt1;
SELECT ALL vt1.c0, rt0.c0, rt0.c2 FROM rt0, vt1 GROUP BY vt1.c0, rt0.c0, rt0.c2;
SELECT vt1.c0, rt0.c0, rt0.c2 FROM rt0, vt1 WHERE (NULL) GROUP BY vt1.c0, rt0.c0, rt0.c2 UNION SELECT ALL vt1.c0, rt0.c0, rt0.c2 FROM rt0, vt1 WHERE ((NOT (NULL))) GROUP BY vt1.c0, rt0.c0, rt0.c2 UNION SELECT vt1.c0, rt0.c0, rt0.c2 FROM rt0, vt1 WHERE (((NULL) ISNULL)) GROUP BY vt1.c0, rt0.c0, rt0.c2;
SELECT ALL vt1.c0, rt0.c0, rt0.c2 FROM rt0, vt1 GROUP BY vt1.c0, rt0.c0, rt0.c2;
SELECT ALL rt0.c4, rt0.c1, vt1.c0 FROM vt1 NATURAL JOIN rt0 GROUP BY rt0.c4, rt0.c1, vt1.c0;
SELECT ALL rt0.c4, rt0.c1, vt1.c0 FROM vt1 NATURAL JOIN rt0 GROUP BY rt0.c4, rt0.c1, vt1.c0 HAVING (((rt0.c1)) BETWEEN ((rt0.c4 COLLATE RTRIM)) AND ((((vt1.c0) BETWEEN (rt0.c1) AND ('-1899364335'))))) UNION ALL SELECT rt0.c4, rt0.c1, vt1.c0 FROM vt1 NATURAL JOIN rt0 GROUP BY rt0.c4, rt0.c1, vt1.c0 HAVING (NOT ((((rt0.c1)) BETWEEN ((rt0.c4 COLLATE RTRIM)) AND ((((vt1.c0) BETWEEN (rt0.c1) AND ('-1899364335'))))))) UNION ALL SELECT rt0.c4, rt0.c1, vt1.c0 FROM vt1 NATURAL JOIN rt0 GROUP BY rt0.c4, rt0.c1, vt1.c0 HAVING (((((rt0.c1)) BETWEEN ((rt0.c4 COLLATE RTRIM)) AND ((((vt1.c0) BETWEEN (rt0.c1) AND ('-1899364335')))))) ISNULL);
SELECT ALL rt0.c4, rt0.c1, vt1.c0 FROM vt1 NATURAL JOIN rt0 GROUP BY rt0.c4, rt0.c1, vt1.c0;
SELECT ALL rt0.c4, rt0.c1, vt1.c0 FROM vt1 NATURAL JOIN rt0 GROUP BY rt0.c4, rt0.c1, vt1.c0 HAVING (((rt0.c1)) BETWEEN ((rt0.c4 COLLATE RTRIM)) AND ((((vt1.c0) BETWEEN (rt0.c1) AND ('-1899364335'))))) UNION ALL SELECT rt0.c4, rt0.c1, vt1.c0 FROM vt1 NATURAL JOIN rt0 GROUP BY rt0.c4, rt0.c1, vt1.c0 HAVING (NOT ((((rt0.c1)) BETWEEN ((rt0.c4 COLLATE RTRIM)) AND ((((vt1.c0) BETWEEN (rt0.c1) AND ('-1899364335'))))))) UNION ALL SELECT rt0.c4, rt0.c1, vt1.c0 FROM vt1 NATURAL JOIN rt0 GROUP BY rt0.c4, rt0.c1, vt1.c0 HAVING (((((rt0.c1)) BETWEEN ((rt0.c4 COLLATE RTRIM)) AND ((((vt1.c0) BETWEEN (rt0.c1) AND ('-1899364335')))))) ISNULL);
SELECT ALL rt0.c4, rt0.c1, vt1.c0 FROM vt1 NATURAL JOIN rt0 GROUP BY rt0.c4, rt0.c1, vt1.c0;
SELECT ALL * FROM vt1, rt0;
SELECT ALL * FROM vt1, rt0 WHERE (((TRIM(rt0.c2)) NOTNULL)) UNION ALL SELECT ALL * FROM vt1, rt0 WHERE ((NOT (((TRIM(rt0.c2)) NOTNULL)))) UNION ALL SELECT ALL * FROM vt1, rt0 WHERE (((((TRIM(rt0.c2)) NOTNULL)) ISNULL));
SELECT ALL * FROM vt1, rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((SUBSTR(rt0.c3, rt0.c0)) IS TRUE)) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((SUBSTR(rt0.c3, rt0.c0)) IS TRUE)))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((SUBSTR(rt0.c3, rt0.c0)) IS TRUE)) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c0 FROM rt0, vt1 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0, vt1 WHERE (CASE WHEN ((rt0.c4) NOT BETWEEN (rt0.c4) AND (rt0.c4)) THEN ((rt0.c0) IS FALSE) END) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM rt0, vt1 WHERE ((NOT (CASE WHEN ((rt0.c4) NOT BETWEEN (rt0.c4) AND (rt0.c4)) THEN ((rt0.c0) IS FALSE) END))) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM rt0, vt1 WHERE (((CASE WHEN ((rt0.c4) NOT BETWEEN (rt0.c4) AND (rt0.c4)) THEN ((rt0.c0) IS FALSE) END) ISNULL)) GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0, vt1 GROUP BY rt0.c0;
SELECT rt0.c2, rt0.c4, rt0.c0, vt1.c0, rt0.c1, rt0.c3 FROM vt1, rt0 GROUP BY rt0.c2, rt0.c4, rt0.c0, vt1.c0, rt0.c1, rt0.c3;
SELECT rt0.c2, rt0.c4, rt0.c0, vt1.c0, rt0.c1, rt0.c3 FROM vt1, rt0 GROUP BY rt0.c2, rt0.c4, rt0.c0, vt1.c0, rt0.c1, rt0.c3 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c2, rt0.c4, rt0.c0, vt1.c0, rt0.c1, rt0.c3 FROM vt1, rt0 GROUP BY rt0.c2, rt0.c4, rt0.c0, vt1.c0, rt0.c1, rt0.c3 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c2, rt0.c4, rt0.c0, vt1.c0, rt0.c1, rt0.c3 FROM vt1, rt0 NOT INDEXED GROUP BY rt0.c2, rt0.c4, rt0.c0, vt1.c0, rt0.c1, rt0.c3 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c2, rt0.c4, rt0.c0, vt1.c0, rt0.c1, rt0.c3 FROM vt1, rt0 GROUP BY rt0.c2, rt0.c4, rt0.c0, vt1.c0, rt0.c1, rt0.c3;
SELECT rt0.c2, rt0.c4, rt0.c0, vt1.c0, rt0.c1, rt0.c3 FROM vt1, rt0 GROUP BY rt0.c2, rt0.c4, rt0.c0, vt1.c0, rt0.c1, rt0.c3 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c2, rt0.c4, rt0.c0, vt1.c0, rt0.c1, rt0.c3 FROM vt1, rt0 GROUP BY rt0.c2, rt0.c4, rt0.c0, vt1.c0, rt0.c1, rt0.c3 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c2, rt0.c4, rt0.c0, vt1.c0, rt0.c1, rt0.c3 FROM vt1, rt0 NOT INDEXED GROUP BY rt0.c2, rt0.c4, rt0.c0, vt1.c0, rt0.c1, rt0.c3 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c2, rt0.c4, rt0.c0, vt1.c0, rt0.c1, rt0.c3 FROM vt1, rt0 GROUP BY rt0.c2, rt0.c4, rt0.c0, vt1.c0, rt0.c1, rt0.c3;
SELECT MIN(((((rt0.c1) NOT NULL)) ISNULL)) FROM rt0;
SELECT ALL * FROM rt0 LEFT OUTER JOIN vt1 ON ((((NULL) ISNULL)) NOT NULL);
SELECT * FROM rt0 LEFT OUTER JOIN vt1 ON ((((NULL) ISNULL)) NOT NULL) WHERE (COALESCE(DISTINCT ((vt1.c0) BETWEEN (rt0.c1) AND (rt0.c1)), ((((vt1.c0)OR(rt0.c3)))OR(-1.108209173E9)))) UNION ALL SELECT ALL * FROM rt0 LEFT OUTER JOIN vt1 ON ((((NULL) ISNULL)) NOT NULL) WHERE ((NOT (COALESCE(DISTINCT ((vt1.c0) BETWEEN (rt0.c1) AND (rt0.c1)), ((((vt1.c0)OR(rt0.c3)))OR(-1.108209173E9)))))) UNION ALL SELECT ALL * FROM rt0 LEFT OUTER JOIN vt1 ON ((((NULL) ISNULL)) NOT NULL) WHERE (((COALESCE(DISTINCT ((vt1.c0) BETWEEN (rt0.c1) AND (rt0.c1)), ((((vt1.c0)OR(rt0.c3)))OR(-1.108209173E9)))) ISNULL));
SELECT ALL * FROM rt0 LEFT OUTER JOIN vt1 ON ((((NULL) ISNULL)) NOT NULL);
SELECT DISTINCT vt1.c0 FROM vt1, rt0;
SELECT DISTINCT vt1.c0 FROM vt1, rt0 WHERE (((((rt0.c4)|(rt0.c3)))!=(((vt1.c0)>('-749957100'))))) UNION SELECT DISTINCT vt1.c0 FROM vt1, rt0 WHERE ((NOT (((((rt0.c4)|(rt0.c3)))!=(((vt1.c0)>('-749957100'))))))) UNION SELECT DISTINCT vt1.c0 FROM vt1, rt0 WHERE (((((((rt0.c4)|(rt0.c3)))!=(((vt1.c0)>('-749957100'))))) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1, rt0;
SELECT rt0.c0, rt0.c2, rt0.c4 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c4;
SELECT ALL rt0.c0, rt0.c2, rt0.c4 FROM rt0 WHERE ((NOT (rt0.c0))) GROUP BY rt0.c0, rt0.c2, rt0.c4 UNION SELECT rt0.c0, rt0.c2, rt0.c4 FROM rt0 WHERE ((NOT ((NOT (rt0.c0))))) GROUP BY rt0.c0, rt0.c2, rt0.c4 UNION SELECT ALL rt0.c0, rt0.c2, rt0.c4 FROM rt0 WHERE ((((NOT (rt0.c0))) ISNULL)) GROUP BY rt0.c0, rt0.c2, rt0.c4;
SELECT rt0.c0, rt0.c2, rt0.c4 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c4;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING TOTAL(((vt1.c0) NOT BETWEEN (MIN(vt1.c0)) AND (COUNT(*)))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (TOTAL(((vt1.c0) NOT BETWEEN (MIN(vt1.c0)) AND (COUNT(*)))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((TOTAL(((vt1.c0) NOT BETWEEN (MIN(vt1.c0)) AND (COUNT(*))))) ISNULL);
SELECT rt0.c2, rt0.c4, rt0.c1, vt1.c0, rt0.c3 FROM rt0, vt1;
SELECT ALL rt0.c2, rt0.c4, rt0.c1, vt1.c0, rt0.c3 FROM rt0, vt1 WHERE (((CAST(rt0.c0 AS REAL)) NOT NULL)) UNION ALL SELECT rt0.c2, rt0.c4, rt0.c1, vt1.c0, rt0.c3 FROM rt0, vt1 WHERE ((NOT (((CAST(rt0.c0 AS REAL)) NOT NULL)))) UNION ALL SELECT ALL rt0.c2, rt0.c4, rt0.c1, vt1.c0, rt0.c3 FROM rt0, vt1 WHERE (((((CAST(rt0.c0 AS REAL)) NOT NULL)) ISNULL));
SELECT rt0.c2, rt0.c4, rt0.c1, vt1.c0, rt0.c3 FROM rt0, vt1;
SELECT DISTINCT rt0.c4, rt0.c1, rt0.c3, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c4, rt0.c1, rt0.c3, rt0.c0 FROM rt0 WHERE ((((x'add62e06')) BETWEEN (('wI')) AND (((+ (rt0.c3)))))) UNION SELECT DISTINCT rt0.c4, rt0.c1, rt0.c3, rt0.c0 FROM rt0 WHERE ((NOT ((((x'add62e06')) BETWEEN (('wI')) AND (((+ (rt0.c3)))))))) UNION SELECT DISTINCT rt0.c4, rt0.c1, rt0.c3, rt0.c0 FROM rt0 WHERE ((((((x'add62e06')) BETWEEN (('wI')) AND (((+ (rt0.c3)))))) ISNULL));
SELECT DISTINCT rt0.c4, rt0.c1, rt0.c3, rt0.c0 FROM rt0;
SELECT rt0.c2, rt0.c1, rt0.c0, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0, rt0.c3;
SELECT rt0.c2, rt0.c1, rt0.c0, rt0.c3 FROM rt0 WHERE (CASE WHEN ((rt0.c2)IS(rt0.c2)) THEN NULL ELSE CASE WHEN rt0.c4 THEN rt0.c0 ELSE rt0.c4 END END) GROUP BY rt0.c2, rt0.c1, rt0.c0, rt0.c3 UNION SELECT ALL rt0.c2, rt0.c1, rt0.c0, rt0.c3 FROM rt0 WHERE ((NOT (CASE WHEN ((rt0.c2)IS(rt0.c2)) THEN NULL ELSE CASE WHEN rt0.c4 THEN rt0.c0 ELSE rt0.c4 END END))) GROUP BY rt0.c2, rt0.c1, rt0.c0, rt0.c3 UNION SELECT ALL rt0.c2, rt0.c1, rt0.c0, rt0.c3 FROM rt0 WHERE (((CASE WHEN ((rt0.c2)IS(rt0.c2)) THEN NULL ELSE CASE WHEN rt0.c4 THEN rt0.c0 ELSE rt0.c4 END END) ISNULL)) GROUP BY rt0.c2, rt0.c1, rt0.c0, rt0.c3;
SELECT rt0.c2, rt0.c1, rt0.c0, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0, rt0.c3;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING TOTAL(COUNT(rt0.c3)) UNION ALL SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (NOT (TOTAL(COUNT(rt0.c3)))) UNION ALL SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING ((TOTAL(COUNT(rt0.c3))) ISNULL);
SELECT ALL * FROM vt1 RIGHT OUTER JOIN rt0 ON NULL;
SELECT * FROM vt1 RIGHT OUTER JOIN rt0 ON NULL WHERE ((((((vt1.c0) IS TRUE)))>((CASE vt1.c0  WHEN rt0.c4 THEN rt0.c0 ELSE vt1.c0 END)))) UNION ALL SELECT ALL * FROM vt1 RIGHT OUTER JOIN rt0 ON NULL WHERE ((NOT ((((((vt1.c0) IS TRUE)))>((CASE vt1.c0  WHEN rt0.c4 THEN rt0.c0 ELSE vt1.c0 END)))))) UNION ALL SELECT * FROM vt1 RIGHT OUTER JOIN rt0 ON NULL WHERE ((((((((vt1.c0) IS TRUE)))>((CASE vt1.c0  WHEN rt0.c4 THEN rt0.c0 ELSE vt1.c0 END)))) ISNULL));
SELECT ALL * FROM vt1 RIGHT OUTER JOIN rt0 ON NULL;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((vt1.c0 COLLATE NOCASE) ISNULL)) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT (((vt1.c0 COLLATE NOCASE) ISNULL)))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((((vt1.c0 COLLATE NOCASE) ISNULL)) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE ((((~ (vt1.c0))) NOT NULL)) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT ((((~ (vt1.c0))) NOT NULL)))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 NOT INDEXED WHERE ((((((~ (vt1.c0))) NOT NULL)) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL rt0.c0 FROM rt0 NATURAL JOIN vt1 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 NATURAL JOIN vt1 GROUP BY rt0.c0 HAVING SUM(TOTAL(vt1.c0)) UNION ALL SELECT ALL rt0.c0 FROM rt0 NATURAL JOIN vt1 GROUP BY rt0.c0 HAVING (NOT (SUM(TOTAL(vt1.c0)))) UNION ALL SELECT rt0.c0 FROM rt0 NATURAL JOIN vt1 GROUP BY rt0.c0 HAVING ((SUM(TOTAL(vt1.c0))) ISNULL);
SELECT ALL rt0.c0 FROM rt0 LEFT OUTER JOIN vt1 ON rt0.c0;
SELECT rt0.c0 FROM rt0 LEFT OUTER JOIN vt1 ON rt0.c0 WHERE (CAST(((vt1.c0)&(vt1.c0)) AS BLOB)) UNION ALL SELECT ALL rt0.c0 FROM rt0 LEFT OUTER JOIN vt1 ON rt0.c0 WHERE ((NOT (CAST(((vt1.c0)&(vt1.c0)) AS BLOB)))) UNION ALL SELECT ALL rt0.c0 FROM rt0 LEFT OUTER JOIN vt1 ON rt0.c0 WHERE (((CAST(((vt1.c0)&(vt1.c0)) AS BLOB)) ISNULL));
SELECT ALL rt0.c0 FROM rt0 LEFT OUTER JOIN vt1 ON rt0.c0;
SELECT DISTINCT * FROM rt0, vt1;
SELECT DISTINCT * FROM rt0, vt1 WHERE (CASE WHEN CASE WHEN rt0.c3 THEN vt1.c0 END THEN -2101982632 COLLATE BINARY WHEN ((rt0.c4) NOT BETWEEN (rt0.c2) AND (vt1.c0)) THEN rt0.c4 COLLATE BINARY WHEN CAST(rt0.c3 AS INTEGER) THEN (+ (rt0.c0)) ELSE CASE WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c4 THEN vt1.c0 ELSE rt0.c2 END END) UNION SELECT DISTINCT * FROM rt0, vt1 WHERE ((NOT (CASE WHEN CASE WHEN rt0.c3 THEN vt1.c0 END THEN -2101982632 COLLATE BINARY WHEN ((rt0.c4) NOT BETWEEN (rt0.c2) AND (vt1.c0)) THEN rt0.c4 COLLATE BINARY WHEN CAST(rt0.c3 AS INTEGER) THEN (+ (rt0.c0)) ELSE CASE WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c4 THEN vt1.c0 ELSE rt0.c2 END END))) UNION SELECT DISTINCT * FROM rt0, vt1 WHERE (((CASE WHEN CASE WHEN rt0.c3 THEN vt1.c0 END THEN -2101982632 COLLATE BINARY WHEN ((rt0.c4) NOT BETWEEN (rt0.c2) AND (vt1.c0)) THEN rt0.c4 COLLATE BINARY WHEN CAST(rt0.c3 AS INTEGER) THEN (+ (rt0.c0)) ELSE CASE WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c4 THEN vt1.c0 ELSE rt0.c2 END END) ISNULL));
SELECT DISTINCT * FROM rt0, vt1;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE (CAST(vt1.c0 AS INTEGER)) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT (CAST(vt1.c0 AS INTEGER)))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE (((CAST(vt1.c0 AS INTEGER)) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM vt1, rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM vt1, rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING TOTAL(NULL) UNION ALL SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM vt1, rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING (NOT (TOTAL(NULL))) UNION ALL SELECT rt0.c0, rt0.c2, rt0.c1 FROM vt1, rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING ((TOTAL(NULL)) ISNULL);
SELECT rt0.c0, rt0.c2, rt0.c1 FROM vt1, rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM vt1, rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING TOTAL(NULL) UNION ALL SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM vt1, rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING (NOT (TOTAL(NULL))) UNION ALL SELECT rt0.c0, rt0.c2, rt0.c1 FROM vt1, rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING ((TOTAL(NULL)) ISNULL);
SELECT rt0.c0, rt0.c2, rt0.c1 FROM vt1, rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE ((((+ (rt0.c4)))GLOB('x?'))) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT ((((+ (rt0.c4)))GLOB('x?'))))) UNION ALL SELECT * FROM rt0 WHERE ((((((+ (rt0.c4)))GLOB('x?'))) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT * FROM vt1, rt0;
SELECT DISTINCT * FROM vt1, rt0 WHERE (((CAST('' AS REAL)) BETWEEN (((vt1.c0) BETWEEN (rt0.c2) AND (rt0.c1))) AND ((((rt0.c4, rt0.c3, rt0.c3)) NOT BETWEEN ((rt0.c0, rt0.c0, rt0.c4)) AND ((0.565763439069068, rt0.c0, rt0.c1)))))) UNION SELECT DISTINCT * FROM vt1, rt0 WHERE ((NOT (((CAST('' AS REAL)) BETWEEN (((vt1.c0) BETWEEN (rt0.c2) AND (rt0.c1))) AND ((((rt0.c4, rt0.c3, rt0.c3)) NOT BETWEEN ((rt0.c0, rt0.c0, rt0.c4)) AND ((0.565763439069068, rt0.c0, rt0.c1)))))))) UNION SELECT DISTINCT * FROM vt1, rt0 WHERE (((((CAST('' AS REAL)) BETWEEN (((vt1.c0) BETWEEN (rt0.c2) AND (rt0.c1))) AND ((((rt0.c4, rt0.c3, rt0.c3)) NOT BETWEEN ((rt0.c0, rt0.c0, rt0.c4)) AND ((0.565763439069068, rt0.c0, rt0.c1)))))) ISNULL));
SELECT DISTINCT * FROM vt1, rt0;
SELECT rt0.c0 FROM rt0 FULL OUTER JOIN vt1 ON 0.9204794076165729 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 FULL OUTER JOIN vt1 ON 0.9204794076165729 WHERE ((((~ (0.4415624583627804))) BETWEEN ((((rt0.c3, vt1.c0, vt1.c0))>=((rt0.c0, rt0.c4, rt0.c0)))) AND ((vt1.c0 IN ())))) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM rt0 FULL OUTER JOIN vt1 ON 0.9204794076165729 WHERE ((NOT ((((~ (0.4415624583627804))) BETWEEN ((((rt0.c3, vt1.c0, vt1.c0))>=((rt0.c0, rt0.c4, rt0.c0)))) AND ((vt1.c0 IN ())))))) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM rt0 FULL OUTER JOIN vt1 ON 0.9204794076165729 WHERE ((((((~ (0.4415624583627804))) BETWEEN ((((rt0.c3, vt1.c0, vt1.c0))>=((rt0.c0, rt0.c4, rt0.c0)))) AND ((vt1.c0 IN ())))) ISNULL)) GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 FULL OUTER JOIN vt1 ON 0.9204794076165729 GROUP BY rt0.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING AVG(MIN(vt1.c0)) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (AVG(MIN(vt1.c0)))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((AVG(MIN(vt1.c0))) ISNULL);
SELECT ALL vt1.c0 FROM vt1;
SELECT ALL vt1.c0 FROM vt1 WHERE (UNLIKELY(vt1.c0)) UNION ALL SELECT vt1.c0 FROM vt1 WHERE ((NOT (UNLIKELY(vt1.c0)))) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE (((UNLIKELY(vt1.c0)) ISNULL));
SELECT ALL vt1.c0 FROM vt1;
SELECT DISTINCT * FROM vt1, rt0;
SELECT DISTINCT * FROM vt1, rt0 WHERE (CASE rt0.c0  WHEN rt0.c4 THEN vt1.c0 ELSE rt0.c1 END COLLATE BINARY) UNION SELECT DISTINCT * FROM vt1, rt0 WHERE ((NOT (CASE rt0.c0  WHEN rt0.c4 THEN vt1.c0 ELSE rt0.c1 END COLLATE BINARY))) UNION SELECT DISTINCT * FROM vt1, rt0 WHERE (((CASE rt0.c0  WHEN rt0.c4 THEN vt1.c0 ELSE rt0.c1 END COLLATE BINARY) ISNULL));
SELECT DISTINCT * FROM vt1, rt0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE ((((+ (vt1.c0)))&(vt1.c0))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT ((((+ (vt1.c0)))&(vt1.c0))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((((((+ (vt1.c0)))&(vt1.c0))) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING SUM(COUNT(*)) UNION ALL SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING (NOT (SUM(COUNT(*)))) UNION ALL SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING ((SUM(COUNT(*))) ISNULL);
SELECT * FROM vt1, rt0;
SELECT * FROM vt1, rt0 WHERE (rt0.c4) UNION ALL SELECT ALL * FROM vt1, rt0 WHERE ((NOT (rt0.c4))) UNION ALL SELECT ALL * FROM vt1, rt0 WHERE (((rt0.c4) ISNULL));
SELECT * FROM vt1, rt0;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (((((((vt1.c0)>>(vt1.c0)))OR(CAST(vt1.c0 AS BLOB))))OR(((vt1.c0) ISNULL)))) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (((((((vt1.c0)>>(vt1.c0)))OR(CAST(vt1.c0 AS BLOB))))OR(((vt1.c0) ISNULL)))))) UNION SELECT DISTINCT * FROM vt1 WHERE (((((((((vt1.c0)>>(vt1.c0)))OR(CAST(vt1.c0 AS BLOB))))OR(((vt1.c0) ISNULL)))) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT ALL rt0.c3, rt0.c4, rt0.c2 FROM vt1 RIGHT OUTER JOIN rt0 ON ((((rt0.c3) NOTNULL))&((((rt0.c0, '{q\', rt0.c2)) NOT BETWEEN ((rt0.c2, vt1.c0, rt0.c2)) AND ((vt1.c0, rt0.c4, rt0.c0))))) GROUP BY rt0.c3, rt0.c4, rt0.c2;
SELECT rt0.c3, rt0.c4, rt0.c2 FROM vt1 RIGHT OUTER JOIN rt0 ON ((((rt0.c3) NOTNULL))&((((rt0.c0, '{q\', rt0.c2)) NOT BETWEEN ((rt0.c2, vt1.c0, rt0.c2)) AND ((vt1.c0, rt0.c4, rt0.c0))))) WHERE (CAST('d煗GxhP%AG' AS TEXT)) GROUP BY rt0.c3, rt0.c4, rt0.c2 UNION SELECT rt0.c3, rt0.c4, rt0.c2 FROM vt1 RIGHT OUTER JOIN rt0 ON ((((rt0.c3) NOTNULL))&((((rt0.c0, '{q\', rt0.c2)) NOT BETWEEN ((rt0.c2, vt1.c0, rt0.c2)) AND ((vt1.c0, rt0.c4, rt0.c0))))) WHERE ((NOT (CAST('d煗GxhP%AG' AS TEXT)))) GROUP BY rt0.c3, rt0.c4, rt0.c2 UNION SELECT rt0.c3, rt0.c4, rt0.c2 FROM vt1 RIGHT OUTER JOIN rt0 ON ((((rt0.c3) NOTNULL))&((((rt0.c0, '{q\', rt0.c2)) NOT BETWEEN ((rt0.c2, vt1.c0, rt0.c2)) AND ((vt1.c0, rt0.c4, rt0.c0))))) WHERE (((CAST('d煗GxhP%AG' AS TEXT)) ISNULL)) GROUP BY rt0.c3, rt0.c4, rt0.c2;
SELECT ALL rt0.c3, rt0.c4, rt0.c2 FROM vt1 RIGHT OUTER JOIN rt0 ON ((((rt0.c3) NOTNULL))&((((rt0.c0, '{q\', rt0.c2)) NOT BETWEEN ((rt0.c2, vt1.c0, rt0.c2)) AND ((vt1.c0, rt0.c4, rt0.c0))))) GROUP BY rt0.c3, rt0.c4, rt0.c2;
SELECT ALL vt1.c0, rt0.c1, rt0.c4, rt0.c2 FROM rt0, vt1 GROUP BY vt1.c0, rt0.c1, rt0.c4, rt0.c2;
SELECT vt1.c0, rt0.c1, rt0.c4, rt0.c2 FROM rt0, vt1 GROUP BY vt1.c0, rt0.c1, rt0.c4, rt0.c2 HAVING SUM(TOTAL(vt1.c0)) COLLATE BINARY UNION ALL SELECT ALL vt1.c0, rt0.c1, rt0.c4, rt0.c2 FROM rt0, vt1 GROUP BY vt1.c0, rt0.c1, rt0.c4, rt0.c2 HAVING (NOT (SUM(TOTAL(vt1.c0)) COLLATE BINARY)) UNION ALL SELECT vt1.c0, rt0.c1, rt0.c4, rt0.c2 FROM rt0, vt1 GROUP BY vt1.c0, rt0.c1, rt0.c4, rt0.c2 HAVING ((SUM(TOTAL(vt1.c0)) COLLATE BINARY) ISNULL);
SELECT vt1.c0, rt0.c2, rt0.c4, rt0.c3, rt0.c1, rt0.c0 FROM rt0, vt1;
SELECT ALL vt1.c0, rt0.c2, rt0.c4, rt0.c3, rt0.c1, rt0.c0 FROM rt0, vt1 WHERE (((NOT (rt0.c0)) IN (CAST(rt0.c1 AS TEXT)))) UNION ALL SELECT vt1.c0, rt0.c2, rt0.c4, rt0.c3, rt0.c1, rt0.c0 FROM rt0, vt1 WHERE ((NOT (((NOT (rt0.c0)) IN (CAST(rt0.c1 AS TEXT)))))) UNION ALL SELECT vt1.c0, rt0.c2, rt0.c4, rt0.c3, rt0.c1, rt0.c0 FROM rt0, vt1 WHERE (((((NOT (rt0.c0)) IN (CAST(rt0.c1 AS TEXT)))) ISNULL));
SELECT vt1.c0, rt0.c2, rt0.c4, rt0.c3, rt0.c1, rt0.c0 FROM rt0, vt1;
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c3 FROM vt1 RIGHT OUTER JOIN rt0 ON (((((((((+ (rt0.c3)))AND(rt0.c3)))OR(rt0.c2 COLLATE BINARY)))OR((((vt1.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c1))))))AND(((rt0.c1) ISNULL)));
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c3 FROM vt1 RIGHT OUTER JOIN rt0 ON (((((((((+ (rt0.c3)))AND(rt0.c3)))OR(rt0.c2 COLLATE BINARY)))OR((((vt1.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c1))))))AND(((rt0.c1) ISNULL))) WHERE ((((((((((((('-906050817')OR((vt1.c0 IN (rt0.c2)))))OR((('0.19152450603265847') NOT BETWEEN (NULL) AND (rt0.c3)))))AND('720672240' COLLATE RTRIM)))AND(CAST(rt0.c4 AS REAL))))AND(LOWER(DISTINCT rt0.c1))))OR(CAST(vt1.c0 AS INTEGER)))) UNION SELECT DISTINCT rt0.c1, rt0.c0, rt0.c3 FROM vt1 RIGHT OUTER JOIN rt0 ON (((((((((+ (rt0.c3)))AND(rt0.c3)))OR(rt0.c2 COLLATE BINARY)))OR((((vt1.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c1))))))AND(((rt0.c1) ISNULL))) WHERE ((NOT ((((((((((((('-906050817')OR((vt1.c0 IN (rt0.c2)))))OR((('0.19152450603265847') NOT BETWEEN (NULL) AND (rt0.c3)))))AND('720672240' COLLATE RTRIM)))AND(CAST(rt0.c4 AS REAL))))AND(LOWER(DISTINCT rt0.c1))))OR(CAST(vt1.c0 AS INTEGER)))))) UNION SELECT DISTINCT rt0.c1, rt0.c0, rt0.c3 FROM vt1 RIGHT OUTER JOIN rt0 ON (((((((((+ (rt0.c3)))AND(rt0.c3)))OR(rt0.c2 COLLATE BINARY)))OR((((vt1.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c1))))))AND(((rt0.c1) ISNULL))) WHERE ((((((((((((((('-906050817')OR((vt1.c0 IN (rt0.c2)))))OR((('0.19152450603265847') NOT BETWEEN (NULL) AND (rt0.c3)))))AND('720672240' COLLATE RTRIM)))AND(CAST(rt0.c4 AS REAL))))AND(LOWER(DISTINCT rt0.c1))))OR(CAST(vt1.c0 AS INTEGER)))) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c3 FROM vt1 RIGHT OUTER JOIN rt0 ON (((((((((+ (rt0.c3)))AND(rt0.c3)))OR(rt0.c2 COLLATE BINARY)))OR((((vt1.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c1))))))AND(((rt0.c1) ISNULL)));
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 WHERE (((NULL)LIKE(ABS(DISTINCT rt0.c0)))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0 WHERE ((NOT (((NULL)LIKE(ABS(DISTINCT rt0.c0)))))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0 WHERE (((((NULL)LIKE(ABS(DISTINCT rt0.c0)))) ISNULL)) GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING MIN(MIN(COUNT(vt1.c0))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (MIN(MIN(COUNT(vt1.c0))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((MIN(MIN(COUNT(vt1.c0)))) ISNULL);
SELECT ALL rt0.c3, rt0.c0, rt0.c1, vt1.c0, rt0.c4 FROM rt0 CROSS JOIN vt1 ON (((rt0.c1))<>((rt0.c1 COLLATE NOCASE)));
SELECT rt0.c3, rt0.c0, rt0.c1, vt1.c0, rt0.c4 FROM rt0 CROSS JOIN vt1 ON (((rt0.c1))!=((rt0.c1 COLLATE NOCASE))) WHERE (((NULLIF(rt0.c0, rt0.c4)) NOT BETWEEN (CASE WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c4 END) AND (rt0.c2))) UNION ALL SELECT ALL rt0.c3, rt0.c0, rt0.c1, vt1.c0, rt0.c4 FROM rt0 CROSS JOIN vt1 ON (((rt0.c1))<>((rt0.c1 COLLATE NOCASE))) WHERE ((NOT (((NULLIF(rt0.c0, rt0.c4)) NOT BETWEEN (CASE WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c4 END) AND (rt0.c2))))) UNION ALL SELECT ALL rt0.c3, rt0.c0, rt0.c1, vt1.c0, rt0.c4 FROM rt0 CROSS JOIN vt1 ON (((rt0.c1))<>((rt0.c1 COLLATE NOCASE))) WHERE (((((NULLIF(rt0.c0, rt0.c4)) NOT BETWEEN (CASE WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c4 END) AND (rt0.c2))) ISNULL));
SELECT ALL rt0.c3, rt0.c0, rt0.c1, vt1.c0, rt0.c4 FROM rt0 CROSS JOIN vt1 ON (((rt0.c1))<>((rt0.c1 COLLATE NOCASE)));
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((((rt0.c2) NOT NULL)) BETWEEN (CASE WHEN NULL THEN rt0.c3 END) AND (x''))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((((rt0.c2) NOT NULL)) BETWEEN (CASE WHEN NULL THEN rt0.c3 END) AND (x''))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((((rt0.c2) NOT NULL)) BETWEEN (CASE WHEN NULL THEN rt0.c3 END) AND (x''))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL vt1.c0, rt0.c2, rt0.c3 FROM rt0 LEFT OUTER JOIN vt1 ON ((CASE rt0.c2  WHEN rt0.c3 THEN rt0.c0 END)IS NOT(rt0.c1 COLLATE RTRIM)) GROUP BY vt1.c0, rt0.c2, rt0.c3;
SELECT ALL vt1.c0, rt0.c2, rt0.c3 FROM rt0 LEFT OUTER JOIN vt1 ON ((CASE rt0.c2  WHEN rt0.c3 THEN rt0.c0 END)IS NOT(rt0.c1 COLLATE RTRIM)) WHERE (((((CAST(vt1.c0 AS NUMERIC))AND(((((((((rt0.c1)AND(rt0.c4)))OR(rt0.c3)))OR(rt0.c2)))AND(rt0.c4)))))AND('-1746912822'))) GROUP BY vt1.c0, rt0.c2, rt0.c3 UNION SELECT ALL vt1.c0, rt0.c2, rt0.c3 FROM rt0 LEFT OUTER JOIN vt1 ON ((CASE rt0.c2  WHEN rt0.c3 THEN rt0.c0 END)IS NOT(rt0.c1 COLLATE RTRIM)) WHERE ((NOT (((((CAST(vt1.c0 AS NUMERIC))AND(((((((((rt0.c1)AND(rt0.c4)))OR(rt0.c3)))OR(rt0.c2)))AND(rt0.c4)))))AND('-1746912822'))))) GROUP BY vt1.c0, rt0.c2, rt0.c3 UNION SELECT vt1.c0, rt0.c2, rt0.c3 FROM rt0 LEFT OUTER JOIN vt1 ON ((CASE rt0.c2  WHEN rt0.c3 THEN rt0.c0 END)IS NOT(rt0.c1 COLLATE RTRIM)) WHERE (((((((CAST(vt1.c0 AS NUMERIC))AND(((((((((rt0.c1)AND(rt0.c4)))OR(rt0.c3)))OR(rt0.c2)))AND(rt0.c4)))))AND('-1746912822'))) ISNULL)) GROUP BY vt1.c0, rt0.c2, rt0.c3;
SELECT ALL vt1.c0, rt0.c2, rt0.c3 FROM rt0 LEFT OUTER JOIN vt1 ON ((CASE rt0.c2  WHEN rt0.c3 THEN rt0.c0 END)IS NOT(rt0.c1 COLLATE RTRIM)) GROUP BY vt1.c0, rt0.c2, rt0.c3;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING MIN(((AVG(vt1.c0)) NOT BETWEEN (vt1.c0) AND (vt1.c0))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (MIN(((AVG(vt1.c0)) NOT BETWEEN (vt1.c0) AND (vt1.c0))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((MIN(((AVG(vt1.c0)) NOT BETWEEN (vt1.c0) AND (vt1.c0)))) ISNULL);
SELECT ALL rt0.c0, vt1.c0 FROM rt0, vt1;
SELECT rt0.c0, vt1.c0 FROM rt0, vt1 WHERE ((- (0.712699618394104))) UNION ALL SELECT rt0.c0, vt1.c0 FROM rt0, vt1 WHERE ((NOT ((- (0.712699618394104))))) UNION ALL SELECT rt0.c0, vt1.c0 FROM rt0, vt1 WHERE ((((- (0.712699618394104))) ISNULL));
SELECT ALL rt0.c0, vt1.c0 FROM rt0, vt1;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (((vt1.c0 COLLATE RTRIM) IS TRUE)) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (((vt1.c0 COLLATE RTRIM) IS TRUE)))) UNION SELECT DISTINCT * FROM vt1 WHERE (((((vt1.c0 COLLATE RTRIM) IS TRUE)) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE (0.8031558574861422) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT (0.8031558574861422))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE (((0.8031558574861422) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL rt0.c0, rt0.c3, vt1.c0, rt0.c2 FROM rt0, vt1 GROUP BY rt0.c0, rt0.c3, vt1.c0, rt0.c2;
SELECT rt0.c0, rt0.c3, vt1.c0, rt0.c2 FROM rt0, vt1 GROUP BY rt0.c0, rt0.c3, vt1.c0, rt0.c2 HAVING TOTAL(AVG(COUNT(MIN(COUNT(*))))) UNION ALL SELECT ALL rt0.c0, rt0.c3, vt1.c0, rt0.c2 FROM rt0, vt1 GROUP BY rt0.c0, rt0.c3, vt1.c0, rt0.c2 HAVING (NOT (TOTAL(AVG(COUNT(MIN(COUNT(*))))))) UNION ALL SELECT rt0.c0, rt0.c3, vt1.c0, rt0.c2 FROM rt0, vt1 GROUP BY rt0.c0, rt0.c3, vt1.c0, rt0.c2 HAVING ((TOTAL(AVG(COUNT(MIN(COUNT(*)))))) ISNULL);
SELECT SUM((((rt0.c3, rt0.c4, rt0.c4)) NOT BETWEEN (((- (rt0.c2)), ((0.887775737465994) BETWEEN (rt0.c3) AND (rt0.c1)), ((rt0.c1) ISNULL))) AND (((0.2781858380251635 IN (rt0.c4)), rt0.c4, ((rt0.c3) NOT BETWEEN (rt0.c0) AND (0.8662738961439872)))))) FROM rt0 ORDER BY ((((rt0.c4)AND(rt0.c4))) ISNULL) DESC, (((rt0.c3)IS NOT(rt0.c2)) IN ())  NULLS FIRST, 0.9052885566419471 COLLATE BINARY  NULLS FIRST;
SELECT * FROM vt1;
SELECT * FROM vt1 WHERE (((-1600148334) NOT NULL)) UNION ALL SELECT * FROM vt1 WHERE ((NOT (((-1600148334) NOT NULL)))) UNION ALL SELECT * FROM vt1 WHERE (((((-1600148334) NOT NULL)) ISNULL));
SELECT * FROM vt1;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE ((~ (vt1.c0))) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT ((~ (vt1.c0))))) UNION SELECT DISTINCT * FROM vt1 WHERE ((((~ (vt1.c0))) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT ALL rt0.c0, rt0.c1, rt0.c2, vt1.c0, rt0.c4, rt0.c3 FROM rt0 RIGHT OUTER JOIN vt1 ON (- ((rt0.c4 IN ()))) GROUP BY rt0.c0, rt0.c1, rt0.c2, vt1.c0, rt0.c4, rt0.c3;
SELECT ALL rt0.c0, rt0.c1, rt0.c2, vt1.c0, rt0.c4, rt0.c3 FROM rt0 RIGHT OUTER JOIN vt1 ON (- ((rt0.c4 IN ()))) WHERE (rt0.c4) GROUP BY rt0.c0, rt0.c1, rt0.c2, vt1.c0, rt0.c4, rt0.c3 UNION SELECT rt0.c0, rt0.c1, rt0.c2, vt1.c0, rt0.c4, rt0.c3 FROM rt0 RIGHT OUTER JOIN vt1 ON (- ((rt0.c4 IN ()))) WHERE ((NOT (rt0.c4))) GROUP BY rt0.c0, rt0.c1, rt0.c2, vt1.c0, rt0.c4, rt0.c3 UNION SELECT rt0.c0, rt0.c1, rt0.c2, vt1.c0, rt0.c4, rt0.c3 FROM rt0 RIGHT OUTER JOIN vt1 ON (- ((rt0.c4 IN ()))) WHERE (((rt0.c4) ISNULL)) GROUP BY rt0.c0, rt0.c1, rt0.c2, vt1.c0, rt0.c4, rt0.c3;
SELECT ALL rt0.c0, rt0.c1, rt0.c2, vt1.c0, rt0.c4, rt0.c3 FROM rt0 RIGHT OUTER JOIN vt1 ON (- ((rt0.c4 IN ()))) GROUP BY rt0.c0, rt0.c1, rt0.c2, vt1.c0, rt0.c4, rt0.c3;
SELECT rt0.c4 FROM rt0 GROUP BY rt0.c4;
SELECT ALL rt0.c4 FROM rt0 GROUP BY rt0.c4 HAVING (SUM(rt0.c2) IN ()) UNION ALL SELECT ALL rt0.c4 FROM rt0 GROUP BY rt0.c4 HAVING (NOT ((SUM(rt0.c2) IN ()))) UNION ALL SELECT rt0.c4 FROM rt0 GROUP BY rt0.c4 HAVING (((SUM(rt0.c2) IN ())) ISNULL);
SELECT rt0.c4 FROM rt0 GROUP BY rt0.c4;
SELECT ALL rt0.c4 FROM rt0 GROUP BY rt0.c4 HAVING (SUM(rt0.c2) IN ()) UNION ALL SELECT ALL rt0.c4 FROM rt0 GROUP BY rt0.c4 HAVING (NOT ((SUM(rt0.c2) IN ()))) UNION ALL SELECT rt0.c4 FROM rt0 GROUP BY rt0.c4 HAVING (((SUM(rt0.c2) IN ())) ISNULL);
SELECT rt0.c4 FROM rt0 GROUP BY rt0.c4;
SELECT ALL * FROM vt1, rt0;
SELECT ALL * FROM vt1, rt0 WHERE ((((vt1.c0)*(vt1.c0)) IN ())) UNION ALL SELECT ALL * FROM vt1, rt0 WHERE ((NOT ((((vt1.c0)*(vt1.c0)) IN ())))) UNION ALL SELECT * FROM vt1, rt0 WHERE ((((((vt1.c0)*(vt1.c0)) IN ())) ISNULL));
SELECT ALL * FROM vt1, rt0;
SELECT DISTINCT vt1.c0, rt0.c1, rt0.c3, rt0.c0, rt0.c4, rt0.c2 FROM vt1, rt0;
SELECT DISTINCT vt1.c0, rt0.c1, rt0.c3, rt0.c0, rt0.c4, rt0.c2 FROM vt1, rt0 WHERE (((rt0.c4) BETWEEN (rt0.c1) AND (CAST(rt0.c3 AS TEXT)))) UNION SELECT DISTINCT vt1.c0, rt0.c1, rt0.c3, rt0.c0, rt0.c4, rt0.c2 FROM vt1, rt0 WHERE ((NOT (((rt0.c4) BETWEEN (rt0.c1) AND (CAST(rt0.c3 AS TEXT)))))) UNION SELECT DISTINCT vt1.c0, rt0.c1, rt0.c3, rt0.c0, rt0.c4, rt0.c2 FROM vt1, rt0 WHERE (((((rt0.c4) BETWEEN (rt0.c1) AND (CAST(rt0.c3 AS TEXT)))) ISNULL));
SELECT DISTINCT vt1.c0, rt0.c1, rt0.c3, rt0.c0, rt0.c4, rt0.c2 FROM vt1, rt0;
SELECT rt0.c4, rt0.c3, rt0.c1 FROM rt0 GROUP BY rt0.c4, rt0.c3, rt0.c1;
SELECT rt0.c4, rt0.c3, rt0.c1 FROM rt0 WHERE ((rt0.c3 IN ()) COLLATE RTRIM) GROUP BY rt0.c4, rt0.c3, rt0.c1 UNION SELECT rt0.c4, rt0.c3, rt0.c1 FROM rt0 WHERE ((NOT ((rt0.c3 IN ()) COLLATE RTRIM))) GROUP BY rt0.c4, rt0.c3, rt0.c1 UNION SELECT rt0.c4, rt0.c3, rt0.c1 FROM rt0 WHERE ((((rt0.c3 IN ()) COLLATE RTRIM) ISNULL)) GROUP BY rt0.c4, rt0.c3, rt0.c1;
SELECT rt0.c4, rt0.c3, rt0.c1 FROM rt0 GROUP BY rt0.c4, rt0.c3, rt0.c1;
SELECT rt0.c0, rt0.c4, vt1.c0, rt0.c3, rt0.c2 FROM vt1 LEFT OUTER JOIN rt0 ON DATETIME(((rt0.c1)=(rt0.c4)), (rt0.c3 IN ()), ((rt0.c0) ISNULL), ((rt0.c0)LIKE(rt0.c4)), (rt0.c1 IN ())) GROUP BY rt0.c0, rt0.c4, vt1.c0, rt0.c3, rt0.c2;
SELECT ALL rt0.c0, rt0.c4, vt1.c0, rt0.c3, rt0.c2 FROM vt1 LEFT OUTER JOIN rt0 ON DATETIME(((rt0.c1)=(rt0.c4)), (rt0.c3 IN ()), ((rt0.c0) ISNULL), ((rt0.c0)LIKE(rt0.c4)), (rt0.c1 IN ())) GROUP BY rt0.c0, rt0.c4, vt1.c0, rt0.c3, rt0.c2 HAVING vt1.c0 UNION ALL SELECT rt0.c0, rt0.c4, vt1.c0, rt0.c3, rt0.c2 FROM vt1 LEFT OUTER JOIN rt0 ON DATETIME(((rt0.c1)=(rt0.c4)), (rt0.c3 IN ()), ((rt0.c0) ISNULL), ((rt0.c0)LIKE(rt0.c4)), (rt0.c1 IN ())) GROUP BY rt0.c0, rt0.c4, vt1.c0, rt0.c3, rt0.c2 HAVING (NOT (vt1.c0)) UNION ALL SELECT ALL rt0.c0, rt0.c4, vt1.c0, rt0.c3, rt0.c2 FROM vt1 LEFT OUTER JOIN rt0 ON DATETIME(((rt0.c1)=(rt0.c4)), (rt0.c3 IN ()), ((rt0.c0) ISNULL), ((rt0.c0)LIKE(rt0.c4)), (rt0.c1 IN ())) GROUP BY rt0.c0, rt0.c4, vt1.c0, rt0.c3, rt0.c2 HAVING ((vt1.c0) ISNULL);
SELECT rt0.c0, rt0.c4, vt1.c0, rt0.c3, rt0.c2 FROM vt1 LEFT OUTER JOIN rt0 ON DATETIME(((rt0.c1)=(rt0.c4)), (rt0.c3 IN ()), ((rt0.c0) ISNULL), ((rt0.c0)LIKE(rt0.c4)), (rt0.c1 IN ())) GROUP BY rt0.c0, rt0.c4, vt1.c0, rt0.c3, rt0.c2;
SELECT ALL rt0.c0, rt0.c4, vt1.c0, rt0.c3, rt0.c2 FROM vt1 LEFT OUTER JOIN rt0 ON DATETIME(((rt0.c1)=(rt0.c4)), (rt0.c3 IN ()), ((rt0.c0) ISNULL), ((rt0.c0)LIKE(rt0.c4)), (rt0.c1 IN ())) GROUP BY rt0.c0, rt0.c4, vt1.c0, rt0.c3, rt0.c2 HAVING vt1.c0 UNION ALL SELECT rt0.c0, rt0.c4, vt1.c0, rt0.c3, rt0.c2 FROM vt1 LEFT OUTER JOIN rt0 ON DATETIME(((rt0.c1)=(rt0.c4)), (rt0.c3 IN ()), ((rt0.c0) ISNULL), ((rt0.c0)LIKE(rt0.c4)), (rt0.c1 IN ())) GROUP BY rt0.c0, rt0.c4, vt1.c0, rt0.c3, rt0.c2 HAVING (NOT (vt1.c0)) UNION ALL SELECT ALL rt0.c0, rt0.c4, vt1.c0, rt0.c3, rt0.c2 FROM vt1 LEFT OUTER JOIN rt0 ON DATETIME(((rt0.c1)=(rt0.c4)), (rt0.c3 IN ()), ((rt0.c0) ISNULL), ((rt0.c0)LIKE(rt0.c4)), (rt0.c1 IN ())) GROUP BY rt0.c0, rt0.c4, vt1.c0, rt0.c3, rt0.c2 HAVING ((vt1.c0) ISNULL);
SELECT rt0.c0, rt0.c4, vt1.c0, rt0.c3, rt0.c2 FROM vt1 LEFT OUTER JOIN rt0 ON DATETIME(((rt0.c1)=(rt0.c4)), (rt0.c3 IN ()), ((rt0.c0) ISNULL), ((rt0.c0)LIKE(rt0.c4)), (rt0.c1 IN ())) GROUP BY rt0.c0, rt0.c4, vt1.c0, rt0.c3, rt0.c2;
SELECT ALL rt0.c3, vt1.c0, rt0.c4, rt0.c2 FROM rt0, vt1;
SELECT ALL rt0.c3, vt1.c0, rt0.c4, rt0.c2 FROM rt0, vt1 WHERE ((((((~ (rt0.c4)))AND(((rt0.c0) IS TRUE))))OR(-1063001635))) UNION ALL SELECT ALL rt0.c3, vt1.c0, rt0.c4, rt0.c2 FROM rt0, vt1 WHERE ((NOT ((((((~ (rt0.c4)))AND(((rt0.c0) IS TRUE))))OR(-1063001635))))) UNION ALL SELECT rt0.c3, vt1.c0, rt0.c4, rt0.c2 FROM rt0, vt1 WHERE ((((((((~ (rt0.c4)))AND(((rt0.c0) IS TRUE))))OR(-1063001635))) ISNULL));
SELECT ALL rt0.c3, vt1.c0, rt0.c4, rt0.c2 FROM rt0, vt1;
SELECT DISTINCT rt0.c2, vt1.c0, rt0.c4, rt0.c0, rt0.c3, rt0.c1 FROM vt1, rt0;
SELECT DISTINCT rt0.c2, vt1.c0, rt0.c4, rt0.c0, rt0.c3, rt0.c1 FROM vt1, rt0 WHERE (CASE WHEN ((rt0.c2) IS FALSE) THEN rt0.c1 ELSE rt0.c0 COLLATE RTRIM END) UNION SELECT DISTINCT rt0.c2, vt1.c0, rt0.c4, rt0.c0, rt0.c3, rt0.c1 FROM vt1, rt0 WHERE ((NOT (CASE WHEN ((rt0.c2) IS FALSE) THEN rt0.c1 ELSE rt0.c0 COLLATE RTRIM END))) UNION SELECT DISTINCT rt0.c2, vt1.c0, rt0.c4, rt0.c0, rt0.c3, rt0.c1 FROM vt1, rt0 WHERE (((CASE WHEN ((rt0.c2) IS FALSE) THEN rt0.c1 ELSE rt0.c0 COLLATE RTRIM END) ISNULL));
SELECT DISTINCT rt0.c2, vt1.c0, rt0.c4, rt0.c0, rt0.c3, rt0.c1 FROM vt1, rt0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE (0x26723499 COLLATE BINARY) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT (0x26723499 COLLATE BINARY))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE (((0x26723499 COLLATE BINARY) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING CASE WHEN (((MAX(MIN(rt0.c1))))>((GROUP_CONCAT(rt0.c4)))) THEN CAST(MIN(rt0.c1) AS REAL) ELSE ((rt0.c2)|(rt0.c0)) END UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT (CASE WHEN (((MAX(MIN(rt0.c1))))>((GROUP_CONCAT(rt0.c4)))) THEN CAST(MIN(rt0.c1) AS REAL) ELSE ((rt0.c2)|(rt0.c0)) END)) UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING ((CASE WHEN (((MAX(MIN(rt0.c1))))>((GROUP_CONCAT(rt0.c4)))) THEN CAST(MIN(rt0.c1) AS REAL) ELSE ((rt0.c2)|(rt0.c0)) END) ISNULL);
SELECT rt0.c0, rt0.c4 FROM rt0, vt1;
SELECT ALL rt0.c0, rt0.c4 FROM rt0, vt1 WHERE (((((0.8536379108126836)AND(((((((((NULL)AND(rt0.c0)))AND(rt0.c2)))AND(rt0.c3)))OR(vt1.c0)))))AND(rt0.c4 COLLATE NOCASE))) UNION ALL SELECT rt0.c0, rt0.c4 FROM rt0, vt1 WHERE ((NOT (((((0.8536379108126836)AND(((((((((NULL)AND(rt0.c0)))AND(rt0.c2)))AND(rt0.c3)))OR(vt1.c0)))))AND(rt0.c4 COLLATE NOCASE))))) UNION ALL SELECT rt0.c0, rt0.c4 FROM rt0, vt1 WHERE (((((((0.8536379108126836)AND(((((((((NULL)AND(rt0.c0)))AND(rt0.c2)))AND(rt0.c3)))OR(vt1.c0)))))AND(rt0.c4 COLLATE NOCASE))) ISNULL));
SELECT rt0.c0, rt0.c4 FROM rt0, vt1;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((CAST(rt0.c0 AS TEXT) IN ((NOT (rt0.c0)), rt0.c0 COLLATE BINARY))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((CAST(rt0.c0 AS TEXT) IN ((NOT (rt0.c0)), rt0.c0 COLLATE BINARY))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((CAST(rt0.c0 AS TEXT) IN ((NOT (rt0.c0)), rt0.c0 COLLATE BINARY))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c0, vt1.c0, rt0.c3, rt0.c1, rt0.c2, rt0.c4 FROM vt1 LEFT OUTER JOIN rt0 ON ((((rt0.c0) BETWEEN (rt0.c3) AND (rt0.c4)))<=((~ (rt0.c4)))) GROUP BY rt0.c0, vt1.c0, rt0.c3, rt0.c1, rt0.c2, rt0.c4;
SELECT rt0.c0, vt1.c0, rt0.c3, rt0.c1, rt0.c2, rt0.c4 FROM vt1 LEFT OUTER JOIN rt0 ON ((((rt0.c0) BETWEEN (rt0.c3) AND (rt0.c4)))<=((~ (rt0.c4)))) WHERE (((rt0.c0) BETWEEN (((rt0.c3) NOTNULL)) AND (((((((((rt0.c2)OR(rt0.c1)))OR(vt1.c0)))AND(rt0.c2)))OR(rt0.c3))))) GROUP BY rt0.c0, vt1.c0, rt0.c3, rt0.c1, rt0.c2, rt0.c4 UNION SELECT rt0.c0, vt1.c0, rt0.c3, rt0.c1, rt0.c2, rt0.c4 FROM vt1 LEFT OUTER JOIN rt0 ON ((((rt0.c0) BETWEEN (rt0.c3) AND (rt0.c4)))<=((~ (rt0.c4)))) WHERE ((NOT (((rt0.c0) BETWEEN (((rt0.c3) NOTNULL)) AND (((((((((rt0.c2)OR(rt0.c1)))OR(vt1.c0)))AND(rt0.c2)))OR(rt0.c3))))))) GROUP BY rt0.c0, vt1.c0, rt0.c3, rt0.c1, rt0.c2, rt0.c4 UNION SELECT ALL rt0.c0, vt1.c0, rt0.c3, rt0.c1, rt0.c2, rt0.c4 FROM vt1 LEFT OUTER JOIN rt0 ON ((((rt0.c0) BETWEEN (rt0.c3) AND (rt0.c4)))<=((~ (rt0.c4)))) WHERE (((((rt0.c0) BETWEEN (((rt0.c3) NOTNULL)) AND (((((((((rt0.c2)OR(rt0.c1)))OR(vt1.c0)))AND(rt0.c2)))OR(rt0.c3))))) ISNULL)) GROUP BY rt0.c0, vt1.c0, rt0.c3, rt0.c1, rt0.c2, rt0.c4;
SELECT ALL rt0.c0, vt1.c0, rt0.c3, rt0.c1, rt0.c2, rt0.c4 FROM vt1 LEFT OUTER JOIN rt0 ON ((((rt0.c0) BETWEEN (rt0.c3) AND (rt0.c4)))<=((~ (rt0.c4)))) GROUP BY rt0.c0, vt1.c0, rt0.c3, rt0.c1, rt0.c2, rt0.c4;
SELECT ALL rt0.c0, rt0.c1, vt1.c0, rt0.c4, rt0.c2 FROM rt0, vt1 GROUP BY rt0.c0, rt0.c1, vt1.c0, rt0.c4, rt0.c2;
SELECT ALL rt0.c0, rt0.c1, vt1.c0, rt0.c4, rt0.c2 FROM rt0, vt1 GROUP BY rt0.c0, rt0.c1, vt1.c0, rt0.c4, rt0.c2 HAVING LIKE((+ (GROUP_CONCAT(rt0.c1))), LAST_INSERT_ROWID()) UNION ALL SELECT rt0.c0, rt0.c1, vt1.c0, rt0.c4, rt0.c2 FROM rt0, vt1 GROUP BY rt0.c0, rt0.c1, vt1.c0, rt0.c4, rt0.c2 HAVING (NOT (LIKE((+ (GROUP_CONCAT(rt0.c1))), LAST_INSERT_ROWID()))) UNION ALL SELECT ALL rt0.c0, rt0.c1, vt1.c0, rt0.c4, rt0.c2 FROM rt0, vt1 GROUP BY rt0.c0, rt0.c1, vt1.c0, rt0.c4, rt0.c2 HAVING ((LIKE((+ (GROUP_CONCAT(rt0.c1))), LAST_INSERT_ROWID())) ISNULL);
SELECT ALL rt0.c0, rt0.c1, vt1.c0, rt0.c4, rt0.c2 FROM rt0, vt1 GROUP BY rt0.c0, rt0.c1, vt1.c0, rt0.c4, rt0.c2;
SELECT ALL rt0.c0, rt0.c1, vt1.c0, rt0.c4, rt0.c2 FROM rt0, vt1 GROUP BY rt0.c0, rt0.c1, vt1.c0, rt0.c4, rt0.c2 HAVING LIKE((+ (GROUP_CONCAT(rt0.c1))), LAST_INSERT_ROWID()) UNION ALL SELECT rt0.c0, rt0.c1, vt1.c0, rt0.c4, rt0.c2 FROM rt0, vt1 GROUP BY rt0.c0, rt0.c1, vt1.c0, rt0.c4, rt0.c2 HAVING (NOT (LIKE((+ (GROUP_CONCAT(rt0.c1))), LAST_INSERT_ROWID()))) UNION ALL SELECT ALL rt0.c0, rt0.c1, vt1.c0, rt0.c4, rt0.c2 FROM rt0, vt1 GROUP BY rt0.c0, rt0.c1, vt1.c0, rt0.c4, rt0.c2 HAVING ((LIKE((+ (GROUP_CONCAT(rt0.c1))), LAST_INSERT_ROWID())) ISNULL);
SELECT ALL rt0.c0, rt0.c1, vt1.c0, rt0.c4, rt0.c2 FROM rt0, vt1 GROUP BY rt0.c0, rt0.c1, vt1.c0, rt0.c4, rt0.c2;
SELECT rt0.c4, vt1.c0, rt0.c0, rt0.c2, rt0.c1 FROM rt0, vt1;
SELECT ALL rt0.c4, vt1.c0, rt0.c0, rt0.c2, rt0.c1 FROM rt0, vt1 WHERE ((((rt0.c1)) BETWEEN (((NULL IN ()))) AND ((UPPER(rt0.c3))))) UNION ALL SELECT ALL rt0.c4, vt1.c0, rt0.c0, rt0.c2, rt0.c1 FROM rt0, vt1 WHERE ((NOT ((((rt0.c1)) BETWEEN (((NULL IN ()))) AND ((UPPER(rt0.c3))))))) UNION ALL SELECT ALL rt0.c4, vt1.c0, rt0.c0, rt0.c2, rt0.c1 FROM rt0, vt1 WHERE ((((((rt0.c1)) BETWEEN (((NULL IN ()))) AND ((UPPER(rt0.c3))))) ISNULL));
SELECT rt0.c4, vt1.c0, rt0.c0, rt0.c2, rt0.c1 FROM rt0, vt1;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((((rt0.c4) BETWEEN (rt0.c0) AND (rt0.c1)))>>(LAST_INSERT_ROWID()))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((((rt0.c4) BETWEEN (rt0.c0) AND (rt0.c1)))>>(LAST_INSERT_ROWID()))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((((rt0.c4) BETWEEN (rt0.c0) AND (rt0.c1)))>>(LAST_INSERT_ROWID()))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c0, vt1.c0, rt0.c4, rt0.c1 FROM vt1, rt0 GROUP BY rt0.c0, vt1.c0, rt0.c4, rt0.c1;
SELECT rt0.c0, vt1.c0, rt0.c4, rt0.c1 FROM vt1, rt0 WHERE ((- ((((rt0.c3))<((x'')))))) GROUP BY rt0.c0, vt1.c0, rt0.c4, rt0.c1 UNION SELECT ALL rt0.c0, vt1.c0, rt0.c4, rt0.c1 FROM vt1, rt0 WHERE ((NOT ((- ((((rt0.c3))<((x'')))))))) GROUP BY rt0.c0, vt1.c0, rt0.c4, rt0.c1 UNION SELECT ALL rt0.c0, vt1.c0, rt0.c4, rt0.c1 FROM vt1, rt0 WHERE ((((- ((((rt0.c3))<((x'')))))) ISNULL)) GROUP BY rt0.c0, vt1.c0, rt0.c4, rt0.c1;
SELECT rt0.c0, vt1.c0, rt0.c4, rt0.c1 FROM vt1, rt0 GROUP BY rt0.c0, vt1.c0, rt0.c4, rt0.c1;
SELECT rt0.c0, rt0.c4, rt0.c1 FROM rt0, vt1 GROUP BY rt0.c0, rt0.c4, rt0.c1;
SELECT rt0.c0, rt0.c4, rt0.c1 FROM rt0, vt1 GROUP BY rt0.c0, rt0.c4, rt0.c1 HAVING CAST(MIN(GROUP_CONCAT(vt1.c0)) AS INTEGER) UNION ALL SELECT rt0.c0, rt0.c4, rt0.c1 FROM rt0, vt1 GROUP BY rt0.c0, rt0.c4, rt0.c1 HAVING (NOT (CAST(MIN(GROUP_CONCAT(vt1.c0)) AS INTEGER))) UNION ALL SELECT ALL rt0.c0, rt0.c4, rt0.c1 FROM rt0, vt1 GROUP BY rt0.c0, rt0.c4, rt0.c1 HAVING ((CAST(MIN(GROUP_CONCAT(vt1.c0)) AS INTEGER)) ISNULL);
SELECT ALL vt1.c0 FROM vt1;
SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (vt1.c0 COLLATE NOCASE))) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT ((NOT (vt1.c0 COLLATE NOCASE))))) UNION ALL SELECT vt1.c0 FROM vt1 WHERE ((((NOT (vt1.c0 COLLATE NOCASE))) ISNULL));
SELECT ALL vt1.c0 FROM vt1;
SELECT DISTINCT rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c2 FROM rt0 WHERE ((((+ (x''))) BETWEEN (((rt0.c0)AND(rt0.c4))) AND (CAST(rt0.c1 AS NUMERIC)))) UNION SELECT DISTINCT rt0.c2 FROM rt0 WHERE ((NOT ((((+ (x''))) BETWEEN (((rt0.c0)AND(rt0.c4))) AND (CAST(rt0.c1 AS NUMERIC)))))) UNION SELECT DISTINCT rt0.c2 FROM rt0 WHERE ((((((+ (x''))) BETWEEN (((rt0.c0)AND(rt0.c4))) AND (CAST(rt0.c1 AS NUMERIC)))) ISNULL));
SELECT DISTINCT rt0.c2 FROM rt0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE (((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) IS FALSE)) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) IS FALSE)))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE (((((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) IS FALSE)) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0, vt1 GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM rt0, vt1 GROUP BY rt0.c2, rt0.c0 HAVING GROUP_CONCAT(CHAR(vt1.c0)) UNION ALL SELECT rt0.c2, rt0.c0 FROM rt0, vt1 GROUP BY rt0.c2, rt0.c0 HAVING (NOT (GROUP_CONCAT(CHAR(vt1.c0)))) UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM rt0, vt1 GROUP BY rt0.c2, rt0.c0 HAVING ((GROUP_CONCAT(CHAR(vt1.c0))) ISNULL);
SELECT ALL rt0.c2, rt0.c0 FROM rt0, vt1 GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM rt0, vt1 GROUP BY rt0.c2, rt0.c0 HAVING GROUP_CONCAT(CHAR(vt1.c0)) UNION ALL SELECT rt0.c2, rt0.c0 FROM rt0, vt1 GROUP BY rt0.c2, rt0.c0 HAVING (NOT (GROUP_CONCAT(CHAR(vt1.c0)))) UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM rt0, vt1 GROUP BY rt0.c2, rt0.c0 HAVING ((GROUP_CONCAT(CHAR(vt1.c0))) ISNULL);
SELECT ALL rt0.c2, rt0.c0 FROM rt0, vt1 GROUP BY rt0.c2, rt0.c0;
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE (((((rt0.c3)LIKE(rt0.c3))) NOT NULL)) UNION ALL SELECT * FROM rt0 WHERE ((NOT (((((rt0.c3)LIKE(rt0.c3))) NOT NULL)))) UNION ALL SELECT ALL * FROM rt0 WHERE (((((((rt0.c3)LIKE(rt0.c3))) NOT NULL)) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT * FROM rt0, vt1;
SELECT DISTINCT * FROM rt0, vt1 WHERE (CASE 0.2781858380251635  WHEN rt0.c0 THEN ((vt1.c0)<<(rt0.c1)) WHEN (x'' IN ()) THEN CAST(rt0.c3 AS REAL) WHEN 0.07674554263333544 THEN ((((((((rt0.c2)OR(rt0.c4)))OR(rt0.c3)))AND(rt0.c4)))AND(rt0.c3)) END) UNION SELECT DISTINCT * FROM rt0, vt1 WHERE ((NOT (CASE 0.2781858380251635  WHEN rt0.c0 THEN ((vt1.c0)<<(rt0.c1)) WHEN (x'' IN ()) THEN CAST(rt0.c3 AS REAL) WHEN 0.07674554263333544 THEN ((((((((rt0.c2)OR(rt0.c4)))OR(rt0.c3)))AND(rt0.c4)))AND(rt0.c3)) END))) UNION SELECT DISTINCT * FROM rt0, vt1 WHERE (((CASE 0.2781858380251635  WHEN rt0.c0 THEN ((vt1.c0)<<(rt0.c1)) WHEN (x'' IN ()) THEN CAST(rt0.c3 AS REAL) WHEN 0.07674554263333544 THEN ((((((((rt0.c2)OR(rt0.c4)))OR(rt0.c3)))AND(rt0.c4)))AND(rt0.c3)) END) ISNULL));
SELECT DISTINCT * FROM rt0, vt1;
SELECT rt0.c2 FROM rt0, vt1 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0, vt1 WHERE (((((((vt1.c0)+(rt0.c0)))AND(vt1.c0)))AND((+ (rt0.c0))))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0, vt1 WHERE ((NOT (((((((vt1.c0)+(rt0.c0)))AND(vt1.c0)))AND((+ (rt0.c0))))))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM rt0, vt1 WHERE (((((((((vt1.c0)+(rt0.c0)))AND(vt1.c0)))AND((+ (rt0.c0))))) ISNULL)) GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0, vt1 GROUP BY rt0.c2;
SELECT ALL rt0.c4, rt0.c0, rt0.c1, rt0.c2, rt0.c3, vt1.c0 FROM rt0 NATURAL JOIN vt1 GROUP BY rt0.c4, rt0.c0, rt0.c1, rt0.c2, rt0.c3, vt1.c0;
SELECT rt0.c4, rt0.c0, rt0.c1, rt0.c2, rt0.c3, vt1.c0 FROM rt0 NATURAL JOIN vt1 GROUP BY rt0.c4, rt0.c0, rt0.c1, rt0.c2, rt0.c3, vt1.c0 HAVING TOTAL((NOT (MAX(COUNT(*))))) UNION ALL SELECT rt0.c4, rt0.c0, rt0.c1, rt0.c2, rt0.c3, vt1.c0 FROM rt0 NATURAL JOIN vt1 GROUP BY rt0.c4, rt0.c0, rt0.c1, rt0.c2, rt0.c3, vt1.c0 HAVING (NOT (TOTAL((NOT (MAX(COUNT(*))))))) UNION ALL SELECT rt0.c4, rt0.c0, rt0.c1, rt0.c2, rt0.c3, vt1.c0 FROM rt0 NATURAL JOIN vt1 GROUP BY rt0.c4, rt0.c0, rt0.c1, rt0.c2, rt0.c3, vt1.c0 HAVING ((TOTAL((NOT (MAX(COUNT(*)))))) ISNULL);
SELECT * FROM rt0, vt1;
SELECT ALL * FROM rt0, vt1 WHERE (((rt0.c4)=(((vt1.c0) BETWEEN (rt0.c3) AND (rt0.c1))))) UNION ALL SELECT * FROM rt0, vt1 WHERE ((NOT (((rt0.c4)==(((vt1.c0) BETWEEN (rt0.c3) AND (rt0.c1))))))) UNION ALL SELECT * FROM rt0, vt1 WHERE (((((rt0.c4)=(((vt1.c0) BETWEEN (rt0.c3) AND (rt0.c1))))) ISNULL));
SELECT * FROM rt0, vt1;
SELECT DISTINCT * FROM rt0, vt1;
SELECT DISTINCT * FROM rt0, vt1 WHERE (((((((((((rt0.c1)|(vt1.c0)))OR(((rt0.c2)IS NOT(rt0.c3)))))OR(((rt0.c2)||(rt0.c1)))))OR((- (vt1.c0)))))OR((NOT (rt0.c3))))) UNION SELECT DISTINCT * FROM rt0, vt1 WHERE ((NOT (((((((((((rt0.c1)|(vt1.c0)))OR(((rt0.c2)IS NOT(rt0.c3)))))OR(((rt0.c2)||(rt0.c1)))))OR((- (vt1.c0)))))OR((NOT (rt0.c3))))))) UNION SELECT DISTINCT * FROM rt0, vt1 WHERE (((((((((((((rt0.c1)|(vt1.c0)))OR(((rt0.c2)IS NOT(rt0.c3)))))OR(((rt0.c2)||(rt0.c1)))))OR((- (vt1.c0)))))OR((NOT (rt0.c3))))) ISNULL));
SELECT DISTINCT * FROM rt0, vt1;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE (vt1.c0) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (vt1.c0))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE (((vt1.c0) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL rt0.c4, rt0.c1, rt0.c2, vt1.c0 FROM vt1 CROSS JOIN rt0 ON ((((rt0.c0 IN (vt1.c0))))<=((CASE WHEN vt1.c0 THEN vt1.c0 END))) GROUP BY rt0.c4, rt0.c1, rt0.c2, vt1.c0;
SELECT rt0.c4, rt0.c1, rt0.c2, vt1.c0 FROM vt1 CROSS JOIN rt0 ON ((((rt0.c0 IN (vt1.c0))))<=((CASE WHEN vt1.c0 THEN vt1.c0 END))) GROUP BY rt0.c4, rt0.c1, rt0.c2, vt1.c0 HAVING CASE WHEN TOTAL(AVG(MIN(AVG(rt0.c0)))) THEN ((SUM(TOTAL('')))LIKE(rt0.c4)) ELSE CASE WHEN rt0.c3 THEN vt1.c0 ELSE TOTAL(rt0.c2) END END UNION ALL SELECT ALL rt0.c4, rt0.c1, rt0.c2, vt1.c0 FROM vt1 CROSS JOIN rt0 ON ((((rt0.c0 IN (vt1.c0))))<=((CASE WHEN vt1.c0 THEN vt1.c0 END))) GROUP BY rt0.c4, rt0.c1, rt0.c2, vt1.c0 HAVING (NOT (CASE WHEN TOTAL(AVG(MIN(AVG(rt0.c0)))) THEN ((SUM(TOTAL('')))LIKE(rt0.c4)) ELSE CASE WHEN rt0.c3 THEN vt1.c0 ELSE TOTAL(rt0.c2) END END)) UNION ALL SELECT rt0.c4, rt0.c1, rt0.c2, vt1.c0 FROM vt1 CROSS JOIN rt0 ON ((((rt0.c0 IN (vt1.c0))))<=((CASE WHEN vt1.c0 THEN vt1.c0 END))) GROUP BY rt0.c4, rt0.c1, rt0.c2, vt1.c0 HAVING ((CASE WHEN TOTAL(AVG(MIN(AVG(rt0.c0)))) THEN ((SUM(TOTAL('')))LIKE(rt0.c4)) ELSE CASE WHEN rt0.c3 THEN vt1.c0 ELSE TOTAL(rt0.c2) END END) ISNULL);
SELECT MIN((NOT (((rt0.c3)/(rt0.c3))))) FROM vt1, rt0;
SELECT vt1.c0, rt0.c2, rt0.c3 FROM vt1, rt0;
SELECT vt1.c0, rt0.c2, rt0.c3 FROM vt1 NOT INDEXED, rt0 NOT INDEXED WHERE (((((((((((rt0.c4)AND(rt0.c0)))AND(vt1.c0)))OR(rt0.c1)))OR('')))LIKE(((rt0.c1)&(vt1.c0))))) UNION ALL SELECT vt1.c0, rt0.c2, rt0.c3 FROM vt1, rt0 WHERE ((NOT (((((((((((rt0.c4)AND(rt0.c0)))AND(vt1.c0)))OR(rt0.c1)))OR('')))LIKE(((rt0.c1)&(vt1.c0))))))) UNION ALL SELECT vt1.c0, rt0.c2, rt0.c3 FROM vt1, rt0 WHERE (((((((((((((rt0.c4)AND(rt0.c0)))AND(vt1.c0)))OR(rt0.c1)))OR('')))LIKE(((rt0.c1)&(vt1.c0))))) ISNULL));
SELECT vt1.c0, rt0.c2, rt0.c3 FROM vt1, rt0;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((vt1.c0 COLLATE NOCASE)/(CAST(vt1.c0 AS REAL)))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT (((vt1.c0 COLLATE NOCASE)/(CAST(vt1.c0 AS REAL)))))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((((vt1.c0 COLLATE NOCASE)/(CAST(vt1.c0 AS REAL)))) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT ALL rt0.c0, rt0.c2, rt0.c4, rt0.c1, rt0.c3 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c4, rt0.c1, rt0.c3;
SELECT ALL rt0.c0, rt0.c2, rt0.c4, rt0.c1, rt0.c3 FROM rt0 WHERE (load_extension(((rt0.c1)>=(rt0.c0)), ((rt0.c2) IS FALSE))) GROUP BY rt0.c0, rt0.c2, rt0.c4, rt0.c1, rt0.c3 UNION SELECT ALL rt0.c0, rt0.c2, rt0.c4, rt0.c1, rt0.c3 FROM rt0 WHERE ((NOT (load_extension(((rt0.c1)>=(rt0.c0)), ((rt0.c2) IS FALSE))))) GROUP BY rt0.c0, rt0.c2, rt0.c4, rt0.c1, rt0.c3 UNION SELECT ALL rt0.c0, rt0.c2, rt0.c4, rt0.c1, rt0.c3 FROM rt0 WHERE (((load_extension(((rt0.c1)>=(rt0.c0)), ((rt0.c2) IS FALSE))) ISNULL)) GROUP BY rt0.c0, rt0.c2, rt0.c4, rt0.c1, rt0.c3;
SELECT ALL rt0.c3, rt0.c0, rt0.c4, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c3, rt0.c0, rt0.c4, rt0.c1, rt0.c2;
SELECT rt0.c3, rt0.c0, rt0.c4, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c3, rt0.c0, rt0.c4, rt0.c1, rt0.c2 HAVING MAX(MIN(rt0.c0)) UNION ALL SELECT ALL rt0.c3, rt0.c0, rt0.c4, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c3, rt0.c0, rt0.c4, rt0.c1, rt0.c2 HAVING (NOT (MAX(MIN(rt0.c0)))) UNION ALL SELECT ALL rt0.c3, rt0.c0, rt0.c4, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c3, rt0.c0, rt0.c4, rt0.c1, rt0.c2 HAVING ((MAX(MIN(rt0.c0))) ISNULL);
SELECT ALL TOTAL(((CAST(rt0.c1 AS TEXT))>((((rt0.c1, rt0.c1, rt0.c1))>((rt0.c4, rt0.c0, rt0.c2)))))) FROM rt0;
SELECT rt0.c3 FROM rt0;
SELECT ALL rt0.c3 FROM rt0 WHERE (((((((rt0.c3)OR(rt0.c2)))OR(rt0.c2))) NOT NULL)) UNION ALL SELECT rt0.c3 FROM rt0 WHERE ((NOT (((((((rt0.c3)OR(rt0.c2)))OR(rt0.c2))) NOT NULL)))) UNION ALL SELECT ALL rt0.c3 FROM rt0 WHERE (((((((((rt0.c3)OR(rt0.c2)))OR(rt0.c2))) NOT NULL)) ISNULL));
SELECT rt0.c3 FROM rt0;
SELECT DISTINCT rt0.c3 FROM vt1, rt0 NOT INDEXED;
SELECT DISTINCT rt0.c3 FROM vt1, rt0 WHERE (((((('ob') IS FALSE)))<=((((rt0.c4) IS TRUE))))) UNION SELECT DISTINCT rt0.c3 FROM vt1, rt0 WHERE ((NOT (((((('ob') IS FALSE)))<=((((rt0.c4) IS TRUE))))))) UNION SELECT DISTINCT rt0.c3 FROM vt1, rt0 WHERE (((((((('ob') IS FALSE)))<=((((rt0.c4) IS TRUE))))) ISNULL));
SELECT DISTINCT rt0.c3 FROM vt1, rt0 NOT INDEXED;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE ((((((vt1.c0)>=(vt1.c0)), ((vt1.c0)|(vt1.c0)), (- (vt1.c0)), ((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)), ''))<>((vt1.c0, vt1.c0, (vt1.c0 IN ()), (NOT (vt1.c0)), ((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT ((((((vt1.c0)>=(vt1.c0)), ((vt1.c0)|(vt1.c0)), (- (vt1.c0)), ((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)), ''))<>((vt1.c0, vt1.c0, (vt1.c0 IN ()), (NOT (vt1.c0)), ((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((((((((vt1.c0)>=(vt1.c0)), ((vt1.c0)|(vt1.c0)), (- (vt1.c0)), ((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)), ''))!=((vt1.c0, vt1.c0, (vt1.c0 IN ()), (NOT (vt1.c0)), ((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))))) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL rt0.c4, rt0.c0, rt0.c3, rt0.c2 FROM rt0 GROUP BY rt0.c4, rt0.c0, rt0.c3, rt0.c2;
SELECT ALL rt0.c4, rt0.c0, rt0.c3, rt0.c2 FROM rt0 GROUP BY rt0.c4, rt0.c0, rt0.c3, rt0.c2 HAVING CAST(TOTAL(COUNT(rt0.c1)) AS BLOB) UNION ALL SELECT ALL rt0.c4, rt0.c0, rt0.c3, rt0.c2 FROM rt0 GROUP BY rt0.c4, rt0.c0, rt0.c3, rt0.c2 HAVING (NOT (CAST(TOTAL(COUNT(rt0.c1)) AS BLOB))) UNION ALL SELECT rt0.c4, rt0.c0, rt0.c3, rt0.c2 FROM rt0 GROUP BY rt0.c4, rt0.c0, rt0.c3, rt0.c2 HAVING ((CAST(TOTAL(COUNT(rt0.c1)) AS BLOB)) ISNULL);
SELECT ALL SUM((NOT (HEX(DISTINCT vt1.c0)))) FROM vt1 ORDER BY LOWER(DISTINCT 'Xb)R') DESC  NULLS FIRST;
SELECT ALL rt0.c3, rt0.c1, rt0.c4 FROM rt0;
SELECT rt0.c3, rt0.c1, rt0.c4 FROM rt0 WHERE (ABS(DISTINCT ((((((((2051142402)AND(rt0.c3)))OR(rt0.c0)))AND(rt0.c0)))AND(rt0.c0)))) UNION ALL SELECT ALL rt0.c3, rt0.c1, rt0.c4 FROM rt0 WHERE ((NOT (ABS(DISTINCT ((((((((2051142402)AND(rt0.c3)))OR(rt0.c0)))AND(rt0.c0)))AND(rt0.c0)))))) UNION ALL SELECT ALL rt0.c3, rt0.c1, rt0.c4 FROM rt0 WHERE (((ABS(DISTINCT ((((((((2051142402)AND(rt0.c3)))OR(rt0.c0)))AND(rt0.c0)))AND(rt0.c0)))) ISNULL));
SELECT ALL rt0.c3, rt0.c1, rt0.c4 FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (CASE WHEN rt0.c4 COLLATE NOCASE THEN ((rt0.c1) NOTNULL) ELSE 'ⷓ''' END) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (CASE WHEN rt0.c4 COLLATE NOCASE THEN ((rt0.c1) NOTNULL) ELSE 'ⷓ''' END))) UNION SELECT DISTINCT * FROM rt0 NOT INDEXED WHERE (((CASE WHEN rt0.c4 COLLATE NOCASE THEN ((rt0.c1) NOTNULL) ELSE 'ⷓ''' END) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL vt1.c0, rt0.c0, rt0.c2, rt0.c3, rt0.c1, rt0.c4 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c0, rt0.c2, rt0.c3, rt0.c1, rt0.c4;
SELECT vt1.c0, rt0.c0, rt0.c2, rt0.c3, rt0.c1, rt0.c4 FROM vt1, rt0 WHERE ((((~ (rt0.c2)))LIKE(((rt0.c2)IS(rt0.c1))))) GROUP BY vt1.c0, rt0.c0, rt0.c2, rt0.c3, rt0.c1, rt0.c4 UNION SELECT vt1.c0, rt0.c0, rt0.c2, rt0.c3, rt0.c1, rt0.c4 FROM vt1, rt0 WHERE ((NOT ((((~ (rt0.c2)))LIKE(((rt0.c2)IS(rt0.c1))))))) GROUP BY vt1.c0, rt0.c0, rt0.c2, rt0.c3, rt0.c1, rt0.c4 UNION SELECT vt1.c0, rt0.c0, rt0.c2, rt0.c3, rt0.c1, rt0.c4 FROM vt1, rt0 WHERE ((((((~ (rt0.c2)))LIKE(((rt0.c2)IS(rt0.c1))))) ISNULL)) GROUP BY vt1.c0, rt0.c0, rt0.c2, rt0.c3, rt0.c1, rt0.c4;
SELECT ALL vt1.c0, rt0.c0, rt0.c2, rt0.c3, rt0.c1, rt0.c4 FROM vt1, rt0 GROUP BY vt1.c0, rt0.c0, rt0.c2, rt0.c3, rt0.c1, rt0.c4;
SELECT rt0.c0, rt0.c3, rt0.c4, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c3, rt0.c4, rt0.c1, rt0.c2;
SELECT rt0.c0, rt0.c3, rt0.c4, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c3, rt0.c4, rt0.c1, rt0.c2 HAVING AVG(((AVG(rt0.c0)) BETWEEN (rt0.c1) AND (rt0.c4))) UNION ALL SELECT rt0.c0, rt0.c3, rt0.c4, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c3, rt0.c4, rt0.c1, rt0.c2 HAVING (NOT (AVG(((AVG(rt0.c0)) BETWEEN (rt0.c1) AND (rt0.c4))))) UNION ALL SELECT rt0.c0, rt0.c3, rt0.c4, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c3, rt0.c4, rt0.c1, rt0.c2 HAVING ((AVG(((AVG(rt0.c0)) BETWEEN (rt0.c1) AND (rt0.c4)))) ISNULL);
SELECT MAX(((rt0.c1)<<(x'')) COLLATE RTRIM) FROM rt0, vt1 ORDER BY '<#CMv' ASC  NULLS FIRST, (((CASE rt0.c0  WHEN rt0.c0 THEN vt1.c0 END))!=(((((rt0.c3))<=((vt1.c0))))))  NULLS LAST, (('-1729173314' IN ()) IN ());
SELECT * FROM vt1, rt0;
SELECT * FROM vt1, rt0 WHERE ('') UNION ALL SELECT * FROM vt1, rt0 WHERE ((NOT (''))) UNION ALL SELECT * FROM vt1, rt0 WHERE ((('') ISNULL));
SELECT * FROM vt1, rt0;
SELECT DISTINCT rt0.c3, rt0.c1, rt0.c4, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c3, rt0.c1, rt0.c4, rt0.c2 FROM rt0 WHERE (rt0.c3) UNION SELECT DISTINCT rt0.c3, rt0.c1, rt0.c4, rt0.c2 FROM rt0 WHERE ((NOT (rt0.c3))) UNION SELECT DISTINCT rt0.c3, rt0.c1, rt0.c4, rt0.c2 FROM rt0 WHERE (((rt0.c3) ISNULL));
SELECT DISTINCT rt0.c3, rt0.c1, rt0.c4, rt0.c2 FROM rt0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 WHERE (CAST((rt0.c0 IN ()) AS INTEGER)) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM rt0 WHERE ((NOT (CAST((rt0.c0 IN ()) AS INTEGER)))) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM rt0 WHERE (((CAST((rt0.c0 IN ()) AS INTEGER)) ISNULL)) GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c3, vt1.c0 FROM rt0, vt1 GROUP BY rt0.c3, vt1.c0;
SELECT rt0.c3, vt1.c0 FROM rt0, vt1 GROUP BY rt0.c3, vt1.c0 HAVING SUM(AVG(COUNT(*))) UNION ALL SELECT rt0.c3, vt1.c0 FROM rt0, vt1 GROUP BY rt0.c3, vt1.c0 HAVING (NOT (SUM(AVG(COUNT(*))))) UNION ALL SELECT rt0.c3, vt1.c0 FROM rt0, vt1 GROUP BY rt0.c3, vt1.c0 HAVING ((SUM(AVG(COUNT(*)))) ISNULL);
SELECT ALL SUM(TYPEOF(((((rt0.c1)AND('t+ꦦ h Fy_')))AND(rt0.c0)))) FROM rt0;
SELECT ALL * FROM vt1, rt0;
SELECT * FROM vt1, rt0 WHERE (LIKELY(DISTINCT rt0.c0) COLLATE NOCASE) UNION ALL SELECT ALL * FROM vt1, rt0 WHERE ((NOT (LIKELY(DISTINCT rt0.c0) COLLATE NOCASE))) UNION ALL SELECT * FROM vt1, rt0 WHERE (((LIKELY(DISTINCT rt0.c0) COLLATE NOCASE) ISNULL));
SELECT ALL * FROM vt1, rt0;
SELECT DISTINCT * FROM rt0 RIGHT OUTER JOIN vt1 ON rt0.c3;
SELECT DISTINCT * FROM rt0 RIGHT OUTER JOIN vt1 ON rt0.c3 WHERE ('-311976398') UNION SELECT DISTINCT * FROM rt0 RIGHT OUTER JOIN vt1 ON rt0.c3 WHERE ((NOT ('-311976398'))) UNION SELECT DISTINCT * FROM rt0 RIGHT OUTER JOIN vt1 ON rt0.c3 WHERE ((('-311976398') ISNULL));
SELECT DISTINCT * FROM rt0 RIGHT OUTER JOIN vt1 ON rt0.c3;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE (HEX(vt1.c0)) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (HEX(vt1.c0)))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE (((HEX(vt1.c0)) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT rt0.c1, vt1.c0, rt0.c4 FROM rt0, vt1 GROUP BY rt0.c1, vt1.c0, rt0.c4;
SELECT ALL rt0.c1, vt1.c0, rt0.c4 FROM rt0, vt1 GROUP BY rt0.c1, vt1.c0, rt0.c4 HAVING CAST(COUNT(COUNT(*)) AS BLOB) UNION ALL SELECT rt0.c1, vt1.c0, rt0.c4 FROM rt0, vt1 GROUP BY rt0.c1, vt1.c0, rt0.c4 HAVING (NOT (CAST(COUNT(COUNT(*)) AS BLOB))) UNION ALL SELECT rt0.c1, vt1.c0, rt0.c4 FROM rt0, vt1 GROUP BY rt0.c1, vt1.c0, rt0.c4 HAVING ((CAST(COUNT(COUNT(*)) AS BLOB)) ISNULL);
SELECT vt1.c0 FROM vt1;
SELECT vt1.c0 FROM vt1 WHERE (CAST(((vt1.c0)*(vt1.c0)) AS BLOB)) UNION ALL SELECT vt1.c0 FROM vt1 WHERE ((NOT (CAST(((vt1.c0)*(vt1.c0)) AS BLOB)))) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE (((CAST(((vt1.c0)*(vt1.c0)) AS BLOB)) ISNULL));
SELECT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((((((((IFNULL(DISTINCT vt1.c0, vt1.c0))OR((- (1e500)))))OR(((vt1.c0) IS TRUE))))AND(CAST(vt1.c0 AS INTEGER))))OR(vt1.c0))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT (((((((((IFNULL(DISTINCT vt1.c0, vt1.c0))OR((- (1e500)))))OR(((vt1.c0) IS TRUE))))AND(CAST(vt1.c0 AS INTEGER))))OR(vt1.c0))))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((((((((((IFNULL(DISTINCT vt1.c0, vt1.c0))OR((- (1e500)))))OR(((vt1.c0) IS TRUE))))AND(CAST(vt1.c0 AS INTEGER))))OR(vt1.c0))) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT ALL rt0.c2, vt1.c0, rt0.c4, rt0.c0, rt0.c3, rt0.c1 FROM rt0, vt1 GROUP BY rt0.c2, vt1.c0, rt0.c4, rt0.c0, rt0.c3, rt0.c1;
SELECT rt0.c2, vt1.c0, rt0.c4, rt0.c0, rt0.c3, rt0.c1 FROM rt0, vt1 WHERE (CAST(((vt1.c0)>>(rt0.c2)) AS TEXT)) GROUP BY rt0.c2, vt1.c0, rt0.c4, rt0.c0, rt0.c3, rt0.c1 UNION SELECT ALL rt0.c2, vt1.c0, rt0.c4, rt0.c0, rt0.c3, rt0.c1 FROM rt0, vt1 WHERE ((NOT (CAST(((vt1.c0)>>(rt0.c2)) AS TEXT)))) GROUP BY rt0.c2, vt1.c0, rt0.c4, rt0.c0, rt0.c3, rt0.c1 UNION SELECT ALL rt0.c2, vt1.c0, rt0.c4, rt0.c0, rt0.c3, rt0.c1 FROM rt0, vt1 WHERE (((CAST(((vt1.c0)>>(rt0.c2)) AS TEXT)) ISNULL)) GROUP BY rt0.c2, vt1.c0, rt0.c4, rt0.c0, rt0.c3, rt0.c1;
SELECT ALL rt0.c2, vt1.c0, rt0.c4, rt0.c0, rt0.c3, rt0.c1 FROM rt0, vt1 GROUP BY rt0.c2, vt1.c0, rt0.c4, rt0.c0, rt0.c3, rt0.c1;
SELECT rt0.c1, rt0.c2 FROM vt1, rt0 GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM vt1, rt0 GROUP BY rt0.c1, rt0.c2 HAVING MAX(TOTAL(COUNT(*))) UNION ALL SELECT rt0.c1, rt0.c2 FROM vt1, rt0 GROUP BY rt0.c1, rt0.c2 HAVING (NOT (MAX(TOTAL(COUNT(*))))) UNION ALL SELECT ALL rt0.c1, rt0.c2 FROM vt1, rt0 GROUP BY rt0.c1, rt0.c2 HAVING ((MAX(TOTAL(COUNT(*)))) ISNULL);
SELECT * FROM rt0, vt1;
SELECT ALL * FROM rt0, vt1 WHERE (((rt0.c0)>>((rt0.c3 IN ())))) UNION ALL SELECT ALL * FROM rt0, vt1 WHERE ((NOT (((rt0.c0)>>((rt0.c3 IN ())))))) UNION ALL SELECT ALL * FROM rt0, vt1 WHERE (((((rt0.c0)>>((rt0.c3 IN ())))) ISNULL));
SELECT * FROM rt0, vt1;
SELECT DISTINCT rt0.c3, rt0.c0, rt0.c4, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c3, rt0.c0, rt0.c4, rt0.c1 FROM rt0 WHERE ((((rt0.c2, rt0.c0, rt0.c4)) BETWEEN ((x'dce0', ((rt0.c1)||(rt0.c2)), (((rt0.c1)) BETWEEN ((rt0.c4)) AND ((rt0.c0))))) AND ((((rt0.c4) NOT BETWEEN (rt0.c4) AND (rt0.c0)), ((rt0.c1) BETWEEN (rt0.c4) AND (rt0.c4)), rt0.c3)))) UNION SELECT DISTINCT rt0.c3, rt0.c0, rt0.c4, rt0.c1 FROM rt0 WHERE ((NOT ((((rt0.c2, rt0.c0, rt0.c4)) BETWEEN ((x'dce0', ((rt0.c1)||(rt0.c2)), (((rt0.c1)) BETWEEN ((rt0.c4)) AND ((rt0.c0))))) AND ((((rt0.c4) NOT BETWEEN (rt0.c4) AND (rt0.c0)), ((rt0.c1) BETWEEN (rt0.c4) AND (rt0.c4)), rt0.c3)))))) UNION SELECT DISTINCT rt0.c3, rt0.c0, rt0.c4, rt0.c1 FROM rt0 WHERE ((((((rt0.c2, rt0.c0, rt0.c4)) BETWEEN ((x'dce0', ((rt0.c1)||(rt0.c2)), (((rt0.c1)) BETWEEN ((rt0.c4)) AND ((rt0.c0))))) AND ((((rt0.c4) NOT BETWEEN (rt0.c4) AND (rt0.c0)), ((rt0.c1) BETWEEN (rt0.c4) AND (rt0.c4)), rt0.c3)))) ISNULL));
SELECT DISTINCT rt0.c3, rt0.c0, rt0.c4, rt0.c1 FROM rt0;
SELECT vt1.c0 FROM vt1, rt0 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1, rt0 WHERE (((rt0.c4) NOT NULL)) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1, rt0 WHERE ((NOT (((rt0.c4) NOT NULL)))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1, rt0 WHERE (((((rt0.c4) NOT NULL)) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1, rt0 GROUP BY vt1.c0;
SELECT rt0.c0, rt0.c4, rt0.c1, vt1.c0, rt0.c3, rt0.c2 FROM rt0 RIGHT OUTER JOIN vt1 ON '0.283283126006598' GROUP BY rt0.c0, rt0.c4, rt0.c1, vt1.c0, rt0.c3, rt0.c2;
SELECT ALL rt0.c0, rt0.c4, rt0.c1, vt1.c0, rt0.c3, rt0.c2 FROM rt0 RIGHT OUTER JOIN vt1 ON '0.283283126006598' GROUP BY rt0.c0, rt0.c4, rt0.c1, vt1.c0, rt0.c3, rt0.c2 HAVING ((COUNT(GROUP_CONCAT(TOTAL(rt0.c0)))) IS TRUE) UNION ALL SELECT rt0.c0, rt0.c4, rt0.c1, vt1.c0, rt0.c3, rt0.c2 FROM rt0 RIGHT OUTER JOIN vt1 ON '0.283283126006598' GROUP BY rt0.c0, rt0.c4, rt0.c1, vt1.c0, rt0.c3, rt0.c2 HAVING (NOT (((COUNT(GROUP_CONCAT(TOTAL(rt0.c0)))) IS TRUE))) UNION ALL SELECT rt0.c0, rt0.c4, rt0.c1, vt1.c0, rt0.c3, rt0.c2 FROM rt0 RIGHT OUTER JOIN vt1 ON '0.283283126006598' GROUP BY rt0.c0, rt0.c4, rt0.c1, vt1.c0, rt0.c3, rt0.c2 HAVING ((((COUNT(GROUP_CONCAT(TOTAL(rt0.c0)))) IS TRUE)) ISNULL);
SELECT ALL vt1.c0 FROM vt1;
SELECT ALL vt1.c0 FROM vt1 WHERE ((((CASE WHEN 1.624846676E9 THEN vt1.c0 ELSE vt1.c0 END))==((((vt1.c0)>(vt1.c0)))))) UNION ALL SELECT vt1.c0 FROM vt1 WHERE ((NOT ((((CASE WHEN 1.624846676E9 THEN vt1.c0 ELSE vt1.c0 END))=((((vt1.c0)>(vt1.c0)))))))) UNION ALL SELECT vt1.c0 FROM vt1 WHERE ((((((CASE WHEN 1.624846676E9 THEN vt1.c0 ELSE vt1.c0 END))=((((vt1.c0)>(vt1.c0)))))) ISNULL));
SELECT ALL vt1.c0 FROM vt1;
SELECT DISTINCT * FROM vt1 LEFT OUTER JOIN rt0 ON ((CAST(0.6884360417570935 AS REAL))>>(0X4affb134));
SELECT DISTINCT * FROM vt1 LEFT OUTER JOIN rt0 ON ((CAST(0.6884360417570935 AS REAL))>>(0X4affb134)) WHERE ((CAST(vt1.c0 AS NUMERIC) IN ())) UNION SELECT DISTINCT * FROM vt1 LEFT OUTER JOIN rt0 ON ((CAST(0.6884360417570935 AS REAL))>>(0x4affb134)) WHERE ((NOT ((CAST(vt1.c0 AS NUMERIC) IN ())))) UNION SELECT DISTINCT * FROM vt1 LEFT OUTER JOIN rt0 ON ((CAST(0.6884360417570935 AS REAL))>>(0x4affb134)) WHERE ((((CAST(vt1.c0 AS NUMERIC) IN ())) ISNULL));
SELECT DISTINCT * FROM vt1 LEFT OUTER JOIN rt0 ON ((CAST(0.6884360417570935 AS REAL))>>(0X4affb134));
SELECT ALL rt0.c3, rt0.c4, rt0.c0, rt0.c1 FROM vt1, rt0 GROUP BY rt0.c3, rt0.c4, rt0.c0, rt0.c1;
SELECT ALL rt0.c3, rt0.c4, rt0.c0, rt0.c1 FROM vt1, rt0 WHERE (LIKELIHOOD(CAST(x'' AS NUMERIC), 0.7437452452473668)) GROUP BY rt0.c3, rt0.c4, rt0.c0, rt0.c1 UNION SELECT ALL rt0.c3, rt0.c4, rt0.c0, rt0.c1 FROM vt1, rt0 WHERE ((NOT (LIKELIHOOD(CAST(x'' AS NUMERIC), 0.7437452452473668)))) GROUP BY rt0.c3, rt0.c4, rt0.c0, rt0.c1 UNION SELECT ALL rt0.c3, rt0.c4, rt0.c0, rt0.c1 FROM vt1, rt0 WHERE (((LIKELIHOOD(CAST(x'' AS NUMERIC), 0.7437452452473668)) ISNULL)) GROUP BY rt0.c3, rt0.c4, rt0.c0, rt0.c1;
SELECT ALL rt0.c3, rt0.c4, rt0.c0, rt0.c1 FROM vt1, rt0 GROUP BY rt0.c3, rt0.c4, rt0.c0, rt0.c1;
SELECT ALL rt0.c1, rt0.c2, rt0.c3, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c3, rt0.c0;
SELECT rt0.c1, rt0.c2, rt0.c3, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c3, rt0.c0 HAVING TOTAL(rt0.c3) COLLATE NOCASE UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c3, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c3, rt0.c0 HAVING (NOT (TOTAL(rt0.c3) COLLATE NOCASE)) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c3, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c3, rt0.c0 HAVING ((TOTAL(rt0.c3) COLLATE NOCASE) ISNULL);
SELECT ALL rt0.c1, rt0.c2, rt0.c3, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c3, rt0.c0;
SELECT rt0.c1, rt0.c2, rt0.c3, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c3, rt0.c0 HAVING TOTAL(rt0.c3) COLLATE NOCASE UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c3, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c3, rt0.c0 HAVING (NOT (TOTAL(rt0.c3) COLLATE NOCASE)) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c3, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c3, rt0.c0 HAVING ((TOTAL(rt0.c3) COLLATE NOCASE) ISNULL);
SELECT ALL rt0.c1, rt0.c2, rt0.c3, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c3, rt0.c0;
SELECT ALL vt1.c0 FROM vt1;
SELECT ALL vt1.c0 FROM vt1 WHERE (vt1.c0) UNION ALL SELECT vt1.c0 FROM vt1 WHERE ((NOT (vt1.c0))) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE (((vt1.c0) ISNULL));
SELECT ALL vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0, rt0.c3, rt0.c4, rt0.c0 FROM vt1, rt0;
SELECT DISTINCT vt1.c0, rt0.c3, rt0.c4, rt0.c0 FROM vt1, rt0 WHERE ((~ (CAST(rt0.c2 AS TEXT)))) UNION SELECT DISTINCT vt1.c0, rt0.c3, rt0.c4, rt0.c0 FROM vt1, rt0 WHERE ((NOT ((~ (CAST(rt0.c2 AS TEXT)))))) UNION SELECT DISTINCT vt1.c0, rt0.c3, rt0.c4, rt0.c0 FROM vt1, rt0 WHERE ((((~ (CAST(rt0.c2 AS TEXT)))) ISNULL));
SELECT DISTINCT vt1.c0, rt0.c3, rt0.c4, rt0.c0 FROM vt1, rt0;
SELECT rt0.c0, vt1.c0, rt0.c2, rt0.c3 FROM vt1, rt0 GROUP BY rt0.c0, vt1.c0, rt0.c2, rt0.c3;
SELECT rt0.c0, vt1.c0, rt0.c2, rt0.c3 FROM vt1, rt0 WHERE (((((rt0.c2) NOT BETWEEN (rt0.c4) AND (rt0.c1))) IS TRUE)) GROUP BY rt0.c0, vt1.c0, rt0.c2, rt0.c3 UNION SELECT ALL rt0.c0, vt1.c0, rt0.c2, rt0.c3 FROM vt1, rt0 WHERE ((NOT (((((rt0.c2) NOT BETWEEN (rt0.c4) AND (rt0.c1))) IS TRUE)))) GROUP BY rt0.c0, vt1.c0, rt0.c2, rt0.c3 UNION SELECT rt0.c0, vt1.c0, rt0.c2, rt0.c3 FROM vt1, rt0 WHERE (((((((rt0.c2) NOT BETWEEN (rt0.c4) AND (rt0.c1))) IS TRUE)) ISNULL)) GROUP BY rt0.c0, vt1.c0, rt0.c2, rt0.c3;
SELECT rt0.c0, vt1.c0, rt0.c2, rt0.c3 FROM vt1, rt0 GROUP BY rt0.c0, vt1.c0, rt0.c2, rt0.c3;
SELECT rt0.c0, rt0.c4, rt0.c2, vt1.c0, rt0.c3, rt0.c1 FROM vt1, rt0 GROUP BY rt0.c0, rt0.c4, rt0.c2, vt1.c0, rt0.c3, rt0.c1;
SELECT ALL rt0.c0, rt0.c4, rt0.c2, vt1.c0, rt0.c3, rt0.c1 FROM vt1, rt0 GROUP BY rt0.c0, rt0.c4, rt0.c2, vt1.c0, rt0.c3, rt0.c1 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c0, rt0.c4, rt0.c2, vt1.c0, rt0.c3, rt0.c1 FROM vt1, rt0 GROUP BY rt0.c0, rt0.c4, rt0.c2, vt1.c0, rt0.c3, rt0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c0, rt0.c4, rt0.c2, vt1.c0, rt0.c3, rt0.c1 FROM vt1, rt0 GROUP BY rt0.c0, rt0.c4, rt0.c2, vt1.c0, rt0.c3, rt0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c0, rt0.c4, rt0.c2, vt1.c0, rt0.c3, rt0.c1 FROM vt1, rt0 GROUP BY rt0.c0, rt0.c4, rt0.c2, vt1.c0, rt0.c3, rt0.c1;
SELECT ALL rt0.c0, rt0.c4, rt0.c2, vt1.c0, rt0.c3, rt0.c1 FROM vt1, rt0 GROUP BY rt0.c0, rt0.c4, rt0.c2, vt1.c0, rt0.c3, rt0.c1 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c0, rt0.c4, rt0.c2, vt1.c0, rt0.c3, rt0.c1 FROM vt1, rt0 GROUP BY rt0.c0, rt0.c4, rt0.c2, vt1.c0, rt0.c3, rt0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c0, rt0.c4, rt0.c2, vt1.c0, rt0.c3, rt0.c1 FROM vt1, rt0 GROUP BY rt0.c0, rt0.c4, rt0.c2, vt1.c0, rt0.c3, rt0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c0, rt0.c4, rt0.c2, vt1.c0, rt0.c3, rt0.c1 FROM vt1, rt0 GROUP BY rt0.c0, rt0.c4, rt0.c2, vt1.c0, rt0.c3, rt0.c1;
SELECT rt0.c2, rt0.c4, rt0.c3, rt0.c0 FROM rt0;
SELECT rt0.c2, rt0.c4, rt0.c3, rt0.c0 FROM rt0 WHERE (((((((((rt0.c4)AND(CAST(rt0.c3 AS INTEGER))))OR(CASE WHEN rt0.c3 THEN x'c2a2' WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 ELSE 0x1c18cfc3 END)))AND((- (NULL)))))OR(((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c1))))) UNION ALL SELECT ALL rt0.c2, rt0.c4, rt0.c3, rt0.c0 FROM rt0 WHERE ((NOT (((((((((rt0.c4)AND(CAST(rt0.c3 AS INTEGER))))OR(CASE WHEN rt0.c3 THEN x'c2a2' WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 ELSE 0x1c18cfc3 END)))AND((- (NULL)))))OR(((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c1))))))) UNION ALL SELECT ALL rt0.c2, rt0.c4, rt0.c3, rt0.c0 FROM rt0 WHERE (((((((((((rt0.c4)AND(CAST(rt0.c3 AS INTEGER))))OR(CASE WHEN rt0.c3 THEN x'c2a2' WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 ELSE 0x1c18cfc3 END)))AND((- (NULL)))))OR(((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c1))))) ISNULL));
SELECT rt0.c2, rt0.c4, rt0.c3, rt0.c0 FROM rt0;
SELECT DISTINCT * FROM vt1 LEFT OUTER JOIN rt0 ON ((((((((((((rt0.c4)OR(0Xffffffffe19aa335)))AND(rt0.c2)))AND((rt0.c0 IN ()))))OR(rt0.c0 COLLATE RTRIM)))OR((((vt1.c0, vt1.c0, rt0.c0)) BETWEEN ((rt0.c2, rt0.c1, 0.04323617211275321)) AND ((rt0.c3, rt0.c0, '117123980'))))))AND(((((rt0.c4)AND(vt1.c0)))OR(rt0.c4))));
SELECT DISTINCT * FROM vt1 LEFT OUTER JOIN rt0 ON ((((((((((((rt0.c4)OR(0Xffffffffe19aa335)))AND(rt0.c2)))AND((rt0.c0 IN ()))))OR(rt0.c0 COLLATE RTRIM)))OR((((vt1.c0, vt1.c0, rt0.c0)) BETWEEN ((rt0.c2, rt0.c1, 0.04323617211275321)) AND ((rt0.c3, rt0.c0, '117123980'))))))AND(((((rt0.c4)AND(vt1.c0)))OR(rt0.c4)))) WHERE (((((('1610495413'))<((rt0.c1))))%(((rt0.c3) NOT BETWEEN (rt0.c3) AND (vt1.c0))))) UNION SELECT DISTINCT * FROM vt1 LEFT OUTER JOIN rt0 ON ((((((((((((rt0.c4)OR(0xffffffffe19aa335)))AND(rt0.c2)))AND((rt0.c0 IN ()))))OR(rt0.c0 COLLATE RTRIM)))OR((((vt1.c0, vt1.c0, rt0.c0)) BETWEEN ((rt0.c2, rt0.c1, 0.04323617211275321)) AND ((rt0.c3, rt0.c0, '117123980'))))))AND(((((rt0.c4)AND(vt1.c0)))OR(rt0.c4)))) WHERE ((NOT (((((('1610495413'))<((rt0.c1))))%(((rt0.c3) NOT BETWEEN (rt0.c3) AND (vt1.c0))))))) UNION SELECT DISTINCT * FROM vt1 LEFT OUTER JOIN rt0 ON ((((((((((((rt0.c4)OR(0Xffffffffe19aa335)))AND(rt0.c2)))AND((rt0.c0 IN ()))))OR(rt0.c0 COLLATE RTRIM)))OR((((vt1.c0, vt1.c0, rt0.c0)) BETWEEN ((rt0.c2, rt0.c1, 0.04323617211275321)) AND ((rt0.c3, rt0.c0, '117123980'))))))AND(((((rt0.c4)AND(vt1.c0)))OR(rt0.c4)))) WHERE (((((((('1610495413'))<((rt0.c1))))%(((rt0.c3) NOT BETWEEN (rt0.c3) AND (vt1.c0))))) ISNULL));
SELECT DISTINCT * FROM vt1 LEFT OUTER JOIN rt0 ON ((((((((((((rt0.c4)OR(0Xffffffffe19aa335)))AND(rt0.c2)))AND((rt0.c0 IN ()))))OR(rt0.c0 COLLATE RTRIM)))OR((((vt1.c0, vt1.c0, rt0.c0)) BETWEEN ((rt0.c2, rt0.c1, 0.04323617211275321)) AND ((rt0.c3, rt0.c0, '117123980'))))))AND(((((rt0.c4)AND(vt1.c0)))OR(rt0.c4))));
SELECT ALL rt0.c4, rt0.c2, vt1.c0, rt0.c3 FROM vt1, rt0 GROUP BY rt0.c4, rt0.c2, vt1.c0, rt0.c3;
SELECT rt0.c4, rt0.c2, vt1.c0, rt0.c3 FROM vt1, rt0 WHERE (NULL) GROUP BY rt0.c4, rt0.c2, vt1.c0, rt0.c3 UNION SELECT ALL rt0.c4, rt0.c2, vt1.c0, rt0.c3 FROM vt1, rt0 WHERE ((NOT (NULL))) GROUP BY rt0.c4, rt0.c2, vt1.c0, rt0.c3 UNION SELECT ALL rt0.c4, rt0.c2, vt1.c0, rt0.c3 FROM vt1, rt0 WHERE (((NULL) ISNULL)) GROUP BY rt0.c4, rt0.c2, vt1.c0, rt0.c3;
SELECT ALL rt0.c4, rt0.c2, vt1.c0, rt0.c3 FROM vt1, rt0 GROUP BY rt0.c4, rt0.c2, vt1.c0, rt0.c3;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING CASE AVG(MAX(TOTAL(vt1.c0)))  WHEN LIKELIHOOD(DISTINCT vt1.c0, 0.0396345017069375) THEN json_quote(vt1.c0) WHEN (((TOTAL(COUNT(vt1.c0)))) NOT BETWEEN ((MIN(SUM(SUM(COUNT(vt1.c0)))))) AND ((COUNT(*)))) THEN (- (vt1.c0)) WHEN CAST(GROUP_CONCAT(AVG(TOTAL(vt1.c0))) AS INTEGER) THEN ((vt1.c0)|(vt1.c0)) ELSE GROUP_CONCAT(TOTAL(vt1.c0)) END UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (CASE AVG(MAX(TOTAL(vt1.c0)))  WHEN LIKELIHOOD(DISTINCT vt1.c0, 0.0396345017069375) THEN json_quote(vt1.c0) WHEN (((TOTAL(COUNT(vt1.c0)))) NOT BETWEEN ((MIN(SUM(SUM(COUNT(vt1.c0)))))) AND ((COUNT(*)))) THEN (- (vt1.c0)) WHEN CAST(GROUP_CONCAT(AVG(TOTAL(vt1.c0))) AS INTEGER) THEN ((vt1.c0)|(vt1.c0)) ELSE GROUP_CONCAT(TOTAL(vt1.c0)) END)) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((CASE AVG(MAX(TOTAL(vt1.c0)))  WHEN LIKELIHOOD(DISTINCT vt1.c0, 0.0396345017069375) THEN json_quote(vt1.c0) WHEN (((TOTAL(COUNT(vt1.c0)))) NOT BETWEEN ((MIN(SUM(SUM(COUNT(vt1.c0)))))) AND ((COUNT(*)))) THEN (- (vt1.c0)) WHEN CAST(GROUP_CONCAT(AVG(TOTAL(vt1.c0))) AS INTEGER) THEN ((vt1.c0)|(vt1.c0)) ELSE GROUP_CONCAT(TOTAL(vt1.c0)) END) ISNULL);
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE (CAST(CASE rt0.c2  WHEN rt0.c1 THEN rt0.c0 END AS NUMERIC)) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (CAST(CASE rt0.c2  WHEN rt0.c1 THEN rt0.c0 END AS NUMERIC)))) UNION ALL SELECT * FROM rt0 WHERE (((CAST(CASE rt0.c2  WHEN rt0.c1 THEN rt0.c0 END AS NUMERIC)) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT * FROM vt1, rt0;
SELECT DISTINCT * FROM vt1, rt0 WHERE (((((rt0.c1)>>(rt0.c2))) BETWEEN (CAST(NULL AS TEXT)) AND (rt0.c3 COLLATE RTRIM))) UNION SELECT DISTINCT * FROM vt1, rt0 WHERE ((NOT (((((rt0.c1)>>(rt0.c2))) BETWEEN (CAST(NULL AS TEXT)) AND (rt0.c3 COLLATE RTRIM))))) UNION SELECT DISTINCT * FROM vt1, rt0 WHERE (((((((rt0.c1)>>(rt0.c2))) BETWEEN (CAST(NULL AS TEXT)) AND (rt0.c3 COLLATE RTRIM))) ISNULL));
SELECT DISTINCT * FROM vt1, rt0;
SELECT ALL rt0.c3, rt0.c4, vt1.c0, rt0.c2, rt0.c1, rt0.c0 FROM vt1, rt0 GROUP BY rt0.c3, rt0.c4, vt1.c0, rt0.c2, rt0.c1, rt0.c0;
SELECT rt0.c3, rt0.c4, vt1.c0, rt0.c2, rt0.c1, rt0.c0 FROM vt1, rt0 WHERE (0.5375449572139761) GROUP BY rt0.c3, rt0.c4, vt1.c0, rt0.c2, rt0.c1, rt0.c0 UNION SELECT ALL rt0.c3, rt0.c4, vt1.c0, rt0.c2, rt0.c1, rt0.c0 FROM vt1, rt0 WHERE ((NOT (0.5375449572139761))) GROUP BY rt0.c3, rt0.c4, vt1.c0, rt0.c2, rt0.c1, rt0.c0 UNION SELECT ALL rt0.c3, rt0.c4, vt1.c0, rt0.c2, rt0.c1, rt0.c0 FROM vt1, rt0 WHERE (((0.5375449572139761) ISNULL)) GROUP BY rt0.c3, rt0.c4, vt1.c0, rt0.c2, rt0.c1, rt0.c0;
SELECT ALL rt0.c3, rt0.c4, vt1.c0, rt0.c2, rt0.c1, rt0.c0 FROM vt1, rt0 GROUP BY rt0.c3, rt0.c4, vt1.c0, rt0.c2, rt0.c1, rt0.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING COUNT(vt1.c0 COLLATE RTRIM) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (COUNT(vt1.c0 COLLATE RTRIM))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((COUNT(vt1.c0 COLLATE RTRIM)) ISNULL);
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING COUNT(vt1.c0 COLLATE RTRIM) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (COUNT(vt1.c0 COLLATE RTRIM))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((COUNT(vt1.c0 COLLATE RTRIM)) ISNULL);
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL * FROM rt0, vt1;
SELECT * FROM rt0, vt1 WHERE (STRFTIME(((((rt0.c2)AND(rt0.c4)))AND(vt1.c0)), rt0.c0 COLLATE RTRIM, NULL, ((vt1.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0)), ((((((((rt0.c4)AND(NULL)))OR(rt0.c2)))AND(rt0.c1)))OR(vt1.c0)))) UNION ALL SELECT ALL * FROM rt0, vt1 WHERE ((NOT (STRFTIME(((((rt0.c2)AND(rt0.c4)))AND(vt1.c0)), rt0.c0 COLLATE RTRIM, NULL, ((vt1.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0)), ((((((((rt0.c4)AND(NULL)))OR(rt0.c2)))AND(rt0.c1)))OR(vt1.c0)))))) UNION ALL SELECT * FROM rt0, vt1 WHERE (((STRFTIME(((((rt0.c2)AND(rt0.c4)))AND(vt1.c0)), rt0.c0 COLLATE RTRIM, NULL, ((vt1.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0)), ((((((((rt0.c4)AND(NULL)))OR(rt0.c2)))AND(rt0.c1)))OR(vt1.c0)))) ISNULL));
SELECT ALL * FROM rt0, vt1;
SELECT DISTINCT rt0.c3, rt0.c4, rt0.c0, rt0.c1, rt0.c2, vt1.c0 FROM rt0 CROSS JOIN vt1 ON ((((rt0.c2)LIKE(rt0.c3))) IS FALSE);
SELECT DISTINCT rt0.c3, rt0.c4, rt0.c0, rt0.c1, rt0.c2, vt1.c0 FROM rt0 CROSS JOIN vt1 ON ((((rt0.c2)LIKE(rt0.c3))) IS FALSE) WHERE ((CASE WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c0 END IN ())) UNION SELECT DISTINCT rt0.c3, rt0.c4, rt0.c0, rt0.c1, rt0.c2, vt1.c0 FROM rt0 CROSS JOIN vt1 ON ((((rt0.c2)LIKE(rt0.c3))) IS FALSE) WHERE ((NOT ((CASE WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c0 END IN ())))) UNION SELECT DISTINCT rt0.c3, rt0.c4, rt0.c0, rt0.c1, rt0.c2, vt1.c0 FROM rt0 CROSS JOIN vt1 ON ((((rt0.c2)LIKE(rt0.c3))) IS FALSE) WHERE ((((CASE WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c0 END IN ())) ISNULL));
SELECT DISTINCT rt0.c3, rt0.c4, rt0.c0, rt0.c1, rt0.c2, vt1.c0 FROM rt0 CROSS JOIN vt1 ON ((((rt0.c2)LIKE(rt0.c3))) IS FALSE);
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE ((((((vt1.c0)) NOT BETWEEN ((NULL)) AND ((vt1.c0)))) NOT BETWEEN (CASE WHEN vt1.c0 THEN vt1.c0 END) AND ((((vt1.c0))>((vt1.c0)))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT ((((((vt1.c0)) NOT BETWEEN ((NULL)) AND ((vt1.c0)))) NOT BETWEEN (CASE WHEN vt1.c0 THEN vt1.c0 END) AND ((((vt1.c0))>((vt1.c0)))))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((((((((vt1.c0)) NOT BETWEEN ((NULL)) AND ((vt1.c0)))) NOT BETWEEN (CASE WHEN vt1.c0 THEN vt1.c0 END) AND ((((vt1.c0))>((vt1.c0)))))) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c3, rt0.c0, rt0.c4 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c3, rt0.c0, rt0.c4;
SELECT rt0.c1, rt0.c2, rt0.c3, rt0.c0, rt0.c4 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c3, rt0.c0, rt0.c4 HAVING SUM(TOTAL(GROUP_CONCAT(rt0.c2))) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c3, rt0.c0, rt0.c4 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c3, rt0.c0, rt0.c4 HAVING (NOT (SUM(TOTAL(GROUP_CONCAT(rt0.c2))))) UNION ALL SELECT ALL rt0.c1, rt0.c2, rt0.c3, rt0.c0, rt0.c4 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c3, rt0.c0, rt0.c4 HAVING ((SUM(TOTAL(GROUP_CONCAT(rt0.c2)))) ISNULL);
SELECT * FROM vt1, rt0;
SELECT * FROM vt1, rt0 WHERE (((((((((((rt0.c0) BETWEEN (rt0.c3) AND (rt0.c4)))OR(rt0.c4 COLLATE NOCASE)))OR(rt0.c3)))OR(((rt0.c0) ISNULL))))AND((((vt1.c0)) BETWEEN ((rt0.c3)) AND (('36o')))))) UNION ALL SELECT ALL * FROM vt1, rt0 WHERE ((NOT (((((((((((rt0.c0) BETWEEN (rt0.c3) AND (rt0.c4)))OR(rt0.c4 COLLATE NOCASE)))OR(rt0.c3)))OR(((rt0.c0) ISNULL))))AND((((vt1.c0)) BETWEEN ((rt0.c3)) AND (('36o')))))))) UNION ALL SELECT ALL * FROM vt1, rt0 WHERE (((((((((((((rt0.c0) BETWEEN (rt0.c3) AND (rt0.c4)))OR(rt0.c4 COLLATE NOCASE)))OR(rt0.c3)))OR(((rt0.c0) ISNULL))))AND((((vt1.c0)) BETWEEN ((rt0.c3)) AND (('36o')))))) ISNULL));
SELECT * FROM vt1, rt0;
SELECT DISTINCT * FROM rt0, vt1;
SELECT DISTINCT * FROM rt0, vt1 WHERE ((- ((+ (rt0.c4))))) UNION SELECT DISTINCT * FROM rt0, vt1 WHERE ((NOT ((- ((+ (rt0.c4))))))) UNION SELECT DISTINCT * FROM rt0, vt1 WHERE ((((- ((+ (rt0.c4))))) ISNULL));
SELECT DISTINCT * FROM rt0, vt1;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE (((((vt1.c0) IS FALSE))AND(((vt1.c0) IS FALSE)))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT (((((vt1.c0) IS FALSE))AND(((vt1.c0) IS FALSE)))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE (((((((vt1.c0) IS FALSE))AND(((vt1.c0) IS FALSE)))) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
