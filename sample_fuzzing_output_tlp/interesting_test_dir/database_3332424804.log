-- Time: 2024/06/12 06:08:28
-- Database: database4
-- Database version: 3.40.0
-- seed value: 3332424804
PRAGMA cache_size = 50000; -- 8ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA case_sensitive_like=ON; -- 0ms;
PRAGMA encoding = 'UTF-8'; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts4(c0 UNINDEXED); -- 2ms;
CREATE VIRTUAL TABLE rt1 USING rtree(c0, c1, c2); -- 1ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
INSERT OR IGNORE INTO rt1(c0) VALUES (x''); -- 1ms;
PRAGMA automatic_index; -- 0ms;
UPDATE OR IGNORE rt1 SET c2=0xfffffffffe928f3c; -- 0ms;
UPDATE rt1 SET c2=0xffffffffd95c0a9d, c2=NULL; -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 10); -- 1ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (0.8814456858660024); -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '29858'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', -1734145484);\n; -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 1ms;
ANALYZE; -- 0ms;
INSERT OR FAIL INTO rt1(c2) VALUES (NULL); -- 1ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (NULL), (NULL), ('-23949508'); -- 0ms;
ANALYZE main; -- 0ms;
UPDATE OR IGNORE vt0 SET (c0)=('0.8814456858660024'); -- 1ms;
UPDATE OR IGNORE vt0 SET c0=0Xffffffffa895aa60 WHERE (CAST(vt0.c0 AS NUMERIC) IN ()); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 1ms;
UPDATE OR IGNORE rt1 SET c0=x'', c2=NULL WHERE ((((rt1.c1) BETWEEN (rt1.c2) AND (0.695479879779696))) NOT NULL); -- 0ms;
UPDATE OR IGNORE rt1 SET (c1)=(x''); -- 0ms;
PRAGMA cache_spill = -2570407240642726614; -- 0ms;
REINDEX; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
PRAGMA wal_checkpoint(FULL); -- 0ms;
PRAGMA temp.cell_size_check = true; -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES (0.08076012661745613); -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR IGNORE vt0 SET (c0)=(''); -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 2); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '1575'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 5); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', -648279395);\n; -- 1ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
INSERT OR IGNORE INTO rt1(c2, c1) VALUES ('M|A+H ', NULL), (x'', '{P'), (-23949508, NULL); -- 0ms;
UPDATE OR IGNORE vt0 SET (c0, c0)=(0.8327926582673516, ''); -- 0ms;
INSERT OR REPLACE INTO rt1(c2) VALUES (NULL), (x''), (x'4433'); -- 1ms;
INSERT OR IGNORE INTO rt1(c0) VALUES ('-648279395'); -- 0ms;
UPDATE OR IGNORE vt0 SET (c0)=(0.3020370563309185) WHERE (((((('') IS FALSE))OR((vt0.c0 IN ()))))OR(NULL)); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 8); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 0); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 1ms;
INSERT OR IGNORE INTO vt0 VALUES (x'f9e3'), (NULL), (x''), (''), (0.012529673713332024); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 6); -- 1ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '10356'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=-2032737675,10');\n; -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '58309'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
PRAGMA cache_spill; -- 0ms;
ANALYZE; -- 1ms;
PRAGMA auto_vacuum; -- 0ms;
CREATE VIEW v0(c0, c1, c2) AS SELECT ALL ((rt1.c2)+(rt1.c1)) COLLATE RTRIM, LTRIM(rt1.c1 COLLATE NOCASE), (- (vt0.c0)) COLLATE BINARY FROM rt1, vt0 WHERE ((NOT (((NULL) NOT NULL)))) ORDER BY CAST(-1516016442 AS BLOB)  NULLS LAST; -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES (''), (0.08199106857181127), (0.9427954563887863); -- 0ms;
PRAGMA temp.secure_delete = FAST; -- 0ms;
UPDATE vt0 SET c0=1073874823; -- 0ms;
INSERT OR FAIL INTO rt1(c0, c1) VALUES (0xffffffff86d6e275, x''); -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
UPDATE OR REPLACE vt0 SET (c0)=(0xffffffffffffffff); -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 75878307); -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 4); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '42358'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree_i32(c0, c1, c2); -- 1ms;
VACUUM; -- 0ms;
VACUUM main; -- 0ms;
VACUUM temp; -- 0ms;
UPDATE OR IGNORE rt1 SET c2=x'1f78', c0=x'', c0=-2.032737675E9 WHERE (((rt1.c0)) BETWEEN ((rt1.c2)) AND ((rt1.c0))) COLLATE NOCASE; -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 4); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
INSERT OR ABORT INTO vt0(c0) VALUES (NULL); -- 0ms;
UPDATE rt1 SET (c2, c2, c2)=('m|a+h ', 0.505668363526833, 'W''') WHERE (CASE rt1.c0  WHEN rt1.c0 THEN rt1.c1 ELSE rt1.c1 END IN ()); -- 0ms;
PRAGMA reverse_unordered_selects = true; -- 0ms;
UPDATE rt0 SET (c0, c2, c0)=(NULL, x'5693', NULL); -- 0ms;
PRAGMA cache_spill; -- 0ms;
INSERT OR REPLACE INTO rt1(c1, c0) VALUES (x'', 0.1503156887640651), (x'', '-2032737675'), ('M|A+H ', x''); -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
VACUUM temp; -- 0ms;
UPDATE OR FAIL rt0 SET (c0, c1)=('*J~', NULL); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '35327'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=10'); -- 0ms;
UPDATE rt1 SET c1=0.505668363526833, c2='-1734145484' WHERE ((CASE rt1.c1  WHEN rt1.c2 THEN x'fe695a51' ELSE rt1.c2 END) NOT NULL); -- 0ms;
UPDATE OR ABORT rt1 SET c1=''; -- 0ms;
INSERT OR IGNORE INTO rt1(c1, c2) VALUES (0.3256244757453962, -1.466586528E9), (0.012529673713332024, NULL), ('0.3256244757453962', 0.06787791147207978); -- 0ms;
UPDATE OR FAIL rt0 SET c1=NULL, c2=NULL; -- 0ms;
UPDATE OR IGNORE vt0 SET (c0, c0, c0)=(-823976568, 0Xffffffff86679837, NULL); -- 1ms;
BEGIN  TRANSACTION; -- 0ms;
PRAGMA main.cache_spill = true; -- 0ms;
UPDATE OR FAIL rt0 SET (c2)=(x'a754'); -- 0ms;
UPDATE OR IGNORE rt0 SET c2=0.9427954563887863; -- 0ms;
UPDATE OR IGNORE rt0 SET (c1)=(0Xffffffffcfe087b0) WHERE ((x'')-(CASE rt0.c0  WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 WHEN NULL THEN rt0.c2 ELSE rt0.c2 END)); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '64633'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
UPDATE OR IGNORE rt1 SET c1=NULL; -- 1ms;
UPDATE OR IGNORE vt0 SET (c0, c0)=(0.7965012510277739, ''); -- 0ms;
SELECT rtreecheck('rt0'); -- 0ms;
PRAGMA short_column_names; -- 0ms;
INSERT OR ABORT INTO vt0(c0) VALUES (x''), (0.32116188981179083), (0.09718761775107698); -- 0ms;
INSERT OR ROLLBACK INTO vt0 VALUES (NULL); -- 0ms;
INSERT OR IGNORE INTO rt0(c0, c1, c2) VALUES (0.12252992499626225, 0.9904177265916474, '-23949508'), (0.3256244757453962, x'', NULL), (x'', NULL, 0Xffffffffb93d8caf); -- 0ms;
INSERT OR IGNORE INTO rt0(c2) VALUES (x''); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', -1516016442);\n; -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 1ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=9'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
SELECT rtreecheck('rt0'); -- 0ms;
UPDATE rt1 SET (c2, c1)=(x'', '') WHERE (~ (((rt1.c2) NOT BETWEEN (rt1.c0) AND (rt1.c1)))); -- 0ms;
UPDATE OR IGNORE rt0 SET c0=x''; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', -1570162579);\n; -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 15); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 4); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 4); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
INSERT OR FAIL INTO rt0(c2) VALUES (NULL), (x''), (0.39488172559136314), ('1073874823'), (NULL); -- 0ms;
INSERT OR IGNORE INTO rt1(c0) VALUES (0.6447436888381778); -- 0ms;
INSERT OR FAIL INTO vt0 VALUES (x''); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA recursive_triggers = false; -- 0ms;
INSERT OR ROLLBACK INTO rt1(c0, c1, c2) VALUES ('1882754698', x'baa3', x''); -- 1ms;
REINDEX; -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
UPDATE OR IGNORE rt1 SET c0=0.9187381288622809, c2=x'', c1=0.615970039286444; -- 0ms;
PRAGMA foreign_keys = true; -- 0ms;
UPDATE OR IGNORE rt1 SET c2=0.9904177265916474 WHERE ((((('RRT' IN (rt1.c0)))OR(rt1.c1 COLLATE BINARY)))OR((+ (rt1.c1)))); -- 0ms;
UPDATE OR ROLLBACK rt1 SET (c1, c1, c1)=(x'', 1467494013, 0xffffffffa895aa60) WHERE CASE WHEN (((rt1.c2)) BETWEEN ((rt1.c2)) AND ((rt1.c1))) THEN ((((((((rt1.c2)OR(rt1.c2)))AND(rt1.c1)))AND(rt1.c0)))OR(rt1.c2)) ELSE ((((rt1.c1)OR('-1809003906')))OR(rt1.c2)) END; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 13); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', -291778236);\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
CREATE TEMPORARY TABLE IF NOT EXISTS t0 (c0 BLOB , c1 INT , c2 TEXT ); -- 0ms;
COMMIT; -- 0ms;
UPDATE rt1 SET c1=0x3bdad910 WHERE CASE WHEN (NOT (rt1.c1)) THEN (0.1031819068799783 IN (rt1.c2)) END; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT vt0.c0, rt1.c2, t0.c2, v0.c0, t0.c1, v0.c1, rt1.c1 FROM t0 CROSS JOIN rt1 ON ((HEX(0.3098400409401696)) NOT BETWEEN (((t0.c1) NOT BETWEEN (v0.c2) AND (rt1.c1))) AND (CASE WHEN rt1.c0 THEN rt1.c2 END)) FULL OUTER JOIN vt0 ON (((NOT (rt1.c1)))<>(TRIM(t0.c2))) LEFT OUTER JOIN v0 ON CAST(CASE WHEN t0.c2 THEN t0.c2 ELSE '幂%' END AS BLOB);
SELECT DISTINCT * FROM t0, v0 RIGHT OUTER JOIN rt1 ON ((((((((((0.4914824203911483)>(NULL)))OR((((0.17806945315664946)) NOT BETWEEN ((t0.c0)) AND ((rt1.c2))))))AND((v0.c2 IN ()))))AND(((t0.c2) NOT BETWEEN (rt1.c2) AND (rt1.c0)))))OR(((v0.c1) IS TRUE))) RIGHT OUTER JOIN vt0 ON (((vt0.c0)) BETWEEN ((v0.c2 COLLATE NOCASE)) AND ((((rt1.c0) BETWEEN (t0.c2) AND (t0.c0)))));
SELECT DISTINCT * FROM t0, v0 RIGHT OUTER JOIN rt1 ON ((((((((((0.4914824203911483)>(NULL)))OR((((0.17806945315664946)) NOT BETWEEN ((t0.c0)) AND ((rt1.c2))))))AND((v0.c2 IN ()))))AND(((t0.c2) NOT BETWEEN (rt1.c2) AND (rt1.c0)))))OR(((v0.c1) IS TRUE))) RIGHT OUTER JOIN vt0 ON (((vt0.c0)) BETWEEN ((v0.c2 COLLATE NOCASE)) AND ((((rt1.c0) BETWEEN (t0.c2) AND (t0.c0))))) WHERE (COALESCE(DISTINCT (t0.c2 IN (v0.c2, t0.c1)), (t0.c2 IN (t0.c0, t0.c0)))) UNION SELECT DISTINCT * FROM t0, v0 RIGHT OUTER JOIN rt1 ON ((((((((((0.4914824203911483)>(NULL)))OR((((0.17806945315664946)) NOT BETWEEN ((t0.c0)) AND ((rt1.c2))))))AND((v0.c2 IN ()))))AND(((t0.c2) NOT BETWEEN (rt1.c2) AND (rt1.c0)))))OR(((v0.c1) IS TRUE))) RIGHT OUTER JOIN vt0 ON (((vt0.c0)) BETWEEN ((v0.c2 COLLATE NOCASE)) AND ((((rt1.c0) BETWEEN (t0.c2) AND (t0.c0))))) WHERE ((NOT (COALESCE(DISTINCT (t0.c2 IN (v0.c2, t0.c1)), (t0.c2 IN (t0.c0, t0.c0)))))) UNION SELECT DISTINCT * FROM t0, v0 RIGHT OUTER JOIN rt1 ON ((((((((((0.4914824203911483)>(NULL)))OR((((0.17806945315664946)) NOT BETWEEN ((t0.c0)) AND ((rt1.c2))))))AND((v0.c2 IN ()))))AND(((t0.c2) NOT BETWEEN (rt1.c2) AND (rt1.c0)))))OR(((v0.c1) IS TRUE))) RIGHT OUTER JOIN vt0 ON (((vt0.c0)) BETWEEN ((v0.c2 COLLATE NOCASE)) AND ((((rt1.c0) BETWEEN (t0.c2) AND (t0.c0))))) WHERE (((COALESCE(DISTINCT (t0.c2 IN (v0.c2, t0.c1)), (t0.c2 IN (t0.c0, t0.c0)))) ISNULL));
SELECT DISTINCT * FROM t0, v0 RIGHT OUTER JOIN rt1 ON ((((((((((0.4914824203911483)>(NULL)))OR((((0.17806945315664946)) NOT BETWEEN ((t0.c0)) AND ((rt1.c2))))))AND((v0.c2 IN ()))))AND(((t0.c2) NOT BETWEEN (rt1.c2) AND (rt1.c0)))))OR(((v0.c1) IS TRUE))) RIGHT OUTER JOIN vt0 ON (((vt0.c0)) BETWEEN ((v0.c2 COLLATE NOCASE)) AND ((((rt1.c0) BETWEEN (t0.c2) AND (t0.c0)))));
SELECT rt1.c0, t0.c2, rt1.c1, t0.c0, t0.c1 FROM rt1 CROSS JOIN t0 ON ((x'')/(t0.c0)) COLLATE NOCASE GROUP BY rt1.c0, t0.c2, rt1.c1, t0.c0, t0.c1;
SELECT ALL rt1.c0, t0.c2, rt1.c1, t0.c0, t0.c1 FROM rt1 NOT INDEXED CROSS JOIN t0 ON ((x'')/(t0.c0)) COLLATE NOCASE WHERE ((CAST(t0.c0 AS REAL) IN (((rt1.c1)|(t0.c1))))) GROUP BY rt1.c0, t0.c2, rt1.c1, t0.c0, t0.c1 UNION SELECT ALL rt1.c0, t0.c2, rt1.c1, t0.c0, t0.c1 FROM rt1 CROSS JOIN t0 ON ((x'')/(t0.c0)) COLLATE NOCASE WHERE ((NOT ((CAST(t0.c0 AS REAL) IN (((rt1.c1)|(t0.c1))))))) GROUP BY rt1.c0, t0.c2, rt1.c1, t0.c0, t0.c1 UNION SELECT ALL rt1.c0, t0.c2, rt1.c1, t0.c0, t0.c1 FROM rt1 CROSS JOIN t0 ON ((x'')/(t0.c0)) COLLATE NOCASE WHERE ((((CAST(t0.c0 AS REAL) IN (((rt1.c1)|(t0.c1))))) ISNULL)) GROUP BY rt1.c0, t0.c2, rt1.c1, t0.c0, t0.c1;
SELECT rt1.c0, t0.c2, rt1.c1, t0.c0, t0.c1 FROM rt1 CROSS JOIN t0 ON ((x'')/(t0.c0)) COLLATE NOCASE GROUP BY rt1.c0, t0.c2, rt1.c1, t0.c0, t0.c1;
SELECT t0.c1, t0.c2 FROM rt1, t0 INNER JOIN v0 ON (((((t0.c2)) BETWEEN ((v0.c2)) AND ((rt1.c0)))) ISNULL) GROUP BY t0.c1, t0.c2;
SELECT ALL t0.c1, t0.c2 FROM rt1, t0 INNER JOIN v0 ON (((((t0.c2)) BETWEEN ((v0.c2)) AND ((rt1.c0)))) ISNULL) GROUP BY t0.c1, t0.c2 HAVING ((DATETIME(v0.c1, GROUP_CONCAT(COUNT(*)), t0.c1)) BETWEEN (SUM(COUNT(*))) AND (COUNT(MIN(v0.c2)))) UNION ALL SELECT ALL t0.c1, t0.c2 FROM rt1, t0 INNER JOIN v0 ON (((((t0.c2)) BETWEEN ((v0.c2)) AND ((rt1.c0)))) ISNULL) GROUP BY t0.c1, t0.c2 HAVING (NOT (((DATETIME(v0.c1, GROUP_CONCAT(COUNT(*)), t0.c1)) BETWEEN (SUM(COUNT(*))) AND (COUNT(MIN(v0.c2)))))) UNION ALL SELECT ALL t0.c1, t0.c2 FROM rt1, t0 INNER JOIN v0 ON (((((t0.c2)) BETWEEN ((v0.c2)) AND ((rt1.c0)))) ISNULL) GROUP BY t0.c1, t0.c2 HAVING ((((DATETIME(v0.c1, GROUP_CONCAT(COUNT(*)), t0.c1)) BETWEEN (SUM(COUNT(*))) AND (COUNT(MIN(v0.c2))))) ISNULL);
SELECT vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE (vt0.c0) UNION ALL SELECT ALL vt0.c0 FROM vt0 NOT INDEXED WHERE ((NOT (vt0.c0))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE (((vt0.c0) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT * FROM t0, v0, vt0, rt1;
SELECT DISTINCT * FROM t0, v0, vt0, rt1 WHERE (((CAST(v0.c2 AS BLOB)) BETWEEN ((+ (rt1.c1))) AND (CASE rt1.c1  WHEN t0.c1 THEN v0.c1 ELSE v0.c0 END))) UNION SELECT DISTINCT * FROM t0, v0, vt0, rt1 WHERE ((NOT (((CAST(v0.c2 AS BLOB)) BETWEEN ((+ (rt1.c1))) AND (CASE rt1.c1  WHEN t0.c1 THEN v0.c1 ELSE v0.c0 END))))) UNION SELECT DISTINCT * FROM t0, v0, vt0, rt1 WHERE (((((CAST(v0.c2 AS BLOB)) BETWEEN ((+ (rt1.c1))) AND (CASE rt1.c1  WHEN t0.c1 THEN v0.c1 ELSE v0.c0 END))) ISNULL));
SELECT DISTINCT * FROM t0, v0, vt0, rt1;
SELECT ALL v0.c2, v0.c1, v0.c0 FROM v0 GROUP BY v0.c2, v0.c1, v0.c0;
SELECT ALL v0.c2, v0.c1, v0.c0 FROM v0 WHERE (((v0.c1 IN (v0.c0)) IN ())) GROUP BY v0.c2, v0.c1, v0.c0 UNION SELECT ALL v0.c2, v0.c1, v0.c0 FROM v0 WHERE ((NOT (((v0.c1 IN (v0.c0)) IN ())))) GROUP BY v0.c2, v0.c1, v0.c0 UNION SELECT v0.c2, v0.c1, v0.c0 FROM v0 WHERE (((((v0.c1 IN (v0.c0)) IN ())) ISNULL)) GROUP BY v0.c2, v0.c1, v0.c0;
SELECT ALL v0.c2, v0.c1, v0.c0 FROM v0 GROUP BY v0.c2, v0.c1, v0.c0;
SELECT ALL v0.c0, rt1.c1, rt1.c0, v0.c1, vt0.c0, rt1.c2 FROM vt0 LEFT OUTER JOIN v0 ON ABS(CASE t0.c1  WHEN rt1.c2 THEN v0.c2 ELSE rt1.c0 END) RIGHT OUTER JOIN rt1 ON ((((t0.c2)IS(t0.c2)))<>(CASE rt1.c0  WHEN rt1.c0 THEN rt1.c0 END)) RIGHT OUTER JOIN t0 ON -1694775175 GROUP BY v0.c0, rt1.c1, rt1.c0, v0.c1, vt0.c0, rt1.c2;
SELECT ALL vt0.c0, rt1.c2, t0.c2, t0.c0, rt1.c1, v0.c2, v0.c1, t0.c1, rt1.c0, v0.c0 FROM v0, vt0, rt1, t0;
SELECT ALL vt0.c0, rt1.c2, t0.c2, t0.c0, rt1.c1, v0.c2, v0.c1, t0.c1, rt1.c0, v0.c0 FROM v0, vt0, rt1, t0 WHERE ((+ (rt1.c1)) COLLATE RTRIM) UNION ALL SELECT vt0.c0, rt1.c2, t0.c2, t0.c0, rt1.c1, v0.c2, v0.c1, t0.c1, rt1.c0, v0.c0 FROM v0, vt0, rt1, t0 WHERE ((NOT ((+ (rt1.c1)) COLLATE RTRIM))) UNION ALL SELECT ALL vt0.c0, rt1.c2, t0.c2, t0.c0, rt1.c1, v0.c2, v0.c1, t0.c1, rt1.c0, v0.c0 FROM v0, vt0, rt1, t0 WHERE ((((+ (rt1.c1)) COLLATE RTRIM) ISNULL));
SELECT ALL vt0.c0, rt1.c2, t0.c2, t0.c0, rt1.c1, v0.c2, v0.c1, t0.c1, rt1.c0, v0.c0 FROM v0, vt0, rt1, t0;
SELECT DISTINCT * FROM t0, rt1, v0, vt0;
SELECT DISTINCT * FROM t0, rt1, v0, vt0 WHERE ((((+ (vt0.c0)))AND(CAST(rt1.c2 AS REAL)))) UNION SELECT DISTINCT * FROM t0, rt1, v0, vt0 WHERE ((NOT ((((+ (vt0.c0)))AND(CAST(rt1.c2 AS REAL)))))) UNION SELECT DISTINCT * FROM t0, rt1, v0, vt0 WHERE ((((((+ (vt0.c0)))AND(CAST(rt1.c2 AS REAL)))) ISNULL));
SELECT DISTINCT * FROM t0, rt1, v0, vt0;
SELECT t0.c1, t0.c2, t0.c0 FROM t0 GROUP BY t0.c1, t0.c2, t0.c0;
SELECT t0.c1, t0.c2, t0.c0 FROM t0 WHERE (((((776092145)IS NOT(t0.c0))) ISNULL)) GROUP BY t0.c1, t0.c2, t0.c0 UNION SELECT t0.c1, t0.c2, t0.c0 FROM t0 WHERE ((NOT (((((776092145)IS NOT(t0.c0))) ISNULL)))) GROUP BY t0.c1, t0.c2, t0.c0 UNION SELECT t0.c1, t0.c2, t0.c0 FROM t0 WHERE (((((((776092145)IS NOT(t0.c0))) ISNULL)) ISNULL)) GROUP BY t0.c1, t0.c2, t0.c0;
SELECT t0.c1, t0.c2, t0.c0 FROM t0 GROUP BY t0.c1, t0.c2, t0.c0;
SELECT rt1.c1, t0.c0, t0.c2, vt0.c0, rt1.c0, t0.c1, v0.c1, rt1.c2, v0.c2, v0.c0 FROM v0 INNER JOIN t0 ON rt1.c2 LEFT OUTER JOIN rt1 ON ((rt1.c2 COLLATE NOCASE)>(((1627154356) NOT NULL))) RIGHT OUTER JOIN vt0 ON ((v0.c2) BETWEEN (((0.4981327081281339)GLOB(v0.c2))) AND (((((v0.c0)OR(rt1.c0)))OR('TRUE')))) GROUP BY rt1.c1, t0.c0, t0.c2, vt0.c0, rt1.c0, t0.c1, v0.c1, rt1.c2, v0.c2, v0.c0;
SELECT ALL v0.c2 FROM vt0 CROSS JOIN v0 ON CAST(((v0.c0)|(v0.c0)) AS INTEGER);
SELECT ALL v0.c2 FROM vt0 CROSS JOIN v0 ON CAST(((v0.c0)|(v0.c0)) AS INTEGER) WHERE (((- (v0.c0)) IN ())) UNION ALL SELECT v0.c2 FROM vt0 CROSS JOIN v0 ON CAST(((v0.c0)|(v0.c0)) AS INTEGER) WHERE ((NOT (((- (v0.c0)) IN ())))) UNION ALL SELECT v0.c2 FROM vt0 CROSS JOIN v0 ON CAST(((v0.c0)|(v0.c0)) AS INTEGER) WHERE (((((- (v0.c0)) IN ())) ISNULL));
SELECT ALL v0.c2 FROM vt0 CROSS JOIN v0 ON CAST(((v0.c0)|(v0.c0)) AS INTEGER);
SELECT DISTINCT * FROM v0 INNER JOIN rt1 ON (((((v0.c2 IN ()))AND(CASE v0.c1  WHEN v0.c1 THEN rt1.c1 ELSE rt1.c2 END)))OR(CASE WHEN v0.c2 THEN rt1.c1 END));
SELECT DISTINCT * FROM v0 INNER JOIN rt1 ON (((((v0.c2 IN ()))AND(CASE v0.c1  WHEN v0.c1 THEN rt1.c1 ELSE rt1.c2 END)))OR(CASE WHEN v0.c2 THEN rt1.c1 END)) WHERE ((('-1809003906' COLLATE RTRIM) ISNULL)) UNION SELECT DISTINCT * FROM v0 INNER JOIN rt1 ON (((((v0.c2 IN ()))AND(CASE v0.c1  WHEN v0.c1 THEN rt1.c1 ELSE rt1.c2 END)))OR(CASE WHEN v0.c2 THEN rt1.c1 END)) WHERE ((NOT ((('-1809003906' COLLATE RTRIM) ISNULL)))) UNION SELECT DISTINCT * FROM v0 INNER JOIN rt1 ON (((((v0.c2 IN ()))AND(CASE v0.c1  WHEN v0.c1 THEN rt1.c1 ELSE rt1.c2 END)))OR(CASE WHEN v0.c2 THEN rt1.c1 END)) WHERE ((((('-1809003906' COLLATE RTRIM) ISNULL)) ISNULL));
SELECT DISTINCT * FROM v0 INNER JOIN rt1 ON (((((v0.c2 IN ()))AND(CASE v0.c1  WHEN v0.c1 THEN rt1.c1 ELSE rt1.c2 END)))OR(CASE WHEN v0.c2 THEN rt1.c1 END));
SELECT ALL t0.c0, rt1.c1, rt1.c0, rt1.c2, vt0.c0, t0.c2, t0.c1 FROM t0, vt0, rt1 GROUP BY t0.c0, rt1.c1, rt1.c0, rt1.c2, vt0.c0, t0.c2, t0.c1;
SELECT ALL t0.c0, rt1.c1, rt1.c0, rt1.c2, vt0.c0, t0.c2, t0.c1 FROM t0 NOT INDEXED, vt0, rt1 WHERE ('?zT.') GROUP BY t0.c0, rt1.c1, rt1.c0, rt1.c2, vt0.c0, t0.c2, t0.c1 UNION SELECT t0.c0, rt1.c1, rt1.c0, rt1.c2, vt0.c0, t0.c2, t0.c1 FROM t0, vt0, rt1 WHERE ((NOT ('?zT.'))) GROUP BY t0.c0, rt1.c1, rt1.c0, rt1.c2, vt0.c0, t0.c2, t0.c1 UNION SELECT t0.c0, rt1.c1, rt1.c0, rt1.c2, vt0.c0, t0.c2, t0.c1 FROM t0, vt0, rt1 WHERE ((('?zT.') ISNULL)) GROUP BY t0.c0, rt1.c1, rt1.c0, rt1.c2, vt0.c0, t0.c2, t0.c1;
SELECT ALL t0.c0, rt1.c1, rt1.c0, rt1.c2, vt0.c0, t0.c2, t0.c1 FROM t0, vt0, rt1 GROUP BY t0.c0, rt1.c1, rt1.c0, rt1.c2, vt0.c0, t0.c2, t0.c1;
SELECT v0.c0, v0.c2 FROM v0 GROUP BY v0.c0, v0.c2;
SELECT ALL v0.c0, v0.c2 FROM v0 GROUP BY v0.c0, v0.c2 HAVING MIN(CASE COUNT(GROUP_CONCAT(AVG(COUNT(*))))  WHEN SUM(GROUP_CONCAT(COUNT(*))) THEN TOTAL(MIN(v0.c2)) WHEN '' THEN NULL WHEN v0.c2 THEN v0.c2 END) UNION ALL SELECT ALL v0.c0, v0.c2 FROM v0 GROUP BY v0.c0, v0.c2 HAVING (NOT (MIN(CASE COUNT(GROUP_CONCAT(AVG(COUNT(*))))  WHEN SUM(GROUP_CONCAT(COUNT(*))) THEN TOTAL(MIN(v0.c2)) WHEN '' THEN NULL WHEN v0.c2 THEN v0.c2 END))) UNION ALL SELECT v0.c0, v0.c2 FROM v0 GROUP BY v0.c0, v0.c2 HAVING ((MIN(CASE COUNT(GROUP_CONCAT(AVG(COUNT(*))))  WHEN SUM(GROUP_CONCAT(COUNT(*))) THEN TOTAL(MIN(v0.c2)) WHEN '' THEN NULL WHEN v0.c2 THEN v0.c2 END)) ISNULL);
SELECT ALL * FROM t0, v0, rt1;
SELECT * FROM t0, v0, rt1 WHERE (CASE ((((((((t0.c1)AND(t0.c2)))AND(rt1.c1)))AND(t0.c2)))AND(rt1.c1))  WHEN CAST(rt1.c2 AS BLOB) THEN (('1899719288')>(t0.c1)) END) UNION ALL SELECT ALL * FROM t0, v0, rt1 WHERE ((NOT (CASE ((((((((t0.c1)AND(t0.c2)))AND(rt1.c1)))AND(t0.c2)))AND(rt1.c1))  WHEN CAST(rt1.c2 AS BLOB) THEN (('1899719288')>(t0.c1)) END))) UNION ALL SELECT * FROM t0, v0, rt1 WHERE (((CASE ((((((((t0.c1)AND(t0.c2)))AND(rt1.c1)))AND(t0.c2)))AND(rt1.c1))  WHEN CAST(rt1.c2 AS BLOB) THEN (('1899719288')>(t0.c1)) END) ISNULL));
SELECT ALL * FROM t0, v0, rt1;
SELECT DISTINCT v0.c0, t0.c0 FROM v0, rt1, t0, vt0;
SELECT DISTINCT v0.c0, t0.c0 FROM v0, rt1, t0, vt0 WHERE ((((v0.c1 IN ())) ISNULL)) UNION SELECT DISTINCT v0.c0, t0.c0 FROM v0, rt1, t0, vt0 WHERE ((NOT ((((v0.c1 IN ())) ISNULL)))) UNION SELECT DISTINCT v0.c0, t0.c0 FROM v0, rt1, t0, vt0 WHERE ((((((v0.c1 IN ())) ISNULL)) ISNULL));
SELECT DISTINCT v0.c0, t0.c0 FROM v0, rt1, t0, vt0;
SELECT vt0.c0, t0.c0 FROM t0 NOT INDEXED, vt0 GROUP BY vt0.c0, t0.c0;
SELECT vt0.c0, t0.c0 FROM t0, vt0 WHERE ((CAST(t0.c0 AS TEXT) IN ())) GROUP BY vt0.c0, t0.c0 UNION SELECT vt0.c0, t0.c0 FROM t0, vt0 WHERE ((NOT ((CAST(t0.c0 AS TEXT) IN ())))) GROUP BY vt0.c0, t0.c0 UNION SELECT ALL vt0.c0, t0.c0 FROM t0, vt0 WHERE ((((CAST(t0.c0 AS TEXT) IN ())) ISNULL)) GROUP BY vt0.c0, t0.c0;
SELECT vt0.c0, t0.c0 FROM t0 NOT INDEXED, vt0 GROUP BY vt0.c0, t0.c0;
SELECT t0.c2 FROM vt0 INNER JOIN t0 ON UPPER(((vt0.c0) IS FALSE)) GROUP BY t0.c2;
SELECT t0.c2 FROM vt0 INNER JOIN t0 ON UPPER(((vt0.c0) IS FALSE)) GROUP BY t0.c2 HAVING ((((((t0.c0) NOT NULL))OR(LTRIM(MAX(SUM(SUM(t0.c2))), t0.c0))))AND(MAX(vt0.c0))) UNION ALL SELECT ALL t0.c2 FROM vt0 INNER JOIN t0 ON UPPER(((vt0.c0) IS FALSE)) GROUP BY t0.c2 HAVING (NOT (((((((t0.c0) NOT NULL))OR(LTRIM(MAX(SUM(SUM(t0.c2))), t0.c0))))AND(MAX(vt0.c0))))) UNION ALL SELECT ALL t0.c2 FROM vt0 INNER JOIN t0 ON UPPER(((vt0.c0) IS FALSE)) GROUP BY t0.c2 HAVING ((((((((t0.c0) NOT NULL))OR(LTRIM(MAX(SUM(SUM(t0.c2))), t0.c0))))AND(MAX(vt0.c0)))) ISNULL);
SELECT * FROM rt1 FULL OUTER JOIN t0 ON CASE WHEN ((t0.c2)GLOB(t0.c0)) THEN ((rt1.c0) BETWEEN (t0.c2) AND (t0.c1)) END LEFT OUTER JOIN vt0 ON '';
SELECT ALL * FROM rt1 FULL OUTER JOIN t0 ON CASE WHEN ((t0.c2)GLOB(t0.c0)) THEN ((rt1.c0) BETWEEN (t0.c2) AND (t0.c1)) END LEFT OUTER JOIN vt0 ON '' WHERE (((((vt0.c0) ISNULL))-(((((t0.c0)AND(t0.c0)))AND(vt0.c0))))) UNION ALL SELECT ALL * FROM rt1 FULL OUTER JOIN t0 ON CASE WHEN ((t0.c2)GLOB(t0.c0)) THEN ((rt1.c0) BETWEEN (t0.c2) AND (t0.c1)) END LEFT OUTER JOIN vt0 ON '' WHERE ((NOT (((((vt0.c0) ISNULL))-(((((t0.c0)AND(t0.c0)))AND(vt0.c0))))))) UNION ALL SELECT ALL * FROM rt1 FULL OUTER JOIN t0 ON CASE WHEN ((t0.c2)GLOB(t0.c0)) THEN ((rt1.c0) BETWEEN (t0.c2) AND (t0.c1)) END LEFT OUTER JOIN vt0 ON '' WHERE (((((((vt0.c0) ISNULL))-(((((t0.c0)AND(t0.c0)))AND(vt0.c0))))) ISNULL));
SELECT * FROM rt1 FULL OUTER JOIN t0 ON CASE WHEN ((t0.c2)GLOB(t0.c0)) THEN ((rt1.c0) BETWEEN (t0.c2) AND (t0.c1)) END LEFT OUTER JOIN vt0 ON '';
SELECT DISTINCT t0.c2, t0.c0 FROM t0;
SELECT DISTINCT t0.c2, t0.c0 FROM t0 WHERE (((((((t0.c2)OR(t0.c0)))AND(t0.c1)))*((t0.c2 IN ())))) UNION SELECT DISTINCT t0.c2, t0.c0 FROM t0 WHERE ((NOT (((((((t0.c2)OR(t0.c0)))AND(t0.c1)))*((t0.c2 IN ())))))) UNION SELECT DISTINCT t0.c2, t0.c0 FROM t0 WHERE (((((((((t0.c2)OR(t0.c0)))AND(t0.c1)))*((t0.c2 IN ())))) ISNULL));
SELECT DISTINCT t0.c2, t0.c0 FROM t0;
SELECT ALL t0.c0, t0.c2, rt1.c2, rt1.c1, rt1.c0, t0.c1 FROM t0, rt1 GROUP BY t0.c0, t0.c2, rt1.c2, rt1.c1, rt1.c0, t0.c1;
SELECT ALL t0.c0, t0.c2, rt1.c2, rt1.c1, rt1.c0, t0.c1 FROM t0, rt1 WHERE ((((json_insert(t0.c1, t0.c2, rt1.c0, rt1.c0, rt1.c0)))>(((~ (rt1.c1)))))) GROUP BY t0.c0, t0.c2, rt1.c2, rt1.c1, rt1.c0, t0.c1 UNION SELECT ALL t0.c0, t0.c2, rt1.c2, rt1.c1, rt1.c0, t0.c1 FROM t0, rt1 WHERE ((NOT ((((json_insert(t0.c1, t0.c2, rt1.c0, rt1.c0, rt1.c0)))>(((~ (rt1.c1)))))))) GROUP BY t0.c0, t0.c2, rt1.c2, rt1.c1, rt1.c0, t0.c1 UNION SELECT ALL t0.c0, t0.c2, rt1.c2, rt1.c1, rt1.c0, t0.c1 FROM t0, rt1 WHERE ((((((json_insert(t0.c1, t0.c2, rt1.c0, rt1.c0, rt1.c0)))>(((~ (rt1.c1)))))) ISNULL)) GROUP BY t0.c0, t0.c2, rt1.c2, rt1.c1, rt1.c0, t0.c1;
SELECT ALL t0.c0, t0.c2, rt1.c2, rt1.c1, rt1.c0, t0.c1 FROM t0, rt1 GROUP BY t0.c0, t0.c2, rt1.c2, rt1.c1, rt1.c0, t0.c1;
SELECT ALL rt1.c0, t0.c1, v0.c1, v0.c2 FROM v0, rt1, t0 GROUP BY rt1.c0, t0.c1, v0.c1, v0.c2;
SELECT rt1.c0, t0.c1, v0.c1, v0.c2 FROM v0, rt1, t0 GROUP BY rt1.c0, t0.c1, v0.c1, v0.c2 HAVING (TOTAL(t0.c0) IN ()) UNION ALL SELECT rt1.c0, t0.c1, v0.c1, v0.c2 FROM v0, rt1, t0 GROUP BY rt1.c0, t0.c1, v0.c1, v0.c2 HAVING (NOT ((TOTAL(t0.c0) IN ()))) UNION ALL SELECT rt1.c0, t0.c1, v0.c1, v0.c2 FROM v0, rt1, t0 GROUP BY rt1.c0, t0.c1, v0.c1, v0.c2 HAVING (((TOTAL(t0.c0) IN ())) ISNULL);
SELECT ALL rt1.c0, t0.c1, v0.c1, v0.c2 FROM v0, rt1, t0 GROUP BY rt1.c0, t0.c1, v0.c1, v0.c2;
SELECT rt1.c0, t0.c1, v0.c1, v0.c2 FROM v0, rt1, t0 GROUP BY rt1.c0, t0.c1, v0.c1, v0.c2 HAVING (TOTAL(t0.c0) IN ()) UNION ALL SELECT rt1.c0, t0.c1, v0.c1, v0.c2 FROM v0, rt1, t0 GROUP BY rt1.c0, t0.c1, v0.c1, v0.c2 HAVING (NOT ((TOTAL(t0.c0) IN ()))) UNION ALL SELECT rt1.c0, t0.c1, v0.c1, v0.c2 FROM v0, rt1, t0 GROUP BY rt1.c0, t0.c1, v0.c1, v0.c2 HAVING (((TOTAL(t0.c0) IN ())) ISNULL);
SELECT ALL rt1.c0, t0.c1, v0.c1, v0.c2 FROM v0, rt1, t0 GROUP BY rt1.c0, t0.c1, v0.c1, v0.c2;
SELECT vt0.c0, t0.c1 FROM vt0, t0;
SELECT vt0.c0, t0.c1 FROM vt0, t0 WHERE (CASE WHEN COALESCE(t0.c2, vt0.c0) THEN ((((vt0.c0)OR(vt0.c0)))OR(t0.c0)) WHEN ((t0.c2)%(t0.c2)) THEN (~ (vt0.c0)) WHEN ((t0.c2) IS FALSE) THEN ((((t0.c0)AND(t0.c2)))OR(vt0.c0)) WHEN (t0.c1 IN ()) THEN ((t0.c2)||(t0.c1)) WHEN CASE WHEN t0.c2 THEN t0.c2 WHEN t0.c1 THEN t0.c1 WHEN t0.c0 THEN 'E7' ELSE t0.c2 END THEN ((vt0.c0)<>(vt0.c0)) ELSE ((((vt0.c0)AND(vt0.c0)))AND(t0.c1)) END) UNION ALL SELECT vt0.c0, t0.c1 FROM vt0, t0 WHERE ((NOT (CASE WHEN COALESCE(t0.c2, vt0.c0) THEN ((((vt0.c0)OR(vt0.c0)))OR(t0.c0)) WHEN ((t0.c2)%(t0.c2)) THEN (~ (vt0.c0)) WHEN ((t0.c2) IS FALSE) THEN ((((t0.c0)AND(t0.c2)))OR(vt0.c0)) WHEN (t0.c1 IN ()) THEN ((t0.c2)||(t0.c1)) WHEN CASE WHEN t0.c2 THEN t0.c2 WHEN t0.c1 THEN t0.c1 WHEN t0.c0 THEN 'E7' ELSE t0.c2 END THEN ((vt0.c0)<>(vt0.c0)) ELSE ((((vt0.c0)AND(vt0.c0)))AND(t0.c1)) END))) UNION ALL SELECT ALL vt0.c0, t0.c1 FROM vt0, t0 WHERE (((CASE WHEN COALESCE(t0.c2, vt0.c0) THEN ((((vt0.c0)OR(vt0.c0)))OR(t0.c0)) WHEN ((t0.c2)%(t0.c2)) THEN (~ (vt0.c0)) WHEN ((t0.c2) IS FALSE) THEN ((((t0.c0)AND(t0.c2)))OR(vt0.c0)) WHEN (t0.c1 IN ()) THEN ((t0.c2)||(t0.c1)) WHEN CASE WHEN t0.c2 THEN t0.c2 WHEN t0.c1 THEN t0.c1 WHEN t0.c0 THEN 'E7' ELSE t0.c2 END THEN ((vt0.c0)<>(vt0.c0)) ELSE ((((vt0.c0)AND(vt0.c0)))AND(t0.c1)) END) ISNULL));
SELECT vt0.c0, t0.c1 FROM vt0, t0;
SELECT DISTINCT * FROM v0, t0 CROSS JOIN vt0 ON (((v0.c2)) BETWEEN ((rt1.c1 COLLATE RTRIM)) AND ((CASE WHEN v0.c2 THEN t0.c0 ELSE t0.c2 END))) FULL OUTER JOIN rt1 ON (((((((((t0.c0)OR(v0.c2)))AND(t0.c0)))AND(t0.c2)))AND(rt1.c0)) IN ());
SELECT v0.c0, rt1.c2, t0.c2, vt0.c0, rt1.c0, v0.c1 FROM rt1, vt0, t0, v0 GROUP BY v0.c0, rt1.c2, t0.c2, vt0.c0, rt1.c0, v0.c1;
SELECT ALL v0.c0, rt1.c2, t0.c2, vt0.c0, rt1.c0, v0.c1 FROM rt1, vt0, t0, v0 WHERE (((((((t0.c0)OR(rt1.c2)))AND(t0.c1))) ISNULL)) GROUP BY v0.c0, rt1.c2, t0.c2, vt0.c0, rt1.c0, v0.c1 UNION SELECT v0.c0, rt1.c2, t0.c2, vt0.c0, rt1.c0, v0.c1 FROM rt1, vt0, t0, v0 WHERE ((NOT (((((((t0.c0)OR(rt1.c2)))AND(t0.c1))) ISNULL)))) GROUP BY v0.c0, rt1.c2, t0.c2, vt0.c0, rt1.c0, v0.c1 UNION SELECT v0.c0, rt1.c2, t0.c2, vt0.c0, rt1.c0, v0.c1 FROM rt1, vt0, t0, v0 WHERE (((((((((t0.c0)OR(rt1.c2)))AND(t0.c1))) ISNULL)) ISNULL)) GROUP BY v0.c0, rt1.c2, t0.c2, vt0.c0, rt1.c0, v0.c1;
SELECT v0.c0, rt1.c2, t0.c2, vt0.c0, rt1.c0, v0.c1 FROM rt1, vt0, t0, v0 GROUP BY v0.c0, rt1.c2, t0.c2, vt0.c0, rt1.c0, v0.c1;
SELECT ALL rt1.c0, t0.c2, t0.c0, rt1.c1, rt1.c2, t0.c1 FROM rt1, t0 GROUP BY rt1.c0, t0.c2, t0.c0, rt1.c1, rt1.c2, t0.c1;
SELECT ALL rt1.c0, t0.c2, t0.c0, rt1.c1, rt1.c2, t0.c1 FROM rt1, t0 GROUP BY rt1.c0, t0.c2, t0.c0, rt1.c1, rt1.c2, t0.c1 HAVING GROUP_CONCAT(json_remove(COUNT(*), rt1.c1)) UNION ALL SELECT rt1.c0, t0.c2, t0.c0, rt1.c1, rt1.c2, t0.c1 FROM rt1, t0 GROUP BY rt1.c0, t0.c2, t0.c0, rt1.c1, rt1.c2, t0.c1 HAVING (NOT (GROUP_CONCAT(json_remove(COUNT(*), rt1.c1)))) UNION ALL SELECT rt1.c0, t0.c2, t0.c0, rt1.c1, rt1.c2, t0.c1 FROM rt1, t0 GROUP BY rt1.c0, t0.c2, t0.c0, rt1.c1, rt1.c2, t0.c1 HAVING ((GROUP_CONCAT(json_remove(COUNT(*), rt1.c1))) ISNULL);
SELECT ALL v0.c2, v0.c1 FROM v0, rt1 LEFT OUTER JOIN t0 ON v0.c1 RIGHT OUTER JOIN vt0 ON vt0.c0;
SELECT ALL v0.c2, v0.c1 FROM v0, rt1 LEFT OUTER JOIN t0 ON v0.c1 RIGHT OUTER JOIN vt0 ON vt0.c0 WHERE (rt1.c2) UNION ALL SELECT v0.c2, v0.c1 FROM v0, rt1 LEFT OUTER JOIN t0 ON v0.c1 RIGHT OUTER JOIN vt0 ON vt0.c0 WHERE ((NOT (rt1.c2))) UNION ALL SELECT v0.c2, v0.c1 FROM v0, rt1 LEFT OUTER JOIN t0 ON v0.c1 RIGHT OUTER JOIN vt0 ON vt0.c0 WHERE (((rt1.c2) ISNULL));
SELECT ALL v0.c2, v0.c1 FROM v0, rt1 LEFT OUTER JOIN t0 ON v0.c1 RIGHT OUTER JOIN vt0 ON vt0.c0;
SELECT DISTINCT t0.c1 FROM t0;
SELECT DISTINCT t0.c1 FROM t0 WHERE (0.32116188981179083) UNION SELECT DISTINCT t0.c1 FROM t0 WHERE ((NOT (0.32116188981179083))) UNION SELECT DISTINCT t0.c1 FROM t0 WHERE (((0.32116188981179083) ISNULL));
SELECT DISTINCT t0.c1 FROM t0;
SELECT ALL v0.c0, v0.c1 FROM v0 GROUP BY v0.c0, v0.c1;
SELECT v0.c0, v0.c1 FROM v0 NOT INDEXED WHERE (((((v0.c2)OR(v0.c2)))AND(v0.c0)) COLLATE RTRIM) GROUP BY v0.c0, v0.c1 UNION SELECT v0.c0, v0.c1 FROM v0 WHERE ((NOT (((((v0.c2)OR(v0.c2)))AND(v0.c0)) COLLATE RTRIM))) GROUP BY v0.c0, v0.c1 UNION SELECT v0.c0, v0.c1 FROM v0 WHERE (((((((v0.c2)OR(v0.c2)))AND(v0.c0)) COLLATE RTRIM) ISNULL)) GROUP BY v0.c0, v0.c1;
SELECT ALL v0.c0, v0.c1 FROM v0 GROUP BY v0.c0, v0.c1;
SELECT rt1.c2 FROM rt1, vt0 GROUP BY rt1.c2;
SELECT ALL rt1.c2 FROM rt1, vt0 GROUP BY rt1.c2 HAVING GROUP_CONCAT(MAX(MIN(MAX(rt1.c1)))) UNION ALL SELECT rt1.c2 FROM rt1, vt0 GROUP BY rt1.c2 HAVING (NOT (GROUP_CONCAT(MAX(MIN(MAX(rt1.c1)))))) UNION ALL SELECT rt1.c2 FROM rt1, vt0 GROUP BY rt1.c2 HAVING ((GROUP_CONCAT(MAX(MIN(MAX(rt1.c1))))) ISNULL);
SELECT TOTAL((NOT (JULIANDAY(rt1.c0, t0.c0, rt1.c0)))) FROM vt0, v0, t0, rt1 ORDER BY ((v0.c2) NOT NULL) COLLATE RTRIM, CAST(t0.c0 AS INTEGER) COLLATE RTRIM ASC  NULLS FIRST;
SELECT vt0.c0, v0.c1 FROM vt0, v0;
SELECT ALL vt0.c0, v0.c1 FROM vt0, v0 WHERE (((((((((v0.c0)OR((((v0.c2))<((v0.c2))))))AND((((v0.c2)) NOT BETWEEN ((v0.c2)) AND ((v0.c0))))))AND((~ (v0.c2)))))AND(CASE WHEN v0.c1 THEN v0.c0 ELSE '.9. #Rb|鑨' END))) UNION ALL SELECT vt0.c0, v0.c1 FROM vt0, v0 WHERE ((NOT (((((((((v0.c0)OR((((v0.c2))<((v0.c2))))))AND((((v0.c2)) NOT BETWEEN ((v0.c2)) AND ((v0.c0))))))AND((~ (v0.c2)))))AND(CASE WHEN v0.c1 THEN v0.c0 ELSE '.9. #Rb|鑨' END))))) UNION ALL SELECT ALL vt0.c0, v0.c1 FROM vt0, v0 WHERE (((((((((((v0.c0)OR((((v0.c2))<((v0.c2))))))AND((((v0.c2)) NOT BETWEEN ((v0.c2)) AND ((v0.c0))))))AND((~ (v0.c2)))))AND(CASE WHEN v0.c1 THEN v0.c0 ELSE '.9. #Rb|鑨' END))) ISNULL));
SELECT vt0.c0, v0.c1 FROM vt0, v0;
SELECT DISTINCT * FROM vt0, v0, rt1, t0;
SELECT DISTINCT * FROM vt0, v0, rt1, t0 WHERE ((((v0.c1)) BETWEEN ((t0.c1 COLLATE RTRIM)) AND ((NULL)))) UNION SELECT DISTINCT * FROM vt0, v0, rt1, t0 WHERE ((NOT ((((v0.c1)) BETWEEN ((t0.c1 COLLATE RTRIM)) AND ((NULL)))))) UNION SELECT DISTINCT * FROM vt0, v0, rt1, t0 WHERE ((((((v0.c1)) BETWEEN ((t0.c1 COLLATE RTRIM)) AND ((NULL)))) ISNULL));
SELECT DISTINCT * FROM vt0, v0, rt1, t0;
SELECT v0.c2 FROM v0, t0, rt1 GROUP BY v0.c2;
SELECT v0.c2 FROM v0, t0, rt1 WHERE (((((v0.c2) IS TRUE))<(CAST(v0.c0 AS REAL)))) GROUP BY v0.c2 UNION SELECT v0.c2 FROM v0, t0, rt1 WHERE ((NOT (((((v0.c2) IS TRUE))<(CAST(v0.c0 AS REAL)))))) GROUP BY v0.c2 UNION SELECT v0.c2 FROM v0, t0, rt1 WHERE (((((((v0.c2) IS TRUE))<(CAST(v0.c0 AS REAL)))) ISNULL)) GROUP BY v0.c2;
SELECT v0.c2 FROM v0, t0, rt1 GROUP BY v0.c2;
SELECT ALL t0.c2, v0.c2, v0.c0, rt1.c2, vt0.c0, v0.c1, t0.c1, rt1.c0, t0.c0, rt1.c1 FROM v0, rt1, t0, vt0 NOT INDEXED GROUP BY t0.c2, v0.c2, v0.c0, rt1.c2, vt0.c0, v0.c1, t0.c1, rt1.c0, t0.c0, rt1.c1;
SELECT t0.c2, v0.c2, v0.c0, rt1.c2, vt0.c0, v0.c1, t0.c1, rt1.c0, t0.c0, rt1.c1 FROM v0, rt1, t0, vt0 GROUP BY t0.c2, v0.c2, v0.c0, rt1.c2, vt0.c0, v0.c1, t0.c1, rt1.c0, t0.c0, rt1.c1 HAVING SUM(MIN(COUNT(*))) UNION ALL SELECT ALL t0.c2, v0.c2, v0.c0, rt1.c2, vt0.c0, v0.c1, t0.c1, rt1.c0, t0.c0, rt1.c1 FROM v0, rt1, t0, vt0 GROUP BY t0.c2, v0.c2, v0.c0, rt1.c2, vt0.c0, v0.c1, t0.c1, rt1.c0, t0.c0, rt1.c1 HAVING (NOT (SUM(MIN(COUNT(*))))) UNION ALL SELECT t0.c2, v0.c2, v0.c0, rt1.c2, vt0.c0, v0.c1, t0.c1, rt1.c0, t0.c0, rt1.c1 FROM v0, rt1, t0, vt0 GROUP BY t0.c2, v0.c2, v0.c0, rt1.c2, vt0.c0, v0.c1, t0.c1, rt1.c0, t0.c0, rt1.c1 HAVING ((SUM(MIN(COUNT(*)))) ISNULL);
SELECT * FROM v0;
SELECT ALL * FROM v0 WHERE (SQLITE_COMPILEOPTION_GET(((v0.c0)GLOB(v0.c0)))) UNION ALL SELECT ALL * FROM v0 WHERE ((NOT (SQLITE_COMPILEOPTION_GET(((v0.c0)GLOB(v0.c0)))))) UNION ALL SELECT * FROM v0 WHERE (((SQLITE_COMPILEOPTION_GET(((v0.c0)GLOB(v0.c0)))) ISNULL));
SELECT * FROM v0;
SELECT DISTINCT * FROM v0 LEFT OUTER JOIN t0 ON ((v0.c0 COLLATE NOCASE) NOT BETWEEN ((('700342095')&(t0.c1))) AND (((t0.c0) BETWEEN (v0.c2) AND (0.5708778134042988)))) INNER JOIN vt0 ON ((((t0.c0)GLOB(rt1.c2))) BETWEEN (CASE t0.c2  WHEN v0.c2 THEN t0.c2 END) AND ((rt1.c1 IN ()))) INNER JOIN rt1 ON ((((v0.c0)AND(t0.c1)))&(((v0.c1) NOT BETWEEN (t0.c0) AND (rt1.c1))));
SELECT DISTINCT * FROM v0 LEFT OUTER JOIN t0 ON ((v0.c0 COLLATE NOCASE) NOT BETWEEN ((('700342095')&(t0.c1))) AND (((t0.c0) BETWEEN (v0.c2) AND (0.5708778134042988)))) INNER JOIN vt0 ON ((((t0.c0)GLOB(rt1.c2))) BETWEEN (CASE t0.c2  WHEN v0.c2 THEN t0.c2 END) AND ((rt1.c1 IN ()))) INNER JOIN rt1 ON ((((v0.c0)AND(t0.c1)))&(((v0.c1) NOT BETWEEN (t0.c0) AND (rt1.c1)))) WHERE (CAST(v0.c2 AS BLOB)) UNION SELECT DISTINCT * FROM v0 LEFT OUTER JOIN t0 ON ((v0.c0 COLLATE NOCASE) NOT BETWEEN ((('700342095')&(t0.c1))) AND (((t0.c0) BETWEEN (v0.c2) AND (0.5708778134042988)))) INNER JOIN vt0 ON ((((t0.c0)GLOB(rt1.c2))) BETWEEN (CASE t0.c2  WHEN v0.c2 THEN t0.c2 END) AND ((rt1.c1 IN ()))) INNER JOIN rt1 ON ((((v0.c0)AND(t0.c1)))&(((v0.c1) NOT BETWEEN (t0.c0) AND (rt1.c1)))) WHERE ((NOT (CAST(v0.c2 AS BLOB)))) UNION SELECT DISTINCT * FROM v0 LEFT OUTER JOIN t0 ON ((v0.c0 COLLATE NOCASE) NOT BETWEEN ((('700342095')&(t0.c1))) AND (((t0.c0) BETWEEN (v0.c2) AND (0.5708778134042988)))) INNER JOIN vt0 ON ((((t0.c0)GLOB(rt1.c2))) BETWEEN (CASE t0.c2  WHEN v0.c2 THEN t0.c2 END) AND ((rt1.c1 IN ()))) INNER JOIN rt1 ON ((((v0.c0)AND(t0.c1)))&(((v0.c1) NOT BETWEEN (t0.c0) AND (rt1.c1)))) WHERE (((CAST(v0.c2 AS BLOB)) ISNULL));
SELECT DISTINCT * FROM v0 LEFT OUTER JOIN t0 ON ((v0.c0 COLLATE NOCASE) NOT BETWEEN ((('700342095')&(t0.c1))) AND (((t0.c0) BETWEEN (v0.c2) AND (0.5708778134042988)))) INNER JOIN vt0 ON ((((t0.c0)GLOB(rt1.c2))) BETWEEN (CASE t0.c2  WHEN v0.c2 THEN t0.c2 END) AND ((rt1.c1 IN ()))) INNER JOIN rt1 ON ((((v0.c0)AND(t0.c1)))&(((v0.c1) NOT BETWEEN (t0.c0) AND (rt1.c1))));
SELECT ALL v0.c2, v0.c0, t0.c2, t0.c1 FROM v0 INNER JOIN t0 ON 0.4725233176143716 GROUP BY v0.c2, v0.c0, t0.c2, t0.c1;
SELECT v0.c2, v0.c0, t0.c2, t0.c1 FROM v0 INNER JOIN t0 ON 0.4725233176143716 WHERE (((CAST(v0.c2 AS TEXT)) NOT NULL)) GROUP BY v0.c2, v0.c0, t0.c2, t0.c1 UNION SELECT v0.c2, v0.c0, t0.c2, t0.c1 FROM v0 INNER JOIN t0 ON 0.4725233176143716 WHERE ((NOT (((CAST(v0.c2 AS TEXT)) NOT NULL)))) GROUP BY v0.c2, v0.c0, t0.c2, t0.c1 UNION SELECT v0.c2, v0.c0, t0.c2, t0.c1 FROM v0 INNER JOIN t0 ON 0.4725233176143716 WHERE (((((CAST(v0.c2 AS TEXT)) NOT NULL)) ISNULL)) GROUP BY v0.c2, v0.c0, t0.c2, t0.c1;
SELECT ALL v0.c2, v0.c0, t0.c2, t0.c1 FROM v0 INNER JOIN t0 ON 0.4725233176143716 GROUP BY v0.c2, v0.c0, t0.c2, t0.c1;
SELECT ALL t0.c0, rt1.c2 FROM vt0, rt1 NATURAL JOIN t0 GROUP BY t0.c0, rt1.c2;
SELECT t0.c0, rt1.c2 FROM vt0, rt1 NATURAL JOIN t0 GROUP BY t0.c0, rt1.c2 HAVING MAX(AVG(MIN(rt1.c2))) UNION ALL SELECT ALL t0.c0, rt1.c2 FROM vt0, rt1 NATURAL JOIN t0 GROUP BY t0.c0, rt1.c2 HAVING (NOT (MAX(AVG(MIN(rt1.c2))))) UNION ALL SELECT ALL t0.c0, rt1.c2 FROM vt0, rt1 NATURAL JOIN t0 GROUP BY t0.c0, rt1.c2 HAVING ((MAX(AVG(MIN(rt1.c2)))) ISNULL);
SELECT ALL * FROM v0 NATURAL JOIN rt1;
SELECT ALL * FROM v0 NATURAL JOIN rt1 WHERE (rt1.c2) UNION ALL SELECT * FROM v0 NATURAL JOIN rt1 WHERE ((NOT (rt1.c2))) UNION ALL SELECT ALL * FROM v0 NATURAL JOIN rt1 WHERE (((rt1.c2) ISNULL));
SELECT ALL * FROM v0 NATURAL JOIN rt1;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (((((((((CASE v0.c1  WHEN v0.c2 THEN v0.c1 ELSE v0.c0 END)OR(CAST(v0.c0 AS REAL))))OR(((((v0.c2)OR(v0.c2)))AND(v0.c1)))))AND((+ (v0.c0)))))AND(v0.c0))) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (((((((((CASE v0.c1  WHEN v0.c2 THEN v0.c1 ELSE v0.c0 END)OR(CAST(v0.c0 AS REAL))))OR(((((v0.c2)OR(v0.c2)))AND(v0.c1)))))AND((+ (v0.c0)))))AND(v0.c0))))) UNION SELECT DISTINCT * FROM v0 WHERE (((((((((((CASE v0.c1  WHEN v0.c2 THEN v0.c1 ELSE v0.c0 END)OR(CAST(v0.c0 AS REAL))))OR(((((v0.c2)OR(v0.c2)))AND(v0.c1)))))AND((+ (v0.c0)))))AND(v0.c0))) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT ALL rt1.c1, rt1.c2, t0.c0 FROM rt1, t0 GROUP BY rt1.c1, rt1.c2, t0.c0;
SELECT rt1.c1, rt1.c2, t0.c0 FROM rt1, t0 WHERE (CAST(((t0.c1)==(t0.c0)) AS TEXT)) GROUP BY rt1.c1, rt1.c2, t0.c0 UNION SELECT rt1.c1, rt1.c2, t0.c0 FROM rt1, t0 WHERE ((NOT (CAST(((t0.c1)=(t0.c0)) AS TEXT)))) GROUP BY rt1.c1, rt1.c2, t0.c0 UNION SELECT rt1.c1, rt1.c2, t0.c0 FROM rt1, t0 WHERE (((CAST(((t0.c1)==(t0.c0)) AS TEXT)) ISNULL)) GROUP BY rt1.c1, rt1.c2, t0.c0;
SELECT ALL rt1.c1, rt1.c2, t0.c0 FROM rt1, t0 GROUP BY rt1.c1, rt1.c2, t0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((TOTAL(SUM(vt0.c0))) NOT NULL) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (((TOTAL(SUM(vt0.c0))) NOT NULL))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((TOTAL(SUM(vt0.c0))) NOT NULL)) ISNULL);
SELECT * FROM rt1, vt0, v0, t0;
SELECT * FROM rt1, vt0, v0, t0 WHERE ((CASE WHEN t0.c2 THEN v0.c1 WHEN 0.6447436888381778 THEN t0.c1 WHEN t0.c2 THEN t0.c1 WHEN t0.c0 THEN v0.c0 WHEN v0.c2 THEN t0.c1 END IN ())) UNION ALL SELECT * FROM rt1, vt0, v0, t0 WHERE ((NOT ((CASE WHEN t0.c2 THEN v0.c1 WHEN 0.6447436888381778 THEN t0.c1 WHEN t0.c2 THEN t0.c1 WHEN t0.c0 THEN v0.c0 WHEN v0.c2 THEN t0.c1 END IN ())))) UNION ALL SELECT ALL * FROM rt1 NOT INDEXED, vt0, v0, t0 WHERE ((((CASE WHEN t0.c2 THEN v0.c1 WHEN 0.6447436888381778 THEN t0.c1 WHEN t0.c2 THEN t0.c1 WHEN t0.c0 THEN v0.c0 WHEN v0.c2 THEN t0.c1 END IN ())) ISNULL));
SELECT * FROM rt1, vt0, v0, t0;
SELECT DISTINCT * FROM vt0, t0, rt1 CROSS JOIN v0 ON ((((t0.c1) NOT NULL))LIKE((+ (t0.c2))));
SELECT DISTINCT * FROM vt0, t0, rt1 CROSS JOIN v0 ON ((((t0.c1) NOT NULL))LIKE((+ (t0.c2)))) WHERE ((- (x'' COLLATE NOCASE))) UNION SELECT DISTINCT * FROM vt0, t0, rt1 CROSS JOIN v0 ON ((((t0.c1) NOT NULL))LIKE((+ (t0.c2)))) WHERE ((NOT ((- (x'' COLLATE NOCASE))))) UNION SELECT DISTINCT * FROM vt0, t0, rt1 CROSS JOIN v0 ON ((((t0.c1) NOT NULL))LIKE((+ (t0.c2)))) WHERE ((((- (x'' COLLATE NOCASE))) ISNULL));
SELECT DISTINCT * FROM vt0, t0, rt1 CROSS JOIN v0 ON ((((t0.c1) NOT NULL))LIKE((+ (t0.c2))));
SELECT vt0.c0, rt1.c1 FROM t0, rt1, vt0, v0 GROUP BY vt0.c0, rt1.c1;
SELECT ALL vt0.c0, rt1.c1 FROM t0, rt1, vt0, v0 WHERE ((- (CASE rt1.c1  WHEN v0.c1 THEN rt1.c1 END))) GROUP BY vt0.c0, rt1.c1 UNION SELECT ALL vt0.c0, rt1.c1 FROM t0, rt1, vt0, v0 WHERE ((NOT ((- (CASE rt1.c1  WHEN v0.c1 THEN rt1.c1 END))))) GROUP BY vt0.c0, rt1.c1 UNION SELECT ALL vt0.c0, rt1.c1 FROM t0, rt1, vt0, v0 WHERE ((((- (CASE rt1.c1  WHEN v0.c1 THEN rt1.c1 END))) ISNULL)) GROUP BY vt0.c0, rt1.c1;
SELECT vt0.c0, rt1.c1 FROM t0, rt1, vt0, v0 GROUP BY vt0.c0, rt1.c1;
SELECT rt1.c0, rt1.c1 FROM rt1, vt0 GROUP BY rt1.c0, rt1.c1;
SELECT rt1.c0, rt1.c1 FROM rt1, vt0 GROUP BY rt1.c0, rt1.c1 HAVING COUNT((((rt1.c1)) NOT BETWEEN ((rt1.c1)) AND (('[4병H')))) UNION ALL SELECT ALL rt1.c0, rt1.c1 FROM rt1, vt0 GROUP BY rt1.c0, rt1.c1 HAVING (NOT (COUNT((((rt1.c1)) NOT BETWEEN ((rt1.c1)) AND (('[4병H')))))) UNION ALL SELECT ALL rt1.c0, rt1.c1 FROM rt1, vt0 GROUP BY rt1.c0, rt1.c1 HAVING ((COUNT((((rt1.c1)) NOT BETWEEN ((rt1.c1)) AND (('[4병H'))))) ISNULL);
SELECT rt1.c0, rt1.c1 FROM rt1, vt0 GROUP BY rt1.c0, rt1.c1;
SELECT rt1.c0, rt1.c1 FROM rt1, vt0 GROUP BY rt1.c0, rt1.c1 HAVING COUNT((((rt1.c1)) NOT BETWEEN ((rt1.c1)) AND (('[4병H')))) UNION ALL SELECT ALL rt1.c0, rt1.c1 FROM rt1, vt0 GROUP BY rt1.c0, rt1.c1 HAVING (NOT (COUNT((((rt1.c1)) NOT BETWEEN ((rt1.c1)) AND (('[4병H')))))) UNION ALL SELECT ALL rt1.c0, rt1.c1 FROM rt1, vt0 GROUP BY rt1.c0, rt1.c1 HAVING ((COUNT((((rt1.c1)) NOT BETWEEN ((rt1.c1)) AND (('[4병H'))))) ISNULL);
SELECT rt1.c0, rt1.c1 FROM rt1, vt0 GROUP BY rt1.c0, rt1.c1;
SELECT ALL * FROM t0, rt1;
SELECT * FROM t0, rt1 WHERE (((((((((-506486868)AND(rt1.c1)))OR(NULL)))AND(rt1.c1)))AND(t0.c2)) COLLATE NOCASE) ORDER BY (~ (ABS(t0.c2))) DESC  NULLS LAST, ((CASE WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c2 WHEN t0.c0 THEN t0.c2 ELSE t0.c0 END) BETWEEN (UNLIKELY(rt1.c1)) AND (((rt1.c0) NOTNULL))) DESC;
SELECT * FROM t0, rt1 WHERE ((NOT (((((((((-506486868)AND(rt1.c1)))OR(NULL)))AND(rt1.c1)))AND(t0.c2)) COLLATE NOCASE))) ORDER BY (~ (ABS(t0.c2))) DESC  NULLS LAST, ((CASE WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c2 WHEN t0.c0 THEN t0.c2 ELSE t0.c0 END) BETWEEN (UNLIKELY(rt1.c1)) AND (((rt1.c0) NOTNULL))) DESC;
SELECT ALL * FROM t0, rt1 WHERE (((((((((((-506486868)AND(rt1.c1)))OR(NULL)))AND(rt1.c1)))AND(t0.c2)) COLLATE NOCASE) ISNULL)) ORDER BY (~ (ABS(t0.c2))) DESC  NULLS LAST, ((CASE WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c2 WHEN t0.c0 THEN t0.c2 ELSE t0.c0 END) BETWEEN (UNLIKELY(rt1.c1)) AND (((rt1.c0) NOTNULL))) DESC;
SELECT ALL * FROM t0, rt1;
SELECT DISTINCT v0.c1, rt1.c2, v0.c2, t0.c0, v0.c0 FROM vt0, v0, t0, rt1;
SELECT DISTINCT v0.c1, rt1.c2, v0.c2, t0.c0, v0.c0 FROM vt0, v0, t0, rt1 WHERE ((((x'')) BETWEEN ((rt1.c0 COLLATE BINARY)) AND ((CAST(t0.c0 AS REAL))))) UNION SELECT DISTINCT v0.c1, rt1.c2, v0.c2, t0.c0, v0.c0 FROM vt0, v0, t0, rt1 WHERE ((NOT ((((x'')) BETWEEN ((rt1.c0 COLLATE BINARY)) AND ((CAST(t0.c0 AS REAL))))))) UNION SELECT DISTINCT v0.c1, rt1.c2, v0.c2, t0.c0, v0.c0 FROM vt0, v0, t0, rt1 WHERE ((((((x'')) BETWEEN ((rt1.c0 COLLATE BINARY)) AND ((CAST(t0.c0 AS REAL))))) ISNULL));
SELECT DISTINCT v0.c1, rt1.c2, v0.c2, t0.c0, v0.c0 FROM vt0, v0, t0, rt1;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE ((- ((- (vt0.c0))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT ((- ((- (vt0.c0))))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((((- ((- (vt0.c0))))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL t0.c2, v0.c0, v0.c1, t0.c1, rt1.c2, v0.c2, vt0.c0 FROM t0, vt0 CROSS JOIN v0 ON NULL COLLATE NOCASE INNER JOIN rt1 ON (((v0.c1)) BETWEEN ((t0.c1)) AND ((((((NULL)AND(v0.c1)))AND(rt1.c0))))) GROUP BY t0.c2, v0.c0, v0.c1, t0.c1, rt1.c2, v0.c2, vt0.c0;
SELECT ALL t0.c2, v0.c0, v0.c1, t0.c1, rt1.c2, v0.c2, vt0.c0 FROM t0, vt0 CROSS JOIN v0 ON NULL COLLATE NOCASE INNER JOIN rt1 ON (((v0.c1)) BETWEEN ((t0.c1)) AND ((((((NULL)AND(v0.c1)))AND(rt1.c0))))) GROUP BY t0.c2, v0.c0, v0.c1, t0.c1, rt1.c2, v0.c2, vt0.c0 HAVING ((CASE WHEN rt1.c2 THEN COUNT(*) END) NOT BETWEEN (SUM(MIN(AVG(TOTAL(rt1.c1))))) AND (AVG(rt1.c2))) UNION ALL SELECT ALL t0.c2, v0.c0, v0.c1, t0.c1, rt1.c2, v0.c2, vt0.c0 FROM t0, vt0 CROSS JOIN v0 ON NULL COLLATE NOCASE INNER JOIN rt1 ON (((v0.c1)) BETWEEN ((t0.c1)) AND ((((((NULL)AND(v0.c1)))AND(rt1.c0))))) GROUP BY t0.c2, v0.c0, v0.c1, t0.c1, rt1.c2, v0.c2, vt0.c0 HAVING (NOT (((CASE WHEN rt1.c2 THEN COUNT(*) END) NOT BETWEEN (SUM(MIN(AVG(TOTAL(rt1.c1))))) AND (AVG(rt1.c2))))) UNION ALL SELECT ALL t0.c2, v0.c0, v0.c1, t0.c1, rt1.c2, v0.c2, vt0.c0 FROM t0, vt0 CROSS JOIN v0 ON NULL COLLATE NOCASE INNER JOIN rt1 ON (((v0.c1)) BETWEEN ((t0.c1)) AND ((((((NULL)AND(v0.c1)))AND(rt1.c0))))) GROUP BY t0.c2, v0.c0, v0.c1, t0.c1, rt1.c2, v0.c2, vt0.c0 HAVING ((((CASE WHEN rt1.c2 THEN COUNT(*) END) NOT BETWEEN (SUM(MIN(AVG(TOTAL(rt1.c1))))) AND (AVG(rt1.c2)))) ISNULL);
SELECT ALL * FROM rt1;
SELECT * FROM rt1 WHERE (((((rt1.c2) BETWEEN (rt1.c2) AND ('-291778236'))) NOT BETWEEN (CHAR(rt1.c0)) AND (((((rt1.c0)AND('-1826280951')))AND(rt1.c2))))) UNION ALL SELECT ALL * FROM rt1 WHERE ((NOT (((((rt1.c2) BETWEEN (rt1.c2) AND ('-291778236'))) NOT BETWEEN (CHAR(rt1.c0)) AND (((((rt1.c0)AND('-1826280951')))AND(rt1.c2))))))) UNION ALL SELECT ALL * FROM rt1 WHERE (((((((rt1.c2) BETWEEN (rt1.c2) AND ('-291778236'))) NOT BETWEEN (CHAR(rt1.c0)) AND (((((rt1.c0)AND('-1826280951')))AND(rt1.c2))))) ISNULL));
SELECT ALL * FROM rt1;
SELECT DISTINCT * FROM vt0, t0, v0, rt1;
SELECT DISTINCT * FROM vt0, t0, v0, rt1 WHERE (((((((((((v0.c0)OR(t0.c0)))AND(v0.c2)))OR(0.27054804948667943)))AND(rt1.c2)))<=(((t0.c2) ISNULL)))) UNION SELECT DISTINCT * FROM vt0, t0, v0, rt1 WHERE ((NOT (((((((((((v0.c0)OR(t0.c0)))AND(v0.c2)))OR(0.27054804948667943)))AND(rt1.c2)))<=(((t0.c2) ISNULL)))))) UNION SELECT DISTINCT * FROM vt0, t0, v0, rt1 WHERE (((((((((((((v0.c0)OR(t0.c0)))AND(v0.c2)))OR(0.27054804948667943)))AND(rt1.c2)))<=(((t0.c2) ISNULL)))) ISNULL));
SELECT DISTINCT * FROM vt0, t0, v0, rt1;
SELECT ALL v0.c1, rt1.c1 FROM vt0, v0 LEFT OUTER JOIN rt1 ON (NOT (((0.34362365437833675) IS TRUE))) GROUP BY v0.c1, rt1.c1;
SELECT v0.c1, rt1.c1 FROM vt0, v0 LEFT OUTER JOIN rt1 ON (NOT (((0.34362365437833675) IS TRUE))) WHERE (vt0.c0) GROUP BY v0.c1, rt1.c1 UNION SELECT v0.c1, rt1.c1 FROM vt0, v0 LEFT OUTER JOIN rt1 ON (NOT (((0.34362365437833675) IS TRUE))) WHERE ((NOT (vt0.c0))) GROUP BY v0.c1, rt1.c1 UNION SELECT ALL v0.c1, rt1.c1 FROM vt0, v0 LEFT OUTER JOIN rt1 ON (NOT (((0.34362365437833675) IS TRUE))) WHERE (((vt0.c0) ISNULL)) GROUP BY v0.c1, rt1.c1;
SELECT ALL v0.c1, rt1.c1 FROM vt0, v0 LEFT OUTER JOIN rt1 ON (NOT (((0.34362365437833675) IS TRUE))) GROUP BY v0.c1, rt1.c1;
SELECT ALL v0.c0, v0.c2 FROM v0 GROUP BY v0.c0, v0.c2;
SELECT v0.c0, v0.c2 FROM v0 GROUP BY v0.c0, v0.c2 HAVING ((TOTAL(SUM(v0.c1))) NOT BETWEEN (AVG(v0.c0)) AND (SUM(GROUP_CONCAT(v0.c2)))) UNION ALL SELECT ALL v0.c0, v0.c2 FROM v0 GROUP BY v0.c0, v0.c2 HAVING (NOT (((TOTAL(SUM(v0.c1))) NOT BETWEEN (AVG(v0.c0)) AND (SUM(GROUP_CONCAT(v0.c2)))))) UNION ALL SELECT v0.c0, v0.c2 FROM v0 GROUP BY v0.c0, v0.c2 HAVING ((((TOTAL(SUM(v0.c1))) NOT BETWEEN (AVG(v0.c0)) AND (SUM(GROUP_CONCAT(v0.c2))))) ISNULL);
SELECT ALL rt1.c2, v0.c2, v0.c0, rt1.c0, v0.c1 FROM vt0 FULL OUTER JOIN rt1 ON ((((((v0.c1)AND(rt1.c1)))OR(NULL))) NOT BETWEEN (CAST(v0.c1 AS TEXT)) AND (((rt1.c0)<(vt0.c0)))) RIGHT OUTER JOIN v0 ON v0.c0 COLLATE BINARY;
SELECT DISTINCT vt0.c0, t0.c1, v0.c0, rt1.c2, t0.c2, rt1.c0, rt1.c1, t0.c0, v0.c1 FROM vt0, rt1, t0, v0;
SELECT DISTINCT vt0.c0, t0.c1, v0.c0, rt1.c2, t0.c2, rt1.c0, rt1.c1, t0.c0, v0.c1 FROM vt0, rt1, t0, v0 WHERE (v0.c2) UNION SELECT DISTINCT vt0.c0, t0.c1, v0.c0, rt1.c2, t0.c2, rt1.c0, rt1.c1, t0.c0, v0.c1 FROM vt0, rt1, t0, v0 WHERE ((NOT (v0.c2))) UNION SELECT DISTINCT vt0.c0, t0.c1, v0.c0, rt1.c2, t0.c2, rt1.c0, rt1.c1, t0.c0, v0.c1 FROM vt0, rt1, t0, v0 WHERE (((v0.c2) ISNULL));
SELECT DISTINCT vt0.c0, t0.c1, v0.c0, rt1.c2, t0.c2, rt1.c0, rt1.c1, t0.c0, v0.c1 FROM vt0, rt1, t0, v0;
SELECT ALL v0.c1, t0.c1, t0.c0, v0.c0 FROM v0, t0 GROUP BY v0.c1, t0.c1, t0.c0, v0.c0;
SELECT v0.c1, t0.c1, t0.c0, v0.c0 FROM v0, t0 WHERE ((((v0.c2 IN ())) NOT BETWEEN (((v0.c0)GLOB(t0.c2))) AND (CAST(v0.c0 AS TEXT)))) GROUP BY v0.c1, t0.c1, t0.c0, v0.c0 UNION SELECT ALL v0.c1, t0.c1, t0.c0, v0.c0 FROM v0, t0 WHERE ((NOT ((((v0.c2 IN ())) NOT BETWEEN (((v0.c0)GLOB(t0.c2))) AND (CAST(v0.c0 AS TEXT)))))) GROUP BY v0.c1, t0.c1, t0.c0, v0.c0 UNION SELECT ALL v0.c1, t0.c1, t0.c0, v0.c0 FROM v0, t0 WHERE ((((((v0.c2 IN ())) NOT BETWEEN (((v0.c0)GLOB(t0.c2))) AND (CAST(v0.c0 AS TEXT)))) ISNULL)) GROUP BY v0.c1, t0.c1, t0.c0, v0.c0;
SELECT ALL v0.c1, t0.c1, t0.c0, v0.c0 FROM v0, t0 GROUP BY v0.c1, t0.c1, t0.c0, v0.c0;
SELECT ALL rt1.c2, rt1.c1 FROM vt0 LEFT OUTER JOIN rt1 ON 0Xfffffffffe928f3c GROUP BY rt1.c2, rt1.c1;
SELECT ALL rt1.c2, rt1.c1 FROM vt0 LEFT OUTER JOIN rt1 ON 0xfffffffffe928f3c GROUP BY rt1.c2, rt1.c1 HAVING CAST(AVG(GROUP_CONCAT(rt1.c0)) AS REAL) UNION ALL SELECT ALL rt1.c2, rt1.c1 FROM vt0 LEFT OUTER JOIN rt1 ON 0xfffffffffe928f3c GROUP BY rt1.c2, rt1.c1 HAVING (NOT (CAST(AVG(GROUP_CONCAT(rt1.c0)) AS REAL))) UNION ALL SELECT rt1.c2, rt1.c1 FROM vt0 LEFT OUTER JOIN rt1 ON 0Xfffffffffe928f3c GROUP BY rt1.c2, rt1.c1 HAVING ((CAST(AVG(GROUP_CONCAT(rt1.c0)) AS REAL)) ISNULL);
SELECT vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE (((vt0.c0 COLLATE BINARY) NOT NULL)) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (((vt0.c0 COLLATE BINARY) NOT NULL)))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE (((((vt0.c0 COLLATE BINARY) NOT NULL)) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT * FROM vt0, rt1, v0, t0;
SELECT DISTINCT * FROM vt0, rt1, v0, t0 WHERE (((((rt1.c2) NOT BETWEEN (t0.c0) AND (v0.c1))) NOT BETWEEN ((x'' IN ())) AND (CASE WHEN x'' THEN rt1.c2 END))) UNION SELECT DISTINCT * FROM vt0, rt1, v0, t0 WHERE ((NOT (((((rt1.c2) NOT BETWEEN (t0.c0) AND (v0.c1))) NOT BETWEEN ((x'' IN ())) AND (CASE WHEN x'' THEN rt1.c2 END))))) UNION SELECT DISTINCT * FROM vt0, rt1, v0, t0 WHERE (((((((rt1.c2) NOT BETWEEN (t0.c0) AND (v0.c1))) NOT BETWEEN ((x'' IN ())) AND (CASE WHEN x'' THEN rt1.c2 END))) ISNULL));
SELECT DISTINCT * FROM vt0, rt1, v0, t0;
SELECT ALL v0.c2, rt1.c0, vt0.c0, t0.c2, t0.c0, v0.c1, v0.c0, t0.c1, rt1.c2, rt1.c1 FROM vt0, rt1, v0, t0 GROUP BY v0.c2, rt1.c0, vt0.c0, t0.c2, t0.c0, v0.c1, v0.c0, t0.c1, rt1.c2, rt1.c1;
SELECT v0.c2, rt1.c0, vt0.c0, t0.c2, t0.c0, v0.c1, v0.c0, t0.c1, rt1.c2, rt1.c1 FROM vt0, rt1, v0, t0 WHERE ((CASE WHEN rt1.c2 THEN v0.c0 ELSE t0.c0 END IN (((rt1.c0)<=(v0.c1))))) GROUP BY v0.c2, rt1.c0, vt0.c0, t0.c2, t0.c0, v0.c1, v0.c0, t0.c1, rt1.c2, rt1.c1 UNION SELECT v0.c2, rt1.c0, vt0.c0, t0.c2, t0.c0, v0.c1, v0.c0, t0.c1, rt1.c2, rt1.c1 FROM vt0, rt1, v0, t0 WHERE ((NOT ((CASE WHEN rt1.c2 THEN v0.c0 ELSE t0.c0 END IN (((rt1.c0)<=(v0.c1))))))) GROUP BY v0.c2, rt1.c0, vt0.c0, t0.c2, t0.c0, v0.c1, v0.c0, t0.c1, rt1.c2, rt1.c1 UNION SELECT ALL v0.c2, rt1.c0, vt0.c0, t0.c2, t0.c0, v0.c1, v0.c0, t0.c1, rt1.c2, rt1.c1 FROM vt0, rt1, v0 NOT INDEXED, t0 WHERE ((((CASE WHEN rt1.c2 THEN v0.c0 ELSE t0.c0 END IN (((rt1.c0)<=(v0.c1))))) ISNULL)) GROUP BY v0.c2, rt1.c0, vt0.c0, t0.c2, t0.c0, v0.c1, v0.c0, t0.c1, rt1.c2, rt1.c1;
SELECT ALL v0.c2, rt1.c0, vt0.c0, t0.c2, t0.c0, v0.c1, v0.c0, t0.c1, rt1.c2, rt1.c1 FROM vt0, rt1, v0, t0 GROUP BY v0.c2, rt1.c0, vt0.c0, t0.c2, t0.c0, v0.c1, v0.c0, t0.c1, rt1.c2, rt1.c1;
SELECT ALL v0.c1, vt0.c0, rt1.c1 FROM vt0, v0, rt1 GROUP BY v0.c1, vt0.c0, rt1.c1;
SELECT v0.c1, vt0.c0, rt1.c1 FROM vt0, v0, rt1 GROUP BY v0.c1, vt0.c0, rt1.c1 HAVING CASE WHEN TYPEOF(DISTINCT COUNT(*)) THEN CAST(rt1.c1 AS NUMERIC) END UNION ALL SELECT v0.c1, vt0.c0, rt1.c1 FROM vt0, v0, rt1 GROUP BY v0.c1, vt0.c0, rt1.c1 HAVING (NOT (CASE WHEN TYPEOF(DISTINCT COUNT(*)) THEN CAST(rt1.c1 AS NUMERIC) END)) UNION ALL SELECT ALL v0.c1, vt0.c0, rt1.c1 FROM vt0, v0, rt1 GROUP BY v0.c1, vt0.c0, rt1.c1 HAVING ((CASE WHEN TYPEOF(DISTINCT COUNT(*)) THEN CAST(rt1.c1 AS NUMERIC) END) ISNULL);
SELECT ALL v0.c1, vt0.c0, rt1.c1 FROM vt0, v0, rt1 GROUP BY v0.c1, vt0.c0, rt1.c1;
SELECT v0.c1, vt0.c0, rt1.c1 FROM vt0, v0, rt1 GROUP BY v0.c1, vt0.c0, rt1.c1 HAVING CASE WHEN TYPEOF(DISTINCT COUNT(*)) THEN CAST(rt1.c1 AS NUMERIC) END UNION ALL SELECT v0.c1, vt0.c0, rt1.c1 FROM vt0, v0, rt1 GROUP BY v0.c1, vt0.c0, rt1.c1 HAVING (NOT (CASE WHEN TYPEOF(DISTINCT COUNT(*)) THEN CAST(rt1.c1 AS NUMERIC) END)) UNION ALL SELECT ALL v0.c1, vt0.c0, rt1.c1 FROM vt0, v0, rt1 GROUP BY v0.c1, vt0.c0, rt1.c1 HAVING ((CASE WHEN TYPEOF(DISTINCT COUNT(*)) THEN CAST(rt1.c1 AS NUMERIC) END) ISNULL);
SELECT ALL v0.c1, vt0.c0, rt1.c1 FROM vt0, v0, rt1 GROUP BY v0.c1, vt0.c0, rt1.c1;
SELECT * FROM rt1;
SELECT ALL * FROM rt1 WHERE (CAST((((rt1.c1, 0.038724017160967406, rt1.c2))<>((rt1.c0, rt1.c0, rt1.c0))) AS REAL)) UNION ALL SELECT * FROM rt1 WHERE ((NOT (CAST((((rt1.c1, 0.038724017160967406, rt1.c2))<>((rt1.c0, rt1.c0, rt1.c0))) AS REAL)))) UNION ALL SELECT ALL * FROM rt1 WHERE (((CAST((((rt1.c1, 0.038724017160967406, rt1.c2))!=((rt1.c0, rt1.c0, rt1.c0))) AS REAL)) ISNULL));
SELECT * FROM rt1;
SELECT DISTINCT t0.c0, rt1.c1, v0.c2, rt1.c0, v0.c1, vt0.c0, v0.c0, t0.c1, t0.c2 FROM rt1, vt0, t0, v0;
SELECT DISTINCT t0.c0, rt1.c1, v0.c2, rt1.c0, v0.c1, vt0.c0, v0.c0, t0.c1, t0.c2 FROM rt1, vt0, t0, v0 WHERE (v0.c0) UNION SELECT DISTINCT t0.c0, rt1.c1, v0.c2, rt1.c0, v0.c1, vt0.c0, v0.c0, t0.c1, t0.c2 FROM rt1, vt0, t0, v0 WHERE ((NOT (v0.c0))) UNION SELECT DISTINCT t0.c0, rt1.c1, v0.c2, rt1.c0, v0.c1, vt0.c0, v0.c0, t0.c1, t0.c2 FROM rt1, vt0, t0, v0 WHERE (((v0.c0) ISNULL));
SELECT DISTINCT t0.c0, rt1.c1, v0.c2, rt1.c0, v0.c1, vt0.c0, v0.c0, t0.c1, t0.c2 FROM rt1, vt0, t0, v0;
SELECT ALL t0.c0, t0.c1, rt1.c2, v0.c1, v0.c0, vt0.c0 FROM rt1 INNER JOIN t0 ON ((NULL)AND(t0.c2 COLLATE BINARY)) RIGHT OUTER JOIN vt0 ON (t0.c2 IN ()) RIGHT OUTER JOIN v0 ON (- ((((v0.c0)) BETWEEN ((t0.c0)) AND ((rt1.c2))))) GROUP BY t0.c0, t0.c1, rt1.c2, v0.c1, v0.c0, vt0.c0;
SELECT ALL t0.c0, t0.c1, rt1.c2, v0.c1, v0.c0, vt0.c0 FROM rt1 INNER JOIN t0 ON ((NULL)AND(t0.c2 COLLATE BINARY)) RIGHT OUTER JOIN vt0 ON (t0.c2 IN ()) RIGHT OUTER JOIN v0 ON (- ((((v0.c0)) BETWEEN ((t0.c0)) AND ((rt1.c2))))) WHERE ((- ((v0.c1 IN ())))) GROUP BY t0.c0, t0.c1, rt1.c2, v0.c1, v0.c0, vt0.c0 UNION SELECT t0.c0, t0.c1, rt1.c2, v0.c1, v0.c0, vt0.c0 FROM rt1 INNER JOIN t0 ON ((NULL)AND(t0.c2 COLLATE BINARY)) RIGHT OUTER JOIN vt0 ON (t0.c2 IN ()) RIGHT OUTER JOIN v0 ON (- ((((v0.c0)) BETWEEN ((t0.c0)) AND ((rt1.c2))))) WHERE ((NOT ((- ((v0.c1 IN ())))))) GROUP BY t0.c0, t0.c1, rt1.c2, v0.c1, v0.c0, vt0.c0 UNION SELECT ALL t0.c0, t0.c1, rt1.c2, v0.c1, v0.c0, vt0.c0 FROM rt1 INNER JOIN t0 ON ((NULL)AND(t0.c2 COLLATE BINARY)) RIGHT OUTER JOIN vt0 ON (t0.c2 IN ()) RIGHT OUTER JOIN v0 ON (- ((((v0.c0)) BETWEEN ((t0.c0)) AND ((rt1.c2))))) WHERE ((((- ((v0.c1 IN ())))) ISNULL)) GROUP BY t0.c0, t0.c1, rt1.c2, v0.c1, v0.c0, vt0.c0;
SELECT ALL t0.c0, t0.c1, rt1.c2, v0.c1, v0.c0, vt0.c0 FROM rt1 INNER JOIN t0 ON ((NULL)AND(t0.c2 COLLATE BINARY)) RIGHT OUTER JOIN vt0 ON (t0.c2 IN ()) RIGHT OUTER JOIN v0 ON (- ((((v0.c0)) BETWEEN ((t0.c0)) AND ((rt1.c2))))) GROUP BY t0.c0, t0.c1, rt1.c2, v0.c1, v0.c0, vt0.c0;
SELECT ALL v0.c1 FROM vt0, v0 GROUP BY v0.c1;
SELECT ALL v0.c1 FROM vt0, v0 GROUP BY v0.c1 HAVING TOTAL(0.8327926582673516) UNION ALL SELECT v0.c1 FROM vt0, v0 GROUP BY v0.c1 HAVING (NOT (TOTAL(0.8327926582673516))) UNION ALL SELECT ALL v0.c1 FROM vt0, v0 GROUP BY v0.c1 HAVING ((TOTAL(0.8327926582673516)) ISNULL);
SELECT ALL v0.c1 FROM vt0, v0 GROUP BY v0.c1;
SELECT ALL v0.c1 FROM vt0, v0 GROUP BY v0.c1 HAVING TOTAL(0.8327926582673516) UNION ALL SELECT v0.c1 FROM vt0, v0 GROUP BY v0.c1 HAVING (NOT (TOTAL(0.8327926582673516))) UNION ALL SELECT ALL v0.c1 FROM vt0, v0 GROUP BY v0.c1 HAVING ((TOTAL(0.8327926582673516)) ISNULL);
SELECT ALL v0.c1 FROM vt0, v0 GROUP BY v0.c1;
SELECT ALL v0.c1, rt1.c0, vt0.c0 FROM v0, rt1, vt0 CROSS JOIN t0 ON CAST((((t0.c0)) NOT BETWEEN ((v0.c2)) AND ((t0.c0))) AS BLOB);
SELECT ALL v0.c1, rt1.c0, vt0.c0 FROM v0, rt1, vt0 CROSS JOIN t0 ON CAST((((t0.c0)) NOT BETWEEN ((v0.c2)) AND ((t0.c0))) AS BLOB) WHERE ((((((rt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((t0.c0))))<=(x'8e9e'))) UNION ALL SELECT v0.c1, rt1.c0, vt0.c0 FROM v0, rt1, vt0 CROSS JOIN t0 ON CAST((((t0.c0)) NOT BETWEEN ((v0.c2)) AND ((t0.c0))) AS BLOB) WHERE ((NOT ((((((rt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((t0.c0))))<=(x'8e9e'))))) UNION ALL SELECT ALL v0.c1, rt1.c0, vt0.c0 FROM v0, rt1, vt0 CROSS JOIN t0 ON CAST((((t0.c0)) NOT BETWEEN ((v0.c2)) AND ((t0.c0))) AS BLOB) WHERE ((((((((rt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((t0.c0))))<=(x'8e9e'))) ISNULL));
SELECT ALL v0.c1, rt1.c0, vt0.c0 FROM v0, rt1, vt0 CROSS JOIN t0 ON CAST((((t0.c0)) NOT BETWEEN ((v0.c2)) AND ((t0.c0))) AS BLOB);
SELECT DISTINCT * FROM rt1 CROSS JOIN vt0 ON 1.073874823E9 COLLATE BINARY INNER JOIN v0 ON STRFTIME((+ (rt1.c0)), ((((vt0.c0)OR(vt0.c0)))AND(v0.c1)), ((v0.c2)%(rt1.c1)), UPPER(vt0.c0), (- (rt1.c0)));
SELECT DISTINCT * FROM rt1 CROSS JOIN vt0 ON 1.073874823E9 COLLATE BINARY INNER JOIN v0 ON STRFTIME((+ (rt1.c0)), ((((vt0.c0)OR(vt0.c0)))AND(v0.c1)), ((v0.c2)%(rt1.c1)), UPPER(vt0.c0), (- (rt1.c0))) WHERE ((((((((v0.c1))>((rt1.c1))))AND(((rt1.c1) BETWEEN (rt1.c1) AND ('.2V')))))AND((((v0.c1, v0.c2, v0.c0, v0.c0, '-688873546'))<=((rt1.c1, v0.c1, rt1.c0, rt1.c2, 'gV')))))) UNION SELECT DISTINCT * FROM rt1 CROSS JOIN vt0 ON 1.073874823E9 COLLATE BINARY INNER JOIN v0 ON STRFTIME((+ (rt1.c0)), ((((vt0.c0)OR(vt0.c0)))AND(v0.c1)), ((v0.c2)%(rt1.c1)), UPPER(vt0.c0), (- (rt1.c0))) WHERE ((NOT ((((((((v0.c1))>((rt1.c1))))AND(((rt1.c1) BETWEEN (rt1.c1) AND ('.2V')))))AND((((v0.c1, v0.c2, v0.c0, v0.c0, '-688873546'))<=((rt1.c1, v0.c1, rt1.c0, rt1.c2, 'gV')))))))) UNION SELECT DISTINCT * FROM rt1 CROSS JOIN vt0 ON 1.073874823E9 COLLATE BINARY INNER JOIN v0 ON STRFTIME((+ (rt1.c0)), ((((vt0.c0)OR(vt0.c0)))AND(v0.c1)), ((v0.c2)%(rt1.c1)), UPPER(vt0.c0), (- (rt1.c0))) WHERE ((((((((((v0.c1))>((rt1.c1))))AND(((rt1.c1) BETWEEN (rt1.c1) AND ('.2V')))))AND((((v0.c1, v0.c2, v0.c0, v0.c0, '-688873546'))<=((rt1.c1, v0.c1, rt1.c0, rt1.c2, 'gV')))))) ISNULL));
SELECT DISTINCT * FROM rt1 CROSS JOIN vt0 ON 1.073874823E9 COLLATE BINARY INNER JOIN v0 ON STRFTIME((+ (rt1.c0)), ((((vt0.c0)OR(vt0.c0)))AND(v0.c1)), ((v0.c2)%(rt1.c1)), UPPER(vt0.c0), (- (rt1.c0)));
SELECT rt1.c0, t0.c0 FROM t0 RIGHT OUTER JOIN rt1 ON ((t0.c0)==((((t0.c2, t0.c1, t0.c2)) BETWEEN ((rt1.c1, x'', rt1.c0)) AND ((rt1.c1, t0.c2, 0.9897698236489898))))) GROUP BY rt1.c0, t0.c0;
SELECT rt1.c0, t0.c0 FROM t0 RIGHT OUTER JOIN rt1 ON ((t0.c0)==((((t0.c2, t0.c1, t0.c2)) BETWEEN ((rt1.c1, x'', rt1.c0)) AND ((rt1.c1, t0.c2, 0.9897698236489898))))) WHERE (STRFTIME((~ (0x9bebba9)), CAST(t0.c1 AS INTEGER), (((rt1.c1, t0.c2, t0.c1)) BETWEEN ((t0.c1, t0.c0, NULL)) AND ((rt1.c1, t0.c1, rt1.c1))))) GROUP BY rt1.c0, t0.c0 UNION SELECT rt1.c0, t0.c0 FROM t0 RIGHT OUTER JOIN rt1 ON ((t0.c0)=((((t0.c2, t0.c1, t0.c2)) BETWEEN ((rt1.c1, x'', rt1.c0)) AND ((rt1.c1, t0.c2, 0.9897698236489898))))) WHERE ((NOT (STRFTIME((~ (0X9bebba9)), CAST(t0.c1 AS INTEGER), (((rt1.c1, t0.c2, t0.c1)) BETWEEN ((t0.c1, t0.c0, NULL)) AND ((rt1.c1, t0.c1, rt1.c1))))))) GROUP BY rt1.c0, t0.c0 UNION SELECT rt1.c0, t0.c0 FROM t0 RIGHT OUTER JOIN rt1 ON ((t0.c0)=((((t0.c2, t0.c1, t0.c2)) BETWEEN ((rt1.c1, x'', rt1.c0)) AND ((rt1.c1, t0.c2, 0.9897698236489898))))) WHERE (((STRFTIME((~ (0X9bebba9)), CAST(t0.c1 AS INTEGER), (((rt1.c1, t0.c2, t0.c1)) BETWEEN ((t0.c1, t0.c0, NULL)) AND ((rt1.c1, t0.c1, rt1.c1))))) ISNULL)) GROUP BY rt1.c0, t0.c0;
SELECT rt1.c0, t0.c0 FROM t0 RIGHT OUTER JOIN rt1 ON ((t0.c0)==((((t0.c2, t0.c1, t0.c2)) BETWEEN ((rt1.c1, x'', rt1.c0)) AND ((rt1.c1, t0.c2, 0.9897698236489898))))) GROUP BY rt1.c0, t0.c0;
SELECT ALL t0.c0, t0.c1, t0.c2 FROM t0 GROUP BY t0.c0, t0.c1, t0.c2;
SELECT t0.c0, t0.c1, t0.c2 FROM t0 GROUP BY t0.c0, t0.c1, t0.c2 HAVING MAX(MAX(TOTAL(COUNT(*)))) UNION ALL SELECT t0.c0, t0.c1, t0.c2 FROM t0 GROUP BY t0.c0, t0.c1, t0.c2 HAVING (NOT (MAX(MAX(TOTAL(COUNT(*)))))) UNION ALL SELECT ALL t0.c0, t0.c1, t0.c2 FROM t0 GROUP BY t0.c0, t0.c1, t0.c2 HAVING ((MAX(MAX(TOTAL(COUNT(*))))) ISNULL);
SELECT ALL * FROM vt0, rt1;
SELECT * FROM vt0, rt1 WHERE (vt0.c0) UNION ALL SELECT * FROM vt0, rt1 WHERE ((NOT (vt0.c0))) UNION ALL SELECT * FROM vt0, rt1 WHERE (((vt0.c0) ISNULL));
SELECT ALL * FROM vt0, rt1;
SELECT DISTINCT v0.c2, t0.c0, rt1.c1, v0.c0, t0.c2, rt1.c0, vt0.c0 FROM rt1, v0, t0 CROSS JOIN vt0 ON ((vt0.c0 IN ()) IN ());
SELECT DISTINCT v0.c2, t0.c0, rt1.c1, v0.c0, t0.c2, rt1.c0, vt0.c0 FROM rt1, v0, t0 CROSS JOIN vt0 ON ((vt0.c0 IN ()) IN ()) WHERE (((RTRIM('-2111228640')) NOT BETWEEN ((((t0.c1))<((v0.c1)))) AND ((((t0.c0)) BETWEEN ((rt1.c0)) AND ((v0.c2)))))) UNION SELECT DISTINCT v0.c2, t0.c0, rt1.c1, v0.c0, t0.c2, rt1.c0, vt0.c0 FROM rt1, v0, t0 CROSS JOIN vt0 ON ((vt0.c0 IN ()) IN ()) WHERE ((NOT (((RTRIM('-2111228640')) NOT BETWEEN ((((t0.c1))<((v0.c1)))) AND ((((t0.c0)) BETWEEN ((rt1.c0)) AND ((v0.c2)))))))) UNION SELECT DISTINCT v0.c2, t0.c0, rt1.c1, v0.c0, t0.c2, rt1.c0, vt0.c0 FROM rt1, v0, t0 CROSS JOIN vt0 ON ((vt0.c0 IN ()) IN ()) WHERE (((((RTRIM('-2111228640')) NOT BETWEEN ((((t0.c1))<((v0.c1)))) AND ((((t0.c0)) BETWEEN ((rt1.c0)) AND ((v0.c2)))))) ISNULL));
SELECT DISTINCT v0.c2, t0.c0, rt1.c1, v0.c0, t0.c2, rt1.c0, vt0.c0 FROM rt1, v0, t0 CROSS JOIN vt0 ON ((vt0.c0 IN ()) IN ());
SELECT v0.c1, v0.c0, t0.c0 FROM rt1, t0, v0 GROUP BY v0.c1, v0.c0, t0.c0;
SELECT v0.c1, v0.c0, t0.c0 FROM rt1, t0, v0 WHERE ((((rt1.c0 IN ())) ISNULL)) GROUP BY v0.c1, v0.c0, t0.c0 UNION SELECT v0.c1, v0.c0, t0.c0 FROM rt1, t0, v0 WHERE ((NOT ((((rt1.c0 IN ())) ISNULL)))) GROUP BY v0.c1, v0.c0, t0.c0 UNION SELECT v0.c1, v0.c0, t0.c0 FROM rt1, t0, v0 WHERE ((((((rt1.c0 IN ())) ISNULL)) ISNULL)) GROUP BY v0.c1, v0.c0, t0.c0;
SELECT v0.c1, v0.c0, t0.c0 FROM rt1, t0, v0 GROUP BY v0.c1, v0.c0, t0.c0;
SELECT ALL t0.c2, t0.c0, v0.c0, vt0.c0 FROM vt0, v0, t0 GROUP BY t0.c2, t0.c0, v0.c0, vt0.c0;
SELECT ALL t0.c2, t0.c0, v0.c0, vt0.c0 FROM vt0, v0, t0 GROUP BY t0.c2, t0.c0, v0.c0, vt0.c0 HAVING CASE WHEN 0xffffffffcee31d88 THEN SUM(SUM(v0.c1)) END COLLATE RTRIM UNION ALL SELECT ALL t0.c2, t0.c0, v0.c0, vt0.c0 FROM vt0, v0, t0 GROUP BY t0.c2, t0.c0, v0.c0, vt0.c0 HAVING (NOT (CASE WHEN 0Xffffffffcee31d88 THEN SUM(SUM(v0.c1)) END COLLATE RTRIM)) UNION ALL SELECT t0.c2, t0.c0, v0.c0, vt0.c0 FROM vt0, v0, t0 GROUP BY t0.c2, t0.c0, v0.c0, vt0.c0 HAVING ((CASE WHEN 0xffffffffcee31d88 THEN SUM(SUM(v0.c1)) END COLLATE RTRIM) ISNULL);
SELECT v0.c1 FROM v0;
SELECT ALL v0.c1 FROM v0 WHERE (-1e500) UNION ALL SELECT ALL v0.c1 FROM v0 WHERE ((NOT (-1e500))) UNION ALL SELECT ALL v0.c1 FROM v0 WHERE (((-1e500) ISNULL));
SELECT v0.c1 FROM v0;
SELECT DISTINCT * FROM v0, t0;
SELECT DISTINCT * FROM v0, t0 WHERE (((((v0.c2)||(t0.c0)))>=(MIN(t0.c0, v0.c1)))) UNION SELECT DISTINCT * FROM v0, t0 WHERE ((NOT (((((v0.c2)||(t0.c0)))>=(MIN(t0.c0, v0.c1)))))) UNION SELECT DISTINCT * FROM v0, t0 WHERE (((((((v0.c2)||(t0.c0)))>=(MIN(t0.c0, v0.c1)))) ISNULL));
SELECT DISTINCT * FROM v0, t0;
SELECT vt0.c0 FROM vt0, v0, t0, rt1 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, v0, t0, rt1 WHERE ((((rt1.c2, v0.c0, rt1.c2))>=((t0.c1, '1493338649', 0.3272450820810243))) COLLATE RTRIM) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0, v0, t0, rt1 WHERE ((NOT ((((rt1.c2, v0.c0, rt1.c2))>=((t0.c1, '1493338649', 0.3272450820810243))) COLLATE RTRIM))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0, v0, t0, rt1 WHERE ((((((rt1.c2, v0.c0, rt1.c2))>=((t0.c1, '1493338649', 0.3272450820810243))) COLLATE RTRIM) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0, v0, t0, rt1 GROUP BY vt0.c0;
SELECT ALL v0.c2, t0.c2 FROM v0, vt0, rt1, t0 GROUP BY v0.c2, t0.c2;
SELECT v0.c2, t0.c2 FROM v0, vt0, rt1, t0 GROUP BY v0.c2, t0.c2 HAVING SUM(((vt0.c0) ISNULL)) UNION ALL SELECT v0.c2, t0.c2 FROM v0, vt0, rt1, t0 GROUP BY v0.c2, t0.c2 HAVING (NOT (SUM(((vt0.c0) ISNULL)))) UNION ALL SELECT ALL v0.c2, t0.c2 FROM v0, vt0, rt1, t0 GROUP BY v0.c2, t0.c2 HAVING ((SUM(((vt0.c0) ISNULL))) ISNULL);
SELECT ALL v0.c2, t0.c2 FROM v0, vt0, rt1, t0 GROUP BY v0.c2, t0.c2;
SELECT v0.c2, t0.c2 FROM v0, vt0, rt1, t0 GROUP BY v0.c2, t0.c2 HAVING SUM(((vt0.c0) ISNULL)) UNION ALL SELECT v0.c2, t0.c2 FROM v0, vt0, rt1, t0 GROUP BY v0.c2, t0.c2 HAVING (NOT (SUM(((vt0.c0) ISNULL)))) UNION ALL SELECT ALL v0.c2, t0.c2 FROM v0, vt0, rt1, t0 GROUP BY v0.c2, t0.c2 HAVING ((SUM(((vt0.c0) ISNULL))) ISNULL);
SELECT ALL v0.c2, t0.c2 FROM v0, vt0, rt1, t0 GROUP BY v0.c2, t0.c2;
SELECT ALL * FROM v0, vt0, t0, rt1;
SELECT * FROM v0, vt0, t0, rt1 WHERE (CAST(1e500 AS REAL) COLLATE RTRIM) UNION ALL SELECT ALL * FROM v0, vt0, t0, rt1 WHERE ((NOT (CAST(1e500 AS REAL) COLLATE RTRIM))) UNION ALL SELECT ALL * FROM v0, vt0, t0, rt1 WHERE (((CAST(1e500 AS REAL) COLLATE RTRIM) ISNULL));
SELECT ALL * FROM v0, vt0, t0, rt1;
SELECT DISTINCT * FROM vt0, v0 NATURAL JOIN t0;
SELECT DISTINCT * FROM vt0, v0 NATURAL JOIN t0 WHERE (((((t0.c0)%(v0.c0))) NOTNULL)) UNION SELECT DISTINCT * FROM vt0, v0 NATURAL JOIN t0 WHERE ((NOT (((((t0.c0)%(v0.c0))) NOTNULL)))) UNION SELECT DISTINCT * FROM vt0, v0 NATURAL JOIN t0 WHERE (((((((t0.c0)%(v0.c0))) NOTNULL)) ISNULL));
SELECT DISTINCT * FROM vt0, v0 NATURAL JOIN t0;
SELECT ALL t0.c2, t0.c0, vt0.c0, t0.c1 FROM vt0, t0 GROUP BY t0.c2, t0.c0, vt0.c0, t0.c1;
SELECT t0.c2, t0.c0, vt0.c0, t0.c1 FROM vt0, t0 WHERE (((((t0.c2) NOT BETWEEN (vt0.c0) AND (t0.c0))) NOTNULL)) GROUP BY t0.c2, t0.c0, vt0.c0, t0.c1 UNION SELECT ALL t0.c2, t0.c0, vt0.c0, t0.c1 FROM vt0, t0 WHERE ((NOT (((((t0.c2) NOT BETWEEN (vt0.c0) AND (t0.c0))) NOTNULL)))) GROUP BY t0.c2, t0.c0, vt0.c0, t0.c1 UNION SELECT ALL t0.c2, t0.c0, vt0.c0, t0.c1 FROM vt0, t0 NOT INDEXED WHERE (((((((t0.c2) NOT BETWEEN (vt0.c0) AND (t0.c0))) NOTNULL)) ISNULL)) GROUP BY t0.c2, t0.c0, vt0.c0, t0.c1;
SELECT ALL t0.c2, t0.c0, vt0.c0, t0.c1 FROM vt0, t0 GROUP BY t0.c2, t0.c0, vt0.c0, t0.c1;
SELECT ALL v0.c0, t0.c0, v0.c1, rt1.c2, rt1.c1 FROM t0, v0, rt1 GROUP BY v0.c0, t0.c0, v0.c1, rt1.c2, rt1.c1;
SELECT v0.c0, t0.c0, v0.c1, rt1.c2, rt1.c1 FROM t0, v0, rt1 GROUP BY v0.c0, t0.c0, v0.c1, rt1.c2, rt1.c1 HAVING (CAST(SUM(TOTAL(-1.694775175E9)) AS NUMERIC) IN ()) UNION ALL SELECT ALL v0.c0, t0.c0, v0.c1, rt1.c2, rt1.c1 FROM t0, v0, rt1 GROUP BY v0.c0, t0.c0, v0.c1, rt1.c2, rt1.c1 HAVING (NOT ((CAST(SUM(TOTAL(-1.694775175E9)) AS NUMERIC) IN ()))) UNION ALL SELECT v0.c0, t0.c0, v0.c1, rt1.c2, rt1.c1 FROM t0, v0, rt1 GROUP BY v0.c0, t0.c0, v0.c1, rt1.c2, rt1.c1 HAVING (((CAST(SUM(TOTAL(-1.694775175E9)) AS NUMERIC) IN ())) ISNULL);
SELECT ALL v0.c0, t0.c0, v0.c1, rt1.c2, rt1.c1 FROM t0, v0, rt1 GROUP BY v0.c0, t0.c0, v0.c1, rt1.c2, rt1.c1;
SELECT v0.c0, t0.c0, v0.c1, rt1.c2, rt1.c1 FROM t0, v0, rt1 GROUP BY v0.c0, t0.c0, v0.c1, rt1.c2, rt1.c1 HAVING (CAST(SUM(TOTAL(-1.694775175E9)) AS NUMERIC) IN ()) UNION ALL SELECT ALL v0.c0, t0.c0, v0.c1, rt1.c2, rt1.c1 FROM t0, v0, rt1 GROUP BY v0.c0, t0.c0, v0.c1, rt1.c2, rt1.c1 HAVING (NOT ((CAST(SUM(TOTAL(-1.694775175E9)) AS NUMERIC) IN ()))) UNION ALL SELECT v0.c0, t0.c0, v0.c1, rt1.c2, rt1.c1 FROM t0, v0, rt1 GROUP BY v0.c0, t0.c0, v0.c1, rt1.c2, rt1.c1 HAVING (((CAST(SUM(TOTAL(-1.694775175E9)) AS NUMERIC) IN ())) ISNULL);
SELECT ALL v0.c0, t0.c0, v0.c1, rt1.c2, rt1.c1 FROM t0, v0, rt1 GROUP BY v0.c0, t0.c0, v0.c1, rt1.c2, rt1.c1;
SELECT ALL v0.c2, t0.c0, v0.c0, t0.c2, rt1.c0, rt1.c1, rt1.c2, v0.c1, t0.c1 FROM vt0, rt1, t0, v0;
SELECT v0.c2, t0.c0, v0.c0, t0.c2, rt1.c0, rt1.c1, rt1.c2, v0.c1, t0.c1 FROM vt0, rt1, t0, v0 WHERE ((rt1.c0 IN ())) UNION ALL SELECT ALL v0.c2, t0.c0, v0.c0, t0.c2, rt1.c0, rt1.c1, rt1.c2, v0.c1, t0.c1 FROM vt0, rt1, t0, v0 WHERE ((NOT ((rt1.c0 IN ())))) UNION ALL SELECT ALL v0.c2, t0.c0, v0.c0, t0.c2, rt1.c0, rt1.c1, rt1.c2, v0.c1, t0.c1 FROM vt0, rt1, t0, v0 WHERE ((((rt1.c0 IN ())) ISNULL));
SELECT ALL v0.c2, t0.c0, v0.c0, t0.c2, rt1.c0, rt1.c1, rt1.c2, v0.c1, t0.c1 FROM vt0, rt1, t0, v0;
SELECT DISTINCT v0.c0, v0.c1 FROM v0;
SELECT DISTINCT v0.c0, v0.c1 FROM v0 WHERE ((~ (((v0.c1) BETWEEN (v0.c1) AND (v0.c2))))) UNION SELECT DISTINCT v0.c0, v0.c1 FROM v0 WHERE ((NOT ((~ (((v0.c1) BETWEEN (v0.c1) AND (v0.c2))))))) UNION SELECT DISTINCT v0.c0, v0.c1 FROM v0 WHERE ((((~ (((v0.c1) BETWEEN (v0.c1) AND (v0.c2))))) ISNULL));
SELECT DISTINCT v0.c0, v0.c1 FROM v0;
SELECT ALL rt1.c2, t0.c2, v0.c0, t0.c0, vt0.c0, v0.c2, v0.c1, rt1.c0 FROM v0, vt0, t0, rt1 GROUP BY rt1.c2, t0.c2, v0.c0, t0.c0, vt0.c0, v0.c2, v0.c1, rt1.c0;
SELECT rt1.c2, t0.c2, v0.c0, t0.c0, vt0.c0, v0.c2, v0.c1, rt1.c0 FROM v0, vt0, t0, rt1 WHERE (((((((v0.c0)AND(-1187148625)))OR(t0.c2))) NOT BETWEEN ('-1121397517') AND ((v0.c1 IN ())))) GROUP BY rt1.c2, t0.c2, v0.c0, t0.c0, vt0.c0, v0.c2, v0.c1, rt1.c0 UNION SELECT rt1.c2, t0.c2, v0.c0, t0.c0, vt0.c0, v0.c2, v0.c1, rt1.c0 FROM v0, vt0, t0, rt1 WHERE ((NOT (((((((v0.c0)AND(-1187148625)))OR(t0.c2))) NOT BETWEEN ('-1121397517') AND ((v0.c1 IN ())))))) GROUP BY rt1.c2, t0.c2, v0.c0, t0.c0, vt0.c0, v0.c2, v0.c1, rt1.c0 UNION SELECT rt1.c2, t0.c2, v0.c0, t0.c0, vt0.c0, v0.c2, v0.c1, rt1.c0 FROM v0, vt0, t0, rt1 WHERE (((((((((v0.c0)AND(-1187148625)))OR(t0.c2))) NOT BETWEEN ('-1121397517') AND ((v0.c1 IN ())))) ISNULL)) GROUP BY rt1.c2, t0.c2, v0.c0, t0.c0, vt0.c0, v0.c2, v0.c1, rt1.c0;
SELECT ALL rt1.c2, t0.c2, v0.c0, t0.c0, vt0.c0, v0.c2, v0.c1, rt1.c0 FROM v0, vt0, t0, rt1 GROUP BY rt1.c2, t0.c2, v0.c0, t0.c0, vt0.c0, v0.c2, v0.c1, rt1.c0;
SELECT ALL t0.c2, v0.c2, v0.c1, rt1.c2 FROM rt1, t0, v0 GROUP BY t0.c2, v0.c2, v0.c1, rt1.c2;
SELECT t0.c2, v0.c2, v0.c1, rt1.c2 FROM rt1, t0, v0 GROUP BY t0.c2, v0.c2, v0.c1, rt1.c2 HAVING (((~ (-656390157)))|(AVG(rt1.c0))) UNION ALL SELECT t0.c2, v0.c2, v0.c1, rt1.c2 FROM rt1, t0, v0 GROUP BY t0.c2, v0.c2, v0.c1, rt1.c2 HAVING (NOT ((((~ (-656390157)))|(AVG(rt1.c0))))) UNION ALL SELECT ALL t0.c2, v0.c2, v0.c1, rt1.c2 FROM rt1, t0, v0 GROUP BY t0.c2, v0.c2, v0.c1, rt1.c2 HAVING (((((~ (-656390157)))|(AVG(rt1.c0)))) ISNULL);
SELECT ALL t0.c2, v0.c2, v0.c1, rt1.c2 FROM rt1, t0, v0 GROUP BY t0.c2, v0.c2, v0.c1, rt1.c2;
SELECT t0.c2, v0.c2, v0.c1, rt1.c2 FROM rt1, t0, v0 GROUP BY t0.c2, v0.c2, v0.c1, rt1.c2 HAVING (((~ (-656390157)))|(AVG(rt1.c0))) UNION ALL SELECT t0.c2, v0.c2, v0.c1, rt1.c2 FROM rt1, t0, v0 GROUP BY t0.c2, v0.c2, v0.c1, rt1.c2 HAVING (NOT ((((~ (-656390157)))|(AVG(rt1.c0))))) UNION ALL SELECT ALL t0.c2, v0.c2, v0.c1, rt1.c2 FROM rt1, t0, v0 GROUP BY t0.c2, v0.c2, v0.c1, rt1.c2 HAVING (((((~ (-656390157)))|(AVG(rt1.c0)))) ISNULL);
SELECT ALL t0.c2, v0.c2, v0.c1, rt1.c2 FROM rt1, t0, v0 GROUP BY t0.c2, v0.c2, v0.c1, rt1.c2;
SELECT MIN(((((CASE t0.c1  WHEN t0.c1 THEN t0.c1 END)OR((NOT (t0.c0)))))OR(t0.c0))) FROM t0 ORDER BY CASE NULL  WHEN (- (t0.c2)) THEN TRIM(t0.c1, t0.c1) ELSE CAST(t0.c2 AS REAL) END ASC;
SELECT * FROM vt0, v0;
SELECT * FROM vt0, v0 WHERE (((NULLIF(DISTINCT vt0.c0, ''))IS(CASE WHEN v0.c2 THEN v0.c1 ELSE v0.c2 END))) UNION ALL SELECT ALL * FROM vt0, v0 WHERE ((NOT (((NULLIF(DISTINCT vt0.c0, ''))IS(CASE WHEN v0.c2 THEN v0.c1 ELSE v0.c2 END))))) UNION ALL SELECT * FROM vt0, v0 WHERE (((((NULLIF(DISTINCT vt0.c0, ''))IS(CASE WHEN v0.c2 THEN v0.c1 ELSE v0.c2 END))) ISNULL));
SELECT * FROM vt0, v0;
SELECT DISTINCT * FROM v0, rt1;
SELECT DISTINCT * FROM v0, rt1 WHERE (rt1.c2) UNION SELECT DISTINCT * FROM v0, rt1 WHERE ((NOT (rt1.c2))) UNION SELECT DISTINCT * FROM v0, rt1 WHERE (((rt1.c2) ISNULL));
SELECT DISTINCT * FROM v0, rt1;
SELECT t0.c1, t0.c2 FROM rt1, t0, vt0 GROUP BY t0.c1, t0.c2;
SELECT ALL t0.c1, t0.c2 FROM rt1, t0, vt0 WHERE (((json_array(t0.c0, t0.c0, rt1.c0, t0.c0))||(((vt0.c0)IS NOT(rt1.c2))))) GROUP BY t0.c1, t0.c2 UNION SELECT ALL t0.c1, t0.c2 FROM rt1, t0, vt0 WHERE ((NOT (((json_array(t0.c0, t0.c0, rt1.c0, t0.c0))||(((vt0.c0)IS NOT(rt1.c2))))))) GROUP BY t0.c1, t0.c2 UNION SELECT ALL t0.c1, t0.c2 FROM rt1, t0, vt0 WHERE (((((json_array(t0.c0, t0.c0, rt1.c0, t0.c0))||(((vt0.c0)IS NOT(rt1.c2))))) ISNULL)) GROUP BY t0.c1, t0.c2;
SELECT t0.c1, t0.c2 FROM rt1, t0, vt0 GROUP BY t0.c1, t0.c2;
SELECT rt1.c0, t0.c0, v0.c2, rt1.c1, vt0.c0, t0.c1, t0.c2 FROM rt1, t0, v0, vt0 GROUP BY rt1.c0, t0.c0, v0.c2, rt1.c1, vt0.c0, t0.c1, t0.c2;
SELECT ALL rt1.c0, t0.c0, v0.c2, rt1.c1, vt0.c0, t0.c1, t0.c2 FROM rt1, t0, v0, vt0 GROUP BY rt1.c0, t0.c0, v0.c2, rt1.c1, vt0.c0, t0.c1, t0.c2 HAVING TOTAL((COUNT(t0.c0) IN (v0.c1, v0.c0))) UNION ALL SELECT rt1.c0, t0.c0, v0.c2, rt1.c1, vt0.c0, t0.c1, t0.c2 FROM rt1, t0, v0, vt0 GROUP BY rt1.c0, t0.c0, v0.c2, rt1.c1, vt0.c0, t0.c1, t0.c2 HAVING (NOT (TOTAL((COUNT(t0.c0) IN (v0.c1, v0.c0))))) UNION ALL SELECT rt1.c0, t0.c0, v0.c2, rt1.c1, vt0.c0, t0.c1, t0.c2 FROM rt1, t0 NOT INDEXED, v0, vt0 GROUP BY rt1.c0, t0.c0, v0.c2, rt1.c1, vt0.c0, t0.c1, t0.c2 HAVING ((TOTAL((COUNT(t0.c0) IN (v0.c1, v0.c0)))) ISNULL);
SELECT * FROM vt0 CROSS JOIN rt1 ON (((NOT ('226053619'))) IS TRUE);
SELECT ALL * FROM vt0 CROSS JOIN rt1 ON (((NOT ('226053619'))) IS TRUE) WHERE ((+ (((rt1.c2)!=('atXTK'))))) UNION ALL SELECT * FROM vt0 CROSS JOIN rt1 ON (((NOT ('226053619'))) IS TRUE) WHERE ((NOT ((+ (((rt1.c2)!=('atXTK'))))))) UNION ALL SELECT ALL * FROM vt0 CROSS JOIN rt1 ON (((NOT ('226053619'))) IS TRUE) WHERE ((((+ (((rt1.c2)!=('atXTK'))))) ISNULL));
SELECT * FROM vt0 CROSS JOIN rt1 ON (((NOT ('226053619'))) IS TRUE);
SELECT DISTINCT * FROM v0, rt1, vt0, t0;
SELECT DISTINCT * FROM v0, rt1, vt0, t0 WHERE (NULL COLLATE BINARY) UNION SELECT DISTINCT * FROM v0, rt1, vt0, t0 WHERE ((NOT (NULL COLLATE BINARY))) UNION SELECT DISTINCT * FROM v0, rt1 NOT INDEXED, vt0, t0 WHERE (((NULL COLLATE BINARY) ISNULL));
SELECT DISTINCT * FROM v0, rt1, vt0, t0;
SELECT t0.c2, v0.c0, v0.c2, t0.c0, vt0.c0, t0.c1 FROM t0, v0 RIGHT OUTER JOIN vt0 ON CAST(((v0.c1)-(v0.c2)) AS REAL) GROUP BY t0.c2, v0.c0, v0.c2, t0.c0, vt0.c0, t0.c1;
SELECT t0.c2, v0.c0, v0.c2, t0.c0, vt0.c0, t0.c1 FROM t0, v0 RIGHT OUTER JOIN vt0 ON CAST(((v0.c1)-(v0.c2)) AS REAL) WHERE (((((((((((v0.c1)AND(v0.c2)))AND(t0.c1)))AND(t0.c2)))AND(t0.c2)))/(((t0.c1) NOT BETWEEN (t0.c2) AND (v0.c2))))) GROUP BY t0.c2, v0.c0, v0.c2, t0.c0, vt0.c0, t0.c1 UNION SELECT t0.c2, v0.c0, v0.c2, t0.c0, vt0.c0, t0.c1 FROM t0, v0 RIGHT OUTER JOIN vt0 ON CAST(((v0.c1)-(v0.c2)) AS REAL) WHERE ((NOT (((((((((((v0.c1)AND(v0.c2)))AND(t0.c1)))AND(t0.c2)))AND(t0.c2)))/(((t0.c1) NOT BETWEEN (t0.c2) AND (v0.c2))))))) GROUP BY t0.c2, v0.c0, v0.c2, t0.c0, vt0.c0, t0.c1 UNION SELECT ALL t0.c2, v0.c0, v0.c2, t0.c0, vt0.c0, t0.c1 FROM t0, v0 RIGHT OUTER JOIN vt0 ON CAST(((v0.c1)-(v0.c2)) AS REAL) WHERE (((((((((((((v0.c1)AND(v0.c2)))AND(t0.c1)))AND(t0.c2)))AND(t0.c2)))/(((t0.c1) NOT BETWEEN (t0.c2) AND (v0.c2))))) ISNULL)) GROUP BY t0.c2, v0.c0, v0.c2, t0.c0, vt0.c0, t0.c1;
SELECT t0.c2, v0.c0, v0.c2, t0.c0, vt0.c0, t0.c1 FROM t0, v0 RIGHT OUTER JOIN vt0 ON CAST(((v0.c1)-(v0.c2)) AS REAL) GROUP BY t0.c2, v0.c0, v0.c2, t0.c0, vt0.c0, t0.c1;
SELECT ALL rt1.c0, rt1.c1 FROM rt1 GROUP BY rt1.c0, rt1.c1;
SELECT ALL rt1.c0, rt1.c1 FROM rt1 GROUP BY rt1.c0, rt1.c1 HAVING json_patch(COUNT(MAX(0.7816615399968756)), 0.1282967277777356) UNION ALL SELECT ALL rt1.c0, rt1.c1 FROM rt1 GROUP BY rt1.c0, rt1.c1 HAVING (NOT (json_patch(COUNT(MAX(0.7816615399968756)), 0.1282967277777356))) UNION ALL SELECT ALL rt1.c0, rt1.c1 FROM rt1 GROUP BY rt1.c0, rt1.c1 HAVING ((json_patch(COUNT(MAX(0.7816615399968756)), 0.1282967277777356)) ISNULL);
SELECT rt1.c0, t0.c2 FROM v0 FULL OUTER JOIN t0 ON CASE WHEN CAST(v0.c1 AS NUMERIC) THEN CAST(x'649f' AS TEXT) END LEFT OUTER JOIN rt1 ON (((rt1.c1)) NOT BETWEEN ((CASE t0.c1  WHEN '' THEN t0.c1 ELSE v0.c0 END)) AND (((((t0.c2)) NOT BETWEEN ((rt1.c0)) AND ((v0.c1))))));
SELECT rt1.c0, t0.c2 FROM v0 FULL OUTER JOIN t0 ON CASE WHEN CAST(v0.c1 AS NUMERIC) THEN CAST(x'649f' AS TEXT) END LEFT OUTER JOIN rt1 ON (((rt1.c1)) NOT BETWEEN ((CASE t0.c1  WHEN '' THEN t0.c1 ELSE v0.c0 END)) AND (((((t0.c2)) NOT BETWEEN ((rt1.c0)) AND ((v0.c1)))))) WHERE (((((v0.c1)<<(t0.c0)))==((t0.c2 IN ())))) UNION ALL SELECT rt1.c0, t0.c2 FROM v0 FULL OUTER JOIN t0 ON CASE WHEN CAST(v0.c1 AS NUMERIC) THEN CAST(x'649f' AS TEXT) END LEFT OUTER JOIN rt1 ON (((rt1.c1)) NOT BETWEEN ((CASE t0.c1  WHEN '' THEN t0.c1 ELSE v0.c0 END)) AND (((((t0.c2)) NOT BETWEEN ((rt1.c0)) AND ((v0.c1)))))) WHERE ((NOT (((((v0.c1)<<(t0.c0)))==((t0.c2 IN ())))))) UNION ALL SELECT rt1.c0, t0.c2 FROM v0 FULL OUTER JOIN t0 ON CASE WHEN CAST(v0.c1 AS NUMERIC) THEN CAST(x'649f' AS TEXT) END LEFT OUTER JOIN rt1 ON (((rt1.c1)) NOT BETWEEN ((CASE t0.c1  WHEN '' THEN t0.c1 ELSE v0.c0 END)) AND (((((t0.c2)) NOT BETWEEN ((rt1.c0)) AND ((v0.c1)))))) WHERE (((((((v0.c1)<<(t0.c0)))=((t0.c2 IN ())))) ISNULL));
SELECT rt1.c0, t0.c2 FROM v0 FULL OUTER JOIN t0 ON CASE WHEN CAST(v0.c1 AS NUMERIC) THEN CAST(x'649f' AS TEXT) END LEFT OUTER JOIN rt1 ON (((rt1.c1)) NOT BETWEEN ((CASE t0.c1  WHEN '' THEN t0.c1 ELSE v0.c0 END)) AND (((((t0.c2)) NOT BETWEEN ((rt1.c0)) AND ((v0.c1))))));
SELECT DISTINCT * FROM rt1, vt0;
SELECT DISTINCT * FROM rt1, vt0 WHERE (MIN((rt1.c2 IN ()), (vt0.c0 IN (vt0.c0)))) UNION SELECT DISTINCT * FROM rt1, vt0 WHERE ((NOT (MIN((rt1.c2 IN ()), (vt0.c0 IN (vt0.c0)))))) UNION SELECT DISTINCT * FROM rt1, vt0 WHERE (((MIN((rt1.c2 IN ()), (vt0.c0 IN (vt0.c0)))) ISNULL));
SELECT DISTINCT * FROM rt1, vt0;
SELECT v0.c1, vt0.c0 FROM t0, rt1 FULL OUTER JOIN vt0 ON UPPER(DISTINCT (rt1.c1 IN ())) INNER JOIN v0 ON x'' COLLATE BINARY GROUP BY v0.c1, vt0.c0;
SELECT v0.c1, vt0.c0 FROM t0, rt1 FULL OUTER JOIN vt0 ON UPPER(DISTINCT (rt1.c1 IN ())) INNER JOIN v0 ON x'' COLLATE BINARY WHERE ((NOT ((((rt1.c1, 0xffffffff8808d36b, '76i\X', v0.c1, t0.c2)) BETWEEN ((v0.c0, rt1.c2, rt1.c0, rt1.c2, rt1.c0)) AND ((rt1.c1, rt1.c1, t0.c0, vt0.c0, t0.c2)))))) GROUP BY v0.c1, vt0.c0 UNION SELECT ALL v0.c1, vt0.c0 FROM t0, rt1 FULL OUTER JOIN vt0 ON UPPER(DISTINCT (rt1.c1 IN ())) INNER JOIN v0 ON x'' COLLATE BINARY WHERE ((NOT ((NOT ((((rt1.c1, 0Xffffffff8808d36b, '76i\X', v0.c1, t0.c2)) BETWEEN ((v0.c0, rt1.c2, rt1.c0, rt1.c2, rt1.c0)) AND ((rt1.c1, rt1.c1, t0.c0, vt0.c0, t0.c2)))))))) GROUP BY v0.c1, vt0.c0 UNION SELECT v0.c1, vt0.c0 FROM t0, rt1 FULL OUTER JOIN vt0 ON UPPER(DISTINCT (rt1.c1 IN ())) INNER JOIN v0 ON x'' COLLATE BINARY WHERE ((((NOT ((((rt1.c1, 0Xffffffff8808d36b, '76i\X', v0.c1, t0.c2)) BETWEEN ((v0.c0, rt1.c2, rt1.c0, rt1.c2, rt1.c0)) AND ((rt1.c1, rt1.c1, t0.c0, vt0.c0, t0.c2)))))) ISNULL)) GROUP BY v0.c1, vt0.c0;
SELECT v0.c1, vt0.c0 FROM t0, rt1 FULL OUTER JOIN vt0 ON UPPER(DISTINCT (rt1.c1 IN ())) INNER JOIN v0 ON x'' COLLATE BINARY GROUP BY v0.c1, vt0.c0;
SELECT t0.c1, t0.c2, t0.c0 FROM t0 GROUP BY t0.c1, t0.c2, t0.c0;
SELECT t0.c1, t0.c2, t0.c0 FROM t0 GROUP BY t0.c1, t0.c2, t0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL t0.c1, t0.c2, t0.c0 FROM t0 GROUP BY t0.c1, t0.c2, t0.c0 HAVING (NOT ((NOT (COUNT(*))))) UNION ALL SELECT ALL t0.c1, t0.c2, t0.c0 FROM t0 GROUP BY t0.c1, t0.c2, t0.c0 HAVING (((NOT (COUNT(*)))) ISNULL);
SELECT t0.c1, t0.c2, t0.c0 FROM t0 GROUP BY t0.c1, t0.c2, t0.c0;
SELECT t0.c1, t0.c2, t0.c0 FROM t0 GROUP BY t0.c1, t0.c2, t0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL t0.c1, t0.c2, t0.c0 FROM t0 GROUP BY t0.c1, t0.c2, t0.c0 HAVING (NOT ((NOT (COUNT(*))))) UNION ALL SELECT ALL t0.c1, t0.c2, t0.c0 FROM t0 GROUP BY t0.c1, t0.c2, t0.c0 HAVING (((NOT (COUNT(*)))) ISNULL);
SELECT t0.c1, t0.c2, t0.c0 FROM t0 GROUP BY t0.c1, t0.c2, t0.c0;
SELECT ALL vt0.c0, v0.c0, v0.c2, v0.c1 FROM vt0, v0;
SELECT vt0.c0, v0.c0, v0.c2, v0.c1 FROM vt0, v0 WHERE (NULL) UNION ALL SELECT vt0.c0, v0.c0, v0.c2, v0.c1 FROM vt0, v0 WHERE ((NOT (NULL))) UNION ALL SELECT ALL vt0.c0, v0.c0, v0.c2, v0.c1 FROM vt0, v0 WHERE (((NULL) ISNULL));
SELECT ALL vt0.c0, v0.c0, v0.c2, v0.c1 FROM vt0, v0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (CAST(CAST(v0.c1 AS INTEGER) AS BLOB)) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (CAST(CAST(v0.c1 AS INTEGER) AS BLOB)))) UNION SELECT DISTINCT * FROM v0 WHERE (((CAST(CAST(v0.c1 AS INTEGER) AS BLOB)) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT ALL t0.c0, vt0.c0 FROM vt0, t0 GROUP BY t0.c0, vt0.c0;
SELECT ALL t0.c0, vt0.c0 FROM vt0, t0 WHERE (((CAST(t0.c0 AS INTEGER)) NOT BETWEEN ((+ (t0.c0))) AND (((t0.c0)&(t0.c0))))) GROUP BY t0.c0, vt0.c0 UNION SELECT ALL t0.c0, vt0.c0 FROM vt0, t0 WHERE ((NOT (((CAST(t0.c0 AS INTEGER)) NOT BETWEEN ((+ (t0.c0))) AND (((t0.c0)&(t0.c0))))))) GROUP BY t0.c0, vt0.c0 UNION SELECT ALL t0.c0, vt0.c0 FROM vt0, t0 WHERE (((((CAST(t0.c0 AS INTEGER)) NOT BETWEEN ((+ (t0.c0))) AND (((t0.c0)&(t0.c0))))) ISNULL)) GROUP BY t0.c0, vt0.c0;
SELECT ALL t0.c0, vt0.c0 FROM vt0, t0 GROUP BY t0.c0, vt0.c0;
SELECT ALL vt0.c0, rt1.c0, rt1.c1, rt1.c2 FROM rt1, vt0 GROUP BY vt0.c0, rt1.c0, rt1.c1, rt1.c2;
SELECT vt0.c0, rt1.c0, rt1.c1, rt1.c2 FROM rt1, vt0 GROUP BY vt0.c0, rt1.c0, rt1.c1, rt1.c2 HAVING COUNT(*) UNION ALL SELECT ALL vt0.c0, rt1.c0, rt1.c1, rt1.c2 FROM rt1, vt0 GROUP BY vt0.c0, rt1.c0, rt1.c1, rt1.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt0.c0, rt1.c0, rt1.c1, rt1.c2 FROM rt1, vt0 GROUP BY vt0.c0, rt1.c0, rt1.c1, rt1.c2 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt0.c0, rt1.c0, rt1.c1, rt1.c2 FROM rt1, vt0 GROUP BY vt0.c0, rt1.c0, rt1.c1, rt1.c2;
SELECT vt0.c0, rt1.c0, rt1.c1, rt1.c2 FROM rt1, vt0 GROUP BY vt0.c0, rt1.c0, rt1.c1, rt1.c2 HAVING COUNT(*) UNION ALL SELECT ALL vt0.c0, rt1.c0, rt1.c1, rt1.c2 FROM rt1, vt0 GROUP BY vt0.c0, rt1.c0, rt1.c1, rt1.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt0.c0, rt1.c0, rt1.c1, rt1.c2 FROM rt1, vt0 GROUP BY vt0.c0, rt1.c0, rt1.c1, rt1.c2 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt0.c0, rt1.c0, rt1.c1, rt1.c2 FROM rt1, vt0 GROUP BY vt0.c0, rt1.c0, rt1.c1, rt1.c2;
SELECT * FROM vt0, v0, rt1, t0;
SELECT * FROM vt0, v0, rt1, t0 WHERE (((CASE WHEN v0.c0 THEN v0.c0 END)!=((('-506486868') BETWEEN (rt1.c0) AND (rt1.c2))))) UNION ALL SELECT * FROM vt0, v0, rt1, t0 WHERE ((NOT (((CASE WHEN v0.c0 THEN v0.c0 END)!=((('-506486868') BETWEEN (rt1.c0) AND (rt1.c2))))))) UNION ALL SELECT ALL * FROM vt0, v0, rt1, t0 WHERE (((((CASE WHEN v0.c0 THEN v0.c0 END)!=((('-506486868') BETWEEN (rt1.c0) AND (rt1.c2))))) ISNULL));
SELECT * FROM vt0, v0, rt1, t0;
SELECT DISTINCT rt1.c0, rt1.c1 FROM t0, vt0, rt1;
SELECT DISTINCT rt1.c0, rt1.c1 FROM t0, vt0, rt1 WHERE ((t0.c2 IN ())) UNION SELECT DISTINCT rt1.c0, rt1.c1 FROM t0, vt0, rt1 WHERE ((NOT ((t0.c2 IN ())))) UNION SELECT DISTINCT rt1.c0, rt1.c1 FROM t0, vt0, rt1 WHERE ((((t0.c2 IN ())) ISNULL));
SELECT DISTINCT rt1.c0, rt1.c1 FROM t0, vt0, rt1;
SELECT ALL v0.c0, rt1.c2, t0.c1, rt1.c0, t0.c0, v0.c1, rt1.c1, v0.c2, t0.c2 FROM t0, rt1 INNER JOIN v0 ON (((rt1.c0)) NOT BETWEEN ((t0.c1)) AND ((t0.c2))) COLLATE NOCASE GROUP BY v0.c0, rt1.c2, t0.c1, rt1.c0, t0.c0, v0.c1, rt1.c1, v0.c2, t0.c2;
SELECT v0.c0, rt1.c2, t0.c1, rt1.c0, t0.c0, v0.c1, rt1.c1, v0.c2, t0.c2 FROM t0, rt1 INNER JOIN v0 ON (((rt1.c0)) NOT BETWEEN ((t0.c1)) AND ((t0.c2))) COLLATE NOCASE WHERE (((((((((((((((((v0.c0)AND(t0.c1)))AND(rt1.c2)))OR((rt1.c0 IN ()))))AND(((t0.c1)|(0.4888703588807669)))))OR((((-1083432431))==((t0.c0))))))OR(NULL)))AND(CASE rt1.c1  WHEN t0.c1 THEN v0.c0 WHEN v0.c1 THEN v0.c1 WHEN t0.c2 THEN rt1.c0 ELSE v0.c2 END)))OR(((t0.c2)AND(v0.c1))))) GROUP BY v0.c0, rt1.c2, t0.c1, rt1.c0, t0.c0, v0.c1, rt1.c1, v0.c2, t0.c2 UNION SELECT ALL v0.c0, rt1.c2, t0.c1, rt1.c0, t0.c0, v0.c1, rt1.c1, v0.c2, t0.c2 FROM t0, rt1 INNER JOIN v0 ON (((rt1.c0)) NOT BETWEEN ((t0.c1)) AND ((t0.c2))) COLLATE NOCASE WHERE ((NOT (((((((((((((((((v0.c0)AND(t0.c1)))AND(rt1.c2)))OR((rt1.c0 IN ()))))AND(((t0.c1)|(0.4888703588807669)))))OR((((-1083432431))=((t0.c0))))))OR(NULL)))AND(CASE rt1.c1  WHEN t0.c1 THEN v0.c0 WHEN v0.c1 THEN v0.c1 WHEN t0.c2 THEN rt1.c0 ELSE v0.c2 END)))OR(((t0.c2)AND(v0.c1))))))) GROUP BY v0.c0, rt1.c2, t0.c1, rt1.c0, t0.c0, v0.c1, rt1.c1, v0.c2, t0.c2 UNION SELECT ALL v0.c0, rt1.c2, t0.c1, rt1.c0, t0.c0, v0.c1, rt1.c1, v0.c2, t0.c2 FROM t0, rt1 INNER JOIN v0 ON (((rt1.c0)) NOT BETWEEN ((t0.c1)) AND ((t0.c2))) COLLATE NOCASE WHERE (((((((((((((((((((v0.c0)AND(t0.c1)))AND(rt1.c2)))OR((rt1.c0 IN ()))))AND(((t0.c1)|(0.4888703588807669)))))OR((((-1083432431))=((t0.c0))))))OR(NULL)))AND(CASE rt1.c1  WHEN t0.c1 THEN v0.c0 WHEN v0.c1 THEN v0.c1 WHEN t0.c2 THEN rt1.c0 ELSE v0.c2 END)))OR(((t0.c2)AND(v0.c1))))) ISNULL)) GROUP BY v0.c0, rt1.c2, t0.c1, rt1.c0, t0.c0, v0.c1, rt1.c1, v0.c2, t0.c2;
SELECT ALL v0.c0, rt1.c2, t0.c1, rt1.c0, t0.c0, v0.c1, rt1.c1, v0.c2, t0.c2 FROM t0, rt1 INNER JOIN v0 ON (((rt1.c0)) NOT BETWEEN ((t0.c1)) AND ((t0.c2))) COLLATE NOCASE GROUP BY v0.c0, rt1.c2, t0.c1, rt1.c0, t0.c0, v0.c1, rt1.c1, v0.c2, t0.c2;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING SUM(-6.48279395E8) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (SUM(-6.48279395E8))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((SUM(-6.48279395E8)) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING SUM(-6.48279395E8) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (SUM(-6.48279395E8))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((SUM(-6.48279395E8)) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT rt1.c0, rt1.c2, rt1.c1 FROM rt1;
SELECT ALL rt1.c0, rt1.c2, rt1.c1 FROM rt1 WHERE (((rt1.c0 COLLATE BINARY)%(CASE rt1.c0  WHEN rt1.c1 THEN 0.3633188842170725 ELSE rt1.c0 END))) UNION ALL SELECT ALL rt1.c0, rt1.c2, rt1.c1 FROM rt1 WHERE ((NOT (((rt1.c0 COLLATE BINARY)%(CASE rt1.c0  WHEN rt1.c1 THEN 0.3633188842170725 ELSE rt1.c0 END))))) UNION ALL SELECT ALL rt1.c0, rt1.c2, rt1.c1 FROM rt1 WHERE (((((rt1.c0 COLLATE BINARY)%(CASE rt1.c0  WHEN rt1.c1 THEN 0.3633188842170725 ELSE rt1.c0 END))) ISNULL));
SELECT rt1.c0, rt1.c2, rt1.c1 FROM rt1;
SELECT DISTINCT * FROM rt1, v0, t0 CROSS JOIN vt0 ON CASE WHEN t0.c0 COLLATE BINARY THEN (~ (v0.c2)) WHEN (v0.c1 IN ()) THEN ((x'') BETWEEN (rt1.c0) AND (rt1.c1)) WHEN UPPER(DISTINCT t0.c1) THEN '<>5H' WHEN v0.c0 COLLATE BINARY THEN t0.c0 COLLATE BINARY WHEN INSTR(t0.c1, v0.c1) THEN CASE rt1.c0  WHEN v0.c2 THEN v0.c0 WHEN v0.c1 THEN t0.c0 WHEN t0.c1 THEN vt0.c0 END END;
SELECT DISTINCT * FROM rt1, v0, t0 CROSS JOIN vt0 ON CASE WHEN t0.c0 COLLATE BINARY THEN (~ (v0.c2)) WHEN (v0.c1 IN ()) THEN ((x'') BETWEEN (rt1.c0) AND (rt1.c1)) WHEN UPPER(DISTINCT t0.c1) THEN '<>5H' WHEN v0.c0 COLLATE BINARY THEN t0.c0 COLLATE BINARY WHEN INSTR(t0.c1, v0.c1) THEN CASE rt1.c0  WHEN v0.c2 THEN v0.c0 WHEN v0.c1 THEN t0.c0 WHEN t0.c1 THEN vt0.c0 END END WHERE (0.6222464195186622) UNION SELECT DISTINCT * FROM rt1, v0, t0 CROSS JOIN vt0 ON CASE WHEN t0.c0 COLLATE BINARY THEN (~ (v0.c2)) WHEN (v0.c1 IN ()) THEN ((x'') BETWEEN (rt1.c0) AND (rt1.c1)) WHEN UPPER(DISTINCT t0.c1) THEN '<>5H' WHEN v0.c0 COLLATE BINARY THEN t0.c0 COLLATE BINARY WHEN INSTR(t0.c1, v0.c1) THEN CASE rt1.c0  WHEN v0.c2 THEN v0.c0 WHEN v0.c1 THEN t0.c0 WHEN t0.c1 THEN vt0.c0 END END WHERE ((NOT (0.6222464195186622))) UNION SELECT DISTINCT * FROM rt1, v0, t0 CROSS JOIN vt0 ON CASE WHEN t0.c0 COLLATE BINARY THEN (~ (v0.c2)) WHEN (v0.c1 IN ()) THEN ((x'') BETWEEN (rt1.c0) AND (rt1.c1)) WHEN UPPER(DISTINCT t0.c1) THEN '<>5H' WHEN v0.c0 COLLATE BINARY THEN t0.c0 COLLATE BINARY WHEN INSTR(t0.c1, v0.c1) THEN CASE rt1.c0  WHEN v0.c2 THEN v0.c0 WHEN v0.c1 THEN t0.c0 WHEN t0.c1 THEN vt0.c0 END END WHERE (((0.6222464195186622) ISNULL));
SELECT DISTINCT * FROM rt1, v0, t0 CROSS JOIN vt0 ON CASE WHEN t0.c0 COLLATE BINARY THEN (~ (v0.c2)) WHEN (v0.c1 IN ()) THEN ((x'') BETWEEN (rt1.c0) AND (rt1.c1)) WHEN UPPER(DISTINCT t0.c1) THEN '<>5H' WHEN v0.c0 COLLATE BINARY THEN t0.c0 COLLATE BINARY WHEN INSTR(t0.c1, v0.c1) THEN CASE rt1.c0  WHEN v0.c2 THEN v0.c0 WHEN v0.c1 THEN t0.c0 WHEN t0.c1 THEN vt0.c0 END END;
SELECT v0.c0 FROM v0, vt0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0, vt0 WHERE (CAST(CAST(v0.c0 AS BLOB) AS BLOB)) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0, vt0 WHERE ((NOT (CAST(CAST(v0.c0 AS BLOB) AS BLOB)))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0, vt0 WHERE (((CAST(CAST(v0.c0 AS BLOB) AS BLOB)) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0, vt0 GROUP BY v0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (- (TRIM(DISTINCT COUNT(*), vt0.c0))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT ((- (TRIM(DISTINCT COUNT(*), vt0.c0))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((- (TRIM(DISTINCT COUNT(*), vt0.c0)))) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (- (TRIM(DISTINCT COUNT(*), vt0.c0))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT ((- (TRIM(DISTINCT COUNT(*), vt0.c0))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((- (TRIM(DISTINCT COUNT(*), vt0.c0)))) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT t0.c1, t0.c2, t0.c0 FROM t0;
SELECT t0.c1, t0.c2, t0.c0 FROM t0 WHERE (((((t0.c1)GLOB(t0.c2)))*(CASE t0.c0  WHEN t0.c1 THEN t0.c0 WHEN t0.c0 THEN t0.c1 WHEN t0.c0 THEN t0.c2 END))) UNION ALL SELECT t0.c1, t0.c2, t0.c0 FROM t0 WHERE ((NOT (((((t0.c1)GLOB(t0.c2)))*(CASE t0.c0  WHEN t0.c1 THEN t0.c0 WHEN t0.c0 THEN t0.c1 WHEN t0.c0 THEN t0.c2 END))))) UNION ALL SELECT ALL t0.c1, t0.c2, t0.c0 FROM t0 WHERE (((((((t0.c1)GLOB(t0.c2)))*(CASE t0.c0  WHEN t0.c1 THEN t0.c0 WHEN t0.c0 THEN t0.c1 WHEN t0.c0 THEN t0.c2 END))) ISNULL));
SELECT t0.c1, t0.c2, t0.c0 FROM t0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE ((+ (t0.c1))) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT ((+ (t0.c1))))) UNION SELECT DISTINCT * FROM t0 WHERE ((((+ (t0.c1))) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT ALL t0.c0, rt1.c0, vt0.c0, rt1.c1, rt1.c2, t0.c2 FROM rt1, t0, vt0 GROUP BY t0.c0, rt1.c0, vt0.c0, rt1.c1, rt1.c2, t0.c2;
SELECT ALL t0.c0, rt1.c0, vt0.c0, rt1.c1, rt1.c2, t0.c2 FROM rt1, t0, vt0 WHERE (UPPER(((rt1.c2)>=(rt1.c2)))) GROUP BY t0.c0, rt1.c0, vt0.c0, rt1.c1, rt1.c2, t0.c2 UNION SELECT ALL t0.c0, rt1.c0, vt0.c0, rt1.c1, rt1.c2, t0.c2 FROM rt1, t0, vt0 WHERE ((NOT (UPPER(((rt1.c2)>=(rt1.c2)))))) GROUP BY t0.c0, rt1.c0, vt0.c0, rt1.c1, rt1.c2, t0.c2 UNION SELECT ALL t0.c0, rt1.c0, vt0.c0, rt1.c1, rt1.c2, t0.c2 FROM rt1, t0, vt0 WHERE (((UPPER(((rt1.c2)>=(rt1.c2)))) ISNULL)) GROUP BY t0.c0, rt1.c0, vt0.c0, rt1.c1, rt1.c2, t0.c2;
SELECT ALL t0.c0, rt1.c0, vt0.c0, rt1.c1, rt1.c2, t0.c2 FROM rt1, t0, vt0 GROUP BY t0.c0, rt1.c0, vt0.c0, rt1.c1, rt1.c2, t0.c2;
SELECT ALL t0.c2, t0.c0, v0.c1, v0.c2 FROM t0, v0 GROUP BY t0.c2, t0.c0, v0.c1, v0.c2;
SELECT ALL t0.c2, t0.c0, v0.c1, v0.c2 FROM t0, v0 GROUP BY t0.c2, t0.c0, v0.c1, v0.c2 HAVING (((COUNT(*)))=((TOTAL(t0.c0)))) UNION ALL SELECT ALL t0.c2, t0.c0, v0.c1, v0.c2 FROM t0, v0 GROUP BY t0.c2, t0.c0, v0.c1, v0.c2 HAVING (NOT ((((COUNT(*)))=((TOTAL(t0.c0)))))) UNION ALL SELECT t0.c2, t0.c0, v0.c1, v0.c2 FROM t0, v0 GROUP BY t0.c2, t0.c0, v0.c1, v0.c2 HAVING (((((COUNT(*)))=((TOTAL(t0.c0))))) ISNULL);
SELECT ALL t0.c2, t0.c0, v0.c1, v0.c2 FROM t0, v0 GROUP BY t0.c2, t0.c0, v0.c1, v0.c2;
SELECT ALL t0.c2, t0.c0, v0.c1, v0.c2 FROM t0, v0 GROUP BY t0.c2, t0.c0, v0.c1, v0.c2 HAVING (((COUNT(*)))=((TOTAL(t0.c0)))) UNION ALL SELECT ALL t0.c2, t0.c0, v0.c1, v0.c2 FROM t0, v0 GROUP BY t0.c2, t0.c0, v0.c1, v0.c2 HAVING (NOT ((((COUNT(*)))=((TOTAL(t0.c0)))))) UNION ALL SELECT t0.c2, t0.c0, v0.c1, v0.c2 FROM t0, v0 GROUP BY t0.c2, t0.c0, v0.c1, v0.c2 HAVING (((((COUNT(*)))=((TOTAL(t0.c0))))) ISNULL);
SELECT ALL t0.c2, t0.c0, v0.c1, v0.c2 FROM t0, v0 GROUP BY t0.c2, t0.c0, v0.c1, v0.c2;
SELECT ALL * FROM rt1, t0;
SELECT * FROM rt1, t0 WHERE ((NOT (CASE '800003595'  WHEN x'' THEN t0.c0 END))) UNION ALL SELECT * FROM rt1, t0 WHERE ((NOT ((NOT (CASE '800003595'  WHEN x'' THEN t0.c0 END))))) UNION ALL SELECT * FROM rt1, t0 WHERE ((((NOT (CASE '800003595'  WHEN x'' THEN t0.c0 END))) ISNULL));
SELECT ALL * FROM rt1, t0;
SELECT DISTINCT * FROM rt1;
SELECT DISTINCT * FROM rt1 WHERE (((CAST(rt1.c1 AS BLOB))<=(rt1.c2))) UNION SELECT DISTINCT * FROM rt1 WHERE ((NOT (((CAST(rt1.c1 AS BLOB))<=(rt1.c2))))) UNION SELECT DISTINCT * FROM rt1 WHERE (((((CAST(rt1.c1 AS BLOB))<=(rt1.c2))) ISNULL));
SELECT DISTINCT * FROM rt1;
SELECT rt1.c0, v0.c1, v0.c0, t0.c2, vt0.c0, rt1.c2, v0.c2 FROM vt0, rt1, v0, t0 GROUP BY rt1.c0, v0.c1, v0.c0, t0.c2, vt0.c0, rt1.c2, v0.c2;
SELECT ALL rt1.c0, v0.c1, v0.c0, t0.c2, vt0.c0, rt1.c2, v0.c2 FROM vt0, rt1, v0, t0 WHERE ((((x'6bf7', vt0.c0, v0.c2)) BETWEEN ((((t0.c2) BETWEEN (v0.c0) AND (t0.c2)), ((v0.c0) BETWEEN (0.5249267555992351) AND (t0.c2)), (NOT (0.1524086780302486)))) AND ((((v0.c2)-(v0.c2)), (- (v0.c2)), ((rt1.c0)<(t0.c1)))))) GROUP BY rt1.c0, v0.c1, v0.c0, t0.c2, vt0.c0, rt1.c2, v0.c2 UNION SELECT ALL rt1.c0, v0.c1, v0.c0, t0.c2, vt0.c0, rt1.c2, v0.c2 FROM vt0, rt1, v0, t0 WHERE ((NOT ((((x'6bf7', vt0.c0, v0.c2)) BETWEEN ((((t0.c2) BETWEEN (v0.c0) AND (t0.c2)), ((v0.c0) BETWEEN (0.5249267555992351) AND (t0.c2)), (NOT (0.1524086780302486)))) AND ((((v0.c2)-(v0.c2)), (- (v0.c2)), ((rt1.c0)<(t0.c1)))))))) GROUP BY rt1.c0, v0.c1, v0.c0, t0.c2, vt0.c0, rt1.c2, v0.c2 UNION SELECT ALL rt1.c0, v0.c1, v0.c0, t0.c2, vt0.c0, rt1.c2, v0.c2 FROM vt0, rt1, v0, t0 WHERE ((((((x'6bf7', vt0.c0, v0.c2)) BETWEEN ((((t0.c2) BETWEEN (v0.c0) AND (t0.c2)), ((v0.c0) BETWEEN (0.5249267555992351) AND (t0.c2)), (NOT (0.1524086780302486)))) AND ((((v0.c2)-(v0.c2)), (- (v0.c2)), ((rt1.c0)<(t0.c1)))))) ISNULL)) GROUP BY rt1.c0, v0.c1, v0.c0, t0.c2, vt0.c0, rt1.c2, v0.c2;
SELECT rt1.c0, v0.c1, v0.c0, t0.c2, vt0.c0, rt1.c2, v0.c2 FROM vt0, rt1, v0, t0 GROUP BY rt1.c0, v0.c1, v0.c0, t0.c2, vt0.c0, rt1.c2, v0.c2;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING json_object(CASE AVG(COUNT(GROUP_CONCAT(COUNT(COUNT(*)))))  WHEN vt0.c0 THEN COUNT(MIN(MIN(COUNT(COUNT(vt0.c0))))) WHEN SUM(TOTAL(AVG(COUNT(vt0.c0)))) THEN vt0.c0 WHEN AVG(COUNT(SUM(MAX(COUNT(*))))) THEN GROUP_CONCAT(COUNT(*)) END, vt0.c0) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (json_object(CASE AVG(COUNT(GROUP_CONCAT(COUNT(COUNT(*)))))  WHEN vt0.c0 THEN COUNT(MIN(MIN(COUNT(COUNT(vt0.c0))))) WHEN SUM(TOTAL(AVG(COUNT(vt0.c0)))) THEN vt0.c0 WHEN AVG(COUNT(SUM(MAX(COUNT(*))))) THEN GROUP_CONCAT(COUNT(*)) END, vt0.c0))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((json_object(CASE AVG(COUNT(GROUP_CONCAT(COUNT(COUNT(*)))))  WHEN vt0.c0 THEN COUNT(MIN(MIN(COUNT(COUNT(vt0.c0))))) WHEN SUM(TOTAL(AVG(COUNT(vt0.c0)))) THEN vt0.c0 WHEN AVG(COUNT(SUM(MAX(COUNT(*))))) THEN GROUP_CONCAT(COUNT(*)) END, vt0.c0)) ISNULL);
SELECT MIN(LTRIM((((t0.c1)) NOT BETWEEN ((t0.c2)) AND ((t0.c2))), t0.c2 COLLATE BINARY)) FROM t0;
SELECT * FROM vt0 RIGHT OUTER JOIN rt1 ON ((CASE vt0.c0  WHEN vt0.c0 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c0 ELSE rt1.c1 END) NOT BETWEEN ((((vt0.c0, rt1.c0, 0.7965012510277739))<>((rt1.c0, rt1.c1, 0.2537340180485128)))) AND (rt1.c1));
SELECT * FROM vt0 RIGHT OUTER JOIN rt1 ON ((CASE vt0.c0  WHEN vt0.c0 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c0 ELSE rt1.c1 END) NOT BETWEEN ((((vt0.c0, rt1.c0, 0.7965012510277739))<>((rt1.c0, rt1.c1, 0.2537340180485128)))) AND (rt1.c1)) WHERE ((((((rt1.c2)+(rt1.c1))))>((((rt1.c1) BETWEEN (rt1.c1) AND (rt1.c2)))))) UNION ALL SELECT ALL * FROM vt0 RIGHT OUTER JOIN rt1 ON ((CASE vt0.c0  WHEN vt0.c0 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c0 ELSE rt1.c1 END) NOT BETWEEN ((((vt0.c0, rt1.c0, 0.7965012510277739))<>((rt1.c0, rt1.c1, 0.2537340180485128)))) AND (rt1.c1)) WHERE ((NOT ((((((rt1.c2)+(rt1.c1))))>((((rt1.c1) BETWEEN (rt1.c1) AND (rt1.c2)))))))) UNION ALL SELECT ALL * FROM vt0 RIGHT OUTER JOIN rt1 ON ((CASE vt0.c0  WHEN vt0.c0 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c0 ELSE rt1.c1 END) NOT BETWEEN ((((vt0.c0, rt1.c0, 0.7965012510277739))!=((rt1.c0, rt1.c1, 0.2537340180485128)))) AND (rt1.c1)) WHERE ((((((((rt1.c2)+(rt1.c1))))>((((rt1.c1) BETWEEN (rt1.c1) AND (rt1.c2)))))) ISNULL));
SELECT * FROM vt0 RIGHT OUTER JOIN rt1 ON ((CASE vt0.c0  WHEN vt0.c0 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c0 ELSE rt1.c1 END) NOT BETWEEN ((((vt0.c0, rt1.c0, 0.7965012510277739))<>((rt1.c0, rt1.c1, 0.2537340180485128)))) AND (rt1.c1));
SELECT DISTINCT * FROM v0 FULL OUTER JOIN rt1 ON CAST((rt1.c2 IN ()) AS NUMERIC) INNER JOIN t0 ON (((v0.c0 COLLATE NOCASE, ((rt1.c0) NOT BETWEEN ('') AND (v0.c0)), (vt0.c0 IN ())))>((rt1.c0, ((rt1.c1)-(t0.c0)), ((t0.c2)<=(t0.c1))))) FULL OUTER JOIN vt0 ON v0.c2;
SELECT DISTINCT * FROM v0 FULL OUTER JOIN rt1 ON CAST((rt1.c2 IN ()) AS NUMERIC) INNER JOIN t0 ON (((v0.c0 COLLATE NOCASE, ((rt1.c0) NOT BETWEEN ('') AND (v0.c0)), (vt0.c0 IN ())))>((rt1.c0, ((rt1.c1)-(t0.c0)), ((t0.c2)<=(t0.c1))))) FULL OUTER JOIN vt0 ON v0.c2 WHERE (((((rt1.c1) IS TRUE)) NOT NULL)) UNION SELECT DISTINCT * FROM v0 FULL OUTER JOIN rt1 ON CAST((rt1.c2 IN ()) AS NUMERIC) INNER JOIN t0 ON (((v0.c0 COLLATE NOCASE, ((rt1.c0) NOT BETWEEN ('') AND (v0.c0)), (vt0.c0 IN ())))>((rt1.c0, ((rt1.c1)-(t0.c0)), ((t0.c2)<=(t0.c1))))) FULL OUTER JOIN vt0 ON v0.c2 WHERE ((NOT (((((rt1.c1) IS TRUE)) NOT NULL)))) UNION SELECT DISTINCT * FROM v0 FULL OUTER JOIN rt1 ON CAST((rt1.c2 IN ()) AS NUMERIC) INNER JOIN t0 ON (((v0.c0 COLLATE NOCASE, ((rt1.c0) NOT BETWEEN ('') AND (v0.c0)), (vt0.c0 IN ())))>((rt1.c0, ((rt1.c1)-(t0.c0)), ((t0.c2)<=(t0.c1))))) FULL OUTER JOIN vt0 ON v0.c2 WHERE (((((((rt1.c1) IS TRUE)) NOT NULL)) ISNULL));
SELECT DISTINCT * FROM v0 FULL OUTER JOIN rt1 ON CAST((rt1.c2 IN ()) AS NUMERIC) INNER JOIN t0 ON (((v0.c0 COLLATE NOCASE, ((rt1.c0) NOT BETWEEN ('') AND (v0.c0)), (vt0.c0 IN ())))>((rt1.c0, ((rt1.c1)-(t0.c0)), ((t0.c2)<=(t0.c1))))) FULL OUTER JOIN vt0 ON v0.c2;
SELECT rt1.c1, rt1.c2 FROM rt1 GROUP BY rt1.c1, rt1.c2;
SELECT ALL rt1.c1, rt1.c2 FROM rt1 WHERE (CAST((rt1.c1 IN ()) AS TEXT)) GROUP BY rt1.c1, rt1.c2 UNION SELECT ALL rt1.c1, rt1.c2 FROM rt1 WHERE ((NOT (CAST((rt1.c1 IN ()) AS TEXT)))) GROUP BY rt1.c1, rt1.c2 UNION SELECT ALL rt1.c1, rt1.c2 FROM rt1 WHERE (((CAST((rt1.c1 IN ()) AS TEXT)) ISNULL)) GROUP BY rt1.c1, rt1.c2;
SELECT rt1.c1, rt1.c2 FROM rt1 GROUP BY rt1.c1, rt1.c2;
SELECT ALL t0.c2, t0.c0, vt0.c0, t0.c1, v0.c1, v0.c0, rt1.c0, rt1.c2, rt1.c1 FROM t0, rt1, v0, vt0 GROUP BY t0.c2, t0.c0, vt0.c0, t0.c1, v0.c1, v0.c0, rt1.c0, rt1.c2, rt1.c1;
SELECT ALL t0.c2, t0.c0, vt0.c0, t0.c1, v0.c1, v0.c0, rt1.c0, rt1.c2, rt1.c1 FROM t0, rt1, v0, vt0 GROUP BY t0.c2, t0.c0, vt0.c0, t0.c1, v0.c1, v0.c0, rt1.c0, rt1.c2, rt1.c1 HAVING COUNT(*) UNION ALL SELECT ALL t0.c2, t0.c0, vt0.c0, t0.c1, v0.c1, v0.c0, rt1.c0, rt1.c2, rt1.c1 FROM t0, rt1, v0, vt0 GROUP BY t0.c2, t0.c0, vt0.c0, t0.c1, v0.c1, v0.c0, rt1.c0, rt1.c2, rt1.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT t0.c2, t0.c0, vt0.c0, t0.c1, v0.c1, v0.c0, rt1.c0, rt1.c2, rt1.c1 FROM t0, rt1 NOT INDEXED, v0, vt0 GROUP BY t0.c2, t0.c0, vt0.c0, t0.c1, v0.c1, v0.c0, rt1.c0, rt1.c2, rt1.c1 HAVING ((COUNT(*)) ISNULL);
SELECT ALL t0.c2, t0.c0, vt0.c0, t0.c1, v0.c1, v0.c0, rt1.c0, rt1.c2, rt1.c1 FROM t0, rt1, v0, vt0 GROUP BY t0.c2, t0.c0, vt0.c0, t0.c1, v0.c1, v0.c0, rt1.c0, rt1.c2, rt1.c1;
SELECT ALL t0.c2, t0.c0, vt0.c0, t0.c1, v0.c1, v0.c0, rt1.c0, rt1.c2, rt1.c1 FROM t0, rt1, v0, vt0 GROUP BY t0.c2, t0.c0, vt0.c0, t0.c1, v0.c1, v0.c0, rt1.c0, rt1.c2, rt1.c1 HAVING COUNT(*) UNION ALL SELECT ALL t0.c2, t0.c0, vt0.c0, t0.c1, v0.c1, v0.c0, rt1.c0, rt1.c2, rt1.c1 FROM t0, rt1, v0, vt0 GROUP BY t0.c2, t0.c0, vt0.c0, t0.c1, v0.c1, v0.c0, rt1.c0, rt1.c2, rt1.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT t0.c2, t0.c0, vt0.c0, t0.c1, v0.c1, v0.c0, rt1.c0, rt1.c2, rt1.c1 FROM t0, rt1 NOT INDEXED, v0, vt0 GROUP BY t0.c2, t0.c0, vt0.c0, t0.c1, v0.c1, v0.c0, rt1.c0, rt1.c2, rt1.c1 HAVING ((COUNT(*)) ISNULL);
SELECT ALL t0.c2, t0.c0, vt0.c0, t0.c1, v0.c1, v0.c0, rt1.c0, rt1.c2, rt1.c1 FROM t0, rt1, v0, vt0 GROUP BY t0.c2, t0.c0, vt0.c0, t0.c1, v0.c1, v0.c0, rt1.c0, rt1.c2, rt1.c1;
SELECT * FROM rt1, v0;
SELECT ALL * FROM rt1, v0 WHERE ((NOT (CAST(v0.c0 AS BLOB)))) UNION ALL SELECT ALL * FROM rt1, v0 WHERE ((NOT ((NOT (CAST(v0.c0 AS BLOB)))))) UNION ALL SELECT ALL * FROM rt1, v0 WHERE ((((NOT (CAST(v0.c0 AS BLOB)))) ISNULL));
SELECT * FROM rt1, v0;
SELECT DISTINCT * FROM rt1, v0 INNER JOIN t0 ON (((((t0.c1)) BETWEEN ((rt1.c2)) AND ((t0.c1))))AND((~ (v0.c0)))) RIGHT OUTER JOIN vt0 ON (((t0.c1)GLOB(v0.c1)) IN ());
SELECT DISTINCT * FROM rt1, v0 INNER JOIN t0 ON (((((t0.c1)) BETWEEN ((rt1.c2)) AND ((t0.c1))))AND((~ (v0.c0)))) RIGHT OUTER JOIN vt0 ON (((t0.c1)GLOB(v0.c1)) IN ()) WHERE (LIKELY(DISTINCT CASE WHEN 0.4346866774828243 THEN t0.c2 END)) UNION SELECT DISTINCT * FROM rt1, v0 INNER JOIN t0 ON (((((t0.c1)) BETWEEN ((rt1.c2)) AND ((t0.c1))))AND((~ (v0.c0)))) RIGHT OUTER JOIN vt0 ON (((t0.c1)GLOB(v0.c1)) IN ()) WHERE ((NOT (LIKELY(DISTINCT CASE WHEN 0.4346866774828243 THEN t0.c2 END)))) UNION SELECT DISTINCT * FROM rt1, v0 INNER JOIN t0 ON (((((t0.c1)) BETWEEN ((rt1.c2)) AND ((t0.c1))))AND((~ (v0.c0)))) RIGHT OUTER JOIN vt0 ON (((t0.c1)GLOB(v0.c1)) IN ()) WHERE (((LIKELY(DISTINCT CASE WHEN 0.4346866774828243 THEN t0.c2 END)) ISNULL));
SELECT DISTINCT * FROM rt1, v0 INNER JOIN t0 ON (((((t0.c1)) BETWEEN ((rt1.c2)) AND ((t0.c1))))AND((~ (v0.c0)))) RIGHT OUTER JOIN vt0 ON (((t0.c1)GLOB(v0.c1)) IN ());
SELECT ALL vt0.c0, v0.c2, v0.c1, t0.c2, t0.c1 FROM v0, vt0, t0 GROUP BY vt0.c0, v0.c2, v0.c1, t0.c2, t0.c1;
SELECT ALL vt0.c0, v0.c2, v0.c1, t0.c2, t0.c1 FROM v0, vt0, t0 WHERE (((((vt0.c0)/(x'')))%(CAST(vt0.c0 AS NUMERIC)))) GROUP BY vt0.c0, v0.c2, v0.c1, t0.c2, t0.c1 UNION SELECT vt0.c0, v0.c2, v0.c1, t0.c2, t0.c1 FROM v0, vt0, t0 WHERE ((NOT (((((vt0.c0)/(x'')))%(CAST(vt0.c0 AS NUMERIC)))))) GROUP BY vt0.c0, v0.c2, v0.c1, t0.c2, t0.c1 UNION SELECT ALL vt0.c0, v0.c2, v0.c1, t0.c2, t0.c1 FROM v0, vt0, t0 WHERE (((((((vt0.c0)/(x'')))%(CAST(vt0.c0 AS NUMERIC)))) ISNULL)) GROUP BY vt0.c0, v0.c2, v0.c1, t0.c2, t0.c1;
SELECT ALL vt0.c0, v0.c2, v0.c1, t0.c2, t0.c1 FROM v0, vt0, t0 GROUP BY vt0.c0, v0.c2, v0.c1, t0.c2, t0.c1;
SELECT ALL t0.c0, t0.c2 FROM t0 GROUP BY t0.c0, t0.c2;
SELECT t0.c0, t0.c2 FROM t0 GROUP BY t0.c0, t0.c2 HAVING (NOT (((t0.c1)/(MAX(t0.c2))))) UNION ALL SELECT ALL t0.c0, t0.c2 FROM t0 GROUP BY t0.c0, t0.c2 HAVING (NOT ((NOT (((t0.c1)/(MAX(t0.c2))))))) UNION ALL SELECT t0.c0, t0.c2 FROM t0 GROUP BY t0.c0, t0.c2 HAVING (((NOT (((t0.c1)/(MAX(t0.c2)))))) ISNULL);
SELECT ALL t0.c0, t0.c2 FROM t0 GROUP BY t0.c0, t0.c2;
SELECT t0.c0, t0.c2 FROM t0 GROUP BY t0.c0, t0.c2 HAVING (NOT (((t0.c1)/(MAX(t0.c2))))) UNION ALL SELECT ALL t0.c0, t0.c2 FROM t0 GROUP BY t0.c0, t0.c2 HAVING (NOT ((NOT (((t0.c1)/(MAX(t0.c2))))))) UNION ALL SELECT t0.c0, t0.c2 FROM t0 GROUP BY t0.c0, t0.c2 HAVING (((NOT (((t0.c1)/(MAX(t0.c2)))))) ISNULL);
SELECT ALL t0.c0, t0.c2 FROM t0 GROUP BY t0.c0, t0.c2;
SELECT * FROM t0, vt0, rt1;
SELECT ALL * FROM t0, vt0, rt1 WHERE ((- (((t0.c2)IS NOT(rt1.c0))))) UNION ALL SELECT ALL * FROM t0, vt0, rt1 WHERE ((NOT ((- (((t0.c2)IS NOT(rt1.c0))))))) UNION ALL SELECT * FROM t0, vt0, rt1 WHERE ((((- (((t0.c2)IS NOT(rt1.c0))))) ISNULL));
SELECT * FROM t0, vt0, rt1;
SELECT DISTINCT * FROM vt0 CROSS JOIN rt1 ON (- (((rt1.c0) IS FALSE)));
SELECT DISTINCT * FROM vt0 CROSS JOIN rt1 ON (- (((rt1.c0) IS FALSE))) WHERE (COALESCE(DISTINCT vt0.c0, vt0.c0 COLLATE BINARY)) UNION SELECT DISTINCT * FROM vt0 CROSS JOIN rt1 ON (- (((rt1.c0) IS FALSE))) WHERE ((NOT (COALESCE(DISTINCT vt0.c0, vt0.c0 COLLATE BINARY)))) UNION SELECT DISTINCT * FROM vt0 CROSS JOIN rt1 ON (- (((rt1.c0) IS FALSE))) WHERE (((COALESCE(DISTINCT vt0.c0, vt0.c0 COLLATE BINARY)) ISNULL));
SELECT DISTINCT * FROM vt0 CROSS JOIN rt1 ON (- (((rt1.c0) IS FALSE)));
SELECT v0.c0, v0.c1, t0.c1, vt0.c0, rt1.c0, rt1.c1, v0.c2, rt1.c2, t0.c2, t0.c0 FROM vt0, v0, rt1, t0 GROUP BY v0.c0, v0.c1, t0.c1, vt0.c0, rt1.c0, rt1.c1, v0.c2, rt1.c2, t0.c2, t0.c0;
SELECT v0.c0, v0.c1, t0.c1, vt0.c0, rt1.c0, rt1.c1, v0.c2, rt1.c2, t0.c2, t0.c0 FROM vt0, v0, rt1, t0 WHERE (((((((((((((t0.c0)AND(t0.c2)))OR(v0.c2)))AND(t0.c2)))AND(rt1.c1)))OR(NULL)))AND(((t0.c0) NOT BETWEEN (rt1.c2) AND (t0.c1))))) GROUP BY v0.c0, v0.c1, t0.c1, vt0.c0, rt1.c0, rt1.c1, v0.c2, rt1.c2, t0.c2, t0.c0 UNION SELECT v0.c0, v0.c1, t0.c1, vt0.c0, rt1.c0, rt1.c1, v0.c2, rt1.c2, t0.c2, t0.c0 FROM vt0, v0, rt1, t0 WHERE ((NOT (((((((((((((t0.c0)AND(t0.c2)))OR(v0.c2)))AND(t0.c2)))AND(rt1.c1)))OR(NULL)))AND(((t0.c0) NOT BETWEEN (rt1.c2) AND (t0.c1))))))) GROUP BY v0.c0, v0.c1, t0.c1, vt0.c0, rt1.c0, rt1.c1, v0.c2, rt1.c2, t0.c2, t0.c0 UNION SELECT v0.c0, v0.c1, t0.c1, vt0.c0, rt1.c0, rt1.c1, v0.c2, rt1.c2, t0.c2, t0.c0 FROM vt0, v0, rt1, t0 WHERE (((((((((((((((t0.c0)AND(t0.c2)))OR(v0.c2)))AND(t0.c2)))AND(rt1.c1)))OR(NULL)))AND(((t0.c0) NOT BETWEEN (rt1.c2) AND (t0.c1))))) ISNULL)) GROUP BY v0.c0, v0.c1, t0.c1, vt0.c0, rt1.c0, rt1.c1, v0.c2, rt1.c2, t0.c2, t0.c0;
SELECT v0.c0, v0.c1, t0.c1, vt0.c0, rt1.c0, rt1.c1, v0.c2, rt1.c2, t0.c2, t0.c0 FROM vt0, v0, rt1, t0 GROUP BY v0.c0, v0.c1, t0.c1, vt0.c0, rt1.c0, rt1.c1, v0.c2, rt1.c2, t0.c2, t0.c0;
SELECT rt1.c2, t0.c2, vt0.c0, t0.c0, rt1.c1, t0.c1, rt1.c0 FROM vt0, t0, rt1 GROUP BY rt1.c2, t0.c2, vt0.c0, t0.c0, rt1.c1, t0.c1, rt1.c0;
SELECT rt1.c2, t0.c2, vt0.c0, t0.c0, rt1.c1, t0.c1, rt1.c0 FROM vt0, t0, rt1 GROUP BY rt1.c2, t0.c2, vt0.c0, t0.c0, rt1.c1, t0.c1, rt1.c0 HAVING ((SUM(NULL))<=(GROUP_CONCAT(GROUP_CONCAT(t0.c0)))) UNION ALL SELECT ALL rt1.c2, t0.c2, vt0.c0, t0.c0, rt1.c1, t0.c1, rt1.c0 FROM vt0 NOT INDEXED, t0, rt1 GROUP BY rt1.c2, t0.c2, vt0.c0, t0.c0, rt1.c1, t0.c1, rt1.c0 HAVING (NOT (((SUM(NULL))<=(GROUP_CONCAT(GROUP_CONCAT(t0.c0)))))) UNION ALL SELECT rt1.c2, t0.c2, vt0.c0, t0.c0, rt1.c1, t0.c1, rt1.c0 FROM vt0, t0, rt1 GROUP BY rt1.c2, t0.c2, vt0.c0, t0.c0, rt1.c1, t0.c1, rt1.c0 HAVING ((((SUM(NULL))<=(GROUP_CONCAT(GROUP_CONCAT(t0.c0))))) ISNULL);
SELECT ALL vt0.c0, v0.c2, rt1.c2, rt1.c0, v0.c1, v0.c0, rt1.c1, t0.c2, t0.c0 FROM rt1, v0, vt0, t0;
SELECT vt0.c0, v0.c2, rt1.c2, rt1.c0, v0.c1, v0.c0, rt1.c1, t0.c2, t0.c0 FROM rt1, v0, vt0, t0 WHERE (CASE WHEN (v0.c2 IN ()) THEN 'X{' WHEN (NOT (t0.c0)) THEN ((t0.c2) IS TRUE) WHEN t0.c2 THEN ((NULL)|(t0.c0)) END) UNION ALL SELECT ALL vt0.c0, v0.c2, rt1.c2, rt1.c0, v0.c1, v0.c0, rt1.c1, t0.c2, t0.c0 FROM rt1, v0, vt0, t0 WHERE ((NOT (CASE WHEN (v0.c2 IN ()) THEN 'X{' WHEN (NOT (t0.c0)) THEN ((t0.c2) IS TRUE) WHEN t0.c2 THEN ((NULL)|(t0.c0)) END))) UNION ALL SELECT vt0.c0, v0.c2, rt1.c2, rt1.c0, v0.c1, v0.c0, rt1.c1, t0.c2, t0.c0 FROM rt1, v0, vt0, t0 WHERE (((CASE WHEN (v0.c2 IN ()) THEN 'X{' WHEN (NOT (t0.c0)) THEN ((t0.c2) IS TRUE) WHEN t0.c2 THEN ((NULL)|(t0.c0)) END) ISNULL));
SELECT ALL vt0.c0, v0.c2, rt1.c2, rt1.c0, v0.c1, v0.c0, rt1.c1, t0.c2, t0.c0 FROM rt1, v0, vt0, t0;
SELECT DISTINCT v0.c2, v0.c0, v0.c1 FROM v0;
SELECT DISTINCT v0.c2, v0.c0, v0.c1 FROM v0 WHERE (((TRIM(v0.c2)) IS FALSE)) UNION SELECT DISTINCT v0.c2, v0.c0, v0.c1 FROM v0 WHERE ((NOT (((TRIM(v0.c2)) IS FALSE)))) UNION SELECT DISTINCT v0.c2, v0.c0, v0.c1 FROM v0 WHERE (((((TRIM(v0.c2)) IS FALSE)) ISNULL));
SELECT DISTINCT v0.c2, v0.c0, v0.c1 FROM v0;
SELECT ALL rt1.c1 FROM rt1 GROUP BY rt1.c1;
SELECT rt1.c1 FROM rt1 WHERE (CAST(((rt1.c0) NOT NULL) AS TEXT)) GROUP BY rt1.c1 UNION SELECT ALL rt1.c1 FROM rt1 WHERE ((NOT (CAST(((rt1.c0) NOT NULL) AS TEXT)))) GROUP BY rt1.c1 UNION SELECT ALL rt1.c1 FROM rt1 WHERE (((CAST(((rt1.c0) NOT NULL) AS TEXT)) ISNULL)) GROUP BY rt1.c1;
SELECT ALL rt1.c1 FROM rt1 GROUP BY rt1.c1;
SELECT ALL v0.c1, v0.c0, vt0.c0, rt1.c2, v0.c2, rt1.c0, rt1.c1, t0.c0 FROM t0, v0, rt1, vt0 GROUP BY v0.c1, v0.c0, vt0.c0, rt1.c2, v0.c2, rt1.c0, rt1.c1, t0.c0;
SELECT v0.c1, v0.c0, vt0.c0, rt1.c2, v0.c2, rt1.c0, rt1.c1, t0.c0 FROM t0, v0, rt1, vt0 GROUP BY v0.c1, v0.c0, vt0.c0, rt1.c2, v0.c2, rt1.c0, rt1.c1, t0.c0 HAVING COUNT(CAST(t0.c2 AS TEXT)) UNION ALL SELECT ALL v0.c1, v0.c0, vt0.c0, rt1.c2, v0.c2, rt1.c0, rt1.c1, t0.c0 FROM t0, v0, rt1, vt0 GROUP BY v0.c1, v0.c0, vt0.c0, rt1.c2, v0.c2, rt1.c0, rt1.c1, t0.c0 HAVING (NOT (COUNT(CAST(t0.c2 AS TEXT)))) UNION ALL SELECT v0.c1, v0.c0, vt0.c0, rt1.c2, v0.c2, rt1.c0, rt1.c1, t0.c0 FROM t0, v0, rt1, vt0 GROUP BY v0.c1, v0.c0, vt0.c0, rt1.c2, v0.c2, rt1.c0, rt1.c1, t0.c0 HAVING ((COUNT(CAST(t0.c2 AS TEXT))) ISNULL);
SELECT ALL v0.c1, v0.c0, vt0.c0, rt1.c2, v0.c2, rt1.c0, rt1.c1, t0.c0 FROM t0, v0, rt1, vt0 GROUP BY v0.c1, v0.c0, vt0.c0, rt1.c2, v0.c2, rt1.c0, rt1.c1, t0.c0;
SELECT v0.c1, v0.c0, vt0.c0, rt1.c2, v0.c2, rt1.c0, rt1.c1, t0.c0 FROM t0, v0, rt1, vt0 GROUP BY v0.c1, v0.c0, vt0.c0, rt1.c2, v0.c2, rt1.c0, rt1.c1, t0.c0 HAVING COUNT(CAST(t0.c2 AS TEXT)) UNION ALL SELECT ALL v0.c1, v0.c0, vt0.c0, rt1.c2, v0.c2, rt1.c0, rt1.c1, t0.c0 FROM t0, v0, rt1, vt0 GROUP BY v0.c1, v0.c0, vt0.c0, rt1.c2, v0.c2, rt1.c0, rt1.c1, t0.c0 HAVING (NOT (COUNT(CAST(t0.c2 AS TEXT)))) UNION ALL SELECT v0.c1, v0.c0, vt0.c0, rt1.c2, v0.c2, rt1.c0, rt1.c1, t0.c0 FROM t0, v0, rt1, vt0 GROUP BY v0.c1, v0.c0, vt0.c0, rt1.c2, v0.c2, rt1.c0, rt1.c1, t0.c0 HAVING ((COUNT(CAST(t0.c2 AS TEXT))) ISNULL);
SELECT ALL v0.c1, v0.c0, vt0.c0, rt1.c2, v0.c2, rt1.c0, rt1.c1, t0.c0 FROM t0, v0, rt1, vt0 GROUP BY v0.c1, v0.c0, vt0.c0, rt1.c2, v0.c2, rt1.c0, rt1.c1, t0.c0;
SELECT ALL t0.c2 FROM vt0, t0;
SELECT t0.c2 FROM vt0, t0 WHERE (t0.c0) UNION ALL SELECT ALL t0.c2 FROM vt0, t0 WHERE ((NOT (t0.c0))) UNION ALL SELECT t0.c2 FROM vt0, t0 WHERE (((t0.c0) ISNULL));
SELECT ALL t0.c2 FROM vt0, t0;
SELECT DISTINCT * FROM v0, rt1 CROSS JOIN vt0 ON ((((((((rt1.c2)OR(((rt1.c0) IS TRUE))))AND((rt1.c2 IN ()))))OR(RTRIM(rt1.c0))))OR(CAST(rt1.c2 AS NUMERIC)));
SELECT DISTINCT * FROM v0, rt1 CROSS JOIN vt0 ON ((((((((rt1.c2)OR(((rt1.c0) IS TRUE))))AND((rt1.c2 IN ()))))OR(RTRIM(rt1.c0))))OR(CAST(rt1.c2 AS NUMERIC))) WHERE (CASE WHEN ((rt1.c0)>>(v0.c0)) THEN SQLITE_VERSION() END) UNION SELECT DISTINCT * FROM v0, rt1 CROSS JOIN vt0 ON ((((((((rt1.c2)OR(((rt1.c0) IS TRUE))))AND((rt1.c2 IN ()))))OR(RTRIM(rt1.c0))))OR(CAST(rt1.c2 AS NUMERIC))) WHERE ((NOT (CASE WHEN ((rt1.c0)>>(v0.c0)) THEN SQLITE_VERSION() END))) UNION SELECT DISTINCT * FROM v0, rt1 CROSS JOIN vt0 ON ((((((((rt1.c2)OR(((rt1.c0) IS TRUE))))AND((rt1.c2 IN ()))))OR(RTRIM(rt1.c0))))OR(CAST(rt1.c2 AS NUMERIC))) WHERE (((CASE WHEN ((rt1.c0)>>(v0.c0)) THEN SQLITE_VERSION() END) ISNULL));
SELECT DISTINCT * FROM v0, rt1 CROSS JOIN vt0 ON ((((((((rt1.c2)OR(((rt1.c0) IS TRUE))))AND((rt1.c2 IN ()))))OR(RTRIM(rt1.c0))))OR(CAST(rt1.c2 AS NUMERIC)));
SELECT ALL rt1.c2 FROM rt1 GROUP BY rt1.c2;
SELECT ALL rt1.c2 FROM rt1 WHERE (((((((rt1.c1)LIKE(rt1.c0)))OR(((rt1.c0) BETWEEN (rt1.c0) AND (rt1.c0)))))OR((rt1.c2 IN ())))) GROUP BY rt1.c2 UNION SELECT ALL rt1.c2 FROM rt1 WHERE ((NOT (((((((rt1.c1)LIKE(rt1.c0)))OR(((rt1.c0) BETWEEN (rt1.c0) AND (rt1.c0)))))OR((rt1.c2 IN ())))))) GROUP BY rt1.c2 UNION SELECT ALL rt1.c2 FROM rt1 WHERE (((((((((rt1.c1)LIKE(rt1.c0)))OR(((rt1.c0) BETWEEN (rt1.c0) AND (rt1.c0)))))OR((rt1.c2 IN ())))) ISNULL)) GROUP BY rt1.c2;
SELECT ALL rt1.c2 FROM rt1 GROUP BY rt1.c2;
SELECT ALL rt1.c0, v0.c2, rt1.c1, rt1.c2, v0.c1, v0.c0 FROM rt1 RIGHT OUTER JOIN v0 ON (((((rt1.c0))>((v0.c1)))) NOT BETWEEN (TRIM(rt1.c1, v0.c2)) AND ((NOT (rt1.c1)))) GROUP BY rt1.c0, v0.c2, rt1.c1, rt1.c2, v0.c1, v0.c0;
SELECT ALL rt1.c0, v0.c2, rt1.c1, rt1.c2, v0.c1, v0.c0 FROM rt1 RIGHT OUTER JOIN v0 ON (((((rt1.c0))>((v0.c1)))) NOT BETWEEN (TRIM(rt1.c1, v0.c2)) AND ((NOT (rt1.c1)))) GROUP BY rt1.c0, v0.c2, rt1.c1, rt1.c2, v0.c1, v0.c0 HAVING NULL UNION ALL SELECT rt1.c0, v0.c2, rt1.c1, rt1.c2, v0.c1, v0.c0 FROM rt1 RIGHT OUTER JOIN v0 ON (((((rt1.c0))>((v0.c1)))) NOT BETWEEN (TRIM(rt1.c1, v0.c2)) AND ((NOT (rt1.c1)))) GROUP BY rt1.c0, v0.c2, rt1.c1, rt1.c2, v0.c1, v0.c0 HAVING (NOT (NULL)) UNION ALL SELECT ALL rt1.c0, v0.c2, rt1.c1, rt1.c2, v0.c1, v0.c0 FROM rt1 RIGHT OUTER JOIN v0 ON (((((rt1.c0))>((v0.c1)))) NOT BETWEEN (TRIM(rt1.c1, v0.c2)) AND ((NOT (rt1.c1)))) GROUP BY rt1.c0, v0.c2, rt1.c1, rt1.c2, v0.c1, v0.c0 HAVING ((NULL) ISNULL);
SELECT ALL rt1.c0, v0.c2, rt1.c1, rt1.c2, v0.c1, v0.c0 FROM rt1 RIGHT OUTER JOIN v0 ON (((((rt1.c0))>((v0.c1)))) NOT BETWEEN (TRIM(rt1.c1, v0.c2)) AND ((NOT (rt1.c1)))) GROUP BY rt1.c0, v0.c2, rt1.c1, rt1.c2, v0.c1, v0.c0;
SELECT ALL rt1.c0, v0.c2, rt1.c1, rt1.c2, v0.c1, v0.c0 FROM rt1 RIGHT OUTER JOIN v0 ON (((((rt1.c0))>((v0.c1)))) NOT BETWEEN (TRIM(rt1.c1, v0.c2)) AND ((NOT (rt1.c1)))) GROUP BY rt1.c0, v0.c2, rt1.c1, rt1.c2, v0.c1, v0.c0 HAVING NULL UNION ALL SELECT rt1.c0, v0.c2, rt1.c1, rt1.c2, v0.c1, v0.c0 FROM rt1 RIGHT OUTER JOIN v0 ON (((((rt1.c0))>((v0.c1)))) NOT BETWEEN (TRIM(rt1.c1, v0.c2)) AND ((NOT (rt1.c1)))) GROUP BY rt1.c0, v0.c2, rt1.c1, rt1.c2, v0.c1, v0.c0 HAVING (NOT (NULL)) UNION ALL SELECT ALL rt1.c0, v0.c2, rt1.c1, rt1.c2, v0.c1, v0.c0 FROM rt1 RIGHT OUTER JOIN v0 ON (((((rt1.c0))>((v0.c1)))) NOT BETWEEN (TRIM(rt1.c1, v0.c2)) AND ((NOT (rt1.c1)))) GROUP BY rt1.c0, v0.c2, rt1.c1, rt1.c2, v0.c1, v0.c0 HAVING ((NULL) ISNULL);
SELECT ALL rt1.c0, v0.c2, rt1.c1, rt1.c2, v0.c1, v0.c0 FROM rt1 RIGHT OUTER JOIN v0 ON (((((rt1.c0))>((v0.c1)))) NOT BETWEEN (TRIM(rt1.c1, v0.c2)) AND ((NOT (rt1.c1)))) GROUP BY rt1.c0, v0.c2, rt1.c1, rt1.c2, v0.c1, v0.c0;
SELECT ALL v0.c0, t0.c2 FROM t0, v0, rt1, vt0;
SELECT v0.c0, t0.c2 FROM t0 NOT INDEXED, v0, rt1, vt0 WHERE (v0.c2) UNION ALL SELECT ALL v0.c0, t0.c2 FROM t0, v0, rt1, vt0 WHERE ((NOT (v0.c2))) UNION ALL SELECT v0.c0, t0.c2 FROM t0, v0, rt1, vt0 WHERE (((v0.c2) ISNULL));
SELECT ALL v0.c0, t0.c2 FROM t0, v0, rt1, vt0;
SELECT DISTINCT * FROM rt1, vt0;
SELECT DISTINCT * FROM rt1, vt0 WHERE (rt1.c2) UNION SELECT DISTINCT * FROM rt1, vt0 WHERE ((NOT (rt1.c2))) UNION SELECT DISTINCT * FROM rt1, vt0 WHERE (((rt1.c2) ISNULL));
SELECT DISTINCT * FROM rt1, vt0;
SELECT ALL v0.c1, v0.c0, rt1.c1, rt1.c0 FROM rt1 FULL OUTER JOIN v0 ON (CAST(v0.c0 AS NUMERIC) IN ()) GROUP BY v0.c1, v0.c0, rt1.c1, rt1.c0;
SELECT ALL v0.c1, v0.c0, rt1.c1, rt1.c0 FROM rt1 FULL OUTER JOIN v0 ON (CAST(v0.c0 AS NUMERIC) IN ()) WHERE ((NOT (((v0.c0)IS NOT(rt1.c2))))) GROUP BY v0.c1, v0.c0, rt1.c1, rt1.c0 UNION SELECT ALL v0.c1, v0.c0, rt1.c1, rt1.c0 FROM rt1 FULL OUTER JOIN v0 ON (CAST(v0.c0 AS NUMERIC) IN ()) WHERE ((NOT ((NOT (((v0.c0)IS NOT(rt1.c2))))))) GROUP BY v0.c1, v0.c0, rt1.c1, rt1.c0 UNION SELECT v0.c1, v0.c0, rt1.c1, rt1.c0 FROM rt1 FULL OUTER JOIN v0 ON (CAST(v0.c0 AS NUMERIC) IN ()) WHERE ((((NOT (((v0.c0)IS NOT(rt1.c2))))) ISNULL)) GROUP BY v0.c1, v0.c0, rt1.c1, rt1.c0;
SELECT ALL v0.c1, v0.c0, rt1.c1, rt1.c0 FROM rt1 FULL OUTER JOIN v0 ON (CAST(v0.c0 AS NUMERIC) IN ()) GROUP BY v0.c1, v0.c0, rt1.c1, rt1.c0;
SELECT t0.c2, rt1.c2, v0.c1, rt1.c1, rt1.c0, v0.c0 FROM t0, rt1 NATURAL JOIN v0 GROUP BY t0.c2, rt1.c2, v0.c1, rt1.c1, rt1.c0, v0.c0;
SELECT ALL t0.c2, rt1.c2, v0.c1, rt1.c1, rt1.c0, v0.c0 FROM t0, rt1 NATURAL JOIN v0 GROUP BY t0.c2, rt1.c2, v0.c1, rt1.c1, rt1.c0, v0.c0 HAVING (+ (MIN(SUM(t0.c2)))) UNION ALL SELECT ALL t0.c2, rt1.c2, v0.c1, rt1.c1, rt1.c0, v0.c0 FROM t0, rt1 NATURAL JOIN v0 GROUP BY t0.c2, rt1.c2, v0.c1, rt1.c1, rt1.c0, v0.c0 HAVING (NOT ((+ (MIN(SUM(t0.c2)))))) UNION ALL SELECT t0.c2, rt1.c2, v0.c1, rt1.c1, rt1.c0, v0.c0 FROM t0, rt1 NATURAL JOIN v0 GROUP BY t0.c2, rt1.c2, v0.c1, rt1.c1, rt1.c0, v0.c0 HAVING (((+ (MIN(SUM(t0.c2))))) ISNULL);
SELECT ALL v0.c2, v0.c1 FROM v0;
SELECT ALL v0.c2, v0.c1 FROM v0 WHERE ((((+ (0.07355797970966749))) NOT BETWEEN (((v0.c0)==(v0.c2))) AND (CASE v0.c1  WHEN v0.c0 THEN v0.c0 END))) UNION ALL SELECT ALL v0.c2, v0.c1 FROM v0 WHERE ((NOT ((((+ (0.07355797970966749))) NOT BETWEEN (((v0.c0)=(v0.c2))) AND (CASE v0.c1  WHEN v0.c0 THEN v0.c0 END))))) UNION ALL SELECT v0.c2, v0.c1 FROM v0 WHERE ((((((+ (0.07355797970966749))) NOT BETWEEN (((v0.c0)=(v0.c2))) AND (CASE v0.c1  WHEN v0.c0 THEN v0.c0 END))) ISNULL));
SELECT ALL v0.c2, v0.c1 FROM v0;
SELECT DISTINCT * FROM t0, rt1, vt0;
SELECT DISTINCT * FROM t0, rt1, vt0 WHERE ((((vt0.c0 IN ('1882754698')))OR(((((rt1.c2)AND(t0.c0)))AND(rt1.c1))))) UNION SELECT DISTINCT * FROM t0, rt1, vt0 WHERE ((NOT ((((vt0.c0 IN ('1882754698')))OR(((((rt1.c2)AND(t0.c0)))AND(rt1.c1))))))) UNION SELECT DISTINCT * FROM t0, rt1, vt0 WHERE ((((((vt0.c0 IN ('1882754698')))OR(((((rt1.c2)AND(t0.c0)))AND(rt1.c1))))) ISNULL));
SELECT DISTINCT * FROM t0, rt1, vt0;
SELECT t0.c2, t0.c1 FROM t0 NATURAL JOIN v0 GROUP BY t0.c2, t0.c1;
SELECT t0.c2, t0.c1 FROM t0 NATURAL JOIN v0 WHERE ('92060962') GROUP BY t0.c2, t0.c1 UNION SELECT t0.c2, t0.c1 FROM t0 NATURAL JOIN v0 WHERE ((NOT ('92060962'))) GROUP BY t0.c2, t0.c1 UNION SELECT ALL t0.c2, t0.c1 FROM t0 NATURAL JOIN v0 WHERE ((('92060962') ISNULL)) GROUP BY t0.c2, t0.c1;
SELECT t0.c2, t0.c1 FROM t0 NATURAL JOIN v0 GROUP BY t0.c2, t0.c1;
SELECT v0.c1, v0.c0 FROM v0 GROUP BY v0.c1, v0.c0;
SELECT v0.c1, v0.c0 FROM v0 GROUP BY v0.c1, v0.c0 HAVING CAST(COUNT(TOTAL(SUM(v0.c2))) AS REAL) UNION ALL SELECT ALL v0.c1, v0.c0 FROM v0 GROUP BY v0.c1, v0.c0 HAVING (NOT (CAST(COUNT(TOTAL(SUM(v0.c2))) AS REAL))) UNION ALL SELECT v0.c1, v0.c0 FROM v0 GROUP BY v0.c1, v0.c0 HAVING ((CAST(COUNT(TOTAL(SUM(v0.c2))) AS REAL)) ISNULL);
SELECT vt0.c0, t0.c1 FROM vt0, t0;
SELECT ALL vt0.c0, t0.c1 FROM vt0, t0 WHERE ((((((t0.c1) BETWEEN (t0.c1) AND (x'')), CAST(t0.c1 AS INTEGER), ((t0.c0)*(vt0.c0))))>(((((t0.c1))<=((vt0.c0))), (NOT (t0.c0)), TRIM(t0.c1))))) UNION ALL SELECT vt0.c0, t0.c1 FROM vt0, t0 WHERE ((NOT ((((((t0.c1) BETWEEN (t0.c1) AND (x'')), CAST(t0.c1 AS INTEGER), ((t0.c0)*(vt0.c0))))>(((((t0.c1))<=((vt0.c0))), (NOT (t0.c0)), TRIM(t0.c1))))))) UNION ALL SELECT vt0.c0, t0.c1 FROM vt0, t0 WHERE ((((((((t0.c1) BETWEEN (t0.c1) AND (x'')), CAST(t0.c1 AS INTEGER), ((t0.c0)*(vt0.c0))))>(((((t0.c1))<=((vt0.c0))), (NOT (t0.c0)), TRIM(t0.c1))))) ISNULL));
SELECT vt0.c0, t0.c1 FROM vt0, t0;
SELECT DISTINCT * FROM rt1, v0, vt0 FULL OUTER JOIN t0 ON ((((((((((((CASE vt0.c0  WHEN t0.c2 THEN 0.1983487075917878 ELSE v0.c0 END)OR(TRIM(DISTINCT vt0.c0, v0.c0))))OR((((vt0.c0))<((t0.c0))))))OR((((t0.c1, v0.c2, v0.c2)) BETWEEN ((rt1.c2, v0.c1, t0.c1)) AND ((rt1.c0, '-376655294', rt1.c2))))))AND(((v0.c1)AND(rt1.c1)))))AND(CAST(v0.c2 AS REAL))))AND(rt1.c1));
SELECT DISTINCT * FROM rt1, v0, vt0 FULL OUTER JOIN t0 ON ((((((((((((CASE vt0.c0  WHEN t0.c2 THEN 0.1983487075917878 ELSE v0.c0 END)OR(TRIM(DISTINCT vt0.c0, v0.c0))))OR((((vt0.c0))<((t0.c0))))))OR((((t0.c1, v0.c2, v0.c2)) BETWEEN ((rt1.c2, v0.c1, t0.c1)) AND ((rt1.c0, '-376655294', rt1.c2))))))AND(((v0.c1)AND(rt1.c1)))))AND(CAST(v0.c2 AS REAL))))AND(rt1.c1)) WHERE (-1.466586528E9) UNION SELECT DISTINCT * FROM rt1, v0, vt0 FULL OUTER JOIN t0 ON ((((((((((((CASE vt0.c0  WHEN t0.c2 THEN 0.1983487075917878 ELSE v0.c0 END)OR(TRIM(DISTINCT vt0.c0, v0.c0))))OR((((vt0.c0))<((t0.c0))))))OR((((t0.c1, v0.c2, v0.c2)) BETWEEN ((rt1.c2, v0.c1, t0.c1)) AND ((rt1.c0, '-376655294', rt1.c2))))))AND(((v0.c1)AND(rt1.c1)))))AND(CAST(v0.c2 AS REAL))))AND(rt1.c1)) WHERE ((NOT (-1.466586528E9))) UNION SELECT DISTINCT * FROM rt1, v0, vt0 FULL OUTER JOIN t0 ON ((((((((((((CASE vt0.c0  WHEN t0.c2 THEN 0.1983487075917878 ELSE v0.c0 END)OR(TRIM(DISTINCT vt0.c0, v0.c0))))OR((((vt0.c0))<((t0.c0))))))OR((((t0.c1, v0.c2, v0.c2)) BETWEEN ((rt1.c2, v0.c1, t0.c1)) AND ((rt1.c0, '-376655294', rt1.c2))))))AND(((v0.c1)AND(rt1.c1)))))AND(CAST(v0.c2 AS REAL))))AND(rt1.c1)) WHERE (((-1.466586528E9) ISNULL));
SELECT DISTINCT * FROM rt1, v0, vt0 FULL OUTER JOIN t0 ON ((((((((((((CASE vt0.c0  WHEN t0.c2 THEN 0.1983487075917878 ELSE v0.c0 END)OR(TRIM(DISTINCT vt0.c0, v0.c0))))OR((((vt0.c0))<((t0.c0))))))OR((((t0.c1, v0.c2, v0.c2)) BETWEEN ((rt1.c2, v0.c1, t0.c1)) AND ((rt1.c0, '-376655294', rt1.c2))))))AND(((v0.c1)AND(rt1.c1)))))AND(CAST(v0.c2 AS REAL))))AND(rt1.c1));
SELECT rt1.c0, t0.c2 FROM t0, rt1 GROUP BY rt1.c0, t0.c2;
SELECT ALL rt1.c0, t0.c2 FROM t0, rt1 NOT INDEXED WHERE (CASE rt1.c0  WHEN rt1.c2 THEN x'' END COLLATE RTRIM) GROUP BY rt1.c0, t0.c2 UNION SELECT rt1.c0, t0.c2 FROM t0, rt1 WHERE ((NOT (CASE rt1.c0  WHEN rt1.c2 THEN x'' END COLLATE RTRIM))) GROUP BY rt1.c0, t0.c2 UNION SELECT rt1.c0, t0.c2 FROM t0, rt1 WHERE (((CASE rt1.c0  WHEN rt1.c2 THEN x'' END COLLATE RTRIM) ISNULL)) GROUP BY rt1.c0, t0.c2;
SELECT rt1.c0, t0.c2 FROM t0, rt1 GROUP BY rt1.c0, t0.c2;
SELECT rt1.c1, rt1.c0, t0.c1, t0.c2, v0.c1, t0.c0, rt1.c2 FROM v0, rt1, t0, vt0 GROUP BY rt1.c1, rt1.c0, t0.c1, t0.c2, v0.c1, t0.c0, rt1.c2;
SELECT rt1.c1, rt1.c0, t0.c1, t0.c2, v0.c1, t0.c0, rt1.c2 FROM v0, rt1, t0, vt0 GROUP BY rt1.c1, rt1.c0, t0.c1, t0.c2, v0.c1, t0.c0, rt1.c2 HAVING GROUP_CONCAT(v0.c1) UNION ALL SELECT ALL rt1.c1, rt1.c0, t0.c1, t0.c2, v0.c1, t0.c0, rt1.c2 FROM v0, rt1, t0, vt0 GROUP BY rt1.c1, rt1.c0, t0.c1, t0.c2, v0.c1, t0.c0, rt1.c2 HAVING (NOT (GROUP_CONCAT(v0.c1))) UNION ALL SELECT rt1.c1, rt1.c0, t0.c1, t0.c2, v0.c1, t0.c0, rt1.c2 FROM v0, rt1, t0, vt0 GROUP BY rt1.c1, rt1.c0, t0.c1, t0.c2, v0.c1, t0.c0, rt1.c2 HAVING ((GROUP_CONCAT(v0.c1)) ISNULL);
SELECT rt1.c1, rt1.c0, t0.c1, t0.c2, v0.c1, t0.c0, rt1.c2 FROM v0, rt1, t0, vt0 GROUP BY rt1.c1, rt1.c0, t0.c1, t0.c2, v0.c1, t0.c0, rt1.c2;
SELECT rt1.c1, rt1.c0, t0.c1, t0.c2, v0.c1, t0.c0, rt1.c2 FROM v0, rt1, t0, vt0 GROUP BY rt1.c1, rt1.c0, t0.c1, t0.c2, v0.c1, t0.c0, rt1.c2 HAVING GROUP_CONCAT(v0.c1) UNION ALL SELECT ALL rt1.c1, rt1.c0, t0.c1, t0.c2, v0.c1, t0.c0, rt1.c2 FROM v0, rt1, t0, vt0 GROUP BY rt1.c1, rt1.c0, t0.c1, t0.c2, v0.c1, t0.c0, rt1.c2 HAVING (NOT (GROUP_CONCAT(v0.c1))) UNION ALL SELECT rt1.c1, rt1.c0, t0.c1, t0.c2, v0.c1, t0.c0, rt1.c2 FROM v0, rt1, t0, vt0 GROUP BY rt1.c1, rt1.c0, t0.c1, t0.c2, v0.c1, t0.c0, rt1.c2 HAVING ((GROUP_CONCAT(v0.c1)) ISNULL);
SELECT rt1.c1, rt1.c0, t0.c1, t0.c2, v0.c1, t0.c0, rt1.c2 FROM v0, rt1, t0, vt0 GROUP BY rt1.c1, rt1.c0, t0.c1, t0.c2, v0.c1, t0.c0, rt1.c2;
SELECT v0.c2, t0.c2, rt1.c2, v0.c0, rt1.c0 FROM rt1, v0, t0;
SELECT ALL v0.c2, t0.c2, rt1.c2, v0.c0, rt1.c0 FROM rt1, v0, t0 WHERE (NULL) UNION ALL SELECT ALL v0.c2, t0.c2, rt1.c2, v0.c0, rt1.c0 FROM rt1, v0, t0 WHERE ((NOT (NULL))) UNION ALL SELECT v0.c2, t0.c2, rt1.c2, v0.c0, rt1.c0 FROM rt1, v0, t0 WHERE (((NULL) ISNULL));
SELECT v0.c2, t0.c2, rt1.c2, v0.c0, rt1.c0 FROM rt1, v0, t0;
SELECT DISTINCT * FROM t0, vt0;
SELECT DISTINCT * FROM t0, vt0 WHERE ((((t0.c2)) NOT BETWEEN (((t0.c0 IN ()))) AND ((SQLITE_COMPILEOPTION_USED(t0.c0))))) UNION SELECT DISTINCT * FROM t0, vt0 WHERE ((NOT ((((t0.c2)) NOT BETWEEN (((t0.c0 IN ()))) AND ((SQLITE_COMPILEOPTION_USED(t0.c0))))))) UNION SELECT DISTINCT * FROM t0, vt0 WHERE ((((((t0.c2)) NOT BETWEEN (((t0.c0 IN ()))) AND ((SQLITE_COMPILEOPTION_USED(t0.c0))))) ISNULL));
SELECT DISTINCT * FROM t0, vt0;
SELECT ALL t0.c2, t0.c0, vt0.c0, t0.c1 FROM t0, vt0 GROUP BY t0.c2, t0.c0, vt0.c0, t0.c1;
SELECT t0.c2, t0.c0, vt0.c0, t0.c1 FROM t0, vt0 WHERE ((NOT (t0.c0 COLLATE BINARY))) GROUP BY t0.c2, t0.c0, vt0.c0, t0.c1 UNION SELECT t0.c2, t0.c0, vt0.c0, t0.c1 FROM t0, vt0 WHERE ((NOT ((NOT (t0.c0 COLLATE BINARY))))) GROUP BY t0.c2, t0.c0, vt0.c0, t0.c1 UNION SELECT ALL t0.c2, t0.c0, vt0.c0, t0.c1 FROM t0, vt0 WHERE ((((NOT (t0.c0 COLLATE BINARY))) ISNULL)) GROUP BY t0.c2, t0.c0, vt0.c0, t0.c1;
SELECT ALL t0.c2, t0.c0, vt0.c0, t0.c1 FROM t0, vt0 GROUP BY t0.c2, t0.c0, vt0.c0, t0.c1;
SELECT ALL t0.c2 FROM t0, vt0 GROUP BY t0.c2;
SELECT t0.c2 FROM t0, vt0 GROUP BY t0.c2 HAVING CAST(COUNT(t0.c1) AS TEXT) UNION ALL SELECT t0.c2 FROM t0, vt0 GROUP BY t0.c2 HAVING (NOT (CAST(COUNT(t0.c1) AS TEXT))) UNION ALL SELECT ALL t0.c2 FROM t0, vt0 GROUP BY t0.c2 HAVING ((CAST(COUNT(t0.c1) AS TEXT)) ISNULL);
SELECT ALL t0.c2 FROM t0, vt0 GROUP BY t0.c2;
SELECT t0.c2 FROM t0, vt0 GROUP BY t0.c2 HAVING CAST(COUNT(t0.c1) AS TEXT) UNION ALL SELECT t0.c2 FROM t0, vt0 GROUP BY t0.c2 HAVING (NOT (CAST(COUNT(t0.c1) AS TEXT))) UNION ALL SELECT ALL t0.c2 FROM t0, vt0 GROUP BY t0.c2 HAVING ((CAST(COUNT(t0.c1) AS TEXT)) ISNULL);
SELECT ALL t0.c2 FROM t0, vt0 GROUP BY t0.c2;
SELECT t0.c2, v0.c0, t0.c1, rt1.c2 FROM rt1 RIGHT OUTER JOIN v0 ON ((rt1.c2) BETWEEN (rt1.c1 COLLATE NOCASE) AND (((v0.c1) IS FALSE))) RIGHT OUTER JOIN t0 ON ((((v0.c0)GLOB(0.5065989591775624))) BETWEEN (t0.c2) AND ((((x'bc69'))==((vt0.c0))))) LEFT OUTER JOIN vt0 ON CAST(((t0.c0) NOT BETWEEN (t0.c1) AND (t0.c1)) AS INTEGER);
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((((((((((((TYPEOF(vt0.c0))OR(CASE WHEN vt0.c0 THEN vt0.c0 END)))AND(((vt0.c0)%(vt0.c0)))))OR(vt0.c0)))OR(vt0.c0)))OR(0.954686925456471)))AND(CAST(vt0.c0 AS REAL)))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((((((((((((TYPEOF(vt0.c0))OR(CASE WHEN vt0.c0 THEN vt0.c0 END)))AND(((vt0.c0)%(vt0.c0)))))OR(vt0.c0)))OR(vt0.c0)))OR(0.954686925456471)))AND(CAST(vt0.c0 AS REAL)))))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((((((((((((TYPEOF(vt0.c0))OR(CASE WHEN vt0.c0 THEN vt0.c0 END)))AND(((vt0.c0)%(vt0.c0)))))OR(vt0.c0)))OR(vt0.c0)))OR(0.954686925456471)))AND(CAST(vt0.c0 AS REAL)))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE ((((vt0.c0 COLLATE RTRIM))<=((vt0.c0)))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT ((((vt0.c0 COLLATE RTRIM))<=((vt0.c0)))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((((((vt0.c0 COLLATE RTRIM))<=((vt0.c0)))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT rt1.c0, v0.c2 FROM v0, rt1, vt0 GROUP BY rt1.c0, v0.c2;
SELECT rt1.c0, v0.c2 FROM v0, rt1, vt0 GROUP BY rt1.c0, v0.c2 HAVING ((((vt0.c0)||(GROUP_CONCAT(vt0.c0))))>>(COUNT(*))) UNION ALL SELECT rt1.c0, v0.c2 FROM v0, rt1, vt0 GROUP BY rt1.c0, v0.c2 HAVING (NOT (((((vt0.c0)||(GROUP_CONCAT(vt0.c0))))>>(COUNT(*))))) UNION ALL SELECT ALL rt1.c0, v0.c2 FROM v0, rt1, vt0 GROUP BY rt1.c0, v0.c2 HAVING ((((((vt0.c0)||(GROUP_CONCAT(vt0.c0))))>>(COUNT(*)))) ISNULL);
SELECT rt1.c0, v0.c2 FROM v0, rt1, vt0 GROUP BY rt1.c0, v0.c2;
SELECT rt1.c0, v0.c2 FROM v0, rt1, vt0 GROUP BY rt1.c0, v0.c2 HAVING ((((vt0.c0)||(GROUP_CONCAT(vt0.c0))))>>(COUNT(*))) UNION ALL SELECT rt1.c0, v0.c2 FROM v0, rt1, vt0 GROUP BY rt1.c0, v0.c2 HAVING (NOT (((((vt0.c0)||(GROUP_CONCAT(vt0.c0))))>>(COUNT(*))))) UNION ALL SELECT ALL rt1.c0, v0.c2 FROM v0, rt1, vt0 GROUP BY rt1.c0, v0.c2 HAVING ((((((vt0.c0)||(GROUP_CONCAT(vt0.c0))))>>(COUNT(*)))) ISNULL);
SELECT rt1.c0, v0.c2 FROM v0, rt1, vt0 GROUP BY rt1.c0, v0.c2;
SELECT vt0.c0, rt1.c2, v0.c2, t0.c0 FROM vt0, t0, rt1 CROSS JOIN v0 ON NULL;
SELECT ALL vt0.c0, rt1.c2, v0.c2, t0.c0 FROM vt0, t0, rt1 CROSS JOIN v0 ON NULL WHERE ((vt0.c0 COLLATE NOCASE IN ())) UNION ALL SELECT vt0.c0, rt1.c2, v0.c2, t0.c0 FROM vt0, t0, rt1 CROSS JOIN v0 ON NULL WHERE ((NOT ((vt0.c0 COLLATE NOCASE IN ())))) UNION ALL SELECT ALL vt0.c0, rt1.c2, v0.c2, t0.c0 FROM vt0, t0, rt1 CROSS JOIN v0 ON NULL WHERE ((((vt0.c0 COLLATE NOCASE IN ())) ISNULL));
SELECT vt0.c0, rt1.c2, v0.c2, t0.c0 FROM vt0, t0, rt1 CROSS JOIN v0 ON NULL;
SELECT DISTINCT t0.c0, t0.c1, t0.c2 FROM t0;
SELECT DISTINCT t0.c0, t0.c1, t0.c2 FROM t0 WHERE (((((t0.c0)!=(t0.c0))) BETWEEN (CASE WHEN t0.c2 THEN t0.c0 ELSE 'je[A뾯 ' END) AND ('YwuJr^'))) UNION SELECT DISTINCT t0.c0, t0.c1, t0.c2 FROM t0 WHERE ((NOT (((((t0.c0)!=(t0.c0))) BETWEEN (CASE WHEN t0.c2 THEN t0.c0 ELSE 'je[A뾯 ' END) AND ('YwuJr^'))))) UNION SELECT DISTINCT t0.c0, t0.c1, t0.c2 FROM t0 WHERE (((((((t0.c0)!=(t0.c0))) BETWEEN (CASE WHEN t0.c2 THEN t0.c0 ELSE 'je[A뾯 ' END) AND ('YwuJr^'))) ISNULL));
SELECT DISTINCT t0.c0, t0.c1, t0.c2 FROM t0;
SELECT ALL vt0.c0, t0.c2, v0.c2, v0.c1 FROM v0, rt1, vt0, t0 GROUP BY vt0.c0, t0.c2, v0.c2, v0.c1;
SELECT vt0.c0, t0.c2, v0.c2, v0.c1 FROM v0, rt1, vt0, t0 WHERE (((((((((((((rt1.c1)AND(v0.c2)))OR(rt1.c0)))OR(((((((((rt1.c1)OR(t0.c1)))OR(v0.c1)))OR(t0.c2)))OR(NULL)))))AND(((((rt1.c1)AND(vt0.c0)))OR(vt0.c0)))))OR(CAST(rt1.c0 AS TEXT))))OR(((t0.c1)IS NOT(t0.c0))))) GROUP BY vt0.c0, t0.c2, v0.c2, v0.c1 UNION SELECT vt0.c0, t0.c2, v0.c2, v0.c1 FROM v0, rt1, vt0, t0 WHERE ((NOT (((((((((((((rt1.c1)AND(v0.c2)))OR(rt1.c0)))OR(((((((((rt1.c1)OR(t0.c1)))OR(v0.c1)))OR(t0.c2)))OR(NULL)))))AND(((((rt1.c1)AND(vt0.c0)))OR(vt0.c0)))))OR(CAST(rt1.c0 AS TEXT))))OR(((t0.c1)IS NOT(t0.c0))))))) GROUP BY vt0.c0, t0.c2, v0.c2, v0.c1 UNION SELECT ALL vt0.c0, t0.c2, v0.c2, v0.c1 FROM v0, rt1, vt0, t0 WHERE (((((((((((((((rt1.c1)AND(v0.c2)))OR(rt1.c0)))OR(((((((((rt1.c1)OR(t0.c1)))OR(v0.c1)))OR(t0.c2)))OR(NULL)))))AND(((((rt1.c1)AND(vt0.c0)))OR(vt0.c0)))))OR(CAST(rt1.c0 AS TEXT))))OR(((t0.c1)IS NOT(t0.c0))))) ISNULL)) GROUP BY vt0.c0, t0.c2, v0.c2, v0.c1;
SELECT ALL vt0.c0, t0.c2, v0.c2, v0.c1 FROM v0, rt1, vt0, t0 GROUP BY vt0.c0, t0.c2, v0.c2, v0.c1;
SELECT vt0.c0, rt1.c0 FROM vt0, rt1 GROUP BY vt0.c0, rt1.c0;
SELECT vt0.c0, rt1.c0 FROM vt0, rt1 GROUP BY vt0.c0, rt1.c0 HAVING MIN(rt1.c1) UNION ALL SELECT ALL vt0.c0, rt1.c0 FROM vt0, rt1 GROUP BY vt0.c0, rt1.c0 HAVING (NOT (MIN(rt1.c1))) UNION ALL SELECT ALL vt0.c0, rt1.c0 FROM vt0, rt1 GROUP BY vt0.c0, rt1.c0 HAVING ((MIN(rt1.c1)) ISNULL);
SELECT vt0.c0, rt1.c0 FROM vt0, rt1 GROUP BY vt0.c0, rt1.c0;
SELECT vt0.c0, rt1.c0 FROM vt0, rt1 GROUP BY vt0.c0, rt1.c0 HAVING MIN(rt1.c1) UNION ALL SELECT ALL vt0.c0, rt1.c0 FROM vt0, rt1 GROUP BY vt0.c0, rt1.c0 HAVING (NOT (MIN(rt1.c1))) UNION ALL SELECT ALL vt0.c0, rt1.c0 FROM vt0, rt1 GROUP BY vt0.c0, rt1.c0 HAVING ((MIN(rt1.c1)) ISNULL);
SELECT vt0.c0, rt1.c0 FROM vt0, rt1 GROUP BY vt0.c0, rt1.c0;
SELECT v0.c1, v0.c0, v0.c2 FROM v0;
SELECT v0.c1, v0.c0, v0.c2 FROM v0 WHERE (TYPEOF(DISTINCT ((((((((v0.c1)AND(v0.c2)))OR(v0.c1)))AND(v0.c2)))OR(v0.c1)))) UNION ALL SELECT ALL v0.c1, v0.c0, v0.c2 FROM v0 WHERE ((NOT (TYPEOF(DISTINCT ((((((((v0.c1)AND(v0.c2)))OR(v0.c1)))AND(v0.c2)))OR(v0.c1)))))) UNION ALL SELECT ALL v0.c1, v0.c0, v0.c2 FROM v0 WHERE (((TYPEOF(DISTINCT ((((((((v0.c1)AND(v0.c2)))OR(v0.c1)))AND(v0.c2)))OR(v0.c1)))) ISNULL));
SELECT v0.c1, v0.c0, v0.c2 FROM v0;
SELECT DISTINCT * FROM rt1, t0, v0;
SELECT DISTINCT * FROM rt1, t0, v0 WHERE ((+ (0.8761666990051803))) UNION SELECT DISTINCT * FROM rt1, t0, v0 WHERE ((NOT ((+ (0.8761666990051803))))) UNION SELECT DISTINCT * FROM rt1, t0, v0 WHERE ((((+ (0.8761666990051803))) ISNULL));
SELECT DISTINCT * FROM rt1, t0, v0;
SELECT ALL rt1.c2, t0.c0, rt1.c0, t0.c2 FROM vt0, t0, rt1 GROUP BY rt1.c2, t0.c0, rt1.c0, t0.c2;
SELECT ALL rt1.c2, t0.c0, rt1.c0, t0.c2 FROM vt0, t0, rt1 WHERE ((~ (((rt1.c0)/(t0.c1))))) GROUP BY rt1.c2, t0.c0, rt1.c0, t0.c2 UNION SELECT rt1.c2, t0.c0, rt1.c0, t0.c2 FROM vt0, t0, rt1 WHERE ((NOT ((~ (((rt1.c0)/(t0.c1))))))) GROUP BY rt1.c2, t0.c0, rt1.c0, t0.c2 UNION SELECT ALL rt1.c2, t0.c0, rt1.c0, t0.c2 FROM vt0, t0, rt1 WHERE ((((~ (((rt1.c0)/(t0.c1))))) ISNULL)) GROUP BY rt1.c2, t0.c0, rt1.c0, t0.c2;
SELECT ALL rt1.c2, t0.c0, rt1.c0, t0.c2 FROM vt0, t0, rt1 GROUP BY rt1.c2, t0.c0, rt1.c0, t0.c2;
SELECT ALL t0.c0, v0.c0, rt1.c1, t0.c1 FROM vt0, rt1, v0, t0 GROUP BY t0.c0, v0.c0, rt1.c1, t0.c1;
SELECT t0.c0, v0.c0, rt1.c1, t0.c1 FROM vt0, rt1, v0, t0 GROUP BY t0.c0, v0.c0, rt1.c1, t0.c1 HAVING COUNT(*) UNION ALL SELECT t0.c0, v0.c0, rt1.c1, t0.c1 FROM vt0, rt1, v0, t0 GROUP BY t0.c0, v0.c0, rt1.c1, t0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL t0.c0, v0.c0, rt1.c1, t0.c1 FROM vt0, rt1, v0, t0 GROUP BY t0.c0, v0.c0, rt1.c1, t0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT ALL t0.c0, v0.c0, rt1.c1, t0.c1 FROM vt0, rt1, v0, t0 GROUP BY t0.c0, v0.c0, rt1.c1, t0.c1;
SELECT t0.c0, v0.c0, rt1.c1, t0.c1 FROM vt0, rt1, v0, t0 GROUP BY t0.c0, v0.c0, rt1.c1, t0.c1 HAVING COUNT(*) UNION ALL SELECT t0.c0, v0.c0, rt1.c1, t0.c1 FROM vt0, rt1, v0, t0 GROUP BY t0.c0, v0.c0, rt1.c1, t0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL t0.c0, v0.c0, rt1.c1, t0.c1 FROM vt0, rt1, v0, t0 GROUP BY t0.c0, v0.c0, rt1.c1, t0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT ALL t0.c0, v0.c0, rt1.c1, t0.c1 FROM vt0, rt1, v0, t0 GROUP BY t0.c0, v0.c0, rt1.c1, t0.c1;
SELECT rt1.c1, v0.c0, t0.c0, v0.c2, vt0.c0, t0.c2, v0.c1, rt1.c2, rt1.c0 FROM v0, rt1, vt0, t0;
SELECT ALL rt1.c1, v0.c0, t0.c0, v0.c2, vt0.c0, t0.c2, v0.c1, rt1.c2, rt1.c0 FROM v0, rt1, vt0, t0 WHERE (((((rt1.c2)&(t0.c0)))*(((t0.c0) IS TRUE)))) UNION ALL SELECT ALL rt1.c1, v0.c0, t0.c0, v0.c2, vt0.c0, t0.c2, v0.c1, rt1.c2, rt1.c0 FROM v0, rt1, vt0, t0 WHERE ((NOT (((((rt1.c2)&(t0.c0)))*(((t0.c0) IS TRUE)))))) UNION ALL SELECT ALL rt1.c1, v0.c0, t0.c0, v0.c2, vt0.c0, t0.c2, v0.c1, rt1.c2, rt1.c0 FROM v0, rt1, vt0, t0 WHERE (((((((rt1.c2)&(t0.c0)))*(((t0.c0) IS TRUE)))) ISNULL));
SELECT rt1.c1, v0.c0, t0.c0, v0.c2, vt0.c0, t0.c2, v0.c1, rt1.c2, rt1.c0 FROM v0, rt1, vt0, t0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (vt0.c0) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (vt0.c0))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((vt0.c0) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c0;
SELECT rt1.c1, rt1.c0 FROM rt1 NOT INDEXED WHERE ((NOT ((rt1.c1 IN ())))) GROUP BY rt1.c1, rt1.c0 UNION SELECT ALL rt1.c1, rt1.c0 FROM rt1 WHERE ((NOT ((NOT ((rt1.c1 IN ())))))) GROUP BY rt1.c1, rt1.c0 UNION SELECT rt1.c1, rt1.c0 FROM rt1 WHERE ((((NOT ((rt1.c1 IN ())))) ISNULL)) GROUP BY rt1.c1, rt1.c0;
SELECT rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c0;
SELECT t0.c1, t0.c0 FROM t0 GROUP BY t0.c1, t0.c0;
SELECT t0.c1, t0.c0 FROM t0 GROUP BY t0.c1, t0.c0 HAVING (((COUNT(*))) BETWEEN (((t0.c1 IN ()))) AND ((((((t0.c1)OR(t0.c1)))AND(t0.c0))))) UNION ALL SELECT ALL t0.c1, t0.c0 FROM t0 GROUP BY t0.c1, t0.c0 HAVING (NOT ((((COUNT(*))) BETWEEN (((t0.c1 IN ()))) AND ((((((t0.c1)OR(t0.c1)))AND(t0.c0))))))) UNION ALL SELECT ALL t0.c1, t0.c0 FROM t0 GROUP BY t0.c1, t0.c0 HAVING (((((COUNT(*))) BETWEEN (((t0.c1 IN ()))) AND ((((((t0.c1)OR(t0.c1)))AND(t0.c0)))))) ISNULL);
SELECT t0.c1, t0.c0 FROM t0 GROUP BY t0.c1, t0.c0;
SELECT t0.c1, t0.c0 FROM t0 GROUP BY t0.c1, t0.c0 HAVING (((COUNT(*))) BETWEEN (((t0.c1 IN ()))) AND ((((((t0.c1)OR(t0.c1)))AND(t0.c0))))) UNION ALL SELECT ALL t0.c1, t0.c0 FROM t0 GROUP BY t0.c1, t0.c0 HAVING (NOT ((((COUNT(*))) BETWEEN (((t0.c1 IN ()))) AND ((((((t0.c1)OR(t0.c1)))AND(t0.c0))))))) UNION ALL SELECT ALL t0.c1, t0.c0 FROM t0 GROUP BY t0.c1, t0.c0 HAVING (((((COUNT(*))) BETWEEN (((t0.c1 IN ()))) AND ((((((t0.c1)OR(t0.c1)))AND(t0.c0)))))) ISNULL);
SELECT t0.c1, t0.c0 FROM t0 GROUP BY t0.c1, t0.c0;
SELECT * FROM t0;
SELECT ALL * FROM t0 WHERE (CAST(t0.c2 AS TEXT)) UNION ALL SELECT * FROM t0 WHERE ((NOT (CAST(t0.c2 AS TEXT)))) UNION ALL SELECT * FROM t0 WHERE (((CAST(t0.c2 AS TEXT)) ISNULL));
SELECT * FROM t0;
SELECT DISTINCT * FROM vt0, t0 LEFT OUTER JOIN rt1 ON TRIM(((rt1.c0)>>(t0.c2))) CROSS JOIN v0 ON (+ (0.25154679168048677));
SELECT DISTINCT * FROM vt0, t0 LEFT OUTER JOIN rt1 ON TRIM(((rt1.c0)>>(t0.c2))) CROSS JOIN v0 ON (+ (0.25154679168048677)) WHERE (((((CASE WHEN v0.c2 THEN t0.c2 END)AND(CASE WHEN v0.c2 THEN v0.c0 WHEN rt1.c2 THEN v0.c1 WHEN rt1.c1 THEN t0.c1 ELSE t0.c1 END)))AND(((v0.c2)<=(1866531974))))) UNION SELECT DISTINCT * FROM vt0, t0 LEFT OUTER JOIN rt1 ON TRIM(((rt1.c0)>>(t0.c2))) CROSS JOIN v0 ON (+ (0.25154679168048677)) WHERE ((NOT (((((CASE WHEN v0.c2 THEN t0.c2 END)AND(CASE WHEN v0.c2 THEN v0.c0 WHEN rt1.c2 THEN v0.c1 WHEN rt1.c1 THEN t0.c1 ELSE t0.c1 END)))AND(((v0.c2)<=(1866531974))))))) UNION SELECT DISTINCT * FROM vt0, t0 LEFT OUTER JOIN rt1 ON TRIM(((rt1.c0)>>(t0.c2))) CROSS JOIN v0 ON (+ (0.25154679168048677)) WHERE (((((((CASE WHEN v0.c2 THEN t0.c2 END)AND(CASE WHEN v0.c2 THEN v0.c0 WHEN rt1.c2 THEN v0.c1 WHEN rt1.c1 THEN t0.c1 ELSE t0.c1 END)))AND(((v0.c2)<=(1866531974))))) ISNULL));
SELECT DISTINCT * FROM vt0, t0 LEFT OUTER JOIN rt1 ON TRIM(((rt1.c0)>>(t0.c2))) CROSS JOIN v0 ON (+ (0.25154679168048677));
SELECT t0.c1, rt1.c2, t0.c0, v0.c2, v0.c0, rt1.c0, vt0.c0, t0.c2, v0.c1 FROM v0, t0, rt1, vt0 GROUP BY t0.c1, rt1.c2, t0.c0, v0.c2, v0.c0, rt1.c0, vt0.c0, t0.c2, v0.c1;
SELECT t0.c1, rt1.c2, t0.c0, v0.c2, v0.c0, rt1.c0, vt0.c0, t0.c2, v0.c1 FROM v0, t0, rt1, vt0 WHERE (((((((((((((((t0.c0) IS TRUE))AND(((rt1.c0) BETWEEN (v0.c1) AND (t0.c0)))))AND(v0.c1 COLLATE BINARY)))AND('209334569')))OR((((v0.c0, t0.c0, t0.c0)) BETWEEN ((t0.c1, t0.c2, rt1.c1)) AND ((v0.c1, v0.c0, vt0.c0))))))AND(CASE v0.c2  WHEN rt1.c1 THEN t0.c1 ELSE v0.c2 END)))AND((t0.c2 IN ())))) GROUP BY t0.c1, rt1.c2, t0.c0, v0.c2, v0.c0, rt1.c0, vt0.c0, t0.c2, v0.c1 UNION SELECT ALL t0.c1, rt1.c2, t0.c0, v0.c2, v0.c0, rt1.c0, vt0.c0, t0.c2, v0.c1 FROM v0, t0, rt1, vt0 WHERE ((NOT (((((((((((((((t0.c0) IS TRUE))AND(((rt1.c0) BETWEEN (v0.c1) AND (t0.c0)))))AND(v0.c1 COLLATE BINARY)))AND('209334569')))OR((((v0.c0, t0.c0, t0.c0)) BETWEEN ((t0.c1, t0.c2, rt1.c1)) AND ((v0.c1, v0.c0, vt0.c0))))))AND(CASE v0.c2  WHEN rt1.c1 THEN t0.c1 ELSE v0.c2 END)))AND((t0.c2 IN ())))))) GROUP BY t0.c1, rt1.c2, t0.c0, v0.c2, v0.c0, rt1.c0, vt0.c0, t0.c2, v0.c1 UNION SELECT t0.c1, rt1.c2, t0.c0, v0.c2, v0.c0, rt1.c0, vt0.c0, t0.c2, v0.c1 FROM v0, t0, rt1, vt0 WHERE (((((((((((((((((t0.c0) IS TRUE))AND(((rt1.c0) BETWEEN (v0.c1) AND (t0.c0)))))AND(v0.c1 COLLATE BINARY)))AND('209334569')))OR((((v0.c0, t0.c0, t0.c0)) BETWEEN ((t0.c1, t0.c2, rt1.c1)) AND ((v0.c1, v0.c0, vt0.c0))))))AND(CASE v0.c2  WHEN rt1.c1 THEN t0.c1 ELSE v0.c2 END)))AND((t0.c2 IN ())))) ISNULL)) GROUP BY t0.c1, rt1.c2, t0.c0, v0.c2, v0.c0, rt1.c0, vt0.c0, t0.c2, v0.c1;
SELECT t0.c1, rt1.c2, t0.c0, v0.c2, v0.c0, rt1.c0, vt0.c0, t0.c2, v0.c1 FROM v0, t0, rt1, vt0 GROUP BY t0.c1, rt1.c2, t0.c0, v0.c2, v0.c0, rt1.c0, vt0.c0, t0.c2, v0.c1;
SELECT v0.c2, vt0.c0, v0.c1, rt1.c2 FROM rt1, vt0 LEFT OUTER JOIN v0 ON ((((((((((x'')OR(vt0.c0)))AND(rt1.c2)))AND(rt1.c0)))OR(v0.c0))) IS FALSE) GROUP BY v0.c2, vt0.c0, v0.c1, rt1.c2;
SELECT ALL v0.c2, vt0.c0, v0.c1, rt1.c2 FROM rt1, vt0 LEFT OUTER JOIN v0 ON ((((((((((x'')OR(vt0.c0)))AND(rt1.c2)))AND(rt1.c0)))OR(v0.c0))) IS FALSE) GROUP BY v0.c2, vt0.c0, v0.c1, rt1.c2 HAVING 0.477656976875497 UNION ALL SELECT v0.c2, vt0.c0, v0.c1, rt1.c2 FROM rt1, vt0 LEFT OUTER JOIN v0 ON ((((((((((x'')OR(vt0.c0)))AND(rt1.c2)))AND(rt1.c0)))OR(v0.c0))) IS FALSE) GROUP BY v0.c2, vt0.c0, v0.c1, rt1.c2 HAVING (NOT (0.477656976875497)) UNION ALL SELECT v0.c2, vt0.c0, v0.c1, rt1.c2 FROM rt1, vt0 LEFT OUTER JOIN v0 ON ((((((((((x'')OR(vt0.c0)))AND(rt1.c2)))AND(rt1.c0)))OR(v0.c0))) IS FALSE) GROUP BY v0.c2, vt0.c0, v0.c1, rt1.c2 HAVING ((0.477656976875497) ISNULL);
SELECT v0.c2, vt0.c0, v0.c1, rt1.c2 FROM rt1, vt0 LEFT OUTER JOIN v0 ON ((((((((((x'')OR(vt0.c0)))AND(rt1.c2)))AND(rt1.c0)))OR(v0.c0))) IS FALSE) GROUP BY v0.c2, vt0.c0, v0.c1, rt1.c2;
SELECT ALL v0.c2, vt0.c0, v0.c1, rt1.c2 FROM rt1, vt0 LEFT OUTER JOIN v0 ON ((((((((((x'')OR(vt0.c0)))AND(rt1.c2)))AND(rt1.c0)))OR(v0.c0))) IS FALSE) GROUP BY v0.c2, vt0.c0, v0.c1, rt1.c2 HAVING 0.477656976875497 UNION ALL SELECT v0.c2, vt0.c0, v0.c1, rt1.c2 FROM rt1, vt0 LEFT OUTER JOIN v0 ON ((((((((((x'')OR(vt0.c0)))AND(rt1.c2)))AND(rt1.c0)))OR(v0.c0))) IS FALSE) GROUP BY v0.c2, vt0.c0, v0.c1, rt1.c2 HAVING (NOT (0.477656976875497)) UNION ALL SELECT v0.c2, vt0.c0, v0.c1, rt1.c2 FROM rt1, vt0 LEFT OUTER JOIN v0 ON ((((((((((x'')OR(vt0.c0)))AND(rt1.c2)))AND(rt1.c0)))OR(v0.c0))) IS FALSE) GROUP BY v0.c2, vt0.c0, v0.c1, rt1.c2 HAVING ((0.477656976875497) ISNULL);
SELECT v0.c2, vt0.c0, v0.c1, rt1.c2 FROM rt1, vt0 LEFT OUTER JOIN v0 ON ((((((((((x'')OR(vt0.c0)))AND(rt1.c2)))AND(rt1.c0)))OR(v0.c0))) IS FALSE) GROUP BY v0.c2, vt0.c0, v0.c1, rt1.c2;
SELECT vt0.c0 FROM vt0, v0;
SELECT ALL vt0.c0 FROM vt0, v0 WHERE (CASE ''  WHEN (NOT (v0.c0)) THEN NULL ELSE CASE WHEN v0.c0 THEN v0.c2 ELSE v0.c1 END END) UNION ALL SELECT vt0.c0 FROM vt0, v0 WHERE ((NOT (CASE ''  WHEN (NOT (v0.c0)) THEN NULL ELSE CASE WHEN v0.c0 THEN v0.c2 ELSE v0.c1 END END))) UNION ALL SELECT vt0.c0 FROM vt0, v0 WHERE (((CASE ''  WHEN (NOT (v0.c0)) THEN NULL ELSE CASE WHEN v0.c0 THEN v0.c2 ELSE v0.c1 END END) ISNULL));
SELECT vt0.c0 FROM vt0, v0;
SELECT DISTINCT rt1.c2, vt0.c0, v0.c2, rt1.c0, v0.c0, v0.c1, t0.c0, t0.c1, t0.c2 FROM t0, vt0 CROSS JOIN rt1 ON ((('?'))<((t0.c2))) COLLATE BINARY LEFT OUTER JOIN v0 ON (CAST(t0.c1 AS REAL) IN ());
SELECT DISTINCT rt1.c2, vt0.c0, v0.c2, rt1.c0, v0.c0, v0.c1, t0.c0, t0.c1, t0.c2 FROM t0, vt0 CROSS JOIN rt1 ON ((('?'))<((t0.c2))) COLLATE BINARY LEFT OUTER JOIN v0 ON (CAST(t0.c1 AS REAL) IN ()) WHERE (((((rt1.c2) NOT NULL))-(((t0.c2)IS(0.4808457164043569))))) UNION SELECT DISTINCT rt1.c2, vt0.c0, v0.c2, rt1.c0, v0.c0, v0.c1, t0.c0, t0.c1, t0.c2 FROM t0, vt0 CROSS JOIN rt1 ON ((('?'))<((t0.c2))) COLLATE BINARY LEFT OUTER JOIN v0 ON (CAST(t0.c1 AS REAL) IN ()) WHERE ((NOT (((((rt1.c2) NOT NULL))-(((t0.c2)IS(0.4808457164043569))))))) UNION SELECT DISTINCT rt1.c2, vt0.c0, v0.c2, rt1.c0, v0.c0, v0.c1, t0.c0, t0.c1, t0.c2 FROM t0, vt0 CROSS JOIN rt1 ON ((('?'))<((t0.c2))) COLLATE BINARY LEFT OUTER JOIN v0 ON (CAST(t0.c1 AS REAL) IN ()) WHERE (((((((rt1.c2) NOT NULL))-(((t0.c2)IS(0.4808457164043569))))) ISNULL));
SELECT DISTINCT rt1.c2, vt0.c0, v0.c2, rt1.c0, v0.c0, v0.c1, t0.c0, t0.c1, t0.c2 FROM t0, vt0 CROSS JOIN rt1 ON ((('?'))<((t0.c2))) COLLATE BINARY LEFT OUTER JOIN v0 ON (CAST(t0.c1 AS REAL) IN ());
SELECT v0.c0, t0.c2, t0.c0, v0.c1 FROM t0 NATURAL JOIN v0 GROUP BY v0.c0, t0.c2, t0.c0, v0.c1;
SELECT v0.c0, t0.c2, t0.c0, v0.c1 FROM t0 NATURAL JOIN v0 WHERE (((((((v0.c0) NOTNULL))AND(-1830388201)))AND(((-1.830388201E9) BETWEEN (t0.c2) AND (v0.c0))))) GROUP BY v0.c0, t0.c2, t0.c0, v0.c1 UNION SELECT v0.c0, t0.c2, t0.c0, v0.c1 FROM t0 NATURAL JOIN v0 WHERE ((NOT (((((((v0.c0) NOTNULL))AND(-1830388201)))AND(((-1.830388201E9) BETWEEN (t0.c2) AND (v0.c0))))))) GROUP BY v0.c0, t0.c2, t0.c0, v0.c1 UNION SELECT v0.c0, t0.c2, t0.c0, v0.c1 FROM t0 NATURAL JOIN v0 WHERE (((((((((v0.c0) NOTNULL))AND(-1830388201)))AND(((-1.830388201E9) BETWEEN (t0.c2) AND (v0.c0))))) ISNULL)) GROUP BY v0.c0, t0.c2, t0.c0, v0.c1;
SELECT v0.c0, t0.c2, t0.c0, v0.c1 FROM t0 NATURAL JOIN v0 GROUP BY v0.c0, t0.c2, t0.c0, v0.c1;
SELECT t0.c0, v0.c2, v0.c0, t0.c1, t0.c2, v0.c1 FROM v0, t0 GROUP BY t0.c0, v0.c2, v0.c0, t0.c1, t0.c2, v0.c1;
SELECT ALL t0.c0, v0.c2, v0.c0, t0.c1, t0.c2, v0.c1 FROM v0, t0 GROUP BY t0.c0, v0.c2, v0.c0, t0.c1, t0.c2, v0.c1 HAVING COUNT(((MIN(t0.c2))>(GROUP_CONCAT(v0.c0)))) UNION ALL SELECT t0.c0, v0.c2, v0.c0, t0.c1, t0.c2, v0.c1 FROM v0, t0 GROUP BY t0.c0, v0.c2, v0.c0, t0.c1, t0.c2, v0.c1 HAVING (NOT (COUNT(((MIN(t0.c2))>(GROUP_CONCAT(v0.c0)))))) UNION ALL SELECT ALL t0.c0, v0.c2, v0.c0, t0.c1, t0.c2, v0.c1 FROM v0, t0 GROUP BY t0.c0, v0.c2, v0.c0, t0.c1, t0.c2, v0.c1 HAVING ((COUNT(((MIN(t0.c2))>(GROUP_CONCAT(v0.c0))))) ISNULL);
SELECT t0.c1, t0.c0, t0.c2, v0.c2, vt0.c0, v0.c1, v0.c0 FROM t0 RIGHT OUTER JOIN v0 ON ((((v0.c2)-(v0.c2))) NOT BETWEEN (((t0.c1) NOT BETWEEN (t0.c1) AND (v0.c1))) AND ((((v0.c2, t0.c0, vt0.c0))>=((x'', v0.c0, '1627154356'))))) RIGHT OUTER JOIN vt0 ON ((((vt0.c0) NOT BETWEEN (t0.c2) AND (0.5341523666887659)))IS NOT((((t0.c0, v0.c0, 1068163331)) NOT BETWEEN ((v0.c1, t0.c0, v0.c1)) AND ((t0.c0, v0.c1, vt0.c0)))));
SELECT DISTINCT v0.c1 FROM v0 FULL OUTER JOIN t0 ON CAST(((v0.c2) ISNULL) AS BLOB);
SELECT DISTINCT v0.c1 FROM v0 FULL OUTER JOIN t0 ON CAST(((v0.c2) ISNULL) AS BLOB) WHERE ('1882754698') UNION SELECT DISTINCT v0.c1 FROM v0 FULL OUTER JOIN t0 ON CAST(((v0.c2) ISNULL) AS BLOB) WHERE ((NOT ('1882754698'))) UNION SELECT DISTINCT v0.c1 FROM v0 NOT INDEXED FULL OUTER JOIN t0 ON CAST(((v0.c2) ISNULL) AS BLOB) WHERE ((('1882754698') ISNULL));
SELECT DISTINCT v0.c1 FROM v0 FULL OUTER JOIN t0 ON CAST(((v0.c2) ISNULL) AS BLOB);
SELECT ALL t0.c2, t0.c1, t0.c0 FROM t0 GROUP BY t0.c2, t0.c1, t0.c0;
SELECT ALL t0.c2, t0.c1, t0.c0 FROM t0 WHERE (CASE WHEN NULL THEN t0.c0 COLLATE BINARY ELSE ((((((((t0.c0)AND(2.09334569E8)))AND(t0.c1)))OR(t0.c1)))OR(t0.c1)) END) GROUP BY t0.c2, t0.c1, t0.c0 UNION SELECT t0.c2, t0.c1, t0.c0 FROM t0 WHERE ((NOT (CASE WHEN NULL THEN t0.c0 COLLATE BINARY ELSE ((((((((t0.c0)AND(2.09334569E8)))AND(t0.c1)))OR(t0.c1)))OR(t0.c1)) END))) GROUP BY t0.c2, t0.c1, t0.c0 UNION SELECT ALL t0.c2, t0.c1, t0.c0 FROM t0 WHERE (((CASE WHEN NULL THEN t0.c0 COLLATE BINARY ELSE ((((((((t0.c0)AND(2.09334569E8)))AND(t0.c1)))OR(t0.c1)))OR(t0.c1)) END) ISNULL)) GROUP BY t0.c2, t0.c1, t0.c0;
SELECT ALL t0.c2, t0.c1, t0.c0 FROM t0 GROUP BY t0.c2, t0.c1, t0.c0;
SELECT t0.c1, t0.c2, v0.c0, v0.c2 FROM rt1, t0, vt0, v0 GROUP BY t0.c1, t0.c2, v0.c0, v0.c2;
SELECT ALL t0.c1, t0.c2, v0.c0, v0.c2 FROM rt1, t0, vt0, v0 GROUP BY t0.c1, t0.c2, v0.c0, v0.c2 HAVING MAX(((GROUP_CONCAT(rt1.c2)) BETWEEN (COUNT(MAX(TOTAL(AVG(COUNT(*)))))) AND (v0.c0))) UNION ALL SELECT ALL t0.c1, t0.c2, v0.c0, v0.c2 FROM rt1, t0, vt0, v0 GROUP BY t0.c1, t0.c2, v0.c0, v0.c2 HAVING (NOT (MAX(((GROUP_CONCAT(rt1.c2)) BETWEEN (COUNT(MAX(TOTAL(AVG(COUNT(*)))))) AND (v0.c0))))) UNION ALL SELECT ALL t0.c1, t0.c2, v0.c0, v0.c2 FROM rt1, t0, vt0, v0 GROUP BY t0.c1, t0.c2, v0.c0, v0.c2 HAVING ((MAX(((GROUP_CONCAT(rt1.c2)) BETWEEN (COUNT(MAX(TOTAL(AVG(COUNT(*)))))) AND (v0.c0)))) ISNULL);
SELECT ALL * FROM vt0, t0;
SELECT * FROM vt0, t0 WHERE (CASE (NOT (t0.c0))  WHEN x'' THEN (t0.c0 IN ()) ELSE 0.4640479761617461 END) UNION ALL SELECT * FROM vt0, t0 WHERE ((NOT (CASE (NOT (t0.c0))  WHEN x'' THEN (t0.c0 IN ()) ELSE 0.4640479761617461 END))) UNION ALL SELECT * FROM vt0, t0 WHERE (((CASE (NOT (t0.c0))  WHEN x'' THEN (t0.c0 IN ()) ELSE 0.4640479761617461 END) ISNULL));
SELECT ALL * FROM vt0, t0;
SELECT DISTINCT * FROM rt1;
SELECT DISTINCT * FROM rt1 WHERE ((((rt1.c1)) NOT BETWEEN ((CASE WHEN rt1.c1 THEN rt1.c1 END)) AND ((((rt1.c0) BETWEEN (rt1.c1) AND (rt1.c0)))))) UNION SELECT DISTINCT * FROM rt1 WHERE ((NOT ((((rt1.c1)) NOT BETWEEN ((CASE WHEN rt1.c1 THEN rt1.c1 END)) AND ((((rt1.c0) BETWEEN (rt1.c1) AND (rt1.c0)))))))) UNION SELECT DISTINCT * FROM rt1 WHERE ((((((rt1.c1)) NOT BETWEEN ((CASE WHEN rt1.c1 THEN rt1.c1 END)) AND ((((rt1.c0) BETWEEN (rt1.c1) AND (rt1.c0)))))) ISNULL));
SELECT DISTINCT * FROM rt1;
SELECT vt0.c0, t0.c0, t0.c2, t0.c1 FROM t0, vt0 GROUP BY vt0.c0, t0.c0, t0.c2, t0.c1;
SELECT ALL vt0.c0, t0.c0, t0.c2, t0.c1 FROM t0, vt0 WHERE (CAST(((vt0.c0) NOT BETWEEN (t0.c0) AND (vt0.c0)) AS TEXT)) GROUP BY vt0.c0, t0.c0, t0.c2, t0.c1 UNION SELECT vt0.c0, t0.c0, t0.c2, t0.c1 FROM t0, vt0 WHERE ((NOT (CAST(((vt0.c0) NOT BETWEEN (t0.c0) AND (vt0.c0)) AS TEXT)))) GROUP BY vt0.c0, t0.c0, t0.c2, t0.c1 UNION SELECT vt0.c0, t0.c0, t0.c2, t0.c1 FROM t0, vt0 WHERE (((CAST(((vt0.c0) NOT BETWEEN (t0.c0) AND (vt0.c0)) AS TEXT)) ISNULL)) GROUP BY vt0.c0, t0.c0, t0.c2, t0.c1;
SELECT vt0.c0, t0.c0, t0.c2, t0.c1 FROM t0, vt0 GROUP BY vt0.c0, t0.c0, t0.c2, t0.c1;
SELECT rt1.c0, rt1.c1, rt1.c2 FROM vt0, rt1 GROUP BY rt1.c0, rt1.c1, rt1.c2;
SELECT ALL rt1.c0, rt1.c1, rt1.c2 FROM vt0, rt1 GROUP BY rt1.c0, rt1.c1, rt1.c2 HAVING (COUNT(rt1.c1) IN ()) UNION ALL SELECT rt1.c0, rt1.c1, rt1.c2 FROM vt0, rt1 GROUP BY rt1.c0, rt1.c1, rt1.c2 HAVING (NOT ((COUNT(rt1.c1) IN ()))) UNION ALL SELECT ALL rt1.c0, rt1.c1, rt1.c2 FROM vt0, rt1 GROUP BY rt1.c0, rt1.c1, rt1.c2 HAVING (((COUNT(rt1.c1) IN ())) ISNULL);
SELECT rt1.c0, rt1.c1, rt1.c2 FROM vt0, rt1 GROUP BY rt1.c0, rt1.c1, rt1.c2;
SELECT ALL rt1.c0, rt1.c1, rt1.c2 FROM vt0, rt1 GROUP BY rt1.c0, rt1.c1, rt1.c2 HAVING (COUNT(rt1.c1) IN ()) UNION ALL SELECT rt1.c0, rt1.c1, rt1.c2 FROM vt0, rt1 GROUP BY rt1.c0, rt1.c1, rt1.c2 HAVING (NOT ((COUNT(rt1.c1) IN ()))) UNION ALL SELECT ALL rt1.c0, rt1.c1, rt1.c2 FROM vt0, rt1 GROUP BY rt1.c0, rt1.c1, rt1.c2 HAVING (((COUNT(rt1.c1) IN ())) ISNULL);
SELECT rt1.c0, rt1.c1, rt1.c2 FROM vt0, rt1 GROUP BY rt1.c0, rt1.c1, rt1.c2;
SELECT * FROM t0;
SELECT * FROM t0 WHERE (((((t0.c2) BETWEEN (t0.c0) AND (t0.c2))) NOT NULL)) UNION ALL SELECT * FROM t0 WHERE ((NOT (((((t0.c2) BETWEEN (t0.c0) AND (t0.c2))) NOT NULL)))) UNION ALL SELECT * FROM t0 WHERE (((((((t0.c2) BETWEEN (t0.c0) AND (t0.c2))) NOT NULL)) ISNULL));
SELECT * FROM t0;
SELECT DISTINCT t0.c2 FROM t0, rt1, v0, vt0;
SELECT DISTINCT t0.c2 FROM t0, rt1, v0, vt0 WHERE (((UPPER(DISTINCT rt1.c2)) NOTNULL)) UNION SELECT DISTINCT t0.c2 FROM t0, rt1, v0, vt0 WHERE ((NOT (((UPPER(DISTINCT rt1.c2)) NOTNULL)))) UNION SELECT DISTINCT t0.c2 FROM t0, rt1 NOT INDEXED, v0, vt0 WHERE (((((UPPER(DISTINCT rt1.c2)) NOTNULL)) ISNULL));
SELECT DISTINCT t0.c2 FROM t0, rt1, v0, vt0;
SELECT ALL vt0.c0 FROM vt0, rt1 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, rt1 WHERE (((((((rt1.c1) ISNULL))AND(((NULL)>>(rt1.c2)))))AND(((((((((rt1.c1)AND(rt1.c2)))OR(NULL)))AND(rt1.c1)))AND(rt1.c2))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0, rt1 WHERE ((NOT (((((((rt1.c1) ISNULL))AND(((NULL)>>(rt1.c2)))))AND(((((((((rt1.c1)AND(rt1.c2)))OR(NULL)))AND(rt1.c1)))AND(rt1.c2))))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0, rt1 WHERE (((((((((rt1.c1) ISNULL))AND(((NULL)>>(rt1.c2)))))AND(((((((((rt1.c1)AND(rt1.c2)))OR(NULL)))AND(rt1.c1)))AND(rt1.c2))))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, rt1 GROUP BY vt0.c0;
SELECT ALL t0.c2 FROM t0 GROUP BY t0.c2;
SELECT ALL t0.c2 FROM t0 GROUP BY t0.c2 HAVING ((GROUP_CONCAT(t0.c1))||((((COUNT(*))) NOT BETWEEN ((TOTAL(TOTAL(GROUP_CONCAT(t0.c0))))) AND ((COUNT(*)))))) UNION ALL SELECT ALL t0.c2 FROM t0 GROUP BY t0.c2 HAVING (NOT (((GROUP_CONCAT(t0.c1))||((((COUNT(*))) NOT BETWEEN ((TOTAL(TOTAL(GROUP_CONCAT(t0.c0))))) AND ((COUNT(*)))))))) UNION ALL SELECT ALL t0.c2 FROM t0 GROUP BY t0.c2 HAVING ((((GROUP_CONCAT(t0.c1))||((((COUNT(*))) NOT BETWEEN ((TOTAL(TOTAL(GROUP_CONCAT(t0.c0))))) AND ((COUNT(*))))))) ISNULL);
SELECT vt0.c0, rt1.c1, v0.c0 FROM t0, vt0 RIGHT OUTER JOIN v0 ON CASE (v0.c0 IN ())  WHEN CASE WHEN vt0.c0 THEN rt1.c2 WHEN t0.c1 THEN v0.c0 WHEN 0.8924880349166251 THEN t0.c1 WHEN t0.c0 THEN t0.c2 WHEN rt1.c2 THEN v0.c1 ELSE v0.c2 END THEN CAST(rt1.c1 AS REAL) END INNER JOIN rt1 ON ((CASE vt0.c0  WHEN t0.c0 THEN x'' END)||((NOT (v0.c1))));
SELECT DISTINCT * FROM rt1, t0 FULL OUTER JOIN v0 ON (((((((((((t0.c1, rt1.c2, t0.c0))!=((v0.c1, t0.c1, v0.c2))))AND((((v0.c0))=((rt1.c0))))))AND(x'')))OR((~ (rt1.c2)))))OR(rt1.c1));
SELECT DISTINCT * FROM rt1, t0 FULL OUTER JOIN v0 ON (((((((((((t0.c1, rt1.c2, t0.c0))<>((v0.c1, t0.c1, v0.c2))))AND((((v0.c0))==((rt1.c0))))))AND(x'')))OR((~ (rt1.c2)))))OR(rt1.c1)) WHERE (rt1.c0) UNION SELECT DISTINCT * FROM rt1, t0 FULL OUTER JOIN v0 ON (((((((((((t0.c1, rt1.c2, t0.c0))<>((v0.c1, t0.c1, v0.c2))))AND((((v0.c0))=((rt1.c0))))))AND(x'')))OR((~ (rt1.c2)))))OR(rt1.c1)) WHERE ((NOT (rt1.c0))) UNION SELECT DISTINCT * FROM rt1, t0 FULL OUTER JOIN v0 ON (((((((((((t0.c1, rt1.c2, t0.c0))!=((v0.c1, t0.c1, v0.c2))))AND((((v0.c0))=((rt1.c0))))))AND(x'')))OR((~ (rt1.c2)))))OR(rt1.c1)) WHERE (((rt1.c0) ISNULL));
SELECT DISTINCT * FROM rt1, t0 FULL OUTER JOIN v0 ON (((((((((((t0.c1, rt1.c2, t0.c0))!=((v0.c1, t0.c1, v0.c2))))AND((((v0.c0))=((rt1.c0))))))AND(x'')))OR((~ (rt1.c2)))))OR(rt1.c1));
SELECT rt1.c2, rt1.c1, v0.c0, v0.c2 FROM rt1 LEFT OUTER JOIN v0 ON ((rt1.c0 COLLATE BINARY) BETWEEN ((((rt1.c2))<=((v0.c0)))) AND (CASE rt1.c1  WHEN rt1.c2 THEN v0.c1 ELSE v0.c1 END)) GROUP BY rt1.c2, rt1.c1, v0.c0, v0.c2;
SELECT rt1.c2, rt1.c1, v0.c0, v0.c2 FROM rt1 LEFT OUTER JOIN v0 ON ((rt1.c0 COLLATE BINARY) BETWEEN ((((rt1.c2))<=((v0.c0)))) AND (CASE rt1.c1  WHEN rt1.c2 THEN v0.c1 ELSE v0.c1 END)) WHERE ((((((rt1.c0)/(rt1.c0))))>=((((rt1.c1) NOT BETWEEN (rt1.c1) AND (rt1.c2)))))) GROUP BY rt1.c2, rt1.c1, v0.c0, v0.c2 UNION SELECT rt1.c2, rt1.c1, v0.c0, v0.c2 FROM rt1 LEFT OUTER JOIN v0 ON ((rt1.c0 COLLATE BINARY) BETWEEN ((((rt1.c2))<=((v0.c0)))) AND (CASE rt1.c1  WHEN rt1.c2 THEN v0.c1 ELSE v0.c1 END)) WHERE ((NOT ((((((rt1.c0)/(rt1.c0))))>=((((rt1.c1) NOT BETWEEN (rt1.c1) AND (rt1.c2)))))))) GROUP BY rt1.c2, rt1.c1, v0.c0, v0.c2 UNION SELECT ALL rt1.c2, rt1.c1, v0.c0, v0.c2 FROM rt1 LEFT OUTER JOIN v0 ON ((rt1.c0 COLLATE BINARY) BETWEEN ((((rt1.c2))<=((v0.c0)))) AND (CASE rt1.c1  WHEN rt1.c2 THEN v0.c1 ELSE v0.c1 END)) WHERE ((((((((rt1.c0)/(rt1.c0))))>=((((rt1.c1) NOT BETWEEN (rt1.c1) AND (rt1.c2)))))) ISNULL)) GROUP BY rt1.c2, rt1.c1, v0.c0, v0.c2;
SELECT rt1.c2, rt1.c1, v0.c0, v0.c2 FROM rt1 LEFT OUTER JOIN v0 ON ((rt1.c0 COLLATE BINARY) BETWEEN ((((rt1.c2))<=((v0.c0)))) AND (CASE rt1.c1  WHEN rt1.c2 THEN v0.c1 ELSE v0.c1 END)) GROUP BY rt1.c2, rt1.c1, v0.c0, v0.c2;
SELECT vt0.c0, rt1.c2, rt1.c1 FROM rt1, vt0 GROUP BY vt0.c0, rt1.c2, rt1.c1;
SELECT vt0.c0, rt1.c2, rt1.c1 FROM rt1, vt0 GROUP BY vt0.c0, rt1.c2, rt1.c1 HAVING AVG(GROUP_CONCAT(vt0.c0)) UNION ALL SELECT vt0.c0, rt1.c2, rt1.c1 FROM rt1, vt0 GROUP BY vt0.c0, rt1.c2, rt1.c1 HAVING (NOT (AVG(GROUP_CONCAT(vt0.c0)))) UNION ALL SELECT ALL vt0.c0, rt1.c2, rt1.c1 FROM rt1, vt0 GROUP BY vt0.c0, rt1.c2, rt1.c1 HAVING ((AVG(GROUP_CONCAT(vt0.c0))) ISNULL);
SELECT rt1.c2, v0.c2, v0.c0, t0.c2, t0.c1, rt1.c0, vt0.c0, v0.c1, t0.c0 FROM rt1 FULL OUTER JOIN v0 ON (~ (CASE WHEN t0.c0 THEN t0.c0 ELSE 1661675826 END)) LEFT OUTER JOIN vt0 ON ((((t0.c0)>>(vt0.c0)))>>(t0.c0 COLLATE NOCASE)) RIGHT OUTER JOIN t0 ON (((rt1.c1)&(rt1.c1)) IN ());
SELECT DISTINCT * FROM v0, vt0, rt1, t0;
SELECT DISTINCT * FROM v0, vt0, rt1, t0 WHERE (rt1.c2) UNION SELECT DISTINCT * FROM v0, vt0, rt1, t0 WHERE ((NOT (rt1.c2))) UNION SELECT DISTINCT * FROM v0, vt0, rt1, t0 WHERE (((rt1.c2) ISNULL));
SELECT DISTINCT * FROM v0, vt0, rt1, t0;
SELECT ALL v0.c2 FROM v0, rt1, vt0 GROUP BY v0.c2;
SELECT v0.c2 FROM v0, rt1, vt0 WHERE (((CAST(vt0.c0 AS NUMERIC)) NOT BETWEEN ((NOT (v0.c0))) AND (((v0.c2)%(v0.c0))))) GROUP BY v0.c2 UNION SELECT ALL v0.c2 FROM v0, rt1, vt0 WHERE ((NOT (((CAST(vt0.c0 AS NUMERIC)) NOT BETWEEN ((NOT (v0.c0))) AND (((v0.c2)%(v0.c0))))))) GROUP BY v0.c2 UNION SELECT ALL v0.c2 FROM v0, rt1, vt0 WHERE (((((CAST(vt0.c0 AS NUMERIC)) NOT BETWEEN ((NOT (v0.c0))) AND (((v0.c2)%(v0.c0))))) ISNULL)) GROUP BY v0.c2;
SELECT ALL v0.c2 FROM v0, rt1, vt0 GROUP BY v0.c2;
SELECT ALL rt1.c1, rt1.c0, rt1.c2, t0.c1, t0.c2 FROM rt1, vt0, t0 GROUP BY rt1.c1, rt1.c0, rt1.c2, t0.c1, t0.c2;
SELECT ALL rt1.c1, rt1.c0, rt1.c2, t0.c1, t0.c2 FROM rt1, vt0, t0 GROUP BY rt1.c1, rt1.c0, rt1.c2, t0.c1, t0.c2 HAVING COUNT(((rt1.c0) ISNULL)) UNION ALL SELECT ALL rt1.c1, rt1.c0, rt1.c2, t0.c1, t0.c2 FROM rt1, vt0, t0 GROUP BY rt1.c1, rt1.c0, rt1.c2, t0.c1, t0.c2 HAVING (NOT (COUNT(((rt1.c0) ISNULL)))) UNION ALL SELECT rt1.c1, rt1.c0, rt1.c2, t0.c1, t0.c2 FROM rt1, vt0, t0 GROUP BY rt1.c1, rt1.c0, rt1.c2, t0.c1, t0.c2 HAVING ((COUNT(((rt1.c0) ISNULL))) ISNULL);
SELECT ALL rt1.c1, rt1.c0, rt1.c2, t0.c1, t0.c2 FROM rt1, vt0, t0 GROUP BY rt1.c1, rt1.c0, rt1.c2, t0.c1, t0.c2;
SELECT ALL rt1.c1, rt1.c0, rt1.c2, t0.c1, t0.c2 FROM rt1, vt0, t0 GROUP BY rt1.c1, rt1.c0, rt1.c2, t0.c1, t0.c2 HAVING COUNT(((rt1.c0) ISNULL)) UNION ALL SELECT ALL rt1.c1, rt1.c0, rt1.c2, t0.c1, t0.c2 FROM rt1, vt0, t0 GROUP BY rt1.c1, rt1.c0, rt1.c2, t0.c1, t0.c2 HAVING (NOT (COUNT(((rt1.c0) ISNULL)))) UNION ALL SELECT rt1.c1, rt1.c0, rt1.c2, t0.c1, t0.c2 FROM rt1, vt0, t0 GROUP BY rt1.c1, rt1.c0, rt1.c2, t0.c1, t0.c2 HAVING ((COUNT(((rt1.c0) ISNULL))) ISNULL);
SELECT ALL rt1.c1, rt1.c0, rt1.c2, t0.c1, t0.c2 FROM rt1, vt0, t0 GROUP BY rt1.c1, rt1.c0, rt1.c2, t0.c1, t0.c2;
SELECT ALL * FROM rt1, vt0;
SELECT * FROM rt1, vt0 WHERE (((((rt1.c2)||(rt1.c1))) NOT BETWEEN ((~ (vt0.c0))) AND (((rt1.c2)<=(rt1.c0))))) UNION ALL SELECT * FROM rt1, vt0 WHERE ((NOT (((((rt1.c2)||(rt1.c1))) NOT BETWEEN ((~ (vt0.c0))) AND (((rt1.c2)<=(rt1.c0))))))) UNION ALL SELECT * FROM rt1, vt0 WHERE (((((((rt1.c2)||(rt1.c1))) NOT BETWEEN ((~ (vt0.c0))) AND (((rt1.c2)<=(rt1.c0))))) ISNULL));
SELECT ALL * FROM rt1, vt0;
SELECT DISTINCT * FROM rt1, v0 RIGHT OUTER JOIN vt0 ON ((CAST(rt1.c0 AS BLOB))|((~ (vt0.c0)))) INNER JOIN t0 ON ((((t0.c0) IS FALSE)) NOT BETWEEN (((rt1.c0)>(rt1.c1))) AND (rt1.c1));
SELECT DISTINCT * FROM rt1, v0 RIGHT OUTER JOIN vt0 ON ((CAST(rt1.c0 AS BLOB))|((~ (vt0.c0)))) INNER JOIN t0 ON ((((t0.c0) IS FALSE)) NOT BETWEEN (((rt1.c0)>(rt1.c1))) AND (rt1.c1)) WHERE (LOWER((t0.c1 IN ()))) UNION SELECT DISTINCT * FROM rt1, v0 RIGHT OUTER JOIN vt0 ON ((CAST(rt1.c0 AS BLOB))|((~ (vt0.c0)))) INNER JOIN t0 ON ((((t0.c0) IS FALSE)) NOT BETWEEN (((rt1.c0)>(rt1.c1))) AND (rt1.c1)) WHERE ((NOT (LOWER((t0.c1 IN ()))))) UNION SELECT DISTINCT * FROM rt1, v0 RIGHT OUTER JOIN vt0 ON ((CAST(rt1.c0 AS BLOB))|((~ (vt0.c0)))) INNER JOIN t0 ON ((((t0.c0) IS FALSE)) NOT BETWEEN (((rt1.c0)>(rt1.c1))) AND (rt1.c1)) WHERE (((LOWER((t0.c1 IN ()))) ISNULL));
SELECT DISTINCT * FROM rt1, v0 RIGHT OUTER JOIN vt0 ON ((CAST(rt1.c0 AS BLOB))|((~ (vt0.c0)))) INNER JOIN t0 ON ((((t0.c0) IS FALSE)) NOT BETWEEN (((rt1.c0)>(rt1.c1))) AND (rt1.c1));
SELECT rt1.c2, v0.c0, vt0.c0, v0.c2, rt1.c1, rt1.c0, v0.c1 FROM v0, rt1, vt0 GROUP BY rt1.c2, v0.c0, vt0.c0, v0.c2, rt1.c1, rt1.c0, v0.c1;
SELECT ALL rt1.c2, v0.c0, vt0.c0, v0.c2, rt1.c1, rt1.c0, v0.c1 FROM v0, rt1, vt0 WHERE ((rt1.c1 IN ()) COLLATE NOCASE) GROUP BY rt1.c2, v0.c0, vt0.c0, v0.c2, rt1.c1, rt1.c0, v0.c1 UNION SELECT rt1.c2, v0.c0, vt0.c0, v0.c2, rt1.c1, rt1.c0, v0.c1 FROM v0, rt1, vt0 WHERE ((NOT ((rt1.c1 IN ()) COLLATE NOCASE))) GROUP BY rt1.c2, v0.c0, vt0.c0, v0.c2, rt1.c1, rt1.c0, v0.c1 UNION SELECT ALL rt1.c2, v0.c0, vt0.c0, v0.c2, rt1.c1, rt1.c0, v0.c1 FROM v0 NOT INDEXED, rt1, vt0 WHERE ((((rt1.c1 IN ()) COLLATE NOCASE) ISNULL)) GROUP BY rt1.c2, v0.c0, vt0.c0, v0.c2, rt1.c1, rt1.c0, v0.c1;
SELECT rt1.c2, v0.c0, vt0.c0, v0.c2, rt1.c1, rt1.c0, v0.c1 FROM v0, rt1, vt0 GROUP BY rt1.c2, v0.c0, vt0.c0, v0.c2, rt1.c1, rt1.c0, v0.c1;
SELECT ALL v0.c2, t0.c2, rt1.c0 FROM vt0, v0 CROSS JOIN t0 ON t0.c1 FULL OUTER JOIN rt1 ON (x'' IN ()) GROUP BY v0.c2, t0.c2, rt1.c0;
SELECT v0.c2, t0.c2, rt1.c0 FROM vt0, v0 CROSS JOIN t0 ON t0.c1 FULL OUTER JOIN rt1 ON (x'' IN ()) GROUP BY v0.c2, t0.c2, rt1.c0 HAVING COUNT(*) UNION ALL SELECT ALL v0.c2, t0.c2, rt1.c0 FROM vt0, v0 CROSS JOIN t0 ON t0.c1 FULL OUTER JOIN rt1 ON (x'' IN ()) GROUP BY v0.c2, t0.c2, rt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL v0.c2, t0.c2, rt1.c0 FROM vt0, v0 CROSS JOIN t0 ON t0.c1 FULL OUTER JOIN rt1 ON (x'' IN ()) GROUP BY v0.c2, t0.c2, rt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL v0.c2, t0.c2, rt1.c0 FROM vt0, v0 CROSS JOIN t0 ON t0.c1 FULL OUTER JOIN rt1 ON (x'' IN ()) GROUP BY v0.c2, t0.c2, rt1.c0;
SELECT v0.c2, t0.c2, rt1.c0 FROM vt0, v0 CROSS JOIN t0 ON t0.c1 FULL OUTER JOIN rt1 ON (x'' IN ()) GROUP BY v0.c2, t0.c2, rt1.c0 HAVING COUNT(*) UNION ALL SELECT ALL v0.c2, t0.c2, rt1.c0 FROM vt0, v0 CROSS JOIN t0 ON t0.c1 FULL OUTER JOIN rt1 ON (x'' IN ()) GROUP BY v0.c2, t0.c2, rt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL v0.c2, t0.c2, rt1.c0 FROM vt0, v0 CROSS JOIN t0 ON t0.c1 FULL OUTER JOIN rt1 ON (x'' IN ()) GROUP BY v0.c2, t0.c2, rt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL v0.c2, t0.c2, rt1.c0 FROM vt0, v0 CROSS JOIN t0 ON t0.c1 FULL OUTER JOIN rt1 ON (x'' IN ()) GROUP BY v0.c2, t0.c2, rt1.c0;
SELECT ALL * FROM v0, vt0, t0, rt1;
SELECT ALL * FROM v0, vt0, t0, rt1 WHERE (CASE LIKELY(DISTINCT t0.c0)  WHEN UPPER(rt1.c0) THEN ((1.493338649E9) BETWEEN (t0.c0) AND (NULL)) WHEN GLOB(t0.c2, -6.56390157E8) THEN (((v0.c2))!=((v0.c1))) WHEN ((v0.c0) NOT BETWEEN (rt1.c2) AND (v0.c2)) THEN v0.c1 WHEN ((rt1.c0) IS FALSE) THEN json(NULL) WHEN ((rt1.c1)%(t0.c2)) THEN ((t0.c1)-(t0.c1)) ELSE ((t0.c2) IS FALSE) END) UNION ALL SELECT * FROM v0, vt0, t0, rt1 WHERE ((NOT (CASE LIKELY(DISTINCT t0.c0)  WHEN UPPER(rt1.c0) THEN ((1.493338649E9) BETWEEN (t0.c0) AND (NULL)) WHEN GLOB(t0.c2, -6.56390157E8) THEN (((v0.c2))<>((v0.c1))) WHEN ((v0.c0) NOT BETWEEN (rt1.c2) AND (v0.c2)) THEN v0.c1 WHEN ((rt1.c0) IS FALSE) THEN json(NULL) WHEN ((rt1.c1)%(t0.c2)) THEN ((t0.c1)-(t0.c1)) ELSE ((t0.c2) IS FALSE) END))) UNION ALL SELECT ALL * FROM v0, vt0, t0, rt1 WHERE (((CASE LIKELY(DISTINCT t0.c0)  WHEN UPPER(rt1.c0) THEN ((1.493338649E9) BETWEEN (t0.c0) AND (NULL)) WHEN GLOB(t0.c2, -6.56390157E8) THEN (((v0.c2))<>((v0.c1))) WHEN ((v0.c0) NOT BETWEEN (rt1.c2) AND (v0.c2)) THEN v0.c1 WHEN ((rt1.c0) IS FALSE) THEN json(NULL) WHEN ((rt1.c1)%(t0.c2)) THEN ((t0.c1)-(t0.c1)) ELSE ((t0.c2) IS FALSE) END) ISNULL));
SELECT ALL * FROM v0, vt0, t0, rt1;
SELECT DISTINCT t0.c2 FROM v0, t0, vt0;
SELECT DISTINCT t0.c2 FROM v0, t0, vt0 WHERE (((CASE v0.c0  WHEN t0.c1 THEN vt0.c0 ELSE v0.c2 END) BETWEEN (vt0.c0) AND (LTRIM(v0.c2, t0.c1)))) UNION SELECT DISTINCT t0.c2 FROM v0, t0, vt0 WHERE ((NOT (((CASE v0.c0  WHEN t0.c1 THEN vt0.c0 ELSE v0.c2 END) BETWEEN (vt0.c0) AND (LTRIM(v0.c2, t0.c1)))))) UNION SELECT DISTINCT t0.c2 FROM v0, t0, vt0 WHERE (((((CASE v0.c0  WHEN t0.c1 THEN vt0.c0 ELSE v0.c2 END) BETWEEN (vt0.c0) AND (LTRIM(v0.c2, t0.c1)))) ISNULL));
SELECT DISTINCT t0.c2 FROM v0, t0, vt0;
SELECT ALL v0.c2, rt1.c0, rt1.c1, rt1.c2, v0.c0, t0.c1, t0.c2 FROM rt1, vt0, t0, v0 GROUP BY v0.c2, rt1.c0, rt1.c1, rt1.c2, v0.c0, t0.c1, t0.c2;
SELECT ALL v0.c2, rt1.c0, rt1.c1, rt1.c2, v0.c0, t0.c1, t0.c2 FROM rt1, vt0, t0, v0 WHERE (((((t0.c2)GLOB(rt1.c2)))/(((((((((v0.c2)AND(NULL)))OR(t0.c0)))OR(t0.c2)))OR(rt1.c0))))) GROUP BY v0.c2, rt1.c0, rt1.c1, rt1.c2, v0.c0, t0.c1, t0.c2 UNION SELECT v0.c2, rt1.c0, rt1.c1, rt1.c2, v0.c0, t0.c1, t0.c2 FROM rt1, vt0, t0, v0 WHERE ((NOT (((((t0.c2)GLOB(rt1.c2)))/(((((((((v0.c2)AND(NULL)))OR(t0.c0)))OR(t0.c2)))OR(rt1.c0))))))) GROUP BY v0.c2, rt1.c0, rt1.c1, rt1.c2, v0.c0, t0.c1, t0.c2 UNION SELECT ALL v0.c2, rt1.c0, rt1.c1, rt1.c2, v0.c0, t0.c1, t0.c2 FROM rt1, vt0, t0, v0 WHERE (((((((t0.c2)GLOB(rt1.c2)))/(((((((((v0.c2)AND(NULL)))OR(t0.c0)))OR(t0.c2)))OR(rt1.c0))))) ISNULL)) GROUP BY v0.c2, rt1.c0, rt1.c1, rt1.c2, v0.c0, t0.c1, t0.c2;
SELECT ALL v0.c2, rt1.c0, rt1.c1, rt1.c2, v0.c0, t0.c1, t0.c2 FROM rt1, vt0, t0, v0 GROUP BY v0.c2, rt1.c0, rt1.c1, rt1.c2, v0.c0, t0.c1, t0.c2;
SELECT v0.c0, vt0.c0, v0.c1 FROM vt0, v0 GROUP BY v0.c0, vt0.c0, v0.c1;
SELECT ALL v0.c0, vt0.c0, v0.c1 FROM vt0, v0 GROUP BY v0.c0, vt0.c0, v0.c1 HAVING COUNT(*) UNION ALL SELECT ALL v0.c0, vt0.c0, v0.c1 FROM vt0, v0 GROUP BY v0.c0, vt0.c0, v0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT v0.c0, vt0.c0, v0.c1 FROM vt0, v0 GROUP BY v0.c0, vt0.c0, v0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT v0.c0, vt0.c0, v0.c1 FROM vt0, v0 GROUP BY v0.c0, vt0.c0, v0.c1;
SELECT ALL v0.c0, vt0.c0, v0.c1 FROM vt0, v0 GROUP BY v0.c0, vt0.c0, v0.c1 HAVING COUNT(*) UNION ALL SELECT ALL v0.c0, vt0.c0, v0.c1 FROM vt0, v0 GROUP BY v0.c0, vt0.c0, v0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT v0.c0, vt0.c0, v0.c1 FROM vt0, v0 GROUP BY v0.c0, vt0.c0, v0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT v0.c0, vt0.c0, v0.c1 FROM vt0, v0 GROUP BY v0.c0, vt0.c0, v0.c1;
SELECT ALL v0.c0, v0.c1, v0.c2 FROM v0;
SELECT ALL v0.c0, v0.c1, v0.c2 FROM v0 WHERE ((NOT (CAST(v0.c0 AS NUMERIC)))) UNION ALL SELECT v0.c0, v0.c1, v0.c2 FROM v0 WHERE ((NOT ((NOT (CAST(v0.c0 AS NUMERIC)))))) UNION ALL SELECT ALL v0.c0, v0.c1, v0.c2 FROM v0 WHERE ((((NOT (CAST(v0.c0 AS NUMERIC)))) ISNULL));
SELECT ALL v0.c0, v0.c1, v0.c2 FROM v0;
SELECT DISTINCT v0.c2, v0.c1, t0.c2, rt1.c1, t0.c0, t0.c1, rt1.c0, rt1.c2 FROM rt1, vt0, v0, t0;
SELECT DISTINCT v0.c2, v0.c1, t0.c2, rt1.c1, t0.c0, t0.c1, rt1.c0, rt1.c2 FROM rt1, vt0, v0, t0 WHERE ((((vt0.c0, x'', 0X57cbd22)) BETWEEN ((((((((((v0.c1)AND('_8XK')))OR(rt1.c0)))OR(t0.c1)))AND(0.7400904562426476)), rt1.c0 COLLATE BINARY, v0.c2 COLLATE NOCASE)) AND ((CAST(t0.c1 AS NUMERIC), CASE WHEN x'28a6' THEN vt0.c0 ELSE vt0.c0 END, (- (t0.c1)))))) UNION SELECT DISTINCT v0.c2, v0.c1, t0.c2, rt1.c1, t0.c0, t0.c1, rt1.c0, rt1.c2 FROM rt1, vt0, v0, t0 WHERE ((NOT ((((vt0.c0, x'', 0x57cbd22)) BETWEEN ((((((((((v0.c1)AND('_8XK')))OR(rt1.c0)))OR(t0.c1)))AND(0.7400904562426476)), rt1.c0 COLLATE BINARY, v0.c2 COLLATE NOCASE)) AND ((CAST(t0.c1 AS NUMERIC), CASE WHEN x'28a6' THEN vt0.c0 ELSE vt0.c0 END, (- (t0.c1)))))))) UNION SELECT DISTINCT v0.c2, v0.c1, t0.c2, rt1.c1, t0.c0, t0.c1, rt1.c0, rt1.c2 FROM rt1, vt0, v0, t0 WHERE ((((((vt0.c0, x'', 0X57cbd22)) BETWEEN ((((((((((v0.c1)AND('_8XK')))OR(rt1.c0)))OR(t0.c1)))AND(0.7400904562426476)), rt1.c0 COLLATE BINARY, v0.c2 COLLATE NOCASE)) AND ((CAST(t0.c1 AS NUMERIC), CASE WHEN x'28a6' THEN vt0.c0 ELSE vt0.c0 END, (- (t0.c1)))))) ISNULL));
SELECT DISTINCT v0.c2, v0.c1, t0.c2, rt1.c1, t0.c0, t0.c1, rt1.c0, rt1.c2 FROM rt1, vt0, v0, t0;
SELECT t0.c2, t0.c0 FROM t0 GROUP BY t0.c2, t0.c0;
SELECT ALL t0.c2, t0.c0 FROM t0 WHERE (t0.c2) GROUP BY t0.c2, t0.c0 UNION SELECT ALL t0.c2, t0.c0 FROM t0 WHERE ((NOT (t0.c2))) GROUP BY t0.c2, t0.c0 UNION SELECT ALL t0.c2, t0.c0 FROM t0 WHERE (((t0.c2) ISNULL)) GROUP BY t0.c2, t0.c0;
SELECT t0.c2, t0.c0 FROM t0 GROUP BY t0.c2, t0.c0;
SELECT ALL rt1.c0, t0.c2, rt1.c1, v0.c1, rt1.c2 FROM vt0, t0, rt1, v0 GROUP BY rt1.c0, t0.c2, rt1.c1, v0.c1, rt1.c2;
SELECT ALL rt1.c0, t0.c2, rt1.c1, v0.c1, rt1.c2 FROM vt0, t0, rt1, v0 GROUP BY rt1.c0, t0.c2, rt1.c1, v0.c1, rt1.c2 HAVING CASE WHEN CAST(t0.c0 AS TEXT) THEN ((GROUP_CONCAT(MAX(v0.c2))) NOT NULL) END UNION ALL SELECT rt1.c0, t0.c2, rt1.c1, v0.c1, rt1.c2 FROM vt0, t0, rt1, v0 GROUP BY rt1.c0, t0.c2, rt1.c1, v0.c1, rt1.c2 HAVING (NOT (CASE WHEN CAST(t0.c0 AS TEXT) THEN ((GROUP_CONCAT(MAX(v0.c2))) NOT NULL) END)) UNION ALL SELECT rt1.c0, t0.c2, rt1.c1, v0.c1, rt1.c2 FROM vt0, t0, rt1, v0 GROUP BY rt1.c0, t0.c2, rt1.c1, v0.c1, rt1.c2 HAVING ((CASE WHEN CAST(t0.c0 AS TEXT) THEN ((GROUP_CONCAT(MAX(v0.c2))) NOT NULL) END) ISNULL);
SELECT * FROM t0, vt0, v0, rt1 NOT INDEXED;
SELECT * FROM t0, vt0, v0, rt1 WHERE (((t0.c2)OR(v0.c2)) COLLATE RTRIM) UNION ALL SELECT * FROM t0, vt0, v0, rt1 WHERE ((NOT (((t0.c2)OR(v0.c2)) COLLATE RTRIM))) UNION ALL SELECT ALL * FROM t0, vt0 NOT INDEXED, v0, rt1 WHERE (((((t0.c2)OR(v0.c2)) COLLATE RTRIM) ISNULL));
SELECT * FROM t0, vt0, v0, rt1 NOT INDEXED;
SELECT DISTINCT * FROM vt0, t0;
SELECT DISTINCT * FROM vt0, t0 NOT INDEXED WHERE (NULL) UNION SELECT DISTINCT * FROM vt0, t0 WHERE ((NOT (NULL))) UNION SELECT DISTINCT * FROM vt0, t0 WHERE (((NULL) ISNULL));
SELECT DISTINCT * FROM vt0, t0;
SELECT rt1.c1, t0.c2, t0.c0, t0.c1, rt1.c0, v0.c2, v0.c1 FROM vt0, t0 LEFT OUTER JOIN v0 ON COALESCE(v0.c0 COLLATE BINARY, (((rt1.c0)) NOT BETWEEN ((rt1.c0)) AND ((t0.c2)))) LEFT OUTER JOIN rt1 ON 'YwuJr^' GROUP BY rt1.c1, t0.c2, t0.c0, t0.c1, rt1.c0, v0.c2, v0.c1;
SELECT ALL rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c0;
SELECT ALL rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c0 HAVING GROUP_CONCAT(((GROUP_CONCAT(TOTAL(rt1.c2)))-(rt1.c2))) UNION ALL SELECT ALL rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c0 HAVING (NOT (GROUP_CONCAT(((GROUP_CONCAT(TOTAL(rt1.c2)))-(rt1.c2))))) UNION ALL SELECT ALL rt1.c1, rt1.c0 FROM rt1 GROUP BY rt1.c1, rt1.c0 HAVING ((GROUP_CONCAT(((GROUP_CONCAT(TOTAL(rt1.c2)))-(rt1.c2)))) ISNULL);
SELECT vt0.c0, rt1.c1, rt1.c2, rt1.c0, v0.c2, v0.c1, v0.c0 FROM v0, vt0, rt1;
SELECT ALL vt0.c0, rt1.c1, rt1.c2, rt1.c0, v0.c2, v0.c1, v0.c0 FROM v0, vt0, rt1 WHERE ((NOT ((((v0.c1))<((rt1.c0)))))) UNION ALL SELECT vt0.c0, rt1.c1, rt1.c2, rt1.c0, v0.c2, v0.c1, v0.c0 FROM v0, vt0, rt1 WHERE ((NOT ((NOT ((((v0.c1))<((rt1.c0)))))))) UNION ALL SELECT vt0.c0, rt1.c1, rt1.c2, rt1.c0, v0.c2, v0.c1, v0.c0 FROM v0, vt0, rt1 WHERE ((((NOT ((((v0.c1))<((rt1.c0)))))) ISNULL));
SELECT vt0.c0, rt1.c1, rt1.c2, rt1.c0, v0.c2, v0.c1, v0.c0 FROM v0, vt0, rt1;
SELECT DISTINCT rt1.c1, vt0.c0, t0.c0 FROM vt0, t0, rt1;
SELECT DISTINCT rt1.c1, vt0.c0, t0.c0 FROM vt0, t0 NOT INDEXED, rt1 WHERE ((((t0.c0) NOT BETWEEN (vt0.c0) AND (t0.c0)) IN ())) UNION SELECT DISTINCT rt1.c1, vt0.c0, t0.c0 FROM vt0, t0, rt1 WHERE ((NOT ((((t0.c0) NOT BETWEEN (vt0.c0) AND (t0.c0)) IN ())))) UNION SELECT DISTINCT rt1.c1, vt0.c0, t0.c0 FROM vt0, t0, rt1 WHERE ((((((t0.c0) NOT BETWEEN (vt0.c0) AND (t0.c0)) IN ())) ISNULL));
SELECT DISTINCT rt1.c1, vt0.c0, t0.c0 FROM vt0, t0, rt1;
SELECT v0.c0, t0.c0, v0.c1, v0.c2 FROM t0, v0 GROUP BY v0.c0, t0.c0, v0.c1, v0.c2;
SELECT v0.c0, t0.c0, v0.c1, v0.c2 FROM t0, v0 WHERE (((NOT (t0.c1)) IN (COALESCE(v0.c1, x''), ((((t0.c1)AND(t0.c2)))AND(v0.c1))))) GROUP BY v0.c0, t0.c0, v0.c1, v0.c2 UNION SELECT v0.c0, t0.c0, v0.c1, v0.c2 FROM t0, v0 WHERE ((NOT (((NOT (t0.c1)) IN (COALESCE(v0.c1, x''), ((((t0.c1)AND(t0.c2)))AND(v0.c1))))))) GROUP BY v0.c0, t0.c0, v0.c1, v0.c2 UNION SELECT ALL v0.c0, t0.c0, v0.c1, v0.c2 FROM t0, v0 WHERE (((((NOT (t0.c1)) IN (COALESCE(v0.c1, x''), ((((t0.c1)AND(t0.c2)))AND(v0.c1))))) ISNULL)) GROUP BY v0.c0, t0.c0, v0.c1, v0.c2;
SELECT v0.c0, t0.c0, v0.c1, v0.c2 FROM t0, v0 GROUP BY v0.c0, t0.c0, v0.c1, v0.c2;
SELECT ALL v0.c1, v0.c2 FROM v0 GROUP BY v0.c1, v0.c2;
SELECT ALL v0.c1, v0.c2 FROM v0 GROUP BY v0.c1, v0.c2 HAVING SUM(TRIM(v0.c2)) UNION ALL SELECT v0.c1, v0.c2 FROM v0 GROUP BY v0.c1, v0.c2 HAVING (NOT (SUM(TRIM(v0.c2)))) UNION ALL SELECT v0.c1, v0.c2 FROM v0 GROUP BY v0.c1, v0.c2 HAVING ((SUM(TRIM(v0.c2))) ISNULL);
SELECT ALL v0.c1, v0.c2 FROM v0 GROUP BY v0.c1, v0.c2;
SELECT ALL v0.c1, v0.c2 FROM v0 GROUP BY v0.c1, v0.c2 HAVING SUM(TRIM(v0.c2)) UNION ALL SELECT v0.c1, v0.c2 FROM v0 GROUP BY v0.c1, v0.c2 HAVING (NOT (SUM(TRIM(v0.c2)))) UNION ALL SELECT v0.c1, v0.c2 FROM v0 GROUP BY v0.c1, v0.c2 HAVING ((SUM(TRIM(v0.c2))) ISNULL);
SELECT ALL v0.c1, v0.c2 FROM v0 GROUP BY v0.c1, v0.c2;
SELECT ALL rt1.c1, rt1.c2, rt1.c0 FROM rt1;
SELECT ALL rt1.c1, rt1.c2, rt1.c0 FROM rt1 WHERE ((((- (rt1.c2)))AND(x''))) UNION ALL SELECT rt1.c1, rt1.c2, rt1.c0 FROM rt1 WHERE ((NOT ((((- (rt1.c2)))AND(x''))))) UNION ALL SELECT rt1.c1, rt1.c2, rt1.c0 FROM rt1 WHERE ((((((- (rt1.c2)))AND(x''))) ISNULL));
SELECT ALL rt1.c1, rt1.c2, rt1.c0 FROM rt1;
SELECT DISTINCT * FROM t0, rt1, vt0;
SELECT DISTINCT * FROM t0, rt1, vt0 WHERE (((((rt1.c0)>=(rt1.c1))) IS FALSE)) UNION SELECT DISTINCT * FROM t0, rt1, vt0 WHERE ((NOT (((((rt1.c0)>=(rt1.c1))) IS FALSE)))) UNION SELECT DISTINCT * FROM t0, rt1, vt0 WHERE (((((((rt1.c0)>=(rt1.c1))) IS FALSE)) ISNULL));
SELECT DISTINCT * FROM t0, rt1, vt0;
SELECT v0.c0, t0.c2, v0.c2, t0.c1, v0.c1, rt1.c2, rt1.c0 FROM t0, rt1, v0 GROUP BY v0.c0, t0.c2, v0.c2, t0.c1, v0.c1, rt1.c2, rt1.c0;
SELECT v0.c0, t0.c2, v0.c2, t0.c1, v0.c1, rt1.c2, rt1.c0 FROM t0, rt1, v0 WHERE (((LIKE(v0.c1, t0.c0, 'R'))LIKE(t0.c0 COLLATE BINARY))) GROUP BY v0.c0, t0.c2, v0.c2, t0.c1, v0.c1, rt1.c2, rt1.c0 UNION SELECT ALL v0.c0, t0.c2, v0.c2, t0.c1, v0.c1, rt1.c2, rt1.c0 FROM t0, rt1, v0 WHERE ((NOT (((LIKE(v0.c1, t0.c0, 'R'))LIKE(t0.c0 COLLATE BINARY))))) GROUP BY v0.c0, t0.c2, v0.c2, t0.c1, v0.c1, rt1.c2, rt1.c0 UNION SELECT v0.c0, t0.c2, v0.c2, t0.c1, v0.c1, rt1.c2, rt1.c0 FROM t0, rt1, v0 WHERE (((((LIKE(v0.c1, t0.c0, 'R'))LIKE(t0.c0 COLLATE BINARY))) ISNULL)) GROUP BY v0.c0, t0.c2, v0.c2, t0.c1, v0.c1, rt1.c2, rt1.c0;
SELECT v0.c0, t0.c2, v0.c2, t0.c1, v0.c1, rt1.c2, rt1.c0 FROM t0, rt1, v0 GROUP BY v0.c0, t0.c2, v0.c2, t0.c1, v0.c1, rt1.c2, rt1.c0;
SELECT rt1.c2, rt1.c1 FROM v0, rt1 GROUP BY rt1.c2, rt1.c1;
SELECT rt1.c2, rt1.c1 FROM v0, rt1 GROUP BY rt1.c2, rt1.c1 HAVING '' UNION ALL SELECT ALL rt1.c2, rt1.c1 FROM v0, rt1 GROUP BY rt1.c2, rt1.c1 HAVING (NOT ('')) UNION ALL SELECT ALL rt1.c2, rt1.c1 FROM v0, rt1 GROUP BY rt1.c2, rt1.c1 HAVING (('') ISNULL);
SELECT rt1.c2, rt1.c1 FROM v0, rt1 GROUP BY rt1.c2, rt1.c1;
SELECT rt1.c2, rt1.c1 FROM v0, rt1 GROUP BY rt1.c2, rt1.c1 HAVING '' UNION ALL SELECT ALL rt1.c2, rt1.c1 FROM v0, rt1 GROUP BY rt1.c2, rt1.c1 HAVING (NOT ('')) UNION ALL SELECT ALL rt1.c2, rt1.c1 FROM v0, rt1 GROUP BY rt1.c2, rt1.c1 HAVING (('') ISNULL);
SELECT rt1.c2, rt1.c1 FROM v0, rt1 GROUP BY rt1.c2, rt1.c1;
SELECT ALL * FROM vt0, t0;
SELECT ALL * FROM vt0, t0 WHERE (('e' IN ())) UNION ALL SELECT * FROM vt0, t0 WHERE ((NOT (('e' IN ())))) UNION ALL SELECT ALL * FROM vt0, t0 WHERE (((('e' IN ())) ISNULL));
SELECT ALL * FROM vt0, t0;
SELECT DISTINCT * FROM v0, vt0;
SELECT DISTINCT * FROM v0, vt0 WHERE (CASE WHEN CASE x''  WHEN v0.c2 THEN 0.2954248435054805 END THEN v0.c2 COLLATE BINARY ELSE ((((vt0.c0)AND(v0.c2)))OR(v0.c1)) END) UNION SELECT DISTINCT * FROM v0, vt0 WHERE ((NOT (CASE WHEN CASE x''  WHEN v0.c2 THEN 0.2954248435054805 END THEN v0.c2 COLLATE BINARY ELSE ((((vt0.c0)AND(v0.c2)))OR(v0.c1)) END))) UNION SELECT DISTINCT * FROM v0, vt0 WHERE (((CASE WHEN CASE x''  WHEN v0.c2 THEN 0.2954248435054805 END THEN v0.c2 COLLATE BINARY ELSE ((((vt0.c0)AND(v0.c2)))OR(v0.c1)) END) ISNULL));
SELECT DISTINCT * FROM v0, vt0;
SELECT ALL t0.c2, t0.c1 FROM rt1, t0 GROUP BY t0.c2, t0.c1;
SELECT ALL t0.c2, t0.c1 FROM rt1 NOT INDEXED, t0 WHERE (((((('1899719288'))==((t0.c0))))LIKE(((rt1.c1)IS(t0.c2))))) GROUP BY t0.c2, t0.c1 UNION SELECT t0.c2, t0.c1 FROM rt1, t0 WHERE ((NOT (((((('1899719288'))==((t0.c0))))LIKE(((rt1.c1)IS(t0.c2))))))) GROUP BY t0.c2, t0.c1 UNION SELECT ALL t0.c2, t0.c1 FROM rt1, t0 WHERE (((((((('1899719288'))=((t0.c0))))LIKE(((rt1.c1)IS(t0.c2))))) ISNULL)) GROUP BY t0.c2, t0.c1;
SELECT ALL t0.c2, t0.c1 FROM rt1, t0 GROUP BY t0.c2, t0.c1;
SELECT v0.c0, v0.c2, vt0.c0, t0.c0, v0.c1 FROM vt0, t0 LEFT OUTER JOIN v0 ON (((v0.c1, vt0.c0, t0.c0)) NOT BETWEEN ((RTRIM(x''), ((t0.c0)IS NOT(v0.c2)), ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c2)))) AND ((-332872270, (((t0.c0, v0.c1, '1627154356', t0.c0, t0.c1))<((v0.c1, t0.c1, v0.c0, v0.c0, v0.c0))), 0.36607662064361624))) GROUP BY v0.c0, v0.c2, vt0.c0, t0.c0, v0.c1;
SELECT v0.c0, v0.c2, vt0.c0, t0.c0, v0.c1 FROM vt0, t0 LEFT OUTER JOIN v0 ON (((v0.c1, vt0.c0, t0.c0)) NOT BETWEEN ((RTRIM(x''), ((t0.c0)IS NOT(v0.c2)), ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c2)))) AND ((-332872270, (((t0.c0, v0.c1, '1627154356', t0.c0, t0.c1))<((v0.c1, t0.c1, v0.c0, v0.c0, v0.c0))), 0.36607662064361624))) GROUP BY v0.c0, v0.c2, vt0.c0, t0.c0, v0.c1 HAVING (((t0.c2))>(((v0.c0 IN ())))) UNION ALL SELECT v0.c0, v0.c2, vt0.c0, t0.c0, v0.c1 FROM vt0, t0 LEFT OUTER JOIN v0 ON (((v0.c1, vt0.c0, t0.c0)) NOT BETWEEN ((RTRIM(x''), ((t0.c0)IS NOT(v0.c2)), ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c2)))) AND ((-332872270, (((t0.c0, v0.c1, '1627154356', t0.c0, t0.c1))<((v0.c1, t0.c1, v0.c0, v0.c0, v0.c0))), 0.36607662064361624))) GROUP BY v0.c0, v0.c2, vt0.c0, t0.c0, v0.c1 HAVING (NOT ((((t0.c2))>(((v0.c0 IN ())))))) UNION ALL SELECT v0.c0, v0.c2, vt0.c0, t0.c0, v0.c1 FROM vt0, t0 LEFT OUTER JOIN v0 ON (((v0.c1, vt0.c0, t0.c0)) NOT BETWEEN ((RTRIM(x''), ((t0.c0)IS NOT(v0.c2)), ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c2)))) AND ((-332872270, (((t0.c0, v0.c1, '1627154356', t0.c0, t0.c1))<((v0.c1, t0.c1, v0.c0, v0.c0, v0.c0))), 0.36607662064361624))) GROUP BY v0.c0, v0.c2, vt0.c0, t0.c0, v0.c1 HAVING (((((t0.c2))>(((v0.c0 IN ()))))) ISNULL);
SELECT v0.c0, v0.c2, vt0.c0, t0.c0, v0.c1 FROM vt0, t0 LEFT OUTER JOIN v0 ON (((v0.c1, vt0.c0, t0.c0)) NOT BETWEEN ((RTRIM(x''), ((t0.c0)IS NOT(v0.c2)), ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c2)))) AND ((-332872270, (((t0.c0, v0.c1, '1627154356', t0.c0, t0.c1))<((v0.c1, t0.c1, v0.c0, v0.c0, v0.c0))), 0.36607662064361624))) GROUP BY v0.c0, v0.c2, vt0.c0, t0.c0, v0.c1;
SELECT v0.c0, v0.c2, vt0.c0, t0.c0, v0.c1 FROM vt0, t0 LEFT OUTER JOIN v0 ON (((v0.c1, vt0.c0, t0.c0)) NOT BETWEEN ((RTRIM(x''), ((t0.c0)IS NOT(v0.c2)), ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c2)))) AND ((-332872270, (((t0.c0, v0.c1, '1627154356', t0.c0, t0.c1))<((v0.c1, t0.c1, v0.c0, v0.c0, v0.c0))), 0.36607662064361624))) GROUP BY v0.c0, v0.c2, vt0.c0, t0.c0, v0.c1 HAVING (((t0.c2))>(((v0.c0 IN ())))) UNION ALL SELECT v0.c0, v0.c2, vt0.c0, t0.c0, v0.c1 FROM vt0, t0 LEFT OUTER JOIN v0 ON (((v0.c1, vt0.c0, t0.c0)) NOT BETWEEN ((RTRIM(x''), ((t0.c0)IS NOT(v0.c2)), ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c2)))) AND ((-332872270, (((t0.c0, v0.c1, '1627154356', t0.c0, t0.c1))<((v0.c1, t0.c1, v0.c0, v0.c0, v0.c0))), 0.36607662064361624))) GROUP BY v0.c0, v0.c2, vt0.c0, t0.c0, v0.c1 HAVING (NOT ((((t0.c2))>(((v0.c0 IN ())))))) UNION ALL SELECT v0.c0, v0.c2, vt0.c0, t0.c0, v0.c1 FROM vt0, t0 LEFT OUTER JOIN v0 ON (((v0.c1, vt0.c0, t0.c0)) NOT BETWEEN ((RTRIM(x''), ((t0.c0)IS NOT(v0.c2)), ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c2)))) AND ((-332872270, (((t0.c0, v0.c1, '1627154356', t0.c0, t0.c1))<((v0.c1, t0.c1, v0.c0, v0.c0, v0.c0))), 0.36607662064361624))) GROUP BY v0.c0, v0.c2, vt0.c0, t0.c0, v0.c1 HAVING (((((t0.c2))>(((v0.c0 IN ()))))) ISNULL);
SELECT v0.c0, v0.c2, vt0.c0, t0.c0, v0.c1 FROM vt0, t0 LEFT OUTER JOIN v0 ON (((v0.c1, vt0.c0, t0.c0)) NOT BETWEEN ((RTRIM(x''), ((t0.c0)IS NOT(v0.c2)), ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c2)))) AND ((-332872270, (((t0.c0, v0.c1, '1627154356', t0.c0, t0.c1))<((v0.c1, t0.c1, v0.c0, v0.c0, v0.c0))), 0.36607662064361624))) GROUP BY v0.c0, v0.c2, vt0.c0, t0.c0, v0.c1;
SELECT ALL * FROM t0, v0, vt0, rt1;
SELECT ALL * FROM t0, v0, vt0, rt1 WHERE ('') UNION ALL SELECT * FROM t0, v0, vt0, rt1 WHERE ((NOT (''))) UNION ALL SELECT * FROM t0, v0, vt0, rt1 WHERE ((('') ISNULL));
SELECT ALL * FROM t0, v0, vt0, rt1;
SELECT DISTINCT * FROM rt1, v0;
SELECT DISTINCT * FROM rt1, v0 WHERE ((NOT (rt1.c1 COLLATE RTRIM))) UNION SELECT DISTINCT * FROM rt1, v0 WHERE ((NOT ((NOT (rt1.c1 COLLATE RTRIM))))) UNION SELECT DISTINCT * FROM rt1, v0 WHERE ((((NOT (rt1.c1 COLLATE RTRIM))) ISNULL));
SELECT DISTINCT * FROM rt1, v0;
SELECT ALL rt1.c2 FROM rt1 GROUP BY rt1.c2;
SELECT ALL rt1.c2 FROM rt1 WHERE (((((((rt1.c1)OR(rt1.c1)))OR(rt1.c1))) NOT BETWEEN (((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c1))) AND (rt1.c2))) GROUP BY rt1.c2 UNION SELECT ALL rt1.c2 FROM rt1 WHERE ((NOT (((((((rt1.c1)OR(rt1.c1)))OR(rt1.c1))) NOT BETWEEN (((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c1))) AND (rt1.c2))))) GROUP BY rt1.c2 UNION SELECT ALL rt1.c2 FROM rt1 WHERE (((((((((rt1.c1)OR(rt1.c1)))OR(rt1.c1))) NOT BETWEEN (((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c1))) AND (rt1.c2))) ISNULL)) GROUP BY rt1.c2;
SELECT ALL rt1.c2 FROM rt1 GROUP BY rt1.c2;
SELECT t0.c1 FROM t0 GROUP BY t0.c1;
SELECT ALL t0.c1 FROM t0 GROUP BY t0.c1 HAVING AVG((0.18414555685235956 IN ())) UNION ALL SELECT t0.c1 FROM t0 GROUP BY t0.c1 HAVING (NOT (AVG((0.18414555685235956 IN ())))) UNION ALL SELECT ALL t0.c1 FROM t0 GROUP BY t0.c1 HAVING ((AVG((0.18414555685235956 IN ()))) ISNULL);
SELECT t0.c1 FROM t0 GROUP BY t0.c1;
SELECT ALL t0.c1 FROM t0 GROUP BY t0.c1 HAVING AVG((0.18414555685235956 IN ())) UNION ALL SELECT t0.c1 FROM t0 GROUP BY t0.c1 HAVING (NOT (AVG((0.18414555685235956 IN ())))) UNION ALL SELECT ALL t0.c1 FROM t0 GROUP BY t0.c1 HAVING ((AVG((0.18414555685235956 IN ()))) ISNULL);
SELECT t0.c1 FROM t0 GROUP BY t0.c1;
SELECT * FROM t0;
SELECT * FROM t0 WHERE (((t0.c0 COLLATE BINARY) NOT NULL)) UNION ALL SELECT ALL * FROM t0 WHERE ((NOT (((t0.c0 COLLATE BINARY) NOT NULL)))) UNION ALL SELECT * FROM t0 WHERE (((((t0.c0 COLLATE BINARY) NOT NULL)) ISNULL));
SELECT * FROM t0;
SELECT DISTINCT v0.c0, v0.c1, t0.c2 FROM v0 CROSS JOIN t0 ON ((CAST(t0.c0 AS TEXT)) NOT NULL) RIGHT OUTER JOIN vt0 ON CASE WHEN (NOT (v0.c0)) THEN (vt0.c0 IN ()) END;
SELECT DISTINCT v0.c0, v0.c1, t0.c2 FROM v0 CROSS JOIN t0 ON ((CAST(t0.c0 AS TEXT)) NOT NULL) RIGHT OUTER JOIN vt0 ON CASE WHEN (NOT (v0.c0)) THEN (vt0.c0 IN ()) END WHERE (json_array_length((((v0.c1, 'eW>', t0.c0, v0.c2, t0.c0)) BETWEEN ((vt0.c0, t0.c1, t0.c2, v0.c1, v0.c0)) AND ((t0.c2, v0.c0, t0.c0, t0.c2, t0.c2))), ABS(NULL))) UNION SELECT DISTINCT v0.c0, v0.c1, t0.c2 FROM v0 CROSS JOIN t0 ON ((CAST(t0.c0 AS TEXT)) NOT NULL) RIGHT OUTER JOIN vt0 ON CASE WHEN (NOT (v0.c0)) THEN (vt0.c0 IN ()) END WHERE ((NOT (json_array_length((((v0.c1, 'eW>', t0.c0, v0.c2, t0.c0)) BETWEEN ((vt0.c0, t0.c1, t0.c2, v0.c1, v0.c0)) AND ((t0.c2, v0.c0, t0.c0, t0.c2, t0.c2))), ABS(NULL))))) UNION SELECT DISTINCT v0.c0, v0.c1, t0.c2 FROM v0 CROSS JOIN t0 ON ((CAST(t0.c0 AS TEXT)) NOT NULL) RIGHT OUTER JOIN vt0 ON CASE WHEN (NOT (v0.c0)) THEN (vt0.c0 IN ()) END WHERE (((json_array_length((((v0.c1, 'eW>', t0.c0, v0.c2, t0.c0)) BETWEEN ((vt0.c0, t0.c1, t0.c2, v0.c1, v0.c0)) AND ((t0.c2, v0.c0, t0.c0, t0.c2, t0.c2))), ABS(NULL))) ISNULL));
SELECT DISTINCT v0.c0, v0.c1, t0.c2 FROM v0 CROSS JOIN t0 ON ((CAST(t0.c0 AS TEXT)) NOT NULL) RIGHT OUTER JOIN vt0 ON CASE WHEN (NOT (v0.c0)) THEN (vt0.c0 IN ()) END;
SELECT rt1.c0, t0.c1, rt1.c2, rt1.c1, t0.c2 FROM t0, rt1 GROUP BY rt1.c0, t0.c1, rt1.c2, rt1.c1, t0.c2;
SELECT ALL rt1.c0, t0.c1, rt1.c2, rt1.c1, t0.c2 FROM t0, rt1 WHERE (NULL) GROUP BY rt1.c0, t0.c1, rt1.c2, rt1.c1, t0.c2 UNION SELECT rt1.c0, t0.c1, rt1.c2, rt1.c1, t0.c2 FROM t0, rt1 WHERE ((NOT (NULL))) GROUP BY rt1.c0, t0.c1, rt1.c2, rt1.c1, t0.c2 UNION SELECT ALL rt1.c0, t0.c1, rt1.c2, rt1.c1, t0.c2 FROM t0, rt1 WHERE (((NULL) ISNULL)) GROUP BY rt1.c0, t0.c1, rt1.c2, rt1.c1, t0.c2;
SELECT rt1.c0, t0.c1, rt1.c2, rt1.c1, t0.c2 FROM t0, rt1 GROUP BY rt1.c0, t0.c1, rt1.c2, rt1.c1, t0.c2;
SELECT rt1.c0, vt0.c0, t0.c2, rt1.c2, t0.c1 FROM rt1, vt0 INNER JOIN t0 ON ((t0.c1 COLLATE NOCASE) NOTNULL) GROUP BY rt1.c0, vt0.c0, t0.c2, rt1.c2, t0.c1;
SELECT rt1.c0, vt0.c0, t0.c2, rt1.c2, t0.c1 FROM rt1, vt0 INNER JOIN t0 ON ((t0.c1 COLLATE NOCASE) NOTNULL) GROUP BY rt1.c0, vt0.c0, t0.c2, rt1.c2, t0.c1 HAVING CAST(vt0.c0 AS INTEGER) COLLATE NOCASE UNION ALL SELECT rt1.c0, vt0.c0, t0.c2, rt1.c2, t0.c1 FROM rt1, vt0 INNER JOIN t0 ON ((t0.c1 COLLATE NOCASE) NOTNULL) GROUP BY rt1.c0, vt0.c0, t0.c2, rt1.c2, t0.c1 HAVING (NOT (CAST(vt0.c0 AS INTEGER) COLLATE NOCASE)) UNION ALL SELECT ALL rt1.c0, vt0.c0, t0.c2, rt1.c2, t0.c1 FROM rt1, vt0 INNER JOIN t0 ON ((t0.c1 COLLATE NOCASE) NOTNULL) GROUP BY rt1.c0, vt0.c0, t0.c2, rt1.c2, t0.c1 HAVING ((CAST(vt0.c0 AS INTEGER) COLLATE NOCASE) ISNULL);
SELECT rt1.c0, vt0.c0, t0.c2, rt1.c2, t0.c1 FROM rt1, vt0 INNER JOIN t0 ON ((t0.c1 COLLATE NOCASE) NOTNULL) GROUP BY rt1.c0, vt0.c0, t0.c2, rt1.c2, t0.c1;
SELECT rt1.c0, vt0.c0, t0.c2, rt1.c2, t0.c1 FROM rt1, vt0 INNER JOIN t0 ON ((t0.c1 COLLATE NOCASE) NOTNULL) GROUP BY rt1.c0, vt0.c0, t0.c2, rt1.c2, t0.c1 HAVING CAST(vt0.c0 AS INTEGER) COLLATE NOCASE UNION ALL SELECT rt1.c0, vt0.c0, t0.c2, rt1.c2, t0.c1 FROM rt1, vt0 INNER JOIN t0 ON ((t0.c1 COLLATE NOCASE) NOTNULL) GROUP BY rt1.c0, vt0.c0, t0.c2, rt1.c2, t0.c1 HAVING (NOT (CAST(vt0.c0 AS INTEGER) COLLATE NOCASE)) UNION ALL SELECT ALL rt1.c0, vt0.c0, t0.c2, rt1.c2, t0.c1 FROM rt1, vt0 INNER JOIN t0 ON ((t0.c1 COLLATE NOCASE) NOTNULL) GROUP BY rt1.c0, vt0.c0, t0.c2, rt1.c2, t0.c1 HAVING ((CAST(vt0.c0 AS INTEGER) COLLATE NOCASE) ISNULL);
SELECT rt1.c0, vt0.c0, t0.c2, rt1.c2, t0.c1 FROM rt1, vt0 INNER JOIN t0 ON ((t0.c1 COLLATE NOCASE) NOTNULL) GROUP BY rt1.c0, vt0.c0, t0.c2, rt1.c2, t0.c1;
SELECT * FROM vt0, rt1, v0, t0;
SELECT ALL * FROM vt0, rt1, v0, t0 WHERE (TYPEOF(CASE WHEN v0.c1 THEN t0.c0 END)) UNION ALL SELECT ALL * FROM vt0, rt1, v0, t0 WHERE ((NOT (TYPEOF(CASE WHEN v0.c1 THEN t0.c0 END)))) UNION ALL SELECT * FROM vt0, rt1, v0, t0 WHERE (((TYPEOF(CASE WHEN v0.c1 THEN t0.c0 END)) ISNULL));
SELECT * FROM vt0, rt1, v0, t0;
SELECT DISTINCT * FROM rt1, t0 NOT INDEXED;
SELECT DISTINCT * FROM rt1, t0 WHERE ((~ (((rt1.c1)<(rt1.c2))))) UNION SELECT DISTINCT * FROM rt1, t0 WHERE ((NOT ((~ (((rt1.c1)<(rt1.c2))))))) UNION SELECT DISTINCT * FROM rt1, t0 WHERE ((((~ (((rt1.c1)<(rt1.c2))))) ISNULL));
SELECT DISTINCT * FROM rt1, t0 NOT INDEXED;
SELECT ALL vt0.c0, t0.c1 FROM rt1 INNER JOIN v0 ON CASE ((t0.c0) NOT BETWEEN (rt1.c0) AND ('438422291'))  WHEN (vt0.c0 IN ()) THEN (((t0.c0))<((v0.c1))) ELSE ((((((((t0.c2)OR(t0.c1)))AND(v0.c0)))AND(rt1.c0)))OR(vt0.c0)) END RIGHT OUTER JOIN t0 ON ((((t0.c2, t0.c0, x'')) NOT BETWEEN ((t0.c2, rt1.c2, rt1.c2)) AND ((rt1.c0, vt0.c0, v0.c2))) IN ()) LEFT OUTER JOIN vt0 ON (((((((((v0.c2)OR(t0.c2)))OR(vt0.c0)))OR(rt1.c2)))OR(t0.c1)) IN ()) GROUP BY vt0.c0, t0.c1;
SELECT ALL t0.c2, t0.c1, t0.c0, rt1.c2 FROM rt1 CROSS JOIN t0 ON ((TRIM(t0.c1)) IS FALSE) GROUP BY t0.c2, t0.c1, t0.c0, rt1.c2;
SELECT t0.c2, t0.c1, t0.c0, rt1.c2 FROM rt1 CROSS JOIN t0 ON ((TRIM(t0.c1)) IS FALSE) GROUP BY t0.c2, t0.c1, t0.c0, rt1.c2 HAVING (- ((0.7027957076459883 IN (AVG(GROUP_CONCAT(rt1.c2)), t0.c1)))) UNION ALL SELECT ALL t0.c2, t0.c1, t0.c0, rt1.c2 FROM rt1 CROSS JOIN t0 ON ((TRIM(t0.c1)) IS FALSE) GROUP BY t0.c2, t0.c1, t0.c0, rt1.c2 HAVING (NOT ((- ((0.7027957076459883 IN (AVG(GROUP_CONCAT(rt1.c2)), t0.c1)))))) UNION ALL SELECT t0.c2, t0.c1, t0.c0, rt1.c2 FROM rt1 CROSS JOIN t0 ON ((TRIM(t0.c1)) IS FALSE) GROUP BY t0.c2, t0.c1, t0.c0, rt1.c2 HAVING (((- ((0.7027957076459883 IN (AVG(GROUP_CONCAT(rt1.c2)), t0.c1))))) ISNULL);
SELECT ALL v0.c2, t0.c0, rt1.c1 FROM v0, t0, rt1, vt0;
SELECT ALL v0.c2, t0.c0, rt1.c1 FROM v0, t0, rt1, vt0 WHERE ('21614646') UNION ALL SELECT ALL v0.c2, t0.c0, rt1.c1 FROM v0, t0, rt1, vt0 WHERE ((NOT ('21614646'))) UNION ALL SELECT v0.c2, t0.c0, rt1.c1 FROM v0, t0, rt1, vt0 WHERE ((('21614646') ISNULL));
SELECT ALL v0.c2, t0.c0, rt1.c1 FROM v0, t0, rt1, vt0;
SELECT DISTINCT rt1.c1, t0.c2 FROM rt1, vt0, t0;
SELECT DISTINCT rt1.c1, t0.c2 FROM rt1, vt0, t0 WHERE (CAST(((rt1.c2)LIKE(t0.c1)) AS REAL)) UNION SELECT DISTINCT rt1.c1, t0.c2 FROM rt1, vt0, t0 WHERE ((NOT (CAST(((rt1.c2)LIKE(t0.c1)) AS REAL)))) UNION SELECT DISTINCT rt1.c1, t0.c2 FROM rt1, vt0, t0 WHERE (((CAST(((rt1.c2)LIKE(t0.c1)) AS REAL)) ISNULL));
SELECT DISTINCT rt1.c1, t0.c2 FROM rt1, vt0, t0;
SELECT ALL rt1.c1, rt1.c2, t0.c1, t0.c0 FROM vt0, t0, rt1 GROUP BY rt1.c1, rt1.c2, t0.c1, t0.c0;
SELECT rt1.c1, rt1.c2, t0.c1, t0.c0 FROM vt0, t0, rt1 WHERE (((((t0.c0) ISNULL)) IS FALSE)) GROUP BY rt1.c1, rt1.c2, t0.c1, t0.c0 UNION SELECT ALL rt1.c1, rt1.c2, t0.c1, t0.c0 FROM vt0, t0, rt1 WHERE ((NOT (((((t0.c0) ISNULL)) IS FALSE)))) GROUP BY rt1.c1, rt1.c2, t0.c1, t0.c0 UNION SELECT rt1.c1, rt1.c2, t0.c1, t0.c0 FROM vt0, t0, rt1 NOT INDEXED WHERE (((((((t0.c0) ISNULL)) IS FALSE)) ISNULL)) GROUP BY rt1.c1, rt1.c2, t0.c1, t0.c0;
SELECT ALL rt1.c1, rt1.c2, t0.c1, t0.c0 FROM vt0, t0, rt1 GROUP BY rt1.c1, rt1.c2, t0.c1, t0.c0;
SELECT rt1.c0, v0.c1, v0.c2, rt1.c1, rt1.c2, vt0.c0 FROM rt1, vt0, v0 GROUP BY rt1.c0, v0.c1, v0.c2, rt1.c1, rt1.c2, vt0.c0;
SELECT rt1.c0, v0.c1, v0.c2, rt1.c1, rt1.c2, vt0.c0 FROM rt1, vt0, v0 GROUP BY rt1.c0, v0.c1, v0.c2, rt1.c1, rt1.c2, vt0.c0 HAVING COUNT(COUNT(*)) UNION ALL SELECT rt1.c0, v0.c1, v0.c2, rt1.c1, rt1.c2, vt0.c0 FROM rt1, vt0, v0 GROUP BY rt1.c0, v0.c1, v0.c2, rt1.c1, rt1.c2, vt0.c0 HAVING (NOT (COUNT(COUNT(*)))) UNION ALL SELECT ALL rt1.c0, v0.c1, v0.c2, rt1.c1, rt1.c2, vt0.c0 FROM rt1, vt0, v0 GROUP BY rt1.c0, v0.c1, v0.c2, rt1.c1, rt1.c2, vt0.c0 HAVING ((COUNT(COUNT(*))) ISNULL);
SELECT ALL * FROM v0 CROSS JOIN t0 ON CAST(v0.c1 COLLATE RTRIM AS BLOB);
SELECT * FROM v0 CROSS JOIN t0 ON CAST(v0.c1 COLLATE RTRIM AS BLOB) WHERE (((LIKELY(v0.c0))-(t0.c1 COLLATE BINARY))) UNION ALL SELECT * FROM v0 CROSS JOIN t0 ON CAST(v0.c1 COLLATE RTRIM AS BLOB) WHERE ((NOT (((LIKELY(v0.c0))-(t0.c1 COLLATE BINARY))))) UNION ALL SELECT ALL * FROM v0 CROSS JOIN t0 ON CAST(v0.c1 COLLATE RTRIM AS BLOB) WHERE (((((LIKELY(v0.c0))-(t0.c1 COLLATE BINARY))) ISNULL));
SELECT ALL * FROM v0 CROSS JOIN t0 ON CAST(v0.c1 COLLATE RTRIM AS BLOB);
SELECT DISTINCT * FROM rt1, vt0, t0 NOT INDEXED CROSS JOIN v0 ON CASE ((v0.c0) NOT BETWEEN (rt1.c0) AND (NULL))  WHEN (NOT (t0.c0)) THEN ((rt1.c0) NOT NULL) END;
SELECT DISTINCT * FROM rt1, vt0, t0 CROSS JOIN v0 ON CASE ((v0.c0) NOT BETWEEN (rt1.c0) AND (NULL))  WHEN (NOT (t0.c0)) THEN ((rt1.c0) NOT NULL) END WHERE (CASE rt1.c1  WHEN v0.c2 THEN t0.c1 WHEN '' THEN rt1.c0 WHEN v0.c1 THEN v0.c2 END COLLATE RTRIM) UNION SELECT DISTINCT * FROM rt1, vt0, t0 CROSS JOIN v0 ON CASE ((v0.c0) NOT BETWEEN (rt1.c0) AND (NULL))  WHEN (NOT (t0.c0)) THEN ((rt1.c0) NOT NULL) END WHERE ((NOT (CASE rt1.c1  WHEN v0.c2 THEN t0.c1 WHEN '' THEN rt1.c0 WHEN v0.c1 THEN v0.c2 END COLLATE RTRIM))) UNION SELECT DISTINCT * FROM rt1, vt0, t0 CROSS JOIN v0 ON CASE ((v0.c0) NOT BETWEEN (rt1.c0) AND (NULL))  WHEN (NOT (t0.c0)) THEN ((rt1.c0) NOT NULL) END WHERE (((CASE rt1.c1  WHEN v0.c2 THEN t0.c1 WHEN '' THEN rt1.c0 WHEN v0.c1 THEN v0.c2 END COLLATE RTRIM) ISNULL));
SELECT DISTINCT * FROM rt1, vt0, t0 NOT INDEXED CROSS JOIN v0 ON CASE ((v0.c0) NOT BETWEEN (rt1.c0) AND (NULL))  WHEN (NOT (t0.c0)) THEN ((rt1.c0) NOT NULL) END;
SELECT ALL rt1.c2, t0.c1, rt1.c1, t0.c0, t0.c2 FROM rt1, t0 GROUP BY rt1.c2, t0.c1, rt1.c1, t0.c0, t0.c2;
SELECT rt1.c2, t0.c1, rt1.c1, t0.c0, t0.c2 FROM rt1, t0 WHERE (((((rt1.c0)LIKE(t0.c0))) BETWEEN ((+ (rt1.c0))) AND ((((-1.411329284E9, x'', t0.c1)) BETWEEN ((rt1.c0, rt1.c1, rt1.c2)) AND ((rt1.c0, t0.c1, t0.c2)))))) GROUP BY rt1.c2, t0.c1, rt1.c1, t0.c0, t0.c2 UNION SELECT ALL rt1.c2, t0.c1, rt1.c1, t0.c0, t0.c2 FROM rt1, t0 WHERE ((NOT (((((rt1.c0)LIKE(t0.c0))) BETWEEN ((+ (rt1.c0))) AND ((((-1.411329284E9, x'', t0.c1)) BETWEEN ((rt1.c0, rt1.c1, rt1.c2)) AND ((rt1.c0, t0.c1, t0.c2)))))))) GROUP BY rt1.c2, t0.c1, rt1.c1, t0.c0, t0.c2 UNION SELECT ALL rt1.c2, t0.c1, rt1.c1, t0.c0, t0.c2 FROM rt1, t0 WHERE (((((((rt1.c0)LIKE(t0.c0))) BETWEEN ((+ (rt1.c0))) AND ((((-1.411329284E9, x'', t0.c1)) BETWEEN ((rt1.c0, rt1.c1, rt1.c2)) AND ((rt1.c0, t0.c1, t0.c2)))))) ISNULL)) GROUP BY rt1.c2, t0.c1, rt1.c1, t0.c0, t0.c2;
SELECT ALL rt1.c2, t0.c1, rt1.c1, t0.c0, t0.c2 FROM rt1, t0 GROUP BY rt1.c2, t0.c1, rt1.c1, t0.c0, t0.c2;
SELECT ALL v0.c0, t0.c1, v0.c1, v0.c2, t0.c0 FROM t0, v0 GROUP BY v0.c0, t0.c1, v0.c1, v0.c2, t0.c0;
SELECT v0.c0, t0.c1, v0.c1, v0.c2, t0.c0 FROM t0, v0 GROUP BY v0.c0, t0.c1, v0.c1, v0.c2, t0.c0 HAVING 0.06456008332459673 UNION ALL SELECT v0.c0, t0.c1, v0.c1, v0.c2, t0.c0 FROM t0, v0 GROUP BY v0.c0, t0.c1, v0.c1, v0.c2, t0.c0 HAVING (NOT (0.06456008332459673)) UNION ALL SELECT ALL v0.c0, t0.c1, v0.c1, v0.c2, t0.c0 FROM t0, v0 GROUP BY v0.c0, t0.c1, v0.c1, v0.c2, t0.c0 HAVING ((0.06456008332459673) ISNULL);
SELECT ALL v0.c0, t0.c1, v0.c1, v0.c2, t0.c0 FROM t0, v0 GROUP BY v0.c0, t0.c1, v0.c1, v0.c2, t0.c0;
SELECT v0.c0, t0.c1, v0.c1, v0.c2, t0.c0 FROM t0, v0 GROUP BY v0.c0, t0.c1, v0.c1, v0.c2, t0.c0 HAVING 0.06456008332459673 UNION ALL SELECT v0.c0, t0.c1, v0.c1, v0.c2, t0.c0 FROM t0, v0 GROUP BY v0.c0, t0.c1, v0.c1, v0.c2, t0.c0 HAVING (NOT (0.06456008332459673)) UNION ALL SELECT ALL v0.c0, t0.c1, v0.c1, v0.c2, t0.c0 FROM t0, v0 GROUP BY v0.c0, t0.c1, v0.c1, v0.c2, t0.c0 HAVING ((0.06456008332459673) ISNULL);
SELECT ALL v0.c0, t0.c1, v0.c1, v0.c2, t0.c0 FROM t0, v0 GROUP BY v0.c0, t0.c1, v0.c1, v0.c2, t0.c0;
SELECT ALL v0.c2, v0.c0, t0.c0, t0.c1 FROM t0 LEFT OUTER JOIN vt0 ON v0.c2 CROSS JOIN v0 ON MIN((((t0.c2, vt0.c0, t0.c2)) NOT BETWEEN ((v0.c0, 0.32795664247546963, v0.c2)) AND ((v0.c1, t0.c1, vt0.c0))), t0.c0 COLLATE NOCASE);
SELECT DISTINCT * FROM rt1, t0 FULL OUTER JOIN vt0 ON (+ (((((((((NULL)OR(t0.c0)))AND(rt1.c0)))AND(v0.c0)))AND(t0.c2)))) RIGHT OUTER JOIN v0 ON rtreenode(CAST(t0.c2 AS REAL), CASE v0.c0  WHEN t0.c0 THEN rt1.c0 ELSE vt0.c0 END);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (vt0.c0) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (vt0.c0))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((vt0.c0) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT rt1.c1, v0.c0, t0.c0, rt1.c0, rt1.c2, v0.c1, t0.c2, v0.c2 FROM rt1, v0, t0 GROUP BY rt1.c1, v0.c0, t0.c0, rt1.c0, rt1.c2, v0.c1, t0.c2, v0.c2;
SELECT rt1.c1, v0.c0, t0.c0, rt1.c0, rt1.c2, v0.c1, t0.c2, v0.c2 FROM rt1, v0, t0 GROUP BY rt1.c1, v0.c0, t0.c0, rt1.c0, rt1.c2, v0.c1, t0.c2, v0.c2 HAVING TOTAL(AVG(t0.c0)) COLLATE RTRIM UNION ALL SELECT rt1.c1, v0.c0, t0.c0, rt1.c0, rt1.c2, v0.c1, t0.c2, v0.c2 FROM rt1, v0, t0 GROUP BY rt1.c1, v0.c0, t0.c0, rt1.c0, rt1.c2, v0.c1, t0.c2, v0.c2 HAVING (NOT (TOTAL(AVG(t0.c0)) COLLATE RTRIM)) UNION ALL SELECT rt1.c1, v0.c0, t0.c0, rt1.c0, rt1.c2, v0.c1, t0.c2, v0.c2 FROM rt1, v0, t0 GROUP BY rt1.c1, v0.c0, t0.c0, rt1.c0, rt1.c2, v0.c1, t0.c2, v0.c2 HAVING ((TOTAL(AVG(t0.c0)) COLLATE RTRIM) ISNULL);
SELECT ALL rt1.c2, rt1.c1, rt1.c0, v0.c1, v0.c0, v0.c2 FROM vt0, v0, rt1;
SELECT ALL rt1.c2, rt1.c1, rt1.c0, v0.c1, v0.c0, v0.c2 FROM vt0, v0, rt1 WHERE (((((v0.c1) BETWEEN (rt1.c1) AND (v0.c2))) NOT BETWEEN ((- (rt1.c1))) AND ((rt1.c2 IN ())))) UNION ALL SELECT rt1.c2, rt1.c1, rt1.c0, v0.c1, v0.c0, v0.c2 FROM vt0, v0, rt1 WHERE ((NOT (((((v0.c1) BETWEEN (rt1.c1) AND (v0.c2))) NOT BETWEEN ((- (rt1.c1))) AND ((rt1.c2 IN ())))))) UNION ALL SELECT rt1.c2, rt1.c1, rt1.c0, v0.c1, v0.c0, v0.c2 FROM vt0, v0, rt1 WHERE (((((((v0.c1) BETWEEN (rt1.c1) AND (v0.c2))) NOT BETWEEN ((- (rt1.c1))) AND ((rt1.c2 IN ())))) ISNULL));
SELECT ALL rt1.c2, rt1.c1, rt1.c0, v0.c1, v0.c0, v0.c2 FROM vt0, v0, rt1;
SELECT DISTINCT rt1.c0, t0.c1, rt1.c2, t0.c2, vt0.c0, v0.c1, t0.c0 FROM rt1, v0, vt0, t0;
SELECT DISTINCT rt1.c0, t0.c1, rt1.c2, t0.c2, vt0.c0, v0.c1, t0.c0 FROM rt1, v0, vt0, t0 WHERE ((~ ('-1e500'))) UNION SELECT DISTINCT rt1.c0, t0.c1, rt1.c2, t0.c2, vt0.c0, v0.c1, t0.c0 FROM rt1, v0, vt0, t0 WHERE ((NOT ((~ ('-1e500'))))) UNION SELECT DISTINCT rt1.c0, t0.c1, rt1.c2, t0.c2, vt0.c0, v0.c1, t0.c0 FROM rt1, v0, vt0, t0 WHERE ((((~ ('-1e500'))) ISNULL));
SELECT DISTINCT rt1.c0, t0.c1, rt1.c2, t0.c2, vt0.c0, v0.c1, t0.c0 FROM rt1, v0, vt0, t0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (CASE WHEN (0x668938d4 IN (vt0.c0, vt0.c0)) THEN x'' WHEN ((vt0.c0)IS NOT(x'b69f')) THEN json_patch(vt0.c0, 0.23864424182164934) WHEN ((vt0.c0)/(vt0.c0)) THEN CAST(vt0.c0 AS BLOB) WHEN vt0.c0 COLLATE NOCASE THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) WHEN vt0.c0 COLLATE NOCASE THEN (- (vt0.c0)) END) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (CASE WHEN (0x668938d4 IN (vt0.c0, vt0.c0)) THEN x'' WHEN ((vt0.c0)IS NOT(x'b69f')) THEN json_patch(vt0.c0, 0.23864424182164934) WHEN ((vt0.c0)/(vt0.c0)) THEN CAST(vt0.c0 AS BLOB) WHEN vt0.c0 COLLATE NOCASE THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) WHEN vt0.c0 COLLATE NOCASE THEN (- (vt0.c0)) END))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((CASE WHEN (0X668938d4 IN (vt0.c0, vt0.c0)) THEN x'' WHEN ((vt0.c0)IS NOT(x'b69f')) THEN json_patch(vt0.c0, 0.23864424182164934) WHEN ((vt0.c0)/(vt0.c0)) THEN CAST(vt0.c0 AS BLOB) WHEN vt0.c0 COLLATE NOCASE THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) WHEN vt0.c0 COLLATE NOCASE THEN (- (vt0.c0)) END) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0, t0.c2, rt1.c0, rt1.c1, v0.c1, rt1.c2, t0.c0, t0.c1, v0.c2, v0.c0 FROM v0, t0, vt0, rt1 GROUP BY vt0.c0, t0.c2, rt1.c0, rt1.c1, v0.c1, rt1.c2, t0.c0, t0.c1, v0.c2, v0.c0;
SELECT ALL vt0.c0, t0.c2, rt1.c0, rt1.c1, v0.c1, rt1.c2, t0.c0, t0.c1, v0.c2, v0.c0 FROM v0, t0, vt0, rt1 GROUP BY vt0.c0, t0.c2, rt1.c0, rt1.c1, v0.c1, rt1.c2, t0.c0, t0.c1, v0.c2, v0.c0 HAVING ((MAX(COUNT(t0.c1))) NOT NULL) UNION ALL SELECT ALL vt0.c0, t0.c2, rt1.c0, rt1.c1, v0.c1, rt1.c2, t0.c0, t0.c1, v0.c2, v0.c0 FROM v0, t0, vt0, rt1 GROUP BY vt0.c0, t0.c2, rt1.c0, rt1.c1, v0.c1, rt1.c2, t0.c0, t0.c1, v0.c2, v0.c0 HAVING (NOT (((MAX(COUNT(t0.c1))) NOT NULL))) UNION ALL SELECT ALL vt0.c0, t0.c2, rt1.c0, rt1.c1, v0.c1, rt1.c2, t0.c0, t0.c1, v0.c2, v0.c0 FROM v0, t0, vt0, rt1 GROUP BY vt0.c0, t0.c2, rt1.c0, rt1.c1, v0.c1, rt1.c2, t0.c0, t0.c1, v0.c2, v0.c0 HAVING ((((MAX(COUNT(t0.c1))) NOT NULL)) ISNULL);
SELECT MIN(TIME((((0.3189121583316328))=((rt1.c1))), rt1.c1 COLLATE BINARY, rt1.c2 COLLATE NOCASE)) FROM rt1;
SELECT t0.c0, t0.c2, v0.c2 FROM t0 FULL OUTER JOIN v0 ON (((t0.c2 IN (v0.c1)))!=(t0.c1 COLLATE BINARY)) RIGHT OUTER JOIN vt0 ON (((rt1.c2, rt1.c1, rt1.c2)) NOT BETWEEN ((x'', TRIM(t0.c0), CAST(vt0.c0 AS INTEGER))) AND ((((rt1.c0)!=(vt0.c0)), ((v0.c0)GLOB(t0.c1)), CAST(rt1.c0 AS INTEGER)))) CROSS JOIN rt1 ON (((json_insert(t0.c0, v0.c0, v0.c1)))<((COALESCE(v0.c2, rt1.c2))));
SELECT DISTINCT * FROM v0, t0, vt0;
SELECT DISTINCT * FROM v0, t0, vt0 WHERE (((((((((((t0.c0)OR(v0.c0)))AND(v0.c0)))AND(v0.c1)))AND(v0.c0))) NOT BETWEEN (((((((((vt0.c0)OR(vt0.c0)))OR(v0.c1)))OR(t0.c1)))OR(t0.c0))) AND ((vt0.c0 IN ())))) UNION SELECT DISTINCT * FROM v0, t0, vt0 WHERE ((NOT (((((((((((t0.c0)OR(v0.c0)))AND(v0.c0)))AND(v0.c1)))AND(v0.c0))) NOT BETWEEN (((((((((vt0.c0)OR(vt0.c0)))OR(v0.c1)))OR(t0.c1)))OR(t0.c0))) AND ((vt0.c0 IN ())))))) UNION SELECT DISTINCT * FROM v0, t0, vt0 WHERE (((((((((((((t0.c0)OR(v0.c0)))AND(v0.c0)))AND(v0.c1)))AND(v0.c0))) NOT BETWEEN (((((((((vt0.c0)OR(vt0.c0)))OR(v0.c1)))OR(t0.c1)))OR(t0.c0))) AND ((vt0.c0 IN ())))) ISNULL));
SELECT DISTINCT * FROM v0, t0, vt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (0.5007888959169032) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (0.5007888959169032))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((0.5007888959169032) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0, t0.c1, rt1.c1, t0.c0, rt1.c0, t0.c2, rt1.c2 FROM rt1 LEFT OUTER JOIN vt0 ON TRIM(CAST(rt1.c1 AS NUMERIC)) INNER JOIN t0 ON (LOWER(t0.c1) IN (rt1.c0 COLLATE NOCASE)) GROUP BY vt0.c0, t0.c1, rt1.c1, t0.c0, rt1.c0, t0.c2, rt1.c2;
SELECT vt0.c0, t0.c1, rt1.c1, t0.c0, rt1.c0, t0.c2, rt1.c2 FROM rt1 LEFT OUTER JOIN vt0 ON TRIM(CAST(rt1.c1 AS NUMERIC)) INNER JOIN t0 ON (LOWER(t0.c1) IN (rt1.c0 COLLATE NOCASE)) GROUP BY vt0.c0, t0.c1, rt1.c1, t0.c0, rt1.c0, t0.c2, rt1.c2 HAVING ((CAST(vt0.c0 AS BLOB)) ISNULL) UNION ALL SELECT vt0.c0, t0.c1, rt1.c1, t0.c0, rt1.c0, t0.c2, rt1.c2 FROM rt1 LEFT OUTER JOIN vt0 ON TRIM(CAST(rt1.c1 AS NUMERIC)) INNER JOIN t0 ON (LOWER(t0.c1) IN (rt1.c0 COLLATE NOCASE)) GROUP BY vt0.c0, t0.c1, rt1.c1, t0.c0, rt1.c0, t0.c2, rt1.c2 HAVING (NOT (((CAST(vt0.c0 AS BLOB)) ISNULL))) UNION ALL SELECT vt0.c0, t0.c1, rt1.c1, t0.c0, rt1.c0, t0.c2, rt1.c2 FROM rt1 LEFT OUTER JOIN vt0 ON TRIM(CAST(rt1.c1 AS NUMERIC)) INNER JOIN t0 ON (LOWER(t0.c1) IN (rt1.c0 COLLATE NOCASE)) GROUP BY vt0.c0, t0.c1, rt1.c1, t0.c0, rt1.c0, t0.c2, rt1.c2 HAVING ((((CAST(vt0.c0 AS BLOB)) ISNULL)) ISNULL);
SELECT vt0.c0, t0.c1, rt1.c1, t0.c0, rt1.c0, t0.c2, rt1.c2 FROM rt1 LEFT OUTER JOIN vt0 ON TRIM(CAST(rt1.c1 AS NUMERIC)) INNER JOIN t0 ON (LOWER(t0.c1) IN (rt1.c0 COLLATE NOCASE)) GROUP BY vt0.c0, t0.c1, rt1.c1, t0.c0, rt1.c0, t0.c2, rt1.c2;
SELECT vt0.c0, t0.c1, rt1.c1, t0.c0, rt1.c0, t0.c2, rt1.c2 FROM rt1 LEFT OUTER JOIN vt0 ON TRIM(CAST(rt1.c1 AS NUMERIC)) INNER JOIN t0 ON (LOWER(t0.c1) IN (rt1.c0 COLLATE NOCASE)) GROUP BY vt0.c0, t0.c1, rt1.c1, t0.c0, rt1.c0, t0.c2, rt1.c2 HAVING ((CAST(vt0.c0 AS BLOB)) ISNULL) UNION ALL SELECT vt0.c0, t0.c1, rt1.c1, t0.c0, rt1.c0, t0.c2, rt1.c2 FROM rt1 LEFT OUTER JOIN vt0 ON TRIM(CAST(rt1.c1 AS NUMERIC)) INNER JOIN t0 ON (LOWER(t0.c1) IN (rt1.c0 COLLATE NOCASE)) GROUP BY vt0.c0, t0.c1, rt1.c1, t0.c0, rt1.c0, t0.c2, rt1.c2 HAVING (NOT (((CAST(vt0.c0 AS BLOB)) ISNULL))) UNION ALL SELECT vt0.c0, t0.c1, rt1.c1, t0.c0, rt1.c0, t0.c2, rt1.c2 FROM rt1 LEFT OUTER JOIN vt0 ON TRIM(CAST(rt1.c1 AS NUMERIC)) INNER JOIN t0 ON (LOWER(t0.c1) IN (rt1.c0 COLLATE NOCASE)) GROUP BY vt0.c0, t0.c1, rt1.c1, t0.c0, rt1.c0, t0.c2, rt1.c2 HAVING ((((CAST(vt0.c0 AS BLOB)) ISNULL)) ISNULL);
SELECT vt0.c0, t0.c1, rt1.c1, t0.c0, rt1.c0, t0.c2, rt1.c2 FROM rt1 LEFT OUTER JOIN vt0 ON TRIM(CAST(rt1.c1 AS NUMERIC)) INNER JOIN t0 ON (LOWER(t0.c1) IN (rt1.c0 COLLATE NOCASE)) GROUP BY vt0.c0, t0.c1, rt1.c1, t0.c0, rt1.c0, t0.c2, rt1.c2;
SELECT t0.c2, vt0.c0, rt1.c1, rt1.c2, v0.c0 FROM v0, t0, vt0 NATURAL JOIN rt1;
SELECT ALL t0.c2, vt0.c0, rt1.c1, rt1.c2, v0.c0 FROM v0, t0, vt0 NATURAL JOIN rt1 WHERE (((((t0.c2)%(rt1.c2)))%((- (rt1.c2))))) UNION ALL SELECT ALL t0.c2, vt0.c0, rt1.c1, rt1.c2, v0.c0 FROM v0, t0, vt0 NATURAL JOIN rt1 WHERE ((NOT (((((t0.c2)%(rt1.c2)))%((- (rt1.c2))))))) UNION ALL SELECT t0.c2, vt0.c0, rt1.c1, rt1.c2, v0.c0 FROM v0, t0, vt0 NATURAL JOIN rt1 WHERE (((((((t0.c2)%(rt1.c2)))%((- (rt1.c2))))) ISNULL));
SELECT t0.c2, vt0.c0, rt1.c1, rt1.c2, v0.c0 FROM v0, t0, vt0 NATURAL JOIN rt1;
SELECT DISTINCT rt1.c2, vt0.c0, v0.c2, v0.c1 FROM v0, rt1, vt0;
SELECT DISTINCT rt1.c2, vt0.c0, v0.c2, v0.c1 FROM v0, rt1, vt0 WHERE (((v0.c1)LIKE(v0.c0))) UNION SELECT DISTINCT rt1.c2, vt0.c0, v0.c2, v0.c1 FROM v0, rt1, vt0 WHERE ((NOT (((v0.c1)LIKE(v0.c0))))) UNION SELECT DISTINCT rt1.c2, vt0.c0, v0.c2, v0.c1 FROM v0, rt1, vt0 WHERE (((((v0.c1)LIKE(v0.c0))) ISNULL));
SELECT DISTINCT rt1.c2, vt0.c0, v0.c2, v0.c1 FROM v0, rt1, vt0;
SELECT ALL v0.c2 FROM v0 GROUP BY v0.c2;
SELECT v0.c2 FROM v0 WHERE ((((+ (v0.c1))) NOT BETWEEN (v0.c1 COLLATE RTRIM) AND (((v0.c2)-(v0.c1))))) GROUP BY v0.c2 UNION SELECT ALL v0.c2 FROM v0 WHERE ((NOT ((((+ (v0.c1))) NOT BETWEEN (v0.c1 COLLATE RTRIM) AND (((v0.c2)-(v0.c1))))))) GROUP BY v0.c2 UNION SELECT ALL v0.c2 FROM v0 WHERE ((((((+ (v0.c1))) NOT BETWEEN (v0.c1 COLLATE RTRIM) AND (((v0.c2)-(v0.c1))))) ISNULL)) GROUP BY v0.c2;
SELECT ALL v0.c2 FROM v0 GROUP BY v0.c2;
SELECT ALL v0.c2, v0.c0, rt1.c0, t0.c0, rt1.c2 FROM t0, rt1 RIGHT OUTER JOIN v0 ON 0.6124214932506035 GROUP BY v0.c2, v0.c0, rt1.c0, t0.c0, rt1.c2;
SELECT v0.c2, v0.c0, rt1.c0, t0.c0, rt1.c2 FROM t0, rt1 RIGHT OUTER JOIN v0 ON 0.6124214932506035 GROUP BY v0.c2, v0.c0, rt1.c0, t0.c0, rt1.c2 HAVING COUNT(((GROUP_CONCAT('163494825'))|(SUM(v0.c0)))) UNION ALL SELECT ALL v0.c2, v0.c0, rt1.c0, t0.c0, rt1.c2 FROM t0, rt1 RIGHT OUTER JOIN v0 ON 0.6124214932506035 GROUP BY v0.c2, v0.c0, rt1.c0, t0.c0, rt1.c2 HAVING (NOT (COUNT(((GROUP_CONCAT('163494825'))|(SUM(v0.c0)))))) UNION ALL SELECT v0.c2, v0.c0, rt1.c0, t0.c0, rt1.c2 FROM t0, rt1 RIGHT OUTER JOIN v0 ON 0.6124214932506035 GROUP BY v0.c2, v0.c0, rt1.c0, t0.c0, rt1.c2 HAVING ((COUNT(((GROUP_CONCAT('163494825'))|(SUM(v0.c0))))) ISNULL);
SELECT ALL v0.c0, v0.c1, v0.c2 FROM v0;
SELECT v0.c0, v0.c1, v0.c2 FROM v0 WHERE (((((v0.c2) BETWEEN (v0.c0) AND (v0.c0))) NOT BETWEEN (((v0.c0) NOT BETWEEN (v0.c1) AND (v0.c0))) AND (((v0.c2)AND(v0.c2))))) UNION ALL SELECT v0.c0, v0.c1, v0.c2 FROM v0 WHERE ((NOT (((((v0.c2) BETWEEN (v0.c0) AND (v0.c0))) NOT BETWEEN (((v0.c0) NOT BETWEEN (v0.c1) AND (v0.c0))) AND (((v0.c2)AND(v0.c2))))))) UNION ALL SELECT v0.c0, v0.c1, v0.c2 FROM v0 WHERE (((((((v0.c2) BETWEEN (v0.c0) AND (v0.c0))) NOT BETWEEN (((v0.c0) NOT BETWEEN (v0.c1) AND (v0.c0))) AND (((v0.c2)AND(v0.c2))))) ISNULL));
SELECT ALL v0.c0, v0.c1, v0.c2 FROM v0;
SELECT DISTINCT rt1.c0, rt1.c2 FROM t0 LEFT OUTER JOIN v0 ON v0.c2 FULL OUTER JOIN rt1 ON ((((t0.c2)*(vt0.c0)))GLOB(CAST(t0.c1 AS BLOB))) CROSS JOIN vt0 ON t0.c1 COLLATE NOCASE;
SELECT ALL rt1.c1, rt1.c2, v0.c2, v0.c1, rt1.c0, v0.c0 FROM rt1, v0 GROUP BY rt1.c1, rt1.c2, v0.c2, v0.c1, rt1.c0, v0.c0;
SELECT rt1.c1, rt1.c2, v0.c2, v0.c1, rt1.c0, v0.c0 FROM rt1, v0 WHERE (v0.c2) GROUP BY rt1.c1, rt1.c2, v0.c2, v0.c1, rt1.c0, v0.c0 UNION SELECT ALL rt1.c1, rt1.c2, v0.c2, v0.c1, rt1.c0, v0.c0 FROM rt1, v0 WHERE ((NOT (v0.c2))) GROUP BY rt1.c1, rt1.c2, v0.c2, v0.c1, rt1.c0, v0.c0 UNION SELECT rt1.c1, rt1.c2, v0.c2, v0.c1, rt1.c0, v0.c0 FROM rt1, v0 NOT INDEXED WHERE (((v0.c2) ISNULL)) GROUP BY rt1.c1, rt1.c2, v0.c2, v0.c1, rt1.c0, v0.c0;
SELECT ALL rt1.c1, rt1.c2, v0.c2, v0.c1, rt1.c0, v0.c0 FROM rt1, v0 GROUP BY rt1.c1, rt1.c2, v0.c2, v0.c1, rt1.c0, v0.c0;
SELECT ALL rt1.c2, rt1.c0, rt1.c1 FROM rt1 GROUP BY rt1.c2, rt1.c0, rt1.c1;
SELECT ALL rt1.c2, rt1.c0, rt1.c1 FROM rt1 GROUP BY rt1.c2, rt1.c0, rt1.c1 HAVING -2.012687509E9 UNION ALL SELECT rt1.c2, rt1.c0, rt1.c1 FROM rt1 GROUP BY rt1.c2, rt1.c0, rt1.c1 HAVING (NOT (-2.012687509E9)) UNION ALL SELECT ALL rt1.c2, rt1.c0, rt1.c1 FROM rt1 GROUP BY rt1.c2, rt1.c0, rt1.c1 HAVING ((-2.012687509E9) ISNULL);
SELECT ALL rt1.c2, rt1.c0, rt1.c1 FROM rt1 GROUP BY rt1.c2, rt1.c0, rt1.c1;
SELECT ALL rt1.c2, rt1.c0, rt1.c1 FROM rt1 GROUP BY rt1.c2, rt1.c0, rt1.c1 HAVING -2.012687509E9 UNION ALL SELECT rt1.c2, rt1.c0, rt1.c1 FROM rt1 GROUP BY rt1.c2, rt1.c0, rt1.c1 HAVING (NOT (-2.012687509E9)) UNION ALL SELECT ALL rt1.c2, rt1.c0, rt1.c1 FROM rt1 GROUP BY rt1.c2, rt1.c0, rt1.c1 HAVING ((-2.012687509E9) ISNULL);
SELECT ALL rt1.c2, rt1.c0, rt1.c1 FROM rt1 GROUP BY rt1.c2, rt1.c0, rt1.c1;
SELECT * FROM rt1, vt0, t0, v0;
SELECT * FROM rt1, vt0, t0, v0 WHERE (((t0.c1) BETWEEN (vt0.c0) AND (v0.c0)) COLLATE NOCASE COLLATE NOCASE) UNION ALL SELECT * FROM rt1, vt0, t0, v0 WHERE ((NOT (((t0.c1) BETWEEN (vt0.c0) AND (v0.c0)) COLLATE NOCASE COLLATE NOCASE))) UNION ALL SELECT ALL * FROM rt1, vt0, t0, v0 WHERE (((((t0.c1) BETWEEN (vt0.c0) AND (v0.c0)) COLLATE NOCASE COLLATE NOCASE) ISNULL));
SELECT * FROM rt1, vt0, t0, v0;
SELECT DISTINCT t0.c1, v0.c2, t0.c0, v0.c1, t0.c2 FROM v0, t0;
SELECT DISTINCT t0.c1, v0.c2, t0.c0, v0.c1, t0.c2 FROM v0, t0 WHERE (TRIM(DISTINCT ((((v0.c2)OR(v0.c0)))OR(v0.c0)), ((((NULL)AND(9.2060962E7)))OR(v0.c0)))) UNION SELECT DISTINCT t0.c1, v0.c2, t0.c0, v0.c1, t0.c2 FROM v0, t0 WHERE ((NOT (TRIM(DISTINCT ((((v0.c2)OR(v0.c0)))OR(v0.c0)), ((((NULL)AND(9.2060962E7)))OR(v0.c0)))))) UNION SELECT DISTINCT t0.c1, v0.c2, t0.c0, v0.c1, t0.c2 FROM v0, t0 WHERE (((TRIM(DISTINCT ((((v0.c2)OR(v0.c0)))OR(v0.c0)), ((((NULL)AND(9.2060962E7)))OR(v0.c0)))) ISNULL));
SELECT DISTINCT t0.c1, v0.c2, t0.c0, v0.c1, t0.c2 FROM v0, t0;
SELECT ALL t0.c1, v0.c0, rt1.c2, t0.c2, v0.c1, rt1.c1, rt1.c0, v0.c2, t0.c0, vt0.c0 FROM rt1, vt0, t0, v0 GROUP BY t0.c1, v0.c0, rt1.c2, t0.c2, v0.c1, rt1.c1, rt1.c0, v0.c2, t0.c0, vt0.c0;
SELECT t0.c1, v0.c0, rt1.c2, t0.c2, v0.c1, rt1.c1, rt1.c0, v0.c2, t0.c0, vt0.c0 FROM rt1, vt0, t0, v0 WHERE (CASE LIKELY(DISTINCT t0.c2)  WHEN (+ (t0.c2)) THEN ((((((((v0.c0)AND(t0.c2)))OR(rt1.c2)))AND(vt0.c0)))AND(t0.c1)) ELSE ((((rt1.c2)AND(vt0.c0)))OR(NULL)) END) GROUP BY t0.c1, v0.c0, rt1.c2, t0.c2, v0.c1, rt1.c1, rt1.c0, v0.c2, t0.c0, vt0.c0 UNION SELECT ALL t0.c1, v0.c0, rt1.c2, t0.c2, v0.c1, rt1.c1, rt1.c0, v0.c2, t0.c0, vt0.c0 FROM rt1, vt0, t0, v0 WHERE ((NOT (CASE LIKELY(DISTINCT t0.c2)  WHEN (+ (t0.c2)) THEN ((((((((v0.c0)AND(t0.c2)))OR(rt1.c2)))AND(vt0.c0)))AND(t0.c1)) ELSE ((((rt1.c2)AND(vt0.c0)))OR(NULL)) END))) GROUP BY t0.c1, v0.c0, rt1.c2, t0.c2, v0.c1, rt1.c1, rt1.c0, v0.c2, t0.c0, vt0.c0 UNION SELECT ALL t0.c1, v0.c0, rt1.c2, t0.c2, v0.c1, rt1.c1, rt1.c0, v0.c2, t0.c0, vt0.c0 FROM rt1, vt0, t0, v0 WHERE (((CASE LIKELY(DISTINCT t0.c2)  WHEN (+ (t0.c2)) THEN ((((((((v0.c0)AND(t0.c2)))OR(rt1.c2)))AND(vt0.c0)))AND(t0.c1)) ELSE ((((rt1.c2)AND(vt0.c0)))OR(NULL)) END) ISNULL)) GROUP BY t0.c1, v0.c0, rt1.c2, t0.c2, v0.c1, rt1.c1, rt1.c0, v0.c2, t0.c0, vt0.c0;
SELECT ALL t0.c1, v0.c0, rt1.c2, t0.c2, v0.c1, rt1.c1, rt1.c0, v0.c2, t0.c0, vt0.c0 FROM rt1, vt0, t0, v0 GROUP BY t0.c1, v0.c0, rt1.c2, t0.c2, v0.c1, rt1.c1, rt1.c0, v0.c2, t0.c0, vt0.c0;
SELECT t0.c2, t0.c0 FROM rt1, t0 LEFT OUTER JOIN vt0 ON (('-397546177') NOT BETWEEN (CASE WHEN rt1.c1 THEN rt1.c1 WHEN t0.c1 THEN rt1.c0 WHEN t0.c0 THEN rt1.c2 WHEN vt0.c0 THEN rt1.c1 WHEN rt1.c0 THEN x'' WHEN NULL THEN rt1.c1 WHEN t0.c1 THEN rt1.c0 END) AND (CASE WHEN t0.c1 THEN vt0.c0 END)) GROUP BY t0.c2, t0.c0;
SELECT ALL t0.c2, t0.c0 FROM rt1, t0 LEFT OUTER JOIN vt0 ON (('-397546177') NOT BETWEEN (CASE WHEN rt1.c1 THEN rt1.c1 WHEN t0.c1 THEN rt1.c0 WHEN t0.c0 THEN rt1.c2 WHEN vt0.c0 THEN rt1.c1 WHEN rt1.c0 THEN x'' WHEN NULL THEN rt1.c1 WHEN t0.c1 THEN rt1.c0 END) AND (CASE WHEN t0.c1 THEN vt0.c0 END)) GROUP BY t0.c2, t0.c0 HAVING TOTAL(COUNT(t0.c0)) UNION ALL SELECT t0.c2, t0.c0 FROM rt1, t0 LEFT OUTER JOIN vt0 ON (('-397546177') NOT BETWEEN (CASE WHEN rt1.c1 THEN rt1.c1 WHEN t0.c1 THEN rt1.c0 WHEN t0.c0 THEN rt1.c2 WHEN vt0.c0 THEN rt1.c1 WHEN rt1.c0 THEN x'' WHEN NULL THEN rt1.c1 WHEN t0.c1 THEN rt1.c0 END) AND (CASE WHEN t0.c1 THEN vt0.c0 END)) GROUP BY t0.c2, t0.c0 HAVING (NOT (TOTAL(COUNT(t0.c0)))) UNION ALL SELECT t0.c2, t0.c0 FROM rt1, t0 LEFT OUTER JOIN vt0 ON (('-397546177') NOT BETWEEN (CASE WHEN rt1.c1 THEN rt1.c1 WHEN t0.c1 THEN rt1.c0 WHEN t0.c0 THEN rt1.c2 WHEN vt0.c0 THEN rt1.c1 WHEN rt1.c0 THEN x'' WHEN NULL THEN rt1.c1 WHEN t0.c1 THEN rt1.c0 END) AND (CASE WHEN t0.c1 THEN vt0.c0 END)) GROUP BY t0.c2, t0.c0 HAVING ((TOTAL(COUNT(t0.c0))) ISNULL);
SELECT * FROM rt1, v0, vt0;
SELECT * FROM rt1, v0, vt0 WHERE (CASE (v0.c2 IN ())  WHEN ((((0.9074614856843236)AND(vt0.c0)))AND(rt1.c0)) THEN CAST(v0.c0 AS INTEGER) WHEN CASE WHEN v0.c2 THEN v0.c2 WHEN rt1.c0 THEN rt1.c0 WHEN v0.c2 THEN v0.c2 ELSE v0.c0 END THEN ((v0.c2)>=(v0.c2)) WHEN CAST(v0.c2 AS NUMERIC) THEN x'' END) UNION ALL SELECT * FROM rt1, v0, vt0 WHERE ((NOT (CASE (v0.c2 IN ())  WHEN ((((0.9074614856843236)AND(vt0.c0)))AND(rt1.c0)) THEN CAST(v0.c0 AS INTEGER) WHEN CASE WHEN v0.c2 THEN v0.c2 WHEN rt1.c0 THEN rt1.c0 WHEN v0.c2 THEN v0.c2 ELSE v0.c0 END THEN ((v0.c2)>=(v0.c2)) WHEN CAST(v0.c2 AS NUMERIC) THEN x'' END))) UNION ALL SELECT * FROM rt1, v0, vt0 WHERE (((CASE (v0.c2 IN ())  WHEN ((((0.9074614856843236)AND(vt0.c0)))AND(rt1.c0)) THEN CAST(v0.c0 AS INTEGER) WHEN CASE WHEN v0.c2 THEN v0.c2 WHEN rt1.c0 THEN rt1.c0 WHEN v0.c2 THEN v0.c2 ELSE v0.c0 END THEN ((v0.c2)>=(v0.c2)) WHEN CAST(v0.c2 AS NUMERIC) THEN x'' END) ISNULL));
SELECT * FROM rt1, v0, vt0;
SELECT DISTINCT v0.c0, t0.c2, vt0.c0, v0.c2, t0.c1 FROM v0, t0, vt0;
SELECT DISTINCT v0.c0, t0.c2, vt0.c0, v0.c2, t0.c1 FROM v0, t0, vt0 WHERE ((((((t0.c1)OR(t0.c0)))AND(v0.c0)) IN ())) UNION SELECT DISTINCT v0.c0, t0.c2, vt0.c0, v0.c2, t0.c1 FROM v0, t0, vt0 WHERE ((NOT ((((((t0.c1)OR(t0.c0)))AND(v0.c0)) IN ())))) UNION SELECT DISTINCT v0.c0, t0.c2, vt0.c0, v0.c2, t0.c1 FROM v0, t0, vt0 WHERE ((((((((t0.c1)OR(t0.c0)))AND(v0.c0)) IN ())) ISNULL));
SELECT DISTINCT v0.c0, t0.c2, vt0.c0, v0.c2, t0.c1 FROM v0, t0, vt0;
SELECT vt0.c0, v0.c2, v0.c1, t0.c2, t0.c1 FROM v0, vt0, rt1 CROSS JOIN t0 ON ((CAST(t0.c0 AS BLOB)) NOT NULL) GROUP BY vt0.c0, v0.c2, v0.c1, t0.c2, t0.c1;
SELECT vt0.c0, v0.c2, v0.c1, t0.c2, t0.c1 FROM v0, vt0, rt1 CROSS JOIN t0 ON ((CAST(t0.c0 AS BLOB)) NOT NULL) WHERE (((((rt1.c2)||(t0.c1)))/(((t0.c1)>>(v0.c1))))) GROUP BY vt0.c0, v0.c2, v0.c1, t0.c2, t0.c1 UNION SELECT vt0.c0, v0.c2, v0.c1, t0.c2, t0.c1 FROM v0, vt0, rt1 CROSS JOIN t0 ON ((CAST(t0.c0 AS BLOB)) NOT NULL) WHERE ((NOT (((((rt1.c2)||(t0.c1)))/(((t0.c1)>>(v0.c1))))))) GROUP BY vt0.c0, v0.c2, v0.c1, t0.c2, t0.c1 UNION SELECT ALL vt0.c0, v0.c2, v0.c1, t0.c2, t0.c1 FROM v0, vt0, rt1 CROSS JOIN t0 ON ((CAST(t0.c0 AS BLOB)) NOT NULL) WHERE (((((((rt1.c2)||(t0.c1)))/(((t0.c1)>>(v0.c1))))) ISNULL)) GROUP BY vt0.c0, v0.c2, v0.c1, t0.c2, t0.c1;
SELECT vt0.c0, v0.c2, v0.c1, t0.c2, t0.c1 FROM v0, vt0, rt1 CROSS JOIN t0 ON ((CAST(t0.c0 AS BLOB)) NOT NULL) GROUP BY vt0.c0, v0.c2, v0.c1, t0.c2, t0.c1;
SELECT v0.c0, v0.c2, rt1.c1, vt0.c0 FROM v0, vt0, rt1 GROUP BY v0.c0, v0.c2, rt1.c1, vt0.c0;
SELECT ALL v0.c0, v0.c2, rt1.c1, vt0.c0 FROM v0, vt0, rt1 GROUP BY v0.c0, v0.c2, rt1.c1, vt0.c0 HAVING COUNT(((v0.c1) ISNULL)) UNION ALL SELECT v0.c0, v0.c2, rt1.c1, vt0.c0 FROM v0, vt0, rt1 GROUP BY v0.c0, v0.c2, rt1.c1, vt0.c0 HAVING (NOT (COUNT(((v0.c1) ISNULL)))) UNION ALL SELECT v0.c0, v0.c2, rt1.c1, vt0.c0 FROM v0, vt0, rt1 GROUP BY v0.c0, v0.c2, rt1.c1, vt0.c0 HAVING ((COUNT(((v0.c1) ISNULL))) ISNULL);
SELECT v0.c0, v0.c2, rt1.c1, vt0.c0 FROM v0, vt0, rt1 GROUP BY v0.c0, v0.c2, rt1.c1, vt0.c0;
SELECT ALL v0.c0, v0.c2, rt1.c1, vt0.c0 FROM v0, vt0, rt1 GROUP BY v0.c0, v0.c2, rt1.c1, vt0.c0 HAVING COUNT(((v0.c1) ISNULL)) UNION ALL SELECT v0.c0, v0.c2, rt1.c1, vt0.c0 FROM v0, vt0, rt1 GROUP BY v0.c0, v0.c2, rt1.c1, vt0.c0 HAVING (NOT (COUNT(((v0.c1) ISNULL)))) UNION ALL SELECT v0.c0, v0.c2, rt1.c1, vt0.c0 FROM v0, vt0, rt1 GROUP BY v0.c0, v0.c2, rt1.c1, vt0.c0 HAVING ((COUNT(((v0.c1) ISNULL))) ISNULL);
SELECT v0.c0, v0.c2, rt1.c1, vt0.c0 FROM v0, vt0, rt1 GROUP BY v0.c0, v0.c2, rt1.c1, vt0.c0;
SELECT ALL * FROM t0, vt0;
SELECT * FROM t0, vt0 WHERE (((vt0.c0) NOT BETWEEN (((((t0.c1)AND(x'')))AND(t0.c2))) AND (((((t0.c2)AND(vt0.c0)))OR(t0.c1))))) UNION ALL SELECT ALL * FROM t0, vt0 WHERE ((NOT (((vt0.c0) NOT BETWEEN (((((t0.c1)AND(x'')))AND(t0.c2))) AND (((((t0.c2)AND(vt0.c0)))OR(t0.c1))))))) UNION ALL SELECT ALL * FROM t0, vt0 WHERE (((((vt0.c0) NOT BETWEEN (((((t0.c1)AND(x'')))AND(t0.c2))) AND (((((t0.c2)AND(vt0.c0)))OR(t0.c1))))) ISNULL));
SELECT ALL * FROM t0, vt0;
SELECT DISTINCT * FROM vt0, v0, t0;
SELECT DISTINCT * FROM vt0, v0, t0 WHERE ((NOT (MAX(v0.c1, v0.c1)))) UNION SELECT DISTINCT * FROM vt0, v0, t0 WHERE ((NOT ((NOT (MAX(v0.c1, v0.c1)))))) UNION SELECT DISTINCT * FROM vt0, v0, t0 WHERE ((((NOT (MAX(v0.c1, v0.c1)))) ISNULL));
SELECT DISTINCT * FROM vt0, v0, t0;
SELECT rt1.c1, vt0.c0, rt1.c0 FROM v0, vt0, rt1 GROUP BY rt1.c1, vt0.c0, rt1.c0;
SELECT ALL rt1.c1, vt0.c0, rt1.c0 FROM v0, vt0, rt1 WHERE (INSTR(NULL, HEX(DISTINCT rt1.c1))) GROUP BY rt1.c1, vt0.c0, rt1.c0 UNION SELECT ALL rt1.c1, vt0.c0, rt1.c0 FROM v0, vt0, rt1 WHERE ((NOT (INSTR(NULL, HEX(DISTINCT rt1.c1))))) GROUP BY rt1.c1, vt0.c0, rt1.c0 UNION SELECT ALL rt1.c1, vt0.c0, rt1.c0 FROM v0, vt0, rt1 WHERE (((INSTR(NULL, HEX(DISTINCT rt1.c1))) ISNULL)) GROUP BY rt1.c1, vt0.c0, rt1.c0;
SELECT rt1.c1, vt0.c0, rt1.c0 FROM v0, vt0, rt1 GROUP BY rt1.c1, vt0.c0, rt1.c0;
SELECT v0.c1, v0.c2 FROM v0 GROUP BY v0.c1, v0.c2;
SELECT v0.c1, v0.c2 FROM v0 GROUP BY v0.c1, v0.c2 HAVING MIN(COUNT(*)) UNION ALL SELECT ALL v0.c1, v0.c2 FROM v0 GROUP BY v0.c1, v0.c2 HAVING (NOT (MIN(COUNT(*)))) UNION ALL SELECT v0.c1, v0.c2 FROM v0 GROUP BY v0.c1, v0.c2 HAVING ((MIN(COUNT(*))) ISNULL);
SELECT rt1.c2 FROM rt1;
SELECT ALL rt1.c2 FROM rt1 WHERE (((((rt1.c0 IN (rt1.c0, rt1.c1)), ((rt1.c0) BETWEEN (rt1.c0) AND (rt1.c2)), CAST(rt1.c1 AS INTEGER)))=((PRINTF('r', rt1.c2, x'', rt1.c2, rt1.c0), rt1.c2, rt1.c2 COLLATE NOCASE)))) UNION ALL SELECT ALL rt1.c2 FROM rt1 WHERE ((NOT (((((rt1.c0 IN (rt1.c0, rt1.c1)), ((rt1.c0) BETWEEN (rt1.c0) AND (rt1.c2)), CAST(rt1.c1 AS INTEGER)))=((PRINTF('r', rt1.c2, x'', rt1.c2, rt1.c0), rt1.c2, rt1.c2 COLLATE NOCASE)))))) UNION ALL SELECT ALL rt1.c2 FROM rt1 WHERE (((((((rt1.c0 IN (rt1.c0, rt1.c1)), ((rt1.c0) BETWEEN (rt1.c0) AND (rt1.c2)), CAST(rt1.c1 AS INTEGER)))=((PRINTF('r', rt1.c2, x'', rt1.c2, rt1.c0), rt1.c2, rt1.c2 COLLATE NOCASE)))) ISNULL));
SELECT rt1.c2 FROM rt1;
SELECT DISTINCT rt1.c0, rt1.c2, v0.c0, t0.c0, vt0.c0, t0.c1, rt1.c1, v0.c2, t0.c2 FROM t0 FULL OUTER JOIN rt1 ON CAST(rt1.c2 COLLATE NOCASE AS REAL) INNER JOIN v0 ON t0.c0 CROSS JOIN vt0 ON ((0.2754068703011954) BETWEEN ('~') AND (v0.c2)) COLLATE BINARY;
SELECT DISTINCT rt1.c0, rt1.c2, v0.c0, t0.c0, vt0.c0, t0.c1, rt1.c1, v0.c2, t0.c2 FROM t0 FULL OUTER JOIN rt1 ON CAST(rt1.c2 COLLATE NOCASE AS REAL) INNER JOIN v0 ON t0.c0 CROSS JOIN vt0 ON ((0.2754068703011954) BETWEEN ('~') AND (v0.c2)) COLLATE BINARY WHERE (v0.c2) UNION SELECT DISTINCT rt1.c0, rt1.c2, v0.c0, t0.c0, vt0.c0, t0.c1, rt1.c1, v0.c2, t0.c2 FROM t0 FULL OUTER JOIN rt1 ON CAST(rt1.c2 COLLATE NOCASE AS REAL) INNER JOIN v0 ON t0.c0 CROSS JOIN vt0 ON ((0.2754068703011954) BETWEEN ('~') AND (v0.c2)) COLLATE BINARY WHERE ((NOT (v0.c2))) UNION SELECT DISTINCT rt1.c0, rt1.c2, v0.c0, t0.c0, vt0.c0, t0.c1, rt1.c1, v0.c2, t0.c2 FROM t0 FULL OUTER JOIN rt1 ON CAST(rt1.c2 COLLATE NOCASE AS REAL) INNER JOIN v0 ON t0.c0 CROSS JOIN vt0 ON ((0.2754068703011954) BETWEEN ('~') AND (v0.c2)) COLLATE BINARY WHERE (((v0.c2) ISNULL));
SELECT DISTINCT rt1.c0, rt1.c2, v0.c0, t0.c0, vt0.c0, t0.c1, rt1.c1, v0.c2, t0.c2 FROM t0 FULL OUTER JOIN rt1 ON CAST(rt1.c2 COLLATE NOCASE AS REAL) INNER JOIN v0 ON t0.c0 CROSS JOIN vt0 ON ((0.2754068703011954) BETWEEN ('~') AND (v0.c2)) COLLATE BINARY;
SELECT v0.c1 FROM v0, rt1, vt0 GROUP BY v0.c1;
SELECT ALL v0.c1 FROM v0, rt1, vt0 WHERE (NULL) GROUP BY v0.c1 UNION SELECT v0.c1 FROM v0, rt1, vt0 WHERE ((NOT (NULL))) GROUP BY v0.c1 UNION SELECT v0.c1 FROM v0, rt1, vt0 WHERE (((NULL) ISNULL)) GROUP BY v0.c1;
SELECT v0.c1 FROM v0, rt1, vt0 GROUP BY v0.c1;
SELECT t0.c2, vt0.c0, t0.c0, t0.c1 FROM t0, vt0 GROUP BY t0.c2, vt0.c0, t0.c0, t0.c1;
SELECT t0.c2, vt0.c0, t0.c0, t0.c1 FROM t0, vt0 GROUP BY t0.c2, vt0.c0, t0.c0, t0.c1 HAVING MAX(GROUP_CONCAT(t0.c1)) UNION ALL SELECT ALL t0.c2, vt0.c0, t0.c0, t0.c1 FROM t0, vt0 GROUP BY t0.c2, vt0.c0, t0.c0, t0.c1 HAVING (NOT (MAX(GROUP_CONCAT(t0.c1)))) UNION ALL SELECT ALL t0.c2, vt0.c0, t0.c0, t0.c1 FROM t0, vt0 GROUP BY t0.c2, vt0.c0, t0.c0, t0.c1 HAVING ((MAX(GROUP_CONCAT(t0.c1))) ISNULL);
SELECT ALL * FROM rt1, v0, t0;
SELECT ALL * FROM rt1, v0, t0 WHERE (((CAST(t0.c0 AS INTEGER))IS(((rt1.c0) NOT BETWEEN (t0.c0) AND (v0.c2))))) UNION ALL SELECT * FROM rt1, v0, t0 WHERE ((NOT (((CAST(t0.c0 AS INTEGER))IS(((rt1.c0) NOT BETWEEN (t0.c0) AND (v0.c2))))))) UNION ALL SELECT ALL * FROM rt1, v0, t0 WHERE (((((CAST(t0.c0 AS INTEGER))IS(((rt1.c0) NOT BETWEEN (t0.c0) AND (v0.c2))))) ISNULL));
SELECT ALL * FROM rt1, v0, t0;
SELECT DISTINCT rt1.c0, rt1.c2, vt0.c0, rt1.c1 FROM vt0, rt1;
SELECT DISTINCT rt1.c0, rt1.c2, vt0.c0, rt1.c1 FROM vt0, rt1 WHERE (((vt0.c0 COLLATE RTRIM)*((0.8067274300423058 IN (rt1.c1))))) UNION SELECT DISTINCT rt1.c0, rt1.c2, vt0.c0, rt1.c1 FROM vt0, rt1 WHERE ((NOT (((vt0.c0 COLLATE RTRIM)*((0.8067274300423058 IN (rt1.c1))))))) UNION SELECT DISTINCT rt1.c0, rt1.c2, vt0.c0, rt1.c1 FROM vt0, rt1 WHERE (((((vt0.c0 COLLATE RTRIM)*((0.8067274300423058 IN (rt1.c1))))) ISNULL));
SELECT DISTINCT rt1.c0, rt1.c2, vt0.c0, rt1.c1 FROM vt0, rt1;
SELECT ALL v0.c0 FROM rt1, v0 RIGHT OUTER JOIN vt0 ON (((v0.c2 IN ()))IS NOT(CAST(rt1.c1 AS INTEGER))) CROSS JOIN t0 ON MAX(((v0.c0) IS FALSE), CAST(v0.c1 AS REAL), ((v0.c1) IS FALSE), (+ (rt1.c2))) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM rt1, v0 RIGHT OUTER JOIN vt0 ON (((v0.c2 IN ()))IS NOT(CAST(rt1.c1 AS INTEGER))) CROSS JOIN t0 ON MAX(((v0.c0) IS FALSE), CAST(v0.c1 AS REAL), ((v0.c1) IS FALSE), (+ (rt1.c2))) WHERE (((LOWER(t0.c1)) BETWEEN ((((v0.c1, v0.c2, t0.c1))>((t0.c2, rt1.c0, t0.c1)))) AND (((('IJw8橸vV\n', t0.c1, v0.c1))<>((v0.c0, rt1.c1, v0.c0)))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM rt1, v0 RIGHT OUTER JOIN vt0 ON (((v0.c2 IN ()))IS NOT(CAST(rt1.c1 AS INTEGER))) CROSS JOIN t0 ON MAX(((v0.c0) IS FALSE), CAST(v0.c1 AS REAL), ((v0.c1) IS FALSE), (+ (rt1.c2))) WHERE ((NOT (((LOWER(t0.c1)) BETWEEN ((((v0.c1, v0.c2, t0.c1))>((t0.c2, rt1.c0, t0.c1)))) AND (((('IJw8橸vV\n', t0.c1, v0.c1))!=((v0.c0, rt1.c1, v0.c0)))))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM rt1, v0 RIGHT OUTER JOIN vt0 ON (((v0.c2 IN ()))IS NOT(CAST(rt1.c1 AS INTEGER))) CROSS JOIN t0 ON MAX(((v0.c0) IS FALSE), CAST(v0.c1 AS REAL), ((v0.c1) IS FALSE), (+ (rt1.c2))) WHERE (((((LOWER(t0.c1)) BETWEEN ((((v0.c1, v0.c2, t0.c1))>((t0.c2, rt1.c0, t0.c1)))) AND (((('IJw8橸vV\n', t0.c1, v0.c1))<>((v0.c0, rt1.c1, v0.c0)))))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM rt1, v0 RIGHT OUTER JOIN vt0 ON (((v0.c2 IN ()))IS NOT(CAST(rt1.c1 AS INTEGER))) CROSS JOIN t0 ON MAX(((v0.c0) IS FALSE), CAST(v0.c1 AS REAL), ((v0.c1) IS FALSE), (+ (rt1.c2))) GROUP BY v0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING GROUP_CONCAT(((vt0.c0) IS TRUE)) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (GROUP_CONCAT(((vt0.c0) IS TRUE)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((GROUP_CONCAT(((vt0.c0) IS TRUE))) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING GROUP_CONCAT(((vt0.c0) IS TRUE)) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (GROUP_CONCAT(((vt0.c0) IS TRUE)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((GROUP_CONCAT(((vt0.c0) IS TRUE))) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL t0.c2, t0.c0, vt0.c0, t0.c1 FROM t0, vt0;
SELECT t0.c2, t0.c0, vt0.c0, t0.c1 FROM t0, vt0 WHERE (((((t0.c2)&(NULL))) IS TRUE)) UNION ALL SELECT ALL t0.c2, t0.c0, vt0.c0, t0.c1 FROM t0, vt0 WHERE ((NOT (((((t0.c2)&(NULL))) IS TRUE)))) UNION ALL SELECT t0.c2, t0.c0, vt0.c0, t0.c1 FROM t0, vt0 WHERE (((((((t0.c2)&(NULL))) IS TRUE)) ISNULL));
SELECT ALL t0.c2, t0.c0, vt0.c0, t0.c1 FROM t0, vt0;
SELECT DISTINCT * FROM v0, t0, rt1;
SELECT DISTINCT * FROM v0, t0, rt1 WHERE ('Gis''5ZCl' COLLATE NOCASE) UNION SELECT DISTINCT * FROM v0, t0, rt1 WHERE ((NOT ('Gis''5ZCl' COLLATE NOCASE))) UNION SELECT DISTINCT * FROM v0, t0, rt1 WHERE ((('Gis''5ZCl' COLLATE NOCASE) ISNULL));
SELECT DISTINCT * FROM v0, t0, rt1;
SELECT rt1.c2, v0.c1, vt0.c0, rt1.c1 FROM vt0, rt1, v0 GROUP BY rt1.c2, v0.c1, vt0.c0, rt1.c1;
SELECT rt1.c2, v0.c1, vt0.c0, rt1.c1 FROM vt0, rt1, v0 NOT INDEXED WHERE (x'79cf') GROUP BY rt1.c2, v0.c1, vt0.c0, rt1.c1 UNION SELECT rt1.c2, v0.c1, vt0.c0, rt1.c1 FROM vt0, rt1, v0 WHERE ((NOT (x'79cf'))) GROUP BY rt1.c2, v0.c1, vt0.c0, rt1.c1 UNION SELECT rt1.c2, v0.c1, vt0.c0, rt1.c1 FROM vt0, rt1, v0 WHERE (((x'79cf') ISNULL)) GROUP BY rt1.c2, v0.c1, vt0.c0, rt1.c1;
SELECT rt1.c2, v0.c1, vt0.c0, rt1.c1 FROM vt0, rt1, v0 GROUP BY rt1.c2, v0.c1, vt0.c0, rt1.c1;
SELECT ALL t0.c0, rt1.c1, v0.c1, rt1.c0, t0.c1, v0.c0, rt1.c2 FROM t0, vt0, v0, rt1 GROUP BY t0.c0, rt1.c1, v0.c1, rt1.c0, t0.c1, v0.c0, rt1.c2;
SELECT t0.c0, rt1.c1, v0.c1, rt1.c0, t0.c1, v0.c0, rt1.c2 FROM t0, vt0, v0 NOT INDEXED, rt1 GROUP BY t0.c0, rt1.c1, v0.c1, rt1.c0, t0.c1, v0.c0, rt1.c2 HAVING GROUP_CONCAT((~ (COUNT('F?')))) UNION ALL SELECT ALL t0.c0, rt1.c1, v0.c1, rt1.c0, t0.c1, v0.c0, rt1.c2 FROM t0, vt0, v0, rt1 GROUP BY t0.c0, rt1.c1, v0.c1, rt1.c0, t0.c1, v0.c0, rt1.c2 HAVING (NOT (GROUP_CONCAT((~ (COUNT('F?')))))) UNION ALL SELECT t0.c0, rt1.c1, v0.c1, rt1.c0, t0.c1, v0.c0, rt1.c2 FROM t0, vt0, v0, rt1 GROUP BY t0.c0, rt1.c1, v0.c1, rt1.c0, t0.c1, v0.c0, rt1.c2 HAVING ((GROUP_CONCAT((~ (COUNT('F?'))))) ISNULL);
SELECT ALL vt0.c0, t0.c2, rt1.c2, v0.c2, rt1.c1 FROM rt1, t0, vt0, v0;
SELECT vt0.c0, t0.c2, rt1.c2, v0.c2, rt1.c1 FROM rt1, t0, vt0, v0 WHERE (((((v0.c1)||(v0.c1))) NOTNULL)) UNION ALL SELECT ALL vt0.c0, t0.c2, rt1.c2, v0.c2, rt1.c1 FROM rt1, t0, vt0, v0 WHERE ((NOT (((((v0.c1)||(v0.c1))) NOTNULL)))) UNION ALL SELECT ALL vt0.c0, t0.c2, rt1.c2, v0.c2, rt1.c1 FROM rt1, t0, vt0, v0 WHERE (((((((v0.c1)||(v0.c1))) NOTNULL)) ISNULL));
SELECT ALL vt0.c0, t0.c2, rt1.c2, v0.c2, rt1.c1 FROM rt1, t0, vt0, v0;
SELECT DISTINCT * FROM rt1, v0, t0;
SELECT DISTINCT * FROM rt1, v0, t0 WHERE (((rt1.c0) NOTNULL) COLLATE NOCASE) UNION SELECT DISTINCT * FROM rt1, v0, t0 NOT INDEXED WHERE ((NOT (((rt1.c0) NOTNULL) COLLATE NOCASE))) UNION SELECT DISTINCT * FROM rt1, v0, t0 WHERE (((((rt1.c0) NOTNULL) COLLATE NOCASE) ISNULL));
SELECT DISTINCT * FROM rt1, v0, t0;
SELECT v0.c1, v0.c2, vt0.c0 FROM vt0, v0 GROUP BY v0.c1, v0.c2, vt0.c0;
SELECT ALL v0.c1, v0.c2, vt0.c0 FROM vt0, v0 WHERE (COALESCE(((vt0.c0) NOT BETWEEN (0.8545658499614169) AND ('1F')), (((v0.c2))>((v0.c1))))) GROUP BY v0.c1, v0.c2, vt0.c0 UNION SELECT ALL v0.c1, v0.c2, vt0.c0 FROM vt0, v0 WHERE ((NOT (COALESCE(((vt0.c0) NOT BETWEEN (0.8545658499614169) AND ('1F')), (((v0.c2))>((v0.c1))))))) GROUP BY v0.c1, v0.c2, vt0.c0 UNION SELECT v0.c1, v0.c2, vt0.c0 FROM vt0, v0 WHERE (((COALESCE(((vt0.c0) NOT BETWEEN (0.8545658499614169) AND ('1F')), (((v0.c2))>((v0.c1))))) ISNULL)) GROUP BY v0.c1, v0.c2, vt0.c0;
SELECT v0.c1, v0.c2, vt0.c0 FROM vt0, v0 GROUP BY v0.c1, v0.c2, vt0.c0;
SELECT ALL v0.c2, t0.c2, v0.c1, t0.c1, rt1.c2, rt1.c0, v0.c0, rt1.c1, vt0.c0 FROM vt0, rt1, t0, v0 GROUP BY v0.c2, t0.c2, v0.c1, t0.c1, rt1.c2, rt1.c0, v0.c0, rt1.c1, vt0.c0;
SELECT v0.c2, t0.c2, v0.c1, t0.c1, rt1.c2, rt1.c0, v0.c0, rt1.c1, vt0.c0 FROM vt0, rt1, t0, v0 GROUP BY v0.c2, t0.c2, v0.c1, t0.c1, rt1.c2, rt1.c0, v0.c0, rt1.c1, vt0.c0 HAVING (((rt1.c0 IN ())) BETWEEN (GROUP_CONCAT(v0.c1)) AND (v0.c1)) UNION ALL SELECT ALL v0.c2, t0.c2, v0.c1, t0.c1, rt1.c2, rt1.c0, v0.c0, rt1.c1, vt0.c0 FROM vt0, rt1, t0, v0 GROUP BY v0.c2, t0.c2, v0.c1, t0.c1, rt1.c2, rt1.c0, v0.c0, rt1.c1, vt0.c0 HAVING (NOT ((((rt1.c0 IN ())) BETWEEN (GROUP_CONCAT(v0.c1)) AND (v0.c1)))) UNION ALL SELECT ALL v0.c2, t0.c2, v0.c1, t0.c1, rt1.c2, rt1.c0, v0.c0, rt1.c1, vt0.c0 FROM vt0, rt1, t0, v0 GROUP BY v0.c2, t0.c2, v0.c1, t0.c1, rt1.c2, rt1.c0, v0.c0, rt1.c1, vt0.c0 HAVING (((((rt1.c0 IN ())) BETWEEN (GROUP_CONCAT(v0.c1)) AND (v0.c1))) ISNULL);
SELECT ALL v0.c2, t0.c2, v0.c1, t0.c1, rt1.c2, rt1.c0, v0.c0, rt1.c1, vt0.c0 FROM vt0, rt1, t0, v0 GROUP BY v0.c2, t0.c2, v0.c1, t0.c1, rt1.c2, rt1.c0, v0.c0, rt1.c1, vt0.c0;
SELECT v0.c2, t0.c2, v0.c1, t0.c1, rt1.c2, rt1.c0, v0.c0, rt1.c1, vt0.c0 FROM vt0, rt1, t0, v0 GROUP BY v0.c2, t0.c2, v0.c1, t0.c1, rt1.c2, rt1.c0, v0.c0, rt1.c1, vt0.c0 HAVING (((rt1.c0 IN ())) BETWEEN (GROUP_CONCAT(v0.c1)) AND (v0.c1)) UNION ALL SELECT ALL v0.c2, t0.c2, v0.c1, t0.c1, rt1.c2, rt1.c0, v0.c0, rt1.c1, vt0.c0 FROM vt0, rt1, t0, v0 GROUP BY v0.c2, t0.c2, v0.c1, t0.c1, rt1.c2, rt1.c0, v0.c0, rt1.c1, vt0.c0 HAVING (NOT ((((rt1.c0 IN ())) BETWEEN (GROUP_CONCAT(v0.c1)) AND (v0.c1)))) UNION ALL SELECT ALL v0.c2, t0.c2, v0.c1, t0.c1, rt1.c2, rt1.c0, v0.c0, rt1.c1, vt0.c0 FROM vt0, rt1, t0, v0 GROUP BY v0.c2, t0.c2, v0.c1, t0.c1, rt1.c2, rt1.c0, v0.c0, rt1.c1, vt0.c0 HAVING (((((rt1.c0 IN ())) BETWEEN (GROUP_CONCAT(v0.c1)) AND (v0.c1))) ISNULL);
SELECT ALL v0.c2, t0.c2, v0.c1, t0.c1, rt1.c2, rt1.c0, v0.c0, rt1.c1, vt0.c0 FROM vt0, rt1, t0, v0 GROUP BY v0.c2, t0.c2, v0.c1, t0.c1, rt1.c2, rt1.c0, v0.c0, rt1.c1, vt0.c0;
SELECT ALL * FROM v0, t0, vt0;
SELECT * FROM v0, t0, vt0 WHERE ((((t0.c1, t0.c2, t0.c1)) BETWEEN ((((v0.c1)<(v0.c0)), CAST(x'4b67' AS BLOB), (((x'')) NOT BETWEEN ((v0.c2)) AND ((vt0.c0))))) AND ((CASE t0.c1  WHEN v0.c0 THEN t0.c2 WHEN t0.c2 THEN NULL WHEN vt0.c0 THEN t0.c0 WHEN v0.c1 THEN v0.c0 WHEN t0.c2 THEN 0.5341523666887659 END, NULL COLLATE RTRIM, ((v0.c1) ISNULL))))) UNION ALL SELECT ALL * FROM v0, t0, vt0 WHERE ((NOT ((((t0.c1, t0.c2, t0.c1)) BETWEEN ((((v0.c1)<(v0.c0)), CAST(x'4b67' AS BLOB), (((x'')) NOT BETWEEN ((v0.c2)) AND ((vt0.c0))))) AND ((CASE t0.c1  WHEN v0.c0 THEN t0.c2 WHEN t0.c2 THEN NULL WHEN vt0.c0 THEN t0.c0 WHEN v0.c1 THEN v0.c0 WHEN t0.c2 THEN 0.5341523666887659 END, NULL COLLATE RTRIM, ((v0.c1) ISNULL))))))) UNION ALL SELECT * FROM v0, t0, vt0 WHERE ((((((t0.c1, t0.c2, t0.c1)) BETWEEN ((((v0.c1)<(v0.c0)), CAST(x'4b67' AS BLOB), (((x'')) NOT BETWEEN ((v0.c2)) AND ((vt0.c0))))) AND ((CASE t0.c1  WHEN v0.c0 THEN t0.c2 WHEN t0.c2 THEN NULL WHEN vt0.c0 THEN t0.c0 WHEN v0.c1 THEN v0.c0 WHEN t0.c2 THEN 0.5341523666887659 END, NULL COLLATE RTRIM, ((v0.c1) ISNULL))))) ISNULL));
SELECT ALL * FROM v0, t0, vt0;
SELECT DISTINCT rt1.c1, rt1.c0, rt1.c2 FROM rt1;
SELECT DISTINCT rt1.c1, rt1.c0, rt1.c2 FROM rt1 WHERE (TYPEOF(rt1.c2) COLLATE RTRIM COLLATE RTRIM) UNION SELECT DISTINCT rt1.c1, rt1.c0, rt1.c2 FROM rt1 WHERE ((NOT (TYPEOF(rt1.c2) COLLATE RTRIM COLLATE RTRIM))) UNION SELECT DISTINCT rt1.c1, rt1.c0, rt1.c2 FROM rt1 WHERE (((TYPEOF(rt1.c2) COLLATE RTRIM COLLATE RTRIM) ISNULL));
SELECT DISTINCT rt1.c1, rt1.c0, rt1.c2 FROM rt1;
SELECT ALL rt1.c1, v0.c1, rt1.c0, rt1.c2, t0.c2 FROM rt1, t0, vt0, v0 GROUP BY rt1.c1, v0.c1, rt1.c0, rt1.c2, t0.c2;
SELECT ALL rt1.c1, v0.c1, rt1.c0, rt1.c2, t0.c2 FROM rt1, t0, vt0, v0 WHERE (((rt1.c0)%(rt1.c0)) COLLATE BINARY) GROUP BY rt1.c1, v0.c1, rt1.c0, rt1.c2, t0.c2 UNION SELECT rt1.c1, v0.c1, rt1.c0, rt1.c2, t0.c2 FROM rt1, t0, vt0, v0 WHERE ((NOT (((rt1.c0)%(rt1.c0)) COLLATE BINARY))) GROUP BY rt1.c1, v0.c1, rt1.c0, rt1.c2, t0.c2 UNION SELECT rt1.c1, v0.c1, rt1.c0, rt1.c2, t0.c2 FROM rt1, t0, vt0, v0 WHERE (((((rt1.c0)%(rt1.c0)) COLLATE BINARY) ISNULL)) GROUP BY rt1.c1, v0.c1, rt1.c0, rt1.c2, t0.c2;
SELECT ALL rt1.c1, v0.c1, rt1.c0, rt1.c2, t0.c2 FROM rt1, t0, vt0, v0 GROUP BY rt1.c1, v0.c1, rt1.c0, rt1.c2, t0.c2;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING GROUP_CONCAT(((((vt0.c0)OR(MAX(x'693f'))))AND(MAX(MAX(vt0.c0))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (GROUP_CONCAT(((((vt0.c0)OR(MAX(x'693f'))))AND(MAX(MAX(vt0.c0))))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((GROUP_CONCAT(((((vt0.c0)OR(MAX(x'693f'))))AND(MAX(MAX(vt0.c0)))))) ISNULL);
SELECT MIN((('1767482384')<=(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) FROM vt0 ORDER BY ((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND('-216768314')))AND(vt0.c0))) NOT BETWEEN (vt0.c0 COLLATE RTRIM) AND ((vt0.c0 IN ()))) DESC  NULLS LAST, CASE WHEN ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) THEN (~ (0Xffffffffad5467c1)) END DESC  NULLS FIRST, vt0.c0;
SELECT rt1.c2, vt0.c0, v0.c0, rt1.c0, t0.c1, t0.c2, v0.c1, rt1.c1 FROM rt1, v0, t0, vt0;
SELECT rt1.c2, vt0.c0, v0.c0, rt1.c0, t0.c1, t0.c2, v0.c1, rt1.c1 FROM rt1, v0, t0, vt0 WHERE (((0.7126863863331434)<(CAST(v0.c0 AS BLOB)))) UNION ALL SELECT ALL rt1.c2, vt0.c0, v0.c0, rt1.c0, t0.c1, t0.c2, v0.c1, rt1.c1 FROM rt1, v0, t0, vt0 WHERE ((NOT (((0.7126863863331434)<(CAST(v0.c0 AS BLOB)))))) UNION ALL SELECT ALL rt1.c2, vt0.c0, v0.c0, rt1.c0, t0.c1, t0.c2, v0.c1, rt1.c1 FROM rt1, v0, t0, vt0 WHERE (((((0.7126863863331434)<(CAST(v0.c0 AS BLOB)))) ISNULL));
SELECT rt1.c2, vt0.c0, v0.c0, rt1.c0, t0.c1, t0.c2, v0.c1, rt1.c1 FROM rt1, v0, t0, vt0;
SELECT DISTINCT vt0.c0 FROM vt0, rt1;
SELECT DISTINCT vt0.c0 FROM vt0, rt1 WHERE (rt1.c2) UNION SELECT DISTINCT vt0.c0 FROM vt0, rt1 WHERE ((NOT (rt1.c2))) UNION SELECT DISTINCT vt0.c0 FROM vt0, rt1 WHERE (((rt1.c2) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0, rt1;
SELECT t0.c1, t0.c2, rt1.c0, t0.c0, vt0.c0 FROM rt1 CROSS JOIN vt0 ON ((~ (rt1.c0)) IN ()) FULL OUTER JOIN t0 ON (NOT (((vt0.c0) NOT BETWEEN (0xffffffffa895aa60) AND (rt1.c0)))) GROUP BY t0.c1, t0.c2, rt1.c0, t0.c0, vt0.c0;
SELECT ALL t0.c1, t0.c2, rt1.c0, t0.c0, vt0.c0 FROM rt1 CROSS JOIN vt0 ON ((~ (rt1.c0)) IN ()) FULL OUTER JOIN t0 ON (NOT (((vt0.c0) NOT BETWEEN (0Xffffffffa895aa60) AND (rt1.c0)))) WHERE (((((rt1.c0) NOT BETWEEN (t0.c1) AND (t0.c2)))<((('-506486868') NOT NULL)))) GROUP BY t0.c1, t0.c2, rt1.c0, t0.c0, vt0.c0 UNION SELECT t0.c1, t0.c2, rt1.c0, t0.c0, vt0.c0 FROM rt1 CROSS JOIN vt0 ON ((~ (rt1.c0)) IN ()) FULL OUTER JOIN t0 ON (NOT (((vt0.c0) NOT BETWEEN (0Xffffffffa895aa60) AND (rt1.c0)))) WHERE ((NOT (((((rt1.c0) NOT BETWEEN (t0.c1) AND (t0.c2)))<((('-506486868') NOT NULL)))))) GROUP BY t0.c1, t0.c2, rt1.c0, t0.c0, vt0.c0 UNION SELECT t0.c1, t0.c2, rt1.c0, t0.c0, vt0.c0 FROM rt1 CROSS JOIN vt0 ON ((~ (rt1.c0)) IN ()) FULL OUTER JOIN t0 ON (NOT (((vt0.c0) NOT BETWEEN (0xffffffffa895aa60) AND (rt1.c0)))) WHERE (((((((rt1.c0) NOT BETWEEN (t0.c1) AND (t0.c2)))<((('-506486868') NOT NULL)))) ISNULL)) GROUP BY t0.c1, t0.c2, rt1.c0, t0.c0, vt0.c0;
SELECT t0.c1, t0.c2, rt1.c0, t0.c0, vt0.c0 FROM rt1 CROSS JOIN vt0 ON ((~ (rt1.c0)) IN ()) FULL OUTER JOIN t0 ON (NOT (((vt0.c0) NOT BETWEEN (0xffffffffa895aa60) AND (rt1.c0)))) GROUP BY t0.c1, t0.c2, rt1.c0, t0.c0, vt0.c0;
SELECT t0.c2, t0.c1, rt1.c0, rt1.c1, t0.c0 FROM rt1, t0 GROUP BY t0.c2, t0.c1, rt1.c0, rt1.c1, t0.c0;
SELECT ALL t0.c2, t0.c1, rt1.c0, rt1.c1, t0.c0 FROM rt1, t0 GROUP BY t0.c2, t0.c1, rt1.c0, rt1.c1, t0.c0 HAVING MAX(TOTAL(TOTAL(COUNT(*)))) UNION ALL SELECT ALL t0.c2, t0.c1, rt1.c0, rt1.c1, t0.c0 FROM rt1 NOT INDEXED, t0 GROUP BY t0.c2, t0.c1, rt1.c0, rt1.c1, t0.c0 HAVING (NOT (MAX(TOTAL(TOTAL(COUNT(*)))))) UNION ALL SELECT ALL t0.c2, t0.c1, rt1.c0, rt1.c1, t0.c0 FROM rt1, t0 GROUP BY t0.c2, t0.c1, rt1.c0, rt1.c1, t0.c0 HAVING ((MAX(TOTAL(TOTAL(COUNT(*))))) ISNULL);
SELECT ALL vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE ((((+ (vt0.c0))) ISNULL)) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT ((((+ (vt0.c0))) ISNULL)))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((((((+ (vt0.c0))) ISNULL)) ISNULL));
SELECT ALL vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((((vt0.c0 IN ())) NOT NULL)) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT ((((vt0.c0 IN ())) NOT NULL)))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((((((vt0.c0 IN ())) NOT NULL)) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT v0.c0 FROM vt0, v0 GROUP BY v0.c0;
SELECT v0.c0 FROM vt0, v0 WHERE (((v0.c0) BETWEEN (v0.c0) AND (0.06497025922241939)) COLLATE NOCASE) GROUP BY v0.c0 UNION SELECT v0.c0 FROM vt0, v0 WHERE ((NOT (((v0.c0) BETWEEN (v0.c0) AND (0.06497025922241939)) COLLATE NOCASE))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM vt0, v0 WHERE (((((v0.c0) BETWEEN (v0.c0) AND (0.06497025922241939)) COLLATE NOCASE) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM vt0, v0 GROUP BY v0.c0;
SELECT rt1.c1, t0.c2 FROM rt1, t0 GROUP BY rt1.c1, t0.c2;
SELECT rt1.c1, t0.c2 FROM rt1, t0 GROUP BY rt1.c1, t0.c2 HAVING COUNT(TYPEOF(DISTINCT rt1.c2)) UNION ALL SELECT ALL rt1.c1, t0.c2 FROM rt1, t0 GROUP BY rt1.c1, t0.c2 HAVING (NOT (COUNT(TYPEOF(DISTINCT rt1.c2)))) UNION ALL SELECT rt1.c1, t0.c2 FROM rt1, t0 GROUP BY rt1.c1, t0.c2 HAVING ((COUNT(TYPEOF(DISTINCT rt1.c2))) ISNULL);
SELECT rt1.c1, t0.c2 FROM rt1, t0 GROUP BY rt1.c1, t0.c2;
SELECT rt1.c1, t0.c2 FROM rt1, t0 GROUP BY rt1.c1, t0.c2 HAVING COUNT(TYPEOF(DISTINCT rt1.c2)) UNION ALL SELECT ALL rt1.c1, t0.c2 FROM rt1, t0 GROUP BY rt1.c1, t0.c2 HAVING (NOT (COUNT(TYPEOF(DISTINCT rt1.c2)))) UNION ALL SELECT rt1.c1, t0.c2 FROM rt1, t0 GROUP BY rt1.c1, t0.c2 HAVING ((COUNT(TYPEOF(DISTINCT rt1.c2))) ISNULL);
SELECT rt1.c1, t0.c2 FROM rt1, t0 GROUP BY rt1.c1, t0.c2;
SELECT TOTAL(((((((v0.c1) NOT BETWEEN (v0.c2) AND (rt1.c2)))OR(rt1.c1 COLLATE BINARY)))OR(((v0.c1)-(rt1.c0))))) FROM v0, vt0, rt1;
SELECT t0.c0, t0.c1, rt1.c1, v0.c1, v0.c0 FROM t0 LEFT OUTER JOIN rt1 ON ((0.9608861169227765 IN ()) IN ()) CROSS JOIN v0 ON ((CAST(v0.c1 AS INTEGER))IS NOT(rt1.c1 COLLATE RTRIM));
SELECT ALL t0.c0, t0.c1, rt1.c1, v0.c1, v0.c0 FROM t0 LEFT OUTER JOIN rt1 ON ((0.9608861169227765 IN ()) IN ()) CROSS JOIN v0 ON ((CAST(v0.c1 AS INTEGER))IS NOT(rt1.c1 COLLATE RTRIM)) WHERE ((~ (((NULL) IS TRUE)))) UNION ALL SELECT t0.c0, t0.c1, rt1.c1, v0.c1, v0.c0 FROM t0 LEFT OUTER JOIN rt1 ON ((0.9608861169227765 IN ()) IN ()) CROSS JOIN v0 ON ((CAST(v0.c1 AS INTEGER))IS NOT(rt1.c1 COLLATE RTRIM)) WHERE ((NOT ((~ (((NULL) IS TRUE)))))) UNION ALL SELECT ALL t0.c0, t0.c1, rt1.c1, v0.c1, v0.c0 FROM t0 LEFT OUTER JOIN rt1 ON ((0.9608861169227765 IN ()) IN ()) CROSS JOIN v0 ON ((CAST(v0.c1 AS INTEGER))IS NOT(rt1.c1 COLLATE RTRIM)) WHERE ((((~ (((NULL) IS TRUE)))) ISNULL));
SELECT t0.c0, t0.c1, rt1.c1, v0.c1, v0.c0 FROM t0 LEFT OUTER JOIN rt1 ON ((0.9608861169227765 IN ()) IN ()) CROSS JOIN v0 ON ((CAST(v0.c1 AS INTEGER))IS NOT(rt1.c1 COLLATE RTRIM));
SELECT DISTINCT * FROM vt0, v0 FULL OUTER JOIN t0 ON ((((v0.c1)*(v0.c0))) IS TRUE);
SELECT DISTINCT * FROM vt0, v0 FULL OUTER JOIN t0 ON ((((v0.c1)*(v0.c0))) IS TRUE) WHERE (CAST((((v0.c2, v0.c2, t0.c1))<((v0.c1, v0.c0, v0.c2))) AS INTEGER)) UNION SELECT DISTINCT * FROM vt0, v0 FULL OUTER JOIN t0 ON ((((v0.c1)*(v0.c0))) IS TRUE) WHERE ((NOT (CAST((((v0.c2, v0.c2, t0.c1))<((v0.c1, v0.c0, v0.c2))) AS INTEGER)))) UNION SELECT DISTINCT * FROM vt0, v0 FULL OUTER JOIN t0 ON ((((v0.c1)*(v0.c0))) IS TRUE) WHERE (((CAST((((v0.c2, v0.c2, t0.c1))<((v0.c1, v0.c0, v0.c2))) AS INTEGER)) ISNULL));
SELECT DISTINCT * FROM vt0, v0 FULL OUTER JOIN t0 ON ((((v0.c1)*(v0.c0))) IS TRUE);
SELECT rt1.c1 FROM rt1 GROUP BY rt1.c1;
SELECT rt1.c1 FROM rt1 WHERE (rt1.c0) GROUP BY rt1.c1 UNION SELECT rt1.c1 FROM rt1 WHERE ((NOT (rt1.c0))) GROUP BY rt1.c1 UNION SELECT ALL rt1.c1 FROM rt1 WHERE (((rt1.c0) ISNULL)) GROUP BY rt1.c1;
SELECT rt1.c1 FROM rt1 GROUP BY rt1.c1;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING CAST(vt0.c0 AS INTEGER) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (CAST(vt0.c0 AS INTEGER))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((CAST(vt0.c0 AS INTEGER)) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING CAST(vt0.c0 AS INTEGER) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (CAST(vt0.c0 AS INTEGER))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((CAST(vt0.c0 AS INTEGER)) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM v0, vt0, t0;
SELECT vt0.c0 FROM v0, vt0, t0 WHERE (v0.c1) UNION ALL SELECT vt0.c0 FROM v0, vt0, t0 WHERE ((NOT (v0.c1))) UNION ALL SELECT vt0.c0 FROM v0, vt0, t0 WHERE (((v0.c1) ISNULL));
SELECT ALL vt0.c0 FROM v0, vt0, t0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (v0.c2) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (v0.c2))) UNION SELECT DISTINCT * FROM v0 WHERE (((v0.c2) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT rt1.c0, t0.c0, v0.c0, t0.c1, t0.c2, rt1.c2, v0.c1, vt0.c0, v0.c2 FROM t0, vt0, v0, rt1 GROUP BY rt1.c0, t0.c0, v0.c0, t0.c1, t0.c2, rt1.c2, v0.c1, vt0.c0, v0.c2;
SELECT rt1.c0, t0.c0, v0.c0, t0.c1, t0.c2, rt1.c2, v0.c1, vt0.c0, v0.c2 FROM t0, vt0, v0, rt1 WHERE ((((t0.c0)) BETWEEN (((- (t0.c0)))) AND (((+ (v0.c2)))))) GROUP BY rt1.c0, t0.c0, v0.c0, t0.c1, t0.c2, rt1.c2, v0.c1, vt0.c0, v0.c2 UNION SELECT rt1.c0, t0.c0, v0.c0, t0.c1, t0.c2, rt1.c2, v0.c1, vt0.c0, v0.c2 FROM t0, vt0, v0, rt1 WHERE ((NOT ((((t0.c0)) BETWEEN (((- (t0.c0)))) AND (((+ (v0.c2)))))))) GROUP BY rt1.c0, t0.c0, v0.c0, t0.c1, t0.c2, rt1.c2, v0.c1, vt0.c0, v0.c2 UNION SELECT rt1.c0, t0.c0, v0.c0, t0.c1, t0.c2, rt1.c2, v0.c1, vt0.c0, v0.c2 FROM t0, vt0 NOT INDEXED, v0, rt1 WHERE ((((((t0.c0)) BETWEEN (((- (t0.c0)))) AND (((+ (v0.c2)))))) ISNULL)) GROUP BY rt1.c0, t0.c0, v0.c0, t0.c1, t0.c2, rt1.c2, v0.c1, vt0.c0, v0.c2;
SELECT rt1.c0, t0.c0, v0.c0, t0.c1, t0.c2, rt1.c2, v0.c1, vt0.c0, v0.c2 FROM t0, vt0, v0, rt1 GROUP BY rt1.c0, t0.c0, v0.c0, t0.c1, t0.c2, rt1.c2, v0.c1, vt0.c0, v0.c2;
SELECT ALL rt1.c0, v0.c2, v0.c1, t0.c0, vt0.c0, rt1.c2, rt1.c1, v0.c0, t0.c2 FROM rt1, t0, vt0, v0 GROUP BY rt1.c0, v0.c2, v0.c1, t0.c0, vt0.c0, rt1.c2, rt1.c1, v0.c0, t0.c2;
SELECT rt1.c0, v0.c2, v0.c1, t0.c0, vt0.c0, rt1.c2, rt1.c1, v0.c0, t0.c2 FROM rt1, t0, vt0, v0 GROUP BY rt1.c0, v0.c2, v0.c1, t0.c0, vt0.c0, rt1.c2, rt1.c1, v0.c0, t0.c2 HAVING (AVG(SUM(COUNT(*))) IN (v0.c2)) UNION ALL SELECT ALL rt1.c0, v0.c2, v0.c1, t0.c0, vt0.c0, rt1.c2, rt1.c1, v0.c0, t0.c2 FROM rt1, t0, vt0, v0 GROUP BY rt1.c0, v0.c2, v0.c1, t0.c0, vt0.c0, rt1.c2, rt1.c1, v0.c0, t0.c2 HAVING (NOT ((AVG(SUM(COUNT(*))) IN (v0.c2)))) UNION ALL SELECT rt1.c0, v0.c2, v0.c1, t0.c0, vt0.c0, rt1.c2, rt1.c1, v0.c0, t0.c2 FROM rt1, t0, vt0, v0 GROUP BY rt1.c0, v0.c2, v0.c1, t0.c0, vt0.c0, rt1.c2, rt1.c1, v0.c0, t0.c2 HAVING (((AVG(SUM(COUNT(*))) IN (v0.c2))) ISNULL);
SELECT ALL vt0.c0, rt1.c1 FROM rt1, vt0, v0;
SELECT ALL vt0.c0, rt1.c1 FROM rt1, vt0, v0 WHERE (((((v0.c0)+(v0.c0)))<=(((rt1.c1)<(v0.c2))))) UNION ALL SELECT ALL vt0.c0, rt1.c1 FROM rt1, vt0, v0 WHERE ((NOT (((((v0.c0)+(v0.c0)))<=(((rt1.c1)<(v0.c2))))))) UNION ALL SELECT ALL vt0.c0, rt1.c1 FROM rt1, vt0, v0 WHERE (((((((v0.c0)+(v0.c0)))<=(((rt1.c1)<(v0.c2))))) ISNULL));
SELECT ALL vt0.c0, rt1.c1 FROM rt1, vt0, v0;
SELECT DISTINCT v0.c2, rt1.c2, rt1.c0, v0.c0, rt1.c1, t0.c0, t0.c1, vt0.c0 FROM v0, rt1, vt0, t0;
SELECT DISTINCT v0.c2, rt1.c2, rt1.c0, v0.c0, rt1.c1, t0.c0, t0.c1, vt0.c0 FROM v0, rt1, vt0, t0 WHERE (highlight(((t0.c2) BETWEEN (rt1.c1) AND (rt1.c2)), '0.505668363526833', ((v0.c1)!=('4?')), CAST(t0.c0 AS BLOB))) UNION SELECT DISTINCT v0.c2, rt1.c2, rt1.c0, v0.c0, rt1.c1, t0.c0, t0.c1, vt0.c0 FROM v0, rt1, vt0, t0 WHERE ((NOT (highlight(((t0.c2) BETWEEN (rt1.c1) AND (rt1.c2)), '0.505668363526833', ((v0.c1)!=('4?')), CAST(t0.c0 AS BLOB))))) UNION SELECT DISTINCT v0.c2, rt1.c2, rt1.c0, v0.c0, rt1.c1, t0.c0, t0.c1, vt0.c0 FROM v0, rt1, vt0, t0 WHERE (((highlight(((t0.c2) BETWEEN (rt1.c1) AND (rt1.c2)), '0.505668363526833', ((v0.c1)!=('4?')), CAST(t0.c0 AS BLOB))) ISNULL));
SELECT DISTINCT v0.c2, rt1.c2, rt1.c0, v0.c0, rt1.c1, t0.c0, t0.c1, vt0.c0 FROM v0, rt1, vt0, t0;
SELECT t0.c1, v0.c2, t0.c2, t0.c0, vt0.c0, v0.c0 FROM t0, rt1, vt0, v0 GROUP BY t0.c1, v0.c2, t0.c2, t0.c0, vt0.c0, v0.c0;
SELECT ALL t0.c1, v0.c2, t0.c2, t0.c0, vt0.c0, v0.c0 FROM t0, rt1, vt0, v0 WHERE (CASE WHEN ((v0.c1) IS FALSE) THEN ('6pp\n5qQY' IN (v0.c2)) ELSE ((rt1.c2) ISNULL) END) GROUP BY t0.c1, v0.c2, t0.c2, t0.c0, vt0.c0, v0.c0 UNION SELECT t0.c1, v0.c2, t0.c2, t0.c0, vt0.c0, v0.c0 FROM t0, rt1, vt0, v0 WHERE ((NOT (CASE WHEN ((v0.c1) IS FALSE) THEN ('6pp\n5qQY' IN (v0.c2)) ELSE ((rt1.c2) ISNULL) END))) GROUP BY t0.c1, v0.c2, t0.c2, t0.c0, vt0.c0, v0.c0 UNION SELECT ALL t0.c1, v0.c2, t0.c2, t0.c0, vt0.c0, v0.c0 FROM t0, rt1, vt0, v0 WHERE (((CASE WHEN ((v0.c1) IS FALSE) THEN ('6pp\n5qQY' IN (v0.c2)) ELSE ((rt1.c2) ISNULL) END) ISNULL)) GROUP BY t0.c1, v0.c2, t0.c2, t0.c0, vt0.c0, v0.c0;
SELECT t0.c1, v0.c2, t0.c2, t0.c0, vt0.c0, v0.c0 FROM t0, rt1, vt0, v0 GROUP BY t0.c1, v0.c2, t0.c2, t0.c0, vt0.c0, v0.c0;
SELECT ALL rt1.c0, t0.c2, t0.c0, t0.c1, rt1.c2, vt0.c0, rt1.c1 FROM rt1, t0, vt0 GROUP BY rt1.c0, t0.c2, t0.c0, t0.c1, rt1.c2, vt0.c0, rt1.c1;
SELECT ALL rt1.c0, t0.c2, t0.c0, t0.c1, rt1.c2, vt0.c0, rt1.c1 FROM rt1, t0, vt0 GROUP BY rt1.c0, t0.c2, t0.c0, t0.c1, rt1.c2, vt0.c0, rt1.c1 HAVING json_extract(COUNT(GROUP_CONCAT(GROUP_CONCAT(MIN(MAX(vt0.c0))))), (- (t0.c0))) UNION ALL SELECT ALL rt1.c0, t0.c2, t0.c0, t0.c1, rt1.c2, vt0.c0, rt1.c1 FROM rt1, t0, vt0 GROUP BY rt1.c0, t0.c2, t0.c0, t0.c1, rt1.c2, vt0.c0, rt1.c1 HAVING (NOT (json_extract(COUNT(GROUP_CONCAT(GROUP_CONCAT(MIN(MAX(vt0.c0))))), (- (t0.c0))))) UNION ALL SELECT ALL rt1.c0, t0.c2, t0.c0, t0.c1, rt1.c2, vt0.c0, rt1.c1 FROM rt1, t0, vt0 GROUP BY rt1.c0, t0.c2, t0.c0, t0.c1, rt1.c2, vt0.c0, rt1.c1 HAVING ((json_extract(COUNT(GROUP_CONCAT(GROUP_CONCAT(MIN(MAX(vt0.c0))))), (- (t0.c0)))) ISNULL);
SELECT * FROM vt0, t0, rt1;
SELECT ALL * FROM vt0, t0, rt1 WHERE ((((NULL))>((((t0.c1)-(rt1.c0)))))) UNION ALL SELECT ALL * FROM vt0, t0, rt1 WHERE ((NOT ((((NULL))>((((t0.c1)-(rt1.c0)))))))) UNION ALL SELECT ALL * FROM vt0, t0, rt1 WHERE ((((((NULL))>((((t0.c1)-(rt1.c0)))))) ISNULL));
SELECT * FROM vt0, t0, rt1;
SELECT DISTINCT rt1.c2, v0.c0, rt1.c1, v0.c1, t0.c1, t0.c0, rt1.c0, v0.c2, t0.c2 FROM rt1, vt0, v0 RIGHT OUTER JOIN t0 ON ((((t0.c2)>=(v0.c2)))IS NOT((((v0.c2)) BETWEEN ((v0.c0)) AND ((rt1.c0)))));
SELECT DISTINCT rt1.c2, v0.c0, rt1.c1, v0.c1, t0.c1, t0.c0, rt1.c0, v0.c2, t0.c2 FROM rt1, vt0, v0 RIGHT OUTER JOIN t0 ON ((((t0.c2)>=(v0.c2)))IS NOT((((v0.c2)) BETWEEN ((v0.c0)) AND ((rt1.c0))))) WHERE (((x'd87f') NOT NULL)) UNION SELECT DISTINCT rt1.c2, v0.c0, rt1.c1, v0.c1, t0.c1, t0.c0, rt1.c0, v0.c2, t0.c2 FROM rt1, vt0, v0 RIGHT OUTER JOIN t0 ON ((((t0.c2)>=(v0.c2)))IS NOT((((v0.c2)) BETWEEN ((v0.c0)) AND ((rt1.c0))))) WHERE ((NOT (((x'd87f') NOT NULL)))) UNION SELECT DISTINCT rt1.c2, v0.c0, rt1.c1, v0.c1, t0.c1, t0.c0, rt1.c0, v0.c2, t0.c2 FROM rt1, vt0, v0 RIGHT OUTER JOIN t0 ON ((((t0.c2)>=(v0.c2)))IS NOT((((v0.c2)) BETWEEN ((v0.c0)) AND ((rt1.c0))))) WHERE (((((x'd87f') NOT NULL)) ISNULL));
SELECT DISTINCT rt1.c2, v0.c0, rt1.c1, v0.c1, t0.c1, t0.c0, rt1.c0, v0.c2, t0.c2 FROM rt1, vt0, v0 RIGHT OUTER JOIN t0 ON ((((t0.c2)>=(v0.c2)))IS NOT((((v0.c2)) BETWEEN ((v0.c0)) AND ((rt1.c0)))));
SELECT ALL rt1.c0, vt0.c0, v0.c0, v0.c2, rt1.c1 FROM vt0 INNER JOIN v0 ON rt1.c2 INNER JOIN rt1 ON (((- (rt1.c1))) NOT NULL) GROUP BY rt1.c0, vt0.c0, v0.c0, v0.c2, rt1.c1;
SELECT rt1.c0, vt0.c0, v0.c0, v0.c2, rt1.c1 FROM vt0 INNER JOIN v0 ON rt1.c2 INNER JOIN rt1 ON (((- (rt1.c1))) NOT NULL) WHERE (ABS(HEX(rt1.c0))) GROUP BY rt1.c0, vt0.c0, v0.c0, v0.c2, rt1.c1 UNION SELECT ALL rt1.c0, vt0.c0, v0.c0, v0.c2, rt1.c1 FROM vt0 INNER JOIN v0 ON rt1.c2 INNER JOIN rt1 ON (((- (rt1.c1))) NOT NULL) WHERE ((NOT (ABS(HEX(rt1.c0))))) GROUP BY rt1.c0, vt0.c0, v0.c0, v0.c2, rt1.c1 UNION SELECT rt1.c0, vt0.c0, v0.c0, v0.c2, rt1.c1 FROM vt0 INNER JOIN v0 ON rt1.c2 INNER JOIN rt1 ON (((- (rt1.c1))) NOT NULL) WHERE (((ABS(HEX(rt1.c0))) ISNULL)) GROUP BY rt1.c0, vt0.c0, v0.c0, v0.c2, rt1.c1;
SELECT ALL rt1.c0, vt0.c0, v0.c0, v0.c2, rt1.c1 FROM vt0 INNER JOIN v0 ON rt1.c2 INNER JOIN rt1 ON (((- (rt1.c1))) NOT NULL) GROUP BY rt1.c0, vt0.c0, v0.c0, v0.c2, rt1.c1;
SELECT rt1.c1, rt1.c0 FROM vt0, rt1, t0 GROUP BY rt1.c1, rt1.c0;
SELECT ALL rt1.c1, rt1.c0 FROM vt0, rt1, t0 GROUP BY rt1.c1, rt1.c0 HAVING GROUP_CONCAT((((GROUP_CONCAT(0x62ee0ad6), MIN(GROUP_CONCAT(t0.c0)), t0.c0)) NOT BETWEEN ((rt1.c2, rt1.c2, t0.c2)) AND ((TOTAL(NULL), SUM(TOTAL(NULL)), SUM(t0.c2))))) UNION ALL SELECT rt1.c1, rt1.c0 FROM vt0, rt1, t0 GROUP BY rt1.c1, rt1.c0 HAVING (NOT (GROUP_CONCAT((((GROUP_CONCAT(0x62ee0ad6), MIN(GROUP_CONCAT(t0.c0)), t0.c0)) NOT BETWEEN ((rt1.c2, rt1.c2, t0.c2)) AND ((TOTAL(NULL), SUM(TOTAL(NULL)), SUM(t0.c2))))))) UNION ALL SELECT ALL rt1.c1, rt1.c0 FROM vt0, rt1, t0 GROUP BY rt1.c1, rt1.c0 HAVING ((GROUP_CONCAT((((GROUP_CONCAT(0X62ee0ad6), MIN(GROUP_CONCAT(t0.c0)), t0.c0)) NOT BETWEEN ((rt1.c2, rt1.c2, t0.c2)) AND ((TOTAL(NULL), SUM(TOTAL(NULL)), SUM(t0.c2)))))) ISNULL);
SELECT ALL v0.c1, rt1.c1, v0.c0 FROM rt1, v0;
SELECT v0.c1, rt1.c1, v0.c0 FROM rt1, v0 WHERE (((((rt1.c2) NOTNULL))&(((v0.c1)AND(rt1.c2))))) UNION ALL SELECT v0.c1, rt1.c1, v0.c0 FROM rt1 NOT INDEXED, v0 WHERE ((NOT (((((rt1.c2) NOTNULL))&(((v0.c1)AND(rt1.c2))))))) UNION ALL SELECT ALL v0.c1, rt1.c1, v0.c0 FROM rt1, v0 WHERE (((((((rt1.c2) NOTNULL))&(((v0.c1)AND(rt1.c2))))) ISNULL));
SELECT ALL v0.c1, rt1.c1, v0.c0 FROM rt1, v0;
SELECT DISTINCT t0.c1, t0.c2, t0.c0, rt1.c1, rt1.c0, v0.c0 FROM t0, v0 NATURAL JOIN rt1;
SELECT DISTINCT t0.c1, t0.c2, t0.c0, rt1.c1, rt1.c0, v0.c0 FROM t0, v0 NATURAL JOIN rt1 WHERE (UPPER(DISTINCT rt1.c2) COLLATE RTRIM) UNION SELECT DISTINCT t0.c1, t0.c2, t0.c0, rt1.c1, rt1.c0, v0.c0 FROM t0, v0 NATURAL JOIN rt1 WHERE ((NOT (UPPER(DISTINCT rt1.c2) COLLATE RTRIM))) UNION SELECT DISTINCT t0.c1, t0.c2, t0.c0, rt1.c1, rt1.c0, v0.c0 FROM t0, v0 NATURAL JOIN rt1 WHERE (((UPPER(DISTINCT rt1.c2) COLLATE RTRIM) ISNULL));
SELECT DISTINCT t0.c1, t0.c2, t0.c0, rt1.c1, rt1.c0, v0.c0 FROM t0, v0 NATURAL JOIN rt1;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (((((vt0.c0) ISNULL))||(((vt0.c0) NOT NULL)))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (((((vt0.c0) ISNULL))||(((vt0.c0) NOT NULL)))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((((((vt0.c0) ISNULL))||(((vt0.c0) NOT NULL)))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL rt1.c0, vt0.c0, rt1.c1, rt1.c2 FROM vt0, rt1 GROUP BY rt1.c0, vt0.c0, rt1.c1, rt1.c2;
SELECT ALL rt1.c0, vt0.c0, rt1.c1, rt1.c2 FROM vt0, rt1 GROUP BY rt1.c0, vt0.c0, rt1.c1, rt1.c2 HAVING CASE WHEN ((vt0.c0)||(COUNT(*))) THEN ((MIN(GROUP_CONCAT(5.17333584E8))) NOT BETWEEN (rt1.c0) AND (rt1.c1)) END UNION ALL SELECT rt1.c0, vt0.c0, rt1.c1, rt1.c2 FROM vt0, rt1 GROUP BY rt1.c0, vt0.c0, rt1.c1, rt1.c2 HAVING (NOT (CASE WHEN ((vt0.c0)||(COUNT(*))) THEN ((MIN(GROUP_CONCAT(5.17333584E8))) NOT BETWEEN (rt1.c0) AND (rt1.c1)) END)) UNION ALL SELECT ALL rt1.c0, vt0.c0, rt1.c1, rt1.c2 FROM vt0, rt1 GROUP BY rt1.c0, vt0.c0, rt1.c1, rt1.c2 HAVING ((CASE WHEN ((vt0.c0)||(COUNT(*))) THEN ((MIN(GROUP_CONCAT(5.17333584E8))) NOT BETWEEN (rt1.c0) AND (rt1.c1)) END) ISNULL);
SELECT ALL * FROM t0, v0;
SELECT * FROM t0, v0 WHERE (((((((t0.c2)OR('1661675826')))OR(v0.c1)))<>(CAST(v0.c0 AS REAL)))) UNION ALL SELECT ALL * FROM t0, v0 WHERE ((NOT (((((((t0.c2)OR('1661675826')))OR(v0.c1)))!=(CAST(v0.c0 AS REAL)))))) UNION ALL SELECT * FROM t0, v0 WHERE (((((((((t0.c2)OR('1661675826')))OR(v0.c1)))!=(CAST(v0.c0 AS REAL)))) ISNULL));
SELECT ALL * FROM t0, v0;
SELECT DISTINCT * FROM rt1;
SELECT DISTINCT * FROM rt1 WHERE ((((((((rt1.c0))!=((rt1.c0))))OR((rt1.c0 IN ()))))OR(CAST(rt1.c1 AS INTEGER)))) UNION SELECT DISTINCT * FROM rt1 WHERE ((NOT ((((((((rt1.c0))<>((rt1.c0))))OR((rt1.c0 IN ()))))OR(CAST(rt1.c1 AS INTEGER)))))) UNION SELECT DISTINCT * FROM rt1 WHERE ((((((((((rt1.c0))!=((rt1.c0))))OR((rt1.c0 IN ()))))OR(CAST(rt1.c1 AS INTEGER)))) ISNULL));
SELECT DISTINCT * FROM rt1;
SELECT ALL rt1.c1, rt1.c0, rt1.c2 FROM vt0, rt1 GROUP BY rt1.c1, rt1.c0, rt1.c2;
SELECT rt1.c1, rt1.c0, rt1.c2 FROM vt0, rt1 WHERE (CAST(CASE rt1.c1  WHEN rt1.c2 THEN rt1.c2 END AS REAL)) GROUP BY rt1.c1, rt1.c0, rt1.c2 UNION SELECT ALL rt1.c1, rt1.c0, rt1.c2 FROM vt0, rt1 WHERE ((NOT (CAST(CASE rt1.c1  WHEN rt1.c2 THEN rt1.c2 END AS REAL)))) GROUP BY rt1.c1, rt1.c0, rt1.c2 UNION SELECT ALL rt1.c1, rt1.c0, rt1.c2 FROM vt0, rt1 WHERE (((CAST(CASE rt1.c1  WHEN rt1.c2 THEN rt1.c2 END AS REAL)) ISNULL)) GROUP BY rt1.c1, rt1.c0, rt1.c2;
SELECT ALL rt1.c1, rt1.c0, rt1.c2 FROM vt0, rt1 GROUP BY rt1.c1, rt1.c0, rt1.c2;
SELECT rt1.c1, rt1.c2, t0.c0, t0.c1, rt1.c0 FROM rt1, vt0, v0, t0 GROUP BY rt1.c1, rt1.c2, t0.c0, t0.c1, rt1.c0;
SELECT rt1.c1, rt1.c2, t0.c0, t0.c1, rt1.c0 FROM rt1, vt0, v0, t0 GROUP BY rt1.c1, rt1.c2, t0.c0, t0.c1, rt1.c0 HAVING SUM(COUNT(*) COLLATE RTRIM) UNION ALL SELECT rt1.c1, rt1.c2, t0.c0, t0.c1, rt1.c0 FROM rt1, vt0, v0, t0 GROUP BY rt1.c1, rt1.c2, t0.c0, t0.c1, rt1.c0 HAVING (NOT (SUM(COUNT(*) COLLATE RTRIM))) UNION ALL SELECT ALL rt1.c1, rt1.c2, t0.c0, t0.c1, rt1.c0 FROM rt1, vt0, v0, t0 GROUP BY rt1.c1, rt1.c2, t0.c0, t0.c1, rt1.c0 HAVING ((SUM(COUNT(*) COLLATE RTRIM)) ISNULL);
SELECT ALL * FROM rt1, t0 FULL OUTER JOIN vt0 ON (((+ (vt0.c0)))GLOB(((t0.c2)>=(t0.c2))));
SELECT * FROM rt1, t0 FULL OUTER JOIN vt0 ON (((+ (vt0.c0)))GLOB(((t0.c2)>=(t0.c2)))) WHERE (((((((((((((rt1.c0)AND(t0.c2)))AND(rt1.c1)))AND(((t0.c1)<<(rt1.c1)))))OR(((t0.c0) IS FALSE))))OR((t0.c0 IN ()))))OR(((((((((((((t0.c0)OR(1672406820)))AND(t0.c0)))AND(rt1.c1)))AND(0.18421888927883812)))AND(rt1.c1)))AND(t0.c1))))) UNION ALL SELECT * FROM rt1, t0 FULL OUTER JOIN vt0 ON (((+ (vt0.c0)))GLOB(((t0.c2)>=(t0.c2)))) WHERE ((NOT (((((((((((((rt1.c0)AND(t0.c2)))AND(rt1.c1)))AND(((t0.c1)<<(rt1.c1)))))OR(((t0.c0) IS FALSE))))OR((t0.c0 IN ()))))OR(((((((((((((t0.c0)OR(1672406820)))AND(t0.c0)))AND(rt1.c1)))AND(0.18421888927883812)))AND(rt1.c1)))AND(t0.c1))))))) UNION ALL SELECT * FROM rt1, t0 FULL OUTER JOIN vt0 ON (((+ (vt0.c0)))GLOB(((t0.c2)>=(t0.c2)))) WHERE (((((((((((((((rt1.c0)AND(t0.c2)))AND(rt1.c1)))AND(((t0.c1)<<(rt1.c1)))))OR(((t0.c0) IS FALSE))))OR((t0.c0 IN ()))))OR(((((((((((((t0.c0)OR(1672406820)))AND(t0.c0)))AND(rt1.c1)))AND(0.18421888927883812)))AND(rt1.c1)))AND(t0.c1))))) ISNULL));
SELECT ALL * FROM rt1, t0 FULL OUTER JOIN vt0 ON (((+ (vt0.c0)))GLOB(((t0.c2)>=(t0.c2))));
SELECT DISTINCT rt1.c1, vt0.c0, t0.c0, v0.c1 FROM rt1, vt0, t0, v0;
SELECT DISTINCT rt1.c1, vt0.c0, t0.c0, v0.c1 FROM rt1, vt0, t0, v0 WHERE (((((v0.c0) IS FALSE))AND(((rt1.c1) NOT NULL)))) UNION SELECT DISTINCT rt1.c1, vt0.c0, t0.c0, v0.c1 FROM rt1, vt0, t0, v0 WHERE ((NOT (((((v0.c0) IS FALSE))AND(((rt1.c1) NOT NULL)))))) UNION SELECT DISTINCT rt1.c1, vt0.c0, t0.c0, v0.c1 FROM rt1, vt0, t0, v0 WHERE (((((((v0.c0) IS FALSE))AND(((rt1.c1) NOT NULL)))) ISNULL));
SELECT DISTINCT rt1.c1, vt0.c0, t0.c0, v0.c1 FROM rt1, vt0, t0, v0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (LOWER(DISTINCT CAST(vt0.c0 AS TEXT))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (LOWER(DISTINCT CAST(vt0.c0 AS TEXT))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((LOWER(DISTINCT CAST(vt0.c0 AS TEXT))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT v0.c2, v0.c1, v0.c0 FROM v0 GROUP BY v0.c2, v0.c1, v0.c0;
SELECT v0.c2, v0.c1, v0.c0 FROM v0 GROUP BY v0.c2, v0.c1, v0.c0 HAVING (((v0.c2)) NOT BETWEEN (((0Xffffffffb928f2a1 IN (v0.c2)))) AND ((v0.c0 COLLATE NOCASE))) UNION ALL SELECT v0.c2, v0.c1, v0.c0 FROM v0 GROUP BY v0.c2, v0.c1, v0.c0 HAVING (NOT ((((v0.c2)) NOT BETWEEN (((0Xffffffffb928f2a1 IN (v0.c2)))) AND ((v0.c0 COLLATE NOCASE))))) UNION ALL SELECT ALL v0.c2, v0.c1, v0.c0 FROM v0 GROUP BY v0.c2, v0.c1, v0.c0 HAVING (((((v0.c2)) NOT BETWEEN (((0Xffffffffb928f2a1 IN (v0.c2)))) AND ((v0.c0 COLLATE NOCASE)))) ISNULL);
SELECT v0.c2, v0.c1, v0.c0 FROM v0 GROUP BY v0.c2, v0.c1, v0.c0;
SELECT v0.c2, v0.c1, v0.c0 FROM v0 GROUP BY v0.c2, v0.c1, v0.c0 HAVING (((v0.c2)) NOT BETWEEN (((0Xffffffffb928f2a1 IN (v0.c2)))) AND ((v0.c0 COLLATE NOCASE))) UNION ALL SELECT v0.c2, v0.c1, v0.c0 FROM v0 GROUP BY v0.c2, v0.c1, v0.c0 HAVING (NOT ((((v0.c2)) NOT BETWEEN (((0Xffffffffb928f2a1 IN (v0.c2)))) AND ((v0.c0 COLLATE NOCASE))))) UNION ALL SELECT ALL v0.c2, v0.c1, v0.c0 FROM v0 GROUP BY v0.c2, v0.c1, v0.c0 HAVING (((((v0.c2)) NOT BETWEEN (((0Xffffffffb928f2a1 IN (v0.c2)))) AND ((v0.c0 COLLATE NOCASE)))) ISNULL);
SELECT v0.c2, v0.c1, v0.c0 FROM v0 GROUP BY v0.c2, v0.c1, v0.c0;
SELECT * FROM v0, t0 FULL OUTER JOIN vt0 ON ((((((0.8611573840215355) NOT NULL))OR(CASE v0.c2  WHEN NULL THEN v0.c0 ELSE vt0.c0 END)))OR(CASE WHEN v0.c1 THEN t0.c0 ELSE vt0.c0 END));
SELECT ALL * FROM v0, t0 FULL OUTER JOIN vt0 ON ((((((0.8611573840215355) NOT NULL))OR(CASE v0.c2  WHEN NULL THEN v0.c0 ELSE vt0.c0 END)))OR(CASE WHEN v0.c1 THEN t0.c0 ELSE vt0.c0 END)) WHERE (0.06456008332459673) UNION ALL SELECT ALL * FROM v0, t0 FULL OUTER JOIN vt0 ON ((((((0.8611573840215355) NOT NULL))OR(CASE v0.c2  WHEN NULL THEN v0.c0 ELSE vt0.c0 END)))OR(CASE WHEN v0.c1 THEN t0.c0 ELSE vt0.c0 END)) WHERE ((NOT (0.06456008332459673))) UNION ALL SELECT * FROM v0, t0 FULL OUTER JOIN vt0 ON ((((((0.8611573840215355) NOT NULL))OR(CASE v0.c2  WHEN NULL THEN v0.c0 ELSE vt0.c0 END)))OR(CASE WHEN v0.c1 THEN t0.c0 ELSE vt0.c0 END)) WHERE (((0.06456008332459673) ISNULL));
SELECT * FROM v0, t0 FULL OUTER JOIN vt0 ON ((((((0.8611573840215355) NOT NULL))OR(CASE v0.c2  WHEN NULL THEN v0.c0 ELSE vt0.c0 END)))OR(CASE WHEN v0.c1 THEN t0.c0 ELSE vt0.c0 END));
SELECT DISTINCT * FROM rt1 RIGHT OUTER JOIN v0 ON (((rt1.c2)IS(vt0.c0)) IN ()) CROSS JOIN vt0 ON (rt1.c1 COLLATE RTRIM IN ());
SELECT DISTINCT * FROM rt1 RIGHT OUTER JOIN v0 ON (((rt1.c2)IS(vt0.c0)) IN ()) CROSS JOIN vt0 ON (rt1.c1 COLLATE RTRIM IN ()) WHERE (CASE WHEN vt0.c0 COLLATE RTRIM THEN v0.c1 WHEN ((((v0.c0)AND(v0.c1)))OR(0.33233550028901315)) THEN ((v0.c0)||(vt0.c0)) WHEN QUOTE(v0.c2) THEN (~ (v0.c0)) END) UNION SELECT DISTINCT * FROM rt1 RIGHT OUTER JOIN v0 ON (((rt1.c2)IS(vt0.c0)) IN ()) CROSS JOIN vt0 ON (rt1.c1 COLLATE RTRIM IN ()) WHERE ((NOT (CASE WHEN vt0.c0 COLLATE RTRIM THEN v0.c1 WHEN ((((v0.c0)AND(v0.c1)))OR(0.33233550028901315)) THEN ((v0.c0)||(vt0.c0)) WHEN QUOTE(v0.c2) THEN (~ (v0.c0)) END))) UNION SELECT DISTINCT * FROM rt1 RIGHT OUTER JOIN v0 ON (((rt1.c2)IS(vt0.c0)) IN ()) CROSS JOIN vt0 ON (rt1.c1 COLLATE RTRIM IN ()) WHERE (((CASE WHEN vt0.c0 COLLATE RTRIM THEN v0.c1 WHEN ((((v0.c0)AND(v0.c1)))OR(0.33233550028901315)) THEN ((v0.c0)||(vt0.c0)) WHEN QUOTE(v0.c2) THEN (~ (v0.c0)) END) ISNULL));
SELECT DISTINCT * FROM rt1 RIGHT OUTER JOIN v0 ON (((rt1.c2)IS(vt0.c0)) IN ()) CROSS JOIN vt0 ON (rt1.c1 COLLATE RTRIM IN ());
SELECT ALL t0.c0, v0.c2, v0.c0, rt1.c1, v0.c1, vt0.c0 FROM v0, vt0, rt1 RIGHT OUTER JOIN t0 ON NULL GROUP BY t0.c0, v0.c2, v0.c0, rt1.c1, v0.c1, vt0.c0;
SELECT ALL t0.c0, v0.c2, v0.c0, rt1.c1, v0.c1, vt0.c0 FROM v0, vt0, rt1 RIGHT OUTER JOIN t0 ON NULL WHERE (((((rt1.c2) NOT BETWEEN ('226053619') AND (vt0.c0))) NOTNULL)) GROUP BY t0.c0, v0.c2, v0.c0, rt1.c1, v0.c1, vt0.c0 UNION SELECT ALL t0.c0, v0.c2, v0.c0, rt1.c1, v0.c1, vt0.c0 FROM v0, vt0, rt1 RIGHT OUTER JOIN t0 ON NULL WHERE ((NOT (((((rt1.c2) NOT BETWEEN ('226053619') AND (vt0.c0))) NOTNULL)))) GROUP BY t0.c0, v0.c2, v0.c0, rt1.c1, v0.c1, vt0.c0 UNION SELECT t0.c0, v0.c2, v0.c0, rt1.c1, v0.c1, vt0.c0 FROM v0, vt0, rt1 RIGHT OUTER JOIN t0 ON NULL WHERE (((((((rt1.c2) NOT BETWEEN ('226053619') AND (vt0.c0))) NOTNULL)) ISNULL)) GROUP BY t0.c0, v0.c2, v0.c0, rt1.c1, v0.c1, vt0.c0;
SELECT ALL t0.c0, v0.c2, v0.c0, rt1.c1, v0.c1, vt0.c0 FROM v0, vt0, rt1 RIGHT OUTER JOIN t0 ON NULL GROUP BY t0.c0, v0.c2, v0.c0, rt1.c1, v0.c1, vt0.c0;
SELECT v0.c2, t0.c1, rt1.c2 FROM v0, t0, rt1 GROUP BY v0.c2, t0.c1, rt1.c2;
SELECT v0.c2, t0.c1, rt1.c2 FROM v0, t0, rt1 GROUP BY v0.c2, t0.c1, rt1.c2 HAVING TOTAL(COUNT(*)) UNION ALL SELECT v0.c2, t0.c1, rt1.c2 FROM v0, t0, rt1 GROUP BY v0.c2, t0.c1, rt1.c2 HAVING (NOT (TOTAL(COUNT(*)))) UNION ALL SELECT v0.c2, t0.c1, rt1.c2 FROM v0, t0, rt1 GROUP BY v0.c2, t0.c1, rt1.c2 HAVING ((TOTAL(COUNT(*))) ISNULL);
SELECT ALL rt1.c0, rt1.c2, rt1.c1, vt0.c0 FROM rt1, vt0;
SELECT rt1.c0, rt1.c2, rt1.c1, vt0.c0 FROM rt1, vt0 WHERE (-1e500) UNION ALL SELECT ALL rt1.c0, rt1.c2, rt1.c1, vt0.c0 FROM rt1, vt0 WHERE ((NOT (-1e500))) UNION ALL SELECT ALL rt1.c0, rt1.c2, rt1.c1, vt0.c0 FROM rt1, vt0 WHERE (((-1e500) ISNULL));
SELECT ALL rt1.c0, rt1.c2, rt1.c1, vt0.c0 FROM rt1, vt0;
SELECT DISTINCT rt1.c1, rt1.c0 FROM vt0 INNER JOIN rt1 ON (((((rt1.c0))<=((vt0.c0))))-(((vt0.c0) BETWEEN (rt1.c2) AND (vt0.c0))));
SELECT DISTINCT rt1.c1, rt1.c0 FROM vt0 INNER JOIN rt1 ON (((((rt1.c0))<=((vt0.c0))))-(((vt0.c0) BETWEEN (rt1.c2) AND (vt0.c0)))) WHERE ((((vt0.c0)) BETWEEN ((rt1.c1)) AND ((TRIM(rt1.c2))))) UNION SELECT DISTINCT rt1.c1, rt1.c0 FROM vt0 NOT INDEXED INNER JOIN rt1 ON (((((rt1.c0))<=((vt0.c0))))-(((vt0.c0) BETWEEN (rt1.c2) AND (vt0.c0)))) WHERE ((NOT ((((vt0.c0)) BETWEEN ((rt1.c1)) AND ((TRIM(rt1.c2))))))) UNION SELECT DISTINCT rt1.c1, rt1.c0 FROM vt0 INNER JOIN rt1 ON (((((rt1.c0))<=((vt0.c0))))-(((vt0.c0) BETWEEN (rt1.c2) AND (vt0.c0)))) WHERE ((((((vt0.c0)) BETWEEN ((rt1.c1)) AND ((TRIM(rt1.c2))))) ISNULL));
SELECT DISTINCT rt1.c1, rt1.c0 FROM vt0 INNER JOIN rt1 ON (((((rt1.c0))<=((vt0.c0))))-(((vt0.c0) BETWEEN (rt1.c2) AND (vt0.c0))));
SELECT v0.c2 FROM v0 GROUP BY v0.c2;
SELECT ALL v0.c2 FROM v0 WHERE (CASE WHEN v0.c0 COLLATE BINARY THEN ((v0.c1) NOTNULL) ELSE GLOB(v0.c2, v0.c2) END) GROUP BY v0.c2 UNION SELECT ALL v0.c2 FROM v0 WHERE ((NOT (CASE WHEN v0.c0 COLLATE BINARY THEN ((v0.c1) NOTNULL) ELSE GLOB(v0.c2, v0.c2) END))) GROUP BY v0.c2 UNION SELECT v0.c2 FROM v0 WHERE (((CASE WHEN v0.c0 COLLATE BINARY THEN ((v0.c1) NOTNULL) ELSE GLOB(v0.c2, v0.c2) END) ISNULL)) GROUP BY v0.c2;
SELECT v0.c2 FROM v0 GROUP BY v0.c2;
SELECT rt1.c1, v0.c0 FROM rt1 RIGHT OUTER JOIN v0 ON ((((v0.c2) NOT NULL))+(CASE ''  WHEN v0.c0 THEN v0.c1 WHEN rt1.c0 THEN rt1.c2 WHEN v0.c2 THEN rt1.c1 ELSE rt1.c2 END)) GROUP BY rt1.c1, v0.c0;
SELECT rt1.c1, v0.c0 FROM rt1 RIGHT OUTER JOIN v0 ON ((((v0.c2) NOT NULL))+(CASE ''  WHEN v0.c0 THEN v0.c1 WHEN rt1.c0 THEN rt1.c2 WHEN v0.c2 THEN rt1.c1 ELSE rt1.c2 END)) GROUP BY rt1.c1, v0.c0 HAVING MIN(MIN(MAX(GROUP_CONCAT(v0.c1)))) UNION ALL SELECT ALL rt1.c1, v0.c0 FROM rt1 RIGHT OUTER JOIN v0 ON ((((v0.c2) NOT NULL))+(CASE ''  WHEN v0.c0 THEN v0.c1 WHEN rt1.c0 THEN rt1.c2 WHEN v0.c2 THEN rt1.c1 ELSE rt1.c2 END)) GROUP BY rt1.c1, v0.c0 HAVING (NOT (MIN(MIN(MAX(GROUP_CONCAT(v0.c1)))))) UNION ALL SELECT ALL rt1.c1, v0.c0 FROM rt1 RIGHT OUTER JOIN v0 ON ((((v0.c2) NOT NULL))+(CASE ''  WHEN v0.c0 THEN v0.c1 WHEN rt1.c0 THEN rt1.c2 WHEN v0.c2 THEN rt1.c1 ELSE rt1.c2 END)) GROUP BY rt1.c1, v0.c0 HAVING ((MIN(MIN(MAX(GROUP_CONCAT(v0.c1))))) ISNULL);
SELECT t0.c0, t0.c1, t0.c2 FROM vt0, t0;
SELECT ALL t0.c0, t0.c1, t0.c2 FROM vt0, t0 WHERE (((((((((((t0.c0)OR(t0.c0)))AND(t0.c2)))OR(x'')))AND(t0.c1)))|((t0.c2 IN ())))) UNION ALL SELECT ALL t0.c0, t0.c1, t0.c2 FROM vt0, t0 WHERE ((NOT (((((((((((t0.c0)OR(t0.c0)))AND(t0.c2)))OR(x'')))AND(t0.c1)))|((t0.c2 IN ())))))) UNION ALL SELECT ALL t0.c0, t0.c1, t0.c2 FROM vt0, t0 WHERE (((((((((((((t0.c0)OR(t0.c0)))AND(t0.c2)))OR(x'')))AND(t0.c1)))|((t0.c2 IN ())))) ISNULL));
SELECT t0.c0, t0.c1, t0.c2 FROM vt0, t0;
SELECT DISTINCT t0.c0, t0.c2 FROM t0;
SELECT DISTINCT t0.c0, t0.c2 FROM t0 WHERE (1.775221969E9) UNION SELECT DISTINCT t0.c0, t0.c2 FROM t0 WHERE ((NOT (1.775221969E9))) UNION SELECT DISTINCT t0.c0, t0.c2 FROM t0 WHERE (((1.775221969E9) ISNULL));
SELECT DISTINCT t0.c0, t0.c2 FROM t0;
SELECT ALL rt1.c1, rt1.c0, t0.c0 FROM t0, rt1 GROUP BY rt1.c1, rt1.c0, t0.c0;
SELECT ALL rt1.c1, rt1.c0, t0.c0 FROM t0, rt1 WHERE (TIME(CASE rt1.c0  WHEN rt1.c1 THEN rt1.c0 END, (((rt1.c1))>((NULL))), (- (rt1.c1)))) GROUP BY rt1.c1, rt1.c0, t0.c0 UNION SELECT ALL rt1.c1, rt1.c0, t0.c0 FROM t0, rt1 WHERE ((NOT (TIME(CASE rt1.c0  WHEN rt1.c1 THEN rt1.c0 END, (((rt1.c1))>((NULL))), (- (rt1.c1)))))) GROUP BY rt1.c1, rt1.c0, t0.c0 UNION SELECT rt1.c1, rt1.c0, t0.c0 FROM t0, rt1 WHERE (((TIME(CASE rt1.c0  WHEN rt1.c1 THEN rt1.c0 END, (((rt1.c1))>((NULL))), (- (rt1.c1)))) ISNULL)) GROUP BY rt1.c1, rt1.c0, t0.c0;
SELECT ALL rt1.c1, rt1.c0, t0.c0 FROM t0, rt1 GROUP BY rt1.c1, rt1.c0, t0.c0;
SELECT ALL t0.c0, v0.c1, rt1.c1, v0.c2, rt1.c2, t0.c2, v0.c0, rt1.c0, vt0.c0, t0.c1 FROM vt0, v0, rt1, t0 GROUP BY t0.c0, v0.c1, rt1.c1, v0.c2, rt1.c2, t0.c2, v0.c0, rt1.c0, vt0.c0, t0.c1;
SELECT ALL t0.c0, v0.c1, rt1.c1, v0.c2, rt1.c2, t0.c2, v0.c0, rt1.c0, vt0.c0, t0.c1 FROM vt0, v0, rt1, t0 GROUP BY t0.c0, v0.c1, rt1.c1, v0.c2, rt1.c2, t0.c2, v0.c0, rt1.c0, vt0.c0, t0.c1 HAVING MAX(((MIN(MAX(MAX(COUNT(MAX(COUNT(MIN(TOTAL(AVG(COUNT(*)))))))))))OR(COUNT(*)))) UNION ALL SELECT ALL t0.c0, v0.c1, rt1.c1, v0.c2, rt1.c2, t0.c2, v0.c0, rt1.c0, vt0.c0, t0.c1 FROM vt0, v0, rt1, t0 GROUP BY t0.c0, v0.c1, rt1.c1, v0.c2, rt1.c2, t0.c2, v0.c0, rt1.c0, vt0.c0, t0.c1 HAVING (NOT (MAX(((MIN(MAX(MAX(COUNT(MAX(COUNT(MIN(TOTAL(AVG(COUNT(*)))))))))))OR(COUNT(*)))))) UNION ALL SELECT ALL t0.c0, v0.c1, rt1.c1, v0.c2, rt1.c2, t0.c2, v0.c0, rt1.c0, vt0.c0, t0.c1 FROM vt0, v0, rt1, t0 GROUP BY t0.c0, v0.c1, rt1.c1, v0.c2, rt1.c2, t0.c2, v0.c0, rt1.c0, vt0.c0, t0.c1 HAVING ((MAX(((MIN(MAX(MAX(COUNT(MAX(COUNT(MIN(TOTAL(AVG(COUNT(*)))))))))))OR(COUNT(*))))) ISNULL);
SELECT ALL * FROM vt0;
SELECT * FROM vt0 WHERE ((vt0.c0 IN (vt0.c0)) COLLATE BINARY) UNION ALL SELECT * FROM vt0 WHERE ((NOT ((vt0.c0 IN (vt0.c0)) COLLATE BINARY))) UNION ALL SELECT ALL * FROM vt0 WHERE ((((vt0.c0 IN (vt0.c0)) COLLATE BINARY) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT * FROM v0 INNER JOIN t0 ON ((1.847802339E9)&((- ('676826065')))) RIGHT OUTER JOIN vt0 ON ((CAST(133243668 AS INTEGER)) ISNULL);
SELECT DISTINCT * FROM v0 INNER JOIN t0 ON ((1.847802339E9)&((- ('676826065')))) RIGHT OUTER JOIN vt0 ON ((CAST(133243668 AS INTEGER)) ISNULL) WHERE (((((((((v0.c2)AND(v0.c1)))OR(t0.c0)))AND(((v0.c2) NOT BETWEEN (t0.c2) AND (v0.c1)))))OR((- (t0.c0))))) UNION SELECT DISTINCT * FROM v0 INNER JOIN t0 ON ((1.847802339E9)&((- ('676826065')))) RIGHT OUTER JOIN vt0 ON ((CAST(133243668 AS INTEGER)) ISNULL) WHERE ((NOT (((((((((v0.c2)AND(v0.c1)))OR(t0.c0)))AND(((v0.c2) NOT BETWEEN (t0.c2) AND (v0.c1)))))OR((- (t0.c0))))))) UNION SELECT DISTINCT * FROM v0 INNER JOIN t0 ON ((1.847802339E9)&((- ('676826065')))) RIGHT OUTER JOIN vt0 ON ((CAST(133243668 AS INTEGER)) ISNULL) WHERE (((((((((((v0.c2)AND(v0.c1)))OR(t0.c0)))AND(((v0.c2) NOT BETWEEN (t0.c2) AND (v0.c1)))))OR((- (t0.c0))))) ISNULL));
SELECT DISTINCT * FROM v0 INNER JOIN t0 ON ((1.847802339E9)&((- ('676826065')))) RIGHT OUTER JOIN vt0 ON ((CAST(133243668 AS INTEGER)) ISNULL);
SELECT rt1.c1 FROM rt1 FULL OUTER JOIN vt0 ON CAST(LOWER(vt0.c0) AS BLOB) GROUP BY rt1.c1;
SELECT ALL rt1.c1 FROM rt1 FULL OUTER JOIN vt0 ON CAST(LOWER(vt0.c0) AS BLOB) WHERE (((((vt0.c0)*(rt1.c0)))+(((rt1.c1)%(rt1.c1))))) GROUP BY rt1.c1 UNION SELECT rt1.c1 FROM rt1 FULL OUTER JOIN vt0 ON CAST(LOWER(vt0.c0) AS BLOB) WHERE ((NOT (((((vt0.c0)*(rt1.c0)))+(((rt1.c1)%(rt1.c1))))))) GROUP BY rt1.c1 UNION SELECT rt1.c1 FROM rt1 FULL OUTER JOIN vt0 ON CAST(LOWER(vt0.c0) AS BLOB) WHERE (((((((vt0.c0)*(rt1.c0)))+(((rt1.c1)%(rt1.c1))))) ISNULL)) GROUP BY rt1.c1;
SELECT rt1.c1 FROM rt1 FULL OUTER JOIN vt0 ON CAST(LOWER(vt0.c0) AS BLOB) GROUP BY rt1.c1;
SELECT t0.c0, t0.c1 FROM t0 GROUP BY t0.c0, t0.c1;
SELECT t0.c0, t0.c1 FROM t0 GROUP BY t0.c0, t0.c1 HAVING COUNT(*) UNION ALL SELECT t0.c0, t0.c1 FROM t0 GROUP BY t0.c0, t0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL t0.c0, t0.c1 FROM t0 GROUP BY t0.c0, t0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT t0.c0, t0.c1 FROM t0 GROUP BY t0.c0, t0.c1;
SELECT t0.c0, t0.c1 FROM t0 GROUP BY t0.c0, t0.c1 HAVING COUNT(*) UNION ALL SELECT t0.c0, t0.c1 FROM t0 GROUP BY t0.c0, t0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL t0.c0, t0.c1 FROM t0 GROUP BY t0.c0, t0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT t0.c0, t0.c1 FROM t0 GROUP BY t0.c0, t0.c1;
SELECT ALL SUM((('674315141') BETWEEN (((rt1.c1) NOT BETWEEN (t0.c2) AND (t0.c1))) AND ((((rt1.c2))<((t0.c1)))))) FROM rt1, t0 ORDER BY CAST(HEX('1102188757') AS NUMERIC)  NULLS LAST;
SELECT * FROM v0, t0, vt0;
SELECT * FROM v0, t0, vt0 WHERE (x'') UNION ALL SELECT * FROM v0, t0, vt0 WHERE ((NOT (x''))) UNION ALL SELECT * FROM v0, t0, vt0 WHERE (((x'') ISNULL));
SELECT * FROM v0, t0, vt0;
SELECT DISTINCT * FROM v0, t0, vt0, rt1;
SELECT DISTINCT * FROM v0, t0, vt0, rt1 WHERE (IFNULL(CAST(rt1.c1 AS REAL), ((v0.c0)/(t0.c1)))) UNION SELECT DISTINCT * FROM v0, t0, vt0, rt1 WHERE ((NOT (IFNULL(CAST(rt1.c1 AS REAL), ((v0.c0)/(t0.c1)))))) UNION SELECT DISTINCT * FROM v0, t0, vt0, rt1 WHERE (((IFNULL(CAST(rt1.c1 AS REAL), ((v0.c0)/(t0.c1)))) ISNULL));
SELECT DISTINCT * FROM v0, t0, vt0, rt1;
SELECT ALL v0.c1, t0.c0, vt0.c0, t0.c1 FROM t0, v0, vt0 GROUP BY v0.c1, t0.c0, vt0.c0, t0.c1;
SELECT v0.c1, t0.c0, vt0.c0, t0.c1 FROM t0, v0, vt0 WHERE (((((v0.c2) IS FALSE)) NOT BETWEEN ((t0.c0 IN (t0.c0))) AND (((((((((t0.c1)OR(t0.c1)))OR(v0.c1)))OR(t0.c2)))OR(x''))))) GROUP BY v0.c1, t0.c0, vt0.c0, t0.c1 UNION SELECT ALL v0.c1, t0.c0, vt0.c0, t0.c1 FROM t0 NOT INDEXED, v0, vt0 WHERE ((NOT (((((v0.c2) IS FALSE)) NOT BETWEEN ((t0.c0 IN (t0.c0))) AND (((((((((t0.c1)OR(t0.c1)))OR(v0.c1)))OR(t0.c2)))OR(x''))))))) GROUP BY v0.c1, t0.c0, vt0.c0, t0.c1 UNION SELECT v0.c1, t0.c0, vt0.c0, t0.c1 FROM t0, v0, vt0 WHERE (((((((v0.c2) IS FALSE)) NOT BETWEEN ((t0.c0 IN (t0.c0))) AND (((((((((t0.c1)OR(t0.c1)))OR(v0.c1)))OR(t0.c2)))OR(x''))))) ISNULL)) GROUP BY v0.c1, t0.c0, vt0.c0, t0.c1;
SELECT ALL v0.c1, t0.c0, vt0.c0, t0.c1 FROM t0, v0, vt0 GROUP BY v0.c1, t0.c0, vt0.c0, t0.c1;
SELECT ALL v0.c1 FROM v0 LEFT OUTER JOIN vt0 ON (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((((v0.c0) NOT NULL)))) GROUP BY v0.c1;
SELECT v0.c1 FROM v0 LEFT OUTER JOIN vt0 ON (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((((v0.c0) NOT NULL)))) GROUP BY v0.c1 HAVING NULL UNION ALL SELECT ALL v0.c1 FROM v0 LEFT OUTER JOIN vt0 ON (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((((v0.c0) NOT NULL)))) GROUP BY v0.c1 HAVING (NOT (NULL)) UNION ALL SELECT v0.c1 FROM v0 LEFT OUTER JOIN vt0 ON (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((((v0.c0) NOT NULL)))) GROUP BY v0.c1 HAVING ((NULL) ISNULL);
SELECT ALL v0.c1 FROM v0 LEFT OUTER JOIN vt0 ON (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((((v0.c0) NOT NULL)))) GROUP BY v0.c1;
SELECT v0.c1 FROM v0 LEFT OUTER JOIN vt0 ON (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((((v0.c0) NOT NULL)))) GROUP BY v0.c1 HAVING NULL UNION ALL SELECT ALL v0.c1 FROM v0 LEFT OUTER JOIN vt0 ON (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((((v0.c0) NOT NULL)))) GROUP BY v0.c1 HAVING (NOT (NULL)) UNION ALL SELECT v0.c1 FROM v0 LEFT OUTER JOIN vt0 ON (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((((v0.c0) NOT NULL)))) GROUP BY v0.c1 HAVING ((NULL) ISNULL);
SELECT ALL v0.c1 FROM v0 LEFT OUTER JOIN vt0 ON (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((((v0.c0) NOT NULL)))) GROUP BY v0.c1;
SELECT t0.c1, t0.c0 FROM t0;
SELECT t0.c1, t0.c0 FROM t0 WHERE (((((t0.c2) NOT BETWEEN (t0.c0) AND (t0.c1)))<(((t0.c1)||(t0.c2))))) UNION ALL SELECT t0.c1, t0.c0 FROM t0 WHERE ((NOT (((((t0.c2) NOT BETWEEN (t0.c0) AND (t0.c1)))<(((t0.c1)||(t0.c2))))))) UNION ALL SELECT ALL t0.c1, t0.c0 FROM t0 WHERE (((((((t0.c2) NOT BETWEEN (t0.c0) AND (t0.c1)))<(((t0.c1)||(t0.c2))))) ISNULL));
SELECT t0.c1, t0.c0 FROM t0;
SELECT DISTINCT * FROM rt1, v0, vt0;
SELECT DISTINCT * FROM rt1, v0, vt0 WHERE ((NOT (CASE v0.c1  WHEN v0.c2 THEN vt0.c0 END))) UNION SELECT DISTINCT * FROM rt1, v0, vt0 WHERE ((NOT ((NOT (CASE v0.c1  WHEN v0.c2 THEN vt0.c0 END))))) UNION SELECT DISTINCT * FROM rt1, v0, vt0 WHERE ((((NOT (CASE v0.c1  WHEN v0.c2 THEN vt0.c0 END))) ISNULL));
SELECT DISTINCT * FROM rt1, v0, vt0;
SELECT t0.c2 FROM t0, vt0 GROUP BY t0.c2;
SELECT t0.c2 FROM t0, vt0 WHERE ((((((((((NOT (t0.c1)))AND('251651322')))AND((((vt0.c0))!=((t0.c1))))))AND(((((vt0.c0)AND(vt0.c0)))AND(t0.c0)))))OR((((vt0.c0, 0.2268544852810329, t0.c1))!=((t0.c1, t0.c2, t0.c1)))))) GROUP BY t0.c2 UNION SELECT ALL t0.c2 FROM t0, vt0 WHERE ((NOT ((((((((((NOT (t0.c1)))AND('251651322')))AND((((vt0.c0))<>((t0.c1))))))AND(((((vt0.c0)AND(vt0.c0)))AND(t0.c0)))))OR((((vt0.c0, 0.2268544852810329, t0.c1))!=((t0.c1, t0.c2, t0.c1)))))))) GROUP BY t0.c2 UNION SELECT ALL t0.c2 FROM t0, vt0 WHERE ((((((((((((NOT (t0.c1)))AND('251651322')))AND((((vt0.c0))<>((t0.c1))))))AND(((((vt0.c0)AND(vt0.c0)))AND(t0.c0)))))OR((((vt0.c0, 0.2268544852810329, t0.c1))!=((t0.c1, t0.c2, t0.c1)))))) ISNULL)) GROUP BY t0.c2;
SELECT t0.c2 FROM t0, vt0 GROUP BY t0.c2;
SELECT t0.c2, v0.c1, v0.c2, rt1.c2, rt1.c0, t0.c0, t0.c1 FROM rt1, t0, v0 GROUP BY t0.c2, v0.c1, v0.c2, rt1.c2, rt1.c0, t0.c0, t0.c1;
SELECT ALL t0.c2, v0.c1, v0.c2, rt1.c2, rt1.c0, t0.c0, t0.c1 FROM rt1, t0, v0 GROUP BY t0.c2, v0.c1, v0.c2, rt1.c2, rt1.c0, t0.c0, t0.c1 HAVING rt1.c1 UNION ALL SELECT t0.c2, v0.c1, v0.c2, rt1.c2, rt1.c0, t0.c0, t0.c1 FROM rt1, t0, v0 GROUP BY t0.c2, v0.c1, v0.c2, rt1.c2, rt1.c0, t0.c0, t0.c1 HAVING (NOT (rt1.c1)) UNION ALL SELECT t0.c2, v0.c1, v0.c2, rt1.c2, rt1.c0, t0.c0, t0.c1 FROM rt1, t0, v0 GROUP BY t0.c2, v0.c1, v0.c2, rt1.c2, rt1.c0, t0.c0, t0.c1 HAVING ((rt1.c1) ISNULL);
SELECT t0.c2, v0.c1, v0.c2, rt1.c2, rt1.c0, t0.c0, t0.c1 FROM rt1, t0, v0 GROUP BY t0.c2, v0.c1, v0.c2, rt1.c2, rt1.c0, t0.c0, t0.c1;
SELECT ALL t0.c2, v0.c1, v0.c2, rt1.c2, rt1.c0, t0.c0, t0.c1 FROM rt1, t0, v0 GROUP BY t0.c2, v0.c1, v0.c2, rt1.c2, rt1.c0, t0.c0, t0.c1 HAVING rt1.c1 UNION ALL SELECT t0.c2, v0.c1, v0.c2, rt1.c2, rt1.c0, t0.c0, t0.c1 FROM rt1, t0, v0 GROUP BY t0.c2, v0.c1, v0.c2, rt1.c2, rt1.c0, t0.c0, t0.c1 HAVING (NOT (rt1.c1)) UNION ALL SELECT t0.c2, v0.c1, v0.c2, rt1.c2, rt1.c0, t0.c0, t0.c1 FROM rt1, t0, v0 GROUP BY t0.c2, v0.c1, v0.c2, rt1.c2, rt1.c0, t0.c0, t0.c1 HAVING ((rt1.c1) ISNULL);
SELECT t0.c2, v0.c1, v0.c2, rt1.c2, rt1.c0, t0.c0, t0.c1 FROM rt1, t0, v0 GROUP BY t0.c2, v0.c1, v0.c2, rt1.c2, rt1.c0, t0.c0, t0.c1;
SELECT v0.c2, rt1.c0, v0.c0, rt1.c1, vt0.c0 FROM v0 NOT INDEXED LEFT OUTER JOIN rt1 ON v0.c0 RIGHT OUTER JOIN t0 ON ((((t0.c0) ISNULL)) IS TRUE) RIGHT OUTER JOIN vt0 ON CAST(((t0.c0) IS FALSE) AS BLOB);
SELECT ALL v0.c2, rt1.c0, v0.c0, rt1.c1, vt0.c0 FROM v0 LEFT OUTER JOIN rt1 ON v0.c0 RIGHT OUTER JOIN t0 ON ((((t0.c0) ISNULL)) IS TRUE) RIGHT OUTER JOIN vt0 ON CAST(((t0.c0) IS FALSE) AS BLOB) WHERE ((((((t0.c0 IN ()))AND((- (v0.c0)))))OR(((v0.c0)>>(t0.c1))))) UNION ALL SELECT ALL v0.c2, rt1.c0, v0.c0, rt1.c1, vt0.c0 FROM v0 LEFT OUTER JOIN rt1 ON v0.c0 RIGHT OUTER JOIN t0 ON ((((t0.c0) ISNULL)) IS TRUE) RIGHT OUTER JOIN vt0 ON CAST(((t0.c0) IS FALSE) AS BLOB) WHERE ((NOT ((((((t0.c0 IN ()))AND((- (v0.c0)))))OR(((v0.c0)>>(t0.c1))))))) UNION ALL SELECT v0.c2, rt1.c0, v0.c0, rt1.c1, vt0.c0 FROM v0 LEFT OUTER JOIN rt1 ON v0.c0 RIGHT OUTER JOIN t0 ON ((((t0.c0) ISNULL)) IS TRUE) RIGHT OUTER JOIN vt0 ON CAST(((t0.c0) IS FALSE) AS BLOB) WHERE ((((((((t0.c0 IN ()))AND((- (v0.c0)))))OR(((v0.c0)>>(t0.c1))))) ISNULL));
SELECT v0.c2, rt1.c0, v0.c0, rt1.c1, vt0.c0 FROM v0 NOT INDEXED LEFT OUTER JOIN rt1 ON v0.c0 RIGHT OUTER JOIN t0 ON ((((t0.c0) ISNULL)) IS TRUE) RIGHT OUTER JOIN vt0 ON CAST(((t0.c0) IS FALSE) AS BLOB);
SELECT DISTINCT vt0.c0, v0.c2 FROM v0 RIGHT OUTER JOIN vt0 ON ((((((vt0.c0)AND(v0.c1)))OR(v0.c2)))<=(((((v0.c2)OR(v0.c0)))OR(vt0.c0))));
SELECT DISTINCT vt0.c0, v0.c2 FROM v0 RIGHT OUTER JOIN vt0 ON ((((((vt0.c0)AND(v0.c1)))OR(v0.c2)))<=(((((v0.c2)OR(v0.c0)))OR(vt0.c0)))) WHERE (((((UNLIKELY(v0.c0))AND(v0.c2)))OR(v0.c2 COLLATE BINARY))) UNION SELECT DISTINCT vt0.c0, v0.c2 FROM v0 RIGHT OUTER JOIN vt0 ON ((((((vt0.c0)AND(v0.c1)))OR(v0.c2)))<=(((((v0.c2)OR(v0.c0)))OR(vt0.c0)))) WHERE ((NOT (((((UNLIKELY(v0.c0))AND(v0.c2)))OR(v0.c2 COLLATE BINARY))))) UNION SELECT DISTINCT vt0.c0, v0.c2 FROM v0 RIGHT OUTER JOIN vt0 ON ((((((vt0.c0)AND(v0.c1)))OR(v0.c2)))<=(((((v0.c2)OR(v0.c0)))OR(vt0.c0)))) WHERE (((((((UNLIKELY(v0.c0))AND(v0.c2)))OR(v0.c2 COLLATE BINARY))) ISNULL));
SELECT DISTINCT vt0.c0, v0.c2 FROM v0 RIGHT OUTER JOIN vt0 ON ((((((vt0.c0)AND(v0.c1)))OR(v0.c2)))<=(((((v0.c2)OR(v0.c0)))OR(vt0.c0))));
SELECT rt1.c0, t0.c1, rt1.c1 FROM t0, rt1, v0, vt0 GROUP BY rt1.c0, t0.c1, rt1.c1;
SELECT ALL rt1.c0, t0.c1, rt1.c1 FROM t0, rt1, v0, vt0 WHERE (CASE WHEN vt0.c0 THEN v0.c0 WHEN v0.c1 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c0 END COLLATE BINARY) GROUP BY rt1.c0, t0.c1, rt1.c1 UNION SELECT ALL rt1.c0, t0.c1, rt1.c1 FROM t0, rt1, v0, vt0 WHERE ((NOT (CASE WHEN vt0.c0 THEN v0.c0 WHEN v0.c1 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c0 END COLLATE BINARY))) GROUP BY rt1.c0, t0.c1, rt1.c1 UNION SELECT ALL rt1.c0, t0.c1, rt1.c1 FROM t0, rt1, v0, vt0 WHERE (((CASE WHEN vt0.c0 THEN v0.c0 WHEN v0.c1 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c0 END COLLATE BINARY) ISNULL)) GROUP BY rt1.c0, t0.c1, rt1.c1;
SELECT rt1.c0, t0.c1, rt1.c1 FROM t0, rt1, v0, vt0 GROUP BY rt1.c0, t0.c1, rt1.c1;
SELECT t0.c1, rt1.c0, rt1.c2 FROM rt1, t0 GROUP BY t0.c1, rt1.c0, rt1.c2;
SELECT ALL t0.c1, rt1.c0, rt1.c2 FROM rt1, t0 GROUP BY t0.c1, rt1.c0, rt1.c2 HAVING MIN(AVG(rt1.c0)) UNION ALL SELECT t0.c1, rt1.c0, rt1.c2 FROM rt1, t0 GROUP BY t0.c1, rt1.c0, rt1.c2 HAVING (NOT (MIN(AVG(rt1.c0)))) UNION ALL SELECT t0.c1, rt1.c0, rt1.c2 FROM rt1, t0 GROUP BY t0.c1, rt1.c0, rt1.c2 HAVING ((MIN(AVG(rt1.c0))) ISNULL);
SELECT * FROM rt1;
SELECT * FROM rt1 WHERE (CAST((((rt1.c1, rt1.c0, rt1.c0, rt1.c1, rt1.c0))>((rt1.c1, -762544667, rt1.c0, rt1.c0, rt1.c1))) AS NUMERIC)) UNION ALL SELECT ALL * FROM rt1 WHERE ((NOT (CAST((((rt1.c1, rt1.c0, rt1.c0, rt1.c1, rt1.c0))>((rt1.c1, -762544667, rt1.c0, rt1.c0, rt1.c1))) AS NUMERIC)))) UNION ALL SELECT * FROM rt1 WHERE (((CAST((((rt1.c1, rt1.c0, rt1.c0, rt1.c1, rt1.c0))>((rt1.c1, -762544667, rt1.c0, rt1.c0, rt1.c1))) AS NUMERIC)) ISNULL));
SELECT * FROM rt1;
SELECT DISTINCT * FROM vt0, v0, rt1;
SELECT DISTINCT * FROM vt0, v0, rt1 WHERE (vt0.c0) UNION SELECT DISTINCT * FROM vt0, v0, rt1 WHERE ((NOT (vt0.c0))) UNION SELECT DISTINCT * FROM vt0, v0, rt1 WHERE (((vt0.c0) ISNULL));
SELECT DISTINCT * FROM vt0, v0, rt1;
SELECT ALL v0.c1, v0.c2, v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c1, v0.c2, v0.c0, vt0.c0;
SELECT ALL v0.c1, v0.c2, v0.c0, vt0.c0 FROM v0, vt0 WHERE ((((((v0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))<(((v0.c2)*(v0.c0))))) GROUP BY v0.c1, v0.c2, v0.c0, vt0.c0 UNION SELECT ALL v0.c1, v0.c2, v0.c0, vt0.c0 FROM v0, vt0 WHERE ((NOT ((((((v0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))<(((v0.c2)*(v0.c0))))))) GROUP BY v0.c1, v0.c2, v0.c0, vt0.c0 UNION SELECT ALL v0.c1, v0.c2, v0.c0, vt0.c0 FROM v0, vt0 WHERE ((((((((v0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))<(((v0.c2)*(v0.c0))))) ISNULL)) GROUP BY v0.c1, v0.c2, v0.c0, vt0.c0;
SELECT ALL v0.c1, v0.c2, v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c1, v0.c2, v0.c0, vt0.c0;
SELECT ALL t0.c2, rt1.c2, rt1.c0, v0.c2, v0.c1, rt1.c1, v0.c0, t0.c1, t0.c0 FROM rt1, v0, t0 GROUP BY t0.c2, rt1.c2, rt1.c0, v0.c2, v0.c1, rt1.c1, v0.c0, t0.c1, t0.c0;
SELECT ALL t0.c2, rt1.c2, rt1.c0, v0.c2, v0.c1, rt1.c1, v0.c0, t0.c1, t0.c0 FROM rt1, v0, t0 GROUP BY t0.c2, rt1.c2, rt1.c0, v0.c2, v0.c1, rt1.c1, v0.c0, t0.c1, t0.c0 HAVING ((GROUP_CONCAT(v0.c0)) NOT BETWEEN (COUNT(v0.c0)) AND ((v0.c2 IN ()))) UNION ALL SELECT ALL t0.c2, rt1.c2, rt1.c0, v0.c2, v0.c1, rt1.c1, v0.c0, t0.c1, t0.c0 FROM rt1, v0, t0 GROUP BY t0.c2, rt1.c2, rt1.c0, v0.c2, v0.c1, rt1.c1, v0.c0, t0.c1, t0.c0 HAVING (NOT (((GROUP_CONCAT(v0.c0)) NOT BETWEEN (COUNT(v0.c0)) AND ((v0.c2 IN ()))))) UNION ALL SELECT t0.c2, rt1.c2, rt1.c0, v0.c2, v0.c1, rt1.c1, v0.c0, t0.c1, t0.c0 FROM rt1, v0, t0 GROUP BY t0.c2, rt1.c2, rt1.c0, v0.c2, v0.c1, rt1.c1, v0.c0, t0.c1, t0.c0 HAVING ((((GROUP_CONCAT(v0.c0)) NOT BETWEEN (COUNT(v0.c0)) AND ((v0.c2 IN ())))) ISNULL);
SELECT ALL t0.c2, rt1.c2, rt1.c0, v0.c2, v0.c1, rt1.c1, v0.c0, t0.c1, t0.c0 FROM rt1, v0, t0 GROUP BY t0.c2, rt1.c2, rt1.c0, v0.c2, v0.c1, rt1.c1, v0.c0, t0.c1, t0.c0;
SELECT ALL t0.c2, rt1.c2, rt1.c0, v0.c2, v0.c1, rt1.c1, v0.c0, t0.c1, t0.c0 FROM rt1, v0, t0 GROUP BY t0.c2, rt1.c2, rt1.c0, v0.c2, v0.c1, rt1.c1, v0.c0, t0.c1, t0.c0 HAVING ((GROUP_CONCAT(v0.c0)) NOT BETWEEN (COUNT(v0.c0)) AND ((v0.c2 IN ()))) UNION ALL SELECT ALL t0.c2, rt1.c2, rt1.c0, v0.c2, v0.c1, rt1.c1, v0.c0, t0.c1, t0.c0 FROM rt1, v0, t0 GROUP BY t0.c2, rt1.c2, rt1.c0, v0.c2, v0.c1, rt1.c1, v0.c0, t0.c1, t0.c0 HAVING (NOT (((GROUP_CONCAT(v0.c0)) NOT BETWEEN (COUNT(v0.c0)) AND ((v0.c2 IN ()))))) UNION ALL SELECT t0.c2, rt1.c2, rt1.c0, v0.c2, v0.c1, rt1.c1, v0.c0, t0.c1, t0.c0 FROM rt1, v0, t0 GROUP BY t0.c2, rt1.c2, rt1.c0, v0.c2, v0.c1, rt1.c1, v0.c0, t0.c1, t0.c0 HAVING ((((GROUP_CONCAT(v0.c0)) NOT BETWEEN (COUNT(v0.c0)) AND ((v0.c2 IN ())))) ISNULL);
SELECT ALL t0.c2, rt1.c2, rt1.c0, v0.c2, v0.c1, rt1.c1, v0.c0, t0.c1, t0.c0 FROM rt1, v0, t0 GROUP BY t0.c2, rt1.c2, rt1.c0, v0.c2, v0.c1, rt1.c1, v0.c0, t0.c1, t0.c0;
SELECT t0.c0, t0.c1, v0.c2, v0.c1 FROM v0, t0;
SELECT t0.c0, t0.c1, v0.c2, v0.c1 FROM v0, t0 WHERE (0.7041132470595405) UNION ALL SELECT ALL t0.c0, t0.c1, v0.c2, v0.c1 FROM v0, t0 WHERE ((NOT (0.7041132470595405))) UNION ALL SELECT t0.c0, t0.c1, v0.c2, v0.c1 FROM v0, t0 WHERE (((0.7041132470595405) ISNULL));
SELECT t0.c0, t0.c1, v0.c2, v0.c1 FROM v0, t0;
SELECT DISTINCT t0.c0, t0.c1 FROM t0;
SELECT DISTINCT t0.c0, t0.c1 FROM t0 WHERE ((((t0.c0 COLLATE NOCASE, ((((t0.c2)OR(t0.c0)))OR(t0.c2)), t0.c0))>((((t0.c1) BETWEEN (0.09718761775107698) AND (t0.c1)), 0.04689764422444831, ((t0.c2)IS NOT(t0.c1)))))) UNION SELECT DISTINCT t0.c0, t0.c1 FROM t0 WHERE ((NOT ((((t0.c0 COLLATE NOCASE, ((((t0.c2)OR(t0.c0)))OR(t0.c2)), t0.c0))>((((t0.c1) BETWEEN (0.09718761775107698) AND (t0.c1)), 0.04689764422444831, ((t0.c2)IS NOT(t0.c1)))))))) UNION SELECT DISTINCT t0.c0, t0.c1 FROM t0 WHERE ((((((t0.c0 COLLATE NOCASE, ((((t0.c2)OR(t0.c0)))OR(t0.c2)), t0.c0))>((((t0.c1) BETWEEN (0.09718761775107698) AND (t0.c1)), 0.04689764422444831, ((t0.c2)IS NOT(t0.c1)))))) ISNULL));
SELECT DISTINCT t0.c0, t0.c1 FROM t0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (CAST(((vt0.c0)>>(NULL)) AS REAL)) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (CAST(((vt0.c0)>>(NULL)) AS REAL)))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((CAST(((vt0.c0)>>(NULL)) AS REAL)) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING CAST(((TOTAL(MAX('-訙')))&(SUM(TOTAL(vt0.c0)))) AS BLOB) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (CAST(((TOTAL(MAX('-訙')))&(SUM(TOTAL(vt0.c0)))) AS BLOB))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((CAST(((TOTAL(MAX('-訙')))&(SUM(TOTAL(vt0.c0)))) AS BLOB)) ISNULL);
SELECT * FROM v0, rt1, t0, vt0;
SELECT ALL * FROM v0, rt1, t0, vt0 WHERE (CASE (v0.c2 IN ())  WHEN ((t0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN (((v0.c0))<=((rt1.c1))) ELSE (((v0.c0)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c0))) END) UNION ALL SELECT ALL * FROM v0, rt1, t0, vt0 WHERE ((NOT (CASE (v0.c2 IN ())  WHEN ((t0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN (((v0.c0))<=((rt1.c1))) ELSE (((v0.c0)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c0))) END))) UNION ALL SELECT * FROM v0, rt1, t0, vt0 WHERE (((CASE (v0.c2 IN ())  WHEN ((t0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN (((v0.c0))<=((rt1.c1))) ELSE (((v0.c0)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c0))) END) ISNULL));
SELECT * FROM v0, rt1, t0, vt0;
SELECT DISTINCT * FROM t0, rt1, vt0, v0;
SELECT DISTINCT * FROM t0, rt1, vt0, v0 WHERE ((~ (((v0.c1)<<(t0.c0))))) UNION SELECT DISTINCT * FROM t0, rt1, vt0, v0 WHERE ((NOT ((~ (((v0.c1)<<(t0.c0))))))) UNION SELECT DISTINCT * FROM t0, rt1, vt0, v0 WHERE ((((~ (((v0.c1)<<(t0.c0))))) ISNULL));
SELECT DISTINCT * FROM t0, rt1, vt0, v0;
SELECT vt0.c0, v0.c1 FROM t0, vt0, v0 GROUP BY vt0.c0, v0.c1;
SELECT vt0.c0, v0.c1 FROM t0, vt0, v0 WHERE ((((t0.c0 IN ())) IS FALSE)) GROUP BY vt0.c0, v0.c1 UNION SELECT vt0.c0, v0.c1 FROM t0, vt0, v0 WHERE ((NOT ((((t0.c0 IN ())) IS FALSE)))) GROUP BY vt0.c0, v0.c1 UNION SELECT vt0.c0, v0.c1 FROM t0, vt0, v0 WHERE ((((((t0.c0 IN ())) IS FALSE)) ISNULL)) GROUP BY vt0.c0, v0.c1;
SELECT vt0.c0, v0.c1 FROM t0, vt0, v0 GROUP BY vt0.c0, v0.c1;
SELECT t0.c0, t0.c2, t0.c1 FROM t0 GROUP BY t0.c0, t0.c2, t0.c1;
SELECT t0.c0, t0.c2, t0.c1 FROM t0 GROUP BY t0.c0, t0.c2, t0.c1 HAVING AVG(MIN(SUM(t0.c0))) UNION ALL SELECT t0.c0, t0.c2, t0.c1 FROM t0 GROUP BY t0.c0, t0.c2, t0.c1 HAVING (NOT (AVG(MIN(SUM(t0.c0))))) UNION ALL SELECT t0.c0, t0.c2, t0.c1 FROM t0 GROUP BY t0.c0, t0.c2, t0.c1 HAVING ((AVG(MIN(SUM(t0.c0)))) ISNULL);
SELECT TOTAL(((((vt0.c0) IS TRUE))||(CAST(vt0.c0 AS REAL)))) FROM vt0;
SELECT * FROM vt0, v0, t0;
SELECT ALL * FROM vt0, v0, t0 WHERE (CAST((NOT (v0.c2)) AS INTEGER)) UNION ALL SELECT * FROM vt0, v0, t0 WHERE ((NOT (CAST((NOT (v0.c2)) AS INTEGER)))) UNION ALL SELECT ALL * FROM vt0, v0, t0 WHERE (((CAST((NOT (v0.c2)) AS INTEGER)) ISNULL));
SELECT * FROM vt0, v0, t0;
SELECT DISTINCT * FROM t0, rt1, vt0, v0;
SELECT DISTINCT * FROM t0, rt1, vt0, v0 WHERE (CASE CAST(rt1.c1 AS REAL)  WHEN CASE t0.c1  WHEN vt0.c0 THEN rt1.c0 WHEN vt0.c0 THEN v0.c2 WHEN t0.c1 THEN rt1.c2 END THEN (((t0.c1)) NOT BETWEEN ((v0.c1)) AND ((0.38871178283208196))) WHEN TRIM(vt0.c0) THEN ((v0.c1) ISNULL) WHEN vt0.c0 THEN v0.c2 WHEN ((((t0.c1)AND(t0.c0)))OR('974398713')) THEN (((t0.c2)) NOT BETWEEN ((v0.c0)) AND ((v0.c2))) WHEN CAST(rt1.c2 AS REAL) THEN ((t0.c2) ISNULL) ELSE vt0.c0 COLLATE RTRIM END) UNION SELECT DISTINCT * FROM t0, rt1, vt0, v0 WHERE ((NOT (CASE CAST(rt1.c1 AS REAL)  WHEN CASE t0.c1  WHEN vt0.c0 THEN rt1.c0 WHEN vt0.c0 THEN v0.c2 WHEN t0.c1 THEN rt1.c2 END THEN (((t0.c1)) NOT BETWEEN ((v0.c1)) AND ((0.38871178283208196))) WHEN TRIM(vt0.c0) THEN ((v0.c1) ISNULL) WHEN vt0.c0 THEN v0.c2 WHEN ((((t0.c1)AND(t0.c0)))OR('974398713')) THEN (((t0.c2)) NOT BETWEEN ((v0.c0)) AND ((v0.c2))) WHEN CAST(rt1.c2 AS REAL) THEN ((t0.c2) ISNULL) ELSE vt0.c0 COLLATE RTRIM END))) UNION SELECT DISTINCT * FROM t0, rt1, vt0, v0 WHERE (((CASE CAST(rt1.c1 AS REAL)  WHEN CASE t0.c1  WHEN vt0.c0 THEN rt1.c0 WHEN vt0.c0 THEN v0.c2 WHEN t0.c1 THEN rt1.c2 END THEN (((t0.c1)) NOT BETWEEN ((v0.c1)) AND ((0.38871178283208196))) WHEN TRIM(vt0.c0) THEN ((v0.c1) ISNULL) WHEN vt0.c0 THEN v0.c2 WHEN ((((t0.c1)AND(t0.c0)))OR('974398713')) THEN (((t0.c2)) NOT BETWEEN ((v0.c0)) AND ((v0.c2))) WHEN CAST(rt1.c2 AS REAL) THEN ((t0.c2) ISNULL) ELSE vt0.c0 COLLATE RTRIM END) ISNULL));
SELECT DISTINCT * FROM t0, rt1, vt0, v0;
SELECT ALL t0.c2, v0.c1, t0.c0 FROM v0, vt0 RIGHT OUTER JOIN t0 ON (((t0.c1)==(0.70051439221971)) IN ()) GROUP BY t0.c2, v0.c1, t0.c0;
SELECT t0.c2, v0.c1, t0.c0 FROM v0, vt0 RIGHT OUTER JOIN t0 ON (((t0.c1)=(0.70051439221971)) IN ()) WHERE (0.5282703405568646) GROUP BY t0.c2, v0.c1, t0.c0 UNION SELECT t0.c2, v0.c1, t0.c0 FROM v0, vt0 RIGHT OUTER JOIN t0 ON (((t0.c1)=(0.70051439221971)) IN ()) WHERE ((NOT (0.5282703405568646))) GROUP BY t0.c2, v0.c1, t0.c0 UNION SELECT t0.c2, v0.c1, t0.c0 FROM v0, vt0 RIGHT OUTER JOIN t0 ON (((t0.c1)==(0.70051439221971)) IN ()) WHERE (((0.5282703405568646) ISNULL)) GROUP BY t0.c2, v0.c1, t0.c0;
SELECT ALL t0.c2, v0.c1, t0.c0 FROM v0, vt0 RIGHT OUTER JOIN t0 ON (((t0.c1)==(0.70051439221971)) IN ()) GROUP BY t0.c2, v0.c1, t0.c0;
SELECT v0.c1, v0.c0, v0.c2 FROM v0 GROUP BY v0.c1, v0.c0, v0.c2;
SELECT ALL v0.c1, v0.c0, v0.c2 FROM v0 GROUP BY v0.c1, v0.c0, v0.c2 HAVING AVG(((v0.c2) IS FALSE)) UNION ALL SELECT ALL v0.c1, v0.c0, v0.c2 FROM v0 GROUP BY v0.c1, v0.c0, v0.c2 HAVING (NOT (AVG(((v0.c2) IS FALSE)))) UNION ALL SELECT ALL v0.c1, v0.c0, v0.c2 FROM v0 GROUP BY v0.c1, v0.c0, v0.c2 HAVING ((AVG(((v0.c2) IS FALSE))) ISNULL);
SELECT v0.c1, v0.c0, v0.c2 FROM v0 GROUP BY v0.c1, v0.c0, v0.c2;
SELECT ALL v0.c1, v0.c0, v0.c2 FROM v0 GROUP BY v0.c1, v0.c0, v0.c2 HAVING AVG(((v0.c2) IS FALSE)) UNION ALL SELECT ALL v0.c1, v0.c0, v0.c2 FROM v0 GROUP BY v0.c1, v0.c0, v0.c2 HAVING (NOT (AVG(((v0.c2) IS FALSE)))) UNION ALL SELECT ALL v0.c1, v0.c0, v0.c2 FROM v0 GROUP BY v0.c1, v0.c0, v0.c2 HAVING ((AVG(((v0.c2) IS FALSE))) ISNULL);
SELECT v0.c1, v0.c0, v0.c2 FROM v0 GROUP BY v0.c1, v0.c0, v0.c2;
SELECT ALL rt1.c1, v0.c2, v0.c1 FROM v0, rt1, vt0;
SELECT ALL rt1.c1, v0.c2, v0.c1 FROM v0, rt1, vt0 WHERE (rt1.c1) UNION ALL SELECT rt1.c1, v0.c2, v0.c1 FROM v0, rt1, vt0 WHERE ((NOT (rt1.c1))) UNION ALL SELECT rt1.c1, v0.c2, v0.c1 FROM v0, rt1, vt0 WHERE (((rt1.c1) ISNULL));
SELECT ALL rt1.c1, v0.c2, v0.c1 FROM v0, rt1, vt0;
SELECT DISTINCT rt1.c0, rt1.c1, v0.c2, rt1.c2 FROM rt1 LEFT OUTER JOIN v0 ON CAST(CAST(v0.c0 AS REAL) AS REAL);
SELECT DISTINCT rt1.c0, rt1.c1, v0.c2, rt1.c2 FROM rt1 LEFT OUTER JOIN v0 ON CAST(CAST(v0.c0 AS REAL) AS REAL) WHERE (((CASE WHEN rt1.c2 THEN rt1.c0 ELSE rt1.c2 END)&(CAST(rt1.c0 AS NUMERIC)))) UNION SELECT DISTINCT rt1.c0, rt1.c1, v0.c2, rt1.c2 FROM rt1 LEFT OUTER JOIN v0 ON CAST(CAST(v0.c0 AS REAL) AS REAL) WHERE ((NOT (((CASE WHEN rt1.c2 THEN rt1.c0 ELSE rt1.c2 END)&(CAST(rt1.c0 AS NUMERIC)))))) UNION SELECT DISTINCT rt1.c0, rt1.c1, v0.c2, rt1.c2 FROM rt1 LEFT OUTER JOIN v0 ON CAST(CAST(v0.c0 AS REAL) AS REAL) WHERE (((((CASE WHEN rt1.c2 THEN rt1.c0 ELSE rt1.c2 END)&(CAST(rt1.c0 AS NUMERIC)))) ISNULL));
SELECT DISTINCT rt1.c0, rt1.c1, v0.c2, rt1.c2 FROM rt1 LEFT OUTER JOIN v0 ON CAST(CAST(v0.c0 AS REAL) AS REAL);
SELECT t0.c0, v0.c0, rt1.c1, t0.c2, v0.c2, t0.c1 FROM t0, rt1, v0 GROUP BY t0.c0, v0.c0, rt1.c1, t0.c2, v0.c2, t0.c1;
SELECT t0.c0, v0.c0, rt1.c1, t0.c2, v0.c2, t0.c1 FROM t0, rt1, v0 WHERE (((CASE WHEN t0.c2 THEN t0.c1 WHEN v0.c1 THEN v0.c1 WHEN rt1.c0 THEN rt1.c1 ELSE t0.c2 END) NOT BETWEEN (((rt1.c2) IS TRUE)) AND ((~ (x'74a4'))))) GROUP BY t0.c0, v0.c0, rt1.c1, t0.c2, v0.c2, t0.c1 UNION SELECT t0.c0, v0.c0, rt1.c1, t0.c2, v0.c2, t0.c1 FROM t0, rt1, v0 WHERE ((NOT (((CASE WHEN t0.c2 THEN t0.c1 WHEN v0.c1 THEN v0.c1 WHEN rt1.c0 THEN rt1.c1 ELSE t0.c2 END) NOT BETWEEN (((rt1.c2) IS TRUE)) AND ((~ (x'74a4'))))))) GROUP BY t0.c0, v0.c0, rt1.c1, t0.c2, v0.c2, t0.c1 UNION SELECT t0.c0, v0.c0, rt1.c1, t0.c2, v0.c2, t0.c1 FROM t0, rt1, v0 WHERE (((((CASE WHEN t0.c2 THEN t0.c1 WHEN v0.c1 THEN v0.c1 WHEN rt1.c0 THEN rt1.c1 ELSE t0.c2 END) NOT BETWEEN (((rt1.c2) IS TRUE)) AND ((~ (x'74a4'))))) ISNULL)) GROUP BY t0.c0, v0.c0, rt1.c1, t0.c2, v0.c2, t0.c1;
SELECT t0.c0, v0.c0, rt1.c1, t0.c2, v0.c2, t0.c1 FROM t0, rt1, v0 GROUP BY t0.c0, v0.c0, rt1.c1, t0.c2, v0.c2, t0.c1;
SELECT vt0.c0, rt1.c2 FROM rt1 RIGHT OUTER JOIN vt0 ON (NOT (((rt1.c1)||(rt1.c0)))) GROUP BY vt0.c0, rt1.c2;
SELECT ALL vt0.c0, rt1.c2 FROM rt1 RIGHT OUTER JOIN vt0 ON (NOT (((rt1.c1)||(rt1.c0)))) GROUP BY vt0.c0, rt1.c2 HAVING SUM(rt1.c2) COLLATE RTRIM COLLATE NOCASE UNION ALL SELECT ALL vt0.c0, rt1.c2 FROM rt1 RIGHT OUTER JOIN vt0 ON (NOT (((rt1.c1)||(rt1.c0)))) GROUP BY vt0.c0, rt1.c2 HAVING (NOT (SUM(rt1.c2) COLLATE RTRIM COLLATE NOCASE)) UNION ALL SELECT vt0.c0, rt1.c2 FROM rt1 RIGHT OUTER JOIN vt0 ON (NOT (((rt1.c1)||(rt1.c0)))) GROUP BY vt0.c0, rt1.c2 HAVING ((SUM(rt1.c2) COLLATE RTRIM COLLATE NOCASE) ISNULL);
SELECT vt0.c0, rt1.c2 FROM rt1 RIGHT OUTER JOIN vt0 ON (NOT (((rt1.c1)||(rt1.c0)))) GROUP BY vt0.c0, rt1.c2;
SELECT ALL vt0.c0, rt1.c2 FROM rt1 RIGHT OUTER JOIN vt0 ON (NOT (((rt1.c1)||(rt1.c0)))) GROUP BY vt0.c0, rt1.c2 HAVING SUM(rt1.c2) COLLATE RTRIM COLLATE NOCASE UNION ALL SELECT ALL vt0.c0, rt1.c2 FROM rt1 RIGHT OUTER JOIN vt0 ON (NOT (((rt1.c1)||(rt1.c0)))) GROUP BY vt0.c0, rt1.c2 HAVING (NOT (SUM(rt1.c2) COLLATE RTRIM COLLATE NOCASE)) UNION ALL SELECT vt0.c0, rt1.c2 FROM rt1 RIGHT OUTER JOIN vt0 ON (NOT (((rt1.c1)||(rt1.c0)))) GROUP BY vt0.c0, rt1.c2 HAVING ((SUM(rt1.c2) COLLATE RTRIM COLLATE NOCASE) ISNULL);
SELECT vt0.c0, rt1.c2 FROM rt1 RIGHT OUTER JOIN vt0 ON (NOT (((rt1.c1)||(rt1.c0)))) GROUP BY vt0.c0, rt1.c2;
SELECT * FROM t0, rt1, vt0, v0;
SELECT ALL * FROM t0, rt1, vt0, v0 WHERE (((((t0.c1) IS TRUE)) BETWEEN ((((v0.c1))<=((v0.c2)))) AND ((NOT (rt1.c0))))) UNION ALL SELECT * FROM t0, rt1, vt0, v0 WHERE ((NOT (((((t0.c1) IS TRUE)) BETWEEN ((((v0.c1))<=((v0.c2)))) AND ((NOT (rt1.c0))))))) UNION ALL SELECT ALL * FROM t0, rt1, vt0, v0 WHERE (((((((t0.c1) IS TRUE)) BETWEEN ((((v0.c1))<=((v0.c2)))) AND ((NOT (rt1.c0))))) ISNULL));
SELECT * FROM t0, rt1, vt0, v0;
SELECT DISTINCT v0.c2, v0.c1, v0.c0 FROM v0;
SELECT DISTINCT v0.c2, v0.c1, v0.c0 FROM v0 WHERE (CASE (+ (v0.c2))  WHEN UNLIKELY(DISTINCT v0.c2) THEN x'8b80' COLLATE BINARY WHEN ((v0.c1) NOT BETWEEN (v0.c1) AND (v0.c2)) THEN 0.04981291075775618 WHEN ((v0.c2) NOTNULL) THEN ((v0.c2)GLOB(v0.c0)) END) UNION SELECT DISTINCT v0.c2, v0.c1, v0.c0 FROM v0 WHERE ((NOT (CASE (+ (v0.c2))  WHEN UNLIKELY(DISTINCT v0.c2) THEN x'8b80' COLLATE BINARY WHEN ((v0.c1) NOT BETWEEN (v0.c1) AND (v0.c2)) THEN 0.04981291075775618 WHEN ((v0.c2) NOTNULL) THEN ((v0.c2)GLOB(v0.c0)) END))) UNION SELECT DISTINCT v0.c2, v0.c1, v0.c0 FROM v0 WHERE (((CASE (+ (v0.c2))  WHEN UNLIKELY(DISTINCT v0.c2) THEN x'8b80' COLLATE BINARY WHEN ((v0.c1) NOT BETWEEN (v0.c1) AND (v0.c2)) THEN 0.04981291075775618 WHEN ((v0.c2) NOTNULL) THEN ((v0.c2)GLOB(v0.c0)) END) ISNULL));
SELECT DISTINCT v0.c2, v0.c1, v0.c0 FROM v0;
SELECT ALL v0.c1, rt1.c0, rt1.c2, rt1.c1, v0.c0 FROM v0 NOT INDEXED NATURAL JOIN rt1 GROUP BY v0.c1, rt1.c0, rt1.c2, rt1.c1, v0.c0;
SELECT ALL v0.c1, rt1.c0, rt1.c2, rt1.c1, v0.c0 FROM v0 NATURAL JOIN rt1 WHERE (CASE WHEN CAST(v0.c0 AS INTEGER) THEN x'9790' WHEN CAST(rt1.c1 AS TEXT) THEN '-1328671314' WHEN CAST(v0.c2 AS NUMERIC) THEN (NOT (v0.c2)) ELSE v0.c0 END) GROUP BY v0.c1, rt1.c0, rt1.c2, rt1.c1, v0.c0 UNION SELECT ALL v0.c1, rt1.c0, rt1.c2, rt1.c1, v0.c0 FROM v0 NATURAL JOIN rt1 WHERE ((NOT (CASE WHEN CAST(v0.c0 AS INTEGER) THEN x'9790' WHEN CAST(rt1.c1 AS TEXT) THEN '-1328671314' WHEN CAST(v0.c2 AS NUMERIC) THEN (NOT (v0.c2)) ELSE v0.c0 END))) GROUP BY v0.c1, rt1.c0, rt1.c2, rt1.c1, v0.c0 UNION SELECT v0.c1, rt1.c0, rt1.c2, rt1.c1, v0.c0 FROM v0 NATURAL JOIN rt1 WHERE (((CASE WHEN CAST(v0.c0 AS INTEGER) THEN x'9790' WHEN CAST(rt1.c1 AS TEXT) THEN '-1328671314' WHEN CAST(v0.c2 AS NUMERIC) THEN (NOT (v0.c2)) ELSE v0.c0 END) ISNULL)) GROUP BY v0.c1, rt1.c0, rt1.c2, rt1.c1, v0.c0;
SELECT ALL v0.c1, rt1.c0, rt1.c2, rt1.c1, v0.c0 FROM v0 NOT INDEXED NATURAL JOIN rt1 GROUP BY v0.c1, rt1.c0, rt1.c2, rt1.c1, v0.c0;
SELECT ALL rt1.c2, rt1.c1, rt1.c0 FROM vt0, rt1, t0 GROUP BY rt1.c2, rt1.c1, rt1.c0;
SELECT rt1.c2, rt1.c1, rt1.c0 FROM vt0, rt1, t0 GROUP BY rt1.c2, rt1.c1, rt1.c0 HAVING COUNT(*) UNION ALL SELECT rt1.c2, rt1.c1, rt1.c0 FROM vt0, rt1, t0 GROUP BY rt1.c2, rt1.c1, rt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt1.c2, rt1.c1, rt1.c0 FROM vt0, rt1, t0 GROUP BY rt1.c2, rt1.c1, rt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt1.c2, rt1.c1, rt1.c0 FROM vt0, rt1, t0 GROUP BY rt1.c2, rt1.c1, rt1.c0;
SELECT rt1.c2, rt1.c1, rt1.c0 FROM vt0, rt1, t0 GROUP BY rt1.c2, rt1.c1, rt1.c0 HAVING COUNT(*) UNION ALL SELECT rt1.c2, rt1.c1, rt1.c0 FROM vt0, rt1, t0 GROUP BY rt1.c2, rt1.c1, rt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt1.c2, rt1.c1, rt1.c0 FROM vt0, rt1, t0 GROUP BY rt1.c2, rt1.c1, rt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt1.c2, rt1.c1, rt1.c0 FROM vt0, rt1, t0 GROUP BY rt1.c2, rt1.c1, rt1.c0;
SELECT ALL MIN(GLOB(t0.c0, t0.c1) COLLATE BINARY) FROM t0;
SELECT ALL t0.c0, t0.c2 FROM t0;
SELECT t0.c0, t0.c2 FROM t0 WHERE (((t0.c1 COLLATE NOCASE) IS FALSE)) UNION ALL SELECT t0.c0, t0.c2 FROM t0 WHERE ((NOT (((t0.c1 COLLATE NOCASE) IS FALSE)))) UNION ALL SELECT t0.c0, t0.c2 FROM t0 WHERE (((((t0.c1 COLLATE NOCASE) IS FALSE)) ISNULL));
SELECT ALL t0.c0, t0.c2 FROM t0;
SELECT DISTINCT * FROM v0, t0 NATURAL JOIN vt0;
SELECT DISTINCT * FROM v0, t0 NATURAL JOIN vt0 WHERE ((((((((v0.c2, t0.c1, t0.c0)) BETWEEN ((vt0.c0, v0.c2, v0.c1)) AND ((t0.c1, v0.c2, vt0.c0))))AND(CASE t0.c2  WHEN v0.c2 THEN v0.c1 ELSE '1815057224' END)))AND(v0.c0 COLLATE RTRIM))) UNION SELECT DISTINCT * FROM v0, t0 NATURAL JOIN vt0 WHERE ((NOT ((((((((v0.c2, t0.c1, t0.c0)) BETWEEN ((vt0.c0, v0.c2, v0.c1)) AND ((t0.c1, v0.c2, vt0.c0))))AND(CASE t0.c2  WHEN v0.c2 THEN v0.c1 ELSE '1815057224' END)))AND(v0.c0 COLLATE RTRIM))))) UNION SELECT DISTINCT * FROM v0, t0 NATURAL JOIN vt0 WHERE ((((((((((v0.c2, t0.c1, t0.c0)) BETWEEN ((vt0.c0, v0.c2, v0.c1)) AND ((t0.c1, v0.c2, vt0.c0))))AND(CASE t0.c2  WHEN v0.c2 THEN v0.c1 ELSE '1815057224' END)))AND(v0.c0 COLLATE RTRIM))) ISNULL));
SELECT DISTINCT * FROM v0, t0 NATURAL JOIN vt0;
SELECT ALL v0.c2, rt1.c1 FROM vt0, t0 FULL OUTER JOIN rt1 ON v0.c1 CROSS JOIN v0 ON v0.c2 GROUP BY v0.c2, rt1.c1;
SELECT ALL t0.c2, t0.c1, t0.c0, vt0.c0 FROM t0, vt0 GROUP BY t0.c2, t0.c1, t0.c0, vt0.c0;
SELECT ALL t0.c2, t0.c1, t0.c0, vt0.c0 FROM t0, vt0 GROUP BY t0.c2, t0.c1, t0.c0, vt0.c0 HAVING GROUP_CONCAT(AVG(COUNT(0.214435658474178))) UNION ALL SELECT ALL t0.c2, t0.c1, t0.c0, vt0.c0 FROM t0, vt0 GROUP BY t0.c2, t0.c1, t0.c0, vt0.c0 HAVING (NOT (GROUP_CONCAT(AVG(COUNT(0.214435658474178))))) UNION ALL SELECT t0.c2, t0.c1, t0.c0, vt0.c0 FROM t0, vt0 GROUP BY t0.c2, t0.c1, t0.c0, vt0.c0 HAVING ((GROUP_CONCAT(AVG(COUNT(0.214435658474178)))) ISNULL);
SELECT ALL * FROM rt1;
SELECT ALL * FROM rt1 WHERE (((CASE rt1.c2  WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c1 THEN NULL WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c1 ELSE rt1.c1 END)-((~ (''))))) UNION ALL SELECT ALL * FROM rt1 WHERE ((NOT (((CASE rt1.c2  WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c1 THEN NULL WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c1 ELSE rt1.c1 END)-((~ (''))))))) UNION ALL SELECT * FROM rt1 WHERE (((((CASE rt1.c2  WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c1 THEN NULL WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c1 ELSE rt1.c1 END)-((~ (''))))) ISNULL));
SELECT ALL * FROM rt1;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE (((1724209803) NOTNULL)) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT (((1724209803) NOTNULL)))) UNION SELECT DISTINCT * FROM t0 WHERE (((((1724209803) NOTNULL)) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT ALL v0.c0, rt1.c2, vt0.c0, v0.c1 FROM v0, t0, rt1, vt0 GROUP BY v0.c0, rt1.c2, vt0.c0, v0.c1;
SELECT ALL v0.c0, rt1.c2, vt0.c0, v0.c1 FROM v0, t0, rt1, vt0 WHERE ((~ (((t0.c2)<>(t0.c1))))) GROUP BY v0.c0, rt1.c2, vt0.c0, v0.c1 UNION SELECT v0.c0, rt1.c2, vt0.c0, v0.c1 FROM v0, t0, rt1, vt0 WHERE ((NOT ((~ (((t0.c2)<>(t0.c1))))))) GROUP BY v0.c0, rt1.c2, vt0.c0, v0.c1 UNION SELECT v0.c0, rt1.c2, vt0.c0, v0.c1 FROM v0, t0, rt1, vt0 WHERE ((((~ (((t0.c2)<>(t0.c1))))) ISNULL)) GROUP BY v0.c0, rt1.c2, vt0.c0, v0.c1;
SELECT ALL v0.c0, rt1.c2, vt0.c0, v0.c1 FROM v0, t0, rt1, vt0 GROUP BY v0.c0, rt1.c2, vt0.c0, v0.c1;
SELECT rt1.c0, v0.c0, v0.c2, t0.c2, rt1.c2, t0.c1, v0.c1, vt0.c0 FROM vt0, rt1, t0, v0 GROUP BY rt1.c0, v0.c0, v0.c2, t0.c2, rt1.c2, t0.c1, v0.c1, vt0.c0;
SELECT rt1.c0, v0.c0, v0.c2, t0.c2, rt1.c2, t0.c1, v0.c1, vt0.c0 FROM vt0, rt1, t0, v0 GROUP BY rt1.c0, v0.c0, v0.c2, t0.c2, rt1.c2, t0.c1, v0.c1, vt0.c0 HAVING AVG(GROUP_CONCAT(MIN(t0.c1))) UNION ALL SELECT rt1.c0, v0.c0, v0.c2, t0.c2, rt1.c2, t0.c1, v0.c1, vt0.c0 FROM vt0, rt1, t0, v0 GROUP BY rt1.c0, v0.c0, v0.c2, t0.c2, rt1.c2, t0.c1, v0.c1, vt0.c0 HAVING (NOT (AVG(GROUP_CONCAT(MIN(t0.c1))))) UNION ALL SELECT rt1.c0, v0.c0, v0.c2, t0.c2, rt1.c2, t0.c1, v0.c1, vt0.c0 FROM vt0, rt1, t0, v0 GROUP BY rt1.c0, v0.c0, v0.c2, t0.c2, rt1.c2, t0.c1, v0.c1, vt0.c0 HAVING ((AVG(GROUP_CONCAT(MIN(t0.c1)))) ISNULL);
SELECT ALL * FROM v0;
SELECT * FROM v0 WHERE (CAST((((v0.c2, v0.c0, v0.c1))<((v0.c2, v0.c0, v0.c2))) AS INTEGER)) UNION ALL SELECT ALL * FROM v0 WHERE ((NOT (CAST((((v0.c2, v0.c0, v0.c1))<((v0.c2, v0.c0, v0.c2))) AS INTEGER)))) UNION ALL SELECT * FROM v0 WHERE (((CAST((((v0.c2, v0.c0, v0.c1))<((v0.c2, v0.c0, v0.c2))) AS INTEGER)) ISNULL));
SELECT ALL * FROM v0;
SELECT DISTINCT * FROM t0, vt0;
SELECT DISTINCT * FROM t0, vt0 WHERE (((((((t0.c0))>=((t0.c0)))))<=(((((t0.c1)) BETWEEN ((t0.c1)) AND ((t0.c1))))))) UNION SELECT DISTINCT * FROM t0, vt0 WHERE ((NOT (((((((t0.c0))>=((t0.c0)))))<=(((((t0.c1)) BETWEEN ((t0.c1)) AND ((t0.c1))))))))) UNION SELECT DISTINCT * FROM t0, vt0 WHERE (((((((((t0.c0))>=((t0.c0)))))<=(((((t0.c1)) BETWEEN ((t0.c1)) AND ((t0.c1))))))) ISNULL));
SELECT DISTINCT * FROM t0, vt0;
SELECT ALL v0.c0, v0.c2, v0.c1 FROM v0 GROUP BY v0.c0, v0.c2, v0.c1;
SELECT ALL v0.c0, v0.c2, v0.c1 FROM v0 WHERE ((('-1391973535')%((((v0.c0, v0.c0, v0.c2))<=((v0.c1, v0.c0, v0.c0)))))) GROUP BY v0.c0, v0.c2, v0.c1 UNION SELECT v0.c0, v0.c2, v0.c1 FROM v0 WHERE ((NOT ((('-1391973535')%((((v0.c0, v0.c0, v0.c2))<=((v0.c1, v0.c0, v0.c0)))))))) GROUP BY v0.c0, v0.c2, v0.c1 UNION SELECT ALL v0.c0, v0.c2, v0.c1 FROM v0 WHERE ((((('-1391973535')%((((v0.c0, v0.c0, v0.c2))<=((v0.c1, v0.c0, v0.c0)))))) ISNULL)) GROUP BY v0.c0, v0.c2, v0.c1;
SELECT ALL v0.c0, v0.c2, v0.c1 FROM v0 GROUP BY v0.c0, v0.c2, v0.c1;
SELECT ALL v0.c0, rt1.c0, v0.c1, rt1.c2 FROM rt1, v0 GROUP BY v0.c0, rt1.c0, v0.c1, rt1.c2;
SELECT v0.c0, rt1.c0, v0.c1, rt1.c2 FROM rt1, v0 GROUP BY v0.c0, rt1.c0, v0.c1, rt1.c2 HAVING MIN(TOTAL(SUM(SUM(v0.c2)))) UNION ALL SELECT ALL v0.c0, rt1.c0, v0.c1, rt1.c2 FROM rt1, v0 GROUP BY v0.c0, rt1.c0, v0.c1, rt1.c2 HAVING (NOT (MIN(TOTAL(SUM(SUM(v0.c2)))))) UNION ALL SELECT v0.c0, rt1.c0, v0.c1, rt1.c2 FROM rt1, v0 GROUP BY v0.c0, rt1.c0, v0.c1, rt1.c2 HAVING ((MIN(TOTAL(SUM(SUM(v0.c2))))) ISNULL);
SELECT ALL * FROM v0, vt0, rt1, t0;
SELECT * FROM v0, vt0, rt1, t0 WHERE ((- (((((t0.c0)OR('1054545803')))OR(NULL))))) UNION ALL SELECT * FROM v0, vt0, rt1, t0 WHERE ((NOT ((- (((((t0.c0)OR('1054545803')))OR(NULL))))))) UNION ALL SELECT ALL * FROM v0, vt0, rt1, t0 WHERE ((((- (((((t0.c0)OR('1054545803')))OR(NULL))))) ISNULL));
SELECT ALL * FROM v0, vt0, rt1, t0;
SELECT DISTINCT v0.c0, v0.c1, v0.c2 FROM v0;
SELECT DISTINCT v0.c0, v0.c1, v0.c2 FROM v0 WHERE (NULL) UNION SELECT DISTINCT v0.c0, v0.c1, v0.c2 FROM v0 WHERE ((NOT (NULL))) UNION SELECT DISTINCT v0.c0, v0.c1, v0.c2 FROM v0 WHERE (((NULL) ISNULL));
SELECT DISTINCT v0.c0, v0.c1, v0.c2 FROM v0;
SELECT ALL vt0.c0, rt1.c2, rt1.c1, rt1.c0 FROM vt0, rt1 GROUP BY vt0.c0, rt1.c2, rt1.c1, rt1.c0;
SELECT ALL vt0.c0, rt1.c2, rt1.c1, rt1.c0 FROM vt0, rt1 WHERE (CAST(((rt1.c1)IS NOT(rt1.c2)) AS INTEGER)) GROUP BY vt0.c0, rt1.c2, rt1.c1, rt1.c0 UNION SELECT ALL vt0.c0, rt1.c2, rt1.c1, rt1.c0 FROM vt0, rt1 WHERE ((NOT (CAST(((rt1.c1)IS NOT(rt1.c2)) AS INTEGER)))) GROUP BY vt0.c0, rt1.c2, rt1.c1, rt1.c0 UNION SELECT ALL vt0.c0, rt1.c2, rt1.c1, rt1.c0 FROM vt0, rt1 WHERE (((CAST(((rt1.c1)IS NOT(rt1.c2)) AS INTEGER)) ISNULL)) GROUP BY vt0.c0, rt1.c2, rt1.c1, rt1.c0;
SELECT ALL vt0.c0, rt1.c2, rt1.c1, rt1.c0 FROM vt0, rt1 GROUP BY vt0.c0, rt1.c2, rt1.c1, rt1.c0;
SELECT ALL rt1.c2, t0.c1, vt0.c0 FROM rt1, t0, vt0 GROUP BY rt1.c2, t0.c1, vt0.c0;
SELECT ALL rt1.c2, t0.c1, vt0.c0 FROM rt1, t0, vt0 GROUP BY rt1.c2, t0.c1, vt0.c0 HAVING ((MIN(MAX(COUNT(t0.c1))))OR((- (GROUP_CONCAT(t0.c0))))) UNION ALL SELECT rt1.c2, t0.c1, vt0.c0 FROM rt1, t0, vt0 GROUP BY rt1.c2, t0.c1, vt0.c0 HAVING (NOT (((MIN(MAX(COUNT(t0.c1))))OR((- (GROUP_CONCAT(t0.c0))))))) UNION ALL SELECT rt1.c2, t0.c1, vt0.c0 FROM rt1, t0, vt0 GROUP BY rt1.c2, t0.c1, vt0.c0 HAVING ((((MIN(MAX(COUNT(t0.c1))))OR((- (GROUP_CONCAT(t0.c0)))))) ISNULL);
SELECT t0.c0 FROM t0, rt1;
SELECT ALL t0.c0 FROM t0, rt1 WHERE (((HEX(''))<<(((0Xffffffffa269386d)!=(rt1.c0))))) UNION ALL SELECT ALL t0.c0 FROM t0, rt1 WHERE ((NOT (((HEX(''))<<(((0Xffffffffa269386d)<>(rt1.c0))))))) UNION ALL SELECT ALL t0.c0 FROM t0, rt1 WHERE (((((HEX(''))<<(((0xffffffffa269386d)<>(rt1.c0))))) ISNULL));
SELECT t0.c0 FROM t0, rt1;
SELECT DISTINCT rt1.c1, rt1.c2, rt1.c0, vt0.c0 FROM vt0, rt1;
SELECT DISTINCT rt1.c1, rt1.c2, rt1.c0, vt0.c0 FROM vt0, rt1 WHERE (TRIM(DISTINCT ((rt1.c1) IS FALSE), ((vt0.c0) NOT NULL))) UNION SELECT DISTINCT rt1.c1, rt1.c2, rt1.c0, vt0.c0 FROM vt0, rt1 WHERE ((NOT (TRIM(DISTINCT ((rt1.c1) IS FALSE), ((vt0.c0) NOT NULL))))) UNION SELECT DISTINCT rt1.c1, rt1.c2, rt1.c0, vt0.c0 FROM vt0, rt1 WHERE (((TRIM(DISTINCT ((rt1.c1) IS FALSE), ((vt0.c0) NOT NULL))) ISNULL));
SELECT DISTINCT rt1.c1, rt1.c2, rt1.c0, vt0.c0 FROM vt0, rt1;
SELECT ALL t0.c1, t0.c2, t0.c0 FROM t0 GROUP BY t0.c1, t0.c2, t0.c0;
SELECT t0.c1, t0.c2, t0.c0 FROM t0 WHERE (t0.c1) GROUP BY t0.c1, t0.c2, t0.c0 UNION SELECT ALL t0.c1, t0.c2, t0.c0 FROM t0 WHERE ((NOT (t0.c1))) GROUP BY t0.c1, t0.c2, t0.c0 UNION SELECT t0.c1, t0.c2, t0.c0 FROM t0 WHERE (((t0.c1) ISNULL)) GROUP BY t0.c1, t0.c2, t0.c0;
SELECT ALL t0.c1, t0.c2, t0.c0 FROM t0 GROUP BY t0.c1, t0.c2, t0.c0;
SELECT v0.c2, v0.c0, rt1.c1, t0.c2, t0.c1 FROM rt1, t0 RIGHT OUTER JOIN vt0 ON SQLITE_COMPILEOPTION_USED((((('')OR(t0.c0)))OR(v0.c1))) FULL OUTER JOIN v0 ON CAST(LOWER(rt1.c2) AS NUMERIC) GROUP BY v0.c2, v0.c0, rt1.c1, t0.c2, t0.c1;
SELECT ALL t0.c2, v0.c0, v0.c2 FROM t0, v0;
SELECT t0.c2, v0.c0, v0.c2 FROM t0, v0 WHERE (((((t0.c0, v0.c1, v0.c2, v0.c0, t0.c1))>((v0.c1, t0.c0, NULL, t0.c1, v0.c2))) IN ())) UNION ALL SELECT ALL t0.c2, v0.c0, v0.c2 FROM t0, v0 WHERE ((NOT (((((t0.c0, v0.c1, v0.c2, v0.c0, t0.c1))>((v0.c1, t0.c0, NULL, t0.c1, v0.c2))) IN ())))) UNION ALL SELECT t0.c2, v0.c0, v0.c2 FROM t0, v0 WHERE (((((((t0.c0, v0.c1, v0.c2, v0.c0, t0.c1))>((v0.c1, t0.c0, NULL, t0.c1, v0.c2))) IN ())) ISNULL));
SELECT ALL t0.c2, v0.c0, v0.c2 FROM t0, v0;
SELECT DISTINCT * FROM vt0, t0, v0, rt1;
SELECT DISTINCT * FROM vt0, t0, v0, rt1 WHERE (((((rt1.c1)/(rt1.c1)))IS NOT((v0.c0 IN (vt0.c0))))) UNION SELECT DISTINCT * FROM vt0, t0, v0, rt1 WHERE ((NOT (((((rt1.c1)/(rt1.c1)))IS NOT((v0.c0 IN (vt0.c0))))))) UNION SELECT DISTINCT * FROM vt0, t0, v0, rt1 WHERE (((((((rt1.c1)/(rt1.c1)))IS NOT((v0.c0 IN (vt0.c0))))) ISNULL));
SELECT DISTINCT * FROM vt0, t0, v0, rt1;
SELECT t0.c2, t0.c1, vt0.c0, v0.c2, t0.c0, v0.c1 FROM v0 INNER JOIN t0 ON ((vt0.c0 COLLATE NOCASE)LIKE(((v0.c2)<(t0.c2)))) INNER JOIN vt0 ON ((((((((((vt0.c0)>=('')))AND(((((v0.c0)OR(v0.c1)))AND(v0.c0)))))OR(x'')))AND(((t0.c0) BETWEEN (v0.c2) AND (t0.c2)))))OR(v0.c2)) GROUP BY t0.c2, t0.c1, vt0.c0, v0.c2, t0.c0, v0.c1;
SELECT ALL t0.c2, t0.c1, vt0.c0, v0.c2, t0.c0, v0.c1 FROM v0 INNER JOIN t0 ON ((vt0.c0 COLLATE NOCASE)LIKE(((v0.c2)<(t0.c2)))) INNER JOIN vt0 ON ((((((((((vt0.c0)>=('')))AND(((((v0.c0)OR(v0.c1)))AND(v0.c0)))))OR(x'')))AND(((t0.c0) BETWEEN (v0.c2) AND (t0.c2)))))OR(v0.c2)) WHERE (((((((v0.c0)AND(v0.c1)))OR(t0.c1)))==((~ (v0.c0))))) GROUP BY t0.c2, t0.c1, vt0.c0, v0.c2, t0.c0, v0.c1 UNION SELECT t0.c2, t0.c1, vt0.c0, v0.c2, t0.c0, v0.c1 FROM v0 INNER JOIN t0 ON ((vt0.c0 COLLATE NOCASE)LIKE(((v0.c2)<(t0.c2)))) INNER JOIN vt0 ON ((((((((((vt0.c0)>=('')))AND(((((v0.c0)OR(v0.c1)))AND(v0.c0)))))OR(x'')))AND(((t0.c0) BETWEEN (v0.c2) AND (t0.c2)))))OR(v0.c2)) WHERE ((NOT (((((((v0.c0)AND(v0.c1)))OR(t0.c1)))==((~ (v0.c0))))))) GROUP BY t0.c2, t0.c1, vt0.c0, v0.c2, t0.c0, v0.c1 UNION SELECT t0.c2, t0.c1, vt0.c0, v0.c2, t0.c0, v0.c1 FROM v0 INNER JOIN t0 ON ((vt0.c0 COLLATE NOCASE)LIKE(((v0.c2)<(t0.c2)))) INNER JOIN vt0 ON ((((((((((vt0.c0)>=('')))AND(((((v0.c0)OR(v0.c1)))AND(v0.c0)))))OR(x'')))AND(((t0.c0) BETWEEN (v0.c2) AND (t0.c2)))))OR(v0.c2)) WHERE (((((((((v0.c0)AND(v0.c1)))OR(t0.c1)))=((~ (v0.c0))))) ISNULL)) GROUP BY t0.c2, t0.c1, vt0.c0, v0.c2, t0.c0, v0.c1;
SELECT t0.c2, t0.c1, vt0.c0, v0.c2, t0.c0, v0.c1 FROM v0 INNER JOIN t0 ON ((vt0.c0 COLLATE NOCASE)LIKE(((v0.c2)<(t0.c2)))) INNER JOIN vt0 ON ((((((((((vt0.c0)>=('')))AND(((((v0.c0)OR(v0.c1)))AND(v0.c0)))))OR(x'')))AND(((t0.c0) BETWEEN (v0.c2) AND (t0.c2)))))OR(v0.c2)) GROUP BY t0.c2, t0.c1, vt0.c0, v0.c2, t0.c0, v0.c1;
SELECT ALL v0.c1, t0.c2, vt0.c0, t0.c1, v0.c0, t0.c0 FROM vt0, rt1, t0, v0 GROUP BY v0.c1, t0.c2, vt0.c0, t0.c1, v0.c0, t0.c0;
SELECT ALL v0.c1, t0.c2, vt0.c0, t0.c1, v0.c0, t0.c0 FROM vt0, rt1, t0, v0 GROUP BY v0.c1, t0.c2, vt0.c0, t0.c1, v0.c0, t0.c0 HAVING AVG(MIN(AVG(SUM(t0.c1)))) UNION ALL SELECT v0.c1, t0.c2, vt0.c0, t0.c1, v0.c0, t0.c0 FROM vt0, rt1, t0, v0 GROUP BY v0.c1, t0.c2, vt0.c0, t0.c1, v0.c0, t0.c0 HAVING (NOT (AVG(MIN(AVG(SUM(t0.c1)))))) UNION ALL SELECT v0.c1, t0.c2, vt0.c0, t0.c1, v0.c0, t0.c0 FROM vt0, rt1, t0, v0 GROUP BY v0.c1, t0.c2, vt0.c0, t0.c1, v0.c0, t0.c0 HAVING ((AVG(MIN(AVG(SUM(t0.c1))))) ISNULL);
SELECT ALL vt0.c0 FROM t0, vt0, rt1;
SELECT ALL vt0.c0 FROM t0, vt0, rt1 WHERE (((']K5TQ&l') IS TRUE)) UNION ALL SELECT ALL vt0.c0 FROM t0, vt0, rt1 WHERE ((NOT (((']K5TQ&l') IS TRUE)))) UNION ALL SELECT ALL vt0.c0 FROM t0, vt0, rt1 WHERE (((((']K5TQ&l') IS TRUE)) ISNULL));
SELECT ALL vt0.c0 FROM t0, vt0, rt1;
SELECT DISTINCT rt1.c2, t0.c0, v0.c0, v0.c2, t0.c1, t0.c2, vt0.c0, v0.c1, rt1.c0 FROM vt0, v0, rt1, t0;
SELECT DISTINCT rt1.c2, t0.c0, v0.c0, v0.c2, t0.c1, t0.c2, vt0.c0, v0.c1, rt1.c0 FROM vt0, v0, rt1, t0 WHERE (LIKELY(DISTINCT (+ (rt1.c2)))) UNION SELECT DISTINCT rt1.c2, t0.c0, v0.c0, v0.c2, t0.c1, t0.c2, vt0.c0, v0.c1, rt1.c0 FROM vt0, v0, rt1, t0 WHERE ((NOT (LIKELY(DISTINCT (+ (rt1.c2)))))) UNION SELECT DISTINCT rt1.c2, t0.c0, v0.c0, v0.c2, t0.c1, t0.c2, vt0.c0, v0.c1, rt1.c0 FROM vt0, v0, rt1, t0 WHERE (((LIKELY(DISTINCT (+ (rt1.c2)))) ISNULL));
SELECT DISTINCT rt1.c2, t0.c0, v0.c0, v0.c2, t0.c1, t0.c2, vt0.c0, v0.c1, rt1.c0 FROM vt0, v0, rt1, t0;
SELECT t0.c1, rt1.c2, v0.c0 FROM t0, v0 FULL OUTER JOIN rt1 ON ((((((t0.c2)AND(v0.c1)))OR(0.8507671636667037))) NOT BETWEEN (((rt1.c2) NOTNULL)) AND (rt1.c2 COLLATE BINARY)) FULL OUTER JOIN vt0 ON CAST(((((t0.c1)OR(t0.c2)))AND(rt1.c0)) AS REAL) GROUP BY t0.c1, rt1.c2, v0.c0;
SELECT t0.c1, rt1.c2, v0.c0 FROM t0, v0 FULL OUTER JOIN rt1 ON ((((((t0.c2)AND(v0.c1)))OR(0.8507671636667037))) NOT BETWEEN (((rt1.c2) NOTNULL)) AND (rt1.c2 COLLATE BINARY)) FULL OUTER JOIN vt0 ON CAST(((((t0.c1)OR(t0.c2)))AND(rt1.c0)) AS REAL) WHERE (((NULL COLLATE BINARY)>=(t0.c0 COLLATE RTRIM))) GROUP BY t0.c1, rt1.c2, v0.c0 UNION SELECT ALL t0.c1, rt1.c2, v0.c0 FROM t0, v0 FULL OUTER JOIN rt1 ON ((((((t0.c2)AND(v0.c1)))OR(0.8507671636667037))) NOT BETWEEN (((rt1.c2) NOTNULL)) AND (rt1.c2 COLLATE BINARY)) FULL OUTER JOIN vt0 ON CAST(((((t0.c1)OR(t0.c2)))AND(rt1.c0)) AS REAL) WHERE ((NOT (((NULL COLLATE BINARY)>=(t0.c0 COLLATE RTRIM))))) GROUP BY t0.c1, rt1.c2, v0.c0 UNION SELECT ALL t0.c1, rt1.c2, v0.c0 FROM t0, v0 FULL OUTER JOIN rt1 ON ((((((t0.c2)AND(v0.c1)))OR(0.8507671636667037))) NOT BETWEEN (((rt1.c2) NOTNULL)) AND (rt1.c2 COLLATE BINARY)) FULL OUTER JOIN vt0 ON CAST(((((t0.c1)OR(t0.c2)))AND(rt1.c0)) AS REAL) WHERE (((((NULL COLLATE BINARY)>=(t0.c0 COLLATE RTRIM))) ISNULL)) GROUP BY t0.c1, rt1.c2, v0.c0;
SELECT t0.c1, rt1.c2, v0.c0 FROM t0, v0 FULL OUTER JOIN rt1 ON ((((((t0.c2)AND(v0.c1)))OR(0.8507671636667037))) NOT BETWEEN (((rt1.c2) NOTNULL)) AND (rt1.c2 COLLATE BINARY)) FULL OUTER JOIN vt0 ON CAST(((((t0.c1)OR(t0.c2)))AND(rt1.c0)) AS REAL) GROUP BY t0.c1, rt1.c2, v0.c0;
SELECT ALL v0.c0, v0.c1 FROM v0, rt1 GROUP BY v0.c0, v0.c1;
SELECT v0.c0, v0.c1 FROM v0, rt1 GROUP BY v0.c0, v0.c1 HAVING COUNT(MIN(COUNT(rt1.c2))) UNION ALL SELECT v0.c0, v0.c1 FROM v0, rt1 GROUP BY v0.c0, v0.c1 HAVING (NOT (COUNT(MIN(COUNT(rt1.c2))))) UNION ALL SELECT ALL v0.c0, v0.c1 FROM v0, rt1 GROUP BY v0.c0, v0.c1 HAVING ((COUNT(MIN(COUNT(rt1.c2)))) ISNULL);
SELECT ALL vt0.c0, rt1.c2, t0.c0, v0.c1, t0.c1, v0.c2, rt1.c0 FROM t0, rt1, v0, vt0;
SELECT ALL vt0.c0, rt1.c2, t0.c0, v0.c1, t0.c1, v0.c2, rt1.c0 FROM t0, rt1, v0, vt0 WHERE (CASE UNLIKELY(DISTINCT t0.c2)  WHEN ((vt0.c0) IS TRUE) THEN (NOT (t0.c1)) END) UNION ALL SELECT ALL vt0.c0, rt1.c2, t0.c0, v0.c1, t0.c1, v0.c2, rt1.c0 FROM t0, rt1, v0, vt0 WHERE ((NOT (CASE UNLIKELY(DISTINCT t0.c2)  WHEN ((vt0.c0) IS TRUE) THEN (NOT (t0.c1)) END))) UNION ALL SELECT ALL vt0.c0, rt1.c2, t0.c0, v0.c1, t0.c1, v0.c2, rt1.c0 FROM t0, rt1, v0, vt0 WHERE (((CASE UNLIKELY(DISTINCT t0.c2)  WHEN ((vt0.c0) IS TRUE) THEN (NOT (t0.c1)) END) ISNULL));
SELECT ALL vt0.c0, rt1.c2, t0.c0, v0.c1, t0.c1, v0.c2, rt1.c0 FROM t0, rt1, v0, vt0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (((((CASE WHEN v0.c1 THEN v0.c2 ELSE v0.c0 END)OR(CAST('0.4640479761617461' AS BLOB))))OR((((v0.c1, v0.c2, v0.c1))>=((v0.c2, v0.c0, v0.c2)))))) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (((((CASE WHEN v0.c1 THEN v0.c2 ELSE v0.c0 END)OR(CAST('0.4640479761617461' AS BLOB))))OR((((v0.c1, v0.c2, v0.c1))>=((v0.c2, v0.c0, v0.c2)))))))) UNION SELECT DISTINCT * FROM v0 WHERE (((((((CASE WHEN v0.c1 THEN v0.c2 ELSE v0.c0 END)OR(CAST('0.4640479761617461' AS BLOB))))OR((((v0.c1, v0.c2, v0.c1))>=((v0.c2, v0.c0, v0.c2)))))) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT ALL t0.c0, v0.c0, t0.c1 FROM v0 RIGHT OUTER JOIN t0 ON CASE ((t0.c1)<(t0.c1))  WHEN t0.c2 THEN (~ (v0.c0)) WHEN '1115579408' THEN (v0.c0 IN ()) WHEN (+ (v0.c1)) THEN ((v0.c0) ISNULL) ELSE ((v0.c1) NOTNULL) END GROUP BY t0.c0, v0.c0, t0.c1;
SELECT ALL t0.c0, v0.c0, t0.c1 FROM v0 RIGHT OUTER JOIN t0 ON CASE ((t0.c1)<(t0.c1))  WHEN t0.c2 THEN (~ (v0.c0)) WHEN '1115579408' THEN (v0.c0 IN ()) WHEN (+ (v0.c1)) THEN ((v0.c0) ISNULL) ELSE ((v0.c1) NOTNULL) END WHERE ((((CAST(v0.c1 AS TEXT)))>=((((t0.c2)>>(t0.c2)))))) GROUP BY t0.c0, v0.c0, t0.c1 UNION SELECT t0.c0, v0.c0, t0.c1 FROM v0 RIGHT OUTER JOIN t0 ON CASE ((t0.c1)<(t0.c1))  WHEN t0.c2 THEN (~ (v0.c0)) WHEN '1115579408' THEN (v0.c0 IN ()) WHEN (+ (v0.c1)) THEN ((v0.c0) ISNULL) ELSE ((v0.c1) NOTNULL) END WHERE ((NOT ((((CAST(v0.c1 AS TEXT)))>=((((t0.c2)>>(t0.c2)))))))) GROUP BY t0.c0, v0.c0, t0.c1 UNION SELECT t0.c0, v0.c0, t0.c1 FROM v0 RIGHT OUTER JOIN t0 ON CASE ((t0.c1)<(t0.c1))  WHEN t0.c2 THEN (~ (v0.c0)) WHEN '1115579408' THEN (v0.c0 IN ()) WHEN (+ (v0.c1)) THEN ((v0.c0) ISNULL) ELSE ((v0.c1) NOTNULL) END WHERE ((((((CAST(v0.c1 AS TEXT)))>=((((t0.c2)>>(t0.c2)))))) ISNULL)) GROUP BY t0.c0, v0.c0, t0.c1;
SELECT ALL t0.c0, v0.c0, t0.c1 FROM v0 RIGHT OUTER JOIN t0 ON CASE ((t0.c1)<(t0.c1))  WHEN t0.c2 THEN (~ (v0.c0)) WHEN '1115579408' THEN (v0.c0 IN ()) WHEN (+ (v0.c1)) THEN ((v0.c0) ISNULL) ELSE ((v0.c1) NOTNULL) END GROUP BY t0.c0, v0.c0, t0.c1;
SELECT v0.c2, vt0.c0, v0.c1 FROM v0, vt0 GROUP BY v0.c2, vt0.c0, v0.c1;
SELECT v0.c2, vt0.c0, v0.c1 FROM v0, vt0 GROUP BY v0.c2, vt0.c0, v0.c1 HAVING ((SUM(v0.c1)) BETWEEN (MAX(TOTAL(v0.c0))) AND (GROUP_CONCAT(SUM(GROUP_CONCAT(GROUP_CONCAT(TOTAL(v0.c1))))))) UNION ALL SELECT v0.c2, vt0.c0, v0.c1 FROM v0, vt0 GROUP BY v0.c2, vt0.c0, v0.c1 HAVING (NOT (((SUM(v0.c1)) BETWEEN (MAX(TOTAL(v0.c0))) AND (GROUP_CONCAT(SUM(GROUP_CONCAT(GROUP_CONCAT(TOTAL(v0.c1))))))))) UNION ALL SELECT ALL v0.c2, vt0.c0, v0.c1 FROM v0, vt0 GROUP BY v0.c2, vt0.c0, v0.c1 HAVING ((((SUM(v0.c1)) BETWEEN (MAX(TOTAL(v0.c0))) AND (GROUP_CONCAT(SUM(GROUP_CONCAT(GROUP_CONCAT(TOTAL(v0.c1)))))))) ISNULL);
SELECT ALL * FROM t0, vt0, v0;
SELECT * FROM t0, vt0, v0 WHERE ((~ (SUBSTR(t0.c2, v0.c0)))) UNION ALL SELECT ALL * FROM t0, vt0, v0 WHERE ((NOT ((~ (SUBSTR(t0.c2, v0.c0)))))) UNION ALL SELECT ALL * FROM t0, vt0, v0 WHERE ((((~ (SUBSTR(t0.c2, v0.c0)))) ISNULL));
SELECT ALL * FROM t0, vt0, v0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((((vt0.c0) IS TRUE))*(vt0.c0 COLLATE BINARY))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (((((vt0.c0) IS TRUE))*(vt0.c0 COLLATE BINARY))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((((((vt0.c0) IS TRUE))*(vt0.c0 COLLATE BINARY))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (((vt0.c0 COLLATE NOCASE) ISNULL)) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (((vt0.c0 COLLATE NOCASE) ISNULL)))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((((vt0.c0 COLLATE NOCASE) ISNULL)) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT rt1.c1 FROM rt1, t0, vt0, v0 GROUP BY rt1.c1;
SELECT rt1.c1 FROM rt1, t0, vt0, v0 GROUP BY rt1.c1 HAVING TOTAL(((((t0.c2)AND(MIN(v0.c1))))OR(COUNT(rt1.c1)))) UNION ALL SELECT rt1.c1 FROM rt1, t0, vt0, v0 GROUP BY rt1.c1 HAVING (NOT (TOTAL(((((t0.c2)AND(MIN(v0.c1))))OR(COUNT(rt1.c1)))))) UNION ALL SELECT rt1.c1 FROM rt1, t0, vt0, v0 GROUP BY rt1.c1 HAVING ((TOTAL(((((t0.c2)AND(MIN(v0.c1))))OR(COUNT(rt1.c1))))) ISNULL);
SELECT ALL v0.c0, v0.c2, t0.c1, v0.c1, t0.c2, t0.c0, vt0.c0 FROM vt0 INNER JOIN t0 ON ((('526146490')) BETWEEN (((((('25448747')AND(t0.c1)))OR(t0.c1)))) AND ((CASE WHEN t0.c2 THEN vt0.c0 END))) INNER JOIN v0 ON CASE CAST(vt0.c0 AS NUMERIC)  WHEN ((((((((v0.c1)AND(t0.c2)))AND(vt0.c0)))AND(t0.c1)))OR(v0.c0)) THEN ((v0.c2)OR(v0.c0)) ELSE NULL END;
SELECT ALL v0.c0, v0.c2, t0.c1, v0.c1, t0.c2, t0.c0, vt0.c0 FROM vt0 INNER JOIN t0 ON ((('526146490')) BETWEEN (((((('25448747')AND(t0.c1)))OR(t0.c1)))) AND ((CASE WHEN t0.c2 THEN vt0.c0 END))) INNER JOIN v0 ON CASE CAST(vt0.c0 AS NUMERIC)  WHEN ((((((((v0.c1)AND(t0.c2)))AND(vt0.c0)))AND(t0.c1)))OR(v0.c0)) THEN ((v0.c2)OR(v0.c0)) ELSE NULL END WHERE (((LIKELY(t0.c1)) NOT BETWEEN (NULL) AND (ABS(vt0.c0)))) UNION ALL SELECT ALL v0.c0, v0.c2, t0.c1, v0.c1, t0.c2, t0.c0, vt0.c0 FROM vt0 INNER JOIN t0 ON ((('526146490')) BETWEEN (((((('25448747')AND(t0.c1)))OR(t0.c1)))) AND ((CASE WHEN t0.c2 THEN vt0.c0 END))) INNER JOIN v0 ON CASE CAST(vt0.c0 AS NUMERIC)  WHEN ((((((((v0.c1)AND(t0.c2)))AND(vt0.c0)))AND(t0.c1)))OR(v0.c0)) THEN ((v0.c2)OR(v0.c0)) ELSE NULL END WHERE ((NOT (((LIKELY(t0.c1)) NOT BETWEEN (NULL) AND (ABS(vt0.c0)))))) UNION ALL SELECT ALL v0.c0, v0.c2, t0.c1, v0.c1, t0.c2, t0.c0, vt0.c0 FROM vt0 INNER JOIN t0 ON ((('526146490')) BETWEEN (((((('25448747')AND(t0.c1)))OR(t0.c1)))) AND ((CASE WHEN t0.c2 THEN vt0.c0 END))) INNER JOIN v0 ON CASE CAST(vt0.c0 AS NUMERIC)  WHEN ((((((((v0.c1)AND(t0.c2)))AND(vt0.c0)))AND(t0.c1)))OR(v0.c0)) THEN ((v0.c2)OR(v0.c0)) ELSE NULL END WHERE (((((LIKELY(t0.c1)) NOT BETWEEN (NULL) AND (ABS(vt0.c0)))) ISNULL));
SELECT ALL v0.c0, v0.c2, t0.c1, v0.c1, t0.c2, t0.c0, vt0.c0 FROM vt0 INNER JOIN t0 ON ((('526146490')) BETWEEN (((((('25448747')AND(t0.c1)))OR(t0.c1)))) AND ((CASE WHEN t0.c2 THEN vt0.c0 END))) INNER JOIN v0 ON CASE CAST(vt0.c0 AS NUMERIC)  WHEN ((((((((v0.c1)AND(t0.c2)))AND(vt0.c0)))AND(t0.c1)))OR(v0.c0)) THEN ((v0.c2)OR(v0.c0)) ELSE NULL END;
SELECT DISTINCT t0.c2 FROM t0;
SELECT DISTINCT t0.c2 FROM t0 WHERE (((t0.c1)OR((((t0.c2))>((t0.c2)))))) UNION SELECT DISTINCT t0.c2 FROM t0 WHERE ((NOT (((t0.c1)OR((((t0.c2))>((t0.c2)))))))) UNION SELECT DISTINCT t0.c2 FROM t0 WHERE (((((t0.c1)OR((((t0.c2))>((t0.c2)))))) ISNULL));
SELECT DISTINCT t0.c2 FROM t0;
SELECT rt1.c0, rt1.c2, t0.c2 FROM v0, vt0, rt1, t0 GROUP BY rt1.c0, rt1.c2, t0.c2;
SELECT ALL rt1.c0, rt1.c2, t0.c2 FROM v0, vt0, rt1, t0 WHERE ((~ (((((rt1.c2)OR(t0.c1)))AND(vt0.c0))))) GROUP BY rt1.c0, rt1.c2, t0.c2 UNION SELECT rt1.c0, rt1.c2, t0.c2 FROM v0, vt0, rt1, t0 WHERE ((NOT ((~ (((((rt1.c2)OR(t0.c1)))AND(vt0.c0))))))) GROUP BY rt1.c0, rt1.c2, t0.c2 UNION SELECT rt1.c0, rt1.c2, t0.c2 FROM v0, vt0, rt1, t0 NOT INDEXED WHERE ((((~ (((((rt1.c2)OR(t0.c1)))AND(vt0.c0))))) ISNULL)) GROUP BY rt1.c0, rt1.c2, t0.c2;
SELECT rt1.c0, rt1.c2, t0.c2 FROM v0, vt0, rt1, t0 GROUP BY rt1.c0, rt1.c2, t0.c2;
SELECT ALL t0.c0, t0.c2, rt1.c2, t0.c1 FROM rt1, v0 RIGHT OUTER JOIN t0 ON (t0.c2 IN ()) GROUP BY t0.c0, t0.c2, rt1.c2, t0.c1;
SELECT t0.c0, t0.c2, rt1.c2, t0.c1 FROM rt1, v0 RIGHT OUTER JOIN t0 ON (t0.c2 IN ()) GROUP BY t0.c0, t0.c2, rt1.c2, t0.c1 HAVING (- (NULL)) UNION ALL SELECT ALL t0.c0, t0.c2, rt1.c2, t0.c1 FROM rt1, v0 RIGHT OUTER JOIN t0 ON (t0.c2 IN ()) GROUP BY t0.c0, t0.c2, rt1.c2, t0.c1 HAVING (NOT ((- (NULL)))) UNION ALL SELECT ALL t0.c0, t0.c2, rt1.c2, t0.c1 FROM rt1, v0 RIGHT OUTER JOIN t0 ON (t0.c2 IN ()) GROUP BY t0.c0, t0.c2, rt1.c2, t0.c1 HAVING (((- (NULL))) ISNULL);
SELECT ALL t0.c0, t0.c2, rt1.c2, t0.c1 FROM rt1, v0 RIGHT OUTER JOIN t0 ON (t0.c2 IN ()) GROUP BY t0.c0, t0.c2, rt1.c2, t0.c1;
SELECT t0.c0, t0.c2, rt1.c2, t0.c1 FROM rt1, v0 RIGHT OUTER JOIN t0 ON (t0.c2 IN ()) GROUP BY t0.c0, t0.c2, rt1.c2, t0.c1 HAVING (- (NULL)) UNION ALL SELECT ALL t0.c0, t0.c2, rt1.c2, t0.c1 FROM rt1, v0 RIGHT OUTER JOIN t0 ON (t0.c2 IN ()) GROUP BY t0.c0, t0.c2, rt1.c2, t0.c1 HAVING (NOT ((- (NULL)))) UNION ALL SELECT ALL t0.c0, t0.c2, rt1.c2, t0.c1 FROM rt1, v0 RIGHT OUTER JOIN t0 ON (t0.c2 IN ()) GROUP BY t0.c0, t0.c2, rt1.c2, t0.c1 HAVING (((- (NULL))) ISNULL);
SELECT ALL t0.c0, t0.c2, rt1.c2, t0.c1 FROM rt1, v0 RIGHT OUTER JOIN t0 ON (t0.c2 IN ()) GROUP BY t0.c0, t0.c2, rt1.c2, t0.c1;
SELECT rt1.c2, rt1.c1, v0.c1, t0.c2, rt1.c0, v0.c2, v0.c0, t0.c1, t0.c0 FROM t0, v0 LEFT OUTER JOIN rt1 ON NULL;
SELECT ALL rt1.c2, rt1.c1, v0.c1, t0.c2, rt1.c0, v0.c2, v0.c0, t0.c1, t0.c0 FROM t0, v0 LEFT OUTER JOIN rt1 ON NULL WHERE ((CAST('&I2s' AS INTEGER) IN (CAST(t0.c1 AS INTEGER), TYPEOF(v0.c2)))) UNION ALL SELECT rt1.c2, rt1.c1, v0.c1, t0.c2, rt1.c0, v0.c2, v0.c0, t0.c1, t0.c0 FROM t0, v0 LEFT OUTER JOIN rt1 ON NULL WHERE ((NOT ((CAST('&I2s' AS INTEGER) IN (CAST(t0.c1 AS INTEGER), TYPEOF(v0.c2)))))) UNION ALL SELECT rt1.c2, rt1.c1, v0.c1, t0.c2, rt1.c0, v0.c2, v0.c0, t0.c1, t0.c0 FROM t0, v0 LEFT OUTER JOIN rt1 ON NULL WHERE ((((CAST('&I2s' AS INTEGER) IN (CAST(t0.c1 AS INTEGER), TYPEOF(v0.c2)))) ISNULL));
SELECT rt1.c2, rt1.c1, v0.c1, t0.c2, rt1.c0, v0.c2, v0.c0, t0.c1, t0.c0 FROM t0, v0 LEFT OUTER JOIN rt1 ON NULL;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE ('OZ빻/R') UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT ('OZ빻/R'))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((('OZ빻/R') ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT v0.c2, t0.c0, v0.c1, t0.c2, t0.c1 FROM t0 INNER JOIN rt1 ON (('5') BETWEEN (((t0.c1)OR(t0.c1))) AND (((t0.c2) ISNULL))) FULL OUTER JOIN v0 ON LIKELY(-2.3949508E7) GROUP BY v0.c2, t0.c0, v0.c1, t0.c2, t0.c1;
SELECT v0.c2, t0.c0, v0.c1, t0.c2, t0.c1 FROM t0 INNER JOIN rt1 ON (('5') BETWEEN (((t0.c1)OR(t0.c1))) AND (((t0.c2) ISNULL))) FULL OUTER JOIN v0 ON LIKELY(-2.3949508E7) WHERE (UNLIKELY(DISTINCT NULL)) GROUP BY v0.c2, t0.c0, v0.c1, t0.c2, t0.c1 UNION SELECT v0.c2, t0.c0, v0.c1, t0.c2, t0.c1 FROM t0 INNER JOIN rt1 ON (('5') BETWEEN (((t0.c1)OR(t0.c1))) AND (((t0.c2) ISNULL))) FULL OUTER JOIN v0 ON LIKELY(-2.3949508E7) WHERE ((NOT (UNLIKELY(DISTINCT NULL)))) GROUP BY v0.c2, t0.c0, v0.c1, t0.c2, t0.c1 UNION SELECT v0.c2, t0.c0, v0.c1, t0.c2, t0.c1 FROM t0 INNER JOIN rt1 ON (('5') BETWEEN (((t0.c1)OR(t0.c1))) AND (((t0.c2) ISNULL))) FULL OUTER JOIN v0 ON LIKELY(-2.3949508E7) WHERE (((UNLIKELY(DISTINCT NULL)) ISNULL)) GROUP BY v0.c2, t0.c0, v0.c1, t0.c2, t0.c1;
SELECT v0.c2, t0.c0, v0.c1, t0.c2, t0.c1 FROM t0 INNER JOIN rt1 ON (('5') BETWEEN (((t0.c1)OR(t0.c1))) AND (((t0.c2) ISNULL))) FULL OUTER JOIN v0 ON LIKELY(-2.3949508E7) GROUP BY v0.c2, t0.c0, v0.c1, t0.c2, t0.c1;
SELECT rt1.c0, t0.c0 FROM t0, rt1 GROUP BY rt1.c0, t0.c0;
SELECT rt1.c0, t0.c0 FROM t0, rt1 GROUP BY rt1.c0, t0.c0 HAVING CAST(TOTAL(GROUP_CONCAT(AVG(rt1.c1))) AS TEXT) UNION ALL SELECT ALL rt1.c0, t0.c0 FROM t0 NOT INDEXED, rt1 GROUP BY rt1.c0, t0.c0 HAVING (NOT (CAST(TOTAL(GROUP_CONCAT(AVG(rt1.c1))) AS TEXT))) UNION ALL SELECT rt1.c0, t0.c0 FROM t0, rt1 GROUP BY rt1.c0, t0.c0 HAVING ((CAST(TOTAL(GROUP_CONCAT(AVG(rt1.c1))) AS TEXT)) ISNULL);
SELECT ALL TOTAL((- ((NOT (t0.c2))))) FROM t0;
SELECT ALL rt1.c1, v0.c0, v0.c1, t0.c0, t0.c1, vt0.c0, v0.c2, rt1.c0, rt1.c2, t0.c2 FROM rt1, vt0, t0, v0;
SELECT ALL rt1.c1, v0.c0, v0.c1, t0.c0, t0.c1, vt0.c0, v0.c2, rt1.c0, rt1.c2, t0.c2 FROM rt1, vt0, t0, v0 WHERE ((NOT (((t0.c1) NOT NULL)))) UNION ALL SELECT rt1.c1, v0.c0, v0.c1, t0.c0, t0.c1, vt0.c0, v0.c2, rt1.c0, rt1.c2, t0.c2 FROM rt1, vt0, t0, v0 WHERE ((NOT ((NOT (((t0.c1) NOT NULL)))))) UNION ALL SELECT rt1.c1, v0.c0, v0.c1, t0.c0, t0.c1, vt0.c0, v0.c2, rt1.c0, rt1.c2, t0.c2 FROM rt1, vt0, t0, v0 WHERE ((((NOT (((t0.c1) NOT NULL)))) ISNULL));
SELECT ALL rt1.c1, v0.c0, v0.c1, t0.c0, t0.c1, vt0.c0, v0.c2, rt1.c0, rt1.c2, t0.c2 FROM rt1, vt0, t0, v0;
SELECT DISTINCT * FROM rt1, vt0, t0;
SELECT DISTINCT * FROM rt1, vt0, t0 WHERE (0x76504077) UNION SELECT DISTINCT * FROM rt1, vt0, t0 WHERE ((NOT (0x76504077))) UNION SELECT DISTINCT * FROM rt1, vt0, t0 WHERE (((0X76504077) ISNULL));
SELECT DISTINCT * FROM rt1, vt0, t0;
SELECT t0.c0, rt1.c0 FROM t0, rt1 GROUP BY t0.c0, rt1.c0;
SELECT t0.c0, rt1.c0 FROM t0, rt1 WHERE ('-555688893') GROUP BY t0.c0, rt1.c0 UNION SELECT ALL t0.c0, rt1.c0 FROM t0, rt1 WHERE ((NOT ('-555688893'))) GROUP BY t0.c0, rt1.c0 UNION SELECT t0.c0, rt1.c0 FROM t0, rt1 WHERE ((('-555688893') ISNULL)) GROUP BY t0.c0, rt1.c0;
SELECT t0.c0, rt1.c0 FROM t0, rt1 GROUP BY t0.c0, rt1.c0;
SELECT rt1.c0, rt1.c1 FROM rt1 GROUP BY rt1.c0, rt1.c1;
SELECT rt1.c0, rt1.c1 FROM rt1 GROUP BY rt1.c0, rt1.c1 HAVING COUNT(*) UNION ALL SELECT rt1.c0, rt1.c1 FROM rt1 GROUP BY rt1.c0, rt1.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt1.c0, rt1.c1 FROM rt1 GROUP BY rt1.c0, rt1.c1 HAVING ((COUNT(*)) ISNULL);
SELECT rt1.c0, rt1.c1 FROM rt1 GROUP BY rt1.c0, rt1.c1;
SELECT rt1.c0, rt1.c1 FROM rt1 GROUP BY rt1.c0, rt1.c1 HAVING COUNT(*) UNION ALL SELECT rt1.c0, rt1.c1 FROM rt1 GROUP BY rt1.c0, rt1.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt1.c0, rt1.c1 FROM rt1 GROUP BY rt1.c0, rt1.c1 HAVING ((COUNT(*)) ISNULL);
SELECT rt1.c0, rt1.c1 FROM rt1 GROUP BY rt1.c0, rt1.c1;
SELECT rt1.c0, t0.c2 FROM t0, rt1;
SELECT rt1.c0, t0.c2 FROM t0, rt1 WHERE ((CAST(rt1.c2 AS INTEGER) IN ())) UNION ALL SELECT ALL rt1.c0, t0.c2 FROM t0, rt1 WHERE ((NOT ((CAST(rt1.c2 AS INTEGER) IN ())))) UNION ALL SELECT ALL rt1.c0, t0.c2 FROM t0, rt1 WHERE ((((CAST(rt1.c2 AS INTEGER) IN ())) ISNULL));
SELECT rt1.c0, t0.c2 FROM t0, rt1;
SELECT DISTINCT * FROM vt0, rt1, v0, t0;
SELECT DISTINCT * FROM vt0, rt1, v0, t0 WHERE (((((((((((rt1.c1)+(t0.c0)))OR(CAST(vt0.c0 AS TEXT))))AND(CAST(t0.c2 AS TEXT))))OR(((v0.c0)/(t0.c2)))))OR(CASE WHEN '彝Z%	a7,읇' THEN rt1.c2 WHEN vt0.c0 THEN v0.c2 WHEN v0.c2 THEN t0.c0 ELSE rt1.c1 END))) UNION SELECT DISTINCT * FROM vt0, rt1, v0, t0 WHERE ((NOT (((((((((((rt1.c1)+(t0.c0)))OR(CAST(vt0.c0 AS TEXT))))AND(CAST(t0.c2 AS TEXT))))OR(((v0.c0)/(t0.c2)))))OR(CASE WHEN '彝Z%	a7,읇' THEN rt1.c2 WHEN vt0.c0 THEN v0.c2 WHEN v0.c2 THEN t0.c0 ELSE rt1.c1 END))))) UNION SELECT DISTINCT * FROM vt0, rt1, v0, t0 WHERE (((((((((((((rt1.c1)+(t0.c0)))OR(CAST(vt0.c0 AS TEXT))))AND(CAST(t0.c2 AS TEXT))))OR(((v0.c0)/(t0.c2)))))OR(CASE WHEN '彝Z%	a7,읇' THEN rt1.c2 WHEN vt0.c0 THEN v0.c2 WHEN v0.c2 THEN t0.c0 ELSE rt1.c1 END))) ISNULL));
SELECT DISTINCT * FROM vt0, rt1, v0, t0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (NULL) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (NULL))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((NULL) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT rt1.c1, v0.c0, vt0.c0, t0.c0, t0.c2, rt1.c0, v0.c1, rt1.c2 FROM rt1, v0, t0, vt0 GROUP BY rt1.c1, v0.c0, vt0.c0, t0.c0, t0.c2, rt1.c0, v0.c1, rt1.c2;
SELECT rt1.c1, v0.c0, vt0.c0, t0.c0, t0.c2, rt1.c0, v0.c1, rt1.c2 FROM rt1, v0, t0, vt0 GROUP BY rt1.c1, v0.c0, vt0.c0, t0.c0, t0.c2, rt1.c0, v0.c1, rt1.c2 HAVING x'' UNION ALL SELECT ALL rt1.c1, v0.c0, vt0.c0, t0.c0, t0.c2, rt1.c0, v0.c1, rt1.c2 FROM rt1, v0, t0, vt0 GROUP BY rt1.c1, v0.c0, vt0.c0, t0.c0, t0.c2, rt1.c0, v0.c1, rt1.c2 HAVING (NOT (x'')) UNION ALL SELECT ALL rt1.c1, v0.c0, vt0.c0, t0.c0, t0.c2, rt1.c0, v0.c1, rt1.c2 FROM rt1, v0, t0, vt0 GROUP BY rt1.c1, v0.c0, vt0.c0, t0.c0, t0.c2, rt1.c0, v0.c1, rt1.c2 HAVING ((x'') ISNULL);
SELECT rt1.c1, v0.c0, vt0.c0, t0.c0, t0.c2, rt1.c0, v0.c1, rt1.c2 FROM rt1, v0, t0, vt0 GROUP BY rt1.c1, v0.c0, vt0.c0, t0.c0, t0.c2, rt1.c0, v0.c1, rt1.c2;
SELECT rt1.c1, v0.c0, vt0.c0, t0.c0, t0.c2, rt1.c0, v0.c1, rt1.c2 FROM rt1, v0, t0, vt0 GROUP BY rt1.c1, v0.c0, vt0.c0, t0.c0, t0.c2, rt1.c0, v0.c1, rt1.c2 HAVING x'' UNION ALL SELECT ALL rt1.c1, v0.c0, vt0.c0, t0.c0, t0.c2, rt1.c0, v0.c1, rt1.c2 FROM rt1, v0, t0, vt0 GROUP BY rt1.c1, v0.c0, vt0.c0, t0.c0, t0.c2, rt1.c0, v0.c1, rt1.c2 HAVING (NOT (x'')) UNION ALL SELECT ALL rt1.c1, v0.c0, vt0.c0, t0.c0, t0.c2, rt1.c0, v0.c1, rt1.c2 FROM rt1, v0, t0, vt0 GROUP BY rt1.c1, v0.c0, vt0.c0, t0.c0, t0.c2, rt1.c0, v0.c1, rt1.c2 HAVING ((x'') ISNULL);
SELECT rt1.c1, v0.c0, vt0.c0, t0.c0, t0.c2, rt1.c0, v0.c1, rt1.c2 FROM rt1, v0, t0, vt0 GROUP BY rt1.c1, v0.c0, vt0.c0, t0.c0, t0.c2, rt1.c0, v0.c1, rt1.c2;
SELECT ALL v0.c0, v0.c2, rt1.c1, v0.c1, rt1.c0 FROM vt0 CROSS JOIN v0 ON CAST(((rt1.c1) BETWEEN (rt1.c2) AND (vt0.c0)) AS TEXT) LEFT OUTER JOIN rt1 ON CASE WHEN (('') BETWEEN (1882754698) AND (v0.c1)) THEN ((((vt0.c0)AND(rt1.c1)))OR(rt1.c1)) END;
SELECT ALL v0.c0, v0.c2, rt1.c1, v0.c1, rt1.c0 FROM vt0 CROSS JOIN v0 ON CAST(((rt1.c1) BETWEEN (rt1.c2) AND (vt0.c0)) AS TEXT) LEFT OUTER JOIN rt1 ON CASE WHEN (('') BETWEEN (1882754698) AND (v0.c1)) THEN ((((vt0.c0)AND(rt1.c1)))OR(rt1.c1)) END WHERE (CAST(((rt1.c0) BETWEEN (rt1.c0) AND (v0.c0)) AS BLOB)) UNION ALL SELECT v0.c0, v0.c2, rt1.c1, v0.c1, rt1.c0 FROM vt0 CROSS JOIN v0 ON CAST(((rt1.c1) BETWEEN (rt1.c2) AND (vt0.c0)) AS TEXT) LEFT OUTER JOIN rt1 ON CASE WHEN (('') BETWEEN (1882754698) AND (v0.c1)) THEN ((((vt0.c0)AND(rt1.c1)))OR(rt1.c1)) END WHERE ((NOT (CAST(((rt1.c0) BETWEEN (rt1.c0) AND (v0.c0)) AS BLOB)))) UNION ALL SELECT v0.c0, v0.c2, rt1.c1, v0.c1, rt1.c0 FROM vt0 CROSS JOIN v0 ON CAST(((rt1.c1) BETWEEN (rt1.c2) AND (vt0.c0)) AS TEXT) LEFT OUTER JOIN rt1 ON CASE WHEN (('') BETWEEN (1882754698) AND (v0.c1)) THEN ((((vt0.c0)AND(rt1.c1)))OR(rt1.c1)) END WHERE (((CAST(((rt1.c0) BETWEEN (rt1.c0) AND (v0.c0)) AS BLOB)) ISNULL));
SELECT ALL v0.c0, v0.c2, rt1.c1, v0.c1, rt1.c0 FROM vt0 CROSS JOIN v0 ON CAST(((rt1.c1) BETWEEN (rt1.c2) AND (vt0.c0)) AS TEXT) LEFT OUTER JOIN rt1 ON CASE WHEN (('') BETWEEN (1882754698) AND (v0.c1)) THEN ((((vt0.c0)AND(rt1.c1)))OR(rt1.c1)) END;
SELECT DISTINCT t0.c2, vt0.c0, t0.c0, rt1.c1, t0.c1, rt1.c2, rt1.c0 FROM vt0, t0, rt1;
SELECT DISTINCT t0.c2, vt0.c0, t0.c0, rt1.c1, t0.c1, rt1.c2, rt1.c0 FROM vt0, t0, rt1 WHERE ((((- (-391430500)))<=((0.9074614856843236 IN ())))) UNION SELECT DISTINCT t0.c2, vt0.c0, t0.c0, rt1.c1, t0.c1, rt1.c2, rt1.c0 FROM vt0, t0, rt1 WHERE ((NOT ((((- (-391430500)))<=((0.9074614856843236 IN ())))))) UNION SELECT DISTINCT t0.c2, vt0.c0, t0.c0, rt1.c1, t0.c1, rt1.c2, rt1.c0 FROM vt0, t0, rt1 WHERE ((((((- (-391430500)))<=((0.9074614856843236 IN ())))) ISNULL));
SELECT DISTINCT t0.c2, vt0.c0, t0.c0, rt1.c1, t0.c1, rt1.c2, rt1.c0 FROM vt0, t0, rt1;
SELECT ALL t0.c2, v0.c2, rt1.c0, t0.c1, rt1.c2, v0.c1 FROM t0, v0, rt1 GROUP BY t0.c2, v0.c2, rt1.c0, t0.c1, rt1.c2, v0.c1;
SELECT ALL t0.c2, v0.c2, rt1.c0, t0.c1, rt1.c2, v0.c1 FROM t0, v0, rt1 WHERE (((TYPEOF(DISTINCT t0.c1))=(CASE t0.c0  WHEN t0.c1 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c2 THEN t0.c2 ELSE 0.24199076629693095 END))) GROUP BY t0.c2, v0.c2, rt1.c0, t0.c1, rt1.c2, v0.c1 UNION SELECT t0.c2, v0.c2, rt1.c0, t0.c1, rt1.c2, v0.c1 FROM t0, v0, rt1 WHERE ((NOT (((TYPEOF(DISTINCT t0.c1))==(CASE t0.c0  WHEN t0.c1 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c2 THEN t0.c2 ELSE 0.24199076629693095 END))))) GROUP BY t0.c2, v0.c2, rt1.c0, t0.c1, rt1.c2, v0.c1 UNION SELECT ALL t0.c2, v0.c2, rt1.c0, t0.c1, rt1.c2, v0.c1 FROM t0, v0, rt1 WHERE (((((TYPEOF(DISTINCT t0.c1))=(CASE t0.c0  WHEN t0.c1 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c2 THEN t0.c2 ELSE 0.24199076629693095 END))) ISNULL)) GROUP BY t0.c2, v0.c2, rt1.c0, t0.c1, rt1.c2, v0.c1;
SELECT ALL t0.c2, v0.c2, rt1.c0, t0.c1, rt1.c2, v0.c1 FROM t0, v0, rt1 GROUP BY t0.c2, v0.c2, rt1.c0, t0.c1, rt1.c2, v0.c1;
SELECT ALL t0.c2, t0.c0 FROM t0, v0, vt0, rt1 GROUP BY t0.c2, t0.c0;
SELECT ALL t0.c2, t0.c0 FROM t0, v0, vt0, rt1 GROUP BY t0.c2, t0.c0 HAVING COUNT(*) UNION ALL SELECT t0.c2, t0.c0 FROM t0, v0, vt0, rt1 GROUP BY t0.c2, t0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT t0.c2, t0.c0 FROM t0, v0, vt0, rt1 GROUP BY t0.c2, t0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL t0.c2, t0.c0 FROM t0, v0, vt0, rt1 GROUP BY t0.c2, t0.c0;
SELECT ALL t0.c2, t0.c0 FROM t0, v0, vt0, rt1 GROUP BY t0.c2, t0.c0 HAVING COUNT(*) UNION ALL SELECT t0.c2, t0.c0 FROM t0, v0, vt0, rt1 GROUP BY t0.c2, t0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT t0.c2, t0.c0 FROM t0, v0, vt0, rt1 GROUP BY t0.c2, t0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL t0.c2, t0.c0 FROM t0, v0, vt0, rt1 GROUP BY t0.c2, t0.c0;
SELECT v0.c0, v0.c1, t0.c0, v0.c2, t0.c2, rt1.c2, t0.c1, rt1.c1 FROM rt1 INNER JOIN t0 ON (~ ((((v0.c1)) NOT BETWEEN ((v0.c1)) AND ((rt1.c0))))) LEFT OUTER JOIN v0 ON NULLIF(DISTINCT CASE t0.c2  WHEN t0.c2 THEN v0.c2 ELSE v0.c2 END, rt1.c1 COLLATE BINARY);
SELECT v0.c0, v0.c1, t0.c0, v0.c2, t0.c2, rt1.c2, t0.c1, rt1.c1 FROM rt1 INNER JOIN t0 ON (~ ((((v0.c1)) NOT BETWEEN ((v0.c1)) AND ((rt1.c0))))) LEFT OUTER JOIN v0 ON NULLIF(DISTINCT CASE t0.c2  WHEN t0.c2 THEN v0.c2 ELSE v0.c2 END, rt1.c1 COLLATE BINARY) WHERE (t0.c0) UNION ALL SELECT v0.c0, v0.c1, t0.c0, v0.c2, t0.c2, rt1.c2, t0.c1, rt1.c1 FROM rt1 INNER JOIN t0 ON (~ ((((v0.c1)) NOT BETWEEN ((v0.c1)) AND ((rt1.c0))))) LEFT OUTER JOIN v0 ON NULLIF(DISTINCT CASE t0.c2  WHEN t0.c2 THEN v0.c2 ELSE v0.c2 END, rt1.c1 COLLATE BINARY) WHERE ((NOT (t0.c0))) UNION ALL SELECT ALL v0.c0, v0.c1, t0.c0, v0.c2, t0.c2, rt1.c2, t0.c1, rt1.c1 FROM rt1 INNER JOIN t0 ON (~ ((((v0.c1)) NOT BETWEEN ((v0.c1)) AND ((rt1.c0))))) LEFT OUTER JOIN v0 ON NULLIF(DISTINCT CASE t0.c2  WHEN t0.c2 THEN v0.c2 ELSE v0.c2 END, rt1.c1 COLLATE BINARY) WHERE (((t0.c0) ISNULL));
SELECT v0.c0, v0.c1, t0.c0, v0.c2, t0.c2, rt1.c2, t0.c1, rt1.c1 FROM rt1 INNER JOIN t0 ON (~ ((((v0.c1)) NOT BETWEEN ((v0.c1)) AND ((rt1.c0))))) LEFT OUTER JOIN v0 ON NULLIF(DISTINCT CASE t0.c2  WHEN t0.c2 THEN v0.c2 ELSE v0.c2 END, rt1.c1 COLLATE BINARY);
SELECT DISTINCT v0.c0, t0.c1, rt1.c2, rt1.c1, rt1.c0, t0.c2, v0.c2 FROM rt1, v0 RIGHT OUTER JOIN t0 ON t0.c2;
SELECT DISTINCT v0.c0, t0.c1, rt1.c2, rt1.c1, rt1.c0, t0.c2, v0.c2 FROM rt1, v0 RIGHT OUTER JOIN t0 ON t0.c2 WHERE (((((NULL)-(t0.c0))) BETWEEN (CAST(t0.c2 AS REAL)) AND ((+ (rt1.c1))))) UNION SELECT DISTINCT v0.c0, t0.c1, rt1.c2, rt1.c1, rt1.c0, t0.c2, v0.c2 FROM rt1, v0 RIGHT OUTER JOIN t0 ON t0.c2 WHERE ((NOT (((((NULL)-(t0.c0))) BETWEEN (CAST(t0.c2 AS REAL)) AND ((+ (rt1.c1))))))) UNION SELECT DISTINCT v0.c0, t0.c1, rt1.c2, rt1.c1, rt1.c0, t0.c2, v0.c2 FROM rt1, v0 RIGHT OUTER JOIN t0 ON t0.c2 WHERE (((((((NULL)-(t0.c0))) BETWEEN (CAST(t0.c2 AS REAL)) AND ((+ (rt1.c1))))) ISNULL));
SELECT DISTINCT v0.c0, t0.c1, rt1.c2, rt1.c1, rt1.c0, t0.c2, v0.c2 FROM rt1, v0 RIGHT OUTER JOIN t0 ON t0.c2;
SELECT ALL v0.c0, rt1.c2, v0.c2, vt0.c0 FROM v0, vt0, rt1 GROUP BY v0.c0, rt1.c2, v0.c2, vt0.c0;
SELECT ALL v0.c0, rt1.c2, v0.c2, vt0.c0 FROM v0, vt0, rt1 WHERE (CASE ((v0.c1) NOT BETWEEN ('j.p.|ioi') AND (rt1.c2))  WHEN CASE vt0.c0  WHEN v0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN ((((((((rt1.c1)OR(v0.c0)))OR(v0.c2)))AND(rt1.c2)))OR(rt1.c2)) ELSE v0.c1 END) GROUP BY v0.c0, rt1.c2, v0.c2, vt0.c0 UNION SELECT v0.c0, rt1.c2, v0.c2, vt0.c0 FROM v0, vt0, rt1 WHERE ((NOT (CASE ((v0.c1) NOT BETWEEN ('j.p.|ioi') AND (rt1.c2))  WHEN CASE vt0.c0  WHEN v0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN ((((((((rt1.c1)OR(v0.c0)))OR(v0.c2)))AND(rt1.c2)))OR(rt1.c2)) ELSE v0.c1 END))) GROUP BY v0.c0, rt1.c2, v0.c2, vt0.c0 UNION SELECT v0.c0, rt1.c2, v0.c2, vt0.c0 FROM v0, vt0, rt1 WHERE (((CASE ((v0.c1) NOT BETWEEN ('j.p.|ioi') AND (rt1.c2))  WHEN CASE vt0.c0  WHEN v0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN ((((((((rt1.c1)OR(v0.c0)))OR(v0.c2)))AND(rt1.c2)))OR(rt1.c2)) ELSE v0.c1 END) ISNULL)) GROUP BY v0.c0, rt1.c2, v0.c2, vt0.c0;
SELECT ALL v0.c0, rt1.c2, v0.c2, vt0.c0 FROM v0, vt0, rt1 GROUP BY v0.c0, rt1.c2, v0.c2, vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING COUNT(AVG(vt0.c0)) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(AVG(vt0.c0)))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT(AVG(vt0.c0))) ISNULL);
SELECT ALL t0.c0, t0.c1, t0.c2 FROM t0;
SELECT ALL t0.c0, t0.c1, t0.c2 FROM t0 WHERE ((+ ((t0.c1 IN (0.2517598242760315))))) UNION ALL SELECT ALL t0.c0, t0.c1, t0.c2 FROM t0 WHERE ((NOT ((+ ((t0.c1 IN (0.2517598242760315))))))) UNION ALL SELECT ALL t0.c0, t0.c1, t0.c2 FROM t0 WHERE ((((+ ((t0.c1 IN (0.2517598242760315))))) ISNULL));
SELECT ALL t0.c0, t0.c1, t0.c2 FROM t0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (CAST((~ (v0.c0)) AS REAL)) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (CAST((~ (v0.c0)) AS REAL)))) UNION SELECT DISTINCT * FROM v0 WHERE (((CAST((~ (v0.c0)) AS REAL)) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT ALL v0.c1, t0.c2, v0.c0, t0.c1, vt0.c0, t0.c0 FROM vt0 FULL OUTER JOIN t0 ON (((vt0.c0, ((v0.c1) NOT NULL), ((((t0.c2)OR(t0.c1)))AND(v0.c0))))>=(((- (v0.c2)), v0.c1, CASE WHEN t0.c2 THEN v0.c2 ELSE v0.c0 END))) LEFT OUTER JOIN v0 ON ((((vt0.c0 COLLATE BINARY)OR('-225683146')))AND(((t0.c1)||(vt0.c0)))) GROUP BY v0.c1, t0.c2, v0.c0, t0.c1, vt0.c0, t0.c0;
SELECT ALL vt0.c0 FROM v0, t0, rt1, vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM v0, t0, rt1, vt0 GROUP BY vt0.c0 HAVING ((COUNT(*)) IS TRUE) UNION ALL SELECT vt0.c0 FROM v0, t0, rt1, vt0 GROUP BY vt0.c0 HAVING (NOT (((COUNT(*)) IS TRUE))) UNION ALL SELECT ALL vt0.c0 FROM v0, t0, rt1, vt0 GROUP BY vt0.c0 HAVING ((((COUNT(*)) IS TRUE)) ISNULL);
SELECT ALL vt0.c0 FROM v0, t0, rt1, vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM v0, t0, rt1, vt0 GROUP BY vt0.c0 HAVING ((COUNT(*)) IS TRUE) UNION ALL SELECT vt0.c0 FROM v0, t0, rt1, vt0 GROUP BY vt0.c0 HAVING (NOT (((COUNT(*)) IS TRUE))) UNION ALL SELECT ALL vt0.c0 FROM v0, t0, rt1, vt0 GROUP BY vt0.c0 HAVING ((((COUNT(*)) IS TRUE)) ISNULL);
SELECT ALL vt0.c0 FROM v0, t0, rt1, vt0 GROUP BY vt0.c0;
SELECT * FROM t0;
SELECT * FROM t0 WHERE ((NOT (t0.c0)) COLLATE RTRIM) UNION ALL SELECT * FROM t0 WHERE ((NOT ((NOT (t0.c0)) COLLATE RTRIM))) UNION ALL SELECT ALL * FROM t0 WHERE ((((NOT (t0.c0)) COLLATE RTRIM) ISNULL));
SELECT * FROM t0;
SELECT DISTINCT t0.c0, rt1.c1, rt1.c0, t0.c2 FROM rt1, t0;
SELECT DISTINCT t0.c0, rt1.c1, rt1.c0, t0.c2 FROM rt1, t0 WHERE ((((((rt1.c0))>=((rt1.c0)))) NOT BETWEEN (CASE WHEN rt1.c1 THEN rt1.c0 END) AND ('1044270701'))) UNION SELECT DISTINCT t0.c0, rt1.c1, rt1.c0, t0.c2 FROM rt1, t0 WHERE ((NOT ((((((rt1.c0))>=((rt1.c0)))) NOT BETWEEN (CASE WHEN rt1.c1 THEN rt1.c0 END) AND ('1044270701'))))) UNION SELECT DISTINCT t0.c0, rt1.c1, rt1.c0, t0.c2 FROM rt1, t0 WHERE ((((((((rt1.c0))>=((rt1.c0)))) NOT BETWEEN (CASE WHEN rt1.c1 THEN rt1.c0 END) AND ('1044270701'))) ISNULL));
SELECT DISTINCT t0.c0, rt1.c1, rt1.c0, t0.c2 FROM rt1, t0;
SELECT rt1.c0, v0.c1, rt1.c2 FROM v0, rt1 GROUP BY rt1.c0, v0.c1, rt1.c2;
SELECT rt1.c0, v0.c1, rt1.c2 FROM v0, rt1 WHERE (rtreenode((((rt1.c1))<((v0.c1))), x'')) GROUP BY rt1.c0, v0.c1, rt1.c2 UNION SELECT ALL rt1.c0, v0.c1, rt1.c2 FROM v0, rt1 WHERE ((NOT (rtreenode((((rt1.c1))<((v0.c1))), x'')))) GROUP BY rt1.c0, v0.c1, rt1.c2 UNION SELECT rt1.c0, v0.c1, rt1.c2 FROM v0, rt1 WHERE (((rtreenode((((rt1.c1))<((v0.c1))), x'')) ISNULL)) GROUP BY rt1.c0, v0.c1, rt1.c2;
SELECT rt1.c0, v0.c1, rt1.c2 FROM v0, rt1 GROUP BY rt1.c0, v0.c1, rt1.c2;
SELECT ALL t0.c1, rt1.c0, v0.c2, vt0.c0, t0.c2, v0.c0, rt1.c2, rt1.c1 FROM vt0, rt1, t0, v0 GROUP BY t0.c1, rt1.c0, v0.c2, vt0.c0, t0.c2, v0.c0, rt1.c2, rt1.c1;
SELECT t0.c1, rt1.c0, v0.c2, vt0.c0, t0.c2, v0.c0, rt1.c2, rt1.c1 FROM vt0, rt1, t0, v0 GROUP BY t0.c1, rt1.c0, v0.c2, vt0.c0, t0.c2, v0.c0, rt1.c2, rt1.c1 HAVING ((GROUP_CONCAT(MAX(COUNT(COUNT(MAX(v0.c1))))))|(SUM(t0.c0))) UNION ALL SELECT t0.c1, rt1.c0, v0.c2, vt0.c0, t0.c2, v0.c0, rt1.c2, rt1.c1 FROM vt0, rt1, t0, v0 GROUP BY t0.c1, rt1.c0, v0.c2, vt0.c0, t0.c2, v0.c0, rt1.c2, rt1.c1 HAVING (NOT (((GROUP_CONCAT(MAX(COUNT(COUNT(MAX(v0.c1))))))|(SUM(t0.c0))))) UNION ALL SELECT ALL t0.c1, rt1.c0, v0.c2, vt0.c0, t0.c2, v0.c0, rt1.c2, rt1.c1 FROM vt0, rt1, t0, v0 GROUP BY t0.c1, rt1.c0, v0.c2, vt0.c0, t0.c2, v0.c0, rt1.c2, rt1.c1 HAVING ((((GROUP_CONCAT(MAX(COUNT(COUNT(MAX(v0.c1))))))|(SUM(t0.c0)))) ISNULL);
SELECT t0.c0, t0.c2, rt1.c0, rt1.c2, rt1.c1 FROM t0, rt1;
SELECT t0.c0, t0.c2, rt1.c0, rt1.c2, rt1.c1 FROM t0, rt1 WHERE (t0.c1) UNION ALL SELECT t0.c0, t0.c2, rt1.c0, rt1.c2, rt1.c1 FROM t0, rt1 WHERE ((NOT (t0.c1))) UNION ALL SELECT t0.c0, t0.c2, rt1.c0, rt1.c2, rt1.c1 FROM t0, rt1 WHERE (((t0.c1) ISNULL));
SELECT t0.c0, t0.c2, rt1.c0, rt1.c2, rt1.c1 FROM t0, rt1;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (UNLIKELY(DISTINCT ((((0X7c0a7313)AND(vt0.c0)))AND(vt0.c0)))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (UNLIKELY(DISTINCT ((((0x7c0a7313)AND(vt0.c0)))AND(vt0.c0)))))) UNION SELECT DISTINCT * FROM vt0 WHERE (((UNLIKELY(DISTINCT ((((0x7c0a7313)AND(vt0.c0)))AND(vt0.c0)))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL rt1.c0, rt1.c2, rt1.c1 FROM rt1 GROUP BY rt1.c0, rt1.c2, rt1.c1;
SELECT ALL rt1.c0, rt1.c2, rt1.c1 FROM rt1 WHERE (((((rt1.c1) NOT BETWEEN (rt1.c2) AND (rt1.c1)))<=((- (rt1.c0))))) GROUP BY rt1.c0, rt1.c2, rt1.c1 UNION SELECT ALL rt1.c0, rt1.c2, rt1.c1 FROM rt1 WHERE ((NOT (((((rt1.c1) NOT BETWEEN (rt1.c2) AND (rt1.c1)))<=((- (rt1.c0))))))) GROUP BY rt1.c0, rt1.c2, rt1.c1 UNION SELECT ALL rt1.c0, rt1.c2, rt1.c1 FROM rt1 NOT INDEXED WHERE (((((((rt1.c1) NOT BETWEEN (rt1.c2) AND (rt1.c1)))<=((- (rt1.c0))))) ISNULL)) GROUP BY rt1.c0, rt1.c2, rt1.c1;
SELECT ALL rt1.c0, rt1.c2, rt1.c1 FROM rt1 GROUP BY rt1.c0, rt1.c2, rt1.c1;
SELECT ALL t0.c2, v0.c1, v0.c2 FROM vt0, v0, t0 GROUP BY t0.c2, v0.c1, v0.c2;
SELECT t0.c2, v0.c1, v0.c2 FROM vt0, v0, t0 GROUP BY t0.c2, v0.c1, v0.c2 HAVING (((t0.c1)) NOT BETWEEN ((COUNT(*))) AND ((TOTAL(MIN(COUNT(v0.c0)))))) UNION ALL SELECT t0.c2, v0.c1, v0.c2 FROM vt0, v0, t0 GROUP BY t0.c2, v0.c1, v0.c2 HAVING (NOT ((((t0.c1)) NOT BETWEEN ((COUNT(*))) AND ((TOTAL(MIN(COUNT(v0.c0)))))))) UNION ALL SELECT t0.c2, v0.c1, v0.c2 FROM vt0, v0, t0 GROUP BY t0.c2, v0.c1, v0.c2 HAVING (((((t0.c1)) NOT BETWEEN ((COUNT(*))) AND ((TOTAL(MIN(COUNT(v0.c0))))))) ISNULL);
SELECT * FROM rt1 FULL OUTER JOIN v0 ON ((((rt1.c0 COLLATE RTRIM)OR(((rt1.c2) NOTNULL))))AND(((rt1.c2) NOT BETWEEN (x'73b0') AND (v0.c2))));
SELECT ALL * FROM rt1 FULL OUTER JOIN v0 ON ((((rt1.c0 COLLATE RTRIM)OR(((rt1.c2) NOTNULL))))AND(((rt1.c2) NOT BETWEEN (x'73b0') AND (v0.c2)))) WHERE ((+ (((rt1.c1) IS FALSE)))) UNION ALL SELECT * FROM rt1 FULL OUTER JOIN v0 ON ((((rt1.c0 COLLATE RTRIM)OR(((rt1.c2) NOTNULL))))AND(((rt1.c2) NOT BETWEEN (x'73b0') AND (v0.c2)))) WHERE ((NOT ((+ (((rt1.c1) IS FALSE)))))) UNION ALL SELECT ALL * FROM rt1 FULL OUTER JOIN v0 ON ((((rt1.c0 COLLATE RTRIM)OR(((rt1.c2) NOTNULL))))AND(((rt1.c2) NOT BETWEEN (x'73b0') AND (v0.c2)))) WHERE ((((+ (((rt1.c1) IS FALSE)))) ISNULL));
SELECT * FROM rt1 FULL OUTER JOIN v0 ON ((((rt1.c0 COLLATE RTRIM)OR(((rt1.c2) NOTNULL))))AND(((rt1.c2) NOT BETWEEN (x'73b0') AND (v0.c2))));
SELECT DISTINCT * FROM v0, rt1, t0;
SELECT DISTINCT * FROM v0, rt1, t0 WHERE (((((v0.c0)AND(CASE WHEN rt1.c1 THEN rt1.c0 WHEN t0.c2 THEN t0.c1 WHEN rt1.c2 THEN v0.c0 ELSE rt1.c2 END)))OR((- (t0.c2))))) UNION SELECT DISTINCT * FROM v0, rt1, t0 WHERE ((NOT (((((v0.c0)AND(CASE WHEN rt1.c1 THEN rt1.c0 WHEN t0.c2 THEN t0.c1 WHEN rt1.c2 THEN v0.c0 ELSE rt1.c2 END)))OR((- (t0.c2))))))) UNION SELECT DISTINCT * FROM v0, rt1, t0 WHERE (((((((v0.c0)AND(CASE WHEN rt1.c1 THEN rt1.c0 WHEN t0.c2 THEN t0.c1 WHEN rt1.c2 THEN v0.c0 ELSE rt1.c2 END)))OR((- (t0.c2))))) ISNULL));
SELECT DISTINCT * FROM v0, rt1, t0;
SELECT ALL rt1.c2, rt1.c1, vt0.c0, rt1.c0 FROM rt1, t0, v0, vt0 GROUP BY rt1.c2, rt1.c1, vt0.c0, rt1.c0;
SELECT rt1.c2, rt1.c1, vt0.c0, rt1.c0 FROM rt1, t0, v0, vt0 WHERE ((((- (t0.c1)))*(((v0.c1) IS TRUE)))) GROUP BY rt1.c2, rt1.c1, vt0.c0, rt1.c0 UNION SELECT ALL rt1.c2, rt1.c1, vt0.c0, rt1.c0 FROM rt1, t0, v0, vt0 WHERE ((NOT ((((- (t0.c1)))*(((v0.c1) IS TRUE)))))) GROUP BY rt1.c2, rt1.c1, vt0.c0, rt1.c0 UNION SELECT ALL rt1.c2, rt1.c1, vt0.c0, rt1.c0 FROM rt1, t0, v0, vt0 WHERE ((((((- (t0.c1)))*(((v0.c1) IS TRUE)))) ISNULL)) GROUP BY rt1.c2, rt1.c1, vt0.c0, rt1.c0;
SELECT ALL rt1.c2, rt1.c1, vt0.c0, rt1.c0 FROM rt1, t0, v0, vt0 GROUP BY rt1.c2, rt1.c1, vt0.c0, rt1.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING MIN(SUM(SUM(vt0.c0))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (MIN(SUM(SUM(vt0.c0))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((MIN(SUM(SUM(vt0.c0)))) ISNULL);
SELECT ALL TOTAL(LIKELIHOOD(((((v0.c2)AND(v0.c2)))AND(v0.c1)), 0.9951004214929157)) FROM v0, vt0;
SELECT ALL v0.c0, vt0.c0, t0.c2, rt1.c2, t0.c1, rt1.c0, t0.c0, v0.c2, v0.c1, rt1.c1 FROM t0, vt0, v0, rt1;
SELECT v0.c0, vt0.c0, t0.c2, rt1.c2, t0.c1, rt1.c0, t0.c0, v0.c2, v0.c1, rt1.c1 FROM t0, vt0, v0, rt1 WHERE (CASE v0.c2  WHEN rt1.c1 THEN v0.c2 ELSE v0.c0 END COLLATE NOCASE) UNION ALL SELECT v0.c0, vt0.c0, t0.c2, rt1.c2, t0.c1, rt1.c0, t0.c0, v0.c2, v0.c1, rt1.c1 FROM t0, vt0, v0, rt1 WHERE ((NOT (CASE v0.c2  WHEN rt1.c1 THEN v0.c2 ELSE v0.c0 END COLLATE NOCASE))) UNION ALL SELECT v0.c0, vt0.c0, t0.c2, rt1.c2, t0.c1, rt1.c0, t0.c0, v0.c2, v0.c1, rt1.c1 FROM t0, vt0, v0, rt1 WHERE (((CASE v0.c2  WHEN rt1.c1 THEN v0.c2 ELSE v0.c0 END COLLATE NOCASE) ISNULL));
SELECT ALL v0.c0, vt0.c0, t0.c2, rt1.c2, t0.c1, rt1.c0, t0.c0, v0.c2, v0.c1, rt1.c1 FROM t0, vt0, v0, rt1;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE ((((('457040029')OR((~ (t0.c1)))))OR(HEX(DISTINCT t0.c1)))) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT ((((('457040029')OR((~ (t0.c1)))))OR(HEX(DISTINCT t0.c1)))))) UNION SELECT DISTINCT * FROM t0 WHERE ((((((('457040029')OR((~ (t0.c1)))))OR(HEX(DISTINCT t0.c1)))) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT vt0.c0, v0.c1, rt1.c0 FROM rt1, vt0, v0 GROUP BY vt0.c0, v0.c1, rt1.c0;
SELECT ALL vt0.c0, v0.c1, rt1.c0 FROM rt1, vt0, v0 WHERE (((x'258c') IS FALSE) COLLATE BINARY) GROUP BY vt0.c0, v0.c1, rt1.c0 UNION SELECT vt0.c0, v0.c1, rt1.c0 FROM rt1 NOT INDEXED, vt0, v0 WHERE ((NOT (((x'258c') IS FALSE) COLLATE BINARY))) GROUP BY vt0.c0, v0.c1, rt1.c0 UNION SELECT ALL vt0.c0, v0.c1, rt1.c0 FROM rt1, vt0, v0 WHERE (((((x'258c') IS FALSE) COLLATE BINARY) ISNULL)) GROUP BY vt0.c0, v0.c1, rt1.c0;
SELECT vt0.c0, v0.c1, rt1.c0 FROM rt1, vt0, v0 GROUP BY vt0.c0, v0.c1, rt1.c0;
SELECT ALL v0.c1, v0.c0 FROM v0 GROUP BY v0.c1, v0.c0;
SELECT v0.c1, v0.c0 FROM v0 GROUP BY v0.c1, v0.c0 HAVING ((((((MIN(TOTAL(v0.c1))) IS TRUE))OR(COUNT(*))))OR(MAX(SUM(SUM(MIN(v0.c1)))))) UNION ALL SELECT ALL v0.c1, v0.c0 FROM v0 GROUP BY v0.c1, v0.c0 HAVING (NOT (((((((MIN(TOTAL(v0.c1))) IS TRUE))OR(COUNT(*))))OR(MAX(SUM(SUM(MIN(v0.c1)))))))) UNION ALL SELECT ALL v0.c1, v0.c0 FROM v0 GROUP BY v0.c1, v0.c0 HAVING ((((((((MIN(TOTAL(v0.c1))) IS TRUE))OR(COUNT(*))))OR(MAX(SUM(SUM(MIN(v0.c1))))))) ISNULL);
SELECT ALL * FROM v0;
SELECT * FROM v0 WHERE (CAST(NULL AS BLOB)) UNION ALL SELECT * FROM v0 WHERE ((NOT (CAST(NULL AS BLOB)))) UNION ALL SELECT * FROM v0 WHERE (((CAST(NULL AS BLOB)) ISNULL));
SELECT ALL * FROM v0;
SELECT DISTINCT * FROM rt1, vt0, v0;
SELECT DISTINCT * FROM rt1, vt0, v0 WHERE ((~ (ABS(rt1.c2)))) UNION SELECT DISTINCT * FROM rt1, vt0, v0 WHERE ((NOT ((~ (ABS(rt1.c2)))))) UNION SELECT DISTINCT * FROM rt1, vt0, v0 WHERE ((((~ (ABS(rt1.c2)))) ISNULL));
SELECT DISTINCT * FROM rt1, vt0, v0;
SELECT t0.c0, rt1.c0 FROM rt1 INNER JOIN t0 ON 0.2553561051399019 GROUP BY t0.c0, rt1.c0;
SELECT t0.c0, rt1.c0 FROM rt1 INNER JOIN t0 ON 0.2553561051399019 WHERE (rt1.c0) GROUP BY t0.c0, rt1.c0 UNION SELECT ALL t0.c0, rt1.c0 FROM rt1 INNER JOIN t0 ON 0.2553561051399019 WHERE ((NOT (rt1.c0))) GROUP BY t0.c0, rt1.c0 UNION SELECT t0.c0, rt1.c0 FROM rt1 INNER JOIN t0 ON 0.2553561051399019 WHERE (((rt1.c0) ISNULL)) GROUP BY t0.c0, rt1.c0;
SELECT t0.c0, rt1.c0 FROM rt1 INNER JOIN t0 ON 0.2553561051399019 GROUP BY t0.c0, rt1.c0;
SELECT v0.c1 FROM v0 FULL OUTER JOIN rt1 ON '-1376922488' FULL OUTER JOIN vt0 ON (~ (((((((((v0.c2)AND(rt1.c1)))AND(rt1.c0)))OR(t0.c1)))OR(rt1.c0)))) LEFT OUTER JOIN t0 ON NULL GROUP BY v0.c1;
SELECT ALL vt0.c0, v0.c2, v0.c0, rt1.c2, v0.c1, rt1.c1, rt1.c0 FROM vt0, v0, rt1;
SELECT vt0.c0, v0.c2, v0.c0, rt1.c2, v0.c1, rt1.c1, rt1.c0 FROM vt0, v0, rt1 WHERE ((~ (vt0.c0 COLLATE RTRIM))) UNION ALL SELECT vt0.c0, v0.c2, v0.c0, rt1.c2, v0.c1, rt1.c1, rt1.c0 FROM vt0, v0, rt1 WHERE ((NOT ((~ (vt0.c0 COLLATE RTRIM))))) UNION ALL SELECT ALL vt0.c0, v0.c2, v0.c0, rt1.c2, v0.c1, rt1.c1, rt1.c0 FROM vt0, v0, rt1 WHERE ((((~ (vt0.c0 COLLATE RTRIM))) ISNULL));
SELECT ALL vt0.c0, v0.c2, v0.c0, rt1.c2, v0.c1, rt1.c1, rt1.c0 FROM vt0, v0, rt1;
SELECT DISTINCT * FROM v0, rt1;
SELECT DISTINCT * FROM v0, rt1 WHERE (((((((((((rt1.c0)OR(v0.c2)))AND(v0.c1)))AND(rt1.c0)))OR(v0.c0))) NOT BETWEEN (((((v0.c0)OR(rt1.c2)))OR(v0.c2))) AND ((('0.9427954563887863')>(v0.c1))))) UNION SELECT DISTINCT * FROM v0, rt1 WHERE ((NOT (((((((((((rt1.c0)OR(v0.c2)))AND(v0.c1)))AND(rt1.c0)))OR(v0.c0))) NOT BETWEEN (((((v0.c0)OR(rt1.c2)))OR(v0.c2))) AND ((('0.9427954563887863')>(v0.c1))))))) UNION SELECT DISTINCT * FROM v0, rt1 WHERE (((((((((((((rt1.c0)OR(v0.c2)))AND(v0.c1)))AND(rt1.c0)))OR(v0.c0))) NOT BETWEEN (((((v0.c0)OR(rt1.c2)))OR(v0.c2))) AND ((('0.9427954563887863')>(v0.c1))))) ISNULL));
SELECT DISTINCT * FROM v0, rt1;
SELECT rt1.c0, rt1.c2 FROM rt1, v0 GROUP BY rt1.c0, rt1.c2;
SELECT rt1.c0, rt1.c2 FROM rt1, v0 WHERE ((~ (rt1.c0))) GROUP BY rt1.c0, rt1.c2 UNION SELECT ALL rt1.c0, rt1.c2 FROM rt1, v0 WHERE ((NOT ((~ (rt1.c0))))) GROUP BY rt1.c0, rt1.c2 UNION SELECT ALL rt1.c0, rt1.c2 FROM rt1, v0 WHERE ((((~ (rt1.c0))) ISNULL)) GROUP BY rt1.c0, rt1.c2;
SELECT rt1.c0, rt1.c2 FROM rt1, v0 GROUP BY rt1.c0, rt1.c2;
SELECT ALL rt1.c2, vt0.c0, v0.c0, rt1.c1, t0.c2, t0.c0, t0.c1, v0.c1, v0.c2, rt1.c0 FROM v0 INNER JOIN vt0 ON CASE ((t0.c1) BETWEEN (rt1.c0) AND (vt0.c0))  WHEN (((('c9讯咣')AND(x'')))OR(NULL)) THEN ((v0.c2) NOT NULL) WHEN (t0.c1 IN ()) THEN ((t0.c2) NOT BETWEEN (rt1.c0) AND (t0.c1)) WHEN (t0.c0 IN ()) THEN ROUND(v0.c1, t0.c1) END INNER JOIN t0 ON CAST(t0.c0 AS NUMERIC) INNER JOIN rt1 ON (((t0.c0 COLLATE BINARY))<>(((v0.c0 IN (t0.c1))))) GROUP BY rt1.c2, vt0.c0, v0.c0, rt1.c1, t0.c2, t0.c0, t0.c1, v0.c1, v0.c2, rt1.c0;
SELECT rt1.c2, vt0.c0, v0.c0, rt1.c1, t0.c2, t0.c0, t0.c1, v0.c1, v0.c2, rt1.c0 FROM v0 INNER JOIN vt0 ON CASE ((t0.c1) BETWEEN (rt1.c0) AND (vt0.c0))  WHEN (((('c9讯咣')AND(x'')))OR(NULL)) THEN ((v0.c2) NOT NULL) WHEN (t0.c1 IN ()) THEN ((t0.c2) NOT BETWEEN (rt1.c0) AND (t0.c1)) WHEN (t0.c0 IN ()) THEN ROUND(v0.c1, t0.c1) END INNER JOIN t0 ON CAST(t0.c0 AS NUMERIC) INNER JOIN rt1 ON (((t0.c0 COLLATE BINARY))!=(((v0.c0 IN (t0.c1))))) GROUP BY rt1.c2, vt0.c0, v0.c0, rt1.c1, t0.c2, t0.c0, t0.c1, v0.c1, v0.c2, rt1.c0 HAVING AVG(MAX(MIN('0.32116188981179083'))) UNION ALL SELECT ALL rt1.c2, vt0.c0, v0.c0, rt1.c1, t0.c2, t0.c0, t0.c1, v0.c1, v0.c2, rt1.c0 FROM v0 INNER JOIN vt0 ON CASE ((t0.c1) BETWEEN (rt1.c0) AND (vt0.c0))  WHEN (((('c9讯咣')AND(x'')))OR(NULL)) THEN ((v0.c2) NOT NULL) WHEN (t0.c1 IN ()) THEN ((t0.c2) NOT BETWEEN (rt1.c0) AND (t0.c1)) WHEN (t0.c0 IN ()) THEN ROUND(v0.c1, t0.c1) END INNER JOIN t0 ON CAST(t0.c0 AS NUMERIC) INNER JOIN rt1 ON (((t0.c0 COLLATE BINARY))!=(((v0.c0 IN (t0.c1))))) GROUP BY rt1.c2, vt0.c0, v0.c0, rt1.c1, t0.c2, t0.c0, t0.c1, v0.c1, v0.c2, rt1.c0 HAVING (NOT (AVG(MAX(MIN('0.32116188981179083'))))) UNION ALL SELECT rt1.c2, vt0.c0, v0.c0, rt1.c1, t0.c2, t0.c0, t0.c1, v0.c1, v0.c2, rt1.c0 FROM v0 INNER JOIN vt0 ON CASE ((t0.c1) BETWEEN (rt1.c0) AND (vt0.c0))  WHEN (((('c9讯咣')AND(x'')))OR(NULL)) THEN ((v0.c2) NOT NULL) WHEN (t0.c1 IN ()) THEN ((t0.c2) NOT BETWEEN (rt1.c0) AND (t0.c1)) WHEN (t0.c0 IN ()) THEN ROUND(v0.c1, t0.c1) END INNER JOIN t0 ON CAST(t0.c0 AS NUMERIC) INNER JOIN rt1 ON (((t0.c0 COLLATE BINARY))!=(((v0.c0 IN (t0.c1))))) GROUP BY rt1.c2, vt0.c0, v0.c0, rt1.c1, t0.c2, t0.c0, t0.c1, v0.c1, v0.c2, rt1.c0 HAVING ((AVG(MAX(MIN('0.32116188981179083')))) ISNULL);
SELECT ALL t0.c2, t0.c0, t0.c1 FROM t0;
SELECT t0.c2, t0.c0, t0.c1 FROM t0 WHERE (((t0.c1) ISNULL) COLLATE NOCASE) UNION ALL SELECT ALL t0.c2, t0.c0, t0.c1 FROM t0 WHERE ((NOT (((t0.c1) ISNULL) COLLATE NOCASE))) UNION ALL SELECT ALL t0.c2, t0.c0, t0.c1 FROM t0 WHERE (((((t0.c1) ISNULL) COLLATE NOCASE) ISNULL));
SELECT ALL t0.c2, t0.c0, t0.c1 FROM t0;
SELECT DISTINCT * FROM vt0, v0, t0, rt1;
SELECT DISTINCT * FROM vt0, v0, t0, rt1 WHERE (rt1.c0) UNION SELECT DISTINCT * FROM vt0, v0, t0, rt1 WHERE ((NOT (rt1.c0))) UNION SELECT DISTINCT * FROM vt0, v0, t0, rt1 WHERE (((rt1.c0) ISNULL));
SELECT DISTINCT * FROM vt0, v0, t0, rt1;
SELECT t0.c2, vt0.c0, t0.c0, rt1.c0, t0.c1, v0.c2 FROM v0, t0, vt0, rt1 GROUP BY t0.c2, vt0.c0, t0.c0, rt1.c0, t0.c1, v0.c2;
SELECT t0.c2, vt0.c0, t0.c0, rt1.c0, t0.c1, v0.c2 FROM v0, t0, vt0, rt1 WHERE (((~ (v0.c0)) IN ())) GROUP BY t0.c2, vt0.c0, t0.c0, rt1.c0, t0.c1, v0.c2 UNION SELECT t0.c2, vt0.c0, t0.c0, rt1.c0, t0.c1, v0.c2 FROM v0, t0, vt0, rt1 WHERE ((NOT (((~ (v0.c0)) IN ())))) GROUP BY t0.c2, vt0.c0, t0.c0, rt1.c0, t0.c1, v0.c2 UNION SELECT t0.c2, vt0.c0, t0.c0, rt1.c0, t0.c1, v0.c2 FROM v0, t0, vt0, rt1 WHERE (((((~ (v0.c0)) IN ())) ISNULL)) GROUP BY t0.c2, vt0.c0, t0.c0, rt1.c0, t0.c1, v0.c2;
SELECT t0.c2, vt0.c0, t0.c0, rt1.c0, t0.c1, v0.c2 FROM v0, t0, vt0, rt1 GROUP BY t0.c2, vt0.c0, t0.c0, rt1.c0, t0.c1, v0.c2;
SELECT ALL t0.c2, v0.c0, v0.c2, v0.c1 FROM t0, v0 GROUP BY t0.c2, v0.c0, v0.c2, v0.c1;
SELECT ALL t0.c2, v0.c0, v0.c2, v0.c1 FROM t0, v0 GROUP BY t0.c2, v0.c0, v0.c2, v0.c1 HAVING SUM((- (AVG(t0.c0)))) UNION ALL SELECT ALL t0.c2, v0.c0, v0.c2, v0.c1 FROM t0, v0 GROUP BY t0.c2, v0.c0, v0.c2, v0.c1 HAVING (NOT (SUM((- (AVG(t0.c0)))))) UNION ALL SELECT t0.c2, v0.c0, v0.c2, v0.c1 FROM t0, v0 GROUP BY t0.c2, v0.c0, v0.c2, v0.c1 HAVING ((SUM((- (AVG(t0.c0))))) ISNULL);
SELECT rt1.c1, vt0.c0 FROM rt1, vt0, t0;
SELECT ALL rt1.c1, vt0.c0 FROM rt1, vt0, t0 WHERE (((((((t0.c2)OR(rt1.c1)))OR(rt1.c1))) BETWEEN (((rt1.c2)/(t0.c1))) AND (((0.03978723773410797) BETWEEN (t0.c2) AND (rt1.c0))))) UNION ALL SELECT rt1.c1, vt0.c0 FROM rt1, vt0, t0 WHERE ((NOT (((((((t0.c2)OR(rt1.c1)))OR(rt1.c1))) BETWEEN (((rt1.c2)/(t0.c1))) AND (((0.03978723773410797) BETWEEN (t0.c2) AND (rt1.c0))))))) UNION ALL SELECT rt1.c1, vt0.c0 FROM rt1, vt0, t0 WHERE (((((((((t0.c2)OR(rt1.c1)))OR(rt1.c1))) BETWEEN (((rt1.c2)/(t0.c1))) AND (((0.03978723773410797) BETWEEN (t0.c2) AND (rt1.c0))))) ISNULL));
SELECT rt1.c1, vt0.c0 FROM rt1, vt0, t0;
SELECT DISTINCT * FROM t0;
SELECT DISTINCT * FROM t0 WHERE ((((((((t0.c1)AND(t0.c0)))AND(t0.c0)), CAST(t0.c0 AS TEXT), (t0.c2 IN (0.5619744566298285)), CAST(t0.c0 AS TEXT), CAST(t0.c2 AS INTEGER)))<=((((t0.c1)/(t0.c1)), load_extension(t0.c2), (((t0.c0, t0.c0, t0.c0)) BETWEEN ((t0.c1, t0.c2, t0.c2)) AND ((t0.c1, t0.c2, 'ut?A|u'))), t0.c2, -1121397517)))) UNION SELECT DISTINCT * FROM t0 WHERE ((NOT ((((((((t0.c1)AND(t0.c0)))AND(t0.c0)), CAST(t0.c0 AS TEXT), (t0.c2 IN (0.5619744566298285)), CAST(t0.c0 AS TEXT), CAST(t0.c2 AS INTEGER)))<=((((t0.c1)/(t0.c1)), load_extension(t0.c2), (((t0.c0, t0.c0, t0.c0)) BETWEEN ((t0.c1, t0.c2, t0.c2)) AND ((t0.c1, t0.c2, 'ut?A|u'))), t0.c2, -1121397517)))))) UNION SELECT DISTINCT * FROM t0 WHERE ((((((((((t0.c1)AND(t0.c0)))AND(t0.c0)), CAST(t0.c0 AS TEXT), (t0.c2 IN (0.5619744566298285)), CAST(t0.c0 AS TEXT), CAST(t0.c2 AS INTEGER)))<=((((t0.c1)/(t0.c1)), load_extension(t0.c2), (((t0.c0, t0.c0, t0.c0)) BETWEEN ((t0.c1, t0.c2, t0.c2)) AND ((t0.c1, t0.c2, 'ut?A|u'))), t0.c2, -1121397517)))) ISNULL));
SELECT DISTINCT * FROM t0;
SELECT rt1.c0, rt1.c1, rt1.c2 FROM rt1 GROUP BY rt1.c0, rt1.c1, rt1.c2;
SELECT ALL rt1.c0, rt1.c1, rt1.c2 FROM rt1 WHERE (CASE ''  WHEN ((-1516016442)=(rt1.c1)) THEN CAST(0X61aeaafe AS INTEGER) END) GROUP BY rt1.c0, rt1.c1, rt1.c2 UNION SELECT ALL rt1.c0, rt1.c1, rt1.c2 FROM rt1 WHERE ((NOT (CASE ''  WHEN ((-1516016442)==(rt1.c1)) THEN CAST(0x61aeaafe AS INTEGER) END))) GROUP BY rt1.c0, rt1.c1, rt1.c2 UNION SELECT rt1.c0, rt1.c1, rt1.c2 FROM rt1 WHERE (((CASE ''  WHEN ((-1516016442)=(rt1.c1)) THEN CAST(0x61aeaafe AS INTEGER) END) ISNULL)) GROUP BY rt1.c0, rt1.c1, rt1.c2;
SELECT rt1.c0, rt1.c1, rt1.c2 FROM rt1 GROUP BY rt1.c0, rt1.c1, rt1.c2;
SELECT rt1.c0, t0.c0, rt1.c2, t0.c1, rt1.c1, t0.c2 FROM t0 INNER JOIN rt1 ON CASE ((rt1.c0) IS TRUE)  WHEN 'ojc' THEN CAST(t0.c0 AS NUMERIC) ELSE ((rt1.c1)/(0.8971499080260606)) END GROUP BY rt1.c0, t0.c0, rt1.c2, t0.c1, rt1.c1, t0.c2;
SELECT rt1.c0, t0.c0, rt1.c2, t0.c1, rt1.c1, t0.c2 FROM t0 INNER JOIN rt1 ON CASE ((rt1.c0) IS TRUE)  WHEN 'ojc' THEN CAST(t0.c0 AS NUMERIC) ELSE ((rt1.c1)/(0.8971499080260606)) END GROUP BY rt1.c0, t0.c0, rt1.c2, t0.c1, rt1.c1, t0.c2 HAVING TOTAL(x'fc0a') UNION ALL SELECT rt1.c0, t0.c0, rt1.c2, t0.c1, rt1.c1, t0.c2 FROM t0 INNER JOIN rt1 ON CASE ((rt1.c0) IS TRUE)  WHEN 'ojc' THEN CAST(t0.c0 AS NUMERIC) ELSE ((rt1.c1)/(0.8971499080260606)) END GROUP BY rt1.c0, t0.c0, rt1.c2, t0.c1, rt1.c1, t0.c2 HAVING (NOT (TOTAL(x'fc0a'))) UNION ALL SELECT rt1.c0, t0.c0, rt1.c2, t0.c1, rt1.c1, t0.c2 FROM t0 INNER JOIN rt1 ON CASE ((rt1.c0) IS TRUE)  WHEN 'ojc' THEN CAST(t0.c0 AS NUMERIC) ELSE ((rt1.c1)/(0.8971499080260606)) END GROUP BY rt1.c0, t0.c0, rt1.c2, t0.c1, rt1.c1, t0.c2 HAVING ((TOTAL(x'fc0a')) ISNULL);
SELECT rt1.c0, t0.c0, rt1.c2, t0.c1, rt1.c1, t0.c2 FROM t0 INNER JOIN rt1 ON CASE ((rt1.c0) IS TRUE)  WHEN 'ojc' THEN CAST(t0.c0 AS NUMERIC) ELSE ((rt1.c1)/(0.8971499080260606)) END GROUP BY rt1.c0, t0.c0, rt1.c2, t0.c1, rt1.c1, t0.c2;
SELECT rt1.c0, t0.c0, rt1.c2, t0.c1, rt1.c1, t0.c2 FROM t0 INNER JOIN rt1 ON CASE ((rt1.c0) IS TRUE)  WHEN 'ojc' THEN CAST(t0.c0 AS NUMERIC) ELSE ((rt1.c1)/(0.8971499080260606)) END GROUP BY rt1.c0, t0.c0, rt1.c2, t0.c1, rt1.c1, t0.c2 HAVING TOTAL(x'fc0a') UNION ALL SELECT rt1.c0, t0.c0, rt1.c2, t0.c1, rt1.c1, t0.c2 FROM t0 INNER JOIN rt1 ON CASE ((rt1.c0) IS TRUE)  WHEN 'ojc' THEN CAST(t0.c0 AS NUMERIC) ELSE ((rt1.c1)/(0.8971499080260606)) END GROUP BY rt1.c0, t0.c0, rt1.c2, t0.c1, rt1.c1, t0.c2 HAVING (NOT (TOTAL(x'fc0a'))) UNION ALL SELECT rt1.c0, t0.c0, rt1.c2, t0.c1, rt1.c1, t0.c2 FROM t0 INNER JOIN rt1 ON CASE ((rt1.c0) IS TRUE)  WHEN 'ojc' THEN CAST(t0.c0 AS NUMERIC) ELSE ((rt1.c1)/(0.8971499080260606)) END GROUP BY rt1.c0, t0.c0, rt1.c2, t0.c1, rt1.c1, t0.c2 HAVING ((TOTAL(x'fc0a')) ISNULL);
SELECT rt1.c0, t0.c0, rt1.c2, t0.c1, rt1.c1, t0.c2 FROM t0 INNER JOIN rt1 ON CASE ((rt1.c0) IS TRUE)  WHEN 'ojc' THEN CAST(t0.c0 AS NUMERIC) ELSE ((rt1.c1)/(0.8971499080260606)) END GROUP BY rt1.c0, t0.c0, rt1.c2, t0.c1, rt1.c1, t0.c2;
SELECT ALL * FROM rt1, vt0, t0;
SELECT * FROM rt1, vt0, t0 WHERE (((((rt1.c1 COLLATE RTRIM)OR(((t0.c1) NOTNULL))))AND(CASE WHEN rt1.c2 THEN rt1.c0 END))) UNION ALL SELECT * FROM rt1, vt0, t0 WHERE ((NOT (((((rt1.c1 COLLATE RTRIM)OR(((t0.c1) NOTNULL))))AND(CASE WHEN rt1.c2 THEN rt1.c0 END))))) UNION ALL SELECT * FROM rt1, vt0, t0 WHERE (((((((rt1.c1 COLLATE RTRIM)OR(((t0.c1) NOTNULL))))AND(CASE WHEN rt1.c2 THEN rt1.c0 END))) ISNULL));
SELECT ALL * FROM rt1, vt0, t0;
SELECT DISTINCT * FROM vt0, v0, rt1;
SELECT DISTINCT * FROM vt0, v0, rt1 WHERE (((CASE WHEN vt0.c0 THEN rt1.c1 ELSE vt0.c0 END) ISNULL)) UNION SELECT DISTINCT * FROM vt0, v0, rt1 WHERE ((NOT (((CASE WHEN vt0.c0 THEN rt1.c1 ELSE vt0.c0 END) ISNULL)))) UNION SELECT DISTINCT * FROM vt0, v0, rt1 WHERE (((((CASE WHEN vt0.c0 THEN rt1.c1 ELSE vt0.c0 END) ISNULL)) ISNULL));
SELECT DISTINCT * FROM vt0, v0, rt1;
SELECT rt1.c0, rt1.c2, vt0.c0 FROM vt0, rt1 GROUP BY rt1.c0, rt1.c2, vt0.c0;
SELECT ALL rt1.c0, rt1.c2, vt0.c0 FROM vt0, rt1 WHERE (((('878210511')&(vt0.c0)) IN ())) GROUP BY rt1.c0, rt1.c2, vt0.c0 UNION SELECT rt1.c0, rt1.c2, vt0.c0 FROM vt0, rt1 WHERE ((NOT (((('878210511')&(vt0.c0)) IN ())))) GROUP BY rt1.c0, rt1.c2, vt0.c0 UNION SELECT ALL rt1.c0, rt1.c2, vt0.c0 FROM vt0, rt1 WHERE (((((('878210511')&(vt0.c0)) IN ())) ISNULL)) GROUP BY rt1.c0, rt1.c2, vt0.c0;
SELECT rt1.c0, rt1.c2, vt0.c0 FROM vt0, rt1 GROUP BY rt1.c0, rt1.c2, vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING COALESCE(DISTINCT (NOT (MAX(vt0.c0))), GROUP_CONCAT(vt0.c0)) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (COALESCE(DISTINCT (NOT (MAX(vt0.c0))), GROUP_CONCAT(vt0.c0)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COALESCE(DISTINCT (NOT (MAX(vt0.c0))), GROUP_CONCAT(vt0.c0))) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING COALESCE(DISTINCT (NOT (MAX(vt0.c0))), GROUP_CONCAT(vt0.c0)) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (COALESCE(DISTINCT (NOT (MAX(vt0.c0))), GROUP_CONCAT(vt0.c0)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COALESCE(DISTINCT (NOT (MAX(vt0.c0))), GROUP_CONCAT(vt0.c0))) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT rt1.c2, rt1.c1, v0.c1, vt0.c0, v0.c2, v0.c0 FROM v0 FULL OUTER JOIN vt0 ON (NOT (((NULL)IS('')))) INNER JOIN rt1 ON x'';
SELECT ALL rt1.c2, rt1.c1, v0.c1, vt0.c0, v0.c2, v0.c0 FROM v0 FULL OUTER JOIN vt0 ON (NOT (((NULL)IS('')))) INNER JOIN rt1 ON x'' WHERE (((NULL)-(((v0.c1) BETWEEN (v0.c0) AND (rt1.c0))))) UNION ALL SELECT ALL rt1.c2, rt1.c1, v0.c1, vt0.c0, v0.c2, v0.c0 FROM v0 FULL OUTER JOIN vt0 ON (NOT (((NULL)IS('')))) INNER JOIN rt1 ON x'' WHERE ((NOT (((NULL)-(((v0.c1) BETWEEN (v0.c0) AND (rt1.c0))))))) UNION ALL SELECT ALL rt1.c2, rt1.c1, v0.c1, vt0.c0, v0.c2, v0.c0 FROM v0 FULL OUTER JOIN vt0 ON (NOT (((NULL)IS('')))) INNER JOIN rt1 ON x'' WHERE (((((NULL)-(((v0.c1) BETWEEN (v0.c0) AND (rt1.c0))))) ISNULL));
SELECT rt1.c2, rt1.c1, v0.c1, vt0.c0, v0.c2, v0.c0 FROM v0 FULL OUTER JOIN vt0 ON (NOT (((NULL)IS('')))) INNER JOIN rt1 ON x'';
SELECT DISTINCT v0.c1, vt0.c0, rt1.c2 FROM t0, rt1 CROSS JOIN vt0 ON CAST(v0.c1 COLLATE RTRIM AS BLOB) CROSS JOIN v0 ON (((t0.c1)) NOT BETWEEN ((rt1.c1)) AND ((vt0.c0))) COLLATE NOCASE;
SELECT DISTINCT v0.c1, vt0.c0, rt1.c2 FROM t0, rt1 CROSS JOIN vt0 ON CAST(v0.c1 COLLATE RTRIM AS BLOB) CROSS JOIN v0 ON (((t0.c1)) NOT BETWEEN ((rt1.c1)) AND ((vt0.c0))) COLLATE NOCASE WHERE (((((rt1.c2)==(t0.c0))) IS TRUE)) UNION SELECT DISTINCT v0.c1, vt0.c0, rt1.c2 FROM t0, rt1 CROSS JOIN vt0 ON CAST(v0.c1 COLLATE RTRIM AS BLOB) CROSS JOIN v0 ON (((t0.c1)) NOT BETWEEN ((rt1.c1)) AND ((vt0.c0))) COLLATE NOCASE WHERE ((NOT (((((rt1.c2)==(t0.c0))) IS TRUE)))) UNION SELECT DISTINCT v0.c1, vt0.c0, rt1.c2 FROM t0, rt1 CROSS JOIN vt0 ON CAST(v0.c1 COLLATE RTRIM AS BLOB) CROSS JOIN v0 ON (((t0.c1)) NOT BETWEEN ((rt1.c1)) AND ((vt0.c0))) COLLATE NOCASE WHERE (((((((rt1.c2)==(t0.c0))) IS TRUE)) ISNULL));
SELECT DISTINCT v0.c1, vt0.c0, rt1.c2 FROM t0, rt1 CROSS JOIN vt0 ON CAST(v0.c1 COLLATE RTRIM AS BLOB) CROSS JOIN v0 ON (((t0.c1)) NOT BETWEEN ((rt1.c1)) AND ((vt0.c0))) COLLATE NOCASE;
SELECT ALL rt1.c2, v0.c0, rt1.c1, t0.c2, v0.c1, rt1.c0 FROM vt0, t0, v0, rt1 GROUP BY rt1.c2, v0.c0, rt1.c1, t0.c2, v0.c1, rt1.c0;
SELECT ALL rt1.c2, v0.c0, rt1.c1, t0.c2, v0.c1, rt1.c0 FROM vt0, t0, v0, rt1 WHERE ((~ ((rt1.c0 IN ())))) GROUP BY rt1.c2, v0.c0, rt1.c1, t0.c2, v0.c1, rt1.c0 UNION SELECT rt1.c2, v0.c0, rt1.c1, t0.c2, v0.c1, rt1.c0 FROM vt0, t0, v0, rt1 WHERE ((NOT ((~ ((rt1.c0 IN ())))))) GROUP BY rt1.c2, v0.c0, rt1.c1, t0.c2, v0.c1, rt1.c0 UNION SELECT ALL rt1.c2, v0.c0, rt1.c1, t0.c2, v0.c1, rt1.c0 FROM vt0, t0, v0, rt1 WHERE ((((~ ((rt1.c0 IN ())))) ISNULL)) GROUP BY rt1.c2, v0.c0, rt1.c1, t0.c2, v0.c1, rt1.c0;
SELECT ALL rt1.c2, v0.c0, rt1.c1, t0.c2, v0.c1, rt1.c0 FROM vt0, t0, v0, rt1 GROUP BY rt1.c2, v0.c0, rt1.c1, t0.c2, v0.c1, rt1.c0;
SELECT ALL v0.c0, vt0.c0, t0.c2 FROM t0, v0, vt0, rt1 GROUP BY v0.c0, vt0.c0, t0.c2;
SELECT ALL v0.c0, vt0.c0, t0.c2 FROM t0, v0, vt0, rt1 GROUP BY v0.c0, vt0.c0, t0.c2 HAVING (CASE rt1.c1  WHEN MIN(GROUP_CONCAT(0x61aeaafe)) THEN t0.c2 WHEN AVG(GROUP_CONCAT(rt1.c2)) THEN -823976568 WHEN rt1.c1 THEN COUNT(v0.c2) END IN ()) UNION ALL SELECT ALL v0.c0, vt0.c0, t0.c2 FROM t0, v0, vt0, rt1 GROUP BY v0.c0, vt0.c0, t0.c2 HAVING (NOT ((CASE rt1.c1  WHEN MIN(GROUP_CONCAT(0X61aeaafe)) THEN t0.c2 WHEN AVG(GROUP_CONCAT(rt1.c2)) THEN -823976568 WHEN rt1.c1 THEN COUNT(v0.c2) END IN ()))) UNION ALL SELECT v0.c0, vt0.c0, t0.c2 FROM t0, v0, vt0, rt1 GROUP BY v0.c0, vt0.c0, t0.c2 HAVING (((CASE rt1.c1  WHEN MIN(GROUP_CONCAT(0x61aeaafe)) THEN t0.c2 WHEN AVG(GROUP_CONCAT(rt1.c2)) THEN -823976568 WHEN rt1.c1 THEN COUNT(v0.c2) END IN ())) ISNULL);
SELECT ALL v0.c0, vt0.c0, t0.c2 FROM t0, v0, vt0, rt1 GROUP BY v0.c0, vt0.c0, t0.c2;
SELECT ALL v0.c0, vt0.c0, t0.c2 FROM t0, v0, vt0, rt1 GROUP BY v0.c0, vt0.c0, t0.c2 HAVING (CASE rt1.c1  WHEN MIN(GROUP_CONCAT(0x61aeaafe)) THEN t0.c2 WHEN AVG(GROUP_CONCAT(rt1.c2)) THEN -823976568 WHEN rt1.c1 THEN COUNT(v0.c2) END IN ()) UNION ALL SELECT ALL v0.c0, vt0.c0, t0.c2 FROM t0, v0, vt0, rt1 GROUP BY v0.c0, vt0.c0, t0.c2 HAVING (NOT ((CASE rt1.c1  WHEN MIN(GROUP_CONCAT(0X61aeaafe)) THEN t0.c2 WHEN AVG(GROUP_CONCAT(rt1.c2)) THEN -823976568 WHEN rt1.c1 THEN COUNT(v0.c2) END IN ()))) UNION ALL SELECT v0.c0, vt0.c0, t0.c2 FROM t0, v0, vt0, rt1 GROUP BY v0.c0, vt0.c0, t0.c2 HAVING (((CASE rt1.c1  WHEN MIN(GROUP_CONCAT(0x61aeaafe)) THEN t0.c2 WHEN AVG(GROUP_CONCAT(rt1.c2)) THEN -823976568 WHEN rt1.c1 THEN COUNT(v0.c2) END IN ())) ISNULL);
SELECT ALL v0.c0, vt0.c0, t0.c2 FROM t0, v0, vt0, rt1 GROUP BY v0.c0, vt0.c0, t0.c2;
SELECT ALL t0.c0, vt0.c0, t0.c1, t0.c2 FROM t0, vt0;
SELECT ALL t0.c0, vt0.c0, t0.c1, t0.c2 FROM t0, vt0 WHERE (((t0.c1) NOT NULL)) UNION ALL SELECT ALL t0.c0, vt0.c0, t0.c1, t0.c2 FROM t0, vt0 WHERE ((NOT (((t0.c1) NOT NULL)))) UNION ALL SELECT ALL t0.c0, vt0.c0, t0.c1, t0.c2 FROM t0, vt0 WHERE (((((t0.c1) NOT NULL)) ISNULL));
SELECT ALL t0.c0, vt0.c0, t0.c1, t0.c2 FROM t0, vt0;
SELECT DISTINCT * FROM vt0, v0, t0;
SELECT DISTINCT * FROM vt0, v0, t0 WHERE (((NULL) IS FALSE)) UNION SELECT DISTINCT * FROM vt0 NOT INDEXED, v0, t0 WHERE ((NOT (((NULL) IS FALSE)))) UNION SELECT DISTINCT * FROM vt0, v0, t0 WHERE (((((NULL) IS FALSE)) ISNULL));
SELECT DISTINCT * FROM vt0, v0, t0;
SELECT rt1.c0, vt0.c0 FROM vt0, rt1 GROUP BY rt1.c0, vt0.c0;
SELECT ALL rt1.c0, vt0.c0 FROM vt0, rt1 WHERE (((((((((((((CASE WHEN rt1.c0 THEN rt1.c1 ELSE 0.28761253008621246 END)OR(CAST(vt0.c0 AS BLOB))))OR(NULL)))AND(LOWER(rt1.c2))))AND((vt0.c0 IN ()))))AND(ABS(DISTINCT rt1.c1))))OR((vt0.c0 IN ())))) GROUP BY rt1.c0, vt0.c0 UNION SELECT rt1.c0, vt0.c0 FROM vt0, rt1 WHERE ((NOT (((((((((((((CASE WHEN rt1.c0 THEN rt1.c1 ELSE 0.28761253008621246 END)OR(CAST(vt0.c0 AS BLOB))))OR(NULL)))AND(LOWER(rt1.c2))))AND((vt0.c0 IN ()))))AND(ABS(DISTINCT rt1.c1))))OR((vt0.c0 IN ())))))) GROUP BY rt1.c0, vt0.c0 UNION SELECT ALL rt1.c0, vt0.c0 FROM vt0, rt1 WHERE (((((((((((((((CASE WHEN rt1.c0 THEN rt1.c1 ELSE 0.28761253008621246 END)OR(CAST(vt0.c0 AS BLOB))))OR(NULL)))AND(LOWER(rt1.c2))))AND((vt0.c0 IN ()))))AND(ABS(DISTINCT rt1.c1))))OR((vt0.c0 IN ())))) ISNULL)) GROUP BY rt1.c0, vt0.c0;
SELECT rt1.c0, vt0.c0 FROM vt0, rt1 GROUP BY rt1.c0, vt0.c0;
SELECT t0.c0, rt1.c0, t0.c2 FROM v0, rt1, t0 GROUP BY t0.c0, rt1.c0, t0.c2;
SELECT ALL t0.c0, rt1.c0, t0.c2 FROM v0, rt1, t0 GROUP BY t0.c0, rt1.c0, t0.c2 HAVING COUNT(NULL) UNION ALL SELECT ALL t0.c0, rt1.c0, t0.c2 FROM v0, rt1, t0 GROUP BY t0.c0, rt1.c0, t0.c2 HAVING (NOT (COUNT(NULL))) UNION ALL SELECT t0.c0, rt1.c0, t0.c2 FROM v0, rt1, t0 GROUP BY t0.c0, rt1.c0, t0.c2 HAVING ((COUNT(NULL)) ISNULL);
SELECT t0.c0, rt1.c0, t0.c2 FROM v0, rt1, t0 GROUP BY t0.c0, rt1.c0, t0.c2;
SELECT ALL t0.c0, rt1.c0, t0.c2 FROM v0, rt1, t0 GROUP BY t0.c0, rt1.c0, t0.c2 HAVING COUNT(NULL) UNION ALL SELECT ALL t0.c0, rt1.c0, t0.c2 FROM v0, rt1, t0 GROUP BY t0.c0, rt1.c0, t0.c2 HAVING (NOT (COUNT(NULL))) UNION ALL SELECT t0.c0, rt1.c0, t0.c2 FROM v0, rt1, t0 GROUP BY t0.c0, rt1.c0, t0.c2 HAVING ((COUNT(NULL)) ISNULL);
SELECT t0.c0, rt1.c0, t0.c2 FROM v0, rt1, t0 GROUP BY t0.c0, rt1.c0, t0.c2;
SELECT ALL t0.c2 FROM rt1, vt0, t0;
SELECT ALL t0.c2 FROM rt1, vt0, t0 WHERE (((((rt1.c0)|(NULL)))>(((rt1.c0)||(t0.c1))))) UNION ALL SELECT t0.c2 FROM rt1, vt0, t0 WHERE ((NOT (((((rt1.c0)|(NULL)))>(((rt1.c0)||(t0.c1))))))) UNION ALL SELECT t0.c2 FROM rt1, vt0, t0 WHERE (((((((rt1.c0)|(NULL)))>(((rt1.c0)||(t0.c1))))) ISNULL));
SELECT ALL t0.c2 FROM rt1, vt0, t0;
SELECT DISTINCT t0.c2, t0.c0 FROM vt0, rt1, t0;
SELECT DISTINCT t0.c2, t0.c0 FROM vt0, rt1, t0 WHERE (((((((vt0.c0)<<(t0.c2)))OR(IFNULL(DISTINCT t0.c1, -339294879))))OR(CAST(t0.c1 AS INTEGER)))) UNION SELECT DISTINCT t0.c2, t0.c0 FROM vt0, rt1, t0 WHERE ((NOT (((((((vt0.c0)<<(t0.c2)))OR(IFNULL(DISTINCT t0.c1, -339294879))))OR(CAST(t0.c1 AS INTEGER)))))) UNION SELECT DISTINCT t0.c2, t0.c0 FROM vt0, rt1, t0 WHERE (((((((((vt0.c0)<<(t0.c2)))OR(IFNULL(DISTINCT t0.c1, -339294879))))OR(CAST(t0.c1 AS INTEGER)))) ISNULL));
SELECT DISTINCT t0.c2, t0.c0 FROM vt0, rt1, t0;
SELECT ALL rt1.c2, t0.c1, t0.c2, v0.c0, rt1.c1, v0.c2, t0.c0, v0.c1 FROM rt1, v0 LEFT OUTER JOIN t0 ON ((t0.c1)+(v0.c1)) COLLATE BINARY GROUP BY rt1.c2, t0.c1, t0.c2, v0.c0, rt1.c1, v0.c2, t0.c0, v0.c1;
SELECT rt1.c2, t0.c1, t0.c2, v0.c0, rt1.c1, v0.c2, t0.c0, v0.c1 FROM rt1, v0 LEFT OUTER JOIN t0 ON ((t0.c1)+(v0.c1)) COLLATE BINARY WHERE (((((((x'591e')=(rt1.c1)))AND((- (v0.c0)))))AND(rt1.c0 COLLATE BINARY))) GROUP BY rt1.c2, t0.c1, t0.c2, v0.c0, rt1.c1, v0.c2, t0.c0, v0.c1 UNION SELECT rt1.c2, t0.c1, t0.c2, v0.c0, rt1.c1, v0.c2, t0.c0, v0.c1 FROM rt1, v0 LEFT OUTER JOIN t0 ON ((t0.c1)+(v0.c1)) COLLATE BINARY WHERE ((NOT (((((((x'591e')==(rt1.c1)))AND((- (v0.c0)))))AND(rt1.c0 COLLATE BINARY))))) GROUP BY rt1.c2, t0.c1, t0.c2, v0.c0, rt1.c1, v0.c2, t0.c0, v0.c1 UNION SELECT ALL rt1.c2, t0.c1, t0.c2, v0.c0, rt1.c1, v0.c2, t0.c0, v0.c1 FROM rt1, v0 LEFT OUTER JOIN t0 ON ((t0.c1)+(v0.c1)) COLLATE BINARY WHERE (((((((((x'591e')==(rt1.c1)))AND((- (v0.c0)))))AND(rt1.c0 COLLATE BINARY))) ISNULL)) GROUP BY rt1.c2, t0.c1, t0.c2, v0.c0, rt1.c1, v0.c2, t0.c0, v0.c1;
SELECT ALL rt1.c2, t0.c1, t0.c2, v0.c0, rt1.c1, v0.c2, t0.c0, v0.c1 FROM rt1, v0 LEFT OUTER JOIN t0 ON ((t0.c1)+(v0.c1)) COLLATE BINARY GROUP BY rt1.c2, t0.c1, t0.c2, v0.c0, rt1.c1, v0.c2, t0.c0, v0.c1;
SELECT rt1.c2, v0.c0, vt0.c0, rt1.c0 FROM vt0, rt1 FULL OUTER JOIN v0 ON CAST((((vt0.c0)) BETWEEN ((rt1.c2)) AND ((rt1.c1))) AS INTEGER) GROUP BY rt1.c2, v0.c0, vt0.c0, rt1.c0;
SELECT ALL rt1.c2, v0.c0, vt0.c0, rt1.c0 FROM vt0, rt1 FULL OUTER JOIN v0 ON CAST((((vt0.c0)) BETWEEN ((rt1.c2)) AND ((rt1.c1))) AS INTEGER) GROUP BY rt1.c2, v0.c0, vt0.c0, rt1.c0 HAVING MAX((COUNT(*) IN ())) UNION ALL SELECT rt1.c2, v0.c0, vt0.c0, rt1.c0 FROM vt0, rt1 FULL OUTER JOIN v0 ON CAST((((vt0.c0)) BETWEEN ((rt1.c2)) AND ((rt1.c1))) AS INTEGER) GROUP BY rt1.c2, v0.c0, vt0.c0, rt1.c0 HAVING (NOT (MAX((COUNT(*) IN ())))) UNION ALL SELECT ALL rt1.c2, v0.c0, vt0.c0, rt1.c0 FROM vt0, rt1 FULL OUTER JOIN v0 ON CAST((((vt0.c0)) BETWEEN ((rt1.c2)) AND ((rt1.c1))) AS INTEGER) GROUP BY rt1.c2, v0.c0, vt0.c0, rt1.c0 HAVING ((MAX((COUNT(*) IN ()))) ISNULL);
SELECT rt1.c2, v0.c0, vt0.c0, rt1.c0 FROM vt0, rt1 FULL OUTER JOIN v0 ON CAST((((vt0.c0)) BETWEEN ((rt1.c2)) AND ((rt1.c1))) AS INTEGER) GROUP BY rt1.c2, v0.c0, vt0.c0, rt1.c0;
SELECT ALL rt1.c2, v0.c0, vt0.c0, rt1.c0 FROM vt0, rt1 FULL OUTER JOIN v0 ON CAST((((vt0.c0)) BETWEEN ((rt1.c2)) AND ((rt1.c1))) AS INTEGER) GROUP BY rt1.c2, v0.c0, vt0.c0, rt1.c0 HAVING MAX((COUNT(*) IN ())) UNION ALL SELECT rt1.c2, v0.c0, vt0.c0, rt1.c0 FROM vt0, rt1 FULL OUTER JOIN v0 ON CAST((((vt0.c0)) BETWEEN ((rt1.c2)) AND ((rt1.c1))) AS INTEGER) GROUP BY rt1.c2, v0.c0, vt0.c0, rt1.c0 HAVING (NOT (MAX((COUNT(*) IN ())))) UNION ALL SELECT ALL rt1.c2, v0.c0, vt0.c0, rt1.c0 FROM vt0, rt1 FULL OUTER JOIN v0 ON CAST((((vt0.c0)) BETWEEN ((rt1.c2)) AND ((rt1.c1))) AS INTEGER) GROUP BY rt1.c2, v0.c0, vt0.c0, rt1.c0 HAVING ((MAX((COUNT(*) IN ()))) ISNULL);
SELECT rt1.c2, v0.c0, vt0.c0, rt1.c0 FROM vt0, rt1 FULL OUTER JOIN v0 ON CAST((((vt0.c0)) BETWEEN ((rt1.c2)) AND ((rt1.c1))) AS INTEGER) GROUP BY rt1.c2, v0.c0, vt0.c0, rt1.c0;
SELECT ALL * FROM v0;
SELECT * FROM v0 WHERE (((((NOT (v0.c0))))<((CAST(v0.c0 AS NUMERIC))))) UNION ALL SELECT ALL * FROM v0 WHERE ((NOT (((((NOT (v0.c0))))<((CAST(v0.c0 AS NUMERIC))))))) UNION ALL SELECT * FROM v0 WHERE (((((((NOT (v0.c0))))<((CAST(v0.c0 AS NUMERIC))))) ISNULL));
SELECT ALL * FROM v0;
SELECT DISTINCT v0.c1, v0.c2 FROM t0, rt1, v0, vt0;
SELECT DISTINCT v0.c1, v0.c2 FROM t0, rt1, v0, vt0 WHERE (((((x'')IS(vt0.c0))) IS FALSE)) UNION SELECT DISTINCT v0.c1, v0.c2 FROM t0, rt1, v0, vt0 WHERE ((NOT (((((x'')IS(vt0.c0))) IS FALSE)))) UNION SELECT DISTINCT v0.c1, v0.c2 FROM t0, rt1, v0, vt0 WHERE (((((((x'')IS(vt0.c0))) IS FALSE)) ISNULL));
SELECT DISTINCT v0.c1, v0.c2 FROM t0, rt1, v0, vt0;
SELECT ALL v0.c1, v0.c0 FROM v0 GROUP BY v0.c1, v0.c0;
SELECT ALL v0.c1, v0.c0 FROM v0 WHERE ((((~ (v0.c2)))*((- (v0.c2))))) GROUP BY v0.c1, v0.c0 UNION SELECT ALL v0.c1, v0.c0 FROM v0 WHERE ((NOT ((((~ (v0.c2)))*((- (v0.c2))))))) GROUP BY v0.c1, v0.c0 UNION SELECT v0.c1, v0.c0 FROM v0 WHERE ((((((~ (v0.c2)))*((- (v0.c2))))) ISNULL)) GROUP BY v0.c1, v0.c0;
SELECT ALL v0.c1, v0.c0 FROM v0 GROUP BY v0.c1, v0.c0;
SELECT ALL v0.c1, rt1.c2, v0.c0 FROM vt0, rt1, t0, v0 GROUP BY v0.c1, rt1.c2, v0.c0;
SELECT v0.c1, rt1.c2, v0.c0 FROM vt0, rt1, t0, v0 GROUP BY v0.c1, rt1.c2, v0.c0 HAVING ((AVG(MIN(COUNT(*)))) IS FALSE) UNION ALL SELECT v0.c1, rt1.c2, v0.c0 FROM vt0, rt1, t0, v0 GROUP BY v0.c1, rt1.c2, v0.c0 HAVING (NOT (((AVG(MIN(COUNT(*)))) IS FALSE))) UNION ALL SELECT v0.c1, rt1.c2, v0.c0 FROM vt0, rt1, t0, v0 GROUP BY v0.c1, rt1.c2, v0.c0 HAVING ((((AVG(MIN(COUNT(*)))) IS FALSE)) ISNULL);
SELECT rt1.c0, rt1.c2, rt1.c1, vt0.c0 FROM vt0, rt1;
SELECT rt1.c0, rt1.c2, rt1.c1, vt0.c0 FROM vt0, rt1 WHERE ((+ (((vt0.c0) BETWEEN (rt1.c0) AND (vt0.c0))))) UNION ALL SELECT rt1.c0, rt1.c2, rt1.c1, vt0.c0 FROM vt0, rt1 WHERE ((NOT ((+ (((vt0.c0) BETWEEN (rt1.c0) AND (vt0.c0))))))) UNION ALL SELECT rt1.c0, rt1.c2, rt1.c1, vt0.c0 FROM vt0, rt1 WHERE ((((+ (((vt0.c0) BETWEEN (rt1.c0) AND (vt0.c0))))) ISNULL));
SELECT rt1.c0, rt1.c2, rt1.c1, vt0.c0 FROM vt0, rt1;
SELECT DISTINCT * FROM t0, rt1, vt0, v0;
SELECT DISTINCT * FROM t0, rt1, vt0, v0 WHERE (((((((((rt1.c2 COLLATE NOCASE)AND(((v0.c1) NOT NULL))))OR((rt1.c2 IN ()))))OR(((rt1.c2) NOT BETWEEN (v0.c0) AND (rt1.c2)))))AND((NOT (v0.c0))))) UNION SELECT DISTINCT * FROM t0, rt1, vt0, v0 WHERE ((NOT (((((((((rt1.c2 COLLATE NOCASE)AND(((v0.c1) NOT NULL))))OR((rt1.c2 IN ()))))OR(((rt1.c2) NOT BETWEEN (v0.c0) AND (rt1.c2)))))AND((NOT (v0.c0))))))) UNION SELECT DISTINCT * FROM t0, rt1, vt0, v0 WHERE (((((((((((rt1.c2 COLLATE NOCASE)AND(((v0.c1) NOT NULL))))OR((rt1.c2 IN ()))))OR(((rt1.c2) NOT BETWEEN (v0.c0) AND (rt1.c2)))))AND((NOT (v0.c0))))) ISNULL));
SELECT DISTINCT * FROM t0, rt1, vt0, v0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (vt0.c0) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (vt0.c0))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 NOT INDEXED WHERE (((vt0.c0) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL t0.c2 FROM t0, rt1, v0, vt0 GROUP BY t0.c2;
SELECT t0.c2 FROM t0, rt1, v0 NOT INDEXED, vt0 GROUP BY t0.c2 HAVING CASE ((rt1.c2) BETWEEN (rt1.c0) AND (0x13497dca))  WHEN TOTAL(MIN(SUM(rt1.c1))) THEN AVG(TOTAL(MAX(t0.c1))) COLLATE BINARY ELSE ((v0.c1) NOT NULL) END UNION ALL SELECT ALL t0.c2 FROM t0, rt1, v0, vt0 GROUP BY t0.c2 HAVING (NOT (CASE ((rt1.c2) BETWEEN (rt1.c0) AND (0X13497dca))  WHEN TOTAL(MIN(SUM(rt1.c1))) THEN AVG(TOTAL(MAX(t0.c1))) COLLATE BINARY ELSE ((v0.c1) NOT NULL) END)) UNION ALL SELECT ALL t0.c2 FROM t0, rt1, v0, vt0 GROUP BY t0.c2 HAVING ((CASE ((rt1.c2) BETWEEN (rt1.c0) AND (0X13497dca))  WHEN TOTAL(MIN(SUM(rt1.c1))) THEN AVG(TOTAL(MAX(t0.c1))) COLLATE BINARY ELSE ((v0.c1) NOT NULL) END) ISNULL);
SELECT v0.c0 FROM rt1, vt0, v0;
SELECT v0.c0 FROM rt1, vt0, v0 WHERE (LIKELY(((vt0.c0) BETWEEN (v0.c0) AND (v0.c0)))) UNION ALL SELECT ALL v0.c0 FROM rt1, vt0, v0 WHERE ((NOT (LIKELY(((vt0.c0) BETWEEN (v0.c0) AND (v0.c0)))))) UNION ALL SELECT ALL v0.c0 FROM rt1, vt0, v0 WHERE (((LIKELY(((vt0.c0) BETWEEN (v0.c0) AND (v0.c0)))) ISNULL));
SELECT v0.c0 FROM rt1, vt0, v0;
SELECT DISTINCT rt1.c1, rt1.c0, rt1.c2 FROM rt1;
SELECT DISTINCT rt1.c1, rt1.c0, rt1.c2 FROM rt1 WHERE (CASE WHEN LOWER(rt1.c0) THEN x'18d0' END) UNION SELECT DISTINCT rt1.c1, rt1.c0, rt1.c2 FROM rt1 WHERE ((NOT (CASE WHEN LOWER(rt1.c0) THEN x'18d0' END))) UNION SELECT DISTINCT rt1.c1, rt1.c0, rt1.c2 FROM rt1 WHERE (((CASE WHEN LOWER(rt1.c0) THEN x'18d0' END) ISNULL));
SELECT DISTINCT rt1.c1, rt1.c0, rt1.c2 FROM rt1;
SELECT ALL t0.c0, t0.c2, v0.c0, vt0.c0, rt1.c0, v0.c2 FROM v0 LEFT OUTER JOIN vt0 ON t0.c2 RIGHT OUTER JOIN t0 ON (((rt1.c2)) NOT BETWEEN ((((NULL)GLOB(v0.c0)))) AND (((v0.c2 IN ())))) FULL OUTER JOIN rt1 ON LENGTH(((((t0.c0)AND(t0.c1)))AND(rt1.c0))) GROUP BY t0.c0, t0.c2, v0.c0, vt0.c0, rt1.c0, v0.c2;
SELECT rt1.c1, rt1.c0 FROM t0, rt1, vt0 GROUP BY rt1.c1, rt1.c0;
SELECT rt1.c1, rt1.c0 FROM t0, rt1, vt0 GROUP BY rt1.c1, rt1.c0 HAVING GROUP_CONCAT(AVG(rt1.c0)) UNION ALL SELECT rt1.c1, rt1.c0 FROM t0, rt1, vt0 GROUP BY rt1.c1, rt1.c0 HAVING (NOT (GROUP_CONCAT(AVG(rt1.c0)))) UNION ALL SELECT ALL rt1.c1, rt1.c0 FROM t0, rt1, vt0 GROUP BY rt1.c1, rt1.c0 HAVING ((GROUP_CONCAT(AVG(rt1.c0))) ISNULL);
SELECT ALL vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE ((((vt0.c0)) BETWEEN (((vt0.c0 IN ()))) AND ((((vt0.c0)>(vt0.c0)))))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT ((((vt0.c0)) BETWEEN (((vt0.c0 IN ()))) AND ((((vt0.c0)>(vt0.c0)))))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((((((vt0.c0)) BETWEEN (((vt0.c0 IN ()))) AND ((((vt0.c0)>(vt0.c0)))))) ISNULL));
SELECT ALL vt0.c0 FROM vt0;
SELECT DISTINCT t0.c1, rt1.c2, t0.c2, rt1.c0 FROM rt1, t0;
SELECT DISTINCT t0.c1, rt1.c2, t0.c2, rt1.c0 FROM rt1, t0 WHERE ((((((('(<R')AND(rt1.c0)))OR(rt1.c2)))%(((((((((t0.c1)OR(t0.c2)))AND(rt1.c2)))AND(t0.c0)))AND(rt1.c0))))) UNION SELECT DISTINCT t0.c1, rt1.c2, t0.c2, rt1.c0 FROM rt1, t0 WHERE ((NOT ((((((('(<R')AND(rt1.c0)))OR(rt1.c2)))%(((((((((t0.c1)OR(t0.c2)))AND(rt1.c2)))AND(t0.c0)))AND(rt1.c0))))))) UNION SELECT DISTINCT t0.c1, rt1.c2, t0.c2, rt1.c0 FROM rt1, t0 WHERE ((((((((('(<R')AND(rt1.c0)))OR(rt1.c2)))%(((((((((t0.c1)OR(t0.c2)))AND(rt1.c2)))AND(t0.c0)))AND(rt1.c0))))) ISNULL));
SELECT DISTINCT t0.c1, rt1.c2, t0.c2, rt1.c0 FROM rt1, t0;
SELECT ALL rt1.c0, t0.c0, rt1.c2 FROM t0, vt0 RIGHT OUTER JOIN rt1 ON (((((((t0.c2)) BETWEEN ((t0.c0)) AND ((t0.c0))))AND(v0.c1 COLLATE RTRIM)))AND(((t0.c1) NOT BETWEEN (v0.c2) AND (v0.c0)))) LEFT OUTER JOIN v0 ON (((((t0.c2) NOT BETWEEN (rt1.c0) AND (t0.c2))))=(((v0.c2 IN (NULL, t0.c1))))) GROUP BY rt1.c0, t0.c0, rt1.c2;
SELECT t0.c0, t0.c1, vt0.c0, t0.c2 FROM t0, vt0 GROUP BY t0.c0, t0.c1, vt0.c0, t0.c2;
SELECT t0.c0, t0.c1, vt0.c0, t0.c2 FROM t0, vt0 GROUP BY t0.c0, t0.c1, vt0.c0, t0.c2 HAVING TOTAL(CASE WHEN vt0.c0 THEN MIN(COUNT(*)) END) UNION ALL SELECT ALL t0.c0, t0.c1, vt0.c0, t0.c2 FROM t0, vt0 GROUP BY t0.c0, t0.c1, vt0.c0, t0.c2 HAVING (NOT (TOTAL(CASE WHEN vt0.c0 THEN MIN(COUNT(*)) END))) UNION ALL SELECT t0.c0, t0.c1, vt0.c0, t0.c2 FROM t0, vt0 GROUP BY t0.c0, t0.c1, vt0.c0, t0.c2 HAVING ((TOTAL(CASE WHEN vt0.c0 THEN MIN(COUNT(*)) END)) ISNULL);
SELECT rt1.c0, rt1.c2 FROM rt1;
SELECT ALL rt1.c0, rt1.c2 FROM rt1 WHERE ('1828484757' COLLATE NOCASE COLLATE NOCASE COLLATE RTRIM) UNION ALL SELECT rt1.c0, rt1.c2 FROM rt1 WHERE ((NOT ('1828484757' COLLATE NOCASE COLLATE NOCASE COLLATE RTRIM))) UNION ALL SELECT rt1.c0, rt1.c2 FROM rt1 WHERE ((('1828484757' COLLATE NOCASE COLLATE NOCASE COLLATE RTRIM) ISNULL));
SELECT rt1.c0, rt1.c2 FROM rt1;
SELECT DISTINCT * FROM rt1 CROSS JOIN t0 ON CASE WHEN t0.c2 THEN rt1.c0 END COLLATE RTRIM RIGHT OUTER JOIN vt0 ON TRIM(DISTINCT (+ (t0.c1)), json_insert(t0.c1, vt0.c0, rt1.c1));
SELECT DISTINCT * FROM rt1 CROSS JOIN t0 ON CASE WHEN t0.c2 THEN rt1.c0 END COLLATE RTRIM RIGHT OUTER JOIN vt0 ON TRIM(DISTINCT (+ (t0.c1)), json_insert(t0.c1, vt0.c0, rt1.c1)) WHERE ((((t0.c0 IN ()))GLOB((- ('1720269012'))))) UNION SELECT DISTINCT * FROM rt1 CROSS JOIN t0 ON CASE WHEN t0.c2 THEN rt1.c0 END COLLATE RTRIM RIGHT OUTER JOIN vt0 ON TRIM(DISTINCT (+ (t0.c1)), json_insert(t0.c1, vt0.c0, rt1.c1)) WHERE ((NOT ((((t0.c0 IN ()))GLOB((- ('1720269012'))))))) UNION SELECT DISTINCT * FROM rt1 CROSS JOIN t0 ON CASE WHEN t0.c2 THEN rt1.c0 END COLLATE RTRIM RIGHT OUTER JOIN vt0 ON TRIM(DISTINCT (+ (t0.c1)), json_insert(t0.c1, vt0.c0, rt1.c1)) WHERE ((((((t0.c0 IN ()))GLOB((- ('1720269012'))))) ISNULL));
SELECT DISTINCT * FROM rt1 CROSS JOIN t0 ON CASE WHEN t0.c2 THEN rt1.c0 END COLLATE RTRIM RIGHT OUTER JOIN vt0 ON TRIM(DISTINCT (+ (t0.c1)), json_insert(t0.c1, vt0.c0, rt1.c1));
SELECT ALL v0.c1, v0.c0, v0.c2 FROM v0 GROUP BY v0.c1, v0.c0, v0.c2;
SELECT ALL v0.c1, v0.c0, v0.c2 FROM v0 WHERE ((v0.c0 IN ())) GROUP BY v0.c1, v0.c0, v0.c2 UNION SELECT ALL v0.c1, v0.c0, v0.c2 FROM v0 WHERE ((NOT ((v0.c0 IN ())))) GROUP BY v0.c1, v0.c0, v0.c2 UNION SELECT ALL v0.c1, v0.c0, v0.c2 FROM v0 WHERE ((((v0.c0 IN ())) ISNULL)) GROUP BY v0.c1, v0.c0, v0.c2;
SELECT ALL v0.c1, v0.c0, v0.c2 FROM v0 GROUP BY v0.c1, v0.c0, v0.c2;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((MIN(MIN(COUNT(*)))) BETWEEN (COUNT(vt0.c0)) AND (COUNT(*))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (((MIN(MIN(COUNT(*)))) BETWEEN (COUNT(vt0.c0)) AND (COUNT(*))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((MIN(MIN(COUNT(*)))) BETWEEN (COUNT(vt0.c0)) AND (COUNT(*)))) ISNULL);
SELECT ALL * FROM t0, rt1 RIGHT OUTER JOIN v0 ON ((((x''))<((v0.c0))) IN ()) FULL OUTER JOIN vt0 ON (~ (((((rt1.c1)OR(t0.c0)))OR(rt1.c0))));
SELECT ALL * FROM t0, rt1 RIGHT OUTER JOIN v0 ON ((((x''))<((v0.c0))) IN ()) FULL OUTER JOIN vt0 ON (~ (((((rt1.c1)OR(t0.c0)))OR(rt1.c0)))) WHERE (((((rt1.c0)<>(vt0.c0))) BETWEEN ((~ (v0.c1))) AND (CASE t0.c0  WHEN t0.c1 THEN t0.c0 END))) UNION ALL SELECT ALL * FROM t0, rt1 RIGHT OUTER JOIN v0 ON ((((x''))<((v0.c0))) IN ()) FULL OUTER JOIN vt0 ON (~ (((((rt1.c1)OR(t0.c0)))OR(rt1.c0)))) WHERE ((NOT (((((rt1.c0)<>(vt0.c0))) BETWEEN ((~ (v0.c1))) AND (CASE t0.c0  WHEN t0.c1 THEN t0.c0 END))))) UNION ALL SELECT ALL * FROM t0, rt1 RIGHT OUTER JOIN v0 ON ((((x''))<((v0.c0))) IN ()) FULL OUTER JOIN vt0 ON (~ (((((rt1.c1)OR(t0.c0)))OR(rt1.c0)))) WHERE (((((((rt1.c0)<>(vt0.c0))) BETWEEN ((~ (v0.c1))) AND (CASE t0.c0  WHEN t0.c1 THEN t0.c0 END))) ISNULL));
SELECT ALL * FROM t0, rt1 RIGHT OUTER JOIN v0 ON ((((x''))<((v0.c0))) IN ()) FULL OUTER JOIN vt0 ON (~ (((((rt1.c1)OR(t0.c0)))OR(rt1.c0))));
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (((((((((((v0.c0)IS(v0.c1)))AND(CASE v0.c2  WHEN v0.c1 THEN v0.c0 END)))AND(json_array_length(v0.c0))))AND((+ ('1866531974')))))OR(CAST(v0.c1 AS REAL)))) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (((((((((((v0.c0)IS(v0.c1)))AND(CASE v0.c2  WHEN v0.c1 THEN v0.c0 END)))AND(json_array_length(v0.c0))))AND((+ ('1866531974')))))OR(CAST(v0.c1 AS REAL)))))) UNION SELECT DISTINCT * FROM v0 WHERE (((((((((((((v0.c0)IS(v0.c1)))AND(CASE v0.c2  WHEN v0.c1 THEN v0.c0 END)))AND(json_array_length(v0.c0))))AND((+ ('1866531974')))))OR(CAST(v0.c1 AS REAL)))) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT ALL t0.c1, rt1.c2, t0.c0 FROM rt1, vt0, t0 GROUP BY t0.c1, rt1.c2, t0.c0;
SELECT t0.c1, rt1.c2, t0.c0 FROM rt1, vt0, t0 WHERE (CAST(CASE WHEN rt1.c0 THEN rt1.c0 ELSE t0.c1 END AS NUMERIC)) GROUP BY t0.c1, rt1.c2, t0.c0 UNION SELECT ALL t0.c1, rt1.c2, t0.c0 FROM rt1, vt0, t0 WHERE ((NOT (CAST(CASE WHEN rt1.c0 THEN rt1.c0 ELSE t0.c1 END AS NUMERIC)))) GROUP BY t0.c1, rt1.c2, t0.c0 UNION SELECT t0.c1, rt1.c2, t0.c0 FROM rt1, vt0, t0 WHERE (((CAST(CASE WHEN rt1.c0 THEN rt1.c0 ELSE t0.c1 END AS NUMERIC)) ISNULL)) GROUP BY t0.c1, rt1.c2, t0.c0;
SELECT ALL t0.c1, rt1.c2, t0.c0 FROM rt1, vt0, t0 GROUP BY t0.c1, rt1.c2, t0.c0;
SELECT ALL rt1.c2 FROM vt0 LEFT OUTER JOIN t0 ON (((((rt1.c2) IS FALSE)))=((json_array_length(rt1.c2)))) CROSS JOIN v0 ON ((t0.c2)<(vt0.c0)) COLLATE RTRIM COLLATE BINARY INNER JOIN rt1 ON (((('') NOT BETWEEN (t0.c2) AND (t0.c1)))OR(CAST(vt0.c0 AS INTEGER))) GROUP BY rt1.c2;
SELECT ALL * FROM t0, v0, rt1;
SELECT * FROM t0, v0, rt1 WHERE (CAST((- (v0.c2)) AS TEXT)) UNION ALL SELECT * FROM t0, v0, rt1 WHERE ((NOT (CAST((- (v0.c2)) AS TEXT)))) UNION ALL SELECT ALL * FROM t0, v0, rt1 WHERE (((CAST((- (v0.c2)) AS TEXT)) ISNULL));
SELECT ALL * FROM t0, v0, rt1;
SELECT DISTINCT * FROM t0, v0;
SELECT DISTINCT * FROM t0, v0 WHERE ((CAST(x'' AS TEXT) IN ())) UNION SELECT DISTINCT * FROM t0, v0 WHERE ((NOT ((CAST(x'' AS TEXT) IN ())))) UNION SELECT DISTINCT * FROM t0, v0 WHERE ((((CAST(x'' AS TEXT) IN ())) ISNULL));
SELECT DISTINCT * FROM t0, v0;
SELECT rt1.c0, t0.c0, rt1.c2, rt1.c1, v0.c1, v0.c2, t0.c1 FROM vt0, v0, t0, rt1 GROUP BY rt1.c0, t0.c0, rt1.c2, rt1.c1, v0.c1, v0.c2, t0.c1;
SELECT ALL rt1.c0, t0.c0, rt1.c2, rt1.c1, v0.c1, v0.c2, t0.c1 FROM vt0, v0, t0, rt1 WHERE ((- (CASE rt1.c0  WHEN rt1.c2 THEN vt0.c0 END))) GROUP BY rt1.c0, t0.c0, rt1.c2, rt1.c1, v0.c1, v0.c2, t0.c1 UNION SELECT rt1.c0, t0.c0, rt1.c2, rt1.c1, v0.c1, v0.c2, t0.c1 FROM vt0, v0, t0, rt1 WHERE ((NOT ((- (CASE rt1.c0  WHEN rt1.c2 THEN vt0.c0 END))))) GROUP BY rt1.c0, t0.c0, rt1.c2, rt1.c1, v0.c1, v0.c2, t0.c1 UNION SELECT rt1.c0, t0.c0, rt1.c2, rt1.c1, v0.c1, v0.c2, t0.c1 FROM vt0, v0 NOT INDEXED, t0, rt1 WHERE ((((- (CASE rt1.c0  WHEN rt1.c2 THEN vt0.c0 END))) ISNULL)) GROUP BY rt1.c0, t0.c0, rt1.c2, rt1.c1, v0.c1, v0.c2, t0.c1;
SELECT rt1.c0, t0.c0, rt1.c2, rt1.c1, v0.c1, v0.c2, t0.c1 FROM vt0, v0, t0, rt1 GROUP BY rt1.c0, t0.c0, rt1.c2, rt1.c1, v0.c1, v0.c2, t0.c1;
SELECT t0.c2, t0.c0, rt1.c0, v0.c0, rt1.c2 FROM t0, rt1, v0 GROUP BY t0.c2, t0.c0, rt1.c0, v0.c0, rt1.c2;
SELECT ALL t0.c2, t0.c0, rt1.c0, v0.c0, rt1.c2 FROM t0, rt1, v0 GROUP BY t0.c2, t0.c0, rt1.c0, v0.c0, rt1.c2 HAVING (((rt1.c0, v0.c2, MAX(SUM(SUM(MAX(GROUP_CONCAT(t0.c1))))))) BETWEEN (((- (TOTAL(COUNT(*)))), COUNT(*), ((COUNT(*))<=(SUM(rt1.c0))))) AND ((CAST(COUNT(*) AS REAL), ((v0.c0) BETWEEN (t0.c0) AND (MAX(v0.c1))), TRIM(t0.c1)))) UNION ALL SELECT t0.c2, t0.c0, rt1.c0, v0.c0, rt1.c2 FROM t0, rt1, v0 GROUP BY t0.c2, t0.c0, rt1.c0, v0.c0, rt1.c2 HAVING (NOT ((((rt1.c0, v0.c2, MAX(SUM(SUM(MAX(GROUP_CONCAT(t0.c1))))))) BETWEEN (((- (TOTAL(COUNT(*)))), COUNT(*), ((COUNT(*))<=(SUM(rt1.c0))))) AND ((CAST(COUNT(*) AS REAL), ((v0.c0) BETWEEN (t0.c0) AND (MAX(v0.c1))), TRIM(t0.c1)))))) UNION ALL SELECT ALL t0.c2, t0.c0, rt1.c0, v0.c0, rt1.c2 FROM t0, rt1, v0 GROUP BY t0.c2, t0.c0, rt1.c0, v0.c0, rt1.c2 HAVING (((((rt1.c0, v0.c2, MAX(SUM(SUM(MAX(GROUP_CONCAT(t0.c1))))))) BETWEEN (((- (TOTAL(COUNT(*)))), COUNT(*), ((COUNT(*))<=(SUM(rt1.c0))))) AND ((CAST(COUNT(*) AS REAL), ((v0.c0) BETWEEN (t0.c0) AND (MAX(v0.c1))), TRIM(t0.c1))))) ISNULL);
SELECT * FROM t0, v0;
SELECT * FROM t0, v0 WHERE (CASE WHEN (('-291778236') NOT BETWEEN (t0.c2) AND (t0.c0)) THEN (v0.c2 IN ()) ELSE ((((v0.c0)OR(v0.c0)))AND(0.9292904429406768)) END) UNION ALL SELECT ALL * FROM t0, v0 WHERE ((NOT (CASE WHEN (('-291778236') NOT BETWEEN (t0.c2) AND (t0.c0)) THEN (v0.c2 IN ()) ELSE ((((v0.c0)OR(v0.c0)))AND(0.9292904429406768)) END))) UNION ALL SELECT * FROM t0, v0 WHERE (((CASE WHEN (('-291778236') NOT BETWEEN (t0.c2) AND (t0.c0)) THEN (v0.c2 IN ()) ELSE ((((v0.c0)OR(v0.c0)))AND(0.9292904429406768)) END) ISNULL));
SELECT * FROM t0, v0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (((((((((((v0.c1)OR(v0.c1)))OR(v0.c0)))OR(v0.c1)))AND(v0.c0))) BETWEEN (((x'c8df')||(v0.c1))) AND (CAST(v0.c2 AS NUMERIC)))) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (((((((((((v0.c1)OR(v0.c1)))OR(v0.c0)))OR(v0.c1)))AND(v0.c0))) BETWEEN (((x'c8df')||(v0.c1))) AND (CAST(v0.c2 AS NUMERIC)))))) UNION SELECT DISTINCT * FROM v0 WHERE (((((((((((((v0.c1)OR(v0.c1)))OR(v0.c0)))OR(v0.c1)))AND(v0.c0))) BETWEEN (((x'c8df')||(v0.c1))) AND (CAST(v0.c2 AS NUMERIC)))) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT rt1.c0, rt1.c2, rt1.c1, vt0.c0 FROM vt0 LEFT OUTER JOIN rt1 ON (NOT (((vt0.c0) NOT NULL))) GROUP BY rt1.c0, rt1.c2, rt1.c1, vt0.c0;
SELECT rt1.c0, rt1.c2, rt1.c1, vt0.c0 FROM vt0 LEFT OUTER JOIN rt1 ON (NOT (((vt0.c0) NOT NULL))) WHERE (((rt1.c2 COLLATE NOCASE)-(x''))) GROUP BY rt1.c0, rt1.c2, rt1.c1, vt0.c0 UNION SELECT rt1.c0, rt1.c2, rt1.c1, vt0.c0 FROM vt0 LEFT OUTER JOIN rt1 ON (NOT (((vt0.c0) NOT NULL))) WHERE ((NOT (((rt1.c2 COLLATE NOCASE)-(x''))))) GROUP BY rt1.c0, rt1.c2, rt1.c1, vt0.c0 UNION SELECT rt1.c0, rt1.c2, rt1.c1, vt0.c0 FROM vt0 LEFT OUTER JOIN rt1 ON (NOT (((vt0.c0) NOT NULL))) WHERE (((((rt1.c2 COLLATE NOCASE)-(x''))) ISNULL)) GROUP BY rt1.c0, rt1.c2, rt1.c1, vt0.c0;
SELECT rt1.c0, rt1.c2, rt1.c1, vt0.c0 FROM vt0 LEFT OUTER JOIN rt1 ON (NOT (((vt0.c0) NOT NULL))) GROUP BY rt1.c0, rt1.c2, rt1.c1, vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING COUNT(*) COLLATE RTRIM UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(*) COLLATE RTRIM)) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT(*) COLLATE RTRIM) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING COUNT(*) COLLATE RTRIM UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(*) COLLATE RTRIM)) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT(*) COLLATE RTRIM) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)<>(NULL))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT (((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)!=(NULL))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE (((((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)!=(NULL))) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT v0.c2 FROM t0, vt0 RIGHT OUTER JOIN v0 ON x'';
SELECT DISTINCT v0.c2 FROM t0, vt0 RIGHT OUTER JOIN v0 ON x'' WHERE (IFNULL('', v0.c1)) UNION SELECT DISTINCT v0.c2 FROM t0, vt0 RIGHT OUTER JOIN v0 ON x'' WHERE ((NOT (IFNULL('', v0.c1)))) UNION SELECT DISTINCT v0.c2 FROM t0, vt0 RIGHT OUTER JOIN v0 ON x'' WHERE (((IFNULL('', v0.c1)) ISNULL));
SELECT DISTINCT v0.c2 FROM t0, vt0 RIGHT OUTER JOIN v0 ON x'';
SELECT ALL t0.c1, rt1.c0, v0.c1, t0.c0, rt1.c2, t0.c2, v0.c0, rt1.c1, vt0.c0, v0.c2 FROM v0 CROSS JOIN t0 ON (rt1.c2 COLLATE RTRIM IN (((v0.c1) ISNULL), ((rt1.c2)-(t0.c2)))) RIGHT OUTER JOIN rt1 ON (((t0.c0 IN (x'')))*((((t0.c2))>=((rt1.c1))))) FULL OUTER JOIN vt0 ON CAST((((('	n')AND(t0.c0)))AND(t0.c0)) AS REAL) GROUP BY t0.c1, rt1.c0, v0.c1, t0.c0, rt1.c2, t0.c2, v0.c0, rt1.c1, vt0.c0, v0.c2;
SELECT ALL v0.c0, v0.c2 FROM v0 GROUP BY v0.c0, v0.c2;
SELECT v0.c0, v0.c2 FROM v0 GROUP BY v0.c0, v0.c2 HAVING v0.c1 UNION ALL SELECT ALL v0.c0, v0.c2 FROM v0 GROUP BY v0.c0, v0.c2 HAVING (NOT (v0.c1)) UNION ALL SELECT ALL v0.c0, v0.c2 FROM v0 GROUP BY v0.c0, v0.c2 HAVING ((v0.c1) ISNULL);
SELECT ALL v0.c0, v0.c2 FROM v0 GROUP BY v0.c0, v0.c2;
SELECT v0.c0, v0.c2 FROM v0 GROUP BY v0.c0, v0.c2 HAVING v0.c1 UNION ALL SELECT ALL v0.c0, v0.c2 FROM v0 GROUP BY v0.c0, v0.c2 HAVING (NOT (v0.c1)) UNION ALL SELECT ALL v0.c0, v0.c2 FROM v0 GROUP BY v0.c0, v0.c2 HAVING ((v0.c1) ISNULL);
SELECT ALL v0.c0, v0.c2 FROM v0 GROUP BY v0.c0, v0.c2;
SELECT * FROM rt1, vt0, t0;
SELECT ALL * FROM rt1, vt0, t0 WHERE ((+ (((t0.c2) NOT BETWEEN (vt0.c0) AND (x'6691'))))) UNION ALL SELECT * FROM rt1, vt0, t0 WHERE ((NOT ((+ (((t0.c2) NOT BETWEEN (vt0.c0) AND (x'6691'))))))) UNION ALL SELECT * FROM rt1 NOT INDEXED, vt0, t0 WHERE ((((+ (((t0.c2) NOT BETWEEN (vt0.c0) AND (x'6691'))))) ISNULL));
SELECT * FROM rt1, vt0, t0;
SELECT DISTINCT vt0.c0, rt1.c0, v0.c0, rt1.c1, v0.c2, t0.c1, t0.c2, rt1.c2, v0.c1 FROM v0, t0, rt1, vt0;
SELECT DISTINCT vt0.c0, rt1.c0, v0.c0, rt1.c1, v0.c2, t0.c1, t0.c2, rt1.c2, v0.c1 FROM v0, t0, rt1, vt0 WHERE (CASE v0.c2  WHEN -3.76655294E8 THEN v0.c0 ELSE rt1.c1 END COLLATE NOCASE) UNION SELECT DISTINCT vt0.c0, rt1.c0, v0.c0, rt1.c1, v0.c2, t0.c1, t0.c2, rt1.c2, v0.c1 FROM v0, t0, rt1, vt0 WHERE ((NOT (CASE v0.c2  WHEN -3.76655294E8 THEN v0.c0 ELSE rt1.c1 END COLLATE NOCASE))) UNION SELECT DISTINCT vt0.c0, rt1.c0, v0.c0, rt1.c1, v0.c2, t0.c1, t0.c2, rt1.c2, v0.c1 FROM v0, t0, rt1, vt0 WHERE (((CASE v0.c2  WHEN -3.76655294E8 THEN v0.c0 ELSE rt1.c1 END COLLATE NOCASE) ISNULL));
SELECT DISTINCT vt0.c0, rt1.c0, v0.c0, rt1.c1, v0.c2, t0.c1, t0.c2, rt1.c2, v0.c1 FROM v0, t0, rt1, vt0;
SELECT ALL rt1.c1, v0.c0, v0.c2 FROM v0, vt0, rt1 GROUP BY rt1.c1, v0.c0, v0.c2;
SELECT ALL rt1.c1, v0.c0, v0.c2 FROM v0, vt0, rt1 WHERE (((((((v0.c2)>(v0.c1)))AND(CAST(v0.c2 AS NUMERIC))))AND((+ (v0.c2))))) GROUP BY rt1.c1, v0.c0, v0.c2 UNION SELECT ALL rt1.c1, v0.c0, v0.c2 FROM v0, vt0, rt1 WHERE ((NOT (((((((v0.c2)>(v0.c1)))AND(CAST(v0.c2 AS NUMERIC))))AND((+ (v0.c2))))))) GROUP BY rt1.c1, v0.c0, v0.c2 UNION SELECT rt1.c1, v0.c0, v0.c2 FROM v0, vt0, rt1 WHERE (((((((((v0.c2)>(v0.c1)))AND(CAST(v0.c2 AS NUMERIC))))AND((+ (v0.c2))))) ISNULL)) GROUP BY rt1.c1, v0.c0, v0.c2;
SELECT ALL rt1.c1, v0.c0, v0.c2 FROM v0, vt0, rt1 GROUP BY rt1.c1, v0.c0, v0.c2;
SELECT ALL v0.c2, rt1.c1, vt0.c0, rt1.c2 FROM vt0, rt1 RIGHT OUTER JOIN v0 ON CAST(((v0.c2) ISNULL) AS INTEGER) GROUP BY v0.c2, rt1.c1, vt0.c0, rt1.c2;
SELECT ALL v0.c2, rt1.c1, vt0.c0, rt1.c2 FROM vt0, rt1 RIGHT OUTER JOIN v0 ON CAST(((v0.c2) ISNULL) AS INTEGER) GROUP BY v0.c2, rt1.c1, vt0.c0, rt1.c2 HAVING MIN(TOTAL(MIN(-1842441470))) UNION ALL SELECT ALL v0.c2, rt1.c1, vt0.c0, rt1.c2 FROM vt0, rt1 RIGHT OUTER JOIN v0 ON CAST(((v0.c2) ISNULL) AS INTEGER) GROUP BY v0.c2, rt1.c1, vt0.c0, rt1.c2 HAVING (NOT (MIN(TOTAL(MIN(-1842441470))))) UNION ALL SELECT v0.c2, rt1.c1, vt0.c0, rt1.c2 FROM vt0, rt1 RIGHT OUTER JOIN v0 ON CAST(((v0.c2) ISNULL) AS INTEGER) GROUP BY v0.c2, rt1.c1, vt0.c0, rt1.c2 HAVING ((MIN(TOTAL(MIN(-1842441470)))) ISNULL);
SELECT ALL * FROM rt1, vt0;
SELECT * FROM rt1, vt0 WHERE (rt1.c2) UNION ALL SELECT ALL * FROM rt1, vt0 WHERE ((NOT (rt1.c2))) UNION ALL SELECT * FROM rt1, vt0 WHERE (((rt1.c2) ISNULL));
SELECT ALL * FROM rt1, vt0;
SELECT DISTINCT * FROM v0, t0;
SELECT DISTINCT * FROM v0, t0 WHERE (json_patch(CASE t0.c0  WHEN v0.c0 THEN t0.c0 WHEN t0.c0 THEN v0.c2 WHEN t0.c0 THEN t0.c0 ELSE t0.c1 END, CAST(t0.c2 AS REAL))) UNION SELECT DISTINCT * FROM v0, t0 WHERE ((NOT (json_patch(CASE t0.c0  WHEN v0.c0 THEN t0.c0 WHEN t0.c0 THEN v0.c2 WHEN t0.c0 THEN t0.c0 ELSE t0.c1 END, CAST(t0.c2 AS REAL))))) UNION SELECT DISTINCT * FROM v0, t0 WHERE (((json_patch(CASE t0.c0  WHEN v0.c0 THEN t0.c0 WHEN t0.c0 THEN v0.c2 WHEN t0.c0 THEN t0.c0 ELSE t0.c1 END, CAST(t0.c2 AS REAL))) ISNULL));
SELECT DISTINCT * FROM v0, t0;
SELECT ALL t0.c0, t0.c1, v0.c2 FROM t0, rt1 RIGHT OUTER JOIN v0 ON CASE (((v0.c2))>((vt0.c0)))  WHEN ((v0.c1)OR(v0.c0)) THEN (((vt0.c0, t0.c2, rt1.c0))<=((t0.c0, rt1.c0, v0.c1))) ELSE v0.c2 COLLATE BINARY END FULL OUTER JOIN vt0 ON CAST(NULLIF(v0.c2, v0.c1) AS INTEGER) GROUP BY t0.c0, t0.c1, v0.c2;
SELECT v0.c2, rt1.c2, v0.c0 FROM v0 NATURAL JOIN rt1 GROUP BY v0.c2, rt1.c2, v0.c0;
SELECT v0.c2, rt1.c2, v0.c0 FROM v0 NATURAL JOIN rt1 GROUP BY v0.c2, rt1.c2, v0.c0 HAVING COUNT(((rt1.c1)+(v0.c2))) UNION ALL SELECT ALL v0.c2, rt1.c2, v0.c0 FROM v0 NOT INDEXED NATURAL JOIN rt1 GROUP BY v0.c2, rt1.c2, v0.c0 HAVING (NOT (COUNT(((rt1.c1)+(v0.c2))))) UNION ALL SELECT v0.c2, rt1.c2, v0.c0 FROM v0 NATURAL JOIN rt1 GROUP BY v0.c2, rt1.c2, v0.c0 HAVING ((COUNT(((rt1.c1)+(v0.c2)))) ISNULL);
SELECT v0.c2, rt1.c2, v0.c0 FROM v0 NATURAL JOIN rt1 GROUP BY v0.c2, rt1.c2, v0.c0;
SELECT v0.c2, rt1.c2, v0.c0 FROM v0 NATURAL JOIN rt1 GROUP BY v0.c2, rt1.c2, v0.c0 HAVING COUNT(((rt1.c1)+(v0.c2))) UNION ALL SELECT ALL v0.c2, rt1.c2, v0.c0 FROM v0 NOT INDEXED NATURAL JOIN rt1 GROUP BY v0.c2, rt1.c2, v0.c0 HAVING (NOT (COUNT(((rt1.c1)+(v0.c2))))) UNION ALL SELECT v0.c2, rt1.c2, v0.c0 FROM v0 NATURAL JOIN rt1 GROUP BY v0.c2, rt1.c2, v0.c0 HAVING ((COUNT(((rt1.c1)+(v0.c2)))) ISNULL);
SELECT v0.c2, rt1.c2, v0.c0 FROM v0 NATURAL JOIN rt1 GROUP BY v0.c2, rt1.c2, v0.c0;
SELECT t0.c1, rt1.c0, t0.c2, rt1.c1, rt1.c2, v0.c0, t0.c0 FROM vt0, t0, rt1 INNER JOIN v0 ON rt1.c1;
SELECT ALL t0.c1, rt1.c0, t0.c2, rt1.c1, rt1.c2, v0.c0, t0.c0 FROM vt0, t0, rt1 INNER JOIN v0 ON rt1.c1 WHERE (t0.c0) UNION ALL SELECT t0.c1, rt1.c0, t0.c2, rt1.c1, rt1.c2, v0.c0, t0.c0 FROM vt0, t0, rt1 INNER JOIN v0 ON rt1.c1 WHERE ((NOT (t0.c0))) UNION ALL SELECT ALL t0.c1, rt1.c0, t0.c2, rt1.c1, rt1.c2, v0.c0, t0.c0 FROM vt0, t0, rt1 INNER JOIN v0 ON rt1.c1 WHERE (((t0.c0) ISNULL));
SELECT t0.c1, rt1.c0, t0.c2, rt1.c1, rt1.c2, v0.c0, t0.c0 FROM vt0, t0, rt1 INNER JOIN v0 ON rt1.c1;
SELECT DISTINCT * FROM t0, rt1 INNER JOIN v0 ON (((v0.c0)) NOT BETWEEN (('1073874823')) AND ((CAST(t0.c2 AS NUMERIC)))) RIGHT OUTER JOIN vt0 ON ((((((t0.c1)||(NULL)))AND(CASE t0.c2  WHEN t0.c1 THEN vt0.c0 END)))OR(rt1.c2 COLLATE BINARY));
SELECT DISTINCT * FROM t0, rt1 INNER JOIN v0 ON (((v0.c0)) NOT BETWEEN (('1073874823')) AND ((CAST(t0.c2 AS NUMERIC)))) RIGHT OUTER JOIN vt0 ON ((((((t0.c1)||(NULL)))AND(CASE t0.c2  WHEN t0.c1 THEN vt0.c0 END)))OR(rt1.c2 COLLATE BINARY)) WHERE ((((((rt1.c0) IS TRUE), (t0.c1 IN (rt1.c0, rt1.c0)), ((((t0.c2)AND(v0.c1)))AND(v0.c0))))<=((((((v0.c1)AND(-1.411329284E9)))OR(t0.c1)), x'', ((rt1.c2) BETWEEN (v0.c0) AND (rt1.c0)))))) UNION SELECT DISTINCT * FROM t0, rt1 INNER JOIN v0 ON (((v0.c0)) NOT BETWEEN (('1073874823')) AND ((CAST(t0.c2 AS NUMERIC)))) RIGHT OUTER JOIN vt0 ON ((((((t0.c1)||(NULL)))AND(CASE t0.c2  WHEN t0.c1 THEN vt0.c0 END)))OR(rt1.c2 COLLATE BINARY)) WHERE ((NOT ((((((rt1.c0) IS TRUE), (t0.c1 IN (rt1.c0, rt1.c0)), ((((t0.c2)AND(v0.c1)))AND(v0.c0))))<=((((((v0.c1)AND(-1.411329284E9)))OR(t0.c1)), x'', ((rt1.c2) BETWEEN (v0.c0) AND (rt1.c0)))))))) UNION SELECT DISTINCT * FROM t0, rt1 NOT INDEXED INNER JOIN v0 ON (((v0.c0)) NOT BETWEEN (('1073874823')) AND ((CAST(t0.c2 AS NUMERIC)))) RIGHT OUTER JOIN vt0 ON ((((((t0.c1)||(NULL)))AND(CASE t0.c2  WHEN t0.c1 THEN vt0.c0 END)))OR(rt1.c2 COLLATE BINARY)) WHERE ((((((((rt1.c0) IS TRUE), (t0.c1 IN (rt1.c0, rt1.c0)), ((((t0.c2)AND(v0.c1)))AND(v0.c0))))<=((((((v0.c1)AND(-1.411329284E9)))OR(t0.c1)), x'', ((rt1.c2) BETWEEN (v0.c0) AND (rt1.c0)))))) ISNULL));
SELECT DISTINCT * FROM t0, rt1 INNER JOIN v0 ON (((v0.c0)) NOT BETWEEN (('1073874823')) AND ((CAST(t0.c2 AS NUMERIC)))) RIGHT OUTER JOIN vt0 ON ((((((t0.c1)||(NULL)))AND(CASE t0.c2  WHEN t0.c1 THEN vt0.c0 END)))OR(rt1.c2 COLLATE BINARY));
SELECT ALL v0.c1, v0.c2, v0.c0 FROM v0 GROUP BY v0.c1, v0.c2, v0.c0;
SELECT v0.c1, v0.c2, v0.c0 FROM v0 WHERE (((((v0.c0))<=((v0.c1))) IN (((v0.c2) NOT BETWEEN (v0.c2) AND (v0.c1))))) GROUP BY v0.c1, v0.c2, v0.c0 UNION SELECT ALL v0.c1, v0.c2, v0.c0 FROM v0 WHERE ((NOT (((((v0.c0))<=((v0.c1))) IN (((v0.c2) NOT BETWEEN (v0.c2) AND (v0.c1))))))) GROUP BY v0.c1, v0.c2, v0.c0 UNION SELECT v0.c1, v0.c2, v0.c0 FROM v0 WHERE (((((((v0.c0))<=((v0.c1))) IN (((v0.c2) NOT BETWEEN (v0.c2) AND (v0.c1))))) ISNULL)) GROUP BY v0.c1, v0.c2, v0.c0;
SELECT ALL v0.c1, v0.c2, v0.c0 FROM v0 GROUP BY v0.c1, v0.c2, v0.c0;
SELECT t0.c0, t0.c2 FROM t0 GROUP BY t0.c0, t0.c2;
SELECT t0.c0, t0.c2 FROM t0 GROUP BY t0.c0, t0.c2 HAVING MIN(GROUP_CONCAT(MAX(TOTAL(TOTAL(t0.c1))))) UNION ALL SELECT ALL t0.c0, t0.c2 FROM t0 GROUP BY t0.c0, t0.c2 HAVING (NOT (MIN(GROUP_CONCAT(MAX(TOTAL(TOTAL(t0.c1))))))) UNION ALL SELECT ALL t0.c0, t0.c2 FROM t0 GROUP BY t0.c0, t0.c2 HAVING ((MIN(GROUP_CONCAT(MAX(TOTAL(TOTAL(t0.c1)))))) ISNULL);
SELECT ALL * FROM rt1, t0;
SELECT ALL * FROM rt1, t0 WHERE (CASE WHEN SQLITE_VERSION() THEN ((((t0.c2)OR(t0.c0)))AND(t0.c1)) END) UNION ALL SELECT * FROM rt1, t0 WHERE ((NOT (CASE WHEN SQLITE_VERSION() THEN ((((t0.c2)OR(t0.c0)))AND(t0.c1)) END))) UNION ALL SELECT * FROM rt1, t0 WHERE (((CASE WHEN SQLITE_VERSION() THEN ((((t0.c2)OR(t0.c0)))AND(t0.c1)) END) ISNULL));
SELECT ALL * FROM rt1, t0;
SELECT DISTINCT * FROM v0 CROSS JOIN rt1 ON ((((rt1.c1)<>(t0.c2)))*(((((((((v0.c1)OR(NULL)))OR(t0.c2)))AND(rt1.c2)))OR(v0.c0)))) FULL OUTER JOIN vt0 ON ((((CAST(t0.c0 AS BLOB))OR((('wNy)캨EFf%') ISNULL))))OR(('9m~T\VPp,' IN ()))) CROSS JOIN t0 ON ((((v0.c2)<>(rt1.c2))) NOT BETWEEN (((t0.c1) IS TRUE)) AND (((((t0.c0)OR(vt0.c0)))OR(v0.c2))));
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE ((- ((vt0.c0 IN ())))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT ((- ((vt0.c0 IN ())))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((((- ((vt0.c0 IN ())))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT rt1.c2, rt1.c0, t0.c2, rt1.c1, t0.c1, t0.c0 FROM t0, rt1 GROUP BY rt1.c2, rt1.c0, t0.c2, rt1.c1, t0.c1, t0.c0;
SELECT rt1.c2, rt1.c0, t0.c2, rt1.c1, t0.c1, t0.c0 FROM t0, rt1 GROUP BY rt1.c2, rt1.c0, t0.c2, rt1.c1, t0.c1, t0.c0 HAVING COUNT(*) UNION ALL SELECT ALL rt1.c2, rt1.c0, t0.c2, rt1.c1, t0.c1, t0.c0 FROM t0, rt1 GROUP BY rt1.c2, rt1.c0, t0.c2, rt1.c1, t0.c1, t0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt1.c2, rt1.c0, t0.c2, rt1.c1, t0.c1, t0.c0 FROM t0, rt1 GROUP BY rt1.c2, rt1.c0, t0.c2, rt1.c1, t0.c1, t0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT rt1.c2, rt1.c0, t0.c2, rt1.c1, t0.c1, t0.c0 FROM t0, rt1 GROUP BY rt1.c2, rt1.c0, t0.c2, rt1.c1, t0.c1, t0.c0;
SELECT rt1.c2, rt1.c0, t0.c2, rt1.c1, t0.c1, t0.c0 FROM t0, rt1 GROUP BY rt1.c2, rt1.c0, t0.c2, rt1.c1, t0.c1, t0.c0 HAVING COUNT(*) UNION ALL SELECT ALL rt1.c2, rt1.c0, t0.c2, rt1.c1, t0.c1, t0.c0 FROM t0, rt1 GROUP BY rt1.c2, rt1.c0, t0.c2, rt1.c1, t0.c1, t0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt1.c2, rt1.c0, t0.c2, rt1.c1, t0.c1, t0.c0 FROM t0, rt1 GROUP BY rt1.c2, rt1.c0, t0.c2, rt1.c1, t0.c1, t0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT rt1.c2, rt1.c0, t0.c2, rt1.c1, t0.c1, t0.c0 FROM t0, rt1 GROUP BY rt1.c2, rt1.c0, t0.c2, rt1.c1, t0.c1, t0.c0;
SELECT * FROM vt0, v0 CROSS JOIN t0 ON (((- (vt0.c0)))<<(LIKE(t0.c0, 0.3232798031944042, '.')));
SELECT ALL * FROM vt0, v0 CROSS JOIN t0 ON (((- (vt0.c0)))<<(LIKE(t0.c0, 0.3232798031944042, '.'))) WHERE (((vt0.c0 IN ()) IN ())) UNION ALL SELECT ALL * FROM vt0, v0 CROSS JOIN t0 ON (((- (vt0.c0)))<<(LIKE(t0.c0, 0.3232798031944042, '.'))) WHERE ((NOT (((vt0.c0 IN ()) IN ())))) UNION ALL SELECT * FROM vt0, v0 CROSS JOIN t0 ON (((- (vt0.c0)))<<(LIKE(t0.c0, 0.3232798031944042, '.'))) WHERE (((((vt0.c0 IN ()) IN ())) ISNULL));
SELECT * FROM vt0, v0 CROSS JOIN t0 ON (((- (vt0.c0)))<<(LIKE(t0.c0, 0.3232798031944042, '.')));
SELECT DISTINCT * FROM vt0, t0;
SELECT DISTINCT * FROM vt0, t0 WHERE (((((((vt0.c0) NOTNULL))OR(((((((((t0.c1)AND(t0.c2)))OR(t0.c0)))OR(t0.c0)))OR(t0.c1)))))AND(x'e85e'))) UNION SELECT DISTINCT * FROM vt0, t0 WHERE ((NOT (((((((vt0.c0) NOTNULL))OR(((((((((t0.c1)AND(t0.c2)))OR(t0.c0)))OR(t0.c0)))OR(t0.c1)))))AND(x'e85e'))))) UNION SELECT DISTINCT * FROM vt0, t0 WHERE (((((((((vt0.c0) NOTNULL))OR(((((((((t0.c1)AND(t0.c2)))OR(t0.c0)))OR(t0.c0)))OR(t0.c1)))))AND(x'e85e'))) ISNULL));
SELECT DISTINCT * FROM vt0, t0;
SELECT rt1.c1, rt1.c2 FROM vt0 CROSS JOIN rt1 ON ((((+ (rt1.c1))))<=((CASE WHEN vt0.c0 THEN rt1.c1 ELSE vt0.c0 END))) GROUP BY rt1.c1, rt1.c2;
SELECT rt1.c1, rt1.c2 FROM vt0 CROSS JOIN rt1 ON ((((+ (rt1.c1))))<=((CASE WHEN vt0.c0 THEN rt1.c1 ELSE vt0.c0 END))) WHERE (((((((((((rt1.c2) NOT BETWEEN (0.44469338001187375) AND (vt0.c0)))OR((vt0.c0 IN ()))))OR(ABS(DISTINCT x''))))AND((rt1.c1 IN ()))))OR(((rt1.c2)IS(0x630b2932))))) GROUP BY rt1.c1, rt1.c2 UNION SELECT rt1.c1, rt1.c2 FROM vt0 CROSS JOIN rt1 ON ((((+ (rt1.c1))))<=((CASE WHEN vt0.c0 THEN rt1.c1 ELSE vt0.c0 END))) WHERE ((NOT (((((((((((rt1.c2) NOT BETWEEN (0.44469338001187375) AND (vt0.c0)))OR((vt0.c0 IN ()))))OR(ABS(DISTINCT x''))))AND((rt1.c1 IN ()))))OR(((rt1.c2)IS(0x630b2932))))))) GROUP BY rt1.c1, rt1.c2 UNION SELECT rt1.c1, rt1.c2 FROM vt0 CROSS JOIN rt1 ON ((((+ (rt1.c1))))<=((CASE WHEN vt0.c0 THEN rt1.c1 ELSE vt0.c0 END))) WHERE (((((((((((((rt1.c2) NOT BETWEEN (0.44469338001187375) AND (vt0.c0)))OR((vt0.c0 IN ()))))OR(ABS(DISTINCT x''))))AND((rt1.c1 IN ()))))OR(((rt1.c2)IS(0X630b2932))))) ISNULL)) GROUP BY rt1.c1, rt1.c2;
SELECT rt1.c1, rt1.c2 FROM vt0 CROSS JOIN rt1 ON ((((+ (rt1.c1))))<=((CASE WHEN vt0.c0 THEN rt1.c1 ELSE vt0.c0 END))) GROUP BY rt1.c1, rt1.c2;
SELECT ALL t0.c2, t0.c1, t0.c0 FROM t0 GROUP BY t0.c2, t0.c1, t0.c0;
SELECT ALL t0.c2, t0.c1, t0.c0 FROM t0 GROUP BY t0.c2, t0.c1, t0.c0 HAVING MIN((((COUNT(MIN(AVG(t0.c1))), t0.c2, t0.c2))<=((t0.c2, AVG(t0.c1), TOTAL(t0.c0))))) UNION ALL SELECT ALL t0.c2, t0.c1, t0.c0 FROM t0 GROUP BY t0.c2, t0.c1, t0.c0 HAVING (NOT (MIN((((COUNT(MIN(AVG(t0.c1))), t0.c2, t0.c2))<=((t0.c2, AVG(t0.c1), TOTAL(t0.c0))))))) UNION ALL SELECT ALL t0.c2, t0.c1, t0.c0 FROM t0 GROUP BY t0.c2, t0.c1, t0.c0 HAVING ((MIN((((COUNT(MIN(AVG(t0.c1))), t0.c2, t0.c2))<=((t0.c2, AVG(t0.c1), TOTAL(t0.c0)))))) ISNULL);
SELECT rt1.c0 FROM rt1 INNER JOIN v0 ON ((((v0.c1)<(-1.694775175E9)))=((((rt1.c1))>((rt1.c2))))) CROSS JOIN t0 ON rt1.c1;
SELECT ALL rt1.c0 FROM rt1 INNER JOIN v0 ON ((((v0.c1)<(-1.694775175E9)))==((((rt1.c1))>((rt1.c2))))) CROSS JOIN t0 ON rt1.c1 WHERE ((- (((((((((rt1.c0)OR(v0.c1)))OR(rt1.c1)))OR(t0.c0)))OR(rt1.c0))))) UNION ALL SELECT rt1.c0 FROM rt1 INNER JOIN v0 ON ((((v0.c1)<(-1.694775175E9)))==((((rt1.c1))>((rt1.c2))))) CROSS JOIN t0 ON rt1.c1 WHERE ((NOT ((- (((((((((rt1.c0)OR(v0.c1)))OR(rt1.c1)))OR(t0.c0)))OR(rt1.c0))))))) UNION ALL SELECT rt1.c0 FROM rt1 INNER JOIN v0 ON ((((v0.c1)<(-1.694775175E9)))==((((rt1.c1))>((rt1.c2))))) CROSS JOIN t0 ON rt1.c1 WHERE ((((- (((((((((rt1.c0)OR(v0.c1)))OR(rt1.c1)))OR(t0.c0)))OR(rt1.c0))))) ISNULL));
SELECT rt1.c0 FROM rt1 INNER JOIN v0 ON ((((v0.c1)<(-1.694775175E9)))=((((rt1.c1))>((rt1.c2))))) CROSS JOIN t0 ON rt1.c1;
SELECT DISTINCT * FROM vt0, rt1;
SELECT DISTINCT * FROM vt0, rt1 WHERE ((NOT (CAST(rt1.c0 AS REAL)))) UNION SELECT DISTINCT * FROM vt0, rt1 WHERE ((NOT ((NOT (CAST(rt1.c0 AS REAL)))))) UNION SELECT DISTINCT * FROM vt0, rt1 WHERE ((((NOT (CAST(rt1.c0 AS REAL)))) ISNULL));
SELECT DISTINCT * FROM vt0, rt1;
SELECT t0.c2, v0.c0, vt0.c0, t0.c0, t0.c1, v0.c1, v0.c2 FROM v0, t0, vt0 GROUP BY t0.c2, v0.c0, vt0.c0, t0.c0, t0.c1, v0.c1, v0.c2;
SELECT ALL t0.c2, v0.c0, vt0.c0, t0.c0, t0.c1, v0.c1, v0.c2 FROM v0, t0, vt0 WHERE (((((((((0xffffffff99e46bcc)AND(((((t0.c0)AND(vt0.c0)))OR(t0.c0)))))OR(((v0.c0)-(v0.c2)))))AND(x'ca9e')))OR(CAST(t0.c0 AS BLOB)))) GROUP BY t0.c2, v0.c0, vt0.c0, t0.c0, t0.c1, v0.c1, v0.c2 UNION SELECT ALL t0.c2, v0.c0, vt0.c0, t0.c0, t0.c1, v0.c1, v0.c2 FROM v0, t0, vt0 WHERE ((NOT (((((((((0Xffffffff99e46bcc)AND(((((t0.c0)AND(vt0.c0)))OR(t0.c0)))))OR(((v0.c0)-(v0.c2)))))AND(x'ca9e')))OR(CAST(t0.c0 AS BLOB)))))) GROUP BY t0.c2, v0.c0, vt0.c0, t0.c0, t0.c1, v0.c1, v0.c2 UNION SELECT ALL t0.c2, v0.c0, vt0.c0, t0.c0, t0.c1, v0.c1, v0.c2 FROM v0, t0, vt0 WHERE (((((((((((0xffffffff99e46bcc)AND(((((t0.c0)AND(vt0.c0)))OR(t0.c0)))))OR(((v0.c0)-(v0.c2)))))AND(x'ca9e')))OR(CAST(t0.c0 AS BLOB)))) ISNULL)) GROUP BY t0.c2, v0.c0, vt0.c0, t0.c0, t0.c1, v0.c1, v0.c2;
SELECT t0.c2, v0.c0, vt0.c0, t0.c0, t0.c1, v0.c1, v0.c2 FROM v0, t0, vt0 GROUP BY t0.c2, v0.c0, vt0.c0, t0.c0, t0.c1, v0.c1, v0.c2;
SELECT ALL rt1.c0, rt1.c2, v0.c0, rt1.c1, t0.c2 FROM v0, vt0, rt1 INNER JOIN t0 ON CAST(((v0.c1) ISNULL) AS BLOB) GROUP BY rt1.c0, rt1.c2, v0.c0, rt1.c1, t0.c2;
SELECT ALL rt1.c0, rt1.c2, v0.c0, rt1.c1, t0.c2 FROM v0, vt0, rt1 INNER JOIN t0 ON CAST(((v0.c1) ISNULL) AS BLOB) GROUP BY rt1.c0, rt1.c2, v0.c0, rt1.c1, t0.c2 HAVING AVG(MIN(v0.c2)) UNION ALL SELECT ALL rt1.c0, rt1.c2, v0.c0, rt1.c1, t0.c2 FROM v0, vt0, rt1 INNER JOIN t0 ON CAST(((v0.c1) ISNULL) AS BLOB) GROUP BY rt1.c0, rt1.c2, v0.c0, rt1.c1, t0.c2 HAVING (NOT (AVG(MIN(v0.c2)))) UNION ALL SELECT rt1.c0, rt1.c2, v0.c0, rt1.c1, t0.c2 FROM v0, vt0, rt1 INNER JOIN t0 ON CAST(((v0.c1) ISNULL) AS BLOB) GROUP BY rt1.c0, rt1.c2, v0.c0, rt1.c1, t0.c2 HAVING ((AVG(MIN(v0.c2))) ISNULL);
SELECT v0.c0 FROM t0, vt0, v0, rt1;
SELECT ALL v0.c0 FROM t0, vt0, v0, rt1 WHERE (((((v0.c0) BETWEEN (vt0.c0) AND (t0.c0))) IS TRUE)) UNION ALL SELECT ALL v0.c0 FROM t0, vt0, v0, rt1 WHERE ((NOT (((((v0.c0) BETWEEN (vt0.c0) AND (t0.c0))) IS TRUE)))) UNION ALL SELECT v0.c0 FROM t0, vt0, v0, rt1 WHERE (((((((v0.c0) BETWEEN (vt0.c0) AND (t0.c0))) IS TRUE)) ISNULL));
SELECT v0.c0 FROM t0, vt0, v0, rt1;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE ('ZE\_#_\rP') UNION SELECT DISTINCT * FROM v0 WHERE ((NOT ('ZE\_#_\rP'))) UNION SELECT DISTINCT * FROM v0 WHERE ((('ZE\_#_\rP') ISNULL));
SELECT DISTINCT * FROM v0;
SELECT ALL vt0.c0, t0.c1, t0.c2, v0.c1 FROM vt0, t0, v0, rt1 GROUP BY vt0.c0, t0.c1, t0.c2, v0.c1;
SELECT vt0.c0, t0.c1, t0.c2, v0.c1 FROM vt0, t0, v0, rt1 WHERE (CASE 0.6770241107187082  WHEN TOTAL_CHANGES() THEN (((rt1.c2))<((t0.c0))) ELSE CAST(v0.c0 AS INTEGER) END) GROUP BY vt0.c0, t0.c1, t0.c2, v0.c1 UNION SELECT vt0.c0, t0.c1, t0.c2, v0.c1 FROM vt0 NOT INDEXED, t0, v0, rt1 WHERE ((NOT (CASE 0.6770241107187082  WHEN TOTAL_CHANGES() THEN (((rt1.c2))<((t0.c0))) ELSE CAST(v0.c0 AS INTEGER) END))) GROUP BY vt0.c0, t0.c1, t0.c2, v0.c1 UNION SELECT vt0.c0, t0.c1, t0.c2, v0.c1 FROM vt0, t0, v0, rt1 WHERE (((CASE 0.6770241107187082  WHEN TOTAL_CHANGES() THEN (((rt1.c2))<((t0.c0))) ELSE CAST(v0.c0 AS INTEGER) END) ISNULL)) GROUP BY vt0.c0, t0.c1, t0.c2, v0.c1;
SELECT ALL vt0.c0, t0.c1, t0.c2, v0.c1 FROM vt0, t0, v0, rt1 GROUP BY vt0.c0, t0.c1, t0.c2, v0.c1;
SELECT ALL t0.c2 FROM v0, vt0, t0 LEFT OUTER JOIN rt1 ON (((NOT (rt1.c1))) BETWEEN (((t0.c2) ISNULL)) AND (((rt1.c1)IS NOT(vt0.c0)))) GROUP BY t0.c2;
SELECT t0.c2 FROM v0, vt0, t0 LEFT OUTER JOIN rt1 ON (((NOT (rt1.c1))) BETWEEN (((t0.c2) ISNULL)) AND (((rt1.c1)IS NOT(vt0.c0)))) GROUP BY t0.c2 HAVING TOTAL(((COUNT(*))*(1661675826))) UNION ALL SELECT ALL t0.c2 FROM v0, vt0, t0 LEFT OUTER JOIN rt1 ON (((NOT (rt1.c1))) BETWEEN (((t0.c2) ISNULL)) AND (((rt1.c1)IS NOT(vt0.c0)))) GROUP BY t0.c2 HAVING (NOT (TOTAL(((COUNT(*))*(1661675826))))) UNION ALL SELECT t0.c2 FROM v0, vt0, t0 LEFT OUTER JOIN rt1 ON (((NOT (rt1.c1))) BETWEEN (((t0.c2) ISNULL)) AND (((rt1.c1)IS NOT(vt0.c0)))) GROUP BY t0.c2 HAVING ((TOTAL(((COUNT(*))*(1661675826)))) ISNULL);
SELECT ALL rt1.c0, rt1.c2 FROM rt1;
SELECT rt1.c0, rt1.c2 FROM rt1 WHERE (((((rt1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c0))) NOT BETWEEN ((- (rt1.c0))) AND ((rt1.c2 IN ())))) UNION ALL SELECT ALL rt1.c0, rt1.c2 FROM rt1 WHERE ((NOT (((((rt1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c0))) NOT BETWEEN ((- (rt1.c0))) AND ((rt1.c2 IN ())))))) UNION ALL SELECT rt1.c0, rt1.c2 FROM rt1 WHERE (((((((rt1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c0))) NOT BETWEEN ((- (rt1.c0))) AND ((rt1.c2 IN ())))) ISNULL));
SELECT ALL rt1.c0, rt1.c2 FROM rt1;
SELECT DISTINCT * FROM vt0, v0;
SELECT DISTINCT * FROM vt0, v0 WHERE ((NOT (((v0.c2)%(v0.c0))))) UNION SELECT DISTINCT * FROM vt0, v0 WHERE ((NOT ((NOT (((v0.c2)%(v0.c0))))))) UNION SELECT DISTINCT * FROM vt0, v0 WHERE ((((NOT (((v0.c2)%(v0.c0))))) ISNULL));
SELECT DISTINCT * FROM vt0, v0;
SELECT ALL v0.c2, v0.c0 FROM v0 GROUP BY v0.c2, v0.c0;
SELECT ALL v0.c2, v0.c0 FROM v0 WHERE (((((((((((v0.c2)AND(v0.c2)))OR(v0.c0)))AND(-1386977343)))AND(v0.c0)))IS(v0.c1 COLLATE NOCASE))) GROUP BY v0.c2, v0.c0 UNION SELECT v0.c2, v0.c0 FROM v0 WHERE ((NOT (((((((((((v0.c2)AND(v0.c2)))OR(v0.c0)))AND(-1386977343)))AND(v0.c0)))IS(v0.c1 COLLATE NOCASE))))) GROUP BY v0.c2, v0.c0 UNION SELECT ALL v0.c2, v0.c0 FROM v0 WHERE (((((((((((((v0.c2)AND(v0.c2)))OR(v0.c0)))AND(-1386977343)))AND(v0.c0)))IS(v0.c1 COLLATE NOCASE))) ISNULL)) GROUP BY v0.c2, v0.c0;
SELECT ALL v0.c2, v0.c0 FROM v0 GROUP BY v0.c2, v0.c0;
SELECT rt1.c2, v0.c1, v0.c0 FROM v0, vt0, rt1 GROUP BY rt1.c2, v0.c1, v0.c0;
SELECT rt1.c2, v0.c1, v0.c0 FROM v0, vt0, rt1 GROUP BY rt1.c2, v0.c1, v0.c0 HAVING ((TOTAL(rt1.c2)) BETWEEN (AVG(SUM(NULL))) AND (((TOTAL(SUM(MAX(v0.c2)))) NOT BETWEEN (SUM(rt1.c2)) AND (GROUP_CONCAT(COUNT(*)))))) UNION ALL SELECT ALL rt1.c2, v0.c1, v0.c0 FROM v0, vt0, rt1 GROUP BY rt1.c2, v0.c1, v0.c0 HAVING (NOT (((TOTAL(rt1.c2)) BETWEEN (AVG(SUM(NULL))) AND (((TOTAL(SUM(MAX(v0.c2)))) NOT BETWEEN (SUM(rt1.c2)) AND (GROUP_CONCAT(COUNT(*)))))))) UNION ALL SELECT rt1.c2, v0.c1, v0.c0 FROM v0, vt0, rt1 GROUP BY rt1.c2, v0.c1, v0.c0 HAVING ((((TOTAL(rt1.c2)) BETWEEN (AVG(SUM(NULL))) AND (((TOTAL(SUM(MAX(v0.c2)))) NOT BETWEEN (SUM(rt1.c2)) AND (GROUP_CONCAT(COUNT(*))))))) ISNULL);
SELECT * FROM rt1;
SELECT ALL * FROM rt1 WHERE (TRIM(CASE WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c1 END)) UNION ALL SELECT ALL * FROM rt1 WHERE ((NOT (TRIM(CASE WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c1 END)))) UNION ALL SELECT * FROM rt1 WHERE (((TRIM(CASE WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c1 END)) ISNULL));
SELECT * FROM rt1;
SELECT DISTINCT * FROM t0, vt0;
SELECT DISTINCT * FROM t0, vt0 WHERE ((((t0.c0)) NOT BETWEEN ((0Xffffffffeb6891e3 COLLATE NOCASE)) AND (((t0.c1 IN ()))))) UNION SELECT DISTINCT * FROM t0, vt0 WHERE ((NOT ((((t0.c0)) NOT BETWEEN ((0xffffffffeb6891e3 COLLATE NOCASE)) AND (((t0.c1 IN ()))))))) UNION SELECT DISTINCT * FROM t0, vt0 WHERE ((((((t0.c0)) NOT BETWEEN ((0xffffffffeb6891e3 COLLATE NOCASE)) AND (((t0.c1 IN ()))))) ISNULL));
SELECT DISTINCT * FROM t0, vt0;
SELECT ALL t0.c2, v0.c0, t0.c0, rt1.c1, vt0.c0 FROM rt1, v0, vt0 LEFT OUTER JOIN t0 ON CASE WHEN RTRIM(0.5779694418150105) THEN CAST(v0.c0 AS BLOB) WHEN CAST(t0.c1 AS REAL) THEN ((rt1.c2) IS FALSE) WHEN CAST(rt1.c1 AS NUMERIC) THEN v0.c0 END GROUP BY t0.c2, v0.c0, t0.c0, rt1.c1, vt0.c0;
SELECT t0.c2, v0.c0, t0.c0, rt1.c1, vt0.c0 FROM rt1, v0, vt0 LEFT OUTER JOIN t0 ON CASE WHEN RTRIM(0.5779694418150105) THEN CAST(v0.c0 AS BLOB) WHEN CAST(t0.c1 AS REAL) THEN ((rt1.c2) IS FALSE) WHEN CAST(rt1.c1 AS NUMERIC) THEN v0.c0 END WHERE ('0.0') GROUP BY t0.c2, v0.c0, t0.c0, rt1.c1, vt0.c0 UNION SELECT ALL t0.c2, v0.c0, t0.c0, rt1.c1, vt0.c0 FROM rt1, v0, vt0 LEFT OUTER JOIN t0 ON CASE WHEN RTRIM(0.5779694418150105) THEN CAST(v0.c0 AS BLOB) WHEN CAST(t0.c1 AS REAL) THEN ((rt1.c2) IS FALSE) WHEN CAST(rt1.c1 AS NUMERIC) THEN v0.c0 END WHERE ((NOT ('0.0'))) GROUP BY t0.c2, v0.c0, t0.c0, rt1.c1, vt0.c0 UNION SELECT t0.c2, v0.c0, t0.c0, rt1.c1, vt0.c0 FROM rt1, v0, vt0 LEFT OUTER JOIN t0 ON CASE WHEN RTRIM(0.5779694418150105) THEN CAST(v0.c0 AS BLOB) WHEN CAST(t0.c1 AS REAL) THEN ((rt1.c2) IS FALSE) WHEN CAST(rt1.c1 AS NUMERIC) THEN v0.c0 END WHERE ((('0.0') ISNULL)) GROUP BY t0.c2, v0.c0, t0.c0, rt1.c1, vt0.c0;
SELECT ALL t0.c2, v0.c0, t0.c0, rt1.c1, vt0.c0 FROM rt1, v0, vt0 LEFT OUTER JOIN t0 ON CASE WHEN RTRIM(0.5779694418150105) THEN CAST(v0.c0 AS BLOB) WHEN CAST(t0.c1 AS REAL) THEN ((rt1.c2) IS FALSE) WHEN CAST(rt1.c1 AS NUMERIC) THEN v0.c0 END GROUP BY t0.c2, v0.c0, t0.c0, rt1.c1, vt0.c0;
SELECT ALL t0.c2, t0.c1, v0.c2, v0.c1 FROM rt1, v0, t0 GROUP BY t0.c2, t0.c1, v0.c2, v0.c1;
SELECT t0.c2, t0.c1, v0.c2, v0.c1 FROM rt1, v0, t0 GROUP BY t0.c2, t0.c1, v0.c2, v0.c1 HAVING MAX(((v0.c1) ISNULL)) UNION ALL SELECT ALL t0.c2, t0.c1, v0.c2, v0.c1 FROM rt1, v0, t0 GROUP BY t0.c2, t0.c1, v0.c2, v0.c1 HAVING (NOT (MAX(((v0.c1) ISNULL)))) UNION ALL SELECT ALL t0.c2, t0.c1, v0.c2, v0.c1 FROM rt1, v0, t0 GROUP BY t0.c2, t0.c1, v0.c2, v0.c1 HAVING ((MAX(((v0.c1) ISNULL))) ISNULL);
SELECT ALL t0.c2, t0.c1, v0.c2, v0.c1 FROM rt1, v0, t0 GROUP BY t0.c2, t0.c1, v0.c2, v0.c1;
SELECT t0.c2, t0.c1, v0.c2, v0.c1 FROM rt1, v0, t0 GROUP BY t0.c2, t0.c1, v0.c2, v0.c1 HAVING MAX(((v0.c1) ISNULL)) UNION ALL SELECT ALL t0.c2, t0.c1, v0.c2, v0.c1 FROM rt1, v0, t0 GROUP BY t0.c2, t0.c1, v0.c2, v0.c1 HAVING (NOT (MAX(((v0.c1) ISNULL)))) UNION ALL SELECT ALL t0.c2, t0.c1, v0.c2, v0.c1 FROM rt1, v0, t0 GROUP BY t0.c2, t0.c1, v0.c2, v0.c1 HAVING ((MAX(((v0.c1) ISNULL))) ISNULL);
SELECT ALL t0.c2, t0.c1, v0.c2, v0.c1 FROM rt1, v0, t0 GROUP BY t0.c2, t0.c1, v0.c2, v0.c1;
SELECT ALL t0.c2, t0.c1, v0.c1, v0.c0, v0.c2 FROM t0, v0;
SELECT t0.c2, t0.c1, v0.c1, v0.c0, v0.c2 FROM t0, v0 WHERE (LIKELY((t0.c1 IN ()))) UNION ALL SELECT t0.c2, t0.c1, v0.c1, v0.c0, v0.c2 FROM t0 NOT INDEXED, v0 WHERE ((NOT (LIKELY((t0.c1 IN ()))))) UNION ALL SELECT t0.c2, t0.c1, v0.c1, v0.c0, v0.c2 FROM t0, v0 WHERE (((LIKELY((t0.c1 IN ()))) ISNULL));
SELECT ALL t0.c2, t0.c1, v0.c1, v0.c0, v0.c2 FROM t0, v0;
SELECT DISTINCT v0.c2, rt1.c2, rt1.c0, v0.c1, v0.c0, vt0.c0, rt1.c1 FROM v0, vt0, rt1;
SELECT DISTINCT v0.c2, rt1.c2, rt1.c0, v0.c1, v0.c0, vt0.c0, rt1.c1 FROM v0, vt0, rt1 WHERE ('-248425987') UNION SELECT DISTINCT v0.c2, rt1.c2, rt1.c0, v0.c1, v0.c0, vt0.c0, rt1.c1 FROM v0, vt0, rt1 WHERE ((NOT ('-248425987'))) UNION SELECT DISTINCT v0.c2, rt1.c2, rt1.c0, v0.c1, v0.c0, vt0.c0, rt1.c1 FROM v0, vt0, rt1 WHERE ((('-248425987') ISNULL));
SELECT DISTINCT v0.c2, rt1.c2, rt1.c0, v0.c1, v0.c0, vt0.c0, rt1.c1 FROM v0, vt0, rt1;
SELECT ALL rt1.c2, rt1.c0, v0.c0 FROM rt1, v0 GROUP BY rt1.c2, rt1.c0, v0.c0;
SELECT ALL rt1.c2, rt1.c0, v0.c0 FROM rt1, v0 WHERE ((((v0.c0)==(x'9aba')) IN ())) GROUP BY rt1.c2, rt1.c0, v0.c0 UNION SELECT rt1.c2, rt1.c0, v0.c0 FROM rt1, v0 WHERE ((NOT ((((v0.c0)==(x'9aba')) IN ())))) GROUP BY rt1.c2, rt1.c0, v0.c0 UNION SELECT ALL rt1.c2, rt1.c0, v0.c0 FROM rt1, v0 WHERE ((((((v0.c0)==(x'9aba')) IN ())) ISNULL)) GROUP BY rt1.c2, rt1.c0, v0.c0;
SELECT ALL rt1.c2, rt1.c0, v0.c0 FROM rt1, v0 GROUP BY rt1.c2, rt1.c0, v0.c0;
SELECT v0.c0, v0.c2, v0.c1, t0.c0 FROM v0, t0 GROUP BY v0.c0, v0.c2, v0.c1, t0.c0;
SELECT v0.c0, v0.c2, v0.c1, t0.c0 FROM v0, t0 GROUP BY v0.c0, v0.c2, v0.c1, t0.c0 HAVING COUNT(v0.c0) UNION ALL SELECT v0.c0, v0.c2, v0.c1, t0.c0 FROM v0, t0 GROUP BY v0.c0, v0.c2, v0.c1, t0.c0 HAVING (NOT (COUNT(v0.c0))) UNION ALL SELECT ALL v0.c0, v0.c2, v0.c1, t0.c0 FROM v0, t0 GROUP BY v0.c0, v0.c2, v0.c1, t0.c0 HAVING ((COUNT(v0.c0)) ISNULL);
SELECT v0.c0, v0.c2, v0.c1, t0.c0 FROM v0, t0 GROUP BY v0.c0, v0.c2, v0.c1, t0.c0;
SELECT v0.c0, v0.c2, v0.c1, t0.c0 FROM v0, t0 GROUP BY v0.c0, v0.c2, v0.c1, t0.c0 HAVING COUNT(v0.c0) UNION ALL SELECT v0.c0, v0.c2, v0.c1, t0.c0 FROM v0, t0 GROUP BY v0.c0, v0.c2, v0.c1, t0.c0 HAVING (NOT (COUNT(v0.c0))) UNION ALL SELECT ALL v0.c0, v0.c2, v0.c1, t0.c0 FROM v0, t0 GROUP BY v0.c0, v0.c2, v0.c1, t0.c0 HAVING ((COUNT(v0.c0)) ISNULL);
SELECT v0.c0, v0.c2, v0.c1, t0.c0 FROM v0, t0 GROUP BY v0.c0, v0.c2, v0.c1, t0.c0;
SELECT t0.c1, t0.c2, t0.c0, rt1.c1, rt1.c0, rt1.c2, v0.c1, v0.c2, vt0.c0 FROM v0, t0, vt0, rt1;
SELECT ALL t0.c1, t0.c2, t0.c0, rt1.c1, rt1.c0, rt1.c2, v0.c1, v0.c2, vt0.c0 FROM v0, t0, vt0, rt1 WHERE (((rt1.c1 COLLATE NOCASE) NOT NULL)) UNION ALL SELECT t0.c1, t0.c2, t0.c0, rt1.c1, rt1.c0, rt1.c2, v0.c1, v0.c2, vt0.c0 FROM v0, t0, vt0, rt1 WHERE ((NOT (((rt1.c1 COLLATE NOCASE) NOT NULL)))) UNION ALL SELECT ALL t0.c1, t0.c2, t0.c0, rt1.c1, rt1.c0, rt1.c2, v0.c1, v0.c2, vt0.c0 FROM v0, t0, vt0, rt1 WHERE (((((rt1.c1 COLLATE NOCASE) NOT NULL)) ISNULL));
SELECT t0.c1, t0.c2, t0.c0, rt1.c1, rt1.c0, rt1.c2, v0.c1, v0.c2, vt0.c0 FROM v0, t0, vt0, rt1;
SELECT DISTINCT v0.c0, v0.c1, rt1.c1, rt1.c2 FROM v0 FULL OUTER JOIN rt1 ON (((((rt1.c1) IS FALSE)))<((rt1.c2)));
SELECT DISTINCT v0.c0, v0.c1, rt1.c1, rt1.c2 FROM v0 FULL OUTER JOIN rt1 ON (((((rt1.c1) IS FALSE)))<((rt1.c2))) WHERE (CASE WHEN rt1.c2 THEN v0.c1 ELSE ((((rt1.c2)AND(rt1.c1)))AND(rt1.c0)) END) UNION SELECT DISTINCT v0.c0, v0.c1, rt1.c1, rt1.c2 FROM v0 FULL OUTER JOIN rt1 ON (((((rt1.c1) IS FALSE)))<((rt1.c2))) WHERE ((NOT (CASE WHEN rt1.c2 THEN v0.c1 ELSE ((((rt1.c2)AND(rt1.c1)))AND(rt1.c0)) END))) UNION SELECT DISTINCT v0.c0, v0.c1, rt1.c1, rt1.c2 FROM v0 FULL OUTER JOIN rt1 ON (((((rt1.c1) IS FALSE)))<((rt1.c2))) WHERE (((CASE WHEN rt1.c2 THEN v0.c1 ELSE ((((rt1.c2)AND(rt1.c1)))AND(rt1.c0)) END) ISNULL));
SELECT DISTINCT v0.c0, v0.c1, rt1.c1, rt1.c2 FROM v0 FULL OUTER JOIN rt1 ON (((((rt1.c1) IS FALSE)))<((rt1.c2)));
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (((((((((((x'')OR(vt0.c0)))AND('o*x*')))AND(vt0.c0)))OR(vt0.c0))) ISNULL)) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (((((((((((x'')OR(vt0.c0)))AND('o*x*')))AND(vt0.c0)))OR(vt0.c0))) ISNULL)))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((((((((((((x'')OR(vt0.c0)))AND('o*x*')))AND(vt0.c0)))OR(vt0.c0))) ISNULL)) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT rt1.c1, v0.c0, v0.c2, rt1.c0, rt1.c2, vt0.c0, t0.c2, v0.c1, t0.c1 FROM rt1, t0, vt0 RIGHT OUTER JOIN v0 ON ((CASE WHEN v0.c1 THEN v0.c2 END)=(rt1.c0 COLLATE BINARY)) GROUP BY rt1.c1, v0.c0, v0.c2, rt1.c0, rt1.c2, vt0.c0, t0.c2, v0.c1, t0.c1;
SELECT ALL rt1.c1, v0.c0, v0.c2, rt1.c0, rt1.c2, vt0.c0, t0.c2, v0.c1, t0.c1 FROM rt1, t0, vt0 RIGHT OUTER JOIN v0 ON ((CASE WHEN v0.c1 THEN v0.c2 END)=(rt1.c0 COLLATE BINARY)) GROUP BY rt1.c1, v0.c0, v0.c2, rt1.c0, rt1.c2, vt0.c0, t0.c2, v0.c1, t0.c1 HAVING 0xffffffffc356398b UNION ALL SELECT ALL rt1.c1, v0.c0, v0.c2, rt1.c0, rt1.c2, vt0.c0, t0.c2, v0.c1, t0.c1 FROM rt1, t0, vt0 RIGHT OUTER JOIN v0 ON ((CASE WHEN v0.c1 THEN v0.c2 END)==(rt1.c0 COLLATE BINARY)) GROUP BY rt1.c1, v0.c0, v0.c2, rt1.c0, rt1.c2, vt0.c0, t0.c2, v0.c1, t0.c1 HAVING (NOT (0Xffffffffc356398b)) UNION ALL SELECT rt1.c1, v0.c0, v0.c2, rt1.c0, rt1.c2, vt0.c0, t0.c2, v0.c1, t0.c1 FROM rt1, t0, vt0 RIGHT OUTER JOIN v0 ON ((CASE WHEN v0.c1 THEN v0.c2 END)=(rt1.c0 COLLATE BINARY)) GROUP BY rt1.c1, v0.c0, v0.c2, rt1.c0, rt1.c2, vt0.c0, t0.c2, v0.c1, t0.c1 HAVING ((0Xffffffffc356398b) ISNULL);
SELECT rt1.c1, v0.c0, v0.c2, rt1.c0, rt1.c2, vt0.c0, t0.c2, v0.c1, t0.c1 FROM rt1, t0, vt0 RIGHT OUTER JOIN v0 ON ((CASE WHEN v0.c1 THEN v0.c2 END)=(rt1.c0 COLLATE BINARY)) GROUP BY rt1.c1, v0.c0, v0.c2, rt1.c0, rt1.c2, vt0.c0, t0.c2, v0.c1, t0.c1;
SELECT ALL rt1.c1, v0.c0, v0.c2, rt1.c0, rt1.c2, vt0.c0, t0.c2, v0.c1, t0.c1 FROM rt1, t0, vt0 RIGHT OUTER JOIN v0 ON ((CASE WHEN v0.c1 THEN v0.c2 END)=(rt1.c0 COLLATE BINARY)) GROUP BY rt1.c1, v0.c0, v0.c2, rt1.c0, rt1.c2, vt0.c0, t0.c2, v0.c1, t0.c1 HAVING 0xffffffffc356398b UNION ALL SELECT ALL rt1.c1, v0.c0, v0.c2, rt1.c0, rt1.c2, vt0.c0, t0.c2, v0.c1, t0.c1 FROM rt1, t0, vt0 RIGHT OUTER JOIN v0 ON ((CASE WHEN v0.c1 THEN v0.c2 END)==(rt1.c0 COLLATE BINARY)) GROUP BY rt1.c1, v0.c0, v0.c2, rt1.c0, rt1.c2, vt0.c0, t0.c2, v0.c1, t0.c1 HAVING (NOT (0Xffffffffc356398b)) UNION ALL SELECT rt1.c1, v0.c0, v0.c2, rt1.c0, rt1.c2, vt0.c0, t0.c2, v0.c1, t0.c1 FROM rt1, t0, vt0 RIGHT OUTER JOIN v0 ON ((CASE WHEN v0.c1 THEN v0.c2 END)=(rt1.c0 COLLATE BINARY)) GROUP BY rt1.c1, v0.c0, v0.c2, rt1.c0, rt1.c2, vt0.c0, t0.c2, v0.c1, t0.c1 HAVING ((0Xffffffffc356398b) ISNULL);
SELECT rt1.c1, v0.c0, v0.c2, rt1.c0, rt1.c2, vt0.c0, t0.c2, v0.c1, t0.c1 FROM rt1, t0, vt0 RIGHT OUTER JOIN v0 ON ((CASE WHEN v0.c1 THEN v0.c2 END)=(rt1.c0 COLLATE BINARY)) GROUP BY rt1.c1, v0.c0, v0.c2, rt1.c0, rt1.c2, vt0.c0, t0.c2, v0.c1, t0.c1;
SELECT t0.c1, t0.c2, v0.c0, v0.c1, v0.c2, t0.c0 FROM v0, t0;
SELECT t0.c1, t0.c2, v0.c0, v0.c1, v0.c2, t0.c0 FROM v0, t0 WHERE (((v0.c0 IN ()) IN (((t0.c0) BETWEEN (v0.c2) AND (t0.c1)), (((t0.c1)) NOT BETWEEN ((t0.c1)) AND ((t0.c1)))))) UNION ALL SELECT ALL t0.c1, t0.c2, v0.c0, v0.c1, v0.c2, t0.c0 FROM v0, t0 WHERE ((NOT (((v0.c0 IN ()) IN (((t0.c0) BETWEEN (v0.c2) AND (t0.c1)), (((t0.c1)) NOT BETWEEN ((t0.c1)) AND ((t0.c1)))))))) UNION ALL SELECT t0.c1, t0.c2, v0.c0, v0.c1, v0.c2, t0.c0 FROM v0, t0 WHERE (((((v0.c0 IN ()) IN (((t0.c0) BETWEEN (v0.c2) AND (t0.c1)), (((t0.c1)) NOT BETWEEN ((t0.c1)) AND ((t0.c1)))))) ISNULL));
SELECT t0.c1, t0.c2, v0.c0, v0.c1, v0.c2, t0.c0 FROM v0, t0;
SELECT DISTINCT * FROM v0, rt1;
SELECT DISTINCT * FROM v0, rt1 WHERE (((rt1.c1)*(rt1.c1)) COLLATE NOCASE) UNION SELECT DISTINCT * FROM v0, rt1 WHERE ((NOT (((rt1.c1)*(rt1.c1)) COLLATE NOCASE))) UNION SELECT DISTINCT * FROM v0, rt1 WHERE (((((rt1.c1)*(rt1.c1)) COLLATE NOCASE) ISNULL));
SELECT DISTINCT * FROM v0, rt1;
SELECT v0.c2, v0.c0 FROM v0 GROUP BY v0.c2, v0.c0;
SELECT ALL v0.c2, v0.c0 FROM v0 WHERE (CASE ((v0.c1)GLOB(v0.c1))  WHEN (~ (v0.c2)) THEN (v0.c2 IN ()) ELSE v0.c2 END) GROUP BY v0.c2, v0.c0 UNION SELECT ALL v0.c2, v0.c0 FROM v0 WHERE ((NOT (CASE ((v0.c1)GLOB(v0.c1))  WHEN (~ (v0.c2)) THEN (v0.c2 IN ()) ELSE v0.c2 END))) GROUP BY v0.c2, v0.c0 UNION SELECT ALL v0.c2, v0.c0 FROM v0 WHERE (((CASE ((v0.c1)GLOB(v0.c1))  WHEN (~ (v0.c2)) THEN (v0.c2 IN ()) ELSE v0.c2 END) ISNULL)) GROUP BY v0.c2, v0.c0;
SELECT v0.c2, v0.c0 FROM v0 GROUP BY v0.c2, v0.c0;
SELECT t0.c1 FROM v0, t0 RIGHT OUTER JOIN vt0 ON (((v0.c2, 0.791447443785986, -656390157)) BETWEEN ((LIKELIHOOD(DISTINCT t0.c0, 0.16158797334550978), ((((v0.c0)OR(t0.c2)))OR(vt0.c0)), ((t0.c2)<>(v0.c1)))) AND (('1290854132' COLLATE RTRIM, NULL, json_extract(v0.c2, v0.c2)))) GROUP BY t0.c1;
SELECT ALL t0.c1 FROM v0, t0 RIGHT OUTER JOIN vt0 ON (((v0.c2, 0.791447443785986, -656390157)) BETWEEN ((LIKELIHOOD(DISTINCT t0.c0, 0.16158797334550978), ((((v0.c0)OR(t0.c2)))OR(vt0.c0)), ((t0.c2)!=(v0.c1)))) AND (('1290854132' COLLATE RTRIM, NULL, json_extract(v0.c2, v0.c2)))) GROUP BY t0.c1 HAVING COUNT(GROUP_CONCAT(AVG(SUM(SUM(vt0.c0))))) UNION ALL SELECT ALL t0.c1 FROM v0, t0 RIGHT OUTER JOIN vt0 ON (((v0.c2, 0.791447443785986, -656390157)) BETWEEN ((LIKELIHOOD(DISTINCT t0.c0, 0.16158797334550978), ((((v0.c0)OR(t0.c2)))OR(vt0.c0)), ((t0.c2)<>(v0.c1)))) AND (('1290854132' COLLATE RTRIM, NULL, json_extract(v0.c2, v0.c2)))) GROUP BY t0.c1 HAVING (NOT (COUNT(GROUP_CONCAT(AVG(SUM(SUM(vt0.c0))))))) UNION ALL SELECT t0.c1 FROM v0, t0 RIGHT OUTER JOIN vt0 ON (((v0.c2, 0.791447443785986, -656390157)) BETWEEN ((LIKELIHOOD(DISTINCT t0.c0, 0.16158797334550978), ((((v0.c0)OR(t0.c2)))OR(vt0.c0)), ((t0.c2)!=(v0.c1)))) AND (('1290854132' COLLATE RTRIM, NULL, json_extract(v0.c2, v0.c2)))) GROUP BY t0.c1 HAVING ((COUNT(GROUP_CONCAT(AVG(SUM(SUM(vt0.c0)))))) ISNULL);
SELECT ALL MAX((((rt1.c0)+(rt1.c0)) IN ())) FROM rt1;
SELECT t0.c0, t0.c2, t0.c1, vt0.c0 FROM vt0, t0;
SELECT t0.c0, t0.c2, t0.c1, vt0.c0 FROM vt0, t0 WHERE ('TRUE') UNION ALL SELECT ALL t0.c0, t0.c2, t0.c1, vt0.c0 FROM vt0, t0 WHERE ((NOT ('TRUE'))) UNION ALL SELECT ALL t0.c0, t0.c2, t0.c1, vt0.c0 FROM vt0, t0 WHERE ((('TRUE') ISNULL));
SELECT t0.c0, t0.c2, t0.c1, vt0.c0 FROM vt0, t0;
SELECT DISTINCT * FROM vt0, t0;
SELECT DISTINCT * FROM vt0, t0 WHERE ((((vt0.c0)) BETWEEN ((((0.8814456858660024)>=(t0.c0)))) AND ((((t0.c0)+(t0.c1)))))) UNION SELECT DISTINCT * FROM vt0, t0 WHERE ((NOT ((((vt0.c0)) BETWEEN ((((0.8814456858660024)>=(t0.c0)))) AND ((((t0.c0)+(t0.c1)))))))) UNION SELECT DISTINCT * FROM vt0, t0 WHERE ((((((vt0.c0)) BETWEEN ((((0.8814456858660024)>=(t0.c0)))) AND ((((t0.c0)+(t0.c1)))))) ISNULL));
SELECT DISTINCT * FROM vt0, t0;
SELECT ALL v0.c0, v0.c1 FROM v0, vt0 GROUP BY v0.c0, v0.c1;
SELECT v0.c0, v0.c1 FROM v0, vt0 WHERE ((+ (json_valid('-494759269')))) GROUP BY v0.c0, v0.c1 UNION SELECT ALL v0.c0, v0.c1 FROM v0, vt0 WHERE ((NOT ((+ (json_valid('-494759269')))))) GROUP BY v0.c0, v0.c1 UNION SELECT v0.c0, v0.c1 FROM v0, vt0 WHERE ((((+ (json_valid('-494759269')))) ISNULL)) GROUP BY v0.c0, v0.c1;
SELECT ALL v0.c0, v0.c1 FROM v0, vt0 GROUP BY v0.c0, v0.c1;
SELECT ALL t0.c2, t0.c1, vt0.c0, rt1.c0, v0.c2, rt1.c2 FROM rt1, vt0, v0 LEFT OUTER JOIN t0 ON ((((t0.c2) NOT BETWEEN (rt1.c2) AND (t0.c0))) ISNULL) GROUP BY t0.c2, t0.c1, vt0.c0, rt1.c0, v0.c2, rt1.c2;
SELECT ALL t0.c2, t0.c1, vt0.c0, rt1.c0, v0.c2, rt1.c2 FROM rt1, vt0, v0 LEFT OUTER JOIN t0 ON ((((t0.c2) NOT BETWEEN (rt1.c2) AND (t0.c0))) ISNULL) GROUP BY t0.c2, t0.c1, vt0.c0, rt1.c0, v0.c2, rt1.c2 HAVING TOTAL(((COUNT(*))<(rt1.c1))) UNION ALL SELECT t0.c2, t0.c1, vt0.c0, rt1.c0, v0.c2, rt1.c2 FROM rt1, vt0, v0 LEFT OUTER JOIN t0 ON ((((t0.c2) NOT BETWEEN (rt1.c2) AND (t0.c0))) ISNULL) GROUP BY t0.c2, t0.c1, vt0.c0, rt1.c0, v0.c2, rt1.c2 HAVING (NOT (TOTAL(((COUNT(*))<(rt1.c1))))) UNION ALL SELECT t0.c2, t0.c1, vt0.c0, rt1.c0, v0.c2, rt1.c2 FROM rt1, vt0, v0 LEFT OUTER JOIN t0 ON ((((t0.c2) NOT BETWEEN (rt1.c2) AND (t0.c0))) ISNULL) GROUP BY t0.c2, t0.c1, vt0.c0, rt1.c0, v0.c2, rt1.c2 HAVING ((TOTAL(((COUNT(*))<(rt1.c1)))) ISNULL);
SELECT ALL * FROM rt1 RIGHT OUTER JOIN vt0 ON rt1.c2;
SELECT * FROM rt1 RIGHT OUTER JOIN vt0 ON rt1.c2 WHERE (rt1.c0) UNION ALL SELECT ALL * FROM rt1 RIGHT OUTER JOIN vt0 ON rt1.c2 WHERE ((NOT (rt1.c0))) UNION ALL SELECT * FROM rt1 RIGHT OUTER JOIN vt0 ON rt1.c2 WHERE (((rt1.c0) ISNULL));
SELECT ALL * FROM rt1 RIGHT OUTER JOIN vt0 ON rt1.c2;
SELECT DISTINCT v0.c2, v0.c1, rt1.c0 FROM vt0, v0, rt1, t0;
SELECT DISTINCT v0.c2, v0.c1, rt1.c0 FROM vt0, v0, rt1, t0 WHERE ((+ (((v0.c0)||(rt1.c0))))) UNION SELECT DISTINCT v0.c2, v0.c1, rt1.c0 FROM vt0, v0, rt1, t0 WHERE ((NOT ((+ (((v0.c0)||(rt1.c0))))))) UNION SELECT DISTINCT v0.c2, v0.c1, rt1.c0 FROM vt0, v0, rt1, t0 WHERE ((((+ (((v0.c0)||(rt1.c0))))) ISNULL));
SELECT DISTINCT v0.c2, v0.c1, rt1.c0 FROM vt0, v0, rt1, t0;
