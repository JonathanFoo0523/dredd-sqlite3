-- Time: 2024/06/09 06:45:53
-- Database: database25
-- Database version: 3.40.0
-- seed value: 2567341525
PRAGMA cache_size = 50000; -- 10ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA case_sensitive_like=ON; -- 0ms;
PRAGMA encoding = 'UTF-8'; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts5(c0 UNINDEXED, c1); -- 1ms;
CREATE VIRTUAL TABLE vt1 USING fts4(c0); -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR IGNORE vt1 SET c0=NULL; -- 0ms;
UPDATE vt0 SET c0=x''; -- 0ms;
UPDATE vt0 SET c1='1778842958', c0='1778842958'; -- 0ms;
UPDATE OR ABORT vt1 SET c0=x''; -- 0ms;
CREATE VIEW  IF NOT EXISTS v0(c0, c1, c2) AS SELECT SUM(((vt0.c0) IS FALSE)) OVER (), SUM(vt0.c1 COLLATE BINARY COLLATE NOCASE), (0.035373294249337994 IN ()) FROM vt0, vt1 WHERE ((~ ((~ (''))))); -- 3ms;
INSERT OR IGNORE INTO vt1(c0) VALUES (''); -- 0ms;
PRAGMA threads; -- 0ms;
UPDATE OR IGNORE vt1 SET c0=181995571; -- 1ms;
PRAGMA integrity_check; -- 0ms;
UPDATE OR ROLLBACK vt1 SET c0=0.22135466279659732; -- 0ms;
DROP VIEW v0; -- 0ms;
ANALYZE sqlite_master; -- 1ms;
PRAGMA optimize; -- 0ms;
ANALYZE; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA main.application_id; -- 0ms;
ANALYZE vt0; -- 0ms;
REINDEX; -- 1ms;
UPDATE OR IGNORE vt0 SET c0=NULL WHERE (x'' IN ()); -- 0ms;
INSERT OR IGNORE INTO vt1 VALUES ('1778842958'), (0xffffffffeca86374), (x''); -- 1ms;
INSERT OR IGNORE INTO vt1(c0) VALUES (x'6332'); -- 0ms;
PRAGMA threads; -- 0ms;
UPDATE vt0 SET c1=NULL; -- 0ms;
PRAGMA journal_size_limit; -- 0ms;
REINDEX NOCASE; -- 0ms;
CREATE VIRTUAL TABLE vt2 USING fts5(c0); -- 1ms;
INSERT OR REPLACE INTO vt0 VALUES (1778842958, x'dddd'), (NULL, '-1e500'), (0.035373294249337994, -3.24508812E8); -- 3ms;
INSERT OR ROLLBACK INTO vt0(c1, c0) VALUES (1.778842958E9, 0X764b6aeb); -- 1ms;
PRAGMA application_id = -5187863178668920133; -- 0ms;
UPDATE OR IGNORE vt0 SET c1=x'' WHERE CAST(SQLITE_VERSION() AS REAL); -- 1ms;
ANALYZE; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('usermerge', 7); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('crisismerge', 1371735796); -- 0ms;
INSERT INTO vt2(vt2, rank) VALUES('usermerge', 12); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt1(vt1) VALUES('rebuild'); -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
ANALYZE; -- 1ms;
INSERT INTO vt1(vt1, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
INSERT OR ROLLBACK INTO vt0(c0) VALUES (NULL), (NULL), (0.6618167546732251), (x''), (0x6f4b45f3); -- 1ms;
INSERT INTO vt1(vt1) VALUES('rebuild'); -- 0ms;
PRAGMA temp.legacy_file_format; -- 0ms;
REINDEX; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT INTO vt1(vt1) VALUES('optimize'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
PRAGMA ignore_check_constraints = true; -- 0ms;
ANALYZE; -- 1ms;
INSERT INTO vt1(vt1) VALUES('merge=1778842958,11');\n; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA temp.journal_mode; -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES ('x*dR.', -1594878932); -- 0ms;
COMMIT TRANSACTION; -- 4ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt2', '0 sz=-1110779318'); -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
PRAGMA temp.cell_size_check = false; -- 0ms;
ANALYZE; -- 0ms;
UPDATE OR FAIL vt2 SET (c0, c0)=(x'0798', '219417928'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('pgsz', '45738'); -- 0ms;
INSERT INTO vt2(vt2, rank) VALUES('automerge', 14); -- 0ms;
UPDATE OR ABORT vt1 SET c0=x''; -- 0ms;
END; -- 0ms;
ROLLBACK TRANSACTION; -- 1ms;
SELECT ALL vt1.c0 FROM vt1;
SELECT ALL vt1.c0 FROM vt1 WHERE ((- (CAST(vt1.c0 AS BLOB)))) UNION ALL SELECT vt1.c0 FROM vt1 WHERE ((NOT ((- (CAST(vt1.c0 AS BLOB)))))) UNION ALL SELECT vt1.c0 FROM vt1 WHERE ((((- (CAST(vt1.c0 AS BLOB)))) ISNULL));
SELECT ALL vt1.c0 FROM vt1;
SELECT DISTINCT vt2.c0 FROM vt2;
SELECT DISTINCT vt2.c0 FROM vt2 WHERE ((- (((((((((vt2.c0)OR(vt2.c0)))AND(vt2.c0)))AND(vt2.c0)))AND(vt2.c0))))) UNION SELECT DISTINCT vt2.c0 FROM vt2 WHERE ((NOT ((- (((((((((vt2.c0)OR(vt2.c0)))AND(vt2.c0)))AND(vt2.c0)))AND(vt2.c0))))))) UNION SELECT DISTINCT vt2.c0 FROM vt2 WHERE ((((- (((((((((vt2.c0)OR(vt2.c0)))AND(vt2.c0)))AND(vt2.c0)))AND(vt2.c0))))) ISNULL));
SELECT DISTINCT vt2.c0 FROM vt2;
SELECT ALL vt0.c1, vt1.c0, vt0.c0 FROM vt1, vt2, vt0 GROUP BY vt0.c1, vt1.c0, vt0.c0;
SELECT vt0.c1, vt1.c0, vt0.c0 FROM vt1, vt2, vt0 WHERE (((((vt0.c1) NOTNULL))<>(((vt0.c0) BETWEEN (vt0.c1) AND (NULL))))) GROUP BY vt0.c1, vt1.c0, vt0.c0 UNION SELECT ALL vt0.c1, vt1.c0, vt0.c0 FROM vt1, vt2, vt0 WHERE ((NOT (((((vt0.c1) NOTNULL))!=(((vt0.c0) BETWEEN (vt0.c1) AND (NULL))))))) GROUP BY vt0.c1, vt1.c0, vt0.c0 UNION SELECT vt0.c1, vt1.c0, vt0.c0 FROM vt1, vt2, vt0 WHERE (((((((vt0.c1) NOTNULL))!=(((vt0.c0) BETWEEN (vt0.c1) AND (NULL))))) ISNULL)) GROUP BY vt0.c1, vt1.c0, vt0.c0;
SELECT ALL vt0.c1, vt1.c0, vt0.c0 FROM vt1, vt2, vt0 GROUP BY vt0.c1, vt1.c0, vt0.c0;
SELECT ALL vt0.c0 FROM vt0 LEFT OUTER JOIN vt1 ON CAST(CAST(vt0.c1 AS INTEGER) AS REAL) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 LEFT OUTER JOIN vt1 ON CAST(CAST(vt0.c1 AS INTEGER) AS REAL) GROUP BY vt0.c0 HAVING (MIN(vt0.c0) IN ()) UNION ALL SELECT vt0.c0 FROM vt0 LEFT OUTER JOIN vt1 ON CAST(CAST(vt0.c1 AS INTEGER) AS REAL) GROUP BY vt0.c0 HAVING (NOT ((MIN(vt0.c0) IN ()))) UNION ALL SELECT vt0.c0 FROM vt0 LEFT OUTER JOIN vt1 ON CAST(CAST(vt0.c1 AS INTEGER) AS REAL) GROUP BY vt0.c0 HAVING (((MIN(vt0.c0) IN ())) ISNULL);
SELECT ALL vt0.c0 FROM vt0 LEFT OUTER JOIN vt1 ON CAST(CAST(vt0.c1 AS INTEGER) AS REAL) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 LEFT OUTER JOIN vt1 ON CAST(CAST(vt0.c1 AS INTEGER) AS REAL) GROUP BY vt0.c0 HAVING (MIN(vt0.c0) IN ()) UNION ALL SELECT vt0.c0 FROM vt0 LEFT OUTER JOIN vt1 ON CAST(CAST(vt0.c1 AS INTEGER) AS REAL) GROUP BY vt0.c0 HAVING (NOT ((MIN(vt0.c0) IN ()))) UNION ALL SELECT vt0.c0 FROM vt0 LEFT OUTER JOIN vt1 ON CAST(CAST(vt0.c1 AS INTEGER) AS REAL) GROUP BY vt0.c0 HAVING (((MIN(vt0.c0) IN ())) ISNULL);
SELECT ALL vt0.c0 FROM vt0 LEFT OUTER JOIN vt1 ON CAST(CAST(vt0.c1 AS INTEGER) AS REAL) GROUP BY vt0.c0;
SELECT ALL * FROM vt0, vt2;
SELECT ALL * FROM vt0, vt2 WHERE ((((vt2.c0 IN (vt0.c0))) BETWEEN (((vt2.c0) NOTNULL)) AND (vt0.c0))) UNION ALL SELECT ALL * FROM vt0, vt2 WHERE ((NOT ((((vt2.c0 IN (vt0.c0))) BETWEEN (((vt2.c0) NOTNULL)) AND (vt0.c0))))) UNION ALL SELECT * FROM vt0, vt2 WHERE ((((((vt2.c0 IN (vt0.c0))) BETWEEN (((vt2.c0) NOTNULL)) AND (vt0.c0))) ISNULL));
SELECT ALL * FROM vt0, vt2;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE (0.780228416084166) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT (0.780228416084166))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((0.780228416084166) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT ALL vt0.c1, vt2.c0, vt0.c0 FROM vt2 LEFT OUTER JOIN vt0 ON (vt0.c1 IN ()) GROUP BY vt0.c1, vt2.c0, vt0.c0;
SELECT ALL vt0.c1, vt2.c0, vt0.c0 FROM vt2 LEFT OUTER JOIN vt0 ON (vt0.c1 IN ()) WHERE ((highlight(vt2.c0, vt0.c0, vt0.c0, vt0.c1) IN ())) GROUP BY vt0.c1, vt2.c0, vt0.c0 UNION SELECT vt0.c1, vt2.c0, vt0.c0 FROM vt2 LEFT OUTER JOIN vt0 ON (vt0.c1 IN ()) WHERE ((NOT ((highlight(vt2.c0, vt0.c0, vt0.c0, vt0.c1) IN ())))) GROUP BY vt0.c1, vt2.c0, vt0.c0 UNION SELECT vt0.c1, vt2.c0, vt0.c0 FROM vt2 LEFT OUTER JOIN vt0 ON (vt0.c1 IN ()) WHERE ((((highlight(vt2.c0, vt0.c0, vt0.c0, vt0.c1) IN ())) ISNULL)) GROUP BY vt0.c1, vt2.c0, vt0.c0;
SELECT ALL vt0.c1, vt2.c0, vt0.c0 FROM vt2 LEFT OUTER JOIN vt0 ON (vt0.c1 IN ()) GROUP BY vt0.c1, vt2.c0, vt0.c0;
SELECT ALL vt0.c1 FROM vt0, vt2, vt1 GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt0, vt2, vt1 GROUP BY vt0.c1 HAVING ((TOTAL(COUNT(*))) IS FALSE) UNION ALL SELECT vt0.c1 FROM vt0, vt2, vt1 GROUP BY vt0.c1 HAVING (NOT (((TOTAL(COUNT(*))) IS FALSE))) UNION ALL SELECT vt0.c1 FROM vt0, vt2, vt1 GROUP BY vt0.c1 HAVING ((((TOTAL(COUNT(*))) IS FALSE)) ISNULL);
SELECT * FROM vt0 FULL OUTER JOIN vt2 ON ((CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN NULL THEN vt0.c1 WHEN vt0.c1 THEN vt2.c0 WHEN vt2.c0 THEN vt0.c1 END)&(vt0.c1 COLLATE NOCASE));
SELECT ALL * FROM vt0 FULL OUTER JOIN vt2 ON ((CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN NULL THEN vt0.c1 WHEN vt0.c1 THEN vt2.c0 WHEN vt2.c0 THEN vt0.c1 END)&(vt0.c1 COLLATE NOCASE)) WHERE ((((vt0.c1 IN ()))<=(((vt2.c0)LIKE(vt2.c0))))) UNION ALL SELECT ALL * FROM vt0 FULL OUTER JOIN vt2 ON ((CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN NULL THEN vt0.c1 WHEN vt0.c1 THEN vt2.c0 WHEN vt2.c0 THEN vt0.c1 END)&(vt0.c1 COLLATE NOCASE)) WHERE ((NOT ((((vt0.c1 IN ()))<=(((vt2.c0)LIKE(vt2.c0))))))) UNION ALL SELECT ALL * FROM vt0 FULL OUTER JOIN vt2 ON ((CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN NULL THEN vt0.c1 WHEN vt0.c1 THEN vt2.c0 WHEN vt2.c0 THEN vt0.c1 END)&(vt0.c1 COLLATE NOCASE)) WHERE ((((((vt0.c1 IN ()))<=(((vt2.c0)LIKE(vt2.c0))))) ISNULL));
SELECT * FROM vt0 FULL OUTER JOIN vt2 ON ((CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN NULL THEN vt0.c1 WHEN vt0.c1 THEN vt2.c0 WHEN vt2.c0 THEN vt0.c1 END)&(vt0.c1 COLLATE NOCASE));
SELECT DISTINCT vt0.c0, vt2.c0, vt0.c1, vt1.c0 FROM vt2 FULL OUTER JOIN vt0 ON ((((vt1.c0)/(vt0.c1))) IS TRUE) RIGHT OUTER JOIN vt1 ON CASE WHEN CAST(vt1.c0 AS BLOB) THEN ((vt2.c0) BETWEEN (vt0.c0) AND (vt0.c0)) WHEN (vt1.c0 IN ()) THEN vt0.c0 WHEN CASE WHEN vt0.c1 THEN vt1.c0 WHEN vt0.c0 THEN vt2.c0 WHEN vt2.c0 THEN vt0.c1 ELSE vt2.c0 END THEN CASE WHEN 0.6618167546732251 THEN vt0.c0 ELSE vt2.c0 END END;
SELECT vt2.c0, vt0.c0, vt0.c1, vt1.c0 FROM vt1, vt2, vt0 GROUP BY vt2.c0, vt0.c0, vt0.c1, vt1.c0;
SELECT vt2.c0, vt0.c0, vt0.c1, vt1.c0 FROM vt1, vt2, vt0 WHERE (HEX(DISTINCT vt1.c0)) GROUP BY vt2.c0, vt0.c0, vt0.c1, vt1.c0 UNION SELECT vt2.c0, vt0.c0, vt0.c1, vt1.c0 FROM vt1, vt2, vt0 WHERE ((NOT (HEX(DISTINCT vt1.c0)))) GROUP BY vt2.c0, vt0.c0, vt0.c1, vt1.c0 UNION SELECT ALL vt2.c0, vt0.c0, vt0.c1, vt1.c0 FROM vt1, vt2, vt0 WHERE (((HEX(DISTINCT vt1.c0)) ISNULL)) GROUP BY vt2.c0, vt0.c0, vt0.c1, vt1.c0;
SELECT vt2.c0, vt0.c0, vt0.c1, vt1.c0 FROM vt1, vt2, vt0 GROUP BY vt2.c0, vt0.c0, vt0.c1, vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING COUNT(TOTAL(vt1.c0)) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (COUNT(TOTAL(vt1.c0)))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((COUNT(TOTAL(vt1.c0))) ISNULL);
SELECT * FROM vt1;
SELECT ALL * FROM vt1 WHERE ('&r') UNION ALL SELECT ALL * FROM vt1 WHERE ((NOT ('&r'))) UNION ALL SELECT * FROM vt1 WHERE ((('&r') ISNULL));
SELECT * FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1, vt0;
SELECT DISTINCT vt1.c0 FROM vt1, vt0 WHERE (((((vt1.c0)IS NOT(vt0.c1))) BETWEEN (ABS(DISTINCT vt1.c0)) AND ((vt1.c0 IN ())))) UNION SELECT DISTINCT vt1.c0 FROM vt1, vt0 WHERE ((NOT (((((vt1.c0)IS NOT(vt0.c1))) BETWEEN (ABS(DISTINCT vt1.c0)) AND ((vt1.c0 IN ())))))) UNION SELECT DISTINCT vt1.c0 FROM vt1, vt0 WHERE (((((((vt1.c0)IS NOT(vt0.c1))) BETWEEN (ABS(DISTINCT vt1.c0)) AND ((vt1.c0 IN ())))) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1, vt0;
SELECT ALL vt0.c1, vt0.c0, vt2.c0 FROM vt2 INNER JOIN vt0 ON CAST(vt0.c1 AS INTEGER) COLLATE BINARY GROUP BY vt0.c1, vt0.c0, vt2.c0;
SELECT vt0.c1, vt0.c0, vt2.c0 FROM vt2 INNER JOIN vt0 ON CAST(vt0.c1 AS INTEGER) COLLATE BINARY WHERE (((((((((vt0.c0)AND(vt2.c0)))AND(vt0.c1)))AND(((vt0.c0)*(vt0.c0)))))AND((((vt0.c0)) BETWEEN ((-324508812)) AND ((vt2.c0)))))) GROUP BY vt0.c1, vt0.c0, vt2.c0 UNION SELECT ALL vt0.c1, vt0.c0, vt2.c0 FROM vt2 INNER JOIN vt0 ON CAST(vt0.c1 AS INTEGER) COLLATE BINARY WHERE ((NOT (((((((((vt0.c0)AND(vt2.c0)))AND(vt0.c1)))AND(((vt0.c0)*(vt0.c0)))))AND((((vt0.c0)) BETWEEN ((-324508812)) AND ((vt2.c0)))))))) GROUP BY vt0.c1, vt0.c0, vt2.c0 UNION SELECT ALL vt0.c1, vt0.c0, vt2.c0 FROM vt2 INNER JOIN vt0 ON CAST(vt0.c1 AS INTEGER) COLLATE BINARY WHERE (((((((((((vt0.c0)AND(vt2.c0)))AND(vt0.c1)))AND(((vt0.c0)*(vt0.c0)))))AND((((vt0.c0)) BETWEEN ((-324508812)) AND ((vt2.c0)))))) ISNULL)) GROUP BY vt0.c1, vt0.c0, vt2.c0;
SELECT ALL vt0.c1, vt0.c0, vt2.c0 FROM vt2 INNER JOIN vt0 ON CAST(vt0.c1 AS INTEGER) COLLATE BINARY GROUP BY vt0.c1, vt0.c0, vt2.c0;
SELECT vt2.c0 FROM vt1, vt0, vt2 GROUP BY vt2.c0;
SELECT ALL vt2.c0 FROM vt1, vt0, vt2 GROUP BY vt2.c0 HAVING GROUP_CONCAT((- (COUNT(TOTAL(MIN(vt2.c0)))))) UNION ALL SELECT ALL vt2.c0 FROM vt1, vt0, vt2 GROUP BY vt2.c0 HAVING (NOT (GROUP_CONCAT((- (COUNT(TOTAL(MIN(vt2.c0)))))))) UNION ALL SELECT ALL vt2.c0 FROM vt1, vt0, vt2 GROUP BY vt2.c0 HAVING ((GROUP_CONCAT((- (COUNT(TOTAL(MIN(vt2.c0))))))) ISNULL);
SELECT vt2.c0 FROM vt0 FULL OUTER JOIN vt2 ON (((((vt0.c1, vt0.c1, vt0.c1))<((vt0.c0, x'', vt0.c1)))) BETWEEN (((vt2.c0)>=(vt0.c1))) AND (((vt0.c0) NOT NULL)));
SELECT vt2.c0 FROM vt0 FULL OUTER JOIN vt2 ON (((((vt0.c1, vt0.c1, vt0.c1))<((vt0.c0, x'', vt0.c1)))) BETWEEN (((vt2.c0)>=(vt0.c1))) AND (((vt0.c0) NOT NULL))) WHERE (x'df7d') UNION ALL SELECT ALL vt2.c0 FROM vt0 FULL OUTER JOIN vt2 ON (((((vt0.c1, vt0.c1, vt0.c1))<((vt0.c0, x'', vt0.c1)))) BETWEEN (((vt2.c0)>=(vt0.c1))) AND (((vt0.c0) NOT NULL))) WHERE ((NOT (x'df7d'))) UNION ALL SELECT vt2.c0 FROM vt0 FULL OUTER JOIN vt2 ON (((((vt0.c1, vt0.c1, vt0.c1))<((vt0.c0, x'', vt0.c1)))) BETWEEN (((vt2.c0)>=(vt0.c1))) AND (((vt0.c0) NOT NULL))) WHERE (((x'df7d') ISNULL));
SELECT vt2.c0 FROM vt0 FULL OUTER JOIN vt2 ON (((((vt0.c1, vt0.c1, vt0.c1))<((vt0.c0, x'', vt0.c1)))) BETWEEN (((vt2.c0)>=(vt0.c1))) AND (((vt0.c0) NOT NULL)));
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (((((((((vt1.c0)OR(NULL)))AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)) COLLATE BINARY) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (((((((((vt1.c0)OR(NULL)))AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)) COLLATE BINARY))) UNION SELECT DISTINCT * FROM vt1 WHERE (((((((((((vt1.c0)OR(NULL)))AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)) COLLATE BINARY) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT vt0.c0, vt2.c0, vt0.c1 FROM vt1, vt0, vt2 GROUP BY vt0.c0, vt2.c0, vt0.c1;
SELECT ALL vt0.c0, vt2.c0, vt0.c1 FROM vt1, vt0, vt2 WHERE ((+ (((vt1.c0)-(vt0.c0))))) GROUP BY vt0.c0, vt2.c0, vt0.c1 UNION SELECT ALL vt0.c0, vt2.c0, vt0.c1 FROM vt1, vt0, vt2 WHERE ((NOT ((+ (((vt1.c0)-(vt0.c0))))))) GROUP BY vt0.c0, vt2.c0, vt0.c1 UNION SELECT vt0.c0, vt2.c0, vt0.c1 FROM vt1, vt0, vt2 WHERE ((((+ (((vt1.c0)-(vt0.c0))))) ISNULL)) GROUP BY vt0.c0, vt2.c0, vt0.c1;
SELECT vt0.c0, vt2.c0, vt0.c1 FROM vt1, vt0, vt2 GROUP BY vt0.c0, vt2.c0, vt0.c1;
SELECT vt0.c0, vt1.c0, vt2.c0 FROM vt0, vt2 FULL OUTER JOIN vt1 ON ((CAST(vt2.c0 AS INTEGER))%(vt0.c0 COLLATE NOCASE)) GROUP BY vt0.c0, vt1.c0, vt2.c0;
SELECT ALL vt0.c0, vt1.c0, vt2.c0 FROM vt0, vt2 FULL OUTER JOIN vt1 ON ((CAST(vt2.c0 AS INTEGER))%(vt0.c0 COLLATE NOCASE)) GROUP BY vt0.c0, vt1.c0, vt2.c0 HAVING AVG(MIN(vt0.c0)) UNION ALL SELECT vt0.c0, vt1.c0, vt2.c0 FROM vt0, vt2 FULL OUTER JOIN vt1 ON ((CAST(vt2.c0 AS INTEGER))%(vt0.c0 COLLATE NOCASE)) GROUP BY vt0.c0, vt1.c0, vt2.c0 HAVING (NOT (AVG(MIN(vt0.c0)))) UNION ALL SELECT ALL vt0.c0, vt1.c0, vt2.c0 FROM vt0, vt2 FULL OUTER JOIN vt1 ON ((CAST(vt2.c0 AS INTEGER))%(vt0.c0 COLLATE NOCASE)) GROUP BY vt0.c0, vt1.c0, vt2.c0 HAVING ((AVG(MIN(vt0.c0))) ISNULL);
SELECT ALL vt2.c0, vt0.c1, vt0.c0 FROM vt0, vt2;
SELECT vt2.c0, vt0.c1, vt0.c0 FROM vt0, vt2 WHERE (CAST(JULIANDAY(vt0.c1, vt0.c1, vt0.c0) AS REAL)) UNION ALL SELECT vt2.c0, vt0.c1, vt0.c0 FROM vt0, vt2 WHERE ((NOT (CAST(JULIANDAY(vt0.c1, vt0.c1, vt0.c0) AS REAL)))) UNION ALL SELECT ALL vt2.c0, vt0.c1, vt0.c0 FROM vt0, vt2 WHERE (((CAST(JULIANDAY(vt0.c1, vt0.c1, vt0.c0) AS REAL)) ISNULL));
SELECT ALL vt2.c0, vt0.c1, vt0.c0 FROM vt0, vt2;
SELECT DISTINCT * FROM vt2, vt0;
SELECT DISTINCT * FROM vt2, vt0 WHERE (CASE WHEN CAST(vt2.c0 AS REAL) THEN (vt0.c1 IN (vt2.c0)) WHEN ((vt0.c1)>>(vt0.c1)) THEN (vt0.c1 IN (vt2.c0)) WHEN ((vt0.c0)>=(vt2.c0)) THEN CAST(vt0.c1 AS BLOB) END) UNION SELECT DISTINCT * FROM vt2, vt0 WHERE ((NOT (CASE WHEN CAST(vt2.c0 AS REAL) THEN (vt0.c1 IN (vt2.c0)) WHEN ((vt0.c1)>>(vt0.c1)) THEN (vt0.c1 IN (vt2.c0)) WHEN ((vt0.c0)>=(vt2.c0)) THEN CAST(vt0.c1 AS BLOB) END))) UNION SELECT DISTINCT * FROM vt2, vt0 WHERE (((CASE WHEN CAST(vt2.c0 AS REAL) THEN (vt0.c1 IN (vt2.c0)) WHEN ((vt0.c1)>>(vt0.c1)) THEN (vt0.c1 IN (vt2.c0)) WHEN ((vt0.c0)>=(vt2.c0)) THEN CAST(vt0.c1 AS BLOB) END) ISNULL));
SELECT DISTINCT * FROM vt2, vt0;
SELECT vt0.c0, vt2.c0 FROM vt0, vt2 GROUP BY vt0.c0, vt2.c0;
SELECT ALL vt0.c0, vt2.c0 FROM vt0, vt2 WHERE ((((((vt2.c0 IN ()))AND(CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END)))AND(CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 END))) GROUP BY vt0.c0, vt2.c0 UNION SELECT ALL vt0.c0, vt2.c0 FROM vt0, vt2 WHERE ((NOT ((((((vt2.c0 IN ()))AND(CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END)))AND(CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 END))))) GROUP BY vt0.c0, vt2.c0 UNION SELECT vt0.c0, vt2.c0 FROM vt0, vt2 WHERE ((((((((vt2.c0 IN ()))AND(CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END)))AND(CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 END))) ISNULL)) GROUP BY vt0.c0, vt2.c0;
SELECT vt0.c0, vt2.c0 FROM vt0, vt2 GROUP BY vt0.c0, vt2.c0;
SELECT ALL vt0.c0, vt1.c0, vt0.c1 FROM vt1, vt2, vt0 GROUP BY vt0.c0, vt1.c0, vt0.c1;
SELECT ALL vt0.c0, vt1.c0, vt0.c1 FROM vt1, vt2, vt0 GROUP BY vt0.c0, vt1.c0, vt0.c1 HAVING COUNT(MAX(vt0.c1)) UNION ALL SELECT ALL vt0.c0, vt1.c0, vt0.c1 FROM vt1, vt2, vt0 GROUP BY vt0.c0, vt1.c0, vt0.c1 HAVING (NOT (COUNT(MAX(vt0.c1)))) UNION ALL SELECT ALL vt0.c0, vt1.c0, vt0.c1 FROM vt1, vt2, vt0 GROUP BY vt0.c0, vt1.c0, vt0.c1 HAVING ((COUNT(MAX(vt0.c1))) ISNULL);
SELECT ALL * FROM vt2 NATURAL JOIN vt1;
SELECT ALL * FROM vt2 NATURAL JOIN vt1 WHERE ((((vt1.c0)) NOT BETWEEN (((- (vt2.c0)))) AND ((((((vt1.c0)AND(vt2.c0)))OR(vt1.c0)))))) UNION ALL SELECT ALL * FROM vt2 NATURAL JOIN vt1 WHERE ((NOT ((((vt1.c0)) NOT BETWEEN (((- (vt2.c0)))) AND ((((((vt1.c0)AND(vt2.c0)))OR(vt1.c0)))))))) UNION ALL SELECT ALL * FROM vt2 NATURAL JOIN vt1 WHERE ((((((vt1.c0)) NOT BETWEEN (((- (vt2.c0)))) AND ((((((vt1.c0)AND(vt2.c0)))OR(vt1.c0)))))) ISNULL));
SELECT ALL * FROM vt2 NATURAL JOIN vt1;
SELECT DISTINCT vt2.c0 FROM vt2;
SELECT DISTINCT vt2.c0 FROM vt2 WHERE ((('L퉈aD_<薋L')<(CAST(vt2.c0 AS TEXT)))) UNION SELECT DISTINCT vt2.c0 FROM vt2 WHERE ((NOT ((('L퉈aD_<薋L')<(CAST(vt2.c0 AS TEXT)))))) UNION SELECT DISTINCT vt2.c0 FROM vt2 WHERE ((((('L퉈aD_<薋L')<(CAST(vt2.c0 AS TEXT)))) ISNULL));
SELECT DISTINCT vt2.c0 FROM vt2;
SELECT vt0.c0, vt1.c0, vt0.c1 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c0, vt0.c1;
SELECT ALL vt0.c0, vt1.c0, vt0.c1 FROM vt1, vt0 WHERE (('w>A^\0i7B' IN ())) GROUP BY vt0.c0, vt1.c0, vt0.c1 UNION SELECT vt0.c0, vt1.c0, vt0.c1 FROM vt1, vt0 WHERE ((NOT (('w>A^\0i7B' IN ())))) GROUP BY vt0.c0, vt1.c0, vt0.c1 UNION SELECT ALL vt0.c0, vt1.c0, vt0.c1 FROM vt1, vt0 WHERE (((('w>A^\0i7B' IN ())) ISNULL)) GROUP BY vt0.c0, vt1.c0, vt0.c1;
SELECT vt0.c0, vt1.c0, vt0.c1 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c0, vt0.c1;
SELECT ALL vt0.c1, vt1.c0 FROM vt1 NOT INDEXED, vt0 GROUP BY vt0.c1, vt1.c0;
SELECT vt0.c1, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c1, vt1.c0 HAVING ((MAX(vt0.c0))+((((SUM(vt0.c0))) NOT BETWEEN ((vt1.c0)) AND ((COUNT(x'')))))) UNION ALL SELECT vt0.c1, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c1, vt1.c0 HAVING (NOT (((MAX(vt0.c0))+((((SUM(vt0.c0))) NOT BETWEEN ((vt1.c0)) AND ((COUNT(x'')))))))) UNION ALL SELECT vt0.c1, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c1, vt1.c0 HAVING ((((MAX(vt0.c0))+((((SUM(vt0.c0))) NOT BETWEEN ((vt1.c0)) AND ((COUNT(x''))))))) ISNULL);
SELECT ALL vt0.c1, vt1.c0 FROM vt1 NOT INDEXED, vt0 GROUP BY vt0.c1, vt1.c0;
SELECT vt0.c1, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c1, vt1.c0 HAVING ((MAX(vt0.c0))+((((SUM(vt0.c0))) NOT BETWEEN ((vt1.c0)) AND ((COUNT(x'')))))) UNION ALL SELECT vt0.c1, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c1, vt1.c0 HAVING (NOT (((MAX(vt0.c0))+((((SUM(vt0.c0))) NOT BETWEEN ((vt1.c0)) AND ((COUNT(x'')))))))) UNION ALL SELECT vt0.c1, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c1, vt1.c0 HAVING ((((MAX(vt0.c0))+((((SUM(vt0.c0))) NOT BETWEEN ((vt1.c0)) AND ((COUNT(x''))))))) ISNULL);
SELECT ALL vt0.c1, vt1.c0 FROM vt1 NOT INDEXED, vt0 GROUP BY vt0.c1, vt1.c0;
SELECT * FROM vt2, vt1;
SELECT * FROM vt2, vt1 WHERE ('-701967800') UNION ALL SELECT ALL * FROM vt2, vt1 WHERE ((NOT ('-701967800'))) UNION ALL SELECT ALL * FROM vt2, vt1 WHERE ((('-701967800') ISNULL));
SELECT * FROM vt2, vt1;
SELECT DISTINCT * FROM vt0, vt2;
SELECT DISTINCT * FROM vt0, vt2 WHERE (((CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 END) NOT BETWEEN ('807156428') AND (vt0.c0))) UNION SELECT DISTINCT * FROM vt0, vt2 WHERE ((NOT (((CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 END) NOT BETWEEN ('807156428') AND (vt0.c0))))) UNION SELECT DISTINCT * FROM vt0, vt2 WHERE (((((CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 END) NOT BETWEEN ('807156428') AND (vt0.c0))) ISNULL));
SELECT DISTINCT * FROM vt0, vt2;
SELECT ALL vt2.c0 FROM vt2, vt1 GROUP BY vt2.c0;
SELECT vt2.c0 FROM vt2, vt1 WHERE (CASE CASE vt2.c0  WHEN vt2.c0 THEN vt1.c0 END  WHEN (- (vt2.c0)) THEN CASE vt1.c0  WHEN vt1.c0 THEN vt2.c0 ELSE vt2.c0 END WHEN vt2.c0 THEN (+ (vt2.c0)) WHEN ((vt2.c0) BETWEEN (vt2.c0) AND (vt1.c0)) THEN vt2.c0 WHEN vt2.c0 COLLATE BINARY THEN '1000377864' WHEN (vt2.c0 IN ()) THEN vt2.c0 COLLATE RTRIM END) GROUP BY vt2.c0 UNION SELECT ALL vt2.c0 FROM vt2, vt1 WHERE ((NOT (CASE CASE vt2.c0  WHEN vt2.c0 THEN vt1.c0 END  WHEN (- (vt2.c0)) THEN CASE vt1.c0  WHEN vt1.c0 THEN vt2.c0 ELSE vt2.c0 END WHEN vt2.c0 THEN (+ (vt2.c0)) WHEN ((vt2.c0) BETWEEN (vt2.c0) AND (vt1.c0)) THEN vt2.c0 WHEN vt2.c0 COLLATE BINARY THEN '1000377864' WHEN (vt2.c0 IN ()) THEN vt2.c0 COLLATE RTRIM END))) GROUP BY vt2.c0 UNION SELECT ALL vt2.c0 FROM vt2, vt1 WHERE (((CASE CASE vt2.c0  WHEN vt2.c0 THEN vt1.c0 END  WHEN (- (vt2.c0)) THEN CASE vt1.c0  WHEN vt1.c0 THEN vt2.c0 ELSE vt2.c0 END WHEN vt2.c0 THEN (+ (vt2.c0)) WHEN ((vt2.c0) BETWEEN (vt2.c0) AND (vt1.c0)) THEN vt2.c0 WHEN vt2.c0 COLLATE BINARY THEN '1000377864' WHEN (vt2.c0 IN ()) THEN vt2.c0 COLLATE RTRIM END) ISNULL)) GROUP BY vt2.c0;
SELECT ALL vt2.c0 FROM vt2, vt1 GROUP BY vt2.c0;
SELECT ALL vt1.c0, vt0.c0, vt0.c1 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0, vt0.c1;
SELECT ALL vt1.c0, vt0.c0, vt0.c1 FROM vt1, vt0 NOT INDEXED GROUP BY vt1.c0, vt0.c0, vt0.c1 HAVING SUM(COUNT(*)) COLLATE BINARY UNION ALL SELECT vt1.c0, vt0.c0, vt0.c1 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0, vt0.c1 HAVING (NOT (SUM(COUNT(*)) COLLATE BINARY)) UNION ALL SELECT vt1.c0, vt0.c0, vt0.c1 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0, vt0.c1 HAVING ((SUM(COUNT(*)) COLLATE BINARY) ISNULL);
SELECT vt1.c0, vt2.c0 FROM vt1 RIGHT OUTER JOIN vt2 ON (((((vt2.c0)|(vt2.c0))))!=((((vt1.c0) IS FALSE))));
SELECT ALL vt1.c0, vt2.c0 FROM vt1 RIGHT OUTER JOIN vt2 ON (((((vt2.c0)|(vt2.c0))))<>((((vt1.c0) IS FALSE)))) WHERE (((((vt1.c0) IS FALSE))>(((((vt2.c0)OR(vt1.c0)))AND(vt1.c0))))) UNION ALL SELECT ALL vt1.c0, vt2.c0 FROM vt1 RIGHT OUTER JOIN vt2 ON (((((vt2.c0)|(vt2.c0))))<>((((vt1.c0) IS FALSE)))) WHERE ((NOT (((((vt1.c0) IS FALSE))>(((((vt2.c0)OR(vt1.c0)))AND(vt1.c0))))))) UNION ALL SELECT vt1.c0, vt2.c0 FROM vt1 RIGHT OUTER JOIN vt2 ON (((((vt2.c0)|(vt2.c0))))<>((((vt1.c0) IS FALSE)))) WHERE (((((((vt1.c0) IS FALSE))>(((((vt2.c0)OR(vt1.c0)))AND(vt1.c0))))) ISNULL));
SELECT vt1.c0, vt2.c0 FROM vt1 RIGHT OUTER JOIN vt2 ON (((((vt2.c0)|(vt2.c0))))!=((((vt1.c0) IS FALSE))));
SELECT DISTINCT * FROM vt0, vt1;
SELECT DISTINCT * FROM vt0, vt1 WHERE (CASE vt1.c0  WHEN CAST(vt0.c0 AS NUMERIC) THEN CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 ELSE vt1.c0 END ELSE ((((vt0.c0)OR(vt1.c0)))OR(vt1.c0)) END) UNION SELECT DISTINCT * FROM vt0, vt1 WHERE ((NOT (CASE vt1.c0  WHEN CAST(vt0.c0 AS NUMERIC) THEN CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 ELSE vt1.c0 END ELSE ((((vt0.c0)OR(vt1.c0)))OR(vt1.c0)) END))) UNION SELECT DISTINCT * FROM vt0, vt1 WHERE (((CASE vt1.c0  WHEN CAST(vt0.c0 AS NUMERIC) THEN CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 ELSE vt1.c0 END ELSE ((((vt0.c0)OR(vt1.c0)))OR(vt1.c0)) END) ISNULL));
SELECT DISTINCT * FROM vt0, vt1;
SELECT vt2.c0, vt1.c0 FROM vt2, vt1 GROUP BY vt2.c0, vt1.c0;
SELECT vt2.c0, vt1.c0 FROM vt2, vt1 WHERE ('c*f''n') GROUP BY vt2.c0, vt1.c0 UNION SELECT ALL vt2.c0, vt1.c0 FROM vt2, vt1 WHERE ((NOT ('c*f''n'))) GROUP BY vt2.c0, vt1.c0 UNION SELECT vt2.c0, vt1.c0 FROM vt2, vt1 WHERE ((('c*f''n') ISNULL)) GROUP BY vt2.c0, vt1.c0;
SELECT vt2.c0, vt1.c0 FROM vt2, vt1 GROUP BY vt2.c0, vt1.c0;
SELECT ALL vt0.c1, vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c1, vt0.c0, vt1.c0;
SELECT vt0.c1, vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c1, vt0.c0, vt1.c0 HAVING (((GROUP_CONCAT(GROUP_CONCAT(vt0.c1)), ((((vt0.c0)AND(COUNT(vt0.c1))))AND(vt1.c0)), SUM(MIN(vt1.c0)), (((vt0.c0, vt0.c0, COUNT(vt1.c0))) BETWEEN ((x'', vt0.c1, 0x72aeef7c)) AND ((vt0.c1, vt0.c1, vt0.c0))), ((vt0.c1) ISNULL)))<>(((vt1.c0 IN (SUM(COUNT(*)))), TOTAL(vt0.c1), COUNT('1305506238'), (((vt0.c1))<((MAX(GROUP_CONCAT(MAX(vt0.c1)))))), (NOT (MIN(vt0.c1)))))) UNION ALL SELECT ALL vt0.c1, vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c1, vt0.c0, vt1.c0 HAVING (NOT ((((GROUP_CONCAT(GROUP_CONCAT(vt0.c1)), ((((vt0.c0)AND(COUNT(vt0.c1))))AND(vt1.c0)), SUM(MIN(vt1.c0)), (((vt0.c0, vt0.c0, COUNT(vt1.c0))) BETWEEN ((x'', vt0.c1, 0x72aeef7c)) AND ((vt0.c1, vt0.c1, vt0.c0))), ((vt0.c1) ISNULL)))<>(((vt1.c0 IN (SUM(COUNT(*)))), TOTAL(vt0.c1), COUNT('1305506238'), (((vt0.c1))<((MAX(GROUP_CONCAT(MAX(vt0.c1)))))), (NOT (MIN(vt0.c1)))))))) UNION ALL SELECT vt0.c1, vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c1, vt0.c0, vt1.c0 HAVING (((((GROUP_CONCAT(GROUP_CONCAT(vt0.c1)), ((((vt0.c0)AND(COUNT(vt0.c1))))AND(vt1.c0)), SUM(MIN(vt1.c0)), (((vt0.c0, vt0.c0, COUNT(vt1.c0))) BETWEEN ((x'', vt0.c1, 0X72aeef7c)) AND ((vt0.c1, vt0.c1, vt0.c0))), ((vt0.c1) ISNULL)))<>(((vt1.c0 IN (SUM(COUNT(*)))), TOTAL(vt0.c1), COUNT('1305506238'), (((vt0.c1))<((MAX(GROUP_CONCAT(MAX(vt0.c1)))))), (NOT (MIN(vt0.c1))))))) ISNULL);
SELECT * FROM vt2;
SELECT ALL * FROM vt2 WHERE (((vt2.c0 COLLATE NOCASE) NOT NULL)) UNION ALL SELECT ALL * FROM vt2 WHERE ((NOT (((vt2.c0 COLLATE NOCASE) NOT NULL)))) UNION ALL SELECT ALL * FROM vt2 WHERE (((((vt2.c0 COLLATE NOCASE) NOT NULL)) ISNULL));
SELECT * FROM vt2;
SELECT DISTINCT vt2.c0, vt1.c0, vt0.c1 FROM vt0, vt1, vt2;
SELECT DISTINCT vt2.c0, vt1.c0, vt0.c1 FROM vt0, vt1, vt2 WHERE ((((((((x'')) BETWEEN ((vt2.c0)) AND ((vt2.c0))))OR((NOT (vt0.c1)))))AND(vt1.c0))) UNION SELECT DISTINCT vt2.c0, vt1.c0, vt0.c1 FROM vt0, vt1, vt2 WHERE ((NOT ((((((((x'')) BETWEEN ((vt2.c0)) AND ((vt2.c0))))OR((NOT (vt0.c1)))))AND(vt1.c0))))) UNION SELECT DISTINCT vt2.c0, vt1.c0, vt0.c1 FROM vt0, vt1, vt2 WHERE ((((((((((x'')) BETWEEN ((vt2.c0)) AND ((vt2.c0))))OR((NOT (vt0.c1)))))AND(vt1.c0))) ISNULL));
SELECT DISTINCT vt2.c0, vt1.c0, vt0.c1 FROM vt0, vt1, vt2;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE ((((vt1.c0 COLLATE BINARY))<(((((vt1.c0))=((vt1.c0))))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT ((((vt1.c0 COLLATE BINARY))<(((((vt1.c0))==((vt1.c0))))))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((((((vt1.c0 COLLATE BINARY))<(((((vt1.c0))=((vt1.c0))))))) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0, vt2.c0 FROM vt2, vt1 GROUP BY vt1.c0, vt2.c0;
SELECT ALL vt1.c0, vt2.c0 FROM vt2, vt1 GROUP BY vt1.c0, vt2.c0 HAVING ((MAX(AVG(vt2.c0))) NOT BETWEEN (TRIM(DISTINCT NULL, COUNT(*))) AND (COUNT(vt1.c0))) UNION ALL SELECT vt1.c0, vt2.c0 FROM vt2, vt1 GROUP BY vt1.c0, vt2.c0 HAVING (NOT (((MAX(AVG(vt2.c0))) NOT BETWEEN (TRIM(DISTINCT NULL, COUNT(*))) AND (COUNT(vt1.c0))))) UNION ALL SELECT ALL vt1.c0, vt2.c0 FROM vt2, vt1 GROUP BY vt1.c0, vt2.c0 HAVING ((((MAX(AVG(vt2.c0))) NOT BETWEEN (TRIM(DISTINCT NULL, COUNT(*))) AND (COUNT(vt1.c0)))) ISNULL);
SELECT vt1.c0, vt0.c1 FROM vt1, vt0;
SELECT ALL vt1.c0, vt0.c1 FROM vt1, vt0 WHERE ((~ (((vt1.c0)IS(vt0.c1))))) UNION ALL SELECT vt1.c0, vt0.c1 FROM vt1, vt0 WHERE ((NOT ((~ (((vt1.c0)IS(vt0.c1))))))) UNION ALL SELECT vt1.c0, vt0.c1 FROM vt1, vt0 WHERE ((((~ (((vt1.c0)IS(vt0.c1))))) ISNULL));
SELECT vt1.c0, vt0.c1 FROM vt1, vt0;
SELECT DISTINCT vt2.c0 FROM vt2;
SELECT DISTINCT vt2.c0 FROM vt2 WHERE ((+ (vt2.c0 COLLATE BINARY))) UNION SELECT DISTINCT vt2.c0 FROM vt2 WHERE ((NOT ((+ (vt2.c0 COLLATE BINARY))))) UNION SELECT DISTINCT vt2.c0 FROM vt2 WHERE ((((+ (vt2.c0 COLLATE BINARY))) ISNULL));
SELECT DISTINCT vt2.c0 FROM vt2;
SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT ALL vt2.c0 FROM vt2 WHERE ((NOT (((((vt2.c0)AND(x'8dfa')))OR(vt2.c0))))) GROUP BY vt2.c0 UNION SELECT ALL vt2.c0 FROM vt2 WHERE ((NOT ((NOT (((((vt2.c0)AND(x'8dfa')))OR(vt2.c0))))))) GROUP BY vt2.c0 UNION SELECT vt2.c0 FROM vt2 WHERE ((((NOT (((((vt2.c0)AND(x'8dfa')))OR(vt2.c0))))) ISNULL)) GROUP BY vt2.c0;
SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT ALL vt2.c0, vt0.c1, vt0.c0, vt1.c0 FROM vt1, vt2, vt0 GROUP BY vt2.c0, vt0.c1, vt0.c0, vt1.c0;
SELECT vt2.c0, vt0.c1, vt0.c0, vt1.c0 FROM vt1, vt2, vt0 GROUP BY vt2.c0, vt0.c1, vt0.c0, vt1.c0 HAVING COUNT(AVG(SUM(vt0.c0))) UNION ALL SELECT vt2.c0, vt0.c1, vt0.c0, vt1.c0 FROM vt1, vt2, vt0 GROUP BY vt2.c0, vt0.c1, vt0.c0, vt1.c0 HAVING (NOT (COUNT(AVG(SUM(vt0.c0))))) UNION ALL SELECT ALL vt2.c0, vt0.c1, vt0.c0, vt1.c0 FROM vt1, vt2, vt0 GROUP BY vt2.c0, vt0.c1, vt0.c0, vt1.c0 HAVING ((COUNT(AVG(SUM(vt0.c0)))) ISNULL);
SELECT ALL * FROM vt0, vt1;
SELECT ALL * FROM vt0, vt1 WHERE ((((- (vt0.c0))) NOT BETWEEN (vt0.c1) AND ((NOT (vt0.c1))))) UNION ALL SELECT * FROM vt0, vt1 WHERE ((NOT ((((- (vt0.c0))) NOT BETWEEN (vt0.c1) AND ((NOT (vt0.c1))))))) UNION ALL SELECT * FROM vt0, vt1 WHERE ((((((- (vt0.c0))) NOT BETWEEN (vt0.c1) AND ((NOT (vt0.c1))))) ISNULL));
SELECT ALL * FROM vt0, vt1;
SELECT DISTINCT * FROM vt2, vt0;
SELECT DISTINCT * FROM vt2, vt0 WHERE (((NULL)-(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))))) UNION SELECT DISTINCT * FROM vt2, vt0 WHERE ((NOT (((NULL)-(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))))))) UNION SELECT DISTINCT * FROM vt2, vt0 WHERE (((((NULL)-(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))))) ISNULL));
SELECT DISTINCT * FROM vt2, vt0;
SELECT vt0.c0, vt1.c0 FROM vt1, vt2 INNER JOIN vt0 ON ((((vt0.c1) NOT BETWEEN (vt1.c0) AND (vt0.c1))) NOT BETWEEN (vt0.c0 COLLATE NOCASE) AND (((((vt0.c1)AND(NULL)))AND(vt2.c0)))) GROUP BY vt0.c0, vt1.c0;
SELECT ALL vt0.c0, vt1.c0 FROM vt1, vt2 INNER JOIN vt0 ON ((((vt0.c1) NOT BETWEEN (vt1.c0) AND (vt0.c1))) NOT BETWEEN (vt0.c0 COLLATE NOCASE) AND (((((vt0.c1)AND(NULL)))AND(vt2.c0)))) WHERE (((CASE vt1.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END)>(CAST(vt0.c0 AS INTEGER)))) GROUP BY vt0.c0, vt1.c0 UNION SELECT ALL vt0.c0, vt1.c0 FROM vt1, vt2 INNER JOIN vt0 ON ((((vt0.c1) NOT BETWEEN (vt1.c0) AND (vt0.c1))) NOT BETWEEN (vt0.c0 COLLATE NOCASE) AND (((((vt0.c1)AND(NULL)))AND(vt2.c0)))) WHERE ((NOT (((CASE vt1.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END)>(CAST(vt0.c0 AS INTEGER)))))) GROUP BY vt0.c0, vt1.c0 UNION SELECT ALL vt0.c0, vt1.c0 FROM vt1, vt2 INNER JOIN vt0 ON ((((vt0.c1) NOT BETWEEN (vt1.c0) AND (vt0.c1))) NOT BETWEEN (vt0.c0 COLLATE NOCASE) AND (((((vt0.c1)AND(NULL)))AND(vt2.c0)))) WHERE (((((CASE vt1.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END)>(CAST(vt0.c0 AS INTEGER)))) ISNULL)) GROUP BY vt0.c0, vt1.c0;
SELECT vt0.c0, vt1.c0 FROM vt1, vt2 INNER JOIN vt0 ON ((((vt0.c1) NOT BETWEEN (vt1.c0) AND (vt0.c1))) NOT BETWEEN (vt0.c0 COLLATE NOCASE) AND (((((vt0.c1)AND(NULL)))AND(vt2.c0)))) GROUP BY vt0.c0, vt1.c0;
SELECT vt1.c0, vt0.c1, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c1, vt0.c0;
SELECT ALL vt1.c0, vt0.c1, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c1, vt0.c0 HAVING x'' UNION ALL SELECT ALL vt1.c0, vt0.c1, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c1, vt0.c0 HAVING (NOT (x'')) UNION ALL SELECT vt1.c0, vt0.c1, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c1, vt0.c0 HAVING ((x'') ISNULL);
SELECT vt1.c0, vt0.c1, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c1, vt0.c0;
SELECT ALL vt1.c0, vt0.c1, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c1, vt0.c0 HAVING x'' UNION ALL SELECT ALL vt1.c0, vt0.c1, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c1, vt0.c0 HAVING (NOT (x'')) UNION ALL SELECT vt1.c0, vt0.c1, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c1, vt0.c0 HAVING ((x'') ISNULL);
SELECT vt1.c0, vt0.c1, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c1, vt0.c0;
SELECT ALL * FROM vt1, vt0;
SELECT * FROM vt1, vt0 WHERE ((((vt0.c1)) NOT BETWEEN (((vt0.c1 IN (vt0.c1, vt1.c0)))) AND ((CAST(vt1.c0 AS BLOB))))) UNION ALL SELECT ALL * FROM vt1, vt0 WHERE ((NOT ((((vt0.c1)) NOT BETWEEN (((vt0.c1 IN (vt0.c1, vt1.c0)))) AND ((CAST(vt1.c0 AS BLOB))))))) UNION ALL SELECT * FROM vt1, vt0 WHERE ((((((vt0.c1)) NOT BETWEEN (((vt0.c1 IN (vt0.c1, vt1.c0)))) AND ((CAST(vt1.c0 AS BLOB))))) ISNULL));
SELECT ALL * FROM vt1, vt0;
SELECT DISTINCT vt0.c1 FROM vt1 INNER JOIN vt0 ON ((CAST(NULL AS REAL))=((+ (vt0.c0))));
SELECT DISTINCT vt0.c1 FROM vt1 INNER JOIN vt0 ON ((CAST(NULL AS REAL))=((+ (vt0.c0)))) WHERE (vt0.c0) UNION SELECT DISTINCT vt0.c1 FROM vt1 INNER JOIN vt0 ON ((CAST(NULL AS REAL))==((+ (vt0.c0)))) WHERE ((NOT (vt0.c0))) UNION SELECT DISTINCT vt0.c1 FROM vt1 INNER JOIN vt0 ON ((CAST(NULL AS REAL))==((+ (vt0.c0)))) WHERE (((vt0.c0) ISNULL));
SELECT DISTINCT vt0.c1 FROM vt1 INNER JOIN vt0 ON ((CAST(NULL AS REAL))=((+ (vt0.c0))));
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0 WHERE (((((((((((vt0.c0)%(vt0.c0)))AND(((vt0.c0)+(vt0.c0)))))AND(CASE WHEN vt0.c1 THEN vt0.c1 ELSE '-1594878932' END)))OR((~ (vt0.c0)))))AND(((vt0.c0)<>(vt0.c0))))) GROUP BY vt0.c1, vt0.c0 UNION SELECT ALL vt0.c1, vt0.c0 FROM vt0 WHERE ((NOT (((((((((((vt0.c0)%(vt0.c0)))AND(((vt0.c0)+(vt0.c0)))))AND(CASE WHEN vt0.c1 THEN vt0.c1 ELSE '-1594878932' END)))OR((~ (vt0.c0)))))AND(((vt0.c0)<>(vt0.c0))))))) GROUP BY vt0.c1, vt0.c0 UNION SELECT ALL vt0.c1, vt0.c0 FROM vt0 WHERE (((((((((((((vt0.c0)%(vt0.c0)))AND(((vt0.c0)+(vt0.c0)))))AND(CASE WHEN vt0.c1 THEN vt0.c1 ELSE '-1594878932' END)))OR((~ (vt0.c0)))))AND(((vt0.c0)<>(vt0.c0))))) ISNULL)) GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT vt1.c0, vt0.c1, vt2.c0 FROM vt1, vt2, vt0 NOT INDEXED GROUP BY vt1.c0, vt0.c1, vt2.c0;
SELECT vt1.c0, vt0.c1, vt2.c0 FROM vt1, vt2, vt0 GROUP BY vt1.c0, vt0.c1, vt2.c0 HAVING (((TOTAL(SUM(0.3728781567809647)))) NOT BETWEEN ((((5.489954666173524E-4) IS TRUE))) AND ((CASE WHEN vt0.c1 THEN vt1.c0 END))) UNION ALL SELECT ALL vt1.c0, vt0.c1, vt2.c0 FROM vt1, vt2, vt0 GROUP BY vt1.c0, vt0.c1, vt2.c0 HAVING (NOT ((((TOTAL(SUM(0.3728781567809647)))) NOT BETWEEN ((((5.489954666173524E-4) IS TRUE))) AND ((CASE WHEN vt0.c1 THEN vt1.c0 END))))) UNION ALL SELECT ALL vt1.c0, vt0.c1, vt2.c0 FROM vt1, vt2, vt0 GROUP BY vt1.c0, vt0.c1, vt2.c0 HAVING (((((TOTAL(SUM(0.3728781567809647)))) NOT BETWEEN ((((5.489954666173524E-4) IS TRUE))) AND ((CASE WHEN vt0.c1 THEN vt1.c0 END)))) ISNULL);
SELECT * FROM vt0, vt1, vt2;
SELECT ALL * FROM vt0, vt1, vt2 WHERE ('矽au*䏳O') UNION ALL SELECT ALL * FROM vt0, vt1, vt2 WHERE ((NOT ('矽au*䏳O'))) UNION ALL SELECT * FROM vt0, vt1, vt2 WHERE ((('矽au*䏳O') ISNULL));
SELECT * FROM vt0, vt1, vt2;
SELECT DISTINCT vt1.c0 FROM vt1 RIGHT OUTER JOIN vt2 ON CASE WHEN vt2.c0 THEN (((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt2.c0, vt1.c0, 326851944)) AND ((vt2.c0, vt1.c0, vt2.c0))) ELSE CASE vt2.c0  WHEN vt2.c0 THEN NULL ELSE x'' END END;
SELECT DISTINCT vt1.c0 FROM vt1 RIGHT OUTER JOIN vt2 ON CASE WHEN vt2.c0 THEN (((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt2.c0, vt1.c0, 326851944)) AND ((vt2.c0, vt1.c0, vt2.c0))) ELSE CASE vt2.c0  WHEN vt2.c0 THEN NULL ELSE x'' END END WHERE ((- (((vt1.c0)|(0.7140023052423907))))) UNION SELECT DISTINCT vt1.c0 FROM vt1 RIGHT OUTER JOIN vt2 ON CASE WHEN vt2.c0 THEN (((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt2.c0, vt1.c0, 326851944)) AND ((vt2.c0, vt1.c0, vt2.c0))) ELSE CASE vt2.c0  WHEN vt2.c0 THEN NULL ELSE x'' END END WHERE ((NOT ((- (((vt1.c0)|(0.7140023052423907))))))) UNION SELECT DISTINCT vt1.c0 FROM vt1 RIGHT OUTER JOIN vt2 ON CASE WHEN vt2.c0 THEN (((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt2.c0, vt1.c0, 326851944)) AND ((vt2.c0, vt1.c0, vt2.c0))) ELSE CASE vt2.c0  WHEN vt2.c0 THEN NULL ELSE x'' END END WHERE ((((- (((vt1.c0)|(0.7140023052423907))))) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1 RIGHT OUTER JOIN vt2 ON CASE WHEN vt2.c0 THEN (((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt2.c0, vt1.c0, 326851944)) AND ((vt2.c0, vt1.c0, vt2.c0))) ELSE CASE vt2.c0  WHEN vt2.c0 THEN NULL ELSE x'' END END;
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0 WHERE ((UPPER(vt0.c1) IN ())) GROUP BY vt0.c1 UNION SELECT ALL vt0.c1 FROM vt0 WHERE ((NOT ((UPPER(vt0.c1) IN ())))) GROUP BY vt0.c1 UNION SELECT ALL vt0.c1 FROM vt0 WHERE ((((UPPER(vt0.c1) IN ())) ISNULL)) GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT ALL vt0.c1, vt1.c0 FROM vt1, vt2 INNER JOIN vt0 ON CASE vt0.c0  WHEN (vt2.c0 IN (vt0.c0)) THEN CAST(-1.594878932E9 AS BLOB) ELSE ((vt0.c0) NOT NULL) END GROUP BY vt0.c1, vt1.c0;
SELECT vt0.c1, vt1.c0 FROM vt1, vt2 INNER JOIN vt0 ON CASE vt0.c0  WHEN (vt2.c0 IN (vt0.c0)) THEN CAST(-1.594878932E9 AS BLOB) ELSE ((vt0.c0) NOT NULL) END GROUP BY vt0.c1, vt1.c0 HAVING ((AVG(vt0.c1))<=(vt1.c0)) COLLATE NOCASE UNION ALL SELECT ALL vt0.c1, vt1.c0 FROM vt1, vt2 INNER JOIN vt0 ON CASE vt0.c0  WHEN (vt2.c0 IN (vt0.c0)) THEN CAST(-1.594878932E9 AS BLOB) ELSE ((vt0.c0) NOT NULL) END GROUP BY vt0.c1, vt1.c0 HAVING (NOT (((AVG(vt0.c1))<=(vt1.c0)) COLLATE NOCASE)) UNION ALL SELECT vt0.c1, vt1.c0 FROM vt1, vt2 INNER JOIN vt0 ON CASE vt0.c0  WHEN (vt2.c0 IN (vt0.c0)) THEN CAST(-1.594878932E9 AS BLOB) ELSE ((vt0.c0) NOT NULL) END GROUP BY vt0.c1, vt1.c0 HAVING ((((AVG(vt0.c1))<=(vt1.c0)) COLLATE NOCASE) ISNULL);
SELECT ALL vt0.c1, vt1.c0 FROM vt1, vt2 INNER JOIN vt0 ON CASE vt0.c0  WHEN (vt2.c0 IN (vt0.c0)) THEN CAST(-1.594878932E9 AS BLOB) ELSE ((vt0.c0) NOT NULL) END GROUP BY vt0.c1, vt1.c0;
SELECT vt0.c1, vt1.c0 FROM vt1, vt2 INNER JOIN vt0 ON CASE vt0.c0  WHEN (vt2.c0 IN (vt0.c0)) THEN CAST(-1.594878932E9 AS BLOB) ELSE ((vt0.c0) NOT NULL) END GROUP BY vt0.c1, vt1.c0 HAVING ((AVG(vt0.c1))<=(vt1.c0)) COLLATE NOCASE UNION ALL SELECT ALL vt0.c1, vt1.c0 FROM vt1, vt2 INNER JOIN vt0 ON CASE vt0.c0  WHEN (vt2.c0 IN (vt0.c0)) THEN CAST(-1.594878932E9 AS BLOB) ELSE ((vt0.c0) NOT NULL) END GROUP BY vt0.c1, vt1.c0 HAVING (NOT (((AVG(vt0.c1))<=(vt1.c0)) COLLATE NOCASE)) UNION ALL SELECT vt0.c1, vt1.c0 FROM vt1, vt2 INNER JOIN vt0 ON CASE vt0.c0  WHEN (vt2.c0 IN (vt0.c0)) THEN CAST(-1.594878932E9 AS BLOB) ELSE ((vt0.c0) NOT NULL) END GROUP BY vt0.c1, vt1.c0 HAVING ((((AVG(vt0.c1))<=(vt1.c0)) COLLATE NOCASE) ISNULL);
SELECT ALL vt0.c1, vt1.c0 FROM vt1, vt2 INNER JOIN vt0 ON CASE vt0.c0  WHEN (vt2.c0 IN (vt0.c0)) THEN CAST(-1.594878932E9 AS BLOB) ELSE ((vt0.c0) NOT NULL) END GROUP BY vt0.c1, vt1.c0;
SELECT vt1.c0 FROM vt1, vt2;
SELECT ALL vt1.c0 FROM vt1, vt2 WHERE ((~ (UPPER(vt1.c0)))) UNION ALL SELECT vt1.c0 FROM vt1, vt2 WHERE ((NOT ((~ (UPPER(vt1.c0)))))) UNION ALL SELECT vt1.c0 FROM vt1, vt2 WHERE ((((~ (UPPER(vt1.c0)))) ISNULL));
SELECT vt1.c0 FROM vt1, vt2;
SELECT DISTINCT vt2.c0 FROM vt2;
SELECT DISTINCT vt2.c0 FROM vt2 WHERE (TYPEOF(((vt2.c0) BETWEEN (vt2.c0) AND (vt2.c0)))) UNION SELECT DISTINCT vt2.c0 FROM vt2 WHERE ((NOT (TYPEOF(((vt2.c0) BETWEEN (vt2.c0) AND (vt2.c0)))))) UNION SELECT DISTINCT vt2.c0 FROM vt2 WHERE (((TYPEOF(((vt2.c0) BETWEEN (vt2.c0) AND (vt2.c0)))) ISNULL));
SELECT DISTINCT vt2.c0 FROM vt2;
SELECT ALL vt1.c0, vt0.c0, vt2.c0 FROM vt1, vt0, vt2 GROUP BY vt1.c0, vt0.c0, vt2.c0;
SELECT ALL vt1.c0, vt0.c0, vt2.c0 FROM vt1, vt0, vt2 WHERE (((CAST(vt1.c0 AS INTEGER)) BETWEEN (((vt0.c1)/(vt1.c0))) AND (((vt1.c0)>(vt0.c0))))) GROUP BY vt1.c0, vt0.c0, vt2.c0 UNION SELECT vt1.c0, vt0.c0, vt2.c0 FROM vt1, vt0, vt2 WHERE ((NOT (((CAST(vt1.c0 AS INTEGER)) BETWEEN (((vt0.c1)/(vt1.c0))) AND (((vt1.c0)>(vt0.c0))))))) GROUP BY vt1.c0, vt0.c0, vt2.c0 UNION SELECT vt1.c0, vt0.c0, vt2.c0 FROM vt1, vt0, vt2 WHERE (((((CAST(vt1.c0 AS INTEGER)) BETWEEN (((vt0.c1)/(vt1.c0))) AND (((vt1.c0)>(vt0.c0))))) ISNULL)) GROUP BY vt1.c0, vt0.c0, vt2.c0;
SELECT ALL vt1.c0, vt0.c0, vt2.c0 FROM vt1, vt0, vt2 GROUP BY vt1.c0, vt0.c0, vt2.c0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0, vt2 GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0, vt2 GROUP BY vt0.c1, vt0.c0 HAVING HEX(vt0.c0) UNION ALL SELECT vt0.c1, vt0.c0 FROM vt0, vt2 GROUP BY vt0.c1, vt0.c0 HAVING (NOT (HEX(vt0.c0))) UNION ALL SELECT vt0.c1, vt0.c0 FROM vt0, vt2 GROUP BY vt0.c1, vt0.c0 HAVING ((HEX(vt0.c0)) ISNULL);
SELECT ALL vt0.c1, vt0.c0 FROM vt0, vt2 GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0, vt2 GROUP BY vt0.c1, vt0.c0 HAVING HEX(vt0.c0) UNION ALL SELECT vt0.c1, vt0.c0 FROM vt0, vt2 GROUP BY vt0.c1, vt0.c0 HAVING (NOT (HEX(vt0.c0))) UNION ALL SELECT vt0.c1, vt0.c0 FROM vt0, vt2 GROUP BY vt0.c1, vt0.c0 HAVING ((HEX(vt0.c0)) ISNULL);
SELECT ALL vt0.c1, vt0.c0 FROM vt0, vt2 GROUP BY vt0.c1, vt0.c0;
SELECT vt1.c0 FROM vt2, vt1;
SELECT vt1.c0 FROM vt2, vt1 WHERE (((((((vt1.c0)OR(NULL)))OR(0.4151506327499743))) BETWEEN ((~ ('>zRA'))) AND (vt2.c0))) UNION ALL SELECT ALL vt1.c0 FROM vt2, vt1 WHERE ((NOT (((((((vt1.c0)OR(NULL)))OR(0.4151506327499743))) BETWEEN ((~ ('>zRA'))) AND (vt2.c0))))) UNION ALL SELECT ALL vt1.c0 FROM vt2, vt1 WHERE (((((((((vt1.c0)OR(NULL)))OR(0.4151506327499743))) BETWEEN ((~ ('>zRA'))) AND (vt2.c0))) ISNULL));
SELECT vt1.c0 FROM vt2, vt1;
SELECT DISTINCT * FROM vt1, vt0, vt2;
SELECT DISTINCT * FROM vt1, vt0, vt2 WHERE (NULL) UNION SELECT DISTINCT * FROM vt1, vt0, vt2 WHERE ((NOT (NULL))) UNION SELECT DISTINCT * FROM vt1, vt0, vt2 WHERE (((NULL) ISNULL));
SELECT DISTINCT * FROM vt1, vt0, vt2;
SELECT ALL vt0.c0 FROM vt0, vt1, vt2 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, vt1, vt2 WHERE (LOWER('-1594878932')) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0, vt1, vt2 WHERE ((NOT (LOWER('-1594878932')))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0, vt1, vt2 WHERE (((LOWER('-1594878932')) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, vt1, vt2 GROUP BY vt0.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING MAX(TOTAL(MAX(vt1.c0))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (MAX(TOTAL(MAX(vt1.c0))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((MAX(TOTAL(MAX(vt1.c0)))) ISNULL);
SELECT * FROM vt2;
SELECT ALL * FROM vt2 WHERE ((((((((((vt2.c0 IN (vt2.c0)))OR(vt2.c0 COLLATE BINARY)))OR(CAST(vt2.c0 AS TEXT))))AND(vt2.c0)))AND(CAST(vt2.c0 AS TEXT)))) UNION ALL SELECT * FROM vt2 WHERE ((NOT ((((((((((vt2.c0 IN (vt2.c0)))OR(vt2.c0 COLLATE BINARY)))OR(CAST(vt2.c0 AS TEXT))))AND(vt2.c0)))AND(CAST(vt2.c0 AS TEXT)))))) UNION ALL SELECT * FROM vt2 WHERE ((((((((((((vt2.c0 IN (vt2.c0)))OR(vt2.c0 COLLATE BINARY)))OR(CAST(vt2.c0 AS TEXT))))AND(vt2.c0)))AND(CAST(vt2.c0 AS TEXT)))) ISNULL));
SELECT * FROM vt2;
SELECT DISTINCT * FROM vt1, vt0;
SELECT DISTINCT * FROM vt1, vt0 WHERE ((vt0.c1 IN ()) COLLATE NOCASE) UNION SELECT DISTINCT * FROM vt1, vt0 WHERE ((NOT ((vt0.c1 IN ()) COLLATE NOCASE))) UNION SELECT DISTINCT * FROM vt1, vt0 WHERE ((((vt0.c1 IN ()) COLLATE NOCASE) ISNULL));
SELECT DISTINCT * FROM vt1, vt0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE (((((vt1.c0)<=(vt1.c0))) NOT NULL)) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT (((((vt1.c0)<=(vt1.c0))) NOT NULL)))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE (((((((vt1.c0)<=(vt1.c0))) NOT NULL)) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING SUM(vt1.c0) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (SUM(vt1.c0))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((SUM(vt1.c0)) ISNULL);
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING SUM(vt1.c0) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (SUM(vt1.c0))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((SUM(vt1.c0)) ISNULL);
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT * FROM vt1;
SELECT * FROM vt1 WHERE ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) IN ())) UNION ALL SELECT * FROM vt1 WHERE ((NOT ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) IN ())))) UNION ALL SELECT * FROM vt1 WHERE ((((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) IN ())) ISNULL));
SELECT * FROM vt1;
SELECT DISTINCT * FROM vt1, vt2, vt0;
SELECT DISTINCT * FROM vt1, vt2, vt0 WHERE (0.10114796177425811) UNION SELECT DISTINCT * FROM vt1, vt2, vt0 WHERE ((NOT (0.10114796177425811))) UNION SELECT DISTINCT * FROM vt1, vt2, vt0 WHERE (((0.10114796177425811) ISNULL));
SELECT DISTINCT * FROM vt1, vt2, vt0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 WHERE (((((((((((((CAST(0.24280689284291912 AS NUMERIC))AND(vt0.c1)))AND(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))))OR(NULL COLLATE RTRIM)))OR((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1))))))AND(((vt0.c1) NOTNULL))))AND(((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0))))) GROUP BY vt0.c1, vt0.c0 UNION SELECT ALL vt0.c1, vt0.c0 FROM vt0 WHERE ((NOT (((((((((((((CAST(0.24280689284291912 AS NUMERIC))AND(vt0.c1)))AND(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))))OR(NULL COLLATE RTRIM)))OR((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1))))))AND(((vt0.c1) NOTNULL))))AND(((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0))))))) GROUP BY vt0.c1, vt0.c0 UNION SELECT vt0.c1, vt0.c0 FROM vt0 WHERE (((((((((((((((CAST(0.24280689284291912 AS NUMERIC))AND(vt0.c1)))AND(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))))OR(NULL COLLATE RTRIM)))OR((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1))))))AND(((vt0.c1) NOTNULL))))AND(((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0))))) ISNULL)) GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING TOTAL(SUM(MAX(SUM(vt1.c0)))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (TOTAL(SUM(MAX(SUM(vt1.c0)))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((TOTAL(SUM(MAX(SUM(vt1.c0))))) ISNULL);
SELECT ALL * FROM vt1 CROSS JOIN vt0 ON ((((((((vt0.c0)AND(CAST(vt2.c0 AS TEXT))))OR(CASE WHEN vt1.c0 THEN vt1.c0 END)))OR(((vt0.c1) IS TRUE))))OR((vt0.c0 IN (vt1.c0)))) FULL OUTER JOIN vt2 ON (((vt2.c0)) NOT BETWEEN ((((vt0.c1)<(vt2.c0)))) AND (((vt2.c0 IN (vt1.c0)))));
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (((ABS(DISTINCT vt1.c0))>=((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))))) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (((ABS(DISTINCT vt1.c0))>=((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))))))) UNION SELECT DISTINCT * FROM vt1 WHERE (((((ABS(DISTINCT vt1.c0))>=((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))))) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT vt0.c1 FROM vt2, vt0, vt1 GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt2, vt0, vt1 WHERE (vt2.c0) GROUP BY vt0.c1 UNION SELECT ALL vt0.c1 FROM vt2, vt0, vt1 WHERE ((NOT (vt2.c0))) GROUP BY vt0.c1 UNION SELECT ALL vt0.c1 FROM vt2, vt0, vt1 WHERE (((vt2.c0) ISNULL)) GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt2, vt0, vt1 GROUP BY vt0.c1;
SELECT vt1.c0 FROM vt0 NOT INDEXED NATURAL JOIN vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt0 NATURAL JOIN vt1 GROUP BY vt1.c0 HAVING GROUP_CONCAT(TYPEOF(DISTINCT '<JEN~Gj')) UNION ALL SELECT vt1.c0 FROM vt0 NATURAL JOIN vt1 GROUP BY vt1.c0 HAVING (NOT (GROUP_CONCAT(TYPEOF(DISTINCT '<JEN~Gj')))) UNION ALL SELECT vt1.c0 FROM vt0 NATURAL JOIN vt1 GROUP BY vt1.c0 HAVING ((GROUP_CONCAT(TYPEOF(DISTINCT '<JEN~Gj'))) ISNULL);
SELECT vt1.c0 FROM vt0 NOT INDEXED NATURAL JOIN vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt0 NATURAL JOIN vt1 GROUP BY vt1.c0 HAVING GROUP_CONCAT(TYPEOF(DISTINCT '<JEN~Gj')) UNION ALL SELECT vt1.c0 FROM vt0 NATURAL JOIN vt1 GROUP BY vt1.c0 HAVING (NOT (GROUP_CONCAT(TYPEOF(DISTINCT '<JEN~Gj')))) UNION ALL SELECT vt1.c0 FROM vt0 NATURAL JOIN vt1 GROUP BY vt1.c0 HAVING ((GROUP_CONCAT(TYPEOF(DISTINCT '<JEN~Gj'))) ISNULL);
SELECT vt1.c0 FROM vt0 NOT INDEXED NATURAL JOIN vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0, vt0.c0 FROM vt1, vt0;
SELECT ALL vt1.c0, vt0.c0 FROM vt1, vt0 WHERE (NULL) UNION ALL SELECT vt1.c0, vt0.c0 FROM vt1, vt0 WHERE ((NOT (NULL))) UNION ALL SELECT ALL vt1.c0, vt0.c0 FROM vt1, vt0 WHERE (((NULL) ISNULL));
SELECT ALL vt1.c0, vt0.c0 FROM vt1, vt0;
SELECT DISTINCT vt2.c0, vt1.c0, vt0.c1 FROM vt0, vt1, vt2;
SELECT DISTINCT vt2.c0, vt1.c0, vt0.c1 FROM vt0, vt1, vt2 WHERE ((~ (vt0.c1))) UNION SELECT DISTINCT vt2.c0, vt1.c0, vt0.c1 FROM vt0, vt1, vt2 WHERE ((NOT ((~ (vt0.c1))))) UNION SELECT DISTINCT vt2.c0, vt1.c0, vt0.c1 FROM vt0, vt1, vt2 WHERE ((((~ (vt0.c1))) ISNULL));
SELECT DISTINCT vt2.c0, vt1.c0, vt0.c1 FROM vt0, vt1, vt2;
SELECT ALL vt1.c0, vt0.c1 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c1;
SELECT vt1.c0, vt0.c1 FROM vt0, vt1 WHERE (CASE WHEN ((vt1.c0)!=(vt0.c0)) THEN (((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) END) GROUP BY vt1.c0, vt0.c1 UNION SELECT ALL vt1.c0, vt0.c1 FROM vt0, vt1 WHERE ((NOT (CASE WHEN ((vt1.c0)<>(vt0.c0)) THEN (((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) END))) GROUP BY vt1.c0, vt0.c1 UNION SELECT vt1.c0, vt0.c1 FROM vt0, vt1 WHERE (((CASE WHEN ((vt1.c0)<>(vt0.c0)) THEN (((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) END) ISNULL)) GROUP BY vt1.c0, vt0.c1;
SELECT ALL vt1.c0, vt0.c1 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c1;
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING ((vt0.c0)*(0.035373294249337994)) COLLATE BINARY UNION ALL SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING (NOT (((vt0.c0)*(0.035373294249337994)) COLLATE BINARY)) UNION ALL SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING ((((vt0.c0)*(0.035373294249337994)) COLLATE BINARY) ISNULL);
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING ((vt0.c0)*(0.035373294249337994)) COLLATE BINARY UNION ALL SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING (NOT (((vt0.c0)*(0.035373294249337994)) COLLATE BINARY)) UNION ALL SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING ((((vt0.c0)*(0.035373294249337994)) COLLATE BINARY) ISNULL);
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT * FROM vt1, vt0, vt2;
SELECT * FROM vt1, vt0, vt2 WHERE (vt0.c1) UNION ALL SELECT * FROM vt1, vt0, vt2 WHERE ((NOT (vt0.c1))) UNION ALL SELECT ALL * FROM vt1, vt0, vt2 WHERE (((vt0.c1) ISNULL));
SELECT * FROM vt1, vt0, vt2;
SELECT DISTINCT vt2.c0 FROM vt2;
SELECT DISTINCT vt2.c0 FROM vt2 WHERE ((COALESCE(DISTINCT vt2.c0, vt2.c0) IN ())) UNION SELECT DISTINCT vt2.c0 FROM vt2 WHERE ((NOT ((COALESCE(DISTINCT vt2.c0, vt2.c0) IN ())))) UNION SELECT DISTINCT vt2.c0 FROM vt2 WHERE ((((COALESCE(DISTINCT vt2.c0, vt2.c0) IN ())) ISNULL));
SELECT DISTINCT vt2.c0 FROM vt2;
SELECT vt1.c0, vt2.c0 FROM vt1, vt2 GROUP BY vt1.c0, vt2.c0;
SELECT vt1.c0, vt2.c0 FROM vt1, vt2 WHERE (((vt1.c0)>=((vt2.c0 IN ())))) GROUP BY vt1.c0, vt2.c0 UNION SELECT vt1.c0, vt2.c0 FROM vt1, vt2 WHERE ((NOT (((vt1.c0)>=((vt2.c0 IN ())))))) GROUP BY vt1.c0, vt2.c0 UNION SELECT ALL vt1.c0, vt2.c0 FROM vt1, vt2 WHERE (((((vt1.c0)>=((vt2.c0 IN ())))) ISNULL)) GROUP BY vt1.c0, vt2.c0;
SELECT vt1.c0, vt2.c0 FROM vt1, vt2 GROUP BY vt1.c0, vt2.c0;
SELECT ALL vt1.c0, vt0.c0, vt0.c1, vt2.c0 FROM vt0 RIGHT OUTER JOIN vt1 ON ((CAST(vt1.c0 AS INTEGER)) ISNULL) FULL OUTER JOIN vt2 ON (((vt2.c0) BETWEEN (vt2.c0) AND (vt2.c0)) IN (vt2.c0)) GROUP BY vt1.c0, vt0.c0, vt0.c1, vt2.c0;
SELECT vt1.c0, vt0.c0, vt0.c1, vt2.c0 FROM vt0 RIGHT OUTER JOIN vt1 ON ((CAST(vt1.c0 AS INTEGER)) ISNULL) FULL OUTER JOIN vt2 ON (((vt2.c0) BETWEEN (vt2.c0) AND (vt2.c0)) IN (vt2.c0)) GROUP BY vt1.c0, vt0.c0, vt0.c1, vt2.c0 HAVING (~ (COUNT(*))) UNION ALL SELECT vt1.c0, vt0.c0, vt0.c1, vt2.c0 FROM vt0 RIGHT OUTER JOIN vt1 ON ((CAST(vt1.c0 AS INTEGER)) ISNULL) FULL OUTER JOIN vt2 ON (((vt2.c0) BETWEEN (vt2.c0) AND (vt2.c0)) IN (vt2.c0)) GROUP BY vt1.c0, vt0.c0, vt0.c1, vt2.c0 HAVING (NOT ((~ (COUNT(*))))) UNION ALL SELECT vt1.c0, vt0.c0, vt0.c1, vt2.c0 FROM vt0 RIGHT OUTER JOIN vt1 ON ((CAST(vt1.c0 AS INTEGER)) ISNULL) FULL OUTER JOIN vt2 ON (((vt2.c0) BETWEEN (vt2.c0) AND (vt2.c0)) IN (vt2.c0)) GROUP BY vt1.c0, vt0.c0, vt0.c1, vt2.c0 HAVING (((~ (COUNT(*)))) ISNULL);
SELECT ALL vt1.c0, vt0.c0, vt0.c1, vt2.c0 FROM vt0 RIGHT OUTER JOIN vt1 ON ((CAST(vt1.c0 AS INTEGER)) ISNULL) FULL OUTER JOIN vt2 ON (((vt2.c0) BETWEEN (vt2.c0) AND (vt2.c0)) IN (vt2.c0)) GROUP BY vt1.c0, vt0.c0, vt0.c1, vt2.c0;
SELECT vt1.c0, vt0.c0, vt0.c1, vt2.c0 FROM vt0 RIGHT OUTER JOIN vt1 ON ((CAST(vt1.c0 AS INTEGER)) ISNULL) FULL OUTER JOIN vt2 ON (((vt2.c0) BETWEEN (vt2.c0) AND (vt2.c0)) IN (vt2.c0)) GROUP BY vt1.c0, vt0.c0, vt0.c1, vt2.c0 HAVING (~ (COUNT(*))) UNION ALL SELECT vt1.c0, vt0.c0, vt0.c1, vt2.c0 FROM vt0 RIGHT OUTER JOIN vt1 ON ((CAST(vt1.c0 AS INTEGER)) ISNULL) FULL OUTER JOIN vt2 ON (((vt2.c0) BETWEEN (vt2.c0) AND (vt2.c0)) IN (vt2.c0)) GROUP BY vt1.c0, vt0.c0, vt0.c1, vt2.c0 HAVING (NOT ((~ (COUNT(*))))) UNION ALL SELECT vt1.c0, vt0.c0, vt0.c1, vt2.c0 FROM vt0 RIGHT OUTER JOIN vt1 ON ((CAST(vt1.c0 AS INTEGER)) ISNULL) FULL OUTER JOIN vt2 ON (((vt2.c0) BETWEEN (vt2.c0) AND (vt2.c0)) IN (vt2.c0)) GROUP BY vt1.c0, vt0.c0, vt0.c1, vt2.c0 HAVING (((~ (COUNT(*)))) ISNULL);
SELECT ALL vt1.c0, vt0.c0, vt0.c1, vt2.c0 FROM vt0 RIGHT OUTER JOIN vt1 ON ((CAST(vt1.c0 AS INTEGER)) ISNULL) FULL OUTER JOIN vt2 ON (((vt2.c0) BETWEEN (vt2.c0) AND (vt2.c0)) IN (vt2.c0)) GROUP BY vt1.c0, vt0.c0, vt0.c1, vt2.c0;
SELECT vt1.c0 FROM vt2 FULL OUTER JOIN vt1 ON CASE (((vt2.c0)) NOT BETWEEN ((vt2.c0)) AND ((vt2.c0)))  WHEN ((((((((vt2.c0)AND(vt2.c0)))AND(vt2.c0)))OR(vt1.c0)))AND(vt2.c0)) THEN vt2.c0 WHEN LIKELIHOOD(vt2.c0, 0.3245085131807046) THEN ((('', vt2.c0, vt2.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt2.c0)) AND ((vt2.c0, vt2.c0, vt2.c0))) WHEN (vt1.c0 IN ()) THEN CASE vt2.c0  WHEN vt2.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt2.c0 WHEN vt1.c0 THEN vt1.c0 ELSE x'' END END;
SELECT ALL vt1.c0 FROM vt2 FULL OUTER JOIN vt1 ON CASE (((vt2.c0)) NOT BETWEEN ((vt2.c0)) AND ((vt2.c0)))  WHEN ((((((((vt2.c0)AND(vt2.c0)))AND(vt2.c0)))OR(vt1.c0)))AND(vt2.c0)) THEN vt2.c0 WHEN LIKELIHOOD(vt2.c0, 0.3245085131807046) THEN ((('', vt2.c0, vt2.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt2.c0)) AND ((vt2.c0, vt2.c0, vt2.c0))) WHEN (vt1.c0 IN ()) THEN CASE vt2.c0  WHEN vt2.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt2.c0 WHEN vt1.c0 THEN vt1.c0 ELSE x'' END END WHERE (CASE (((vt2.c0, vt1.c0, vt1.c0))<>((vt2.c0, NULL, vt2.c0)))  WHEN CAST(vt1.c0 AS INTEGER) THEN 8.07156428E8 END) UNION ALL SELECT vt1.c0 FROM vt2 FULL OUTER JOIN vt1 ON CASE (((vt2.c0)) NOT BETWEEN ((vt2.c0)) AND ((vt2.c0)))  WHEN ((((((((vt2.c0)AND(vt2.c0)))AND(vt2.c0)))OR(vt1.c0)))AND(vt2.c0)) THEN vt2.c0 WHEN LIKELIHOOD(vt2.c0, 0.3245085131807046) THEN ((('', vt2.c0, vt2.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt2.c0)) AND ((vt2.c0, vt2.c0, vt2.c0))) WHEN (vt1.c0 IN ()) THEN CASE vt2.c0  WHEN vt2.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt2.c0 WHEN vt1.c0 THEN vt1.c0 ELSE x'' END END WHERE ((NOT (CASE (((vt2.c0, vt1.c0, vt1.c0))!=((vt2.c0, NULL, vt2.c0)))  WHEN CAST(vt1.c0 AS INTEGER) THEN 8.07156428E8 END))) UNION ALL SELECT vt1.c0 FROM vt2 FULL OUTER JOIN vt1 ON CASE (((vt2.c0)) NOT BETWEEN ((vt2.c0)) AND ((vt2.c0)))  WHEN ((((((((vt2.c0)AND(vt2.c0)))AND(vt2.c0)))OR(vt1.c0)))AND(vt2.c0)) THEN vt2.c0 WHEN LIKELIHOOD(vt2.c0, 0.3245085131807046) THEN ((('', vt2.c0, vt2.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt2.c0)) AND ((vt2.c0, vt2.c0, vt2.c0))) WHEN (vt1.c0 IN ()) THEN CASE vt2.c0  WHEN vt2.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt2.c0 WHEN vt1.c0 THEN vt1.c0 ELSE x'' END END WHERE (((CASE (((vt2.c0, vt1.c0, vt1.c0))!=((vt2.c0, NULL, vt2.c0)))  WHEN CAST(vt1.c0 AS INTEGER) THEN 8.07156428E8 END) ISNULL));
SELECT vt1.c0 FROM vt2 FULL OUTER JOIN vt1 ON CASE (((vt2.c0)) NOT BETWEEN ((vt2.c0)) AND ((vt2.c0)))  WHEN ((((((((vt2.c0)AND(vt2.c0)))AND(vt2.c0)))OR(vt1.c0)))AND(vt2.c0)) THEN vt2.c0 WHEN LIKELIHOOD(vt2.c0, 0.3245085131807046) THEN ((('', vt2.c0, vt2.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt2.c0)) AND ((vt2.c0, vt2.c0, vt2.c0))) WHEN (vt1.c0 IN ()) THEN CASE vt2.c0  WHEN vt2.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt2.c0 WHEN vt1.c0 THEN vt1.c0 ELSE x'' END END;
SELECT DISTINCT * FROM vt2 INNER JOIN vt0 ON ((CASE vt0.c1  WHEN vt1.c0 THEN vt2.c0 ELSE vt0.c0 END)|(((vt2.c0) ISNULL))) INNER JOIN vt1 ON ((325854333 COLLATE BINARY)LIKE(((vt0.c0) BETWEEN (vt0.c1) AND (vt2.c0))));
SELECT DISTINCT * FROM vt2 INNER JOIN vt0 ON ((CASE vt0.c1  WHEN vt1.c0 THEN vt2.c0 ELSE vt0.c0 END)|(((vt2.c0) ISNULL))) INNER JOIN vt1 ON ((325854333 COLLATE BINARY)LIKE(((vt0.c0) BETWEEN (vt0.c1) AND (vt2.c0)))) WHERE ((((vt0.c0)) BETWEEN ((CASE vt0.c1  WHEN vt1.c0 THEN vt2.c0 ELSE vt0.c0 END)) AND ((((vt0.c1) BETWEEN (vt2.c0) AND (vt0.c0)))))) UNION SELECT DISTINCT * FROM vt2 INNER JOIN vt0 ON ((CASE vt0.c1  WHEN vt1.c0 THEN vt2.c0 ELSE vt0.c0 END)|(((vt2.c0) ISNULL))) INNER JOIN vt1 ON ((325854333 COLLATE BINARY)LIKE(((vt0.c0) BETWEEN (vt0.c1) AND (vt2.c0)))) WHERE ((NOT ((((vt0.c0)) BETWEEN ((CASE vt0.c1  WHEN vt1.c0 THEN vt2.c0 ELSE vt0.c0 END)) AND ((((vt0.c1) BETWEEN (vt2.c0) AND (vt0.c0)))))))) UNION SELECT DISTINCT * FROM vt2 INNER JOIN vt0 ON ((CASE vt0.c1  WHEN vt1.c0 THEN vt2.c0 ELSE vt0.c0 END)|(((vt2.c0) ISNULL))) INNER JOIN vt1 ON ((325854333 COLLATE BINARY)LIKE(((vt0.c0) BETWEEN (vt0.c1) AND (vt2.c0)))) WHERE ((((((vt0.c0)) BETWEEN ((CASE vt0.c1  WHEN vt1.c0 THEN vt2.c0 ELSE vt0.c0 END)) AND ((((vt0.c1) BETWEEN (vt2.c0) AND (vt0.c0)))))) ISNULL));
SELECT DISTINCT * FROM vt2 INNER JOIN vt0 ON ((CASE vt0.c1  WHEN vt1.c0 THEN vt2.c0 ELSE vt0.c0 END)|(((vt2.c0) ISNULL))) INNER JOIN vt1 ON ((325854333 COLLATE BINARY)LIKE(((vt0.c0) BETWEEN (vt0.c1) AND (vt2.c0))));
SELECT ALL vt0.c1, vt1.c0 FROM vt2 FULL OUTER JOIN vt0 ON ((NULL)!=(0.843997623220114)) INNER JOIN vt1 ON vt2.c0 GROUP BY vt0.c1, vt1.c0;
SELECT vt0.c1, vt1.c0 FROM vt2 FULL OUTER JOIN vt0 ON ((NULL)!=(0.843997623220114)) INNER JOIN vt1 ON vt2.c0 WHERE (((vt0.c0)AND(((vt0.c0) NOT BETWEEN (vt1.c0) AND ('-701967800'))))) GROUP BY vt0.c1, vt1.c0 UNION SELECT ALL vt0.c1, vt1.c0 FROM vt2 FULL OUTER JOIN vt0 ON ((NULL)!=(0.843997623220114)) INNER JOIN vt1 ON vt2.c0 WHERE ((NOT (((vt0.c0)AND(((vt0.c0) NOT BETWEEN (vt1.c0) AND ('-701967800'))))))) GROUP BY vt0.c1, vt1.c0 UNION SELECT vt0.c1, vt1.c0 FROM vt2 FULL OUTER JOIN vt0 ON ((NULL)!=(0.843997623220114)) INNER JOIN vt1 ON vt2.c0 WHERE (((((vt0.c0)AND(((vt0.c0) NOT BETWEEN (vt1.c0) AND ('-701967800'))))) ISNULL)) GROUP BY vt0.c1, vt1.c0;
SELECT ALL vt0.c1, vt1.c0 FROM vt2 FULL OUTER JOIN vt0 ON ((NULL)!=(0.843997623220114)) INNER JOIN vt1 ON vt2.c0 GROUP BY vt0.c1, vt1.c0;
SELECT ALL vt0.c1 FROM vt2, vt0, vt1 GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt2, vt0, vt1 GROUP BY vt0.c1 HAVING (((- (MAX(vt1.c0))))LIKE(COUNT(*))) UNION ALL SELECT ALL vt0.c1 FROM vt2, vt0, vt1 GROUP BY vt0.c1 HAVING (NOT ((((- (MAX(vt1.c0))))LIKE(COUNT(*))))) UNION ALL SELECT ALL vt0.c1 FROM vt2, vt0, vt1 GROUP BY vt0.c1 HAVING (((((- (MAX(vt1.c0))))LIKE(COUNT(*)))) ISNULL);
SELECT ALL vt0.c1 FROM vt2, vt0, vt1 GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt2, vt0, vt1 GROUP BY vt0.c1 HAVING (((- (MAX(vt1.c0))))LIKE(COUNT(*))) UNION ALL SELECT ALL vt0.c1 FROM vt2, vt0, vt1 GROUP BY vt0.c1 HAVING (NOT ((((- (MAX(vt1.c0))))LIKE(COUNT(*))))) UNION ALL SELECT ALL vt0.c1 FROM vt2, vt0, vt1 GROUP BY vt0.c1 HAVING (((((- (MAX(vt1.c0))))LIKE(COUNT(*)))) ISNULL);
SELECT ALL vt0.c1 FROM vt2, vt0, vt1 GROUP BY vt0.c1;
SELECT ALL vt0.c0 FROM vt2, vt0;
SELECT ALL vt0.c0 FROM vt2, vt0 WHERE ((((vt0.c1 IN (vt2.c0))) IS FALSE)) UNION ALL SELECT vt0.c0 FROM vt2, vt0 WHERE ((NOT ((((vt0.c1 IN (vt2.c0))) IS FALSE)))) UNION ALL SELECT vt0.c0 FROM vt2, vt0 WHERE ((((((vt0.c1 IN (vt2.c0))) IS FALSE)) ISNULL));
SELECT ALL vt0.c0 FROM vt2, vt0;
SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0 WHERE (((CASE vt0.c1  WHEN '-924878851' THEN vt0.c0 END) IS FALSE)) UNION SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0 WHERE ((NOT (((CASE vt0.c1  WHEN '-924878851' THEN vt0.c0 END) IS FALSE)))) UNION SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0 WHERE (((((CASE vt0.c1  WHEN '-924878851' THEN vt0.c0 END) IS FALSE)) ISNULL));
SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0;
SELECT ALL vt2.c0, vt0.c0 FROM vt2 RIGHT OUTER JOIN vt0 ON NULL GROUP BY vt2.c0, vt0.c0;
SELECT vt2.c0, vt0.c0 FROM vt2 RIGHT OUTER JOIN vt0 ON NULL WHERE ((((+ (vt0.c1)))IS((vt0.c1 IN ())))) GROUP BY vt2.c0, vt0.c0 UNION SELECT vt2.c0, vt0.c0 FROM vt2 RIGHT OUTER JOIN vt0 ON NULL WHERE ((NOT ((((+ (vt0.c1)))IS((vt0.c1 IN ())))))) GROUP BY vt2.c0, vt0.c0 UNION SELECT ALL vt2.c0, vt0.c0 FROM vt2 RIGHT OUTER JOIN vt0 ON NULL WHERE ((((((+ (vt0.c1)))IS((vt0.c1 IN ())))) ISNULL)) GROUP BY vt2.c0, vt0.c0;
SELECT ALL vt2.c0, vt0.c0 FROM vt2 RIGHT OUTER JOIN vt0 ON NULL GROUP BY vt2.c0, vt0.c0;
SELECT vt1.c0 FROM vt1, vt2 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1, vt2 GROUP BY vt1.c0 HAVING ((CAST(vt1.c0 AS REAL)) NOT NULL) UNION ALL SELECT ALL vt1.c0 FROM vt1, vt2 GROUP BY vt1.c0 HAVING (NOT (((CAST(vt1.c0 AS REAL)) NOT NULL))) UNION ALL SELECT vt1.c0 FROM vt1, vt2 GROUP BY vt1.c0 HAVING ((((CAST(vt1.c0 AS REAL)) NOT NULL)) ISNULL);
SELECT vt1.c0 FROM vt1, vt2 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1, vt2 GROUP BY vt1.c0 HAVING ((CAST(vt1.c0 AS REAL)) NOT NULL) UNION ALL SELECT ALL vt1.c0 FROM vt1, vt2 GROUP BY vt1.c0 HAVING (NOT (((CAST(vt1.c0 AS REAL)) NOT NULL))) UNION ALL SELECT vt1.c0 FROM vt1, vt2 GROUP BY vt1.c0 HAVING ((((CAST(vt1.c0 AS REAL)) NOT NULL)) ISNULL);
SELECT vt1.c0 FROM vt1, vt2 GROUP BY vt1.c0;
SELECT ALL * FROM vt2, vt1;
SELECT ALL * FROM vt2, vt1 WHERE (((((vt1.c0) NOTNULL)) NOT BETWEEN (((vt1.c0)IS(vt2.c0))) AND (LOWER(vt1.c0)))) UNION ALL SELECT ALL * FROM vt2, vt1 WHERE ((NOT (((((vt1.c0) NOTNULL)) NOT BETWEEN (((vt1.c0)IS(vt2.c0))) AND (LOWER(vt1.c0)))))) UNION ALL SELECT * FROM vt2, vt1 WHERE (((((((vt1.c0) NOTNULL)) NOT BETWEEN (((vt1.c0)IS(vt2.c0))) AND (LOWER(vt1.c0)))) ISNULL));
SELECT ALL * FROM vt2, vt1;
SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0;
SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0 WHERE ((((NOT (vt0.c0)))>((~ (vt0.c1))))) UNION SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0 WHERE ((NOT ((((NOT (vt0.c0)))>((~ (vt0.c1))))))) UNION SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0 WHERE ((((((NOT (vt0.c0)))>((~ (vt0.c1))))) ISNULL));
SELECT DISTINCT vt0.c0, vt0.c1 FROM vt0;
SELECT ALL vt0.c0, vt2.c0 FROM vt1, vt2, vt0 GROUP BY vt0.c0, vt2.c0;
SELECT ALL vt0.c0, vt2.c0 FROM vt1, vt2, vt0 WHERE ((((((vt0.c0, vt1.c0, vt2.c0))==((vt0.c0, vt0.c1, NULL)))) BETWEEN (x'') AND (LTRIM(vt0.c1, vt2.c0)))) GROUP BY vt0.c0, vt2.c0 UNION SELECT vt0.c0, vt2.c0 FROM vt1, vt2, vt0 WHERE ((NOT ((((((vt0.c0, vt1.c0, vt2.c0))==((vt0.c0, vt0.c1, NULL)))) BETWEEN (x'') AND (LTRIM(vt0.c1, vt2.c0)))))) GROUP BY vt0.c0, vt2.c0 UNION SELECT vt0.c0, vt2.c0 FROM vt1, vt2, vt0 WHERE ((((((((vt0.c0, vt1.c0, vt2.c0))=((vt0.c0, vt0.c1, NULL)))) BETWEEN (x'') AND (LTRIM(vt0.c1, vt2.c0)))) ISNULL)) GROUP BY vt0.c0, vt2.c0;
SELECT ALL vt0.c0, vt2.c0 FROM vt1, vt2, vt0 GROUP BY vt0.c0, vt2.c0;
SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING GROUP_CONCAT(((SUM(GROUP_CONCAT(MAX(vt2.c0)))) IS TRUE)) UNION ALL SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING (NOT (GROUP_CONCAT(((SUM(GROUP_CONCAT(MAX(vt2.c0)))) IS TRUE)))) UNION ALL SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING ((GROUP_CONCAT(((SUM(GROUP_CONCAT(MAX(vt2.c0)))) IS TRUE))) ISNULL);
SELECT ALL * FROM vt2;
SELECT * FROM vt2 WHERE (vt2.c0) UNION ALL SELECT * FROM vt2 WHERE ((NOT (vt2.c0))) UNION ALL SELECT ALL * FROM vt2 WHERE (((vt2.c0) ISNULL));
SELECT ALL * FROM vt2;
SELECT DISTINCT vt2.c0, vt0.c1, vt0.c0 FROM vt2 RIGHT OUTER JOIN vt0 ON (- (((((vt2.c0)AND(vt2.c0)))OR(vt0.c1))));
SELECT DISTINCT vt2.c0, vt0.c1, vt0.c0 FROM vt2 RIGHT OUTER JOIN vt0 ON (- (((((vt2.c0)AND(vt2.c0)))OR(vt0.c1)))) WHERE (((((x'')|('-892605647'))) NOT BETWEEN (CASE vt0.c1  WHEN vt0.c0 THEN vt2.c0 WHEN vt2.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt2.c0 END) AND (((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1))))) UNION SELECT DISTINCT vt2.c0, vt0.c1, vt0.c0 FROM vt2 RIGHT OUTER JOIN vt0 ON (- (((((vt2.c0)AND(vt2.c0)))OR(vt0.c1)))) WHERE ((NOT (((((x'')|('-892605647'))) NOT BETWEEN (CASE vt0.c1  WHEN vt0.c0 THEN vt2.c0 WHEN vt2.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt2.c0 END) AND (((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1))))))) UNION SELECT DISTINCT vt2.c0, vt0.c1, vt0.c0 FROM vt2 RIGHT OUTER JOIN vt0 ON (- (((((vt2.c0)AND(vt2.c0)))OR(vt0.c1)))) WHERE (((((((x'')|('-892605647'))) NOT BETWEEN (CASE vt0.c1  WHEN vt0.c0 THEN vt2.c0 WHEN vt2.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt2.c0 END) AND (((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1))))) ISNULL));
SELECT DISTINCT vt2.c0, vt0.c1, vt0.c0 FROM vt2 RIGHT OUTER JOIN vt0 ON (- (((((vt2.c0)AND(vt2.c0)))OR(vt0.c1))));
SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT vt2.c0 FROM vt2 WHERE (CASE ((((vt2.c0)OR(vt2.c0)))AND(vt2.c0))  WHEN ((vt2.c0)AND(vt2.c0)) THEN (vt2.c0 IN ()) ELSE CASE WHEN vt2.c0 THEN vt2.c0 WHEN vt2.c0 THEN vt2.c0 WHEN vt2.c0 THEN vt2.c0 END END) GROUP BY vt2.c0 UNION SELECT vt2.c0 FROM vt2 WHERE ((NOT (CASE ((((vt2.c0)OR(vt2.c0)))AND(vt2.c0))  WHEN ((vt2.c0)AND(vt2.c0)) THEN (vt2.c0 IN ()) ELSE CASE WHEN vt2.c0 THEN vt2.c0 WHEN vt2.c0 THEN vt2.c0 WHEN vt2.c0 THEN vt2.c0 END END))) GROUP BY vt2.c0 UNION SELECT ALL vt2.c0 FROM vt2 WHERE (((CASE ((((vt2.c0)OR(vt2.c0)))AND(vt2.c0))  WHEN ((vt2.c0)AND(vt2.c0)) THEN (vt2.c0 IN ()) ELSE CASE WHEN vt2.c0 THEN vt2.c0 WHEN vt2.c0 THEN vt2.c0 WHEN vt2.c0 THEN vt2.c0 END END) ISNULL)) GROUP BY vt2.c0;
SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING ((((((((GROUP_CONCAT('-1495028330'))AND(COUNT(vt0.c0))))AND(((vt0.c0)GLOB(vt0.c0)))))AND(TOTAL(vt0.c1))))AND(x'')) UNION ALL SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING (NOT (((((((((GROUP_CONCAT('-1495028330'))AND(COUNT(vt0.c0))))AND(((vt0.c0)GLOB(vt0.c0)))))AND(TOTAL(vt0.c1))))AND(x'')))) UNION ALL SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING ((((((((((GROUP_CONCAT('-1495028330'))AND(COUNT(vt0.c0))))AND(((vt0.c0)GLOB(vt0.c0)))))AND(TOTAL(vt0.c1))))AND(x''))) ISNULL);
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING ((((((((GROUP_CONCAT('-1495028330'))AND(COUNT(vt0.c0))))AND(((vt0.c0)GLOB(vt0.c0)))))AND(TOTAL(vt0.c1))))AND(x'')) UNION ALL SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING (NOT (((((((((GROUP_CONCAT('-1495028330'))AND(COUNT(vt0.c0))))AND(((vt0.c0)GLOB(vt0.c0)))))AND(TOTAL(vt0.c1))))AND(x'')))) UNION ALL SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING ((((((((((GROUP_CONCAT('-1495028330'))AND(COUNT(vt0.c0))))AND(((vt0.c0)GLOB(vt0.c0)))))AND(TOTAL(vt0.c1))))AND(x''))) ISNULL);
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT MIN((NOT ((NOT (-2.04633372E9))))) FROM vt2 ORDER BY (((~ (vt2.c0)))>(0Xffffffffd6b0830f)), (((((vt2.c0))!=((vt2.c0))))>>(CAST(vt2.c0 AS BLOB))) ASC  NULLS LAST;
SELECT ALL * FROM vt0 FULL OUTER JOIN vt1 ON (((vt1.c0, vt0.c0, vt1.c0)) NOT BETWEEN ((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt1.c0)), vt0.c0 COLLATE NOCASE, ((((((((vt0.c0)OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(vt0.c0)))) AND (((+ (vt1.c0)), ((vt0.c1) IS TRUE), (+ (vt1.c0)))));
SELECT ALL * FROM vt0 FULL OUTER JOIN vt1 ON (((vt1.c0, vt0.c0, vt1.c0)) NOT BETWEEN ((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt1.c0)), vt0.c0 COLLATE NOCASE, ((((((((vt0.c0)OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(vt0.c0)))) AND (((+ (vt1.c0)), ((vt0.c1) IS TRUE), (+ (vt1.c0))))) WHERE ((((~ (vt1.c0))) NOT BETWEEN (CAST(vt0.c0 AS NUMERIC)) AND (((((vt1.c0)OR(vt1.c0)))OR(vt0.c1))))) UNION ALL SELECT * FROM vt0 FULL OUTER JOIN vt1 ON (((vt1.c0, vt0.c0, vt1.c0)) NOT BETWEEN ((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt1.c0)), vt0.c0 COLLATE NOCASE, ((((((((vt0.c0)OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(vt0.c0)))) AND (((+ (vt1.c0)), ((vt0.c1) IS TRUE), (+ (vt1.c0))))) WHERE ((NOT ((((~ (vt1.c0))) NOT BETWEEN (CAST(vt0.c0 AS NUMERIC)) AND (((((vt1.c0)OR(vt1.c0)))OR(vt0.c1))))))) UNION ALL SELECT ALL * FROM vt0 FULL OUTER JOIN vt1 ON (((vt1.c0, vt0.c0, vt1.c0)) NOT BETWEEN ((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt1.c0)), vt0.c0 COLLATE NOCASE, ((((((((vt0.c0)OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(vt0.c0)))) AND (((+ (vt1.c0)), ((vt0.c1) IS TRUE), (+ (vt1.c0))))) WHERE ((((((~ (vt1.c0))) NOT BETWEEN (CAST(vt0.c0 AS NUMERIC)) AND (((((vt1.c0)OR(vt1.c0)))OR(vt0.c1))))) ISNULL));
SELECT ALL * FROM vt0 FULL OUTER JOIN vt1 ON (((vt1.c0, vt0.c0, vt1.c0)) NOT BETWEEN ((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt1.c0)), vt0.c0 COLLATE NOCASE, ((((((((vt0.c0)OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(vt0.c0)))) AND (((+ (vt1.c0)), ((vt0.c1) IS TRUE), (+ (vt1.c0)))));
SELECT DISTINCT vt1.c0, vt2.c0 FROM vt2, vt1;
SELECT DISTINCT vt1.c0, vt2.c0 FROM vt2, vt1 WHERE ((((vt2.c0 IN ())) BETWEEN (CAST(vt1.c0 AS REAL)) AND ('n&X櫥m~*'))) UNION SELECT DISTINCT vt1.c0, vt2.c0 FROM vt2, vt1 WHERE ((NOT ((((vt2.c0 IN ())) BETWEEN (CAST(vt1.c0 AS REAL)) AND ('n&X櫥m~*'))))) UNION SELECT DISTINCT vt1.c0, vt2.c0 FROM vt2, vt1 WHERE ((((((vt2.c0 IN ())) BETWEEN (CAST(vt1.c0 AS REAL)) AND ('n&X櫥m~*'))) ISNULL));
SELECT DISTINCT vt1.c0, vt2.c0 FROM vt2, vt1;
SELECT ALL vt1.c0 FROM vt2, vt0, vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt2, vt0, vt1 WHERE ((vt2.c0 COLLATE BINARY IN ((((vt0.c0))<>((vt1.c0)))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt2, vt0, vt1 WHERE ((NOT ((vt2.c0 COLLATE BINARY IN ((((vt0.c0))!=((vt1.c0)))))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt2, vt0, vt1 WHERE ((((vt2.c0 COLLATE BINARY IN ((((vt0.c0))<>((vt1.c0)))))) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt2, vt0, vt1 GROUP BY vt1.c0;
SELECT vt2.c0, vt0.c0, vt1.c0 FROM vt1, vt2, vt0 GROUP BY vt2.c0, vt0.c0, vt1.c0;
SELECT vt2.c0, vt0.c0, vt1.c0 FROM vt1, vt2, vt0 GROUP BY vt2.c0, vt0.c0, vt1.c0 HAVING TOTAL(CAST(vt0.c0 AS TEXT)) UNION ALL SELECT ALL vt2.c0, vt0.c0, vt1.c0 FROM vt1, vt2, vt0 GROUP BY vt2.c0, vt0.c0, vt1.c0 HAVING (NOT (TOTAL(CAST(vt0.c0 AS TEXT)))) UNION ALL SELECT ALL vt2.c0, vt0.c0, vt1.c0 FROM vt1, vt2, vt0 GROUP BY vt2.c0, vt0.c0, vt1.c0 HAVING ((TOTAL(CAST(vt0.c0 AS TEXT))) ISNULL);
SELECT vt2.c0, vt0.c0, vt1.c0 FROM vt1, vt2, vt0 GROUP BY vt2.c0, vt0.c0, vt1.c0;
SELECT vt2.c0, vt0.c0, vt1.c0 FROM vt1, vt2, vt0 GROUP BY vt2.c0, vt0.c0, vt1.c0 HAVING TOTAL(CAST(vt0.c0 AS TEXT)) UNION ALL SELECT ALL vt2.c0, vt0.c0, vt1.c0 FROM vt1, vt2, vt0 GROUP BY vt2.c0, vt0.c0, vt1.c0 HAVING (NOT (TOTAL(CAST(vt0.c0 AS TEXT)))) UNION ALL SELECT ALL vt2.c0, vt0.c0, vt1.c0 FROM vt1, vt2, vt0 GROUP BY vt2.c0, vt0.c0, vt1.c0 HAVING ((TOTAL(CAST(vt0.c0 AS TEXT))) ISNULL);
SELECT vt2.c0, vt0.c0, vt1.c0 FROM vt1, vt2, vt0 GROUP BY vt2.c0, vt0.c0, vt1.c0;
SELECT ALL vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE ((+ (vt0.c1 COLLATE BINARY))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT ((+ (vt0.c1 COLLATE BINARY))))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((((+ (vt0.c1 COLLATE BINARY))) ISNULL));
SELECT ALL vt0.c0 FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((((((((vt0.c1)OR(vt0.c1)))AND('')))AND(((vt0.c0)%(vt0.c0)))))AND(vt0.c0))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((((((((vt0.c1)OR(vt0.c1)))AND('')))AND(((vt0.c0)%(vt0.c0)))))AND(vt0.c0))))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((((((((vt0.c1)OR(vt0.c1)))AND('')))AND(((vt0.c0)%(vt0.c0)))))AND(vt0.c0))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT vt1.c0, vt0.c0 FROM vt2, vt0, vt1 GROUP BY vt1.c0, vt0.c0;
SELECT vt1.c0, vt0.c0 FROM vt2, vt0, vt1 WHERE ((((vt2.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((((0.028687772576335147) BETWEEN (vt0.c1) AND (vt0.c0)), vt0.c1 COLLATE RTRIM, 0.886809549774042)) AND (((('453067763')>=(vt2.c0)), NULL COLLATE BINARY, (NOT (vt2.c0)))))) GROUP BY vt1.c0, vt0.c0 UNION SELECT vt1.c0, vt0.c0 FROM vt2, vt0, vt1 WHERE ((NOT ((((vt2.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((((0.028687772576335147) BETWEEN (vt0.c1) AND (vt0.c0)), vt0.c1 COLLATE RTRIM, 0.886809549774042)) AND (((('453067763')>=(vt2.c0)), NULL COLLATE BINARY, (NOT (vt2.c0)))))))) GROUP BY vt1.c0, vt0.c0 UNION SELECT vt1.c0, vt0.c0 FROM vt2, vt0, vt1 WHERE ((((((vt2.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((((0.028687772576335147) BETWEEN (vt0.c1) AND (vt0.c0)), vt0.c1 COLLATE RTRIM, 0.886809549774042)) AND (((('453067763')>=(vt2.c0)), NULL COLLATE BINARY, (NOT (vt2.c0)))))) ISNULL)) GROUP BY vt1.c0, vt0.c0;
SELECT vt1.c0, vt0.c0 FROM vt2, vt0, vt1 GROUP BY vt1.c0, vt0.c0;
SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING MAX(vt2.c0 COLLATE RTRIM) UNION ALL SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING (NOT (MAX(vt2.c0 COLLATE RTRIM))) UNION ALL SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING ((MAX(vt2.c0 COLLATE RTRIM)) ISNULL);
SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING MAX(vt2.c0 COLLATE RTRIM) UNION ALL SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING (NOT (MAX(vt2.c0 COLLATE RTRIM))) UNION ALL SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING ((MAX(vt2.c0 COLLATE RTRIM)) ISNULL);
SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT vt0.c1, vt0.c0, vt1.c0 FROM vt1 RIGHT OUTER JOIN vt0 ON CAST(vt1.c0 AS TEXT) COLLATE NOCASE;
SELECT ALL vt0.c1, vt0.c0, vt1.c0 FROM vt1 RIGHT OUTER JOIN vt0 ON CAST(vt1.c0 AS TEXT) COLLATE NOCASE WHERE (((((x'')OR(vt0.c0)))AND(((vt1.c0) IS TRUE)))) UNION ALL SELECT vt0.c1, vt0.c0, vt1.c0 FROM vt1 RIGHT OUTER JOIN vt0 ON CAST(vt1.c0 AS TEXT) COLLATE NOCASE WHERE ((NOT (((((x'')OR(vt0.c0)))AND(((vt1.c0) IS TRUE)))))) UNION ALL SELECT ALL vt0.c1, vt0.c0, vt1.c0 FROM vt1 RIGHT OUTER JOIN vt0 ON CAST(vt1.c0 AS TEXT) COLLATE NOCASE WHERE (((((((x'')OR(vt0.c0)))AND(((vt1.c0) IS TRUE)))) ISNULL));
SELECT vt0.c1, vt0.c0, vt1.c0 FROM vt1 RIGHT OUTER JOIN vt0 ON CAST(vt1.c0 AS TEXT) COLLATE NOCASE;
SELECT DISTINCT * FROM vt2;
SELECT DISTINCT * FROM vt2 WHERE (vt2.c0) UNION SELECT DISTINCT * FROM vt2 WHERE ((NOT (vt2.c0))) UNION SELECT DISTINCT * FROM vt2 WHERE (((vt2.c0) ISNULL));
SELECT DISTINCT * FROM vt2;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 WHERE (HEX(((vt0.c0) ISNULL))) GROUP BY vt0.c0, vt0.c1 UNION SELECT vt0.c0, vt0.c1 FROM vt0 WHERE ((NOT (HEX(((vt0.c0) ISNULL))))) GROUP BY vt0.c0, vt0.c1 UNION SELECT vt0.c0, vt0.c1 FROM vt0 WHERE (((HEX(((vt0.c0) ISNULL))) ISNULL)) GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c1, vt2.c0, vt0.c0, vt1.c0 FROM vt0, vt1, vt2 GROUP BY vt0.c1, vt2.c0, vt0.c0, vt1.c0;
SELECT vt0.c1, vt2.c0, vt0.c0, vt1.c0 FROM vt0, vt1, vt2 GROUP BY vt0.c1, vt2.c0, vt0.c0, vt1.c0 HAVING COUNT(AVG(vt0.c0)) UNION ALL SELECT vt0.c1, vt2.c0, vt0.c0, vt1.c0 FROM vt0, vt1, vt2 GROUP BY vt0.c1, vt2.c0, vt0.c0, vt1.c0 HAVING (NOT (COUNT(AVG(vt0.c0)))) UNION ALL SELECT vt0.c1, vt2.c0, vt0.c0, vt1.c0 FROM vt0, vt1, vt2 GROUP BY vt0.c1, vt2.c0, vt0.c0, vt1.c0 HAVING ((COUNT(AVG(vt0.c0))) ISNULL);
SELECT * FROM vt0;
SELECT * FROM vt0 WHERE ((((~ (vt0.c1)))IS(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))))) UNION ALL SELECT * FROM vt0 WHERE ((NOT ((((~ (vt0.c1)))IS(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))))))) UNION ALL SELECT * FROM vt0 WHERE ((((((~ (vt0.c1)))IS(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))))) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT vt2.c0, vt0.c1, vt1.c0, vt0.c0 FROM vt2, vt0, vt1;
SELECT DISTINCT vt2.c0, vt0.c1, vt1.c0, vt0.c0 FROM vt2, vt0 NOT INDEXED, vt1 WHERE ((+ (((vt2.c0) NOT BETWEEN (vt0.c0) AND (vt2.c0))))) UNION SELECT DISTINCT vt2.c0, vt0.c1, vt1.c0, vt0.c0 FROM vt2, vt0, vt1 WHERE ((NOT ((+ (((vt2.c0) NOT BETWEEN (vt0.c0) AND (vt2.c0))))))) UNION SELECT DISTINCT vt2.c0, vt0.c1, vt1.c0, vt0.c0 FROM vt2, vt0, vt1 WHERE ((((+ (((vt2.c0) NOT BETWEEN (vt0.c0) AND (vt2.c0))))) ISNULL));
SELECT DISTINCT vt2.c0, vt0.c1, vt1.c0, vt0.c0 FROM vt2, vt0, vt1;
SELECT ALL vt1.c0, vt2.c0 FROM vt1, vt2 GROUP BY vt1.c0, vt2.c0;
SELECT vt1.c0, vt2.c0 FROM vt1, vt2 WHERE (CAST(((vt2.c0) IS FALSE) AS REAL)) GROUP BY vt1.c0, vt2.c0 UNION SELECT ALL vt1.c0, vt2.c0 FROM vt1, vt2 WHERE ((NOT (CAST(((vt2.c0) IS FALSE) AS REAL)))) GROUP BY vt1.c0, vt2.c0 UNION SELECT vt1.c0, vt2.c0 FROM vt1, vt2 WHERE (((CAST(((vt2.c0) IS FALSE) AS REAL)) ISNULL)) GROUP BY vt1.c0, vt2.c0;
SELECT ALL vt1.c0, vt2.c0 FROM vt1, vt2 GROUP BY vt1.c0, vt2.c0;
SELECT vt1.c0, vt0.c1 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c1;
SELECT ALL vt1.c0, vt0.c1 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c1 HAVING TOTAL(MAX(vt0.c0)) UNION ALL SELECT vt1.c0, vt0.c1 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c1 HAVING (NOT (TOTAL(MAX(vt0.c0)))) UNION ALL SELECT vt1.c0, vt0.c1 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c1 HAVING ((TOTAL(MAX(vt0.c0))) ISNULL);
SELECT vt0.c1 FROM vt0, vt2;
SELECT vt0.c1 FROM vt0, vt2 WHERE (((((vt2.c0) NOTNULL)) NOTNULL)) UNION ALL SELECT vt0.c1 FROM vt0, vt2 WHERE ((NOT (((((vt2.c0) NOTNULL)) NOTNULL)))) UNION ALL SELECT ALL vt0.c1 FROM vt0, vt2 WHERE (((((((vt2.c0) NOTNULL)) NOTNULL)) ISNULL));
SELECT vt0.c1 FROM vt0, vt2;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT ((('-1194347776') NOT NULL)))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT ((NOT ((('-1194347776') NOT NULL)))))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((((NOT ((('-1194347776') NOT NULL)))) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT ALL vt2.c0 FROM vt2 WHERE (((((vt2.c0) NOT BETWEEN (vt2.c0) AND (vt2.c0)))+(((vt2.c0)*(vt2.c0))))) GROUP BY vt2.c0 UNION SELECT vt2.c0 FROM vt2 WHERE ((NOT (((((vt2.c0) NOT BETWEEN (vt2.c0) AND (vt2.c0)))+(((vt2.c0)*(vt2.c0))))))) GROUP BY vt2.c0 UNION SELECT vt2.c0 FROM vt2 WHERE (((((((vt2.c0) NOT BETWEEN (vt2.c0) AND (vt2.c0)))+(((vt2.c0)*(vt2.c0))))) ISNULL)) GROUP BY vt2.c0;
SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT vt0.c1, vt0.c0 FROM vt2, vt1 FULL OUTER JOIN vt0 ON ((((((((CASE vt1.c0  WHEN vt1.c0 THEN vt2.c0 WHEN vt0.c0 THEN vt2.c0 WHEN 0.8265802524542535 THEN x'c8fe' END)AND(vt1.c0 COLLATE NOCASE)))AND(-2.04633372E9)))AND(((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)))))AND(CAST('688723359' AS BLOB))) GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM vt2, vt1 FULL OUTER JOIN vt0 ON ((((((((CASE vt1.c0  WHEN vt1.c0 THEN vt2.c0 WHEN vt0.c0 THEN vt2.c0 WHEN 0.8265802524542535 THEN x'c8fe' END)AND(vt1.c0 COLLATE NOCASE)))AND(-2.04633372E9)))AND(((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)))))AND(CAST('688723359' AS BLOB))) GROUP BY vt0.c1, vt0.c0 HAVING GROUP_CONCAT((NOT (GROUP_CONCAT(vt1.c0)))) UNION ALL SELECT vt0.c1, vt0.c0 FROM vt2, vt1 FULL OUTER JOIN vt0 ON ((((((((CASE vt1.c0  WHEN vt1.c0 THEN vt2.c0 WHEN vt0.c0 THEN vt2.c0 WHEN 0.8265802524542535 THEN x'c8fe' END)AND(vt1.c0 COLLATE NOCASE)))AND(-2.04633372E9)))AND(((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)))))AND(CAST('688723359' AS BLOB))) GROUP BY vt0.c1, vt0.c0 HAVING (NOT (GROUP_CONCAT((NOT (GROUP_CONCAT(vt1.c0)))))) UNION ALL SELECT vt0.c1, vt0.c0 FROM vt2, vt1 FULL OUTER JOIN vt0 ON ((((((((CASE vt1.c0  WHEN vt1.c0 THEN vt2.c0 WHEN vt0.c0 THEN vt2.c0 WHEN 0.8265802524542535 THEN x'c8fe' END)AND(vt1.c0 COLLATE NOCASE)))AND(-2.04633372E9)))AND(((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)))))AND(CAST('688723359' AS BLOB))) GROUP BY vt0.c1, vt0.c0 HAVING ((GROUP_CONCAT((NOT (GROUP_CONCAT(vt1.c0))))) ISNULL);
SELECT ALL * FROM vt1 INNER JOIN vt0 ON (((((- ('1924067196')))AND(0Xffffffffa58e8563)))AND(LOWER(vt1.c0))) INNER JOIN vt2 ON ((((((((((((((vt2.c0) NOT BETWEEN (vt0.c1) AND (NULL)))OR(((vt1.c0) ISNULL))))OR((('げK\櫥Pb]->') BETWEEN (vt1.c0) AND (vt2.c0)))))AND(((vt1.c0)GLOB(vt0.c1)))))AND(((NULL)LIKE(vt1.c0)))))OR((- (vt1.c0)))))AND(''));
SELECT * FROM vt1 INNER JOIN vt0 ON (((((- ('1924067196')))AND(0Xffffffffa58e8563)))AND(LOWER(vt1.c0))) INNER JOIN vt2 ON ((((((((((((((vt2.c0) NOT BETWEEN (vt0.c1) AND (NULL)))OR(((vt1.c0) ISNULL))))OR((('げK\櫥Pb]->') BETWEEN (vt1.c0) AND (vt2.c0)))))AND(((vt1.c0)GLOB(vt0.c1)))))AND(((NULL)LIKE(vt1.c0)))))OR((- (vt1.c0)))))AND('')) WHERE (vt0.c0) UNION ALL SELECT * FROM vt1 INNER JOIN vt0 ON (((((- ('1924067196')))AND(0Xffffffffa58e8563)))AND(LOWER(vt1.c0))) INNER JOIN vt2 ON ((((((((((((((vt2.c0) NOT BETWEEN (vt0.c1) AND (NULL)))OR(((vt1.c0) ISNULL))))OR((('げK\櫥Pb]->') BETWEEN (vt1.c0) AND (vt2.c0)))))AND(((vt1.c0)GLOB(vt0.c1)))))AND(((NULL)LIKE(vt1.c0)))))OR((- (vt1.c0)))))AND('')) WHERE ((NOT (vt0.c0))) UNION ALL SELECT ALL * FROM vt1 INNER JOIN vt0 ON (((((- ('1924067196')))AND(0xffffffffa58e8563)))AND(LOWER(vt1.c0))) INNER JOIN vt2 ON ((((((((((((((vt2.c0) NOT BETWEEN (vt0.c1) AND (NULL)))OR(((vt1.c0) ISNULL))))OR((('げK\櫥Pb]->') BETWEEN (vt1.c0) AND (vt2.c0)))))AND(((vt1.c0)GLOB(vt0.c1)))))AND(((NULL)LIKE(vt1.c0)))))OR((- (vt1.c0)))))AND('')) WHERE (((vt0.c0) ISNULL));
SELECT ALL * FROM vt1 INNER JOIN vt0 ON (((((- ('1924067196')))AND(0Xffffffffa58e8563)))AND(LOWER(vt1.c0))) INNER JOIN vt2 ON ((((((((((((((vt2.c0) NOT BETWEEN (vt0.c1) AND (NULL)))OR(((vt1.c0) ISNULL))))OR((('げK\櫥Pb]->') BETWEEN (vt1.c0) AND (vt2.c0)))))AND(((vt1.c0)GLOB(vt0.c1)))))AND(((NULL)LIKE(vt1.c0)))))OR((- (vt1.c0)))))AND(''));
SELECT DISTINCT vt0.c0, vt1.c0 FROM vt1, vt0, vt2;
SELECT DISTINCT vt0.c0, vt1.c0 FROM vt1, vt0, vt2 WHERE (((((((vt0.c0) NOT NULL))OR((vt2.c0 IN ()))))AND((NOT (vt2.c0))))) UNION SELECT DISTINCT vt0.c0, vt1.c0 FROM vt1, vt0, vt2 WHERE ((NOT (((((((vt0.c0) NOT NULL))OR((vt2.c0 IN ()))))AND((NOT (vt2.c0))))))) UNION SELECT DISTINCT vt0.c0, vt1.c0 FROM vt1, vt0, vt2 WHERE (((((((((vt0.c0) NOT NULL))OR((vt2.c0 IN ()))))AND((NOT (vt2.c0))))) ISNULL));
SELECT DISTINCT vt0.c0, vt1.c0 FROM vt1, vt0, vt2;
SELECT ALL vt2.c0, vt0.c1, vt0.c0 FROM vt1, vt2, vt0 GROUP BY vt2.c0, vt0.c1, vt0.c0;
SELECT ALL vt2.c0, vt0.c1, vt0.c0 FROM vt1, vt2, vt0 WHERE (((CASE vt2.c0  WHEN vt2.c0 THEN vt2.c0 ELSE vt0.c0 END)GLOB(CAST(vt2.c0 AS BLOB)))) GROUP BY vt2.c0, vt0.c1, vt0.c0 UNION SELECT ALL vt2.c0, vt0.c1, vt0.c0 FROM vt1, vt2, vt0 WHERE ((NOT (((CASE vt2.c0  WHEN vt2.c0 THEN vt2.c0 ELSE vt0.c0 END)GLOB(CAST(vt2.c0 AS BLOB)))))) GROUP BY vt2.c0, vt0.c1, vt0.c0 UNION SELECT ALL vt2.c0, vt0.c1, vt0.c0 FROM vt1, vt2, vt0 WHERE (((((CASE vt2.c0  WHEN vt2.c0 THEN vt2.c0 ELSE vt0.c0 END)GLOB(CAST(vt2.c0 AS BLOB)))) ISNULL)) GROUP BY vt2.c0, vt0.c1, vt0.c0;
SELECT ALL vt2.c0, vt0.c1, vt0.c0 FROM vt1, vt2, vt0 GROUP BY vt2.c0, vt0.c1, vt0.c0;
SELECT vt1.c0, vt2.c0, vt0.c0, vt0.c1 FROM vt2, vt1, vt0 GROUP BY vt1.c0, vt2.c0, vt0.c0, vt0.c1;
SELECT vt1.c0, vt2.c0, vt0.c0, vt0.c1 FROM vt2, vt1, vt0 GROUP BY vt1.c0, vt2.c0, vt0.c0, vt0.c1 HAVING SUM(vt0.c1) UNION ALL SELECT vt1.c0, vt2.c0, vt0.c0, vt0.c1 FROM vt2, vt1, vt0 GROUP BY vt1.c0, vt2.c0, vt0.c0, vt0.c1 HAVING (NOT (SUM(vt0.c1))) UNION ALL SELECT ALL vt1.c0, vt2.c0, vt0.c0, vt0.c1 FROM vt2, vt1, vt0 GROUP BY vt1.c0, vt2.c0, vt0.c0, vt0.c1 HAVING ((SUM(vt0.c1)) ISNULL);
SELECT vt1.c0, vt2.c0, vt0.c0, vt0.c1 FROM vt2, vt1, vt0 GROUP BY vt1.c0, vt2.c0, vt0.c0, vt0.c1;
SELECT vt1.c0, vt2.c0, vt0.c0, vt0.c1 FROM vt2, vt1, vt0 GROUP BY vt1.c0, vt2.c0, vt0.c0, vt0.c1 HAVING SUM(vt0.c1) UNION ALL SELECT vt1.c0, vt2.c0, vt0.c0, vt0.c1 FROM vt2, vt1, vt0 GROUP BY vt1.c0, vt2.c0, vt0.c0, vt0.c1 HAVING (NOT (SUM(vt0.c1))) UNION ALL SELECT ALL vt1.c0, vt2.c0, vt0.c0, vt0.c1 FROM vt2, vt1, vt0 GROUP BY vt1.c0, vt2.c0, vt0.c0, vt0.c1 HAVING ((SUM(vt0.c1)) ISNULL);
SELECT vt1.c0, vt2.c0, vt0.c0, vt0.c1 FROM vt2, vt1, vt0 GROUP BY vt1.c0, vt2.c0, vt0.c0, vt0.c1;
SELECT ALL * FROM vt2;
SELECT ALL * FROM vt2 NOT INDEXED WHERE ((((vt2.c0)) NOT BETWEEN ((((vt2.c0) IS FALSE))) AND ((x'')))) UNION ALL SELECT * FROM vt2 WHERE ((NOT ((((vt2.c0)) NOT BETWEEN ((((vt2.c0) IS FALSE))) AND ((x'')))))) UNION ALL SELECT * FROM vt2 WHERE ((((((vt2.c0)) NOT BETWEEN ((((vt2.c0) IS FALSE))) AND ((x'')))) ISNULL));
SELECT ALL * FROM vt2;
SELECT DISTINCT vt1.c0, vt2.c0 FROM vt2, vt1;
SELECT DISTINCT vt1.c0, vt2.c0 FROM vt2, vt1 WHERE (((((vt1.c0) NOTNULL)) NOT BETWEEN (CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END) AND (TRIM(DISTINCT vt1.c0, vt2.c0)))) UNION SELECT DISTINCT vt1.c0, vt2.c0 FROM vt2, vt1 WHERE ((NOT (((((vt1.c0) NOTNULL)) NOT BETWEEN (CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END) AND (TRIM(DISTINCT vt1.c0, vt2.c0)))))) UNION SELECT DISTINCT vt1.c0, vt2.c0 FROM vt2, vt1 WHERE (((((((vt1.c0) NOTNULL)) NOT BETWEEN (CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END) AND (TRIM(DISTINCT vt1.c0, vt2.c0)))) ISNULL));
SELECT DISTINCT vt1.c0, vt2.c0 FROM vt2, vt1;
SELECT ALL vt0.c1, vt0.c0 FROM vt1, vt0 GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt1, vt0 WHERE (((vt1.c0)<=(((vt0.c1)%(vt1.c0))))) GROUP BY vt0.c1, vt0.c0 UNION SELECT ALL vt0.c1, vt0.c0 FROM vt1, vt0 WHERE ((NOT (((vt1.c0)<=(((vt0.c1)%(vt1.c0))))))) GROUP BY vt0.c1, vt0.c0 UNION SELECT vt0.c1, vt0.c0 FROM vt1, vt0 WHERE (((((vt1.c0)<=(((vt0.c1)%(vt1.c0))))) ISNULL)) GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM vt1, vt0 GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c0 FROM vt1, vt2, vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt1, vt2, vt0 GROUP BY vt0.c0 HAVING ((((vt0.c1)|(vt2.c0)))%((+ (vt2.c0)))) UNION ALL SELECT vt0.c0 FROM vt1, vt2, vt0 GROUP BY vt0.c0 HAVING (NOT (((((vt0.c1)|(vt2.c0)))%((+ (vt2.c0)))))) UNION ALL SELECT vt0.c0 FROM vt1, vt2, vt0 GROUP BY vt0.c0 HAVING ((((((vt0.c1)|(vt2.c0)))%((+ (vt2.c0))))) ISNULL);
SELECT vt0.c0 FROM vt1, vt2, vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt1, vt2, vt0 GROUP BY vt0.c0 HAVING ((((vt0.c1)|(vt2.c0)))%((+ (vt2.c0)))) UNION ALL SELECT vt0.c0 FROM vt1, vt2, vt0 GROUP BY vt0.c0 HAVING (NOT (((((vt0.c1)|(vt2.c0)))%((+ (vt2.c0)))))) UNION ALL SELECT vt0.c0 FROM vt1, vt2, vt0 GROUP BY vt0.c0 HAVING ((((((vt0.c1)|(vt2.c0)))%((+ (vt2.c0))))) ISNULL);
SELECT vt0.c0 FROM vt1, vt2, vt0 GROUP BY vt0.c0;
SELECT * FROM vt0;
SELECT * FROM vt0 WHERE (((CAST(vt0.c1 AS INTEGER)) NOT BETWEEN (CAST(vt0.c1 AS BLOB)) AND (CASE vt0.c1  WHEN '-41445470' THEN x'' END))) UNION ALL SELECT * FROM vt0 WHERE ((NOT (((CAST(vt0.c1 AS INTEGER)) NOT BETWEEN (CAST(vt0.c1 AS BLOB)) AND (CASE vt0.c1  WHEN '-41445470' THEN x'' END))))) UNION ALL SELECT ALL * FROM vt0 WHERE (((((CAST(vt0.c1 AS INTEGER)) NOT BETWEEN (CAST(vt0.c1 AS BLOB)) AND (CASE vt0.c1  WHEN '-41445470' THEN x'' END))) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT * FROM vt2 FULL OUTER JOIN vt1 ON ((((vt0.c0) NOTNULL))<=(0.31200279748382764)) RIGHT OUTER JOIN vt0 ON ((NULL) IS TRUE) COLLATE RTRIM;
SELECT vt1.c0, vt2.c0, vt0.c1 FROM vt1, vt0 NATURAL JOIN vt2 GROUP BY vt1.c0, vt2.c0, vt0.c1;
SELECT vt1.c0, vt2.c0, vt0.c1 FROM vt1, vt0 NATURAL JOIN vt2 WHERE (((((vt2.c0) NOTNULL)) IS TRUE)) GROUP BY vt1.c0, vt2.c0, vt0.c1 UNION SELECT vt1.c0, vt2.c0, vt0.c1 FROM vt1, vt0 NATURAL JOIN vt2 WHERE ((NOT (((((vt2.c0) NOTNULL)) IS TRUE)))) GROUP BY vt1.c0, vt2.c0, vt0.c1 UNION SELECT ALL vt1.c0, vt2.c0, vt0.c1 FROM vt1, vt0 NATURAL JOIN vt2 WHERE (((((((vt2.c0) NOTNULL)) IS TRUE)) ISNULL)) GROUP BY vt1.c0, vt2.c0, vt0.c1;
SELECT vt1.c0, vt2.c0, vt0.c1 FROM vt1, vt0 NATURAL JOIN vt2 GROUP BY vt1.c0, vt2.c0, vt0.c1;
SELECT vt0.c0, vt0.c1, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt0.c1, vt1.c0;
SELECT vt0.c0, vt0.c1, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt0.c1, vt1.c0 HAVING (NOT (COUNT(*))) COLLATE RTRIM UNION ALL SELECT vt0.c0, vt0.c1, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt0.c1, vt1.c0 HAVING (NOT ((NOT (COUNT(*))) COLLATE RTRIM)) UNION ALL SELECT ALL vt0.c0, vt0.c1, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt0.c1, vt1.c0 HAVING (((NOT (COUNT(*))) COLLATE RTRIM) ISNULL);
SELECT vt0.c0, vt0.c1, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt0.c1, vt1.c0;
SELECT vt0.c0, vt0.c1, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt0.c1, vt1.c0 HAVING (NOT (COUNT(*))) COLLATE RTRIM UNION ALL SELECT vt0.c0, vt0.c1, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt0.c1, vt1.c0 HAVING (NOT ((NOT (COUNT(*))) COLLATE RTRIM)) UNION ALL SELECT ALL vt0.c0, vt0.c1, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt0.c1, vt1.c0 HAVING (((NOT (COUNT(*))) COLLATE RTRIM) ISNULL);
SELECT vt0.c0, vt0.c1, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt0.c1, vt1.c0;
SELECT ALL MAX(x'') FROM vt0, vt1 ORDER BY CAST(((vt1.c0) ISNULL) AS TEXT)  NULLS LAST, (((vt0.c1)) BETWEEN ((((vt0.c0) BETWEEN (vt0.c1) AND (vt1.c0)))) AND ((CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 ELSE NULL END))), ((0.005157013322494741) IS TRUE);
SELECT * FROM vt0, vt2, vt1;
SELECT ALL * FROM vt0, vt2, vt1 WHERE (CASE WHEN CASE WHEN vt0.c0 THEN vt0.c1 WHEN vt2.c0 THEN vt0.c0 WHEN vt2.c0 THEN vt0.c1 ELSE 326851944 END THEN ((vt0.c1)%('377565266')) END) UNION ALL SELECT ALL * FROM vt0, vt2, vt1 WHERE ((NOT (CASE WHEN CASE WHEN vt0.c0 THEN vt0.c1 WHEN vt2.c0 THEN vt0.c0 WHEN vt2.c0 THEN vt0.c1 ELSE 326851944 END THEN ((vt0.c1)%('377565266')) END))) UNION ALL SELECT ALL * FROM vt0, vt2, vt1 WHERE (((CASE WHEN CASE WHEN vt0.c0 THEN vt0.c1 WHEN vt2.c0 THEN vt0.c0 WHEN vt2.c0 THEN vt0.c1 ELSE 326851944 END THEN ((vt0.c1)%('377565266')) END) ISNULL));
SELECT * FROM vt0, vt2, vt1;
SELECT DISTINCT vt2.c0 FROM vt2;
SELECT DISTINCT vt2.c0 FROM vt2 WHERE ((- (((vt2.c0)AND(vt2.c0))))) UNION SELECT DISTINCT vt2.c0 FROM vt2 WHERE ((NOT ((- (((vt2.c0)AND(vt2.c0))))))) UNION SELECT DISTINCT vt2.c0 FROM vt2 WHERE ((((- (((vt2.c0)AND(vt2.c0))))) ISNULL));
SELECT DISTINCT vt2.c0 FROM vt2;
SELECT ALL vt1.c0 FROM vt1 LEFT OUTER JOIN vt0 ON (((vt0.c0 IN ())) NOT NULL) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 LEFT OUTER JOIN vt0 ON (((vt0.c0 IN ())) NOT NULL) WHERE (((((vt0.c0) BETWEEN (vt0.c1) AND (vt1.c0)))=(((NULL) BETWEEN (vt1.c0) AND (vt0.c1))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 LEFT OUTER JOIN vt0 ON (((vt0.c0 IN ())) NOT NULL) WHERE ((NOT (((((vt0.c0) BETWEEN (vt0.c1) AND (vt1.c0)))==(((NULL) BETWEEN (vt1.c0) AND (vt0.c1))))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 LEFT OUTER JOIN vt0 ON (((vt0.c0 IN ())) NOT NULL) WHERE (((((((vt0.c0) BETWEEN (vt0.c1) AND (vt1.c0)))=(((NULL) BETWEEN (vt1.c0) AND (vt0.c1))))) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 LEFT OUTER JOIN vt0 ON (((vt0.c0 IN ())) NOT NULL) GROUP BY vt1.c0;
SELECT ALL vt1.c0, vt0.c1 FROM vt0 FULL OUTER JOIN vt1 ON (('') NOT NULL) CROSS JOIN vt2 ON (((((vt0.c1))<((vt2.c0)))) NOT BETWEEN ((((vt2.c0, vt2.c0, vt0.c0))>((vt2.c0, vt2.c0, vt0.c0)))) AND (ABS(DISTINCT vt0.c0))) GROUP BY vt1.c0, vt0.c1;
SELECT ALL vt1.c0, vt0.c1 FROM vt0 FULL OUTER JOIN vt1 ON (('') NOT NULL) CROSS JOIN vt2 ON (((((vt0.c1))<((vt2.c0)))) NOT BETWEEN ((((vt2.c0, vt2.c0, vt0.c0))>((vt2.c0, vt2.c0, vt0.c0)))) AND (ABS(DISTINCT vt0.c0))) GROUP BY vt1.c0, vt0.c1 HAVING COUNT(SUM(vt2.c0)) COLLATE NOCASE UNION ALL SELECT ALL vt1.c0, vt0.c1 FROM vt0 FULL OUTER JOIN vt1 ON (('') NOT NULL) CROSS JOIN vt2 ON (((((vt0.c1))<((vt2.c0)))) NOT BETWEEN ((((vt2.c0, vt2.c0, vt0.c0))>((vt2.c0, vt2.c0, vt0.c0)))) AND (ABS(DISTINCT vt0.c0))) GROUP BY vt1.c0, vt0.c1 HAVING (NOT (COUNT(SUM(vt2.c0)) COLLATE NOCASE)) UNION ALL SELECT vt1.c0, vt0.c1 FROM vt0 FULL OUTER JOIN vt1 ON (('') NOT NULL) CROSS JOIN vt2 ON (((((vt0.c1))<((vt2.c0)))) NOT BETWEEN ((((vt2.c0, vt2.c0, vt0.c0))>((vt2.c0, vt2.c0, vt0.c0)))) AND (ABS(DISTINCT vt0.c0))) GROUP BY vt1.c0, vt0.c1 HAVING ((COUNT(SUM(vt2.c0)) COLLATE NOCASE) ISNULL);
SELECT ALL vt1.c0, vt2.c0 FROM vt1 LEFT OUTER JOIN vt0 ON (('-702867915') BETWEEN (vt2.c0 COLLATE NOCASE) AND (vt0.c1 COLLATE NOCASE)) INNER JOIN vt2 ON ((((vt0.c0)LIKE(vt0.c1))) NOT NULL);
SELECT DISTINCT vt1.c0, vt0.c0 FROM vt2, vt1 INNER JOIN vt0 ON CAST(CAST(vt1.c0 AS TEXT) AS INTEGER);
SELECT DISTINCT vt1.c0, vt0.c0 FROM vt2, vt1 INNER JOIN vt0 ON CAST(CAST(vt1.c0 AS TEXT) AS INTEGER) WHERE ((((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c1)))OR(vt1.c0)))OR(vt2.c0))))>((CASE WHEN vt0.c0 THEN vt2.c0 ELSE vt0.c1 END)))) UNION SELECT DISTINCT vt1.c0, vt0.c0 FROM vt2, vt1 INNER JOIN vt0 ON CAST(CAST(vt1.c0 AS TEXT) AS INTEGER) WHERE ((NOT ((((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c1)))OR(vt1.c0)))OR(vt2.c0))))>((CASE WHEN vt0.c0 THEN vt2.c0 ELSE vt0.c1 END)))))) UNION SELECT DISTINCT vt1.c0, vt0.c0 FROM vt2, vt1 INNER JOIN vt0 ON CAST(CAST(vt1.c0 AS TEXT) AS INTEGER) WHERE ((((((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c1)))OR(vt1.c0)))OR(vt2.c0))))>((CASE WHEN vt0.c0 THEN vt2.c0 ELSE vt0.c1 END)))) ISNULL));
SELECT DISTINCT vt1.c0, vt0.c0 FROM vt2, vt1 INNER JOIN vt0 ON CAST(CAST(vt1.c0 AS TEXT) AS INTEGER);
SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT ALL vt2.c0 FROM vt2 WHERE (HEX(DISTINCT CAST(vt2.c0 AS NUMERIC))) GROUP BY vt2.c0 UNION SELECT ALL vt2.c0 FROM vt2 WHERE ((NOT (HEX(DISTINCT CAST(vt2.c0 AS NUMERIC))))) GROUP BY vt2.c0 UNION SELECT vt2.c0 FROM vt2 WHERE (((HEX(DISTINCT CAST(vt2.c0 AS NUMERIC))) ISNULL)) GROUP BY vt2.c0;
SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING TOTAL(vt0.c0) UNION ALL SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING (NOT (TOTAL(vt0.c0))) UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING ((TOTAL(vt0.c0)) ISNULL);
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING TOTAL(vt0.c0) UNION ALL SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING (NOT (TOTAL(vt0.c0))) UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING ((TOTAL(vt0.c0)) ISNULL);
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT ALL * FROM vt0, vt2, vt1;
SELECT ALL * FROM vt0, vt2, vt1 WHERE ((((((((((vt0.c0 IN ()))OR(CASE WHEN x'' THEN vt0.c1 ELSE vt1.c0 END)))AND((vt1.c0 IN (vt0.c0)))))AND(vt2.c0 COLLATE BINARY)))OR('uy둽By[u'))) UNION ALL SELECT * FROM vt0, vt2, vt1 WHERE ((NOT ((((((((((vt0.c0 IN ()))OR(CASE WHEN x'' THEN vt0.c1 ELSE vt1.c0 END)))AND((vt1.c0 IN (vt0.c0)))))AND(vt2.c0 COLLATE BINARY)))OR('uy둽By[u'))))) UNION ALL SELECT * FROM vt0, vt2, vt1 WHERE ((((((((((((vt0.c0 IN ()))OR(CASE WHEN x'' THEN vt0.c1 ELSE vt1.c0 END)))AND((vt1.c0 IN (vt0.c0)))))AND(vt2.c0 COLLATE BINARY)))OR('uy둽By[u'))) ISNULL));
SELECT ALL * FROM vt0, vt2, vt1;
SELECT DISTINCT * FROM vt1, vt2, vt0;
SELECT DISTINCT * FROM vt1, vt2, vt0 WHERE (vt0.c1) UNION SELECT DISTINCT * FROM vt1, vt2, vt0 WHERE ((NOT (vt0.c1))) UNION SELECT DISTINCT * FROM vt1, vt2, vt0 WHERE (((vt0.c1) ISNULL));
SELECT DISTINCT * FROM vt1, vt2, vt0;
SELECT ALL vt1.c0, vt0.c0 FROM vt0, vt1 NOT INDEXED GROUP BY vt1.c0, vt0.c0;
SELECT vt1.c0, vt0.c0 FROM vt0, vt1 WHERE (json_array_length(((((((((vt0.c0)OR(x'')))OR(vt1.c0)))OR(vt0.c0)))OR(1695549211)))) GROUP BY vt1.c0, vt0.c0 UNION SELECT vt1.c0, vt0.c0 FROM vt0, vt1 WHERE ((NOT (json_array_length(((((((((vt0.c0)OR(x'')))OR(vt1.c0)))OR(vt0.c0)))OR(1695549211)))))) GROUP BY vt1.c0, vt0.c0 UNION SELECT ALL vt1.c0, vt0.c0 FROM vt0, vt1 WHERE (((json_array_length(((((((((vt0.c0)OR(x'')))OR(vt1.c0)))OR(vt0.c0)))OR(1695549211)))) ISNULL)) GROUP BY vt1.c0, vt0.c0;
SELECT ALL vt1.c0, vt0.c0 FROM vt0, vt1 NOT INDEXED GROUP BY vt1.c0, vt0.c0;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING COUNT(*) UNION ALL SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING COUNT(*) UNION ALL SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT * FROM vt2, vt0;
SELECT ALL * FROM vt2, vt0 WHERE (((((((((((((((((((((((((vt0.c1)OR(vt0.c0)))AND(NULL)))OR(vt0.c0)))AND(vt0.c1)))AND((((vt0.c1)) NOT BETWEEN ((vt2.c0)) AND ((vt0.c0))))))OR(vt2.c0)))OR((vt0.c1 IN (vt0.c0)))))OR(ABS(vt0.c0))))OR(((((vt0.c0)AND(vt0.c1)))OR(vt2.c0)))))OR(NULL)))AND(((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)))))OR((((vt0.c1, vt0.c1, vt0.c1))>((vt2.c0, vt0.c1, vt0.c1)))))) UNION ALL SELECT ALL * FROM vt2, vt0 WHERE ((NOT (((((((((((((((((((((((((vt0.c1)OR(vt0.c0)))AND(NULL)))OR(vt0.c0)))AND(vt0.c1)))AND((((vt0.c1)) NOT BETWEEN ((vt2.c0)) AND ((vt0.c0))))))OR(vt2.c0)))OR((vt0.c1 IN (vt0.c0)))))OR(ABS(vt0.c0))))OR(((((vt0.c0)AND(vt0.c1)))OR(vt2.c0)))))OR(NULL)))AND(((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)))))OR((((vt0.c1, vt0.c1, vt0.c1))>((vt2.c0, vt0.c1, vt0.c1)))))))) UNION ALL SELECT ALL * FROM vt2, vt0 WHERE (((((((((((((((((((((((((((vt0.c1)OR(vt0.c0)))AND(NULL)))OR(vt0.c0)))AND(vt0.c1)))AND((((vt0.c1)) NOT BETWEEN ((vt2.c0)) AND ((vt0.c0))))))OR(vt2.c0)))OR((vt0.c1 IN (vt0.c0)))))OR(ABS(vt0.c0))))OR(((((vt0.c0)AND(vt0.c1)))OR(vt2.c0)))))OR(NULL)))AND(((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)))))OR((((vt0.c1, vt0.c1, vt0.c1))>((vt2.c0, vt0.c1, vt0.c1)))))) ISNULL));
SELECT * FROM vt2, vt0;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (vt1.c0) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (vt1.c0))) UNION SELECT DISTINCT * FROM vt1 WHERE (((vt1.c0) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT ALL vt0.c1 FROM vt0, vt2, vt1 GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0, vt2, vt1 WHERE ((((((vt0.c0 IN ()))OR(((vt2.c0) IS FALSE))))OR(vt0.c1))) GROUP BY vt0.c1 UNION SELECT ALL vt0.c1 FROM vt0, vt2, vt1 WHERE ((NOT ((((((vt0.c0 IN ()))OR(((vt2.c0) IS FALSE))))OR(vt0.c1))))) GROUP BY vt0.c1 UNION SELECT ALL vt0.c1 FROM vt0, vt2, vt1 WHERE ((((((((vt0.c0 IN ()))OR(((vt2.c0) IS FALSE))))OR(vt0.c1))) ISNULL)) GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt0, vt2, vt1 GROUP BY vt0.c1;
SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING SUM(json_patch(vt2.c0, MAX(vt2.c0))) UNION ALL SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING (NOT (SUM(json_patch(vt2.c0, MAX(vt2.c0))))) UNION ALL SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING ((SUM(json_patch(vt2.c0, MAX(vt2.c0)))) ISNULL);
SELECT ALL * FROM vt1 CROSS JOIN vt2 ON ((((vt2.c0)IS(x'5520e90e'))) IS FALSE);
SELECT ALL * FROM vt1 CROSS JOIN vt2 ON ((((vt2.c0)IS(x'5520e90e'))) IS FALSE) WHERE (((CAST(vt1.c0 AS NUMERIC))AND(((vt1.c0) BETWEEN (vt1.c0) AND (vt2.c0))))) UNION ALL SELECT * FROM vt1 NOT INDEXED CROSS JOIN vt2 ON ((((vt2.c0)IS(x'5520e90e'))) IS FALSE) WHERE ((NOT (((CAST(vt1.c0 AS NUMERIC))AND(((vt1.c0) BETWEEN (vt1.c0) AND (vt2.c0))))))) UNION ALL SELECT * FROM vt1 CROSS JOIN vt2 ON ((((vt2.c0)IS(x'5520e90e'))) IS FALSE) WHERE (((((CAST(vt1.c0 AS NUMERIC))AND(((vt1.c0) BETWEEN (vt1.c0) AND (vt2.c0))))) ISNULL));
SELECT ALL * FROM vt1 CROSS JOIN vt2 ON ((((vt2.c0)IS(x'5520e90e'))) IS FALSE);
SELECT DISTINCT vt1.c0, vt0.c0 FROM vt1, vt2, vt0;
SELECT DISTINCT vt1.c0, vt0.c0 FROM vt1, vt2, vt0 WHERE (((CAST(vt0.c0 AS NUMERIC))<>(((vt0.c1) ISNULL)))) UNION SELECT DISTINCT vt1.c0, vt0.c0 FROM vt1, vt2, vt0 WHERE ((NOT (((CAST(vt0.c0 AS NUMERIC))<>(((vt0.c1) ISNULL)))))) UNION SELECT DISTINCT vt1.c0, vt0.c0 FROM vt1, vt2, vt0 WHERE (((((CAST(vt0.c0 AS NUMERIC))!=(((vt0.c1) ISNULL)))) ISNULL));
SELECT DISTINCT vt1.c0, vt0.c0 FROM vt1, vt2, vt0;
SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT ALL vt2.c0 FROM vt2 WHERE ((((- (vt2.c0)))!=((vt2.c0 IN ())))) GROUP BY vt2.c0 UNION SELECT ALL vt2.c0 FROM vt2 WHERE ((NOT ((((- (vt2.c0)))<>((vt2.c0 IN ())))))) GROUP BY vt2.c0 UNION SELECT ALL vt2.c0 FROM vt2 WHERE ((((((- (vt2.c0)))<>((vt2.c0 IN ())))) ISNULL)) GROUP BY vt2.c0;
SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING ABS(SUM(vt0.c0)) UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING (NOT (ABS(SUM(vt0.c0)))) UNION ALL SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING ((ABS(SUM(vt0.c0))) ISNULL);
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING ABS(SUM(vt0.c0)) UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING (NOT (ABS(SUM(vt0.c0)))) UNION ALL SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING ((ABS(SUM(vt0.c0))) ISNULL);
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT ALL * FROM vt0 INNER JOIN vt2 ON CAST((+ (vt1.c0)) AS REAL) FULL OUTER JOIN vt1 ON vt1.c0;
SELECT DISTINCT * FROM vt2 CROSS JOIN vt1 ON ((-1028180337) NOT NULL) RIGHT OUTER JOIN vt0 ON (((vt1.c0 IN ())) NOT BETWEEN (((vt0.c1)+(vt1.c0))) AND ((vt1.c0 IN ())));
SELECT DISTINCT * FROM vt2 CROSS JOIN vt1 ON ((-1028180337) NOT NULL) RIGHT OUTER JOIN vt0 ON (((vt1.c0 IN ())) NOT BETWEEN (((vt0.c1)+(vt1.c0))) AND ((vt1.c0 IN ()))) WHERE (((((((((CASE WHEN vt1.c0 THEN x'' WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt2.c0 ELSE vt0.c1 END)OR(((vt0.c1) IS TRUE))))OR((((vt1.c0, vt0.c1, '-2092978623')) BETWEEN ((vt1.c0, vt2.c0, NULL)) AND ((vt0.c0, vt0.c1, vt1.c0))))))AND(((x'') NOT BETWEEN (vt0.c1) AND (vt2.c0)))))OR((~ (vt2.c0))))) UNION SELECT DISTINCT * FROM vt2 CROSS JOIN vt1 ON ((-1028180337) NOT NULL) RIGHT OUTER JOIN vt0 ON (((vt1.c0 IN ())) NOT BETWEEN (((vt0.c1)+(vt1.c0))) AND ((vt1.c0 IN ()))) WHERE ((NOT (((((((((CASE WHEN vt1.c0 THEN x'' WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt2.c0 ELSE vt0.c1 END)OR(((vt0.c1) IS TRUE))))OR((((vt1.c0, vt0.c1, '-2092978623')) BETWEEN ((vt1.c0, vt2.c0, NULL)) AND ((vt0.c0, vt0.c1, vt1.c0))))))AND(((x'') NOT BETWEEN (vt0.c1) AND (vt2.c0)))))OR((~ (vt2.c0))))))) UNION SELECT DISTINCT * FROM vt2 CROSS JOIN vt1 ON ((-1028180337) NOT NULL) RIGHT OUTER JOIN vt0 ON (((vt1.c0 IN ())) NOT BETWEEN (((vt0.c1)+(vt1.c0))) AND ((vt1.c0 IN ()))) WHERE (((((((((((CASE WHEN vt1.c0 THEN x'' WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt2.c0 ELSE vt0.c1 END)OR(((vt0.c1) IS TRUE))))OR((((vt1.c0, vt0.c1, '-2092978623')) BETWEEN ((vt1.c0, vt2.c0, NULL)) AND ((vt0.c0, vt0.c1, vt1.c0))))))AND(((x'') NOT BETWEEN (vt0.c1) AND (vt2.c0)))))OR((~ (vt2.c0))))) ISNULL));
SELECT DISTINCT * FROM vt2 CROSS JOIN vt1 ON ((-1028180337) NOT NULL) RIGHT OUTER JOIN vt0 ON (((vt1.c0 IN ())) NOT BETWEEN (((vt0.c1)+(vt1.c0))) AND ((vt1.c0 IN ())));
SELECT vt0.c0, vt0.c1, vt2.c0 FROM vt1, vt0, vt2 GROUP BY vt0.c0, vt0.c1, vt2.c0;
SELECT vt0.c0, vt0.c1, vt2.c0 FROM vt1, vt0, vt2 WHERE ((NULL IN ())) GROUP BY vt0.c0, vt0.c1, vt2.c0 UNION SELECT vt0.c0, vt0.c1, vt2.c0 FROM vt1, vt0, vt2 WHERE ((NOT ((NULL IN ())))) GROUP BY vt0.c0, vt0.c1, vt2.c0 UNION SELECT vt0.c0, vt0.c1, vt2.c0 FROM vt1, vt0, vt2 WHERE ((((NULL IN ())) ISNULL)) GROUP BY vt0.c0, vt0.c1, vt2.c0;
SELECT vt0.c0, vt0.c1, vt2.c0 FROM vt1, vt0, vt2 GROUP BY vt0.c0, vt0.c1, vt2.c0;
SELECT vt0.c1 FROM vt0, vt2, vt1 GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt0, vt2, vt1 GROUP BY vt0.c1 HAVING ((MAX(SUM(COUNT(*))))IS NOT(AVG(vt1.c0))) UNION ALL SELECT ALL vt0.c1 FROM vt0, vt2, vt1 GROUP BY vt0.c1 HAVING (NOT (((MAX(SUM(COUNT(*))))IS NOT(AVG(vt1.c0))))) UNION ALL SELECT vt0.c1 FROM vt0, vt2, vt1 GROUP BY vt0.c1 HAVING ((((MAX(SUM(COUNT(*))))IS NOT(AVG(vt1.c0)))) ISNULL);
SELECT ALL * FROM vt0;
SELECT * FROM vt0 WHERE (json_object(vt0.c1 COLLATE RTRIM, vt0.c0)) ORDER BY 0X75f4ad5a DESC  NULLS LAST;
SELECT DISTINCT * FROM vt2, vt1, vt0;
SELECT DISTINCT * FROM vt2, vt1, vt0 WHERE (0.3366752983058007) UNION SELECT DISTINCT * FROM vt2, vt1, vt0 WHERE ((NOT (0.3366752983058007))) UNION SELECT DISTINCT * FROM vt2, vt1, vt0 WHERE (((0.3366752983058007) ISNULL));
SELECT DISTINCT * FROM vt2, vt1, vt0;
SELECT ALL vt0.c0, vt2.c0, vt0.c1 FROM vt0, vt1, vt2 GROUP BY vt0.c0, vt2.c0, vt0.c1;
SELECT vt0.c0, vt2.c0, vt0.c1 FROM vt0, vt1, vt2 WHERE ((((((('1045386646')OR('')))OR(vt0.c1))) NOT BETWEEN ((((vt1.c0, vt0.c0, vt1.c0))=((vt1.c0, vt2.c0, vt2.c0)))) AND ((((vt2.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt2.c0)))))) GROUP BY vt0.c0, vt2.c0, vt0.c1 UNION SELECT ALL vt0.c0, vt2.c0, vt0.c1 FROM vt0, vt1, vt2 WHERE ((NOT ((((((('1045386646')OR('')))OR(vt0.c1))) NOT BETWEEN ((((vt1.c0, vt0.c0, vt1.c0))==((vt1.c0, vt2.c0, vt2.c0)))) AND ((((vt2.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt2.c0)))))))) GROUP BY vt0.c0, vt2.c0, vt0.c1 UNION SELECT ALL vt0.c0, vt2.c0, vt0.c1 FROM vt0, vt1, vt2 WHERE ((((((((('1045386646')OR('')))OR(vt0.c1))) NOT BETWEEN ((((vt1.c0, vt0.c0, vt1.c0))==((vt1.c0, vt2.c0, vt2.c0)))) AND ((((vt2.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt2.c0)))))) ISNULL)) GROUP BY vt0.c0, vt2.c0, vt0.c1;
SELECT ALL vt0.c0, vt2.c0, vt0.c1 FROM vt0, vt1, vt2 GROUP BY vt0.c0, vt2.c0, vt0.c1;
SELECT vt0.c1 FROM vt1 RIGHT OUTER JOIN vt2 ON CASE WHEN vt0.c0 COLLATE RTRIM THEN vt0.c1 ELSE ((vt0.c0)IS NOT(0x1cacfbb9)) END INNER JOIN vt0 ON ((CAST(x'8c32' AS NUMERIC))*((vt0.c0 IN (vt2.c0)))) GROUP BY vt0.c1;
SELECT ALL * FROM vt1, vt0;
SELECT ALL * FROM vt1, vt0 WHERE (((vt0.c0) NOT BETWEEN (NULL) AND (vt0.c0)) COLLATE NOCASE) UNION ALL SELECT * FROM vt1, vt0 WHERE ((NOT (((vt0.c0) NOT BETWEEN (NULL) AND (vt0.c0)) COLLATE NOCASE))) UNION ALL SELECT * FROM vt1, vt0 WHERE (((((vt0.c0) NOT BETWEEN (NULL) AND (vt0.c0)) COLLATE NOCASE) ISNULL));
SELECT ALL * FROM vt1, vt0;
SELECT DISTINCT * FROM vt1, vt0, vt2;
SELECT DISTINCT * FROM vt1, vt0, vt2 WHERE (((NULLIF(vt1.c0, vt1.c0))GLOB('	⎦'))) UNION SELECT DISTINCT * FROM vt1, vt0, vt2 WHERE ((NOT (((NULLIF(vt1.c0, vt1.c0))GLOB('	⎦'))))) UNION SELECT DISTINCT * FROM vt1, vt0, vt2 WHERE (((((NULLIF(vt1.c0, vt1.c0))GLOB('	⎦'))) ISNULL));
SELECT DISTINCT * FROM vt1, vt0, vt2;
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c0, vt0.c1 FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 END)/(vt0.c0 COLLATE BINARY))) GROUP BY vt0.c0, vt0.c1 UNION SELECT ALL vt0.c0, vt0.c1 FROM vt0 WHERE ((NOT (((CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 END)/(vt0.c0 COLLATE BINARY))))) GROUP BY vt0.c0, vt0.c1 UNION SELECT ALL vt0.c0, vt0.c1 FROM vt0 WHERE (((((CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 END)/(vt0.c0 COLLATE BINARY))) ISNULL)) GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING MAX(SUM(vt0.c0)) UNION ALL SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING (NOT (MAX(SUM(vt0.c0)))) UNION ALL SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING ((MAX(SUM(vt0.c0))) ISNULL);
SELECT * FROM vt1 RIGHT OUTER JOIN vt2 ON (NOT (CAST(NULL AS INTEGER)));
SELECT * FROM vt1 RIGHT OUTER JOIN vt2 ON (NOT (CAST(NULL AS INTEGER))) WHERE (((((((vt2.c0)OR(vt1.c0)))OR(vt2.c0)))&(''))) UNION ALL SELECT * FROM vt1 RIGHT OUTER JOIN vt2 ON (NOT (CAST(NULL AS INTEGER))) WHERE ((NOT (((((((vt2.c0)OR(vt1.c0)))OR(vt2.c0)))&(''))))) UNION ALL SELECT * FROM vt1 RIGHT OUTER JOIN vt2 ON (NOT (CAST(NULL AS INTEGER))) WHERE (((((((((vt2.c0)OR(vt1.c0)))OR(vt2.c0)))&(''))) ISNULL));
SELECT * FROM vt1 RIGHT OUTER JOIN vt2 ON (NOT (CAST(NULL AS INTEGER)));
SELECT DISTINCT vt2.c0 FROM vt2;
SELECT DISTINCT vt2.c0 FROM vt2 WHERE (((DATE(vt2.c0, vt2.c0, vt2.c0))<((((1.305506238E9))!=((vt2.c0)))))) UNION SELECT DISTINCT vt2.c0 FROM vt2 WHERE ((NOT (((DATE(vt2.c0, vt2.c0, vt2.c0))<((((1.305506238E9))<>((vt2.c0)))))))) UNION SELECT DISTINCT vt2.c0 FROM vt2 WHERE (((((DATE(vt2.c0, vt2.c0, vt2.c0))<((((1.305506238E9))!=((vt2.c0)))))) ISNULL));
SELECT DISTINCT vt2.c0 FROM vt2;
SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT vt2.c0 FROM vt2 WHERE (CASE CAST(vt2.c0 AS INTEGER)  WHEN ((((vt2.c0)OR(vt2.c0)))OR(vt2.c0)) THEN NULL END) GROUP BY vt2.c0 UNION SELECT vt2.c0 FROM vt2 WHERE ((NOT (CASE CAST(vt2.c0 AS INTEGER)  WHEN ((((vt2.c0)OR(vt2.c0)))OR(vt2.c0)) THEN NULL END))) GROUP BY vt2.c0 UNION SELECT vt2.c0 FROM vt2 WHERE (((CASE CAST(vt2.c0 AS INTEGER)  WHEN ((((vt2.c0)OR(vt2.c0)))OR(vt2.c0)) THEN NULL END) ISNULL)) GROUP BY vt2.c0;
SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT ALL vt0.c0, vt0.c1 FROM vt0, vt2 GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c0, vt0.c1 FROM vt0, vt2 GROUP BY vt0.c0, vt0.c1 HAVING ((TOTAL(vt2.c0))>>(SUM(vt2.c0))) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt0, vt2 GROUP BY vt0.c0, vt0.c1 HAVING (NOT (((TOTAL(vt2.c0))>>(SUM(vt2.c0))))) UNION ALL SELECT vt0.c0, vt0.c1 FROM vt0, vt2 GROUP BY vt0.c0, vt0.c1 HAVING ((((TOTAL(vt2.c0))>>(SUM(vt2.c0)))) ISNULL);
SELECT ALL vt0.c0, vt0.c1 FROM vt0, vt2 GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c0, vt0.c1 FROM vt0, vt2 GROUP BY vt0.c0, vt0.c1 HAVING ((TOTAL(vt2.c0))>>(SUM(vt2.c0))) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt0, vt2 GROUP BY vt0.c0, vt0.c1 HAVING (NOT (((TOTAL(vt2.c0))>>(SUM(vt2.c0))))) UNION ALL SELECT vt0.c0, vt0.c1 FROM vt0, vt2 GROUP BY vt0.c0, vt0.c1 HAVING ((((TOTAL(vt2.c0))>>(SUM(vt2.c0)))) ISNULL);
SELECT ALL vt0.c0, vt0.c1 FROM vt0, vt2 GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0 FROM vt1, vt0;
SELECT ALL vt0.c0 FROM vt1, vt0 WHERE ((((((- (vt0.c0)))AND((((vt0.c1, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c1, vt0.c1)) AND ((vt1.c0, vt1.c0, vt0.c1))))))OR(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt1.c0 WHEN vt0.c1 THEN 0.7641391955439889 ELSE vt1.c0 END))) UNION ALL SELECT vt0.c0 FROM vt1, vt0 WHERE ((NOT ((((((- (vt0.c0)))AND((((vt0.c1, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c1, vt0.c1)) AND ((vt1.c0, vt1.c0, vt0.c1))))))OR(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt1.c0 WHEN vt0.c1 THEN 0.7641391955439889 ELSE vt1.c0 END))))) UNION ALL SELECT vt0.c0 FROM vt1, vt0 WHERE ((((((((- (vt0.c0)))AND((((vt0.c1, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c1, vt0.c1)) AND ((vt1.c0, vt1.c0, vt0.c1))))))OR(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt1.c0 WHEN vt0.c1 THEN 0.7641391955439889 ELSE vt1.c0 END))) ISNULL));
SELECT ALL vt0.c0 FROM vt1, vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (NULL) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (NULL))) UNION SELECT DISTINCT * FROM vt0 WHERE (((NULL) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT vt2.c0 FROM vt1, vt2 GROUP BY vt2.c0;
SELECT vt2.c0 FROM vt1, vt2 WHERE (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt2.c0)) COLLATE NOCASE) GROUP BY vt2.c0 UNION SELECT vt2.c0 FROM vt1, vt2 WHERE ((NOT (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt2.c0)) COLLATE NOCASE))) GROUP BY vt2.c0 UNION SELECT vt2.c0 FROM vt1, vt2 WHERE (((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt2.c0)) COLLATE NOCASE) ISNULL)) GROUP BY vt2.c0;
SELECT vt2.c0 FROM vt1, vt2 GROUP BY vt2.c0;
SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING CAST(TRIM(SUM(vt2.c0)) AS NUMERIC) UNION ALL SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING (NOT (CAST(TRIM(SUM(vt2.c0)) AS NUMERIC))) UNION ALL SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING ((CAST(TRIM(SUM(vt2.c0)) AS NUMERIC)) ISNULL);
SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING CAST(TRIM(SUM(vt2.c0)) AS NUMERIC) UNION ALL SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING (NOT (CAST(TRIM(SUM(vt2.c0)) AS NUMERIC))) UNION ALL SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING ((CAST(TRIM(SUM(vt2.c0)) AS NUMERIC)) ISNULL);
SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT * FROM vt2, vt1;
SELECT ALL * FROM vt2, vt1 WHERE ((((- (vt1.c0)))+('937627026'))) UNION ALL SELECT * FROM vt2, vt1 WHERE ((NOT ((((- (vt1.c0)))+('937627026'))))) UNION ALL SELECT ALL * FROM vt2, vt1 WHERE ((((((- (vt1.c0)))+('937627026'))) ISNULL));
SELECT * FROM vt2, vt1;
SELECT DISTINCT vt1.c0, vt2.c0 FROM vt2, vt0, vt1;
SELECT DISTINCT vt1.c0, vt2.c0 FROM vt2, vt0, vt1 WHERE (((vt0.c1) NOT BETWEEN (((((vt2.c0)AND(vt1.c0)))OR(vt1.c0))) AND (('' IN (vt0.c0, vt1.c0))))) UNION SELECT DISTINCT vt1.c0, vt2.c0 FROM vt2 NOT INDEXED, vt0, vt1 WHERE ((NOT (((vt0.c1) NOT BETWEEN (((((vt2.c0)AND(vt1.c0)))OR(vt1.c0))) AND (('' IN (vt0.c0, vt1.c0))))))) UNION SELECT DISTINCT vt1.c0, vt2.c0 FROM vt2, vt0, vt1 WHERE (((((vt0.c1) NOT BETWEEN (((((vt2.c0)AND(vt1.c0)))OR(vt1.c0))) AND (('' IN (vt0.c0, vt1.c0))))) ISNULL));
SELECT DISTINCT vt1.c0, vt2.c0 FROM vt2, vt0, vt1;
SELECT ALL vt2.c0 FROM vt1 CROSS JOIN vt0 ON ((((((vt2.c0)AND(vt1.c0)))AND(vt0.c0))) NOT BETWEEN (UNLIKELY(DISTINCT vt2.c0)) AND (CASE WHEN x'4ec070c4' THEN vt0.c0 WHEN vt2.c0 THEN vt2.c0 WHEN vt0.c1 THEN vt2.c0 END)) FULL OUTER JOIN vt2 ON vt1.c0 GROUP BY vt2.c0;
SELECT ALL vt1.c0 FROM vt2, vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt2, vt1 GROUP BY vt1.c0 HAVING ((('fOndJhdap'))=((MIN(vt1.c0)))) UNION ALL SELECT vt1.c0 FROM vt2, vt1 GROUP BY vt1.c0 HAVING (NOT (((('fOndJhdap'))==((MIN(vt1.c0)))))) UNION ALL SELECT vt1.c0 FROM vt2, vt1 GROUP BY vt1.c0 HAVING ((((('fOndJhdap'))==((MIN(vt1.c0))))) ISNULL);
SELECT ALL vt1.c0 FROM vt2, vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt2, vt1 GROUP BY vt1.c0 HAVING ((('fOndJhdap'))=((MIN(vt1.c0)))) UNION ALL SELECT vt1.c0 FROM vt2, vt1 GROUP BY vt1.c0 HAVING (NOT (((('fOndJhdap'))==((MIN(vt1.c0)))))) UNION ALL SELECT vt1.c0 FROM vt2, vt1 GROUP BY vt1.c0 HAVING ((((('fOndJhdap'))==((MIN(vt1.c0))))) ISNULL);
SELECT ALL vt1.c0 FROM vt2, vt1 GROUP BY vt1.c0;
SELECT ALL vt0.c0, vt1.c0 FROM vt1, vt0;
SELECT vt0.c0, vt1.c0 FROM vt1, vt0 WHERE (CAST(((vt1.c0) NOTNULL) AS REAL)) UNION ALL SELECT ALL vt0.c0, vt1.c0 FROM vt1, vt0 WHERE ((NOT (CAST(((vt1.c0) NOTNULL) AS REAL)))) UNION ALL SELECT vt0.c0, vt1.c0 FROM vt1, vt0 NOT INDEXED WHERE (((CAST(((vt1.c0) NOTNULL) AS REAL)) ISNULL));
SELECT ALL vt0.c0, vt1.c0 FROM vt1, vt0;
SELECT DISTINCT vt2.c0 FROM vt2;
SELECT DISTINCT vt2.c0 FROM vt2 WHERE (vt2.c0) UNION SELECT DISTINCT vt2.c0 FROM vt2 WHERE ((NOT (vt2.c0))) UNION SELECT DISTINCT vt2.c0 FROM vt2 WHERE (((vt2.c0) ISNULL));
SELECT DISTINCT vt2.c0 FROM vt2;
SELECT vt2.c0, vt0.c1 FROM vt2, vt0 GROUP BY vt2.c0, vt0.c1;
SELECT ALL vt2.c0, vt0.c1 FROM vt2, vt0 WHERE (CASE (~ ('2]z	wXb'))  WHEN ((vt0.c1) IS TRUE) THEN CAST(vt2.c0 AS REAL) END) GROUP BY vt2.c0, vt0.c1 UNION SELECT ALL vt2.c0, vt0.c1 FROM vt2, vt0 WHERE ((NOT (CASE (~ ('2]z	wXb'))  WHEN ((vt0.c1) IS TRUE) THEN CAST(vt2.c0 AS REAL) END))) GROUP BY vt2.c0, vt0.c1 UNION SELECT ALL vt2.c0, vt0.c1 FROM vt2, vt0 WHERE (((CASE (~ ('2]z	wXb'))  WHEN ((vt0.c1) IS TRUE) THEN CAST(vt2.c0 AS REAL) END) ISNULL)) GROUP BY vt2.c0, vt0.c1;
SELECT vt2.c0, vt0.c1 FROM vt2, vt0 GROUP BY vt2.c0, vt0.c1;
SELECT vt0.c0 FROM vt0 NATURAL JOIN vt1 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 NATURAL JOIN vt1 GROUP BY vt0.c0 HAVING ((MIN(COUNT(AVG(COUNT(*)))))>(GROUP_CONCAT(COUNT(MIN(TOTAL(MAX(vt1.c0))))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 NATURAL JOIN vt1 GROUP BY vt0.c0 HAVING (NOT (((MIN(COUNT(AVG(COUNT(*)))))>(GROUP_CONCAT(COUNT(MIN(TOTAL(MAX(vt1.c0))))))))) UNION ALL SELECT vt0.c0 FROM vt0 NATURAL JOIN vt1 GROUP BY vt0.c0 HAVING ((((MIN(COUNT(AVG(COUNT(*)))))>(GROUP_CONCAT(COUNT(MIN(TOTAL(MAX(vt1.c0)))))))) ISNULL);
SELECT * FROM vt2, vt0, vt1;
SELECT * FROM vt2, vt0, vt1 WHERE (((((((((((vt0.c1) NOT NULL))OR(vt0.c1 COLLATE NOCASE)))AND(COALESCE(vt0.c0, vt0.c1, vt0.c0, vt1.c0))))OR(((vt1.c0)<<(vt2.c0)))))AND(((((vt2.c0)AND(vt0.c0)))AND(vt2.c0))))) UNION ALL SELECT ALL * FROM vt2, vt0, vt1 WHERE ((NOT (((((((((((vt0.c1) NOT NULL))OR(vt0.c1 COLLATE NOCASE)))AND(COALESCE(vt0.c0, vt0.c1, vt0.c0, vt1.c0))))OR(((vt1.c0)<<(vt2.c0)))))AND(((((vt2.c0)AND(vt0.c0)))AND(vt2.c0))))))) UNION ALL SELECT * FROM vt2, vt0, vt1 WHERE (((((((((((((vt0.c1) NOT NULL))OR(vt0.c1 COLLATE NOCASE)))AND(COALESCE(vt0.c0, vt0.c1, vt0.c0, vt1.c0))))OR(((vt1.c0)<<(vt2.c0)))))AND(((((vt2.c0)AND(vt0.c0)))AND(vt2.c0))))) ISNULL));
SELECT * FROM vt2, vt0, vt1;
SELECT DISTINCT * FROM vt2, vt1 NATURAL JOIN vt0;
SELECT DISTINCT * FROM vt2, vt1 NATURAL JOIN vt0 WHERE (((((vt1.c0)<<(vt0.c0)))=(vt0.c0))) UNION SELECT DISTINCT * FROM vt2, vt1 NATURAL JOIN vt0 WHERE ((NOT (((((vt1.c0)<<(vt0.c0)))=(vt0.c0))))) UNION SELECT DISTINCT * FROM vt2, vt1 NATURAL JOIN vt0 WHERE (((((((vt1.c0)<<(vt0.c0)))==(vt0.c0))) ISNULL));
SELECT DISTINCT * FROM vt2, vt1 NATURAL JOIN vt0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE (((((x'') NOT BETWEEN (vt1.c0) AND (vt1.c0))) ISNULL)) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT (((((x'') NOT BETWEEN (vt1.c0) AND (vt1.c0))) ISNULL)))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE (((((((x'') NOT BETWEEN (vt1.c0) AND (vt1.c0))) ISNULL)) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0, vt0.c1 FROM vt0, vt2, vt1 GROUP BY vt1.c0, vt0.c1;
SELECT ALL vt1.c0, vt0.c1 FROM vt0, vt2, vt1 GROUP BY vt1.c0, vt0.c1 HAVING MIN(TOTAL(AVG(COUNT(*)))) UNION ALL SELECT ALL vt1.c0, vt0.c1 FROM vt0, vt2, vt1 GROUP BY vt1.c0, vt0.c1 HAVING (NOT (MIN(TOTAL(AVG(COUNT(*)))))) UNION ALL SELECT ALL vt1.c0, vt0.c1 FROM vt0, vt2, vt1 GROUP BY vt1.c0, vt0.c1 HAVING ((MIN(TOTAL(AVG(COUNT(*))))) ISNULL);
SELECT vt0.c1, vt0.c0 FROM vt0;
SELECT vt0.c1, vt0.c0 FROM vt0 WHERE ((((vt0.c1))<((((vt0.c0) BETWEEN (NULL) AND (vt0.c0)))))) UNION ALL SELECT vt0.c1, vt0.c0 FROM vt0 WHERE ((NOT ((((vt0.c1))<((((vt0.c0) BETWEEN (NULL) AND (vt0.c0)))))))) UNION ALL SELECT vt0.c1, vt0.c0 FROM vt0 WHERE ((((((vt0.c1))<((((vt0.c0) BETWEEN (NULL) AND (vt0.c0)))))) ISNULL));
SELECT vt0.c1, vt0.c0 FROM vt0;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (((LOWER(DISTINCT vt1.c0))LIKE((((x'0d55')) BETWEEN ((vt1.c0)) AND ((vt1.c0)))))) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (((LOWER(DISTINCT vt1.c0))LIKE((((x'0d55')) BETWEEN ((vt1.c0)) AND ((vt1.c0)))))))) UNION SELECT DISTINCT * FROM vt1 WHERE (((((LOWER(DISTINCT vt1.c0))LIKE((((x'0d55')) BETWEEN ((vt1.c0)) AND ((vt1.c0)))))) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT vt2.c0, vt1.c0, vt0.c1 FROM vt0, vt1, vt2 GROUP BY vt2.c0, vt1.c0, vt0.c1;
SELECT vt2.c0, vt1.c0, vt0.c1 FROM vt0, vt1, vt2 WHERE (LIKELIHOOD(DISTINCT ((vt0.c0)!=(vt0.c1)), 0.24973807248197555)) GROUP BY vt2.c0, vt1.c0, vt0.c1 UNION SELECT vt2.c0, vt1.c0, vt0.c1 FROM vt0, vt1 NOT INDEXED, vt2 WHERE ((NOT (LIKELIHOOD(DISTINCT ((vt0.c0)!=(vt0.c1)), 0.24973807248197555)))) GROUP BY vt2.c0, vt1.c0, vt0.c1 UNION SELECT ALL vt2.c0, vt1.c0, vt0.c1 FROM vt0, vt1, vt2 WHERE (((LIKELIHOOD(DISTINCT ((vt0.c0)!=(vt0.c1)), 0.24973807248197555)) ISNULL)) GROUP BY vt2.c0, vt1.c0, vt0.c1;
SELECT vt2.c0, vt1.c0, vt0.c1 FROM vt0, vt1, vt2 GROUP BY vt2.c0, vt1.c0, vt0.c1;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING GROUP_CONCAT(CASE vt0.c0  WHEN AVG(vt0.c0) THEN MAX(vt0.c0) ELSE COUNT(*) END) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (GROUP_CONCAT(CASE vt0.c0  WHEN AVG(vt0.c0) THEN MAX(vt0.c0) ELSE COUNT(*) END))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((GROUP_CONCAT(CASE vt0.c0  WHEN AVG(vt0.c0) THEN MAX(vt0.c0) ELSE COUNT(*) END)) ISNULL);
SELECT vt1.c0, vt2.c0 FROM vt2, vt1;
SELECT vt1.c0, vt2.c0 FROM vt2, vt1 WHERE (((((((vt2.c0)OR(vt1.c0)))OR(vt1.c0))) NOT BETWEEN (((vt2.c0)GLOB(vt1.c0))) AND ('-858094640' COLLATE RTRIM))) UNION ALL SELECT ALL vt1.c0, vt2.c0 FROM vt2, vt1 WHERE ((NOT (((((((vt2.c0)OR(vt1.c0)))OR(vt1.c0))) NOT BETWEEN (((vt2.c0)GLOB(vt1.c0))) AND ('-858094640' COLLATE RTRIM))))) UNION ALL SELECT ALL vt1.c0, vt2.c0 FROM vt2, vt1 WHERE (((((((((vt2.c0)OR(vt1.c0)))OR(vt1.c0))) NOT BETWEEN (((vt2.c0)GLOB(vt1.c0))) AND ('-858094640' COLLATE RTRIM))) ISNULL));
SELECT vt1.c0, vt2.c0 FROM vt2, vt1;
SELECT DISTINCT vt0.c1 FROM vt0;
SELECT DISTINCT vt0.c1 FROM vt0 WHERE (((((vt0.c1)-(vt0.c1))) NOT BETWEEN (CASE WHEN vt0.c1 THEN '-828632896' WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN x'' END) AND (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) UNION SELECT DISTINCT vt0.c1 FROM vt0 WHERE ((NOT (((((vt0.c1)-(vt0.c1))) NOT BETWEEN (CASE WHEN vt0.c1 THEN '-828632896' WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN x'' END) AND (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))))) UNION SELECT DISTINCT vt0.c1 FROM vt0 WHERE (((((((vt0.c1)-(vt0.c1))) NOT BETWEEN (CASE WHEN vt0.c1 THEN '-828632896' WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN x'' END) AND (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) ISNULL));
SELECT DISTINCT vt0.c1 FROM vt0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE (((TRIM(0.3728781567809647))=((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (((TRIM(0.3728781567809647))=((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE (((((TRIM(0.3728781567809647))==((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))))) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt0.c1 FROM vt0, vt2 GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0, vt2 GROUP BY vt0.c1 HAVING ((TOTAL(vt0.c0)) NOTNULL) UNION ALL SELECT vt0.c1 FROM vt0, vt2 GROUP BY vt0.c1 HAVING (NOT (((TOTAL(vt0.c0)) NOTNULL))) UNION ALL SELECT vt0.c1 FROM vt0, vt2 GROUP BY vt0.c1 HAVING ((((TOTAL(vt0.c0)) NOTNULL)) ISNULL);
SELECT ALL vt0.c1 FROM vt0, vt2 GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0, vt2 GROUP BY vt0.c1 HAVING ((TOTAL(vt0.c0)) NOTNULL) UNION ALL SELECT vt0.c1 FROM vt0, vt2 GROUP BY vt0.c1 HAVING (NOT (((TOTAL(vt0.c0)) NOTNULL))) UNION ALL SELECT vt0.c1 FROM vt0, vt2 GROUP BY vt0.c1 HAVING ((((TOTAL(vt0.c0)) NOTNULL)) ISNULL);
SELECT ALL vt0.c1 FROM vt0, vt2 GROUP BY vt0.c1;
SELECT * FROM vt2, vt0, vt1;
SELECT * FROM vt2, vt0, vt1 WHERE ((((vt0.c0)) BETWEEN ((((((vt1.c0)OR(vt0.c0)))AND(vt0.c0)))) AND ((LIKELY(vt0.c0))))) UNION ALL SELECT ALL * FROM vt2, vt0, vt1 WHERE ((NOT ((((vt0.c0)) BETWEEN ((((((vt1.c0)OR(vt0.c0)))AND(vt0.c0)))) AND ((LIKELY(vt0.c0))))))) UNION ALL SELECT ALL * FROM vt2, vt0 NOT INDEXED, vt1 WHERE ((((((vt0.c0)) BETWEEN ((((((vt1.c0)OR(vt0.c0)))AND(vt0.c0)))) AND ((LIKELY(vt0.c0))))) ISNULL));
SELECT * FROM vt2, vt0, vt1;
SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0 WHERE (UNLIKELY(CAST(vt0.c0 AS NUMERIC))) UNION SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0 WHERE ((NOT (UNLIKELY(CAST(vt0.c0 AS NUMERIC))))) UNION SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0 WHERE (((UNLIKELY(CAST(vt0.c0 AS NUMERIC))) ISNULL));
SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0;
SELECT vt0.c1, vt1.c0, vt2.c0 FROM vt0 FULL OUTER JOIN vt1 ON (((((+ (vt0.c1)))AND((vt2.c0 IN ()))))AND((((vt2.c0, vt2.c0, vt0.c1, vt2.c0, NULL)) BETWEEN ((3.88229571E8, vt2.c0, vt1.c0, vt0.c1, vt2.c0)) AND ((vt0.c0, vt0.c0, vt2.c0, vt0.c1, vt0.c1))))) INNER JOIN vt2 ON (((vt2.c0, vt0.c0, vt1.c0)) BETWEEN ((vt0.c1, vt1.c0, NULL)) AND ((vt1.c0, vt0.c1, vt2.c0))) COLLATE NOCASE GROUP BY vt0.c1, vt1.c0, vt2.c0;
SELECT vt0.c1, vt1.c0, vt2.c0 FROM vt0 FULL OUTER JOIN vt1 ON (((((+ (vt0.c1)))AND((vt2.c0 IN ()))))AND((((vt2.c0, vt2.c0, vt0.c1, vt2.c0, NULL)) BETWEEN ((3.88229571E8, vt2.c0, vt1.c0, vt0.c1, vt2.c0)) AND ((vt0.c0, vt0.c0, vt2.c0, vt0.c1, vt0.c1))))) INNER JOIN vt2 ON (((vt2.c0, vt0.c0, vt1.c0)) BETWEEN ((vt0.c1, vt1.c0, NULL)) AND ((vt1.c0, vt0.c1, vt2.c0))) COLLATE NOCASE WHERE ((((((((vt0.c1, vt0.c1, vt0.c1, vt0.c0, vt2.c0)) BETWEEN (('8.''+!', vt0.c1, '-1110779318', vt0.c0, vt1.c0)) AND (('YCBQ}B', vt0.c0, vt2.c0, vt0.c1, vt0.c0))))AND((- (vt1.c0)))))AND(vt2.c0 COLLATE RTRIM))) GROUP BY vt0.c1, vt1.c0, vt2.c0 UNION SELECT ALL vt0.c1, vt1.c0, vt2.c0 FROM vt0 FULL OUTER JOIN vt1 ON (((((+ (vt0.c1)))AND((vt2.c0 IN ()))))AND((((vt2.c0, vt2.c0, vt0.c1, vt2.c0, NULL)) BETWEEN ((3.88229571E8, vt2.c0, vt1.c0, vt0.c1, vt2.c0)) AND ((vt0.c0, vt0.c0, vt2.c0, vt0.c1, vt0.c1))))) INNER JOIN vt2 ON (((vt2.c0, vt0.c0, vt1.c0)) BETWEEN ((vt0.c1, vt1.c0, NULL)) AND ((vt1.c0, vt0.c1, vt2.c0))) COLLATE NOCASE WHERE ((NOT ((((((((vt0.c1, vt0.c1, vt0.c1, vt0.c0, vt2.c0)) BETWEEN (('8.''+!', vt0.c1, '-1110779318', vt0.c0, vt1.c0)) AND (('YCBQ}B', vt0.c0, vt2.c0, vt0.c1, vt0.c0))))AND((- (vt1.c0)))))AND(vt2.c0 COLLATE RTRIM))))) GROUP BY vt0.c1, vt1.c0, vt2.c0 UNION SELECT ALL vt0.c1, vt1.c0, vt2.c0 FROM vt0 FULL OUTER JOIN vt1 ON (((((+ (vt0.c1)))AND((vt2.c0 IN ()))))AND((((vt2.c0, vt2.c0, vt0.c1, vt2.c0, NULL)) BETWEEN ((3.88229571E8, vt2.c0, vt1.c0, vt0.c1, vt2.c0)) AND ((vt0.c0, vt0.c0, vt2.c0, vt0.c1, vt0.c1))))) INNER JOIN vt2 ON (((vt2.c0, vt0.c0, vt1.c0)) BETWEEN ((vt0.c1, vt1.c0, NULL)) AND ((vt1.c0, vt0.c1, vt2.c0))) COLLATE NOCASE WHERE ((((((((((vt0.c1, vt0.c1, vt0.c1, vt0.c0, vt2.c0)) BETWEEN (('8.''+!', vt0.c1, '-1110779318', vt0.c0, vt1.c0)) AND (('YCBQ}B', vt0.c0, vt2.c0, vt0.c1, vt0.c0))))AND((- (vt1.c0)))))AND(vt2.c0 COLLATE RTRIM))) ISNULL)) GROUP BY vt0.c1, vt1.c0, vt2.c0;
SELECT vt0.c1, vt1.c0, vt2.c0 FROM vt0 FULL OUTER JOIN vt1 ON (((((+ (vt0.c1)))AND((vt2.c0 IN ()))))AND((((vt2.c0, vt2.c0, vt0.c1, vt2.c0, NULL)) BETWEEN ((3.88229571E8, vt2.c0, vt1.c0, vt0.c1, vt2.c0)) AND ((vt0.c0, vt0.c0, vt2.c0, vt0.c1, vt0.c1))))) INNER JOIN vt2 ON (((vt2.c0, vt0.c0, vt1.c0)) BETWEEN ((vt0.c1, vt1.c0, NULL)) AND ((vt1.c0, vt0.c1, vt2.c0))) COLLATE NOCASE GROUP BY vt0.c1, vt1.c0, vt2.c0;
SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING (((CASE MAX(TOTAL(vt2.c0))  WHEN vt2.c0 THEN vt2.c0 ELSE COUNT(*) END, 1196401459, (- (vt2.c0))))<((HEX(vt2.c0), ((TOTAL(TOTAL(vt2.c0)))AND(COUNT(*))), ((MAX(AVG(vt2.c0))) BETWEEN (NULL) AND (TOTAL(COUNT(*))))))) UNION ALL SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING (NOT ((((CASE MAX(TOTAL(vt2.c0))  WHEN vt2.c0 THEN vt2.c0 ELSE COUNT(*) END, 1196401459, (- (vt2.c0))))<((HEX(vt2.c0), ((TOTAL(TOTAL(vt2.c0)))AND(COUNT(*))), ((MAX(AVG(vt2.c0))) BETWEEN (NULL) AND (TOTAL(COUNT(*))))))))) UNION ALL SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING (((((CASE MAX(TOTAL(vt2.c0))  WHEN vt2.c0 THEN vt2.c0 ELSE COUNT(*) END, 1196401459, (- (vt2.c0))))<((HEX(vt2.c0), ((TOTAL(TOTAL(vt2.c0)))AND(COUNT(*))), ((MAX(AVG(vt2.c0))) BETWEEN (NULL) AND (TOTAL(COUNT(*)))))))) ISNULL);
SELECT ALL vt1.c0 FROM vt1, vt2;
SELECT vt1.c0 FROM vt1, vt2 WHERE (CASE ((vt2.c0) NOT BETWEEN (vt1.c0) AND (vt2.c0))  WHEN (- (vt2.c0)) THEN UPPER(vt2.c0) WHEN IFNULL(vt1.c0, vt2.c0) THEN ((0.38133389702954135) NOTNULL) WHEN ((vt1.c0)>>(vt1.c0)) THEN vt1.c0 COLLATE RTRIM ELSE CAST(vt1.c0 AS BLOB) END) UNION ALL SELECT vt1.c0 FROM vt1, vt2 WHERE ((NOT (CASE ((vt2.c0) NOT BETWEEN (vt1.c0) AND (vt2.c0))  WHEN (- (vt2.c0)) THEN UPPER(vt2.c0) WHEN IFNULL(vt1.c0, vt2.c0) THEN ((0.38133389702954135) NOTNULL) WHEN ((vt1.c0)>>(vt1.c0)) THEN vt1.c0 COLLATE RTRIM ELSE CAST(vt1.c0 AS BLOB) END))) UNION ALL SELECT vt1.c0 FROM vt1, vt2 WHERE (((CASE ((vt2.c0) NOT BETWEEN (vt1.c0) AND (vt2.c0))  WHEN (- (vt2.c0)) THEN UPPER(vt2.c0) WHEN IFNULL(vt1.c0, vt2.c0) THEN ((0.38133389702954135) NOTNULL) WHEN ((vt1.c0)>>(vt1.c0)) THEN vt1.c0 COLLATE RTRIM ELSE CAST(vt1.c0 AS BLOB) END) ISNULL));
SELECT ALL vt1.c0 FROM vt1, vt2;
SELECT DISTINCT * FROM vt0, vt2, vt1;
SELECT DISTINCT * FROM vt0, vt2, vt1 WHERE (CAST((~ (vt0.c0)) AS INTEGER)) UNION SELECT DISTINCT * FROM vt0, vt2, vt1 WHERE ((NOT (CAST((~ (vt0.c0)) AS INTEGER)))) UNION SELECT DISTINCT * FROM vt0, vt2, vt1 WHERE (((CAST((~ (vt0.c0)) AS INTEGER)) ISNULL));
SELECT DISTINCT * FROM vt0, vt2, vt1;
SELECT vt0.c1, vt0.c0, vt2.c0, vt1.c0 FROM vt0, vt2 LEFT OUTER JOIN vt1 ON ((CAST(vt0.c0 AS TEXT))LIKE(((vt0.c1) NOT BETWEEN (vt1.c0) AND (vt1.c0)))) GROUP BY vt0.c1, vt0.c0, vt2.c0, vt1.c0;
SELECT vt0.c1, vt0.c0, vt2.c0, vt1.c0 FROM vt0, vt2 LEFT OUTER JOIN vt1 ON ((CAST(vt0.c0 AS TEXT))LIKE(((vt0.c1) NOT BETWEEN (vt1.c0) AND (vt1.c0)))) WHERE ((((((vt0.c1)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))>=(vt0.c0 COLLATE BINARY))) GROUP BY vt0.c1, vt0.c0, vt2.c0, vt1.c0 UNION SELECT vt0.c1, vt0.c0, vt2.c0, vt1.c0 FROM vt0, vt2 LEFT OUTER JOIN vt1 ON ((CAST(vt0.c0 AS TEXT))LIKE(((vt0.c1) NOT BETWEEN (vt1.c0) AND (vt1.c0)))) WHERE ((NOT ((((((vt0.c1)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))>=(vt0.c0 COLLATE BINARY))))) GROUP BY vt0.c1, vt0.c0, vt2.c0, vt1.c0 UNION SELECT vt0.c1, vt0.c0, vt2.c0, vt1.c0 FROM vt0, vt2 LEFT OUTER JOIN vt1 ON ((CAST(vt0.c0 AS TEXT))LIKE(((vt0.c1) NOT BETWEEN (vt1.c0) AND (vt1.c0)))) WHERE ((((((((vt0.c1)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))>=(vt0.c0 COLLATE BINARY))) ISNULL)) GROUP BY vt0.c1, vt0.c0, vt2.c0, vt1.c0;
SELECT vt0.c1, vt0.c0, vt2.c0, vt1.c0 FROM vt0, vt2 LEFT OUTER JOIN vt1 ON ((CAST(vt0.c0 AS TEXT))LIKE(((vt0.c1) NOT BETWEEN (vt1.c0) AND (vt1.c0)))) GROUP BY vt0.c1, vt0.c0, vt2.c0, vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (GROUP_CONCAT(vt1.c0) IN (((vt1.c0)-(TOTAL(MAX(COUNT(vt1.c0))))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT ((GROUP_CONCAT(vt1.c0) IN (((vt1.c0)-(TOTAL(MAX(COUNT(vt1.c0))))))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (((GROUP_CONCAT(vt1.c0) IN (((vt1.c0)-(TOTAL(MAX(COUNT(vt1.c0)))))))) ISNULL);
SELECT MAX(CAST((+ (vt1.c0)) AS NUMERIC)) FROM vt1, vt0 ORDER BY ((vt0.c1) BETWEEN (IFNULL(DISTINCT vt0.c1, x'd1b1')) AND (vt0.c0));
SELECT vt1.c0 FROM vt1;
SELECT vt1.c0 FROM vt1 WHERE ((((vt1.c0))<((((vt1.c0)-(vt1.c0)))))) UNION ALL SELECT vt1.c0 FROM vt1 WHERE ((NOT ((((vt1.c0))<((((vt1.c0)-(vt1.c0)))))))) UNION ALL SELECT vt1.c0 FROM vt1 WHERE ((((((vt1.c0))<((((vt1.c0)-(vt1.c0)))))) ISNULL));
SELECT vt1.c0 FROM vt1;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (((((vt1.c0)>>(0.6186668317181157)))AND(vt1.c0 COLLATE NOCASE))) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (((((vt1.c0)>>(0.6186668317181157)))AND(vt1.c0 COLLATE NOCASE))))) UNION SELECT DISTINCT * FROM vt1 WHERE (((((((vt1.c0)>>(0.6186668317181157)))AND(vt1.c0 COLLATE NOCASE))) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0 WHERE ((((((((('0.6369059181489499')OR(vt0.c0)))OR(vt0.c1)))AND(vt0.c1)))AND(vt0.c0)) COLLATE BINARY) GROUP BY vt0.c1 UNION SELECT ALL vt0.c1 FROM vt0 WHERE ((NOT ((((((((('0.6369059181489499')OR(vt0.c0)))OR(vt0.c1)))AND(vt0.c1)))AND(vt0.c0)) COLLATE BINARY))) GROUP BY vt0.c1 UNION SELECT vt0.c1 FROM vt0 WHERE ((((((((((('0.6369059181489499')OR(vt0.c0)))OR(vt0.c1)))AND(vt0.c1)))AND(vt0.c0)) COLLATE BINARY) ISNULL)) GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (((TOTAL(COUNT(*)))) NOT BETWEEN ((MIN(COUNT(vt1.c0)))) AND ((((SUM(vt1.c0))IS(TOTAL(vt1.c0)))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT ((((TOTAL(COUNT(*)))) NOT BETWEEN ((MIN(COUNT(vt1.c0)))) AND ((((SUM(vt1.c0))IS(TOTAL(vt1.c0)))))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (((((TOTAL(COUNT(*)))) NOT BETWEEN ((MIN(COUNT(vt1.c0)))) AND ((((SUM(vt1.c0))IS(TOTAL(vt1.c0))))))) ISNULL);
SELECT vt0.c1, vt1.c0 FROM vt2, vt0, vt1;
SELECT ALL vt0.c1, vt1.c0 FROM vt2, vt0, vt1 WHERE (((+ (vt0.c1)) IN ())) UNION ALL SELECT vt0.c1, vt1.c0 FROM vt2, vt0, vt1 WHERE ((NOT (((+ (vt0.c1)) IN ())))) UNION ALL SELECT ALL vt0.c1, vt1.c0 FROM vt2, vt0, vt1 WHERE (((((+ (vt0.c1)) IN ())) ISNULL));
SELECT vt0.c1, vt1.c0 FROM vt2, vt0, vt1;
SELECT DISTINCT vt1.c0, vt2.c0, vt0.c1 FROM vt2, vt1, vt0;
SELECT DISTINCT vt1.c0, vt2.c0, vt0.c1 FROM vt2, vt1, vt0 WHERE ((NOT ((((0.9947691300770066)) NOT BETWEEN ((3.76337359E8)) AND ((vt0.c1)))))) UNION SELECT DISTINCT vt1.c0, vt2.c0, vt0.c1 FROM vt2, vt1, vt0 WHERE ((NOT ((NOT ((((0.9947691300770066)) NOT BETWEEN ((3.76337359E8)) AND ((vt0.c1)))))))) UNION SELECT DISTINCT vt1.c0, vt2.c0, vt0.c1 FROM vt2, vt1, vt0 WHERE ((((NOT ((((0.9947691300770066)) NOT BETWEEN ((3.76337359E8)) AND ((vt0.c1)))))) ISNULL));
SELECT DISTINCT vt1.c0, vt2.c0, vt0.c1 FROM vt2, vt1, vt0;
SELECT ALL vt1.c0, vt0.c0, vt0.c1, vt2.c0 FROM vt0, vt2, vt1 GROUP BY vt1.c0, vt0.c0, vt0.c1, vt2.c0;
SELECT ALL vt1.c0, vt0.c0, vt0.c1, vt2.c0 FROM vt0, vt2, vt1 WHERE (DATETIME(CASE WHEN vt2.c0 THEN vt2.c0 ELSE vt1.c0 END, ((((vt1.c0)AND(vt2.c0)))AND(vt2.c0)), ((vt2.c0)IS NOT(vt0.c0)))) GROUP BY vt1.c0, vt0.c0, vt0.c1, vt2.c0 UNION SELECT vt1.c0, vt0.c0, vt0.c1, vt2.c0 FROM vt0, vt2, vt1 WHERE ((NOT (DATETIME(CASE WHEN vt2.c0 THEN vt2.c0 ELSE vt1.c0 END, ((((vt1.c0)AND(vt2.c0)))AND(vt2.c0)), ((vt2.c0)IS NOT(vt0.c0)))))) GROUP BY vt1.c0, vt0.c0, vt0.c1, vt2.c0 UNION SELECT vt1.c0, vt0.c0, vt0.c1, vt2.c0 FROM vt0, vt2, vt1 WHERE (((DATETIME(CASE WHEN vt2.c0 THEN vt2.c0 ELSE vt1.c0 END, ((((vt1.c0)AND(vt2.c0)))AND(vt2.c0)), ((vt2.c0)IS NOT(vt0.c0)))) ISNULL)) GROUP BY vt1.c0, vt0.c0, vt0.c1, vt2.c0;
SELECT ALL vt1.c0, vt0.c0, vt0.c1, vt2.c0 FROM vt0, vt2, vt1 GROUP BY vt1.c0, vt0.c0, vt0.c1, vt2.c0;
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING ((COUNT(COUNT(*)))<<(HEX(DISTINCT GROUP_CONCAT(TOTAL(MAX(COUNT(*))))))) UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING (NOT (((COUNT(COUNT(*)))<<(HEX(DISTINCT GROUP_CONCAT(TOTAL(MAX(COUNT(*))))))))) UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING ((((COUNT(COUNT(*)))<<(HEX(DISTINCT GROUP_CONCAT(TOTAL(MAX(COUNT(*)))))))) ISNULL);
SELECT ALL vt1.c0, vt0.c0, vt0.c1, vt2.c0 FROM vt0, vt1, vt2;
SELECT vt1.c0, vt0.c0, vt0.c1, vt2.c0 FROM vt0, vt1, vt2 WHERE (((TIME(0.3366752983058007, vt0.c1, vt0.c0))AND(((((vt0.c1)AND(vt1.c0)))OR(vt0.c0))))) UNION ALL SELECT ALL vt1.c0, vt0.c0, vt0.c1, vt2.c0 FROM vt0, vt1, vt2 WHERE ((NOT (((TIME(0.3366752983058007, vt0.c1, vt0.c0))AND(((((vt0.c1)AND(vt1.c0)))OR(vt0.c0))))))) UNION ALL SELECT ALL vt1.c0, vt0.c0, vt0.c1, vt2.c0 FROM vt0, vt1, vt2 WHERE (((((TIME(0.3366752983058007, vt0.c1, vt0.c0))AND(((((vt0.c1)AND(vt1.c0)))OR(vt0.c0))))) ISNULL));
SELECT ALL vt1.c0, vt0.c0, vt0.c1, vt2.c0 FROM vt0, vt1, vt2;
SELECT DISTINCT vt2.c0, vt0.c1 FROM vt2, vt0;
SELECT DISTINCT vt2.c0, vt0.c1 FROM vt2, vt0 WHERE (vt0.c0) UNION SELECT DISTINCT vt2.c0, vt0.c1 FROM vt2, vt0 WHERE ((NOT (vt0.c0))) UNION SELECT DISTINCT vt2.c0, vt0.c1 FROM vt2, vt0 WHERE (((vt0.c0) ISNULL));
SELECT DISTINCT vt2.c0, vt0.c1 FROM vt2, vt0;
SELECT vt0.c0, vt2.c0, vt1.c0, vt0.c1 FROM vt2 CROSS JOIN vt0 ON CASE ((vt2.c0)OR(NULL))  WHEN ((vt0.c1)%(vt2.c0)) THEN CAST(vt0.c1 AS NUMERIC) END RIGHT OUTER JOIN vt1 ON ((((LIKELIHOOD(DISTINCT vt2.c0, 0.15553728051167093))OR(vt0.c0 COLLATE BINARY)))OR((NOT (vt1.c0)))) GROUP BY vt0.c0, vt2.c0, vt1.c0, vt0.c1;
SELECT ALL vt0.c0, vt2.c0, vt1.c0, vt0.c1 FROM vt2 CROSS JOIN vt0 ON CASE ((vt2.c0)OR(NULL))  WHEN ((vt0.c1)%(vt2.c0)) THEN CAST(vt0.c1 AS NUMERIC) END RIGHT OUTER JOIN vt1 ON ((((LIKELIHOOD(DISTINCT vt2.c0, 0.15553728051167093))OR(vt0.c0 COLLATE BINARY)))OR((NOT (vt1.c0)))) WHERE (vt0.c1) GROUP BY vt0.c0, vt2.c0, vt1.c0, vt0.c1 UNION SELECT vt0.c0, vt2.c0, vt1.c0, vt0.c1 FROM vt2 CROSS JOIN vt0 ON CASE ((vt2.c0)OR(NULL))  WHEN ((vt0.c1)%(vt2.c0)) THEN CAST(vt0.c1 AS NUMERIC) END RIGHT OUTER JOIN vt1 ON ((((LIKELIHOOD(DISTINCT vt2.c0, 0.15553728051167093))OR(vt0.c0 COLLATE BINARY)))OR((NOT (vt1.c0)))) WHERE ((NOT (vt0.c1))) GROUP BY vt0.c0, vt2.c0, vt1.c0, vt0.c1 UNION SELECT ALL vt0.c0, vt2.c0, vt1.c0, vt0.c1 FROM vt2 CROSS JOIN vt0 ON CASE ((vt2.c0)OR(NULL))  WHEN ((vt0.c1)%(vt2.c0)) THEN CAST(vt0.c1 AS NUMERIC) END RIGHT OUTER JOIN vt1 ON ((((LIKELIHOOD(DISTINCT vt2.c0, 0.15553728051167093))OR(vt0.c0 COLLATE BINARY)))OR((NOT (vt1.c0)))) WHERE (((vt0.c1) ISNULL)) GROUP BY vt0.c0, vt2.c0, vt1.c0, vt0.c1;
SELECT vt0.c0, vt2.c0, vt1.c0, vt0.c1 FROM vt2 CROSS JOIN vt0 ON CASE ((vt2.c0)OR(NULL))  WHEN ((vt0.c1)%(vt2.c0)) THEN CAST(vt0.c1 AS NUMERIC) END RIGHT OUTER JOIN vt1 ON ((((LIKELIHOOD(DISTINCT vt2.c0, 0.15553728051167093))OR(vt0.c0 COLLATE BINARY)))OR((NOT (vt1.c0)))) GROUP BY vt0.c0, vt2.c0, vt1.c0, vt0.c1;
SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING (NOT (TOTAL(vt2.c0))) UNION ALL SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING (NOT ((NOT (TOTAL(vt2.c0))))) UNION ALL SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING (((NOT (TOTAL(vt2.c0)))) ISNULL);
SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING (NOT (TOTAL(vt2.c0))) UNION ALL SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING (NOT ((NOT (TOTAL(vt2.c0))))) UNION ALL SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING (((NOT (TOTAL(vt2.c0)))) ISNULL);
SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT ALL * FROM vt1;
SELECT ALL * FROM vt1 WHERE ((~ (((vt1.c0)<(vt1.c0))))) UNION ALL SELECT * FROM vt1 WHERE ((NOT ((~ (((vt1.c0)<(vt1.c0))))))) UNION ALL SELECT * FROM vt1 WHERE ((((~ (((vt1.c0)<(vt1.c0))))) ISNULL));
SELECT ALL * FROM vt1;
SELECT DISTINCT vt2.c0, vt0.c0 FROM vt2, vt0, vt1;
SELECT DISTINCT vt2.c0, vt0.c0 FROM vt2, vt0, vt1 WHERE (((((LIKELIHOOD(DISTINCT vt0.c0, 0.2803401002753235))OR(load_extension(vt2.c0))))OR((~ (vt0.c1))))) UNION SELECT DISTINCT vt2.c0, vt0.c0 FROM vt2, vt0, vt1 WHERE ((NOT (((((LIKELIHOOD(DISTINCT vt0.c0, 0.2803401002753235))OR(load_extension(vt2.c0))))OR((~ (vt0.c1))))))) UNION SELECT DISTINCT vt2.c0, vt0.c0 FROM vt2, vt0, vt1 WHERE (((((((LIKELIHOOD(DISTINCT vt0.c0, 0.2803401002753235))OR(load_extension(vt2.c0))))OR((~ (vt0.c1))))) ISNULL));
SELECT DISTINCT vt2.c0, vt0.c0 FROM vt2, vt0, vt1;
SELECT vt2.c0, vt0.c1, vt0.c0 FROM vt1, vt0, vt2 GROUP BY vt2.c0, vt0.c1, vt0.c0;
SELECT ALL vt2.c0, vt0.c1, vt0.c0 FROM vt1, vt0, vt2 WHERE ((((((NOT (vt2.c0)))OR(CASE WHEN vt1.c0 THEN NULL WHEN vt0.c0 THEN vt0.c1 WHEN vt2.c0 THEN vt0.c1 END)))OR(((vt0.c1)>>(vt0.c1))))) GROUP BY vt2.c0, vt0.c1, vt0.c0 UNION SELECT ALL vt2.c0, vt0.c1, vt0.c0 FROM vt1, vt0, vt2 WHERE ((NOT ((((((NOT (vt2.c0)))OR(CASE WHEN vt1.c0 THEN NULL WHEN vt0.c0 THEN vt0.c1 WHEN vt2.c0 THEN vt0.c1 END)))OR(((vt0.c1)>>(vt0.c1))))))) GROUP BY vt2.c0, vt0.c1, vt0.c0 UNION SELECT ALL vt2.c0, vt0.c1, vt0.c0 FROM vt1, vt0, vt2 WHERE ((((((((NOT (vt2.c0)))OR(CASE WHEN vt1.c0 THEN NULL WHEN vt0.c0 THEN vt0.c1 WHEN vt2.c0 THEN vt0.c1 END)))OR(((vt0.c1)>>(vt0.c1))))) ISNULL)) GROUP BY vt2.c0, vt0.c1, vt0.c0;
SELECT vt2.c0, vt0.c1, vt0.c0 FROM vt1, vt0, vt2 GROUP BY vt2.c0, vt0.c1, vt0.c0;
SELECT vt0.c1, vt2.c0, vt0.c0 FROM vt2 NATURAL JOIN vt0 GROUP BY vt0.c1, vt2.c0, vt0.c0;
SELECT ALL vt0.c1, vt2.c0, vt0.c0 FROM vt2 NATURAL JOIN vt0 GROUP BY vt0.c1, vt2.c0, vt0.c0 HAVING GROUP_CONCAT(((vt2.c0) NOTNULL)) UNION ALL SELECT vt0.c1, vt2.c0, vt0.c0 FROM vt2 NATURAL JOIN vt0 GROUP BY vt0.c1, vt2.c0, vt0.c0 HAVING (NOT (GROUP_CONCAT(((vt2.c0) NOTNULL)))) UNION ALL SELECT vt0.c1, vt2.c0, vt0.c0 FROM vt2 NATURAL JOIN vt0 GROUP BY vt0.c1, vt2.c0, vt0.c0 HAVING ((GROUP_CONCAT(((vt2.c0) NOTNULL))) ISNULL);
SELECT vt0.c1, vt2.c0, vt0.c0 FROM vt2 NATURAL JOIN vt0 GROUP BY vt0.c1, vt2.c0, vt0.c0;
SELECT ALL vt0.c1, vt2.c0, vt0.c0 FROM vt2 NATURAL JOIN vt0 GROUP BY vt0.c1, vt2.c0, vt0.c0 HAVING GROUP_CONCAT(((vt2.c0) NOTNULL)) UNION ALL SELECT vt0.c1, vt2.c0, vt0.c0 FROM vt2 NATURAL JOIN vt0 GROUP BY vt0.c1, vt2.c0, vt0.c0 HAVING (NOT (GROUP_CONCAT(((vt2.c0) NOTNULL)))) UNION ALL SELECT vt0.c1, vt2.c0, vt0.c0 FROM vt2 NATURAL JOIN vt0 GROUP BY vt0.c1, vt2.c0, vt0.c0 HAVING ((GROUP_CONCAT(((vt2.c0) NOTNULL))) ISNULL);
SELECT vt0.c1, vt2.c0, vt0.c0 FROM vt2 NATURAL JOIN vt0 GROUP BY vt0.c1, vt2.c0, vt0.c0;
SELECT * FROM vt2;
SELECT * FROM vt2 WHERE (vt2.c0 COLLATE NOCASE) UNION ALL SELECT * FROM vt2 WHERE ((NOT (vt2.c0 COLLATE NOCASE))) UNION ALL SELECT * FROM vt2 WHERE (((vt2.c0 COLLATE NOCASE) ISNULL));
SELECT * FROM vt2;
SELECT DISTINCT vt0.c1, vt2.c0 FROM vt0, vt2 NOT INDEXED;
SELECT DISTINCT vt0.c1, vt2.c0 FROM vt0, vt2 WHERE (QUOTE('0.6113703389534572')) UNION SELECT DISTINCT vt0.c1, vt2.c0 FROM vt0, vt2 WHERE ((NOT (QUOTE('0.6113703389534572')))) UNION SELECT DISTINCT vt0.c1, vt2.c0 FROM vt0, vt2 WHERE (((QUOTE('0.6113703389534572')) ISNULL));
SELECT DISTINCT vt0.c1, vt2.c0 FROM vt0, vt2 NOT INDEXED;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 NOT INDEXED WHERE (0.4870482381629405) GROUP BY vt0.c0, vt0.c1 UNION SELECT ALL vt0.c0, vt0.c1 FROM vt0 WHERE ((NOT (0.4870482381629405))) GROUP BY vt0.c0, vt0.c1 UNION SELECT vt0.c0, vt0.c1 FROM vt0 WHERE (((0.4870482381629405) ISNULL)) GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt2.c0, vt0.c1 FROM vt2, vt0 GROUP BY vt0.c0, vt2.c0, vt0.c1;
SELECT vt0.c0, vt2.c0, vt0.c1 FROM vt2, vt0 GROUP BY vt0.c0, vt2.c0, vt0.c1 HAVING (((vt2.c0, vt0.c0, TOTAL(vt0.c0))) NOT BETWEEN ((MAX(MAX(GROUP_CONCAT(TOTAL(COUNT(*))))), COUNT(*), (((vt0.c0))>=((vt2.c0))))) AND ((MAX(vt0.c0), MAX(GROUP_CONCAT(vt0.c1)), x''))) UNION ALL SELECT ALL vt0.c0, vt2.c0, vt0.c1 FROM vt2, vt0 GROUP BY vt0.c0, vt2.c0, vt0.c1 HAVING (NOT ((((vt2.c0, vt0.c0, TOTAL(vt0.c0))) NOT BETWEEN ((MAX(MAX(GROUP_CONCAT(TOTAL(COUNT(*))))), COUNT(*), (((vt0.c0))>=((vt2.c0))))) AND ((MAX(vt0.c0), MAX(GROUP_CONCAT(vt0.c1)), x''))))) UNION ALL SELECT ALL vt0.c0, vt2.c0, vt0.c1 FROM vt2, vt0 GROUP BY vt0.c0, vt2.c0, vt0.c1 HAVING (((((vt2.c0, vt0.c0, TOTAL(vt0.c0))) NOT BETWEEN ((MAX(MAX(GROUP_CONCAT(TOTAL(COUNT(*))))), COUNT(*), (((vt0.c0))>=((vt2.c0))))) AND ((MAX(vt0.c0), MAX(GROUP_CONCAT(vt0.c1)), x'')))) ISNULL);
SELECT ALL MAX((((CAST(-8.92605647E8 AS BLOB)))==(((vt1.c0 IN (x'')))))) FROM vt1;
SELECT ALL * FROM vt1;
SELECT ALL * FROM vt1 WHERE (((ABS(vt1.c0)) NOTNULL)) UNION ALL SELECT ALL * FROM vt1 WHERE ((NOT (((ABS(vt1.c0)) NOTNULL)))) UNION ALL SELECT ALL * FROM vt1 WHERE (((((ABS(vt1.c0)) NOTNULL)) ISNULL));
SELECT ALL * FROM vt1;
SELECT DISTINCT * FROM vt2, vt1, vt0;
SELECT DISTINCT * FROM vt2, vt1, vt0 WHERE (CAST(((vt1.c0)!=(vt2.c0)) AS REAL)) UNION SELECT DISTINCT * FROM vt2, vt1, vt0 WHERE ((NOT (CAST(((vt1.c0)!=(vt2.c0)) AS REAL)))) UNION SELECT DISTINCT * FROM vt2, vt1, vt0 WHERE (((CAST(((vt1.c0)<>(vt2.c0)) AS REAL)) ISNULL));
SELECT DISTINCT * FROM vt2, vt1, vt0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE (NULL) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT (NULL))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE (((NULL) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0, vt2.c0, vt0.c0 FROM vt0, vt1, vt2 GROUP BY vt1.c0, vt2.c0, vt0.c0;
SELECT vt1.c0, vt2.c0, vt0.c0 FROM vt0, vt1, vt2 GROUP BY vt1.c0, vt2.c0, vt0.c0 HAVING GROUP_CONCAT(CASE COUNT(vt0.c0)  WHEN vt0.c0 THEN GROUP_CONCAT(vt0.c1) ELSE COUNT(*) END) UNION ALL SELECT ALL vt1.c0, vt2.c0, vt0.c0 FROM vt0, vt1, vt2 GROUP BY vt1.c0, vt2.c0, vt0.c0 HAVING (NOT (GROUP_CONCAT(CASE COUNT(vt0.c0)  WHEN vt0.c0 THEN GROUP_CONCAT(vt0.c1) ELSE COUNT(*) END))) UNION ALL SELECT ALL vt1.c0, vt2.c0, vt0.c0 FROM vt0, vt1, vt2 GROUP BY vt1.c0, vt2.c0, vt0.c0 HAVING ((GROUP_CONCAT(CASE COUNT(vt0.c0)  WHEN vt0.c0 THEN GROUP_CONCAT(vt0.c1) ELSE COUNT(*) END)) ISNULL);
SELECT ALL * FROM vt1, vt2, vt0;
SELECT * FROM vt1, vt2, vt0 WHERE (CASE CASE WHEN vt0.c1 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 END  WHEN ((vt2.c0) IS FALSE) THEN NULL END) UNION ALL SELECT * FROM vt1, vt2, vt0 WHERE ((NOT (CASE CASE WHEN vt0.c1 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 END  WHEN ((vt2.c0) IS FALSE) THEN NULL END))) UNION ALL SELECT * FROM vt1, vt2, vt0 WHERE (((CASE CASE WHEN vt0.c1 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 END  WHEN ((vt2.c0) IS FALSE) THEN NULL END) ISNULL));
SELECT ALL * FROM vt1, vt2, vt0;
SELECT DISTINCT vt0.c1 FROM vt0;
SELECT DISTINCT vt0.c1 FROM vt0 WHERE ((((((x'e047' IN ()))AND(CAST(vt0.c0 AS TEXT))))AND(LOWER(vt0.c1)))) UNION SELECT DISTINCT vt0.c1 FROM vt0 WHERE ((NOT ((((((x'e047' IN ()))AND(CAST(vt0.c0 AS TEXT))))AND(LOWER(vt0.c1)))))) UNION SELECT DISTINCT vt0.c1 FROM vt0 WHERE ((((((((x'e047' IN ()))AND(CAST(vt0.c0 AS TEXT))))AND(LOWER(vt0.c1)))) ISNULL));
SELECT DISTINCT vt0.c1 FROM vt0;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0 WHERE (((vt0.c0) IS FALSE) COLLATE NOCASE) GROUP BY vt0.c1 UNION SELECT ALL vt0.c1 FROM vt0 WHERE ((NOT (((vt0.c0) IS FALSE) COLLATE NOCASE))) GROUP BY vt0.c1 UNION SELECT vt0.c1 FROM vt0 WHERE (((((vt0.c0) IS FALSE) COLLATE NOCASE) ISNULL)) GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1, vt0 NOT INDEXED GROUP BY vt1.c0 HAVING MAX(MIN(TOTAL(vt0.c1))) UNION ALL SELECT ALL vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0 HAVING (NOT (MAX(MIN(TOTAL(vt0.c1))))) UNION ALL SELECT ALL vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0 HAVING ((MAX(MIN(TOTAL(vt0.c1)))) ISNULL);
SELECT * FROM vt0, vt1 LEFT OUTER JOIN vt2 ON (vt0.c1 IN ());
SELECT * FROM vt0, vt1 LEFT OUTER JOIN vt2 ON (vt0.c1 IN ()) WHERE ((- (((vt0.c1)OR(vt2.c0))))) UNION ALL SELECT * FROM vt0, vt1 LEFT OUTER JOIN vt2 ON (vt0.c1 IN ()) WHERE ((NOT ((- (((vt0.c1)OR(vt2.c0))))))) UNION ALL SELECT * FROM vt0, vt1 LEFT OUTER JOIN vt2 ON (vt0.c1 IN ()) WHERE ((((- (((vt0.c1)OR(vt2.c0))))) ISNULL));
SELECT * FROM vt0, vt1 LEFT OUTER JOIN vt2 ON (vt0.c1 IN ());
SELECT DISTINCT vt1.c0, vt0.c0 FROM vt1 LEFT OUTER JOIN vt0 ON ((((vt0.c1)<=(vt0.c1)))IS(((((((((vt0.c1)AND(vt0.c1)))AND(x'')))AND(vt0.c0)))OR(0.22325561835905006)))) INNER JOIN vt2 ON ((vt0.c0)<=(0.5130626454003004)) COLLATE BINARY;
SELECT DISTINCT vt1.c0, vt0.c0 FROM vt1 LEFT OUTER JOIN vt0 ON ((((vt0.c1)<=(vt0.c1)))IS(((((((((vt0.c1)AND(vt0.c1)))AND(x'')))AND(vt0.c0)))OR(0.22325561835905006)))) INNER JOIN vt2 ON ((vt0.c0)<=(0.5130626454003004)) COLLATE BINARY WHERE (JULIANDAY(((vt0.c0)!=(vt0.c1)), ((vt0.c1)<>(NULL)), (- (vt0.c0)))) UNION SELECT DISTINCT vt1.c0, vt0.c0 FROM vt1 LEFT OUTER JOIN vt0 ON ((((vt0.c1)<=(vt0.c1)))IS(((((((((vt0.c1)AND(vt0.c1)))AND(x'')))AND(vt0.c0)))OR(0.22325561835905006)))) INNER JOIN vt2 ON ((vt0.c0)<=(0.5130626454003004)) COLLATE BINARY WHERE ((NOT (JULIANDAY(((vt0.c0)<>(vt0.c1)), ((vt0.c1)!=(NULL)), (- (vt0.c0)))))) UNION SELECT DISTINCT vt1.c0, vt0.c0 FROM vt1 LEFT OUTER JOIN vt0 ON ((((vt0.c1)<=(vt0.c1)))IS(((((((((vt0.c1)AND(vt0.c1)))AND(x'')))AND(vt0.c0)))OR(0.22325561835905006)))) INNER JOIN vt2 ON ((vt0.c0)<=(0.5130626454003004)) COLLATE BINARY WHERE (((JULIANDAY(((vt0.c0)!=(vt0.c1)), ((vt0.c1)<>(NULL)), (- (vt0.c0)))) ISNULL));
SELECT DISTINCT vt1.c0, vt0.c0 FROM vt1 LEFT OUTER JOIN vt0 ON ((((vt0.c1)<=(vt0.c1)))IS(((((((((vt0.c1)AND(vt0.c1)))AND(x'')))AND(vt0.c0)))OR(0.22325561835905006)))) INNER JOIN vt2 ON ((vt0.c0)<=(0.5130626454003004)) COLLATE BINARY;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE (((((NULL)OR(CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)))OR(vt1.c0))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT (((((NULL)OR(CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)))OR(vt1.c0))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE (((((((NULL)OR(CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)))OR(vt1.c0))) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING TYPEOF(DISTINCT CASE WHEN MIN(MIN(TOTAL(TOTAL(MIN(vt1.c0))))) THEN vt1.c0 END) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (TYPEOF(DISTINCT CASE WHEN MIN(MIN(TOTAL(TOTAL(MIN(vt1.c0))))) THEN vt1.c0 END))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((TYPEOF(DISTINCT CASE WHEN MIN(MIN(TOTAL(TOTAL(MIN(vt1.c0))))) THEN vt1.c0 END)) ISNULL);
SELECT ALL * FROM vt2 RIGHT OUTER JOIN vt0 ON ((CAST(vt2.c0 AS BLOB))||(CASE vt0.c0  WHEN vt2.c0 THEN 'u)(\na' END));
SELECT ALL * FROM vt2 RIGHT OUTER JOIN vt0 ON ((CAST(vt2.c0 AS BLOB))||(CASE vt0.c0  WHEN vt2.c0 THEN 'u)(\na' END)) WHERE ((((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c1)))) BETWEEN (((NULL)>=(vt0.c1))) AND ((+ (vt0.c0))))) UNION ALL SELECT * FROM vt2 RIGHT OUTER JOIN vt0 ON ((CAST(vt2.c0 AS BLOB))||(CASE vt0.c0  WHEN vt2.c0 THEN 'u)(\na' END)) WHERE ((NOT ((((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c1)))) BETWEEN (((NULL)>=(vt0.c1))) AND ((+ (vt0.c0))))))) UNION ALL SELECT ALL * FROM vt2 RIGHT OUTER JOIN vt0 ON ((CAST(vt2.c0 AS BLOB))||(CASE vt0.c0  WHEN vt2.c0 THEN 'u)(\na' END)) WHERE ((((((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c1)))) BETWEEN (((NULL)>=(vt0.c1))) AND ((+ (vt0.c0))))) ISNULL));
SELECT ALL * FROM vt2 RIGHT OUTER JOIN vt0 ON ((CAST(vt2.c0 AS BLOB))||(CASE vt0.c0  WHEN vt2.c0 THEN 'u)(\na' END));
SELECT DISTINCT vt0.c1 FROM vt1, vt0;
SELECT DISTINCT vt0.c1 FROM vt1, vt0 WHERE (((vt0.c1) NOT BETWEEN (vt1.c0) AND (x'')) COLLATE NOCASE) UNION SELECT DISTINCT vt0.c1 FROM vt1, vt0 WHERE ((NOT (((vt0.c1) NOT BETWEEN (vt1.c0) AND (x'')) COLLATE NOCASE))) UNION SELECT DISTINCT vt0.c1 FROM vt1, vt0 WHERE (((((vt0.c1) NOT BETWEEN (vt1.c0) AND (x'')) COLLATE NOCASE) ISNULL));
SELECT DISTINCT vt0.c1 FROM vt1, vt0;
SELECT vt2.c0, vt0.c1, vt1.c0 FROM vt0, vt1, vt2 GROUP BY vt2.c0, vt0.c1, vt1.c0;
SELECT ALL vt2.c0, vt0.c1, vt1.c0 FROM vt0, vt1, vt2 WHERE (vt0.c0) GROUP BY vt2.c0, vt0.c1, vt1.c0 UNION SELECT vt2.c0, vt0.c1, vt1.c0 FROM vt0, vt1, vt2 WHERE ((NOT (vt0.c0))) GROUP BY vt2.c0, vt0.c1, vt1.c0 UNION SELECT ALL vt2.c0, vt0.c1, vt1.c0 FROM vt0, vt1, vt2 WHERE (((vt0.c0) ISNULL)) GROUP BY vt2.c0, vt0.c1, vt1.c0;
SELECT vt2.c0, vt0.c1, vt1.c0 FROM vt0, vt1, vt2 GROUP BY vt2.c0, vt0.c1, vt1.c0;
SELECT vt1.c0 FROM vt1, vt2 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1, vt2 GROUP BY vt1.c0 HAVING TOTAL(GROUP_CONCAT(SUM(vt1.c0))) UNION ALL SELECT vt1.c0 FROM vt1, vt2 GROUP BY vt1.c0 HAVING (NOT (TOTAL(GROUP_CONCAT(SUM(vt1.c0))))) UNION ALL SELECT ALL vt1.c0 FROM vt1, vt2 GROUP BY vt1.c0 HAVING ((TOTAL(GROUP_CONCAT(SUM(vt1.c0)))) ISNULL);
SELECT ALL vt2.c0, vt1.c0 FROM vt2, vt1;
SELECT vt2.c0, vt1.c0 FROM vt2, vt1 WHERE (CASE WHEN ((vt2.c0) ISNULL) THEN ((vt1.c0)<>(vt2.c0)) WHEN vt2.c0 COLLATE RTRIM THEN ((vt2.c0)>(vt2.c0)) WHEN ((((vt2.c0)AND(vt1.c0)))OR(vt2.c0)) THEN vt1.c0 COLLATE RTRIM END) UNION ALL SELECT ALL vt2.c0, vt1.c0 FROM vt2, vt1 WHERE ((NOT (CASE WHEN ((vt2.c0) ISNULL) THEN ((vt1.c0)<>(vt2.c0)) WHEN vt2.c0 COLLATE RTRIM THEN ((vt2.c0)>(vt2.c0)) WHEN ((((vt2.c0)AND(vt1.c0)))OR(vt2.c0)) THEN vt1.c0 COLLATE RTRIM END))) UNION ALL SELECT vt2.c0, vt1.c0 FROM vt2, vt1 WHERE (((CASE WHEN ((vt2.c0) ISNULL) THEN ((vt1.c0)!=(vt2.c0)) WHEN vt2.c0 COLLATE RTRIM THEN ((vt2.c0)>(vt2.c0)) WHEN ((((vt2.c0)AND(vt1.c0)))OR(vt2.c0)) THEN vt1.c0 COLLATE RTRIM END) ISNULL));
SELECT ALL vt2.c0, vt1.c0 FROM vt2, vt1;
SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0 WHERE (TYPEOF(vt0.c1)) UNION SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0 WHERE ((NOT (TYPEOF(vt0.c1)))) UNION SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0 WHERE (((TYPEOF(vt0.c1)) ISNULL));
SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE (((((vt1.c0)<(vt1.c0))) NOTNULL)) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (((((vt1.c0)<(vt1.c0))) NOTNULL)))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE (((((((vt1.c0)<(vt1.c0))) NOTNULL)) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING COUNT(CASE TOTAL(MIN(vt2.c0))  WHEN MIN(MAX(SUM(AVG(vt2.c0)))) THEN vt2.c0 WHEN COUNT(vt2.c0) THEN SUM(vt2.c0) WHEN vt2.c0 THEN 0.7748291698652324 END) UNION ALL SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING (NOT (COUNT(CASE TOTAL(MIN(vt2.c0))  WHEN MIN(MAX(SUM(AVG(vt2.c0)))) THEN vt2.c0 WHEN COUNT(vt2.c0) THEN SUM(vt2.c0) WHEN vt2.c0 THEN 0.7748291698652324 END))) UNION ALL SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING ((COUNT(CASE TOTAL(MIN(vt2.c0))  WHEN MIN(MAX(SUM(AVG(vt2.c0)))) THEN vt2.c0 WHEN COUNT(vt2.c0) THEN SUM(vt2.c0) WHEN vt2.c0 THEN 0.7748291698652324 END)) ISNULL);
SELECT vt0.c0, vt0.c1 FROM vt1, vt0;
SELECT ALL vt0.c0, vt0.c1 FROM vt1, vt0 WHERE ((((((vt0.c0)||(vt0.c1))))<((((x'') IS FALSE))))) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt1, vt0 WHERE ((NOT ((((((vt0.c0)||(vt0.c1))))<((((x'') IS FALSE))))))) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt1, vt0 WHERE ((((((((vt0.c0)||(vt0.c1))))<((((x'') IS FALSE))))) ISNULL));
SELECT vt0.c0, vt0.c1 FROM vt1, vt0;
SELECT DISTINCT * FROM vt0, vt1;
SELECT DISTINCT * FROM vt0, vt1 WHERE ((- ((vt1.c0 IN ())))) UNION SELECT DISTINCT * FROM vt0, vt1 WHERE ((NOT ((- ((vt1.c0 IN ())))))) UNION SELECT DISTINCT * FROM vt0, vt1 WHERE ((((- ((vt1.c0 IN ())))) ISNULL));
SELECT DISTINCT * FROM vt0, vt1;
SELECT ALL vt1.c0 FROM vt1 NATURAL JOIN vt2 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 NATURAL JOIN vt2 WHERE (CASE (vt1.c0 IN (vt1.c0, 65054592))  WHEN vt1.c0 THEN ((vt1.c0)*(vt2.c0)) END) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 NATURAL JOIN vt2 WHERE ((NOT (CASE (vt1.c0 IN (vt1.c0, 65054592))  WHEN vt1.c0 THEN ((vt1.c0)*(vt2.c0)) END))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 NATURAL JOIN vt2 WHERE (((CASE (vt1.c0 IN (vt1.c0, 65054592))  WHEN vt1.c0 THEN ((vt1.c0)*(vt2.c0)) END) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 NATURAL JOIN vt2 GROUP BY vt1.c0;
SELECT vt2.c0 FROM vt2, vt0 GROUP BY vt2.c0;
SELECT vt2.c0 FROM vt2, vt0 GROUP BY vt2.c0 HAVING GROUP_CONCAT((((SUM(''))) BETWEEN ((vt0.c0)) AND ((COUNT(*))))) UNION ALL SELECT vt2.c0 FROM vt2, vt0 GROUP BY vt2.c0 HAVING (NOT (GROUP_CONCAT((((SUM(''))) BETWEEN ((vt0.c0)) AND ((COUNT(*))))))) UNION ALL SELECT ALL vt2.c0 FROM vt2, vt0 GROUP BY vt2.c0 HAVING ((GROUP_CONCAT((((SUM(''))) BETWEEN ((vt0.c0)) AND ((COUNT(*)))))) ISNULL);
SELECT vt2.c0 FROM vt2;
SELECT ALL vt2.c0 FROM vt2 WHERE (((((((((((vt2.c0)AND(vt2.c0)))AND(vt2.c0)))AND(x'')))AND(vt2.c0)))|(CAST(vt2.c0 AS BLOB)))) UNION ALL SELECT vt2.c0 FROM vt2 WHERE ((NOT (((((((((((vt2.c0)AND(vt2.c0)))AND(vt2.c0)))AND(x'')))AND(vt2.c0)))|(CAST(vt2.c0 AS BLOB)))))) UNION ALL SELECT ALL vt2.c0 FROM vt2 WHERE (((((((((((((vt2.c0)AND(vt2.c0)))AND(vt2.c0)))AND(x'')))AND(vt2.c0)))|(CAST(vt2.c0 AS BLOB)))) ISNULL));
SELECT vt2.c0 FROM vt2;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (CASE ((vt0.c0) IS FALSE)  WHEN vt0.c0 COLLATE NOCASE THEN ((((vt0.c0)AND(vt0.c0)))AND(vt0.c1)) ELSE ((((((((vt0.c1)AND(vt0.c0)))AND(vt0.c1)))OR(0x2c22d24c)))AND(vt0.c1)) END) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (CASE ((vt0.c0) IS FALSE)  WHEN vt0.c0 COLLATE NOCASE THEN ((((vt0.c0)AND(vt0.c0)))AND(vt0.c1)) ELSE ((((((((vt0.c1)AND(vt0.c0)))AND(vt0.c1)))OR(0x2c22d24c)))AND(vt0.c1)) END))) UNION SELECT DISTINCT * FROM vt0 WHERE (((CASE ((vt0.c0) IS FALSE)  WHEN vt0.c0 COLLATE NOCASE THEN ((((vt0.c0)AND(vt0.c0)))AND(vt0.c1)) ELSE ((((((((vt0.c1)AND(vt0.c0)))AND(vt0.c1)))OR(0x2c22d24c)))AND(vt0.c1)) END) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL vt1.c0 FROM vt1, vt2, vt0 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1, vt2, vt0 WHERE (vt0.c1) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1, vt2, vt0 WHERE ((NOT (vt0.c1))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1, vt2, vt0 WHERE (((vt0.c1) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1, vt2, vt0 GROUP BY vt1.c0;
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING GROUP_CONCAT((GROUP_CONCAT(vt0.c1) IN (vt0.c0))) UNION ALL SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING (NOT (GROUP_CONCAT((GROUP_CONCAT(vt0.c1) IN (vt0.c0))))) UNION ALL SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING ((GROUP_CONCAT((GROUP_CONCAT(vt0.c1) IN (vt0.c0)))) ISNULL);
SELECT * FROM vt2;
SELECT ALL * FROM vt2 WHERE ('937627026') UNION ALL SELECT ALL * FROM vt2 WHERE ((NOT ('937627026'))) UNION ALL SELECT * FROM vt2 WHERE ((('937627026') ISNULL));
SELECT * FROM vt2;
SELECT DISTINCT vt2.c0, vt0.c0 FROM vt2 RIGHT OUTER JOIN vt0 ON CAST(((vt0.c0)<>(vt2.c0)) AS NUMERIC);
SELECT DISTINCT vt2.c0, vt0.c0 FROM vt2 RIGHT OUTER JOIN vt0 ON CAST(((vt0.c0)<>(vt2.c0)) AS NUMERIC) WHERE (CAST(CAST(vt0.c1 AS TEXT) AS BLOB)) UNION SELECT DISTINCT vt2.c0, vt0.c0 FROM vt2 RIGHT OUTER JOIN vt0 ON CAST(((vt0.c0)<>(vt2.c0)) AS NUMERIC) WHERE ((NOT (CAST(CAST(vt0.c1 AS TEXT) AS BLOB)))) UNION SELECT DISTINCT vt2.c0, vt0.c0 FROM vt2 RIGHT OUTER JOIN vt0 ON CAST(((vt0.c0)!=(vt2.c0)) AS NUMERIC) WHERE (((CAST(CAST(vt0.c1 AS TEXT) AS BLOB)) ISNULL));
SELECT DISTINCT vt2.c0, vt0.c0 FROM vt2 RIGHT OUTER JOIN vt0 ON CAST(((vt0.c0)<>(vt2.c0)) AS NUMERIC);
SELECT ALL vt2.c0 FROM vt0, vt2 GROUP BY vt2.c0;
SELECT ALL vt2.c0 FROM vt0, vt2 WHERE ((NOT (vt0.c1))) GROUP BY vt2.c0 UNION SELECT vt2.c0 FROM vt0, vt2 WHERE ((NOT ((NOT (vt0.c1))))) GROUP BY vt2.c0 UNION SELECT vt2.c0 FROM vt0, vt2 WHERE ((((NOT (vt0.c1))) ISNULL)) GROUP BY vt2.c0;
SELECT ALL vt2.c0 FROM vt0, vt2 GROUP BY vt2.c0;
SELECT vt2.c0, vt1.c0 FROM vt1, vt2 GROUP BY vt2.c0, vt1.c0;
SELECT ALL vt2.c0, vt1.c0 FROM vt1, vt2 GROUP BY vt2.c0, vt1.c0 HAVING AVG(((vt1.c0)<>(GROUP_CONCAT(SUM(MIN(MAX(GROUP_CONCAT(vt1.c0)))))))) UNION ALL SELECT vt2.c0, vt1.c0 FROM vt1, vt2 GROUP BY vt2.c0, vt1.c0 HAVING (NOT (AVG(((vt1.c0)!=(GROUP_CONCAT(SUM(MIN(MAX(GROUP_CONCAT(vt1.c0)))))))))) UNION ALL SELECT ALL vt2.c0, vt1.c0 FROM vt1, vt2 GROUP BY vt2.c0, vt1.c0 HAVING ((AVG(((vt1.c0)<>(GROUP_CONCAT(SUM(MIN(MAX(GROUP_CONCAT(vt1.c0))))))))) ISNULL);
SELECT ALL vt2.c0 FROM vt1 INNER JOIN vt2 ON (((vt0.c0 IN ()))>(vt0.c1 COLLATE RTRIM)) FULL OUTER JOIN vt0 ON 4.43439504E8;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE ((((vt0.c0 COLLATE NOCASE, ((vt0.c1)GLOB(vt0.c0)), (((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c1)))))<(((((x'9915', vt0.c0, 1523700737)) BETWEEN ((vt0.c0, vt0.c0, NULL)) AND ((vt0.c0, vt0.c1, 0X1ce29484))), ((vt0.c0) IS TRUE), CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END)))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT ((((vt0.c0 COLLATE NOCASE, ((vt0.c1)GLOB(vt0.c0)), (((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c1)))))<(((((x'9915', vt0.c0, 1523700737)) BETWEEN ((vt0.c0, vt0.c0, NULL)) AND ((vt0.c0, vt0.c1, 0x1ce29484))), ((vt0.c0) IS TRUE), CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END)))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((((((vt0.c0 COLLATE NOCASE, ((vt0.c1)GLOB(vt0.c0)), (((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c1)))))<(((((x'9915', vt0.c0, 1523700737)) BETWEEN ((vt0.c0, vt0.c0, NULL)) AND ((vt0.c0, vt0.c1, 0X1ce29484))), ((vt0.c0) IS TRUE), CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END)))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT ALL vt2.c0 FROM vt2 WHERE (((((((((((vt2.c0)*(vt2.c0)))AND(((vt2.c0) NOT BETWEEN (vt2.c0) AND (vt2.c0)))))AND(LIKELY(vt2.c0))))AND(((((vt2.c0)OR(vt2.c0)))AND(vt2.c0)))))OR(((vt2.c0)<=(vt2.c0))))) GROUP BY vt2.c0 UNION SELECT vt2.c0 FROM vt2 WHERE ((NOT (((((((((((vt2.c0)*(vt2.c0)))AND(((vt2.c0) NOT BETWEEN (vt2.c0) AND (vt2.c0)))))AND(LIKELY(vt2.c0))))AND(((((vt2.c0)OR(vt2.c0)))AND(vt2.c0)))))OR(((vt2.c0)<=(vt2.c0))))))) GROUP BY vt2.c0 UNION SELECT vt2.c0 FROM vt2 WHERE (((((((((((((vt2.c0)*(vt2.c0)))AND(((vt2.c0) NOT BETWEEN (vt2.c0) AND (vt2.c0)))))AND(LIKELY(vt2.c0))))AND(((((vt2.c0)OR(vt2.c0)))AND(vt2.c0)))))OR(((vt2.c0)<=(vt2.c0))))) ISNULL)) GROUP BY vt2.c0;
SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT vt1.c0, vt2.c0, vt0.c0, vt0.c1 FROM vt2, vt0 NATURAL JOIN vt1 GROUP BY vt1.c0, vt2.c0, vt0.c0, vt0.c1;
SELECT vt1.c0, vt2.c0, vt0.c0, vt0.c1 FROM vt2, vt0 NATURAL JOIN vt1 GROUP BY vt1.c0, vt2.c0, vt0.c0, vt0.c1 HAVING AVG(AVG(MIN(vt1.c0))) UNION ALL SELECT ALL vt1.c0, vt2.c0, vt0.c0, vt0.c1 FROM vt2, vt0 NATURAL JOIN vt1 GROUP BY vt1.c0, vt2.c0, vt0.c0, vt0.c1 HAVING (NOT (AVG(AVG(MIN(vt1.c0))))) UNION ALL SELECT ALL vt1.c0, vt2.c0, vt0.c0, vt0.c1 FROM vt2, vt0 NATURAL JOIN vt1 GROUP BY vt1.c0, vt2.c0, vt0.c0, vt0.c1 HAVING ((AVG(AVG(MIN(vt1.c0)))) ISNULL);
SELECT vt0.c0, vt1.c0, vt0.c1 FROM vt0, vt2, vt1;
SELECT ALL vt0.c0, vt1.c0, vt0.c1 FROM vt0, vt2, vt1 WHERE (((((~ (vt0.c0))))>(('0.0')))) ORDER BY LENGTH(CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt2.c0 END) DESC  NULLS LAST;
SELECT ALL vt0.c0, vt1.c0, vt0.c1 FROM vt0, vt2, vt1 WHERE ((NOT (((((~ (vt0.c0))))>(('0.0')))))) ORDER BY LENGTH(CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt2.c0 END) DESC  NULLS LAST;
SELECT vt0.c0, vt1.c0, vt0.c1 FROM vt0, vt2, vt1 WHERE (((((((~ (vt0.c0))))>(('0.0')))) ISNULL)) ORDER BY LENGTH(CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt2.c0 END) DESC  NULLS LAST;
SELECT vt0.c0, vt1.c0, vt0.c1 FROM vt0, vt2, vt1;
SELECT DISTINCT vt2.c0 FROM vt2, vt0;
SELECT DISTINCT vt2.c0 FROM vt2, vt0 WHERE ((((+ (vt0.c1)))*((((vt0.c0, vt0.c0, vt0.c1))>=((vt0.c1, vt0.c1, vt0.c0)))))) UNION SELECT DISTINCT vt2.c0 FROM vt2, vt0 WHERE ((NOT ((((+ (vt0.c1)))*((((vt0.c0, vt0.c0, vt0.c1))>=((vt0.c1, vt0.c1, vt0.c0)))))))) UNION SELECT DISTINCT vt2.c0 FROM vt2, vt0 WHERE ((((((+ (vt0.c1)))*((((vt0.c0, vt0.c0, vt0.c1))>=((vt0.c1, vt0.c1, vt0.c0)))))) ISNULL));
SELECT DISTINCT vt2.c0 FROM vt2, vt0;
SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT vt2.c0 FROM vt2 WHERE (((NULL) IS TRUE)) GROUP BY vt2.c0 UNION SELECT ALL vt2.c0 FROM vt2 WHERE ((NOT (((NULL) IS TRUE)))) GROUP BY vt2.c0 UNION SELECT vt2.c0 FROM vt2 WHERE (((((NULL) IS TRUE)) ISNULL)) GROUP BY vt2.c0;
SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT ALL vt1.c0 FROM vt1, vt2, vt0 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1, vt2, vt0 GROUP BY vt1.c0 HAVING GROUP_CONCAT(MAX(vt0.c1)) UNION ALL SELECT ALL vt1.c0 FROM vt1, vt2, vt0 GROUP BY vt1.c0 HAVING (NOT (GROUP_CONCAT(MAX(vt0.c1)))) UNION ALL SELECT ALL vt1.c0 FROM vt1, vt2, vt0 GROUP BY vt1.c0 HAVING ((GROUP_CONCAT(MAX(vt0.c1))) ISNULL);
SELECT vt2.c0, vt1.c0 FROM vt2, vt1;
SELECT ALL vt2.c0, vt1.c0 FROM vt2, vt1 WHERE (CASE WHEN vt1.c0 COLLATE RTRIM THEN (((vt1.c0, vt2.c0, vt1.c0)) NOT BETWEEN ((vt2.c0, vt1.c0, vt1.c0)) AND ((vt2.c0, vt1.c0, '\nid''|'))) ELSE (NOT (vt1.c0)) END) UNION ALL SELECT vt2.c0, vt1.c0 FROM vt2, vt1 WHERE ((NOT (CASE WHEN vt1.c0 COLLATE RTRIM THEN (((vt1.c0, vt2.c0, vt1.c0)) NOT BETWEEN ((vt2.c0, vt1.c0, vt1.c0)) AND ((vt2.c0, vt1.c0, '\nid''|'))) ELSE (NOT (vt1.c0)) END))) UNION ALL SELECT vt2.c0, vt1.c0 FROM vt2, vt1 WHERE (((CASE WHEN vt1.c0 COLLATE RTRIM THEN (((vt1.c0, vt2.c0, vt1.c0)) NOT BETWEEN ((vt2.c0, vt1.c0, vt1.c0)) AND ((vt2.c0, vt1.c0, '\nid''|'))) ELSE (NOT (vt1.c0)) END) ISNULL));
SELECT vt2.c0, vt1.c0 FROM vt2, vt1;
SELECT DISTINCT * FROM vt2, vt0;
SELECT DISTINCT * FROM vt2, vt0 WHERE (((((vt0.c0)OR(vt0.c0)))OR(vt2.c0)) COLLATE RTRIM) UNION SELECT DISTINCT * FROM vt2, vt0 WHERE ((NOT (((((vt0.c0)OR(vt0.c0)))OR(vt2.c0)) COLLATE RTRIM))) UNION SELECT DISTINCT * FROM vt2, vt0 WHERE (((((((vt0.c0)OR(vt0.c0)))OR(vt2.c0)) COLLATE RTRIM) ISNULL));
SELECT DISTINCT * FROM vt2, vt0;
SELECT vt1.c0, vt2.c0 FROM vt0, vt1, vt2 GROUP BY vt1.c0, vt2.c0;
SELECT vt1.c0, vt2.c0 FROM vt0, vt1, vt2 WHERE (CAST(LOWER(DISTINCT vt1.c0) AS REAL)) GROUP BY vt1.c0, vt2.c0 UNION SELECT ALL vt1.c0, vt2.c0 FROM vt0, vt1, vt2 WHERE ((NOT (CAST(LOWER(DISTINCT vt1.c0) AS REAL)))) GROUP BY vt1.c0, vt2.c0 UNION SELECT ALL vt1.c0, vt2.c0 FROM vt0, vt1, vt2 WHERE (((CAST(LOWER(DISTINCT vt1.c0) AS REAL)) ISNULL)) GROUP BY vt1.c0, vt2.c0;
SELECT vt1.c0, vt2.c0 FROM vt0, vt1, vt2 GROUP BY vt1.c0, vt2.c0;
SELECT vt0.c1, vt2.c0, vt1.c0 FROM vt1, vt0, vt2 GROUP BY vt0.c1, vt2.c0, vt1.c0;
SELECT vt0.c1, vt2.c0, vt1.c0 FROM vt1, vt0, vt2 GROUP BY vt0.c1, vt2.c0, vt1.c0 HAVING SUM(AVG(SUM(COUNT(*)))) UNION ALL SELECT vt0.c1, vt2.c0, vt1.c0 FROM vt1, vt0, vt2 GROUP BY vt0.c1, vt2.c0, vt1.c0 HAVING (NOT (SUM(AVG(SUM(COUNT(*)))))) UNION ALL SELECT vt0.c1, vt2.c0, vt1.c0 FROM vt1, vt0, vt2 GROUP BY vt0.c1, vt2.c0, vt1.c0 HAVING ((SUM(AVG(SUM(COUNT(*))))) ISNULL);
SELECT vt2.c0 FROM vt1 CROSS JOIN vt2 ON CASE vt1.c0  WHEN vt2.c0 THEN vt2.c0 ELSE vt2.c0 END COLLATE NOCASE;
SELECT vt2.c0 FROM vt1 CROSS JOIN vt2 ON CASE vt1.c0  WHEN vt2.c0 THEN vt2.c0 ELSE vt2.c0 END COLLATE NOCASE WHERE (CAST(CAST(vt1.c0 AS BLOB) AS TEXT)) UNION ALL SELECT vt2.c0 FROM vt1 CROSS JOIN vt2 ON CASE vt1.c0  WHEN vt2.c0 THEN vt2.c0 ELSE vt2.c0 END COLLATE NOCASE WHERE ((NOT (CAST(CAST(vt1.c0 AS BLOB) AS TEXT)))) UNION ALL SELECT vt2.c0 FROM vt1 CROSS JOIN vt2 ON CASE vt1.c0  WHEN vt2.c0 THEN vt2.c0 ELSE vt2.c0 END COLLATE NOCASE WHERE (((CAST(CAST(vt1.c0 AS BLOB) AS TEXT)) ISNULL));
SELECT vt2.c0 FROM vt1 CROSS JOIN vt2 ON CASE vt1.c0  WHEN vt2.c0 THEN vt2.c0 ELSE vt2.c0 END COLLATE NOCASE;
SELECT DISTINCT * FROM vt2, vt1;
SELECT DISTINCT * FROM vt2, vt1 WHERE (((('&Z￿ODB'))==((0.26130991000052783)))) UNION SELECT DISTINCT * FROM vt2, vt1 WHERE ((NOT (((('&Z￿ODB'))==((0.26130991000052783)))))) UNION SELECT DISTINCT * FROM vt2, vt1 WHERE (((((('&Z￿ODB'))==((0.26130991000052783)))) ISNULL));
SELECT DISTINCT * FROM vt2, vt1;
SELECT ALL vt0.c1, vt0.c0, vt1.c0, vt2.c0 FROM vt1 LEFT OUTER JOIN vt0 ON NULL CROSS JOIN vt2 ON ((NULL) BETWEEN (NULL) AND (CAST(vt1.c0 AS TEXT))) GROUP BY vt0.c1, vt0.c0, vt1.c0, vt2.c0;
SELECT vt0.c1, vt0.c0, vt1.c0, vt2.c0 FROM vt1 LEFT OUTER JOIN vt0 ON NULL CROSS JOIN vt2 ON ((NULL) BETWEEN (NULL) AND (CAST(vt1.c0 AS TEXT))) WHERE ((+ (LIKELY(DISTINCT vt0.c0)))) GROUP BY vt0.c1, vt0.c0, vt1.c0, vt2.c0 UNION SELECT ALL vt0.c1, vt0.c0, vt1.c0, vt2.c0 FROM vt1 LEFT OUTER JOIN vt0 ON NULL CROSS JOIN vt2 ON ((NULL) BETWEEN (NULL) AND (CAST(vt1.c0 AS TEXT))) WHERE ((NOT ((+ (LIKELY(DISTINCT vt0.c0)))))) GROUP BY vt0.c1, vt0.c0, vt1.c0, vt2.c0 UNION SELECT vt0.c1, vt0.c0, vt1.c0, vt2.c0 FROM vt1 LEFT OUTER JOIN vt0 ON NULL CROSS JOIN vt2 ON ((NULL) BETWEEN (NULL) AND (CAST(vt1.c0 AS TEXT))) WHERE ((((+ (LIKELY(DISTINCT vt0.c0)))) ISNULL)) GROUP BY vt0.c1, vt0.c0, vt1.c0, vt2.c0;
SELECT ALL vt0.c1, vt0.c0, vt1.c0, vt2.c0 FROM vt1 LEFT OUTER JOIN vt0 ON NULL CROSS JOIN vt2 ON ((NULL) BETWEEN (NULL) AND (CAST(vt1.c0 AS TEXT))) GROUP BY vt0.c1, vt0.c0, vt1.c0, vt2.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((COUNT('508204326'))%(TOTAL(vt1.c0))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (((COUNT('508204326'))%(TOTAL(vt1.c0))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((((COUNT('508204326'))%(TOTAL(vt1.c0)))) ISNULL);
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((COUNT('508204326'))%(TOTAL(vt1.c0))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (((COUNT('508204326'))%(TOTAL(vt1.c0))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((((COUNT('508204326'))%(TOTAL(vt1.c0)))) ISNULL);
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL * FROM vt0;
SELECT * FROM vt0 WHERE (0.14473554346089113) UNION ALL SELECT * FROM vt0 WHERE ((NOT (0.14473554346089113))) UNION ALL SELECT * FROM vt0 WHERE (((0.14473554346089113) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT vt1.c0, vt0.c1, vt0.c0, vt2.c0 FROM vt2, vt0, vt1 NOT INDEXED;
SELECT DISTINCT vt1.c0, vt0.c1, vt0.c0, vt2.c0 FROM vt2, vt0, vt1 WHERE (((((vt0.c0)AND(((vt2.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)))))AND(((((-7.019678E8)AND(0.6303111712462836)))OR(vt2.c0))))) UNION SELECT DISTINCT vt1.c0, vt0.c1, vt0.c0, vt2.c0 FROM vt2, vt0, vt1 WHERE ((NOT (((((vt0.c0)AND(((vt2.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)))))AND(((((-7.019678E8)AND(0.6303111712462836)))OR(vt2.c0))))))) UNION SELECT DISTINCT vt1.c0, vt0.c1, vt0.c0, vt2.c0 FROM vt2, vt0 NOT INDEXED, vt1 WHERE (((((((vt0.c0)AND(((vt2.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)))))AND(((((-7.019678E8)AND(0.6303111712462836)))OR(vt2.c0))))) ISNULL));
SELECT DISTINCT vt1.c0, vt0.c1, vt0.c0, vt2.c0 FROM vt2, vt0, vt1 NOT INDEXED;
SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT vt2.c0 FROM vt2 WHERE (((((vt2.c0)AND(vt2.c0))) ISNULL)) GROUP BY vt2.c0 UNION SELECT ALL vt2.c0 FROM vt2 WHERE ((NOT (((((vt2.c0)AND(vt2.c0))) ISNULL)))) GROUP BY vt2.c0 UNION SELECT vt2.c0 FROM vt2 WHERE (((((((vt2.c0)AND(vt2.c0))) ISNULL)) ISNULL)) GROUP BY vt2.c0;
SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING HEX(DISTINCT MAX(vt2.c0)) UNION ALL SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING (NOT (HEX(DISTINCT MAX(vt2.c0)))) UNION ALL SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING ((HEX(DISTINCT MAX(vt2.c0))) ISNULL);
SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING HEX(DISTINCT MAX(vt2.c0)) UNION ALL SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING (NOT (HEX(DISTINCT MAX(vt2.c0)))) UNION ALL SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING ((HEX(DISTINCT MAX(vt2.c0))) ISNULL);
SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT ALL vt2.c0 FROM vt2;
SELECT ALL vt2.c0 FROM vt2 WHERE (((((vt2.c0) NOTNULL)) IS FALSE)) UNION ALL SELECT vt2.c0 FROM vt2 WHERE ((NOT (((((vt2.c0) NOTNULL)) IS FALSE)))) UNION ALL SELECT vt2.c0 FROM vt2 WHERE (((((((vt2.c0) NOTNULL)) IS FALSE)) ISNULL));
SELECT ALL vt2.c0 FROM vt2;
SELECT DISTINCT vt0.c1 FROM vt0, vt1;
SELECT DISTINCT vt0.c1 FROM vt0, vt1 WHERE (0.40367812398855574) UNION SELECT DISTINCT vt0.c1 FROM vt0, vt1 WHERE ((NOT (0.40367812398855574))) UNION SELECT DISTINCT vt0.c1 FROM vt0, vt1 WHERE (((0.40367812398855574) ISNULL));
SELECT DISTINCT vt0.c1 FROM vt0, vt1;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE ((((vt1.c0)) BETWEEN ((TRIM(DISTINCT vt1.c0))) AND ((((vt1.c0)*(vt1.c0)))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT ((((vt1.c0)) BETWEEN ((TRIM(DISTINCT vt1.c0))) AND ((((vt1.c0)*(vt1.c0)))))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((((((vt1.c0)) BETWEEN ((TRIM(DISTINCT vt1.c0))) AND ((((vt1.c0)*(vt1.c0)))))) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING vt0.c1 UNION ALL SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING (NOT (vt0.c1)) UNION ALL SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING ((vt0.c1) ISNULL);
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING vt0.c1 UNION ALL SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING (NOT (vt0.c1)) UNION ALL SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING ((vt0.c1) ISNULL);
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c1, vt0.c0 FROM vt0, vt1, vt2;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 NOT INDEXED, vt1, vt2 WHERE (((((NOT (vt1.c0)), (((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c0))), ((vt2.c0)IS NOT(vt0.c0))))<=((((((vt0.c1)OR(vt0.c1)))AND(vt0.c0)), (~ (vt0.c0)), ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt1.c0)))))) UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM vt0, vt1, vt2 WHERE ((NOT (((((NOT (vt1.c0)), (((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c0))), ((vt2.c0)IS NOT(vt0.c0))))<=((((((vt0.c1)OR(vt0.c1)))AND(vt0.c0)), (~ (vt0.c0)), ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt1.c0)))))))) UNION ALL SELECT vt0.c1, vt0.c0 FROM vt0, vt1, vt2 WHERE (((((((NOT (vt1.c0)), (((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c0))), ((vt2.c0)IS NOT(vt0.c0))))<=((((((vt0.c1)OR(vt0.c1)))AND(vt0.c0)), (~ (vt0.c0)), ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt1.c0)))))) ISNULL));
SELECT ALL vt0.c1, vt0.c0 FROM vt0, vt1, vt2;
SELECT DISTINCT vt0.c1 FROM vt0, vt2;
SELECT DISTINCT vt0.c1 FROM vt0, vt2 WHERE (((vt0.c1 COLLATE NOCASE) BETWEEN (((((vt0.c0)OR(vt0.c0)))OR(vt2.c0))) AND ('1170250533'))) UNION SELECT DISTINCT vt0.c1 FROM vt0, vt2 WHERE ((NOT (((vt0.c1 COLLATE NOCASE) BETWEEN (((((vt0.c0)OR(vt0.c0)))OR(vt2.c0))) AND ('1170250533'))))) UNION SELECT DISTINCT vt0.c1 FROM vt0, vt2 WHERE (((((vt0.c1 COLLATE NOCASE) BETWEEN (((((vt0.c0)OR(vt0.c0)))OR(vt2.c0))) AND ('1170250533'))) ISNULL));
SELECT DISTINCT vt0.c1 FROM vt0, vt2;
SELECT vt1.c0, vt0.c0 FROM vt2, vt1, vt0 GROUP BY vt1.c0, vt0.c0;
SELECT ALL vt1.c0, vt0.c0 FROM vt2, vt1, vt0 WHERE ((CAST(vt0.c1 AS REAL) IN ())) GROUP BY vt1.c0, vt0.c0 UNION SELECT ALL vt1.c0, vt0.c0 FROM vt2, vt1, vt0 WHERE ((NOT ((CAST(vt0.c1 AS REAL) IN ())))) GROUP BY vt1.c0, vt0.c0 UNION SELECT vt1.c0, vt0.c0 FROM vt2, vt1, vt0 WHERE ((((CAST(vt0.c1 AS REAL) IN ())) ISNULL)) GROUP BY vt1.c0, vt0.c0;
SELECT vt1.c0, vt0.c0 FROM vt2, vt1, vt0 GROUP BY vt1.c0, vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING COUNT(*) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING COUNT(*) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0, vt1.c0, vt0.c1 FROM vt1, vt2, vt0;
SELECT vt0.c0, vt1.c0, vt0.c1 FROM vt1, vt2, vt0 WHERE (CASE WHEN vt2.c0 THEN vt1.c0 COLLATE NOCASE ELSE 0.7641391955439889 END) UNION ALL SELECT vt0.c0, vt1.c0, vt0.c1 FROM vt1, vt2, vt0 WHERE ((NOT (CASE WHEN vt2.c0 THEN vt1.c0 COLLATE NOCASE ELSE 0.7641391955439889 END))) UNION ALL SELECT ALL vt0.c0, vt1.c0, vt0.c1 FROM vt1, vt2, vt0 WHERE (((CASE WHEN vt2.c0 THEN vt1.c0 COLLATE NOCASE ELSE 0.7641391955439889 END) ISNULL));
SELECT ALL vt0.c0, vt1.c0, vt0.c1 FROM vt1, vt2, vt0;
SELECT DISTINCT * FROM vt0, vt2;
SELECT DISTINCT * FROM vt0, vt2 WHERE (((vt2.c0 COLLATE NOCASE)<>(vt0.c0 COLLATE NOCASE))) UNION SELECT DISTINCT * FROM vt0, vt2 WHERE ((NOT (((vt2.c0 COLLATE NOCASE)<>(vt0.c0 COLLATE NOCASE))))) UNION SELECT DISTINCT * FROM vt0, vt2 WHERE (((((vt2.c0 COLLATE NOCASE)!=(vt0.c0 COLLATE NOCASE))) ISNULL));
SELECT DISTINCT * FROM vt0, vt2;
SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT vt2.c0 FROM vt2 WHERE ((((((('-763505401')OR(vt2.c0)))AND(vt2.c0)))%((vt2.c0 IN (vt2.c0))))) GROUP BY vt2.c0 UNION SELECT vt2.c0 FROM vt2 WHERE ((NOT ((((((('-763505401')OR(vt2.c0)))AND(vt2.c0)))%((vt2.c0 IN (vt2.c0))))))) GROUP BY vt2.c0 UNION SELECT ALL vt2.c0 FROM vt2 WHERE ((((((((('-763505401')OR(vt2.c0)))AND(vt2.c0)))%((vt2.c0 IN (vt2.c0))))) ISNULL)) GROUP BY vt2.c0;
SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING GROUP_CONCAT(MIN(vt2.c0)) UNION ALL SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING (NOT (GROUP_CONCAT(MIN(vt2.c0)))) UNION ALL SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING ((GROUP_CONCAT(MIN(vt2.c0))) ISNULL);
SELECT ALL vt2.c0, vt1.c0 FROM vt2, vt1;
SELECT ALL vt2.c0, vt1.c0 FROM vt2, vt1 WHERE ((((vt2.c0)) NOT BETWEEN ((((((vt2.c0)OR(vt2.c0)))AND(vt1.c0)))) AND (((((vt1.c0))!=((vt1.c0))))))) UNION ALL SELECT ALL vt2.c0, vt1.c0 FROM vt2, vt1 WHERE ((NOT ((((vt2.c0)) NOT BETWEEN ((((((vt2.c0)OR(vt2.c0)))AND(vt1.c0)))) AND (((((vt1.c0))!=((vt1.c0))))))))) UNION ALL SELECT vt2.c0, vt1.c0 FROM vt2, vt1 WHERE ((((((vt2.c0)) NOT BETWEEN ((((((vt2.c0)OR(vt2.c0)))AND(vt1.c0)))) AND (((((vt1.c0))<>((vt1.c0))))))) ISNULL));
SELECT ALL vt2.c0, vt1.c0 FROM vt2, vt1;
SELECT DISTINCT * FROM vt2, vt1, vt0;
SELECT DISTINCT * FROM vt2, vt1, vt0 WHERE (((vt0.c0 COLLATE NOCASE) NOT BETWEEN (x'') AND (CAST(vt2.c0 AS BLOB)))) UNION SELECT DISTINCT * FROM vt2, vt1, vt0 WHERE ((NOT (((vt0.c0 COLLATE NOCASE) NOT BETWEEN (x'') AND (CAST(vt2.c0 AS BLOB)))))) UNION SELECT DISTINCT * FROM vt2, vt1, vt0 WHERE (((((vt0.c0 COLLATE NOCASE) NOT BETWEEN (x'') AND (CAST(vt2.c0 AS BLOB)))) ISNULL));
SELECT DISTINCT * FROM vt2, vt1, vt0;
SELECT vt1.c0, vt0.c0, vt2.c0 FROM vt0, vt2, vt1 GROUP BY vt1.c0, vt0.c0, vt2.c0;
SELECT ALL vt1.c0, vt0.c0, vt2.c0 FROM vt0, vt2, vt1 WHERE (COALESCE(DISTINCT vt1.c0, (vt0.c1 IN (vt1.c0)), ((vt0.c1) BETWEEN (vt0.c1) AND (vt2.c0)), ((vt2.c0)||(vt1.c0)))) GROUP BY vt1.c0, vt0.c0, vt2.c0 UNION SELECT ALL vt1.c0, vt0.c0, vt2.c0 FROM vt0, vt2, vt1 WHERE ((NOT (COALESCE(DISTINCT vt1.c0, (vt0.c1 IN (vt1.c0)), ((vt0.c1) BETWEEN (vt0.c1) AND (vt2.c0)), ((vt2.c0)||(vt1.c0)))))) GROUP BY vt1.c0, vt0.c0, vt2.c0 UNION SELECT vt1.c0, vt0.c0, vt2.c0 FROM vt0, vt2, vt1 NOT INDEXED WHERE (((COALESCE(DISTINCT vt1.c0, (vt0.c1 IN (vt1.c0)), ((vt0.c1) BETWEEN (vt0.c1) AND (vt2.c0)), ((vt2.c0)||(vt1.c0)))) ISNULL)) GROUP BY vt1.c0, vt0.c0, vt2.c0;
SELECT vt1.c0, vt0.c0, vt2.c0 FROM vt0, vt2, vt1 GROUP BY vt1.c0, vt0.c0, vt2.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((COUNT(*))AND(SUM(TOTAL(TOTAL(vt1.c0))) COLLATE NOCASE)) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (((COUNT(*))AND(SUM(TOTAL(TOTAL(vt1.c0))) COLLATE NOCASE)))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((((COUNT(*))AND(SUM(TOTAL(TOTAL(vt1.c0))) COLLATE NOCASE))) ISNULL);
SELECT * FROM vt1, vt0;
SELECT ALL * FROM vt1, vt0 WHERE (vt0.c1) UNION ALL SELECT * FROM vt1, vt0 WHERE ((NOT (vt0.c1))) UNION ALL SELECT * FROM vt1, vt0 WHERE (((vt0.c1) ISNULL));
SELECT * FROM vt1, vt0;
SELECT DISTINCT vt1.c0, vt2.c0 FROM vt2, vt1;
SELECT DISTINCT vt1.c0, vt2.c0 FROM vt2, vt1 WHERE (vt2.c0) UNION SELECT DISTINCT vt1.c0, vt2.c0 FROM vt2, vt1 WHERE ((NOT (vt2.c0))) UNION SELECT DISTINCT vt1.c0, vt2.c0 FROM vt2 NOT INDEXED, vt1 WHERE (((vt2.c0) ISNULL));
SELECT DISTINCT vt1.c0, vt2.c0 FROM vt2, vt1;
SELECT ALL vt2.c0, vt0.c1, vt0.c0, vt1.c0 FROM vt0, vt2, vt1 GROUP BY vt2.c0, vt0.c1, vt0.c0, vt1.c0;
SELECT vt2.c0, vt0.c1, vt0.c0, vt1.c0 FROM vt0, vt2, vt1 WHERE (TRIM(x'')) GROUP BY vt2.c0, vt0.c1, vt0.c0, vt1.c0 UNION SELECT ALL vt2.c0, vt0.c1, vt0.c0, vt1.c0 FROM vt0, vt2, vt1 WHERE ((NOT (TRIM(x'')))) GROUP BY vt2.c0, vt0.c1, vt0.c0, vt1.c0 UNION SELECT ALL vt2.c0, vt0.c1, vt0.c0, vt1.c0 FROM vt0, vt2, vt1 WHERE (((TRIM(x'')) ISNULL)) GROUP BY vt2.c0, vt0.c1, vt0.c0, vt1.c0;
SELECT ALL vt2.c0, vt0.c1, vt0.c0, vt1.c0 FROM vt0, vt2, vt1 GROUP BY vt2.c0, vt0.c1, vt0.c0, vt1.c0;
SELECT ALL vt2.c0, vt0.c0, vt0.c1 FROM vt2, vt0 GROUP BY vt2.c0, vt0.c0, vt0.c1;
SELECT ALL vt2.c0, vt0.c0, vt0.c1 FROM vt2, vt0 GROUP BY vt2.c0, vt0.c0, vt0.c1 HAVING CASE WHEN TOTAL(vt2.c0) THEN vt2.c0 ELSE ((MAX(SUM(COUNT(*)))) IS TRUE) END UNION ALL SELECT vt2.c0, vt0.c0, vt0.c1 FROM vt2, vt0 GROUP BY vt2.c0, vt0.c0, vt0.c1 HAVING (NOT (CASE WHEN TOTAL(vt2.c0) THEN vt2.c0 ELSE ((MAX(SUM(COUNT(*)))) IS TRUE) END)) UNION ALL SELECT vt2.c0, vt0.c0, vt0.c1 FROM vt2, vt0 GROUP BY vt2.c0, vt0.c0, vt0.c1 HAVING ((CASE WHEN TOTAL(vt2.c0) THEN vt2.c0 ELSE ((MAX(SUM(COUNT(*)))) IS TRUE) END) ISNULL);
SELECT ALL vt2.c0, vt0.c1, vt0.c0 FROM vt2 INNER JOIN vt0 ON LIKELIHOOD(vt1.c0, 0.7906892007193174) COLLATE NOCASE FULL OUTER JOIN vt1 ON ((((vt0.c0)OR(vt2.c0)))||(CAST(vt0.c1 AS REAL)));
SELECT DISTINCT vt0.c0, vt0.c1, vt1.c0, vt2.c0 FROM vt2, vt0, vt1;
SELECT DISTINCT vt0.c0, vt0.c1, vt1.c0, vt2.c0 FROM vt2, vt0, vt1 WHERE (((vt2.c0)>=(((vt0.c1)/(vt1.c0))))) UNION SELECT DISTINCT vt0.c0, vt0.c1, vt1.c0, vt2.c0 FROM vt2, vt0, vt1 WHERE ((NOT (((vt2.c0)>=(((vt0.c1)/(vt1.c0))))))) UNION SELECT DISTINCT vt0.c0, vt0.c1, vt1.c0, vt2.c0 FROM vt2, vt0, vt1 WHERE (((((vt2.c0)>=(((vt0.c1)/(vt1.c0))))) ISNULL));
SELECT DISTINCT vt0.c0, vt0.c1, vt1.c0, vt2.c0 FROM vt2, vt0, vt1;
SELECT ALL vt0.c0 FROM vt0 RIGHT OUTER JOIN vt2 ON CAST(CAST(vt1.c0 AS TEXT) AS NUMERIC) LEFT OUTER JOIN vt1 ON (- (CASE WHEN vt1.c0 THEN NULL ELSE vt0.c1 END)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING COUNT(SUM('|y')) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(SUM('|y')))) UNION ALL SELECT ALL vt0.c0 FROM vt0 NOT INDEXED GROUP BY vt0.c0 HAVING ((COUNT(SUM('|y'))) ISNULL);
SELECT vt2.c0, vt1.c0 FROM vt1 RIGHT OUTER JOIN vt2 ON highlight(NULL, ('-1939711464' IN ()), ((vt1.c0) NOT NULL), ((vt0.c0)IS NOT(vt2.c0))) CROSS JOIN vt0 ON CASE WHEN ((vt0.c0)<=(vt0.c1)) THEN SQLITE_SOURCE_ID() ELSE ((vt0.c1) IS TRUE) END;
SELECT DISTINCT * FROM vt0, vt2 RIGHT OUTER JOIN vt1 ON ((((vt0.c1)&('u)(\na'))) NOTNULL);
SELECT DISTINCT * FROM vt0, vt2 RIGHT OUTER JOIN vt1 ON ((((vt0.c1)&('u)(\na'))) NOTNULL) WHERE ((((vt0.c1 IN ())) NOT NULL)) UNION SELECT DISTINCT * FROM vt0, vt2 NOT INDEXED RIGHT OUTER JOIN vt1 ON ((((vt0.c1)&('u)(\na'))) NOTNULL) WHERE ((NOT ((((vt0.c1 IN ())) NOT NULL)))) UNION SELECT DISTINCT * FROM vt0, vt2 RIGHT OUTER JOIN vt1 ON ((((vt0.c1)&('u)(\na'))) NOTNULL) WHERE ((((((vt0.c1 IN ())) NOT NULL)) ISNULL));
SELECT DISTINCT * FROM vt0, vt2 RIGHT OUTER JOIN vt1 ON ((((vt0.c1)&('u)(\na'))) NOTNULL);
SELECT ALL vt2.c0 FROM vt1 RIGHT OUTER JOIN vt2 ON vt2.c0 GROUP BY vt2.c0;
SELECT vt2.c0 FROM vt1 RIGHT OUTER JOIN vt2 ON vt2.c0 WHERE ((((x'eca2'))<((vt2.c0 COLLATE NOCASE)))) GROUP BY vt2.c0 UNION SELECT vt2.c0 FROM vt1 RIGHT OUTER JOIN vt2 ON vt2.c0 WHERE ((NOT ((((x'eca2'))<((vt2.c0 COLLATE NOCASE)))))) GROUP BY vt2.c0 UNION SELECT vt2.c0 FROM vt1 RIGHT OUTER JOIN vt2 ON vt2.c0 WHERE ((((((x'eca2'))<((vt2.c0 COLLATE NOCASE)))) ISNULL)) GROUP BY vt2.c0;
SELECT ALL vt2.c0 FROM vt1 RIGHT OUTER JOIN vt2 ON vt2.c0 GROUP BY vt2.c0;
SELECT ALL vt0.c1, vt1.c0, vt0.c0, vt2.c0 FROM vt2, vt0, vt1 GROUP BY vt0.c1, vt1.c0, vt0.c0, vt2.c0;
SELECT vt0.c1, vt1.c0, vt0.c0, vt2.c0 FROM vt2, vt0, vt1 GROUP BY vt0.c1, vt1.c0, vt0.c0, vt2.c0 HAVING SUM(SUM(vt0.c0)) UNION ALL SELECT ALL vt0.c1, vt1.c0, vt0.c0, vt2.c0 FROM vt2, vt0, vt1 GROUP BY vt0.c1, vt1.c0, vt0.c0, vt2.c0 HAVING (NOT (SUM(SUM(vt0.c0)))) UNION ALL SELECT vt0.c1, vt1.c0, vt0.c0, vt2.c0 FROM vt2, vt0, vt1 GROUP BY vt0.c1, vt1.c0, vt0.c0, vt2.c0 HAVING ((SUM(SUM(vt0.c0))) ISNULL);
SELECT vt2.c0 FROM vt1, vt2 LEFT OUTER JOIN vt0 ON CASE WHEN ((vt0.c1) NOT BETWEEN (vt1.c0) AND (vt0.c0)) THEN '-249617141' WHEN (vt0.c0 IN ()) THEN CAST(vt0.c1 AS TEXT) WHEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c0)) THEN ((vt0.c0)<>(vt0.c0)) END;
SELECT ALL vt2.c0 FROM vt1, vt2 LEFT OUTER JOIN vt0 ON CASE WHEN ((vt0.c1) NOT BETWEEN (vt1.c0) AND (vt0.c0)) THEN '-249617141' WHEN (vt0.c0 IN ()) THEN CAST(vt0.c1 AS TEXT) WHEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c0)) THEN ((vt0.c0)<>(vt0.c0)) END WHERE ((((('\nid''|') BETWEEN (vt0.c0) AND (vt1.c0)))||(((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt1.c0))))) UNION ALL SELECT ALL vt2.c0 FROM vt1, vt2 LEFT OUTER JOIN vt0 ON CASE WHEN ((vt0.c1) NOT BETWEEN (vt1.c0) AND (vt0.c0)) THEN '-249617141' WHEN (vt0.c0 IN ()) THEN CAST(vt0.c1 AS TEXT) WHEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c0)) THEN ((vt0.c0)<>(vt0.c0)) END WHERE ((NOT ((((('\nid''|') BETWEEN (vt0.c0) AND (vt1.c0)))||(((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt1.c0))))))) UNION ALL SELECT ALL vt2.c0 FROM vt1, vt2 LEFT OUTER JOIN vt0 ON CASE WHEN ((vt0.c1) NOT BETWEEN (vt1.c0) AND (vt0.c0)) THEN '-249617141' WHEN (vt0.c0 IN ()) THEN CAST(vt0.c1 AS TEXT) WHEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c0)) THEN ((vt0.c0)!=(vt0.c0)) END WHERE ((((((('\nid''|') BETWEEN (vt0.c0) AND (vt1.c0)))||(((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt1.c0))))) ISNULL));
SELECT vt2.c0 FROM vt1, vt2 LEFT OUTER JOIN vt0 ON CASE WHEN ((vt0.c1) NOT BETWEEN (vt1.c0) AND (vt0.c0)) THEN '-249617141' WHEN (vt0.c0 IN ()) THEN CAST(vt0.c1 AS TEXT) WHEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c0)) THEN ((vt0.c0)<>(vt0.c0)) END;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE (CASE WHEN ((vt1.c0) ISNULL) THEN (~ (vt1.c0)) WHEN vt1.c0 COLLATE RTRIM THEN -2092978623 WHEN (+ (vt1.c0)) THEN CASE vt1.c0  WHEN NULL THEN vt1.c0 ELSE vt1.c0 END END) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT (CASE WHEN ((vt1.c0) ISNULL) THEN (~ (vt1.c0)) WHEN vt1.c0 COLLATE RTRIM THEN -2092978623 WHEN (+ (vt1.c0)) THEN CASE vt1.c0  WHEN NULL THEN vt1.c0 ELSE vt1.c0 END END))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((CASE WHEN ((vt1.c0) ISNULL) THEN (~ (vt1.c0)) WHEN vt1.c0 COLLATE RTRIM THEN -2092978623 WHEN (+ (vt1.c0)) THEN CASE vt1.c0  WHEN NULL THEN vt1.c0 ELSE vt1.c0 END END) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT ALL vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1, vt0 WHERE (JULIANDAY((vt0.c1 IN ()), CASE WHEN vt1.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt1.c0 WHEN vt0.c1 THEN 0X632c8929 END, CAST(vt0.c0 AS INTEGER))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1, vt0 WHERE ((NOT (JULIANDAY((vt0.c1 IN ()), CASE WHEN vt1.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt1.c0 WHEN vt0.c1 THEN 0x632c8929 END, CAST(vt0.c0 AS INTEGER))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1, vt0 WHERE (((JULIANDAY((vt0.c1 IN ()), CASE WHEN vt1.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt1.c0 WHEN vt0.c1 THEN 0X632c8929 END, CAST(vt0.c0 AS INTEGER))) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING CASE MIN(vt1.c0)  WHEN MIN(vt1.c0) THEN ((((COUNT(TOTAL(vt1.c0)))OR(COUNT(vt1.c0))))OR(AVG(MAX(SUM(NULL))))) ELSE (((COUNT(*)))>=((1.695549211E9))) END UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (CASE MIN(vt1.c0)  WHEN MIN(vt1.c0) THEN ((((COUNT(TOTAL(vt1.c0)))OR(COUNT(vt1.c0))))OR(AVG(MAX(SUM(NULL))))) ELSE (((COUNT(*)))>=((1.695549211E9))) END)) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((CASE MIN(vt1.c0)  WHEN MIN(vt1.c0) THEN ((((COUNT(TOTAL(vt1.c0)))OR(COUNT(vt1.c0))))OR(AVG(MAX(SUM(NULL))))) ELSE (((COUNT(*)))>=((1.695549211E9))) END) ISNULL);
SELECT MIN(((((vt0.c0)IS(x'')))||(((vt0.c0)-(vt2.c0))))) FROM vt2, vt0, vt1;
SELECT vt1.c0, vt2.c0, vt0.c0 FROM vt2 FULL OUTER JOIN vt0 ON (((vt2.c0 IN ())) NOT BETWEEN (vt0.c1) AND (CASE WHEN vt1.c0 THEN vt0.c0 END)) CROSS JOIN vt1 ON ((COALESCE(vt2.c0, vt0.c0)) NOTNULL);
SELECT DISTINCT * FROM vt1, vt2, vt0;
SELECT DISTINCT * FROM vt1, vt2, vt0 WHERE ((((((vt0.c0)) BETWEEN ((vt2.c0)) AND ((vt1.c0)))) BETWEEN (((((vt2.c0)OR(vt0.c0)))OR(vt0.c0))) AND (CASE vt1.c0  WHEN vt2.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN 'S_O?6#D%' THEN vt0.c0 ELSE vt1.c0 END))) UNION SELECT DISTINCT * FROM vt1, vt2, vt0 WHERE ((NOT ((((((vt0.c0)) BETWEEN ((vt2.c0)) AND ((vt1.c0)))) BETWEEN (((((vt2.c0)OR(vt0.c0)))OR(vt0.c0))) AND (CASE vt1.c0  WHEN vt2.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN 'S_O?6#D%' THEN vt0.c0 ELSE vt1.c0 END))))) UNION SELECT DISTINCT * FROM vt1, vt2, vt0 WHERE ((((((((vt0.c0)) BETWEEN ((vt2.c0)) AND ((vt1.c0)))) BETWEEN (((((vt2.c0)OR(vt0.c0)))OR(vt0.c0))) AND (CASE vt1.c0  WHEN vt2.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN 'S_O?6#D%' THEN vt0.c0 ELSE vt1.c0 END))) ISNULL));
SELECT DISTINCT * FROM vt1, vt2, vt0;
SELECT ALL vt1.c0, vt0.c1 FROM vt2 INNER JOIN vt1 ON (((NOT (vt0.c1))) NOT BETWEEN ((vt0.c0 IN ())) AND (0.3907685253507901)) RIGHT OUTER JOIN vt0 ON (((((((((vt0.c0 IN ()))AND(CAST(vt0.c0 AS INTEGER))))AND(((vt0.c1) NOTNULL))))AND(((vt0.c0)<(vt0.c0)))))AND((~ (vt0.c1)))) GROUP BY vt1.c0, vt0.c1;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT vt2.c0 FROM vt1, vt2;
SELECT vt2.c0 FROM vt1, vt2 WHERE ((CAST(vt2.c0 AS BLOB) IN (((((vt2.c0)OR(vt2.c0)))AND(vt2.c0)), LTRIM(x'')))) UNION ALL SELECT vt2.c0 FROM vt1, vt2 WHERE ((NOT ((CAST(vt2.c0 AS BLOB) IN (((((vt2.c0)OR(vt2.c0)))AND(vt2.c0)), LTRIM(x'')))))) UNION ALL SELECT ALL vt2.c0 FROM vt1, vt2 WHERE ((((CAST(vt2.c0 AS BLOB) IN (((((vt2.c0)OR(vt2.c0)))AND(vt2.c0)), LTRIM(x'')))) ISNULL));
SELECT vt2.c0 FROM vt1, vt2;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (vt0.c0) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (vt0.c0))) UNION SELECT DISTINCT * FROM vt0 WHERE (((vt0.c0) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL vt1.c0, vt0.c0, vt0.c1 FROM vt0 NATURAL JOIN vt1 GROUP BY vt1.c0, vt0.c0, vt0.c1;
SELECT vt1.c0, vt0.c0, vt0.c1 FROM vt0 NATURAL JOIN vt1 WHERE ((((vt1.c0, vt1.c0, vt0.c1)) BETWEEN ((vt0.c1 COLLATE NOCASE, CASE vt1.c0  WHEN vt0.c1 THEN vt0.c0 END, ((vt0.c1) NOT NULL))) AND ((((vt1.c0)||(vt0.c1)), (NOT (0.20952333214422714)), NULL)))) GROUP BY vt1.c0, vt0.c0, vt0.c1 UNION SELECT vt1.c0, vt0.c0, vt0.c1 FROM vt0 NATURAL JOIN vt1 WHERE ((NOT ((((vt1.c0, vt1.c0, vt0.c1)) BETWEEN ((vt0.c1 COLLATE NOCASE, CASE vt1.c0  WHEN vt0.c1 THEN vt0.c0 END, ((vt0.c1) NOT NULL))) AND ((((vt1.c0)||(vt0.c1)), (NOT (0.20952333214422714)), NULL)))))) GROUP BY vt1.c0, vt0.c0, vt0.c1 UNION SELECT ALL vt1.c0, vt0.c0, vt0.c1 FROM vt0 NATURAL JOIN vt1 WHERE ((((((vt1.c0, vt1.c0, vt0.c1)) BETWEEN ((vt0.c1 COLLATE NOCASE, CASE vt1.c0  WHEN vt0.c1 THEN vt0.c0 END, ((vt0.c1) NOT NULL))) AND ((((vt1.c0)||(vt0.c1)), (NOT (0.20952333214422714)), NULL)))) ISNULL)) GROUP BY vt1.c0, vt0.c0, vt0.c1;
SELECT ALL vt1.c0, vt0.c0, vt0.c1 FROM vt0 NATURAL JOIN vt1 GROUP BY vt1.c0, vt0.c0, vt0.c1;
SELECT ALL vt2.c0, vt0.c1, vt0.c0 FROM vt2, vt0 GROUP BY vt2.c0, vt0.c1, vt0.c0;
SELECT ALL vt2.c0, vt0.c1, vt0.c0 FROM vt2, vt0 GROUP BY vt2.c0, vt0.c1, vt0.c0 HAVING COUNT(*) UNION ALL SELECT vt2.c0, vt0.c1, vt0.c0 FROM vt2, vt0 GROUP BY vt2.c0, vt0.c1, vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt2.c0, vt0.c1, vt0.c0 FROM vt2, vt0 GROUP BY vt2.c0, vt0.c1, vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt2.c0, vt0.c1, vt0.c0 FROM vt2, vt0 GROUP BY vt2.c0, vt0.c1, vt0.c0;
SELECT ALL vt2.c0, vt0.c1, vt0.c0 FROM vt2, vt0 GROUP BY vt2.c0, vt0.c1, vt0.c0 HAVING COUNT(*) UNION ALL SELECT vt2.c0, vt0.c1, vt0.c0 FROM vt2, vt0 GROUP BY vt2.c0, vt0.c1, vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt2.c0, vt0.c1, vt0.c0 FROM vt2, vt0 GROUP BY vt2.c0, vt0.c1, vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt2.c0, vt0.c1, vt0.c0 FROM vt2, vt0 GROUP BY vt2.c0, vt0.c1, vt0.c0;
SELECT * FROM vt2, vt0;
SELECT * FROM vt2, vt0 WHERE (((CASE WHEN 0.9389925328767734 THEN vt0.c0 ELSE vt2.c0 END)&(CASE vt0.c1  WHEN vt2.c0 THEN vt0.c1 ELSE vt0.c0 END))) UNION ALL SELECT * FROM vt2, vt0 WHERE ((NOT (((CASE WHEN 0.9389925328767734 THEN vt0.c0 ELSE vt2.c0 END)&(CASE vt0.c1  WHEN vt2.c0 THEN vt0.c1 ELSE vt0.c0 END))))) UNION ALL SELECT * FROM vt2, vt0 WHERE (((((CASE WHEN 0.9389925328767734 THEN vt0.c0 ELSE vt2.c0 END)&(CASE vt0.c1  WHEN vt2.c0 THEN vt0.c1 ELSE vt0.c0 END))) ISNULL));
SELECT * FROM vt2, vt0;
SELECT DISTINCT * FROM vt1 FULL OUTER JOIN vt2 ON -1674882666 INNER JOIN vt0 ON (((((vt0.c0) NOT BETWEEN (NULL) AND (x'db06a961'))))>((((vt2.c0)AND(vt2.c0)))));
SELECT DISTINCT * FROM vt1 FULL OUTER JOIN vt2 ON -1674882666 INNER JOIN vt0 ON (((((vt0.c0) NOT BETWEEN (NULL) AND (x'db06a961'))))>((((vt2.c0)AND(vt2.c0))))) WHERE (vt0.c0) UNION SELECT DISTINCT * FROM vt1 FULL OUTER JOIN vt2 ON -1674882666 INNER JOIN vt0 ON (((((vt0.c0) NOT BETWEEN (NULL) AND (x'db06a961'))))>((((vt2.c0)AND(vt2.c0))))) WHERE ((NOT (vt0.c0))) UNION SELECT DISTINCT * FROM vt1 FULL OUTER JOIN vt2 ON -1674882666 INNER JOIN vt0 ON (((((vt0.c0) NOT BETWEEN (NULL) AND (x'db06a961'))))>((((vt2.c0)AND(vt2.c0))))) WHERE (((vt0.c0) ISNULL));
SELECT DISTINCT * FROM vt1 FULL OUTER JOIN vt2 ON -1674882666 INNER JOIN vt0 ON (((((vt0.c0) NOT BETWEEN (NULL) AND (x'db06a961'))))>((((vt2.c0)AND(vt2.c0)))));
SELECT vt1.c0, vt0.c0, vt0.c1 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0, vt0.c1;
SELECT vt1.c0, vt0.c0, vt0.c1 FROM vt1, vt0 WHERE (((vt1.c0 COLLATE BINARY) BETWEEN (UPPER(vt0.c0)) AND (vt0.c1))) GROUP BY vt1.c0, vt0.c0, vt0.c1 UNION SELECT ALL vt1.c0, vt0.c0, vt0.c1 FROM vt1, vt0 WHERE ((NOT (((vt1.c0 COLLATE BINARY) BETWEEN (UPPER(vt0.c0)) AND (vt0.c1))))) GROUP BY vt1.c0, vt0.c0, vt0.c1 UNION SELECT ALL vt1.c0, vt0.c0, vt0.c1 FROM vt1, vt0 WHERE (((((vt1.c0 COLLATE BINARY) BETWEEN (UPPER(vt0.c0)) AND (vt0.c1))) ISNULL)) GROUP BY vt1.c0, vt0.c0, vt0.c1;
SELECT vt1.c0, vt0.c0, vt0.c1 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0, vt0.c1;
SELECT vt0.c0, vt2.c0 FROM vt0, vt2 GROUP BY vt0.c0, vt2.c0;
SELECT vt0.c0, vt2.c0 FROM vt0, vt2 GROUP BY vt0.c0, vt2.c0 HAVING CASE CAST(AVG('807156428') AS INTEGER)  WHEN vt0.c0 THEN COUNT(*) ELSE TRIM(vt2.c0) END UNION ALL SELECT ALL vt0.c0, vt2.c0 FROM vt0, vt2 GROUP BY vt0.c0, vt2.c0 HAVING (NOT (CASE CAST(AVG('807156428') AS INTEGER)  WHEN vt0.c0 THEN COUNT(*) ELSE TRIM(vt2.c0) END)) UNION ALL SELECT vt0.c0, vt2.c0 FROM vt0, vt2 GROUP BY vt0.c0, vt2.c0 HAVING ((CASE CAST(AVG('807156428') AS INTEGER)  WHEN vt0.c0 THEN COUNT(*) ELSE TRIM(vt2.c0) END) ISNULL);
SELECT vt0.c0, vt2.c0 FROM vt0, vt2 GROUP BY vt0.c0, vt2.c0;
SELECT vt0.c0, vt2.c0 FROM vt0, vt2 GROUP BY vt0.c0, vt2.c0 HAVING CASE CAST(AVG('807156428') AS INTEGER)  WHEN vt0.c0 THEN COUNT(*) ELSE TRIM(vt2.c0) END UNION ALL SELECT ALL vt0.c0, vt2.c0 FROM vt0, vt2 GROUP BY vt0.c0, vt2.c0 HAVING (NOT (CASE CAST(AVG('807156428') AS INTEGER)  WHEN vt0.c0 THEN COUNT(*) ELSE TRIM(vt2.c0) END)) UNION ALL SELECT vt0.c0, vt2.c0 FROM vt0, vt2 GROUP BY vt0.c0, vt2.c0 HAVING ((CASE CAST(AVG('807156428') AS INTEGER)  WHEN vt0.c0 THEN COUNT(*) ELSE TRIM(vt2.c0) END) ISNULL);
SELECT vt0.c0, vt2.c0 FROM vt0, vt2 GROUP BY vt0.c0, vt2.c0;
SELECT ALL * FROM vt2, vt0, vt1;
SELECT ALL * FROM vt2, vt0, vt1 WHERE (json_object(vt2.c0, 1.695549211E9) COLLATE BINARY) UNION ALL SELECT * FROM vt2, vt0, vt1 WHERE ((NOT (json_object(vt2.c0, 1.695549211E9) COLLATE BINARY))) UNION ALL SELECT * FROM vt2, vt0, vt1 WHERE (((json_object(vt2.c0, 1.695549211E9) COLLATE BINARY) ISNULL));
SELECT ALL * FROM vt2, vt0, vt1;
SELECT DISTINCT vt0.c0 FROM vt2, vt0;
SELECT DISTINCT vt0.c0 FROM vt2, vt0 WHERE (CASE (+ (vt2.c0))  WHEN (((vt0.c0)) BETWEEN ((vt2.c0)) AND ((vt0.c0))) THEN vt0.c1 COLLATE NOCASE END) UNION SELECT DISTINCT vt0.c0 FROM vt2, vt0 WHERE ((NOT (CASE (+ (vt2.c0))  WHEN (((vt0.c0)) BETWEEN ((vt2.c0)) AND ((vt0.c0))) THEN vt0.c1 COLLATE NOCASE END))) UNION SELECT DISTINCT vt0.c0 FROM vt2, vt0 WHERE (((CASE (+ (vt2.c0))  WHEN (((vt0.c0)) BETWEEN ((vt2.c0)) AND ((vt0.c0))) THEN vt0.c1 COLLATE NOCASE END) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt2, vt0;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 FULL OUTER JOIN vt1 ON TIME(((vt0.c1)>=(vt0.c0)), ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)), CASE vt0.c0  WHEN vt0.c1 THEN vt1.c0 WHEN vt1.c0 THEN '-351376663' WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c1 END) GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 FULL OUTER JOIN vt1 ON TIME(((vt0.c1)>=(vt0.c0)), ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)), CASE vt0.c0  WHEN vt0.c1 THEN vt1.c0 WHEN vt1.c0 THEN '-351376663' WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c1 END) WHERE (((vt0.c0 COLLATE NOCASE) IS FALSE)) GROUP BY vt0.c0, vt0.c1 UNION SELECT ALL vt0.c0, vt0.c1 FROM vt0 FULL OUTER JOIN vt1 ON TIME(((vt0.c1)>=(vt0.c0)), ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)), CASE vt0.c0  WHEN vt0.c1 THEN vt1.c0 WHEN vt1.c0 THEN '-351376663' WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c1 END) WHERE ((NOT (((vt0.c0 COLLATE NOCASE) IS FALSE)))) GROUP BY vt0.c0, vt0.c1 UNION SELECT ALL vt0.c0, vt0.c1 FROM vt0 FULL OUTER JOIN vt1 ON TIME(((vt0.c1)>=(vt0.c0)), ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)), CASE vt0.c0  WHEN vt0.c1 THEN vt1.c0 WHEN vt1.c0 THEN '-351376663' WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c1 END) WHERE (((((vt0.c0 COLLATE NOCASE) IS FALSE)) ISNULL)) GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 FULL OUTER JOIN vt1 ON TIME(((vt0.c1)>=(vt0.c0)), ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)), CASE vt0.c0  WHEN vt0.c1 THEN vt1.c0 WHEN vt1.c0 THEN '-351376663' WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c1 END) GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt2.c0, vt1.c0, vt0.c0, vt0.c1 FROM vt2, vt1, vt0 GROUP BY vt2.c0, vt1.c0, vt0.c0, vt0.c1;
SELECT ALL vt2.c0, vt1.c0, vt0.c0, vt0.c1 FROM vt2, vt1, vt0 GROUP BY vt2.c0, vt1.c0, vt0.c0, vt0.c1 HAVING ((vt0.c1)|(MAX(vt1.c0))) UNION ALL SELECT ALL vt2.c0, vt1.c0, vt0.c0, vt0.c1 FROM vt2, vt1, vt0 GROUP BY vt2.c0, vt1.c0, vt0.c0, vt0.c1 HAVING (NOT (((vt0.c1)|(MAX(vt1.c0))))) UNION ALL SELECT ALL vt2.c0, vt1.c0, vt0.c0, vt0.c1 FROM vt2, vt1, vt0 GROUP BY vt2.c0, vt1.c0, vt0.c0, vt0.c1 HAVING ((((vt0.c1)|(MAX(vt1.c0)))) ISNULL);
SELECT ALL vt2.c0, vt1.c0, vt0.c0, vt0.c1 FROM vt2, vt1, vt0 GROUP BY vt2.c0, vt1.c0, vt0.c0, vt0.c1;
SELECT ALL vt2.c0, vt1.c0, vt0.c0, vt0.c1 FROM vt2, vt1, vt0 GROUP BY vt2.c0, vt1.c0, vt0.c0, vt0.c1 HAVING ((vt0.c1)|(MAX(vt1.c0))) UNION ALL SELECT ALL vt2.c0, vt1.c0, vt0.c0, vt0.c1 FROM vt2, vt1, vt0 GROUP BY vt2.c0, vt1.c0, vt0.c0, vt0.c1 HAVING (NOT (((vt0.c1)|(MAX(vt1.c0))))) UNION ALL SELECT ALL vt2.c0, vt1.c0, vt0.c0, vt0.c1 FROM vt2, vt1, vt0 GROUP BY vt2.c0, vt1.c0, vt0.c0, vt0.c1 HAVING ((((vt0.c1)|(MAX(vt1.c0)))) ISNULL);
SELECT ALL vt2.c0, vt1.c0, vt0.c0, vt0.c1 FROM vt2, vt1, vt0 GROUP BY vt2.c0, vt1.c0, vt0.c0, vt0.c1;
SELECT ALL * FROM vt1 INNER JOIN vt0 ON ((((((((CASE vt0.c1  WHEN vt1.c0 THEN vt0.c0 ELSE vt2.c0 END)AND(NULLIF(DISTINCT vt0.c1, vt1.c0))))AND(CAST(vt1.c0 AS INTEGER))))OR(((vt0.c0) NOTNULL))))AND(((vt1.c0) NOT BETWEEN (vt2.c0) AND (vt0.c1)))) LEFT OUTER JOIN vt2 ON (((((vt2.c0 IN ()))AND(CASE vt0.c1  WHEN vt2.c0 THEN vt0.c0 ELSE vt1.c0 END)))OR(vt1.c0 COLLATE NOCASE));
SELECT * FROM vt1 INNER JOIN vt0 ON ((((((((CASE vt0.c1  WHEN vt1.c0 THEN vt0.c0 ELSE vt2.c0 END)AND(NULLIF(DISTINCT vt0.c1, vt1.c0))))AND(CAST(vt1.c0 AS INTEGER))))OR(((vt0.c0) NOTNULL))))AND(((vt1.c0) NOT BETWEEN (vt2.c0) AND (vt0.c1)))) LEFT OUTER JOIN vt2 ON (((((vt2.c0 IN ()))AND(CASE vt0.c1  WHEN vt2.c0 THEN vt0.c0 ELSE vt1.c0 END)))OR(vt1.c0 COLLATE NOCASE)) WHERE ((NOT (TRIM(DISTINCT vt0.c1, vt2.c0)))) UNION ALL SELECT * FROM vt1 INNER JOIN vt0 ON ((((((((CASE vt0.c1  WHEN vt1.c0 THEN vt0.c0 ELSE vt2.c0 END)AND(NULLIF(DISTINCT vt0.c1, vt1.c0))))AND(CAST(vt1.c0 AS INTEGER))))OR(((vt0.c0) NOTNULL))))AND(((vt1.c0) NOT BETWEEN (vt2.c0) AND (vt0.c1)))) LEFT OUTER JOIN vt2 ON (((((vt2.c0 IN ()))AND(CASE vt0.c1  WHEN vt2.c0 THEN vt0.c0 ELSE vt1.c0 END)))OR(vt1.c0 COLLATE NOCASE)) WHERE ((NOT ((NOT (TRIM(DISTINCT vt0.c1, vt2.c0)))))) UNION ALL SELECT ALL * FROM vt1 INNER JOIN vt0 ON ((((((((CASE vt0.c1  WHEN vt1.c0 THEN vt0.c0 ELSE vt2.c0 END)AND(NULLIF(DISTINCT vt0.c1, vt1.c0))))AND(CAST(vt1.c0 AS INTEGER))))OR(((vt0.c0) NOTNULL))))AND(((vt1.c0) NOT BETWEEN (vt2.c0) AND (vt0.c1)))) LEFT OUTER JOIN vt2 ON (((((vt2.c0 IN ()))AND(CASE vt0.c1  WHEN vt2.c0 THEN vt0.c0 ELSE vt1.c0 END)))OR(vt1.c0 COLLATE NOCASE)) WHERE ((((NOT (TRIM(DISTINCT vt0.c1, vt2.c0)))) ISNULL));
SELECT ALL * FROM vt1 INNER JOIN vt0 ON ((((((((CASE vt0.c1  WHEN vt1.c0 THEN vt0.c0 ELSE vt2.c0 END)AND(NULLIF(DISTINCT vt0.c1, vt1.c0))))AND(CAST(vt1.c0 AS INTEGER))))OR(((vt0.c0) NOTNULL))))AND(((vt1.c0) NOT BETWEEN (vt2.c0) AND (vt0.c1)))) LEFT OUTER JOIN vt2 ON (((((vt2.c0 IN ()))AND(CASE vt0.c1  WHEN vt2.c0 THEN vt0.c0 ELSE vt1.c0 END)))OR(vt1.c0 COLLATE NOCASE));
SELECT DISTINCT * FROM vt2, vt0, vt1;
SELECT DISTINCT * FROM vt2, vt0, vt1 WHERE (('-1' IN ())) UNION SELECT DISTINCT * FROM vt2, vt0, vt1 WHERE ((NOT (('-1' IN ())))) UNION SELECT DISTINCT * FROM vt2, vt0, vt1 WHERE (((('-1' IN ())) ISNULL));
SELECT DISTINCT * FROM vt2, vt0, vt1;
SELECT vt2.c0 FROM vt2, vt0 GROUP BY vt2.c0;
SELECT vt2.c0 FROM vt2, vt0 WHERE (CAST((((vt0.c1, vt0.c0, vt2.c0, vt0.c0, vt0.c1))=((vt0.c0, vt2.c0, vt0.c1, vt0.c1, vt0.c0))) AS BLOB)) GROUP BY vt2.c0 UNION SELECT vt2.c0 FROM vt2, vt0 WHERE ((NOT (CAST((((vt0.c1, vt0.c0, vt2.c0, vt0.c0, vt0.c1))==((vt0.c0, vt2.c0, vt0.c1, vt0.c1, vt0.c0))) AS BLOB)))) GROUP BY vt2.c0 UNION SELECT ALL vt2.c0 FROM vt2, vt0 WHERE (((CAST((((vt0.c1, vt0.c0, vt2.c0, vt0.c0, vt0.c1))==((vt0.c0, vt2.c0, vt0.c1, vt0.c1, vt0.c0))) AS BLOB)) ISNULL)) GROUP BY vt2.c0;
SELECT vt2.c0 FROM vt2, vt0 GROUP BY vt2.c0;
SELECT vt0.c0, vt0.c1 FROM vt2, vt0, vt1 GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt2, vt0, vt1 GROUP BY vt0.c0, vt0.c1 HAVING ((GROUP_CONCAT(vt2.c0)) BETWEEN (GROUP_CONCAT(vt1.c0)) AND (GROUP_CONCAT(AVG(vt0.c1)))) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt2, vt0, vt1 GROUP BY vt0.c0, vt0.c1 HAVING (NOT (((GROUP_CONCAT(vt2.c0)) BETWEEN (GROUP_CONCAT(vt1.c0)) AND (GROUP_CONCAT(AVG(vt0.c1)))))) UNION ALL SELECT vt0.c0, vt0.c1 FROM vt2, vt0, vt1 GROUP BY vt0.c0, vt0.c1 HAVING ((((GROUP_CONCAT(vt2.c0)) BETWEEN (GROUP_CONCAT(vt1.c0)) AND (GROUP_CONCAT(AVG(vt0.c1))))) ISNULL);
SELECT * FROM vt2, vt1;
SELECT * FROM vt2, vt1 WHERE (((((vt2.c0 IN ())))==((((vt2.c0)|(vt1.c0)))))) UNION ALL SELECT * FROM vt2, vt1 WHERE ((NOT (((((vt2.c0 IN ())))=((((vt2.c0)|(vt1.c0)))))))) UNION ALL SELECT ALL * FROM vt2, vt1 WHERE (((((((vt2.c0 IN ())))=((((vt2.c0)|(vt1.c0)))))) ISNULL));
SELECT * FROM vt2, vt1;
SELECT DISTINCT vt1.c0, vt0.c0 FROM vt1, vt0;
SELECT DISTINCT vt1.c0, vt0.c0 FROM vt1, vt0 WHERE ((((vt0.c0)) BETWEEN ((CASE vt0.c1  WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 ELSE vt1.c0 END)) AND ((((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)))))) UNION SELECT DISTINCT vt1.c0, vt0.c0 FROM vt1, vt0 WHERE ((NOT ((((vt0.c0)) BETWEEN ((CASE vt0.c1  WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 ELSE vt1.c0 END)) AND ((((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)))))))) UNION SELECT DISTINCT vt1.c0, vt0.c0 FROM vt1, vt0 WHERE ((((((vt0.c0)) BETWEEN ((CASE vt0.c1  WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 ELSE vt1.c0 END)) AND ((((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)))))) ISNULL));
SELECT DISTINCT vt1.c0, vt0.c0 FROM vt1, vt0;
SELECT vt2.c0, vt1.c0 FROM vt1, vt0, vt2 GROUP BY vt2.c0, vt1.c0;
SELECT ALL vt2.c0, vt1.c0 FROM vt1, vt0, vt2 WHERE (LIKELY(CASE WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 END)) GROUP BY vt2.c0, vt1.c0 UNION SELECT vt2.c0, vt1.c0 FROM vt1, vt0, vt2 WHERE ((NOT (LIKELY(CASE WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 END)))) GROUP BY vt2.c0, vt1.c0 UNION SELECT vt2.c0, vt1.c0 FROM vt1, vt0, vt2 WHERE (((LIKELY(CASE WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 END)) ISNULL)) GROUP BY vt2.c0, vt1.c0;
SELECT vt2.c0, vt1.c0 FROM vt1, vt0, vt2 GROUP BY vt2.c0, vt1.c0;
SELECT ALL vt2.c0, vt0.c0, vt1.c0, vt0.c1 FROM vt2, vt1, vt0 GROUP BY vt2.c0, vt0.c0, vt1.c0, vt0.c1;
SELECT ALL vt2.c0, vt0.c0, vt1.c0, vt0.c1 FROM vt2, vt1, vt0 GROUP BY vt2.c0, vt0.c0, vt1.c0, vt0.c1 HAVING MAX(((vt1.c0)+(vt2.c0))) UNION ALL SELECT ALL vt2.c0, vt0.c0, vt1.c0, vt0.c1 FROM vt2, vt1 NOT INDEXED, vt0 GROUP BY vt2.c0, vt0.c0, vt1.c0, vt0.c1 HAVING (NOT (MAX(((vt1.c0)+(vt2.c0))))) UNION ALL SELECT vt2.c0, vt0.c0, vt1.c0, vt0.c1 FROM vt2, vt1, vt0 GROUP BY vt2.c0, vt0.c0, vt1.c0, vt0.c1 HAVING ((MAX(((vt1.c0)+(vt2.c0)))) ISNULL);
SELECT ALL vt2.c0, vt0.c0, vt1.c0, vt0.c1 FROM vt2, vt1, vt0 GROUP BY vt2.c0, vt0.c0, vt1.c0, vt0.c1;
SELECT ALL vt2.c0, vt0.c0, vt1.c0, vt0.c1 FROM vt2, vt1, vt0 GROUP BY vt2.c0, vt0.c0, vt1.c0, vt0.c1 HAVING MAX(((vt1.c0)+(vt2.c0))) UNION ALL SELECT ALL vt2.c0, vt0.c0, vt1.c0, vt0.c1 FROM vt2, vt1 NOT INDEXED, vt0 GROUP BY vt2.c0, vt0.c0, vt1.c0, vt0.c1 HAVING (NOT (MAX(((vt1.c0)+(vt2.c0))))) UNION ALL SELECT vt2.c0, vt0.c0, vt1.c0, vt0.c1 FROM vt2, vt1, vt0 GROUP BY vt2.c0, vt0.c0, vt1.c0, vt0.c1 HAVING ((MAX(((vt1.c0)+(vt2.c0)))) ISNULL);
SELECT ALL vt2.c0, vt0.c0, vt1.c0, vt0.c1 FROM vt2, vt1, vt0 GROUP BY vt2.c0, vt0.c0, vt1.c0, vt0.c1;
SELECT * FROM vt0 LEFT OUTER JOIN vt2 ON '465647998' CROSS JOIN vt1 ON ((((vt0.c1)<=('73284519'))) NOT BETWEEN (LIKELY(DISTINCT vt1.c0)) AND (CASE WHEN vt2.c0 THEN vt0.c1 WHEN vt0.c1 THEN 0.9389925328767734 WHEN vt1.c0 THEN vt2.c0 END));
SELECT ALL * FROM vt0 LEFT OUTER JOIN vt2 ON '465647998' CROSS JOIN vt1 ON ((((vt0.c1)<=('73284519'))) NOT BETWEEN (LIKELY(DISTINCT vt1.c0)) AND (CASE WHEN vt2.c0 THEN vt0.c1 WHEN vt0.c1 THEN 0.9389925328767734 WHEN vt1.c0 THEN vt2.c0 END)) WHERE (((((((vt0.c0) NOT NULL))AND(((vt0.c1)*(vt0.c1)))))OR(((vt2.c0)IS NOT(vt0.c1))))) UNION ALL SELECT * FROM vt0 LEFT OUTER JOIN vt2 ON '465647998' CROSS JOIN vt1 ON ((((vt0.c1)<=('73284519'))) NOT BETWEEN (LIKELY(DISTINCT vt1.c0)) AND (CASE WHEN vt2.c0 THEN vt0.c1 WHEN vt0.c1 THEN 0.9389925328767734 WHEN vt1.c0 THEN vt2.c0 END)) WHERE ((NOT (((((((vt0.c0) NOT NULL))AND(((vt0.c1)*(vt0.c1)))))OR(((vt2.c0)IS NOT(vt0.c1))))))) UNION ALL SELECT ALL * FROM vt0 LEFT OUTER JOIN vt2 ON '465647998' CROSS JOIN vt1 ON ((((vt0.c1)<=('73284519'))) NOT BETWEEN (LIKELY(DISTINCT vt1.c0)) AND (CASE WHEN vt2.c0 THEN vt0.c1 WHEN vt0.c1 THEN 0.9389925328767734 WHEN vt1.c0 THEN vt2.c0 END)) WHERE (((((((((vt0.c0) NOT NULL))AND(((vt0.c1)*(vt0.c1)))))OR(((vt2.c0)IS NOT(vt0.c1))))) ISNULL));
SELECT * FROM vt0 LEFT OUTER JOIN vt2 ON '465647998' CROSS JOIN vt1 ON ((((vt0.c1)<=('73284519'))) NOT BETWEEN (LIKELY(DISTINCT vt1.c0)) AND (CASE WHEN vt2.c0 THEN vt0.c1 WHEN vt0.c1 THEN 0.9389925328767734 WHEN vt1.c0 THEN vt2.c0 END));
SELECT DISTINCT * FROM vt1, vt0;
SELECT DISTINCT * FROM vt1, vt0 WHERE (((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)) COLLATE RTRIM) UNION SELECT DISTINCT * FROM vt1, vt0 WHERE ((NOT (((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)) COLLATE RTRIM))) UNION SELECT DISTINCT * FROM vt1, vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)) COLLATE RTRIM) ISNULL));
SELECT DISTINCT * FROM vt1, vt0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE ((- (NULL))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT ((- (NULL))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((((- (NULL))) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING x'' UNION ALL SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING (NOT (x'')) UNION ALL SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING ((x'') ISNULL);
SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING x'' UNION ALL SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING (NOT (x'')) UNION ALL SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING ((x'') ISNULL);
SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT vt1.c0, vt0.c0, vt2.c0, vt0.c1 FROM vt1, vt0, vt2;
SELECT vt1.c0, vt0.c0, vt2.c0, vt0.c1 FROM vt1, vt0, vt2 WHERE (((CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 WHEN vt1.c0 THEN vt2.c0 WHEN 1711886459 THEN vt0.c0 END)LIKE((((vt1.c0, vt1.c0, vt0.c0))<((vt1.c0, vt1.c0, vt1.c0)))))) UNION ALL SELECT vt1.c0, vt0.c0, vt2.c0, vt0.c1 FROM vt1, vt0, vt2 WHERE ((NOT (((CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 WHEN vt1.c0 THEN vt2.c0 WHEN 1711886459 THEN vt0.c0 END)LIKE((((vt1.c0, vt1.c0, vt0.c0))<((vt1.c0, vt1.c0, vt1.c0)))))))) UNION ALL SELECT ALL vt1.c0, vt0.c0, vt2.c0, vt0.c1 FROM vt1, vt0, vt2 WHERE (((((CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 WHEN vt1.c0 THEN vt2.c0 WHEN 1711886459 THEN vt0.c0 END)LIKE((((vt1.c0, vt1.c0, vt0.c0))<((vt1.c0, vt1.c0, vt1.c0)))))) ISNULL));
SELECT vt1.c0, vt0.c0, vt2.c0, vt0.c1 FROM vt1, vt0, vt2;
SELECT DISTINCT * FROM vt0 CROSS JOIN vt2 ON json_patch(NULLIF(vt2.c0, vt0.c1), ((((vt0.c0)OR(vt2.c0)))OR(vt2.c0)));
SELECT DISTINCT * FROM vt0 CROSS JOIN vt2 ON json_patch(NULLIF(vt2.c0, vt0.c1), ((((vt0.c0)OR(vt2.c0)))OR(vt2.c0))) WHERE (((vt0.c1 COLLATE RTRIM)>>(((((vt0.c1)AND(vt2.c0)))OR(vt2.c0))))) UNION SELECT DISTINCT * FROM vt0 CROSS JOIN vt2 ON json_patch(NULLIF(vt2.c0, vt0.c1), ((((vt0.c0)OR(vt2.c0)))OR(vt2.c0))) WHERE ((NOT (((vt0.c1 COLLATE RTRIM)>>(((((vt0.c1)AND(vt2.c0)))OR(vt2.c0))))))) UNION SELECT DISTINCT * FROM vt0 CROSS JOIN vt2 ON json_patch(NULLIF(vt2.c0, vt0.c1), ((((vt0.c0)OR(vt2.c0)))OR(vt2.c0))) WHERE (((((vt0.c1 COLLATE RTRIM)>>(((((vt0.c1)AND(vt2.c0)))OR(vt2.c0))))) ISNULL));
SELECT DISTINCT * FROM vt0 CROSS JOIN vt2 ON json_patch(NULLIF(vt2.c0, vt0.c1), ((((vt0.c0)OR(vt2.c0)))OR(vt2.c0)));
SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT ALL vt2.c0 FROM vt2 WHERE (LIKELIHOOD(((((((((vt2.c0)AND(vt2.c0)))AND(vt2.c0)))OR(vt2.c0)))OR(vt2.c0)), 0.2969670423042198)) GROUP BY vt2.c0 UNION SELECT vt2.c0 FROM vt2 WHERE ((NOT (LIKELIHOOD(((((((((vt2.c0)AND(vt2.c0)))AND(vt2.c0)))OR(vt2.c0)))OR(vt2.c0)), 0.2969670423042198)))) GROUP BY vt2.c0 UNION SELECT vt2.c0 FROM vt2 WHERE (((LIKELIHOOD(((((((((vt2.c0)AND(vt2.c0)))AND(vt2.c0)))OR(vt2.c0)))OR(vt2.c0)), 0.2969670423042198)) ISNULL)) GROUP BY vt2.c0;
SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT ALL vt1.c0, vt2.c0 FROM vt2 CROSS JOIN vt0 ON vt2.c0 LEFT OUTER JOIN vt1 ON ((CAST(vt1.c0 AS TEXT))|(CAST(vt2.c0 AS BLOB))) GROUP BY vt1.c0, vt2.c0;
SELECT ALL vt1.c0, vt2.c0 FROM vt2 CROSS JOIN vt0 ON vt2.c0 LEFT OUTER JOIN vt1 ON ((CAST(vt1.c0 AS TEXT))|(CAST(vt2.c0 AS BLOB))) GROUP BY vt1.c0, vt2.c0 HAVING COUNT(COUNT(*)) UNION ALL SELECT vt1.c0, vt2.c0 FROM vt2 CROSS JOIN vt0 ON vt2.c0 LEFT OUTER JOIN vt1 ON ((CAST(vt1.c0 AS TEXT))|(CAST(vt2.c0 AS BLOB))) GROUP BY vt1.c0, vt2.c0 HAVING (NOT (COUNT(COUNT(*)))) UNION ALL SELECT ALL vt1.c0, vt2.c0 FROM vt2 CROSS JOIN vt0 ON vt2.c0 LEFT OUTER JOIN vt1 ON ((CAST(vt1.c0 AS TEXT))|(CAST(vt2.c0 AS BLOB))) GROUP BY vt1.c0, vt2.c0 HAVING ((COUNT(COUNT(*))) ISNULL);
SELECT * FROM vt0, vt2;
SELECT * FROM vt0, vt2 WHERE (((((vt0.c0)OR(vt0.c1))) IS FALSE)) UNION ALL SELECT ALL * FROM vt0, vt2 WHERE ((NOT (((((vt0.c0)OR(vt0.c1))) IS FALSE)))) UNION ALL SELECT ALL * FROM vt0, vt2 WHERE (((((((vt0.c0)OR(vt0.c1))) IS FALSE)) ISNULL));
SELECT * FROM vt0, vt2;
SELECT DISTINCT vt0.c0, vt2.c0 FROM vt2, vt1, vt0;
SELECT DISTINCT vt0.c0, vt2.c0 FROM vt2, vt1, vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((UNLIKELY(vt2.c0))) AND ((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)))))) UNION SELECT DISTINCT vt0.c0, vt2.c0 FROM vt2, vt1, vt0 WHERE ((NOT ((((vt0.c0)) NOT BETWEEN ((UNLIKELY(vt2.c0))) AND ((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)))))))) UNION SELECT DISTINCT vt0.c0, vt2.c0 FROM vt2, vt1, vt0 WHERE ((((((vt0.c0)) NOT BETWEEN ((UNLIKELY(vt2.c0))) AND ((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)))))) ISNULL));
SELECT DISTINCT vt0.c0, vt2.c0 FROM vt2, vt1, vt0;
SELECT vt0.c1, vt1.c0 FROM vt1 FULL OUTER JOIN vt0 ON ((((((vt0.c1)/(vt2.c0)))AND(CAST(vt1.c0 AS TEXT))))AND(((vt1.c0) ISNULL))) FULL OUTER JOIN vt2 ON ((vt2.c0) NOTNULL) COLLATE RTRIM GROUP BY vt0.c1, vt1.c0;
SELECT vt0.c0, vt0.c1 FROM vt2, vt0, vt1 GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c0, vt0.c1 FROM vt2, vt0, vt1 GROUP BY vt0.c0, vt0.c1 HAVING ((MAX(MIN(vt2.c0))) NOT BETWEEN (((vt2.c0) BETWEEN (GROUP_CONCAT(vt2.c0)) AND (AVG(GROUP_CONCAT(vt0.c0))))) AND (CASE vt1.c0  WHEN vt2.c0 THEN COUNT(COUNT(*)) ELSE TOTAL(AVG(SUM(vt0.c0))) END)) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt2, vt0, vt1 GROUP BY vt0.c0, vt0.c1 HAVING (NOT (((MAX(MIN(vt2.c0))) NOT BETWEEN (((vt2.c0) BETWEEN (GROUP_CONCAT(vt2.c0)) AND (AVG(GROUP_CONCAT(vt0.c0))))) AND (CASE vt1.c0  WHEN vt2.c0 THEN COUNT(COUNT(*)) ELSE TOTAL(AVG(SUM(vt0.c0))) END)))) UNION ALL SELECT vt0.c0, vt0.c1 FROM vt2, vt0, vt1 GROUP BY vt0.c0, vt0.c1 HAVING ((((MAX(MIN(vt2.c0))) NOT BETWEEN (((vt2.c0) BETWEEN (GROUP_CONCAT(vt2.c0)) AND (AVG(GROUP_CONCAT(vt0.c0))))) AND (CASE vt1.c0  WHEN vt2.c0 THEN COUNT(COUNT(*)) ELSE TOTAL(AVG(SUM(vt0.c0))) END))) ISNULL);
SELECT ALL * FROM vt2, vt1;
SELECT * FROM vt2, vt1 WHERE (CAST((((vt2.c0, vt1.c0, 0.3530357437244477)) NOT BETWEEN ((vt2.c0, vt2.c0, vt2.c0)) AND ((vt2.c0, vt2.c0, vt1.c0))) AS REAL)) UNION ALL SELECT * FROM vt2, vt1 WHERE ((NOT (CAST((((vt2.c0, vt1.c0, 0.3530357437244477)) NOT BETWEEN ((vt2.c0, vt2.c0, vt2.c0)) AND ((vt2.c0, vt2.c0, vt1.c0))) AS REAL)))) UNION ALL SELECT ALL * FROM vt2, vt1 WHERE (((CAST((((vt2.c0, vt1.c0, 0.3530357437244477)) NOT BETWEEN ((vt2.c0, vt2.c0, vt2.c0)) AND ((vt2.c0, vt2.c0, vt1.c0))) AS REAL)) ISNULL));
SELECT ALL * FROM vt2, vt1;
SELECT DISTINCT vt0.c1 FROM vt0;
SELECT DISTINCT vt0.c1 FROM vt0 WHERE (((((vt0.c0)|(vt0.c1)))<=(((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1))))) UNION SELECT DISTINCT vt0.c1 FROM vt0 WHERE ((NOT (((((vt0.c0)|(vt0.c1)))<=(((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1))))))) UNION SELECT DISTINCT vt0.c1 FROM vt0 WHERE (((((((vt0.c0)|(vt0.c1)))<=(((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1))))) ISNULL));
SELECT DISTINCT vt0.c1 FROM vt0;
SELECT ALL vt2.c0, vt1.c0 FROM vt2 LEFT OUTER JOIN vt1 ON JULIANDAY(CAST(vt2.c0 AS TEXT), '0.16126750089797448', (- (vt2.c0))) GROUP BY vt2.c0, vt1.c0;
SELECT ALL vt2.c0, vt1.c0 FROM vt2 LEFT OUTER JOIN vt1 ON JULIANDAY(CAST(vt2.c0 AS TEXT), '0.16126750089797448', (- (vt2.c0))) WHERE ((~ (((('280675744'))=((vt2.c0)))))) GROUP BY vt2.c0, vt1.c0 UNION SELECT ALL vt2.c0, vt1.c0 FROM vt2 LEFT OUTER JOIN vt1 ON JULIANDAY(CAST(vt2.c0 AS TEXT), '0.16126750089797448', (- (vt2.c0))) WHERE ((NOT ((~ (((('280675744'))=((vt2.c0)))))))) GROUP BY vt2.c0, vt1.c0 UNION SELECT ALL vt2.c0, vt1.c0 FROM vt2 LEFT OUTER JOIN vt1 ON JULIANDAY(CAST(vt2.c0 AS TEXT), '0.16126750089797448', (- (vt2.c0))) WHERE ((((~ (((('280675744'))==((vt2.c0)))))) ISNULL)) GROUP BY vt2.c0, vt1.c0;
SELECT ALL vt2.c0, vt1.c0 FROM vt2 LEFT OUTER JOIN vt1 ON JULIANDAY(CAST(vt2.c0 AS TEXT), '0.16126750089797448', (- (vt2.c0))) GROUP BY vt2.c0, vt1.c0;
SELECT ALL vt0.c0, vt1.c0 FROM vt2 NOT INDEXED, vt0, vt1 GROUP BY vt0.c0, vt1.c0;
SELECT vt0.c0, vt1.c0 FROM vt2, vt0, vt1 GROUP BY vt0.c0, vt1.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt0.c0, vt1.c0 FROM vt2, vt0, vt1 GROUP BY vt0.c0, vt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt0.c0, vt1.c0 FROM vt2, vt0, vt1 GROUP BY vt0.c0, vt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt0.c0, vt1.c0 FROM vt2 NOT INDEXED, vt0, vt1 GROUP BY vt0.c0, vt1.c0;
SELECT vt0.c0, vt1.c0 FROM vt2, vt0, vt1 GROUP BY vt0.c0, vt1.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt0.c0, vt1.c0 FROM vt2, vt0, vt1 GROUP BY vt0.c0, vt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt0.c0, vt1.c0 FROM vt2, vt0, vt1 GROUP BY vt0.c0, vt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt0.c0, vt1.c0 FROM vt2 NOT INDEXED, vt0, vt1 GROUP BY vt0.c0, vt1.c0;
SELECT ALL vt1.c0, vt0.c1, vt0.c0 FROM vt0, vt1;
SELECT vt1.c0, vt0.c1, vt0.c0 FROM vt0, vt1 WHERE (((((((((((((vt1.c0)AND(vt0.c1)))OR(0.41036489024111156)))OR(vt1.c0)))AND(vt0.c0)))AND((((vt1.c0, vt0.c1, vt1.c0))<((vt0.c0, vt1.c0, vt0.c1))))))AND(vt0.c1))) UNION ALL SELECT vt1.c0, vt0.c1, vt0.c0 FROM vt0, vt1 WHERE ((NOT (((((((((((((vt1.c0)AND(vt0.c1)))OR(0.41036489024111156)))OR(vt1.c0)))AND(vt0.c0)))AND((((vt1.c0, vt0.c1, vt1.c0))<((vt0.c0, vt1.c0, vt0.c1))))))AND(vt0.c1))))) UNION ALL SELECT ALL vt1.c0, vt0.c1, vt0.c0 FROM vt0, vt1 WHERE (((((((((((((((vt1.c0)AND(vt0.c1)))OR(0.41036489024111156)))OR(vt1.c0)))AND(vt0.c0)))AND((((vt1.c0, vt0.c1, vt1.c0))<((vt0.c0, vt1.c0, vt0.c1))))))AND(vt0.c1))) ISNULL));
SELECT ALL vt1.c0, vt0.c1, vt0.c0 FROM vt0, vt1;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 NOT INDEXED WHERE (((('1984654059'))!=((vt0.c1)))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((('1984654059'))!=((vt0.c1)))))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((('1984654059'))<>((vt0.c1)))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE ((((vt1.c0 IN ()))OR(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT ((((vt1.c0 IN ()))OR(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((((((vt1.c0 IN ()))OR(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0, vt0.c0, vt0.c1 FROM vt1, vt2, vt0 GROUP BY vt1.c0, vt0.c0, vt0.c1;
SELECT vt1.c0, vt0.c0, vt0.c1 FROM vt1, vt2, vt0 GROUP BY vt1.c0, vt0.c0, vt0.c1 HAVING ((GROUP_CONCAT(COUNT(*))) IS TRUE) UNION ALL SELECT vt1.c0, vt0.c0, vt0.c1 FROM vt1, vt2, vt0 GROUP BY vt1.c0, vt0.c0, vt0.c1 HAVING (NOT (((GROUP_CONCAT(COUNT(*))) IS TRUE))) UNION ALL SELECT ALL vt1.c0, vt0.c0, vt0.c1 FROM vt1, vt2, vt0 GROUP BY vt1.c0, vt0.c0, vt0.c1 HAVING ((((GROUP_CONCAT(COUNT(*))) IS TRUE)) ISNULL);
SELECT vt0.c0, vt2.c0 FROM vt2, vt0, vt1;
SELECT vt0.c0, vt2.c0 FROM vt2, vt0, vt1 WHERE (CASE WHEN ((vt0.c1)-(vt1.c0)) THEN LIKE(vt1.c0, vt2.c0, '.') WHEN CAST(x'' AS NUMERIC) THEN ((((vt2.c0)OR(vt2.c0)))OR(0.733935199297818)) WHEN CAST(vt0.c0 AS TEXT) THEN ((vt2.c0)LIKE(0.9895534609388464)) ELSE ((vt1.c0)AND(vt1.c0)) END) UNION ALL SELECT vt0.c0, vt2.c0 FROM vt2, vt0, vt1 WHERE ((NOT (CASE WHEN ((vt0.c1)-(vt1.c0)) THEN LIKE(vt1.c0, vt2.c0, '.') WHEN CAST(x'' AS NUMERIC) THEN ((((vt2.c0)OR(vt2.c0)))OR(0.733935199297818)) WHEN CAST(vt0.c0 AS TEXT) THEN ((vt2.c0)LIKE(0.9895534609388464)) ELSE ((vt1.c0)AND(vt1.c0)) END))) UNION ALL SELECT ALL vt0.c0, vt2.c0 FROM vt2, vt0, vt1 WHERE (((CASE WHEN ((vt0.c1)-(vt1.c0)) THEN LIKE(vt1.c0, vt2.c0, '.') WHEN CAST(x'' AS NUMERIC) THEN ((((vt2.c0)OR(vt2.c0)))OR(0.733935199297818)) WHEN CAST(vt0.c0 AS TEXT) THEN ((vt2.c0)LIKE(0.9895534609388464)) ELSE ((vt1.c0)AND(vt1.c0)) END) ISNULL));
SELECT vt0.c0, vt2.c0 FROM vt2, vt0, vt1;
SELECT DISTINCT vt0.c1 FROM vt0;
SELECT DISTINCT vt0.c1 FROM vt0 WHERE (LOWER(CAST(vt0.c1 AS NUMERIC))) UNION SELECT DISTINCT vt0.c1 FROM vt0 WHERE ((NOT (LOWER(CAST(vt0.c1 AS NUMERIC))))) UNION SELECT DISTINCT vt0.c1 FROM vt0 WHERE (((LOWER(CAST(vt0.c1 AS NUMERIC))) ISNULL));
SELECT DISTINCT vt0.c1 FROM vt0;
SELECT vt2.c0, vt1.c0, vt0.c0, vt0.c1 FROM vt1, vt2, vt0 GROUP BY vt2.c0, vt1.c0, vt0.c0, vt0.c1;
SELECT vt2.c0, vt1.c0, vt0.c0, vt0.c1 FROM vt1, vt2, vt0 WHERE (((((vt0.c1)>=(vt2.c0)))/(CAST('-763505401' AS REAL)))) GROUP BY vt2.c0, vt1.c0, vt0.c0, vt0.c1 UNION SELECT ALL vt2.c0, vt1.c0, vt0.c0, vt0.c1 FROM vt1, vt2, vt0 WHERE ((NOT (((((vt0.c1)>=(vt2.c0)))/(CAST('-763505401' AS REAL)))))) GROUP BY vt2.c0, vt1.c0, vt0.c0, vt0.c1 UNION SELECT vt2.c0, vt1.c0, vt0.c0, vt0.c1 FROM vt1, vt2, vt0 WHERE (((((((vt0.c1)>=(vt2.c0)))/(CAST('-763505401' AS REAL)))) ISNULL)) GROUP BY vt2.c0, vt1.c0, vt0.c0, vt0.c1;
SELECT vt2.c0, vt1.c0, vt0.c0, vt0.c1 FROM vt1, vt2, vt0 GROUP BY vt2.c0, vt1.c0, vt0.c0, vt0.c1;
SELECT vt1.c0 FROM vt1, vt2 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1, vt2 GROUP BY vt1.c0 HAVING COUNT(vt1.c0 COLLATE NOCASE) UNION ALL SELECT vt1.c0 FROM vt1 NOT INDEXED, vt2 GROUP BY vt1.c0 HAVING (NOT (COUNT(vt1.c0 COLLATE NOCASE))) UNION ALL SELECT ALL vt1.c0 FROM vt1, vt2 GROUP BY vt1.c0 HAVING ((COUNT(vt1.c0 COLLATE NOCASE)) ISNULL);
SELECT vt1.c0 FROM vt1, vt2 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1, vt2 GROUP BY vt1.c0 HAVING COUNT(vt1.c0 COLLATE NOCASE) UNION ALL SELECT vt1.c0 FROM vt1 NOT INDEXED, vt2 GROUP BY vt1.c0 HAVING (NOT (COUNT(vt1.c0 COLLATE NOCASE))) UNION ALL SELECT ALL vt1.c0 FROM vt1, vt2 GROUP BY vt1.c0 HAVING ((COUNT(vt1.c0 COLLATE NOCASE)) ISNULL);
SELECT vt1.c0 FROM vt1, vt2 GROUP BY vt1.c0;
SELECT * FROM vt0, vt2, vt1;
SELECT * FROM vt0, vt2, vt1 WHERE (json_object((((((((('-1461930883')OR(vt1.c0)))OR(vt2.c0)))AND(vt2.c0)))OR(vt0.c1)), ((vt1.c0)+(vt0.c1)))) UNION ALL SELECT * FROM vt0, vt2, vt1 WHERE ((NOT (json_object((((((((('-1461930883')OR(vt1.c0)))OR(vt2.c0)))AND(vt2.c0)))OR(vt0.c1)), ((vt1.c0)+(vt0.c1)))))) UNION ALL SELECT ALL * FROM vt0, vt2, vt1 WHERE (((json_object((((((((('-1461930883')OR(vt1.c0)))OR(vt2.c0)))AND(vt2.c0)))OR(vt0.c1)), ((vt1.c0)+(vt0.c1)))) ISNULL));
SELECT * FROM vt0, vt2, vt1;
SELECT DISTINCT vt2.c0 FROM vt2;
SELECT DISTINCT vt2.c0 FROM vt2 WHERE ((((((vt2.c0, vt2.c0, vt2.c0))>=((vt2.c0, vt2.c0, vt2.c0)))) IS TRUE)) UNION SELECT DISTINCT vt2.c0 FROM vt2 WHERE ((NOT ((((((vt2.c0, vt2.c0, vt2.c0))>=((vt2.c0, vt2.c0, vt2.c0)))) IS TRUE)))) UNION SELECT DISTINCT vt2.c0 FROM vt2 WHERE ((((((((vt2.c0, vt2.c0, vt2.c0))>=((vt2.c0, vt2.c0, vt2.c0)))) IS TRUE)) ISNULL));
SELECT DISTINCT vt2.c0 FROM vt2;
SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT ALL vt2.c0 FROM vt2 WHERE (((NULL IN (vt2.c0)) IN ((- (vt2.c0))))) GROUP BY vt2.c0 UNION SELECT ALL vt2.c0 FROM vt2 WHERE ((NOT (((NULL IN (vt2.c0)) IN ((- (vt2.c0))))))) GROUP BY vt2.c0 UNION SELECT vt2.c0 FROM vt2 WHERE (((((NULL IN (vt2.c0)) IN ((- (vt2.c0))))) ISNULL)) GROUP BY vt2.c0;
SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT vt0.c1, vt0.c0, vt2.c0, vt1.c0 FROM vt2, vt1, vt0 GROUP BY vt0.c1, vt0.c0, vt2.c0, vt1.c0;
SELECT ALL vt0.c1, vt0.c0, vt2.c0, vt1.c0 FROM vt2, vt1, vt0 GROUP BY vt0.c1, vt0.c0, vt2.c0, vt1.c0 HAVING (((SUM(vt1.c0))) BETWEEN ((COUNT(vt2.c0))) AND ((((TOTAL(vt2.c0))IS NOT(0xfffffffffd8797a2))))) UNION ALL SELECT vt0.c1, vt0.c0, vt2.c0, vt1.c0 FROM vt2, vt1, vt0 GROUP BY vt0.c1, vt0.c0, vt2.c0, vt1.c0 HAVING (NOT ((((SUM(vt1.c0))) BETWEEN ((COUNT(vt2.c0))) AND ((((TOTAL(vt2.c0))IS NOT(0xfffffffffd8797a2))))))) UNION ALL SELECT ALL vt0.c1, vt0.c0, vt2.c0, vt1.c0 FROM vt2, vt1, vt0 GROUP BY vt0.c1, vt0.c0, vt2.c0, vt1.c0 HAVING (((((SUM(vt1.c0))) BETWEEN ((COUNT(vt2.c0))) AND ((((TOTAL(vt2.c0))IS NOT(0Xfffffffffd8797a2)))))) ISNULL);
SELECT vt0.c1, vt0.c0, vt2.c0, vt1.c0 FROM vt2, vt1, vt0 GROUP BY vt0.c1, vt0.c0, vt2.c0, vt1.c0;
SELECT ALL vt0.c1, vt0.c0, vt2.c0, vt1.c0 FROM vt2, vt1, vt0 GROUP BY vt0.c1, vt0.c0, vt2.c0, vt1.c0 HAVING (((SUM(vt1.c0))) BETWEEN ((COUNT(vt2.c0))) AND ((((TOTAL(vt2.c0))IS NOT(0xfffffffffd8797a2))))) UNION ALL SELECT vt0.c1, vt0.c0, vt2.c0, vt1.c0 FROM vt2, vt1, vt0 GROUP BY vt0.c1, vt0.c0, vt2.c0, vt1.c0 HAVING (NOT ((((SUM(vt1.c0))) BETWEEN ((COUNT(vt2.c0))) AND ((((TOTAL(vt2.c0))IS NOT(0xfffffffffd8797a2))))))) UNION ALL SELECT ALL vt0.c1, vt0.c0, vt2.c0, vt1.c0 FROM vt2, vt1, vt0 GROUP BY vt0.c1, vt0.c0, vt2.c0, vt1.c0 HAVING (((((SUM(vt1.c0))) BETWEEN ((COUNT(vt2.c0))) AND ((((TOTAL(vt2.c0))IS NOT(0Xfffffffffd8797a2)))))) ISNULL);
SELECT vt0.c1, vt0.c0, vt2.c0, vt1.c0 FROM vt2, vt1, vt0 GROUP BY vt0.c1, vt0.c0, vt2.c0, vt1.c0;
SELECT ALL vt0.c0, vt0.c1, vt2.c0 FROM vt2, vt0;
SELECT vt0.c0, vt0.c1, vt2.c0 FROM vt2, vt0 WHERE (vt0.c0) UNION ALL SELECT ALL vt0.c0, vt0.c1, vt2.c0 FROM vt2, vt0 WHERE ((NOT (vt0.c0))) UNION ALL SELECT ALL vt0.c0, vt0.c1, vt2.c0 FROM vt2, vt0 WHERE (((vt0.c0) ISNULL));
SELECT ALL vt0.c0, vt0.c1, vt2.c0 FROM vt2, vt0;
SELECT DISTINCT * FROM vt1, vt0, vt2;
SELECT DISTINCT * FROM vt1, vt0, vt2 WHERE (((UNLIKELY(vt1.c0)) BETWEEN (((vt0.c1)>>(vt2.c0))) AND (((vt1.c0) NOTNULL)))) UNION SELECT DISTINCT * FROM vt1, vt0, vt2 WHERE ((NOT (((UNLIKELY(vt1.c0)) BETWEEN (((vt0.c1)>>(vt2.c0))) AND (((vt1.c0) NOTNULL)))))) UNION SELECT DISTINCT * FROM vt1, vt0, vt2 WHERE (((((UNLIKELY(vt1.c0)) BETWEEN (((vt0.c1)>>(vt2.c0))) AND (((vt1.c0) NOTNULL)))) ISNULL));
SELECT DISTINCT * FROM vt1, vt0, vt2;
SELECT ALL vt0.c1, vt2.c0, vt0.c0 FROM vt2, vt0 GROUP BY vt0.c1, vt2.c0, vt0.c0;
SELECT ALL vt0.c1, vt2.c0, vt0.c0 FROM vt2, vt0 WHERE (((((((((TIME(vt0.c1, vt0.c0, vt0.c1))OR((- (vt0.c0)))))OR((vt2.c0 IN (vt0.c0, vt2.c0)))))AND(CAST(vt0.c1 AS NUMERIC))))OR('423090521'))) GROUP BY vt0.c1, vt2.c0, vt0.c0 UNION SELECT ALL vt0.c1, vt2.c0, vt0.c0 FROM vt2, vt0 WHERE ((NOT (((((((((TIME(vt0.c1, vt0.c0, vt0.c1))OR((- (vt0.c0)))))OR((vt2.c0 IN (vt0.c0, vt2.c0)))))AND(CAST(vt0.c1 AS NUMERIC))))OR('423090521'))))) GROUP BY vt0.c1, vt2.c0, vt0.c0 UNION SELECT vt0.c1, vt2.c0, vt0.c0 FROM vt2, vt0 WHERE (((((((((((TIME(vt0.c1, vt0.c0, vt0.c1))OR((- (vt0.c0)))))OR((vt2.c0 IN (vt0.c0, vt2.c0)))))AND(CAST(vt0.c1 AS NUMERIC))))OR('423090521'))) ISNULL)) GROUP BY vt0.c1, vt2.c0, vt0.c0;
SELECT ALL vt0.c1, vt2.c0, vt0.c0 FROM vt2, vt0 GROUP BY vt0.c1, vt2.c0, vt0.c0;
SELECT vt0.c1, vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c1, vt0.c0, vt1.c0;
SELECT ALL vt0.c1, vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c1, vt0.c0, vt1.c0 HAVING (((GROUP_CONCAT(vt0.c1)))!=((TOTAL(MAX(COUNT(*)))))) UNION ALL SELECT vt0.c1, vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c1, vt0.c0, vt1.c0 HAVING (NOT ((((GROUP_CONCAT(vt0.c1)))<>((TOTAL(MAX(COUNT(*)))))))) UNION ALL SELECT ALL vt0.c1, vt0.c0, vt1.c0 FROM vt0 NOT INDEXED, vt1 GROUP BY vt0.c1, vt0.c0, vt1.c0 HAVING (((((GROUP_CONCAT(vt0.c1)))!=((TOTAL(MAX(COUNT(*))))))) ISNULL);
SELECT ALL vt1.c0, vt2.c0 FROM vt2, vt1;
SELECT vt1.c0, vt2.c0 FROM vt2, vt1 WHERE ((((vt2.c0)%(vt2.c0)) IN ())) UNION ALL SELECT vt1.c0, vt2.c0 FROM vt2, vt1 WHERE ((NOT ((((vt2.c0)%(vt2.c0)) IN ())))) UNION ALL SELECT vt1.c0, vt2.c0 FROM vt2, vt1 WHERE ((((((vt2.c0)%(vt2.c0)) IN ())) ISNULL));
SELECT ALL vt1.c0, vt2.c0 FROM vt2, vt1;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (CASE WHEN CAST(vt0.c0 AS INTEGER) THEN (~ (vt0.c1)) WHEN (vt0.c1 IN ()) THEN vt0.c0 COLLATE BINARY WHEN 0.5660161186934536 THEN ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) ELSE TYPEOF(DISTINCT vt0.c1) END) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (CASE WHEN CAST(vt0.c0 AS INTEGER) THEN (~ (vt0.c1)) WHEN (vt0.c1 IN ()) THEN vt0.c0 COLLATE BINARY WHEN 0.5660161186934536 THEN ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) ELSE TYPEOF(DISTINCT vt0.c1) END))) UNION SELECT DISTINCT * FROM vt0 WHERE (((CASE WHEN CAST(vt0.c0 AS INTEGER) THEN (~ (vt0.c1)) WHEN (vt0.c1 IN ()) THEN vt0.c0 COLLATE BINARY WHEN 0.5660161186934536 THEN ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) ELSE TYPEOF(DISTINCT vt0.c1) END) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE (((NULL)<>(CAST(x'af4f' AS INTEGER)))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (((NULL)!=(CAST(x'af4f' AS INTEGER)))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE (((((NULL)<>(CAST(x'af4f' AS INTEGER)))) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING ((((('阘Į') IS TRUE), MIN(vt0.c0), MAX(MAX(SUM(vt0.c0)))))<>((MIN(MIN(vt0.c1)), COUNT(*), vt0.c0))) UNION ALL SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING (NOT (((((('阘Į') IS TRUE), MIN(vt0.c0), MAX(MAX(SUM(vt0.c0)))))!=((MIN(MIN(vt0.c1)), COUNT(*), vt0.c0))))) UNION ALL SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING ((((((('阘Į') IS TRUE), MIN(vt0.c0), MAX(MAX(SUM(vt0.c0)))))<>((MIN(MIN(vt0.c1)), COUNT(*), vt0.c0)))) ISNULL);
SELECT vt0.c0, vt1.c0, vt2.c0, vt0.c1 FROM vt1, vt0, vt2;
SELECT ALL vt0.c0, vt1.c0, vt2.c0, vt0.c1 FROM vt1, vt0, vt2 WHERE (vt0.c0) UNION ALL SELECT vt0.c0, vt1.c0, vt2.c0, vt0.c1 FROM vt1, vt0, vt2 WHERE ((NOT (vt0.c0))) UNION ALL SELECT vt0.c0, vt1.c0, vt2.c0, vt0.c1 FROM vt1, vt0, vt2 WHERE (((vt0.c0) ISNULL));
SELECT vt0.c0, vt1.c0, vt2.c0, vt0.c1 FROM vt1, vt0, vt2;
SELECT DISTINCT vt0.c1, vt0.c0, vt2.c0 FROM vt0 FULL OUTER JOIN vt2 ON vt0.c0;
SELECT DISTINCT vt0.c1, vt0.c0, vt2.c0 FROM vt0 FULL OUTER JOIN vt2 ON vt0.c0 WHERE ((((((vt0.c1)IS NOT(vt0.c0))))>=((vt0.c1 COLLATE RTRIM)))) UNION SELECT DISTINCT vt0.c1, vt0.c0, vt2.c0 FROM vt0 FULL OUTER JOIN vt2 ON vt0.c0 WHERE ((NOT ((((((vt0.c1)IS NOT(vt0.c0))))>=((vt0.c1 COLLATE RTRIM)))))) UNION SELECT DISTINCT vt0.c1, vt0.c0, vt2.c0 FROM vt0 FULL OUTER JOIN vt2 ON vt0.c0 WHERE ((((((((vt0.c1)IS NOT(vt0.c0))))>=((vt0.c1 COLLATE RTRIM)))) ISNULL));
SELECT DISTINCT vt0.c1, vt0.c0, vt2.c0 FROM vt0 FULL OUTER JOIN vt2 ON vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE ('0.9597541217123544' COLLATE RTRIM) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT ('0.9597541217123544' COLLATE RTRIM))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((('0.9597541217123544' COLLATE RTRIM) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING COUNT(*) UNION ALL SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING COUNT(*) UNION ALL SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL * FROM vt1, vt2;
SELECT ALL * FROM vt1, vt2 WHERE (((vt1.c0) IS FALSE)) UNION ALL SELECT ALL * FROM vt1, vt2 WHERE ((NOT (((vt1.c0) IS FALSE)))) UNION ALL SELECT ALL * FROM vt1, vt2 WHERE (((((vt1.c0) IS FALSE)) ISNULL));
SELECT ALL * FROM vt1, vt2;
SELECT DISTINCT * FROM vt0 RIGHT OUTER JOIN vt2 ON ((COALESCE(vt0.c0, vt0.c0)) NOT BETWEEN (((((((((vt2.c0)OR(vt0.c1)))AND(vt0.c1)))OR(vt0.c0)))OR(vt0.c1))) AND (((vt0.c0)IS(vt2.c0))));
SELECT DISTINCT * FROM vt0 RIGHT OUTER JOIN vt2 ON ((COALESCE(vt0.c0, vt0.c0)) NOT BETWEEN (((((((((vt2.c0)OR(vt0.c1)))AND(vt0.c1)))OR(vt0.c0)))OR(vt0.c1))) AND (((vt0.c0)IS(vt2.c0)))) WHERE (((((0.4087276994807003)IS('251882213'))) NOT BETWEEN (vt0.c0) AND (IFNULL(vt2.c0, vt2.c0)))) UNION SELECT DISTINCT * FROM vt0 RIGHT OUTER JOIN vt2 ON ((COALESCE(vt0.c0, vt0.c0)) NOT BETWEEN (((((((((vt2.c0)OR(vt0.c1)))AND(vt0.c1)))OR(vt0.c0)))OR(vt0.c1))) AND (((vt0.c0)IS(vt2.c0)))) WHERE ((NOT (((((0.4087276994807003)IS('251882213'))) NOT BETWEEN (vt0.c0) AND (IFNULL(vt2.c0, vt2.c0)))))) UNION SELECT DISTINCT * FROM vt0 RIGHT OUTER JOIN vt2 ON ((COALESCE(vt0.c0, vt0.c0)) NOT BETWEEN (((((((((vt2.c0)OR(vt0.c1)))AND(vt0.c1)))OR(vt0.c0)))OR(vt0.c1))) AND (((vt0.c0)IS(vt2.c0)))) WHERE (((((((0.4087276994807003)IS('251882213'))) NOT BETWEEN (vt0.c0) AND (IFNULL(vt2.c0, vt2.c0)))) ISNULL));
SELECT DISTINCT * FROM vt0 RIGHT OUTER JOIN vt2 ON ((COALESCE(vt0.c0, vt0.c0)) NOT BETWEEN (((((((((vt2.c0)OR(vt0.c1)))AND(vt0.c1)))OR(vt0.c0)))OR(vt0.c1))) AND (((vt0.c0)IS(vt2.c0))));
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE (((((((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0))<>((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0)))))<((CAST(vt1.c0 AS INTEGER))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (((((((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0))<>((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0)))))<((CAST(vt1.c0 AS INTEGER))))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE (((((((((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0))<>((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0)))))<((CAST(vt1.c0 AS INTEGER))))) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt0.c1, vt1.c0, vt0.c0 FROM vt2, vt0, vt1 GROUP BY vt0.c1, vt1.c0, vt0.c0;
SELECT vt0.c1, vt1.c0, vt0.c0 FROM vt2, vt0, vt1 GROUP BY vt0.c1, vt1.c0, vt0.c0 HAVING ((((COUNT(MAX(MAX(vt0.c0))))AND(vt0.c1 COLLATE BINARY)))OR(COUNT(*))) UNION ALL SELECT ALL vt0.c1, vt1.c0, vt0.c0 FROM vt2, vt0, vt1 GROUP BY vt0.c1, vt1.c0, vt0.c0 HAVING (NOT (((((COUNT(MAX(MAX(vt0.c0))))AND(vt0.c1 COLLATE BINARY)))OR(COUNT(*))))) UNION ALL SELECT vt0.c1, vt1.c0, vt0.c0 FROM vt2, vt0, vt1 GROUP BY vt0.c1, vt1.c0, vt0.c0 HAVING ((((((COUNT(MAX(MAX(vt0.c0))))AND(vt0.c1 COLLATE BINARY)))OR(COUNT(*)))) ISNULL);
SELECT vt2.c0 FROM vt2;
SELECT vt2.c0 FROM vt2 WHERE (vt2.c0 COLLATE NOCASE) UNION ALL SELECT ALL vt2.c0 FROM vt2 WHERE ((NOT (vt2.c0 COLLATE NOCASE))) UNION ALL SELECT vt2.c0 FROM vt2 WHERE (((vt2.c0 COLLATE NOCASE) ISNULL));
SELECT vt2.c0 FROM vt2;
SELECT DISTINCT vt0.c0 FROM vt0, vt2, vt1;
SELECT DISTINCT vt0.c0 FROM vt0 NOT INDEXED, vt2, vt1 WHERE ((((vt0.c1)) BETWEEN ((vt2.c0)) AND (((~ (vt0.c1)))))) UNION SELECT DISTINCT vt0.c0 FROM vt0, vt2, vt1 WHERE ((NOT ((((vt0.c1)) BETWEEN ((vt2.c0)) AND (((~ (vt0.c1)))))))) UNION SELECT DISTINCT vt0.c0 FROM vt0, vt2, vt1 WHERE ((((((vt0.c1)) BETWEEN ((vt2.c0)) AND (((~ (vt0.c1)))))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0, vt2, vt1;
SELECT vt2.c0, vt0.c1 FROM vt1, vt2, vt0 GROUP BY vt2.c0, vt0.c1;
SELECT vt2.c0, vt0.c1 FROM vt1, vt2, vt0 WHERE (0.2419425174221178) GROUP BY vt2.c0, vt0.c1 UNION SELECT vt2.c0, vt0.c1 FROM vt1, vt2, vt0 WHERE ((NOT (0.2419425174221178))) GROUP BY vt2.c0, vt0.c1 UNION SELECT ALL vt2.c0, vt0.c1 FROM vt1, vt2, vt0 WHERE (((0.2419425174221178) ISNULL)) GROUP BY vt2.c0, vt0.c1;
SELECT vt2.c0, vt0.c1 FROM vt1, vt2, vt0 GROUP BY vt2.c0, vt0.c1;
SELECT ALL vt0.c1, vt2.c0 FROM vt0, vt2 GROUP BY vt0.c1, vt2.c0;
SELECT ALL vt0.c1, vt2.c0 FROM vt0, vt2 GROUP BY vt0.c1, vt2.c0 HAVING SUM(CASE 0xffffffffacf1e023  WHEN vt0.c1 THEN SUM(AVG(GROUP_CONCAT(GROUP_CONCAT(MIN(vt2.c0))))) WHEN COUNT(NULL) THEN COUNT(SUM(vt0.c0)) WHEN vt2.c0 THEN vt2.c0 ELSE vt2.c0 END) UNION ALL SELECT ALL vt0.c1, vt2.c0 FROM vt0, vt2 GROUP BY vt0.c1, vt2.c0 HAVING (NOT (SUM(CASE 0xffffffffacf1e023  WHEN vt0.c1 THEN SUM(AVG(GROUP_CONCAT(GROUP_CONCAT(MIN(vt2.c0))))) WHEN COUNT(NULL) THEN COUNT(SUM(vt0.c0)) WHEN vt2.c0 THEN vt2.c0 ELSE vt2.c0 END))) UNION ALL SELECT vt0.c1, vt2.c0 FROM vt0, vt2 GROUP BY vt0.c1, vt2.c0 HAVING ((SUM(CASE 0xffffffffacf1e023  WHEN vt0.c1 THEN SUM(AVG(GROUP_CONCAT(GROUP_CONCAT(MIN(vt2.c0))))) WHEN COUNT(NULL) THEN COUNT(SUM(vt0.c0)) WHEN vt2.c0 THEN vt2.c0 ELSE vt2.c0 END)) ISNULL);
SELECT vt0.c0 FROM vt1, vt2, vt0;
SELECT vt0.c0 FROM vt1, vt2, vt0 WHERE (((MAX(NULL, 1598780561))<<(((vt0.c1) BETWEEN (vt1.c0) AND (vt0.c1))))) UNION ALL SELECT vt0.c0 FROM vt1, vt2 NOT INDEXED, vt0 WHERE ((NOT (((MAX(NULL, 1598780561))<<(((vt0.c1) BETWEEN (vt1.c0) AND (vt0.c1))))))) UNION ALL SELECT vt0.c0 FROM vt1, vt2, vt0 WHERE (((((MAX(NULL, 1598780561))<<(((vt0.c1) BETWEEN (vt1.c0) AND (vt0.c1))))) ISNULL));
SELECT vt0.c0 FROM vt1, vt2, vt0;
SELECT DISTINCT vt0.c0, vt0.c1, vt1.c0 FROM vt1, vt2, vt0;
SELECT DISTINCT vt0.c0, vt0.c1, vt1.c0 FROM vt1, vt2, vt0 WHERE ((((vt0.c1)) BETWEEN ((((vt0.c0) BETWEEN (NULL) AND (vt1.c0)))) AND ((TRIM(vt2.c0))))) UNION SELECT DISTINCT vt0.c0, vt0.c1, vt1.c0 FROM vt1 NOT INDEXED, vt2, vt0 WHERE ((NOT ((((vt0.c1)) BETWEEN ((((vt0.c0) BETWEEN (NULL) AND (vt1.c0)))) AND ((TRIM(vt2.c0))))))) UNION SELECT DISTINCT vt0.c0, vt0.c1, vt1.c0 FROM vt1, vt2, vt0 WHERE ((((((vt0.c1)) BETWEEN ((((vt0.c0) BETWEEN (NULL) AND (vt1.c0)))) AND ((TRIM(vt2.c0))))) ISNULL));
SELECT DISTINCT vt0.c0, vt0.c1, vt1.c0 FROM vt1, vt2, vt0;
SELECT vt2.c0 FROM vt2, vt1 GROUP BY vt2.c0;
SELECT vt2.c0 FROM vt2, vt1 WHERE (LOWER(((vt2.c0)IS(vt1.c0)))) GROUP BY vt2.c0 UNION SELECT ALL vt2.c0 FROM vt2, vt1 WHERE ((NOT (LOWER(((vt2.c0)IS(vt1.c0)))))) GROUP BY vt2.c0 UNION SELECT vt2.c0 FROM vt2, vt1 WHERE (((LOWER(((vt2.c0)IS(vt1.c0)))) ISNULL)) GROUP BY vt2.c0;
SELECT vt2.c0 FROM vt2, vt1 GROUP BY vt2.c0;
SELECT ALL vt0.c0, vt0.c1 FROM vt1 INNER JOIN vt2 ON ((vt2.c0)==(vt0.c1)) LEFT OUTER JOIN vt0 ON ((((vt2.c0)|(vt0.c0)))/((((vt1.c0))<=((vt1.c0))))) GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt1 INNER JOIN vt2 ON ((vt2.c0)=(vt0.c1)) LEFT OUTER JOIN vt0 ON ((((vt2.c0)|(vt0.c0)))/((((vt1.c0))<=((vt1.c0))))) GROUP BY vt0.c0, vt0.c1 HAVING NULL UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt1 INNER JOIN vt2 ON ((vt2.c0)=(vt0.c1)) LEFT OUTER JOIN vt0 ON ((((vt2.c0)|(vt0.c0)))/((((vt1.c0))<=((vt1.c0))))) GROUP BY vt0.c0, vt0.c1 HAVING (NOT (NULL)) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt1 INNER JOIN vt2 ON ((vt2.c0)==(vt0.c1)) LEFT OUTER JOIN vt0 ON ((((vt2.c0)|(vt0.c0)))/((((vt1.c0))<=((vt1.c0))))) GROUP BY vt0.c0, vt0.c1 HAVING ((NULL) ISNULL);
SELECT ALL vt0.c0, vt0.c1 FROM vt1 INNER JOIN vt2 ON ((vt2.c0)==(vt0.c1)) LEFT OUTER JOIN vt0 ON ((((vt2.c0)|(vt0.c0)))/((((vt1.c0))<=((vt1.c0))))) GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt1 INNER JOIN vt2 ON ((vt2.c0)=(vt0.c1)) LEFT OUTER JOIN vt0 ON ((((vt2.c0)|(vt0.c0)))/((((vt1.c0))<=((vt1.c0))))) GROUP BY vt0.c0, vt0.c1 HAVING NULL UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt1 INNER JOIN vt2 ON ((vt2.c0)=(vt0.c1)) LEFT OUTER JOIN vt0 ON ((((vt2.c0)|(vt0.c0)))/((((vt1.c0))<=((vt1.c0))))) GROUP BY vt0.c0, vt0.c1 HAVING (NOT (NULL)) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt1 INNER JOIN vt2 ON ((vt2.c0)==(vt0.c1)) LEFT OUTER JOIN vt0 ON ((((vt2.c0)|(vt0.c0)))/((((vt1.c0))<=((vt1.c0))))) GROUP BY vt0.c0, vt0.c1 HAVING ((NULL) ISNULL);
SELECT ALL vt0.c0, vt0.c1 FROM vt1 INNER JOIN vt2 ON ((vt2.c0)==(vt0.c1)) LEFT OUTER JOIN vt0 ON ((((vt2.c0)|(vt0.c0)))/((((vt1.c0))<=((vt1.c0))))) GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c1, vt0.c0, vt1.c0, vt2.c0 FROM vt1, vt0, vt2;
SELECT vt0.c1, vt0.c0, vt1.c0, vt2.c0 FROM vt1, vt0, vt2 WHERE ((- (((-1.593462597E9) NOT BETWEEN (vt1.c0) AND (vt0.c1))))) UNION ALL SELECT ALL vt0.c1, vt0.c0, vt1.c0, vt2.c0 FROM vt1, vt0, vt2 WHERE ((NOT ((- (((-1.593462597E9) NOT BETWEEN (vt1.c0) AND (vt0.c1))))))) UNION ALL SELECT vt0.c1, vt0.c0, vt1.c0, vt2.c0 FROM vt1, vt0, vt2 WHERE ((((- (((-1.593462597E9) NOT BETWEEN (vt1.c0) AND (vt0.c1))))) ISNULL));
SELECT ALL vt0.c1, vt0.c0, vt1.c0, vt2.c0 FROM vt1, vt0, vt2;
SELECT DISTINCT * FROM vt1, vt0 INNER JOIN vt2 ON (((vt1.c0)) NOT BETWEEN ((((((((((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c1)))OR(vt0.c0)))AND(vt2.c0)))OR(vt0.c1)))AND(vt2.c0)))AND(vt2.c0)))OR(vt2.c0)))) AND (((x'cb69' IN ()))));
SELECT DISTINCT * FROM vt1, vt0 INNER JOIN vt2 ON (((vt1.c0)) NOT BETWEEN ((((((((((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c1)))OR(vt0.c0)))AND(vt2.c0)))OR(vt0.c1)))AND(vt2.c0)))AND(vt2.c0)))OR(vt2.c0)))) AND (((x'cb69' IN ())))) WHERE ((((((x'')) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))) IS TRUE)) UNION SELECT DISTINCT * FROM vt1, vt0 INNER JOIN vt2 ON (((vt1.c0)) NOT BETWEEN ((((((((((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c1)))OR(vt0.c0)))AND(vt2.c0)))OR(vt0.c1)))AND(vt2.c0)))AND(vt2.c0)))OR(vt2.c0)))) AND (((x'cb69' IN ())))) WHERE ((NOT ((((((x'')) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))) IS TRUE)))) UNION SELECT DISTINCT * FROM vt1, vt0 INNER JOIN vt2 ON (((vt1.c0)) NOT BETWEEN ((((((((((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c1)))OR(vt0.c0)))AND(vt2.c0)))OR(vt0.c1)))AND(vt2.c0)))AND(vt2.c0)))OR(vt2.c0)))) AND (((x'cb69' IN ())))) WHERE ((((((((x'')) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))) IS TRUE)) ISNULL));
SELECT DISTINCT * FROM vt1, vt0 INNER JOIN vt2 ON (((vt1.c0)) NOT BETWEEN ((((((((((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c1)))OR(vt0.c0)))AND(vt2.c0)))OR(vt0.c1)))AND(vt2.c0)))AND(vt2.c0)))OR(vt2.c0)))) AND (((x'cb69' IN ()))));
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt0 WHERE ((((NOT (vt0.c1)))IS(((vt0.c0) NOT NULL)))) GROUP BY vt0.c1 UNION SELECT ALL vt0.c1 FROM vt0 WHERE ((NOT ((((NOT (vt0.c1)))IS(((vt0.c0) NOT NULL)))))) GROUP BY vt0.c1 UNION SELECT ALL vt0.c1 FROM vt0 WHERE ((((((NOT (vt0.c1)))IS(((vt0.c0) NOT NULL)))) ISNULL)) GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT ALL vt2.c0, vt1.c0 FROM vt1, vt2 GROUP BY vt2.c0, vt1.c0;
SELECT ALL vt2.c0, vt1.c0 FROM vt1, vt2 GROUP BY vt2.c0, vt1.c0 HAVING ((AVG(MAX(AVG(MAX(vt2.c0)))))&(((vt1.c0)GLOB(MAX(vt1.c0))))) UNION ALL SELECT ALL vt2.c0, vt1.c0 FROM vt1, vt2 GROUP BY vt2.c0, vt1.c0 HAVING (NOT (((AVG(MAX(AVG(MAX(vt2.c0)))))&(((vt1.c0)GLOB(MAX(vt1.c0))))))) UNION ALL SELECT vt2.c0, vt1.c0 FROM vt1, vt2 GROUP BY vt2.c0, vt1.c0 HAVING ((((AVG(MAX(AVG(MAX(vt2.c0)))))&(((vt1.c0)GLOB(MAX(vt1.c0)))))) ISNULL);
SELECT * FROM vt2 RIGHT OUTER JOIN vt1 ON CASE vt1.c0  WHEN (((vt2.c0, 0.305333676982827, vt2.c0)) NOT BETWEEN (('-693075185', vt1.c0, 0Xffffffffc9c106e7)) AND ((vt1.c0, vt2.c0, vt1.c0))) THEN (((NULL, vt1.c0, vt2.c0))>((vt2.c0, vt1.c0, vt2.c0))) END;
SELECT ALL * FROM vt2 RIGHT OUTER JOIN vt1 ON CASE vt1.c0  WHEN (((vt2.c0, 0.305333676982827, vt2.c0)) NOT BETWEEN (('-693075185', vt1.c0, 0Xffffffffc9c106e7)) AND ((vt1.c0, vt2.c0, vt1.c0))) THEN (((NULL, vt1.c0, vt2.c0))>((vt2.c0, vt1.c0, vt2.c0))) END WHERE (ABS(vt1.c0) COLLATE BINARY) UNION ALL SELECT ALL * FROM vt2 RIGHT OUTER JOIN vt1 ON CASE vt1.c0  WHEN (((vt2.c0, 0.305333676982827, vt2.c0)) NOT BETWEEN (('-693075185', vt1.c0, 0xffffffffc9c106e7)) AND ((vt1.c0, vt2.c0, vt1.c0))) THEN (((NULL, vt1.c0, vt2.c0))>((vt2.c0, vt1.c0, vt2.c0))) END WHERE ((NOT (ABS(vt1.c0) COLLATE BINARY))) UNION ALL SELECT * FROM vt2 RIGHT OUTER JOIN vt1 ON CASE vt1.c0  WHEN (((vt2.c0, 0.305333676982827, vt2.c0)) NOT BETWEEN (('-693075185', vt1.c0, 0Xffffffffc9c106e7)) AND ((vt1.c0, vt2.c0, vt1.c0))) THEN (((NULL, vt1.c0, vt2.c0))>((vt2.c0, vt1.c0, vt2.c0))) END WHERE (((ABS(vt1.c0) COLLATE BINARY) ISNULL));
SELECT * FROM vt2 RIGHT OUTER JOIN vt1 ON CASE vt1.c0  WHEN (((vt2.c0, 0.305333676982827, vt2.c0)) NOT BETWEEN (('-693075185', vt1.c0, 0Xffffffffc9c106e7)) AND ((vt1.c0, vt2.c0, vt1.c0))) THEN (((NULL, vt1.c0, vt2.c0))>((vt2.c0, vt1.c0, vt2.c0))) END;
SELECT DISTINCT vt0.c1, vt2.c0, vt1.c0 FROM vt1, vt0, vt2;
SELECT DISTINCT vt0.c1, vt2.c0, vt1.c0 FROM vt1, vt0, vt2 WHERE (((((vt0.c1) IS TRUE))-(LIKELIHOOD(vt2.c0, 0.4406355736115378)))) UNION SELECT DISTINCT vt0.c1, vt2.c0, vt1.c0 FROM vt1, vt0, vt2 WHERE ((NOT (((((vt0.c1) IS TRUE))-(LIKELIHOOD(vt2.c0, 0.4406355736115378)))))) UNION SELECT DISTINCT vt0.c1, vt2.c0, vt1.c0 FROM vt1, vt0, vt2 WHERE (((((((vt0.c1) IS TRUE))-(LIKELIHOOD(vt2.c0, 0.4406355736115378)))) ISNULL));
SELECT DISTINCT vt0.c1, vt2.c0, vt1.c0 FROM vt1, vt0, vt2;
SELECT ALL vt0.c0, vt2.c0, vt0.c1 FROM vt2, vt0 GROUP BY vt0.c0, vt2.c0, vt0.c1;
SELECT vt0.c0, vt2.c0, vt0.c1 FROM vt2, vt0 WHERE ((((vt0.c0)) BETWEEN (((x'1ddc' IN ()))) AND (((NOT (vt0.c1)))))) GROUP BY vt0.c0, vt2.c0, vt0.c1 UNION SELECT ALL vt0.c0, vt2.c0, vt0.c1 FROM vt2, vt0 WHERE ((NOT ((((vt0.c0)) BETWEEN (((x'1ddc' IN ()))) AND (((NOT (vt0.c1)))))))) GROUP BY vt0.c0, vt2.c0, vt0.c1 UNION SELECT vt0.c0, vt2.c0, vt0.c1 FROM vt2, vt0 WHERE ((((((vt0.c0)) BETWEEN (((x'1ddc' IN ()))) AND (((NOT (vt0.c1)))))) ISNULL)) GROUP BY vt0.c0, vt2.c0, vt0.c1;
SELECT ALL vt0.c0, vt2.c0, vt0.c1 FROM vt2, vt0 GROUP BY vt0.c0, vt2.c0, vt0.c1;
SELECT vt0.c0, vt2.c0 FROM vt1, vt2, vt0 GROUP BY vt0.c0, vt2.c0;
SELECT ALL vt0.c0, vt2.c0 FROM vt1, vt2, vt0 GROUP BY vt0.c0, vt2.c0 HAVING AVG(COUNT(*)) UNION ALL SELECT ALL vt0.c0, vt2.c0 FROM vt1, vt2, vt0 GROUP BY vt0.c0, vt2.c0 HAVING (NOT (AVG(COUNT(*)))) UNION ALL SELECT vt0.c0, vt2.c0 FROM vt1, vt2, vt0 GROUP BY vt0.c0, vt2.c0 HAVING ((AVG(COUNT(*))) ISNULL);
SELECT vt1.c0 FROM vt2 LEFT OUTER JOIN vt1 ON ((((vt2.c0))<((vt2.c0))) IN ());
SELECT vt1.c0 FROM vt2 LEFT OUTER JOIN vt1 ON ((((vt2.c0))<((vt2.c0))) IN ()) WHERE (CAST(((vt1.c0) NOT BETWEEN (vt2.c0) AND (vt1.c0)) AS REAL)) UNION ALL SELECT ALL vt1.c0 FROM vt2 LEFT OUTER JOIN vt1 ON ((((vt2.c0))<((vt2.c0))) IN ()) WHERE ((NOT (CAST(((vt1.c0) NOT BETWEEN (vt2.c0) AND (vt1.c0)) AS REAL)))) UNION ALL SELECT ALL vt1.c0 FROM vt2 LEFT OUTER JOIN vt1 ON ((((vt2.c0))<((vt2.c0))) IN ()) WHERE (((CAST(((vt1.c0) NOT BETWEEN (vt2.c0) AND (vt1.c0)) AS REAL)) ISNULL));
SELECT vt1.c0 FROM vt2 LEFT OUTER JOIN vt1 ON ((((vt2.c0))<((vt2.c0))) IN ());
SELECT DISTINCT * FROM vt2, vt0, vt1;
SELECT DISTINCT * FROM vt2, vt0, vt1 WHERE (CAST(((vt0.c0)<>(vt0.c1)) AS TEXT)) UNION SELECT DISTINCT * FROM vt2, vt0, vt1 WHERE ((NOT (CAST(((vt0.c0)!=(vt0.c1)) AS TEXT)))) UNION SELECT DISTINCT * FROM vt2, vt0, vt1 WHERE (((CAST(((vt0.c0)<>(vt0.c1)) AS TEXT)) ISNULL));
SELECT DISTINCT * FROM vt2, vt0, vt1;
SELECT ALL vt2.c0, vt0.c0 FROM vt1, vt2 LEFT OUTER JOIN vt0 ON SQLITE_COMPILEOPTION_USED(vt2.c0) COLLATE BINARY GROUP BY vt2.c0, vt0.c0;
SELECT ALL vt2.c0, vt0.c0 FROM vt1, vt2 LEFT OUTER JOIN vt0 ON SQLITE_COMPILEOPTION_USED(vt2.c0) COLLATE BINARY WHERE (((CASE WHEN vt0.c1 THEN vt2.c0 ELSE vt1.c0 END) ISNULL)) GROUP BY vt2.c0, vt0.c0 UNION SELECT ALL vt2.c0, vt0.c0 FROM vt1, vt2 LEFT OUTER JOIN vt0 ON SQLITE_COMPILEOPTION_USED(vt2.c0) COLLATE BINARY WHERE ((NOT (((CASE WHEN vt0.c1 THEN vt2.c0 ELSE vt1.c0 END) ISNULL)))) GROUP BY vt2.c0, vt0.c0 UNION SELECT vt2.c0, vt0.c0 FROM vt1, vt2 LEFT OUTER JOIN vt0 ON SQLITE_COMPILEOPTION_USED(vt2.c0) COLLATE BINARY WHERE (((((CASE WHEN vt0.c1 THEN vt2.c0 ELSE vt1.c0 END) ISNULL)) ISNULL)) GROUP BY vt2.c0, vt0.c0;
SELECT ALL vt2.c0, vt0.c0 FROM vt1, vt2 LEFT OUTER JOIN vt0 ON SQLITE_COMPILEOPTION_USED(vt2.c0) COLLATE BINARY GROUP BY vt2.c0, vt0.c0;
SELECT ALL vt1.c0, vt2.c0, vt0.c0 FROM vt2 LEFT OUTER JOIN vt0 ON (json_array_length(vt2.c0, vt0.c0) IN ()) LEFT OUTER JOIN vt1 ON ((((0Xffffffffbee0bd66)AND((~ (vt0.c1)))))OR((- (vt0.c1)))) GROUP BY vt1.c0, vt2.c0, vt0.c0;
SELECT vt1.c0, vt2.c0, vt0.c0 FROM vt2 LEFT OUTER JOIN vt0 ON (json_array_length(vt2.c0, vt0.c0) IN ()) LEFT OUTER JOIN vt1 ON ((((0xffffffffbee0bd66)AND((~ (vt0.c1)))))OR((- (vt0.c1)))) GROUP BY vt1.c0, vt2.c0, vt0.c0 HAVING vt2.c0 UNION ALL SELECT vt1.c0, vt2.c0, vt0.c0 FROM vt2 LEFT OUTER JOIN vt0 ON (json_array_length(vt2.c0, vt0.c0) IN ()) LEFT OUTER JOIN vt1 ON ((((0xffffffffbee0bd66)AND((~ (vt0.c1)))))OR((- (vt0.c1)))) GROUP BY vt1.c0, vt2.c0, vt0.c0 HAVING (NOT (vt2.c0)) UNION ALL SELECT ALL vt1.c0, vt2.c0, vt0.c0 FROM vt2 LEFT OUTER JOIN vt0 ON (json_array_length(vt2.c0, vt0.c0) IN ()) LEFT OUTER JOIN vt1 ON ((((0xffffffffbee0bd66)AND((~ (vt0.c1)))))OR((- (vt0.c1)))) GROUP BY vt1.c0, vt2.c0, vt0.c0 HAVING ((vt2.c0) ISNULL);
SELECT ALL vt1.c0, vt2.c0, vt0.c0 FROM vt2 LEFT OUTER JOIN vt0 ON (json_array_length(vt2.c0, vt0.c0) IN ()) LEFT OUTER JOIN vt1 ON ((((0Xffffffffbee0bd66)AND((~ (vt0.c1)))))OR((- (vt0.c1)))) GROUP BY vt1.c0, vt2.c0, vt0.c0;
SELECT vt1.c0, vt2.c0, vt0.c0 FROM vt2 LEFT OUTER JOIN vt0 ON (json_array_length(vt2.c0, vt0.c0) IN ()) LEFT OUTER JOIN vt1 ON ((((0xffffffffbee0bd66)AND((~ (vt0.c1)))))OR((- (vt0.c1)))) GROUP BY vt1.c0, vt2.c0, vt0.c0 HAVING vt2.c0 UNION ALL SELECT vt1.c0, vt2.c0, vt0.c0 FROM vt2 LEFT OUTER JOIN vt0 ON (json_array_length(vt2.c0, vt0.c0) IN ()) LEFT OUTER JOIN vt1 ON ((((0xffffffffbee0bd66)AND((~ (vt0.c1)))))OR((- (vt0.c1)))) GROUP BY vt1.c0, vt2.c0, vt0.c0 HAVING (NOT (vt2.c0)) UNION ALL SELECT ALL vt1.c0, vt2.c0, vt0.c0 FROM vt2 LEFT OUTER JOIN vt0 ON (json_array_length(vt2.c0, vt0.c0) IN ()) LEFT OUTER JOIN vt1 ON ((((0xffffffffbee0bd66)AND((~ (vt0.c1)))))OR((- (vt0.c1)))) GROUP BY vt1.c0, vt2.c0, vt0.c0 HAVING ((vt2.c0) ISNULL);
SELECT ALL vt1.c0, vt2.c0, vt0.c0 FROM vt2 LEFT OUTER JOIN vt0 ON (json_array_length(vt2.c0, vt0.c0) IN ()) LEFT OUTER JOIN vt1 ON ((((0Xffffffffbee0bd66)AND((~ (vt0.c1)))))OR((- (vt0.c1)))) GROUP BY vt1.c0, vt2.c0, vt0.c0;
SELECT vt2.c0 FROM vt0, vt2;
SELECT ALL vt2.c0 FROM vt0, vt2 WHERE ((((NOT (vt0.c0)))>(((vt2.c0)LIKE(vt0.c0))))) UNION ALL SELECT ALL vt2.c0 FROM vt0, vt2 WHERE ((NOT ((((NOT (vt0.c0)))>(((vt2.c0)LIKE(vt0.c0))))))) UNION ALL SELECT ALL vt2.c0 FROM vt0, vt2 WHERE ((((((NOT (vt0.c0)))>(((vt2.c0)LIKE(vt0.c0))))) ISNULL));
SELECT vt2.c0 FROM vt0, vt2;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((((0.6706866749802408) IS TRUE)) NOT BETWEEN (vt1.c0) AND (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT (((((0.6706866749802408) IS TRUE)) NOT BETWEEN (vt1.c0) AND (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((((((0.6706866749802408) IS TRUE)) NOT BETWEEN (vt1.c0) AND (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT vt2.c0, vt1.c0, vt0.c0, vt0.c1 FROM vt1, vt0, vt2 GROUP BY vt2.c0, vt1.c0, vt0.c0, vt0.c1;
SELECT ALL vt2.c0, vt1.c0, vt0.c0, vt0.c1 FROM vt1, vt0, vt2 WHERE (CASE WHEN ((vt1.c0)|(vt0.c0)) THEN ((NULL)LIKE(vt0.c0)) WHEN vt2.c0 COLLATE RTRIM THEN ((vt0.c1) IS TRUE) WHEN ((vt0.c0)AND(vt2.c0)) THEN NULL END) GROUP BY vt2.c0, vt1.c0, vt0.c0, vt0.c1 UNION SELECT vt2.c0, vt1.c0, vt0.c0, vt0.c1 FROM vt1, vt0, vt2 WHERE ((NOT (CASE WHEN ((vt1.c0)|(vt0.c0)) THEN ((NULL)LIKE(vt0.c0)) WHEN vt2.c0 COLLATE RTRIM THEN ((vt0.c1) IS TRUE) WHEN ((vt0.c0)AND(vt2.c0)) THEN NULL END))) GROUP BY vt2.c0, vt1.c0, vt0.c0, vt0.c1 UNION SELECT ALL vt2.c0, vt1.c0, vt0.c0, vt0.c1 FROM vt1, vt0, vt2 WHERE (((CASE WHEN ((vt1.c0)|(vt0.c0)) THEN ((NULL)LIKE(vt0.c0)) WHEN vt2.c0 COLLATE RTRIM THEN ((vt0.c1) IS TRUE) WHEN ((vt0.c0)AND(vt2.c0)) THEN NULL END) ISNULL)) GROUP BY vt2.c0, vt1.c0, vt0.c0, vt0.c1;
SELECT vt2.c0, vt1.c0, vt0.c0, vt0.c1 FROM vt1, vt0, vt2 GROUP BY vt2.c0, vt1.c0, vt0.c0, vt0.c1;
SELECT ALL vt2.c0, vt1.c0, vt0.c0, vt0.c1 FROM vt1, vt0, vt2 GROUP BY vt2.c0, vt1.c0, vt0.c0, vt0.c1;
SELECT ALL vt2.c0, vt1.c0, vt0.c0, vt0.c1 FROM vt1, vt0, vt2 GROUP BY vt2.c0, vt1.c0, vt0.c0, vt0.c1 HAVING ((vt0.c0 IN (vt0.c1)) IN ()) UNION ALL SELECT vt2.c0, vt1.c0, vt0.c0, vt0.c1 FROM vt1, vt0, vt2 GROUP BY vt2.c0, vt1.c0, vt0.c0, vt0.c1 HAVING (NOT (((vt0.c0 IN (vt0.c1)) IN ()))) UNION ALL SELECT vt2.c0, vt1.c0, vt0.c0, vt0.c1 FROM vt1, vt0, vt2 GROUP BY vt2.c0, vt1.c0, vt0.c0, vt0.c1 HAVING ((((vt0.c0 IN (vt0.c1)) IN ())) ISNULL);
SELECT ALL vt2.c0, vt1.c0, vt0.c0, vt0.c1 FROM vt1, vt0, vt2 GROUP BY vt2.c0, vt1.c0, vt0.c0, vt0.c1;
SELECT ALL vt2.c0, vt1.c0, vt0.c0, vt0.c1 FROM vt1, vt0, vt2 GROUP BY vt2.c0, vt1.c0, vt0.c0, vt0.c1 HAVING ((vt0.c0 IN (vt0.c1)) IN ()) UNION ALL SELECT vt2.c0, vt1.c0, vt0.c0, vt0.c1 FROM vt1, vt0, vt2 GROUP BY vt2.c0, vt1.c0, vt0.c0, vt0.c1 HAVING (NOT (((vt0.c0 IN (vt0.c1)) IN ()))) UNION ALL SELECT vt2.c0, vt1.c0, vt0.c0, vt0.c1 FROM vt1, vt0, vt2 GROUP BY vt2.c0, vt1.c0, vt0.c0, vt0.c1 HAVING ((((vt0.c0 IN (vt0.c1)) IN ())) ISNULL);
SELECT ALL vt2.c0, vt1.c0, vt0.c0, vt0.c1 FROM vt1, vt0, vt2 GROUP BY vt2.c0, vt1.c0, vt0.c0, vt0.c1;
SELECT vt2.c0 FROM vt2, vt1;
SELECT ALL vt2.c0 FROM vt2, vt1 NOT INDEXED WHERE (((((CAST(vt1.c0 AS REAL))OR(CAST(vt2.c0 AS BLOB))))AND(vt2.c0 COLLATE RTRIM))) UNION ALL SELECT ALL vt2.c0 FROM vt2, vt1 WHERE ((NOT (((((CAST(vt1.c0 AS REAL))OR(CAST(vt2.c0 AS BLOB))))AND(vt2.c0 COLLATE RTRIM))))) UNION ALL SELECT vt2.c0 FROM vt2, vt1 WHERE (((((((CAST(vt1.c0 AS REAL))OR(CAST(vt2.c0 AS BLOB))))AND(vt2.c0 COLLATE RTRIM))) ISNULL));
SELECT vt2.c0 FROM vt2, vt1;
SELECT DISTINCT vt0.c1 FROM vt0;
SELECT DISTINCT vt0.c1 FROM vt0 WHERE ((~ (vt0.c1)) COLLATE RTRIM) UNION SELECT DISTINCT vt0.c1 FROM vt0 WHERE ((NOT ((~ (vt0.c1)) COLLATE RTRIM))) UNION SELECT DISTINCT vt0.c1 FROM vt0 WHERE ((((~ (vt0.c1)) COLLATE RTRIM) ISNULL));
SELECT DISTINCT vt0.c1 FROM vt0;
SELECT ALL vt0.c1, vt2.c0 FROM vt1 FULL OUTER JOIN vt0 ON SQLITE_COMPILEOPTION_USED((vt1.c0 IN (vt2.c0))) LEFT OUTER JOIN vt2 ON (HEX(vt2.c0) IN (((vt2.c0)>>(vt2.c0)))) GROUP BY vt0.c1, vt2.c0;
SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING COUNT(*) UNION ALL SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING COUNT(*) UNION ALL SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT vt0.c0 FROM vt0, vt1 FULL OUTER JOIN vt2 ON (((vt2.c0) BETWEEN (NULL) AND (vt0.c0)) IN (CASE WHEN vt2.c0 THEN vt1.c0 END));
SELECT ALL vt0.c0 FROM vt0, vt1 FULL OUTER JOIN vt2 ON (((vt2.c0) BETWEEN (NULL) AND (vt0.c0)) IN (CASE WHEN vt2.c0 THEN vt1.c0 END)) WHERE (CAST(((vt0.c0) NOTNULL) AS NUMERIC)) UNION ALL SELECT ALL vt0.c0 FROM vt0, vt1 FULL OUTER JOIN vt2 ON (((vt2.c0) BETWEEN (NULL) AND (vt0.c0)) IN (CASE WHEN vt2.c0 THEN vt1.c0 END)) WHERE ((NOT (CAST(((vt0.c0) NOTNULL) AS NUMERIC)))) UNION ALL SELECT ALL vt0.c0 FROM vt0, vt1 FULL OUTER JOIN vt2 ON (((vt2.c0) BETWEEN (NULL) AND (vt0.c0)) IN (CASE WHEN vt2.c0 THEN vt1.c0 END)) WHERE (((CAST(((vt0.c0) NOTNULL) AS NUMERIC)) ISNULL));
SELECT vt0.c0 FROM vt0, vt1 FULL OUTER JOIN vt2 ON (((vt2.c0) BETWEEN (NULL) AND (vt0.c0)) IN (CASE WHEN vt2.c0 THEN vt1.c0 END));
SELECT DISTINCT vt2.c0 FROM vt2 NATURAL JOIN vt1;
SELECT DISTINCT vt2.c0 FROM vt2 NATURAL JOIN vt1 WHERE (((CAST(vt2.c0 AS BLOB)) NOT BETWEEN (vt1.c0 COLLATE RTRIM) AND (CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))) UNION SELECT DISTINCT vt2.c0 FROM vt2 NATURAL JOIN vt1 WHERE ((NOT (((CAST(vt2.c0 AS BLOB)) NOT BETWEEN (vt1.c0 COLLATE RTRIM) AND (CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))))) UNION SELECT DISTINCT vt2.c0 FROM vt2 NATURAL JOIN vt1 WHERE (((((CAST(vt2.c0 AS BLOB)) NOT BETWEEN (vt1.c0 COLLATE RTRIM) AND (CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))) ISNULL));
SELECT DISTINCT vt2.c0 FROM vt2 NATURAL JOIN vt1;
SELECT ALL vt2.c0, vt0.c1 FROM vt0 CROSS JOIN vt2 ON vt0.c0 FULL OUTER JOIN vt1 ON CAST(((0.7772576003531197)+(vt0.c0)) AS REAL) GROUP BY vt2.c0, vt0.c1;
SELECT vt2.c0, vt0.c1 FROM vt0 CROSS JOIN vt2 ON vt0.c0 FULL OUTER JOIN vt1 ON CAST(((0.7772576003531197)+(vt0.c0)) AS REAL) WHERE (x'') GROUP BY vt2.c0, vt0.c1 UNION SELECT ALL vt2.c0, vt0.c1 FROM vt0 CROSS JOIN vt2 ON vt0.c0 FULL OUTER JOIN vt1 ON CAST(((0.7772576003531197)+(vt0.c0)) AS REAL) WHERE ((NOT (x''))) GROUP BY vt2.c0, vt0.c1 UNION SELECT ALL vt2.c0, vt0.c1 FROM vt0 CROSS JOIN vt2 ON vt0.c0 FULL OUTER JOIN vt1 ON CAST(((0.7772576003531197)+(vt0.c0)) AS REAL) WHERE (((x'') ISNULL)) GROUP BY vt2.c0, vt0.c1;
SELECT ALL vt2.c0, vt0.c1 FROM vt0 CROSS JOIN vt2 ON vt0.c0 FULL OUTER JOIN vt1 ON CAST(((0.7772576003531197)+(vt0.c0)) AS REAL) GROUP BY vt2.c0, vt0.c1;
SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING AVG(CASE WHEN vt2.c0 THEN GROUP_CONCAT(vt2.c0) END) UNION ALL SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING (NOT (AVG(CASE WHEN vt2.c0 THEN GROUP_CONCAT(vt2.c0) END))) UNION ALL SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING ((AVG(CASE WHEN vt2.c0 THEN GROUP_CONCAT(vt2.c0) END)) ISNULL);
SELECT TOTAL(UNLIKELY((((vt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c0))))) FROM vt2, vt1, vt0 ORDER BY ((((((vt0.c1)AND(vt0.c0)))OR(vt2.c0)))>=((+ (vt0.c1))))  NULLS LAST, CASE WHEN CASE WHEN vt2.c0 THEN vt0.c0 ELSE 0.8303683769574486 END THEN NULL ELSE ((vt2.c0)<>(vt0.c1)) END  NULLS LAST;
SELECT ALL * FROM vt0, vt2, vt1;
SELECT ALL * FROM vt0, vt2, vt1 WHERE (((CAST(vt2.c0 AS NUMERIC))||((~ (vt2.c0))))) UNION ALL SELECT ALL * FROM vt0, vt2, vt1 WHERE ((NOT (((CAST(vt2.c0 AS NUMERIC))||((~ (vt2.c0))))))) UNION ALL SELECT * FROM vt0, vt2, vt1 WHERE (((((CAST(vt2.c0 AS NUMERIC))||((~ (vt2.c0))))) ISNULL));
SELECT ALL * FROM vt0, vt2, vt1;
SELECT DISTINCT vt1.c0, vt0.c1, vt0.c0 FROM vt1, vt0;
SELECT DISTINCT vt1.c0, vt0.c1, vt0.c0 FROM vt1, vt0 WHERE ((((vt0.c0 IN (vt0.c1))) BETWEEN (((x'')OR(vt1.c0))) AND ((~ (vt0.c0))))) UNION SELECT DISTINCT vt1.c0, vt0.c1, vt0.c0 FROM vt1, vt0 WHERE ((NOT ((((vt0.c0 IN (vt0.c1))) BETWEEN (((x'')OR(vt1.c0))) AND ((~ (vt0.c0))))))) UNION SELECT DISTINCT vt1.c0, vt0.c1, vt0.c0 FROM vt1, vt0 WHERE ((((((vt0.c0 IN (vt0.c1))) BETWEEN (((x'')OR(vt1.c0))) AND ((~ (vt0.c0))))) ISNULL));
SELECT DISTINCT vt1.c0, vt0.c1, vt0.c0 FROM vt1, vt0;
SELECT vt0.c0, vt1.c0 FROM vt2, vt1, vt0 GROUP BY vt0.c0, vt1.c0;
SELECT vt0.c0, vt1.c0 FROM vt2, vt1, vt0 WHERE (((((0.7382734168417219) NOT BETWEEN (vt1.c0) AND (vt0.c1)))/(((47218964)-(vt1.c0))))) GROUP BY vt0.c0, vt1.c0 UNION SELECT ALL vt0.c0, vt1.c0 FROM vt2, vt1, vt0 WHERE ((NOT (((((0.7382734168417219) NOT BETWEEN (vt1.c0) AND (vt0.c1)))/(((47218964)-(vt1.c0))))))) GROUP BY vt0.c0, vt1.c0 UNION SELECT ALL vt0.c0, vt1.c0 FROM vt2, vt1, vt0 WHERE (((((((0.7382734168417219) NOT BETWEEN (vt1.c0) AND (vt0.c1)))/(((47218964)-(vt1.c0))))) ISNULL)) GROUP BY vt0.c0, vt1.c0;
SELECT vt0.c0, vt1.c0 FROM vt2, vt1, vt0 GROUP BY vt0.c0, vt1.c0;
SELECT vt0.c0, vt1.c0, vt0.c1 FROM vt0, vt2, vt1 GROUP BY vt0.c0, vt1.c0, vt0.c1;
SELECT vt0.c0, vt1.c0, vt0.c1 FROM vt0, vt2, vt1 GROUP BY vt0.c0, vt1.c0, vt0.c1 HAVING MAX(((vt0.c1) NOT BETWEEN (SUM(MIN(vt2.c0))) AND (vt0.c0))) UNION ALL SELECT ALL vt0.c0, vt1.c0, vt0.c1 FROM vt0, vt2, vt1 GROUP BY vt0.c0, vt1.c0, vt0.c1 HAVING (NOT (MAX(((vt0.c1) NOT BETWEEN (SUM(MIN(vt2.c0))) AND (vt0.c0))))) UNION ALL SELECT ALL vt0.c0, vt1.c0, vt0.c1 FROM vt0, vt2, vt1 GROUP BY vt0.c0, vt1.c0, vt0.c1 HAVING ((MAX(((vt0.c1) NOT BETWEEN (SUM(MIN(vt2.c0))) AND (vt0.c0)))) ISNULL);
SELECT * FROM vt2 INNER JOIN vt0 ON (vt2.c0 IN (vt0.c0, vt2.c0)) COLLATE BINARY;
SELECT * FROM vt2 INNER JOIN vt0 ON (vt2.c0 IN (vt0.c0, vt2.c0)) COLLATE BINARY WHERE (CAST(CASE WHEN vt0.c0 THEN vt2.c0 END AS REAL)) UNION ALL SELECT * FROM vt2 INNER JOIN vt0 ON (vt2.c0 IN (vt0.c0, vt2.c0)) COLLATE BINARY WHERE ((NOT (CAST(CASE WHEN vt0.c0 THEN vt2.c0 END AS REAL)))) UNION ALL SELECT * FROM vt2 INNER JOIN vt0 ON (vt2.c0 IN (vt0.c0, vt2.c0)) COLLATE BINARY WHERE (((CAST(CASE WHEN vt0.c0 THEN vt2.c0 END AS REAL)) ISNULL));
SELECT * FROM vt2 INNER JOIN vt0 ON (vt2.c0 IN (vt0.c0, vt2.c0)) COLLATE BINARY;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((((vt1.c0, vt1.c0, x'', vt1.c0, vt1.c0))<((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0))) IN ())) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT (((((vt1.c0, vt1.c0, x'', vt1.c0, vt1.c0))<((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0))) IN ())))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((((((vt1.c0, vt1.c0, x'', vt1.c0, vt1.c0))<((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0))) IN ())) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE ((~ (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT ((~ (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((((~ (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt2.c0 FROM vt0, vt2, vt1 GROUP BY vt2.c0;
SELECT vt2.c0 FROM vt0, vt2, vt1 GROUP BY vt2.c0 HAVING MIN(TOTAL(MAX(MAX(GROUP_CONCAT(vt0.c1))))) UNION ALL SELECT ALL vt2.c0 FROM vt0, vt2, vt1 GROUP BY vt2.c0 HAVING (NOT (MIN(TOTAL(MAX(MAX(GROUP_CONCAT(vt0.c1))))))) UNION ALL SELECT ALL vt2.c0 FROM vt0, vt2, vt1 GROUP BY vt2.c0 HAVING ((MIN(TOTAL(MAX(MAX(GROUP_CONCAT(vt0.c1)))))) ISNULL);
SELECT vt2.c0 FROM vt2;
SELECT ALL vt2.c0 FROM vt2 WHERE (((CASE WHEN 1555623993 THEN vt2.c0 ELSE vt2.c0 END) BETWEEN (vt2.c0) AND (((((vt2.c0)OR(vt2.c0)))OR(vt2.c0))))) UNION ALL SELECT ALL vt2.c0 FROM vt2 WHERE ((NOT (((CASE WHEN 1555623993 THEN vt2.c0 ELSE vt2.c0 END) BETWEEN (vt2.c0) AND (((((vt2.c0)OR(vt2.c0)))OR(vt2.c0))))))) UNION ALL SELECT ALL vt2.c0 FROM vt2 WHERE (((((CASE WHEN 1555623993 THEN vt2.c0 ELSE vt2.c0 END) BETWEEN (vt2.c0) AND (((((vt2.c0)OR(vt2.c0)))OR(vt2.c0))))) ISNULL));
SELECT vt2.c0 FROM vt2;
SELECT DISTINCT vt0.c1 FROM vt0;
SELECT DISTINCT vt0.c1 FROM vt0 WHERE (((((1.695549211E9) IS TRUE)) NOT BETWEEN (((((((((vt0.c1)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c1)))AND(vt0.c1))) AND (((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1))))) UNION SELECT DISTINCT vt0.c1 FROM vt0 WHERE ((NOT (((((1.695549211E9) IS TRUE)) NOT BETWEEN (((((((((vt0.c1)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c1)))AND(vt0.c1))) AND (((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1))))))) UNION SELECT DISTINCT vt0.c1 FROM vt0 WHERE (((((((1.695549211E9) IS TRUE)) NOT BETWEEN (((((((((vt0.c1)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c1)))AND(vt0.c1))) AND (((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1))))) ISNULL));
SELECT DISTINCT vt0.c1 FROM vt0;
SELECT ALL vt0.c0, vt0.c1, vt1.c0 FROM vt0 RIGHT OUTER JOIN vt2 ON (((NOT (vt1.c0)))<(((((((((x'')OR(vt1.c0)))AND(vt0.c1)))AND(vt2.c0)))AND(vt0.c0)))) INNER JOIN vt1 ON CASE WHEN (vt2.c0 IN ()) THEN json_array_length(0Xffffffffa4650d95) WHEN ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt2.c0)) THEN ((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1)) WHEN (vt0.c1 IN ()) THEN vt2.c0 COLLATE BINARY ELSE (+ (vt0.c0)) END GROUP BY vt0.c0, vt0.c1, vt1.c0;
SELECT ALL vt1.c0, vt0.c0 FROM vt1, vt0, vt2 GROUP BY vt1.c0, vt0.c0;
SELECT vt1.c0, vt0.c0 FROM vt1, vt0, vt2 GROUP BY vt1.c0, vt0.c0 HAVING GROUP_CONCAT((TOTAL(GROUP_CONCAT(vt0.c0)) IN ())) UNION ALL SELECT vt1.c0, vt0.c0 FROM vt1, vt0, vt2 GROUP BY vt1.c0, vt0.c0 HAVING (NOT (GROUP_CONCAT((TOTAL(GROUP_CONCAT(vt0.c0)) IN ())))) UNION ALL SELECT ALL vt1.c0, vt0.c0 FROM vt1, vt0, vt2 GROUP BY vt1.c0, vt0.c0 HAVING ((GROUP_CONCAT((TOTAL(GROUP_CONCAT(vt0.c0)) IN ()))) ISNULL);
SELECT ALL vt1.c0, vt0.c0 FROM vt1, vt0, vt2 GROUP BY vt1.c0, vt0.c0;
SELECT vt1.c0, vt0.c0 FROM vt1, vt0, vt2 GROUP BY vt1.c0, vt0.c0 HAVING GROUP_CONCAT((TOTAL(GROUP_CONCAT(vt0.c0)) IN ())) UNION ALL SELECT vt1.c0, vt0.c0 FROM vt1, vt0, vt2 GROUP BY vt1.c0, vt0.c0 HAVING (NOT (GROUP_CONCAT((TOTAL(GROUP_CONCAT(vt0.c0)) IN ())))) UNION ALL SELECT ALL vt1.c0, vt0.c0 FROM vt1, vt0, vt2 GROUP BY vt1.c0, vt0.c0 HAVING ((GROUP_CONCAT((TOTAL(GROUP_CONCAT(vt0.c0)) IN ()))) ISNULL);
SELECT ALL vt1.c0, vt0.c0 FROM vt1, vt0, vt2 GROUP BY vt1.c0, vt0.c0;
SELECT vt2.c0 FROM vt2;
SELECT vt2.c0 FROM vt2 WHERE (((((('eF%'))==((vt2.c0)))) BETWEEN (vt2.c0) AND ((((vt2.c0)) NOT BETWEEN ((vt2.c0)) AND ((vt2.c0)))))) UNION ALL SELECT ALL vt2.c0 FROM vt2 WHERE ((NOT (((((('eF%'))==((vt2.c0)))) BETWEEN (vt2.c0) AND ((((vt2.c0)) NOT BETWEEN ((vt2.c0)) AND ((vt2.c0)))))))) UNION ALL SELECT ALL vt2.c0 FROM vt2 WHERE (((((((('eF%'))=((vt2.c0)))) BETWEEN (vt2.c0) AND ((((vt2.c0)) NOT BETWEEN ((vt2.c0)) AND ((vt2.c0)))))) ISNULL));
SELECT vt2.c0 FROM vt2;
SELECT DISTINCT vt0.c1 FROM vt0, vt1;
SELECT DISTINCT vt0.c1 FROM vt0, vt1 WHERE ('-1874125737') UNION SELECT DISTINCT vt0.c1 FROM vt0, vt1 WHERE ((NOT ('-1874125737'))) UNION SELECT DISTINCT vt0.c1 FROM vt0, vt1 WHERE ((('-1874125737') ISNULL));
SELECT DISTINCT vt0.c1 FROM vt0, vt1;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE (0.7545911519399725) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (0.7545911519399725))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE (((0.7545911519399725) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt0.c1, vt2.c0, vt1.c0, vt0.c0 FROM vt0 LEFT OUTER JOIN vt1 ON ((CAST(vt0.c0 AS INTEGER))<=(((vt2.c0)|(vt0.c1)))) LEFT OUTER JOIN vt2 ON (((((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c0))))>((UPPER(vt2.c0)))) GROUP BY vt0.c1, vt2.c0, vt1.c0, vt0.c0;
SELECT * FROM vt1;
SELECT * FROM vt1 WHERE (((((x'6a79')>(vt1.c0))) IS TRUE)) UNION ALL SELECT * FROM vt1 WHERE ((NOT (((((x'6a79')>(vt1.c0))) IS TRUE)))) UNION ALL SELECT ALL * FROM vt1 WHERE (((((((x'6a79')>(vt1.c0))) IS TRUE)) ISNULL));
SELECT * FROM vt1;
SELECT DISTINCT * FROM vt1, vt0 FULL OUTER JOIN vt2 ON ((((((vt1.c0)OR(vt0.c1)))AND(vt2.c0))) BETWEEN (NULL COLLATE BINARY) AND (((((vt2.c0)AND(vt2.c0)))AND(vt0.c1))));
SELECT DISTINCT * FROM vt1, vt0 FULL OUTER JOIN vt2 ON ((((((vt1.c0)OR(vt0.c1)))AND(vt2.c0))) BETWEEN (NULL COLLATE BINARY) AND (((((vt2.c0)AND(vt2.c0)))AND(vt0.c1)))) WHERE (((((((vt0.c0) NOT BETWEEN (NULL) AND (vt0.c0)))AND(HEX(vt2.c0))))OR(CASE WHEN vt0.c0 THEN vt0.c1 END))) UNION SELECT DISTINCT * FROM vt1, vt0 FULL OUTER JOIN vt2 ON ((((((vt1.c0)OR(vt0.c1)))AND(vt2.c0))) BETWEEN (NULL COLLATE BINARY) AND (((((vt2.c0)AND(vt2.c0)))AND(vt0.c1)))) WHERE ((NOT (((((((vt0.c0) NOT BETWEEN (NULL) AND (vt0.c0)))AND(HEX(vt2.c0))))OR(CASE WHEN vt0.c0 THEN vt0.c1 END))))) UNION SELECT DISTINCT * FROM vt1, vt0 FULL OUTER JOIN vt2 ON ((((((vt1.c0)OR(vt0.c1)))AND(vt2.c0))) BETWEEN (NULL COLLATE BINARY) AND (((((vt2.c0)AND(vt2.c0)))AND(vt0.c1)))) WHERE (((((((((vt0.c0) NOT BETWEEN (NULL) AND (vt0.c0)))AND(HEX(vt2.c0))))OR(CASE WHEN vt0.c0 THEN vt0.c1 END))) ISNULL));
SELECT DISTINCT * FROM vt1, vt0 FULL OUTER JOIN vt2 ON ((((((vt1.c0)OR(vt0.c1)))AND(vt2.c0))) BETWEEN (NULL COLLATE BINARY) AND (((((vt2.c0)AND(vt2.c0)))AND(vt0.c1))));
SELECT vt0.c1, vt2.c0, vt0.c0 FROM vt2, vt1, vt0 GROUP BY vt0.c1, vt2.c0, vt0.c0;
SELECT ALL vt0.c1, vt2.c0, vt0.c0 FROM vt2, vt1, vt0 WHERE (((NOT (vt1.c0)) IN ((vt0.c0 IN ())))) GROUP BY vt0.c1, vt2.c0, vt0.c0 UNION SELECT ALL vt0.c1, vt2.c0, vt0.c0 FROM vt2, vt1, vt0 WHERE ((NOT (((NOT (vt1.c0)) IN ((vt0.c0 IN ())))))) GROUP BY vt0.c1, vt2.c0, vt0.c0 UNION SELECT ALL vt0.c1, vt2.c0, vt0.c0 FROM vt2, vt1, vt0 WHERE (((((NOT (vt1.c0)) IN ((vt0.c0 IN ())))) ISNULL)) GROUP BY vt0.c1, vt2.c0, vt0.c0;
SELECT vt0.c1, vt2.c0, vt0.c0 FROM vt2, vt1, vt0 GROUP BY vt0.c1, vt2.c0, vt0.c0;
SELECT vt0.c0, vt1.c0, vt0.c1, vt2.c0 FROM vt1 INNER JOIN vt2 ON ((vt1.c0)<(vt0.c0)) COLLATE BINARY RIGHT OUTER JOIN vt0 ON (((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt2.c0)) IN ()) GROUP BY vt0.c0, vt1.c0, vt0.c1, vt2.c0;
SELECT MAX((((NOT (vt2.c0))) NOT NULL)) FROM vt1, vt2, vt0 ORDER BY ((~ (vt2.c0)) IN (NULL, (~ (vt1.c0)))) DESC, (((((vt0.c0))<=((vt1.c0)))) BETWEEN (ABS(DISTINCT '1531121228')) AND (vt2.c0)) DESC;
SELECT * FROM vt1 NOT INDEXED LEFT OUTER JOIN vt2 ON vt1.c0 INNER JOIN vt0 ON UPPER(CAST(vt2.c0 AS INTEGER));
SELECT * FROM vt1 LEFT OUTER JOIN vt2 ON vt1.c0 INNER JOIN vt0 ON UPPER(CAST(vt2.c0 AS INTEGER)) WHERE ((~ (vt1.c0))) UNION ALL SELECT ALL * FROM vt1 LEFT OUTER JOIN vt2 ON vt1.c0 INNER JOIN vt0 ON UPPER(CAST(vt2.c0 AS INTEGER)) WHERE ((NOT ((~ (vt1.c0))))) UNION ALL SELECT * FROM vt1 LEFT OUTER JOIN vt2 ON vt1.c0 INNER JOIN vt0 ON UPPER(CAST(vt2.c0 AS INTEGER)) WHERE ((((~ (vt1.c0))) ISNULL));
SELECT * FROM vt1 NOT INDEXED LEFT OUTER JOIN vt2 ON vt1.c0 INNER JOIN vt0 ON UPPER(CAST(vt2.c0 AS INTEGER));
SELECT DISTINCT vt1.c0 FROM vt1 RIGHT OUTER JOIN vt2 ON (((vt1.c0 IN (vt1.c0)))AND(((vt1.c0) NOT NULL)));
SELECT DISTINCT vt1.c0 FROM vt1 RIGHT OUTER JOIN vt2 ON (((vt1.c0 IN (vt1.c0)))AND(((vt1.c0) NOT NULL))) WHERE (CAST((~ (vt2.c0)) AS NUMERIC)) UNION SELECT DISTINCT vt1.c0 FROM vt1 RIGHT OUTER JOIN vt2 ON (((vt1.c0 IN (vt1.c0)))AND(((vt1.c0) NOT NULL))) WHERE ((NOT (CAST((~ (vt2.c0)) AS NUMERIC)))) UNION SELECT DISTINCT vt1.c0 FROM vt1 RIGHT OUTER JOIN vt2 ON (((vt1.c0 IN (vt1.c0)))AND(((vt1.c0) NOT NULL))) WHERE (((CAST((~ (vt2.c0)) AS NUMERIC)) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1 RIGHT OUTER JOIN vt2 ON (((vt1.c0 IN (vt1.c0)))AND(((vt1.c0) NOT NULL)));
SELECT vt0.c1, vt2.c0 FROM vt2, vt0, vt1 GROUP BY vt0.c1, vt2.c0;
SELECT ALL vt0.c1, vt2.c0 FROM vt2, vt0, vt1 WHERE (LIKELIHOOD(DISTINCT UNLIKELY(vt0.c1), 0.468417814544705)) GROUP BY vt0.c1, vt2.c0 UNION SELECT ALL vt0.c1, vt2.c0 FROM vt2, vt0, vt1 WHERE ((NOT (LIKELIHOOD(DISTINCT UNLIKELY(vt0.c1), 0.468417814544705)))) GROUP BY vt0.c1, vt2.c0 UNION SELECT vt0.c1, vt2.c0 FROM vt2, vt0, vt1 WHERE (((LIKELIHOOD(DISTINCT UNLIKELY(vt0.c1), 0.468417814544705)) ISNULL)) GROUP BY vt0.c1, vt2.c0;
SELECT vt0.c1, vt2.c0 FROM vt2, vt0, vt1 GROUP BY vt0.c1, vt2.c0;
SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING GROUP_CONCAT(COUNT(TOTAL(vt2.c0))) UNION ALL SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING (NOT (GROUP_CONCAT(COUNT(TOTAL(vt2.c0))))) UNION ALL SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING ((GROUP_CONCAT(COUNT(TOTAL(vt2.c0)))) ISNULL);
SELECT MIN(((QUOTE(vt1.c0)) NOT BETWEEN (((vt0.c0) ISNULL)) AND (((((((((vt0.c0)AND(vt0.c1)))OR(vt0.c1)))OR(vt1.c0)))OR(vt0.c0))))) FROM vt2, vt1, vt0;
SELECT ALL vt1.c0, vt0.c1, vt2.c0, vt0.c0 FROM vt2, vt1 LEFT OUTER JOIN vt0 ON ((((vt0.c1) NOT BETWEEN (vt1.c0) AND (vt1.c0))) ISNULL);
SELECT vt1.c0, vt0.c1, vt2.c0, vt0.c0 FROM vt2, vt1 LEFT OUTER JOIN vt0 ON ((((vt0.c1) NOT BETWEEN (vt1.c0) AND (vt1.c0))) ISNULL) WHERE (((CASE WHEN vt0.c1 THEN vt0.c0 WHEN 0.6625423115671296 THEN '795925878' WHEN vt0.c0 THEN vt0.c0 END)>>((+ (vt1.c0))))) UNION ALL SELECT vt1.c0, vt0.c1, vt2.c0, vt0.c0 FROM vt2, vt1 LEFT OUTER JOIN vt0 ON ((((vt0.c1) NOT BETWEEN (vt1.c0) AND (vt1.c0))) ISNULL) WHERE ((NOT (((CASE WHEN vt0.c1 THEN vt0.c0 WHEN 0.6625423115671296 THEN '795925878' WHEN vt0.c0 THEN vt0.c0 END)>>((+ (vt1.c0))))))) UNION ALL SELECT ALL vt1.c0, vt0.c1, vt2.c0, vt0.c0 FROM vt2, vt1 LEFT OUTER JOIN vt0 ON ((((vt0.c1) NOT BETWEEN (vt1.c0) AND (vt1.c0))) ISNULL) WHERE (((((CASE WHEN vt0.c1 THEN vt0.c0 WHEN 0.6625423115671296 THEN '795925878' WHEN vt0.c0 THEN vt0.c0 END)>>((+ (vt1.c0))))) ISNULL));
SELECT ALL vt1.c0, vt0.c1, vt2.c0, vt0.c0 FROM vt2, vt1 LEFT OUTER JOIN vt0 ON ((((vt0.c1) NOT BETWEEN (vt1.c0) AND (vt1.c0))) ISNULL);
SELECT DISTINCT * FROM vt2;
SELECT DISTINCT * FROM vt2 WHERE (CASE ((vt2.c0)IS(vt2.c0))  WHEN vt2.c0 THEN (((vt2.c0, vt2.c0, vt2.c0, vt2.c0, vt2.c0)) BETWEEN ((vt2.c0, vt2.c0, vt2.c0, vt2.c0, vt2.c0)) AND (('PT75昋 UB-', vt2.c0, vt2.c0, vt2.c0, vt2.c0))) ELSE ((vt2.c0)%(vt2.c0)) END) UNION SELECT DISTINCT * FROM vt2 WHERE ((NOT (CASE ((vt2.c0)IS(vt2.c0))  WHEN vt2.c0 THEN (((vt2.c0, vt2.c0, vt2.c0, vt2.c0, vt2.c0)) BETWEEN ((vt2.c0, vt2.c0, vt2.c0, vt2.c0, vt2.c0)) AND (('PT75昋 UB-', vt2.c0, vt2.c0, vt2.c0, vt2.c0))) ELSE ((vt2.c0)%(vt2.c0)) END))) UNION SELECT DISTINCT * FROM vt2 WHERE (((CASE ((vt2.c0)IS(vt2.c0))  WHEN vt2.c0 THEN (((vt2.c0, vt2.c0, vt2.c0, vt2.c0, vt2.c0)) BETWEEN ((vt2.c0, vt2.c0, vt2.c0, vt2.c0, vt2.c0)) AND (('PT75昋 UB-', vt2.c0, vt2.c0, vt2.c0, vt2.c0))) ELSE ((vt2.c0)%(vt2.c0)) END) ISNULL));
SELECT DISTINCT * FROM vt2;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE ((+ (vt1.c0))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT ((+ (vt1.c0))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((((+ (vt1.c0))) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL * FROM vt0, vt2, vt1;
SELECT * FROM vt0, vt2, vt1 WHERE ((((((+ (vt2.c0)))OR(((vt0.c0) IS FALSE))))OR(((vt0.c0)>(vt0.c0))))) UNION ALL SELECT * FROM vt0, vt2, vt1 WHERE ((NOT ((((((+ (vt2.c0)))OR(((vt0.c0) IS FALSE))))OR(((vt0.c0)>(vt0.c0))))))) UNION ALL SELECT * FROM vt0, vt2, vt1 WHERE ((((((((+ (vt2.c0)))OR(((vt0.c0) IS FALSE))))OR(((vt0.c0)>(vt0.c0))))) ISNULL));
SELECT ALL * FROM vt0, vt2, vt1;
SELECT DISTINCT * FROM vt1, vt0, vt2;
SELECT DISTINCT * FROM vt1, vt0, vt2 WHERE (((NULL)==(((vt1.c0)IS NOT(vt0.c0))))) UNION SELECT DISTINCT * FROM vt1, vt0, vt2 WHERE ((NOT (((NULL)=(((vt1.c0)IS NOT(vt0.c0))))))) UNION SELECT DISTINCT * FROM vt1, vt0, vt2 WHERE (((((NULL)=(((vt1.c0)IS NOT(vt0.c0))))) ISNULL));
SELECT DISTINCT * FROM vt1, vt0, vt2;
SELECT ALL vt0.c0, vt1.c0, vt2.c0, vt0.c1 FROM vt2, vt1 INNER JOIN vt0 ON CAST((+ (vt0.c1)) AS TEXT) GROUP BY vt0.c0, vt1.c0, vt2.c0, vt0.c1;
SELECT ALL vt0.c0, vt1.c0, vt2.c0, vt0.c1 FROM vt2, vt1 INNER JOIN vt0 ON CAST((+ (vt0.c1)) AS TEXT) WHERE (CASE WHEN ((((((((vt0.c1)AND(vt2.c0)))AND(vt2.c0)))OR(vt1.c0)))OR(vt0.c0)) THEN CAST(vt0.c1 AS REAL) END) GROUP BY vt0.c0, vt1.c0, vt2.c0, vt0.c1 UNION SELECT ALL vt0.c0, vt1.c0, vt2.c0, vt0.c1 FROM vt2, vt1 INNER JOIN vt0 ON CAST((+ (vt0.c1)) AS TEXT) WHERE ((NOT (CASE WHEN ((((((((vt0.c1)AND(vt2.c0)))AND(vt2.c0)))OR(vt1.c0)))OR(vt0.c0)) THEN CAST(vt0.c1 AS REAL) END))) GROUP BY vt0.c0, vt1.c0, vt2.c0, vt0.c1 UNION SELECT vt0.c0, vt1.c0, vt2.c0, vt0.c1 FROM vt2, vt1 INNER JOIN vt0 ON CAST((+ (vt0.c1)) AS TEXT) WHERE (((CASE WHEN ((((((((vt0.c1)AND(vt2.c0)))AND(vt2.c0)))OR(vt1.c0)))OR(vt0.c0)) THEN CAST(vt0.c1 AS REAL) END) ISNULL)) GROUP BY vt0.c0, vt1.c0, vt2.c0, vt0.c1;
SELECT ALL vt0.c0, vt1.c0, vt2.c0, vt0.c1 FROM vt2, vt1 INNER JOIN vt0 ON CAST((+ (vt0.c1)) AS TEXT) GROUP BY vt0.c0, vt1.c0, vt2.c0, vt0.c1;
SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING MIN(COUNT(GROUP_CONCAT(NULL))) UNION ALL SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING (NOT (MIN(COUNT(GROUP_CONCAT(NULL))))) UNION ALL SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING ((MIN(COUNT(GROUP_CONCAT(NULL)))) ISNULL);
SELECT MAX(((((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN '1274825008' THEN vt0.c1 END)OR(((vt1.c0)!=(vt1.c0)))))AND(vt1.c0 COLLATE BINARY))) FROM vt0, vt1;
SELECT ALL * FROM vt2 INNER JOIN vt1 ON TYPEOF(((vt1.c0)<<(vt1.c0))) INNER JOIN vt0 ON ((((((vt0.c1)<(vt1.c0)))AND((- (vt0.c0)))))OR(((vt2.c0) NOT BETWEEN (vt2.c0) AND (vt1.c0))));
SELECT * FROM vt2 INNER JOIN vt1 ON TYPEOF(((vt1.c0)<<(vt1.c0))) INNER JOIN vt0 ON ((((((vt0.c1)<(vt1.c0)))AND((- (vt0.c0)))))OR(((vt2.c0) NOT BETWEEN (vt2.c0) AND (vt1.c0)))) WHERE (((((((vt2.c0) NOT BETWEEN (vt0.c1) AND (NULL)))AND(((vt0.c0)*(vt0.c0)))))AND(vt0.c0 COLLATE RTRIM))) UNION ALL SELECT ALL * FROM vt2 INNER JOIN vt1 ON TYPEOF(((vt1.c0)<<(vt1.c0))) INNER JOIN vt0 ON ((((((vt0.c1)<(vt1.c0)))AND((- (vt0.c0)))))OR(((vt2.c0) NOT BETWEEN (vt2.c0) AND (vt1.c0)))) WHERE ((NOT (((((((vt2.c0) NOT BETWEEN (vt0.c1) AND (NULL)))AND(((vt0.c0)*(vt0.c0)))))AND(vt0.c0 COLLATE RTRIM))))) UNION ALL SELECT * FROM vt2 INNER JOIN vt1 ON TYPEOF(((vt1.c0)<<(vt1.c0))) INNER JOIN vt0 ON ((((((vt0.c1)<(vt1.c0)))AND((- (vt0.c0)))))OR(((vt2.c0) NOT BETWEEN (vt2.c0) AND (vt1.c0)))) WHERE (((((((((vt2.c0) NOT BETWEEN (vt0.c1) AND (NULL)))AND(((vt0.c0)*(vt0.c0)))))AND(vt0.c0 COLLATE RTRIM))) ISNULL));
SELECT ALL * FROM vt2 INNER JOIN vt1 ON TYPEOF(((vt1.c0)<<(vt1.c0))) INNER JOIN vt0 ON ((((((vt0.c1)<(vt1.c0)))AND((- (vt0.c0)))))OR(((vt2.c0) NOT BETWEEN (vt2.c0) AND (vt1.c0))));
SELECT DISTINCT * FROM vt1, vt2, vt0;
SELECT DISTINCT * FROM vt1, vt2, vt0 WHERE ((('199353616' COLLATE BINARY)>=((x'fa4b' IN ())))) UNION SELECT DISTINCT * FROM vt1, vt2, vt0 WHERE ((NOT ((('199353616' COLLATE BINARY)>=((x'fa4b' IN ())))))) UNION SELECT DISTINCT * FROM vt1, vt2, vt0 WHERE ((((('199353616' COLLATE BINARY)>=((x'fa4b' IN ())))) ISNULL));
SELECT DISTINCT * FROM vt1, vt2, vt0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE ((((((vt1.c0, vt1.c0, vt1.c0))<((NULL, vt1.c0, vt1.c0))))>((+ (vt1.c0))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT ((((((vt1.c0, vt1.c0, vt1.c0))<((NULL, vt1.c0, vt1.c0))))>((+ (vt1.c0))))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((((((((vt1.c0, vt1.c0, vt1.c0))<((NULL, vt1.c0, vt1.c0))))>((+ (vt1.c0))))) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt0.c1 FROM vt0 GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING SUM(COUNT(*)) COLLATE NOCASE UNION ALL SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING (NOT (SUM(COUNT(*)) COLLATE NOCASE)) UNION ALL SELECT vt0.c1 FROM vt0 GROUP BY vt0.c1 HAVING ((SUM(COUNT(*)) COLLATE NOCASE) ISNULL);
SELECT ALL MIN((~ (((((vt0.c1)OR(vt0.c0)))OR(vt1.c0))))) FROM vt2, vt0, vt1 ORDER BY ((vt2.c0) IS TRUE) ASC;
SELECT ALL * FROM vt1;
SELECT * FROM vt1 WHERE ((+ (CAST(vt1.c0 AS BLOB)))) UNION ALL SELECT * FROM vt1 WHERE ((NOT ((+ (CAST(vt1.c0 AS BLOB)))))) UNION ALL SELECT * FROM vt1 WHERE ((((+ (CAST(vt1.c0 AS BLOB)))) ISNULL));
SELECT ALL * FROM vt1;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (((vt1.c0 COLLATE RTRIM)<=(((vt1.c0) NOT NULL)))) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (((vt1.c0 COLLATE RTRIM)<=(((vt1.c0) NOT NULL)))))) UNION SELECT DISTINCT * FROM vt1 WHERE (((((vt1.c0 COLLATE RTRIM)<=(((vt1.c0) NOT NULL)))) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 WHERE (((CAST(vt0.c1 AS INTEGER))<(vt0.c0 COLLATE NOCASE))) GROUP BY vt0.c0, vt0.c1 UNION SELECT ALL vt0.c0, vt0.c1 FROM vt0 WHERE ((NOT (((CAST(vt0.c1 AS INTEGER))<(vt0.c0 COLLATE NOCASE))))) GROUP BY vt0.c0, vt0.c1 UNION SELECT vt0.c0, vt0.c1 FROM vt0 WHERE (((((CAST(vt0.c1 AS INTEGER))<(vt0.c0 COLLATE NOCASE))) ISNULL)) GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING AVG(GROUP_CONCAT(SUM(vt1.c0))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (AVG(GROUP_CONCAT(SUM(vt1.c0))))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((AVG(GROUP_CONCAT(SUM(vt1.c0)))) ISNULL);
SELECT ALL * FROM vt2, vt0, vt1;
SELECT * FROM vt2, vt0, vt1 WHERE (((((TOTAL_CHANGES())OR(-1302689434)))OR(vt0.c1 COLLATE RTRIM))) UNION ALL SELECT ALL * FROM vt2, vt0, vt1 WHERE ((NOT (((((TOTAL_CHANGES())OR(-1302689434)))OR(vt0.c1 COLLATE RTRIM))))) UNION ALL SELECT * FROM vt2, vt0, vt1 WHERE (((((((TOTAL_CHANGES())OR(-1302689434)))OR(vt0.c1 COLLATE RTRIM))) ISNULL));
SELECT ALL * FROM vt2, vt0, vt1;
SELECT DISTINCT * FROM vt0, vt1;
SELECT DISTINCT * FROM vt0, vt1 WHERE (((vt0.c1 COLLATE BINARY) ISNULL)) UNION SELECT DISTINCT * FROM vt0, vt1 WHERE ((NOT (((vt0.c1 COLLATE BINARY) ISNULL)))) UNION SELECT DISTINCT * FROM vt0, vt1 WHERE (((((vt0.c1 COLLATE BINARY) ISNULL)) ISNULL));
SELECT DISTINCT * FROM vt0, vt1;
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0 WHERE (((((vt0.c1)*(x'')))AND(vt0.c1 COLLATE BINARY))) GROUP BY vt0.c1, vt0.c0 UNION SELECT vt0.c1, vt0.c0 FROM vt0 WHERE ((NOT (((((vt0.c1)*(x'')))AND(vt0.c1 COLLATE BINARY))))) GROUP BY vt0.c1, vt0.c0 UNION SELECT ALL vt0.c1, vt0.c0 FROM vt0 WHERE (((((((vt0.c1)*(x'')))AND(vt0.c1 COLLATE BINARY))) ISNULL)) GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING ((236695125) NOT BETWEEN (((vt2.c0)>=(1899835465))) AND (COUNT(*))) UNION ALL SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING (NOT (((236695125) NOT BETWEEN (((vt2.c0)>=(1899835465))) AND (COUNT(*))))) UNION ALL SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING ((((236695125) NOT BETWEEN (((vt2.c0)>=(1899835465))) AND (COUNT(*)))) ISNULL);
SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING ((236695125) NOT BETWEEN (((vt2.c0)>=(1899835465))) AND (COUNT(*))) UNION ALL SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING (NOT (((236695125) NOT BETWEEN (((vt2.c0)>=(1899835465))) AND (COUNT(*))))) UNION ALL SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING ((((236695125) NOT BETWEEN (((vt2.c0)>=(1899835465))) AND (COUNT(*)))) ISNULL);
SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT ALL vt2.c0 FROM vt2, vt0;
SELECT ALL vt2.c0 FROM vt2, vt0 WHERE ((NOT ('&Z￿ODB'))) UNION ALL SELECT ALL vt2.c0 FROM vt2, vt0 WHERE ((NOT ((NOT ('&Z￿ODB'))))) UNION ALL SELECT vt2.c0 FROM vt2, vt0 WHERE ((((NOT ('&Z￿ODB'))) ISNULL));
SELECT ALL vt2.c0 FROM vt2, vt0;
SELECT DISTINCT * FROM vt2;
SELECT DISTINCT * FROM vt2 WHERE (vt2.c0) UNION SELECT DISTINCT * FROM vt2 NOT INDEXED WHERE ((NOT (vt2.c0))) UNION SELECT DISTINCT * FROM vt2 WHERE (((vt2.c0) ISNULL));
SELECT DISTINCT * FROM vt2;
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 WHERE (0xffffffffe60b8e24) GROUP BY vt0.c0, vt0.c1 UNION SELECT vt0.c0, vt0.c1 FROM vt0 WHERE ((NOT (0xffffffffe60b8e24))) GROUP BY vt0.c0, vt0.c1 UNION SELECT ALL vt0.c0, vt0.c1 FROM vt0 WHERE (((0xffffffffe60b8e24) ISNULL)) GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt2.c0, vt0.c0, vt0.c1 FROM vt2 INNER JOIN vt1 ON (((('A2*') IS TRUE)) IS TRUE) RIGHT OUTER JOIN vt0 ON (((+ (vt0.c0)))>=('65054592')) GROUP BY vt2.c0, vt0.c0, vt0.c1;
SELECT ALL vt2.c0, vt0.c0, vt0.c1 FROM vt2 INNER JOIN vt1 ON (((('A2*') IS TRUE)) IS TRUE) RIGHT OUTER JOIN vt0 ON (((+ (vt0.c0)))>=('65054592')) GROUP BY vt2.c0, vt0.c0, vt0.c1 HAVING (NOT (TOTAL(MIN(COUNT(*))) COLLATE RTRIM)) UNION ALL SELECT vt2.c0, vt0.c0, vt0.c1 FROM vt2 INNER JOIN vt1 ON (((('A2*') IS TRUE)) IS TRUE) RIGHT OUTER JOIN vt0 ON (((+ (vt0.c0)))>=('65054592')) GROUP BY vt2.c0, vt0.c0, vt0.c1 HAVING (NOT ((NOT (TOTAL(MIN(COUNT(*))) COLLATE RTRIM)))) UNION ALL SELECT ALL vt2.c0, vt0.c0, vt0.c1 FROM vt2 INNER JOIN vt1 ON (((('A2*') IS TRUE)) IS TRUE) RIGHT OUTER JOIN vt0 ON (((+ (vt0.c0)))>=('65054592')) GROUP BY vt2.c0, vt0.c0, vt0.c1 HAVING (((NOT (TOTAL(MIN(COUNT(*))) COLLATE RTRIM))) ISNULL);
SELECT ALL TOTAL('-349198268') FROM vt2;
SELECT ALL * FROM vt2, vt0, vt1;
SELECT * FROM vt2, vt0, vt1 WHERE (((((((vt0.c0)OR(vt2.c0)))OR(vt0.c0))) NOT BETWEEN (((vt2.c0)<=(vt1.c0))) AND (vt1.c0))) UNION ALL SELECT * FROM vt2, vt0, vt1 WHERE ((NOT (((((((vt0.c0)OR(vt2.c0)))OR(vt0.c0))) NOT BETWEEN (((vt2.c0)<=(vt1.c0))) AND (vt1.c0))))) UNION ALL SELECT ALL * FROM vt2, vt0, vt1 WHERE (((((((((vt0.c0)OR(vt2.c0)))OR(vt0.c0))) NOT BETWEEN (((vt2.c0)<=(vt1.c0))) AND (vt1.c0))) ISNULL));
SELECT ALL * FROM vt2, vt0, vt1;
SELECT DISTINCT vt2.c0 FROM vt1 LEFT OUTER JOIN vt0 ON UNLIKELY(DISTINCT ((vt2.c0)>(vt1.c0))) INNER JOIN vt2 ON CASE WHEN (NULL IN ()) THEN ((vt1.c0) NOT BETWEEN (vt2.c0) AND (vt2.c0)) WHEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END THEN vt0.c0 COLLATE BINARY WHEN '473830395' THEN ((((vt1.c0)AND(vt0.c1)))OR(vt0.c1)) WHEN ((vt0.c1) BETWEEN (vt1.c0) AND (vt0.c1)) THEN ((vt0.c1) NOT NULL) WHEN vt1.c0 THEN LAST_INSERT_ROWID() ELSE CAST(NULL AS INTEGER) END;
SELECT vt2.c0, vt1.c0 FROM vt1, vt2 GROUP BY vt2.c0, vt1.c0;
SELECT vt2.c0, vt1.c0 FROM vt1, vt2 WHERE (((json_array(vt2.c0, vt2.c0))||((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))))) GROUP BY vt2.c0, vt1.c0 UNION SELECT ALL vt2.c0, vt1.c0 FROM vt1, vt2 WHERE ((NOT (((json_array(vt2.c0, vt2.c0))||((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))))))) GROUP BY vt2.c0, vt1.c0 UNION SELECT ALL vt2.c0, vt1.c0 FROM vt1, vt2 WHERE (((((json_array(vt2.c0, vt2.c0))||((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))))) ISNULL)) GROUP BY vt2.c0, vt1.c0;
SELECT vt2.c0, vt1.c0 FROM vt1, vt2 GROUP BY vt2.c0, vt1.c0;
SELECT ALL vt2.c0, vt0.c1, vt0.c0 FROM vt1, vt2, vt0 GROUP BY vt2.c0, vt0.c1, vt0.c0;
SELECT vt2.c0, vt0.c1, vt0.c0 FROM vt1, vt2, vt0 GROUP BY vt2.c0, vt0.c1, vt0.c0 HAVING SUM(MIN(COUNT(*))) UNION ALL SELECT vt2.c0, vt0.c1, vt0.c0 FROM vt1, vt2, vt0 GROUP BY vt2.c0, vt0.c1, vt0.c0 HAVING (NOT (SUM(MIN(COUNT(*))))) UNION ALL SELECT ALL vt2.c0, vt0.c1, vt0.c0 FROM vt1, vt2, vt0 GROUP BY vt2.c0, vt0.c1, vt0.c0 HAVING ((SUM(MIN(COUNT(*)))) ISNULL);
SELECT * FROM vt1, vt2, vt0;
SELECT ALL * FROM vt1, vt2, vt0 WHERE ((((vt2.c0)<(vt0.c1)) IN ())) UNION ALL SELECT * FROM vt1, vt2, vt0 WHERE ((NOT ((((vt2.c0)<(vt0.c1)) IN ())))) UNION ALL SELECT * FROM vt1, vt2, vt0 WHERE ((((((vt2.c0)<(vt0.c1)) IN ())) ISNULL));
SELECT * FROM vt1, vt2, vt0;
SELECT DISTINCT vt2.c0 FROM vt2;
SELECT DISTINCT vt2.c0 FROM vt2 WHERE ((UPPER(vt2.c0) IN (vt2.c0))) UNION SELECT DISTINCT vt2.c0 FROM vt2 WHERE ((NOT ((UPPER(vt2.c0) IN (vt2.c0))))) UNION SELECT DISTINCT vt2.c0 FROM vt2 WHERE ((((UPPER(vt2.c0) IN (vt2.c0))) ISNULL));
SELECT DISTINCT vt2.c0 FROM vt2;
SELECT vt2.c0, vt1.c0 FROM vt2, vt1 GROUP BY vt2.c0, vt1.c0;
SELECT vt2.c0, vt1.c0 FROM vt2, vt1 WHERE (CASE vt2.c0  WHEN vt2.c0 THEN vt2.c0 END COLLATE RTRIM) GROUP BY vt2.c0, vt1.c0 UNION SELECT vt2.c0, vt1.c0 FROM vt2, vt1 WHERE ((NOT (CASE vt2.c0  WHEN vt2.c0 THEN vt2.c0 END COLLATE RTRIM))) GROUP BY vt2.c0, vt1.c0 UNION SELECT vt2.c0, vt1.c0 FROM vt2, vt1 WHERE (((CASE vt2.c0  WHEN vt2.c0 THEN vt2.c0 END COLLATE RTRIM) ISNULL)) GROUP BY vt2.c0, vt1.c0;
SELECT vt2.c0, vt1.c0 FROM vt2, vt1 GROUP BY vt2.c0, vt1.c0;
SELECT vt0.c1 FROM vt2, vt1 FULL OUTER JOIN vt0 ON ((('1778842958'))<=((((vt0.c0)<=(vt0.c0))))) GROUP BY vt0.c1;
SELECT vt0.c1 FROM vt2, vt1 FULL OUTER JOIN vt0 ON ((('1778842958'))<=((((vt0.c0)<=(vt0.c0))))) GROUP BY vt0.c1 HAVING MIN((((vt1.c0))=((COUNT(*))))) UNION ALL SELECT ALL vt0.c1 FROM vt2, vt1 FULL OUTER JOIN vt0 ON ((('1778842958'))<=((((vt0.c0)<=(vt0.c0))))) GROUP BY vt0.c1 HAVING (NOT (MIN((((vt1.c0))==((COUNT(*))))))) UNION ALL SELECT vt0.c1 FROM vt2, vt1 FULL OUTER JOIN vt0 ON ((('1778842958'))<=((((vt0.c0)<=(vt0.c0))))) GROUP BY vt0.c1 HAVING ((MIN((((vt1.c0))=((COUNT(*)))))) ISNULL);
SELECT * FROM vt1;
SELECT ALL * FROM vt1 WHERE (COALESCE(DISTINCT ((vt1.c0) ISNULL), (((vt1.c0))<=((vt1.c0))))) UNION ALL SELECT ALL * FROM vt1 WHERE ((NOT (COALESCE(DISTINCT ((vt1.c0) ISNULL), (((vt1.c0))<=((vt1.c0))))))) UNION ALL SELECT ALL * FROM vt1 WHERE (((COALESCE(DISTINCT ((vt1.c0) ISNULL), (((vt1.c0))<=((vt1.c0))))) ISNULL));
SELECT * FROM vt1;
SELECT DISTINCT vt0.c1, vt0.c0, vt2.c0 FROM vt0, vt2;
SELECT DISTINCT vt0.c1, vt0.c0, vt2.c0 FROM vt0, vt2 WHERE (((((vt0.c1) ISNULL))|(((vt2.c0)*(vt2.c0))))) UNION SELECT DISTINCT vt0.c1, vt0.c0, vt2.c0 FROM vt0, vt2 WHERE ((NOT (((((vt0.c1) ISNULL))|(((vt2.c0)*(vt2.c0))))))) UNION SELECT DISTINCT vt0.c1, vt0.c0, vt2.c0 FROM vt0, vt2 WHERE (((((((vt0.c1) ISNULL))|(((vt2.c0)*(vt2.c0))))) ISNULL));
SELECT DISTINCT vt0.c1, vt0.c0, vt2.c0 FROM vt0, vt2;
SELECT ALL vt0.c1, vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c1, vt0.c0, vt1.c0;
SELECT ALL vt0.c1, vt0.c0, vt1.c0 FROM vt0, vt1 WHERE (((json_array_length(vt1.c0, vt0.c1))<>(vt0.c1 COLLATE RTRIM))) GROUP BY vt0.c1, vt0.c0, vt1.c0 UNION SELECT ALL vt0.c1, vt0.c0, vt1.c0 FROM vt0, vt1 WHERE ((NOT (((json_array_length(vt1.c0, vt0.c1))!=(vt0.c1 COLLATE RTRIM))))) GROUP BY vt0.c1, vt0.c0, vt1.c0 UNION SELECT vt0.c1, vt0.c0, vt1.c0 FROM vt0, vt1 WHERE (((((json_array_length(vt1.c0, vt0.c1))<>(vt0.c1 COLLATE RTRIM))) ISNULL)) GROUP BY vt0.c1, vt0.c0, vt1.c0;
SELECT vt1.c0, vt0.c1, vt0.c0 FROM vt1, vt2, vt0 GROUP BY vt1.c0, vt0.c1, vt0.c0;
SELECT vt1.c0, vt0.c1, vt0.c0 FROM vt1, vt2, vt0 GROUP BY vt1.c0, vt0.c1, vt0.c0 HAVING ((COUNT(*))-(SUM(vt2.c0))) UNION ALL SELECT ALL vt1.c0, vt0.c1, vt0.c0 FROM vt1, vt2, vt0 GROUP BY vt1.c0, vt0.c1, vt0.c0 HAVING (NOT (((COUNT(*))-(SUM(vt2.c0))))) UNION ALL SELECT ALL vt1.c0, vt0.c1, vt0.c0 FROM vt1, vt2, vt0 GROUP BY vt1.c0, vt0.c1, vt0.c0 HAVING ((((COUNT(*))-(SUM(vt2.c0)))) ISNULL);
SELECT vt1.c0, vt0.c1, vt0.c0 FROM vt1, vt2, vt0 GROUP BY vt1.c0, vt0.c1, vt0.c0;
SELECT vt1.c0, vt0.c1, vt0.c0 FROM vt1, vt2, vt0 GROUP BY vt1.c0, vt0.c1, vt0.c0 HAVING ((COUNT(*))-(SUM(vt2.c0))) UNION ALL SELECT ALL vt1.c0, vt0.c1, vt0.c0 FROM vt1, vt2, vt0 GROUP BY vt1.c0, vt0.c1, vt0.c0 HAVING (NOT (((COUNT(*))-(SUM(vt2.c0))))) UNION ALL SELECT ALL vt1.c0, vt0.c1, vt0.c0 FROM vt1, vt2, vt0 GROUP BY vt1.c0, vt0.c1, vt0.c0 HAVING ((((COUNT(*))-(SUM(vt2.c0)))) ISNULL);
SELECT vt1.c0, vt0.c1, vt0.c0 FROM vt1, vt2, vt0 GROUP BY vt1.c0, vt0.c1, vt0.c0;
SELECT * FROM vt1 INNER JOIN vt0 ON IFNULL(((vt0.c0)GLOB(vt0.c0)), CAST(vt1.c0 AS TEXT));
SELECT * FROM vt1 INNER JOIN vt0 ON IFNULL(((vt0.c0)GLOB(vt0.c0)), CAST(vt1.c0 AS TEXT)) WHERE ((((vt0.c0)) NOT BETWEEN ((((((vt0.c0)OR(vt0.c1)))OR(vt0.c1)))) AND ((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)))))) UNION ALL SELECT ALL * FROM vt1 INNER JOIN vt0 ON IFNULL(((vt0.c0)GLOB(vt0.c0)), CAST(vt1.c0 AS TEXT)) WHERE ((NOT ((((vt0.c0)) NOT BETWEEN ((((((vt0.c0)OR(vt0.c1)))OR(vt0.c1)))) AND ((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)))))))) UNION ALL SELECT ALL * FROM vt1 INNER JOIN vt0 ON IFNULL(((vt0.c0)GLOB(vt0.c0)), CAST(vt1.c0 AS TEXT)) WHERE ((((((vt0.c0)) NOT BETWEEN ((((((vt0.c0)OR(vt0.c1)))OR(vt0.c1)))) AND ((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)))))) ISNULL));
SELECT * FROM vt1 INNER JOIN vt0 ON IFNULL(((vt0.c0)GLOB(vt0.c0)), CAST(vt1.c0 AS TEXT));
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (CASE WHEN CASE WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 END THEN ((vt0.c1) IS FALSE) END) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (CASE WHEN CASE WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 END THEN ((vt0.c1) IS FALSE) END))) UNION SELECT DISTINCT * FROM vt0 WHERE (((CASE WHEN CASE WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 END THEN ((vt0.c1) IS FALSE) END) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT ALL vt2.c0 FROM vt2 WHERE (((vt2.c0)*(vt2.c0)) COLLATE BINARY) GROUP BY vt2.c0 UNION SELECT vt2.c0 FROM vt2 WHERE ((NOT (((vt2.c0)*(vt2.c0)) COLLATE BINARY))) GROUP BY vt2.c0 UNION SELECT vt2.c0 FROM vt2 WHERE (((((vt2.c0)*(vt2.c0)) COLLATE BINARY) ISNULL)) GROUP BY vt2.c0;
SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT vt1.c0, vt0.c1, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c1, vt0.c0;
SELECT vt1.c0, vt0.c1, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c1, vt0.c0 HAVING GROUP_CONCAT(MAX(MIN(vt1.c0))) UNION ALL SELECT vt1.c0, vt0.c1, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c1, vt0.c0 HAVING (NOT (GROUP_CONCAT(MAX(MIN(vt1.c0))))) UNION ALL SELECT ALL vt1.c0, vt0.c1, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c1, vt0.c0 HAVING ((GROUP_CONCAT(MAX(MIN(vt1.c0)))) ISNULL);
SELECT ALL vt1.c0, vt2.c0 FROM vt2, vt1;
SELECT ALL vt1.c0, vt2.c0 FROM vt2, vt1 WHERE ((~ (((vt2.c0) BETWEEN (vt1.c0) AND (vt1.c0))))) UNION ALL SELECT ALL vt1.c0, vt2.c0 FROM vt2, vt1 WHERE ((NOT ((~ (((vt2.c0) BETWEEN (vt1.c0) AND (vt1.c0))))))) UNION ALL SELECT vt1.c0, vt2.c0 FROM vt2, vt1 NOT INDEXED WHERE ((((~ (((vt2.c0) BETWEEN (vt1.c0) AND (vt1.c0))))) ISNULL));
SELECT ALL vt1.c0, vt2.c0 FROM vt2, vt1;
SELECT DISTINCT * FROM vt0 RIGHT OUTER JOIN vt2 ON (+ (((vt2.c0)>(vt2.c0))));
SELECT DISTINCT * FROM vt0 RIGHT OUTER JOIN vt2 ON (+ (((vt2.c0)>(vt2.c0)))) WHERE ('0.4151506327499743') UNION SELECT DISTINCT * FROM vt0 RIGHT OUTER JOIN vt2 ON (+ (((vt2.c0)>(vt2.c0)))) WHERE ((NOT ('0.4151506327499743'))) UNION SELECT DISTINCT * FROM vt0 RIGHT OUTER JOIN vt2 ON (+ (((vt2.c0)>(vt2.c0)))) WHERE ((('0.4151506327499743') ISNULL));
SELECT DISTINCT * FROM vt0 RIGHT OUTER JOIN vt2 ON (+ (((vt2.c0)>(vt2.c0))));
SELECT vt0.c0, vt0.c1, vt1.c0 FROM vt2 LEFT OUTER JOIN vt1 ON (CAST(vt2.c0 AS BLOB) IN (CASE WHEN vt0.c0 THEN vt1.c0 WHEN vt2.c0 THEN x'e1077c3f' WHEN vt0.c0 THEN 0.5562985414176675 ELSE vt0.c0 END, CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)) RIGHT OUTER JOIN vt0 ON (((- (vt0.c0)))%((vt1.c0 IN (vt2.c0)))) GROUP BY vt0.c0, vt0.c1, vt1.c0;
SELECT vt0.c0, vt0.c1, vt2.c0 FROM vt2, vt1, vt0 GROUP BY vt0.c0, vt0.c1, vt2.c0;
SELECT vt0.c0, vt0.c1, vt2.c0 FROM vt2, vt1, vt0 GROUP BY vt0.c0, vt0.c1, vt2.c0 HAVING (GROUP_CONCAT(vt0.c1) IN ()) UNION ALL SELECT vt0.c0, vt0.c1, vt2.c0 FROM vt2, vt1, vt0 GROUP BY vt0.c0, vt0.c1, vt2.c0 HAVING (NOT ((GROUP_CONCAT(vt0.c1) IN ()))) UNION ALL SELECT vt0.c0, vt0.c1, vt2.c0 FROM vt2, vt1, vt0 GROUP BY vt0.c0, vt0.c1, vt2.c0 HAVING (((GROUP_CONCAT(vt0.c1) IN ())) ISNULL);
SELECT vt0.c0, vt0.c1, vt2.c0 FROM vt2, vt1, vt0 GROUP BY vt0.c0, vt0.c1, vt2.c0;
SELECT vt0.c0, vt0.c1, vt2.c0 FROM vt2, vt1, vt0 GROUP BY vt0.c0, vt0.c1, vt2.c0 HAVING (GROUP_CONCAT(vt0.c1) IN ()) UNION ALL SELECT vt0.c0, vt0.c1, vt2.c0 FROM vt2, vt1, vt0 GROUP BY vt0.c0, vt0.c1, vt2.c0 HAVING (NOT ((GROUP_CONCAT(vt0.c1) IN ()))) UNION ALL SELECT vt0.c0, vt0.c1, vt2.c0 FROM vt2, vt1, vt0 GROUP BY vt0.c0, vt0.c1, vt2.c0 HAVING (((GROUP_CONCAT(vt0.c1) IN ())) ISNULL);
SELECT vt0.c0, vt0.c1, vt2.c0 FROM vt2, vt1, vt0 GROUP BY vt0.c0, vt0.c1, vt2.c0;
SELECT * FROM vt0;
SELECT * FROM vt0 WHERE ((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 END, ((vt0.c1) ISNULL), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)), ((vt0.c1)>(1121639093)), TRIM(DISTINCT vt0.c0, 0.40209777381544254)))<((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)), IFNULL(vt0.c1, vt0.c1), ((vt0.c1)<=(vt0.c0)), ((x'002e')IS(vt0.c1)), ((vt0.c1)>('-828632896')))))) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT ((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 END, ((vt0.c1) ISNULL), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)), ((vt0.c1)>(1121639093)), TRIM(DISTINCT vt0.c0, 0.40209777381544254)))<((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)), IFNULL(vt0.c1, vt0.c1), ((vt0.c1)<=(vt0.c0)), ((x'002e')IS(vt0.c1)), ((vt0.c1)>('-828632896')))))))) UNION ALL SELECT * FROM vt0 WHERE ((((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 END, ((vt0.c1) ISNULL), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)), ((vt0.c1)>(1121639093)), TRIM(DISTINCT vt0.c0, 0.40209777381544254)))<((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)), IFNULL(vt0.c1, vt0.c1), ((vt0.c1)<=(vt0.c0)), ((x'002e')IS(vt0.c1)), ((vt0.c1)>('-828632896')))))) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (x'') UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (x''))) UNION SELECT DISTINCT * FROM vt0 WHERE (((x'') ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL vt2.c0, vt1.c0 FROM vt2, vt1 GROUP BY vt2.c0, vt1.c0;
SELECT vt2.c0, vt1.c0 FROM vt2, vt1 WHERE (CAST(((vt2.c0)LIKE(vt2.c0)) AS NUMERIC)) GROUP BY vt2.c0, vt1.c0 UNION SELECT ALL vt2.c0, vt1.c0 FROM vt2, vt1 WHERE ((NOT (CAST(((vt2.c0)LIKE(vt2.c0)) AS NUMERIC)))) GROUP BY vt2.c0, vt1.c0 UNION SELECT ALL vt2.c0, vt1.c0 FROM vt2, vt1 WHERE (((CAST(((vt2.c0)LIKE(vt2.c0)) AS NUMERIC)) ISNULL)) GROUP BY vt2.c0, vt1.c0;
SELECT ALL vt2.c0, vt1.c0 FROM vt2, vt1 GROUP BY vt2.c0, vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (+ (CAST(MIN(COUNT(*)) AS NUMERIC))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT ((+ (CAST(MIN(COUNT(*)) AS NUMERIC))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (((+ (CAST(MIN(COUNT(*)) AS NUMERIC)))) ISNULL);
SELECT vt0.c0, vt2.c0, vt0.c1, vt1.c0 FROM vt1, vt2, vt0;
SELECT ALL vt0.c0, vt2.c0, vt0.c1, vt1.c0 FROM vt1, vt2, vt0 WHERE (CASE ((vt2.c0)LIKE(vt1.c0))  WHEN ((vt1.c0)>=(vt0.c0)) THEN (((vt1.c0, vt0.c0, vt0.c0)) BETWEEN ((vt1.c0, -1185756153, vt1.c0)) AND ((vt0.c1, vt2.c0, NULL))) ELSE CASE WHEN vt2.c0 THEN vt1.c0 END END) UNION ALL SELECT ALL vt0.c0, vt2.c0, vt0.c1, vt1.c0 FROM vt1, vt2, vt0 WHERE ((NOT (CASE ((vt2.c0)LIKE(vt1.c0))  WHEN ((vt1.c0)>=(vt0.c0)) THEN (((vt1.c0, vt0.c0, vt0.c0)) BETWEEN ((vt1.c0, -1185756153, vt1.c0)) AND ((vt0.c1, vt2.c0, NULL))) ELSE CASE WHEN vt2.c0 THEN vt1.c0 END END))) UNION ALL SELECT ALL vt0.c0, vt2.c0, vt0.c1, vt1.c0 FROM vt1, vt2, vt0 WHERE (((CASE ((vt2.c0)LIKE(vt1.c0))  WHEN ((vt1.c0)>=(vt0.c0)) THEN (((vt1.c0, vt0.c0, vt0.c0)) BETWEEN ((vt1.c0, -1185756153, vt1.c0)) AND ((vt0.c1, vt2.c0, NULL))) ELSE CASE WHEN vt2.c0 THEN vt1.c0 END END) ISNULL));
SELECT vt0.c0, vt2.c0, vt0.c1, vt1.c0 FROM vt1, vt2, vt0;
SELECT DISTINCT * FROM vt1, vt0, vt2;
SELECT DISTINCT * FROM vt1, vt0, vt2 WHERE ((((CAST(vt2.c0 AS BLOB)))!=((vt1.c0 COLLATE RTRIM)))) UNION SELECT DISTINCT * FROM vt1, vt0, vt2 WHERE ((NOT ((((CAST(vt2.c0 AS BLOB)))<>((vt1.c0 COLLATE RTRIM)))))) UNION SELECT DISTINCT * FROM vt1, vt0, vt2 WHERE ((((((CAST(vt2.c0 AS BLOB)))<>((vt1.c0 COLLATE RTRIM)))) ISNULL));
SELECT DISTINCT * FROM vt1, vt0, vt2;
SELECT vt0.c0 FROM vt2, vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt2, vt0 WHERE (((((- (vt2.c0))))<(((((vt0.c1)) BETWEEN ((NULL)) AND ((x'e416'))))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt2, vt0 WHERE ((NOT (((((- (vt2.c0))))<(((((vt0.c1)) BETWEEN ((NULL)) AND ((x'e416'))))))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt2, vt0 WHERE (((((((- (vt2.c0))))<(((((vt0.c1)) BETWEEN ((NULL)) AND ((x'e416'))))))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt2, vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0, vt2.c0, vt1.c0, vt0.c1 FROM vt0, vt2, vt1 GROUP BY vt0.c0, vt2.c0, vt1.c0, vt0.c1;
SELECT vt0.c0, vt2.c0, vt1.c0, vt0.c1 FROM vt0, vt2, vt1 GROUP BY vt0.c0, vt2.c0, vt1.c0, vt0.c1 HAVING x'a1ef' UNION ALL SELECT ALL vt0.c0, vt2.c0, vt1.c0, vt0.c1 FROM vt0, vt2, vt1 GROUP BY vt0.c0, vt2.c0, vt1.c0, vt0.c1 HAVING (NOT (x'a1ef')) UNION ALL SELECT ALL vt0.c0, vt2.c0, vt1.c0, vt0.c1 FROM vt0, vt2, vt1 GROUP BY vt0.c0, vt2.c0, vt1.c0, vt0.c1 HAVING ((x'a1ef') ISNULL);
SELECT ALL vt0.c0, vt2.c0, vt1.c0, vt0.c1 FROM vt0, vt2, vt1 GROUP BY vt0.c0, vt2.c0, vt1.c0, vt0.c1;
SELECT vt0.c0, vt2.c0, vt1.c0, vt0.c1 FROM vt0, vt2, vt1 GROUP BY vt0.c0, vt2.c0, vt1.c0, vt0.c1 HAVING x'a1ef' UNION ALL SELECT ALL vt0.c0, vt2.c0, vt1.c0, vt0.c1 FROM vt0, vt2, vt1 GROUP BY vt0.c0, vt2.c0, vt1.c0, vt0.c1 HAVING (NOT (x'a1ef')) UNION ALL SELECT ALL vt0.c0, vt2.c0, vt1.c0, vt0.c1 FROM vt0, vt2, vt1 GROUP BY vt0.c0, vt2.c0, vt1.c0, vt0.c1 HAVING ((x'a1ef') ISNULL);
SELECT ALL vt0.c0, vt2.c0, vt1.c0, vt0.c1 FROM vt0, vt2, vt1 GROUP BY vt0.c0, vt2.c0, vt1.c0, vt0.c1;
SELECT * FROM vt0;
SELECT * FROM vt0 WHERE (vt0.c0) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (vt0.c0))) UNION ALL SELECT * FROM vt0 WHERE (((vt0.c0) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT vt2.c0, vt1.c0 FROM vt2, vt1;
SELECT DISTINCT vt2.c0, vt1.c0 FROM vt2, vt1 WHERE (((((vt1.c0)+(vt1.c0)))AND(((((((((vt2.c0)OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(vt2.c0))))) UNION SELECT DISTINCT vt2.c0, vt1.c0 FROM vt2, vt1 WHERE ((NOT (((((vt1.c0)+(vt1.c0)))AND(((((((((vt2.c0)OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(vt2.c0))))))) UNION SELECT DISTINCT vt2.c0, vt1.c0 FROM vt2, vt1 NOT INDEXED WHERE (((((((vt1.c0)+(vt1.c0)))AND(((((((((vt2.c0)OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(vt2.c0))))) ISNULL));
SELECT DISTINCT vt2.c0, vt1.c0 FROM vt2, vt1;
SELECT ALL vt0.c0, vt0.c1 FROM vt2, vt0, vt1 GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt2, vt0, vt1 WHERE (((vt1.c0 COLLATE BINARY) NOT BETWEEN (vt2.c0 COLLATE BINARY) AND (vt0.c1 COLLATE NOCASE))) GROUP BY vt0.c0, vt0.c1 UNION SELECT vt0.c0, vt0.c1 FROM vt2, vt0, vt1 WHERE ((NOT (((vt1.c0 COLLATE BINARY) NOT BETWEEN (vt2.c0 COLLATE BINARY) AND (vt0.c1 COLLATE NOCASE))))) GROUP BY vt0.c0, vt0.c1 UNION SELECT ALL vt0.c0, vt0.c1 FROM vt2, vt0, vt1 WHERE (((((vt1.c0 COLLATE BINARY) NOT BETWEEN (vt2.c0 COLLATE BINARY) AND (vt0.c1 COLLATE NOCASE))) ISNULL)) GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt2, vt0, vt1 GROUP BY vt0.c0, vt0.c1;
SELECT vt2.c0, vt0.c1 FROM vt2 FULL OUTER JOIN vt0 ON (((vt0.c0)) NOT BETWEEN (((((vt0.c1))>((vt0.c1))))) AND ((LOWER('Le珈k')))) GROUP BY vt2.c0, vt0.c1;
SELECT vt2.c0, vt0.c1 FROM vt2 FULL OUTER JOIN vt0 ON (((vt0.c0)) NOT BETWEEN (((((vt0.c1))>((vt0.c1))))) AND ((LOWER('Le珈k')))) GROUP BY vt2.c0, vt0.c1 HAVING (((CHAR(COUNT(vt0.c0), AVG(MIN(GROUP_CONCAT(COUNT(*)))), vt2.c0), MAX(vt2.c0), GROUP_CONCAT(SUM(vt2.c0))))>=((MIN(COUNT(*)), MAX(vt0.c1), CASE WHEN COUNT(MIN(vt0.c0)) THEN COUNT(GROUP_CONCAT(vt0.c1)) END))) UNION ALL SELECT vt2.c0, vt0.c1 FROM vt2 FULL OUTER JOIN vt0 ON (((vt0.c0)) NOT BETWEEN (((((vt0.c1))>((vt0.c1))))) AND ((LOWER('Le珈k')))) GROUP BY vt2.c0, vt0.c1 HAVING (NOT ((((CHAR(COUNT(vt0.c0), AVG(MIN(GROUP_CONCAT(COUNT(*)))), vt2.c0), MAX(vt2.c0), GROUP_CONCAT(SUM(vt2.c0))))>=((MIN(COUNT(*)), MAX(vt0.c1), CASE WHEN COUNT(MIN(vt0.c0)) THEN COUNT(GROUP_CONCAT(vt0.c1)) END))))) UNION ALL SELECT ALL vt2.c0, vt0.c1 FROM vt2 FULL OUTER JOIN vt0 ON (((vt0.c0)) NOT BETWEEN (((((vt0.c1))>((vt0.c1))))) AND ((LOWER('Le珈k')))) GROUP BY vt2.c0, vt0.c1 HAVING (((((CHAR(COUNT(vt0.c0), AVG(MIN(GROUP_CONCAT(COUNT(*)))), vt2.c0), MAX(vt2.c0), GROUP_CONCAT(SUM(vt2.c0))))>=((MIN(COUNT(*)), MAX(vt0.c1), CASE WHEN COUNT(MIN(vt0.c0)) THEN COUNT(GROUP_CONCAT(vt0.c1)) END)))) ISNULL);
SELECT ALL * FROM vt0, vt2;
SELECT ALL * FROM vt0, vt2 WHERE (((((vt2.c0)IS(vt2.c0))) NOTNULL)) UNION ALL SELECT * FROM vt0, vt2 WHERE ((NOT (((((vt2.c0)IS(vt2.c0))) NOTNULL)))) UNION ALL SELECT * FROM vt0, vt2 WHERE (((((((vt2.c0)IS(vt2.c0))) NOTNULL)) ISNULL));
SELECT ALL * FROM vt0, vt2;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((vt0.c0 IN ()) IN (vt0.c0))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((vt0.c0 IN ()) IN (vt0.c0))))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((vt0.c0 IN ()) IN (vt0.c0))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT vt1.c0, vt0.c1, vt0.c0 FROM vt0, vt2, vt1 GROUP BY vt1.c0, vt0.c1, vt0.c0;
SELECT ALL vt1.c0, vt0.c1, vt0.c0 FROM vt0, vt2, vt1 WHERE ((('')GLOB(vt2.c0)) COLLATE NOCASE) GROUP BY vt1.c0, vt0.c1, vt0.c0 UNION SELECT ALL vt1.c0, vt0.c1, vt0.c0 FROM vt0, vt2, vt1 WHERE ((NOT ((('')GLOB(vt2.c0)) COLLATE NOCASE))) GROUP BY vt1.c0, vt0.c1, vt0.c0 UNION SELECT ALL vt1.c0, vt0.c1, vt0.c0 FROM vt0, vt2, vt1 WHERE ((((('')GLOB(vt2.c0)) COLLATE NOCASE) ISNULL)) GROUP BY vt1.c0, vt0.c1, vt0.c0;
SELECT vt1.c0, vt0.c1, vt0.c0 FROM vt0, vt2, vt1 GROUP BY vt1.c0, vt0.c1, vt0.c0;
SELECT vt2.c0, vt1.c0 FROM vt1, vt2 GROUP BY vt2.c0, vt1.c0;
SELECT ALL vt2.c0, vt1.c0 FROM vt1, vt2 GROUP BY vt2.c0, vt1.c0 HAVING AVG(GROUP_CONCAT(COUNT(MAX(COUNT(*))))) UNION ALL SELECT vt2.c0, vt1.c0 FROM vt1, vt2 GROUP BY vt2.c0, vt1.c0 HAVING (NOT (AVG(GROUP_CONCAT(COUNT(MAX(COUNT(*))))))) UNION ALL SELECT vt2.c0, vt1.c0 FROM vt1, vt2 GROUP BY vt2.c0, vt1.c0 HAVING ((AVG(GROUP_CONCAT(COUNT(MAX(COUNT(*)))))) ISNULL);
SELECT ALL MIN(CAST(vt2.c0 COLLATE BINARY AS BLOB)) FROM vt0, vt1, vt2;
SELECT ALL * FROM vt2, vt1;
SELECT * FROM vt2, vt1 WHERE (CASE WHEN vt2.c0 THEN ((vt1.c0) ISNULL) WHEN ((vt1.c0) BETWEEN (vt2.c0) AND (vt1.c0)) THEN CASE WHEN 1922619399 THEN vt1.c0 WHEN vt2.c0 THEN vt2.c0 WHEN vt1.c0 THEN vt2.c0 WHEN vt2.c0 THEN vt2.c0 WHEN vt1.c0 THEN 0.9258766571762568 END WHEN ((1667567567) NOT BETWEEN (vt2.c0) AND (x'43e095ee')) THEN (((vt1.c0, vt2.c0, vt2.c0)) NOT BETWEEN ((vt2.c0, vt1.c0, vt2.c0)) AND ((vt1.c0, vt2.c0, vt2.c0))) ELSE ((vt1.c0)|(vt2.c0)) END) UNION ALL SELECT ALL * FROM vt2, vt1 WHERE ((NOT (CASE WHEN vt2.c0 THEN ((vt1.c0) ISNULL) WHEN ((vt1.c0) BETWEEN (vt2.c0) AND (vt1.c0)) THEN CASE WHEN 1922619399 THEN vt1.c0 WHEN vt2.c0 THEN vt2.c0 WHEN vt1.c0 THEN vt2.c0 WHEN vt2.c0 THEN vt2.c0 WHEN vt1.c0 THEN 0.9258766571762568 END WHEN ((1667567567) NOT BETWEEN (vt2.c0) AND (x'43e095ee')) THEN (((vt1.c0, vt2.c0, vt2.c0)) NOT BETWEEN ((vt2.c0, vt1.c0, vt2.c0)) AND ((vt1.c0, vt2.c0, vt2.c0))) ELSE ((vt1.c0)|(vt2.c0)) END))) UNION ALL SELECT ALL * FROM vt2, vt1 WHERE (((CASE WHEN vt2.c0 THEN ((vt1.c0) ISNULL) WHEN ((vt1.c0) BETWEEN (vt2.c0) AND (vt1.c0)) THEN CASE WHEN 1922619399 THEN vt1.c0 WHEN vt2.c0 THEN vt2.c0 WHEN vt1.c0 THEN vt2.c0 WHEN vt2.c0 THEN vt2.c0 WHEN vt1.c0 THEN 0.9258766571762568 END WHEN ((1667567567) NOT BETWEEN (vt2.c0) AND (x'43e095ee')) THEN (((vt1.c0, vt2.c0, vt2.c0)) NOT BETWEEN ((vt2.c0, vt1.c0, vt2.c0)) AND ((vt1.c0, vt2.c0, vt2.c0))) ELSE ((vt1.c0)|(vt2.c0)) END) ISNULL));
SELECT ALL * FROM vt2, vt1;
SELECT DISTINCT vt1.c0 FROM vt1, vt2;
SELECT DISTINCT vt1.c0 FROM vt1, vt2 WHERE ((((0.7966898995906154)) BETWEEN (((vt2.c0 IN ()))) AND (('')))) UNION SELECT DISTINCT vt1.c0 FROM vt1, vt2 WHERE ((NOT ((((0.7966898995906154)) BETWEEN (((vt2.c0 IN ()))) AND (('')))))) UNION SELECT DISTINCT vt1.c0 FROM vt1, vt2 WHERE ((((((0.7966898995906154)) BETWEEN (((vt2.c0 IN ()))) AND (('')))) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1, vt2;
SELECT ALL vt1.c0, vt2.c0, vt0.c1, vt0.c0 FROM vt0, vt1, vt2 GROUP BY vt1.c0, vt2.c0, vt0.c1, vt0.c0;
SELECT vt1.c0, vt2.c0, vt0.c1, vt0.c0 FROM vt0, vt1, vt2 WHERE (((((CAST(vt0.c0 AS NUMERIC))OR((vt0.c0 IN (vt1.c0)))))AND(CAST('1958482930' AS BLOB)))) GROUP BY vt1.c0, vt2.c0, vt0.c1, vt0.c0 UNION SELECT vt1.c0, vt2.c0, vt0.c1, vt0.c0 FROM vt0, vt1, vt2 WHERE ((NOT (((((CAST(vt0.c0 AS NUMERIC))OR((vt0.c0 IN (vt1.c0)))))AND(CAST('1958482930' AS BLOB)))))) GROUP BY vt1.c0, vt2.c0, vt0.c1, vt0.c0 UNION SELECT ALL vt1.c0, vt2.c0, vt0.c1, vt0.c0 FROM vt0, vt1, vt2 WHERE (((((((CAST(vt0.c0 AS NUMERIC))OR((vt0.c0 IN (vt1.c0)))))AND(CAST('1958482930' AS BLOB)))) ISNULL)) GROUP BY vt1.c0, vt2.c0, vt0.c1, vt0.c0;
SELECT ALL vt1.c0, vt2.c0, vt0.c1, vt0.c0 FROM vt0, vt1, vt2 GROUP BY vt1.c0, vt2.c0, vt0.c1, vt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0, vt1 GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0, vt1 GROUP BY vt0.c1, vt0.c0 HAVING ((((vt0.c1)OR(AVG(vt0.c0))))AND(x'')) UNION ALL SELECT vt0.c1, vt0.c0 FROM vt0, vt1 GROUP BY vt0.c1, vt0.c0 HAVING (NOT (((((vt0.c1)OR(AVG(vt0.c0))))AND(x'')))) UNION ALL SELECT vt0.c1, vt0.c0 FROM vt0, vt1 GROUP BY vt0.c1, vt0.c0 HAVING ((((((vt0.c1)OR(AVG(vt0.c0))))AND(x''))) ISNULL);
SELECT vt0.c1, vt0.c0 FROM vt0, vt1 GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0, vt1 GROUP BY vt0.c1, vt0.c0 HAVING ((((vt0.c1)OR(AVG(vt0.c0))))AND(x'')) UNION ALL SELECT vt0.c1, vt0.c0 FROM vt0, vt1 GROUP BY vt0.c1, vt0.c0 HAVING (NOT (((((vt0.c1)OR(AVG(vt0.c0))))AND(x'')))) UNION ALL SELECT vt0.c1, vt0.c0 FROM vt0, vt1 GROUP BY vt0.c1, vt0.c0 HAVING ((((((vt0.c1)OR(AVG(vt0.c0))))AND(x''))) ISNULL);
SELECT vt0.c1, vt0.c0 FROM vt0, vt1 GROUP BY vt0.c1, vt0.c0;
SELECT * FROM vt2, vt0;
SELECT * FROM vt2, vt0 WHERE (CASE WHEN vt0.c1 THEN vt2.c0 ELSE CAST(vt2.c0 AS BLOB) END) UNION ALL SELECT ALL * FROM vt2, vt0 WHERE ((NOT (CASE WHEN vt0.c1 THEN vt2.c0 ELSE CAST(vt2.c0 AS BLOB) END))) UNION ALL SELECT * FROM vt2, vt0 WHERE (((CASE WHEN vt0.c1 THEN vt2.c0 ELSE CAST(vt2.c0 AS BLOB) END) ISNULL));
SELECT * FROM vt2, vt0;
SELECT DISTINCT vt1.c0, vt0.c0 FROM vt2 LEFT OUTER JOIN vt0 ON (- (TRIM(DISTINCT vt1.c0))) INNER JOIN vt1 ON vt0.c1;
SELECT DISTINCT vt1.c0, vt0.c0 FROM vt2 LEFT OUTER JOIN vt0 ON (- (TRIM(DISTINCT vt1.c0))) INNER JOIN vt1 ON vt0.c1 WHERE (vt0.c1) UNION SELECT DISTINCT vt1.c0, vt0.c0 FROM vt2 LEFT OUTER JOIN vt0 ON (- (TRIM(DISTINCT vt1.c0))) INNER JOIN vt1 ON vt0.c1 WHERE ((NOT (vt0.c1))) UNION SELECT DISTINCT vt1.c0, vt0.c0 FROM vt2 LEFT OUTER JOIN vt0 ON (- (TRIM(DISTINCT vt1.c0))) INNER JOIN vt1 ON vt0.c1 WHERE (((vt0.c1) ISNULL));
SELECT DISTINCT vt1.c0, vt0.c0 FROM vt2 LEFT OUTER JOIN vt0 ON (- (TRIM(DISTINCT vt1.c0))) INNER JOIN vt1 ON vt0.c1;
SELECT ALL vt1.c0, vt2.c0 FROM vt1, vt2 GROUP BY vt1.c0, vt2.c0;
SELECT ALL vt1.c0, vt2.c0 FROM vt1, vt2 WHERE (((vt2.c0 COLLATE NOCASE) NOTNULL)) GROUP BY vt1.c0, vt2.c0 UNION SELECT vt1.c0, vt2.c0 FROM vt1, vt2 WHERE ((NOT (((vt2.c0 COLLATE NOCASE) NOTNULL)))) GROUP BY vt1.c0, vt2.c0 UNION SELECT vt1.c0, vt2.c0 FROM vt1, vt2 WHERE (((((vt2.c0 COLLATE NOCASE) NOTNULL)) ISNULL)) GROUP BY vt1.c0, vt2.c0;
SELECT ALL vt1.c0, vt2.c0 FROM vt1, vt2 GROUP BY vt1.c0, vt2.c0;
SELECT ALL vt0.c1, vt2.c0, vt0.c0, vt1.c0 FROM vt2, vt0, vt1 GROUP BY vt0.c1, vt2.c0, vt0.c0, vt1.c0;
SELECT ALL vt0.c1, vt2.c0, vt0.c0, vt1.c0 FROM vt2, vt0, vt1 GROUP BY vt0.c1, vt2.c0, vt0.c0, vt1.c0 HAVING GROUP_CONCAT(COUNT(*)) UNION ALL SELECT ALL vt0.c1, vt2.c0, vt0.c0, vt1.c0 FROM vt2, vt0, vt1 GROUP BY vt0.c1, vt2.c0, vt0.c0, vt1.c0 HAVING (NOT (GROUP_CONCAT(COUNT(*)))) UNION ALL SELECT ALL vt0.c1, vt2.c0, vt0.c0, vt1.c0 FROM vt2, vt0, vt1 GROUP BY vt0.c1, vt2.c0, vt0.c0, vt1.c0 HAVING ((GROUP_CONCAT(COUNT(*))) ISNULL);
SELECT ALL vt0.c0, vt1.c0, vt0.c1 FROM vt1, vt0;
SELECT ALL vt0.c0, vt1.c0, vt0.c1 FROM vt1, vt0 WHERE (((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1))) ISNULL)) UNION ALL SELECT vt0.c0, vt1.c0, vt0.c1 FROM vt1, vt0 WHERE ((NOT (((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1))) ISNULL)))) UNION ALL SELECT vt0.c0, vt1.c0, vt0.c1 FROM vt1, vt0 WHERE (((((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1))) ISNULL)) ISNULL));
SELECT ALL vt0.c0, vt1.c0, vt0.c1 FROM vt1, vt0;
SELECT DISTINCT vt1.c0, vt2.c0 FROM vt1, vt2;
SELECT DISTINCT vt1.c0, vt2.c0 FROM vt1, vt2 WHERE (((UNICODE(vt1.c0))<=(CAST(vt1.c0 AS BLOB)))) UNION SELECT DISTINCT vt1.c0, vt2.c0 FROM vt1, vt2 WHERE ((NOT (((UNICODE(vt1.c0))<=(CAST(vt1.c0 AS BLOB)))))) UNION SELECT DISTINCT vt1.c0, vt2.c0 FROM vt1, vt2 WHERE (((((UNICODE(vt1.c0))<=(CAST(vt1.c0 AS BLOB)))) ISNULL));
SELECT DISTINCT vt1.c0, vt2.c0 FROM vt1, vt2;
SELECT vt0.c0 FROM vt1, vt2 RIGHT OUTER JOIN vt0 ON CAST(vt0.c1 COLLATE BINARY AS NUMERIC) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt1, vt2 RIGHT OUTER JOIN vt0 ON CAST(vt0.c1 COLLATE BINARY AS NUMERIC) WHERE (((+ (vt2.c0)) IN ())) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt1, vt2 RIGHT OUTER JOIN vt0 ON CAST(vt0.c1 COLLATE BINARY AS NUMERIC) WHERE ((NOT (((+ (vt2.c0)) IN ())))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt1, vt2 RIGHT OUTER JOIN vt0 ON CAST(vt0.c1 COLLATE BINARY AS NUMERIC) WHERE (((((+ (vt2.c0)) IN ())) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt1, vt2 RIGHT OUTER JOIN vt0 ON CAST(vt0.c1 COLLATE BINARY AS NUMERIC) GROUP BY vt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0 INNER JOIN vt1 ON ((((vt0.c1) NOT BETWEEN ('ItF') AND (vt0.c1)))-(((((vt0.c1)OR(vt0.c0)))OR(vt0.c0)))) GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0 INNER JOIN vt1 ON ((((vt0.c1) NOT BETWEEN ('ItF') AND (vt0.c1)))-(((((vt0.c1)OR(vt0.c0)))OR(vt0.c0)))) GROUP BY vt0.c1, vt0.c0 HAVING AVG(COUNT(*)) UNION ALL SELECT vt0.c1, vt0.c0 FROM vt0 INNER JOIN vt1 ON ((((vt0.c1) NOT BETWEEN ('ItF') AND (vt0.c1)))-(((((vt0.c1)OR(vt0.c0)))OR(vt0.c0)))) GROUP BY vt0.c1, vt0.c0 HAVING (NOT (AVG(COUNT(*)))) UNION ALL SELECT vt0.c1, vt0.c0 FROM vt0 INNER JOIN vt1 ON ((((vt0.c1) NOT BETWEEN ('ItF') AND (vt0.c1)))-(((((vt0.c1)OR(vt0.c0)))OR(vt0.c0)))) GROUP BY vt0.c1, vt0.c0 HAVING ((AVG(COUNT(*))) ISNULL);
SELECT * FROM vt0, vt2;
SELECT * FROM vt0, vt2 WHERE (CASE WHEN ((vt2.c0)IS(vt0.c0)) THEN ((vt2.c0)GLOB(vt0.c0)) WHEN LIKELY(vt0.c0) THEN ((((((((vt0.c1)AND(vt0.c0)))OR(vt0.c1)))OR(vt0.c0)))AND(vt0.c1)) WHEN '' THEN vt0.c1 COLLATE RTRIM END) UNION ALL SELECT * FROM vt0, vt2 WHERE ((NOT (CASE WHEN ((vt2.c0)IS(vt0.c0)) THEN ((vt2.c0)GLOB(vt0.c0)) WHEN LIKELY(vt0.c0) THEN ((((((((vt0.c1)AND(vt0.c0)))OR(vt0.c1)))OR(vt0.c0)))AND(vt0.c1)) WHEN '' THEN vt0.c1 COLLATE RTRIM END))) UNION ALL SELECT * FROM vt0, vt2 WHERE (((CASE WHEN ((vt2.c0)IS(vt0.c0)) THEN ((vt2.c0)GLOB(vt0.c0)) WHEN LIKELY(vt0.c0) THEN ((((((((vt0.c1)AND(vt0.c0)))OR(vt0.c1)))OR(vt0.c0)))AND(vt0.c1)) WHEN '' THEN vt0.c1 COLLATE RTRIM END) ISNULL));
SELECT * FROM vt0, vt2;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (vt0.c0) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (vt0.c0))) UNION SELECT DISTINCT * FROM vt0 WHERE (((vt0.c0) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL vt1.c0, vt0.c1, vt2.c0 FROM vt0, vt1, vt2 GROUP BY vt1.c0, vt0.c1, vt2.c0;
SELECT vt1.c0, vt0.c1, vt2.c0 FROM vt0, vt1, vt2 WHERE (((((vt0.c1)=(vt2.c0))) NOTNULL)) GROUP BY vt1.c0, vt0.c1, vt2.c0 UNION SELECT vt1.c0, vt0.c1, vt2.c0 FROM vt0, vt1, vt2 WHERE ((NOT (((((vt0.c1)=(vt2.c0))) NOTNULL)))) GROUP BY vt1.c0, vt0.c1, vt2.c0 UNION SELECT vt1.c0, vt0.c1, vt2.c0 FROM vt0, vt1, vt2 WHERE (((((((vt0.c1)==(vt2.c0))) NOTNULL)) ISNULL)) GROUP BY vt1.c0, vt0.c1, vt2.c0;
SELECT ALL vt1.c0, vt0.c1, vt2.c0 FROM vt0, vt1, vt2 GROUP BY vt1.c0, vt0.c1, vt2.c0;
SELECT vt0.c0, vt1.c0 FROM vt1, vt2, vt0 GROUP BY vt0.c0, vt1.c0;
SELECT vt0.c0, vt1.c0 FROM vt1, vt2, vt0 GROUP BY vt0.c0, vt1.c0 HAVING MAX((+ (vt0.c0))) UNION ALL SELECT ALL vt0.c0, vt1.c0 FROM vt1, vt2, vt0 GROUP BY vt0.c0, vt1.c0 HAVING (NOT (MAX((+ (vt0.c0))))) UNION ALL SELECT ALL vt0.c0, vt1.c0 FROM vt1, vt2, vt0 GROUP BY vt0.c0, vt1.c0 HAVING ((MAX((+ (vt0.c0)))) ISNULL);
SELECT vt0.c0, vt1.c0 FROM vt1, vt2, vt0 GROUP BY vt0.c0, vt1.c0;
SELECT vt0.c0, vt1.c0 FROM vt1, vt2, vt0 GROUP BY vt0.c0, vt1.c0 HAVING MAX((+ (vt0.c0))) UNION ALL SELECT ALL vt0.c0, vt1.c0 FROM vt1, vt2, vt0 GROUP BY vt0.c0, vt1.c0 HAVING (NOT (MAX((+ (vt0.c0))))) UNION ALL SELECT ALL vt0.c0, vt1.c0 FROM vt1, vt2, vt0 GROUP BY vt0.c0, vt1.c0 HAVING ((MAX((+ (vt0.c0)))) ISNULL);
SELECT vt0.c0, vt1.c0 FROM vt1, vt2, vt0 GROUP BY vt0.c0, vt1.c0;
SELECT ALL TOTAL(vt0.c1) FROM vt0, vt2, vt1 ORDER BY x'' DESC  NULLS FIRST;
SELECT ALL * FROM vt0;
SELECT * FROM vt0 WHERE (CASE WHEN (((vt0.c0))<((vt0.c0))) THEN NULL WHEN (vt0.c0 IN ()) THEN ((vt0.c0) NOTNULL) WHEN (+ (vt0.c0)) THEN vt0.c0 COLLATE BINARY END) UNION ALL SELECT * FROM vt0 WHERE ((NOT (CASE WHEN (((vt0.c0))<((vt0.c0))) THEN NULL WHEN (vt0.c0 IN ()) THEN ((vt0.c0) NOTNULL) WHEN (+ (vt0.c0)) THEN vt0.c0 COLLATE BINARY END))) UNION ALL SELECT ALL * FROM vt0 WHERE (((CASE WHEN (((vt0.c0))<((vt0.c0))) THEN NULL WHEN (vt0.c0 IN ()) THEN ((vt0.c0) NOTNULL) WHEN (+ (vt0.c0)) THEN vt0.c0 COLLATE BINARY END) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT * FROM vt2, vt1;
SELECT DISTINCT * FROM vt2, vt1 WHERE ((NOT (1622833201))) UNION SELECT DISTINCT * FROM vt2, vt1 NOT INDEXED WHERE ((NOT ((NOT (1622833201))))) UNION SELECT DISTINCT * FROM vt2, vt1 WHERE ((((NOT (1622833201))) ISNULL));
SELECT DISTINCT * FROM vt2, vt1;
SELECT ALL vt2.c0 FROM vt2, vt1 GROUP BY vt2.c0;
SELECT vt2.c0 FROM vt2, vt1 WHERE (CAST(((((vt2.c0)AND(vt2.c0)))OR(vt1.c0)) AS NUMERIC)) GROUP BY vt2.c0 UNION SELECT vt2.c0 FROM vt2, vt1 WHERE ((NOT (CAST(((((vt2.c0)AND(vt2.c0)))OR(vt1.c0)) AS NUMERIC)))) GROUP BY vt2.c0 UNION SELECT ALL vt2.c0 FROM vt2, vt1 WHERE (((CAST(((((vt2.c0)AND(vt2.c0)))OR(vt1.c0)) AS NUMERIC)) ISNULL)) GROUP BY vt2.c0;
SELECT ALL vt2.c0 FROM vt2, vt1 GROUP BY vt2.c0;
SELECT vt0.c1, vt2.c0, vt0.c0, vt1.c0 FROM vt2, vt1 LEFT OUTER JOIN vt0 ON ((((vt0.c0) NOT BETWEEN (vt2.c0) AND (vt2.c0)))<(CAST(vt2.c0 AS REAL))) GROUP BY vt0.c1, vt2.c0, vt0.c0, vt1.c0;
SELECT vt0.c1, vt2.c0, vt0.c0, vt1.c0 FROM vt2, vt1 LEFT OUTER JOIN vt0 ON ((((vt0.c0) NOT BETWEEN (vt2.c0) AND (vt2.c0)))<(CAST(vt2.c0 AS REAL))) GROUP BY vt0.c1, vt2.c0, vt0.c0, vt1.c0 HAVING CAST(AVG('-1e500') AS REAL) UNION ALL SELECT ALL vt0.c1, vt2.c0, vt0.c0, vt1.c0 FROM vt2, vt1 LEFT OUTER JOIN vt0 ON ((((vt0.c0) NOT BETWEEN (vt2.c0) AND (vt2.c0)))<(CAST(vt2.c0 AS REAL))) GROUP BY vt0.c1, vt2.c0, vt0.c0, vt1.c0 HAVING (NOT (CAST(AVG('-1e500') AS REAL))) UNION ALL SELECT vt0.c1, vt2.c0, vt0.c0, vt1.c0 FROM vt2, vt1 LEFT OUTER JOIN vt0 ON ((((vt0.c0) NOT BETWEEN (vt2.c0) AND (vt2.c0)))<(CAST(vt2.c0 AS REAL))) GROUP BY vt0.c1, vt2.c0, vt0.c0, vt1.c0 HAVING ((CAST(AVG('-1e500') AS REAL)) ISNULL);
SELECT vt0.c1, vt2.c0, vt0.c0, vt1.c0 FROM vt2, vt1 LEFT OUTER JOIN vt0 ON ((((vt0.c0) NOT BETWEEN (vt2.c0) AND (vt2.c0)))<(CAST(vt2.c0 AS REAL))) GROUP BY vt0.c1, vt2.c0, vt0.c0, vt1.c0;
SELECT vt0.c1, vt2.c0, vt0.c0, vt1.c0 FROM vt2, vt1 LEFT OUTER JOIN vt0 ON ((((vt0.c0) NOT BETWEEN (vt2.c0) AND (vt2.c0)))<(CAST(vt2.c0 AS REAL))) GROUP BY vt0.c1, vt2.c0, vt0.c0, vt1.c0 HAVING CAST(AVG('-1e500') AS REAL) UNION ALL SELECT ALL vt0.c1, vt2.c0, vt0.c0, vt1.c0 FROM vt2, vt1 LEFT OUTER JOIN vt0 ON ((((vt0.c0) NOT BETWEEN (vt2.c0) AND (vt2.c0)))<(CAST(vt2.c0 AS REAL))) GROUP BY vt0.c1, vt2.c0, vt0.c0, vt1.c0 HAVING (NOT (CAST(AVG('-1e500') AS REAL))) UNION ALL SELECT vt0.c1, vt2.c0, vt0.c0, vt1.c0 FROM vt2, vt1 LEFT OUTER JOIN vt0 ON ((((vt0.c0) NOT BETWEEN (vt2.c0) AND (vt2.c0)))<(CAST(vt2.c0 AS REAL))) GROUP BY vt0.c1, vt2.c0, vt0.c0, vt1.c0 HAVING ((CAST(AVG('-1e500') AS REAL)) ISNULL);
SELECT vt0.c1, vt2.c0, vt0.c0, vt1.c0 FROM vt2, vt1 LEFT OUTER JOIN vt0 ON ((((vt0.c0) NOT BETWEEN (vt2.c0) AND (vt2.c0)))<(CAST(vt2.c0 AS REAL))) GROUP BY vt0.c1, vt2.c0, vt0.c0, vt1.c0;
SELECT * FROM vt2, vt1 NATURAL JOIN vt0;
SELECT ALL * FROM vt2, vt1 NATURAL JOIN vt0 WHERE (vt2.c0) UNION ALL SELECT * FROM vt2, vt1 NATURAL JOIN vt0 WHERE ((NOT (vt2.c0))) UNION ALL SELECT ALL * FROM vt2, vt1 NATURAL JOIN vt0 WHERE (((vt2.c0) ISNULL));
SELECT * FROM vt2, vt1 NATURAL JOIN vt0;
SELECT DISTINCT vt0.c0, vt1.c0, vt0.c1 FROM vt0, vt1;
SELECT DISTINCT vt0.c0, vt1.c0, vt0.c1 FROM vt0, vt1 WHERE ((~ (vt0.c0 COLLATE BINARY))) UNION SELECT DISTINCT vt0.c0, vt1.c0, vt0.c1 FROM vt0, vt1 WHERE ((NOT ((~ (vt0.c0 COLLATE BINARY))))) UNION SELECT DISTINCT vt0.c0, vt1.c0, vt0.c1 FROM vt0, vt1 WHERE ((((~ (vt0.c0 COLLATE BINARY))) ISNULL));
SELECT DISTINCT vt0.c0, vt1.c0, vt0.c1 FROM vt0, vt1;
SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT vt2.c0 FROM vt2 WHERE ((((((vt2.c0))<>((vt2.c0))))GLOB(NULL))) GROUP BY vt2.c0 UNION SELECT ALL vt2.c0 FROM vt2 WHERE ((NOT ((((((vt2.c0))<>((vt2.c0))))GLOB(NULL))))) GROUP BY vt2.c0 UNION SELECT vt2.c0 FROM vt2 WHERE ((((((((vt2.c0))!=((vt2.c0))))GLOB(NULL))) ISNULL)) GROUP BY vt2.c0;
SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT vt2.c0, vt1.c0 FROM vt2, vt1 GROUP BY vt2.c0, vt1.c0;
SELECT vt2.c0, vt1.c0 FROM vt2, vt1 GROUP BY vt2.c0, vt1.c0 HAVING AVG(COUNT(vt2.c0)) UNION ALL SELECT vt2.c0, vt1.c0 FROM vt2, vt1 GROUP BY vt2.c0, vt1.c0 HAVING (NOT (AVG(COUNT(vt2.c0)))) UNION ALL SELECT ALL vt2.c0, vt1.c0 FROM vt2, vt1 GROUP BY vt2.c0, vt1.c0 HAVING ((AVG(COUNT(vt2.c0))) ISNULL);
SELECT ALL * FROM vt2, vt0;
SELECT * FROM vt2, vt0 WHERE ((vt2.c0 IN ()) COLLATE RTRIM) UNION ALL SELECT * FROM vt2, vt0 WHERE ((NOT ((vt2.c0 IN ()) COLLATE RTRIM))) UNION ALL SELECT ALL * FROM vt2, vt0 WHERE ((((vt2.c0 IN ()) COLLATE RTRIM) ISNULL));
SELECT ALL * FROM vt2, vt0;
SELECT DISTINCT vt0.c0, vt2.c0, vt0.c1 FROM vt2, vt0;
SELECT DISTINCT vt0.c0, vt2.c0, vt0.c1 FROM vt2 NOT INDEXED, vt0 WHERE ((+ (vt2.c0))) UNION SELECT DISTINCT vt0.c0, vt2.c0, vt0.c1 FROM vt2, vt0 WHERE ((NOT ((+ (vt2.c0))))) UNION SELECT DISTINCT vt0.c0, vt2.c0, vt0.c1 FROM vt2, vt0 WHERE ((((+ (vt2.c0))) ISNULL));
SELECT DISTINCT vt0.c0, vt2.c0, vt0.c1 FROM vt2, vt0;
SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT ALL vt2.c0 FROM vt2 WHERE ((CAST(vt2.c0 AS NUMERIC) IN ())) GROUP BY vt2.c0 UNION SELECT vt2.c0 FROM vt2 WHERE ((NOT ((CAST(vt2.c0 AS NUMERIC) IN ())))) GROUP BY vt2.c0 UNION SELECT vt2.c0 FROM vt2 WHERE ((((CAST(vt2.c0 AS NUMERIC) IN ())) ISNULL)) GROUP BY vt2.c0;
SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT ALL vt1.c0, vt0.c0 FROM vt0 RIGHT OUTER JOIN vt2 ON ((((vt1.c0)GLOB(vt1.c0))) IS TRUE) INNER JOIN vt1 ON ((vt0.c1) IS TRUE) GROUP BY vt1.c0, vt0.c0;
SELECT vt0.c1 FROM vt0, vt1, vt2;
SELECT ALL vt0.c1 FROM vt0, vt1, vt2 WHERE (CASE (~ (vt1.c0))  WHEN CAST(vt0.c0 AS REAL) THEN load_extension(vt0.c0) ELSE (vt0.c1 IN ()) END) UNION ALL SELECT vt0.c1 FROM vt0, vt1, vt2 WHERE ((NOT (CASE (~ (vt1.c0))  WHEN CAST(vt0.c0 AS REAL) THEN load_extension(vt0.c0) ELSE (vt0.c1 IN ()) END))) UNION ALL SELECT vt0.c1 FROM vt0, vt1, vt2 WHERE (((CASE (~ (vt1.c0))  WHEN CAST(vt0.c0 AS REAL) THEN load_extension(vt0.c0) ELSE (vt0.c1 IN ()) END) ISNULL));
SELECT vt0.c1 FROM vt0, vt1, vt2;
SELECT DISTINCT vt2.c0, vt1.c0 FROM vt2 RIGHT OUTER JOIN vt1 ON CASE ((((vt2.c0)OR(vt2.c0)))AND(vt2.c0))  WHEN CASE vt1.c0  WHEN vt1.c0 THEN '-1440048683' ELSE vt2.c0 END THEN vt2.c0 COLLATE BINARY END;
SELECT DISTINCT vt2.c0, vt1.c0 FROM vt2 RIGHT OUTER JOIN vt1 ON CASE ((((vt2.c0)OR(vt2.c0)))AND(vt2.c0))  WHEN CASE vt1.c0  WHEN vt1.c0 THEN '-1440048683' ELSE vt2.c0 END THEN vt2.c0 COLLATE BINARY END WHERE (((vt2.c0)IS NOT(vt1.c0)) COLLATE NOCASE) UNION SELECT DISTINCT vt2.c0, vt1.c0 FROM vt2 RIGHT OUTER JOIN vt1 ON CASE ((((vt2.c0)OR(vt2.c0)))AND(vt2.c0))  WHEN CASE vt1.c0  WHEN vt1.c0 THEN '-1440048683' ELSE vt2.c0 END THEN vt2.c0 COLLATE BINARY END WHERE ((NOT (((vt2.c0)IS NOT(vt1.c0)) COLLATE NOCASE))) UNION SELECT DISTINCT vt2.c0, vt1.c0 FROM vt2 RIGHT OUTER JOIN vt1 ON CASE ((((vt2.c0)OR(vt2.c0)))AND(vt2.c0))  WHEN CASE vt1.c0  WHEN vt1.c0 THEN '-1440048683' ELSE vt2.c0 END THEN vt2.c0 COLLATE BINARY END WHERE (((((vt2.c0)IS NOT(vt1.c0)) COLLATE NOCASE) ISNULL));
SELECT DISTINCT vt2.c0, vt1.c0 FROM vt2 RIGHT OUTER JOIN vt1 ON CASE ((((vt2.c0)OR(vt2.c0)))AND(vt2.c0))  WHEN CASE vt1.c0  WHEN vt1.c0 THEN '-1440048683' ELSE vt2.c0 END THEN vt2.c0 COLLATE BINARY END;
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 WHERE ((((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c1))))>=(x''))) GROUP BY vt0.c0, vt0.c1 UNION SELECT vt0.c0, vt0.c1 FROM vt0 WHERE ((NOT ((((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c1))))>=(x''))))) GROUP BY vt0.c0, vt0.c1 UNION SELECT ALL vt0.c0, vt0.c1 FROM vt0 WHERE ((((((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c1))))>=(x''))) ISNULL)) GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING (((vt0.c0)) BETWEEN ((TOTAL(COUNT(*)))) AND ((vt0.c0 COLLATE NOCASE))) UNION ALL SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING (NOT ((((vt0.c0)) BETWEEN ((TOTAL(COUNT(*)))) AND ((vt0.c0 COLLATE NOCASE))))) UNION ALL SELECT vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING (((((vt0.c0)) BETWEEN ((TOTAL(COUNT(*)))) AND ((vt0.c0 COLLATE NOCASE)))) ISNULL);
SELECT ALL vt0.c1, vt2.c0 FROM vt0, vt1, vt2;
SELECT ALL vt0.c1, vt2.c0 FROM vt0, vt1, vt2 WHERE ((NOT (CASE WHEN vt1.c0 THEN vt2.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt1.c0 END))) UNION ALL SELECT vt0.c1, vt2.c0 FROM vt0, vt1, vt2 WHERE ((NOT ((NOT (CASE WHEN vt1.c0 THEN vt2.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt1.c0 END))))) UNION ALL SELECT ALL vt0.c1, vt2.c0 FROM vt0, vt1, vt2 WHERE ((((NOT (CASE WHEN vt1.c0 THEN vt2.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt1.c0 END))) ISNULL));
SELECT ALL vt0.c1, vt2.c0 FROM vt0, vt1, vt2;
SELECT DISTINCT * FROM vt0, vt2, vt1;
SELECT DISTINCT * FROM vt0, vt2, vt1 WHERE (TRIM(((((vt0.c0)AND(vt0.c0)))OR(0.5797398815450163)))) UNION SELECT DISTINCT * FROM vt0, vt2, vt1 WHERE ((NOT (TRIM(((((vt0.c0)AND(vt0.c0)))OR(0.5797398815450163)))))) UNION SELECT DISTINCT * FROM vt0, vt2, vt1 WHERE (((TRIM(((((vt0.c0)AND(vt0.c0)))OR(0.5797398815450163)))) ISNULL));
SELECT DISTINCT * FROM vt0, vt2, vt1;
SELECT ALL vt2.c0 FROM vt2, vt0, vt1 GROUP BY vt2.c0;
SELECT vt2.c0 FROM vt2, vt0, vt1 WHERE (json_valid(((vt0.c0)==(vt1.c0)))) GROUP BY vt2.c0 UNION SELECT vt2.c0 FROM vt2, vt0, vt1 WHERE ((NOT (json_valid(((vt0.c0)==(vt1.c0)))))) GROUP BY vt2.c0 UNION SELECT ALL vt2.c0 FROM vt2, vt0, vt1 WHERE (((json_valid(((vt0.c0)=(vt1.c0)))) ISNULL)) GROUP BY vt2.c0;
SELECT ALL vt2.c0 FROM vt2, vt0, vt1 GROUP BY vt2.c0;
SELECT vt2.c0, vt1.c0 FROM vt0, vt1, vt2 GROUP BY vt2.c0, vt1.c0;
SELECT vt2.c0, vt1.c0 FROM vt0, vt1, vt2 GROUP BY vt2.c0, vt1.c0 HAVING TOTAL(TOTAL(COUNT(*)) COLLATE RTRIM) UNION ALL SELECT ALL vt2.c0, vt1.c0 FROM vt0, vt1, vt2 GROUP BY vt2.c0, vt1.c0 HAVING (NOT (TOTAL(TOTAL(COUNT(*)) COLLATE RTRIM))) UNION ALL SELECT ALL vt2.c0, vt1.c0 FROM vt0, vt1, vt2 GROUP BY vt2.c0, vt1.c0 HAVING ((TOTAL(TOTAL(COUNT(*)) COLLATE RTRIM)) ISNULL);
SELECT * FROM vt2, vt1, vt0;
SELECT * FROM vt2, vt1, vt0 WHERE ((((- (vt0.c1)))+((((vt0.c1)) BETWEEN ((x'')) AND ((vt2.c0)))))) UNION ALL SELECT * FROM vt2, vt1, vt0 WHERE ((NOT ((((- (vt0.c1)))+((((vt0.c1)) BETWEEN ((x'')) AND ((vt2.c0)))))))) UNION ALL SELECT * FROM vt2, vt1, vt0 WHERE ((((((- (vt0.c1)))+((((vt0.c1)) BETWEEN ((x'')) AND ((vt2.c0)))))) ISNULL));
SELECT * FROM vt2, vt1, vt0;
SELECT DISTINCT * FROM vt2, vt0, vt1;
SELECT DISTINCT * FROM vt2, vt0, vt1 WHERE ((- ((vt0.c0 IN ())))) UNION SELECT DISTINCT * FROM vt2, vt0, vt1 WHERE ((NOT ((- ((vt0.c0 IN ())))))) UNION SELECT DISTINCT * FROM vt2, vt0, vt1 WHERE ((((- ((vt0.c0 IN ())))) ISNULL));
SELECT DISTINCT * FROM vt2, vt0, vt1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT vt0.c0, vt0.c1 FROM vt0 WHERE (((vt0.c1)>=(vt0.c1)) COLLATE NOCASE) GROUP BY vt0.c0, vt0.c1 UNION SELECT vt0.c0, vt0.c1 FROM vt0 WHERE ((NOT (((vt0.c1)>=(vt0.c1)) COLLATE NOCASE))) GROUP BY vt0.c0, vt0.c1 UNION SELECT ALL vt0.c0, vt0.c1 FROM vt0 WHERE (((((vt0.c1)>=(vt0.c1)) COLLATE NOCASE) ISNULL)) GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt1.c0 FROM vt1, vt2 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1, vt2 GROUP BY vt1.c0 HAVING (((vt1.c0)) BETWEEN ((SUM(COUNT(*)))) AND (((((vt2.c0, MAX(vt1.c0), MIN(COUNT(*))))<((vt1.c0, vt2.c0, SUM(vt1.c0))))))) UNION ALL SELECT vt1.c0 FROM vt1, vt2 GROUP BY vt1.c0 HAVING (NOT ((((vt1.c0)) BETWEEN ((SUM(COUNT(*)))) AND (((((vt2.c0, MAX(vt1.c0), MIN(COUNT(*))))<((vt1.c0, vt2.c0, SUM(vt1.c0))))))))) UNION ALL SELECT ALL vt1.c0 FROM vt1, vt2 GROUP BY vt1.c0 HAVING (((((vt1.c0)) BETWEEN ((SUM(COUNT(*)))) AND (((((vt2.c0, MAX(vt1.c0), MIN(COUNT(*))))<((vt1.c0, vt2.c0, SUM(vt1.c0)))))))) ISNULL);
SELECT ALL * FROM vt2;
SELECT * FROM vt2 WHERE (json_patch(((((vt2.c0)OR(vt2.c0)))OR('')), (((vt2.c0, vt2.c0, vt2.c0, vt2.c0, vt2.c0)) BETWEEN ((vt2.c0, vt2.c0, vt2.c0, vt2.c0, x'f772')) AND ((9.37627026E8, vt2.c0, vt2.c0, vt2.c0, vt2.c0))))) UNION ALL SELECT ALL * FROM vt2 WHERE ((NOT (json_patch(((((vt2.c0)OR(vt2.c0)))OR('')), (((vt2.c0, vt2.c0, vt2.c0, vt2.c0, vt2.c0)) BETWEEN ((vt2.c0, vt2.c0, vt2.c0, vt2.c0, x'f772')) AND ((9.37627026E8, vt2.c0, vt2.c0, vt2.c0, vt2.c0))))))) UNION ALL SELECT * FROM vt2 WHERE (((json_patch(((((vt2.c0)OR(vt2.c0)))OR('')), (((vt2.c0, vt2.c0, vt2.c0, vt2.c0, vt2.c0)) BETWEEN ((vt2.c0, vt2.c0, vt2.c0, vt2.c0, x'f772')) AND ((9.37627026E8, vt2.c0, vt2.c0, vt2.c0, vt2.c0))))) ISNULL));
SELECT ALL * FROM vt2;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (CASE ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))  WHEN vt1.c0 THEN (vt1.c0 IN ()) END) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (CASE ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))  WHEN vt1.c0 THEN (vt1.c0 IN ()) END))) UNION SELECT DISTINCT * FROM vt1 WHERE (((CASE ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))  WHEN vt1.c0 THEN (vt1.c0 IN ()) END) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (((vt0.c1) BETWEEN (vt0.c1) AND ((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c0)))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (((vt0.c1) BETWEEN (vt0.c1) AND ((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c0)))))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((((vt0.c1) BETWEEN (vt0.c1) AND ((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c0)))))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((vt1.c0)/(((('}EOIU'))<((vt1.c0))))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (((vt1.c0)/(((('}EOIU'))<((vt1.c0))))))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((((vt1.c0)/(((('}EOIU'))<((vt1.c0)))))) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((vt1.c0)/(((('}EOIU'))<((vt1.c0))))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (((vt1.c0)/(((('}EOIU'))<((vt1.c0))))))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((((vt1.c0)/(((('}EOIU'))<((vt1.c0)))))) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt2.c0 FROM vt2;
SELECT ALL vt2.c0 FROM vt2 WHERE (0.3785694865896144) UNION ALL SELECT ALL vt2.c0 FROM vt2 WHERE ((NOT (0.3785694865896144))) UNION ALL SELECT vt2.c0 FROM vt2 WHERE (((0.3785694865896144) ISNULL));
SELECT vt2.c0 FROM vt2;
SELECT DISTINCT vt0.c0, vt1.c0, vt2.c0 FROM vt2, vt0 FULL OUTER JOIN vt1 ON vt0.c0;
SELECT DISTINCT vt0.c0, vt1.c0, vt2.c0 FROM vt2, vt0 FULL OUTER JOIN vt1 ON vt0.c0 WHERE (vt2.c0 COLLATE BINARY) UNION SELECT DISTINCT vt0.c0, vt1.c0, vt2.c0 FROM vt2, vt0 FULL OUTER JOIN vt1 ON vt0.c0 WHERE ((NOT (vt2.c0 COLLATE BINARY))) UNION SELECT DISTINCT vt0.c0, vt1.c0, vt2.c0 FROM vt2, vt0 FULL OUTER JOIN vt1 ON vt0.c0 WHERE (((vt2.c0 COLLATE BINARY) ISNULL));
SELECT DISTINCT vt0.c0, vt1.c0, vt2.c0 FROM vt2, vt0 FULL OUTER JOIN vt1 ON vt0.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE (CAST(UPPER(DISTINCT vt1.c0) AS REAL)) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (CAST(UPPER(DISTINCT vt1.c0) AS REAL)))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE (((CAST(UPPER(DISTINCT vt1.c0) AS REAL)) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0, vt0.c1 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c1;
SELECT ALL vt1.c0, vt0.c1 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c1 HAVING MAX(CAST(COUNT(MAX(vt1.c0)) AS REAL)) UNION ALL SELECT vt1.c0, vt0.c1 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c1 HAVING (NOT (MAX(CAST(COUNT(MAX(vt1.c0)) AS REAL)))) UNION ALL SELECT ALL vt1.c0, vt0.c1 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c1 HAVING ((MAX(CAST(COUNT(MAX(vt1.c0)) AS REAL))) ISNULL);
SELECT * FROM vt0, vt1;
SELECT ALL * FROM vt0, vt1 WHERE (((((vt0.c1)) BETWEEN ((vt1.c0)) AND ((vt0.c0))) IN (((vt0.c1)IS NOT(vt1.c0))))) UNION ALL SELECT ALL * FROM vt0, vt1 WHERE ((NOT (((((vt0.c1)) BETWEEN ((vt1.c0)) AND ((vt0.c0))) IN (((vt0.c1)IS NOT(vt1.c0))))))) UNION ALL SELECT * FROM vt0, vt1 WHERE (((((((vt0.c1)) BETWEEN ((vt1.c0)) AND ((vt0.c0))) IN (((vt0.c1)IS NOT(vt1.c0))))) ISNULL));
SELECT * FROM vt0, vt1;
SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0 WHERE (CAST(vt0.c0 COLLATE BINARY AS BLOB)) UNION SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0 WHERE ((NOT (CAST(vt0.c0 COLLATE BINARY AS BLOB)))) UNION SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0 WHERE (((CAST(vt0.c0 COLLATE BINARY AS BLOB)) ISNULL));
SELECT DISTINCT vt0.c1, vt0.c0 FROM vt0;
SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT vt2.c0 FROM vt2 WHERE (UNLIKELY(CAST(vt2.c0 AS TEXT))) GROUP BY vt2.c0 UNION SELECT vt2.c0 FROM vt2 WHERE ((NOT (UNLIKELY(CAST(vt2.c0 AS TEXT))))) GROUP BY vt2.c0 UNION SELECT vt2.c0 FROM vt2 WHERE (((UNLIKELY(CAST(vt2.c0 AS TEXT))) ISNULL)) GROUP BY vt2.c0;
SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING COUNT(((vt0.c0) ISNULL)) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING (NOT (COUNT(((vt0.c0) ISNULL)))) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING ((COUNT(((vt0.c0) ISNULL))) ISNULL);
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING COUNT(((vt0.c0) ISNULL)) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING (NOT (COUNT(((vt0.c0) ISNULL)))) UNION ALL SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1 HAVING ((COUNT(((vt0.c0) ISNULL))) ISNULL);
SELECT ALL vt0.c0, vt0.c1 FROM vt0 GROUP BY vt0.c0, vt0.c1;
SELECT ALL * FROM vt0, vt2, vt1;
SELECT ALL * FROM vt0, vt2, vt1 WHERE (((CASE NULL  WHEN vt0.c1 THEN x'8cdf' ELSE vt0.c1 END) NOT NULL)) UNION ALL SELECT * FROM vt0, vt2, vt1 WHERE ((NOT (((CASE NULL  WHEN vt0.c1 THEN x'8cdf' ELSE vt0.c1 END) NOT NULL)))) UNION ALL SELECT ALL * FROM vt0, vt2, vt1 WHERE (((((CASE NULL  WHEN vt0.c1 THEN x'8cdf' ELSE vt0.c1 END) NOT NULL)) ISNULL));
SELECT ALL * FROM vt0, vt2, vt1;
SELECT DISTINCT vt2.c0, vt0.c1 FROM vt2 INNER JOIN vt0 ON ((((vt0.c1) NOTNULL))<<(((((((((vt2.c0)AND(vt0.c0)))AND(vt0.c1)))AND(vt0.c0)))OR(vt0.c1))));
SELECT DISTINCT vt2.c0, vt0.c1 FROM vt2 INNER JOIN vt0 ON ((((vt0.c1) NOTNULL))<<(((((((((vt2.c0)AND(vt0.c0)))AND(vt0.c1)))AND(vt0.c0)))OR(vt0.c1)))) WHERE (((((vt2.c0)|(0.27252326360110246)))AND(((vt0.c1)>=(vt0.c0))))) UNION SELECT DISTINCT vt2.c0, vt0.c1 FROM vt2 INNER JOIN vt0 ON ((((vt0.c1) NOTNULL))<<(((((((((vt2.c0)AND(vt0.c0)))AND(vt0.c1)))AND(vt0.c0)))OR(vt0.c1)))) WHERE ((NOT (((((vt2.c0)|(0.27252326360110246)))AND(((vt0.c1)>=(vt0.c0))))))) UNION SELECT DISTINCT vt2.c0, vt0.c1 FROM vt2 INNER JOIN vt0 ON ((((vt0.c1) NOTNULL))<<(((((((((vt2.c0)AND(vt0.c0)))AND(vt0.c1)))AND(vt0.c0)))OR(vt0.c1)))) WHERE (((((((vt2.c0)|(0.27252326360110246)))AND(((vt0.c1)>=(vt0.c0))))) ISNULL));
SELECT DISTINCT vt2.c0, vt0.c1 FROM vt2 INNER JOIN vt0 ON ((((vt0.c1) NOTNULL))<<(((((((((vt2.c0)AND(vt0.c0)))AND(vt0.c1)))AND(vt0.c0)))OR(vt0.c1))));
SELECT vt0.c1, vt0.c0 FROM vt0 NATURAL JOIN vt2 GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 NATURAL JOIN vt2 WHERE (COALESCE(NULL, vt2.c0)) GROUP BY vt0.c1, vt0.c0 UNION SELECT vt0.c1, vt0.c0 FROM vt0 NATURAL JOIN vt2 WHERE ((NOT (COALESCE(NULL, vt2.c0)))) GROUP BY vt0.c1, vt0.c0 UNION SELECT ALL vt0.c1, vt0.c0 FROM vt0 NATURAL JOIN vt2 WHERE (((COALESCE(NULL, vt2.c0)) ISNULL)) GROUP BY vt0.c1, vt0.c0;
SELECT vt0.c1, vt0.c0 FROM vt0 NATURAL JOIN vt2 GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt2.c0, vt1.c0, vt0.c1, vt0.c0 FROM vt1, vt0, vt2 GROUP BY vt2.c0, vt1.c0, vt0.c1, vt0.c0;
SELECT vt2.c0, vt1.c0, vt0.c1, vt0.c0 FROM vt1, vt0, vt2 GROUP BY vt2.c0, vt1.c0, vt0.c1, vt0.c0 HAVING AVG(MIN(MIN(MIN(vt2.c0)))) UNION ALL SELECT vt2.c0, vt1.c0, vt0.c1, vt0.c0 FROM vt1, vt0, vt2 GROUP BY vt2.c0, vt1.c0, vt0.c1, vt0.c0 HAVING (NOT (AVG(MIN(MIN(MIN(vt2.c0)))))) UNION ALL SELECT vt2.c0, vt1.c0, vt0.c1, vt0.c0 FROM vt1, vt0, vt2 GROUP BY vt2.c0, vt1.c0, vt0.c1, vt0.c0 HAVING ((AVG(MIN(MIN(MIN(vt2.c0))))) ISNULL);
SELECT ALL vt1.c0, vt2.c0, vt0.c0, vt0.c1 FROM vt0, vt1, vt2;
SELECT vt1.c0, vt2.c0, vt0.c0, vt0.c1 FROM vt0, vt1, vt2 WHERE (vt1.c0) UNION ALL SELECT vt1.c0, vt2.c0, vt0.c0, vt0.c1 FROM vt0, vt1, vt2 WHERE ((NOT (vt1.c0))) UNION ALL SELECT vt1.c0, vt2.c0, vt0.c0, vt0.c1 FROM vt0, vt1, vt2 WHERE (((vt1.c0) ISNULL));
SELECT ALL vt1.c0, vt2.c0, vt0.c0, vt0.c1 FROM vt0, vt1, vt2;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((MIN(vt0.c0, vt0.c0)) NOTNULL)) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((MIN(vt0.c0, vt0.c0)) NOTNULL)))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((MIN(vt0.c0, vt0.c0)) NOTNULL)) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT ALL vt2.c0 FROM vt2 WHERE (LENGTH(vt2.c0 COLLATE NOCASE)) GROUP BY vt2.c0 UNION SELECT vt2.c0 FROM vt2 WHERE ((NOT (LENGTH(vt2.c0 COLLATE NOCASE)))) GROUP BY vt2.c0 UNION SELECT vt2.c0 FROM vt2 WHERE (((LENGTH(vt2.c0 COLLATE NOCASE)) ISNULL)) GROUP BY vt2.c0;
SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT vt0.c1, vt0.c0 FROM vt1, vt0 GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM vt1, vt0 GROUP BY vt0.c1, vt0.c0 HAVING COUNT(*) UNION ALL SELECT vt0.c1, vt0.c0 FROM vt1, vt0 GROUP BY vt0.c1, vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM vt1, vt0 GROUP BY vt0.c1, vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt0.c1, vt0.c0 FROM vt1, vt0 GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM vt1, vt0 GROUP BY vt0.c1, vt0.c0 HAVING COUNT(*) UNION ALL SELECT vt0.c1, vt0.c0 FROM vt1, vt0 GROUP BY vt0.c1, vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt0.c1, vt0.c0 FROM vt1, vt0 GROUP BY vt0.c1, vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt0.c1, vt0.c0 FROM vt1, vt0 GROUP BY vt0.c1, vt0.c0;
SELECT ALL * FROM vt1, vt0;
SELECT * FROM vt1, vt0 WHERE ((('')GLOB(vt0.c1)) COLLATE RTRIM) UNION ALL SELECT * FROM vt1, vt0 WHERE ((NOT ((('')GLOB(vt0.c1)) COLLATE RTRIM))) UNION ALL SELECT * FROM vt1, vt0 WHERE ((((('')GLOB(vt0.c1)) COLLATE RTRIM) ISNULL));
SELECT ALL * FROM vt1, vt0;
SELECT DISTINCT * FROM vt1, vt0 NATURAL JOIN vt2;
SELECT DISTINCT * FROM vt1, vt0 NATURAL JOIN vt2 WHERE (0.0668230395539694) UNION SELECT DISTINCT * FROM vt1, vt0 NATURAL JOIN vt2 WHERE ((NOT (0.0668230395539694))) UNION SELECT DISTINCT * FROM vt1, vt0 NATURAL JOIN vt2 WHERE (((0.0668230395539694) ISNULL));
SELECT DISTINCT * FROM vt1, vt0 NATURAL JOIN vt2;
SELECT vt2.c0 FROM vt2, vt1 GROUP BY vt2.c0;
SELECT vt2.c0 FROM vt2, vt1 WHERE (((CAST(vt1.c0 AS NUMERIC)) ISNULL)) GROUP BY vt2.c0 UNION SELECT vt2.c0 FROM vt2, vt1 WHERE ((NOT (((CAST(vt1.c0 AS NUMERIC)) ISNULL)))) GROUP BY vt2.c0 UNION SELECT ALL vt2.c0 FROM vt2, vt1 WHERE (((((CAST(vt1.c0 AS NUMERIC)) ISNULL)) ISNULL)) GROUP BY vt2.c0;
SELECT vt2.c0 FROM vt2, vt1 GROUP BY vt2.c0;
SELECT vt0.c0 FROM vt1, vt2, vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt1, vt2, vt0 GROUP BY vt0.c0 HAVING (CASE vt0.c0  WHEN vt1.c0 THEN vt1.c0 END IN (UNLIKELY(GROUP_CONCAT(vt0.c1)))) UNION ALL SELECT vt0.c0 FROM vt1, vt2, vt0 GROUP BY vt0.c0 HAVING (NOT ((CASE vt0.c0  WHEN vt1.c0 THEN vt1.c0 END IN (UNLIKELY(GROUP_CONCAT(vt0.c1)))))) UNION ALL SELECT vt0.c0 FROM vt1, vt2, vt0 GROUP BY vt0.c0 HAVING (((CASE vt0.c0  WHEN vt1.c0 THEN vt1.c0 END IN (UNLIKELY(GROUP_CONCAT(vt0.c1))))) ISNULL);
SELECT vt0.c0 FROM vt1, vt2, vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt1, vt2, vt0 GROUP BY vt0.c0 HAVING (CASE vt0.c0  WHEN vt1.c0 THEN vt1.c0 END IN (UNLIKELY(GROUP_CONCAT(vt0.c1)))) UNION ALL SELECT vt0.c0 FROM vt1, vt2, vt0 GROUP BY vt0.c0 HAVING (NOT ((CASE vt0.c0  WHEN vt1.c0 THEN vt1.c0 END IN (UNLIKELY(GROUP_CONCAT(vt0.c1)))))) UNION ALL SELECT vt0.c0 FROM vt1, vt2, vt0 GROUP BY vt0.c0 HAVING (((CASE vt0.c0  WHEN vt1.c0 THEN vt1.c0 END IN (UNLIKELY(GROUP_CONCAT(vt0.c1))))) ISNULL);
SELECT vt0.c0 FROM vt1, vt2, vt0 GROUP BY vt0.c0;
SELECT vt2.c0, vt1.c0 FROM vt2, vt1;
SELECT ALL vt2.c0, vt1.c0 FROM vt2, vt1 WHERE (CASE WHEN ((vt1.c0) IS TRUE) THEN ((vt2.c0) BETWEEN (vt1.c0) AND (vt2.c0)) WHEN (((vt1.c0))==((vt2.c0))) THEN json_valid('-776562823') WHEN ((vt2.c0)LIKE(vt2.c0)) THEN ((0.07725364830389492) IS FALSE) ELSE ((vt1.c0)GLOB(vt2.c0)) END) UNION ALL SELECT vt2.c0, vt1.c0 FROM vt2, vt1 WHERE ((NOT (CASE WHEN ((vt1.c0) IS TRUE) THEN ((vt2.c0) BETWEEN (vt1.c0) AND (vt2.c0)) WHEN (((vt1.c0))=((vt2.c0))) THEN json_valid('-776562823') WHEN ((vt2.c0)LIKE(vt2.c0)) THEN ((0.07725364830389492) IS FALSE) ELSE ((vt1.c0)GLOB(vt2.c0)) END))) UNION ALL SELECT ALL vt2.c0, vt1.c0 FROM vt2, vt1 WHERE (((CASE WHEN ((vt1.c0) IS TRUE) THEN ((vt2.c0) BETWEEN (vt1.c0) AND (vt2.c0)) WHEN (((vt1.c0))==((vt2.c0))) THEN json_valid('-776562823') WHEN ((vt2.c0)LIKE(vt2.c0)) THEN ((0.07725364830389492) IS FALSE) ELSE ((vt1.c0)GLOB(vt2.c0)) END) ISNULL));
SELECT vt2.c0, vt1.c0 FROM vt2, vt1;
SELECT DISTINCT * FROM vt1, vt2;
SELECT DISTINCT * FROM vt1, vt2 WHERE (((((((((((vt1.c0) NOT BETWEEN (x'956b') AND (vt1.c0)))AND(vt2.c0)))OR(CAST(vt2.c0 AS BLOB))))AND(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))OR(((vt1.c0) NOT NULL)))) UNION SELECT DISTINCT * FROM vt1, vt2 WHERE ((NOT (((((((((((vt1.c0) NOT BETWEEN (x'956b') AND (vt1.c0)))AND(vt2.c0)))OR(CAST(vt2.c0 AS BLOB))))AND(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))OR(((vt1.c0) NOT NULL)))))) UNION SELECT DISTINCT * FROM vt1, vt2 WHERE (((((((((((((vt1.c0) NOT BETWEEN (x'956b') AND (vt1.c0)))AND(vt2.c0)))OR(CAST(vt2.c0 AS BLOB))))AND(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))OR(((vt1.c0) NOT NULL)))) ISNULL));
SELECT DISTINCT * FROM vt1, vt2;
SELECT vt2.c0 FROM vt2, vt1 GROUP BY vt2.c0;
SELECT ALL vt2.c0 FROM vt2, vt1 WHERE (((((vt2.c0)GLOB(vt2.c0)))/(vt1.c0))) GROUP BY vt2.c0 UNION SELECT vt2.c0 FROM vt2, vt1 WHERE ((NOT (((((vt2.c0)GLOB(vt2.c0)))/(vt1.c0))))) GROUP BY vt2.c0 UNION SELECT ALL vt2.c0 FROM vt2, vt1 WHERE (((((((vt2.c0)GLOB(vt2.c0)))/(vt1.c0))) ISNULL)) GROUP BY vt2.c0;
SELECT vt2.c0 FROM vt2, vt1 GROUP BY vt2.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL * FROM vt2, vt1, vt0;
SELECT ALL * FROM vt2, vt1, vt0 WHERE (CAST(((vt2.c0)>(vt0.c1)) AS TEXT)) UNION ALL SELECT * FROM vt2, vt1, vt0 WHERE ((NOT (CAST(((vt2.c0)>(vt0.c1)) AS TEXT)))) UNION ALL SELECT * FROM vt2, vt1, vt0 WHERE (((CAST(((vt2.c0)>(vt0.c1)) AS TEXT)) ISNULL));
SELECT ALL * FROM vt2, vt1, vt0;
SELECT DISTINCT vt1.c0, vt0.c1, vt0.c0, vt2.c0 FROM vt0, vt1, vt2;
SELECT DISTINCT vt1.c0, vt0.c1, vt0.c0, vt2.c0 FROM vt0, vt1, vt2 WHERE (CAST(((((((((vt2.c0)OR(vt0.c0)))OR(vt0.c1)))OR(NULL)))AND(vt2.c0)) AS BLOB)) UNION SELECT DISTINCT vt1.c0, vt0.c1, vt0.c0, vt2.c0 FROM vt0, vt1, vt2 WHERE ((NOT (CAST(((((((((vt2.c0)OR(vt0.c0)))OR(vt0.c1)))OR(NULL)))AND(vt2.c0)) AS BLOB)))) UNION SELECT DISTINCT vt1.c0, vt0.c1, vt0.c0, vt2.c0 FROM vt0, vt1, vt2 WHERE (((CAST(((((((((vt2.c0)OR(vt0.c0)))OR(vt0.c1)))OR(NULL)))AND(vt2.c0)) AS BLOB)) ISNULL));
SELECT DISTINCT vt1.c0, vt0.c1, vt0.c0, vt2.c0 FROM vt0, vt1, vt2;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE ((((((vt1.c0)<=(vt1.c0))))>((vt1.c0 COLLATE NOCASE)))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT ((((((vt1.c0)<=(vt1.c0))))>((vt1.c0 COLLATE NOCASE)))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((((((((vt1.c0)<=(vt1.c0))))>((vt1.c0 COLLATE NOCASE)))) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0, vt2.c0 FROM vt2, vt1 GROUP BY vt1.c0, vt2.c0;
SELECT ALL vt1.c0, vt2.c0 FROM vt2, vt1 GROUP BY vt1.c0, vt2.c0 HAVING COUNT(TOTAL(vt1.c0)) UNION ALL SELECT vt1.c0, vt2.c0 FROM vt2, vt1 GROUP BY vt1.c0, vt2.c0 HAVING (NOT (COUNT(TOTAL(vt1.c0)))) UNION ALL SELECT ALL vt1.c0, vt2.c0 FROM vt2, vt1 GROUP BY vt1.c0, vt2.c0 HAVING ((COUNT(TOTAL(vt1.c0))) ISNULL);
SELECT ALL * FROM vt1 LEFT OUTER JOIN vt2 ON ((((((vt1.c0)>>(0.7712719037922993)))OR((vt1.c0 IN (vt1.c0, vt2.c0)))))OR((vt2.c0 IN ())));
SELECT ALL * FROM vt1 LEFT OUTER JOIN vt2 ON ((((((vt1.c0)>>(0.7712719037922993)))OR((vt1.c0 IN (vt1.c0, vt2.c0)))))OR((vt2.c0 IN ()))) WHERE (((CAST(vt1.c0 AS REAL)) IS TRUE)) UNION ALL SELECT * FROM vt1 LEFT OUTER JOIN vt2 ON ((((((vt1.c0)>>(0.7712719037922993)))OR((vt1.c0 IN (vt1.c0, vt2.c0)))))OR((vt2.c0 IN ()))) WHERE ((NOT (((CAST(vt1.c0 AS REAL)) IS TRUE)))) UNION ALL SELECT ALL * FROM vt1 LEFT OUTER JOIN vt2 ON ((((((vt1.c0)>>(0.7712719037922993)))OR((vt1.c0 IN (vt1.c0, vt2.c0)))))OR((vt2.c0 IN ()))) WHERE (((((CAST(vt1.c0 AS REAL)) IS TRUE)) ISNULL));
SELECT ALL * FROM vt1 LEFT OUTER JOIN vt2 ON ((((((vt1.c0)>>(0.7712719037922993)))OR((vt1.c0 IN (vt1.c0, vt2.c0)))))OR((vt2.c0 IN ())));
SELECT DISTINCT vt1.c0, vt2.c0 FROM vt1 FULL OUTER JOIN vt2 ON json_extract(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt2.c0 END, vt2.c0);
SELECT DISTINCT vt1.c0, vt2.c0 FROM vt1 FULL OUTER JOIN vt2 ON json_extract(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt2.c0 END, vt2.c0) WHERE (((CAST(vt2.c0 AS TEXT)) BETWEEN (x'') AND (UNICODE(vt2.c0)))) UNION SELECT DISTINCT vt1.c0, vt2.c0 FROM vt1 FULL OUTER JOIN vt2 ON json_extract(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt2.c0 END, vt2.c0) WHERE ((NOT (((CAST(vt2.c0 AS TEXT)) BETWEEN (x'') AND (UNICODE(vt2.c0)))))) UNION SELECT DISTINCT vt1.c0, vt2.c0 FROM vt1 FULL OUTER JOIN vt2 ON json_extract(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt2.c0 END, vt2.c0) WHERE (((((CAST(vt2.c0 AS TEXT)) BETWEEN (x'') AND (UNICODE(vt2.c0)))) ISNULL));
SELECT DISTINCT vt1.c0, vt2.c0 FROM vt1 FULL OUTER JOIN vt2 ON json_extract(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt2.c0 END, vt2.c0);
SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT vt2.c0 FROM vt2 WHERE (ABS(DISTINCT '-920328998')) GROUP BY vt2.c0 UNION SELECT ALL vt2.c0 FROM vt2 WHERE ((NOT (ABS(DISTINCT '-920328998')))) GROUP BY vt2.c0 UNION SELECT vt2.c0 FROM vt2 WHERE (((ABS(DISTINCT '-920328998')) ISNULL)) GROUP BY vt2.c0;
SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT vt0.c0, vt2.c0, vt0.c1, vt1.c0 FROM vt1, vt2, vt0 GROUP BY vt0.c0, vt2.c0, vt0.c1, vt1.c0;
SELECT vt0.c0, vt2.c0, vt0.c1, vt1.c0 FROM vt1, vt2, vt0 GROUP BY vt0.c0, vt2.c0, vt0.c1, vt1.c0 HAVING ((((COUNT(*))AND(((TOTAL(vt0.c1)) NOT BETWEEN (vt1.c0) AND (MAX(COUNT(AVG(vt2.c0))))))))AND((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((AVG(COUNT(*))))))) UNION ALL SELECT ALL vt0.c0, vt2.c0, vt0.c1, vt1.c0 FROM vt1, vt2, vt0 GROUP BY vt0.c0, vt2.c0, vt0.c1, vt1.c0 HAVING (NOT (((((COUNT(*))AND(((TOTAL(vt0.c1)) NOT BETWEEN (vt1.c0) AND (MAX(COUNT(AVG(vt2.c0))))))))AND((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((AVG(COUNT(*))))))))) UNION ALL SELECT ALL vt0.c0, vt2.c0, vt0.c1, vt1.c0 FROM vt1, vt2, vt0 GROUP BY vt0.c0, vt2.c0, vt0.c1, vt1.c0 HAVING ((((((COUNT(*))AND(((TOTAL(vt0.c1)) NOT BETWEEN (vt1.c0) AND (MAX(COUNT(AVG(vt2.c0))))))))AND((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((AVG(COUNT(*)))))))) ISNULL);
SELECT * FROM vt1;
SELECT * FROM vt1 WHERE (((((vt1.c0)>=(vt1.c0))) NOTNULL)) UNION ALL SELECT ALL * FROM vt1 WHERE ((NOT (((((vt1.c0)>=(vt1.c0))) NOTNULL)))) UNION ALL SELECT * FROM vt1 WHERE (((((((vt1.c0)>=(vt1.c0))) NOTNULL)) ISNULL));
SELECT * FROM vt1;
SELECT DISTINCT * FROM vt0, vt1;
SELECT DISTINCT * FROM vt0, vt1 WHERE (((vt0.c0)!=(342251872 COLLATE RTRIM))) UNION SELECT DISTINCT * FROM vt0, vt1 WHERE ((NOT (((vt0.c0)!=(342251872 COLLATE RTRIM))))) UNION SELECT DISTINCT * FROM vt0, vt1 WHERE (((((vt0.c0)<>(342251872 COLLATE RTRIM))) ISNULL));
SELECT DISTINCT * FROM vt0, vt1;
SELECT vt1.c0 FROM vt0, vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt0, vt1 WHERE (((((((((vt1.c0 COLLATE RTRIM)OR(STRFTIME(vt0.c0, vt1.c0, vt0.c1))))OR((((vt1.c0))<=((vt0.c1))))))AND(('0.3728781567809647' IN ()))))AND(x''))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt0, vt1 WHERE ((NOT (((((((((vt1.c0 COLLATE RTRIM)OR(STRFTIME(vt0.c0, vt1.c0, vt0.c1))))OR((((vt1.c0))<=((vt0.c1))))))AND(('0.3728781567809647' IN ()))))AND(x''))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt0, vt1 WHERE (((((((((((vt1.c0 COLLATE RTRIM)OR(STRFTIME(vt0.c0, vt1.c0, vt0.c1))))OR((((vt1.c0))<=((vt0.c1))))))AND(('0.3728781567809647' IN ()))))AND(x''))) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt0, vt1 GROUP BY vt1.c0;
SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING ((GROUP_CONCAT(vt2.c0)) IS TRUE) UNION ALL SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING (NOT (((GROUP_CONCAT(vt2.c0)) IS TRUE))) UNION ALL SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING ((((GROUP_CONCAT(vt2.c0)) IS TRUE)) ISNULL);
SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING ((GROUP_CONCAT(vt2.c0)) IS TRUE) UNION ALL SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING (NOT (((GROUP_CONCAT(vt2.c0)) IS TRUE))) UNION ALL SELECT vt2.c0 FROM vt2 GROUP BY vt2.c0 HAVING ((((GROUP_CONCAT(vt2.c0)) IS TRUE)) ISNULL);
SELECT ALL vt2.c0 FROM vt2 GROUP BY vt2.c0;
SELECT ALL * FROM vt2;
SELECT ALL * FROM vt2 NOT INDEXED WHERE (0.6153946557521072) UNION ALL SELECT ALL * FROM vt2 WHERE ((NOT (0.6153946557521072))) UNION ALL SELECT ALL * FROM vt2 WHERE (((0.6153946557521072) ISNULL));
SELECT ALL * FROM vt2;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE ('') UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (''))) UNION SELECT DISTINCT * FROM vt1 WHERE ((('') ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT ALL vt1.c0, vt2.c0, vt0.c1 FROM vt0, vt1, vt2 GROUP BY vt1.c0, vt2.c0, vt0.c1;
SELECT vt1.c0, vt2.c0, vt0.c1 FROM vt0, vt1, vt2 WHERE (CAST(vt0.c1 AS REAL) COLLATE RTRIM) GROUP BY vt1.c0, vt2.c0, vt0.c1 UNION SELECT vt1.c0, vt2.c0, vt0.c1 FROM vt0, vt1, vt2 WHERE ((NOT (CAST(vt0.c1 AS REAL) COLLATE RTRIM))) GROUP BY vt1.c0, vt2.c0, vt0.c1 UNION SELECT vt1.c0, vt2.c0, vt0.c1 FROM vt0, vt1, vt2 WHERE (((CAST(vt0.c1 AS REAL) COLLATE RTRIM) ISNULL)) GROUP BY vt1.c0, vt2.c0, vt0.c1;
SELECT ALL vt1.c0, vt2.c0, vt0.c1 FROM vt0, vt1, vt2 GROUP BY vt1.c0, vt2.c0, vt0.c1;
SELECT vt0.c1 FROM vt2, vt0 GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt2, vt0 GROUP BY vt0.c1 HAVING x'' UNION ALL SELECT vt0.c1 FROM vt2, vt0 GROUP BY vt0.c1 HAVING (NOT (x'')) UNION ALL SELECT vt0.c1 FROM vt2, vt0 GROUP BY vt0.c1 HAVING ((x'') ISNULL);
SELECT vt0.c1 FROM vt2, vt0 GROUP BY vt0.c1;
SELECT ALL vt0.c1 FROM vt2, vt0 GROUP BY vt0.c1 HAVING x'' UNION ALL SELECT vt0.c1 FROM vt2, vt0 GROUP BY vt0.c1 HAVING (NOT (x'')) UNION ALL SELECT vt0.c1 FROM vt2, vt0 GROUP BY vt0.c1 HAVING ((x'') ISNULL);
SELECT vt0.c1 FROM vt2, vt0 GROUP BY vt0.c1;
SELECT ALL * FROM vt1, vt0, vt2;
SELECT * FROM vt1, vt0, vt2 WHERE ((((vt2.c0) NOT NULL) IN ())) UNION ALL SELECT * FROM vt1, vt0, vt2 WHERE ((NOT ((((vt2.c0) NOT NULL) IN ())))) UNION ALL SELECT * FROM vt1, vt0, vt2 WHERE ((((((vt2.c0) NOT NULL) IN ())) ISNULL));
SELECT ALL * FROM vt1, vt0, vt2;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (vt1.c0) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (vt1.c0))) UNION SELECT DISTINCT * FROM vt1 WHERE (((vt1.c0) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT vt2.c0, vt0.c0, vt0.c1 FROM vt0, vt2 GROUP BY vt2.c0, vt0.c0, vt0.c1;
SELECT ALL vt2.c0, vt0.c0, vt0.c1 FROM vt0, vt2 WHERE ((NOT (((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0))))) GROUP BY vt2.c0, vt0.c0, vt0.c1 UNION SELECT ALL vt2.c0, vt0.c0, vt0.c1 FROM vt0, vt2 WHERE ((NOT ((NOT (((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0))))))) GROUP BY vt2.c0, vt0.c0, vt0.c1 UNION SELECT ALL vt2.c0, vt0.c0, vt0.c1 FROM vt0, vt2 WHERE ((((NOT (((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0))))) ISNULL)) GROUP BY vt2.c0, vt0.c0, vt0.c1;
SELECT vt2.c0, vt0.c0, vt0.c1 FROM vt0, vt2 GROUP BY vt2.c0, vt0.c0, vt0.c1;
SELECT ALL vt2.c0 FROM vt1, vt0 INNER JOIN vt2 ON (~ (((vt1.c0) BETWEEN (vt2.c0) AND (vt1.c0)))) GROUP BY vt2.c0;
SELECT ALL vt2.c0 FROM vt1, vt0 INNER JOIN vt2 ON (~ (((vt1.c0) BETWEEN (vt2.c0) AND (vt1.c0)))) GROUP BY vt2.c0 HAVING ((TOTAL(MIN(AVG(SUM(MIN(vt1.c0)))))) IS TRUE) UNION ALL SELECT ALL vt2.c0 FROM vt1, vt0 INNER JOIN vt2 ON (~ (((vt1.c0) BETWEEN (vt2.c0) AND (vt1.c0)))) GROUP BY vt2.c0 HAVING (NOT (((TOTAL(MIN(AVG(SUM(MIN(vt1.c0)))))) IS TRUE))) UNION ALL SELECT ALL vt2.c0 FROM vt1, vt0 INNER JOIN vt2 ON (~ (((vt1.c0) BETWEEN (vt2.c0) AND (vt1.c0)))) GROUP BY vt2.c0 HAVING ((((TOTAL(MIN(AVG(SUM(MIN(vt1.c0)))))) IS TRUE)) ISNULL);
SELECT ALL * FROM vt1 INNER JOIN vt0 ON ((x'') NOT BETWEEN ('0.7772576003531197') AND (CAST(vt1.c0 AS BLOB))) FULL OUTER JOIN vt2 ON (((vt1.c0, vt2.c0, vt2.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt2.c0)) AND ((vt2.c0, vt1.c0, vt0.c0))) COLLATE RTRIM;
SELECT * FROM vt1 INNER JOIN vt0 ON ((x'') NOT BETWEEN ('0.7772576003531197') AND (CAST(vt1.c0 AS BLOB))) FULL OUTER JOIN vt2 ON (((vt1.c0, vt2.c0, vt2.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt2.c0)) AND ((vt2.c0, vt1.c0, vt0.c0))) COLLATE RTRIM WHERE (vt2.c0) UNION ALL SELECT * FROM vt1 INNER JOIN vt0 ON ((x'') NOT BETWEEN ('0.7772576003531197') AND (CAST(vt1.c0 AS BLOB))) FULL OUTER JOIN vt2 ON (((vt1.c0, vt2.c0, vt2.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt2.c0)) AND ((vt2.c0, vt1.c0, vt0.c0))) COLLATE RTRIM WHERE ((NOT (vt2.c0))) UNION ALL SELECT * FROM vt1 INNER JOIN vt0 ON ((x'') NOT BETWEEN ('0.7772576003531197') AND (CAST(vt1.c0 AS BLOB))) FULL OUTER JOIN vt2 ON (((vt1.c0, vt2.c0, vt2.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt2.c0)) AND ((vt2.c0, vt1.c0, vt0.c0))) COLLATE RTRIM WHERE (((vt2.c0) ISNULL));
SELECT ALL * FROM vt1 INNER JOIN vt0 ON ((x'') NOT BETWEEN ('0.7772576003531197') AND (CAST(vt1.c0 AS BLOB))) FULL OUTER JOIN vt2 ON (((vt1.c0, vt2.c0, vt2.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt2.c0)) AND ((vt2.c0, vt1.c0, vt0.c0))) COLLATE RTRIM;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE (CAST((~ (vt1.c0)) AS INTEGER)) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT (CAST((~ (vt1.c0)) AS INTEGER)))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((CAST((~ (vt1.c0)) AS INTEGER)) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 WHERE (CAST(((((vt0.c1)OR(vt0.c0)))AND(vt0.c1)) AS INTEGER)) GROUP BY vt0.c1, vt0.c0 UNION SELECT vt0.c1, vt0.c0 FROM vt0 WHERE ((NOT (CAST(((((vt0.c1)OR(vt0.c0)))AND(vt0.c1)) AS INTEGER)))) GROUP BY vt0.c1, vt0.c0 UNION SELECT vt0.c1, vt0.c0 FROM vt0 WHERE (((CAST(((((vt0.c1)OR(vt0.c0)))AND(vt0.c1)) AS INTEGER)) ISNULL)) GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c1, vt0.c0 FROM vt0 GROUP BY vt0.c1, vt0.c0;
SELECT ALL vt0.c0, vt2.c0 FROM vt2, vt0 GROUP BY vt0.c0, vt2.c0;
SELECT vt0.c0, vt2.c0 FROM vt2, vt0 GROUP BY vt0.c0, vt2.c0 HAVING (((GROUP_CONCAT(vt0.c0), SUM(vt0.c0), COUNT(*)))<((AVG(COUNT(*)), CAST(TOTAL(TOTAL(GROUP_CONCAT(vt0.c0))) AS REAL), GROUP_CONCAT(COUNT(*))))) UNION ALL SELECT vt0.c0, vt2.c0 FROM vt2, vt0 GROUP BY vt0.c0, vt2.c0 HAVING (NOT ((((GROUP_CONCAT(vt0.c0), SUM(vt0.c0), COUNT(*)))<((AVG(COUNT(*)), CAST(TOTAL(TOTAL(GROUP_CONCAT(vt0.c0))) AS REAL), GROUP_CONCAT(COUNT(*))))))) UNION ALL SELECT vt0.c0, vt2.c0 FROM vt2, vt0 GROUP BY vt0.c0, vt2.c0 HAVING (((((GROUP_CONCAT(vt0.c0), SUM(vt0.c0), COUNT(*)))<((AVG(COUNT(*)), CAST(TOTAL(TOTAL(GROUP_CONCAT(vt0.c0))) AS REAL), GROUP_CONCAT(COUNT(*)))))) ISNULL);
SELECT ALL * FROM vt1;
SELECT ALL * FROM vt1 WHERE ((NOT (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))) UNION ALL SELECT ALL * FROM vt1 WHERE ((NOT ((NOT (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))))) UNION ALL SELECT * FROM vt1 WHERE ((((NOT (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))) ISNULL));
SELECT ALL * FROM vt1;
SELECT DISTINCT * FROM vt2;
SELECT DISTINCT * FROM vt2 WHERE ((((vt2.c0)) BETWEEN ((((vt2.c0) IS FALSE))) AND ((vt2.c0 COLLATE NOCASE)))) UNION SELECT DISTINCT * FROM vt2 WHERE ((NOT ((((vt2.c0)) BETWEEN ((((vt2.c0) IS FALSE))) AND ((vt2.c0 COLLATE NOCASE)))))) UNION SELECT DISTINCT * FROM vt2 WHERE ((((((vt2.c0)) BETWEEN ((((vt2.c0) IS FALSE))) AND ((vt2.c0 COLLATE NOCASE)))) ISNULL));
SELECT DISTINCT * FROM vt2;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE ((CASE WHEN vt0.c0 THEN vt0.c1 END IN ())) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT ((CASE WHEN vt0.c0 THEN vt0.c1 END IN ())))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((((CASE WHEN vt0.c0 THEN vt0.c1 END IN ())) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0, vt1.c0 FROM vt0 CROSS JOIN vt1 ON TRIM(DISTINCT (vt0.c1 IN ())) GROUP BY vt0.c0, vt1.c0;
SELECT vt0.c0, vt1.c0 FROM vt0 CROSS JOIN vt1 ON TRIM(DISTINCT (vt0.c1 IN ())) GROUP BY vt0.c0, vt1.c0 HAVING (COUNT(*) IN ()) UNION ALL SELECT vt0.c0, vt1.c0 FROM vt0 CROSS JOIN vt1 ON TRIM(DISTINCT (vt0.c1 IN ())) GROUP BY vt0.c0, vt1.c0 HAVING (NOT ((COUNT(*) IN ()))) UNION ALL SELECT vt0.c0, vt1.c0 FROM vt0 CROSS JOIN vt1 ON TRIM(DISTINCT (vt0.c1 IN ())) GROUP BY vt0.c0, vt1.c0 HAVING (((COUNT(*) IN ())) ISNULL);
SELECT ALL vt0.c0, vt1.c0 FROM vt0 CROSS JOIN vt1 ON TRIM(DISTINCT (vt0.c1 IN ())) GROUP BY vt0.c0, vt1.c0;
SELECT vt0.c0, vt1.c0 FROM vt0 CROSS JOIN vt1 ON TRIM(DISTINCT (vt0.c1 IN ())) GROUP BY vt0.c0, vt1.c0 HAVING (COUNT(*) IN ()) UNION ALL SELECT vt0.c0, vt1.c0 FROM vt0 CROSS JOIN vt1 ON TRIM(DISTINCT (vt0.c1 IN ())) GROUP BY vt0.c0, vt1.c0 HAVING (NOT ((COUNT(*) IN ()))) UNION ALL SELECT vt0.c0, vt1.c0 FROM vt0 CROSS JOIN vt1 ON TRIM(DISTINCT (vt0.c1 IN ())) GROUP BY vt0.c0, vt1.c0 HAVING (((COUNT(*) IN ())) ISNULL);
SELECT ALL vt0.c0, vt1.c0 FROM vt0 CROSS JOIN vt1 ON TRIM(DISTINCT (vt0.c1 IN ())) GROUP BY vt0.c0, vt1.c0;
SELECT ALL vt1.c0 FROM vt1;
SELECT vt1.c0 FROM vt1 WHERE (vt1.c0) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (vt1.c0))) UNION ALL SELECT vt1.c0 FROM vt1 WHERE (((vt1.c0) ISNULL));
SELECT ALL vt1.c0 FROM vt1;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((((vt0.c1)||(vt0.c0)))&((~ (vt0.c1))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (((((vt0.c1)||(vt0.c0)))&((~ (vt0.c1))))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((((((vt0.c1)||(vt0.c0)))&((~ (vt0.c1))))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT ALL vt0.c1, vt2.c0, vt0.c0, vt1.c0 FROM vt1, vt2, vt0 GROUP BY vt0.c1, vt2.c0, vt0.c0, vt1.c0;
SELECT vt0.c1, vt2.c0, vt0.c0, vt1.c0 FROM vt1, vt2, vt0 WHERE (CAST(vt2.c0 COLLATE RTRIM AS INTEGER)) GROUP BY vt0.c1, vt2.c0, vt0.c0, vt1.c0 UNION SELECT ALL vt0.c1, vt2.c0, vt0.c0, vt1.c0 FROM vt1, vt2, vt0 WHERE ((NOT (CAST(vt2.c0 COLLATE RTRIM AS INTEGER)))) GROUP BY vt0.c1, vt2.c0, vt0.c0, vt1.c0 UNION SELECT ALL vt0.c1, vt2.c0, vt0.c0, vt1.c0 FROM vt1, vt2, vt0 WHERE (((CAST(vt2.c0 COLLATE RTRIM AS INTEGER)) ISNULL)) GROUP BY vt0.c1, vt2.c0, vt0.c0, vt1.c0;
SELECT ALL vt0.c1, vt2.c0, vt0.c0, vt1.c0 FROM vt1, vt2, vt0 GROUP BY vt0.c1, vt2.c0, vt0.c0, vt1.c0;
SELECT ALL vt0.c0, vt2.c0, vt0.c1 FROM vt0 LEFT OUTER JOIN vt2 ON ((NULL) NOT BETWEEN (((((vt0.c0)AND(vt0.c0)))AND(vt0.c1))) AND (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) GROUP BY vt0.c0, vt2.c0, vt0.c1;
SELECT ALL vt0.c0, vt2.c0, vt0.c1 FROM vt0 LEFT OUTER JOIN vt2 ON ((NULL) NOT BETWEEN (((((vt0.c0)AND(vt0.c0)))AND(vt0.c1))) AND (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) GROUP BY vt0.c0, vt2.c0, vt0.c1 HAVING SUM(CAST(COUNT(*) AS TEXT)) UNION ALL SELECT ALL vt0.c0, vt2.c0, vt0.c1 FROM vt0 LEFT OUTER JOIN vt2 ON ((NULL) NOT BETWEEN (((((vt0.c0)AND(vt0.c0)))AND(vt0.c1))) AND (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) GROUP BY vt0.c0, vt2.c0, vt0.c1 HAVING (NOT (SUM(CAST(COUNT(*) AS TEXT)))) UNION ALL SELECT vt0.c0, vt2.c0, vt0.c1 FROM vt0 LEFT OUTER JOIN vt2 ON ((NULL) NOT BETWEEN (((((vt0.c0)AND(vt0.c0)))AND(vt0.c1))) AND (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) GROUP BY vt0.c0, vt2.c0, vt0.c1 HAVING ((SUM(CAST(COUNT(*) AS TEXT))) ISNULL);
SELECT ALL vt1.c0 FROM vt1;
SELECT ALL vt1.c0 FROM vt1 WHERE (((vt1.c0)<>(vt1.c0))) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (((vt1.c0)!=(vt1.c0))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE (((((vt1.c0)<>(vt1.c0))) ISNULL));
SELECT ALL vt1.c0 FROM vt1;
SELECT DISTINCT * FROM vt1, vt2 NOT INDEXED;
SELECT DISTINCT * FROM vt1, vt2 WHERE (((((((vt2.c0) NOT BETWEEN (vt2.c0) AND (vt2.c0)))AND(((vt2.c0)<<(NULL)))))AND(((((vt1.c0)AND(vt1.c0)))AND(x''))))) UNION SELECT DISTINCT * FROM vt1, vt2 WHERE ((NOT (((((((vt2.c0) NOT BETWEEN (vt2.c0) AND (vt2.c0)))AND(((vt2.c0)<<(NULL)))))AND(((((vt1.c0)AND(vt1.c0)))AND(x''))))))) UNION SELECT DISTINCT * FROM vt1, vt2 WHERE (((((((((vt2.c0) NOT BETWEEN (vt2.c0) AND (vt2.c0)))AND(((vt2.c0)<<(NULL)))))AND(((((vt1.c0)AND(vt1.c0)))AND(x''))))) ISNULL));
SELECT DISTINCT * FROM vt1, vt2 NOT INDEXED;
SELECT vt0.c0, vt1.c0 FROM vt2, vt0 RIGHT OUTER JOIN vt1 ON CASE ((vt0.c0) BETWEEN (NULL) AND (vt0.c0))  WHEN 'minutes' COLLATE BINARY THEN CASE '-984417717'  WHEN NULL THEN x'' END END GROUP BY vt0.c0, vt1.c0;
SELECT ALL vt0.c0, vt1.c0 FROM vt2, vt0 NOT INDEXED RIGHT OUTER JOIN vt1 ON CASE ((vt0.c0) BETWEEN (NULL) AND (vt0.c0))  WHEN 'minutes' COLLATE BINARY THEN CASE '-984417717'  WHEN NULL THEN x'' END END WHERE ((((((x''))=((vt1.c0)))) IS TRUE)) GROUP BY vt0.c0, vt1.c0 UNION SELECT vt0.c0, vt1.c0 FROM vt2, vt0 RIGHT OUTER JOIN vt1 ON CASE ((vt0.c0) BETWEEN (NULL) AND (vt0.c0))  WHEN 'minutes' COLLATE BINARY THEN CASE '-984417717'  WHEN NULL THEN x'' END END WHERE ((NOT ((((((x''))==((vt1.c0)))) IS TRUE)))) GROUP BY vt0.c0, vt1.c0 UNION SELECT ALL vt0.c0, vt1.c0 FROM vt2, vt0 RIGHT OUTER JOIN vt1 ON CASE ((vt0.c0) BETWEEN (NULL) AND (vt0.c0))  WHEN 'minutes' COLLATE BINARY THEN CASE '-984417717'  WHEN NULL THEN x'' END END WHERE ((((((((x''))=((vt1.c0)))) IS TRUE)) ISNULL)) GROUP BY vt0.c0, vt1.c0;
SELECT vt0.c0, vt1.c0 FROM vt2, vt0 RIGHT OUTER JOIN vt1 ON CASE ((vt0.c0) BETWEEN (NULL) AND (vt0.c0))  WHEN 'minutes' COLLATE BINARY THEN CASE '-984417717'  WHEN NULL THEN x'' END END GROUP BY vt0.c0, vt1.c0;
SELECT ALL vt1.c0, vt2.c0, vt0.c1, vt0.c0 FROM vt0, vt2, vt1 GROUP BY vt1.c0, vt2.c0, vt0.c1, vt0.c0;
SELECT vt1.c0, vt2.c0, vt0.c1, vt0.c0 FROM vt0, vt2, vt1 GROUP BY vt1.c0, vt2.c0, vt0.c1, vt0.c0 HAVING vt0.c0 UNION ALL SELECT ALL vt1.c0, vt2.c0, vt0.c1, vt0.c0 FROM vt0, vt2, vt1 GROUP BY vt1.c0, vt2.c0, vt0.c1, vt0.c0 HAVING (NOT (vt0.c0)) UNION ALL SELECT vt1.c0, vt2.c0, vt0.c1, vt0.c0 FROM vt0, vt2, vt1 GROUP BY vt1.c0, vt2.c0, vt0.c1, vt0.c0 HAVING ((vt0.c0) ISNULL);
SELECT ALL vt1.c0, vt2.c0, vt0.c1, vt0.c0 FROM vt0, vt2, vt1 GROUP BY vt1.c0, vt2.c0, vt0.c1, vt0.c0;
SELECT vt1.c0, vt2.c0, vt0.c1, vt0.c0 FROM vt0, vt2, vt1 GROUP BY vt1.c0, vt2.c0, vt0.c1, vt0.c0 HAVING vt0.c0 UNION ALL SELECT ALL vt1.c0, vt2.c0, vt0.c1, vt0.c0 FROM vt0, vt2, vt1 GROUP BY vt1.c0, vt2.c0, vt0.c1, vt0.c0 HAVING (NOT (vt0.c0)) UNION ALL SELECT vt1.c0, vt2.c0, vt0.c1, vt0.c0 FROM vt0, vt2, vt1 GROUP BY vt1.c0, vt2.c0, vt0.c1, vt0.c0 HAVING ((vt0.c0) ISNULL);
SELECT ALL vt1.c0, vt2.c0, vt0.c1, vt0.c0 FROM vt0, vt2, vt1 GROUP BY vt1.c0, vt2.c0, vt0.c1, vt0.c0;
