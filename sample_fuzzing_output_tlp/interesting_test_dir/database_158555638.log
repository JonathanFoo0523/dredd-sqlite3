-- Time: 2024/06/09 15:33:55
-- Database: database38
-- Database version: 3.40.0
-- seed value: 158555638
PRAGMA cache_size = 50000; -- 0ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA encoding = 'UTF-16be'; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts4(c0 UNINDEXED); -- 0ms;
END; -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
CREATE TEMPORARY VIEW  IF NOT EXISTS v0(c0) AS SELECT ALL CUME_DIST() OVER () FROM vt0 WHERE ((((NULL)OR(NULL)) IN (((('jsr.{,', -1.7976931348623157E308, 0.4378180963921887)) BETWEEN ((x'', '-1227698499', '-793954631')) AND ((NULL, '7q', 0.789953431622809)))))) LIMIT -1227698499; -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 779308605); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 208137836); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1887600973); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=446656970,5');\n; -- 0ms;
PRAGMA cell_size_check; -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
CREATE VIRTUAL TABLE vt1 USING fts4(c0 UNINDEXED, prefix=881); -- 1ms;
INSERT OR ROLLBACK INTO vt0(c0) VALUES ('-1227698499'); -- 0ms;
COMMIT; -- 0ms;
INSERT OR REPLACE INTO vt1(c0) VALUES ('캽JR*√'), (x''), (0.4417608851530265); -- 1ms;
REINDEX; -- 1ms;
CREATE TRIGGER IF NOT EXISTS tr2 INSTEAD OF UPDATE ON v0 BEGIN DELETE FROM vt1;END; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
PRAGMA shrink_memory; -- 0ms;
INSERT OR REPLACE INTO vt1(c0) VALUES (-631272791); -- 1ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (x'58e117d44bc9'), (0.7046750475784135), (NULL); -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', -2083642860);\n; -- 0ms;
INSERT INTO vt1(vt1) VALUES('merge=-1895292117,6');\n; -- 1ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
INSERT OR IGNORE INTO vt1(c0) VALUES (x'2292'); -- 0ms;
END TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO vt1(c0) VALUES (x''), ('vɚ'), (0.36101482498993265); -- 0ms;
INSERT OR IGNORE INTO vt1(c0) VALUES (x'a930'), (NULL), ('1479210255'); -- 0ms;
VACUUM; -- 1ms;
END TRANSACTION; -- 0ms;
INSERT OR REPLACE INTO vt0 VALUES (x''), ('7Q'), ('龙&9''[26uf'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('pgsz', '51018'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=0'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 1ms;
CREATE VIRTUAL TABLE rt0 USING rtree_i32(c0, c1, c2); -- 0ms;
ANALYZE; -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
CREATE TABLE IF NOT EXISTS t0 (c0 TEXT ); -- 1ms;
SELECT rtreecheck('rt0'); -- 0ms;
INSERT OR IGNORE INTO vt1(c0) VALUES (NULL), (NULL), (NULL); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 15); -- 0ms;
INSERT INTO vt1(vt1) VALUES('optimize'); -- 0ms;
INSERT OR ROLLBACK INTO vt1 VALUES (x'f0b1'), (0x6b649f99), ('Qb'), (NULL), ('2'); -- 7ms;
ALTER TABLE t0 RENAME TO t1; -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('crisismerge', 1529449847); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 0); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('automerge', 0); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('automerge', 11); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1340264259); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 1ms;
INSERT OR ABORT INTO t1(c0) VALUES (-2132759720); -- 0ms;
INSERT OR FAIL INTO rt0 VALUES ('0', 0.7244177136351526, '-1554952793'); -- 0ms;
INSERT OR ABORT INTO rt0(c2, c0, c1) VALUES (x'', '캽4', NULL); -- 0ms;
BEGIN  TRANSACTION; -- 3ms;
INSERT OR ABORT INTO rt0(c0, c1, c2) VALUES ('-2083642860', 0.034091585102060784, NULL); -- 0ms;
ANALYZE main; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA main.mmap_size = -7911530976275681664; -- 3ms;
UPDATE OR IGNORE vt1 SET (c0, c0, c0)=(-2132759720, 0.5323540676582474, x''); -- 0ms;
UPDATE rt0 SET c2=NULL; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1583760663); -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '5982'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('automerge', 5); -- 0ms;
INSERT INTO vt1(vt1) VALUES('optimize'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', -1554952793);\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 8); -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=-2020619249,9');\n; -- 1ms;
INSERT INTO vt1(vt1, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '60813'); -- 0ms;
INSERT INTO vt1(vt1) VALUES('integrity-check'); -- 0ms;
INSERT OR IGNORE INTO rt0(c2, c0) VALUES (x'd4d1', NULL), ('UHe\r-?', x'e239'), (NULL, x'f2717cf6'); -- 0ms;
ANALYZE main; -- 0ms;
DROP TABLE rt0; -- 1ms;
INSERT INTO vt1(vt1, rank) VALUES('crisismerge', 397231094); -- 0ms;
INSERT INTO vt1(vt1) VALUES('integrity-check'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt1(vt1) VALUES('rebuild'); -- 1ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (-494249640); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 14); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 7); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt1(vt1) VALUES('optimize'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
END; -- 0ms;
PRAGMA reverse_unordered_selects; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('merge', 1);\n; -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
INSERT INTO vt1(vt1) VALUES('optimize'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 7); -- 1ms;
INSERT INTO vt1(vt1, rank) VALUES('automerge', 9); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 132869831); -- 0ms;
INSERT INTO vt1(vt1) VALUES('automerge=12'); -- 0ms;
INSERT OR ROLLBACK INTO vt0(c0) VALUES (NULL), (x'da3c'), (NULL), (NULL), (0X6b649f99); -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=0'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt1(vt1) VALUES('integrity-check'); -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES (NULL), (0Xffffffffb3f98a50), (-1554952793); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 305115637); -- 0ms;
INSERT INTO vt1(vt1) VALUES('rebuild'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt1(vt1) VALUES('integrity-check'); -- 0ms;
REINDEX; -- 1ms;
ANALYZE v0; -- 0ms;
UPDATE OR IGNORE vt1 SET (c0, c0, c0)=(-4.9424964E8, NULL, 0.5904617076394303); -- 0ms;
ANALYZE; -- 1ms;
INSERT INTO vt1(vt1, rank) VALUES('crisismerge', 619026087); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('crisismerge', 1593440048); -- 0ms;
INSERT INTO vt1(vt1) VALUES('merge=-2053989040,11');\n; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('usermerge', 8); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', 613523362);\n; -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES ('-1162139934'), (0.8794352902589195), (x'cac5'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE HEX((((NULL, 'ɚ,gfw8W', 'Jl')) NOT BETWEEN ((x'38a1411f5c8e', 1645049391, -4.9424964E8)) AND ((NULL, NULL, NULL)))); -- 0ms;
INSERT INTO vt1(vt1) VALUES('rebuild'); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('pgsz', '19210'); -- 0ms;
INSERT INTO vt1(vt1) VALUES('automerge=0'); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
DELETE FROM vt1 WHERE ((vt1.c0 COLLATE BINARY)||(CASE x''  WHEN vt1.c0 THEN vt1.c0 END)); -- 0ms;
INSERT INTO vt1(vt1) VALUES('merge=589549559,2');\n; -- 1ms;
INSERT INTO vt1(vt1, rank) VALUES('usermerge', 8); -- 0ms;
INSERT INTO vt1(vt1) VALUES('integrity-check'); -- 0ms;
ANALYZE v0; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('automerge', 7); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('usermerge', 12); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('crisismerge', 2938306); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
END TRANSACTION; -- 1ms;
COMMIT TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT ALL vt1.c0, vt0.c0, v0.c0 FROM vt0, v0, vt1;
SELECT ALL vt1.c0, vt0.c0, v0.c0 FROM vt0, v0, vt1 WHERE (vt1.c0) UNION ALL SELECT vt1.c0, vt0.c0, v0.c0 FROM vt0, v0, vt1 WHERE ((NOT (vt1.c0))) UNION ALL SELECT ALL vt1.c0, vt0.c0, v0.c0 FROM vt0, v0, vt1 WHERE (((vt1.c0) ISNULL));
SELECT ALL vt1.c0, vt0.c0, v0.c0 FROM vt0, v0, vt1;
SELECT DISTINCT * FROM vt1, v0, vt0;
SELECT DISTINCT * FROM vt1, v0, vt0 WHERE (((CAST(vt0.c0 AS INTEGER))<=(((vt0.c0) BETWEEN (v0.c0) AND (vt1.c0))))) UNION SELECT DISTINCT * FROM vt1, v0, vt0 WHERE ((NOT (((CAST(vt0.c0 AS INTEGER))<=(((vt0.c0) BETWEEN (v0.c0) AND (vt1.c0))))))) UNION SELECT DISTINCT * FROM vt1, v0, vt0 WHERE (((((CAST(vt0.c0 AS INTEGER))<=(((vt0.c0) BETWEEN (v0.c0) AND (vt1.c0))))) ISNULL));
SELECT DISTINCT * FROM vt1, v0, vt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE ('T빚ࡽ_') GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT ('T빚ࡽ_'))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((('T빚ࡽ_') ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0, v0.c0, vt1.c0 FROM v0, vt0, vt1 GROUP BY vt0.c0, v0.c0, vt1.c0;
SELECT vt0.c0, v0.c0, vt1.c0 FROM v0, vt0, vt1 GROUP BY vt0.c0, v0.c0, vt1.c0 HAVING CASE WHEN vt1.c0 THEN MIN(MIN(vt0.c0)) END UNION ALL SELECT vt0.c0, v0.c0, vt1.c0 FROM v0, vt0, vt1 GROUP BY vt0.c0, v0.c0, vt1.c0 HAVING (NOT (CASE WHEN vt1.c0 THEN MIN(MIN(vt0.c0)) END)) UNION ALL SELECT ALL vt0.c0, v0.c0, vt1.c0 FROM v0 NOT INDEXED, vt0, vt1 GROUP BY vt0.c0, v0.c0, vt1.c0 HAVING ((CASE WHEN vt1.c0 THEN MIN(MIN(vt0.c0)) END) ISNULL);
SELECT * FROM v0;
SELECT ALL * FROM v0 WHERE (((v0.c0)<=(v0.c0)) COLLATE NOCASE) UNION ALL SELECT ALL * FROM v0 WHERE ((NOT (((v0.c0)<=(v0.c0)) COLLATE NOCASE))) UNION ALL SELECT * FROM v0 WHERE (((((v0.c0)<=(v0.c0)) COLLATE NOCASE) ISNULL));
SELECT * FROM v0;
SELECT DISTINCT * FROM v0, vt0, vt1;
SELECT DISTINCT * FROM v0, vt0, vt1 WHERE (((((vt1.c0 COLLATE BINARY)OR(((vt1.c0)<>(x'')))))AND((((vt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) UNION SELECT DISTINCT * FROM v0, vt0, vt1 WHERE ((NOT (((((vt1.c0 COLLATE BINARY)OR(((vt1.c0)<>(x'')))))AND((((vt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))))) UNION SELECT DISTINCT * FROM v0, vt0, vt1 WHERE (((((((vt1.c0 COLLATE BINARY)OR(((vt1.c0)!=(x'')))))AND((((vt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) ISNULL));
SELECT DISTINCT * FROM v0, vt0, vt1;
SELECT vt0.c0 FROM vt0, v0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, v0 WHERE (CAST(-2.05398904E9 AS REAL)) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0, v0 WHERE ((NOT (CAST(-2.05398904E9 AS REAL)))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0, v0 WHERE (((CAST(-2.05398904E9 AS REAL)) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0, v0 GROUP BY vt0.c0;
SELECT ALL vt1.c0 FROM vt0 NATURAL JOIN vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt0 NATURAL JOIN vt1 GROUP BY vt1.c0 HAVING (GROUP_CONCAT(COUNT(COUNT(MAX(vt1.c0)))) IN ()) UNION ALL SELECT ALL vt1.c0 FROM vt0 NATURAL JOIN vt1 GROUP BY vt1.c0 HAVING (NOT ((GROUP_CONCAT(COUNT(COUNT(MAX(vt1.c0)))) IN ()))) UNION ALL SELECT vt1.c0 FROM vt0 NATURAL JOIN vt1 GROUP BY vt1.c0 HAVING (((GROUP_CONCAT(COUNT(COUNT(MAX(vt1.c0)))) IN ())) ISNULL);
SELECT ALL vt1.c0 FROM vt0 NATURAL JOIN vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt0 NATURAL JOIN vt1 GROUP BY vt1.c0 HAVING (GROUP_CONCAT(COUNT(COUNT(MAX(vt1.c0)))) IN ()) UNION ALL SELECT ALL vt1.c0 FROM vt0 NATURAL JOIN vt1 GROUP BY vt1.c0 HAVING (NOT ((GROUP_CONCAT(COUNT(COUNT(MAX(vt1.c0)))) IN ()))) UNION ALL SELECT vt1.c0 FROM vt0 NATURAL JOIN vt1 GROUP BY vt1.c0 HAVING (((GROUP_CONCAT(COUNT(COUNT(MAX(vt1.c0)))) IN ())) ISNULL);
SELECT ALL vt1.c0 FROM vt0 NATURAL JOIN vt1 GROUP BY vt1.c0;
SELECT * FROM v0, vt0, vt1;
SELECT * FROM v0, vt0, vt1 WHERE ('-1287696934') UNION ALL SELECT * FROM v0, vt0, vt1 WHERE ((NOT ('-1287696934'))) UNION ALL SELECT * FROM v0, vt0, vt1 WHERE ((('-1287696934') ISNULL));
SELECT * FROM v0, vt0, vt1;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (((v0.c0) NOT BETWEEN (((v0.c0)>=(v0.c0))) AND (v0.c0 COLLATE BINARY))) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (((v0.c0) NOT BETWEEN (((v0.c0)>=(v0.c0))) AND (v0.c0 COLLATE BINARY))))) UNION SELECT DISTINCT * FROM v0 WHERE (((((v0.c0) NOT BETWEEN (((v0.c0)>=(v0.c0))) AND (v0.c0 COLLATE BINARY))) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT vt1.c0, vt0.c0, v0.c0 FROM vt1 INNER JOIN v0 ON ((CAST(vt1.c0 AS INTEGER)) BETWEEN (((vt0.c0)+(v0.c0))) AND (((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))) FULL OUTER JOIN vt0 ON LOWER(DISTINCT vt0.c0 COLLATE NOCASE) GROUP BY vt1.c0, vt0.c0, v0.c0;
SELECT ALL vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0 HAVING CASE WHEN COUNT(COUNT(SUM(COUNT(vt1.c0)))) THEN MIN(vt1.c0) END UNION ALL SELECT vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0 HAVING (NOT (CASE WHEN COUNT(COUNT(SUM(COUNT(vt1.c0)))) THEN MIN(vt1.c0) END)) UNION ALL SELECT vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0 HAVING ((CASE WHEN COUNT(COUNT(SUM(COUNT(vt1.c0)))) THEN MIN(vt1.c0) END) ISNULL);
SELECT ALL * FROM v0;
SELECT ALL * FROM v0 WHERE ((((((v0.c0)OR(v0.c0)))OR(v0.c0)) IN ())) UNION ALL SELECT * FROM v0 WHERE ((NOT ((((((v0.c0)OR(v0.c0)))OR(v0.c0)) IN ())))) UNION ALL SELECT ALL * FROM v0 WHERE ((((((((v0.c0)OR(v0.c0)))OR(v0.c0)) IN ())) ISNULL));
SELECT ALL * FROM v0;
SELECT DISTINCT vt1.c0, vt0.c0 FROM vt1, v0, vt0;
SELECT DISTINCT vt1.c0, vt0.c0 FROM vt1, v0, vt0 WHERE (vt0.c0) UNION SELECT DISTINCT vt1.c0, vt0.c0 FROM vt1, v0, vt0 WHERE ((NOT (vt0.c0))) UNION SELECT DISTINCT vt1.c0, vt0.c0 FROM vt1, v0, vt0 WHERE (((vt0.c0) ISNULL));
SELECT DISTINCT vt1.c0, vt0.c0 FROM vt1, v0, vt0;
SELECT vt1.c0, vt0.c0, v0.c0 FROM vt0 RIGHT OUTER JOIN vt1 ON ((((vt1.c0)) BETWEEN ((v0.c0)) AND ((vt0.c0))) IN (UNLIKELY(vt0.c0))) CROSS JOIN v0 ON ((((vt1.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))||((~ (vt1.c0)))) GROUP BY vt1.c0, vt0.c0, v0.c0;
SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0;
SELECT vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0 HAVING SUM(SUM(v0.c0)) UNION ALL SELECT vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0 HAVING (NOT (SUM(SUM(v0.c0)))) UNION ALL SELECT vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0 HAVING ((SUM(SUM(v0.c0))) ISNULL);
SELECT ALL * FROM v0;
SELECT ALL * FROM v0 WHERE (((((((v0.c0)OR(v0.c0)))OR(v0.c0)))IS NOT(((v0.c0) NOTNULL)))) UNION ALL SELECT ALL * FROM v0 WHERE ((NOT (((((((v0.c0)OR(v0.c0)))OR(v0.c0)))IS NOT(((v0.c0) NOTNULL)))))) UNION ALL SELECT ALL * FROM v0 WHERE (((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))IS NOT(((v0.c0) NOTNULL)))) ISNULL));
SELECT ALL * FROM v0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE ((v0.c0 IN ()) COLLATE BINARY) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT ((v0.c0 IN ()) COLLATE BINARY))) UNION SELECT DISTINCT * FROM v0 WHERE ((((v0.c0 IN ()) COLLATE BINARY) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT v0.c0, vt0.c0, vt1.c0 FROM vt1 INNER JOIN vt0 ON v0.c0 LEFT OUTER JOIN v0 ON (((v0.c0 IN ())) NOT NULL) GROUP BY v0.c0, vt0.c0, vt1.c0;
SELECT v0.c0, vt0.c0, vt1.c0 FROM vt1 INNER JOIN vt0 ON v0.c0 LEFT OUTER JOIN v0 ON (((v0.c0 IN ())) NOT NULL) WHERE (CASE WHEN vt1.c0 THEN load_extension(vt0.c0, v0.c0) WHEN (((vt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((NULL))) THEN vt1.c0 WHEN (vt0.c0 IN ()) THEN v0.c0 ELSE (((vt1.c0, v0.c0, vt1.c0))<((v0.c0, vt0.c0, vt0.c0))) END) GROUP BY v0.c0, vt0.c0, vt1.c0 UNION SELECT v0.c0, vt0.c0, vt1.c0 FROM vt1 INNER JOIN vt0 ON v0.c0 LEFT OUTER JOIN v0 ON (((v0.c0 IN ())) NOT NULL) WHERE ((NOT (CASE WHEN vt1.c0 THEN load_extension(vt0.c0, v0.c0) WHEN (((vt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((NULL))) THEN vt1.c0 WHEN (vt0.c0 IN ()) THEN v0.c0 ELSE (((vt1.c0, v0.c0, vt1.c0))<((v0.c0, vt0.c0, vt0.c0))) END))) GROUP BY v0.c0, vt0.c0, vt1.c0 UNION SELECT ALL v0.c0, vt0.c0, vt1.c0 FROM vt1 INNER JOIN vt0 ON v0.c0 LEFT OUTER JOIN v0 ON (((v0.c0 IN ())) NOT NULL) WHERE (((CASE WHEN vt1.c0 THEN load_extension(vt0.c0, v0.c0) WHEN (((vt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((NULL))) THEN vt1.c0 WHEN (vt0.c0 IN ()) THEN v0.c0 ELSE (((vt1.c0, v0.c0, vt1.c0))<((v0.c0, vt0.c0, vt0.c0))) END) ISNULL)) GROUP BY v0.c0, vt0.c0, vt1.c0;
SELECT v0.c0, vt0.c0, vt1.c0 FROM vt1 INNER JOIN vt0 ON v0.c0 LEFT OUTER JOIN v0 ON (((v0.c0 IN ())) NOT NULL) GROUP BY v0.c0, vt0.c0, vt1.c0;
SELECT ALL v0.c0 FROM v0, vt0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0, vt0 GROUP BY v0.c0 HAVING CAST(COUNT(*) AS BLOB) UNION ALL SELECT v0.c0 FROM v0, vt0 GROUP BY v0.c0 HAVING (NOT (CAST(COUNT(*) AS BLOB))) UNION ALL SELECT v0.c0 FROM v0, vt0 GROUP BY v0.c0 HAVING ((CAST(COUNT(*) AS BLOB)) ISNULL);
SELECT ALL v0.c0 FROM v0, vt0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0, vt0 GROUP BY v0.c0 HAVING CAST(COUNT(*) AS BLOB) UNION ALL SELECT v0.c0 FROM v0, vt0 GROUP BY v0.c0 HAVING (NOT (CAST(COUNT(*) AS BLOB))) UNION ALL SELECT v0.c0 FROM v0, vt0 GROUP BY v0.c0 HAVING ((CAST(COUNT(*) AS BLOB)) ISNULL);
SELECT ALL v0.c0 FROM v0, vt0 GROUP BY v0.c0;
SELECT ALL * FROM vt1;
SELECT ALL * FROM vt1 WHERE ((((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END, ((vt1.c0) IS TRUE), CASE WHEN vt1.c0 THEN vt1.c0 END))>=((vt1.c0 COLLATE NOCASE, vt1.c0 COLLATE BINARY, UNICODE(vt1.c0))))) UNION ALL SELECT ALL * FROM vt1 WHERE ((NOT ((((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END, ((vt1.c0) IS TRUE), CASE WHEN vt1.c0 THEN vt1.c0 END))>=((vt1.c0 COLLATE NOCASE, vt1.c0 COLLATE BINARY, UNICODE(vt1.c0))))))) UNION ALL SELECT ALL * FROM vt1 WHERE ((((((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END, ((vt1.c0) IS TRUE), CASE WHEN vt1.c0 THEN vt1.c0 END))>=((vt1.c0 COLLATE NOCASE, vt1.c0 COLLATE BINARY, UNICODE(vt1.c0))))) ISNULL));
SELECT ALL * FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE (CAST(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) AS TEXT)) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT (CAST(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) AS TEXT)))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((CAST(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) AS TEXT)) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE ((((CAST(vt1.c0 AS BLOB), CAST(vt1.c0 AS NUMERIC), ((vt1.c0) IS FALSE)))<(('%[,r*⛢', ((vt1.c0) IS TRUE), (~ (vt1.c0)))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT ((((CAST(vt1.c0 AS BLOB), CAST(vt1.c0 AS NUMERIC), ((vt1.c0) IS FALSE)))<(('%[,r*⛢', ((vt1.c0) IS TRUE), (~ (vt1.c0)))))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((((((CAST(vt1.c0 AS BLOB), CAST(vt1.c0 AS NUMERIC), ((vt1.c0) IS FALSE)))<(('%[,r*⛢', ((vt1.c0) IS TRUE), (~ (vt1.c0)))))) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1, v0, vt0 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1, v0, vt0 GROUP BY vt1.c0 HAVING ((COUNT(GROUP_CONCAT(SUM(COUNT(*)))))<(GROUP_CONCAT(MIN(vt1.c0)))) UNION ALL SELECT vt1.c0 FROM vt1, v0, vt0 GROUP BY vt1.c0 HAVING (NOT (((COUNT(GROUP_CONCAT(SUM(COUNT(*)))))<(GROUP_CONCAT(MIN(vt1.c0)))))) UNION ALL SELECT ALL vt1.c0 FROM vt1, v0, vt0 GROUP BY vt1.c0 HAVING ((((COUNT(GROUP_CONCAT(SUM(COUNT(*)))))<(GROUP_CONCAT(MIN(vt1.c0))))) ISNULL);
SELECT ALL vt1.c0, v0.c0, vt0.c0 FROM vt0, vt1 CROSS JOIN v0 ON (NOT (((v0.c0)OR(vt0.c0))));
SELECT ALL vt1.c0, v0.c0, vt0.c0 FROM vt0, vt1 CROSS JOIN v0 ON (NOT (((v0.c0)OR(vt0.c0)))) WHERE (x'a5d2') UNION ALL SELECT ALL vt1.c0, v0.c0, vt0.c0 FROM vt0, vt1 CROSS JOIN v0 ON (NOT (((v0.c0)OR(vt0.c0)))) WHERE ((NOT (x'a5d2'))) UNION ALL SELECT ALL vt1.c0, v0.c0, vt0.c0 FROM vt0, vt1 CROSS JOIN v0 ON (NOT (((v0.c0)OR(vt0.c0)))) WHERE (((x'a5d2') ISNULL));
SELECT ALL vt1.c0, v0.c0, vt0.c0 FROM vt0, vt1 CROSS JOIN v0 ON (NOT (((v0.c0)OR(vt0.c0))));
SELECT DISTINCT v0.c0 FROM v0, vt0;
SELECT DISTINCT v0.c0 FROM v0, vt0 WHERE ((- (((vt0.c0)||(vt0.c0))))) UNION SELECT DISTINCT v0.c0 FROM v0, vt0 WHERE ((NOT ((- (((vt0.c0)||(vt0.c0))))))) UNION SELECT DISTINCT v0.c0 FROM v0 NOT INDEXED, vt0 WHERE ((((- (((vt0.c0)||(vt0.c0))))) ISNULL));
SELECT DISTINCT v0.c0 FROM v0, vt0;
SELECT v0.c0, vt1.c0 FROM vt1, vt0, v0 GROUP BY v0.c0, vt1.c0;
SELECT v0.c0, vt1.c0 FROM vt1, vt0, v0 WHERE (1747909162) GROUP BY v0.c0, vt1.c0 UNION SELECT v0.c0, vt1.c0 FROM vt1, vt0, v0 WHERE ((NOT (1747909162))) GROUP BY v0.c0, vt1.c0 UNION SELECT v0.c0, vt1.c0 FROM vt1, vt0, v0 WHERE (((1747909162) ISNULL)) GROUP BY v0.c0, vt1.c0;
SELECT v0.c0, vt1.c0 FROM vt1, vt0, v0 GROUP BY v0.c0, vt1.c0;
SELECT ALL vt1.c0, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0;
SELECT vt1.c0, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0 HAVING MIN(MAX(MAX(vt1.c0))) UNION ALL SELECT ALL vt1.c0, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0 HAVING (NOT (MIN(MAX(MAX(vt1.c0))))) UNION ALL SELECT vt1.c0, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0 HAVING ((MIN(MAX(MAX(vt1.c0)))) ISNULL);
SELECT ALL v0.c0 FROM v0;
SELECT v0.c0 FROM v0 WHERE (CASE ((NULL) IS TRUE)  WHEN ((v0.c0) NOTNULL) THEN (NOT (v0.c0)) WHEN CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END THEN ((v0.c0)IS(v0.c0)) WHEN (v0.c0 IN ()) THEN NULL ELSE '>E' END) UNION ALL SELECT v0.c0 FROM v0 WHERE ((NOT (CASE ((NULL) IS TRUE)  WHEN ((v0.c0) NOTNULL) THEN (NOT (v0.c0)) WHEN CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END THEN ((v0.c0)IS(v0.c0)) WHEN (v0.c0 IN ()) THEN NULL ELSE '>E' END))) UNION ALL SELECT v0.c0 FROM v0 WHERE (((CASE ((NULL) IS TRUE)  WHEN ((v0.c0) NOTNULL) THEN (NOT (v0.c0)) WHEN CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END THEN ((v0.c0)IS(v0.c0)) WHEN (v0.c0 IN ()) THEN NULL ELSE '>E' END) ISNULL));
SELECT ALL v0.c0 FROM v0;
SELECT DISTINCT * FROM vt0, v0;
SELECT DISTINCT * FROM vt0, v0 WHERE (((((v0.c0) ISNULL)) NOT BETWEEN (0x2323cff7 COLLATE BINARY) AND (((x'c103')OR(vt0.c0))))) UNION SELECT DISTINCT * FROM vt0, v0 WHERE ((NOT (((((v0.c0) ISNULL)) NOT BETWEEN (0X2323cff7 COLLATE BINARY) AND (((x'c103')OR(vt0.c0))))))) UNION SELECT DISTINCT * FROM vt0, v0 WHERE (((((((v0.c0) ISNULL)) NOT BETWEEN (0X2323cff7 COLLATE BINARY) AND (((x'c103')OR(vt0.c0))))) ISNULL));
SELECT DISTINCT * FROM vt0, v0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE (CASE ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))  WHEN ((vt1.c0)%(vt1.c0)) THEN 0.7244177136351526 WHEN vt1.c0 THEN (vt1.c0 IN ()) WHEN ((vt1.c0) IS TRUE) THEN (NOT (vt1.c0)) ELSE (vt1.c0 IN (vt1.c0, vt1.c0)) END) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (CASE ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))  WHEN ((vt1.c0)%(vt1.c0)) THEN 0.7244177136351526 WHEN vt1.c0 THEN (vt1.c0 IN ()) WHEN ((vt1.c0) IS TRUE) THEN (NOT (vt1.c0)) ELSE (vt1.c0 IN (vt1.c0, vt1.c0)) END))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE (((CASE ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))  WHEN ((vt1.c0)%(vt1.c0)) THEN 0.7244177136351526 WHEN vt1.c0 THEN (vt1.c0 IN ()) WHEN ((vt1.c0) IS TRUE) THEN (NOT (vt1.c0)) ELSE (vt1.c0 IN (vt1.c0, vt1.c0)) END) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING AVG(MIN(v0.c0)) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (AVG(MIN(v0.c0)))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((AVG(MIN(v0.c0))) ISNULL);
SELECT * FROM vt1, v0, vt0;
SELECT ALL * FROM vt1, v0, vt0 WHERE (((((vt0.c0)==(vt1.c0))) NOT BETWEEN (((v0.c0) BETWEEN (vt0.c0) AND (v0.c0))) AND (vt0.c0 COLLATE NOCASE))) UNION ALL SELECT ALL * FROM vt1, v0, vt0 WHERE ((NOT (((((vt0.c0)==(vt1.c0))) NOT BETWEEN (((v0.c0) BETWEEN (vt0.c0) AND (v0.c0))) AND (vt0.c0 COLLATE NOCASE))))) UNION ALL SELECT * FROM vt1, v0, vt0 WHERE (((((((vt0.c0)=(vt1.c0))) NOT BETWEEN (((v0.c0) BETWEEN (vt0.c0) AND (v0.c0))) AND (vt0.c0 COLLATE NOCASE))) ISNULL));
SELECT * FROM vt1, v0, vt0;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (CAST('' COLLATE NOCASE AS INTEGER)) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (CAST('' COLLATE NOCASE AS INTEGER)))) UNION SELECT DISTINCT * FROM vt1 WHERE (((CAST('' COLLATE NOCASE AS INTEGER)) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT ALL v0.c0, vt0.c0, vt1.c0 FROM vt1, v0, vt0 GROUP BY v0.c0, vt0.c0, vt1.c0;
SELECT ALL v0.c0, vt0.c0, vt1.c0 FROM vt1, v0, vt0 WHERE (CAST(((vt1.c0)&(v0.c0)) AS BLOB)) GROUP BY v0.c0, vt0.c0, vt1.c0 UNION SELECT ALL v0.c0, vt0.c0, vt1.c0 FROM vt1, v0, vt0 WHERE ((NOT (CAST(((vt1.c0)&(v0.c0)) AS BLOB)))) GROUP BY v0.c0, vt0.c0, vt1.c0 UNION SELECT v0.c0, vt0.c0, vt1.c0 FROM vt1, v0, vt0 WHERE (((CAST(((vt1.c0)&(v0.c0)) AS BLOB)) ISNULL)) GROUP BY v0.c0, vt0.c0, vt1.c0;
SELECT ALL v0.c0, vt0.c0, vt1.c0 FROM vt1, v0, vt0 GROUP BY v0.c0, vt0.c0, vt1.c0;
SELECT vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c0;
SELECT vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c0 HAVING AVG(((((SUM(vt0.c0))AND(MIN(GROUP_CONCAT(vt1.c0)))))OR(vt1.c0))) UNION ALL SELECT ALL vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c0 HAVING (NOT (AVG(((((SUM(vt0.c0))AND(MIN(GROUP_CONCAT(vt1.c0)))))OR(vt1.c0))))) UNION ALL SELECT vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c0 HAVING ((AVG(((((SUM(vt0.c0))AND(MIN(GROUP_CONCAT(vt1.c0)))))OR(vt1.c0)))) ISNULL);
SELECT * FROM vt0, vt1;
SELECT ALL * FROM vt0, vt1 WHERE ((((CASE vt0.c0  WHEN vt0.c0 THEN vt1.c0 WHEN -4.9424964E8 THEN vt0.c0 WHEN vt0.c0 THEN 0.789953431622809 ELSE vt1.c0 END, 1.103561306E9, (vt1.c0 IN ())))<=((((vt1.c0)<(vt0.c0)), (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))), HEX(vt1.c0))))) UNION ALL SELECT ALL * FROM vt0, vt1 WHERE ((NOT ((((CASE vt0.c0  WHEN vt0.c0 THEN vt1.c0 WHEN -4.9424964E8 THEN vt0.c0 WHEN vt0.c0 THEN 0.789953431622809 ELSE vt1.c0 END, 1.103561306E9, (vt1.c0 IN ())))<=((((vt1.c0)<(vt0.c0)), (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))), HEX(vt1.c0))))))) UNION ALL SELECT ALL * FROM vt0, vt1 WHERE ((((((CASE vt0.c0  WHEN vt0.c0 THEN vt1.c0 WHEN -4.9424964E8 THEN vt0.c0 WHEN vt0.c0 THEN 0.789953431622809 ELSE vt1.c0 END, 1.103561306E9, (vt1.c0 IN ())))<=((((vt1.c0)<(vt0.c0)), (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))), HEX(vt1.c0))))) ISNULL));
SELECT * FROM vt0, vt1;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (CAST(0.8821815193871708 AS INTEGER)) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (CAST(0.8821815193871708 AS INTEGER)))) UNION SELECT DISTINCT * FROM vt0 WHERE (((CAST(0.8821815193871708 AS INTEGER)) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL vt1.c0, vt0.c0, v0.c0 FROM v0, vt1, vt0 GROUP BY vt1.c0, vt0.c0, v0.c0;
SELECT vt1.c0, vt0.c0, v0.c0 FROM v0, vt1, vt0 WHERE ((NOT (((vt0.c0)AND(vt1.c0))))) GROUP BY vt1.c0, vt0.c0, v0.c0 UNION SELECT ALL vt1.c0, vt0.c0, v0.c0 FROM v0, vt1, vt0 WHERE ((NOT ((NOT (((vt0.c0)AND(vt1.c0))))))) GROUP BY vt1.c0, vt0.c0, v0.c0 UNION SELECT vt1.c0, vt0.c0, v0.c0 FROM v0, vt1, vt0 WHERE ((((NOT (((vt0.c0)AND(vt1.c0))))) ISNULL)) GROUP BY vt1.c0, vt0.c0, v0.c0;
SELECT ALL vt1.c0, vt0.c0, v0.c0 FROM v0, vt1, vt0 GROUP BY vt1.c0, vt0.c0, v0.c0;
SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0;
SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0 HAVING (- ((v0.c0 IN ()))) UNION ALL SELECT vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0 HAVING (NOT ((- ((v0.c0 IN ()))))) UNION ALL SELECT vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0 HAVING (((- ((v0.c0 IN ())))) ISNULL);
SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0;
SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0 HAVING (- ((v0.c0 IN ()))) UNION ALL SELECT vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0 HAVING (NOT ((- ((v0.c0 IN ()))))) UNION ALL SELECT vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0 HAVING (((- ((v0.c0 IN ())))) ISNULL);
SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0;
SELECT * FROM vt0, vt1;
SELECT * FROM vt0, vt1 WHERE (((((vt1.c0)LIKE(vt1.c0))) ISNULL)) UNION ALL SELECT * FROM vt0, vt1 WHERE ((NOT (((((vt1.c0)LIKE(vt1.c0))) ISNULL)))) UNION ALL SELECT * FROM vt0, vt1 WHERE (((((((vt1.c0)LIKE(vt1.c0))) ISNULL)) ISNULL));
SELECT * FROM vt0, vt1;
SELECT DISTINCT * FROM vt0, v0 INNER JOIN vt1 ON ((CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE vt0.c0 END)/(((v0.c0)IS NOT(vt1.c0))));
SELECT DISTINCT * FROM vt0, v0 INNER JOIN vt1 ON ((CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE vt0.c0 END)/(((v0.c0)IS NOT(vt1.c0)))) WHERE ((((NULL IN ())) NOT BETWEEN (x'ec1e') AND (TYPEOF(v0.c0)))) UNION SELECT DISTINCT * FROM vt0, v0 INNER JOIN vt1 ON ((CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE vt0.c0 END)/(((v0.c0)IS NOT(vt1.c0)))) WHERE ((NOT ((((NULL IN ())) NOT BETWEEN (x'ec1e') AND (TYPEOF(v0.c0)))))) UNION SELECT DISTINCT * FROM vt0, v0 INNER JOIN vt1 ON ((CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE vt0.c0 END)/(((v0.c0)IS NOT(vt1.c0)))) WHERE ((((((NULL IN ())) NOT BETWEEN (x'ec1e') AND (TYPEOF(v0.c0)))) ISNULL));
SELECT DISTINCT * FROM vt0, v0 INNER JOIN vt1 ON ((CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE vt0.c0 END)/(((v0.c0)IS NOT(vt1.c0))));
SELECT ALL v0.c0 FROM v0, vt0 NATURAL JOIN vt1 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0, vt0 NATURAL JOIN vt1 WHERE ((((vt0.c0)LIKE(vt1.c0)) IN ())) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0, vt0 NATURAL JOIN vt1 WHERE ((NOT ((((vt0.c0)LIKE(vt1.c0)) IN ())))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0, vt0 NATURAL JOIN vt1 WHERE ((((((vt0.c0)LIKE(vt1.c0)) IN ())) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0, vt0 NATURAL JOIN vt1 GROUP BY v0.c0;
SELECT vt1.c0 FROM vt0, vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt0, vt1 GROUP BY vt1.c0 HAVING COUNT(*) UNION ALL SELECT vt1.c0 FROM vt0, vt1 GROUP BY vt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt1.c0 FROM vt0, vt1 GROUP BY vt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt1.c0 FROM vt0, vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt0, vt1 GROUP BY vt1.c0 HAVING COUNT(*) UNION ALL SELECT vt1.c0 FROM vt0, vt1 GROUP BY vt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt1.c0 FROM vt0, vt1 GROUP BY vt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt1.c0 FROM vt0, vt1 GROUP BY vt1.c0;
SELECT v0.c0 FROM v0;
SELECT v0.c0 FROM v0 WHERE (CASE WHEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) THEN (- (v0.c0)) END) UNION ALL SELECT v0.c0 FROM v0 WHERE ((NOT (CASE WHEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) THEN (- (v0.c0)) END))) UNION ALL SELECT v0.c0 FROM v0 WHERE (((CASE WHEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) THEN (- (v0.c0)) END) ISNULL));
SELECT v0.c0 FROM v0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (v0.c0) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (v0.c0))) UNION SELECT DISTINCT * FROM v0 WHERE (((v0.c0) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT v0.c0 FROM vt1, v0, vt0 GROUP BY v0.c0;
SELECT v0.c0 FROM vt1, v0, vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c0)))%(0.7046750475784135))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM vt1, v0, vt0 WHERE ((NOT (((((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c0)))%(0.7046750475784135))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM vt1, v0, vt0 WHERE (((((((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c0)))%(0.7046750475784135))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM vt1, v0, vt0 GROUP BY v0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING SUM(MAX(vt0.c0)) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (SUM(MAX(vt0.c0)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((SUM(MAX(vt0.c0))) ISNULL);
SELECT ALL * FROM vt1, vt0;
SELECT ALL * FROM vt1, vt0 WHERE (0.817089547657391) UNION ALL SELECT ALL * FROM vt1, vt0 WHERE ((NOT (0.817089547657391))) UNION ALL SELECT ALL * FROM vt1, vt0 WHERE (((0.817089547657391) ISNULL));
SELECT ALL * FROM vt1, vt0;
SELECT DISTINCT * FROM v0, vt1;
SELECT DISTINCT * FROM v0, vt1 WHERE (0.1399912538608019) UNION SELECT DISTINCT * FROM v0, vt1 WHERE ((NOT (0.1399912538608019))) UNION SELECT DISTINCT * FROM v0, vt1 WHERE (((0.1399912538608019) ISNULL));
SELECT DISTINCT * FROM v0, vt1;
SELECT ALL vt0.c0 FROM vt1, vt0, v0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt1, vt0 NOT INDEXED, v0 WHERE ((((vt0.c0)) BETWEEN ((((((v0.c0)AND(v0.c0)))AND(NULL)))) AND ((((vt0.c0) IS FALSE))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt1, vt0, v0 WHERE ((NOT ((((vt0.c0)) BETWEEN ((((((v0.c0)AND(v0.c0)))AND(NULL)))) AND ((((vt0.c0) IS FALSE))))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt1, vt0, v0 WHERE ((((((vt0.c0)) BETWEEN ((((((v0.c0)AND(v0.c0)))AND(NULL)))) AND ((((vt0.c0) IS FALSE))))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt1, vt0, v0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt1, vt0, v0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt1, vt0, v0 GROUP BY vt0.c0 HAVING ((COUNT(SUM(MAX(GROUP_CONCAT(v0.c0)))))>((NOT (COUNT(*))))) UNION ALL SELECT vt0.c0 FROM vt1, vt0, v0 GROUP BY vt0.c0 HAVING (NOT (((COUNT(SUM(MAX(GROUP_CONCAT(v0.c0)))))>((NOT (COUNT(*))))))) UNION ALL SELECT vt0.c0 FROM vt1, vt0, v0 GROUP BY vt0.c0 HAVING ((((COUNT(SUM(MAX(GROUP_CONCAT(v0.c0)))))>((NOT (COUNT(*)))))) ISNULL);
SELECT ALL vt0.c0, v0.c0 FROM v0, vt0;
SELECT vt0.c0, v0.c0 FROM v0, vt0 WHERE ((((vt0.c0)) BETWEEN ((((vt0.c0)>>(vt0.c0)))) AND ((GLOB(v0.c0, v0.c0))))) UNION ALL SELECT vt0.c0, v0.c0 FROM v0, vt0 WHERE ((NOT ((((vt0.c0)) BETWEEN ((((vt0.c0)>>(vt0.c0)))) AND ((GLOB(v0.c0, v0.c0))))))) UNION ALL SELECT ALL vt0.c0, v0.c0 FROM v0, vt0 WHERE ((((((vt0.c0)) BETWEEN ((((vt0.c0)>>(vt0.c0)))) AND ((GLOB(v0.c0, v0.c0))))) ISNULL));
SELECT ALL vt0.c0, v0.c0 FROM v0, vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (vt0.c0) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (vt0.c0))) UNION SELECT DISTINCT * FROM vt0 WHERE (((vt0.c0) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT v0.c0, vt1.c0 FROM v0, vt1 GROUP BY v0.c0, vt1.c0;
SELECT ALL v0.c0, vt1.c0 FROM v0, vt1 WHERE (((v0.c0)>>(vt1.c0)) COLLATE NOCASE) GROUP BY v0.c0, vt1.c0 UNION SELECT v0.c0, vt1.c0 FROM v0, vt1 WHERE ((NOT (((v0.c0)>>(vt1.c0)) COLLATE NOCASE))) GROUP BY v0.c0, vt1.c0 UNION SELECT ALL v0.c0, vt1.c0 FROM v0, vt1 WHERE (((((v0.c0)>>(vt1.c0)) COLLATE NOCASE) ISNULL)) GROUP BY v0.c0, vt1.c0;
SELECT v0.c0, vt1.c0 FROM v0, vt1 GROUP BY v0.c0, vt1.c0;
SELECT ALL v0.c0, vt0.c0, vt1.c0 FROM vt0, vt1, v0 GROUP BY v0.c0, vt0.c0, vt1.c0;
SELECT v0.c0, vt0.c0, vt1.c0 FROM vt0, vt1, v0 GROUP BY v0.c0, vt0.c0, vt1.c0 HAVING SUM(((AVG(COUNT(vt1.c0)))AND(vt1.c0))) UNION ALL SELECT ALL v0.c0, vt0.c0, vt1.c0 FROM vt0, vt1, v0 GROUP BY v0.c0, vt0.c0, vt1.c0 HAVING (NOT (SUM(((AVG(COUNT(vt1.c0)))AND(vt1.c0))))) UNION ALL SELECT v0.c0, vt0.c0, vt1.c0 FROM vt0, vt1, v0 GROUP BY v0.c0, vt0.c0, vt1.c0 HAVING ((SUM(((AVG(COUNT(vt1.c0)))AND(vt1.c0)))) ISNULL);
SELECT ALL MAX(COALESCE('r憷', load_extension(v0.c0, v0.c0), ((((v0.c0)OR(v0.c0)))AND(v0.c0)), ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))) FROM v0;
SELECT ALL vt0.c0 FROM v0, vt0;
SELECT ALL vt0.c0 FROM v0, vt0 WHERE (CAST(CAST(v0.c0 AS REAL) AS INTEGER)) UNION ALL SELECT vt0.c0 FROM v0, vt0 WHERE ((NOT (CAST(CAST(v0.c0 AS REAL) AS INTEGER)))) UNION ALL SELECT vt0.c0 FROM v0, vt0 WHERE (((CAST(CAST(v0.c0 AS REAL) AS INTEGER)) ISNULL));
SELECT ALL vt0.c0 FROM v0, vt0;
SELECT DISTINCT vt1.c0 FROM vt0, v0, vt1;
SELECT DISTINCT vt1.c0 FROM vt0, v0, vt1 WHERE (CASE WHEN ((vt1.c0)-(x'')) THEN CAST(v0.c0 AS REAL) END) UNION SELECT DISTINCT vt1.c0 FROM vt0, v0, vt1 WHERE ((NOT (CASE WHEN ((vt1.c0)-(x'')) THEN CAST(v0.c0 AS REAL) END))) UNION SELECT DISTINCT vt1.c0 FROM vt0, v0, vt1 WHERE (((CASE WHEN ((vt1.c0)-(x'')) THEN CAST(v0.c0 AS REAL) END) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt0, v0, vt1;
SELECT ALL vt1.c0 FROM v0, vt0, vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM v0, vt0, vt1 WHERE (((CAST(v0.c0 AS BLOB))|(TRIM(v0.c0)))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM v0, vt0, vt1 WHERE ((NOT (((CAST(v0.c0 AS BLOB))|(TRIM(v0.c0)))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM v0, vt0, vt1 WHERE (((((CAST(v0.c0 AS BLOB))|(TRIM(v0.c0)))) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM v0, vt0, vt1 GROUP BY vt1.c0;
SELECT ALL vt0.c0 FROM vt1, vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt1, vt0 GROUP BY vt0.c0 HAVING SUM(TOTAL(vt1.c0)) UNION ALL SELECT vt0.c0 FROM vt1, vt0 GROUP BY vt0.c0 HAVING (NOT (SUM(TOTAL(vt1.c0)))) UNION ALL SELECT ALL vt0.c0 FROM vt1, vt0 GROUP BY vt0.c0 HAVING ((SUM(TOTAL(vt1.c0))) ISNULL);
SELECT * FROM v0;
SELECT ALL * FROM v0 WHERE (LIKELY(DISTINCT ((v0.c0) ISNULL))) UNION ALL SELECT * FROM v0 WHERE ((NOT (LIKELY(DISTINCT ((v0.c0) ISNULL))))) UNION ALL SELECT ALL * FROM v0 WHERE (((LIKELY(DISTINCT ((v0.c0) ISNULL))) ISNULL));
SELECT * FROM v0;
SELECT DISTINCT * FROM v0, vt0, vt1;
SELECT DISTINCT * FROM v0, vt0, vt1 WHERE ((((vt0.c0)) BETWEEN (((vt0.c0 IN ()))) AND ((NULL)))) UNION SELECT DISTINCT * FROM v0, vt0, vt1 WHERE ((NOT ((((vt0.c0)) BETWEEN (((vt0.c0 IN ()))) AND ((NULL)))))) UNION SELECT DISTINCT * FROM v0, vt0, vt1 WHERE ((((((vt0.c0)) BETWEEN (((vt0.c0 IN ()))) AND ((NULL)))) ISNULL));
SELECT DISTINCT * FROM v0, vt0, vt1;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE ((((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((((v0.c0) NOTNULL), ((v0.c0)+(v0.c0)), (NOT (v0.c0)))) AND ((((v0.c0) NOT NULL), ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)), CAST(v0.c0 AS INTEGER))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT ((((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((((v0.c0) NOTNULL), ((v0.c0)+(v0.c0)), (NOT (v0.c0)))) AND ((((v0.c0) NOT NULL), ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)), CAST(v0.c0 AS INTEGER))))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((((((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((((v0.c0) NOTNULL), ((v0.c0)+(v0.c0)), (NOT (v0.c0)))) AND ((((v0.c0) NOT NULL), ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)), CAST(v0.c0 AS INTEGER))))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL vt1.c0 FROM vt1, v0 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1, v0 GROUP BY vt1.c0 HAVING COUNT(COUNT(GROUP_CONCAT(MIN(vt1.c0)))) UNION ALL SELECT vt1.c0 FROM vt1, v0 GROUP BY vt1.c0 HAVING (NOT (COUNT(COUNT(GROUP_CONCAT(MIN(vt1.c0)))))) UNION ALL SELECT vt1.c0 FROM vt1, v0 GROUP BY vt1.c0 HAVING ((COUNT(COUNT(GROUP_CONCAT(MIN(vt1.c0))))) ISNULL);
SELECT ALL MIN(vt0.c0) FROM v0, vt0, vt1;
SELECT vt1.c0 FROM vt1;
SELECT vt1.c0 FROM vt1 WHERE (LTRIM(CAST(vt1.c0 AS REAL), CASE x'696c1d22'  WHEN vt1.c0 THEN vt1.c0 END)) UNION ALL SELECT ALL vt1.c0 FROM vt1 NOT INDEXED WHERE ((NOT (LTRIM(CAST(vt1.c0 AS REAL), CASE x'696c1d22'  WHEN vt1.c0 THEN vt1.c0 END)))) UNION ALL SELECT vt1.c0 FROM vt1 WHERE (((LTRIM(CAST(vt1.c0 AS REAL), CASE x'696c1d22'  WHEN vt1.c0 THEN vt1.c0 END)) ISNULL));
SELECT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0, v0.c0 FROM v0, vt0, vt1;
SELECT DISTINCT vt1.c0, v0.c0 FROM v0, vt0, vt1 WHERE (((vt0.c0) NOT BETWEEN (((vt0.c0)IS(vt0.c0))) AND (''))) UNION SELECT DISTINCT vt1.c0, v0.c0 FROM v0, vt0, vt1 WHERE ((NOT (((vt0.c0) NOT BETWEEN (((vt0.c0)IS(vt0.c0))) AND (''))))) UNION SELECT DISTINCT vt1.c0, v0.c0 FROM v0, vt0, vt1 WHERE (((((vt0.c0) NOT BETWEEN (((vt0.c0)IS(vt0.c0))) AND (''))) ISNULL));
SELECT DISTINCT vt1.c0, v0.c0 FROM v0, vt0, vt1;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (vt0.c0) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (vt0.c0))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((vt0.c0) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt1.c0 FROM v0, vt1, vt0 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM v0, vt1, vt0 GROUP BY vt1.c0 HAVING (+ (AVG(v0.c0))) UNION ALL SELECT ALL vt1.c0 FROM v0, vt1, vt0 GROUP BY vt1.c0 HAVING (NOT ((+ (AVG(v0.c0))))) UNION ALL SELECT ALL vt1.c0 FROM v0, vt1, vt0 GROUP BY vt1.c0 HAVING (((+ (AVG(v0.c0)))) ISNULL);
SELECT ALL vt1.c0 FROM v0, vt1, vt0 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM v0, vt1, vt0 GROUP BY vt1.c0 HAVING (+ (AVG(v0.c0))) UNION ALL SELECT ALL vt1.c0 FROM v0, vt1, vt0 GROUP BY vt1.c0 HAVING (NOT ((+ (AVG(v0.c0))))) UNION ALL SELECT ALL vt1.c0 FROM v0, vt1, vt0 GROUP BY vt1.c0 HAVING (((+ (AVG(v0.c0)))) ISNULL);
SELECT ALL vt1.c0 FROM v0, vt1, vt0 GROUP BY vt1.c0;
SELECT ALL v0.c0 FROM vt1 LEFT OUTER JOIN v0 ON CASE CAST(vt1.c0 AS BLOB)  WHEN ((v0.c0)IS NOT(vt1.c0)) THEN ((v0.c0)AND(v0.c0)) WHEN CASE v0.c0  WHEN vt1.c0 THEN v0.c0 END THEN CAST(vt1.c0 AS NUMERIC) WHEN ((((vt1.c0)AND(v0.c0)))OR(vt1.c0)) THEN ((vt1.c0) NOT NULL) WHEN ((((((((v0.c0)OR(v0.c0)))AND(vt1.c0)))AND(NULL)))AND(vt1.c0)) THEN ((vt1.c0)+(v0.c0)) WHEN TYPEOF(DISTINCT v0.c0) THEN ((((((((v0.c0)OR(vt1.c0)))OR(vt1.c0)))AND(v0.c0)))OR(v0.c0)) END;
SELECT ALL v0.c0 FROM vt1 LEFT OUTER JOIN v0 ON CASE CAST(vt1.c0 AS BLOB)  WHEN ((v0.c0)IS NOT(vt1.c0)) THEN ((v0.c0)AND(v0.c0)) WHEN CASE v0.c0  WHEN vt1.c0 THEN v0.c0 END THEN CAST(vt1.c0 AS NUMERIC) WHEN ((((vt1.c0)AND(v0.c0)))OR(vt1.c0)) THEN ((vt1.c0) NOT NULL) WHEN ((((((((v0.c0)OR(v0.c0)))AND(vt1.c0)))AND(NULL)))AND(vt1.c0)) THEN ((vt1.c0)+(v0.c0)) WHEN TYPEOF(DISTINCT v0.c0) THEN ((((((((v0.c0)OR(vt1.c0)))OR(vt1.c0)))AND(v0.c0)))OR(v0.c0)) END WHERE (((((vt1.c0)*(vt1.c0))) BETWEEN (x'c556') AND ((((0xffffffff9d9597d8, 1.645049391E9, vt1.c0)) BETWEEN (('570047453', vt1.c0, v0.c0)) AND ((vt1.c0, vt1.c0, vt1.c0)))))) UNION ALL SELECT v0.c0 FROM vt1 LEFT OUTER JOIN v0 ON CASE CAST(vt1.c0 AS BLOB)  WHEN ((v0.c0)IS NOT(vt1.c0)) THEN ((v0.c0)AND(v0.c0)) WHEN CASE v0.c0  WHEN vt1.c0 THEN v0.c0 END THEN CAST(vt1.c0 AS NUMERIC) WHEN ((((vt1.c0)AND(v0.c0)))OR(vt1.c0)) THEN ((vt1.c0) NOT NULL) WHEN ((((((((v0.c0)OR(v0.c0)))AND(vt1.c0)))AND(NULL)))AND(vt1.c0)) THEN ((vt1.c0)+(v0.c0)) WHEN TYPEOF(DISTINCT v0.c0) THEN ((((((((v0.c0)OR(vt1.c0)))OR(vt1.c0)))AND(v0.c0)))OR(v0.c0)) END WHERE ((NOT (((((vt1.c0)*(vt1.c0))) BETWEEN (x'c556') AND ((((0Xffffffff9d9597d8, 1.645049391E9, vt1.c0)) BETWEEN (('570047453', vt1.c0, v0.c0)) AND ((vt1.c0, vt1.c0, vt1.c0)))))))) UNION ALL SELECT v0.c0 FROM vt1 LEFT OUTER JOIN v0 ON CASE CAST(vt1.c0 AS BLOB)  WHEN ((v0.c0)IS NOT(vt1.c0)) THEN ((v0.c0)AND(v0.c0)) WHEN CASE v0.c0  WHEN vt1.c0 THEN v0.c0 END THEN CAST(vt1.c0 AS NUMERIC) WHEN ((((vt1.c0)AND(v0.c0)))OR(vt1.c0)) THEN ((vt1.c0) NOT NULL) WHEN ((((((((v0.c0)OR(v0.c0)))AND(vt1.c0)))AND(NULL)))AND(vt1.c0)) THEN ((vt1.c0)+(v0.c0)) WHEN TYPEOF(DISTINCT v0.c0) THEN ((((((((v0.c0)OR(vt1.c0)))OR(vt1.c0)))AND(v0.c0)))OR(v0.c0)) END WHERE (((((((vt1.c0)*(vt1.c0))) BETWEEN (x'c556') AND ((((0Xffffffff9d9597d8, 1.645049391E9, vt1.c0)) BETWEEN (('570047453', vt1.c0, v0.c0)) AND ((vt1.c0, vt1.c0, vt1.c0)))))) ISNULL));
SELECT ALL v0.c0 FROM vt1 LEFT OUTER JOIN v0 ON CASE CAST(vt1.c0 AS BLOB)  WHEN ((v0.c0)IS NOT(vt1.c0)) THEN ((v0.c0)AND(v0.c0)) WHEN CASE v0.c0  WHEN vt1.c0 THEN v0.c0 END THEN CAST(vt1.c0 AS NUMERIC) WHEN ((((vt1.c0)AND(v0.c0)))OR(vt1.c0)) THEN ((vt1.c0) NOT NULL) WHEN ((((((((v0.c0)OR(v0.c0)))AND(vt1.c0)))AND(NULL)))AND(vt1.c0)) THEN ((vt1.c0)+(v0.c0)) WHEN TYPEOF(DISTINCT v0.c0) THEN ((((((((v0.c0)OR(vt1.c0)))OR(vt1.c0)))AND(v0.c0)))OR(v0.c0)) END;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (ABS(LIKELY(DISTINCT vt1.c0))) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (ABS(LIKELY(DISTINCT vt1.c0))))) UNION SELECT DISTINCT * FROM vt1 WHERE (((ABS(LIKELY(DISTINCT vt1.c0))) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT ALL v0.c0, vt1.c0 FROM v0, vt1 GROUP BY v0.c0, vt1.c0;
SELECT ALL v0.c0, vt1.c0 FROM v0, vt1 WHERE (v0.c0) GROUP BY v0.c0, vt1.c0 UNION SELECT v0.c0, vt1.c0 FROM v0, vt1 WHERE ((NOT (v0.c0))) GROUP BY v0.c0, vt1.c0 UNION SELECT v0.c0, vt1.c0 FROM v0, vt1 WHERE (((v0.c0) ISNULL)) GROUP BY v0.c0, vt1.c0;
SELECT ALL v0.c0, vt1.c0 FROM v0, vt1 GROUP BY v0.c0, vt1.c0;
SELECT ALL v0.c0 FROM vt0 CROSS JOIN v0 ON ((-2.13275972E9)%(0.3580727551633315)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM vt0 CROSS JOIN v0 ON ((-2.13275972E9)%(0.3580727551633315)) GROUP BY v0.c0 HAVING CAST(SUM(COUNT(vt0.c0)) AS NUMERIC) UNION ALL SELECT v0.c0 FROM vt0 CROSS JOIN v0 ON ((-2.13275972E9)%(0.3580727551633315)) GROUP BY v0.c0 HAVING (NOT (CAST(SUM(COUNT(vt0.c0)) AS NUMERIC))) UNION ALL SELECT ALL v0.c0 FROM vt0 CROSS JOIN v0 ON ((-2.13275972E9)%(0.3580727551633315)) GROUP BY v0.c0 HAVING ((CAST(SUM(COUNT(vt0.c0)) AS NUMERIC)) ISNULL);
SELECT MAX(LTRIM(CASE x''  WHEN v0.c0 THEN v0.c0 END)) FROM v0 ORDER BY ((v0.c0)||(v0.c0)) COLLATE NOCASE  NULLS FIRST;
SELECT * FROM vt1;
SELECT * FROM vt1 WHERE ((0.33167108736070217 IN ((((vt1.c0))!=((vt1.c0)))))) UNION ALL SELECT * FROM vt1 WHERE ((NOT ((0.33167108736070217 IN ((((vt1.c0))!=((vt1.c0)))))))) UNION ALL SELECT * FROM vt1 WHERE ((((0.33167108736070217 IN ((((vt1.c0))<>((vt1.c0)))))) ISNULL));
SELECT * FROM vt1;
SELECT DISTINCT * FROM vt1 FULL OUTER JOIN vt0 ON COALESCE(((v0.c0) NOT BETWEEN (-631272791) AND (vt0.c0)), ((vt1.c0)<=(vt0.c0))) INNER JOIN v0 ON (((vt1.c0)) BETWEEN ((v0.c0 COLLATE BINARY)) AND ((TRIM(DISTINCT vt1.c0))));
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE (('1801756569' IN ())) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (('1801756569' IN ())))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE (((('1801756569' IN ())) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0 HAVING (((TOTAL(MIN(MIN(COUNT(*))))))==((COUNT(*)))) UNION ALL SELECT vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0 HAVING (NOT ((((TOTAL(MIN(MIN(COUNT(*))))))=((COUNT(*)))))) UNION ALL SELECT ALL vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0 HAVING (((((TOTAL(MIN(MIN(COUNT(*))))))==((COUNT(*))))) ISNULL);
SELECT * FROM vt0;
SELECT * FROM vt0 WHERE (((vt0.c0)<(vt0.c0)) COLLATE BINARY) UNION ALL SELECT * FROM vt0 WHERE ((NOT (((vt0.c0)<(vt0.c0)) COLLATE BINARY))) UNION ALL SELECT * FROM vt0 WHERE (((((vt0.c0)<(vt0.c0)) COLLATE BINARY) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT * FROM vt0, vt1 RIGHT OUTER JOIN v0 ON CASE WHEN x'' THEN TRIM(vt0.c0, vt0.c0) ELSE CAST(v0.c0 AS BLOB) END;
SELECT DISTINCT * FROM vt0, vt1 RIGHT OUTER JOIN v0 ON CASE WHEN x'' THEN TRIM(vt0.c0, vt0.c0) ELSE CAST(v0.c0 AS BLOB) END WHERE (((((((((((vt0.c0)||(v0.c0)))OR((((vt0.c0, v0.c0, vt1.c0)) BETWEEN ((vt0.c0, vt0.c0, 'bg\r*2Z')) AND ((vt0.c0, v0.c0, v0.c0))))))OR(((vt1.c0)LIKE(vt0.c0)))))OR(vt1.c0 COLLATE NOCASE)))AND((+ (vt0.c0))))) UNION SELECT DISTINCT * FROM vt0, vt1 RIGHT OUTER JOIN v0 ON CASE WHEN x'' THEN TRIM(vt0.c0, vt0.c0) ELSE CAST(v0.c0 AS BLOB) END WHERE ((NOT (((((((((((vt0.c0)||(v0.c0)))OR((((vt0.c0, v0.c0, vt1.c0)) BETWEEN ((vt0.c0, vt0.c0, 'bg\r*2Z')) AND ((vt0.c0, v0.c0, v0.c0))))))OR(((vt1.c0)LIKE(vt0.c0)))))OR(vt1.c0 COLLATE NOCASE)))AND((+ (vt0.c0))))))) UNION SELECT DISTINCT * FROM vt0, vt1 RIGHT OUTER JOIN v0 ON CASE WHEN x'' THEN TRIM(vt0.c0, vt0.c0) ELSE CAST(v0.c0 AS BLOB) END WHERE (((((((((((((vt0.c0)||(v0.c0)))OR((((vt0.c0, v0.c0, vt1.c0)) BETWEEN ((vt0.c0, vt0.c0, 'bg\r*2Z')) AND ((vt0.c0, v0.c0, v0.c0))))))OR(((vt1.c0)LIKE(vt0.c0)))))OR(vt1.c0 COLLATE NOCASE)))AND((+ (vt0.c0))))) ISNULL));
SELECT DISTINCT * FROM vt0, vt1 RIGHT OUTER JOIN v0 ON CASE WHEN x'' THEN TRIM(vt0.c0, vt0.c0) ELSE CAST(v0.c0 AS BLOB) END;
SELECT ALL vt0.c0 FROM v0, vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM v0, vt0 WHERE (CASE WHEN (vt0.c0 IN ()) THEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((v0.c0))) ELSE CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END END) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM v0, vt0 WHERE ((NOT (CASE WHEN (vt0.c0 IN ()) THEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((v0.c0))) ELSE CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END END))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM v0, vt0 WHERE (((CASE WHEN (vt0.c0 IN ()) THEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((v0.c0))) ELSE CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END END) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM v0, vt0 GROUP BY vt0.c0;
SELECT ALL vt1.c0 FROM v0, vt1, vt0 GROUP BY vt1.c0;
SELECT vt1.c0 FROM v0, vt1, vt0 GROUP BY vt1.c0 HAVING ((TOTAL(v0.c0)) NOT BETWEEN (446656970) AND (TOTAL_CHANGES())) UNION ALL SELECT vt1.c0 FROM v0, vt1, vt0 GROUP BY vt1.c0 HAVING (NOT (((TOTAL(v0.c0)) NOT BETWEEN (446656970) AND (TOTAL_CHANGES())))) UNION ALL SELECT vt1.c0 FROM v0, vt1, vt0 GROUP BY vt1.c0 HAVING ((((TOTAL(v0.c0)) NOT BETWEEN (446656970) AND (TOTAL_CHANGES()))) ISNULL);
SELECT ALL vt1.c0 FROM v0, vt1, vt0 GROUP BY vt1.c0;
SELECT vt1.c0 FROM v0, vt1, vt0 GROUP BY vt1.c0 HAVING ((TOTAL(v0.c0)) NOT BETWEEN (446656970) AND (TOTAL_CHANGES())) UNION ALL SELECT vt1.c0 FROM v0, vt1, vt0 GROUP BY vt1.c0 HAVING (NOT (((TOTAL(v0.c0)) NOT BETWEEN (446656970) AND (TOTAL_CHANGES())))) UNION ALL SELECT vt1.c0 FROM v0, vt1, vt0 GROUP BY vt1.c0 HAVING ((((TOTAL(v0.c0)) NOT BETWEEN (446656970) AND (TOTAL_CHANGES()))) ISNULL);
SELECT ALL vt1.c0 FROM v0, vt1, vt0 GROUP BY vt1.c0;
SELECT v0.c0 FROM v0;
SELECT v0.c0 FROM v0 WHERE (CAST((~ (v0.c0)) AS BLOB)) UNION ALL SELECT v0.c0 FROM v0 WHERE ((NOT (CAST((~ (v0.c0)) AS BLOB)))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE (((CAST((~ (v0.c0)) AS BLOB)) ISNULL));
SELECT v0.c0 FROM v0;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((((vt1.c0) NOT BETWEEN (vt1.c0) AND ('0.7244177136351526'))) ISNULL)) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT (((((vt1.c0) NOT BETWEEN (vt1.c0) AND ('0.7244177136351526'))) ISNULL)))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((((((vt1.c0) NOT BETWEEN (vt1.c0) AND ('0.7244177136351526'))) ISNULL)) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT ALL vt1.c0, v0.c0, vt0.c0 FROM vt1, vt0, v0 GROUP BY vt1.c0, v0.c0, vt0.c0;
SELECT ALL vt1.c0, v0.c0, vt0.c0 FROM vt1, vt0, v0 WHERE (CAST(TYPEOF(v0.c0) AS TEXT)) GROUP BY vt1.c0, v0.c0, vt0.c0 UNION SELECT vt1.c0, v0.c0, vt0.c0 FROM vt1, vt0, v0 WHERE ((NOT (CAST(TYPEOF(v0.c0) AS TEXT)))) GROUP BY vt1.c0, v0.c0, vt0.c0 UNION SELECT vt1.c0, v0.c0, vt0.c0 FROM vt1, vt0, v0 WHERE (((CAST(TYPEOF(v0.c0) AS TEXT)) ISNULL)) GROUP BY vt1.c0, v0.c0, vt0.c0;
SELECT ALL vt1.c0, v0.c0, vt0.c0 FROM vt1, vt0, v0 GROUP BY vt1.c0, v0.c0, vt0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING AVG(COUNT(*)) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (AVG(COUNT(*)))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((AVG(COUNT(*))) ISNULL);
SELECT ALL vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE (json_array(IFNULL(vt0.c0, vt0.c0), 'B^{Kqj')) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT (json_array(IFNULL(vt0.c0, vt0.c0), 'B^{Kqj')))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE (((json_array(IFNULL(vt0.c0, vt0.c0), 'B^{Kqj')) ISNULL));
SELECT DISTINCT * FROM vt1, vt0, v0;
SELECT DISTINCT * FROM vt1, vt0, v0 WHERE (v0.c0 COLLATE NOCASE) UNION SELECT DISTINCT * FROM vt1, vt0, v0 WHERE ((NOT (v0.c0 COLLATE NOCASE))) UNION SELECT DISTINCT * FROM vt1, vt0, v0 WHERE (((v0.c0 COLLATE NOCASE) ISNULL));
SELECT DISTINCT * FROM vt1, vt0, v0;
SELECT v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0;
SELECT v0.c0, vt0.c0 FROM v0, vt0 WHERE (TRIM(DISTINCT ('62874774' IN ()), x'b2d9')) GROUP BY v0.c0, vt0.c0 UNION SELECT ALL v0.c0, vt0.c0 FROM v0, vt0 WHERE ((NOT (TRIM(DISTINCT ('62874774' IN ()), x'b2d9')))) GROUP BY v0.c0, vt0.c0 UNION SELECT ALL v0.c0, vt0.c0 FROM v0, vt0 WHERE (((TRIM(DISTINCT ('62874774' IN ()), x'b2d9')) ISNULL)) GROUP BY v0.c0, vt0.c0;
SELECT v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING CAST(((((vt0.c0)AND(TOTAL(MAX(SUM(COUNT(vt0.c0)))))))AND(MIN(vt0.c0))) AS NUMERIC) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (CAST(((((vt0.c0)AND(TOTAL(MAX(SUM(COUNT(vt0.c0)))))))AND(MIN(vt0.c0))) AS NUMERIC))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((CAST(((((vt0.c0)AND(TOTAL(MAX(SUM(COUNT(vt0.c0)))))))AND(MIN(vt0.c0))) AS NUMERIC)) ISNULL);
SELECT * FROM vt0 RIGHT OUTER JOIN v0 ON CASE WHEN IFNULL(v0.c0, v0.c0) THEN ((((v0.c0)AND(vt0.c0)))AND(v0.c0)) WHEN NULL THEN LAST_INSERT_ROWID() WHEN vt0.c0 COLLATE NOCASE THEN CASE WHEN v0.c0 THEN vt0.c0 WHEN 0.46619992437526403 THEN v0.c0 WHEN vt0.c0 THEN v0.c0 END ELSE ((v0.c0) IS TRUE) END;
SELECT ALL * FROM vt0 RIGHT OUTER JOIN v0 ON CASE WHEN IFNULL(v0.c0, v0.c0) THEN ((((v0.c0)AND(vt0.c0)))AND(v0.c0)) WHEN NULL THEN LAST_INSERT_ROWID() WHEN vt0.c0 COLLATE NOCASE THEN CASE WHEN v0.c0 THEN vt0.c0 WHEN 0.46619992437526403 THEN v0.c0 WHEN vt0.c0 THEN v0.c0 END ELSE ((v0.c0) IS TRUE) END WHERE (CASE ((v0.c0) BETWEEN (vt0.c0) AND (vt0.c0))  WHEN CAST(v0.c0 AS INTEGER) THEN vt0.c0 COLLATE RTRIM END) UNION ALL SELECT * FROM vt0 RIGHT OUTER JOIN v0 ON CASE WHEN IFNULL(v0.c0, v0.c0) THEN ((((v0.c0)AND(vt0.c0)))AND(v0.c0)) WHEN NULL THEN LAST_INSERT_ROWID() WHEN vt0.c0 COLLATE NOCASE THEN CASE WHEN v0.c0 THEN vt0.c0 WHEN 0.46619992437526403 THEN v0.c0 WHEN vt0.c0 THEN v0.c0 END ELSE ((v0.c0) IS TRUE) END WHERE ((NOT (CASE ((v0.c0) BETWEEN (vt0.c0) AND (vt0.c0))  WHEN CAST(v0.c0 AS INTEGER) THEN vt0.c0 COLLATE RTRIM END))) UNION ALL SELECT * FROM vt0 RIGHT OUTER JOIN v0 ON CASE WHEN IFNULL(v0.c0, v0.c0) THEN ((((v0.c0)AND(vt0.c0)))AND(v0.c0)) WHEN NULL THEN LAST_INSERT_ROWID() WHEN vt0.c0 COLLATE NOCASE THEN CASE WHEN v0.c0 THEN vt0.c0 WHEN 0.46619992437526403 THEN v0.c0 WHEN vt0.c0 THEN v0.c0 END ELSE ((v0.c0) IS TRUE) END WHERE (((CASE ((v0.c0) BETWEEN (vt0.c0) AND (vt0.c0))  WHEN CAST(v0.c0 AS INTEGER) THEN vt0.c0 COLLATE RTRIM END) ISNULL));
SELECT * FROM vt0 RIGHT OUTER JOIN v0 ON CASE WHEN IFNULL(v0.c0, v0.c0) THEN ((((v0.c0)AND(vt0.c0)))AND(v0.c0)) WHEN NULL THEN LAST_INSERT_ROWID() WHEN vt0.c0 COLLATE NOCASE THEN CASE WHEN v0.c0 THEN vt0.c0 WHEN 0.46619992437526403 THEN v0.c0 WHEN vt0.c0 THEN v0.c0 END ELSE ((v0.c0) IS TRUE) END;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((~ ((((vt0.c0))==((vt0.c0)))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT ((~ ((((vt0.c0))==((vt0.c0)))))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((((~ ((((vt0.c0))=((vt0.c0)))))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt1, vt0, v0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt1, vt0, v0 WHERE (((((((vt1.c0) BETWEEN (x'') AND (vt1.c0)))OR(((((v0.c0)OR(v0.c0)))OR(6.13523362E8)))))AND(SUBSTR(v0.c0, v0.c0)))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt1, vt0, v0 WHERE ((NOT (((((((vt1.c0) BETWEEN (x'') AND (vt1.c0)))OR(((((v0.c0)OR(v0.c0)))OR(6.13523362E8)))))AND(SUBSTR(v0.c0, v0.c0)))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt1, vt0, v0 WHERE (((((((((vt1.c0) BETWEEN (x'') AND (vt1.c0)))OR(((((v0.c0)OR(v0.c0)))OR(6.13523362E8)))))AND(SUBSTR(v0.c0, v0.c0)))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt1, vt0, v0 GROUP BY vt0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 NOT INDEXED GROUP BY v0.c0 HAVING ((json_remove(v0.c0, TOTAL(v0.c0), 0.42992381193659157, v0.c0)) ISNULL) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (((json_remove(v0.c0, TOTAL(v0.c0), 0.42992381193659157, v0.c0)) ISNULL))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((((json_remove(v0.c0, TOTAL(v0.c0), 0.42992381193659157, v0.c0)) ISNULL)) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 NOT INDEXED GROUP BY v0.c0 HAVING ((json_remove(v0.c0, TOTAL(v0.c0), 0.42992381193659157, v0.c0)) ISNULL) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (((json_remove(v0.c0, TOTAL(v0.c0), 0.42992381193659157, v0.c0)) ISNULL))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((((json_remove(v0.c0, TOTAL(v0.c0), 0.42992381193659157, v0.c0)) ISNULL)) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL * FROM v0, vt0;
SELECT * FROM v0, vt0 WHERE ((- (((vt0.c0)<>(vt0.c0))))) UNION ALL SELECT * FROM v0, vt0 WHERE ((NOT ((- (((vt0.c0)!=(vt0.c0))))))) UNION ALL SELECT ALL * FROM v0, vt0 WHERE ((((- (((vt0.c0)!=(vt0.c0))))) ISNULL));
SELECT ALL * FROM v0, vt0;
SELECT DISTINCT * FROM v0, vt1;
SELECT DISTINCT * FROM v0, vt1 WHERE ((((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))) IS FALSE)) UNION SELECT DISTINCT * FROM v0, vt1 WHERE ((NOT ((((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))) IS FALSE)))) UNION SELECT DISTINCT * FROM v0, vt1 WHERE ((((((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))) IS FALSE)) ISNULL));
SELECT DISTINCT * FROM v0, vt1;
SELECT v0.c0 FROM v0, vt1 GROUP BY v0.c0;
SELECT v0.c0 FROM v0, vt1 WHERE (0.9076146625002514) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0, vt1 WHERE ((NOT (0.9076146625002514))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0, vt1 WHERE (((0.9076146625002514) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0, vt1 GROUP BY v0.c0;
SELECT v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0;
SELECT v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0 HAVING AVG(COUNT(*)) UNION ALL SELECT v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0 HAVING (NOT (AVG(COUNT(*)))) UNION ALL SELECT v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0 HAVING ((AVG(COUNT(*))) ISNULL);
SELECT ALL vt0.c0 FROM vt0, vt1;
SELECT ALL vt0.c0 FROM vt0, vt1 WHERE ((((vt0.c0, (((vt0.c0))=((x'9b7a'))), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0))))<=((CASE vt0.c0  WHEN vt1.c0 THEN vt0.c0 END, CAST('' AS NUMERIC), TRIM(vt1.c0))))) UNION ALL SELECT ALL vt0.c0 FROM vt0, vt1 WHERE ((NOT ((((vt0.c0, (((vt0.c0))=((x'9b7a'))), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0))))<=((CASE vt0.c0  WHEN vt1.c0 THEN vt0.c0 END, CAST('' AS NUMERIC), TRIM(vt1.c0))))))) UNION ALL SELECT vt0.c0 FROM vt0, vt1 WHERE ((((((vt0.c0, (((vt0.c0))=((x'9b7a'))), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0))))<=((CASE vt0.c0  WHEN vt1.c0 THEN vt0.c0 END, CAST('' AS NUMERIC), TRIM(vt1.c0))))) ISNULL));
SELECT ALL vt0.c0 FROM vt0, vt1;
SELECT DISTINCT * FROM vt1, v0;
SELECT DISTINCT * FROM vt1, v0 WHERE ((((v0.c0, v0.c0, vt1.c0)) NOT BETWEEN ((vt1.c0 COLLATE BINARY, ((v0.c0)*(v0.c0)), (((v0.c0, v0.c0, vt1.c0))<=((v0.c0, v0.c0, vt1.c0))))) AND (((v0.c0 IN (v0.c0, v0.c0)), vt1.c0 COLLATE RTRIM, (vt1.c0 IN (vt1.c0)))))) UNION SELECT DISTINCT * FROM vt1, v0 WHERE ((NOT ((((v0.c0, v0.c0, vt1.c0)) NOT BETWEEN ((vt1.c0 COLLATE BINARY, ((v0.c0)*(v0.c0)), (((v0.c0, v0.c0, vt1.c0))<=((v0.c0, v0.c0, vt1.c0))))) AND (((v0.c0 IN (v0.c0, v0.c0)), vt1.c0 COLLATE RTRIM, (vt1.c0 IN (vt1.c0)))))))) UNION SELECT DISTINCT * FROM vt1, v0 WHERE ((((((v0.c0, v0.c0, vt1.c0)) NOT BETWEEN ((vt1.c0 COLLATE BINARY, ((v0.c0)*(v0.c0)), (((v0.c0, v0.c0, vt1.c0))<=((v0.c0, v0.c0, vt1.c0))))) AND (((v0.c0 IN (v0.c0, v0.c0)), vt1.c0 COLLATE RTRIM, (vt1.c0 IN (vt1.c0)))))) ISNULL));
SELECT DISTINCT * FROM vt1, v0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (CASE CASE v0.c0  WHEN 0.8774011381016921 THEN 0.2173366548933512 END  WHEN NULLIF(DISTINCT v0.c0, v0.c0) THEN (NOT (v0.c0)) WHEN CAST(v0.c0 AS TEXT) THEN CAST(v0.c0 AS INTEGER) WHEN ((((v0.c0)OR(v0.c0)))OR(v0.c0)) THEN ((v0.c0)*(v0.c0)) WHEN ((((v0.c0)OR(v0.c0)))AND(v0.c0)) THEN CAST(v0.c0 AS NUMERIC) WHEN ((NULL) IS TRUE) THEN NULLIF(v0.c0, v0.c0) ELSE ((v0.c0)LIKE(v0.c0)) END) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (CASE CASE v0.c0  WHEN 0.8774011381016921 THEN 0.2173366548933512 END  WHEN NULLIF(DISTINCT v0.c0, v0.c0) THEN (NOT (v0.c0)) WHEN CAST(v0.c0 AS TEXT) THEN CAST(v0.c0 AS INTEGER) WHEN ((((v0.c0)OR(v0.c0)))OR(v0.c0)) THEN ((v0.c0)*(v0.c0)) WHEN ((((v0.c0)OR(v0.c0)))AND(v0.c0)) THEN CAST(v0.c0 AS NUMERIC) WHEN ((NULL) IS TRUE) THEN NULLIF(v0.c0, v0.c0) ELSE ((v0.c0)LIKE(v0.c0)) END))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((CASE CASE v0.c0  WHEN 0.8774011381016921 THEN 0.2173366548933512 END  WHEN NULLIF(DISTINCT v0.c0, v0.c0) THEN (NOT (v0.c0)) WHEN CAST(v0.c0 AS TEXT) THEN CAST(v0.c0 AS INTEGER) WHEN ((((v0.c0)OR(v0.c0)))OR(v0.c0)) THEN ((v0.c0)*(v0.c0)) WHEN ((((v0.c0)OR(v0.c0)))AND(v0.c0)) THEN CAST(v0.c0 AS NUMERIC) WHEN ((NULL) IS TRUE) THEN NULLIF(v0.c0, v0.c0) ELSE ((v0.c0)LIKE(v0.c0)) END) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING TOTAL(SQLITE_SOURCE_ID()) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (TOTAL(SQLITE_SOURCE_ID()))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((TOTAL(SQLITE_SOURCE_ID())) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING TOTAL(SQLITE_SOURCE_ID()) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (TOTAL(SQLITE_SOURCE_ID()))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((TOTAL(SQLITE_SOURCE_ID())) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE (((((vt0.c0)*(vt0.c0))) NOT BETWEEN ((vt0.c0 IN (vt0.c0, vt0.c0))) AND ((+ (vt0.c0))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (((((vt0.c0)*(vt0.c0))) NOT BETWEEN ((vt0.c0 IN (vt0.c0, vt0.c0))) AND ((+ (vt0.c0))))))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE (((((((vt0.c0)*(vt0.c0))) NOT BETWEEN ((vt0.c0 IN (vt0.c0, vt0.c0))) AND ((+ (vt0.c0))))) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT vt1.c0, vt0.c0, v0.c0 FROM v0, vt1, vt0;
SELECT DISTINCT vt1.c0, vt0.c0, v0.c0 FROM v0, vt1, vt0 WHERE (CASE WHEN (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))) THEN vt1.c0 WHEN ((((((((NULL)OR(v0.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)) THEN 1459199085 WHEN CASE WHEN v0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN '1747909162' THEN vt1.c0 END THEN (~ (v0.c0)) ELSE vt0.c0 COLLATE BINARY END) UNION SELECT DISTINCT vt1.c0, vt0.c0, v0.c0 FROM v0, vt1, vt0 WHERE ((NOT (CASE WHEN (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))) THEN vt1.c0 WHEN ((((((((NULL)OR(v0.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)) THEN 1459199085 WHEN CASE WHEN v0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN '1747909162' THEN vt1.c0 END THEN (~ (v0.c0)) ELSE vt0.c0 COLLATE BINARY END))) UNION SELECT DISTINCT vt1.c0, vt0.c0, v0.c0 FROM v0, vt1, vt0 WHERE (((CASE WHEN (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))) THEN vt1.c0 WHEN ((((((((NULL)OR(v0.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)) THEN 1459199085 WHEN CASE WHEN v0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN '1747909162' THEN vt1.c0 END THEN (~ (v0.c0)) ELSE vt0.c0 COLLATE BINARY END) ISNULL));
SELECT DISTINCT vt1.c0, vt0.c0, v0.c0 FROM v0, vt1, vt0;
SELECT vt0.c0, v0.c0 FROM vt1, v0, vt0 GROUP BY vt0.c0, v0.c0;
SELECT ALL vt0.c0, v0.c0 FROM vt1, v0, vt0 WHERE (LIKE('1428216319', ((v0.c0) NOT NULL), '>')) GROUP BY vt0.c0, v0.c0 UNION SELECT vt0.c0, v0.c0 FROM vt1, v0, vt0 WHERE ((NOT (LIKE('1428216319', ((v0.c0) NOT NULL), '>')))) GROUP BY vt0.c0, v0.c0 UNION SELECT vt0.c0, v0.c0 FROM vt1, v0, vt0 WHERE (((LIKE('1428216319', ((v0.c0) NOT NULL), '>')) ISNULL)) GROUP BY vt0.c0, v0.c0;
SELECT vt0.c0, v0.c0 FROM vt1, v0, vt0 GROUP BY vt0.c0, v0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING COUNT(((COUNT(*)) BETWEEN (GROUP_CONCAT(COUNT(*))) AND (COUNT(*)))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(((COUNT(*)) BETWEEN (GROUP_CONCAT(COUNT(*))) AND (COUNT(*)))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT(((COUNT(*)) BETWEEN (GROUP_CONCAT(COUNT(*))) AND (COUNT(*))))) ISNULL);
SELECT vt0.c0, vt1.c0 FROM vt0 CROSS JOIN vt1 ON ((TRIM(vt1.c0, vt1.c0)) NOT NULL);
SELECT ALL vt0.c0, vt1.c0 FROM vt0 CROSS JOIN vt1 ON ((TRIM(vt1.c0, vt1.c0)) NOT NULL) WHERE (((CAST(0.44238615010147275 AS BLOB))IS((('')||(vt1.c0))))) UNION ALL SELECT ALL vt0.c0, vt1.c0 FROM vt0 CROSS JOIN vt1 ON ((TRIM(vt1.c0, vt1.c0)) NOT NULL) WHERE ((NOT (((CAST(0.44238615010147275 AS BLOB))IS((('')||(vt1.c0))))))) UNION ALL SELECT vt0.c0, vt1.c0 FROM vt0 CROSS JOIN vt1 ON ((TRIM(vt1.c0, vt1.c0)) NOT NULL) WHERE (((((CAST(0.44238615010147275 AS BLOB))IS((('')||(vt1.c0))))) ISNULL));
SELECT vt0.c0, vt1.c0 FROM vt0 CROSS JOIN vt1 ON ((TRIM(vt1.c0, vt1.c0)) NOT NULL);
SELECT DISTINCT * FROM vt0, v0;
SELECT DISTINCT * FROM vt0, v0 WHERE (0.6864317770350298) UNION SELECT DISTINCT * FROM vt0, v0 WHERE ((NOT (0.6864317770350298))) UNION SELECT DISTINCT * FROM vt0, v0 WHERE (((0.6864317770350298) ISNULL));
SELECT DISTINCT * FROM vt0, v0;
SELECT v0.c0, vt1.c0, vt0.c0 FROM v0 RIGHT OUTER JOIN vt0 ON ((v0.c0 COLLATE NOCASE)<=(((v0.c0)&(v0.c0)))) RIGHT OUTER JOIN vt1 ON ((((CASE WHEN NULL THEN vt0.c0 ELSE vt0.c0 END)OR(vt0.c0 COLLATE BINARY)))OR(CASE WHEN vt0.c0 THEN '' WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 END)) GROUP BY v0.c0, vt1.c0, vt0.c0;
SELECT ALL v0.c0, vt1.c0, vt0.c0 FROM v0 RIGHT OUTER JOIN vt0 ON ((v0.c0 COLLATE NOCASE)<=(((v0.c0)&(v0.c0)))) RIGHT OUTER JOIN vt1 ON ((((CASE WHEN NULL THEN vt0.c0 ELSE vt0.c0 END)OR(vt0.c0 COLLATE BINARY)))OR(CASE WHEN vt0.c0 THEN '' WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 END)) WHERE (vt0.c0) GROUP BY v0.c0, vt1.c0, vt0.c0 UNION SELECT v0.c0, vt1.c0, vt0.c0 FROM v0 RIGHT OUTER JOIN vt0 ON ((v0.c0 COLLATE NOCASE)<=(((v0.c0)&(v0.c0)))) RIGHT OUTER JOIN vt1 ON ((((CASE WHEN NULL THEN vt0.c0 ELSE vt0.c0 END)OR(vt0.c0 COLLATE BINARY)))OR(CASE WHEN vt0.c0 THEN '' WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 END)) WHERE ((NOT (vt0.c0))) GROUP BY v0.c0, vt1.c0, vt0.c0 UNION SELECT ALL v0.c0, vt1.c0, vt0.c0 FROM v0 RIGHT OUTER JOIN vt0 ON ((v0.c0 COLLATE NOCASE)<=(((v0.c0)&(v0.c0)))) RIGHT OUTER JOIN vt1 ON ((((CASE WHEN NULL THEN vt0.c0 ELSE vt0.c0 END)OR(vt0.c0 COLLATE BINARY)))OR(CASE WHEN vt0.c0 THEN '' WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 END)) WHERE (((vt0.c0) ISNULL)) GROUP BY v0.c0, vt1.c0, vt0.c0;
SELECT v0.c0, vt1.c0, vt0.c0 FROM v0 RIGHT OUTER JOIN vt0 ON ((v0.c0 COLLATE NOCASE)<=(((v0.c0)&(v0.c0)))) RIGHT OUTER JOIN vt1 ON ((((CASE WHEN NULL THEN vt0.c0 ELSE vt0.c0 END)OR(vt0.c0 COLLATE BINARY)))OR(CASE WHEN vt0.c0 THEN '' WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 END)) GROUP BY v0.c0, vt1.c0, vt0.c0;
SELECT vt1.c0, v0.c0 FROM vt1, v0 GROUP BY vt1.c0, v0.c0;
SELECT vt1.c0, v0.c0 FROM vt1, v0 GROUP BY vt1.c0, v0.c0 HAVING (((((v0.c0)OR(v0.c0)))OR(MIN(MIN(v0.c0)))) IN (COUNT(vt1.c0))) UNION ALL SELECT vt1.c0, v0.c0 FROM vt1, v0 GROUP BY vt1.c0, v0.c0 HAVING (NOT ((((((v0.c0)OR(v0.c0)))OR(MIN(MIN(v0.c0)))) IN (COUNT(vt1.c0))))) UNION ALL SELECT ALL vt1.c0, v0.c0 FROM vt1, v0 GROUP BY vt1.c0, v0.c0 HAVING (((((((v0.c0)OR(v0.c0)))OR(MIN(MIN(v0.c0)))) IN (COUNT(vt1.c0)))) ISNULL);
SELECT ALL * FROM v0;
SELECT * FROM v0 WHERE ((+ (UPPER(DISTINCT v0.c0)))) UNION ALL SELECT ALL * FROM v0 WHERE ((NOT ((+ (UPPER(DISTINCT v0.c0)))))) UNION ALL SELECT * FROM v0 WHERE ((((+ (UPPER(DISTINCT v0.c0)))) ISNULL));
SELECT ALL * FROM v0;
SELECT DISTINCT * FROM vt1, v0;
SELECT DISTINCT * FROM vt1, v0 WHERE (CASE WHEN ((vt1.c0)GLOB(v0.c0)) THEN '1068863400' ELSE 0Xffffffff81c9e0fa END) UNION SELECT DISTINCT * FROM vt1, v0 WHERE ((NOT (CASE WHEN ((vt1.c0)GLOB(v0.c0)) THEN '1068863400' ELSE 0xffffffff81c9e0fa END))) UNION SELECT DISTINCT * FROM vt1, v0 WHERE (((CASE WHEN ((vt1.c0)GLOB(v0.c0)) THEN '1068863400' ELSE 0Xffffffff81c9e0fa END) ISNULL));
SELECT DISTINCT * FROM vt1, v0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE (CASE (((NULL, x'', vt1.c0)) BETWEEN ((0.8325921044946938, vt1.c0, NULL)) AND ((vt1.c0, vt1.c0, vt1.c0)))  WHEN (- (vt1.c0)) THEN (+ (vt1.c0)) WHEN NULLIF(vt1.c0, vt1.c0) THEN IFNULL(vt1.c0, vt1.c0) WHEN vt1.c0 COLLATE RTRIM THEN CAST(vt1.c0 AS NUMERIC) WHEN ((vt1.c0) NOTNULL) THEN (((vt1.c0))>=((vt1.c0))) WHEN 1.0688634E9 THEN CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END ELSE (NOT (vt1.c0)) END) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT (CASE (((NULL, x'', vt1.c0)) BETWEEN ((0.8325921044946938, vt1.c0, NULL)) AND ((vt1.c0, vt1.c0, vt1.c0)))  WHEN (- (vt1.c0)) THEN (+ (vt1.c0)) WHEN NULLIF(vt1.c0, vt1.c0) THEN IFNULL(vt1.c0, vt1.c0) WHEN vt1.c0 COLLATE RTRIM THEN CAST(vt1.c0 AS NUMERIC) WHEN ((vt1.c0) NOTNULL) THEN (((vt1.c0))>=((vt1.c0))) WHEN 1.0688634E9 THEN CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END ELSE (NOT (vt1.c0)) END))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE (((CASE (((NULL, x'', vt1.c0)) BETWEEN ((0.8325921044946938, vt1.c0, NULL)) AND ((vt1.c0, vt1.c0, vt1.c0)))  WHEN (- (vt1.c0)) THEN (+ (vt1.c0)) WHEN NULLIF(vt1.c0, vt1.c0) THEN IFNULL(vt1.c0, vt1.c0) WHEN vt1.c0 COLLATE RTRIM THEN CAST(vt1.c0 AS NUMERIC) WHEN ((vt1.c0) NOTNULL) THEN (((vt1.c0))>=((vt1.c0))) WHEN 1.0688634E9 THEN CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END ELSE (NOT (vt1.c0)) END) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING v0.c0 UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (v0.c0)) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((v0.c0) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING v0.c0 UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (v0.c0)) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((v0.c0) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT * FROM vt0;
SELECT * FROM vt0 WHERE (json_array_length((~ (vt0.c0)))) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (json_array_length((~ (vt0.c0)))))) UNION ALL SELECT * FROM vt0 WHERE (((json_array_length((~ (vt0.c0)))) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT v0.c0 FROM vt0, vt1 INNER JOIN v0 ON CASE UNLIKELY(DISTINCT v0.c0)  WHEN 0.5956156081577303 COLLATE NOCASE THEN CAST(v0.c0 AS NUMERIC) ELSE vt0.c0 COLLATE BINARY END;
SELECT DISTINCT v0.c0 FROM vt0, vt1 INNER JOIN v0 ON CASE UNLIKELY(DISTINCT v0.c0)  WHEN 0.5956156081577303 COLLATE NOCASE THEN CAST(v0.c0 AS NUMERIC) ELSE vt0.c0 COLLATE BINARY END WHERE ((((CAST(vt1.c0 AS BLOB)))<>((LIKE(vt0.c0, v0.c0))))) UNION SELECT DISTINCT v0.c0 FROM vt0, vt1 INNER JOIN v0 ON CASE UNLIKELY(DISTINCT v0.c0)  WHEN 0.5956156081577303 COLLATE NOCASE THEN CAST(v0.c0 AS NUMERIC) ELSE vt0.c0 COLLATE BINARY END WHERE ((NOT ((((CAST(vt1.c0 AS BLOB)))!=((LIKE(vt0.c0, v0.c0))))))) UNION SELECT DISTINCT v0.c0 FROM vt0, vt1 INNER JOIN v0 ON CASE UNLIKELY(DISTINCT v0.c0)  WHEN 0.5956156081577303 COLLATE NOCASE THEN CAST(v0.c0 AS NUMERIC) ELSE vt0.c0 COLLATE BINARY END WHERE ((((((CAST(vt1.c0 AS BLOB)))<>((LIKE(vt0.c0, v0.c0))))) ISNULL));
SELECT DISTINCT v0.c0 FROM vt0, vt1 INNER JOIN v0 ON CASE UNLIKELY(DISTINCT v0.c0)  WHEN 0.5956156081577303 COLLATE NOCASE THEN CAST(v0.c0 AS NUMERIC) ELSE vt0.c0 COLLATE BINARY END;
SELECT ALL vt0.c0 FROM v0, vt0, vt1 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM v0, vt0, vt1 WHERE ((- (((vt0.c0)/(vt0.c0))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM v0, vt0, vt1 WHERE ((NOT ((- (((vt0.c0)/(vt0.c0))))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM v0, vt0, vt1 WHERE ((((- (((vt0.c0)/(vt0.c0))))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM v0, vt0, vt1 GROUP BY vt0.c0;
SELECT ALL vt0.c0, v0.c0, vt1.c0 FROM vt0, v0, vt1 GROUP BY vt0.c0, v0.c0, vt1.c0;
SELECT vt0.c0, v0.c0, vt1.c0 FROM vt0, v0, vt1 GROUP BY vt0.c0, v0.c0, vt1.c0 HAVING UPPER(DISTINCT MIN(COUNT(AVG(MAX(v0.c0))))) UNION ALL SELECT vt0.c0, v0.c0, vt1.c0 FROM vt0, v0, vt1 GROUP BY vt0.c0, v0.c0, vt1.c0 HAVING (NOT (UPPER(DISTINCT MIN(COUNT(AVG(MAX(v0.c0))))))) UNION ALL SELECT vt0.c0, v0.c0, vt1.c0 FROM vt0, v0, vt1 GROUP BY vt0.c0, v0.c0, vt1.c0 HAVING ((UPPER(DISTINCT MIN(COUNT(AVG(MAX(v0.c0)))))) ISNULL);
SELECT * FROM v0 LEFT OUTER JOIN vt1 ON ((CASE WHEN v0.c0 THEN vt1.c0 WHEN v0.c0 THEN vt1.c0 WHEN vt0.c0 THEN v0.c0 END)-(((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c0)))) INNER JOIN vt0 ON v0.c0;
SELECT DISTINCT vt1.c0, vt0.c0 FROM vt1, vt0;
SELECT DISTINCT vt1.c0, vt0.c0 FROM vt1, vt0 WHERE (CAST(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) AS BLOB)) UNION SELECT DISTINCT vt1.c0, vt0.c0 FROM vt1, vt0 WHERE ((NOT (CAST(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) AS BLOB)))) UNION SELECT DISTINCT vt1.c0, vt0.c0 FROM vt1, vt0 WHERE (((CAST(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) AS BLOB)) ISNULL));
SELECT DISTINCT vt1.c0, vt0.c0 FROM vt1, vt0;
SELECT ALL vt1.c0 FROM vt1, v0 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1, v0 WHERE (CASE WHEN NULL THEN (('') NOT BETWEEN (0Xffffffff878fcc0f) AND (vt1.c0)) WHEN (1840203646 IN ()) THEN ((((v0.c0)OR(vt1.c0)))AND(vt1.c0)) WHEN (((v0.c0))>=((v0.c0))) THEN (((v0.c0, vt1.c0, v0.c0))<((vt1.c0, vt1.c0, vt1.c0))) ELSE ((vt1.c0) ISNULL) END) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1, v0 WHERE ((NOT (CASE WHEN NULL THEN (('') NOT BETWEEN (0Xffffffff878fcc0f) AND (vt1.c0)) WHEN (1840203646 IN ()) THEN ((((v0.c0)OR(vt1.c0)))AND(vt1.c0)) WHEN (((v0.c0))>=((v0.c0))) THEN (((v0.c0, vt1.c0, v0.c0))<((vt1.c0, vt1.c0, vt1.c0))) ELSE ((vt1.c0) ISNULL) END))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1, v0 WHERE (((CASE WHEN NULL THEN (('') NOT BETWEEN (0Xffffffff878fcc0f) AND (vt1.c0)) WHEN (1840203646 IN ()) THEN ((((v0.c0)OR(vt1.c0)))AND(vt1.c0)) WHEN (((v0.c0))>=((v0.c0))) THEN (((v0.c0, vt1.c0, v0.c0))<((vt1.c0, vt1.c0, vt1.c0))) ELSE ((vt1.c0) ISNULL) END) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1, v0 GROUP BY vt1.c0;
SELECT v0.c0 FROM vt1 RIGHT OUTER JOIN v0 ON (((v0.c0))=((((vt1.c0) BETWEEN (vt1.c0) AND (v0.c0))))) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM vt1 RIGHT OUTER JOIN v0 ON (((v0.c0))==((((vt1.c0) BETWEEN (vt1.c0) AND (v0.c0))))) GROUP BY v0.c0 HAVING AVG(COUNT(v0.c0)) UNION ALL SELECT v0.c0 FROM vt1 RIGHT OUTER JOIN v0 ON (((v0.c0))=((((vt1.c0) BETWEEN (vt1.c0) AND (v0.c0))))) GROUP BY v0.c0 HAVING (NOT (AVG(COUNT(v0.c0)))) UNION ALL SELECT ALL v0.c0 FROM vt1 RIGHT OUTER JOIN v0 ON (((v0.c0))==((((vt1.c0) BETWEEN (vt1.c0) AND (v0.c0))))) GROUP BY v0.c0 HAVING ((AVG(COUNT(v0.c0))) ISNULL);
SELECT * FROM v0, vt1;
SELECT * FROM v0, vt1 WHERE (LENGTH(((vt1.c0) IS FALSE))) UNION ALL SELECT * FROM v0, vt1 WHERE ((NOT (LENGTH(((vt1.c0) IS FALSE))))) UNION ALL SELECT * FROM v0 NOT INDEXED, vt1 WHERE (((LENGTH(((vt1.c0) IS FALSE))) ISNULL));
SELECT * FROM v0, vt1;
SELECT DISTINCT * FROM vt0, v0, vt1 NOT INDEXED;
SELECT DISTINCT * FROM vt0, v0, vt1 WHERE ((((((vt1.c0)OR('')))OR(vt0.c0)) IN ())) UNION SELECT DISTINCT * FROM vt0, v0, vt1 WHERE ((NOT ((((((vt1.c0)OR('')))OR(vt0.c0)) IN ())))) UNION SELECT DISTINCT * FROM vt0, v0, vt1 WHERE ((((((((vt1.c0)OR('')))OR(vt0.c0)) IN ())) ISNULL));
SELECT DISTINCT * FROM vt0, v0, vt1 NOT INDEXED;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE (vt1.c0 COLLATE RTRIM) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (vt1.c0 COLLATE RTRIM))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE (((vt1.c0 COLLATE RTRIM) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt0.c0, vt1.c0 FROM vt0, v0, vt1 GROUP BY vt0.c0, vt1.c0;
SELECT vt0.c0, vt1.c0 FROM vt0, v0, vt1 GROUP BY vt0.c0, vt1.c0 HAVING SUM(json_quote(vt0.c0)) UNION ALL SELECT ALL vt0.c0, vt1.c0 FROM vt0, v0, vt1 GROUP BY vt0.c0, vt1.c0 HAVING (NOT (SUM(json_quote(vt0.c0)))) UNION ALL SELECT ALL vt0.c0, vt1.c0 FROM vt0, v0, vt1 GROUP BY vt0.c0, vt1.c0 HAVING ((SUM(json_quote(vt0.c0))) ISNULL);
SELECT ALL vt0.c0, vt1.c0 FROM vt0, v0, vt1 GROUP BY vt0.c0, vt1.c0;
SELECT vt0.c0, vt1.c0 FROM vt0, v0, vt1 GROUP BY vt0.c0, vt1.c0 HAVING SUM(json_quote(vt0.c0)) UNION ALL SELECT ALL vt0.c0, vt1.c0 FROM vt0, v0, vt1 GROUP BY vt0.c0, vt1.c0 HAVING (NOT (SUM(json_quote(vt0.c0)))) UNION ALL SELECT ALL vt0.c0, vt1.c0 FROM vt0, v0, vt1 GROUP BY vt0.c0, vt1.c0 HAVING ((SUM(json_quote(vt0.c0))) ISNULL);
SELECT ALL vt0.c0, vt1.c0 FROM vt0, v0, vt1 GROUP BY vt0.c0, vt1.c0;
SELECT ALL * FROM vt1;
SELECT ALL * FROM vt1 WHERE (CASE ((('lu붵!+q/', 0.7172174378132844, vt1.c0))>=((vt1.c0, vt1.c0, vt1.c0)))  WHEN (~ (0.09930311808877335)) THEN CAST(vt1.c0 AS INTEGER) ELSE ((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)) END) UNION ALL SELECT ALL * FROM vt1 WHERE ((NOT (CASE ((('lu붵!+q/', 0.7172174378132844, vt1.c0))>=((vt1.c0, vt1.c0, vt1.c0)))  WHEN (~ (0.09930311808877335)) THEN CAST(vt1.c0 AS INTEGER) ELSE ((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)) END))) UNION ALL SELECT ALL * FROM vt1 WHERE (((CASE ((('lu붵!+q/', 0.7172174378132844, vt1.c0))>=((vt1.c0, vt1.c0, vt1.c0)))  WHEN (~ (0.09930311808877335)) THEN CAST(vt1.c0 AS INTEGER) ELSE ((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)) END) ISNULL));
SELECT ALL * FROM vt1;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (((((v0.c0)==(v0.c0))) BETWEEN ((~ (v0.c0))) AND (v0.c0))) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (((((v0.c0)==(v0.c0))) BETWEEN ((~ (v0.c0))) AND (v0.c0))))) UNION SELECT DISTINCT * FROM v0 WHERE (((((((v0.c0)=(v0.c0))) BETWEEN ((~ (v0.c0))) AND (v0.c0))) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT vt1.c0, vt0.c0 FROM vt1 NATURAL JOIN vt0 GROUP BY vt1.c0, vt0.c0;
SELECT vt1.c0, vt0.c0 FROM vt1 NATURAL JOIN vt0 WHERE (((CAST(vt0.c0 AS NUMERIC))%(((vt1.c0) ISNULL)))) GROUP BY vt1.c0, vt0.c0 UNION SELECT ALL vt1.c0, vt0.c0 FROM vt1 NATURAL JOIN vt0 WHERE ((NOT (((CAST(vt0.c0 AS NUMERIC))%(((vt1.c0) ISNULL)))))) GROUP BY vt1.c0, vt0.c0 UNION SELECT ALL vt1.c0, vt0.c0 FROM vt1 NATURAL JOIN vt0 WHERE (((((CAST(vt0.c0 AS NUMERIC))%(((vt1.c0) ISNULL)))) ISNULL)) GROUP BY vt1.c0, vt0.c0;
SELECT vt1.c0, vt0.c0 FROM vt1 NATURAL JOIN vt0 GROUP BY vt1.c0, vt0.c0;
SELECT vt1.c0 FROM vt0, vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt0, vt1 GROUP BY vt1.c0 HAVING SUM(TOTAL(vt1.c0)) UNION ALL SELECT vt1.c0 FROM vt0, vt1 GROUP BY vt1.c0 HAVING (NOT (SUM(TOTAL(vt1.c0)))) UNION ALL SELECT ALL vt1.c0 FROM vt0, vt1 GROUP BY vt1.c0 HAVING ((SUM(TOTAL(vt1.c0))) ISNULL);
SELECT ALL * FROM v0 RIGHT OUTER JOIN vt1 ON (((vt0.c0)) NOT BETWEEN ((v0.c0 COLLATE RTRIM)) AND (((((vt1.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) FULL OUTER JOIN vt0 ON (((vt0.c0, v0.c0, vt0.c0)) BETWEEN ((((vt0.c0) NOT NULL), (+ (v0.c0)), x'')) AND ((v0.c0, ((vt0.c0)>=(vt0.c0)), 2.49034845E8)));
SELECT DISTINCT * FROM v0, vt1 NATURAL JOIN vt0;
SELECT DISTINCT * FROM v0, vt1 NATURAL JOIN vt0 WHERE ((vt0.c0 IN ()) COLLATE RTRIM) UNION SELECT DISTINCT * FROM v0, vt1 NATURAL JOIN vt0 WHERE ((NOT ((vt0.c0 IN ()) COLLATE RTRIM))) UNION SELECT DISTINCT * FROM v0, vt1 NATURAL JOIN vt0 WHERE ((((vt0.c0 IN ()) COLLATE RTRIM) ISNULL));
SELECT DISTINCT * FROM v0, vt1 NATURAL JOIN vt0;
SELECT vt1.c0, v0.c0, vt0.c0 FROM v0, vt0, vt1 GROUP BY vt1.c0, v0.c0, vt0.c0;
SELECT vt1.c0, v0.c0, vt0.c0 FROM v0, vt0, vt1 WHERE (((-1095564515 COLLATE NOCASE)>((vt0.c0 IN ())))) GROUP BY vt1.c0, v0.c0, vt0.c0 UNION SELECT vt1.c0, v0.c0, vt0.c0 FROM v0, vt0, vt1 WHERE ((NOT (((-1095564515 COLLATE NOCASE)>((vt0.c0 IN ())))))) GROUP BY vt1.c0, v0.c0, vt0.c0 UNION SELECT vt1.c0, v0.c0, vt0.c0 FROM v0, vt0, vt1 WHERE (((((-1095564515 COLLATE NOCASE)>((vt0.c0 IN ())))) ISNULL)) GROUP BY vt1.c0, v0.c0, vt0.c0;
SELECT vt1.c0, v0.c0, vt0.c0 FROM v0, vt0, vt1 GROUP BY vt1.c0, v0.c0, vt0.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING vt1.c0 UNION ALL SELECT ALL vt1.c0 FROM vt1 NOT INDEXED GROUP BY vt1.c0 HAVING (NOT (vt1.c0)) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((vt1.c0) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING vt1.c0 UNION ALL SELECT ALL vt1.c0 FROM vt1 NOT INDEXED GROUP BY vt1.c0 HAVING (NOT (vt1.c0)) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((vt1.c0) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT * FROM vt0, v0, vt1;
SELECT * FROM vt0, v0, vt1 WHERE (((NULL) IS FALSE) COLLATE RTRIM) UNION ALL SELECT ALL * FROM vt0, v0, vt1 WHERE ((NOT (((NULL) IS FALSE) COLLATE RTRIM))) UNION ALL SELECT ALL * FROM vt0, v0, vt1 WHERE (((((NULL) IS FALSE) COLLATE RTRIM) ISNULL));
SELECT * FROM vt0, v0, vt1;
SELECT DISTINCT vt0.c0 FROM vt0 INNER JOIN v0 ON ((((v0.c0)>=(v0.c0))) NOT BETWEEN ((vt0.c0 IN (v0.c0))) AND (vt0.c0));
SELECT DISTINCT vt0.c0 FROM vt0 INNER JOIN v0 ON ((((v0.c0)>=(v0.c0))) NOT BETWEEN ((vt0.c0 IN (v0.c0))) AND (vt0.c0)) WHERE (((((((v0.c0)!=(NULL)))OR(0.7486544004689957)))OR(((((v0.c0)AND(v0.c0)))OR(vt0.c0))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 INNER JOIN v0 ON ((((v0.c0)>=(v0.c0))) NOT BETWEEN ((vt0.c0 IN (v0.c0))) AND (vt0.c0)) WHERE ((NOT (((((((v0.c0)<>(NULL)))OR(0.7486544004689957)))OR(((((v0.c0)AND(v0.c0)))OR(vt0.c0))))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 INNER JOIN v0 ON ((((v0.c0)>=(v0.c0))) NOT BETWEEN ((vt0.c0 IN (v0.c0))) AND (vt0.c0)) WHERE (((((((((v0.c0)!=(NULL)))OR(0.7486544004689957)))OR(((((v0.c0)AND(v0.c0)))OR(vt0.c0))))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0 INNER JOIN v0 ON ((((v0.c0)>=(v0.c0))) NOT BETWEEN ((vt0.c0 IN (v0.c0))) AND (vt0.c0));
SELECT ALL vt1.c0 FROM vt0, vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt0, vt1 WHERE (0.33237765127256635) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt0, vt1 WHERE ((NOT (0.33237765127256635))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt0, vt1 WHERE (((0.33237765127256635) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt0, vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0, v0.c0 FROM vt1 NOT INDEXED RIGHT OUTER JOIN v0 ON ((CAST(v0.c0 AS NUMERIC))/(((vt1.c0)IS NOT(0.15313232529626386)))) GROUP BY vt1.c0, v0.c0;
SELECT ALL vt1.c0, v0.c0 FROM vt1 RIGHT OUTER JOIN v0 ON ((CAST(v0.c0 AS NUMERIC))/(((vt1.c0)IS NOT(0.15313232529626386)))) GROUP BY vt1.c0, v0.c0 HAVING (MIN(SUM(vt1.c0)) IN ()) UNION ALL SELECT vt1.c0, v0.c0 FROM vt1 RIGHT OUTER JOIN v0 ON ((CAST(v0.c0 AS NUMERIC))/(((vt1.c0)IS NOT(0.15313232529626386)))) GROUP BY vt1.c0, v0.c0 HAVING (NOT ((MIN(SUM(vt1.c0)) IN ()))) UNION ALL SELECT vt1.c0, v0.c0 FROM vt1 RIGHT OUTER JOIN v0 ON ((CAST(v0.c0 AS NUMERIC))/(((vt1.c0)IS NOT(0.15313232529626386)))) GROUP BY vt1.c0, v0.c0 HAVING (((MIN(SUM(vt1.c0)) IN ())) ISNULL);
SELECT ALL vt1.c0, v0.c0 FROM vt1 NOT INDEXED RIGHT OUTER JOIN v0 ON ((CAST(v0.c0 AS NUMERIC))/(((vt1.c0)IS NOT(0.15313232529626386)))) GROUP BY vt1.c0, v0.c0;
SELECT ALL vt1.c0, v0.c0 FROM vt1 RIGHT OUTER JOIN v0 ON ((CAST(v0.c0 AS NUMERIC))/(((vt1.c0)IS NOT(0.15313232529626386)))) GROUP BY vt1.c0, v0.c0 HAVING (MIN(SUM(vt1.c0)) IN ()) UNION ALL SELECT vt1.c0, v0.c0 FROM vt1 RIGHT OUTER JOIN v0 ON ((CAST(v0.c0 AS NUMERIC))/(((vt1.c0)IS NOT(0.15313232529626386)))) GROUP BY vt1.c0, v0.c0 HAVING (NOT ((MIN(SUM(vt1.c0)) IN ()))) UNION ALL SELECT vt1.c0, v0.c0 FROM vt1 RIGHT OUTER JOIN v0 ON ((CAST(v0.c0 AS NUMERIC))/(((vt1.c0)IS NOT(0.15313232529626386)))) GROUP BY vt1.c0, v0.c0 HAVING (((MIN(SUM(vt1.c0)) IN ())) ISNULL);
SELECT ALL vt1.c0, v0.c0 FROM vt1 NOT INDEXED RIGHT OUTER JOIN v0 ON ((CAST(v0.c0 AS NUMERIC))/(((vt1.c0)IS NOT(0.15313232529626386)))) GROUP BY vt1.c0, v0.c0;
SELECT ALL * FROM vt0, v0, vt1;
SELECT ALL * FROM vt0, v0, vt1 WHERE (TRIM(vt1.c0)) UNION ALL SELECT ALL * FROM vt0, v0, vt1 WHERE ((NOT (TRIM(vt1.c0)))) UNION ALL SELECT * FROM vt0, v0, vt1 WHERE (((TRIM(vt1.c0)) ISNULL));
SELECT ALL * FROM vt0, v0, vt1;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((((vt0.c0)|(vt0.c0))) NOTNULL)) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((((vt0.c0)|(vt0.c0))) NOTNULL)))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((((vt0.c0)|(vt0.c0))) NOTNULL)) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT vt1.c0, vt0.c0, v0.c0 FROM vt0, vt1 LEFT OUTER JOIN v0 ON ((((v0.c0) ISNULL)) NOT BETWEEN (vt1.c0 COLLATE NOCASE) AND ((v0.c0 IN ()))) GROUP BY vt1.c0, vt0.c0, v0.c0;
SELECT ALL vt1.c0, vt0.c0, v0.c0 FROM vt0, vt1 LEFT OUTER JOIN v0 ON ((((v0.c0) ISNULL)) NOT BETWEEN (vt1.c0 COLLATE NOCASE) AND ((v0.c0 IN ()))) WHERE (((((((v0.c0)>(vt0.c0)))OR(((v0.c0) NOTNULL))))OR(((((v0.c0)OR(v0.c0)))OR(v0.c0))))) GROUP BY vt1.c0, vt0.c0, v0.c0 UNION SELECT vt1.c0, vt0.c0, v0.c0 FROM vt0, vt1 NOT INDEXED LEFT OUTER JOIN v0 ON ((((v0.c0) ISNULL)) NOT BETWEEN (vt1.c0 COLLATE NOCASE) AND ((v0.c0 IN ()))) WHERE ((NOT (((((((v0.c0)>(vt0.c0)))OR(((v0.c0) NOTNULL))))OR(((((v0.c0)OR(v0.c0)))OR(v0.c0))))))) GROUP BY vt1.c0, vt0.c0, v0.c0 UNION SELECT ALL vt1.c0, vt0.c0, v0.c0 FROM vt0, vt1 LEFT OUTER JOIN v0 ON ((((v0.c0) ISNULL)) NOT BETWEEN (vt1.c0 COLLATE NOCASE) AND ((v0.c0 IN ()))) WHERE (((((((((v0.c0)>(vt0.c0)))OR(((v0.c0) NOTNULL))))OR(((((v0.c0)OR(v0.c0)))OR(v0.c0))))) ISNULL)) GROUP BY vt1.c0, vt0.c0, v0.c0;
SELECT vt1.c0, vt0.c0, v0.c0 FROM vt0, vt1 LEFT OUTER JOIN v0 ON ((((v0.c0) ISNULL)) NOT BETWEEN (vt1.c0 COLLATE NOCASE) AND ((v0.c0 IN ()))) GROUP BY vt1.c0, vt0.c0, v0.c0;
SELECT ALL vt1.c0, vt0.c0, v0.c0 FROM vt1, v0, vt0 GROUP BY vt1.c0, vt0.c0, v0.c0;
SELECT vt1.c0, vt0.c0, v0.c0 FROM vt1, v0, vt0 GROUP BY vt1.c0, vt0.c0, v0.c0 HAVING AVG(((COUNT(MIN(vt0.c0)))<<(SUM(v0.c0)))) UNION ALL SELECT vt1.c0, vt0.c0, v0.c0 FROM vt1, v0, vt0 GROUP BY vt1.c0, vt0.c0, v0.c0 HAVING (NOT (AVG(((COUNT(MIN(vt0.c0)))<<(SUM(v0.c0)))))) UNION ALL SELECT vt1.c0, vt0.c0, v0.c0 FROM vt1, v0, vt0 GROUP BY vt1.c0, vt0.c0, v0.c0 HAVING ((AVG(((COUNT(MIN(vt0.c0)))<<(SUM(v0.c0))))) ISNULL);
SELECT ALL * FROM vt0, vt1, v0;
SELECT * FROM vt0, vt1, v0 WHERE (((((vt1.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))) IN ())) UNION ALL SELECT * FROM vt0, vt1, v0 WHERE ((NOT (((((vt1.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))) IN ())))) UNION ALL SELECT * FROM vt0, vt1, v0 WHERE (((((((vt1.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))) IN ())) ISNULL));
SELECT ALL * FROM vt0, vt1, v0;
SELECT DISTINCT vt1.c0, vt0.c0 FROM vt0 LEFT OUTER JOIN vt1 ON CAST(x'' AS NUMERIC);
SELECT DISTINCT vt1.c0, vt0.c0 FROM vt0 LEFT OUTER JOIN vt1 ON CAST(x'' AS NUMERIC) WHERE (TRIM((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((x''))), vt1.c0 COLLATE RTRIM)) UNION SELECT DISTINCT vt1.c0, vt0.c0 FROM vt0 LEFT OUTER JOIN vt1 ON CAST(x'' AS NUMERIC) WHERE ((NOT (TRIM((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((x''))), vt1.c0 COLLATE RTRIM)))) UNION SELECT DISTINCT vt1.c0, vt0.c0 FROM vt0 LEFT OUTER JOIN vt1 ON CAST(x'' AS NUMERIC) WHERE (((TRIM((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((x''))), vt1.c0 COLLATE RTRIM)) ISNULL));
SELECT DISTINCT vt1.c0, vt0.c0 FROM vt0 LEFT OUTER JOIN vt1 ON CAST(x'' AS NUMERIC);
SELECT ALL v0.c0, vt0.c0, vt1.c0 FROM vt1, vt0, v0 GROUP BY v0.c0, vt0.c0, vt1.c0;
SELECT ALL v0.c0, vt0.c0, vt1.c0 FROM vt1, vt0, v0 WHERE (((NULL)>>('?6'))) GROUP BY v0.c0, vt0.c0, vt1.c0 UNION SELECT v0.c0, vt0.c0, vt1.c0 FROM vt1, vt0, v0 WHERE ((NOT (((NULL)>>('?6'))))) GROUP BY v0.c0, vt0.c0, vt1.c0 UNION SELECT ALL v0.c0, vt0.c0, vt1.c0 FROM vt1, vt0, v0 WHERE (((((NULL)>>('?6'))) ISNULL)) GROUP BY v0.c0, vt0.c0, vt1.c0;
SELECT ALL v0.c0, vt0.c0, vt1.c0 FROM vt1, vt0, v0 GROUP BY v0.c0, vt0.c0, vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING NULL UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (NULL)) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((NULL) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING NULL UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (NULL)) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((NULL) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL * FROM v0, vt0, vt1;
SELECT * FROM v0, vt0, vt1 WHERE (vt1.c0) UNION ALL SELECT ALL * FROM v0, vt0, vt1 WHERE ((NOT (vt1.c0))) UNION ALL SELECT ALL * FROM v0, vt0, vt1 WHERE (((vt1.c0) ISNULL));
SELECT ALL * FROM v0, vt0, vt1;
SELECT DISTINCT * FROM v0, vt1, vt0;
SELECT DISTINCT * FROM v0, vt1, vt0 WHERE (('GG3MM1_nX' IN (((vt1.c0) BETWEEN (v0.c0) AND (NULL)), 1459199085))) UNION SELECT DISTINCT * FROM v0, vt1, vt0 WHERE ((NOT (('GG3MM1_nX' IN (((vt1.c0) BETWEEN (v0.c0) AND (NULL)), 1459199085))))) UNION SELECT DISTINCT * FROM v0, vt1, vt0 WHERE (((('GG3MM1_nX' IN (((vt1.c0) BETWEEN (v0.c0) AND (NULL)), 1459199085))) ISNULL));
SELECT DISTINCT * FROM v0, vt1, vt0;
SELECT ALL vt0.c0 FROM vt0, v0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, v0 WHERE (((((v0.c0)AND(v0.c0)))AND(v0.c0)) COLLATE BINARY) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0, v0 WHERE ((NOT (((((v0.c0)AND(v0.c0)))AND(v0.c0)) COLLATE BINARY))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0, v0 WHERE (((((((v0.c0)AND(v0.c0)))AND(v0.c0)) COLLATE BINARY) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, v0 GROUP BY vt0.c0;
SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0;
SELECT vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0 HAVING SUM('') UNION ALL SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0 HAVING (NOT (SUM(''))) UNION ALL SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0 HAVING ((SUM('')) ISNULL);
SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0;
SELECT vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0 HAVING SUM('') UNION ALL SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0 HAVING (NOT (SUM(''))) UNION ALL SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0 HAVING ((SUM('')) ISNULL);
SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0;
SELECT ALL * FROM vt1 CROSS JOIN v0 ON ((((v0.c0)) BETWEEN ((v0.c0)) AND ((vt1.c0))) IN ());
SELECT ALL * FROM vt1 CROSS JOIN v0 ON ((((v0.c0)) BETWEEN ((v0.c0)) AND ((vt1.c0))) IN ()) WHERE (LTRIM(((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)), (v0.c0 IN ()))) UNION ALL SELECT * FROM vt1 CROSS JOIN v0 ON ((((v0.c0)) BETWEEN ((v0.c0)) AND ((vt1.c0))) IN ()) WHERE ((NOT (LTRIM(((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)), (v0.c0 IN ()))))) UNION ALL SELECT ALL * FROM vt1 CROSS JOIN v0 ON ((((v0.c0)) BETWEEN ((v0.c0)) AND ((vt1.c0))) IN ()) WHERE (((LTRIM(((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)), (v0.c0 IN ()))) ISNULL));
SELECT ALL * FROM vt1 CROSS JOIN v0 ON ((((v0.c0)) BETWEEN ((v0.c0)) AND ((vt1.c0))) IN ());
SELECT DISTINCT v0.c0, vt1.c0 FROM vt1, vt0 FULL OUTER JOIN v0 ON vt1.c0;
SELECT DISTINCT v0.c0, vt1.c0 FROM vt1, vt0 FULL OUTER JOIN v0 ON vt1.c0 WHERE (json_extract(CASE WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c0 END, ((vt0.c0) BETWEEN (v0.c0) AND (vt1.c0)))) UNION SELECT DISTINCT v0.c0, vt1.c0 FROM vt1, vt0 FULL OUTER JOIN v0 ON vt1.c0 WHERE ((NOT (json_extract(CASE WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c0 END, ((vt0.c0) BETWEEN (v0.c0) AND (vt1.c0)))))) UNION SELECT DISTINCT v0.c0, vt1.c0 FROM vt1, vt0 FULL OUTER JOIN v0 ON vt1.c0 WHERE (((json_extract(CASE WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c0 END, ((vt0.c0) BETWEEN (v0.c0) AND (vt1.c0)))) ISNULL));
SELECT ALL vt0.c0 FROM vt1, v0, vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt1, v0, vt0 WHERE (((vt0.c0) NOT BETWEEN (x'') AND (vt1.c0)) COLLATE RTRIM) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt1, v0, vt0 WHERE ((NOT (((vt0.c0) NOT BETWEEN (x'') AND (vt1.c0)) COLLATE RTRIM))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt1, v0, vt0 WHERE (((((vt0.c0) NOT BETWEEN (x'') AND (vt1.c0)) COLLATE RTRIM) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt1, v0, vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 INNER JOIN v0 ON ((vt1.c0) ISNULL) COLLATE RTRIM CROSS JOIN vt1 ON ((((v0.c0) IS TRUE))||(v0.c0)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 INNER JOIN v0 ON ((vt1.c0) ISNULL) COLLATE RTRIM CROSS JOIN vt1 ON ((((v0.c0) IS TRUE))||(v0.c0)) GROUP BY vt0.c0 HAVING MAX(CASE SUM(v0.c0)  WHEN vt0.c0 THEN vt1.c0 ELSE AVG(TOTAL(vt0.c0)) END) UNION ALL SELECT ALL vt0.c0 FROM vt0 INNER JOIN v0 ON ((vt1.c0) ISNULL) COLLATE RTRIM CROSS JOIN vt1 ON ((((v0.c0) IS TRUE))||(v0.c0)) GROUP BY vt0.c0 HAVING (NOT (MAX(CASE SUM(v0.c0)  WHEN vt0.c0 THEN vt1.c0 ELSE AVG(TOTAL(vt0.c0)) END))) UNION ALL SELECT vt0.c0 FROM vt0 INNER JOIN v0 ON ((vt1.c0) ISNULL) COLLATE RTRIM CROSS JOIN vt1 ON ((((v0.c0) IS TRUE))||(v0.c0)) GROUP BY vt0.c0 HAVING ((MAX(CASE SUM(v0.c0)  WHEN vt0.c0 THEN vt1.c0 ELSE AVG(TOTAL(vt0.c0)) END)) ISNULL);
SELECT vt0.c0, vt1.c0 FROM vt0, vt1;
SELECT vt0.c0, vt1.c0 FROM vt0, vt1 WHERE (CAST(((((vt0.c0)AND(vt1.c0)))OR(vt0.c0)) AS BLOB)) UNION ALL SELECT vt0.c0, vt1.c0 FROM vt0, vt1 WHERE ((NOT (CAST(((((vt0.c0)AND(vt1.c0)))OR(vt0.c0)) AS BLOB)))) UNION ALL SELECT ALL vt0.c0, vt1.c0 FROM vt0, vt1 WHERE (((CAST(((((vt0.c0)AND(vt1.c0)))OR(vt0.c0)) AS BLOB)) ISNULL));
SELECT vt0.c0, vt1.c0 FROM vt0, vt1;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 NOT INDEXED WHERE (((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))-((vt1.c0 IN ())))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT (((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))-((vt1.c0 IN ())))))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))-((vt1.c0 IN ())))) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT ALL vt1.c0 FROM vt0 NOT INDEXED, vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt0, vt1 WHERE (CAST(vt0.c0 AS INTEGER)) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt0, vt1 WHERE ((NOT (CAST(vt0.c0 AS INTEGER)))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt0, vt1 WHERE (((CAST(vt0.c0 AS INTEGER)) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt0 NOT INDEXED, vt1 GROUP BY vt1.c0;
SELECT ALL v0.c0, vt1.c0, vt0.c0 FROM vt1 FULL OUTER JOIN v0 ON CAST(v0.c0 COLLATE RTRIM AS NUMERIC) FULL OUTER JOIN vt0 ON LIKELIHOOD(DISTINCT (((('-1363793328')OR(vt1.c0)))AND(v0.c0)), 0.5858196679489788) GROUP BY v0.c0, vt1.c0, vt0.c0;
SELECT v0.c0, vt1.c0, vt0.c0 FROM vt1 FULL OUTER JOIN v0 ON CAST(v0.c0 COLLATE RTRIM AS NUMERIC) FULL OUTER JOIN vt0 ON LIKELIHOOD(DISTINCT (((('-1363793328')OR(vt1.c0)))AND(v0.c0)), 0.5858196679489788) GROUP BY v0.c0, vt1.c0, vt0.c0 HAVING (((vt0.c0, v0.c0, TOTAL(TOTAL(vt0.c0)))) BETWEEN ((CASE v0.c0  WHEN MAX(vt1.c0) THEN MAX(TOTAL(v0.c0)) ELSE COUNT(*) END, CASE ''  WHEN AVG(vt1.c0) THEN MIN(vt1.c0) END, ((SUM(TOTAL(COUNT(*)))) ISNULL))) AND ((SQLITE_VERSION(), ((v0.c0)IS(GROUP_CONCAT(v0.c0))), AVG(NULL)))) UNION ALL SELECT ALL v0.c0, vt1.c0, vt0.c0 FROM vt1 FULL OUTER JOIN v0 ON CAST(v0.c0 COLLATE RTRIM AS NUMERIC) FULL OUTER JOIN vt0 ON LIKELIHOOD(DISTINCT (((('-1363793328')OR(vt1.c0)))AND(v0.c0)), 0.5858196679489788) GROUP BY v0.c0, vt1.c0, vt0.c0 HAVING (NOT ((((vt0.c0, v0.c0, TOTAL(TOTAL(vt0.c0)))) BETWEEN ((CASE v0.c0  WHEN MAX(vt1.c0) THEN MAX(TOTAL(v0.c0)) ELSE COUNT(*) END, CASE ''  WHEN AVG(vt1.c0) THEN MIN(vt1.c0) END, ((SUM(TOTAL(COUNT(*)))) ISNULL))) AND ((SQLITE_VERSION(), ((v0.c0)IS(GROUP_CONCAT(v0.c0))), AVG(NULL)))))) UNION ALL SELECT v0.c0, vt1.c0, vt0.c0 FROM vt1 FULL OUTER JOIN v0 ON CAST(v0.c0 COLLATE RTRIM AS NUMERIC) FULL OUTER JOIN vt0 ON LIKELIHOOD(DISTINCT (((('-1363793328')OR(vt1.c0)))AND(v0.c0)), 0.5858196679489788) GROUP BY v0.c0, vt1.c0, vt0.c0 HAVING (((((vt0.c0, v0.c0, TOTAL(TOTAL(vt0.c0)))) BETWEEN ((CASE v0.c0  WHEN MAX(vt1.c0) THEN MAX(TOTAL(v0.c0)) ELSE COUNT(*) END, CASE ''  WHEN AVG(vt1.c0) THEN MIN(vt1.c0) END, ((SUM(TOTAL(COUNT(*)))) ISNULL))) AND ((SQLITE_VERSION(), ((v0.c0)IS(GROUP_CONCAT(v0.c0))), AVG(NULL))))) ISNULL);
SELECT ALL * FROM vt0 NATURAL JOIN vt1;
SELECT ALL * FROM vt0 NATURAL JOIN vt1 WHERE ((((vt1.c0)) NOT BETWEEN ((CASE WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c0 END)) AND (((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt0.c0))))))) UNION ALL SELECT ALL * FROM vt0 NATURAL JOIN vt1 WHERE ((NOT ((((vt1.c0)) NOT BETWEEN ((CASE WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c0 END)) AND (((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt0.c0))))))))) UNION ALL SELECT ALL * FROM vt0 NATURAL JOIN vt1 WHERE ((((((vt1.c0)) NOT BETWEEN ((CASE WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c0 END)) AND (((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt0.c0))))))) ISNULL));
SELECT ALL * FROM vt0 NATURAL JOIN vt1;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE (CASE WHEN ((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)) THEN TYPEOF(DISTINCT vt1.c0) ELSE ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) END) UNION SELECT DISTINCT vt1.c0 FROM vt1 NOT INDEXED WHERE ((NOT (CASE WHEN ((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)) THEN TYPEOF(DISTINCT vt1.c0) ELSE ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) END))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((CASE WHEN ((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)) THEN TYPEOF(DISTINCT vt1.c0) ELSE ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) END) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0;
SELECT vt0.c0, v0.c0 FROM vt0, v0 WHERE ((CAST(vt0.c0 AS BLOB) IN ())) GROUP BY vt0.c0, v0.c0 UNION SELECT vt0.c0, v0.c0 FROM vt0, v0 WHERE ((NOT ((CAST(vt0.c0 AS BLOB) IN ())))) GROUP BY vt0.c0, v0.c0 UNION SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 WHERE ((((CAST(vt0.c0 AS BLOB) IN ())) ISNULL)) GROUP BY vt0.c0, v0.c0;
SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING COUNT(COUNT(AVG(MAX(SUM(vt0.c0))))) COLLATE NOCASE UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(COUNT(AVG(MAX(SUM(vt0.c0))))) COLLATE NOCASE)) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT(COUNT(AVG(MAX(SUM(vt0.c0))))) COLLATE NOCASE) ISNULL);
SELECT ALL vt1.c0 FROM v0, vt1;
SELECT vt1.c0 FROM v0, vt1 WHERE (x'') UNION ALL SELECT ALL vt1.c0 FROM v0, vt1 WHERE ((NOT (x''))) UNION ALL SELECT vt1.c0 FROM v0, vt1 WHERE (((x'') ISNULL));
SELECT ALL vt1.c0 FROM v0, vt1;
SELECT DISTINCT v0.c0 FROM v0 FULL OUTER JOIN vt1 ON ((((((((((((((((v0.c0)AND(v0.c0)))AND(vt1.c0)))OR(v0.c0)))AND('')))AND(((((v0.c0)OR(vt1.c0)))AND(vt1.c0)))))AND(v0.c0)))AND((((vt1.c0, vt1.c0, v0.c0))>=((x'', vt1.c0, v0.c0))))))OR(CASE WHEN vt1.c0 THEN vt1.c0 ELSE NULL END));
SELECT DISTINCT v0.c0 FROM v0 FULL OUTER JOIN vt1 ON ((((((((((((((((v0.c0)AND(v0.c0)))AND(vt1.c0)))OR(v0.c0)))AND('')))AND(((((v0.c0)OR(vt1.c0)))AND(vt1.c0)))))AND(v0.c0)))AND((((vt1.c0, vt1.c0, v0.c0))>=((x'', vt1.c0, v0.c0))))))OR(CASE WHEN vt1.c0 THEN vt1.c0 ELSE NULL END)) WHERE (0.7776847145915707) UNION SELECT DISTINCT v0.c0 FROM v0 FULL OUTER JOIN vt1 ON ((((((((((((((((v0.c0)AND(v0.c0)))AND(vt1.c0)))OR(v0.c0)))AND('')))AND(((((v0.c0)OR(vt1.c0)))AND(vt1.c0)))))AND(v0.c0)))AND((((vt1.c0, vt1.c0, v0.c0))>=((x'', vt1.c0, v0.c0))))))OR(CASE WHEN vt1.c0 THEN vt1.c0 ELSE NULL END)) WHERE ((NOT (0.7776847145915707))) UNION SELECT DISTINCT v0.c0 FROM v0 FULL OUTER JOIN vt1 ON ((((((((((((((((v0.c0)AND(v0.c0)))AND(vt1.c0)))OR(v0.c0)))AND('')))AND(((((v0.c0)OR(vt1.c0)))AND(vt1.c0)))))AND(v0.c0)))AND((((vt1.c0, vt1.c0, v0.c0))>=((x'', vt1.c0, v0.c0))))))OR(CASE WHEN vt1.c0 THEN vt1.c0 ELSE NULL END)) WHERE (((0.7776847145915707) ISNULL));
SELECT DISTINCT v0.c0 FROM v0 FULL OUTER JOIN vt1 ON ((((((((((((((((v0.c0)AND(v0.c0)))AND(vt1.c0)))OR(v0.c0)))AND('')))AND(((((v0.c0)OR(vt1.c0)))AND(vt1.c0)))))AND(v0.c0)))AND((((vt1.c0, vt1.c0, v0.c0))>=((x'', vt1.c0, v0.c0))))))OR(CASE WHEN vt1.c0 THEN vt1.c0 ELSE NULL END));
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE (((vt1.c0) IS FALSE) COLLATE NOCASE) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (((vt1.c0) IS FALSE) COLLATE NOCASE))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE (((((vt1.c0) IS FALSE) COLLATE NOCASE) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0;
SELECT v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0 HAVING GROUP_CONCAT(AVG(COUNT(*))) UNION ALL SELECT v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0 HAVING (NOT (GROUP_CONCAT(AVG(COUNT(*))))) UNION ALL SELECT v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0 HAVING ((GROUP_CONCAT(AVG(COUNT(*)))) ISNULL);
SELECT vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE (((NULL) NOT NULL)) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (((NULL) NOT NULL)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE (((((NULL) NOT NULL)) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (CAST(((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)) AS NUMERIC)) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (CAST(((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)) AS NUMERIC)))) UNION SELECT DISTINCT * FROM vt0 WHERE (((CAST(((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)) AS NUMERIC)) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c0;
SELECT ALL vt1.c0, vt0.c0 FROM vt0, vt1 WHERE (((((vt0.c0)%(vt1.c0))) BETWEEN (((vt0.c0)/(vt0.c0))) AND (((0X5c8966d1)!=(vt1.c0))))) GROUP BY vt1.c0, vt0.c0 UNION SELECT vt1.c0, vt0.c0 FROM vt0, vt1 WHERE ((NOT (((((vt0.c0)%(vt1.c0))) BETWEEN (((vt0.c0)/(vt0.c0))) AND (((0X5c8966d1)!=(vt1.c0))))))) GROUP BY vt1.c0, vt0.c0 UNION SELECT ALL vt1.c0, vt0.c0 FROM vt0, vt1 WHERE (((((((vt0.c0)%(vt1.c0))) BETWEEN (((vt0.c0)/(vt0.c0))) AND (((0x5c8966d1)!=(vt1.c0))))) ISNULL)) GROUP BY vt1.c0, vt0.c0;
SELECT ALL vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c0;
SELECT v0.c0 FROM v0, vt0, vt1 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0, vt0, vt1 GROUP BY v0.c0 HAVING MIN(MIN(MAX(TOTAL(MIN(SUM(MIN(SUM(v0.c0)))))))) UNION ALL SELECT v0.c0 FROM v0, vt0, vt1 GROUP BY v0.c0 HAVING (NOT (MIN(MIN(MAX(TOTAL(MIN(SUM(MIN(SUM(v0.c0)))))))))) UNION ALL SELECT ALL v0.c0 FROM v0, vt0, vt1 GROUP BY v0.c0 HAVING ((MIN(MIN(MAX(TOTAL(MIN(SUM(MIN(SUM(v0.c0))))))))) ISNULL);
SELECT ALL * FROM vt0 CROSS JOIN v0 ON 0.5451835390865124;
SELECT * FROM vt0 CROSS JOIN v0 ON 0.5451835390865124 WHERE (((((v0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0))) IS TRUE)) UNION ALL SELECT ALL * FROM vt0 CROSS JOIN v0 ON 0.5451835390865124 WHERE ((NOT (((((v0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0))) IS TRUE)))) UNION ALL SELECT * FROM vt0 CROSS JOIN v0 ON 0.5451835390865124 WHERE (((((((v0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0))) IS TRUE)) ISNULL));
SELECT ALL * FROM vt0 CROSS JOIN v0 ON 0.5451835390865124;
SELECT DISTINCT * FROM v0, vt0, vt1;
SELECT DISTINCT * FROM v0, vt0, vt1 NOT INDEXED WHERE (CASE WHEN x'' THEN NULL END COLLATE BINARY) UNION SELECT DISTINCT * FROM v0, vt0, vt1 WHERE ((NOT (CASE WHEN x'' THEN NULL END COLLATE BINARY))) UNION SELECT DISTINCT * FROM v0, vt0, vt1 WHERE (((CASE WHEN x'' THEN NULL END COLLATE BINARY) ISNULL));
SELECT DISTINCT * FROM v0, vt0, vt1;
SELECT v0.c0, vt0.c0 FROM v0 CROSS JOIN vt0 ON CASE WHEN ((v0.c0)|(v0.c0)) THEN (((v0.c0))==((v0.c0))) ELSE ((v0.c0) IS TRUE) END GROUP BY v0.c0, vt0.c0;
SELECT ALL v0.c0, vt0.c0 FROM v0 CROSS JOIN vt0 ON CASE WHEN ((v0.c0)|(v0.c0)) THEN (((v0.c0))==((v0.c0))) ELSE ((v0.c0) IS TRUE) END WHERE (((CASE WHEN vt0.c0 THEN v0.c0 ELSE v0.c0 END)GLOB(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) GROUP BY v0.c0, vt0.c0 UNION SELECT ALL v0.c0, vt0.c0 FROM v0 CROSS JOIN vt0 ON CASE WHEN ((v0.c0)|(v0.c0)) THEN (((v0.c0))=((v0.c0))) ELSE ((v0.c0) IS TRUE) END WHERE ((NOT (((CASE WHEN vt0.c0 THEN v0.c0 ELSE v0.c0 END)GLOB(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))))) GROUP BY v0.c0, vt0.c0 UNION SELECT ALL v0.c0, vt0.c0 FROM v0 CROSS JOIN vt0 ON CASE WHEN ((v0.c0)|(v0.c0)) THEN (((v0.c0))=((v0.c0))) ELSE ((v0.c0) IS TRUE) END WHERE (((((CASE WHEN vt0.c0 THEN v0.c0 ELSE v0.c0 END)GLOB(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) ISNULL)) GROUP BY v0.c0, vt0.c0;
SELECT v0.c0, vt0.c0 FROM v0 CROSS JOIN vt0 ON CASE WHEN ((v0.c0)|(v0.c0)) THEN (((v0.c0))==((v0.c0))) ELSE ((v0.c0) IS TRUE) END GROUP BY v0.c0, vt0.c0;
SELECT ALL vt0.c0 FROM v0, vt1, vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM v0, vt1, vt0 GROUP BY vt0.c0 HAVING COUNT(HEX(DISTINCT TOTAL(v0.c0))) UNION ALL SELECT ALL vt0.c0 FROM v0, vt1, vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(HEX(DISTINCT TOTAL(v0.c0))))) UNION ALL SELECT ALL vt0.c0 FROM v0, vt1, vt0 GROUP BY vt0.c0 HAVING ((COUNT(HEX(DISTINCT TOTAL(v0.c0)))) ISNULL);
SELECT ALL * FROM v0;
SELECT ALL * FROM v0 WHERE (CASE WHEN (v0.c0 IN ()) THEN v0.c0 COLLATE NOCASE END) UNION ALL SELECT * FROM v0 WHERE ((NOT (CASE WHEN (v0.c0 IN ()) THEN v0.c0 COLLATE NOCASE END))) UNION ALL SELECT * FROM v0 WHERE (((CASE WHEN (v0.c0 IN ()) THEN v0.c0 COLLATE NOCASE END) ISNULL));
SELECT ALL * FROM v0;
SELECT DISTINCT * FROM vt1, vt0 NATURAL JOIN v0;
SELECT DISTINCT * FROM vt1, vt0 NATURAL JOIN v0 WHERE ((((((((((~ (vt0.c0)))OR(json_array_length(vt1.c0))))AND(((vt1.c0)GLOB(v0.c0)))))AND(CASE WHEN v0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN v0.c0 END)))OR(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))) UNION SELECT DISTINCT * FROM vt1, vt0 NATURAL JOIN v0 WHERE ((NOT ((((((((((~ (vt0.c0)))OR(json_array_length(vt1.c0))))AND(((vt1.c0)GLOB(v0.c0)))))AND(CASE WHEN v0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN v0.c0 END)))OR(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))))) UNION SELECT DISTINCT * FROM vt1, vt0 NATURAL JOIN v0 WHERE ((((((((((((~ (vt0.c0)))OR(json_array_length(vt1.c0))))AND(((vt1.c0)GLOB(v0.c0)))))AND(CASE WHEN v0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN v0.c0 END)))OR(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))) ISNULL));
SELECT DISTINCT * FROM vt1, vt0 NATURAL JOIN v0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE ((~ (COALESCE(DISTINCT vt1.c0, vt1.c0, vt1.c0, vt1.c0)))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT ((~ (COALESCE(DISTINCT vt1.c0, vt1.c0, vt1.c0, vt1.c0)))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((((~ (COALESCE(DISTINCT vt1.c0, vt1.c0, vt1.c0, vt1.c0)))) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 NOT INDEXED, vt0 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0 HAVING AVG(vt0.c0) COLLATE BINARY UNION ALL SELECT vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0 HAVING (NOT (AVG(vt0.c0) COLLATE BINARY)) UNION ALL SELECT vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0 HAVING ((AVG(vt0.c0) COLLATE BINARY) ISNULL);
SELECT vt1.c0 FROM vt1 NOT INDEXED, vt0 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0 HAVING AVG(vt0.c0) COLLATE BINARY UNION ALL SELECT vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0 HAVING (NOT (AVG(vt0.c0) COLLATE BINARY)) UNION ALL SELECT vt1.c0 FROM vt1, vt0 GROUP BY vt1.c0 HAVING ((AVG(vt0.c0) COLLATE BINARY) ISNULL);
SELECT vt1.c0 FROM vt1 NOT INDEXED, vt0 GROUP BY vt1.c0;
SELECT vt0.c0 FROM vt0;
SELECT ALL vt0.c0 FROM vt0 WHERE (((((HEX(vt0.c0))AND(((vt0.c0)<>(vt0.c0)))))OR(((vt0.c0)<>(vt0.c0))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (((((HEX(vt0.c0))AND(((vt0.c0)<>(vt0.c0)))))OR(((vt0.c0)!=(vt0.c0))))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE (((((((HEX(vt0.c0))AND(((vt0.c0)<>(vt0.c0)))))OR(((vt0.c0)<>(vt0.c0))))) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT vt1.c0, vt0.c0, v0.c0 FROM vt0, vt1, v0;
SELECT DISTINCT vt1.c0, vt0.c0, v0.c0 FROM vt0, vt1, v0 WHERE ((((((~ (0.6864317770350298)))OR(((vt1.c0)>(vt0.c0)))))OR(NULL COLLATE BINARY))) UNION SELECT DISTINCT vt1.c0, vt0.c0, v0.c0 FROM vt0, vt1, v0 WHERE ((NOT ((((((~ (0.6864317770350298)))OR(((vt1.c0)>(vt0.c0)))))OR(NULL COLLATE BINARY))))) UNION SELECT DISTINCT vt1.c0, vt0.c0, v0.c0 FROM vt0, vt1, v0 WHERE ((((((((~ (0.6864317770350298)))OR(((vt1.c0)>(vt0.c0)))))OR(NULL COLLATE BINARY))) ISNULL));
SELECT DISTINCT vt1.c0, vt0.c0, v0.c0 FROM vt0, vt1, v0;
SELECT v0.c0 FROM vt0, vt1, v0 GROUP BY v0.c0;
SELECT v0.c0 FROM vt0, vt1, v0 WHERE ((+ (CASE v0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 END))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM vt0, vt1, v0 WHERE ((NOT ((+ (CASE v0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 END))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM vt0, vt1, v0 WHERE ((((+ (CASE v0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 END))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM vt0, vt1, v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM vt1, v0 GROUP BY v0.c0;
SELECT v0.c0 FROM vt1, v0 GROUP BY v0.c0 HAVING CAST(AVG(SUM(MAX(MAX(v0.c0)))) COLLATE NOCASE AS NUMERIC) UNION ALL SELECT v0.c0 FROM vt1, v0 GROUP BY v0.c0 HAVING (NOT (CAST(AVG(SUM(MAX(MAX(v0.c0)))) COLLATE NOCASE AS NUMERIC))) UNION ALL SELECT v0.c0 FROM vt1, v0 GROUP BY v0.c0 HAVING ((CAST(AVG(SUM(MAX(MAX(v0.c0)))) COLLATE NOCASE AS NUMERIC)) ISNULL);
SELECT ALL TOTAL('-1055046638') FROM vt1, v0 ORDER BY IFNULL(((vt1.c0) ISNULL), ((vt1.c0)>=(v0.c0))) DESC  NULLS FIRST;
SELECT ALL * FROM vt0, vt1;
SELECT ALL * FROM vt0, vt1 WHERE ((((+ (vt0.c0)))LIKE((~ (vt0.c0))))) UNION ALL SELECT * FROM vt0, vt1 WHERE ((NOT ((((+ (vt0.c0)))LIKE((~ (vt0.c0))))))) UNION ALL SELECT * FROM vt0, vt1 WHERE ((((((+ (vt0.c0)))LIKE((~ (vt0.c0))))) ISNULL));
SELECT ALL * FROM vt0, vt1;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (CASE WHEN v0.c0 COLLATE NOCASE THEN SQLITE_SOURCE_ID() WHEN (v0.c0 IN (v0.c0, v0.c0)) THEN CASE v0.c0  WHEN v0.c0 THEN 0.12048791452884433 END WHEN CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END THEN ((v0.c0)-(v0.c0)) ELSE CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN 0Xffffffff905cc3af WHEN v0.c0 THEN v0.c0 END END) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (CASE WHEN v0.c0 COLLATE NOCASE THEN SQLITE_SOURCE_ID() WHEN (v0.c0 IN (v0.c0, v0.c0)) THEN CASE v0.c0  WHEN v0.c0 THEN 0.12048791452884433 END WHEN CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END THEN ((v0.c0)-(v0.c0)) ELSE CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN 0Xffffffff905cc3af WHEN v0.c0 THEN v0.c0 END END))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((CASE WHEN v0.c0 COLLATE NOCASE THEN SQLITE_SOURCE_ID() WHEN (v0.c0 IN (v0.c0, v0.c0)) THEN CASE v0.c0  WHEN v0.c0 THEN 0.12048791452884433 END WHEN CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END THEN ((v0.c0)-(v0.c0)) ELSE CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN 0xffffffff905cc3af WHEN v0.c0 THEN v0.c0 END END) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT ALL vt0.c0, v0.c0 FROM vt0, v0, vt1 GROUP BY vt0.c0, v0.c0;
SELECT ALL vt0.c0, v0.c0 FROM vt0, v0, vt1 WHERE (((+ (vt1.c0)) IN (vt0.c0 COLLATE BINARY))) GROUP BY vt0.c0, v0.c0 UNION SELECT ALL vt0.c0, v0.c0 FROM vt0, v0, vt1 WHERE ((NOT (((+ (vt1.c0)) IN (vt0.c0 COLLATE BINARY))))) GROUP BY vt0.c0, v0.c0 UNION SELECT vt0.c0, v0.c0 FROM vt0, v0, vt1 WHERE (((((+ (vt1.c0)) IN (vt0.c0 COLLATE BINARY))) ISNULL)) GROUP BY vt0.c0, v0.c0;
SELECT ALL vt0.c0, v0.c0 FROM vt0, v0, vt1 GROUP BY vt0.c0, v0.c0;
SELECT vt1.c0, v0.c0 FROM vt1, vt0, v0 GROUP BY vt1.c0, v0.c0;
SELECT vt1.c0, v0.c0 FROM vt1, vt0, v0 GROUP BY vt1.c0, v0.c0 HAVING CASE WHEN GROUP_CONCAT(vt0.c0) THEN UNLIKELY(DISTINCT vt0.c0) ELSE AVG(AVG(COUNT('	麥/hXto/n'))) END UNION ALL SELECT vt1.c0, v0.c0 FROM vt1, vt0, v0 GROUP BY vt1.c0, v0.c0 HAVING (NOT (CASE WHEN GROUP_CONCAT(vt0.c0) THEN UNLIKELY(DISTINCT vt0.c0) ELSE AVG(AVG(COUNT('	麥/hXto/n'))) END)) UNION ALL SELECT ALL vt1.c0, v0.c0 FROM vt1, vt0, v0 GROUP BY vt1.c0, v0.c0 HAVING ((CASE WHEN GROUP_CONCAT(vt0.c0) THEN UNLIKELY(DISTINCT vt0.c0) ELSE AVG(AVG(COUNT('	麥/hXto/n'))) END) ISNULL);
SELECT ALL v0.c0 FROM v0, vt1;
SELECT ALL v0.c0 FROM v0, vt1 WHERE ((- (((vt1.c0) NOTNULL)))) UNION ALL SELECT v0.c0 FROM v0, vt1 WHERE ((NOT ((- (((vt1.c0) NOTNULL)))))) UNION ALL SELECT ALL v0.c0 FROM v0, vt1 WHERE ((((- (((vt1.c0) NOTNULL)))) ISNULL));
SELECT ALL v0.c0 FROM v0, vt1;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((((NULL)-(vt0.c0))) IS TRUE)) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((((NULL)-(vt0.c0))) IS TRUE)))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((((NULL)-(vt0.c0))) IS TRUE)) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL v0.c0, vt1.c0 FROM v0, vt0, vt1 GROUP BY v0.c0, vt1.c0;
SELECT v0.c0, vt1.c0 FROM v0, vt0, vt1 NOT INDEXED WHERE (CAST(TRIM(v0.c0, vt1.c0) AS REAL)) GROUP BY v0.c0, vt1.c0 UNION SELECT v0.c0, vt1.c0 FROM v0, vt0, vt1 WHERE ((NOT (CAST(TRIM(v0.c0, vt1.c0) AS REAL)))) GROUP BY v0.c0, vt1.c0 UNION SELECT ALL v0.c0, vt1.c0 FROM v0, vt0, vt1 WHERE (((CAST(TRIM(v0.c0, vt1.c0) AS REAL)) ISNULL)) GROUP BY v0.c0, vt1.c0;
SELECT ALL v0.c0, vt1.c0 FROM v0, vt0, vt1 GROUP BY v0.c0, vt1.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING TOTAL(MIN(COUNT(*))) UNION ALL SELECT ALL vt0.c0 FROM vt0 NOT INDEXED GROUP BY vt0.c0 HAVING (NOT (TOTAL(MIN(COUNT(*))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((TOTAL(MIN(COUNT(*)))) ISNULL);
SELECT ALL * FROM vt0, v0;
SELECT * FROM vt0, v0 WHERE ((NOT (((vt0.c0)*(v0.c0))))) UNION ALL SELECT * FROM vt0, v0 WHERE ((NOT ((NOT (((vt0.c0)*(v0.c0))))))) UNION ALL SELECT ALL * FROM vt0, v0 WHERE ((((NOT (((vt0.c0)*(v0.c0))))) ISNULL));
SELECT ALL * FROM vt0, v0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (((((v0.c0)OR(x'')))OR('980740816')) COLLATE RTRIM) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (((((v0.c0)OR(x'')))OR('980740816')) COLLATE RTRIM))) UNION SELECT DISTINCT * FROM v0 WHERE (((((((v0.c0)OR(x'')))OR('980740816')) COLLATE RTRIM) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT vt0.c0 FROM vt1, vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt1, vt0 WHERE (vt0.c0) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt1, vt0 WHERE ((NOT (vt0.c0))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt1, vt0 WHERE (((vt0.c0) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt1, vt0 GROUP BY vt0.c0;
SELECT vt0.c0, vt1.c0, v0.c0 FROM vt0, vt1, v0 GROUP BY vt0.c0, vt1.c0, v0.c0;
SELECT ALL vt0.c0, vt1.c0, v0.c0 FROM vt0, vt1, v0 GROUP BY vt0.c0, vt1.c0, v0.c0 HAVING MIN(MAX(MIN(v0.c0))) UNION ALL SELECT ALL vt0.c0, vt1.c0, v0.c0 FROM vt0, vt1, v0 GROUP BY vt0.c0, vt1.c0, v0.c0 HAVING (NOT (MIN(MAX(MIN(v0.c0))))) UNION ALL SELECT vt0.c0, vt1.c0, v0.c0 FROM vt0, vt1, v0 GROUP BY vt0.c0, vt1.c0, v0.c0 HAVING ((MIN(MAX(MIN(v0.c0)))) ISNULL);
SELECT * FROM vt0;
SELECT * FROM vt0 WHERE (CAST(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END AS TEXT)) UNION ALL SELECT * FROM vt0 WHERE ((NOT (CAST(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END AS TEXT)))) UNION ALL SELECT * FROM vt0 WHERE (((CAST(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END AS TEXT)) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT v0.c0 FROM v0, vt1, vt0;
SELECT DISTINCT v0.c0 FROM v0, vt1, vt0 WHERE (DATE(((((vt1.c0)OR(v0.c0)))AND(v0.c0)), CASE v0.c0  WHEN v0.c0 THEN vt0.c0 ELSE v0.c0 END, (- (vt1.c0)))) UNION SELECT DISTINCT v0.c0 FROM v0, vt1, vt0 WHERE ((NOT (DATE(((((vt1.c0)OR(v0.c0)))AND(v0.c0)), CASE v0.c0  WHEN v0.c0 THEN vt0.c0 ELSE v0.c0 END, (- (vt1.c0)))))) UNION SELECT DISTINCT v0.c0 FROM v0, vt1, vt0 WHERE (((DATE(((((vt1.c0)OR(v0.c0)))AND(v0.c0)), CASE v0.c0  WHEN v0.c0 THEN vt0.c0 ELSE v0.c0 END, (- (vt1.c0)))) ISNULL));
SELECT DISTINCT v0.c0 FROM v0, vt1, vt0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE ((((vt1.c0 COLLATE NOCASE, TRIM(vt1.c0), (- (vt1.c0))))<((CAST(vt1.c0 AS TEXT), (vt1.c0 IN ()), '(5\r줤a}')))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT ((((vt1.c0 COLLATE NOCASE, TRIM(vt1.c0), (- (vt1.c0))))<((CAST(vt1.c0 AS TEXT), (vt1.c0 IN ()), '(5\r줤a}')))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((((((vt1.c0 COLLATE NOCASE, TRIM(vt1.c0), (- (vt1.c0))))<((CAST(vt1.c0 AS TEXT), (vt1.c0 IN ()), '(5\r줤a}')))) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0, v0.c0 FROM vt1, v0 GROUP BY vt1.c0, v0.c0;
SELECT ALL vt1.c0, v0.c0 FROM vt1, v0 GROUP BY vt1.c0, v0.c0 HAVING ((((AVG(v0.c0))AND(COUNT(v0.c0))))AND(MIN(MIN(SUM(COUNT(vt1.c0)))))) UNION ALL SELECT vt1.c0, v0.c0 FROM vt1, v0 GROUP BY vt1.c0, v0.c0 HAVING (NOT (((((AVG(v0.c0))AND(COUNT(v0.c0))))AND(MIN(MIN(SUM(COUNT(vt1.c0)))))))) UNION ALL SELECT vt1.c0, v0.c0 FROM vt1, v0 GROUP BY vt1.c0, v0.c0 HAVING ((((((AVG(v0.c0))AND(COUNT(v0.c0))))AND(MIN(MIN(SUM(COUNT(vt1.c0))))))) ISNULL);
SELECT ALL vt0.c0, v0.c0 FROM vt1, v0, vt0;
SELECT vt0.c0, v0.c0 FROM vt1, v0, vt0 WHERE (vt1.c0) UNION ALL SELECT vt0.c0, v0.c0 FROM vt1, v0, vt0 WHERE ((NOT (vt1.c0))) UNION ALL SELECT ALL vt0.c0, v0.c0 FROM vt1, v0, vt0 WHERE (((vt1.c0) ISNULL));
SELECT ALL vt0.c0, v0.c0 FROM vt1, v0, vt0;
SELECT DISTINCT * FROM vt0, vt1, v0;
SELECT DISTINCT * FROM vt0, vt1, v0 WHERE (((vt0.c0 COLLATE NOCASE)/('1801756569'))) UNION SELECT DISTINCT * FROM vt0, vt1, v0 WHERE ((NOT (((vt0.c0 COLLATE NOCASE)/('1801756569'))))) UNION SELECT DISTINCT * FROM vt0, vt1, v0 WHERE (((((vt0.c0 COLLATE NOCASE)/('1801756569'))) ISNULL));
SELECT DISTINCT * FROM vt0, vt1, v0;
SELECT vt0.c0, v0.c0 FROM vt0 FULL OUTER JOIN v0 ON CASE ((v0.c0)<>(vt0.c0))  WHEN '599994081' THEN ((v0.c0)/(v0.c0)) ELSE (v0.c0 IN (v0.c0)) END GROUP BY vt0.c0, v0.c0;
SELECT ALL vt0.c0, v0.c0 FROM vt0 FULL OUTER JOIN v0 ON CASE ((v0.c0)!=(vt0.c0))  WHEN '599994081' THEN ((v0.c0)/(v0.c0)) ELSE (v0.c0 IN (v0.c0)) END WHERE (((((v0.c0) ISNULL)) NOT BETWEEN (json_array_length(v0.c0)) AND (((vt0.c0)*(v0.c0))))) GROUP BY vt0.c0, v0.c0 UNION SELECT vt0.c0, v0.c0 FROM vt0 FULL OUTER JOIN v0 ON CASE ((v0.c0)<>(vt0.c0))  WHEN '599994081' THEN ((v0.c0)/(v0.c0)) ELSE (v0.c0 IN (v0.c0)) END WHERE ((NOT (((((v0.c0) ISNULL)) NOT BETWEEN (json_array_length(v0.c0)) AND (((vt0.c0)*(v0.c0))))))) GROUP BY vt0.c0, v0.c0 UNION SELECT ALL vt0.c0, v0.c0 FROM vt0 FULL OUTER JOIN v0 ON CASE ((v0.c0)<>(vt0.c0))  WHEN '599994081' THEN ((v0.c0)/(v0.c0)) ELSE (v0.c0 IN (v0.c0)) END WHERE (((((((v0.c0) ISNULL)) NOT BETWEEN (json_array_length(v0.c0)) AND (((vt0.c0)*(v0.c0))))) ISNULL)) GROUP BY vt0.c0, v0.c0;
SELECT vt0.c0, v0.c0 FROM vt0 FULL OUTER JOIN v0 ON CASE ((v0.c0)<>(vt0.c0))  WHEN '599994081' THEN ((v0.c0)/(v0.c0)) ELSE (v0.c0 IN (v0.c0)) END GROUP BY vt0.c0, v0.c0;
SELECT vt0.c0, vt1.c0 FROM v0, vt1, vt0 GROUP BY vt0.c0, vt1.c0;
SELECT ALL vt0.c0, vt1.c0 FROM v0, vt1, vt0 GROUP BY vt0.c0, vt1.c0 HAVING ((COUNT(*)) IS TRUE) UNION ALL SELECT ALL vt0.c0, vt1.c0 FROM v0, vt1, vt0 GROUP BY vt0.c0, vt1.c0 HAVING (NOT (((COUNT(*)) IS TRUE))) UNION ALL SELECT vt0.c0, vt1.c0 FROM v0, vt1, vt0 GROUP BY vt0.c0, vt1.c0 HAVING ((((COUNT(*)) IS TRUE)) ISNULL);
SELECT vt0.c0, vt1.c0 FROM v0, vt1, vt0 GROUP BY vt0.c0, vt1.c0;
SELECT ALL vt0.c0, vt1.c0 FROM v0, vt1, vt0 GROUP BY vt0.c0, vt1.c0 HAVING ((COUNT(*)) IS TRUE) UNION ALL SELECT ALL vt0.c0, vt1.c0 FROM v0, vt1, vt0 GROUP BY vt0.c0, vt1.c0 HAVING (NOT (((COUNT(*)) IS TRUE))) UNION ALL SELECT vt0.c0, vt1.c0 FROM v0, vt1, vt0 GROUP BY vt0.c0, vt1.c0 HAVING ((((COUNT(*)) IS TRUE)) ISNULL);
SELECT vt0.c0, vt1.c0 FROM v0, vt1, vt0 GROUP BY vt0.c0, vt1.c0;
SELECT ALL * FROM vt0, vt1;
SELECT * FROM vt0, vt1 WHERE ((~ ((vt1.c0 IN ())))) UNION ALL SELECT * FROM vt0, vt1 WHERE ((NOT ((~ ((vt1.c0 IN ())))))) UNION ALL SELECT * FROM vt0, vt1 WHERE ((((~ ((vt1.c0 IN ())))) ISNULL));
SELECT ALL * FROM vt0, vt1;
SELECT DISTINCT * FROM vt1, v0;
SELECT DISTINCT * FROM vt1, v0 WHERE ('-853186835') UNION SELECT DISTINCT * FROM vt1, v0 WHERE ((NOT ('-853186835'))) UNION SELECT DISTINCT * FROM vt1, v0 WHERE ((('-853186835') ISNULL));
SELECT DISTINCT * FROM vt1, v0;
SELECT ALL vt0.c0, vt1.c0 FROM v0, vt0, vt1 GROUP BY vt0.c0, vt1.c0;
SELECT ALL vt0.c0, vt1.c0 FROM v0, vt0, vt1 WHERE (((0.05708805748606682) NOT BETWEEN (x'') AND (v0.c0 COLLATE NOCASE))) GROUP BY vt0.c0, vt1.c0 UNION SELECT ALL vt0.c0, vt1.c0 FROM v0, vt0, vt1 WHERE ((NOT (((0.05708805748606682) NOT BETWEEN (x'') AND (v0.c0 COLLATE NOCASE))))) GROUP BY vt0.c0, vt1.c0 UNION SELECT ALL vt0.c0, vt1.c0 FROM v0, vt0, vt1 WHERE (((((0.05708805748606682) NOT BETWEEN (x'') AND (v0.c0 COLLATE NOCASE))) ISNULL)) GROUP BY vt0.c0, vt1.c0;
SELECT ALL vt0.c0, vt1.c0 FROM v0, vt0, vt1 GROUP BY vt0.c0, vt1.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING SUM(((AVG(vt0.c0)) ISNULL)) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (SUM(((AVG(vt0.c0)) ISNULL)))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((SUM(((AVG(vt0.c0)) ISNULL))) ISNULL);
SELECT v0.c0, vt0.c0 FROM vt1 LEFT OUTER JOIN v0 ON ((((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))AND(vt0.c0)))AND(v0.c0))) NOT BETWEEN ((((',_Gi')) NOT BETWEEN ((vt0.c0)) AND ((x'1069')))) AND (JULIANDAY(v0.c0, vt1.c0, vt1.c0))) FULL OUTER JOIN vt0 ON CASE WHEN (vt0.c0 IN (vt1.c0, '1750458782')) THEN json_patch(vt1.c0, v0.c0) END;
SELECT DISTINCT v0.c0 FROM vt1 INNER JOIN vt0 ON (- (vt1.c0)) COLLATE RTRIM FULL OUTER JOIN v0 ON ((((v0.c0) BETWEEN (vt1.c0) AND (v0.c0))) ISNULL);
SELECT DISTINCT v0.c0 FROM vt1 INNER JOIN vt0 ON (- (vt1.c0)) COLLATE RTRIM FULL OUTER JOIN v0 ON ((((v0.c0) BETWEEN (vt1.c0) AND (v0.c0))) ISNULL) WHERE ((((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((vt0.c0))))>=(0.8902720516403927))) UNION SELECT DISTINCT v0.c0 FROM vt1 INNER JOIN vt0 ON (- (vt1.c0)) COLLATE RTRIM FULL OUTER JOIN v0 ON ((((v0.c0) BETWEEN (vt1.c0) AND (v0.c0))) ISNULL) WHERE ((NOT ((((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((vt0.c0))))>=(0.8902720516403927))))) UNION SELECT DISTINCT v0.c0 FROM vt1 INNER JOIN vt0 ON (- (vt1.c0)) COLLATE RTRIM FULL OUTER JOIN v0 ON ((((v0.c0) BETWEEN (vt1.c0) AND (v0.c0))) ISNULL) WHERE ((((((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((vt0.c0))))>=(0.8902720516403927))) ISNULL));
SELECT DISTINCT v0.c0 FROM vt1 INNER JOIN vt0 ON (- (vt1.c0)) COLLATE RTRIM FULL OUTER JOIN v0 ON ((((v0.c0) BETWEEN (vt1.c0) AND (v0.c0))) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (((((((((((((((v0.c0)AND(v0.c0)))OR('846805432')))AND(v0.c0)))AND(v0.c0)))AND(v0.c0)))AND('566351939'))) NOT BETWEEN ((v0.c0 IN ())) AND ((((v0.c0))<((v0.c0)))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT (((((((((((((((v0.c0)AND(v0.c0)))OR('846805432')))AND(v0.c0)))AND(v0.c0)))AND(v0.c0)))AND('566351939'))) NOT BETWEEN ((v0.c0 IN ())) AND ((((v0.c0))<((v0.c0)))))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((((((((((((((((v0.c0)AND(v0.c0)))OR('846805432')))AND(v0.c0)))AND(v0.c0)))AND(v0.c0)))AND('566351939'))) NOT BETWEEN ((v0.c0 IN ())) AND ((((v0.c0))<((v0.c0)))))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING COUNT(GROUP_CONCAT(GROUP_CONCAT(v0.c0))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (COUNT(GROUP_CONCAT(GROUP_CONCAT(v0.c0))))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((COUNT(GROUP_CONCAT(GROUP_CONCAT(v0.c0)))) ISNULL);
SELECT vt1.c0 FROM vt1;
SELECT ALL vt1.c0 FROM vt1 WHERE ((((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))) NOTNULL)) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT ((((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))) NOTNULL)))) UNION ALL SELECT vt1.c0 FROM vt1 WHERE ((((((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))) NOTNULL)) ISNULL));
SELECT vt1.c0 FROM vt1;
SELECT DISTINCT * FROM vt1, v0;
SELECT DISTINCT * FROM vt1, v0 WHERE ((((v0.c0 IN ())) IS TRUE)) UNION SELECT DISTINCT * FROM vt1, v0 WHERE ((NOT ((((v0.c0 IN ())) IS TRUE)))) UNION SELECT DISTINCT * FROM vt1, v0 WHERE ((((((v0.c0 IN ())) IS TRUE)) ISNULL));
SELECT DISTINCT * FROM vt1, v0;
SELECT ALL vt1.c0, vt0.c0, v0.c0 FROM v0, vt1, vt0 GROUP BY vt1.c0, vt0.c0, v0.c0;
SELECT ALL vt1.c0, vt0.c0, v0.c0 FROM v0, vt1, vt0 WHERE (CAST('-1294455924' AS INTEGER)) GROUP BY vt1.c0, vt0.c0, v0.c0 UNION SELECT ALL vt1.c0, vt0.c0, v0.c0 FROM v0, vt1, vt0 WHERE ((NOT (CAST('-1294455924' AS INTEGER)))) GROUP BY vt1.c0, vt0.c0, v0.c0 UNION SELECT ALL vt1.c0, vt0.c0, v0.c0 FROM v0, vt1, vt0 WHERE (((CAST('-1294455924' AS INTEGER)) ISNULL)) GROUP BY vt1.c0, vt0.c0, v0.c0;
SELECT ALL vt1.c0, vt0.c0, v0.c0 FROM v0, vt1, vt0 GROUP BY vt1.c0, vt0.c0, v0.c0;
SELECT ALL v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0;
SELECT v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0 HAVING GROUP_CONCAT('Laci6<OS') UNION ALL SELECT v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0 HAVING (NOT (GROUP_CONCAT('Laci6<OS'))) UNION ALL SELECT ALL v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0 HAVING ((GROUP_CONCAT('Laci6<OS')) ISNULL);
SELECT ALL v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0;
SELECT v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0 HAVING GROUP_CONCAT('Laci6<OS') UNION ALL SELECT v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0 HAVING (NOT (GROUP_CONCAT('Laci6<OS'))) UNION ALL SELECT ALL v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0 HAVING ((GROUP_CONCAT('Laci6<OS')) ISNULL);
SELECT ALL v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0;
SELECT * FROM vt1;
SELECT * FROM vt1 WHERE (((vt1.c0 COLLATE RTRIM) BETWEEN (vt1.c0 COLLATE NOCASE) AND (CAST(vt1.c0 AS TEXT)))) UNION ALL SELECT ALL * FROM vt1 WHERE ((NOT (((vt1.c0 COLLATE RTRIM) BETWEEN (vt1.c0 COLLATE NOCASE) AND (CAST(vt1.c0 AS TEXT)))))) UNION ALL SELECT * FROM vt1 WHERE (((((vt1.c0 COLLATE RTRIM) BETWEEN (vt1.c0 COLLATE NOCASE) AND (CAST(vt1.c0 AS TEXT)))) ISNULL));
SELECT * FROM vt1;
SELECT DISTINCT v0.c0 FROM v0, vt0;
SELECT DISTINCT v0.c0 FROM v0, vt0 WHERE (CAST(v0.c0 AS REAL)) UNION SELECT DISTINCT v0.c0 FROM v0, vt0 WHERE ((NOT (CAST(v0.c0 AS REAL)))) UNION SELECT DISTINCT v0.c0 FROM v0, vt0 WHERE (((CAST(v0.c0 AS REAL)) ISNULL));
SELECT DISTINCT v0.c0 FROM v0, vt0;
SELECT ALL v0.c0, vt0.c0 FROM vt1 INNER JOIN vt0 ON ((((((((((((((v0.c0) IS FALSE))AND((((vt1.c0))=((vt0.c0))))))OR(0.33237765127256635)))OR(CAST(x'' AS REAL))))OR(vt0.c0 COLLATE RTRIM)))OR(STRFTIME(vt0.c0, vt0.c0, vt1.c0, vt1.c0, vt0.c0))))OR(((vt0.c0)&(vt1.c0)))) RIGHT OUTER JOIN v0 ON ((((((vt1.c0)OR(vt0.c0)))OR(vt1.c0))) BETWEEN (((vt1.c0)>=(v0.c0))) AND (CAST(vt0.c0 AS TEXT))) GROUP BY v0.c0, vt0.c0;
SELECT vt1.c0, v0.c0 FROM v0 FULL OUTER JOIN vt1 ON ((((((((TRIM(DISTINCT vt1.c0, vt1.c0))OR(CASE WHEN vt1.c0 THEN 0.34640959673448646 ELSE v0.c0 END)))AND(x'')))OR((- (vt0.c0)))))OR((((vt0.c0))!=((vt0.c0))))) INNER JOIN vt0 ON ((+ (vt1.c0)) IN ('1801756569', CASE vt1.c0  WHEN vt0.c0 THEN v0.c0 WHEN vt0.c0 THEN v0.c0 WHEN NULL THEN v0.c0 ELSE vt0.c0 END)) GROUP BY vt1.c0, v0.c0;
SELECT ALL vt1.c0, vt0.c0 FROM vt0 RIGHT OUTER JOIN vt1 ON (v0.c0 IN ()) LEFT OUTER JOIN v0 ON NULL;
SELECT vt1.c0, vt0.c0 FROM vt0 RIGHT OUTER JOIN vt1 ON (v0.c0 IN ()) LEFT OUTER JOIN v0 ON NULL WHERE (NULL) UNION ALL SELECT ALL vt1.c0, vt0.c0 FROM vt0 RIGHT OUTER JOIN vt1 ON (v0.c0 IN ()) LEFT OUTER JOIN v0 ON NULL WHERE ((NOT (NULL))) UNION ALL SELECT vt1.c0, vt0.c0 FROM vt0 RIGHT OUTER JOIN vt1 ON (v0.c0 IN ()) LEFT OUTER JOIN v0 ON NULL WHERE (((NULL) ISNULL));
SELECT ALL vt1.c0, vt0.c0 FROM vt0 RIGHT OUTER JOIN vt1 ON (v0.c0 IN ()) LEFT OUTER JOIN v0 ON NULL;
SELECT DISTINCT * FROM vt0, vt1 CROSS JOIN v0 ON UPPER(DISTINCT vt1.c0);
SELECT DISTINCT * FROM vt0, vt1 CROSS JOIN v0 ON UPPER(DISTINCT vt1.c0) WHERE (v0.c0) UNION SELECT DISTINCT * FROM vt0, vt1 CROSS JOIN v0 ON UPPER(DISTINCT vt1.c0) WHERE ((NOT (v0.c0))) UNION SELECT DISTINCT * FROM vt0, vt1 CROSS JOIN v0 ON UPPER(DISTINCT vt1.c0) WHERE (((v0.c0) ISNULL));
SELECT DISTINCT * FROM vt0, vt1 CROSS JOIN v0 ON UPPER(DISTINCT vt1.c0);
SELECT ALL vt1.c0, v0.c0, vt0.c0 FROM v0, vt0 INNER JOIN vt1 ON ((v0.c0) NOT NULL) GROUP BY vt1.c0, v0.c0, vt0.c0;
SELECT ALL vt1.c0, v0.c0, vt0.c0 FROM v0, vt0 INNER JOIN vt1 ON ((v0.c0) NOT NULL) WHERE ((((vt1.c0)<>(vt1.c0)) IN (((((vt0.c0)AND('L6g1좙wQ')))OR(v0.c0)), (vt1.c0 IN ())))) GROUP BY vt1.c0, v0.c0, vt0.c0 UNION SELECT vt1.c0, v0.c0, vt0.c0 FROM v0, vt0 INNER JOIN vt1 ON ((v0.c0) NOT NULL) WHERE ((NOT ((((vt1.c0)<>(vt1.c0)) IN (((((vt0.c0)AND('L6g1좙wQ')))OR(v0.c0)), (vt1.c0 IN ())))))) GROUP BY vt1.c0, v0.c0, vt0.c0 UNION SELECT vt1.c0, v0.c0, vt0.c0 FROM v0, vt0 INNER JOIN vt1 ON ((v0.c0) NOT NULL) WHERE ((((((vt1.c0)<>(vt1.c0)) IN (((((vt0.c0)AND('L6g1좙wQ')))OR(v0.c0)), (vt1.c0 IN ())))) ISNULL)) GROUP BY vt1.c0, v0.c0, vt0.c0;
SELECT ALL vt1.c0, v0.c0, vt0.c0 FROM v0, vt0 INNER JOIN vt1 ON ((v0.c0) NOT NULL) GROUP BY vt1.c0, v0.c0, vt0.c0;
SELECT vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0;
SELECT ALL vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0 HAVING SUM(((vt0.c0) ISNULL)) UNION ALL SELECT ALL vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0 HAVING (NOT (SUM(((vt0.c0) ISNULL)))) UNION ALL SELECT ALL vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0 HAVING ((SUM(((vt0.c0) ISNULL))) ISNULL);
SELECT vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0;
SELECT ALL vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0 HAVING SUM(((vt0.c0) ISNULL)) UNION ALL SELECT ALL vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0 HAVING (NOT (SUM(((vt0.c0) ISNULL)))) UNION ALL SELECT ALL vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0 HAVING ((SUM(((vt0.c0) ISNULL))) ISNULL);
SELECT vt0.c0, v0.c0 FROM v0, vt0 GROUP BY vt0.c0, v0.c0;
SELECT vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE (CASE WHEN vt0.c0 COLLATE RTRIM THEN (vt0.c0 IN ()) ELSE ((vt0.c0) NOT NULL) END) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (CASE WHEN vt0.c0 COLLATE RTRIM THEN (vt0.c0 IN ()) ELSE ((vt0.c0) NOT NULL) END))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE (((CASE WHEN vt0.c0 COLLATE RTRIM THEN (vt0.c0 IN ()) ELSE ((vt0.c0) NOT NULL) END) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT * FROM vt0, v0 INNER JOIN vt1 ON (CAST(v0.c0 AS INTEGER) IN ());
SELECT DISTINCT * FROM vt0, v0 INNER JOIN vt1 ON (CAST(v0.c0 AS INTEGER) IN ()) WHERE (((vt1.c0) NOT NULL)) UNION SELECT DISTINCT * FROM vt0, v0 INNER JOIN vt1 ON (CAST(v0.c0 AS INTEGER) IN ()) WHERE ((NOT (((vt1.c0) NOT NULL)))) UNION SELECT DISTINCT * FROM vt0, v0 INNER JOIN vt1 ON (CAST(v0.c0 AS INTEGER) IN ()) WHERE (((((vt1.c0) NOT NULL)) ISNULL));
SELECT DISTINCT * FROM vt0, v0 INNER JOIN vt1 ON (CAST(v0.c0 AS INTEGER) IN ());
SELECT vt1.c0 FROM v0, vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM v0, vt1 WHERE (CAST(json_insert(v0.c0, vt1.c0, vt1.c0) AS REAL)) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM v0, vt1 WHERE ((NOT (CAST(json_insert(v0.c0, vt1.c0, vt1.c0) AS REAL)))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM v0, vt1 WHERE (((CAST(json_insert(v0.c0, vt1.c0, vt1.c0) AS REAL)) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM v0, vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM v0, vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM v0, vt1 GROUP BY vt1.c0 HAVING ((TOTAL(vt1.c0)) BETWEEN (TOTAL(SUM(SUM(AVG(COUNT(MAX(vt1.c0))))))) AND (MAX(GROUP_CONCAT(SUM(vt1.c0))) COLLATE RTRIM)) UNION ALL SELECT vt1.c0 FROM v0, vt1 GROUP BY vt1.c0 HAVING (NOT (((TOTAL(vt1.c0)) BETWEEN (TOTAL(SUM(SUM(AVG(COUNT(MAX(vt1.c0))))))) AND (MAX(GROUP_CONCAT(SUM(vt1.c0))) COLLATE RTRIM)))) UNION ALL SELECT vt1.c0 FROM v0, vt1 GROUP BY vt1.c0 HAVING ((((TOTAL(vt1.c0)) BETWEEN (TOTAL(SUM(SUM(AVG(COUNT(MAX(vt1.c0))))))) AND (MAX(GROUP_CONCAT(SUM(vt1.c0))) COLLATE RTRIM))) ISNULL);
SELECT vt1.c0 FROM vt1;
SELECT vt1.c0 FROM vt1 WHERE (((vt1.c0)+(vt1.c0)) COLLATE NOCASE) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (((vt1.c0)+(vt1.c0)) COLLATE NOCASE))) UNION ALL SELECT vt1.c0 FROM vt1 WHERE (((((vt1.c0)+(vt1.c0)) COLLATE NOCASE) ISNULL));
SELECT vt1.c0 FROM vt1;
SELECT DISTINCT * FROM vt1, vt0;
SELECT DISTINCT * FROM vt1, vt0 WHERE (CASE ((vt0.c0)OR(vt0.c0))  WHEN vt1.c0 THEN TRIM(vt1.c0) END) UNION SELECT DISTINCT * FROM vt1, vt0 WHERE ((NOT (CASE ((vt0.c0)OR(vt0.c0))  WHEN vt1.c0 THEN TRIM(vt1.c0) END))) UNION SELECT DISTINCT * FROM vt1, vt0 WHERE (((CASE ((vt0.c0)OR(vt0.c0))  WHEN vt1.c0 THEN TRIM(vt1.c0) END) ISNULL));
SELECT DISTINCT * FROM vt1, vt0;
SELECT ALL vt1.c0 FROM v0, vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM v0, vt1 WHERE (x'') GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM v0, vt1 WHERE ((NOT (x''))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM v0, vt1 WHERE (((x'') ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM v0, vt1 GROUP BY vt1.c0;
SELECT vt0.c0 FROM vt0, v0 CROSS JOIN vt1 ON ((vt1.c0)<=(0.33237765127256635)) COLLATE BINARY GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, v0 CROSS JOIN vt1 ON ((vt1.c0)<=(0.33237765127256635)) COLLATE BINARY GROUP BY vt0.c0 HAVING COUNT(*) UNION ALL SELECT vt0.c0 FROM vt0, v0 CROSS JOIN vt1 ON ((vt1.c0)<=(0.33237765127256635)) COLLATE BINARY GROUP BY vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt0.c0 FROM vt0, v0 CROSS JOIN vt1 ON ((vt1.c0)<=(0.33237765127256635)) COLLATE BINARY GROUP BY vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt0.c0 FROM vt0, v0 CROSS JOIN vt1 ON ((vt1.c0)<=(0.33237765127256635)) COLLATE BINARY GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, v0 CROSS JOIN vt1 ON ((vt1.c0)<=(0.33237765127256635)) COLLATE BINARY GROUP BY vt0.c0 HAVING COUNT(*) UNION ALL SELECT vt0.c0 FROM vt0, v0 CROSS JOIN vt1 ON ((vt1.c0)<=(0.33237765127256635)) COLLATE BINARY GROUP BY vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt0.c0 FROM vt0, v0 CROSS JOIN vt1 ON ((vt1.c0)<=(0.33237765127256635)) COLLATE BINARY GROUP BY vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt0.c0 FROM vt0, v0 CROSS JOIN vt1 ON ((vt1.c0)<=(0.33237765127256635)) COLLATE BINARY GROUP BY vt0.c0;
SELECT * FROM vt1;
SELECT * FROM vt1 WHERE ((((vt1.c0))>=((CAST(vt1.c0 AS NUMERIC))))) UNION ALL SELECT * FROM vt1 WHERE ((NOT ((((vt1.c0))>=((CAST(vt1.c0 AS NUMERIC))))))) UNION ALL SELECT ALL * FROM vt1 WHERE ((((((vt1.c0))>=((CAST(vt1.c0 AS NUMERIC))))) ISNULL));
SELECT * FROM vt1;
SELECT DISTINCT v0.c0 FROM vt1, v0;
SELECT DISTINCT v0.c0 FROM vt1, v0 WHERE ('1850690403') UNION SELECT DISTINCT v0.c0 FROM vt1, v0 WHERE ((NOT ('1850690403'))) UNION SELECT DISTINCT v0.c0 FROM vt1, v0 WHERE ((('1850690403') ISNULL));
SELECT DISTINCT v0.c0 FROM vt1, v0;
SELECT ALL vt0.c0, v0.c0, vt1.c0 FROM vt0, v0 CROSS JOIN vt1 ON (((v0.c0 COLLATE BINARY, vt1.c0, 0.2173366548933512))!=((((5.89549559E8)GLOB(vt0.c0)), (NOT (vt1.c0)), (0.29555110455077704 IN ())))) GROUP BY vt0.c0, v0.c0, vt1.c0;
SELECT ALL vt0.c0, v0.c0, vt1.c0 FROM vt0, v0 CROSS JOIN vt1 ON (((v0.c0 COLLATE BINARY, vt1.c0, 0.2173366548933512))<>((((5.89549559E8)GLOB(vt0.c0)), (NOT (vt1.c0)), (0.29555110455077704 IN ())))) WHERE (((((vt0.c0)>=(0.37470192409901215)))LIKE(NULL))) GROUP BY vt0.c0, v0.c0, vt1.c0 UNION SELECT vt0.c0, v0.c0, vt1.c0 FROM vt0, v0 CROSS JOIN vt1 ON (((v0.c0 COLLATE BINARY, vt1.c0, 0.2173366548933512))!=((((5.89549559E8)GLOB(vt0.c0)), (NOT (vt1.c0)), (0.29555110455077704 IN ())))) WHERE ((NOT (((((vt0.c0)>=(0.37470192409901215)))LIKE(NULL))))) GROUP BY vt0.c0, v0.c0, vt1.c0 UNION SELECT ALL vt0.c0, v0.c0, vt1.c0 FROM vt0, v0 CROSS JOIN vt1 ON (((v0.c0 COLLATE BINARY, vt1.c0, 0.2173366548933512))<>((((5.89549559E8)GLOB(vt0.c0)), (NOT (vt1.c0)), (0.29555110455077704 IN ())))) WHERE (((((((vt0.c0)>=(0.37470192409901215)))LIKE(NULL))) ISNULL)) GROUP BY vt0.c0, v0.c0, vt1.c0;
SELECT ALL vt0.c0, v0.c0, vt1.c0 FROM vt0, v0 CROSS JOIN vt1 ON (((v0.c0 COLLATE BINARY, vt1.c0, 0.2173366548933512))!=((((5.89549559E8)GLOB(vt0.c0)), (NOT (vt1.c0)), (0.29555110455077704 IN ())))) GROUP BY vt0.c0, v0.c0, vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (MIN(COUNT(*)) IN ()) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT ((MIN(COUNT(*)) IN ()))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (((MIN(COUNT(*)) IN ())) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (MIN(COUNT(*)) IN ()) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT ((MIN(COUNT(*)) IN ()))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (((MIN(COUNT(*)) IN ())) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0, vt0.c0, v0.c0 FROM v0, vt1, vt0;
SELECT vt1.c0, vt0.c0, v0.c0 FROM v0, vt1, vt0 WHERE (x'6ebc' COLLATE RTRIM) UNION ALL SELECT vt1.c0, vt0.c0, v0.c0 FROM v0, vt1, vt0 WHERE ((NOT (x'6ebc' COLLATE RTRIM))) UNION ALL SELECT ALL vt1.c0, vt0.c0, v0.c0 FROM v0, vt1, vt0 WHERE (((x'6ebc' COLLATE RTRIM) ISNULL));
SELECT ALL vt1.c0, vt0.c0, v0.c0 FROM v0, vt1, vt0;
SELECT DISTINCT vt1.c0 FROM vt0 FULL OUTER JOIN vt1 ON ((((vt1.c0)!=(vt1.c0))) IS FALSE);
SELECT DISTINCT vt1.c0 FROM vt0 FULL OUTER JOIN vt1 ON ((((vt1.c0)<>(vt1.c0))) IS FALSE) WHERE (((((vt0.c0 COLLATE RTRIM)OR(json_object(vt1.c0, '0.817089547657391'))))OR(((vt0.c0) IS TRUE)))) UNION SELECT DISTINCT vt1.c0 FROM vt0 FULL OUTER JOIN vt1 ON ((((vt1.c0)<>(vt1.c0))) IS FALSE) WHERE ((NOT (((((vt0.c0 COLLATE RTRIM)OR(json_object(vt1.c0, '0.817089547657391'))))OR(((vt0.c0) IS TRUE)))))) UNION SELECT DISTINCT vt1.c0 FROM vt0 FULL OUTER JOIN vt1 ON ((((vt1.c0)!=(vt1.c0))) IS FALSE) WHERE (((((((vt0.c0 COLLATE RTRIM)OR(json_object(vt1.c0, '0.817089547657391'))))OR(((vt0.c0) IS TRUE)))) ISNULL));
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (((v0.c0 COLLATE RTRIM) BETWEEN (v0.c0 COLLATE NOCASE) AND ((v0.c0 IN (v0.c0, v0.c0))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (((v0.c0 COLLATE RTRIM) BETWEEN (v0.c0 COLLATE NOCASE) AND ((v0.c0 IN (v0.c0, v0.c0))))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE (((((v0.c0 COLLATE RTRIM) BETWEEN (v0.c0 COLLATE NOCASE) AND ((v0.c0 IN (v0.c0, v0.c0))))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0, vt0.c0 FROM vt0, vt1, v0 GROUP BY v0.c0, vt0.c0;
SELECT v0.c0, vt0.c0 FROM vt0, vt1, v0 GROUP BY v0.c0, vt0.c0 HAVING (MAX(MAX(0.07067068300426149)) IN ()) UNION ALL SELECT v0.c0, vt0.c0 FROM vt0, vt1, v0 GROUP BY v0.c0, vt0.c0 HAVING (NOT ((MAX(MAX(0.07067068300426149)) IN ()))) UNION ALL SELECT v0.c0, vt0.c0 FROM vt0, vt1, v0 GROUP BY v0.c0, vt0.c0 HAVING (((MAX(MAX(0.07067068300426149)) IN ())) ISNULL);
SELECT v0.c0, vt0.c0 FROM vt0, vt1, v0 GROUP BY v0.c0, vt0.c0;
SELECT v0.c0, vt0.c0 FROM vt0, vt1, v0 GROUP BY v0.c0, vt0.c0 HAVING (MAX(MAX(0.07067068300426149)) IN ()) UNION ALL SELECT v0.c0, vt0.c0 FROM vt0, vt1, v0 GROUP BY v0.c0, vt0.c0 HAVING (NOT ((MAX(MAX(0.07067068300426149)) IN ()))) UNION ALL SELECT v0.c0, vt0.c0 FROM vt0, vt1, v0 GROUP BY v0.c0, vt0.c0 HAVING (((MAX(MAX(0.07067068300426149)) IN ())) ISNULL);
SELECT v0.c0, vt0.c0 FROM vt0, vt1, v0 GROUP BY v0.c0, vt0.c0;
SELECT vt1.c0, vt0.c0 FROM vt1, vt0;
SELECT vt1.c0, vt0.c0 FROM vt1, vt0 WHERE (((((vt0.c0 COLLATE NOCASE)OR((vt1.c0 IN ()))))AND(CAST(vt0.c0 AS BLOB)))) UNION ALL SELECT vt1.c0, vt0.c0 FROM vt1, vt0 WHERE ((NOT (((((vt0.c0 COLLATE NOCASE)OR((vt1.c0 IN ()))))AND(CAST(vt0.c0 AS BLOB)))))) UNION ALL SELECT vt1.c0, vt0.c0 FROM vt1, vt0 WHERE (((((((vt0.c0 COLLATE NOCASE)OR((vt1.c0 IN ()))))AND(CAST(vt0.c0 AS BLOB)))) ISNULL));
SELECT vt1.c0, vt0.c0 FROM vt1, vt0;
SELECT DISTINCT vt1.c0 FROM v0, vt1;
SELECT DISTINCT vt1.c0 FROM v0, vt1 WHERE ((((v0.c0)) BETWEEN (((- (v0.c0)))) AND ((NULL)))) UNION SELECT DISTINCT vt1.c0 FROM v0, vt1 WHERE ((NOT ((((v0.c0)) BETWEEN (((- (v0.c0)))) AND ((NULL)))))) UNION SELECT DISTINCT vt1.c0 FROM v0, vt1 WHERE ((((((v0.c0)) BETWEEN (((- (v0.c0)))) AND ((NULL)))) ISNULL));
SELECT DISTINCT vt1.c0 FROM v0, vt1;
SELECT ALL v0.c0 FROM v0, vt1 RIGHT OUTER JOIN vt0 ON (- ((+ (vt0.c0)))) GROUP BY v0.c0;
SELECT v0.c0 FROM v0, vt1 RIGHT OUTER JOIN vt0 ON (- ((+ (vt0.c0)))) WHERE (vt0.c0) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0, vt1 RIGHT OUTER JOIN vt0 ON (- ((+ (vt0.c0)))) WHERE ((NOT (vt0.c0))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0, vt1 RIGHT OUTER JOIN vt0 ON (- ((+ (vt0.c0)))) WHERE (((vt0.c0) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0, vt1 RIGHT OUTER JOIN vt0 ON (- ((+ (vt0.c0)))) GROUP BY v0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING vt0.c0 UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (vt0.c0)) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((vt0.c0) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING vt0.c0 UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (vt0.c0)) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((vt0.c0) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT * FROM vt1, v0;
SELECT * FROM vt1, v0 WHERE (v0.c0) UNION ALL SELECT ALL * FROM vt1, v0 WHERE ((NOT (v0.c0))) UNION ALL SELECT * FROM vt1, v0 WHERE (((v0.c0) ISNULL));
SELECT * FROM vt1, v0;
SELECT DISTINCT * FROM vt1, vt0, v0;
SELECT DISTINCT * FROM vt1, vt0, v0 WHERE ((NOT (CAST(vt1.c0 AS REAL)))) UNION SELECT DISTINCT * FROM vt1, vt0, v0 WHERE ((NOT ((NOT (CAST(vt1.c0 AS REAL)))))) UNION SELECT DISTINCT * FROM vt1, vt0, v0 WHERE ((((NOT (CAST(vt1.c0 AS REAL)))) ISNULL));
SELECT DISTINCT * FROM vt1, vt0, v0;
SELECT ALL vt0.c0, v0.c0, vt1.c0 FROM v0, vt1, vt0 GROUP BY vt0.c0, v0.c0, vt1.c0;
SELECT vt0.c0, v0.c0, vt1.c0 FROM v0, vt1, vt0 WHERE ((((v0.c0) IS FALSE) IN (CASE WHEN vt0.c0 THEN '106931862' END, ((((v0.c0)OR(v0.c0)))AND(NULL))))) GROUP BY vt0.c0, v0.c0, vt1.c0 UNION SELECT ALL vt0.c0, v0.c0, vt1.c0 FROM v0, vt1, vt0 WHERE ((NOT ((((v0.c0) IS FALSE) IN (CASE WHEN vt0.c0 THEN '106931862' END, ((((v0.c0)OR(v0.c0)))AND(NULL))))))) GROUP BY vt0.c0, v0.c0, vt1.c0 UNION SELECT ALL vt0.c0, v0.c0, vt1.c0 FROM v0 NOT INDEXED, vt1, vt0 WHERE ((((((v0.c0) IS FALSE) IN (CASE WHEN vt0.c0 THEN '106931862' END, ((((v0.c0)OR(v0.c0)))AND(NULL))))) ISNULL)) GROUP BY vt0.c0, v0.c0, vt1.c0;
SELECT ALL vt0.c0, v0.c0, vt1.c0 FROM v0, vt1, vt0 GROUP BY vt0.c0, v0.c0, vt1.c0;
SELECT ALL vt1.c0 FROM vt0, vt1, v0 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt0, vt1, v0 GROUP BY vt1.c0 HAVING GROUP_CONCAT(((COUNT(*)) NOT BETWEEN (vt1.c0) AND (vt0.c0))) UNION ALL SELECT vt1.c0 FROM vt0, vt1, v0 GROUP BY vt1.c0 HAVING (NOT (GROUP_CONCAT(((COUNT(*)) NOT BETWEEN (vt1.c0) AND (vt0.c0))))) UNION ALL SELECT ALL vt1.c0 FROM vt0, vt1, v0 GROUP BY vt1.c0 HAVING ((GROUP_CONCAT(((COUNT(*)) NOT BETWEEN (vt1.c0) AND (vt0.c0)))) ISNULL);
SELECT ALL vt0.c0, v0.c0 FROM vt1, vt0 LEFT OUTER JOIN v0 ON vt1.c0;
SELECT vt0.c0, v0.c0 FROM vt1, vt0 LEFT OUTER JOIN v0 ON vt1.c0 WHERE (vt0.c0) UNION ALL SELECT vt0.c0, v0.c0 FROM vt1, vt0 LEFT OUTER JOIN v0 ON vt1.c0 WHERE ((NOT (vt0.c0))) UNION ALL SELECT vt0.c0, v0.c0 FROM vt1, vt0 LEFT OUTER JOIN v0 ON vt1.c0 WHERE (((vt0.c0) ISNULL));
SELECT ALL vt0.c0, v0.c0 FROM vt1, vt0 LEFT OUTER JOIN v0 ON vt1.c0;
SELECT DISTINCT * FROM vt0, vt1 NATURAL JOIN v0;
SELECT DISTINCT * FROM vt0, vt1 NATURAL JOIN v0 WHERE (LOWER(((v0.c0) IS FALSE))) UNION SELECT DISTINCT * FROM vt0, vt1 NATURAL JOIN v0 WHERE ((NOT (LOWER(((v0.c0) IS FALSE))))) UNION SELECT DISTINCT * FROM vt0, vt1 NATURAL JOIN v0 WHERE (((LOWER(((v0.c0) IS FALSE))) ISNULL));
SELECT DISTINCT * FROM vt0, vt1 NATURAL JOIN v0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE ((((NOT (v0.c0))) IS FALSE)) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT ((((NOT (v0.c0))) IS FALSE)))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((((((NOT (v0.c0))) IS FALSE)) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING TIME(TOTAL(vt1.c0), 0Xffffffffe28a5958, (~ (vt1.c0))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (TIME(TOTAL(vt1.c0), 0xffffffffe28a5958, (~ (vt1.c0))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((TIME(TOTAL(vt1.c0), 0xffffffffe28a5958, (~ (vt1.c0)))) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING TIME(TOTAL(vt1.c0), 0Xffffffffe28a5958, (~ (vt1.c0))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (TIME(TOTAL(vt1.c0), 0xffffffffe28a5958, (~ (vt1.c0))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((TIME(TOTAL(vt1.c0), 0xffffffffe28a5958, (~ (vt1.c0)))) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL * FROM v0 CROSS JOIN vt1 ON CASE WHEN CAST(v0.c0 AS REAL) THEN vt1.c0 COLLATE RTRIM ELSE (((v0.c0))>=((v0.c0))) END LEFT OUTER JOIN vt0 ON UPPER((((vt1.c0, vt0.c0, v0.c0, vt0.c0, 0.08860802829021608)) BETWEEN ((vt1.c0, v0.c0, v0.c0, vt1.c0, vt0.c0)) AND ((v0.c0, vt1.c0, vt0.c0, vt0.c0, vt1.c0))));
SELECT * FROM v0 CROSS JOIN vt1 ON CASE WHEN CAST(v0.c0 AS REAL) THEN vt1.c0 COLLATE RTRIM ELSE (((v0.c0))>=((v0.c0))) END LEFT OUTER JOIN vt0 ON UPPER((((vt1.c0, vt0.c0, v0.c0, vt0.c0, 0.08860802829021608)) BETWEEN ((vt1.c0, v0.c0, v0.c0, vt1.c0, vt0.c0)) AND ((v0.c0, vt1.c0, vt0.c0, vt0.c0, vt1.c0)))) WHERE (CAST(((vt1.c0)%(vt0.c0)) AS BLOB)) ORDER BY ((('-631272791' IN (vt1.c0))) NOT BETWEEN (((((v0.c0)AND(v0.c0)))AND(v0.c0))) AND ((- (vt1.c0)))) ASC  NULLS FIRST, (((vt1.c0)) BETWEEN (((+ (vt1.c0)))) AND (((((vt0.c0, vt1.c0, x''))<=((vt0.c0, vt0.c0, vt1.c0))))));
SELECT * FROM v0 CROSS JOIN vt1 ON CASE WHEN CAST(v0.c0 AS REAL) THEN vt1.c0 COLLATE RTRIM ELSE (((v0.c0))>=((v0.c0))) END LEFT OUTER JOIN vt0 ON UPPER((((vt1.c0, vt0.c0, v0.c0, vt0.c0, 0.08860802829021608)) BETWEEN ((vt1.c0, v0.c0, v0.c0, vt1.c0, vt0.c0)) AND ((v0.c0, vt1.c0, vt0.c0, vt0.c0, vt1.c0)))) WHERE ((NOT (CAST(((vt1.c0)%(vt0.c0)) AS BLOB)))) ORDER BY ((('-631272791' IN (vt1.c0))) NOT BETWEEN (((((v0.c0)AND(v0.c0)))AND(v0.c0))) AND ((- (vt1.c0)))) ASC  NULLS FIRST, (((vt1.c0)) BETWEEN (((+ (vt1.c0)))) AND (((((vt0.c0, vt1.c0, x''))<=((vt0.c0, vt0.c0, vt1.c0))))));
SELECT ALL * FROM v0 CROSS JOIN vt1 ON CASE WHEN CAST(v0.c0 AS REAL) THEN vt1.c0 COLLATE RTRIM ELSE (((v0.c0))>=((v0.c0))) END LEFT OUTER JOIN vt0 ON UPPER((((vt1.c0, vt0.c0, v0.c0, vt0.c0, 0.08860802829021608)) BETWEEN ((vt1.c0, v0.c0, v0.c0, vt1.c0, vt0.c0)) AND ((v0.c0, vt1.c0, vt0.c0, vt0.c0, vt1.c0)))) WHERE (((CAST(((vt1.c0)%(vt0.c0)) AS BLOB)) ISNULL)) ORDER BY ((('-631272791' IN (vt1.c0))) NOT BETWEEN (((((v0.c0)AND(v0.c0)))AND(v0.c0))) AND ((- (vt1.c0)))) ASC  NULLS FIRST, (((vt1.c0)) BETWEEN (((+ (vt1.c0)))) AND (((((vt0.c0, vt1.c0, x''))<=((vt0.c0, vt0.c0, vt1.c0))))));
SELECT ALL * FROM v0 CROSS JOIN vt1 ON CASE WHEN CAST(v0.c0 AS REAL) THEN vt1.c0 COLLATE RTRIM ELSE (((v0.c0))>=((v0.c0))) END LEFT OUTER JOIN vt0 ON UPPER((((vt1.c0, vt0.c0, v0.c0, vt0.c0, 0.08860802829021608)) BETWEEN ((vt1.c0, v0.c0, v0.c0, vt1.c0, vt0.c0)) AND ((v0.c0, vt1.c0, vt0.c0, vt0.c0, vt1.c0))));
SELECT DISTINCT vt1.c0 FROM vt0, vt1;
SELECT DISTINCT vt1.c0 FROM vt0, vt1 WHERE ('-1227698499') UNION SELECT DISTINCT vt1.c0 FROM vt0, vt1 WHERE ((NOT ('-1227698499'))) UNION SELECT DISTINCT vt1.c0 FROM vt0, vt1 WHERE ((('-1227698499') ISNULL));
SELECT DISTINCT vt1.c0 FROM vt0, vt1;
SELECT v0.c0 FROM vt0 LEFT OUTER JOIN v0 ON ((((((v0.c0)IS NOT(vt0.c0)))OR(NULL)))OR(((v0.c0)%(v0.c0)))) GROUP BY v0.c0;
SELECT v0.c0 FROM vt0 LEFT OUTER JOIN v0 ON ((((((v0.c0)IS NOT(vt0.c0)))OR(NULL)))OR(((v0.c0)%(v0.c0)))) WHERE (CASE v0.c0 COLLATE NOCASE  WHEN ((((((((v0.c0)AND(NULL)))OR(vt0.c0)))OR(v0.c0)))OR(v0.c0)) THEN (+ (v0.c0)) ELSE (vt0.c0 IN (v0.c0)) END) GROUP BY v0.c0 UNION SELECT v0.c0 FROM vt0 LEFT OUTER JOIN v0 ON ((((((v0.c0)IS NOT(vt0.c0)))OR(NULL)))OR(((v0.c0)%(v0.c0)))) WHERE ((NOT (CASE v0.c0 COLLATE NOCASE  WHEN ((((((((v0.c0)AND(NULL)))OR(vt0.c0)))OR(v0.c0)))OR(v0.c0)) THEN (+ (v0.c0)) ELSE (vt0.c0 IN (v0.c0)) END))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM vt0 NOT INDEXED LEFT OUTER JOIN v0 ON ((((((v0.c0)IS NOT(vt0.c0)))OR(NULL)))OR(((v0.c0)%(v0.c0)))) WHERE (((CASE v0.c0 COLLATE NOCASE  WHEN ((((((((v0.c0)AND(NULL)))OR(vt0.c0)))OR(v0.c0)))OR(v0.c0)) THEN (+ (v0.c0)) ELSE (vt0.c0 IN (v0.c0)) END) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM vt0 LEFT OUTER JOIN v0 ON ((((((v0.c0)IS NOT(vt0.c0)))OR(NULL)))OR(((v0.c0)%(v0.c0)))) GROUP BY v0.c0;
SELECT ALL vt1.c0 FROM vt1 NOT INDEXED GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING AVG(((SUM(vt1.c0))==(NULL))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (AVG(((SUM(vt1.c0))==(NULL))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((AVG(((SUM(vt1.c0))=(NULL)))) ISNULL);
SELECT vt1.c0, v0.c0 FROM vt0, v0, vt1;
SELECT ALL vt1.c0, v0.c0 FROM vt0, v0, vt1 WHERE (CAST(((vt0.c0) BETWEEN (vt0.c0) AND (v0.c0)) AS REAL)) UNION ALL SELECT vt1.c0, v0.c0 FROM vt0, v0, vt1 WHERE ((NOT (CAST(((vt0.c0) BETWEEN (vt0.c0) AND (v0.c0)) AS REAL)))) UNION ALL SELECT vt1.c0, v0.c0 FROM vt0, v0, vt1 WHERE (((CAST(((vt0.c0) BETWEEN (vt0.c0) AND (v0.c0)) AS REAL)) ISNULL));
SELECT vt1.c0, v0.c0 FROM vt0, v0, vt1;
SELECT DISTINCT vt0.c0, v0.c0 FROM vt0, vt1, v0;
SELECT DISTINCT vt0.c0, v0.c0 FROM vt0, vt1, v0 WHERE (((((vt0.c0))<((vt1.c0))) IN ())) UNION SELECT DISTINCT vt0.c0, v0.c0 FROM vt0, vt1, v0 WHERE ((NOT (((((vt0.c0))<((vt1.c0))) IN ())))) UNION SELECT DISTINCT vt0.c0, v0.c0 FROM vt0, vt1, v0 WHERE (((((((vt0.c0))<((vt1.c0))) IN ())) ISNULL));
SELECT DISTINCT vt0.c0, v0.c0 FROM vt0, vt1, v0;
SELECT ALL vt1.c0, vt0.c0 FROM vt0, v0 LEFT OUTER JOIN vt1 ON (((vt0.c0) NOT BETWEEN (v0.c0) AND (-7.93954631E8)) IN ()) GROUP BY vt1.c0, vt0.c0;
SELECT vt1.c0, vt0.c0 FROM vt0, v0 LEFT OUTER JOIN vt1 ON (((vt0.c0) NOT BETWEEN (v0.c0) AND (-7.93954631E8)) IN ()) WHERE (v0.c0) GROUP BY vt1.c0, vt0.c0 UNION SELECT ALL vt1.c0, vt0.c0 FROM vt0, v0 LEFT OUTER JOIN vt1 ON (((vt0.c0) NOT BETWEEN (v0.c0) AND (-7.93954631E8)) IN ()) WHERE ((NOT (v0.c0))) GROUP BY vt1.c0, vt0.c0 UNION SELECT ALL vt1.c0, vt0.c0 FROM vt0, v0 NOT INDEXED LEFT OUTER JOIN vt1 ON (((vt0.c0) NOT BETWEEN (v0.c0) AND (-7.93954631E8)) IN ()) WHERE (((v0.c0) ISNULL)) GROUP BY vt1.c0, vt0.c0;
SELECT ALL vt1.c0, vt0.c0 FROM vt0, v0 LEFT OUTER JOIN vt1 ON (((vt0.c0) NOT BETWEEN (v0.c0) AND (-7.93954631E8)) IN ()) GROUP BY vt1.c0, vt0.c0;
SELECT v0.c0 FROM vt1, v0, vt0 GROUP BY v0.c0;
SELECT v0.c0 FROM vt1, v0, vt0 GROUP BY v0.c0 HAVING SUM(((NULL)AND(MAX(vt0.c0)))) UNION ALL SELECT v0.c0 FROM vt1, v0, vt0 GROUP BY v0.c0 HAVING (NOT (SUM(((NULL)AND(MAX(vt0.c0)))))) UNION ALL SELECT v0.c0 FROM vt1, v0, vt0 NOT INDEXED GROUP BY v0.c0 HAVING ((SUM(((NULL)AND(MAX(vt0.c0))))) ISNULL);
SELECT ALL * FROM vt1, vt0, v0;
SELECT * FROM vt1, vt0, v0 WHERE (CASE (vt0.c0 IN ())  WHEN ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) THEN CAST(vt1.c0 AS REAL) WHEN UPPER(vt1.c0) THEN CASE '-853186835'  WHEN v0.c0 THEN v0.c0 END WHEN (v0.c0 IN ()) THEN rtreenode(vt0.c0, 0.0898479538379654) END) UNION ALL SELECT * FROM vt1, vt0, v0 WHERE ((NOT (CASE (vt0.c0 IN ())  WHEN ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) THEN CAST(vt1.c0 AS REAL) WHEN UPPER(vt1.c0) THEN CASE '-853186835'  WHEN v0.c0 THEN v0.c0 END WHEN (v0.c0 IN ()) THEN rtreenode(vt0.c0, 0.0898479538379654) END))) UNION ALL SELECT * FROM vt1, vt0, v0 WHERE (((CASE (vt0.c0 IN ())  WHEN ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) THEN CAST(vt1.c0 AS REAL) WHEN UPPER(vt1.c0) THEN CASE '-853186835'  WHEN v0.c0 THEN v0.c0 END WHEN (v0.c0 IN ()) THEN rtreenode(vt0.c0, 0.0898479538379654) END) ISNULL));
SELECT ALL * FROM vt1, vt0, v0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 NOT INDEXED WHERE ((((vt0.c0)==(vt0.c0)) IN ())) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT ((((vt0.c0)=(vt0.c0)) IN ())))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((((((vt0.c0)=(vt0.c0)) IN ())) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT vt1.c0 FROM vt0, vt1, v0 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt0, vt1, v0 WHERE (((UPPER(DISTINCT vt1.c0)) BETWEEN (LIKELIHOOD(v0.c0, 0.4460413446574003)) AND (v0.c0))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt0, vt1, v0 WHERE ((NOT (((UPPER(DISTINCT vt1.c0)) BETWEEN (LIKELIHOOD(v0.c0, 0.4460413446574003)) AND (v0.c0))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt0, vt1, v0 WHERE (((((UPPER(DISTINCT vt1.c0)) BETWEEN (LIKELIHOOD(v0.c0, 0.4460413446574003)) AND (v0.c0))) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt0, vt1, v0 GROUP BY vt1.c0;
SELECT vt1.c0, v0.c0 FROM v0, vt1 GROUP BY vt1.c0, v0.c0;
SELECT ALL vt1.c0, v0.c0 FROM v0, vt1 GROUP BY vt1.c0, v0.c0 HAVING SUM(((TOTAL(AVG(COUNT(*))))&(v0.c0))) UNION ALL SELECT vt1.c0, v0.c0 FROM v0, vt1 GROUP BY vt1.c0, v0.c0 HAVING (NOT (SUM(((TOTAL(AVG(COUNT(*))))&(v0.c0))))) UNION ALL SELECT ALL vt1.c0, v0.c0 FROM v0, vt1 GROUP BY vt1.c0, v0.c0 HAVING ((SUM(((TOTAL(AVG(COUNT(*))))&(v0.c0)))) ISNULL);
SELECT ALL MAX(((STRFTIME('?6', vt1.c0, vt1.c0)) BETWEEN (((vt1.c0) ISNULL)) AND (SQLITE_SOURCE_ID()))) FROM vt1;
SELECT ALL vt0.c0, v0.c0 FROM v0, vt0, vt1;
SELECT ALL vt0.c0, v0.c0 FROM v0, vt0, vt1 WHERE (v0.c0) UNION ALL SELECT ALL vt0.c0, v0.c0 FROM v0, vt0, vt1 WHERE ((NOT (v0.c0))) UNION ALL SELECT vt0.c0, v0.c0 FROM v0, vt0, vt1 WHERE (((v0.c0) ISNULL));
SELECT ALL vt0.c0, v0.c0 FROM v0, vt0, vt1;
SELECT DISTINCT * FROM v0, vt0, vt1;
SELECT DISTINCT * FROM v0, vt0, vt1 WHERE (((((vt0.c0)+(v0.c0)))>(((vt1.c0) ISNULL)))) UNION SELECT DISTINCT * FROM v0, vt0, vt1 WHERE ((NOT (((((vt0.c0)+(v0.c0)))>(((vt1.c0) ISNULL)))))) UNION SELECT DISTINCT * FROM v0, vt0, vt1 WHERE (((((((vt0.c0)+(v0.c0)))>(((vt1.c0) ISNULL)))) ISNULL));
SELECT DISTINCT * FROM v0, vt0, vt1;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (((SQLITE_COMPILEOPTION_GET(-1272727103)) NOTNULL)) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT (((SQLITE_COMPILEOPTION_GET(-1272727103)) NOTNULL)))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((((SQLITE_COMPILEOPTION_GET(-1272727103)) NOTNULL)) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING AVG(TOTAL(TOTAL(AVG(GROUP_CONCAT(MIN(vt0.c0)))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (AVG(TOTAL(TOTAL(AVG(GROUP_CONCAT(MIN(vt0.c0)))))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((AVG(TOTAL(TOTAL(AVG(GROUP_CONCAT(MIN(vt0.c0))))))) ISNULL);
SELECT * FROM vt1, v0;
SELECT * FROM vt1, v0 WHERE ((((vt1.c0, ((v0.c0)=(vt1.c0)), TRIM(DISTINCT v0.c0)))>=((CASE v0.c0  WHEN v0.c0 THEN vt1.c0 ELSE 5.66351939E8 END, ((((((((((((v0.c0)AND(x'')))OR(0.38292357170412106)))AND(v0.c0)))AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)), ((v0.c0) NOT NULL))))) UNION ALL SELECT ALL * FROM vt1, v0 WHERE ((NOT ((((vt1.c0, ((v0.c0)=(vt1.c0)), TRIM(DISTINCT v0.c0)))>=((CASE v0.c0  WHEN v0.c0 THEN vt1.c0 ELSE 5.66351939E8 END, ((((((((((((v0.c0)AND(x'')))OR(0.38292357170412106)))AND(v0.c0)))AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)), ((v0.c0) NOT NULL))))))) UNION ALL SELECT ALL * FROM vt1, v0 WHERE ((((((vt1.c0, ((v0.c0)=(vt1.c0)), TRIM(DISTINCT v0.c0)))>=((CASE v0.c0  WHEN v0.c0 THEN vt1.c0 ELSE 5.66351939E8 END, ((((((((((((v0.c0)AND(x'')))OR(0.38292357170412106)))AND(v0.c0)))AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)), ((v0.c0) NOT NULL))))) ISNULL));
SELECT * FROM vt1, v0;
SELECT DISTINCT vt0.c0, v0.c0 FROM vt0, v0;
SELECT DISTINCT vt0.c0, v0.c0 FROM vt0, v0 WHERE ((NOT (((v0.c0) BETWEEN (v0.c0) AND (vt0.c0))))) UNION SELECT DISTINCT vt0.c0, v0.c0 FROM vt0, v0 WHERE ((NOT ((NOT (((v0.c0) BETWEEN (v0.c0) AND (vt0.c0))))))) UNION SELECT DISTINCT vt0.c0, v0.c0 FROM vt0, v0 WHERE ((((NOT (((v0.c0) BETWEEN (v0.c0) AND (vt0.c0))))) ISNULL));
SELECT DISTINCT vt0.c0, v0.c0 FROM vt0, v0;
SELECT vt1.c0, vt0.c0 FROM v0 FULL OUTER JOIN vt0 ON LIKELY(('-1263543797' IN (vt1.c0, vt1.c0))) RIGHT OUTER JOIN vt1 ON x'daa7' GROUP BY vt1.c0, vt0.c0;
SELECT vt0.c0 FROM vt1, vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt1, vt0 GROUP BY vt0.c0 HAVING ((GROUP_CONCAT(GROUP_CONCAT(COUNT(vt0.c0))))LIKE(TOTAL(vt0.c0))) UNION ALL SELECT vt0.c0 FROM vt1, vt0 GROUP BY vt0.c0 HAVING (NOT (((GROUP_CONCAT(GROUP_CONCAT(COUNT(vt0.c0))))LIKE(TOTAL(vt0.c0))))) UNION ALL SELECT vt0.c0 FROM vt1, vt0 GROUP BY vt0.c0 HAVING ((((GROUP_CONCAT(GROUP_CONCAT(COUNT(vt0.c0))))LIKE(TOTAL(vt0.c0)))) ISNULL);
SELECT vt1.c0 FROM vt0, vt1 CROSS JOIN v0 ON (((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, v0.c0, v0.c0)) AND ((vt1.c0, x'', '-1204082494'))) COLLATE NOCASE;
SELECT vt1.c0 FROM vt0, vt1 CROSS JOIN v0 ON (((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, v0.c0, v0.c0)) AND ((vt1.c0, x'', '-1204082494'))) COLLATE NOCASE WHERE ((- (NULLIF(vt1.c0, v0.c0)))) UNION ALL SELECT ALL vt1.c0 FROM vt0, vt1 CROSS JOIN v0 ON (((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, v0.c0, v0.c0)) AND ((vt1.c0, x'', '-1204082494'))) COLLATE NOCASE WHERE ((NOT ((- (NULLIF(vt1.c0, v0.c0)))))) UNION ALL SELECT ALL vt1.c0 FROM vt0, vt1 CROSS JOIN v0 ON (((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, v0.c0, v0.c0)) AND ((vt1.c0, x'', '-1204082494'))) COLLATE NOCASE WHERE ((((- (NULLIF(vt1.c0, v0.c0)))) ISNULL));
SELECT vt1.c0 FROM vt0, vt1 CROSS JOIN v0 ON (((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, v0.c0, v0.c0)) AND ((vt1.c0, x'', '-1204082494'))) COLLATE NOCASE;
SELECT DISTINCT vt0.c0, vt1.c0, v0.c0 FROM v0, vt1, vt0;
SELECT DISTINCT vt0.c0, vt1.c0, v0.c0 FROM v0, vt1, vt0 WHERE ('-1799662764') UNION SELECT DISTINCT vt0.c0, vt1.c0, v0.c0 FROM v0, vt1, vt0 WHERE ((NOT ('-1799662764'))) UNION SELECT DISTINCT vt0.c0, vt1.c0, v0.c0 FROM v0, vt1, vt0 WHERE ((('-1799662764') ISNULL));
SELECT DISTINCT vt0.c0, vt1.c0, v0.c0 FROM v0, vt1, vt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (CAST(('54747605' IN ()) AS TEXT)) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (CAST(('54747605' IN ()) AS TEXT)))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((CAST(('54747605' IN ()) AS TEXT)) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (- (MIN(GROUP_CONCAT(COUNT(*)), TOTAL(vt1.c0)))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT ((- (MIN(GROUP_CONCAT(COUNT(*)), TOTAL(vt1.c0)))))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (((- (MIN(GROUP_CONCAT(COUNT(*)), TOTAL(vt1.c0))))) ISNULL);
SELECT ALL vt1.c0, v0.c0 FROM v0 LEFT OUTER JOIN vt1 ON HEX(CAST(vt1.c0 AS TEXT));
SELECT ALL vt1.c0, v0.c0 FROM v0 LEFT OUTER JOIN vt1 ON HEX(CAST(vt1.c0 AS TEXT)) WHERE (((v0.c0) BETWEEN ((vt1.c0 IN ())) AND (((vt1.c0)GLOB(v0.c0))))) UNION ALL SELECT ALL vt1.c0, v0.c0 FROM v0 LEFT OUTER JOIN vt1 ON HEX(CAST(vt1.c0 AS TEXT)) WHERE ((NOT (((v0.c0) BETWEEN ((vt1.c0 IN ())) AND (((vt1.c0)GLOB(v0.c0))))))) UNION ALL SELECT ALL vt1.c0, v0.c0 FROM v0 LEFT OUTER JOIN vt1 ON HEX(CAST(vt1.c0 AS TEXT)) WHERE (((((v0.c0) BETWEEN ((vt1.c0 IN ())) AND (((vt1.c0)GLOB(v0.c0))))) ISNULL));
SELECT ALL vt1.c0, v0.c0 FROM v0 LEFT OUTER JOIN vt1 ON HEX(CAST(vt1.c0 AS TEXT));
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((((NULL)OR((((vt0.c0))>=((vt0.c0))))))AND(ROUND(NULL, vt0.c0)))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((((NULL)OR((((vt0.c0))>=((vt0.c0))))))AND(ROUND(NULL, vt0.c0)))))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((((NULL)OR((((vt0.c0))>=((vt0.c0))))))AND(ROUND(NULL, vt0.c0)))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT vt0.c0 FROM vt0, vt1 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, vt1 NOT INDEXED WHERE (CAST(CASE vt0.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c0 END AS INTEGER)) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0, vt1 WHERE ((NOT (CAST(CASE vt0.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c0 END AS INTEGER)))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0, vt1 WHERE (((CAST(CASE vt0.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c0 END AS INTEGER)) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0, vt1 GROUP BY vt0.c0;
SELECT ALL v0.c0 FROM vt1, v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM vt1, v0 GROUP BY v0.c0 HAVING COUNT((((vt1.c0, MIN(vt1.c0), vt1.c0)) BETWEEN ((vt1.c0, v0.c0, MIN(TOTAL(MIN(vt1.c0))))) AND ((GROUP_CONCAT(SUM(GROUP_CONCAT(TOTAL(vt1.c0)))), MIN(vt1.c0), TOTAL(vt1.c0))))) UNION ALL SELECT v0.c0 FROM vt1, v0 GROUP BY v0.c0 HAVING (NOT (COUNT((((vt1.c0, MIN(vt1.c0), vt1.c0)) BETWEEN ((vt1.c0, v0.c0, MIN(TOTAL(MIN(vt1.c0))))) AND ((GROUP_CONCAT(SUM(GROUP_CONCAT(TOTAL(vt1.c0)))), MIN(vt1.c0), TOTAL(vt1.c0))))))) UNION ALL SELECT v0.c0 FROM vt1, v0 GROUP BY v0.c0 HAVING ((COUNT((((vt1.c0, MIN(vt1.c0), vt1.c0)) BETWEEN ((vt1.c0, v0.c0, MIN(TOTAL(MIN(vt1.c0))))) AND ((GROUP_CONCAT(SUM(GROUP_CONCAT(TOTAL(vt1.c0)))), MIN(vt1.c0), TOTAL(vt1.c0)))))) ISNULL);
SELECT vt1.c0, v0.c0, vt0.c0 FROM v0, vt0, vt1;
SELECT vt1.c0, v0.c0, vt0.c0 FROM v0, vt0, vt1 WHERE (((vt1.c0)>(CASE '*'  WHEN vt1.c0 THEN vt1.c0 ELSE v0.c0 END))) UNION ALL SELECT vt1.c0, v0.c0, vt0.c0 FROM v0, vt0, vt1 WHERE ((NOT (((vt1.c0)>(CASE '*'  WHEN vt1.c0 THEN vt1.c0 ELSE v0.c0 END))))) UNION ALL SELECT ALL vt1.c0, v0.c0, vt0.c0 FROM v0, vt0, vt1 WHERE (((((vt1.c0)>(CASE '*'  WHEN vt1.c0 THEN vt1.c0 ELSE v0.c0 END))) ISNULL));
SELECT vt1.c0, v0.c0, vt0.c0 FROM v0, vt0, vt1;
SELECT DISTINCT v0.c0, vt1.c0, vt0.c0 FROM v0, vt0, vt1;
SELECT DISTINCT v0.c0, vt1.c0, vt0.c0 FROM v0, vt0, vt1 WHERE ((v0.c0 IN (vt0.c0)) COLLATE RTRIM) UNION SELECT DISTINCT v0.c0, vt1.c0, vt0.c0 FROM v0, vt0, vt1 WHERE ((NOT ((v0.c0 IN (vt0.c0)) COLLATE RTRIM))) UNION SELECT DISTINCT v0.c0, vt1.c0, vt0.c0 FROM v0 NOT INDEXED, vt0, vt1 WHERE ((((v0.c0 IN (vt0.c0)) COLLATE RTRIM) ISNULL));
SELECT DISTINCT v0.c0, vt1.c0, vt0.c0 FROM v0, vt0, vt1;
SELECT ALL vt1.c0, vt0.c0 FROM vt0, v0, vt1 GROUP BY vt1.c0, vt0.c0;
SELECT vt1.c0, vt0.c0 FROM vt0, v0, vt1 WHERE ((- (v0.c0 COLLATE RTRIM))) GROUP BY vt1.c0, vt0.c0 UNION SELECT ALL vt1.c0, vt0.c0 FROM vt0, v0, vt1 WHERE ((NOT ((- (v0.c0 COLLATE RTRIM))))) GROUP BY vt1.c0, vt0.c0 UNION SELECT ALL vt1.c0, vt0.c0 FROM vt0, v0, vt1 WHERE ((((- (v0.c0 COLLATE RTRIM))) ISNULL)) GROUP BY vt1.c0, vt0.c0;
SELECT ALL vt1.c0, vt0.c0 FROM vt0, v0, vt1 GROUP BY vt1.c0, vt0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((v0.c0 COLLATE RTRIM)<<(NULLIF(DISTINCT TOTAL(TOTAL(COUNT(*))), NULL))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (((v0.c0 COLLATE RTRIM)<<(NULLIF(DISTINCT TOTAL(TOTAL(COUNT(*))), NULL))))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((((v0.c0 COLLATE RTRIM)<<(NULLIF(DISTINCT TOTAL(TOTAL(COUNT(*))), NULL)))) ISNULL);
SELECT ALL * FROM v0, vt1;
SELECT * FROM v0, vt1 WHERE ((+ (((v0.c0)||(v0.c0))))) UNION ALL SELECT * FROM v0, vt1 WHERE ((NOT ((+ (((v0.c0)||(v0.c0))))))) UNION ALL SELECT ALL * FROM v0, vt1 WHERE ((((+ (((v0.c0)||(v0.c0))))) ISNULL));
SELECT ALL * FROM v0, vt1;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (vt1.c0 COLLATE NOCASE) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (vt1.c0 COLLATE NOCASE))) UNION SELECT DISTINCT * FROM vt1 WHERE (((vt1.c0 COLLATE NOCASE) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT v0.c0, vt1.c0 FROM vt1, v0 GROUP BY v0.c0, vt1.c0;
SELECT v0.c0, vt1.c0 FROM vt1, v0 WHERE (((((v0.c0))<=((v0.c0))) IN ())) GROUP BY v0.c0, vt1.c0 UNION SELECT v0.c0, vt1.c0 FROM vt1, v0 WHERE ((NOT (((((v0.c0))<=((v0.c0))) IN ())))) GROUP BY v0.c0, vt1.c0 UNION SELECT ALL v0.c0, vt1.c0 FROM vt1, v0 WHERE (((((((v0.c0))<=((v0.c0))) IN ())) ISNULL)) GROUP BY v0.c0, vt1.c0;
SELECT v0.c0, vt1.c0 FROM vt1, v0 GROUP BY v0.c0, vt1.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING SUM(((AVG(TOTAL(v0.c0))) NOT NULL)) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (SUM(((AVG(TOTAL(v0.c0))) NOT NULL)))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((SUM(((AVG(TOTAL(v0.c0))) NOT NULL))) ISNULL);
SELECT ALL vt1.c0, v0.c0 FROM vt1, v0;
SELECT vt1.c0, v0.c0 FROM vt1, v0 WHERE (((((UNLIKELY(vt1.c0))AND(vt1.c0 COLLATE RTRIM)))OR(((v0.c0)LIKE(0xfffffffff6cce539))))) UNION ALL SELECT ALL vt1.c0, v0.c0 FROM vt1, v0 WHERE ((NOT (((((UNLIKELY(vt1.c0))AND(vt1.c0 COLLATE RTRIM)))OR(((v0.c0)LIKE(0Xfffffffff6cce539))))))) UNION ALL SELECT vt1.c0, v0.c0 FROM vt1, v0 WHERE (((((((UNLIKELY(vt1.c0))AND(vt1.c0 COLLATE RTRIM)))OR(((v0.c0)LIKE(0Xfffffffff6cce539))))) ISNULL));
SELECT ALL vt1.c0, v0.c0 FROM vt1, v0;
SELECT DISTINCT * FROM vt1, v0;
SELECT DISTINCT * FROM vt1, v0 WHERE ((((((vt1.c0, v0.c0, v0.c0, v0.c0, v0.c0))<=((vt1.c0, 'sL曑H', 1.674547019E9, v0.c0, vt1.c0))))GLOB(((v0.c0) ISNULL)))) UNION SELECT DISTINCT * FROM vt1, v0 WHERE ((NOT ((((((vt1.c0, v0.c0, v0.c0, v0.c0, v0.c0))<=((vt1.c0, 'sL曑H', 1.674547019E9, v0.c0, vt1.c0))))GLOB(((v0.c0) ISNULL)))))) UNION SELECT DISTINCT * FROM vt1, v0 WHERE ((((((((vt1.c0, v0.c0, v0.c0, v0.c0, v0.c0))<=((vt1.c0, 'sL曑H', 1.674547019E9, v0.c0, vt1.c0))))GLOB(((v0.c0) ISNULL)))) ISNULL));
SELECT DISTINCT * FROM vt1, v0;
SELECT vt0.c0 FROM v0, vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM v0, vt0 WHERE (((v0.c0 COLLATE RTRIM) ISNULL)) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM v0, vt0 WHERE ((NOT (((v0.c0 COLLATE RTRIM) ISNULL)))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM v0, vt0 WHERE (((((v0.c0 COLLATE RTRIM) ISNULL)) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM v0, vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0, vt1, v0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0, vt1, v0 GROUP BY vt0.c0 HAVING MAX(((((((((((((SUM(MIN(vt0.c0)))AND(MAX(COUNT(*)))))OR(COUNT(*))))OR(vt0.c0)))OR(COUNT(*))))OR(vt1.c0)))AND(COUNT(*)))) UNION ALL SELECT vt0.c0 FROM vt0, vt1, v0 GROUP BY vt0.c0 HAVING (NOT (MAX(((((((((((((SUM(MIN(vt0.c0)))AND(MAX(COUNT(*)))))OR(COUNT(*))))OR(vt0.c0)))OR(COUNT(*))))OR(vt1.c0)))AND(COUNT(*)))))) UNION ALL SELECT ALL vt0.c0 FROM vt0, vt1, v0 GROUP BY vt0.c0 HAVING ((MAX(((((((((((((SUM(MIN(vt0.c0)))AND(MAX(COUNT(*)))))OR(COUNT(*))))OR(vt0.c0)))OR(COUNT(*))))OR(vt1.c0)))AND(COUNT(*))))) ISNULL);
SELECT * FROM v0;
SELECT ALL * FROM v0 WHERE ((((((v0.c0))=((v0.c0)))) IS TRUE)) UNION ALL SELECT * FROM v0 WHERE ((NOT ((((((v0.c0))==((v0.c0)))) IS TRUE)))) UNION ALL SELECT * FROM v0 WHERE ((((((((v0.c0))=((v0.c0)))) IS TRUE)) ISNULL));
SELECT * FROM v0;
SELECT DISTINCT * FROM vt0 CROSS JOIN vt1 ON (- (CAST(vt1.c0 AS REAL))) FULL OUTER JOIN v0 ON (((CAST(vt0.c0 AS NUMERIC), CAST(v0.c0 AS NUMERIC), ((vt1.c0)>>(vt0.c0))))<=((((((vt0.c0)OR(v0.c0)))OR(v0.c0)), CAST(vt1.c0 AS NUMERIC), ((vt1.c0) IS FALSE))));
SELECT DISTINCT * FROM vt0 CROSS JOIN vt1 ON (- (CAST(vt1.c0 AS REAL))) FULL OUTER JOIN v0 ON (((CAST(vt0.c0 AS NUMERIC), CAST(v0.c0 AS NUMERIC), ((vt1.c0)>>(vt0.c0))))<=((((((vt0.c0)OR(v0.c0)))OR(v0.c0)), CAST(vt1.c0 AS NUMERIC), ((vt1.c0) IS FALSE)))) WHERE (NULL) UNION SELECT DISTINCT * FROM vt0 CROSS JOIN vt1 ON (- (CAST(vt1.c0 AS REAL))) FULL OUTER JOIN v0 ON (((CAST(vt0.c0 AS NUMERIC), CAST(v0.c0 AS NUMERIC), ((vt1.c0)>>(vt0.c0))))<=((((((vt0.c0)OR(v0.c0)))OR(v0.c0)), CAST(vt1.c0 AS NUMERIC), ((vt1.c0) IS FALSE)))) WHERE ((NOT (NULL))) UNION SELECT DISTINCT * FROM vt0 CROSS JOIN vt1 ON (- (CAST(vt1.c0 AS REAL))) FULL OUTER JOIN v0 ON (((CAST(vt0.c0 AS NUMERIC), CAST(v0.c0 AS NUMERIC), ((vt1.c0)>>(vt0.c0))))<=((((((vt0.c0)OR(v0.c0)))OR(v0.c0)), CAST(vt1.c0 AS NUMERIC), ((vt1.c0) IS FALSE)))) WHERE (((NULL) ISNULL));
SELECT DISTINCT * FROM vt0 CROSS JOIN vt1 ON (- (CAST(vt1.c0 AS REAL))) FULL OUTER JOIN v0 ON (((CAST(vt0.c0 AS NUMERIC), CAST(v0.c0 AS NUMERIC), ((vt1.c0)>>(vt0.c0))))<=((((((vt0.c0)OR(v0.c0)))OR(v0.c0)), CAST(vt1.c0 AS NUMERIC), ((vt1.c0) IS FALSE))));
SELECT ALL vt1.c0 FROM vt0, vt1, v0 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt0, vt1, v0 WHERE (vt0.c0) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt0, vt1, v0 WHERE ((NOT (vt0.c0))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt0, vt1, v0 WHERE (((vt0.c0) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt0, vt1, v0 GROUP BY vt1.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((COUNT(MAX(MAX(MAX(v0.c0)))))IS(AVG(TOTAL(v0.c0)))) COLLATE BINARY UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (((COUNT(MAX(MAX(MAX(v0.c0)))))IS(AVG(TOTAL(v0.c0)))) COLLATE BINARY)) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((((COUNT(MAX(MAX(MAX(v0.c0)))))IS(AVG(TOTAL(v0.c0)))) COLLATE BINARY) ISNULL);
SELECT * FROM v0, vt1, vt0;
SELECT * FROM v0, vt1, vt0 WHERE ((((((v0.c0)) BETWEEN ((vt0.c0)) AND ((v0.c0))))+(NULL COLLATE BINARY))) UNION ALL SELECT ALL * FROM v0, vt1, vt0 WHERE ((NOT ((((((v0.c0)) BETWEEN ((vt0.c0)) AND ((v0.c0))))+(NULL COLLATE BINARY))))) UNION ALL SELECT * FROM v0, vt1, vt0 WHERE ((((((((v0.c0)) BETWEEN ((vt0.c0)) AND ((v0.c0))))+(NULL COLLATE BINARY))) ISNULL));
SELECT * FROM v0, vt1, vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (CASE WHEN ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) END) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (CASE WHEN ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) END))) UNION SELECT DISTINCT * FROM vt0 WHERE (((CASE WHEN ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) END) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT v0.c0, vt1.c0 FROM vt1 RIGHT OUTER JOIN vt0 ON 0.5648224815791917 RIGHT OUTER JOIN v0 ON (v0.c0 COLLATE RTRIM IN (((vt0.c0)>(v0.c0)), (((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt0.c0, vt1.c0, v0.c0)) AND ((vt1.c0, v0.c0, v0.c0))))) GROUP BY v0.c0, vt1.c0;
SELECT ALL v0.c0, vt1.c0 FROM vt1 RIGHT OUTER JOIN vt0 ON 0.5648224815791917 RIGHT OUTER JOIN v0 ON (v0.c0 COLLATE RTRIM IN (((vt0.c0)>(v0.c0)), (((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt0.c0, vt1.c0, v0.c0)) AND ((vt1.c0, v0.c0, v0.c0))))) WHERE (DATE(((vt0.c0)==(v0.c0)), vt0.c0, vt1.c0 COLLATE NOCASE)) GROUP BY v0.c0, vt1.c0 UNION SELECT v0.c0, vt1.c0 FROM vt1 RIGHT OUTER JOIN vt0 ON 0.5648224815791917 RIGHT OUTER JOIN v0 ON (v0.c0 COLLATE RTRIM IN (((vt0.c0)>(v0.c0)), (((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt0.c0, vt1.c0, v0.c0)) AND ((vt1.c0, v0.c0, v0.c0))))) WHERE ((NOT (DATE(((vt0.c0)==(v0.c0)), vt0.c0, vt1.c0 COLLATE NOCASE)))) GROUP BY v0.c0, vt1.c0 UNION SELECT v0.c0, vt1.c0 FROM vt1 RIGHT OUTER JOIN vt0 ON 0.5648224815791917 RIGHT OUTER JOIN v0 ON (v0.c0 COLLATE RTRIM IN (((vt0.c0)>(v0.c0)), (((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt0.c0, vt1.c0, v0.c0)) AND ((vt1.c0, v0.c0, v0.c0))))) WHERE (((DATE(((vt0.c0)=(v0.c0)), vt0.c0, vt1.c0 COLLATE NOCASE)) ISNULL)) GROUP BY v0.c0, vt1.c0;
SELECT v0.c0, vt1.c0 FROM vt1 RIGHT OUTER JOIN vt0 ON 0.5648224815791917 RIGHT OUTER JOIN v0 ON (v0.c0 COLLATE RTRIM IN (((vt0.c0)>(v0.c0)), (((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt0.c0, vt1.c0, v0.c0)) AND ((vt1.c0, v0.c0, v0.c0))))) GROUP BY v0.c0, vt1.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((MAX(v0.c0))|(((COUNT(v0.c0))GLOB(v0.c0)))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (((MAX(v0.c0))|(((COUNT(v0.c0))GLOB(v0.c0)))))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((((MAX(v0.c0))|(((COUNT(v0.c0))GLOB(v0.c0))))) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((MAX(v0.c0))|(((COUNT(v0.c0))GLOB(v0.c0)))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (((MAX(v0.c0))|(((COUNT(v0.c0))GLOB(v0.c0)))))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((((MAX(v0.c0))|(((COUNT(v0.c0))GLOB(v0.c0))))) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL * FROM vt1, v0, vt0;
SELECT ALL * FROM vt1, v0, vt0 WHERE (NULL) UNION ALL SELECT * FROM vt1, v0, vt0 WHERE ((NOT (NULL))) UNION ALL SELECT * FROM vt1, v0, vt0 WHERE (((NULL) ISNULL));
SELECT ALL * FROM vt1, v0, vt0;
SELECT DISTINCT * FROM vt0, v0;
SELECT DISTINCT * FROM vt0, v0 WHERE (((CASE x''  WHEN v0.c0 THEN vt0.c0 ELSE vt0.c0 END)IS NOT(((((v0.c0)OR(v0.c0)))OR(v0.c0))))) UNION SELECT DISTINCT * FROM vt0, v0 WHERE ((NOT (((CASE x''  WHEN v0.c0 THEN vt0.c0 ELSE vt0.c0 END)IS NOT(((((v0.c0)OR(v0.c0)))OR(v0.c0))))))) UNION SELECT DISTINCT * FROM vt0, v0 WHERE (((((CASE x''  WHEN v0.c0 THEN vt0.c0 ELSE vt0.c0 END)IS NOT(((((v0.c0)OR(v0.c0)))OR(v0.c0))))) ISNULL));
SELECT DISTINCT * FROM vt0, v0;
SELECT vt1.c0, vt0.c0, v0.c0 FROM vt1, v0, vt0 GROUP BY vt1.c0, vt0.c0, v0.c0;
SELECT vt1.c0, vt0.c0, v0.c0 FROM vt1, v0, vt0 WHERE (TRIM(CAST(vt0.c0 AS NUMERIC))) GROUP BY vt1.c0, vt0.c0, v0.c0 UNION SELECT vt1.c0, vt0.c0, v0.c0 FROM vt1, v0, vt0 WHERE ((NOT (TRIM(CAST(vt0.c0 AS NUMERIC))))) GROUP BY vt1.c0, vt0.c0, v0.c0 UNION SELECT ALL vt1.c0, vt0.c0, v0.c0 FROM vt1, v0, vt0 WHERE (((TRIM(CAST(vt0.c0 AS NUMERIC))) ISNULL)) GROUP BY vt1.c0, vt0.c0, v0.c0;
SELECT vt1.c0, vt0.c0, v0.c0 FROM vt1, v0, vt0 GROUP BY vt1.c0, vt0.c0, v0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING GROUP_CONCAT(SQLITE_VERSION()) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (GROUP_CONCAT(SQLITE_VERSION()))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((GROUP_CONCAT(SQLITE_VERSION())) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING GROUP_CONCAT(SQLITE_VERSION()) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (GROUP_CONCAT(SQLITE_VERSION()))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((GROUP_CONCAT(SQLITE_VERSION())) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL * FROM vt0;
SELECT * FROM vt0 WHERE (CAST(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) AS REAL)) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (CAST(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) AS REAL)))) UNION ALL SELECT * FROM vt0 WHERE (((CAST(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) AS REAL)) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (((((v0.c0)>>(v0.c0)))*(x''))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (((((v0.c0)>>(v0.c0)))*(x''))))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((((((v0.c0)>>(v0.c0)))*(x''))) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (CASE WHEN ((v0.c0)%(v0.c0)) THEN (((v0.c0))!=((v0.c0))) WHEN ('0.33167108736070217' IN ()) THEN v0.c0 WHEN v0.c0 COLLATE NOCASE THEN v0.c0 COLLATE RTRIM WHEN 995018986 THEN v0.c0 WHEN (~ (v0.c0)) THEN v0.c0 ELSE CAST(v0.c0 AS BLOB) END) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT (CASE WHEN ((v0.c0)%(v0.c0)) THEN (((v0.c0))!=((v0.c0))) WHEN ('0.33167108736070217' IN ()) THEN v0.c0 WHEN v0.c0 COLLATE NOCASE THEN v0.c0 COLLATE RTRIM WHEN 995018986 THEN v0.c0 WHEN (~ (v0.c0)) THEN v0.c0 ELSE CAST(v0.c0 AS BLOB) END))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((CASE WHEN ((v0.c0)%(v0.c0)) THEN (((v0.c0))<>((v0.c0))) WHEN ('0.33167108736070217' IN ()) THEN v0.c0 WHEN v0.c0 COLLATE NOCASE THEN v0.c0 COLLATE RTRIM WHEN 995018986 THEN v0.c0 WHEN (~ (v0.c0)) THEN v0.c0 ELSE CAST(v0.c0 AS BLOB) END) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM vt0, vt1, v0 GROUP BY v0.c0;
SELECT v0.c0 FROM vt0, vt1, v0 GROUP BY v0.c0 HAVING TRIM(GROUP_CONCAT(MAX(GROUP_CONCAT(v0.c0)))) UNION ALL SELECT v0.c0 FROM vt0, vt1, v0 GROUP BY v0.c0 HAVING (NOT (TRIM(GROUP_CONCAT(MAX(GROUP_CONCAT(v0.c0)))))) UNION ALL SELECT ALL v0.c0 FROM vt0, vt1, v0 GROUP BY v0.c0 HAVING ((TRIM(GROUP_CONCAT(MAX(GROUP_CONCAT(v0.c0))))) ISNULL);
SELECT * FROM vt1 FULL OUTER JOIN vt0 ON CASE WHEN json_patch(NULL, vt0.c0) THEN ((((((((vt1.c0)AND('f.劦k')))AND(0.793666774545942)))OR(vt1.c0)))AND(vt1.c0)) WHEN ((vt1.c0)OR(vt0.c0)) THEN LIKELY(DISTINCT vt0.c0) WHEN (vt0.c0 IN (vt1.c0)) THEN '-1799662764' ELSE ((vt1.c0)<(NULL)) END;
SELECT * FROM vt1 FULL OUTER JOIN vt0 ON CASE WHEN json_patch(NULL, vt0.c0) THEN ((((((((vt1.c0)AND('f.劦k')))AND(0.793666774545942)))OR(vt1.c0)))AND(vt1.c0)) WHEN ((vt1.c0)OR(vt0.c0)) THEN LIKELY(DISTINCT vt0.c0) WHEN (vt0.c0 IN (vt1.c0)) THEN '-1799662764' ELSE ((vt1.c0)<(NULL)) END WHERE ((((vt1.c0, vt0.c0, vt1.c0)) BETWEEN ((((vt1.c0)<<(vt1.c0)), CAST(vt1.c0 AS BLOB), (vt1.c0 IN (vt1.c0)))) AND (((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((x'', vt0.c0, vt0.c0))), ((vt0.c0) ISNULL), ((vt1.c0)*(vt0.c0)))))) UNION ALL SELECT * FROM vt1 FULL OUTER JOIN vt0 ON CASE WHEN json_patch(NULL, vt0.c0) THEN ((((((((vt1.c0)AND('f.劦k')))AND(0.793666774545942)))OR(vt1.c0)))AND(vt1.c0)) WHEN ((vt1.c0)OR(vt0.c0)) THEN LIKELY(DISTINCT vt0.c0) WHEN (vt0.c0 IN (vt1.c0)) THEN '-1799662764' ELSE ((vt1.c0)<(NULL)) END WHERE ((NOT ((((vt1.c0, vt0.c0, vt1.c0)) BETWEEN ((((vt1.c0)<<(vt1.c0)), CAST(vt1.c0 AS BLOB), (vt1.c0 IN (vt1.c0)))) AND (((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((x'', vt0.c0, vt0.c0))), ((vt0.c0) ISNULL), ((vt1.c0)*(vt0.c0)))))))) UNION ALL SELECT ALL * FROM vt1 FULL OUTER JOIN vt0 ON CASE WHEN json_patch(NULL, vt0.c0) THEN ((((((((vt1.c0)AND('f.劦k')))AND(0.793666774545942)))OR(vt1.c0)))AND(vt1.c0)) WHEN ((vt1.c0)OR(vt0.c0)) THEN LIKELY(DISTINCT vt0.c0) WHEN (vt0.c0 IN (vt1.c0)) THEN '-1799662764' ELSE ((vt1.c0)<(NULL)) END WHERE ((((((vt1.c0, vt0.c0, vt1.c0)) BETWEEN ((((vt1.c0)<<(vt1.c0)), CAST(vt1.c0 AS BLOB), (vt1.c0 IN (vt1.c0)))) AND (((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((x'', vt0.c0, vt0.c0))), ((vt0.c0) ISNULL), ((vt1.c0)*(vt0.c0)))))) ISNULL));
SELECT * FROM vt1 FULL OUTER JOIN vt0 ON CASE WHEN json_patch(NULL, vt0.c0) THEN ((((((((vt1.c0)AND('f.劦k')))AND(0.793666774545942)))OR(vt1.c0)))AND(vt1.c0)) WHEN ((vt1.c0)OR(vt0.c0)) THEN LIKELY(DISTINCT vt0.c0) WHEN (vt0.c0 IN (vt1.c0)) THEN '-1799662764' ELSE ((vt1.c0)<(NULL)) END;
SELECT DISTINCT v0.c0, vt0.c0 FROM vt1, v0 CROSS JOIN vt0 ON (((vt1.c0, v0.c0, vt1.c0)) BETWEEN ((((v0.c0) IS TRUE), (((vt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((v0.c0))), ((((vt0.c0)AND(v0.c0)))OR(vt1.c0)))) AND ((((vt1.c0)OR(vt0.c0)), CAST(vt1.c0 AS INTEGER), (NOT (vt1.c0)))));
SELECT DISTINCT v0.c0, vt0.c0 FROM vt1, v0 CROSS JOIN vt0 ON (((vt1.c0, v0.c0, vt1.c0)) BETWEEN ((((v0.c0) IS TRUE), (((vt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((v0.c0))), ((((vt0.c0)AND(v0.c0)))OR(vt1.c0)))) AND ((((vt1.c0)OR(vt0.c0)), CAST(vt1.c0 AS INTEGER), (NOT (vt1.c0))))) WHERE (vt1.c0) UNION SELECT DISTINCT v0.c0, vt0.c0 FROM vt1, v0 CROSS JOIN vt0 ON (((vt1.c0, v0.c0, vt1.c0)) BETWEEN ((((v0.c0) IS TRUE), (((vt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((v0.c0))), ((((vt0.c0)AND(v0.c0)))OR(vt1.c0)))) AND ((((vt1.c0)OR(vt0.c0)), CAST(vt1.c0 AS INTEGER), (NOT (vt1.c0))))) WHERE ((NOT (vt1.c0))) UNION SELECT DISTINCT v0.c0, vt0.c0 FROM vt1, v0 CROSS JOIN vt0 ON (((vt1.c0, v0.c0, vt1.c0)) BETWEEN ((((v0.c0) IS TRUE), (((vt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((v0.c0))), ((((vt0.c0)AND(v0.c0)))OR(vt1.c0)))) AND ((((vt1.c0)OR(vt0.c0)), CAST(vt1.c0 AS INTEGER), (NOT (vt1.c0))))) WHERE (((vt1.c0) ISNULL));
SELECT DISTINCT v0.c0, vt0.c0 FROM vt1, v0 CROSS JOIN vt0 ON (((vt1.c0, v0.c0, vt1.c0)) BETWEEN ((((v0.c0) IS TRUE), (((vt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((v0.c0))), ((((vt0.c0)AND(v0.c0)))OR(vt1.c0)))) AND ((((vt1.c0)OR(vt0.c0)), CAST(vt1.c0 AS INTEGER), (NOT (vt1.c0)))));
SELECT ALL vt1.c0, vt0.c0 FROM v0, vt0, vt1 GROUP BY vt1.c0, vt0.c0;
SELECT vt1.c0, vt0.c0 FROM v0, vt0, vt1 WHERE ((- (((vt1.c0)LIKE(vt1.c0))))) GROUP BY vt1.c0, vt0.c0 UNION SELECT vt1.c0, vt0.c0 FROM v0, vt0, vt1 WHERE ((NOT ((- (((vt1.c0)LIKE(vt1.c0))))))) GROUP BY vt1.c0, vt0.c0 UNION SELECT vt1.c0, vt0.c0 FROM v0, vt0, vt1 WHERE ((((- (((vt1.c0)LIKE(vt1.c0))))) ISNULL)) GROUP BY vt1.c0, vt0.c0;
SELECT ALL vt1.c0, vt0.c0 FROM v0, vt0, vt1 GROUP BY vt1.c0, vt0.c0;
SELECT ALL v0.c0 FROM v0, vt1 GROUP BY v0.c0;
SELECT v0.c0 FROM v0, vt1 GROUP BY v0.c0 HAVING TOTAL(TOTAL(AVG(vt1.c0))) UNION ALL SELECT v0.c0 FROM v0, vt1 GROUP BY v0.c0 HAVING (NOT (TOTAL(TOTAL(AVG(vt1.c0))))) UNION ALL SELECT ALL v0.c0 FROM v0, vt1 GROUP BY v0.c0 HAVING ((TOTAL(TOTAL(AVG(vt1.c0)))) ISNULL);
SELECT vt1.c0, vt0.c0 FROM vt0 INNER JOIN vt1 ON ((vt0.c0 COLLATE BINARY)>>((vt1.c0 IN ())));
SELECT vt1.c0, vt0.c0 FROM vt0 INNER JOIN vt1 ON ((vt0.c0 COLLATE BINARY)>>((vt1.c0 IN ()))) WHERE (((((vt1.c0)LIKE(vt1.c0)))GLOB(((vt1.c0)|(vt0.c0))))) UNION ALL SELECT vt1.c0, vt0.c0 FROM vt0 INNER JOIN vt1 ON ((vt0.c0 COLLATE BINARY)>>((vt1.c0 IN ()))) WHERE ((NOT (((((vt1.c0)LIKE(vt1.c0)))GLOB(((vt1.c0)|(vt0.c0))))))) UNION ALL SELECT vt1.c0, vt0.c0 FROM vt0 INNER JOIN vt1 ON ((vt0.c0 COLLATE BINARY)>>((vt1.c0 IN ()))) WHERE (((((((vt1.c0)LIKE(vt1.c0)))GLOB(((vt1.c0)|(vt0.c0))))) ISNULL));
SELECT vt1.c0, vt0.c0 FROM vt0 INNER JOIN vt1 ON ((vt0.c0 COLLATE BINARY)>>((vt1.c0 IN ())));
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (vt1.c0) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (vt1.c0))) UNION SELECT DISTINCT * FROM vt1 WHERE (((vt1.c0) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (x'' COLLATE RTRIM) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT (x'' COLLATE RTRIM))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((x'' COLLATE RTRIM) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING COUNT(*) COLLATE BINARY UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (COUNT(*) COLLATE BINARY)) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((COUNT(*) COLLATE BINARY) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING COUNT(*) COLLATE BINARY UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (COUNT(*) COLLATE BINARY)) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((COUNT(*) COLLATE BINARY) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT vt1.c0 FROM v0, vt1;
SELECT ALL vt1.c0 FROM v0 NOT INDEXED, vt1 WHERE (((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)) COLLATE RTRIM) UNION ALL SELECT ALL vt1.c0 FROM v0 NOT INDEXED, vt1 WHERE ((NOT (((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)) COLLATE RTRIM))) UNION ALL SELECT ALL vt1.c0 FROM v0, vt1 WHERE (((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)) COLLATE RTRIM) ISNULL));
SELECT vt1.c0 FROM v0, vt1;
SELECT DISTINCT vt0.c0 FROM v0, vt1 NATURAL JOIN vt0;
SELECT DISTINCT vt0.c0 FROM v0, vt1 NATURAL JOIN vt0 WHERE ((((v0.c0)IS(vt1.c0)) IN ())) UNION SELECT DISTINCT vt0.c0 FROM v0, vt1 NATURAL JOIN vt0 WHERE ((NOT ((((v0.c0)IS(vt1.c0)) IN ())))) UNION SELECT DISTINCT vt0.c0 FROM v0, vt1 NATURAL JOIN vt0 WHERE ((((((v0.c0)IS(vt1.c0)) IN ())) ISNULL));
SELECT DISTINCT vt0.c0 FROM v0, vt1 NATURAL JOIN vt0;
SELECT vt1.c0, vt0.c0, v0.c0 FROM v0, vt1 NOT INDEXED, vt0 GROUP BY vt1.c0, vt0.c0, v0.c0;
SELECT vt1.c0, vt0.c0, v0.c0 FROM v0, vt1, vt0 WHERE ((((vt0.c0 IN ())) NOT BETWEEN (((((vt1.c0)AND(vt0.c0)))AND(vt1.c0))) AND (vt0.c0 COLLATE NOCASE))) GROUP BY vt1.c0, vt0.c0, v0.c0 UNION SELECT ALL vt1.c0, vt0.c0, v0.c0 FROM v0, vt1, vt0 WHERE ((NOT ((((vt0.c0 IN ())) NOT BETWEEN (((((vt1.c0)AND(vt0.c0)))AND(vt1.c0))) AND (vt0.c0 COLLATE NOCASE))))) GROUP BY vt1.c0, vt0.c0, v0.c0 UNION SELECT ALL vt1.c0, vt0.c0, v0.c0 FROM v0, vt1, vt0 WHERE ((((((vt0.c0 IN ())) NOT BETWEEN (((((vt1.c0)AND(vt0.c0)))AND(vt1.c0))) AND (vt0.c0 COLLATE NOCASE))) ISNULL)) GROUP BY vt1.c0, vt0.c0, v0.c0;
SELECT vt1.c0, vt0.c0, v0.c0 FROM v0, vt1 NOT INDEXED, vt0 GROUP BY vt1.c0, vt0.c0, v0.c0;
SELECT ALL v0.c0, vt0.c0 FROM v0, vt0, vt1 GROUP BY v0.c0, vt0.c0;
SELECT ALL v0.c0, vt0.c0 FROM v0, vt0, vt1 GROUP BY v0.c0, vt0.c0 HAVING (((v0.c0)!=(vt1.c0)) IN ()) UNION ALL SELECT v0.c0, vt0.c0 FROM v0, vt0, vt1 GROUP BY v0.c0, vt0.c0 HAVING (NOT ((((v0.c0)!=(vt1.c0)) IN ()))) UNION ALL SELECT ALL v0.c0, vt0.c0 FROM v0, vt0, vt1 GROUP BY v0.c0, vt0.c0 HAVING (((((v0.c0)!=(vt1.c0)) IN ())) ISNULL);
SELECT ALL v0.c0, vt0.c0 FROM v0, vt0, vt1 GROUP BY v0.c0, vt0.c0;
SELECT ALL v0.c0, vt0.c0 FROM v0, vt0, vt1 GROUP BY v0.c0, vt0.c0 HAVING (((v0.c0)!=(vt1.c0)) IN ()) UNION ALL SELECT v0.c0, vt0.c0 FROM v0, vt0, vt1 GROUP BY v0.c0, vt0.c0 HAVING (NOT ((((v0.c0)!=(vt1.c0)) IN ()))) UNION ALL SELECT ALL v0.c0, vt0.c0 FROM v0, vt0, vt1 GROUP BY v0.c0, vt0.c0 HAVING (((((v0.c0)!=(vt1.c0)) IN ())) ISNULL);
SELECT ALL v0.c0, vt0.c0 FROM v0, vt0, vt1 GROUP BY v0.c0, vt0.c0;
SELECT * FROM vt0, vt1, v0;
SELECT ALL * FROM vt0, vt1, v0 WHERE ((vt1.c0 IN ())) UNION ALL SELECT ALL * FROM vt0, vt1, v0 WHERE ((NOT ((vt1.c0 IN ())))) UNION ALL SELECT ALL * FROM vt0, vt1, v0 WHERE ((((vt1.c0 IN ())) ISNULL));
SELECT * FROM vt0, vt1, v0;
SELECT DISTINCT * FROM vt1, v0, vt0;
SELECT DISTINCT * FROM vt1, v0, vt0 WHERE (NULL) UNION SELECT DISTINCT * FROM vt1, v0, vt0 WHERE ((NOT (NULL))) UNION SELECT DISTINCT * FROM vt1, v0, vt0 WHERE (((NULL) ISNULL));
SELECT DISTINCT * FROM vt1, v0, vt0;
SELECT v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0;
SELECT v0.c0, vt0.c0 FROM vt0, v0 WHERE (CAST((v0.c0 IN (v0.c0, -1.87230708E9, 0xfffffffffe3ece6d)) AS NUMERIC)) GROUP BY v0.c0, vt0.c0 UNION SELECT v0.c0, vt0.c0 FROM vt0, v0 WHERE ((NOT (CAST((v0.c0 IN (v0.c0, -1.87230708E9, 0Xfffffffffe3ece6d)) AS NUMERIC)))) GROUP BY v0.c0, vt0.c0 UNION SELECT v0.c0, vt0.c0 FROM vt0, v0 WHERE (((CAST((v0.c0 IN (v0.c0, -1.87230708E9, 0xfffffffffe3ece6d)) AS NUMERIC)) ISNULL)) GROUP BY v0.c0, vt0.c0;
SELECT v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0;
SELECT ALL vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0;
SELECT ALL vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0 HAVING MIN(COUNT(*)) UNION ALL SELECT ALL vt0.c0, vt1.c0 FROM vt0 NOT INDEXED, vt1 GROUP BY vt0.c0, vt1.c0 HAVING (NOT (MIN(COUNT(*)))) UNION ALL SELECT ALL vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0 HAVING ((MIN(COUNT(*))) ISNULL);
SELECT * FROM v0, vt1;
SELECT * FROM v0, vt1 WHERE (LOWER(DISTINCT (- (vt1.c0)))) UNION ALL SELECT * FROM v0, vt1 WHERE ((NOT (LOWER(DISTINCT (- (vt1.c0)))))) UNION ALL SELECT * FROM v0, vt1 WHERE (((LOWER(DISTINCT (- (vt1.c0)))) ISNULL));
SELECT * FROM v0, vt1;
SELECT DISTINCT v0.c0, vt0.c0 FROM v0, vt1, vt0;
SELECT DISTINCT v0.c0, vt0.c0 FROM v0, vt1, vt0 WHERE ((((vt1.c0)) BETWEEN ((TRIM(DISTINCT v0.c0))) AND ((json_insert(vt1.c0, vt0.c0, v0.c0, vt1.c0, vt1.c0))))) UNION SELECT DISTINCT v0.c0, vt0.c0 FROM v0, vt1, vt0 WHERE ((NOT ((((vt1.c0)) BETWEEN ((TRIM(DISTINCT v0.c0))) AND ((json_insert(vt1.c0, vt0.c0, v0.c0, vt1.c0, vt1.c0))))))) UNION SELECT DISTINCT v0.c0, vt0.c0 FROM v0, vt1, vt0 WHERE ((((((vt1.c0)) BETWEEN ((TRIM(DISTINCT v0.c0))) AND ((json_insert(vt1.c0, vt0.c0, v0.c0, vt1.c0, vt1.c0))))) ISNULL));
SELECT DISTINCT v0.c0, vt0.c0 FROM v0, vt1, vt0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (v0.c0) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (v0.c0))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE (((v0.c0) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0, vt1.c0 FROM v0 RIGHT OUTER JOIN vt1 ON (((v0.c0)) NOT BETWEEN (('-596806686')) AND ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (v0.c0))))) GROUP BY v0.c0, vt1.c0;
SELECT v0.c0, vt1.c0 FROM v0 RIGHT OUTER JOIN vt1 ON (((v0.c0)) NOT BETWEEN (('-596806686')) AND ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (v0.c0))))) GROUP BY v0.c0, vt1.c0 HAVING (+ (GROUP_CONCAT(v0.c0))) UNION ALL SELECT v0.c0, vt1.c0 FROM v0 RIGHT OUTER JOIN vt1 ON (((v0.c0)) NOT BETWEEN (('-596806686')) AND ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (v0.c0))))) GROUP BY v0.c0, vt1.c0 HAVING (NOT ((+ (GROUP_CONCAT(v0.c0))))) UNION ALL SELECT ALL v0.c0, vt1.c0 FROM v0 RIGHT OUTER JOIN vt1 ON (((v0.c0)) NOT BETWEEN (('-596806686')) AND ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (v0.c0))))) GROUP BY v0.c0, vt1.c0 HAVING (((+ (GROUP_CONCAT(v0.c0)))) ISNULL);
SELECT ALL v0.c0, vt1.c0 FROM v0 RIGHT OUTER JOIN vt1 ON (((v0.c0)) NOT BETWEEN (('-596806686')) AND ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (v0.c0))))) GROUP BY v0.c0, vt1.c0;
SELECT v0.c0, vt1.c0 FROM v0 RIGHT OUTER JOIN vt1 ON (((v0.c0)) NOT BETWEEN (('-596806686')) AND ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (v0.c0))))) GROUP BY v0.c0, vt1.c0 HAVING (+ (GROUP_CONCAT(v0.c0))) UNION ALL SELECT v0.c0, vt1.c0 FROM v0 RIGHT OUTER JOIN vt1 ON (((v0.c0)) NOT BETWEEN (('-596806686')) AND ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (v0.c0))))) GROUP BY v0.c0, vt1.c0 HAVING (NOT ((+ (GROUP_CONCAT(v0.c0))))) UNION ALL SELECT ALL v0.c0, vt1.c0 FROM v0 RIGHT OUTER JOIN vt1 ON (((v0.c0)) NOT BETWEEN (('-596806686')) AND ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (v0.c0))))) GROUP BY v0.c0, vt1.c0 HAVING (((+ (GROUP_CONCAT(v0.c0)))) ISNULL);
SELECT ALL v0.c0, vt1.c0 FROM v0 RIGHT OUTER JOIN vt1 ON (((v0.c0)) NOT BETWEEN (('-596806686')) AND ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (v0.c0))))) GROUP BY v0.c0, vt1.c0;
SELECT ALL vt1.c0 FROM vt1, v0;
SELECT ALL vt1.c0 FROM vt1, v0 WHERE (vt1.c0) UNION ALL SELECT ALL vt1.c0 FROM vt1, v0 WHERE ((NOT (vt1.c0))) UNION ALL SELECT ALL vt1.c0 FROM vt1, v0 WHERE (((vt1.c0) ISNULL));
SELECT ALL vt1.c0 FROM vt1, v0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (((((v0.c0)AND('-1023978842')))OR(v0.c0)) COLLATE NOCASE) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (((((v0.c0)AND('-1023978842')))OR(v0.c0)) COLLATE NOCASE))) UNION SELECT DISTINCT * FROM v0 WHERE (((((((v0.c0)AND('-1023978842')))OR(v0.c0)) COLLATE NOCASE) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT vt0.c0 FROM vt1 CROSS JOIN vt0 ON CAST(CASE vt1.c0  WHEN vt1.c0 THEN vt0.c0 END AS BLOB) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt1 CROSS JOIN vt0 ON CAST(CASE vt1.c0  WHEN vt1.c0 THEN vt0.c0 END AS BLOB) WHERE ((~ (((vt0.c0) NOT NULL)))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt1 CROSS JOIN vt0 ON CAST(CASE vt1.c0  WHEN vt1.c0 THEN vt0.c0 END AS BLOB) WHERE ((NOT ((~ (((vt0.c0) NOT NULL)))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt1 CROSS JOIN vt0 ON CAST(CASE vt1.c0  WHEN vt1.c0 THEN vt0.c0 END AS BLOB) WHERE ((((~ (((vt0.c0) NOT NULL)))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt1 CROSS JOIN vt0 ON CAST(CASE vt1.c0  WHEN vt1.c0 THEN vt0.c0 END AS BLOB) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING 0.2819888357140762 UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (0.2819888357140762)) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((0.2819888357140762) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING 0.2819888357140762 UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (0.2819888357140762)) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((0.2819888357140762) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL * FROM vt1, vt0, v0;
SELECT * FROM vt1, vt0, v0 WHERE (((vt1.c0)<<(v0.c0)) COLLATE BINARY) UNION ALL SELECT * FROM vt1, vt0, v0 WHERE ((NOT (((vt1.c0)<<(v0.c0)) COLLATE BINARY))) UNION ALL SELECT * FROM vt1, vt0, v0 NOT INDEXED WHERE (((((vt1.c0)<<(v0.c0)) COLLATE BINARY) ISNULL));
SELECT ALL * FROM vt1, vt0, v0;
SELECT DISTINCT v0.c0, vt1.c0 FROM v0, vt0 INNER JOIN vt1 ON CAST('/锨' AS BLOB) COLLATE RTRIM;
SELECT DISTINCT v0.c0, vt1.c0 FROM v0, vt0 INNER JOIN vt1 ON CAST('/锨' AS BLOB) COLLATE RTRIM WHERE ((NOT (((vt0.c0)>=(vt0.c0))))) UNION SELECT DISTINCT v0.c0, vt1.c0 FROM v0, vt0 INNER JOIN vt1 ON CAST('/锨' AS BLOB) COLLATE RTRIM WHERE ((NOT ((NOT (((vt0.c0)>=(vt0.c0))))))) UNION SELECT DISTINCT v0.c0, vt1.c0 FROM v0, vt0 INNER JOIN vt1 ON CAST('/锨' AS BLOB) COLLATE RTRIM WHERE ((((NOT (((vt0.c0)>=(vt0.c0))))) ISNULL));
SELECT DISTINCT v0.c0, vt1.c0 FROM v0, vt0 INNER JOIN vt1 ON CAST('/锨' AS BLOB) COLLATE RTRIM;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (((((v0.c0) NOT NULL)) BETWEEN (CAST(v0.c0 AS BLOB)) AND (CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (((((v0.c0) NOT NULL)) BETWEEN (CAST(v0.c0 AS BLOB)) AND (CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE (((((((v0.c0) NOT NULL)) BETWEEN (CAST(v0.c0 AS BLOB)) AND (CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (~ (((v0.c0) NOT BETWEEN (MIN(NULL)) AND (v0.c0)))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT ((~ (((v0.c0) NOT BETWEEN (MIN(NULL)) AND (v0.c0)))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (((~ (((v0.c0) NOT BETWEEN (MIN(NULL)) AND (v0.c0))))) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (~ (((v0.c0) NOT BETWEEN (MIN(NULL)) AND (v0.c0)))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT ((~ (((v0.c0) NOT BETWEEN (MIN(NULL)) AND (v0.c0)))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (((~ (((v0.c0) NOT BETWEEN (MIN(NULL)) AND (v0.c0))))) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0;
SELECT ALL v0.c0 FROM v0 WHERE (CAST(v0.c0 AS BLOB)) UNION ALL SELECT v0.c0 FROM v0 WHERE ((NOT (CAST(v0.c0 AS BLOB)))) UNION ALL SELECT v0.c0 FROM v0 WHERE (((CAST(v0.c0 AS BLOB)) ISNULL));
SELECT v0.c0 FROM v0;
SELECT DISTINCT vt0.c0 FROM v0 FULL OUTER JOIN vt0 ON (((vt0.c0))>=((((v0.c0) BETWEEN (v0.c0) AND (vt0.c0))))) CROSS JOIN vt1 ON ((((((((CAST(vt1.c0 AS REAL))OR(CASE WHEN '-535190839' THEN vt1.c0 END)))OR(vt0.c0)))OR((~ (v0.c0)))))OR(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN vt0.c0 THEN x'021a' WHEN vt0.c0 THEN x'' ELSE v0.c0 END));
SELECT DISTINCT vt0.c0 FROM v0 FULL OUTER JOIN vt0 ON (((vt0.c0))>=((((v0.c0) BETWEEN (v0.c0) AND (vt0.c0))))) CROSS JOIN vt1 ON ((((((((CAST(vt1.c0 AS REAL))OR(CASE WHEN '-535190839' THEN vt1.c0 END)))OR(vt0.c0)))OR((~ (v0.c0)))))OR(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN vt0.c0 THEN x'021a' WHEN vt0.c0 THEN x'' ELSE v0.c0 END)) WHERE (CASE WHEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (v0.c0)) THEN (v0.c0 IN ()) WHEN ((NULL) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN vt1.c0 WHEN (('e.EP\B\nl') ISNULL) THEN ((vt1.c0)||(vt1.c0)) END) UNION SELECT DISTINCT vt0.c0 FROM v0 FULL OUTER JOIN vt0 ON (((vt0.c0))>=((((v0.c0) BETWEEN (v0.c0) AND (vt0.c0))))) CROSS JOIN vt1 ON ((((((((CAST(vt1.c0 AS REAL))OR(CASE WHEN '-535190839' THEN vt1.c0 END)))OR(vt0.c0)))OR((~ (v0.c0)))))OR(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN vt0.c0 THEN x'021a' WHEN vt0.c0 THEN x'' ELSE v0.c0 END)) WHERE ((NOT (CASE WHEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (v0.c0)) THEN (v0.c0 IN ()) WHEN ((NULL) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN vt1.c0 WHEN (('e.EP\B\nl') ISNULL) THEN ((vt1.c0)||(vt1.c0)) END))) UNION SELECT DISTINCT vt0.c0 FROM v0 FULL OUTER JOIN vt0 ON (((vt0.c0))>=((((v0.c0) BETWEEN (v0.c0) AND (vt0.c0))))) CROSS JOIN vt1 ON ((((((((CAST(vt1.c0 AS REAL))OR(CASE WHEN '-535190839' THEN vt1.c0 END)))OR(vt0.c0)))OR((~ (v0.c0)))))OR(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN vt0.c0 THEN x'021a' WHEN vt0.c0 THEN x'' ELSE v0.c0 END)) WHERE (((CASE WHEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (v0.c0)) THEN (v0.c0 IN ()) WHEN ((NULL) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN vt1.c0 WHEN (('e.EP\B\nl') ISNULL) THEN ((vt1.c0)||(vt1.c0)) END) ISNULL));
SELECT DISTINCT vt0.c0 FROM v0 FULL OUTER JOIN vt0 ON (((vt0.c0))>=((((v0.c0) BETWEEN (v0.c0) AND (vt0.c0))))) CROSS JOIN vt1 ON ((((((((CAST(vt1.c0 AS REAL))OR(CASE WHEN '-535190839' THEN vt1.c0 END)))OR(vt0.c0)))OR((~ (v0.c0)))))OR(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN vt0.c0 THEN x'021a' WHEN vt0.c0 THEN x'' ELSE v0.c0 END));
SELECT vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0;
SELECT vt0.c0, vt1.c0 FROM vt0, vt1 WHERE (CASE vt0.c0  WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN '䕹Ec4&' THEN '-1444686532' ELSE vt1.c0 END COLLATE NOCASE) GROUP BY vt0.c0, vt1.c0 UNION SELECT vt0.c0, vt1.c0 FROM vt0, vt1 WHERE ((NOT (CASE vt0.c0  WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN '䕹Ec4&' THEN '-1444686532' ELSE vt1.c0 END COLLATE NOCASE))) GROUP BY vt0.c0, vt1.c0 UNION SELECT vt0.c0, vt1.c0 FROM vt0, vt1 WHERE (((CASE vt0.c0  WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN '䕹Ec4&' THEN '-1444686532' ELSE vt1.c0 END COLLATE NOCASE) ISNULL)) GROUP BY vt0.c0, vt1.c0;
SELECT vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0;
SELECT ALL vt1.c0 FROM vt0 FULL OUTER JOIN vt1 ON load_extension((((vt1.c0))==((vt1.c0)))) GROUP BY vt1.c0;
SELECT ALL TOTAL((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) IN ())) FROM vt0;
SELECT ALL vt1.c0 FROM vt1 FULL OUTER JOIN vt0 ON ((((json_quote(vt0.c0))OR(CAST(v0.c0 AS BLOB))))OR(((vt0.c0)<(NULL)))) RIGHT OUTER JOIN v0 ON (((((vt0.c0)*(vt1.c0))))<(((((v0.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c0))))));
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (CAST(v0.c0 AS REAL)) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (CAST(v0.c0 AS REAL)))) UNION SELECT DISTINCT * FROM v0 WHERE (((CAST(v0.c0 AS REAL)) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT ALL vt1.c0 FROM v0, vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM v0, vt1 WHERE (DATE(CAST('|y' AS TEXT), NULL, ((((vt1.c0)AND(x'')))OR(v0.c0)))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM v0, vt1 WHERE ((NOT (DATE(CAST('|y' AS TEXT), NULL, ((((vt1.c0)AND(x'')))OR(v0.c0)))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM v0, vt1 WHERE (((DATE(CAST('|y' AS TEXT), NULL, ((((vt1.c0)AND(x'')))OR(v0.c0)))) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM v0, vt1 GROUP BY vt1.c0;
SELECT ALL v0.c0 FROM vt1, v0, vt0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM vt1, v0, vt0 GROUP BY v0.c0 HAVING (GROUP_CONCAT(COUNT(*)) IN ()) UNION ALL SELECT v0.c0 FROM vt1, v0, vt0 GROUP BY v0.c0 HAVING (NOT ((GROUP_CONCAT(COUNT(*)) IN ()))) UNION ALL SELECT v0.c0 FROM vt1, v0, vt0 GROUP BY v0.c0 HAVING (((GROUP_CONCAT(COUNT(*)) IN ())) ISNULL);
SELECT ALL v0.c0 FROM vt1, v0, vt0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM vt1, v0, vt0 GROUP BY v0.c0 HAVING (GROUP_CONCAT(COUNT(*)) IN ()) UNION ALL SELECT v0.c0 FROM vt1, v0, vt0 GROUP BY v0.c0 HAVING (NOT ((GROUP_CONCAT(COUNT(*)) IN ()))) UNION ALL SELECT v0.c0 FROM vt1, v0, vt0 GROUP BY v0.c0 HAVING (((GROUP_CONCAT(COUNT(*)) IN ())) ISNULL);
SELECT ALL v0.c0 FROM vt1, v0, vt0 GROUP BY v0.c0;
SELECT * FROM vt1, vt0;
SELECT ALL * FROM vt1, vt0 WHERE ((((vt0.c0) NOT NULL) IN ())) UNION ALL SELECT * FROM vt1, vt0 WHERE ((NOT ((((vt0.c0) NOT NULL) IN ())))) UNION ALL SELECT * FROM vt1, vt0 WHERE ((((((vt0.c0) NOT NULL) IN ())) ISNULL));
SELECT * FROM vt1, vt0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (CASE ((vt0.c0) NOTNULL)  WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND ('l6g1좙wq')) THEN NULLIF('C橷oq', vt0.c0) ELSE vt0.c0 COLLATE NOCASE END) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (CASE ((vt0.c0) NOTNULL)  WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND ('l6g1좙wq')) THEN NULLIF('C橷oq', vt0.c0) ELSE vt0.c0 COLLATE NOCASE END))) UNION SELECT DISTINCT * FROM vt0 WHERE (((CASE ((vt0.c0) NOTNULL)  WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND ('l6g1좙wq')) THEN NULLIF('C橷oq', vt0.c0) ELSE vt0.c0 COLLATE NOCASE END) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE (((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) BETWEEN (((((vt1.c0)AND(vt1.c0)))OR(0.4104128117598914))) AND ((((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0))<=((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0)))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT (((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) BETWEEN (((((vt1.c0)AND(vt1.c0)))OR(0.4104128117598914))) AND ((((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0))<=((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0)))))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE (((((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) BETWEEN (((((vt1.c0)AND(vt1.c0)))OR(0.4104128117598914))) AND ((((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0))<=((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0)))))) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING TOTAL(SUM(MIN(vt0.c0))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (TOTAL(SUM(MIN(vt0.c0))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((TOTAL(SUM(MIN(vt0.c0)))) ISNULL);
SELECT * FROM vt1, v0, vt0;
SELECT ALL * FROM vt1, v0, vt0 WHERE (((+ (v0.c0)) IN ((NOT (vt0.c0)), (NOT (v0.c0))))) UNION ALL SELECT * FROM vt1, v0, vt0 WHERE ((NOT (((+ (v0.c0)) IN ((NOT (vt0.c0)), (NOT (v0.c0))))))) UNION ALL SELECT ALL * FROM vt1, v0, vt0 WHERE (((((+ (v0.c0)) IN ((NOT (vt0.c0)), (NOT (v0.c0))))) ISNULL));
SELECT * FROM vt1, v0, vt0;
SELECT DISTINCT vt1.c0 FROM vt1, vt0;
SELECT DISTINCT vt1.c0 FROM vt1, vt0 WHERE ((((x'' IN ())) NOT BETWEEN (vt0.c0 COLLATE BINARY) AND (((vt1.c0)>(vt0.c0))))) UNION SELECT DISTINCT vt1.c0 FROM vt1, vt0 WHERE ((NOT ((((x'' IN ())) NOT BETWEEN (vt0.c0 COLLATE BINARY) AND (((vt1.c0)>(vt0.c0))))))) UNION SELECT DISTINCT vt1.c0 FROM vt1, vt0 WHERE ((((((x'' IN ())) NOT BETWEEN (vt0.c0 COLLATE BINARY) AND (((vt1.c0)>(vt0.c0))))) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1, vt0;
SELECT ALL v0.c0 FROM vt1, v0 GROUP BY v0.c0;
SELECT v0.c0 FROM vt1, v0 WHERE ((((vt1.c0))<((((v0.c0) BETWEEN (vt1.c0) AND (v0.c0)))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM vt1, v0 WHERE ((NOT ((((vt1.c0))<((((v0.c0) BETWEEN (vt1.c0) AND (v0.c0)))))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM vt1, v0 WHERE ((((((vt1.c0))<((((v0.c0) BETWEEN (vt1.c0) AND (v0.c0)))))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM vt1, v0 GROUP BY v0.c0;
SELECT ALL vt0.c0, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c0;
SELECT vt0.c0, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c0 HAVING TOTAL(SUM(vt0.c0)) UNION ALL SELECT vt0.c0, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c0 HAVING (NOT (TOTAL(SUM(vt0.c0)))) UNION ALL SELECT vt0.c0, vt1.c0 FROM vt1, vt0 GROUP BY vt0.c0, vt1.c0 HAVING ((TOTAL(SUM(vt0.c0))) ISNULL);
SELECT vt0.c0 FROM vt0, v0;
SELECT ALL vt0.c0 FROM vt0, v0 WHERE (((vt0.c0)|(vt0.c0 COLLATE NOCASE))) UNION ALL SELECT vt0.c0 FROM vt0, v0 WHERE ((NOT (((vt0.c0)|(vt0.c0 COLLATE NOCASE))))) UNION ALL SELECT ALL vt0.c0 FROM vt0, v0 WHERE (((((vt0.c0)|(vt0.c0 COLLATE NOCASE))) ISNULL));
SELECT vt0.c0 FROM vt0, v0;
SELECT DISTINCT * FROM v0, vt0, vt1;
SELECT DISTINCT * FROM v0, vt0, vt1 WHERE (CAST(((v0.c0) ISNULL) AS BLOB)) UNION SELECT DISTINCT * FROM v0, vt0, vt1 WHERE ((NOT (CAST(((v0.c0) ISNULL) AS BLOB)))) UNION SELECT DISTINCT * FROM v0, vt0, vt1 WHERE (((CAST(((v0.c0) ISNULL) AS BLOB)) ISNULL));
SELECT DISTINCT * FROM v0, vt0, vt1;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (STRFTIME((((vt0.c0))<>((vt0.c0))), ((vt0.c0)IS NOT(vt0.c0)), CAST(vt0.c0 AS INTEGER), vt0.c0, CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE '-854693257' END)) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (STRFTIME((((vt0.c0))!=((vt0.c0))), ((vt0.c0)IS NOT(vt0.c0)), CAST(vt0.c0 AS INTEGER), vt0.c0, CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE '-854693257' END)))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((STRFTIME((((vt0.c0))!=((vt0.c0))), ((vt0.c0)IS NOT(vt0.c0)), CAST(vt0.c0 AS INTEGER), vt0.c0, CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE '-854693257' END)) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT v0.c0, vt1.c0 FROM v0 RIGHT OUTER JOIN vt1 ON CASE WHEN json_array(v0.c0, v0.c0) THEN v0.c0 COLLATE NOCASE WHEN TRIM(vt1.c0) THEN (- (vt1.c0)) WHEN (vt1.c0 IN ()) THEN ((vt1.c0)>>(0X5520d9ff)) WHEN vt1.c0 THEN ((vt1.c0)+(NULL)) WHEN v0.c0 COLLATE NOCASE THEN ((v0.c0)+(v0.c0)) END GROUP BY v0.c0, vt1.c0;
SELECT v0.c0, vt1.c0 FROM v0 RIGHT OUTER JOIN vt1 ON CASE WHEN json_array(v0.c0, v0.c0) THEN v0.c0 COLLATE NOCASE WHEN TRIM(vt1.c0) THEN (- (vt1.c0)) WHEN (vt1.c0 IN ()) THEN ((vt1.c0)>>(0x5520d9ff)) WHEN vt1.c0 THEN ((vt1.c0)+(NULL)) WHEN v0.c0 COLLATE NOCASE THEN ((v0.c0)+(v0.c0)) END GROUP BY v0.c0, vt1.c0 HAVING GROUP_CONCAT(GROUP_CONCAT(COUNT(x''))) UNION ALL SELECT ALL v0.c0, vt1.c0 FROM v0 RIGHT OUTER JOIN vt1 ON CASE WHEN json_array(v0.c0, v0.c0) THEN v0.c0 COLLATE NOCASE WHEN TRIM(vt1.c0) THEN (- (vt1.c0)) WHEN (vt1.c0 IN ()) THEN ((vt1.c0)>>(0X5520d9ff)) WHEN vt1.c0 THEN ((vt1.c0)+(NULL)) WHEN v0.c0 COLLATE NOCASE THEN ((v0.c0)+(v0.c0)) END GROUP BY v0.c0, vt1.c0 HAVING (NOT (GROUP_CONCAT(GROUP_CONCAT(COUNT(x''))))) UNION ALL SELECT ALL v0.c0, vt1.c0 FROM v0 RIGHT OUTER JOIN vt1 ON CASE WHEN json_array(v0.c0, v0.c0) THEN v0.c0 COLLATE NOCASE WHEN TRIM(vt1.c0) THEN (- (vt1.c0)) WHEN (vt1.c0 IN ()) THEN ((vt1.c0)>>(0x5520d9ff)) WHEN vt1.c0 THEN ((vt1.c0)+(NULL)) WHEN v0.c0 COLLATE NOCASE THEN ((v0.c0)+(v0.c0)) END GROUP BY v0.c0, vt1.c0 HAVING ((GROUP_CONCAT(GROUP_CONCAT(COUNT(x'')))) ISNULL);
SELECT v0.c0 FROM v0;
SELECT v0.c0 FROM v0 WHERE (UNLIKELY(CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)) UNION ALL SELECT v0.c0 FROM v0 WHERE ((NOT (UNLIKELY(CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)))) UNION ALL SELECT v0.c0 FROM v0 WHERE (((UNLIKELY(CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)) ISNULL));
SELECT v0.c0 FROM v0;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (vt0.c0) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (vt0.c0))) UNION SELECT DISTINCT * FROM vt0 WHERE (((vt0.c0) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT vt1.c0 FROM v0, vt0, vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM v0, vt0, vt1 WHERE ((((v0.c0 COLLATE RTRIM))=(((+ (vt0.c0)))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM v0, vt0, vt1 WHERE ((NOT ((((v0.c0 COLLATE RTRIM))==(((+ (vt0.c0)))))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM v0, vt0, vt1 WHERE ((((((v0.c0 COLLATE RTRIM))=(((+ (vt0.c0)))))) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM v0, vt0, vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING SUM(((((MIN(vt1.c0))OR(vt1.c0)))AND(COUNT(*)))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (SUM(((((MIN(vt1.c0))OR(vt1.c0)))AND(COUNT(*)))))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((SUM(((((MIN(vt1.c0))OR(vt1.c0)))AND(COUNT(*))))) ISNULL);
SELECT ALL v0.c0, vt0.c0 FROM v0, vt0;
SELECT v0.c0, vt0.c0 FROM v0, vt0 WHERE (vt0.c0) UNION ALL SELECT v0.c0, vt0.c0 FROM v0, vt0 WHERE ((NOT (vt0.c0))) UNION ALL SELECT ALL v0.c0, vt0.c0 FROM v0, vt0 WHERE (((vt0.c0) ISNULL));
SELECT ALL v0.c0, vt0.c0 FROM v0, vt0;
SELECT DISTINCT * FROM vt0, v0, vt1;
SELECT DISTINCT * FROM vt0, v0, vt1 WHERE (load_extension((0Xffffffff80e0ab58 IN ()))) UNION SELECT DISTINCT * FROM vt0, v0, vt1 WHERE ((NOT (load_extension((0xffffffff80e0ab58 IN ()))))) UNION SELECT DISTINCT * FROM vt0, v0, vt1 WHERE (((load_extension((0xffffffff80e0ab58 IN ()))) ISNULL));
SELECT DISTINCT * FROM vt0, v0, vt1;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE ((+ ((- (vt0.c0))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT ((+ ((- (vt0.c0))))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((((+ ((- (vt0.c0))))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM v0, vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM v0, vt0 GROUP BY vt0.c0 HAVING COUNT(*) UNION ALL SELECT vt0.c0 FROM v0, vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt0.c0 FROM v0, vt0 GROUP BY vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt0.c0 FROM v0, vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM v0, vt0 GROUP BY vt0.c0 HAVING COUNT(*) UNION ALL SELECT vt0.c0 FROM v0, vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt0.c0 FROM v0, vt0 GROUP BY vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt0.c0 FROM v0, vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE ((vt0.c0 IN ())) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT ((vt0.c0 IN ())))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((((vt0.c0 IN ())) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT * FROM v0, vt1 LEFT OUTER JOIN vt0 ON ((((((((CAST(vt0.c0 AS NUMERIC))AND((((vt1.c0)) BETWEEN ((vt0.c0)) AND ((v0.c0))))))AND((((v0.c0, vt1.c0, vt0.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, v0.c0)) AND ((vt0.c0, vt1.c0, v0.c0))))))OR(((vt1.c0)IS NOT(v0.c0)))))OR(vt1.c0));
SELECT DISTINCT * FROM v0, vt1 LEFT OUTER JOIN vt0 ON ((((((((CAST(vt0.c0 AS NUMERIC))AND((((vt1.c0)) BETWEEN ((vt0.c0)) AND ((v0.c0))))))AND((((v0.c0, vt1.c0, vt0.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, v0.c0)) AND ((vt0.c0, vt1.c0, v0.c0))))))OR(((vt1.c0)IS NOT(v0.c0)))))OR(vt1.c0)) WHERE (v0.c0) UNION SELECT DISTINCT * FROM v0, vt1 LEFT OUTER JOIN vt0 ON ((((((((CAST(vt0.c0 AS NUMERIC))AND((((vt1.c0)) BETWEEN ((vt0.c0)) AND ((v0.c0))))))AND((((v0.c0, vt1.c0, vt0.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, v0.c0)) AND ((vt0.c0, vt1.c0, v0.c0))))))OR(((vt1.c0)IS NOT(v0.c0)))))OR(vt1.c0)) WHERE ((NOT (v0.c0))) UNION SELECT DISTINCT * FROM v0, vt1 LEFT OUTER JOIN vt0 ON ((((((((CAST(vt0.c0 AS NUMERIC))AND((((vt1.c0)) BETWEEN ((vt0.c0)) AND ((v0.c0))))))AND((((v0.c0, vt1.c0, vt0.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, v0.c0)) AND ((vt0.c0, vt1.c0, v0.c0))))))OR(((vt1.c0)IS NOT(v0.c0)))))OR(vt1.c0)) WHERE (((v0.c0) ISNULL));
SELECT DISTINCT * FROM v0, vt1 LEFT OUTER JOIN vt0 ON ((((((((CAST(vt0.c0 AS NUMERIC))AND((((vt1.c0)) BETWEEN ((vt0.c0)) AND ((v0.c0))))))AND((((v0.c0, vt1.c0, vt0.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, v0.c0)) AND ((vt0.c0, vt1.c0, v0.c0))))))OR(((vt1.c0)IS NOT(v0.c0)))))OR(vt1.c0));
SELECT vt1.c0, v0.c0, vt0.c0 FROM vt1 INNER JOIN vt0 ON CASE (NOT (vt0.c0))  WHEN CAST(vt1.c0 AS BLOB) THEN ((vt0.c0)IS NOT(vt1.c0)) END CROSS JOIN v0 ON ((((v0.c0) NOTNULL))!=(v0.c0 COLLATE BINARY)) GROUP BY vt1.c0, v0.c0, vt0.c0;
SELECT vt1.c0, v0.c0, vt0.c0 FROM vt1 INNER JOIN vt0 ON CASE (NOT (vt0.c0))  WHEN CAST(vt1.c0 AS BLOB) THEN ((vt0.c0)IS NOT(vt1.c0)) END CROSS JOIN v0 ON ((((v0.c0) NOTNULL))!=(v0.c0 COLLATE BINARY)) WHERE ((+ (NULL))) GROUP BY vt1.c0, v0.c0, vt0.c0 UNION SELECT ALL vt1.c0, v0.c0, vt0.c0 FROM vt1 INNER JOIN vt0 ON CASE (NOT (vt0.c0))  WHEN CAST(vt1.c0 AS BLOB) THEN ((vt0.c0)IS NOT(vt1.c0)) END CROSS JOIN v0 ON ((((v0.c0) NOTNULL))<>(v0.c0 COLLATE BINARY)) WHERE ((NOT ((+ (NULL))))) GROUP BY vt1.c0, v0.c0, vt0.c0 UNION SELECT vt1.c0, v0.c0, vt0.c0 FROM vt1 INNER JOIN vt0 ON CASE (NOT (vt0.c0))  WHEN CAST(vt1.c0 AS BLOB) THEN ((vt0.c0)IS NOT(vt1.c0)) END CROSS JOIN v0 ON ((((v0.c0) NOTNULL))<>(v0.c0 COLLATE BINARY)) WHERE ((((+ (NULL))) ISNULL)) GROUP BY vt1.c0, v0.c0, vt0.c0;
SELECT vt1.c0, v0.c0, vt0.c0 FROM vt1 INNER JOIN vt0 ON CASE (NOT (vt0.c0))  WHEN CAST(vt1.c0 AS BLOB) THEN ((vt0.c0)IS NOT(vt1.c0)) END CROSS JOIN v0 ON ((((v0.c0) NOTNULL))!=(v0.c0 COLLATE BINARY)) GROUP BY vt1.c0, v0.c0, vt0.c0;
SELECT ALL v0.c0, vt0.c0, vt1.c0 FROM vt1, vt0, v0 GROUP BY v0.c0, vt0.c0, vt1.c0;
SELECT v0.c0, vt0.c0, vt1.c0 FROM vt1, vt0, v0 GROUP BY v0.c0, vt0.c0, vt1.c0 HAVING vt0.c0 UNION ALL SELECT v0.c0, vt0.c0, vt1.c0 FROM vt1, vt0, v0 GROUP BY v0.c0, vt0.c0, vt1.c0 HAVING (NOT (vt0.c0)) UNION ALL SELECT ALL v0.c0, vt0.c0, vt1.c0 FROM vt1, vt0, v0 GROUP BY v0.c0, vt0.c0, vt1.c0 HAVING ((vt0.c0) ISNULL);
SELECT ALL v0.c0, vt0.c0, vt1.c0 FROM vt1, vt0, v0 GROUP BY v0.c0, vt0.c0, vt1.c0;
SELECT v0.c0, vt0.c0, vt1.c0 FROM vt1, vt0, v0 GROUP BY v0.c0, vt0.c0, vt1.c0 HAVING vt0.c0 UNION ALL SELECT v0.c0, vt0.c0, vt1.c0 FROM vt1, vt0, v0 GROUP BY v0.c0, vt0.c0, vt1.c0 HAVING (NOT (vt0.c0)) UNION ALL SELECT ALL v0.c0, vt0.c0, vt1.c0 FROM vt1, vt0, v0 GROUP BY v0.c0, vt0.c0, vt1.c0 HAVING ((vt0.c0) ISNULL);
SELECT ALL v0.c0, vt0.c0, vt1.c0 FROM vt1, vt0, v0 GROUP BY v0.c0, vt0.c0, vt1.c0;
SELECT vt1.c0 FROM vt1;
SELECT vt1.c0 FROM vt1 WHERE (((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))<=((vt1.c0 IN (9.0429654E8))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))<=((vt1.c0 IN (9.0429654E8))))))) UNION ALL SELECT ALL vt1.c0 FROM vt1 WHERE (((((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))<=((vt1.c0 IN (9.0429654E8))))) ISNULL));
SELECT vt1.c0 FROM vt1;
SELECT DISTINCT * FROM vt0 NATURAL JOIN vt1;
SELECT DISTINCT * FROM vt0 NATURAL JOIN vt1 WHERE (vt0.c0) UNION SELECT DISTINCT * FROM vt0 NATURAL JOIN vt1 WHERE ((NOT (vt0.c0))) UNION SELECT DISTINCT * FROM vt0 NATURAL JOIN vt1 WHERE (((vt0.c0) ISNULL));
SELECT DISTINCT * FROM vt0 NATURAL JOIN vt1;
SELECT v0.c0, vt1.c0, vt0.c0 FROM v0, vt1, vt0 GROUP BY v0.c0, vt1.c0, vt0.c0;
SELECT v0.c0, vt1.c0, vt0.c0 FROM v0, vt1, vt0 WHERE (LIKELY(DISTINCT (vt0.c0 IN (vt1.c0, vt1.c0)))) GROUP BY v0.c0, vt1.c0, vt0.c0 UNION SELECT v0.c0, vt1.c0, vt0.c0 FROM v0, vt1, vt0 WHERE ((NOT (LIKELY(DISTINCT (vt0.c0 IN (vt1.c0, vt1.c0)))))) GROUP BY v0.c0, vt1.c0, vt0.c0 UNION SELECT v0.c0, vt1.c0, vt0.c0 FROM v0, vt1, vt0 WHERE (((LIKELY(DISTINCT (vt0.c0 IN (vt1.c0, vt1.c0)))) ISNULL)) GROUP BY v0.c0, vt1.c0, vt0.c0;
SELECT v0.c0, vt1.c0, vt0.c0 FROM v0, vt1, vt0 GROUP BY v0.c0, vt1.c0, vt0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (COUNT(*) IN (COUNT(*))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT ((COUNT(*) IN (COUNT(*))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (((COUNT(*) IN (COUNT(*)))) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (COUNT(*) IN (COUNT(*))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT ((COUNT(*) IN (COUNT(*))))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (((COUNT(*) IN (COUNT(*)))) ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT * FROM vt1;
SELECT ALL * FROM vt1 WHERE ((NULL IN ())) UNION ALL SELECT * FROM vt1 WHERE ((NOT ((NULL IN ())))) UNION ALL SELECT ALL * FROM vt1 WHERE ((((NULL IN ())) ISNULL));
SELECT * FROM vt1;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (CAST(CAST(vt0.c0 AS NUMERIC) AS BLOB)) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (CAST(CAST(vt0.c0 AS NUMERIC) AS BLOB)))) UNION SELECT DISTINCT * FROM vt0 WHERE (((CAST(CAST(vt0.c0 AS NUMERIC) AS BLOB)) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL v0.c0, vt0.c0, vt1.c0 FROM vt1, vt0, v0 GROUP BY v0.c0, vt0.c0, vt1.c0;
SELECT v0.c0, vt0.c0, vt1.c0 FROM vt1, vt0, v0 WHERE ('-116439687') GROUP BY v0.c0, vt0.c0, vt1.c0 UNION SELECT v0.c0, vt0.c0, vt1.c0 FROM vt1, vt0, v0 WHERE ((NOT ('-116439687'))) GROUP BY v0.c0, vt0.c0, vt1.c0 UNION SELECT ALL v0.c0, vt0.c0, vt1.c0 FROM vt1, vt0, v0 WHERE ((('-116439687') ISNULL)) GROUP BY v0.c0, vt0.c0, vt1.c0;
SELECT ALL v0.c0, vt0.c0, vt1.c0 FROM vt1, vt0, v0 GROUP BY v0.c0, vt0.c0, vt1.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((SUM(MIN(0Xffffffff863a2825))))<=((vt0.c0))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT ((((SUM(MIN(0xffffffff863a2825))))<=((vt0.c0))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((((SUM(MIN(0xffffffff863a2825))))<=((vt0.c0)))) ISNULL);
SELECT ALL v0.c0 FROM v0;
SELECT v0.c0 FROM v0 WHERE ((((((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, 54747605)))) IS TRUE)) UNION ALL SELECT v0.c0 FROM v0 NOT INDEXED WHERE ((NOT ((((((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, 54747605)))) IS TRUE)))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE ((((((((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, 54747605)))) IS TRUE)) ISNULL));
SELECT ALL v0.c0 FROM v0;
SELECT DISTINCT * FROM vt1 FULL OUTER JOIN v0 ON CAST(CAST(vt1.c0 AS TEXT) AS INTEGER) FULL OUTER JOIN vt0 ON CASE '1104009501'  WHEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c0)) THEN (vt1.c0 IN ()) WHEN (((vt0.c0))>=((vt1.c0))) THEN ((vt0.c0) BETWEEN (vt1.c0) AND (vt1.c0)) WHEN ((((vt1.c0)OR(v0.c0)))OR(vt0.c0)) THEN vt1.c0 WHEN ((v0.c0) NOT NULL) THEN ((vt1.c0) NOT NULL) WHEN (+ (v0.c0)) THEN CAST(vt0.c0 AS REAL) ELSE ((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))OR(vt1.c0)))AND(vt1.c0)) END;
SELECT DISTINCT * FROM vt1 FULL OUTER JOIN v0 ON CAST(CAST(vt1.c0 AS TEXT) AS INTEGER) FULL OUTER JOIN vt0 ON CASE '1104009501'  WHEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c0)) THEN (vt1.c0 IN ()) WHEN (((vt0.c0))>=((vt1.c0))) THEN ((vt0.c0) BETWEEN (vt1.c0) AND (vt1.c0)) WHEN ((((vt1.c0)OR(v0.c0)))OR(vt0.c0)) THEN vt1.c0 WHEN ((v0.c0) NOT NULL) THEN ((vt1.c0) NOT NULL) WHEN (+ (v0.c0)) THEN CAST(vt0.c0 AS REAL) ELSE ((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))OR(vt1.c0)))AND(vt1.c0)) END WHERE ((((((vt0.c0, vt1.c0, NULL, vt1.c0, v0.c0))>=((vt1.c0, vt1.c0, vt0.c0, vt0.c0, vt1.c0)))) BETWEEN (((v0.c0)GLOB(vt0.c0))) AND ((- (vt0.c0))))) UNION SELECT DISTINCT * FROM vt1 FULL OUTER JOIN v0 ON CAST(CAST(vt1.c0 AS TEXT) AS INTEGER) FULL OUTER JOIN vt0 ON CASE '1104009501'  WHEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c0)) THEN (vt1.c0 IN ()) WHEN (((vt0.c0))>=((vt1.c0))) THEN ((vt0.c0) BETWEEN (vt1.c0) AND (vt1.c0)) WHEN ((((vt1.c0)OR(v0.c0)))OR(vt0.c0)) THEN vt1.c0 WHEN ((v0.c0) NOT NULL) THEN ((vt1.c0) NOT NULL) WHEN (+ (v0.c0)) THEN CAST(vt0.c0 AS REAL) ELSE ((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))OR(vt1.c0)))AND(vt1.c0)) END WHERE ((NOT ((((((vt0.c0, vt1.c0, NULL, vt1.c0, v0.c0))>=((vt1.c0, vt1.c0, vt0.c0, vt0.c0, vt1.c0)))) BETWEEN (((v0.c0)GLOB(vt0.c0))) AND ((- (vt0.c0))))))) UNION SELECT DISTINCT * FROM vt1 FULL OUTER JOIN v0 ON CAST(CAST(vt1.c0 AS TEXT) AS INTEGER) FULL OUTER JOIN vt0 ON CASE '1104009501'  WHEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c0)) THEN (vt1.c0 IN ()) WHEN (((vt0.c0))>=((vt1.c0))) THEN ((vt0.c0) BETWEEN (vt1.c0) AND (vt1.c0)) WHEN ((((vt1.c0)OR(v0.c0)))OR(vt0.c0)) THEN vt1.c0 WHEN ((v0.c0) NOT NULL) THEN ((vt1.c0) NOT NULL) WHEN (+ (v0.c0)) THEN CAST(vt0.c0 AS REAL) ELSE ((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))OR(vt1.c0)))AND(vt1.c0)) END WHERE ((((((((vt0.c0, vt1.c0, NULL, vt1.c0, v0.c0))>=((vt1.c0, vt1.c0, vt0.c0, vt0.c0, vt1.c0)))) BETWEEN (((v0.c0)GLOB(vt0.c0))) AND ((- (vt0.c0))))) ISNULL));
SELECT DISTINCT * FROM vt1 FULL OUTER JOIN v0 ON CAST(CAST(vt1.c0 AS TEXT) AS INTEGER) FULL OUTER JOIN vt0 ON CASE '1104009501'  WHEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c0)) THEN (vt1.c0 IN ()) WHEN (((vt0.c0))>=((vt1.c0))) THEN ((vt0.c0) BETWEEN (vt1.c0) AND (vt1.c0)) WHEN ((((vt1.c0)OR(v0.c0)))OR(vt0.c0)) THEN vt1.c0 WHEN ((v0.c0) NOT NULL) THEN ((vt1.c0) NOT NULL) WHEN (+ (v0.c0)) THEN CAST(vt0.c0 AS REAL) ELSE ((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))OR(vt1.c0)))AND(vt1.c0)) END;
SELECT vt1.c0 FROM vt0, v0, vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt0, v0, vt1 WHERE ((((vt1.c0 IN (vt0.c0, vt0.c0)))<>(((v0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt0, v0, vt1 WHERE ((NOT ((((vt1.c0 IN (vt0.c0, vt0.c0)))<>(((v0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt0, v0, vt1 WHERE ((((((vt1.c0 IN (vt0.c0, vt0.c0)))!=(((v0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt0, v0, vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM v0 NATURAL JOIN vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM v0 NATURAL JOIN vt1 GROUP BY vt1.c0 HAVING (TOTAL(AVG(v0.c0)) IN ((+ (COUNT(vt1.c0))))) UNION ALL SELECT vt1.c0 FROM v0 NATURAL JOIN vt1 GROUP BY vt1.c0 HAVING (NOT ((TOTAL(AVG(v0.c0)) IN ((+ (COUNT(vt1.c0))))))) UNION ALL SELECT ALL vt1.c0 FROM v0 NATURAL JOIN vt1 GROUP BY vt1.c0 HAVING (((TOTAL(AVG(v0.c0)) IN ((+ (COUNT(vt1.c0)))))) ISNULL);
SELECT ALL * FROM vt1 FULL OUTER JOIN v0 ON (+ ((~ (v0.c0)))) RIGHT OUTER JOIN vt0 ON CASE WHEN (vt1.c0 IN ()) THEN NULL END;
SELECT ALL * FROM vt1 FULL OUTER JOIN v0 ON (+ ((~ (v0.c0)))) RIGHT OUTER JOIN vt0 ON CASE WHEN (vt1.c0 IN ()) THEN NULL END WHERE (CAST(ABS(vt1.c0) AS INTEGER)) UNION ALL SELECT ALL * FROM vt1 FULL OUTER JOIN v0 ON (+ ((~ (v0.c0)))) RIGHT OUTER JOIN vt0 ON CASE WHEN (vt1.c0 IN ()) THEN NULL END WHERE ((NOT (CAST(ABS(vt1.c0) AS INTEGER)))) UNION ALL SELECT ALL * FROM vt1 FULL OUTER JOIN v0 ON (+ ((~ (v0.c0)))) RIGHT OUTER JOIN vt0 ON CASE WHEN (vt1.c0 IN ()) THEN NULL END WHERE (((CAST(ABS(vt1.c0) AS INTEGER)) ISNULL));
SELECT ALL * FROM vt1 FULL OUTER JOIN v0 ON (+ ((~ (v0.c0)))) RIGHT OUTER JOIN vt0 ON CASE WHEN (vt1.c0 IN ()) THEN NULL END;
SELECT DISTINCT * FROM v0, vt0;
SELECT DISTINCT * FROM v0, vt0 WHERE ((+ (((vt0.c0)LIKE(v0.c0))))) UNION SELECT DISTINCT * FROM v0, vt0 WHERE ((NOT ((+ (((vt0.c0)LIKE(v0.c0))))))) UNION SELECT DISTINCT * FROM v0, vt0 WHERE ((((+ (((vt0.c0)LIKE(v0.c0))))) ISNULL));
SELECT DISTINCT * FROM v0, vt0;
SELECT ALL vt0.c0 FROM vt1, v0, vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt1, v0, vt0 WHERE ((CAST(vt1.c0 AS INTEGER) IN ())) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt1, v0, vt0 WHERE ((NOT ((CAST(vt1.c0 AS INTEGER) IN ())))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt1, v0, vt0 WHERE ((((CAST(vt1.c0 AS INTEGER) IN ())) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt1, v0, vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt1, v0, vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt1, v0, vt0 GROUP BY vt0.c0 HAVING COUNT(*) UNION ALL SELECT vt0.c0 FROM vt1, v0, vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt0.c0 FROM vt1, v0, vt0 GROUP BY vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt0.c0 FROM vt1, v0, vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt1, v0, vt0 GROUP BY vt0.c0 HAVING COUNT(*) UNION ALL SELECT vt0.c0 FROM vt1, v0, vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT vt0.c0 FROM vt1, v0, vt0 GROUP BY vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt0.c0 FROM vt1, v0, vt0 GROUP BY vt0.c0;
SELECT ALL * FROM vt1, vt0 NOT INDEXED, v0;
SELECT * FROM vt1, vt0, v0 WHERE (1748698985) UNION ALL SELECT ALL * FROM vt1, vt0, v0 WHERE ((NOT (1748698985))) UNION ALL SELECT ALL * FROM vt1, vt0, v0 WHERE (((1748698985) ISNULL));
SELECT ALL * FROM vt1, vt0 NOT INDEXED, v0;
SELECT DISTINCT vt1.c0, v0.c0, vt0.c0 FROM vt1, vt0, v0;
SELECT DISTINCT vt1.c0, v0.c0, vt0.c0 FROM vt1, vt0, v0 WHERE (CASE WHEN ((((vt0.c0)OR(vt0.c0)))OR(v0.c0)) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c0)) END) UNION SELECT DISTINCT vt1.c0, v0.c0, vt0.c0 FROM vt1, vt0, v0 WHERE ((NOT (CASE WHEN ((((vt0.c0)OR(vt0.c0)))OR(v0.c0)) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c0)) END))) UNION SELECT DISTINCT vt1.c0, v0.c0, vt0.c0 FROM vt1, vt0, v0 WHERE (((CASE WHEN ((((vt0.c0)OR(vt0.c0)))OR(v0.c0)) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c0)) END) ISNULL));
SELECT DISTINCT vt1.c0, v0.c0, vt0.c0 FROM vt1, vt0, v0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE (vt1.c0) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (vt1.c0))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE (((vt1.c0) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT v0.c0, vt0.c0, vt1.c0 FROM v0, vt0, vt1 GROUP BY v0.c0, vt0.c0, vt1.c0;
SELECT ALL v0.c0, vt0.c0, vt1.c0 FROM v0, vt0, vt1 GROUP BY v0.c0, vt0.c0, vt1.c0 HAVING (COUNT(*) IN ()) UNION ALL SELECT ALL v0.c0, vt0.c0, vt1.c0 FROM v0, vt0, vt1 GROUP BY v0.c0, vt0.c0, vt1.c0 HAVING (NOT ((COUNT(*) IN ()))) UNION ALL SELECT ALL v0.c0, vt0.c0, vt1.c0 FROM v0, vt0, vt1 GROUP BY v0.c0, vt0.c0, vt1.c0 HAVING (((COUNT(*) IN ())) ISNULL);
SELECT v0.c0, vt0.c0, vt1.c0 FROM v0, vt0, vt1 GROUP BY v0.c0, vt0.c0, vt1.c0;
SELECT ALL v0.c0, vt0.c0, vt1.c0 FROM v0, vt0, vt1 GROUP BY v0.c0, vt0.c0, vt1.c0 HAVING (COUNT(*) IN ()) UNION ALL SELECT ALL v0.c0, vt0.c0, vt1.c0 FROM v0, vt0, vt1 GROUP BY v0.c0, vt0.c0, vt1.c0 HAVING (NOT ((COUNT(*) IN ()))) UNION ALL SELECT ALL v0.c0, vt0.c0, vt1.c0 FROM v0, vt0, vt1 GROUP BY v0.c0, vt0.c0, vt1.c0 HAVING (((COUNT(*) IN ())) ISNULL);
SELECT v0.c0, vt0.c0, vt1.c0 FROM v0, vt0, vt1 GROUP BY v0.c0, vt0.c0, vt1.c0;
SELECT vt0.c0, v0.c0 FROM vt0 LEFT OUTER JOIN v0 ON vt0.c0 COLLATE BINARY COLLATE BINARY;
SELECT ALL vt0.c0, v0.c0 FROM vt0 LEFT OUTER JOIN v0 ON vt0.c0 COLLATE BINARY COLLATE BINARY WHERE ((((vt0.c0)) BETWEEN ((((v0.c0)>>(v0.c0)))) AND ((((((((((((((vt0.c0)AND(v0.c0)))OR(v0.c0)))OR(v0.c0)))OR(NULL)))AND(v0.c0)))OR(x'7799')))))) UNION ALL SELECT ALL vt0.c0, v0.c0 FROM vt0 LEFT OUTER JOIN v0 ON vt0.c0 COLLATE BINARY COLLATE BINARY WHERE ((NOT ((((vt0.c0)) BETWEEN ((((v0.c0)>>(v0.c0)))) AND ((((((((((((((vt0.c0)AND(v0.c0)))OR(v0.c0)))OR(v0.c0)))OR(NULL)))AND(v0.c0)))OR(x'7799')))))))) UNION ALL SELECT vt0.c0, v0.c0 FROM vt0 LEFT OUTER JOIN v0 ON vt0.c0 COLLATE BINARY COLLATE BINARY WHERE ((((((vt0.c0)) BETWEEN ((((v0.c0)>>(v0.c0)))) AND ((((((((((((((vt0.c0)AND(v0.c0)))OR(v0.c0)))OR(v0.c0)))OR(NULL)))AND(v0.c0)))OR(x'7799')))))) ISNULL));
SELECT vt0.c0, v0.c0 FROM vt0 LEFT OUTER JOIN v0 ON vt0.c0 COLLATE BINARY COLLATE BINARY;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE ((((((x'') IS TRUE)))<((x'')))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT ((((((x'') IS TRUE)))<((x'')))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((((((((x'') IS TRUE)))<((x'')))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL vt1.c0, vt0.c0, v0.c0 FROM v0 RIGHT OUTER JOIN vt1 ON (json_insert(v0.c0, v0.c0, vt1.c0) IN ()) CROSS JOIN vt0 ON ((CAST(vt0.c0 AS BLOB)) NOT BETWEEN (CASE WHEN vt1.c0 THEN v0.c0 END) AND (((v0.c0)<(v0.c0)))) GROUP BY vt1.c0, vt0.c0, v0.c0;
SELECT vt1.c0, vt0.c0, v0.c0 FROM v0 RIGHT OUTER JOIN vt1 ON (json_insert(v0.c0, v0.c0, vt1.c0) IN ()) CROSS JOIN vt0 ON ((CAST(vt0.c0 AS BLOB)) NOT BETWEEN (CASE WHEN vt1.c0 THEN v0.c0 END) AND (((v0.c0)<(v0.c0)))) WHERE (CAST('ls' AS INTEGER)) GROUP BY vt1.c0, vt0.c0, v0.c0 UNION SELECT vt1.c0, vt0.c0, v0.c0 FROM v0 RIGHT OUTER JOIN vt1 ON (json_insert(v0.c0, v0.c0, vt1.c0) IN ()) CROSS JOIN vt0 ON ((CAST(vt0.c0 AS BLOB)) NOT BETWEEN (CASE WHEN vt1.c0 THEN v0.c0 END) AND (((v0.c0)<(v0.c0)))) WHERE ((NOT (CAST('ls' AS INTEGER)))) GROUP BY vt1.c0, vt0.c0, v0.c0 UNION SELECT vt1.c0, vt0.c0, v0.c0 FROM v0 RIGHT OUTER JOIN vt1 ON (json_insert(v0.c0, v0.c0, vt1.c0) IN ()) CROSS JOIN vt0 ON ((CAST(vt0.c0 AS BLOB)) NOT BETWEEN (CASE WHEN vt1.c0 THEN v0.c0 END) AND (((v0.c0)<(v0.c0)))) WHERE (((CAST('ls' AS INTEGER)) ISNULL)) GROUP BY vt1.c0, vt0.c0, v0.c0;
SELECT ALL vt1.c0, vt0.c0, v0.c0 FROM v0 RIGHT OUTER JOIN vt1 ON (json_insert(v0.c0, v0.c0, vt1.c0) IN ()) CROSS JOIN vt0 ON ((CAST(vt0.c0 AS BLOB)) NOT BETWEEN (CASE WHEN vt1.c0 THEN v0.c0 END) AND (((v0.c0)<(v0.c0)))) GROUP BY vt1.c0, vt0.c0, v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING x'bfa1c1e2' UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (x'bfa1c1e2')) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((x'bfa1c1e2') ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING x'bfa1c1e2' UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (x'bfa1c1e2')) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((x'bfa1c1e2') ISNULL);
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL vt0.c0, vt1.c0 FROM vt1 INNER JOIN vt0 ON (- (((vt0.c0)AND(vt1.c0))));
SELECT ALL vt0.c0, vt1.c0 FROM vt1 INNER JOIN vt0 ON (- (((vt0.c0)AND(vt1.c0)))) WHERE (CAST(vt0.c0 AS INTEGER)) UNION ALL SELECT ALL vt0.c0, vt1.c0 FROM vt1 INNER JOIN vt0 ON (- (((vt0.c0)AND(vt1.c0)))) WHERE ((NOT (CAST(vt0.c0 AS INTEGER)))) UNION ALL SELECT vt0.c0, vt1.c0 FROM vt1 INNER JOIN vt0 ON (- (((vt0.c0)AND(vt1.c0)))) WHERE (((CAST(vt0.c0 AS INTEGER)) ISNULL));
SELECT ALL vt0.c0, vt1.c0 FROM vt1 INNER JOIN vt0 ON (- (((vt0.c0)AND(vt1.c0))));
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (CHANGES()) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (CHANGES()))) UNION SELECT DISTINCT * FROM vt0 WHERE (((CHANGES()) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT v0.c0, vt0.c0 FROM vt0, vt1, v0 GROUP BY v0.c0, vt0.c0;
SELECT v0.c0, vt0.c0 FROM vt0, vt1, v0 WHERE (((((vt1.c0) NOTNULL)) IS TRUE)) GROUP BY v0.c0, vt0.c0 UNION SELECT ALL v0.c0, vt0.c0 FROM vt0, vt1, v0 WHERE ((NOT (((((vt1.c0) NOTNULL)) IS TRUE)))) GROUP BY v0.c0, vt0.c0 UNION SELECT ALL v0.c0, vt0.c0 FROM vt0, vt1, v0 WHERE (((((((vt1.c0) NOTNULL)) IS TRUE)) ISNULL)) GROUP BY v0.c0, vt0.c0;
SELECT v0.c0, vt0.c0 FROM vt0, vt1, v0 GROUP BY v0.c0, vt0.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((((SUM(vt1.c0)) NOT BETWEEN (vt1.c0) AND (COUNT(SUM(GROUP_CONCAT(vt1.c0))))))%(((vt1.c0) NOT NULL))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (((((SUM(vt1.c0)) NOT BETWEEN (vt1.c0) AND (COUNT(SUM(GROUP_CONCAT(vt1.c0))))))%(((vt1.c0) NOT NULL))))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((((((SUM(vt1.c0)) NOT BETWEEN (vt1.c0) AND (COUNT(SUM(GROUP_CONCAT(vt1.c0))))))%(((vt1.c0) NOT NULL)))) ISNULL);
SELECT ALL * FROM v0, vt1;
SELECT ALL * FROM v0, vt1 WHERE (CAST(CAST(vt1.c0 AS NUMERIC) AS BLOB)) UNION ALL SELECT * FROM v0, vt1 WHERE ((NOT (CAST(CAST(vt1.c0 AS NUMERIC) AS BLOB)))) UNION ALL SELECT * FROM v0, vt1 WHERE (((CAST(CAST(vt1.c0 AS NUMERIC) AS BLOB)) ISNULL));
SELECT ALL * FROM v0, vt1;
SELECT DISTINCT v0.c0 FROM vt1, v0;
SELECT DISTINCT v0.c0 FROM vt1, v0 WHERE ((((v0.c0, 0.6864317770350298, v0.c0)) BETWEEN ((((vt1.c0)IS(v0.c0)), CAST(v0.c0 AS INTEGER), CAST(vt1.c0 AS TEXT))) AND ((((vt1.c0) IS TRUE), '', LIKE(vt1.c0, v0.c0, 'B'))))) UNION SELECT DISTINCT v0.c0 FROM vt1, v0 WHERE ((NOT ((((v0.c0, 0.6864317770350298, v0.c0)) BETWEEN ((((vt1.c0)IS(v0.c0)), CAST(v0.c0 AS INTEGER), CAST(vt1.c0 AS TEXT))) AND ((((vt1.c0) IS TRUE), '', LIKE(vt1.c0, v0.c0, 'B'))))))) UNION SELECT DISTINCT v0.c0 FROM vt1, v0 WHERE ((((((v0.c0, 0.6864317770350298, v0.c0)) BETWEEN ((((vt1.c0)IS(v0.c0)), CAST(v0.c0 AS INTEGER), CAST(vt1.c0 AS TEXT))) AND ((((vt1.c0) IS TRUE), '', LIKE(vt1.c0, v0.c0, 'B'))))) ISNULL));
SELECT DISTINCT v0.c0 FROM vt1, v0;
SELECT vt1.c0 FROM vt1 CROSS JOIN vt0 ON UNLIKELY((~ (x'1f64'))) CROSS JOIN v0 ON (((v0.c0)) BETWEEN ((((vt0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))) AND (((((vt0.c0, vt0.c0, 0.23911233447744673, v0.c0, vt1.c0))>=((vt1.c0, vt0.c0, vt1.c0, vt1.c0, vt1.c0)))))) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 CROSS JOIN vt0 ON UNLIKELY((~ (x'1f64'))) CROSS JOIN v0 ON (((v0.c0)) BETWEEN ((((vt0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))) AND (((((vt0.c0, vt0.c0, 0.23911233447744673, v0.c0, vt1.c0))>=((vt1.c0, vt0.c0, vt1.c0, vt1.c0, vt1.c0)))))) WHERE (CASE vt1.c0  WHEN (v0.c0 IN ()) THEN ((0x5dad7d9b)AND(vt0.c0)) END) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 CROSS JOIN vt0 ON UNLIKELY((~ (x'1f64'))) CROSS JOIN v0 ON (((v0.c0)) BETWEEN ((((vt0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))) AND (((((vt0.c0, vt0.c0, 0.23911233447744673, v0.c0, vt1.c0))>=((vt1.c0, vt0.c0, vt1.c0, vt1.c0, vt1.c0)))))) WHERE ((NOT (CASE vt1.c0  WHEN (v0.c0 IN ()) THEN ((0x5dad7d9b)AND(vt0.c0)) END))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 CROSS JOIN vt0 ON UNLIKELY((~ (x'1f64'))) CROSS JOIN v0 ON (((v0.c0)) BETWEEN ((((vt0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))) AND (((((vt0.c0, vt0.c0, 0.23911233447744673, v0.c0, vt1.c0))>=((vt1.c0, vt0.c0, vt1.c0, vt1.c0, vt1.c0)))))) WHERE (((CASE vt1.c0  WHEN (v0.c0 IN ()) THEN ((0x5dad7d9b)AND(vt0.c0)) END) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 CROSS JOIN vt0 ON UNLIKELY((~ (x'1f64'))) CROSS JOIN v0 ON (((v0.c0)) BETWEEN ((((vt0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))) AND (((((vt0.c0, vt0.c0, 0.23911233447744673, v0.c0, vt1.c0))>=((vt1.c0, vt0.c0, vt1.c0, vt1.c0, vt1.c0)))))) GROUP BY vt1.c0;
SELECT ALL v0.c0, vt0.c0 FROM v0, vt1, vt0 GROUP BY v0.c0, vt0.c0;
SELECT v0.c0, vt0.c0 FROM v0, vt1, vt0 NOT INDEXED GROUP BY v0.c0, vt0.c0 HAVING MAX(COUNT(*)) UNION ALL SELECT ALL v0.c0, vt0.c0 FROM v0, vt1, vt0 GROUP BY v0.c0, vt0.c0 HAVING (NOT (MAX(COUNT(*)))) UNION ALL SELECT v0.c0, vt0.c0 FROM v0, vt1, vt0 GROUP BY v0.c0, vt0.c0 HAVING ((MAX(COUNT(*))) ISNULL);
SELECT * FROM vt0 INNER JOIN vt1 ON vt1.c0;
SELECT * FROM vt0 INNER JOIN vt1 ON vt1.c0 WHERE (((((vt0.c0) IS FALSE)) NOT BETWEEN (((vt1.c0)<<(vt0.c0))) AND ((vt0.c0 IN (vt1.c0))))) ORDER BY LOWER(DISTINCT CAST(vt0.c0 AS NUMERIC));
SELECT * FROM vt0 INNER JOIN vt1 ON vt1.c0 WHERE ((NOT (((((vt0.c0) IS FALSE)) NOT BETWEEN (((vt1.c0)<<(vt0.c0))) AND ((vt0.c0 IN (vt1.c0))))))) ORDER BY LOWER(DISTINCT CAST(vt0.c0 AS NUMERIC));
SELECT ALL * FROM vt0 INNER JOIN vt1 ON vt1.c0 WHERE (((((((vt0.c0) IS FALSE)) NOT BETWEEN (((vt1.c0)<<(vt0.c0))) AND ((vt0.c0 IN (vt1.c0))))) ISNULL)) ORDER BY LOWER(DISTINCT CAST(vt0.c0 AS NUMERIC));
SELECT * FROM vt0 INNER JOIN vt1 ON vt1.c0;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) IS TRUE)) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) IS TRUE)))) UNION SELECT DISTINCT * FROM vt1 WHERE (((((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) IS TRUE)) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (CAST((((v0.c0, v0.c0, v0.c0)) BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0))) AS INTEGER)) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT (CAST((((v0.c0, v0.c0, v0.c0)) BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0))) AS INTEGER)))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((CAST((((v0.c0, v0.c0, v0.c0)) BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0))) AS INTEGER)) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM vt0 LEFT OUTER JOIN v0 ON ((vt0.c0 COLLATE RTRIM) NOT NULL) GROUP BY v0.c0;
SELECT v0.c0 FROM vt0 LEFT OUTER JOIN v0 ON ((vt0.c0 COLLATE RTRIM) NOT NULL) GROUP BY v0.c0 HAVING MIN(((MAX(SUM(MAX(v0.c0)))) NOTNULL)) UNION ALL SELECT v0.c0 FROM vt0 LEFT OUTER JOIN v0 ON ((vt0.c0 COLLATE RTRIM) NOT NULL) GROUP BY v0.c0 HAVING (NOT (MIN(((MAX(SUM(MAX(v0.c0)))) NOTNULL)))) UNION ALL SELECT v0.c0 FROM vt0 LEFT OUTER JOIN v0 ON ((vt0.c0 COLLATE RTRIM) NOT NULL) GROUP BY v0.c0 HAVING ((MIN(((MAX(SUM(MAX(v0.c0)))) NOTNULL))) ISNULL);
SELECT ALL vt1.c0, vt0.c0, v0.c0 FROM v0, vt1, vt0;
SELECT ALL vt1.c0, vt0.c0, v0.c0 FROM v0, vt1, vt0 WHERE (((vt0.c0) BETWEEN (x'') AND (v0.c0)) COLLATE RTRIM) UNION ALL SELECT ALL vt1.c0, vt0.c0, v0.c0 FROM v0, vt1, vt0 WHERE ((NOT (((vt0.c0) BETWEEN (x'') AND (v0.c0)) COLLATE RTRIM))) UNION ALL SELECT vt1.c0, vt0.c0, v0.c0 FROM v0, vt1, vt0 WHERE (((((vt0.c0) BETWEEN (x'') AND (v0.c0)) COLLATE RTRIM) ISNULL));
SELECT ALL vt1.c0, vt0.c0, v0.c0 FROM v0, vt1, vt0;
SELECT DISTINCT * FROM vt1, v0, vt0;
SELECT DISTINCT * FROM vt1, v0, vt0 WHERE (((((((vt0.c0)/(6.13523362E8)))OR((v0.c0 IN ()))))AND((((v0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, v0.c0)) AND ((vt1.c0, vt1.c0, vt0.c0)))))) UNION SELECT DISTINCT * FROM vt1, v0, vt0 WHERE ((NOT (((((((vt0.c0)/(6.13523362E8)))OR((v0.c0 IN ()))))AND((((v0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, v0.c0)) AND ((vt1.c0, vt1.c0, vt0.c0)))))))) UNION SELECT DISTINCT * FROM vt1, v0, vt0 WHERE (((((((((vt0.c0)/(6.13523362E8)))OR((v0.c0 IN ()))))AND((((v0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, v0.c0)) AND ((vt1.c0, vt1.c0, vt0.c0)))))) ISNULL));
SELECT DISTINCT * FROM vt1, v0, vt0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (((v0.c0) NOT BETWEEN (CAST(v0.c0 AS INTEGER)) AND (((v0.c0) IS TRUE)))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE ((NOT (((v0.c0) NOT BETWEEN (CAST(v0.c0 AS INTEGER)) AND (((v0.c0) IS TRUE)))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((((v0.c0) NOT BETWEEN (CAST(v0.c0 AS INTEGER)) AND (((v0.c0) IS TRUE)))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM vt0, v0 GROUP BY v0.c0;
SELECT v0.c0 FROM vt0, v0 GROUP BY v0.c0 HAVING '' UNION ALL SELECT v0.c0 FROM vt0, v0 GROUP BY v0.c0 HAVING (NOT ('')) UNION ALL SELECT v0.c0 FROM vt0, v0 GROUP BY v0.c0 HAVING (('') ISNULL);
SELECT ALL v0.c0 FROM vt0, v0 GROUP BY v0.c0;
SELECT v0.c0 FROM vt0, v0 GROUP BY v0.c0 HAVING '' UNION ALL SELECT v0.c0 FROM vt0, v0 GROUP BY v0.c0 HAVING (NOT ('')) UNION ALL SELECT v0.c0 FROM vt0, v0 GROUP BY v0.c0 HAVING (('') ISNULL);
SELECT ALL v0.c0 FROM vt0, v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM vt1 RIGHT OUTER JOIN v0 ON ((CAST(v0.c0 AS NUMERIC))+(((vt1.c0) NOT BETWEEN (vt1.c0) AND (v0.c0))));
SELECT ALL v0.c0 FROM vt1 RIGHT OUTER JOIN v0 ON ((CAST(v0.c0 AS NUMERIC))+(((vt1.c0) NOT BETWEEN (vt1.c0) AND (v0.c0)))) WHERE ((((('1459739135') IS FALSE))AND(CASE WHEN vt1.c0 THEN v0.c0 ELSE vt1.c0 END))) UNION ALL SELECT ALL v0.c0 FROM vt1 RIGHT OUTER JOIN v0 ON ((CAST(v0.c0 AS NUMERIC))+(((vt1.c0) NOT BETWEEN (vt1.c0) AND (v0.c0)))) WHERE ((NOT ((((('1459739135') IS FALSE))AND(CASE WHEN vt1.c0 THEN v0.c0 ELSE vt1.c0 END))))) UNION ALL SELECT ALL v0.c0 FROM vt1 RIGHT OUTER JOIN v0 ON ((CAST(v0.c0 AS NUMERIC))+(((vt1.c0) NOT BETWEEN (vt1.c0) AND (v0.c0)))) WHERE ((((((('1459739135') IS FALSE))AND(CASE WHEN vt1.c0 THEN v0.c0 ELSE vt1.c0 END))) ISNULL));
SELECT ALL v0.c0 FROM vt1 RIGHT OUTER JOIN v0 ON ((CAST(v0.c0 AS NUMERIC))+(((vt1.c0) NOT BETWEEN (vt1.c0) AND (v0.c0))));
SELECT DISTINCT * FROM v0 NOT INDEXED, vt0, vt1;
SELECT DISTINCT * FROM v0, vt0, vt1 NOT INDEXED WHERE (((~ (v0.c0)) IN ())) UNION SELECT DISTINCT * FROM v0, vt0, vt1 WHERE ((NOT (((~ (v0.c0)) IN ())))) UNION SELECT DISTINCT * FROM v0, vt0, vt1 WHERE (((((~ (v0.c0)) IN ())) ISNULL));
SELECT DISTINCT * FROM v0 NOT INDEXED, vt0, vt1;
SELECT vt1.c0, v0.c0, vt0.c0 FROM v0 INNER JOIN vt1 ON ((((vt1.c0)<(0.2366481207276806)))<>(((((vt1.c0)AND(vt0.c0)))OR(v0.c0)))) INNER JOIN vt0 ON CAST(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) AS REAL) GROUP BY vt1.c0, v0.c0, vt0.c0;
SELECT vt1.c0, v0.c0, vt0.c0 FROM v0 INNER JOIN vt1 ON ((((vt1.c0)<(0.2366481207276806)))!=(((((vt1.c0)AND(vt0.c0)))OR(v0.c0)))) INNER JOIN vt0 ON CAST(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) AS REAL) WHERE (v0.c0) GROUP BY vt1.c0, v0.c0, vt0.c0 UNION SELECT vt1.c0, v0.c0, vt0.c0 FROM v0 INNER JOIN vt1 ON ((((vt1.c0)<(0.2366481207276806)))<>(((((vt1.c0)AND(vt0.c0)))OR(v0.c0)))) INNER JOIN vt0 ON CAST(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) AS REAL) WHERE ((NOT (v0.c0))) GROUP BY vt1.c0, v0.c0, vt0.c0 UNION SELECT vt1.c0, v0.c0, vt0.c0 FROM v0 INNER JOIN vt1 ON ((((vt1.c0)<(0.2366481207276806)))!=(((((vt1.c0)AND(vt0.c0)))OR(v0.c0)))) INNER JOIN vt0 ON CAST(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) AS REAL) WHERE (((v0.c0) ISNULL)) GROUP BY vt1.c0, v0.c0, vt0.c0;
SELECT vt1.c0, v0.c0, vt0.c0 FROM v0 INNER JOIN vt1 ON ((((vt1.c0)<(0.2366481207276806)))<>(((((vt1.c0)AND(vt0.c0)))OR(v0.c0)))) INNER JOIN vt0 ON CAST(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) AS REAL) GROUP BY vt1.c0, v0.c0, vt0.c0;
SELECT ALL v0.c0 FROM v0, vt1, vt0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0, vt1, vt0 GROUP BY v0.c0 HAVING AVG(GROUP_CONCAT(SUM(vt0.c0))) UNION ALL SELECT v0.c0 FROM v0, vt1, vt0 GROUP BY v0.c0 HAVING (NOT (AVG(GROUP_CONCAT(SUM(vt0.c0))))) UNION ALL SELECT v0.c0 FROM v0, vt1, vt0 GROUP BY v0.c0 HAVING ((AVG(GROUP_CONCAT(SUM(vt0.c0)))) ISNULL);
SELECT ALL * FROM v0;
SELECT ALL * FROM v0 WHERE (CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END COLLATE BINARY) UNION ALL SELECT ALL * FROM v0 WHERE ((NOT (CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END COLLATE BINARY))) UNION ALL SELECT ALL * FROM v0 WHERE (((CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END COLLATE BINARY) ISNULL));
SELECT ALL * FROM v0;
SELECT DISTINCT vt0.c0 FROM vt1, vt0, v0;
SELECT DISTINCT vt0.c0 FROM vt1, vt0, v0 WHERE (((((vt0.c0) IS TRUE)) BETWEEN (vt0.c0) AND ((vt0.c0 IN ())))) UNION SELECT DISTINCT vt0.c0 FROM vt1, vt0, v0 WHERE ((NOT (((((vt0.c0) IS TRUE)) BETWEEN (vt0.c0) AND ((vt0.c0 IN ())))))) UNION SELECT DISTINCT vt0.c0 FROM vt1, vt0, v0 WHERE (((((((vt0.c0) IS TRUE)) BETWEEN (vt0.c0) AND ((vt0.c0 IN ())))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt1, vt0, v0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (vt0.c0) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (vt0.c0))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((vt0.c0) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0, v0.c0 FROM vt1, vt0, v0 GROUP BY vt0.c0, v0.c0;
SELECT vt0.c0, v0.c0 FROM vt1, vt0, v0 GROUP BY vt0.c0, v0.c0 HAVING ((x'')-(TOTAL(COUNT(MIN(vt0.c0))))) UNION ALL SELECT ALL vt0.c0, v0.c0 FROM vt1, vt0, v0 GROUP BY vt0.c0, v0.c0 HAVING (NOT (((x'')-(TOTAL(COUNT(MIN(vt0.c0))))))) UNION ALL SELECT vt0.c0, v0.c0 FROM vt1, vt0, v0 GROUP BY vt0.c0, v0.c0 HAVING ((((x'')-(TOTAL(COUNT(MIN(vt0.c0)))))) ISNULL);
SELECT vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((LIKELY(DISTINCT vt0.c0))))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((LIKELY(DISTINCT vt0.c0))))))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((LIKELY(DISTINCT vt0.c0))))) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0, vt1;
SELECT DISTINCT vt0.c0 FROM vt0, vt1 WHERE ((CAST(vt0.c0 AS TEXT) IN ())) UNION SELECT DISTINCT vt0.c0 FROM vt0, vt1 WHERE ((NOT ((CAST(vt0.c0 AS TEXT) IN ())))) UNION SELECT DISTINCT vt0.c0 FROM vt0, vt1 WHERE ((((CAST(vt0.c0 AS TEXT) IN ())) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0, vt1;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE (((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END) BETWEEN (CAST(vt1.c0 AS INTEGER)) AND ((vt1.c0 IN ())))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END) BETWEEN (CAST(vt1.c0 AS INTEGER)) AND ((vt1.c0 IN ())))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE (((((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END) BETWEEN (CAST(vt1.c0 AS INTEGER)) AND ((vt1.c0 IN ())))) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING COUNT(*) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING COUNT(*) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL * FROM vt1, v0;
SELECT ALL * FROM vt1, v0 WHERE (v0.c0) UNION ALL SELECT * FROM vt1, v0 WHERE ((NOT (v0.c0))) UNION ALL SELECT * FROM vt1, v0 WHERE (((v0.c0) ISNULL));
SELECT ALL * FROM vt1, v0;
SELECT DISTINCT * FROM v0, vt1, vt0;
SELECT DISTINCT * FROM v0, vt1, vt0 WHERE (((((((v0.c0) BETWEEN (v0.c0) AND ('928926591')))AND(vt1.c0 COLLATE NOCASE)))AND(((vt0.c0) NOT NULL)))) UNION SELECT DISTINCT * FROM v0, vt1, vt0 WHERE ((NOT (((((((v0.c0) BETWEEN (v0.c0) AND ('928926591')))AND(vt1.c0 COLLATE NOCASE)))AND(((vt0.c0) NOT NULL)))))) UNION SELECT DISTINCT * FROM v0, vt1, vt0 WHERE (((((((((v0.c0) BETWEEN (v0.c0) AND ('928926591')))AND(vt1.c0 COLLATE NOCASE)))AND(((vt0.c0) NOT NULL)))) ISNULL));
SELECT DISTINCT * FROM v0, vt1, vt0;
SELECT vt1.c0, vt0.c0, v0.c0 FROM vt1, v0 LEFT OUTER JOIN vt0 ON ((((((v0.c0) BETWEEN (v0.c0) AND (vt1.c0)))AND(('2123289119' IN ()))))AND((vt1.c0 IN ()))) GROUP BY vt1.c0, vt0.c0, v0.c0;
SELECT vt1.c0, vt0.c0, v0.c0 FROM vt1, v0 LEFT OUTER JOIN vt0 ON ((((((v0.c0) BETWEEN (v0.c0) AND (vt1.c0)))AND(('2123289119' IN ()))))AND((vt1.c0 IN ()))) WHERE (((vt0.c0)>>(vt0.c0)) COLLATE RTRIM) GROUP BY vt1.c0, vt0.c0, v0.c0 UNION SELECT vt1.c0, vt0.c0, v0.c0 FROM vt1, v0 LEFT OUTER JOIN vt0 ON ((((((v0.c0) BETWEEN (v0.c0) AND (vt1.c0)))AND(('2123289119' IN ()))))AND((vt1.c0 IN ()))) WHERE ((NOT (((vt0.c0)>>(vt0.c0)) COLLATE RTRIM))) GROUP BY vt1.c0, vt0.c0, v0.c0 UNION SELECT ALL vt1.c0, vt0.c0, v0.c0 FROM vt1, v0 LEFT OUTER JOIN vt0 ON ((((((v0.c0) BETWEEN (v0.c0) AND (vt1.c0)))AND(('2123289119' IN ()))))AND((vt1.c0 IN ()))) WHERE (((((vt0.c0)>>(vt0.c0)) COLLATE RTRIM) ISNULL)) GROUP BY vt1.c0, vt0.c0, v0.c0;
SELECT vt1.c0, vt0.c0, v0.c0 FROM vt1, v0 LEFT OUTER JOIN vt0 ON ((((((v0.c0) BETWEEN (v0.c0) AND (vt1.c0)))AND(('2123289119' IN ()))))AND((vt1.c0 IN ()))) GROUP BY vt1.c0, vt0.c0, v0.c0;
SELECT vt1.c0 FROM vt1 NOT INDEXED LEFT OUTER JOIN vt0 ON UNLIKELY(DISTINCT vt1.c0 COLLATE RTRIM) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 LEFT OUTER JOIN vt0 ON UNLIKELY(DISTINCT vt1.c0 COLLATE RTRIM) GROUP BY vt1.c0 HAVING ((vt1.c0) NOT NULL) UNION ALL SELECT vt1.c0 FROM vt1 LEFT OUTER JOIN vt0 ON UNLIKELY(DISTINCT vt1.c0 COLLATE RTRIM) GROUP BY vt1.c0 HAVING (NOT (((vt1.c0) NOT NULL))) UNION ALL SELECT vt1.c0 FROM vt1 LEFT OUTER JOIN vt0 ON UNLIKELY(DISTINCT vt1.c0 COLLATE RTRIM) GROUP BY vt1.c0 HAVING ((((vt1.c0) NOT NULL)) ISNULL);
SELECT vt1.c0 FROM vt1 NOT INDEXED LEFT OUTER JOIN vt0 ON UNLIKELY(DISTINCT vt1.c0 COLLATE RTRIM) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 LEFT OUTER JOIN vt0 ON UNLIKELY(DISTINCT vt1.c0 COLLATE RTRIM) GROUP BY vt1.c0 HAVING ((vt1.c0) NOT NULL) UNION ALL SELECT vt1.c0 FROM vt1 LEFT OUTER JOIN vt0 ON UNLIKELY(DISTINCT vt1.c0 COLLATE RTRIM) GROUP BY vt1.c0 HAVING (NOT (((vt1.c0) NOT NULL))) UNION ALL SELECT vt1.c0 FROM vt1 LEFT OUTER JOIN vt0 ON UNLIKELY(DISTINCT vt1.c0 COLLATE RTRIM) GROUP BY vt1.c0 HAVING ((((vt1.c0) NOT NULL)) ISNULL);
SELECT vt1.c0 FROM vt1 NOT INDEXED LEFT OUTER JOIN vt0 ON UNLIKELY(DISTINCT vt1.c0 COLLATE RTRIM) GROUP BY vt1.c0;
SELECT * FROM vt1 INNER JOIN v0 ON v0.c0;
SELECT ALL * FROM vt1 INNER JOIN v0 ON v0.c0 WHERE (((v0.c0) NOTNULL)) UNION ALL SELECT ALL * FROM vt1 INNER JOIN v0 ON v0.c0 WHERE ((NOT (((v0.c0) NOTNULL)))) UNION ALL SELECT * FROM vt1 INNER JOIN v0 ON v0.c0 WHERE (((((v0.c0) NOTNULL)) ISNULL));
SELECT * FROM vt1 INNER JOIN v0 ON v0.c0;
SELECT DISTINCT * FROM vt0, vt1;
SELECT DISTINCT * FROM vt0, vt1 WHERE (((vt1.c0 IN ()) IN ())) UNION SELECT DISTINCT * FROM vt0, vt1 WHERE ((NOT (((vt1.c0 IN ()) IN ())))) UNION SELECT DISTINCT * FROM vt0, vt1 WHERE (((((vt1.c0 IN ()) IN ())) ISNULL));
SELECT DISTINCT * FROM vt0, vt1;
SELECT ALL vt1.c0, v0.c0, vt0.c0 FROM v0, vt1 INNER JOIN vt0 ON ((CASE WHEN vt0.c0 THEN v0.c0 ELSE vt0.c0 END) NOT BETWEEN ('-1207370566') AND (CAST(v0.c0 AS BLOB))) GROUP BY vt1.c0, v0.c0, vt0.c0;
SELECT ALL vt1.c0, v0.c0, vt0.c0 FROM v0, vt1 INNER JOIN vt0 ON ((CASE WHEN vt0.c0 THEN v0.c0 ELSE vt0.c0 END) NOT BETWEEN ('-1207370566') AND (CAST(v0.c0 AS BLOB))) WHERE (((+ (vt1.c0)) IN ())) GROUP BY vt1.c0, v0.c0, vt0.c0 UNION SELECT vt1.c0, v0.c0, vt0.c0 FROM v0, vt1 INNER JOIN vt0 ON ((CASE WHEN vt0.c0 THEN v0.c0 ELSE vt0.c0 END) NOT BETWEEN ('-1207370566') AND (CAST(v0.c0 AS BLOB))) WHERE ((NOT (((+ (vt1.c0)) IN ())))) GROUP BY vt1.c0, v0.c0, vt0.c0 UNION SELECT ALL vt1.c0, v0.c0, vt0.c0 FROM v0, vt1 INNER JOIN vt0 ON ((CASE WHEN vt0.c0 THEN v0.c0 ELSE vt0.c0 END) NOT BETWEEN ('-1207370566') AND (CAST(v0.c0 AS BLOB))) WHERE (((((+ (vt1.c0)) IN ())) ISNULL)) GROUP BY vt1.c0, v0.c0, vt0.c0;
SELECT ALL vt1.c0, v0.c0, vt0.c0 FROM v0, vt1 INNER JOIN vt0 ON ((CASE WHEN vt0.c0 THEN v0.c0 ELSE vt0.c0 END) NOT BETWEEN ('-1207370566') AND (CAST(v0.c0 AS BLOB))) GROUP BY vt1.c0, v0.c0, vt0.c0;
SELECT ALL vt1.c0 FROM v0, vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM v0, vt1 GROUP BY vt1.c0 HAVING COUNT(TOTAL(SUM(v0.c0))) UNION ALL SELECT ALL vt1.c0 FROM v0, vt1 GROUP BY vt1.c0 HAVING (NOT (COUNT(TOTAL(SUM(v0.c0))))) UNION ALL SELECT vt1.c0 FROM v0, vt1 GROUP BY vt1.c0 HAVING ((COUNT(TOTAL(SUM(v0.c0)))) ISNULL);
SELECT ALL * FROM v0;
SELECT ALL * FROM v0 WHERE (CAST(((((v0.c0)OR(v0.c0)))AND(v0.c0)) AS INTEGER)) UNION ALL SELECT ALL * FROM v0 WHERE ((NOT (CAST(((((v0.c0)OR(v0.c0)))AND(v0.c0)) AS INTEGER)))) UNION ALL SELECT * FROM v0 WHERE (((CAST(((((v0.c0)OR(v0.c0)))AND(v0.c0)) AS INTEGER)) ISNULL));
SELECT ALL * FROM v0;
SELECT DISTINCT v0.c0, vt0.c0, vt1.c0 FROM v0, vt0, vt1;
SELECT DISTINCT v0.c0, vt0.c0, vt1.c0 FROM v0, vt0, vt1 WHERE ((((vt0.c0)) BETWEEN (((vt1.c0 IN ()))) AND (((((vt0.c0, v0.c0, v0.c0))!=((v0.c0, vt1.c0, v0.c0))))))) UNION SELECT DISTINCT v0.c0, vt0.c0, vt1.c0 FROM v0, vt0, vt1 WHERE ((NOT ((((vt0.c0)) BETWEEN (((vt1.c0 IN ()))) AND (((((vt0.c0, v0.c0, v0.c0))!=((v0.c0, vt1.c0, v0.c0))))))))) UNION SELECT DISTINCT v0.c0, vt0.c0, vt1.c0 FROM v0, vt0, vt1 WHERE ((((((vt0.c0)) BETWEEN (((vt1.c0 IN ()))) AND (((((vt0.c0, v0.c0, v0.c0))!=((v0.c0, vt1.c0, v0.c0))))))) ISNULL));
SELECT DISTINCT v0.c0, vt0.c0, vt1.c0 FROM v0, vt0, vt1;
SELECT ALL vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0;
SELECT ALL vt0.c0, vt1.c0 FROM vt0, vt1 WHERE (CASE WHEN vt1.c0 THEN 0.5489424719934818 END COLLATE BINARY) GROUP BY vt0.c0, vt1.c0 UNION SELECT vt0.c0, vt1.c0 FROM vt0, vt1 WHERE ((NOT (CASE WHEN vt1.c0 THEN 0.5489424719934818 END COLLATE BINARY))) GROUP BY vt0.c0, vt1.c0 UNION SELECT ALL vt0.c0, vt1.c0 FROM vt0, vt1 WHERE (((CASE WHEN vt1.c0 THEN 0.5489424719934818 END COLLATE BINARY) ISNULL)) GROUP BY vt0.c0, vt1.c0;
SELECT ALL vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0;
SELECT ALL v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0;
SELECT ALL v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0 HAVING GROUP_CONCAT(((((((((v0.c0)AND('349583879')))AND(v0.c0)))AND(vt0.c0)))AND(v0.c0))) UNION ALL SELECT ALL v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0 HAVING (NOT (GROUP_CONCAT(((((((((v0.c0)AND('349583879')))AND(v0.c0)))AND(vt0.c0)))AND(v0.c0))))) UNION ALL SELECT ALL v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0 HAVING ((GROUP_CONCAT(((((((((v0.c0)AND('349583879')))AND(v0.c0)))AND(vt0.c0)))AND(v0.c0)))) ISNULL);
SELECT ALL v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0;
SELECT ALL v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0 HAVING GROUP_CONCAT(((((((((v0.c0)AND('349583879')))AND(v0.c0)))AND(vt0.c0)))AND(v0.c0))) UNION ALL SELECT ALL v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0 HAVING (NOT (GROUP_CONCAT(((((((((v0.c0)AND('349583879')))AND(v0.c0)))AND(vt0.c0)))AND(v0.c0))))) UNION ALL SELECT ALL v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0 HAVING ((GROUP_CONCAT(((((((((v0.c0)AND('349583879')))AND(v0.c0)))AND(vt0.c0)))AND(v0.c0)))) ISNULL);
SELECT ALL v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0;
SELECT vt1.c0 FROM vt0, vt1;
SELECT vt1.c0 FROM vt0, vt1 WHERE (TRIM(DISTINCT ((((vt0.c0)OR(vt0.c0)))OR(vt1.c0)))) UNION ALL SELECT ALL vt1.c0 FROM vt0, vt1 WHERE ((NOT (TRIM(DISTINCT ((((vt0.c0)OR(vt0.c0)))OR(vt1.c0)))))) UNION ALL SELECT vt1.c0 FROM vt0, vt1 WHERE (((TRIM(DISTINCT ((((vt0.c0)OR(vt0.c0)))OR(vt1.c0)))) ISNULL));
SELECT vt1.c0 FROM vt0, vt1;
SELECT DISTINCT * FROM vt1 RIGHT OUTER JOIN vt0 ON RTRIM(-7.4672724E7) CROSS JOIN v0 ON ((NULL)<=(vt1.c0));
SELECT DISTINCT * FROM vt1 RIGHT OUTER JOIN vt0 ON RTRIM(-7.4672724E7) CROSS JOIN v0 ON ((NULL)<=(vt1.c0)) WHERE (CASE CAST(v0.c0 AS TEXT)  WHEN CAST(v0.c0 AS BLOB) THEN COALESCE(vt0.c0, v0.c0) END) UNION SELECT DISTINCT * FROM vt1 RIGHT OUTER JOIN vt0 ON RTRIM(-7.4672724E7) CROSS JOIN v0 ON ((NULL)<=(vt1.c0)) WHERE ((NOT (CASE CAST(v0.c0 AS TEXT)  WHEN CAST(v0.c0 AS BLOB) THEN COALESCE(vt0.c0, v0.c0) END))) UNION SELECT DISTINCT * FROM vt1 RIGHT OUTER JOIN vt0 ON RTRIM(-7.4672724E7) CROSS JOIN v0 ON ((NULL)<=(vt1.c0)) WHERE (((CASE CAST(v0.c0 AS TEXT)  WHEN CAST(v0.c0 AS BLOB) THEN COALESCE(vt0.c0, v0.c0) END) ISNULL));
SELECT DISTINCT * FROM vt1 RIGHT OUTER JOIN vt0 ON RTRIM(-7.4672724E7) CROSS JOIN v0 ON ((NULL)<=(vt1.c0));
SELECT vt0.c0, v0.c0, vt1.c0 FROM vt0, v0, vt1 GROUP BY vt0.c0, v0.c0, vt1.c0;
SELECT vt0.c0, v0.c0, vt1.c0 FROM vt0, v0, vt1 WHERE ((((vt1.c0)) NOT BETWEEN ((vt0.c0 COLLATE RTRIM)) AND ((((v0.c0)IS(0X1d2360ec)))))) GROUP BY vt0.c0, v0.c0, vt1.c0 UNION SELECT vt0.c0, v0.c0, vt1.c0 FROM vt0, v0, vt1 WHERE ((NOT ((((vt1.c0)) NOT BETWEEN ((vt0.c0 COLLATE RTRIM)) AND ((((v0.c0)IS(0x1d2360ec)))))))) GROUP BY vt0.c0, v0.c0, vt1.c0 UNION SELECT vt0.c0, v0.c0, vt1.c0 FROM vt0, v0, vt1 WHERE ((((((vt1.c0)) NOT BETWEEN ((vt0.c0 COLLATE RTRIM)) AND ((((v0.c0)IS(0x1d2360ec)))))) ISNULL)) GROUP BY vt0.c0, v0.c0, vt1.c0;
SELECT vt0.c0, v0.c0, vt1.c0 FROM vt0, v0, vt1 GROUP BY vt0.c0, v0.c0, vt1.c0;
SELECT v0.c0, vt1.c0 FROM v0 LEFT OUTER JOIN vt1 ON v0.c0 GROUP BY v0.c0, vt1.c0;
SELECT v0.c0, vt1.c0 FROM v0 LEFT OUTER JOIN vt1 ON v0.c0 GROUP BY v0.c0, vt1.c0 HAVING (((((GROUP_CONCAT(v0.c0), MAX(v0.c0), MAX(SUM(vt1.c0)), COUNT(MAX(COUNT(*))), x''))==((MAX(v0.c0), vt1.c0, vt1.c0, v0.c0, vt1.c0)))) ISNULL) UNION ALL SELECT ALL v0.c0, vt1.c0 FROM v0 LEFT OUTER JOIN vt1 ON v0.c0 GROUP BY v0.c0, vt1.c0 HAVING (NOT ((((((GROUP_CONCAT(v0.c0), MAX(v0.c0), MAX(SUM(vt1.c0)), COUNT(MAX(COUNT(*))), x''))==((MAX(v0.c0), vt1.c0, vt1.c0, v0.c0, vt1.c0)))) ISNULL))) UNION ALL SELECT v0.c0, vt1.c0 FROM v0 LEFT OUTER JOIN vt1 ON v0.c0 GROUP BY v0.c0, vt1.c0 HAVING (((((((GROUP_CONCAT(v0.c0), MAX(v0.c0), MAX(SUM(vt1.c0)), COUNT(MAX(COUNT(*))), x''))=((MAX(v0.c0), vt1.c0, vt1.c0, v0.c0, vt1.c0)))) ISNULL)) ISNULL);
SELECT vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE ((((NULL IN ()))OR((vt0.c0 IN ())))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE ((NOT ((((NULL IN ()))OR((vt0.c0 IN ())))))) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((((((NULL IN ()))OR((vt0.c0 IN ())))) ISNULL));
SELECT vt0.c0 FROM vt0;
SELECT DISTINCT * FROM v0, vt1;
SELECT DISTINCT * FROM v0, vt1 WHERE ((((NOT (vt1.c0))) BETWEEN (((v0.c0) ISNULL)) AND (CAST(v0.c0 AS TEXT)))) UNION SELECT DISTINCT * FROM v0, vt1 WHERE ((NOT ((((NOT (vt1.c0))) BETWEEN (((v0.c0) ISNULL)) AND (CAST(v0.c0 AS TEXT)))))) UNION SELECT DISTINCT * FROM v0, vt1 WHERE ((((((NOT (vt1.c0))) BETWEEN (((v0.c0) ISNULL)) AND (CAST(v0.c0 AS TEXT)))) ISNULL));
SELECT DISTINCT * FROM v0, vt1;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (((x'') NOT BETWEEN ((((vt0.c0))<=((vt0.c0)))) AND (vt0.c0 COLLATE BINARY))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (((x'') NOT BETWEEN ((((vt0.c0))<=((vt0.c0)))) AND (vt0.c0 COLLATE BINARY))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((((x'') NOT BETWEEN ((((vt0.c0))<=((vt0.c0)))) AND (vt0.c0 COLLATE BINARY))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((SUM(AVG(SUM(COUNT(*))))) NOT BETWEEN ((TOTAL(v0.c0) IN (v0.c0))) AND (COUNT(SUM(MIN(v0.c0))))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (((SUM(AVG(SUM(COUNT(*))))) NOT BETWEEN ((TOTAL(v0.c0) IN (v0.c0))) AND (COUNT(SUM(MIN(v0.c0))))))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((((SUM(AVG(SUM(COUNT(*))))) NOT BETWEEN ((TOTAL(v0.c0) IN (v0.c0))) AND (COUNT(SUM(MIN(v0.c0)))))) ISNULL);
SELECT * FROM vt1;
SELECT ALL * FROM vt1 WHERE (CAST(vt1.c0 AS REAL) COLLATE NOCASE) UNION ALL SELECT ALL * FROM vt1 WHERE ((NOT (CAST(vt1.c0 AS REAL) COLLATE NOCASE))) UNION ALL SELECT ALL * FROM vt1 WHERE (((CAST(vt1.c0 AS REAL) COLLATE NOCASE) ISNULL));
SELECT * FROM vt1;
SELECT DISTINCT * FROM vt1, v0, vt0;
SELECT DISTINCT * FROM vt1 NOT INDEXED, v0, vt0 WHERE (((v0.c0) BETWEEN ((((v0.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((v0.c0, vt1.c0, NULL)) AND ((vt1.c0, vt1.c0, v0.c0)))) AND (x''))) UNION SELECT DISTINCT * FROM vt1, v0, vt0 WHERE ((NOT (((v0.c0) BETWEEN ((((v0.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((v0.c0, vt1.c0, NULL)) AND ((vt1.c0, vt1.c0, v0.c0)))) AND (x''))))) UNION SELECT DISTINCT * FROM vt1, v0, vt0 WHERE (((((v0.c0) BETWEEN ((((v0.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((v0.c0, vt1.c0, NULL)) AND ((vt1.c0, vt1.c0, v0.c0)))) AND (x''))) ISNULL));
SELECT DISTINCT * FROM vt1, v0, vt0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 WHERE (v0.c0) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT (v0.c0))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0 WHERE (((v0.c0) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT vt1.c0, v0.c0, vt0.c0 FROM vt1, vt0, v0 GROUP BY vt1.c0, v0.c0, vt0.c0;
SELECT ALL vt1.c0, v0.c0, vt0.c0 FROM vt1, vt0, v0 GROUP BY vt1.c0, v0.c0, vt0.c0 HAVING AVG((TOTAL(MAX(AVG(COUNT(vt1.c0)))) IN (vt0.c0))) UNION ALL SELECT ALL vt1.c0, v0.c0, vt0.c0 FROM vt1, vt0, v0 GROUP BY vt1.c0, v0.c0, vt0.c0 HAVING (NOT (AVG((TOTAL(MAX(AVG(COUNT(vt1.c0)))) IN (vt0.c0))))) UNION ALL SELECT vt1.c0, v0.c0, vt0.c0 FROM vt1, vt0, v0 GROUP BY vt1.c0, v0.c0, vt0.c0 HAVING ((AVG((TOTAL(MAX(AVG(COUNT(vt1.c0)))) IN (vt0.c0)))) ISNULL);
SELECT ALL * FROM vt1, v0, vt0;
SELECT ALL * FROM vt1, v0, vt0 WHERE (CASE x''  WHEN ROUND(vt1.c0, vt1.c0) THEN (- (vt1.c0)) ELSE LOWER(DISTINCT v0.c0) END) UNION ALL SELECT * FROM vt1, v0, vt0 WHERE ((NOT (CASE x''  WHEN ROUND(vt1.c0, vt1.c0) THEN (- (vt1.c0)) ELSE LOWER(DISTINCT v0.c0) END))) UNION ALL SELECT * FROM vt1, v0, vt0 WHERE (((CASE x''  WHEN ROUND(vt1.c0, vt1.c0) THEN (- (vt1.c0)) ELSE LOWER(DISTINCT v0.c0) END) ISNULL));
SELECT ALL * FROM vt1, v0, vt0;
SELECT DISTINCT vt0.c0, v0.c0 FROM vt0 RIGHT OUTER JOIN v0 ON ((x'')%(CAST(vt0.c0 AS REAL)));
SELECT DISTINCT vt0.c0, v0.c0 FROM vt0 RIGHT OUTER JOIN v0 ON ((x'')%(CAST(vt0.c0 AS REAL))) WHERE (((((((((((v0.c0)/(v0.c0)))AND(((v0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0)))))OR((((vt0.c0, v0.c0, v0.c0))>((vt0.c0, v0.c0, vt0.c0))))))AND((((vt0.c0, vt0.c0, vt0.c0, vt0.c0, v0.c0)) BETWEEN ((vt0.c0, v0.c0, v0.c0, v0.c0, vt0.c0)) AND ((v0.c0, vt0.c0, v0.c0, v0.c0, v0.c0))))))AND(CASE v0.c0  WHEN vt0.c0 THEN v0.c0 WHEN v0.c0 THEN x'241c' WHEN NULL THEN vt0.c0 END))) UNION SELECT DISTINCT vt0.c0, v0.c0 FROM vt0 RIGHT OUTER JOIN v0 ON ((x'')%(CAST(vt0.c0 AS REAL))) WHERE ((NOT (((((((((((v0.c0)/(v0.c0)))AND(((v0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0)))))OR((((vt0.c0, v0.c0, v0.c0))>((vt0.c0, v0.c0, vt0.c0))))))AND((((vt0.c0, vt0.c0, vt0.c0, vt0.c0, v0.c0)) BETWEEN ((vt0.c0, v0.c0, v0.c0, v0.c0, vt0.c0)) AND ((v0.c0, vt0.c0, v0.c0, v0.c0, v0.c0))))))AND(CASE v0.c0  WHEN vt0.c0 THEN v0.c0 WHEN v0.c0 THEN x'241c' WHEN NULL THEN vt0.c0 END))))) UNION SELECT DISTINCT vt0.c0, v0.c0 FROM vt0 RIGHT OUTER JOIN v0 ON ((x'')%(CAST(vt0.c0 AS REAL))) WHERE (((((((((((((v0.c0)/(v0.c0)))AND(((v0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0)))))OR((((vt0.c0, v0.c0, v0.c0))>((vt0.c0, v0.c0, vt0.c0))))))AND((((vt0.c0, vt0.c0, vt0.c0, vt0.c0, v0.c0)) BETWEEN ((vt0.c0, v0.c0, v0.c0, v0.c0, vt0.c0)) AND ((v0.c0, vt0.c0, v0.c0, v0.c0, v0.c0))))))AND(CASE v0.c0  WHEN vt0.c0 THEN v0.c0 WHEN v0.c0 THEN x'241c' WHEN NULL THEN vt0.c0 END))) ISNULL));
SELECT DISTINCT vt0.c0, v0.c0 FROM vt0 RIGHT OUTER JOIN v0 ON ((x'')%(CAST(vt0.c0 AS REAL)));
SELECT ALL vt0.c0, vt1.c0, v0.c0 FROM v0, vt1, vt0 GROUP BY vt0.c0, vt1.c0, v0.c0;
SELECT vt0.c0, vt1.c0, v0.c0 FROM v0, vt1, vt0 WHERE ('767394244') GROUP BY vt0.c0, vt1.c0, v0.c0 UNION SELECT ALL vt0.c0, vt1.c0, v0.c0 FROM v0, vt1, vt0 WHERE ((NOT ('767394244'))) GROUP BY vt0.c0, vt1.c0, v0.c0 UNION SELECT vt0.c0, vt1.c0, v0.c0 FROM v0, vt1, vt0 WHERE ((('767394244') ISNULL)) GROUP BY vt0.c0, vt1.c0, v0.c0;
SELECT ALL vt0.c0, vt1.c0, v0.c0 FROM v0, vt1, vt0 GROUP BY vt0.c0, vt1.c0, v0.c0;
SELECT vt1.c0, v0.c0, vt0.c0 FROM v0, vt0, vt1 GROUP BY vt1.c0, v0.c0, vt0.c0;
SELECT ALL vt1.c0, v0.c0, vt0.c0 FROM v0, vt0, vt1 GROUP BY vt1.c0, v0.c0, vt0.c0 HAVING COUNT(MIN(TOTAL(v0.c0))) UNION ALL SELECT ALL vt1.c0, v0.c0, vt0.c0 FROM v0, vt0, vt1 GROUP BY vt1.c0, v0.c0, vt0.c0 HAVING (NOT (COUNT(MIN(TOTAL(v0.c0))))) UNION ALL SELECT vt1.c0, v0.c0, vt0.c0 FROM v0, vt0, vt1 GROUP BY vt1.c0, v0.c0, vt0.c0 HAVING ((COUNT(MIN(TOTAL(v0.c0)))) ISNULL);
SELECT v0.c0 FROM v0;
SELECT v0.c0 FROM v0 WHERE (CAST(v0.c0 AS REAL) COLLATE NOCASE) UNION ALL SELECT v0.c0 FROM v0 WHERE ((NOT (CAST(v0.c0 AS REAL) COLLATE NOCASE))) UNION ALL SELECT ALL v0.c0 FROM v0 WHERE (((CAST(v0.c0 AS REAL) COLLATE NOCASE) ISNULL));
SELECT v0.c0 FROM v0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((((vt0.c0)-(vt0.c0))) NOT BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) AND (HEX(vt0.c0)))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (((((vt0.c0)-(vt0.c0))) NOT BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) AND (HEX(vt0.c0)))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((((((vt0.c0)-(vt0.c0))) NOT BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) AND (HEX(vt0.c0)))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE ((((((((((((((~ (vt0.c0)))OR(vt0.c0)))OR(CAST(vt0.c0 AS BLOB))))OR(CAST(vt0.c0 AS TEXT))))OR(CAST(vt0.c0 AS REAL))))AND(((vt0.c0) ISNULL))))OR(json_type(vt0.c0)))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT ((((((((((((((~ (vt0.c0)))OR(vt0.c0)))OR(CAST(vt0.c0 AS BLOB))))OR(CAST(vt0.c0 AS TEXT))))OR(CAST(vt0.c0 AS REAL))))AND(((vt0.c0) ISNULL))))OR(json_type(vt0.c0)))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((((((((((((((((~ (vt0.c0)))OR(vt0.c0)))OR(CAST(vt0.c0 AS BLOB))))OR(CAST(vt0.c0 AS TEXT))))OR(CAST(vt0.c0 AS REAL))))AND(((vt0.c0) ISNULL))))OR(json_type(vt0.c0)))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING CAST(TOTAL(x'0a15') AS INTEGER) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (CAST(TOTAL(x'0a15') AS INTEGER))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((CAST(TOTAL(x'0a15') AS INTEGER)) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING CAST(TOTAL(x'0a15') AS INTEGER) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (CAST(TOTAL(x'0a15') AS INTEGER))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((CAST(TOTAL(x'0a15') AS INTEGER)) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT * FROM vt1;
SELECT * FROM vt1 WHERE ((- (vt1.c0))) UNION ALL SELECT ALL * FROM vt1 WHERE ((NOT ((- (vt1.c0))))) UNION ALL SELECT * FROM vt1 WHERE ((((- (vt1.c0))) ISNULL));
SELECT * FROM vt1;
SELECT DISTINCT * FROM vt1, v0 CROSS JOIN vt0 ON LIKELIHOOD(DISTINCT CASE WHEN vt0.c0 THEN v0.c0 END, 0.32268176927207604);
SELECT DISTINCT * FROM vt1, v0 CROSS JOIN vt0 ON LIKELIHOOD(DISTINCT CASE WHEN vt0.c0 THEN v0.c0 END, 0.32268176927207604) WHERE (((((vt0.c0) BETWEEN (v0.c0) AND (vt1.c0))) NOT BETWEEN (CAST(0.1487267762487715 AS BLOB)) AND (((vt1.c0) NOTNULL)))) UNION SELECT DISTINCT * FROM vt1, v0 CROSS JOIN vt0 ON LIKELIHOOD(DISTINCT CASE WHEN vt0.c0 THEN v0.c0 END, 0.32268176927207604) WHERE ((NOT (((((vt0.c0) BETWEEN (v0.c0) AND (vt1.c0))) NOT BETWEEN (CAST(0.1487267762487715 AS BLOB)) AND (((vt1.c0) NOTNULL)))))) UNION SELECT DISTINCT * FROM vt1, v0 CROSS JOIN vt0 ON LIKELIHOOD(DISTINCT CASE WHEN vt0.c0 THEN v0.c0 END, 0.32268176927207604) WHERE (((((((vt0.c0) BETWEEN (v0.c0) AND (vt1.c0))) NOT BETWEEN (CAST(0.1487267762487715 AS BLOB)) AND (((vt1.c0) NOTNULL)))) ISNULL));
SELECT DISTINCT * FROM vt1, v0 CROSS JOIN vt0 ON LIKELIHOOD(DISTINCT CASE WHEN vt0.c0 THEN v0.c0 END, 0.32268176927207604);
SELECT ALL v0.c0 FROM vt1, v0, vt0 GROUP BY v0.c0;
SELECT v0.c0 FROM vt1, v0, vt0 WHERE ('-494249640') GROUP BY v0.c0 UNION SELECT v0.c0 FROM vt1, v0, vt0 WHERE ((NOT ('-494249640'))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM vt1, v0, vt0 WHERE ((('-494249640') ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM vt1, v0, vt0 GROUP BY v0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((GROUP_CONCAT(vt0.c0)) NOT BETWEEN (TOTAL(MAX(vt0.c0))) AND (MAX(vt0.c0))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (((GROUP_CONCAT(vt0.c0)) NOT BETWEEN (TOTAL(MAX(vt0.c0))) AND (MAX(vt0.c0))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((GROUP_CONCAT(vt0.c0)) NOT BETWEEN (TOTAL(MAX(vt0.c0))) AND (MAX(vt0.c0)))) ISNULL);
SELECT * FROM vt1;
SELECT * FROM vt1 WHERE (((14379228) NOT BETWEEN (COALESCE(vt1.c0, vt1.c0, vt1.c0, vt1.c0)) AND (((vt1.c0) NOT BETWEEN (vt1.c0) AND (0.8168590210500339))))) UNION ALL SELECT ALL * FROM vt1 WHERE ((NOT (((14379228) NOT BETWEEN (COALESCE(vt1.c0, vt1.c0, vt1.c0, vt1.c0)) AND (((vt1.c0) NOT BETWEEN (vt1.c0) AND (0.8168590210500339))))))) UNION ALL SELECT * FROM vt1 WHERE (((((14379228) NOT BETWEEN (COALESCE(vt1.c0, vt1.c0, vt1.c0, vt1.c0)) AND (((vt1.c0) NOT BETWEEN (vt1.c0) AND (0.8168590210500339))))) ISNULL));
SELECT * FROM vt1;
SELECT DISTINCT * FROM vt0, v0;
SELECT DISTINCT * FROM vt0, v0 WHERE (SUBSTR(((((((((v0.c0)OR(v0.c0)))AND(vt0.c0)))AND(v0.c0)))OR(v0.c0)), (((vt0.c0))=((v0.c0))))) UNION SELECT DISTINCT * FROM vt0, v0 WHERE ((NOT (SUBSTR(((((((((v0.c0)OR(v0.c0)))AND(vt0.c0)))AND(v0.c0)))OR(v0.c0)), (((vt0.c0))==((v0.c0))))))) UNION SELECT DISTINCT * FROM vt0, v0 WHERE (((SUBSTR(((((((((v0.c0)OR(v0.c0)))AND(vt0.c0)))AND(v0.c0)))OR(v0.c0)), (((vt0.c0))==((v0.c0))))) ISNULL));
SELECT DISTINCT * FROM vt0, v0;
SELECT ALL vt0.c0, vt1.c0 FROM v0, vt1 LEFT OUTER JOIN vt0 ON ((((vt1.c0)AND((2.49034845E8 IN ()))))OR(((vt1.c0)IS NOT(v0.c0)))) GROUP BY vt0.c0, vt1.c0;
SELECT vt0.c0, vt1.c0 FROM v0, vt1 LEFT OUTER JOIN vt0 ON ((((vt1.c0)AND((2.49034845E8 IN ()))))OR(((vt1.c0)IS NOT(v0.c0)))) WHERE (((((('-202151744', v0.c0, 0xffffffffa1d782ab))<>((vt0.c0, vt0.c0, v0.c0)))) NOT BETWEEN ((vt1.c0 IN ())) AND (((v0.c0)<(vt1.c0))))) GROUP BY vt0.c0, vt1.c0 UNION SELECT ALL vt0.c0, vt1.c0 FROM v0, vt1 LEFT OUTER JOIN vt0 ON ((((vt1.c0)AND((2.49034845E8 IN ()))))OR(((vt1.c0)IS NOT(v0.c0)))) WHERE ((NOT (((((('-202151744', v0.c0, 0Xffffffffa1d782ab))!=((vt0.c0, vt0.c0, v0.c0)))) NOT BETWEEN ((vt1.c0 IN ())) AND (((v0.c0)<(vt1.c0))))))) GROUP BY vt0.c0, vt1.c0 UNION SELECT ALL vt0.c0, vt1.c0 FROM v0, vt1 LEFT OUTER JOIN vt0 ON ((((vt1.c0)AND((2.49034845E8 IN ()))))OR(((vt1.c0)IS NOT(v0.c0)))) WHERE (((((((('-202151744', v0.c0, 0Xffffffffa1d782ab))<>((vt0.c0, vt0.c0, v0.c0)))) NOT BETWEEN ((vt1.c0 IN ())) AND (((v0.c0)<(vt1.c0))))) ISNULL)) GROUP BY vt0.c0, vt1.c0;
SELECT ALL vt0.c0, vt1.c0 FROM v0, vt1 LEFT OUTER JOIN vt0 ON ((((vt1.c0)AND((2.49034845E8 IN ()))))OR(((vt1.c0)IS NOT(v0.c0)))) GROUP BY vt0.c0, vt1.c0;
SELECT v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0;
SELECT v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0 HAVING ((TOTAL(v0.c0))<=(((((vt0.c0)AND(TOTAL(MAX(AVG(MIN(COUNT(MAX(AVG(GROUP_CONCAT(v0.c0)))))))))))AND(v0.c0)))) UNION ALL SELECT v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0 HAVING (NOT (((TOTAL(v0.c0))<=(((((vt0.c0)AND(TOTAL(MAX(AVG(MIN(COUNT(MAX(AVG(GROUP_CONCAT(v0.c0)))))))))))AND(v0.c0)))))) UNION ALL SELECT ALL v0.c0, vt0.c0 FROM vt0, v0 GROUP BY v0.c0, vt0.c0 HAVING ((((TOTAL(v0.c0))<=(((((vt0.c0)AND(TOTAL(MAX(AVG(MIN(COUNT(MAX(AVG(GROUP_CONCAT(v0.c0)))))))))))AND(v0.c0))))) ISNULL);
SELECT ALL vt0.c0 FROM v0 INNER JOIN vt0 ON ((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE BINARY;
SELECT vt0.c0 FROM v0 INNER JOIN vt0 ON ((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE BINARY WHERE (((((((((((((CASE WHEN vt0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN vt0.c0 THEN NULL ELSE vt0.c0 END)OR(CASE WHEN v0.c0 THEN vt0.c0 END)))AND(CAST(vt0.c0 AS REAL))))AND(((((v0.c0)AND(vt0.c0)))AND(vt0.c0)))))OR(((x'') IS FALSE))))AND((((vt0.c0))>((v0.c0))))))AND(((((vt0.c0)AND(vt0.c0)))AND(v0.c0))))) UNION ALL SELECT ALL vt0.c0 FROM v0 INNER JOIN vt0 ON ((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE BINARY WHERE ((NOT (((((((((((((CASE WHEN vt0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN vt0.c0 THEN NULL ELSE vt0.c0 END)OR(CASE WHEN v0.c0 THEN vt0.c0 END)))AND(CAST(vt0.c0 AS REAL))))AND(((((v0.c0)AND(vt0.c0)))AND(vt0.c0)))))OR(((x'') IS FALSE))))AND((((vt0.c0))>((v0.c0))))))AND(((((vt0.c0)AND(vt0.c0)))AND(v0.c0))))))) UNION ALL SELECT vt0.c0 FROM v0 INNER JOIN vt0 ON ((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE BINARY WHERE (((((((((((((((CASE WHEN vt0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN vt0.c0 THEN NULL ELSE vt0.c0 END)OR(CASE WHEN v0.c0 THEN vt0.c0 END)))AND(CAST(vt0.c0 AS REAL))))AND(((((v0.c0)AND(vt0.c0)))AND(vt0.c0)))))OR(((x'') IS FALSE))))AND((((vt0.c0))>((v0.c0))))))AND(((((vt0.c0)AND(vt0.c0)))AND(v0.c0))))) ISNULL));
SELECT ALL vt0.c0 FROM v0 INNER JOIN vt0 ON ((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE BINARY;
SELECT DISTINCT vt0.c0 FROM v0, vt0;
SELECT DISTINCT vt0.c0 FROM v0, vt0 WHERE (((((v0.c0)IS NOT(vt0.c0))) IS TRUE)) UNION SELECT DISTINCT vt0.c0 FROM v0, vt0 WHERE ((NOT (((((v0.c0)IS NOT(vt0.c0))) IS TRUE)))) UNION SELECT DISTINCT vt0.c0 FROM v0, vt0 WHERE (((((((v0.c0)IS NOT(vt0.c0))) IS TRUE)) ISNULL));
SELECT DISTINCT vt0.c0 FROM v0, vt0;
SELECT ALL vt1.c0, vt0.c0 FROM vt1 RIGHT OUTER JOIN vt0 ON ((vt0.c0) NOTNULL) COLLATE BINARY GROUP BY vt1.c0, vt0.c0;
SELECT vt1.c0, vt0.c0 FROM vt1 RIGHT OUTER JOIN vt0 ON ((vt0.c0) NOTNULL) COLLATE BINARY WHERE (((SQLITE_COMPILEOPTION_GET(vt1.c0))<>(CASE vt1.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c0 END))) GROUP BY vt1.c0, vt0.c0 UNION SELECT vt1.c0, vt0.c0 FROM vt1 RIGHT OUTER JOIN vt0 ON ((vt0.c0) NOTNULL) COLLATE BINARY WHERE ((NOT (((SQLITE_COMPILEOPTION_GET(vt1.c0))!=(CASE vt1.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c0 END))))) GROUP BY vt1.c0, vt0.c0 UNION SELECT ALL vt1.c0, vt0.c0 FROM vt1 RIGHT OUTER JOIN vt0 ON ((vt0.c0) NOTNULL) COLLATE BINARY WHERE (((((SQLITE_COMPILEOPTION_GET(vt1.c0))!=(CASE vt1.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c0 END))) ISNULL)) GROUP BY vt1.c0, vt0.c0;
SELECT ALL vt1.c0, vt0.c0 FROM vt1 RIGHT OUTER JOIN vt0 ON ((vt0.c0) NOTNULL) COLLATE BINARY GROUP BY vt1.c0, vt0.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING COALESCE(DISTINCT COUNT(TOTAL(COUNT(*))), SUM(vt1.c0)) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (COALESCE(DISTINCT COUNT(TOTAL(COUNT(*))), SUM(vt1.c0)))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((COALESCE(DISTINCT COUNT(TOTAL(COUNT(*))), SUM(vt1.c0))) ISNULL);
SELECT * FROM vt0, v0 FULL OUTER JOIN vt1 ON CASE CHAR(vt1.c0)  WHEN ((v0.c0) ISNULL) THEN CASE WHEN 1.736120417E9 THEN vt0.c0 WHEN vt0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END END;
SELECT * FROM vt0, v0 FULL OUTER JOIN vt1 ON CASE CHAR(vt1.c0)  WHEN ((v0.c0) ISNULL) THEN CASE WHEN 1.736120417E9 THEN vt0.c0 WHEN vt0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END END WHERE ((~ (CASE WHEN vt1.c0 THEN v0.c0 WHEN v0.c0 THEN vt1.c0 WHEN NULL THEN vt1.c0 END))) UNION ALL SELECT * FROM vt0, v0 FULL OUTER JOIN vt1 ON CASE CHAR(vt1.c0)  WHEN ((v0.c0) ISNULL) THEN CASE WHEN 1.736120417E9 THEN vt0.c0 WHEN vt0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END END WHERE ((NOT ((~ (CASE WHEN vt1.c0 THEN v0.c0 WHEN v0.c0 THEN vt1.c0 WHEN NULL THEN vt1.c0 END))))) UNION ALL SELECT * FROM vt0, v0 FULL OUTER JOIN vt1 ON CASE CHAR(vt1.c0)  WHEN ((v0.c0) ISNULL) THEN CASE WHEN 1.736120417E9 THEN vt0.c0 WHEN vt0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END END WHERE ((((~ (CASE WHEN vt1.c0 THEN v0.c0 WHEN v0.c0 THEN vt1.c0 WHEN NULL THEN vt1.c0 END))) ISNULL));
SELECT * FROM vt0, v0 FULL OUTER JOIN vt1 ON CASE CHAR(vt1.c0)  WHEN ((v0.c0) ISNULL) THEN CASE WHEN 1.736120417E9 THEN vt0.c0 WHEN vt0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END END;
SELECT DISTINCT v0.c0 FROM v0;
SELECT DISTINCT v0.c0 FROM v0 WHERE (0.3033855648847297) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE ((NOT (0.3033855648847297))) UNION SELECT DISTINCT v0.c0 FROM v0 WHERE (((0.3033855648847297) ISNULL));
SELECT DISTINCT v0.c0 FROM v0;
SELECT vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0;
SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 WHERE (((((vt0.c0) NOTNULL))LIKE(((v0.c0)*(vt0.c0))))) GROUP BY vt0.c0, v0.c0 UNION SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 WHERE ((NOT (((((vt0.c0) NOTNULL))LIKE(((v0.c0)*(vt0.c0))))))) GROUP BY vt0.c0, v0.c0 UNION SELECT vt0.c0, v0.c0 FROM vt0, v0 WHERE (((((((vt0.c0) NOTNULL))LIKE(((v0.c0)*(vt0.c0))))) ISNULL)) GROUP BY vt0.c0, v0.c0;
SELECT vt0.c0, v0.c0 FROM vt0, v0 GROUP BY vt0.c0, v0.c0;
SELECT ALL vt0.c0 FROM vt0, vt1 CROSS JOIN v0 ON (((vt0.c0, vt0.c0, v0.c0)) BETWEEN (((((v0.c0))>=((v0.c0))), (((vt0.c0))==((v0.c0))), (vt1.c0 IN ()))) AND (((((((((('846805432')AND(vt0.c0)))OR(vt0.c0)))OR(v0.c0)))OR(vt0.c0)), CAST(vt0.c0 AS NUMERIC), ((vt0.c0)*(vt0.c0))))) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0, vt1 CROSS JOIN v0 ON (((vt0.c0, vt0.c0, v0.c0)) BETWEEN (((((v0.c0))>=((v0.c0))), (((vt0.c0))=((v0.c0))), (vt1.c0 IN ()))) AND (((((((((('846805432')AND(vt0.c0)))OR(vt0.c0)))OR(v0.c0)))OR(vt0.c0)), CAST(vt0.c0 AS NUMERIC), ((vt0.c0)*(vt0.c0))))) GROUP BY vt0.c0 HAVING (+ (((TOTAL(vt1.c0)) NOTNULL))) UNION ALL SELECT ALL vt0.c0 FROM vt0, vt1 CROSS JOIN v0 ON (((vt0.c0, vt0.c0, v0.c0)) BETWEEN (((((v0.c0))>=((v0.c0))), (((vt0.c0))==((v0.c0))), (vt1.c0 IN ()))) AND (((((((((('846805432')AND(vt0.c0)))OR(vt0.c0)))OR(v0.c0)))OR(vt0.c0)), CAST(vt0.c0 AS NUMERIC), ((vt0.c0)*(vt0.c0))))) GROUP BY vt0.c0 HAVING (NOT ((+ (((TOTAL(vt1.c0)) NOTNULL))))) UNION ALL SELECT vt0.c0 FROM vt0, vt1 CROSS JOIN v0 ON (((vt0.c0, vt0.c0, v0.c0)) BETWEEN (((((v0.c0))>=((v0.c0))), (((vt0.c0))=((v0.c0))), (vt1.c0 IN ()))) AND (((((((((('846805432')AND(vt0.c0)))OR(vt0.c0)))OR(v0.c0)))OR(vt0.c0)), CAST(vt0.c0 AS NUMERIC), ((vt0.c0)*(vt0.c0))))) GROUP BY vt0.c0 HAVING (((+ (((TOTAL(vt1.c0)) NOTNULL)))) ISNULL);
SELECT ALL vt0.c0 FROM vt0, vt1 CROSS JOIN v0 ON (((vt0.c0, vt0.c0, v0.c0)) BETWEEN (((((v0.c0))>=((v0.c0))), (((vt0.c0))==((v0.c0))), (vt1.c0 IN ()))) AND (((((((((('846805432')AND(vt0.c0)))OR(vt0.c0)))OR(v0.c0)))OR(vt0.c0)), CAST(vt0.c0 AS NUMERIC), ((vt0.c0)*(vt0.c0))))) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0, vt1 CROSS JOIN v0 ON (((vt0.c0, vt0.c0, v0.c0)) BETWEEN (((((v0.c0))>=((v0.c0))), (((vt0.c0))=((v0.c0))), (vt1.c0 IN ()))) AND (((((((((('846805432')AND(vt0.c0)))OR(vt0.c0)))OR(v0.c0)))OR(vt0.c0)), CAST(vt0.c0 AS NUMERIC), ((vt0.c0)*(vt0.c0))))) GROUP BY vt0.c0 HAVING (+ (((TOTAL(vt1.c0)) NOTNULL))) UNION ALL SELECT ALL vt0.c0 FROM vt0, vt1 CROSS JOIN v0 ON (((vt0.c0, vt0.c0, v0.c0)) BETWEEN (((((v0.c0))>=((v0.c0))), (((vt0.c0))==((v0.c0))), (vt1.c0 IN ()))) AND (((((((((('846805432')AND(vt0.c0)))OR(vt0.c0)))OR(v0.c0)))OR(vt0.c0)), CAST(vt0.c0 AS NUMERIC), ((vt0.c0)*(vt0.c0))))) GROUP BY vt0.c0 HAVING (NOT ((+ (((TOTAL(vt1.c0)) NOTNULL))))) UNION ALL SELECT vt0.c0 FROM vt0, vt1 CROSS JOIN v0 ON (((vt0.c0, vt0.c0, v0.c0)) BETWEEN (((((v0.c0))>=((v0.c0))), (((vt0.c0))=((v0.c0))), (vt1.c0 IN ()))) AND (((((((((('846805432')AND(vt0.c0)))OR(vt0.c0)))OR(v0.c0)))OR(vt0.c0)), CAST(vt0.c0 AS NUMERIC), ((vt0.c0)*(vt0.c0))))) GROUP BY vt0.c0 HAVING (((+ (((TOTAL(vt1.c0)) NOTNULL)))) ISNULL);
SELECT ALL vt0.c0 FROM vt0, vt1 CROSS JOIN v0 ON (((vt0.c0, vt0.c0, v0.c0)) BETWEEN (((((v0.c0))>=((v0.c0))), (((vt0.c0))==((v0.c0))), (vt1.c0 IN ()))) AND (((((((((('846805432')AND(vt0.c0)))OR(vt0.c0)))OR(v0.c0)))OR(vt0.c0)), CAST(vt0.c0 AS NUMERIC), ((vt0.c0)*(vt0.c0))))) GROUP BY vt0.c0;
SELECT ALL * FROM v0, vt1 RIGHT OUTER JOIN vt0 ON '_I';
SELECT * FROM v0, vt1 RIGHT OUTER JOIN vt0 ON '_I' WHERE ((((((((((((vt1.c0)AND(vt0.c0)))AND('#9')))AND(vt0.c0)))OR(vt0.c0))))>((CAST(v0.c0 AS NUMERIC))))) UNION ALL SELECT ALL * FROM v0, vt1 RIGHT OUTER JOIN vt0 ON '_I' WHERE ((NOT ((((((((((((vt1.c0)AND(vt0.c0)))AND('#9')))AND(vt0.c0)))OR(vt0.c0))))>((CAST(v0.c0 AS NUMERIC))))))) UNION ALL SELECT ALL * FROM v0, vt1 RIGHT OUTER JOIN vt0 ON '_I' WHERE ((((((((((((((vt1.c0)AND(vt0.c0)))AND('#9')))AND(vt0.c0)))OR(vt0.c0))))>((CAST(v0.c0 AS NUMERIC))))) ISNULL));
SELECT ALL * FROM v0, vt1 RIGHT OUTER JOIN vt0 ON '_I';
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((CAST(vt0.c0 AS TEXT))OR(((vt0.c0)IS NOT(NULL))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (((CAST(vt0.c0 AS TEXT))OR(((vt0.c0)IS NOT(NULL))))))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((((CAST(vt0.c0 AS TEXT))OR(((vt0.c0)IS NOT(NULL))))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (((vt1.c0)&(vt1.c0))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT ((NOT (((vt1.c0)&(vt1.c0))))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((((NOT (((vt1.c0)&(vt1.c0))))) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt0.c0 FROM vt0, v0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, v0 GROUP BY vt0.c0 HAVING SUM(AVG(GROUP_CONCAT(v0.c0))) UNION ALL SELECT ALL vt0.c0 FROM vt0, v0 GROUP BY vt0.c0 HAVING (NOT (SUM(AVG(GROUP_CONCAT(v0.c0))))) UNION ALL SELECT ALL vt0.c0 FROM vt0, v0 GROUP BY vt0.c0 HAVING ((SUM(AVG(GROUP_CONCAT(v0.c0)))) ISNULL);
SELECT ALL vt1.c0, vt0.c0 FROM vt1 LEFT OUTER JOIN v0 ON (((((((((vt0.c0 IN ()))OR(CASE WHEN 0.7728467054268688 THEN vt0.c0 END)))AND((((vt0.c0)) BETWEEN ((vt1.c0)) AND ((v0.c0))))))AND(CASE WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN -8.53186835E8 THEN vt1.c0 ELSE vt1.c0 END)))AND(vt0.c0 COLLATE BINARY)) CROSS JOIN vt0 ON CAST(vt1.c0 AS TEXT) COLLATE RTRIM;
SELECT DISTINCT * FROM v0, vt0;
SELECT DISTINCT * FROM v0, vt0 WHERE (((((((vt0.c0)OR(x'')))OR(v0.c0))) NOT NULL)) UNION SELECT DISTINCT * FROM v0, vt0 WHERE ((NOT (((((((vt0.c0)OR(x'')))OR(v0.c0))) NOT NULL)))) UNION SELECT DISTINCT * FROM v0, vt0 WHERE (((((((((vt0.c0)OR(x'')))OR(v0.c0))) NOT NULL)) ISNULL));
SELECT DISTINCT * FROM v0, vt0;
SELECT ALL v0.c0, vt0.c0 FROM v0, vt0, vt1 GROUP BY v0.c0, vt0.c0;
SELECT v0.c0, vt0.c0 FROM v0, vt0, vt1 WHERE (((vt0.c0)!=(CAST(v0.c0 AS REAL)))) GROUP BY v0.c0, vt0.c0 UNION SELECT ALL v0.c0, vt0.c0 FROM v0, vt0, vt1 WHERE ((NOT (((vt0.c0)<>(CAST(v0.c0 AS REAL)))))) GROUP BY v0.c0, vt0.c0 UNION SELECT ALL v0.c0, vt0.c0 FROM v0, vt0, vt1 WHERE (((((vt0.c0)!=(CAST(v0.c0 AS REAL)))) ISNULL)) GROUP BY v0.c0, vt0.c0;
SELECT ALL v0.c0, vt0.c0 FROM v0, vt0, vt1 GROUP BY v0.c0, vt0.c0;
SELECT vt0.c0, v0.c0, vt1.c0 FROM vt0, vt1 LEFT OUTER JOIN v0 ON ((CAST(vt0.c0 AS NUMERIC)) NOT BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN v0.c0 ELSE v0.c0 END) AND (((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))) GROUP BY vt0.c0, v0.c0, vt1.c0;
SELECT ALL vt0.c0, v0.c0, vt1.c0 FROM vt0, vt1 LEFT OUTER JOIN v0 ON ((CAST(vt0.c0 AS NUMERIC)) NOT BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN v0.c0 ELSE v0.c0 END) AND (((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))) GROUP BY vt0.c0, v0.c0, vt1.c0 HAVING GROUP_CONCAT(COUNT(*)) UNION ALL SELECT vt0.c0, v0.c0, vt1.c0 FROM vt0, vt1 LEFT OUTER JOIN v0 ON ((CAST(vt0.c0 AS NUMERIC)) NOT BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN v0.c0 ELSE v0.c0 END) AND (((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))) GROUP BY vt0.c0, v0.c0, vt1.c0 HAVING (NOT (GROUP_CONCAT(COUNT(*)))) UNION ALL SELECT ALL vt0.c0, v0.c0, vt1.c0 FROM vt0, vt1 LEFT OUTER JOIN v0 ON ((CAST(vt0.c0 AS NUMERIC)) NOT BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN v0.c0 ELSE v0.c0 END) AND (((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))) GROUP BY vt0.c0, v0.c0, vt1.c0 HAVING ((GROUP_CONCAT(COUNT(*))) ISNULL);
SELECT TOTAL(UNLIKELY(NULL)) FROM vt1;
SELECT ALL * FROM vt0 LEFT OUTER JOIN vt1 ON (CASE WHEN vt0.c0 THEN vt0.c0 END IN ());
SELECT ALL * FROM vt0 LEFT OUTER JOIN vt1 ON (CASE WHEN vt0.c0 THEN vt0.c0 END IN ()) WHERE (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)) COLLATE BINARY) UNION ALL SELECT ALL * FROM vt0 LEFT OUTER JOIN vt1 ON (CASE WHEN vt0.c0 THEN vt0.c0 END IN ()) WHERE ((NOT (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)) COLLATE BINARY))) UNION ALL SELECT * FROM vt0 LEFT OUTER JOIN vt1 ON (CASE WHEN vt0.c0 THEN vt0.c0 END IN ()) WHERE (((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)) COLLATE BINARY) ISNULL));
SELECT ALL * FROM vt0 LEFT OUTER JOIN vt1 ON (CASE WHEN vt0.c0 THEN vt0.c0 END IN ());
SELECT DISTINCT vt1.c0, vt0.c0 FROM vt0, vt1;
SELECT DISTINCT vt1.c0, vt0.c0 FROM vt0, vt1 WHERE ((- (vt0.c0 COLLATE BINARY))) UNION SELECT DISTINCT vt1.c0, vt0.c0 FROM vt0 NOT INDEXED, vt1 WHERE ((NOT ((- (vt0.c0 COLLATE BINARY))))) UNION SELECT DISTINCT vt1.c0, vt0.c0 FROM vt0, vt1 WHERE ((((- (vt0.c0 COLLATE BINARY))) ISNULL));
SELECT DISTINCT vt1.c0, vt0.c0 FROM vt0, vt1;
SELECT ALL vt0.c0, v0.c0 FROM vt1, vt0, v0 GROUP BY vt0.c0, v0.c0;
SELECT vt0.c0, v0.c0 FROM vt1, vt0, v0 WHERE ((CAST(vt1.c0 AS INTEGER) IN ())) GROUP BY vt0.c0, v0.c0 UNION SELECT ALL vt0.c0, v0.c0 FROM vt1, vt0, v0 WHERE ((NOT ((CAST(vt1.c0 AS INTEGER) IN ())))) GROUP BY vt0.c0, v0.c0 UNION SELECT vt0.c0, v0.c0 FROM vt1, vt0, v0 WHERE ((((CAST(vt1.c0 AS INTEGER) IN ())) ISNULL)) GROUP BY vt0.c0, v0.c0;
SELECT ALL vt0.c0, v0.c0 FROM vt1, vt0, v0 GROUP BY vt0.c0, v0.c0;
SELECT vt0.c0, v0.c0, vt1.c0 FROM v0, vt1, vt0 GROUP BY vt0.c0, v0.c0, vt1.c0;
SELECT vt0.c0, v0.c0, vt1.c0 FROM v0, vt1, vt0 GROUP BY vt0.c0, v0.c0, vt1.c0 HAVING (((NOT (AVG(AVG(vt1.c0)))))<>((vt1.c0 IN (v0.c0)))) UNION ALL SELECT vt0.c0, v0.c0, vt1.c0 FROM v0, vt1, vt0 GROUP BY vt0.c0, v0.c0, vt1.c0 HAVING (NOT ((((NOT (AVG(AVG(vt1.c0)))))<>((vt1.c0 IN (v0.c0)))))) UNION ALL SELECT vt0.c0, v0.c0, vt1.c0 FROM v0, vt1, vt0 GROUP BY vt0.c0, v0.c0, vt1.c0 HAVING (((((NOT (AVG(AVG(vt1.c0)))))<>((vt1.c0 IN (v0.c0))))) ISNULL);
SELECT * FROM vt1;
SELECT * FROM vt1 WHERE (vt1.c0) UNION ALL SELECT ALL * FROM vt1 WHERE ((NOT (vt1.c0))) UNION ALL SELECT * FROM vt1 WHERE (((vt1.c0) ISNULL));
SELECT * FROM vt1;
SELECT DISTINCT * FROM vt1, v0;
SELECT DISTINCT * FROM vt1, v0 WHERE ((((v0.c0, v0.c0, vt1.c0)) NOT BETWEEN ((((((v0.c0)OR(vt1.c0)))AND(vt1.c0)), (((NULL)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))), ((v0.c0) BETWEEN (0.07679919024312365) AND (vt1.c0)))) AND ((((v0.c0) NOT NULL), vt1.c0 COLLATE NOCASE, ((v0.c0)!=(v0.c0)))))) UNION SELECT DISTINCT * FROM vt1, v0 WHERE ((NOT ((((v0.c0, v0.c0, vt1.c0)) NOT BETWEEN ((((((v0.c0)OR(vt1.c0)))AND(vt1.c0)), (((NULL)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))), ((v0.c0) BETWEEN (0.07679919024312365) AND (vt1.c0)))) AND ((((v0.c0) NOT NULL), vt1.c0 COLLATE NOCASE, ((v0.c0)!=(v0.c0)))))))) UNION SELECT DISTINCT * FROM vt1, v0 WHERE ((((((v0.c0, v0.c0, vt1.c0)) NOT BETWEEN ((((((v0.c0)OR(vt1.c0)))AND(vt1.c0)), (((NULL)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))), ((v0.c0) BETWEEN (0.07679919024312365) AND (vt1.c0)))) AND ((((v0.c0) NOT NULL), vt1.c0 COLLATE NOCASE, ((v0.c0)!=(v0.c0)))))) ISNULL));
SELECT DISTINCT * FROM vt1, v0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE (((CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END)|((+ (0.21387974155090383))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (((CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END)|((+ (0.21387974155090383))))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE (((((CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END)|((+ (0.21387974155090383))))) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL v0.c0, vt1.c0 FROM vt0, vt1, v0 GROUP BY v0.c0, vt1.c0;
SELECT v0.c0, vt1.c0 FROM vt0, vt1, v0 GROUP BY v0.c0, vt1.c0 HAVING HEX(CASE TOTAL(v0.c0)  WHEN SUM(v0.c0) THEN GROUP_CONCAT(vt0.c0) ELSE '585712275' END) UNION ALL SELECT v0.c0, vt1.c0 FROM vt0, vt1, v0 GROUP BY v0.c0, vt1.c0 HAVING (NOT (HEX(CASE TOTAL(v0.c0)  WHEN SUM(v0.c0) THEN GROUP_CONCAT(vt0.c0) ELSE '585712275' END))) UNION ALL SELECT v0.c0, vt1.c0 FROM vt0, vt1, v0 GROUP BY v0.c0, vt1.c0 HAVING ((HEX(CASE TOTAL(v0.c0)  WHEN SUM(v0.c0) THEN GROUP_CONCAT(vt0.c0) ELSE '585712275' END)) ISNULL);
SELECT ALL v0.c0, vt1.c0 FROM vt0, vt1, v0 GROUP BY v0.c0, vt1.c0;
SELECT v0.c0, vt1.c0 FROM vt0, vt1, v0 GROUP BY v0.c0, vt1.c0 HAVING HEX(CASE TOTAL(v0.c0)  WHEN SUM(v0.c0) THEN GROUP_CONCAT(vt0.c0) ELSE '585712275' END) UNION ALL SELECT v0.c0, vt1.c0 FROM vt0, vt1, v0 GROUP BY v0.c0, vt1.c0 HAVING (NOT (HEX(CASE TOTAL(v0.c0)  WHEN SUM(v0.c0) THEN GROUP_CONCAT(vt0.c0) ELSE '585712275' END))) UNION ALL SELECT v0.c0, vt1.c0 FROM vt0, vt1, v0 GROUP BY v0.c0, vt1.c0 HAVING ((HEX(CASE TOTAL(v0.c0)  WHEN SUM(v0.c0) THEN GROUP_CONCAT(vt0.c0) ELSE '585712275' END)) ISNULL);
SELECT ALL v0.c0, vt1.c0 FROM vt0, vt1, v0 GROUP BY v0.c0, vt1.c0;
SELECT ALL * FROM vt0;
SELECT ALL * FROM vt0 WHERE (((((vt0.c0) ISNULL))==(((((vt0.c0)OR(vt0.c0)))OR(''))))) UNION ALL SELECT * FROM vt0 WHERE ((NOT (((((vt0.c0) ISNULL))=(((((vt0.c0)OR(vt0.c0)))OR(''))))))) UNION ALL SELECT ALL * FROM vt0 WHERE (((((((vt0.c0) ISNULL))=(((((vt0.c0)OR(vt0.c0)))OR(''))))) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT * FROM v0 CROSS JOIN vt1 ON CASE COALESCE(vt0.c0, v0.c0)  WHEN CAST(vt0.c0 AS BLOB) THEN ((v0.c0) BETWEEN (v0.c0) AND (vt1.c0)) ELSE ((vt1.c0)IS(vt1.c0)) END FULL OUTER JOIN vt0 ON 0.14272084118684936;
SELECT vt1.c0, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0;
SELECT ALL vt1.c0, vt0.c0 FROM vt1, vt0 WHERE (CAST(((((vt0.c0)OR(vt0.c0)))AND(vt1.c0)) AS BLOB)) GROUP BY vt1.c0, vt0.c0 UNION SELECT vt1.c0, vt0.c0 FROM vt1, vt0 WHERE ((NOT (CAST(((((vt0.c0)OR(vt0.c0)))AND(vt1.c0)) AS BLOB)))) GROUP BY vt1.c0, vt0.c0 UNION SELECT ALL vt1.c0, vt0.c0 FROM vt1, vt0 WHERE (((CAST(((((vt0.c0)OR(vt0.c0)))AND(vt1.c0)) AS BLOB)) ISNULL)) GROUP BY vt1.c0, vt0.c0;
SELECT vt1.c0, vt0.c0 FROM vt1, vt0 GROUP BY vt1.c0, vt0.c0;
SELECT vt1.c0 FROM vt0, vt1, v0 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt0, vt1, v0 GROUP BY vt1.c0 HAVING SUM(AVG(COUNT(SUM(x''))) COLLATE BINARY) UNION ALL SELECT vt1.c0 FROM vt0, vt1, v0 GROUP BY vt1.c0 HAVING (NOT (SUM(AVG(COUNT(SUM(x''))) COLLATE BINARY))) UNION ALL SELECT ALL vt1.c0 FROM vt0, vt1, v0 GROUP BY vt1.c0 HAVING ((SUM(AVG(COUNT(SUM(x''))) COLLATE BINARY)) ISNULL);
SELECT * FROM v0, vt1;
SELECT * FROM v0, vt1 WHERE ((~ (((v0.c0) NOTNULL)))) UNION ALL SELECT * FROM v0, vt1 WHERE ((NOT ((~ (((v0.c0) NOTNULL)))))) UNION ALL SELECT ALL * FROM v0, vt1 WHERE ((((~ (((v0.c0) NOTNULL)))) ISNULL));
SELECT * FROM v0, vt1;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (((((vt0.c0)&(x''))) NOT BETWEEN ((vt0.c0 IN (vt0.c0, vt0.c0))) AND (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (((((vt0.c0)&(x''))) NOT BETWEEN ((vt0.c0 IN (vt0.c0, vt0.c0))) AND (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))))) UNION SELECT DISTINCT * FROM vt0 WHERE (((((((vt0.c0)&(x''))) NOT BETWEEN ((vt0.c0 IN (vt0.c0, vt0.c0))) AND (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT v0.c0, vt1.c0 FROM vt0, vt1, v0 GROUP BY v0.c0, vt1.c0;
SELECT v0.c0, vt1.c0 FROM vt0, vt1, v0 WHERE ((vt1.c0 COLLATE NOCASE IN ())) GROUP BY v0.c0, vt1.c0 UNION SELECT ALL v0.c0, vt1.c0 FROM vt0, vt1, v0 WHERE ((NOT ((vt1.c0 COLLATE NOCASE IN ())))) GROUP BY v0.c0, vt1.c0 UNION SELECT v0.c0, vt1.c0 FROM vt0, vt1, v0 WHERE ((((vt1.c0 COLLATE NOCASE IN ())) ISNULL)) GROUP BY v0.c0, vt1.c0;
SELECT v0.c0, vt1.c0 FROM vt0, vt1, v0 GROUP BY v0.c0, vt1.c0;
SELECT ALL vt1.c0 FROM vt1, v0 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1, v0 GROUP BY vt1.c0 HAVING ((MIN(vt1.c0))<(COUNT(MIN(v0.c0)))) UNION ALL SELECT vt1.c0 FROM vt1, v0 GROUP BY vt1.c0 HAVING (NOT (((MIN(vt1.c0))<(COUNT(MIN(v0.c0)))))) UNION ALL SELECT ALL vt1.c0 FROM vt1, v0 GROUP BY vt1.c0 HAVING ((((MIN(vt1.c0))<(COUNT(MIN(v0.c0))))) ISNULL);
SELECT * FROM vt0;
SELECT * FROM vt0 WHERE (CASE WHEN ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)) THEN TRIM(DISTINCT vt0.c0, vt0.c0) END) UNION ALL SELECT ALL * FROM vt0 WHERE ((NOT (CASE WHEN ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)) THEN TRIM(DISTINCT vt0.c0, vt0.c0) END))) UNION ALL SELECT * FROM vt0 WHERE (((CASE WHEN ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)) THEN TRIM(DISTINCT vt0.c0, vt0.c0) END) ISNULL));
SELECT * FROM vt0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE ((((v0.c0 COLLATE RTRIM, x'', v0.c0))<>(('2033028044', (((v0.c0, v0.c0, v0.c0))=((v0.c0, v0.c0, 0xffffffff8f08232b))), v0.c0 COLLATE NOCASE)))) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT ((((v0.c0 COLLATE RTRIM, x'', v0.c0))!=(('2033028044', (((v0.c0, v0.c0, v0.c0))==((v0.c0, v0.c0, 0xffffffff8f08232b))), v0.c0 COLLATE NOCASE)))))) UNION SELECT DISTINCT * FROM v0 WHERE ((((((v0.c0 COLLATE RTRIM, x'', v0.c0))!=(('2033028044', (((v0.c0, v0.c0, v0.c0))==((v0.c0, v0.c0, 0Xffffffff8f08232b))), v0.c0 COLLATE NOCASE)))) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE ((((('233506941')AND(((vt1.c0)>>('0S{k!6*}I')))))AND(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT ((((('233506941')AND(((vt1.c0)>>('0S{k!6*}I')))))AND(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((((((('233506941')AND(((vt1.c0)>>('0S{k!6*}I')))))AND(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt0.c0 FROM vt0, v0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0, v0 GROUP BY vt0.c0 HAVING x'21e3' COLLATE BINARY UNION ALL SELECT ALL vt0.c0 FROM vt0, v0 GROUP BY vt0.c0 HAVING (NOT (x'21e3' COLLATE BINARY)) UNION ALL SELECT ALL vt0.c0 FROM vt0, v0 GROUP BY vt0.c0 HAVING ((x'21e3' COLLATE BINARY) ISNULL);
SELECT vt0.c0 FROM vt0, v0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0, v0 GROUP BY vt0.c0 HAVING x'21e3' COLLATE BINARY UNION ALL SELECT ALL vt0.c0 FROM vt0, v0 GROUP BY vt0.c0 HAVING (NOT (x'21e3' COLLATE BINARY)) UNION ALL SELECT ALL vt0.c0 FROM vt0, v0 GROUP BY vt0.c0 HAVING ((x'21e3' COLLATE BINARY) ISNULL);
SELECT vt0.c0 FROM vt0, v0 GROUP BY vt0.c0;
SELECT v0.c0, vt1.c0 FROM vt1, vt0, v0;
SELECT ALL v0.c0, vt1.c0 FROM vt1, vt0, v0 WHERE (v0.c0) UNION ALL SELECT ALL v0.c0, vt1.c0 FROM vt1, vt0, v0 WHERE ((NOT (v0.c0))) UNION ALL SELECT ALL v0.c0, vt1.c0 FROM vt1, vt0, v0 WHERE (((v0.c0) ISNULL));
SELECT v0.c0, vt1.c0 FROM vt1, vt0, v0;
SELECT DISTINCT vt0.c0, vt1.c0, v0.c0 FROM vt1, v0, vt0;
SELECT DISTINCT vt0.c0, vt1.c0, v0.c0 FROM vt1, v0, vt0 WHERE (((vt0.c0)>(vt1.c0)) COLLATE RTRIM) UNION SELECT DISTINCT vt0.c0, vt1.c0, v0.c0 FROM vt1, v0, vt0 WHERE ((NOT (((vt0.c0)>(vt1.c0)) COLLATE RTRIM))) UNION SELECT DISTINCT vt0.c0, vt1.c0, v0.c0 FROM vt1, v0, vt0 WHERE (((((vt0.c0)>(vt1.c0)) COLLATE RTRIM) ISNULL));
SELECT DISTINCT vt0.c0, vt1.c0, v0.c0 FROM vt1, v0, vt0;
SELECT vt1.c0, vt0.c0 FROM vt0, v0, vt1 GROUP BY vt1.c0, vt0.c0;
SELECT ALL vt1.c0, vt0.c0 FROM vt0, v0, vt1 WHERE (((((v0.c0)-(vt0.c0))) BETWEEN (((vt1.c0) NOTNULL)) AND (((((x'')OR(0x28b0e0b5)))OR(vt0.c0))))) GROUP BY vt1.c0, vt0.c0 UNION SELECT ALL vt1.c0, vt0.c0 FROM vt0, v0, vt1 WHERE ((NOT (((((v0.c0)-(vt0.c0))) BETWEEN (((vt1.c0) NOTNULL)) AND (((((x'')OR(0X28b0e0b5)))OR(vt0.c0))))))) GROUP BY vt1.c0, vt0.c0 UNION SELECT vt1.c0, vt0.c0 FROM vt0, v0, vt1 WHERE (((((((v0.c0)-(vt0.c0))) BETWEEN (((vt1.c0) NOTNULL)) AND (((((x'')OR(0X28b0e0b5)))OR(vt0.c0))))) ISNULL)) GROUP BY vt1.c0, vt0.c0;
SELECT vt1.c0, vt0.c0 FROM vt0, v0, vt1 GROUP BY vt1.c0, vt0.c0;
SELECT ALL v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0;
SELECT ALL v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0 HAVING TOTAL(COUNT(*)) UNION ALL SELECT v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0 HAVING (NOT (TOTAL(COUNT(*)))) UNION ALL SELECT v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0 HAVING ((TOTAL(COUNT(*))) ISNULL);
SELECT ALL vt1.c0, v0.c0 FROM vt1, v0;
SELECT vt1.c0, v0.c0 FROM vt1, v0 WHERE (((((v0.c0)/(vt1.c0))) NOTNULL)) UNION ALL SELECT ALL vt1.c0, v0.c0 FROM vt1, v0 WHERE ((NOT (((((v0.c0)/(vt1.c0))) NOTNULL)))) UNION ALL SELECT vt1.c0, v0.c0 FROM vt1, v0 WHERE (((((((v0.c0)/(vt1.c0))) NOTNULL)) ISNULL));
SELECT ALL vt1.c0, v0.c0 FROM vt1, v0;
SELECT DISTINCT vt0.c0, v0.c0 FROM v0, vt1 NATURAL JOIN vt0;
SELECT DISTINCT vt0.c0, v0.c0 FROM v0, vt1 NATURAL JOIN vt0 WHERE (GLOB(((vt0.c0) BETWEEN (vt1.c0) AND (vt1.c0)), (((vt1.c0)) BETWEEN ((vt0.c0)) AND ((v0.c0))))) UNION SELECT DISTINCT vt0.c0, v0.c0 FROM v0, vt1 NOT INDEXED NATURAL JOIN vt0 WHERE ((NOT (GLOB(((vt0.c0) BETWEEN (vt1.c0) AND (vt1.c0)), (((vt1.c0)) BETWEEN ((vt0.c0)) AND ((v0.c0))))))) UNION SELECT DISTINCT vt0.c0, v0.c0 FROM v0, vt1 NATURAL JOIN vt0 WHERE (((GLOB(((vt0.c0) BETWEEN (vt1.c0) AND (vt1.c0)), (((vt1.c0)) BETWEEN ((vt0.c0)) AND ((v0.c0))))) ISNULL));
SELECT DISTINCT vt0.c0, v0.c0 FROM v0, vt1 NATURAL JOIN vt0;
SELECT vt1.c0, v0.c0, vt0.c0 FROM vt1, v0 RIGHT OUTER JOIN vt0 ON CAST(((((vt0.c0)OR(vt0.c0)))OR(v0.c0)) AS BLOB) GROUP BY vt1.c0, v0.c0, vt0.c0;
SELECT vt1.c0, v0.c0, vt0.c0 FROM vt1, v0 RIGHT OUTER JOIN vt0 ON CAST(((((vt0.c0)OR(vt0.c0)))OR(v0.c0)) AS BLOB) WHERE (CAST(((v0.c0)AND(vt0.c0)) AS REAL)) GROUP BY vt1.c0, v0.c0, vt0.c0 UNION SELECT ALL vt1.c0, v0.c0, vt0.c0 FROM vt1, v0 RIGHT OUTER JOIN vt0 ON CAST(((((vt0.c0)OR(vt0.c0)))OR(v0.c0)) AS BLOB) WHERE ((NOT (CAST(((v0.c0)AND(vt0.c0)) AS REAL)))) GROUP BY vt1.c0, v0.c0, vt0.c0 UNION SELECT vt1.c0, v0.c0, vt0.c0 FROM vt1, v0 RIGHT OUTER JOIN vt0 ON CAST(((((vt0.c0)OR(vt0.c0)))OR(v0.c0)) AS BLOB) WHERE (((CAST(((v0.c0)AND(vt0.c0)) AS REAL)) ISNULL)) GROUP BY vt1.c0, v0.c0, vt0.c0;
SELECT vt1.c0, v0.c0, vt0.c0 FROM vt1, v0 RIGHT OUTER JOIN vt0 ON CAST(((((vt0.c0)OR(vt0.c0)))OR(v0.c0)) AS BLOB) GROUP BY vt1.c0, v0.c0, vt0.c0;
SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 NATURAL JOIN vt1 GROUP BY vt0.c0, v0.c0;
SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 NATURAL JOIN vt1 GROUP BY vt0.c0, v0.c0 HAVING vt1.c0 UNION ALL SELECT vt0.c0, v0.c0 FROM vt0, v0 NATURAL JOIN vt1 GROUP BY vt0.c0, v0.c0 HAVING (NOT (vt1.c0)) UNION ALL SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 NATURAL JOIN vt1 GROUP BY vt0.c0, v0.c0 HAVING ((vt1.c0) ISNULL);
SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 NATURAL JOIN vt1 GROUP BY vt0.c0, v0.c0;
SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 NATURAL JOIN vt1 GROUP BY vt0.c0, v0.c0 HAVING vt1.c0 UNION ALL SELECT vt0.c0, v0.c0 FROM vt0, v0 NATURAL JOIN vt1 GROUP BY vt0.c0, v0.c0 HAVING (NOT (vt1.c0)) UNION ALL SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 NATURAL JOIN vt1 GROUP BY vt0.c0, v0.c0 HAVING ((vt1.c0) ISNULL);
SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 NATURAL JOIN vt1 GROUP BY vt0.c0, v0.c0;
SELECT ALL MIN(v0.c0 COLLATE BINARY) FROM vt0, v0;
SELECT v0.c0 FROM vt1, vt0 CROSS JOIN v0 ON ((((vt0.c0)AND(vt1.c0)))OR(v0.c0)) COLLATE RTRIM;
SELECT ALL v0.c0 FROM vt1, vt0 CROSS JOIN v0 ON ((((vt0.c0)AND(vt1.c0)))OR(v0.c0)) COLLATE RTRIM WHERE (CASE WHEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE v0.c0 END THEN '' END) UNION ALL SELECT v0.c0 FROM vt1, vt0 CROSS JOIN v0 ON ((((vt0.c0)AND(vt1.c0)))OR(v0.c0)) COLLATE RTRIM WHERE ((NOT (CASE WHEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE v0.c0 END THEN '' END))) UNION ALL SELECT v0.c0 FROM vt1, vt0 CROSS JOIN v0 ON ((((vt0.c0)AND(vt1.c0)))OR(v0.c0)) COLLATE RTRIM WHERE (((CASE WHEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE v0.c0 END THEN '' END) ISNULL));
SELECT v0.c0 FROM vt1, vt0 CROSS JOIN v0 ON ((((vt0.c0)AND(vt1.c0)))OR(v0.c0)) COLLATE RTRIM;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (((((vt1.c0)OR(((vt1.c0)/(vt1.c0)))))AND((+ (vt1.c0))))) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (((((vt1.c0)OR(((vt1.c0)/(vt1.c0)))))AND((+ (vt1.c0))))))) UNION SELECT DISTINCT * FROM vt1 WHERE (((((((vt1.c0)OR(((vt1.c0)/(vt1.c0)))))AND((+ (vt1.c0))))) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE (TOTAL_CHANGES()) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (TOTAL_CHANGES()))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((TOTAL_CHANGES()) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING COUNT(*) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING COUNT(*) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL * FROM vt0, vt1, v0;
SELECT * FROM vt0, vt1, v0 WHERE (((((v0.c0)AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)))))OR(v0.c0))) UNION ALL SELECT * FROM vt0, vt1, v0 WHERE ((NOT (((((v0.c0)AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)))))OR(v0.c0))))) UNION ALL SELECT ALL * FROM vt0, vt1, v0 WHERE (((((((v0.c0)AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)))))OR(v0.c0))) ISNULL));
SELECT ALL * FROM vt0, vt1, v0;
SELECT DISTINCT v0.c0, vt0.c0 FROM v0, vt0;
SELECT DISTINCT v0.c0, vt0.c0 FROM v0, vt0 WHERE (((vt0.c0 COLLATE BINARY) BETWEEN (((vt0.c0) ISNULL)) AND (((((((((((((vt0.c0)AND(v0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0))))) UNION SELECT DISTINCT v0.c0, vt0.c0 FROM v0, vt0 WHERE ((NOT (((vt0.c0 COLLATE BINARY) BETWEEN (((vt0.c0) ISNULL)) AND (((((((((((((vt0.c0)AND(v0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0))))))) UNION SELECT DISTINCT v0.c0, vt0.c0 FROM v0, vt0 WHERE (((((vt0.c0 COLLATE BINARY) BETWEEN (((vt0.c0) ISNULL)) AND (((((((((((((vt0.c0)AND(v0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0))))) ISNULL));
SELECT DISTINCT v0.c0, vt0.c0 FROM v0, vt0;
SELECT vt1.c0, vt0.c0, v0.c0 FROM v0 INNER JOIN vt1 ON '2108153542' COLLATE NOCASE INNER JOIN vt0 ON ((CAST(vt0.c0 AS REAL)) NOT BETWEEN (((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(v0.c0))) AND (CASE WHEN v0.c0 THEN v0.c0 END)) GROUP BY vt1.c0, vt0.c0, v0.c0;
SELECT vt1.c0, vt0.c0, v0.c0 FROM v0 INNER JOIN vt1 ON '2108153542' COLLATE NOCASE INNER JOIN vt0 ON ((CAST(vt0.c0 AS REAL)) NOT BETWEEN (((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(v0.c0))) AND (CASE WHEN v0.c0 THEN v0.c0 END)) WHERE (vt1.c0) GROUP BY vt1.c0, vt0.c0, v0.c0 UNION SELECT vt1.c0, vt0.c0, v0.c0 FROM v0 INNER JOIN vt1 ON '2108153542' COLLATE NOCASE INNER JOIN vt0 ON ((CAST(vt0.c0 AS REAL)) NOT BETWEEN (((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(v0.c0))) AND (CASE WHEN v0.c0 THEN v0.c0 END)) WHERE ((NOT (vt1.c0))) GROUP BY vt1.c0, vt0.c0, v0.c0 UNION SELECT ALL vt1.c0, vt0.c0, v0.c0 FROM v0 INNER JOIN vt1 ON '2108153542' COLLATE NOCASE INNER JOIN vt0 ON ((CAST(vt0.c0 AS REAL)) NOT BETWEEN (((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(v0.c0))) AND (CASE WHEN v0.c0 THEN v0.c0 END)) WHERE (((vt1.c0) ISNULL)) GROUP BY vt1.c0, vt0.c0, v0.c0;
SELECT vt1.c0, vt0.c0, v0.c0 FROM v0 INNER JOIN vt1 ON '2108153542' COLLATE NOCASE INNER JOIN vt0 ON ((CAST(vt0.c0 AS REAL)) NOT BETWEEN (((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(v0.c0))) AND (CASE WHEN v0.c0 THEN v0.c0 END)) GROUP BY vt1.c0, vt0.c0, v0.c0;
SELECT ALL v0.c0 FROM vt0, v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM vt0, v0 NOT INDEXED GROUP BY v0.c0 HAVING (COUNT(vt0.c0) IN (COUNT(v0.c0))) UNION ALL SELECT ALL v0.c0 FROM vt0, v0 GROUP BY v0.c0 HAVING (NOT ((COUNT(vt0.c0) IN (COUNT(v0.c0))))) UNION ALL SELECT ALL v0.c0 FROM vt0, v0 NOT INDEXED GROUP BY v0.c0 HAVING (((COUNT(vt0.c0) IN (COUNT(v0.c0)))) ISNULL);
SELECT ALL v0.c0 FROM vt0, v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM vt0, v0 NOT INDEXED GROUP BY v0.c0 HAVING (COUNT(vt0.c0) IN (COUNT(v0.c0))) UNION ALL SELECT ALL v0.c0 FROM vt0, v0 GROUP BY v0.c0 HAVING (NOT ((COUNT(vt0.c0) IN (COUNT(v0.c0))))) UNION ALL SELECT ALL v0.c0 FROM vt0, v0 NOT INDEXED GROUP BY v0.c0 HAVING (((COUNT(vt0.c0) IN (COUNT(v0.c0)))) ISNULL);
SELECT ALL v0.c0 FROM vt0, v0 GROUP BY v0.c0;
SELECT * FROM vt1;
SELECT * FROM vt1 WHERE (((((vt1.c0)&('uOr8譛')))<<(CAST(vt1.c0 AS INTEGER)))) UNION ALL SELECT ALL * FROM vt1 WHERE ((NOT (((((vt1.c0)&('uOr8譛')))<<(CAST(vt1.c0 AS INTEGER)))))) UNION ALL SELECT ALL * FROM vt1 WHERE (((((((vt1.c0)&('uOr8譛')))<<(CAST(vt1.c0 AS INTEGER)))) ISNULL));
SELECT * FROM vt1;
SELECT DISTINCT vt0.c0 FROM vt1, vt0;
SELECT DISTINCT vt0.c0 FROM vt1, vt0 WHERE ((((((- (vt1.c0)))AND(((vt1.c0)*(vt0.c0)))))AND(((((vt1.c0)OR(vt1.c0)))AND(vt1.c0))))) UNION SELECT DISTINCT vt0.c0 FROM vt1, vt0 WHERE ((NOT ((((((- (vt1.c0)))AND(((vt1.c0)*(vt0.c0)))))AND(((((vt1.c0)OR(vt1.c0)))AND(vt1.c0))))))) UNION SELECT DISTINCT vt0.c0 FROM vt1, vt0 WHERE ((((((((- (vt1.c0)))AND(((vt1.c0)*(vt0.c0)))))AND(((((vt1.c0)OR(vt1.c0)))AND(vt1.c0))))) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt1, vt0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (((CAST(v0.c0 AS BLOB))IS NOT(((NULL) IS TRUE)))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT (((CAST(v0.c0 AS BLOB))IS NOT(((NULL) IS TRUE)))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE (((((CAST(v0.c0 AS BLOB))IS NOT(((NULL) IS TRUE)))) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c0;
SELECT ALL vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c0 HAVING AVG(((SUM(SUM(AVG(vt1.c0)))) NOTNULL)) UNION ALL SELECT ALL vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c0 HAVING (NOT (AVG(((SUM(SUM(AVG(vt1.c0)))) NOTNULL)))) UNION ALL SELECT vt1.c0, vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0, vt0.c0 HAVING ((AVG(((SUM(SUM(AVG(vt1.c0)))) NOTNULL))) ISNULL);
SELECT * FROM vt0 RIGHT OUTER JOIN vt1 ON (((((vt0.c0, vt1.c0, vt0.c0, vt0.c0, vt0.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt0.c0, vt1.c0, x'', vt1.c0, vt1.c0)) AND ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt1.c0, vt0.c0, vt1.c0)))) ISNULL);
SELECT * FROM vt0 RIGHT OUTER JOIN vt1 ON (((((vt0.c0, vt1.c0, vt0.c0, vt0.c0, vt0.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt0.c0, vt1.c0, x'', vt1.c0, vt1.c0)) AND ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt1.c0, vt0.c0, vt1.c0)))) ISNULL) WHERE (load_extension((((vt0.c0))=((vt1.c0))))) UNION ALL SELECT ALL * FROM vt0 RIGHT OUTER JOIN vt1 ON (((((vt0.c0, vt1.c0, vt0.c0, vt0.c0, vt0.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt0.c0, vt1.c0, x'', vt1.c0, vt1.c0)) AND ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt1.c0, vt0.c0, vt1.c0)))) ISNULL) WHERE ((NOT (load_extension((((vt0.c0))=((vt1.c0))))))) UNION ALL SELECT * FROM vt0 RIGHT OUTER JOIN vt1 ON (((((vt0.c0, vt1.c0, vt0.c0, vt0.c0, vt0.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt0.c0, vt1.c0, x'', vt1.c0, vt1.c0)) AND ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt1.c0, vt0.c0, vt1.c0)))) ISNULL) WHERE (((load_extension((((vt0.c0))=((vt1.c0))))) ISNULL));
SELECT DISTINCT v0.c0, vt1.c0 FROM v0 RIGHT OUTER JOIN vt1 ON (((((((((((vt0.c0)AND(vt1.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(v0.c0)), '-2044314636' COLLATE RTRIM, ((vt1.c0) ISNULL)))>=((((v0.c0)<>(vt0.c0)), NULL, v0.c0))) RIGHT OUTER JOIN vt0 ON (((vt0.c0 IN (vt1.c0))) NOTNULL);
SELECT vt1.c0 FROM vt1, v0, vt0 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1, v0, vt0 WHERE (((((((vt0.c0)>(vt0.c0)))AND(x'80f7')))OR(((((((((((((vt0.c0)AND(vt0.c0)))AND(v0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(v0.c0)))AND(vt1.c0))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1, v0, vt0 WHERE ((NOT (((((((vt0.c0)>(vt0.c0)))AND(x'80f7')))OR(((((((((((((vt0.c0)AND(vt0.c0)))AND(v0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(v0.c0)))AND(vt1.c0))))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1, v0, vt0 WHERE (((((((((vt0.c0)>(vt0.c0)))AND(x'80f7')))OR(((((((((((((vt0.c0)AND(vt0.c0)))AND(v0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(v0.c0)))AND(vt1.c0))))) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1, v0, vt0 GROUP BY vt1.c0;
SELECT ALL vt0.c0, vt1.c0 FROM vt1, v0, vt0 GROUP BY vt0.c0, vt1.c0;
SELECT ALL vt0.c0, vt1.c0 FROM vt1, v0, vt0 GROUP BY vt0.c0, vt1.c0 HAVING AVG(SUM(vt1.c0)) UNION ALL SELECT vt0.c0, vt1.c0 FROM vt1, v0, vt0 GROUP BY vt0.c0, vt1.c0 HAVING (NOT (AVG(SUM(vt1.c0)))) UNION ALL SELECT ALL vt0.c0, vt1.c0 FROM vt1, v0, vt0 GROUP BY vt0.c0, vt1.c0 HAVING ((AVG(SUM(vt1.c0))) ISNULL);
SELECT ALL vt0.c0, v0.c0 FROM vt0, v0;
SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 WHERE ((((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, v0.c0)) AND ((v0.c0, v0.c0, vt0.c0))) COLLATE NOCASE) UNION ALL SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 WHERE ((NOT ((((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, v0.c0)) AND ((v0.c0, v0.c0, vt0.c0))) COLLATE NOCASE))) UNION ALL SELECT ALL vt0.c0, v0.c0 FROM vt0, v0 WHERE ((((((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, v0.c0)) AND ((v0.c0, v0.c0, vt0.c0))) COLLATE NOCASE) ISNULL));
SELECT ALL vt0.c0, v0.c0 FROM vt0, v0;
SELECT DISTINCT * FROM vt0, v0 LEFT OUTER JOIN vt1 ON (((vt1.c0 IN ())) NOTNULL);
SELECT DISTINCT * FROM vt0, v0 LEFT OUTER JOIN vt1 ON (((vt1.c0 IN ())) NOTNULL) WHERE (CASE v0.c0  WHEN v0.c0 THEN '-2093252746' ELSE ((v0.c0) NOT NULL) END) UNION SELECT DISTINCT * FROM vt0, v0 LEFT OUTER JOIN vt1 ON (((vt1.c0 IN ())) NOTNULL) WHERE ((NOT (CASE v0.c0  WHEN v0.c0 THEN '-2093252746' ELSE ((v0.c0) NOT NULL) END))) UNION SELECT DISTINCT * FROM vt0, v0 LEFT OUTER JOIN vt1 ON (((vt1.c0 IN ())) NOTNULL) WHERE (((CASE v0.c0  WHEN v0.c0 THEN '-2093252746' ELSE ((v0.c0) NOT NULL) END) ISNULL));
SELECT DISTINCT * FROM vt0, v0 LEFT OUTER JOIN vt1 ON (((vt1.c0 IN ())) NOTNULL);
SELECT ALL vt1.c0, vt0.c0, v0.c0 FROM vt0, vt1 INNER JOIN v0 ON NULL GROUP BY vt1.c0, vt0.c0, v0.c0;
SELECT ALL vt1.c0, vt0.c0, v0.c0 FROM vt0, vt1 INNER JOIN v0 ON NULL WHERE (((((vt1.c0)AND((NOT (v0.c0)))))OR((vt0.c0 IN ())))) GROUP BY vt1.c0, vt0.c0, v0.c0 UNION SELECT ALL vt1.c0, vt0.c0, v0.c0 FROM vt0, vt1 INNER JOIN v0 ON NULL WHERE ((NOT (((((vt1.c0)AND((NOT (v0.c0)))))OR((vt0.c0 IN ())))))) GROUP BY vt1.c0, vt0.c0, v0.c0 UNION SELECT vt1.c0, vt0.c0, v0.c0 FROM vt0, vt1 INNER JOIN v0 ON NULL WHERE (((((((vt1.c0)AND((NOT (v0.c0)))))OR((vt0.c0 IN ())))) ISNULL)) GROUP BY vt1.c0, vt0.c0, v0.c0;
SELECT ALL vt1.c0, vt0.c0, v0.c0 FROM vt0, vt1 INNER JOIN v0 ON NULL GROUP BY vt1.c0, vt0.c0, v0.c0;
SELECT v0.c0 FROM vt1, v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM vt1, v0 GROUP BY v0.c0 HAVING ((MIN(0x49d1f1b1)) BETWEEN (TOTAL(AVG(vt1.c0))) AND (TOTAL(v0.c0))) UNION ALL SELECT v0.c0 FROM vt1, v0 GROUP BY v0.c0 HAVING (NOT (((MIN(0x49d1f1b1)) BETWEEN (TOTAL(AVG(vt1.c0))) AND (TOTAL(v0.c0))))) UNION ALL SELECT v0.c0 FROM vt1, v0 GROUP BY v0.c0 HAVING ((((MIN(0x49d1f1b1)) BETWEEN (TOTAL(AVG(vt1.c0))) AND (TOTAL(v0.c0)))) ISNULL);
SELECT vt0.c0 FROM vt0, vt1;
SELECT vt0.c0 FROM vt0, vt1 WHERE (CAST((vt0.c0 IN ()) AS TEXT)) UNION ALL SELECT ALL vt0.c0 FROM vt0, vt1 WHERE ((NOT (CAST((vt0.c0 IN ()) AS TEXT)))) UNION ALL SELECT ALL vt0.c0 FROM vt0, vt1 WHERE (((CAST((vt0.c0 IN ()) AS TEXT)) ISNULL));
SELECT vt0.c0 FROM vt0, vt1;
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE (vt0.c0) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT (vt0.c0))) UNION SELECT DISTINCT * FROM vt0 WHERE (((vt0.c0) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (((vt0.c0 IN ()) IN (TYPEOF(vt0.c0)))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT (((vt0.c0 IN ()) IN (TYPEOF(vt0.c0)))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE (((((vt0.c0 IN ()) IN (TYPEOF(vt0.c0)))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 NOT INDEXED GROUP BY v0.c0 HAVING COUNT(CASE v0.c0  WHEN v0.c0 THEN MAX(v0.c0) WHEN GROUP_CONCAT(COUNT(*)) THEN GROUP_CONCAT(MIN(AVG(AVG(v0.c0)))) WHEN MAX(v0.c0) THEN v0.c0 WHEN MAX(SUM(v0.c0)) THEN NULL WHEN MAX(TOTAL(v0.c0)) THEN SUM(MIN(v0.c0)) ELSE SUM(v0.c0) END) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (COUNT(CASE v0.c0  WHEN v0.c0 THEN MAX(v0.c0) WHEN GROUP_CONCAT(COUNT(*)) THEN GROUP_CONCAT(MIN(AVG(AVG(v0.c0)))) WHEN MAX(v0.c0) THEN v0.c0 WHEN MAX(SUM(v0.c0)) THEN NULL WHEN MAX(TOTAL(v0.c0)) THEN SUM(MIN(v0.c0)) ELSE SUM(v0.c0) END))) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((COUNT(CASE v0.c0  WHEN v0.c0 THEN MAX(v0.c0) WHEN GROUP_CONCAT(COUNT(*)) THEN GROUP_CONCAT(MIN(AVG(AVG(v0.c0)))) WHEN MAX(v0.c0) THEN v0.c0 WHEN MAX(SUM(v0.c0)) THEN NULL WHEN MAX(TOTAL(v0.c0)) THEN SUM(MIN(v0.c0)) ELSE SUM(v0.c0) END)) ISNULL);
SELECT ALL * FROM vt1;
SELECT * FROM vt1 WHERE (((((((((((vt1.c0)&(vt1.c0)))OR(((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))))AND(vt1.c0 COLLATE RTRIM)))AND(vt1.c0)))AND(vt1.c0))) UNION ALL SELECT * FROM vt1 WHERE ((NOT (((((((((((vt1.c0)&(vt1.c0)))OR(((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))))AND(vt1.c0 COLLATE RTRIM)))AND(vt1.c0)))AND(vt1.c0))))) UNION ALL SELECT * FROM vt1 WHERE (((((((((((((vt1.c0)&(vt1.c0)))OR(((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))))AND(vt1.c0 COLLATE RTRIM)))AND(vt1.c0)))AND(vt1.c0))) ISNULL));
SELECT ALL * FROM vt1;
SELECT DISTINCT vt1.c0 FROM v0, vt1;
SELECT DISTINCT vt1.c0 FROM v0, vt1 WHERE (x'') UNION SELECT DISTINCT vt1.c0 FROM v0, vt1 WHERE ((NOT (x''))) UNION SELECT DISTINCT vt1.c0 FROM v0, vt1 WHERE (((x'') ISNULL));
SELECT DISTINCT vt1.c0 FROM v0, vt1;
SELECT ALL vt1.c0, vt0.c0 FROM vt0 CROSS JOIN vt1 ON (((((vt0.c0) BETWEEN (NULL) AND (vt0.c0))))>=(((- (vt0.c0))))) GROUP BY vt1.c0, vt0.c0;
SELECT ALL vt1.c0, vt0.c0 FROM vt0 CROSS JOIN vt1 ON (((((vt0.c0) BETWEEN (NULL) AND (vt0.c0))))>=(((- (vt0.c0))))) WHERE (((CAST(vt1.c0 AS INTEGER)) BETWEEN (vt0.c0) AND (((vt0.c0) BETWEEN (vt1.c0) AND (vt0.c0))))) GROUP BY vt1.c0, vt0.c0 UNION SELECT ALL vt1.c0, vt0.c0 FROM vt0 CROSS JOIN vt1 ON (((((vt0.c0) BETWEEN (NULL) AND (vt0.c0))))>=(((- (vt0.c0))))) WHERE ((NOT (((CAST(vt1.c0 AS INTEGER)) BETWEEN (vt0.c0) AND (((vt0.c0) BETWEEN (vt1.c0) AND (vt0.c0))))))) GROUP BY vt1.c0, vt0.c0 UNION SELECT ALL vt1.c0, vt0.c0 FROM vt0 CROSS JOIN vt1 ON (((((vt0.c0) BETWEEN (NULL) AND (vt0.c0))))>=(((- (vt0.c0))))) WHERE (((((CAST(vt1.c0 AS INTEGER)) BETWEEN (vt0.c0) AND (((vt0.c0) BETWEEN (vt1.c0) AND (vt0.c0))))) ISNULL)) GROUP BY vt1.c0, vt0.c0;
SELECT ALL vt1.c0, vt0.c0 FROM vt0 CROSS JOIN vt1 ON (((((vt0.c0) BETWEEN (NULL) AND (vt0.c0))))>=(((- (vt0.c0))))) GROUP BY vt1.c0, vt0.c0;
SELECT v0.c0 FROM vt0, v0 INNER JOIN vt1 ON (NULL COLLATE RTRIM IN ()) GROUP BY v0.c0;
SELECT v0.c0 FROM vt0, v0 INNER JOIN vt1 ON (NULL COLLATE RTRIM IN ()) GROUP BY v0.c0 HAVING HEX(DISTINCT AVG(vt1.c0)) UNION ALL SELECT v0.c0 FROM vt0, v0 INNER JOIN vt1 ON (NULL COLLATE RTRIM IN ()) GROUP BY v0.c0 HAVING (NOT (HEX(DISTINCT AVG(vt1.c0)))) UNION ALL SELECT v0.c0 FROM vt0, v0 INNER JOIN vt1 ON (NULL COLLATE RTRIM IN ()) GROUP BY v0.c0 HAVING ((HEX(DISTINCT AVG(vt1.c0))) ISNULL);
SELECT v0.c0 FROM vt0, v0 INNER JOIN vt1 ON (NULL COLLATE RTRIM IN ()) GROUP BY v0.c0;
SELECT v0.c0 FROM vt0, v0 INNER JOIN vt1 ON (NULL COLLATE RTRIM IN ()) GROUP BY v0.c0 HAVING HEX(DISTINCT AVG(vt1.c0)) UNION ALL SELECT v0.c0 FROM vt0, v0 INNER JOIN vt1 ON (NULL COLLATE RTRIM IN ()) GROUP BY v0.c0 HAVING (NOT (HEX(DISTINCT AVG(vt1.c0)))) UNION ALL SELECT v0.c0 FROM vt0, v0 INNER JOIN vt1 ON (NULL COLLATE RTRIM IN ()) GROUP BY v0.c0 HAVING ((HEX(DISTINCT AVG(vt1.c0))) ISNULL);
SELECT v0.c0 FROM vt0, v0 INNER JOIN vt1 ON (NULL COLLATE RTRIM IN ()) GROUP BY v0.c0;
SELECT ALL * FROM vt0;
SELECT * FROM vt0 WHERE (vt0.c0) UNION ALL SELECT * FROM vt0 WHERE ((NOT (vt0.c0))) UNION ALL SELECT ALL * FROM vt0 WHERE (((vt0.c0) ISNULL));
SELECT ALL * FROM vt0;
SELECT DISTINCT v0.c0 FROM v0, vt0, vt1;
SELECT DISTINCT v0.c0 FROM v0, vt0, vt1 WHERE (((vt1.c0)!=(vt0.c0)) COLLATE BINARY) UNION SELECT DISTINCT v0.c0 FROM v0, vt0, vt1 WHERE ((NOT (((vt1.c0)<>(vt0.c0)) COLLATE BINARY))) UNION SELECT DISTINCT v0.c0 FROM v0, vt0, vt1 WHERE (((((vt1.c0)<>(vt0.c0)) COLLATE BINARY) ISNULL));
SELECT DISTINCT v0.c0 FROM v0, vt0, vt1;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE ((((((vt0.c0) BETWEEN ('') AND (vt0.c0)), ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)), (('0.2366481207276806') BETWEEN (vt0.c0) AND (vt0.c0))))>=((CAST('795046312' AS NUMERIC), ((vt0.c0)/(vt0.c0)), (vt0.c0 IN ()))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT ((((((vt0.c0) BETWEEN ('') AND (vt0.c0)), ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)), (('0.2366481207276806') BETWEEN (vt0.c0) AND (vt0.c0))))>=((CAST('795046312' AS NUMERIC), ((vt0.c0)/(vt0.c0)), (vt0.c0 IN ()))))))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((((((((vt0.c0) BETWEEN ('') AND (vt0.c0)), ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)), (('0.2366481207276806') BETWEEN (vt0.c0) AND (vt0.c0))))>=((CAST('795046312' AS NUMERIC), ((vt0.c0)/(vt0.c0)), (vt0.c0 IN ()))))) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt1.c0 FROM vt0, vt1, v0 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt0, vt1, v0 GROUP BY vt1.c0 HAVING CASE SUM(vt1.c0)  WHEN (v0.c0 IN ()) THEN GROUP_CONCAT(vt0.c0) WHEN ((vt1.c0)>=(vt0.c0)) THEN ((v0.c0) BETWEEN (vt0.c0) AND (MIN(vt1.c0))) WHEN SUM(GROUP_CONCAT(vt1.c0)) THEN TOTAL(COUNT(vt0.c0)) ELSE ((vt0.c0) IS FALSE) END UNION ALL SELECT ALL vt1.c0 FROM vt0, vt1, v0 GROUP BY vt1.c0 HAVING (NOT (CASE SUM(vt1.c0)  WHEN (v0.c0 IN ()) THEN GROUP_CONCAT(vt0.c0) WHEN ((vt1.c0)>=(vt0.c0)) THEN ((v0.c0) BETWEEN (vt0.c0) AND (MIN(vt1.c0))) WHEN SUM(GROUP_CONCAT(vt1.c0)) THEN TOTAL(COUNT(vt0.c0)) ELSE ((vt0.c0) IS FALSE) END)) UNION ALL SELECT ALL vt1.c0 FROM vt0, vt1, v0 GROUP BY vt1.c0 HAVING ((CASE SUM(vt1.c0)  WHEN (v0.c0 IN ()) THEN GROUP_CONCAT(vt0.c0) WHEN ((vt1.c0)>=(vt0.c0)) THEN ((v0.c0) BETWEEN (vt0.c0) AND (MIN(vt1.c0))) WHEN SUM(GROUP_CONCAT(vt1.c0)) THEN TOTAL(COUNT(vt0.c0)) ELSE ((vt0.c0) IS FALSE) END) ISNULL);
SELECT * FROM vt1, v0;
SELECT * FROM vt1, v0 WHERE (LOWER(((((vt1.c0)AND(vt1.c0)))AND(v0.c0)))) UNION ALL SELECT ALL * FROM vt1, v0 WHERE ((NOT (LOWER(((((vt1.c0)AND(vt1.c0)))AND(v0.c0)))))) UNION ALL SELECT ALL * FROM vt1, v0 WHERE (((LOWER(((((vt1.c0)AND(vt1.c0)))AND(v0.c0)))) ISNULL));
SELECT * FROM vt1, v0;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE (x'') UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT (x''))) UNION SELECT DISTINCT * FROM vt1 WHERE (((x'') ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT vt0.c0 FROM vt1, vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt1, vt0 WHERE (((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) COLLATE BINARY) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt1, vt0 WHERE ((NOT (((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) COLLATE BINARY))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt1, vt0 WHERE (((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) COLLATE BINARY) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt1, vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((SUM(MIN(vt0.c0)))=(vt0.c0)) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (((SUM(MIN(vt0.c0)))=(vt0.c0)))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((SUM(MIN(vt0.c0)))==(vt0.c0))) ISNULL);
SELECT ALL v0.c0, vt0.c0, vt1.c0 FROM vt1 INNER JOIN vt0 ON LIKELY(LIKELIHOOD(v0.c0, 0.18080948026142696)) LEFT OUTER JOIN v0 ON CASE vt1.c0  WHEN vt0.c0 THEN v0.c0 ELSE vt1.c0 END COLLATE NOCASE;
SELECT v0.c0, vt0.c0, vt1.c0 FROM vt1 INNER JOIN vt0 ON LIKELY(LIKELIHOOD(v0.c0, 0.18080948026142696)) LEFT OUTER JOIN v0 ON CASE vt1.c0  WHEN vt0.c0 THEN v0.c0 ELSE vt1.c0 END COLLATE NOCASE WHERE (NULL) UNION ALL SELECT ALL v0.c0, vt0.c0, vt1.c0 FROM vt1 INNER JOIN vt0 ON LIKELY(LIKELIHOOD(v0.c0, 0.18080948026142696)) LEFT OUTER JOIN v0 ON CASE vt1.c0  WHEN vt0.c0 THEN v0.c0 ELSE vt1.c0 END COLLATE NOCASE WHERE ((NOT (NULL))) UNION ALL SELECT v0.c0, vt0.c0, vt1.c0 FROM vt1 INNER JOIN vt0 ON LIKELY(LIKELIHOOD(v0.c0, 0.18080948026142696)) LEFT OUTER JOIN v0 ON CASE vt1.c0  WHEN vt0.c0 THEN v0.c0 ELSE vt1.c0 END COLLATE NOCASE WHERE (((NULL) ISNULL));
SELECT ALL v0.c0, vt0.c0, vt1.c0 FROM vt1 INNER JOIN vt0 ON LIKELY(LIKELIHOOD(v0.c0, 0.18080948026142696)) LEFT OUTER JOIN v0 ON CASE vt1.c0  WHEN vt0.c0 THEN v0.c0 ELSE vt1.c0 END COLLATE NOCASE;
SELECT DISTINCT * FROM vt1;
SELECT DISTINCT * FROM vt1 WHERE ((((vt1.c0) ISNULL) IN ())) UNION SELECT DISTINCT * FROM vt1 WHERE ((NOT ((((vt1.c0) ISNULL) IN ())))) UNION SELECT DISTINCT * FROM vt1 WHERE ((((((vt1.c0) ISNULL) IN ())) ISNULL));
SELECT DISTINCT * FROM vt1;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE ((((vt1.c0)IS(vt1.c0)) IN ())) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT ((((vt1.c0)IS(vt1.c0)) IN ())))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((((((vt1.c0)IS(vt1.c0)) IN ())) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt0.c0 FROM vt0, vt1 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0, vt1 GROUP BY vt0.c0 HAVING MIN(((((((((vt0.c0)AND(MAX(TOTAL(vt1.c0)))))AND(COUNT(*))))AND(GROUP_CONCAT(MAX(MAX(COUNT(*)))))))AND(AVG(vt1.c0)))) UNION ALL SELECT vt0.c0 FROM vt0, vt1 GROUP BY vt0.c0 HAVING (NOT (MIN(((((((((vt0.c0)AND(MAX(TOTAL(vt1.c0)))))AND(COUNT(*))))AND(GROUP_CONCAT(MAX(MAX(COUNT(*)))))))AND(AVG(vt1.c0)))))) UNION ALL SELECT ALL vt0.c0 FROM vt0, vt1 NOT INDEXED GROUP BY vt0.c0 HAVING ((MIN(((((((((vt0.c0)AND(MAX(TOTAL(vt1.c0)))))AND(COUNT(*))))AND(GROUP_CONCAT(MAX(MAX(COUNT(*)))))))AND(AVG(vt1.c0))))) ISNULL);
SELECT ALL * FROM v0, vt0;
SELECT * FROM v0, vt0 WHERE ((((vt0.c0 IN (NULL, -2086757831)))*(((vt0.c0) IS TRUE)))) UNION ALL SELECT ALL * FROM v0, vt0 WHERE ((NOT ((((vt0.c0 IN (NULL, -2086757831)))*(((vt0.c0) IS TRUE)))))) UNION ALL SELECT * FROM v0, vt0 WHERE ((((((vt0.c0 IN (NULL, -2086757831)))*(((vt0.c0) IS TRUE)))) ISNULL));
SELECT ALL * FROM v0, vt0;
SELECT DISTINCT * FROM v0;
SELECT DISTINCT * FROM v0 WHERE (CASE UPPER(DISTINCT v0.c0)  WHEN NULLIF(DISTINCT v0.c0, v0.c0) THEN ((v0.c0) IS FALSE) WHEN v0.c0 COLLATE RTRIM THEN ((v0.c0)LIKE(v0.c0)) WHEN ((v0.c0)>>(v0.c0)) THEN CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END ELSE ((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))AND(v0.c0)))AND(v0.c0)) END) UNION SELECT DISTINCT * FROM v0 WHERE ((NOT (CASE UPPER(DISTINCT v0.c0)  WHEN NULLIF(DISTINCT v0.c0, v0.c0) THEN ((v0.c0) IS FALSE) WHEN v0.c0 COLLATE RTRIM THEN ((v0.c0)LIKE(v0.c0)) WHEN ((v0.c0)>>(v0.c0)) THEN CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END ELSE ((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))AND(v0.c0)))AND(v0.c0)) END))) UNION SELECT DISTINCT * FROM v0 WHERE (((CASE UPPER(DISTINCT v0.c0)  WHEN NULLIF(DISTINCT v0.c0, v0.c0) THEN ((v0.c0) IS FALSE) WHEN v0.c0 COLLATE RTRIM THEN ((v0.c0)LIKE(v0.c0)) WHEN ((v0.c0)>>(v0.c0)) THEN CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END ELSE ((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))AND(v0.c0)))AND(v0.c0)) END) ISNULL));
SELECT DISTINCT * FROM v0;
SELECT ALL vt0.c0, vt1.c0, v0.c0 FROM v0, vt1 FULL OUTER JOIN vt0 ON ((v0.c0)-(((v0.c0) IS TRUE))) GROUP BY vt0.c0, vt1.c0, v0.c0;
SELECT ALL vt0.c0, vt1.c0, v0.c0 FROM v0, vt1 FULL OUTER JOIN vt0 ON ((v0.c0)-(((v0.c0) IS TRUE))) WHERE (((vt1.c0)||((+ (v0.c0))))) GROUP BY vt0.c0, vt1.c0, v0.c0 UNION SELECT vt0.c0, vt1.c0, v0.c0 FROM v0, vt1 FULL OUTER JOIN vt0 ON ((v0.c0)-(((v0.c0) IS TRUE))) WHERE ((NOT (((vt1.c0)||((+ (v0.c0))))))) GROUP BY vt0.c0, vt1.c0, v0.c0 UNION SELECT vt0.c0, vt1.c0, v0.c0 FROM v0, vt1 FULL OUTER JOIN vt0 ON ((v0.c0)-(((v0.c0) IS TRUE))) WHERE (((((vt1.c0)||((+ (v0.c0))))) ISNULL)) GROUP BY vt0.c0, vt1.c0, v0.c0;
SELECT ALL vt0.c0, vt1.c0, v0.c0 FROM v0, vt1 FULL OUTER JOIN vt0 ON ((v0.c0)-(((v0.c0) IS TRUE))) GROUP BY vt0.c0, vt1.c0, v0.c0;
SELECT ALL vt1.c0 FROM v0 NOT INDEXED, vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM v0, vt1 GROUP BY vt1.c0 HAVING ((((v0.c0)&(COUNT(*))))>=(MAX(vt1.c0))) UNION ALL SELECT ALL vt1.c0 FROM v0, vt1 GROUP BY vt1.c0 HAVING (NOT (((((v0.c0)&(COUNT(*))))>=(MAX(vt1.c0))))) UNION ALL SELECT vt1.c0 FROM v0, vt1 GROUP BY vt1.c0 HAVING ((((((v0.c0)&(COUNT(*))))>=(MAX(vt1.c0)))) ISNULL);
SELECT ALL vt1.c0 FROM v0 NOT INDEXED, vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM v0, vt1 GROUP BY vt1.c0 HAVING ((((v0.c0)&(COUNT(*))))>=(MAX(vt1.c0))) UNION ALL SELECT ALL vt1.c0 FROM v0, vt1 GROUP BY vt1.c0 HAVING (NOT (((((v0.c0)&(COUNT(*))))>=(MAX(vt1.c0))))) UNION ALL SELECT vt1.c0 FROM v0, vt1 GROUP BY vt1.c0 HAVING ((((((v0.c0)&(COUNT(*))))>=(MAX(vt1.c0)))) ISNULL);
SELECT ALL vt1.c0 FROM v0 NOT INDEXED, vt1 GROUP BY vt1.c0;
SELECT ALL * FROM vt1, vt0;
SELECT ALL * FROM vt1, vt0 WHERE ((((vt1.c0)) NOT BETWEEN ((CASE WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 WHEN 1637985604 THEN '' END)) AND ((((vt0.c0) BETWEEN (vt1.c0) AND (vt0.c0)))))) UNION ALL SELECT ALL * FROM vt1, vt0 WHERE ((NOT ((((vt1.c0)) NOT BETWEEN ((CASE WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 WHEN 1637985604 THEN '' END)) AND ((((vt0.c0) BETWEEN (vt1.c0) AND (vt0.c0)))))))) UNION ALL SELECT ALL * FROM vt1, vt0 WHERE ((((((vt1.c0)) NOT BETWEEN ((CASE WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 WHEN 1637985604 THEN '' END)) AND ((((vt0.c0) BETWEEN (vt1.c0) AND (vt0.c0)))))) ISNULL));
SELECT ALL * FROM vt1, vt0;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE (NULLIF((((vt1.c0, NULL, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, 0.03474409694592717, vt1.c0))), ((vt1.c0) IS FALSE))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT (NULLIF((((vt1.c0, NULL, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, 0.03474409694592717, vt1.c0))), ((vt1.c0) IS FALSE))))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE (((NULLIF((((vt1.c0, NULL, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, 0.03474409694592717, vt1.c0))), ((vt1.c0) IS FALSE))) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT v0.c0 FROM v0 WHERE (((((v0.c0) ISNULL)) IS TRUE)) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE ((NOT (((((v0.c0) ISNULL)) IS TRUE)))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0 WHERE (((((((v0.c0) ISNULL)) IS TRUE)) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL vt0.c0 FROM vt0 RIGHT OUTER JOIN vt1 ON ((CAST(vt1.c0 AS NUMERIC))IS NOT((((NULL)) BETWEEN ((0xffffffffeeadad5b)) AND ((vt0.c0))))) CROSS JOIN v0 ON PRINTF(x'bff94b5a') GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 RIGHT OUTER JOIN vt1 ON ((CAST(vt1.c0 AS NUMERIC))IS NOT((((NULL)) BETWEEN ((0Xffffffffeeadad5b)) AND ((vt0.c0))))) CROSS JOIN v0 ON PRINTF(x'bff94b5a') GROUP BY vt0.c0 HAVING CAST(AVG(GROUP_CONCAT(SUM(vt0.c0))) AS BLOB) UNION ALL SELECT vt0.c0 FROM vt0 RIGHT OUTER JOIN vt1 ON ((CAST(vt1.c0 AS NUMERIC))IS NOT((((NULL)) BETWEEN ((0Xffffffffeeadad5b)) AND ((vt0.c0))))) CROSS JOIN v0 ON PRINTF(x'bff94b5a') GROUP BY vt0.c0 HAVING (NOT (CAST(AVG(GROUP_CONCAT(SUM(vt0.c0))) AS BLOB))) UNION ALL SELECT ALL vt0.c0 FROM vt0 RIGHT OUTER JOIN vt1 ON ((CAST(vt1.c0 AS NUMERIC))IS NOT((((NULL)) BETWEEN ((0xffffffffeeadad5b)) AND ((vt0.c0))))) CROSS JOIN v0 ON PRINTF(x'bff94b5a') GROUP BY vt0.c0 HAVING ((CAST(AVG(GROUP_CONCAT(SUM(vt0.c0))) AS BLOB)) ISNULL);
SELECT ALL * FROM vt1 FULL OUTER JOIN v0 ON (('0.44238615010147275')>>(((v0.c0)GLOB(vt0.c0)))) FULL OUTER JOIN vt0 ON TRIM(DISTINCT ((vt0.c0) NOTNULL));
SELECT DISTINCT * FROM vt0;
SELECT DISTINCT * FROM vt0 WHERE ((+ (CAST(vt0.c0 AS INTEGER)))) UNION SELECT DISTINCT * FROM vt0 WHERE ((NOT ((+ (CAST(vt0.c0 AS INTEGER)))))) UNION SELECT DISTINCT * FROM vt0 WHERE ((((+ (CAST(vt0.c0 AS INTEGER)))) ISNULL));
SELECT DISTINCT * FROM vt0;
SELECT ALL vt0.c0, vt1.c0, v0.c0 FROM vt1, vt0, v0 GROUP BY vt0.c0, vt1.c0, v0.c0;
SELECT ALL vt0.c0, vt1.c0, v0.c0 FROM vt1, vt0, v0 WHERE (((((((vt0.c0) IS FALSE))AND(((vt0.c0)IS NOT(vt0.c0)))))OR(CASE vt0.c0  WHEN vt0.c0 THEN -1118013094 ELSE vt0.c0 END))) GROUP BY vt0.c0, vt1.c0, v0.c0 UNION SELECT vt0.c0, vt1.c0, v0.c0 FROM vt1, vt0, v0 WHERE ((NOT (((((((vt0.c0) IS FALSE))AND(((vt0.c0)IS NOT(vt0.c0)))))OR(CASE vt0.c0  WHEN vt0.c0 THEN -1118013094 ELSE vt0.c0 END))))) GROUP BY vt0.c0, vt1.c0, v0.c0 UNION SELECT vt0.c0, vt1.c0, v0.c0 FROM vt1, vt0, v0 WHERE (((((((((vt0.c0) IS FALSE))AND(((vt0.c0)IS NOT(vt0.c0)))))OR(CASE vt0.c0  WHEN vt0.c0 THEN -1118013094 ELSE vt0.c0 END))) ISNULL)) GROUP BY vt0.c0, vt1.c0, v0.c0;
SELECT ALL vt0.c0, vt1.c0, v0.c0 FROM vt1, vt0, v0 GROUP BY vt0.c0, vt1.c0, v0.c0;
SELECT ALL v0.c0 FROM vt1 FULL OUTER JOIN v0 ON -1.660782133E9 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM vt1 FULL OUTER JOIN v0 ON -1.660782133E9 GROUP BY v0.c0 HAVING (((vt1.c0)) NOT BETWEEN ((GROUP_CONCAT(TOTAL(MIN(MIN(GROUP_CONCAT(GROUP_CONCAT(0.0898479538379654)))))))) AND ((AVG(COUNT(SUM(TOTAL(MAX(TOTAL(vt1.c0)))))) COLLATE RTRIM))) UNION ALL SELECT ALL v0.c0 FROM vt1 FULL OUTER JOIN v0 ON -1.660782133E9 GROUP BY v0.c0 HAVING (NOT ((((vt1.c0)) NOT BETWEEN ((GROUP_CONCAT(TOTAL(MIN(MIN(GROUP_CONCAT(GROUP_CONCAT(0.0898479538379654)))))))) AND ((AVG(COUNT(SUM(TOTAL(MAX(TOTAL(vt1.c0)))))) COLLATE RTRIM))))) UNION ALL SELECT ALL v0.c0 FROM vt1 FULL OUTER JOIN v0 ON -1.660782133E9 GROUP BY v0.c0 HAVING (((((vt1.c0)) NOT BETWEEN ((GROUP_CONCAT(TOTAL(MIN(MIN(GROUP_CONCAT(GROUP_CONCAT(0.0898479538379654)))))))) AND ((AVG(COUNT(SUM(TOTAL(MAX(TOTAL(vt1.c0)))))) COLLATE RTRIM)))) ISNULL);
SELECT ALL vt1.c0, v0.c0, vt0.c0 FROM v0, vt0, vt1;
SELECT vt1.c0, v0.c0, vt0.c0 FROM v0, vt0, vt1 WHERE (((CASE WHEN v0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 WHEN 0.22862366960038372 THEN vt1.c0 ELSE vt1.c0 END)<=(((vt1.c0)!=(vt0.c0))))) UNION ALL SELECT vt1.c0, v0.c0, vt0.c0 FROM v0, vt0, vt1 WHERE ((NOT (((CASE WHEN v0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 WHEN 0.22862366960038372 THEN vt1.c0 ELSE vt1.c0 END)<=(((vt1.c0)<>(vt0.c0))))))) UNION ALL SELECT vt1.c0, v0.c0, vt0.c0 FROM v0, vt0, vt1 WHERE (((((CASE WHEN v0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 WHEN 0.22862366960038372 THEN vt1.c0 ELSE vt1.c0 END)<=(((vt1.c0)<>(vt0.c0))))) ISNULL));
SELECT ALL vt1.c0, v0.c0, vt0.c0 FROM v0, vt0, vt1;
SELECT DISTINCT vt0.c0 FROM vt0, v0 LEFT OUTER JOIN vt1 ON LIKELY(DISTINCT vt0.c0 COLLATE NOCASE);
SELECT DISTINCT vt0.c0 FROM vt0, v0 LEFT OUTER JOIN vt1 ON LIKELY(DISTINCT vt0.c0 COLLATE NOCASE) WHERE (CAST((vt1.c0 IN ()) AS INTEGER)) UNION SELECT DISTINCT vt0.c0 FROM vt0, v0 LEFT OUTER JOIN vt1 ON LIKELY(DISTINCT vt0.c0 COLLATE NOCASE) WHERE ((NOT (CAST((vt1.c0 IN ()) AS INTEGER)))) UNION SELECT DISTINCT vt0.c0 FROM vt0, v0 LEFT OUTER JOIN vt1 ON LIKELY(DISTINCT vt0.c0 COLLATE NOCASE) WHERE (((CAST((vt1.c0 IN ()) AS INTEGER)) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0, v0 LEFT OUTER JOIN vt1 ON LIKELY(DISTINCT vt0.c0 COLLATE NOCASE);
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE (vt1.c0) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT (vt1.c0))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE (((vt1.c0) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0;
SELECT vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0 HAVING vt0.c0 UNION ALL SELECT vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0 HAVING (NOT (vt0.c0)) UNION ALL SELECT ALL vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0 HAVING ((vt0.c0) ISNULL);
SELECT vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0;
SELECT vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0 HAVING vt0.c0 UNION ALL SELECT vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0 HAVING (NOT (vt0.c0)) UNION ALL SELECT ALL vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0 HAVING ((vt0.c0) ISNULL);
SELECT vt0.c0, vt1.c0 FROM vt0, vt1 GROUP BY vt0.c0, vt1.c0;
SELECT vt1.c0, vt0.c0 FROM vt1, v0, vt0;
SELECT vt1.c0, vt0.c0 FROM vt1, v0, vt0 WHERE (x'') UNION ALL SELECT ALL vt1.c0, vt0.c0 FROM vt1, v0, vt0 WHERE ((NOT (x''))) UNION ALL SELECT ALL vt1.c0, vt0.c0 FROM vt1, v0, vt0 WHERE (((x'') ISNULL));
SELECT vt1.c0, vt0.c0 FROM vt1, v0, vt0;
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NULL IN (((((0.7795069404500176)AND(vt1.c0)))OR(vt1.c0))))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT ((NULL IN (((((0.7795069404500176)AND(vt1.c0)))OR(vt1.c0))))))) UNION SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((((NULL IN (((((0.7795069404500176)AND(vt1.c0)))OR(vt1.c0))))) ISNULL));
SELECT DISTINCT vt1.c0 FROM vt1;
SELECT v0.c0, vt1.c0 FROM vt0, v0 NATURAL JOIN vt1 GROUP BY v0.c0, vt1.c0;
SELECT v0.c0, vt1.c0 FROM vt0, v0 NATURAL JOIN vt1 WHERE (NULLIF(TYPEOF(vt1.c0), ((v0.c0)>=(vt1.c0)))) GROUP BY v0.c0, vt1.c0 UNION SELECT v0.c0, vt1.c0 FROM vt0, v0 NATURAL JOIN vt1 WHERE ((NOT (NULLIF(TYPEOF(vt1.c0), ((v0.c0)>=(vt1.c0)))))) GROUP BY v0.c0, vt1.c0 UNION SELECT v0.c0, vt1.c0 FROM vt0, v0 NATURAL JOIN vt1 WHERE (((NULLIF(TYPEOF(vt1.c0), ((v0.c0)>=(vt1.c0)))) ISNULL)) GROUP BY v0.c0, vt1.c0;
SELECT v0.c0, vt1.c0 FROM vt0, v0 NATURAL JOIN vt1 GROUP BY v0.c0, vt1.c0;
SELECT ALL vt0.c0 FROM v0, vt0, vt1 GROUP BY vt0.c0;
SELECT vt0.c0 FROM v0, vt0, vt1 GROUP BY vt0.c0 HAVING (- (((COUNT(vt1.c0))&(SUM(MAX(MIN(COUNT(*)))))))) UNION ALL SELECT ALL vt0.c0 FROM v0, vt0, vt1 GROUP BY vt0.c0 HAVING (NOT ((- (((COUNT(vt1.c0))&(SUM(MAX(MIN(COUNT(*)))))))))) UNION ALL SELECT ALL vt0.c0 FROM v0, vt0, vt1 GROUP BY vt0.c0 HAVING (((- (((COUNT(vt1.c0))&(SUM(MAX(MIN(COUNT(*))))))))) ISNULL);
SELECT ALL v0.c0 FROM vt1 LEFT OUTER JOIN v0 ON (((vt1.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) IN ());
SELECT ALL v0.c0 FROM vt1 LEFT OUTER JOIN v0 ON (((vt1.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) IN ()) WHERE (((((((v0.c0)AND(v0.c0)))AND(((v0.c0)|(v0.c0)))))AND(vt1.c0))) UNION ALL SELECT v0.c0 FROM vt1 LEFT OUTER JOIN v0 ON (((vt1.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) IN ()) WHERE ((NOT (((((((v0.c0)AND(v0.c0)))AND(((v0.c0)|(v0.c0)))))AND(vt1.c0))))) UNION ALL SELECT ALL v0.c0 FROM vt1 LEFT OUTER JOIN v0 ON (((vt1.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) IN ()) WHERE (((((((((v0.c0)AND(v0.c0)))AND(((v0.c0)|(v0.c0)))))AND(vt1.c0))) ISNULL));
SELECT ALL v0.c0 FROM vt1 LEFT OUTER JOIN v0 ON (((vt1.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) IN ());
SELECT DISTINCT * FROM vt1, vt0;
SELECT DISTINCT * FROM vt1, vt0 WHERE ((~ (CASE vt1.c0  WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 END))) UNION SELECT DISTINCT * FROM vt1, vt0 WHERE ((NOT ((~ (CASE vt1.c0  WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 END))))) UNION SELECT DISTINCT * FROM vt1, vt0 WHERE ((((~ (CASE vt1.c0  WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 END))) ISNULL));
SELECT DISTINCT * FROM vt1, vt0;
SELECT v0.c0 FROM vt0, v0, vt1 GROUP BY v0.c0;
SELECT v0.c0 FROM vt0, v0, vt1 WHERE ((((+ (v0.c0))) ISNULL)) GROUP BY v0.c0 UNION SELECT v0.c0 FROM vt0, v0 NOT INDEXED, vt1 WHERE ((NOT ((((+ (v0.c0))) ISNULL)))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM vt0, v0, vt1 WHERE ((((((+ (v0.c0))) ISNULL)) ISNULL)) GROUP BY v0.c0;
SELECT v0.c0 FROM vt0, v0, vt1 GROUP BY v0.c0;
SELECT ALL vt0.c0, vt1.c0 FROM vt0, v0, vt1 GROUP BY vt0.c0, vt1.c0;
SELECT ALL vt0.c0, vt1.c0 FROM vt0, v0, vt1 GROUP BY vt0.c0, vt1.c0 HAVING AVG(TOTAL(TOTAL(vt1.c0))) UNION ALL SELECT vt0.c0, vt1.c0 FROM vt0, v0, vt1 NOT INDEXED GROUP BY vt0.c0, vt1.c0 HAVING (NOT (AVG(TOTAL(TOTAL(vt1.c0))))) UNION ALL SELECT ALL vt0.c0, vt1.c0 FROM vt0, v0, vt1 GROUP BY vt0.c0, vt1.c0 HAVING ((AVG(TOTAL(TOTAL(vt1.c0)))) ISNULL);
SELECT ALL * FROM vt1, vt0, v0;
SELECT ALL * FROM vt1, vt0, v0 WHERE ((- ((- (vt1.c0))))) UNION ALL SELECT * FROM vt1, vt0, v0 WHERE ((NOT ((- ((- (vt1.c0))))))) UNION ALL SELECT * FROM vt1, vt0, v0 WHERE ((((- ((- (vt1.c0))))) ISNULL));
SELECT ALL * FROM vt1, vt0, v0;
SELECT DISTINCT vt0.c0, v0.c0 FROM vt0, v0;
SELECT DISTINCT vt0.c0, v0.c0 FROM vt0, v0 WHERE ((((v0.c0) NOT BETWEEN (0.14352825624026722) AND (v0.c0)) IN (NULL))) UNION SELECT DISTINCT vt0.c0, v0.c0 FROM vt0, v0 WHERE ((NOT ((((v0.c0) NOT BETWEEN (0.14352825624026722) AND (v0.c0)) IN (NULL))))) UNION SELECT DISTINCT vt0.c0, v0.c0 FROM vt0 NOT INDEXED, v0 WHERE ((((((v0.c0) NOT BETWEEN (0.14352825624026722) AND (v0.c0)) IN (NULL))) ISNULL));
SELECT DISTINCT vt0.c0, v0.c0 FROM vt0, v0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE (CAST((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))) AS INTEGER)) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((NOT (CAST((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))) AS INTEGER)))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE (((CAST((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))) AS INTEGER)) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((AVG(0.6262696281399538))/(SUM(vt0.c0))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (((AVG(0.6262696281399538))/(SUM(vt0.c0))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((AVG(0.6262696281399538))/(SUM(vt0.c0)))) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((AVG(0.6262696281399538))/(SUM(vt0.c0))) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT (((AVG(0.6262696281399538))/(SUM(vt0.c0))))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING ((((AVG(0.6262696281399538))/(SUM(vt0.c0)))) ISNULL);
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT v0.c0, vt0.c0 FROM v0, vt0;
SELECT ALL v0.c0, vt0.c0 FROM v0, vt0 WHERE (((((((0Xffffffff9d0279cb)OR(v0.c0)))OR(v0.c0))) ISNULL)) UNION ALL SELECT v0.c0, vt0.c0 FROM v0, vt0 WHERE ((NOT (((((((0xffffffff9d0279cb)OR(v0.c0)))OR(v0.c0))) ISNULL)))) UNION ALL SELECT v0.c0, vt0.c0 FROM v0, vt0 WHERE (((((((((0xffffffff9d0279cb)OR(v0.c0)))OR(v0.c0))) ISNULL)) ISNULL));
SELECT v0.c0, vt0.c0 FROM v0, vt0;
SELECT DISTINCT v0.c0, vt1.c0, vt0.c0 FROM v0 LEFT OUTER JOIN vt1 ON (NOT (v0.c0)) COLLATE RTRIM LEFT OUTER JOIN vt0 ON NULL;
SELECT DISTINCT v0.c0, vt1.c0, vt0.c0 FROM v0 LEFT OUTER JOIN vt1 ON (NOT (v0.c0)) COLLATE RTRIM LEFT OUTER JOIN vt0 ON NULL WHERE (((((((vt1.c0)AND(v0.c0)))OR(vt1.c0))) NOT BETWEEN (CASE WHEN vt1.c0 THEN v0.c0 ELSE vt0.c0 END) AND (CASE WHEN v0.c0 THEN vt1.c0 WHEN '-1706042959' THEN x'' WHEN vt0.c0 THEN NULL ELSE vt1.c0 END))) UNION SELECT DISTINCT v0.c0, vt1.c0, vt0.c0 FROM v0 LEFT OUTER JOIN vt1 ON (NOT (v0.c0)) COLLATE RTRIM LEFT OUTER JOIN vt0 ON NULL WHERE ((NOT (((((((vt1.c0)AND(v0.c0)))OR(vt1.c0))) NOT BETWEEN (CASE WHEN vt1.c0 THEN v0.c0 ELSE vt0.c0 END) AND (CASE WHEN v0.c0 THEN vt1.c0 WHEN '-1706042959' THEN x'' WHEN vt0.c0 THEN NULL ELSE vt1.c0 END))))) UNION SELECT DISTINCT v0.c0, vt1.c0, vt0.c0 FROM v0 LEFT OUTER JOIN vt1 ON (NOT (v0.c0)) COLLATE RTRIM LEFT OUTER JOIN vt0 ON NULL WHERE (((((((((vt1.c0)AND(v0.c0)))OR(vt1.c0))) NOT BETWEEN (CASE WHEN vt1.c0 THEN v0.c0 ELSE vt0.c0 END) AND (CASE WHEN v0.c0 THEN vt1.c0 WHEN '-1706042959' THEN x'' WHEN vt0.c0 THEN NULL ELSE vt1.c0 END))) ISNULL));
SELECT DISTINCT v0.c0, vt1.c0, vt0.c0 FROM v0 LEFT OUTER JOIN vt1 ON (NOT (v0.c0)) COLLATE RTRIM LEFT OUTER JOIN vt0 ON NULL;
SELECT ALL v0.c0 FROM vt0, v0, vt1 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM vt0, v0, vt1 WHERE (((((vt1.c0) IS FALSE))==(((v0.c0) NOTNULL)))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM vt0, v0, vt1 WHERE ((NOT (((((vt1.c0) IS FALSE))==(((v0.c0) NOTNULL)))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM vt0, v0, vt1 WHERE (((((((vt1.c0) IS FALSE))==(((v0.c0) NOTNULL)))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM vt0, v0, vt1 GROUP BY v0.c0;
SELECT v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0;
SELECT ALL v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0 HAVING ((((LIKELY(DISTINCT SUM(NULL)))OR((v0.c0 IN (SUM(v0.c0))))))OR(vt0.c0 COLLATE NOCASE)) UNION ALL SELECT ALL v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0 HAVING (NOT (((((LIKELY(DISTINCT SUM(NULL)))OR((v0.c0 IN (SUM(v0.c0))))))OR(vt0.c0 COLLATE NOCASE)))) UNION ALL SELECT ALL v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0 HAVING ((((((LIKELY(DISTINCT SUM(NULL)))OR((v0.c0 IN (SUM(v0.c0))))))OR(vt0.c0 COLLATE NOCASE))) ISNULL);
SELECT v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0;
SELECT ALL v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0 HAVING ((((LIKELY(DISTINCT SUM(NULL)))OR((v0.c0 IN (SUM(v0.c0))))))OR(vt0.c0 COLLATE NOCASE)) UNION ALL SELECT ALL v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0 HAVING (NOT (((((LIKELY(DISTINCT SUM(NULL)))OR((v0.c0 IN (SUM(v0.c0))))))OR(vt0.c0 COLLATE NOCASE)))) UNION ALL SELECT ALL v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0 HAVING ((((((LIKELY(DISTINCT SUM(NULL)))OR((v0.c0 IN (SUM(v0.c0))))))OR(vt0.c0 COLLATE NOCASE))) ISNULL);
SELECT v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0;
SELECT * FROM vt0, v0;
SELECT * FROM vt0, v0 WHERE (((((NULL)+(v0.c0))) BETWEEN (((vt0.c0)LIKE(vt0.c0))) AND (vt0.c0))) UNION ALL SELECT ALL * FROM vt0, v0 WHERE ((NOT (((((NULL)+(v0.c0))) BETWEEN (((vt0.c0)LIKE(vt0.c0))) AND (vt0.c0))))) UNION ALL SELECT * FROM vt0, v0 WHERE (((((((NULL)+(v0.c0))) BETWEEN (((vt0.c0)LIKE(vt0.c0))) AND (vt0.c0))) ISNULL));
SELECT * FROM vt0, v0;
SELECT DISTINCT * FROM vt1, vt0;
SELECT DISTINCT * FROM vt1, vt0 WHERE ((((((vt0.c0)<=(vt0.c0)), LIKE(vt1.c0, vt0.c0, 'f'), (NOT (vt1.c0))))<=((TIME(vt0.c0, vt0.c0, x''), (((vt1.c0))<=((vt0.c0))), (- (NULL)))))) UNION SELECT DISTINCT * FROM vt1, vt0 WHERE ((NOT ((((((vt0.c0)<=(vt0.c0)), LIKE(vt1.c0, vt0.c0, 'f'), (NOT (vt1.c0))))<=((TIME(vt0.c0, vt0.c0, x''), (((vt1.c0))<=((vt0.c0))), (- (NULL)))))))) UNION SELECT DISTINCT * FROM vt1, vt0 WHERE ((((((((vt0.c0)<=(vt0.c0)), LIKE(vt1.c0, vt0.c0, 'f'), (NOT (vt1.c0))))<=((TIME(vt0.c0, vt0.c0, x''), (((vt1.c0))<=((vt0.c0))), (- (NULL)))))) ISNULL));
SELECT DISTINCT * FROM vt1, vt0;
SELECT v0.c0, vt1.c0 FROM vt1 LEFT OUTER JOIN v0 ON (((((vt1.c0 IN ()))AND(((v0.c0) BETWEEN (vt1.c0) AND (v0.c0)))))AND(((v0.c0) NOT BETWEEN (vt1.c0) AND (v0.c0)))) GROUP BY v0.c0, vt1.c0;
SELECT ALL v0.c0, vt1.c0 FROM vt1 LEFT OUTER JOIN v0 ON (((((vt1.c0 IN ()))AND(((v0.c0) BETWEEN (vt1.c0) AND (v0.c0)))))AND(((v0.c0) NOT BETWEEN (vt1.c0) AND (v0.c0)))) WHERE (((((vt1.c0) BETWEEN (v0.c0) AND (v0.c0)))<=(CASE v0.c0  WHEN NULL THEN v0.c0 WHEN vt1.c0 THEN v0.c0 WHEN vt1.c0 THEN vt1.c0 ELSE v0.c0 END))) GROUP BY v0.c0, vt1.c0 UNION SELECT v0.c0, vt1.c0 FROM vt1 LEFT OUTER JOIN v0 ON (((((vt1.c0 IN ()))AND(((v0.c0) BETWEEN (vt1.c0) AND (v0.c0)))))AND(((v0.c0) NOT BETWEEN (vt1.c0) AND (v0.c0)))) WHERE ((NOT (((((vt1.c0) BETWEEN (v0.c0) AND (v0.c0)))<=(CASE v0.c0  WHEN NULL THEN v0.c0 WHEN vt1.c0 THEN v0.c0 WHEN vt1.c0 THEN vt1.c0 ELSE v0.c0 END))))) GROUP BY v0.c0, vt1.c0 UNION SELECT ALL v0.c0, vt1.c0 FROM vt1 LEFT OUTER JOIN v0 ON (((((vt1.c0 IN ()))AND(((v0.c0) BETWEEN (vt1.c0) AND (v0.c0)))))AND(((v0.c0) NOT BETWEEN (vt1.c0) AND (v0.c0)))) WHERE (((((((vt1.c0) BETWEEN (v0.c0) AND (v0.c0)))<=(CASE v0.c0  WHEN NULL THEN v0.c0 WHEN vt1.c0 THEN v0.c0 WHEN vt1.c0 THEN vt1.c0 ELSE v0.c0 END))) ISNULL)) GROUP BY v0.c0, vt1.c0;
SELECT v0.c0, vt1.c0 FROM vt1 LEFT OUTER JOIN v0 ON (((((vt1.c0 IN ()))AND(((v0.c0) BETWEEN (vt1.c0) AND (v0.c0)))))AND(((v0.c0) NOT BETWEEN (vt1.c0) AND (v0.c0)))) GROUP BY v0.c0, vt1.c0;
SELECT vt1.c0, v0.c0 FROM vt1, v0 GROUP BY vt1.c0, v0.c0;
SELECT vt1.c0, v0.c0 FROM vt1, v0 GROUP BY vt1.c0, v0.c0 HAVING AVG(((MIN(SUM(vt1.c0)))+(GROUP_CONCAT(COUNT(*))))) UNION ALL SELECT vt1.c0, v0.c0 FROM vt1, v0 GROUP BY vt1.c0, v0.c0 HAVING (NOT (AVG(((MIN(SUM(vt1.c0)))+(GROUP_CONCAT(COUNT(*))))))) UNION ALL SELECT ALL vt1.c0, v0.c0 FROM vt1, v0 GROUP BY vt1.c0, v0.c0 HAVING ((AVG(((MIN(SUM(vt1.c0)))+(GROUP_CONCAT(COUNT(*)))))) ISNULL);
SELECT ALL vt0.c0, vt1.c0, v0.c0 FROM vt1, vt0 CROSS JOIN v0 ON ((NULL) NOT BETWEEN (((vt1.c0)LIKE(vt1.c0))) AND (((vt0.c0)|(v0.c0))));
SELECT ALL vt0.c0, vt1.c0, v0.c0 FROM vt1, vt0 CROSS JOIN v0 ON ((NULL) NOT BETWEEN (((vt1.c0)LIKE(vt1.c0))) AND (((vt0.c0)|(v0.c0)))) WHERE (((vt0.c0 COLLATE NOCASE)>=(0.15250536614191057))) UNION ALL SELECT vt0.c0, vt1.c0, v0.c0 FROM vt1, vt0 CROSS JOIN v0 ON ((NULL) NOT BETWEEN (((vt1.c0)LIKE(vt1.c0))) AND (((vt0.c0)|(v0.c0)))) WHERE ((NOT (((vt0.c0 COLLATE NOCASE)>=(0.15250536614191057))))) UNION ALL SELECT ALL vt0.c0, vt1.c0, v0.c0 FROM vt1, vt0 CROSS JOIN v0 ON ((NULL) NOT BETWEEN (((vt1.c0)LIKE(vt1.c0))) AND (((vt0.c0)|(v0.c0)))) WHERE (((((vt0.c0 COLLATE NOCASE)>=(0.15250536614191057))) ISNULL));
SELECT ALL vt0.c0, vt1.c0, v0.c0 FROM vt1, vt0 CROSS JOIN v0 ON ((NULL) NOT BETWEEN (((vt1.c0)LIKE(vt1.c0))) AND (((vt0.c0)|(v0.c0))));
SELECT DISTINCT v0.c0, vt0.c0 FROM vt0 FULL OUTER JOIN v0 ON ((vt0.c0 COLLATE BINARY)||((('')%(v0.c0))));
SELECT DISTINCT v0.c0, vt0.c0 FROM vt0 FULL OUTER JOIN v0 ON ((vt0.c0 COLLATE BINARY)||((('')%(v0.c0)))) WHERE (CAST(((v0.c0) NOT BETWEEN (vt0.c0) AND ('54747605')) AS INTEGER)) UNION SELECT DISTINCT v0.c0, vt0.c0 FROM vt0 FULL OUTER JOIN v0 ON ((vt0.c0 COLLATE BINARY)||((('')%(v0.c0)))) WHERE ((NOT (CAST(((v0.c0) NOT BETWEEN (vt0.c0) AND ('54747605')) AS INTEGER)))) UNION SELECT DISTINCT v0.c0, vt0.c0 FROM vt0 FULL OUTER JOIN v0 ON ((vt0.c0 COLLATE BINARY)||((('')%(v0.c0)))) WHERE (((CAST(((v0.c0) NOT BETWEEN (vt0.c0) AND ('54747605')) AS INTEGER)) ISNULL));
SELECT DISTINCT v0.c0, vt0.c0 FROM vt0 FULL OUTER JOIN v0 ON ((vt0.c0 COLLATE BINARY)||((('')%(v0.c0))));
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 WHERE (ABS(vt0.c0)) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (ABS(vt0.c0)))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE (((ABS(vt0.c0)) ISNULL)) GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING COUNT(*) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING COUNT(*) UNION ALL SELECT v0.c0 FROM v0 GROUP BY v0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL v0.c0 FROM v0 GROUP BY v0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT v0.c0 FROM v0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0;
SELECT ALL v0.c0 FROM v0 WHERE (((((((v0.c0)>(v0.c0)))AND((((v0.c0))=((v0.c0))))))OR((- (v0.c0))))) UNION ALL SELECT v0.c0 FROM v0 WHERE ((NOT (((((((v0.c0)>(v0.c0)))AND((((v0.c0))==((v0.c0))))))OR((- (v0.c0))))))) UNION ALL SELECT v0.c0 FROM v0 WHERE (((((((((v0.c0)>(v0.c0)))AND((((v0.c0))=((v0.c0))))))OR((- (v0.c0))))) ISNULL));
SELECT ALL v0.c0 FROM v0;
SELECT DISTINCT vt0.c0, v0.c0 FROM vt0, v0;
SELECT DISTINCT vt0.c0, v0.c0 FROM vt0, v0 WHERE (((((load_extension(vt0.c0))AND(v0.c0 COLLATE BINARY)))OR(NULL))) UNION SELECT DISTINCT vt0.c0, v0.c0 FROM vt0, v0 WHERE ((NOT (((((load_extension(vt0.c0))AND(v0.c0 COLLATE BINARY)))OR(NULL))))) UNION SELECT DISTINCT vt0.c0, v0.c0 FROM vt0, v0 WHERE (((((((load_extension(vt0.c0))AND(v0.c0 COLLATE BINARY)))OR(NULL))) ISNULL));
SELECT DISTINCT vt0.c0, v0.c0 FROM vt0, v0;
SELECT ALL v0.c0 FROM v0, vt0, vt1 GROUP BY v0.c0;
SELECT v0.c0 FROM v0, vt0, vt1 WHERE ((((v0.c0) ISNULL) IN (0.288274697126392))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0, vt0, vt1 WHERE ((NOT ((((v0.c0) ISNULL) IN (0.288274697126392))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0, vt0, vt1 WHERE ((((((v0.c0) ISNULL) IN (0.288274697126392))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0, vt0, vt1 GROUP BY v0.c0;
SELECT v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0;
SELECT v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0 HAVING SUM(SUM(MIN(vt0.c0))) UNION ALL SELECT ALL v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0 HAVING (NOT (SUM(SUM(MIN(vt0.c0))))) UNION ALL SELECT v0.c0, vt0.c0 FROM v0, vt0 GROUP BY v0.c0, vt0.c0 HAVING ((SUM(SUM(MIN(vt0.c0)))) ISNULL);
SELECT ALL * FROM vt0, v0, vt1;
SELECT * FROM vt0, v0, vt1 WHERE ((~ (v0.c0))) UNION ALL SELECT ALL * FROM vt0 NOT INDEXED, v0, vt1 WHERE ((NOT ((~ (v0.c0))))) UNION ALL SELECT ALL * FROM vt0, v0, vt1 WHERE ((((~ (v0.c0))) ISNULL));
SELECT ALL * FROM vt0, v0, vt1;
SELECT DISTINCT v0.c0, vt1.c0 FROM v0 RIGHT OUTER JOIN vt1 ON CASE (('249034845') NOT BETWEEN (vt1.c0) AND (v0.c0))  WHEN (vt1.c0 IN ()) THEN v0.c0 COLLATE RTRIM END;
SELECT DISTINCT v0.c0, vt1.c0 FROM v0 RIGHT OUTER JOIN vt1 ON CASE (('249034845') NOT BETWEEN (vt1.c0) AND (v0.c0))  WHEN (vt1.c0 IN ()) THEN v0.c0 COLLATE RTRIM END WHERE (v0.c0) UNION SELECT DISTINCT v0.c0, vt1.c0 FROM v0 RIGHT OUTER JOIN vt1 ON CASE (('249034845') NOT BETWEEN (vt1.c0) AND (v0.c0))  WHEN (vt1.c0 IN ()) THEN v0.c0 COLLATE RTRIM END WHERE ((NOT (v0.c0))) UNION SELECT DISTINCT v0.c0, vt1.c0 FROM v0 RIGHT OUTER JOIN vt1 ON CASE (('249034845') NOT BETWEEN (vt1.c0) AND (v0.c0))  WHEN (vt1.c0 IN ()) THEN v0.c0 COLLATE RTRIM END WHERE (((v0.c0) ISNULL));
SELECT DISTINCT v0.c0, vt1.c0 FROM v0 RIGHT OUTER JOIN vt1 ON CASE (('249034845') NOT BETWEEN (vt1.c0) AND (v0.c0))  WHEN (vt1.c0 IN ()) THEN v0.c0 COLLATE RTRIM END;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 WHERE ((((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN (((+ (vt1.c0)), CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END, ((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)), (((vt1.c0))>=((vt1.c0))), (((vt1.c0))>=((vt1.c0))))) AND (((+ (vt1.c0)), json_array_length(vt1.c0), CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END, ((vt1.c0)<<(vt1.c0)), (vt1.c0 IN ()))))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT ((((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN (((+ (vt1.c0)), CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END, ((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)), (((vt1.c0))>=((vt1.c0))), (((vt1.c0))>=((vt1.c0))))) AND (((+ (vt1.c0)), json_array_length(vt1.c0), CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END, ((vt1.c0)<<(vt1.c0)), (vt1.c0 IN ()))))))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE ((((((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN (((+ (vt1.c0)), CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END, ((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)), (((vt1.c0))>=((vt1.c0))), (((vt1.c0))>=((vt1.c0))))) AND (((+ (vt1.c0)), json_array_length(vt1.c0), CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END, ((vt1.c0)<<(vt1.c0)), (vt1.c0 IN ()))))) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (TOTAL(vt0.c0) IN ()) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT ((TOTAL(vt0.c0) IN ()))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((TOTAL(vt0.c0) IN ())) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (TOTAL(vt0.c0) IN ()) UNION ALL SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (NOT ((TOTAL(vt0.c0) IN ()))) UNION ALL SELECT vt0.c0 FROM vt0 GROUP BY vt0.c0 HAVING (((TOTAL(vt0.c0) IN ())) ISNULL);
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT * FROM vt0 RIGHT OUTER JOIN vt1 ON ((((vt1.c0)+(vt0.c0))) NOT BETWEEN (((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0))) AND (((vt1.c0) NOTNULL)));
SELECT ALL * FROM vt0 RIGHT OUTER JOIN vt1 ON ((((vt1.c0)+(vt0.c0))) NOT BETWEEN (((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0))) AND (((vt1.c0) NOTNULL))) WHERE (CASE ((vt1.c0)<=(vt1.c0))  WHEN vt1.c0 THEN ((vt0.c0)>=(vt0.c0)) WHEN HEX(vt1.c0) THEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END WHEN CAST(vt1.c0 AS BLOB) THEN CASE vt1.c0  WHEN vt0.c0 THEN vt1.c0 ELSE 0x56669f1a END WHEN CAST(vt1.c0 AS REAL) THEN CAST(vt1.c0 AS INTEGER) WHEN vt1.c0 THEN ((vt0.c0)>=(vt0.c0)) END) UNION ALL SELECT * FROM vt0 RIGHT OUTER JOIN vt1 ON ((((vt1.c0)+(vt0.c0))) NOT BETWEEN (((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0))) AND (((vt1.c0) NOTNULL))) WHERE ((NOT (CASE ((vt1.c0)<=(vt1.c0))  WHEN vt1.c0 THEN ((vt0.c0)>=(vt0.c0)) WHEN HEX(vt1.c0) THEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END WHEN CAST(vt1.c0 AS BLOB) THEN CASE vt1.c0  WHEN vt0.c0 THEN vt1.c0 ELSE 0x56669f1a END WHEN CAST(vt1.c0 AS REAL) THEN CAST(vt1.c0 AS INTEGER) WHEN vt1.c0 THEN ((vt0.c0)>=(vt0.c0)) END))) UNION ALL SELECT ALL * FROM vt0 RIGHT OUTER JOIN vt1 ON ((((vt1.c0)+(vt0.c0))) NOT BETWEEN (((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0))) AND (((vt1.c0) NOTNULL))) WHERE (((CASE ((vt1.c0)<=(vt1.c0))  WHEN vt1.c0 THEN ((vt0.c0)>=(vt0.c0)) WHEN HEX(vt1.c0) THEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END WHEN CAST(vt1.c0 AS BLOB) THEN CASE vt1.c0  WHEN vt0.c0 THEN vt1.c0 ELSE 0x56669f1a END WHEN CAST(vt1.c0 AS REAL) THEN CAST(vt1.c0 AS INTEGER) WHEN vt1.c0 THEN ((vt0.c0)>=(vt0.c0)) END) ISNULL));
SELECT * FROM vt0 RIGHT OUTER JOIN vt1 ON ((((vt1.c0)+(vt0.c0))) NOT BETWEEN (((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0))) AND (((vt1.c0) NOTNULL)));
SELECT DISTINCT vt1.c0, v0.c0 FROM v0, vt0 RIGHT OUTER JOIN vt1 ON vt0.c0;
SELECT DISTINCT vt1.c0, v0.c0 FROM v0, vt0 RIGHT OUTER JOIN vt1 ON vt0.c0 WHERE (((((((((vt0.c0)OR(0.6223762872408921)))AND((~ (v0.c0)))))OR((~ (vt1.c0)))))AND(((((vt1.c0)AND(v0.c0)))AND(0.47847307936531025))))) UNION SELECT DISTINCT vt1.c0, v0.c0 FROM v0, vt0 RIGHT OUTER JOIN vt1 ON vt0.c0 WHERE ((NOT (((((((((vt0.c0)OR(0.6223762872408921)))AND((~ (v0.c0)))))OR((~ (vt1.c0)))))AND(((((vt1.c0)AND(v0.c0)))AND(0.47847307936531025))))))) UNION SELECT DISTINCT vt1.c0, v0.c0 FROM v0 NOT INDEXED, vt0 RIGHT OUTER JOIN vt1 ON vt0.c0 WHERE (((((((((((vt0.c0)OR(0.6223762872408921)))AND((~ (v0.c0)))))OR((~ (vt1.c0)))))AND(((((vt1.c0)AND(v0.c0)))AND(0.47847307936531025))))) ISNULL));
SELECT DISTINCT vt1.c0, v0.c0 FROM v0, vt0 RIGHT OUTER JOIN vt1 ON vt0.c0;
SELECT vt1.c0 FROM v0, vt0, vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM v0, vt0, vt1 NOT INDEXED WHERE (CAST(CAST(v0.c0 AS REAL) AS REAL)) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM v0, vt0, vt1 WHERE ((NOT (CAST(CAST(v0.c0 AS REAL) AS REAL)))) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM v0, vt0, vt1 WHERE (((CAST(CAST(v0.c0 AS REAL) AS REAL)) ISNULL)) GROUP BY vt1.c0;
SELECT vt1.c0 FROM v0, vt0, vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((((((MAX(vt1.c0)) NOTNULL))AND(vt1.c0)))AND(GROUP_CONCAT(GROUP_CONCAT(GROUP_CONCAT(vt1.c0))))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (((((((MAX(vt1.c0)) NOTNULL))AND(vt1.c0)))AND(GROUP_CONCAT(GROUP_CONCAT(GROUP_CONCAT(vt1.c0))))))) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((((((((MAX(vt1.c0)) NOTNULL))AND(vt1.c0)))AND(GROUP_CONCAT(GROUP_CONCAT(GROUP_CONCAT(vt1.c0)))))) ISNULL);
SELECT ALL * FROM vt0 INNER JOIN v0 ON (- (((v0.c0) NOT NULL)));
SELECT * FROM vt0 INNER JOIN v0 ON (- (((v0.c0) NOT NULL))) WHERE (CAST(((vt0.c0) BETWEEN (vt0.c0) AND (v0.c0)) AS NUMERIC)) UNION ALL SELECT ALL * FROM vt0 INNER JOIN v0 ON (- (((v0.c0) NOT NULL))) WHERE ((NOT (CAST(((vt0.c0) BETWEEN (vt0.c0) AND (v0.c0)) AS NUMERIC)))) UNION ALL SELECT ALL * FROM vt0 INNER JOIN v0 ON (- (((v0.c0) NOT NULL))) WHERE (((CAST(((vt0.c0) BETWEEN (vt0.c0) AND (v0.c0)) AS NUMERIC)) ISNULL));
SELECT ALL * FROM vt0 INNER JOIN v0 ON (- (((v0.c0) NOT NULL)));
SELECT DISTINCT * FROM v0 LEFT OUTER JOIN vt0 ON (((((- (vt1.c0)))OR(vt1.c0 COLLATE BINARY)))AND(((vt1.c0) NOT NULL))) RIGHT OUTER JOIN vt1 ON vt1.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 WHERE ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) IN (((vt0.c0) IS TRUE)))) GROUP BY vt0.c0 UNION SELECT vt0.c0 FROM vt0 WHERE ((NOT ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) IN (((vt0.c0) IS TRUE)))))) GROUP BY vt0.c0 UNION SELECT ALL vt0.c0 FROM vt0 WHERE ((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) IN (((vt0.c0) IS TRUE)))) ISNULL)) GROUP BY vt0.c0;
SELECT ALL vt0.c0 FROM vt0 GROUP BY vt0.c0;
SELECT vt1.c0 FROM vt1, v0 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1, v0 GROUP BY vt1.c0 HAVING CASE WHEN TOTAL(v0.c0) THEN MIN(x'') ELSE AVG(MIN(MAX(v0.c0))) END UNION ALL SELECT vt1.c0 FROM vt1, v0 GROUP BY vt1.c0 HAVING (NOT (CASE WHEN TOTAL(v0.c0) THEN MIN(x'') ELSE AVG(MIN(MAX(v0.c0))) END)) UNION ALL SELECT ALL vt1.c0 FROM vt1, v0 GROUP BY vt1.c0 HAVING ((CASE WHEN TOTAL(v0.c0) THEN MIN(x'') ELSE AVG(MIN(MAX(v0.c0))) END) ISNULL);
SELECT ALL vt0.c0 FROM vt0;
SELECT vt0.c0 FROM vt0 WHERE (CAST(((vt0.c0) NOT NULL) AS BLOB)) UNION ALL SELECT ALL vt0.c0 FROM vt0 WHERE ((NOT (CAST(((vt0.c0) NOT NULL) AS BLOB)))) UNION ALL SELECT vt0.c0 FROM vt0 WHERE (((CAST(((vt0.c0) NOT NULL) AS BLOB)) ISNULL));
SELECT ALL vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((vt0.c0)>(vt0.c0)) COLLATE RTRIM) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE ((NOT (((vt0.c0)>(vt0.c0)) COLLATE RTRIM))) UNION SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((((vt0.c0)>(vt0.c0)) COLLATE RTRIM) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 WHERE (CAST(vt1.c0 COLLATE RTRIM AS REAL)) GROUP BY vt1.c0 UNION SELECT ALL vt1.c0 FROM vt1 WHERE ((NOT (CAST(vt1.c0 COLLATE RTRIM AS REAL)))) GROUP BY vt1.c0 UNION SELECT vt1.c0 FROM vt1 WHERE (((CAST(vt1.c0 COLLATE RTRIM AS REAL)) ISNULL)) GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING TOTAL(MIN(vt1.c0)) UNION ALL SELECT vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (TOTAL(MIN(vt1.c0)))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((TOTAL(MIN(vt1.c0))) ISNULL);
SELECT ALL vt0.c0, v0.c0 FROM vt1 RIGHT OUTER JOIN vt0 ON ((0.6155336838096517) ISNULL) FULL OUTER JOIN v0 ON CAST((v0.c0 IN ()) AS TEXT);
SELECT vt0.c0, v0.c0 FROM vt1 RIGHT OUTER JOIN vt0 ON ((0.6155336838096517) ISNULL) FULL OUTER JOIN v0 ON CAST((v0.c0 IN ()) AS TEXT) WHERE (IFNULL(NULL, vt0.c0)) UNION ALL SELECT vt0.c0, v0.c0 FROM vt1 RIGHT OUTER JOIN vt0 ON ((0.6155336838096517) ISNULL) FULL OUTER JOIN v0 ON CAST((v0.c0 IN ()) AS TEXT) WHERE ((NOT (IFNULL(NULL, vt0.c0)))) UNION ALL SELECT ALL vt0.c0, v0.c0 FROM vt1 RIGHT OUTER JOIN vt0 ON ((0.6155336838096517) ISNULL) FULL OUTER JOIN v0 ON CAST((v0.c0 IN ()) AS TEXT) WHERE (((IFNULL(NULL, vt0.c0)) ISNULL));
SELECT ALL vt0.c0, v0.c0 FROM vt1 RIGHT OUTER JOIN vt0 ON ((0.6155336838096517) ISNULL) FULL OUTER JOIN v0 ON CAST((v0.c0 IN ()) AS TEXT);
SELECT DISTINCT * FROM vt0 LEFT OUTER JOIN vt1 ON COALESCE(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), CAST(vt1.c0 AS NUMERIC));
SELECT DISTINCT * FROM vt0 LEFT OUTER JOIN vt1 ON COALESCE(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), CAST(vt1.c0 AS NUMERIC)) WHERE (((((((((CAST(x'6b8b' AS TEXT))OR(((vt1.c0)<>(vt0.c0)))))OR(((vt1.c0) NOTNULL))))OR(((((((((vt0.c0)AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(vt0.c0)))))OR(((((vt0.c0)OR(vt1.c0)))AND(vt1.c0))))) UNION SELECT DISTINCT * FROM vt0 LEFT OUTER JOIN vt1 ON COALESCE(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), CAST(vt1.c0 AS NUMERIC)) WHERE ((NOT (((((((((CAST(x'6b8b' AS TEXT))OR(((vt1.c0)<>(vt0.c0)))))OR(((vt1.c0) NOTNULL))))OR(((((((((vt0.c0)AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(vt0.c0)))))OR(((((vt0.c0)OR(vt1.c0)))AND(vt1.c0))))))) UNION SELECT DISTINCT * FROM vt0 LEFT OUTER JOIN vt1 ON COALESCE(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), CAST(vt1.c0 AS NUMERIC)) WHERE (((((((((((CAST(x'6b8b' AS TEXT))OR(((vt1.c0)<>(vt0.c0)))))OR(((vt1.c0) NOTNULL))))OR(((((((((vt0.c0)AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(vt0.c0)))))OR(((((vt0.c0)OR(vt1.c0)))AND(vt1.c0))))) ISNULL));
SELECT DISTINCT * FROM vt0 LEFT OUTER JOIN vt1 ON COALESCE(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), CAST(vt1.c0 AS NUMERIC));
SELECT ALL v0.c0 FROM v0, vt1 NOT INDEXED, vt0 GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0, vt1, vt0 WHERE (((((((((v0.c0)OR(((((((((vt1.c0)AND(vt0.c0)))OR(vt0.c0)))AND('-863727890')))OR(v0.c0)))))AND(vt1.c0 COLLATE NOCASE)))AND(((0x3db38483)&(vt1.c0)))))OR((vt0.c0 IN (v0.c0))))) GROUP BY v0.c0 UNION SELECT ALL v0.c0 FROM v0, vt1, vt0 WHERE ((NOT (((((((((v0.c0)OR(((((((((vt1.c0)AND(vt0.c0)))OR(vt0.c0)))AND('-863727890')))OR(v0.c0)))))AND(vt1.c0 COLLATE NOCASE)))AND(((0X3db38483)&(vt1.c0)))))OR((vt0.c0 IN (v0.c0))))))) GROUP BY v0.c0 UNION SELECT v0.c0 FROM v0, vt1, vt0 WHERE (((((((((((v0.c0)OR(((((((((vt1.c0)AND(vt0.c0)))OR(vt0.c0)))AND('-863727890')))OR(v0.c0)))))AND(vt1.c0 COLLATE NOCASE)))AND(((0X3db38483)&(vt1.c0)))))OR((vt0.c0 IN (v0.c0))))) ISNULL)) GROUP BY v0.c0;
SELECT ALL v0.c0 FROM v0, vt1 NOT INDEXED, vt0 GROUP BY v0.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING COUNT(*) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0 HAVING ((COUNT(*)) ISNULL);
SELECT ALL vt1.c0 FROM vt1 GROUP BY vt1.c0;
SELECT vt1.c0, vt0.c0 FROM vt1, vt0;
SELECT vt1.c0, vt0.c0 FROM vt1, vt0 WHERE ((((CAST('413407971' AS TEXT), IFNULL(vt0.c0, vt1.c0), (- (vt1.c0))))!=(((vt0.c0 IN ()), ((((vt0.c0)AND(vt0.c0)))OR('658386120')), ((((((((vt1.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt1.c0)))OR(vt1.c0)))))) UNION ALL SELECT vt1.c0, vt0.c0 FROM vt1, vt0 WHERE ((NOT ((((CAST('413407971' AS TEXT), IFNULL(vt0.c0, vt1.c0), (- (vt1.c0))))!=(((vt0.c0 IN ()), ((((vt0.c0)AND(vt0.c0)))OR('658386120')), ((((((((vt1.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt1.c0)))OR(vt1.c0)))))))) UNION ALL SELECT ALL vt1.c0, vt0.c0 FROM vt1, vt0 WHERE ((((((CAST('413407971' AS TEXT), IFNULL(vt0.c0, vt1.c0), (- (vt1.c0))))!=(((vt0.c0 IN ()), ((((vt0.c0)AND(vt0.c0)))OR('658386120')), ((((((((vt1.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt1.c0)))OR(vt1.c0)))))) ISNULL));
SELECT vt1.c0, vt0.c0 FROM vt1, vt0;
SELECT DISTINCT vt0.c0 FROM vt0, v0, vt1;
SELECT DISTINCT vt0.c0 FROM vt0, v0, vt1 WHERE (CAST((~ (vt1.c0)) AS REAL)) UNION SELECT DISTINCT vt0.c0 FROM vt0, v0, vt1 WHERE ((NOT (CAST((~ (vt1.c0)) AS REAL)))) UNION SELECT DISTINCT vt0.c0 FROM vt0, v0, vt1 WHERE (((CAST((~ (vt1.c0)) AS REAL)) ISNULL));
SELECT DISTINCT vt0.c0 FROM vt0, v0, vt1;
