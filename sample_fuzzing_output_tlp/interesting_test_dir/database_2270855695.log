-- Time: 2024/06/09 18:20:27
-- Database: database95
-- Database version: 3.40.0
-- seed value: 2270855695
PRAGMA cache_size = 50000; -- 1ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree(c0, c1, c2, +c3 INTEGER ); -- 0ms;
CREATE TABLE t1 (c0 INTEGER ); -- 0ms;
ANALYZE; -- 0ms;
INSERT OR IGNORE INTO t1 VALUES (x''); -- 0ms;
PRAGMA temp.journal_size_limit = -2547242248831297630; -- 0ms;
UPDATE OR ABORT t1 SET (c0)=('OUcxZ(s&>') WHERE INSTR((t1.c0 IN ()), ((t1.c0)IS(t1.c0))); -- 0ms;
PRAGMA temp.auto_vacuum = FULL; -- 0ms;
PRAGMA defer_foreign_keys; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR IGNORE t1 SET c0=x'', c0=0X5cd45ca3; -- 17ms;
INSERT OR ROLLBACK INTO t1 VALUES (NULL), (0Xffffffff8176fa90), ('oucxz(s&>'), (''), (x''); -- 1ms;
INSERT OR REPLACE INTO rt0(c3, c2) VALUES (x'', 0.928223180654533); -- 1ms;
PRAGMA temp.cache_spill; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA stats; -- 0ms;
END TRANSACTION; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
ALTER TABLE t1 ADD COLUMN c3 BLOB; -- 1ms;
PRAGMA integrity_check; -- 0ms;
UPDATE OR IGNORE t1 SET c0=NULL; -- 0ms;
INSERT OR REPLACE INTO t1(c0) VALUES (x''); -- 0ms;
INSERT OR REPLACE INTO t1(c0) VALUES (x''); -- 0ms;
ROLLBACK TRANSACTION; -- 1ms;
UPDATE OR IGNORE rt0 SET c1=NULL, c2=0Xfffffffff1a5081e WHERE rt0.c1; -- 0ms;
ROLLBACK TRANSACTION; -- 1ms;
VACUUM temp; -- 0ms;
INSERT OR ABORT INTO rt0 VALUES ('', 0.6098194577137154, x'', 0X622d509c); -- 1ms;
INSERT OR ABORT INTO rt0(c0, c2) VALUES ('', '1647136924'), (NULL, NULL), (0x5df4000f, 0.4401734685621961); -- 17ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO t1(c0) VALUES (NULL), (0.4401734685621961), (NULL); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT OR ROLLBACK INTO rt0(c1) VALUES (-784913618); -- 0ms;
COMMIT TRANSACTION; -- 0ms;
PRAGMA main.default_cache_size = 1576271887; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR FAIL INTO rt0(c3) VALUES ('o?亃⬮9ᲆ~^'), (0.928223180654533), (0.6380456457314255); -- 0ms;
END; -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
SELECT rtreecheck('rt0'); -- 0ms;
PRAGMA temp.shrink_memory; -- 0ms;
PRAGMA main.locking_mode = NORMAL; -- 0ms;
UPDATE OR ROLLBACK rt0 SET c2=NULL; -- 1ms;
INSERT OR IGNORE INTO t1 VALUES (NULL); -- 0ms;
ANALYZE temp; -- 1ms;
REINDEX  rt0; -- 0ms;
PRAGMA journal_size_limit; -- 0ms;
ALTER TABLE t1 RENAME COLUMN c0 TO c92; -- 1ms;
PRAGMA temp.integrity_check; -- 0ms;
INSERT OR ABORT INTO t1 VALUES (NULL), (0.6039901653008404), (x''); -- 0ms;
PRAGMA optimize; -- 0ms;
INSERT OR ROLLBACK INTO t1(c92) VALUES (0x32884e83), (x''), (NULL); -- 0ms;
VACUUM; -- 0ms;
VACUUM main; -- 0ms;
VACUUM main; -- 0ms;
VACUUM main; -- 0ms;
VACUUM; -- 0ms;
VACUUM; -- 0ms;
VACUUM temp; -- 0ms;
INSERT OR FAIL INTO rt0(c0, c1, c2) VALUES (NULL, NULL, '-999940986'); -- 0ms;
INSERT OR IGNORE INTO t1 VALUES (x''), (x''), (0.05616156052085075); -- 0ms;
INSERT OR IGNORE INTO t1 VALUES (''); -- 0ms;
INSERT OR ROLLBACK INTO t1 VALUES (0.3587518467852986); -- 0ms;
COMMIT TRANSACTION; -- 0ms;
UPDATE OR IGNORE rt0 SET (c0)=(x''); -- 0ms;
INSERT OR IGNORE INTO rt0(c3, c0, c2) VALUES (NULL, x'1a1a', 0xffffffffa79daf38), ('', 0.04839662213198548, '-632652568'), (0.3294049730631817, -2.40842722E8, ((('-784913618')) NOT BETWEEN ((CAST(0.8621725431089944 AS TEXT))) AND ((LOWER(DISTINCT x'8f3f'))))), ('0.3294049730631817', 0.6048053358450157, 0.6983971326025803), (0.046592559244756804, '847793795', NULL); -- 0ms;
COMMIT; -- 0ms;
PRAGMA main.soft_heap_limit; -- 0ms;
INSERT OR IGNORE INTO rt0(c1) VALUES (-1.482838216E9); -- 11ms;
UPDATE OR IGNORE t1 SET c92='hnwu', c92=1105849418 WHERE ((t1.c92 COLLATE RTRIM) NOT BETWEEN (JULIANDAY(t1.c92, t1.c92, t1.c92, t1.c92, '-1516537713')) AND ((((t1.c92)) BETWEEN ((t1.c92)) AND ((t1.c92))))); -- 1ms;
PRAGMA main.incremental_vacuum; -- 0ms;
PRAGMA temp.checkpoint_fullfsync; -- 0ms;
UPDATE OR IGNORE rt0 SET (c1)=(NULL) WHERE ((((rt0.c1)OR(rt0.c2))) NOTNULL); -- 0ms;
INSERT OR IGNORE INTO t1 VALUES ('[R]'); -- 0ms;
UPDATE OR IGNORE t1 SET (c92)=('*[e0SWk'); -- 0ms;
UPDATE OR IGNORE rt0 SET c2='2\nL傜B,gzw'; -- 1ms;
INSERT OR ABORT INTO t1 VALUES ('UtQU'); -- 1ms;
INSERT OR IGNORE INTO rt0(c3) VALUES (''); -- 0ms;
PRAGMA main.ignore_check_constraints = true; -- 0ms;
END TRANSACTION; -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO rt0(c1, c3) VALUES ('', NULL); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR IGNORE rt0 SET c0='-999940986' WHERE ((rt0.c1) NOT NULL); -- 1ms;
ALTER TABLE t1 RENAME COLUMN c92 TO c79; -- 1ms;
ALTER TABLE t1 RENAME COLUMN c79 TO c1; -- 0ms;
END TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT ALL * FROM rt0;
SELECT * FROM rt0 WHERE ((((x'bd50')) NOT BETWEEN ((((rt0.c1) IS FALSE))) AND ((((rt0.c3)&(rt0.c0)))))) UNION ALL SELECT * FROM rt0 WHERE ((NOT ((((x'bd50')) NOT BETWEEN ((((rt0.c1) IS FALSE))) AND ((((rt0.c3)&(rt0.c0)))))))) UNION ALL SELECT ALL * FROM rt0 WHERE ((((((x'bd50')) NOT BETWEEN ((((rt0.c1) IS FALSE))) AND ((((rt0.c3)&(rt0.c0)))))) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT * FROM t1;
SELECT DISTINCT * FROM t1 WHERE (CAST((~ (t1.c1)) AS INTEGER)) UNION SELECT DISTINCT * FROM t1 WHERE ((NOT (CAST((~ (t1.c1)) AS INTEGER)))) UNION SELECT DISTINCT * FROM t1 WHERE (((CAST((~ (t1.c1)) AS INTEGER)) ISNULL));
SELECT DISTINCT * FROM t1;
SELECT rt0.c0, rt0.c1, rt0.c3 FROM t1, rt0 GROUP BY rt0.c0, rt0.c1, rt0.c3;
SELECT rt0.c0, rt0.c1, rt0.c3 FROM t1, rt0 WHERE (CAST(((rt0.c1) NOTNULL) AS INTEGER)) GROUP BY rt0.c0, rt0.c1, rt0.c3 UNION SELECT ALL rt0.c0, rt0.c1, rt0.c3 FROM t1, rt0 WHERE ((NOT (CAST(((rt0.c1) NOTNULL) AS INTEGER)))) GROUP BY rt0.c0, rt0.c1, rt0.c3 UNION SELECT ALL rt0.c0, rt0.c1, rt0.c3 FROM t1, rt0 WHERE (((CAST(((rt0.c1) NOTNULL) AS INTEGER)) ISNULL)) GROUP BY rt0.c0, rt0.c1, rt0.c3;
SELECT rt0.c0, rt0.c1, rt0.c3 FROM t1, rt0 GROUP BY rt0.c0, rt0.c1, rt0.c3;
SELECT rt0.c1 FROM rt0 INNER JOIN t1 ON (((((rt0.c3) BETWEEN (rt0.c2) AND (rt0.c3))))<=((((rt0.c0) NOT NULL)))) GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 INNER JOIN t1 ON (((((rt0.c3) BETWEEN (rt0.c2) AND (rt0.c3))))<=((((rt0.c0) NOT NULL)))) GROUP BY rt0.c1 HAVING COUNT(GROUP_CONCAT(COUNT(COUNT(rt0.c3))) COLLATE RTRIM) UNION ALL SELECT ALL rt0.c1 FROM rt0 INNER JOIN t1 ON (((((rt0.c3) BETWEEN (rt0.c2) AND (rt0.c3))))<=((((rt0.c0) NOT NULL)))) GROUP BY rt0.c1 HAVING (NOT (COUNT(GROUP_CONCAT(COUNT(COUNT(rt0.c3))) COLLATE RTRIM))) UNION ALL SELECT rt0.c1 FROM rt0 INNER JOIN t1 ON (((((rt0.c3) BETWEEN (rt0.c2) AND (rt0.c3))))<=((((rt0.c0) NOT NULL)))) GROUP BY rt0.c1 HAVING ((COUNT(GROUP_CONCAT(COUNT(COUNT(rt0.c3))) COLLATE RTRIM)) ISNULL);
SELECT ALL rt0.c2, rt0.c3 FROM t1, rt0;
SELECT rt0.c2, rt0.c3 FROM t1, rt0 WHERE ((- (rt0.c0 COLLATE BINARY))) UNION ALL SELECT rt0.c2, rt0.c3 FROM t1, rt0 WHERE ((NOT ((- (rt0.c0 COLLATE BINARY))))) UNION ALL SELECT ALL rt0.c2, rt0.c3 FROM t1, rt0 WHERE ((((- (rt0.c0 COLLATE BINARY))) ISNULL));
SELECT ALL rt0.c2, rt0.c3 FROM t1, rt0;
SELECT DISTINCT rt0.c1, t1.c1 FROM rt0, t1;
SELECT DISTINCT rt0.c1, t1.c1 FROM rt0, t1 WHERE (((((0xfffffffffe0dbcbb)||(rt0.c0)))<=((x'9d61eb30' IN ())))) UNION SELECT DISTINCT rt0.c1, t1.c1 FROM rt0, t1 WHERE ((NOT (((((0xfffffffffe0dbcbb)||(rt0.c0)))<=((x'9d61eb30' IN ())))))) UNION SELECT DISTINCT rt0.c1, t1.c1 FROM rt0, t1 WHERE (((((((0Xfffffffffe0dbcbb)||(rt0.c0)))<=((x'9d61eb30' IN ())))) ISNULL));
SELECT DISTINCT rt0.c1, t1.c1 FROM rt0, t1;
SELECT ALL t1.c1, rt0.c2, rt0.c3 FROM rt0, t1 GROUP BY t1.c1, rt0.c2, rt0.c3;
SELECT ALL t1.c1, rt0.c2, rt0.c3 FROM rt0, t1 WHERE ((((rt0.c2, rt0.c1, rt0.c0)) BETWEEN ((COALESCE(rt0.c2, t1.c1), ((((t1.c1)OR(rt0.c1)))OR(rt0.c1)), (((('')OR(rt0.c1)))OR(rt0.c1)))) AND ((((rt0.c3)/(rt0.c3)), rt0.c2, LIKELY(DISTINCT rt0.c0))))) GROUP BY t1.c1, rt0.c2, rt0.c3 UNION SELECT t1.c1, rt0.c2, rt0.c3 FROM rt0, t1 WHERE ((NOT ((((rt0.c2, rt0.c1, rt0.c0)) BETWEEN ((COALESCE(rt0.c2, t1.c1), ((((t1.c1)OR(rt0.c1)))OR(rt0.c1)), (((('')OR(rt0.c1)))OR(rt0.c1)))) AND ((((rt0.c3)/(rt0.c3)), rt0.c2, LIKELY(DISTINCT rt0.c0))))))) GROUP BY t1.c1, rt0.c2, rt0.c3 UNION SELECT ALL t1.c1, rt0.c2, rt0.c3 FROM rt0, t1 WHERE ((((((rt0.c2, rt0.c1, rt0.c0)) BETWEEN ((COALESCE(rt0.c2, t1.c1), ((((t1.c1)OR(rt0.c1)))OR(rt0.c1)), (((('')OR(rt0.c1)))OR(rt0.c1)))) AND ((((rt0.c3)/(rt0.c3)), rt0.c2, LIKELY(DISTINCT rt0.c0))))) ISNULL)) GROUP BY t1.c1, rt0.c2, rt0.c3;
SELECT ALL t1.c1, rt0.c2, rt0.c3 FROM rt0, t1 GROUP BY t1.c1, rt0.c2, rt0.c3;
SELECT t1.c1 FROM t1 GROUP BY t1.c1;
SELECT ALL t1.c1 FROM t1 GROUP BY t1.c1 HAVING NULL UNION ALL SELECT t1.c1 FROM t1 GROUP BY t1.c1 HAVING (NOT (NULL)) UNION ALL SELECT ALL t1.c1 FROM t1 GROUP BY t1.c1 HAVING ((NULL) ISNULL);
SELECT t1.c1 FROM t1 GROUP BY t1.c1;
SELECT ALL t1.c1 FROM t1 GROUP BY t1.c1 HAVING NULL UNION ALL SELECT t1.c1 FROM t1 GROUP BY t1.c1 HAVING (NOT (NULL)) UNION ALL SELECT ALL t1.c1 FROM t1 GROUP BY t1.c1 HAVING ((NULL) ISNULL);
SELECT t1.c1 FROM t1 GROUP BY t1.c1;
SELECT t1.c1 FROM t1;
SELECT ALL t1.c1 FROM t1 WHERE (t1.c1) UNION ALL SELECT ALL t1.c1 FROM t1 WHERE ((NOT (t1.c1))) UNION ALL SELECT ALL t1.c1 FROM t1 WHERE (((t1.c1) ISNULL));
SELECT t1.c1 FROM t1;
SELECT DISTINCT rt0.c0, t1.c1 FROM rt0 NATURAL JOIN t1;
SELECT DISTINCT rt0.c0, t1.c1 FROM rt0 NATURAL JOIN t1 WHERE (CAST(rt0.c2 AS REAL) COLLATE BINARY) UNION SELECT DISTINCT rt0.c0, t1.c1 FROM rt0 NATURAL JOIN t1 WHERE ((NOT (CAST(rt0.c2 AS REAL) COLLATE BINARY))) UNION SELECT DISTINCT rt0.c0, t1.c1 FROM rt0 NATURAL JOIN t1 WHERE (((CAST(rt0.c2 AS REAL) COLLATE BINARY) ISNULL));
SELECT DISTINCT rt0.c0, t1.c1 FROM rt0 NATURAL JOIN t1;
SELECT ALL rt0.c1 FROM t1 RIGHT OUTER JOIN rt0 ON (((('-1884954729') BETWEEN (rt0.c1) AND (rt0.c0))) NOT BETWEEN (((t1.c1)IS NOT(t1.c1))) AND (CASE rt0.c1  WHEN 0Xffffffffa79daf38 THEN rt0.c1 ELSE rt0.c1 END)) GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM t1 RIGHT OUTER JOIN rt0 ON (((('-1884954729') BETWEEN (rt0.c1) AND (rt0.c0))) NOT BETWEEN (((t1.c1)IS NOT(t1.c1))) AND (CASE rt0.c1  WHEN 0Xffffffffa79daf38 THEN rt0.c1 ELSE rt0.c1 END)) WHERE (CASE WHEN ((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c0)) THEN ((((((((x'a37b')AND(rt0.c0)))OR(rt0.c2)))OR(rt0.c0)))AND(rt0.c1)) ELSE CASE rt0.c3  WHEN t1.c1 THEN NULL END END) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM t1 RIGHT OUTER JOIN rt0 ON (((('-1884954729') BETWEEN (rt0.c1) AND (rt0.c0))) NOT BETWEEN (((t1.c1)IS NOT(t1.c1))) AND (CASE rt0.c1  WHEN 0xffffffffa79daf38 THEN rt0.c1 ELSE rt0.c1 END)) WHERE ((NOT (CASE WHEN ((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c0)) THEN ((((((((x'a37b')AND(rt0.c0)))OR(rt0.c2)))OR(rt0.c0)))AND(rt0.c1)) ELSE CASE rt0.c3  WHEN t1.c1 THEN NULL END END))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM t1 RIGHT OUTER JOIN rt0 ON (((('-1884954729') BETWEEN (rt0.c1) AND (rt0.c0))) NOT BETWEEN (((t1.c1)IS NOT(t1.c1))) AND (CASE rt0.c1  WHEN 0Xffffffffa79daf38 THEN rt0.c1 ELSE rt0.c1 END)) WHERE (((CASE WHEN ((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c0)) THEN ((((((((x'a37b')AND(rt0.c0)))OR(rt0.c2)))OR(rt0.c0)))AND(rt0.c1)) ELSE CASE rt0.c3  WHEN t1.c1 THEN NULL END END) ISNULL)) GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM t1 RIGHT OUTER JOIN rt0 ON (((('-1884954729') BETWEEN (rt0.c1) AND (rt0.c0))) NOT BETWEEN (((t1.c1)IS NOT(t1.c1))) AND (CASE rt0.c1  WHEN 0Xffffffffa79daf38 THEN rt0.c1 ELSE rt0.c1 END)) GROUP BY rt0.c1;
SELECT rt0.c3 FROM t1 INNER JOIN rt0 ON (((~ (rt0.c3))) NOT BETWEEN (((((((((t1.c1)AND(rt0.c2)))OR(rt0.c2)))AND('B')))OR(rt0.c0))) AND (((((rt0.c1)OR(rt0.c3)))OR(rt0.c2)))) GROUP BY rt0.c3;
SELECT rt0.c3 FROM t1 INNER JOIN rt0 ON (((~ (rt0.c3))) NOT BETWEEN (((((((((t1.c1)AND(rt0.c2)))OR(rt0.c2)))AND('B')))OR(rt0.c0))) AND (((((rt0.c1)OR(rt0.c3)))OR(rt0.c2)))) GROUP BY rt0.c3 HAVING '-986361065' UNION ALL SELECT rt0.c3 FROM t1 INNER JOIN rt0 ON (((~ (rt0.c3))) NOT BETWEEN (((((((((t1.c1)AND(rt0.c2)))OR(rt0.c2)))AND('B')))OR(rt0.c0))) AND (((((rt0.c1)OR(rt0.c3)))OR(rt0.c2)))) GROUP BY rt0.c3 HAVING (NOT ('-986361065')) UNION ALL SELECT ALL rt0.c3 FROM t1 INNER JOIN rt0 ON (((~ (rt0.c3))) NOT BETWEEN (((((((((t1.c1)AND(rt0.c2)))OR(rt0.c2)))AND('B')))OR(rt0.c0))) AND (((((rt0.c1)OR(rt0.c3)))OR(rt0.c2)))) GROUP BY rt0.c3 HAVING (('-986361065') ISNULL);
SELECT rt0.c3 FROM t1 INNER JOIN rt0 ON (((~ (rt0.c3))) NOT BETWEEN (((((((((t1.c1)AND(rt0.c2)))OR(rt0.c2)))AND('B')))OR(rt0.c0))) AND (((((rt0.c1)OR(rt0.c3)))OR(rt0.c2)))) GROUP BY rt0.c3;
SELECT rt0.c3 FROM t1 INNER JOIN rt0 ON (((~ (rt0.c3))) NOT BETWEEN (((((((((t1.c1)AND(rt0.c2)))OR(rt0.c2)))AND('B')))OR(rt0.c0))) AND (((((rt0.c1)OR(rt0.c3)))OR(rt0.c2)))) GROUP BY rt0.c3 HAVING '-986361065' UNION ALL SELECT rt0.c3 FROM t1 INNER JOIN rt0 ON (((~ (rt0.c3))) NOT BETWEEN (((((((((t1.c1)AND(rt0.c2)))OR(rt0.c2)))AND('B')))OR(rt0.c0))) AND (((((rt0.c1)OR(rt0.c3)))OR(rt0.c2)))) GROUP BY rt0.c3 HAVING (NOT ('-986361065')) UNION ALL SELECT ALL rt0.c3 FROM t1 INNER JOIN rt0 ON (((~ (rt0.c3))) NOT BETWEEN (((((((((t1.c1)AND(rt0.c2)))OR(rt0.c2)))AND('B')))OR(rt0.c0))) AND (((((rt0.c1)OR(rt0.c3)))OR(rt0.c2)))) GROUP BY rt0.c3 HAVING (('-986361065') ISNULL);
SELECT rt0.c3 FROM t1 INNER JOIN rt0 ON (((~ (rt0.c3))) NOT BETWEEN (((((((((t1.c1)AND(rt0.c2)))OR(rt0.c2)))AND('B')))OR(rt0.c0))) AND (((((rt0.c1)OR(rt0.c3)))OR(rt0.c2)))) GROUP BY rt0.c3;
SELECT * FROM t1, rt0;
SELECT * FROM t1, rt0 WHERE (CASE WHEN (((rt0.c0))<((rt0.c3))) THEN CAST(rt0.c0 AS TEXT) END) UNION ALL SELECT ALL * FROM t1, rt0 WHERE ((NOT (CASE WHEN (((rt0.c0))<((rt0.c3))) THEN CAST(rt0.c0 AS TEXT) END))) UNION ALL SELECT ALL * FROM t1, rt0 WHERE (((CASE WHEN (((rt0.c0))<((rt0.c3))) THEN CAST(rt0.c0 AS TEXT) END) ISNULL));
SELECT * FROM t1, rt0;
SELECT DISTINCT rt0.c1, t1.c1, rt0.c2, rt0.c0, rt0.c3 FROM rt0, t1;
SELECT DISTINCT rt0.c1, t1.c1, rt0.c2, rt0.c0, rt0.c3 FROM rt0, t1 WHERE (((CASE WHEN rt0.c2 THEN '-778721508' WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN x'4d6e' END) NOTNULL)) UNION SELECT DISTINCT rt0.c1, t1.c1, rt0.c2, rt0.c0, rt0.c3 FROM rt0, t1 WHERE ((NOT (((CASE WHEN rt0.c2 THEN '-778721508' WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN x'4d6e' END) NOTNULL)))) UNION SELECT DISTINCT rt0.c1, t1.c1, rt0.c2, rt0.c0, rt0.c3 FROM rt0, t1 WHERE (((((CASE WHEN rt0.c2 THEN '-778721508' WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN x'4d6e' END) NOTNULL)) ISNULL));
SELECT DISTINCT rt0.c1, t1.c1, rt0.c2, rt0.c0, rt0.c3 FROM rt0, t1;
SELECT ALL rt0.c0, t1.c1, rt0.c2, rt0.c3 FROM t1, rt0 GROUP BY rt0.c0, t1.c1, rt0.c2, rt0.c3;
SELECT rt0.c0, t1.c1, rt0.c2, rt0.c3 FROM t1, rt0 WHERE (((x'')%(CAST(rt0.c2 AS NUMERIC)))) GROUP BY rt0.c0, t1.c1, rt0.c2, rt0.c3 UNION SELECT rt0.c0, t1.c1, rt0.c2, rt0.c3 FROM t1, rt0 WHERE ((NOT (((x'')%(CAST(rt0.c2 AS NUMERIC)))))) GROUP BY rt0.c0, t1.c1, rt0.c2, rt0.c3 UNION SELECT ALL rt0.c0, t1.c1, rt0.c2, rt0.c3 FROM t1, rt0 WHERE (((((x'')%(CAST(rt0.c2 AS NUMERIC)))) ISNULL)) GROUP BY rt0.c0, t1.c1, rt0.c2, rt0.c3;
SELECT ALL rt0.c0, t1.c1, rt0.c2, rt0.c3 FROM t1, rt0 GROUP BY rt0.c0, t1.c1, rt0.c2, rt0.c3;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING GROUP_CONCAT(((MAX(AVG(TOTAL(rt0.c1)))) NOT NULL)) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING (NOT (GROUP_CONCAT(((MAX(AVG(TOTAL(rt0.c1)))) NOT NULL)))) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0 HAVING ((GROUP_CONCAT(((MAX(AVG(TOTAL(rt0.c1)))) NOT NULL))) ISNULL);
SELECT ALL MAX((((('-1542759189')>(x'f17b'))) NOTNULL)) FROM rt0 ORDER BY CAST((rt0.c0 IN (rt0.c3)) AS TEXT) DESC  NULLS FIRST, CASE ((rt0.c1) NOT NULL)  WHEN ((rt0.c0) NOT NULL) THEN ((rt0.c0)<(rt0.c3)) END ASC, (((((rt0.c3)) BETWEEN ((rt0.c0)) AND ((rt0.c2))))|(rt0.c2)) ASC;
SELECT ALL rt0.c2, rt0.c1, rt0.c3, rt0.c0 FROM rt0;
SELECT ALL rt0.c2, rt0.c1, rt0.c3, rt0.c0 FROM rt0 WHERE (rt0.c3) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c3, rt0.c0 FROM rt0 WHERE ((NOT (rt0.c3))) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c3, rt0.c0 FROM rt0 WHERE (((rt0.c3) ISNULL));
SELECT ALL rt0.c2, rt0.c1, rt0.c3, rt0.c0 FROM rt0;
SELECT DISTINCT * FROM rt0 NOT INDEXED, t1;
SELECT DISTINCT * FROM rt0, t1 WHERE ((((t1.c1, rt0.c1, rt0.c0)) NOT BETWEEN ((t1.c1 COLLATE NOCASE, rt0.c0, (~ (rt0.c1)))) AND ((((((t1.c1)AND('tz58aE*亃,')))AND(rt0.c1)), rt0.c1 COLLATE NOCASE, CAST(rt0.c0 AS TEXT))))) UNION SELECT DISTINCT * FROM rt0, t1 WHERE ((NOT ((((t1.c1, rt0.c1, rt0.c0)) NOT BETWEEN ((t1.c1 COLLATE NOCASE, rt0.c0, (~ (rt0.c1)))) AND ((((((t1.c1)AND('tz58aE*亃,')))AND(rt0.c1)), rt0.c1 COLLATE NOCASE, CAST(rt0.c0 AS TEXT))))))) UNION SELECT DISTINCT * FROM rt0, t1 WHERE ((((((t1.c1, rt0.c1, rt0.c0)) NOT BETWEEN ((t1.c1 COLLATE NOCASE, rt0.c0, (~ (rt0.c1)))) AND ((((((t1.c1)AND('tz58aE*亃,')))AND(rt0.c1)), rt0.c1 COLLATE NOCASE, CAST(rt0.c0 AS TEXT))))) ISNULL));
SELECT DISTINCT * FROM rt0 NOT INDEXED, t1;
SELECT ALL rt0.c0, t1.c1, rt0.c2, rt0.c1 FROM t1, rt0 GROUP BY rt0.c0, t1.c1, rt0.c2, rt0.c1;
SELECT ALL rt0.c0, t1.c1, rt0.c2, rt0.c1 FROM t1, rt0 WHERE ((((~ (rt0.c2))) NOT NULL)) GROUP BY rt0.c0, t1.c1, rt0.c2, rt0.c1 UNION SELECT ALL rt0.c0, t1.c1, rt0.c2, rt0.c1 FROM t1, rt0 WHERE ((NOT ((((~ (rt0.c2))) NOT NULL)))) GROUP BY rt0.c0, t1.c1, rt0.c2, rt0.c1 UNION SELECT ALL rt0.c0, t1.c1, rt0.c2, rt0.c1 FROM t1, rt0 WHERE ((((((~ (rt0.c2))) NOT NULL)) ISNULL)) GROUP BY rt0.c0, t1.c1, rt0.c2, rt0.c1;
SELECT ALL rt0.c0, t1.c1, rt0.c2, rt0.c1 FROM t1, rt0 GROUP BY rt0.c0, t1.c1, rt0.c2, rt0.c1;
SELECT ALL t1.c1 FROM t1 GROUP BY t1.c1;
SELECT ALL t1.c1 FROM t1 GROUP BY t1.c1 HAVING CASE MIN(SUM(t1.c1))  WHEN SUM(COUNT(t1.c1)) THEN COUNT(TOTAL(COUNT(MAX(t1.c1)))) END UNION ALL SELECT ALL t1.c1 FROM t1 GROUP BY t1.c1 HAVING (NOT (CASE MIN(SUM(t1.c1))  WHEN SUM(COUNT(t1.c1)) THEN COUNT(TOTAL(COUNT(MAX(t1.c1)))) END)) UNION ALL SELECT t1.c1 FROM t1 GROUP BY t1.c1 HAVING ((CASE MIN(SUM(t1.c1))  WHEN SUM(COUNT(t1.c1)) THEN COUNT(TOTAL(COUNT(MAX(t1.c1)))) END) ISNULL);
SELECT ALL rt0.c2, rt0.c1, rt0.c3 FROM rt0, t1;
SELECT rt0.c2, rt0.c1, rt0.c3 FROM rt0, t1 WHERE (t1.c1) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c3 FROM rt0, t1 WHERE ((NOT (t1.c1))) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c3 FROM rt0, t1 WHERE (((t1.c1) ISNULL));
SELECT ALL rt0.c2, rt0.c1, rt0.c3 FROM rt0, t1;
SELECT DISTINCT rt0.c2, t1.c1, rt0.c1, rt0.c0 FROM t1 INNER JOIN rt0 ON ((CAST(t1.c1 AS BLOB)) NOT BETWEEN (CAST(rt0.c1 AS INTEGER)) AND ((((t1.c1))>=((0x72e8ac9)))));
SELECT DISTINCT rt0.c2, t1.c1, rt0.c1, rt0.c0 FROM t1 INNER JOIN rt0 ON ((CAST(t1.c1 AS BLOB)) NOT BETWEEN (CAST(rt0.c1 AS INTEGER)) AND ((((t1.c1))>=((0x72e8ac9))))) WHERE ((((t1.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c3)))) UNION SELECT DISTINCT rt0.c2, t1.c1, rt0.c1, rt0.c0 FROM t1 INNER JOIN rt0 ON ((CAST(t1.c1 AS BLOB)) NOT BETWEEN (CAST(rt0.c1 AS INTEGER)) AND ((((t1.c1))>=((0X72e8ac9))))) WHERE ((NOT ((((t1.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c3)))))) UNION SELECT DISTINCT rt0.c2, t1.c1, rt0.c1, rt0.c0 FROM t1 INNER JOIN rt0 ON ((CAST(t1.c1 AS BLOB)) NOT BETWEEN (CAST(rt0.c1 AS INTEGER)) AND ((((t1.c1))>=((0x72e8ac9))))) WHERE ((((((t1.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c3)))) ISNULL));
SELECT DISTINCT rt0.c2, t1.c1, rt0.c1, rt0.c0 FROM t1 INNER JOIN rt0 ON ((CAST(t1.c1 AS BLOB)) NOT BETWEEN (CAST(rt0.c1 AS INTEGER)) AND ((((t1.c1))>=((0x72e8ac9)))));
SELECT rt0.c0 FROM rt0, t1 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0, t1 WHERE (((t1.c1 COLLATE RTRIM) ISNULL)) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM rt0, t1 WHERE ((NOT (((t1.c1 COLLATE RTRIM) ISNULL)))) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM rt0, t1 WHERE (((((t1.c1 COLLATE RTRIM) ISNULL)) ISNULL)) GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0, t1 GROUP BY rt0.c0;
SELECT ALL rt0.c1, rt0.c3, rt0.c2, t1.c1 FROM t1, rt0 GROUP BY rt0.c1, rt0.c3, rt0.c2, t1.c1;
SELECT rt0.c1, rt0.c3, rt0.c2, t1.c1 FROM t1, rt0 GROUP BY rt0.c1, rt0.c3, rt0.c2, t1.c1 HAVING CAST(((COUNT(GROUP_CONCAT(t1.c1))) NOTNULL) AS REAL) UNION ALL SELECT rt0.c1, rt0.c3, rt0.c2, t1.c1 FROM t1, rt0 GROUP BY rt0.c1, rt0.c3, rt0.c2, t1.c1 HAVING (NOT (CAST(((COUNT(GROUP_CONCAT(t1.c1))) NOTNULL) AS REAL))) UNION ALL SELECT rt0.c1, rt0.c3, rt0.c2, t1.c1 FROM t1, rt0 GROUP BY rt0.c1, rt0.c3, rt0.c2, t1.c1 HAVING ((CAST(((COUNT(GROUP_CONCAT(t1.c1))) NOTNULL) AS REAL)) ISNULL);
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE (((rt0.c3) BETWEEN ((((''))>=((rt0.c1)))) AND ((((rt0.c0, rt0.c2, '1')) BETWEEN ((rt0.c3, rt0.c2, rt0.c0)) AND ((rt0.c3, rt0.c0, rt0.c2)))))) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (((rt0.c3) BETWEEN ((((''))>=((rt0.c1)))) AND ((((rt0.c0, rt0.c2, '1')) BETWEEN ((rt0.c3, rt0.c2, rt0.c0)) AND ((rt0.c3, rt0.c0, rt0.c2)))))))) UNION ALL SELECT * FROM rt0 WHERE (((((rt0.c3) BETWEEN ((((''))>=((rt0.c1)))) AND ((((rt0.c0, rt0.c2, '1')) BETWEEN ((rt0.c3, rt0.c2, rt0.c0)) AND ((rt0.c3, rt0.c0, rt0.c2)))))) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c1, t1.c1 FROM rt0, t1;
SELECT DISTINCT rt0.c2, rt0.c1, t1.c1 FROM rt0, t1 WHERE ((((rt0.c2)) BETWEEN ((CASE rt0.c3  WHEN rt0.c3 THEN rt0.c1 END)) AND ((rt0.c1 COLLATE BINARY)))) UNION SELECT DISTINCT rt0.c2, rt0.c1, t1.c1 FROM rt0, t1 WHERE ((NOT ((((rt0.c2)) BETWEEN ((CASE rt0.c3  WHEN rt0.c3 THEN rt0.c1 END)) AND ((rt0.c1 COLLATE BINARY)))))) UNION SELECT DISTINCT rt0.c2, rt0.c1, t1.c1 FROM rt0, t1 WHERE ((((((rt0.c2)) BETWEEN ((CASE rt0.c3  WHEN rt0.c3 THEN rt0.c1 END)) AND ((rt0.c1 COLLATE BINARY)))) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c1, t1.c1 FROM rt0, t1;
SELECT t1.c1 FROM t1 GROUP BY t1.c1;
SELECT t1.c1 FROM t1 WHERE (IFNULL(CAST(t1.c1 AS INTEGER), ((t1.c1)GLOB(t1.c1)))) GROUP BY t1.c1 UNION SELECT ALL t1.c1 FROM t1 WHERE ((NOT (IFNULL(CAST(t1.c1 AS INTEGER), ((t1.c1)GLOB(t1.c1)))))) GROUP BY t1.c1 UNION SELECT ALL t1.c1 FROM t1 WHERE (((IFNULL(CAST(t1.c1 AS INTEGER), ((t1.c1)GLOB(t1.c1)))) ISNULL)) GROUP BY t1.c1;
SELECT t1.c1 FROM t1 GROUP BY t1.c1;
SELECT rt0.c1, rt0.c0, t1.c1, rt0.c2 FROM rt0, t1 GROUP BY rt0.c1, rt0.c0, t1.c1, rt0.c2;
SELECT rt0.c1, rt0.c0, t1.c1, rt0.c2 FROM rt0, t1 GROUP BY rt0.c1, rt0.c0, t1.c1, rt0.c2 HAVING AVG(((TOTAL(rt0.c1))==(COUNT(COUNT(COUNT(*)))))) UNION ALL SELECT rt0.c1, rt0.c0, t1.c1, rt0.c2 FROM rt0, t1 GROUP BY rt0.c1, rt0.c0, t1.c1, rt0.c2 HAVING (NOT (AVG(((TOTAL(rt0.c1))=(COUNT(COUNT(COUNT(*)))))))) UNION ALL SELECT ALL rt0.c1, rt0.c0, t1.c1, rt0.c2 FROM rt0, t1 GROUP BY rt0.c1, rt0.c0, t1.c1, rt0.c2 HAVING ((AVG(((TOTAL(rt0.c1))=(COUNT(COUNT(COUNT(*))))))) ISNULL);
SELECT * FROM t1, rt0;
SELECT ALL * FROM t1, rt0 WHERE (((((((((((rt0.c1)AND(t1.c1)))AND(rt0.c0)))AND(rt0.c1)))OR(rt0.c2))) NOT NULL)) UNION ALL SELECT ALL * FROM t1, rt0 WHERE ((NOT (((((((((((rt0.c1)AND(t1.c1)))AND(rt0.c0)))AND(rt0.c1)))OR(rt0.c2))) NOT NULL)))) UNION ALL SELECT ALL * FROM t1, rt0 WHERE (((((((((((((rt0.c1)AND(t1.c1)))AND(rt0.c0)))AND(rt0.c1)))OR(rt0.c2))) NOT NULL)) ISNULL));
SELECT * FROM t1, rt0;
SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0, rt0.c3 FROM t1 FULL OUTER JOIN rt0 ON ((rt0.c1)|(rt0.c2)) COLLATE BINARY;
SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0, rt0.c3 FROM t1 FULL OUTER JOIN rt0 ON ((rt0.c1)|(rt0.c2)) COLLATE BINARY WHERE (((((rt0.c0)GLOB(rt0.c2))) NOT BETWEEN ((rt0.c3 IN ())) AND (((NULL)<=(t1.c1))))) UNION SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0, rt0.c3 FROM t1 FULL OUTER JOIN rt0 ON ((rt0.c1)|(rt0.c2)) COLLATE BINARY WHERE ((NOT (((((rt0.c0)GLOB(rt0.c2))) NOT BETWEEN ((rt0.c3 IN ())) AND (((NULL)<=(t1.c1))))))) UNION SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0, rt0.c3 FROM t1 FULL OUTER JOIN rt0 ON ((rt0.c1)|(rt0.c2)) COLLATE BINARY WHERE (((((((rt0.c0)GLOB(rt0.c2))) NOT BETWEEN ((rt0.c3 IN ())) AND (((NULL)<=(t1.c1))))) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0, rt0.c3 FROM t1 FULL OUTER JOIN rt0 ON ((rt0.c1)|(rt0.c2)) COLLATE BINARY;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM t1, rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT rt0.c2, rt0.c1, rt0.c0 FROM t1, rt0 WHERE (CAST(t1.c1 AS REAL)) GROUP BY rt0.c2, rt0.c1, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM t1, rt0 WHERE ((NOT (CAST(t1.c1 AS REAL)))) GROUP BY rt0.c2, rt0.c1, rt0.c0 UNION SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM t1, rt0 WHERE (((CAST(t1.c1 AS REAL)) ISNULL)) GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT ALL rt0.c2, rt0.c1, rt0.c0 FROM t1, rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0;
SELECT ALL rt0.c1, rt0.c3, rt0.c2, t1.c1 FROM rt0, t1 GROUP BY rt0.c1, rt0.c3, rt0.c2, t1.c1;
SELECT ALL rt0.c1, rt0.c3, rt0.c2, t1.c1 FROM rt0, t1 NOT INDEXED GROUP BY rt0.c1, rt0.c3, rt0.c2, t1.c1 HAVING MIN(TRIM(AVG(rt0.c1))) UNION ALL SELECT rt0.c1, rt0.c3, rt0.c2, t1.c1 FROM rt0, t1 GROUP BY rt0.c1, rt0.c3, rt0.c2, t1.c1 HAVING (NOT (MIN(TRIM(AVG(rt0.c1))))) UNION ALL SELECT ALL rt0.c1, rt0.c3, rt0.c2, t1.c1 FROM rt0, t1 GROUP BY rt0.c1, rt0.c3, rt0.c2, t1.c1 HAVING ((MIN(TRIM(AVG(rt0.c1)))) ISNULL);
SELECT ALL MAX(rt0.c0) FROM rt0;
SELECT ALL * FROM t1, rt0;
SELECT * FROM t1, rt0 WHERE (((((((NULL)!=(rt0.c2)))OR(0.9997085367624785)))AND(((((rt0.c1)OR(rt0.c0)))OR(rt0.c1))))) UNION ALL SELECT * FROM t1, rt0 WHERE ((NOT (((((((NULL)!=(rt0.c2)))OR(0.9997085367624785)))AND(((((rt0.c1)OR(rt0.c0)))OR(rt0.c1))))))) UNION ALL SELECT ALL * FROM t1, rt0 WHERE (((((((((NULL)!=(rt0.c2)))OR(0.9997085367624785)))AND(((((rt0.c1)OR(rt0.c0)))OR(rt0.c1))))) ISNULL));
SELECT ALL * FROM t1, rt0;
SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((((rt0.c1)) BETWEEN ((CASE rt0.c3  WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c1 END)) AND ((CAST(rt0.c1 AS NUMERIC))))) UNION SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT ((((rt0.c1)) BETWEEN ((CASE rt0.c3  WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c1 END)) AND ((CAST(rt0.c1 AS NUMERIC))))))) UNION SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((((((rt0.c1)) BETWEEN ((CASE rt0.c3  WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c1 END)) AND ((CAST(rt0.c1 AS NUMERIC))))) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c1, rt0.c0 FROM rt0;
SELECT rt0.c2, t1.c1, rt0.c1 FROM t1, rt0 GROUP BY rt0.c2, t1.c1, rt0.c1;
SELECT rt0.c2, t1.c1, rt0.c1 FROM t1, rt0 WHERE (((CASE WHEN t1.c1 THEN t1.c1 ELSE rt0.c1 END)>>(((rt0.c0)OR(rt0.c1))))) GROUP BY rt0.c2, t1.c1, rt0.c1 UNION SELECT ALL rt0.c2, t1.c1, rt0.c1 FROM t1, rt0 WHERE ((NOT (((CASE WHEN t1.c1 THEN t1.c1 ELSE rt0.c1 END)>>(((rt0.c0)OR(rt0.c1))))))) GROUP BY rt0.c2, t1.c1, rt0.c1 UNION SELECT ALL rt0.c2, t1.c1, rt0.c1 FROM t1, rt0 WHERE (((((CASE WHEN t1.c1 THEN t1.c1 ELSE rt0.c1 END)>>(((rt0.c0)OR(rt0.c1))))) ISNULL)) GROUP BY rt0.c2, t1.c1, rt0.c1;
SELECT rt0.c2, t1.c1, rt0.c1 FROM t1, rt0 GROUP BY rt0.c2, t1.c1, rt0.c1;
SELECT rt0.c0, rt0.c1 FROM rt0 FULL OUTER JOIN t1 ON 'c(辗' GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 FULL OUTER JOIN t1 ON 'c(辗' GROUP BY rt0.c0, rt0.c1 HAVING MIN(AVG(TOTAL(rt0.c1))) UNION ALL SELECT ALL rt0.c0, rt0.c1 FROM rt0 FULL OUTER JOIN t1 ON 'c(辗' GROUP BY rt0.c0, rt0.c1 HAVING (NOT (MIN(AVG(TOTAL(rt0.c1))))) UNION ALL SELECT rt0.c0, rt0.c1 FROM rt0 FULL OUTER JOIN t1 ON 'c(辗' GROUP BY rt0.c0, rt0.c1 HAVING ((MIN(AVG(TOTAL(rt0.c1)))) ISNULL);
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE (((((((((rt0.c0)AND(rt0.c1)))OR(rt0.c0)))OR(CAST(rt0.c1 AS NUMERIC))))OR((rt0.c2 IN ())))) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (((((((((rt0.c0)AND(rt0.c1)))OR(rt0.c0)))OR(CAST(rt0.c1 AS NUMERIC))))OR((rt0.c2 IN ())))))) UNION ALL SELECT ALL * FROM rt0 WHERE (((((((((((rt0.c0)AND(rt0.c1)))OR(rt0.c0)))OR(CAST(rt0.c1 AS NUMERIC))))OR((rt0.c2 IN ())))) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c2 FROM rt0 WHERE (-1516537713) UNION SELECT DISTINCT rt0.c2 FROM rt0 WHERE ((NOT (-1516537713))) UNION SELECT DISTINCT rt0.c2 FROM rt0 WHERE (((-1516537713) ISNULL));
SELECT DISTINCT rt0.c2 FROM rt0;
SELECT rt0.c1 FROM t1, rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM t1, rt0 WHERE (CASE WHEN (NOT (0.3294049730631817)) THEN (rt0.c2 IN (rt0.c3)) END) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM t1, rt0 WHERE ((NOT (CASE WHEN (NOT (0.3294049730631817)) THEN (rt0.c2 IN (rt0.c3)) END))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM t1, rt0 WHERE (((CASE WHEN (NOT (0.3294049730631817)) THEN (rt0.c2 IN (rt0.c3)) END) ISNULL)) GROUP BY rt0.c1;
SELECT rt0.c1 FROM t1, rt0 GROUP BY rt0.c1;
SELECT ALL t1.c1 FROM t1 GROUP BY t1.c1;
SELECT ALL t1.c1 FROM t1 GROUP BY t1.c1 HAVING GROUP_CONCAT(COUNT('-633710913') COLLATE BINARY) UNION ALL SELECT ALL t1.c1 FROM t1 GROUP BY t1.c1 HAVING (NOT (GROUP_CONCAT(COUNT('-633710913') COLLATE BINARY))) UNION ALL SELECT t1.c1 FROM t1 GROUP BY t1.c1 HAVING ((GROUP_CONCAT(COUNT('-633710913') COLLATE BINARY)) ISNULL);
SELECT ALL TOTAL(((((((rt0.c1)OR(rt0.c0)))OR('7qqG?}U䷹')))GLOB(x'' COLLATE BINARY))) FROM rt0, t1 ORDER BY rt0.c0;
SELECT rt0.c2, rt0.c1, t1.c1 FROM rt0, t1;
SELECT ALL rt0.c2, rt0.c1, t1.c1 FROM rt0, t1 WHERE ((~ (((rt0.c1)!=(rt0.c3))))) UNION ALL SELECT rt0.c2, rt0.c1, t1.c1 FROM rt0, t1 WHERE ((NOT ((~ (((rt0.c1)<>(rt0.c3))))))) UNION ALL SELECT rt0.c2, rt0.c1, t1.c1 FROM rt0, t1 WHERE ((((~ (((rt0.c1)<>(rt0.c3))))) ISNULL));
SELECT rt0.c2, rt0.c1, t1.c1 FROM rt0, t1;
SELECT DISTINCT t1.c1 FROM t1;
SELECT DISTINCT t1.c1 FROM t1 WHERE ((((((NULL, t1.c1, t1.c1)) BETWEEN ((t1.c1, t1.c1, '')) AND ((t1.c1, t1.c1, t1.c1)))) BETWEEN (((t1.c1)LIKE(t1.c1))) AND (((t1.c1) NOT NULL)))) UNION SELECT DISTINCT t1.c1 FROM t1 WHERE ((NOT ((((((NULL, t1.c1, t1.c1)) BETWEEN ((t1.c1, t1.c1, '')) AND ((t1.c1, t1.c1, t1.c1)))) BETWEEN (((t1.c1)LIKE(t1.c1))) AND (((t1.c1) NOT NULL)))))) UNION SELECT DISTINCT t1.c1 FROM t1 WHERE ((((((((NULL, t1.c1, t1.c1)) BETWEEN ((t1.c1, t1.c1, '')) AND ((t1.c1, t1.c1, t1.c1)))) BETWEEN (((t1.c1)LIKE(t1.c1))) AND (((t1.c1) NOT NULL)))) ISNULL));
SELECT DISTINCT t1.c1 FROM t1;
SELECT t1.c1 FROM t1 GROUP BY t1.c1;
SELECT t1.c1 FROM t1 WHERE (((t1.c1) ISNULL) COLLATE BINARY) GROUP BY t1.c1 UNION SELECT ALL t1.c1 FROM t1 WHERE ((NOT (((t1.c1) ISNULL) COLLATE BINARY))) GROUP BY t1.c1 UNION SELECT t1.c1 FROM t1 WHERE (((((t1.c1) ISNULL) COLLATE BINARY) ISNULL)) GROUP BY t1.c1;
SELECT t1.c1 FROM t1 GROUP BY t1.c1;
SELECT ALL rt0.c2, rt0.c3, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c3, rt0.c1;
SELECT rt0.c2, rt0.c3, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c3, rt0.c1 HAVING (rt0.c1 IN ()) UNION ALL SELECT rt0.c2, rt0.c3, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c3, rt0.c1 HAVING (NOT ((rt0.c1 IN ()))) UNION ALL SELECT ALL rt0.c2, rt0.c3, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c3, rt0.c1 HAVING (((rt0.c1 IN ())) ISNULL);
SELECT ALL rt0.c2, rt0.c3, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c3, rt0.c1;
SELECT rt0.c2, rt0.c3, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c3, rt0.c1 HAVING (rt0.c1 IN ()) UNION ALL SELECT rt0.c2, rt0.c3, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c3, rt0.c1 HAVING (NOT ((rt0.c1 IN ()))) UNION ALL SELECT ALL rt0.c2, rt0.c3, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c3, rt0.c1 HAVING (((rt0.c1 IN ())) ISNULL);
SELECT ALL rt0.c2, rt0.c3, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c3, rt0.c1;
SELECT ALL rt0.c2 FROM rt0, t1;
SELECT ALL rt0.c2 FROM rt0, t1 WHERE (((CASE rt0.c1  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c0 END) NOT NULL)) UNION ALL SELECT rt0.c2 FROM rt0, t1 WHERE ((NOT (((CASE rt0.c1  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c0 END) NOT NULL)))) UNION ALL SELECT rt0.c2 FROM rt0, t1 WHERE (((((CASE rt0.c1  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c0 END) NOT NULL)) ISNULL));
SELECT ALL rt0.c2 FROM rt0, t1;
SELECT DISTINCT * FROM t1, rt0;
SELECT DISTINCT * FROM t1, rt0 WHERE (CASE ((rt0.c2) BETWEEN (t1.c1) AND (t1.c1))  WHEN ((rt0.c0)<=(rt0.c1)) THEN ((((((((rt0.c2)AND(rt0.c3)))OR(rt0.c2)))AND(rt0.c0)))OR('x)辗P')) WHEN TRIM(rt0.c3) THEN t1.c1 WHEN rt0.c0 COLLATE BINARY THEN CAST(x'3963' AS NUMERIC) WHEN ((rt0.c1)LIKE(rt0.c1)) THEN ((rt0.c2) ISNULL) WHEN ((((rt0.c1)AND(t1.c1)))OR(rt0.c1)) THEN (rt0.c1 IN ()) END) UNION SELECT DISTINCT * FROM t1, rt0 WHERE ((NOT (CASE ((rt0.c2) BETWEEN (t1.c1) AND (t1.c1))  WHEN ((rt0.c0)<=(rt0.c1)) THEN ((((((((rt0.c2)AND(rt0.c3)))OR(rt0.c2)))AND(rt0.c0)))OR('x)辗P')) WHEN TRIM(rt0.c3) THEN t1.c1 WHEN rt0.c0 COLLATE BINARY THEN CAST(x'3963' AS NUMERIC) WHEN ((rt0.c1)LIKE(rt0.c1)) THEN ((rt0.c2) ISNULL) WHEN ((((rt0.c1)AND(t1.c1)))OR(rt0.c1)) THEN (rt0.c1 IN ()) END))) UNION SELECT DISTINCT * FROM t1, rt0 WHERE (((CASE ((rt0.c2) BETWEEN (t1.c1) AND (t1.c1))  WHEN ((rt0.c0)<=(rt0.c1)) THEN ((((((((rt0.c2)AND(rt0.c3)))OR(rt0.c2)))AND(rt0.c0)))OR('x)辗P')) WHEN TRIM(rt0.c3) THEN t1.c1 WHEN rt0.c0 COLLATE BINARY THEN CAST(x'3963' AS NUMERIC) WHEN ((rt0.c1)LIKE(rt0.c1)) THEN ((rt0.c2) ISNULL) WHEN ((((rt0.c1)AND(t1.c1)))OR(rt0.c1)) THEN (rt0.c1 IN ()) END) ISNULL));
SELECT DISTINCT * FROM t1, rt0;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 WHERE (rt0.c3) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0 WHERE ((NOT (rt0.c3))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0 WHERE (((rt0.c3) ISNULL)) GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL t1.c1 FROM t1 GROUP BY t1.c1;
SELECT ALL t1.c1 FROM t1 GROUP BY t1.c1 HAVING ((MIN(t1.c1) COLLATE RTRIM) IS TRUE) UNION ALL SELECT t1.c1 FROM t1 GROUP BY t1.c1 HAVING (NOT (((MIN(t1.c1) COLLATE RTRIM) IS TRUE))) UNION ALL SELECT ALL t1.c1 FROM t1 GROUP BY t1.c1 HAVING ((((MIN(t1.c1) COLLATE RTRIM) IS TRUE)) ISNULL);
SELECT ALL t1.c1 FROM t1 GROUP BY t1.c1;
SELECT ALL t1.c1 FROM t1 GROUP BY t1.c1 HAVING ((MIN(t1.c1) COLLATE RTRIM) IS TRUE) UNION ALL SELECT t1.c1 FROM t1 GROUP BY t1.c1 HAVING (NOT (((MIN(t1.c1) COLLATE RTRIM) IS TRUE))) UNION ALL SELECT ALL t1.c1 FROM t1 GROUP BY t1.c1 HAVING ((((MIN(t1.c1) COLLATE RTRIM) IS TRUE)) ISNULL);
SELECT ALL t1.c1 FROM t1 GROUP BY t1.c1;
SELECT ALL t1.c1 FROM t1;
SELECT ALL t1.c1 FROM t1 WHERE (((t1.c1) NOT NULL) COLLATE NOCASE COLLATE BINARY) UNION ALL SELECT ALL t1.c1 FROM t1 WHERE ((NOT (((t1.c1) NOT NULL) COLLATE NOCASE COLLATE BINARY))) UNION ALL SELECT ALL t1.c1 FROM t1 WHERE (((((t1.c1) NOT NULL) COLLATE NOCASE COLLATE BINARY) ISNULL));
SELECT ALL t1.c1 FROM t1;
SELECT DISTINCT rt0.c0, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c1 FROM rt0 WHERE ((((0.7378493469800573)) NOT BETWEEN ((((rt0.c2)<<(rt0.c3)))) AND ((((rt0.c3) BETWEEN (rt0.c3) AND (rt0.c0)))))) UNION SELECT DISTINCT rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT ((((0.7378493469800573)) NOT BETWEEN ((((rt0.c2)<<(rt0.c3)))) AND ((((rt0.c3) BETWEEN (rt0.c3) AND (rt0.c0)))))))) UNION SELECT DISTINCT rt0.c0, rt0.c1 FROM rt0 WHERE ((((((0.7378493469800573)) NOT BETWEEN ((((rt0.c2)<<(rt0.c3)))) AND ((((rt0.c3) BETWEEN (rt0.c3) AND (rt0.c0)))))) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c1 FROM rt0;
SELECT t1.c1 FROM t1 GROUP BY t1.c1;
SELECT ALL t1.c1 FROM t1 WHERE (((((t1.c1)OR(t1.c1)))OR(t1.c1)) COLLATE RTRIM) GROUP BY t1.c1 UNION SELECT t1.c1 FROM t1 WHERE ((NOT (((((t1.c1)OR(t1.c1)))OR(t1.c1)) COLLATE RTRIM))) GROUP BY t1.c1 UNION SELECT t1.c1 FROM t1 WHERE (((((((t1.c1)OR(t1.c1)))OR(t1.c1)) COLLATE RTRIM) ISNULL)) GROUP BY t1.c1;
SELECT t1.c1 FROM t1 GROUP BY t1.c1;
SELECT rt0.c0, rt0.c3, rt0.c2, t1.c1 FROM t1, rt0 GROUP BY rt0.c0, rt0.c3, rt0.c2, t1.c1;
SELECT ALL rt0.c0, rt0.c3, rt0.c2, t1.c1 FROM t1, rt0 GROUP BY rt0.c0, rt0.c3, rt0.c2, t1.c1 HAVING ((AVG(TOTAL(TOTAL(MAX(rt0.c0)))))IS(AVG(rt0.c2))) UNION ALL SELECT ALL rt0.c0, rt0.c3, rt0.c2, t1.c1 FROM t1, rt0 GROUP BY rt0.c0, rt0.c3, rt0.c2, t1.c1 HAVING (NOT (((AVG(TOTAL(TOTAL(MAX(rt0.c0)))))IS(AVG(rt0.c2))))) UNION ALL SELECT ALL rt0.c0, rt0.c3, rt0.c2, t1.c1 FROM t1, rt0 GROUP BY rt0.c0, rt0.c3, rt0.c2, t1.c1 HAVING ((((AVG(TOTAL(TOTAL(MAX(rt0.c0)))))IS(AVG(rt0.c2)))) ISNULL);
SELECT * FROM t1;
SELECT ALL * FROM t1 WHERE ((t1.c1 IN (t1.c1, t1.c1)) COLLATE NOCASE) UNION ALL SELECT ALL * FROM t1 WHERE ((NOT ((t1.c1 IN (t1.c1, t1.c1)) COLLATE NOCASE))) UNION ALL SELECT ALL * FROM t1 NOT INDEXED WHERE ((((t1.c1 IN (t1.c1, t1.c1)) COLLATE NOCASE) ISNULL));
SELECT * FROM t1;
SELECT DISTINCT t1.c1 FROM t1;
SELECT DISTINCT t1.c1 FROM t1 WHERE (CAST(0.8621725431089944 AS TEXT)) UNION SELECT DISTINCT t1.c1 FROM t1 WHERE ((NOT (CAST(0.8621725431089944 AS TEXT)))) UNION SELECT DISTINCT t1.c1 FROM t1 WHERE (((CAST(0.8621725431089944 AS TEXT)) ISNULL));
SELECT DISTINCT t1.c1 FROM t1;
SELECT t1.c1 FROM t1 GROUP BY t1.c1;
SELECT ALL t1.c1 FROM t1 WHERE (((highlight('!o5.<_IB첍', t1.c1, t1.c1, NULL))>>(t1.c1))) GROUP BY t1.c1 UNION SELECT t1.c1 FROM t1 WHERE ((NOT (((highlight('!o5.<_IB첍', t1.c1, t1.c1, NULL))>>(t1.c1))))) GROUP BY t1.c1 UNION SELECT ALL t1.c1 FROM t1 WHERE (((((highlight('!o5.<_IB첍', t1.c1, t1.c1, NULL))>>(t1.c1))) ISNULL)) GROUP BY t1.c1;
SELECT rt0.c1, rt0.c3 FROM rt0 GROUP BY rt0.c1, rt0.c3;
SELECT rt0.c1, rt0.c3 FROM rt0 GROUP BY rt0.c1, rt0.c3 HAVING COUNT(*) UNION ALL SELECT rt0.c1, rt0.c3 FROM rt0 GROUP BY rt0.c1, rt0.c3 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c1, rt0.c3 FROM rt0 GROUP BY rt0.c1, rt0.c3 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c1, rt0.c3 FROM rt0 GROUP BY rt0.c1, rt0.c3;
SELECT rt0.c1, rt0.c3 FROM rt0 GROUP BY rt0.c1, rt0.c3 HAVING COUNT(*) UNION ALL SELECT rt0.c1, rt0.c3 FROM rt0 GROUP BY rt0.c1, rt0.c3 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c1, rt0.c3 FROM rt0 GROUP BY rt0.c1, rt0.c3 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c1, rt0.c3 FROM rt0 GROUP BY rt0.c1, rt0.c3;
SELECT ALL * FROM rt0, t1;
SELECT ALL * FROM rt0, t1 WHERE (CAST((((t1.c1, rt0.c0, t1.c1))=((rt0.c2, rt0.c2, x'f69f'))) AS REAL)) UNION ALL SELECT * FROM rt0, t1 WHERE ((NOT (CAST((((t1.c1, rt0.c0, t1.c1))=((rt0.c2, rt0.c2, x'f69f'))) AS REAL)))) UNION ALL SELECT * FROM rt0, t1 WHERE (((CAST((((t1.c1, rt0.c0, t1.c1))==((rt0.c2, rt0.c2, x'f69f'))) AS REAL)) ISNULL));
SELECT ALL * FROM rt0, t1;
SELECT DISTINCT * FROM t1;
SELECT DISTINCT * FROM t1 NOT INDEXED WHERE (((((t1.c1) IS TRUE))>>('-1220962893'))) UNION SELECT DISTINCT * FROM t1 WHERE ((NOT (((((t1.c1) IS TRUE))>>('-1220962893'))))) UNION SELECT DISTINCT * FROM t1 WHERE (((((((t1.c1) IS TRUE))>>('-1220962893'))) ISNULL));
SELECT DISTINCT * FROM t1;
SELECT ALL rt0.c3 FROM t1, rt0 GROUP BY rt0.c3;
SELECT rt0.c3 FROM t1, rt0 WHERE (((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c3)) COLLATE BINARY) GROUP BY rt0.c3 UNION SELECT ALL rt0.c3 FROM t1, rt0 WHERE ((NOT (((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c3)) COLLATE BINARY))) GROUP BY rt0.c3 UNION SELECT ALL rt0.c3 FROM t1, rt0 WHERE (((((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c3)) COLLATE BINARY) ISNULL)) GROUP BY rt0.c3;
SELECT ALL rt0.c3 FROM t1, rt0 GROUP BY rt0.c3;
SELECT ALL rt0.c1, rt0.c3, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c3, rt0.c2, rt0.c0;
SELECT rt0.c1, rt0.c3, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c3, rt0.c2, rt0.c0 HAVING SUM(GROUP_CONCAT(COUNT(*))) UNION ALL SELECT ALL rt0.c1, rt0.c3, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c3, rt0.c2, rt0.c0 HAVING (NOT (SUM(GROUP_CONCAT(COUNT(*))))) UNION ALL SELECT rt0.c1, rt0.c3, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c3, rt0.c2, rt0.c0 HAVING ((SUM(GROUP_CONCAT(COUNT(*)))) ISNULL);
SELECT rt0.c3, rt0.c0, rt0.c2 FROM rt0, t1;
SELECT ALL rt0.c3, rt0.c0, rt0.c2 FROM rt0, t1 WHERE (IFNULL(((rt0.c2) NOTNULL), ((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1)))) UNION ALL SELECT ALL rt0.c3, rt0.c0, rt0.c2 FROM rt0, t1 WHERE ((NOT (IFNULL(((rt0.c2) NOTNULL), ((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1)))))) UNION ALL SELECT ALL rt0.c3, rt0.c0, rt0.c2 FROM rt0, t1 WHERE (((IFNULL(((rt0.c2) NOTNULL), ((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1)))) ISNULL));
SELECT rt0.c3, rt0.c0, rt0.c2 FROM rt0, t1;
SELECT DISTINCT * FROM t1;
SELECT DISTINCT * FROM t1 WHERE (((((((t1.c1)OR(t1.c1)))AND(t1.c1)))>(CASE WHEN x'6e49' THEN t1.c1 WHEN t1.c1 THEN t1.c1 WHEN 0.9628506755606923 THEN t1.c1 WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c1 END))) UNION SELECT DISTINCT * FROM t1 WHERE ((NOT (((((((t1.c1)OR(t1.c1)))AND(t1.c1)))>(CASE WHEN x'6e49' THEN t1.c1 WHEN t1.c1 THEN t1.c1 WHEN 0.9628506755606923 THEN t1.c1 WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c1 END))))) UNION SELECT DISTINCT * FROM t1 WHERE (((((((((t1.c1)OR(t1.c1)))AND(t1.c1)))>(CASE WHEN x'6e49' THEN t1.c1 WHEN t1.c1 THEN t1.c1 WHEN 0.9628506755606923 THEN t1.c1 WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c1 END))) ISNULL));
SELECT DISTINCT * FROM t1;
SELECT rt0.c3, rt0.c0, t1.c1, rt0.c2 FROM t1, rt0 GROUP BY rt0.c3, rt0.c0, t1.c1, rt0.c2;
SELECT rt0.c3, rt0.c0, t1.c1, rt0.c2 FROM t1, rt0 WHERE ((((CAST(0.993096114781593 AS TEXT)))<>((((rt0.c0)+(NULL)))))) GROUP BY rt0.c3, rt0.c0, t1.c1, rt0.c2 UNION SELECT rt0.c3, rt0.c0, t1.c1, rt0.c2 FROM t1, rt0 WHERE ((NOT ((((CAST(0.993096114781593 AS TEXT)))<>((((rt0.c0)+(NULL)))))))) GROUP BY rt0.c3, rt0.c0, t1.c1, rt0.c2 UNION SELECT ALL rt0.c3, rt0.c0, t1.c1, rt0.c2 FROM t1, rt0 WHERE ((((((CAST(0.993096114781593 AS TEXT)))<>((((rt0.c0)+(NULL)))))) ISNULL)) GROUP BY rt0.c3, rt0.c0, t1.c1, rt0.c2;
SELECT rt0.c3, rt0.c0, t1.c1, rt0.c2 FROM t1, rt0 GROUP BY rt0.c3, rt0.c0, t1.c1, rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING rt0.c1 COLLATE BINARY UNION ALL SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT (rt0.c1 COLLATE BINARY)) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((rt0.c1 COLLATE BINARY) ISNULL);
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING rt0.c1 COLLATE BINARY UNION ALL SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT (rt0.c1 COLLATE BINARY)) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((rt0.c1 COLLATE BINARY) ISNULL);
SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL * FROM rt0 RIGHT OUTER JOIN t1 ON '-1559604629';
SELECT * FROM rt0 RIGHT OUTER JOIN t1 ON '-1559604629' WHERE (((((t1.c1) NOT BETWEEN (rt0.c1) AND (rt0.c0)))IS(TRIM(DISTINCT rt0.c3, rt0.c3)))) UNION ALL SELECT ALL * FROM rt0 RIGHT OUTER JOIN t1 ON '-1559604629' WHERE ((NOT (((((t1.c1) NOT BETWEEN (rt0.c1) AND (rt0.c0)))IS(TRIM(DISTINCT rt0.c3, rt0.c3)))))) UNION ALL SELECT * FROM rt0 RIGHT OUTER JOIN t1 ON '-1559604629' WHERE (((((((t1.c1) NOT BETWEEN (rt0.c1) AND (rt0.c0)))IS(TRIM(DISTINCT rt0.c3, rt0.c3)))) ISNULL));
SELECT ALL * FROM rt0 RIGHT OUTER JOIN t1 ON '-1559604629';
SELECT DISTINCT rt0.c0, rt0.c1 FROM rt0, t1;
SELECT DISTINCT rt0.c0, rt0.c1 FROM rt0, t1 WHERE ((((+ (rt0.c3)))=(t1.c1 COLLATE BINARY))) UNION SELECT DISTINCT rt0.c0, rt0.c1 FROM rt0, t1 WHERE ((NOT ((((+ (rt0.c3)))=(t1.c1 COLLATE BINARY))))) UNION SELECT DISTINCT rt0.c0, rt0.c1 FROM rt0, t1 WHERE ((((((+ (rt0.c3)))==(t1.c1 COLLATE BINARY))) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c1 FROM rt0, t1;
SELECT ALL rt0.c3, rt0.c0, rt0.c2, t1.c1, rt0.c1 FROM t1, rt0 GROUP BY rt0.c3, rt0.c0, rt0.c2, t1.c1, rt0.c1;
SELECT ALL rt0.c3, rt0.c0, rt0.c2, t1.c1, rt0.c1 FROM t1, rt0 WHERE (NULL) GROUP BY rt0.c3, rt0.c0, rt0.c2, t1.c1, rt0.c1 UNION SELECT rt0.c3, rt0.c0, rt0.c2, t1.c1, rt0.c1 FROM t1, rt0 WHERE ((NOT (NULL))) GROUP BY rt0.c3, rt0.c0, rt0.c2, t1.c1, rt0.c1 UNION SELECT ALL rt0.c3, rt0.c0, rt0.c2, t1.c1, rt0.c1 FROM t1, rt0 WHERE (((NULL) ISNULL)) GROUP BY rt0.c3, rt0.c0, rt0.c2, t1.c1, rt0.c1;
SELECT ALL rt0.c3, rt0.c0, rt0.c2, t1.c1, rt0.c1 FROM t1, rt0 GROUP BY rt0.c3, rt0.c0, rt0.c2, t1.c1, rt0.c1;
SELECT ALL rt0.c3, rt0.c0 FROM rt0 GROUP BY rt0.c3, rt0.c0;
SELECT rt0.c3, rt0.c0 FROM rt0 GROUP BY rt0.c3, rt0.c0 HAVING MAX(COUNT(rt0.c0)) UNION ALL SELECT rt0.c3, rt0.c0 FROM rt0 GROUP BY rt0.c3, rt0.c0 HAVING (NOT (MAX(COUNT(rt0.c0)))) UNION ALL SELECT ALL rt0.c3, rt0.c0 FROM rt0 GROUP BY rt0.c3, rt0.c0 HAVING ((MAX(COUNT(rt0.c0))) ISNULL);
SELECT ALL * FROM t1, rt0;
SELECT ALL * FROM t1, rt0 WHERE (((((~ (0.31083276464664156)), CAST(rt0.c0 AS NUMERIC), TRIM(DISTINCT 0.9067172742924791, rt0.c1)))==((UNLIKELY(rt0.c3), rt0.c3 COLLATE RTRIM, ((((((((rt0.c2)OR(rt0.c3)))OR(rt0.c0)))OR(t1.c1)))OR(t1.c1)))))) UNION ALL SELECT ALL * FROM t1, rt0 WHERE ((NOT (((((~ (0.31083276464664156)), CAST(rt0.c0 AS NUMERIC), TRIM(DISTINCT 0.9067172742924791, rt0.c1)))==((UNLIKELY(rt0.c3), rt0.c3 COLLATE RTRIM, ((((((((rt0.c2)OR(rt0.c3)))OR(rt0.c0)))OR(t1.c1)))OR(t1.c1)))))))) UNION ALL SELECT * FROM t1, rt0 WHERE (((((((~ (0.31083276464664156)), CAST(rt0.c0 AS NUMERIC), TRIM(DISTINCT 0.9067172742924791, rt0.c1)))==((UNLIKELY(rt0.c3), rt0.c3 COLLATE RTRIM, ((((((((rt0.c2)OR(rt0.c3)))OR(rt0.c0)))OR(t1.c1)))OR(t1.c1)))))) ISNULL));
SELECT ALL * FROM t1, rt0;
SELECT DISTINCT * FROM rt0 LEFT OUTER JOIN t1 ON ((NOT (rt0.c3)) IN (((rt0.c3) NOT NULL)));
SELECT DISTINCT * FROM rt0 LEFT OUTER JOIN t1 ON ((NOT (rt0.c3)) IN (((rt0.c3) NOT NULL))) WHERE (((((t1.c1, rt0.c0, rt0.c0, rt0.c3, t1.c1))>=((rt0.c0, rt0.c2, rt0.c1, rt0.c2, rt0.c0))) IN ())) UNION SELECT DISTINCT * FROM rt0 LEFT OUTER JOIN t1 ON ((NOT (rt0.c3)) IN (((rt0.c3) NOT NULL))) WHERE ((NOT (((((t1.c1, rt0.c0, rt0.c0, rt0.c3, t1.c1))>=((rt0.c0, rt0.c2, rt0.c1, rt0.c2, rt0.c0))) IN ())))) UNION SELECT DISTINCT * FROM rt0 LEFT OUTER JOIN t1 ON ((NOT (rt0.c3)) IN (((rt0.c3) NOT NULL))) WHERE (((((((t1.c1, rt0.c0, rt0.c0, rt0.c3, t1.c1))>=((rt0.c0, rt0.c2, rt0.c1, rt0.c2, rt0.c0))) IN ())) ISNULL));
SELECT DISTINCT * FROM rt0 LEFT OUTER JOIN t1 ON ((NOT (rt0.c3)) IN (((rt0.c3) NOT NULL)));
SELECT ALL rt0.c0, rt0.c3, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c3, rt0.c2, rt0.c1;
SELECT ALL rt0.c0, rt0.c3, rt0.c2, rt0.c1 FROM rt0 WHERE ((~ (((rt0.c3)<<(rt0.c2))))) GROUP BY rt0.c0, rt0.c3, rt0.c2, rt0.c1 UNION SELECT rt0.c0, rt0.c3, rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT ((~ (((rt0.c3)<<(rt0.c2))))))) GROUP BY rt0.c0, rt0.c3, rt0.c2, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c3, rt0.c2, rt0.c1 FROM rt0 WHERE ((((~ (((rt0.c3)<<(rt0.c2))))) ISNULL)) GROUP BY rt0.c0, rt0.c3, rt0.c2, rt0.c1;
SELECT ALL rt0.c0, rt0.c3, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c3, rt0.c2, rt0.c1;
SELECT t1.c1, rt0.c1, rt0.c2 FROM rt0, t1 GROUP BY t1.c1, rt0.c1, rt0.c2;
SELECT t1.c1, rt0.c1, rt0.c2 FROM rt0, t1 GROUP BY t1.c1, rt0.c1, rt0.c2 HAVING COUNT(*) UNION ALL SELECT t1.c1, rt0.c1, rt0.c2 FROM rt0, t1 GROUP BY t1.c1, rt0.c1, rt0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT t1.c1, rt0.c1, rt0.c2 FROM rt0, t1 GROUP BY t1.c1, rt0.c1, rt0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT t1.c1, rt0.c1, rt0.c2 FROM rt0, t1 GROUP BY t1.c1, rt0.c1, rt0.c2;
SELECT t1.c1, rt0.c1, rt0.c2 FROM rt0, t1 GROUP BY t1.c1, rt0.c1, rt0.c2 HAVING COUNT(*) UNION ALL SELECT t1.c1, rt0.c1, rt0.c2 FROM rt0, t1 GROUP BY t1.c1, rt0.c1, rt0.c2 HAVING (NOT (COUNT(*))) UNION ALL SELECT t1.c1, rt0.c1, rt0.c2 FROM rt0, t1 GROUP BY t1.c1, rt0.c1, rt0.c2 HAVING ((COUNT(*)) ISNULL);
SELECT t1.c1, rt0.c1, rt0.c2 FROM rt0, t1 GROUP BY t1.c1, rt0.c1, rt0.c2;
SELECT * FROM t1;
SELECT ALL * FROM t1 WHERE ((((t1.c1, t1.c1, t1.c1, t1.c1, t1.c1)) BETWEEN ((0.6039901653008404, ((((((((t1.c1)AND(t1.c1)))AND(t1.c1)))OR(t1.c1)))OR(t1.c1)), ((t1.c1) IS FALSE), ((t1.c1)IS NOT(t1.c1)), CAST(t1.c1 AS TEXT))) AND ((t1.c1 COLLATE BINARY, (((t1.c1)) NOT BETWEEN ((t1.c1)) AND ((t1.c1))), t1.c1, ((((t1.c1)AND(t1.c1)))AND(t1.c1)), CASE t1.c1  WHEN t1.c1 THEN t1.c1 ELSE t1.c1 END)))) UNION ALL SELECT * FROM t1 WHERE ((NOT ((((t1.c1, t1.c1, t1.c1, t1.c1, t1.c1)) BETWEEN ((0.6039901653008404, ((((((((t1.c1)AND(t1.c1)))AND(t1.c1)))OR(t1.c1)))OR(t1.c1)), ((t1.c1) IS FALSE), ((t1.c1)IS NOT(t1.c1)), CAST(t1.c1 AS TEXT))) AND ((t1.c1 COLLATE BINARY, (((t1.c1)) NOT BETWEEN ((t1.c1)) AND ((t1.c1))), t1.c1, ((((t1.c1)AND(t1.c1)))AND(t1.c1)), CASE t1.c1  WHEN t1.c1 THEN t1.c1 ELSE t1.c1 END)))))) UNION ALL SELECT * FROM t1 WHERE ((((((t1.c1, t1.c1, t1.c1, t1.c1, t1.c1)) BETWEEN ((0.6039901653008404, ((((((((t1.c1)AND(t1.c1)))AND(t1.c1)))OR(t1.c1)))OR(t1.c1)), ((t1.c1) IS FALSE), ((t1.c1)IS NOT(t1.c1)), CAST(t1.c1 AS TEXT))) AND ((t1.c1 COLLATE BINARY, (((t1.c1)) NOT BETWEEN ((t1.c1)) AND ((t1.c1))), t1.c1, ((((t1.c1)AND(t1.c1)))AND(t1.c1)), CASE t1.c1  WHEN t1.c1 THEN t1.c1 ELSE t1.c1 END)))) ISNULL));
SELECT * FROM t1;
SELECT DISTINCT rt0.c3, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c3, rt0.c0 FROM rt0 WHERE ((- (((rt0.c3) NOT NULL)))) UNION SELECT DISTINCT rt0.c3, rt0.c0 FROM rt0 WHERE ((NOT ((- (((rt0.c3) NOT NULL)))))) UNION SELECT DISTINCT rt0.c3, rt0.c0 FROM rt0 WHERE ((((- (((rt0.c3) NOT NULL)))) ISNULL));
SELECT DISTINCT rt0.c3, rt0.c0 FROM rt0;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 WHERE (CASE NULL  WHEN (rt0.c3 IN (rt0.c1)) THEN ((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c0)) ELSE ((rt0.c1)>(rt0.c3)) END) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0 WHERE ((NOT (CASE NULL  WHEN (rt0.c3 IN (rt0.c1)) THEN ((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c0)) ELSE ((rt0.c1)>(rt0.c3)) END))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0 WHERE (((CASE NULL  WHEN (rt0.c3 IN (rt0.c1)) THEN ((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c0)) ELSE ((rt0.c1)>(rt0.c3)) END) ISNULL)) GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT t1.c1 FROM t1 GROUP BY t1.c1;
SELECT t1.c1 FROM t1 GROUP BY t1.c1 HAVING AVG(CASE WHEN t1.c1 THEN t1.c1 END) UNION ALL SELECT ALL t1.c1 FROM t1 GROUP BY t1.c1 HAVING (NOT (AVG(CASE WHEN t1.c1 THEN t1.c1 END))) UNION ALL SELECT ALL t1.c1 FROM t1 GROUP BY t1.c1 HAVING ((AVG(CASE WHEN t1.c1 THEN t1.c1 END)) ISNULL);
SELECT t1.c1 FROM t1 GROUP BY t1.c1;
SELECT t1.c1 FROM t1 GROUP BY t1.c1 HAVING AVG(CASE WHEN t1.c1 THEN t1.c1 END) UNION ALL SELECT ALL t1.c1 FROM t1 GROUP BY t1.c1 HAVING (NOT (AVG(CASE WHEN t1.c1 THEN t1.c1 END))) UNION ALL SELECT ALL t1.c1 FROM t1 GROUP BY t1.c1 HAVING ((AVG(CASE WHEN t1.c1 THEN t1.c1 END)) ISNULL);
SELECT t1.c1 FROM t1 GROUP BY t1.c1;
SELECT rt0.c1, rt0.c3 FROM rt0, t1;
SELECT rt0.c1, rt0.c3 FROM rt0, t1 NOT INDEXED WHERE (((((((((((t1.c1)OR(rt0.c2)))OR(rt0.c2)))AND(rt0.c2)))AND(rt0.c3))) IS FALSE)) UNION ALL SELECT rt0.c1, rt0.c3 FROM rt0, t1 WHERE ((NOT (((((((((((t1.c1)OR(rt0.c2)))OR(rt0.c2)))AND(rt0.c2)))AND(rt0.c3))) IS FALSE)))) UNION ALL SELECT ALL rt0.c1, rt0.c3 FROM rt0, t1 WHERE (((((((((((((t1.c1)OR(rt0.c2)))OR(rt0.c2)))AND(rt0.c2)))AND(rt0.c3))) IS FALSE)) ISNULL));
SELECT rt0.c1, rt0.c3 FROM rt0, t1;
SELECT DISTINCT rt0.c0, t1.c1, rt0.c1, rt0.c3, rt0.c2 FROM t1, rt0;
SELECT DISTINCT rt0.c0, t1.c1, rt0.c1, rt0.c3, rt0.c2 FROM t1, rt0 WHERE (((rt0.c2)%(rt0.c0)) COLLATE BINARY) UNION SELECT DISTINCT rt0.c0, t1.c1, rt0.c1, rt0.c3, rt0.c2 FROM t1, rt0 WHERE ((NOT (((rt0.c2)%(rt0.c0)) COLLATE BINARY))) UNION SELECT DISTINCT rt0.c0, t1.c1, rt0.c1, rt0.c3, rt0.c2 FROM t1, rt0 WHERE (((((rt0.c2)%(rt0.c0)) COLLATE BINARY) ISNULL));
SELECT DISTINCT rt0.c0, t1.c1, rt0.c1, rt0.c3, rt0.c2 FROM t1, rt0;
SELECT rt0.c2, rt0.c0, rt0.c1, rt0.c3, t1.c1 FROM rt0, t1 GROUP BY rt0.c2, rt0.c0, rt0.c1, rt0.c3, t1.c1;
SELECT ALL rt0.c2, rt0.c0, rt0.c1, rt0.c3, t1.c1 FROM rt0, t1 WHERE ((((~ (rt0.c3)))<=(rt0.c0))) GROUP BY rt0.c2, rt0.c0, rt0.c1, rt0.c3, t1.c1 UNION SELECT rt0.c2, rt0.c0, rt0.c1, rt0.c3, t1.c1 FROM rt0, t1 WHERE ((NOT ((((~ (rt0.c3)))<=(rt0.c0))))) GROUP BY rt0.c2, rt0.c0, rt0.c1, rt0.c3, t1.c1 UNION SELECT rt0.c2, rt0.c0, rt0.c1, rt0.c3, t1.c1 FROM rt0, t1 WHERE ((((((~ (rt0.c3)))<=(rt0.c0))) ISNULL)) GROUP BY rt0.c2, rt0.c0, rt0.c1, rt0.c3, t1.c1;
SELECT rt0.c2, rt0.c0, rt0.c1, rt0.c3, t1.c1 FROM rt0, t1 GROUP BY rt0.c2, rt0.c0, rt0.c1, rt0.c3, t1.c1;
SELECT ALL t1.c1, rt0.c1, rt0.c3, rt0.c0 FROM t1, rt0 GROUP BY t1.c1, rt0.c1, rt0.c3, rt0.c0;
SELECT ALL t1.c1, rt0.c1, rt0.c3, rt0.c0 FROM t1, rt0 GROUP BY t1.c1, rt0.c1, rt0.c3, rt0.c0 HAVING (((((((((~ (COUNT(*))))AND(AVG(rt0.c1))))OR(TOTAL(COUNT(MIN(rt0.c2))))))OR(GROUP_CONCAT(MIN(GROUP_CONCAT(rt0.c0))))))OR(((((((((rt0.c1)OR(rt0.c2)))OR(rt0.c3)))AND(SUM(MIN(COUNT(t1.c1))))))OR(COUNT(MAX(rt0.c0)))))) UNION ALL SELECT ALL t1.c1, rt0.c1, rt0.c3, rt0.c0 FROM t1, rt0 GROUP BY t1.c1, rt0.c1, rt0.c3, rt0.c0 HAVING (NOT ((((((((((~ (COUNT(*))))AND(AVG(rt0.c1))))OR(TOTAL(COUNT(MIN(rt0.c2))))))OR(GROUP_CONCAT(MIN(GROUP_CONCAT(rt0.c0))))))OR(((((((((rt0.c1)OR(rt0.c2)))OR(rt0.c3)))AND(SUM(MIN(COUNT(t1.c1))))))OR(COUNT(MAX(rt0.c0)))))))) UNION ALL SELECT ALL t1.c1, rt0.c1, rt0.c3, rt0.c0 FROM t1, rt0 GROUP BY t1.c1, rt0.c1, rt0.c3, rt0.c0 HAVING (((((((((((~ (COUNT(*))))AND(AVG(rt0.c1))))OR(TOTAL(COUNT(MIN(rt0.c2))))))OR(GROUP_CONCAT(MIN(GROUP_CONCAT(rt0.c0))))))OR(((((((((rt0.c1)OR(rt0.c2)))OR(rt0.c3)))AND(SUM(MIN(COUNT(t1.c1))))))OR(COUNT(MAX(rt0.c0))))))) ISNULL);
SELECT ALL MAX((((rt0.c1)) NOT BETWEEN (((rt0.c0 IN (rt0.c3)))) AND ((CASE rt0.c1  WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c2 END)))) FROM t1, rt0;
SELECT rt0.c3, t1.c1, rt0.c2, rt0.c1, rt0.c0 FROM rt0, t1;
SELECT rt0.c3, t1.c1, rt0.c2, rt0.c1, rt0.c0 FROM rt0, t1 WHERE (rt0.c2 COLLATE RTRIM) UNION ALL SELECT rt0.c3, t1.c1, rt0.c2, rt0.c1, rt0.c0 FROM rt0, t1 WHERE ((NOT (rt0.c2 COLLATE RTRIM))) UNION ALL SELECT rt0.c3, t1.c1, rt0.c2, rt0.c1, rt0.c0 FROM rt0, t1 WHERE (((rt0.c2 COLLATE RTRIM) ISNULL));
SELECT rt0.c3, t1.c1, rt0.c2, rt0.c1, rt0.c0 FROM rt0, t1;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((('-1920161332' IN ()))>(rt0.c3 COLLATE BINARY))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((('-1920161332' IN ()))>(rt0.c3 COLLATE BINARY))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((('-1920161332' IN ()))>(rt0.c3 COLLATE BINARY))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c3 FROM rt0, t1 GROUP BY rt0.c3;
SELECT rt0.c3 FROM rt0, t1 WHERE (((((rt0.c0) NOT BETWEEN (t1.c1) AND (rt0.c3))) NOT BETWEEN (rt0.c1) AND ((rt0.c1 IN ())))) GROUP BY rt0.c3 UNION SELECT ALL rt0.c3 FROM rt0, t1 WHERE ((NOT (((((rt0.c0) NOT BETWEEN (t1.c1) AND (rt0.c3))) NOT BETWEEN (rt0.c1) AND ((rt0.c1 IN ())))))) GROUP BY rt0.c3 UNION SELECT ALL rt0.c3 FROM rt0, t1 WHERE (((((((rt0.c0) NOT BETWEEN (t1.c1) AND (rt0.c3))) NOT BETWEEN (rt0.c1) AND ((rt0.c1 IN ())))) ISNULL)) GROUP BY rt0.c3;
SELECT rt0.c3 FROM rt0, t1 GROUP BY rt0.c3;
SELECT ALL t1.c1 FROM t1 GROUP BY t1.c1;
SELECT ALL t1.c1 FROM t1 GROUP BY t1.c1 HAVING MAX(GLOB(MAX(t1.c1), GROUP_CONCAT(t1.c1))) UNION ALL SELECT t1.c1 FROM t1 GROUP BY t1.c1 HAVING (NOT (MAX(GLOB(MAX(t1.c1), GROUP_CONCAT(t1.c1))))) UNION ALL SELECT t1.c1 FROM t1 GROUP BY t1.c1 HAVING ((MAX(GLOB(MAX(t1.c1), GROUP_CONCAT(t1.c1)))) ISNULL);
SELECT * FROM t1, rt0;
SELECT * FROM t1, rt0 WHERE ((NOT ((t1.c1 IN ())))) UNION ALL SELECT ALL * FROM t1, rt0 WHERE ((NOT ((NOT ((t1.c1 IN ())))))) UNION ALL SELECT * FROM t1, rt0 WHERE ((((NOT ((t1.c1 IN ())))) ISNULL));
SELECT * FROM t1, rt0;
SELECT DISTINCT rt0.c1, rt0.c2 FROM t1 RIGHT OUTER JOIN rt0 ON (rt0.c2 IN (rt0.c0, rt0.c3)) COLLATE RTRIM;
SELECT DISTINCT rt0.c1, rt0.c2 FROM t1 RIGHT OUTER JOIN rt0 ON (rt0.c2 IN (rt0.c0, rt0.c3)) COLLATE RTRIM WHERE (CAST((t1.c1 IN ()) AS BLOB)) UNION SELECT DISTINCT rt0.c1, rt0.c2 FROM t1 RIGHT OUTER JOIN rt0 ON (rt0.c2 IN (rt0.c0, rt0.c3)) COLLATE RTRIM WHERE ((NOT (CAST((t1.c1 IN ()) AS BLOB)))) UNION SELECT DISTINCT rt0.c1, rt0.c2 FROM t1 RIGHT OUTER JOIN rt0 ON (rt0.c2 IN (rt0.c0, rt0.c3)) COLLATE RTRIM WHERE (((CAST((t1.c1 IN ()) AS BLOB)) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c2 FROM t1 RIGHT OUTER JOIN rt0 ON (rt0.c2 IN (rt0.c0, rt0.c3)) COLLATE RTRIM;
SELECT rt0.c1, rt0.c2, rt0.c0, rt0.c3, t1.c1 FROM t1, rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0, rt0.c3, t1.c1;
SELECT rt0.c1, rt0.c2, rt0.c0, rt0.c3, t1.c1 FROM t1, rt0 WHERE ((((rt0.c3)) NOT BETWEEN ((((rt0.c2) NOT BETWEEN (t1.c1) AND (t1.c1)))) AND (((((((((('-163199286')OR(rt0.c3)))OR(rt0.c2)))OR(rt0.c0)))OR(t1.c1)))))) GROUP BY rt0.c1, rt0.c2, rt0.c0, rt0.c3, t1.c1 UNION SELECT rt0.c1, rt0.c2, rt0.c0, rt0.c3, t1.c1 FROM t1, rt0 WHERE ((NOT ((((rt0.c3)) NOT BETWEEN ((((rt0.c2) NOT BETWEEN (t1.c1) AND (t1.c1)))) AND (((((((((('-163199286')OR(rt0.c3)))OR(rt0.c2)))OR(rt0.c0)))OR(t1.c1)))))))) GROUP BY rt0.c1, rt0.c2, rt0.c0, rt0.c3, t1.c1 UNION SELECT ALL rt0.c1, rt0.c2, rt0.c0, rt0.c3, t1.c1 FROM t1, rt0 WHERE ((((((rt0.c3)) NOT BETWEEN ((((rt0.c2) NOT BETWEEN (t1.c1) AND (t1.c1)))) AND (((((((((('-163199286')OR(rt0.c3)))OR(rt0.c2)))OR(rt0.c0)))OR(t1.c1)))))) ISNULL)) GROUP BY rt0.c1, rt0.c2, rt0.c0, rt0.c3, t1.c1;
SELECT rt0.c1, rt0.c2, rt0.c0, rt0.c3, t1.c1 FROM t1, rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0, rt0.c3, t1.c1;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING ((CASE rt0.c3  WHEN rt0.c0 THEN rt0.c3 ELSE COUNT(MAX(MAX(0xffffffff8d8ca9cc))) END)IS NOT('989501612')) UNION ALL SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (NOT (((CASE rt0.c3  WHEN rt0.c0 THEN rt0.c3 ELSE COUNT(MAX(MAX(0Xffffffff8d8ca9cc))) END)IS NOT('989501612')))) UNION ALL SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING ((((CASE rt0.c3  WHEN rt0.c0 THEN rt0.c3 ELSE COUNT(MAX(MAX(0xffffffff8d8ca9cc))) END)IS NOT('989501612'))) ISNULL);
SELECT rt0.c0, t1.c1, rt0.c2, rt0.c1, rt0.c3 FROM rt0, t1;
SELECT ALL rt0.c0, t1.c1, rt0.c2, rt0.c1, rt0.c3 FROM rt0, t1 WHERE (CAST(((rt0.c1) IS TRUE) AS REAL)) UNION ALL SELECT rt0.c0, t1.c1, rt0.c2, rt0.c1, rt0.c3 FROM rt0, t1 WHERE ((NOT (CAST(((rt0.c1) IS TRUE) AS REAL)))) UNION ALL SELECT rt0.c0, t1.c1, rt0.c2, rt0.c1, rt0.c3 FROM rt0, t1 WHERE (((CAST(((rt0.c1) IS TRUE) AS REAL)) ISNULL));
SELECT rt0.c0, t1.c1, rt0.c2, rt0.c1, rt0.c3 FROM rt0, t1;
SELECT DISTINCT * FROM t1;
SELECT DISTINCT * FROM t1 WHERE ((((((t1.c1)<<(t1.c1)), CAST(t1.c1 AS NUMERIC), CASE t1.c1  WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN '4*' WHEN t1.c1 THEN t1.c1 END))>((CASE WHEN NULL THEN t1.c1 WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN x'' ELSE t1.c1 END, (t1.c1 IN (t1.c1)), (~ (t1.c1)))))) UNION SELECT DISTINCT * FROM t1 WHERE ((NOT ((((((t1.c1)<<(t1.c1)), CAST(t1.c1 AS NUMERIC), CASE t1.c1  WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN '4*' WHEN t1.c1 THEN t1.c1 END))>((CASE WHEN NULL THEN t1.c1 WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN x'' ELSE t1.c1 END, (t1.c1 IN (t1.c1)), (~ (t1.c1)))))))) UNION SELECT DISTINCT * FROM t1 WHERE ((((((((t1.c1)<<(t1.c1)), CAST(t1.c1 AS NUMERIC), CASE t1.c1  WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN '4*' WHEN t1.c1 THEN t1.c1 END))>((CASE WHEN NULL THEN t1.c1 WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN x'' ELSE t1.c1 END, (t1.c1 IN (t1.c1)), (~ (t1.c1)))))) ISNULL));
SELECT DISTINCT * FROM t1;
SELECT rt0.c3, rt0.c2 FROM rt0 GROUP BY rt0.c3, rt0.c2;
SELECT rt0.c3, rt0.c2 FROM rt0 WHERE (((CAST(-1860178638 AS INTEGER)) IS FALSE)) GROUP BY rt0.c3, rt0.c2 UNION SELECT ALL rt0.c3, rt0.c2 FROM rt0 WHERE ((NOT (((CAST(-1860178638 AS INTEGER)) IS FALSE)))) GROUP BY rt0.c3, rt0.c2 UNION SELECT ALL rt0.c3, rt0.c2 FROM rt0 WHERE (((((CAST(-1860178638 AS INTEGER)) IS FALSE)) ISNULL)) GROUP BY rt0.c3, rt0.c2;
SELECT rt0.c3, rt0.c2 FROM rt0 GROUP BY rt0.c3, rt0.c2;
SELECT rt0.c3, rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c3, rt0.c1, rt0.c2, rt0.c0;
SELECT ALL rt0.c3, rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c3, rt0.c1, rt0.c2, rt0.c0 HAVING COUNT(SUM(GROUP_CONCAT(TOTAL(AVG(SUM(SUM(COUNT(rt0.c2)))))))) UNION ALL SELECT rt0.c3, rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c3, rt0.c1, rt0.c2, rt0.c0 HAVING (NOT (COUNT(SUM(GROUP_CONCAT(TOTAL(AVG(SUM(SUM(COUNT(rt0.c2)))))))))) UNION ALL SELECT rt0.c3, rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c3, rt0.c1, rt0.c2, rt0.c0 HAVING ((COUNT(SUM(GROUP_CONCAT(TOTAL(AVG(SUM(SUM(COUNT(rt0.c2))))))))) ISNULL);
SELECT ALL rt0.c1 FROM t1, rt0;
SELECT rt0.c1 FROM t1, rt0 WHERE (((((((rt0.c0)OR(NULL)))OR('Sv>y)Qm	'))) BETWEEN (rt0.c3) AND (NULLIF(DISTINCT NULL, rt0.c3)))) UNION ALL SELECT rt0.c1 FROM t1, rt0 WHERE ((NOT (((((((rt0.c0)OR(NULL)))OR('Sv>y)Qm	'))) BETWEEN (rt0.c3) AND (NULLIF(DISTINCT NULL, rt0.c3)))))) UNION ALL SELECT ALL rt0.c1 FROM t1, rt0 WHERE (((((((((rt0.c0)OR(NULL)))OR('Sv>y)Qm	'))) BETWEEN (rt0.c3) AND (NULLIF(DISTINCT NULL, rt0.c3)))) ISNULL));
SELECT ALL rt0.c1 FROM t1, rt0;
SELECT DISTINCT t1.c1 FROM t1;
SELECT DISTINCT t1.c1 FROM t1 WHERE ('197067210') UNION SELECT DISTINCT t1.c1 FROM t1 WHERE ((NOT ('197067210'))) UNION SELECT DISTINCT t1.c1 FROM t1 WHERE ((('197067210') ISNULL));
SELECT DISTINCT t1.c1 FROM t1;
SELECT rt0.c0 FROM t1 FULL OUTER JOIN rt0 ON rt0.c3 GROUP BY rt0.c0;
SELECT rt0.c0 FROM t1 FULL OUTER JOIN rt0 ON rt0.c3 WHERE (NULL) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM t1 FULL OUTER JOIN rt0 ON rt0.c3 WHERE ((NOT (NULL))) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM t1 FULL OUTER JOIN rt0 ON rt0.c3 WHERE (((NULL) ISNULL)) GROUP BY rt0.c0;
SELECT rt0.c0 FROM t1 FULL OUTER JOIN rt0 ON rt0.c3 GROUP BY rt0.c0;
SELECT t1.c1 FROM t1 GROUP BY t1.c1;
SELECT ALL t1.c1 FROM t1 GROUP BY t1.c1 HAVING 'o?亃⬮9ᲆ~^' UNION ALL SELECT t1.c1 FROM t1 GROUP BY t1.c1 HAVING (NOT ('o?亃⬮9ᲆ~^')) UNION ALL SELECT ALL t1.c1 FROM t1 GROUP BY t1.c1 HAVING (('o?亃⬮9ᲆ~^') ISNULL);
SELECT t1.c1 FROM t1 GROUP BY t1.c1;
SELECT ALL t1.c1 FROM t1 GROUP BY t1.c1 HAVING 'o?亃⬮9ᲆ~^' UNION ALL SELECT t1.c1 FROM t1 GROUP BY t1.c1 HAVING (NOT ('o?亃⬮9ᲆ~^')) UNION ALL SELECT ALL t1.c1 FROM t1 GROUP BY t1.c1 HAVING (('o?亃⬮9ᲆ~^') ISNULL);
SELECT t1.c1 FROM t1 GROUP BY t1.c1;
SELECT rt0.c2, t1.c1, rt0.c0, rt0.c3, rt0.c1 FROM rt0, t1;
SELECT ALL rt0.c2, t1.c1, rt0.c0, rt0.c3, rt0.c1 FROM rt0, t1 WHERE ((((- (rt0.c2)))IS(CAST(rt0.c1 AS INTEGER)))) UNION ALL SELECT rt0.c2, t1.c1, rt0.c0, rt0.c3, rt0.c1 FROM rt0, t1 WHERE ((NOT ((((- (rt0.c2)))IS(CAST(rt0.c1 AS INTEGER)))))) UNION ALL SELECT ALL rt0.c2, t1.c1, rt0.c0, rt0.c3, rt0.c1 FROM rt0, t1 WHERE ((((((- (rt0.c2)))IS(CAST(rt0.c1 AS INTEGER)))) ISNULL));
SELECT rt0.c2, t1.c1, rt0.c0, rt0.c3, rt0.c1 FROM rt0, t1;
SELECT DISTINCT t1.c1 FROM t1;
SELECT DISTINCT t1.c1 FROM t1 WHERE (((((t1.c1) ISNULL))OR(((t1.c1) NOTNULL)))) UNION SELECT DISTINCT t1.c1 FROM t1 WHERE ((NOT (((((t1.c1) ISNULL))OR(((t1.c1) NOTNULL)))))) UNION SELECT DISTINCT t1.c1 FROM t1 WHERE (((((((t1.c1) ISNULL))OR(((t1.c1) NOTNULL)))) ISNULL));
SELECT DISTINCT t1.c1 FROM t1;
SELECT t1.c1, rt0.c1, rt0.c2, rt0.c0, rt0.c3 FROM t1, rt0 GROUP BY t1.c1, rt0.c1, rt0.c2, rt0.c0, rt0.c3;
SELECT t1.c1, rt0.c1, rt0.c2, rt0.c0, rt0.c3 FROM t1, rt0 WHERE (((CAST(rt0.c3 AS REAL))*(CAST(t1.c1 AS REAL)))) GROUP BY t1.c1, rt0.c1, rt0.c2, rt0.c0, rt0.c3 UNION SELECT t1.c1, rt0.c1, rt0.c2, rt0.c0, rt0.c3 FROM t1, rt0 WHERE ((NOT (((CAST(rt0.c3 AS REAL))*(CAST(t1.c1 AS REAL)))))) GROUP BY t1.c1, rt0.c1, rt0.c2, rt0.c0, rt0.c3 UNION SELECT ALL t1.c1, rt0.c1, rt0.c2, rt0.c0, rt0.c3 FROM t1, rt0 WHERE (((((CAST(rt0.c3 AS REAL))*(CAST(t1.c1 AS REAL)))) ISNULL)) GROUP BY t1.c1, rt0.c1, rt0.c2, rt0.c0, rt0.c3;
SELECT t1.c1, rt0.c1, rt0.c2, rt0.c0, rt0.c3 FROM t1, rt0 GROUP BY t1.c1, rt0.c1, rt0.c2, rt0.c0, rt0.c3;
SELECT rt0.c0, rt0.c3, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c3, rt0.c1;
SELECT rt0.c0, rt0.c3, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c3, rt0.c1 HAVING AVG(MAX(SUM(rt0.c0))) UNION ALL SELECT ALL rt0.c0, rt0.c3, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c3, rt0.c1 HAVING (NOT (AVG(MAX(SUM(rt0.c0))))) UNION ALL SELECT ALL rt0.c0, rt0.c3, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c3, rt0.c1 HAVING ((AVG(MAX(SUM(rt0.c0)))) ISNULL);
SELECT * FROM rt0, t1;
SELECT * FROM rt0, t1 WHERE (((((rt0.c2) IS TRUE)) NOTNULL)) UNION ALL SELECT * FROM rt0, t1 WHERE ((NOT (((((rt0.c2) IS TRUE)) NOTNULL)))) UNION ALL SELECT * FROM rt0, t1 WHERE (((((((rt0.c2) IS TRUE)) NOTNULL)) ISNULL));
SELECT * FROM rt0, t1;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((((((((((rt0.c2)OR(rt0.c2)))OR(rt0.c2)))OR(rt0.c3)))OR(rt0.c3))) NOTNULL)) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((((((((((rt0.c2)OR(rt0.c2)))OR(rt0.c2)))OR(rt0.c3)))OR(rt0.c3))) NOTNULL)))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((((((((((rt0.c2)OR(rt0.c2)))OR(rt0.c2)))OR(rt0.c3)))OR(rt0.c3))) NOTNULL)) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE (((rt0.c2)<=(rt0.c3)) COLLATE RTRIM) GROUP BY rt0.c1, rt0.c2, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (((rt0.c2)<=(rt0.c3)) COLLATE RTRIM))) GROUP BY rt0.c1, rt0.c2, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE (((((rt0.c2)<=(rt0.c3)) COLLATE RTRIM) ISNULL)) GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT ALL t1.c1 FROM t1 GROUP BY t1.c1;
SELECT ALL t1.c1 FROM t1 GROUP BY t1.c1 HAVING COUNT(TRIM(DISTINCT TOTAL(SUM(t1.c1)))) UNION ALL SELECT ALL t1.c1 FROM t1 GROUP BY t1.c1 HAVING (NOT (COUNT(TRIM(DISTINCT TOTAL(SUM(t1.c1)))))) UNION ALL SELECT t1.c1 FROM t1 GROUP BY t1.c1 HAVING ((COUNT(TRIM(DISTINCT TOTAL(SUM(t1.c1))))) ISNULL);
SELECT ALL MAX((((rt0.c1))>((((rt0.c3)-(t1.c1)))))) FROM rt0, t1;
SELECT rt0.c1, t1.c1 FROM rt0, t1;
SELECT ALL rt0.c1, t1.c1 FROM rt0, t1 WHERE (CAST(((rt0.c3) ISNULL) AS NUMERIC)) UNION ALL SELECT rt0.c1, t1.c1 FROM rt0, t1 WHERE ((NOT (CAST(((rt0.c3) ISNULL) AS NUMERIC)))) UNION ALL SELECT rt0.c1, t1.c1 FROM rt0, t1 WHERE (((CAST(((rt0.c3) ISNULL) AS NUMERIC)) ISNULL));
SELECT rt0.c1, t1.c1 FROM rt0, t1;
SELECT DISTINCT * FROM t1, rt0;
SELECT DISTINCT * FROM t1, rt0 WHERE (rt0.c0) UNION SELECT DISTINCT * FROM t1, rt0 WHERE ((NOT (rt0.c0))) UNION SELECT DISTINCT * FROM t1, rt0 WHERE (((rt0.c0) ISNULL));
SELECT DISTINCT * FROM t1, rt0;
SELECT ALL rt0.c1, rt0.c0, t1.c1, rt0.c3 FROM rt0, t1 GROUP BY rt0.c1, rt0.c0, t1.c1, rt0.c3;
SELECT rt0.c1, rt0.c0, t1.c1, rt0.c3 FROM rt0, t1 WHERE (CAST((((rt0.c2))>((rt0.c2))) AS BLOB)) GROUP BY rt0.c1, rt0.c0, t1.c1, rt0.c3 UNION SELECT ALL rt0.c1, rt0.c0, t1.c1, rt0.c3 FROM rt0, t1 WHERE ((NOT (CAST((((rt0.c2))>((rt0.c2))) AS BLOB)))) GROUP BY rt0.c1, rt0.c0, t1.c1, rt0.c3 UNION SELECT rt0.c1, rt0.c0, t1.c1, rt0.c3 FROM rt0, t1 WHERE (((CAST((((rt0.c2))>((rt0.c2))) AS BLOB)) ISNULL)) GROUP BY rt0.c1, rt0.c0, t1.c1, rt0.c3;
SELECT ALL rt0.c1, rt0.c0, t1.c1, rt0.c3 FROM rt0, t1 GROUP BY rt0.c1, rt0.c0, t1.c1, rt0.c3;
SELECT ALL rt0.c3 FROM rt0, t1 GROUP BY rt0.c3;
SELECT ALL rt0.c3 FROM rt0, t1 GROUP BY rt0.c3 HAVING MIN(COUNT(rt0.c0)) UNION ALL SELECT rt0.c3 FROM rt0, t1 GROUP BY rt0.c3 HAVING (NOT (MIN(COUNT(rt0.c0)))) UNION ALL SELECT ALL rt0.c3 FROM rt0 NOT INDEXED, t1 GROUP BY rt0.c3 HAVING ((MIN(COUNT(rt0.c0))) ISNULL);
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE (rt0.c2 COLLATE BINARY) UNION ALL SELECT * FROM rt0 WHERE ((NOT (rt0.c2 COLLATE BINARY))) UNION ALL SELECT * FROM rt0 WHERE (((rt0.c2 COLLATE BINARY) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT t1.c1 FROM t1;
SELECT DISTINCT t1.c1 FROM t1 WHERE ((((t1.c1)) BETWEEN (((t1.c1 IN ()))) AND ((t1.c1)))) UNION SELECT DISTINCT t1.c1 FROM t1 WHERE ((NOT ((((t1.c1)) BETWEEN (((t1.c1 IN ()))) AND ((t1.c1)))))) UNION SELECT DISTINCT t1.c1 FROM t1 WHERE ((((((t1.c1)) BETWEEN (((t1.c1 IN ()))) AND ((t1.c1)))) ISNULL));
SELECT DISTINCT t1.c1 FROM t1;
SELECT ALL rt0.c3, rt0.c1, rt0.c0 FROM rt0, t1 GROUP BY rt0.c3, rt0.c1, rt0.c0;
SELECT ALL rt0.c3, rt0.c1, rt0.c0 FROM rt0, t1 WHERE (CAST((rt0.c3 IN ()) AS BLOB)) GROUP BY rt0.c3, rt0.c1, rt0.c0 UNION SELECT rt0.c3, rt0.c1, rt0.c0 FROM rt0, t1 WHERE ((NOT (CAST((rt0.c3 IN ()) AS BLOB)))) GROUP BY rt0.c3, rt0.c1, rt0.c0 UNION SELECT ALL rt0.c3, rt0.c1, rt0.c0 FROM rt0, t1 WHERE (((CAST((rt0.c3 IN ()) AS BLOB)) ISNULL)) GROUP BY rt0.c3, rt0.c1, rt0.c0;
SELECT ALL rt0.c3, rt0.c1, rt0.c0 FROM rt0, t1 GROUP BY rt0.c3, rt0.c1, rt0.c0;
SELECT ALL rt0.c1, t1.c1, rt0.c0 FROM rt0, t1 GROUP BY rt0.c1, t1.c1, rt0.c0;
SELECT rt0.c1, t1.c1, rt0.c0 FROM rt0, t1 GROUP BY rt0.c1, t1.c1, rt0.c0 HAVING GROUP_CONCAT(AVG(GROUP_CONCAT(MAX(GROUP_CONCAT(rt0.c0))))) UNION ALL SELECT rt0.c1, t1.c1, rt0.c0 FROM rt0, t1 GROUP BY rt0.c1, t1.c1, rt0.c0 HAVING (NOT (GROUP_CONCAT(AVG(GROUP_CONCAT(MAX(GROUP_CONCAT(rt0.c0))))))) UNION ALL SELECT rt0.c1, t1.c1, rt0.c0 FROM rt0, t1 GROUP BY rt0.c1, t1.c1, rt0.c0 HAVING ((GROUP_CONCAT(AVG(GROUP_CONCAT(MAX(GROUP_CONCAT(rt0.c0)))))) ISNULL);
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE (rt0.c0) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (rt0.c0))) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE (((rt0.c0) ISNULL));
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c3, rt0.c1 FROM rt0, t1;
SELECT DISTINCT rt0.c0, rt0.c3, rt0.c1 FROM rt0, t1 WHERE ((((((((((NOT (rt0.c0)))OR(((NULL) BETWEEN (rt0.c2) AND (rt0.c3)))))OR((NOT (rt0.c1)))))AND(((rt0.c1) BETWEEN (t1.c1) AND (rt0.c3)))))OR(((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0))))) UNION SELECT DISTINCT rt0.c0, rt0.c3, rt0.c1 FROM rt0, t1 WHERE ((NOT ((((((((((NOT (rt0.c0)))OR(((NULL) BETWEEN (rt0.c2) AND (rt0.c3)))))OR((NOT (rt0.c1)))))AND(((rt0.c1) BETWEEN (t1.c1) AND (rt0.c3)))))OR(((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0))))))) UNION SELECT DISTINCT rt0.c0, rt0.c3, rt0.c1 FROM rt0, t1 WHERE ((((((((((((NOT (rt0.c0)))OR(((NULL) BETWEEN (rt0.c2) AND (rt0.c3)))))OR((NOT (rt0.c1)))))AND(((rt0.c1) BETWEEN (t1.c1) AND (rt0.c3)))))OR(((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0))))) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c3, rt0.c1 FROM rt0, t1;
SELECT rt0.c1, rt0.c3, rt0.c2 FROM t1, rt0 GROUP BY rt0.c1, rt0.c3, rt0.c2;
SELECT ALL rt0.c1, rt0.c3, rt0.c2 FROM t1, rt0 WHERE ((- (NULL))) GROUP BY rt0.c1, rt0.c3, rt0.c2 UNION SELECT rt0.c1, rt0.c3, rt0.c2 FROM t1 NOT INDEXED, rt0 WHERE ((NOT ((- (NULL))))) GROUP BY rt0.c1, rt0.c3, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c3, rt0.c2 FROM t1, rt0 WHERE ((((- (NULL))) ISNULL)) GROUP BY rt0.c1, rt0.c3, rt0.c2;
SELECT rt0.c1, rt0.c3, rt0.c2 FROM t1, rt0 GROUP BY rt0.c1, rt0.c3, rt0.c2;
SELECT ALL t1.c1 FROM t1 GROUP BY t1.c1;
SELECT t1.c1 FROM t1 GROUP BY t1.c1 HAVING ROUND(((((t1.c1)OR(TOTAL(t1.c1))))OR(t1.c1)), (((t1.c1, AVG(t1.c1), MAX(t1.c1)))<>((AVG(t1.c1), TOTAL(TOTAL(t1.c1)), t1.c1)))) UNION ALL SELECT ALL t1.c1 FROM t1 GROUP BY t1.c1 HAVING (NOT (ROUND(((((t1.c1)OR(TOTAL(t1.c1))))OR(t1.c1)), (((t1.c1, AVG(t1.c1), MAX(t1.c1)))<>((AVG(t1.c1), TOTAL(TOTAL(t1.c1)), t1.c1)))))) UNION ALL SELECT t1.c1 FROM t1 GROUP BY t1.c1 HAVING ((ROUND(((((t1.c1)OR(TOTAL(t1.c1))))OR(t1.c1)), (((t1.c1, AVG(t1.c1), MAX(t1.c1)))!=((AVG(t1.c1), TOTAL(TOTAL(t1.c1)), t1.c1))))) ISNULL);
SELECT * FROM t1;
SELECT * FROM t1 WHERE (((((t1.c1, t1.c1, t1.c1)) NOT BETWEEN ((t1.c1, t1.c1, t1.c1)) AND ((t1.c1, t1.c1, 0xffffffffd1372b2e))) IN ())) UNION ALL SELECT * FROM t1 WHERE ((NOT (((((t1.c1, t1.c1, t1.c1)) NOT BETWEEN ((t1.c1, t1.c1, t1.c1)) AND ((t1.c1, t1.c1, 0Xffffffffd1372b2e))) IN ())))) UNION ALL SELECT * FROM t1 WHERE (((((((t1.c1, t1.c1, t1.c1)) NOT BETWEEN ((t1.c1, t1.c1, t1.c1)) AND ((t1.c1, t1.c1, 0xffffffffd1372b2e))) IN ())) ISNULL));
SELECT * FROM t1;
SELECT DISTINCT * FROM t1;
SELECT DISTINCT * FROM t1 WHERE (t1.c1) UNION SELECT DISTINCT * FROM t1 WHERE ((NOT (t1.c1))) UNION SELECT DISTINCT * FROM t1 WHERE (((t1.c1) ISNULL));
SELECT DISTINCT * FROM t1;
SELECT rt0.c1 FROM t1, rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM t1, rt0 WHERE (((((((rt0.c3) NOT BETWEEN (rt0.c2) AND (rt0.c3)))AND(((rt0.c3) NOT BETWEEN (t1.c1) AND (t1.c1)))))AND((rt0.c2 IN (rt0.c3))))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM t1, rt0 WHERE ((NOT (((((((rt0.c3) NOT BETWEEN (rt0.c2) AND (rt0.c3)))AND(((rt0.c3) NOT BETWEEN (t1.c1) AND (t1.c1)))))AND((rt0.c2 IN (rt0.c3))))))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM t1, rt0 WHERE (((((((((rt0.c3) NOT BETWEEN (rt0.c2) AND (rt0.c3)))AND(((rt0.c3) NOT BETWEEN (t1.c1) AND (t1.c1)))))AND((rt0.c2 IN (rt0.c3))))) ISNULL)) GROUP BY rt0.c1;
SELECT rt0.c1 FROM t1, rt0 GROUP BY rt0.c1;
SELECT rt0.c1, rt0.c0, rt0.c2, t1.c1 FROM t1, rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2, t1.c1;
SELECT rt0.c1, rt0.c0, rt0.c2, t1.c1 FROM t1, rt0 NOT INDEXED GROUP BY rt0.c1, rt0.c0, rt0.c2, t1.c1 HAVING (((AVG(rt0.c2)))>=(((((t1.c1, t1.c1, MAX(SUM(MIN(TOTAL(MAX(rt0.c3)))))))=((AVG(t1.c1), t1.c1, TOTAL(rt0.c0))))))) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c2, t1.c1 FROM t1, rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2, t1.c1 HAVING (NOT ((((AVG(rt0.c2)))>=(((((t1.c1, t1.c1, MAX(SUM(MIN(TOTAL(MAX(rt0.c3)))))))=((AVG(t1.c1), t1.c1, TOTAL(rt0.c0))))))))) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c2, t1.c1 FROM t1, rt0 GROUP BY rt0.c1, rt0.c0, rt0.c2, t1.c1 HAVING (((((AVG(rt0.c2)))>=(((((t1.c1, t1.c1, MAX(SUM(MIN(TOTAL(MAX(rt0.c3)))))))=((AVG(t1.c1), t1.c1, TOTAL(rt0.c0)))))))) ISNULL);
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE (((((rt0.c3)<(x'8726'))) BETWEEN ((('')>>('1536762423'))) AND (TRIM(DISTINCT rt0.c2, rt0.c0)))) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (((((rt0.c3)<(x'8726'))) BETWEEN ((('')>>('1536762423'))) AND (TRIM(DISTINCT rt0.c2, rt0.c0)))))) UNION ALL SELECT ALL * FROM rt0 WHERE (((((((rt0.c3)<(x'8726'))) BETWEEN ((('')>>('1536762423'))) AND (TRIM(DISTINCT rt0.c2, rt0.c0)))) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT * FROM t1;
SELECT DISTINCT * FROM t1 WHERE (((CASE WHEN t1.c1 THEN t1.c1 END) IS FALSE)) UNION SELECT DISTINCT * FROM t1 WHERE ((NOT (((CASE WHEN t1.c1 THEN t1.c1 END) IS FALSE)))) UNION SELECT DISTINCT * FROM t1 WHERE (((((CASE WHEN t1.c1 THEN t1.c1 END) IS FALSE)) ISNULL));
SELECT DISTINCT * FROM t1;
SELECT ALL t1.c1, rt0.c3, rt0.c2, rt0.c0 FROM rt0 RIGHT OUTER JOIN t1 ON (+ ((rt0.c3 IN ()))) GROUP BY t1.c1, rt0.c3, rt0.c2, rt0.c0;
SELECT t1.c1, rt0.c3, rt0.c2, rt0.c0 FROM rt0 RIGHT OUTER JOIN t1 ON (+ ((rt0.c3 IN ()))) WHERE (CAST(CAST(rt0.c2 AS NUMERIC) AS TEXT)) GROUP BY t1.c1, rt0.c3, rt0.c2, rt0.c0 UNION SELECT ALL t1.c1, rt0.c3, rt0.c2, rt0.c0 FROM rt0 RIGHT OUTER JOIN t1 ON (+ ((rt0.c3 IN ()))) WHERE ((NOT (CAST(CAST(rt0.c2 AS NUMERIC) AS TEXT)))) GROUP BY t1.c1, rt0.c3, rt0.c2, rt0.c0 UNION SELECT ALL t1.c1, rt0.c3, rt0.c2, rt0.c0 FROM rt0 RIGHT OUTER JOIN t1 ON (+ ((rt0.c3 IN ()))) WHERE (((CAST(CAST(rt0.c2 AS NUMERIC) AS TEXT)) ISNULL)) GROUP BY t1.c1, rt0.c3, rt0.c2, rt0.c0;
SELECT ALL t1.c1, rt0.c3, rt0.c2, rt0.c0 FROM rt0 RIGHT OUTER JOIN t1 ON (+ ((rt0.c3 IN ()))) GROUP BY t1.c1, rt0.c3, rt0.c2, rt0.c0;
SELECT t1.c1, rt0.c3, rt0.c0 FROM rt0 INNER JOIN t1 ON (+ (((rt0.c1) NOT NULL))) GROUP BY t1.c1, rt0.c3, rt0.c0;
SELECT t1.c1, rt0.c3, rt0.c0 FROM rt0 INNER JOIN t1 ON (+ (((rt0.c1) NOT NULL))) GROUP BY t1.c1, rt0.c3, rt0.c0 HAVING (~ (((x'8e21')IS(t1.c1)))) UNION ALL SELECT t1.c1, rt0.c3, rt0.c0 FROM rt0 INNER JOIN t1 ON (+ (((rt0.c1) NOT NULL))) GROUP BY t1.c1, rt0.c3, rt0.c0 HAVING (NOT ((~ (((x'8e21')IS(t1.c1)))))) UNION ALL SELECT t1.c1, rt0.c3, rt0.c0 FROM rt0 INNER JOIN t1 ON (+ (((rt0.c1) NOT NULL))) GROUP BY t1.c1, rt0.c3, rt0.c0 HAVING (((~ (((x'8e21')IS(t1.c1))))) ISNULL);
SELECT t1.c1, rt0.c3, rt0.c0 FROM rt0 INNER JOIN t1 ON (+ (((rt0.c1) NOT NULL))) GROUP BY t1.c1, rt0.c3, rt0.c0;
SELECT t1.c1, rt0.c3, rt0.c0 FROM rt0 INNER JOIN t1 ON (+ (((rt0.c1) NOT NULL))) GROUP BY t1.c1, rt0.c3, rt0.c0 HAVING (~ (((x'8e21')IS(t1.c1)))) UNION ALL SELECT t1.c1, rt0.c3, rt0.c0 FROM rt0 INNER JOIN t1 ON (+ (((rt0.c1) NOT NULL))) GROUP BY t1.c1, rt0.c3, rt0.c0 HAVING (NOT ((~ (((x'8e21')IS(t1.c1)))))) UNION ALL SELECT t1.c1, rt0.c3, rt0.c0 FROM rt0 INNER JOIN t1 ON (+ (((rt0.c1) NOT NULL))) GROUP BY t1.c1, rt0.c3, rt0.c0 HAVING (((~ (((x'8e21')IS(t1.c1))))) ISNULL);
SELECT t1.c1, rt0.c3, rt0.c0 FROM rt0 INNER JOIN t1 ON (+ (((rt0.c1) NOT NULL))) GROUP BY t1.c1, rt0.c3, rt0.c0;
SELECT rt0.c3, rt0.c0, rt0.c2 FROM rt0, t1;
SELECT ALL rt0.c3, rt0.c0, rt0.c2 FROM rt0, t1 WHERE (((((((rt0.c0)AND(rt0.c1)))OR(rt0.c0)))IS NOT(((0.7324388028740245) BETWEEN (rt0.c1) AND (rt0.c2))))) UNION ALL SELECT rt0.c3, rt0.c0, rt0.c2 FROM rt0, t1 WHERE ((NOT (((((((rt0.c0)AND(rt0.c1)))OR(rt0.c0)))IS NOT(((0.7324388028740245) BETWEEN (rt0.c1) AND (rt0.c2))))))) UNION ALL SELECT rt0.c3, rt0.c0, rt0.c2 FROM rt0, t1 WHERE (((((((((rt0.c0)AND(rt0.c1)))OR(rt0.c0)))IS NOT(((0.7324388028740245) BETWEEN (rt0.c1) AND (rt0.c2))))) ISNULL));
SELECT rt0.c3, rt0.c0, rt0.c2 FROM rt0, t1;
SELECT DISTINCT * FROM t1, rt0;
SELECT DISTINCT * FROM t1, rt0 WHERE ((('嚿v2%8')<=(CAST(t1.c1 AS INTEGER)))) UNION SELECT DISTINCT * FROM t1, rt0 WHERE ((NOT ((('嚿v2%8')<=(CAST(t1.c1 AS INTEGER)))))) UNION SELECT DISTINCT * FROM t1, rt0 WHERE ((((('嚿v2%8')<=(CAST(t1.c1 AS INTEGER)))) ISNULL));
SELECT DISTINCT * FROM t1, rt0;
SELECT rt0.c3, rt0.c2, t1.c1, rt0.c1 FROM rt0 LEFT OUTER JOIN t1 ON NULL GROUP BY rt0.c3, rt0.c2, t1.c1, rt0.c1;
SELECT ALL rt0.c3, rt0.c2, t1.c1, rt0.c1 FROM rt0 LEFT OUTER JOIN t1 ON NULL WHERE ((((((rt0.c0, rt0.c2, rt0.c0)) BETWEEN ((t1.c1, rt0.c2, rt0.c0)) AND ((t1.c1, t1.c1, t1.c1)))) BETWEEN (rt0.c3 COLLATE BINARY) AND ((((t1.c1, t1.c1, rt0.c1, t1.c1, rt0.c0))<=((rt0.c1, x'70fb', rt0.c2, rt0.c3, rt0.c2)))))) GROUP BY rt0.c3, rt0.c2, t1.c1, rt0.c1 UNION SELECT ALL rt0.c3, rt0.c2, t1.c1, rt0.c1 FROM rt0 LEFT OUTER JOIN t1 ON NULL WHERE ((NOT ((((((rt0.c0, rt0.c2, rt0.c0)) BETWEEN ((t1.c1, rt0.c2, rt0.c0)) AND ((t1.c1, t1.c1, t1.c1)))) BETWEEN (rt0.c3 COLLATE BINARY) AND ((((t1.c1, t1.c1, rt0.c1, t1.c1, rt0.c0))<=((rt0.c1, x'70fb', rt0.c2, rt0.c3, rt0.c2)))))))) GROUP BY rt0.c3, rt0.c2, t1.c1, rt0.c1 UNION SELECT rt0.c3, rt0.c2, t1.c1, rt0.c1 FROM rt0 LEFT OUTER JOIN t1 ON NULL WHERE ((((((((rt0.c0, rt0.c2, rt0.c0)) BETWEEN ((t1.c1, rt0.c2, rt0.c0)) AND ((t1.c1, t1.c1, t1.c1)))) BETWEEN (rt0.c3 COLLATE BINARY) AND ((((t1.c1, t1.c1, rt0.c1, t1.c1, rt0.c0))<=((rt0.c1, x'70fb', rt0.c2, rt0.c3, rt0.c2)))))) ISNULL)) GROUP BY rt0.c3, rt0.c2, t1.c1, rt0.c1;
SELECT rt0.c3, rt0.c2, t1.c1, rt0.c1 FROM rt0 LEFT OUTER JOIN t1 ON NULL GROUP BY rt0.c3, rt0.c2, t1.c1, rt0.c1;
SELECT t1.c1, rt0.c2, rt0.c1 FROM rt0, t1 GROUP BY t1.c1, rt0.c2, rt0.c1;
SELECT ALL t1.c1, rt0.c2, rt0.c1 FROM rt0, t1 GROUP BY t1.c1, rt0.c2, rt0.c1 HAVING ((MAX(MIN(TOTAL(rt0.c0))))AND(((((((((rt0.c1)OR(rt0.c0)))AND(rt0.c2)))AND(rt0.c3)))OR(COUNT(*))))) UNION ALL SELECT ALL t1.c1, rt0.c2, rt0.c1 FROM rt0, t1 GROUP BY t1.c1, rt0.c2, rt0.c1 HAVING (NOT (((MAX(MIN(TOTAL(rt0.c0))))AND(((((((((rt0.c1)OR(rt0.c0)))AND(rt0.c2)))AND(rt0.c3)))OR(COUNT(*))))))) UNION ALL SELECT t1.c1, rt0.c2, rt0.c1 FROM rt0, t1 GROUP BY t1.c1, rt0.c2, rt0.c1 HAVING ((((MAX(MIN(TOTAL(rt0.c0))))AND(((((((((rt0.c1)OR(rt0.c0)))AND(rt0.c2)))AND(rt0.c3)))OR(COUNT(*)))))) ISNULL);
SELECT ALL t1.c1 FROM t1;
SELECT ALL t1.c1 FROM t1 WHERE (((t1.c1)IS NOT(t1.c1)) COLLATE BINARY) UNION ALL SELECT ALL t1.c1 FROM t1 WHERE ((NOT (((t1.c1)IS NOT(t1.c1)) COLLATE BINARY))) UNION ALL SELECT t1.c1 FROM t1 WHERE (((((t1.c1)IS NOT(t1.c1)) COLLATE BINARY) ISNULL));
SELECT ALL t1.c1 FROM t1;
SELECT DISTINCT * FROM t1, rt0;
SELECT DISTINCT * FROM t1, rt0 WHERE (CASE 'A'  WHEN ((rt0.c0)-(rt0.c2)) THEN ((t1.c1) ISNULL) ELSE NULL END) UNION SELECT DISTINCT * FROM t1, rt0 WHERE ((NOT (CASE 'A'  WHEN ((rt0.c0)-(rt0.c2)) THEN ((t1.c1) ISNULL) ELSE NULL END))) UNION SELECT DISTINCT * FROM t1, rt0 WHERE (((CASE 'A'  WHEN ((rt0.c0)-(rt0.c2)) THEN ((t1.c1) ISNULL) ELSE NULL END) ISNULL));
SELECT DISTINCT * FROM t1, rt0;
SELECT ALL t1.c1, rt0.c0, rt0.c2, rt0.c3 FROM rt0, t1 GROUP BY t1.c1, rt0.c0, rt0.c2, rt0.c3;
SELECT ALL t1.c1, rt0.c0, rt0.c2, rt0.c3 FROM rt0, t1 WHERE (((LTRIM(rt0.c1, rt0.c0))<=(CAST(rt0.c2 AS NUMERIC)))) GROUP BY t1.c1, rt0.c0, rt0.c2, rt0.c3 UNION SELECT t1.c1, rt0.c0, rt0.c2, rt0.c3 FROM rt0, t1 WHERE ((NOT (((LTRIM(rt0.c1, rt0.c0))<=(CAST(rt0.c2 AS NUMERIC)))))) GROUP BY t1.c1, rt0.c0, rt0.c2, rt0.c3 UNION SELECT t1.c1, rt0.c0, rt0.c2, rt0.c3 FROM rt0, t1 WHERE (((((LTRIM(rt0.c1, rt0.c0))<=(CAST(rt0.c2 AS NUMERIC)))) ISNULL)) GROUP BY t1.c1, rt0.c0, rt0.c2, rt0.c3;
SELECT ALL t1.c1, rt0.c0, rt0.c2, rt0.c3 FROM rt0, t1 GROUP BY t1.c1, rt0.c0, rt0.c2, rt0.c3;
SELECT rt0.c3, t1.c1, rt0.c0 FROM rt0, t1 GROUP BY rt0.c3, t1.c1, rt0.c0;
SELECT rt0.c3, t1.c1, rt0.c0 FROM rt0, t1 GROUP BY rt0.c3, t1.c1, rt0.c0 HAVING CAST(((MAX(GROUP_CONCAT(rt0.c3)))*(TOTAL(rt0.c1))) AS REAL) UNION ALL SELECT ALL rt0.c3, t1.c1, rt0.c0 FROM rt0, t1 GROUP BY rt0.c3, t1.c1, rt0.c0 HAVING (NOT (CAST(((MAX(GROUP_CONCAT(rt0.c3)))*(TOTAL(rt0.c1))) AS REAL))) UNION ALL SELECT ALL rt0.c3, t1.c1, rt0.c0 FROM rt0, t1 GROUP BY rt0.c3, t1.c1, rt0.c0 HAVING ((CAST(((MAX(GROUP_CONCAT(rt0.c3)))*(TOTAL(rt0.c1))) AS REAL)) ISNULL);
SELECT * FROM t1;
SELECT * FROM t1 WHERE (UPPER(((((x'')OR(t1.c1)))OR(t1.c1)))) UNION ALL SELECT ALL * FROM t1 WHERE ((NOT (UPPER(((((x'')OR(t1.c1)))OR(t1.c1)))))) UNION ALL SELECT * FROM t1 WHERE (((UPPER(((((x'')OR(t1.c1)))OR(t1.c1)))) ISNULL));
SELECT * FROM t1;
SELECT DISTINCT * FROM t1, rt0;
SELECT DISTINCT * FROM t1, rt0 WHERE ((((-2.045397926E9 IN (-1860178638))) NOT BETWEEN (IFNULL(DISTINCT rt0.c3, t1.c1)) AND (CASE rt0.c0  WHEN rt0.c1 THEN t1.c1 END))) UNION SELECT DISTINCT * FROM t1, rt0 WHERE ((NOT ((((-2.045397926E9 IN (-1860178638))) NOT BETWEEN (IFNULL(DISTINCT rt0.c3, t1.c1)) AND (CASE rt0.c0  WHEN rt0.c1 THEN t1.c1 END))))) UNION SELECT DISTINCT * FROM t1, rt0 WHERE ((((((-2.045397926E9 IN (-1860178638))) NOT BETWEEN (IFNULL(DISTINCT rt0.c3, t1.c1)) AND (CASE rt0.c0  WHEN rt0.c1 THEN t1.c1 END))) ISNULL));
SELECT DISTINCT * FROM t1, rt0;
SELECT t1.c1 FROM t1 GROUP BY t1.c1;
SELECT t1.c1 FROM t1 WHERE ((((((t1.c1)) NOT BETWEEN ((t1.c1)) AND ((t1.c1))))==(((t1.c1) ISNULL)))) GROUP BY t1.c1 UNION SELECT t1.c1 FROM t1 WHERE ((NOT ((((((t1.c1)) NOT BETWEEN ((t1.c1)) AND ((t1.c1))))=(((t1.c1) ISNULL)))))) GROUP BY t1.c1 UNION SELECT ALL t1.c1 FROM t1 WHERE ((((((((t1.c1)) NOT BETWEEN ((t1.c1)) AND ((t1.c1))))==(((t1.c1) ISNULL)))) ISNULL)) GROUP BY t1.c1;
SELECT t1.c1 FROM t1 GROUP BY t1.c1;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0, t1 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0, t1 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING COUNT((~ (rt0.c0))) UNION ALL SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0, t1 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING (NOT (COUNT((~ (rt0.c0))))) UNION ALL SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0, t1 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING ((COUNT((~ (rt0.c0)))) ISNULL);
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0, t1 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0, t1 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING COUNT((~ (rt0.c0))) UNION ALL SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0, t1 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING (NOT (COUNT((~ (rt0.c0))))) UNION ALL SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0, t1 GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING ((COUNT((~ (rt0.c0)))) ISNULL);
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0, t1 GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT ALL SUM(TRIM(((((rt0.c0)OR(rt0.c3)))AND(rt0.c2)))) FROM rt0;
SELECT ALL * FROM t1;
SELECT * FROM t1 WHERE ((((((((((((t1.c1)OR(t1.c1)))AND(t1.c1)))OR(NULL)))AND(t1.c1))))!=(((((t1.c1, '847793795', t1.c1, t1.c1, t1.c1)) BETWEEN ((t1.c1, t1.c1, t1.c1, t1.c1, 'W/')) AND ((t1.c1, t1.c1, t1.c1, t1.c1, t1.c1))))))) UNION ALL SELECT ALL * FROM t1 WHERE ((NOT ((((((((((((t1.c1)OR(t1.c1)))AND(t1.c1)))OR(NULL)))AND(t1.c1))))<>(((((t1.c1, '847793795', t1.c1, t1.c1, t1.c1)) BETWEEN ((t1.c1, t1.c1, t1.c1, t1.c1, 'W/')) AND ((t1.c1, t1.c1, t1.c1, t1.c1, t1.c1))))))))) UNION ALL SELECT ALL * FROM t1 WHERE ((((((((((((((t1.c1)OR(t1.c1)))AND(t1.c1)))OR(NULL)))AND(t1.c1))))<>(((((t1.c1, '847793795', t1.c1, t1.c1, t1.c1)) BETWEEN ((t1.c1, t1.c1, t1.c1, t1.c1, 'W/')) AND ((t1.c1, t1.c1, t1.c1, t1.c1, t1.c1))))))) ISNULL));
SELECT ALL * FROM t1;
SELECT DISTINCT * FROM t1, rt0;
SELECT DISTINCT * FROM t1, rt0 WHERE (CASE rt0.c3 COLLATE BINARY  WHEN 0.4401734685621961 THEN CASE rt0.c2  WHEN '-2045397926' THEN rt0.c0 ELSE rt0.c3 END WHEN ((t1.c1) IS TRUE) THEN ((rt0.c1) IS FALSE) WHEN rt0.c1 COLLATE BINARY THEN (((rt0.c0))<=((t1.c1))) END) UNION SELECT DISTINCT * FROM t1, rt0 NOT INDEXED WHERE ((NOT (CASE rt0.c3 COLLATE BINARY  WHEN 0.4401734685621961 THEN CASE rt0.c2  WHEN '-2045397926' THEN rt0.c0 ELSE rt0.c3 END WHEN ((t1.c1) IS TRUE) THEN ((rt0.c1) IS FALSE) WHEN rt0.c1 COLLATE BINARY THEN (((rt0.c0))<=((t1.c1))) END))) UNION SELECT DISTINCT * FROM t1, rt0 WHERE (((CASE rt0.c3 COLLATE BINARY  WHEN 0.4401734685621961 THEN CASE rt0.c2  WHEN '-2045397926' THEN rt0.c0 ELSE rt0.c3 END WHEN ((t1.c1) IS TRUE) THEN ((rt0.c1) IS FALSE) WHEN rt0.c1 COLLATE BINARY THEN (((rt0.c0))<=((t1.c1))) END) ISNULL));
SELECT DISTINCT * FROM t1, rt0;
SELECT ALL t1.c1, rt0.c1, rt0.c0 FROM t1 FULL OUTER JOIN rt0 ON (NOT (x'')) GROUP BY t1.c1, rt0.c1, rt0.c0;
SELECT t1.c1, rt0.c1, rt0.c0 FROM t1 FULL OUTER JOIN rt0 ON (NOT (x'')) WHERE (((UNLIKELY(t1.c1)) NOTNULL)) GROUP BY t1.c1, rt0.c1, rt0.c0 UNION SELECT t1.c1, rt0.c1, rt0.c0 FROM t1 FULL OUTER JOIN rt0 ON (NOT (x'')) WHERE ((NOT (((UNLIKELY(t1.c1)) NOTNULL)))) GROUP BY t1.c1, rt0.c1, rt0.c0 UNION SELECT ALL t1.c1, rt0.c1, rt0.c0 FROM t1 FULL OUTER JOIN rt0 ON (NOT (x'')) WHERE (((((UNLIKELY(t1.c1)) NOTNULL)) ISNULL)) GROUP BY t1.c1, rt0.c1, rt0.c0;
SELECT ALL t1.c1, rt0.c1, rt0.c0 FROM t1 FULL OUTER JOIN rt0 ON (NOT (x'')) GROUP BY t1.c1, rt0.c1, rt0.c0;
SELECT ALL rt0.c0, rt0.c2, t1.c1, rt0.c1, rt0.c3 FROM rt0, t1 GROUP BY rt0.c0, rt0.c2, t1.c1, rt0.c1, rt0.c3;
SELECT rt0.c0, rt0.c2, t1.c1, rt0.c1, rt0.c3 FROM rt0, t1 GROUP BY rt0.c0, rt0.c2, t1.c1, rt0.c1, rt0.c3 HAVING TRIM(AVG(rt0.c3)) UNION ALL SELECT ALL rt0.c0, rt0.c2, t1.c1, rt0.c1, rt0.c3 FROM rt0, t1 GROUP BY rt0.c0, rt0.c2, t1.c1, rt0.c1, rt0.c3 HAVING (NOT (TRIM(AVG(rt0.c3)))) UNION ALL SELECT rt0.c0, rt0.c2, t1.c1, rt0.c1, rt0.c3 FROM rt0, t1 GROUP BY rt0.c0, rt0.c2, t1.c1, rt0.c1, rt0.c3 HAVING ((TRIM(AVG(rt0.c3))) ISNULL);
SELECT ALL rt0.c0, rt0.c2, t1.c1, rt0.c1, rt0.c3 FROM rt0, t1 GROUP BY rt0.c0, rt0.c2, t1.c1, rt0.c1, rt0.c3;
SELECT rt0.c0, rt0.c2, t1.c1, rt0.c1, rt0.c3 FROM rt0, t1 GROUP BY rt0.c0, rt0.c2, t1.c1, rt0.c1, rt0.c3 HAVING TRIM(AVG(rt0.c3)) UNION ALL SELECT ALL rt0.c0, rt0.c2, t1.c1, rt0.c1, rt0.c3 FROM rt0, t1 GROUP BY rt0.c0, rt0.c2, t1.c1, rt0.c1, rt0.c3 HAVING (NOT (TRIM(AVG(rt0.c3)))) UNION ALL SELECT rt0.c0, rt0.c2, t1.c1, rt0.c1, rt0.c3 FROM rt0, t1 GROUP BY rt0.c0, rt0.c2, t1.c1, rt0.c1, rt0.c3 HAVING ((TRIM(AVG(rt0.c3))) ISNULL);
SELECT ALL rt0.c0, rt0.c2, t1.c1, rt0.c1, rt0.c3 FROM rt0, t1 GROUP BY rt0.c0, rt0.c2, t1.c1, rt0.c1, rt0.c3;
SELECT * FROM rt0, t1;
SELECT ALL * FROM rt0, t1 WHERE (highlight((rt0.c1 IN ()), ((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c1)), (((x'')) NOT BETWEEN ((rt0.c1)) AND ((t1.c1))), rt0.c1)) UNION ALL SELECT ALL * FROM rt0, t1 WHERE ((NOT (highlight((rt0.c1 IN ()), ((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c1)), (((x'')) NOT BETWEEN ((rt0.c1)) AND ((t1.c1))), rt0.c1)))) UNION ALL SELECT ALL * FROM rt0, t1 WHERE (((highlight((rt0.c1 IN ()), ((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c1)), (((x'')) NOT BETWEEN ((rt0.c1)) AND ((t1.c1))), rt0.c1)) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c3 FROM t1, rt0;
SELECT DISTINCT rt0.c1, rt0.c3 FROM t1, rt0 WHERE (TRIM(DISTINCT ((rt0.c1)<=(rt0.c1)))) UNION SELECT DISTINCT rt0.c1, rt0.c3 FROM t1, rt0 WHERE ((NOT (TRIM(DISTINCT ((rt0.c1)<=(rt0.c1)))))) UNION SELECT DISTINCT rt0.c1, rt0.c3 FROM t1, rt0 WHERE (((TRIM(DISTINCT ((rt0.c1)<=(rt0.c1)))) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c3 FROM t1, rt0;
SELECT ALL t1.c1 FROM t1 GROUP BY t1.c1;
SELECT t1.c1 FROM t1 WHERE (((x'') NOTNULL)) GROUP BY t1.c1 UNION SELECT t1.c1 FROM t1 WHERE ((NOT (((x'') NOTNULL)))) GROUP BY t1.c1 UNION SELECT t1.c1 FROM t1 WHERE (((((x'') NOTNULL)) ISNULL)) GROUP BY t1.c1;
SELECT ALL t1.c1 FROM t1 GROUP BY t1.c1;
SELECT t1.c1 FROM t1 GROUP BY t1.c1;
SELECT ALL t1.c1 FROM t1 GROUP BY t1.c1 HAVING SUM(SUM(MIN(TOTAL(MIN(0.1432224633926653))))) UNION ALL SELECT t1.c1 FROM t1 GROUP BY t1.c1 HAVING (NOT (SUM(SUM(MIN(TOTAL(MIN(0.1432224633926653))))))) UNION ALL SELECT ALL t1.c1 FROM t1 GROUP BY t1.c1 HAVING ((SUM(SUM(MIN(TOTAL(MIN(0.1432224633926653)))))) ISNULL);
SELECT SUM(((rt0.c2 COLLATE NOCASE) NOT NULL)) FROM rt0 ORDER BY (rt0.c1 IN ()) COLLATE NOCASE ASC, CASE WHEN ((((((((((((rt0.c2)AND(rt0.c1)))AND(rt0.c0)))AND('')))OR(rt0.c3)))OR(rt0.c2)))OR(rt0.c1)) THEN TRIM(rt0.c1, rt0.c3) END;
SELECT rt0.c2, rt0.c1, rt0.c3, rt0.c0 FROM t1, rt0;
SELECT rt0.c2, rt0.c1, rt0.c3, rt0.c0 FROM t1, rt0 WHERE (rt0.c1) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c3, rt0.c0 FROM t1, rt0 WHERE ((NOT (rt0.c1))) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c3, rt0.c0 FROM t1, rt0 WHERE (((rt0.c1) ISNULL));
SELECT rt0.c2, rt0.c1, rt0.c3, rt0.c0 FROM t1, rt0;
SELECT DISTINCT * FROM t1 LEFT OUTER JOIN rt0 ON t1.c1;
SELECT DISTINCT * FROM t1 LEFT OUTER JOIN rt0 ON t1.c1 WHERE (t1.c1 COLLATE BINARY) UNION SELECT DISTINCT * FROM t1 LEFT OUTER JOIN rt0 ON t1.c1 WHERE ((NOT (t1.c1 COLLATE BINARY))) UNION SELECT DISTINCT * FROM t1 LEFT OUTER JOIN rt0 ON t1.c1 WHERE (((t1.c1 COLLATE BINARY) ISNULL));
SELECT DISTINCT * FROM t1 LEFT OUTER JOIN rt0 ON t1.c1;
SELECT ALL t1.c1, rt0.c1, rt0.c2, rt0.c3, rt0.c0 FROM rt0, t1 GROUP BY t1.c1, rt0.c1, rt0.c2, rt0.c3, rt0.c0;
SELECT ALL t1.c1, rt0.c1, rt0.c2, rt0.c3, rt0.c0 FROM rt0, t1 WHERE ((+ (((rt0.c1)<=(rt0.c2))))) GROUP BY t1.c1, rt0.c1, rt0.c2, rt0.c3, rt0.c0 UNION SELECT t1.c1, rt0.c1, rt0.c2, rt0.c3, rt0.c0 FROM rt0, t1 WHERE ((NOT ((+ (((rt0.c1)<=(rt0.c2))))))) GROUP BY t1.c1, rt0.c1, rt0.c2, rt0.c3, rt0.c0 UNION SELECT ALL t1.c1, rt0.c1, rt0.c2, rt0.c3, rt0.c0 FROM rt0, t1 WHERE ((((+ (((rt0.c1)<=(rt0.c2))))) ISNULL)) GROUP BY t1.c1, rt0.c1, rt0.c2, rt0.c3, rt0.c0;
SELECT ALL t1.c1, rt0.c1, rt0.c2, rt0.c3, rt0.c0 FROM rt0, t1 GROUP BY t1.c1, rt0.c1, rt0.c2, rt0.c3, rt0.c0;
SELECT ALL t1.c1 FROM t1 GROUP BY t1.c1;
SELECT ALL t1.c1 FROM t1 GROUP BY t1.c1 HAVING (AVG(t1.c1) IN ()) UNION ALL SELECT ALL t1.c1 FROM t1 GROUP BY t1.c1 HAVING (NOT ((AVG(t1.c1) IN ()))) UNION ALL SELECT ALL t1.c1 FROM t1 GROUP BY t1.c1 HAVING (((AVG(t1.c1) IN ())) ISNULL);
SELECT ALL t1.c1 FROM t1 GROUP BY t1.c1;
SELECT ALL t1.c1 FROM t1 GROUP BY t1.c1 HAVING (AVG(t1.c1) IN ()) UNION ALL SELECT ALL t1.c1 FROM t1 GROUP BY t1.c1 HAVING (NOT ((AVG(t1.c1) IN ()))) UNION ALL SELECT ALL t1.c1 FROM t1 GROUP BY t1.c1 HAVING (((AVG(t1.c1) IN ())) ISNULL);
SELECT ALL t1.c1 FROM t1 GROUP BY t1.c1;
SELECT t1.c1 FROM t1;
SELECT ALL t1.c1 FROM t1 WHERE (CASE WHEN UNLIKELY(t1.c1) THEN ((t1.c1)-(t1.c1)) ELSE CAST(t1.c1 AS TEXT) END) UNION ALL SELECT t1.c1 FROM t1 WHERE ((NOT (CASE WHEN UNLIKELY(t1.c1) THEN ((t1.c1)-(t1.c1)) ELSE CAST(t1.c1 AS TEXT) END))) UNION ALL SELECT t1.c1 FROM t1 WHERE (((CASE WHEN UNLIKELY(t1.c1) THEN ((t1.c1)-(t1.c1)) ELSE CAST(t1.c1 AS TEXT) END) ISNULL));
SELECT t1.c1 FROM t1;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((+ (((((rt0.c3)AND(rt0.c0)))AND(rt0.c1))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((+ (((((rt0.c3)AND(rt0.c0)))AND(rt0.c1))))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((+ (((((rt0.c3)AND(rt0.c0)))AND(rt0.c1))))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c0, rt0.c3, rt0.c2 FROM t1 CROSS JOIN rt0 ON ((((rt0.c0)||(rt0.c2)))&(((rt0.c1)IS NOT(rt0.c0)))) GROUP BY rt0.c0, rt0.c3, rt0.c2;
SELECT ALL rt0.c0, rt0.c3, rt0.c2 FROM t1 CROSS JOIN rt0 ON ((((rt0.c0)||(rt0.c2)))&(((rt0.c1)IS NOT(rt0.c0)))) WHERE (((((TRIM(t1.c1, t1.c1))AND(((((rt0.c2)AND(rt0.c0)))OR(rt0.c1)))))OR(((0.6339462745997575)!=(rt0.c3))))) GROUP BY rt0.c0, rt0.c3, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c3, rt0.c2 FROM t1 CROSS JOIN rt0 ON ((((rt0.c0)||(rt0.c2)))&(((rt0.c1)IS NOT(rt0.c0)))) WHERE ((NOT (((((TRIM(t1.c1, t1.c1))AND(((((rt0.c2)AND(rt0.c0)))OR(rt0.c1)))))OR(((0.6339462745997575)!=(rt0.c3))))))) GROUP BY rt0.c0, rt0.c3, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c3, rt0.c2 FROM t1 CROSS JOIN rt0 ON ((((rt0.c0)||(rt0.c2)))&(((rt0.c1)IS NOT(rt0.c0)))) WHERE (((((((TRIM(t1.c1, t1.c1))AND(((((rt0.c2)AND(rt0.c0)))OR(rt0.c1)))))OR(((0.6339462745997575)!=(rt0.c3))))) ISNULL)) GROUP BY rt0.c0, rt0.c3, rt0.c2;
SELECT ALL rt0.c0, rt0.c3, rt0.c2 FROM t1 CROSS JOIN rt0 ON ((((rt0.c0)||(rt0.c2)))&(((rt0.c1)IS NOT(rt0.c0)))) GROUP BY rt0.c0, rt0.c3, rt0.c2;
SELECT t1.c1, rt0.c3 FROM rt0, t1 GROUP BY t1.c1, rt0.c3;
SELECT t1.c1, rt0.c3 FROM rt0, t1 GROUP BY t1.c1, rt0.c3 HAVING (AVG(COUNT(*)) IN ()) UNION ALL SELECT ALL t1.c1, rt0.c3 FROM rt0, t1 GROUP BY t1.c1, rt0.c3 HAVING (NOT ((AVG(COUNT(*)) IN ()))) UNION ALL SELECT ALL t1.c1, rt0.c3 FROM rt0, t1 GROUP BY t1.c1, rt0.c3 HAVING (((AVG(COUNT(*)) IN ())) ISNULL);
SELECT t1.c1, rt0.c3 FROM rt0, t1 GROUP BY t1.c1, rt0.c3;
SELECT t1.c1, rt0.c3 FROM rt0, t1 GROUP BY t1.c1, rt0.c3 HAVING (AVG(COUNT(*)) IN ()) UNION ALL SELECT ALL t1.c1, rt0.c3 FROM rt0, t1 GROUP BY t1.c1, rt0.c3 HAVING (NOT ((AVG(COUNT(*)) IN ()))) UNION ALL SELECT ALL t1.c1, rt0.c3 FROM rt0, t1 GROUP BY t1.c1, rt0.c3 HAVING (((AVG(COUNT(*)) IN ())) ISNULL);
SELECT t1.c1, rt0.c3 FROM rt0, t1 GROUP BY t1.c1, rt0.c3;
SELECT SUM(((rt0.c0)<(rt0.c3 COLLATE BINARY))) FROM t1, rt0;
SELECT * FROM t1, rt0;
SELECT ALL * FROM t1, rt0 WHERE (CASE WHEN CASE WHEN rt0.c3 THEN rt0.c2 END THEN ((t1.c1) NOTNULL) ELSE x'425ca3e6b985' END) UNION ALL SELECT * FROM t1, rt0 WHERE ((NOT (CASE WHEN CASE WHEN rt0.c3 THEN rt0.c2 END THEN ((t1.c1) NOTNULL) ELSE x'425ca3e6b985' END))) UNION ALL SELECT ALL * FROM t1, rt0 WHERE (((CASE WHEN CASE WHEN rt0.c3 THEN rt0.c2 END THEN ((t1.c1) NOTNULL) ELSE x'425ca3e6b985' END) ISNULL));
SELECT * FROM t1, rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((((((rt0.c2, rt0.c3, rt0.c3, 0.459809083236117, rt0.c1)) BETWEEN ((rt0.c0, rt0.c1, rt0.c0, rt0.c0, rt0.c3)) AND ((rt0.c0, rt0.c1, rt0.c2, rt0.c3, rt0.c1))))>=(CASE WHEN rt0.c1 THEN rt0.c1 END))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((((((rt0.c2, rt0.c3, rt0.c3, 0.459809083236117, rt0.c1)) BETWEEN ((rt0.c0, rt0.c1, rt0.c0, rt0.c0, rt0.c3)) AND ((rt0.c0, rt0.c1, rt0.c2, rt0.c3, rt0.c1))))>=(CASE WHEN rt0.c1 THEN rt0.c1 END))))) UNION SELECT DISTINCT * FROM rt0 NOT INDEXED WHERE ((((((((rt0.c2, rt0.c3, rt0.c3, 0.459809083236117, rt0.c1)) BETWEEN ((rt0.c0, rt0.c1, rt0.c0, rt0.c0, rt0.c3)) AND ((rt0.c0, rt0.c1, rt0.c2, rt0.c3, rt0.c1))))>=(CASE WHEN rt0.c1 THEN rt0.c1 END))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c2, rt0.c0, rt0.c1, t1.c1, rt0.c3 FROM rt0 CROSS JOIN t1 ON ((((NULL)<>(rt0.c2)))>(t1.c1 COLLATE RTRIM)) GROUP BY rt0.c2, rt0.c0, rt0.c1, t1.c1, rt0.c3;
SELECT ALL rt0.c2, rt0.c0, rt0.c1, t1.c1, rt0.c3 FROM rt0 CROSS JOIN t1 ON ((((NULL)!=(rt0.c2)))>(t1.c1 COLLATE RTRIM)) WHERE (((+ (rt0.c2)) IN ())) GROUP BY rt0.c2, rt0.c0, rt0.c1, t1.c1, rt0.c3 UNION SELECT ALL rt0.c2, rt0.c0, rt0.c1, t1.c1, rt0.c3 FROM rt0 CROSS JOIN t1 ON ((((NULL)<>(rt0.c2)))>(t1.c1 COLLATE RTRIM)) WHERE ((NOT (((+ (rt0.c2)) IN ())))) GROUP BY rt0.c2, rt0.c0, rt0.c1, t1.c1, rt0.c3 UNION SELECT rt0.c2, rt0.c0, rt0.c1, t1.c1, rt0.c3 FROM rt0 CROSS JOIN t1 ON ((((NULL)<>(rt0.c2)))>(t1.c1 COLLATE RTRIM)) WHERE (((((+ (rt0.c2)) IN ())) ISNULL)) GROUP BY rt0.c2, rt0.c0, rt0.c1, t1.c1, rt0.c3;
SELECT ALL rt0.c2, rt0.c0, rt0.c1, t1.c1, rt0.c3 FROM rt0 CROSS JOIN t1 ON ((((NULL)<>(rt0.c2)))>(t1.c1 COLLATE RTRIM)) GROUP BY rt0.c2, rt0.c0, rt0.c1, t1.c1, rt0.c3;
SELECT rt0.c2 FROM rt0, t1 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0, t1 GROUP BY rt0.c2 HAVING (((((((((~ (rt0.c0)))OR(COUNT(rt0.c1))))AND(CASE WHEN rt0.c3 THEN MIN(MIN(MAX(rt0.c0))) END)))AND((NOT (t1.c1)))))AND((((x'', rt0.c2, MAX(rt0.c2), rt0.c1, TOTAL(NULL))) NOT BETWEEN ((rt0.c2, t1.c1, COUNT(*), rt0.c1, MAX(AVG(TOTAL(TOTAL(TOTAL(t1.c1))))))) AND ((t1.c1, rt0.c1, GROUP_CONCAT(rt0.c3), rt0.c1, MIN(rt0.c1)))))) UNION ALL SELECT ALL rt0.c2 FROM rt0, t1 GROUP BY rt0.c2 HAVING (NOT ((((((((((~ (rt0.c0)))OR(COUNT(rt0.c1))))AND(CASE WHEN rt0.c3 THEN MIN(MIN(MAX(rt0.c0))) END)))AND((NOT (t1.c1)))))AND((((x'', rt0.c2, MAX(rt0.c2), rt0.c1, TOTAL(NULL))) NOT BETWEEN ((rt0.c2, t1.c1, COUNT(*), rt0.c1, MAX(AVG(TOTAL(TOTAL(TOTAL(t1.c1))))))) AND ((t1.c1, rt0.c1, GROUP_CONCAT(rt0.c3), rt0.c1, MIN(rt0.c1)))))))) UNION ALL SELECT rt0.c2 FROM rt0, t1 GROUP BY rt0.c2 HAVING (((((((((((~ (rt0.c0)))OR(COUNT(rt0.c1))))AND(CASE WHEN rt0.c3 THEN MIN(MIN(MAX(rt0.c0))) END)))AND((NOT (t1.c1)))))AND((((x'', rt0.c2, MAX(rt0.c2), rt0.c1, TOTAL(NULL))) NOT BETWEEN ((rt0.c2, t1.c1, COUNT(*), rt0.c1, MAX(AVG(TOTAL(TOTAL(TOTAL(t1.c1))))))) AND ((t1.c1, rt0.c1, GROUP_CONCAT(rt0.c3), rt0.c1, MIN(rt0.c1))))))) ISNULL);
SELECT ALL * FROM rt0;
SELECT * FROM rt0 WHERE ((~ (((rt0.c1) IS TRUE)))) UNION ALL SELECT * FROM rt0 WHERE ((NOT ((~ (((rt0.c1) IS TRUE)))))) UNION ALL SELECT ALL * FROM rt0 WHERE ((((~ (((rt0.c1) IS TRUE)))) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT * FROM t1;
SELECT DISTINCT * FROM t1 WHERE (((NOT (t1.c1)) IN ())) UNION SELECT DISTINCT * FROM t1 WHERE ((NOT (((NOT (t1.c1)) IN ())))) UNION SELECT DISTINCT * FROM t1 WHERE (((((NOT (t1.c1)) IN ())) ISNULL));
SELECT DISTINCT * FROM t1;
SELECT ALL rt0.c2, rt0.c1, t1.c1, rt0.c0 FROM rt0 NATURAL JOIN t1 GROUP BY rt0.c2, rt0.c1, t1.c1, rt0.c0;
SELECT ALL rt0.c2, rt0.c1, t1.c1, rt0.c0 FROM rt0 NATURAL JOIN t1 WHERE ((NOT ((((t1.c1)) NOT BETWEEN ((t1.c1)) AND ((rt0.c0)))))) GROUP BY rt0.c2, rt0.c1, t1.c1, rt0.c0 UNION SELECT rt0.c2, rt0.c1, t1.c1, rt0.c0 FROM rt0 NATURAL JOIN t1 WHERE ((NOT ((NOT ((((t1.c1)) NOT BETWEEN ((t1.c1)) AND ((rt0.c0)))))))) GROUP BY rt0.c2, rt0.c1, t1.c1, rt0.c0 UNION SELECT rt0.c2, rt0.c1, t1.c1, rt0.c0 FROM rt0 NATURAL JOIN t1 WHERE ((((NOT ((((t1.c1)) NOT BETWEEN ((t1.c1)) AND ((rt0.c0)))))) ISNULL)) GROUP BY rt0.c2, rt0.c1, t1.c1, rt0.c0;
SELECT ALL rt0.c2, rt0.c1, t1.c1, rt0.c0 FROM rt0 NATURAL JOIN t1 GROUP BY rt0.c2, rt0.c1, t1.c1, rt0.c0;
SELECT rt0.c1, t1.c1, rt0.c0 FROM rt0, t1 GROUP BY rt0.c1, t1.c1, rt0.c0;
SELECT rt0.c1, t1.c1, rt0.c0 FROM rt0, t1 GROUP BY rt0.c1, t1.c1, rt0.c0 HAVING MAX((~ (rt0.c2))) UNION ALL SELECT rt0.c1, t1.c1, rt0.c0 FROM rt0, t1 GROUP BY rt0.c1, t1.c1, rt0.c0 HAVING (NOT (MAX((~ (rt0.c2))))) UNION ALL SELECT rt0.c1, t1.c1, rt0.c0 FROM rt0, t1 GROUP BY rt0.c1, t1.c1, rt0.c0 HAVING ((MAX((~ (rt0.c2)))) ISNULL);
SELECT rt0.c1, t1.c1, rt0.c0 FROM rt0, t1 GROUP BY rt0.c1, t1.c1, rt0.c0;
SELECT rt0.c1, t1.c1, rt0.c0 FROM rt0, t1 GROUP BY rt0.c1, t1.c1, rt0.c0 HAVING MAX((~ (rt0.c2))) UNION ALL SELECT rt0.c1, t1.c1, rt0.c0 FROM rt0, t1 GROUP BY rt0.c1, t1.c1, rt0.c0 HAVING (NOT (MAX((~ (rt0.c2))))) UNION ALL SELECT rt0.c1, t1.c1, rt0.c0 FROM rt0, t1 GROUP BY rt0.c1, t1.c1, rt0.c0 HAVING ((MAX((~ (rt0.c2)))) ISNULL);
SELECT rt0.c1, t1.c1, rt0.c0 FROM rt0, t1 GROUP BY rt0.c1, t1.c1, rt0.c0;
SELECT ALL * FROM rt0, t1;
SELECT * FROM rt0, t1 WHERE (((t1.c1)IS(0.602342631910933 COLLATE BINARY))) UNION ALL SELECT * FROM rt0, t1 WHERE ((NOT (((t1.c1)IS(0.602342631910933 COLLATE BINARY))))) UNION ALL SELECT ALL * FROM rt0, t1 WHERE (((((t1.c1)IS(0.602342631910933 COLLATE BINARY))) ISNULL));
SELECT ALL * FROM rt0, t1;
SELECT DISTINCT t1.c1 FROM rt0, t1;
SELECT DISTINCT t1.c1 FROM rt0, t1 WHERE ((CASE WHEN rt0.c3 THEN rt0.c2 END IN (rt0.c3))) UNION SELECT DISTINCT t1.c1 FROM rt0, t1 WHERE ((NOT ((CASE WHEN rt0.c3 THEN rt0.c2 END IN (rt0.c3))))) UNION SELECT DISTINCT t1.c1 FROM rt0, t1 WHERE ((((CASE WHEN rt0.c3 THEN rt0.c2 END IN (rt0.c3))) ISNULL));
SELECT DISTINCT t1.c1 FROM rt0, t1;
SELECT rt0.c2, rt0.c3, rt0.c1, rt0.c0 FROM rt0, t1 GROUP BY rt0.c2, rt0.c3, rt0.c1, rt0.c0;
SELECT rt0.c2, rt0.c3, rt0.c1, rt0.c0 FROM rt0, t1 WHERE (LIKELIHOOD(DISTINCT rt0.c1, 0.5550323726566467)) GROUP BY rt0.c2, rt0.c3, rt0.c1, rt0.c0 UNION SELECT rt0.c2, rt0.c3, rt0.c1, rt0.c0 FROM rt0, t1 WHERE ((NOT (LIKELIHOOD(DISTINCT rt0.c1, 0.5550323726566467)))) GROUP BY rt0.c2, rt0.c3, rt0.c1, rt0.c0 UNION SELECT rt0.c2, rt0.c3, rt0.c1, rt0.c0 FROM rt0, t1 WHERE (((LIKELIHOOD(DISTINCT rt0.c1, 0.5550323726566467)) ISNULL)) GROUP BY rt0.c2, rt0.c3, rt0.c1, rt0.c0;
SELECT rt0.c2, rt0.c3, rt0.c1, rt0.c0 FROM rt0, t1 GROUP BY rt0.c2, rt0.c3, rt0.c1, rt0.c0;
SELECT ALL rt0.c2, t1.c1, rt0.c1, rt0.c3 FROM t1, rt0 GROUP BY rt0.c2, t1.c1, rt0.c1, rt0.c3;
SELECT ALL rt0.c2, t1.c1, rt0.c1, rt0.c3 FROM t1, rt0 GROUP BY rt0.c2, t1.c1, rt0.c1, rt0.c3 HAVING CAST(MIN(rt0.c2, rt0.c2) AS NUMERIC) UNION ALL SELECT rt0.c2, t1.c1, rt0.c1, rt0.c3 FROM t1, rt0 GROUP BY rt0.c2, t1.c1, rt0.c1, rt0.c3 HAVING (NOT (CAST(MIN(rt0.c2, rt0.c2) AS NUMERIC))) UNION ALL SELECT rt0.c2, t1.c1, rt0.c1, rt0.c3 FROM t1, rt0 GROUP BY rt0.c2, t1.c1, rt0.c1, rt0.c3 HAVING ((CAST(MIN(rt0.c2, rt0.c2) AS NUMERIC)) ISNULL);
SELECT ALL rt0.c2, t1.c1, rt0.c1, rt0.c3 FROM t1, rt0 GROUP BY rt0.c2, t1.c1, rt0.c1, rt0.c3;
SELECT ALL rt0.c2, t1.c1, rt0.c1, rt0.c3 FROM t1, rt0 GROUP BY rt0.c2, t1.c1, rt0.c1, rt0.c3 HAVING CAST(MIN(rt0.c2, rt0.c2) AS NUMERIC) UNION ALL SELECT rt0.c2, t1.c1, rt0.c1, rt0.c3 FROM t1, rt0 GROUP BY rt0.c2, t1.c1, rt0.c1, rt0.c3 HAVING (NOT (CAST(MIN(rt0.c2, rt0.c2) AS NUMERIC))) UNION ALL SELECT rt0.c2, t1.c1, rt0.c1, rt0.c3 FROM t1, rt0 GROUP BY rt0.c2, t1.c1, rt0.c1, rt0.c3 HAVING ((CAST(MIN(rt0.c2, rt0.c2) AS NUMERIC)) ISNULL);
SELECT ALL rt0.c2, t1.c1, rt0.c1, rt0.c3 FROM t1, rt0 GROUP BY rt0.c2, t1.c1, rt0.c1, rt0.c3;
SELECT t1.c1, rt0.c1, rt0.c3, rt0.c0 FROM rt0, t1;
SELECT t1.c1, rt0.c1, rt0.c3, rt0.c0 FROM rt0, t1 WHERE (((((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c2))) NOT NULL)) UNION ALL SELECT t1.c1, rt0.c1, rt0.c3, rt0.c0 FROM rt0, t1 WHERE ((NOT (((((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c2))) NOT NULL)))) UNION ALL SELECT ALL t1.c1, rt0.c1, rt0.c3, rt0.c0 FROM rt0, t1 WHERE (((((((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c2))) NOT NULL)) ISNULL));
SELECT t1.c1, rt0.c1, rt0.c3, rt0.c0 FROM rt0, t1;
SELECT DISTINCT rt0.c3, rt0.c2, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c3, rt0.c2, rt0.c1 FROM rt0 WHERE (CASE IFNULL(rt0.c2, -9.86361065E8)  WHEN (- (rt0.c1)) THEN (- (rt0.c3)) ELSE rt0.c3 COLLATE BINARY END) UNION SELECT DISTINCT rt0.c3, rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT (CASE IFNULL(rt0.c2, -9.86361065E8)  WHEN (- (rt0.c1)) THEN (- (rt0.c3)) ELSE rt0.c3 COLLATE BINARY END))) UNION SELECT DISTINCT rt0.c3, rt0.c2, rt0.c1 FROM rt0 WHERE (((CASE IFNULL(rt0.c2, -9.86361065E8)  WHEN (- (rt0.c1)) THEN (- (rt0.c3)) ELSE rt0.c3 COLLATE BINARY END) ISNULL));
SELECT DISTINCT rt0.c3, rt0.c2, rt0.c1 FROM rt0;
SELECT t1.c1 FROM t1 GROUP BY t1.c1;
SELECT ALL t1.c1 FROM t1 WHERE (((((t1.c1)OR(t1.c1)))OR('-1220962893')) COLLATE NOCASE) GROUP BY t1.c1 UNION SELECT t1.c1 FROM t1 WHERE ((NOT (((((t1.c1)OR(t1.c1)))OR('-1220962893')) COLLATE NOCASE))) GROUP BY t1.c1 UNION SELECT ALL t1.c1 FROM t1 WHERE (((((((t1.c1)OR(t1.c1)))OR('-1220962893')) COLLATE NOCASE) ISNULL)) GROUP BY t1.c1;
SELECT t1.c1 FROM t1 GROUP BY t1.c1;
SELECT t1.c1 FROM t1 GROUP BY t1.c1;
SELECT ALL t1.c1 FROM t1 GROUP BY t1.c1 HAVING NULL UNION ALL SELECT ALL t1.c1 FROM t1 GROUP BY t1.c1 HAVING (NOT (NULL)) UNION ALL SELECT ALL t1.c1 FROM t1 GROUP BY t1.c1 HAVING ((NULL) ISNULL);
SELECT t1.c1 FROM t1 GROUP BY t1.c1;
SELECT ALL t1.c1 FROM t1 GROUP BY t1.c1 HAVING NULL UNION ALL SELECT ALL t1.c1 FROM t1 GROUP BY t1.c1 HAVING (NOT (NULL)) UNION ALL SELECT ALL t1.c1 FROM t1 GROUP BY t1.c1 HAVING ((NULL) ISNULL);
SELECT t1.c1 FROM t1 GROUP BY t1.c1;
SELECT * FROM t1 INNER JOIN rt0 ON (((((((rt0.c3, t1.c1, rt0.c0))>((rt0.c1, t1.c1, t1.c1))))AND(((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2)))))OR((rt0.c1 IN ())));
SELECT ALL * FROM t1 INNER JOIN rt0 ON (((((((rt0.c3, t1.c1, rt0.c0))>((rt0.c1, t1.c1, t1.c1))))AND(((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2)))))OR((rt0.c1 IN ()))) WHERE (IFNULL(DISTINCT rt0.c2 COLLATE NOCASE, (((rt0.c1)) BETWEEN ((-1.091006569E9)) AND ((rt0.c1))))) UNION ALL SELECT * FROM t1 NOT INDEXED INNER JOIN rt0 ON (((((((rt0.c3, t1.c1, rt0.c0))>((rt0.c1, t1.c1, t1.c1))))AND(((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2)))))OR((rt0.c1 IN ()))) WHERE ((NOT (IFNULL(DISTINCT rt0.c2 COLLATE NOCASE, (((rt0.c1)) BETWEEN ((-1.091006569E9)) AND ((rt0.c1))))))) UNION ALL SELECT * FROM t1 INNER JOIN rt0 ON (((((((rt0.c3, t1.c1, rt0.c0))>((rt0.c1, t1.c1, t1.c1))))AND(((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2)))))OR((rt0.c1 IN ()))) WHERE (((IFNULL(DISTINCT rt0.c2 COLLATE NOCASE, (((rt0.c1)) BETWEEN ((-1.091006569E9)) AND ((rt0.c1))))) ISNULL));
SELECT * FROM t1 INNER JOIN rt0 ON (((((((rt0.c3, t1.c1, rt0.c0))>((rt0.c1, t1.c1, t1.c1))))AND(((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2)))))OR((rt0.c1 IN ())));
SELECT DISTINCT rt0.c0, rt0.c3, rt0.c1, t1.c1, rt0.c2 FROM t1, rt0;
SELECT DISTINCT rt0.c0, rt0.c3, rt0.c1, t1.c1, rt0.c2 FROM t1, rt0 WHERE (((NULL)%(rt0.c3))) UNION SELECT DISTINCT rt0.c0, rt0.c3, rt0.c1, t1.c1, rt0.c2 FROM t1, rt0 WHERE ((NOT (((NULL)%(rt0.c3))))) UNION SELECT DISTINCT rt0.c0, rt0.c3, rt0.c1, t1.c1, rt0.c2 FROM t1, rt0 WHERE (((((NULL)%(rt0.c3))) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c3, rt0.c1, t1.c1, rt0.c2 FROM t1, rt0;
SELECT rt0.c1, t1.c1, rt0.c0, rt0.c3 FROM t1, rt0 GROUP BY rt0.c1, t1.c1, rt0.c0, rt0.c3;
SELECT ALL rt0.c1, t1.c1, rt0.c0, rt0.c3 FROM t1, rt0 WHERE (CAST(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c3)) AS NUMERIC)) GROUP BY rt0.c1, t1.c1, rt0.c0, rt0.c3 UNION SELECT rt0.c1, t1.c1, rt0.c0, rt0.c3 FROM t1, rt0 WHERE ((NOT (CAST(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c3)) AS NUMERIC)))) GROUP BY rt0.c1, t1.c1, rt0.c0, rt0.c3 UNION SELECT rt0.c1, t1.c1, rt0.c0, rt0.c3 FROM t1, rt0 WHERE (((CAST(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c3)) AS NUMERIC)) ISNULL)) GROUP BY rt0.c1, t1.c1, rt0.c0, rt0.c3;
SELECT rt0.c1, t1.c1, rt0.c0, rt0.c3 FROM t1, rt0 GROUP BY rt0.c1, t1.c1, rt0.c0, rt0.c3;
SELECT ALL t1.c1 FROM t1 GROUP BY t1.c1;
SELECT ALL t1.c1 FROM t1 GROUP BY t1.c1 HAVING t1.c1 UNION ALL SELECT t1.c1 FROM t1 GROUP BY t1.c1 HAVING (NOT (t1.c1)) UNION ALL SELECT t1.c1 FROM t1 GROUP BY t1.c1 HAVING ((t1.c1) ISNULL);
SELECT ALL t1.c1 FROM t1 GROUP BY t1.c1;
SELECT ALL t1.c1 FROM t1 GROUP BY t1.c1 HAVING t1.c1 UNION ALL SELECT t1.c1 FROM t1 GROUP BY t1.c1 HAVING (NOT (t1.c1)) UNION ALL SELECT t1.c1 FROM t1 GROUP BY t1.c1 HAVING ((t1.c1) ISNULL);
SELECT ALL t1.c1 FROM t1 GROUP BY t1.c1;
SELECT rt0.c2, rt0.c1, rt0.c3, rt0.c0 FROM rt0, t1;
SELECT ALL rt0.c2, rt0.c1, rt0.c3, rt0.c0 FROM rt0, t1 WHERE ((NOT ((~ (rt0.c1))))) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c3, rt0.c0 FROM rt0, t1 WHERE ((NOT ((NOT ((~ (rt0.c1))))))) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c3, rt0.c0 FROM rt0, t1 WHERE ((((NOT ((~ (rt0.c1))))) ISNULL));
SELECT rt0.c2, rt0.c1, rt0.c3, rt0.c0 FROM rt0, t1;
SELECT DISTINCT t1.c1, rt0.c3 FROM rt0, t1;
SELECT DISTINCT t1.c1, rt0.c3 FROM rt0, t1 WHERE (CASE highlight(rt0.c2, '-898271228', rt0.c3, rt0.c0)  WHEN CHAR(rt0.c3) THEN 0.48677958512781816 WHEN (rt0.c2 IN ()) THEN ((rt0.c3) NOT BETWEEN (rt0.c2) AND ('847793795')) WHEN CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c2 END THEN ((((((((rt0.c3)OR(t1.c1)))OR(rt0.c3)))AND(rt0.c0)))OR(rt0.c1)) ELSE (((rt0.c1)) NOT BETWEEN ((0.48677958512781816)) AND ((rt0.c1))) END) UNION SELECT DISTINCT t1.c1, rt0.c3 FROM rt0, t1 WHERE ((NOT (CASE highlight(rt0.c2, '-898271228', rt0.c3, rt0.c0)  WHEN CHAR(rt0.c3) THEN 0.48677958512781816 WHEN (rt0.c2 IN ()) THEN ((rt0.c3) NOT BETWEEN (rt0.c2) AND ('847793795')) WHEN CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c2 END THEN ((((((((rt0.c3)OR(t1.c1)))OR(rt0.c3)))AND(rt0.c0)))OR(rt0.c1)) ELSE (((rt0.c1)) NOT BETWEEN ((0.48677958512781816)) AND ((rt0.c1))) END))) UNION SELECT DISTINCT t1.c1, rt0.c3 FROM rt0, t1 WHERE (((CASE highlight(rt0.c2, '-898271228', rt0.c3, rt0.c0)  WHEN CHAR(rt0.c3) THEN 0.48677958512781816 WHEN (rt0.c2 IN ()) THEN ((rt0.c3) NOT BETWEEN (rt0.c2) AND ('847793795')) WHEN CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c2 END THEN ((((((((rt0.c3)OR(t1.c1)))OR(rt0.c3)))AND(rt0.c0)))OR(rt0.c1)) ELSE (((rt0.c1)) NOT BETWEEN ((0.48677958512781816)) AND ((rt0.c1))) END) ISNULL));
SELECT t1.c1 FROM t1 GROUP BY t1.c1;
SELECT t1.c1 FROM t1 WHERE (((((((t1.c1)<>(t1.c1)))OR(((t1.c1) NOT NULL))))AND((((t1.c1, t1.c1, t1.c1)) BETWEEN ((t1.c1, t1.c1, t1.c1)) AND ((t1.c1, t1.c1, t1.c1)))))) GROUP BY t1.c1 UNION SELECT ALL t1.c1 FROM t1 WHERE ((NOT (((((((t1.c1)<>(t1.c1)))OR(((t1.c1) NOT NULL))))AND((((t1.c1, t1.c1, t1.c1)) BETWEEN ((t1.c1, t1.c1, t1.c1)) AND ((t1.c1, t1.c1, t1.c1)))))))) GROUP BY t1.c1 UNION SELECT ALL t1.c1 FROM t1 WHERE (((((((((t1.c1)!=(t1.c1)))OR(((t1.c1) NOT NULL))))AND((((t1.c1, t1.c1, t1.c1)) BETWEEN ((t1.c1, t1.c1, t1.c1)) AND ((t1.c1, t1.c1, t1.c1)))))) ISNULL)) GROUP BY t1.c1;
SELECT t1.c1 FROM t1 GROUP BY t1.c1;
SELECT ALL t1.c1 FROM t1 NOT INDEXED GROUP BY t1.c1;
SELECT ALL t1.c1 FROM t1 GROUP BY t1.c1 HAVING GROUP_CONCAT(MAX(t1.c1)) UNION ALL SELECT t1.c1 FROM t1 GROUP BY t1.c1 HAVING (NOT (GROUP_CONCAT(MAX(t1.c1)))) UNION ALL SELECT ALL t1.c1 FROM t1 GROUP BY t1.c1 HAVING ((GROUP_CONCAT(MAX(t1.c1))) ISNULL);
SELECT ALL * FROM t1, rt0;
SELECT * FROM t1, rt0 WHERE (0.08229136855181707) UNION ALL SELECT ALL * FROM t1, rt0 WHERE ((NOT (0.08229136855181707))) UNION ALL SELECT ALL * FROM t1, rt0 WHERE (((0.08229136855181707) ISNULL));
SELECT ALL * FROM t1, rt0;
SELECT DISTINCT rt0.c3, t1.c1 FROM t1, rt0;
SELECT DISTINCT rt0.c3, t1.c1 FROM t1, rt0 WHERE ((((('1341674489') NOT BETWEEN (rt0.c2) AND (rt0.c3))) NOT NULL)) UNION SELECT DISTINCT rt0.c3, t1.c1 FROM t1, rt0 WHERE ((NOT ((((('1341674489') NOT BETWEEN (rt0.c2) AND (rt0.c3))) NOT NULL)))) UNION SELECT DISTINCT rt0.c3, t1.c1 FROM t1, rt0 WHERE ((((((('1341674489') NOT BETWEEN (rt0.c2) AND (rt0.c3))) NOT NULL)) ISNULL));
SELECT DISTINCT rt0.c3, t1.c1 FROM t1, rt0;
SELECT ALL rt0.c3, rt0.c2, t1.c1 FROM rt0, t1 GROUP BY rt0.c3, rt0.c2, t1.c1;
SELECT ALL rt0.c3, rt0.c2, t1.c1 FROM rt0, t1 WHERE (rt0.c0) GROUP BY rt0.c3, rt0.c2, t1.c1 UNION SELECT rt0.c3, rt0.c2, t1.c1 FROM rt0, t1 WHERE ((NOT (rt0.c0))) GROUP BY rt0.c3, rt0.c2, t1.c1 UNION SELECT rt0.c3, rt0.c2, t1.c1 FROM rt0, t1 WHERE (((rt0.c0) ISNULL)) GROUP BY rt0.c3, rt0.c2, t1.c1;
SELECT ALL rt0.c3, rt0.c2, t1.c1 FROM rt0, t1 GROUP BY rt0.c3, rt0.c2, t1.c1;
SELECT t1.c1 FROM t1 GROUP BY t1.c1;
SELECT t1.c1 FROM t1 GROUP BY t1.c1 HAVING COUNT(*) UNION ALL SELECT t1.c1 FROM t1 GROUP BY t1.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL t1.c1 FROM t1 GROUP BY t1.c1 HAVING ((COUNT(*)) ISNULL);
SELECT t1.c1 FROM t1 GROUP BY t1.c1;
SELECT t1.c1 FROM t1 GROUP BY t1.c1 HAVING COUNT(*) UNION ALL SELECT t1.c1 FROM t1 GROUP BY t1.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL t1.c1 FROM t1 GROUP BY t1.c1 HAVING ((COUNT(*)) ISNULL);
SELECT t1.c1 FROM t1 GROUP BY t1.c1;
SELECT rt0.c1, rt0.c0, rt0.c2, rt0.c3, t1.c1 FROM t1, rt0;
SELECT rt0.c1, rt0.c0, rt0.c2, rt0.c3, t1.c1 FROM t1, rt0 WHERE ((((rt0.c0 IN ())) IS TRUE)) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c2, rt0.c3, t1.c1 FROM t1, rt0 WHERE ((NOT ((((rt0.c0 IN ())) IS TRUE)))) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c2, rt0.c3, t1.c1 FROM t1, rt0 WHERE ((((((rt0.c0 IN ())) IS TRUE)) ISNULL));
SELECT rt0.c1, rt0.c0, rt0.c2, rt0.c3, t1.c1 FROM t1, rt0;
SELECT DISTINCT * FROM rt0, t1;
SELECT DISTINCT * FROM rt0, t1 WHERE ((((((rt0.c2))<((rt0.c0))))IS NOT(IFNULL(rt0.c1, t1.c1)))) UNION SELECT DISTINCT * FROM rt0, t1 WHERE ((NOT ((((((rt0.c2))<((rt0.c0))))IS NOT(IFNULL(rt0.c1, t1.c1)))))) UNION SELECT DISTINCT * FROM rt0, t1 WHERE ((((((((rt0.c2))<((rt0.c0))))IS NOT(IFNULL(rt0.c1, t1.c1)))) ISNULL));
SELECT DISTINCT * FROM rt0, t1;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE (((x'' COLLATE NOCASE) NOT NULL)) GROUP BY rt0.c1, rt0.c2, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (((x'' COLLATE NOCASE) NOT NULL)))) GROUP BY rt0.c1, rt0.c2, rt0.c0 UNION SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 WHERE (((((x'' COLLATE NOCASE) NOT NULL)) ISNULL)) GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT ALL t1.c1 FROM t1 GROUP BY t1.c1;
SELECT t1.c1 FROM t1 GROUP BY t1.c1 HAVING TOTAL(SUM(MAX(t1.c1))) UNION ALL SELECT t1.c1 FROM t1 GROUP BY t1.c1 HAVING (NOT (TOTAL(SUM(MAX(t1.c1))))) UNION ALL SELECT t1.c1 FROM t1 GROUP BY t1.c1 HAVING ((TOTAL(SUM(MAX(t1.c1)))) ISNULL);
SELECT ALL t1.c1 FROM t1;
SELECT ALL t1.c1 FROM t1 WHERE (t1.c1) UNION ALL SELECT t1.c1 FROM t1 WHERE ((NOT (t1.c1))) UNION ALL SELECT ALL t1.c1 FROM t1 WHERE (((t1.c1) ISNULL));
SELECT ALL t1.c1 FROM t1;
SELECT DISTINCT * FROM t1, rt0;
SELECT DISTINCT * FROM t1, rt0 WHERE (CASE WHEN ((t1.c1) BETWEEN (rt0.c0) AND (rt0.c2)) THEN HEX(rt0.c1) WHEN CAST(t1.c1 AS TEXT) THEN (((x'')) NOT BETWEEN ((rt0.c1)) AND ((rt0.c3))) WHEN ((0x2af3408) BETWEEN (t1.c1) AND (t1.c1)) THEN ((((rt0.c2)OR(rt0.c2)))OR(0.9057107684235615)) ELSE (rt0.c1 IN ()) END) UNION SELECT DISTINCT * FROM t1, rt0 WHERE ((NOT (CASE WHEN ((t1.c1) BETWEEN (rt0.c0) AND (rt0.c2)) THEN HEX(rt0.c1) WHEN CAST(t1.c1 AS TEXT) THEN (((x'')) NOT BETWEEN ((rt0.c1)) AND ((rt0.c3))) WHEN ((0x2af3408) BETWEEN (t1.c1) AND (t1.c1)) THEN ((((rt0.c2)OR(rt0.c2)))OR(0.9057107684235615)) ELSE (rt0.c1 IN ()) END))) UNION SELECT DISTINCT * FROM t1, rt0 WHERE (((CASE WHEN ((t1.c1) BETWEEN (rt0.c0) AND (rt0.c2)) THEN HEX(rt0.c1) WHEN CAST(t1.c1 AS TEXT) THEN (((x'')) NOT BETWEEN ((rt0.c1)) AND ((rt0.c3))) WHEN ((0x2af3408) BETWEEN (t1.c1) AND (t1.c1)) THEN ((((rt0.c2)OR(rt0.c2)))OR(0.9057107684235615)) ELSE (rt0.c1 IN ()) END) ISNULL));
SELECT DISTINCT * FROM t1, rt0;
SELECT rt0.c3, rt0.c2, rt0.c0, t1.c1 FROM t1, rt0 GROUP BY rt0.c3, rt0.c2, rt0.c0, t1.c1;
SELECT ALL rt0.c3, rt0.c2, rt0.c0, t1.c1 FROM t1, rt0 WHERE (((x'aaa22141') NOT BETWEEN ((((t1.c1, rt0.c1, rt0.c2))>((rt0.c3, rt0.c2, '1341674489')))) AND ((((rt0.c0))<=((rt0.c3)))))) GROUP BY rt0.c3, rt0.c2, rt0.c0, t1.c1 UNION SELECT rt0.c3, rt0.c2, rt0.c0, t1.c1 FROM t1, rt0 WHERE ((NOT (((x'aaa22141') NOT BETWEEN ((((t1.c1, rt0.c1, rt0.c2))>((rt0.c3, rt0.c2, '1341674489')))) AND ((((rt0.c0))<=((rt0.c3)))))))) GROUP BY rt0.c3, rt0.c2, rt0.c0, t1.c1 UNION SELECT rt0.c3, rt0.c2, rt0.c0, t1.c1 FROM t1, rt0 WHERE (((((x'aaa22141') NOT BETWEEN ((((t1.c1, rt0.c1, rt0.c2))>((rt0.c3, rt0.c2, '1341674489')))) AND ((((rt0.c0))<=((rt0.c3)))))) ISNULL)) GROUP BY rt0.c3, rt0.c2, rt0.c0, t1.c1;
SELECT rt0.c3, rt0.c2, rt0.c0, t1.c1 FROM t1, rt0 GROUP BY rt0.c3, rt0.c2, rt0.c0, t1.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING ((MIN(COUNT(*)))AND(((((MIN(TOTAL(rt0.c2)))OR(rt0.c3)))AND(COUNT(AVG(rt0.c3)))))) UNION ALL SELECT rt0.c1 FROM rt0 NOT INDEXED GROUP BY rt0.c1 HAVING (NOT (((MIN(COUNT(*)))AND(((((MIN(TOTAL(rt0.c2)))OR(rt0.c3)))AND(COUNT(AVG(rt0.c3)))))))) UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING ((((MIN(COUNT(*)))AND(((((MIN(TOTAL(rt0.c2)))OR(rt0.c3)))AND(COUNT(AVG(rt0.c3))))))) ISNULL);
SELECT ALL * FROM t1, rt0;
SELECT ALL * FROM t1, rt0 WHERE (CASE WHEN NULL THEN t1.c1 ELSE (((t1.c1))<=((rt0.c0))) END) UNION ALL SELECT * FROM t1, rt0 WHERE ((NOT (CASE WHEN NULL THEN t1.c1 ELSE (((t1.c1))<=((rt0.c0))) END))) UNION ALL SELECT * FROM t1, rt0 WHERE (((CASE WHEN NULL THEN t1.c1 ELSE (((t1.c1))<=((rt0.c0))) END) ISNULL));
SELECT ALL * FROM t1, rt0;
SELECT DISTINCT t1.c1 FROM t1;
SELECT DISTINCT t1.c1 FROM t1 WHERE (((((t1.c1) IS FALSE)) BETWEEN (((((((((t1.c1)OR(t1.c1)))AND(t1.c1)))OR('-1369421597')))AND(NULL))) AND ((+ (t1.c1))))) UNION SELECT DISTINCT t1.c1 FROM t1 WHERE ((NOT (((((t1.c1) IS FALSE)) BETWEEN (((((((((t1.c1)OR(t1.c1)))AND(t1.c1)))OR('-1369421597')))AND(NULL))) AND ((+ (t1.c1))))))) UNION SELECT DISTINCT t1.c1 FROM t1 WHERE (((((((t1.c1) IS FALSE)) BETWEEN (((((((((t1.c1)OR(t1.c1)))AND(t1.c1)))OR('-1369421597')))AND(NULL))) AND ((+ (t1.c1))))) ISNULL));
SELECT DISTINCT t1.c1 FROM t1;
SELECT ALL rt0.c2, rt0.c1, rt0.c3, t1.c1 FROM t1, rt0 GROUP BY rt0.c2, rt0.c1, rt0.c3, t1.c1;
SELECT rt0.c2, rt0.c1, rt0.c3, t1.c1 FROM t1, rt0 WHERE (((((1647136924)OR(((rt0.c1)>(-1.091006569E9)))))AND(rt0.c2))) GROUP BY rt0.c2, rt0.c1, rt0.c3, t1.c1 UNION SELECT ALL rt0.c2, rt0.c1, rt0.c3, t1.c1 FROM t1, rt0 WHERE ((NOT (((((1647136924)OR(((rt0.c1)>(-1.091006569E9)))))AND(rt0.c2))))) GROUP BY rt0.c2, rt0.c1, rt0.c3, t1.c1 UNION SELECT ALL rt0.c2, rt0.c1, rt0.c3, t1.c1 FROM t1, rt0 WHERE (((((((1647136924)OR(((rt0.c1)>(-1.091006569E9)))))AND(rt0.c2))) ISNULL)) GROUP BY rt0.c2, rt0.c1, rt0.c3, t1.c1;
SELECT ALL rt0.c2, rt0.c1, rt0.c3, t1.c1 FROM t1, rt0 GROUP BY rt0.c2, rt0.c1, rt0.c3, t1.c1;
SELECT ALL t1.c1 FROM t1 GROUP BY t1.c1;
SELECT t1.c1 FROM t1 GROUP BY t1.c1 HAVING MIN(((COUNT(GROUP_CONCAT(AVG(t1.c1)))) ISNULL)) UNION ALL SELECT ALL t1.c1 FROM t1 GROUP BY t1.c1 HAVING (NOT (MIN(((COUNT(GROUP_CONCAT(AVG(t1.c1)))) ISNULL)))) UNION ALL SELECT ALL t1.c1 FROM t1 GROUP BY t1.c1 HAVING ((MIN(((COUNT(GROUP_CONCAT(AVG(t1.c1)))) ISNULL))) ISNULL);
SELECT * FROM t1;
SELECT * FROM t1 WHERE ((+ (((t1.c1)GLOB(t1.c1))))) UNION ALL SELECT * FROM t1 WHERE ((NOT ((+ (((t1.c1)GLOB(t1.c1))))))) UNION ALL SELECT * FROM t1 WHERE ((((+ (((t1.c1)GLOB(t1.c1))))) ISNULL));
SELECT * FROM t1;
SELECT DISTINCT rt0.c3, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c3, rt0.c2 FROM rt0 NOT INDEXED WHERE (CASE (((rt0.c0))>=((rt0.c2)))  WHEN rt0.c3 THEN (NOT (rt0.c2)) END) UNION SELECT DISTINCT rt0.c3, rt0.c2 FROM rt0 WHERE ((NOT (CASE (((rt0.c0))>=((rt0.c2)))  WHEN rt0.c3 THEN (NOT (rt0.c2)) END))) UNION SELECT DISTINCT rt0.c3, rt0.c2 FROM rt0 WHERE (((CASE (((rt0.c0))>=((rt0.c2)))  WHEN rt0.c3 THEN (NOT (rt0.c2)) END) ISNULL));
SELECT DISTINCT rt0.c3, rt0.c2 FROM rt0;
SELECT t1.c1 FROM t1 GROUP BY t1.c1;
SELECT t1.c1 FROM t1 WHERE (UNICODE(t1.c1)) GROUP BY t1.c1 UNION SELECT ALL t1.c1 FROM t1 WHERE ((NOT (UNICODE(t1.c1)))) GROUP BY t1.c1 UNION SELECT t1.c1 FROM t1 WHERE (((UNICODE(t1.c1)) ISNULL)) GROUP BY t1.c1;
SELECT t1.c1 FROM t1 GROUP BY t1.c1;
SELECT ALL t1.c1 FROM t1 GROUP BY t1.c1;
SELECT ALL t1.c1 FROM t1 GROUP BY t1.c1 HAVING 0.3143841107709173 UNION ALL SELECT t1.c1 FROM t1 GROUP BY t1.c1 HAVING (NOT (0.3143841107709173)) UNION ALL SELECT t1.c1 FROM t1 GROUP BY t1.c1 HAVING ((0.3143841107709173) ISNULL);
SELECT ALL t1.c1 FROM t1 GROUP BY t1.c1;
SELECT ALL t1.c1 FROM t1 GROUP BY t1.c1 HAVING 0.3143841107709173 UNION ALL SELECT t1.c1 FROM t1 GROUP BY t1.c1 HAVING (NOT (0.3143841107709173)) UNION ALL SELECT t1.c1 FROM t1 GROUP BY t1.c1 HAVING ((0.3143841107709173) ISNULL);
SELECT ALL t1.c1 FROM t1 GROUP BY t1.c1;
SELECT MIN(((x'') BETWEEN ((t1.c1 IN ())) AND (((rt0.c0)<(rt0.c3))))) FROM rt0, t1 ORDER BY (((((rt0.c2) ISNULL), ABS(rt0.c1), ((rt0.c2)>>(rt0.c1))))<>(((- (rt0.c2)), ((((NULL)OR(rt0.c1)))OR(rt0.c1)), (rt0.c2 IN ()))))  NULLS LAST;
SELECT t1.c1 FROM t1, rt0;
SELECT ALL t1.c1 FROM t1, rt0 WHERE (CAST('%Z' AS NUMERIC)) UNION ALL SELECT ALL t1.c1 FROM t1, rt0 WHERE ((NOT (CAST('%Z' AS NUMERIC)))) UNION ALL SELECT ALL t1.c1 FROM t1, rt0 WHERE (((CAST('%Z' AS NUMERIC)) ISNULL));
SELECT t1.c1 FROM t1, rt0;
SELECT DISTINCT * FROM rt0 FULL OUTER JOIN t1 ON ((((+ (rt0.c1))))>=((rt0.c2)));
SELECT DISTINCT * FROM rt0 FULL OUTER JOIN t1 ON ((((+ (rt0.c1))))>=((rt0.c2))) WHERE (t1.c1) UNION SELECT DISTINCT * FROM rt0 FULL OUTER JOIN t1 ON ((((+ (rt0.c1))))>=((rt0.c2))) WHERE ((NOT (t1.c1))) UNION SELECT DISTINCT * FROM rt0 FULL OUTER JOIN t1 ON ((((+ (rt0.c1))))>=((rt0.c2))) WHERE (((t1.c1) ISNULL));
SELECT DISTINCT * FROM rt0 FULL OUTER JOIN t1 ON ((((+ (rt0.c1))))>=((rt0.c2)));
SELECT rt0.c3, t1.c1 FROM t1, rt0 GROUP BY rt0.c3, t1.c1;
SELECT ALL rt0.c3, t1.c1 FROM t1, rt0 WHERE ((rt0.c0 IN (CASE rt0.c3  WHEN t1.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c3 ELSE t1.c1 END))) GROUP BY rt0.c3, t1.c1 UNION SELECT ALL rt0.c3, t1.c1 FROM t1, rt0 WHERE ((NOT ((rt0.c0 IN (CASE rt0.c3  WHEN t1.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c3 ELSE t1.c1 END))))) GROUP BY rt0.c3, t1.c1 UNION SELECT rt0.c3, t1.c1 FROM t1, rt0 WHERE ((((rt0.c0 IN (CASE rt0.c3  WHEN t1.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c3 ELSE t1.c1 END))) ISNULL)) GROUP BY rt0.c3, t1.c1;
SELECT rt0.c3, t1.c1 FROM t1, rt0 GROUP BY rt0.c3, t1.c1;
SELECT rt0.c0 FROM t1, rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM t1, rt0 GROUP BY rt0.c0 HAVING TOTAL(COUNT(rt0.c3)) UNION ALL SELECT ALL rt0.c0 FROM t1, rt0 GROUP BY rt0.c0 HAVING (NOT (TOTAL(COUNT(rt0.c3)))) UNION ALL SELECT ALL rt0.c0 FROM t1, rt0 GROUP BY rt0.c0 HAVING ((TOTAL(COUNT(rt0.c3))) ISNULL);
SELECT ALL t1.c1 FROM rt0, t1;
SELECT ALL t1.c1 FROM rt0, t1 WHERE (CAST(CASE WHEN x'' THEN '-1027818349' END AS BLOB)) UNION ALL SELECT t1.c1 FROM rt0, t1 WHERE ((NOT (CAST(CASE WHEN x'' THEN '-1027818349' END AS BLOB)))) UNION ALL SELECT ALL t1.c1 FROM rt0, t1 WHERE (((CAST(CASE WHEN x'' THEN '-1027818349' END AS BLOB)) ISNULL));
SELECT ALL t1.c1 FROM rt0, t1;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((- (rt0.c1)) COLLATE NOCASE) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((- (rt0.c1)) COLLATE NOCASE))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((- (rt0.c1)) COLLATE NOCASE) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c2, rt0.c3, t1.c1, rt0.c1 FROM t1, rt0 GROUP BY rt0.c2, rt0.c3, t1.c1, rt0.c1;
SELECT ALL rt0.c2, rt0.c3, t1.c1, rt0.c1 FROM t1, rt0 WHERE ((((t1.c1 IN ())) NOTNULL)) GROUP BY rt0.c2, rt0.c3, t1.c1, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c3, t1.c1, rt0.c1 FROM t1, rt0 WHERE ((NOT ((((t1.c1 IN ())) NOTNULL)))) GROUP BY rt0.c2, rt0.c3, t1.c1, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c3, t1.c1, rt0.c1 FROM t1, rt0 WHERE ((((((t1.c1 IN ())) NOTNULL)) ISNULL)) GROUP BY rt0.c2, rt0.c3, t1.c1, rt0.c1;
SELECT rt0.c2, rt0.c3, t1.c1, rt0.c1 FROM t1, rt0 GROUP BY rt0.c2, rt0.c3, t1.c1, rt0.c1;
SELECT ALL t1.c1 FROM t1 GROUP BY t1.c1;
SELECT ALL t1.c1 FROM t1 GROUP BY t1.c1 HAVING MAX(0Xffffffff9078f64d) UNION ALL SELECT ALL t1.c1 FROM t1 GROUP BY t1.c1 HAVING (NOT (MAX(0xffffffff9078f64d))) UNION ALL SELECT ALL t1.c1 FROM t1 GROUP BY t1.c1 HAVING ((MAX(0Xffffffff9078f64d)) ISNULL);
SELECT ALL t1.c1 FROM t1 GROUP BY t1.c1;
SELECT ALL t1.c1 FROM t1 GROUP BY t1.c1 HAVING MAX(0Xffffffff9078f64d) UNION ALL SELECT ALL t1.c1 FROM t1 GROUP BY t1.c1 HAVING (NOT (MAX(0xffffffff9078f64d))) UNION ALL SELECT ALL t1.c1 FROM t1 GROUP BY t1.c1 HAVING ((MAX(0Xffffffff9078f64d)) ISNULL);
SELECT ALL t1.c1 FROM t1 GROUP BY t1.c1;
SELECT t1.c1 FROM t1;
SELECT ALL t1.c1 FROM t1 WHERE (CAST(((t1.c1)>=(t1.c1)) AS NUMERIC)) UNION ALL SELECT ALL t1.c1 FROM t1 WHERE ((NOT (CAST(((t1.c1)>=(t1.c1)) AS NUMERIC)))) UNION ALL SELECT ALL t1.c1 FROM t1 WHERE (((CAST(((t1.c1)>=(t1.c1)) AS NUMERIC)) ISNULL));
SELECT t1.c1 FROM t1;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((((((0.47606623664472425)<(rt0.c3))))>=(((~ (rt0.c2)))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((((((0.47606623664472425)<(rt0.c3))))>=(((~ (rt0.c2)))))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((((((0.47606623664472425)<(rt0.c3))))>=(((~ (rt0.c2)))))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT t1.c1 FROM t1 GROUP BY t1.c1;
SELECT t1.c1 FROM t1 WHERE (((((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c1))) ISNULL)) GROUP BY t1.c1 UNION SELECT ALL t1.c1 FROM t1 WHERE ((NOT (((((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c1))) ISNULL)))) GROUP BY t1.c1 UNION SELECT ALL t1.c1 FROM t1 WHERE (((((((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c1))) ISNULL)) ISNULL)) GROUP BY t1.c1;
SELECT t1.c1 FROM t1 GROUP BY t1.c1;
SELECT ALL rt0.c1, rt0.c3, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c3, rt0.c2, rt0.c0;
SELECT rt0.c1, rt0.c3, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c3, rt0.c2, rt0.c0 HAVING AVG(MIN(AVG(MIN(rt0.c1)))) UNION ALL SELECT ALL rt0.c1, rt0.c3, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c3, rt0.c2, rt0.c0 HAVING (NOT (AVG(MIN(AVG(MIN(rt0.c1)))))) UNION ALL SELECT ALL rt0.c1, rt0.c3, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c3, rt0.c2, rt0.c0 HAVING ((AVG(MIN(AVG(MIN(rt0.c1))))) ISNULL);
SELECT * FROM rt0, t1;
SELECT * FROM rt0, t1 WHERE (rt0.c2 COLLATE RTRIM) UNION ALL SELECT * FROM rt0, t1 WHERE ((NOT (rt0.c2 COLLATE RTRIM))) UNION ALL SELECT ALL * FROM rt0, t1 WHERE (((rt0.c2 COLLATE RTRIM) ISNULL));
SELECT * FROM rt0, t1;
SELECT DISTINCT rt0.c0 FROM rt0 NATURAL JOIN t1;
SELECT DISTINCT rt0.c0 FROM rt0 NATURAL JOIN t1 WHERE (COALESCE(DISTINCT (((rt0.c1)) BETWEEN ((t1.c1)) AND ((t1.c1))), ((rt0.c2)|('0.3143841107709173')))) UNION SELECT DISTINCT rt0.c0 FROM rt0 NATURAL JOIN t1 WHERE ((NOT (COALESCE(DISTINCT (((rt0.c1)) BETWEEN ((t1.c1)) AND ((t1.c1))), ((rt0.c2)|('0.3143841107709173')))))) UNION SELECT DISTINCT rt0.c0 FROM rt0 NATURAL JOIN t1 WHERE (((COALESCE(DISTINCT (((rt0.c1)) BETWEEN ((t1.c1)) AND ((t1.c1))), ((rt0.c2)|('0.3143841107709173')))) ISNULL));
SELECT DISTINCT rt0.c0 FROM rt0 NATURAL JOIN t1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 WHERE (((((((((CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN '-1430646268' WHEN rt0.c2 THEN rt0.c3 END)AND(UNLIKELY(rt0.c3))))AND(((((rt0.c2)OR(rt0.c1)))AND(rt0.c1)))))OR(HEX(DISTINCT rt0.c3))))OR('1'))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM rt0 WHERE ((NOT (((((((((CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN '-1430646268' WHEN rt0.c2 THEN rt0.c3 END)AND(UNLIKELY(rt0.c3))))AND(((((rt0.c2)OR(rt0.c1)))AND(rt0.c1)))))OR(HEX(DISTINCT rt0.c3))))OR('1'))))) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM rt0 WHERE (((((((((((CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN '-1430646268' WHEN rt0.c2 THEN rt0.c3 END)AND(UNLIKELY(rt0.c3))))AND(((((rt0.c2)OR(rt0.c1)))AND(rt0.c1)))))OR(HEX(DISTINCT rt0.c3))))OR('1'))) ISNULL)) GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0, t1 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0, t1 GROUP BY rt0.c1 HAVING MAX(SUM(rt0.c1)) UNION ALL SELECT ALL rt0.c1 FROM rt0, t1 GROUP BY rt0.c1 HAVING (NOT (MAX(SUM(rt0.c1)))) UNION ALL SELECT rt0.c1 FROM rt0, t1 GROUP BY rt0.c1 HAVING ((MAX(SUM(rt0.c1))) ISNULL);
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE ((((((((('HRS2(G糨I')AND(LOWER(rt0.c2))))OR(COALESCE(DISTINCT rt0.c1, NULL))))OR((+ (rt0.c0)))))OR(CAST(rt0.c1 AS REAL)))) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT ((((((((('HRS2(G糨I')AND(LOWER(rt0.c2))))OR(COALESCE(DISTINCT rt0.c1, NULL))))OR((+ (rt0.c0)))))OR(CAST(rt0.c1 AS REAL)))))) UNION ALL SELECT * FROM rt0 WHERE ((((((((((('HRS2(G糨I')AND(LOWER(rt0.c2))))OR(COALESCE(DISTINCT rt0.c1, NULL))))OR((+ (rt0.c0)))))OR(CAST(rt0.c1 AS REAL)))) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT * FROM t1;
SELECT DISTINCT * FROM t1 WHERE ((((t1.c1) IS FALSE) IN ())) UNION SELECT DISTINCT * FROM t1 WHERE ((NOT ((((t1.c1) IS FALSE) IN ())))) UNION SELECT DISTINCT * FROM t1 WHERE ((((((t1.c1) IS FALSE) IN ())) ISNULL));
SELECT DISTINCT * FROM t1;
SELECT ALL t1.c1 FROM t1 GROUP BY t1.c1;
SELECT t1.c1 FROM t1 WHERE (t1.c1) GROUP BY t1.c1 UNION SELECT t1.c1 FROM t1 WHERE ((NOT (t1.c1))) GROUP BY t1.c1 UNION SELECT t1.c1 FROM t1 WHERE (((t1.c1) ISNULL)) GROUP BY t1.c1;
SELECT ALL t1.c1 FROM t1 GROUP BY t1.c1;
SELECT rt0.c2, rt0.c1 FROM t1 INNER JOIN rt0 ON (((rt0.c3, ((NULL) IS FALSE), rt0.c2 COLLATE RTRIM))>((((((rt0.c0)AND(rt0.c2)))AND('-632652568')), ((rt0.c0) IS FALSE), ((((((((rt0.c0)OR(rt0.c1)))OR(0.12557030350833243)))AND(rt0.c2)))OR(t1.c1))))) GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM t1 INNER JOIN rt0 ON (((rt0.c3, ((NULL) IS FALSE), rt0.c2 COLLATE RTRIM))>((((((rt0.c0)AND(rt0.c2)))AND('-632652568')), ((rt0.c0) IS FALSE), ((((((((rt0.c0)OR(rt0.c1)))OR(0.12557030350833243)))AND(rt0.c2)))OR(t1.c1))))) GROUP BY rt0.c2, rt0.c1 HAVING GROUP_CONCAT(MAX(MAX(TOTAL(COUNT(AVG(TOTAL(MIN(COUNT(TOTAL(0.3590184808676383)))))))))) UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM t1 INNER JOIN rt0 ON (((rt0.c3, ((NULL) IS FALSE), rt0.c2 COLLATE RTRIM))>((((((rt0.c0)AND(rt0.c2)))AND('-632652568')), ((rt0.c0) IS FALSE), ((((((((rt0.c0)OR(rt0.c1)))OR(0.12557030350833243)))AND(rt0.c2)))OR(t1.c1))))) GROUP BY rt0.c2, rt0.c1 HAVING (NOT (GROUP_CONCAT(MAX(MAX(TOTAL(COUNT(AVG(TOTAL(MIN(COUNT(TOTAL(0.3590184808676383)))))))))))) UNION ALL SELECT rt0.c2, rt0.c1 FROM t1 NOT INDEXED INNER JOIN rt0 ON (((rt0.c3, ((NULL) IS FALSE), rt0.c2 COLLATE RTRIM))>((((((rt0.c0)AND(rt0.c2)))AND('-632652568')), ((rt0.c0) IS FALSE), ((((((((rt0.c0)OR(rt0.c1)))OR(0.12557030350833243)))AND(rt0.c2)))OR(t1.c1))))) GROUP BY rt0.c2, rt0.c1 HAVING ((GROUP_CONCAT(MAX(MAX(TOTAL(COUNT(AVG(TOTAL(MIN(COUNT(TOTAL(0.3590184808676383))))))))))) ISNULL);
SELECT * FROM rt0, t1;
SELECT * FROM rt0, t1 WHERE (NULL) UNION ALL SELECT ALL * FROM rt0, t1 WHERE ((NOT (NULL))) UNION ALL SELECT * FROM rt0, t1 WHERE (((NULL) ISNULL));
SELECT * FROM rt0, t1;
SELECT DISTINCT t1.c1, rt0.c2 FROM t1 INNER JOIN rt0 ON NULLIF((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c3))), ((rt0.c1) IS FALSE));
SELECT DISTINCT t1.c1, rt0.c2 FROM t1 INNER JOIN rt0 ON NULLIF((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c3))), ((rt0.c1) IS FALSE)) WHERE (rt0.c0) UNION SELECT DISTINCT t1.c1, rt0.c2 FROM t1 INNER JOIN rt0 ON NULLIF((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c3))), ((rt0.c1) IS FALSE)) WHERE ((NOT (rt0.c0))) UNION SELECT DISTINCT t1.c1, rt0.c2 FROM t1 INNER JOIN rt0 ON NULLIF((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c3))), ((rt0.c1) IS FALSE)) WHERE (((rt0.c0) ISNULL));
SELECT DISTINCT t1.c1, rt0.c2 FROM t1 INNER JOIN rt0 ON NULLIF((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c3))), ((rt0.c1) IS FALSE));
SELECT ALL rt0.c0, t1.c1 FROM rt0 RIGHT OUTER JOIN t1 ON ((((rt0.c1)%(rt0.c1)))>((- (t1.c1)))) GROUP BY rt0.c0, t1.c1;
SELECT ALL rt0.c0, t1.c1 FROM rt0 RIGHT OUTER JOIN t1 ON ((((rt0.c1)%(rt0.c1)))>((- (t1.c1)))) WHERE ((NOT (((t1.c1) BETWEEN (rt0.c3) AND (rt0.c0))))) GROUP BY rt0.c0, t1.c1 UNION SELECT rt0.c0, t1.c1 FROM rt0 RIGHT OUTER JOIN t1 ON ((((rt0.c1)%(rt0.c1)))>((- (t1.c1)))) WHERE ((NOT ((NOT (((t1.c1) BETWEEN (rt0.c3) AND (rt0.c0))))))) GROUP BY rt0.c0, t1.c1 UNION SELECT ALL rt0.c0, t1.c1 FROM rt0 RIGHT OUTER JOIN t1 ON ((((rt0.c1)%(rt0.c1)))>((- (t1.c1)))) WHERE ((((NOT (((t1.c1) BETWEEN (rt0.c3) AND (rt0.c0))))) ISNULL)) GROUP BY rt0.c0, t1.c1;
SELECT ALL rt0.c0, t1.c1 FROM rt0 RIGHT OUTER JOIN t1 ON ((((rt0.c1)%(rt0.c1)))>((- (t1.c1)))) GROUP BY rt0.c0, t1.c1;
SELECT rt0.c2, rt0.c0, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c3;
SELECT rt0.c2, rt0.c0, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c3 HAVING COUNT(((rt0.c0)=(rt0.c2))) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c3 HAVING (NOT (COUNT(((rt0.c0)==(rt0.c2))))) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c3 HAVING ((COUNT(((rt0.c0)=(rt0.c2)))) ISNULL);
SELECT rt0.c2, rt0.c0, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c3;
SELECT rt0.c2, rt0.c0, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c3 HAVING COUNT(((rt0.c0)=(rt0.c2))) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c3 HAVING (NOT (COUNT(((rt0.c0)==(rt0.c2))))) UNION ALL SELECT ALL rt0.c2, rt0.c0, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c3 HAVING ((COUNT(((rt0.c0)=(rt0.c2)))) ISNULL);
SELECT rt0.c2, rt0.c0, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c0, rt0.c3;
SELECT rt0.c3 FROM rt0, t1;
SELECT ALL rt0.c3 FROM rt0, t1 WHERE (((((((((rt0.c3 COLLATE NOCASE)OR(ABS(t1.c1))))OR(((rt0.c2)>(rt0.c2)))))OR(((((((((rt0.c1)AND(rt0.c3)))OR(t1.c1)))AND(t1.c1)))OR(0.8852291896520973)))))OR(-1205956499))) UNION ALL SELECT rt0.c3 FROM rt0, t1 WHERE ((NOT (((((((((rt0.c3 COLLATE NOCASE)OR(ABS(t1.c1))))OR(((rt0.c2)>(rt0.c2)))))OR(((((((((rt0.c1)AND(rt0.c3)))OR(t1.c1)))AND(t1.c1)))OR(0.8852291896520973)))))OR(-1205956499))))) UNION ALL SELECT ALL rt0.c3 FROM rt0, t1 WHERE (((((((((((rt0.c3 COLLATE NOCASE)OR(ABS(t1.c1))))OR(((rt0.c2)>(rt0.c2)))))OR(((((((((rt0.c1)AND(rt0.c3)))OR(t1.c1)))AND(t1.c1)))OR(0.8852291896520973)))))OR(-1205956499))) ISNULL));
SELECT rt0.c3 FROM rt0, t1;
SELECT DISTINCT * FROM t1;
SELECT DISTINCT * FROM t1 WHERE (ROUND(((t1.c1)IS(t1.c1)), ((t1.c1) BETWEEN (t1.c1) AND (t1.c1)))) UNION SELECT DISTINCT * FROM t1 WHERE ((NOT (ROUND(((t1.c1)IS(t1.c1)), ((t1.c1) BETWEEN (t1.c1) AND (t1.c1)))))) UNION SELECT DISTINCT * FROM t1 WHERE (((ROUND(((t1.c1)IS(t1.c1)), ((t1.c1) BETWEEN (t1.c1) AND (t1.c1)))) ISNULL));
SELECT DISTINCT * FROM t1;
SELECT rt0.c2, rt0.c1, rt0.c0, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0, rt0.c3;
SELECT rt0.c2, rt0.c1, rt0.c0, rt0.c3 FROM rt0 WHERE (((QUOTE(rt0.c1))>(ROUND(rt0.c1, rt0.c1)))) GROUP BY rt0.c2, rt0.c1, rt0.c0, rt0.c3 UNION SELECT ALL rt0.c2, rt0.c1, rt0.c0, rt0.c3 FROM rt0 WHERE ((NOT (((QUOTE(rt0.c1))>(ROUND(rt0.c1, rt0.c1)))))) GROUP BY rt0.c2, rt0.c1, rt0.c0, rt0.c3 UNION SELECT ALL rt0.c2, rt0.c1, rt0.c0, rt0.c3 FROM rt0 WHERE (((((QUOTE(rt0.c1))>(ROUND(rt0.c1, rt0.c1)))) ISNULL)) GROUP BY rt0.c2, rt0.c1, rt0.c0, rt0.c3;
SELECT rt0.c2, rt0.c1, rt0.c0, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c0, rt0.c3;
SELECT rt0.c3, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c3, rt0.c1, rt0.c0;
SELECT ALL rt0.c3, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c3, rt0.c1, rt0.c0 HAVING SUM(CASE WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c1 THEN SUM(rt0.c3) ELSE TOTAL(TOTAL(rt0.c2)) END) UNION ALL SELECT rt0.c3, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c3, rt0.c1, rt0.c0 HAVING (NOT (SUM(CASE WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c1 THEN SUM(rt0.c3) ELSE TOTAL(TOTAL(rt0.c2)) END))) UNION ALL SELECT ALL rt0.c3, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c3, rt0.c1, rt0.c0 HAVING ((SUM(CASE WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c1 THEN SUM(rt0.c3) ELSE TOTAL(TOTAL(rt0.c2)) END)) ISNULL);
SELECT t1.c1, rt0.c2, rt0.c1 FROM rt0, t1;
SELECT ALL t1.c1, rt0.c2, rt0.c1 FROM rt0, t1 WHERE ((NOT ((~ (rt0.c3))))) UNION ALL SELECT t1.c1, rt0.c2, rt0.c1 FROM rt0, t1 WHERE ((NOT ((NOT ((~ (rt0.c3))))))) UNION ALL SELECT ALL t1.c1, rt0.c2, rt0.c1 FROM rt0, t1 WHERE ((((NOT ((~ (rt0.c3))))) ISNULL));
SELECT t1.c1, rt0.c2, rt0.c1 FROM rt0, t1;
SELECT DISTINCT * FROM t1 LEFT OUTER JOIN rt0 ON '989501612';
SELECT DISTINCT * FROM t1 LEFT OUTER JOIN rt0 ON '989501612' WHERE ((+ (((((((((rt0.c1)OR(rt0.c0)))OR(rt0.c3)))AND(rt0.c2)))OR(rt0.c2))))) UNION SELECT DISTINCT * FROM t1 LEFT OUTER JOIN rt0 ON '989501612' WHERE ((NOT ((+ (((((((((rt0.c1)OR(rt0.c0)))OR(rt0.c3)))AND(rt0.c2)))OR(rt0.c2))))))) UNION SELECT DISTINCT * FROM t1 LEFT OUTER JOIN rt0 ON '989501612' WHERE ((((+ (((((((((rt0.c1)OR(rt0.c0)))OR(rt0.c3)))AND(rt0.c2)))OR(rt0.c2))))) ISNULL));
SELECT DISTINCT * FROM t1 LEFT OUTER JOIN rt0 ON '989501612';
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM t1 NATURAL JOIN rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM t1 NATURAL JOIN rt0 WHERE (((((((rt0.c1)OR(rt0.c0)))OR(rt0.c0)))<(((0.9391768409681264) ISNULL)))) GROUP BY rt0.c2, rt0.c0, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM t1 NATURAL JOIN rt0 WHERE ((NOT (((((((rt0.c1)OR(rt0.c0)))OR(rt0.c0)))<(((0.9391768409681264) ISNULL)))))) GROUP BY rt0.c2, rt0.c0, rt0.c1 UNION SELECT rt0.c2, rt0.c0, rt0.c1 FROM t1 NATURAL JOIN rt0 WHERE (((((((((rt0.c1)OR(rt0.c0)))OR(rt0.c0)))<(((0.9391768409681264) ISNULL)))) ISNULL)) GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM t1 NATURAL JOIN rt0 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING TOTAL((((rt0.c2)) BETWEEN ((AVG(rt0.c3))) AND ((rt0.c0)))) UNION ALL SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT (TOTAL((((rt0.c2)) BETWEEN ((AVG(rt0.c3))) AND ((rt0.c0)))))) UNION ALL SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((TOTAL((((rt0.c2)) BETWEEN ((AVG(rt0.c3))) AND ((rt0.c0))))) ISNULL);
SELECT ALL rt0.c1 FROM rt0;
SELECT ALL rt0.c1 FROM rt0 WHERE (CAST(((rt0.c3) BETWEEN (rt0.c2) AND (rt0.c0)) AS REAL)) UNION ALL SELECT ALL rt0.c1 FROM rt0 WHERE ((NOT (CAST(((rt0.c3) BETWEEN (rt0.c2) AND (rt0.c0)) AS REAL)))) UNION ALL SELECT ALL rt0.c1 FROM rt0 WHERE (((CAST(((rt0.c3) BETWEEN (rt0.c2) AND (rt0.c0)) AS REAL)) ISNULL));
SELECT ALL rt0.c1 FROM rt0;
SELECT DISTINCT * FROM t1, rt0;
SELECT DISTINCT * FROM t1, rt0 WHERE (((CASE t1.c1  WHEN rt0.c0 THEN rt0.c0 ELSE NULL END) NOT BETWEEN (((rt0.c0)>(t1.c1))) AND (0.030902295103678146))) UNION SELECT DISTINCT * FROM t1, rt0 WHERE ((NOT (((CASE t1.c1  WHEN rt0.c0 THEN rt0.c0 ELSE NULL END) NOT BETWEEN (((rt0.c0)>(t1.c1))) AND (0.030902295103678146))))) UNION SELECT DISTINCT * FROM t1, rt0 WHERE (((((CASE t1.c1  WHEN rt0.c0 THEN rt0.c0 ELSE NULL END) NOT BETWEEN (((rt0.c0)>(t1.c1))) AND (0.030902295103678146))) ISNULL));
SELECT DISTINCT * FROM t1, rt0;
SELECT ALL rt0.c3 FROM rt0 GROUP BY rt0.c3;
SELECT ALL rt0.c3 FROM rt0 WHERE ('\n웊' COLLATE RTRIM) GROUP BY rt0.c3 UNION SELECT ALL rt0.c3 FROM rt0 WHERE ((NOT ('\n웊' COLLATE RTRIM))) GROUP BY rt0.c3 UNION SELECT ALL rt0.c3 FROM rt0 WHERE ((('\n웊' COLLATE RTRIM) ISNULL)) GROUP BY rt0.c3;
SELECT ALL rt0.c3 FROM rt0 GROUP BY rt0.c3;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING ((0.16594692764808316) NOT NULL) UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING (NOT (((0.16594692764808316) NOT NULL))) UNION ALL SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING ((((0.16594692764808316) NOT NULL)) ISNULL);
SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING ((0.16594692764808316) NOT NULL) UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING (NOT (((0.16594692764808316) NOT NULL))) UNION ALL SELECT rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1 HAVING ((((0.16594692764808316) NOT NULL)) ISNULL);
SELECT ALL rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c1;
SELECT ALL * FROM rt0 FULL OUTER JOIN t1 ON UPPER(DISTINCT ((rt0.c1) NOT BETWEEN (NULL) AND (rt0.c1)));
SELECT * FROM rt0 FULL OUTER JOIN t1 ON UPPER(DISTINCT ((rt0.c1) NOT BETWEEN (NULL) AND (rt0.c1))) WHERE ((((rt0.c3)) BETWEEN (((NOT (rt0.c0)))) AND ((CAST(rt0.c1 AS BLOB))))) UNION ALL SELECT * FROM rt0 FULL OUTER JOIN t1 ON UPPER(DISTINCT ((rt0.c1) NOT BETWEEN (NULL) AND (rt0.c1))) WHERE ((NOT ((((rt0.c3)) BETWEEN (((NOT (rt0.c0)))) AND ((CAST(rt0.c1 AS BLOB))))))) UNION ALL SELECT ALL * FROM rt0 FULL OUTER JOIN t1 ON UPPER(DISTINCT ((rt0.c1) NOT BETWEEN (NULL) AND (rt0.c1))) WHERE ((((((rt0.c3)) BETWEEN (((NOT (rt0.c0)))) AND ((CAST(rt0.c1 AS BLOB))))) ISNULL));
SELECT ALL * FROM rt0 FULL OUTER JOIN t1 ON UPPER(DISTINCT ((rt0.c1) NOT BETWEEN (NULL) AND (rt0.c1)));
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((CAST(rt0.c2 AS NUMERIC) IN ())) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((CAST(rt0.c2 AS NUMERIC) IN ())))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((CAST(rt0.c2 AS NUMERIC) IN ())) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c3, t1.c1, rt0.c2, rt0.c1, rt0.c0 FROM rt0 FULL OUTER JOIN t1 ON ((((rt0.c1)|(rt0.c0)))||(((((rt0.c1)AND(rt0.c3)))OR(t1.c1)))) GROUP BY rt0.c3, t1.c1, rt0.c2, rt0.c1, rt0.c0;
SELECT rt0.c3, t1.c1, rt0.c2, rt0.c1, rt0.c0 FROM rt0 FULL OUTER JOIN t1 ON ((((rt0.c1)|(rt0.c0)))||(((((rt0.c1)AND(rt0.c3)))OR(t1.c1)))) WHERE (CASE WHEN ((rt0.c1) NOT NULL) THEN json_array_length(0.9997085367624785, rt0.c0) END) GROUP BY rt0.c3, t1.c1, rt0.c2, rt0.c1, rt0.c0 UNION SELECT rt0.c3, t1.c1, rt0.c2, rt0.c1, rt0.c0 FROM rt0 FULL OUTER JOIN t1 ON ((((rt0.c1)|(rt0.c0)))||(((((rt0.c1)AND(rt0.c3)))OR(t1.c1)))) WHERE ((NOT (CASE WHEN ((rt0.c1) NOT NULL) THEN json_array_length(0.9997085367624785, rt0.c0) END))) GROUP BY rt0.c3, t1.c1, rt0.c2, rt0.c1, rt0.c0 UNION SELECT rt0.c3, t1.c1, rt0.c2, rt0.c1, rt0.c0 FROM rt0 FULL OUTER JOIN t1 ON ((((rt0.c1)|(rt0.c0)))||(((((rt0.c1)AND(rt0.c3)))OR(t1.c1)))) WHERE (((CASE WHEN ((rt0.c1) NOT NULL) THEN json_array_length(0.9997085367624785, rt0.c0) END) ISNULL)) GROUP BY rt0.c3, t1.c1, rt0.c2, rt0.c1, rt0.c0;
SELECT ALL t1.c1 FROM t1 GROUP BY t1.c1;
SELECT ALL t1.c1 FROM t1 GROUP BY t1.c1 HAVING SUM(UPPER(t1.c1)) UNION ALL SELECT t1.c1 FROM t1 GROUP BY t1.c1 HAVING (NOT (SUM(UPPER(t1.c1)))) UNION ALL SELECT ALL t1.c1 FROM t1 GROUP BY t1.c1 HAVING ((SUM(UPPER(t1.c1))) ISNULL);
SELECT ALL t1.c1 FROM t1 GROUP BY t1.c1;
SELECT ALL t1.c1 FROM t1 GROUP BY t1.c1 HAVING SUM(UPPER(t1.c1)) UNION ALL SELECT t1.c1 FROM t1 GROUP BY t1.c1 HAVING (NOT (SUM(UPPER(t1.c1)))) UNION ALL SELECT ALL t1.c1 FROM t1 GROUP BY t1.c1 HAVING ((SUM(UPPER(t1.c1))) ISNULL);
SELECT ALL t1.c1 FROM t1 GROUP BY t1.c1;
SELECT ALL * FROM rt0 NATURAL JOIN t1;
SELECT * FROM rt0 NATURAL JOIN t1 WHERE (x'281f') UNION ALL SELECT * FROM rt0 NATURAL JOIN t1 WHERE ((NOT (x'281f'))) UNION ALL SELECT * FROM rt0 NATURAL JOIN t1 WHERE (((x'281f') ISNULL));
SELECT ALL * FROM rt0 NATURAL JOIN t1;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((((CAST(rt0.c0 AS NUMERIC))AND((rt0.c3 IN ()))))OR(COALESCE(rt0.c0, rt0.c1, rt0.c0, rt0.c3)))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((((CAST(rt0.c0 AS NUMERIC))AND((rt0.c3 IN ()))))OR(COALESCE(rt0.c0, rt0.c1, rt0.c0, rt0.c3)))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((((CAST(rt0.c0 AS NUMERIC))AND((rt0.c3 IN ()))))OR(COALESCE(rt0.c0, rt0.c1, rt0.c0, rt0.c3)))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL t1.c1 FROM t1 GROUP BY t1.c1;
SELECT ALL t1.c1 FROM t1 WHERE (((((((((t1.c1 COLLATE BINARY)AND(t1.c1)))OR(CAST(t1.c1 AS BLOB))))AND((NOT (t1.c1)))))AND(((NULL) BETWEEN (t1.c1) AND (t1.c1))))) GROUP BY t1.c1 UNION SELECT ALL t1.c1 FROM t1 WHERE ((NOT (((((((((t1.c1 COLLATE BINARY)AND(t1.c1)))OR(CAST(t1.c1 AS BLOB))))AND((NOT (t1.c1)))))AND(((NULL) BETWEEN (t1.c1) AND (t1.c1))))))) GROUP BY t1.c1 UNION SELECT t1.c1 FROM t1 WHERE (((((((((((t1.c1 COLLATE BINARY)AND(t1.c1)))OR(CAST(t1.c1 AS BLOB))))AND((NOT (t1.c1)))))AND(((NULL) BETWEEN (t1.c1) AND (t1.c1))))) ISNULL)) GROUP BY t1.c1;
SELECT ALL t1.c1 FROM t1 GROUP BY t1.c1;
SELECT t1.c1 FROM t1 GROUP BY t1.c1;
SELECT ALL t1.c1 FROM t1 GROUP BY t1.c1 HAVING MAX(CAST(COUNT(*) AS NUMERIC)) UNION ALL SELECT ALL t1.c1 FROM t1 GROUP BY t1.c1 HAVING (NOT (MAX(CAST(COUNT(*) AS NUMERIC)))) UNION ALL SELECT ALL t1.c1 FROM t1 GROUP BY t1.c1 HAVING ((MAX(CAST(COUNT(*) AS NUMERIC))) ISNULL);
SELECT * FROM t1 INNER JOIN rt0 ON (((((rt0.c1)<=(t1.c1))))>=((((rt0.c1)-(t1.c1)))));
SELECT ALL * FROM t1 INNER JOIN rt0 ON (((((rt0.c1)<=(t1.c1))))>=((((rt0.c1)-(t1.c1))))) WHERE (load_extension((NOT (rt0.c2)))) UNION ALL SELECT ALL * FROM t1 INNER JOIN rt0 ON (((((rt0.c1)<=(t1.c1))))>=((((rt0.c1)-(t1.c1))))) WHERE ((NOT (load_extension((NOT (rt0.c2)))))) UNION ALL SELECT * FROM t1 INNER JOIN rt0 ON (((((rt0.c1)<=(t1.c1))))>=((((rt0.c1)-(t1.c1))))) WHERE (((load_extension((NOT (rt0.c2)))) ISNULL));
SELECT DISTINCT * FROM t1;
SELECT DISTINCT * FROM t1 WHERE (((t1.c1 COLLATE RTRIM)==((t1.c1 IN ())))) UNION SELECT DISTINCT * FROM t1 WHERE ((NOT (((t1.c1 COLLATE RTRIM)=((t1.c1 IN ())))))) UNION SELECT DISTINCT * FROM t1 WHERE (((((t1.c1 COLLATE RTRIM)=((t1.c1 IN ())))) ISNULL));
SELECT DISTINCT * FROM t1;
SELECT ALL rt0.c1, rt0.c0, t1.c1, rt0.c3 FROM rt0, t1 GROUP BY rt0.c1, rt0.c0, t1.c1, rt0.c3;
SELECT rt0.c1, rt0.c0, t1.c1, rt0.c3 FROM rt0, t1 WHERE (x'') GROUP BY rt0.c1, rt0.c0, t1.c1, rt0.c3 UNION SELECT rt0.c1, rt0.c0, t1.c1, rt0.c3 FROM rt0, t1 WHERE ((NOT (x''))) GROUP BY rt0.c1, rt0.c0, t1.c1, rt0.c3 UNION SELECT rt0.c1, rt0.c0, t1.c1, rt0.c3 FROM rt0, t1 WHERE (((x'') ISNULL)) GROUP BY rt0.c1, rt0.c0, t1.c1, rt0.c3;
SELECT ALL rt0.c1, rt0.c0, t1.c1, rt0.c3 FROM rt0, t1 GROUP BY rt0.c1, rt0.c0, t1.c1, rt0.c3;
SELECT rt0.c3, rt0.c1, t1.c1, rt0.c2, rt0.c0 FROM rt0, t1 GROUP BY rt0.c3, rt0.c1, t1.c1, rt0.c2, rt0.c0;
SELECT ALL rt0.c3, rt0.c1, t1.c1, rt0.c2, rt0.c0 FROM rt0, t1 GROUP BY rt0.c3, rt0.c1, t1.c1, rt0.c2, rt0.c0 HAVING COUNT(GROUP_CONCAT(TOTAL(GROUP_CONCAT(COUNT(*))))) UNION ALL SELECT rt0.c3, rt0.c1, t1.c1, rt0.c2, rt0.c0 FROM rt0, t1 GROUP BY rt0.c3, rt0.c1, t1.c1, rt0.c2, rt0.c0 HAVING (NOT (COUNT(GROUP_CONCAT(TOTAL(GROUP_CONCAT(COUNT(*))))))) UNION ALL SELECT ALL rt0.c3, rt0.c1, t1.c1, rt0.c2, rt0.c0 FROM rt0, t1 GROUP BY rt0.c3, rt0.c1, t1.c1, rt0.c2, rt0.c0 HAVING ((COUNT(GROUP_CONCAT(TOTAL(GROUP_CONCAT(COUNT(*)))))) ISNULL);
SELECT ALL rt0.c1, rt0.c2 FROM t1 CROSS JOIN rt0 ON CAST(((rt0.c1)!=(t1.c1)) AS NUMERIC);
SELECT ALL rt0.c1, rt0.c2 FROM t1 CROSS JOIN rt0 ON CAST(((rt0.c1)<>(t1.c1)) AS NUMERIC) WHERE ((((((rt0.c3 IN (rt0.c3, NULL)))OR(CASE WHEN rt0.c2 THEN rt0.c1 END)))AND(((rt0.c2)IS NOT(rt0.c1))))) UNION ALL SELECT ALL rt0.c1, rt0.c2 FROM t1 CROSS JOIN rt0 ON CAST(((rt0.c1)<>(t1.c1)) AS NUMERIC) WHERE ((NOT ((((((rt0.c3 IN (rt0.c3, NULL)))OR(CASE WHEN rt0.c2 THEN rt0.c1 END)))AND(((rt0.c2)IS NOT(rt0.c1))))))) UNION ALL SELECT rt0.c1, rt0.c2 FROM t1 CROSS JOIN rt0 ON CAST(((rt0.c1)<>(t1.c1)) AS NUMERIC) WHERE ((((((((rt0.c3 IN (rt0.c3, NULL)))OR(CASE WHEN rt0.c2 THEN rt0.c1 END)))AND(((rt0.c2)IS NOT(rt0.c1))))) ISNULL));
SELECT ALL rt0.c1, rt0.c2 FROM t1 CROSS JOIN rt0 ON CAST(((rt0.c1)!=(t1.c1)) AS NUMERIC);
SELECT DISTINCT * FROM t1;
SELECT DISTINCT * FROM t1 WHERE ((((t1.c1)<<(t1.c1)) IN ())) UNION SELECT DISTINCT * FROM t1 WHERE ((NOT ((((t1.c1)<<(t1.c1)) IN ())))) UNION SELECT DISTINCT * FROM t1 WHERE ((((((t1.c1)<<(t1.c1)) IN ())) ISNULL));
SELECT DISTINCT * FROM t1;
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c1 FROM rt0 WHERE (((((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c1))) IS FALSE)) GROUP BY rt0.c0, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (((((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c1))) IS FALSE)))) GROUP BY rt0.c0, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c1 FROM rt0 WHERE (((((((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c1))) IS FALSE)) ISNULL)) GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c1, rt0.c0, t1.c1 FROM rt0, t1 GROUP BY rt0.c1, rt0.c0, t1.c1;
SELECT ALL rt0.c1, rt0.c0, t1.c1 FROM rt0, t1 GROUP BY rt0.c1, rt0.c0, t1.c1 HAVING COUNT(TYPEOF(DISTINCT MIN(TOTAL(t1.c1)))) UNION ALL SELECT ALL rt0.c1, rt0.c0, t1.c1 FROM rt0, t1 GROUP BY rt0.c1, rt0.c0, t1.c1 HAVING (NOT (COUNT(TYPEOF(DISTINCT MIN(TOTAL(t1.c1)))))) UNION ALL SELECT ALL rt0.c1, rt0.c0, t1.c1 FROM rt0, t1 GROUP BY rt0.c1, rt0.c0, t1.c1 HAVING ((COUNT(TYPEOF(DISTINCT MIN(TOTAL(t1.c1))))) ISNULL);
SELECT * FROM t1;
SELECT * FROM t1 WHERE (0.38060232774250025) UNION ALL SELECT ALL * FROM t1 WHERE ((NOT (0.38060232774250025))) UNION ALL SELECT ALL * FROM t1 WHERE (((0.38060232774250025) ISNULL));
SELECT * FROM t1;
SELECT DISTINCT rt0.c3, rt0.c2, rt0.c0, t1.c1, rt0.c1 FROM rt0 NOT INDEXED, t1;
SELECT DISTINCT rt0.c3, rt0.c2, rt0.c0, t1.c1, rt0.c1 FROM rt0, t1 WHERE (rt0.c2) UNION SELECT DISTINCT rt0.c3, rt0.c2, rt0.c0, t1.c1, rt0.c1 FROM rt0, t1 WHERE ((NOT (rt0.c2))) UNION SELECT DISTINCT rt0.c3, rt0.c2, rt0.c0, t1.c1, rt0.c1 FROM rt0, t1 WHERE (((rt0.c2) ISNULL));
SELECT DISTINCT rt0.c3, rt0.c2, rt0.c0, t1.c1, rt0.c1 FROM rt0 NOT INDEXED, t1;
SELECT ALL rt0.c0, t1.c1, rt0.c3, rt0.c2, rt0.c1 FROM rt0, t1 GROUP BY rt0.c0, t1.c1, rt0.c3, rt0.c2, rt0.c1;
SELECT ALL rt0.c0, t1.c1, rt0.c3, rt0.c2, rt0.c1 FROM rt0, t1 WHERE ((~ (((rt0.c3)>=(rt0.c0))))) GROUP BY rt0.c0, t1.c1, rt0.c3, rt0.c2, rt0.c1 UNION SELECT ALL rt0.c0, t1.c1, rt0.c3, rt0.c2, rt0.c1 FROM rt0, t1 WHERE ((NOT ((~ (((rt0.c3)>=(rt0.c0))))))) GROUP BY rt0.c0, t1.c1, rt0.c3, rt0.c2, rt0.c1 UNION SELECT ALL rt0.c0, t1.c1, rt0.c3, rt0.c2, rt0.c1 FROM rt0, t1 WHERE ((((~ (((rt0.c3)>=(rt0.c0))))) ISNULL)) GROUP BY rt0.c0, t1.c1, rt0.c3, rt0.c2, rt0.c1;
SELECT ALL rt0.c0, t1.c1, rt0.c3, rt0.c2, rt0.c1 FROM rt0, t1 GROUP BY rt0.c0, t1.c1, rt0.c3, rt0.c2, rt0.c1;
SELECT rt0.c3, rt0.c2, rt0.c0 FROM rt0, t1 GROUP BY rt0.c3, rt0.c2, rt0.c0;
SELECT ALL rt0.c3, rt0.c2, rt0.c0 FROM rt0, t1 NOT INDEXED GROUP BY rt0.c3, rt0.c2, rt0.c0 HAVING TOTAL(GROUP_CONCAT(AVG(t1.c1))) UNION ALL SELECT rt0.c3, rt0.c2, rt0.c0 FROM rt0, t1 GROUP BY rt0.c3, rt0.c2, rt0.c0 HAVING (NOT (TOTAL(GROUP_CONCAT(AVG(t1.c1))))) UNION ALL SELECT rt0.c3, rt0.c2, rt0.c0 FROM rt0, t1 GROUP BY rt0.c3, rt0.c2, rt0.c0 HAVING ((TOTAL(GROUP_CONCAT(AVG(t1.c1)))) ISNULL);
SELECT ALL rt0.c1, rt0.c0, rt0.c3 FROM rt0 NOT INDEXED;
SELECT ALL rt0.c1, rt0.c0, rt0.c3 FROM rt0 WHERE (IFNULL(((rt0.c3) NOTNULL), CASE WHEN NULL THEN rt0.c2 ELSE rt0.c2 END)) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c3 FROM rt0 WHERE ((NOT (IFNULL(((rt0.c3) NOTNULL), CASE WHEN NULL THEN rt0.c2 ELSE rt0.c2 END)))) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c3 FROM rt0 WHERE (((IFNULL(((rt0.c3) NOTNULL), CASE WHEN NULL THEN rt0.c2 ELSE rt0.c2 END)) ISNULL));
SELECT ALL rt0.c1, rt0.c0, rt0.c3 FROM rt0 NOT INDEXED;
SELECT DISTINCT * FROM t1, rt0;
SELECT DISTINCT * FROM t1, rt0 WHERE (COALESCE(DISTINCT t1.c1, rt0.c1) COLLATE NOCASE) UNION SELECT DISTINCT * FROM t1, rt0 WHERE ((NOT (COALESCE(DISTINCT t1.c1, rt0.c1) COLLATE NOCASE))) UNION SELECT DISTINCT * FROM t1, rt0 WHERE (((COALESCE(DISTINCT t1.c1, rt0.c1) COLLATE NOCASE) ISNULL));
SELECT DISTINCT * FROM t1, rt0;
SELECT rt0.c2, t1.c1, rt0.c1, rt0.c3, rt0.c0 FROM t1, rt0 GROUP BY rt0.c2, t1.c1, rt0.c1, rt0.c3, rt0.c0;
SELECT rt0.c2, t1.c1, rt0.c1, rt0.c3, rt0.c0 FROM t1, rt0 WHERE ((~ (((rt0.c3) NOTNULL)))) GROUP BY rt0.c2, t1.c1, rt0.c1, rt0.c3, rt0.c0 UNION SELECT rt0.c2, t1.c1, rt0.c1, rt0.c3, rt0.c0 FROM t1, rt0 WHERE ((NOT ((~ (((rt0.c3) NOTNULL)))))) GROUP BY rt0.c2, t1.c1, rt0.c1, rt0.c3, rt0.c0 UNION SELECT rt0.c2, t1.c1, rt0.c1, rt0.c3, rt0.c0 FROM t1, rt0 WHERE ((((~ (((rt0.c3) NOTNULL)))) ISNULL)) GROUP BY rt0.c2, t1.c1, rt0.c1, rt0.c3, rt0.c0;
SELECT rt0.c2, t1.c1, rt0.c1, rt0.c3, rt0.c0 FROM t1, rt0 GROUP BY rt0.c2, t1.c1, rt0.c1, rt0.c3, rt0.c0;
SELECT ALL rt0.c0 FROM t1, rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM t1, rt0 GROUP BY rt0.c0 HAVING CAST(0.024665768511564434 AS NUMERIC) UNION ALL SELECT rt0.c0 FROM t1, rt0 GROUP BY rt0.c0 HAVING (NOT (CAST(0.024665768511564434 AS NUMERIC))) UNION ALL SELECT rt0.c0 FROM t1, rt0 GROUP BY rt0.c0 HAVING ((CAST(0.024665768511564434 AS NUMERIC)) ISNULL);
SELECT ALL rt0.c0 FROM t1, rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM t1, rt0 GROUP BY rt0.c0 HAVING CAST(0.024665768511564434 AS NUMERIC) UNION ALL SELECT rt0.c0 FROM t1, rt0 GROUP BY rt0.c0 HAVING (NOT (CAST(0.024665768511564434 AS NUMERIC))) UNION ALL SELECT rt0.c0 FROM t1, rt0 GROUP BY rt0.c0 HAVING ((CAST(0.024665768511564434 AS NUMERIC)) ISNULL);
SELECT ALL rt0.c0 FROM t1, rt0 GROUP BY rt0.c0;
SELECT ALL * FROM rt0 LEFT OUTER JOIN t1 ON (~ (rt0.c0 COLLATE RTRIM));
SELECT ALL * FROM rt0 LEFT OUTER JOIN t1 ON (~ (rt0.c0 COLLATE RTRIM)) WHERE (((t1.c1)>(CASE WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c2 WHEN t1.c1 THEN rt0.c2 END))) UNION ALL SELECT * FROM rt0 LEFT OUTER JOIN t1 ON (~ (rt0.c0 COLLATE RTRIM)) WHERE ((NOT (((t1.c1)>(CASE WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c2 WHEN t1.c1 THEN rt0.c2 END))))) UNION ALL SELECT ALL * FROM rt0 LEFT OUTER JOIN t1 ON (~ (rt0.c0 COLLATE RTRIM)) WHERE (((((t1.c1)>(CASE WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c2 WHEN t1.c1 THEN rt0.c2 END))) ISNULL));
SELECT ALL * FROM rt0 LEFT OUTER JOIN t1 ON (~ (rt0.c0 COLLATE RTRIM));
SELECT DISTINCT * FROM t1, rt0;
SELECT DISTINCT * FROM t1, rt0 WHERE (((((rt0.c0) NOT NULL)) ISNULL)) UNION SELECT DISTINCT * FROM t1, rt0 WHERE ((NOT (((((rt0.c0) NOT NULL)) ISNULL)))) UNION SELECT DISTINCT * FROM t1, rt0 WHERE (((((((rt0.c0) NOT NULL)) ISNULL)) ISNULL));
SELECT DISTINCT * FROM t1, rt0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0, rt0.c3 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0, rt0.c3;
SELECT rt0.c1, rt0.c2, rt0.c0, rt0.c3 FROM rt0 WHERE ((((((+ (rt0.c3)))OR(rt0.c2)))OR((rt0.c0 IN ())))) GROUP BY rt0.c1, rt0.c2, rt0.c0, rt0.c3 UNION SELECT ALL rt0.c1, rt0.c2, rt0.c0, rt0.c3 FROM rt0 WHERE ((NOT ((((((+ (rt0.c3)))OR(rt0.c2)))OR((rt0.c0 IN ())))))) GROUP BY rt0.c1, rt0.c2, rt0.c0, rt0.c3 UNION SELECT ALL rt0.c1, rt0.c2, rt0.c0, rt0.c3 FROM rt0 WHERE ((((((((+ (rt0.c3)))OR(rt0.c2)))OR((rt0.c0 IN ())))) ISNULL)) GROUP BY rt0.c1, rt0.c2, rt0.c0, rt0.c3;
SELECT ALL rt0.c1, rt0.c2, rt0.c0, rt0.c3 FROM rt0 GROUP BY rt0.c1, rt0.c2, rt0.c0, rt0.c3;
SELECT rt0.c3, rt0.c0 FROM rt0 GROUP BY rt0.c3, rt0.c0;
SELECT ALL rt0.c3, rt0.c0 FROM rt0 GROUP BY rt0.c3, rt0.c0 HAVING COUNT((COUNT(rt0.c3) IN ())) UNION ALL SELECT ALL rt0.c3, rt0.c0 FROM rt0 GROUP BY rt0.c3, rt0.c0 HAVING (NOT (COUNT((COUNT(rt0.c3) IN ())))) UNION ALL SELECT ALL rt0.c3, rt0.c0 FROM rt0 GROUP BY rt0.c3, rt0.c0 HAVING ((COUNT((COUNT(rt0.c3) IN ()))) ISNULL);
SELECT rt0.c3, rt0.c0 FROM rt0 GROUP BY rt0.c3, rt0.c0;
SELECT ALL rt0.c3, rt0.c0 FROM rt0 GROUP BY rt0.c3, rt0.c0 HAVING COUNT((COUNT(rt0.c3) IN ())) UNION ALL SELECT ALL rt0.c3, rt0.c0 FROM rt0 GROUP BY rt0.c3, rt0.c0 HAVING (NOT (COUNT((COUNT(rt0.c3) IN ())))) UNION ALL SELECT ALL rt0.c3, rt0.c0 FROM rt0 GROUP BY rt0.c3, rt0.c0 HAVING ((COUNT((COUNT(rt0.c3) IN ()))) ISNULL);
SELECT rt0.c3, rt0.c0 FROM rt0 GROUP BY rt0.c3, rt0.c0;
SELECT ALL SUM(CASE TRIM(DISTINCT rt0.c3, rt0.c0)  WHEN ((((rt0.c1)OR(t1.c1)))AND(rt0.c3)) THEN ((rt0.c2)||(rt0.c3)) ELSE '|yb7?jfT*' END) FROM rt0, t1;
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE ('B<S⼌nU諉') UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT ('B<S⼌nU諉'))) UNION ALL SELECT * FROM rt0 WHERE ((('B<S⼌nU諉') ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c1 FROM t1, rt0;
SELECT DISTINCT rt0.c0, rt0.c1 FROM t1, rt0 WHERE ((((rt0.c3, rt0.c3, rt0.c3))=((rt0.c2, rt0.c3, rt0.c1))) COLLATE BINARY) UNION SELECT DISTINCT rt0.c0, rt0.c1 FROM t1, rt0 WHERE ((NOT ((((rt0.c3, rt0.c3, rt0.c3))==((rt0.c2, rt0.c3, rt0.c1))) COLLATE BINARY))) UNION SELECT DISTINCT rt0.c0, rt0.c1 FROM t1, rt0 WHERE ((((((rt0.c3, rt0.c3, rt0.c3))==((rt0.c2, rt0.c3, rt0.c1))) COLLATE BINARY) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c1 FROM t1, rt0;
SELECT ALL rt0.c1, rt0.c3, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c3, rt0.c2, rt0.c0;
SELECT rt0.c1, rt0.c3, rt0.c2, rt0.c0 FROM rt0 WHERE ((((rt0.c0 IN ()))IS((rt0.c1 IN ())))) GROUP BY rt0.c1, rt0.c3, rt0.c2, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c3, rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT ((((rt0.c0 IN ()))IS((rt0.c1 IN ())))))) GROUP BY rt0.c1, rt0.c3, rt0.c2, rt0.c0 UNION SELECT rt0.c1, rt0.c3, rt0.c2, rt0.c0 FROM rt0 WHERE ((((((rt0.c0 IN ()))IS((rt0.c1 IN ())))) ISNULL)) GROUP BY rt0.c1, rt0.c3, rt0.c2, rt0.c0;
SELECT ALL rt0.c1, rt0.c3, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c3, rt0.c2, rt0.c0;
SELECT ALL rt0.c0 FROM rt0, t1 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0, t1 GROUP BY rt0.c0 HAVING GROUP_CONCAT(MAX(rt0.c2)) UNION ALL SELECT ALL rt0.c0 FROM rt0, t1 GROUP BY rt0.c0 HAVING (NOT (GROUP_CONCAT(MAX(rt0.c2)))) UNION ALL SELECT rt0.c0 FROM rt0, t1 GROUP BY rt0.c0 HAVING ((GROUP_CONCAT(MAX(rt0.c2))) ISNULL);
SELECT t1.c1 FROM rt0, t1;
SELECT t1.c1 FROM rt0, t1 WHERE ((((t1.c1) BETWEEN (rt0.c3) AND (t1.c1)) IN (((((rt0.c2)OR(rt0.c0)))AND(rt0.c3))))) UNION ALL SELECT ALL t1.c1 FROM rt0, t1 WHERE ((NOT ((((t1.c1) BETWEEN (rt0.c3) AND (t1.c1)) IN (((((rt0.c2)OR(rt0.c0)))AND(rt0.c3))))))) UNION ALL SELECT ALL t1.c1 FROM rt0, t1 WHERE ((((((t1.c1) BETWEEN (rt0.c3) AND (t1.c1)) IN (((((rt0.c2)OR(rt0.c0)))AND(rt0.c3))))) ISNULL));
SELECT t1.c1 FROM rt0, t1;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((((((((((rt0.c2)AND(rt0.c0)))OR(rt0.c1)))AND(rt0.c3)))OR(rt0.c0)))<=(NULL))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((((((((((rt0.c2)AND(rt0.c0)))OR(rt0.c1)))AND(rt0.c3)))OR(rt0.c0)))<=(NULL))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((((((((((rt0.c2)AND(rt0.c0)))OR(rt0.c1)))AND(rt0.c3)))OR(rt0.c0)))<=(NULL))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c0, rt0.c2, rt0.c3 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c3;
SELECT rt0.c0, rt0.c2, rt0.c3 FROM rt0 WHERE (((CASE WHEN rt0.c0 THEN rt0.c3 END)%(-9.86361065E8))) GROUP BY rt0.c0, rt0.c2, rt0.c3 UNION SELECT ALL rt0.c0, rt0.c2, rt0.c3 FROM rt0 WHERE ((NOT (((CASE WHEN rt0.c0 THEN rt0.c3 END)%(-9.86361065E8))))) GROUP BY rt0.c0, rt0.c2, rt0.c3 UNION SELECT rt0.c0, rt0.c2, rt0.c3 FROM rt0 WHERE (((((CASE WHEN rt0.c0 THEN rt0.c3 END)%(-9.86361065E8))) ISNULL)) GROUP BY rt0.c0, rt0.c2, rt0.c3;
SELECT ALL rt0.c0, rt0.c2, rt0.c3 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c3;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM t1, rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM t1, rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING t1.c1 UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2 FROM t1, rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING (NOT (t1.c1)) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM t1, rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING ((t1.c1) ISNULL);
SELECT rt0.c0, rt0.c1, rt0.c2 FROM t1, rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT rt0.c0, rt0.c1, rt0.c2 FROM t1, rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING t1.c1 UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2 FROM t1, rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING (NOT (t1.c1)) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM t1, rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2 HAVING ((t1.c1) ISNULL);
SELECT rt0.c0, rt0.c1, rt0.c2 FROM t1, rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2;
SELECT ALL t1.c1, rt0.c3, rt0.c1, rt0.c2 FROM t1, rt0;
SELECT ALL t1.c1, rt0.c3, rt0.c1, rt0.c2 FROM t1, rt0 WHERE ((((rt0.c0, '-1757736322', t1.c1)) NOT BETWEEN ((LIKELY(rt0.c1), ((rt0.c2) BETWEEN (rt0.c0) AND (x'96b8')), IFNULL(rt0.c2, rt0.c0))) AND ((rt0.c1 COLLATE RTRIM, ((((t1.c1)AND(rt0.c2)))OR(rt0.c3)), (rt0.c1 IN ()))))) UNION ALL SELECT ALL t1.c1, rt0.c3, rt0.c1, rt0.c2 FROM t1, rt0 WHERE ((NOT ((((rt0.c0, '-1757736322', t1.c1)) NOT BETWEEN ((LIKELY(rt0.c1), ((rt0.c2) BETWEEN (rt0.c0) AND (x'96b8')), IFNULL(rt0.c2, rt0.c0))) AND ((rt0.c1 COLLATE RTRIM, ((((t1.c1)AND(rt0.c2)))OR(rt0.c3)), (rt0.c1 IN ()))))))) UNION ALL SELECT t1.c1, rt0.c3, rt0.c1, rt0.c2 FROM t1, rt0 WHERE ((((((rt0.c0, '-1757736322', t1.c1)) NOT BETWEEN ((LIKELY(rt0.c1), ((rt0.c2) BETWEEN (rt0.c0) AND (x'96b8')), IFNULL(rt0.c2, rt0.c0))) AND ((rt0.c1 COLLATE RTRIM, ((((t1.c1)AND(rt0.c2)))OR(rt0.c3)), (rt0.c1 IN ()))))) ISNULL));
SELECT ALL t1.c1, rt0.c3, rt0.c1, rt0.c2 FROM t1, rt0;
SELECT DISTINCT t1.c1 FROM t1;
SELECT DISTINCT t1.c1 FROM t1 WHERE (x'a891') UNION SELECT DISTINCT t1.c1 FROM t1 WHERE ((NOT (x'a891'))) UNION SELECT DISTINCT t1.c1 FROM t1 WHERE (((x'a891') ISNULL));
SELECT DISTINCT t1.c1 FROM t1;
SELECT ALL rt0.c3, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c3, rt0.c0, rt0.c1;
SELECT ALL rt0.c3, rt0.c0, rt0.c1 FROM rt0 WHERE (rt0.c2 COLLATE BINARY) GROUP BY rt0.c3, rt0.c0, rt0.c1 UNION SELECT rt0.c3, rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (rt0.c2 COLLATE BINARY))) GROUP BY rt0.c3, rt0.c0, rt0.c1 UNION SELECT rt0.c3, rt0.c0, rt0.c1 FROM rt0 WHERE (((rt0.c2 COLLATE BINARY) ISNULL)) GROUP BY rt0.c3, rt0.c0, rt0.c1;
SELECT ALL rt0.c3, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c3, rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c3 FROM t1, rt0 GROUP BY rt0.c0, rt0.c3;
SELECT ALL rt0.c0, rt0.c3 FROM t1, rt0 GROUP BY rt0.c0, rt0.c3 HAVING ((COUNT(*))IS NOT(t1.c1)) UNION ALL SELECT ALL rt0.c0, rt0.c3 FROM t1, rt0 GROUP BY rt0.c0, rt0.c3 HAVING (NOT (((COUNT(*))IS NOT(t1.c1)))) UNION ALL SELECT ALL rt0.c0, rt0.c3 FROM t1, rt0 GROUP BY rt0.c0, rt0.c3 HAVING ((((COUNT(*))IS NOT(t1.c1))) ISNULL);
SELECT ALL rt0.c0, rt0.c3 FROM t1, rt0 GROUP BY rt0.c0, rt0.c3;
SELECT ALL rt0.c0, rt0.c3 FROM t1, rt0 GROUP BY rt0.c0, rt0.c3 HAVING ((COUNT(*))IS NOT(t1.c1)) UNION ALL SELECT ALL rt0.c0, rt0.c3 FROM t1, rt0 GROUP BY rt0.c0, rt0.c3 HAVING (NOT (((COUNT(*))IS NOT(t1.c1)))) UNION ALL SELECT ALL rt0.c0, rt0.c3 FROM t1, rt0 GROUP BY rt0.c0, rt0.c3 HAVING ((((COUNT(*))IS NOT(t1.c1))) ISNULL);
SELECT ALL rt0.c0, rt0.c3 FROM t1, rt0 GROUP BY rt0.c0, rt0.c3;
SELECT ALL rt0.c0 FROM rt0;
SELECT ALL rt0.c0 FROM rt0 WHERE (CASE WHEN ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0)) THEN 0.7163958460349789 END) UNION ALL SELECT rt0.c0 FROM rt0 WHERE ((NOT (CASE WHEN ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0)) THEN 0.7163958460349789 END))) UNION ALL SELECT rt0.c0 FROM rt0 WHERE (((CASE WHEN ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0)) THEN 0.7163958460349789 END) ISNULL));
SELECT ALL rt0.c0 FROM rt0;
SELECT DISTINCT * FROM rt0, t1;
SELECT DISTINCT * FROM rt0, t1 WHERE (((((+ (rt0.c3))))!=((((((rt0.c3)OR(rt0.c3)))OR(rt0.c1)))))) UNION SELECT DISTINCT * FROM rt0, t1 WHERE ((NOT (((((+ (rt0.c3))))<>((((((rt0.c3)OR(rt0.c3)))OR(rt0.c1)))))))) UNION SELECT DISTINCT * FROM rt0, t1 WHERE (((((((+ (rt0.c3))))<>((((((rt0.c3)OR(rt0.c3)))OR(rt0.c1)))))) ISNULL));
SELECT DISTINCT * FROM rt0, t1;
SELECT rt0.c3, rt0.c2, rt0.c0 FROM rt0, t1 GROUP BY rt0.c3, rt0.c2, rt0.c0;
SELECT rt0.c3, rt0.c2, rt0.c0 FROM rt0, t1 WHERE (IFNULL((rt0.c1 IN ()), ('l' IN ()))) GROUP BY rt0.c3, rt0.c2, rt0.c0 UNION SELECT rt0.c3, rt0.c2, rt0.c0 FROM rt0, t1 WHERE ((NOT (IFNULL((rt0.c1 IN ()), ('l' IN ()))))) GROUP BY rt0.c3, rt0.c2, rt0.c0 UNION SELECT rt0.c3, rt0.c2, rt0.c0 FROM rt0, t1 WHERE (((IFNULL((rt0.c1 IN ()), ('l' IN ()))) ISNULL)) GROUP BY rt0.c3, rt0.c2, rt0.c0;
SELECT rt0.c3, rt0.c2, rt0.c0 FROM rt0, t1 GROUP BY rt0.c3, rt0.c2, rt0.c0;
SELECT ALL t1.c1, rt0.c3, rt0.c0 FROM rt0 NATURAL JOIN t1 GROUP BY t1.c1, rt0.c3, rt0.c0;
SELECT t1.c1, rt0.c3, rt0.c0 FROM rt0 NATURAL JOIN t1 GROUP BY t1.c1, rt0.c3, rt0.c0 HAVING ((MIN(GROUP_CONCAT(COUNT(AVG(MAX(rt0.c2))))))%(MIN(MIN(COUNT(rt0.c3))) COLLATE NOCASE)) UNION ALL SELECT t1.c1, rt0.c3, rt0.c0 FROM rt0 NATURAL JOIN t1 GROUP BY t1.c1, rt0.c3, rt0.c0 HAVING (NOT (((MIN(GROUP_CONCAT(COUNT(AVG(MAX(rt0.c2))))))%(MIN(MIN(COUNT(rt0.c3))) COLLATE NOCASE)))) UNION ALL SELECT t1.c1, rt0.c3, rt0.c0 FROM rt0 NATURAL JOIN t1 GROUP BY t1.c1, rt0.c3, rt0.c0 HAVING ((((MIN(GROUP_CONCAT(COUNT(AVG(MAX(rt0.c2))))))%(MIN(MIN(COUNT(rt0.c3))) COLLATE NOCASE))) ISNULL);
SELECT t1.c1 FROM t1;
SELECT t1.c1 FROM t1 WHERE ((~ (UNICODE(t1.c1)))) UNION ALL SELECT t1.c1 FROM t1 WHERE ((NOT ((~ (UNICODE(t1.c1)))))) UNION ALL SELECT ALL t1.c1 FROM t1 WHERE ((((~ (UNICODE(t1.c1)))) ISNULL));
SELECT t1.c1 FROM t1;
SELECT DISTINCT rt0.c1, rt0.c3, rt0.c2, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c3, rt0.c2, rt0.c0 FROM rt0 WHERE (((TYPEOF(rt0.c3)) NOT BETWEEN (((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2))) AND (json_quote(rt0.c0)))) UNION SELECT DISTINCT rt0.c1, rt0.c3, rt0.c2, rt0.c0 FROM rt0 WHERE ((NOT (((TYPEOF(rt0.c3)) NOT BETWEEN (((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2))) AND (json_quote(rt0.c0)))))) UNION SELECT DISTINCT rt0.c1, rt0.c3, rt0.c2, rt0.c0 FROM rt0 WHERE (((((TYPEOF(rt0.c3)) NOT BETWEEN (((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2))) AND (json_quote(rt0.c0)))) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c3, rt0.c2, rt0.c0 FROM rt0;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 WHERE (((((CASE rt0.c3  WHEN rt0.c3 THEN rt0.c2 END)OR((((rt0.c3, rt0.c0, rt0.c3, NULL, rt0.c2)) BETWEEN ((rt0.c0, rt0.c2, rt0.c0, rt0.c3, rt0.c0)) AND ((rt0.c0, rt0.c3, rt0.c3, rt0.c3, rt0.c0))))))AND(((rt0.c0)<=(rt0.c2))))) GROUP BY rt0.c1, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (((((CASE rt0.c3  WHEN rt0.c3 THEN rt0.c2 END)OR((((rt0.c3, rt0.c0, rt0.c3, NULL, rt0.c2)) BETWEEN ((rt0.c0, rt0.c2, rt0.c0, rt0.c3, rt0.c0)) AND ((rt0.c0, rt0.c3, rt0.c3, rt0.c3, rt0.c0))))))AND(((rt0.c0)<=(rt0.c2))))))) GROUP BY rt0.c1, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c2 FROM rt0 WHERE (((((((CASE rt0.c3  WHEN rt0.c3 THEN rt0.c2 END)OR((((rt0.c3, rt0.c0, rt0.c3, NULL, rt0.c2)) BETWEEN ((rt0.c0, rt0.c2, rt0.c0, rt0.c3, rt0.c0)) AND ((rt0.c0, rt0.c3, rt0.c3, rt0.c3, rt0.c0))))))AND(((rt0.c0)<=(rt0.c2))))) ISNULL)) GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c3, rt0.c1, t1.c1, rt0.c2, rt0.c0 FROM rt0, t1 NOT INDEXED GROUP BY rt0.c3, rt0.c1, t1.c1, rt0.c2, rt0.c0;
SELECT rt0.c3, rt0.c1, t1.c1, rt0.c2, rt0.c0 FROM rt0, t1 GROUP BY rt0.c3, rt0.c1, t1.c1, rt0.c2, rt0.c0 HAVING x'' UNION ALL SELECT ALL rt0.c3, rt0.c1, t1.c1, rt0.c2, rt0.c0 FROM rt0, t1 GROUP BY rt0.c3, rt0.c1, t1.c1, rt0.c2, rt0.c0 HAVING (NOT (x'')) UNION ALL SELECT rt0.c3, rt0.c1, t1.c1, rt0.c2, rt0.c0 FROM rt0, t1 GROUP BY rt0.c3, rt0.c1, t1.c1, rt0.c2, rt0.c0 HAVING ((x'') ISNULL);
SELECT ALL rt0.c3, rt0.c1, t1.c1, rt0.c2, rt0.c0 FROM rt0, t1 NOT INDEXED GROUP BY rt0.c3, rt0.c1, t1.c1, rt0.c2, rt0.c0;
SELECT rt0.c3, rt0.c1, t1.c1, rt0.c2, rt0.c0 FROM rt0, t1 GROUP BY rt0.c3, rt0.c1, t1.c1, rt0.c2, rt0.c0 HAVING x'' UNION ALL SELECT ALL rt0.c3, rt0.c1, t1.c1, rt0.c2, rt0.c0 FROM rt0, t1 GROUP BY rt0.c3, rt0.c1, t1.c1, rt0.c2, rt0.c0 HAVING (NOT (x'')) UNION ALL SELECT rt0.c3, rt0.c1, t1.c1, rt0.c2, rt0.c0 FROM rt0, t1 GROUP BY rt0.c3, rt0.c1, t1.c1, rt0.c2, rt0.c0 HAVING ((x'') ISNULL);
SELECT ALL rt0.c3, rt0.c1, t1.c1, rt0.c2, rt0.c0 FROM rt0, t1 NOT INDEXED GROUP BY rt0.c3, rt0.c1, t1.c1, rt0.c2, rt0.c0;
SELECT * FROM t1, rt0;
SELECT ALL * FROM t1, rt0 WHERE (CAST(rt0.c3 AS NUMERIC) COLLATE NOCASE) UNION ALL SELECT * FROM t1, rt0 WHERE ((NOT (CAST(rt0.c3 AS NUMERIC) COLLATE NOCASE))) UNION ALL SELECT ALL * FROM t1, rt0 WHERE (((CAST(rt0.c3 AS NUMERIC) COLLATE NOCASE) ISNULL));
SELECT * FROM t1, rt0;
SELECT DISTINCT rt0.c2, rt0.c3, rt0.c1 FROM rt0, t1;
SELECT DISTINCT rt0.c2, rt0.c3, rt0.c1 FROM rt0, t1 WHERE (((((rt0.c3) IS FALSE)) BETWEEN (((((rt0.c3)AND(t1.c1)))AND(rt0.c2))) AND ('-1205956499'))) UNION SELECT DISTINCT rt0.c2, rt0.c3, rt0.c1 FROM rt0, t1 WHERE ((NOT (((((rt0.c3) IS FALSE)) BETWEEN (((((rt0.c3)AND(t1.c1)))AND(rt0.c2))) AND ('-1205956499'))))) UNION SELECT DISTINCT rt0.c2, rt0.c3, rt0.c1 FROM rt0, t1 WHERE (((((((rt0.c3) IS FALSE)) BETWEEN (((((rt0.c3)AND(t1.c1)))AND(rt0.c2))) AND ('-1205956499'))) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c3, rt0.c1 FROM rt0, t1;
SELECT rt0.c0 FROM rt0 RIGHT OUTER JOIN t1 ON ((rt0.c2)=(rt0.c1)) COLLATE BINARY GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 RIGHT OUTER JOIN t1 ON ((rt0.c2)==(rt0.c1)) COLLATE BINARY WHERE (NULL) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM rt0 RIGHT OUTER JOIN t1 ON ((rt0.c2)=(rt0.c1)) COLLATE BINARY WHERE ((NOT (NULL))) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM rt0 RIGHT OUTER JOIN t1 ON ((rt0.c2)=(rt0.c1)) COLLATE BINARY WHERE (((NULL) ISNULL)) GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 RIGHT OUTER JOIN t1 ON ((rt0.c2)=(rt0.c1)) COLLATE BINARY GROUP BY rt0.c0;
SELECT ALL rt0.c2, t1.c1, rt0.c3, rt0.c0, rt0.c1 FROM t1, rt0 GROUP BY rt0.c2, t1.c1, rt0.c3, rt0.c0, rt0.c1;
SELECT rt0.c2, t1.c1, rt0.c3, rt0.c0, rt0.c1 FROM t1, rt0 GROUP BY rt0.c2, t1.c1, rt0.c3, rt0.c0, rt0.c1 HAVING CASE COUNT(TOTAL('-1369421597'))  WHEN MIN(MAX(rt0.c3)) THEN COUNT(t1.c1) END UNION ALL SELECT ALL rt0.c2, t1.c1, rt0.c3, rt0.c0, rt0.c1 FROM t1, rt0 GROUP BY rt0.c2, t1.c1, rt0.c3, rt0.c0, rt0.c1 HAVING (NOT (CASE COUNT(TOTAL('-1369421597'))  WHEN MIN(MAX(rt0.c3)) THEN COUNT(t1.c1) END)) UNION ALL SELECT ALL rt0.c2, t1.c1, rt0.c3, rt0.c0, rt0.c1 FROM t1, rt0 GROUP BY rt0.c2, t1.c1, rt0.c3, rt0.c0, rt0.c1 HAVING ((CASE COUNT(TOTAL('-1369421597'))  WHEN MIN(MAX(rt0.c3)) THEN COUNT(t1.c1) END) ISNULL);
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE ((((((rt0.c3))>((rt0.c3)))) IS FALSE)) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT ((((((rt0.c3))>((rt0.c3)))) IS FALSE)))) UNION ALL SELECT * FROM rt0 WHERE ((((((((rt0.c3))>((rt0.c3)))) IS FALSE)) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT rt0.c0 FROM rt0, t1;
SELECT DISTINCT rt0.c0 FROM rt0, t1 WHERE (((NULLIF(rt0.c1, rt0.c0))AND(((-3.2654149E7) NOT BETWEEN (rt0.c0) AND (t1.c1))))) UNION SELECT DISTINCT rt0.c0 FROM rt0, t1 WHERE ((NOT (((NULLIF(rt0.c1, rt0.c0))AND(((-3.2654149E7) NOT BETWEEN (rt0.c0) AND (t1.c1))))))) UNION SELECT DISTINCT rt0.c0 FROM rt0, t1 WHERE (((((NULLIF(rt0.c1, rt0.c0))AND(((-3.2654149E7) NOT BETWEEN (rt0.c0) AND (t1.c1))))) ISNULL));
SELECT DISTINCT rt0.c0 FROM rt0, t1;
SELECT ALL t1.c1 FROM t1 GROUP BY t1.c1;
SELECT ALL t1.c1 FROM t1 WHERE (MIN(CASE WHEN t1.c1 THEN t1.c1 ELSE t1.c1 END, ((t1.c1)&(t1.c1)))) GROUP BY t1.c1 UNION SELECT ALL t1.c1 FROM t1 WHERE ((NOT (MIN(CASE WHEN t1.c1 THEN t1.c1 ELSE t1.c1 END, ((t1.c1)&(t1.c1)))))) GROUP BY t1.c1 UNION SELECT t1.c1 FROM t1 WHERE (((MIN(CASE WHEN t1.c1 THEN t1.c1 ELSE t1.c1 END, ((t1.c1)&(t1.c1)))) ISNULL)) GROUP BY t1.c1;
SELECT ALL t1.c1 FROM t1 GROUP BY t1.c1;
SELECT rt0.c3, rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c3, rt0.c2, rt0.c1, rt0.c0;
SELECT ALL rt0.c3, rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c3, rt0.c2, rt0.c1, rt0.c0 HAVING MIN(LIKELY(rt0.c2)) UNION ALL SELECT rt0.c3, rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c3, rt0.c2, rt0.c1, rt0.c0 HAVING (NOT (MIN(LIKELY(rt0.c2)))) UNION ALL SELECT rt0.c3, rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c3, rt0.c2, rt0.c1, rt0.c0 HAVING ((MIN(LIKELY(rt0.c2))) ISNULL);
SELECT rt0.c3, rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c3, rt0.c2, rt0.c1, rt0.c0;
SELECT ALL rt0.c3, rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c3, rt0.c2, rt0.c1, rt0.c0 HAVING MIN(LIKELY(rt0.c2)) UNION ALL SELECT rt0.c3, rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c3, rt0.c2, rt0.c1, rt0.c0 HAVING (NOT (MIN(LIKELY(rt0.c2)))) UNION ALL SELECT rt0.c3, rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c3, rt0.c2, rt0.c1, rt0.c0 HAVING ((MIN(LIKELY(rt0.c2))) ISNULL);
SELECT rt0.c3, rt0.c2, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c3, rt0.c2, rt0.c1, rt0.c0;
SELECT * FROM t1;
SELECT ALL * FROM t1 WHERE ((((((t1.c1)>>(t1.c1))))==((CASE WHEN t1.c1 THEN t1.c1 ELSE t1.c1 END)))) UNION ALL SELECT * FROM t1 WHERE ((NOT ((((((t1.c1)>>(t1.c1))))=((CASE WHEN t1.c1 THEN t1.c1 ELSE t1.c1 END)))))) UNION ALL SELECT * FROM t1 WHERE ((((((((t1.c1)>>(t1.c1))))=((CASE WHEN t1.c1 THEN t1.c1 ELSE t1.c1 END)))) ISNULL));
SELECT * FROM t1;
SELECT DISTINCT t1.c1 FROM t1;
SELECT DISTINCT t1.c1 FROM t1 WHERE (('-1110552312' IN (t1.c1 COLLATE RTRIM))) UNION SELECT DISTINCT t1.c1 FROM t1 WHERE ((NOT (('-1110552312' IN (t1.c1 COLLATE RTRIM))))) UNION SELECT DISTINCT t1.c1 FROM t1 WHERE (((('-1110552312' IN (t1.c1 COLLATE RTRIM))) ISNULL));
SELECT DISTINCT t1.c1 FROM t1;
SELECT rt0.c3, rt0.c1 FROM rt0 GROUP BY rt0.c3, rt0.c1;
SELECT ALL rt0.c3, rt0.c1 FROM rt0 WHERE (rt0.c1) GROUP BY rt0.c3, rt0.c1 UNION SELECT rt0.c3, rt0.c1 FROM rt0 WHERE ((NOT (rt0.c1))) GROUP BY rt0.c3, rt0.c1 UNION SELECT rt0.c3, rt0.c1 FROM rt0 WHERE (((rt0.c1) ISNULL)) GROUP BY rt0.c3, rt0.c1;
SELECT rt0.c3, rt0.c1 FROM rt0 GROUP BY rt0.c3, rt0.c1;
SELECT rt0.c3 FROM rt0 GROUP BY rt0.c3;
SELECT rt0.c3 FROM rt0 GROUP BY rt0.c3 HAVING COUNT(CASE WHEN TOTAL(rt0.c1) THEN rt0.c2 WHEN SUM(rt0.c1) THEN COUNT(*) WHEN rt0.c2 THEN MIN(rt0.c1) END) UNION ALL SELECT rt0.c3 FROM rt0 GROUP BY rt0.c3 HAVING (NOT (COUNT(CASE WHEN TOTAL(rt0.c1) THEN rt0.c2 WHEN SUM(rt0.c1) THEN COUNT(*) WHEN rt0.c2 THEN MIN(rt0.c1) END))) UNION ALL SELECT ALL rt0.c3 FROM rt0 GROUP BY rt0.c3 HAVING ((COUNT(CASE WHEN TOTAL(rt0.c1) THEN rt0.c2 WHEN SUM(rt0.c1) THEN COUNT(*) WHEN rt0.c2 THEN MIN(rt0.c1) END)) ISNULL);
SELECT * FROM t1;
SELECT * FROM t1 WHERE (((t1.c1 COLLATE BINARY)||((+ (t1.c1))))) UNION ALL SELECT * FROM t1 WHERE ((NOT (((t1.c1 COLLATE BINARY)||((+ (t1.c1))))))) UNION ALL SELECT ALL * FROM t1 NOT INDEXED WHERE (((((t1.c1 COLLATE BINARY)||((+ (t1.c1))))) ISNULL));
SELECT * FROM t1;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((((((0xffffffffc80d288a)) NOT BETWEEN ((x'')) AND ((rt0.c1))))<=((rt0.c1 IN ())))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((((((0Xffffffffc80d288a)) NOT BETWEEN ((x'')) AND ((rt0.c1))))<=((rt0.c1 IN ())))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((((((0xffffffffc80d288a)) NOT BETWEEN ((x'')) AND ((rt0.c1))))<=((rt0.c1 IN ())))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c3, rt0.c1 FROM rt0 GROUP BY rt0.c3, rt0.c1;
SELECT ALL rt0.c3, rt0.c1 FROM rt0 WHERE (((((UPPER(rt0.c0))OR(((rt0.c2) IS TRUE))))OR(((rt0.c1) NOTNULL)))) GROUP BY rt0.c3, rt0.c1 UNION SELECT ALL rt0.c3, rt0.c1 FROM rt0 WHERE ((NOT (((((UPPER(rt0.c0))OR(((rt0.c2) IS TRUE))))OR(((rt0.c1) NOTNULL)))))) GROUP BY rt0.c3, rt0.c1 UNION SELECT rt0.c3, rt0.c1 FROM rt0 WHERE (((((((UPPER(rt0.c0))OR(((rt0.c2) IS TRUE))))OR(((rt0.c1) NOTNULL)))) ISNULL)) GROUP BY rt0.c3, rt0.c1;
SELECT ALL rt0.c3, rt0.c1 FROM rt0 GROUP BY rt0.c3, rt0.c1;
SELECT ALL rt0.c3, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c3, rt0.c1, rt0.c0;
SELECT rt0.c3, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c3, rt0.c1, rt0.c0 HAVING json_quote(GROUP_CONCAT(rt0.c0)) UNION ALL SELECT rt0.c3, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c3, rt0.c1, rt0.c0 HAVING (NOT (json_quote(GROUP_CONCAT(rt0.c0)))) UNION ALL SELECT rt0.c3, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c3, rt0.c1, rt0.c0 HAVING ((json_quote(GROUP_CONCAT(rt0.c0))) ISNULL);
SELECT ALL rt0.c3, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c3, rt0.c1, rt0.c0;
SELECT rt0.c3, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c3, rt0.c1, rt0.c0 HAVING json_quote(GROUP_CONCAT(rt0.c0)) UNION ALL SELECT rt0.c3, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c3, rt0.c1, rt0.c0 HAVING (NOT (json_quote(GROUP_CONCAT(rt0.c0)))) UNION ALL SELECT rt0.c3, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c3, rt0.c1, rt0.c0 HAVING ((json_quote(GROUP_CONCAT(rt0.c0))) ISNULL);
SELECT ALL rt0.c3, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c3, rt0.c1, rt0.c0;
SELECT ALL * FROM rt0, t1;
SELECT ALL * FROM rt0, t1 WHERE (json_object(rt0.c2, rt0.c3) COLLATE BINARY) UNION ALL SELECT * FROM rt0, t1 WHERE ((NOT (json_object(rt0.c2, rt0.c3) COLLATE BINARY))) UNION ALL SELECT * FROM rt0, t1 WHERE (((json_object(rt0.c2, rt0.c3) COLLATE BINARY) ISNULL));
SELECT DISTINCT * FROM t1, rt0;
SELECT DISTINCT * FROM t1, rt0 WHERE ((- (0Xffffffff8fa5df97))) UNION SELECT DISTINCT * FROM t1, rt0 WHERE ((NOT ((- (0Xffffffff8fa5df97))))) UNION SELECT DISTINCT * FROM t1, rt0 WHERE ((((- (0Xffffffff8fa5df97))) ISNULL));
SELECT DISTINCT * FROM t1, rt0;
SELECT rt0.c0, rt0.c2, rt0.c3 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c3;
SELECT rt0.c0, rt0.c2, rt0.c3 FROM rt0 WHERE (((rt0.c3) NOT NULL)) GROUP BY rt0.c0, rt0.c2, rt0.c3 UNION SELECT ALL rt0.c0, rt0.c2, rt0.c3 FROM rt0 WHERE ((NOT (((rt0.c3) NOT NULL)))) GROUP BY rt0.c0, rt0.c2, rt0.c3 UNION SELECT ALL rt0.c0, rt0.c2, rt0.c3 FROM rt0 WHERE (((((rt0.c3) NOT NULL)) ISNULL)) GROUP BY rt0.c0, rt0.c2, rt0.c3;
SELECT rt0.c0, rt0.c2, rt0.c3 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c3;
SELECT ALL rt0.c1, rt0.c3, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c3, rt0.c0;
SELECT ALL rt0.c1, rt0.c3, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c3, rt0.c0 HAVING MIN(MIN(SUM(TOTAL(GROUP_CONCAT(COUNT(rt0.c3)))))) UNION ALL SELECT rt0.c1, rt0.c3, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c3, rt0.c0 HAVING (NOT (MIN(MIN(SUM(TOTAL(GROUP_CONCAT(COUNT(rt0.c3)))))))) UNION ALL SELECT ALL rt0.c1, rt0.c3, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c3, rt0.c0 HAVING ((MIN(MIN(SUM(TOTAL(GROUP_CONCAT(COUNT(rt0.c3))))))) ISNULL);
SELECT ALL * FROM rt0, t1;
SELECT ALL * FROM rt0, t1 WHERE (((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c3)) COLLATE NOCASE) UNION ALL SELECT * FROM rt0, t1 WHERE ((NOT (((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c3)) COLLATE NOCASE))) UNION ALL SELECT * FROM rt0, t1 WHERE (((((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c3)) COLLATE NOCASE) ISNULL));
SELECT ALL * FROM rt0, t1;
SELECT DISTINCT * FROM rt0 RIGHT OUTER JOIN t1 ON ((((((rt0.c3)OR(0.6735113862297738)))AND(rt0.c3)))<<(CASE rt0.c2  WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END));
SELECT DISTINCT * FROM rt0 RIGHT OUTER JOIN t1 ON ((((((rt0.c3)OR(0.6735113862297738)))AND(rt0.c3)))<<(CASE rt0.c2  WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END)) WHERE (((((-1269078222 IN ())))<>((CASE rt0.c1  WHEN rt0.c1 THEN rt0.c3 END)))) UNION SELECT DISTINCT * FROM rt0 RIGHT OUTER JOIN t1 ON ((((((rt0.c3)OR(0.6735113862297738)))AND(rt0.c3)))<<(CASE rt0.c2  WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END)) WHERE ((NOT (((((-1269078222 IN ())))<>((CASE rt0.c1  WHEN rt0.c1 THEN rt0.c3 END)))))) UNION SELECT DISTINCT * FROM rt0 RIGHT OUTER JOIN t1 ON ((((((rt0.c3)OR(0.6735113862297738)))AND(rt0.c3)))<<(CASE rt0.c2  WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END)) WHERE (((((((-1269078222 IN ())))!=((CASE rt0.c1  WHEN rt0.c1 THEN rt0.c3 END)))) ISNULL));
SELECT DISTINCT * FROM rt0 RIGHT OUTER JOIN t1 ON ((((((rt0.c3)OR(0.6735113862297738)))AND(rt0.c3)))<<(CASE rt0.c2  WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END));
SELECT rt0.c3, rt0.c0 FROM t1, rt0 GROUP BY rt0.c3, rt0.c0;
SELECT rt0.c3, rt0.c0 FROM t1, rt0 WHERE ((((CASE WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c1 END))<=((((t1.c1)LIKE(rt0.c0)))))) GROUP BY rt0.c3, rt0.c0 UNION SELECT ALL rt0.c3, rt0.c0 FROM t1, rt0 WHERE ((NOT ((((CASE WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c1 END))<=((((t1.c1)LIKE(rt0.c0)))))))) GROUP BY rt0.c3, rt0.c0 UNION SELECT rt0.c3, rt0.c0 FROM t1, rt0 WHERE ((((((CASE WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c1 END))<=((((t1.c1)LIKE(rt0.c0)))))) ISNULL)) GROUP BY rt0.c3, rt0.c0;
SELECT rt0.c3, rt0.c0 FROM t1, rt0 GROUP BY rt0.c3, rt0.c0;
SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING TOTAL(TOTAL(AVG(rt0.c3))) COLLATE BINARY UNION ALL SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING (NOT (TOTAL(TOTAL(AVG(rt0.c3))) COLLATE BINARY)) UNION ALL SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING ((TOTAL(TOTAL(AVG(rt0.c3))) COLLATE BINARY) ISNULL);
SELECT ALL t1.c1, rt0.c2, rt0.c1, rt0.c0 FROM t1 CROSS JOIN rt0 ON ((((rt0.c2)GLOB(rt0.c2)))<<(HEX(DISTINCT t1.c1)));
SELECT t1.c1, rt0.c2, rt0.c1, rt0.c0 FROM t1 CROSS JOIN rt0 ON ((((rt0.c2)GLOB(rt0.c2)))<<(HEX(DISTINCT t1.c1))) WHERE (CAST(((rt0.c2)*(rt0.c3)) AS BLOB)) ORDER BY LIKELY((rt0.c1 IN (0.20548147102940773)));
SELECT ALL t1.c1, rt0.c2, rt0.c1, rt0.c0 FROM t1 CROSS JOIN rt0 ON ((((rt0.c2)GLOB(rt0.c2)))<<(HEX(DISTINCT t1.c1))) WHERE ((NOT (CAST(((rt0.c2)*(rt0.c3)) AS BLOB)))) ORDER BY LIKELY((rt0.c1 IN (0.20548147102940773)));
SELECT ALL t1.c1, rt0.c2, rt0.c1, rt0.c0 FROM t1 CROSS JOIN rt0 ON ((((rt0.c2)GLOB(rt0.c2)))<<(HEX(DISTINCT t1.c1))) WHERE (((CAST(((rt0.c2)*(rt0.c3)) AS BLOB)) ISNULL)) ORDER BY LIKELY((rt0.c1 IN (0.20548147102940773)));
SELECT ALL t1.c1, rt0.c2, rt0.c1, rt0.c0 FROM t1 CROSS JOIN rt0 ON ((((rt0.c2)GLOB(rt0.c2)))<<(HEX(DISTINCT t1.c1)));
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((((((rt0.c3, rt0.c0, rt0.c0))<>((0.40351348513094, '#Pg͠#xjC', rt0.c1))))||((((0.3294049730631817))>((rt0.c3)))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((((((rt0.c3, rt0.c0, rt0.c0))!=((0.40351348513094, '#Pg͠#xjC', rt0.c1))))||((((0.3294049730631817))>((rt0.c3)))))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((((((rt0.c3, rt0.c0, rt0.c0))<>((0.40351348513094, '#Pg͠#xjC', rt0.c1))))||((((0.3294049730631817))>((rt0.c3)))))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c2, rt0.c1, t1.c1, rt0.c3, rt0.c0 FROM rt0, t1 GROUP BY rt0.c2, rt0.c1, t1.c1, rt0.c3, rt0.c0;
SELECT rt0.c2, rt0.c1, t1.c1, rt0.c3, rt0.c0 FROM rt0, t1 WHERE (UNLIKELY(ABS(rt0.c0))) GROUP BY rt0.c2, rt0.c1, t1.c1, rt0.c3, rt0.c0 UNION SELECT rt0.c2, rt0.c1, t1.c1, rt0.c3, rt0.c0 FROM rt0, t1 WHERE ((NOT (UNLIKELY(ABS(rt0.c0))))) GROUP BY rt0.c2, rt0.c1, t1.c1, rt0.c3, rt0.c0 UNION SELECT rt0.c2, rt0.c1, t1.c1, rt0.c3, rt0.c0 FROM rt0, t1 WHERE (((UNLIKELY(ABS(rt0.c0))) ISNULL)) GROUP BY rt0.c2, rt0.c1, t1.c1, rt0.c3, rt0.c0;
SELECT rt0.c2, rt0.c1, t1.c1, rt0.c3, rt0.c0 FROM rt0, t1 GROUP BY rt0.c2, rt0.c1, t1.c1, rt0.c3, rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0, t1 GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0, t1 GROUP BY rt0.c2, rt0.c0 HAVING ((((rt0.c3) BETWEEN (MAX(-2122909040)) AND (t1.c1))) NOT NULL) UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM rt0, t1 GROUP BY rt0.c2, rt0.c0 HAVING (NOT (((((rt0.c3) BETWEEN (MAX(-2122909040)) AND (t1.c1))) NOT NULL))) UNION ALL SELECT rt0.c2, rt0.c0 FROM rt0, t1 GROUP BY rt0.c2, rt0.c0 HAVING ((((((rt0.c3) BETWEEN (MAX(-2122909040)) AND (t1.c1))) NOT NULL)) ISNULL);
SELECT ALL rt0.c2, rt0.c0 FROM rt0, t1 GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0, t1 GROUP BY rt0.c2, rt0.c0 HAVING ((((rt0.c3) BETWEEN (MAX(-2122909040)) AND (t1.c1))) NOT NULL) UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM rt0, t1 GROUP BY rt0.c2, rt0.c0 HAVING (NOT (((((rt0.c3) BETWEEN (MAX(-2122909040)) AND (t1.c1))) NOT NULL))) UNION ALL SELECT rt0.c2, rt0.c0 FROM rt0, t1 GROUP BY rt0.c2, rt0.c0 HAVING ((((((rt0.c3) BETWEEN (MAX(-2122909040)) AND (t1.c1))) NOT NULL)) ISNULL);
SELECT ALL rt0.c2, rt0.c0 FROM rt0, t1 GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c1, rt0.c2, rt0.c3, rt0.c0 FROM rt0;
SELECT rt0.c1, rt0.c2, rt0.c3, rt0.c0 FROM rt0 WHERE (RTRIM(rt0.c3)) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c3, rt0.c0 FROM rt0 NOT INDEXED WHERE ((NOT (RTRIM(rt0.c3)))) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c3, rt0.c0 FROM rt0 WHERE (((RTRIM(rt0.c3)) ISNULL));
SELECT rt0.c1, rt0.c2, rt0.c3, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c3 FROM rt0;
SELECT DISTINCT rt0.c1, rt0.c3 FROM rt0 WHERE (CASE WHEN '' THEN CASE rt0.c1  WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c1 END ELSE ((rt0.c2)<=(rt0.c3)) END) UNION SELECT DISTINCT rt0.c1, rt0.c3 FROM rt0 WHERE ((NOT (CASE WHEN '' THEN CASE rt0.c1  WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c1 END ELSE ((rt0.c2)<=(rt0.c3)) END))) UNION SELECT DISTINCT rt0.c1, rt0.c3 FROM rt0 WHERE (((CASE WHEN '' THEN CASE rt0.c1  WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c1 END ELSE ((rt0.c2)<=(rt0.c3)) END) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c3 FROM rt0;
SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 NOT INDEXED WHERE (((((((-1634006016)<=(rt0.c0)))OR(((((rt0.c3)OR(rt0.c0)))OR(rt0.c2)))))AND(CAST(rt0.c1 AS NUMERIC)))) GROUP BY rt0.c1, rt0.c0 UNION SELECT rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (((((((-1634006016)<=(rt0.c0)))OR(((((rt0.c3)OR(rt0.c0)))OR(rt0.c2)))))AND(CAST(rt0.c1 AS NUMERIC)))))) GROUP BY rt0.c1, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c0 FROM rt0 WHERE (((((((((-1634006016)<=(rt0.c0)))OR(((((rt0.c3)OR(rt0.c0)))OR(rt0.c2)))))AND(CAST(rt0.c1 AS NUMERIC)))) ISNULL)) GROUP BY rt0.c1, rt0.c0;
SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((MAX(rt0.c0))||(GROUP_CONCAT(SUM(rt0.c1)))) UNION ALL SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING (NOT (((MAX(rt0.c0))||(GROUP_CONCAT(SUM(rt0.c1)))))) UNION ALL SELECT rt0.c2 FROM rt0 GROUP BY rt0.c2 HAVING ((((MAX(rt0.c0))||(GROUP_CONCAT(SUM(rt0.c1))))) ISNULL);
SELECT ALL * FROM rt0;
SELECT * FROM rt0 WHERE (((((rt0.c3) BETWEEN (rt0.c0) AND (rt0.c2))) BETWEEN (rt0.c2 COLLATE NOCASE) AND (((rt0.c3) BETWEEN (rt0.c0) AND (-986361065))))) UNION ALL SELECT * FROM rt0 WHERE ((NOT (((((rt0.c3) BETWEEN (rt0.c0) AND (rt0.c2))) BETWEEN (rt0.c2 COLLATE NOCASE) AND (((rt0.c3) BETWEEN (rt0.c0) AND (-986361065))))))) UNION ALL SELECT ALL * FROM rt0 WHERE (((((((rt0.c3) BETWEEN (rt0.c0) AND (rt0.c2))) BETWEEN (rt0.c2 COLLATE NOCASE) AND (((rt0.c3) BETWEEN (rt0.c0) AND (-986361065))))) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT rt0.c3, t1.c1 FROM t1, rt0;
SELECT DISTINCT rt0.c3, t1.c1 FROM t1, rt0 WHERE (((((rt0.c2)GLOB(rt0.c1)))*((((t1.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0)))))) UNION SELECT DISTINCT rt0.c3, t1.c1 FROM t1, rt0 WHERE ((NOT (((((rt0.c2)GLOB(rt0.c1)))*((((t1.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0)))))))) UNION SELECT DISTINCT rt0.c3, t1.c1 FROM t1, rt0 WHERE (((((((rt0.c2)GLOB(rt0.c1)))*((((t1.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0)))))) ISNULL));
SELECT DISTINCT rt0.c3, t1.c1 FROM t1, rt0;
SELECT rt0.c2, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c3;
SELECT ALL rt0.c2, rt0.c3 FROM rt0 WHERE (TRIM((((rt0.c2))<>((rt0.c0))))) GROUP BY rt0.c2, rt0.c3 UNION SELECT rt0.c2, rt0.c3 FROM rt0 WHERE ((NOT (TRIM((((rt0.c2))!=((rt0.c0))))))) GROUP BY rt0.c2, rt0.c3 UNION SELECT ALL rt0.c2, rt0.c3 FROM rt0 WHERE (((TRIM((((rt0.c2))<>((rt0.c0))))) ISNULL)) GROUP BY rt0.c2, rt0.c3;
SELECT rt0.c2, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c3;
SELECT rt0.c2, rt0.c3 FROM rt0, t1 GROUP BY rt0.c2, rt0.c3;
SELECT rt0.c2, rt0.c3 FROM rt0, t1 GROUP BY rt0.c2, rt0.c3 HAVING ((CAST(t1.c1 AS NUMERIC)) BETWEEN (((((TOTAL(t1.c1))AND(AVG(GROUP_CONCAT(rt0.c2)))))OR(MAX(rt0.c0)))) AND (((SUM(rt0.c1)) NOT BETWEEN (AVG(SUM(MIN(rt0.c2)))) AND (rt0.c2)))) UNION ALL SELECT ALL rt0.c2, rt0.c3 FROM rt0, t1 GROUP BY rt0.c2, rt0.c3 HAVING (NOT (((CAST(t1.c1 AS NUMERIC)) BETWEEN (((((TOTAL(t1.c1))AND(AVG(GROUP_CONCAT(rt0.c2)))))OR(MAX(rt0.c0)))) AND (((SUM(rt0.c1)) NOT BETWEEN (AVG(SUM(MIN(rt0.c2)))) AND (rt0.c2)))))) UNION ALL SELECT rt0.c2, rt0.c3 FROM rt0, t1 GROUP BY rt0.c2, rt0.c3 HAVING ((((CAST(t1.c1 AS NUMERIC)) BETWEEN (((((TOTAL(t1.c1))AND(AVG(GROUP_CONCAT(rt0.c2)))))OR(MAX(rt0.c0)))) AND (((SUM(rt0.c1)) NOT BETWEEN (AVG(SUM(MIN(rt0.c2)))) AND (rt0.c2))))) ISNULL);
SELECT ALL TOTAL((((rt0.c0 IN ())) NOT BETWEEN ((((rt0.c1))>=((t1.c1)))) AND (((rt0.c0)|(rt0.c2))))) FROM rt0, t1;
SELECT t1.c1, rt0.c0, rt0.c1 FROM t1, rt0;
SELECT t1.c1, rt0.c0, rt0.c1 FROM t1, rt0 WHERE (((rt0.c0) NOT BETWEEN (0.16904385109889264) AND (((((((((rt0.c2)OR(rt0.c1)))OR(rt0.c0)))AND(rt0.c3)))OR(rt0.c2))))) UNION ALL SELECT t1.c1, rt0.c0, rt0.c1 FROM t1, rt0 WHERE ((NOT (((rt0.c0) NOT BETWEEN (0.16904385109889264) AND (((((((((rt0.c2)OR(rt0.c1)))OR(rt0.c0)))AND(rt0.c3)))OR(rt0.c2))))))) UNION ALL SELECT ALL t1.c1, rt0.c0, rt0.c1 FROM t1, rt0 WHERE (((((rt0.c0) NOT BETWEEN (0.16904385109889264) AND (((((((((rt0.c2)OR(rt0.c1)))OR(rt0.c0)))AND(rt0.c3)))OR(rt0.c2))))) ISNULL));
SELECT t1.c1, rt0.c0, rt0.c1 FROM t1, rt0;
SELECT DISTINCT t1.c1, rt0.c0 FROM rt0 CROSS JOIN t1 ON (+ ((~ (rt0.c3))));
SELECT DISTINCT t1.c1, rt0.c0 FROM rt0 CROSS JOIN t1 ON (+ ((~ (rt0.c3)))) WHERE ((rt0.c3 IN ()) COLLATE NOCASE) UNION SELECT DISTINCT t1.c1, rt0.c0 FROM rt0 CROSS JOIN t1 ON (+ ((~ (rt0.c3)))) WHERE ((NOT ((rt0.c3 IN ()) COLLATE NOCASE))) UNION SELECT DISTINCT t1.c1, rt0.c0 FROM rt0 CROSS JOIN t1 ON (+ ((~ (rt0.c3)))) WHERE ((((rt0.c3 IN ()) COLLATE NOCASE) ISNULL));
SELECT DISTINCT t1.c1, rt0.c0 FROM rt0 CROSS JOIN t1 ON (+ ((~ (rt0.c3))));
SELECT rt0.c0, rt0.c1, rt0.c2, rt0.c3, t1.c1 FROM rt0 FULL OUTER JOIN t1 ON '-1583240554' GROUP BY rt0.c0, rt0.c1, rt0.c2, rt0.c3, t1.c1;
SELECT rt0.c0, rt0.c1, rt0.c2, rt0.c3, t1.c1 FROM rt0 FULL OUTER JOIN t1 ON '-1583240554' WHERE (0.8478664775487095) GROUP BY rt0.c0, rt0.c1, rt0.c2, rt0.c3, t1.c1 UNION SELECT ALL rt0.c0, rt0.c1, rt0.c2, rt0.c3, t1.c1 FROM rt0 FULL OUTER JOIN t1 ON '-1583240554' WHERE ((NOT (0.8478664775487095))) GROUP BY rt0.c0, rt0.c1, rt0.c2, rt0.c3, t1.c1 UNION SELECT rt0.c0, rt0.c1, rt0.c2, rt0.c3, t1.c1 FROM rt0 FULL OUTER JOIN t1 ON '-1583240554' WHERE (((0.8478664775487095) ISNULL)) GROUP BY rt0.c0, rt0.c1, rt0.c2, rt0.c3, t1.c1;
SELECT rt0.c0, rt0.c1, rt0.c2, rt0.c3, t1.c1 FROM rt0 FULL OUTER JOIN t1 ON '-1583240554' GROUP BY rt0.c0, rt0.c1, rt0.c2, rt0.c3, t1.c1;
SELECT ALL rt0.c2, rt0.c0 FROM rt0, t1 GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM rt0, t1 GROUP BY rt0.c2, rt0.c0 HAVING rt0.c0 UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM rt0, t1 GROUP BY rt0.c2, rt0.c0 HAVING (NOT (rt0.c0)) UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM rt0, t1 GROUP BY rt0.c2, rt0.c0 HAVING ((rt0.c0) ISNULL);
SELECT ALL rt0.c2, rt0.c0 FROM rt0, t1 GROUP BY rt0.c2, rt0.c0;
SELECT rt0.c2, rt0.c0 FROM rt0, t1 GROUP BY rt0.c2, rt0.c0 HAVING rt0.c0 UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM rt0, t1 GROUP BY rt0.c2, rt0.c0 HAVING (NOT (rt0.c0)) UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM rt0, t1 GROUP BY rt0.c2, rt0.c0 HAVING ((rt0.c0) ISNULL);
SELECT ALL rt0.c2, rt0.c0 FROM rt0, t1 GROUP BY rt0.c2, rt0.c0;
SELECT * FROM t1, rt0;
SELECT * FROM t1, rt0 WHERE (LIKELY(CASE rt0.c2  WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c2 END)) UNION ALL SELECT * FROM t1, rt0 WHERE ((NOT (LIKELY(CASE rt0.c2  WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c2 END)))) UNION ALL SELECT * FROM t1, rt0 WHERE (((LIKELY(CASE rt0.c2  WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c2 END)) ISNULL));
SELECT * FROM t1, rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((('') NOT BETWEEN ((rt0.c1 IN ())) AND ((((rt0.c0))>((rt0.c0)))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((('') NOT BETWEEN ((rt0.c1 IN ())) AND ((((rt0.c0))>((rt0.c0)))))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((('') NOT BETWEEN ((rt0.c1 IN ())) AND ((((rt0.c0))>((rt0.c0)))))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL t1.c1 FROM t1 GROUP BY t1.c1;
SELECT ALL t1.c1 FROM t1 WHERE (((((t1.c1)OR(COALESCE(t1.c1, t1.c1))))OR(CAST(t1.c1 AS NUMERIC)))) GROUP BY t1.c1 UNION SELECT ALL t1.c1 FROM t1 WHERE ((NOT (((((t1.c1)OR(COALESCE(t1.c1, t1.c1))))OR(CAST(t1.c1 AS NUMERIC)))))) GROUP BY t1.c1 UNION SELECT t1.c1 FROM t1 WHERE (((((((t1.c1)OR(COALESCE(t1.c1, t1.c1))))OR(CAST(t1.c1 AS NUMERIC)))) ISNULL)) GROUP BY t1.c1;
SELECT ALL t1.c1 FROM t1 GROUP BY t1.c1;
SELECT t1.c1 FROM t1 GROUP BY t1.c1;
SELECT ALL t1.c1 FROM t1 GROUP BY t1.c1 HAVING ((((MIN(t1.c1))OR(MAX(COUNT(t1.c1)))))AND('FgP[lPP')) UNION ALL SELECT t1.c1 FROM t1 GROUP BY t1.c1 HAVING (NOT (((((MIN(t1.c1))OR(MAX(COUNT(t1.c1)))))AND('FgP[lPP')))) UNION ALL SELECT t1.c1 FROM t1 GROUP BY t1.c1 HAVING ((((((MIN(t1.c1))OR(MAX(COUNT(t1.c1)))))AND('FgP[lPP'))) ISNULL);
SELECT TOTAL((((NOT (rt0.c0))) IS FALSE)) FROM rt0 ORDER BY CAST(CAST(rt0.c0 AS TEXT) AS REAL), ((CASE rt0.c0  WHEN rt0.c1 THEN NULL ELSE rt0.c0 END)<=(LIKE(rt0.c0, rt0.c0, 'm'))) ASC, (UPPER('') IN ());
SELECT ALL * FROM rt0 NATURAL JOIN t1;
SELECT ALL * FROM rt0 NATURAL JOIN t1 WHERE ((((~ (t1.c1))) BETWEEN (((t1.c1)>=(rt0.c3))) AND (((rt0.c2) NOT BETWEEN (rt0.c2) AND (t1.c1))))) UNION ALL SELECT ALL * FROM rt0 NATURAL JOIN t1 WHERE ((NOT ((((~ (t1.c1))) BETWEEN (((t1.c1)>=(rt0.c3))) AND (((rt0.c2) NOT BETWEEN (rt0.c2) AND (t1.c1))))))) UNION ALL SELECT * FROM rt0 NATURAL JOIN t1 WHERE ((((((~ (t1.c1))) BETWEEN (((t1.c1)>=(rt0.c3))) AND (((rt0.c2) NOT BETWEEN (rt0.c2) AND (t1.c1))))) ISNULL));
SELECT ALL * FROM rt0 NATURAL JOIN t1;
SELECT DISTINCT t1.c1 FROM t1 CROSS JOIN rt0 ON ((rt0.c3)|(rt0.c2));
SELECT DISTINCT t1.c1 FROM t1 CROSS JOIN rt0 ON ((rt0.c3)|(rt0.c2)) WHERE (CASE WHEN ((rt0.c1) ISNULL) THEN (rt0.c3 IN ()) WHEN ((rt0.c2) BETWEEN (rt0.c3) AND (rt0.c3)) THEN CASE t1.c1  WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c1 END WHEN t1.c1 THEN (rt0.c2 IN (rt0.c0)) END) UNION SELECT DISTINCT t1.c1 FROM t1 CROSS JOIN rt0 ON ((rt0.c3)|(rt0.c2)) WHERE ((NOT (CASE WHEN ((rt0.c1) ISNULL) THEN (rt0.c3 IN ()) WHEN ((rt0.c2) BETWEEN (rt0.c3) AND (rt0.c3)) THEN CASE t1.c1  WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c1 END WHEN t1.c1 THEN (rt0.c2 IN (rt0.c0)) END))) UNION SELECT DISTINCT t1.c1 FROM t1 CROSS JOIN rt0 ON ((rt0.c3)|(rt0.c2)) WHERE (((CASE WHEN ((rt0.c1) ISNULL) THEN (rt0.c3 IN ()) WHEN ((rt0.c2) BETWEEN (rt0.c3) AND (rt0.c3)) THEN CASE t1.c1  WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c1 END WHEN t1.c1 THEN (rt0.c2 IN (rt0.c0)) END) ISNULL));
SELECT DISTINCT t1.c1 FROM t1 CROSS JOIN rt0 ON ((rt0.c3)|(rt0.c2));
SELECT ALL t1.c1, rt0.c3, rt0.c2, rt0.c1, rt0.c0 FROM t1, rt0 GROUP BY t1.c1, rt0.c3, rt0.c2, rt0.c1, rt0.c0;
SELECT ALL t1.c1, rt0.c3, rt0.c2, rt0.c1, rt0.c0 FROM t1, rt0 WHERE (0x2910160c) GROUP BY t1.c1, rt0.c3, rt0.c2, rt0.c1, rt0.c0 UNION SELECT t1.c1, rt0.c3, rt0.c2, rt0.c1, rt0.c0 FROM t1, rt0 WHERE ((NOT (0X2910160c))) GROUP BY t1.c1, rt0.c3, rt0.c2, rt0.c1, rt0.c0 UNION SELECT ALL t1.c1, rt0.c3, rt0.c2, rt0.c1, rt0.c0 FROM t1, rt0 WHERE (((0X2910160c) ISNULL)) GROUP BY t1.c1, rt0.c3, rt0.c2, rt0.c1, rt0.c0;
SELECT ALL t1.c1, rt0.c3, rt0.c2, rt0.c1, rt0.c0 FROM t1, rt0 GROUP BY t1.c1, rt0.c3, rt0.c2, rt0.c1, rt0.c0;
SELECT rt0.c3, rt0.c2 FROM rt0 GROUP BY rt0.c3, rt0.c2;
SELECT rt0.c3, rt0.c2 FROM rt0 GROUP BY rt0.c3, rt0.c2 HAVING rt0.c2 UNION ALL SELECT ALL rt0.c3, rt0.c2 FROM rt0 GROUP BY rt0.c3, rt0.c2 HAVING (NOT (rt0.c2)) UNION ALL SELECT ALL rt0.c3, rt0.c2 FROM rt0 GROUP BY rt0.c3, rt0.c2 HAVING ((rt0.c2) ISNULL);
SELECT rt0.c3, rt0.c2 FROM rt0 GROUP BY rt0.c3, rt0.c2;
SELECT rt0.c3, rt0.c2 FROM rt0 GROUP BY rt0.c3, rt0.c2 HAVING rt0.c2 UNION ALL SELECT ALL rt0.c3, rt0.c2 FROM rt0 GROUP BY rt0.c3, rt0.c2 HAVING (NOT (rt0.c2)) UNION ALL SELECT ALL rt0.c3, rt0.c2 FROM rt0 GROUP BY rt0.c3, rt0.c2 HAVING ((rt0.c2) ISNULL);
SELECT rt0.c3, rt0.c2 FROM rt0 GROUP BY rt0.c3, rt0.c2;
SELECT ALL rt0.c3, rt0.c0 FROM rt0, t1;
SELECT ALL rt0.c3, rt0.c0 FROM rt0, t1 WHERE ((- ((t1.c1 IN ())))) UNION ALL SELECT ALL rt0.c3, rt0.c0 FROM rt0, t1 WHERE ((NOT ((- ((t1.c1 IN ())))))) UNION ALL SELECT rt0.c3, rt0.c0 FROM rt0, t1 WHERE ((((- ((t1.c1 IN ())))) ISNULL));
SELECT ALL rt0.c3, rt0.c0 FROM rt0, t1;
SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2, rt0.c3, t1.c1 FROM t1, rt0;
SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2, rt0.c3, t1.c1 FROM t1, rt0 WHERE ((NOT (rt0.c3))) UNION SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2, rt0.c3, t1.c1 FROM t1, rt0 WHERE ((NOT ((NOT (rt0.c3))))) UNION SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2, rt0.c3, t1.c1 FROM t1, rt0 WHERE ((((NOT (rt0.c3))) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c1, rt0.c2, rt0.c3, t1.c1 FROM t1, rt0;
SELECT t1.c1 FROM rt0 CROSS JOIN t1 ON CAST(CASE WHEN t1.c1 THEN rt0.c2 END AS BLOB) GROUP BY t1.c1;
SELECT t1.c1 FROM rt0 CROSS JOIN t1 ON CAST(CASE WHEN t1.c1 THEN rt0.c2 END AS BLOB) WHERE (((80740418) NOT BETWEEN (rt0.c0) AND (rt0.c1))) GROUP BY t1.c1 UNION SELECT t1.c1 FROM rt0 CROSS JOIN t1 ON CAST(CASE WHEN t1.c1 THEN rt0.c2 END AS BLOB) WHERE ((NOT (((80740418) NOT BETWEEN (rt0.c0) AND (rt0.c1))))) GROUP BY t1.c1 UNION SELECT ALL t1.c1 FROM rt0 CROSS JOIN t1 ON CAST(CASE WHEN t1.c1 THEN rt0.c2 END AS BLOB) WHERE (((((80740418) NOT BETWEEN (rt0.c0) AND (rt0.c1))) ISNULL)) GROUP BY t1.c1;
SELECT t1.c1 FROM rt0 CROSS JOIN t1 ON CAST(CASE WHEN t1.c1 THEN rt0.c2 END AS BLOB) GROUP BY t1.c1;
SELECT rt0.c0, rt0.c3 FROM t1, rt0 GROUP BY rt0.c0, rt0.c3;
SELECT rt0.c0, rt0.c3 FROM t1, rt0 GROUP BY rt0.c0, rt0.c3 HAVING ((((rt0.c3) BETWEEN (rt0.c3) AND (SUM(t1.c1)))) NOT BETWEEN (CASE WHEN SUM(0.8941353267723855) THEN AVG(rt0.c0) ELSE MIN(rt0.c0) END) AND (((GROUP_CONCAT(rt0.c1)) BETWEEN (rt0.c2) AND (t1.c1)))) UNION ALL SELECT ALL rt0.c0, rt0.c3 FROM t1, rt0 GROUP BY rt0.c0, rt0.c3 HAVING (NOT (((((rt0.c3) BETWEEN (rt0.c3) AND (SUM(t1.c1)))) NOT BETWEEN (CASE WHEN SUM(0.8941353267723855) THEN AVG(rt0.c0) ELSE MIN(rt0.c0) END) AND (((GROUP_CONCAT(rt0.c1)) BETWEEN (rt0.c2) AND (t1.c1)))))) UNION ALL SELECT rt0.c0, rt0.c3 FROM t1, rt0 GROUP BY rt0.c0, rt0.c3 HAVING ((((((rt0.c3) BETWEEN (rt0.c3) AND (SUM(t1.c1)))) NOT BETWEEN (CASE WHEN SUM(0.8941353267723855) THEN AVG(rt0.c0) ELSE MIN(rt0.c0) END) AND (((GROUP_CONCAT(rt0.c1)) BETWEEN (rt0.c2) AND (t1.c1))))) ISNULL);
SELECT rt0.c0, rt0.c3 FROM t1, rt0 GROUP BY rt0.c0, rt0.c3;
SELECT rt0.c0, rt0.c3 FROM t1, rt0 GROUP BY rt0.c0, rt0.c3 HAVING ((((rt0.c3) BETWEEN (rt0.c3) AND (SUM(t1.c1)))) NOT BETWEEN (CASE WHEN SUM(0.8941353267723855) THEN AVG(rt0.c0) ELSE MIN(rt0.c0) END) AND (((GROUP_CONCAT(rt0.c1)) BETWEEN (rt0.c2) AND (t1.c1)))) UNION ALL SELECT ALL rt0.c0, rt0.c3 FROM t1, rt0 GROUP BY rt0.c0, rt0.c3 HAVING (NOT (((((rt0.c3) BETWEEN (rt0.c3) AND (SUM(t1.c1)))) NOT BETWEEN (CASE WHEN SUM(0.8941353267723855) THEN AVG(rt0.c0) ELSE MIN(rt0.c0) END) AND (((GROUP_CONCAT(rt0.c1)) BETWEEN (rt0.c2) AND (t1.c1)))))) UNION ALL SELECT rt0.c0, rt0.c3 FROM t1, rt0 GROUP BY rt0.c0, rt0.c3 HAVING ((((((rt0.c3) BETWEEN (rt0.c3) AND (SUM(t1.c1)))) NOT BETWEEN (CASE WHEN SUM(0.8941353267723855) THEN AVG(rt0.c0) ELSE MIN(rt0.c0) END) AND (((GROUP_CONCAT(rt0.c1)) BETWEEN (rt0.c2) AND (t1.c1))))) ISNULL);
SELECT rt0.c0, rt0.c3 FROM t1, rt0 GROUP BY rt0.c0, rt0.c3;
SELECT ALL rt0.c3, rt0.c0, rt0.c1, t1.c1, rt0.c2 FROM rt0 LEFT OUTER JOIN t1 ON (~ (rt0.c2)) COLLATE BINARY;
SELECT ALL rt0.c3, rt0.c0, rt0.c1, t1.c1, rt0.c2 FROM rt0 LEFT OUTER JOIN t1 ON (~ (rt0.c2)) COLLATE BINARY WHERE ((((((rt0.c2))<((rt0.c3))))-(((rt0.c2)&(t1.c1))))) UNION ALL SELECT ALL rt0.c3, rt0.c0, rt0.c1, t1.c1, rt0.c2 FROM rt0 LEFT OUTER JOIN t1 ON (~ (rt0.c2)) COLLATE BINARY WHERE ((NOT ((((((rt0.c2))<((rt0.c3))))-(((rt0.c2)&(t1.c1))))))) UNION ALL SELECT ALL rt0.c3, rt0.c0, rt0.c1, t1.c1, rt0.c2 FROM rt0 LEFT OUTER JOIN t1 ON (~ (rt0.c2)) COLLATE BINARY WHERE ((((((((rt0.c2))<((rt0.c3))))-(((rt0.c2)&(t1.c1))))) ISNULL));
SELECT ALL rt0.c3, rt0.c0, rt0.c1, t1.c1, rt0.c2 FROM rt0 LEFT OUTER JOIN t1 ON (~ (rt0.c2)) COLLATE BINARY;
SELECT DISTINCT * FROM rt0, t1;
SELECT DISTINCT * FROM rt0, t1 WHERE ((((rt0.c0, rt0.c2, rt0.c0)) BETWEEN ((rt0.c2, rt0.c3, rt0.c3)) AND ((rt0.c0, rt0.c3, rt0.c2))) COLLATE NOCASE) UNION SELECT DISTINCT * FROM rt0, t1 WHERE ((NOT ((((rt0.c0, rt0.c2, rt0.c0)) BETWEEN ((rt0.c2, rt0.c3, rt0.c3)) AND ((rt0.c0, rt0.c3, rt0.c2))) COLLATE NOCASE))) UNION SELECT DISTINCT * FROM rt0, t1 WHERE ((((((rt0.c0, rt0.c2, rt0.c0)) BETWEEN ((rt0.c2, rt0.c3, rt0.c3)) AND ((rt0.c0, rt0.c3, rt0.c2))) COLLATE NOCASE) ISNULL));
SELECT DISTINCT * FROM rt0, t1;
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM rt0 WHERE (((x'')LIKE(NULL))) GROUP BY rt0.c0, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (((x'')LIKE(NULL))))) GROUP BY rt0.c0, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c1 FROM rt0 WHERE (((((x'')LIKE(NULL))) ISNULL)) GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c3 FROM rt0 GROUP BY rt0.c3;
SELECT rt0.c3 FROM rt0 GROUP BY rt0.c3 HAVING COUNT(((rt0.c3) BETWEEN (COUNT(GROUP_CONCAT(rt0.c0))) AND (COUNT(rt0.c3)))) UNION ALL SELECT rt0.c3 FROM rt0 GROUP BY rt0.c3 HAVING (NOT (COUNT(((rt0.c3) BETWEEN (COUNT(GROUP_CONCAT(rt0.c0))) AND (COUNT(rt0.c3)))))) UNION ALL SELECT rt0.c3 FROM rt0 GROUP BY rt0.c3 HAVING ((COUNT(((rt0.c3) BETWEEN (COUNT(GROUP_CONCAT(rt0.c0))) AND (COUNT(rt0.c3))))) ISNULL);
SELECT MIN(((((((rt0.c1) IS TRUE))OR(((t1.c1)==(rt0.c1)))))AND(t1.c1 COLLATE RTRIM))) FROM rt0, t1;
SELECT ALL * FROM rt0, t1;
SELECT ALL * FROM rt0, t1 WHERE (ABS(rt0.c0) COLLATE NOCASE COLLATE NOCASE) UNION ALL SELECT ALL * FROM rt0, t1 WHERE ((NOT (ABS(rt0.c0) COLLATE NOCASE COLLATE NOCASE))) UNION ALL SELECT ALL * FROM rt0, t1 WHERE (((ABS(rt0.c0) COLLATE NOCASE COLLATE NOCASE) ISNULL));
SELECT ALL * FROM rt0, t1;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE ((((+ (rt0.c2))) NOT BETWEEN (CAST(rt0.c3 AS BLOB)) AND (rt0.c1))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT ((((+ (rt0.c2))) NOT BETWEEN (CAST(rt0.c3 AS BLOB)) AND (rt0.c1))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((((((+ (rt0.c2))) NOT BETWEEN (CAST(rt0.c3 AS BLOB)) AND (rt0.c1))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c0, rt0.c2, rt0.c3, t1.c1, rt0.c1 FROM rt0 FULL OUTER JOIN t1 ON (((((NOT (rt0.c2)))AND((((NULL)) BETWEEN ((-1419712928)) AND ((rt0.c2))))))AND(((rt0.c0)%(x'')))) GROUP BY rt0.c0, rt0.c2, rt0.c3, t1.c1, rt0.c1;
SELECT rt0.c0, rt0.c2, rt0.c3, t1.c1, rt0.c1 FROM rt0 FULL OUTER JOIN t1 ON (((((NOT (rt0.c2)))AND((((NULL)) BETWEEN ((-1419712928)) AND ((rt0.c2))))))AND(((rt0.c0)%(x'')))) WHERE ((((NOT (rt0.c3)))>=(((t1.c1)|(0.7873052023377423))))) GROUP BY rt0.c0, rt0.c2, rt0.c3, t1.c1, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c2, rt0.c3, t1.c1, rt0.c1 FROM rt0 FULL OUTER JOIN t1 ON (((((NOT (rt0.c2)))AND((((NULL)) BETWEEN ((-1419712928)) AND ((rt0.c2))))))AND(((rt0.c0)%(x'')))) WHERE ((NOT ((((NOT (rt0.c3)))>=(((t1.c1)|(0.7873052023377423))))))) GROUP BY rt0.c0, rt0.c2, rt0.c3, t1.c1, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c2, rt0.c3, t1.c1, rt0.c1 FROM rt0 FULL OUTER JOIN t1 ON (((((NOT (rt0.c2)))AND((((NULL)) BETWEEN ((-1419712928)) AND ((rt0.c2))))))AND(((rt0.c0)%(x'')))) WHERE ((((((NOT (rt0.c3)))>=(((t1.c1)|(0.7873052023377423))))) ISNULL)) GROUP BY rt0.c0, rt0.c2, rt0.c3, t1.c1, rt0.c1;
SELECT ALL rt0.c0, rt0.c2, rt0.c3, t1.c1, rt0.c1 FROM rt0 FULL OUTER JOIN t1 ON (((((NOT (rt0.c2)))AND((((NULL)) BETWEEN ((-1419712928)) AND ((rt0.c2))))))AND(((rt0.c0)%(x'')))) GROUP BY rt0.c0, rt0.c2, rt0.c3, t1.c1, rt0.c1;
SELECT ALL rt0.c3, t1.c1, rt0.c0, rt0.c2, rt0.c1 FROM rt0, t1 GROUP BY rt0.c3, t1.c1, rt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c3, t1.c1, rt0.c0, rt0.c2, rt0.c1 FROM rt0, t1 GROUP BY rt0.c3, t1.c1, rt0.c0, rt0.c2, rt0.c1 HAVING AVG(json_insert(rt0.c1, TOTAL(MAX(COUNT(*))), rt0.c3)) UNION ALL SELECT ALL rt0.c3, t1.c1, rt0.c0, rt0.c2, rt0.c1 FROM rt0, t1 GROUP BY rt0.c3, t1.c1, rt0.c0, rt0.c2, rt0.c1 HAVING (NOT (AVG(json_insert(rt0.c1, TOTAL(MAX(COUNT(*))), rt0.c3)))) UNION ALL SELECT rt0.c3, t1.c1, rt0.c0, rt0.c2, rt0.c1 FROM rt0, t1 GROUP BY rt0.c3, t1.c1, rt0.c0, rt0.c2, rt0.c1 HAVING ((AVG(json_insert(rt0.c1, TOTAL(MAX(COUNT(*))), rt0.c3))) ISNULL);
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE ((((((((((rt0.c0 IN ()))OR((((rt0.c1, rt0.c0, rt0.c0, rt0.c0, rt0.c1)) NOT BETWEEN ((rt0.c2, '-1855986543', rt0.c3, rt0.c0, rt0.c1)) AND ((rt0.c1, rt0.c0, rt0.c1, rt0.c1, rt0.c1))))))AND((rt0.c1 IN ()))))OR((NOT (rt0.c0)))))OR((NOT (rt0.c2))))) UNION ALL SELECT * FROM rt0 WHERE ((NOT ((((((((((rt0.c0 IN ()))OR((((rt0.c1, rt0.c0, rt0.c0, rt0.c0, rt0.c1)) NOT BETWEEN ((rt0.c2, '-1855986543', rt0.c3, rt0.c0, rt0.c1)) AND ((rt0.c1, rt0.c0, rt0.c1, rt0.c1, rt0.c1))))))AND((rt0.c1 IN ()))))OR((NOT (rt0.c0)))))OR((NOT (rt0.c2))))))) UNION ALL SELECT ALL * FROM rt0 WHERE ((((((((((((rt0.c0 IN ()))OR((((rt0.c1, rt0.c0, rt0.c0, rt0.c0, rt0.c1)) NOT BETWEEN ((rt0.c2, '-1855986543', rt0.c3, rt0.c0, rt0.c1)) AND ((rt0.c1, rt0.c0, rt0.c1, rt0.c1, rt0.c1))))))AND((rt0.c1 IN ()))))OR((NOT (rt0.c0)))))OR((NOT (rt0.c2))))) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT rt0.c2, t1.c1 FROM t1, rt0;
SELECT DISTINCT rt0.c2, t1.c1 FROM t1, rt0 WHERE (((rt0.c3 COLLATE RTRIM) NOT BETWEEN (t1.c1 COLLATE NOCASE) AND ((t1.c1 IN (rt0.c1))))) UNION SELECT DISTINCT rt0.c2, t1.c1 FROM t1, rt0 WHERE ((NOT (((rt0.c3 COLLATE RTRIM) NOT BETWEEN (t1.c1 COLLATE NOCASE) AND ((t1.c1 IN (rt0.c1))))))) UNION SELECT DISTINCT rt0.c2, t1.c1 FROM t1, rt0 WHERE (((((rt0.c3 COLLATE RTRIM) NOT BETWEEN (t1.c1 COLLATE NOCASE) AND ((t1.c1 IN (rt0.c1))))) ISNULL));
SELECT DISTINCT rt0.c2, t1.c1 FROM t1, rt0;
SELECT t1.c1, rt0.c1, rt0.c2 FROM rt0, t1 GROUP BY t1.c1, rt0.c1, rt0.c2;
SELECT ALL t1.c1, rt0.c1, rt0.c2 FROM rt0, t1 WHERE (UPPER((-424677578 IN ()))) GROUP BY t1.c1, rt0.c1, rt0.c2 UNION SELECT ALL t1.c1, rt0.c1, rt0.c2 FROM rt0, t1 WHERE ((NOT (UPPER((-424677578 IN ()))))) GROUP BY t1.c1, rt0.c1, rt0.c2 UNION SELECT ALL t1.c1, rt0.c1, rt0.c2 FROM rt0, t1 WHERE (((UPPER((-424677578 IN ()))) ISNULL)) GROUP BY t1.c1, rt0.c1, rt0.c2;
SELECT t1.c1, rt0.c1, rt0.c2 FROM rt0, t1 GROUP BY t1.c1, rt0.c1, rt0.c2;
SELECT ALL rt0.c3 FROM rt0, t1 GROUP BY rt0.c3;
SELECT ALL rt0.c3 FROM rt0, t1 GROUP BY rt0.c3 HAVING MIN(COUNT(*)) UNION ALL SELECT rt0.c3 FROM rt0, t1 GROUP BY rt0.c3 HAVING (NOT (MIN(COUNT(*)))) UNION ALL SELECT ALL rt0.c3 FROM rt0, t1 GROUP BY rt0.c3 HAVING ((MIN(COUNT(*))) ISNULL);
SELECT * FROM t1;
SELECT * FROM t1 WHERE (((t1.c1)+('' COLLATE RTRIM))) UNION ALL SELECT * FROM t1 WHERE ((NOT (((t1.c1)+('' COLLATE RTRIM))))) UNION ALL SELECT * FROM t1 WHERE (((((t1.c1)+('' COLLATE RTRIM))) ISNULL));
SELECT * FROM t1;
SELECT DISTINCT t1.c1 FROM t1;
SELECT DISTINCT t1.c1 FROM t1 WHERE ((('197067210')AND(NULL))) UNION SELECT DISTINCT t1.c1 FROM t1 WHERE ((NOT ((('197067210')AND(NULL))))) UNION SELECT DISTINCT t1.c1 FROM t1 WHERE ((((('197067210')AND(NULL))) ISNULL));
SELECT DISTINCT t1.c1 FROM t1;
SELECT rt0.c3, rt0.c2, rt0.c1, t1.c1, rt0.c0 FROM t1 CROSS JOIN rt0 ON CASE rt0.c1  WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN NULL END COLLATE BINARY GROUP BY rt0.c3, rt0.c2, rt0.c1, t1.c1, rt0.c0;
SELECT rt0.c3, rt0.c2, rt0.c1, t1.c1, rt0.c0 FROM t1 CROSS JOIN rt0 ON CASE rt0.c1  WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN NULL END COLLATE BINARY WHERE ((NOT (x'0430d59f'))) GROUP BY rt0.c3, rt0.c2, rt0.c1, t1.c1, rt0.c0 UNION SELECT ALL rt0.c3, rt0.c2, rt0.c1, t1.c1, rt0.c0 FROM t1 CROSS JOIN rt0 ON CASE rt0.c1  WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN NULL END COLLATE BINARY WHERE ((NOT ((NOT (x'0430d59f'))))) GROUP BY rt0.c3, rt0.c2, rt0.c1, t1.c1, rt0.c0 UNION SELECT ALL rt0.c3, rt0.c2, rt0.c1, t1.c1, rt0.c0 FROM t1 CROSS JOIN rt0 ON CASE rt0.c1  WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN NULL END COLLATE BINARY WHERE ((((NOT (x'0430d59f'))) ISNULL)) GROUP BY rt0.c3, rt0.c2, rt0.c1, t1.c1, rt0.c0;
SELECT rt0.c3, rt0.c2, rt0.c1, t1.c1, rt0.c0 FROM t1 CROSS JOIN rt0 ON CASE rt0.c1  WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN NULL END COLLATE BINARY GROUP BY rt0.c3, rt0.c2, rt0.c1, t1.c1, rt0.c0;
SELECT ALL t1.c1 FROM t1 GROUP BY t1.c1;
SELECT ALL t1.c1 FROM t1 GROUP BY t1.c1 HAVING SUM(((COUNT(t1.c1))>=(MAX(t1.c1)))) UNION ALL SELECT t1.c1 FROM t1 GROUP BY t1.c1 HAVING (NOT (SUM(((COUNT(t1.c1))>=(MAX(t1.c1)))))) UNION ALL SELECT ALL t1.c1 FROM t1 GROUP BY t1.c1 HAVING ((SUM(((COUNT(t1.c1))>=(MAX(t1.c1))))) ISNULL);
SELECT rt0.c1, rt0.c0, t1.c1, rt0.c2, rt0.c3 FROM t1, rt0;
SELECT rt0.c1, rt0.c0, t1.c1, rt0.c2, rt0.c3 FROM t1, rt0 WHERE ('-100086297') UNION ALL SELECT ALL rt0.c1, rt0.c0, t1.c1, rt0.c2, rt0.c3 FROM t1, rt0 WHERE ((NOT ('-100086297'))) UNION ALL SELECT ALL rt0.c1, rt0.c0, t1.c1, rt0.c2, rt0.c3 FROM t1, rt0 WHERE ((('-100086297') ISNULL));
SELECT rt0.c1, rt0.c0, t1.c1, rt0.c2, rt0.c3 FROM t1, rt0;
SELECT DISTINCT * FROM rt0, t1;
SELECT DISTINCT * FROM rt0, t1 WHERE (NULL) UNION SELECT DISTINCT * FROM rt0, t1 WHERE ((NOT (NULL))) UNION SELECT DISTINCT * FROM rt0, t1 WHERE (((NULL) ISNULL));
SELECT DISTINCT * FROM rt0, t1;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0, t1 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0, t1 WHERE (CASE rt0.c2 COLLATE BINARY  WHEN ((t1.c1) NOT BETWEEN (rt0.c2) AND (rt0.c1)) THEN x'' END) GROUP BY rt0.c1, rt0.c2, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0, t1 WHERE ((NOT (CASE rt0.c2 COLLATE BINARY  WHEN ((t1.c1) NOT BETWEEN (rt0.c2) AND (rt0.c1)) THEN x'' END))) GROUP BY rt0.c1, rt0.c2, rt0.c0 UNION SELECT rt0.c1, rt0.c2, rt0.c0 FROM rt0, t1 WHERE (((CASE rt0.c2 COLLATE BINARY  WHEN ((t1.c1) NOT BETWEEN (rt0.c2) AND (rt0.c1)) THEN x'' END) ISNULL)) GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT ALL rt0.c1, rt0.c2, rt0.c0 FROM rt0, t1 GROUP BY rt0.c1, rt0.c2, rt0.c0;
SELECT rt0.c1, t1.c1, rt0.c3 FROM t1, rt0 GROUP BY rt0.c1, t1.c1, rt0.c3;
SELECT ALL rt0.c1, t1.c1, rt0.c3 FROM t1, rt0 GROUP BY rt0.c1, t1.c1, rt0.c3 HAVING (((SUM(rt0.c1), rt0.c1, rt0.c1)) BETWEEN ((((TOTAL(t1.c1))IS NOT(rt0.c1)), LIKELY(t1.c1), AVG(AVG(rt0.c2)))) AND ((((COUNT(rt0.c1)) IS FALSE), TOTAL(COUNT(*)), MAX(MIN(COUNT(TOTAL(rt0.c0))))))) UNION ALL SELECT rt0.c1, t1.c1, rt0.c3 FROM t1, rt0 GROUP BY rt0.c1, t1.c1, rt0.c3 HAVING (NOT ((((SUM(rt0.c1), rt0.c1, rt0.c1)) BETWEEN ((((TOTAL(t1.c1))IS NOT(rt0.c1)), LIKELY(t1.c1), AVG(AVG(rt0.c2)))) AND ((((COUNT(rt0.c1)) IS FALSE), TOTAL(COUNT(*)), MAX(MIN(COUNT(TOTAL(rt0.c0))))))))) UNION ALL SELECT ALL rt0.c1, t1.c1, rt0.c3 FROM t1, rt0 GROUP BY rt0.c1, t1.c1, rt0.c3 HAVING (((((SUM(rt0.c1), rt0.c1, rt0.c1)) BETWEEN ((((TOTAL(t1.c1))IS NOT(rt0.c1)), LIKELY(t1.c1), AVG(AVG(rt0.c2)))) AND ((((COUNT(rt0.c1)) IS FALSE), TOTAL(COUNT(*)), MAX(MIN(COUNT(TOTAL(rt0.c0)))))))) ISNULL);
SELECT rt0.c2, rt0.c3, rt0.c0, t1.c1 FROM t1, rt0;
SELECT rt0.c2, rt0.c3, rt0.c0, t1.c1 FROM t1, rt0 WHERE (CAST((- (t1.c1)) AS INTEGER)) UNION ALL SELECT rt0.c2, rt0.c3, rt0.c0, t1.c1 FROM t1, rt0 WHERE ((NOT (CAST((- (t1.c1)) AS INTEGER)))) UNION ALL SELECT ALL rt0.c2, rt0.c3, rt0.c0, t1.c1 FROM t1, rt0 WHERE (((CAST((- (t1.c1)) AS INTEGER)) ISNULL));
SELECT rt0.c2, rt0.c3, rt0.c0, t1.c1 FROM t1, rt0;
SELECT DISTINCT rt0.c0, rt0.c3, rt0.c1 FROM rt0;
SELECT DISTINCT rt0.c0, rt0.c3, rt0.c1 FROM rt0 WHERE ((((((rt0.c3)) BETWEEN ((rt0.c1)) AND ((rt0.c1))))GLOB(UNICODE(rt0.c3)))) UNION SELECT DISTINCT rt0.c0, rt0.c3, rt0.c1 FROM rt0 WHERE ((NOT ((((((rt0.c3)) BETWEEN ((rt0.c1)) AND ((rt0.c1))))GLOB(UNICODE(rt0.c3)))))) UNION SELECT DISTINCT rt0.c0, rt0.c3, rt0.c1 FROM rt0 WHERE ((((((((rt0.c3)) BETWEEN ((rt0.c1)) AND ((rt0.c1))))GLOB(UNICODE(rt0.c3)))) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c3, rt0.c1 FROM rt0;
SELECT rt0.c0, rt0.c2, rt0.c3, t1.c1, rt0.c1 FROM rt0 INNER JOIN t1 ON ((CASE WHEN t1.c1 THEN 't3+뇢?-R' END)>(((0x676dfcff) IS FALSE))) GROUP BY rt0.c0, rt0.c2, rt0.c3, t1.c1, rt0.c1;
SELECT rt0.c0, rt0.c2, rt0.c3, t1.c1, rt0.c1 FROM rt0 INNER JOIN t1 ON ((CASE WHEN t1.c1 THEN 't3+뇢?-R' END)>(((0x676dfcff) IS FALSE))) WHERE ((((rt0.c1 IN ()))>>(((t1.c1) BETWEEN (rt0.c2) AND (rt0.c0))))) GROUP BY rt0.c0, rt0.c2, rt0.c3, t1.c1, rt0.c1 UNION SELECT rt0.c0, rt0.c2, rt0.c3, t1.c1, rt0.c1 FROM rt0 INNER JOIN t1 ON ((CASE WHEN t1.c1 THEN 't3+뇢?-R' END)>(((0X676dfcff) IS FALSE))) WHERE ((NOT ((((rt0.c1 IN ()))>>(((t1.c1) BETWEEN (rt0.c2) AND (rt0.c0))))))) GROUP BY rt0.c0, rt0.c2, rt0.c3, t1.c1, rt0.c1 UNION SELECT ALL rt0.c0, rt0.c2, rt0.c3, t1.c1, rt0.c1 FROM rt0 INNER JOIN t1 ON ((CASE WHEN t1.c1 THEN 't3+뇢?-R' END)>(((0X676dfcff) IS FALSE))) WHERE ((((((rt0.c1 IN ()))>>(((t1.c1) BETWEEN (rt0.c2) AND (rt0.c0))))) ISNULL)) GROUP BY rt0.c0, rt0.c2, rt0.c3, t1.c1, rt0.c1;
SELECT rt0.c0, rt0.c2, rt0.c3, t1.c1, rt0.c1 FROM rt0 INNER JOIN t1 ON ((CASE WHEN t1.c1 THEN 't3+뇢?-R' END)>(((0x676dfcff) IS FALSE))) GROUP BY rt0.c0, rt0.c2, rt0.c3, t1.c1, rt0.c1;
SELECT ALL rt0.c3, rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c3, rt0.c2, rt0.c0, rt0.c1;
SELECT rt0.c3, rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c3, rt0.c2, rt0.c0, rt0.c1 HAVING (((COUNT(rt0.c1))) BETWEEN ((SUM(TOTAL(TOTAL(rt0.c2))))) AND ((COUNT(rt0.c0)))) UNION ALL SELECT ALL rt0.c3, rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c3, rt0.c2, rt0.c0, rt0.c1 HAVING (NOT ((((COUNT(rt0.c1))) BETWEEN ((SUM(TOTAL(TOTAL(rt0.c2))))) AND ((COUNT(rt0.c0)))))) UNION ALL SELECT ALL rt0.c3, rt0.c2, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c3, rt0.c2, rt0.c0, rt0.c1 HAVING (((((COUNT(rt0.c1))) BETWEEN ((SUM(TOTAL(TOTAL(rt0.c2))))) AND ((COUNT(rt0.c0))))) ISNULL);
SELECT ALL * FROM t1, rt0;
SELECT * FROM t1, rt0 WHERE (((CASE rt0.c1  WHEN rt0.c1 THEN rt0.c0 END)|(CAST(t1.c1 AS TEXT)))) UNION ALL SELECT * FROM t1, rt0 WHERE ((NOT (((CASE rt0.c1  WHEN rt0.c1 THEN rt0.c0 END)|(CAST(t1.c1 AS TEXT)))))) UNION ALL SELECT ALL * FROM t1, rt0 WHERE (((((CASE rt0.c1  WHEN rt0.c1 THEN rt0.c0 END)|(CAST(t1.c1 AS TEXT)))) ISNULL));
SELECT ALL * FROM t1, rt0;
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c3 FROM t1 FULL OUTER JOIN rt0 ON ((JULIANDAY(rt0.c3, rt0.c0, rt0.c2))%(((t1.c1)LIKE(rt0.c2))));
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c3 FROM t1 FULL OUTER JOIN rt0 ON ((JULIANDAY(rt0.c3, rt0.c0, rt0.c2))%(((t1.c1)LIKE(rt0.c2)))) WHERE (CAST((NOT (rt0.c2)) AS INTEGER)) UNION SELECT DISTINCT rt0.c1, rt0.c0, rt0.c3 FROM t1 FULL OUTER JOIN rt0 ON ((JULIANDAY(rt0.c3, rt0.c0, rt0.c2))%(((t1.c1)LIKE(rt0.c2)))) WHERE ((NOT (CAST((NOT (rt0.c2)) AS INTEGER)))) UNION SELECT DISTINCT rt0.c1, rt0.c0, rt0.c3 FROM t1 FULL OUTER JOIN rt0 ON ((JULIANDAY(rt0.c3, rt0.c0, rt0.c2))%(((t1.c1)LIKE(rt0.c2)))) WHERE (((CAST((NOT (rt0.c2)) AS INTEGER)) ISNULL));
SELECT DISTINCT rt0.c1, rt0.c0, rt0.c3 FROM t1 FULL OUTER JOIN rt0 ON ((JULIANDAY(rt0.c3, rt0.c0, rt0.c2))%(((t1.c1)LIKE(rt0.c2))));
SELECT t1.c1 FROM t1 GROUP BY t1.c1;
SELECT ALL t1.c1 FROM t1 WHERE (((t1.c1)LIKE(CAST(t1.c1 AS REAL)))) GROUP BY t1.c1 UNION SELECT ALL t1.c1 FROM t1 WHERE ((NOT (((t1.c1)LIKE(CAST(t1.c1 AS REAL)))))) GROUP BY t1.c1 UNION SELECT t1.c1 FROM t1 WHERE (((((t1.c1)LIKE(CAST(t1.c1 AS REAL)))) ISNULL)) GROUP BY t1.c1;
SELECT t1.c1 FROM t1 GROUP BY t1.c1;
SELECT ALL rt0.c3, t1.c1, rt0.c2 FROM t1, rt0 GROUP BY rt0.c3, t1.c1, rt0.c2;
SELECT ALL rt0.c3, t1.c1, rt0.c2 FROM t1, rt0 GROUP BY rt0.c3, t1.c1, rt0.c2 HAVING TOTAL(0xfffffffff645c6ca COLLATE NOCASE) UNION ALL SELECT rt0.c3, t1.c1, rt0.c2 FROM t1, rt0 GROUP BY rt0.c3, t1.c1, rt0.c2 HAVING (NOT (TOTAL(0Xfffffffff645c6ca COLLATE NOCASE))) UNION ALL SELECT rt0.c3, t1.c1, rt0.c2 FROM t1, rt0 GROUP BY rt0.c3, t1.c1, rt0.c2 HAVING ((TOTAL(0Xfffffffff645c6ca COLLATE NOCASE)) ISNULL);
SELECT ALL rt0.c3, t1.c1, rt0.c2 FROM t1, rt0 GROUP BY rt0.c3, t1.c1, rt0.c2;
SELECT ALL rt0.c3, t1.c1, rt0.c2 FROM t1, rt0 GROUP BY rt0.c3, t1.c1, rt0.c2 HAVING TOTAL(0xfffffffff645c6ca COLLATE NOCASE) UNION ALL SELECT rt0.c3, t1.c1, rt0.c2 FROM t1, rt0 GROUP BY rt0.c3, t1.c1, rt0.c2 HAVING (NOT (TOTAL(0Xfffffffff645c6ca COLLATE NOCASE))) UNION ALL SELECT rt0.c3, t1.c1, rt0.c2 FROM t1, rt0 GROUP BY rt0.c3, t1.c1, rt0.c2 HAVING ((TOTAL(0Xfffffffff645c6ca COLLATE NOCASE)) ISNULL);
SELECT ALL rt0.c3, t1.c1, rt0.c2 FROM t1, rt0 GROUP BY rt0.c3, t1.c1, rt0.c2;
SELECT ALL rt0.c0, rt0.c2 FROM rt0, t1;
SELECT rt0.c0, rt0.c2 FROM rt0, t1 WHERE ((~ (((rt0.c2)-(t1.c1))))) UNION ALL SELECT rt0.c0, rt0.c2 FROM rt0, t1 WHERE ((NOT ((~ (((rt0.c2)-(t1.c1))))))) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt0, t1 WHERE ((((~ (((rt0.c2)-(t1.c1))))) ISNULL));
SELECT ALL rt0.c0, rt0.c2 FROM rt0, t1;
SELECT DISTINCT rt0.c2, rt0.c1, rt0.c3 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c1, rt0.c3 FROM rt0 WHERE (((TRIM(rt0.c1, rt0.c2)) NOT BETWEEN ((NOT (rt0.c2))) AND (rt0.c3))) UNION SELECT DISTINCT rt0.c2, rt0.c1, rt0.c3 FROM rt0 WHERE ((NOT (((TRIM(rt0.c1, rt0.c2)) NOT BETWEEN ((NOT (rt0.c2))) AND (rt0.c3))))) UNION SELECT DISTINCT rt0.c2, rt0.c1, rt0.c3 FROM rt0 WHERE (((((TRIM(rt0.c1, rt0.c2)) NOT BETWEEN ((NOT (rt0.c2))) AND (rt0.c3))) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c1, rt0.c3 FROM rt0;
SELECT rt0.c2, rt0.c1 FROM t1, rt0 GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c2, rt0.c1 FROM t1, rt0 WHERE (((NULL) NOT BETWEEN (((t1.c1)/(rt0.c2))) AND (CASE rt0.c1  WHEN t1.c1 THEN rt0.c1 END))) GROUP BY rt0.c2, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c1 FROM t1, rt0 WHERE ((NOT (((NULL) NOT BETWEEN (((t1.c1)/(rt0.c2))) AND (CASE rt0.c1  WHEN t1.c1 THEN rt0.c1 END))))) GROUP BY rt0.c2, rt0.c1 UNION SELECT rt0.c2, rt0.c1 FROM t1, rt0 NOT INDEXED WHERE (((((NULL) NOT BETWEEN (((t1.c1)/(rt0.c2))) AND (CASE rt0.c1  WHEN t1.c1 THEN rt0.c1 END))) ISNULL)) GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c2, rt0.c1 FROM t1, rt0 GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 RIGHT OUTER JOIN t1 ON (((t1.c1) NOTNULL) IN ()) GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 RIGHT OUTER JOIN t1 ON (((t1.c1) NOTNULL) IN ()) GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 RIGHT OUTER JOIN t1 ON (((t1.c1) NOTNULL) IN ()) GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 RIGHT OUTER JOIN t1 ON (((t1.c1) NOTNULL) IN ()) GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 RIGHT OUTER JOIN t1 ON (((t1.c1) NOTNULL) IN ()) GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 RIGHT OUTER JOIN t1 ON (((t1.c1) NOTNULL) IN ()) GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 RIGHT OUTER JOIN t1 ON (((t1.c1) NOTNULL) IN ()) GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c0, rt0.c2, rt0.c1 FROM rt0 RIGHT OUTER JOIN t1 ON (((t1.c1) NOTNULL) IN ()) GROUP BY rt0.c0, rt0.c2, rt0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c0, rt0.c2, rt0.c1 FROM rt0 RIGHT OUTER JOIN t1 ON (((t1.c1) NOTNULL) IN ()) GROUP BY rt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c1, rt0.c3 FROM t1 NATURAL JOIN rt0;
SELECT ALL rt0.c1, rt0.c3 FROM t1 NATURAL JOIN rt0 WHERE ((((+ (''))) BETWEEN (((rt0.c2)<=(rt0.c0))) AND ((NOT (t1.c1))))) UNION ALL SELECT ALL rt0.c1, rt0.c3 FROM t1 NATURAL JOIN rt0 WHERE ((NOT ((((+ (''))) BETWEEN (((rt0.c2)<=(rt0.c0))) AND ((NOT (t1.c1))))))) UNION ALL SELECT ALL rt0.c1, rt0.c3 FROM t1 NATURAL JOIN rt0 WHERE ((((((+ (''))) BETWEEN (((rt0.c2)<=(rt0.c0))) AND ((NOT (t1.c1))))) ISNULL));
SELECT ALL rt0.c1, rt0.c3 FROM t1 NATURAL JOIN rt0;
SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0 RIGHT OUTER JOIN t1 ON ((t1.c1 COLLATE NOCASE) IS FALSE);
SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0 RIGHT OUTER JOIN t1 ON ((t1.c1 COLLATE NOCASE) IS FALSE) WHERE (((rt0.c1)-(rt0.c2)) COLLATE NOCASE) UNION SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0 RIGHT OUTER JOIN t1 ON ((t1.c1 COLLATE NOCASE) IS FALSE) WHERE ((NOT (((rt0.c1)-(rt0.c2)) COLLATE NOCASE))) UNION SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0 RIGHT OUTER JOIN t1 ON ((t1.c1 COLLATE NOCASE) IS FALSE) WHERE (((((rt0.c1)-(rt0.c2)) COLLATE NOCASE) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0 RIGHT OUTER JOIN t1 ON ((t1.c1 COLLATE NOCASE) IS FALSE);
SELECT t1.c1 FROM t1 GROUP BY t1.c1;
SELECT t1.c1 FROM t1 WHERE (t1.c1) GROUP BY t1.c1 UNION SELECT t1.c1 FROM t1 WHERE ((NOT (t1.c1))) GROUP BY t1.c1 UNION SELECT ALL t1.c1 FROM t1 WHERE (((t1.c1) ISNULL)) GROUP BY t1.c1;
SELECT t1.c1 FROM t1 GROUP BY t1.c1;
SELECT t1.c1 FROM t1 GROUP BY t1.c1;
SELECT t1.c1 FROM t1 GROUP BY t1.c1 HAVING ((SUM('-938661750'))IS(SUM(t1.c1))) UNION ALL SELECT t1.c1 FROM t1 GROUP BY t1.c1 HAVING (NOT (((SUM('-938661750'))IS(SUM(t1.c1))))) UNION ALL SELECT t1.c1 FROM t1 GROUP BY t1.c1 HAVING ((((SUM('-938661750'))IS(SUM(t1.c1)))) ISNULL);
SELECT t1.c1 FROM t1 GROUP BY t1.c1;
SELECT t1.c1 FROM t1 GROUP BY t1.c1 HAVING ((SUM('-938661750'))IS(SUM(t1.c1))) UNION ALL SELECT t1.c1 FROM t1 GROUP BY t1.c1 HAVING (NOT (((SUM('-938661750'))IS(SUM(t1.c1))))) UNION ALL SELECT t1.c1 FROM t1 GROUP BY t1.c1 HAVING ((((SUM('-938661750'))IS(SUM(t1.c1)))) ISNULL);
SELECT t1.c1 FROM t1 GROUP BY t1.c1;
SELECT ALL * FROM rt0 CROSS JOIN t1 ON (((- (rt0.c0))) NOTNULL);
SELECT ALL * FROM rt0 CROSS JOIN t1 ON (((- (rt0.c0))) NOTNULL) WHERE ((+ ('' COLLATE NOCASE))) UNION ALL SELECT ALL * FROM rt0 CROSS JOIN t1 ON (((- (rt0.c0))) NOTNULL) WHERE ((NOT ((+ ('' COLLATE NOCASE))))) UNION ALL SELECT ALL * FROM rt0 CROSS JOIN t1 ON (((- (rt0.c0))) NOTNULL) WHERE ((((+ ('' COLLATE NOCASE))) ISNULL));
SELECT ALL * FROM rt0 CROSS JOIN t1 ON (((- (rt0.c0))) NOTNULL);
SELECT DISTINCT rt0.c0 FROM t1 FULL OUTER JOIN rt0 ON ((t1.c1 COLLATE BINARY) ISNULL);
SELECT DISTINCT rt0.c0 FROM t1 FULL OUTER JOIN rt0 ON ((t1.c1 COLLATE BINARY) ISNULL) WHERE ((((((rt0.c1 IN ()))AND((+ (rt0.c1)))))OR(((rt0.c2)%(rt0.c2))))) UNION SELECT DISTINCT rt0.c0 FROM t1 FULL OUTER JOIN rt0 ON ((t1.c1 COLLATE BINARY) ISNULL) WHERE ((NOT ((((((rt0.c1 IN ()))AND((+ (rt0.c1)))))OR(((rt0.c2)%(rt0.c2))))))) UNION SELECT DISTINCT rt0.c0 FROM t1 FULL OUTER JOIN rt0 ON ((t1.c1 COLLATE BINARY) ISNULL) WHERE ((((((((rt0.c1 IN ()))AND((+ (rt0.c1)))))OR(((rt0.c2)%(rt0.c2))))) ISNULL));
SELECT DISTINCT rt0.c0 FROM t1 FULL OUTER JOIN rt0 ON ((t1.c1 COLLATE BINARY) ISNULL);
SELECT ALL rt0.c0, rt0.c2, rt0.c1, rt0.c3, t1.c1 FROM rt0 CROSS JOIN t1 ON LOWER(DISTINCT (((rt0.c0)) BETWEEN ((rt0.c0)) AND (('#䆣wT')))) GROUP BY rt0.c0, rt0.c2, rt0.c1, rt0.c3, t1.c1;
SELECT ALL rt0.c0, rt0.c2, rt0.c1, rt0.c3, t1.c1 FROM rt0 CROSS JOIN t1 ON LOWER(DISTINCT (((rt0.c0)) BETWEEN ((rt0.c0)) AND (('#䆣wT')))) WHERE (((((rt0.c3)>(x'')))||(((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2))))) GROUP BY rt0.c0, rt0.c2, rt0.c1, rt0.c3, t1.c1 UNION SELECT ALL rt0.c0, rt0.c2, rt0.c1, rt0.c3, t1.c1 FROM rt0 CROSS JOIN t1 ON LOWER(DISTINCT (((rt0.c0)) BETWEEN ((rt0.c0)) AND (('#䆣wT')))) WHERE ((NOT (((((rt0.c3)>(x'')))||(((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2))))))) GROUP BY rt0.c0, rt0.c2, rt0.c1, rt0.c3, t1.c1 UNION SELECT rt0.c0, rt0.c2, rt0.c1, rt0.c3, t1.c1 FROM rt0 CROSS JOIN t1 ON LOWER(DISTINCT (((rt0.c0)) BETWEEN ((rt0.c0)) AND (('#䆣wT')))) WHERE (((((((rt0.c3)>(x'')))||(((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2))))) ISNULL)) GROUP BY rt0.c0, rt0.c2, rt0.c1, rt0.c3, t1.c1;
SELECT ALL rt0.c0, rt0.c2, rt0.c1, rt0.c3, t1.c1 FROM rt0 CROSS JOIN t1 ON LOWER(DISTINCT (((rt0.c0)) BETWEEN ((rt0.c0)) AND (('#䆣wT')))) GROUP BY rt0.c0, rt0.c2, rt0.c1, rt0.c3, t1.c1;
SELECT rt0.c3 FROM rt0 INNER JOIN t1 ON (((~ (rt0.c1)))>(((rt0.c3) BETWEEN (t1.c1) AND (rt0.c0)))) GROUP BY rt0.c3;
SELECT ALL rt0.c3 FROM rt0 INNER JOIN t1 ON (((~ (rt0.c1)))>(((rt0.c3) BETWEEN (t1.c1) AND (rt0.c0)))) GROUP BY rt0.c3 HAVING MAX(CAST('' AS NUMERIC)) UNION ALL SELECT rt0.c3 FROM rt0 INNER JOIN t1 ON (((~ (rt0.c1)))>(((rt0.c3) BETWEEN (t1.c1) AND (rt0.c0)))) GROUP BY rt0.c3 HAVING (NOT (MAX(CAST('' AS NUMERIC)))) UNION ALL SELECT ALL rt0.c3 FROM rt0 INNER JOIN t1 ON (((~ (rt0.c1)))>(((rt0.c3) BETWEEN (t1.c1) AND (rt0.c0)))) GROUP BY rt0.c3 HAVING ((MAX(CAST('' AS NUMERIC))) ISNULL);
SELECT rt0.c3 FROM rt0 INNER JOIN t1 ON (((~ (rt0.c1)))>(((rt0.c3) BETWEEN (t1.c1) AND (rt0.c0)))) GROUP BY rt0.c3;
SELECT ALL rt0.c3 FROM rt0 INNER JOIN t1 ON (((~ (rt0.c1)))>(((rt0.c3) BETWEEN (t1.c1) AND (rt0.c0)))) GROUP BY rt0.c3 HAVING MAX(CAST('' AS NUMERIC)) UNION ALL SELECT rt0.c3 FROM rt0 INNER JOIN t1 ON (((~ (rt0.c1)))>(((rt0.c3) BETWEEN (t1.c1) AND (rt0.c0)))) GROUP BY rt0.c3 HAVING (NOT (MAX(CAST('' AS NUMERIC)))) UNION ALL SELECT ALL rt0.c3 FROM rt0 INNER JOIN t1 ON (((~ (rt0.c1)))>(((rt0.c3) BETWEEN (t1.c1) AND (rt0.c0)))) GROUP BY rt0.c3 HAVING ((MAX(CAST('' AS NUMERIC))) ISNULL);
SELECT rt0.c3 FROM rt0 INNER JOIN t1 ON (((~ (rt0.c1)))>(((rt0.c3) BETWEEN (t1.c1) AND (rt0.c0)))) GROUP BY rt0.c3;
SELECT rt0.c0, rt0.c1, rt0.c3, t1.c1, rt0.c2 FROM t1, rt0;
SELECT ALL rt0.c0, rt0.c1, rt0.c3, t1.c1, rt0.c2 FROM t1, rt0 WHERE ((CASE '-358589516'  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END IN ())) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c3, t1.c1, rt0.c2 FROM t1, rt0 WHERE ((NOT ((CASE '-358589516'  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END IN ())))) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c3, t1.c1, rt0.c2 FROM t1, rt0 WHERE ((((CASE '-358589516'  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END IN ())) ISNULL));
SELECT rt0.c0, rt0.c1, rt0.c3, t1.c1, rt0.c2 FROM t1, rt0;
SELECT DISTINCT rt0.c2, rt0.c3 FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c3 FROM rt0 WHERE (CASE rt0.c1  WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c3 THEN '0.5938593470812884' WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c1 END COLLATE RTRIM) UNION SELECT DISTINCT rt0.c2, rt0.c3 FROM rt0 WHERE ((NOT (CASE rt0.c1  WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c3 THEN '0.5938593470812884' WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c1 END COLLATE RTRIM))) UNION SELECT DISTINCT rt0.c2, rt0.c3 FROM rt0 WHERE (((CASE rt0.c1  WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c3 THEN '0.5938593470812884' WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c1 END COLLATE RTRIM) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c3 FROM rt0;
SELECT t1.c1 FROM t1 GROUP BY t1.c1;
SELECT ALL t1.c1 FROM t1 WHERE ((((CASE t1.c1  WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c1 ELSE t1.c1 END, ((t1.c1)IS(t1.c1)), ((t1.c1) NOTNULL), ((((((((t1.c1)OR('-1166180855')))AND(t1.c1)))OR(t1.c1)))AND(t1.c1)), CAST(NULL AS NUMERIC)))<>((x'', (('OIn{h)')&(t1.c1)), ((t1.c1)<<(t1.c1)), (t1.c1 IN (t1.c1, t1.c1, t1.c1)), 0x7e174795 COLLATE BINARY)))) GROUP BY t1.c1 UNION SELECT ALL t1.c1 FROM t1 WHERE ((NOT ((((CASE t1.c1  WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c1 ELSE t1.c1 END, ((t1.c1)IS(t1.c1)), ((t1.c1) NOTNULL), ((((((((t1.c1)OR('-1166180855')))AND(t1.c1)))OR(t1.c1)))AND(t1.c1)), CAST(NULL AS NUMERIC)))!=((x'', (('OIn{h)')&(t1.c1)), ((t1.c1)<<(t1.c1)), (t1.c1 IN (t1.c1, t1.c1, t1.c1)), 0X7e174795 COLLATE BINARY)))))) GROUP BY t1.c1 UNION SELECT t1.c1 FROM t1 WHERE ((((((CASE t1.c1  WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c1 ELSE t1.c1 END, ((t1.c1)IS(t1.c1)), ((t1.c1) NOTNULL), ((((((((t1.c1)OR('-1166180855')))AND(t1.c1)))OR(t1.c1)))AND(t1.c1)), CAST(NULL AS NUMERIC)))!=((x'', (('OIn{h)')&(t1.c1)), ((t1.c1)<<(t1.c1)), (t1.c1 IN (t1.c1, t1.c1, t1.c1)), 0x7e174795 COLLATE BINARY)))) ISNULL)) GROUP BY t1.c1;
SELECT t1.c1 FROM t1 GROUP BY t1.c1;
SELECT t1.c1, rt0.c3 FROM t1, rt0 GROUP BY t1.c1, rt0.c3;
SELECT ALL t1.c1, rt0.c3 FROM t1, rt0 GROUP BY t1.c1, rt0.c3 HAVING GROUP_CONCAT(CASE WHEN MIN(rt0.c3) THEN MIN(NULL) WHEN rt0.c2 THEN COUNT(SUM(t1.c1)) WHEN rt0.c1 THEN t1.c1 ELSE rt0.c0 END) UNION ALL SELECT t1.c1, rt0.c3 FROM t1, rt0 GROUP BY t1.c1, rt0.c3 HAVING (NOT (GROUP_CONCAT(CASE WHEN MIN(rt0.c3) THEN MIN(NULL) WHEN rt0.c2 THEN COUNT(SUM(t1.c1)) WHEN rt0.c1 THEN t1.c1 ELSE rt0.c0 END))) UNION ALL SELECT t1.c1, rt0.c3 FROM t1, rt0 GROUP BY t1.c1, rt0.c3 HAVING ((GROUP_CONCAT(CASE WHEN MIN(rt0.c3) THEN MIN(NULL) WHEN rt0.c2 THEN COUNT(SUM(t1.c1)) WHEN rt0.c1 THEN t1.c1 ELSE rt0.c0 END)) ISNULL);
SELECT ALL t1.c1 FROM t1;
SELECT ALL t1.c1 FROM t1 WHERE (CASE WHEN ((((t1.c1)OR(t1.c1)))OR(t1.c1)) THEN ((t1.c1) NOT BETWEEN ('x') AND (t1.c1)) END) UNION ALL SELECT t1.c1 FROM t1 WHERE ((NOT (CASE WHEN ((((t1.c1)OR(t1.c1)))OR(t1.c1)) THEN ((t1.c1) NOT BETWEEN ('x') AND (t1.c1)) END))) UNION ALL SELECT t1.c1 FROM t1 WHERE (((CASE WHEN ((((t1.c1)OR(t1.c1)))OR(t1.c1)) THEN ((t1.c1) NOT BETWEEN ('x') AND (t1.c1)) END) ISNULL));
SELECT ALL t1.c1 FROM t1;
SELECT DISTINCT rt0.c2, rt0.c3, t1.c1, rt0.c1, rt0.c0 FROM t1, rt0;
SELECT DISTINCT rt0.c2, rt0.c3, t1.c1, rt0.c1, rt0.c0 FROM t1, rt0 WHERE (((((rt0.c0)GLOB(rt0.c1)))>=(CAST(t1.c1 AS TEXT)))) UNION SELECT DISTINCT rt0.c2, rt0.c3, t1.c1, rt0.c1, rt0.c0 FROM t1, rt0 WHERE ((NOT (((((rt0.c0)GLOB(rt0.c1)))>=(CAST(t1.c1 AS TEXT)))))) UNION SELECT DISTINCT rt0.c2, rt0.c3, t1.c1, rt0.c1, rt0.c0 FROM t1, rt0 WHERE (((((((rt0.c0)GLOB(rt0.c1)))>=(CAST(t1.c1 AS TEXT)))) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c3, t1.c1, rt0.c1, rt0.c0 FROM t1, rt0;
SELECT ALL rt0.c2, rt0.c3, t1.c1 FROM rt0, t1 GROUP BY rt0.c2, rt0.c3, t1.c1;
SELECT rt0.c2, rt0.c3, t1.c1 FROM rt0, t1 WHERE (((UPPER(DISTINCT rt0.c3))*(rt0.c1 COLLATE BINARY))) GROUP BY rt0.c2, rt0.c3, t1.c1 UNION SELECT ALL rt0.c2, rt0.c3, t1.c1 FROM rt0, t1 WHERE ((NOT (((UPPER(DISTINCT rt0.c3))*(rt0.c1 COLLATE BINARY))))) GROUP BY rt0.c2, rt0.c3, t1.c1 UNION SELECT rt0.c2, rt0.c3, t1.c1 FROM rt0, t1 WHERE (((((UPPER(DISTINCT rt0.c3))*(rt0.c1 COLLATE BINARY))) ISNULL)) GROUP BY rt0.c2, rt0.c3, t1.c1;
SELECT ALL rt0.c2, rt0.c3, t1.c1 FROM rt0, t1 GROUP BY rt0.c2, rt0.c3, t1.c1;
SELECT ALL rt0.c0, t1.c1 FROM rt0, t1 GROUP BY rt0.c0, t1.c1;
SELECT ALL rt0.c0, t1.c1 FROM rt0, t1 GROUP BY rt0.c0, t1.c1 HAVING t1.c1 UNION ALL SELECT ALL rt0.c0, t1.c1 FROM rt0, t1 GROUP BY rt0.c0, t1.c1 HAVING (NOT (t1.c1)) UNION ALL SELECT rt0.c0, t1.c1 FROM rt0, t1 GROUP BY rt0.c0, t1.c1 HAVING ((t1.c1) ISNULL);
SELECT ALL rt0.c0, t1.c1 FROM rt0, t1 GROUP BY rt0.c0, t1.c1;
SELECT ALL rt0.c0, t1.c1 FROM rt0, t1 GROUP BY rt0.c0, t1.c1 HAVING t1.c1 UNION ALL SELECT ALL rt0.c0, t1.c1 FROM rt0, t1 GROUP BY rt0.c0, t1.c1 HAVING (NOT (t1.c1)) UNION ALL SELECT rt0.c0, t1.c1 FROM rt0, t1 GROUP BY rt0.c0, t1.c1 HAVING ((t1.c1) ISNULL);
SELECT ALL rt0.c0, t1.c1 FROM rt0, t1 GROUP BY rt0.c0, t1.c1;
SELECT ALL * FROM t1;
SELECT ALL * FROM t1 WHERE ((((t1.c1 IN ()))OR(((NULL) IS TRUE)))) UNION ALL SELECT * FROM t1 WHERE ((NOT ((((t1.c1 IN ()))OR(((NULL) IS TRUE)))))) UNION ALL SELECT * FROM t1 WHERE ((((((t1.c1 IN ()))OR(((NULL) IS TRUE)))) ISNULL));
SELECT ALL * FROM t1;
SELECT DISTINCT t1.c1 FROM t1;
SELECT DISTINCT t1.c1 FROM t1 WHERE ((((t1.c1)) BETWEEN ((t1.c1)) AND (((~ (t1.c1)))))) UNION SELECT DISTINCT t1.c1 FROM t1 WHERE ((NOT ((((t1.c1)) BETWEEN ((t1.c1)) AND (((~ (t1.c1)))))))) UNION SELECT DISTINCT t1.c1 FROM t1 WHERE ((((((t1.c1)) BETWEEN ((t1.c1)) AND (((~ (t1.c1)))))) ISNULL));
SELECT DISTINCT t1.c1 FROM t1;
SELECT ALL t1.c1, rt0.c0, rt0.c3, rt0.c1, rt0.c2 FROM rt0 CROSS JOIN t1 ON (((rt0.c3)) NOT BETWEEN (((rt0.c3 IN ()))) AND ((((rt0.c0)||(rt0.c3))))) GROUP BY t1.c1, rt0.c0, rt0.c3, rt0.c1, rt0.c2;
SELECT t1.c1, rt0.c0, rt0.c3, rt0.c1, rt0.c2 FROM rt0 CROSS JOIN t1 ON (((rt0.c3)) NOT BETWEEN (((rt0.c3 IN ()))) AND ((((rt0.c0)||(rt0.c3))))) WHERE ((CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c0 END IN ())) GROUP BY t1.c1, rt0.c0, rt0.c3, rt0.c1, rt0.c2 UNION SELECT t1.c1, rt0.c0, rt0.c3, rt0.c1, rt0.c2 FROM rt0 CROSS JOIN t1 ON (((rt0.c3)) NOT BETWEEN (((rt0.c3 IN ()))) AND ((((rt0.c0)||(rt0.c3))))) WHERE ((NOT ((CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c0 END IN ())))) GROUP BY t1.c1, rt0.c0, rt0.c3, rt0.c1, rt0.c2 UNION SELECT ALL t1.c1, rt0.c0, rt0.c3, rt0.c1, rt0.c2 FROM rt0 CROSS JOIN t1 ON (((rt0.c3)) NOT BETWEEN (((rt0.c3 IN ()))) AND ((((rt0.c0)||(rt0.c3))))) WHERE ((((CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c0 END IN ())) ISNULL)) GROUP BY t1.c1, rt0.c0, rt0.c3, rt0.c1, rt0.c2;
SELECT ALL t1.c1, rt0.c0, rt0.c3, rt0.c1, rt0.c2 FROM rt0 CROSS JOIN t1 ON (((rt0.c3)) NOT BETWEEN (((rt0.c3 IN ()))) AND ((((rt0.c0)||(rt0.c3))))) GROUP BY t1.c1, rt0.c0, rt0.c3, rt0.c1, rt0.c2;
SELECT ALL t1.c1, rt0.c0, rt0.c2, rt0.c1, rt0.c3 FROM t1, rt0 GROUP BY t1.c1, rt0.c0, rt0.c2, rt0.c1, rt0.c3;
SELECT ALL t1.c1, rt0.c0, rt0.c2, rt0.c1, rt0.c3 FROM t1, rt0 NOT INDEXED GROUP BY t1.c1, rt0.c0, rt0.c2, rt0.c1, rt0.c3 HAVING -1.583240554E9 UNION ALL SELECT t1.c1, rt0.c0, rt0.c2, rt0.c1, rt0.c3 FROM t1, rt0 GROUP BY t1.c1, rt0.c0, rt0.c2, rt0.c1, rt0.c3 HAVING (NOT (-1.583240554E9)) UNION ALL SELECT ALL t1.c1, rt0.c0, rt0.c2, rt0.c1, rt0.c3 FROM t1, rt0 GROUP BY t1.c1, rt0.c0, rt0.c2, rt0.c1, rt0.c3 HAVING ((-1.583240554E9) ISNULL);
SELECT ALL t1.c1, rt0.c0, rt0.c2, rt0.c1, rt0.c3 FROM t1, rt0 GROUP BY t1.c1, rt0.c0, rt0.c2, rt0.c1, rt0.c3;
SELECT ALL t1.c1, rt0.c0, rt0.c2, rt0.c1, rt0.c3 FROM t1, rt0 NOT INDEXED GROUP BY t1.c1, rt0.c0, rt0.c2, rt0.c1, rt0.c3 HAVING -1.583240554E9 UNION ALL SELECT t1.c1, rt0.c0, rt0.c2, rt0.c1, rt0.c3 FROM t1, rt0 GROUP BY t1.c1, rt0.c0, rt0.c2, rt0.c1, rt0.c3 HAVING (NOT (-1.583240554E9)) UNION ALL SELECT ALL t1.c1, rt0.c0, rt0.c2, rt0.c1, rt0.c3 FROM t1, rt0 GROUP BY t1.c1, rt0.c0, rt0.c2, rt0.c1, rt0.c3 HAVING ((-1.583240554E9) ISNULL);
SELECT ALL t1.c1, rt0.c0, rt0.c2, rt0.c1, rt0.c3 FROM t1, rt0 GROUP BY t1.c1, rt0.c0, rt0.c2, rt0.c1, rt0.c3;
SELECT * FROM t1;
SELECT ALL * FROM t1 WHERE ((CAST(t1.c1 AS BLOB) IN ())) UNION ALL SELECT ALL * FROM t1 WHERE ((NOT ((CAST(t1.c1 AS BLOB) IN ())))) UNION ALL SELECT * FROM t1 WHERE ((((CAST(t1.c1 AS BLOB) IN ())) ISNULL));
SELECT * FROM t1;
SELECT DISTINCT rt0.c0, rt0.c1, t1.c1 FROM rt0 RIGHT OUTER JOIN t1 ON (((CAST(rt0.c2 AS INTEGER), t1.c1 COLLATE RTRIM, ((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c1))))<(((((rt0.c3, t1.c1, rt0.c0))<=((rt0.c1, rt0.c1, t1.c1))), rt0.c0 COLLATE NOCASE, CAST(rt0.c2 AS REAL))));
SELECT DISTINCT rt0.c0, rt0.c1, t1.c1 FROM rt0 RIGHT OUTER JOIN t1 ON (((CAST(rt0.c2 AS INTEGER), t1.c1 COLLATE RTRIM, ((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c1))))<(((((rt0.c3, t1.c1, rt0.c0))<=((rt0.c1, rt0.c1, t1.c1))), rt0.c0 COLLATE NOCASE, CAST(rt0.c2 AS REAL)))) WHERE (((CAST(rt0.c1 AS NUMERIC)) BETWEEN (rt0.c3) AND (((t1.c1)GLOB(t1.c1))))) UNION SELECT DISTINCT rt0.c0, rt0.c1, t1.c1 FROM rt0 RIGHT OUTER JOIN t1 ON (((CAST(rt0.c2 AS INTEGER), t1.c1 COLLATE RTRIM, ((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c1))))<(((((rt0.c3, t1.c1, rt0.c0))<=((rt0.c1, rt0.c1, t1.c1))), rt0.c0 COLLATE NOCASE, CAST(rt0.c2 AS REAL)))) WHERE ((NOT (((CAST(rt0.c1 AS NUMERIC)) BETWEEN (rt0.c3) AND (((t1.c1)GLOB(t1.c1))))))) UNION SELECT DISTINCT rt0.c0, rt0.c1, t1.c1 FROM rt0 RIGHT OUTER JOIN t1 ON (((CAST(rt0.c2 AS INTEGER), t1.c1 COLLATE RTRIM, ((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c1))))<(((((rt0.c3, t1.c1, rt0.c0))<=((rt0.c1, rt0.c1, t1.c1))), rt0.c0 COLLATE NOCASE, CAST(rt0.c2 AS REAL)))) WHERE (((((CAST(rt0.c1 AS NUMERIC)) BETWEEN (rt0.c3) AND (((t1.c1)GLOB(t1.c1))))) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c1, t1.c1 FROM rt0 RIGHT OUTER JOIN t1 ON (((CAST(rt0.c2 AS INTEGER), t1.c1 COLLATE RTRIM, ((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c1))))<(((((rt0.c3, t1.c1, rt0.c0))<=((rt0.c1, rt0.c1, t1.c1))), rt0.c0 COLLATE NOCASE, CAST(rt0.c2 AS REAL))));
SELECT ALL rt0.c2, rt0.c3 FROM t1, rt0 GROUP BY rt0.c2, rt0.c3;
SELECT ALL rt0.c2, rt0.c3 FROM t1, rt0 WHERE (((((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c3))) BETWEEN (((rt0.c3)||(rt0.c3))) AND ('-1232970789'))) GROUP BY rt0.c2, rt0.c3 UNION SELECT rt0.c2, rt0.c3 FROM t1, rt0 WHERE ((NOT (((((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c3))) BETWEEN (((rt0.c3)||(rt0.c3))) AND ('-1232970789'))))) GROUP BY rt0.c2, rt0.c3 UNION SELECT rt0.c2, rt0.c3 FROM t1, rt0 WHERE (((((((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c3))) BETWEEN (((rt0.c3)||(rt0.c3))) AND ('-1232970789'))) ISNULL)) GROUP BY rt0.c2, rt0.c3;
SELECT ALL rt0.c2, rt0.c3 FROM t1, rt0 GROUP BY rt0.c2, rt0.c3;
SELECT rt0.c0, rt0.c3, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c3, rt0.c1, rt0.c2;
SELECT rt0.c0, rt0.c3, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c3, rt0.c1, rt0.c2 HAVING ((JULIANDAY(rt0.c3, GROUP_CONCAT(0X2af3408), rt0.c0)) NOT BETWEEN (TOTAL(TOTAL(rt0.c0))) AND (((COUNT(*)) BETWEEN (AVG(MIN(MIN(rt0.c1)))) AND (SUM('1504949415'))))) UNION ALL SELECT rt0.c0, rt0.c3, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c3, rt0.c1, rt0.c2 HAVING (NOT (((JULIANDAY(rt0.c3, GROUP_CONCAT(0X2af3408), rt0.c0)) NOT BETWEEN (TOTAL(TOTAL(rt0.c0))) AND (((COUNT(*)) BETWEEN (AVG(MIN(MIN(rt0.c1)))) AND (SUM('1504949415'))))))) UNION ALL SELECT rt0.c0, rt0.c3, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c3, rt0.c1, rt0.c2 HAVING ((((JULIANDAY(rt0.c3, GROUP_CONCAT(0X2af3408), rt0.c0)) NOT BETWEEN (TOTAL(TOTAL(rt0.c0))) AND (((COUNT(*)) BETWEEN (AVG(MIN(MIN(rt0.c1)))) AND (SUM('1504949415')))))) ISNULL);
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE ((CAST(rt0.c2 AS REAL) IN ())) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT ((CAST(rt0.c2 AS REAL) IN ())))) UNION ALL SELECT * FROM rt0 WHERE ((((CAST(rt0.c2 AS REAL) IN ())) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT t1.c1, rt0.c1 FROM t1, rt0;
SELECT DISTINCT t1.c1, rt0.c1 FROM t1, rt0 WHERE (rt0.c2) UNION SELECT DISTINCT t1.c1, rt0.c1 FROM t1, rt0 WHERE ((NOT (rt0.c2))) UNION SELECT DISTINCT t1.c1, rt0.c1 FROM t1, rt0 WHERE (((rt0.c2) ISNULL));
SELECT DISTINCT t1.c1, rt0.c1 FROM t1, rt0;
SELECT ALL rt0.c2, t1.c1, rt0.c0, rt0.c1, rt0.c3 FROM rt0, t1 GROUP BY rt0.c2, t1.c1, rt0.c0, rt0.c1, rt0.c3;
SELECT ALL rt0.c2, t1.c1, rt0.c0, rt0.c1, rt0.c3 FROM rt0, t1 WHERE ((((rt0.c1)) BETWEEN ((((rt0.c2)<(rt0.c1)))) AND (((- (x'dadb')))))) GROUP BY rt0.c2, t1.c1, rt0.c0, rt0.c1, rt0.c3 UNION SELECT ALL rt0.c2, t1.c1, rt0.c0, rt0.c1, rt0.c3 FROM rt0, t1 WHERE ((NOT ((((rt0.c1)) BETWEEN ((((rt0.c2)<(rt0.c1)))) AND (((- (x'dadb')))))))) GROUP BY rt0.c2, t1.c1, rt0.c0, rt0.c1, rt0.c3 UNION SELECT ALL rt0.c2, t1.c1, rt0.c0, rt0.c1, rt0.c3 FROM rt0, t1 WHERE ((((((rt0.c1)) BETWEEN ((((rt0.c2)<(rt0.c1)))) AND (((- (x'dadb')))))) ISNULL)) GROUP BY rt0.c2, t1.c1, rt0.c0, rt0.c1, rt0.c3;
SELECT ALL rt0.c2, t1.c1, rt0.c0, rt0.c1, rt0.c3 FROM rt0, t1 GROUP BY rt0.c2, t1.c1, rt0.c0, rt0.c1, rt0.c3;
SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c1, rt0.c0;
SELECT ALL * FROM rt0;
SELECT * FROM rt0 WHERE (LENGTH(120490697)) UNION ALL SELECT * FROM rt0 WHERE ((NOT (LENGTH(120490697)))) UNION ALL SELECT ALL * FROM rt0 WHERE (((LENGTH(120490697)) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((((((((((((((rt0.c2)AND(rt0.c3)))AND(rt0.c2)))AND(rt0.c0)))OR(rt0.c1)))AND('-163199286')))OR(rt0.c2)))<>(IFNULL(DISTINCT rt0.c2, rt0.c0)))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((((((((((((((rt0.c2)AND(rt0.c3)))AND(rt0.c2)))AND(rt0.c0)))OR(rt0.c1)))AND('-163199286')))OR(rt0.c2)))<>(IFNULL(DISTINCT rt0.c2, rt0.c0)))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((((((((((((((rt0.c2)AND(rt0.c3)))AND(rt0.c2)))AND(rt0.c0)))OR(rt0.c1)))AND('-163199286')))OR(rt0.c2)))<>(IFNULL(DISTINCT rt0.c2, rt0.c0)))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL t1.c1 FROM t1 GROUP BY t1.c1;
SELECT ALL t1.c1 FROM t1 WHERE (t1.c1) GROUP BY t1.c1 UNION SELECT t1.c1 FROM t1 WHERE ((NOT (t1.c1))) GROUP BY t1.c1 UNION SELECT t1.c1 FROM t1 WHERE (((t1.c1) ISNULL)) GROUP BY t1.c1;
SELECT ALL t1.c1 FROM t1 GROUP BY t1.c1;
SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (((GROUP_CONCAT(COUNT(*)), COUNT(*), rt0.c0 COLLATE NOCASE))>=(('0X㯜鉆', TOTAL(MAX(rt0.c3)), AVG(COUNT(rt0.c2))))) UNION ALL SELECT ALL rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (NOT ((((GROUP_CONCAT(COUNT(*)), COUNT(*), rt0.c0 COLLATE NOCASE))>=(('0X㯜鉆', TOTAL(MAX(rt0.c3)), AVG(COUNT(rt0.c2))))))) UNION ALL SELECT rt0.c0 FROM rt0 GROUP BY rt0.c0 HAVING (((((GROUP_CONCAT(COUNT(*)), COUNT(*), rt0.c0 COLLATE NOCASE))>=(('0X㯜鉆', TOTAL(MAX(rt0.c3)), AVG(COUNT(rt0.c2)))))) ISNULL);
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0;
SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((((rt0.c2)) BETWEEN ((((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c0)))) AND ((CASE rt0.c2  WHEN rt0.c3 THEN rt0.c2 END)))) UNION ALL SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT ((((rt0.c2)) BETWEEN ((((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c0)))) AND ((CASE rt0.c2  WHEN rt0.c3 THEN rt0.c2 END)))))) UNION ALL SELECT ALL rt0.c0, rt0.c1, rt0.c2 FROM rt0 WHERE ((((((rt0.c2)) BETWEEN ((((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c0)))) AND ((CASE rt0.c2  WHEN rt0.c3 THEN rt0.c2 END)))) ISNULL));
SELECT rt0.c0, rt0.c1, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c0, t1.c1, rt0.c2 FROM t1, rt0;
SELECT DISTINCT rt0.c0, t1.c1, rt0.c2 FROM t1, rt0 WHERE (((((t1.c1)AND((((rt0.c0))<>((rt0.c2))))))OR(((((((((rt0.c2)OR(rt0.c3)))AND(rt0.c2)))AND(rt0.c0)))OR(rt0.c0))))) UNION SELECT DISTINCT rt0.c0, t1.c1, rt0.c2 FROM t1, rt0 WHERE ((NOT (((((t1.c1)AND((((rt0.c0))!=((rt0.c2))))))OR(((((((((rt0.c2)OR(rt0.c3)))AND(rt0.c2)))AND(rt0.c0)))OR(rt0.c0))))))) UNION SELECT DISTINCT rt0.c0, t1.c1, rt0.c2 FROM t1, rt0 WHERE (((((((t1.c1)AND((((rt0.c0))!=((rt0.c2))))))OR(((((((((rt0.c2)OR(rt0.c3)))AND(rt0.c2)))AND(rt0.c0)))OR(rt0.c0))))) ISNULL));
SELECT DISTINCT rt0.c0, t1.c1, rt0.c2 FROM t1, rt0;
SELECT ALL rt0.c2, t1.c1, rt0.c1, rt0.c3 FROM t1, rt0 GROUP BY rt0.c2, t1.c1, rt0.c1, rt0.c3;
SELECT ALL rt0.c2, t1.c1, rt0.c1, rt0.c3 FROM t1, rt0 WHERE (CASE WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN rt0.c1 WHEN rt0.c2 THEN t1.c1 END COLLATE NOCASE) GROUP BY rt0.c2, t1.c1, rt0.c1, rt0.c3 UNION SELECT ALL rt0.c2, t1.c1, rt0.c1, rt0.c3 FROM t1, rt0 WHERE ((NOT (CASE WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN rt0.c1 WHEN rt0.c2 THEN t1.c1 END COLLATE NOCASE))) GROUP BY rt0.c2, t1.c1, rt0.c1, rt0.c3 UNION SELECT ALL rt0.c2, t1.c1, rt0.c1, rt0.c3 FROM t1, rt0 WHERE (((CASE WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN rt0.c1 WHEN rt0.c2 THEN t1.c1 END COLLATE NOCASE) ISNULL)) GROUP BY rt0.c2, t1.c1, rt0.c1, rt0.c3;
SELECT ALL rt0.c2, t1.c1, rt0.c1, rt0.c3 FROM t1, rt0 GROUP BY rt0.c2, t1.c1, rt0.c1, rt0.c3;
SELECT ALL rt0.c3, rt0.c2 FROM rt0 GROUP BY rt0.c3, rt0.c2;
SELECT ALL rt0.c3, rt0.c2 FROM rt0 GROUP BY rt0.c3, rt0.c2 HAVING AVG(((((rt0.c0)OR(MIN(rt0.c3))))AND(rt0.c2))) UNION ALL SELECT ALL rt0.c3, rt0.c2 FROM rt0 GROUP BY rt0.c3, rt0.c2 HAVING (NOT (AVG(((((rt0.c0)OR(MIN(rt0.c3))))AND(rt0.c2))))) UNION ALL SELECT rt0.c3, rt0.c2 FROM rt0 GROUP BY rt0.c3, rt0.c2 HAVING ((AVG(((((rt0.c0)OR(MIN(rt0.c3))))AND(rt0.c2)))) ISNULL);
SELECT ALL rt0.c0, rt0.c3 FROM rt0;
SELECT rt0.c0, rt0.c3 FROM rt0 WHERE (((((rt0.c2)<>(rt0.c2)))/(CAST(rt0.c3 AS TEXT)))) UNION ALL SELECT rt0.c0, rt0.c3 FROM rt0 WHERE ((NOT (((((rt0.c2)!=(rt0.c2)))/(CAST(rt0.c3 AS TEXT)))))) UNION ALL SELECT ALL rt0.c0, rt0.c3 FROM rt0 WHERE (((((((rt0.c2)!=(rt0.c2)))/(CAST(rt0.c3 AS TEXT)))) ISNULL));
SELECT ALL rt0.c0, rt0.c3 FROM rt0;
SELECT DISTINCT t1.c1 FROM t1;
SELECT DISTINCT t1.c1 FROM t1 WHERE ((((t1.c1))<>((t1.c1))) COLLATE RTRIM) UNION SELECT DISTINCT t1.c1 FROM t1 WHERE ((NOT ((((t1.c1))!=((t1.c1))) COLLATE RTRIM))) UNION SELECT DISTINCT t1.c1 FROM t1 WHERE ((((((t1.c1))<>((t1.c1))) COLLATE RTRIM) ISNULL));
SELECT DISTINCT t1.c1 FROM t1;
SELECT rt0.c1, rt0.c3, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c3, rt0.c2;
SELECT rt0.c1, rt0.c3, rt0.c2 FROM rt0 WHERE ((((rt0.c0 COLLATE NOCASE, ((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c2)), CASE WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c3 END))>=((((rt0.c0)||(rt0.c2)), (((rt0.c3, rt0.c2, rt0.c1)) BETWEEN ((rt0.c2, rt0.c2, rt0.c2)) AND ((0.7322390365628425, rt0.c2, rt0.c0))), rt0.c0 COLLATE RTRIM)))) GROUP BY rt0.c1, rt0.c3, rt0.c2 UNION SELECT rt0.c1, rt0.c3, rt0.c2 FROM rt0 WHERE ((NOT ((((rt0.c0 COLLATE NOCASE, ((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c2)), CASE WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c3 END))>=((((rt0.c0)||(rt0.c2)), (((rt0.c3, rt0.c2, rt0.c1)) BETWEEN ((rt0.c2, rt0.c2, rt0.c2)) AND ((0.7322390365628425, rt0.c2, rt0.c0))), rt0.c0 COLLATE RTRIM)))))) GROUP BY rt0.c1, rt0.c3, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c3, rt0.c2 FROM rt0 WHERE ((((((rt0.c0 COLLATE NOCASE, ((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c2)), CASE WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c3 END))>=((((rt0.c0)||(rt0.c2)), (((rt0.c3, rt0.c2, rt0.c1)) BETWEEN ((rt0.c2, rt0.c2, rt0.c2)) AND ((0.7322390365628425, rt0.c2, rt0.c0))), rt0.c0 COLLATE RTRIM)))) ISNULL)) GROUP BY rt0.c1, rt0.c3, rt0.c2;
SELECT rt0.c1, rt0.c3, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c3, rt0.c2;
SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING COUNT(((GROUP_CONCAT(rt0.c3)) ISNULL)) UNION ALL SELECT rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING (NOT (COUNT(((GROUP_CONCAT(rt0.c3)) ISNULL)))) UNION ALL SELECT ALL rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c1, rt0.c2 HAVING ((COUNT(((GROUP_CONCAT(rt0.c3)) ISNULL))) ISNULL);
SELECT ALL t1.c1 FROM t1;
SELECT t1.c1 FROM t1 WHERE (CAST((t1.c1 IN ('1341674489')) AS TEXT)) UNION ALL SELECT t1.c1 FROM t1 WHERE ((NOT (CAST((t1.c1 IN ('1341674489')) AS TEXT)))) UNION ALL SELECT ALL t1.c1 FROM t1 WHERE (((CAST((t1.c1 IN ('1341674489')) AS TEXT)) ISNULL));
SELECT ALL t1.c1 FROM t1;
SELECT DISTINCT * FROM rt0, t1;
SELECT DISTINCT * FROM rt0, t1 WHERE (((rt0.c0)%('RyS琁~'))) UNION SELECT DISTINCT * FROM rt0, t1 WHERE ((NOT (((rt0.c0)%('RyS琁~'))))) UNION SELECT DISTINCT * FROM rt0, t1 WHERE (((((rt0.c0)%('RyS琁~'))) ISNULL));
SELECT DISTINCT * FROM rt0, t1;
SELECT ALL rt0.c1 FROM t1, rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM t1, rt0 WHERE (STRFTIME(((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c0)), rt0.c1 COLLATE NOCASE, ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c1)))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM t1, rt0 WHERE ((NOT (STRFTIME(((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c0)), rt0.c1 COLLATE NOCASE, ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c1)))))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM t1, rt0 WHERE (((STRFTIME(((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c0)), rt0.c1 COLLATE NOCASE, ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c1)))) ISNULL)) GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM t1, rt0 GROUP BY rt0.c1;
SELECT rt0.c0 FROM t1, rt0 GROUP BY rt0.c0;
SELECT rt0.c0 FROM t1, rt0 GROUP BY rt0.c0 HAVING ((((TOTAL(TOTAL(rt0.c1))) NOTNULL))/(MAX(COUNT(*)))) UNION ALL SELECT ALL rt0.c0 FROM t1, rt0 GROUP BY rt0.c0 HAVING (NOT (((((TOTAL(TOTAL(rt0.c1))) NOTNULL))/(MAX(COUNT(*)))))) UNION ALL SELECT rt0.c0 FROM t1, rt0 NOT INDEXED GROUP BY rt0.c0 HAVING ((((((TOTAL(TOTAL(rt0.c1))) NOTNULL))/(MAX(COUNT(*))))) ISNULL);
SELECT ALL MAX(CAST((((t1.c1))>=((t1.c1))) AS INTEGER)) FROM t1 ORDER BY t1.c1 DESC  NULLS FIRST, 0.9628506755606923 DESC;
SELECT ALL * FROM t1 NATURAL JOIN rt0;
SELECT * FROM t1 NATURAL JOIN rt0 WHERE ((('ᨇk') NOTNULL)) UNION ALL SELECT ALL * FROM t1 NATURAL JOIN rt0 WHERE ((NOT ((('ᨇk') NOTNULL)))) UNION ALL SELECT ALL * FROM t1 NATURAL JOIN rt0 WHERE ((((('ᨇk') NOTNULL)) ISNULL));
SELECT ALL * FROM t1 NATURAL JOIN rt0;
SELECT DISTINCT t1.c1 FROM t1;
SELECT DISTINCT t1.c1 FROM t1 WHERE (CASE json_object(t1.c1, t1.c1, t1.c1, t1.c1)  WHEN t1.c1 COLLATE RTRIM THEN '≒YM~' WHEN (((t1.c1, t1.c1, t1.c1)) NOT BETWEEN ((t1.c1, t1.c1, t1.c1)) AND ((t1.c1, t1.c1, t1.c1))) THEN CASE t1.c1  WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c1 ELSE t1.c1 END WHEN NULLIF(t1.c1, t1.c1) THEN (NOT (t1.c1)) ELSE (~ (t1.c1)) END) UNION SELECT DISTINCT t1.c1 FROM t1 WHERE ((NOT (CASE json_object(t1.c1, t1.c1, t1.c1, t1.c1)  WHEN t1.c1 COLLATE RTRIM THEN '≒YM~' WHEN (((t1.c1, t1.c1, t1.c1)) NOT BETWEEN ((t1.c1, t1.c1, t1.c1)) AND ((t1.c1, t1.c1, t1.c1))) THEN CASE t1.c1  WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c1 ELSE t1.c1 END WHEN NULLIF(t1.c1, t1.c1) THEN (NOT (t1.c1)) ELSE (~ (t1.c1)) END))) UNION SELECT DISTINCT t1.c1 FROM t1 NOT INDEXED WHERE (((CASE json_object(t1.c1, t1.c1, t1.c1, t1.c1)  WHEN t1.c1 COLLATE RTRIM THEN '≒YM~' WHEN (((t1.c1, t1.c1, t1.c1)) NOT BETWEEN ((t1.c1, t1.c1, t1.c1)) AND ((t1.c1, t1.c1, t1.c1))) THEN CASE t1.c1  WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c1 ELSE t1.c1 END WHEN NULLIF(t1.c1, t1.c1) THEN (NOT (t1.c1)) ELSE (~ (t1.c1)) END) ISNULL));
SELECT DISTINCT t1.c1 FROM t1;
SELECT ALL t1.c1 FROM t1, rt0 GROUP BY t1.c1;
SELECT ALL t1.c1 FROM t1, rt0 WHERE (((x'')>>(rt0.c2))) GROUP BY t1.c1 UNION SELECT t1.c1 FROM t1, rt0 WHERE ((NOT (((x'')>>(rt0.c2))))) GROUP BY t1.c1 UNION SELECT ALL t1.c1 FROM t1, rt0 WHERE (((((x'')>>(rt0.c2))) ISNULL)) GROUP BY t1.c1;
SELECT ALL t1.c1 FROM t1, rt0 GROUP BY t1.c1;
SELECT rt0.c1, rt0.c0 FROM rt0, t1 GROUP BY rt0.c1, rt0.c0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0, t1 GROUP BY rt0.c1, rt0.c0 HAVING COUNT(*) UNION ALL SELECT rt0.c1, rt0.c0 FROM rt0, t1 GROUP BY rt0.c1, rt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c1, rt0.c0 FROM rt0, t1 GROUP BY rt0.c1, rt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c1, rt0.c0 FROM rt0, t1 GROUP BY rt0.c1, rt0.c0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0, t1 GROUP BY rt0.c1, rt0.c0 HAVING COUNT(*) UNION ALL SELECT rt0.c1, rt0.c0 FROM rt0, t1 GROUP BY rt0.c1, rt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT rt0.c1, rt0.c0 FROM rt0, t1 GROUP BY rt0.c1, rt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c1, rt0.c0 FROM rt0, t1 GROUP BY rt0.c1, rt0.c0;
SELECT t1.c1 FROM t1;
SELECT ALL t1.c1 FROM t1 WHERE (CASE highlight(t1.c1, t1.c1, NULL, t1.c1)  WHEN ((t1.c1)+(t1.c1)) THEN (t1.c1 IN ()) ELSE ABS(t1.c1) END) UNION ALL SELECT ALL t1.c1 FROM t1 WHERE ((NOT (CASE highlight(t1.c1, t1.c1, NULL, t1.c1)  WHEN ((t1.c1)+(t1.c1)) THEN (t1.c1 IN ()) ELSE ABS(t1.c1) END))) UNION ALL SELECT t1.c1 FROM t1 WHERE (((CASE highlight(t1.c1, t1.c1, NULL, t1.c1)  WHEN ((t1.c1)+(t1.c1)) THEN (t1.c1 IN ()) ELSE ABS(t1.c1) END) ISNULL));
SELECT DISTINCT * FROM t1, rt0;
SELECT DISTINCT * FROM t1, rt0 WHERE ((NOT (rt0.c1)) COLLATE NOCASE) UNION SELECT DISTINCT * FROM t1, rt0 WHERE ((NOT ((NOT (rt0.c1)) COLLATE NOCASE))) UNION SELECT DISTINCT * FROM t1, rt0 WHERE ((((NOT (rt0.c1)) COLLATE NOCASE) ISNULL));
SELECT DISTINCT * FROM t1, rt0;
SELECT t1.c1 FROM t1 GROUP BY t1.c1;
SELECT ALL t1.c1 FROM t1 WHERE (x'b2cb') GROUP BY t1.c1 UNION SELECT ALL t1.c1 FROM t1 WHERE ((NOT (x'b2cb'))) GROUP BY t1.c1 UNION SELECT t1.c1 FROM t1 WHERE (((x'b2cb') ISNULL)) GROUP BY t1.c1;
SELECT t1.c1 FROM t1 GROUP BY t1.c1;
SELECT rt0.c3, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c3, rt0.c2, rt0.c0;
SELECT rt0.c3, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c3, rt0.c2, rt0.c0 HAVING 0x269790e6 UNION ALL SELECT ALL rt0.c3, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c3, rt0.c2, rt0.c0 HAVING (NOT (0X269790e6)) UNION ALL SELECT rt0.c3, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c3, rt0.c2, rt0.c0 HAVING ((0x269790e6) ISNULL);
SELECT rt0.c3, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c3, rt0.c2, rt0.c0;
SELECT rt0.c3, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c3, rt0.c2, rt0.c0 HAVING 0x269790e6 UNION ALL SELECT ALL rt0.c3, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c3, rt0.c2, rt0.c0 HAVING (NOT (0X269790e6)) UNION ALL SELECT rt0.c3, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c3, rt0.c2, rt0.c0 HAVING ((0x269790e6) ISNULL);
SELECT rt0.c3, rt0.c2, rt0.c0 FROM rt0 GROUP BY rt0.c3, rt0.c2, rt0.c0;
SELECT ALL t1.c1, rt0.c2 FROM rt0, t1;
SELECT ALL t1.c1, rt0.c2 FROM rt0, t1 WHERE (rt0.c3) UNION ALL SELECT ALL t1.c1, rt0.c2 FROM rt0, t1 WHERE ((NOT (rt0.c3))) UNION ALL SELECT ALL t1.c1, rt0.c2 FROM rt0, t1 WHERE (((rt0.c3) ISNULL));
SELECT ALL t1.c1, rt0.c2 FROM rt0, t1;
SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0, t1;
SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0, t1 WHERE (((((rt0.c0)IS(rt0.c2))) ISNULL)) UNION SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0, t1 WHERE ((NOT (((((rt0.c0)IS(rt0.c2))) ISNULL)))) UNION SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0, t1 WHERE (((((((rt0.c0)IS(rt0.c2))) ISNULL)) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c0 FROM rt0, t1;
SELECT ALL rt0.c2, rt0.c3, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c3, rt0.c1, rt0.c0;
SELECT ALL rt0.c2, rt0.c3, rt0.c1, rt0.c0 FROM rt0 WHERE ((((~ (NULL))) NOTNULL)) GROUP BY rt0.c2, rt0.c3, rt0.c1, rt0.c0 UNION SELECT rt0.c2, rt0.c3, rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT ((((~ (NULL))) NOTNULL)))) GROUP BY rt0.c2, rt0.c3, rt0.c1, rt0.c0 UNION SELECT rt0.c2, rt0.c3, rt0.c1, rt0.c0 FROM rt0 WHERE ((((((~ (NULL))) NOTNULL)) ISNULL)) GROUP BY rt0.c2, rt0.c3, rt0.c1, rt0.c0;
SELECT ALL rt0.c2, rt0.c3, rt0.c1, rt0.c0 FROM rt0 GROUP BY rt0.c2, rt0.c3, rt0.c1, rt0.c0;
SELECT t1.c1, rt0.c3 FROM t1, rt0 GROUP BY t1.c1, rt0.c3;
SELECT ALL t1.c1, rt0.c3 FROM t1, rt0 GROUP BY t1.c1, rt0.c3 HAVING COUNT(COUNT(rt0.c2)) UNION ALL SELECT t1.c1, rt0.c3 FROM t1, rt0 GROUP BY t1.c1, rt0.c3 HAVING (NOT (COUNT(COUNT(rt0.c2)))) UNION ALL SELECT t1.c1, rt0.c3 FROM t1, rt0 GROUP BY t1.c1, rt0.c3 HAVING ((COUNT(COUNT(rt0.c2))) ISNULL);
SELECT rt0.c1, rt0.c3, t1.c1 FROM t1 FULL OUTER JOIN rt0 ON NULLIF(((rt0.c0) NOTNULL), CAST('m6h#LP_Iu' AS NUMERIC));
SELECT rt0.c1, rt0.c3, t1.c1 FROM t1 FULL OUTER JOIN rt0 ON NULLIF(((rt0.c0) NOTNULL), CAST('m6h#LP_Iu' AS NUMERIC)) WHERE (LAST_INSERT_ROWID()) UNION ALL SELECT rt0.c1, rt0.c3, t1.c1 FROM t1 FULL OUTER JOIN rt0 ON NULLIF(((rt0.c0) NOTNULL), CAST('m6h#LP_Iu' AS NUMERIC)) WHERE ((NOT (LAST_INSERT_ROWID()))) UNION ALL SELECT ALL rt0.c1, rt0.c3, t1.c1 FROM t1 FULL OUTER JOIN rt0 ON NULLIF(((rt0.c0) NOTNULL), CAST('m6h#LP_Iu' AS NUMERIC)) WHERE (((LAST_INSERT_ROWID()) ISNULL));
SELECT rt0.c1, rt0.c3, t1.c1 FROM t1 FULL OUTER JOIN rt0 ON NULLIF(((rt0.c0) NOTNULL), CAST('m6h#LP_Iu' AS NUMERIC));
SELECT DISTINCT * FROM t1;
SELECT DISTINCT * FROM t1 WHERE (((CAST(t1.c1 AS INTEGER))IS NOT((((0.6889191897620325))>=((t1.c1)))))) UNION SELECT DISTINCT * FROM t1 WHERE ((NOT (((CAST(t1.c1 AS INTEGER))IS NOT((((0.6889191897620325))>=((t1.c1)))))))) UNION SELECT DISTINCT * FROM t1 WHERE (((((CAST(t1.c1 AS INTEGER))IS NOT((((0.6889191897620325))>=((t1.c1)))))) ISNULL));
SELECT DISTINCT * FROM t1;
SELECT ALL rt0.c2, rt0.c3, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c3, rt0.c0, rt0.c1;
SELECT rt0.c2, rt0.c3, rt0.c0, rt0.c1 FROM rt0 WHERE (((rt0.c3)>>(rt0.c2)) COLLATE BINARY) GROUP BY rt0.c2, rt0.c3, rt0.c0, rt0.c1 UNION SELECT rt0.c2, rt0.c3, rt0.c0, rt0.c1 FROM rt0 WHERE ((NOT (((rt0.c3)>>(rt0.c2)) COLLATE BINARY))) GROUP BY rt0.c2, rt0.c3, rt0.c0, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c3, rt0.c0, rt0.c1 FROM rt0 WHERE (((((rt0.c3)>>(rt0.c2)) COLLATE BINARY) ISNULL)) GROUP BY rt0.c2, rt0.c3, rt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c3, rt0.c0, rt0.c1 FROM rt0 GROUP BY rt0.c2, rt0.c3, rt0.c0, rt0.c1;
SELECT ALL rt0.c3, rt0.c1 FROM rt0 GROUP BY rt0.c3, rt0.c1;
SELECT rt0.c3, rt0.c1 FROM rt0 GROUP BY rt0.c3, rt0.c1 HAVING MIN(AVG(MAX(MIN(rt0.c2)))) UNION ALL SELECT rt0.c3, rt0.c1 FROM rt0 GROUP BY rt0.c3, rt0.c1 HAVING (NOT (MIN(AVG(MAX(MIN(rt0.c2)))))) UNION ALL SELECT ALL rt0.c3, rt0.c1 FROM rt0 GROUP BY rt0.c3, rt0.c1 HAVING ((MIN(AVG(MAX(MIN(rt0.c2))))) ISNULL);
SELECT ALL rt0.c2, rt0.c1, rt0.c3, rt0.c0 FROM t1, rt0;
SELECT rt0.c2, rt0.c1, rt0.c3, rt0.c0 FROM t1, rt0 WHERE (CAST(((rt0.c0) IS FALSE) AS BLOB)) UNION ALL SELECT rt0.c2, rt0.c1, rt0.c3, rt0.c0 FROM t1, rt0 WHERE ((NOT (CAST(((rt0.c0) IS FALSE) AS BLOB)))) UNION ALL SELECT ALL rt0.c2, rt0.c1, rt0.c3, rt0.c0 FROM t1, rt0 WHERE (((CAST(((rt0.c0) IS FALSE) AS BLOB)) ISNULL));
SELECT ALL rt0.c2, rt0.c1, rt0.c3, rt0.c0 FROM t1, rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (rt0.c1) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (rt0.c1))) UNION SELECT DISTINCT * FROM rt0 WHERE (((rt0.c1) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 NOT INDEXED GROUP BY rt0.c1, rt0.c2;
SELECT rt0.c1, rt0.c2 FROM rt0 WHERE ((((rt0.c2 IN (rt0.c0)))<((- (rt0.c3))))) GROUP BY rt0.c1, rt0.c2 UNION SELECT rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT ((((rt0.c2 IN (rt0.c0)))<((- (rt0.c3))))))) GROUP BY rt0.c1, rt0.c2 UNION SELECT ALL rt0.c1, rt0.c2 FROM rt0 WHERE ((((((rt0.c2 IN (rt0.c0)))<((- (rt0.c3))))) ISNULL)) GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c1, rt0.c2 FROM rt0 NOT INDEXED GROUP BY rt0.c1, rt0.c2;
SELECT ALL rt0.c0 FROM rt0 CROSS JOIN t1 ON (((rt0.c3 IN ())) NOT NULL) GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM rt0 CROSS JOIN t1 ON (((rt0.c3 IN ())) NOT NULL) GROUP BY rt0.c0 HAVING (((((((((MIN(SUM(COUNT(COUNT(COUNT(AVG(TOTAL(0.45169443876337556))))))) IN ()))OR(((SUM(COUNT(*))) NOT NULL))))AND(GROUP_CONCAT(rt0.c0))))AND(((rt0.c1) IS TRUE))))OR(TOTAL(rt0.c0))) UNION ALL SELECT rt0.c0 FROM rt0 CROSS JOIN t1 ON (((rt0.c3 IN ())) NOT NULL) GROUP BY rt0.c0 HAVING (NOT ((((((((((MIN(SUM(COUNT(COUNT(COUNT(AVG(TOTAL(0.45169443876337556))))))) IN ()))OR(((SUM(COUNT(*))) NOT NULL))))AND(GROUP_CONCAT(rt0.c0))))AND(((rt0.c1) IS TRUE))))OR(TOTAL(rt0.c0))))) UNION ALL SELECT ALL rt0.c0 FROM rt0 CROSS JOIN t1 ON (((rt0.c3 IN ())) NOT NULL) GROUP BY rt0.c0 HAVING (((((((((((MIN(SUM(COUNT(COUNT(COUNT(AVG(TOTAL(0.45169443876337556))))))) IN ()))OR(((SUM(COUNT(*))) NOT NULL))))AND(GROUP_CONCAT(rt0.c0))))AND(((rt0.c1) IS TRUE))))OR(TOTAL(rt0.c0)))) ISNULL);
SELECT ALL rt0.c2 FROM rt0, t1 NOT INDEXED;
SELECT ALL rt0.c2 FROM rt0, t1 WHERE (NULLIF(DISTINCT rt0.c1, rt0.c0) COLLATE RTRIM) UNION ALL SELECT rt0.c2 FROM rt0, t1 WHERE ((NOT (NULLIF(DISTINCT rt0.c1, rt0.c0) COLLATE RTRIM))) UNION ALL SELECT ALL rt0.c2 FROM rt0, t1 WHERE (((NULLIF(DISTINCT rt0.c1, rt0.c0) COLLATE RTRIM) ISNULL));
SELECT ALL rt0.c2 FROM rt0, t1 NOT INDEXED;
SELECT DISTINCT rt0.c3, rt0.c1 FROM rt0, t1;
SELECT DISTINCT rt0.c3, rt0.c1 FROM rt0, t1 WHERE (CAST(LOWER(DISTINCT rt0.c3) AS INTEGER)) UNION SELECT DISTINCT rt0.c3, rt0.c1 FROM rt0, t1 WHERE ((NOT (CAST(LOWER(DISTINCT rt0.c3) AS INTEGER)))) UNION SELECT DISTINCT rt0.c3, rt0.c1 FROM rt0, t1 WHERE (((CAST(LOWER(DISTINCT rt0.c3) AS INTEGER)) ISNULL));
SELECT DISTINCT rt0.c3, rt0.c1 FROM rt0, t1;
SELECT rt0.c0, rt0.c1 FROM t1, rt0 GROUP BY rt0.c0, rt0.c1;
SELECT ALL rt0.c0, rt0.c1 FROM t1, rt0 WHERE (((-1.7976931348623157E308)+(CAST(rt0.c3 AS TEXT)))) GROUP BY rt0.c0, rt0.c1 UNION SELECT rt0.c0, rt0.c1 FROM t1, rt0 WHERE ((NOT (((-1.7976931348623157E308)+(CAST(rt0.c3 AS TEXT)))))) GROUP BY rt0.c0, rt0.c1 UNION SELECT rt0.c0, rt0.c1 FROM t1, rt0 WHERE (((((-1.7976931348623157E308)+(CAST(rt0.c3 AS TEXT)))) ISNULL)) GROUP BY rt0.c0, rt0.c1;
SELECT rt0.c0, rt0.c1 FROM t1, rt0 GROUP BY rt0.c0, rt0.c1;
SELECT t1.c1 FROM t1 GROUP BY t1.c1;
SELECT t1.c1 FROM t1 GROUP BY t1.c1 HAVING (COUNT(t1.c1) IN ()) UNION ALL SELECT ALL t1.c1 FROM t1 GROUP BY t1.c1 HAVING (NOT ((COUNT(t1.c1) IN ()))) UNION ALL SELECT ALL t1.c1 FROM t1 GROUP BY t1.c1 HAVING (((COUNT(t1.c1) IN ())) ISNULL);
SELECT t1.c1 FROM t1 GROUP BY t1.c1;
SELECT t1.c1 FROM t1 GROUP BY t1.c1 HAVING (COUNT(t1.c1) IN ()) UNION ALL SELECT ALL t1.c1 FROM t1 GROUP BY t1.c1 HAVING (NOT ((COUNT(t1.c1) IN ()))) UNION ALL SELECT ALL t1.c1 FROM t1 GROUP BY t1.c1 HAVING (((COUNT(t1.c1) IN ())) ISNULL);
SELECT t1.c1 FROM t1 GROUP BY t1.c1;
SELECT ALL rt0.c3, t1.c1, rt0.c0, rt0.c2 FROM t1 NOT INDEXED, rt0;
SELECT rt0.c3, t1.c1, rt0.c0, rt0.c2 FROM t1, rt0 WHERE (((HEX('')) NOT NULL)) UNION ALL SELECT rt0.c3, t1.c1, rt0.c0, rt0.c2 FROM t1, rt0 WHERE ((NOT (((HEX('')) NOT NULL)))) UNION ALL SELECT rt0.c3, t1.c1, rt0.c0, rt0.c2 FROM t1, rt0 WHERE (((((HEX('')) NOT NULL)) ISNULL));
SELECT ALL rt0.c3, t1.c1, rt0.c0, rt0.c2 FROM t1 NOT INDEXED, rt0;
SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0, t1;
SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0, t1 WHERE ((('j#B9fH') NOT BETWEEN (rt0.c3) AND (((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2))))) UNION SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0, t1 WHERE ((NOT ((('j#B9fH') NOT BETWEEN (rt0.c3) AND (((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2))))))) UNION SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0, t1 WHERE ((((('j#B9fH') NOT BETWEEN (rt0.c3) AND (((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2))))) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0, t1;
SELECT ALL rt0.c2 FROM t1, rt0 GROUP BY rt0.c2;
SELECT rt0.c2 FROM t1, rt0 WHERE ((((rt0.c3)) NOT BETWEEN (((- (rt0.c3)))) AND ((rt0.c0)))) GROUP BY rt0.c2 UNION SELECT ALL rt0.c2 FROM t1, rt0 WHERE ((NOT ((((rt0.c3)) NOT BETWEEN (((- (rt0.c3)))) AND ((rt0.c0)))))) GROUP BY rt0.c2 UNION SELECT rt0.c2 FROM t1, rt0 WHERE ((((((rt0.c3)) NOT BETWEEN (((- (rt0.c3)))) AND ((rt0.c0)))) ISNULL)) GROUP BY rt0.c2;
SELECT ALL rt0.c2 FROM t1, rt0 GROUP BY rt0.c2;
SELECT t1.c1 FROM rt0, t1 GROUP BY t1.c1;
SELECT ALL t1.c1 FROM rt0, t1 GROUP BY t1.c1 HAVING CAST(((MIN(SUM(GROUP_CONCAT(MIN(rt0.c2)))))%(NULL)) AS REAL) UNION ALL SELECT t1.c1 FROM rt0, t1 GROUP BY t1.c1 HAVING (NOT (CAST(((MIN(SUM(GROUP_CONCAT(MIN(rt0.c2)))))%(NULL)) AS REAL))) UNION ALL SELECT ALL t1.c1 FROM rt0, t1 GROUP BY t1.c1 HAVING ((CAST(((MIN(SUM(GROUP_CONCAT(MIN(rt0.c2)))))%(NULL)) AS REAL)) ISNULL);
SELECT ALL t1.c1, rt0.c1, rt0.c3 FROM t1, rt0;
SELECT ALL t1.c1, rt0.c1, rt0.c3 FROM t1, rt0 WHERE (((rt0.c1) NOTNULL)) UNION ALL SELECT ALL t1.c1, rt0.c1, rt0.c3 FROM t1, rt0 WHERE ((NOT (((rt0.c1) NOTNULL)))) UNION ALL SELECT t1.c1, rt0.c1, rt0.c3 FROM t1, rt0 WHERE (((((rt0.c1) NOTNULL)) ISNULL));
SELECT ALL t1.c1, rt0.c1, rt0.c3 FROM t1, rt0;
SELECT DISTINCT rt0.c0, t1.c1, rt0.c1 FROM t1 INNER JOIN rt0 ON CASE WHEN (rt0.c2 IN (rt0.c3)) THEN CAST(rt0.c3 AS REAL) ELSE TRIM(DISTINCT t1.c1) END;
SELECT DISTINCT rt0.c0, t1.c1, rt0.c1 FROM t1 INNER JOIN rt0 ON CASE WHEN (rt0.c2 IN (rt0.c3)) THEN CAST(rt0.c3 AS REAL) ELSE TRIM(DISTINCT t1.c1) END WHERE (((CASE 0x7498d87d  WHEN rt0.c3 THEN rt0.c1 END) IS FALSE)) UNION SELECT DISTINCT rt0.c0, t1.c1, rt0.c1 FROM t1 INNER JOIN rt0 ON CASE WHEN (rt0.c2 IN (rt0.c3)) THEN CAST(rt0.c3 AS REAL) ELSE TRIM(DISTINCT t1.c1) END WHERE ((NOT (((CASE 0X7498d87d  WHEN rt0.c3 THEN rt0.c1 END) IS FALSE)))) UNION SELECT DISTINCT rt0.c0, t1.c1, rt0.c1 FROM t1 INNER JOIN rt0 ON CASE WHEN (rt0.c2 IN (rt0.c3)) THEN CAST(rt0.c3 AS REAL) ELSE TRIM(DISTINCT t1.c1) END WHERE (((((CASE 0X7498d87d  WHEN rt0.c3 THEN rt0.c1 END) IS FALSE)) ISNULL));
SELECT DISTINCT rt0.c0, t1.c1, rt0.c1 FROM t1 INNER JOIN rt0 ON CASE WHEN (rt0.c2 IN (rt0.c3)) THEN CAST(rt0.c3 AS REAL) ELSE TRIM(DISTINCT t1.c1) END;
SELECT t1.c1 FROM t1 GROUP BY t1.c1;
SELECT t1.c1 FROM t1 WHERE (CASE (~ (t1.c1))  WHEN (((0.16644450187078175)) BETWEEN ((t1.c1)) AND ((x''))) THEN ((t1.c1) NOT NULL) ELSE t1.c1 COLLATE RTRIM END) GROUP BY t1.c1 UNION SELECT ALL t1.c1 FROM t1 WHERE ((NOT (CASE (~ (t1.c1))  WHEN (((0.16644450187078175)) BETWEEN ((t1.c1)) AND ((x''))) THEN ((t1.c1) NOT NULL) ELSE t1.c1 COLLATE RTRIM END))) GROUP BY t1.c1 UNION SELECT t1.c1 FROM t1 WHERE (((CASE (~ (t1.c1))  WHEN (((0.16644450187078175)) BETWEEN ((t1.c1)) AND ((x''))) THEN ((t1.c1) NOT NULL) ELSE t1.c1 COLLATE RTRIM END) ISNULL)) GROUP BY t1.c1;
SELECT t1.c1 FROM t1 GROUP BY t1.c1;
SELECT rt0.c2, rt0.c1 FROM rt0 RIGHT OUTER JOIN t1 ON (((((rt0.c1)|(rt0.c3))))>=(('1341674489'))) GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c2, rt0.c1 FROM rt0 RIGHT OUTER JOIN t1 ON (((((rt0.c1)|(rt0.c3))))>=(('1341674489'))) GROUP BY rt0.c2, rt0.c1 HAVING (((t1.c1))<((HEX(t1.c1)))) UNION ALL SELECT rt0.c2, rt0.c1 FROM rt0 RIGHT OUTER JOIN t1 ON (((((rt0.c1)|(rt0.c3))))>=(('1341674489'))) GROUP BY rt0.c2, rt0.c1 HAVING (NOT ((((t1.c1))<((HEX(t1.c1)))))) UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM rt0 RIGHT OUTER JOIN t1 ON (((((rt0.c1)|(rt0.c3))))>=(('1341674489'))) GROUP BY rt0.c2, rt0.c1 HAVING (((((t1.c1))<((HEX(t1.c1))))) ISNULL);
SELECT rt0.c2, rt0.c1 FROM rt0 RIGHT OUTER JOIN t1 ON (((((rt0.c1)|(rt0.c3))))>=(('1341674489'))) GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c2, rt0.c1 FROM rt0 RIGHT OUTER JOIN t1 ON (((((rt0.c1)|(rt0.c3))))>=(('1341674489'))) GROUP BY rt0.c2, rt0.c1 HAVING (((t1.c1))<((HEX(t1.c1)))) UNION ALL SELECT rt0.c2, rt0.c1 FROM rt0 RIGHT OUTER JOIN t1 ON (((((rt0.c1)|(rt0.c3))))>=(('1341674489'))) GROUP BY rt0.c2, rt0.c1 HAVING (NOT ((((t1.c1))<((HEX(t1.c1)))))) UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM rt0 RIGHT OUTER JOIN t1 ON (((((rt0.c1)|(rt0.c3))))>=(('1341674489'))) GROUP BY rt0.c2, rt0.c1 HAVING (((((t1.c1))<((HEX(t1.c1))))) ISNULL);
SELECT rt0.c2, rt0.c1 FROM rt0 RIGHT OUTER JOIN t1 ON (((((rt0.c1)|(rt0.c3))))>=(('1341674489'))) GROUP BY rt0.c2, rt0.c1;
SELECT ALL * FROM rt0;
SELECT * FROM rt0 WHERE (((((rt0.c3) NOT BETWEEN (rt0.c0) AND (rt0.c1))) IS TRUE)) UNION ALL SELECT * FROM rt0 WHERE ((NOT (((((rt0.c3) NOT BETWEEN (rt0.c0) AND (rt0.c1))) IS TRUE)))) UNION ALL SELECT * FROM rt0 WHERE (((((((rt0.c3) NOT BETWEEN (rt0.c0) AND (rt0.c1))) IS TRUE)) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT rt0.c2, rt0.c1, t1.c1 FROM t1, rt0;
SELECT DISTINCT rt0.c2, rt0.c1, t1.c1 FROM t1, rt0 WHERE ((- (INSTR(rt0.c3, rt0.c1)))) UNION SELECT DISTINCT rt0.c2, rt0.c1, t1.c1 FROM t1, rt0 WHERE ((NOT ((- (INSTR(rt0.c3, rt0.c1)))))) UNION SELECT DISTINCT rt0.c2, rt0.c1, t1.c1 FROM t1, rt0 WHERE ((((- (INSTR(rt0.c3, rt0.c1)))) ISNULL));
SELECT DISTINCT rt0.c2, rt0.c1, t1.c1 FROM t1, rt0;
SELECT t1.c1 FROM t1, rt0 GROUP BY t1.c1;
SELECT ALL t1.c1 FROM t1, rt0 NOT INDEXED WHERE (((((rt0.c2) IS FALSE))|(CASE WHEN rt0.c1 THEN rt0.c3 WHEN '0.8852291896520973' THEN rt0.c3 WHEN rt0.c3 THEN '1096841402' WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c3 END))) GROUP BY t1.c1 UNION SELECT t1.c1 FROM t1, rt0 WHERE ((NOT (((((rt0.c2) IS FALSE))|(CASE WHEN rt0.c1 THEN rt0.c3 WHEN '0.8852291896520973' THEN rt0.c3 WHEN rt0.c3 THEN '1096841402' WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c3 END))))) GROUP BY t1.c1 UNION SELECT ALL t1.c1 FROM t1, rt0 WHERE (((((((rt0.c2) IS FALSE))|(CASE WHEN rt0.c1 THEN rt0.c3 WHEN '0.8852291896520973' THEN rt0.c3 WHEN rt0.c3 THEN '1096841402' WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c3 END))) ISNULL)) GROUP BY t1.c1;
SELECT t1.c1 FROM t1, rt0 GROUP BY t1.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING GROUP_CONCAT(SUM(MIN(rt0.c2))) UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT (GROUP_CONCAT(SUM(MIN(rt0.c2))))) UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING ((GROUP_CONCAT(SUM(MIN(rt0.c2)))) ISNULL);
SELECT * FROM t1, rt0;
SELECT * FROM t1, rt0 WHERE (((((t1.c1) IS TRUE))LIKE('80740418'))) UNION ALL SELECT ALL * FROM t1, rt0 WHERE ((NOT (((((t1.c1) IS TRUE))LIKE('80740418'))))) UNION ALL SELECT * FROM t1, rt0 WHERE (((((((t1.c1) IS TRUE))LIKE('80740418'))) ISNULL));
SELECT * FROM t1, rt0;
SELECT DISTINCT * FROM t1;
SELECT DISTINCT * FROM t1 WHERE (t1.c1) UNION SELECT DISTINCT * FROM t1 WHERE ((NOT (t1.c1))) UNION SELECT DISTINCT * FROM t1 WHERE (((t1.c1) ISNULL));
SELECT DISTINCT * FROM t1;
SELECT rt0.c0, rt0.c3, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c3, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, rt0.c3, rt0.c1, rt0.c2 FROM rt0 WHERE ((((rt0.c1, rt0.c3, rt0.c3)) BETWEEN ((((rt0.c0)GLOB(rt0.c0)), rt0.c3, rt0.c0)) AND ((json_remove(rt0.c3, '-209725183', x'b867', '?u,ᜠ['), (~ (rt0.c1)), '')))) GROUP BY rt0.c0, rt0.c3, rt0.c1, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c3, rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT ((((rt0.c1, rt0.c3, rt0.c3)) BETWEEN ((((rt0.c0)GLOB(rt0.c0)), rt0.c3, rt0.c0)) AND ((json_remove(rt0.c3, '-209725183', x'b867', '?u,ᜠ['), (~ (rt0.c1)), '')))))) GROUP BY rt0.c0, rt0.c3, rt0.c1, rt0.c2 UNION SELECT rt0.c0, rt0.c3, rt0.c1, rt0.c2 FROM rt0 WHERE ((((((rt0.c1, rt0.c3, rt0.c3)) BETWEEN ((((rt0.c0)GLOB(rt0.c0)), rt0.c3, rt0.c0)) AND ((json_remove(rt0.c3, '-209725183', x'b867', '?u,ᜠ['), (~ (rt0.c1)), '')))) ISNULL)) GROUP BY rt0.c0, rt0.c3, rt0.c1, rt0.c2;
SELECT rt0.c0, t1.c1, rt0.c2, rt0.c3, rt0.c1 FROM t1, rt0 GROUP BY rt0.c0, t1.c1, rt0.c2, rt0.c3, rt0.c1;
SELECT rt0.c0, t1.c1, rt0.c2, rt0.c3, rt0.c1 FROM t1, rt0 GROUP BY rt0.c0, t1.c1, rt0.c2, rt0.c3, rt0.c1 HAVING (((GROUP_CONCAT(rt0.c3), GROUP_CONCAT(t1.c1), '''벓e''Br#n}')) BETWEEN ((COUNT(*), COUNT(*), COUNT(rt0.c2))) AND ((SUM(rt0.c3), COUNT(*), GROUP_CONCAT(MAX(TOTAL(rt0.c0)))))) UNION ALL SELECT ALL rt0.c0, t1.c1, rt0.c2, rt0.c3, rt0.c1 FROM t1, rt0 GROUP BY rt0.c0, t1.c1, rt0.c2, rt0.c3, rt0.c1 HAVING (NOT ((((GROUP_CONCAT(rt0.c3), GROUP_CONCAT(t1.c1), '''벓e''Br#n}')) BETWEEN ((COUNT(*), COUNT(*), COUNT(rt0.c2))) AND ((SUM(rt0.c3), COUNT(*), GROUP_CONCAT(MAX(TOTAL(rt0.c0)))))))) UNION ALL SELECT ALL rt0.c0, t1.c1, rt0.c2, rt0.c3, rt0.c1 FROM t1, rt0 GROUP BY rt0.c0, t1.c1, rt0.c2, rt0.c3, rt0.c1 HAVING (((((GROUP_CONCAT(rt0.c3), GROUP_CONCAT(t1.c1), '''벓e''Br#n}')) BETWEEN ((COUNT(*), COUNT(*), COUNT(rt0.c2))) AND ((SUM(rt0.c3), COUNT(*), GROUP_CONCAT(MAX(TOTAL(rt0.c0))))))) ISNULL);
SELECT * FROM t1;
SELECT ALL * FROM t1 WHERE (0.7309786459174252) UNION ALL SELECT * FROM t1 WHERE ((NOT (0.7309786459174252))) UNION ALL SELECT * FROM t1 WHERE (((0.7309786459174252) ISNULL));
SELECT * FROM t1;
SELECT DISTINCT * FROM t1;
SELECT DISTINCT * FROM t1 WHERE (CAST(((t1.c1)*(x'')) AS BLOB)) UNION SELECT DISTINCT * FROM t1 WHERE ((NOT (CAST(((t1.c1)*(x'')) AS BLOB)))) UNION SELECT DISTINCT * FROM t1 WHERE (((CAST(((t1.c1)*(x'')) AS BLOB)) ISNULL));
SELECT DISTINCT * FROM t1;
SELECT rt0.c3, rt0.c0, rt0.c2, rt0.c1, t1.c1 FROM rt0, t1 GROUP BY rt0.c3, rt0.c0, rt0.c2, rt0.c1, t1.c1;
SELECT rt0.c3, rt0.c0, rt0.c2, rt0.c1, t1.c1 FROM rt0, t1 WHERE (((((rt0.c0) IS TRUE)) NOTNULL)) GROUP BY rt0.c3, rt0.c0, rt0.c2, rt0.c1, t1.c1 UNION SELECT rt0.c3, rt0.c0, rt0.c2, rt0.c1, t1.c1 FROM rt0, t1 WHERE ((NOT (((((rt0.c0) IS TRUE)) NOTNULL)))) GROUP BY rt0.c3, rt0.c0, rt0.c2, rt0.c1, t1.c1 UNION SELECT rt0.c3, rt0.c0, rt0.c2, rt0.c1, t1.c1 FROM rt0, t1 WHERE (((((((rt0.c0) IS TRUE)) NOTNULL)) ISNULL)) GROUP BY rt0.c3, rt0.c0, rt0.c2, rt0.c1, t1.c1;
SELECT rt0.c3, rt0.c0, rt0.c2, rt0.c1, t1.c1 FROM rt0, t1 GROUP BY rt0.c3, rt0.c0, rt0.c2, rt0.c1, t1.c1;
SELECT t1.c1 FROM t1 GROUP BY t1.c1;
SELECT ALL t1.c1 FROM t1 GROUP BY t1.c1 HAVING COUNT(*) UNION ALL SELECT t1.c1 FROM t1 GROUP BY t1.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT t1.c1 FROM t1 GROUP BY t1.c1 HAVING ((COUNT(*)) ISNULL);
SELECT t1.c1 FROM t1 GROUP BY t1.c1;
SELECT ALL t1.c1 FROM t1 GROUP BY t1.c1 HAVING COUNT(*) UNION ALL SELECT t1.c1 FROM t1 GROUP BY t1.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT t1.c1 FROM t1 GROUP BY t1.c1 HAVING ((COUNT(*)) ISNULL);
SELECT t1.c1 FROM t1 GROUP BY t1.c1;
SELECT ALL TOTAL(((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c0))) IN ())) FROM rt0, t1 ORDER BY rt0.c3 ASC  NULLS FIRST, rt0.c1  NULLS LAST;
SELECT ALL * FROM rt0, t1;
SELECT * FROM rt0, t1 WHERE (CASE CASE WHEN rt0.c0 THEN rt0.c2 END  WHEN rt0.c0 THEN CASE WHEN rt0.c3 THEN t1.c1 WHEN rt0.c2 THEN t1.c1 WHEN t1.c1 THEN rt0.c3 ELSE t1.c1 END WHEN (((rt0.c3))<((0.16594692764808316))) THEN (t1.c1 IN (rt0.c1)) WHEN ((rt0.c3)>(rt0.c1)) THEN ((rt0.c2)>(rt0.c0)) END) UNION ALL SELECT * FROM rt0, t1 WHERE ((NOT (CASE CASE WHEN rt0.c0 THEN rt0.c2 END  WHEN rt0.c0 THEN CASE WHEN rt0.c3 THEN t1.c1 WHEN rt0.c2 THEN t1.c1 WHEN t1.c1 THEN rt0.c3 ELSE t1.c1 END WHEN (((rt0.c3))<((0.16594692764808316))) THEN (t1.c1 IN (rt0.c1)) WHEN ((rt0.c3)>(rt0.c1)) THEN ((rt0.c2)>(rt0.c0)) END))) UNION ALL SELECT * FROM rt0, t1 WHERE (((CASE CASE WHEN rt0.c0 THEN rt0.c2 END  WHEN rt0.c0 THEN CASE WHEN rt0.c3 THEN t1.c1 WHEN rt0.c2 THEN t1.c1 WHEN t1.c1 THEN rt0.c3 ELSE t1.c1 END WHEN (((rt0.c3))<((0.16594692764808316))) THEN (t1.c1 IN (rt0.c1)) WHEN ((rt0.c3)>(rt0.c1)) THEN ((rt0.c2)>(rt0.c0)) END) ISNULL));
SELECT ALL * FROM rt0, t1;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((('*A' IN ())) NOT BETWEEN (rt0.c3 COLLATE NOCASE) AND (((rt0.c2)=(rt0.c3))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((('*A' IN ())) NOT BETWEEN (rt0.c3 COLLATE NOCASE) AND (((rt0.c2)==(rt0.c3))))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((('*A' IN ())) NOT BETWEEN (rt0.c3 COLLATE NOCASE) AND (((rt0.c2)=(rt0.c3))))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c0, rt0.c3 FROM rt0, t1 GROUP BY rt0.c0, rt0.c3;
SELECT rt0.c0, rt0.c3 FROM rt0, t1 WHERE (((CASE t1.c1  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c3 END)LIKE(CASE WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c2 THEN '' WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN t1.c1 WHEN 0xfffffffffbd0e823 THEN rt0.c1 ELSE 0.5967344516506596 END))) GROUP BY rt0.c0, rt0.c3 UNION SELECT rt0.c0, rt0.c3 FROM rt0, t1 WHERE ((NOT (((CASE t1.c1  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c3 END)LIKE(CASE WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c2 THEN '' WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN t1.c1 WHEN 0xfffffffffbd0e823 THEN rt0.c1 ELSE 0.5967344516506596 END))))) GROUP BY rt0.c0, rt0.c3 UNION SELECT rt0.c0, rt0.c3 FROM rt0, t1 WHERE (((((CASE t1.c1  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c3 END)LIKE(CASE WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c2 THEN '' WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN t1.c1 WHEN 0xfffffffffbd0e823 THEN rt0.c1 ELSE 0.5967344516506596 END))) ISNULL)) GROUP BY rt0.c0, rt0.c3;
SELECT ALL rt0.c0, rt0.c3 FROM rt0, t1 GROUP BY rt0.c0, rt0.c3;
SELECT ALL rt0.c2, rt0.c3, t1.c1, rt0.c1 FROM t1 NOT INDEXED, rt0 GROUP BY rt0.c2, rt0.c3, t1.c1, rt0.c1;
SELECT ALL rt0.c2, rt0.c3, t1.c1, rt0.c1 FROM t1, rt0 GROUP BY rt0.c2, rt0.c3, t1.c1, rt0.c1 HAVING '-1419712928' UNION ALL SELECT ALL rt0.c2, rt0.c3, t1.c1, rt0.c1 FROM t1, rt0 GROUP BY rt0.c2, rt0.c3, t1.c1, rt0.c1 HAVING (NOT ('-1419712928')) UNION ALL SELECT rt0.c2, rt0.c3, t1.c1, rt0.c1 FROM t1, rt0 GROUP BY rt0.c2, rt0.c3, t1.c1, rt0.c1 HAVING (('-1419712928') ISNULL);
SELECT ALL rt0.c2, rt0.c3, t1.c1, rt0.c1 FROM t1 NOT INDEXED, rt0 GROUP BY rt0.c2, rt0.c3, t1.c1, rt0.c1;
SELECT ALL rt0.c2, rt0.c3, t1.c1, rt0.c1 FROM t1, rt0 GROUP BY rt0.c2, rt0.c3, t1.c1, rt0.c1 HAVING '-1419712928' UNION ALL SELECT ALL rt0.c2, rt0.c3, t1.c1, rt0.c1 FROM t1, rt0 GROUP BY rt0.c2, rt0.c3, t1.c1, rt0.c1 HAVING (NOT ('-1419712928')) UNION ALL SELECT rt0.c2, rt0.c3, t1.c1, rt0.c1 FROM t1, rt0 GROUP BY rt0.c2, rt0.c3, t1.c1, rt0.c1 HAVING (('-1419712928') ISNULL);
SELECT ALL rt0.c2, rt0.c3, t1.c1, rt0.c1 FROM t1 NOT INDEXED, rt0 GROUP BY rt0.c2, rt0.c3, t1.c1, rt0.c1;
SELECT ALL MIN(((((((((0Xffffffffb36260d3)OR((~ (rt0.c1)))))AND(((rt0.c0)!=(rt0.c1)))))OR(rt0.c3 COLLATE BINARY)))AND(((((((((rt0.c2)AND(rt0.c2)))OR('xrx')))AND(rt0.c0)))OR(rt0.c0))))) FROM t1, rt0 ORDER BY ((((((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c3)))AND((NOT (t1.c1)))))AND(CAST(t1.c1 AS REAL))) ASC  NULLS LAST;
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE (((x'') NOT BETWEEN ((rt0.c3 IN (1.7976931348623157E308))) AND (CAST(rt0.c3 AS BLOB)))) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (((x'') NOT BETWEEN ((rt0.c3 IN (1.7976931348623157E308))) AND (CAST(rt0.c3 AS BLOB)))))) UNION ALL SELECT * FROM rt0 WHERE (((((x'') NOT BETWEEN ((rt0.c3 IN (1.7976931348623157E308))) AND (CAST(rt0.c3 AS BLOB)))) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT t1.c1, rt0.c1, rt0.c3, rt0.c2, rt0.c0 FROM t1, rt0;
SELECT DISTINCT t1.c1, rt0.c1, rt0.c3, rt0.c2, rt0.c0 FROM t1, rt0 WHERE (TYPEOF(x'')) UNION SELECT DISTINCT t1.c1, rt0.c1, rt0.c3, rt0.c2, rt0.c0 FROM t1, rt0 WHERE ((NOT (TYPEOF(x'')))) UNION SELECT DISTINCT t1.c1, rt0.c1, rt0.c3, rt0.c2, rt0.c0 FROM t1, rt0 WHERE (((TYPEOF(x'')) ISNULL));
SELECT DISTINCT t1.c1, rt0.c1, rt0.c3, rt0.c2, rt0.c0 FROM t1, rt0;
SELECT ALL t1.c1, rt0.c3, rt0.c1 FROM t1, rt0 GROUP BY t1.c1, rt0.c3, rt0.c1;
SELECT ALL t1.c1, rt0.c3, rt0.c1 FROM t1, rt0 WHERE ((- (rt0.c3)) COLLATE NOCASE) GROUP BY t1.c1, rt0.c3, rt0.c1 UNION SELECT ALL t1.c1, rt0.c3, rt0.c1 FROM t1, rt0 WHERE ((NOT ((- (rt0.c3)) COLLATE NOCASE))) GROUP BY t1.c1, rt0.c3, rt0.c1 UNION SELECT ALL t1.c1, rt0.c3, rt0.c1 FROM t1, rt0 WHERE ((((- (rt0.c3)) COLLATE NOCASE) ISNULL)) GROUP BY t1.c1, rt0.c3, rt0.c1;
SELECT ALL t1.c1, rt0.c3, rt0.c1 FROM t1, rt0 GROUP BY t1.c1, rt0.c3, rt0.c1;
SELECT ALL t1.c1, rt0.c1 FROM t1, rt0 GROUP BY t1.c1, rt0.c1;
SELECT ALL t1.c1, rt0.c1 FROM t1, rt0 GROUP BY t1.c1, rt0.c1 HAVING MIN(rt0.c1) UNION ALL SELECT ALL t1.c1, rt0.c1 FROM t1, rt0 GROUP BY t1.c1, rt0.c1 HAVING (NOT (MIN(rt0.c1))) UNION ALL SELECT t1.c1, rt0.c1 FROM t1, rt0 GROUP BY t1.c1, rt0.c1 HAVING ((MIN(rt0.c1)) ISNULL);
SELECT ALL t1.c1, rt0.c1 FROM t1, rt0 GROUP BY t1.c1, rt0.c1;
SELECT ALL t1.c1, rt0.c1 FROM t1, rt0 GROUP BY t1.c1, rt0.c1 HAVING MIN(rt0.c1) UNION ALL SELECT ALL t1.c1, rt0.c1 FROM t1, rt0 GROUP BY t1.c1, rt0.c1 HAVING (NOT (MIN(rt0.c1))) UNION ALL SELECT t1.c1, rt0.c1 FROM t1, rt0 GROUP BY t1.c1, rt0.c1 HAVING ((MIN(rt0.c1)) ISNULL);
SELECT ALL t1.c1, rt0.c1 FROM t1, rt0 GROUP BY t1.c1, rt0.c1;
SELECT ALL rt0.c2 FROM t1 RIGHT OUTER JOIN rt0 ON CASE WHEN x'' THEN rt0.c1 END;
SELECT rt0.c2 FROM t1 RIGHT OUTER JOIN rt0 ON CASE WHEN x'' THEN rt0.c1 END WHERE ((rt0.c0 IN ()) COLLATE BINARY) UNION ALL SELECT rt0.c2 FROM t1 RIGHT OUTER JOIN rt0 ON CASE WHEN x'' THEN rt0.c1 END WHERE ((NOT ((rt0.c0 IN ()) COLLATE BINARY))) UNION ALL SELECT ALL rt0.c2 FROM t1 RIGHT OUTER JOIN rt0 ON CASE WHEN x'' THEN rt0.c1 END WHERE ((((rt0.c0 IN ()) COLLATE BINARY) ISNULL));
SELECT ALL rt0.c2 FROM t1 RIGHT OUTER JOIN rt0 ON CASE WHEN x'' THEN rt0.c1 END;
SELECT DISTINCT * FROM t1, rt0;
SELECT DISTINCT * FROM t1, rt0 WHERE ((('B<S⼌nU諉')GLOB(t1.c1 COLLATE NOCASE))) UNION SELECT DISTINCT * FROM t1, rt0 WHERE ((NOT ((('B<S⼌nU諉')GLOB(t1.c1 COLLATE NOCASE))))) UNION SELECT DISTINCT * FROM t1, rt0 WHERE ((((('B<S⼌nU諉')GLOB(t1.c1 COLLATE NOCASE))) ISNULL));
SELECT DISTINCT * FROM t1, rt0;
SELECT rt0.c1, rt0.c3, rt0.c0 FROM t1, rt0 GROUP BY rt0.c1, rt0.c3, rt0.c0;
SELECT rt0.c1, rt0.c3, rt0.c0 FROM t1, rt0 WHERE (t1.c1) GROUP BY rt0.c1, rt0.c3, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c3, rt0.c0 FROM t1, rt0 WHERE ((NOT (t1.c1))) GROUP BY rt0.c1, rt0.c3, rt0.c0 UNION SELECT ALL rt0.c1, rt0.c3, rt0.c0 FROM t1, rt0 WHERE (((t1.c1) ISNULL)) GROUP BY rt0.c1, rt0.c3, rt0.c0;
SELECT rt0.c1, rt0.c3, rt0.c0 FROM t1, rt0 GROUP BY rt0.c1, rt0.c3, rt0.c0;
SELECT ALL rt0.c1, rt0.c0, t1.c1 FROM t1, rt0 GROUP BY rt0.c1, rt0.c0, t1.c1;
SELECT ALL rt0.c1, rt0.c0, t1.c1 FROM t1, rt0 GROUP BY rt0.c1, rt0.c0, t1.c1 HAVING HEX(AVG(SUM(rt0.c3))) UNION ALL SELECT rt0.c1, rt0.c0, t1.c1 FROM t1, rt0 GROUP BY rt0.c1, rt0.c0, t1.c1 HAVING (NOT (HEX(AVG(SUM(rt0.c3))))) UNION ALL SELECT ALL rt0.c1, rt0.c0, t1.c1 FROM t1, rt0 GROUP BY rt0.c1, rt0.c0, t1.c1 HAVING ((HEX(AVG(SUM(rt0.c3)))) ISNULL);
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE ((NOT (((((((((rt0.c1)AND(rt0.c0)))OR(rt0.c3)))AND(rt0.c1)))OR(rt0.c2))))) UNION ALL SELECT * FROM rt0 WHERE ((NOT ((NOT (((((((((rt0.c1)AND(rt0.c0)))OR(rt0.c3)))AND(rt0.c1)))OR(rt0.c2))))))) UNION ALL SELECT * FROM rt0 WHERE ((((NOT (((((((((rt0.c1)AND(rt0.c0)))OR(rt0.c3)))AND(rt0.c1)))OR(rt0.c2))))) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT * FROM t1;
SELECT DISTINCT * FROM t1 WHERE (t1.c1) UNION SELECT DISTINCT * FROM t1 WHERE ((NOT (t1.c1))) UNION SELECT DISTINCT * FROM t1 WHERE (((t1.c1) ISNULL));
SELECT DISTINCT * FROM t1;
SELECT ALL rt0.c0, rt0.c3, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c3, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, rt0.c3, rt0.c1, rt0.c2 FROM rt0 WHERE (CASE WHEN ((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0)) THEN ((x'')LIKE(rt0.c0)) WHEN ((rt0.c1) NOT NULL) THEN (~ (rt0.c3)) WHEN 'PX-Qba_''' THEN ((rt0.c3)*(rt0.c2)) ELSE ((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c3)) END) GROUP BY rt0.c0, rt0.c3, rt0.c1, rt0.c2 UNION SELECT rt0.c0, rt0.c3, rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (CASE WHEN ((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0)) THEN ((x'')LIKE(rt0.c0)) WHEN ((rt0.c1) NOT NULL) THEN (~ (rt0.c3)) WHEN 'PX-Qba_''' THEN ((rt0.c3)*(rt0.c2)) ELSE ((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c3)) END))) GROUP BY rt0.c0, rt0.c3, rt0.c1, rt0.c2 UNION SELECT rt0.c0, rt0.c3, rt0.c1, rt0.c2 FROM rt0 WHERE (((CASE WHEN ((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0)) THEN ((x'')LIKE(rt0.c0)) WHEN ((rt0.c1) NOT NULL) THEN (~ (rt0.c3)) WHEN 'PX-Qba_''' THEN ((rt0.c3)*(rt0.c2)) ELSE ((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c3)) END) ISNULL)) GROUP BY rt0.c0, rt0.c3, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, rt0.c3, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c3, rt0.c1, rt0.c2;
SELECT t1.c1 FROM t1 GROUP BY t1.c1;
SELECT t1.c1 FROM t1 GROUP BY t1.c1 HAVING SUM(MAX(COUNT(*))) UNION ALL SELECT t1.c1 FROM t1 GROUP BY t1.c1 HAVING (NOT (SUM(MAX(COUNT(*))))) UNION ALL SELECT ALL t1.c1 FROM t1 GROUP BY t1.c1 HAVING ((SUM(MAX(COUNT(*)))) ISNULL);
SELECT ALL rt0.c0 FROM t1, rt0;
SELECT rt0.c0 FROM t1, rt0 WHERE (((((((rt0.c2)AND(rt0.c3)))OR(rt0.c1)))<=(CASE WHEN rt0.c1 THEN t1.c1 ELSE rt0.c3 END))) UNION ALL SELECT ALL rt0.c0 FROM t1, rt0 WHERE ((NOT (((((((rt0.c2)AND(rt0.c3)))OR(rt0.c1)))<=(CASE WHEN rt0.c1 THEN t1.c1 ELSE rt0.c3 END))))) UNION ALL SELECT ALL rt0.c0 FROM t1, rt0 WHERE (((((((((rt0.c2)AND(rt0.c3)))OR(rt0.c1)))<=(CASE WHEN rt0.c1 THEN t1.c1 ELSE rt0.c3 END))) ISNULL));
SELECT ALL rt0.c0 FROM t1, rt0;
SELECT DISTINCT * FROM rt0, t1;
SELECT DISTINCT * FROM rt0, t1 WHERE (((t1.c1 COLLATE RTRIM)LIKE((rt0.c1 IN (rt0.c1))))) UNION SELECT DISTINCT * FROM rt0, t1 WHERE ((NOT (((t1.c1 COLLATE RTRIM)LIKE((rt0.c1 IN (rt0.c1))))))) UNION SELECT DISTINCT * FROM rt0, t1 WHERE (((((t1.c1 COLLATE RTRIM)LIKE((rt0.c1 IN (rt0.c1))))) ISNULL));
SELECT DISTINCT * FROM rt0, t1;
SELECT rt0.c3 FROM t1 LEFT OUTER JOIN rt0 ON TRIM(((rt0.c0) IS TRUE)) GROUP BY rt0.c3;
SELECT ALL rt0.c3 FROM t1 LEFT OUTER JOIN rt0 ON TRIM(((rt0.c0) IS TRUE)) WHERE (CASE WHEN ((rt0.c0)||(x'')) THEN (- (t1.c1)) ELSE ((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c3)) END) GROUP BY rt0.c3 UNION SELECT ALL rt0.c3 FROM t1 LEFT OUTER JOIN rt0 ON TRIM(((rt0.c0) IS TRUE)) WHERE ((NOT (CASE WHEN ((rt0.c0)||(x'')) THEN (- (t1.c1)) ELSE ((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c3)) END))) GROUP BY rt0.c3 UNION SELECT ALL rt0.c3 FROM t1 LEFT OUTER JOIN rt0 ON TRIM(((rt0.c0) IS TRUE)) WHERE (((CASE WHEN ((rt0.c0)||(x'')) THEN (- (t1.c1)) ELSE ((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c3)) END) ISNULL)) GROUP BY rt0.c3;
SELECT rt0.c3 FROM t1 LEFT OUTER JOIN rt0 ON TRIM(((rt0.c0) IS TRUE)) GROUP BY rt0.c3;
SELECT ALL t1.c1, rt0.c2 FROM rt0, t1 GROUP BY t1.c1, rt0.c2;
SELECT t1.c1, rt0.c2 FROM rt0, t1 GROUP BY t1.c1, rt0.c2 HAVING ((((CAST(rt0.c1 AS BLOB))AND(CASE SUM(GROUP_CONCAT(COUNT(GROUP_CONCAT(COUNT(AVG(GROUP_CONCAT(COUNT(COUNT(*)))))))))  WHEN rt0.c0 THEN rt0.c3 END)))OR(AVG(rt0.c1))) UNION ALL SELECT t1.c1, rt0.c2 FROM rt0, t1 GROUP BY t1.c1, rt0.c2 HAVING (NOT (((((CAST(rt0.c1 AS BLOB))AND(CASE SUM(GROUP_CONCAT(COUNT(GROUP_CONCAT(COUNT(AVG(GROUP_CONCAT(COUNT(COUNT(*)))))))))  WHEN rt0.c0 THEN rt0.c3 END)))OR(AVG(rt0.c1))))) UNION ALL SELECT t1.c1, rt0.c2 FROM rt0, t1 GROUP BY t1.c1, rt0.c2 HAVING ((((((CAST(rt0.c1 AS BLOB))AND(CASE SUM(GROUP_CONCAT(COUNT(GROUP_CONCAT(COUNT(AVG(GROUP_CONCAT(COUNT(COUNT(*)))))))))  WHEN rt0.c0 THEN rt0.c3 END)))OR(AVG(rt0.c1)))) ISNULL);
SELECT ALL rt0.c2, t1.c1, rt0.c3, rt0.c1 FROM t1 RIGHT OUTER JOIN rt0 ON (- (CASE rt0.c3  WHEN rt0.c1 THEN rt0.c0 END));
SELECT rt0.c2, t1.c1, rt0.c3, rt0.c1 FROM t1 RIGHT OUTER JOIN rt0 ON (- (CASE rt0.c3  WHEN rt0.c1 THEN rt0.c0 END)) WHERE (NULL) UNION ALL SELECT ALL rt0.c2, t1.c1, rt0.c3, rt0.c1 FROM t1 NOT INDEXED RIGHT OUTER JOIN rt0 ON (- (CASE rt0.c3  WHEN rt0.c1 THEN rt0.c0 END)) WHERE ((NOT (NULL))) UNION ALL SELECT ALL rt0.c2, t1.c1, rt0.c3, rt0.c1 FROM t1 RIGHT OUTER JOIN rt0 ON (- (CASE rt0.c3  WHEN rt0.c1 THEN rt0.c0 END)) WHERE (((NULL) ISNULL));
SELECT ALL rt0.c2, t1.c1, rt0.c3, rt0.c1 FROM t1 RIGHT OUTER JOIN rt0 ON (- (CASE rt0.c3  WHEN rt0.c1 THEN rt0.c0 END));
SELECT DISTINCT t1.c1 FROM t1;
SELECT DISTINCT t1.c1 FROM t1 WHERE (COALESCE(DISTINCT CAST(t1.c1 AS REAL), (+ (t1.c1)))) UNION SELECT DISTINCT t1.c1 FROM t1 WHERE ((NOT (COALESCE(DISTINCT CAST(t1.c1 AS REAL), (+ (t1.c1)))))) UNION SELECT DISTINCT t1.c1 FROM t1 WHERE (((COALESCE(DISTINCT CAST(t1.c1 AS REAL), (+ (t1.c1)))) ISNULL));
SELECT DISTINCT t1.c1 FROM t1;
SELECT ALL rt0.c3 FROM rt0 GROUP BY rt0.c3;
SELECT ALL rt0.c3 FROM rt0 WHERE (CAST((((rt0.c3))<=((rt0.c2))) AS NUMERIC)) GROUP BY rt0.c3 UNION SELECT rt0.c3 FROM rt0 WHERE ((NOT (CAST((((rt0.c3))<=((rt0.c2))) AS NUMERIC)))) GROUP BY rt0.c3 UNION SELECT ALL rt0.c3 FROM rt0 WHERE (((CAST((((rt0.c3))<=((rt0.c2))) AS NUMERIC)) ISNULL)) GROUP BY rt0.c3;
SELECT ALL rt0.c3 FROM rt0 GROUP BY rt0.c3;
SELECT ALL t1.c1, rt0.c0, rt0.c3, rt0.c2 FROM t1, rt0 GROUP BY t1.c1, rt0.c0, rt0.c3, rt0.c2;
SELECT ALL t1.c1, rt0.c0, rt0.c3, rt0.c2 FROM t1, rt0 GROUP BY t1.c1, rt0.c0, rt0.c3, rt0.c2 HAVING rt0.c1 UNION ALL SELECT ALL t1.c1, rt0.c0, rt0.c3, rt0.c2 FROM t1, rt0 GROUP BY t1.c1, rt0.c0, rt0.c3, rt0.c2 HAVING (NOT (rt0.c1)) UNION ALL SELECT t1.c1, rt0.c0, rt0.c3, rt0.c2 FROM t1, rt0 GROUP BY t1.c1, rt0.c0, rt0.c3, rt0.c2 HAVING ((rt0.c1) ISNULL);
SELECT ALL t1.c1, rt0.c0, rt0.c3, rt0.c2 FROM t1, rt0 GROUP BY t1.c1, rt0.c0, rt0.c3, rt0.c2;
SELECT ALL t1.c1, rt0.c0, rt0.c3, rt0.c2 FROM t1, rt0 GROUP BY t1.c1, rt0.c0, rt0.c3, rt0.c2 HAVING rt0.c1 UNION ALL SELECT ALL t1.c1, rt0.c0, rt0.c3, rt0.c2 FROM t1, rt0 GROUP BY t1.c1, rt0.c0, rt0.c3, rt0.c2 HAVING (NOT (rt0.c1)) UNION ALL SELECT t1.c1, rt0.c0, rt0.c3, rt0.c2 FROM t1, rt0 GROUP BY t1.c1, rt0.c0, rt0.c3, rt0.c2 HAVING ((rt0.c1) ISNULL);
SELECT ALL t1.c1, rt0.c0, rt0.c3, rt0.c2 FROM t1, rt0 GROUP BY t1.c1, rt0.c0, rt0.c3, rt0.c2;
SELECT TOTAL(rt0.c0) FROM rt0 ORDER BY NULL ASC;
SELECT ALL rt0.c1 FROM rt0, t1;
SELECT ALL rt0.c1 FROM rt0, t1 WHERE (((((((rt0.c2)AND(t1.c1)))OR(rt0.c0))) ISNULL)) UNION ALL SELECT rt0.c1 FROM rt0, t1 WHERE ((NOT (((((((rt0.c2)AND(t1.c1)))OR(rt0.c0))) ISNULL)))) UNION ALL SELECT ALL rt0.c1 FROM rt0, t1 WHERE (((((((((rt0.c2)AND(t1.c1)))OR(rt0.c0))) ISNULL)) ISNULL));
SELECT ALL rt0.c1 FROM rt0, t1;
SELECT DISTINCT * FROM t1, rt0;
SELECT DISTINCT * FROM t1, rt0 WHERE (x'0725') UNION SELECT DISTINCT * FROM t1, rt0 WHERE ((NOT (x'0725'))) UNION SELECT DISTINCT * FROM t1, rt0 WHERE (((x'0725') ISNULL));
SELECT DISTINCT * FROM t1, rt0;
SELECT rt0.c1, rt0.c3, rt0.c2, rt0.c0, t1.c1 FROM rt0 CROSS JOIN t1 ON ((CAST(t1.c1 AS REAL)) IS FALSE) GROUP BY rt0.c1, rt0.c3, rt0.c2, rt0.c0, t1.c1;
SELECT rt0.c1, rt0.c3, rt0.c2, rt0.c0, t1.c1 FROM rt0 CROSS JOIN t1 ON ((CAST(t1.c1 AS REAL)) IS FALSE) WHERE (-437014046) GROUP BY rt0.c1, rt0.c3, rt0.c2, rt0.c0, t1.c1 UNION SELECT rt0.c1, rt0.c3, rt0.c2, rt0.c0, t1.c1 FROM rt0 CROSS JOIN t1 ON ((CAST(t1.c1 AS REAL)) IS FALSE) WHERE ((NOT (-437014046))) GROUP BY rt0.c1, rt0.c3, rt0.c2, rt0.c0, t1.c1 UNION SELECT ALL rt0.c1, rt0.c3, rt0.c2, rt0.c0, t1.c1 FROM rt0 CROSS JOIN t1 ON ((CAST(t1.c1 AS REAL)) IS FALSE) WHERE (((-437014046) ISNULL)) GROUP BY rt0.c1, rt0.c3, rt0.c2, rt0.c0, t1.c1;
SELECT rt0.c1, rt0.c3, rt0.c2, rt0.c0, t1.c1 FROM rt0 CROSS JOIN t1 ON ((CAST(t1.c1 AS REAL)) IS FALSE) GROUP BY rt0.c1, rt0.c3, rt0.c2, rt0.c0, t1.c1;
SELECT ALL rt0.c1, t1.c1, rt0.c2, rt0.c0, rt0.c3 FROM t1, rt0 GROUP BY rt0.c1, t1.c1, rt0.c2, rt0.c0, rt0.c3;
SELECT rt0.c1, t1.c1, rt0.c2, rt0.c0, rt0.c3 FROM t1, rt0 GROUP BY rt0.c1, t1.c1, rt0.c2, rt0.c0, rt0.c3 HAVING MAX(TOTAL(TOTAL(AVG(TOTAL(t1.c1))))) UNION ALL SELECT rt0.c1, t1.c1, rt0.c2, rt0.c0, rt0.c3 FROM t1, rt0 GROUP BY rt0.c1, t1.c1, rt0.c2, rt0.c0, rt0.c3 HAVING (NOT (MAX(TOTAL(TOTAL(AVG(TOTAL(t1.c1))))))) UNION ALL SELECT ALL rt0.c1, t1.c1, rt0.c2, rt0.c0, rt0.c3 FROM t1, rt0 GROUP BY rt0.c1, t1.c1, rt0.c2, rt0.c0, rt0.c3 HAVING ((MAX(TOTAL(TOTAL(AVG(TOTAL(t1.c1)))))) ISNULL);
SELECT t1.c1 FROM t1;
SELECT ALL t1.c1 FROM t1 WHERE (json_array(((x'') BETWEEN (t1.c1) AND (t1.c1)), (((t1.c1)) NOT BETWEEN ((t1.c1)) AND ((t1.c1))))) UNION ALL SELECT ALL t1.c1 FROM t1 WHERE ((NOT (json_array(((x'') BETWEEN (t1.c1) AND (t1.c1)), (((t1.c1)) NOT BETWEEN ((t1.c1)) AND ((t1.c1))))))) UNION ALL SELECT ALL t1.c1 FROM t1 WHERE (((json_array(((x'') BETWEEN (t1.c1) AND (t1.c1)), (((t1.c1)) NOT BETWEEN ((t1.c1)) AND ((t1.c1))))) ISNULL));
SELECT t1.c1 FROM t1;
SELECT DISTINCT * FROM rt0, t1;
SELECT DISTINCT * FROM rt0, t1 WHERE (x'86fe') UNION SELECT DISTINCT * FROM rt0, t1 WHERE ((NOT (x'86fe'))) UNION SELECT DISTINCT * FROM rt0, t1 WHERE (((x'86fe') ISNULL));
SELECT DISTINCT * FROM rt0, t1;
SELECT rt0.c3, rt0.c0, rt0.c1, t1.c1 FROM t1, rt0 GROUP BY rt0.c3, rt0.c0, rt0.c1, t1.c1;
SELECT rt0.c3, rt0.c0, rt0.c1, t1.c1 FROM t1, rt0 WHERE (((t1.c1)<(((rt0.c1)<<(rt0.c1))))) GROUP BY rt0.c3, rt0.c0, rt0.c1, t1.c1 UNION SELECT rt0.c3, rt0.c0, rt0.c1, t1.c1 FROM t1, rt0 WHERE ((NOT (((t1.c1)<(((rt0.c1)<<(rt0.c1))))))) GROUP BY rt0.c3, rt0.c0, rt0.c1, t1.c1 UNION SELECT ALL rt0.c3, rt0.c0, rt0.c1, t1.c1 FROM t1, rt0 WHERE (((((t1.c1)<(((rt0.c1)<<(rt0.c1))))) ISNULL)) GROUP BY rt0.c3, rt0.c0, rt0.c1, t1.c1;
SELECT rt0.c3, rt0.c0, rt0.c1, t1.c1 FROM t1, rt0 GROUP BY rt0.c3, rt0.c0, rt0.c1, t1.c1;
SELECT t1.c1 FROM rt0, t1 GROUP BY t1.c1;
SELECT ALL t1.c1 FROM rt0, t1 GROUP BY t1.c1 HAVING (((rt0.c1 IN (rt0.c0, MIN(COUNT(rt0.c0))))) NOT NULL) UNION ALL SELECT ALL t1.c1 FROM rt0, t1 GROUP BY t1.c1 HAVING (NOT ((((rt0.c1 IN (rt0.c0, MIN(COUNT(rt0.c0))))) NOT NULL))) UNION ALL SELECT ALL t1.c1 FROM rt0, t1 GROUP BY t1.c1 HAVING (((((rt0.c1 IN (rt0.c0, MIN(COUNT(rt0.c0))))) NOT NULL)) ISNULL);
SELECT ALL rt0.c0, rt0.c2 FROM rt0;
SELECT rt0.c0, rt0.c2 FROM rt0 WHERE ((((((((((rt0.c1)AND(rt0.c0)))OR(rt0.c2)))AND(rt0.c3)))AND(rt0.c0)) IN ())) UNION ALL SELECT ALL rt0.c0, rt0.c2 FROM rt0 WHERE ((NOT ((((((((((rt0.c1)AND(rt0.c0)))OR(rt0.c2)))AND(rt0.c3)))AND(rt0.c0)) IN ())))) UNION ALL SELECT rt0.c0, rt0.c2 FROM rt0 WHERE ((((((((((((rt0.c1)AND(rt0.c0)))OR(rt0.c2)))AND(rt0.c3)))AND(rt0.c0)) IN ())) ISNULL));
SELECT ALL rt0.c0, rt0.c2 FROM rt0;
SELECT DISTINCT rt0.c3, rt0.c2, rt0.c1, rt0.c0 FROM rt0;
SELECT DISTINCT rt0.c3, rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE (((((((((COALESCE(rt0.c1, rt0.c2, rt0.c0, rt0.c1))OR('-1654230408' COLLATE BINARY)))OR(((((-1241580053)AND(rt0.c0)))AND(rt0.c3)))))AND(((x'3e84')<=(rt0.c0)))))AND(CAST(rt0.c3 AS BLOB)))) UNION SELECT DISTINCT rt0.c3, rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (((((((((COALESCE(rt0.c1, rt0.c2, rt0.c0, rt0.c1))OR('-1654230408' COLLATE BINARY)))OR(((((-1241580053)AND(rt0.c0)))AND(rt0.c3)))))AND(((x'3e84')<=(rt0.c0)))))AND(CAST(rt0.c3 AS BLOB)))))) UNION SELECT DISTINCT rt0.c3, rt0.c2, rt0.c1, rt0.c0 FROM rt0 WHERE (((((((((((COALESCE(rt0.c1, rt0.c2, rt0.c0, rt0.c1))OR('-1654230408' COLLATE BINARY)))OR(((((-1241580053)AND(rt0.c0)))AND(rt0.c3)))))AND(((x'3e84')<=(rt0.c0)))))AND(CAST(rt0.c3 AS BLOB)))) ISNULL));
SELECT DISTINCT rt0.c3, rt0.c2, rt0.c1, rt0.c0 FROM rt0;
SELECT t1.c1 FROM t1 GROUP BY t1.c1;
SELECT t1.c1 FROM t1 WHERE ((+ (((t1.c1) ISNULL)))) GROUP BY t1.c1 UNION SELECT ALL t1.c1 FROM t1 WHERE ((NOT ((+ (((t1.c1) ISNULL)))))) GROUP BY t1.c1 UNION SELECT t1.c1 FROM t1 WHERE ((((+ (((t1.c1) ISNULL)))) ISNULL)) GROUP BY t1.c1;
SELECT t1.c1 FROM t1 GROUP BY t1.c1;
SELECT rt0.c0, rt0.c3, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c3, rt0.c1, rt0.c2;
SELECT rt0.c0, rt0.c3, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c3, rt0.c1, rt0.c2 HAVING (((rt0.c1 IN ()))<>(COUNT(rt0.c3))) UNION ALL SELECT ALL rt0.c0, rt0.c3, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c3, rt0.c1, rt0.c2 HAVING (NOT ((((rt0.c1 IN ()))!=(COUNT(rt0.c3))))) UNION ALL SELECT rt0.c0, rt0.c3, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c3, rt0.c1, rt0.c2 HAVING (((((rt0.c1 IN ()))!=(COUNT(rt0.c3)))) ISNULL);
SELECT rt0.c0, rt0.c3, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c3, rt0.c1, rt0.c2;
SELECT rt0.c0, rt0.c3, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c3, rt0.c1, rt0.c2 HAVING (((rt0.c1 IN ()))<>(COUNT(rt0.c3))) UNION ALL SELECT ALL rt0.c0, rt0.c3, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c3, rt0.c1, rt0.c2 HAVING (NOT ((((rt0.c1 IN ()))!=(COUNT(rt0.c3))))) UNION ALL SELECT rt0.c0, rt0.c3, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c3, rt0.c1, rt0.c2 HAVING (((((rt0.c1 IN ()))!=(COUNT(rt0.c3)))) ISNULL);
SELECT rt0.c0, rt0.c3, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c0, rt0.c3, rt0.c1, rt0.c2;
SELECT ALL * FROM rt0, t1;
SELECT * FROM rt0, t1 WHERE (((CASE WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c3 END) BETWEEN ('鼜+') AND ((((rt0.c1)) BETWEEN ((t1.c1)) AND ((rt0.c2)))))) UNION ALL SELECT * FROM rt0, t1 WHERE ((NOT (((CASE WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c3 END) BETWEEN ('鼜+') AND ((((rt0.c1)) BETWEEN ((t1.c1)) AND ((rt0.c2)))))))) UNION ALL SELECT ALL * FROM rt0 NOT INDEXED, t1 WHERE (((((CASE WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c3 END) BETWEEN ('鼜+') AND ((((rt0.c1)) BETWEEN ((t1.c1)) AND ((rt0.c2)))))) ISNULL));
SELECT ALL * FROM rt0, t1;
SELECT DISTINCT * FROM t1;
SELECT DISTINCT * FROM t1 WHERE ((NOT (CASE t1.c1  WHEN t1.c1 THEN t1.c1 WHEN 0.8584350118996954 THEN t1.c1 WHEN t1.c1 THEN t1.c1 END))) UNION SELECT DISTINCT * FROM t1 WHERE ((NOT ((NOT (CASE t1.c1  WHEN t1.c1 THEN t1.c1 WHEN 0.8584350118996954 THEN t1.c1 WHEN t1.c1 THEN t1.c1 END))))) UNION SELECT DISTINCT * FROM t1 WHERE ((((NOT (CASE t1.c1  WHEN t1.c1 THEN t1.c1 WHEN 0.8584350118996954 THEN t1.c1 WHEN t1.c1 THEN t1.c1 END))) ISNULL));
SELECT DISTINCT * FROM t1;
SELECT rt0.c2, t1.c1, rt0.c0, rt0.c1, rt0.c3 FROM t1, rt0 GROUP BY rt0.c2, t1.c1, rt0.c0, rt0.c1, rt0.c3;
SELECT rt0.c2, t1.c1, rt0.c0, rt0.c1, rt0.c3 FROM t1, rt0 WHERE (((rt0.c3 COLLATE NOCASE) NOTNULL)) GROUP BY rt0.c2, t1.c1, rt0.c0, rt0.c1, rt0.c3 UNION SELECT ALL rt0.c2, t1.c1, rt0.c0, rt0.c1, rt0.c3 FROM t1, rt0 WHERE ((NOT (((rt0.c3 COLLATE NOCASE) NOTNULL)))) GROUP BY rt0.c2, t1.c1, rt0.c0, rt0.c1, rt0.c3 UNION SELECT ALL rt0.c2, t1.c1, rt0.c0, rt0.c1, rt0.c3 FROM t1, rt0 WHERE (((((rt0.c3 COLLATE NOCASE) NOTNULL)) ISNULL)) GROUP BY rt0.c2, t1.c1, rt0.c0, rt0.c1, rt0.c3;
SELECT rt0.c2, t1.c1, rt0.c0, rt0.c1, rt0.c3 FROM t1, rt0 GROUP BY rt0.c2, t1.c1, rt0.c0, rt0.c1, rt0.c3;
SELECT rt0.c2, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c3;
SELECT rt0.c2, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c3 HAVING ((GROUP_CONCAT(MIN(GROUP_CONCAT(COUNT(*)))))>(((COUNT(*)) NOT NULL))) UNION ALL SELECT rt0.c2, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c3 HAVING (NOT (((GROUP_CONCAT(MIN(GROUP_CONCAT(COUNT(*)))))>(((COUNT(*)) NOT NULL))))) UNION ALL SELECT rt0.c2, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c3 HAVING ((((GROUP_CONCAT(MIN(GROUP_CONCAT(COUNT(*)))))>(((COUNT(*)) NOT NULL)))) ISNULL);
SELECT ALL * FROM t1, rt0;
SELECT * FROM t1, rt0 WHERE (CAST(((((t1.c1)AND(t1.c1)))OR(rt0.c0)) AS BLOB)) UNION ALL SELECT * FROM t1, rt0 WHERE ((NOT (CAST(((((t1.c1)AND(t1.c1)))OR(rt0.c0)) AS BLOB)))) UNION ALL SELECT ALL * FROM t1, rt0 WHERE (((CAST(((((t1.c1)AND(t1.c1)))OR(rt0.c0)) AS BLOB)) ISNULL));
SELECT ALL * FROM t1, rt0;
SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0 CROSS JOIN t1 ON rt0.c2;
SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0 CROSS JOIN t1 ON rt0.c2 WHERE (((((((((((NULL) NOT BETWEEN (rt0.c3) AND ('ふ?X0o砄')))AND(CAST(rt0.c3 AS NUMERIC))))OR('32')))OR(((t1.c1)/(-633710913)))))OR(CAST(t1.c1 AS TEXT)))) UNION SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0 CROSS JOIN t1 ON rt0.c2 WHERE ((NOT (((((((((((NULL) NOT BETWEEN (rt0.c3) AND ('ふ?X0o砄')))AND(CAST(rt0.c3 AS NUMERIC))))OR('32')))OR(((t1.c1)/(-633710913)))))OR(CAST(t1.c1 AS TEXT)))))) UNION SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0 CROSS JOIN t1 ON rt0.c2 WHERE (((((((((((((NULL) NOT BETWEEN (rt0.c3) AND ('ふ?X0o砄')))AND(CAST(rt0.c3 AS NUMERIC))))OR('32')))OR(((t1.c1)/(-633710913)))))OR(CAST(t1.c1 AS TEXT)))) ISNULL));
SELECT DISTINCT rt0.c0, rt0.c2 FROM rt0 CROSS JOIN t1 ON rt0.c2;
SELECT ALL rt0.c3 FROM t1, rt0 GROUP BY rt0.c3;
SELECT rt0.c3 FROM t1, rt0 WHERE ((rt0.c0 IN ()) COLLATE BINARY) GROUP BY rt0.c3 UNION SELECT ALL rt0.c3 FROM t1, rt0 WHERE ((NOT ((rt0.c0 IN ()) COLLATE BINARY))) GROUP BY rt0.c3 UNION SELECT rt0.c3 FROM t1, rt0 WHERE ((((rt0.c0 IN ()) COLLATE BINARY) ISNULL)) GROUP BY rt0.c3;
SELECT ALL rt0.c3 FROM t1, rt0 GROUP BY rt0.c3;
SELECT ALL rt0.c1, rt0.c0, rt0.c3 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c3;
SELECT ALL rt0.c1, rt0.c0, rt0.c3 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c3 HAVING MAX(((SUM(AVG(COUNT(*))))>(rt0.c3))) UNION ALL SELECT ALL rt0.c1, rt0.c0, rt0.c3 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c3 HAVING (NOT (MAX(((SUM(AVG(COUNT(*))))>(rt0.c3))))) UNION ALL SELECT rt0.c1, rt0.c0, rt0.c3 FROM rt0 GROUP BY rt0.c1, rt0.c0, rt0.c3 HAVING ((MAX(((SUM(AVG(COUNT(*))))>(rt0.c3)))) ISNULL);
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE (x'') UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (x''))) UNION ALL SELECT ALL * FROM rt0 WHERE (((x'') ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT t1.c1 FROM t1, rt0;
SELECT DISTINCT t1.c1 FROM t1, rt0 WHERE (((rt0.c3) NOT BETWEEN ((((rt0.c0)) BETWEEN ((t1.c1)) AND ((rt0.c3)))) AND (((rt0.c0)LIKE(rt0.c1))))) UNION SELECT DISTINCT t1.c1 FROM t1, rt0 WHERE ((NOT (((rt0.c3) NOT BETWEEN ((((rt0.c0)) BETWEEN ((t1.c1)) AND ((rt0.c3)))) AND (((rt0.c0)LIKE(rt0.c1))))))) UNION SELECT DISTINCT t1.c1 FROM t1, rt0 WHERE (((((rt0.c3) NOT BETWEEN ((((rt0.c0)) BETWEEN ((t1.c1)) AND ((rt0.c3)))) AND (((rt0.c0)LIKE(rt0.c1))))) ISNULL));
SELECT DISTINCT t1.c1 FROM t1, rt0;
SELECT ALL t1.c1, rt0.c3, rt0.c1 FROM rt0, t1 GROUP BY t1.c1, rt0.c3, rt0.c1;
SELECT ALL t1.c1, rt0.c3, rt0.c1 FROM rt0, t1 WHERE (((((rt0.c1)-(rt0.c2)))/(NULLIF('2005959581', rt0.c1)))) GROUP BY t1.c1, rt0.c3, rt0.c1 UNION SELECT t1.c1, rt0.c3, rt0.c1 FROM rt0, t1 WHERE ((NOT (((((rt0.c1)-(rt0.c2)))/(NULLIF('2005959581', rt0.c1)))))) GROUP BY t1.c1, rt0.c3, rt0.c1 UNION SELECT t1.c1, rt0.c3, rt0.c1 FROM rt0, t1 WHERE (((((((rt0.c1)-(rt0.c2)))/(NULLIF('2005959581', rt0.c1)))) ISNULL)) GROUP BY t1.c1, rt0.c3, rt0.c1;
SELECT ALL t1.c1, rt0.c3, rt0.c1 FROM rt0, t1 GROUP BY t1.c1, rt0.c3, rt0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1;
SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING ((CASE rt0.c1  WHEN COUNT(*) THEN SUM(COUNT(COUNT(TOTAL(COUNT(*))))) END)GLOB(MIN(rt0.c3))) UNION ALL SELECT rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING (NOT (((CASE rt0.c1  WHEN COUNT(*) THEN SUM(COUNT(COUNT(TOTAL(COUNT(*))))) END)GLOB(MIN(rt0.c3))))) UNION ALL SELECT ALL rt0.c1 FROM rt0 GROUP BY rt0.c1 HAVING ((((CASE rt0.c1  WHEN COUNT(*) THEN SUM(COUNT(COUNT(TOTAL(COUNT(*))))) END)GLOB(MIN(rt0.c3)))) ISNULL);
SELECT ALL * FROM rt0, t1;
SELECT ALL * FROM rt0, t1 WHERE (626372652 COLLATE NOCASE) UNION ALL SELECT * FROM rt0, t1 WHERE ((NOT (626372652 COLLATE NOCASE))) UNION ALL SELECT ALL * FROM rt0, t1 WHERE (((626372652 COLLATE NOCASE) ISNULL));
SELECT ALL * FROM rt0, t1;
SELECT DISTINCT rt0.c3, t1.c1 FROM t1, rt0;
SELECT DISTINCT rt0.c3, t1.c1 FROM t1, rt0 WHERE (CASE NULL  WHEN ((((((((t1.c1)OR(rt0.c0)))AND(rt0.c2)))AND(rt0.c2)))AND(rt0.c2)) THEN load_extension(rt0.c0) ELSE ((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0)) END) UNION SELECT DISTINCT rt0.c3, t1.c1 FROM t1, rt0 WHERE ((NOT (CASE NULL  WHEN ((((((((t1.c1)OR(rt0.c0)))AND(rt0.c2)))AND(rt0.c2)))AND(rt0.c2)) THEN load_extension(rt0.c0) ELSE ((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0)) END))) UNION SELECT DISTINCT rt0.c3, t1.c1 FROM t1, rt0 WHERE (((CASE NULL  WHEN ((((((((t1.c1)OR(rt0.c0)))AND(rt0.c2)))AND(rt0.c2)))AND(rt0.c2)) THEN load_extension(rt0.c0) ELSE ((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0)) END) ISNULL));
SELECT DISTINCT rt0.c3, t1.c1 FROM t1, rt0;
SELECT ALL t1.c1 FROM t1 GROUP BY t1.c1;
SELECT t1.c1 FROM t1 WHERE (CAST(((t1.c1) BETWEEN (t1.c1) AND (t1.c1)) AS NUMERIC)) GROUP BY t1.c1 UNION SELECT ALL t1.c1 FROM t1 WHERE ((NOT (CAST(((t1.c1) BETWEEN (t1.c1) AND (t1.c1)) AS NUMERIC)))) GROUP BY t1.c1 UNION SELECT ALL t1.c1 FROM t1 WHERE (((CAST(((t1.c1) BETWEEN (t1.c1) AND (t1.c1)) AS NUMERIC)) ISNULL)) GROUP BY t1.c1;
SELECT ALL t1.c1 FROM t1 GROUP BY t1.c1;
SELECT ALL rt0.c0, rt0.c3, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c3, rt0.c1;
SELECT rt0.c0, rt0.c3, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c3, rt0.c1 HAVING ((CAST(rt0.c2 AS TEXT)) IS FALSE) UNION ALL SELECT ALL rt0.c0, rt0.c3, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c3, rt0.c1 HAVING (NOT (((CAST(rt0.c2 AS TEXT)) IS FALSE))) UNION ALL SELECT rt0.c0, rt0.c3, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c3, rt0.c1 HAVING ((((CAST(rt0.c2 AS TEXT)) IS FALSE)) ISNULL);
SELECT ALL rt0.c0, rt0.c3, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c3, rt0.c1;
SELECT rt0.c0, rt0.c3, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c3, rt0.c1 HAVING ((CAST(rt0.c2 AS TEXT)) IS FALSE) UNION ALL SELECT ALL rt0.c0, rt0.c3, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c3, rt0.c1 HAVING (NOT (((CAST(rt0.c2 AS TEXT)) IS FALSE))) UNION ALL SELECT rt0.c0, rt0.c3, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c3, rt0.c1 HAVING ((((CAST(rt0.c2 AS TEXT)) IS FALSE)) ISNULL);
SELECT ALL rt0.c0, rt0.c3, rt0.c1 FROM rt0 GROUP BY rt0.c0, rt0.c3, rt0.c1;
SELECT ALL rt0.c2 FROM rt0;
SELECT rt0.c2 FROM rt0 WHERE (CAST(((rt0.c3) BETWEEN (rt0.c0) AND (rt0.c0)) AS NUMERIC)) UNION ALL SELECT rt0.c2 FROM rt0 WHERE ((NOT (CAST(((rt0.c3) BETWEEN (rt0.c0) AND (rt0.c0)) AS NUMERIC)))) UNION ALL SELECT ALL rt0.c2 FROM rt0 WHERE (((CAST(((rt0.c3) BETWEEN (rt0.c0) AND (rt0.c0)) AS NUMERIC)) ISNULL));
SELECT ALL rt0.c2 FROM rt0;
SELECT DISTINCT * FROM rt0, t1;
SELECT DISTINCT * FROM rt0, t1 WHERE ('-632652568') UNION SELECT DISTINCT * FROM rt0, t1 WHERE ((NOT ('-632652568'))) UNION SELECT DISTINCT * FROM rt0, t1 WHERE ((('-632652568') ISNULL));
SELECT DISTINCT * FROM rt0, t1;
SELECT rt0.c2, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c3;
SELECT ALL rt0.c2, rt0.c3 FROM rt0 WHERE (((rt0.c2 COLLATE RTRIM)<>(0xfffffffff803cd9b))) GROUP BY rt0.c2, rt0.c3 UNION SELECT rt0.c2, rt0.c3 FROM rt0 WHERE ((NOT (((rt0.c2 COLLATE RTRIM)!=(0Xfffffffff803cd9b))))) GROUP BY rt0.c2, rt0.c3 UNION SELECT rt0.c2, rt0.c3 FROM rt0 WHERE (((((rt0.c2 COLLATE RTRIM)!=(0Xfffffffff803cd9b))) ISNULL)) GROUP BY rt0.c2, rt0.c3;
SELECT rt0.c2, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c3;
SELECT ALL rt0.c1, rt0.c2, rt0.c3, rt0.c0, t1.c1 FROM t1, rt0 GROUP BY rt0.c1, rt0.c2, rt0.c3, rt0.c0, t1.c1;
SELECT ALL rt0.c1, rt0.c2, rt0.c3, rt0.c0, t1.c1 FROM t1, rt0 GROUP BY rt0.c1, rt0.c2, rt0.c3, rt0.c0, t1.c1 HAVING MAX(((rt0.c2)=(GROUP_CONCAT(COUNT(MAX(rt0.c1)))))) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c3, rt0.c0, t1.c1 FROM t1, rt0 GROUP BY rt0.c1, rt0.c2, rt0.c3, rt0.c0, t1.c1 HAVING (NOT (MAX(((rt0.c2)=(GROUP_CONCAT(COUNT(MAX(rt0.c1)))))))) UNION ALL SELECT rt0.c1, rt0.c2, rt0.c3, rt0.c0, t1.c1 FROM t1, rt0 GROUP BY rt0.c1, rt0.c2, rt0.c3, rt0.c0, t1.c1 HAVING ((MAX(((rt0.c2)=(GROUP_CONCAT(COUNT(MAX(rt0.c1))))))) ISNULL);
SELECT ALL * FROM rt0;
SELECT * FROM rt0 WHERE ((rt0.c3 IN ())) UNION ALL SELECT ALL * FROM rt0 NOT INDEXED WHERE ((NOT ((rt0.c3 IN ())))) UNION ALL SELECT ALL * FROM rt0 WHERE ((((rt0.c3 IN ())) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT rt0.c3, t1.c1, rt0.c0 FROM t1, rt0;
SELECT DISTINCT rt0.c3, t1.c1, rt0.c0 FROM t1, rt0 WHERE (((rt0.c0 COLLATE NOCASE)!=(((rt0.c2)>(rt0.c2))))) UNION SELECT DISTINCT rt0.c3, t1.c1, rt0.c0 FROM t1, rt0 WHERE ((NOT (((rt0.c0 COLLATE NOCASE)<>(((rt0.c2)>(rt0.c2))))))) UNION SELECT DISTINCT rt0.c3, t1.c1, rt0.c0 FROM t1, rt0 WHERE (((((rt0.c0 COLLATE NOCASE)<>(((rt0.c2)>(rt0.c2))))) ISNULL));
SELECT DISTINCT rt0.c3, t1.c1, rt0.c0 FROM t1, rt0;
SELECT rt0.c0 FROM t1, rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c0 FROM t1, rt0 WHERE ((NOT ((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((t1.c1)))))) GROUP BY rt0.c0 UNION SELECT rt0.c0 FROM t1, rt0 WHERE ((NOT ((NOT ((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((t1.c1)))))))) GROUP BY rt0.c0 UNION SELECT ALL rt0.c0 FROM t1, rt0 WHERE ((((NOT ((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((t1.c1)))))) ISNULL)) GROUP BY rt0.c0;
SELECT rt0.c0 FROM t1, rt0 GROUP BY rt0.c0;
SELECT ALL rt0.c2, t1.c1, rt0.c3, rt0.c0 FROM rt0 CROSS JOIN t1 ON CAST(0.00868892406510291 AS INTEGER) GROUP BY rt0.c2, t1.c1, rt0.c3, rt0.c0;
SELECT ALL rt0.c2, t1.c1, rt0.c3, rt0.c0 FROM rt0 CROSS JOIN t1 ON CAST(0.00868892406510291 AS INTEGER) GROUP BY rt0.c2, t1.c1, rt0.c3, rt0.c0 HAVING GROUP_CONCAT(rt0.c2) UNION ALL SELECT ALL rt0.c2, t1.c1, rt0.c3, rt0.c0 FROM rt0 CROSS JOIN t1 ON CAST(0.00868892406510291 AS INTEGER) GROUP BY rt0.c2, t1.c1, rt0.c3, rt0.c0 HAVING (NOT (GROUP_CONCAT(rt0.c2))) UNION ALL SELECT rt0.c2, t1.c1, rt0.c3, rt0.c0 FROM rt0 CROSS JOIN t1 ON CAST(0.00868892406510291 AS INTEGER) GROUP BY rt0.c2, t1.c1, rt0.c3, rt0.c0 HAVING ((GROUP_CONCAT(rt0.c2)) ISNULL);
SELECT ALL rt0.c2, t1.c1, rt0.c3, rt0.c0 FROM rt0 CROSS JOIN t1 ON CAST(0.00868892406510291 AS INTEGER) GROUP BY rt0.c2, t1.c1, rt0.c3, rt0.c0;
SELECT ALL rt0.c2, t1.c1, rt0.c3, rt0.c0 FROM rt0 CROSS JOIN t1 ON CAST(0.00868892406510291 AS INTEGER) GROUP BY rt0.c2, t1.c1, rt0.c3, rt0.c0 HAVING GROUP_CONCAT(rt0.c2) UNION ALL SELECT ALL rt0.c2, t1.c1, rt0.c3, rt0.c0 FROM rt0 CROSS JOIN t1 ON CAST(0.00868892406510291 AS INTEGER) GROUP BY rt0.c2, t1.c1, rt0.c3, rt0.c0 HAVING (NOT (GROUP_CONCAT(rt0.c2))) UNION ALL SELECT rt0.c2, t1.c1, rt0.c3, rt0.c0 FROM rt0 CROSS JOIN t1 ON CAST(0.00868892406510291 AS INTEGER) GROUP BY rt0.c2, t1.c1, rt0.c3, rt0.c0 HAVING ((GROUP_CONCAT(rt0.c2)) ISNULL);
SELECT ALL rt0.c2, t1.c1, rt0.c3, rt0.c0 FROM rt0 CROSS JOIN t1 ON CAST(0.00868892406510291 AS INTEGER) GROUP BY rt0.c2, t1.c1, rt0.c3, rt0.c0;
SELECT ALL rt0.c2, rt0.c3 FROM rt0;
SELECT rt0.c2, rt0.c3 FROM rt0 WHERE (CASE WHEN (rt0.c0 IN ()) THEN STRFTIME(rt0.c3, rt0.c0, rt0.c2) ELSE CAST(rt0.c1 AS TEXT) END) UNION ALL SELECT rt0.c2, rt0.c3 FROM rt0 WHERE ((NOT (CASE WHEN (rt0.c0 IN ()) THEN STRFTIME(rt0.c3, rt0.c0, rt0.c2) ELSE CAST(rt0.c1 AS TEXT) END))) UNION ALL SELECT rt0.c2, rt0.c3 FROM rt0 WHERE (((CASE WHEN (rt0.c0 IN ()) THEN STRFTIME(rt0.c3, rt0.c0, rt0.c2) ELSE CAST(rt0.c1 AS TEXT) END) ISNULL));
SELECT ALL rt0.c2, rt0.c3 FROM rt0;
SELECT DISTINCT * FROM t1;
SELECT DISTINCT * FROM t1 WHERE ((((t1.c1 COLLATE RTRIM))>=((((t1.c1)GLOB(t1.c1)))))) UNION SELECT DISTINCT * FROM t1 WHERE ((NOT ((((t1.c1 COLLATE RTRIM))>=((((t1.c1)GLOB(t1.c1)))))))) UNION SELECT DISTINCT * FROM t1 WHERE ((((((t1.c1 COLLATE RTRIM))>=((((t1.c1)GLOB(t1.c1)))))) ISNULL));
SELECT DISTINCT * FROM t1;
SELECT rt0.c0, t1.c1 FROM t1 NATURAL JOIN rt0 GROUP BY rt0.c0, t1.c1;
SELECT rt0.c0, t1.c1 FROM t1 NATURAL JOIN rt0 WHERE (((((((t1.c1) NOT BETWEEN (t1.c1) AND (rt0.c1)))AND((NOT (t1.c1)))))AND((rt0.c3 IN ())))) GROUP BY rt0.c0, t1.c1 UNION SELECT ALL rt0.c0, t1.c1 FROM t1 NATURAL JOIN rt0 WHERE ((NOT (((((((t1.c1) NOT BETWEEN (t1.c1) AND (rt0.c1)))AND((NOT (t1.c1)))))AND((rt0.c3 IN ())))))) GROUP BY rt0.c0, t1.c1 UNION SELECT rt0.c0, t1.c1 FROM t1 NATURAL JOIN rt0 WHERE (((((((((t1.c1) NOT BETWEEN (t1.c1) AND (rt0.c1)))AND((NOT (t1.c1)))))AND((rt0.c3 IN ())))) ISNULL)) GROUP BY rt0.c0, t1.c1;
SELECT rt0.c0, t1.c1 FROM t1 NATURAL JOIN rt0 GROUP BY rt0.c0, t1.c1;
SELECT rt0.c3, rt0.c0 FROM t1 INNER JOIN rt0 ON (((((((rt0.c3))>=((rt0.c0))))OR(t1.c1)))OR(rt0.c2)) GROUP BY rt0.c3, rt0.c0;
SELECT rt0.c3, rt0.c0 FROM t1 INNER JOIN rt0 ON (((((((rt0.c3))>=((rt0.c0))))OR(t1.c1)))OR(rt0.c2)) GROUP BY rt0.c3, rt0.c0 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c3, rt0.c0 FROM t1 INNER JOIN rt0 ON (((((((rt0.c3))>=((rt0.c0))))OR(t1.c1)))OR(rt0.c2)) GROUP BY rt0.c3, rt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c3, rt0.c0 FROM t1 INNER JOIN rt0 ON (((((((rt0.c3))>=((rt0.c0))))OR(t1.c1)))OR(rt0.c2)) GROUP BY rt0.c3, rt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c3, rt0.c0 FROM t1 INNER JOIN rt0 ON (((((((rt0.c3))>=((rt0.c0))))OR(t1.c1)))OR(rt0.c2)) GROUP BY rt0.c3, rt0.c0;
SELECT rt0.c3, rt0.c0 FROM t1 INNER JOIN rt0 ON (((((((rt0.c3))>=((rt0.c0))))OR(t1.c1)))OR(rt0.c2)) GROUP BY rt0.c3, rt0.c0 HAVING COUNT(*) UNION ALL SELECT ALL rt0.c3, rt0.c0 FROM t1 INNER JOIN rt0 ON (((((((rt0.c3))>=((rt0.c0))))OR(t1.c1)))OR(rt0.c2)) GROUP BY rt0.c3, rt0.c0 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c3, rt0.c0 FROM t1 INNER JOIN rt0 ON (((((((rt0.c3))>=((rt0.c0))))OR(t1.c1)))OR(rt0.c2)) GROUP BY rt0.c3, rt0.c0 HAVING ((COUNT(*)) ISNULL);
SELECT rt0.c3, rt0.c0 FROM t1 INNER JOIN rt0 ON (((((((rt0.c3))>=((rt0.c0))))OR(t1.c1)))OR(rt0.c2)) GROUP BY rt0.c3, rt0.c0;
SELECT MAX(((TYPEOF(DISTINCT t1.c1))>=(CAST(t1.c1 AS BLOB)))) FROM t1 ORDER BY (((t1.c1) BETWEEN (t1.c1) AND (x'')) IN ()) DESC, ((CASE WHEN t1.c1 THEN NULL WHEN t1.c1 THEN t1.c1 WHEN t1.c1 THEN t1.c1 ELSE '' END)%(((((((((t1.c1)AND(t1.c1)))AND(t1.c1)))OR(t1.c1)))AND(t1.c1))))  NULLS LAST, LIKELIHOOD((t1.c1 IN (t1.c1)), 0.6527091215979399)  NULLS LAST;
SELECT * FROM rt0;
SELECT ALL * FROM rt0 WHERE (((rt0.c0 COLLATE NOCASE) IS FALSE)) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT (((rt0.c0 COLLATE NOCASE) IS FALSE)))) UNION ALL SELECT ALL * FROM rt0 WHERE (((((rt0.c0 COLLATE NOCASE) IS FALSE)) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT rt0.c1 FROM t1, rt0;
SELECT DISTINCT rt0.c1 FROM t1, rt0 WHERE (((t1.c1 COLLATE NOCASE)IS((~ (rt0.c1))))) UNION SELECT DISTINCT rt0.c1 FROM t1, rt0 WHERE ((NOT (((t1.c1 COLLATE NOCASE)IS((~ (rt0.c1))))))) UNION SELECT DISTINCT rt0.c1 FROM t1, rt0 NOT INDEXED WHERE (((((t1.c1 COLLATE NOCASE)IS((~ (rt0.c1))))) ISNULL));
SELECT DISTINCT rt0.c1 FROM t1, rt0;
SELECT ALL rt0.c2, rt0.c1, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c3;
SELECT ALL rt0.c2, rt0.c1, rt0.c3 FROM rt0 WHERE (((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c1))) NOT BETWEEN (((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0))) AND (rt0.c3 COLLATE RTRIM))) GROUP BY rt0.c2, rt0.c1, rt0.c3 UNION SELECT ALL rt0.c2, rt0.c1, rt0.c3 FROM rt0 WHERE ((NOT (((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c1))) NOT BETWEEN (((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0))) AND (rt0.c3 COLLATE RTRIM))))) GROUP BY rt0.c2, rt0.c1, rt0.c3 UNION SELECT ALL rt0.c2, rt0.c1, rt0.c3 FROM rt0 WHERE (((((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c1))) NOT BETWEEN (((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0))) AND (rt0.c3 COLLATE RTRIM))) ISNULL)) GROUP BY rt0.c2, rt0.c1, rt0.c3;
SELECT ALL rt0.c2, rt0.c1, rt0.c3 FROM rt0 GROUP BY rt0.c2, rt0.c1, rt0.c3;
SELECT ALL t1.c1 FROM t1 GROUP BY t1.c1;
SELECT ALL t1.c1 FROM t1 GROUP BY t1.c1 HAVING MAX(MIN(t1.c1)) UNION ALL SELECT ALL t1.c1 FROM t1 GROUP BY t1.c1 HAVING (NOT (MAX(MIN(t1.c1)))) UNION ALL SELECT ALL t1.c1 FROM t1 GROUP BY t1.c1 HAVING ((MAX(MIN(t1.c1))) ISNULL);
SELECT ALL rt0.c3 FROM rt0;
SELECT rt0.c3 FROM rt0 WHERE ((((((rt0.c0, rt0.c0, rt0.c0))<=((rt0.c3, rt0.c0, rt0.c0))))>>(rt0.c1 COLLATE RTRIM))) UNION ALL SELECT rt0.c3 FROM rt0 WHERE ((NOT ((((((rt0.c0, rt0.c0, rt0.c0))<=((rt0.c3, rt0.c0, rt0.c0))))>>(rt0.c1 COLLATE RTRIM))))) UNION ALL SELECT ALL rt0.c3 FROM rt0 WHERE ((((((((rt0.c0, rt0.c0, rt0.c0))<=((rt0.c3, rt0.c0, rt0.c0))))>>(rt0.c1 COLLATE RTRIM))) ISNULL));
SELECT ALL rt0.c3 FROM rt0;
SELECT DISTINCT t1.c1 FROM t1;
SELECT DISTINCT t1.c1 FROM t1 WHERE (((CASE t1.c1  WHEN t1.c1 THEN t1.c1 END)+((('-1047893293')+(t1.c1))))) UNION SELECT DISTINCT t1.c1 FROM t1 WHERE ((NOT (((CASE t1.c1  WHEN t1.c1 THEN t1.c1 END)+((('-1047893293')+(t1.c1))))))) UNION SELECT DISTINCT t1.c1 FROM t1 WHERE (((((CASE t1.c1  WHEN t1.c1 THEN t1.c1 END)+((('-1047893293')+(t1.c1))))) ISNULL));
SELECT DISTINCT t1.c1 FROM t1;
SELECT ALL rt0.c2, rt0.c0, t1.c1 FROM rt0 FULL OUTER JOIN t1 ON ((LIKELY(NULL)) BETWEEN (CAST(rt0.c0 AS NUMERIC)) AND (CAST(t1.c1 AS TEXT))) GROUP BY rt0.c2, rt0.c0, t1.c1;
SELECT ALL rt0.c2, rt0.c0, t1.c1 FROM rt0 FULL OUTER JOIN t1 ON ((LIKELY(NULL)) BETWEEN (CAST(rt0.c0 AS NUMERIC)) AND (CAST(t1.c1 AS TEXT))) WHERE (((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c3))) IN ())) GROUP BY rt0.c2, rt0.c0, t1.c1 UNION SELECT rt0.c2, rt0.c0, t1.c1 FROM rt0 FULL OUTER JOIN t1 ON ((LIKELY(NULL)) BETWEEN (CAST(rt0.c0 AS NUMERIC)) AND (CAST(t1.c1 AS TEXT))) WHERE ((NOT (((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c3))) IN ())))) GROUP BY rt0.c2, rt0.c0, t1.c1 UNION SELECT rt0.c2, rt0.c0, t1.c1 FROM rt0 FULL OUTER JOIN t1 ON ((LIKELY(NULL)) BETWEEN (CAST(rt0.c0 AS NUMERIC)) AND (CAST(t1.c1 AS TEXT))) WHERE (((((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c3))) IN ())) ISNULL)) GROUP BY rt0.c2, rt0.c0, t1.c1;
SELECT ALL rt0.c2, rt0.c0, t1.c1 FROM rt0 FULL OUTER JOIN t1 ON ((LIKELY(NULL)) BETWEEN (CAST(rt0.c0 AS NUMERIC)) AND (CAST(t1.c1 AS TEXT))) GROUP BY rt0.c2, rt0.c0, t1.c1;
SELECT t1.c1, rt0.c3, rt0.c2, rt0.c0, rt0.c1 FROM t1, rt0 GROUP BY t1.c1, rt0.c3, rt0.c2, rt0.c0, rt0.c1;
SELECT ALL t1.c1, rt0.c3, rt0.c2, rt0.c0, rt0.c1 FROM t1, rt0 GROUP BY t1.c1, rt0.c3, rt0.c2, rt0.c0, rt0.c1 HAVING AVG(GROUP_CONCAT(GROUP_CONCAT(rt0.c1))) UNION ALL SELECT ALL t1.c1, rt0.c3, rt0.c2, rt0.c0, rt0.c1 FROM t1, rt0 GROUP BY t1.c1, rt0.c3, rt0.c2, rt0.c0, rt0.c1 HAVING (NOT (AVG(GROUP_CONCAT(GROUP_CONCAT(rt0.c1))))) UNION ALL SELECT t1.c1, rt0.c3, rt0.c2, rt0.c0, rt0.c1 FROM t1, rt0 GROUP BY t1.c1, rt0.c3, rt0.c2, rt0.c0, rt0.c1 HAVING ((AVG(GROUP_CONCAT(GROUP_CONCAT(rt0.c1)))) ISNULL);
SELECT rt0.c3, rt0.c1, rt0.c2 FROM rt0, t1;
SELECT rt0.c3, rt0.c1, rt0.c2 FROM rt0, t1 WHERE (x'') UNION ALL SELECT ALL rt0.c3, rt0.c1, rt0.c2 FROM rt0, t1 WHERE ((NOT (x''))) UNION ALL SELECT ALL rt0.c3, rt0.c1, rt0.c2 FROM rt0, t1 WHERE (((x'') ISNULL));
SELECT rt0.c3, rt0.c1, rt0.c2 FROM rt0, t1;
SELECT DISTINCT t1.c1, rt0.c2, rt0.c3, rt0.c0 FROM t1, rt0;
SELECT DISTINCT t1.c1, rt0.c2, rt0.c3, rt0.c0 FROM t1, rt0 WHERE (((rt0.c0)|((('4V')<<(rt0.c1))))) UNION SELECT DISTINCT t1.c1, rt0.c2, rt0.c3, rt0.c0 FROM t1, rt0 WHERE ((NOT (((rt0.c0)|((('4V')<<(rt0.c1))))))) UNION SELECT DISTINCT t1.c1, rt0.c2, rt0.c3, rt0.c0 FROM t1, rt0 WHERE (((((rt0.c0)|((('4V')<<(rt0.c1))))) ISNULL));
SELECT DISTINCT t1.c1, rt0.c2, rt0.c3, rt0.c0 FROM t1, rt0;
SELECT rt0.c0, rt0.c2, rt0.c1, rt0.c3 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1, rt0.c3;
SELECT rt0.c0, rt0.c2, rt0.c1, rt0.c3 FROM rt0 WHERE ((~ (CASE rt0.c1  WHEN rt0.c3 THEN rt0.c0 END))) GROUP BY rt0.c0, rt0.c2, rt0.c1, rt0.c3 UNION SELECT rt0.c0, rt0.c2, rt0.c1, rt0.c3 FROM rt0 WHERE ((NOT ((~ (CASE rt0.c1  WHEN rt0.c3 THEN rt0.c0 END))))) GROUP BY rt0.c0, rt0.c2, rt0.c1, rt0.c3 UNION SELECT ALL rt0.c0, rt0.c2, rt0.c1, rt0.c3 FROM rt0 WHERE ((((~ (CASE rt0.c1  WHEN rt0.c3 THEN rt0.c0 END))) ISNULL)) GROUP BY rt0.c0, rt0.c2, rt0.c1, rt0.c3;
SELECT rt0.c0, rt0.c2, rt0.c1, rt0.c3 FROM rt0 GROUP BY rt0.c0, rt0.c2, rt0.c1, rt0.c3;
SELECT ALL rt0.c3, rt0.c2, rt0.c1 FROM rt0, t1 GROUP BY rt0.c3, rt0.c2, rt0.c1;
SELECT rt0.c3, rt0.c2, rt0.c1 FROM rt0, t1 GROUP BY rt0.c3, rt0.c2, rt0.c1 HAVING MAX(rt0.c2) UNION ALL SELECT rt0.c3, rt0.c2, rt0.c1 FROM rt0, t1 GROUP BY rt0.c3, rt0.c2, rt0.c1 HAVING (NOT (MAX(rt0.c2))) UNION ALL SELECT ALL rt0.c3, rt0.c2, rt0.c1 FROM rt0, t1 GROUP BY rt0.c3, rt0.c2, rt0.c1 HAVING ((MAX(rt0.c2)) ISNULL);
SELECT ALL rt0.c3, rt0.c2, rt0.c1 FROM rt0, t1 GROUP BY rt0.c3, rt0.c2, rt0.c1;
SELECT rt0.c3, rt0.c2, rt0.c1 FROM rt0, t1 GROUP BY rt0.c3, rt0.c2, rt0.c1 HAVING MAX(rt0.c2) UNION ALL SELECT rt0.c3, rt0.c2, rt0.c1 FROM rt0, t1 GROUP BY rt0.c3, rt0.c2, rt0.c1 HAVING (NOT (MAX(rt0.c2))) UNION ALL SELECT ALL rt0.c3, rt0.c2, rt0.c1 FROM rt0, t1 GROUP BY rt0.c3, rt0.c2, rt0.c1 HAVING ((MAX(rt0.c2)) ISNULL);
SELECT ALL rt0.c3, rt0.c2, rt0.c1 FROM rt0, t1 GROUP BY rt0.c3, rt0.c2, rt0.c1;
SELECT ALL rt0.c0, t1.c1 FROM t1, rt0;
SELECT rt0.c0, t1.c1 FROM t1, rt0 WHERE (0xffffffffb81e906d) UNION ALL SELECT ALL rt0.c0, t1.c1 FROM t1, rt0 WHERE ((NOT (0Xffffffffb81e906d))) UNION ALL SELECT ALL rt0.c0, t1.c1 FROM t1, rt0 WHERE (((0Xffffffffb81e906d) ISNULL));
SELECT ALL rt0.c0, t1.c1 FROM t1, rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (SQLITE_SOURCE_ID()) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (SQLITE_SOURCE_ID()))) UNION SELECT DISTINCT * FROM rt0 WHERE (((SQLITE_SOURCE_ID()) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT ALL rt0.c0, rt0.c1, rt0.c2, rt0.c3 FROM rt0 GROUP BY rt0.c0, rt0.c1, rt0.c2, rt0.c3;
SELECT ALL rt0.c0, rt0.c1, rt0.c2, rt0.c3 FROM rt0 WHERE (json_extract(((x'7c1285ed') NOT BETWEEN (rt0.c0) AND (rt0.c2)), rt0.c3 COLLATE RTRIM)) GROUP BY rt0.c0, rt0.c1, rt0.c2, rt0.c3 UNION SELECT rt0.c0, rt0.c1, rt0.c2, rt0.c3 FROM rt0 WHERE ((NOT (json_extract(((x'7c1285ed') NOT BETWEEN (rt0.c0) AND (rt0.c2)), rt0.c3 COLLATE RTRIM)))) GROUP BY rt0.c0, rt0.c1, rt0.c2, rt0.c3 UNION SELECT rt0.c0, rt0.c1, rt0.c2, rt0.c3 FROM rt0 WHERE (((json_extract(((x'7c1285ed') NOT BETWEEN (rt0.c0) AND (rt0.c2)), rt0.c3 COLLATE RTRIM)) ISNULL)) GROUP BY rt0.c0, rt0.c1, rt0.c2, rt0.c3;
SELECT rt0.c0, rt0.c1, t1.c1, rt0.c3, rt0.c2 FROM rt0, t1 GROUP BY rt0.c0, rt0.c1, t1.c1, rt0.c3, rt0.c2;
SELECT rt0.c0, rt0.c1, t1.c1, rt0.c3, rt0.c2 FROM rt0, t1 GROUP BY rt0.c0, rt0.c1, t1.c1, rt0.c3, rt0.c2 HAVING '670932934' UNION ALL SELECT rt0.c0, rt0.c1, t1.c1, rt0.c3, rt0.c2 FROM rt0, t1 GROUP BY rt0.c0, rt0.c1, t1.c1, rt0.c3, rt0.c2 HAVING (NOT ('670932934')) UNION ALL SELECT rt0.c0, rt0.c1, t1.c1, rt0.c3, rt0.c2 FROM rt0, t1 GROUP BY rt0.c0, rt0.c1, t1.c1, rt0.c3, rt0.c2 HAVING (('670932934') ISNULL);
SELECT rt0.c0, rt0.c1, t1.c1, rt0.c3, rt0.c2 FROM rt0, t1 GROUP BY rt0.c0, rt0.c1, t1.c1, rt0.c3, rt0.c2;
SELECT rt0.c0, rt0.c1, t1.c1, rt0.c3, rt0.c2 FROM rt0, t1 GROUP BY rt0.c0, rt0.c1, t1.c1, rt0.c3, rt0.c2 HAVING '670932934' UNION ALL SELECT rt0.c0, rt0.c1, t1.c1, rt0.c3, rt0.c2 FROM rt0, t1 GROUP BY rt0.c0, rt0.c1, t1.c1, rt0.c3, rt0.c2 HAVING (NOT ('670932934')) UNION ALL SELECT rt0.c0, rt0.c1, t1.c1, rt0.c3, rt0.c2 FROM rt0, t1 GROUP BY rt0.c0, rt0.c1, t1.c1, rt0.c3, rt0.c2 HAVING (('670932934') ISNULL);
SELECT rt0.c0, rt0.c1, t1.c1, rt0.c3, rt0.c2 FROM rt0, t1 GROUP BY rt0.c0, rt0.c1, t1.c1, rt0.c3, rt0.c2;
SELECT * FROM rt0;
SELECT * FROM rt0 WHERE (((((((0.360524135921508) IS FALSE))OR((rt0.c2 IN ()))))AND(((rt0.c2)|(rt0.c0))))) UNION ALL SELECT * FROM rt0 WHERE ((NOT (((((((0.360524135921508) IS FALSE))OR((rt0.c2 IN ()))))AND(((rt0.c2)|(rt0.c0))))))) UNION ALL SELECT * FROM rt0 WHERE (((((((((0.360524135921508) IS FALSE))OR((rt0.c2 IN ()))))AND(((rt0.c2)|(rt0.c0))))) ISNULL));
SELECT * FROM rt0;
SELECT DISTINCT rt0.c1 FROM t1, rt0;
SELECT DISTINCT rt0.c1 FROM t1, rt0 WHERE (CASE LIKELY(NULL)  WHEN rt0.c0 COLLATE RTRIM THEN (rt0.c3 IN ()) ELSE t1.c1 END) UNION SELECT DISTINCT rt0.c1 FROM t1, rt0 WHERE ((NOT (CASE LIKELY(NULL)  WHEN rt0.c0 COLLATE RTRIM THEN (rt0.c3 IN ()) ELSE t1.c1 END))) UNION SELECT DISTINCT rt0.c1 FROM t1, rt0 WHERE (((CASE LIKELY(NULL)  WHEN rt0.c0 COLLATE RTRIM THEN (rt0.c3 IN ()) ELSE t1.c1 END) ISNULL));
SELECT DISTINCT rt0.c1 FROM t1, rt0;
SELECT ALL t1.c1 FROM t1 GROUP BY t1.c1;
SELECT t1.c1 FROM t1 WHERE ((((t1.c1)) BETWEEN ((t1.c1 COLLATE BINARY)) AND ((((((t1.c1)OR(t1.c1)))OR(t1.c1)))))) GROUP BY t1.c1 UNION SELECT t1.c1 FROM t1 WHERE ((NOT ((((t1.c1)) BETWEEN ((t1.c1 COLLATE BINARY)) AND ((((((t1.c1)OR(t1.c1)))OR(t1.c1)))))))) GROUP BY t1.c1 UNION SELECT t1.c1 FROM t1 WHERE ((((((t1.c1)) BETWEEN ((t1.c1 COLLATE BINARY)) AND ((((((t1.c1)OR(t1.c1)))OR(t1.c1)))))) ISNULL)) GROUP BY t1.c1;
SELECT ALL t1.c1 FROM t1 GROUP BY t1.c1;
SELECT ALL t1.c1 FROM t1 GROUP BY t1.c1;
SELECT ALL t1.c1 FROM t1 GROUP BY t1.c1 HAVING GROUP_CONCAT(0.9720857905086123) UNION ALL SELECT t1.c1 FROM t1 GROUP BY t1.c1 HAVING (NOT (GROUP_CONCAT(0.9720857905086123))) UNION ALL SELECT ALL t1.c1 FROM t1 GROUP BY t1.c1 HAVING ((GROUP_CONCAT(0.9720857905086123)) ISNULL);
SELECT ALL t1.c1 FROM t1 GROUP BY t1.c1;
SELECT ALL t1.c1 FROM t1 GROUP BY t1.c1 HAVING GROUP_CONCAT(0.9720857905086123) UNION ALL SELECT t1.c1 FROM t1 GROUP BY t1.c1 HAVING (NOT (GROUP_CONCAT(0.9720857905086123))) UNION ALL SELECT ALL t1.c1 FROM t1 GROUP BY t1.c1 HAVING ((GROUP_CONCAT(0.9720857905086123)) ISNULL);
SELECT ALL t1.c1 FROM t1 GROUP BY t1.c1;
SELECT ALL * FROM t1 FULL OUTER JOIN rt0 ON ((t1.c1)=((NOT (-1269078222))));
SELECT ALL * FROM t1 FULL OUTER JOIN rt0 ON ((t1.c1)==((NOT (-1269078222)))) WHERE (((((((((rt0.c1)AND((rt0.c1 IN ()))))AND(((t1.c1)<(rt0.c1)))))OR(CAST(t1.c1 AS INTEGER))))AND(((rt0.c0)|(rt0.c3))))) UNION ALL SELECT * FROM t1 FULL OUTER JOIN rt0 ON ((t1.c1)==((NOT (-1269078222)))) WHERE ((NOT (((((((((rt0.c1)AND((rt0.c1 IN ()))))AND(((t1.c1)<(rt0.c1)))))OR(CAST(t1.c1 AS INTEGER))))AND(((rt0.c0)|(rt0.c3))))))) UNION ALL SELECT * FROM t1 FULL OUTER JOIN rt0 ON ((t1.c1)==((NOT (-1269078222)))) WHERE (((((((((((rt0.c1)AND((rt0.c1 IN ()))))AND(((t1.c1)<(rt0.c1)))))OR(CAST(t1.c1 AS INTEGER))))AND(((rt0.c0)|(rt0.c3))))) ISNULL));
SELECT ALL * FROM t1 FULL OUTER JOIN rt0 ON ((t1.c1)=((NOT (-1269078222))));
SELECT DISTINCT t1.c1, rt0.c3, rt0.c2, rt0.c1 FROM rt0 CROSS JOIN t1 ON '-1686164089' COLLATE BINARY;
SELECT DISTINCT t1.c1, rt0.c3, rt0.c2, rt0.c1 FROM rt0 CROSS JOIN t1 ON '-1686164089' COLLATE BINARY WHERE (UNLIKELY(rt0.c0) COLLATE RTRIM) UNION SELECT DISTINCT t1.c1, rt0.c3, rt0.c2, rt0.c1 FROM rt0 CROSS JOIN t1 ON '-1686164089' COLLATE BINARY WHERE ((NOT (UNLIKELY(rt0.c0) COLLATE RTRIM))) UNION SELECT DISTINCT t1.c1, rt0.c3, rt0.c2, rt0.c1 FROM rt0 CROSS JOIN t1 ON '-1686164089' COLLATE BINARY WHERE (((UNLIKELY(rt0.c0) COLLATE RTRIM) ISNULL));
SELECT DISTINCT t1.c1, rt0.c3, rt0.c2, rt0.c1 FROM rt0 CROSS JOIN t1 ON '-1686164089' COLLATE BINARY;
SELECT ALL rt0.c3, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c3, rt0.c1, rt0.c2;
SELECT rt0.c3, rt0.c1, rt0.c2 FROM rt0 WHERE (((rt0.c0 IN ()) IN ())) GROUP BY rt0.c3, rt0.c1, rt0.c2 UNION SELECT ALL rt0.c3, rt0.c1, rt0.c2 FROM rt0 WHERE ((NOT (((rt0.c0 IN ()) IN ())))) GROUP BY rt0.c3, rt0.c1, rt0.c2 UNION SELECT ALL rt0.c3, rt0.c1, rt0.c2 FROM rt0 WHERE (((((rt0.c0 IN ()) IN ())) ISNULL)) GROUP BY rt0.c3, rt0.c1, rt0.c2;
SELECT ALL rt0.c3, rt0.c1, rt0.c2 FROM rt0 GROUP BY rt0.c3, rt0.c1, rt0.c2;
SELECT ALL rt0.c0, rt0.c1, t1.c1 FROM rt0 RIGHT OUTER JOIN t1 ON ((((t1.c1)>(t1.c1)))IS(((rt0.c3) NOTNULL))) GROUP BY rt0.c0, rt0.c1, t1.c1;
SELECT rt0.c0, rt0.c1, t1.c1 FROM rt0 RIGHT OUTER JOIN t1 ON ((((t1.c1)>(t1.c1)))IS(((rt0.c3) NOTNULL))) GROUP BY rt0.c0, rt0.c1, t1.c1 HAVING SUM(CASE WHEN TOTAL(rt0.c2) THEN MIN(rt0.c1) WHEN MAX(COUNT(rt0.c1)) THEN GROUP_CONCAT(MAX(MIN(MAX(rt0.c1)))) WHEN SUM(rt0.c3) THEN rt0.c3 ELSE rt0.c2 END) UNION ALL SELECT ALL rt0.c0, rt0.c1, t1.c1 FROM rt0 RIGHT OUTER JOIN t1 ON ((((t1.c1)>(t1.c1)))IS(((rt0.c3) NOTNULL))) GROUP BY rt0.c0, rt0.c1, t1.c1 HAVING (NOT (SUM(CASE WHEN TOTAL(rt0.c2) THEN MIN(rt0.c1) WHEN MAX(COUNT(rt0.c1)) THEN GROUP_CONCAT(MAX(MIN(MAX(rt0.c1)))) WHEN SUM(rt0.c3) THEN rt0.c3 ELSE rt0.c2 END))) UNION ALL SELECT rt0.c0, rt0.c1, t1.c1 FROM rt0 RIGHT OUTER JOIN t1 ON ((((t1.c1)>(t1.c1)))IS(((rt0.c3) NOTNULL))) GROUP BY rt0.c0, rt0.c1, t1.c1 HAVING ((SUM(CASE WHEN TOTAL(rt0.c2) THEN MIN(rt0.c1) WHEN MAX(COUNT(rt0.c1)) THEN GROUP_CONCAT(MAX(MIN(MAX(rt0.c1)))) WHEN SUM(rt0.c3) THEN rt0.c3 ELSE rt0.c2 END)) ISNULL);
SELECT * FROM t1;
SELECT ALL * FROM t1 WHERE (t1.c1) UNION ALL SELECT * FROM t1 WHERE ((NOT (t1.c1))) UNION ALL SELECT ALL * FROM t1 WHERE (((t1.c1) ISNULL));
SELECT * FROM t1;
SELECT DISTINCT * FROM t1;
SELECT DISTINCT * FROM t1 WHERE (((((t1.c1)<=(t1.c1))) NOT BETWEEN (((t1.c1)|(t1.c1))) AND ('Xo_轍5' COLLATE BINARY))) UNION SELECT DISTINCT * FROM t1 WHERE ((NOT (((((t1.c1)<=(t1.c1))) NOT BETWEEN (((t1.c1)|(t1.c1))) AND ('Xo_轍5' COLLATE BINARY))))) UNION SELECT DISTINCT * FROM t1 WHERE (((((((t1.c1)<=(t1.c1))) NOT BETWEEN (((t1.c1)|(t1.c1))) AND ('Xo_轍5' COLLATE BINARY))) ISNULL));
SELECT DISTINCT * FROM t1;
SELECT ALL t1.c1 FROM t1 GROUP BY t1.c1;
SELECT ALL t1.c1 FROM t1 WHERE (CASE ((t1.c1)<<(t1.c1))  WHEN (((t1.c1))<((t1.c1))) THEN (((t1.c1))<=((t1.c1))) END) GROUP BY t1.c1 UNION SELECT t1.c1 FROM t1 WHERE ((NOT (CASE ((t1.c1)<<(t1.c1))  WHEN (((t1.c1))<((t1.c1))) THEN (((t1.c1))<=((t1.c1))) END))) GROUP BY t1.c1 UNION SELECT t1.c1 FROM t1 WHERE (((CASE ((t1.c1)<<(t1.c1))  WHEN (((t1.c1))<((t1.c1))) THEN (((t1.c1))<=((t1.c1))) END) ISNULL)) GROUP BY t1.c1;
SELECT ALL t1.c1 FROM t1 GROUP BY t1.c1;
SELECT ALL t1.c1 FROM t1 GROUP BY t1.c1;
SELECT ALL t1.c1 FROM t1 GROUP BY t1.c1 HAVING MAX(LAST_INSERT_ROWID()) UNION ALL SELECT ALL t1.c1 FROM t1 GROUP BY t1.c1 HAVING (NOT (MAX(LAST_INSERT_ROWID()))) UNION ALL SELECT t1.c1 FROM t1 GROUP BY t1.c1 HAVING ((MAX(LAST_INSERT_ROWID())) ISNULL);
SELECT ALL t1.c1 FROM t1 GROUP BY t1.c1;
SELECT ALL t1.c1 FROM t1 GROUP BY t1.c1 HAVING MAX(LAST_INSERT_ROWID()) UNION ALL SELECT ALL t1.c1 FROM t1 GROUP BY t1.c1 HAVING (NOT (MAX(LAST_INSERT_ROWID()))) UNION ALL SELECT t1.c1 FROM t1 GROUP BY t1.c1 HAVING ((MAX(LAST_INSERT_ROWID())) ISNULL);
SELECT ALL t1.c1 FROM t1 GROUP BY t1.c1;
SELECT rt0.c1 FROM rt0;
SELECT ALL rt0.c1 FROM rt0 WHERE (CASE (((rt0.c2))=((rt0.c3)))  WHEN CAST(rt0.c0 AS REAL) THEN rt0.c2 END) UNION ALL SELECT rt0.c1 FROM rt0 WHERE ((NOT (CASE (((rt0.c2))==((rt0.c3)))  WHEN CAST(rt0.c0 AS REAL) THEN rt0.c2 END))) UNION ALL SELECT rt0.c1 FROM rt0 WHERE (((CASE (((rt0.c2))=((rt0.c3)))  WHEN CAST(rt0.c0 AS REAL) THEN rt0.c2 END) ISNULL));
SELECT rt0.c1 FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((((((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c3)))OR((rt0.c3 IN (rt0.c0)))))AND(rt0.c3))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((((((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c3)))OR((rt0.c3 IN (rt0.c0)))))AND(rt0.c3))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((((((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c3)))OR((rt0.c3 IN (rt0.c0)))))AND(rt0.c3))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c2, rt0.c3, rt0.c0, t1.c1, rt0.c1 FROM rt0, t1 GROUP BY rt0.c2, rt0.c3, rt0.c0, t1.c1, rt0.c1;
SELECT ALL rt0.c2, rt0.c3, rt0.c0, t1.c1, rt0.c1 FROM rt0, t1 WHERE (x'') GROUP BY rt0.c2, rt0.c3, rt0.c0, t1.c1, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c3, rt0.c0, t1.c1, rt0.c1 FROM rt0, t1 WHERE ((NOT (x''))) GROUP BY rt0.c2, rt0.c3, rt0.c0, t1.c1, rt0.c1 UNION SELECT rt0.c2, rt0.c3, rt0.c0, t1.c1, rt0.c1 FROM rt0, t1 WHERE (((x'') ISNULL)) GROUP BY rt0.c2, rt0.c3, rt0.c0, t1.c1, rt0.c1;
SELECT rt0.c2, rt0.c3, rt0.c0, t1.c1, rt0.c1 FROM rt0, t1 GROUP BY rt0.c2, rt0.c3, rt0.c0, t1.c1, rt0.c1;
SELECT rt0.c3, rt0.c1, t1.c1 FROM rt0, t1 GROUP BY rt0.c3, rt0.c1, t1.c1;
SELECT rt0.c3, rt0.c1, t1.c1 FROM rt0, t1 GROUP BY rt0.c3, rt0.c1, t1.c1 HAVING MIN(TOTAL(rt0.c1)) UNION ALL SELECT ALL rt0.c3, rt0.c1, t1.c1 FROM rt0, t1 GROUP BY rt0.c3, rt0.c1, t1.c1 HAVING (NOT (MIN(TOTAL(rt0.c1)))) UNION ALL SELECT ALL rt0.c3, rt0.c1, t1.c1 FROM rt0, t1 GROUP BY rt0.c3, rt0.c1, t1.c1 HAVING ((MIN(TOTAL(rt0.c1))) ISNULL);
SELECT * FROM rt0, t1;
SELECT * FROM rt0, t1 WHERE ((((((rt0.c2)AND(rt0.c1)))AND(rt0.c3)) IN ())) UNION ALL SELECT ALL * FROM rt0, t1 WHERE ((NOT ((((((rt0.c2)AND(rt0.c1)))AND(rt0.c3)) IN ())))) UNION ALL SELECT ALL * FROM rt0, t1 WHERE ((((((((rt0.c2)AND(rt0.c1)))AND(rt0.c3)) IN ())) ISNULL));
SELECT * FROM rt0, t1;
SELECT DISTINCT rt0.c1, t1.c1, rt0.c2, rt0.c0, rt0.c3 FROM rt0, t1;
SELECT DISTINCT rt0.c1, t1.c1, rt0.c2, rt0.c0, rt0.c3 FROM rt0, t1 WHERE (((rt0.c0) NOT BETWEEN (((((t1.c1)AND(rt0.c2)))AND(rt0.c1))) AND (((rt0.c2)>>(x''))))) UNION SELECT DISTINCT rt0.c1, t1.c1, rt0.c2, rt0.c0, rt0.c3 FROM rt0, t1 WHERE ((NOT (((rt0.c0) NOT BETWEEN (((((t1.c1)AND(rt0.c2)))AND(rt0.c1))) AND (((rt0.c2)>>(x''))))))) UNION SELECT DISTINCT rt0.c1, t1.c1, rt0.c2, rt0.c0, rt0.c3 FROM rt0, t1 WHERE (((((rt0.c0) NOT BETWEEN (((((t1.c1)AND(rt0.c2)))AND(rt0.c1))) AND (((rt0.c2)>>(x''))))) ISNULL));
SELECT DISTINCT rt0.c1, t1.c1, rt0.c2, rt0.c0, rt0.c3 FROM rt0, t1;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0, t1 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0, t1 WHERE (CAST(t1.c1 AS NUMERIC)) GROUP BY rt0.c2, rt0.c0, rt0.c1 UNION SELECT ALL rt0.c2, rt0.c0, rt0.c1 FROM rt0, t1 WHERE ((NOT (CAST(t1.c1 AS NUMERIC)))) GROUP BY rt0.c2, rt0.c0, rt0.c1 UNION SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0, t1 WHERE (((CAST(t1.c1 AS NUMERIC)) ISNULL)) GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT rt0.c2, rt0.c0, rt0.c1 FROM rt0, t1 GROUP BY rt0.c2, rt0.c0, rt0.c1;
SELECT ALL rt0.c2, rt0.c0 FROM rt0, t1 GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0, t1 GROUP BY rt0.c2, rt0.c0 HAVING (MAX(rt0.c1) IN (MIN(rt0.c2), ((rt0.c0) BETWEEN (rt0.c3) AND (GROUP_CONCAT(rt0.c1))))) UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM rt0, t1 GROUP BY rt0.c2, rt0.c0 HAVING (NOT ((MAX(rt0.c1) IN (MIN(rt0.c2), ((rt0.c0) BETWEEN (rt0.c3) AND (GROUP_CONCAT(rt0.c1))))))) UNION ALL SELECT rt0.c2, rt0.c0 FROM rt0, t1 GROUP BY rt0.c2, rt0.c0 HAVING (((MAX(rt0.c1) IN (MIN(rt0.c2), ((rt0.c0) BETWEEN (rt0.c3) AND (GROUP_CONCAT(rt0.c1)))))) ISNULL);
SELECT ALL rt0.c2, rt0.c0 FROM rt0, t1 GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c2, rt0.c0 FROM rt0, t1 GROUP BY rt0.c2, rt0.c0 HAVING (MAX(rt0.c1) IN (MIN(rt0.c2), ((rt0.c0) BETWEEN (rt0.c3) AND (GROUP_CONCAT(rt0.c1))))) UNION ALL SELECT ALL rt0.c2, rt0.c0 FROM rt0, t1 GROUP BY rt0.c2, rt0.c0 HAVING (NOT ((MAX(rt0.c1) IN (MIN(rt0.c2), ((rt0.c0) BETWEEN (rt0.c3) AND (GROUP_CONCAT(rt0.c1))))))) UNION ALL SELECT rt0.c2, rt0.c0 FROM rt0, t1 GROUP BY rt0.c2, rt0.c0 HAVING (((MAX(rt0.c1) IN (MIN(rt0.c2), ((rt0.c0) BETWEEN (rt0.c3) AND (GROUP_CONCAT(rt0.c1)))))) ISNULL);
SELECT ALL rt0.c2, rt0.c0 FROM rt0, t1 GROUP BY rt0.c2, rt0.c0;
SELECT ALL rt0.c1, rt0.c2, t1.c1, rt0.c0, rt0.c3 FROM rt0, t1;
SELECT rt0.c1, rt0.c2, t1.c1, rt0.c0, rt0.c3 FROM rt0, t1 WHERE (CASE WHEN rt0.c0 THEN load_extension(t1.c1) END) UNION ALL SELECT ALL rt0.c1, rt0.c2, t1.c1, rt0.c0, rt0.c3 FROM rt0, t1 WHERE ((NOT (CASE WHEN rt0.c0 THEN load_extension(t1.c1) END))) UNION ALL SELECT ALL rt0.c1, rt0.c2, t1.c1, rt0.c0, rt0.c3 FROM rt0, t1 WHERE (((CASE WHEN rt0.c0 THEN load_extension(t1.c1) END) ISNULL));
SELECT DISTINCT * FROM t1;
SELECT DISTINCT * FROM t1 WHERE (t1.c1) UNION SELECT DISTINCT * FROM t1 WHERE ((NOT (t1.c1))) UNION SELECT DISTINCT * FROM t1 WHERE (((t1.c1) ISNULL));
SELECT DISTINCT * FROM t1;
SELECT ALL rt0.c3, rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c3, rt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c3, rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((CASE rt0.c3  WHEN rt0.c2 THEN rt0.c0 ELSE x'' END IN ())) GROUP BY rt0.c3, rt0.c0, rt0.c2, rt0.c1 UNION SELECT rt0.c3, rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((NOT ((CASE rt0.c3  WHEN rt0.c2 THEN rt0.c0 ELSE x'' END IN ())))) GROUP BY rt0.c3, rt0.c0, rt0.c2, rt0.c1 UNION SELECT ALL rt0.c3, rt0.c0, rt0.c2, rt0.c1 FROM rt0 WHERE ((((CASE rt0.c3  WHEN rt0.c2 THEN rt0.c0 ELSE x'' END IN ())) ISNULL)) GROUP BY rt0.c3, rt0.c0, rt0.c2, rt0.c1;
SELECT ALL rt0.c3, rt0.c0, rt0.c2, rt0.c1 FROM rt0 GROUP BY rt0.c3, rt0.c0, rt0.c2, rt0.c1;
SELECT rt0.c3, rt0.c1 FROM rt0 GROUP BY rt0.c3, rt0.c1;
SELECT ALL rt0.c3, rt0.c1 FROM rt0 GROUP BY rt0.c3, rt0.c1 HAVING TOTAL(MIN(rt0.c3)) UNION ALL SELECT rt0.c3, rt0.c1 FROM rt0 GROUP BY rt0.c3, rt0.c1 HAVING (NOT (TOTAL(MIN(rt0.c3)))) UNION ALL SELECT ALL rt0.c3, rt0.c1 FROM rt0 GROUP BY rt0.c3, rt0.c1 HAVING ((TOTAL(MIN(rt0.c3))) ISNULL);
SELECT MAX(((((rt0.c0 IN ())))<((((rt0.c3) ISNULL))))) FROM rt0;
SELECT ALL * FROM t1;
SELECT ALL * FROM t1 WHERE (((CASE t1.c1  WHEN t1.c1 THEN t1.c1 ELSE t1.c1 END) BETWEEN ((+ (t1.c1))) AND (((((((((t1.c1)OR(t1.c1)))AND(t1.c1)))AND(NULL)))OR(t1.c1))))) UNION ALL SELECT ALL * FROM t1 WHERE ((NOT (((CASE t1.c1  WHEN t1.c1 THEN t1.c1 ELSE t1.c1 END) BETWEEN ((+ (t1.c1))) AND (((((((((t1.c1)OR(t1.c1)))AND(t1.c1)))AND(NULL)))OR(t1.c1))))))) UNION ALL SELECT ALL * FROM t1 WHERE (((((CASE t1.c1  WHEN t1.c1 THEN t1.c1 ELSE t1.c1 END) BETWEEN ((+ (t1.c1))) AND (((((((((t1.c1)OR(t1.c1)))AND(t1.c1)))AND(NULL)))OR(t1.c1))))) ISNULL));
SELECT ALL * FROM t1;
SELECT DISTINCT * FROM t1;
SELECT DISTINCT * FROM t1 WHERE (CASE WHEN 'OUcxZ(s&>' THEN ((t1.c1)==(t1.c1)) ELSE x'' END) UNION SELECT DISTINCT * FROM t1 WHERE ((NOT (CASE WHEN 'OUcxZ(s&>' THEN ((t1.c1)==(t1.c1)) ELSE x'' END))) UNION SELECT DISTINCT * FROM t1 WHERE (((CASE WHEN 'OUcxZ(s&>' THEN ((t1.c1)=(t1.c1)) ELSE x'' END) ISNULL));
SELECT DISTINCT * FROM t1;
SELECT ALL t1.c1 FROM t1 GROUP BY t1.c1;
SELECT t1.c1 FROM t1 WHERE ((NOT ((- (t1.c1))))) GROUP BY t1.c1 UNION SELECT t1.c1 FROM t1 WHERE ((NOT ((NOT ((- (t1.c1))))))) GROUP BY t1.c1 UNION SELECT t1.c1 FROM t1 WHERE ((((NOT ((- (t1.c1))))) ISNULL)) GROUP BY t1.c1;
SELECT ALL t1.c1 FROM t1 GROUP BY t1.c1;
SELECT ALL rt0.c1 FROM t1 FULL OUTER JOIN rt0 ON (((rt0.c1, t1.c1, rt0.c2, rt0.c2, t1.c1)) NOT BETWEEN (((((rt0.c3))<>((t1.c1))), (((rt0.c2))>((rt0.c1))), (+ (rt0.c2)), ((((t1.c1)OR(rt0.c3)))OR(rt0.c2)), '')) AND (((~ (rt0.c1)), CASE WHEN rt0.c0 THEN rt0.c1 END, ((rt0.c1)%(rt0.c1)), CAST(rt0.c2 AS INTEGER), '513009845'))) GROUP BY rt0.c1;
SELECT rt0.c1 FROM t1 FULL OUTER JOIN rt0 ON (((rt0.c1, t1.c1, rt0.c2, rt0.c2, t1.c1)) NOT BETWEEN (((((rt0.c3))<>((t1.c1))), (((rt0.c2))>((rt0.c1))), (+ (rt0.c2)), ((((t1.c1)OR(rt0.c3)))OR(rt0.c2)), '')) AND (((~ (rt0.c1)), CASE WHEN rt0.c0 THEN rt0.c1 END, ((rt0.c1)%(rt0.c1)), CAST(rt0.c2 AS INTEGER), '513009845'))) GROUP BY rt0.c1 HAVING COUNT(*) UNION ALL SELECT rt0.c1 FROM t1 FULL OUTER JOIN rt0 ON (((rt0.c1, t1.c1, rt0.c2, rt0.c2, t1.c1)) NOT BETWEEN (((((rt0.c3))<>((t1.c1))), (((rt0.c2))>((rt0.c1))), (+ (rt0.c2)), ((((t1.c1)OR(rt0.c3)))OR(rt0.c2)), '')) AND (((~ (rt0.c1)), CASE WHEN rt0.c0 THEN rt0.c1 END, ((rt0.c1)%(rt0.c1)), CAST(rt0.c2 AS INTEGER), '513009845'))) GROUP BY rt0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c1 FROM t1 FULL OUTER JOIN rt0 ON (((rt0.c1, t1.c1, rt0.c2, rt0.c2, t1.c1)) NOT BETWEEN (((((rt0.c3))!=((t1.c1))), (((rt0.c2))>((rt0.c1))), (+ (rt0.c2)), ((((t1.c1)OR(rt0.c3)))OR(rt0.c2)), '')) AND (((~ (rt0.c1)), CASE WHEN rt0.c0 THEN rt0.c1 END, ((rt0.c1)%(rt0.c1)), CAST(rt0.c2 AS INTEGER), '513009845'))) GROUP BY rt0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c1 FROM t1 FULL OUTER JOIN rt0 ON (((rt0.c1, t1.c1, rt0.c2, rt0.c2, t1.c1)) NOT BETWEEN (((((rt0.c3))<>((t1.c1))), (((rt0.c2))>((rt0.c1))), (+ (rt0.c2)), ((((t1.c1)OR(rt0.c3)))OR(rt0.c2)), '')) AND (((~ (rt0.c1)), CASE WHEN rt0.c0 THEN rt0.c1 END, ((rt0.c1)%(rt0.c1)), CAST(rt0.c2 AS INTEGER), '513009845'))) GROUP BY rt0.c1;
SELECT rt0.c1 FROM t1 FULL OUTER JOIN rt0 ON (((rt0.c1, t1.c1, rt0.c2, rt0.c2, t1.c1)) NOT BETWEEN (((((rt0.c3))<>((t1.c1))), (((rt0.c2))>((rt0.c1))), (+ (rt0.c2)), ((((t1.c1)OR(rt0.c3)))OR(rt0.c2)), '')) AND (((~ (rt0.c1)), CASE WHEN rt0.c0 THEN rt0.c1 END, ((rt0.c1)%(rt0.c1)), CAST(rt0.c2 AS INTEGER), '513009845'))) GROUP BY rt0.c1 HAVING COUNT(*) UNION ALL SELECT rt0.c1 FROM t1 FULL OUTER JOIN rt0 ON (((rt0.c1, t1.c1, rt0.c2, rt0.c2, t1.c1)) NOT BETWEEN (((((rt0.c3))<>((t1.c1))), (((rt0.c2))>((rt0.c1))), (+ (rt0.c2)), ((((t1.c1)OR(rt0.c3)))OR(rt0.c2)), '')) AND (((~ (rt0.c1)), CASE WHEN rt0.c0 THEN rt0.c1 END, ((rt0.c1)%(rt0.c1)), CAST(rt0.c2 AS INTEGER), '513009845'))) GROUP BY rt0.c1 HAVING (NOT (COUNT(*))) UNION ALL SELECT ALL rt0.c1 FROM t1 FULL OUTER JOIN rt0 ON (((rt0.c1, t1.c1, rt0.c2, rt0.c2, t1.c1)) NOT BETWEEN (((((rt0.c3))!=((t1.c1))), (((rt0.c2))>((rt0.c1))), (+ (rt0.c2)), ((((t1.c1)OR(rt0.c3)))OR(rt0.c2)), '')) AND (((~ (rt0.c1)), CASE WHEN rt0.c0 THEN rt0.c1 END, ((rt0.c1)%(rt0.c1)), CAST(rt0.c2 AS INTEGER), '513009845'))) GROUP BY rt0.c1 HAVING ((COUNT(*)) ISNULL);
SELECT ALL rt0.c1 FROM t1 FULL OUTER JOIN rt0 ON (((rt0.c1, t1.c1, rt0.c2, rt0.c2, t1.c1)) NOT BETWEEN (((((rt0.c3))<>((t1.c1))), (((rt0.c2))>((rt0.c1))), (+ (rt0.c2)), ((((t1.c1)OR(rt0.c3)))OR(rt0.c2)), '')) AND (((~ (rt0.c1)), CASE WHEN rt0.c0 THEN rt0.c1 END, ((rt0.c1)%(rt0.c1)), CAST(rt0.c2 AS INTEGER), '513009845'))) GROUP BY rt0.c1;
SELECT ALL rt0.c1, rt0.c0 FROM rt0, t1;
SELECT rt0.c1, rt0.c0 FROM rt0, t1 WHERE (((CHAR('887510204')) IS TRUE)) UNION ALL SELECT ALL rt0.c1, rt0.c0 FROM rt0, t1 WHERE ((NOT (((CHAR('887510204')) IS TRUE)))) UNION ALL SELECT ALL rt0.c1, rt0.c0 FROM rt0, t1 WHERE (((((CHAR('887510204')) IS TRUE)) ISNULL));
SELECT ALL rt0.c1, rt0.c0 FROM rt0, t1;
SELECT DISTINCT * FROM rt0, t1;
SELECT DISTINCT * FROM rt0, t1 WHERE ((~ ((NOT (rt0.c2))))) UNION SELECT DISTINCT * FROM rt0, t1 WHERE ((NOT ((~ ((NOT (rt0.c2))))))) UNION SELECT DISTINCT * FROM rt0, t1 WHERE ((((~ ((NOT (rt0.c2))))) ISNULL));
SELECT DISTINCT * FROM rt0, t1;
SELECT rt0.c3, t1.c1 FROM rt0, t1 GROUP BY rt0.c3, t1.c1;
SELECT ALL rt0.c3, t1.c1 FROM rt0, t1 WHERE (((((('1626659320'))<=((rt0.c0))))*((+ (rt0.c3))))) GROUP BY rt0.c3, t1.c1 UNION SELECT ALL rt0.c3, t1.c1 FROM rt0, t1 WHERE ((NOT (((((('1626659320'))<=((rt0.c0))))*((+ (rt0.c3))))))) GROUP BY rt0.c3, t1.c1 UNION SELECT ALL rt0.c3, t1.c1 FROM rt0, t1 WHERE (((((((('1626659320'))<=((rt0.c0))))*((+ (rt0.c3))))) ISNULL)) GROUP BY rt0.c3, t1.c1;
SELECT rt0.c3, t1.c1 FROM rt0, t1 GROUP BY rt0.c3, t1.c1;
SELECT ALL t1.c1, rt0.c1, rt0.c0, rt0.c2, rt0.c3 FROM rt0, t1 GROUP BY t1.c1, rt0.c1, rt0.c0, rt0.c2, rt0.c3;
SELECT t1.c1, rt0.c1, rt0.c0, rt0.c2, rt0.c3 FROM rt0, t1 GROUP BY t1.c1, rt0.c1, rt0.c0, rt0.c2, rt0.c3 HAVING MAX(TOTAL(rt0.c0) COLLATE RTRIM) UNION ALL SELECT t1.c1, rt0.c1, rt0.c0, rt0.c2, rt0.c3 FROM rt0, t1 GROUP BY t1.c1, rt0.c1, rt0.c0, rt0.c2, rt0.c3 HAVING (NOT (MAX(TOTAL(rt0.c0) COLLATE RTRIM))) UNION ALL SELECT t1.c1, rt0.c1, rt0.c0, rt0.c2, rt0.c3 FROM rt0, t1 GROUP BY t1.c1, rt0.c1, rt0.c0, rt0.c2, rt0.c3 HAVING ((MAX(TOTAL(rt0.c0) COLLATE RTRIM)) ISNULL);
SELECT ALL * FROM rt0;
SELECT ALL * FROM rt0 WHERE ((((NOT (rt0.c0))) NOT BETWEEN (((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c2))) AND (((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2))))) UNION ALL SELECT ALL * FROM rt0 WHERE ((NOT ((((NOT (rt0.c0))) NOT BETWEEN (((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c2))) AND (((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2))))))) UNION ALL SELECT * FROM rt0 WHERE ((((((NOT (rt0.c0))) NOT BETWEEN (((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c2))) AND (((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2))))) ISNULL));
SELECT ALL * FROM rt0;
SELECT DISTINCT * FROM rt0;
SELECT DISTINCT * FROM rt0 WHERE (((((rt0.c1) NOTNULL))GLOB(((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c3))))) UNION SELECT DISTINCT * FROM rt0 WHERE ((NOT (((((rt0.c1) NOTNULL))GLOB(((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c3))))))) UNION SELECT DISTINCT * FROM rt0 WHERE (((((((rt0.c1) NOTNULL))GLOB(((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c3))))) ISNULL));
SELECT DISTINCT * FROM rt0;
SELECT rt0.c0, rt0.c1, rt0.c3, t1.c1, rt0.c2 FROM t1 INNER JOIN rt0 ON TRIM(DISTINCT ((t1.c1) BETWEEN (rt0.c0) AND (rt0.c0)), (((rt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c2)))) GROUP BY rt0.c0, rt0.c1, rt0.c3, t1.c1, rt0.c2;
SELECT rt0.c0, rt0.c1, rt0.c3, t1.c1, rt0.c2 FROM t1 INNER JOIN rt0 ON TRIM(DISTINCT ((t1.c1) BETWEEN (rt0.c0) AND (rt0.c0)), (((rt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c2)))) WHERE (((((rt0.c0)||(rt0.c3))) IS TRUE)) GROUP BY rt0.c0, rt0.c1, rt0.c3, t1.c1, rt0.c2 UNION SELECT rt0.c0, rt0.c1, rt0.c3, t1.c1, rt0.c2 FROM t1 INNER JOIN rt0 ON TRIM(DISTINCT ((t1.c1) BETWEEN (rt0.c0) AND (rt0.c0)), (((rt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c2)))) WHERE ((NOT (((((rt0.c0)||(rt0.c3))) IS TRUE)))) GROUP BY rt0.c0, rt0.c1, rt0.c3, t1.c1, rt0.c2 UNION SELECT ALL rt0.c0, rt0.c1, rt0.c3, t1.c1, rt0.c2 FROM t1 INNER JOIN rt0 ON TRIM(DISTINCT ((t1.c1) BETWEEN (rt0.c0) AND (rt0.c0)), (((rt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c2)))) WHERE (((((((rt0.c0)||(rt0.c3))) IS TRUE)) ISNULL)) GROUP BY rt0.c0, rt0.c1, rt0.c3, t1.c1, rt0.c2;
SELECT rt0.c0, rt0.c1, rt0.c3, t1.c1, rt0.c2 FROM t1 INNER JOIN rt0 ON TRIM(DISTINCT ((t1.c1) BETWEEN (rt0.c0) AND (rt0.c0)), (((rt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c2)))) GROUP BY rt0.c0, rt0.c1, rt0.c3, t1.c1, rt0.c2;
SELECT ALL rt0.c3, rt0.c0, rt0.c1 FROM rt0 INNER JOIN t1 ON (((rt0.c1) ISNULL) IN (x'', ((rt0.c2) IS FALSE))) GROUP BY rt0.c3, rt0.c0, rt0.c1;
SELECT ALL rt0.c3, rt0.c0, rt0.c1 FROM rt0 INNER JOIN t1 ON (((rt0.c1) ISNULL) IN (x'', ((rt0.c2) IS FALSE))) GROUP BY rt0.c3, rt0.c0, rt0.c1 HAVING TOTAL(SUM(AVG(COUNT(*)))) UNION ALL SELECT ALL rt0.c3, rt0.c0, rt0.c1 FROM rt0 INNER JOIN t1 ON (((rt0.c1) ISNULL) IN (x'', ((rt0.c2) IS FALSE))) GROUP BY rt0.c3, rt0.c0, rt0.c1 HAVING (NOT (TOTAL(SUM(AVG(COUNT(*)))))) UNION ALL SELECT rt0.c3, rt0.c0, rt0.c1 FROM rt0 INNER JOIN t1 ON (((rt0.c1) ISNULL) IN (x'', ((rt0.c2) IS FALSE))) GROUP BY rt0.c3, rt0.c0, rt0.c1 HAVING ((TOTAL(SUM(AVG(COUNT(*))))) ISNULL);
SELECT * FROM rt0, t1;
SELECT ALL * FROM rt0, t1 WHERE (((((rt0.c3) BETWEEN (t1.c1) AND (rt0.c2))) IS FALSE)) UNION ALL SELECT ALL * FROM rt0, t1 WHERE ((NOT (((((rt0.c3) BETWEEN (t1.c1) AND (rt0.c2))) IS FALSE)))) UNION ALL SELECT ALL * FROM rt0, t1 WHERE (((((((rt0.c3) BETWEEN (t1.c1) AND (rt0.c2))) IS FALSE)) ISNULL));
SELECT * FROM rt0, t1;
SELECT DISTINCT t1.c1 FROM t1;
SELECT DISTINCT t1.c1 FROM t1 WHERE (UNLIKELY(DISTINCT LOWER(t1.c1))) UNION SELECT DISTINCT t1.c1 FROM t1 WHERE ((NOT (UNLIKELY(DISTINCT LOWER(t1.c1))))) UNION SELECT DISTINCT t1.c1 FROM t1 WHERE (((UNLIKELY(DISTINCT LOWER(t1.c1))) ISNULL));
SELECT DISTINCT t1.c1 FROM t1;
SELECT rt0.c1 FROM t1 RIGHT OUTER JOIN rt0 ON rt0.c2 GROUP BY rt0.c1;
SELECT rt0.c1 FROM t1 RIGHT OUTER JOIN rt0 ON rt0.c2 WHERE ((((+ (rt0.c3))) IS FALSE)) GROUP BY rt0.c1 UNION SELECT ALL rt0.c1 FROM t1 RIGHT OUTER JOIN rt0 ON rt0.c2 WHERE ((NOT ((((+ (rt0.c3))) IS FALSE)))) GROUP BY rt0.c1 UNION SELECT rt0.c1 FROM t1 RIGHT OUTER JOIN rt0 ON rt0.c2 WHERE ((((((+ (rt0.c3))) IS FALSE)) ISNULL)) GROUP BY rt0.c1;
SELECT rt0.c1 FROM t1 RIGHT OUTER JOIN rt0 ON rt0.c2 GROUP BY rt0.c1;
SELECT rt0.c2, rt0.c1 FROM rt0 NATURAL JOIN t1 GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c2, rt0.c1 FROM rt0 NATURAL JOIN t1 GROUP BY rt0.c2, rt0.c1 HAVING rt0.c3 UNION ALL SELECT rt0.c2, rt0.c1 FROM rt0 NATURAL JOIN t1 GROUP BY rt0.c2, rt0.c1 HAVING (NOT (rt0.c3)) UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM rt0 NATURAL JOIN t1 GROUP BY rt0.c2, rt0.c1 HAVING ((rt0.c3) ISNULL);
SELECT rt0.c2, rt0.c1 FROM rt0 NATURAL JOIN t1 GROUP BY rt0.c2, rt0.c1;
SELECT rt0.c2, rt0.c1 FROM rt0 NATURAL JOIN t1 GROUP BY rt0.c2, rt0.c1 HAVING rt0.c3 UNION ALL SELECT rt0.c2, rt0.c1 FROM rt0 NATURAL JOIN t1 GROUP BY rt0.c2, rt0.c1 HAVING (NOT (rt0.c3)) UNION ALL SELECT ALL rt0.c2, rt0.c1 FROM rt0 NATURAL JOIN t1 GROUP BY rt0.c2, rt0.c1 HAVING ((rt0.c3) ISNULL);
SELECT rt0.c2, rt0.c1 FROM rt0 NATURAL JOIN t1 GROUP BY rt0.c2, rt0.c1;
SELECT ALL rt0.c1, rt0.c0 FROM rt0;
SELECT ALL rt0.c1, rt0.c0 FROM rt0 WHERE (((IFNULL(rt0.c2, NULL)) NOT BETWEEN (((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c2))) AND (((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1))))) UNION ALL SELECT rt0.c1, rt0.c0 FROM rt0 WHERE ((NOT (((IFNULL(rt0.c2, NULL)) NOT BETWEEN (((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c2))) AND (((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1))))))) UNION ALL SELECT rt0.c1, rt0.c0 FROM rt0 WHERE (((((IFNULL(rt0.c2, NULL)) NOT BETWEEN (((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c2))) AND (((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1))))) ISNULL));
SELECT ALL rt0.c1, rt0.c0 FROM rt0;
